add
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
xchg
xchg
xchg
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
fcoml
xchg
xchg
nop
nop
nop
nop
nop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
jmp
jmp
jmp
fidivs
xor
xor
xor
je
je
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sub
nop
nop
nop
nop
nop
nop
cmp
cmp
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
test
test
test
test
test
test
test
test
test
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
add
add
add
outsb
outsb
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
int
or
or
or
or
or
or
jns
jns
jns
jns
jns
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
arpl
arpl
arpl
arpl
arpl
test
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
sti
sti
sti
sti
sti
sti
sti
sbb
sbb
sbb
xchg
xchg
xchg
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
push
push
push
push
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
movb
addl
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addb
addb
addb
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
inc
inc
inc
inc
inc
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sub
sub
nop
nop
nop
nop
nop
nop
int3
int3
int3
int3
int3
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
repnz
repnz
repnz
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
repz
repz
nop
nop
nop
nop
nop
nop
nop
nop
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
pop
pop
pop
pop
dec
dec
dec
dec
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
sub
sub
sub
sub
sub
mov
mov
mov
mov
mov
sbb
sbb
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
mov
imul
imul
imul
imul
imul
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
dec
dec
dec
dec
dec
dec
dec
jmp
jmp
jmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
test
test
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
out
out
out
gs
jne
jne
jne
jne
jne
jne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cli
cli
cli
cli
cli
cli
cli
cli
cli
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jp
jp
jp
jp
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
and
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addr16
addr16
addr16
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
sub
sub
sub
sub
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
test
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
sbb
popf
popf
popf
popf
popf
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
int3
int3
int3
int3
int3
int3
int3
int3
int3
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
push
push
push
push
push
push
push
push
push
push
push
test
test
test
test
test
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
fcmovnu
fcmovnu
fcmovnu
fcmovnu
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
or
or
or
or
or
outsl
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
sbb
sbb
sbb
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
nop
nop
jle
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
push
push
push
push
push
push
push
push
push
push
push
push
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
push
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
rcl
rcl
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jp
jp
jp
jp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
addl
addl
addl
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
ljmp
and
and
icebp
icebp
icebp
icebp
pfcmpge
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
test
test
repnz
repnz
repnz
repnz
repnz
repnz
repnz
inc
inc
inc
inc
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
into
into
into
into
into
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
jnp
jnp
jnp
jnp
jnp
jnp
jnp
mov
or
or
or
adc
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
fstp
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
lret
lret
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmc
cmc
cmc
cmc
cmc
cmc
cmc
ss
ss
ss
ss
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
div
div
div
div
div
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
daa
daa
daa
daa
daa
daa
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
ja
ja
ja
ja
ja
ja
ja
ja
ud2
or
or
or
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fdivrs
jns
jns
jns
jns
jns
jns
jns
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
xlat
xlat
xlat
xlat
xlat
xlat
mov
mov
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
or
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ja
ja
ja
ja
js
js
js
js
js
js
js
js
js
js
js
js
js
lods
lods
lods
lods
lods
lods
lods
lods
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
loop
loop
loop
loop
loop
loop
loop
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
jg
jg
jg
jg
jg
jg
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
nop
nop
nop
nop
and
and
and
and
and
and
and
and
and
and
bound
bound
push
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
dec
dec
dec
dec
dec
dec
dec
repz
nop
nop
nop
nop
nop
nop
nop
nop
fcmovnu
fcmovnu
fcmovnu
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cltd
cltd
cltd
cltd
cltd
cltd
cltd
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lods
lods
lods
lods
lods
lods
lods
popf
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
repz
nop
nop
nop
nop
nop
nop
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
dec
jbe
jbe
jbe
jbe
jbe
add
add
add
xor
xor
xor
xor
xor
xor
sahf
sahf
sahf
sahf
sahf
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
jb
rcl
rcl
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
addb
addb
addb
or
or
or
or
or
or
or
or
or
or
or
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jg
jg
jg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
mov
mov
mov
mov
call
call
call
call
call
call
call
call
call
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
stc
stc
stc
stc
stc
stc
stc
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
enter
insb
insb
insb
insb
insb
insb
insb
insb
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jae
jae
jae
jae
jae
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
in
in
in
in
in
in
in
in
in
in
in
nop
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
xor
outsl
outsl
outsl
outsl
outsl
outsl
es
es
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ljmp
ljmp
ljmp
adc
adc
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
sub
sub
sub
sub
sub
nop
nop
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
jmp
jmp
jmp
jmp
jmp
jmp
add
add
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jmp
out
out
out
mov
mov
mov
mov
mov
mov
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
insb
insb
nop
jmp
jmp
jmp
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
in
in
in
nop
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
jnp
jnp
jnp
jnp
jnp
jnp
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
push
push
push
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rcl
rcl
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
lock
lock
lock
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
and
and
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
in
in
in
in
in
jmp
rcl
rcl
rcl
rcl
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
inc
inc
inc
inc
inc
inc
inc
inc
inc
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
nop
nop
nop
nop
nop
fisubs
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
call
call
call
call
call
call
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
ss
ss
ss
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
addl
addl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
ds
arpl
arpl
arpl
arpl
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
addr16
addr16
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
addb
addb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
je
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
or
or
or
or
or
or
or
or
fdivl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
and
and
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
into
into
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
data16
data16
data16
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
xor
xor
xor
xor
xor
sahf
sahf
nop
nop
nop
nop
nop
nop
cmp
push
add
fdivrl
mov
add
popa
adc
xchg
out
pushf
push
dec
pop
mov
mov
popa
pushf
fisubrs
scas
add
cmp
mov
add
or
add
add
pop
xor
add
or
add
incb
into
imul
jne
jmp
les
xchg
jo
push
lcall
inc
ret
add
xchg
pop
jnp
jae
push
cmp
add
mov
add
or
add
or
add
leave
sti
adc
fwait
cmp
lods
out
dec
mov
mov
adc
adc
sarl
mov
inc
add
xchg
add
insl
test
mov
loope
add
or
dec
loopne
mov
add
sarl
add
sbb
adc
add
test
add
inc
in
insb
addb
imul
addr16
adc
and
add
or
add
cmpsb
add
sbb
scas
add
outsl
out
cwtl
cld
leave
out
add
clc
inc
jecxz
frstor
add
add
sub
mov
push
call
or
iret
cmp
add
cmp
pop
das
lcall
cmpsb
add
mov
data16
add
popa
outsb
xchg
add
add
test
xor
bound
mov
cmp
jo
movsb
add
inc
shrl
adc
pop
jns
jp
shrb
add
push
add
mov
push
in
fcoml
push
add
rcrb
cmp
add
decb
mov
cmp
xchg
ficomps
add
scas
rorl
add
jg
push
dec
or
xchg
pusha
pcmpgtd
ds
popa
pop
adc
ret
gs
sahf
lock
add
pop
dec
inc
dec
not
sub
add
mov
add
adc
add
mov
add
incl
icebp
jae
add
or
add
add
stos
add
push
jg
cmp
pop
inc
stc
push
lea
scas
add
jge
inc
pop
xor
fists
loopne
jle
dec
pop
adcl
dec
cmc
daa
pop
loop
negl
xchg
inc
xor
int
adc
inc
cld
mov
insl
pop
repnz
fmull
push
add
test
repnz
add
jl
fdivr
dec
xor
lea
jl
out
mov
add
or
add
or
add
pop
and
loop
cli
aaa
mov
push
aam
mov
fistpll
out
jg
cmc
stos
add
repnz
out
mov
add
dec
nop
or
jmp
jno
repnz
les
sbb
mov
addr16
aaa
mov
add
jnp
loope
push
sub
adc
cli
jbe
decl
add
pop
jns
add
inc
cmp
cmp
mov
add
aad
add
mov
loopne
add
iret
mov
dec
mov
add
add
pop
imul
pop
pop
jmp
xchg
shl
mov
mov
add
arpl
daa
int
and
fdivr
pop
pop
lods
ja
cmp
sbb
jbe
rcl
adc
jp
pop
stc
xchg
add
dec
repnz
daa
adc
and
add
or
add
cmpsb
add
lret
ret
add
dec
mov
std
mov
pop
fidivs
pop
in
add
mov
inc
mov
sbb
add
popf
addb
or
mov
popa
fbld
add
pusha
xchg
fsts
add
mov
jo
imul
or
add
ret
push
jl
leave
mov
add
add
data16
ja
ljmp
mov
mov
cmpl
add
lods
cmp
mov
push
add
push
adc
add
repz
add
mov
or
out
add
cmp
xor
or
add
jne
add
cmp
leave
add
add
je,pt
xchg
inc
push
mov
mov
sahf
pop
cli
or
add
push
das
push
inc
dec
add
inc
clc
mov
mov
dec
ds
out
repz
faddl
stos
xchg
mov
lret
nop
or
add
test
and
add
fcompl
outsb
push
lcall
mov
add
inc
data16
mov
add
incl
xlat
or
add
xor
xlat
mov
fwait
pop
push
mov
ja
mov
bnd
frstor
enter
fwait
pop
dec
pushl
cmp
inc
data16
add
xchg
sub
add
push
add
or
cmpsb
add
add
faddl
add
jo
push
test
add
add
add
insb
icebp
movsl
dec
mov
inc
mov
ret
in
fmull
add
in
pop
jge
add
push
xchg
sub
and
mov
jae
adc
inc
mov
add
fwait
jp
add
inc
or
nop
mov
sti
and
inc
cltd
pushf
mov
mov
add
sbb
lret
subl
add
je
dec
cli
aas
popa
mov
lret
mov
loope
data16
push
or
add
add
test
adc
fadd
jle
push
mov
popa
xchg
sbb
pop
stc
insl
das
xchg
and
push
sub
shll
push
shlb
inc
jnp
jnp
mov
movsl
cmp
mov
add
jae
xchg
adc
add
add
and
add
pushf
jle
mov
lahf
out
sub
add
shlb
inc
pusha
push
xor
add
and
add
add
idivl
add
sbb
mov
add
xchg
popf
or
add
and
add
sbb
add
in
insl
xchg
cmp
add
add
add
addb
cmpsw
dec
iret
xor
jle
pushf
fldt
add
das
mov
insl
push
sub
jae
mov
xchg
add
add
int3
loop
pop
xchg
fiadds
add
enter
xchg
imul
add
add
sti
push
scas
pop
and
add
rolb
mov
add
sahf
pop
ret
add
mov
add
push
adc
xchg
imul
xchg
add
shlb
nop
pop
xchg
jbe
iret
int3
lods
add
fimull
mov
jge
jge
ljmp
add
add
fiadds
add
in
jl
mov
pop
cmp
add
loopne
leave
std
inc
pop
mov
add
cmovs
and
add
jecxz
dec
sub
add
add
add
rorb
add
mov
inc
mov
repnz
lods
add
mov
add
sub
add
mov
mov
add
data16
xchg
mov
add
add
test
or
add
addb
pop
xor
push
in
or
add
mov
ljmp
add
cmp
nop
push
add
jne
test
pop
in
xor
add
or
and
add
push
ss
scas
xchg
jbe
fisttps
add
in
loopne
scas
add
imul
add
icebp
push
jne
hlt
ljmp
add
int3
scas
add
test
add
out
inc
ja
or
add
and
add
dec
mov
or
add
addb
repnz
inc
stc
loopne
push
fs
xchg
loop
add
push
insl
in
cmp
pop
jle
or
add
add
jecxz
outsb
inc
xchg
add
xchg
test
add
adc
stc
ret
jl
add
sub
addr16
jbe
sbb
cmpl
and
call
add
mov
cld
ffree
mov
mov
xchg
decb
lahf
pop
rcll
add
and
insb
sbb
jmp
push
xor
add
insb
jnp
popf
pop
xchg
fldcw
xchg
push
jbe
add
aaa
jle
jo
cmp
popa
cwtl
rol
sub
dec
jmp
adc
mov
in
dec
cmp
mov
push
xchg
inc
xchg
inc
dec
mov
add
pop
fldenv
jne
jae
or
add
pop
mov
aas
ret
or
scas
add
shlb
add
adc
jp
xor
stos
mov
hlt
out
stos
mov
daa
les
mov
add
arpl
movsb
add
popa
sub
add
cmp
cmp
js
and
add
push
sarb
mov
push
pop
jo
addb
jp
jge
test
add
rcll
dec
or
push
lret
mov
add
or
xchg
dec
ja
inc
sub
add
cwtl
sbb
and
pop
mov
jno
mov
inc
stos
add
cltd
and
mov
add
inc
sub
add
pushf
leave
dec
int
std
out
adc
add
shrb
repz
add
repz
mov
outsl
test
jp
sub
add
xchg
out
push
icebp
mov
hlt
xchg
outsl
inc
push
movsl
pop
outsb
xchg
add
xchg
popa
adc
add
dec
cmp
sbb
fdivrl
hlt
je
addb
add
add
inc
pop
pop
dec
fnstsw
mov
add
in
inc
in
in
cmp
in
sti
shlb
insb
call
dec
push
or
add
mov
add
pop
push
insl
testb
add
xor
pop
arpl
jle
add
sahf
sub
add
adc
add
aaa
or
add
aam
add
jb
ffree
add
add
data16
add
arpl
dec
add
add
out
addb
les
jp
pop
outsb
xchg
add
mov
jo
inc
dec
scas
add
out
mov
out
inc
movsl
dec
sbb
push
or
add
add
fildll
adc
gs
adc
xchg
fcoms
or
add
add
andl
add
pop
xor
pop
xchg
sub
add
sbb
xchg
add
das
sub
add
loopne
add
xchg
mov
add
dec
addb
fdivl
add
and
test
sub
add
aas
push
sti
sub
add
popa
out
rol
data16
test
mov
bound
push
or
add
jo
add
mov
ss
inc
add
add
add
jp
enter
mov
or
and
dec
mov
daa
imul
xlat
sub
add
aaa
sub
test
add
jle
les
add
add
gs
lret
inc
std
xchg
inc
pop
adc
mov
add
add
and
call
cmp
test
add
or
add
pop
popf
jmp
sbb
pop
rcrl
mov
add
mov
popf
gs
int3
stos
add
push
sbbl
stc
ja
xchg
add
adc
addb
push
add
ret
lods
add
insl
jg
je
loop
xchg
lret
cmpl
add
mov
sarl
add
pusha
inc
scas
dec
xor
sbb
or
xchg
mov
pop
sub
mov
js
add
jae
lock
jb
outsb
mov
mov
test
add
add
cmp
jnp
clc
dec
mov
scas
add
or
dec
adc
add
cwtl
mov
push
shrb
pop
add
inc
fwait
nop
negb
pusha
mov
outsb
or
jmp
insb
into
mov
les
pop
jb
bnd
xchg
add
int3
je,pt
scas
add
int3
xlat
movsb
add
mov
int3
jge
add
negl
add
mov
add
aaa
sbb
ficoms
insl
aaa
adc
addb
inc
sbb
add
adc
inc
pop
jg
dec
push
mov
add
popa
or
add
jne
or
add
sbb
jmp
out
adc
popa
add
sub
or
in
jae
cmpl
test
add
scas
add
cli
sub
sub
add
add
mov
add
or
add
scas
mov
dec
xlat
lods
daa
push
add
shlb
stc
jnp
test
add
int
inc
push
cmp
push
add
push
add
push
xor
stos
add
gs
popf
loopne
mov
scas
in
xchg
add
add
dec
inc
mov
or
add
add
push
in
xor
add
jbe
add
mov
add
add
iret
addr16
or
add
mov
adc
clc
mov
out
pop
imul
pusha
imul
adc
fs
je
xor
push
cmp
loope
add
jg
jg
add
repnz
aaa
sbb
lahf
mov
ja
shrl
add
add
push
jbe
jge
pop
ljmp
rorl
xchg
jge
std
idivl
add
stc
adc
sub
add
push
or
adc
and
add
loop
mov
mov
into
imul
icebp
in
cltd
in
lea
jo
outsb
sub
and
mov
fwait
sbb
add
inc
ss
call
mov
add
add
roll
add
fwait
lret
mov
bound
dec
pop
lods
add
scas
sbb
pushf
push
lahf
inc
fistpl
dec
add
inc
clc
sub
add
loopne
mov
shll
add
cmp
pop
test
add
mov
add
sbb
add
fmuls
add
xor
jb
fs
mov
xor
fcomip
int
cld
xor
mov
pop
dec
sbb
add
add
add
data16
add
pop
sub
loop
xchg
push
aad
ret
ljmp
mov
mov
pop
sbb
shll
insb
push
insb
aam
dec
dec
add
push
push
insl
jmp
add
mov
add
jnp
push
xchg
stos
add
adc
pop
mov
cli
and
add
in
fdivs
dec
pop
call
shlb
bound
ror
add
shl
xor
jg
add
push
or
mov
aaa
push
jns
sbbl
dec
sti
jbe
icebp
loop
inc
sbb
or
add
dec
adc
movl
add
or
cltd
dec
pop
add
add
dec
aam
push
xchg
add
mov
or
add
cmp
add
in
test
add
fistps
add
add
add
in
add
or
test
add
add
vunpckhps
hlt
out
scas
add
shrb
and
add
push
call
add
mov
inc
lret
cmp
adc
clc
roll
add
pop
fsts
sub
add
out
stos
popa
sub
inc
sahf
fstpt
iret
adc
add
pop
jae
mov
add
jae
or
cmp
sub
add
dec
leave
dec
ja
leave
push
push
xor
outsl
xchg
daa
lods
sahf
cmp
rcl
in
add
push
add
mov
bound
add
jnp
add
add
das
dec
lods
add
add
add
jmp
add
pop
xchg
ljmp
add
outsb
jne
add
xchg
jmp
rorb
call
xchg
mov
call
add
push
dec
ss
jmp
inc
sbb
fdivrl
add
lahf
lods
add
inc
xor
inc
cmpsb
add
insb
testb
imul
outsl
and
add
sahf
sahf
mov
push
mov
push
addb
js
xchg
fiaddl
mov
out
xchg
or
cmp
inc
movb
add
push
mov
addb
stos
cmpsl
push
add
inc
jmp
pop
mov
cld
outsl
push
or
add
add
jb
mov
add
add
add
add
add
jecxz
popf
add
add
aaa
lret
sbb
add
push
add
push
xchg
add
fildll
xlat
nop
mov
faddl
pusha
das
push
add
jne
pop
mov
lock
lret
sbb
cltd
push
fnclex
xchg
add
rolb
add
pop
cld
add
or
ds
dec
test
mov
push
sub
add
mov
add
inc
mov
test
add
movsl
and
mov
inc
insl
xor
test
mov
add
sbb
test
add
fdivrl
jge
addb
jnp
mov
aam
xchg
jge
add
ret
jb
cmpsl
out
xchg
xchg
ljmp
testl
pop
inc
ret
mov
dec
les
lods
add
shlb
dec
or
add
addb
sbb
push
clc
and
add
jge
insl
cmp
add
add
push
lahf
and
add
inc
mov
mov
mov
add
sarl
add
add
add
jmp
sbb
leave
mov
sarb
cwtl
mov
test
sbb
insl
int
add
pop
aaa
in
push
mov
shlb
addb
leave
push
imul
xor
xchg
xchg
xchg
jp
pushl
sub
add
pop
in
add
cwtl
pop
jne
pop
sub
add
dec
push
push
mov
inc
lea
enter
loopne
je
xor
mov
cmp
cmp
mov
mov
add
sbb
lcall
ja
ret
lods
pop
in
in
outsl
mov
add
push
add
stos
add
push
add
add
bound
lcall
ss
pusha
adc
in
add
xchg
gs
sbb
out
lret
mov
add
jp
jo
popf
arpl
inc
out
repz
loopne
add
nop
dec
gs
pop
sub
jns
add
cmpsb
add
das
pop
icebp
sbb
add
aam
add
fcmovbe
ret
insl
jnp
cld
test
dec
xor
adc
adc
pop
testb
mov
add
nop
push
cmp
and
add
push
add
push
loopne
add
add
add
fcmovb
addr16
int
mov
mov
add
ficoms
sbb
mov
punpckhbw
xor
mov
push
jp
outsl
call
ja
lock
loope
mov
add
out
and
lea
add
in
test
nop
mov
add
push
jge
jg
pop
pop
test
add
inc
mov
add
cli
cmp
into
je
dec
sarl
lahf
mov
add
sbb
int3
pop
push
mov
pxor
jmp
jmp
xor
xchg
add
push
fsubs
hlt
ror
shlb
test
add
mov
test
add
loope
in
xor
sarb
add
sbb
cmc
enter
cmp
shlb
add
out
adc
push
add
pushf
lock
pop
add
add
dec
addr16
cmp
sbb
cmp
push
cmp
out
xchg
add
xchg
out
pop
pop
ljmp
add
js
add
inc
addb
adc
ja
das
inc
push
orl
mov
cmpsl
mov
xrelease
repnz
aaa
cmpsl
aas
shll
pop
cmp
dec
pop
addr16
push
add
jo
dec
cwtl
pop
sub
adc
add
mov
xchg
fldcw
add
notb
cmp
fisttpll
sbb
sub
add
jp
or
jnp
add
cli
pop
mov
pushf
ljmp
add
add
hlt
pop
repz
lds
cmpsl
fstps
out
addb
pop
and
jo
mov
add
and
add
jbe
rcr
pushf
cmp
sub
add
inc
push
and
jle
dec
out
aas
fidivs
add
mov
pop
sbb
xor
add
aaa
lock
or
inc
xchg
jle
inc
in
sbb
xor
addr16
mov
mov
in
fs
add
enter
add
add
outsb
repnz
sbb
push
test
and
push
xchg
xor
movsl
mov
add
lret
icebp
jno
add
sub
add
enter
nop
aad
mov
add
scas
add
and
repz
add
lock
lahf
rcr
sub
add
dec
adc
cmp
int3
xchg
insl
mov
dec
dec
cli
les
xlat
add
add
and
add
popf
repz
outsb
sub
xor
push
push
aam
mov
in
jno
push
into
sti
ret
sub
add
lds
jmp
pop
jg
add
xor
sub
add
insl
arpl
in
add
icebp
aas
xchg
add
push
add
mov
dec
outsl
xor
out
mov
lock
loope
xchg
sbb
add
xchg
jge
adc
mov
add
sub
add
movsl
dec
add
add
fwait
dec
adc
xor
popa
gs
dec
addr16
popf
pop
xor
add
rcl
fldln2
hlt
loopne
and
add
cmp
push
mov
xor
xlat
sub
add
xor
lods
add
outsb
aas
push
xchg
ret
add
outsb
clc
mov
add
int
pop
aam
repz
aam
mov
fsubrs
sub
lahf
lods
lds
mov
decl
add
add
add
decl
ljmp
adc
add
dec
add
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
xor
cmp
cmp
add
mov
dec
push
add
sbb
in
jne
loope
inc
ficoml
cmp
inc
and
mov
cwtl
fsubl
popa
scas
add
aad
add
xchg
add
insb
mov
add
mov
push
jp
mov
shrb
add
or
add
sub
leave
jle
add
sbb
add
sti
jp
add
fstpt
in
push
call
mov
test
add
pop
jns
push
fldl
mulb
xchg
fistl
pop
stc
idivb
add
repnz
repnz
std
push
xchg
cmp
jmp
jmp
outsb
roll
add
xor
mov
test
add
scas
not
clc
push
stos
mov
add
in
push
aam
mov
lods
add
mov
add
push
fbstp
jmp
or
add
add
add
in
push
add
mov
pop
cmp
add
mov
add
add
pop
xchg
sub
add
add
mov
loop
pop
sbb
mov
aad
xor
data16
rclb
cmp
lds
daa
loopne
cmp
xor
mov
xchg
rcrl
pop
cmp
and
into
out
add
push
jbe
add
sti
pop
into
push
add
movsl
fs
mov
push
add
push
xchg
push
mov
add
dec
xchg
cmp
movsl
fwait
roll
add
add
add
add
or
popf
cmp
adc
lahf
push
add
movsb
add
mov
lods
add
inc
ja
mov
ret
push
add
xlat
addb
add
add
jecxz
jb
dec
sub
fadds
push
push
add
sti
rcrl
pushf
xor
add
aas
push
pmulhuw
add
adc
add
cltd
scas
pop
movsb
add
fadd
in
ja
add
fstps
add
add
or
inc
stos
lret
lds
addb
rclb
cmpsl
cmp
mov
test
add
add
adc
shll
sbb
sbb
add
jne
int3
mov
push
mov
mov
popa
and
add
or
add
enter
add
pop
icebp
fs
imul
add
loopne
testl
add
iret
addl
mov
xor
add
popf
dec
inc
repnz
add
mov
add
mov
add
add
add
iret
aas
xchg
loopne
int3
jecxz
mov
jp
cld
adc
or
add
ret
dec
add
mov
cmpsb
add
in
rcrl
xchg
gs
add
add
add
sbb
test
insb
scas
push
fimuls
cmpsl
aam
add
pop
in
lods
add
leave
bound
enter
or
add
aam
mov
imul
jmp
lods
mov
mov
out
aaa
aaa
mov
addb
fs
dec
xchg
cmc
add
popa
loope
or
add
fisttps
into
movsb
add
mov
or
add
jno
in
ja
adc
popa
addr16
add
pop
pushf
mov
add
cmp
in
cltd
cmp
addr16
xor
xchg
pusha
loopne
add
add
cmc
fnstcw
ret
dec
xor
add
mov
clc
add
dec
or
ja
sahf
ja
in
jg
dec
sahf
movsb
add
ret
dec
or
pop
daa
and
add
addb
xchg
adc
sahf
shll
stos
add
and
add
mov
push
jb
add
xchg
sahf
mov
add
bswap
mov
stc
dec
popa
ficoml
cmc
adc
push
lods
out
mov
and
add
aas
cmp
push
nop
loop
std
jo
add
sbb
xor
movsb
add
cmp
ja
out
dec
shll
add
push
cmp
addb
lea
add
jg
mov
pop
pop
jg
and
add
push
sub
add
jne
push
mov
pop
mov
shl
and
add
js
add
in
add
shrb
add
loopne
dec
inc
push
or
add
je
iret
shlb
dec
push
lahf
movsl
popf
fstp
icebp
in
cmpsl
dec
jge
push
mov
lds
je
test
add
out
jp
stc
shrb
dec
adc
push
mov
add
dec
inc
xchg
ret
aad
push
adc
and
add
push
jg
or
add
xlat
out
mov
notl
ret
dec
arpl
aam
filds
stc
sarl
aad
jl
and
add
addb
outsb
cwtl
xlat
xchg
xchg
add
clc
pop
xchg
sbb
aaa
cmp
movsl
orl
lahf
push
add
add
test
rclb
rorl
mov
scas
add
inc
xorl
test
add
mov
popa
filds
add
insb
jne
testl
mov
lods
add
pop
mov
pop
imul
ret
addb
test
add
je
and
add
inc
xor
xchg
add
scas
out
xor
cld
sbb
push
sub
insb
cmp
add
lock
jl
xchg
add
pop
out
add
je
xchg
xor
or
fisubrl
add
sbb
cmp
addb
pop
inc
jbe
jbe
jp
pop
aas
inc
stc
jecxz
adc
mov
jge
lods
fsubl
das
mov
add
rcl
jg
aaa
jp
push
sbb
loop
sbb
add
push
sbb
xlat
sbb
and
add
add
cli
scas
push
xlat
mov
add
in
out
jno
jecxz
add
xchg
inc
out
mov
sbb
dec
outsl
add
add
pop
int3
push
xbegin
shrb
add
jg
add
push
or
out
adcl
divb
dec
enter
loopne
mov
xchg
out
and
add
adc
in
lcall
in
or
add
lock
adc
jle
in
outsb
pop
pop
shl
arpl
add
or
add
int3
xlat
mov
idiv
call
mov
aad
rcll
push
lcall
mov
add
lea
int
in
mov
cld
adc
aad
iret
insl
daa
sarb
jo
jne
int
xor
iret
testb
push
adc
sbb
lret
dec
adc
add
mov
add
xchg
cmc
pop
and
add
pop
outsb
jmp
add
xchg
sbb
xor
or
add
add
ss
inc
mov
add
mov
leave
rorl
add
xchg
cmp
push
add
add
mov
and
add
pop
lds
xchg
sub
ret
fsub
jl
xchg
xor
add
push
mov
add
pop
sub
and
mov
add
stos
add
into
push
call
push
insb
das
ja
pop
call
add
stos
push
add
outsb
push
mov
lea
jmp
mov
call
xor
push
mov
mov
jae
xchg
add
mov
add
add
lods
add
addb
aad
aam
push
aam
push
add
addr16
into
cmp
aam
ret
std
fisubl
add
and
add
jg
shl
add
push
xchg
cmpl
push
outsb
dec
xchg
mov
imulb
xchg
inc
icebp
rcr
stc
imul
inc
dec
mov
dec
decl
add
sub
add
and
dec
std
inc
jb
xchg
mov
jp
pop
in
adc
fwait
sbb
hlt
fs
dec
xor
add
fs
call
cmpsb
add
daa
ja
je
dec
je
mov
xchg
into
loop
adc
dec
or
ss
or
add
and
jle
add
or
dec
cmp
add
add
testb
mov
fwait
and
add
lods
push
fwait
add
add
push
adc
xchg
add
add
outsb
lds
xchg
jg
mov
ljmp
enter
add
addb
lret
mov
out
lahf
jne
push
jmp
mov
add
pop
hlt
mov
add
add
pop
mov
jp
mov
add
mov
add
push
sbb
popa
ret
push
les
roll
add
or
xchg
jp
mov
add
or
add
push
mov
rorb
add
cmpsb
add
rcrb
sub
add
js
int3
popa
adc
faddp
dec
pushf
shll
ret
add
inc
lret
test
lea
sub
add
xor
mov
add
or
imul
add
sar
rcll
in
ljmp
xor
pop
jnp
mov
and
add
int
popa
fimull
or
add
adc
jne
cmpsl
lds
jecxz
outsl
cltd
fs
pop
mov
push
in
push
add
add
push
add
sarb
cmp
pushf
ret
add
add
je
pop
adc
shl
and
add
add
push
add
xlat
insl
pop
pop
popa
sbb
lcall
xchg
sub
add
and
add
mov
add
sub
add
cmpsl
inc
ljmp
stc
push
stos
add
in
mov
push
lods
and
les
in
addr16
outsl
push
fiadds
dec
dec
mov
add
testl
push
adc
into
mov
fildll
xor
data16
inc
adc
push
add
ret
loope
jg
mov
movsb
add
or
fwait
mov
sti
add
add
add
inc
test
add
scas
jecxz
das
stc
test
fmul
out
or
push
jge
dec
push
clc
adc
cmp
pop
mov
xlat
cli
push
push
inc
xor
add
adc
add
push
add
sarl
add
aam
or
add
add
push
je
negb
add
add
add
lret
mov
fiadds
and
lcall
pop
jecxz
xor
add
mov
loope
insb
push
xor
add
in
imul
std
push
sbb
in
pop
ljmp
mov
mov
jge
stos
aam
add
xor
push
insb
mov
imul
xor
add
aaa
inc
mov
add
xchg
and
add
sbb
cli
test
add
xlat
insb
cmp
xlat
push
inc
lods
js
test
dec
stc
iret
push
dec
and
sub
daa
push
in
out
outsb
cmc
sti
push
push
pop
add
add
xchg
in
leave
inc
mov
out
jae
loope
sub
cmpsl
jb
jne
fdivl
push
lods
cmp
aam
repnz
push
push
hlt
mov
add
sub
add
xor
jl
jae
and
add
lret
dec
testl
leave
cmpl
ficomps
push
jge
pop
xchg
push
iret
mov
add
pop
inc
in
push
pop
shlb
ficoml
shrl
jae
add
fildl
inc
cmc
dec
std
jb
aaa
jmp
jns
mov
into
loopne
leave
jnp
cmp
loope
add
mov
add
js
std
mov
cmp
push
add
mov
test
add
stos
add
jo
mov
add
and
mov
ds
adc
iret
inc
int
popf
sub
add
jge
out
or
add
or
fimull
jp
movl
add
add
loope
add
and
testb
ss
iret
dec
aad
cli
adc
in
sub
add
mov
jno
xor
fsub
nop
gs
add
cmp
dec
inc
fadds
add
pop
or
jns
or
jle
inc
inc
dec
adc
bound
mov
xor
repz
add
dec
lret
pushf
mov
addl
mov
popa
cli
movsl
das
and
add
jbe
std
lea
mov
xchg
sti
push
aam
pop
push
cmp
add
gs
dec
jnp
out
dec
lret
add
ja
cmp
scas
rcl
lock
ficompl
repz
mov
add
dec
ficoms
or
sbb
dec
inc
fdivl
pop
xchg
mov
mov
add
add
and
mov
fs
mov
inc
pop
test
movsl
into
pop
mov
rorb
add
rol
xorl
dec
jae
std
pop
rorl
push
push
and
add
push
movsb
add
jo
sub
add
into
jno
subl
add
enter
add
mov
rcr
je
mov
mov
ret
data16
test
les
cmpsl
aad
add
add
add
push
mov
test
add
in
addr16
mov
out
leave
sbb
imul
loope
loop
stos
add
or
xor
in
int3
xor
add
or
add
add
cld
out
in
push
add
in
fcmovnb
dec
sub
add
add
mov
push
push
lock
ret
push
shr
pop
mov
and
pop
pusha
jmp
xchg
sbb
int
cmp
std
push
push
push
ds
pop
test
nop
cli
andl
mov
sbb
and
aam
and
add
insl
mov
call
aam
test
add
dec
lcall
jle
add
pop
roll
test
lock
add
add
ret
lea
push
lcall
icebp
shrl
push
mov
or
xor
hlt
hlt
add
arpl
ret
add
add
mul
shl
lock
pop
add
and
inc
mov
jl
dec
arpl
xchg
lods
ret
out
int3
ret
test
add
popa
in
test
add
mov
add
cwtl
pop
pusha
and
or
add
rolb
xor
pusha
mov
add
cmp
add
int
add
dec
das
scas
add
xchg
in
add
fstpl
adc
adc
fsts
pop
hlt
push
add
jne
in
add
add
add
loop
add
das
push
clc
repnz
nop
nop
jae
imul
add
push
mov
xchg
ret
add
notl
pop
clc
repnz
nop
nop
jae
mov
add
fildl
add
cmpsl
add
clc
repnz
nop
nop
jae
add
je
add
jmp
jne
push
mov
xchg
ret
scas
add
add
add
mov
xchg
ret
add
add
repz
add
mov
cmp
nop
push
mov
leave
nop
jmp
icebp
fildl
mov
add
nop
push
mov
leave
nop
jmp
add
add
inc
int3
or
add
add
clc
repnz
nop
nop
jae
add
add
add
nop
jae
add
orl
add
repnz
nop
nop
jae
add
add
aad
sbb
nop
push
mov
leave
nop
jmp
add
repz
add
repnz
nop
nop
jae
add
add
add
rcll
cld
nop
nop
jae
repz
xor
add
adc
imul
clc
repnz
nop
nop
jae
sahf
daa
add
or
add
jmp
adc
repnz
nop
nop
jae
jecxz
mov
jnp
dec
cmp
push
mov
leave
nop
jmp
add
orb
addb
add
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
shll
jnp
jne
push
mov
xchg
ret
add
cmc
jnp
add
mov
xchg
sarl
repnz
nop
nop
jae
cmc
int3
add
mov
clc
repnz
nop
nop
jae
ja
add
jecxz
repz
mov
xchg
ret
add
repz
imul
mov
clc
repnz
nop
nop
jae
int3
add
sahf
rdpmc
rclb
sub
and
add
mov
lcall
mov
xchg
ret
add
mov
inc
nop
test
add
je
nop
push
mov
leave
nop
jmp
add
idivl
push
mov
ror
add
aaa
push
lds
and
pop
addl
add
mov
xchg
ret
adc
add
testl
add
scas
fld1
clc
repnz
nop
nop
jae
add
add
add
orl
nop
nop
jae
add
roll
imul
add
jae
sahf
add
add
add
icebp
sub
lcall
add
repnz
nop
nop
jae
testl
clc
repnz
nop
nop
jae
ss
xchg
mov
xor
clc
repnz
nop
nop
jae
sbb
add
sub
mov
clc
repnz
nop
nop
jae
add
add
add
sub
add
add
out
rcll
push
mov
leave
nop
jmp
add
add
cmc
add
mov
xchg
ret
xor
push
adc
add
adcl
outsl
inc
add
mov
or
sub
int3
in
push
push
mov
xchg
ret
xchg
dec
jae
add
add
add
add
mov
sti
nop
push
mov
leave
nop
jmp
mov
add
push
lea
repnz
nop
nop
jae
add
inc
add
or
ss
sahf
cmpsl
push
push
mov
xchg
ret
pop
add
add
testl
push
mov
xchg
ret
jae
pop
imul
mov
mov
scas
add
inc
push
clc
repnz
nop
nop
jae
add
push
lcall
add
xchg
jae
add
repz
add
mov
add
xchg
push
clc
repnz
nop
nop
jae
add
add
add
add
add
clc
repnz
nop
nop
jae
add
jnp
popl
nop
push
mov
leave
nop
jmp
add
inc
xchg
lock
seto
in
leave
nop
jmp
add
leave
cmpw
nop
push
mov
leave
nop
jmp
add
sub
clc
scas
add
clc
repnz
nop
nop
jae
add
daa
push
add
jl
repz
push
mov
xchg
ret
add
add
mov
inc
push
mov
xchg
ret
add
inc
add
lods
add
sub
vmwrite
xchg
ret
add
add
lock
add
cld
nop
nop
jae
lock
push
add
mov
clc
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
add
int3
lcall
cld
nop
nop
jae
add
repz
and
add
dec
sub
repnz
nop
nop
jae
add
sub
outsl
add
clc
repnz
nop
nop
jae
lock
add
mov
add
jle
and
push
mov
xchg
ret
add
add
clc
repnz
nop
nop
jae
add
mov
add
adcb
jmp
add
add
mov
add
push
mov
xchg
ret
fildl
add
add
push
mov
push
filds
add
inc
outsl
add
test
pop
mov
push
mov
xchg
ret
repz
push
push
add
mov
xchg
push
mov
xchg
ret
add
add
sub
jae
add
add
clc
repnz
nop
nop
jae
int3
add
adcl
jae
icebp
lcall
adc
add
lret
fwait
clc
repnz
nop
nop
jae
add
ja
lock
dec
test
add
dec
add
push
mov
xchg
ret
jecxz
inc
data16
sub
add
mov
add
clc
repnz
nop
nop
jae
add
imulb
add
clc
repnz
nop
nop
jae
jae
adc
daa
pusha
clc
repnz
nop
nop
jae
int3
data16
mov
add
mov
push
mov
xchg
ret
add
add
and
add
xchg
mov
clc
repnz
nop
nop
jae
add
push
test
sti
push
mov
xchg
ret
mov
lcall
xor
clc
repnz
nop
nop
jae
or
add
add
lahf
mov
clc
repnz
nop
nop
jae
loope
add
orb
nop
push
mov
leave
nop
jmp
jp
roll
mov
repnz
nop
nop
jae
add
add
add
xchg
add
push
mov
xchg
ret
push
push
push
add
ja
in
and
mov
leave
nop
jmp
divl
add
dec
pop
nop
push
mov
leave
nop
jmp
sub
push
sub
repnz
nop
nop
jae
push
add
lcall
clc
repnz
nop
nop
jae
pop
sbb
sub
pop
mov
nop
push
mov
leave
nop
jmp
add
pop
sbb
add
add
nop
jmp
jp
int3
push
add
add
repnz
nop
nop
jae
int3
add
mov
mov
push
mov
xchg
ret
add
pop
inc
mov
xor
roll
mov
xchg
ret
sbb
not
mov
push
mov
xchg
ret
add
push
add
mov
or
pop
jle
add
add
push
push
popa
mov
push
mov
xchg
ret
data16
add
cmc
mov
clc
repnz
nop
nop
jae
push
add
add
push
clc
repnz
nop
nop
jae
inc
mov
push
push
add
inc
movsb
add
gs
clc
repnz
nop
nop
jae
push
xchg
popa
je
clc
repnz
nop
nop
jae
add
jae
xor
clc
repnz
nop
nop
jae
int3
scas
testl
pop
jne
clc
repnz
nop
nop
jae
xor
xchg
add
clc
repnz
nop
nop
jae
jae
scas
add
jp
fistpl
clc
repnz
nop
nop
jae
cs
add
pushf
mov
add
add
clc
repnz
nop
nop
jae
add
inc
fistpl
sub
repnz
nop
nop
jae
add
add
add
pop
clc
repnz
nop
nop
jae
lcall
add
add
push
and
push
mov
xchg
ret
add
add
int3
add
push
add
test
call
nop
jmp
add
add
sub
nop
nop
jae
inc
or
sub
imul
add
clc
repnz
nop
nop
jae
add
mov
inc
xchg
mov
nop
push
mov
leave
nop
jmp
push
add
fstps
mov
xchg
ret
andb
add
add
or
repnz
nop
nop
jae
add
lcall
mov
nop
push
mov
leave
nop
jmp
loope
mov
mov
jne
clc
repnz
nop
nop
jae
add
imul
nop
jae
pop
mov
add
inc
xor
mov
clc
repnz
nop
nop
jae
inc
push
sub
xchg
icebp
add
cld
nop
nop
jae
add
int3
add
cs
add
repnz
nop
nop
jae
mov
mull
ja
pop
add
add
nop
jmp
int3
xchg
inc
pushf
lds
push
mov
leave
nop
jmp
add
add
push
push
xchg
add
clc
repnz
nop
nop
jae
add
mov
sub
add
add
mov
fld1
push
mov
xchg
ret
add
add
add
or
nop
nop
jae
inc
add
add
add
push
mov
xchg
ret
int3
roll
add
add
idivl
sbb
push
mov
leave
nop
jmp
add
adc
nop
nop
jae
icebp
push
add
pop
das
add
clc
repnz
nop
nop
jae
inc
push
jae
fcomi
addl
and
repnz
nop
nop
jae
add
pand
clc
repnz
nop
nop
jae
add
mov
pop
add
add
mov
xchg
ret
lcall
jnp
dec
imul
nop
jae
sub
jp
test
ljmp
xchg
cmc
int3
cmc
add
sub
add
add
clc
repnz
nop
nop
jae
add
dec
icebp
mov
add
add
pop
push
mov
sub
jmp
xchg
loope
adc
add
adc
add
clc
repnz
nop
nop
jae
add
add
rorl
nop
nop
jae
add
int3
add
jg
xchg
clc
adc
lds
test
or
add
repnz
nop
nop
jae
cs
movsb
add
fucomp
into
push
add
mov
inc
int3
sub
add
add
push
lods
add
clc
repnz
nop
nop
jae
push
add
addb
mov
add
jl
out
mov
push
mov
xchg
ret
add
jnp
xor
clc
repnz
nop
nop
jae
add
add
mov
xchg
ret
inc
add
add
jne
clc
repnz
nop
nop
jae
add
xchg
jb
mov
nop
push
mov
leave
nop
jmp
ja
add
add
push
mov
xchg
ret
add
lcall
nop
inc
add
shl
add
add
repz
push
mov
xchg
ret
add
ja
jp
add
sub
add
jne
clc
repnz
nop
nop
jae
ja
addr16
push
out
jl
nop
push
mov
leave
nop
jmp
mov
iret
push
push
mov
xchg
ret
lock
add
mov
xchg
ret
sub
or
cmc
add
lods
add
repz
clc
repnz
nop
nop
jae
ja
add
popa
test
xchg
ret
add
add
int3
cs
ds
clc
repnz
nop
nop
jae
add
push
mov
push
mov
xchg
ret
cmc
add
mov
repnz
nop
nop
jae
inc
icebp
or
add
add
aad
clc
clc
repnz
nop
nop
jae
loope
add
addb
cltd
fistpl
push
mov
xchg
ret
inc
add
cmp
add
fimull
add
cmpl
nop
push
mov
leave
nop
jmp
sbb
lock
xor
clc
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
add
int3
cmc
add
inc
rcr
pop
push
mov
xchg
ret
inc
sahf
add
push
push
or
movsb
clc
repnz
nop
nop
jae
xorb
imul
mov
repnz
nop
nop
jae
add
roll
or
add
push
and
add
jns
clc
repnz
nop
nop
jae
addr16
outsb
pop
push
clc
repnz
nop
nop
jae
jae
add
add
add
mov
mov
clc
repnz
nop
nop
jae
add
add
pop
js
pop
clc
repnz
nop
nop
jae
add
push
scas
addr16
clc
repnz
nop
nop
jae
add
pop
sbb
test
pop
add
clc
repnz
nop
nop
jae
add
fildl
sti
clc
repnz
nop
nop
jae
add
add
add
pushl
push
mov
xchg
ret
add
add
sahf
add
cld
nop
nop
jae
jp
inc
add
fildl
add
pop
lods
clc
repnz
nop
nop
jae
add
cmc
sbb
testl
repnz
nop
nop
jae
add
add
mov
add
add
sub
repnz
nop
nop
jae
mov
add
sub
add
mov
nop
push
mov
leave
nop
jmp
mov
add
std
mov
xchg
ret
testl
cmc
jnp
sub
mov
mov
leave
nop
jmp
int3
add
dec
sub
ret
add
add
sbb
lcall
clc
repnz
nop
nop
jae
addb
mov
repnz
nop
nop
jae
cs
add
add
ljmp
xorps
xchg
ret
int3
sahf
ja
add
add
testl
lock
jnp
ja
clc
repnz
nop
nop
jae
add
add
or
add
nop
push
mov
leave
nop
jmp
push
inc
lcall
add
roll
repnz
nop
nop
jae
add
icebp
add
loope
pop
push
mov
xchg
ret
add
mov
add
aaa
add
clc
repnz
nop
nop
jae
add
xchg
cmc
movzwl
nop
push
mov
leave
nop
jmp
addb
add
je
xor
clc
repnz
nop
nop
jae
cmc
add
loopew
sar
repnz
nop
nop
jae
add
add
lock
in
or
add
push
clc
repnz
nop
nop
jae
add
jnp
cmp
mov
add
jecxz
lock
add
add
cmc
add
addb
scas
add
push
testl
nop
push
mov
leave
nop
jmp
add
mov
add
push
push
mov
xchg
ret
add
xorb
push
add
adc
add
jl
add
clc
repnz
nop
nop
jae
add
add
sub
clc
repnz
nop
nop
jae
add
jnp
jnp
push
mov
xchg
ret
lock
add
push
push
mov
xchg
ret
add
sub
add
add
clc
repnz
nop
nop
jae
add
scas
or
xchg
add
test
clc
repnz
nop
nop
jae
add
dec
jb
out
cmpl
cld
nop
nop
jae
add
idiv
testl
cld
nop
nop
jae
xor
mov
add
push
nop
push
mov
leave
nop
jmp
add
add
add
rcll
jmp
repz
push
adc
nop
nop
jae
jnp
fstpt
add
int3
cld
nop
nop
jae
add
add
add
xchg
sub
nop
push
mov
leave
nop
jmp
add
sbb
xor
nop
push
mov
leave
nop
jmp
imul
lock
cmp
call
clc
repnz
nop
nop
jae
add
sahf
loop
mov
nop
push
mov
leave
nop
jmp
pop
int3
testl
mov
push
mov
xchg
ret
sahf
sahf
add
int3
mov
out
movsb
add
or
add
adc
nop
jmp
add
ja
cmc
sbb
push
mov
xchg
ret
add
inc
add
add
jg
jae
cld
or
in
leave
nop
jmp
pop
jnp
icebp
ret
add
addb
add
cmc
ss
add
add
add
push
pop
je
clc
repnz
nop
nop
jae
ja
add
clc
repnz
nop
nop
jae
add
mov
add
mov
xchg
ret
add
add
mov
add
push
mov
xchg
ret
add
add
add
jmp
clc
repnz
nop
nop
jae
add
add
sbb
nop
jae
xchg
inc
add
lret
jl
xor
repnz
nop
nop
jae
data16
clc
repnz
nop
nop
jae
add
jae
daa
mov
mov
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
jecxz
sbb
or
push
mov
leave
nop
jmp
add
add
or
clc
repnz
nop
nop
jae
lcall
enter
nop
nop
jae
sub
data16
leave
sub
repnz
nop
nop
jae
add
add
cmp
push
fisubrl
in
leave
nop
jmp
addr16
add
push
inc
and
add
testl
jmp
add
add
jecxz
aad
inc
or
nop
jmp
sahf
adc
add
repnz
nop
nop
jae
jecxz
add
add
pause
push
mov
leave
nop
jmp
jae
add
add
daa
dec
mov
clc
repnz
nop
nop
jae
sbb
sbb
clc
repnz
nop
nop
jae
add
repz
mov
clc
repnz
nop
nop
jae
add
inc
mov
idivl
add
pop
lcall
nop
jae
add
add
add
lcall
add
add
sub
daa
repz
add
xchg
mov
push
nop
push
mov
leave
nop
jmp
cmc
add
add
nop
pusha
sbb
xorl
clc
repnz
nop
nop
jae
inc
cmc
push
call
clc
repnz
nop
nop
jae
add
xchg
adc
icebp
nop
push
mov
leave
nop
jmp
jae
add
repz
imul
xchg
inc
add
add
daa
xchg
add
les
add
add
repnz
nop
nop
jae
mov
xchg
jb
and
and
clc
repnz
nop
nop
jae
scas
dec
int3
mov
xbegin
jae
add
icebp
push
mov
push
mov
xchg
ret
jp
add
add
push
mov
leave
nop
jmp
repz
mov
add
mov
fistpl
clc
repnz
nop
nop
jae
add
fwait
clc
repnz
nop
nop
jae
sbb
imul
ljmp
cld
nop
nop
jae
loope
inc
jecxz
or
mov
andl
nop
nop
jae
repz
lcall
clc
repnz
nop
nop
jae
inc
int3
add
repnz
nop
nop
jae
inc
sub
add
nop
push
mov
leave
nop
jmp
mov
inc
sbb
clc
repnz
nop
nop
jae
inc
lock
call
leave
nop
jmp
add
ss
add
lcall
add
repnz
nop
nop
jae
add
loope
add
mov
push
mov
xchg
ret
adc
lcall
cli
in
aam
mov
push
mov
xchg
ret
testl
clc
repnz
nop
nop
jae
add
inc
add
clc
repnz
nop
nop
jae
jecxz
add
add
idivl
add
clc
repnz
nop
nop
jae
inc
imul
imul
in
clc
repnz
nop
nop
jae
mov
add
mov
cld
nop
nop
jae
mov
add
call
mov
mov
nop
push
mov
leave
nop
jmp
adc
add
add
ljmp
cld
nop
nop
jae
add
add
fidivrl
dec
mov
rep
clc
repnz
nop
nop
jae
sub
push
push
add
outsl
push
nop
push
mov
leave
nop
jmp
add
add
add
loope
push
xor
cld
nop
nop
jae
add
add
jnp
jnp
push
mov
imul
add
sarb
mov
add
xchg
add
clc
repnz
nop
nop
jae
int3
pop
add
add
out
jmp
divl
add
add
icebp
pop
add
add
add
fisttpll
add
repnz
nop
nop
jae
addr16
hlt
daa
mov
push
mov
xchg
ret
add
add
icebp
fistpl
push
mov
xchg
ret
ja
add
add
push
xor
nop
nop
jae
mov
add
add
cmp
call
inc
add
jp
xchg
int3
push
repz
dec
clc
repnz
nop
nop
jae
xchg
int3
add
cwtl
ljmp
repnz
nop
nop
jae
jae
push
sbb
add
push
push
mov
xchg
ret
add
fistpl
imul
mov
xchg
ret
inc
add
jp
cs
jg
daa
repz
clc
repnz
nop
nop
jae
add
popa
inc
add
imul
add
add
leave
nop
push
mov
leave
nop
jmp
pop
lcall
sub
add
jne
push
mov
xchg
ret
add
sahf
sub
inc
mov
push
mov
xchg
ret
add
add
add
add
dec
nop
push
mov
leave
nop
jmp
jae
sahf
add
add
and
add
in
pop
push
mov
xchg
ret
or
cmc
add
pop
out
pop
push
mov
xchg
ret
add
add
fildl
icebp
inc
add
xchg
inc
add
add
add
adc
cld
nop
nop
jae
daa
jae
add
shrl
add
jg
sti
clc
repnz
nop
nop
jae
add
inc
negl
add
js
add
pop
mov
clc
repnz
nop
nop
jae
add
mov
rep
nop
push
mov
leave
nop
jmp
int3
ja
inc
cmc
mov
add
nop
push
mov
leave
nop
jmp
add
add
push
clc
repnz
nop
nop
jae
addb
add
or
pop
mov
clc
repnz
nop
nop
jae
add
adc
add
cmpsb
add
xor
repnz
nop
nop
jae
add
repz
push
clc
repnz
nop
nop
jae
add
fcmovne
pop
imul
clc
repnz
nop
nop
jae
mov
push
add
mov
test
repnz
nop
nop
jae
int3
add
jg
sahf
inc
out
push
mov
out
xchg
int
pop
jg
inc
ljmp
add
clc
repnz
nop
nop
jae
sbbb
add
and
nop
push
mov
leave
nop
jmp
sahf
inc
testl
jmp
add
daa
fstpl
mov
xchg
ret
data16
cmc
add
adc
add
dec
sub
add
not
push
mov
xchg
ret
add
add
add
add
clc
dec
push
push
mov
xchg
ret
add
add
jnp
fldt
push
mov
leave
nop
jmp
lock
mov
ret
clc
repnz
nop
nop
jae
add
int3
imul
lea
nop
push
mov
leave
nop
jmp
add
mov
add
lods
add
adc
clc
repnz
nop
nop
jae
inc
mov
add
add
fwait
push
mov
xchg
ret
or
add
or
add
fwait
push
mov
xchg
ret
adc
add
add
add
in
leave
nop
jmp
add
jae
add
sahf
add
xlat
xor
nop
push
mov
leave
nop
jmp
add
int3
inc
add
outsl
mov
clc
repnz
nop
nop
jae
jae
add
push
mov
leave
nop
jmp
add
add
adcb
cmpsl
push
nop
push
mov
leave
nop
jmp
jg
mov
add
adc
nop
jae
roll
clc
repnz
nop
nop
jae
int3
add
add
repnz
nop
nop
jae
inc
add
inc
add
test
add
arpl
repnz
nop
nop
jae
add
jnp
cmp
jle
in
mov
clc
repnz
nop
nop
jae
inc
add
mov
push
clc
repnz
nop
nop
jae
mov
add
add
lock
xchg
call
clc
repnz
nop
nop
jae
or
add
push
clc
repnz
nop
nop
jae
add
jnp
sub
int3
cli
mov
mov
clc
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
roll
add
int3
add
shll
jne
clc
repnz
nop
nop
jae
add
rcrb
push
clc
repnz
nop
nop
jae
xor
loope
sub
imul
push
mov
xchg
ret
add
add
mov
add
rcrl
jae
push
add
xchg
cld
pop
scas
add
and
mov
xchg
ret
add
add
cmp
push
int
adc
push
mov
xchg
ret
dec
int3
add
add
push
mov
add
fistpl
clc
repnz
nop
nop
jae
icebp
mov
add
add
pusha
clc
repnz
nop
nop
jae
fistl
imul
mov
add
sub
nop
nop
jae
add
testl
add
nop
jae
add
add
sub
leave
mov
clc
repnz
nop
nop
jae
add
movsb
add
loop
push
nop
push
mov
leave
nop
jmp
add
add
add
dec
add
repnz
nop
nop
jae
jnp
add
jnp
dec
test
nop
push
mov
leave
nop
jmp
lcall
jo
imul
in
leave
nop
jmp
add
repz
add
clc
repnz
nop
nop
jae
add
add
int3
fildl
add
mov
xchg
ret
add
sub
imul
or
add
xor
clc
repnz
nop
nop
jae
add
out
test
adc
mov
leave
nop
jmp
add
add
sub
repnz
nop
nop
jae
cmc
cmc
mov
cmp
mov
test
clc
repnz
nop
nop
jae
push
icebp
fwait
push
mov
xchg
ret
push
sahf
inc
int3
add
add
repz
nop
push
mov
leave
nop
jmp
add
imul
cmp
nop
jmp
adc
add
test
push
mov
xchg
ret
add
add
inc
push
cmc
es
clc
repnz
nop
nop
jae
add
add
roll
pop
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
add
imul
add
mov
push
mov
xchg
ret
add
xchg
roll
scas
push
ss
mov
in
leave
nop
jmp
inc
add
add
imull
cld
nop
nop
jae
add
xor
sahf
inc
add
repnz
nop
nop
jae
inc
notl
test
add
ret
push
mov
xchg
ret
add
testl
push
mov
xchg
ret
add
add
pop
adc
add
call
nop
jmp
add
imul
sub
aaa
xchg
inc
add
add
mov
push
fisttpl
repnz
nop
nop
jae
add
pop
in
mov
clc
repnz
nop
nop
jae
add
ss
xor
cld
nop
nop
jae
add
add
add
test
stc
call
nop
jmp
xchg
add
xor
push
clc
repnz
nop
nop
jae
push
add
add
sub
add
mov
inc
add
add
add
push
push
clc
repnz
nop
nop
jae
add
add
ja
add
clc
repnz
nop
nop
jae
mov
and
nop
nop
jae
cmpb
add
jmp
nop
nop
jae
add
jg
add
jp
pop
push
mov
xchg
ret
scas
inc
cmc
mov
lods
add
nop
push
mov
leave
nop
jmp
add
add
sub
loopne
mov
xchg
ret
mov
add
test
add
clc
repnz
nop
nop
jae
add
push
mov
xchg
ret
add
add
int3
push
pop
sbb
repnz
nop
nop
jae
adc
push
lcall
mov
xchg
ret
add
inc
or
add
push
push
mov
xchg
ret
add
add
add
je
push
iret
pop
clc
repnz
nop
nop
jae
add
add
add
mov
enter
push
xchg
add
mov
cld
nop
nop
jae
inc
imul
inc
add
addr16
clc
repnz
nop
nop
jae
add
add
scas
cld
push
mov
xchg
ret
daa
mov
lcall
push
mov
xchg
ret
add
roll
repz
int3
stos
add
aaa
fld1
clc
repnz
nop
nop
jae
lcall
sbb
ja
add
add
push
lock
int3
jg
iret
or
nop
jae
lock
int3
add
push
add
mov
pop
push
mov
xchg
ret
inc
add
add
sbb
test
call
nop
jmp
mov
push
repnz
nop
nop
jae
add
add
sub
clc
repnz
nop
nop
jae
add
add
inc
inc
lds
repz
mov
xchg
ret
xor
scas
repz
add
je
mov
clc
repnz
nop
nop
jae
lock
int3
add
repnz
nop
nop
jae
loope
repz
xor
cmp
add
repnz
nop
nop
jae
add
add
shlb
movsb
push
mov
xchg
ret
sarl
lcall
clc
repnz
nop
nop
jae
sahf
testl
add
adc
add
repz
mov
xchg
ret
add
dec
add
int3
mov
cmpsl
push
push
mov
xchg
ret
add
repz
sub
mov
nop
push
mov
leave
nop
jmp
lcall
and
add
inc
add
clc
repnz
nop
nop
jae
negl
add
pop
int3
push
mov
clc
repnz
nop
nop
jae
dec
jg
add
clc
repnz
nop
nop
jae
lock
add
imull
add
add
clc
repnz
nop
nop
jae
add
jg
add
sti
add
clc
repnz
nop
nop
jae
add
lea
in
aaa
add
cmp
mov
jnp
lret
push
mov
mov
adc
add
nop
jmp
inc
inc
repz
pop
clc
repnz
nop
nop
jae
add
add
aad
clc
repnz
nop
nop
jae
cmc
sahf
mov
add
adc
inc
push
push
mov
xchg
ret
add
add
dec
scas
dec
add
jge
out
clc
repnz
nop
nop
jae
add
mov
inc
cmp
repnz
nop
nop
jae
jg
mov
mov
or
push
mov
leave
nop
jmp
int3
add
imul
and
nop
nop
jae
sub
xor
mov
clc
repnz
nop
nop
jae
ja
add
cmc
add
mov
clc
repnz
nop
nop
jae
add
imul
fwait
jmp
jecxz
jae
add
addb
int3
repz
ja
mov
add
test
adc
add
repnz
nop
nop
jae
push
push
inc
sarl
repnz
nop
nop
jae
add
and
add
add
add
add
js
add
push
mov
xchg
ret
int3
add
mov
aas
clc
repnz
nop
nop
jae
int3
add
jnp
testl
add
repnz
nop
nop
jae
add
add
stos
add
clc
repnz
nop
nop
jae
scas
add
adc
push
mov
xchg
ret
add
add
clc
repnz
nop
nop
jae
mov
add
inc
inc
add
add
or
add
dec
jb
clc
repnz
nop
nop
jae
add
add
xlat
dec
nop
push
mov
leave
nop
jmp
inc
add
daa
add
add
add
sub
clc
repnz
nop
nop
jae
jp
add
add
repnz
nop
nop
jae
testl
test
add
cld
nop
nop
jae
add
lcall
loop
push
mov
xchg
ret
add
inc
divl
add
mov
add
repnz
nop
nop
jae
add
imul
and
repnz
nop
nop
jae
add
add
daa
push
clc
repnz
nop
nop
jae
lcall
add
sub
push
mov
xchg
ret
add
add
jns
dec
push
nop
push
mov
leave
nop
jmp
inc
testl
pusha
inc
add
pop
add
cmp
add
xchg
fcoms
dec
cmp
push
mov
leave
nop
jmp
ss
gs
push
mov
xchg
ret
int3
add
add
add
rclb
sub
inc
add
fcmovnu
add
add
ds
push
mov
xchg
ret
addb
add
into
cmp
clc
repnz
nop
nop
jae
inc
add
add
jg
clc
repnz
nop
nop
jae
add
sbb
adc
mov
mov
xchg
ret
inc
sub
addb
daa
movsb
add
xor
mov
push
mov
xchg
ret
inc
add
add
add
fisttps
mov
adc
push
mov
leave
nop
jmp
mov
dec
test
push
mov
xchg
ret
rcr
add
fsubs
cld
nop
nop
jae
add
add
shrl
nop
jae
push
daa
add
mov
clc
repnz
nop
nop
jae
ss
jnp
add
mov
sub
clc
repnz
nop
nop
jae
pop
repz
bound
repz
clc
repnz
nop
nop
jae
add
mov
add
inc
movzwl
clc
repnz
nop
nop
jae
add
scas
rep
nop
push
mov
leave
nop
jmp
int3
add
popl
cld
nop
nop
jae
add
push
ss
sarb
pop
clc
repnz
nop
nop
jae
add
loope
add
add
add
and
xchg
ret
add
add
add
add
push
outsl
add
push
mov
xchg
ret
lcall
push
repnz
nop
nop
jae
sub
add
ja
sbb
repnz
nop
nop
jae
push
inc
add
mov
and
repnz
nop
nop
jae
int3
or
mov
int3
fsubs
add
lods
push
mov
xchg
ret
inc
repz
add
add
and
clc
repnz
nop
nop
jae
testl
les
dec
and
clc
repnz
nop
nop
jae
add
xor
mov
clc
repnz
nop
nop
jae
mov
sbb
mov
clc
repnz
nop
nop
jae
add
sub
mov
or
clc
repnz
nop
nop
jae
add
outsl
push
clc
repnz
nop
nop
jae
jae
add
add
addr16
call
clc
repnz
nop
nop
jae
add
mov
mov
push
mov
xchg
ret
pop
movsb
add
mul
mov
clc
repnz
nop
nop
jae
add
add
daa
fwait
nop
push
mov
leave
nop
jmp
add
inc
repz
add
scas
add
decl
mov
xchg
ret
add
andb
sqrtps
repnz
nop
nop
jae
add
ja
dec
int
add
repnz
nop
nop
jae
add
add
add
add
nop
push
mov
leave
nop
jmp
sub
lcall
mov
leave
nop
jmp
add
add
add
add
nop
push
mov
leave
nop
jmp
add
jnp
inc
rep
clc
repnz
nop
nop
jae
push
jae
add
rorb
mov
xchg
ret
add
push
fcoml
push
mov
leave
nop
jmp
notl
daa
scas
and
add
nop
nop
jae
sub
add
jle
mov
nop
push
mov
leave
nop
jmp
add
add
jae
jb
jb
xchg
clc
repnz
nop
nop
jae
add
ja
push
add
ret
add
out
imul
clc
repnz
nop
nop
jae
mov
sub
inc
add
inc
jmp
rorl
add
add
add
add
jbe
add
add
cld
nop
nop
jae
push
ror
add
lahf
movzwl
clc
repnz
nop
nop
jae
sub
lahf
pop
clc
repnz
nop
nop
jae
sub
add
mov
inc
push
mov
xchg
ret
inc
add
ss
repz
mov
clc
repnz
nop
nop
jae
add
add
cld
nop
nop
jae
lock
fildl
ss
xchg
nop
push
mov
leave
nop
jmp
add
int3
pop
push
clc
repnz
nop
nop
jae
add
push
cmp
data16
push
sub
pop
inc
add
add
pop
lcall
repnz
nop
nop
jae
add
add
inc
jmp
inc
lcall
or
addr16
add
or
cld
nop
nop
jae
add
jp
add
inc
mov
push
mov
xchg
ret
add
int3
mov
aas
adc
nop
jmp
addr16
add
push
sahf
mov
add
repnz
nop
nop
jae
add
add
push
add
mov
nop
push
mov
leave
nop
jmp
add
add
add
sub
nop
nop
jae
daa
ja
add
add
add
repnz
nop
nop
jae
jg
add
pop
add
jnp
add
clc
repnz
nop
nop
jae
cmc
add
lock
sub
repnz
nop
nop
jae
mov
inc
dec
add
nop
push
mov
leave
nop
jmp
add
add
add
jb
pop
push
mov
xchg
ret
add
add
add
fld1
clc
repnz
nop
nop
jae
add
add
jnp
xchg
add
scas
add
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
jp
jae
add
rolb
nop
nop
jae
add
lcall
add
pop
cmp
xor
push
mov
xchg
ret
add
sub
adc
add
add
pop
mov
clc
repnz
nop
nop
jae
add
jecxz
mov
scas
call
nop
push
mov
leave
nop
jmp
inc
add
test
add
in
leave
nop
jmp
add
jae
sbb
cmp
nop
push
mov
leave
nop
jmp
int3
imul
add
gs
push
mov
xchg
ret
sahf
push
cmc
xchg
cmc
add
add
add
clc
repnz
nop
nop
jae
cmc
add
mov
push
mov
xchg
ret
int3
dec
cmc
data16
add
clc
repnz
nop
nop
jae
add
call
nop
jae
lcall
sbb
and
add
lret
shr
nop
push
mov
leave
nop
jmp
add
jg
add
cmc
pop
clc
repnz
nop
nop
jae
add
imul
jns
nop
push
mov
leave
nop
jmp
addr16
loope
add
and
push
mov
leave
nop
jmp
mov
add
push
mov
leave
nop
jmp
inc
add
add
inc
cmp
test
add
cld
nop
nop
jae
lcall
jl
ficompl
leave
clc
repnz
nop
nop
jae
loope
imul
int3
add
dec
ja
ret
nop
push
mov
leave
nop
jmp
dec
add
inc
add
imul
jae
add
fildl
add
mov
add
cld
nop
nop
jae
mov
add
mov
add
pop
nop
push
mov
leave
nop
jmp
add
add
add
leave
push
mov
ljmp
add
push
add
xchg
pop
shr
clc
repnz
nop
nop
jae
xor
add
add
in
xor
incl
add
add
add
mov
xchg
add
add
sub
add
add
pop
stc
cld
nop
push
mov
leave
nop
jmp
add
mov
scas
adc
sub
cmp
repnz
nop
nop
jae
add
inc
add
mov
test
add
in
push
nop
push
mov
leave
nop
jmp
inc
add
div
add
add
xchg
pusha
clc
repnz
nop
nop
jae
sub
repz
xchg
push
nop
push
mov
leave
nop
jmp
add
xor
lods
xchg
nop
push
mov
leave
nop
jmp
add
inc
addb
add
pushl
clc
repnz
nop
nop
jae
add
add
imul
loopne
clc
repnz
nop
nop
jae
rcrl
popa
stos
clc
repnz
nop
nop
jae
add
pop
xchg
sub
test
mov
xchg
ret
lcall
imul
inc
mov
nop
push
mov
leave
nop
jmp
jecxz
or
cli
xchg
xchg
push
mov
xchg
ret
add
sbb
add
jnp
push
mov
xchg
ret
testl
add
repz
sbb
pop
xlat
clc
repnz
nop
nop
jae
add
add
data16
test
add
add
clc
repnz
nop
nop
jae
push
add
loope
enter
nop
nop
jae
add
add
add
push
pop
xor
push
mov
xchg
ret
jg
inc
scas
add
pop
popf
push
clc
repnz
nop
nop
jae
sub
mov
sub
cmp
nop
push
mov
leave
nop
jmp
add
push
test
mov
xchg
ret
add
add
mov
add
jmp
push
mov
leave
nop
jmp
add
add
jg
clc
repnz
nop
nop
jae
imul
inc
add
mov
jno
add
add
add
push
add
mov
clc
repnz
nop
nop
jae
sbb
add
movsl
movzwl
clc
repnz
nop
nop
jae
add
add
in
clc
repnz
nop
nop
jae
add
mov
add
push
mov
xchg
ret
icebp
lcall
clc
repnz
nop
nop
jae
add
add
add
pop
test
nop
push
mov
leave
nop
jmp
pop
add
repz
push
push
mov
xchg
ret
addb
cs
or
add
fwait
imul
clc
repnz
nop
nop
jae
add
ja
push
clc
repnz
nop
nop
jae
add
or
cs
clc
repnz
nop
nop
jae
imul
cmp
sahf
sub
fs
lea
clc
repnz
nop
nop
jae
add
int3
add
dec
push
clc
repnz
nop
nop
jae
mov
sub
add
scas
add
repnz
nop
nop
jae
push
add
push
mov
xchg
ret
imul
jg
in
icebp
inc
dec
xchg
nop
jmp
xchg
sub
push
mov
leave
nop
jmp
add
add
push
clc
repnz
nop
nop
jae
add
push
inc
cmp
ja
clc
repnz
nop
nop
jae
inc
add
push
lock
add
jl
cmp
nop
push
mov
leave
nop
jmp
add
add
lock
mov
clc
repnz
nop
nop
jae
dec
add
add
clc
repnz
nop
nop
jae
int3
daa
add
add
or
add
add
stc
push
push
mov
xchg
ret
push
add
add
add
add
movl
cld
nop
nop
jae
add
add
lock
push
clc
repnz
nop
nop
jae
add
daa
add
xor
clc
repnz
nop
nop
jae
negl
mov
repnz
nop
nop
jae
add
mov
sub
cmp
loope
repnz
nop
nop
jae
sub
sub
ret
movzwl
nop
push
mov
leave
nop
jmp
inc
lcall
cmp
incl
add
add
daa
push
lea
nop
push
mov
leave
nop
jmp
jecxz
int3
add
call
clc
repnz
nop
nop
jae
jg
add
lds
fs
add
sbb
add
addr16
xor
add
nop
jmp
add
mov
cld
nop
nop
jae
add
int3
add
xor
mov
clc
repnz
nop
nop
jae
repz
push
div
je
nop
push
mov
leave
nop
jmp
add
insb
popf
fistpl
push
mov
xchg
ret
add
andb
add
or
cld
nop
nop
jae
add
add
rclb
jle
add
dec
add
mov
add
fpatan
movsb
push
mov
xchg
ret
repz
lcall
bound
sbb
clc
repnz
nop
nop
jae
repz
add
mov
nop
push
mov
leave
nop
jmp
icebp
add
add
push
add
add
xor
aaa
call
clc
repnz
nop
nop
jae
inc
scas
jnp
mov
rol
je
clc
repnz
nop
nop
jae
jg
add
add
and
repnz
nop
nop
jae
sahf
cmp
inc
inc
sub
push
mov
xchg
ret
xor
lcall
in
outsl
mov
clc
repnz
nop
nop
jae
add
add
mov
mov
xchg
ret
inc
add
add
mov
lahf
shr
clc
repnz
nop
nop
jae
add
mov
sub
add
dec
push
clc
repnz
nop
nop
jae
add
jnp
addb
clc
repnz
nop
nop
jae
icebp
add
inc
dec
imul
jae
add
add
add
ret
fld1
clc
repnz
nop
nop
jae
add
add
int3
jge
jg
clc
repnz
nop
nop
jae
add
cld
adc
push
mov
xchg
ret
mov
int3
inc
roll
sarl
push
clc
repnz
nop
nop
jae
jp
xchg
inc
ss
add
loope
xor
nop
pop
sub
push
mov
leave
nop
jmp
imul
cmp
nop
push
mov
leave
nop
jmp
xchg
add
daa
jnp
icebp
pop
mov
add
jne
clc
repnz
nop
nop
jae
add
push
repz
push
mov
xchg
ret
int3
xchg
add
add
icebp
cmc
and
add
xchg
clc
repnz
nop
nop
jae
xchg
add
push
das
jmp
inc
cmp
divl
add
sub
fistpl
clc
repnz
nop
nop
jae
add
repz
clc
repnz
nop
nop
jae
mov
add
adc
mov
xchg
ret
push
add
mov
clc
repnz
nop
nop
jae
xchg
add
add
jge
add
pop
mov
imul
sub
add
xor
fwait
clc
repnz
nop
nop
jae
add
int3
push
add
repnz
nop
nop
jae
ja
inc
add
jp
mov
mov
mov
leave
nop
jmp
int3
lock
xchg
mov
add
shl
clc
repnz
nop
nop
jae
add
or
call
clc
repnz
nop
nop
jae
add
sub
mov
add
shl
push
mov
xchg
ret
add
add
sahf
add
push
push
clc
repnz
nop
nop
jae
add
add
add
ljmp
inc
add
clc
repnz
nop
nop
jae
add
cmc
add
fwait
push
mov
xchg
ret
add
mov
int3
jae
add
jmp
mov
xchg
ret
imul
mov
inc
add
cmp
cld
nop
nop
jae
mov
cmp
add
scas
add
orl
push
in
incl
int3
add
add
rcll
in
fildl
ret
push
cmp
add
add
hlt
or
push
xchg
jnp
add
push
aas
movsl
cmp
or
add
aam
and
add
mov
sar
aad
scas
shr
jns
enter
jne
add
add
add
mov
stc
cld
dec
xchg
ret
clc
int
adc
or
add
inc
rcrb
push
add
xchg
xchg
adc
fldcw
mov
add
inc
mov
mov
add
push
daa
addb
dec
lods
dec
cmp
movsl
and
add
add
jle
add
pop
stos
add
jmp
add
aas
jl
add
movsl
xchg
pop
call
popf
jp
mov
inc
jp
add
ljmp
lods
add
add
adc
sub
add
or
add
jnp
addb
lret
dec
pushf
adc
add
jecxz
daa
ljmp
add
imul
cltd
in
imul
mov
ds
shl
cmp
pop
xchg
add
fyl2x
pushf
scas
jle
push
idivb
add
in
push
out
cmp
inc
out
outsb
inc
out
push
jno
out
xor
mov
add
mov
les
insb
jle
icebp
mov
add
fcomps
jnp
sbb
add
pop
and
rolb
out
addb
push
aam
inc
pop
pop
xchg
pop
mov
add
xchg
push
or
xchg
addb
add
add
xlat
fistl
cmp
lret
inc
and
add
add
arpl
mov
mov
or
add
add
add
aaa
cmpsb
add
in
mov
ljmp
repz
dec
arpl
jge
mov
mov
ret
iret
push
insb
inc
mov
add
or
paddsb
lods
rcll
je
cmpsb
add
xchg
ret
orl
add
movsb
add
insl
xchg
loope
and
sub
add
mov
pop
jnp
in
shll
jle
mov
sub
cmp
xor
imul
xchg
xchg
repnz
mov
add
mov
add
mov
add
pop
sub
add
sub
add
add
stos
pop
outsl
rcrl
add
shrb
push
add
inc
loopne
jge
ss
or
add
in
cmpsb
add
xchg
bound
clc
cmpsb
add
xor
fsubrl
add
fldl
add
stc
ret
mov
xchg
inc
adc
add
add
add
std
pop
push
dec
popf
adc
add
jge
xchg
addb
push
add
cmp
add
add
jle
aaa
add
add
jl
cmp
mov
loope
or
add
push
push
push
push
adc
pop
lret
or
add
bound
add
push
aam
loop
nop
sbb
std
mov
inc
std
jnp
out
mov
sub
add
jns
push
jnp
xor
leave
cwtl
test
jmp
insl
ror
sub
add
add
icebp
sub
add
push
scas
loope
pop
movsb
add
sarb
xor
or
add
cmp
add
sarb
add
add
pop
mov
add
stc
ret
push
ficomps
or
add
pop
pop
sbb
add
dec
repz
add
xchg
icebp
jnp
push
sub
add
sbb
in
ret
add
scas
nop
out
ficomps
pop
sbb
and
adc
stos
add
mov
lea
push
lcall
ficomps
xchg
ja
loope
nop
pop
xchg
mov
hlt
rorb
pop
sahf
mov
add
add
add
mov
hlt
loope
arpl
push
add
inc
jb
jno
fisubl
in
arpl
push
imul
fwait
addr16
add
mov
add
jge
in
cld
push
ficompl
add
mov
into
fisubrl
add
cmp
mov
mov
add
jl
xchg
add
add
clc
or
add
lods
pusha
push
pop
out
xchg
test
add
push
sbb
mov
and
add
add
clc
xor
sub
add
adc
and
dec
pop
sub
add
add
lret
fst
mov
dec
and
add
mov
cmpsl
mov
add
add
inc
mov
add
jl
call
out
add
fiaddl
cmp
add
ret
mov
mov
sbb
add
stos
add
les
into
out
pop
fisttpl
cmp
mov
push
and
add
add
dec
cld
sahf
aas
mov
xor
adc
add
inc
jl
in
jle
negb
movl
pop
into
jge
mov
jnp
add
add
pop
or
aas
mov
cwtl
je
push
or
add
aad
inc
pop
cmp
push
add
fs
adc
scas
or
mul
dec
testl
add
mov
outsl
stos
int3
shlb
int
push
jge
rcll
mov
sbb
add
or
or
testb
cmpsl
mov
outsl
inc
mov
mov
push
lods
add
add
jne
test
add
aas
and
add
dec
out
popa
mov
add
add
popa
push
and
add
add
push
rolb
add
popf
fwait
loope
add
mov
xchg
mov
push
add
xor
xchg
push
add
pushl
jno
lea
mov
pop
sub
add
pop
aam
call
add
add
pop
jb
add
sti
lcall
add
or
add
xchg
ret
adc
pop
pop
mov
inc
fcomi
sub
add
add
xchg
shll
scas
add
lret
sahf
fcoml
test
add
inc
int
sahf
mov
inc
sbbl
jge
jp
dec
les
mov
cmpsl
arpl
test
add
pop
or
add
add
xchg
pop
fs
sbb
fldlg2
and
add
aaa
movsb
add
jp
sbb
or
cmp
in
inc
push
test
rclb
add
mov
add
mov
clc
xchg
fsincos
leave
insl
xchg
and
leave
scas
add
cmpl
int
in
add
mov
add
xor
dec
inc
push
lcall
sbb
pop
popf
and
add
mov
add
pop
std
xlat
push
arpl
loop
aad
fldl
pusha
xchg
sub
add
add
lahf
std
cld
ja
pop
sbb
outsl
lcall
xor
sub
add
shrl
popa
pop
jns
lret
add
push
out
add
inc
and
add
fistpll
mov
adc
mov
push
add
xchg
add
inc
pop
inc
data16
bound
pandn
in
and
add
sahf
and
add
jge
out
mov
dec
fimuls
xor
stc
xlat
or
add
add
dec
out
sahf
sub
add
xchg
mov
shrl
nop
loopne
mov
lahf
jne
mov
push
inc
pop
roll
lock
xor
mov
ficompl
in
sub
add
pop
mov
jnp
add
sbb
popa
loop
sub
add
mov
add
pop
dec
jl
add
cld
push
add
js
addr16
dec
and
add
xor
pop
pop
sub
pop
pop
lret
jo
pop
inc
rorl
mov
stos
add
inc
jmp
mov
cwtl
js
add
ds
outsl
mov
insl
or
adc
popa
adc
into
jae
add
into
ds
scas
add
mov
or
shll
inc
pop
mov
add
inc
out
add
pop
addr16
add
mov
mov
jnp
mov
inc
nop
inc
push
mov
add
add
cmp
sub
lret
movsb
add
fisttps
outsl
cltd
inc
fisubrs
add
mov
sub
xchg
repnz
xchg
or
add
push
jge
sti
in
dec
jbe
cmp
add
in
cmp
add
movsl
mov
xchg
stos
scas
mov
imul
add
aaa
sbb
adc
xor
cmc
insl
mov
xchg
add
fldcw
sbb
mov
out
fldl
pop
cmp
xor
lods
add
loop
dec
push
pop
addb
mov
jmp
jl
and
add
pop
imul
add
shl
orl
push
add
add
cmc
int3
mov
loope
or
add
jge
stos
add
add
add
jo
xor
sub
pusha
pop
movsb
add
dec
out
nop
test
add
jae
int
gs
pop
sub
mov
cmp
adc
xchg
call
loope
add
cli
xchg
sub
ljmp
fsincos
outsl
jge
rorl
sub
mov
inc
cmpsl
insl
add
xor
pop
mov
mov
mov
das
add
add
add
loope
and
add
mov
fs
sub
xor
lret
mov
add
out
and
add
push
addb
cmc
cld
sub
add
add
loop
add
outsb
das
jp
rcrl
add
sbb
xchg
add
daa
sub
add
xchg
push
xchg
repnz
hlt
mov
dec
out
lcall
jne
inc
test
int3
pusha
push
sti
or
add
adc
cwtl
xor
in
loope
xor
xor
lods
jecxz
pop
pop
jp
mov
xchg
mov
add
push
adc
add
insl
pushf
adc
imul
data16
shrl
fs
dec
lret
lea
add
add
dec
int3
sbb
mov
jp
add
sub
xor
add
sbb
add
fdivp
jno
mov
add
in
pop
lods
int
outsl
int3
movsl
xchg
add
cli
push
add
add
push
mov
cmp
add
test
fs
sbb
lods
add
push
or
add
mov
fidivrl
adc
jns
push
add
mov
out
lret
sbb
sbb
pop
xchg
repnz
mov
ss
push
pop
stc
sub
add
loopne
outsb
ret
jg
out
cmp
or
add
addb
in
dec
inc
and
bnd
ljmp
add
fimuls
and
add
fmull
std
daa
or
add
hlt
outsl
sbb
pop
xlat
and
loopne
data16
adc
fnstcw
add
inc
add
add
ficompl
mov
add
rcl
nop
in
fadd
xchg
pop
jne
out
dec
cmp
add
xor
inc
insl
push
daa
inc
sbb
and
shll
add
dec
add
jne
pop
fwait
push
adc
mov
add
xchg
test
clc
cmpsb
add
xchg
add
psubw
addr16
add
outsb
and
add
adc
shll
inc
vmovntps
add
call
mov
outsl
pushf
gs
add
sbb
xchg
add
push
add
fisttps
add
mov
add
push
adc
pop
fidivl
mov
or
add
lods
dec
ljmp
add
out
adc
aad
pop
jbe
std
mov
push
add
dec
and
add
imul
xor
icebp
cmp
les
sbb
add
add
ret
jo
and
add
xchg
js
add
push
cld
mov
and
add
adc
add
push
mov
xchg
in
lcall
add
repnz
cmp
mov
lea
add
xor
addb
jp
sbb
bound
je
add
cltd
pop
add
add
sbb
ds
add
or
inc
xor
xchg
jns
dec
mov
leave
in
addb
insb
imul
adc
mov
pop
and
add
add
or
add
add
rcll
fisubs
push
insb
push
add
xor
popl
add
mov
adc
jbe
add
inc
fdivrl
lds
add
cmc
push
test
add
sbb
insb
lods
add
xchg
sahf
andl
aam
cmp
pop
hlt
mov
cltd
push
pop
mov
add
adc
mov
add
add
out
stc
mov
test
cli
aad
add
sub
mov
insb
push
inc
nop
adc
mov
jle
add
and
add
add
pop
mov
add
fwait
mov
loope
scas
addb
xchg
and
add
int3
fs
scas
cmp
add
push
sahf
jnp
dec
adc
mov
popf
into
nop
dec
out
or
xor
aaa
mov
rorl
add
lahf
das
test
add
add
xor
cld
and
add
push
loop
cmp
ffreep
push
add
inc
sub
add
fdivrs
mov
mov
addb
mov
add
sub
and
out
mov
adc
add
lcall
add
jmp
repz
bnd
iret
clc
scas
add
jge
mov
xchg
lods
add
movsb
add
inc
shrl
add
cmp
pop
xchg
movsb
add
mov
add
cmp
sub
adc
mov
repnz
aaa
or
add
lds
add
shr
adc
pop
imul
jo
xlat
cmp
add
pop
pop
xor
jl
xchg
add
mov
cmpsb
add
xchg
add
stc
mov
add
addr16
mov
xchg
cmpsl
sub
fwait
pop
jmp
arpl
adc
add
in
cld
int
mov
add
jp
dec
jmp
add
dec
sbb
inc
scas
add
or
add
jnp
push
dec
and
lcall
xor
add
jnp
ja
lods
js
outsb
scas
xchg
pop
loop
add
lahf
mov
call
add
das
xchg
adc
push
jecxz
sub
cli
sbb
adc
push
add
imul
or
add
testl
cmp
or
add
add
repz
pop
inc
or
add
cmp
dec
push
add
addb
sbb
add
comiss
sbb
addr16
pop
cwtl
cwtl
adc
and
add
repz
imul
xor
add
add
aas
addb
xchg
inc
push
xlat
outsl
addb
xchg
das
xor
xor
cmc
sub
xchg
xor
js
xchg
sbb
or
add
dec
sbb
mov
xchg
lcall
add
lods
les
mov
add
xlat
jae
call
out
cmp
mov
add
mov
test
add
je
add
add
cwtl
rcl
jbe,pt
addb
mov
xlat
sbb
mov
shlb
js
jl,pt
inc
dec
je
or
loope
jl
fadds
data16
add
dec
inc
mov
add
jmp
insl
aaa
push
xor
push
add
jle
mov
sbb
xchg
lahf
scas
mov
ljmp
mov
mov
add
mov
inc
inc
xchg
xchg
outsb
ret
add
bound
aam
dec
addr16
or
add
les
mov
into
gs
push
push
or
mov
add
test
add
push
call
lock
push
inc
bound
add
sbb
movsw
add
faddl
add
xchg
push
in
fstl
add
adc
popa
scas
add
imul
sbb
add
fiadds
mov
add
fsubrl
xor
add
pop
sub
add
shrb
js
popf
ja
sbb
add
dec
sub
add
jbe
les
add
mov
fisubrs
xchg
negl
mov
mov
jbe
int3
add
add
add
dec
push
sub
add
xchg
sub
insb
jno
or
add
jae
cmpl
roll
mov
rorl
jl
cmp
jae
repnz
add
add
inc
jne
arpl
sbb
or
add
xlat
aas
dec
popa
jge
add
add
add
syscall
and
add
inc
inc
out
scas
xor
movsl
xchg
or
add
jo
pop
leave
jmp
out
xchg
mov
add
fisttpll
stc
stc
sbb
add
push
push
or
add
add
cmp
add
dec
xor
adc
xchg
and
pop
imul
fldt
mov
add
mov
pop
xor
xchg
add
sub
add
add
xor
inc
fld
and
add
push
add
jge
push
cltd
jl
sbb
sub
add
daa
rorb
cmp
jp
fcomps
popf
dec
cltd
cmp
jmp
add
out
jge
insb
pop
pushf
xchg
imul
add
mov
add
pop
pop
add
cmp
cmp
jp
leave
xchg
pop
out
push
mov
add
test
ret
movsb
add
into
xor
cld
gs
stos
jp
dec
pop
iret
xchg
add
sbb
mov
int3
add
add
xlat
scas
in
divl
push
pop
test
aas
fildl
loopne
pop
arpl
or
in
mov
cmp
push
mov
add
add
sub
add
add
add
add
mov
add
add
inc
imul
ss
inc
lcall
jo
aam
je
jo
sbb
pushl
in
outsb
xchg
iret
ja
add
adcl
adc
rorb
mov
add
lahf
cmp
add
pop
jb
jle
fs
push
mov
add
adc
roll
dec
inc
cmp
testb
sbb
inc
popf
push
lret
mov
imul
mov
movsb
add
adc
jnp
adcl
and
push
pop
dec
call
jns
inc
dec
loopne
add
jp
pop
cli
in
xchg
mov
sub
add
stos
add
cmc
cmp
in
xor
lahf
mov
lock
cmpsb
add
adc
cmp
adc
xor
scas
dec
pop
repnz
cmc
push
cmp
addb
jp
out
mov
movsl
xchg
imul
add
mov
leave
js
add
movsbl
sahf
sub
or
add
test
add
cmp
mov
push
std
lods
divb
xor
mov
add
aad
pushf
push
add
addb
adc
scas
add
lcall
pop
or
add
lcall
leave
inc
shrl
push
add
xor
jns
dec
cmp
out
int
add
iret
and
fistpl
call
push
add
stc
push
and
call
sub
add
ss
add
and
jb
faddl
in
xchg
arpl
add
or
scas
add
mov
sub
add
add
add
jle
add
and
add
movsl
pop
mov
inc
mov
fstps
mov
or
add
add
shlb
in
fwait
xchg
add
mov
inc
aas
sbb
test
aas
mov
mov
pop
pop
mov
add
add
hlt
fst
fidivl
popf
adc
mov
daa
mov
enter
xor
adc
out
inc
loopne
sbb
mov
add
ja
add
inc
psubb
add
jecxz
mov
rcr
add
sub
adc
add
rorb
jb
sbb
gs
lret
xlat
add
add
xchg
imul
push
push
decb
xor
aam
add
in
or
add
add
cld
add
out
push
xlat
push
add
add
int3
sbb
add
into
ljmp
cmp
jp
shl
mov
out
xchg
das
enter
push
add
lret
xchg
sbb
xchg
mov
decb
add
icebp
adc
dec
rol
add
add
lcall
cmpsl
xchg
dec
mov
add
test
adc
push
js
and
add
cmp
xchg
ljmp
mov
add
add
call
add
scas
add
push
pop
mov
cmc
je
mov
ret
mov
add
xlat
lret
dec
jmp
mov
add
jmp
add
add
fwait
adcl
int
test
loop
add
cld
adc
add
jo
inc
fldcw
add
mov
jo
adc
lcall
add
data16
sbb
mov
jg
fnstsw
xchg
imul
fidivrs
lds
pop
dec
xchg
mov
add
imul
adc
fildl
xchg
xor
sub
add
mov
nop
insb
and
add
popf
test
add
daa
lods
add
mov
add
notb
add
add
add
add
outsb
in
fisttpl
dec
jae
aam
add
in
js
add
inc
icebp
push
xchg
ds
push
or
out
stos
add
stos
add
stc
cmp
jmp
add
loop
adc
inc
cmp
inc
inc
push
add
mov
add
mov
add
out
jle
lods
add
sti
adc
add
dec
stos
outsb
addb
sbb
ret
add
repnz
aam
outsb
daa
call
and
fdivrs
cmp
enter
mov
add
push
dec
adc
sbb
add
test
xchg
cmc
and
add
out
adc
mov
icebp
sub
or
sbb
jo
nop
sbb
add
sbb
dec
mov
dec
addb
dec
rcr
negb
lret
lret
or
fimull
pop
sbb
jno
out
movsb
add
pop
push
add
pop
pop
xchg
aam
in
clc
xor
add
adc
mov
xchg
mov
daa
xchg
sub
jg
inc
mov
in
or
add
loop
xchg
stos
fadd
enter
dec
insl
arpl
out
push
push
xchg
addr16
push
push
in
cmp
into
inc
push
cmp
sub
add
inc
mov
add
enter
adc
fidivrl
add
rolb
add
bound
int
lock
jne
pop
cmp
mov
cmc
inc
xchg
add
mov
add
mov
arpl
add
add
add
repnz
push
push
xlat
jns
pop
lods
test
add
lahf
cmc
cmp
add
jns
add
arpl
shlb
sub
add
fmuls
add
test
add
xchg
and
shlb
sbbl
sbb
inc
jo
dec
sub
add
add
addl
sahf
addr16
lea
add
pop
dec
nop
mov
call
inc
pop
jp
add
jns
xchg
clc
sbb
mov
je
loop
outsl
test
add
ljmp
sbb
mov
scas
add
and
xor
add
loop
inc
push
std
mov
add
add
push
inc
or
add
sbb
push
test
add
je
add
shrb
test
jb
in
add
dec
dec
mov
mov
jb
push
xor
mov
arpl
pop
addb
mov
fsubrs
insl
inc
ret
add
mov
out
adc
mov
add
mov
add
dec
xor
add
add
dec
mov
add
add
hlt
in
add
mov
add
pusha
xchg
add
xchg
push
rol
jmp
adc
and
add
loope
fildl
add
test
jo
dec
add
dec
cmp
add
add
into
jecxz
add
push
add
js
ficompl
push
adc
js
xchg
push
add
pop
mov
add
push
jle
add
add
sub
add
outsl
das
xchg
add
divl
push
add
mov
adc
add
jge
outsb
pop
popa
jl
xor
add
int
idivb
cwtl
and
enter
call
adc
add
sub
and
ss
xchg
jge
popa
cltd
and
add
adc
add
dec
and
add
lret
leave
sub
out
movsb
add
cwtl
leave
xchg
fcoms
mov
add
sub
pop
pop
fidivl
fimuls
roll
cmp
add
enter
imul
call
cmc
cmpsb
add
jne
addb
jg
imul
shl
enter
add
add
add
push
add
outsb
outsb
add
mov
inc
imul
sub
add
add
mov
add
test
add
lods
add
jnp
dec
lret
mov
add
push
add
add
add
mov
add
addb
push
sbb
push
jno
hlt
add
sub
add
das
pop
jmp
pushl
lcall
ror
mov
add
and
add
sahf
mov
insb
ret
lcall
jno
loop
push
test
add
push
outsb
lret
add
ret
push
in
push
or
add
das
add
add
add
push
cmp
mov
inc
pop
aas
mov
inc
jns
lea
out
add
stc
inc
mov
add
lret
cmpsb
add
jecxz
test
add
pushf
mov
add
fstpl
add
inc
pop
push
add
mov
inc
mov
scas
setb
mov
adc
cmc
mov
add
int3
dec
fwait
ja
arpl
fsub
dec
call
add
adc
fcmovb
test
enter
stc
add
add
outsl
mov
in
fsqrt
sahf
mov
add
add
aaa
jb
mov
add
or
test
loopne
sub
add
add
xor
push
add
sub
testb
add
or
nop
shrb
add
shr
mov
mov
add
shl
sarb
out
stos
add
repnz
sbb
fildll
lods
and
add
jmp
imul
push
inc
js
mov
jp
stc
repnz
add
fcoms
adc
add
or
add
mov
sub
add
add
add
xlat
lcall
imul
pushf
mov
pop
addr16
push
mov
add
movsb
add
jmp
shll
call
push
cmp
scas
mov
add
je
lods
push
add
mov
add
add
or
lret
add
add
push
push
push
mov
pop
call
add
addb
adc
xor
popf
or
mov
nop
mov
insl
pop
mov
pop
shrl
cmp
outsb
repz
cltd
filds
inc
pusha
dec
add
push
add
jo
fdivrp
mov
insl
sbb
or
add
or
add
lds
add
mov
add
sar
pop
sarl
add
stc
jae
add
mov
add
lods
add
ret
jns
shrl
add
cmp
lahf
sbb
mov
add
jg
xor
cmp
add
cmp
outsl
gs
jmp
and
add
xchg
sti
xor
mov
lret
repnz
push
mov
shrl
add
mov
add
dec
jo
sahf
jp
sub
add
ret
popl
add
stc
push
aaa
cmp
xlat
add
add
jae
add
xor
into
in
test
add
das
addb
ljmp
mov
sub
lods
add
mov
add
and
and
add
rorb
xchg
jne
cmpl
and
add
out
popf
add
add
dec
repz
sti
dec
mov
inc
insl
mov
add
add
xlat
jb
add
movd
mov
add
sbb
push
fs
notb
hlt
js
push
loop
nop
add
icebp
gs
lcall
add
dec
inc
outsb
data16
adc
pop
inc
mov
add
shrl
add
add
dec
xchg
add
sbb
lods
mov
shlb
popa
lcall
add
push
cli
push
pop
dec
imul
add
dec
test
add
xor
jl
inc
pop
lea
cld
in
adc
in
mov
mov
add
daa
sbb
std
scas
add
sub
repz
add
mov
add
dec
fiaddl
loope
add
xchg
pop
fadds
push
add
push
jg
and
add
add
test
mov
cmp
add
mov
imul
ja
bound
adc
sbb
add
add
cmp
mov
add
int
add
add
add
inc
inc
adc
ja
in
mov
sub
adc
data16
add
sub
repnz
outsl
addb
inc
add
add
scas
add
pop
adc
xchg
mov
add
bound
add
xchg
mov
or
add
cmpl
cmp
jae
in
adc
in
jae
mov
add
xchg
test
sbb
inc
addb
push
icebp
cmp
xchg
inc
mov
xchg
add
addr16
add
pop
mov
addb
iret
test
pusha
push
add
sbb
into
iret
enter
add
mov
mov
add
cmp
add
adc
jns
xchg
outsl
jbe
movsl
das
rorl
jl
les
dec
mov
add
scas
in
dec
cmp
add
xchg
push
and
add
add
pop
push
xchg
xor
adc
or
add
xor
add
add
add
movsb
add
pop
mov
push
sti
sub
add
dec
inc
arpl
xchg
aam
pop
dec
outsl
mov
je
inc
xor
mov
sbbl
sub
outsl
pop
addb
gs
dec
test
add
xchg
cwtl
mov
xchg
inc
test
gs
cmp
mov
movhps
jl
add
ja
notb
inc
shll
jb
ret
addb
mulb
add
fildll
mov
add
pop
xchg
int3
fbld
xchg
int
ret
cmp
add
add
out
shr
cwtl
lea
push
loop
lock
adc
cmpsl
inc
stos
cmpsb
add
in
fdivrs
mov
out
mov
add
js
dec
or
rcrb
bnd
jo
gs
cmp
outsb
testb
add
inc
mov
pop
outsl
or
jb
loop
add
nop
popf
sub
mov
lods
add
sbb
dec
mov
add
inc
cmpsb
add
aam
sub
add
out
jmp
bound
fnstcw
xchg
mov
add
sarb
xchg
ja
push
sbb
sub
out
mov
add
fiaddl
add
add
add
and
add
vrcpss
cwtd
jb
xor
dec
popa
ja
cmp
adc
add
push
je
rclb
sub
add
pushf
fcomp
cmpsl
lea
and
add
push
sub
add
add
filds
adcl
jge
movsl
ljmp
ret
jg
add
inc
xor
adc
and
add
and
dec
jno
xchg
cwtl
in
inc
shll
add
stos
jno
bound
std
xchg
mov
insb
and
add
add
aad
or
pop
and
imul
inc
jge
mov
pusha
push
add
add
enter
int
mov
mov
sbb
repz
in
addb
mov
jmp
adc
add
mov
insl
testb
push
fs
idiv
mov
add
push
jp
add
cmpsl
cmpsb
add
lret
add
and
add
push
push
push
cmp
sbb
push
add
adc
mov
add
jl
jge
scas
out
add
ficomps
fldenv
adc
ror
xor
jnp
mov
xor
xchg
js
add
in
adc
add
xchg
aad
addb
ljmp
add
push
mov
test
outsb
jns
add
std
add
add
out
mov
xchg
and
pop
insb
mov
movsb
add
out
mov
add
or
stos
add
ret
xor
pop
mov
mov
add
sbb
jp
scas
add
les
jnp
xor
jl
jp
lcall
adc
push
test
add
add
cmp
dec
sarb
addl
imulb
rolb
push
cmp
jbe
cmp
pop
lds
add
add
adc
in
insl
inc
fisubrs
add
mov
add
inc
inc
fcompl
icebp
mov
add
add
repnz
or
add
test
cmp
imul
add
add
jle
out
inc
hlt
fstl
loope
xchg
dec
add
add
in
shlb
cmp
adc
pop
out
rcl
movsl
aas
movsb
add
push
lods
add
mov
sub
fidivrs
add
addr16
fwait
or
add
ds
lcall
daa
xchg
lds
mov
xor
mov
pushf
pop
pushf
jae
and
add
fwait
push
push
and
sbb
xchg
add
add
daa
repz
add
outsb
addb
jb
aam
xchg
xlat
sbb
adc
add
test
add
add
sub
add
test
jae
adcl
jp
pushl
je
roll
cmp
or
add
cmp
add
imul
add
add
add
cli
mov
add
mov
add
jmp
insl
xchg
inc
push
add
jge
fmulp
xchg
arpl
nop
fwait
and
add
xchg
add
lods
add
push
add
insl
insl
imul
fcoml
out
push
in
fwait
leave
inc
push
sub
bound
or
add
loop
or
jbe
add
movsb
add
push
dec
mov
add
add
std
testl
xchg
jmp
add
jl
shrd
imul
or
add
sub
sub
pop
mov
sub
lds
cmp
mov
xchg
jb
repnz
add
in
dec
add
shrb
mov
inc
push
cli
dec
mov
mov
jmp
shrb
stos
add
inc
mov
dec
movsl
dec
mov
add
add
dec
in
test
add
stos
add
cwtl
test
add
hlt
aam
and
add
mov
out
jbe
add
in
das
push
adc
ret
lods
out
push
fiadds
ret
push
andnps
movsl
adc
in
cmp
mov
add
inc
sti
sbb
dec
mov
lahf
push
adc
add
lret
xchg
add
add
add
sbb
lea
adc
xchg
jecxz
std
mov
adc
mul
cwtl
roll
pop
negb
sbb
add
inc
aas
fldl
pop
mov
add
and
cltd
das
pop
ja
ret
loop
or
add
pop
inc
cmp
jno
mov
sub
or
add
les
and
lahf
or
mov
pop
cmp
cmc
pop
test
jmp
mov
leave
mov
add
cmc
in
outsb
cmp
sarb
dec
int3
adc
add
xlat
xor
stos
add
decb
mov
cmp
fwait
sbb
repnz
sub
add
push
push
ret
add
out
xlat
xor
out
add
mov
ds
sub
shrl
jno
out
fwait
sbb
in
xchg
add
add
jo
and
add
outsl
das
gs
mov
cmp
jne
in
aaa
aas
ficoml
or
add
push
mov
rclb
or
and
js
jle
jb
lret
mov
cmpsl
adc
dec
addb
popf
repnz
add
add
pop
add
cmp
lcall
test
js
dec
mov
je
add
stc
push
sbb
push
add
ret
test
add
xchg
sbb
lea
add
adc
add
xor
jmp
fistpl
xchg
shlb
add
outsb
sub
add
js
add
mov
add
mov
jge
xchg
pop
push
leave
cli
lea
cmpsl
pop
mov
push
call
lar
add
popf
lock
test
add
mov
add
add
movsl
mov
roll
xor
out
sti
nop
jmp
scas
add
mov
add
mov
add
sub
add
add
add
ret
aaa
and
add
add
sbb
add
enter
int
arpl
repnz
test
add
mov
in
xor
hlt
cld
add
mov
sub
add
mov
add
inc
bound
or
add
xchg
lcall
xchg
mov
rcl
xchg
lods
add
mov
int3
out
xchg
aam
jmp
mov
lret
sti
inc
add
sti
pushf
dec
out
cmp
xabort
pop
mov
dec
mov
push
add
xor
sbb
cmp
test
add
or
loop
in
adc
mov
push
add
push
test
jo
add
sub
add
mov
add
pop
mov
jle
xchg
stos
add
loope
push
add
sub
add
frstors
xor
add
rolb
ret
jnp
xlat
jae
add
or
adc
add
xchg
or
or
add
push
add
repz
cmpsl
shl
ss
xor
rol
scas
dec
push
add
mov
test
jg
sarb
movsl
sub
add
sub
xchg
aaa
pop
or
dec
scas
movsb
add
add
add
add
inc
mov
add
xchg
add
jno
inc
and
bound
insb
lods
or
std
popf
in
lcall
mov
xor
add
std
push
add
or
push
pop
inc
cltd
pop
sarl
xlat
leave
mov
loopne
mov
stos
add
notl
sub
add
adc
jbe
or
aaa
dec
mov
add
mov
cmp
cwtl
push
pop
iret
mov
add
cmp
mov
adc
pushf
xor
ja
add
push
addb
mov
cmp
arpl
lret
and
add
mov
add
jmp
xor
popf
sbb
add
arpl
stc
push
pop
out
dec
or
add
je
ret
fst
movsb
add
cmp
aam
std
push
push
push
cwtl
dec
out
popf
insl
aaa
dec
xor
mov
ds
ds
adc
add
mov
ret
movsl
sub
dec
icebp
cmpsb
add
lcall
dec
sub
add
add
add
pop
sbb
jge
xor
addb
ja
fnstenv
addb
and
add
add
xor
in
repnz
add
pop
inc
sub
add
mov
xchg
or
add
jmp
add
dec
pop
je
sub
add
lret
dec
pop
inc
jp
xchg
int3
ret
sti
cmp
add
add
iret
dec
enter
sub
add
dec
jne
mov
std
add
add
sub
add
add
imul
add
sub
add
mov
repz
pop
pop
loop
add
push
adc
xor
add
xchg
out
testb
pop
sub
adc
les
xor
jle
lods
mov
add
mov
jmp
shll
add
xchg
inc
test
sbb
movsb
add
fsubrs
add
xor
add
push
sub
cwtl
add
add
adc
inc
shll
cmp
mov
xor
add
and
adc
stos
aaa
dec
mov
add
mov
idiv
test
add
add
pop
addb
add
add
jle
push
add
stc
test
add
mov
into
or
add
addb
movsb
add
mov
add
outsb
cmp
add
popf
inc
lds
adc
add
add
add
les
mov
sub
xor
add
pusha
movsb
add
je
repz
add
scas
add
inc
inc
enter
add
dec
sar
or
add
aaa
pop
fisubs
adc
jmp
call
add
mov
mov
add
mov
push
add
les
add
in
js
push
mov
dec
cmp
and
add
add
loopne
sarb
lret
dec
lahf
out
inc
dec
jb
add
stc
mov
fldenv
popf
rorl
mov
inc
sub
add
sbb
sbb
add
cmpsb
add
sub
shll
ret
test
jle
aaa
sahf
lcall
push
jp
push
add
push
bound
push
cmp
add
add
add
xchg
push
push
adc
popa
outsl
pop
pusha
stos
mov
add
adc
aad
jo
rol
xchg
test
add
add
aam
mov
popa
mov
add
inc
popf
add
add
data16
test
add
add
push
xor
add
lea
add
fstps
adc
pop
cmpsl
mov
jge
insb
nop
inc
aas
shlb
xchg
fsubrs
push
test
adc
inc
push
jmp
int
add
test
add
stos
out
mov
scas
notw
ret
pop
shl
push
aad
lea
int3
mov
pop
pop
stos
imul
add
mov
add
fildll
add
mov
add
push
hlt
pop
mov
mov
add
xor
lock
add
sub
add
shlb
add
add
loop
add
in
loopne
push
call
daa
sub
adc
out
mov
mov
add
mov
fsubrs
add
sub
add
addb
gs
mov
add
add
sarb
xchg
and
cmc
cmp
sub
add
dec
scas
add
mov
fwait
sub
dec
push
cmp
and
add
add
add
pop
pop
jo
jnp
sbb
sub
sbb
sahf
movsl
push
add
sbb
aam
push
pop
movsl
xchg
add
dec
outsl
aam
adc
mov
jnp
or
inc
mov
add
addb
sub
add
jmp
xchg
add
push
mov
push
ret
jno
add
xor
bound
add
pushf
shr
rcl
ret
adc
add
xor
loopne
add
pushf
in
jo
and
cmp
add
out
push
jecxz
and
xchg
pop
lds
and
add
or
mov
shl
or
push
sar
push
add
push
add
xlat
fndisi(8087
addb
fwait
ds
cmp
push
test
add
xor
mov
mov
add
ds
incl
out
xor
pop
mov
add
lcall
sub
add
aaa
fidivrl
or
dec
mov
adc
dec
sbb
mov
stc
mov
add
sub
mov
mov
dec
mov
mov
js
add
jnp
dec
cmp
rorl
jecxz
and
adc
push
add
add
dec
clc
cwtl
and
dec
ret
rcl
push
add
out
and
add
je
cmc
outsb
push
jp
add
add
pop
add
adc
jo
sti
or
add
add
inc
aaa
sahf
fwait
add
add
imul
and
lret
add
out
cmp
add
std
ljmp
xor
bound
lahf
sbb
inc
insb
adc
je
xchg
cmp
add
out
mov
in
sti
inc
test
add
push
add
lahf
xor
add
add
leave
mov
add
xchg
dec
outsl
inc
cmp
nop
add
add
add
shlb
add
imul
fisubs
mov
mov
in
mov
repnz
add
ja
fbld
add
dec
shr
loopne
in
mov
add
mov
in
outsb
pop
mov
test
add
mov
add
unpckhps
cmp
mov
and
add
je
adc
mov
test
add
addl
add
add
add
lcall
add
add
idivl
ror
bound
add
call
add
add
gs
add
mov
fcmovnb
or
add
mov
add
lret
dec
mov
add
cmp
or
add
mov
add
add
lret
pop
lret
dec
mov
mov
add
fistl
in
repnz
lcall
and
add
xchg
roll
sbb
jne
and
repz
mov
ss
dec
mov
test
push
mov
add
adc
mov
orl
mov
and
add
push
xchg
add
add
push
cmp
add
add
fnstsw
add
xchg
cmp
scas
add
sti
or
add
xchg
add
add
add
out
xor
xchg
xchg
xchg
sub
add
add
jb
sarb
in
xchg
test
jmp
sub
add
testl
dec
js
mov
add
out
leave
outsb
sub
andl
add
ds
add
add
add
add
ljmp
mov
cmp
add
jae
and
outsb
inc
test
add
add
push
add
cmp
push
addb
xchg
out
add
xlat
inc
clc
push
add
dec
ljmp
imul
fwait
in
fnstenv
loop
rcrb
addr16
sub
add
das
mov
pop
lahf
push
nop
out
cld
loop
and
lods
pop
cmpsb
add
pop
adc
add
jno
add
mov
xchg
xor
fsubp
nop
push
popf
cmp
test
xchg
push
les
inc
push
add
or
push
pop
shll
push
add
cli
ficoms
dec
pop
hlt
dec
punpckhbw
dec
inc
cwtl
sub
add
mov
add
fiadds
mov
add
add
add
sbb
scas
xor
repz
fsts
mov
lock
add
jmp
insl
in
test
add
outsl
in
sbb
lret
lcall
nop
xchg
and
push
mov
add
sub
icebp
mov
or
fmul
movsl
test
add
add
add
scas
sbb
mov
dec
xor
cmp
pop
push
add
pusha
test
add
ficoms
js
push
push
push
repnz
push
push
test
push
rolb
cld
and
add
imul
pushf
sbb
or
add
mov
daa
movsb
add
mov
sbb
jae
adc
dec
mov
push
fdivs
add
jno
add
fs
dec
add
push
cmc
enter
mov
pop
nop
in
xor
imul
push
out
add
add
mov
xchg
ds
ss
push
xor
lods
das
dec
or
add
add
adc
inc
mov
add
scas
jecxz
insb
shl
pusha
scas
cwtl
mov
add
lds
push
xor
mov
ret
push
add
shlb
add
add
push
inc
push
cmp
movsl
sub
add
xor
mov
add
scas
add
mov
add
cmpsl
pop
push
pop
cltd
pop
pushf
into
insl
mov
pop
scas
mov
mov
aas
ja
add
add
push
mov
nop
movsb
add
or
add
call
rcll
add
cmp
sbb
add
xchg
nop
pop
mov
cli
add
add
sub
add
dec
ret
ds
and
add
lods
add
sub
add
push
push
sti
daa
xor
mov
add
push
fsub
mov
add
testb
add
iret
push
add
out
sub
add
push
pop
xchg
mov
jge
mov
loopne
sbb
add
push
enter
adc
lods
inc
mov
add
jo
add
dec
out
push
sub
push
pushw
add
jne
jno
pop
hlt
cmpsl
pop
jns
sub
add
das
pop
lods
pop
xor
nop
xlat
jg
jg
fnstenv
adc
in
cmp
lahf
push
arpl
out
or
in
add
ss
aam
add
sahf
pop
out
inc
pusha
filds
or
add
adc
xchg
loop
repnz
add
mov
scas
add
and
add
add
push
mov
add
xchg
add
fsubp
push
enter
call
int3
adc
add
sub
add
push
add
dec
popf
mov
add
shlb
add
aad
or
scas
test
or
dec
dec
push
add
mov
cmp
iret
pop
dec
sbb
mov
mov
add
sarl
push
int
clc
ss
add
mov
call
ljmp
sarb
add
add
ja
pop
inc
pop
lea
add
jg
jle
pushf
adc
add
addb
scas
add
ficoms
add
mov
dec
pop
cli
or
scas
add
ret
stos
add
lods
add
pushf
sub
mov
add
jo
outsl
fists
add
in
jle
xchg
or
add
loope
pop
cmp
dec
aas
push
add
push
add
jge
sbb
jno
add
xor
add
cmp
add
mov
cwtl
shll
imul
add
cmp
add
out
stc
addb
test
add
pop
dec
fnstenv
fidivs
mov
imul
add
pop
pop
clc
mov
pop
inc
and
add
add
aaa
mov
dec
dec
insl
pop
std
dec
xor
push
add
add
add
lea
adc
push
add
iret
push
mov
iret
js
aas
sbb
mov
add
jecxz
in
pop
jle
ret
jns
mov
inc
xor
call
cli
cmp
popa
sub
add
outsb
in
fmul
mov
sbb
pop
xlat
jle
sub
add
arpl
sbb
add
add
in
cmpsb
add
xor
add
push
sbb
add
addb
in
lods
add
call
or
aad
pop
push
add
pop
sbb
cld
adc
movsl
leave
dec
push
add
add
xchg
sub
xchg
pop
push
and
loope
addb
dec
pop
dec
jb
loopne
sub
push
add
mov
or
add
add
add
add
add
cli
mov
push
lock
adc
add
inc
sbbl
arpl
mov
jno
mov
cmp
aad
fwait
or
add
add
jno
add
in
dec
xor
mov
add
adc
das
add
into
jge
outsb
ret
lret
mov
and
add
add
mov
adc
add
add
add
mov
add
dec
push
jmp
sbb
dec
dec
xor
ficompl
fsubs
in
jg
pop
or
push
in
inc
add
add
add
xchg
ss
add
aad
push
ret
pop
std
cwtl
popa
adc
lods
imul
repnz
sub
add
jl
fidivs
push
jno
addb
or
aad
xchg
xchg
add
aad
and
pop
lahf
sbb
repnz
add
jecxz
adc
add
lcall
jo
test
dec
stos
add
fst
mov
and
xchg
xor
xchg
repnz
imul
cmp
mov
add
stos
addl
icebp
iret
cmpsl
hlt
dec
sbb
jno
mov
xchg
xchg
mov
mov
inc
shrl
dec
nop
dec
out
dec
xor
repz
hlt
jns
shrl
add
push
dec
mov
jmp
iret
fwait
lret
in
scas
add
cwtl
addb
push
mov
jo
push
add
dec
rclb
cmp
add
sub
add
push
int
inc
ja
add
jecxz
scas
add
loop
nop
movsl
cld
jne
lods
add
arpl
dec
jns
add
clc
push
loope
clc
lods
add
out
mov
jge
mov
add
lods
and
in
cld
add
add
add
add
pop
sub
add
les
mov
add
pop
out
insl
mov
add
pop
hlt
movsb
add
add
add
mov
pop
out
lock
add
int
cmp
lcall
cmp
mov
add
mov
mov
dec
mov
inc
pop
sbb
cmc
addb
in
rolb
sbb
xchg
jns
into
mov
not
xlat
push
pop
out
push
add
mov
add
in
sbb
iret
aaa
adc
or
add
movsb
add
iret
lcall
pop
jecxz
add
lahf
sub
add
add
popa
ss
cmc
loope
push
add
orl
mov
add
add
add
add
pop
sarl
outsl
jecxz
push
aas
stos
add
xchg
inc
mov
mov
xchg
push
sarb
or
movsl
ljmp
push
clc
outsl
cltd
dec
mov
add
add
jl
dec
addb
xchg
add
inc
cld
and
add
add
xlat
outsb
and
add
cmp
inc
lock
xchg
lock
push
mov
leave
mov
xor
in
sub
inc
or
arpl
mov
add
adc
add
adc
add
mov
test
add
andl
add
lahf
fisttpll
cmp
fcoml
incb
add
ret
add
inc
lds
insb
push
fisubrs
jecxz
mov
into
loopne
icebp
add
orl
scas
add
sar
loopne
decb
cmc
push
add
insl
cltd
xor
test
pop
fnstsw
xorl
enter
dec
hlt
and
add
add
inc
fildl
add
xchg
aad
add
jmp
add
add
divb
repnz
add
imul
jno
neg
call
add
add
and
add
or
cmc
je
or
fimull
clc
jnp
dec
xchg
filds
and
ds
rclb
add
adc
jno
ljmp
pop
movl
idivb
mov
pop
das
rcr
fisttpl
lret
nop
mov
add
js
adc
in
lea
add
mov
add
mov
add
push
add
popf
jmp
jnp
aad
loopne
hlt
jb
or
add
nop
inc
inc
lahf
jmp
add
jo
add
loopne
dec
cmp
xor
out
imul
std
pop
add
add
add
push
inc
das
mov
add
add
cwtl
fst
call
push
cmp
inc
jmp
lea
add
add
mov
add
xor
stc
je
pop
sub
repnz
add
add
imul
lea
pop
push
outsb
fwait
addl
add
fcmovnbe
jg
cmp
add
add
jns
xchg
sub
xchg
jb
xchg
add
sbb
add
mov
out
mov
add
nop
call
cmp
push
xchg
shr
add
add
imul
cmp
push
add
popa
sti
loope
rorl
add
aam
add
call
imul
ljmp
movsl
push
xlat
push
mov
jb
dec
xlat
das
mov
addb
xchg
pop
xchg
imul
add
mov
cmp
jecxz
and
add
addr16
das
xor
pop
adc
loop
mov
jns
dec
std
inc
or
add
fwait
or
icebp
lods
add
cmpsb
add
popa
leave
pop
jb
cmpsl
and
add
add
sbb
inc
movsl
out
add
push
add
inc
push
add
xor
add
sahf
and
sarb
sub
add
add
mov
adc
cli
xchg
xchg
inc
xor
jbe
xor
in
jns
cmpsl
jg
adc
bswap
add
leave
ja
outsb
dec
push
ucomiss
add
add
sub
add
push
add
adc
pop
test
ret
push
jns
add
pop
add
hlt
xor
pop
jle
xor
dec
mov
push
pushf
push
cmpsb
add
inc
lcall
outsb
rolb
cmp
mov
add
add
jmp
xchg
and
add
pop
jl
testl
xchg
inc
hlt
dec
xchg
inc
outsl
pushf
push
pop
push
sbb
ret
jle
popf
clc
mov
cld
movsl
rcll
sub
add
dec
shrl
add
addb
bound
arpl
sbb
cmp
mov
ds
testl
add
jp
pushf
jae
dec
jg
clc
inc
push
int3
pop
xchg
pop
imul
jge
mov
add
test
lahf
sub
mov
sub
add
add
add
sub
add
movsl
mov
jns
test
pusha
aad
add
hlt
xor
inc
pop
sub
sub
fstpl
jb
and
add
lods
repz
lcall
jl
fs
roll
pop
test
add
repnz
add
int3
xchg
push
pusha
inc
xlat
jle
enter
fcmovnb
sbb
inc
scas
push
add
test
add
add
jns
inc
mov
das
add
cmpl
mov
add
sub
add
ja
aam
add
ret
add
rcll
lahf
cmpsl
push
test
sti
popa
jb
jb
add
xchg
inc
dec
mov
cltd
and
mov
out
popl
add
les
movsl
inc
cmc
mov
pop
sbb
jg
xchg
or
add
cmp
mov
add
int
mov
add
imul
add
pop
scas
add
insb
imul
dec
adc
mov
add
push
add
dec
pop
ljmp
into
inc
xchg
out
clc
lock
add
inc
dec
and
popf
rorl
mov
popa
subw
add
lods
or
add
aad
fs
add
pushf
push
inc
subps
lods
add
jge
jnp
decl
addb
pop
mov
xor
mov
and
sbb
add
or
add
add
add
rcl
test
add
xor
add
cmp
cmp
stc
addb
cltd
clc
jp
cli
push
aas
out
add
movsl
inc
cmpsl
aad
scas
add
sub
add
dec
cmp
jno
add
cmp
sarb
add
iret
test
lods
ljmp
add
sub
add
xorl
test
sarb
cmp
cltd
jg
hlt
pop
jno
dec
std
pop
sarl
add
sahf
mov
push
add
dec
popa
aaa
pop
jbe
jg
add
and
xlat
or
add
test
mov
mov
movsl
xor
xor
sbb
add
mov
add
scas
add
push
add
mov
add
add
pop
stos
inc
inc
out
pushf
mov
int
insb
out
mov
pop
bnd
fidivrs
pop
dec
stc
mov
aaa
xchg
add
bound
repnz
mov
add
pop
popa
cmpsb
add
pop
andl
add
add
add
add
pop
repz
in
push
ljmp
add
xor
xor
add
sbb
test
or
outsl
xchg
aad
mov
daa
movsl
gs
inc
sbb
add
sbb
addr16
out
out
add
rcll
addb
and
add
lods
rcrb
clc
cli
push
jnp
add
jp
pushf
ret
mov
add
jge
int3
pop
jo
jp
ss
dec
inc
js
adc
fmuls
jnp
xchg
add
add
jle
test
add
or
cwtd
insb
jecxz
pusha
fmuls
inc
xor
into
lretw
lea
out
clc
xlat
lcall
xchg
into
test
add
add
idivl
movsb
add
js
pop
mov
add
add
add
pop
cltd
lods
add
add
add
cmp
add
add
inc
lea
cmp
add
mov
inc
movsl
lret
jge
or
dec
jae
add
in
movb
cwtl
test
add
pop
adc
imul
lds
aas
jo
add
and
add
jae
cmp
mov
xor
dec
jle
jl
add
fisttps
in
add
imul
lods
repz
lret
inc
dec
pop
sti
lahf
push
push
inc
movsl
ret
ret
mov
add
add
imul
dec
dec
bound
mov
add
adc
pop
daa
lea
add
out
xchg
add
xchg
jp
add
fadds
add
outsl
enter
xchg
cmp
add
mov
add
fcoml
adc
idiv
lock
sub
das
or
add
adc
mov
add
cli
repnz
shrb
add
push
icebp
push
add
lods
add
int3
mov
add
cmpsb
add
sbb
ss
sub
add
fisubl
jae
ja
fwait
jb
out
push
mov
adc
add
jnp
add
pushf
shl
inc
lea
jge
jge
mulb
sbb
mov
and
add
je
jle
les
orl
aaa
imul
add
lret
mov
add
call
ret
test
add
pop
xor
add
mov
pop
xor
loop
addb
jl
add
jge
sbb
add
test
adc
cltd
or
and
and
add
addb
sbb
add
std
repnz
add
xchg
push
ret
pop
shrb
mov
out
xchg
add
sub
add
addb
jbe
inc
clc
xchg
vpsubusb
lcall
add
add
push
sbb
sti
jge
sarl
test
add
cmpsl
jnp
pop
gs
push
enter
js
push
and
add
fildl
push
fneni(8087
xchg
repz
or
add
scas
les
push
fldenv
int3
mov
add
int
mov
out
fsubrp
out
lea
add
cmc
mov
cmp
into
sub
imul
pushf
push
mov
add
mov
mov
into
arpl
fstpt
add
add
jmp
add
push
add
cmp
inc
mov
mov
cmp
dec
call
add
std
adc
and
insl
fildl
add
cli
mov
cli
xor
pop
cmc
pop
mov
add
sub
add
add
add
frstor
scas
jmp
movsl
ret
into
sahf
xchg
ret
pop
inc
negb
sbb
test
add
push
shrb
add
push
test
add
stos
add
mov
fwait
aaa
addr16
setne
scas
add
mov
push
push
add
jnp
or
xor
in
in
dec
pop
test
add
addb
jae
loopne
ret
jle
add
rcrl
add
les
and
add
xchg
imul
add
out
je
sub
add
add
inc
xchg
adc
popa
pushf
outsb
pop
dec
jle
add
mov
add
decb
in
cltd
pop
call
pop
stc
aam
inc
hlt
insl
mov
pop
cmp
push
or
add
add
inc
stc
ret
pop
or
add
add
int
movsl
in
jnp
sti
dec
js
rcl
sahf
mov
dec
or
add
and
lods
add
loope
push
push
arpl
test
add
add
fs
mov
jns
sbbl
add
dec
adcl
ja
sahf
pop
push
insb
or
pop
and
add
outsb
adc
adc
cmp
cmpsl
clc
and
cli
mov
das
repnz
inc
sbb
lret
add
pop
inc
cli
mov
jbe
in
lea
add
imul
insl
sbb
pop
call
adc
addr16
cmpsb
add
aam
push
fs
lods
add
in
mov
jbe
ffreep
fwait
push
cmp
cwtl
mov
addr16
icebp
dec
fwait
js
mov
mov
call
push
add
add
add
fstp
clc
or
add
pop
rorb
addr16
rcll
dec
sub
add
jae
ret
clc
adc
fs
test
sub
jns
call
bound
add
jb
add
pop
in
xchg
xor
pop
and
add
leave
xor
test
add
mov
jae
add
popa
ds
mov
fucomp
fcomi
aaa
call
and
inc
add
enter
jge
adc
out
ljmp
adc
and
dec
mov
loop
cmpsb
add
mov
aam
fistpll
add
sub
add
outsl
out
add
fadds
add
dec
jae
pop
ret
lcall
add
mov
add
sbb
insl
push
add
mov
add
leave
popf
or
add
xchg
hlt
xchg
arpl
inc
sub
add
shlb
mov
add
aam
add
mov
fdivl
movsl
cmp
or
add
add
add
xchg
lret
push
in
inc
xchg
test
add
xchg
adc
lcall
insb
data16
cmc
popa
cmp
add
cmp
jns
xchg
lcall
adc
pop
adc
pop
bound
inc
inc
mov
and
xlat
xchg
addb
lahf
jo
cltd
mov
pop
inc
je
mov
add
repz
jbe
mov
add
xor
addb
or
add
inc
xchg
outsl
jo
adc
pop
int3
cmc
repz
stc
lods
xor
add
aam
add
add
xchg
add
pop
sub
cli
cmp
add
and
add
test
add
inc
ja
xor
fcoms
sahf
fisubrl
add
gs
add
shl
imul
jae
shrb
outsb
xchg
sub
xor
add
pop
jmp
push
push
test
add
in
test
xchg
xchg
pcmpeqd
dec
inc
lock
sub
add
add
add
xchg
call
sbb
shrl
add
jo
out
into
stc
mov
ficomps
lds
cmpsl
pop
inc
test
mov
add
pop
push
sub
adc
and
test
add
inc
adc
int3
push
pop
lock
push
dec
lea
cmp
dec
mov
add
add
mov
pop
lahf
push
add
xchg
clc
aad
xor
jmp
lret
mov
lock
adc
lahf
lcall
mov
add
loopne
mov
mov
add
xor
fistps
lods
add
mov
pop
push
add
loop
je
daa
les
movsl
xor
out
mov
mov
mov
shlb
jnp
push
add
add
xorl
add
cmp
add
ret
push
mov
add
jg
stos
add
cmp
lcall
jne
cmp
jg
xor
mov
loope
fidivrl
loope
jge
aad
arpl
add
pop
lahf
add
add
lcall
inc
sbb
jae
cmpsl
sbb
add
call
or
add
xchg
into
dec
mov
mov
sub
add
std
call
mov
add
push
dec
sub
add
call
pop
xchg
pop
sti
jg
dec
shrb
add
add
and
add
shr
xlat
iret
jns
pop
les
adc
mov
or
add
mov
imul
mov
add
jmpw
add
dec
dec
sti
imul
mov
and
rorl
leave
flds
cmpsl
fs
pop
pop
mov
mov
sub
adc
push
add
fwait
push
add
sbb
std
mov
cvtps2pd
push
add
adc
xchg
ja
push
test
add
mov
aaa
jne
add
add
mov
push
jno
mov
pop
insl
jecxz
add
xor
addr16
xchg
enter
into
and
add
mov
repz
movsb
add
addb
in
sub
ja
aas
test
add
or
add
int3
lahf
cld
jne
add
test
add
fwait
sbb
add
add
jge,pt
push
call
rorb
mov
jge
add
mov
add
sbb
add
mov
adc
aam
mov
add
cwtl
mov
dec
mov
jnp
push
sbb
leave
pop
dec
cmp
addb
cmp
repnz
and
add
push
cmp
jg
dec
adc
jg
ja
cmp
add
add
stc
repz
inc
mov
mov
xor
mov
stos
add
pop
sbb
ljmp
fdivrp
push
das
xchg
add
jecxz
push
mov
ds
xchg
pop
jbe
cmp
je
test
add
out
or
add
jo
shl
ficompl
push
add
in
ss
add
or
add
in
adc
out
mov
into
jl
insl
jae
fsubs
dec
lock
add
aas
inc
imul
add
xchg
add
pop
hlt
shll
add
and
add
rolb
add
stos
or
dec
test
add
add
popa
clc
adc
jle
imul
lea
addr16
in
stos
add
xchg
out
jg
and
add
push
scas
add
fiadds
arpl
fsubrs
add
call
add
shl
mov
adc
xor
add
cmp
add
push
imul
inc
mov
mulb
add
cmp
add
out
adc
jno
mov
lock
sbb
xchg
mov
in
adc
ja
lret
mov
ret
dec
xlat
sti
sbb
add
add
cmpsl
sub
add
add
add
add
adc
add
shll
sbb
sub
push
in
pop
test
add
add
decb
push
test
mov
loop
add
push
insl
into
in
xchg
jne
add
addb
in
sbb
xchg
cwtl
mov
sub
add
push
sub
lea
add
add
les
lds
add
inc
cli
mov
or
add
add
add
mov
inc
popf
sbb
add
push
xor
or
add
adc
add
mov
add
cmp
movsb
add
test
add
insb
movsb
add
adc
jo
xchg
lds
outsl
sahf
cltd
call
add
cmpl
add
les
inc
mov
jne
add
sub
aam
in
ljmp
nop
test
add
int
dec
add
mov
inc
xchg
lret
addb
xchg
xchg
je
sbb
lahf
test
add
lds
xor
inc
lcall
add
add
mov
cwtl
mov
xor
inc
xchg
jns
fstps
mov
add
and
add
imul
xlat
imul
dec
push
sahf
jns
cmp
shll
das
pusha
mov
add
push
sub
pop
inc
inc
dec
icebp
hlt
inc
fiadds
sbb
repz
repz
add
push
mov
add
test
add
iret
lret
mov
stos
inc
jecxz
dec
movsb
add
ljmp
add
xor
fs
add
sahf
lahf
aaa
cmp
xor
cmp
add
cmpsb
add
push
shrl
add
lods
lods
adc
in
test
jne
sub
add
and
add
jb
ja
loop
add
inc
into
adc
mov
mov
int3
ss
lret
and
imull
mulb
xchg
mov
xchg
add
xor
xchg
addr16
out
adc
add
stos
push
mov
ljmp
repnz
lods
push
orl
push
ss
push
cmp
shll
add
test
add
or
cmp
add
cmp
pop
out
add
sub
add
pusha
and
add
or
add
jmp
sahf
inc
pop
xlat
pop
mov
add
lock
sub
add
push
aaa
cmp
sti
rcrl
add
add
add
sbb
inc
xchg
dec
pusha
cltd
push
cmp
ffree
cwtl
adc
dec
test
add
dec
aam
jne
push
add
les
sarb
out
fbstp
cld
outsb
fstpt
loopne
cmpsb
add
dec
xor
dec
sbb
push
cmpsb
add
lret
sub
or
add
add
add
adc
lods
add
jns
and
jp
pushf
cmp
sti
stos
add
add
stos
adc
sub
push
push
test
inc
mov
xor
repz
push
mov
pop
push
imul
pop
js
jbe
cli
fimull
ss
or
in
push
or
and
insb
mov
loop
iret
mov
xlat
pushf
add
add
fwait
loope
std
dec
lcall
mov
js
repnz
dec
jl
add
or
add
andl
or
add
popf
lods
add
sti
addr16
test
add
sbb
add
inc
mov
and
add
loope
out
add
mov
pop
sub
movsl
fmuls
cmp
add
stos
dec
xchg
insl
cmp
pop
xchg
bound
xchg
stos
add
je
je
add
ss
push
or
add
add
ficoml
dec
mov
mov
dec
icebp
add
fildl
xor
aam
xor
loopne
add
das
icebp
sub
lret
mov
add
jg
std
dec
leave
fstps
sar
inc
inc
adc
scas
add
xor
sbb
add
enter
xor
mov
mov
xchg
add
add
mov
je
arpl
cmp
sub
add
in
sub
add
inc
cltd
xchg
add
or
add
test
add
dec
sbb
mov
mov
jnp
mov
cwtl
mov
add
imull
pop
cmp
call
fwait
adc
add
sbb
inc
pusha
adc
add
push
push
add
push
sbbl
inc
sahf
cmp
add
mov
add
cltd
or
cmpsb
add
mov
stc
mov
cld
mov
add
fistpll
add
movsb
add
mov
add
add
stos
add
sbb
pop
mulb
lods
pop
cltd
je
add
pop
fidivs
in
add
add
in
loop
cmp
jp
add
xor
in
fldt
and
leave
not
jbe
add
cmp
sti
dec
mov
add
mov
lods
add
or
add
outsl
mov
add
mov
add
push
pop
mov
lock
adc
xor
adc
std
jns
sub
in
out
pusha
xchg
adc
mov
pop
insb
in
push
sbb
add
or
mov
add
lcall
dec
push
adc
aam
pop
fucomi
add
stos
push
jg
add
ds
and
in
mov
std
lcall
add
cmp
lahf
daa
jnp
push
add
jle
and
add
jae
sub
ret
add
loope
add
ds
lret
add
pop
jl
repz
movsb
add
or
add
xchg
add
add
sbb
add
push
hlt
push
jmp
repnz
fistpl
adc
mov
push
sub
add
add
xor
xchg
lds
add
mov
nop
int3
movsl
jb
aam
repz
xor
pop
addb
mov
and
add
or
add
jl
push
into
or
add
add
jmp
add
testl
add
std
sub
add
and
add
and
add
add
sarl
mov
add
add
popf
adc
sbb
hlt
jae
add
test
add
add
xor
popa
test
lret
fiadds
add
mov
cld
push
jb
insl
sbb
pop
ret
les
push
add
xchg
les
pop
into
arpl
add
bound
add
test
lret
add
fwait
not
stos
cmp
jnp
lea
sbb
cmpl
or
add
addr16
test
add
jecxz
push
add
fs
xor
push
sti
mov
mov
repz
add
dec
mov
fistpl
mov
add
mov
repnz
adc
icebp
adc
sarb
sub
repz
sub
add
push
imul
mov
pop
jbe
xchg
in
in
or
add
add
int3
mov
add
mov
add
dec
dec
cmp
icebp
dec
aaa
rcll
jge
ja
dec
jo
xor
lods
add
jge
and
add
jno
inc
cmpsb
add
mov
ds
inc
inc
inc
data16
shr
sti
sub
add
inc
sbb
dec
mov
add
add
add
add
fildl
and
mov
bound
outsl
sub
divb
add
in
xchg
cmp
test
add
pop
mov
sbb
mov
add
add
cmp
sarl
add
add
pop
lods
add
scas
test
add
xchg
pushf
sti
mov
add
aas
mov
or
add
mov
popa
dec
das
and
add
je
add
cmc
test
add
add
pop
cmp
jmp
adc
sub
aad
mov
popf
jmp
arpl
movsb
add
xchg
add
dec
pop
sub
add
mov
fwait
stos
mov
or
mov
ds
test
add
or
add
jl
xor
jle
lock
dec
xor
and
andl
or
sbb
add
cmc
js
ret
add
add
test
add
ds
les
jp
adc
add
and
out
int
push
or
inc
dec
jne
rorl
adc
inc
push
add
enter
shll
dec
add
popf
inc
lds
cmpsb
add
addb
pop
xlat
test
add
mov
xchg
sub
add
mov
add
subl
call
sub
add
and
push
int3
insl
xchg
cmpsl
fcmovu
pushf
imul
icebp
jl
add
push
hlt
push
mov
add
imul
adc
pop
push
imul
and
add
decb
or
add
mov
push
mov
or
add
and
add
jmp
imul
pop
jne
add
add
jp
xchg
xor
fs
add
add
mov
add
mov
insb
mov
sti
dec
push
stos
mov
add
fistps
jns
push
jge
add
add
cmp
std
aaa
cmp
push
adc
mov
lahf
cmpsb
add
int3
cmp
mov
add
sbb
lret
dec
sub
add
call
xchg
pop
and
in
mov
adc
add
addr16
add
sub
add
mov
pusha
repz
add
lods
add
outsb
pusha
sub
jp
add
in
mov
dec
push
mov
add
pop
xchg
add
inc
sbb
out
add
sub
add
dec
dec
mov
add
jb
add
push
add
out
lds
push
fmuls
add
jmp
cli
push
push
cmp
dec
imul
movsb
add
into
mov
fwait
addb
addr16
sbb
add
add
dec
add
add
jg
cmp
add
mov
fsincos
and
cmp
cmp
movsb
add
aas
int
push
lods
xor
pop
and
add
cmp
add
xchg
or
stos
add
inc
or
add
adc
sbb
into
data16
rclb
add
fldenv
jge
sub
add
add
ror
jmp
jl
add
outsl
hlt
loope
xor
loop
add
mov
in
lcall
not
xor
cmp
add
add
adc
stos
add
add
add
sbb
mov
mov
add
fdivl
push
ljmp
xchg
inc
xchg
add
add
adc
add
cmpsb
add
pop
sbb
pop
xchg
addb
push
mov
ret
popf
lret
and
cwtl
jge
mov
lock
add
jl
je
sarl
mov
add
popa
adc
adc
add
jle
fidivrl
jmp
add
neg
orl
jno
dec
mov
add
ds
adc
lea
sub
add
out
jge
push
fld
aaa
jo
clc
fimuls
add
cld
xchg
mov
add
add
xchg
ljmp
add
insb
jno
lods
cmp
add
adc
mov
addb
std
adc
add
and
xchg
or
add
add
mov
mov
add
add
adc
add
out
add
test
imul
add
call
mov
mov
cmp
test
lret
mov
cmp
in
adcl
mov
mulb
fcmove
roll
add
hlt
jne
outsb
int3
cmp
stos
add
jle
mov
add
faddp
scas
ja
lret
cmpsl
imul
pop
sub
add
gs
data16
ret
scas
jl
xor
mov
add
xor
add
sub
add
and
add
cmpl
pop
fsubrl
add
in
data16
insl
sbb
jge
xor
je
and
lret
movsl
xchg
dec
jo
cwtl
ret
add
inc
cmpsb
add
add
add
fs
mov
fs
push
add
mov
mov
jmp
mov
cmc
mov
cmp
ss
test
add
add
addb
arpl
inc
orl
cmp
cmp
in
mov
add
enter
add
dec
xor
aaa
movsl
aam
xor
add
xor
cmp
cmpsb
add
out
add
rorl
add
aas
inc
into
add
add
add
mov
add
fs
shll
loopne
push
mov
imul
mov
inc
shr
fists
mov
shll
lret
mov
add
add
rcr
push
je
or
jne
push
fidivs
sbb
xchg
add
mov
xchg
aas
or
insb
xor
sarl
fisttpl
add
xchg
enter
das
fildl
int3
jp
sti
cli
cmpsb
add
clc
and
lcall
mov
pop
leave
into
inc
cltd
push
xchg
inc
and
ret
sahf
hlt
jne
jnp
mov
add
movsl
sbb
or
add
dec
in
stc
mov
push
pushf
jb
lds
lahf
into
das
pop
sbb
add
jno
add
ret
stc
movsb
add
cwtl
inc
std
stos
add
adc
jecxz
mov
bnd
add
jb
sarb
cli
mov
addb
fs
or
add
cmpsb
add
jp
setp
jmp
rol
pop
jp
add
loope
dec
mov
add
adc
repz
bound
add
add
sti
adc
add
mov
jne
push
scas
insl
and
mov
cmp
adc
xchg
mov
dec
pop
call
push
add
out
adc
push
lods
add
mov
add
add
sub
add
stc
adc
fisubs
mov
arpl
test
add
hlt
leave
xor
xor
add
fcompl
add
xchg
das
jp
dec
push
xor
aas
filds
xor
lods
add
enter
add
in
inc
lcall
push
pop
ret
je
nop
fidivrl
sub
xor
jp
pop
shrb
cmp
mov
test
add
cwtl
or
sbb
add
cmp
pop
adc
adc
test
add
add
dec
mov
lret
add
sub
movsb
add
sarl
cmc
mov
test
iret
rcr
fbld
xchg
xchg
inc
repz
leave
sub
pushf
sub
add
mov
add
add
cmpsl
xor
sub
scas
mov
inc
call
push
or
sub
add
or
add
lds
xor
add
and
add
add
xchg
loope
xor
jne
mov
push
jle
sub
add
movsb
add
sub
add
data16
stos
add
push
fistpll
pop
dec
stos
mov
dec
pop
cwtl
push
push
add
pushf
or
sbb
andl
add
adc
dec
sbb
and
add
cli
inc
inc
dec
inc
imul
xchg
add
lock
add
add
sub
add
add
add
sbb
gs
add
add
jmp
fcmove
push
add
dec
stc
cmc
sbb
jb
mov
xor
stos
add
jae
out
fmulp
xor
add
sbb
scas
mov
mov
add
add
stos
add
add
sbb
mov
in
repz
xor
jge
push
ja
nop
test
cmp
je
lods
add
add
xchg
dec
data16
inc
jno
and
add
fidivl
loop
push
lcall
outsl
inc
push
push
daa
mov
cmp
data16
push
add
mov
lods
add
mov
adc
movswl
add
pop
movsb
add
xchg
popf
xchg
call
add
mov
shl
xor
add
inc
cmp
inc
out
push
adc
les
pop
test
into
push
daa
xchg
add
push
sbb
int
mov
cmp
add
xchg
aas
in
and
add
push
add
mov
add
add
sub
add
testb
jp
cmp
or
fimuls
push
add
out
add
jl
hlt
ret
add
sbb
mov
fnstsw
clc
and
jecxz
lea
xchg
call
divl
hlt
ret
mov
jns
movsl
add
xor
add
lock
out
jg
or
add
xchg
test
push
ljmp
out
add
add
add
cmp
ja
add
mov
mov
add
mov
adc
mov
add
or
xor
sbb
in
add
clc
push
add
jb
clc
ljmp
mov
mov
or
add
jae
push
jbe
add
popa
in
stc
add
leave
mov
xchg
pop
addb
jle
inc
pop
and
scas
stos
add
xchg
fiaddl
stos
add
pop
cmp
pop
or
icebp
sbb
stos
add
gs
addb
xchg
shl
notl
push
cld
cmp
adc
pop
addb
mov
jl
dec
fcom
stos
mov
add
ss
add
add
add
cmp
or
jg
xchg
mov
add
dec
mov
add
xor
add
add
add
ret
insl
sub
pop
jl
das
pusha
movzbl
cmp
cmp
xor
push
cmp
dec
add
add
jge
push
loopne
cwtl
mov
add
dec
add
imul
mov
outsl
cmpsb
add
aas
stc
je
add
add
mov
add
scas
add
aam
xchg
push
outsb
faddl
shl
sbb
cmp
movsb
add
js
jge
pop
outsl
insb
sub
add
pop
xlat
xchg
jl
sbb
cmp
dec
add
ljmp
les
pop
into
add
repz
xlat
xor
out
sub
jmp
jno
mov
sbb
addr16
fwait
adc
adc
pop
inc
adc
movsb
add
dec
mov
adc
push
icebp
push
ffree
pop
sti
xor
sbb
add
jb
add
das
nop
inc
movntq
in
xor
fiadds
and
add
xchg
in
inc
lds
mov
mov
add
add
or
add
and
add
aaa
cmp
insb
ja
mov
inc
add
into
ljmp
lret
fs
cmp
cmp
stos
sub
ds
icebp
adc
out
sbb
adc
add
js
in
pop
imul
add
jne
fistps
fldcw
mov
add
add
ljmp
pop
xchg
nop
ja
mov
cmp
add
stos
add
dec
sub
add
jne
sbb
inc
jge
jp
int
push
aam
cmp
mov
add
xchg
mov
and
scas
add
addb
mov
add
jo
cmp
fimull
add
movsb
add
shl
add
je
cmp
jae
clc
call
mov
add
pop
cli
test
add
test
inc
jnp
test
mov
lret
sub
add
adc
adc
in
xchg
daa
ds
jo
aam
rcrl
mov
jl
add
add
cmpsl
fprem1
mov
push
movsl
mov
push
shll
int
mov
lds
add
addb
jl
test
add
pop
pop
inc
push
add
std
jb
pop
pop
jecxz
inc
addb
pop
add
add
sub
jecxz
mov
add
dec
test
add
jp
js
hlt
xor
or
add
add
add
fcom
fcoml
loopne
ss
add
mov
call
jecxz
aam
divb
test
dec
jmp
pop
xchg
movsl
adc
dec
cmpsb
add
mov
inc
aad
xchg
rorb
add
ss
dec
adc
jnp
test
add
pushf
or
add
cld
test
add
add
cmp
cltd
dec
xchg
push
aas
nop
test
inc
loope
shll
addb
fsubl
icebp
xchg
inc
insl
mov
test
add
or
add
hlt
pop
loop
loopne
sbb
push
mov
xor
std
mov
pop
in
add
add
push
bound
outsl
int3
clc
xchg
fistps
add
cmp
mov
add
push
rcrb
jns
mov
js
xchg
jae
push
dec
jne
jno
fbstp
adc
repnz
fbstp
jb
add
xlat
insl
fwait
test
add
add
dec
mov
dec
mov
pusha
jecxz
pop
cmp
in
fucomi
and
fs
push
pop
inc
bound
inc
addb
mov
loopne
lret
jb
xor
cmpsl
aaa
xchg
mov
add
jno
arpl
je
mov
dec
addb
xchg
mov
in
aad
add
and
add
dec
loop
hlt
sub
add
sbb
mov
add
out
inc
dec
fcmovbe
pop
pop
jo
add
add
add
add
add
xchg
ds
inc
repz
push
cmp
out
or
add
add
lock
add
pop
push
jae
add
xchg
sub
add
mov
push
add
mov
add
sbb
add
sbb
jp
in
std
dec
jne
jecxz
mov
push
mov
add
or
sub
push
insl
jle
or
add
fcompl
shlb
je
add
add
push
lods
faddl
add
and
add
add
int
pop
fimuls
imul
or
push
add
scas
add
xchg
in
xor
mov
add
push
insb
adc
mov
aam
lea
and
mov
cmc
pop
sahf
fsubl
mov
arpl
outsb
push
pushl
mov
sbb
xchg
cwtl
pop
mov
inc
divb
mov
loop
fcoml
add
add
cmp
cmp
push
cli
roll
add
dec
mov
cwtl
dec
xchg
lock
or
add
add
push
aad
dec
inc
shlb
out
cmp
push
add
lahf
sarb
mov
mov
add
jp
subl
imul
les
add
repnz
cmpsb
add
jg
add
test
mov
jmp
push
add
xlat
pusha
dec
ljmp
add
add
hlt
rorb
add
xor
fldt
add
sti
pushf
montmul
cmpsb
add
add
call
add
jp
pop
stc
push
add
hlt
xchg
out
test
add
mov
jg
mov
leave
shl
dec
addb
jno
out
jbe
add
lcall
mov
add
scas
xchg
lcall
loope
add
add
sub
jg
cmpl
add
sub
lods
add
mov
xchg
xor
add
jl
push
add
inc
mov
add
addb
inc
sbb
lret
push
add
push
pushf
nopl
and
add
in
mov
jbe
clc
xor
push
sahf
cmp
int3
movsb
add
mov
popa
daa
outsb
shll
pop
xor
xchg
mov
adc
pop
aad
aam
jo
or
mov
xchg
in
ss
xchg
add
imul
sbb
mov
add
pop
fidivl
pusha
or
cmp
shrl
in
push
ror
push
add
pop
movsl
stos
add
rcrb
shl
push
sbb
enter
mov
add
cmp
mov
add
mov
loop
cmp
fwait
mov
cmp
shlb
in
arpl
add
into
gs
xlat
xchg
je
or
lret
lahf
add
add
sbb
fnsave
sub
add
test
add
aas
and
add
loope
adc
loope
pushl
sbb
cmp
cltd
ss
and
add
ljmp
inc
adc
imul
mov
add
sarl
shrb
aad
or
add
mov
mov
add
mov
add
lock
std
push
xchg
js
cltd
mov
add
cmpsb
add
or
in
jle
adc
sub
add
push
push
jne
ret
mov
add
fstl
movsb
add
add
adc
lods
add
shll
lret
pop
out
fnsetpm(287
mov
mov
jp
mov
std
pop
pushl
inc
add
fdivp
repz
das
push
jo
lds
aas
pop
dec
or
nop
fsubrl
add
add
add
shlb
xor
add
push
loope
paddsb
and
or
add
fiaddl
das
loop
sub
add
add
adc
aam
adc
popa
les
push
daa
loop
push
hlt
aad
dec
mov
out
into
or
add
inc
aas
jg
ds
mov
rcl
ds
mov
stc
outsb
sbb
imul
in
movsb
add
inc
test
mov
cwtl
into
mov
add
add
aad
btr
rcrb
xchg
push
add
inc
lahf
cmp
mov
add
push
xor
into
xchg
sti
lock
or
add
iret
xchg
imul
dec
sbb
adc
fdivrl
imul
mov
popa
mov
add
add
jb
and
add
aas
gs
mov
mov
faddp
sbb
addr16
arpl
and
add
rorb
add
mov
and
add
add
sub
imul
outsl
outsb
pushf
js
aaa
enter
dec
mov
mov
add
pop
sti
add
and
int3
addb
int3
je
fsubs
add
push
pop
lcall
xor
outsb
xchg
lds
add
mov
adc
enter
add
cli
mov
imul
shr
fbld
add
xor
add
mov
ds
and
add
mov
add
cmp
cmp
add
push
aaa
call
add
add
xchg
je
sbb
data16
insb
jge
add
aaa
add
add
mov
lods
mov
mov
add
test
add
cmp
or
add
iret
imul
imul
repnz
inc
xchg
fwait
insl
mov
je
mov
add
adc
cmpsb
add
loop
ret
addb
pop
stos
add
and
add
test
add
scas
add
ja
fbstp
jo
lock
ljmp
push
cmpsb
add
les
pop
mov
movsb
add
nop
ds
mov
mov
lret
faddl
add
stos
add
fnstenv
ja
sahf
sbb
add
test
add
dec
fdivp
test
add
xor
sub
call
inc
mov
add
add
outsl
mov
jns
add
imul
xchg
lock
std
ret
cmp
flds
push
sbb
outsl
inc
pop
cwtl
add
sarb
sbb
mov
xor
shlb
add
add
pop
push
incl
add
xchg
notl
mov
xchg
add
into
ret
out
subl
cwtl
or
add
lahf
lcall
and
add
ljmp
jno
push
add
jmp
add
mov
repz
mov
ss
sub
call
sbb
xor
mov
fldenv
jno
ret
jl
add
roll
fnsave
adc
inc
jecxz
movsb
add
xchg
push
add
in
push
add
sbb
xor
xor
pop
add
addr16
in
imulb
add
loope
inc
mov
add
cmc
outsb
xchg
push
push
or
add
and
add
sbb
call
loopne
add
scas
jns
mov
cmp
ljmp
push
jecxz
jge
mov
add
lea
ss
inc
sbb
add
dec
movsl
pusha
add
add
add
les
add
addb
sub
add
add
lcall
repz
inc
inc
pop
ret
add
add
add
cld
fs
addb
pushf
sub
pop
add
add
ret
sub
or
add
inc
insb
ficompl
popf
jno
add
notl
daa
mov
inc
fistpll
test
ss
mov
cmpsb
add
rolb
lods
add
je
jne
ljmp
faddp
mov
add
cmp
imul
std
jne
inc
xor
jmp
out
jbe
adc
xor
repnz
loop
push
fisubl
lds
jp
push
and
add
sti
mov
fdivs
in
sbb
movsl
xor
dec
jmp
cmp
fdivs
add
add
or
add
or
add
pop
inc
outsl
addb
lahf
push
inc
outsb
push
add
leave
cmp
xchg
mov
adc
push
jle
push
push
add
out
add
imul
push
mov
addl
repz
dec
jl
daa
mov
leave
adc
mov
imul
sbb
adc
add
mov
add
insb
push
add
mov
pusha
fildll
jmp
gs
xbegin
jmp
xor
add
stos
add
lcall
les
add
or
stc
fdivrl
push
dec
loopne
push
pop
lcall
cmp
std
int3
lahf
sahf
jmp
mov
pop
je
sbb
popf
in
das
loop
add
add
cmpsl
fstps
add
fisubrl
lock
les
add
inc
mov
add
inc
pusha
stc
stos
dec
arpl
mov
stos
fnstenv
add
add
movsl
xchg
into
sahf
mov
and
add
xor
sub
add
loopne
fwait
dec
scas
add
sbbl
test
into
inc
lock
xchg
jnp
fcom
imul
add
mov
add
push
cmp
aas
fcmovne
lahf
scas
popa
enter
stc
mov
mov
sub
add
loope
je
lds
stc
mov
arpl
lds
stos
rcrb
mov
loopne
aad
push
into
in
sahf
fsts
adc
cmp
stos
and
add
xchg
xlat
or
add
jl
adc
add
aad
and
cmp
aas
mov
add
out
mov
pusha
fildll
mov
cmpsb
add
push
add
lret
mov
and
add
int3
sbb
mov
add
add
lret
cld
pop
in
ficompl
imul
dec
push
add
sti
test
pop
mov
add
add
add
sub
test
xor
add
adc
aad
das
mov
adc
add
or
in
dec
and
add
cmp
jae
cwtl
mov
pop
adc
mov
add
out
adc
push
inc
xchg
xchg
push
add
push
add
add
push
add
nop
dec
test
jp
sbb
inc
mov
add
add
pop
pop
pop
push
adc
movsl
ficomps
mov
push
sub
test
lahf
roll
jecxz
adc
push
insb
clc
xchg
add
add
add
testb
pop
test
add
pop
mov
nop
cmp
out
cmp
or
pop
cmc
sub
add
sbb
test
push
pop
scas
add
mov
add
leave
leave
xor
sbb
fbstp
add
popf
incb
in
test
fmul
sbb
icebp
sub
add
mov
bound
sbb
mov
outsl
fistpll
add
ds
add
addb
clc
and
add
or
jecxz
dec
inc
jbe
jp
add
rolb
aam
mov
add
ds
add
inc
lods
incb
xchg
sbb
jae
scas
mov
add
push
sbb
pop
push
push
mov
or
repnz
dec
and
add
rclb
in
out
mov
dec
xchg
mov
add
and
add
add
xchg
and
ss
push
add
cmpsl
scas
add
pop
subl
and
adc
push
mov
mov
push
jg
add
jl
add
cld
xchg
dec
repnz
jnp
hlt
lahf
or
add
add
insb
inc
push
cmc
xor
jae
add
repnz
add
sarb
shrl
adc
mov
test
add
and
add
add
ret
cltd
sarl
cli
leave
mov
loop
or
add
add
push
lods
add
xchg
popf
mov
mov
mov
add
test
mov
xor
cld
push
inc
xchg
add
or
push
pop
push
shlb
add
sbb
fldcw
add
loopne
pushf
fwait
inc
mov
add
or
sub
add
mov
push
add
jl
sbb
popa
jl
lcall
add
add
ss
pop
cmp
xchg
out
push
jp
out
scas
add
mov
cmp
add
sub
or
add
dec
dec
mov
enter
inc
jge
mov
fiaddl
fwait
inc
outsb
inc
cmp
js
add
sbb
mov
outsb
mov
push
jp
xor
pop
push
push
cwtl
sbb
push
jnp
loop
maxps
shlb
ret
mov
add
iret
or
mov
out
push
test
add
push
xor
jmp
add
fisttpll
add
js
jnp
add
add
mov
test
push
cmc
mov
push
jbe
adc
add
cwtl
bound
aad
std
push
cmp
mov
add
push
push
dec
jmp
add
mov
ljmp
outsb
pushf
inc
push
add
jmp
int3
push
hlt
add
into
add
add
add
sbb
loopne
in
out
mov
test
fst
jle
jmp
pop
xchg
cwtl
stos
data16
add
lds
mov
addr16
out
or
add
mov
test
add
mov
popa
cmp
adc
add
add
push
jmp
rcrb
add
jl
add
js
xchg
addl
sarl
in
insb
dec
cmp
adc
lock
cmp
push
mov
mov
add
cmpl
pusha
arpl
xchg
dec
hlt
sbb
push
or
add
mov
jp
adc
adc
add
fcoms
add
mov
mov
add
cltd
imul
gs
pushl
adc
imul
les
mov
xchg
cmpsb
add
mov
inc
std
cltd
push
add
mov
add
add
das
inc
arpl
and
add
lahf
push
pushf
lret
lahf
test
jmp
loopne
sbb
pop
fucomp
inc
lock
jbe
jge
and
add
add
cmp
xlat
push
add
lock
adc
mov
add
in
iret
jae
in
pop
ret
jb
addb
pushf
jmp
add
aas
sub
daa
shll
sbb
lret
xor
adc
cli
mov
push
sub
popf
cmpsl
out
loope
loope
mulb
add
or
add
fs
add
outsb
push
xchg
dec
rep
add
mov
add
frstor
repnz
imul
sbb
dec
push
imul
add
mov
add
lcall
ljmp
leave
inc
pop
dec
jns
add
outsb
lds
add
xchg
scas
ja
into
sbb
add
outsb
call
mov
pop
lods
add
mov
add
leave
or
ja
inc
xchg
movsb
add
dec
imul
fildll
push
pop
sti
push
push
xchg
sbb
add
test
mov
cmpsl
mov
push
sub
or
add
ret
cmp
jmp
pop
addb
loop
fsubrl
call
mov
repnz
inc
mov
pop
add
xor
dec
ret
xchg
push
sbb
cmp
cltd
out
add
sbb
pop
test
add
adc
jl
pop
or
add
fistps
cmp
sbb
test
aaa
popf
outsb
rorb
cmc
sub
mov
ret
dec
arpl
push
dec
add
add
mov
add
pop
xchg
xchg
add
mov
icebp
std
jae
add
xor
aam
pop
lea
add
mov
mov
add
xchg
mov
in
jl
pop
rcll
and
dec
roll
ljmp
or
add
jmp
push
add
add
sti
push
add
adc
dec
push
pop
pop
mov
cmp
mov
add
inc
loopne
fadds
push
jmp
out
icebp
add
mov
mov
add
add
xchg
add
lret
sub
mov
add
inc
cld
vcvtps2dq
mov
test
adc
out
pminub
add
xchg
ror
cmp
cmp
or
add
mov
add
add
cmp
lret
add
add
mov
add
add
dec
ljmp
mov
add
mov
add
push
add
jecxz
jp
push
std
testb
and
and
add
add
pusha
jb
and
push
fucomp
add
dec
or
add
add
xorl
jg
imul
fwait
push
add
fs
xchg
movl
inc
bound
call
jle
add
dec
sub
je
add
add
cmp
fsubr
cmp
int
or
add
insb
or
add
ficoms
mov
aad
mov
and
bnd
sbb
inc
enter
xchg
add
inc
push
jne
adc
cmp
sub
clc
mulb
lea
pop
and
and
add
mov
ljmp
shl
jae
add
aas
scas
add
int
testl
add
and
add
imul
add
xor
jae
cvtpi2ps
add
in
in
inc
push
add
xor
and
pop
mov
addb
loop
jle
in
loopne
push
mov
xchg
aaa
mov
add
enter
add
cmpsb
add
sarb
add
add
add
iret
jp
pop
and
add
and
ss
or
add
add
outsl
adc
sub
add
in
cmpsb
add
lret
add
adc
xlat
and
mov
add
out
loopne
dec
mov
addb
adc
js
arpl
lahf
pop
xchg
sub
add
stos
add
mov
add
dec
daa
jge
arpl
add
rolb
xor
pop
mov
mov
add
inc
xchg
insl
jno
pushf
xchg
pop
inc
sbb
sbb
icebp
jae
jbe
rcll
sub
add
pop
cmpsb
add
pop
test
nop
fisttpll
cli
jmp
add
rorb
and
xchg
adc
or
jno
add
add
add
add
pop
iret
xchg
mov
add
ja
add
adc
add
push
xor
jg
jecxz
add
aad
xchg
pop
lcall
add
add
lret
dec
inc
enter
inc
pushf
pop
lea
push
xor
pop
add
add
xchg
push
cltd
and
add
add
push
imul
and
data16
jne
mov
add
push
loopne
inc
and
jnp
push
sbb
add
add
jp
out
or
add
cmp
fwait
mov
cltd
mov
imulb
add
add
test
testl
call
or
add
push
cwtl
mov
xchg
mov
add
inc
popl
arpl
add
add
scas
or
add
int
or
push
jle
add
sub
add
pop
inc
xlat
insl
xchg
fwait
adc
add
mov
jp
mov
dec
addr16
pop
ja
sti
lock
add
add
imul
xor
jle
add
dec
push
cltd
ret
sbb
fstpl
adc
mov
adc
dec
fimull
cwtl
aaa
aaa
mov
out
das
xor
add
add
sti
lock
add
mov
add
stc
arpl
push
add
mov
add
inc
jno
and
add
add
xchg
pop
and
mov
jnp
dec
mov
jo
mov
js
pop
ljmp
xchg
loopne
into
dec
xor
roll
add
je
dec
outsb
test
pop
out
add
jnp
dec
lds
sbb
pushf
push
add
mov
fnstcw
rcl
mov
add
mov
add
jecxz
dec
in
sub
add
add
add
movsb
add
add
add
add
dec
fmull
fcomps
cmpsl
dec
push
in
addb
pop
jle
cmp
add
popa
add
push
cmp
jecxz
movl
mov
add
sbb
and
add
std
push
mov
sbb
dec
ds
mov
popa
outsl
ret
push
imul
mov
add
inc
addb
aad
fstl
cmp
adc
paddsb
dec
pop
add
add
fcoml
ljmp
jecxz
hlt
sub
sub
mov
add
call
push
sub
add
in
xchg
add
inc
mov
add
fs
in
stos
test
nop
mov
stos
stos
shlb
push
ret
add
cmpsl
fdivrs
sbb
insb
insl
fistpl
pushf
in
lahf
std
mov
add
xchg
or
adc
sbb
lods
aam
aaa
imul
sbb
push
xchg
scas
add
push
mov
add
sub
add
addr16
add
add
jbe
push
dec
jmp
xchg
cmp
pop
loope
into
clc
dec
push
add
pop
xor
daa
enter
loop
filds
add
mov
push
int
mov
cld
mov
loop
ret
add
outsl
mov
cli
mov
xor
or
add
mov
insl
gs
xchg
push
adc
ret
dec
js
cmp
stos
add
movsl
sbb
enter
push
mov
add
mov
add
loope
addr16
insb
shlb
jnp
in
dec
cld
xor
xchg
lret
leave
popa
addb
outsl
push
add
dec
xor
add
scas
add
fwait
mov
sbb
add
push
pop
mov
add
add
mov
sti
fsts
sbb
push
lcall
and
add
mov
add
add
sahf
inc
xlat
loope
jmp
cmp
adc
xchg
inc
cmp
ficompl
addb
ret
stc
adc
outsb
dec
ds
jne
or
add
mov
gs
sbb
movb
add
aas
adc
aad
pop
addb
mov
pop
outsl
ljmp
mov
add
sub
ss
lcall
and
add
sbb
push
fadd
mov
add
add
mov
add
leave
add
add
jnp
mov
rolb
add
mov
arpl
lods
add
testb
pop
push
jne
jo
rep
add
lods
add
negb
mov
xor
dec
mov
add
push
or
add
and
clc
add
xchg
fucom
xchg
cmpsl
fisubs
add
sti
push
sub
add
dec
paddb
je
dec
jb
leave
xchg
ss
add
jno
ror
xorl
ret
test
add
xor
mov
add
insb
add
add
pop
rcll
insl
adc
ror
mov
xchg
mov
pop
cld
daa
ret
sbb
sbb
aam
jb
insb
bound
add
pop
out
push
imul
lret
add
xchg
pop
icebp
inc
cmc
mov
mov
nop
pusha
pop
arpl
sub
add
add
sub
add
cmc
xlat
test
add
mov
into
sub
add
add
sub
addb
adc
xor
mov
add
add
add
scas
add
shlb
fucomip
dec
les
xchg
std
sbb
inc
pop
mov
loop
sbb
sbb
push
sbb
push
sub
out
ljmp
dec
dec
bnd
jne,pt
add
lds
addb
pop
inc
loopne
pop
cmp
add
aad
add
shl
leave
imul
add
call
out
jmp
rcrb
ret
pop
data16
shrb
add
insb
adc
test
add
add
loop
loope
xchg
sti
icebp
mov
enter
dec
jno
das
mov
or
sbbl
leave
clc
ja
loop
inc
add
ficoms
push
stos
add
jg
sub
inc
lds
pop
xorl
test
gs
lock
add
fimuls
popf
int3
daa
aam
pop
xor
test
stos
adc
loop
add
adc
dec
imul
jecxz
cmpsb
add
test
add
out
shll
cld
jb
loop
rcrl
add
nop
push
loopne
mov
add
aas
xchg
xor
das
jbe,pt
aaa
rorb
and
add
fcmovnu
dec
dec
jns
les
add
lret
push
lret
clc
fdiv
xor
add
fcomip
mov
add
leave
xchg
add
add
sbb
fcoml
hlt
shll
addb
data16
xchg
add
fsts
or
jnp
les
bound
loope
int
fists
incb
xchg
dec
inc
gs
push
mov
inc
notl
aad
add
mov
mov
add
and
add
add
sbb
dec
or
xchg
in
push
inc
ja,pt
mov
cli
outsb
push
add
in
jecxz
add
fwait
lret
out
and
rcrb
div
mov
out
popf
mov
add
add
jp
mov
insb
pop
int
xor
push
add
jle
xor
or
xor
sub
add
mov
add
adc
add
sbb
add
add
enter
push
add
in
sub
add
inc
push
or
add
fcmove
pop
jnp
stc
mov
jge
loopne
int
cmp
pop
in
inc
int3
jbe
cwtl
or
fisubrl
add
aad
sbb
inc
mov
add
inc
out
adc
ljmp
sahf
mov
lret
js
int
sbb
insl
movsb
add
lahf
repz
add
add
add
insl
movsb
add
mov
mov
add
gs
ret
add
add
cltd
mov
shrb
std
sti
fildl
xacquire
test
and
xchg
push
add
pushl
pusha
and
add
in
mov
std
add
ss
sti
dec
push
cmp
aam
push
mov
int3
ret
pop
pop
jb
add
jecxz
jp
mov
xchg
fdivl
add
mov
xchg
aaa
cmp
sbb
sbb
mov
lret
arpl
and
add
pop
aad
aaa
dec
xchg
inc
repz
add
cmp
add
ds
push
imul
lods
add
jb
lret
scas
stos
add
imul
insl
push
push
mov
sbb
and
add
sahf
in
js
fildl
test
imul
daa
inc
jo
inc
mov
lret
mov
add
jle
add
sub
and
pop
scas
add
push
int
movsb
add
push
movsl
inc
dec
arpl
aas
rolb
xor
fistpll
mov
dec
mov
add
test
add
std
sub
add
add
std
sbb
fimull
push
add
xor
mov
add
scas
aad
or
add
xor
add
add
jbe
sub
add
pop
cld
push
lcall
cmp
jb
mov
stc
and
cmp
add
add
out
int
add
mov
dec
leave
cmpsl
sti
push
add
adc
adc
push
push
lea
clc
jno
cmp
ficoml
shlb
push
jnp
test
add
in
aaa
imul
pop
inc
enter
jmp
add
sbb
inc
addb
mov
iret
xchg
fs
mov
sbb
and
inc
jmp
add
jnp
add
or
add
add
lds
add
pop
loopne
and
add
push
add
jns
addl
add
add
cld
imul
sub
add
adc
jae
aaa
sarb
xchg
or
add
xchg
outsb
addb
sbb
popa
mov
and
scas
std
dec
mov
jle
adc
insl
insl
xchg
adc
cmp
lcall
add
xchg
inc
inc
mov
inc
aaa
test
add
arpl
add
mov
jl
push
add
or
dec
dec
icebp
push
adc
or
add
decb
xchg
and
mov
pop
lahf
mov
cmp
lods
pusha
pop
clc
das
icebp
mov
jnp
or
add
lock
add
adc
sub
add
aaa
inc
shrl
jne
and
repz
xor
push
mov
cltd
test
addb
daa
mov
dec
push
aas
push
in
push
sbb
add
push
xchg
dec
aam
add
add
add
sbb
mov
sub
add
add
dec
cmp
std
ds
and
add
add
sub
add
jb
xor
roll
add
sub
add
add
jns
mov
add
xchg
pop
lods
dec
notl
add
add
imul
add
loope
add
sbb
add
adc
ds
int
sub
add
pushf
iret
loopne
mov
aad
insl
mov
roll
add
add
popf
mov
add
add
push
mov
push
add
add
cmp
inc
std
sub
add
add
push
add
ja
pusha
mov
jg
cmp
adc
mov
sub
leave
sub
add
outsb
addb
lods
add
pushf
ret
outsl
pop
fs
xor
mov
cmp
adc
add
adc
xor
lds
add
fsubl
add
and
aas
arpl
mov
ds
rol
inc
gs
mov
add
xchg
int
rorb
add
xor
add
dec
fidivrl
mov
push
fisttps
add
or
add
sbb
shlb
iret
mov
add
and
add
into
bound
add
jno
pop
pop
aam
out
aaa
sbb
enter
and
sbb
inc
sub
add
mov
add
movsl
or
add
in
push
add
add
add
jmp
lret
xchg
mov
int
sbb
lret
fbstp
push
jecxz
mov
push
add
aad
callw
xchg
sahf
in
push
jae
xchg
mov
leave
cmpsl
or
add
in
xchg
xchg
add
push
jmp
fists
lret
push
int
add
inc
add
add
loop
dec
jmp
or
nop
and
add
mov
add
lock
scas
lret
ja
iret
jecxz,pt
mov
push
roll
sbb
add
ss
int
mov
fwait
aas
and
add
add
jo
cmp
fistpll
cld
or
add
add
dec
xchg
jnp
mov
fiadds
add
jmp
nop
xor
push
ret
cmc
jo
add
jno
fmuls
arpl
inc
jbe
jmp
add
outsl
imul
dec
loop
fldl
lock
test
add
dec
adc
leave
lods
decl
cwtl
outsl
cmp
add
mov
mov
jae
aas
dec
jns
pop
sbb
sahf
sbb
sbb
add
jl
adc
jle
sbb
shll
dec
ret
shll
pop
fs
xlat
in
add
aaa
mov
mov
add
sub
add
orl
jmp
mov
add
leave
and
pop
pushf
cmpsb
add
xor
and
add
add
dec
add
pop
add
leave
xor
add
lock
jo
lcall
cmc
and
push
or
add
dec
les
aas
mov
add
add
xor
test
mov
arpl
xchg
mov
imul
add
push
inc
mov
jbe
sahf
lods
add
sbb
add
pop
dec
sub
add
inc
sub
mov
addb
mov
or
add
add
lds
add
xor
ds
pop
call
mov
movsl
push
sahf
sub
jb
pop
ret
lea
lahf
jo
add
or
add
push
add
cmp
sub
mov
cltd
fmuls
add
push
mov
test
add
add
xor
pop
inc
cmc
cltd
outsl
pop
nop
aaa
adc
or
xchg
cmp
jne
outsl
pop
mov
ret
lods
add
add
add
outsl
push
and
loopne
in
faddp
cmp
add
cwtl
loopne
mov
add
aaa
cmpsl
fsubl
pop
clc
and
add
movsb
add
and
stos
add
sub
mov
add
mov
inc
xchg
scas
add
sub
pop
mov
lea
add
add
jno
addb
sub
add
mov
jnp
or
add
fisubrl
mov
add
jmp
mov
lahf
pop
mov
fbld
cmp
test
add
adc
pop
out
mov
fsubrs
add
mov
cmp
stos
add
dec
mov
add
test
add
sbb
in
xor
cmc
adc
add
xor
sbb
add
xor
xchg
adc
add
mov
add
into
mov
add
xchg
push
xchg
jns
jne
hlt
popa
push
or
add
int
add
stos
sbb
add
stc
lret
aas
int3
xor
add
mov
aas
outsb
pop
stc
idiv
push
sbb
inc
sub
add
shll
repnz
jno
add
adc
in
jno
push
mov
test
add
cwtl
test
xchg
fs
insb
js
fstps
cmp
lock
cltd
xchg
popa
add
clc
shlb
cltd
or
push
jl
sub
add
pop
js
add
pusha
add
or
add
mov
jmp
add
shrb
insl
mov
add
loope
add
sub
add
pushf
sbb
mov
add
mov
add
insb
sbb
call
add
cli
cli
mulb
add
dec
pusha
iretw
int
add
add
add
pusha
xorl
mov
xchg
movsb
add
pop
jns
mov
add
ret
cli
mov
add
hlt
lret
nop
iret
pushl
xchg
dec
out
mov
addb
fwait
adcl
add
xchg
add
add
aam
insl
ja
fs
insb
pop
cmpsl
leave
jl
test
add
addb
adcl
add
mov
push
mov
in
push
pop
dec
push
pushf
sub
aas
push
test
add
pop
mov
jne
int3
mov
das
xor
inc
insl
sbb
add
push
movsb
add
repz
add
push
mov
xchg
addb
iret
lcall
aas
mov
inc
fld1
or
add
push
or
pop
pop
push
repnz
add
add
add
mov
xchg
imul
mov
add
int
add
adc
bound
fwait
xchg
sbb
mov
pop
sti
cmp
sbb
pop
adc
add
xor
ret
jge
ljmp
add
add
jmp
jecxz
sub
xchg
xchg
add
pop
mov
pop
call
dec
aad
mov
add
icebp
in
push
pop
cmp
jo
add
cmp
add
test
add
cmp
sbb
xchg
add
fmull
add
pop
jae
out
fsub
dec
pop
pusha
jns
leave
pop
cmp
jo
lea
add
or
add
add
push
add
enter
mov
lahf
lods
add
sbb
clc
fldenv
add
loopne
in
lahf
lcall
push
inc
gs
aad
add
mov
jmp
add
jecxz
insb
jne
out
cltd
xchg
inc
pop
mov
mov
add
pop
push
pusha
in
test
add
fnsave
and
add
addb
pop
inc
mov
das
inc
push
sbb
mov
sub
and
mov
lret
inc
gs
add
lds
jne,pt
into
ja
out
xor
cld
and
add
add
ja
push
movsl
or
add
cld
mov
dec
push
pop
jp
dec
add
add
add
jle
pop
push
pushf
pop
and
cmp
push
add
insl
sub
add
add
dec
lret
push
cmpsb
add
jmp
insb
mov
add
icebp
cmpsb
add
jae
add
jp
scas
add
mov
push
mov
in
in
das
add
and
add
cmp
inc
test
add
pop
out
ret
push
add
jno
dec
add
add
ds
add
push
xchg
cmp
add
ja
xor
add
loop
data16
insl
std
popa
fsts
mov
ror
dec
mov
xor
shll
bound
add
sub
inc
aad
lret
or
add
aam
out
mov
imul
add
mov
pop
out
inc
popa
jo
dec
scas
add
arpl
arpl
ja
int3
dec
pop
inc
cmp
ljmp
add
lods
jb
and
add
inc
xlat
rolb
jecxz
inc
push
add
sbbl
iret
fmulp
stos
add
mov
push
jns
and
add
out
mov
insb
adc
inc
ja
pop
xchg
inc
in
fcompl
ds
adc
das
sbb
mov
add
adc
stos
mov
mov
jae
mov
lock
xchg
jle
lods
add
sahf
nop
inc
mov
add
push
xchg
xor
jo
or
adc
add
popa
fsubrp
xor
add
jp
jl
cmp
insb
push
lcall
inc
sub
add
cmp
or
test
mov
movsl
cmp
add
adc
add
add
pop
int3
cli
add
add
out
inc
jne
in
adc
xorl
add
arpl
lcall
xor
jl
jecxz
in
int
hlt
push
xchg
shll
addr16
cltd
mov
mov
fsubl
fnstcw
jmp
add
add
add
cmc
sub
add
add
aam
pop
xor
mov
or
add
ret
sbb
aaa
out
xchg
pop
jp
or
add
ficoms
icebp
dec
lods
push
add
call
xchg
add
das
in
push
cmc
into
dec
add
sub
ljmp
cmp
insb
outsb
out
add
ss
xchg
add
or
add
ljmp
movsb
add
repnz
cmpsl
test
add
pop
test
add
dec
or
addb
pop
mov
fcoml
sbb
add
rclb
pop
jmp
push
enter
jne
fistps
mov
add
mov
add
insl
stos
add
in
loopne
jnp
movsl
push
add
clc
jmp
int3
inc
pop
imul
jg
jmp
rcrb
add
push
xor
add
push
cmp
rcll
addr16
data16
popl
add
xchg
aaa
add
jb
hlt
in
sub
add
add
repz
popl
mov
add
out
mov
sbb
xchg
jno
daa
add
add
pop
aas
xchg
lret
add
addb
fistpl
mov
sub
mov
sti
sahf
loop
push
mov
add
sti
jmp
mov
in
xchg
shll
add
sbb
popf
sub
mov
lcall
sbb
mov
mov
dec
imulb
and
repz
lcall
push
jp
add
cmp
xor
add
add
add
xchg
imul
loopne
add
movsl
mov
lcall
mov
sub
pop
xlat
cwtl
push
cmp
mov
add
test
add
mov
xchg
xor
dec
cmpsl
jmp
add
lock
cmp
adc
xor
add
jge
mov
arpl
xchg
add
bound
mov
add
add
imul
mull
xchg
add
nop
decl
add
enter
addb
pop
and
add
xor
jg
push
lods
add
xchg
and
adc
nop
mov
das
stc
loope
mull
in
repnz
mov
add
out
aaa
aam
add
ss
lahf
lret
cmp
out
div
sbbl
lea
mov
xchg
lods
add
pop
rcll
xor
push
adc
or
movsl
or
add
bound
add
cmp
sbb
xchg
and
add
or
or
inc
fcomps
and
add
mov
add
cmp
mov
push
stos
add
adc
cmpsb
add
and
cmc
lret
ljmp
adc
sub
add
push
sub
add
test
add
push
imul
inc
adc
add
push
mov
sahf
in
int
xchg
ljmp
shll
add
add
mov
add
loopne
add
jnp
add
and
rol
and
add
xchg
popa
and
add
lcall
mov
xor
pop
fucomip
iret
jle
inc
pop
test
repnz
fbld
add
call
in
jmp
leave
xchg
cmp
or
mov
add
add
jae
jb
add
inc
testl
fcmove
call
popf
pop
xor
rorb
aas
repnz
mov
in
adc
add
add
add
add
lret
push
rorl
add
push
xchg
xlat
inc
fisubl
add
data16
add
das
mov
add
mov
add
loope
jecxz
loope
and
add
stos
daa
mov
add
imul
or
add
add
fsubr
push
add
fbld
nop
push
add
push
mov
fldt
add
xor
xchg
jnp
rcll
sub
popl
add
add
adc
inc
js
add
xchg
out
out
and
pushf
adc
xchg
mov
add
scas
add
push
bt
sbb
mov
aam
outsl
cmpsb
add
push
sub
inc
mov
shrb
popl
xchg
ja
xchg
lock
add
mov
add
xor
mov
roll
mov
add
out
sar
std
shll
addb
fsubp
aad
outsl
pop
loopne
loope
pop
in
jg
and
add
xor
add
sbb
add
leave
mov
imul
push
cmp
out
push
sbb
pop
add
addb
push
dec
into
stos
lds
jle
add
push
jmp
add
cmp
into
or
mov
std
inc
std
pop
popf
pop
sub
lret
lret
sbb
in
cmp
sub
or
add
notl
jne
adc
add
xor
ja
dec
popf
sub
sbb
mov
add
out
add
lds
cmp
cld
cltd
inc
aaa
xor
adc
cwtl
inc
pop
ds
in
mov
mov
addb
jecxz
mov
out
addb
aas
test
add
jecxz
inc
into
sbb
mov
cmp
mov
test
add
pop
jp
xchg
add
lods
pop
or
add
iret
repnz
jg
sbb
adc
add
jbe
sbb
push
and
out
add
sbb
add
mov
icebp
dec
gs
dec
test
add
cmp
arpl
push
out
data16
stos
add
lea
lahf
sbb
pop
cli
sahf
mov
dec
mov
add
add
add
scas
mov
add
mov
fs
in
jg
xchg
add
pop
enter
mov
add
punpckldq
adc
xor
mov
and
add
ss
lods
add
addb
test
inc
les
add
xchg
mov
loopne
xor
stos
add
jbe
ret
dec
mov
stos
mov
xor
push
pop
pop
lret
push
jbe
cwtl
adc
inc
pop
loope
test
add
jge
fisttps
pop
jecxz
mov
add
insl
sbb
clc
xor
pop
jle
out
dec
dec
mov
add
xor
inc
lcall
imul
add
ret
and
add
jmp
inc
cmp
repz
in
outsl
push
push
jg
nop
pop
mov
inc
sub
add
mov
neg
ds
pop
mov
push
dec
imul
or
add
jg
jmp
mov
pop
xor
filds
add
lods
sbb
xchg
gs
int3
imul
jmp
shll
add
mov
push
test
add
jb
jmp
jb
sub
cli
nop
jnp
jo
call
sbb
aam
add
lcall
add
push
push
iret
sub
mov
lods
jp
sbb
jo
add
sbb
lcall
add
add
je
inc
daa
pop
bound
add
mov
add
imul
add
add
imul
mov
fbld
push
lds
fisubrl
mov
add
icebp
inc
repz
insb
jp
inc
popa
lock
add
mov
add
in
mov
lods
add
jecxz
cli
cld
xor
sti
mov
pop
and
test
lds
or
add
adc
fs
sbb
jle
in
add
or
add
out
add
jmp
cltd
out
xchg
xchg
add
sub
add
addl
xor
jl
and
add
loop
push
sub
add
add
and
add
ds
xchg
insb
fs
adc
scas
add
inc
dec
add
arpl
add
fstpt
in
movsb
add
out
add
icebp
jae
lods
xchg
mov
add
add
testb
adc
mov
add
jecxz
lods
sub
lods
cltd
jp
dec
pop
in
cmpsb
add
inc
in
loope
into
mov
xchg
mov
add
sub
add
fisttps
outsb
mov
inc
pop
dec
enter
add
pop
xor
add
jl
inc
gs
xchg
addr16
inc
test
add
mov
add
cmp
sub
add
add
add
xchg
push
sub
pop
out
adc
jg
inc
cltd
rorl
pop
mov
mov
mov
or
push
jle
cmpsl
stc
mov
add
jmp
gs
add
inc
loope
out
mov
add
or
add
lcall
add
inc
inc
aam
push
mov
cld
push
daa
pop
fxch
gs
fadds
add
xor
add
scas
push
add
add
les
pop
ja
add
imul
sub
je
push
jns
cmp
addr16
xchg
add
scas
add
push
add
adc
sub
add
jecxz
jp
jb
pop
jl
xor
inc
in
and
jnp
push
cmc
cltd
sbbl
sub
inc
int3
inc
mov
cmc
stc
ds
xchg
add
add
add
dec
pushf
test
add
mov
add
lahf
ljmp
int
add
inc
jns
inc
arpl
mov
mov
pop
je
mov
and
fiadds
sar
sub
adc
xchg
aaa
add
add
mov
sub
add
and
in
out
addb
or
add
mov
lods
add
dec
rolb
add
and
out
add
mov
inc
or
add
insl
das
into
pusha
push
jns
or
mov
sub
add
adc
call
add
leave
into
das
cmpsb
add
and
and
add
mov
add
sub
shl
addb
sub
add
pusha
lods
add
sbb
add
add
nop
fstps
repnz
add
sub
add
add
jb
repz
or
add
push
mov
and
mov
xchg
sbb
and
add
aam
lret
add
add
add
ret
lods
sub
cmpsl
mov
pop
addb
sub
xchg
les
vmwrite
or
scas
add
sub
fildll
xor
testb
filds
add
xchg
test
clc
gs
jp
js
aaa
test
and
add
sbb
inc
jns
dec
adc
cld
add
add
scas
xchg
inc
idivb
fimuls
add
das
and
push
ret
pusha
push
in
mov
add
add
mov
add
add
pop
enter
fs
out
sbb
add
add
roll
fstl
sub
or
add
xchg
ds
pop
mov
mov
add
mov
shrb
ss
mov
add
sbb
add
in
and
enter
or
scas
fildll
test
lea
mov
lret
js
mov
add
add
add
xchg
add
mov
xor
add
daa
popa
std
lods
cmp
add
add
sbb
sub
and
pop
pusha
mov
push
stos
xchg
out
mov
add
pusha
push
xor
leave
shlb
sub
add
mov
add
fs
cld
mov
mov
cmc
sarl
js
adc
push
inc
cli
cltd
adc
mov
add
ds
into
pop
dec
popa
ret
add
sub
add
inc
mov
jp
ljmp
mov
jp
pusha
push
pop
sub
add
mov
add
sbb
add
nop
sbb
std
and
add
sbb
lcall
add
call
mov
pop
das
add
ret
lods
pop
loopne
add
shlb
add
add
push
push
imul
mov
pop
jge
push
mov
iret
push
subl
add
xchg
out
pop
add
add
and
add
add
add
cmpsb
add
nop
mov
add
add
loopne
jle
add
inc
insb
mov
add
movsb
add
outsb
xchg
add
sarb
add
mov
dec
sbb
add
add
stc
lcall
add
add
mov
or
lss
add
pop
inc
push
mov
inc
adc
ja
mov
or
test
push
test
add
gs
test
add
or
add
sub
jbe
rclb
cwtl
sub
add
add
data16
add
or
not
jg
or
add
pop
imul
and
add
push
in
out
cwtl
add
jne
stos
add
pop
sbb
mov
mov
insl
push
mov
dec
ret
leave
arpl
popa
lcall
clc
sbbl
stos
test
add
add
in
jbe
add
bound
scas
xor
mov
add
mov
add
cli
push
pop
sbb
add
xor
fld
adc
mov
mov
std
loope
call
loop
outsl
inc
inc
or
ror
ljmp
fisttpll
dec
xchg
and
add
and
add
add
xor
test
add
xchg
mov
add
fwait
int3
outsl
pop
xor
in
mov
cmp
xor
sbb
cmc
mov
mov
add
jecxz
ret
rorb
add
test
add
das
sbb
add
stos
int
pop
loope
xor
add
sbb
pop
adc
jnp
cmpsb
add
lods
add
loope
aas
add
pusha
out
mov
add
pop
mov
insl
ljmp
add
add
dec
lret
add
test
add
popf
in
scas
add
and
xchg
testb
mov
in
adc
sbb
test
add
add
mov
mov
sti
rcl
shll
stc
ds
mov
and
and
add
xchg
lock
cltd
dec
shlb
mov
add
pop
out
push
pop
mov
cltd
and
add
pop
sub
xchg
hlt
sahf
inc
and
add
dec
cwtl
mov
cltd
popa
sti
popf
fsubs
add
add
push
mov
mov
jae
jne
sub
add
xor
stos
pop
inc
fcmovu
sub
xchg
xlat
add
gs
insl
mov
mov
enter
add
add
add
add
cmp
add
add
push
jo
push
sub
add
and
add
shlb
iret
dec
fld
cltd
out
iret
ret
cwtl
enter
xchg
in
out
add
cmp
stos
add
mul
clc
dec
addb
sub
test
add
cmc
pop
in
mov
add
shll
add
fucomi
adc
test
add
mov
sahf
cmc
dec
adc
pop
xor
mov
add
add
inc
and
add
sub
add
add
add
cmp
inc
dec
in
test
add
sbb
pop
std
mov
outsl
enter
add
pop
cmp
dec
adc
je
aaa
ffree
sbb
pop
and
add
ljmp
addb
je
xor
lret
in
cmp
out
mov
cwtl
and
add
add
mov
push
mov
add
fwait
dec
das
or
add
jnp
in
pop
inc
addr16
push
pop
cmp
mov
add
mov
mov
add
xchg
loop
lock
leave
pop
notb
xchg
fwait
aam
pusha
hlt
push
rcrb
push
mov
inc
jns
sbb
sub
adc
jp
mov
add
xor
add
call
push
add
add
lcall
and
add
xor
xor
add
xchg
daa
dec
cmc
xchg
add
add
test
loope
mov
in
cmp
arpl
add
add
arpl
push
mov
adcl
stos
cmc
je
mov
stos
add
arpl
sub
add
add
pminsw
jno
loop
stos
add
in
movsb
add
xor
je
and
shll
push
cmp
inc
push
add
add
arpl
pop
xchg
inc
or
add
dec
mov
adc
xor
add
add
add
add
add
add
mov
pop
mov
scas
mov
adc
add
sahf
jp
mov
xchg
insb
addb
sub
add
add
std
in
pushf
bound
lcall
pusha
dec
push
mov
add
push
cld
lret
mov
add
sarb
push
popf
div
jnp
in
push
jnp
push
mov
add
mov
mov
mov
shlb
add
pop
pop
fcomi
js
xchg
xchg
push
outsb
imul
xchg
pop
inc
flds
nop
out
sub
mov
cmp
inc
orl
stos
add
adc
mov
cmp
mov
imul
fsubl
add
ja
int3
push
or
xchg
add
stos
sbb
pop
inc
shrb
adc
sub
add
fcmovnu
add
add
pop
lcall
cld
lock
add
and
mov
add
or
enter
loope
adc
je
sbb
push
dec
imul
and
cli
lock
add
jl
loope
add
pop
push
ss
mov
leave
adc
add
lods
add
mov
add
pop
ja
push
inc
cmpsl
push
jge
lds
addb
ss
mov
ret
aas
add
add
xchg
xchg
in
inc
fimuls
add
dec
pushf
iret
and
or
add
push
fcomip
mov
pop
fwait
ss
sbbl
xchg
add
push
mov
in
add
int3
push
inc
jne
push
jbe
xor
inc
rorl
add
add
fdivrs
pop
sbb
add
add
inc
lret
jg
jmp
jns
insl
hlt
ja
xchg
popa
add
mov
std
out
adc
push
adc
mov
gs
add
sub
add
xchg
and
add
add
cmpsl
dec
in
jb
cmc
lock
mov
and
cli
mov
or
mov
add
pop
add
sub
add
add
fsubp
jge
add
in
jns
add
cmpsb
add
jne
add
dec
sbb
xor
adc
mov
and
ljmp
inc
or
stos
add
mov
add
add
push
add
out
pop
pusha
filds
adc
stc
push
movsb
add
test
add
add
dec
pop
rcrl
shrl
pshufw
add
push
je
mov
add
add
loop
xchg
insb
lcall
add
push
outsb
out
jge
lret
add
inc
jb
add
ljmp
inc
pop
jge
daa
lret
xchg
mov
mov
add
mov
add
mov
inc
sub
add
cmp
and
mov
cmpsl
inc
xor
loopne
mov
inc
or
mov
mov
orl
mov
daa
mov
adc
add
add
into
xor
push
mov
out
into
std
ret
pushf
adc
cmc
inc
lret
dec
add
les
jne
stc
and
add
add
insb
ljmp
jp
adc
add
mov
jmp
ljmp
add
add
ret
push
add
jg
mov
jns
add
cmpsb
add
or
cwtl
jne
test
add
mov
push
xor
cmc
dec
cmp
leave
xor
add
push
add
stc
mov
dec
xchg
sbb
hlt
add
add
int3
jae
out
dec
push
add
inc
paddusb
hlt
lods
add
out
dec
loope
sarb
fsts
jmp
sbb
test
jge
add
xchg
add
inc
or
add
arpl
stc
test
mov
add
aad
ja
jae
outsb
push
push
mov
add
clc
sub
add
inc
in
dec
icebp
xchg
jmp
add
mov
add
add
ja
outsl
cld
insl
ret
dec
mov
add
pop
lods
sbb
shlb
lea
add
mov
xor
add
mov
add
add
mov
add
add
sbb
add
mulb
sti
faddl
add
hlt
jno
jbe
imul
pop
aad
icebp
mov
lods
fcmovb
inc
dec
testl
jp
jecxz
loop
add
aad
outsl
sbb
push
lahf
sbb
mov
and
add
add
rorb
stc
fstpt
dec
mov
add
scas
add
out
or
add
xor
aas
lahf
pop
popf
and
sub
add
xchg
popa
xchg
lret
xchg
ljmp
outsb
imul
inc
comiss
push
call
mov
lret
repz
push
xchg
mov
loopne
decl
add
scas
stos
push
xchg
lret
add
mov
dec
jns
add
sub
mov
or
add
mov
mov
add
stos
add
in
data16
jl
jae
shlb
mov
js
mov
push
add
pop
add
add
jns
dec
sbb
fs
inc
in
cltd
mov
add
sbb
add
mov
mov
in
xchg
ror
and
add
mov
ret
jmp
test
mov
add
pushf
xor
xor
movsb
add
cmp
cmc
ret
sar
pop
in
cltd
pop
push
add
add
add
jecxz
dec
lea
iret
aas
mov
test
fadd
dec
xor
add
push
mov
add
mov
sub
add
in
xor
xchg
add
adc
push
addr16
pusha
pop
mov
dec
aad
push
mov
push
test
add
or
add
out
add
movsl
jl
jmp
sub
add
shrb
dec
fistpl
jmp
sub
mov
mov
outsb
or
ds
mov
out
rclb
rorl
add
mov
add
lret
xor
jg
cli
or
push
hlt
mull
dec
lods
cmp
dec
pop
mov
decl
out
mov
addb
mov
xchg
ds
sub
imul
pop
lret
mov
cld
inc
notl
jo,pt
aas
cmp
xchg
mov
add
loop
or
test
add
dec
fsubrp
insb
mov
call
jae
in
mov
pop
fsubr
fimuls
add
inc
sub
add
repz
je
test
add
inc
adc
xchg
push
sub
add
in
xchg
add
repz
sti
mov
add
jb
shll
mov
into
jns
scas
add
pop
aam
hlt
push
idivb
push
mov
add
add
das
dec
loope
xor
cmp
mov
and
mov
movsl
std
fsubl
add
mov
nop
mov
xchg
scas
pop
ss
inc
sbb
xor
add
int
add
je
popf
rcr
xor
push
nop
shlb
add
sbb
add
xor
pop
shl
inc
shll
xor
mov
add
lahf
mov
push
adc
mov
add
add
add
cld
push
pop
pop
mov
add
pusha
aas
aam
out
out
stos
add
arpl
add
cmp
xor
mov
clc
pop
dec
push
jo
add
xchg
lock
imul
add
or
add
sbb
fistl
arpl
sbb
add
dec
les
jb
pop
xchg
out
mov
out
rorb
shlb
pop
sahf
and
add
mov
je
adc
push
add
outsb
mov
add
sbb
pusha
popf
out
jp
ficomps
inc
bound
iret
push
add
dec
jnp
xchg
mov
cmp
or
lcall
scas
js
sub
add
mov
add
addb
dec
add
scas
jae
add
push
mov
mov
add
sub
add
mov
pop
inc
pusha
ret
add
inc
push
nop
aam
in
in
lods
add
add
out
mov
cmc
add
fucomip
add
dec
mov
add
and
inc
cmp
shll
xchg
add
add
dec
decl
loopne
xchg
aad
jnp
adc
or
add
adc
or
arpl
add
push
and
mov
call
pushf
xor
mov
add
bound
and
add
rol
dec
gs
add
add
scas
add
push
push
ret
dec
fsubrs
std
inc
fmulp
push
mov
pop
mov
xchg
mov
push
mov
add
push
add
cmp
sub
divb
aam
add
xor
je
pop
loopne
jns
add
addb
push
jmp
setne
add
stos
pop
push
stc
push
xor
mov
or
push
cmc
out
cli
fsts
daa
rolb
add
add
xchg
push
add
int
loopne
add
lret
dec
stos
ret
js
sti
jb
out
les
add
adc
pop
pop
mov
xor
add
lcall
add
mov
add
fcoml
test
add
aas
stos
les
sti
xlat
adc
jecxz
icebp
sub
push
les
mov
fstps
dec
sub
xor
add
add
and
push
and
pop
cmp
jne
outsb
iret
arpl
ss
fdivs
mov
loop
add
cmp
ljmp
xor
out
cmpsl
cmpsb
add
cld
cmp
mov
inc
lret
arpl
sbb
add
mov
lods
addl
add
stos
jbe
mov
add
mov
xor
xor
xchg
and
add
add
negl
test
sti
dec
pop
fpatan
jae
pop
setge
int3
outsl
add
add
stos
mov
add
loopne
add
dec
add
cmpsl
sub
add
inc
cld
inc
mov
lock
pop
mov
add
out
or
add
sub
add
xchg
loopne
scas
dec
dec
les
movsl
in
fisubrs
add
jl
add
push
push
fmull
dec
cwtl
sub
add
aas
push
cmpsl
xchg
mov
lds
fcoms
stos
add
testl
pop
jge
sbb
cmp
dec
jmp
inc
notl
repnz
push
sub
add
sub
sbb
fsubl
add
and
popf
cmp
ror
jge
jno
push
add
push
inc
mov
arpl
push
sbb
scas
add
js
pop
sub
add
push
add
addb
xchg
push
add
addb
and
cmp
mov
add
add
xchg
sub
add
ss
fidivrl
fsubrs
add
pop
or
add
add
and
add
inc
cli
lea
adcl
mov
ret
mull
mov
and
rcl
xor
or
add
push
mov
mov
or
push
mov
add
shrl
mov
hlt
pusha
mov
add
mov
jp
pushf
movb
int3
fisubl
jl
aad
add
pop
push
lret
sahf
int
inc
jg
mov
add
add
add
dec
xor
mov
add
stc
adc
mov
add
add
add
add
push
add
or
sarl
int3
divl
sbb
sbb
jne
inc
xchg
push
inc
cmp
lods
add
pop
inc
sbb
aaa
cld
xchg
add
les
push
pusha
cmp
out
xchg
add
lret
xchg
in
call
xor
scas
aas
loope
shll
xor
or
add
enter
mov
add
pushf
call
loopne
lock
dec
mov
add
and
mov
add
mov
or
sub
add
cmp
add
enter
shl
add
out
jbe
sub
add
push
xor
inc
fs
andl
adc
sbb
xor
pop
push
mov
scas
pop
mull
add
sbb
lock
adc
jb
add
fadds
jge
addr16
pop
push
fwait
jne
sub
add
std
jno
add
lods
add
bound
add
sbb
loop
inc
jp
xor
mov
add
and
add
ret
scas
add
and
add
mov
jmp
push
mov
add
and
jp
add
stc
adc
movsb
add
jmp
adc
nop
mov
jl
decb
and
int3
add
xchg
mov
add
push
aam
xchg
sub
add
add
push
test
add
xchg
sbbl
int
mov
out
inc
sbb
jb
pop
je
add
ret
adc
xor
pop
int3
cmpsb
add
and
add
add
cmp
scas
add
xchg
xor
add
into
in
push
add
mov
lcall
int
dec
mov
or
lcall
mov
sbb
fwait
test
add
add
sbb
add
xlat
shll
lahf
imul
in
add
add
mov
add
lret
je
mov
mov
push
cmp
and
add
inc
push
pop
xchg
mov
stc
cwtd
repnz
add
add
sub
mov
cmp
jbe
mov
cltd
ret
mov
add
mov
add
insl
xor
icebp
inc
mov
pop
sub
add
arpl
loop
jle
inc
clc
imul
enter
lea
cli
inc
cld
stos
add
outsl
add
ljmp
push
out
mov
jg
mov
adc
mov
adc
add
push
insl
mov
lret
movsb
add
dec
movaps
add
sbb
add
add
push
int
add
add
mul
cmp
fdivl
push
add
mov
testl
cmp
sar
xchg
in
inc
das
cli
adc
add
pop
pextrw
das
pop
xchg
mov
push
mov
push
hlt
jle
dec
mov
stos
shrb
add
das
or
inc
jb
test
mov
jl
movsl
ljmp
xchg
push
add
mov
mov
or
add
dec
loope
loop
repz
add
fmul
and
add
ret
test
add
mov
stos
iret
pushf
jbe
add
jp
mov
ds
mov
add
movntq
add
add
mov
jno
in
fsubrs
inc
mov
mov
inc
push
idiv
cmpl
push
or
int
rdpmc
repnz
mov
out
dec
bndldx
xor
in
add
inc
sbb
xchg
add
imul
aad
sti
movsl
xor
gs
adc
popf
iret
adc
add
inc
jge
repz
inc
and
add
out
push
sub
add
imul
movsl
pop
mov
inc
imul
xor
add
mov
jmp
jae
xor
in
imul
xchg
testb
add
add
fwait
mov
ds
xchg
jb
mov
ja
pmovmskb
mov
add
xchg
enter
sub
add
sub
mov
add
lret
fbstp
add
pop
in
rcrl
pop
loope
or
add
adc
add
jl
sbb
test
add
rclb
cmp
add
aas
and
add
add
push
test
outsb
add
add
push
add
jae
lcall
rcrl
add
add
inc
mov
inc
fstsw
jp
and
cmc
addb
cmpl
psubd
or
add
loop
add
std
inc
mov
push
jne
int3
pop
push
xor
and
sub
add
jns
dec
mov
mov
add
push
add
xor
xlat
test
add
add
mov
popa
pushf
loop
out
add
add
and
sub
xor
cmp
xchg
cltd
mov
add
mov
cli
into
lea
imul
movsl
loope
fdiv
pop
push
lds
mov
fldl
add
inc
add
ret
imul
adc
cmp
pop
push
sbb
dec
addl
add
lods
add
sbb
lds
add
inc
cmpsl
jne
addb
mov
add
add
xchg
cmpsb
add
loop
ror
nop
sbb
loop
xchg
cltd
addb
stos
mov
mov
mov
pusha
mov
dec
cltd
les
enter
stos
xor
inc
fnstcw
xor
mov
cmp
add
call
cmpsl
pop
data16
add
pushf
mov
daa
jne
stos
je
ja
adc
daa
shll
aaa
mov
jmp
add
jl
jns
cmp
lret
sahf
jnp
fwait
pop
sub
add
xchg
pop
clc
in
das
sahf
ror
fwait
add
stos
mov
push
cli
ret
movb
xor
int
bound
add
pop
das
adc
sti
mov
add
stc
fnstsw
nop
fstl
jp
add
add
ret
aaa
mov
push
sub
ret
dec
adc
sbb
jecxz
and
loop
push
xor
in
pushf
mov
sub
add
push
sub
pop
and
add
jns
addb
mov
add
andl
pop
je
inc
loope
mov
adc
add
lahf
and
add
jne
add
shrl
inc
mov
mov
add
loop
xchg
add
xchg
in
or
test
add
push
xchg
and
add
aad
loop
or
add
aas
scas
add
sbb
xchg
jp
inc
sti
pop
cmp
mov
scas
inc
sub
cld
mov
mov
add
add
add
std
jne
dec
lods
aaa
cld
out
ficoms
push
add
stos
add
push
adc
ds
add
jb
test
addb
or
add
add
push
or
push
lret
lods
add
addb
popa
mov
and
add
iret
lods
mov
mov
add
sbb
lret
or
add
std
jecxz
add
mov
icebp
ljmp
sarb
add
cli
mull
add
add
add
popf
ljmp
mov
push
add
dec
sarl
int
inc
psrlw
outsb
push
scas
add
in
add
sub
aas
cltd
push
testl
cmpsl
cwtl
shl
popa
fcmovnb
mov
adc
push
xor
add
add
mov
jle
sbbl
mov
add
lods
add
push
xchg
jno
out
and
add
in
fldl
mov
sub
add
add
add
jnp
mov
loope
push
mov
add
pop
jp
and
add
movsb
add
repz
inc
subl
sahf
cmpsb
add
test
addr16
loop
sbb
xchg
and
pop
divl
shl
lret
mov
pop
pop
mov
add
shr
repz
test
add
cmp
inc
bound
bound
jne
xchg
stc
fldenv
rcrl
mov
in
clc
mov
add
cltd
fisttps
test
out
mov
aaa
add
push
fists
addb
mov
add
xor
add
cmp
in
jb
push
sbb
sti
insl
jnp
add
and
add
repz
adc
pop
push
sub
add
out
add
add
inc
and
add
scas
add
insl
and
add
mov
rolb
adc
mov
add
cmp
mov
add
cmp
jg
pop
jmp
jmp
cli
jnp
add
mov
test
cld
xor
add
mov
push
cltd
add
add
sub
add
pop
movb
xchg
test
addb
mov
lds
jno
shrb
xor
add
add
pusha
add
lods
xor
rcl
int3
mov
cpuid
add
jb
add
cmp
add
sbb
loopne
sbb
jg
cli
mov
xlat
stos
outsl
mov
cmpsb
add
mov
jecxz
iret
pop
cwtl
mov
add
xor
add
int3
data16
fcompl
repnz
or
mov
xchg
sbb
ljmp
test
add
aaa
clc
iret
xchg
cmp
sub
add
or
jo
mov
mov
add
or
add
scas
mov
add
test
xchg
int3
mov
cwtl
push
mov
add
iret
ror
or
je
add
or
add
aad
xchg
and
add
add
shlb
or
add
xor
out
pushf
repnz
cwtl
int3
arpl
int
or
add
shl
fwait
mov
add
loop
lods
add
xchg
add
push
sbb
test
add
hlt
in
cmp
test
add
add
add
add
aam
insl
testl
add
or
jp
out
push
stos
add
les
mov
add
cli
fs
mov
ret
jecxz
or
add
xchg
movsl
push
push
ja
lahf
lods
add
cli
and
shlb
add
ss
jnp
mov
add
add
inc
cmp
cmpsb
add
shrb
test
add
adc
pop
mov
and
add
mov
push
bound
rdmsr
out
dec
aam
add
mov
mov
add
lcall
sti
dec
imul
je
fucomp
loop
cmpsb
add
enter
add
fmulp
hlt
push
add
mov
adc
cmp
adc
popf
in
xchg
fucom
lds
or
add
add
test
add
sbb
imul
add
add
movsl
enter
jl
das
fwait
xchg
push
sti
mov
add
stos
je
sbb
fisubs
cmp
add
sbb
retw
add
cmp
add
enter
add
mov
lods
mov
and
add
sbb
add
jne
sub
loope
add
les
test
add
add
inc
push
inc
mov
imul
in
xchg
aad
add
jae
xor
inc
rclb
stos
add
gs
lret
lea
pop
icebp
fdivrs
jnp
add
test
shl
sbb
dec
sti
addb
push
das
jae
loopne
loope
sbb
repz
ficomps
mov
add
pop
pushf
dec
lret
jae
mov
outsl
add
add
nop
add
or
add
sub
add
add
popf
nop
fildll
in
jae
in
add
in
add
add
jo
cmp
sbb
adc
arpl
std
pmullw
add
popa
jg
pop
inc
add
repnz
add
stos
add
aas
lahf
xchg
cmp
cld
jg
mov
inc
sub
add
stos
add
or
add
cmp
xchg
mov
je
inc
jnp
popf
mov
add
scas
mov
int3
mov
add
jg
mov
addr16
push
js
sahf
dec
outsl
shr
mov
inc
xor
push
sub
add
mov
aam
add
imul
or
add
add
push
add
dec
test
dec
xchg
add
inc
or
add
add
add
insl
cmp
dec
test
add
jecxz
jb
dec
add
imul
nop
inc
into
pop
shrl
pop
mov
mov
pusha
or
add
xchg
adc
add
sub
mov
and
add
add
popa
ljmp
mov
push
xor
scas
aam
sbb
mov
mov
add
add
js
inc
cmp
pop
or
pop
pop
repz
in
addb
sahf
sub
add
add
lods
add
repz
iret
xor
add
and
add
push
jno
lcall
pop
mov
mov
sbb
inc
repnz
icebp
fists
add
call
popa
mov
add
cmp
iret
mov
enter
imul
lret
sub
outsl
sbb
aas
sbb
pmulhuw
add
popa
dec
jns
push
pop
stc
lock
jmp
fbld
jecxz
scas
sbb
fcomps
mov
fcoms
or
add
lcall
mov
pushf
test
in
fisubl
shl
pop
ss
test
inc
mov
add
add
aad
add
in
mov
shl
add
mov
ss
pop
cmp
adc
pop
push
jnp
sti
fnsave
jae
push
cmpl
mov
fstpt
sub
and
add
add
das
pop
xchg
nop
sub
add
movsl
pop
dec
xor
add
dec
inc
mov
add
or
add
sbb
xor
mov
add
push
cld
sbb
fistpll
cld
mov
sbb
add
movsb
add
mov
fisttps
aas
fistpll
and
add
add
or
add
add
div
sub
sbb
gs
jno
gs
pop
inc
xchg
data16
sbb
add
in
cmp
sub
add
test
xor
add
mov
and
add
out
lret
add
add
std
addl
movsl
or
add
inc
popa
fdivrs
pop
call
add
test
add
sub
and
mov
sub
add
mov
and
add
imul
mov
mov
add
add
mov
test
add
scas
mov
mov
dec
mov
sbb
xchg
add
mov
push
sbb
adc
addb
std
faddp
and
add
mov
add
jp
sbb
mov
sub
add
dec
and
push
hlt
push
jle
pop
adc
or
add
movsl
stos
add
jns
add
outsl
inc
and
add
add
add
loop
pop
lret
out
imul
push
std
cmp
pop
aad
jno
push
jbe
add
xor
add
lds
pop
or
add
xor
mov
mov
mov
add
mov
decl
xlat
add
xlat
addr16
lcall
lock
add
dec
lock
add
jnp
jb
push
dec
cli
jge
cli
jl
repz
add
push
add
and
mov
lcall
ja
cmpl
add
xchg
lods
add
out
fwait
add
ja
or
add
add
add
aad
push
xor
add
ret
sar
xchg
xor
gs
nop
sub
and
add
mov
filds
mov
pop
cltd
ss
in
repnz
out
loop
jnp
test
add
dec
lea
add
add
add
adc
mov
add
fnsave
jns
and
add
push
adc
cmpsb
add
enter
in
rorb
mov
or
add
cli
bound
add
lods
and
add
mov
pop
jle
add
popa
xor
inc
pop
and
add
add
pop
cmp
loopne
pop
in
imul
add
add
out
test
add
push
sbb
push
mov
add
adc
cmp
add
js
xchg
pop
fs
cmc
dec
mov
add
js
push
add
js
fs
fwait
mov
insb
inc
test
add
ja
add
pop
inc
jno
inc
push
aas
cli
add
xchg
lea
cld
lcall
les
shll
test
add
jb
xor
pop
and
add
mov
ret
and
add
add
adc
xor
scas
add
cmp
add
divb
addb
mov
add
push
xchg
mov
add
add
cmp
mov
not
dec
lods
add
cld
popa
aam
mov
add
lods
add
inc
mov
stos
add
push
jnp
add
push
push
sub
add
mov
push
or
inc
stc
lods
add
mov
add
mov
add
shlb
push
xor
mov
add
jg
clc
jno
sarb
jbe
dec
sbb
fisubrs
stc
xor
shlb
sbb
bound
add
clc
outsb
jmp
mov
lea
in
mov
loope
jge
add
in
push
shrb
fnsave
xor
add
pop
jmp
dec
cltd
add
mov
add
jb
mov
add
adc
into
mov
add
mov
mov
imul
cltd
sbb
aaa
test
dec
add
add
out
push
or
add
xchg
add
data16
sub
pop
into
xor
add
xor
pop
imul
pop
data16
mov
cmp
rcrl
lds
movsb
add
cwtl
fdivl
xlat
mov
add
sbb
lret
stos
add
cmp
push
shrl
pop
sub
add
imul
mov
sbb
setae
jnp
ror
mov
mov
add
loop
popf
adc
add
add
in
pop
push
add
pop
das
ret
or
add
imul
add
xchg
add
sub
add
outsl
into
js
jmp
std
dec
pusha
imul
jb
cmpsl
cld
ds
xchg
sub
add
inc
rolb
push
shlb
int
sbb
add
push
mov
xor
or
add
sbb
pushf
sarb
mov
jno
jb
push
lret
daa
sti
mov
loope
pop
test
into
pushf
sbb
inc
bound
jno
or
add
cmc
mov
movsb
add
test
add
js
dec
test
and
add
jbe
or
add
jmp
jnp
out
or
inc
stc
repnz
subl
iret
imul
ret
lahf
rorb
negl
out
add
stc
push
lcall
adc
inc
dec
and
add
add
pusha
std
sub
mov
mov
pop
inc
pop
pusha
je
add
out
mov
rcll
push
and
mov
addr16
mov
add
add
jl
aas
adc
je
lds
xor
jle
xchg
movsb
add
hlt
and
les
add
xchg
push
test
add
scas
add
and
add
out
in
add
lds
sub
stos
push
insb
lcall
xchg
add
sub
add
cmpsl
lret
or
add
add
cmp
mov
add
mov
mov
in
mov
mov
lock
mov
mov
dec
pop
or
push
jge
mov
popf
jp
mov
add
sbb
sbb
scas
push
mov
adc
xor
add
jl
je
mov
add
push
add
aam
add
mov
add
push
push
pop
ds
cltd
dec
mov
jb
add
push
adc
iret
mov
jle
in
cmp
jne
aas
aaa
rcrl
inc
push
leave
xchg
and
icebp
or
add
in
cli
dec
test
mov
jl
popa
lods
scas
fwait
mov
lret
mov
jmp
add
cmp
ret
sub
sar
ljmp
add
pushf
popl
add
mov
scas
add
adc
adc
xchg
inc
inc
mov
add
js
xor
pop
je
add
push
ret
jmp
jge
adc
xchg
pushf
push
add
mov
sbb
sbb
call
and
add
push
inc
and
xor
cmp
pop
out
iret
add
movhps
movsl
lret
push
pop
adc
add
addb
or
add
rcr
loop
mov
add
pop
call
add
add
shlb
jge
mov
sbb
inc
les
inc
mov
add
mov
out
jp
push
add
cltd
cld
and
ret
les
add
in
push
add
imull
push
int
push
lret
ret
push
outsl
enter
cmp
cmpsl
sbb
ss
repz
aas
cmc
push
rcrb
sbb
push
cmc
xchg
cmp
call
jbe
sub
add
fadds
or
add
mov
jbe
imul
add
add
cld
xor
shlb
mov
add
mov
pop
mov
lods
xchg
push
repnz
sti
test
add
pop
out
xchg
lret
test
add
add
push
cmp
clc
les
addr16
xor
insl
mov
add
add
add
cmpsl
ss
or
cmc
ficompl
mov
add
jl
addb
jbe
xchg
add
fstl
jl
mov
nop
cmc
cwtl
ret
dec
dec
cltd
and
lock
inc
mov
lock
add
mov
push
test
add
jb
shrb
lods
das
mov
add
cmpsb
add
pop
rcll
add
enter
negb
cmpps
cld
mov
shld
arpl
pop
pop
ror
inc
mov
jl,pt
or
add
add
outsb
pop
pop
pop
sub
add
addb
xlat
mov
add
aaa
mov
iret
and
sub
add
jno
adc
popa
jo
loop
add
sarl
imul
push
or
add
divb
stos
add
sbb
call
add
insb
dec
dec
cmpsb
add
sub
add
shl
leave
imul
xchg
sub
add
xchg
movsb
add
clc
pop
or
add
outsb
xor
out
xor
mov
add
add
sbb
add
and
add
add
loope
push
add
jle
push
add
enter
mov
imul
cmp
adc
mov
sbb
push
mov
add
ret
lea
ljmp
adc
int
iret
ljmp
dec
push
adc
add
test
add
add
jno
mov
add
add
add
add
daa
nop
inc
loope
push
in
push
cli
pushf
dec
mov
add
xchg
add
ret
or
push
add
or
out
dec
push
xor
sub
flds
nop
pop
inc
xchg
pop
mov
dec
xchg
das
mov
pushf
in
mov
aam
pmaxsw
add
ja
pop
in
jge
out
push
into
shlb
jno
pusha
lods
add
inc
mov
add
jecxz
sub
jbe
loop
add
clc
cmp
cmp
xor
sub
add
cmp
jg
xchg
or
add
pop
xchg
add
inc
addb
inc
data16
cmc
push
add
and
add
int3
mov
jg
xchg
adc
hlt
jb
fcomps
jecxz
js
insl
mov
mov
add
ret
dec
pop
cmp
xor
pop
adc
in
insl
cmp
loopne
addb
lods
cmp
push
add
outsl
icebp
jmp
pop
arpl
mov
add
scas
add
addb
or
add
mov
add
leave
test
ret
nop
fstp
addb
sarb
lods
add
push
sahf
aam
add
pop
cmpsb
add
xor
in
lods
add
jae
das
mov
lcall
adc
mov
into
ss
mov
jmp
ss
lock
add
add
mov
fcomp
add
add
add
ror
test
add
xor
sub
add
fcom
add
xchg
rolb
mov
cmpsb
add
imul
inc
or
add
sbb
push
push
arpl
pop
inc
insb
enter
pop
add
sbb
dec
sbb
add
or
add
ret
arpl
and
add
jle
dec
bound
add
push
dec
pop
sti
xchg
pop
dec
push
mov
mov
add
pop
mov
add
add
addb
sbb
add
fdivs
mov
lock
add
jmp
sbb
in
icebp
ss
sahf
cmp
and
add
add
sti
rcl
add
add
add
lea
add
enter
jmp
cmp
popf
insb
fmuls
and
add
inc
dec
inc
std
xor
test
add
add
sbb
cmp
xlat
subl
ljmp
inc
in
push
add
sbb
jne
add
add
add
pusha
sub
add
mov
fcmovnbe
dec
and
jp
sbb
addb
mov
icebp
xor
lods
xor
out
loop
add
cmp
add
lock
cmc
sub
add
fwait
mov
add
add
add
add
std
mov
addr16
sahf
mov
mov
push
push
fstpl
mov
inc
or
add
or
xor
enter
push
fisubl
mov
pop
xlat
fcompl
std
pop
fs
jno
sbb
adc
add
jae
pop
movsl
mov
xor
rclb
icebp
arpl
add
and
mov
test
outsb
addb
imul
dec
icebp
arpl
ds
inc
push
add
cli
out
push
sub
add
mov
xchg
add
sub
add
add
and
add
and
add
add
add
ja
sbb
add
jmp
add
xchg
lret
push
mov
add
roll
test
add
add
arpl
add
push
and
add
call
test
push
add
dec
stos
add
xchg
movsb
add
mov
add
nop
cld
rcrb
std
jne
lds
mov
cmpsl
insb
popf
and
mov
add
inc
arpl
add
add
add
loop
pop
lds
in
push
add
sar
mov
and
xchg
xor
add
mov
jno
movl
mov
lcall
dec
clc
xlat
push
decb
mov
dec
xlat
out
js
xchg
js
mov
jnp
arpl
xorl
add
mov
add
add
rcr
stc
dec
sbb
add
aas
adcl
mov
mov
mov
and
add
popa
mov
jl
inc
ja
adc
jmp
add
imul
add
shrb
cmp
push
inc
adc
xchg
repnz
scas
ret
outsb
mov
push
jecxz
or
shll
test
jb
call
jae
fidivs
add
add
addr16
js
sbb
sbb
add
add
sub
add
mov
jl
icebp
inc
clc
fstp
fs
pop
jge
push
xchg
sahf
rorl
mov
jbe
insb
and
add
add
imul
add
pop
loopne
cli
push
arpl
mov
jecxz
fbld
add
cwtl
xchg
std
adcl
add
add
mov
add
push
and
add
xchg
add
add
addb
push
jo
pop
repz
xor
cmp
nop
cwtl
and
add
inc
hlt
popa
or
repz
add
mov
add
jne
or
ss
mov
add
addb
mov
rolb
bound
add
add
add
pop
hlt
fwait
or
sahf
adc
jno
pop
ret
in
mov
add
add
mov
cmc
ret
cld
dec
call
pop
push
mov
add
xor
add
cwtl
fdiv
outsl
test
jge
jg
dec
popa
and
jnp
enter
movsb
add
add
test
add
add
add
ret
stos
add
and
xor
ja
lret
or
add
push
push
cli
push
or
scas
add
arpl
cmp
pusha
adc
inc
xor
add
adc
push
mov
or
add
add
dec
xor
jp
add
clc
cmp
pop
xchg
testl
loopne
andl
ss
insb
inc
cmp
and
add
data16
adc
add
push
nop
lock
add
addb
xchg
mov
sub
cli
outsb
adc
add
insb
cmp
mov
or
mov
inc
repz
add
sbb
mov
add
sbb
lahf
lret
pop
nop
dec
push
add
jns
lds
pop
test
add
jae
xchg
add
add
mov
add
add
test
or
add
cli
dec
push
cmpl
pop
and
add
pop
push
adc
add
adc
inc
dec
popl
add
sahf
out
psllq
popa
xorl
mov
add
jmp
and
rcrb
mov
mov
loope
lahf
sub
add
mov
insb
pushf
fs
aad
addb
add
add
ss
rcrl
add
jge
lret
jb
fildl
das
sbb
pop
push
push
stos
add
lock
add
sti
in
lcall
add
adc
lret
leave
jbe
and
cmp
sbb
dec
and
add
dec
cmc
sub
add
xchg
aad
sub
add
xorl
jle
movsl
pushf
jnp
das
sub
add
push
pop
mov
scas
add
out
stos
add
sbb
add
jmp
lds
add
movsl
xlat
xchg
jo
jl
jg
mov
pop
push
cmp
in
mov
add
cmp
icebp
popa
movsb
add
in
loopne
jg
fiadds
xor
or
inc
dec
addb
add
add
adc
sub
add
add
sarl
fdivs
insl
fcompl
cmp
aam
add
inc
xor
shrb
movsl
xchg
add
xlat
ret
xchg
add
int
enter
dec
dec
shll
sub
add
add
pop
cli
dec
add
add
push
or
add
sbb
xchg
pop
sbb
aas
sbb
dec
sbb
jl
adc
add
std
pop
lds
xchg
test
add
push
add
ja
or
add
adc
jl
pop
jbe
add
daa
dec
ljmp
imull
int
imul
fcomps
mov
xchg
add
mov
cmpsl
iret
xor
mov
add
jle
outsb
and
add
cmpsl
movsb
add
mov
fbld
mov
add
push
iret
or
iret
or
pop
mov
adc
add
add
clc
mov
add
sbb
out
stos
add
mov
add
in
mov
fbstp
jp
xchg
cwtl
nop
cld
sbb
add
sti
jg
imul
out
sbb
mov
into
xlat
push
xor
push
sbb
add
in
fsubl
mov
mov
stos
mov
xor
add
add
jl
push
jl
stc
inc
push
mov
push
mov
add
nop
sti
adc
add
inc
add
add
daa
jle
adc
pop
push
fidivrs
sub
add
cmp
add
mov
add
testl
dec
sar
push
add
les
and
add
add
pop
imul
mov
mov
push
mov
in
loop
add
jg
rolb
jp
push
sub
add
sbb
cmp
bnd
mov
test
add
test
arpl
add
movsb
add
or
add
stos
cld
out
or
add
mov
mov
cmp
clc
mov
inc
outsb
jbe
icebp
arpl
dec
xchg
mov
jge
inc
inc
sti
popa
xlat
pop
mov
push
add
dec
or
add
push
add
lock
cmp
movsl
sbb
or
add
adc
test
sbb
fwait
mov
add
sbb
jae
inc
shr
mov
add
shll
mov
das
pusha
cmp
mov
and
cmc
xchg
jle
mov
add
pusha
out
mov
dec
shrl
add
push
mov
jmp
out
jg
inc
filds
add
add
fnstsw
add
lret
mov
add
jae
lret
mov
out
and
lds
xor
add
sub
add
mov
dec
cmp
add
nop
movsl
or
add
data16
add
xor
sub
push
stos
add
sbb
add
int
stc
xor
popf
sti
fs
leave
inc
fdivl
pop
xor
or
add
fsubrs
add
pushf
and
add
add
repz
outsl
xor
or
add
rcl
lcall
imul
insl
stos
xchg
mov
add
lock
sbb
add
ficoms
lds
lock
stos
cwtl
bound
aaa
add
negl
sbb
add
pop
jno
inc
das
sub
xchg
scas
add
jecxz
xchg
inc
rolb
fsub
out
push
adc
or
add
mov
outsl
rcr
pushf
mov
inc
mov
add
out
cmp
xlat
pop
pop
arpl
mov
xlat
rcrb
jbe
aas
push
cmpsl
addb
dec
add
dec
inc
mov
div
jl
lret
or
add
mov
lret
add
popa
test
add
sub
and
xchg
add
mov
push
xor
add
cli
lods
add
push
inc
aam
sbb
mov
add
mov
pop
pusha
mov
xchg
add
shlb
bound
add
adc
adc
add
lret
pop
fs
repnz
je
add
mov
pop
inc
jp
push
push
jns
xchg
mulb
add
add
push
scas
mov
inc
nop
jbe
or
add
nop
cmpl
add
jae
fucomp
pop
inc
mov
add
stos
pop
push
cmp
sbb
std
lret
testb
cmp
insl
repnz
xchg
stc
popf
mov
adc
outsb
cmp
push
ret
push
mov
data16
stos
sub
pop
out
in
fcomps
push
xchg
insl
test
or
add
mov
add
add
mov
add
add
push
cmc
cmp
inc
cmpsl
mov
psllw
add
cmp
cmp
stc
or
mov
add
add
roll
or
add
aam
and
cli
dec
in
rclb
add
ret
clc
popf
add
mov
rclb
mov
add
push
sbbl
out
mov
add
sbb
sub
add
and
add
fcompl
sub
add
hlt
jns
sahf
imulb
mov
pop
xor
sti
mov
jne
fwait
adc
add
xor
pop
test
dec
into
cmp
add
pop
or
add
adc
sub
xchg
into
pop
mov
fldcw
into
xor
push
movsl
xchg
push
add
push
jmp
push
insb
fwait
loope
add
imul
xor
adc
fistpl
add
in
add
call
movsb
add
mov
movsb
add
pop
push
test
add
add
xlat
jle
mov
xchg
sbb
add
xchg
jge
jmp
jle
dec
cltd
mov
add
cmp
ja
movsb
add
sub
add
fistpll
cmp
inc
lods
add
mov
add
inc
clc
aad
dec
dec
int3
sahf
adc
sarb
add
ljmp
add
push
or
addb
sub
pop
cmpsl
dec
pop
test
add
cld
mov
add
mov
in
call
mov
or
add
add
mov
pop
pop
rcrl
and
fsubr
inc
sbb
add
repz
movb
add
int
test
add
mov
adc
int
xor
ror
in
adc
test
add
repz
cmp
outsl
ja
xor
bound
add
inc
jl
sbb
mov
arpl
add
enter
add
xchg
jge
pop
lcall
sbb
cmovge
arpl
call
sub
xor
test
add
mov
mov
add
push
inc
lods
add
add
movsb
add
loopne
imul
rcll
ja
or
in
repz
dec
sub
into
cmpsl
xor
icebp
inc
pop
cmp
mov
rcll
fwait
loopne
lea
cmp
add
bound
xchg
add
cltd
pop
dec
rcrl
sahf
jmp
iret
sub
cld
mov
add
dec
push
xor
pop
shll
inc
dec
mov
fstpt
sub
push
fnstenv
retw
push
add
lcall
adc
lds
imul
sbb
add
and
repz
add
xchg
jne
add
and
add
cmpsb
add
lds
inc
loope
jns
jmp
add
xchg
lea
add
jmp
movsl
lock
jbe
xchg
jl
aam
add
jno
pop
call
or
add
lods
add
or
jbe
or
inc
cmc
lret
scas
add
decb
jecxz
ficomps
add
adc
push
mov
xchg
dec
shll
cli
pop
pop
shrb
add
imul
mov
add
pop
addb
pushf
leave
int3
xor
sub
add
xchg
or
add
mov
push
loop
jl
cmp
mov
jo
pop
inc
fcompl
push
and
add
jo
sbb
inc
add
sti
je
ret
sbb
and
out
jle
sarb
add
adc
add
icebp
cmpsb
add
ss
mov
cmp
movsb
add
xchg
inc
push
outsl
sahf
rolb
shlb
add
fsin
mov
bound
jge
mov
add
sbb
xor
add
sti
loope
mov
repz
cmp
adc
add
push
aaa
call
jno
add
mov
in
movsb
add
dec
mov
scas
and
dec
dec
addb
in
adc
jl
insb
loop
push
jle
cmp
sub
sahf
sub
sub
add
add
mov
inc
leave
sbb
mov
stos
add
sub
add
sti
mov
add
mulb
jo
rcrb
add
pop
jg
outsb
xor
add
add
test
add
mov
xchg
adc
jl
mov
add
scas
mov
add
jb
add
cmp
sar
addb
add
add
out
add
pop
push
mov
jb
enter
addb
ds
test
add
xlat
mov
mov
xchg
or
add
popa
xchg
jbe
add
gs
xor
nop
mov
add
lea
imul
xor
dec
dec
hlt
dec
cmpsb
add
or
add
lret
inc
out
cmp
add
arpl
push
xor
push
and
or
add
push
mov
jle
ljmp
mov
pop
mov
arpl
xlat
sub
add
dec
sarl
xchg
add
leave
mov
add
in
add
fisubrs
mov
add
or
add
cmpsb
add
ljmp
loope
into
sbb
or
add
mov
jnp
fcompl
stos
je
mov
pop
imul
imul
jmp
pop
out
add
xchg
add
add
push
lahf
dec
mov
mov
add
add
mov
add
movsl
inc
mov
inc
xchg
jle
daa
psrld
inc
mov
add
pop
ljmp
add
and
add
enter
outsl
insb
mov
cmpsl
and
add
lods
jecxz
inc
arpl
mov
jge
fisttpl
pop
in
mov
ret
add
inc
cmc
sub
add
cmp
push
cmp
add
jecxz
fdivr
xchg
fdiv
xor
jno
add
fistpl
out
adc
scas
add
enter
dec
push
lods
nop
inc
js
int
mov
jnp
pop
rcrl
inc
pop
fmull
popa
xor
add
sahf
imul
dec
sar
in
mov
add
aad
xchg
push
addl
rorb
xor
add
mov
add
jo
mov
jbe
add
sarb
in
xlat
std
mov
adc
shr
mov
add
jns
lcall
lcall
cld
cmpsl
pop
pop
sbb
add
push
add
push
lret
addb
jl
push
cmp
addb
pop
aad
jmp
mov
popf
ret
loope
fdivs
add
mov
sub
add
jns
and
add
add
das
push
shrl
jbe
jl
dec
mov
dec
bound
inc
repz
flds
add
adc
iret
add
mov
movsb
add
jns
dec
test
add
ret
enter
add
in
inc
sub
jbe
addb
scas
cmp
fxch
mov
push
dec
sub
add
gs
cld
mov
push
add
mov
addr16
lea
fldpi
mov
inc
pop
cmp
add
cld
cmp
add
lcall
and
add
sub
cmp
js
fs
repz
aas
ss
cmc
mov
fstpt
cmp
aas
aaa
jo
add
mov
cmp
jl
or
add
movsb
add
push
cli
sbb
cld
jb
add
sub
daa
cltd
out
inc
cmp
add
call
daa
adc
xor
adc
ljmp
enter
jne
insb
mov
in
or
add
testl
add
clc
xchg
nop
mov
pop
hlt
add
or
add
xchg
or
iret
inc
inc
mulb
add
popa
adc
out
decl
xor
out
mov
int
and
add
add
cmp
adcl
mov
add
fwait
jecxz
sahf
loopne
add
push
outsb
sbb
mov
or
add
add
out
sbb
aas
jecxz
insb
stc
xchg
sub
add
in
sbb
pop
clc
dec
scas
mov
add
cmp
or
add
dec
into
cbtw
sti
cli
inc
xlat
sub
add
mov
mov
add
jnp
add
stos
mov
dec
dec
sub
ja
idivl
addr16
shlb
popf
cmp
add
roll
imul
movsl
add
xchg
pop
push
xchg
icebp
xchg
loopne
in
imul
add
cld
call
add
cwtl
adc
loope
pop
mov
fistpl
sub
add
xor
inc
dec
adc
sbb
cmp
inc
rcrl
pop
mov
add
mov
add
add
mov
scas
push
ret
in
jne
shlb
enter
hlt
hlt
icebp
mov
add
outsb
jmp
xor
push
aad
push
push
mov
add
pop
adcl
arpl
aad
dec
fsubl
add
xchg
sub
add
add
push
fistpll
int3
out
addb
test
sub
add
repz
add
arpl
add
cmp
outsb
pop
adc
popa
std
mov
cmp
fsubp
pop
sub
test
and
add
int
cmpsb
add
test
jmp
xor
add
jno
insl
mov
add
add
lds
add
ficoms
add
stc
add
mov
mov
add
les
dec
imul
call
add
fs
jge
fxsave
add
add
add
sbb
add
mov
fwait
enter
add
pop
add
mov
add
clc
pop
aas
mov
mov
add
mov
inc
sbb
add
mov
xor
add
test
add
push
rcrl
ret
je
cmpsb
add
fdivr
into
mov
lahf
sbb
add
cli
test
add
inc
mov
outsl
roll
add
popf
and
out
pop
leave
cmp
pop
shrb
or
add
cmpl
jbe
and
push
mov
pop
fcmovnbe
lds
fmull
add
jne
fistpll
add
mov
lret
sub
test
add
mov
add
mov
sbb
push
xor
in
aad
das
rclb
push
ljmp
pop
adc
lods
add
sti
add
repz
and
add
mov
lods
add
mov
add
or
add
sbb
lcall
pop
add
enter
test
add
call
ret
mov
lret
inc
mov
in
mov
lret
pop
xchg
or
and
add
dec
loopne
ss
stos
adc
or
dec
jns
xor
lods
xchg
add
xchg
lods
add
arpl
add
pop
sbb
add
mov
test
xchg
and
das
popf
xchg
cmp
add
mov
add
cmp
or
or
add
fs
stc
popf
pop
dec
testb
js
add
movsb
add
mov
mov
add
pusha
pop
adc
and
aaa
pop
pop
nop
or
add
mov
or
insl
js
mov
stos
add
dec
push
in
pop
out
in
popf
jp
icebp
adc
add
pop
loop
jmp
adc
loope
adc
cmp
inc
sbb
cmpsl
jae
jbe
dec
push
add
cmpsb
add
imul
cmpsl
mov
pop
and
fidivs
gs
mov
imul
push
mov
rorl
add
sub
xchg
adc
mov
add
das
dec
push
mov
xchg
addb
lret
mov
add
sub
outsl
pop
cmp
add
add
add
adc
into
mov
jbe
fsubrl
add
jecxz
sbb
add
or
add
aad
sub
add
jae
pop
push
cli
dec
das
adc
insb
scas
add
int3
jnp
cltd
cmp
push
xchg
pop
add
add
add
jmp
femms
add
mov
mov
xchg
add
mov
shrl
add
jns
push
xor
das
cmp
sahf
call
mov
hlt
inc
and
add
add
sbb
loopne
add
aaa
sub
jle
out
mov
shrl
or
jle
or
add
popf
fdivr
push
mov
pusha
push
jno
inc
out
mov
add
xor
add
sub
fisttpll
jmp
add
mov
repnz
xchg
mov
test
add
enter
inc
hlt
daa
cmpsb
add
sub
add
mov
add
add
outsl
inc
jl
je
lods
in
cwtl
imull
push
add
std
lea
xor
push
add
push
add
inc
inc
orl
jmp
inc
dec
test
in
test
add
popl
jnp
xor
add
in
mov
add
popf
pop
add
sub
gs
add
jno
lret
loopne
inc
add
adc
jnp
jo
jmp
mov
add
fwait
mul
sbb
cli
mov
sbb
popa
fs
cmpsb
add
xchg
push
fbstp
cmpsb
add
arpl
faddl
cmpsb
add
xlat
mov
ja
stos
add
test
shr
in
jns
cwtl
insb
enter
add
ss
adc
xchg
or
fidivs
bound
add
call
add
mov
rcr
je
fsub
adc
stc
sub
add
sub
xor
add
test
xchg
or
xchg
cltd
xor
adc
in
je
mov
add
loop
int
sub
add
aad
add
add
adc
dec
fisubrs
add
fwait
mov
pop
mov
mov
add
mov
add
movsl
push
mov
jmp
repz
imul
imul
cmp
add
loop
int3
mov
lods
add
in
sbb
inc
movsb
add
cwtl
xchg
add
cmp
pop
leave
cmp
scas
add
insl
push
add
cltd
push
insb
xchg
mov
add
fnstenv
and
add
jg
outsl
mov
jl
outsl
data16
add
lods
sub
das
outsb
out
imul
mov
push
add
add
fmull
and
outsl
mov
mov
add
add
out
hlt
dec
dec
outsb
inc
std
adc
sub
add
adc
fiadds
push
xlat
mov
sbb
fmull
xor
xor
add
in
add
scas
add
ss
sbb
sti
pusha
ror
and
add
cmp
dec
add
add
jb
or
ljmp
pushf
in
sbb
stc
pop
in
in
cmp
adc
add
dec
dec
aad
lock
add
test
add
sti
add
add
jmp
xchg
jo
dec
adc
loopne
push
ds
and
add
adc
sti
sub
add
xchg
mov
adc
mov
popa
scas
add
pop
addb
loopne
pop
movsl
jb
cli
or
mov
jp
ja
mov
dec
push
stos
add
loopne
mov
add
fcmovne
inc
shrl
sub
add
push
rcrl
lret
and
adc
pop
adc
xchg
mov
mov
push
mov
add
add
xchg
popf
movsl
daa
jmp
xorl
lret
lods
loopne
cmpl
fildl
push
mov
add
push
sub
add
and
add
mov
jns
fnstenv
sbb
mov
xor
scas
add
clc
mov
jmp
cmp
add
scas
sbb
mov
dec
push
inc
mov
add
scas
cmpsb
add
aam
stc
int3
in
pushf
addb
adc
add
aas
out
push
sti
xor
add
add
add
stos
xchg
cmp
pop
sub
add
push
add
xor
dec
push
out
push
pop
inc
push
add
fadds
cmpsl
jle
mulb
add
adc
inc
mov
inc
cwtl
dec
mov
out
mov
popf
push
or
add
pop
xchg
mov
add
jno
jns
lea
repz
push
nop
jp
stos
xchg
clc
mov
addb
xor
sub
out
add
mov
cmp
add
cmpsl
mov
pushf
add
movsb
add
sbb
add
je
ret
push
add
test
add
add
inc
jl
add
je
xchg
jg
add
les
push
nop
fisttpll
add
ret
add
out
mov
cltd
adc
dec
notb
pushf
cmc
repz
add
sbb
sub
add
inc
inc
adc
fs
or
add
addr16
jns
add
out
add
insb
adc
mov
add
jp
outsl
sbb
jecxz
jnp
dec
cmp
scas
add
imul
test
popf
sbb
cli
jnp
add
add
add
add
xchg
ja
dec
pop
pusha
pop
sub
add
mov
xchg
pop
bound
pusha
jno
cmp
mov
sbb
jp
mov
lds
loopne
cmpl
push
add
mov
cmp
cmp
sub
add
add
sti
bnd
or
sub
jo
xorl
pop
inc
lahf
mov
fdivs
or
add
lret
inc
popa
mov
dec
jmp
fs
das
mov
and
add
insb
loop
sti
js
adc
test
add
addb
jecxz
pop
shrb
stc
stc
adc
sub
add
inc
out
scas
add
cwtl
jmp
add
dec
ljmp
fwait
adc
sbb
adc
sti
adcl
add
xlat
or
mov
add
aaa
cmp
dec
sub
add
inc
outsb
xchg
cmpsl
ret
xchg
add
aad
lods
les
aad
das
dec
push
push
out
mov
add
add
mov
cmp
lahf
xor
add
fcompl
mov
push
popf
mov
push
mov
and
add
push
jl
jbe
imul
add
cmpsl
in
mov
add
jecxz
loop
sub
sub
xchg
push
call
psrad
data16
add
in
add
add
and
pop
xchg
in
fisubs
add
add
add
shll
xchg
popf
cld
and
andl
clc
pop
mov
add
sbb
inc
mov
lret
popa
fs
xchg
dec
scas
add
scas
mov
and
push
ljmp
add
cmp
ret
jmp
fisttps
or
add
divl
pop
or
arpl
les
add
or
xor
lods
mov
aam
das
jg
add
mov
and
add
add
dec
jo
mov
fnstcw
rcrb
sbb
in
add
add
adc
pop
push
push
mov
cli
or
add
add
add
leave
xchg
inc
mov
das
mov
cmp
js
mov
add
icebp
mov
je
ficomps
lods
add
addl
fs
rcrb
hlt
aaa
xchg
out
mov
xacquire
add
add
pop
mov
push
jnp
jo
cli
stos
add
mov
add
xchg
in
dec
cmp
jp
jge
scas
add
lcall
pop
mov
add
xchg
rcl
add
add
push
ret
stos
add
pushf
xchg
dec
add
add
sub
adc
xchg
fwait
cmpsl
mov
mov
add
dec
stc
jb
imul
sbbl
cmpsb
add
mov
imul
xor
push
sub
ljmp
add
add
mov
jl
mov
cld
lret
aad
inc
sbb
add
adc
xor
pop
sbb
pop
fildl
dec
sbb
test
add
dec
lds
test
add
adc
outsl
ja
pop
xchg
jb
int
add
ret
shlb
arpl
dec
jmp
push
inc
addb
out
lods
out
adcl
cmp
pushf
dec
cmp
pusha
inc
fwait
adc
push
int3
dec
test
mov
aas
fdivl
mov
add
dec
lds
inc
cmp
stos
add
in
imulb
mov
adc
ja
add
pop
xchg
cmp
addb
and
add
leave
dec
adc
shll
int
outsl
jecxz
imull
add
xor
add
mov
xor
ja
xchg
rcll
add
xchg
or
add
and
add
mov
and
add
add
mov
mov
cmp
mov
test
add
sbb
sahf
fdivl
in
push
add
xor
push
mov
add
sti
xchg
ljmp
lods
popa
insb
push
inc
inc
insb
insl
ficoml
adc
sbb
lret
mov
dec
hlt
xlat
dec
scas
add
pop
mov
add
dec
dec
mov
pop
sub
mov
mov
fadd
ja
sbb
addb
in
pop
clc
pop
mov
add
add
push
add
and
add
add
add
add
out
ja
add
sub
jmp
add
ficomps
add
imul
add
popa
out
xchg
and
mov
jno
js
insb
push
ds
jno
add
cmp
call
nop
mov
add
jp
push
pushf
jmp
or
mov
lret
sbb
add
cmp
sbb
rorl
add
add
mov
shl
push
scas
add
xor
jne
fucomi
pop
add
add
add
clc
push
leave
lods
add
call
stc
dec
jge
jl
icebp
pop
add
mov
add
icebp
mov
subl
add
out
aaa
inc
sti
or
add
add
fldl
outsb
mov
bound
mov
add
add
or
hlt
insl
pop
in
mov
mov
xchg
sub
add
arpl
jae
test
add
into
cmp
xchg
add
add
mov
fidivs
add
cmpsl
data16
ss
pop
aas
jo
xor
add
add
pushf
loop
mov
fstl
pop
jbe
iret
cmp
lods
sub
add
or
sbb
add
or
add
pop
cli
push
filds
add
cmc
cmc
jbe
xlat
cwtl
pop
and
cmp
add
ror
add
add
xchg
and
add
ret
jge
fdivrl
pop
sbb
add
rol
add
sbb
outsl
movd
aas
icebp
sub
add
xchg
cmp
add
pop
or
dec
cld
dec
ljmp
jb
add
movsb
add
adc
mov
inc
out
add
add
add
sbb
insb
add
adc
pop
int
or
sub
add
add
cmp
sub
add
mov
in
fs
add
xorl
das
add
dec
lret
add
sbb
xor
inc
popf
add
add
xchg
sub
loope
add
mov
ret
or
insb
out
add
dec
addb
hlt
cmc
mov
lea
ja
mov
and
leave
hlt
pop
cmp
jecxz
add
inc
jae
sbb
movsl
imulb
mov
add
inc
pop
sahf
inc
and
add
test
add
sub
subl
add
in
jp
add
mov
and
into
loope
xlat
mov
popf
mov
add
rolb
les
xchg
xchg
ficoms
je
imulb
into
popf
js
add
push
push
imul
add
jge
add
pop
adc
das
mov
sub
add
push
jge
add
add
add
cmpsb
add
test
add
adcl
add
xor
add
jns
pusha
aad
and
pop
sub
add
push
ret
aas
jmp
xchg
popf
fs
pop
pop
mov
add
sub
add
add
mov
fcoml
push
add
repnz
loopne
enter
ret
int3
fdivs
add
aad
stos
enter
idivl
sub
mov
mov
add
jne
add
mov
add
sar
mov
adc
mov
add
aam
xchg
fdiv
or
add
add
inc
js
idiv
mov
or
lods
add
add
xor
enter
mov
add
jne
cmpsl
cmp
cld
repz
mov
push
dec
sub
add
xor
add
add
jo
fwait
pop
icebp
testl
add
inc
aad
ljmp
insl
popf
inc
rcl
insl
rcrl
dec
idivb
icebp
movsl
mov
into
mov
xchg
cmpsl
or
xchg
or
add
sbb
adc
or
add
or
add
push
add
loop
mov
xor
daa
cmp
testl
cmp
ja
dec
out
add
add
lret
movsl
add
add
addb
pop
mov
add
outsb
stos
add
mov
push
add
daa
cmpsb
add
sub
mov
sbb
repnz
xchg
shll
out
rcrb
add
dec
xchg
push
inc
cmp
fucomi
addr16
cmp
add
push
push
cmp
in
add
sbb
cli
pop
call
add
repnz
loop
add
push
sub
test
add
jge
fnstsw
mov
mov
cmpsb
add
stos
dec
and
sub
add
add
xor
aas
stc
jbe
mov
lcall
add
mov
add
xor
xchg
mov
imul
in
add
gs
inc
lahf
jle
pop
imul
pop
jbe
sub
add
add
or
add
add
aad
in
daa
and
jg
rcr
js
add
xchg
orl
push
lods
add
push
and
add
in
xor
inc
jle
xchg
ror
fildl
add
or
add
imul
add
add
add
pop
inc
sbb
hlt
popa
adc
das
jge
xchg
inc
mov
add
add
xchg
sbb
xchg
push
in
mov
add
cmpsb
add
sub
add
pop
popf
xor
jnp
add
mov
mov
mov
add
push
notb
ret
add
mov
add
add
js
push
xchg
por
push
or
mov
add
icebp
fbld
fnsave
test
add
jbe
ror
addb
jo
rcl
add
cmp
outsb
push
xchg
rcrb
aas
stos
push
mov
loop
xor
sbb
out
fisttps
jnp
inc
mov
lods
add
lahf
and
icebp
movsl
cmpsl
enter
cmp
mov
cmp
pop
xor
inc
or
add
adc
add
ret
or
or
add
setl
xchg
outsb
testb
add
xchg
ficoml
cmpl
mov
fsub
stc
das
mov
add
xchg
mov
scas
xlat
call
xor
cmp
jl
push
idivl
addl
aam
add
add
lds
add
xchg
add
int
out
mov
clc
push
cmc
cmpsl
or
jmp
mov
jb
inc
test
jns
int3
mov
jle
and
add
add
outsl
out
or
add
out
pop
ret
je
inc
inc
pop
adc
add
add
mov
and
sub
je
jns
mov
sbb
xlat
xor
int
and
add
add
add
jge
cmp
daa
or
sbb
or
add
xchg
popa
rorl
icebp
jle
xchg
jle
cmp
add
filds
xchg
jg
insb
inc
shrl
mov
xor
stos
clc
icebp
test
add
pusha
scas
rcl
xchg
add
ja
fmuls
add
outsl
outsl
adc
push
fcoms
jl
push
adc
jge
add
faddp
inc
xor
ja
lea
xor
loope
add
fists
mov
call
imul
fbld
test
add
xchg
shlb
jge
mov
push
lods
add
ss
scas
add
sub
add
add
scas
add
bound
dec
pop
inc
pop
inc
xor
add
add
sbb
adc
ja
ljmp
mov
lds
dec
push
pop
jge
ret
lcall
add
into
cltd
stos
incb
sbb
xchg
add
add
ds
push
out
mov
xchg
je
cmpsb
add
in
xchg
mov
xchg
add
add
cmp
push
add
xor
enter
imul
add
dec
cmp
add
fwait
push
mov
or
loopne
cmp
pop
xor
outsb
sbb
test
add
mov
add
andl
add
add
add
or
push
pushf
dec
mov
add
cmpsb
add
rolb
inc
adcl
inc
fdiv
or
add
sub
add
cli
jge
add
pop
repnz
inc
leave
hlt
mov
add
sti
adc
sti
aas
adc
add
pop
mov
pop
test
add
lods
add
xor
add
cmpl
cmp
push
adc
lahf
mov
jl
and
add
add
lret
pushf
gs
mov
xchg
and
add
and
add
add
xlat
shll
add
dec
addb
and
add
and
mov
sub
addb
pop
mov
push
fnstsw
mov
add
sub
add
mov
pop
inc
xchg
adc
mov
xor
pop
dec
lret
mov
pop
je
icebp
insl
push
jo
addb
fistpl
xchg
add
add
push
jmp
and
in
mov
das
jno
add
and
aaa
addb
jne
jae
mov
cmp
repnz
add
popf
test
cmp
add
imul
add
xor
fbld
add
pop
int3
cmpsl
pop
cli
xchg
add
fwait
loopne
cmpsb
add
and
ret
popf
jb
sti
fistl
add
pushf
add
adc
mov
ljmp
adc
in
pop
scas
add
mov
or
and
add
add
mov
test
mov
add
sub
add
leave
jecxz
fnsave
jns
xchg
add
add
push
add
lods
add
arpl
add
inc
mov
sbb
scas
loope
adc
add
aas
adc
stos
add
stos
add
js
add
cwtl
cmpl
pop
pop
pop
hlt
out
ljmp
cmc
cli
xchg
addb
aaa
inc
cmp
sub
add
ds
in
mov
iret
jb
inc
add
add
jg
loopne
mov
add
adc
add
add
mov
add
gs
jb
pop
out
ds
pusha
jg
arpl
add
int3
cmpsl
cmp
push
add
mov
jmp
mov
add
pop
sbb
scas
add
stos
add
push
add
dec
faddl
pop
mov
mov
cld
into
into
jo
add
js
ss
je
add
fdivr
and
add
sbb
xor
mov
sub
mov
adc
jp
xchg
add
add
dec
dec
mov
ret
add
xchg
jp
inc
mov
add
addr16
enter
add
jg
lock
push
jns
cmc
je
mov
aaa
xor
jg
fisubl
pop
rolb
add
sahf
cmpsl
push
push
sbb
data16
mov
and
add
xor
add
clc
shr
fcomp
insl
pop
call
add
mov
cmpsl
pop
cli
jae
add
int3
pusha
sub
add
add
inc
mov
push
rolb
mov
push
test
add
lds
idivb
sub
add
add
push
add
mov
add
mov
add
cmp
jne
xor
add
pop
mov
add
mov
test
add
add
sub
testl
add
add
in
push
loope
push
add
ss
or
add
add
js
add
jae
add
mov
jp
mov
pusha
xchg
sub
add
scas
ficoml
jg
push
add
mov
decl
add
sahf
addb
inc
rolb
movsl
xchg
rcrb
in
and
add
sahf
stos
add
push
in
cmpsb
add
xor
add
fildl
add
cmp
add
sub
add
add
dec
inc
daa
idivl
dec
loop
and
rcrl
adc
loope
js
xchg
test
add
push
cli
and
add
and
add
xor
add
cmp
jecxz
xlat
dec
dec
clc
dec
xlat
dec
addr16
cmpl
lods
add
add
xor
bound
add
xor
popf
xchg
xchg
xchg
insl
mov
out
cltd
adc
js
mov
js
inc
jle
and
add
ret
inc
lds
insb
hlt
inc
or
cli
bound
hlt
push
ja
cwtl
add
push
ret
pop
sub
adc
xchg
pop
rorb
movsb
add
ror
add
add
add
sub
add
mov
inc
push
js
add
dec
mov
into
mov
aam
dec
cmc
iret
or
add
fs
add
loope
loope
add
shll
mov
lods
add
setb
outsl
scas
jecxz
jmp
jecxz
mull
iret
pushf
cmp
cmp
cwtl
jb
pop
or
add
mul
fsubl
add
inc
jge
daa
sub
rclb
mov
cwtl
xor
sub
add
scas
xor
stos
add
sahf
adc
shl
fnstenv
mov
push
cmp
jp
pusha
mov
cli
push
push
add
pop
xchg
hlt
xor
dec
stos
movsb
add
push
push
add
imul
inc
adc
les
add
pop
xchg
scas
add
add
js
add
mov
add
xchg
les
push
add
outsb
pop
mov
gs
outsl
jae
orl
xchg
call
dec
addb
std
mov
add
test
xchg
jl
xor
test
add
test
add
push
dec
dec
sub
in
inc
testb
sbb
add
add
out
jge
add
cmpl
scas
add
clc
jne
xor
jge
mov
dec
out
aad
sbb
dec
sub
dec
aaa
mov
add
adc
add
bound
add
mov
mov
lods
into
push
mov
add
mov
add
add
and
jmp
add
loopne
xchg
or
aaa
in
hlt
xchg
fdivrl
jecxz
add
cli
fs
push
push
push
bound
pop
jge
lahf
addr16
sub
add
mov
push
mov
fcoms
sbb
and
add
sub
add
add
arpl
pop
addb
sub
add
add
mov
addb
jbe
inc
lods
inc
xlat
call
outsb
aad
jmp
cmpsb
add
pop
or
pop
ja
movsb
add
addb
aas
lahf
or
add
sbb
stos
add
inc
std
fs
fbld
pop
pop
dec
sbb
pop
mov
add
fsubrs
add
add
les
ret
inc
lret
mov
mov
dec
outsl
sub
fsts
inc
or
add
xchg
and
add
add
add
dec
cmp
icebp
jb
adc
jo
xor
cmpsb
add
popa
and
xchg
mov
jge
mul
xchg
jb
daa
scas
add
loope
mov
cltd
scas
mov
dec
lock
shlb
mov
packssdw
pop
mov
mov
add
call
sbb
xchg
add
add
push
sub
xor
insb
xchg
js
lret
sahf
in
outsl
inc
lret
mov
add
fiaddl
and
add
out
pop
aaa
add
rclb
or
add
mov
lret
xchg
push
shrb
sub
lea
movsb
add
xchg
push
out
add
add
aaa
fdiv
scas
addb
mov
add
add
xchg
test
add
int3
jecxz
sub
sbb
mov
pop
fimuls
add
jnp
cmpsb
add
js
ret
shlb
mov
jg
int3
iret
push
imul
sub
repz
pmaxsw
jnp
dec
addr16
test
add
xchg
stc
push
ret
and
or
add
jnp
mov
out
test
sbb
fiadds
mov
add
lret
sub
add
lock
shrl
add
stos
add
xchg
mov
fwait
psadbw
mov
outsb
mov
add
fcompl
loopne
mov
mov
jecxz
dec
mov
pop
mov
pop
xor
jp
out
xor
inc
cli
popf
mov
dec
pop
sbb
stc
imul
sub
add
fiadds
add
add
mov
loope
mov
add
or
ljmp
add
gs
dec
adc
fcomip
sbb
mov
xor
add
mov
inc
sbb
js
add
call
sti
xor
add
fwait
sub
or
mov
fs
cmp
pop
addb
adc
push
rcll
inc
xchg
adc
pop
scas
add
sub
pop
sbb
inc
test
add
leave
popa
jl
add
ja
add
mov
lret
fadds
add
add
lods
add
mov
bnd
add
dec
sub
sub
add
sti
push
int3
enter
add
sbb
xchg
inc
rclb
ljmp
cmc
scas
dec
mov
add
add
int
or
jmp
inc
push
repnz
ss
test
add
sub
aas
push
jae
addb
call
xchg
ret
inc
outsl
sub
add
xor
rcl
jns
jmp
add
jle
add
call
mov
stos
add
xchg
mov
add
out
lds
ja
repnz
push
cmpsl
sub
add
shlb
push
xchg
xabort
fs
in
mov
mov
into
or
mov
add
gs
add
data16
add
pop
mov
add
cmp
add
jp
add
mov
repnz
sbb
repnz
dec
mov
loopne
fwait
addr16
add
lock
or
push
cli
lods
add
push
jg
inc
dec
in
outsl
jecxz
mov
add
add
xlat
mov
add
add
or
mov
out
shll
into
add
xchg
mov
add
fimuls
cmp
sarl
clc
faddl
dec
lea
add
inc
mov
mov
add
mov
jecxz
pop
mov
add
mov
out
inc
mov
add
add
dec
arpl
insl
dec
js
add
sub
add
dec
fistpl
cmc
or
out
add
jbe
mov
jo
add
inc
pop
sti
xchg
add
mov
push
add
nop
push
add
movsb
add
sbb
sbb
cmp
add
add
data16
inc
pop
ret
add
jl
mov
jmp
pop
loop
or
add
mov
add
aad
add
jns
jo
int
test
adc
sbb
or
add
push
ret
sub
add
inc
in
dec
out
mov
add
pop
sti
jmp
sti
mov
das
sub
mov
add
add
push
adc
arpl
inc
fwait
aaa
imul
or
movsl
std
fs
addb
gs
fsub
or
test
add
xor
mov
adc
ret
dec
fisubrs
fistps
dec
test
add
dec
jb
and
add
pop
lds
ds
mov
adc
add
pop
push
aad
into
adc
add
sub
inc
cmp
mov
outsb
lcall
add
adc
mov
add
outsl
mov
adc
test
add
jp
or
sbb
mov
ret
cmp
add
repz
jg
add
add
add
and
add
add
inc
add
add
clc
mov
add
rcrb
sbb
sub
std
push
cmp
scas
xlat
or
test
mov
pop
add
add
stc
les
mov
add
add
mov
lock
add
insb
mov
stos
add
xchg
arpl
add
daa
push
gs
mov
add
jnp
cmpsb
add
cmp
jp
push
add
enter
cmp
dec
ja
leave
hlt
xor
rorb
mov
mov
add
add
and
add
add
push
add
jle
add
not
bound
popa
dec
jns
cltd
in
push
ret
ds
pop
in
add
jo
clc
add
and
and
mov
add
add
lock
inc
or
xor
or
add
pop
add
and
add
mov
add
out
xor
imul
and
add
mov
add
out
push
add
mov
sbb
ljmp
pop
setae
hlt
inc
ljmp
cmp
jbe
add
lahf
movsl
add
add
add
jmp
dec
adc
rorl
add
adc
lods
add
out
sbb
setle
add
mov
stos
filds
mov
add
out
cld
add
add
shll
mov
add
push
push
push
add
inc
inc
pop
cmp
add
hlt
popf
pop
mov
dec
push
add
xchg
sbb
sar
pop
clc
jo
data16
add
add
add
jnp
jne
test
add
push
fiadds
dec
ret
lcall
add
cmpsl
dec
sbb
addb
mov
aas
dec
cmpsl
imul
add
pusha
popa
pop
fldcw
add
push
sbb
aam
jmp
gs
add
scas
enter
aad
dec
push
inc
xor
mov
add
sbb
fdivrl
mov
sub
add
add
inc
mov
push
push
add
xor
mov
scas
sbb
in
fcomps
jo
add
aad
add
outsb
test
push
out
add
repz
adc
add
add
test
add
add
adc
mov
add
pop
icebp
and
add
mov
add
cwtl
pop
out
scas
add
jge
dec
mov
add
cmp
xchg
mov
add
rolb
add
push
add
add
cmp
and
add
rclb
addb
xchg
lock
loopne
ret
xchg
jns
fdiv
ss
aam
mov
popf
rclb
mov
shrd
addb
push
push
in
add
add
push
loope
dec
mulb
cmc
movsb
add
and
push
mov
lret
jmp
lret
addr16
test
add
in
inc
iret
adc
lods
icebp
cld
out
outsl
stc
test
sub
add
mov
aas
ljmp
add
xchg
add
jbe
out
mov
add
inc
adc
out
rorl
div
jbe
add
jp
insb
fdivs
dec
or
add
enter
jno
ss
clc
test
add
add
xchg
cmc
xor
add
testl
repz
lret
fmul
test
add
mov
adc
push
mov
and
add
sbb
call
add
add
imul
adc
add
enter
mov
add
add
mov
std
push
sub
pop
xchg
add
hlt
push
add
jb
aam
adc
ja
fwait
aam
ljmp
and
lea
add
push
add
testl
bound
gs
add
add
outsb
xor
push
std
orl
insl
cmpsl
add
add
add
cmp
jge
add
lret
stos
jle
mov
call
xchg
jmp
cld
jne
popa
test
add
insl
xchg
or
add
ret
add
push
addl
jb
push
sub
xor
mov
add
ss
push
imulb
inc
jne
loopne
sbb
pop
lods
add
sbb
gs
lahf
int3
outsb
and
add
add
dec
mov
jae
push
or
add
fadds
add
fbld
mov
add
aam
pop
rcrl
sbb
addb
int3
add
xchg
in
xchg
sti
xlat
mov
or
std
and
push
add
rcr
idivb
popf
sar
xor
lock
cli
and
add
add
pop
add
add
clc
add
xchg
xchg
pop
addb
xor
push
outsl
sbbl
pop
subl
out
sbb
add
or
add
and
add
unpcklps
rorl
and
add
sub
add
add
sbb
in
push
fnstsw
aaa
ja
add
add
mov
fiadds
add
cmc
ret
adc
pop
jno,pt
stos
cmc
push
add
or
sbbl
jle
stos
add
aad
movsb
add
out
scas
iret
in
add
jl
add
add
sub
add
add
sarl
mov
xor
mov
adc
xchg
rcrl
adc
add
mov
mov
fimuls
movsl
or
add
lods
add
call
push
sub
add
aad
ret
jle
or
add
out
aad
and
pop
xchg
adc
cmp
pop
in
mov
jg
loope
fisubrs
or
jbe
push
add
popa
mov
add
mov
and
add
outsl
test
add
fs
daa
popf
inc
xor
add
jns
dec
adc
cmp
jmp
add
push
iret
pop
ret
lds
sbb
dec
xchg
orl
add
jecxz
push
add
je
aad
add
sahf
lock
mov
add
adc
add
sbb
add
and
pop
inc
stos
add
cli
hlt
jno
sbb
pop
inc
cld
or
add
ljmp
add
jne
xor
cmp
add
xchg
pop
jne
pusha
shll
mov
inc
faddl
popa
dec
sub
add
fcompl
addb
mov
add
add
add
add
add
and
add
mov
in
add
jp
add
aam
roll
lahf
mov
or
add
add
adc
das
cmp
imul
add
add
adc
xchg
addr16
xchg
and
add
add
add
nop
repz
ja
inc
pop
hlt
inc
test
add
add
dec
les
aad
xor
cmc
xchg
addr16
cltd
int
ja
pop
outsb
shrl
or
xor
add
lock
add
cmp
add
insb
daa
pop
lds
fwait
sahf
cli
cli
mov
dec
push
add
and
je
add
jbe
imulb
pop
fcmovnu
cmpsl
repz
add
push
add
fistl
or
inc
inc
mov
add
pop
pop
pop
addb
push
in
adc
fisubl
add
sti
aam
out
push
dec
mov
imul
xor
xchg
add
jno
mov
push
or
add
shll
cmpsl
sti
int3
sahf
mov
add
sbb
out
mov
add
out
pop
or
jge
mov
add
jbe
push
jnp
mov
add
ret
clc
cli
mov
mov
add
pop
movsl
sub
ja
inc
inc
aam
jmp
add
and
add
push
push
fimull
cmp
fdivrp
ss
in
pushf
std
repnz
sbb
ret
inc
je
pop
mov
lea
xchg
adc
nop
pop
fisubl
add
test
cmp
popf
fsubrl
xchg
stc
push
rcrl
add
and
add
loop
cmp
cltd
push
cmpsl
inc
mov
xchg
std
fwait
js
ret
dec
xor
pop
shll
je
lea
sbb
add
cmp
inc
push
test
add
add
cmp
mov
mov
push
cmp
arpl
pusha
or
xchg
int
in
push
push
and
fstpt
orl
sub
add
jmp
xor
outsl
xor
or
add
sahf
xor
pushf
pop
scas
cmp
mov
add
dec
data16
adc
js
adc
fstpt
in
cmp
add
fsubrl
cld
sbb
mov
add
jge
mov
arpl
add
add
xchg
cmp
add
lret
iret
cmp
add
jb
add
imul
lods
outsb
or
add
scas
add
push
and
add
arpl
mov
testl
mov
arpl
adc
cmpsl
xor
jbe
cwtl
pop
jge
ret
add
push
divb
push
iret
xchg
test
popf
aam
mov
cmp
mov
add
push
mov
sub
add
push
fidivrs
mov
xchg
cmp
push
loope
or
add
inc
movsb
add
les
mov
xchg
imul
jmp
xor
addl
lods
imul
xor
inc
pop
ficoml
movsb
add
xchg
jo
pop
pop
int
jns
aas
jmp
icebp
add
add
mov
pop
out
add
cmp
loopne
inc
movsb
add
jl
add
call
gs
adc
or
add
decb
std
dec
stos
cwtl
sbb
in
add
adc
call
mov
mov
add
mov
add
add
dec
xchg
ss
sbb
or
or
add
add
jecxz
cmc
incb
add
sbb
test
aas
cwtl
cmp
add
sbb
nop
sbb
xchg
fiadds
in
sbb
popf
jecxz
movsl
mov
pop
jno
and
imul
mov
xchg
add
adc
das
adc
add
sbb
pop
cwtd
jecxz
add
je
cmp
add
inc
dec
lcall
addr16
add
fistps
mov
add
add
pusha
sbb
mov
mov
pop
cmc
enter
leave
lods
add
or
call
add
add
add
add
mov
push
sub
add
int3
and
add
push
fs
add
xor
mov
add
cwtl
in
add
add
in
movsl
fsubrs
fwait
mov
xchg
aad
jo
mov
push
stc
xchg
fwait
cwtl
imul
lcall
stos
or
loope
add
aaa
xchg
add
add
xor
int
add
arpl
mov
push
push
call
adcl
fs
adc
add
leave
add
jmp
insl
jns
cmp
cwtl
pusha
lods
add
sbb
mov
nop
test
js
xor
add
adc
lds
cmp
test
add
add
addb
hlt
loopne
adc
std
lahf
int3
dec
jb
inc
adc
push
dec
clc
aad
cmp
push
movsb
add
jnp
cwtl
in
and
outsb
jns
mov
add
lods
add
push
repz
push
lods
aaa
jbe
mul
rclb
push
mov
dec
popa
push
insl
push
dec
pop
lahf
mov
fwait
dec
sub
add
add
jle
xor
xor
fwait
leave
test
js
js
jmp
int3
pop
fs
movsb
add
cmp
jecxz
jns
sbb
scas
sbb
cmc
movsb
add
and
add
shl
mov
in
mov
add
inc
cmp
add
pushf
cmc
sub
imul
lods
add
cmpsb
add
or
add
nop
and
add
push
push
pusha
or
add
cmp
xchg
jbe
call
stos
add
mov
add
mov
shl
xchg
push
add
aad
xchg
jg
out
pop
dec
test
enter
add
add
out
insl
inc
push
insb
inc
sub
add
dec
call
mov
add
adc
lahf
pop
sbb
dec
in
sti
jb
jb
jle
loope
jbe
add
mov
dec
jno
mov
add
add
add
aaa
sahf
sbb
lods
pusha
mov
faddl
push
mov
decl
add
ret
push
dec
jmp
xchg
or
jmp
mov
pop
mov
int3
dec
sub
sub
add
mov
add
push
pop
scas
bound
jns
int
pop
cli
and
add
add
sub
add
add
rorl
fnstsw
les
popf
insl
push
int
pusha
adc
or
add
or
add
add
and
add
fsubs
sbb
dec
pop
dec
adc
jmp
lahf
vmovaps
add
insl
cltd
dec
push
xchg
add
inc
repnz
adc
jnp
xchg
mov
sahf
mov
ret
lcall
cwtl
std
gs
or
out
sub
add
push
add
into
das
mov
add
data16
shlb
add
jbe
adc
test
ret
mov
jb
loop
push
pop
push
add
pop
insb
add
pop
pop
cli
push
add
test
add
mov
scas
cwtl
inc
mov
xchg
and
add
pop
sbb
add
add
add
xchg
pop
imul
hlt
cld
mov
add
add
inc
loope
push
add
lret
enter
add
xchg
jg
push
jbe
sub
add
add
rorb
mov
and
add
movsl
icebp
scas
add
pop
out
xchg
cmp
xor
cmp
mov
add
pop
out
jle
loop
sbb
jo
ljmp
cmp
cmp
add
add
add
pop
push
cmpl
mov
sub
add
add
inc
push
sahf
mov
pop
mov
add
add
sti
cmp
in
fistl
jne
lea
add
dec
mov
sbb
std
mov
jle
into
hlt
push
test
add
add
loop
xchg
in
lahf
in
std
addr16
in
jo
and
add
and
add
test
add
mov
add
sub
add
sub
add
pcmpgtd
mov
dec
mov
add
je
jl
sub
mov
add
out
cwtl
dec
dec
inc
xor
add
les
cmp
pop
or
push
test
add
sub
add
icebp
aaa
lods
add
cmpsl
mov
push
out
mov
pop
out
nop
dec
cmp
push
add
inc
push
fsts
hlt
movsl
mov
add
adc
mov
sub
add
add
dec
dec
and
add
add
outsb
aas
pop
negl
sbb
sub
add
dec
pop
int3
xrelease
add
inc
insl
mov
add
cmpsb
add
sub
add
mov
cmp
imul
out
insl
adc
cmp
outsl
lea
adc
add
call
xchg
pop
inc
add
sarb
push
pop
scas
add
cmp
aad
mov
add
jae
or
add
add
inc
scas
js
xor
mov
and
add
add
pop
test
add
out
sub
movsl
fistpl
nop
cmp
or
add
daa
xchg
sub
add
rorl
imul
cmp
fisttpll
iret
dec
arpl
sbb
jae
jae
jl,pt
mov
fcom
aad
push
add
dec
in
xchg
push
cmp
ja
cmp
xchg
je
and
fldcw
dec
dec
add
cmp
aad
push
cmpl
add
mov
imul
push
add
add
add
je
push
enter
push
data16
inc
jns
orl
addb
mov
add
inc
add
add
scas
add
fs
jle
or
xor
sbb
ret
fisubs
testl
mov
das
add
je,pt
addb
lock
push
xchg
out
lock
sub
inc
sarb
add
mov
out
iret
jge
add
cltd
sub
add
cmc
lock
loopne
add
jae
insb
repnz
push
int3
mov
movsl
insl
idivb
cmp
je
pop
mov
sub
add
or
add
in
inc
adc
dec
jg
jge
ja
mov
cmc
push
inc
mov
imul
add
ss
outsb
leave
lret
ja
push
in
inc
adc
aad
insb
mov
rclb
orl
add
fmull
mov
clc
inc
cltd
pop
stos
add
repz
cmp
add
js
add
pop
jl
mov
add
sarb
jno
dec
repnz
or
add
shlb
add
mov
add
push
inc
pop
lds
mov
mov
add
testl
adc
adc
add
cli
jp
add
mov
insb
jle
add
je
ucomiss
add
pop
dec
out
mov
arpl
and
add
add
push
addb
loopne
xchg
enter
pavgw
pop
jne
addr16
cltd
inc
jmp
aad
sbb
lods
add
lret
test
add
add
or
sub
cmp
ret
loopne
mov
add
jbe
xchg
popa
xor
mov
add
dec
push
ret
icebp
insl
push
add
movsl
mov
jp
push
add
icebp
icebp
adc
pop
and
add
inc
movl
add
iret
sbb
test
xlat
loopne
mov
xor
jae
sahf
xor
or
add
and
add
push
je
sbb
and
arpl
xor
mov
add
shr
sub
add
pop
xchg
mov
ss
inc
orl
jecxz
fsts
stc
cmc
mov
in
test
dec
in
add
enter
add
ja
or
add
out
add
sarl
xor
pop
mov
arpl
add
inc
dec
and
sub
add
cmp
add
push
add
cld
aam
leave
out
into
in
sti
lcall
xchg
add
aam
cmp
push
jp
xor
sbb
or
add
add
add
cmp
movl
cmp
inc
xchg
enter
push
sbb
jns
test
add
cmpsb
add
std
push
sub
add
xchg
out
mov
sub
add
das
outsl
add
add
adc
lret
movswl
imul
push
add
mov
in
daa
push
push
add
inc
push
int3
test
lods
add
hlt
ret
inc
in
mov
inc
imul
push
jge
lds
lds
ja
fdivr
in
ret
outsb
jmp
add
dec
stc
or
add
dec
scas
add
int3
sub
js
scas
pop
mov
add
cli
adc
push
or
add
add
movsl
mov
sub
insl
mov
fwait
jo
inc
mov
mov
inc
and
add
pop
outsl
gs
xchg
and
add
stc
icebp
xor
sub
mov
add
adc
add
loop
sahf
push
add
mov
pop
inc
sub
cmp
mov
movsb
add
push
push
outsl
push
dec
rcrb
cmp
outsb
xor
daa
sub
add
gs
lcall
jg
add
jecxz
sbb
cmp
adc
or
sbb
add
fldt
popa
movsb
add
or
add
adc
sub
add
add
add
in
adc
test
jae
sbb
xor
insb
add
outsb
mov
jg
popa
stc
push
xor
ja
add
adc
jb
sbb
jne
mov
mov
ja
add
pop
pop
sub
add
xchg
cmp
aas
enter
in
mov
pop
aaa
aas
scas
add
fidivs
jg
ret
loope
push
add
xor
pop
or
add
pop
add
pop
xlat
dec
orl
sub
sub
add
cmp
movb
add
add
add
loope
and
sub
add
dec
sbb
pop
inc
add
add
push
mov
xchg
ds
mov
add
cmc
bound
push
add
dec
rcrl
add
sahf
aaa
mov
cwtl
push
xchg
jnp
add
outsb
jne
push
je
cmpsl
sbb
dec
data16
loope
fs
pop
pop
pushf
dec
push
in
and
dec
ret
pop
jmp
add
mov
add
and
add
add
mov
mov
mov
add
mov
repnz
rcrb
pop
xchg
fcomi
jbe
in
addl
push
pop
mov
mov
jge
xor
and
test
add
cmp
mov
repz
add
cmp
mov
add
enter
scas
jp
test
mov
pop
arpl
pop
mov
jae
mov
ss
adc
and
cmp
loop
imul
add
cld
adc
add
lret
les
pop
mov
ljmp
dec
and
add
jmp
hlt
fdivrl
fwait
dec
sbb
pusha
push
inc
addb
mov
aaa
cltd
imul
clc
sub
add
ja
mov
mov
sti
xlat
sbb
dec
xchg
subl
add
aad
jns
sub
add
scas
add
xchg
add
add
rcll
add
mov
xchg
mov
inc
insl
out
xchg
movsl
shl
pop
sbb
xor
add
mov
add
iret
mov
add
push
add
add
push
sub
add
add
rol
xchg
movsl
jo
mov
mov
add
ds
fstpl
add
xor
popa
orl
std
sub
add
inc
xor
add
std
jns
mov
repnz
add
sub
call
je
mov
out
jb
neg
ds
or
add
jle
sldt
add
push
popf
inc
push
and
movsb
add
mov
std
rolb
sub
add
fnstcw
rcr
daa
std
in
stos
inc
sbb
adc
les
call
add
add
adc
out
sarl
add
add
dec
add
jne
repnz
ds
add
lcall
inc
dec
arpl
add
jg
push
stos
xchg
jnp
or
add
jnp
and
add
call
inc
insl
xchg
fs
nop
pop
mov
jg
mov
add
jns
mov
int
aad
test
inc
xchg
leave
mov
cmp
ljmp
icebp
xchg
jo
mov
pop
imul
fdivr
sarb
loopne
int3
jae
or
cmp
icebp
cltd
sbb
add
sbb
sarl
cmp
dec
inc
pop
and
pop
or
mov
ja
add
repz
lea
mov
mov
pop
aaa
cmp
sbb
das
das
cmc
dec
mov
add
add
pop
inc
xchg
test
jl
iret
insl
fsubs
add
mov
ja
xor
add
lock
nop
mov
repnz
jb
aas
jb
xor
nop
cli
mov
add
lds
add
add
dec
jl
ljmp
das
jbe
inc
jmp
inc
lods
add
mov
dec
jae
and
xchg
add
sbb
add
jg
add
cmp
add
int3
fidivrl
and
insb
pop
jb
fstl
fucomp
lahf
push
das
test
add
add
rorb
test
add
add
ret
addb
outsl
add
push
add
or
add
adc
cmpsl
in
add
lahf
push
repz
stc
add
pop
fisttpll
lods
je
pop
popa
fistpl
add
mov
dec
and
adc
pop
flds
popf
fbld
cmp
sarl
dec
stc
cld
xchg
aam
loopne
cltd
cmp
mov
add
mov
mov
add
ja
add
cld
jmp
push
sbb
pop
mov
repnz
imul
pop
jno
add
cmp
stos
add
insl
sbb
rcll
lahf
lcall
out
sbb
sbb
fdivrl
loopne
mov
add
push
aam
ljmp
add
fsubl
clc
push
pop
sub
add
sub
add
sahf
addr16
out
aaa
enter
pop
test
add
notl
repz
les
or
negl
mov
jle
add
psubw
rorl
add
rcr
inc
mov
add
add
je
push
add
cltd
sahf
jp
adc
add
subl
xchg
add
and
add
add
leave
jb
stos
add
scas
add
inc
mov
imul
add
sub
loopne
add
loop
mov
add
mov
add
add
mov
ja
add
xor
jl
adc
add
pop
addr16
adc
addl
adc
adc
cmp
lcall
outsb
jg
imul
jae
into
iret
rcr
in
test
add
rclb
add
clc
fdivrs
xor
add
adc
mov
cli
out
jmp
icebp
add
add
pop
fstpl
test
mov
arpl
fsubr
ds
add
add
movsl
std
and
add
mov
xchg
add
stc
or
add
or
cmp
jno
add
and
add
push
addl
add
mov
adc
add
enter
add
sub
add
add
ret
icebp
push
add
dec
gs
mov
add
arpl
clc
xchg
pop
iret
imul
push
dec
and
cmc
stos
nop
pop
ljmp
mov
add
aad
mov
adc
lcall
imul
add
movsb
add
stos
add
fisttpl
add
mov
add
add
inc
movsl
jbe
test
add
xor
push
lcall
dec
cmp
push
add
adc
in
jecxz
movsb
add
cmp
ret
cmc
pop
add
add
mov
add
pop
and
add
test
add
dec
dec
or
add
push
sbb
sbb
ja
mov
test
inc
mov
xchg
push
cltd
fisttps
inc
lods
adc
add
lret
mov
push
adc
add
sbb
pop
sub
mov
mov
xchg
jl
in
xchg
mov
add
into
add
out
xchg
loop
lods
sub
mov
push
pop
xchg
and
add
fs
xchg
je
lcall
not
mov
add
jnp
inc
rclb
push
cmpsb
add
add
add
adc
icebp
ljmp
xchg
xchg
lret
out
mov
lock
sbb
sbb
or
test
jecxz
mov
jmp
lock
add
iret
and
add
andl
add
push
mov
out
test
mov
xor
rclb
xor
loopne
icebp
push
hlt
sarb
add
je
xchg
leave
sbb
mov
cmpsb
add
mov
add
xchg
and
add
dec
push
jae
int3
mov
mov
add
push
mov
leave
pop
sub
mov
mov
xor
xor
inc
add
add
enter
jecxz
mov
mov
add
daa
inc
or
add
add
push
cmp
out
int3
fiadds
add
inc
xor
inc
push
or
fistpll
sbb
jge
xchg
lret
mov
dec
cmp
popf
cmpsl
out
xor
ret
add
add
mov
add
jae
pop
and
add
add
jne
test
add
fisubrl
fists
or
add
sub
add
sub
add
add
inc
pop
add
push
add
push
fsts
out
or
dec
adc
test
imul
xor
add
movsl
ret
add
pop
aam
cmp
pop
cwtl
pop
lea
mov
leave
je
sbb
scas
clc
and
mov
add
fidivrl
out
mov
addb
ficoml
xchg
add
inc
xchg
push
add
add
dec
stc
rol
addb
jo
rcrl
icebp
and
aam
push
jno
dec
add
lods
scas
js
inc
xlat
mov
add
rcrb
add
add
inc
pop
fbstp
mov
in
stos
add
pop
cwtl
mov
add
jo
shlb
rcrb
and
add
add
ret
imul
stos
add
fwait
sub
add
pop
movsb
add
adcl
addb
leave
sub
add
fisubl
aas
int
add
cltd
or
sbb
xchg
cmpsl
in
cld
and
add
add
mov
fcmovne
mov
xchg
pop
rol
fxsave
add
or
in
mov
xor
add
jmp
jbe
jmp
push
fstpt
mov
or
add
dec
mov
mov
fldln2
pusha
xlat
out
and
icebp
jae
pop
xchg
mov
xchg
or
add
incb
add
pop
or
pop
mov
add
xor
loopne
mov
add
mov
rcrb
xchg
iret
and
add
jne
cld
cli
lock
mov
add
faddp
pusha
insb
int
dec
std
mov
xor
arpl
jnp
std
aam
inc
jmp
or
add
and
add
and
add
add
cmp
sub
out
add
rol
sub
in
jp
fists
dec
xor
cltd
pop
dec
push
mov
repz
add
flds
rcrb
dec
mov
fistl
mov
xor
sbb
xchg
push
add
add
dec
sub
add
pop
test
test
add
push
repnz
dec
gs
ss
jbe
xchg
and
add
add
pop
shlb
lcall
adc
add
test
add
add
add
push
add
add
mov
test
add
stos
add
movsb
add
mov
add
cwtl
mov
add
call
loope
daa
jle
mov
xor
out
jmp
in
dec
xchg
lret
dec
mov
lods
add
in
push
push
pop
sbb
add
jbe
lcall
pop
dec
push
and
add
inc
stc
or
add
add
pop
in
imul
in
pushl
add
repnz
icebp
loop
test
movsl
pop
cmp
push
jb
add
add
stos
pop
mov
pop
imull
push
das
test
add
xor
xor
add
mov
push
mov
add
dec
rcll
arpl
pop
xchg
test
add
jge
stos
cli
and
add
xor
pusha
pop
fstps
cmp
lret
jge
lret
add
add
shll
jp
cmp
add
cmpl
and
add
cmpl
or
add
arpl
inc
sbb
aad
sub
push
popa
add
add
jle
add
dec
and
add
add
adc
gs
lods
add
loop
ss
mov
pop
daa
cmpsb
add
nop
dec
pop
inc
mov
add
add
cli
sbb
add
bound
cltd
and
xchg
add
movsl
mov
inc
lods
insb
adc
cmc
add
add
add
ljmp
data16
add
pop
jp
pop
and
add
aaa
stos
adc
aam
add
lcall
add
mov
add
pop
mov
add
cli
rorb
xchg
sarl
mov
add
inc
mov
inc
inc
sbb
pop
in
rcll
adc
sbb
pop
push
daa
adc
jne
out
pop
in
test
mov
add
add
test
pushf
in
bound
movsl
xor
add
mov
add
out
loop
mov
ret
bound
stos
push
add
add
mov
mov
add
xor
dec
outsl
or
les
test
xchg
xor
and
dec
out
cltd
xchg
xlat
xor
or
add
xor
dec
and
lds
inc
test
add
add
xor
addb
inc
xchg
mov
add
mov
add
cmp
lea
idiv
mov
mov
add
sub
add
add
mov
or
and
add
pop
mov
mov
pusha
cmpsl
mov
inc
enter
push
sarl
add
clc
movzwl
fstl
movsb
add
dec
xchg
mov
add
std
cmpsb
add
sbb
mov
add
mov
je
out
mov
add
lds
fs
add
push
inc
xchg
fs
add
mov
in
add
outsb
pushf
or
add
xor
push
push
and
call
mov
cmp
or
add
ja
dec
cwtl
pop
and
add
xor
sub
or
add
push
jae
inc
aas
cmp
clc
out
xor
dec
jb
dec
scas
add
mov
add
daa
bnd
out
add
sub
and
add
push
add
insl
fldcw
add
nop
leave
mov
add
pushl
fcoml
add
imul
add
xchg
gs
lods
add
push
add
syscall
adc
test
add
pop
inc
xor
adc
jo
out
das
mov
add
sbb
test
add
mov
and
leave
add
add
rcr
add
jae
xor
pop
jecxz
jno
jp
sbb
push
movsb
add
lret
repnz
dec
and
aam
adc
xor
add
add
scas
adc
pop
add
add
add
or
addb
iret
loopne
into
lcall
mov
mov
add
dec
mov
lcall
nop
addb
xlat
inc
mov
pop
mov
pop
stos
add
aas
pop
sub
insl
push
mov
add
push
mov
ja
scas
add
mov
and
add
fidivl
xchg
push
sbb
jo
add
pop
ja
mov
mov
push
pop
out
xor
ret
add
adc
ljmp
push
sbb
int3
push
xchg
dec
mov
aas
pop
imul
add
sbb
jle
jbe
xchg
or
add
popa
sarl
rclb
lcall
dec
adc
divb
fstpt
test
add
xchg
sbb
jle
add
fisubrl
push
sbb
inc
orl
add
push
mov
xchg
test
add
push
add
push
imul
xchg
sub
add
add
push
mov
cmp
push
push
sbb
jg
xchg
add
and
mov
add
inc
mov
repz
add
out
int3
sbb
add
mov
xor
aad
inc
push
repnz
sub
scas
add
ret
xor
add
out
jmp
push
add
dec
out
mov
out
mov
add
push
mov
lds
stos
int
movsl
hlt
push
sub
cmp
movsl
ds
add
xchg
lret
pop
inc
cli
jl
pushf
iret
cld
mov
adc
mov
mov
adc
add
push
add
jle
out
xor
repnz
cmp
test
add
out
push
dec
scas
add
pop
leave
adc
xchg
and
add
or
add
cli
icebp
mov
addb
or
add
leave
inc
add
add
add
sbb
xlat
loope
cmp
cmpsb
add
pop
inc
sbb
push
imul
add
ret
jmp
jns
add
int3
jb
out
enter
xchg
add
sub
lea
add
jl
mov
add
inc
pop
shrl
add
in
cmpsb
add
jb
mov
mov
fwait
push
ja
add
jae
mov
gs
pop
and
add
xchg
imul
aas
aaa
push
add
dec
xlat
in
mov
test
add
add
cmp
and
add
js
shrb
into
into
add
add
lret
hlt
mov
add
add
add
add
mov
or
add
lock
sbb
stos
movsb
add
mov
add
add
test
add
outsb
shlb
mov
pop
bound
mov
add
mov
sub
sbb
stc
xchg
or
sarb
cmp
cmpsl
pop
icebp
cmp
cli
lret
dec
addb
xlat
pop
mov
mov
iretw
sbb
add
je
add
xchg
outsl
mov
add
cli
mov
push
in
sbb
cmp
pop
or
add
scas
push
add
xchg
and
add
add
add
aad
push
test
add
addr16
cmp
add
sbb
mov
mov
addl
sbb
insl
inc
mov
cld
mov
mov
js
lea
out
sub
add
shr
sub
or
jmp
imul
popf
pop
mov
bound
mov
mov
add
pop
js
cmova
add
lcall
xchg
ds
ror
mov
mulb
inc
mov
addl
mov
jmp
or
add
pusha
inc
enter
add
sub
add
cld
and
add
les
add
pop
cmp
pop
xchg
adc
pop
test
add
and
add
add
mov
sub
add
or
add
imul
cwtl
and
jp
cmp
inc
addb
push
out
add
call
push
aad
pop
jg
adc
add
xchg
leave
cmpsl
stos
add
push
add
jo
sbb
pop
xor
push
mov
ss
inc
scas
add
pop
xchg
add
jno
xchg
add
add
add
mov
stos
imul
xchg
push
sub
movsb
add
shlb
jns
mov
cmpl
pop
adc
cwtl
add
into
add
add
add
test
add
add
cmpsl
lods
add
cltd
pop
pop
iret
inc
movsb
add
scas
mov
cmp
into
popa
mov
cld
in
fbld
add
add
gs
jg
and
add
mov
add
test
add
fcmovne
aaa
sbb
add
push
mov
stos
add
popa
sbb
shl
add
sti
pop
mov
jmp
and
sbb
scas
sub
add
add
jecxz
enter
mov
mov
ret
sbb
mov
fidivl
fnstenv
in
sbb
bound
add
push
and
ret
mov
add
pop
clc
data16
mov
les
adc
add
cmp
add
test
dec
push
enter
addb
lea
push
lock
add
mov
jnp
add
add
mov
je
pop
mov
push
das
nop
test
jp
addr16
lea
and
rcll
ficomps
xor
add
mov
in
sub
add
movsl
je
push
call
adc
xor
cmp
in
mov
push
pop
mov
dec
or
add
andl
enter
sbb
repz
add
jnp
into
test
add
add
bound
sbb
movsb
add
ljmp
rcll
push
je
add
add
add
add
mov
pop
out
and
ret
daa
cmp
aas
sarl
xchg
addr16
in
xor
dec
cmp
add
and
add
mov
add
cld
lods
push
outsb
sarb
xchg
fstpt
add
sub
add
sbb
dec
xchg
push
out
fildl
movsb
add
push
or
xchg
inc
push
or
add
cmpsl
mov
dec
jl
cmp
sahf
ja
and
add
icebp
sub
add
outsl
mov
add
dec
scas
lock
and
cmp
call
mov
add
add
testb
call
add
pop
adc
shlb
rcl
ja
mov
push
scas
push
add
shl
pop
lret
mov
cld
hlt
mov
xchg
bound
add
pop
test
add
jle
sub
and
add
lcall
or
add
add
test
add
hlt
stc
mov
mov
dec
pop
cmp
add
out
cli
pop
xor
daa
lahf
outsb
testb
cmp
sbb
stos
add
add
jl
mov
in
aas
or
add
add
cmp
add
mov
add
push
push
sub
cmp
add
push
pushw
cmp
inc
mov
dec
rorl
bound
ret
push
jne
pop
outsl
inc
sti
pop
push
push
dec
les
push
mov
dec
pop
inc
call
add
adc
sbb
imul
xor
jl
bound
cmp
mov
add
lods
outsb
and
add
cmp
sub
mov
ret
jbe
ret
push
add
sbb
inc
cmc
sbb
test
shll
insl
mov
mov
stos
add
rep
daa
push
insl
arpl
cli
shll
add
sbb
mov
ds
out
pop
xchg
or
add
aaa
out
push
sbb
add
adc
dec
ds
dec
and
add
gs
mov
or
add
jle
addb
mov
mov
push
dec
sub
and
jp
icebp
inc
jnp
test
add
loop
cmp
test
gs
shll
mov
sbb
jmp
pop
dec
or
pusha
xchg
xor
sub
stc
iret
movsl
sub
fstpl
sbb
data16
mov
xor
in
jecxz
pop
mov
fisttps
adc
add
push
adc
lret
pusha
mov
push
adcl
add
shrb
callw
test
lcall
cmp
addb
mov
popa
stos
fucom
or
add
jge
push
test
add
pop
add
add
inc
mov
add
mov
nop
or
adc
add
pushf
outsb
mov
sub
add
in
addr16
jge
dec
mov
cmp
sbb
adc
gs
pop
je
loop
nop
stos
add
mov
add
adc
shl
pop
aam
mov
fidivrs
js
mov
add
pop
mov
shr
ss
add
push
add
mov
add
mov
outsb
fstpl
mov
push
and
add
add
or
leave
ret
adc
cltd
out
add
pmuludq
sbb
add
mov
xchg
xchg
loope
lcall
dec
xor
mov
mov
inc
add
add
das
out
in
cmp
mov
add
mov
add
arpl
or
cmp
shlb
inc
fmuls
push
movsl
mov
inc
pop
lahf
push
pop
cli
jmp
sbb
add
add
dec
cmp
add
jae
or
mov
mov
add
add
mov
pop
cmpsl
push
add
in
mov
jge
or
and
repz
sub
add
jo
jl
je
or
add
pop
into
arpl
dec
sahf
loop
lods
add
push
mov
sbb
pop
mov
cwtl
fstpt
pop
std
mov
sbb
xor
lahf
dec
dec
out
pop
stos
add
pop
std
inc
push
rcr
mov
mov
add
inc
negl
pop
in
mov
sub
jp
sti
ds
and
add
cmp
sub
add
mov
icebp
dec
fs
inc
inc
xchg
xor
mov
int3
mov
or
add
jae
xchg
ret
add
add
add
mov
xlat
mov
xor
push
mov
mov
pop
test
add
jp
push
push
jae
mov
mov
fsubrl
insb
pop
addb
mov
xor
push
sub
add
sub
add
add
scas
lahf
add
int
dec
cmp
in
idivb
fldl
push
add
mov
adc
shll
mov
inc
push
add
out
std
add
inc
test
dec
cmp
or
add
lock
add
add
add
add
je
add
fmuls
sub
addb
push
mov
fisubrl
add
dec
test
sbb
xor
jne
popa
xchg
add
pop
imul
add
addb
jb
cmp
pusha
push
mov
mov
inc
or
sbb
inc
adc
pop
cmp
mov
pop
jb
and
add
and
cmp
mov
sarl
out
lcall
pop
mov
pop
inc
in
or
mov
add
add
dec
shll
addr16
pop
or
add
push
xchg
loope
divb
add
ljmp
aam
add
or
jg
gs
dec
mov
add
enter
test
adc
push
out
and
add
jmp
inc
test
add
or
add
cmp
jne
add
mov
xor
jge
add
test
add
lcall
add
cmc
in
data16
or
add
mov
data16
mov
dec
mov
pop
lret
lock
add
sbb
enter
xor
mov
add
cmp
iret
jmp
mov
hlt
dec
jo
add
shlb
jmp
add
add
daa
addb
jb
sti
inc
mov
clc
test
pusha
xchg
sahf
out
jb
and
add
cmpsb
add
xchg
jg
push
popl
mov
sbb
dec
stos
add
shll
mov
add
addb
int3
mov
adc
test
add
pop
arpl
popa
sub
add
mov
sbb
ja
mov
scas
add
sub
mov
add
mov
add
add
sub
add
mov
addb
outsb
ljmp
add
fadd
xor
pop
fisttps
out
xchg
add
adc
add
je
sub
add
mov
cwtl
sbb
add
fwait
xor
inc
pushf
pusha
fdivl
in
fadd
mov
pop
pop
out
popa
pop
popa
call
push
add
fildl
add
add
fsubrs
cld
or
add
movsb
add
cld
jecxz
fisubrs
add
pusha
mov
add
stos
add
loopne
outsb
sbb
xor
add
cmp
sub
add
call
add
int3
cmp
or
add
mov
push
push
bound
add
xlat
enter
add
pop
mov
add
xchg
adc
leave
xor
add
xchg
add
xchg
push
push
add
or
add
push
or
add
add
pop
mov
adc
lods
jp
mov
add
add
jne
add
push
adcl
add
sti
xchg
add
add
cmpsl
scas
add
dec
sbb
je
arpl
or
aaa
dec
dec
cli
xor
fs
lahf
pushf
repz
lock
add
add
lcall
in
daa
lods
add
ret
lcall
push
or
add
jecxz
mov
add
test
add
add
add
stos
add
into
push
xor
jno
cmp
mov
push
int3
incl
add
push
push
mov
icebp
pop
cmc
ds
cmp
mov
sahf
xchg
push
fadds
add
sub
add
inc
and
add
add
cmp
add
add
adc
push
mov
push
stos
cmpl
mov
in
cmpsl
cmp
divl
add
add
add
xor
mov
add
push
add
add
enter
ljmp
jnp
pop
sub
add
add
int
add
inc
mov
stc
js
icebp
pop
mov
mov
gs
lds
jge
pusha
into
mov
mov
ret
sbb
adc
inc
addl
jg
xorl
xor
add
xor
stc
mov
add
push
jbe
lods
pop
pop
outsb
xchg
jge
in
and
add
fisubrl
and
add
out
fsubrs
out
push
mov
xor
push
add
lahf
jbe
xor
xor
adc
xchg
add
add
test
add
cld
and
clc
and
add
nop
dec
into
dec
leave
jnp
sbb
stos
enter
or
loop
add
jp
inc
xchg
out
adc
lock
push
add
testb
adc
push
add
in
popf
xchg
jno
and
push
xchg
sub
push
mov
xor
push
sbb
pop
mov
dec
fistpll
add
hlt
int3
int3
shll
mov
add
add
fs
sub
adc
and
add
scas
xor
out
jl
mov
add
pop
test
add
add
in
mov
loopne
pop
repnz
jbe
add
mov
push
pop
call
push
fnstcw
add
inc
and
add
sub
add
dec
xor
adc
adc
push
mov
xchg
push
add
or
lds
lods
add
aam
in
or
add
add
add
jmp
dec
push
add
pop
lea
cmpsb
add
scas
add
mov
mov
add
loop
in
ret
mov
pop
fs
adc
leave
or
mov
mov
dec
add
push
add
mov
test
add
addb
jle
sub
sub
inc
sub
add
mov
inc
into
icebp
add
push
adc
add
add
aas
jnp
les
dec
inc
mov
add
sbb
ss
add
rcrb
mov
lds
xchg
add
int3
and
add
add
lret
xchg
loope
add
call
dec
mov
xor
mov
fimull
bound
mov
add
xchg
mov
add
hlt
decl
pop
jae
add
das
push
out
and
add
add
push
add
inc
icebp
xor
mov
add
add
dec
cmp
stos
add
cmpsb
add
movsl
xchg
push
sub
add
sahf
or
add
cld
mov
mov
nop
fsubrl
aas
ret
lcall
out
arpl
xchg
stos
add
adc
aad
mov
add
mov
add
sub
add
insb
loopne
mov
lret
mov
add
xchg
les
push
sbb
push
flds
pushf
cmp
mov
mov
rorb
add
pushf
sbb
and
add
shr
add
sub
add
ret
sub
lcall
xorl
jmp
sub
add
and
aaa
jne
sbb
fistps
xor
loop
add
js
lock
dec
imul
mov
addr16
add
lret
cld
sub
add
in
and
add
add
data16
rcr
pop
lds
push
adc
xchg
das
xlat
into
loop
adc
ret
sahf
add
add
pushf
or
add
add
cmc
or
add
sbb
in
add
sub
in
dec
fsub
insb
insb
inc
and
add
push
add
vmovntps
adc
lret
jno
and
add
fwait
mov
inc
fwait
inc
dec
lods
add
cmpsl
jecxz
push
les
lret
shl
lods
add
movsb
add
jb
test
add
fcmovbe
pop
or
add
ja
pop
lea
mov
add
mov
jg
insb
aam
jnp
push
fwait
mov
mov
add
mov
add
clc
add
adc
sahf
add
add
xchg
in
push
add
cmp
call
add
fwait
insb
loope
add
incb
addb
mov
add
add
add
add
or
add
add
add
aaa
test
jb
push
ss
mov
add
inc
punpckhdq
add
or
add
add
or
add
add
test
add
std
arpl
push
dec
shr
xchg
or
add
lahf
sub
lahf
outsb
jmp
add
std
lock
add
fs
mov
pop
adc
fldl
adc
insl
adc
add
leave
addb
mov
xchg
add
ss
xchg
fistl
dec
adc
mov
mov
ljmp
or
add
push
add
or
add
add
push
mov
add
nop
popf
out
push
jae
xchg
cmp
in
shrb
add
pop
incl
loopne
xchg
add
add
popf
sub
add
clc
or
scas
add
push
jb
sub
add
jbe
test
mov
add
add
cmp
mov
add
repz
add
aaa
fwait
int
dec
inc
pop
add
add
and
add
enter
mov
jmp
sbb
ffree
or
add
sub
mov
imul
mov
ret
xor
or
mov
jecxz
add
cld
cmpsb
add
repnz
dec
ljmp
cmpsl
cli
mov
mov
ret
jp
cmp
add
inc
add
add
xor
or
add
mov
cmpsb
add
or
add
add
fsub
cmpsl
and
xchg
fidivrs
add
inc
mov
stc
mov
sub
add
ficoml
lcall
add
imul
inc
push
mov
lods
add
add
mov
add
mov
data16
aam
and
jecxz
add
daa
lods
stos
xor
test
cmp
pop
jns
xor
flds
imul
sahf
insl
testb
add
jb
inc
lret
push
add
mov
add
mov
jl
push
inc
and
add
add
xchg
mov
mov
movsl
push
and
add
push
xor
popf
out
movsb
add
jg
outsb
dec
push
sbb
imul
enter
out
jo
cmp
addb
xchg
jns
ss
xor
cld
les
mov
add
fcmove
sub
out
aas
or
mov
cltd
cmp
add
add
xchg
mov
and
add
insb
rcl
and
add
add
sbb
mov
dec
sub
imul
dec
cli
loopne
inc
cmp
hlt
add
add
in
test
dec
push
mov
add
pmullw
sub
add
in
add
popf
pop
or
add
jg
insl
sahf
test
mov
pop
push
add
loop
xchg
add
jno
mov
in
bound
jge
add
shrb
inc
in
or
sub
cmp
inc
or
add
add
cmp
jno
mov
in
push
out
add
inc
pand
rcrl
lds
or
les
add
dec
sarb
push
add
cli
cmp
cld
nop
les
jb
jnp
jmp
xchg
mov
arpl
add
adc
or
lret
mov
add
mov
aas
js
movsl
sub
add
popf
enter
shr
pop
push
add
loopne
int
negb
iret
rclb
add
mov
jns
add
out
hlt
mov
movsb
add
push
jecxz
inc
addb
imul
add
fstpt
ret
inc
mov
and
add
mov
add
add
sbb
popa
rcr
jo
in
or
add
sbb
ret
add
mov
pop
push
dec
mov
jl
adc
test
add
xchg
insl
addb
jmp
dec
test
add
add
clc
mov
add
add
test
add
imulb
cltd
enter
std
cltd
pop
sti
jl
pop
imulb
inc
sub
add
adc
out
movsb
add
sbb
and
inc
shrb
inc
xor
cld
sbb
fwait
addb
sti
movaps
add
add
loop
imulw
add
hlt
je
in
pop
mov
add
pop
in
cmp
mov
add
push
int
sahf
mov
add
fcomps
insl
inc
or
enter
jp
iret
test
add
add
in
clc
scas
mov
jge
insl
adc
loope
int3
int
out
pop
cmp
add
add
add
int3
cmpsb
add
dec
dec
shlb
sub
add
icebp
cwtl
mov
pop
cld
movsb
add
in
shr
dec
cmc
pop
push
jp
imul
psllw
cmp
lret
add
pop
xchg
jns
js
loop
fnstcw
cmc
inc
mov
mov
jmp
outsl
cmpsl
jne
add
pop
jecxz
push
test
or
add
jle
movsl
fwait
into
aas
cld
cmp
sbb
lods
addb
rolb
jmp
and
hlt
pop
mov
add
add
jl
test
js
mov
ucomiss
add
rolb
je
add
pop
jg
add
add
add
aas
in
xlat
mov
and
add
bound
sbb
popf
ret
add
mov
rorb
add
ret
add
dec
dec
lds
pop
jmp
jp
bound
les
push
out
fists
add
push
mov
jae
jl
repz
push
call
add
les
add
push
rclb
fcomip
dec
push
mov
sbb
cmp
fwait
jle
mov
inc
loopne
or
add
mov
arpl
sub
add
lods
add
out
enter
add
cmpsl
add
add
cmp
pop
xchg
hlt
xor
cmc
cld
fbld
sbb
inc
sbb
mov
lods
add
mov
and
ss
repz
movsl
xlat
inc
pushf
sbb
and
add
add
repnz
pop
in
add
push
sbb
and
add
add
sahf
jae
cmp
rcrb
clc
add
add
leave
xlat
lods
add
les
jo
mov
popl
add
jl
hlt
sub
add
or
add
jae
sub
add
enter
add
add
add
jae,pt
xlat
and
add
inc
pop
adc
inc
jge
or
add
ljmp
add
ss
add
add
int
imul
mov
jns
jo
flds
mov
or
add
stos
inc
das
popa
testl
push
xlat
outsb
int3
into
pop
cmp
add
shr
in
jae
mov
add
icebp
mov
popa
popa
ret
fst
fdivrl
sbb
mov
push
repnz
add
add
pusha
test
daa
pop
movsl
jno
imul
pop
jl
pop
insb
mov
mov
test
in
inc
mov
add
add
add
notb
clc
jg
in
fists
arpl
sti
pop
jmp
jo
je
add
jecxz
lret
adc
add
xor
leave
adc
cmp
and
add
and
add
or
add
test
add
mov
pop
int3
gs
add
inc
shl
add
cmp
enter
mov
push
into
fwait
push
xchg
rcll
or
lret
das
sbb
xor
popf
rcrl
add
cmp
mov
add
mov
jnp
pop
daa
mov
add
mov
cwtl
fwait
jp
mov
add
xchg
scas
leave
cmc
in
xor
lods
cmpsb
add
jnp
pop
enter
add
xchg
fadds
jno
insl
add
test
add
out
inc
xchg
mov
or
add
shll
add
addb
and
add
inc
daa
cmp
cwtl
aam
inc
call
movsl
ret
mov
add
in
call
add
and
sbb
mov
xor
das
pop
bnd
push
in
out
pop
loopne
repnz
stos
sahf
mov
lcall
inc
cmpsb
add
in
test
mov
add
jb
jne
xchg
mov
cmpsb
add
dec
dec
ret
insl
fstp
nop
aaa
cltd
jmp
shlb
add
xor
add
cmp
inc
push
repz
mov
xlat
sarb
decl
push
push
frstor
cld
daa
dec
pop
inc
xchg
pop
inc
push
add
add
add
outsb
mov
sub
add
xor
sub
add
repnz
dec
aam
and
jb
add
jg
lret
or
mov
or
add
lahf
xchg
pop
mov
add
add
loope
add
cmp
sub
mov
add
adc
add
push
imul
cmpsl
jno
popa
pop
pop
insl
mov
test
push
std
lret
mov
pop
hlt
ret
add
bound
or
subl
outsl
and
lret
adc
add
add
add
out
test
jns
add
sub
add
ret
sbb
cltd
mov
mov
add
seta
cmp
mov
add
dec
stos
mov
add
dec
addb
lods
lahf
lods
mov
add
cmp
fwait
scas
add
stc
cmp
das
stc
mov
mov
shl
mov
or
imul
mov
xchg
add
add
adc
sub
add
and
inc
adc
add
mov
inc
mov
add
sbb
addb
xor
adc
imul
add
xor
mov
add
scas
add
mov
add
xor
in
sbb
sub
lods
sub
repnz
add
sub
add
mov
in
inc
and
add
mov
add
aad
mov
gs
lahf
jecxz
ret
add
cmp
jg
xchg
add
add
xlat
jp
fstpl
stos
add
stos
add
mov
xchg
mov
pop
adc
shlb
dec
clc
insl
inc
lock
jbe
jl
inc
call
in
pop
push
add
fnstenv
add
pop
lds
pop
cmc
sub
add
testl
add
and
add
mov
cltd
add
add
push
add
add
xchg
jae
push
ljmp
cmp
push
lds
fdivr
sbb
add
inc
xor
mov
sub
add
push
sub
add
adc
xor
ror
or
add
mov
fsubrs
xor
mov
imul
fisttpl
jbe
jne
lods
add
dec
xor
jg
add
fwait
add
jmp
mov
negl
lods
out
mov
add
scas
stos
add
and
add
dec
aam
mov
hlt
leave
sub
lea
and
add
shlb
add
out
jmp
pop
addb
fcoml
add
sbb
push
add
push
push
inc
outsl
pop
lock
ss
scas
add
and
add
ret
adc
add
sarb
mov
add
xor
fnstenv
add
cmpsb
add
arpl
xchg
stc
pop
xlat
xor
stos
add
sbb
mov
adc
xchg
sbb
xchg
add
pop
out
out
push
dec
xor
les
inc
test
add
xchg
dec
cwtl
mov
arpl
add
or
add
inc
test
adc
fdivrp
xor
in
add
add
bound
test
add
or
add
adc
dec
in
add
cmpsb
add
ret
add
and
leave
ret
popa
fcmovu
sub
add
xor
mov
test
add
sbb
test
add
mov
add
add
mov
outsb
and
adc
add
rorl
or
add
lahf
shl
addb
xor
xchg
add
add
add
mov
add
mov
mov
add
addb
adc
sub
xor
loopne
rcrl
jno
pop
mov
add
fs
cmp
aad
iret
fwait
cmpsb
add
and
and
add
pop
fisubrl
push
inc
int3
xor
xor
pop
test
or
add
sbb
pop
in
jns
inc
int
mov
add
xchg
sbb
pop
jns
pushf
mov
lds
inc
and
test
add
add
shrb
loope
aam
add
push
add
mov
cmc
sbb
add
jae
fs
jnp
movsl
jecxz
fwait
lcall
sub
add
iret
leave
sbb
scas
add
cmp
loop
add
cli
xchg
sub
inc
dec
bound
add
imul
test
add
cmp
loopne
xchg
scas
add
mov
in
xchg
lock
fcoml
lcallw
xchg
adc
add
mov
inc
int3
ds
pushf
or
add
jae
lcall
adc
add
push
xor
jb
inc
inc
inc
jl
sarb
pop
stc
push
jle
push
jecxz
inc
sub
add
hlt
mov
hlt
ret
addb
mov
cltd
into
fwait
aas
cltd
sub
add
std
and
add
add
xchg
or
add
add
mov
jl
cltd
adc
add
mov
in
mov
add
push
add
fucomip
or
call
sub
add
or
add
adc
add
add
or
add
mov
mov
push
add
arpl
stc
mov
add
add
scas
imul
jb
shlb
pop
add
dec
enter
pop
pop
pop
xor
fidivrl
cmc
xchg
sbb
lret
lods
mov
add
push
sub
mov
jge
subl
dec
jl
or
adc
aad
pop
xchg
das
lahf
push
add
mov
add
movsb
add
xor
icebp
test
add
add
lods
add
add
sbb
dec
cmpsl
ljmp
add
push
add
imul
pop
lods
cmp
pop
push
cmpsl
out
jecxz
xchg
ja
add
adc
add
add
call
add
mov
in
gs
pop
add
punpckhwd
mov
inc
jb
sub
add
cli
push
in
add
push
jns
dec
lock
mov
xor
add
imulb
rcrl
mov
mov
add
popa
cmpsl
pop
jno
add
pop
and
pop
dec
and
add
mov
add
ljmp
cmp
add
test
add
out
lds
cli
dec
and
add
std
push
cltd
mov
add
stc
icebp
push
mov
add
add
das
inc
jecxz
loope
cmp
adc
nop
lds
pop
mov
add
fcmovbe
outsb
add
or
add
add
jge
add
testl
push
xchg
add
mov
mov
xlat
jg
sarl
sub
add
jge
mov
dec
or
cmp
cmp
cmp
or
mov
jecxz
add
add
in
popa
adc
stos
add
addb
jo
leave
push
add
mov
push
add
test
add
cltd
mov
adcl
add
inc
mov
add
out
jge
ja
out
add
imul
add
repz
add
fdiv
fsubs
mov
or
lods
add
addb
fadd
inc
fistps
add
mov
add
outsl
mov
add
enter
add
sub
add
sbb
data16
cmpsb
add
jae
add
iret
add
add
lret
test
dec
fcompl
adc
je
out
xor
or
add
jmp
xchg
xor
sbb
jbe
test
test
xchg
scas
popl
jae
and
add
dec
repnz
add
mov
dec
rolb
inc
jb
mov
add
add
imul
add
jmp
pop
mov
jno
add
lds
nop
xor
xchg
arpl
dec
mov
push
push
loop
jns
add
dec
push
mov
add
dec
sbb
push
add
add
add
push
popf
and
add
xor
xlat
js
add
jecxz
ljmp
inc
jge
dec
sahf
fistps
mov
sub
add
xchg
add
pop
and
add
lock
pop
lcall
sti
in
dec
rorl
add
add
pop
jb
daa
jp
push
out
loop
push
adc
out
add
sub
add
sub
xchg
aas
or
push
pop
pop
pusha
push
outsb
iret
addb
scas
inc
ljmp
aad
lcall
add
dec
inc
sti
xor
jb
add
xchg
shl
ret
lcall
add
sbb
cmp
sub
idivb
jl
cmpl
mov
in
idivb
lds
add
into
lea
les
add
jl
push
sbb
add
rorl
lock
fistps
neg
sub
add
fcoms
dec
vmovapd
cmpsl
or
aad
in
inc
lcall
in
outsl
push
neg
out
pop
dec
lahf
jb
jmp
divb
icebp
jmp
test
add
test
add
mov
or
add
icebp
mulb
mov
add
xchg
add
je
cwtl
sbb
rcr
and
add
movsb
add
mov
add
add
imul
jns
sbb
jb
inc
or
add
mov
add
fbld
add
sbb
add
lock
adc
sti
stc
and
add
add
pushf
jnp
add
or
add
mov
addb
ljmp
add
sub
ja
sbbl
fisubrs
daa
in
add
add
add
pushf
js
add
dec
mov
add
add
mov
insl
sarb
je
mov
test
jl
stos
add
clc
push
jle
adc
arpl
hlt
jmp
mov
xchg
jg
add
add
mov
add
xor
mov
fcmovnb
and
add
xor
mov
mov
jb
into
mov
dec
xchg
sti
call
xor
add
into
scas
cwtl
jg
add
push
push
add
add
ret
xchg
jmp
loop
push
add
mov
xor
add
mov
add
ds
add
mov
add
shrl
dec
jmp
popf
je
pop
dec
xchg
ret
repz
sub
add
test
add
pop
into
dec
iret
in
xor
out
enter
rclb
add
dec
jne
out
dec
dec
jae
lcall
add
or
and
sbb
pop
push
scas
adc
nop
sarl
dec
pop
mov
pop
xor
sti
les
stc
repz
inc
stos
add
inc
pusha
hlt
test
fisttps
add
add
add
adc
pop
addb
pushf
mov
add
stos
inc
mov
dec
pop
out
cmp
add
jp
xchg
pop
aad
push
out
jne
sub
add
add
jp
stos
std
out
data16
cli
mov
add
sub
dec
mov
std
into
cmp
jb
addl
stos
add
cli
fisubs
and
mov
inc
lahf
pop
and
add
or
add
into
sahf
addr16
xchg
add
xor
in
mov
inc
into
xchg
xchg
dec
jecxz
icebp
lahf
push
arpl
fs
pop
shll
add
mov
xchg
inc
fimull
cmp
enter
add
mov
mov
mov
aas
lock
aam
add
or
add
out
jnp
pop
adc
inc
out
movsb
add
test
add
sbb
insl
push
aam
leave
cld
mov
adc
cmp
fwait
aaa
cmpsb
add
ljmp
add
in
add
add
ror
imul
add
repz
add
sbb
addr16
mov
lret
mov
movsl
or
out
pop
addb
mov
ja
rcrl
ret
xor
push
pop
fnstenv
int
and
out
cwtl
popf
std
outsl
stos
mov
add
xchg
add
xchg
add
adc
xor
cmp
or
add
sahf
sub
add
add
mov
xor
add
add
add
sub
add
push
pop
mov
and
int
xchg
add
add
sub
jl
inc
dec
testb
shrl
fmull
xor
xchg
mov
add
ds
aas
nop
gs
incl
inc
xchg
push
mov
mov
jg
cmp
mov
das
mov
mov
add
nop
jae
cmp
lcall
sahf
je
addb
mov
sub
loopne
or
aas
test
add
push
and
jnp
xchg
ret
pop
in
fwait
adc
call
pop
loop
in
push
jl
out
or
add
sbb
scas
xor
movsl
je
add
inc
mov
rolb
cmc
ret
mov
pop
push
add
sbb
data16
mov
add
inc
sbb
inc
push
jb
or
add
or
add
xchg
int
xchg
jbe
add
adc
xor
dec
in
pop
inc
shl
add
push
add
add
add
cmpsb
add
test
add
fiaddl
dec
outsl
fldt
shlb
xor
add
add
jecxz,pt
jecxz
flds
fildll
add
fwait
jo
add
xchg
xchg
jge
mov
add
add
fs
int
and
add
add
add
add
add
testl
xchg
inc
add
add
add
jmp
les
cmp
jb
sbb
add
or
add
repnz
add
push
sub
add
jno
scas
add
movsl
pop
cmp
cmp
addb
pop
cltd
test
adc
mov
push
in
jmp
xor
jecxz
cmpsb
add
fidivl
inc
mov
adc
inc
popf
cmp
mov
inc
mov
ret
sub
dec
xor
jb
pop
add
add
out
pop
ret
sbbl
scas
mov
and
xchg
aad
leave
fucomp
adc
jle
mov
jo
mov
jge
push
push
or
cld
add
subl
out
dec
jg
mov
sub
add
jl
mov
repz
add
xchg
aaa
aaa
outsb
cld
and
add
loopne
add
sahf
jmp
xchg
add
in
pop
in
mov
popa
push
sub
add
repnz
jge
jbe
mov
add
add
add
add
sbb
cmpsl
nop
jb
xchg
inc
add
sub
dec
mov
incb
push
imul
mov
add
jo
sarl
mov
add
bound
add
push
and
pop
in
add
nop
pushf
add
das
dec
sub
xchg
add
fnstcw
mov
xor
add
lahf
sbb
add
dec
scas
add
push
add
shll
pop
pop
jecxz
sbb
xchg
or
add
and
daa
pop
dec
jge
mov
jo
mov
add
stc
inc
add
dec
sbb
jne
out
sarb
add
and
jbe
fcomi
movsb
add
push
imul
aaa
pop
xor
add
sub
add
jmp
dec
stos
in
stos
clc
inc
daa
lcall
add
testb
add
test
addb
xchg
out
aas
jg
test
mov
int3
scas
cmp
inc
push
cmp
xchg
stos
add
stos
inc
xor
nop
pop
xlat
mov
mov
add
xor
dec
cltd
or
add
in
push
leave
mov
add
mov
add
call
add
adcl
pop
pop
pop
mov
jmp
push
mov
sub
add
test
add
add
int3
jo
mov
add
shrw
inc
imul
cwtl
loopne
jne
rcrb
add
add
rolb
mov
add
add
add
add
push
stos
add
xchg
jecxz
cmp
add
jl
ret
or
add
mov
push
add
lretw
dec
loop
add
rcl
add
add
cmc
mov
loope
sub
roll
add
dec
enter
add
loope
sbb
adc
aam
push
xorl
or
add
cmp
outsb
push
negb
mov
add
daa
pusha
xchg
cmp
rcrb
lcall
mov
add
add
jo
xor
rorl
mov
add
sub
add
add
sarb
xor
dec
shrb
add
rorl
shld
jl
lods
add
mov
add
adc
das
xor
xor
adc
add
xor
sti
inc
sub
std
push
cltd
cmp
addb
mov
jbe
inc
mov
add
movsb
add
mov
and
mov
iret
sbb
mov
fucomip
jp
lea
dec
mov
icebp
int
iret
js
mov
int
xchg
and
add
je
jmp
cmp
sub
add
adc
adc
add
cmpsb
add
pushf
mov
inc
ljmp
jae
add
rclb
shrb
add
jbe
sti
inc
scas
add
fwait
in
movsl
sub
add
ss
mov
and
test
out
adc
add
test
and
add
dec
mov
push
mov
ss
fnstcw
filds
push
xor
dec
mov
add
pop
stos
mov
inc
int
das
xchg
lods
add
push
xchg
xor
out
add
cmp
jno
int3
sarl
cmpl
ret
add
loope
xchg
test
add
movsb
add
loope
and
push
testl
dec
or
add
sahf
or
mov
flds
leave
inc
push
fndisi(8087
pushf
fwait
inc
aaa
push
adc
add
pop
sub
add
movl
dec
js
in
mov
push
pop
add
push
dec
and
daa
sub
hlt
ret
frstor
add
mov
mov
aaa
fldt
add
sbb
adc
shl
shrd
jo
jmp
add
lahf
push
push
add
imul
std
and
add
add
xchg
add
mov
inc
data16
xor
pop
ss
jecxz
fmuls
je
mov
add
add
rol
sahf
add
add
in
ret
sti
outsb
add
add
sub
add
xor
cmp
sub
mov
cmpsb
add
xchg
jae
jg
xchg
cmc
jecxz
shlb
add
pop
sbb
rcrl
in
and
add
add
add
inc
neg
sbb
les
mov
sbb
add
ret
adc
in
push
add
sbb
add
sub
pop
popf
mov
mov
ror
adc
add
jnp
adc
sbb
add
scas
add
stos
pop
dec
mov
mulb
adc
adc
nop
xlat
int3
cli
dec
cli
jns
adc
cmpsl
int3
xchg
or
add
add
shrl
add
in
add
mov
xchg
add
add
aam
add
mov
repz
pop
lcall
add
sbb
psubsw
leave
xchg
cli
lcall
add
sub
add
loopne
addb
mov
stos
add
cmpsl
addb
daa
mov
add
mov
out
loopne
sub
cmp
iret
fisubl
add
add
add
dec
lret
add
add
sbb
pop
lret
push
lret
lcall
hlt
fcoml
test
add
xor
divl
sub
add
add
dec
cmc
push
pop
push
int
or
add
mov
nop
rolb
das
aad
add
pop
cmpsb
add
jno
in
or
add
push
insb
sub
shl
push
cmpsl
push
sub
add
jno
and
add
add
loopne
add
shll
addb
or
mov
add
pop
jno
mov
sub
ret
mov
xchg
add
repz
ljmp
add
cltd
in
stos
jb,pt
lret
pop
mov
dec
xor
add
daa
or
xor
jecxz
rcll
add
cmp
sahf
xor
push
and
add
add
sbb
lock
mov
outsl
xchg
pop
addb
out
inc
sub
add
mov
adc
mov
mov
or
add
dec
push
mov
lcall
push
sbb
shrl
add
push
adc
into
in
xchg
add
add
out
iret
adc
jbe
add
aaa
call
je
int3
movsl
push
pop
sbb
les
loope
jne
or
mov
outsl
std
and
add
inc
mov
mov
mov
pop
addl
mov
jb
xor
sub
or
add
addl
add
pop
cli
xor
mov
pop
push
addb
aad
add
sbb
or
inc
int
mov
lret
push
pop
shrl
pusha
or
add
ret
clc
pop
aas
xor
ficoms
add
mov
xchg
add
or
add
rcl
push
insl
adc
ljmp
lea
add
frstor
mov
pushf
int3
sbb
test
push
addl
inc
sub
add
add
cmc
fsubs
or
jae
insl
hlt
and
add
xlat
mov
and
mov
mov
mov
add
lret
add
push
cli
dec
decb
add
das
insb
ror
bound
pusha
mov
add
in
mov
mov
add
out
pop
mov
add
ss
aas
mov
push
add
lock
data16
pop
lods
add
add
imul
insl
pop
mov
sub
add
lahf
je
mov
jnp
push
cltd
xchg
sahf
lcall
add
stc
fld
lds
add
pop
arpl
add
lcall
jmp
lcall
mov
xchg
mov
mov
push
pop
fwait
lret
add
add
leave
mov
dec
add
shll
or
out
and
movsb
add
add
mov
xchg
inc
adc
add
paddd
stos
add
xor
negb
push
add
fisttps
shr
or
push
inc
lret
sahf
lea
add
cmc
xchg
fs
fsubrp
leave
mov
xchg
and
add
popa
add
mov
add
add
adc
frndint
sbb
add
xchg
add
sub
addb
jne
mov
stos
add
and
add
addb
sbb
mov
insb
stc
std
shrb
push
cmp
add
sub
jno
xlat
adc
fdivl
add
int
movsl
inc
clc
pop
test
add
fmuls
mov
add
xlat
sub
adc
mov
pop
xor
test
add
or
add
add
sub
add
lds
arpl
sar
jb
cmp
add
js
add
dec
addb
insb
insb
sbb
or
jbe
addr16
jp
mov
mov
add
movsb
add
mov
xor
cmc
xchg
add
add
aaa
int3
push
cltd
mov
add
imul
into
gs
loopne
pop
jno
insl
fwait
or
add
mov
aad
inc
push
xor
add
mov
mov
mov
scas
add
scas
add
xchg
pop
add
lret
cmp
mov
dec
jge
test
fnstsw
adc
add
mov
add
xchg
call
add
lahf
xchg
repnz
pop
movl
popl
add
add
add
jae
add
in
test
mov
pop
dec
addb
sarb
fwait
mov
add
dec
aas
out
add
jge
cmp
pop
adc
sbb
nop
pop
movsl
inc
adc
dec
xlat
jns
add
lock
xchg
xchg
pop
push
aas
insb
popf
or
call
or
das
mov
add
popa
sbb
fwait
ljmp
ss
dec
popa
fwait
push
add
mov
add
bsf
dec
lret
lcall
add
add
sbb
add
add
test
jg
inc
icebp
gs
lahf
data16
mov
insl
and
insl
mov
add
mov
cwtl
std
and
add
add
pop
les
xchg
pusha
nopl
jecxz
add
andl
mov
out
add
lahf
jo
add
fistl
int
pop
fs
add
add
repnz
push
mov
lea
add
nop
inc
lret
andps
mov
add
add
push
hlt
sbb
fcompl
out
cmp
add
add
add
sbb
mov
test
add
dec
mov
sahf
lock
inc
pop
mov
add
add
xor
mov
xchg
test
add
sbb
das
jnp
push
and
je
xor
fisubs
add
lock
inc
cmp
jbe
adc
cli
pop
mov
add
loop
cltd
test
jge
fsts
pop
xchg
sti
aad
add
push
xchg
push
dec
pop
js
loope
ss
in
ds
add
inc
xchg
sbb
xor
push
mov
mov
add
pop
out
add
inc
pop
fildll
add
das
xlat
xor
add
pop
lret
add
cmpsb
add
js
xor
test
add
xlat
xorl
ret
dec
and
add
mov
add
ror
out
dec
into
and
add
call
repz
mov
clc
int
add
add
popf
mov
add
fcomps
mov
sbb
add
ljmp
mov
int3
arpl
push
cmp
mov
add
push
add
popa
js
push
sbb
pop
xchg
mov
fsubrs
fdiv
mov
add
mov
std
mov
arpl
sbb
and
push
addb
pushf
test
cmp
xor
adc
in
idivl
pop
loope
add
dec
cmc
xchg
cmpsb
add
pop
scas
add
cmp
add
and
add
fwait
push
add
mov
cmp
xor
xor
add
push
and
add
mov
jmp
xor
stos
add
pop
xchg
dec
mov
clc
fmuls
add
dec
shl
push
cmp
xchg
or
add
leave
or
add
or
mov
aas
sarl
fwait
cmpsb
add
sub
or
int3
nop
nop
sbb
cwtl
inc
xchg
pop
sub
mov
sub
add
add
cltd
adc
and
add
popa
pop
cmp
loop
cld
jg
cwtl
jmp
je
ljmp
mov
fdivrs
popf
sub
add
loop
fcompl
add
add
arpl
adc
add
imul
mov
add
xor
jle
add
dec
mov
jae
and
adc
jp
shrl
add
pop
mov
ljmp
mov
add
addb
enter
mov
jne
add
xchg
jg
mov
mov
sahf
in
mov
std
xor
pop
rcr
jmp
addb
xchg
add
xor
mov
mov
push
jb
movsl
dec
xchg
ret
daa
scas
add
lahf
xor
mov
pop
xor
lods
mov
jmp
int3
rclb
out
adc
jb
add
mov
xor
add
push
jb
add
test
dec
mov
push
arpl
lea
cmc
fwait
or
xor
or
sbb
add
and
jbe
orl
test
add
xchg
cmp
add
push
ds
or
clc
push
daa
insl
inc
mov
int3
adc
push
mov
add
outsl
lret
xor
pusha
sti
dec
dec
cld
mov
mov
cli
mov
push
add
shr
xchg
leave
rcl
cli
xor
lret
mov
cmp
stos
add
aam
push
xchg
and
add
arpl
jle
dec
dec
pop
jns
add
mov
cmpsb
add
push
mov
adc
dec
out
and
add
mov
shll
fsubrs
add
dec
and
pop
xorl
xchg
add
add
mov
mov
dec
cmp
icebp
dec
sahf
inc
adc
shr
adc
add
push
test
add
movsb
add
ret
adc
test
dec
or
add
insl
imul
fstl
dec
mov
sti
ds
add
or
add
idivl
arpl
pop
xor
sub
add
add
call
add
wbinvd
push
mov
fistpll
inc
adc
into
sub
add
add
add
sub
int3
cvtpi2ps
add
jle
mov
add
movsl
pop
push
push
mov
push
cmpsl
xor
jge
mov
arpl
in
mov
pop
xlat
pusha
mov
call
add
jb
inc
inc
addr16
xor
adc
push
js
cmp
add
add
add
pop
mov
add
test
add
add
jnp
mov
add
sub
add
daa
aam
cmpsl
and
add
and
std
lret
push
aad
add
popf
in
adc
in
mov
add
inc
mov
sti
and
add
add
or
add
addb
sbb
push
mov
add
xchg
add
push
xor
jp
leave
or
testl
les
sbb
lea
imul
add
cmpsl
int3
push
push
mov
ss
lods
je
dec
pop
jo
fdivrl
jle
add
cmp
daa
into
cli
and
int
jge
and
add
add
jb
pushf
dec
movsl
or
ds
cmp
hlt
aam
add
jge
push
into
add
add
insb
adc
pop
outsl
gs
shll
std
cmp
add
dec
scas
add
adc
aad
fidivs
insl
adc
mov
popf
sbb
mov
in
lods
push
ror
add
pop
xchg
sub
addb
lods
add
movsb
add
ret
add
dec
in
cmp
int3
gs
or
adc
or
add
enter
add
sbb
sub
add
pop
adc
cli
sti
loope
sbb
pop
inc
sub
and
add
mov
add
rorb
dec
pop
out
stos
add
popa
xchg
out
cmpsl
dec
out
sbb
inc
daa
inc
stc
or
add
test
add
test
arpl
xchg
inc
lock
cmpsb
add
cmp
test
addb
fiadds
jae,pt
imul
jle
adc
mov
add
shll
stos
add
inc
mov
hlt
in
fistpll
ss
mov
lds
add
jmp
add
mov
sub
add
add
add
test
add
add
add
add
add
pop
and
add
add
popf
sbb
in
mov
das
jns
jnp
add
fdivrl
in
mov
arpl
add
out
aas
fisttpl
xchg
int3
test
add
mov
lahf
test
add
negl
mov
cmp
dec
xchg
push
jb
call
jge
adc
daa
or
add
sub
sbb
add
cmp
xchg
xchg
popa
testl
ss
jge
cmc
addb
xchg
add
mov
add
jg
and
add
xchg
add
add
mov
aam
add
lods
push
popf
scas
add
inc
ljmp
jo
testb
add
daa
js
sti
sbb
in
jne
outsl
push
inc
push
arpl
enter
std
inc
and
add
nop
scas
loopne
push
add
add
test
add
int3
xchg
add
pop
std
mov
movsl
mov
add
gs
fidivs
adc
push
jbe
rclb
call
jno
add
mul
pop
test
add
mov
add
test
add
arpl
pop
dec
movaps
ret
sahf
dec
push
mov
adc
xchg
ljmp
sbb
hlt
jns
push
add
daa
leave
mov
add
inc
sub
add
inc
enter
add
or
add
cmp
jno
cwtl
dec
push
pop
jnp
inc
xchg
fistpl
and
dec
in
je
enter
leave
testb
add
pop
sub
mov
fstl
or
add
mov
jbe
and
add
xor
inc
lds
add
in
add
mov
fstl
ja
int
add
ds
lcall
adc
add
add
cmp
add
xchg
test
add
push
push
aad
or
pop
into
mov
add
cmp
add
add
call
dec
jge
add
mov
les
add
xchg
fnsave
add
test
add
mov
lret
xlat
xor
add
add
lret
mov
add
add
addr16
fistpl
insb
int
xchg
fdivr
mov
ds
add
leave
daa
fs
iret
or
mov
or
add
sbbl
popf
sbb
add
add
imul
add
pop
mov
jge
rclb
mov
add
pop
outsl
test
add
or
add
pushf
dec
add
cmp
cmpsl
test
add
sahf
sbb
div
icebp
sbb
add
xchg
fmuls
adc
add
in
dec
or
add
add
leave
sub
pop
into
jb
fwait
xor
stos
add
pop
ret
ljmp
pop
jns
loope
jb
cmp
add
daa
int
sti
dec
jbe
insb
notb
and
je
push
add
movsl
stos
outsb
int
xchg
mov
outsl
xchg
push
push
call
pop
dec
out
add
pop
push
ja
popa
or
pop
popf
mov
mov
add
mov
movsl
sbb
inc
jmp
mov
jo
add
or
add
dec
xchg
add
add
mov
and
add
scas
add
gs
rorb
add
or
add
inc
xchg
add
stos
add
sub
dec
aad
aad
add
cmp
add
lahf
lock
add
and
pop
das
stos
add
ljmp
cmpsl
add
add
jmp
jmp
stc
imul
add
push
scas
add
mov
xor
inc
xchg
add
popf
call
dec
jl
jbe
adc
mov
or
mov
loopne
scas
addb
xor
mov
xchg
ljmp
in
or
out
adc
xor
sbb
addr16
add
sub
add
add
push
out
push
mov
dec
add
loope
insl
dec
jg
jb
negb
imulb
adc
test
into
inc
pop
add
add
cmp
shl
dec
stc
jae
test
les
add
mov
add
imul
ss
stc
sub
add
mov
add
add
pop
or
add
add
push
push
mov
add
lret
fidivrl
pop
cmp
and
add
push
jp
cmc
sahf
mov
add
mov
incb
sub
ror
add
inc
arpl
outsl
pushf
xchg
mov
out
lcall
je
mov
inc
adc
clc
stos
mov
mov
sbb
pop
fs
leave
sbb
loope
mov
add
adc
add
test
add
add
add
add
pusha
notb
xchg
jns
push
sub
add
inc
cmp
mov
add
ret
ljmp
push
xchg
cld
pushl
pushf
daa
cmp
mov
add
lahf
in
cmp
add
test
or
add
movb
push
aam
xchg
ljmp
and
add
push
adcl
sub
scas
add
jnp
fcompl
adc
ss
pop
xor
add
pop
inc
outsb
mov
add
add
lock
add
mov
mov
addb
sub
add
loope
add
fcoml
fwait
dec
iret
idivl
icebp
lock
add
jmp
lahf
mov
sub
add
cmp
push
loopne
lods
stos
xor
add
add
dec
lea
push
orl
jecxz
loopne
hlt
pop
mov
push
ds
test
jle
add
add
add
outsb
nop
leave
mov
add
mov
icebp
xor
in
out
bound
add
scas
add
or
add
add
fcoml
data16
add
ret
xor
add
sbb
outsl
pop
sbb
add
mov
shlb
pop
jge
mul
enter
xchg
mov
popf
pop
cli
mov
jne
and
ss
add
add
cmp
leave
fsubrl
add
gs
jo
ja
add
jns
sti
movsb
add
addb
push
adc
pop
in
test
add
xor
insb
insb
or
add
fdivrp
dec
jb
or
ret
pop
xor
test
int3
sbb
outsl
fists
jmp
popa
adc
and
add
xor
jecxz
imul
mov
push
and
add
add
enter
aaa
cmc
daa
addb
xchg
lock
xchg
add
add
add
imul
pop
xor
xchg
js
inc
jecxz
add
imul
into
dec
xor
jnp
icebp
mov
xchg
cld
loopne
mov
mov
add
sbb
adc
add
loopne
jge
ljmp
cmp
mov
int3
fstpt
lret
lcall
inc
mov
add
add
aas
push
mov
add
cltd
xchg
add
test
add
cltd
lea
test
into
icebp
add
jp
inc
jae
jg
dec
adc
add
pop
adc
ja
add
adc
add
add
xchg
jb
add
cltd
int3
adc
sbb
adcl
add
sahf
mov
pushf
xor
mov
add
ja
or
add
sbb
push
add
enter
add
lea
add
aaa
scas
pushf
lcall
add
inc
sub
add
xchg
aas
pop
mov
add
insl
daa
push
out
pushf
jb
add
daa
mov
rcll
test
add
dec
push
add
xchg
mov
add
jae
lahf
add
mov
call
xchg
push
add
add
sbb
nop
xchg
in
in
jne
fcmovu
xchg
gs
imul
add
and
add
je
cli
fildl
movsl
push
pop
jg
add
cmp
add
leave
data16
xchg
xchg
gs
flds
inc
lahf
xlat
inc
xchg
add
or
add
fucomip
fsubl
inc
dec
testb
add
dec
imul
jae
fdivrl
xorl
fucomp
add
rorb
add
and
add
stos
inc
or
sbb
inc
lods
add
push
clc
aaa
cld
xlat
push
push
dec
push
push
jle
jb
icebp
xchg
cmp
data16
xchg
out
sbb
pop
add
xor
add
add
sub
jge
xchg
pop
mov
gs
add
insl
lcall
arpl
add
inc
xor
loope
add
xchg
pushl
xchg
dec
rorl
push
adc
and
add
in
xchg
pop
xor
xor
int3
popa
out
mov
call
cmc
out
scas
add
pop
cmpsb
add
adc
mov
out
ss
inc
pusha
arpl
lock
add
add
add
data16
add
mov
js
dec
rcl
inc
sbb
rcl
mov
mov
movl
add
sub
out
and
add
loopne
repnz
or
in
pop
fxch
dec
test
mov
sub
add
nop
andl
add
shr
and
add
fs
add
fdivs
add
jb
addr16
xor
mov
mov
add
add
or
add
movsb
add
pop
add
rcrl
addr16
add
repz
lods
js
push
leave
push
add
xchg
xor
into
dec
add
insb
mov
add
fists
les
push
mov
sub
sbb
cmpsb
add
mov
cmpsb
add
mov
mov
pop
jle
or
or
add
add
mov
stos
adc
pop
dec
into
dec
mov
dec
jnp
jae
xor
add
lcall
out
nop
and
cwtl
xor
cld
jb
jle
hlt
lret
icebp
or
mov
xchg
xlat
mov
inc
push
je
xchg
fldcw
add
push
mov
cld
xor
push
add
jmp
rclb
add
ret
mov
clc
or
add
xchg
cmc
push
mov
inc
mov
adc
inc
inc
xor
jmp
add
adc
xchg
leave
inc
fdivrl
movsb
add
add
dec
dec
pop
mov
add
int
rclb
push
std
imul
add
xor
jne
adc
insl
leave
data16
add
iret
mov
pop
ror
cwtl
jno
stos
add
pop
ffree
sub
jne
push
xor
adc
mov
xor
cmpsl
jns
or
xor
sahf
lahf
frstor
dec
cmp
add
add
out
subl
sub
lods
aam
loope
ror
cmpsb
add
aas
mov
jl
lcall
ss
dec
in
inc
inc
and
or
sbb
add
insl
lret
sbb
lahf
cltd
mov
xor
adc
cmp
inc
loopne
pop
cmpsl
pop
xor
ficoml
mov
fdivl
and
add
add
mov
lock
add
andl
xchg
add
sbb
dec
scas
add
adc
std
je
mov
pop
pop
push
xchg
subl
jnp
xor
mov
testl
mov
aad
je
je
mov
push
lds
add
push
push
out
push
movsb
add
dec
enter
sbb
push
ror
adc
sbb
enter
pop
xchg
xor
pop
jmp
push
push
xchg
out
xlat
mov
inc
or
xchg
add
xor
xor
add
push
cmp
test
add
dec
mov
ret
adc
xchg
add
rorl
sub
and
add
popa
inc
dec
push
xchg
out
mov
add
mov
add
loope
and
add
or
add
and
sbb
add
cwtl
fsubrs
imul
ja
jmp
lds
or
add
pop
jae
mov
mov
push
add
xchg
stc
test
add
cmp
lods
add
out
cwtl
xlat
jecxz
adc
test
add
dec
jp
sbb
push
pop
push
mov
add
outsb
pop
sbb
stos
loop
mov
shrb
mov
add
jecxz
inc
push
mov
insl
mov
add
pop
add
add
mov
cltd
sub
add
fcomps
add
pop
adc
loopnew
shlb
pop
dec
pop
dec
imul
cmp
add
in
repz
mov
add
and
add
inc
xchg
sub
movsl
cwtl
outsl
das
sarb
and
mov
xchg
push
jecxz
xchg
cmp
aaa
outsb
test
in
lcall
mov
out
ret
adc
rdpmc
imul
stc
out
pop
ljmp
ja
mov
add
add
add
or
add
out
iret
pop
jl
call
add
das
pop
mov
push
fimuls
add
dec
bound
add
popf
cmpsb
add
lahf
in
int3
sub
jne
adc
mov
add
addb
fidivrl
add
and
cmpsb
add
imul
jl
adcl
add
sbb
cmp
jns
js
push
push
pop
xchg
cmc
mov
daa
sub
xor
fimull
jl
add
dec
fxch
mov
xchg
xchg
add
add
push
flds
add
xchg
out
mov
add
imull
add
pop
out
repnz
shlb
add
data16
or
add
sub
xchg
xor
and
add
mov
mov
add
ja
fistpl
loopne
outsb
cmc
adc
inc
pop
movsb
add
xchg
outsb
sbb
shrb
add
jle
xorl
push
push
add
scas
add
xchg
sbb
mov
add
fwait
aam
add
nop
shr
push
pop
nop
lret
or
adc
leave
lcall
jle
aas
in
xchg
scas
mov
xchg
pop
lock
xor
test
add
rolb
mov
into
cmc
jns
add
popf
jge
add
add
jns
bound
imul
add
add
mov
int3
add
aam
sbb
insl
pushf
aad
sbb
jle
out
test
bound
rol
mov
push
add
or
add
xor
fs
std
inc
ficompl
lea
int
add
jg
rcll
jle
and
add
enter
into
popf
cmpsb
add
dec
jge
adc
add
sub
add
xchg
inc
jmp
cmp
std
test
add
jg
adc
mov
add
or
add
adc
mov
cmp
dec
nop
or
jb
jbe
hlt
xchg
or
add
test
add
mov
mov
movswl
mov
iret
add
ss
sahf
inc
add
pop
or
add
add
add
mov
js
push
add
fsubrl
fdivr
je
arpl
push
push
add
fisubl
adc
xor
pop
inc
sub
add
push
cmp
add
pop
jecxz
push
add
xlat
sub
add
lds
add
mov
add
sub
movb
cmp
add
pop
jge
in
push
pushf
adc
add
adc
mov
mov
add
lahf
pop
or
add
add
add
add
adc
jns
loope
inc
inc
cltd
in
xor
add
rclb
scas
xchg
mov
add
loopne
xor
cli
push
mov
negl
sub
add
inc
lock
stc
jae
mov
push
add
xor
mov
add
and
add
push
iret
xchg
ljmp
test
pop
rclb
add
jle
or
add
jp
xchg
mov
mov
mov
cmc
adc
iret
lods
fnstsw
and
jl
loope
in
mov
dec
mov
jae
pop
add
add
in
add
in
or
jo
xchg
sti
aas
and
stc
dec
aas
cmpsl
out
lods
add
ja
xchg
mov
add
dec
hlt
jne
add
hlt
sbb
inc
pop
mov
inc
aas
pop
mov
test
mov
pusha
mov
sahf
xor
push
sub
add
in
add
test
add
inc
push
outsl
ja
pop
cmp
add
hlt
push
push
dec
daa
adc
xor
or
add
leave
sbb
fs
mov
outsb
pop
jmp
out
aam
add
ret
push
add
pop
stos
add
sbb
cmp
mov
pop
cmpsb
add
fnstsw
testb
push
add
add
hlt
push
pop
cmpsl
or
pushf
fdiv
mov
push
ja
and
add
add
xchg
add
fisttpll
mov
jle
lret
fnstenv
enter
mov
dec
sub
add
aad
jae
pop
push
add
arpl
addb
dec
cmp
jbe
mov
add
add
add
cmp
insb
push
push
dec
or
out
or
add
jnp
insb
adc
push
jb
inc
ss
add
lahf
sahf
inc
dec
call
xor
psrlw
push
cmp
cli
in
les
dec
and
mulb
ds
cmpsl
and
pop
addl
fadds
add
je
inc
pop
lea
or
add
mov
cmp
aaa
add
jne
in
xor
in
in
jmp
call
jmp
fwait
inc
scas
add
mov
mov
std
xchg
xchg
adc
lods
adc
dec
ds
xor
nop
pushl
add
add
loop
or
push
add
mov
hlt
out
aad
push
add
out
dec
ret
push
dec
sbb
mov
add
leave
ror
add
mov
aam
xor
and
add
adc
sahf
or
add
cmp
add
mov
outsb
test
add
aas
sub
add
repnz
leave
lret
cli
das
cmc
sbb
pop
call
xchg
inc
push
std
or
enter
add
sbb
push
insl
scas
sub
add
in
lret
push
sub
add
add
jo
jmp
inc
lds
aas
lahf
inc
inc
inc
addb
mov
add
les
dec
mov
ret
sub
add
push
push
push
dec
cld
or
add
and
negb
cmp
xchg
insl
inc
aad
ret
pop
call
pop
clc
add
add
add
push
add
daa
adc
arpl
out
add
add
mov
frstor
push
add
aaa
ficoml
add
outsb
jge
jae
and
add
add
stos
pop
roll
add
add
add
jnp
inc
clc
int
sub
add
and
add
pop
jne
xchg
arpl
jmp
push
inc
addb
daa
mov
add
and
add
scas
dec
inc
xchg
and
add
mov
xchg
sub
add
ficompl
or
push
sbb
mov
icebp
mov
das
dec
je
add
push
dec
pop
and
mov
mov
add
add
scas
add
inc
xchg
jbe
mul
jnp
pop
popa
jbe
outsl
adc
xor
mov
add
nop
data16
or
xor
pop
imul
adc
cmp
push
in
enter
popf
fimuls
sbb
add
movsb
add
test
add
mov
add
fidivs
add
or
sbb
imul
inc
cltd
mov
add
add
pop
iret
enter
mov
lock
pop
imul
add
loope
add
pop
lahf
into
adc
push
add
mov
or
add
pop
ljmp
jle
inc
dec
cmp
add
add
mov
add
fstpl
in
pop
test
add
les
add
cmc
outsl
cmp
add
mov
add
sub
add
test
and
add
mov
sbb
add
add
movb
add
add
sub
add
pushf
mov
add
inc
xor
add
sbb
add
mov
add
xchg
or
add
test
loop
test
add
add
pop
out
aad
cltd
cmp
sbb
sub
add
pop
inc
nop
dec
push
pop
push
fisttps
cli
imul
xchg
add
add
mov
add
jb
jecxz
xchg
mov
push
adc
sbb
jno
stc
mov
xchg
fwait
arpl
movsl
shl
ljmp
out
dec
loopne
jb
sbb
add
xor
push
and
cwtl
pop
sbbl
push
xor
inc
test
add
mov
add
out
jnp
outsb
mov
cld
pop
pop
pop
mov
adc
sbb
cmp
push
ljmp
pop
xor
cmp
bnd
sti
mov
ss
pop
out
out
sub
add
cmp
insb
sti
dec
jl
adc
popf
aam
enter
xchg
and
add
mov
add
add
add
imul
cmp
add
push
add
mov
add
adc
cld
je
add
pusha
orl
add
pop
out
push
dec
jns
fisubs
add
outsb
xchg
sbb
xchg
lods
add
jns
add
movsb
add
xchg
jns
arpl
add
shll
xor
inc
add
add
inc
sbb
cmp
sbb
sub
xor
call
add
lcall
pop
in
mov
mov
add
cmp
mov
xor
pop
test
add
and
add
mov
jmp
test
xor
iret
inc
jmp
rolw
mov
loop
int3
jo
lods
jl
jg
cmp
into
loopne
bnd
aaa
loopne
jmp
pop
xor
add
push
xor
add
sbb
ret
cmpl
movsl
cmp
pop
in
sbb
movsb
add
xchg
test
add
lea
dec
add
add
scas
add
inc
rcrb
cmp
add
jl
out
adc
imul
cli
js
lods
add
jbe
icebp
pop
aad
sti
out
add
or
add
add
add
insb
imul
outsb
repnz
or
add
loope
lds
insl
or
xchg
movsl
gs
pop
outsl
mov
push
add
add
out
loopne
insb
aad
jp
add
fwait
mov
inc
push
add
push
push
imul
add
je
add
dec
inc
dec
dec
test
add
mov
add
jg
and
add
dec
pop
push
sbb
frstor
testb
add
add
or
data16
das
pop
cmpsb
add
mov
jg
add
add
stc
pop
fwait
cmp
or
add
insl
pop
ljmp
lock
xchg
fimuls
pop
cmp
cmp
fstps
xchg
and
add
mov
cmpsl
pop
and
add
add
inc
f2xm1
and
add
nop
ja
pop
aad
xchg
jp
into
adc
ficompl
dec
dec
mov
scas
add
cltd
mov
add
addl
inc
or
cli
push
push
add
outsb
int
rcrb
jne
inc
nop
and
add
mov
xchg
add
adc
subl
add
in
add
out
loopne
frstor
jnp
inc
push
push
in
andl
mov
add
fdivrs
sbb
mov
add
lahf
xor
ds
and
add
std
xchg
mov
movsl
add
add
insb
rorb
pushf
lret
cmp
insb
das
sub
and
add
adc
lea
cmc
stc
dec
xor
fidivrl
jno
fsub
mov
cmpl
idiv
pop
int
add
add
add
pop
leave
gs
addb
fs
mov
aaa
mov
fnstsw
mov
add
add
add
xor
fbld
add
sar
bound
test
add
add
lahf
inc
push
add
push
sub
add
add
dec
mov
shl
cmpsb
add
cmp
jge
add
add
addb
push
mov
movntps
and
add
ljmp
aad
mov
je
mov
lea
push
add
lahf
dec
jmp
mov
dec
sub
add
cmp
xor
orps
add
push
jecxz
gs
cmp
mov
popa
and
add
add
pop
sub
add
icebp
sbb
and
into
fisttpll
add
inc
lahf
lods
ss
enter
shrb
or
add
loope
or
jns
pop
stc
clc
out
push
push
add
pop
sahf
sub
and
leave
repnz
xchg
aam
xchg
add
in
dec
js
add
push
addr16
xchg
mov
scas
mov
cmp
lods
add
ret
nop
divb
add
in
loope
jb
push
add
dec
push
add
pop
gs
push
add
js
dec
bound
faddp
push
daa
push
mov
add
mov
add
out
xor
aam
pop
jnp
dec
test
add
fdivr
ds
mov
and
add
jns
add
sbb
pop
pop
pop
xchg
add
add
sti
mov
add
mov
xchg
jle
icebp
jbe
and
movsl
mov
cmp
sbb
test
add
insl
pop
xorl
sbb
sub
add
lcall
outsl
fcomps
mov
scas
mov
and
add
inc
aad
add
fcmove
mov
add
aam
lret
sbb
gs
fiadds
in
test
sbb
sahf
xlat
fwait
popa
dec
fs
mov
cmp
loope
xor
divb
mov
cmpsb
add
insl
dec
outsl
xor
cmp
mov
jo
dec
xchg
bound
add
add
or
add
add
mov
pop
lret
add
les
movsl
movsl
pop
pop
cmp
dec
stos
xchg
dec
lds
cltd
sahf
js
ss
add
add
push
add
fistpll
push
adc
stos
mov
addr16
stos
inc
icebp
nop
dec
add
sbb
add
ss
add
or
outsb
mov
mov
add
hlt
les
xchg
jp
inc
or
jecxz
fmul
cmp
pop
movsl
fnstsw
xchg
mov
mov
mov
add
in
insl
popf
stos
mov
and
mov
add
aaa
daa
sub
add
clc
and
imul
xchg
stc
add
add
sub
add
add
xchg
jmp
add
and
add
push
fidivl
add
clc
nop
scas
ret
add
mov
xchg
mov
repnz
mov
fstl
scas
add
mov
pop
iret
outsb
mov
add
or
popa
jl
adc
push
push
inc
xor
and
add
lret
add
pop
outsl
inc
fstl
jb
mov
sbb
xor
sbb
cmp
jg
mov
roll
pop
push
int
test
add
loop
mov
stos
add
pop
jp
add
add
xor
mov
cli
mov
ret
xchg
negb
mov
inc
inc
adc
add
add
inc
pop
or
dec
mov
add
add
cmc
push
int
cltd
mov
hlt
mov
mov
mov
push
mov
lds
insb
push
push
lock
adc
lret
mov
add
or
add
scas
add
sbb
inc
sti
and
add
cmp
je
add
insl
fsub
dec
add
les
jge
add
inc
cld
addb
pop
iret
pop
gs
add
pop
mov
inc
mov
adc
cltd
push
add
add
jb
add
adc
xor
loope
pop
in
xchg
lea
dec
jge
into
jns
rcr
cmp
dec
sarb
roll
negb
mov
push
and
lods
into
add
add
fcoms
push
cmp
pop
push
push
sbb
add
add
pop
fstpl
fisubrl
lock
cmpsb
add
mov
add
xor
jae
cmpsl
xor
or
cmpsl
mov
shlb
mov
inc
flds
mov
push
lea
call
arpl
mov
add
ja
sub
mov
add
cltd
lcall
pop
jl
xor
aaa
cld
dec
ja
xor
pop
roll
pop
cwtl
mov
add
pop
adc
add
test
adc
jge
pop
xchg
ret
adc
movsl
mov
add
insb
addb
mov
sbb
mulb
das
mov
add
test
add
movsl
out
inc
cmp
add
xlat
xchg
xlat
imul
sbb
lock
cwtl
mov
jae
add
inc
jmp
add
gs
mov
inc
xlat
insb
mov
insl
jp
icebp
sub
add
lahf
or
add
and
add
stc
jne
mov
add
mov
popa
popf
mov
inc
jp
adc
add
jne
arpl
loopne
shrl
add
shll
add
fnsave
xor
sbb
add
mov
add
inc
cwtl
scas
add
in
sub
pop
ret
pop
decb
dec
jb
pop
scas
add
mov
add
gs
add
xorl
neg
and
add
push
jne
add
lret
int3
mov
rcrl
sbb
enter
add
montmul
cmpsb
add
dec
cld
and
add
adc
pusha
jae
pop
xor
addr16
add
inc
jo
fdivs
movsb
add
js
inc
scas
mov
mov
push
add
jmp
fs
add
dec
out
out
mov
jo
push
and
add
call
sub
pop
push
rcl
data16
add
cmp
dec
cmp
inc
imul
and
add
std
iret
mov
add
push
mov
mov
test
mov
jp
add
clc
adc
add
andl
jp
adcl
addb
mov
xchg
pop
cwtl
pop
ds
mov
add
xor
inc
int
mov
imul
fldcw
pop
popf
fisttps
add
dec
adc
in
mov
add
lret
mov
add
cmpsl
mov
fldl2t
gs
or
aaa
les
clc
insl
lea
and
mov
pushf
imul
inc
dec
das
clc
xor
sbb
out
sub
add
add
pop
and
add
aaa
arpl
mov
add
add
cmc
adc
inc
jle
add
inc
xor
add
iret
push
or
add
or
fisttpll
pushf
or
add
stos
add
loope
lcall
aaa
dec
pop
cmp
loop
xchg
cmpsb
add
shrl
addb
fstl
add
mov
test
add
jns
pop
xchg
add
xchg
jno
cmp
outsl
adc
loope
cmp
dec
push
out
jle
push
shll
jmp
clc
das
mov
loopne
js
fmuls
sbb
cld
fcomps
xlat
jle
add
adc
add
imul
add
xchg
pop
js
push
or
add
add
push
ljmp
add
mov
fstpl
into
dec
std
clc
adc
enter
sbb
jbe
dec
enter
push
insl
in
int
sbb
ret
gs
inc
sti
jae
push
lods
sti
inc
adc
jo
or
add
dec
fwait
inc
ja
mov
add
aas
inc
sti
les
add
dec
xchg
add
sub
add
adcl
cld
movsl
sbb
add
fmull
fs
int
iret
and
add
xchg
dec
xchg
add
xchg
shlb
add
pop
loopne
repz
add
ljmp
add
dec
xor
add
pop
jecxz
mov
add
test
add
xchg
add
into
shlb
add
add
mov
cwtl
mov
out
push
pop
stos
dec
or
push
test
xchg
jmp
mov
das
lock
mov
add
sbb
call
sahf
dec
push
cmp
cld
xor
xchg
or
add
xchg
add
jmp
sbb
xchg
push
add
push
sbb
mov
or
add
xor
out
inc
cltd
and
fstps
cmp
icebp
pop
push
addr16
cmp
push
int
fisubl
add
or
and
add
add
sub
fimull
add
idivl
mov
lret
mov
lahf
and
pop
bound
sbb
add
test
add
sbb
decl
pop
dec
inc
in
in
jno
ror
jb
cmpsl
in
cwtl
sarl
aad
xchg
pop
xor
out
lods
add
cmc
dec
push
add
add
scas
add
mov
mov
add
add
push
vcmpnge_uqsd
out
scas
add
add
add
add
imulb
push
mov
das
jne
sarl
out
sbb
pop
xor
mov
xchg
mov
ljmp
add
adc
cltd
pop
push
cld
or
add
rorl
mov
add
or
sbb
ja
insb
mov
sti
xor
xchg
mov
sub
add
push
sub
dec
cmpsb
add
xchg
bound
add
xor
pop
jg
ja
add
sbb
add
add
call
mov
add
leave
test
add
test
add
add
inc
push
leave
sbb
test
add
dec
pop
cmpsl
int3
mov
stc
dec
jae
xor
pushf
push
add
add
adc
insl
je
add
insb
mov
add
jg
adc
add
or
sub
add
pop
insb
scas
add
ss
fs
cmpsb
add
push
jecxz
adc
sti
adc
add
movsl
aaa
xor
cmc
js
jnp
movsb
add
jne
add
and
add
pushf
jo
mov
add
aaa
shll
add
arpl
or
add
push
lahf
or
adc
xor
sub
add
add
test
pmulhuw
pop
jg
sahf
xchg
inc
dec
or
add
add
xchg
jns
in
pop
pop
insl
mov
notl
frstor
push
out
mov
data16
sub
cwtl
add
divb
scas
add
fdivs
xlat
aam
addb
or
add
std
out
add
jl
xchg
jle
subl
repz
mov
lea
and
add
add
scas
mov
nop
rorl
add
add
add
stos
add
sahf
outsb
sub
add
mov
add
fsts
lock
cli
sbbl
je
jns
stos
add
lds
inc
adc
movsl
lret
mov
dec
mov
add
sysret
push
add
addb
xor
shrb
xor
xchg
out
je
or
add
cmpsl
jns
adc
add
add
test
add
add
add
ret
jmp
inc
in
mov
add
pop
push
hlt
repz
sub
rorb
adc
dec
inc
cmpsl
sbb
mov
mov
rclb
add
add
add
xchg
lcall
sahf
and
add
clc
repz
add
mov
inc
lods
jecxz
sub
add
pop
push
add
movsl
push
mov
out
inc
jecxz
fidivrs
push
jb
les
add
or
add
xchg
adc
decb
adc
or
stc
dec
int3
xchg
out
sbb
pop
test
add
jge
jecxz
jb
add
dec
inc
adc
mov
test
add
jge
dec
mov
add
jnp
push
fsubrl
addb
xchg
xchg
push
faddl
add
lods
ret
stos
arpl
xchg
mov
aam
insb
fidivl
je
into
push
adc
add
imul
pop
mov
add
cltd
push
lret
pusha
mov
add
inc
push
gs
test
sbb
lahf
cli
push
scas
dec
out
leave
imul
mov
in
jge
add
cmc
stos
or
add
push
sub
add
add
push
fnstsw
sarl
mov
lock
inc
gs
jnp
adc
repz
or
add
inc
js
jo
cwtl
mov
xchg
add
adc
out
test
inc
popf
xlat
add
add
jae,pt
dec
lods
test
add
add
cmc
mov
loope
test
add
add
mov
add
scas
add
rep
fists
push
sub
ds
cmp
mov
add
lds
ret
mov
add
test
sbb
xor
add
add
adc
add
fidivrl
cmc
sbb
icebp
dec
iret
mov
hlt
jle
jl
lds
inc
daa
push
mov
stos
add
push
cmp
adc
add
movsb
add
icebp
inc
call
add
fs
cmp
sub
push
add
rorl
pushl
cld
outsb
dec
pusha
jo
add
std
jae
sbb
int3
or
aaa
and
icebp
push
dec
pop
shlb
add
js
pop
and
add
cmc
arpl
cmc
ret
mov
stos
xchg
or
add
dec
stos
fsubr
dec
push
ret
mov
notb
jb
stos
xchg
add
jg
push
mov
mov
add
jbe
ficoml
sbb
movsl
sub
add
mov
and
jmp
add
adc
jmp
fnstenv
lahf
lret
dec
mov
cmpsb
add
add
testb
ss
fistpl
add
mov
mov
mov
pushf
or
add
roll
add
add
push
and
add
xchg
jg
cmc
stos
fwait
insl
dec
and
add
aaa
iret
inc
test
mov
add
test
test
xchg
xchg
adc
cwtl
xchg
dec
addl
fstl
les
add
jne
aam
push
adc
cmpsb
add
mov
in
add
jbe
mov
add
mov
add
inc
iret
shlb
add
xor
add
jo
adc
mov
add
push
add
sbb
add
fisttpl
scas
inc
jnp
sbb
add
xor
mov
add
inc
mov
add
pmuludq
xor
fists
pop
push
add
xor
call
push
add
aam
out
out
sbb
shrb
insb
mov
add
xchg
jo
pop
in
add
mov
mov
xor
add
add
mov
add
mov
fiaddl
sbb
imul
jbe
add
jecxz
jecxz
sahf
add
add
fsub
inc
inc
jbe
les
xchg
add
add
sub
add
add
out
inc
in
pushf
lock
fsubp
arpl
lds
mov
sub
xchg
std
inc
test
add
fadds
dec
push
mov
add
add
cwtl
negl
push
jae
add
sbb
arpl
or
add
jb
mov
fucomi
movswl
test
pusha
fmul
addb
xchg
inc
cld
mov
jo
movsb
add
lods
das
sbb
push
rorb
inc
xor
inc
addb
ja
mov
test
add
xchg
fs
push
int
add
push
pop
inc
cmpsb
add
scas
add
sbb
je
lea
sarb
imul
xor
add
and
add
add
cltd
getsec
mov
dec
clc
mov
dec
xor
mov
pushf
mov
push
add
sti
xchg
insb
adc
fsts
fcoml
out
add
arpl
out
fldcw
xchg
cmp
mov
add
sarb
fwait
movsb
add
push
sbb
xor
add
aam
daa
jae
gs
fnstenv
out
xor
jne
addl
lea
push
add
js
test
push
fstpt
and
addb
lock
repnz
add
inc
into
ljmp
mov
jo
rcr
addb
icebp
clc
aas
inc
popf
cli
mov
pop
inc
adc
jnp
or
add
out
jae
stos
lods
add
icebp
dec
insl
xor
jne
stc
xchg
fucomi
jb
add
hlt
push
add
pop
outsl
dec
mov
add
test
pop
lahf
mov
add
or
sbb
adc
push
xlat
and
addr16
mov
pop
inc
xor
addb
dec
pop
jns
mov
clc
xlat
mov
sbb
xor
mov
push
sbb
sbb
jne
shr
in
pop
pop
sub
cmp
fcmove
cltd
or
push
jg
mov
and
xchg
pop
loope
ret
lea
add
add
add
add
ficompl
loop
movsb
add
inc
clc
dec
xchg
cmp
cmc
xor
xchg
insb
push
fwait
les
add
jmp
add
add
add
daa
sub
lea
movsl
mov
xchg
push
and
add
lods
add
call
add
mov
in
jae
jge
inc
pop
sub
add
push
cmp
out
mov
outsb
subps
test
mov
add
sbb
add
das
mov
sub
add
dec
sbb
xchg
fstpt
and
add
adc
fisubl
roll
and
add
or
add
xchg
mov
push
in
outsl
lods
add
fs
and
add
sub
add
dec
insl
repnz
xor
ja
bound
decl
mov
add
add
icebp
xlat
pop
add
xchg
add
cmp
add
jb
dec
or
cmp
xchg
add
add
movsl
stos
add
cmc
aaa
or
add
xlat
pusha
addb
mov
shll
pop
jle
ja
inc
into
les
sub
add
das
int
aad
mov
xchg
push
mov
in
rol
out
popa
hlt
add
stc
test
add
enter
lds
insb
icebp
loope,pt
xor
leave
xor
inc
jge
ret
and
lcall
cmp
fldl
inc
jp
mov
add
add
add
test
add
add
aas
ds
inc
mov
subl
add
jle
xor
add
pop
shl
cmp
in
jne
aad
addb
aad
inc
dec
shlb
sub
add
ljmp
add
add
addb
sub
add
mov
add
add
sub
add
pop
push
ror
inc
mov
cmpsb
add
loope
add
add
sarb
inc
xchg
fnstcw
ja
movsb
add
add
add
add
shll
jg
add
mov
shr
add
sub
mov
add
push
add
xchg
adc
pusha
cltd
mov
add
into
rorb
push
mov
add
lcall
add
cmc
insl
enter
cmp
inc
dec
mov
xchg
std
jge
jns
inc
and
add
add
jbe
out
xor
add
or
adc
mov
add
inc
pop
lcall
sarl
cmp
xchg
jb
xchg
mov
test
add
cmp
js
mov
test
mov
xchg
mov
stos
cmc
pop
fmulp
sub
add
movsl
jno
stc
cltd
jno
lock
icebp
jmp
lea
add
xchg
test
aad
fcoml
mov
adc
sub
add
xchg
cmp
inc
nop
jg
lea
loop
lock
pop
sub
add
clc
jns
mov
dec
in
jbe
add
and
nop
fnstcw
fsubs
sbb
add
add
add
push
add
cmpl
and
add
fdivrl
pop
shlb
add
or
add
push
adc
push
add
lret
cmpsl
pop
push
rclb
mov
pop
pop
xchg
loopne
xchg
ret
push
fsubs
add
insb
push
pop
imul
in
pop
mov
push
jle
inc
push
xchg
out
push
inc
lret
jmp
cmp
shrl
add
fstpt
add
cli
loopne
sbb
outsb
mov
insb
inc
xor
pop
ja
ret
mov
imul
add
test
push
lods
adc
add
adc
std
stos
add
xor
jne
hlt
adc
out
push
add
cltd
pop
clc
addb
pop
mov
cld
xchg
or
add
add
xor
add
bound
jo
loop
int
ja
movsb
add
jns
jae
cld
sarl
jnp
add
fldcw
add
mov
add
push
in
jg
inc
push
dec
sahf
into
sub
pusha
in
add
add
xchg
lret
insl
loopne
divb
jle
add
dec
push
pop
jp
xchg
add
dec
cmp
loope
mov
leave
dec
insl
mov
cmp
pop
fs
flds
lock
add
lea
rcll
clc
push
inc
imul
add
clc
jle
lods
sbb
xlat
pop
std
into
adc
push
add
adc
add
cmp
or
cld
dec
imul
out
mov
add
jb
cmp
sub
xchg
lcall
sub
lods
ret
add
scas
std
or
jae
mov
jbe
aas
or
mov
bswap
pushf
or
pop
pop
add
add
cmpsb
add
dec
clc
dec
pop
lock
mulb
mov
xor
add
mov
and
add
add
pop
fisubrl
loope
sub
imul
mov
mov
add
add
mov
je
mov
ss
pop
mov
mov
cmp
movb
add
test
popa
pop
and
adc
jno
add
mov
mov
add
test
pushf
add
pushf
ss
test
add
jo
add
adc
jg
icebp
jae
mov
pop
push
or
add
insb
push
mov
add
adc
jae
dec
aam
addb
lock
pop
and
add
add
bound
bound
add
lcall
add
leave
aad
fldenv
add
ret
in
mov
mov
pop
ret
jnp
insl
mov
add
pop
jnp
add
inc
xor
add
ja
ficomps
arpl
rorl
add
mov
pop
push
add
mull
rcrl
sub
mov
mov
or
mov
add
fcoms
sub
add
sbb
add
jle
mov
and
pop
repnz
add
sbb
add
stos
xchg
add
add
das
call
xlat
push
cmc
filds
scas
cmc
ret
cld
jmp
jmp
mov
or
add
test
add
dec
lret
dec
xchg
mov
sub
add
sbbl
add
mov
sar
jne
and
add
cwtl
sub
and
add
and
add
dec
mov
adc
fimull
sbb
add
add
mov
int3
jecxz
add
inc
jno
stc
pop
fisttps
jns
add
jle
xorl
sti
push
add
sbb
cli
lods
add
pop
fnsave
push
jno
add
pusha
pop
xor
add
jno
enter
add
fucom
inc
lds
mov
mov
out
add
adc
add
mov
and
add
add
mov
xchg
adc
pop
data16
aam
add
jne
add
nop
cmp
add
fiaddl
add
jns
insb
xchg
inc
mov
add
pop
push
push
faddl
add
sbb
dec
das
dec
sahf
in
sub
loop
lds
jge
addb
ficoms
xchg
add
or
add
addr16
or
add
push
add
mov
out
dec
and
xor
sbb
and
mov
pop
outsb
sub
icebp
xchg
cmp
pop
ret
jmp
lea
adc
add
imul
pop
and
sbb
push
add
ret
adc
mov
add
mov
inc
lea
lods
cmp
add
push
cmp
sub
add
aaa
loopne
test
dec
inc
test
add
inc
iret
pop
mov
add
jl
pushf
add
clc
dec
push
enter
xchg
ljmp
jmp
pop
enter
add
mov
sar
add
xchg
mov
lcall
push
add
bts
jg
mov
add
std
cmpsl
jmp
mov
add
add
cmpl
pop
xor
in
xchg
jge
in
adc
add
push
mov
add
outsb
xchg
out
push
jne
iret
test
add
add
adc
loope
dec
jnp
sub
cmp
sub
add
push
loop
xchg
ds
sbb
mov
add
mov
ret
lea
add
fcoml
adc
pop
xor
test
add
add
mov
fdivl
hlt
inc
gs
stos
lea
inc
push
add
xchg
cmp
add
ror
aas
jl
jmp
add
or
add
mov
add
negl
add
pop
lret
xchg
in
cmp
add
add
int
fstpt
add
add
movsb
add
and
xchg
shlb
add
xchg
sub
mov
push
int
add
cli
jne
ss
and
add
je
or
add
ja
mov
add
sbb
cltd
mov
call
add
jb
addb
loope
xchg
frstor
cmpsb
add
stc
mov
add
cltd
sar
inc
outsl
test
sbb
loop
cmp
psubq
cmpsb
add
addb
rorb
mov
fs
pop
lods
cmp
mov
dec
gs
mov
add
lods
add
lods
add
sahf
dec
jae
add
mov
pop
jecxz
sbb
out
push
mov
add
lcall
leave
in
push
cmpsb
add
inc
adc
xor
add
sbb
add
mov
ret
sub
add
push
or
add
test
adc
sbb
in
test
xchg
insl
add
ss
ljmp
inc
jmp
push
int3
mov
add
xchg
sub
add
add
mov
insl
fsubs
add
mov
mov
xor
push
sub
add
mov
add
add
xlat
mov
arpl
add
ljmp
in
jle
add
insl
test
add
loop
mov
mov
mov
add
jb
add
fstpt
adc
notb
dec
shrl
adc
addb
mov
add
add
push
add
inc
icebp
inc
idiv
or
add
rcll
sub
add
ljmp
fsts
jno
clc
add
jmp
pop
inc
add
add
fimull
loop
mov
add
and
add
int
xchg
mov
jnp
sbb
add
mov
mov
add
jmp
push
pop
lods
jno
mov
add
out
dec
insl
xlat
push
rorl
sbb
cltd
rorl
and
add
jge
add
cmp
xchg
hlt
push
mov
add
inc
jecxz
lds
push
xlat
repnz
pusha
jne
add
mov
add
call
pop
nop
or
add
ret
stos
aaa
inc
pop
pop
pop
in
add
in
mov
jne
ss
dec
or
aam
cld
xchg
jge
add
push
or
inc
jne
aas
xor
push
inc
xor
adc
popa
out
mov
jmp
mov
call
add
pop
and
test
push
and
add
outsb
je
pop
vcvttss2si
add
pusha
xlat
fwait
xchg
inc
test
push
cmc
adc
add
adc
pop
cwtl
pop
dec
fdivrp
lret
stos
rclb
xchg
fisttps
mov
in
outsb
roll
rolb
js
outsb
mov
mov
add
add
jnp
mov
scas
add
cwtl
and
add
add
mov
push
push
shll
add
addb
pop
dec
jbe
mov
add
daa
xor
cmp
ds
push
in
jle
add
add
add
mov
add
aaa
movsl
lahf
add
add
in
adc
in
addb
pop
cltd
xchg
add
push
sbb
add
dec
jne
iret
aad
imulb
mov
add
das
push
jg
push
idivb
dec
add
add
jbe
xlat
and
add
nop
push
aam
pop
data16
into
daa
mov
popf
push
add
jno
sbb
leave
push
jo
add
add
xchg
mov
add
shlb
mov
adc
jmp
fstps
je
inc
iret
cmp
or
add
bound
insb
sbb
add
cmp
icebp
pop
shlb
mov
add
jge
dec
xor
out
stc
clc
jecxz
fadds
inc
lahf
sbb
mov
mov
add
jle
inc
add
add
xchg
jecxz
adc
push
fsubrs
mov
add
adc
add
xor
sub
add
pop
popf
outsl
sahf
mov
les
dec
xchg
imul
sub
add
lahf
push
add
jae
cmp
je
xchg
xor
add
rorl
add
push
cmp
ss
out
xchg
dec
xchg
idivb
push
mov
add
xchg
add
add
adc
jo
add
movsb
add
enter
pop
push
jae
add
pop
sbb
push
xchg
fsubs
outsb
or
add
loopne
inc
jecxz
sub
add
add
add
dec
andl
adc
inc
mov
test
add
sub
shll
xchg
mov
movsl
and
ljmp
outsb
lods
add
pop
mov
and
inc
add
add
add
daa
out
in
add
lret
cmp
adc
addb
mov
dec
je
fucom
and
add
xchg
imul
cmpsb
add
dec
daa
lock
add
stc
jae
add
lock
add
sbb
add
loopne
add
add
mov
std
push
add
mov
das
or
and
add
pop
das
gs
xlat
mov
daa
adc
jmp
cld
pop
jl
popa
outsl
add
or
add
mov
call
mov
xor
mov
lods
add
ja
sbb
and
add
inc
test
add
sub
add
xchg
adc
add
push
add
test
mov
mov
add
ds
pop
mov
add
lcall
out
pop
insb
add
mov
sar
clc
dec
push
add
xor
pop
sarb
cmp
movl
popf
scas
ja
addb
cmpsb
add
ja
scas
push
leave
jle
jnp
add
loop
int3
lcall
sti
and
add
push
add
jno
mov
bound
mov
adc
mov
xchg
mov
leave
push
fcompl
clc
shl
out
sub
fmull
add
repz
mov
adc
push
push
movsl
add
add
push
push
cmp
jno
in
test
add
pop
fwait
sldt
add
pusha
imul
add
jae
std
jle
in
ljmp
stos
push
mov
add
mov
add
mov
add
daa
mov
inc
out
push
jns
or
add
aam
sub
add
mov
ja
enter
add
fs
sbb
mov
and
dec
and
dec
xchg
xchg
add
mov
dec
cmp
das
add
pop
and
push
add
fdivr
aad
add
add
xchg
int3
mov
add
aad
mov
sub
in
pop
sub
add
mov
add
mov
xchg
fisubrl
mov
imul
pop
mov
add
subl
jns
cmp
loopne
adc
pop
sbb
cwtl
xor
jecxz
add
pop
popa
add
aam
adc
pop
lret
cli
xchg
fs
pop
movsl
bound
stos
add
mov
add
add
add
add
jne,pt
jle
gs
xchg
add
push
xor
popf
push
cmpsb
add
ds
aad
fucom
test
add
add
mov
leave
mov
std
flds
pop
pop
or
or
and
add
add
outsl
pop
das
adc
push
push
rcll
mov
mov
add
lea
add
mov
shll
mov
ljmp
add
jnp
xchg
mov
add
xor
push
add
enter
in
jmp
push
push
push
adc
add
push
or
add
xor
add
lcall
lcall
or
add
fsts
add
subl
fsubr
push
push
lcall
add
cmpsl
fwait
mov
addb
cli
dec
insl
fwait
xchg
adc
bound
fisttpll
add
push
add
scas
cld
ret
out
imul
xor
jl
dec
adc
jae
dec
fldl
add
stos
add
adc
into
mov
add
or
add
addb
addb
outsl
add
mov
pop
repnz
add
sbbl
adc
mov
push
add
fidivrl
pop
cmpsl
out
icebp
pop
in
push
add
shl
mov
push
rcr
lcall
inc
js
std
xlat
mov
movsb
add
mov
cmpsl
fwait
sub
add
cmp
mov
sub
add
sub
add
add
adc
add
hlt
shll
add
sub
add
ficoms
flds
xor
enter
add
enter
jp
jmp
jnp
jne
add
sbb
repz
fdivl
pusha
push
mov
lods
cltd
montmul
cmpsb
add
into
jecxz
std
roll
test
add
ja
lds
scas
sub
add
mov
add
push
xor
add
lahf
or
add
add
mov
mov
jns
popa
lods
jmp
add
rcrl
jl
fwait
dec
inc
cltd
xchg
xchg
dec
pop
push
pop
mov
inc
pop
add
add
push
push
add
scas
mov
mov
add
mov
dec
xor
add
popl
add
inc
add
add
add
mov
dec
mov
pop
mov
out
jle
add
and
add
add
xchg
mov
push
stc
add
pop
sub
add
pop
addl
dec
addb
push
push
mov
outsl
mov
popf
pusha
xchg
pusha
push
mov
add
mov
and
addb
repnz
push
aas
js
rorb
add
jne
enter
das
loopne
sbb
jb
push
add
sub
jae
or
add
adcl
push
push
rcrb
mov
aam
gs
add
add
into
lahf
push
push
fcoml
dec
mov
add
std
mov
xor
lods
add
xchg
add
stos
add
repz
cld
lahf
dec
dec
cmc
mov
test
add
out
je
arpl
add
or
mov
add
loopne
int
clc
xchg
mov
mov
mov
lds
mov
insb
sub
add
pop
jl
ret
dec
iret
scas
and
add
inc
aam
cli
aas
jb
add
sub
test
add
sub
inc
lods
push
add
adc
xchg
call
xchg
call
pop
addb
jbe
jns
mov
inc
pop
xchg
loope
jne
test
add
in
mov
add
int3
mov
cmp
jle
push
adc
dec
in
mov
ret
movsw
inc
or
add
add
xchg
loop
mov
add
add
jnp
lea
pushf
je
or
add
inc
stos
add
cmp
ja
push
ljmp
jo
mov
jp
push
inc
fdivr
mov
add
add
add
int3
fiaddl
sub
testb
inc
sub
add
mov
add
shlb
add
sub
xor
movb
add
loope
test
jle
out
aad
iret
push
or
jns
add
notb
add
js
lahf
loop
sub
add
add
into
xchg
or
add
add
jo
xor
add
push
pop
sarb
popf
ret
inc
jp
test
add
add
test
aas
lahf
push
hlt
int
jbe
jae
lfs
