add
add
jnp
jnp
xor
xor
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
pop
pop
or
or
or
incl
and
and
and
and
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
div
div
div
div
div
div
mulb
scas
scas
scas
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
addl
jnp
jnp
jnp
jnp
jmp
add
add
add
dec
xor
xor
xor
xor
xor
jne
pop
pop
add
add
add
cwtl
cwtl
add
add
add
into
pop
pop
pop
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
xchg
xchg
xchg
add
add
add
push
push
jecxz
rol
xchg
xchg
pop
pop
pop
pop
add
add
jae
add
add
lock
lods
lods
mov
add
or
or
or
or
or
loope
loope
loope
adc
scas
scas
scas
scas
movsl
movsl
movsl
movsl
mov
mov
mov
cli
cli
cli
cli
cli
cli
cli
and
and
push
adc
add
sbb
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fcmovnu
add
add
inc
inc
inc
inc
inc
inc
inc
add
leave
xor
xlat
xlat
xlat
xlat
enter
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
add
push
push
push
push
push
push
ficoms
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
ret
ret
nop
nop
nop
nop
nop
jmp
jmp
adc
jo
jo
jo
jo
add
add
mov
add
add
add
add
add
and
and
and
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
add
pusha
jmp
jmp
add
add
add
add
loopne
loopne
loopne
or
or
or
jo
popf
popf
popf
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
add
jl
jl
jl
jl
jl
jl
jl
mov
mov
sbb
sbb
mov
mov
mov
xor
push
push
add
add
jl
jl
xchg
xchg
xchg
xchg
xchg
xchg
mov
movl
es
loope
jmp
jmp
in
in
in
in
rol
rcll
inc
inc
inc
push
push
mov
jb
jb
dec
xchg
mov
and
and
and
and
and
and
and
and
adc
adc
adc
adc
adc
adc
add
pop
pop
rol
les
cwtl
cwtl
cwtl
cwtl
inc
inc
add
mov
jae
repnz
lcall
lcall
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jno
jno
jno
fwait
fwait
fwait
fwait
fwait
fwait
fwait
mov
mov
lock
cltd
cltd
cs
inc
loope
loope
loope
loope
jb
jb
jb
jb
jb
jb
jb
repnz
add
add
add
adc
adc
adc
adc
or
or
or
or
or
in
in
add
xchg
add
add
add
cmp
cmp
cmp
cmp
add
xchg
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
mov
mov
mov
mov
add
inc
inc
inc
inc
inc
inc
adc
adc
adc
sbb
sbb
sbb
sbb
sbb
sbb
jb
push
push
push
push
push
push
push
push
jbe
jbe
add
je
je
je
add
pushf
pushf
pushf
pushf
pushf
pushf
out
mov
inc
inc
inc
je
je
add
mov
mov
mov
mov
mov
mov
loopne
mov
mov
mov
add
add
loop
pop
dec
cmp
cmp
cmp
cmp
xchg
xchg
addr16
xor
idiv
stc
stc
stc
stc
stc
stc
adc
enter
or
or
and
and
add
repnz
inc
inc
fcompl
sbb
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
stos
stos
stos
jnp
jnp
add
add
add
adcl
dec
dec
dec
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
test
xlat
lds
addb
xor
mov
lret
lret
lret
lret
lret
loope
movsl
movsl
movsl
movsl
insl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
out
out
out
mov
in
in
in
fcmovnu
fcmovnu
add
add
add
gs
pusha
pusha
pusha
pusha
pusha
pusha
pusha
jp
jp
jp
xor
xor
inc
inc
and
and
and
and
and
and
add
leave
leave
repz
add
loope
add
add
add
dec
dec
dec
dec
dec
dec
dec
sbb
push
push
cs
les
push
push
push
push
push
push
push
push
push
push
push
push
push
ss
add
push
push
ficomps
add
add
in
in
in
in
in
in
in
in
in
div
div
div
div
div
div
div
notb
push
push
push
push
push
push
push
push
push
push
push
push
fcomp
fdivrs
cmp
cmp
cmp
fsts
add
add
sub
add
add
add
adc
adc
adc
jns
test
int3
int3
es
stos
stos
stos
or
or
lock
add
sub
sub
sub
cmp
cmp
or
cltd
pop
pop
pop
lods
dec
loope
loope
loope
insl
insl
insl
insl
enter
enter
adc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
addl
jg
jg
jg
adc
adc
adc
out
out
out
out
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
inc
mov
pop
pop
pop
arpl
aad
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
add
pop
pop
pop
pop
pop
test
jmp
jmp
fs
stc
stc
push
push
push
push
push
push
ret
add
add
add
pop
pop
pop
pop
add
add
add
add
add
add
aad
aad
aad
test
test
ljmp
ljmp
mov
mov
mov
mov
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
lcall
int3
int3
int3
int3
int3
and
add
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
push
push
push
arpl
arpl
arpl
cld
cld
sub
sub
sub
add
add
xchg
add
pop
pop
pop
pop
pop
jbe
add
add
shrl
add
and
sbb
add
dec
dec
dec
dec
dec
mov
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
pop
pop
pop
add
add
mov
sbb
sbb
rol
roll
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
mov
movsb
movsb
cld
cld
fwait
fwait
fwait
fwait
add
add
add
fsubl
arpl
arpl
out
out
out
sbb
dec
dec
dec
jae
jae
jae
push
push
push
push
push
push
push
push
push
add
xchg
xchg
xchg
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
bound
mov
mov
mov
add
fstp
fstp
fstp
fstp
fstpl
sbb
push
jns
jns
jns
mov
add
add
add
movaps
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
movsb
movsb
add
add
add
add
adc
stos
stos
adc
adc
adc
adc
adc
adc
data16
adc
add
add
inc
out
div
push
push
push
push
push
testb
add
add
add
add
mov
mul
in
in
in
in
in
in
in
add
add
mov
mov
mov
dec
dec
dec
dec
js
js
sbb
pop
pop
mov
mov
xchg
xchg
mov
dec
rol
aas
aas
rcl
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
xor
xor
icebp
icebp
popa
popa
popa
popa
add
add
add
add
mov
pop
pop
fldenv
addr16
sbb
sbb
sbb
sbb
sbb
lods
lods
lods
lods
lods
lods
lods
add
rol
rol
rcrl
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
xchg
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
je
add
gs
gs
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jb
jb
jb
jb
jb
push
push
push
push
push
push
std
std
std
add
add
pusha
out
out
sbb
sbb
sbb
add
jb
mov
mov
mov
add
add
add
ja
ja
es
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sbb
mov
lods
lods
add
add
sub
loopne
add
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
add
sub
sub
sub
mov
popf
popf
popf
popf
popf
popf
dec
dec
dec
dec
repnz
add
add
mov
mov
mov
mov
fnstsw
sbb
add
add
cli
or
or
or
or
or
or
or
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
incl
inc
inc
sub
sub
sub
xchg
fcmovnu
test
add
add
popf
popf
popf
jecxz
lock
add
add
data16
mov
dec
dec
dec
dec
dec
add
in
in
in
in
in
in
in
in
in
in
in
in
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
xor
xor
and
int3
int3
int3
int3
int3
int3
int3
int3
adc
adc
adc
add
inc
inc
inc
inc
dec
dec
dec
dec
dec
dec
dec
stos
stos
stos
stos
idiv
add
add
bound
bound
bound
bound
xor
xor
add
add
push
push
push
push
push
push
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
lret
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fs
popa
popa
cmp
clc
clc
clc
clc
clc
clc
clc
push
push
add
add
add
add
pop
pop
pop
pop
pop
pop
jg
jg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
hlt
hlt
hlt
hlt
hlt
hlt
add
inc
inc
imul
add
jno,pn
jno
jno
jno
push
push
push
push
push
push
push
push
cmpsb
add
add
dec
mov
pop
pop
lahf
lahf
lahf
add
pop
aas
aas
aas
aas
push
push
cmp
cmp
cmp
cmp
addb
add
push
push
push
add
add
mov
fcmovnu
fildl
add
add
gs
cmc
add
add
add
and
and
and
and
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
leave
stos
add
add
inc
inc
add
cmp
adc
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
addb
loope
loope
loope
loope
loope
loope
loope
pushf
pushf
pushf
add
add
add
lea
add
add
and
and
rol
rol
add
jmp
mov
addr16
in
in
in
in
add
add
cmp
add
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
cmp
imul
rcl
rcl
rcl
roll
add
mov
mov
mov
add
xor
xor
xor
xor
xor
xor
xor
xor
es
out
out
out
scas
scas
add
mov
mov
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
filds
sub
xor
xor
xor
cmp
lds
add
and
and
and
push
push
push
push
push
add
add
add
cmpsl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
fs
rcl
rcl
rcl
rcl
rcl
rcl
ror
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
add
jp
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xor
xor
xor
repnz
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
vhsubpd
jge
jge
mov
add
adc
and
rcl
rcl
rcl
rcl
rcl
es
jge
jge
jge
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
add
addr16
cld
scas
scas
scas
scas
scas
mov
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
push
push
add
hlt
hlt
add
add
addr16
and
add
add
daa
daa
daa
mov
loopne
loopne
loopne
adc
adc
adc
adc
mov
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
jp
jp
jp
jp
jp
jp
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lcall
movl
add
add
add
in
in
in
in
in
in
ret
ret
ret
add
add
repz
xlat
xlat
push
or
or
add
add
add
iret
inc
inc
inc
inc
inc
inc
inc
inc
es
loopne
loopne
loopne
mov
jae
jae
jae
push
push
push
push
push
push
push
icebp
icebp
icebp
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
mov
sub
sub
sub
sub
sub
and
and
and
and
jg
jg
aas
aas
add
add
in
in
in
add
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
addr16
insl
insl
insl
insl
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
dec
dec
dec
dec
dec
dec
dec
dec
ljmp
add
add
add
add
rol
xchg
ja
ja
inc
inc
inc
inc
leave
add
add
or
fs
jo
jo
jo
jo
shrd
lods
lods
lods
lods
lods
lods
lods
dec
dec
dec
dec
dec
add
add
add
add
add
add
add
add
shll
jo
jo
dec
xchg
adc
adc
adc
add
out
out
ja
ja
mov
mov
add
dec
dec
dec
dec
dec
fcmovu
fcmovu
fcmovu
fiaddl
add
add
sbb
sbb
sbb
sbb
lret
lret
lret
call
call
jle
add
add
add
ds
or
or
or
or
sti
add
add
lods
lods
lods
lods
lods
lods
lods
mov
or
add
outsl
add
add
xor
jl
jl
stos
stos
stos
stos
stos
stos
jmp
add
das
das
das
das
das
das
das
das
das
das
das
das
in
rol
sar
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
rcl
rcl
rcl
cmc
push
sqrtps
add
pop
pop
pop
xchg
xchg
xchg
mov
mov
add
data16
out
out
out
out
out
out
mov
mov
mov
mov
mov
les
sub
sub
sub
pusha
gs
pop
pop
lret
lret
fwait
fwait
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
rcl
stos
stos
stos
stos
stos
stos
jecxz
cmp
inc
inc
inc
inc
add
rol
push
add
add
fstp
fstp
fstp
fstp
adc
addb
dec
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
sldt
add
or
add
add
add
or
or
daa
daa
daa
sbb
cwtl
cltd
cltd
cltd
push
push
sbb
stc
stc
stc
stc
stc
stc
ja
lock
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
loope
loope
loope
loope
loope
add
arpl
arpl
add
add
mov
mov
mov
fiadds
or
or
xchg
cmp
cmp
cmp
dec
dec
dec
dec
dec
dec
dec
or
or
mov
mov
ds
mov
repnz
rcl
sbb
add
add
hlt
hlt
hlt
pop
pop
pop
pop
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
push
pop
pop
pop
pop
pop
movsb
movsb
movsb
movsb
movsb
movsb
movsb
rol
cmp
cmp
lods
lods
lods
lods
lods
dec
add
add
add
jno
jno
jno
jno
jno
mov
faddl
xchg
sub
in
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
push
push
push
add
add
add
add
mov
movsl
push
push
push
push
push
push
push
push
push
push
push
and
and
and
and
and
das
das
das
das
das
das
das
cmpsb
sbb
pop
pop
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
dec
dec
dec
dec
push
push
push
add
hlt
hlt
xor
xor
xor
xor
sbb
sbb
sbb
sbb
sbb
sbb
push
rcl
mov
mov
mov
enter
in
add
add
cld
cld
cld
cld
add
repnz
pop
pop
pop
pop
pop
pop
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
jp
jp
jp
jb
fisttps
or
or
fnstsw
add
push
push
push
mov
mov
push
push
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
mov
nop
nop
nop
nop
add
lock
or
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
jge
jge
jge
jge
jge
jge
out
add
add
rcl
or
push
push
push
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
hlt
hlt
hlt
hlt
hlt
hlt
mov
in
in
or
or
add
mov
mov
mov
mov
mov
inc
inc
daa
daa
daa
daa
je
imul
add
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
add
stos
stos
stos
xchg
xchg
xchg
xchg
xchg
xchg
ja
ja
ja
cwtl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
ljmp
cs
dec
dec
dec
dec
dec
dec
dec
dec
sbb
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
imul
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
sbb
addb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
adc
inc
inc
inc
add
add
call
stc
stc
stc
stc
stc
stc
add
add
sub
add
add
push
push
push
add
and
add
add
add
cmpsb
xchg
xchg
xchg
xchg
or
or
add
add
test
test
add
add
add
xor
xor
xor
xor
xor
xchg
xchg
dec
dec
insb
insb
insb
mov
mov
add
add
add
push
push
push
push
add
add
cmp
cmp
cmp
cmp
add
add
gs
and
mov
div
div
lahf
mov
lcall
jp
add
add
add
in
in
in
repnz
add
popf
add
bound
add
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
add
add
add
add
add
fs
fs
mov
mov
mov
sub
push
push
push
push
push
push
add
add
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
dec
dec
dec
dec
dec
hlt
hlt
hlt
hlt
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
imul
imul
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
stos
stos
adc
adc
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
jo
jo
jo
loope
loope
mov
mov
mov
mov
stc
stc
stc
stc
stc
stc
stc
adc
sub
sub
jg
repz
repz
iret
iret
iret
insl
insl
insl
insl
insl
insl
insl
insl
mov
mov
mov
add
add
jge
cmc
cmc
cmc
cli
jb
jb
add
add
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jns
jns
jns
jns
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
mov
and
fstl
push
push
push
push
push
push
push
push
push
push
rcrb
pop
pop
add
add
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
rcl
shlb
jbe
jbe
outsl
outsl
outsl
outsl
outsl
outsl
and
outsb
outsb
outsb
outsb
out
std
std
std
cmp
inc
inc
inc
inc
inc
inc
insl
insl
insl
insl
insl
add
add
add
mov
xchg
lret
lret
lret
lret
lret
dec
mov
xor
xor
xor
xor
xor
xor
and
cmovp
dec
dec
dec
add
mov
mov
add
sub
add
out
mov
ja
add
xchg
xchg
loop
loop
loop
loop
loop
loop
add
cmp
cmp
xor
xor
add
movsl
movsl
bound
bound
bound
bound
sub
js
js
js
js
js
js
js
js
js
pop
pop
pop
pop
popa
popa
popa
popa
popa
popa
push
push
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
testb
cmp
fwait
xchg
add
insl
insl
insl
insl
insl
insl
insl
add
cmpxchg
ret
ret
ret
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
in
rcl
rcl
shll
in
repnz
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
mov
add
add
mov
mov
mov
add
pop
pop
pop
pop
add
add
dec
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
add
lock
sbb
add
add
add
dec
dec
dec
dec
add
jle
jle
jle
jle
jle
add
add
add
mov
or
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
inc
inc
inc
add
cmpsb
cmpsb
cmpsb
stos
stos
stos
es
mov
mov
mov
fs
div
div
div
add
aam
aam
aam
add
add
push
push
push
in
in
ret
ret
add
rcl
rcl
rcl
rcl
shlb
popa
popa
popa
add
and
and
and
and
and
jecxz
jecxz
loope
das
add
inc
inc
adc
adc
adc
adc
out
out
out
out
out
out
mov
push
push
push
add
add
add
mov
mov
mov
inc
add
add
lahf
lahf
sbb
movl
add
add
add
add
xchg
xchg
pop
xor
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sub
and
and
and
add
test
bound
pop
pop
pop
pop
int3
int3
leave
leave
leave
add
add
addl
xor
xor
xor
stos
stos
stos
stos
stos
mov
mov
aas
aas
aas
aas
aas
aas
aas
aas
aas
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
data16
stos
stos
stos
stos
add
sbb
out
sbb
push
push
add
mov
mov
mov
icebp
icebp
icebp
cmp
add
add
inc
inc
inc
cwtl
cwtl
cwtl
cwtl
cwtl
add
add
add
add
sub
insl
add
add
sbb
sbb
addb
addb
addb
add
add
lock
sti
sti
sti
sti
sti
popf
popf
sub
sub
sub
pop
pop
dec
dec
mov
inc
inc
inc
add
test
popf
popf
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lret
add
add
add
add
shrb
lods
lods
lods
xchg
xchg
add
add
add
cs
mov
xchg
xchg
xchg
xchg
outsl
outsl
outsl
outsl
adc
adc
lret
lret
imul
addl
addl
add
add
add
add
and
and
dec
dec
dec
dec
dec
cli
cli
cli
add
add
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
test
add
mov
add
imulb
lock
in
in
in
and
add
add
add
push
push
push
push
push
push
push
push
push
push
push
push
add
sbb
mov
mov
adc
add
ret
call
out
out
out
out
out
add
add
add
add
int
add
jmp
jmp
jmp
jmp
pop
pop
ja
add
add
add
lret
lret
in
in
inc
add
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cli
cli
cli
cli
movsb
out
out
je
je
je
bound
bound
bound
bound
bound
outsb
jbe
jbe
add
ret
ret
ret
arpl
nop
dec
lods
ja
ja
ja
add
mov
mov
add
aam
ss
ret
ret
xchg
xchg
add
add
add
add
add
add
in
in
ss
dec
dec
dec
dec
jbe
jbe
pop
pop
or
or
or
pop
mov
pop
pop
pop
or
or
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
add
mov
rcl
rcl
add
jne
jne
jne
stc
enter
sub
sub
add
add
add
add
les
jnp
jnp
ret
in
addb
add
xchg
add
add
scas
scas
scas
scas
mov
mov
add
fs
add
outsb
outsb
outsb
outsb
add
and
and
and
and
and
and
and
and
add
out
out
out
out
gs
push
push
push
push
push
push
push
add
add
add
repnz
scas
scas
scas
scas
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
int
push
mov
mov
add
aad
jg
mov
roll
push
push
push
push
push
push
push
push
push
push
push
push
push
add
ss
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
std
std
std
std
std
std
std
add
add
add
inc
inc
inc
inc
inc
inc
inc
enter
stc
stc
aad
cld
cld
fstp
fstp
fucomp
in
in
in
in
cmp
cmp
add
add
add
add
push
add
add
jae
jae
mov
jecxz
jecxz
jecxz
insb
insb
insb
insb
insb
insb
add
fstp
fstp
fstp
fstp
fstp
add
jnp
jnp
jnp
jnp
add
add
add
sbb
rcl
sarl
ds
addb
mov
pop
pop
pop
pop
inc
inc
inc
add
fildl
add
add
add
mov
std
std
std
std
std
std
lods
lods
lods
lods
aam
loopne
loopne
loopne
loopne
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
call
xlat
xlat
xlat
xlat
out
out
out
out
rcl
lea
xchg
pusha
pusha
pusha
pusha
pusha
pusha
pusha
ss
jp
jp
stos
stos
stos
stos
stos
stos
stos
stos
stos
test
test
add
inc
inc
inc
inc
inc
inc
inc
out
out
and
and
and
and
and
and
and
cltd
cltd
add
test
out
cs
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
xchg
xchg
xchg
nop
nop
nop
nop
add
add
add
pushf
pushf
pushf
pushf
pushf
jge
jge
jge
jge
add
add
test
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
jne
jne
jne
cwtl
cwtl
addl
das
das
lods
lods
lods
add
add
cmp
cmp
cmp
lahf
lahf
lahf
lahf
lahf
lahf
dec
push
dec
dec
dec
dec
dec
dec
dec
dec
mov
or
or
or
or
add
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
aam
aam
aam
popa
add
fs
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
rcl
rcl
rcl
movsb
movsb
movsb
movsb
and
push
push
push
push
push
push
push
xchg
add
add
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
and
and
and
add
xchg
xchg
xor
mov
cld
cld
cld
cld
cld
cld
jo
or
or
or
div
div
mov
xchg
xchg
xchg
xchg
xchg
xchg
ret
mov
mov
mov
mov
mov
cltd
cltd
cltd
cltd
jbe
imul
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
bound
bound
bound
dec
jp
lds
loopne
mov
inc
pusha
js
xor
movsl
mov
mov
sub
push
cltd
pop
sub
shlb
mov
add
fwait
sbb
mov
pusha
adc
in
cmp
xchg
aad
icebp
popf
and
addb
pop
sti
jb
sub
adcb
push
stos
add
sahf
lock
mov
fmul
cltd
test
add
inc
rcrb
and
or
rorb
dec
add
xchg
inc
adcb
sbb
sub
and
sbb
shlb
mov
outsb
adc
rcrb
movsl
push
cmpsb
add
xlat
pop
xor
inc
rcr
std
sahf
adc
adc
std
mov
mov
add
test
ja
in
and
sbb
xor
in
popa
xchg
rcll
xor
scas
dec
and
call
add
cld
mov
shlb
mov
das
sbb
add
roll
pusha
lock
ljmp
add
jg
fwait
push
and
fsubrp
xchg
fiaddl
pusha
pop
loope
jno
jbe
push
adc
jno
mov
sahf
in
add
inc
fidivs
inc
in
mov
test
popf
mov
je
fldl
mov
push
jmp
mov
rolb
push
inc
leave
inc
neg
loop
loop
pushf
stos
xchg
rolb
pushf
inc
adc
stc
mov
pop
std
cmpsb
pusha
and
jb
in
xchg
add
xchg
mov
out
add
pusha
out
push
iret
or
loopne
mov
inc
mov
rolb
fs
in
inc
sbbb
xchg
push
mov
iret
inc
lds
add
inc
movsl
add
shr
cs
pusha
mov
int3
cmp
lret
add
add
and
mov
add
loop
mov
call
sub
test
pusha
push
and
mov
add
shlb
push
sarl
mov
jl
pop
int3
push
aam
mov
leave
aaa
insb
int
or
inc
sub
mov
out
hlt
and
and
jle
lea
call
fstl
sub
test
rcr
rcrl
pusha
and
pusha
inc
cmp
mov
fdiv
gs
cmpsb
pusha
and
hlt
loopne
loope
ss
sub
sar
sub
jp
mov
nop
mov
pusha
repz
jne
adc
iretw
mov
jo
aad
xor
cmp
int
mov
lret
mov
push
mov
into
xor
pop
shrb
mov
and
cmc
into
pop
sbb
addb
fisttpll
movsl
adc
and
inc
aaa
dec
and
pusha
push
pop
imul
xchg
lret
push
mov
test
inc
loopne
mov
mov
cmp
and
pusha
shlb
gs
arpl
inc
pop
xchg
xor
arpl
sbb
sub
loopne
and
mov
imul
mov
test
loopne
out
and
and
push
shl
je
mov
pop
mov
shl
push
call
add
in
loop
out
xor
xchg
add
lcall
fcmovnb
mov
data16
xchg
pop
and
test
repz
jo
addb
scas
rolb
and
and
and
add
or
and
daa
and
test
scas
and
pushf
sub
pusha
out
push
jecxz,pt
xor
inc
push
pop
pop
xor
xor
stos
rolb
hlt
js
xor
jbe
fs
xor
cmp
js
fstpl
imul
addl
mov
cmp
xchg
or
loopne
insl
jge
xchg
jmp
imul
inc
cmc
push
pop
ret
loope
dec
andl
mov
mov
repz
inc
scas
js
mov
adcl
and
mov
pusha
data16
data16
mov
mov
mov
bound
pop
or
jg
loopne,pn
jecxz
sti
ret
test
and
pusha
and
xor
loopne
cmp
dec
insb
inc
pop
sbb
add
int3
sub
add
mov
push
jne
inc
loopne
sub
fistpll
sarl
shrl
popl
mov
or
ja
outsb
rolb
arpl
imul
loopne
movsl
pop
hlt
sbb
pop
xchg
add
pusha
hlt
leave
shll
and
pop
stos
mov
insl
mov
loopne
xor
cmp
cmp
xlat
addl
adc
adc
ret
call
int3
cmp
xlat
out
and
mov
sub
mov
js
je
leave
gs
test
loope
scas
sti
mov
jg
push
cmp
mov
push
xchg
inc
mov
mov
add
loopne
inc
stos
cli
jns
mov
cmp
adc
push
out
fimull
mov
andb
add
mov
adc
mov
ret
xchg
inc
pop
jge
inc
rclb
inc
icebp
add
shrb
cli
imul
lahf
out
jno
popf
dec
dec
jg
mov
sarb
inc
jg
pop
cmp
aam
rcrl
aaa
nop
leave
cmp
or
andb
scas
andb
rol
lods
mov
jns
and
mov
lds
je
cld
add
pusha
sub
pop
fildll
inc
add
in
test
fldcw
pop
insl
xor
cmp
and
add
loopne
xor
add
mov
aas
pop
push
shl
or
add
in
adc
push
dec
pop
jmp
pop
cltd
scas
stos
and
xor
add
jae
outsl
pop
and
arpl
add
int
aas
jecxz
pop
inc
or
add
out
cmc
shrb
add
outsl
pop
lods
pusha
mov
pop
mov
shl
stc
icebp
xor
add
jo
jg
sub
xor
and
sbb
pop
in
mov
add
insl
push
cli
les
dec
movsl
inc
mov
insl
pop
push
fldenv
lahf
pop
notl
add
jmp
sub
xorb
ficomps
add
mov
mov
repnz
or
and
cli
inc
dec
fs
add
add
fs
repnz
xor
push
dec
addr16
ljmp
cmp
insl
jbe
andb
mov
add
shlb
and
int3
push
movsl
ficomps
xorb
add
mov
addr16
fldenv
dec
mov
decb
push
adc
mov
pusha
lret
xlat
push
movsl
xor
jns
cmp
mov
jmp
aam
adc
aam
stos
and
xlat
repnz
xchg
push
cmp
fmuls
das
imul
xor
out
pop
cmp
add
adc
inc
mov
cmp
lahf
mov
add
and
mov
leave
ja
push
xchg
fs
add
enter
xor
test
inc
and
jb
iret
pop
dec
push
pop
es
and
call
fdivl
xor
pop
and
and
adc
mov
cld
jl
pusha
xorb
aam
inc
add
push
enter
fidivrs
or
sub
pusha
pusha
jge
push
xor
out
dec
push
int3
pop
lds
ja
add
push
loopne
fucomi
int
dec
sti
xchg
xchg
mov
pop
and
sub
mov
cmpb
add
loopne
mov
mov
in
push
lock
inc
mov
mov
inc
hlt
std
add
rcrb
pop
aas
pop
leave
out
mov
inc
out
shll
enter
scas
add
xchg
andb
xchg
mov
and
inc
shlb
insb
jmp
outsl
mov
lret
cmp
in
int3
jbe
pusha
shlb
in
sbb
outsl
sbb
loopne
dec
sbb
add
and
enter
cltd
clc
shlb
jge
sub
sarb
ret
mov
mov
pop
sbb
push
jns
jne
add
dec
mov
dec
gs
pop
add
fsubr
lds
cmc
leave
jb
xchg
sti
fst
adc
dec
je
in
das
and
and
sbb
adc
cmp
dec
mov
mov
outsl
aam
inc
xchg
mov
loopne
sub
shr
rcl
add
mov
mov
addr16
int
lret
scas
stos
loopne
pop
outsb
leavew
mov
shrl
mov
push
push
xor
inc
pusha
mov
add
pop
in
mov
orb
xorb
andb
pusha
add
andb
test
adc
jp
xchg
and
adc
in
mov
push
inc
and
dec
xchg
push
mov
mov
int3
mov
test
add
out
add
loopne
mov
dec
enter
push
pusha
sar
rolb
jmp
test
inc
shlb
mov
jg
addl
cmp
add
and
push
dec
into
loop
mov
test
mov
pop
mov
sti
fnsave
and
rcr
fistpl
mov
xchg
test
rcll
inc
mov
fnstsw
inc
gs
adc
or
xor
pop
pop
cmp
xchg
cmpb
in
rcrl
std
ss
icebp
pop
xchg
les
xor
add
push
add
cmpsl
pop
test
push
mov
andb
mov
ss
push
mov
movsb
and
or
dec
jae
ret
stos
scas
add
push
push
jne
in
mov
cmp
data16
sbb
fwait
jmp
push
inc
icebp
push
and
inc
cmp
into
adc
dec
data16
mov
mov
ds
loop
cld
mov
shlb
push
mov
aad
cmp
mov
mov
pop
shrl
pop
leave
push
ret
mov
bound
pop
enter
shlb
loop
jnp
mov
js
jne
scas
andb
inc
cmp
mov
loopne
mov
inc
and
pusha
add
ja
stos
inc
mov
mov
mov
push
enter
add
mov
xchg
sti
mov
mov
jmp
cld
cmp
jmp
or
mov
mov
fstpl
orl
and
inc
loopne
and
xor
aaa
hlt
fidivrs
pusha
sub
cmp
push
xchg
lret
sub
lcall
outsl
fdivrs
and
inc
lcall
cwtl
xor
push
or
sbbb
xchg
mov
add
mov
scas
loopne
shrl
gs
adc
es
and
pop
jl
ret
fadds
fisubrl
and
add
add
loopne
inc
xor
mov
and
andb
dec
xor
push
pusha
mov
ficomps
cltd
inc
dec
mov
in
subl
lods
imul
dec
sbb
es
and
cmp
inc
add
push
mov
loopne
pop
into
sbb
outsl
adc
int3
push
dec
mov
dec
in
or
loopne
mov
pop
add
pusha
movsb
addb
push
dec
lahf
outsl
pop
popa
popa
pop
stc
adc
lahf
test
jg
shlb
sub
es
xchg
xor
lds
or
loopne
mov
mov
pusha
pusha
lock
and
cmp
repz
adcb
adc
imul
pusha
adc
add
orb
mov
jmp
pop
add
loopne
pop
xchg
loop
stos
pop
pusha
mov
imul
bound
mov
or
enter
sub
loopne
push
push
lods
xcrypt-cbc
cmpsl
adc
pop
sub
and
jle
addb
lock
sar
pusha
mov
subb
add
loop
repz
mov
jl
inc
rolb
pop
lcall
jnp
addb
and
xchg
cmc
mov
int
inc
shl
stc
push
xchg
pop
jo
outsb
pop
fcmovnu
mov
xchg
jns
or
test
aad
les
cld
sbb
jb
aam
sub
rcr
ficoml
xchg
ds
cmp
inc
inc
mov
lods
and
outsb
loopne
and
pusha
pop
push
cmc
mov
js
cmp
or
add
je
mov
jl
ss
adc
cmp
sbb
es
leave
lods
cs
aaa
mov
xchg
cmp
mov
pop
fidivrs
lahf
iret
or
fistl
pusha
shrb
xor
pusha
add
add
adc
mov
inc
test
pop
scas
andb
test
andb
or
add
scas
add
rorb
inc
adc
pushf
clc
aam
push
push
jge
shlb
add
into
pop
andb
pusha
sub
into
je
clc
adc
push
inc
orb
and
cmp
push
je
dec
inc
lahf
stos
and
addr16
sbb
jecxz
test
pusha
xor
add
push
add
inc
adc
and
mov
les
xlat
scas
sti
xor
rolb
mov
fucomi
jne
jo
dec
cmp
add
pusha
mov
lahf
inc
pop
push
loopne
in
push
jbe
pop
xor
jnp
and
mov
in
and
loopne
movsl
mov
add
pusha
es
or
fistpll
inc
sahf
push
push
icebp
xor
and
mov
add
cmp
dec
sub
and
addb
pop
sahf
hlt
mov
and
xchg
xchg
jmp
xchg
pop
popa
sbb
mov
test
subb
jo
dec
or
inc
mov
push
xchg
inc
std
sti
fwait
pop
andb
cmpsl
aad
pop
jecxz
sub
rolb
pusha
inc
xchg
stc
push
call
inc
add
loopne
scas
and
and
dec
jno
and
inc
pushf
push
inc
and
jmp
mov
loopne
movsl
jecxz
dec
rclb
and
sahf
in
das
push
out
xor
jl
pop
in
int3
loopne
fstpt
jo
or
shlb
and
cmp
les
daa
cmp
inc
rclb
and
mov
cmc
pushf
mov
adc
inc
and
cmp
daa
jmp
adc
pop
jb
pop
rcll
adc
std
cmp
mov
pop
xrelease
enter
mov
mov
pusha
push
nop
push
and
pusha
imul
bnd
popf
jae
cmpsl
push
inc
pop
icebp
nop
sbb
fstpt
push
jnp
leave
dec
ja
pop
aad
dec
shlb
adc
sbb
cwtl
add
and
sbb
and
loopne
xchg
in
hlt
add
cld
xor
push
rol
leave
mov
xchg
lock
cltd
pop
pop
shll
aas
xor
xor
dec
pop
inc
bound
subb
jp
cmp
jb
mov
loopne
je
cmpsb
loopne
cmpsl
jb
shl
into
lds
and
inc
mov
and
push
sub
addb
xor
add
je
and
mov
inc
sbb
lea
pop
out
mov
mov
call
cmpsb
inc
pusha
mov
add
lds
loop
mov
outsl
and
imul
imul
dec
xchg
push
inc
add
mov
and
mov
fwait
push
aaa
aaa
push
add
mov
add
rcll
jae
cmovns
cwtl
mov
add
dec
popf
push
hlt
loope
mov
lret
out
push
inc
and
in
mov
push
dec
repnz
mov
rcl
and
fidivs
les
mov
test
inc
stos
loopne
mov
loopne
mov
adc
inc
movsb
loopne
inc
pushl
test
adc
es
pusha
xor
into
adc
out
insl
adc
cmpsl
call
add
add
repnz
rolb
mov
push
mov
or
cmp
inc
jp
aad
decl
andb
and
and
dec
push
mov
cltd
xchg
sbb
into
ret
push
popf
pusha
gs
test
mov
cld
sub
and
inc
add
es
adc
aaa
bound
and
ficomps
adc
add
fcmovnu
inc
dec
jns
cmp
pop
lret
add
add
loopne
push
add
insl
dec
cmp
shlb
add
pop
lret
int3
dec
inc
pop
pop
out
jmp
jne
lods
pop
int3
xor
ljmp
addl
push
rolb
lea
icebp
pop
subl
or
in
rcll
andb
inc
inc
jp
and
loopne
or
mov
xor
xor
and
loopne
insl
aam
push
push
popa
in
add
add
repz
in
or
adc
cli
push
mov
out
call
and
or
lret
scas
jmp
mov
cmp
jne
loopne
movsb
inc
mov
cmp
push
arpl
daa
out
aas
out
call
movsl
mov
or
inc
lods
dec
test
mov
and
bound
pusha
add
aam
mov
lods
es
and
adc
jnp
push
out
rcll
ljmp
and
mov
test
addb
inc
and
jo
addr16
stos
jne
mov
cmp
inc
pusha
rorl
mov
rolb
pop
push
lods
lret
push
push
pop
in
fistl
les
xor
cmc
and
cli
cltd
pushf
cmpsl
stos
inc
pusha
jmp
xor
and
fdivr
push
jecxz
push
mov
push
push
push
xor
cmp
jne
pop
leave
ret
nop
nop
nop
nop
nop
push
push
call
call
mov
mov
test
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
test
jne
lea
push
call
mov
call
call
mov
call
ret
nop
nop
nop
nop
incl
add
add
incl
add
add
push
enter
leave
xchg
jbe
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
test
jne
pushl
call
test
jl
andl
xor
pop
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
mov
mov
mov
call
mov
mov
movzwl
cmp
jb
test
jne
cmp
je
mov
test
je
and
and
movl
test
jne
mov
add
movl
mov
mov
mov
mov
and
or
shl
mov
mov
andl
andl
test
jne
call
testb
jne
and
lea
cmpl
jne
push
push
pushl
push
call
mov
cmp
je
push
call
mov
cmp
je
testb
jne
test
jl
mov
mov
mov
mov
mov
call
ret
nop
nop
nop
nop
nop
nop
nop
incl
add
add
add
add
out
add
xchg
jbe
nop
nop
nop
nop
mov
push
mov
call
push
pushl
pushl
pushl
pushl
pushl
call
pop
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
call
mov
mov
mov
cmp
je
cmp
je
cmp
je
mov
cmp
je
mov
mov
cmp
je
mov
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
mov
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
push
lea
push
call
cmp
jl
addw
mov
test
jne
pushl
pushl
pushl
pushl
lea
push
push
call
mov
mov
mov
call
push
push
call
mov
call
ret
nop
nop
nop
incl
add
add
add
add
mov
int3
xchg
push
push
push
call
mov
add
inc
clc
push
push
push
pushl
call
cmp
ja
jb
cmp
jae
mov
lea
mov
mov
mull
cmp
ja
jb
cmp
jae
mov
mov
lea
mov
mov
cmp
jne
push
pop
xor
lea
push
rep
lea
push
push
call
add
push
mov
push
lea
push
push
push
call
push
push
lea
push
push
push
call
mov
mov
mov
cmp
jae
mull
test
ja
jb
cmp
jae
mov
mov
cmp
jb
mov
mov
xor
div
cmp
jb
sub
mov
sub
cmp
jae
mul
test
ja
jb
cmp
jae
mov
mov
mov
sub
pop
inc
mov
sub
pop
mov
pop
leave
ret
mov
jmp
or
mov
jmp
or
mov
jmp
or
andl
jmp
or
andl
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
mov
mov
test
jne
mov
test
jne
mov
or
jne
pop
pop
ret
nop
nop
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
xor
lea
call
add
ret
mov
mov
xor
lea
call
add
ret
nop
nop
nop
nop
nop
mov
push
mov
sub
mov
xor
mov
push
push
xor
push
mov
mov
mov
mov
cmp
jne
mov
push
lea
push
call
xor
mov
mov
mov
lea
push
push
lea
lea
push
movl
movl
mov
call
mov
test
jge
cmp
jne
xor
cmpl
jne
mov
pop
pop
mov
xor
pop
call
leave
ret
je
jmp
mov
jmp
nop
pop
add
add
imul
jb
jns
pop
add
inc
add
dec
add
dec
add
pop
add
outsl
add
je
ja
popa
add
add
add
arpl
jb
outsl
add
outsl
add
je
pop
add
and
mov
and
jne
pushl
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
mov
call
mov
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
call
lea
push
lea
push
lea
push
push
call
mov
cmp
jne
mov
mov
shr
test
jne
cmpl
jne
mov
cmp
je
cmp
jbe
lea
lea
cmp
jne
cmp
jne
pushl
lea
push
call
cmp
jl
addw
mov
test
jne
push
pushl
pushl
lea
push
push
call
mov
cmp
jne
mov
mov
call
push
push
call
mov
call
ret
nop
nop
nop
nop
nop
nop
incl
add
add
add
add
decl
xchg
jbe
loopne
jbe
jle
add
test
pushl
rorb
mov
mov
mov
cmp
sbb
neg
push
push
call
movzwl
mov
mov
cmp
sbb
neg
push
push
call
cmpw
movzwl
mov
je
test
je
mov
lea
mov
mov
cmp
jbe
mov
add
cmp
jbe
mov
mov
mov
cmp
jne
incl
add
mov
test
jne
mov
cmp
jae
cmpl
jl
mov
mov
mov
cmp
jne
incl
add
mov
test
jne
mov
cmp
jae
cmpl
jl
mov
andl
cmp
jae
mov
cmp
jge
mov
movzwl
cmp
jb
movzwl
movzwl
sub
cmp
jg
incl
incl
mov
inc
inc
test
jne
cmp
jae
cmpl
jl
mov
andl
cmp
jae
mov
cmp
jge
mov
movzwl
cmp
jb
movzwl
movzwl
sub
cmp
jg
incl
incl
mov
inc
inc
test
jne
cmp
jae
cmpl
jl
mov
cmp
jne
xor
cmp
jle
mov
mov
movzwl
movzwl
sub
movzwl
sub
movzwl
add
jne
mov
add
add
cmpw
mov
mov
jne
xor
cmp
jne
decl
cmp
jg
mov
cmp
jne
mov
cmp
jne
orl
orl
cmp
jne
cmp
jne
addl
addl
cmp
jne
cmp
je
mov
cmp
je
mov
cmp
jae
mov
cmp
jg
addl
mov
cmp
jae
mov
mov
cmp
jne
cmp
je
mov
cmp
je
mov
cmp
jae
mov
test
jg
addl
mov
cmp
jae
mov
mov
jmp
cmp
jne
cmp
jne
mov
ret
pop
iret
popf
or
dec
inc
std
push
fcoml
icebp
xchg
movsb
pusha
sbbb
mov
mov
mov
mov
or
loop
lods
addb
mov
add
outsb
scas
and
add
notl
into
aaa
aaa
push
pusha
xchg
outsl
and
decb
and
jne
and
bt
and
xor
mov
or
shll
xchg
inc
dec
hlt
arpl
mov
rolb
adc
xchg
xchg
dec
sub
and
add
inc
sti
mov
sbb
pusha
add
pop
mov
xorb
mov
loopne
dec
pminsw
and
add
xchg
mov
cmp
pusha
add
adc
pop
test
jmp
aaa
or
pop
mov
ror
and
pusha
and
pusha
sbb
lahf
cli
xor
inc
rcrb
mov
add
cmp
jge
mov
pusha
test
and
in
ljmp
sub
ror
mov
lcall
sar
out
lods
inc
rcl
adc
aas
sub
sub
orb
adc
dec
cmpsb
addb
cmpsb
and
and
loopne
xchg
add
pop
mov
jmp
xlat
xchg
lods
shlb
cmc
xlat
movsl
or
out
rolb
and
shrb
mov
sbb
insl
mov
loopne
fstps
movsb
add
jo
and
xchg
push
add
mov
jo
adc
dec
stos
lret
and
adc
ss
cmp
pusha
clc
js
xchg
fs
lea
daa
jge
inc
mov
xchg
loop
movsl
andb
cld
lods
sbb
add
in
pushf
pop
pop
cltd
push
pusha
rolb
push
movl
iret
mov
sub
inc
pop
push
rolb
rolb
jmp
adc
pop
or
lock
inc
inc
mov
inc
pop
movsb
loopne
test
inc
inc
mov
sbb
sub
mov
ret
shlb
in
jno
xchg
jo
movsl
cmpsl
adc
lcall
mov
shlb
and
or
jl
out
fidivrl
mov
mov
mov
adc
mov
bound
or
add
pop
jno
andb
js
jecxz
or
mov
xchg
or
repnz
jecxz
pop
mov
mov
xchg
loopne
andb
mov
movsb
mov
and
pusha
xor
and
push
and
sub
repnz
fisttpl
pop
push
xchg
xchg
push
jns
add
in
or
add
rolb
push
ret
pop
aad
ljmp
rcrl
pop
inc
adc
sbb
inc
inc
xchg
addb
adc
xorb
sub
lods
mov
adc
stos
inc
and
push
add
and
push
push
movsl
repz
imul
andb
xor
jge
fisubl
shlb
sbb
inc
or
inc
test
inc
pop
ja
mov
or
out
int
or
inc
sub
push
outsb
push
fnsave
shl
leave
dec
add
sbb
pop
push
out
cs
and
xor
clc
fldt
ja
iret
push
loopne
xchg
add
pop
xor
jecxz
divb
pop
cs
cmpb
andb
rcll
dec
push
and
inc
loopne
mov
inc
inc
fadds
mov
pusha
mov
mov
sub
pop
popa
lods
pusha
loopne
les
imul
add
sbb
sbb
add
add
shlb
cmp
xor
cmp
jmp
push
icebp
jmp
arpl
outsl
addl
test
and
inc
mov
and
lock
jmp
jno
xor
rolb
mov
ret
stos
dec
test
popa
sub
or
mov
out
xor
push
push
int3
mov
lds
pop
mov
pop
jns
mov
daa
aaa
jno
test
lock
cmp
mov
rclb
mov
xchg
imul
cld
cmova
andb
pusha
jmp
mov
loopne
fwait
lods
add
scas
pusha
and
lret
nop
outsl
sbb
imul
popa
call
mov
lea
pusha
dec
test
dec
hlt
roll
pop
xchg
popf
insb
mov
fdivs
jmp
out
add
rcrb
inc
pusha
and
loopne
push
int3
jno
stos
or
mull
sbbl
std
xor
cli
data16
push
dec
push
inc
adc
lock
pusha
pusha
adc
and
xorl
sub
mov
and
push
imul
dec
cwtl
xor
aaa
jb
insl
lahf
cmp
jg
and
sbb
roll
xchg
inc
cltd
int
sbb
repz
adc
mov
loopne
add
xlat
mov
mov
shll
lret
mov
aam
dec
popf
cmpsl
or
jno
mov
sub
loopne
xlat
hlt
insl
dec
cmp
add
aam
pusha
orb
mov
es
mov
add
mov
inc
and
and
jp
add
loopne
mov
pop
and
clc
rol
arpl
mov
mov
incl
xchg
lock
shl
or
cmpb
mov
fstpl
inc
inc
mov
ja
cmp
andl
mov
mov
cld
fs
sub
mov
push
mov
and
and
popa
mov
imul
imul
add
adc
std
lcall
fwait
mov
pusha
xor
xchg
xchg
xor
xchg
mov
lret
mov
pusha
ljmp
and
ret
add
adc
mov
mov
dec
pusha
into
push
add
iret
dec
and
rcr
sub
notb
in
addr16
pusha
hlt
ljmp
shlb
out
jo
enter
xor
subl
mov
daa
sahf
sub
add
fcomps
cmp
pop
imul
add
jg
xchg
popf
xchg
add
pusha
jb
xlat
sbb
push
cmc
pop
fldenv
xor
fisubl
xchg
cld
inc
js
jo
lcall
add
inc
outsl
push
pop
mov
icebp
or
pusha
cmp
adc
repnz
push
imul
and
movsb
add
jecxz
icebp
dec
in
add
jl
sub
xor
fldcw
inc
inc
mov
and
roll
dec
xchg
or
inc
dec
test
pusha
loope
shrl
addb
aad
xchg
add
or
lahf
andb
sar
fsub
sbb
xchg
pop
sub
stc
dec
bound
inc
jg
mov
sub
adc
inc
stos
and
rcl
add
rorb
shlb
mov
pop
mov
adc
addb
imul
sbb
fadd
addb
adc
push
clc
loop
dec
aas
push
andb
int
pop
fs
mov
sub
sbb
mov
mov
lods
and
push
cmpsb
loopne
cltd
jno
and
icebp
xchg
add
xchg
inc
dec
test
push
and
enter
or
rorb
and
aaa
adc
or
push
rol
lock
aas
pop
outsl
xchg
pop
sti
sar
xor
mov
or
sbb
mov
repz
loopne
mov
movsl
pop
sti
sahf
push
push
add
pusha
and
enter
int
pop
cmpsb
pusha
and
das
dec
mov
stos
in
addb
or
jl
add
in
dec
dec
mov
out
jecxz
enter
and
sbb
jge
pusha
loopne
mov
pop
adc
pop
vmwrite
test
sub
dec
ficomps
jecxz
leave
cmc
mov
jge
cs
add
cli
xlat
ss
pop
mov
cmpsb
add
repnz
das
je
rcl
mov
rolb
rol
mov
dec
mov
add
mov
addps
test
inc
test
add
jb
jg
les
lcall
and
and
jbe
out
sbbl
xor
fwait
andb
je
mov
inc
hlt
lods
pusha
add
aad
xchg
andb
add
mov
cmpsl
sub
pusha
inc
xchg
hlt
loopne
hlt
lret
lret
add
mov
ss
jno
push
popf
jnp
push
sti
mov
jp
mov
sub
mov
xchg
mov
outsb
sarl
and
inc
and
inc
loop
and
aas
loop
cmp
nop
fiaddl
mov
sbb
shrb
push
adc
jbe
shll
dec
jns
jbe
mov
pop
stos
inc
cmc
cmp
add
and
and
xor
ss
inc
xor
pop
popf
mov
xlat
je
addb
orl
fsubrl
pushf
xchg
lahf
sub
mov
pusha
pusha
jmp
pop
sub
out
adc
jmp
lea
or
push
outsb
gs
push
test
stos
inc
loopne
loopne
mov
ljmp
into
pop
and
sbb
cmp
inc
mov
and
and
mov
lods
inc
loopne
sub
sub
mov
mov
loopne
jmp
push
loop
xchg
out
cmp
jge
add
push
andb
loopne
or
add
loopne
sarl
pusha
add
mov
mov
inc
cmp
dec
mov
mov
sub
loopne
cmp
add
rclb
ficomps
cmp
cmpsb
add
loopne
shll
and
add
movsb
pusha
pusha
pop
add
add
or
andb
sbb
jae
pusha
loopne
sahf
fucomp
mov
test
push
pusha
stc
jp
mov
mov
jns
les
daa
xchg
mov
std
and
jnp
pop
sbb
lcall
shlb
and
xchg
inc
lods
and
mov
push
mov
in
jp
inc
and
mov
addr16
adc
pusha
pop
mov
lahf
nop
jo
jp
mov
lcall
pop
mov
cmc
push
dec
cmpsb
addb
or
inc
pusha
and
mov
pop
push
loopne
dec
mov
bound
push
test
loopne
aam
add
fstpt
push
sbb
mov
mov
and
push
ss
sbb
loopne
shll
pusha
loopne
cmpsb
inc
add
mov
xor
and
or
adc
mov
je
cmp
push
lods
mov
mov
gs
dec
mov
pusha
dec
roll
repnz
loope
push
cmc
mov
inc
jns
pop
xchg
mov
loopne
shrb
push
mov
shlb
add
push
or
push
rcll
cwtl
jecxz
outsl
ret
pop
inc
mov
sbb
aaa
cmp
add
mov
arpl
pop
inc
dec
mov
or
pusha
cmpsl
fwait
adc
lods
mov
cmp
inc
int
je
gs
jg
and
sub
shlb
aad
mov
addb
imull
shlb
inc
mov
add
das
lcall
outsb
es
rcrb
mov
shrb
cmp
js
addr16
shl
out
cmp
mov
cwtl
inc
dec
dec
mov
mov
lcall
andb
xchg
sub
jp
test
dec
les
add
jae
scas
addb
xor
fnstenv
ljmp
mov
inc
shlb
lea
cmp
jo
lret
outsl
mov
add
mov
and
cld
icebp
and
loopne
and
fs
and
and
stos
in
inc
push
jg
and
loopne
pusha
rorb
push
orb
pusha
adc
js
mov
xchg
aas
jne
push
pusha
and
push
ss
xchg
jp
jle
adc
cmc
or
mov
mov
stos
and
enter
sar
pop
andl
cmpsl
mov
mov
xlat
insl
mov
adc
test
xor
and
or
mov
stc
mov
xchg
sti
scas
loopne
jns
mov
std
sar
mov
outsl
ss
jmp
adc
imul
sahf
or
hlt
test
dec
jo
out
fcmove
lods
add
test
pop
imul
adc
stos
add
dec
dec
rcpps
xor
aam
add
sub
sub
adcb
push
pusha
and
sbb
pop
inc
popf
cmp
inc
inc
push
push
pop
pop
mul
mov
lock
pop
gs
test
test
dec
outsl
andb
out
cmp
test
pusha
rcrl
and
das
fsubrl
or
mov
mov
and
shll
sbbb
mov
xchg
stc
sub
sbb
jb
mov
shlb
lahf
push
lret
andb
or
jnp
aaa
and
dec
xchg
mov
inc
subl
outsb
imul
pushf
fsubr
pop
aam
shlb
inc
fdivs
mov
pop
jb
inc
mov
mov
enter
orb
sub
repz
stc
mov
lods
pusha
cmp
add
jno
addb
push
int3
sub
xor
enter
xchg
xor
sbb
je
clc
ja
stos
les
dec
pushf
stos
mov
push
icebp
or
and
pop
faddp
push
addb
pusha
add
inc
pop
mov
popf
pop
mov
mov
mov
in
leave
nop
jmp
les
jbe
pop
push
nop
clc
repnz
cld
jae
add
les
les
xor
loop
iret
xor
nop
push
mov
leave
nop
jmp
fadds
add
jbe
les
nop
clc
repnz
cld
jae
inc
pop
xor
rolb
inc
sbb
test
nop
push
mov
leave
nop
jmp
arpl
sub
cmpsb
rol
mov
push
mov
xchg
ret
enter
add
roll
push
add
nop
push
mov
leave
nop
jmp
adc
add
nop
push
mov
leave
nop
jmp
rolb
add
add
sbb
repnz
cld
jae
sahf
add
pop
leave
add
mov
nop
push
mov
leave
nop
jmp
lea
add
add
fwait
lea
nop
push
mov
leave
nop
jmp
int3
outsl
add
loop
in
push
add
nop
clc
repnz
cld
jae
mov
inc
and
add
shlb
push
mov
xchg
ret
xchg
sub
and
add
xchg
stc
mov
nop
clc
repnz
cld
jae
arpl
xchg
enter
test
rorb
clc
push
mov
xchg
ret
add
and
dec
add
leave
jmp
shrb
add
mov
and
sarb
clc
repnz
cld
jae
sub
ljmp
push
loopne
stos
shlb
clc
repnz
cld
jae
outsl
add
add
mov
and
xchg
push
mov
leave
nop
jmp
sub
add
rol
mov
push
push
mov
xchg
ret
adc
daa
and
inc
mov
push
mov
xchg
ret
xchg
add
add
add
nop
push
mov
leave
nop
jmp
fadds
imul
loop
sti
add
nop
clc
repnz
cld
jae
add
add
mov
mov
clc
repnz
cld
jae
cld
add
pushf
xor
mov
leave
nop
jmp
add
xchg
arpl
pop
push
sbb
pop
push
mov
xchg
ret
rclb
sahf
xor
add
add
movb
repnz
cld
jae
add
fsubl
loop
mov
mov
loopne
clc
repnz
cld
jae
lock
and
test
sbb
push
mov
xchg
ret
lock
div
nop
clc
repnz
cld
jae
fsubr
daa
add
rcll
inc
nop
clc
repnz
cld
jae
add
add
mov
cmpw
nop
push
mov
leave
nop
jmp
inc
repnz
div
nop
push
mov
leave
nop
jmp
add
loop
inc
add
add
nop
push
mov
leave
nop
jmp
pop
add
pop
and
xchg
not
push
mov
xchg
ret
pop
add
add
arpl
add
arpl
add
jae
inc
adc
ja
je
sub
sarl
xchg
ret
add
enter
rolb
nop
clc
repnz
cld
jae
add
add
jb
cmp
push
mov
xchg
ret
enter
inc
daa
outsl
sub
nop
clc
repnz
cld
jae
mov
add
xor
fld1
push
mov
xchg
ret
add
mov
repnz
movsl
mov
nop
clc
repnz
cld
jae
add
push
and
xor
nop
clc
repnz
cld
jae
add
cld
or
repnz
cld
jae
sub
icebp
jne
nop
clc
repnz
cld
jae
cld
inc
mov
nop
clc
repnz
cld
jae
add
les
mov
adc
clc
repnz
cld
jae
in
and
popf
xor
clc
repnz
cld
jae
mov
pop
daa
add
add
mov
push
mov
leave
nop
jmp
pop
add
dec
arpl
mov
nop
push
mov
leave
nop
jmp
add
and
pop
roll
push
stos
add
inc
add
push
nop
clc
repnz
cld
jae
pop
xchg
add
add
and
aam
add
mov
leave
nop
jmp
add
faddl
and
push
clc
decb
push
push
mov
xchg
ret
sub
add
repnz
add
and
inc
add
add
sbb
push
mov
xchg
ret
repnz
adc
add
add
add
nop
clc
repnz
cld
jae
daa
xchg
inc
arpl
add
cmp
in
leave
nop
jmp
pop
imul
adc
enter
nop
clc
repnz
cld
jae
faddl
add
add
leave
ljmp
mov
xchg
ret
mov
add
aad
sub
repnz
cld
jae
mov
mov
andb
push
gs
add
adc
loop
les
add
nop
clc
repnz
cld
jae
adc
addb
add
movsb
and
cmp
nop
cld
jae
sub
add
daa
andb
fwait
push
mov
xchg
ret
add
stos
add
add
add
mov
jg
nop
clc
repnz
cld
jae
add
and
mov
nop
clc
repnz
cld
jae
mov
fistl
jmp
cmp
ret
add
inc
add
roll
add
sbb
mov
leave
nop
jmp
mov
outsl
add
sarb
inc
add
add
add
dec
sub
jmp
nop
cld
jae
ljmp
push
nop
push
mov
leave
nop
jmp
enter
scas
shlb
fwait
push
mov
xchg
ret
popf
and
add
add
add
add
nop
clc
repnz
cld
jae
rclb
cmp
lea
push
mov
xchg
ret
mov
add
mov
nop
clc
repnz
cld
jae
add
adc
mov
mov
repnz
cld
jae
add
pop
ljmp
loope
add
nop
push
mov
leave
nop
jmp
add
imul
add
jae
add
add
mov
xchg
ret
add
inc
add
add
push
xor
adcb
subl
add
and
enter
aas
add
nop
clc
repnz
cld
jae
xor
sahf
add
add
loopne
sub
fwait
mov
nop
clc
repnz
cld
jae
add
sbb
nop
cld
jae
inc
sub
add
jne
push
mov
xchg
ret
cld
add
add
dec
inc
add
nop
push
mov
leave
nop
jmp
and
loop
lock
dec
imul
cld
jae
pop
adc
or
mov
nop
clc
repnz
cld
jae
les
xchg
andb
add
nop
push
mov
leave
nop
jmp
add
add
add
imul
xchg
ret
add
add
fsubl
cltd
jno
jmp
nop
cld
jae
add
add
fcoms
push
mov
xchg
ret
add
add
mov
nop
push
mov
leave
nop
jmp
rcrl
inc
jp
mov
xor
nop
cld
jae
add
inc
add
pop
cltd
add
push
push
mov
xchg
ret
jp
add
jmp
dec
outsl
xchg
clc
repnz
cld
jae
les
sub
add
fiadds
sub
in
leave
nop
jmp
inc
lock
inc
add
arpl
lock
inc
nop
clc
repnz
cld
jae
add
add
arpl
add
ss
cwtl
xor
add
leave
add
add
leave
mov
add
clc
repnz
cld
jae
add
pop
rorl
mov
leave
nop
jmp
les
mov
out
nop
clc
repnz
cld
jae
xor
add
jge
nop
clc
repnz
cld
jae
aad
and
add
lods
push
nop
clc
repnz
cld
jae
mov
outsl
outsl
add
mov
mov
nop
clc
repnz
cld
jae
jbe
add
loop
das
cmp
nop
push
mov
leave
nop
jmp
add
cltd
mov
lea
nop
clc
repnz
cld
jae
add
faddl
jmp
jae
jle
nop
push
mov
leave
nop
jmp
add
enter
push
mov
mov
mov
add
gs
push
imul
fistpl
nop
push
mov
leave
nop
jmp
popf
add
cmp
push
mov
xchg
ret
les
pop
inc
int3
add
add
jae
and
pop
fwait
jne
nop
clc
repnz
cld
jae
add
lret
rolb
nop
clc
repnz
cld
jae
loop
xor
jp
add
jg
add
nop
clc
repnz
cld
jae
mov
nop
cld
jae
imul
jmp
repnz
add
nop
cld
jae
pop
add
xchg
add
inc
stos
addr16
nop
clc
repnz
cld
jae
enter
add
call
nop
clc
repnz
cld
jae
sahf
aad
mov
and
nop
push
mov
leave
nop
jmp
add
add
roll
push
mov
leave
nop
jmp
add
ljmp
mov
xchg
ret
pop
add
add
shr
lods
pop
nop
clc
repnz
cld
jae
and
add
adc
test
add
mov
nop
push
mov
leave
nop
jmp
add
loopne
popl
nop
clc
repnz
cld
jae
lea
add
enter
nop
clc
repnz
cld
jae
add
lea
adc
arpl
insl
push
nop
clc
repnz
cld
jae
add
add
in
loopne
add
nop
clc
repnz
cld
jae
add
add
rclb
jmp
rorl
daa
daa
mov
nop
clc
repnz
cld
jae
add
and
add
cwtl
sti
push
nop
push
mov
leave
nop
jmp
add
sub
sbb
push
mov
xchg
ret
add
fadds
add
mov
sub
jae
in
add
add
or
loop
mov
xchg
ret
add
mov
rcll
xchg
inc
add
dec
add
sub
add
nop
clc
repnz
cld
jae
add
movl
je
js
clc
repnz
cld
jae
and
add
inc
out
jne
nop
clc
repnz
cld
jae
addb
clc
subl
inc
add
add
add
jbe
add
dec
push
mov
xchg
ret
inc
add
add
les
sub
subb
adc
jae
jbe
rolb
adc
insl
pop
nop
clc
repnz
cld
jae
adc
in
rolb
add
repnz
cld
jae
fadds
and
push
mov
xchg
ret
add
popf
add
xchg
xor
pop
mov
nop
clc
repnz
cld
jae
aad
add
pop
jp
addb
mov
leave
nop
jmp
xchg
add
xor
les
outsl
fildl
repnz
cld
jae
add
dec
dec
push
sub
ljmp
nop
cld
jae
add
sub
stos
rolb
fistpl
nop
clc
repnz
cld
jae
pop
xchg
push
loop
fdivrs
in
leave
nop
jmp
add
xchg
jbe
add
add
nop
cld
jae
push
xorb
daa
add
xchg
pop
push
mov
xchg
ret
add
add
add
inc
mov
clc
repnz
cld
jae
sub
faddl
pop
mov
nop
clc
repnz
cld
jae
add
fmul
sub
add
jae
sub
push
jmp
adc
mov
xchg
ret
sahf
inc
data16
sub
pop
rep
push
mov
xchg
ret
jp
mov
imul
and
addb
jne
push
mov
xchg
ret
ljmp
sahf
add
clc
std
add
push
mov
xchg
ret
add
add
pop
mov
pop
test
and
popl
repnz
cld
jae
add
outsl
add
add
fwait
nop
clc
repnz
cld
jae
adc
and
dec
cmp
nop
cld
jae
aad
add
jbe
add
or
inc
pop
js
leave
nop
clc
repnz
cld
jae
shlb
shrl
int3
jmp
nop
cld
jae
sub
add
data16
sub
add
mov
inc
add
add
cld
push
mov
xchg
ret
add
add
les
adc
data16
add
add
add
popf
add
add
mov
nop
clc
repnz
cld
jae
xor
jmp
loop
hlt
jl
movsl
add
nop
clc
repnz
cld
jae
aad
xchg
add
popf
fistpl
nop
clc
repnz
cld
jae
add
adc
add
mov
leave
nop
jmp
inc
mov
add
arpl
adc
xlat
nop
clc
repnz
cld
jae
add
add
mov
pusha
adc
push
mov
leave
nop
jmp
adc
push
xor
add
aas
nop
clc
repnz
cld
jae
cltd
jbe
adc
idiv
jne
push
mov
xchg
ret
enter
xchg
addb
ret
nop
clc
repnz
cld
jae
repnz
add
fidivl
nop
cld
jae
jp
leave
add
add
xchg
es
mov
mov
xchg
ret
add
adc
fsts
clc
repnz
cld
jae
popf
add
add
inc
mov
mov
xchg
ret
add
add
lock
pop
std
mov
nop
push
mov
leave
nop
jmp
add
add
aam
sbb
imul
add
and
adc
roll
and
nop
push
mov
leave
nop
jmp
add
data16
aad
dec
push
nop
clc
repnz
cld
jae
add
add
dec
ja
nop
push
mov
leave
nop
jmp
pop
and
add
ljmp
push
nop
push
mov
leave
nop
jmp
stos
add
enter
nop
mov
call
jae
dec
sub
add
nop
clc
repnz
cld
jae
ljmp
nop
clc
repnz
cld
jae
push
xchg
add
add
xor
je
nop
clc
repnz
cld
jae
daa
int3
aad
pop
fld1
nop
push
mov
leave
nop
jmp
stos
leave
shlb
sub
jmp
sub
cld
and
push
repnz
pop
add
rclb
cmpsb
or
add
nop
jmp
adc
add
in
xlat
stos
push
mov
xchg
ret
pop
shrb
movl
add
add
jae
dec
add
mov
xchg
ret
ljmp
add
mov
mov
add
jae
lea
clc
repnz
cld
jae
xchg
imul
xchg
add
call
push
mov
xchg
ret
add
add
cmp
nop
push
mov
leave
nop
jmp
sub
inc
pop
nop
clc
repnz
cld
jae
xchg
add
and
add
arpl
xchg
nop
clc
repnz
cld
jae
shrl
add
add
dec
inc
loope,pt
fistl
add
xchg
ret
xor
arpl
add
add
repz
nop
clc
repnz
cld
jae
jp
add
lock
mov
nop
clc
repnz
cld
jae
popf
jp
add
add
jmp
add
and
add
add
ljmp
repnz
cld
jae
add
fdiv
inc
outsl
add
mov
xchg
ret
add
cltd
xor
shll
add
nop
clc
repnz
cld
jae
pop
in
cltd
fmul
push
loopne
add
mov
xchg
ret
leave
xchg
cltd
adc
sub
enter
xorps
xchg
ret
xchg
ljmp
mov
nop
clc
repnz
cld
jae
inc
sub
loop
jp
pusha
loopne
xchg
mov
nop
clc
repnz
cld
jae
rolb
and
add
nop
clc
repnz
cld
jae
and
add
add
call
nop
clc
repnz
cld
jae
inc
arpl
sub
repnz
cld
jae
inc
add
pop
lock
xchg
add
nop
clc
repnz
cld
jae
inc
push
rol
inc
push
push
mov
xchg
ret
add
xor
push
mov
leave
nop
jmp
add
add
add
add
nop
cld
jae
sub
add
adc
push
push
mov
xchg
ret
jbe
adc
and
push
pop
add
stos
push
mov
xchg
ret
les
add
mov
add
nop
cld
jae
pop
leave
rolb
sub
and
lret
clc
nop
clc
repnz
cld
jae
add
addr16
repnz
cltd
add
leave
sub
add
add
mulps
jae
outsl
enter
xchg
jmp
inc
movzwl
nop
clc
repnz
cld
jae
xor
sub
add
pusha
push
mov
xchg
ret
add
add
adc
mov
nop
clc
repnz
cld
jae
adc
add
add
call
cld
jae
add
add
data16
mov
nop
clc
repnz
cld
jae
cld
inc
add
jmp
loop
mov
nop
clc
repnz
cld
jae
arpl
add
add
jae
add
add
and
push
in
nop
clc
repnz
cld
jae
adcb
xchg
add
push
das
add
nop
clc
repnz
cld
jae
add
les
or
repnz
cld
jae
and
jmp
in
clc
repnz
cld
jae
add
add
add
dec
nop
clc
repnz
cld
jae
add
add
std
add
nop
clc
repnz
cld
jae
inc
add
and
xor
dec
into
sub
loopne
imul
nop
clc
repnz
cld
jae
add
int3
and
add
xor
nop
clc
repnz
cld
jae
sub
add
mov
push
mov
xchg
ret
inc
rolb
sub
add
and
imul
jmp
pop
data16
or
loopne
call
nop
push
mov
leave
nop
jmp
add
add
mov
sbb
jae
add
add
repnz
push
nop
clc
repnz
cld
jae
add
add
andb
and
stos
jb
add
add
les
add
ja
call
leave
nop
jmp
add
add
rcr
sub
jns
nop
clc
repnz
cld
jae
add
mov
nop
clc
repnz
cld
jae
in
add
and
xor
repnz
cld
jae
add
adc
add
xchg
dec
nop
push
mov
leave
nop
jmp
daa
add
and
ljmp
adc
clc
repnz
cld
jae
rolb
mov
cmp
mov
and
push
mov
leave
nop
jmp
loop
add
add
insb
dec
lods
shlb
add
nop
clc
repnz
cld
jae
stos
add
cwtd
add
rclb
sub
incl
imul
inc
in
sub
or
add
add
sub
push
push
push
mov
xchg
ret
add
push
daa
pop
arpl
stos
add
and
insb
inc
xor
push
mov
xchg
ret
xchg
add
add
and
and
add
jae
add
jmp
loopne
andb
dec
mov
dec
cmp
clc
repnz
cld
jae
add
add
add
push
mov
xchg
ret
and
add
add
add
add
clc
push
mov
xchg
ret
add
rolb
add
add
call
nop
clc
repnz
cld
jae
add
add
cmp
clc
repnz
cld
jae
add
pop
xchg
mov
nop
clc
repnz
cld
jae
ljmp
adc
jae
imul
add
add
mov
push
mov
xchg
ret
in
int3
add
adc
pop
add
add
nop
push
mov
leave
nop
jmp
repnz
nop
cld
jae
add
add
add
inc
adc
jae
add
add
add
ficomps
nop
clc
repnz
cld
jae
data16
add
dec
sub
sub
and
add
inc
add
data16
pop
jmp
add
inc
add
add
and
add
push
nop
clc
repnz
cld
jae
adc
aad
add
adcb
push
mov
xchg
ret
sub
xchg
loop
add
lea
add
jae
les
je
nop
push
mov
leave
nop
jmp
cld
mov
nop
push
mov
leave
nop
jmp
add
int3
add
mov
push
push
mov
xchg
ret
mov
and
int3
testb
mov
xchg
ret
add
mov
and
popa
push
nop
clc
repnz
cld
jae
pop
add
enter
add
mov
nop
clc
repnz
cld
jae
add
push
add
mov
nop
clc
repnz
cld
jae
add
add
mov
nop
clc
repnz
cld
jae
data16
pop
nop
clc
repnz
cld
jae
add
aad
stos
inc
in
mov
push
mov
xchg
ret
leave
add
add
add
subl
nop
clc
repnz
cld
jae
repnz
cltd
fdivs
nop
push
mov
leave
nop
jmp
add
outsl
movl
repz
push
mov
xchg
ret
pop
add
mov
add
ja
ficoms
jae
add
pop
imul
imul
push
push
mov
xchg
ret
add
inc
add
pop
nop
clc
repnz
cld
jae
add
jbe
leave
les
xchg
sbb
and
add
add
pop
add
stos
add
repnz
add
add
dec
call
nop
clc
repnz
cld
jae
daa
add
lret
cmp
push
mov
xchg
ret
push
add
push
sbb
and
pusha
ret
add
push
mov
xchg
ret
sub
add
mov
jne
nop
clc
repnz
cld
jae
and
cmp
cld
jae
add
outsl
add
rep
push
mov
xchg
ret
and
ror
sub
loopne
aad
nop
clc
repnz
cld
jae
add
outsl
add
outsl
adc
and
mov
leave
nop
jmp
add
sub
add
and
nop
add
rcrb
mov
xchg
ret
add
add
add
std
jmp
nop
clc
repnz
cld
jae
popf
loop
imul
jp
jne
nop
push
mov
leave
nop
jmp
loop
stos
xor
jne
nop
clc
repnz
cld
jae
enter
dec
add
jge
rorl
mov
xchg
ret
add
fdivl
jmp
nop
clc
repnz
cld
jae
add
rcll
loop
add
jmp
add
add
les
addb
add
loop
sub
or
jae
add
xchg
jecxz
cmpl
repnz
cld
jae
shll
popf
out
shrb
clc
repnz
cld
jae
jp
les
xchg
rcr
adc
sbb
push
mov
xchg
ret
cltd
and
dec
leave
add
mov
clc
repnz
cld
jae
xchg
cltd
add
and
add
mov
lret
mov
nop
clc
repnz
cld
jae
pop
ljmp
rolb
insl
rep
nop
push
mov
leave
nop
jmp
dec
add
add
cltd
mov
and
push
mov
xchg
ret
add
dec
mov
add
inc
mov
and
pop
nop
clc
repnz
cld
jae
lea
add
add
xchg
imul
nop
clc
repnz
cld
jae
and
mov
pop
push
mov
xchg
ret
roll
add
sahf
jmp
push
insl
xchg
nop
clc
repnz
cld
jae
daa
add
pop
xchg
add
adc
aaa
jge
add
inc
add
add
add
sub
nop
clc
repnz
cld
jae
fdiv
pop
dec
imul
fwait
push
mov
xchg
ret
add
inc
pop
adc
add
cmp
pusha
mov
nop
clc
repnz
cld
jae
add
add
add
jns
jb
nop
clc
repnz
cld
jae
add
data16
add
outsb
inc
add
inc
fsubrl
add
faddl
jb
xor
nop
clc
repnz
cld
jae
add
xor
call
mov
xchg
ret
xchg
add
pop
pop
add
jp
cmpsl
cmpl
nop
push
mov
leave
nop
jmp
cld
and
inc
adc
jmp
dec
add
nop
jmp
lea
add
xchg
imul
clc
repnz
cld
jae
inc
dec
xchg
aad
jmp
xchg
mov
nop
clc
repnz
cld
jae
add
cmp
nop
push
mov
leave
nop
jmp
aad
add
add
nop
push
mov
leave
nop
jmp
add
faddl
sahf
add
fld1
push
mov
xchg
ret
inc
add
pop
jmp
rcrb
mov
nop
clc
repnz
cld
jae
add
add
ficomps
popl
xchg
ret
mov
adc
add
pop
or
clc
repnz
cld
jae
add
aad
add
out
pusha
push
mov
xchg
ret
pop
add
cld
add
and
xor
lcall
call
nop
jmp
add
sbb
mov
xchg
ret
arpl
rolb
add
jp
or
dec
cmp
push
mov
leave
nop
jmp
adc
add
add
cmp
add
inc
inc
sbb
dec
add
push
mov
leave
nop
jmp
xchg
add
sub
les
nop
clc
repnz
cld
jae
add
popa
jl
nop
clc
repnz
cld
jae
ror
xchg
mov
nop
clc
repnz
cld
jae
add
add
push
push
mov
xchg
ret
add
add
int3
leave
cld
add
dec
push
mov
xchg
ret
popf
pop
shrb
mov
movzwl
nop
clc
repnz
cld
jae
adc
insl
mov
nop
push
mov
leave
nop
jmp
add
add
push
push
mov
xchg
ret
xchg
daa
popf
add
add
stos
add
push
add
nop
clc
repnz
cld
jae
and
dec
add
jbe
test
aad
call
jae
add
sahf
aad
xor
push
mov
xchg
ret
add
xorb
enter
enter
in
leave
nop
jmp
and
add
add
add
enter
mov
leave
nop
jmp
add
adc
cwtl
mov
dec
pusha
push
mov
xchg
ret
add
add
and
jbe
adc
jge
nop
push
mov
leave
nop
jmp
leave
add
stos
dec
inc
insl
push
nop
clc
repnz
cld
jae
int3
lock
add
xchg
cwtl
loopne,pn
dec
rep
nop
clc
repnz
cld
jae
xor
outsl
add
popf
cmc
mov
push
mov
xchg
ret
add
daa
add
pop
outsl
add
or
add
nop
clc
repnz
cld
jae
les
dec
loop
jmp
add
sahf
add
enter
in
add
add
call
nop
push
mov
leave
nop
jmp
add
add
int
nop
clc
repnz
cld
jae
popf
daa
popf
add
loopne
dec
outsl
add
nop
push
mov
leave
nop
jmp
add
les
add
xor
push
mov
xchg
ret
cltd
jmp
add
add
in
jne
inc
push
mov
xchg
ret
xor
int3
add
adc
mov
xchg
ret
lock
add
xchg
ljmp
repnz
cld
jae
data16
add
fcoml
repnz
cld
jae
add
add
jne
nop
clc
repnz
cld
jae
add
ljmp
clc
repnz
cld
jae
and
jbe
cld
push
mov
xchg
ret
lock
mov
add
mov
insb
nop
push
mov
leave
nop
jmp
xor
loop
insb
xchg
cmpsb
add
lock
pop
nop
push
mov
leave
nop
jmp
pop
rcrb
arpl
nop
clc
repnz
cld
jae
adc
add
push
nop
push
mov
leave
nop
jmp
add
adc
push
nop
clc
repnz
cld
jae
and
push
xchg
jp
add
aas
push
nop
push
mov
leave
nop
jmp
add
cltd
add
add
add
repnz
cld
jae
data16
stos
add
je
nop
clc
repnz
cld
jae
add
mov
loopne
stos
nop
clc
repnz
cld
jae
adc
and
mov
shl
dec
nop
push
mov
leave
nop
jmp
repnz
inc
int3
cld
add
mov
rclb
mov
leave
nop
jmp
add
add
inc
in
push
mov
xchg
ret
add
add
addb
icebp
xchg
push
mov
xchg
ret
loop
in
add
aad
inc
or
push
mov
leave
nop
jmp
add
and
add
and
push
nop
clc
repnz
cld
jae
pop
xchg
add
outsl
add
add
nop
clc
repnz
cld
jae
popf
cld
faddl
add
mov
nop
clc
repnz
cld
jae
xchg
add
xchg
push
cli
sahf
hlt
jecxz
notl
jae
pop
add
mov
mov
push
mov
xchg
ret
add
pop
mov
dec
push
dec
dec
push
mov
xchg
ret
add
add
and
movb
in
inc
add
ljmp
add
push
mov
xchg
ret
add
roll
and
mov
jp
push
repnz
cld
jae
add
add
cld
push
mov
mov
leave
nop
jmp
add
add
cmp
push
mov
leave
nop
jmp
sub
jbe
add
sbbb
inc
add
add
add
pop
xchg
aad
loopne
cmpsl
sub
nop
clc
repnz
cld
jae
pop
data16
int3
adc
lods
add
push
mov
xchg
ret
add
loop
in
imul
in
leave
nop
jmp
add
add
subb
pause
clc
repnz
cld
jae
and
leave
dec
xchg
add
mov
push
mov
xchg
ret
adc
inc
dec
add
ret
nop
clc
repnz
cld
jae
add
popf
xchg
inc
pushl
push
mov
xchg
ret
add
lea
and
aam
pushf
fwait
jne
nop
clc
repnz
cld
jae
add
add
push
push
mov
xchg
ret
ljmp
add
push
push
mov
xchg
ret
add
fdivrs
add
pusha
repnz
add
nop
clc
repnz
cld
jae
pop
add
jp
xchg
stos
pop
nop
clc
repnz
cld
jae
lea
add
sub
jnp
fld1
nop
clc
repnz
cld
jae
pop
stos
and
dec
add
repnz
cld
jae
daa
add
add
add
out
cwtl
inc
add
mov
leave
add
cltd
pop
adc
clc
repnz
cld
jae
add
add
dec
add
add
nop
clc
repnz
cld
jae
imul
add
les
push
nop
clc
repnz
cld
jae
stos
add
fsubrl
add
jmp
clc
repnz
cld
jae
cltd
inc
add
xchg
aad
or
nop
clc
repnz
cld
jae
add
add
push
mov
xchg
ret
add
pop
add
loop
push
jmp
roll
mov
add
and
addb
data16
push
push
mov
xchg
ret
add
popf
cltd
add
ret
clc
repnz
cld
jae
add
loop
add
or
ds
inc
add
inc
add
add
add
jge
nop
clc
repnz
cld
jae
dec
ljmp
xor
push
mov
leave
nop
jmp
add
add
in
xchg
je
nop
clc
repnz
cld
jae
pop
add
xor
nop
clc
repnz
cld
jae
les
add
add
or
and
nop
clc
repnz
cld
jae
faddl
add
add
inc
movl
or
add
add
popf
add
aad
sub
popf
jle
add
pop
sahf
add
add
cs
sarb
jl
and
jae
add
pop
add
mov
call
jae
add
into
sub
push
mov
leave
nop
jmp
add
add
add
popa
nop
clc
repnz
cld
jae
pop
mov
arpl
leave
add
xchg
and
mov
leave
nop
jmp
aad
add
call
nop
clc
repnz
cld
jae
inc
add
xor
repnz
cld
jae
add
add
add
and
repnz
cld
jae
add
and
add
repnz
cld
jae
add
add
movl
test
clc
repnz
cld
jae
les
leave
dec
push
nop
push
mov
leave
nop
jmp
stos
enter
mov
nop
push
mov
leave
nop
jmp
add
add
cld
add
orb
mov
xchg
ret
add
adc
xchg
pop
add
nop
clc
repnz
cld
jae
add
daa
daa
loop
jmp
inc
inc
add
jae
add
add
cltd
iret
call
nop
clc
repnz
cld
jae
jbe
inc
xchg
dec
nop
cld
jae
rolb
add
add
xchg
nop
push
mov
leave
nop
jmp
add
inc
pop
add
xchg
test
nop
push
mov
leave
nop
jmp
add
add
rcr
loop
call
nop
clc
repnz
cld
jae
add
fadds
inc
mov
nop
clc
repnz
cld
jae
roll
mov
int3
inc
add
leave
mov
xchg
les
sbb
test
push
mov
leave
nop
jmp
and
stos
add
cwtl
inc
add
add
add
mov
xchg
int3
cmp
xchg
nop
clc
repnz
cld
jae
adc
and
add
add
pop
lss
nop
clc
repnz
cld
jae
jmp
and
pop
mov
nop
clc
repnz
cld
jae
and
fisubrs
dec
lea
nop
push
mov
leave
nop
jmp
data16
add
scas
ret
nop
clc
repnz
cld
jae
add
add
add
add
clc
repnz
cld
jae
add
add
add
xchg
add
push
mov
xchg
ret
mov
and
out
xorl
nop
clc
repnz
cld
jae
add
xchg
clc
nop
push
mov
leave
nop
jmp
add
add
sub
mov
nop
push
mov
leave
nop
jmp
arpl
add
loopne
mov
call
jae
stos
add
in
nop
clc
repnz
cld
jae
add
add
add
nop
clc
repnz
cld
jae
pop
fcom
add
mov
and
stos
push
push
mov
xchg
ret
add
add
add
sub
add
nop
clc
repnz
cld
jae
arpl
les
outsb
and
push
mov
leave
nop
jmp
adc
popf
add
repnz
call
nop
clc
repnz
cld
jae
enter
add
mov
add
sub
add
add
mov
nop
push
mov
leave
nop
jmp
xchg
xor
js
add
push
mov
xchg
ret
add
add
xchg
add
xchg
pusha
pop
mov
nop
clc
repnz
cld
jae
add
add
call
inc
fld1
nop
push
mov
leave
nop
jmp
shlb
add
cltd
loope
movsl
nop
clc
repnz
cld
jae
inc
and
orl
es
call
jae
xor
add
loopne
push
nop
clc
repnz
cld
jae
and
shl
adc
les
push
nop
clc
repnz
cld
jae
add
mov
sahf
inc
mov
nop
clc
repnz
cld
jae
add
add
and
mov
xchg
ret
add
add
add
movsl
xorl
nop
push
mov
leave
nop
jmp
adc
addb
data16
ret
nop
clc
repnz
cld
jae
add
arpl
add
cld
dec
cmp
sti
nop
push
mov
leave
nop
jmp
loop
add
int3
fdivr
pop
push
mov
xchg
ret
mov
add
lock
addb
push
int
nop
clc
repnz
cld
jae
add
roll
add
inc
jae
inc
in
push
mov
leave
nop
jmp
sub
sahf
add
add
adcl
repnz
cld
jae
enter
les
push
mov
xchg
ret
in
add
add
add
mov
lea
nop
clc
repnz
cld
jae
xor
add
mov
rclb
jae
xor
inc
aad
xchg
add
and
add
nop
jmp
add
add
fldcw
nop
jmp
adc
rclb
add
add
xchg
xlat
sub
push
mov
xchg
ret
popf
enter
add
shl
add
push
mov
xchg
ret
sahf
add
add
pop
add
add
nop
push
mov
leave
nop
jmp
xor
xchg
mov
xchg
sti
push
nop
clc
repnz
cld
jae
add
inc
add
in
repnz
imul
cmp
ret
sub
sub
xchg
sub
nop
clc
repnz
cld
jae
add
cld
arpl
add
sbb
cmp
jae
lock
sbb
add
nop
clc
repnz
cld
jae
mov
dec
jmp
add
int3
cltd
add
add
xchg
add
add
aad
xlat
push
push
mov
xchg
ret
add
and
add
xor
and
andb
sub
jae
add
cld
add
loopne
popa
push
mov
xchg
ret
add
add
lock
addb
mov
nop
clc
repnz
cld
jae
data16
fisubs
add
addb
repnz
cld
jae
add
repnz
mov
add
inc
nop
clc
repnz
cld
jae
jmp
mov
sub
clc
repnz
cld
jae
add
data16
enter
nop
clc
repnz
cld
jae
les
jbe
add
add
inc
subb
call
cld
jae
in
xor
pop
leave
add
int
clc
repnz
cld
jae
add
loop
sbb
clc
repnz
cld
jae
daa
mov
add
incl
nop
push
mov
leave
nop
jmp
add
add
mov
nop
clc
repnz
cld
jae
add
add
rsqrtps
dec
jnp
add
and
add
sub
push
push
nop
clc
repnz
cld
jae
add
pop
add
sub
fwait
push
mov
xchg
ret
sub
stos
add
xor
and
add
jmp
add
popf
xchg
xchg
mov
test
in
call
jae
add
pop
and
clc
repnz
cld
jae
add
add
pop
adc
pop
nop
clc
repnz
cld
jae
add
add
add
sub
loopne
js
jne
nop
clc
repnz
cld
jae
daa
add
push
sbb
and
mov
xchg
ret
add
xor
add
rcll
mov
sbb
nop
clc
repnz
cld
jae
add
pop
loop
sarl
jmp
nop
cld
jae
jp
add
push
mov
xchg
ret
add
outsl
add
add
imul
nop
clc
repnz
cld
jae
and
pop
add
into
scas
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
pop
nop
push
mov
leave
nop
jmp
mov
jp
add
clc
repnz
cld
jae
int3
add
les
rcr
and
nop
push
mov
leave
nop
jmp
add
add
add
jmp
nop
cld
jae
xchg
add
add
add
add
sub
nop
clc
repnz
cld
jae
xchg
imul
add
push
nop
clc
repnz
cld
jae
add
int3
int3
fcoms
pop
push
mov
xchg
ret
and
mov
add
stc
and
nop
clc
repnz
cld
jae
and
add
loopne
mov
push
mov
leave
nop
jmp
cld
pop
add
add
repnz
cld
jae
xchg
add
add
add
mov
nop
clc
repnz
cld
jae
add
add
arpl
pop
sub
add
clc
repnz
cld
jae
rcl
fmul
add
subl
mov
leave
nop
jmp
arpl
out
sbb
jae
repnz
mov
in
out
add
push
mov
xchg
ret
pop
add
add
repnz
inc
lock
mov
xchg
ret
enter
mov
xor
mov
xchg
ret
add
add
lock
fmul
mov
leave
push
mov
xchg
ret
add
outsl
add
mov
stos
sub
nop
push
mov
leave
nop
jmp
add
add
push
fisttpl
repnz
cld
jae
cltd
daa
add
and
hlt
jmp
subl
jae
add
xchg
repnz
fldl
notl
nop
jmp
imul
lret
lea
nop
clc
repnz
cld
jae
push
add
rolb
repnz
call
nop
jmp
add
add
xor
nop
clc
repnz
cld
jae
add
loop
add
fwait
je
nop
clc
repnz
cld
jae
inc
add
repnz
test
repnz
call
jae
push
sub
js
stos
add
nop
clc
repnz
cld
jae
add
add
add
cmp
repnz
cld
jae
daa
les
add
push
nop
clc
repnz
cld
jae
xchg
xchg
add
leave
pop
fadds
pop
and
mov
leave
nop
jmp
add
inc
les
add
add
cmpb
test
std
call
jae
add
fdivr
call
jae
add
add
loopne
js
inc
mov
nop
push
mov
leave
nop
jmp
loop
adc
add
fisubs
lods
push
mov
xchg
ret
add
inc
xchg
add
add
sub
movzwl
push
mov
xchg
ret
xchg
cld
adc
mov
repnz
cld
jae
xchg
xchg
add
sar
test
mov
leave
nop
jmp
cltd
xorb
and
clc
repnz
cld
jae
xor
add
sahf
loop
mov
nop
clc
repnz
cld
jae
add
cld
and
repnz
push
add
push
mov
leave
nop
jmp
and
xor
leave
add
in
leave
nop
jmp
add
les
scas
lods
push
mov
xchg
ret
add
add
add
jmp
int3
pop
cwtl
scas
test
nop
push
mov
leave
nop
jmp
add
and
push
nop
clc
repnz
cld
jae
add
jp
aad
nop
clc
repnz
cld
jae
add
add
add
loop
int3
and
repnz
cld
jae
fsubs
and
ljmp
aas
add
nop
clc
repnz
cld
jae
rolb
add
ljmp
repnz
cld
jae
and
add
data16
adc
in
leave
nop
jmp
add
add
mov
push
mov
xchg
ret
xchg
add
jp
mov
test
sar
call
jae
add
and
cmp
mov
xchg
ret
add
leave
add
sub
and
lds
clc
repnz
cld
jae
sub
add
push
sub
add
nop
clc
repnz
cld
jae
lock
add
nop
clc
repnz
cld
jae
add
shlb
add
dec
scas
jmp
daa
push
add
in
add
sahf
jp
leave
les
jl
jbe
fcomps
call
and
clc
repnz
cld
jae
add
lea
push
mov
xchg
ret
add
add
int3
and
add
mov
push
mov
xchg
ret
sahf
add
add
add
mov
hlt
cmp
jae
clc
repnz
cld
jae
inc
and
fcom
enter
nop
clc
repnz
cld
jae
sub
inc
add
sahf
enter
mov
mov
repnz
cld
jae
rolb
inc
pop
adc
add
xchg
xchg
ret
add
add
push
loopne
pop
nop
push
mov
leave
nop
jmp
add
add
pop
pop
add
iret
add
nop
clc
repnz
cld
jae
adc
loop
mov
fisttps
mov
repnz
cld
jae
add
add
mov
nop
clc
repnz
cld
jae
imul
lea
cmp
test
call
jae
add
adc
andl
nop
cld
jae
and
add
test
mov
clc
repnz
cld
jae
add
add
iret
call
jae
add
ret
nop
clc
repnz
cld
jae
ljmp
clc
mov
nop
clc
repnz
cld
jae
adc
jbe
jmp
data16
pop
pop
nop
clc
repnz
cld
jae
mov
add
add
je
mov
nop
clc
repnz
cld
jae
add
cmpsb
andb
add
push
mov
xchg
ret
xchg
roll
add
sub
and
movsb
push
mov
xchg
ret
inc
sub
add
add
repz
nop
clc
repnz
cld
jae
mov
add
add
movzwl
nop
clc
repnz
cld
jae
add
add
nop
clc
repnz
cld
jae
add
push
cmp
nop
clc
repnz
cld
jae
add
mov
push
mov
xchg
ret
add
cld
repnz
xchg
add
rclb
pop
imul
cmp
ret
sub
add
lock
fld1
push
mov
xchg
ret
leave
stos
sub
inc
add
mov
dec
and
nop
clc
repnz
cld
jae
and
stos
mov
and
mov
leave
nop
jmp
pop
repnz
adc
ds
jmp
nop
cld
jae
add
sub
add
add
nop
clc
repnz
cld
jae
add
cltd
xchg
mov
pusha
out
add
nop
clc
repnz
cld
jae
and
and
inc
sbbb
clc
repnz
cld
jae
add
add
popf
add
xor
ror
push
mov
xchg
ret
les
pop
movl
jecxz
call
nop
jmp
fadds
mov
or
mov
xchg
ret
add
jp
outsl
add
nop
clc
repnz
cld
jae
add
push
add
add
nop
cld
jae
add
arpl
imul
call
jae
add
add
andb
add
mov
call
jae
fadds
jbe
add
push
mov
xchg
ret
and
fdiv
lea
inc
mov
push
mov
xchg
ret
in
add
add
arpl
scas
shlb
shl
nop
clc
repnz
cld
jae
add
add
cmp
cli
nop
clc
repnz
cld
jae
stos
add
adc
pop
add
nop
cld
jae
add
lock
adc
fistpl
push
mov
xchg
ret
and
popf
add
loop
lea
nop
cld
jae
jbe
inc
xchg
mov
daa
mov
cli
jns
add
add
sub
arpl
xor
pop
nop
clc
repnz
cld
jae
aad
cltd
add
add
add
push
push
mov
xchg
ret
pop
add
stos
add
mov
in
pop
add
fldl
add
add
fsubr
stos
add
add
rclb
push
mov
call
test
add
out
int3
and
sbbb
adc
fcoml
fistpl
shlb
fs
cli
into
mov
lds
ret
loopne
fiadds
sub
and
call
loope
jmp
mov
ds
pop
and
pusha
imul
mov
inc
mov
pusha
shlb
pop
loopne
popf
ret
psubsw
test
mov
sbb
fdivrl
mov
jp
mov
mov
cmp
or
fstl
js
aad
loopne
adc
mov
add
ljmp
inc
loopne
push
out
sbb
hlt
stos
clc
mov
insl
dec
jle
ss
sbb
ljmp
jns
inc
and
js
das
aad
mov
dec
in
jl
movsb
and
loop
adc
add
and
jmp
iret
push
pusha
sbbb
stos
sub
pusha
or
daa
call
push
cmc
and
rcr
ja
sbb
adc
out
cs
fimuls
sbb
test
or
dec
sahf
xchg
nop
pushf
sub
loopne
hlt
sub
pusha
idivl
push
stos
mov
stos
in
jb
cmpsl
or
shlb
sub
loopne
xchg
push
sub
cmp
mov
mov
pop
xchg
mov
and
fisttps
cmc
mov
and
loopne
test
mov
rclb
mov
xchg
sti
pop
inc
or
xor
lods
jns
std
in
lods
and
cs
jno
pusha
sbb
ja
sbb
shlb
and
leave
int3
shrb
add
test
push
inc
or
and
cmp
jbe
rcrb
test
dec
inc
or
push
add
inc
out
nop
sub
loopne
inc
leave
mov
movsl
stos
inc
adc
dec
jecxz
sbb
pop
and
lcall
add
inc
pop
in
mov
sub
movsl
xor
add
lret
mov
adc
imul
jne
mov
mov
scas
inc
sbb
test
das
aaa
in
push
cli
lret
mov
outsb
clc
or
loopne
sbb
push
add
movsl
add
subb
add
repnz
cld
xchg
pop
std
jne
fildll
hlt
pushl
aam
dec
push
lods
clc
mov
pop
popf
inc
sbb
loopne
push
pop
andb
xor
pusha
mov
lret
sub
add
popf
pop
sbb
inc
inc
mov
add
rol
and
pop
aad
jl
adc
jne
fnstcw
cmp
arpl
mov
out
push
rolb
mov
test
outsb
or
xchg
jmp
test
and
pop
movl
jle
push
jo
lock
mov
call
orb
sbb
adc
or
sub
sarb
ss
mov
adc
out
test
icebp
in
ja
and
mov
out
push
clc
jmp
out
notb
and
popa
jmp
fcoms
leave
or
inc
add
xchg
ret
imul
push
pusha
inc
xor
add
je
add
loopne
test
inc
test
add
loopne
or
or
or
and
stos
add
fstl
sub
push
mov
cmpl
in
in
fldcw
fadd
inc
scas
lods
and
add
and
jb
mov
andl
add
cld
sbbl
rcrb
add
loopne
push
loopne
pop
or
mov
xor
addb
ret
sub
and
and
cmp
mov
inc
loopne
ljmp
adc
scas
xchg
inc
lea
inc
sbb
jl
jo
stc
cmpsl
mov
xor
inc
push
inc
mov
mov
mov
dec
mov
and
xor
fsubl
inc
ror
shlb
jbe
stc
mov
mov
pop
cmp
jno
ret
jle
lcall
jle
gs
pusha
pusha
jae
add
dec
cmp
sti
dec
fstp
jno
inc
add
sbb
lret
mov
dec
xor
inc
mov
cmp
xor
mov
pusha
xchg
and
inc
in
imul
insl
std
mov
add
shl
pop
cs
and
insb
lea
add
cmp
mov
pushf
enter
push
scas
mov
mov
sub
sub
jns
add
sbb
jmp
cli
mov
loopne
sub
leave
mov
and
gs
je
add
je
pusha
pusha
insl
addr16
stos
pop
dec
mul
jp
sub
mov
pop
xchg
dec
xchg
sbb
outsb
pop
movsb
rol
sbb
inc
les
lods
add
test
repnz
jno
add
and
ret
xchg
dec
cmpsl
test
rcl
or
bound
sti
mov
loopne
pop
jnp
daa
dec
pusha
out
sbb
jmp
stos
add
and
add
and
jmp
rol
aad
andb
cltd
ror
rcll
je
inc
or
les
xor
scas
shlb
outsb
lret
ja
lods
mov
lret
fs
add
cmpsl
xchg
cltd
lea
xlat
pop
lods
push
push
scas
pusha
mov
lods
pusha
loopne
je
hlt
roll
sbb
push
mov
in
test
iret
cltd
pop
push
and
mov
sar
stos
mov
inc
leave
test
jns
fwait
xchg
inc
cmp
fisubrl
mov
pop
push
add
sbb
lret
jp
sbb
subl
fs
iret
fsubrp
ret
adc
pop
add
dec
or
pop
or
and
add
loopne
cmp
rolb
jne
sti
data16
push
lahf
ljmp
mov
sbbb
bound
lock
mov
inc
mov
inc
das
mov
fcmovnb
pop
jns
xor
push
xor
sbb
mov
inc
add
inc
xor
pop
out
repnz
addr16
sbb
cmp
hlt
and
sbb
fimull
pusha
and
inc
ror
adc
add
xchg
outsb
pop
push
loopne
clc
movb
cwtl
pop
outsl
out
dec
addb
and
pusha
in
pusha
loopne
adc
arpl
and
push
sbb
gs
sarb
or
or
push
inc
mov
sub
loopne
ret
jmp
mov
hlt
push
sub
scas
add
mov
rolb
loopne
fsubp
andb
test
dec
insb
mov
imul
pop
dec
repnz
pop
lret
dec
andl
and
xchg
push
dec
dec
pop
mov
sub
jle
andb
jge
jecxz
xchg
xchg
push
cmpsl
jb
lahf
pop
and
sbb
xor
push
enter
sub
rclb
sti
xor
leave
rolb
and
xor
loopne
and
loopne
outsl
sbb
repnz
cwtl
mov
loopne
mov
call
loopne
sub
inc
pusha
push
add
inc
pusha
jg
outsb
das
mov
popl
rclb
out
aas
gs
filds
outsb
inc
ss
sub
jmp
add
fildll
andb
jae
pusha
add
cmpsb
mov
cmp
call
lods
dec
inc
ret
jnp
jp
dec
cmp
cmp
mov
and
mov
xor
cmp
out
incb
lods
loopne
pop
repz
add
rorb
sub
adcb
pop
jo
daa
arpl
fcoms
pusha
add
stc
gs
out
inc
mov
in
je
dec
call
test
inc
mov
cmp
hlt
mov
jo
sub
inc
clc
xchg
pop
mov
adc
and
mov
shl
pusha
jnp
xchg
daa
push
je
jmp
mov
insb
daa
pop
shll
inc
aad
cmp
inc
mov
aam
in
push
rol
loopne
push
and
imul
jp
or
mov
or
add
push
jg
loopne
xor
pop
aad
sbb
push
jnp
pushf
jo
pop
adc
mov
push
add
scas
bound
adc
andb
cmp
out
cmp
fildl
subb
pop
lcall
dec
test
pop
mov
xor
cwtl
add
in
test
or
loopne
mov
pusha
addb
jl
cltd
dec
adc
mov
loopne
ljmp
daa
testb
inc
mov
xchg
jnp
and
pop
sub
mov
inc
add
loop
test
mov
shl
dec
lods
mov
xchg
popf
xchg
stc
mov
xorl
repz
ss
xor
aaa
shrl
movsl
push
shlb
daa
mov
pusha
sti
pop
pop
fnstenv
leave
jns
imul
cmp
jno
mov
ljmp
rcr
mov
movsb
add
addb
lret
or
pusha
and
loopne
mov
in
jmp
add
sub
or
push
or
rolb
mov
and
sahf
ds
cltd
mov
loopne
bound
nop
inc
mov
push
mov
and
add
inc
mov
scas
dec
xchg
inc
orl
sbb
rolb
and
sbb
sti
jno
and
loopne
test
cmpb
mov
jne
dec
mov
pusha
test
and
jecxz
push
ror
mov
roll
mov
mov
sub
mov
shlb
cmp
and
and
dec
push
push
push
add
mov
pusha
shlb
shr
dec
pop
popa
iret
adc
fninit
into
mov
sub
pop
and
and
adc
cli
jo
leave
fidivrl
fadd
push
mov
adc
push
cwtl
sti
mov
lea
and
cld
aas
xor
inc
add
add
fisubrl
mul
imul
test
out
int
jno
push
adc
or
icebp
xorl
shll
and
mov
add
popa
cmp
lcall
incl
push
fisubrl
addb
sub
orb
inc
adc
data16
popa
mov
and
and
loopne
xchg
xchg
push
arpl
andb
add
xor
rclb
and
adc
leave
lcall
dec
pop
popa
or
add
lods
add
mov
pop
int
notb
pop
jp
ror
rolb
pop
in
shl
jecxz
movsb
mov
pop
imul
rcrb
and
out
loop
stos
stos
pusha
shrb
rclb
mov
add
ficoms
in
test
test
and
mov
loopnew,pn
int3
pop
mov
into
les
loopne
add
fmuls
and
inc
cli
out
mov
outsb
test
mov
and
jle
loope
mov
scas
and
loopne
mov
jbe
pusha
and
scas
and
ficoml
add
xchg
xchg
popa
subl
in
mov
adc
enter
pop
stos
movsl
xor
mov
pushf
sti
push
clc
add
rclb
ret
or
rcrb
stos
rolb
push
ret
or
mov
pop
mov
sbb
sbb
loope
mov
add
test
dec
je
mov
push
ja
or
fs
enter
movsl
cli
pop
mov
addb
cmc
leave
cmp
inc
in
xor
mov
mov
push
add
dec
push
out
rclb
jae
rol
push
pushf
adc
add
sub
mov
adc
jbe
lods
add
sbb
mov
lret
lods
pusha
adcb
push
cmp
clc
cmp
inc
cmpl
shl
fnstenv
loope
and
std
inc
fcompl
lds
loop
shlb
push
dec
add
fbstp
fisttpll
rolb
rol
loopne
fsub
and
mov
jecxz
push
in
imul
frstor
bound
int3
aaa
xchg
lods
sahf
jo
hlt
xor
rcll
aad
mov
loopne
call
icebp
xor
rcrb
je
xor
fstl
decl
jecxz
repnz
mov
sti
lret
ss
test
push
out
insb
mov
repnz
push
out
pusha
std
pop
dec
sbb
inc
loopne
adc
lret
scas
add
xlat
adc
cmp
inc
inc
cmpsl
inc
sarl
xor
sub
sti
mov
push
jns
cld
shrl
enter
loopne
cmp
enter
shrl
pshufw
and
lahf
adc
rolb
lock
outsl
sub
xchg
cli
mov
sbb
xchg
cmovae
fwait
notl
lcall
leave
lds
xchg
push
pop
aam
adc
imul
jnp
pop
fs
cmp
repz
jnp
jecxz
pop
jmp
nop
pop
stos
add
jbe
adc
inc
out
push
pop
movl
sbb
jle
scas
mov
sar
lock
push
rolb
mov
jl
and
inc
dec
adc
jmp
jb
sub
fcoms
mov
cmpsl
clc
xchg
out
leave
es
dec
add
jne
jge
mov
mov
pushf
aad
jge
rolb
sbb
jno
push
cmp
out
scas
mov
cmp
sbb
mov
aam
ret
dec
fidivl
mov
dec
lcall
insb
xchg
pop
pop
push
pop
nop
push
ds
and
pusha
rclb
or
dec
sbb
out
rolb
decb
add
sub
pusha
ja
lods
loopne
lcall
add
add
sub
clc
jne
and
imul
sbb
and
and
and
mov
add
mov
cmp
das
stc
mov
jno
pop
inc
aaa
pop
cmp
arpl
mov
xchg
mov
and
bound
mov
pop
and
add
ljmp
add
in
and
test
inc
out
mov
fsubl
imul
and
mov
mov
shl
mov
inc
sahf
in
add
rclb
inc
inc
cmpsb
inc
orb
pop
bound
shl
lock
push
inc
sbb
dec
push
outsl
push
fisttps
mov
loopne
pop
decb
ljmp
xchg
xchg
jbe
push
inc
shll
cmp
adc
xlat
push
mov
in
sbb
add
push
inc
pop
inc
jbe
scas
pop
or
mov
pusha
mov
xlat
and
pusha
mov
pop
inc
pop
mov
xor
icebp
aam
rclb
add
and
add
shrb
dec
data16
jo
pop
fldenv
jb
fnsave
mov
rolb
xlat
dec
pop
or
add
in
punpckhbw
xor
ljmp
loopne
and
pusha
pusha
add
inc
fs
inc
sub
inc
and
out
in
sub
and
rol
cld
cmp
shl
xchg
cmpb
pop
mov
addb
int3
out
push
aad
iret
push
push
popa
mulb
dec
and
cmp
mov
inc
mov
push
inc
addb
shlb
pop
stc
or
dec
jmp
fists
cltd
jno
cmp
cmpb
sbb
dec
dec
inc
jp
ds
sbb
sbb
sti
cmp
pop
insl
pop
fstps
and
mov
push
xchg
jne
mov
adc
push
mov
rcl
pop
aad
dec
movsl
aad
scas
inc
mov
add
loopne
xchg
rolb
addb
add
into
mov
pop
pop
repz
or
jno
mov
dec
dec
adc
sti
or
fistpl
adc
loopne
data16
pusha
jl
mov
jb
lods
fisttpl
outsl
add
out
sbb
dec
pusha
sub
icebp
adc
pusha
loopne
leave
inc
loopne
and
sbb
and
mov
mov
idiv
xchg
inc
adc
xor
dec
and
add
add
mov
mov
inc
pop
jge
addb
bnd
loopne
imul
mov
notb
rolb
jne
mov
pusha
cmpl
pop
js
pop
lock
cmp
in
jne
movb
push
pop
push
mov
lea
inc
orl
mov
insb
sub
inc
mov
mov
jae
cmp
mov
das
loopne,pn
push
push
outsb
outsb
cltd
scas
and
cmp
mov
push
das
dec
call
addb
loopne
mov
sbb
repnz
mov
cltd
jmp
pusha
mov
fs
push
mov
daa
sub
fdiv
test
and
icebp
das
cltd
add
and
inc
call
loop
cmp
inc
inc
cmp
and
cmpb
mov
xchg
insb
dec
jo
add
xor
inc
fmull
xchg
ret
test
rol
loopne
sahf
cmp
ds
jge
xor
mov
inc
jns
pop
xchg
cmp
mov
pop
fdivl
dec
push
lret
mov
lahf
in
jle
push
inc
mov
push
add
inc
adc
pop
and
ret
jge
ds
jns
xchg
cmp
cmpsb
loopne
inc
outsb
lcall
fwait
pop
cmp
add
imul
mov
bound
popf
enter
call
and
xor
sbb
popa
outsl
aas
aad
cmp
xchg
test
xor
pop
lods
mov
fwait
movsb
pusha
pusha
aas
xchg
xor
and
sub
mov
sub
loopne
pop
ret
clc
ret
or
inc
ret
cmc
jae
add
andb
mov
sub
ret
repz
mov
add
insb
bound
jno
adcl
lret
pop
add
mov
test
and
rclb
pop
gs
dec
sbb
inc
mov
shll
mov
inc
in
push
mov
out
adc
adc
pop
pop
push
sbb
xchg
fldt
out
fmuls
or
lahf
out
int
xchg
xchg
jecxz
dec
pop
push
outsb
xchg
mov
sub
movsl
push
adc
and
or
shl
rcl
sbb
dec
cmpsl
cmp
adc
mov
addb
test
pusha
stos
pusha
loopne
push
rcrb
ljmp
jnp
shlb
inc
jg
lret
jnp
and
repnz
add
mov
xchg
adc
and
ja
or
mov
cmp
sbbl
fldt
loopne,pn
dec
add
addb
out
and
sub
lods
mov
and
and
or
outsb
cli
iret
std
es
repz
push
lret
add
pop
jo
push
cmpsb
mov
addl
inc
rolb
adc
pusha
and
and
leave
out
lahf
xchg
loope
in
mov
sbb
loopne
aas
int3
sar
inc
out
pop
pop
ljmp
sub
shl
sbb
pusha
mov
cmpsl
lahf
jge
ds
push
addb
xchg
mov
push
mull
push
xchg
xchg
aad
and
inc
jne
pop
icebp
sti
inc
and
inc
lea
jne
cld
ds
xlat
mov
dec
fbld
adc
movsb
pusha
pusha
dec
push
adc
pusha
dec
shl
jae
push
pop
jno
movsl
fbstp
add
lcall
int3
and
add
pop
fsubl
and
jae
dec
inc
sarb
ret
push
cmp
andb
cltd
es
jle
jl
cmp
pop
sub
push
inc
and
into
cltd
mov
or
rclb
scas
addb
pop
icebp
shll
push
dec
ja
cmpsl
fcoml
sbb
pop
in
sbb
out
or
loopne
mov
xchg
out
ret
pusha
and
mov
xor
andb
mov
imul
lahf
lret
shll
jge
xchg
lods
cmpl
aas
sub
push
ret
push
pusha
loopne
lcall
and
jl
in
fisttpl
pop
sahf
lret
sbb
jmp
add
loopne
dec
int3
subl
add
stc
inc
xor
inc
mov
pop
sahf
insl
pop
xchg
adc
repz
cld
test
rolb
add
mov
jno
rolb
scas
add
push
xchg
shlb
xor
add
mov
lahf
andb
movsl
and
loopne
bound
jnp
adc
je
cmpsb
andb
lods
aas
cmpsb
loopne
imull
cmp
andl
mov
loope
push
sbb
inc
xor
inc
xchg
pusha
sahf
ja
in
daa
insl
or
xchg
xchg
mov
inc
jg
mov
dec
rorl
in
add
inc
mov
and
sarb
xchg
lds
test
mov
ds
pop
fistpll
xor
add
shll
pop
cmp
rcrb
jp
lds
je
cmp
mov
mov
loopne
sbb
loop
mov
es
or
add
add
xor
lds
int3
or
in
jmp
adc
daa
mov
mov
cmpsb
andb
cwtl
scas
inc
rcl
or
nop
stos
mov
pusha
adcb
xchg
andb
pusha
loopne
sub
sub
mov
mov
push
movsb
pusha
loopne
scas
and
and
hlt
push
addb
and
inc
xor
das
mov
push
mov
loopne
jno
cmpsl
lods
dec
mov
inc
aam
xorl
and
shlb
push
xchg
adc
fwait
jmp
out
and
mov
cmp
les
test
orl
and
repnz
addr16
jmp
pop
mov
mov
mov
mov
and
shrb
cmp
shr
xor
clc
fdivrl
pop
inc
gs
push
push
and
add
shlb
cld
into
out
into
insb
out
imul
out
add
addb
mov
mov
sbb
ds
mov
add
enter
or
cmpsb
loopne
call
and
xlat
or
pusha
inc
pop
jns
test
add
inc
bound
cs
add
sub
jbe
mov
loopne
loopne
and
xchg
lock
loopne
cld
pop
int
shlb
movsl
xchg
sbb
enter
cmp
fucomip
shr
inc
dec
xchg
and
add
int
and
add
xor
addb
iret
push
and
pop
adc
pusha
mov
xlat
hlt
or
shrb
cli
loopne
cmp
xor
aad
inc
loopne
xchg
xchg
icebp
sbb
ja
adc
repz
arpl
loopne
and
inc
jo
rorb
push
xchg
pop
dec
pop
push
inc
arpl
and
out
sbb
cld
cwtl
cmp
out
inc
cmp
rolb
push
ficoml
cmpsb
loopne
mov
sub
push
adcl
add
cld
repz
inc
xor
and
addb
or
inc
or
cmp
cmp
pop
jg
leave
sub
adc
fiadds
xor
mov
inc
and
repz
jmp
dec
sub
push
shlb
pushf
popa
mov
pop
dec
into
lock
inc
in
ds
pop
sbb
stc
fnstsw
inc
mov
ss
dec
jb
rcll
or
mov
or
inc
out
outsl
sub
loopne
cmp
inc
jbe
stc
nop
pop
shlb
fldt
and
bound
aas
inc
in
dec
and
lods
in
and
mov
mov
mov
mov
mov
subl
and
rclb
loopne
jo
and
inc
adc
jnp
xor
push
andb
push
jo
pop
repz
fsubs
dec
or
push
imul
add
or
jp
adc
xlat
and
add
insl
xor
lock
loopne
xor
loopne
movsb
and
mov
shlb
push
fdivrp
stc
or
add
mov
inc
scas
add
inc
add
mov
jo
shl
in
adc
xchg
rolb
in
enter
mov
hlt
sbb
mov
adc
inc
push
dec
cmp
insb
es
mov
mov
dec
mov
mov
fwait
jb
lods
add
ret
xorb
push
pusha
pusha
mov
and
aad
mov
lea
push
xchg
imull
mov
pop
cmpl
rol
out
mov
rolb
mov
in
add
shlb
mov
push
mov
jmp
out
mov
and
mov
shrb
lcall
push
inc
mov
loopne
adc
movsl
repz
rorb
mov
pusha
loopne
inc
push
pusha
and
mov
loopne
and
pusha
sbb
mov
inc
iret
cmp
inc
inc
aam
dec
and
cmp
out
mov
maxps
and
sbb
test
adc
push
push
hlt
bound
cmp
das
add
ja
cmp
leave
ds
jmp
add
out
and
jne
cwtl
ret
testb
out
mov
pop
aas
daa
mov
loopne
xchg
repnz
and
mov
popf
bound
fcmovbe
mov
idiv
out
imul
dec
inc
shll
and
aad
cmp
jle
pop
dec
mov
push
jecxz
lds
inc
push
sub
andb
add
and
inc
stc
arpl
mov
inc
mov
mov
or
movsb
mov
inc
jp
xchg
pop
xchg
decl
pusha
inc
psllw
mov
add
sarb
pop
test
and
addb
mov
fnstcw
and
jnp
jb
into
mov
adc
lahf
mov
sahf
dec
push
mov
inc
pusha
nop
clc
jl
jb
and
xor
imul
push
loopne
call
pusha
pusha
push
xchg
enter
fdivr
rcrb
pop
and
add
and
mov
mov
add
push
sbb
push
push
xor
mov
adc
dec
insb
xlat
fists
cmp
cli
jne
negl
stos
add
sbb
mov
mov
xor
testl
jl
rolb
aas
aas
inc
mov
lods
pusha
add
les
shlb
das
jmp
mov
andb
cmp
add
fstpt
test
pusha
push
push
dec
sahf
jecxz
xor
ja
xlat
mov
adcb
popa
inc
mov
push
xchg
cli
idivb
add
fcmovnb
mov
inc
enter
pop
jecxz
inc
xorb
inc
xor
lds
inc
pusha
js
mov
stos
pusha
and
cmp
and
ret
mov
rolb
pusha
mov
js
sahf
sub
xor
and
push
repnz
mov
lcall
pop
bound
nop
mov
out
xchg
sub
adc
loopne
addb
mov
xlat
in
daa
dec
adc
ljmp
mov
iret
or
subb
addl
mov
in
xor
pop
pop
jbe
cltd
test
push
add
les
cli
mov
rclb
jne
inc
movsb
loopne
in
sbb
xchg
mov
lea
push
loopne
mov
insl
jb
cltd
jle
push
test
in
xchg
mov
loop
loope
inc
rcrb
cmp
int3
pop
mov
stc
or
lds
xchg
sub
pusha
ret
test
mov
lahf
sub
add
push
jb
mov
les
push
mov
loopne
pop
inc
mov
push
filds
scas
inc
pusha
out
pusha
pusha
fidivs
xchg
arpl
mov
inc
hlt
cmp
mov
je
jns
xchg
inc
mov
out
push
xor
pop
jmp
repnz
in
jge
and
loope
inc
adc
addb
or
loopne,pn
imul
rcr
jno
or
outsl
cmp
les
inc
mov
out
aad
sbb
inc
pusha
pop
int3
test
repz
add
add
inc
jbe
jmp
daa
in
or
scas
add
add
jnp
pusha
loopne
adc
inc
loopne
and
addb
mov
push
inc
addb
add
out
neg
jno
or
inc
and
mov
cmp
mov
mov
jl
or
xchg
popa
sub
test
xor
sbb
roll
shlb
out
inc
rclb
shrl
daa
or
add
and
push
cmp
in
dec
pop
loopne
cmp
pop
in
adcl
and
mov
fidivs
in
and
mov
rorb
rcrb
sub
pusha
or
inc
arpl
dec
test
mov
push
xor
loopne
inc
scas
inc
cmpb
out
call
nop
lods
xor
push
arpl
ret
inc
and
rcrb
dec
xchg
jle
scas
iret
adc
jmp
rcl
xchg
das
rcrl
fbstp
andb
inc
and
lret
call
mov
and
and
pusha
xchg
lods
jbe
push
mov
inc
mov
sbb
jl
sbb
addb
mov
sbb
jecxz
seto
mov
sbb
imul
inc
popa
pop
cmp
sahf
inc
les
popf
out
movsl
aaa
test
sbbb
ljmp
insl
push
inc
inc
mov
push
push
int
shr
mov
jne
jg
sub
pusha
mov
loopne
inc
dec
and
sbb
cwtl
pushf
out
cltd
inc
ret
dec
faddl
gs
and
add
xor
jge
addb
fwait
cmp
jno
jnp
push
mov
ja
xchg
push
insl
out
in
jne
adc
cmp
add
inc
lods
jp
pushf
and
pop
pop
sub
or
popf
scas
mov
pop
insl
cmp
rol
sub
iret
repz
pop
insb
icebp
nop
cmp
je
pop
xor
fsts
cmp
sar
mov
call
dec
repnz
ljmp
call
dec
leave
and
pusha
test
loopne
frstor
push
cmp
sarb
pop
pop
and
loop
das
ret
rcl
cmp
cmc
andb
in
pop
ja
push
test
mov
pusha
aaa
imul
call
lock
aam
das
lds
add
inc
mov
in
inc
in
fs
or
notb
inc
jecxz
mov
cld
mov
ljmp
sbb
xchg
arpl
mov
shll
mov
add
and
xchg
jne
jl
ja
or
add
mov
adc
cmp
sbb
push
push
jle
movsb
rolb
aas
pop
sahf
cmc
je
and
dec
lahf
jns
negl
fwait
addr16
fistpll
mov
add
xchg
xlat
adc
popf
xchg
addb
insb
clc
jnp
out
pop
or
loopne
dec
ja
mov
inc
rorb
mov
xor
mov
cmc
adc
enter
xor
movsb
andb
xor
dec
inc
adc
cs
mov
mov
or
sbb
jne
lods
jp
xchg
mov
xchg
xchg
mov
xorb
cmc
pushf
jns
loopne
dec
push
sub
xchg
iret
xchg
push
and
insb
xchg
or
and
mov
pop
sarl
adcb
sub
push
ljmp
shrb
pushf
les
xor
mov
and
add
and
insb
fcoms
lret
xchg
lret
sbb
testl
leave
divl
out
std
clc
into
push
jne
rorl
cltd
fwait
shrl
jl
and
or
pusha
mov
and
adc
lea
jo
mov
shlb
push
loopne
movsl
ret
pop
push
es
push
lock
add
loopne
jg
add
adc
mov
jnp
insl
adcl
add
or
shrb
andb
popf
clc
js
or
cmp
lret
call
xchg
and
add
sub
pushf
mov
jnp
fcoms
add
dec
test
outsl
inc
icebp
addl
cmp
addb
or
add
push
jmp
nopl
mov
sar
add
ret
mov
rcrb
loopne
inc
mov
jge
push
dec
test
xorb
std
icebp
addb
and
mov
dec
js
je
dec
xor
pop
jecxz
aas
sbb
pop
and
rolb
pop
pop
cmp
ret
xor
jo
shrl
int
cmc
lret
xor
mov
lock
js
dec
ljmp
push
je
addb
push
aas
sbb
aam
das
push
xchg
push
mov
add
jb
cmp
add
inc
sub
mov
loopne
jns
outsb
mov
hlt
cwtl
jmp
dec
xor
mov
andb
xor
adc
sbb
hlt
and
sub
add
xor
pusha
fisttps
shll
shlb
add
jl
sbbl
pusha
pop
push
adc
data16
and
adc
addb
cld
clc
aam
rcrb
lock
or
and
int3
push
add
loopne
iret
dec
sbb
stc
in
jbe
dec
xchg
or
and
mov
orb
or
dec
lcall
mov
add
and
out
das
cld
mov
add
jg
std
and
mov
sbbb
pusha
add
xchg
sbb
int
mov
pop
xor
cmc
pop
popa
imul
sahf
mov
push
sbbl
aam
fsubs
adcb
mov
add
loopne
pop
adc
add
sarb
loopne
mov
movsl
jge
add
or
adc
mov
fldt
xchg
or
and
mov
andb
fwait
icebp
mov
inc
inc
pop
rcll
rolb
sbb
and
add
lret
add
stos
cmp
pop
ret
mov
inc
pusha
xor
sbb
sbb
inc
iret
outsl
scas
sub
test
rolb
mov
imul
cld
dec
mov
mov
imul
lret
dec
push
pushf
lcall
sbb
das
leave
sub
mov
adc
iret
inc
mov
insl
fisubl
clc
push
add
and
or
fidivrl
stos
shlb
mov
mov
xchg
test
lods
addb
xchg
inc
xor
bound
or
test
leave
mov
jl
xor
mov
lret
jge
push
lods
pusha
and
enter
add
or
add
add
ret
inc
pop
or
clc
fildl
nop
or
xorl
scas
pusha
shrb
xorb
inc
loopne
leave
xchg
mov
inc
inc
je
pop
sbb
rol
fcmovnu
mov
sbb
mov
and
add
inc
pusha
rol
stos
jbe
add
pusha
insl
imul
rolb
push
mov
shl
nop
xchg
and
inc
push
add
push
ret
loopne
addr16
add
mov
enter
test
add
xchg
inc
push
fwait
into
cmp
mov
pop
cmp
into
jecxz
cli
scas
push
mov
and
mov
cmp
push
loope
ficompl
insb
adc
jb
mov
inc
shlb
mov
push
out
xchg
dec
test
incb
add
sub
jno
pop
jge
cltd
test
dec
in
xorl
xchg
xor
pusha
icebp
xor
push
mov
shlb
sub
cmpb
pop
dec
push
dec
rolb
mov
and
xor
ret
icebp
aad
addb
test
inc
divb
pop
dec
popf
xchg
out
cmc
mov
mov
enter
jne
out
cli
aam
cmp
andb
mov
cmpsl
sahf
pop
mov
xor
pusha
jns
mov
movsb
rolb
and
sbb
pop
dec
pop
push
and
mov
loopne
enter
mov
mov
popa
xchg
jecxz
cmp
addr16
pop
in
dec
hlt
pop
popf
add
push
lret
jne
stc
stos
loopne
dec
jmp
mov
inc
add
inc
adcl
subb
rcrb
mov
mov
dec
sbb
popaw
cmp
loop
add
jae
push
pusha
mov
mov
inc
jbe
filds
cmc
and
shl
xchg
test
mov
loop
andb
mov
data16
or
mov
push
sti
cmpsb
add
sub
cmp
xchg
lods
add
mov
shlb
mov
cs
inc
add
and
dec
xchg
push
push
rcl
lea
jecxz
cmpsl
and
inc
cli
flds
test
aaa
adc
stos
pushf
cmc
mov
dec
mov
mov
loopne
jns
mov
and
adc
cmp
xchg
lea
addb
shll
xchg
adc
shll
cmpsl
cmp
in
cwtl
mov
and
mov
lods
pusha
add
stos
add
out
sbb
push
adc
es
pop
xchg
clc
into
or
mov
push
stos
loopne
xor
mov
pop
adc
adc
add
dec
push
xchg
clc
and
add
pop
or
add
nop
mov
add
mov
dec
dec
sahf
mov
push
add
call
pop
cld
stos
loopne
test
movsb
loopne
mov
ficoml
loopne
test
xchg
sete
mov
out
mov
add
int
and
dec
xchg
testb
jecxz
andl
fcmovnb
and
loopne
add
rcrb
frstor
mov
sub
test
loopne
por
pop
testb
insb
push
addb
xor
addb
push
dec
das
mov
sti
jl
add
test
add
inc
mov
cmp
push
mov
insl
insl
pop
jle
repz
xor
ret
dec
xchg
ficoml
pusha
imul
lods
shlb
aaa
pop
xchg
adc
fucomp
sub
loopne
mov
jns
dec
rcrb
ret
pop
repz
pusha
pop
repnz
adc
push
mov
bound
fcoms
dec
sbb
xchg
push
sbb
dec
cld
lret
or
stos
add
ljmp
add
scas
and
and
daa
inc
push
adc
sarl
and
pop
add
pop
fcomps
fmull
fstps
rcrb
add
loopne
sub
out
div
test
aas
add
inc
dec
nop
lret
xor
and
mov
xor
call
sbb
push
testb
xchg
pusha
sbb
mov
popf
test
mov
and
xorb
cltd
add
pop
dec
dec
je
shrb
xchg
xor
mov
adc
mov
pop
cmp
mov
pop
mov
mov
push
dec
insl
cmp
arpl
into
adc
inc
inc
push
lret
iret
sbb
pushf
mov
xorb
rcl
add
xor
rorl
daa
mov
ret
inc
insl
sub
mov
mov
ss
or
mov
add
pop
cwtl
inc
xor
mov
jl
jnp
xchg
shr
addb
movsb
rolb
je
xor
pop
std
ffree
aad
xchg
test
inc
sbb
or
mov
cmpsb
loopne
sti
jno
loopne
rcrb
ror
and
bound
mov
inc
add
shlb
in
gs
fildll
hlt
mov
jg
outsl
and
in
rol
fistps
sbb
clc
imul
inc
dec
shl
sbb
push
stos
adc
push
nop
add
stc
adc
push
or
push
addb
xchg
fidivrs
add
mov
inc
in
cwtl
stos
and
popf
outsl
aaa
hlt
mov
mov
xchg
mov
and
push
or
mov
cld
out
shlb
repnz
mov
mov
jmp
andb
xor
int
mov
push
add
pusha
mov
sbb
jg
je
pop
testl
imul
inc
adc
add
into
cltd
lahf
adc
loopne
adc
xchg
and
add
mov
add
push
adc
adc
and
sti
out
stc
stos
mov
cmpl
inc
pop
push
ljmp
xchg
jnp
into
rcll
cmp
stos
cli
xchg
dec
mov
and
fisubrl
aas
xchg
push
sti
scas
sub
mov
stos
inc
pusha
dec
js
mov
and
pushf
inc
orl
mov
add
int3
rorl
mov
sub
xorb
or
inc
push
ja
add
rolb
xchg
out
cmp
add
orb
dec
aas
je
subl
dec
dec
and
loopne
xchg
push
cmp
or
rclb
aas
dec
test
loopne
jb
pusha
or
push
fsubp
inc
push
push
push
in
push
lods
cmp
rol
insb
inc
sbb
and
rol
test
adc
inc
addr16
insb
xor
scas
or
rcrb
shrb
ret
cmpsb
loopne
lods
insl
clc
cmp
xor
clc
and
and
mov
pop
andb
int
test
pop
repz
lods
inc
fistpl
in
cwtl
dec
ja
andl
mov
pop
and
xchg
sub
addr16
leave
cltd
out
and
xchg
mov
and
ret
mov
stos
pop
xchg
movsl
pop
pop
and
push
rolb
xchg
and
shlb
std
mov
jno
xor
or
addb
rcrb
aam
insb
shlb
inc
dec
inc
jnp
mov
mov
push
call
ret
adc
lods
lret
cmpsl
xor
addb
loopne
add
xchg
and
adc
in
enter
or
pop
adc
idivb
and
ret
mov
std
xor
adc
pop
lret
movsl
ret
and
jle
adc
pop
or
inc
inc
leave
aas
jmp
adc
inc
mov
aas
push
jl
std
stos
inc
rclb
loopne
shlb
xor
ret
inc
xor
xchg
mov
hlt
out
jecxz
dec
mov
enter
loopne
repnz
cli
mov
xor
fbstp
jmp
adc
fs
ja
pop
xchg
cld
pop
lods
mov
push
push
xchg
mov
xchg
stos
jp
jg
into
xlat
sub
xchg
pusha
dec
test
bound
pop
mov
subl
orb
xchg
xor
ljmp
xlat
sub
rcr
mov
pusha
xor
jmp
addb
sbb
lock
xor
shlb
shl
jmp
xchg
xchg
ds
and
mov
xchg
cli
xchg
andb
xchg
pop
icebp
fwait
pop
pop
mov
sbb
frndint
mov
stc
pushf
test
loopne
inc
loopne
lds
loopne
stos
mov
mov
pop
fwait
push
enter
jecxz
push
andb
pop
mov
inc
and
andl
mov
inc
add
add
shlb
pop
popa
sub
ror
add
mov
pop
aam
push
push
pushf
sub
inc
loope
outsl
dec
movsl
mov
shll
mov
mov
fcmovnbe
xor
rolb
fmulp
push
flds
mov
mov
inc
push
aad
aad
or
ss
fdivrl
xor
push
inc
mov
inc
xchg
jb
andb
mov
sub
pusha
or
add
les
jno
andb
inc
test
mov
xchg
or
loopne
ja
data16
inc
pusha
movsb
add
ret
inc
mov
mov
add
or
neg
and
inc
pushf
mov
addb
push
inc
pop
int3
lahf
add
mov
mov
outsl
inc
and
rorb
xor
mov
or
mov
adc
xor
jl
iret
adc
inc
adc
jbe
and
sahf
sbb
insb
push
mov
loopne
mov
mov
or
pop
scas
and
xor
cmp
mov
mov
mov
jnp
mov
sub
jle
test
pusha
mov
addb
aam
inc
into
fcomps
push
lods
loopne
xor
clc
xchg
js
jns
inc
add
pusha
add
sub
mov
pop
mov
iret
mov
cmp
cld
jge
sbb
test
jo
cmpl
pusha
and
jl
hlt
loope,pt
add
pusha
shr
rclb
cmp
add
add
mov
xor
outsb
cmc
out
andb
inc
push
loope
bound
rolb
js
cwtl
aam
mov
sbb
xchg
mov
arpl
mov
or
mov
insl
inc
mov
rol
pusha
pusha
xor
fistps
mov
and
mov
jns
in
cld
push
and
sub
lea
imul
jg
imul
and
mov
js
leave
je
adc
and
and
pop
dec
js
cmp
pusha
pusha
mov
add
sub
or
lahf
les
push
test
pop
rcrl
mov
rcr
popa
xor
adc
loopne
enter
mov
add
fsubl
xor
xchg
lds
add
rolb
rolb
mov
ror
push
ret
cmc
int3
sahf
inc
bound
inc
in
xor
pop
adc
imul
or
push
mov
inc
dec
int3
inc
in
out
loope
fstps
cmp
andb
lahf
scas
or
and
jnp
test
mov
add
xlat
imul
inc
dec
frstor
pop
mov
sbbb
pop
sub
add
pop
mov
mov
sbb
jb
data16
fidivrs
test
and
mov
or
rcrb
shll
cmp
call
inc
add
xchg
mov
loopne
cmpsb
inc
inc
pop
das
push
or
pusha
lds
cmpl
jmp
pushf
aas
fxch
enter
andb
iret
push
add
cltd
jae
mov
mov
loopne,pn
inc
arpl
int
push
lds
inc
mov
scas
and
jmp
mov
xchg
push
inc
pusha
stos
loopne
lea
lods
pop
std
test
shl
bound
lock
scas
add
fsubrs
dec
cmp
jmp
aad
addr16
in
cmpsl
shr
pusha
out
add
jmp
xchg
stos
xor
into
cmp
mov
mov
inc
imul
std
repnz
stos
add
inc
shl
jbe
in
mov
dec
fcmovnb
insb
pop
push
mov
test
loopne
or
rcrb
test
ret
loop
sahf
mov
mov
fisubrl
pop
and
add
mov
jmp
shrb
add
and
outsl
mov
mov
mov
imul
fimuls
lcall
icebp
ret
imul
lock
mov
mov
mov
xchg
xchg
inc
mov
test
adc
pop
repz
out
fs
mov
into
xor
in
jne
cwtl
loop
mov
push
sbb
lock
leave
les
xchg
and
pusha
notl
roll
fs
filds
arpl
rorl
xchg
stos
push
add
jp
xor
mov
les
xchg
fidivl
cmc
xchg
es
add
adc
iret
outsl
add
and
inc
js
jne
dec
push
out
cmp
push
mov
cld
mov
mov
inc
test
xchg
js
dec
fimuls
pop
jo
adc
mov
sbb
mov
jne
pop
mov
pusha
clc
sahf
rclb
jmp
insl
pop
orl
cmpl
xchg
stos
mov
test
mov
int3
in
sbb
outsl
sub
inc
shr
xor
mov
pop
add
inc
jne
add
hlt
mov
pop
mov
add
mov
adc
add
test
add
pushf
push
rorb
loopne
add
inc
sbb
jnp
add
pusha
pusha
lock
pop
xchg
insl
jb
mov
lcall
mov
fs
cld
outsb
je
mov
inc
add
inc
mov
mov
shlb
pusha
inc
push
sub
push
inc
fidivrs
and
cmp
adcl
dec
ja
cwtl
push
aam
xchg
lcall
or
pusha
add
dec
push
push
cmp
mull
loopne
dec
test
rolb
lds
xor
mov
pusha
add
mov
adc
and
test
ds
add
mov
shll
loopne
and
mov
push
xor
jbe
enterw
loope
pusha
loopne
dec
and
orb
pusha
xchg
jae
arpl
or
jmp
lcall
push
sub
xchg
cmp
mov
add
mov
mov
dec
pop
push
mov
pusha
cmp
or
sub
jg
imul
add
pusha
mov
or
inc
jmp
jbe
loopne
xor
or
add
mov
clc
jle
mov
mov
inc
adc
lds
and
lods
fistpll
jbe
lret
popf
aaa
and
dec
les
and
mov
xchg
ja
sbb
std
jno
ds
addr16
fisubrs
and
rolb
pop
pop
xchg
fisubs
jmp
mov
inc
int
aas
in
je
pavgw
data16
jl
popa
clc
mov
and
pop
jp
dec
dec
mov
fdivs
xor
insl
mov
enter
mov
cmp
cld
fisttpll
outsb
xchg
pop
xchg
add
add
fs
adc
jo
cmovnp
fstpl
dec
cmp
dec
loope
dec
push
stos
inc
inc
stc
push
ja
in
inc
sbb
out
repz
gs
test
lock
stos
and
mov
rcrb
mov
xchg
mov
add
ret
rolb
psrlq
sbb
insl
pop
cwtl
jae
aas
jl
cmpsl
fs
dec
mov
xor
and
mov
pop
bndldx
addl
in
loope
sbb
xor
addb
sub
loopne
fadd
inc
sub
add
mov
stc
sbb
mov
daa
andb
pop
pop
jo
inc
rclb
andb
aad
nop
mov
dec
call
and
sbb
lods
mov
fistpl
rorb
mov
scas
xchg
rolb
scas
cmp
mov
add
stos
hlt
movsl
imul
and
sbb
add
add
cwtl
push
outsb
pop
call
xorb
cmp
mov
cli
mov
loopne
orl
adc
je
cli
push
pop
mov
test
and
jnp
sub
mov
and
mov
xchg
add
fnstcw
pop
ljmp
push
scas
add
ret
rolb
fwait
cld
lcall
push
inc
and
and
and
pop
repnz
mov
loopne
pop
pop
push
les
loopne
inc
mov
aas
mov
arpl
lret
xor
mov
inc
sbb
divl
inc
cmp
ss
push
cmp
lock
aaa
xchg
mov
pop
add
fistpll
push
sbb
pusha
adc
icebp
mov
daa
cmp
cmp
pop
dec
jno
adc
enter
inc
pusha
sbb
jl
add
fdivs
lret
jmp
mov
xlat
jbe
adc
and
rcrb
sbb
into
sub
je
xor
cmc
jns
mov
in
and
loopne
popa
inc
jbe
scas
mov
addr16
jno
inc
add
mov
aas
jnp
and
mov
pop
xlat
fsubl
loopne
jmp
repz
cmp
cmp
mov
bound
mov
addb
xor
adc
pop
mov
push
mov
push
inc
sbb
ret
or
jns
xlat
mov
pop
movsl
jecxz
inc
xchg
xor
inc
or
mov
and
andb
ss
popf
les
and
add
mov
add
jae
cltd
mov
lds
jns
mov
add
cmc
rolb
jns
pop
out
in
push
mov
cltd
or
ret
add
and
pusha
sbb
or
jns
mov
mov
jno
rol
mov
cld
out
push
dec
outsb
sub
sub
fbstp
jmp
jle
pop
xor
add
shrb
add
push
dec
add
les
shlb
int3
sahf
push
jmp
inc
pop
add
sub
mov
add
outsl
jmp
loopne
in
lods
rolb
add
out
aas
mov
daa
inc
sbb
lea
add
mov
pop
dec
sbb
jp
pop
aam
inc
add
or
loopne
mov
add
pop
or
loopne
loopne
cld
dec
sub
xchg
imulb
imul
mov
arpl
or
lea
sbb
xor
pop
pushf
addb
scas
inc
mov
stos
mov
sbb
xor
or
pusha
inc
sbb
xchg
add
pusha
call
lret
andb
out
shlb
aaa
sub
mov
and
in
fcompl
clc
sbb
add
mov
int
pusha
inc
dec
test
add
cmpsl
lcall
mov
sbb
add
mov
test
and
mov
and
or
mov
dec
pop
adc
adc
loope
xchg
outsb
add
in
jbe
pop
jae
pop
insb
sbb
and
ds
add
add
pushf
lock
sub
js
call
rcrb
dec
stos
andb
pop
xor
lahf
mov
outsl
mov
cwtl
shlb
jecxz
mov
popa
daa
pop
lock
rolb
aad
dec
jno
cmc
jae
lods
add
sub
mull
lea
pop
mov
aad
mov
movsb
shlb
jne
movsl
xchg
cmp
fcompl
sbbb
addr16
addl
loop
dec
push
test
rclb
mov
pop
lods
inc
rolb
push
mov
mov
cld
scas
shl
xchg
pusha
lods
pusha
pusha
inc
ffreep
mov
adc
ficoms
loopne
loopne
and
pusha
int3
movsb
mov
and
addb
shlb
add
add
push
cmp
cmp
fdivrs
and
fdiv
sbb
jnp
push
loope
add
inc
insl
cmp
push
mov
fsts
xor
mov
ss
inc
jae
add
loopne
add
loope
dec
xchg
mov
pusha
out
out
lea
jle
mov
mov
jns
stc
sub
pusha
inc
repz
pusha
pusha
push
ds
push
shl
inc
enter
and
inc
add
adc
mov
pusha
loopne
aas
loopne
add
mov
and
cmpl
xor
inc
jge
repnz
int
into
ret
jp
sbb
or
inc
mov
push
mov
dec
mov
xchg
lods
jge
mov
add
xor
lcall
xchg
pop
aad
push
cmpsl
mov
int3
lahf
clc
jle
movsb
mov
mov
mov
loopne
in
or
lret
test
and
mov
xchg
data16
out
jl
shlb
lock
ret
pusha
adc
idivl
test
push
sub
inc
mov
in
jb
shl
mov
push
icebp
dec
call
adc
inc
add
inc
mov
call
mov
popa
test
pusha
cld
lcall
rolb
and
test
pop
movsb
and
fwait
dec
mov
fcmove
insl
lret
cld
dec
aaa
sub
leave
or
cmpsl
sub
sbb
dec
loop
adc
pusha
jmp
insl
push
fadd
bnd
aam
lea
addb
push
cmpsl
or
popf
and
add
or
pusha
jecxz
pop
repz
andb
or
mov
pop
cli
and
into
add
icebp
cmc
in
inc
out
add
into
inc
lahf
add
or
dec
jmp
xchg
pusha
jecxz
imul
and
xchg
jns
jae
sbb
andb
cs
mov
out
loop
xor
lcall
les
cli
and
jne
pop
adc
shrb
shl
pusha
ss
mov
lods
loopne
inc
popf
or
pusha
mov
lea
cmp
pop
mov
push
sarb
out
jecxz
jo
ljmp
xlat
adc
ljmp
cmp
out
adc
sbb
dec
inc
fsubr
and
iret
fstl
test
adcb
sub
push
cmp
xchg
test
or
pop
call
in
lock
loopne
xor
pushf
in
dec
pop
jle
inc
pusha
cmp
outsl
xor
rol
out
xor
aas
jbe
cmp
lds
addb
lods
test
and
and
daa
push
fsub
jne
lcall
mov
mov
icebp
std
cmp
insl
adc
and
rcrb
pop
fisubrl
xchg
xchg
jbe
pop
add
mov
fbld
out
hlt
insb
nop
jle
cli
fsubs
pop
push
ret
adcb
test
and
nop
cmpsl
rcl
cmpsb
mov
cs
popa
xorl
pop
push
nop
enter
xor
mov
jae
pusha
mov
ret
jns
pop
inc
out
inc
mov
mov
aam
or
in
cmc
cs
lret
test
sbbb
cmp
mov
loopne
inc
adcb
mov
push
jns
jp
ljmp
and
xchg
pusha
sbb
mov
add
pop
stos
sbb
jge
repnz
pusha
or
pop
pushf
xchg
jl
insl
jp
roll
and
sarl
pop
inc
xlat
mov
mov
jns
dec
fisubrs
mov
add
pop
jae
arpl
adc
movsb
and
addb
loopne
mulb
push
aas
gs
inc
add
jmp
int3
mov
push
push
addb
dec
pop
jg
and
ds
leave
clc
jb
fcmovnbe
aad
insl
std
dec
outsl
aas
or
pushf
mov
mov
into
xchg
scas
add
add
fabs
and
mov
stc
or
inc
push
inc
loop
jo
add
mov
inc
mov
loopne
pop
ss
push
add
or
andb
rclb
shlb
fs
jnp
add
movsb
andb
leave
xchg
cli
xchg
mov
hlt
push
pop
ret
es
mov
loopne
lods
inc
rorb
dec
test
fnsave
inc
or
add
int3
xchg
inc
ret
ss
or
add
sub
fidivs
and
inc
dec
aas
jge
loopne
xchg
mov
sbb
testb
dec
mov
pop
push
insl
or
and
sbb
or
mov
inc
mov
pushf
stos
cwtl
andb
add
rolb
test
inc
xor
repnz
inc
fsts
stos
roll
mov
adc
sarb
arpl
lea
mov
loopne
dec
pop
inc
lods
fistps
pop
fsqrt
push
scas
and
lret
in
push
xor
inc
pop
dec
pop
mov
add
inc
mov
pusha
psllw
in
inc
jl
rcll
and
lods
add
inc
push
jle
vandnps
sbb
pop
lods
add
pop
mov
inc
int
pop
popf
adc
inc
adcb
outsb
nop
test
loopne
ss
pop
cmp
rcr
ret
in
out
push
inc
orb
inc
xor
shlb
mov
sub
push
sti
lret
loopne
add
xchg
cltd
sbb
fisubrs
fistpll
roll
inc
mov
add
mov
bound
add
mov
ljmp
and
hlt
mov
pop
ljmp
insl
loope
iret
xchg
inc
fidivs
xor
or
pusha
cmp
pusha
and
and
or
add
ror
testb
rclb
push
xchg
insl
mov
add
adc
push
adc
loopne
sub
loopne
adc
pusha
add
inc
shlb
xchg
pusha
push
mov
jne
push
shlb
lea
fwait
cltd
xor
pusha
and
and
push
xchg
repz
adc
loopne
xchg
rcll
insb
mov
andb
insl
dec
xor
inc
scas
jb
icebp
mov
and
inc
shrb
push
cmp
jnp
hlt
mov
xor
inc
cmpsb
inc
and
push
push
and
lret
hlt
cmpsl
mov
mov
out
adc
call
shrb
adc
stos
loopne
push
addr16
int
addb
xchg
sbb
addr16
cs
lahf
stos
xchg
andb
cmp
cmpsl
test
andb
bound
popa
add
and
daa
or
shlb
mov
call
add
lret
aaa
cmp
addb
lret
add
scas
mov
sbbb
sub
loopne
and
mov
scas
sbb
sti
push
xchg
andb
loopne
mulb
add
push
and
adc
xchg
pusha
mov
es
addb
push
repnz
sbb
sub
add
cwtl
dec
enter
sub
or
rorl
rolb
push
mov
ja
and
pop
cmp
add
xchg
loopne
int3
pop
dec
sub
stos
imul
in
mov
xchg
mov
inc
fsubr
rolb
jb
adc
out
jmp
rol
or
loopne
and
pusha
sti
inc
neg
outsb
push
sbb
pusha
add
movsl
cmpsl
repz
sub
shrb
add
and
nop
mov
aad
and
add
shl
adc
cli
mov
xchg
addr16
stos
mov
fwait
cmpsl
fldenv
iret
repz
jg
cli
popf
ret
andb
rcll
push
push
outsb
lahf
cmpsl
dec
jge
pop
sbb
test
subb
lret
mov
pop
pop
pop
icebp
shlb
add
add
data16
and
pusha
loopne
ficoms
lods
add
dec
mov
sahf
fldenv
mov
int3
xlat
xor
jne
sarb
add
outsl
mov
mov
pop
scas
loopne
inc
xor
xchg
mov
add
inc
mov
insb
and
loopne
inc
and
sti
mov
pop
mov
imul
loopne
in
aas
dec
fsubs
or
xchg
and
and
lahf
adcl
loopne
gs
jns
xchg
ret
and
cmpb
push
inc
addb
mov
int3
insb
enter
xchg
dec
xchg
sub
jne
push
loopne
addb
adc
cmc
adc
shll
adc
jle
cld
sbb
jg
fucomip
sbb
jg
bound
lods
shlb
sbb
imul
sarb
mov
push
rolb
ficoms
test
out
mov
addl
inc
mov
pusha
aas
push
inc
cli
stc
mov
sarl
and
in
addb
xchg
movsb
add
jle
out
adc
outsl
fs
adc
mov
adc
pop
cmp
jbe
fsubrp
mov
cmc
out
rcll
leave
pushf
jne
xchg
dec
cs
add
pop
imul
add
push
test
add
sub
adc
lods
adc
dec
jne
jo
mov
sub
loopne
jl
sbb
add
scas
dec
int
xchg
jo
cwtl
stos
add
popa
and
sbb
and
sahf
in
les
mov
xor
fmull
lods
and
xchg
pop
push
out
inc
sbb
ljmp
jno
cltd
lret
mov
nop
or
test
lahf
lret
add
out
insl
or
mov
repnz
mov
popa
fs
dec
mov
add
inc
test
xor
adc
scas
scas
loopne
lahf
sbb
jp
divl
popa
lods
sbb
in
sarl
pusha
loopne
push
jns
jle
push
mov
add
cmp
mov
cwtl
outsl
inc
fs
or
add
cltd
arpl
mov
dec
pusha
inc
pop
mov
shll
rcl
test
pop
xor
jae
pusha
dec
add
add
outsb
pop
jae
icebp
inc
push
add
and
les
testl
loopne
or
loopne
out
dec
xor
pusha
leave
ror
adc
mov
inc
inc
aam
pop
sarb
mov
sub
stos
sahf
xor
xlat
ss
loopne
lahf
pop
shlb
fdivp
rorl
andb
mov
sarb
aaa
cmp
gs
and
rcl
sbb
or
mov
add
sahf
testb
cmp
adc
outsl
dec
sbb
jge
cli
pop
jecxz
popf
insb
mov
push
pop
fwait
jns
inc
je
icebp
repz
orl
movb
jge
and
and
and
jle
les
pop
push
pusha
and
push
and
mov
and
notb
xchg
repnz
addl
repnz
inc
orb
xchg
insb
pop
stos
and
xchg
and
rolb
das
push
and
loopne
dec
push
adc
inc
mov
sub
pusha
pop
jp
xchg
jp
fdiv
imul
scas
addb
pop
mov
test
rcr
mov
outsb
add
lds
std
pop
jne
or
leave
ss
mov
jae
pop
les
pushw
pusha
jnp
xchg
lahf
imul
shlb
in
rcrb
sbb
add
test
add
insb
fildl
add
sbb
shl
mov
mov
mov
lea
loopne
inc
and
shl
outsl
ja
jmp
sub
inc
xchg
push
inc
inc
or
loopne
push
gs
adcb
loopne
or
sbbb
ss
outsb
hlt
lcall
fstl
sbb
arpl
dec
imul
cmp
daa
push
andb
das
movsl
addr16
scas
sti
ret
cmp
inc
and
mov
lahf
xchg
inc
fdivs
cld
inc
aaa
and
pusha
push
and
rolb
cwtl
fistps
mov
mov
addb
iret
sbb
popa
subl
mov
lods
outsb
and
pusha
adc
unpcklps
xchg
push
aad
inc
inc
pop
addb
outsl
jno
sbb
outsb
dec
loope
xchg
inc
adc
and
jl
pop
mov
rclb
inc
movb
das
fldt
inc
sti
jbe
and
add
les
imul
adc
add
add
dec
dec
push
insl
add
addb
add
mov
loopne
xchg
stos
add
push
mov
je
mov
cld
adcl
push
mov
pusha
mov
aam
mov
addb
xor
cld
jecxz
xlat
loope
mov
add
ret
aam
push
addb
fwait
push
pusha
mov
rolb
push
std
fs
mov
mov
sub
rcr
in
dec
dec
or
jbe
lds
in
push
or
mov
scas
mov
xchg
loopne
cli
movsb
add
test
andb
pop
pop
fisttps
iret
ljmp
lahf
cli
mov
sbbb
cltd
ss
mov
sub
mov
adc
cmp
mov
add
jp
push
adc
xchg
mov
xchg
adc
jne
iret
aad
sub
sbb
push
cltd
jmp
shl
xchg
inc
push
mov
rolb
ds
or
and
jmp
loopne
movsb
mov
pusha
test
pusha
iret
mov
dec
mov
loopne
cmc
adc
loopne
jae
pop
pop
movsb
add
rcrl
mov
and
push
pushf
inc
sbb
in
mov
mov
jo
loope
sbb
andb
jo
hlt
xchg
sub
cmc
xorl
sbb
add
loopne
int
jne
xor
aaa
jns
or
rolb
sti
push
clc
cmc
sub
loopne
jmp
sbb
mov
lcall
sub
add
cmp
mov
ficoms
es
xchg
gs
xchg
or
push
cld
xchg
sbb
lahf
xchg
addb
dec
sti
inc
mov
fs
or
data16
cltd
rcr
idiv
xor
out
jmp
fimull
pusha
loopne
lret
mov
pop
aam
imul
mov
mov
and
jmp
pop
enter
xchg
dec
aad
sbb
inc
inc
js
into
out
fnstsw
andb
mov
mov
ret
clc
shll
daa
adc
cmp
dec
mov
rorl
hlt
xor
orb
mov
enter
lods
pop
in
jge
cs
loopne
mov
pop
or
sarb
xchg
mov
insl
es
sub
push
add
pop
loopne
andb
mulb
test
rcrb
dec
pop
aaa
mov
sarb
loop
sub
dec
pop
pop
test
pusha
ficoml
int3
mov
subb
add
push
shlb
mov
in
or
loopne
pop
out
divl
xor
loop
push
add
mov
inc
rclb
push
mov
fs
out
cmpsb
add
pusha
or
iret
push
mov
jge
sbb
mov
pusha
ret
imul
or
mov
inc
ret
pushf
xlat
int
fdivl
test
inc
loopne
daa
xor
push
in
fisubl
mov
ja
mov
lret
flds
jnp
nop
mov
mov
inc
sbb
shrb
into
aad
xchg
inc
leave
adc
and
xchg
scas
shlb
repnz
add
or
popa
add
es
pusha
and
loopne
mov
add
add
jo
pop
inc
push
mov
movsb
mov
outsl
xor
jne
mov
adc
jae
mov
pop
jbe
push
addr16
lods
leave
pushf
outsb
and
shl
and
in
add
andb
lcall
shlb
dec
or
and
and
in
dec
pop
dec
mov
and
iret
inc
in
outsl
imul
push
add
icebp
mov
ljmp
inc
fst
dec
jns
dec
sbb
inc
fdivr
or
rol
mov
adc
xor
nop
fcmovnbe
add
jo
cmp
ss
sbb
pusha
cmp
or
mov
adcb
push
shll
cli
cmp
add
lds
and
stos
or
add
pusha
mov
mov
inc
add
loopne
push
jge
lahf
and
enter
lods
add
loopne
nop
inc
fwait
addb
call
iret
adc
cmp
scas
inc
pusha
mov
or
cmp
and
repnz
ret
rcrb
shlb
mov
in
pusha
pusha
adc
cmpsl
div
fists
and
cmpsb
pusha
and
fstpt
sahf
mov
inc
pusha
ss
mov
rol
clc
out
test
mov
fidivrs
jmp
and
lcall
dec
mov
push
inc
sbb
and
in
aad
test
xchg
xor
loop
outsb
iret
mov
push
arpl
mov
pop
xor
insb
add
add
jb
inc
add
jns
sub
mov
add
ljmp
rorb
ret
and
mov
outsl
pop
mov
xchg
outsl
pop
push
loopne
cmp
movsl
lret
add
xor
icebp
sbb
and
and
insb
pop
cmp
ret
adc
inc
and
lds
cmp
mov
xor
insb
inc
outsb
cmpsb
and
lcall
dec
aaa
pop
xchg
in
cmp
and
mov
xor
pusha
out
fcomp
and
and
and
mov
hlt
out
sub
lea
divl
jge
fucomi
bound
mov
imul
pavgb
fstps
mov
jns
push
out
inc
add
gs
mov
faddp
cmc
or
inc
shlb
inc
fwait
and
push
pop
pop
dec
and
mov
jns
xorl
mov
inc
ss
jae
std
jo
ljmp
sub
jae
and
add
jns
popf
movsbl
inc
add
loopne
adcl
shrb
mov
or
sarb
add
ss
lds
dec
jne
sbb
pop
cli
sub
mov
or
cmc
jecxz
xchg
ret
mov
iret
lods
mov
inc
dec
inc
aad
pusha
addb
mov
flds
pusha
and
icebp
jl
mov
cmpsl
cwtl
xlat
sahf
jge
inc
ret
push
push
or
mov
add
mov
adc
adc
loop
and
add
jns
and
mov
subl
repz
xchg
ja
mov
loopne
test
pusha
out
pop
jl
push
dec
int3
aas
xor
push
sub
sub
sbbb
add
mov
mov
loopne
mov
inc
add
test
mov
cltd
push
fcmove
mov
or
inc
inc
leave
jmp
add
inc
pop
ja
inc
adcb
dec
add
add
xor
jnp
andb
and
shlb
es
rolb
ljmp
add
lret
sbb
xor
inc
out
push
rol
insl
pushl
cmpb
loope
inc
cmp
pop
pop
addb
roll
mov
sbb
add
test
cmp
loopne
jo
push
adc
add
hlt
xor
push
ficoms
xchg
cli
sbb
das
ret
inc
push
mov
andb
inc
xor
pop
cli
js
pusha
imul
push
or
mov
movsl
mov
jb
mov
rdmsr
and
dec
loop
ljmp
movsb
inc
inc
cmp
mov
popf
dec
mov
loopne
bound
lds
add
and
jo
pop
ja
mov
xchg
sbb
pop
jle
pop
aad
cmc
sahf
gs
stos
xchg
decl
addb
adc
and
jbe
stos
loop
rolb
and
pop
pop
xor
pushfw
loopne
pushl
ljmp
test
in
popa
adc
inc
out
xor
and
stos
int
outsl
outsl
jmp
pop
adc
fsubrp
std
jb
cmpsb
mov
loopne
pushf
sarl
cwtl
je
pusha
shl
and
sbb
mov
inc
inc
inc
mov
addr16
call
or
cmpb
dec
inc
cld
imul
adc
xchg
mov
xchg
xor
cmp
sbb
aas
out
dec
test
push
loopne,pn
dec
aaa
or
lret
mov
pushf
dec
pop
or
and
mov
inc
stc
iret
adc
rolb
add
shrl
cmp
pop
movsb
pusha
inc
sub
jge
sbb
push
push
pusha
mov
sbb
inc
loopne
loopne
adc
xlat
lods
mov
mov
loopne
dec
pop
cmc
je
inc
lret
adc
sbbl
mov
lods
inc
inc
push
cld
dec
cmp
jmp
test
add
lods
sbb
rol
adc
jp
loopne
insl
imul
and
loopne
outsb
inc
mov
jmp
add
shl
imul
inc
mov
mov
sarb
je
push
movsb
shl
cmp
and
pusha
lods
pusha
add
hlt
ds
rcrl
xchg
add
mov
iret
jl
and
cmp
inc
pusha
ja
pusha
pusha
icebp
mov
stos
lods
cmp
xchg
xchg
add
xor
cmp
add
rcl
xchg
or
lret
pop
movsl
fldenv
rcl
adcl
and
ja
sbb
ret
pusha
cwtl
mov
nop
xor
xlat
andb
push
shlb
outsb
push
lret
dec
dec
mov
and
lods
adc
add
or
mov
loopne
inc
add
mov
ret
push
push
xchg
fidivs
jnp
inc
pop
mov
lahf
mov
pusha
sarb
pop
jg
pop
mov
sub
arpl
mov
popa
adc
and
mov
fcompl
inc
mov
shlb
pushf
xchg
pop
lcall
insl
aas
xlat
fdivrl
test
dec
sbb
pusha
scas
addb
pusha
inc
adc
pusha
loopne
jge
imul
sbb
jmp
inc
inc
in
jecxz
sbb
or
inc
call
rcr
cli
mov
rolb
nop
decl
jb
mov
or
out
pop
arpl
repz
add
mov
in
and
cmp
mov
inc
mov
ss
lahf
hlt
sub
test
add
lret
pusha
sbb
and
repnz
mov
adc
rol
push
and
add
cmc
dec
test
sti
dec
jae
scas
andb
bound
inc
movsl
jmp
stc
outsb
cld
scas
cli
mov
inc
pusha
movsl
mov
pusha
add
inc
insb
add
sarb
mov
lea
bound
or
mov
outsl
fisttpll
xlat
stos
jae
and
and
and
xor
stos
andb
adc
in
mov
lcall
scas
rolb
lds
nop
loope
pusha
add
sub
add
shrb
mov
mov
iret
repz
fldl
inc
clc
rorb
fnstcw
xchg
repz
mov
pop
ljmp
add
outsb
xor
rcl
inc
sub
dec
sbb
fwait
pop
adc
inc
and
pusha
push
jg
mov
andb
pusha
and
fisubrl
addb
ret
mov
cltd
jmp
call
test
pusha
and
imul
cltd
int
test
cmpsb
and
arpl
data16
inc
repz
js
add
mov
pop
jns
jecxz
mov
jbe
lret
pusha
rolb
add
mov
push
loopne
repnz
jle
pusha
pusha
popf
inc
insb
fimuls
mov
movsb
inc
and
adc
and
pusha
in
xchg
out
pusha
mov
arpl
fistpll
add
push
inc
cli
push
mov
ds
mov
inc
aam
mov
lods
mov
fcomps
ror
pop
xchg
lahf
lods
ret
adc
jno
mov
sub
cmc
xlat
das
imul
cmp
pushl
jb
out
push
shlb
out
iret
in
rcrb
and
pop
fsubr
les
cmp
jo
add
inc
pop
movsb
and
xor
xchg
addb
std
mov
or
inc
add
mov
pop
push
inc
hlt
clc
testl
adc
loopne
adc
sarb
popa
xchg
adc
pop
jp
and
inc
inc
js
je
inc
stc
dec
cmc
sub
push
repz
mov
addr16
je
cld
jns
jo
fmull
andb
and
push
pop
adc
repz
addb
lock
shll
lahf
or
adc
inc
pusha
clc
movsb
inc
shl
jb
mov
int3
push
gs
mov
inc
push
mov
add
pusha
push
xor
loopne
loop
mov
or
add
sub
inc
inc
pop
in
and
mov
clc
divl
xchg
les
icebp
insb
inc
iret
jmp
xor
popf
in
or
orb
js
push
loopne
lods
and
jo
dec
fstpl
js
add
dec
sbb
and
comiss
stos
pusha
inc
out
mov
rolb
cmp
sub
add
pop
xor
pusha
loopne
jae
out
idivb
adc
je,pt
lret
xchg
inc
andb
and
clc
sub
pusha
xor
aaa
js
xor
push
insl
lods
mov
mov
shrb
aad
subl
sbb
or
mov
shrl
subl
mov
pusha
pop
or
sbb
pusha
stos
sbb
jmp
pushf
push
inc
ficompl
sbb
sti
repz
add
jge
cmp
popf
in
mov
cmpsb
and
mov
arpl
pop
shlb
xchg
cmp
in
and
adc
shlb
iret
ljmp
imul
mov
imul
insl
xor
repz
xor
push
mov
sti
mov
sbb
enter
loopne
cmc
cmp
movsb
inc
orb
push
fucomi
inc
xlat
and
les
xchg
in
dec
lock
push
cwtl
pop
cmp
pusha
orb
sub
out
add
inc
and
lahf
pop
outsl
emms
divl
ret
sub
mov
in
icebp
lea
sbb
loopne
cmc
and
inc
and
arpl
stc
pop
mulb
insb
addb
mov
push
aaa
lahf
or
pop
movd
add
push
ret
loopne
movsb
loopne
mov
add
pop
sbb
out
pop
sbb
pusha
loopne
dec
or
adc
and
add
sbb
pusha
shrb
add
mov
loop
adc
jae
mov
xor
inc
mov
xor
int
mov
pusha
mov
popa
mov
shlb
fs
xor
dec
jle
int
lret
mov
dec
jp
push
xlat
or
mov
xor
loopne
mov
rolb
in
push
cmp
int
mov
dec
fs
adc
fwait
lahf
push
enter
jl
lcall
push
arpl
and
push
pusha
mov
cmp
shlb
and
xchg
dec
sbb
addb
jnp
lods
add
add
cwtl
cs
add
addb
loop
cmp
jl
loop
insb
push
inc
or
testl
dec
sbb
in
inc
pop
jp
std
cltd
inc
inc
and
mov
mov
loopne
fcoms
pop
mov
sub
addr16
pusha
push
inc
push
dec
xor
aad
and
test
addb
cmp
xor
cmpsb
inc
rclb
inc
and
mov
dec
out
out
in
cmp
inc
rcl
xchg
and
ljmp
cmp
mov
mov
inc
push
inc
or
pop
bound
dec
xor
int
mov
js
mov
rcrl
dec
push
pop
cmc
add
pop
js
mov
mov
in
addr16
addb
or
and
jb
aam
sbb
push
aam
pusha
pop
xor
ss
and
mov
shl
stos
inc
and
xchg
or
pop
sbb
insl
scas
out
inc
cltd
dec
andb
scas
inc
mov
pop
pop
push
inc
add
lret
stos
mov
and
jbe
inc
inc
fadds
sbb
add
loopne
add
inc
jge
nop
lea
loopne
andl
pusha
fdivs
sbb
es
jg
inc
xlat
mov
jmp
pop
add
shl
jmp
inc
dec
jl
lcall
in
mov
dec
push
sahf
test
mov
and
and
fldt
and
subb
sar
add
fldt
add
jl
mov
cmp
xchg
inc
pusha
jns
push
push
shr
pop
es
mov
scas
sub
add
testb
nop
or
loopne
push
pop
das
ret
arpl
sbb
cmp
jl
push
mov
add
push
xchg
out
cmp
repnz
test
inc
adc
mov
inc
retw
jne
in
mov
fildl
rol
cmc
push
and
pusha
decl
in
stc
repnz
rorl
nop
mov
daa
cvtpi2ps
pusha
bound
pop
sahf
inc
mov
mov
and
pusha
and
jmp
cs
adc
movsb
andb
mov
pop
pushf
lds
fs
adc
decb
and
pop
xor
inc
and
insb
dec
lcall
jle
shlb
or
mov
add
fsubl
ss
pusha
pop
cmp
ficoml
jp
jnp
loop
enter
xor
dec
out
inc
ljmp
cltd
sub
cmpsb
inc
mov
xchg
mov
sbb
lds
rol
adc
cmp
sub
cmpb
rolb
mov
or
shlb
repnz
mov
lret
in
imul
lahf
sbb
pop
push
outsb
jne
push
mov
jno
shl
mov
mov
shrl
or
push
repz
cwtl
daa
test
fstpl
addb
lcall
popa
bnd
sub
mov
cmp
jmp
fdivrl
outsb
xchg
dec
inc
fdiv
aad
negb
xor
and
mov
loopne
in
in
dec
int3
test
pusha
sub
cli
gs
push
pop
and
addb
push
mov
and
cltd
incb
mov
pusha
inc
in
pop
ret
mov
arpl
inc
mov
inc
mull
jae
mov
sbb
sub
mov
nop
mov
and
add
and
stos
add
cmp
dec
cld
cmp
pushf
add
jno
push
addb
cmp
jmp
aad
iret
iret
jg
jae
pop
xchg
incl
or
rcrb
cmp
cmp
test
sub
pop
mov
pop
daa
and
dec
xor
popl
inc
loopne
lcall
jg
adc
add
dec
dec
jno
out
lock
xor
push
orl
or
inc
xorl
test
and
and
aam
in
stc
scas
loopne
scas
rcl
and
popa
pop
cmp
or
pusha
test
loopne
lret
sub
lret
dec
adc
ss
ret
dec
jns
mov
subb
inc
pop
inc
push
jecxz
nop
mov
jne
xor
jl
in
bound
add
xchg
ds
mov
sbb
loopne
rolb
loopne
sti
aad
mov
insl
mov
repnz
push
fistps
rol
sbb
ret
and
jb
arpl
or
xchg
lcall
dec
xchg
add
rorl
and
adc
dec
xor
inc
int3
out
test
mov
add
inc
jo
and
loopne
inc
mov
push
inc
shr
xchg
int
bswap
inc
jns
mov
fwait
lret
divb
pushf
pop
rcrb
sbb
add
xchg
add
out
add
stos
addb
and
add
sub
push
ret
jg
xchg
inc
cmp
inc
loopne
out
rol
loop
mov
rolb
testl
and
add
fwait
mov
fadds
or
jns
rorl
int3
mov
loopne
addr16
fbstp
pop
hlt
dec
popa
inc
jl
mulb
int
or
mov
add
mov
nop
fistpl
and
pusha
mov
xchg
fcompl
push
out
arpl
inc
icebp
loop
mov
pusha
loopne
lock
mov
mov
jp
roll
stos
leave
inc
test
and
inc
stos
ja
lret
dec
jnp
in
das
loope
jecxz
loopne
add
pop
mov
loopne
mov
jbe
add
push
pusha
loopne
pop
call
lock
inc
or
addb
loopne
mov
pusha
pusha
das
mov
mov
or
dec
jno
push
jg
sub
rolb
push
or
add
fmull
mov
add
mov
pushf
negl
flds
enter
andb
sbb
mov
inc
sarb
shll
aas
imul
inc
sbb
cwtl
andl
loopne
imul
ret
push
ret
outsl
mov
mov
push
inc
movsl
or
mov
addl
cli
pusha
ficomps
jb
loopne
mov
sbb
add
jge
lcall
outsl
fs
mov
cmp
enter
out
mov
add
int3
cmp
outsl
mov
inc
cmc
dec
fmull
inc
sar
inc
mov
jae
dec
rol
mov
adc
into
jge
inc
loopne
scas
and
mov
pusha
in
andb
pusha
mov
mov
xor
sbb
jecxz
and
sbb
mov
mov
movsb
add
test
and
push
es
sti
xor
pop
enter
pop
in
dec
int
cmpsl
ss
push
jge
xor
daa
adc
loopne
test
mov
cmp
cld
pop
out
adc
push
bnd
leave
mov
pop
stos
mov
pushf
sarb
inc
push
loop
add
std
dec
and
lods
loopne
decb
aas
data16
pusha
sbb
shlb
xlat
aaa
lahf
pop
pop
cmp
sub
pusha
sbb
shr
push
jl
mov
sti
jl
push
mov
cmpsb
add
mov
or
subb
sti
stc
add
mov
sbb
loopne
xor
xchg
in
mov
jae
mov
int3
jbe
sbb
inc
cmpsb
pusha
andb
fsubr
jbe
xchg
scas
jne,pt
data16
rolb
cli
sub
inc
fmulp
flds
loop
inc
mov
and
or
xor
rolb
inc
xor
addb
shlb
adc
xchg
adc
and
in
jecxz
dec
out
xor
add
mov
je
sbbl
in
mov
aaa
cmp
inc
cmc
xchg
jle
bound
cmpsl
adc
std
adc
cmpsl
push
js
test
add
popl
arpl
outsb
inc
push
scas
pusha
loopne
add
cmp
sub
push
cmovae
test
dec
pop
dec
cli
test
jnp
push
andb
orb
jb
mov
sahf
xchg
in
add
push
fisubrs
insb
and
cmpb
shlb
jno
pushf
shr
mov
fwait
add
std
push
int
push
push
add
and
shlb
in
enter
xchg
pusha
adc
cwtl
push
inc
xchg
and
loopne
loopne
push
add
inc
mov
inc
ss
mov
lcall
cld
enter
int3
imul
shrb
popf
inc
daa
sbb
xor
mov
dec
mov
xor
repz
shlb
in
mov
bndldx
mov
adc
mov
lock
dec
outsl
hlt
push
adc
mov
mov
ljmp
out
lret
scas
xchg
rcl
dec
imul
test
and
rolb
push
mov
pop
mov
mov
into
cwtl
insl
add
xchg
push
add
inc
and
mov
xchg
loopne
lea
xchg
int3
mov
pusha
in
xchg
call
add
mov
adc
arpl
add
jecxz
fcomps
pop
push
xchg
jge
movsl
enter
xchg
cmp
rolb
inc
add
add
jno
repz
ret
subl
mov
andb
pop
push
pop
movsl
adc
mov
shrb
shr
cmp
jp
dec
rcrb
xor
inc
add
test
mov
add
mov
aad
xor
rcrb
fdiv
push
sbb
lahf
pop
loopew
mov
and
out
pop
push
jne
cmp
gs
ljmp
jmp
and
loopne
imul
inc
adc
arpl
mov
mov
xlat
pop
and
and
cmpsl
lods
and
aad
psubsw
loopne
push
xchg
in
repz
inc
jo
and
call
pop
and
pusha
jecxz
inc
or
shr
or
cwtl
dec
jo
loopne
aad
mov
mov
mov
add
adc
pop
popf
je
gs
add
popa
mov
xor
add
es
int
mov
sub
xlat
in
ljmp
movsl
cmpsb
inc
cmpb
cmp
sub
popf
sahf
loope
push
rolb
mov
push
mov
jg
or
sbbb
mov
outsl
rep
mov
lahf
mov
adc
cs
andb
es
shl
inc
cltd
push
aas
cmp
pop
xor
sti
pop
mov
loopne
pop
ffreep
shlb
addr16
cmpl
xor
push
rol
inc
and
inc
mov
mov
sub
pusha
mov
jp
sbb
xchg
icebp
sbb
sub
inc
mov
or
loopne
and
ficompl
loopne
cmc
sbb
jb
loopne
scas
fimull
xchg
push
and
decl
nop
push
xor
outsl
cmpsl
mov
addb
loopne
fs
out
ficomps
and
pusha
and
sbb
dec
pop
pop
mov
aaa
jle
jg
sbb
sbb
adc
pusha
mov
ljmp
pop
arpl
insb
into
ljmp
xchg
fistpll
andb
inc
out
and
sbb
insb
icebp
cmp
mov
inc
in
sahf
jno
lret
mov
aam
adc
push
jnp
adc
aas
mov
mov
and
mov
testb
add
fld
or
mov
jge
mov
pop
pop
mov
mov
mov
lds
mov
orb
lods
mov
xor
aam
cmp
mov
xchg
sub
imul
lret
mov
inc
ret
insl
lea
jb
add
cmp
xor
push
sbbl
into
fs
and
mov
sub
pop
aad
mov
addb
shlb
fimuls
jecxz
rolb
scas
es
mov
mov
dec
scas
rolb
loop
imul
andb
adc
leave
push
mov
inc
xchg
sti
movsl
test
add
and
add
fs
and
das
push
adc
loop
inc
test
es
xchg
pop
sbb
push
loopne
cmp
pop
inc
and
add
push
and
popa
pop
das
js
add
daa
adc
daa
int3
adc
push
or
mov
xlat
sub
sbbb
and
mul
sub
pusha
add
pop
pop
lds
addb
sarb
push
loopne
adc
jbe
dec
clc
adcl
jns
out
shl
std
xchg
xchg
shrl
pusha
dec
lahf
adc
push
dec
in
jnp
cmp
mov
and
sbb
and
add
adc
and
sub
mov
add
sahf
fstp
adc
dec
sub
inc
orb
daa
lahf
fs
ror
test
shlb
xor
pusha
loopne
mov
loopne
xchg
rolb
mov
pop
xchg
popf
xchg
fs
and
cmpsb
add
clc
or
adc
dec
fldt
in
pop
aaa
popa
jge
push
popa
mov
ret
aaa
add
lcall
add
jge
test
add
xor
sub
push
into
frstor
dec
es
das
or
cmpsl
nop
imul
push
enter
lret
fs
call
adc
les
loope
mov
jno
adc
js
fmull
shll
inc
aam
std
xchg
inc
lcall
mov
jo
dec
cmp
mov
cmp
dec
inc
int3
push
xchg
push
sub
adcb
pushl
rolb
add
push
movsb
shlb
daa
push
loopne
sub
dec
fsubp
repz
mov
adc
dec
jge
cmpl
int
mov
mov
loopne
hlt
cli
add
mov
add
jo
jmp
ljmp
add
ljmp
or
test
rcrb
mov
pop
ficoml
xchg
stos
inc
jl
arpl
sbb
jae
and
dec
pop
xor
push
and
push
notl
popa
adc
and
jbe
sbb
out
lds
or
rorb
in
inc
sar
cmc
xchg
aam
mov
pusha
xor
add
mulb
mov
dec
outsl
xchg
in
sub
rcrl
jg
or
inc
xlat
roll
xchg
xor
sub
lock
jg
dec
push
rolb
icebp
jl
and
cmpsb
shlb
mov
cmpsb
mov
push
outsb
imul
pusha
loopne
lods
inc
loopne
ret
cmp
out
jg
inc
inc
dec
inc
adc
cmp
popf
out
enter
mov
loope
xor
cmp
testl
mov
andb
orl
cwtl
mov
rcrb
xor
pop
pop
push
into
xchg
xchg
add
notl
xchg
dec
out
push
in
imul
and
mov
sahf
lock
xchg
push
cli
mov
leave
cmpsb
loopne
insl
ret
iret
dec
dec
pop
and
aaa
je
add
filds
mov
fwait
pop
call
fmuls
pop
lods
inc
shlb
mov
mov
add
inc
and
mov
enterw
and
add
and
stos
pop
add
mov
jns
push
dec
insl
test
and
inc
stos
dec
sbb
jmp
jp
push
imul
fs
ret
push
xchg
loopne
lods
xor
andb
adc
mov
mov
stc
rclb
inc
dec
inc
rorl
ljmp
push
and
and
fs
test
inc
sbb
and
idivb
pusha
and
cmp
inc
and
idivb
mov
rol
pusha
pusha
mov
sub
push
pushf
pop
mov
loopne
int3
icebp
aam
xchg
loopne
push
and
pusha
jmp
lea
imul
hlt
adc
in
add
and
and
mov
xlat
iret
mov
addb
add
sbb
test
loopne
loopne
mov
push
je
xlat
sbb
ds
lds
loopne
popf
xchg
pop
cmp
add
test
and
hlt
imul
nop
xchg
pushf
or
push
push
add
fdivl
stc
scas
lds
ss
std
fisttpl
mov
xor
sub
int
xor
cld
cwtl
push
mov
and
scas
lods
shl
inc
sbb
andb
dec
andb
adc
loopne
mov
push
mov
cmp
or
rcrb
pcmpgtw
shrb
pop
mov
bnd
and
xorb
mov
cmp
test
mov
jl
mov
clc
outsb
mov
loopne
xchg
fsub
mov
inc
fscale
test
add
xlat
fxam
loope
jle
inc
xchg
xor
jge
mov
xor
mov
lods
rol
into
ljmp
sub
and
add
cmpsl
stc
push
add
in
clc
adc
les
addb
mov
loopne
pop
inc
mov
loopne
lds
loopne
cmpsl
jne
xchg
icebp
mov
add
jbe
ljmp
sub
sahf
idiv
sbb
and
stos
mov
mov
je
and
add
add
sbb
xchg
mov
loopne
andb
in
lods
aaa
daa
in
xor
push
sbb
jne
xchg
pop
test
sbb
jecxz
mov
xchg
push
pusha
pusha
rcrb
lods
mov
ljmp
loopne
xchg
popa
push
cltd
jge
inc
add
and
and
sarl
mov
xor
mov
sbb
mov
pop
dec
arpl
jo
mov
cli
sti
or
add
cmp
andb
pusha
add
cmc
cmpsb
loopne
pop
jne
xor
sbb
mov
lret
jo
andb
jns
arpl
push
stc
mov
mov
repz
mov
into
inc
ret
push
xor
ss
adc
sub
enter
push
jge
addr16
enter
into
fsts
rolb
or
and
cli
sub
xchg
cmc
mov
jbe
pop
cs
lcall
add
shl
loopne
data16
nop
and
and
into
pushf
push
pop
cwtl
and
clc
sub
test
movsl
sbb
loopne
lahf
adc
xchg
mov
fs
and
mov
mov
jg
rol
pusha
xor
xchg
out
dec
inc
fwait
inc
sub
add
mov
lea
and
and
pusha
sub
add
pop
int3
mov
mov
sub
cmp
xor
pop
adc
mov
andb
fidivs
sbb
and
cmpb
xor
xlat
addb
sbb
mov
pusha
xchg
aaa
xchg
xchg
shl
mov
jp
sbb
data16
jb
cmpsl
xor
mov
rolb
out
imul
inc
out
insb
and
push
sub
mov
or
adcb
mov
leave
fwait
xchg
or
mov
adc
adc
cmpsl
xchg
imul
and
shll
sub
loopne
sbb
lahf
jg
ds
mov
and
fwait
jne
or
rolb
mov
push
fwait
adc
lea
enter
sub
popa
or
mov
adc
add
out
or
fstpl
sub
loopne
adc
or
jmp
pusha
rcrb
mov
and
jmp
lds
mov
out
pop
lods
adc
int
add
add
shrb
xor
pusha
loopne
filds
inc
shrb
lahf
cmp
add
inc
je
inc
dec
imul
movsb
shlb
xor
push
pop
out
fwait
inc
out
mov
push
mov
in
and
pusha
push
cmp
or
cmp
pop
xchg
and
mov
adc
fdivr
repnz
sti
sbb
jbe
jmp
sbb
pusha
ljmp
std
push
aaa
jle
push
mov
out
shrl
loopne
mov
add
sub
cld
addb
iret
cmp
push
adc
insl
push
dec
cld
call
jns
std
cmp
jecxz
dec
lret
dec
ret
push
mov
andb
movsb
rolb
ljmp
sub
movl
aad
fstpl
out
adc
bound
andb
cltd
sbbl
mov
dec
bound
fisubrl
call
cmpsb
mov
andb
sbb
aam
fwait
fwait
lea
inc
adc
cmpb
nop
nop
push
pusha
add
fmuls
jecxz
and
fld
mov
inc
sbb
add
nop
push
add
pusha
cmp
lret
jp
and
xchg
jae
adc
rolb
jae
es
rcl
push
shl
loope
inc
sti
lahf
int3
imul
dec
pop
sub
mov
daa
jno
cltd
mov
or
and
cmp
mov
and
loopne
scas
pusha
loopne
sub
jg
repz
popa
mov
orb
loopne
sti
test
and
pop
pusha
inc
pop
fiadds
loopne
jne
cmpsb
loopne
mov
icebp
cli
mov
ss
add
ret
cmp
inc
stc
aas
out
jne
test
pusha
pusha
push
pop
shrb
pop
sarb
loop
aad
cmp
jnp
inc
mov
iret
jle
xor
xchg
insb
shl
inc
loopne
sbb
or
add
lea
aas
mov
jbe
loopne
leave
mov
stos
sub
loopne
test
stos
pusha
mov
and
sbb
icebp
and
cmp
xor
or
mov
aad
rcll
mov
push
mov
popa
adc
sub
fmul
or
lea
cmp
add
jbe
sbb
xor
lods
test
xchg
mov
sbb
into
xchg
bound
adc
mov
gs
rcll
mov
cmp
xor
inc
inc
push
aad
mov
testb
sti
lods
insl
and
inc
inc
testb
inc
shrb
imul
test
mov
shl
loopne
pop
and
push
mov
lea
lret
rclb
cltd
cltd
mov
push
inc
icebp
xchg
jo
iret
pop
rorl
add
or
inc
add
jb
loopne
in
pop
inc
repnz
mov
mov
jmp
cmp
cmc
xchg
outsl
pusha
and
push
mov
outsl
shufps
mov
mov
lods
push
jge
jmp
adc
xor
xchg
add
fisubrl
cmp
pop
sbb
dec
pop
cwtl
mov
mov
and
inc
int
and
pusha
mov
pop
push
mov
loopne
aas
fwait
push
push
add
jmp
inc
or
adc
shlb
stos
rol
mov
pusha
addr16
in
inc
shrb
insb
dec
and
and
addb
andb
inc
pusha
jmp
pop
in
daa
dec
dec
imul
cmp
loop
pushf
or
and
sub
pop
dec
into
insb
pop
rorb
and
cmpb
push
lds
mov
jl
shlb
push
sub
loopne
mov
add
pop
mov
mov
loopne
pop
clc
jae
daa
test
sub
loopne
mov
sarb
xchg
xchg
pop
pop
test
mov
loopne
insl
popf
xor
test
dec
mov
dec
jmp
outsb
outsl
test
andb
int
shlb
inc
mov
ja
jae
mov
es
adc
imul
jle
push
pop
imul
adc
inc
xchg
xchg
int3
scas
inc
add
andb
in
int
or
pop
mov
out
movsl
cmp
cld
nop
mov
shlb
repnz
sbb
mov
cltd
andb
xchg
jle
ja
sub
pop
rcll
loop
sub
stos
xor
sbb
pusha
pop
std
jne
and
sub
in
fbstp
and
sbb
inc
in
nop
popf
pop
lock
inc
enter
aaa
stc
in
xor
inc
mov
cmp
js
repz
mov
mov
add
loopne
pop
pop
push
and
xor
mov
add
xor
add
loopne
cmp
into
mov
insb
jecxz
mov
inc
fsubrl
or
jno
cmc
pusha
jge
sub
add
cli
xor
mov
pop
and
jb
jbe
add
sar
push
mov
shlb
mov
pusha
dec
hlt
add
imul
mov
shlb
lock
pusha
in
cmpsl
jns
xor
jp
lahf
adc
ja
jg
cmpsl
push
rolb
mov
mov
jb
inc
cmc
push
mov
insl
push
repz
xchg
add
fdivrs
pop
cwtl
adc
sahf
ficompl
into
lock
loopne
add
mov
inc
sbb
pop
adc
addr16
daa
mov
mov
add
add
movsb
addb
inc
and
out
std
jecxz
lret
dec
mov
in
fwait
dec
lret
mov
andb
loopne
in
stos
and
pusha
pop
xchg
and
fildl
mov
mov
ja
mov
push
sbb
xchg
xchg
cmpsb
inc
inc
xor
cltd
call
lods
pusha
add
sub
adc
push
addl
movsb
add
das
sbb
fdivr
enter
sub
inc
mov
andb
shrb
inc
push
jmp
push
roll
scas
jnp
ljmp
movsb
andb
fbstp
inc
xchg
pop
mov
push
xchg
add
pusha
loopne
cmp
loope
dec
loopne
loopne
jne
int3
cmp
jmp
out
in
ror
push
xchg
rcrb
jle
shlb
imul
mov
jno
scas
xchg
shlb
pop
mov
pop
lods
and
cltd
pop
frstor
rclb
mov
add
push
movsb
and
cmovno
mov
mov
mov
inc
ljmp
addb
push
pusha
mov
add
loop
fbstp
jmp
imul
loop
mov
and
pop
orl
stos
fstpt
sahf
aas
lds
ret
pop
mov
and
and
cmp
aam
xchg
jge,pt
mov
jp
cld
mov
inc
lds
stos
add
out
nop
popf
cltd
sahf
ds
mov
loopne
setp
dec
fcoms
or
inc
jp
xchg
mov
rcrb
lock
push
lds
mov
and
loopne
inc
sub
inc
push
dec
mov
and
pusha
mov
jecxz
mov
cmc
jmp
rol
ja
dec
ret
add
loop
pusha
ret
cmp
les
fbstp
and
and
sbb
push
adc
lods
ret
inc
dec
test
sbb
inc
sbb
sbb
ljmp
addb
addb
movsl
add
mov
aam
rol
loope
xor
decl
pop
cmpsb
add
or
xchg
xor
pop
fcoml
cmp
sub
enter
add
or
add
mov
inc
mov
cli
dec
test
pusha
lds
ds
pop
sub
mov
leave
lahf
mov
loopne
mov
add
mov
add
repnz
xor
push
fimull
loopne
loopne
and
and
insl
lahf
sti
insl
xchg
add
shlb
outsb
add
cwtl
fisubrs
mov
out
mov
addb
pusha
mov
cmp
sbb
aaa
test
mov
xchg
ss
andb
and
in
or
jmp
add
push
lret
ds
pop
cmp
std
mov
xchg
mov
imul
cwtl
add
loopne
rcrb
stc
pop
ds
pop
andl
and
outsb
shl
movsl
sub
loopne
cmc
mov
adc
add
pop
sub
add
dec
jl
roll
ljmp
pusha
pop
pop
lea
mov
sbb
repz
iret
in
jmp
jmp
add
addr16
xor
inc
add
cltd
sbb
in
in
sbb
and
lock
lahf
jmp
cwtl
mov
mov
pop
sti
jae
cmp
rcrl
outsl
in
adc
shl
and
test
adc
arpl
inc
and
mov
inc
pusha
jmp
dec
and
loopne
hlt
inc
popf
ljmp
fsubs
loopne
call
push
clc
andb
mov
cmp
shlb
jge
bound
into
sub
xor
and
cmp
dec
bnd
pop
and
rclb
mov
jnp
cmp
jmp
cmpl
push
das
cmc
cmpsl
jo
and
aad
pusha
rcrb
lods
addb
add
add
or
loopne
dec
xorl
rcrl
pop
out
insl
cltd
adc
in
mov
add
dec
dec
test
add
mov
adc
dec
int
mov
popa
xchg
xchg
xor
push
aad
pushf
iret
pop
outsl
jne
pushf
lds
cwtl
inc
imul
adc
cmpsl
movsl
push
loop
adc
push
andb
fstps
add
andb
push
inc
add
jnp
cltd
sub
and
dec
xchg
lret
xchg
inc
rorb
shlb
call
jbe
fiadds
hlt
adc
icebp
or
dec
scas
ret
repz
and
shrb
enter
add
pop
ret
jne
mov
ss
mov
lods
loopne
loop
mov
mov
sbb
xchg
les
inc
jmp
lods
mov
andb
pop
adc
popf
test
bound
in
jg
cmp
xchg
sub
das
scas
or
rcr
xchg
popf
jo
out
pusha
sbb
pop
or
and
ret
inc
xorb
xchg
rsqrtps
in
dec
in
je
add
addb
sub
xlat
les
dec
jl
add
rclb
addr16
dec
dec
in
pop
lods
jns
add
push
adc
sbb
xchg
fwait
jo
add
loope
add
cmp
add
push
in
scas
and
fldcw
rcrl
xchg
sbb
and
inc
add
push
loop
sub
repz
or
mov
loope
xchg
test
and
es
jo
cmp
mov
mov
nop
aam
rcrb
loopne
mov
add
xchg
divl
and
lods
add
inc
movsb
mov
inc
pop
mov
pop
test
mov
test
xorb
shlb
inc
inc
dec
fstl
shrl
xchg
jmp
jno
fisubs
scas
incb
mov
lcall
loopne
jecxz
rol
sti
push
add
mov
and
adc
dec
dec
mov
jae
lock
rcll
cwtl
mov
rorb
sbb
inc
sub
imul
outsl
nop
dec
jb
repz
pop
xchg
mov
or
and
mov
xchg
outsb
ljmp
pop
pop
popa
and
mov
pusha
shlb
jle
test
pusha
daa
and
movb
jmp
loopne
inc
int3
mov
pusha
sbb
js
inc
pop
inc
jae
mov
fisubrs
pusha
shlb
lret
xor
and
pop
out
jnp
out
fadd
inc
rclb
bound
mov
loopne
pop
movsb
and
sbb
sti
scas
aam
mulb
pop
inc
pusha
push
js
cmp
loopne
adc
arpl
imul
out
aas
inc
rorl
rolb
jo
into
jmp
mov
sub
loopne
push
nop
dec
ss
dec
cmp
lods
scas
sbb
scas
pusha
loopne
gs
fstl
insb
cmp
pop
ficoms
sbb
inc
add
xchg
xchg
add
mov
shlb
and
mov
iret
scas
lret
xchg
mov
push
adcl
repz
pusha
addb
mov
shll
out
scas
mov
push
comiss
rcrl
inc
loopne
bound
in
push
adc
mov
and
adc
push
jns
shll
push
mov
xor
hlt
or
cmp
jbe
lock
stos
imul
cmp
dec
insl
icebp
dec
rolb
in
lcall
shll
les
inc
gs
outsb
or
shr
mov
jno
ja
mov
inc
das
cld
inc
sbb
addb
mov
shl
adc
bound
ficomps
jg
push
les
aaa
dec
adc
outsb
ret
rolb
cld
cmp
imul
aad
insl
leave
testl
repnz
cmp
mov
roll
shll
hlt
out
push
push
testb
mov
cmp
and
jnp
jb
and
xlat
cmpsb
rolb
data16
loopne
repnz
pop
add
sarb
inc
imul
xchg
push
rolb
shlb
scas
shlb
sub
mov
jae
in
push
imul
addb
sahf
sahf
mov
sbb
mov
xlat
mov
and
jae
icebp
push
andb
add
bound
testl
andb
sub
add
inc
shl
into
lods
and
leave
cwtl
jmp
pop
icebp
mov
fadds
rcrl
sar
rorb
pusha
mov
sub
subb
ret
push
and
out
push
inc
cmc
int3
int3
push
adc
pop
adc
in
and
mov
pusha
and
cltd
movsb
rolb
aam
jns
test
leave
dec
sahf
les
fcmove
sub
mov
jne
loopne
in
mov
andb
inc
test
add
cmpsb
loopne
mov
jp
adc
mov
mov
sbb
mov
shlb
negl
clc
sbb
sub
pusha
xchg
pop
insl
mov
dec
push
in
push
push
and
aad
addr16
xor
mov
mov
sarl
int3
and
aas
xchg
insl
pop
out
cwtl
sub
test
pusha
popf
and
lcall
cmc
ss
loopne
add
andb
inc
adc
pcmpeqb
hlt
inc
call
pop
and
loopne
add
inc
push
adc
rolb
adc
aas
pop
fdivrp
out
jae
jecxz
and
or
pusha
mov
add
jp
out
xchg
frstpm(287
mov
rolb
adc
int
repnz
rcl
sbb
push
and
popa
in
dec
push
rolb
jbe
push
add
test
pop
aaa
shlb
and
adc
mov
jg
mov
inc
push
mov
mov
inc
jne
enter
sub
lcall
sbb
iret
dec
cmp
cld
push
add
jbe
inc
loopne
clc
dec
movsl
fs
inc
rcr
inc
sahf
mov
fcmovbe
mov
pusha
xor
es
addl
test
out
pusha
cmpb
add
dec
sub
andb
rcrb
faddl
cmpsb
addb
popf
mov
pop
cli
fstl
imul
hlt
inc
mov
mov
push
jg
pusha
inc
cmp
pop
xchg
mov
and
faddp
and
fistpll
decl
mul
or
sbb
mov
pusha
sar
mov
or
loopne
inc
pusha
and
pusha
add
add
inc
inc
sti
imul
enter
repnz
add
xchg
out
xor
inc
lock
decl
jp
cmp
mov
and
add
jo
testb
xor
or
pusha
ret
mov
loopne
cli
and
mov
loopne
adc
add
aad
loop
xor
testb
rorb
xchg
sti
dec
dec
jg
sbb
les
movsb
addb
sbbl
xlat
inc
fstpt
pop
jnp
push
lcall
xchg
lea
aam
mov
jge
inc
adc
das
shll
sti
adc
inc
xchg
mov
mov
and
sar
mov
stc
cld
sbb
adc
inc
sub
mov
jmp
pop
adc
pusha
add
and
lahf
jle
lcall
enter
and
loopne
inc
and
scas
aaa
xor
pushf
imul
stos
imul
imull
cld
call
xor
add
push
mov
xlat
aaa
popf
shll
sub
mov
and
pop
sbb
mov
pusha
or
pusha
pop
fstl
sub
loop
cmp
inc
loopne
mov
loopne
sbb
sahf
cmp
daa
or
xor
orl
nop
fdivr
add
xorb
inc
push
mov
inc
and
outsl
aas
push
dec
dec
fistps
push
pop
or
and
jg
int
add
pop
mov
xor
lods
cmp
mov
and
test
test
xlat
pcmpgtd
addb
fwait
xchg
mov
popa
or
add
ljmp
fistpl
push
mov
lods
push
xchg
ja
push
cltd
adc
jne
push
mov
pusha
mov
les
push
imul
xor
sbb
jae
int
jns
sub
andb
gs
sbb
add
loopne
mov
adc
jle
jns
addb
int3
jmp
add
cmpsb
pusha
inc
int
mov
mov
cmp
xchg
test
repnz
add
sbb
in
adc
dec
mov
jle
or
rcrb
pop
mov
addb
sub
pop
icebp
adc
and
rclb
cmp
sarb
fnstcw
flds
add
and
addr16
pushw
loopne
lret
negb
add
push
or
and
call
and
pop
add
lret
scas
popa
xor
dec
jl
add
and
push
push
shrb
loopne
movsb
add
aas
push
xchg
in
loop
fnstsw
shlb
inc
inc
add
adc
mov
lea
jnp
aas
mov
or
inc
mov
test
push
push
mov
xlat
orl
outsl
xchg
je,pt
inc
xor
push
das
fisttps
or
sar
cmp
inc
rcrl
and
rorl
pop
sub
and
mov
pushf
call
adc
aam
pusha
pusha
dec
cld
aaa
cmp
aam
gs
loope
sbb
adc
in
mov
add
mov
gs
mov
loopne
shlb
rorb
js
loopne,pn
adc
fadds
js
arpl
xchg
mov
xlat
push
repnz
lea
inc
mov
push
adc
dec
and
inc
xchg
aam
mov
aas
xchg
hlt
fwait
cmp
push
jbe
int
mov
pop
xchg
xor
mov
mov
mov
mov
sbbb
pop
jns
xor
lret
movsl
out
or
cmc
fwait
dec
mov
sbb
mull
mov
andb
pusha
and
cmp
push
pop
loop
lcall
jecxz
sbb
add
cmp
push
dec
push
cmp
inc
cwtl
aam
mov
or
push
xchg
das
int3
dec
stos
scas
outsb
sub
sub
mov
movsb
andb
adc
aaa
fiadds
sub
shlb
add
and
inc
cltd
pop
cmpsb
inc
and
inc
pop
lock
adc
pop
int
lcall
into
in
ror
push
in
ds
repz
xor
lods
xor
ljmp
out
mov
rcrb
andb
js
and
loopne
popf
sub
add
xor
pop
pop
dec
pop
fdivrl
jl
inc
xor
mulb
jnp
cmp
sbb
sbb
jp
add
rclb
push
enter
xchg
mov
mov
loopne
int3
xchg
test
push
imul
loopne
pushf
inc
sbbl
push
push
pop
dec
xor
rcrb
data16
repnz
loope
sub
lods
shlb
xchg
xor
mov
sub
bswap
mov
cmpsb
add
push
inc
pusha
xlat
divb
fnstsw
xchg
cmpsl
aas
in
and
loopne
outsl
adc
ret
mov
pop
cmp
out
imul
icebp
ja
sbb
jmp
mov
ret
sbb
push
sub
sbbb
loop
dec
test
loopne
or
addr16
and
xor
cmc
sbb
ljmp
add
and
inc
outsb
xor
sbb
fwait
lock
or
pusha
inc
shll
xorl
cwtl
aad
mov
inc
cmp
fcmovu
das
mov
out
icebp
mov
and
mov
sub
orb
lds
sbb
push
cmp
dec
mul
and
inc
and
shll
sub
cmp
sbb
sahf
lahf
xchg
adc
ja
ror
sub
jno
cmc
test
mov
jl
mov
jmp
adc
sbb
adc
mov
adc
loop
shlb
into
xchg
pop
push
stos
loopne
add
or
lds
loopne
ljmp
pusha
cwtl
mov
cmc
dec
inc
ret
push
lods
cmp
in
add
mov
ds
pop
inc
xor
xchg
xlat
into
repz
fnstcw
les
add
jbe
arpl
mov
rclb
mov
push
mov
mov
add
addb
imul
sub
test
scas
mov
mov
push
lods
sub
pusha
push
loopne
ss
insb
jge
jmp
fidivl
or
cmp
lcall
pusha
ficoms
andb
sbb
add
addb
out
in
xchg
lret
ret
sub
pusha
sbb
xor
push
mov
loope
add
cmpsb
pusha
inc
push
mov
rol
dec
daa
adc
jp
leave
cmp
xchg
inc
iret
loop
mov
insb
popf
lret
in
mov
dec
andb
inc
outsb
sub
xorb
inc
rcrb
jmp
pusha
inc
jo
xlat
iret
inc
jecxz
and
mov
or
mov
addr16
or
loopne
hlt
cmp
lea
add
add
testl
imul
arpl
mov
mov
cmp
add
push
mov
push
sbb
xrelease
pop
push
outsb
int
popl
pop
dec
imul
clc
mov
jae
lea
rol
sar
mov
out
out
sub
adcb
das
mov
inc
jo
and
ja
mov
push
out
mov
cmp
cmp
xor
loopne
fistpl
jmp
outsl
ja
inc
mov
out
ja
andb
adc
sahf
cwtl
and
and
lods
hlt
ja
icebp
pop
fs
ljmp
xor
pop
jnp
and
and
loopne
mov
outsb
pushf
rol
das
jmp
push
inc
and
push
xlat
gs
mov
loop
fcomps
mov
nop
sbb
and
mov
push
frstor
iret
das
jg
and
cmp
mov
xor
push
scas
int
out
shlb
jmp
adc
mov
add
outsl
adc
pop
addb
hlt
jb
mov
in
cld
popl
push
sub
cmp
and
mov
jns
inc
shrb
jne
xchg
add
andb
mov
les
jb
loopne
dec
pop
loopne
jno
inc
xchg
mov
icebp
sub
andb
sahf
pop
or
mov
rol
stc
add
cld
icebp
sahf
pusha
cltd
push
loopne
lret
orb
push
push
inc
rclb
stos
mov
int3
and
dec
test
push
addb
push
pop
mov
in
dec
push
lcall
jns
dec
push
movsl
xor
inc
and
sub
sub
loopne
adc
mov
cltd
xor
add
ja
rol
pop
push
xor
inc
adcl
movsb
and
ljmp
push
scas
mov
mov
out
mov
iret
sbb
mov
popa
fiaddl
icebp
out
and
jne
pop
and
add
sahf
rorl
dec
jge
and
mov
popa
xchg
mov
push
xchg
into
loop
cwtl
push
mov
cmc
rcr
leave
out
dec
faddl
add
int
xchg
or
cmp
movsl
cli
and
imul
mov
cmp
xchg
adc
sbb
adc
movsl
push
cmp
sub
mov
hlt
mov
cli
or
and
bound
cmp
or
and
cmpb
movsl
cmp
rol
xor
shlb
xchg
pop
out
aad
add
jle
sub
adc
fnsave
fbld
shl
adc
std
mov
loopne
cmp
lock
jl
das
add
add
rol
fstpl
outsl
cs
mov
andb
scas
shlb
rorl
jbe
push
cmc
mov
pop
cmp
sub
and
mov
mov
xchg
fcompl
loopne
cwtl
mov
mov
shlb
and
ret
inc
inc
mov
loopne
in
sbb
or
xor
mov
arpl
outsl
push
inc
push
fmull
push
add
or
mov
push
aad
push
in
xorl
arpl
adc
shrb
sbb
js
aaa
stc
dec
cwtl
pop
addb
or
push
dec
jbe
imul
fiadds
jmp
mov
add
pusha
jne
imul
add
inc
add
add
rol
cmpsl
xchg
sub
and
inc
xchg
shlb
movsb
add
xor
adcb
fnstcw
add
jp
outsb
pushf
test
aas
imul
mov
xchg
mov
loop
lea
xchg
sbb
xor
rcrl
fsubrs
jge
xorl
add
jb
jl
movsl
int
sbb
inc
push
inc
loopne
push
mov
pop
test
loopne
pop
repnz
aam
fldl
andb
andb
sub
jb
sbbl
pop
jp
es
mov
cmp
pusha
inc
sub
fldl
test
pusha
add
inc
xor
ds
push
add
sbbb
and
fbld
mov
pop
stos
and
loopne
out
daa
shlb
jo
cld
and
dec
jnp
mov
int
and
shlb
dec
dec
cltd
lret
xor
xchg
shlb
push
and
and
add
clc
mov
jb
dec
outsl
div
push
sub
nop
push
dec
std
and
mov
xchg
adc
mov
pop
int
adc
adc
xor
shl
inc
mov
xor
je
adc
cld
sub
int
loopne
push
xchg
mov
stos
add
out
sbb
push
inc
loopne
sti
sub
pop
es
inc
pop
lcall
pop
lret
pop
xor
sti
cmc
and
pusha
and
hlt
movsl
add
cli
pop
rcl
imul
inc
add
add
fcmove
std
adc
inc
sbb
mov
mov
add
mov
frstor
rolb
add
dec
or
mov
mov
mov
mov
cmpsb
mov
sarb
adc
mov
inc
cmp
cmpsl
adc
or
ret
adc
xor
lock
mov
and
push
shlb
in
cmc
mov
nop
in
movsl
lock
add
sbbb
mov
inc
mov
mov
or
pusha
orb
stos
and
push
and
pusha
xor
mov
insl
sbb
sbb
scas
cld
push
jo
ror
loopne
test
push
pusha
cmp
xor
inc
pusha
sub
loope
cmp
sbb
and
mov
sbb
jnp
imul
push
rol
mov
mov
shll
pusha
pusha
mov
int
push
cmp
out
xchg
dec
pop
cmp
mov
and
ds
stos
mov
es
cmpb
jg
or
inc
in
mov
add
cmpsb
inc
loopne
ja
cmp
rolb
loop
mov
loopne
and
sbb
inc
push
mov
pusha
add
in
pusha
add
pusha
sub
nop
bound
inc
and
xor
dec
into
push
incl
aaa
lcall
nop
out
mov
xchg
cmp
mov
testb
clc
sbb
dec
push
pop
leave
jno
mov
inc
sbb
loopne
inc
jae
mov
imul
test
int
and
sub
lods
xchg
mov
rcrb
cltd
enter
jmp
and
xor
push
fnsave
xor
hlt
icebp
movsb
mov
lret
les
jae
xor
enter
outsl
adc
out
aas
nop
dec
sbb
pusha
inc
mov
mov
loopne
add
ffreep
subl
xor
outsw
dec
and
or
mov
lahf
test
jne
loop
pop
and
inc
push
inc
adc
sub
cmp
lock
and
adc
mov
and
jg
dec
loopne
insb
mov
xorb
ja
mov
add
push
hlt
inc
stc
cmp
aam
xor
sbb
sahf
es
add
push
mov
mov
inc
xchg
lcall
call
and
adc
or
or
and
push
xchg
lcall
dec
insb
mov
lcall
stos
andb
lcall
aam
pop
jmp
mov
pop
push
and
stc
aas
or
mov
lea
dec
into
mov
jp
addb
icebp
lcall
rolb
inc
mov
fcmovnbe
stos
jae
xchg
mov
dec
lret
pop
mov
mov
loopne
arpl
lahf
pop
test
dec
push
andb
inc
xor
rolb
xchg
push
out
lea
add
sub
loopne
add
loopne
out
inc
stos
andb
shrl
fwait
mov
jae
cwtl
sub
addb
fistps
imul
inc
cmpb
push
shlb
cmp
adc
push
out
push
mov
push
jne
jnp
cmp
push
jle
xchg
add
loop
xchg
outsl
push
pop
add
inc
cmpsb
inc
pusha
rol
sub
rcrb
cs
and
inc
inc
mov
insl
jb
outsb
mov
push
out
push
mov
jle
cltd
iret
fildl
jnp
sbb
xor
mov
aaa
in
dec
push
ret
rclb
outsb
pop
sbb
push
ja
xor
push
mov
imul
sbb
xchg
push
xor
out
xor
and
inc
cld
int
add
pop
out
mov
pop
mov
popf
cmp
and
icebp
imul
das
gs
fs
or
mov
pusha
sub
rorb
mov
test
and
mov
mov
cmpsb
mov
inc
rclb
addb
sbb
inc
pusha
jno
mov
jecxz
and
cmpsl
ds
jge
into
mov
out
cwtl
xlat
lcall
mov
rcr
push
jp
pop
cltd
in
mov
or
loopne
decl
pusha
sahf
lods
inc
test
rorb
or
jns
xor
fbld
rorb
in
cmp
xor
xchg
jo
pop
push
arpl
lds
jns
xchg
add
imul
and
cmpsb
and
ret
jg
adc
inc
loop
imul
pop
lret
out
mov
add
xorb
cmp
sub
subb
xchg
push
jl
adc
in
jnp
ficompl
lds
les
and
aam
fidivrl
lret
inc
jl
insb
loopne
rol
xor
and
fmulp
int3
out
ffree
fstl
inc
pusha
xchg
stos
add
es
daa
aad
jp
repz
mov
jg
cltd
rorb
mov
idivb
rcrl
mov
popf
out
cli
mov
scas
pusha
and
mov
adc
push
ljmp
addb
add
mov
cmpsb
pusha
and
jl
mov
mov
sbb
aaa
jmp
or
rorb
addb
shrl
ds
and
pusha
lods
shlb
or
sbb
icebp
xchg
stos
jmp
out
cmp
lahf
sbb
cmc
sbb
nop
aad
loopne
out
add
mov
mov
mov
adc
add
push
out
stos
jb
and
shlb
mov
movsb
loopne
icebp
inc
insb
xchg
movsl
movsl
lock
sti
rorl
lret
inc
rcl
or
popa
or
and
mov
jmp
fmull
pusha
adc
xchg
or
jle
cwtl
mov
mov
sti
jecxz
loopne
mov
fdivrl
fidivrs
imul
pusha
adcb
add
dec
xchg
sarl
adc
xchg
push
lret
jnp
jmp
mov
pusha
push
scas
add
mov
jle
adc
subb
mov
push
add
movsl
sahf
movsl
cmp
add
pop
shrb
andb
jbe
in
mov
push
and
mov
xchg
pop
dec
mov
inc
xor
pusha
inc
lods
shl
scas
shlb
mov
stos
add
test
mov
mov
pop
sbb
loopne
pop
dec
lret
rclb
mov
test
andb
loopne
loopne
out
pusha
loopne
outsb
sar
xchg
xchg
sbb
sub
dec
xchg
in
ss
dec
pop
insb
fstl
mov
cmp
in
or
mov
in
nop
cmp
imulb
cmp
sub
shr
add
pop
movl
pop
leave
add
mov
inc
andb
ret
sbb
push
inc
add
incl
mov
and
mov
and
loop
push
adc
shlb
ret
and
or
rcll
andb
sub
pusha
outsb
out
loopne
outsb
xor
mov
mul
ds
xchg
xchg
ljmp
and
inc
mov
icebp
sub
and
shlb
inc
test
lds
lahf
add
and
sbb
aaa
pop
mov
ljmp
mov
nop
adc
mov
pusha
mov
and
pusha
pushf
mov
rcl
inc
dec
adc
loopne
cmp
jne
repnz
in
jp
jns
add
sarb
mov
test
or
add
xchg
rolb
push
or
inc
inc
out
mov
jne
das
cwtl
adc
pusha
and
xlat
cs
cmp
out
adc
mov
adc
out
dec
xor
fwait
mov
add
or
and
and
mov
dec
lods
pusha
cmpb
add
sarl
inc
lss
daa
shlb
rcll
mov
fs
hlt
adc
dec
cmp
clc
testb
adc
loopne
add
adc
add
xorb
dec
std
or
inc
popa
mov
daa
xor
and
sub
clc
dec
lods
das
xor
imul
adc
cmp
je
lret
xchg
arpl
push
pusha
inc
lret
adc
mov
mov
pushf
inc
inc
out
cmp
out
push
push
into
movsl
inc
lods
data16
imull
cs
rclb
stos
push
repnz
xchg
lret
and
jbe
mov
jmp
and
mov
test
pusha
push
add
loopne
pop
in
popa
mov
addb
jbe
sahf
cmpsl
cmc
in
adc
addb
add
fnsave
pop
flds
andb
and
mov
loopne
loopne
xor
ret
decb
add
cmp
mov
shlb
and
pop
mov
shrb
js
sub
add
mov
in
dec
add
notb
add
and
push
loopne
mov
mov
and
fbld
cmp
out
xor
andl
push
add
pusha
add
cmc
popa
aam
pop
enter
call
push
lret
rorb
mov
arpl
lock
in
sub
pusha
mov
std
or
mov
subl
add
pop
mov
cmp
mov
inc
bound
in
mov
insb
aas
pop
pusha
pop
fwait
add
sarb
sub
xor
jg
and
test
xlat
cmp
xchg
push
jnp
mov
imul
xor
addb
xchg
xchg
mov
push
cmc
lahf
jae
popf
fsubrs
and
shrl
push
fmull
into
movsb
add
jb
sti
nop
cmpsb
loopne
mov
pop
sub
sbb
mov
mov
mov
test
adcb
push
stc
ficompl
fcomps
clc
popf
add
loopne
inc
sbb
mov
rcl
sbb
sbb
dec
lea
pusha
xor
adc
mov
push
xlat
push
inc
loopne
jo
sbb
les
pop
cwtl
cmp
add
cmp
shlb
jns
adc
es
loopne
imull
loopne
mov
push
popa
scas
inc
add
mov
adc
jmp
shl
xor
andb
addb
aaa
sbb
pusha
mov
test
inc
into
mov
jp
sahf
imul
xchg
jle
or
xchg
or
leave
mov
or
adc
pop
or
fiadds
mov
add
repnz
add
loopne
in
push
jnp
push
cmp
xor
mov
andb
ficomps
aad
fdivrs
scas
shlb
mov
mov
add
adc
test
les
andb
cmp
add
incl
push
sbb
mov
jmp
cmc
lods
and
mov
jb
test
in
aad
pop
xchg
mov
mov
insb
stc
push
test
push
mov
rolb
pusha
pop
aas
pop
shlb
pusha
jmp
and
dec
shl
jp
mov
and
cwtl
and
test
repnz
mulb
inc
dec
pop
jp
ljmp
adc
sbb
add
loopne
fwait
sbb
pusha
pusha
mov
in
cmc
or
pop
sbb
hlt
mov
std
sbb
dec
xchg
and
mov
sbb
mov
inc
push
sub
and
pop
ss
xor
cmp
addb
mov
dec
loop
push
mov
sub
sub
pusha
icebp
cmp
pusha
add
aad
imul
mov
add
pop
jl
pushf
jb
mov
push
pusha
add
jb
mov
pusha
add
xchg
xchg
jo
jne
push
pusha
shrb
sti
cld
or
add
call
movl
loopne
pusha
pusha
sbb
dec
shlb
loopne
push
jg
ret
repnz
cmp
jnp
mov
add
insl
sahf
lea
sar
mov
mov
sbbb
loop
dec
dec
or
rclb
sar
xchg
push
bound
pusha
shl
lret
cld
addb
insb
add
shlb
pop
mov
shlb
repnz
dec
iret
outsb
in
mov
inc
push
push
xchg
ret
jmp
xor
adc
jno
pop
dec
mull
lret
xchg
mov
jae
xor
inc
and
shl
xchg
outsl
mov
test
mov
jge
ret
addb
xchg
clc
in
lods
bound
mov
aam
jg
andb
or
lea
inc
add
mov
inc
popf
inc
mov
cltd
aas
push
pop
add
fwait
lods
inc
inc
addr16
lock
jns
push
scas
frstor
mov
and
mov
and
mov
xchg
test
shlb
and
test
pusha
mov
shlb
mov
push
jmp
jbe
mov
out
fadd
ret
rsm
and
cwtl
aas
push
pushf
cwtl
addr16
xor
and
popa
push
test
call
and
addr16
or
pusha
pop
inc
xchg
movsl
ret
jno
mov
push
push
pop
jno
imul
push
inc
and
push
adc
and
andb
loopne
sub
aad
lods
and
es
and
or
gs
mov
aam
xchg
push
mov
pop
and
dec
popf
into
lret
mov
stos
add
inc
shlb
icebp
xor
push
mov
movsb
mov
cmp
loope
mov
push
loopne
sub
mov
loopne
or
jbe
xor
and
cmp
jb
add
lods
add
pop
imul
push
and
cli
sbb
stos
addb
sbb
mov
and
aad
pusha
pusha
dec
xchg
movsb
loopne
int3
sub
jbe
insb
shl
adc
xchg
pusha
imul
and
je
inc
dec
or
add
notl
cmpsl
out
adc
aas
fwait
mov
inc
jae
cs
mov
ret
subl
mov
loopne
insl
nop
aad
loopne
jle
and
push
fbld
mov
cmpsb
and
inc
out
mov
jbe
add
cmp
or
mov
inc
jae
or
cmp
mov
mov
in
xor
js
adc
into
fisttps
inc
push
lea
inc
pusha
fwait
idivb
dec
out
add
sbb
adc
mov
jmp
andb
push
mov
push
into
loopne
adc
mov
leave
test
mov
cmp
pusha
sbb
icebp
mov
mov
inc
add
sahf
into
shll
pop
lock
loope
mov
shlb
loopne
in
fs
add
pop
dec
mov
out
test
rorb
rcr
fwait
jl
mov
mov
add
xchg
ret
ffreep
jns
adc
sbb
xor
aam
addb
cmp
sub
and
mov
or
pusha
repz
testb
flds
iret
mov
int
bound
jmp
dec
daa
jb
pusha
loopne
mov
rcrl
and
mov
inc
aad
xchg
js
cmp
addb
jno
lret
jnp
bound
sub
aaa
mov
push
sub
jle
nop
mov
cmc
loopne,pn
pop
aam
cmp
inc
aas
dec
xchg
xchg
fwait
pop
popa
xchg
lahf
movsb
add
icebp
pop
shlb
sbb
sub
add
pop
xchg
lock
les
hlt
mov
add
sub
cmp
or
jns
daa
lock
dec
adc
pminsw
das
jns
rcr
sub
icebp
rcl
test
ss
sub
fs
or
rcrb
adc
mov
or
pusha
inc
popf
data16
sub
adc
add
nop
or
jo
or
sarb
xchg
shrb
outsl
xchg
es
push
or
addb
mov
xchg
scas
or
inc
arpl
mov
jno
int3
mov
xor
icebp
ljmp
mov
pusha
addb
mov
mov
push
or
and
shlb
cli
fldenv
xor
add
mov
shlb
sarb
rolb
fcoms
es
lock
push
lahf
cs
mov
and
xor
addl
rcr
lcall
scas
xor
enter
and
pop
inc
in
inc
mov
fcom
data16
mov
sbb
loopne
adc
andl
lods
mov
jge
push
and
add
bound
cmc
push
shl
cmpsb
add
roll
and
dec
inc
inc
and
sbbb
mov
fimull
and
add
and
sub
pusha
jmp
adc
xchg
jg
pusha
pusha
jbe
add
adc
stos
inc
shlb
loopne
ret
and
andb
sub
and
mov
leave
pop
adc
pop
data16
mov
mov
popa
and
jmp
push
andb
das
pop
push
mov
xchg
shlb
cmp
lahf
loopne
in
repz
mov
xchg
xchg
ss
subb
mov
fiaddl
inc
jp
jae
or
hlt
mov
and
pusha
mov
sbb
add
and
push
mov
jle
push
cmc
pop
push
addb
and
xor
xchg
inc
inc
mov
push
outsl
mov
cmp
nop
xchg
mov
pop
repz
lods
and
mov
mov
call
or
test
pusha
sbbl
or
xor
xor
xchg
inc
push
lds
dec
test
rolb
xchg
mov
lret
jle
mov
push
push
pusha
loopne
push
out
stos
cmc
and
cmpb
in
frstor
xor
shlb
icebp
dec
mov
out
shlb
and
dec
xor
and
inc
sbb
lret
test
and
dec
fisttps
loopne
testb
cmpb
and
mov
fbld
shlb
xchg
or
loopne
mov
xor
lret
push
in
imul
xchg
cmp
stos
pusha
inc
mov
stc
out
push
loopne
and
add
idivl
xchg
test
fidivs
push
inc
pop
test
ja
xchg
inc
jle
cwtl
cmp
mov
push
scas
mov
mov
out
lcall
cmp
cli
lea
rol
lods
andb
sub
daa
add
add
sbb
xor
lods
mov
rorb
in
dec
stos
test
mov
pop
cmp
lret
fs
mov
cmp
cld
add
sub
inc
sbb
aam
add
sub
sub
add
cli
hlt
xchg
jl
imull
rolb
loopne
clc
sti
test
rclb
ficomps
add
shrb
mov
stc
enter
fwait
je
and
outsb
enter
mov
push
stos
add
add
stos
and
in
sbb
in
addb
inc
push
add
andb
mov
pusha
add
mov
call
andb
cwtl
xor
add
rcrb
addr16
outsl
push
imul
sbb
call
or
dec
pop
mov
mov
mov
add
mov
and
into
and
rcrb
or
stos
mov
sahf
lret
mov
int
lea
orb
sahf
orl
mov
aas
mov
std
sbb
fucom
sub
inc
loopne
mov
int
jbe
pusha
inc
jg
jns
ret
loopne
adc
imul
mov
xchg
inc
out
add
data16
hlt
pop
lret
les
xor
mov
aas
or
mov
xchg
lds
xchg
out
dec
push
dec
lahf
cld
cmp
mov
fsubrs
cmc
and
shlb
jge
test
pusha
sarb
mov
and
adcb
test
mov
dec
cmp
test
add
push
mov
fstpt
sahf
scas
and
mov
dec
mov
push
jb
inc
lret
or
rcrb
stos
addb
mov
mov
aam
push
in
add
jmp
addb
addb
xchg
inc
add
jnp
dec
xchg
xor
mov
mov
inc
data16
pusha
icebp
pusha
mov
cmp
push
cmp
add
mov
das
xchg
cmp
xlat
pop
add
sbb
pusha
sar
pusha
xorb
pop
incl
pop
stos
inc
inc
and
rclb
mov
popa
clc
sub
mov
jno
test
loopne
push
loopne
sti
jae
jb
mov
out
aas
adc
adc
sub
xlat
mov
jbe
lock
jl
arpl
and
and
sbb
inc
push
and
ror
outsl
pop
scas
push
xchg
push
add
add
gs
sub
loopne
xchg
pop
push
inc
inc
xor
add
push
cltd
or
cwtl
and
loopne
mov
dec
shrl
and
nop
mov
xor
mov
xorb
jge
and
les
adc
xor
subl
cmpsb
add
pop
mov
in
scas
and
and
jmp
or
rorb
mov
or
rcrb
inc
mov
loopne
sbb
pop
nop
and
inc
mov
scas
mov
sbb
xchg
mov
daa
mov
mov
add
lods
ret
lahf
int
mov
sbb
sti
outsl
mov
inc
mov
xchg
mov
push
add
pusha
and
xlat
iret
mov
and
add
icebp
pushf
pop
into
enter
xchg
daa
xchg
out
es
inc
mov
and
lock
push
mov
rol
inc
rolb
xchg
mov
lock
mov
adc
sbb
ror
insb
push
sub
mov
dec
dec
xchg
addb
test
sbb
aas
not
sbbl
rcrb
mov
andb
test
add
imul
and
push
or
loopne
xchg
hlt
mov
aam
cbtw
jle
popf
data16
imul
add
loopne
cmpl
sbb
mov
loopne
adc
sbb
fsubrp
or
int3
lret
mov
jo
rorl
lds
and
test
rcl
add
bound
push
and
loopne
mov
add
and
push
jns
pop
or
xchg
roll
ss
inc
sti
mov
movsb
and
jg
lock
sbb
pusha
fsin
adc
arpl
dec
inc
and
inc
into
adc
add
orb
stos
inc
mov
loop
mov
dec
int
and
add
sbb
loopne
hlt
inc
push
jbe
sbb
int
loope
mov
shlb
clc
ja
lods
push
shll
sarb
faddp
jmp
mov
orl
in
sbb
loopne
jl
xchg
pop
data16
jae
pop
or
and
js
xor
or
pusha
pop
call
lock
and
dec
scas
andb
add
movsl
xor
enter
cmp
sub
add
jns
xchg
iret
and
pusha
pop
mov
stc
adc
popf
frstor
outsb
sahf
add
loopne
and
inc
daa
add
and
loopne
lret
fwait
mov
clc
xchg
aaa
lods
inc
inc
jl
xor
repz
xor
movsb
rolb
shlb
jmp
inc
loop
rcrb
mov
dec
xlat
nop
in
popf
fidivrl
out
pusha
das
xor
lods
loopne
or
pusha
repnz
push
and
and
lret
cmp
les
stos
loopne
rcll
sbb
mov
rcrl
pop
rol
sub
pop
mov
stos
sbb
addb
xchg
lea
pop
sbb
loopne
cld
xor
iret
push
clc
push
xor
sbb
jl
ret
fnstsw
mov
mov
popa
dec
insb
test
loopne
pop
push
jmp
adc
xchg
loopne
rorb
mov
xchg
mov
cld
hlt
std
aad
cli
leave
cmp
je
aaa
divl
and
jp
mov
add
addr16
loopne
in
push
movsb
inc
and
inc
repz
mov
das
out
mov
pop
mov
dec
push
test
add
lock
inc
and
andb
or
lods
add
das
movsb
inc
and
sbb
mov
jae
xor
jle
inc
adc
mov
popa
lret
and
pusha
inc
loopne
or
xor
mov
loopne
push
cmp
mov
mov
jne
icebp
hlt
fxch
insl
inc
in
or
into
jb
mov
mov
push
and
cmp
adc
mov
mov
xchg
sub
inc
loopne
into
mov
push
nop
outsl
dec
mov
xor
mov
mov
mov
jl
pop
sub
add
addb
push
ljmp
lcall
adc
xchg
sar
and
ja
push
xchg
cmp
add
aad
mov
dec
out
cld
adc
in
cwtl
or
push
push
lahf
cmp
mov
cli
lock
fxch
and
mov
pusha
pusha
xchg
ljmp
inc
mov
inc
sub
loopne
test
and
daa
mov
inc
adc
pushl
fidivl
inc
cmc
dec
pop
jns
pusha
mov
out
addr16
imul
fdivrl
out
enter
push
mov
rolb
mov
add
addb
inc
and
inc
pusha
imul
out
pop
and
add
jle
insl
loopne
or
lods
les
jecxz
shlb
xlat
mov
rcl
jno
inc
loopne
jne
lock
js
sbb
movntq
push
arpl
rep
add
mov
push
xor
adc
pop
andb
inc
js
in
push
cmp
xchg
les
or
adc
inc
pusha
pushf
icebp
notb
test
mov
fistpl
pusha
add
xchg
int
xchg
popa
lock
mov
and
jg
sbb
xchg
and
sarb
mov
push
popa
xchg
inc
push
stos
pusha
inc
inc
dec
jl
mov
inc
repnz
cmpsl
mov
sbb
leave
fisubrl
adc
addb
sbb
shrb
cmp
loopne
sbbl
inc
dec
inc
pop
jmp
push
cmpsl
pop
movb
pop
ficoms
mov
je
xor
mov
aaa
dec
jns
int
jb
mov
andb
add
inc
dec
test
rcrb
enter
imul
jle
rorb
inc
and
mov
or
mov
adc
aad
test
leave
cli
fsts
jge
mov
int3
fstpt
lods
dec
or
pusha
insl
icebp
or
test
out
out
test
loopne
jnp
shlb
cmp
mov
rclb
jb
in
push
int3
mov
mov
lods
jae
sub
ret
mov
mov
sbb
and
fstl
mov
rolb
fsubp
jmp
adc
insb
insl
hlt
cmp
mov
enter
int
pusha
sub
loopne
cwtl
mov
mov
sbb
data16
sub
mov
insb
xchg
sub
mov
xlat
inc
sub
loopne
lock
push
fsubp
push
ficomps
scas
int
sbb
ljmp
mov
inc
pop
sub
adc
cltd
inc
or
fwait
mov
cmpb
jecxz
lea
and
and
and
loopne
lcall
xchg
or
jae
stos
push
inc
fwait
adc
push
mov
gs
dec
aam
sbb
outsl
pop
jno
addb
and
xor
push
rorl
and
inc
mov
test
cmp
sti
cmp
andb
lcall
addb
fcomp
dec
in
cmp
andb
mov
pusha
loopne
shlb
aam
fwait
sbb
enter
pusha
inc
mov
mov
mov
push
pop
addb
jge
sub
mov
xchg
add
cld
rclb
cmp
jmp
mov
and
adc
sbb
loopne
shlb
andb
js
icebp
loopne
xchg
pop
aad
mov
addb
sbb
mov
hlt
test
or
inc
mov
mov
push
mov
movsl
mov
and
je
push
xchg
mov
andb
test
inc
push
mov
push
ja
in
add
and
popl
and
xchg
push
pop
lcall
aad
lcall
xchg
jb
or
addb
popf
xor
sub
data16
dec
cli
cmc
daa
xor
andb
fs
add
jo
cmpsl
and
cmpb
or
mov
xor
pop
add
fs
pop
adc
cld
xor
jle
add
fildll
lret
inc
xor
add
add
mov
mov
pusha
pop
and
jecxz
mov
sub
filds
jns
or
les
out
xchg
rorb
pusha
adcb
cltd
stos
clc
cld
aaa
loope
pop
orl
cmpsb
pusha
add
push
xchg
add
add
out
js
adc
or
pop
jg
filds
mov
sub
xchg
inc
ds
cmp
rolb
jle
loopne
xlat
sarb
xlat
inc
lret
adc
rcl
lcall
sahf
xor
fdivrs
xchg
xchg
jne
pusha
loopne
loopne
rclb
aam
mov
stos
shrb
sub
rcl
xchg
inc
je
add
rolb
loopne
dec
movsb
loopne
adc
push
add
ret
fcmovnbe
imul
call
fisubs
add
into
gs
shlb
sub
shlb
mov
adc
inc
mov
pusha
mov
mov
push
cmpsb
inc
add
pop
adc
loopne
xchg
and
sbb
sub
rclb
push
addb
cmp
mov
xor
xchg
ljmp
sbb
test
pusha
mov
sbb
out
push
scas
testl
mov
mov
mov
mov
push
push
mov
xchg
mov
testb
fwait
add
pusha
sub
std
pop
push
loopne
mov
ds
sub
loopne
into
setle
jnp
pop
and
fisttpl
mov
andb
add
ret
fmull
sti
pop
andb
fadd
iret
enter
adc
mov
shlb
adc
std
aas
push
inc
test
inc
and
inc
xor
mov
clc
cmp
clc
adc
ret
or
xorb
dec
pop
sarl
xor
mov
add
lcall
lret
out
xchg
mov
jecxz,pt
jae
iret
aaa
lods
or
rorb
loopne
ret
and
sbbb
loopne
jne
shrb
mov
pop
shll
in
mov
out
out
inc
pop
scas
arpl
inc
ret
call
mov
ja
jne
jo
inc
pusha
pop
jmp
pop
icebp
xchg
fldcw
out
out
or
jae
xchg
push
loop
scas
rol
adc
xor
cmpsb
loopne
xor
jl
repnz
sub
loopne
es
pusha
sahf
daa
mov
push
mov
jnp
cmp
push
push
fcompl
popa
movsb
addb
sar
mov
mov
push
loopne
cmp
inc
sbb
sbb
movsb
mov
pusha
add
add
mov
loopne
push
jnp
or
mov
cmp
mov
stc
xor
loope
cmp
sub
pop
in
mov
mov
rorb
and
daa
sqrtps
roll
mov
repz
pop
adc
sbb
cmp
and
mov
pusha
inc
dec
dec
shrb
out
repnz
jns
jecxz
rcrl
je
daa
jg
jl
inc
mov
xchg
jp
sbb
add
cmpb
mov
fs
ftst
dec
dec
ret
repz
call
sub
xchg
cmp
adc
rolb
mov
pop
inc
push
pop
inc
lods
and
dec
fisttpl
mov
pusha
add
clc
rolb
pop
xchg
repnz
xor
repz
push
bound
mov
inc
addb
test
shl
rclb
in
out
js
shll
sbb
int
pop
cs
inc
inc
insb
mov
test
and
mov
pusha
loopne
ljmp
test
ret
add
and
sahf
das
fwait
iret
pushf
nop
cmp
mov
mov
frstor
aas
dec
mov
test
xor
mov
add
and
add
aam
xorl
or
andb
adc
jns
cmp
loopne
cld
dec
fcoml
cltd
inc
test
repz
andb
push
loopne
jl
lock
out
add
pop
sbb
pop
ss
loopne
fs
or
mov
sbb
and
inc
push
sub
and
loopne,pn
pop
jmp
or
add
and
imull
add
nop
cmpl
std
sbb
add
sahf
xchg
aad
ds
outsl
ds
js
xchg
pusha
orb
or
sub
rorl
xchg
pusha
push
push
fs
and
lds
mov
push
lods
mov
xor
inc
mov
mov
jo
xchg
shl
outsl
dec
add
xchg
jecxz
xchg
fidivrs
in
jb
mov
ja
cld
loopne
mov
nop
jecxz
jmp
pop
inc
sbb
adc
dec
stos
mov
icebp
in
jle
cmp
add
add
inc
xor
xor
sub
jbe
jno
and
shrb
and
lcall
add
xchg
xchg
ja
mov
and
loope
inc
rcrb
ret
push
loopne
push
mov
jns
mov
mov
xor
decl
rolb
or
xchg
xor
cmpsl
mov
lcall
pop
jl
out
mov
mov
pusha
mov
inc
xorb
sub
addb
enter
and
imul
xor
push
mov
push
xor
pusha
sbb
out
mov
pop
xor
test
ja
mov
dec
cltd
push
xor
aad
stc
mov
mov
push
cmp
mov
rolb
aaa
xorl
pop
js
cmp
sub
mov
das
test
and
lret
pusha
add
adc
cmp
cli
stos
andb
pop
push
xchg
jno
rclb
ss
sarb
pop
mov
cli
mov
add
jo
sbb
testl
xor
xor
mov
mov
int
lea
push
pusha
inc
nop
adc
movsl
test
addb
into
fcomps
mov
mov
fbstp
add
js
cmpsl
sub
add
mov
shlb
shlb
test
shl
push
sbb
cmc
sahf
std
bound
add
call
adc
test
in
cwtl
test
dec
mov
xor
in
cmp
mov
lret
imull
test
sarb
add
pop
pusha
mov
or
popa
ret
popa
cld
pop
sbb
xchg
add
and
cld
test
cmpsl
sub
mov
pop
aaa
xlat
or
lret
adc
jg
test
mov
mov
xchg
mov
inc
jno
fadd
pusha
mov
pop
push
inc
xchg
push
mov
inc
add
add
andb
adc
push
sbb
fimuls
dec
cmp
call
inc
cli
pop
test
pusha
loopne
test
pusha
xor
int
dec
movsl
fcmovb
sub
fcompl
xchg
pop
mov
int
and
push
pop
fnstsw
test
inc
loopne
push
sub
out
jle
shlb
push
stc
inc
push
mov
cltd
aam
stos
rolb
xchg
jecxz
jl
inc
loope
stc
repnz
push
outsl
enter
in
xchg
add
mov
cmpb
loopne
inc
add
rcrb
push
ja
hlt
and
sub
sbb
rolb
sbb
mov
sub
adc
mov
jmp
lret
cmp
mov
sub
loop
andb
mov
mov
or
adc
adc
fistpll
fld
or
fnsave
mov
and
test
push
daa
ror
addb
mov
insb
std
test
adc
inc
xchg
es
inc
mov
orb
push
pop
mov
add
adc
popf
dec
and
arpl
gs
add
adc
pop
data16
xchg
or
and
adc
xchg
fldcw
and
lock
inc
out
sub
push
inc
push
notb
insb
inc
andb
andb
int3
shl
in
outsb
popa
push
in
xchg
ret
aad
xchg
nop
fildl
popf
mov
inc
pop
sbb
fnstenv
and
clc
int
mov
jne
push
mov
adc
loop,pt
inc
pusha
adc
addr16
xchg
add
inc
loopne
lret
dec
lret
jns
iret
mov
pop
pop
push
stos
and
push
shll
adc
shll
mov
inc
push
les
mov
push
sbb
ret
inc
data16
or
cmpsb
mov
lcall
jp
mov
xchg
dec
push
mov
cmpsb
andb
pusha
pusha
jns
ja
je
in
lock
cld
xor
mov
push
js
std
add
cmc
jns
jns
jne
mov
loopne
push
or
pop
jnp
push
sub
jecxz
xor
shl
cmp
xchg
inc
stos
and
and
repz
dec
clc
jp
mov
imulb
xchg
ss
pushl
sub
into
nop
jg
pop
jnp
cmp
je
addb
fidivrl
call
les
and
or
test
sbbb
ljmp
pushl
mov
sbb
movsl
aad
and
pusha
and
dec
mov
mov
rcll
repnz
arpl
mov
and
push
mov
add
stos
mov
cld
xchg
lea
aad
mov
or
pusha
pushf
mov
das
stos
and
inc
ja
adc
cmpl
cmc
dec
push
jle
inc
loopne
arpl
cwtl
push
add
pusha
dec
scas
loopne
pop
outsb
cmp
mov
and
xchg
mov
shlb
or
and
pusha
adcb
xor
and
sub
ret
mov
stc
mov
addb
pop
fldcw
pusha
or
push
pusha
inc
arpl
insl
popl
jns
push
sub
adc
iret
decl
and
mov
pusha
addb
mov
and
outsl
das
arpl
out
cmpsb
andb
cmpsb
addb
rol
jno
jge
daa
inc
popa
inc
cmc
sbb
inc
pusha
mov
and
or
jmp
aam
jg
inc
mov
jecxz
push
push
push
inc
and
lret
lret
xchg
enter
inc
mov
adc
jbe
movsb
rolb
out
ret
rolb
daa
jmp
loopne
sahf
rclb
rcr
andl
sub
out
mov
scas
add
add
stc
mov
adc
test
shrb
xchg
push
mov
jmp
sbb
mov
popf
mov
stos
and
jne
data16
or
mov
adc
loop
and
cmp
dec
mov
lret
xchg
imul
push
lahf
sbb
pop
adc
push
sti
or
rolb
add
or
adcb
fbld
ja
test
add
pusha
inc
cmp
mov
xchg
iret
adc
rorb
fidivs
and
xor
add
rolb
mov
pop
sub
test
and
sub
mov
mov
sub
jmp
inc
mov
fdivp
bound
push
or
pop
ret
mov
in
std
out
cwtl
mov
pusha
test
loopne
add
mov
and
or
pop
aas
push
push
jb
inc
icebp
adc
pop
jno
cwtl
lods
loopne
and
loop
pusha
inc
pop
mov
addb
and
shl
mov
inc
jbe
pop
sbb
rcrb
xor
add
fnstsw
xlat
stos
pusha
jnp
jmp
ljmp
add
aad
add
repz
push
sbb
dec
dec
push
jg
mov
mov
pushf
add
add
sbb
mov
xchg
xchg
adc
scas
inc
pusha
icebp
add
push
ds
dec
mov
add
sub
lds
cmp
sub
shlb
pusha
adc
out
jmp
rolb
pop
orl
inc
in
divb
sub
fucomi
movzwl
addb
aas
xchg
mov
fcompl
push
andb
fildll
pusha
inc
dec
ss
xchg
add
popa
jg
dec
add
loopne
xor
iret
mov
inc
loopne
pusha
mov
in
add
fdivrs
loopne
loope
daa
outsb
loope
xor
in
ss
dec
sbb
loopne
fidivs
scas
xor
cltd
xchg
nop
fstps
xchg
cmc
adc
mov
stos
lea
call
inc
insl
negb
in
xor
sub
and
push
add
push
and
sub
inc
xchg
dec
ss
pop
pop
jb
push
or
and
in
jge
addb
add
aaa
xor
inc
push
addb
pushf
imul
inc
out
cmpl
fistpll
cmp
and
pusha
inc
push
loopne
aaa
xchg
mov
ja
repz
insb
or
adcb
add
daa
nop
clc
xchg
and
hlt
int3
pop
lods
inc
loopne
pop
and
shl
and
mov
mov
cmp
es
adcb
aam
push
mov
je
sub
mov
and
in
push
movsl
mov
add
dec
call
sbb
and
orb
pop
andb
aad
stos
and
mov
lock
mov
sbb
lea
xchg
jbe
lds
add
imul
and
aad
add
pusha
cs
ror
and
add
cmp
mov
jbe
lret
or
mov
je
cli
dec
dec
out
pop
arpl
pop
fsub
add
repz
add
sahf
cmp
jb
lea
loopne
ljmp
inc
xchg
xor
jo
in
and
enter
mov
test
and
jle
inc
es
add
mov
and
dec
or
inc
mov
mov
dec
shlb
cmpl
inc
js
sbb
inc
test
inc
pop
rcr
fldcw
adc
mov
sbb
loopne
sub
mov
inc
rcl
fsub
aam
cmpsb
loopne
adc
xor
insb
xchg
lods
pusha
add
mov
shl
cli
jne
imul
fcoml
jecxz
bound
inc
mov
jns
jp
popa
jl
call
mov
sbb
mov
cmpb
mov
inc
pop
test
sahf
sub
cmp
pusha
sub
mov
sti
jns
and
loopne
dec
decb
and
cmp
in
in
lods
and
das
movsl
pop
ss
cmp
add
xchg
adc
roll
pop
scas
pusha
and
shr
test
sbb
adc
gs
inc
dec
add
mov
or
rcr
cltd
push
sub
rolb
mov
mov
leave
in
and
dec
das
inc
je
sub
pushf
test
add
lock
sub
popa
gs
pop
testl
shlb
repz
inc
dec
es
and
add
es
inc
call
and
add
add
inc
jne
push
pop
sub
inc
popf
hlt
dec
sub
je
loopne
jbe
push
push
add
aad
data16
hlt
aam
mov
loopne
cld
sbb
adc
sub
add
lds
jge
mov
pusha
cld
inc
pop
add
inc
stos
and
je
enter
out
clc
loopne
add
inc
lds
addb
pavgb
int3
loop
shll
loopne
sub
mov
mov
cmpsl
inc
jp
inc
mov
adc
aad
jge
imul
cmp
in
sub
hlt
stc
jge
sarl
cmpb
cmp
cmp
inc
fidivs
xchg
inc
or
and
xchg
jb
dec
je
jp
jb
lock
mov
outsl
lret
xchg
add
push
lds
lods
inc
rcr
dec
xchg
pop
add
movsl
pop
aam
ret
loopne
add
add
rol
and
into
or
mov
ds
mov
stc
add
sbbb
pusha
pusha
inc
fistps
adc
add
hlt
mov
lahf
in
movsb
rol
mov
and
mov
in
addb
jmp
int
and
stos
mov
stos
and
popa
addr16
bswap
xor
lahf
dec
testb
jp
call
jl
push
shlb
mov
sub
add
orl
mov
scas
inc
sbb
cld
pushf
and
cmp
inc
loopne
xchg
rol
rol
pop
mov
add
add
add
loop
add
xchg
scas
andb
xchg
pushf
movsl
jle
pusha
pusha
movsl
scas
out
test
call
sbb
inc
mov
pop
or
ficoml
xchg
push
push
adc
and
dec
push
or
loopne
vmovlps
sub
scas
pop
lsl
and
inc
shlb
stc
adc
in
comiss
into
inc
inc
andb
xchg
mov
lcall
inc
loopne
mov
into
sub
xorb
aam
in
cmp
bound
ret
mov
inc
ret
push
insb
sti
movl
inc
fs
inc
sbb
jle
lds
scas
dec
out
jb
add
sbb
pusha
xchg
daa
repnz
sarl
add
inc
adc
cmc
pushl
fists
ficoms
pop
ds
scas
addr16
xorb
jle
sahf
inc
cld
iret
addl
aad
repnz
mov
nop
outsb
xor
test
lods
andb
shl
mov
cmc
pop
idivl
int3
push
shlb
ret
inc
gs
pop
mov
push
loopne
inc
js
inc
sbb
jno
hlt
fwait
loope
jge
add
repnz
mov
add
pop
out
add
repz
mov
sub
mov
mov
mov
add
loopne
daa
and
loopne
out
cmp
and
jbe
loop
cmp
lds
adc
mov
loopne
mov
pop
inc
push
loopne
sbb
add
adcl
rolb
adc
inc
pusha
std
mov
or
js
andb
lea
dec
and
and
lds
inc
cld
jnp
movsb
pusha
and
and
outsb
sbb
mov
add
cmp
and
cmc
xor
cmpsb
rolb
mov
dec
fsts
out
add
mov
cld
out
clc
mov
push
hlt
pop
or
pushl
adc
fdivl
aas
mov
sub
xor
jbe
scas
add
fimull
pop
mov
or
rol
outsb
mov
add
dec
jne
inc
sbb
shl
add
and
jge
dec
loop
add
xor
das
pop
xchg
ds
xchg
sub
loopne
dec
cmpsl
lock
sub
shlb
outsb
mov
pop
pushf
std
in
mov
add
add
add
push
int
push
repz
ds
add
push
rolb
mov
lret
lock
je
lods
add
loopne
mov
mov
pop
hlt
jbe
xor
pusha
add
jg
loope
and
outsb
push
push
jecxz
inc
push
stos
and
push
mov
pop
movsl
das
cmp
push
addb
adc
out
inc
pusha
jo
lret
in
stos
aas
xchg
add
mov
stc
add
add
in
loop
pop
jo
loop
mov
cmpsb
rolb
repnz
flds
mov
mulb
jmp
mov
add
filds
push
sub
test
gs
mov
add
xchg
mov
mov
or
adc
insl
std
and
pop
jecxz
push
test
xchg
out
add
add
or
lret
push
pop
sbb
imul
inc
sub
mov
ja
arpl
ret
mov
mov
sub
inc
mov
clc
jle
flds
setge
add
inc
rcrb
iret
mov
and
mov
cli
movsb
loopne
mov
lret
pop
insl
adcl
cmp
shlb
push
xor
filds
nop
stos
loopne
into
outsl
fs
popa
loope
shlb
sub
inc
inc
int
lods
jp
mov
loopne
mov
inc
mov
jmp
sbb
int
cli
in
jge
pop
jecxz
insb
ljmp
mov
xchg
lret
dec
int3
pop
sbb
mov
add
out
cmpsb
and
lret
ret
pop
aaa
test
iret
push
popa
fs
loopne
sub
rcrl
xchg
rcll
pop
inc
sti
push
pop
jecxz
imul
aad
in
jbe
mov
mov
dec
sbb
cmp
lret
mov
push
adc
push
mov
pop
or
addb
mov
xchg
ja
addb
icebp
bound
mov
cld
arpl
push
enter
out
xchg
mov
iret
test
cmp
jge
mov
out
imul
adc
mov
daa
movsb
inc
pusha
mov
adcb
add
inc
add
cld
jle
mov
scas
popa
ja
test
pusha
sub
movsl
and
mov
cwtl
stc
mov
mov
pusha
outsb
mov
fs
lods
pop
mov
jle
dec
clc
imul
and
mov
shl
sarl
repnz
adc
push
inc
add
add
imul
mov
sbb
adc
ja
xor
fwait
lcall
xchg
fadd
imul
push
pusha
inc
idivl
jecxz
andb
inc
pop
xchg
ret
test
inc
adc
addb
and
mov
sub
or
repnz
add
adc
push
mov
inc
loope
push
push
sbb
jle
clc
popf
or
addl
idivb
xchg
add
fwait
cli
ret
jno
and
jbe
jb
xchg
int
inc
outsb
and
stos
xor
pop
rorb
xchg
add
rcrb
inc
mov
mov
jbe
ss
orb
add
subb
addr16
and
pop
ret
cwtl
aas
jp
dec
mov
jecxz
pop
pop
push
and
add
inc
sbb
add
dec
cmpsb
inc
sbbb
add
mov
das
and
inc
jo
push
mov
push
jg
addb
pop
mov
pusha
pusha
inc
pop
mov
fdiv
adc
dec
xchg
pop
jne
test
and
or
mov
andb
stos
sbb
out
movsb
rolb
rolb
adc
sahf
stos
jl
lret
out
push
bound
movsb
shlb
sub
sti
mov
andb
stos
dec
cmc
in
add
pusha
inc
dec
sbb
std
xchg
scas
adc
pop
ds
and
mov
sbb
arpl
dec
sarl
inc
inc
add
xor
pop
sbb
add
pop
push
fmulp
mov
loop
andb
inc
pusha
pop
ficomps
and
or
or
jle
in
into
out
repnz
jecxz
mov
pusha
and
cwtl
xchg
shrb
add
mov
inc
pop
jnp
loop
addb
addb
insl
icebp
jge
cli
aam
push
sbbb
sub
ficomps
icebp
imul
pop
pop
fcmovnbe
mov
mov
and
add
in
add
add
cmpsl
or
mov
cmp
mov
mov
push
adc
int3
cmp
inc
mov
test
addb
enter
mov
push
je
xchg
cwtl
in
negb
es
add
dec
jmp
cmp
mov
movsl
mov
and
sti
add
in
pop
cli
in
jo
mov
leave
mov
add
add
inc
and
add
rolb
inc
shr
xchg
cmp
sbb
in
fsubrl
jb
dec
imull
addr16
test
pusha
inc
lds
inc
xchg
sub
and
test
xchg
sarl
mov
nop
mov
int3
pop
pop
rclb
test
pop
xor
xor
or
pusha
call
shrb
sbb
inc
add
movsl
shrl
test
cmp
mov
cli
sub
adc
adc
inc
andb
add
pusha
out
and
fstpt
lods
add
xchg
leave
sbb
into
and
jns
mov
sbb
sbb
mov
fnstenv
cld
pop
int
add
dec
xchg
mov
pusha
mov
es
jnp
into
imull
mov
inc
adc
aad
enter
rolb
daa
fistpll
and
add
inc
xchg
das
rorl
jle
or
add
fisubl
push
loopne
mov
xlat
xorl
popa
adc
pusha
cmp
pop
xchg
repnz
add
sub
loopne
mov
call
out
addb
cmp
push
pusha
inc
in
dec
jge
lret
stc
and
shrb
loopne
dec
sbb
pop
or
outsb
mov
pusha
cmp
fs
push
shl
sub
and
test
addb
jle
mov
rcrb
and
in
add
inc
adc
pinsrw
push
add
sub
loopne
test
push
mov
enter
adc
or
test
sbb
scas
addb
jp
add
ds
push
sub
inc
sbb
dec
inc
jnp
lret
into
mov
and
sbb
das
fsubr
xchg
loopne
lcall
mov
loop
add
jns
add
shlb
inc
das
notb
jnp
mov
pusha
inc
lret
icebp
xor
push
loopne
cli
outsl
jo
into
aam
dec
das
xor
jge
les
push
loopne
dec
popa
repnz
mov
scas
enter
or
loopne
sarl
jb
adc
jp
inc
and
data16
pop
mov
pop
repz
push
mov
insb
or
bt
roll
hlt
cmc
in
cmc
inc
loopne
and
adc
add
and
pop
or
jge
sbb
sub
sub
xchg
or
and
xor
out
mov
pusha
loopne
push
and
inc
outsb
lods
dec
scas
andb
push
cld
lahf
cltd
scas
xchg
sbb
sbb
inc
xor
mov
push
dec
cli
adc
inc
inc
outsb
push
or
loopne
jge
add
pop
push
lcall
sar
adc
loopne
mov
and
mov
loopne
fstl
bound
in
inc
xchg
das
outsb
cmp
ficoml
test
pop
ja
mov
sbb
stos
loopne
fcomps
int3
add
js
pop
data16
and
sti
mov
sub
pop
and
sbb
test
sbb
dec
mov
or
add
and
loope
jge
sti
jecxz
mov
and
jno
scas
cltd
mov
push
pusha
fidivrs
cltd
mov
sub
shlb
adc
inc
fbld
dec
movsl
adc
jge
divl
data16
mov
jns
dec
lods
pop
ficompl
dec
mov
jnp
fstpl
and
shlb
ja
loop
inc
jg
push
aaa
test
stos
rolb
pusha
add
addr16
leave
mov
fs
sub
mov
adc
leave
rcrl
inc
push
add
inc
cltd
sbb
and
mov
mov
and
jae
mov
xor
jp
mov
pusha
mov
push
dec
jb
mov
cmpsl
scas
pusha
sbbb
ficoms
shlb
test
bound
aad
loopne
xchg
sbb
pusha
mov
push
xchg
mov
cmp
loop
sub
or
push
inc
mov
rolb
cmp
mov
add
lock
ja
pop
add
les
loopne
jge
call
leavew
shrb
and
icebp
shll
sub
inc
ffreep
and
scas
fcoms
pop
insb
popa
adc
and
jbe
call
cmp
mov
add
fistpll
push
inc
lods
rolb
add
movb
inc
mov
sarb
and
and
push
ja
push
mov
jmp
inc
lahf
sahf
add
xorb
loope
and
sub
pusha
pop
fcomip
pop
std
adc
mov
fucomip
test
rorb
inc
shlb
int
movsl
push
sub
orb
out
mov
iret
fistps
andb
dec
mov
int
pop
push
xor
inc
or
rcl
cli
pop
bound
push
mov
mov
popa
jle
loope
loop
mov
mov
notl
pusha
add
and
data16
mov
xor
and
xchg
pop
xchg
mov
xchg
push
and
stos
loopne
ds
fninit
and
add
pusha
and
sbbb
add
mov
xchg
retw
loope
or
mov
andb
xchg
mov
dec
cmpsl
mov
jbe
inc
sub
addr16
rolb
mov
fisubrl
inc
cli
fs
pop
bound
or
js
push
push
jnp
and
out
repnz
sarb
loopne
pop
leave
mov
adc
test
shl
pop
outsl
pop
xor
sub
xor
xchg
pop
jl
loopne
faddl
mov
jnp
xchg
into
mov
std
scas
shlb
icebp
ljmp
clc
inc
and
inc
stos
pslld
les
jns
jae
je
cld
fistpll
or
flds
xchg
addr16
mov
outsl
lock
jg
arpl
mov
in
adc
scas
add
push
std
call
shlb
cmp
testb
aaa
clc
sbb
stos
rolb
data16
int
add
cwtl
xor
sbb
xchg
rcrb
add
fwait
stc
pop
pop
movsl
out
pop
mov
add
mov
sub
std
sbb
popa
shrl
and
ficoml
jnp
loopne
cmp
ret
stos
add
in
mov
add
and
movsb
add
in
ja
add
mov
pusha
xchg
pop
or
pop
cmpl
xor
cmp
xchg
cmp
mov
icebp
sbb
xchg
in
cltd
loop
repnz
pushf
adc
cmp
shlb
pusha
ss
adc
clc
fsubr
lahf
push
pop
mov
dec
mov
add
add
repnz
ja
les
loopne
and
flds
iret
lret
test
fisubrl
push
and
inc
sub
loopne
loopne
cs
and
jb
cltd
dec
scas
pusha
add
loopne
call
pusha
addb
pusha
pusha
aam
mov
sub
push
fnstsw
in
mov
andb
ss
push
addb
mov
rcl
cmc
out
repz
cmp
lds
jns
inc
mov
scas
add
or
add
inc
jae
shll
cmp
jge
into
test
inc
mov
loopne
mov
mov
stos
and
pusha
add
dec
mov
loopne
pop
and
lods
inc
pusha
sbb
ja
rorb
das
scas
cmp
test
and
or
add
repz
or
jae
inc
outsb
mov
dec
or
inc
and
push
inc
inc
push
popf
push
pusha
loopne
adc
stos
mov
subb
sarb
or
pusha
inc
xchg
xor
int3
shlb
cmp
xchg
add
inc
push
push
xchg
sub
shlb
cli
shll
mov
insl
jecxz
in
ljmp
outsl
or
shlb
ret
cmpsb
mov
push
and
sbb
add
dec
or
xorb
jno
mov
cmp
dec
jne
movsl
repz
xchg
out
dec
pop
imul
lahf
sar
mov
sub
out
inc
loopne
sbb
ds
out
sub
mov
andb
or
and
dec
popf
push
xchg
call
cld
enter
sub
inc
adc
out
testl
add
int
adc
add
and
loopne
mov
pusha
pusha
addb
std
pop
fists
shlb
inc
xchg
dec
call
xor
mov
clc
fwait
test
mov
adc
adc
addr16
mov
jno
inc
mov
in
imul
and
mov
jno
pop
cltd
test
bound
inc
or
pop
mov
pop
in
inc
jp
add
pop
cmp
idivl
loope
xchg
push
pusha
pusha
pop
add
lods
jnp
pusha
add
cmp
mov
and
and
add
nop
pop
outsl
mov
outsl
mov
addb
lock
xchg
cmpsl
pop
loop
lahf
icebp
rorb
std
outsb
in
or
cwtl
pop
mov
shl
stos
ja
dec
fs
insb
test
and
lds
pusha
add
ds
push
int
sbb
nop
push
sub
test
add
or
add
sar
adc
and
pop
or
andb
insb
ljmp
inc
out
dec
shl
sub
fdivrs
and
rolb
mov
clc
out
dec
push
sbb
pop
fisubrs
lret
adc
dec
cmp
push
movsb
mov
push
inc
int3
xchg
adc
iret
xor
int3
lahf
push
shrl
movb
adc
movsb
shlb
subb
and
rol
pusha
pusha
adc
test
jns
mov
inc
fmull
mov
and
bsr
loopne
das
or
fisttpl
loopne
adc
or
adcb
add
cwtl
jle
push
mov
mov
push
sub
subb
leave
pop
cmpsb
and
test
pusha
pop
push
pusha
and
dec
sub
lea
mov
cmp
xlat
hlt
aaa
or
out
ficompl
and
cmp
add
sub
shlb
stos
enter
add
movlps
movsb
add
push
icebp
insl
push
test
push
cs
lods
rolb
pop
mov
sbb
loopne
fldenv
mov
mov
dec
or
jp
push
sub
fbstp
push
inc
mov
out
fcmove
mov
dec
test
out
pusha
and
mov
bound
inc
and
and
jg
mov
push
mov
add
loopne
idiv
dec
xchg
mov
repnz
cmp
or
pop
arpl
aaa
mov
add
shl
mov
or
mov
and
stc
jbe
sti
xlat
inc
bound
adc
mov
mov
push
jmp
std
or
rcrb
int3
fisttpll
pusha
add
inc
rcrb
mov
sub
and
ljmp
aas
pop
int
out
js
push
lds
pusha
imul
xchg
mov
xchg
je
push
pusha
rcrb
and
loopne
imul
daa
out
cmp
popf
mov
js
bound
push
rolb
es
sarb
cmp
or
and
popf
adc
insb
push
cmp
mov
mulb
cmp
pop
in
xor
jecxz
mov
mov
jecxz
push
cmp
idivb
jno
push
mov
test
inc
inc
push
and
mov
enter
xor
mov
int3
jne
in
sbb
fwait
pop
rcr
and
scas
and
jns
std
rorl
cmp
mov
xorb
sbbl
sub
inc
sub
pusha
add
inc
jns
mov
insb
cwtl
sub
pusha
push
sbb
sahf
xor
das
repz
mov
dec
adc
ja
nop
negl
and
and
cmp
test
sbb
xor
jmp
sbb
pop
jns
xor
inc
mov
sahf
mov
mov
sahf
push
cltd
mov
mov
fcoml
jno
fnstcw
shll
pop
lcall
enter
ljmp
filds
and
jo
cltd
inc
push
mov
and
sti
push
into
int
jmp
xlat
sbb
pusha
inc
add
mov
rcll
jo
xchg
sub
loopne
push
cs
loopne
int3
andb
inc
sbb
mov
fstps
sub
movsb
inc
shlb
loopne
xchg
push
and
movsb
loopne
xchg
leave
cmp
mov
and
xchg
fucomp
sti
add
mov
loop
orl
mov
inc
and
rcr
pusha
loop
pop
adc
mov
repz
push
loopne
mov
adc
inc
xor
xor
or
daa
dec
out
test
or
dec
in
in
aas
dec
inc
sbb
into
xor
fdivr
push
pop
sub
andb
mov
and
loopne
int3
dec
mov
into
cmpsl
test
sbb
mov
sbb
loopne
mov
shl
inc
pusha
and
rol
pop
das
pusha
jbe
fsubs
ljmp
add
loopne
mov
loopne
clc
mov
fwait
dec
js
mov
pusha
ljmp
push
sub
and
pusha
orb
pusha
jecxz
mov
jle
outsl
popa
in
mov
clc
jmp
pop
sub
and
add
mov
xchg
jge
pusha
hlt
outsl
pop
rclb
mov
sbb
xor
lock
dec
mov
sbb
aad
cwtl
cwtl
sbb
es
sbbb
out
lods
shlb
sub
fs
mov
sub
add
ror
loopne
stos
rolb
jae
rol
and
sbb
sbb
mov
add
mov
lock
mov
mov
and
and
insb
fists
fcomip
adc
loopne
ret
and
daa
fmuls
fmuls
out
add
stos
aam
pop
inc
aas
push
jo
sbb
and
and
pusha
lret
dec
pop
cwtl
out
sarl
les
not
cmp
aas
lret
sub
pusha
and
mov
js
outsl
in
pop
adc
iret
xchg
pop
or
mov
push
lahf
int3
clc
aaa
int
out
mov
insb
or
adc
add
shlb
gs
add
jmp
mov
and
in
enter
addb
push
bt
mov
sbb
inc
jp
inc
pop
xchg
xchg
cmc
pop
adc
ret
mov
push
pop
inc
dec
inc
add
xor
xchg
or
xlat
mov
mov
in
insl
jns
xor
inc
and
loopne
pusha
inc
jg
loop
sbb
add
jb
rolb
cmpsb
rolb
stos
pop
jb
addb
cld
push
and
push
push
insl
loope
cs
add
dec
in
fcmovbe
cmp
and
int
lret
mov
xorb
xchg
into
and
pusha
cmp
je
inc
loopne
sub
subb
jmp
out
xchg
push
leave
lcall
loopne
test
scas
and
shlb
add
and
mov
out
sub
loopne
aad
shlb
loopne
add
mov
inc
pusha
es
mov
jge
dec
mov
mov
mov
or
out
mov
sub
jmp
rcll
inc
das
adc
dec
sub
dec
stos
jge
addb
scas
inc
addb
shlb
and
jl
push
repz
and
and
loop
xorl
pop
xchg
sbb
cmp
mov
adc
inc
adc
shlb
out
or
das
or
stc
in
daa
cmp
jl
aas
sub
pop
fwait
adc
inc
mov
call
lods
loopne
mov
addb
jns
pop
scas
and
xchg
mov
mov
into
and
decb
cmp
sub
icebp
testl
rcrb
add
sahf
fs
mov
std
lcall
inc
and
notl
mov
gs
sarb
in
andl
shrb
jmp
sub
jae
cmp
int3
add
lahf
dec
xchg
pop
je
and
push
cwtl
ret
loopne
popa
jo
push
and
push
jo
lret
push
sahf
add
insb
jl
es
popa
adc
xlat
and
inc
cmpsb
pusha
mov
add
ljmp
jp
and
stc
in
lods
rolb
addb
add
adcl
mov
lahf
mov
mov
inc
ja
dec
sub
xchg
cwtl
loope
push
xchg
fsubrl
mov
cmpsl
or
and
pusha
pusha
cmc
js
lods
loopne
call
rol
fiaddl
lret
jnp
push
inc
lods
nop
xchg
pop
xor
lahf
inc
sub
add
dec
movsl
and
inc
loopne
aam
imull
ss
ja
mov
andb
inc
ud1
jge
inc
pop
cli
jle
aad
std
aam
cmp
lea
adc
out
and
loopne
addb
jae
repnz
xchg
pop
out
sti
mov
lahf
js
test
pusha
filds
addb
mov
adc
add
imul
mov
add
nop
mov
add
jmp
mov
or
and
lea
dec
das
or
and
add
mov
scas
mov
adc
push
loopne
fnstsw
loopne
andl
push
inc
and
pop
push
loope
std
adc
push
inc
shlb
add
dec
pop
and
loopne
xchg
jb
mov
pusha
stos
pop
pop
ds
cmp
nop
call
ljmp
jae
mov
mov
mov
movl
shrb
daa
filds
and
bound
rcrb
jmp
mov
cmp
and
pusha
xchg
jp
and
ror
cmp
xchg
pop
ret
movsl
xchg
aam
and
and
rolb
xchg
push
mull
or
pusha
push
addb
andb
cmp
lock
aaa
dec
pop
fdiv
arpl
enter
mov
fs
mov
mov
pop
add
pop
jb
mov
and
inc
lret
jae
xchg
xor
mov
xor
or
mov
shll
and
add
xor
shll
add
xchg
pop
mov
or
dec
mov
sub
test
inc
sub
mov
fistpll
or
cmp
mov
mov
fs
mov
mov
mov
rorl
push
addb
loopne
lds
lea
rcrl
in
shlb
outsl
dec
and
loopne
mov
loope
js
jnp
sub
sahf
push
cmp
inc
and
mov
adc
cld
pop
dec
rorl
add
inc
pop
mov
mov
inc
xorb
mov
pushf
andb
jo
shll
cmpsb
loopne
cmpsb
pusha
add
sbb
xor
dec
hlt
push
mov
mov
stc
xor
dec
pop
dec
mov
or
sahf
inc
dec
add
add
mov
daa
inc
push
dec
insb
push
mov
in
xchg
iret
cvtpi2ps
rcr
in
test
jp
sub
pusha
loopne
loop
pop
push
or
arpl
add
add
inc
add
inc
pop
pop
dec
push
and
addb
test
fisubrl
pusha
add
add
xchg
and
sub
rol
lods
mov
add
pop
dec
add
add
dec
mov
movsl
ds
inc
and
fidivs
test
xchg
xor
mov
rclb
imul
sub
push
add
mov
loopne
add
pop
cmp
stc
cmp
push
cmpsl
dec
dec
inc
ss
insl
and
or
imul
xor
jno
addr16
cmp
andb
mov
movsl
out
punpcklwd
pop
cmp
clc
add
out
adc
jge
mov
rclb
adc
andb
adc
cltd
movsb
and
push
xlat
shrl
mov
fcmovne
mov
pusha
mov
testl
addb
les
leave
jmp
lods
jecxz
jl
push
add
pop
push
insb
jecxz
xchg
inc
sarb
dec
fldt
and
scas
add
and
inc
or
add
xchg
cmpsl
pop
pusha
dec
es
inc
fdivr
outsb
imul
cltd
jecxz
jecxz
mul
loopne
andb
or
loopne
add
lahf
xor
test
test
adc
mov
stos
and
sub
mov
inc
inc
cmc
lea
push
repz
push
loopne
sbbl
mov
inc
loopne
int
fidivs
inc
adc
sbb
movsl
cli
pop
dec
dec
push
les
pop
cmp
insl
jl
lea
sub
inc
inc
inc
and
add
imul
cmpsb
mov
repz
mov
pusha
add
in
dec
icebp
add
imul
sbb
imul
or
sub
in
mov
jne
mov
cmpl
insl
push
adc
mov
daa
into
lahf
or
adc
orb
xor
adc
pusha
cmpb
ljmp
ret
in
movsb
inc
add
and
or
mov
shl
cmp
and
lods
addb
shlb
xchg
ret
inc
stos
data16
and
and
inc
add
push
add
push
addb
aaa
pop
les
mov
dec
lock
rcr
pop
mov
push
lret
fs
sbbb
dec
daa
dec
adc
loop
mov
add
in
cwtl
mov
push
nop
or
sahf
sahf
adc
inc
pusha
mov
in
dec
bound
xlat
shll
rcll
pusha
push
ret
and
loop
ljmp
mov
lods
add
fsts
sub
mov
inc
testl
pop
sub
loopne
addr16
jge
mov
push
scas
movsb
and
fs
or
mov
fwait
jne
loopne
cmpsl
mov
jp
loope
andb
mov
popf
push
mov
repnz
mov
xlat
or
mov
pop
inc
aaa
aad
fimuls
loopne
rolb
and
shr
xchg
mov
pusha
fnstenv
lds
and
jbe
jno
in
mov
int3
mov
aad
hlt
cmp
pop
jae
in
loop
dec
mov
dec
pop
cmc
push
pusha
mov
mov
rcrb
ss
push
add
add
xchg
mov
inc
adc
nop
aas
stc
xchg
cmc
sbb
push
jne
arpl
je
mov
call
mov
push
push
pop
inc
fcoms
push
aas
mov
mov
cmp
out
mov
and
mov
push
enter
add
sti
adc
sarb
scas
loopne
jg
aad
popa
push
in
xor
addb
push
dec
or
mov
mov
xchg
adc
mov
scas
jg
cli
mov
and
add
mov
into
lret
adc
mov
pop
stos
int
and
inc
dec
subl
and
and
mov
pusha
rolb
jbe
loopne
dec
mov
shr
imul
lret
insl
mov
mov
adc
sahf
add
fimuls
pusha
mov
jae
mov
sbbb
sub
subb
hlt
in
adc
inc
mov
lods
pusha
add
pop
ja
sub
add
icebp
jo
gs
push
push
aam
and
and
rolb
inc
inc
xor
insb
fs
stos
pusha
add
sub
inc
add
and
outsb
sahf
adc
gs
sub
inc
jle
mov
loopne
ljmp
jge
push
pop
sub
inc
loopne
xor
loopne
adc
cmp
andb
pop
fcomps
repnz
loopne
outsb
ds
std
rclb
add
leave
popa
shr
imul
icebp
nop
int3
ret
jle
mov
andl
mov
orb
jge
inc
mov
rolb
aam
call
dec
xchg
les
fadds
add
es
loopne
lahf
mov
add
inc
fistpll
fdivl
fwait
insl
pop
in
clc
push
and
sbb
daa
push
jno
andb
jne
in
and
call
shl
cmpsl
cmp
shll
inc
push
mov
bound
jno
addb
sbb
inc
jmp
dec
jg
adc
incb
and
jns
pusha
and
jle
push
push
lods
pop
imul
mov
sti
jp
add
inc
add
inc
mov
mov
add
aas
dec
in
pop
fwait
nop
stos
mov
pop
mov
cmpl
out
mov
inc
sub
add
shlb
mov
int3
push
idiv
sar
add
add
out
pop
dec
test
sbb
pop
pop
mov
clc
xchg
ret
pop
enter
adc
add
andb
xchg
inc
lods
inc
inc
mov
rol
popa
add
iret
cld
js
lahf
std
sbb
outsl
testl
ds
jns
cmpsb
mov
leave
push
jo
icebp
shll
add
xchg
lods
push
loopne
mov
mov
insb
push
mov
and
lea
pop
call
mov
test
or
test
shlb
mov
and
fwait
dec
jo
sbb
repz
cli
sbb
add
pop
jmp
andb
out
push
les
adc
mov
test
addr16
mov
loopne
jmp
mov
icebp
clc
cmpsb
inc
shrb
addb
movsb
shlb
mov
and
gs
popw
lea
xchg
mov
arpl
cmp
out
rolb
jecxz
and
inc
je
aam
aaa
aad
or
in
dec
testl
lods
dec
and
xor
add
or
add
pop
daa
aad
addb
cmp
dec
lods
sarl
stos
add
outsb
and
mov
sub
lret
nop
mov
loopne
sub
orb
pop
ss
clc
push
pop
es
rclb
sub
stc
adc
je
push
shlb
cwtl
cmp
pop
or
mov
in
jmp
and
aas
mov
in
sarl
dec
aas
pop
push
jle
mov
sbb
andb
add
scas
addb
cmpsl
nop
fcmovu
push
mov
mov
inc
outsl
js
adc
loopne
inc
and
mov
xor
adc
adc
andb
jecxz
lret
inc
or
mov
enter
sub
mov
push
repz
adc
ss
cmp
pop
xchg
int3
push
rolb
js
pop
cltd
dec
fwait
aam
inc
ja
xor
jo
bound
push
cmp
inc
inc
pop
leave
cld
add
add
cwtl
daa
xchg
sub
loope
jmp
dec
and
and
push
fnsave
sbb
in
shll
xchg
pushf
mov
mov
pop
pop
mov
sub
leave
scas
loopne
inc
in
sbb
mov
jle
icebp
out
add
ret
or
and
rorb
cmp
test
adc
and
and
pusha
pusha
arpl
push
popa
add
cmp
mov
mov
and
inc
stc
pop
addr16
push
cmp
movsb
and
jb
pop
sbb
sub
sbb
out
sbb
dec
lods
cwtl
xor
sub
mov
sbb
movsl
mov
js
and
jge
push
lret
xchg
pusha
and
inc
shlb
adc
xchg
mov
pop
inc
daa
hlt
xlat
dec
daa
add
inc
and
pusha
movsb
add
rorl
jno
adc
imul
pop
mov
xchg
stos
into
jb
cmc
repz
xor
adc
out
inc
xor
rclb
add
cmpb
xchg
lods
dec
fstpl
xor
aad
lcall
call
je
push
into
dec
jne
add
ret
mov
jns
dec
bound
mov
push
pusha
loopne
xchg
jnp
add
test
mov
inc
out
xor
loopne
and
xchg
iret
icebp
jp
and
rclb
stos
addb
out
loop
add
and
push
pop
data16
and
shll
mov
lcall
addb
jb
add
out
lods
pusha
leave
imul
mov
xlat
call
lea
lahf
jae
xchg
jecxz
adc
mov
movsl
int
add
add
test
add
push
je
cli
xor
jb
dec
push
xlat
add
loopne,pt
mov
push
add
sub
sbb
rcrb
xor
adc
xchg
rcr
loopne
inc
xor
add
xorb
xchg
mov
addb
jb
mov
mov
xchg
jns
jb
addb
inc
and
jle
stc
mov
shlb
out
or
inc
inc
sahf
jl
and
mov
inc
sub
pop
in
cmp
jmp
mov
insl
pushl
xlat
inc
sub
and
out
xor
sub
inc
push
mov
adc
jmp
and
shlb
cwtl
je
shlb
int
sub
aam
jne
pusha
addb
cmp
cld
sub
inc
inc
cwtl
movl
lret
movsl
dec
cmp
mov
sar
iret
rorl
inc
and
dec
ja
loopne
pop
add
mov
mov
mov
jl
mov
mov
sub
loopne
lahf
jb
fstpt
mov
aad
and
dec
mov
lea
xchg
sti
cmp
pusha
mov
loopne
shll
and
xor
das
cmp
cmp
std
jae
cmc
jl
mov
sahf
fxch
insb
push
push
push
mov
cmp
jae
and
fsubrs
andb
test
mov
cmp
jg
fs
sub
dec
enter
jecxz
pop
test
mov
in
mov
jo
push
ficomps
cmc
imul
mov
shlb
sub
test
andb
and
and
mov
xchg
test
addb
push
xchg
in
lahf
addb
into
jbe
mov
xchg
jo
mov
dec
xorl
stos
pusha
inc
addl
or
loopne
movsl
loopne
clc
shlb
lods
loopne
pop
push
aas
push
and
stc
aam
ja
insb
jg
andb
loopne
pop
push
ror
addr16
sub
jecxz
fwait
cld
jg
loopne
sub
inc
push
inc
mov
and
in
mov
pusha
mov
sarl
fnsave
or
sarb
push
andb
pop
xor
test
test
inc
mul
test
and
adc
fdivr
jne
sbb
and
add
loop
dec
test
js
shl
push
mov
stos
mov
xchg
and
inc
cmp
loopne
push
icebp
or
push
sbb
mov
rorl
add
enter
mov
add
add
xchg
loop
fcmovnb
daa
jns
out
test
andb
jb
sub
push
ds
test
mov
popf
cmpsb
shlb
fidivrl
repz
out
and
add
test
or
imul
pop
and
inc
leave
jp
mov
xrelease
mov
stc
icebp
sti
mov
aaa
push
pop
cmp
shlb
pop
xchg
ja
dec
mov
mov
cli
mov
mov
movsb
pusha
and
or
fwait
sbb
add
inc
inc
mov
rol
js
inc
pusha
inc
sahf
mov
sbb
arpl
adc
aas
testb
popl
loopne
lods
mov
insl
repnz
add
addb
or
mov
inc
adc
dec
vhsubpd
and
pop
xor
pop
cli
jmp
push
xchg
int3
out
and
shlb
ss
aas
outsb
xor
push
addb
mov
xor
stos
adc
cltd
insl
lods
mov
jecxz
outsl
pop
lahf
movsl
sarb
scas
andb
mov
push
xor
xlat
or
and
mov
and
movzbl
adc
inc
mov
inc
cmp
into
pop
mov
scas
add
mov
inc
ror
inc
shrb
and
shrb
es
and
and
add
mov
dec
adc
into
or
push
sti
stos
mov
pusha
jnp
out
popa
popa
imul
add
repnz
mov
jnp
out
pop
dec
fmuls
and
dec
xchg
aaa
jne
into
lcall
jno
into
imul
test
inc
pop
mov
and
xor
inc
shrb
and
rol
mov
dec
push
std
xor
sbb
scas
and
out
addr16
rorl
lret
and
mov
shlb
inc
xor
pop
rcrl
push
loope
rcl
fidivrs
les
test
shll
pusha
sti
lcall
int3
outsl
and
sbbb
leave
and
mov
mov
and
sti
push
push
mov
ss
jae
sub
or
add
inc
dec
mov
cltd
jp
cmp
hlt
push
pop
dec
stc
stos
addb
inc
fisubrl
jbe
enter
and
imul
mov
mov
cmp
and
out
jb
ror
roll
addb
cmc
inc
jmp
mov
pop
adc
pop
gs
jnp
mov
xchg
jecxz
rolb
xchg
ja
mov
je
add
pusha
js
shlb
jo
pusha
mov
in
into
aad
inc
sarb
dec
push
ja
pop
add
pusha
int
cmp
loopne
ja
mov
sbb
mov
inc
lret
punpcklwd
into
shlb
pusha
fisubs
sarb
in
ret
add
push
adc
and
cmc
jecxz
roll
pop
in
pop
fldl
jle
int3
mov
pop
sahf
ljmp
movsl
repnz
addb
and
lock
inc
and
cli
cltd
cmp
je
mov
xchg
std
jle
fs
and
cli
sub
cmp
cld
aam
shlb
mov
cmp
cmc
mov
loopne
inc
push
inc
inc
push
xchg
out
pop
out
add
add
ret
pusha
pusha
inc
jns
loopne
cmp
inc
inc
shll
orb
outsl
cmpsb
and
or
je
dec
fsubrp
mov
cmp
mov
cmpsl
mov
and
or
enter
cmp
arpl
adc
jno
push
or
and
inc
push
pop
sub
loopne
add
mov
mov
push
out
test
fs
fdivrl
pop
mov
and
imul
or
mov
stos
fcmovnu
adc
jae
jl
je
push
std
sub
loopne
adc
arpl
je
lods
mov
loopne
pop
rorl
mov
jle
mov
sub
inc
jbe
aam
jno
or
pop
gs
xchg
outsb
push
pop
push
loopne
scas
xchg
in
and
sbb
and
clc
adc
dec
arpl
push
mov
pusha
lret
inc
shlb
dec
xlat
cmp
clc
or
inc
jbe
pushf
lock
mov
mov
and
or
jmp
mov
cmp
mov
fnstenv
mov
mov
enter
pop
jmp
mov
mov
rcrl
inc
pusha
inc
mov
dec
cs
add
xchg
inc
andb
rolb
pop
iret
loop
jg
js
shlb
push
pop
and
inc
inc
push
dec
jns
adc
push
push
push
loopne
dec
xchg
fiadds
pop
sub
inc
loopne
ja
add
adc
add
mov
enter
jmp
jb
add
aaa
test
mov
mov
sarb
push
loop
jo
aaa
adc
out
mov
dec
push
mov
inc
add
sti
fld
mov
enter
lods
rolb
sbb
xor
sub
sar
dec
pop
ret
inc
inc
insb
sub
addb
loopne
cmp
aam
sarl
movsb
inc
pusha
cs
loopne
lds
cmp
add
and
testl
lret
fsubrs
hlt
test
loopne
add
pusha
sahf
dec
test
dec
push
shl
shlb
into
popf
mov
cltd
push
cmp
ds
add
mov
inc
add
sbb
jge
lret
inc
add
add
ss
mov
pusha
aaa
jno
rorl
fs
add
testb
idivb
out
into
inc
pop
mov
jne
xlat
and
mov
lea
xchg
addl
rcll
inc
pop
add
rcl
add
pop
pop
lods
inc
add
jg
andb
aaa
insb
xchg
inc
and
cltd
in
cmp
add
ret
adc
sbbb
add
shlb
stc
pop
push
mov
cmp
mov
and
mov
adc
pusha
loopne
jp
push
jbe
test
loopne
cmpsl
and
pusha
jp
imul
and
dec
stos
mov
rcll
inc
fisubrs
or
adc
arpl
and
cmp
orb
and
pusha
loopne
mov
loopne
icebp
sub
mov
add
fsubrp
jg
pop
push
bound
lods
inc
rorb
shll
mov
imul
jno
int3
jnp
xlat
clc
adc
add
fbld
jg
add
js
fs
loopne
mov
jne
and
addl
bound
xchg
or
inc
cmp
nop
outsb
xlat
cmpsl
push
pop
addr16
les
lahf
addb
outsb
mov
nop
xor
out
sbb
inc
lahf
or
add
iret
jb
insb
pop
jo
fcoml
in
dec
into
jb
inc
and
sbb
lock
outsb
jecxz
mov
inc
ljmp
cmp
in
adc
loopne
fsts
loop
mov
fwait
fwait
andb
inc
data16
fisttps
inc
mov
loopne
lret
pop
cwtl
mov
mov
shlb
int
outsb
jmp
dec
mulb
xchg
dec
jge
or
and
mov
imul
icebp
and
insl
clc
andb
stos
ja
loop
popf
imul
rol
out
repnz
mov
adc
pusha
inc
mov
add
and
dec
fs
fnstenv
fisubrs
add
loopne
out
push
sub
push
pop
enter
shl
adc
rcr
mov
loopne,pn
fmuls
xchg
je
rolb
cmp
stos
inc
orb
push
roll
pop
notb
sub
add
vrcpps
and
jns
rolb
and
jle
adc
test
sbb
pusha
loopne
push
and
sub
les
xchg
aas
and
jle
out
divl
mov
insl
stos
outsl
ds
fs
orb
pop
jmp
add
add
sbb
jecxz
das
push
data16
or
in
fldl
shlb
aam
and
dec
add
inc
fsub
or
and
jns
rolb
jl
add
dec
popf
pop
les
xor
xchg
add
daa
xchg
or
lock
cmp
loopne
mov
pusha
insl
cmp
push
mov
add
xor
pop
add
inc
in
mov
lods
inc
loopne
sbb
and
mov
icebp
xchg
jb
sarb
ret
in
mov
mov
dec
push
dec
mov
int3
jmp
sbb
addb
add
aad
jg
cmpsb
inc
and
fs
idivl
popf
pushf
aam
xor
add
push
pop
shrl
cmp
lds
andb
loope
xchg
xlat
jae
cld
mov
pushf
and
mov
xor
leave
rorl
add
ret
xor
jge
push
stos
sub
mov
mov
add
cli
arpl
and
stc
push
imul
adc
rcr
jecxz
rolb
lods
jb
cmc
pop
jge
fnsave
in
test
pusha
fisttpll
sbb
les
and
mov
xor
push
and
cmp
outsl
icebp
sub
pop
out
aas
sti
inc
mov
or
loopne
test
repnz
mov
mov
bound
push
adc
mov
cmp
insl
stos
shl
lret
hlt
xor
inc
or
out
out
ret
pop
mov
cmpl
jnp
negb
andb
push
loopne
xchg
jne
mov
sub
mov
xchg
out
insb
into
iret
adc
pusha
inc
add
shlb
aad
mov
scas
pusha
and
add
xor
pusha
add
mov
pusha
pusha
add
addb
cmpsb
loopne
add
mov
cmc
int
add
and
pusha
mov
jb
pop
push
in
pusha
sbbb
in
inc
pop
push
pushf
ljmp
add
mov
add
inc
xchg
cltd
aaa
test
mov
push
push
hlt
aas
in
and
daa
repnz
cmc
xor
add
inc
inc
xor
andb
andb
mov
push
xchg
mov
insl
subl
pop
rorb
inc
push
xor
dec
pop
sub
cwtl
test
jb
arpl
loop
sbb
add
jb
push
xor
xchg
dec
fisttps
and
loopne
mov
loopne
mov
negb
jo
adc
sahf
mov
adcb
mov
add
rclb
add
pusha
pop
add
iret
pop
aam
inc
inc
int3
shll
test
xchg
mov
and
xor
lods
loopne
xor
aam
or
loopne
jo
dec
das
dec
mov
movsl
sbb
mov
xchg
adc
jle
inc
pop
roll
mov
push
dec
lret
stos
andb
rcr
rolb
dec
popa
fwait
cmp
sbb
cmp
addb
repnz
andb
push
mov
dec
mov
and
push
mov
sar
or
push
xchg
ja
loope
mov
popf
in
mov
in
loopne
mov
loopne
addb
sahf
enter
loopne
sub
loopne
and
and
jae
add
ljmp
xchg
test
cltd
insl
sarb
lret
into
jno
shl
jb
es
sbb
les
and
push
das
inc
daa
mov
mov
test
pop
xor
test
inc
push
loopne
pop
mov
push
iret
testb
cmp
xor
rolb
pop
jmp
out
sti
mov
inc
push
xchg
daa
push
mov
pop
push
inc
push
js
pop
popa
cmpsb
mov
pop
push
aaa
mov
adc
movsl
xor
out
sbb
xchg
sub
loopne
out
and
andb
mov
push
cmp
addb
jle
js
adc
mov
or
pusha
sub
pusha
sub
or
inc
or
ret
or
dec
sub
adc
jbe
stc
dec
cmp
cmp
sub
add
mov
fs
arpl
out
adc
loope
call
loopne
shrl
insb
ljmp
pusha
pushf
loop
inc
mov
add
int
inc
push
mov
loop
and
sub
pop
mov
pop
das
cmp
dec
lock
imul
and
or
rcrl
hlt
popf
mov
inc
sbb
adc
mov
push
push
push
push
pusha
xchg
cmp
xor
and
and
xor
imul
insb
cmp
ja
icebp
mov
call
add
pop
lds
mov
add
repz
stc
std
sti
lods
andb
add
cmc
jle
add
movsb
mov
push
push
push
lods
add
pop
stc
cli
jge
popf
pop
andb
xchg
andb
sub
cli
and
cmp
sub
and
sbb
xor
push
in
sub
icebp
pop
xchg
int3
icebp
push
cwtl
ss
add
loopne
inc
xchg
shlb
and
cmp
pusha
inc
mov
in
mov
mov
lret
add
cwtl
out
sub
lock
les
mov
popa
cmpsl
jle
rcr
or
rolb
imul
and
adcb
cmpsb
andb
movsb
pusha
inc
jno
jg
ret
pop
js
jge
pop
cmp
pusha
mov
loopne
jge
loop
inc
inc
test
out
pop
push
and
icebp
pop
and
or
and
js
pop
jno
test
inc
lahf
jae
or
add
sbb
jle
hlt
les
mov
push
fstpl
leave
push
addb
add
int
push
inc
sub
cmp
xchg
pushl
sub
add
inc
je
hlt
into
pop
in
jbe
inc
add
xor
aaa
hlt
mov
adcl
mov
mov
add
add
adc
sbb
das
gs
xchg
xchg
mov
or
xchg
mov
loopne
adc
inc
xorb
sbb
ret
pusha
loopne
andb
loop
jns
imul
push
cmpsb
add
add
mov
and
adc
and
outsb
hlt
call
rclb
ret
iret
pop
xchg
andb
inc
inc
das
mov
cli
ljmp
std
in
lods
xchg
pusha
mov
addb
fstpt
iret
rclb
sarl
mov
loopne
loop
pop
pop
sbb
std
cmp
jae
pusha
rclb
hlt
repnz
sahf
jge
es
mov
outsb
blsic
cmpsl
jp
xchg
mov
inc
push
cmp
and
mov
rclb
out
jne
dec
sbb
shl
mov
push
imul
pop
pop
cld
sti
std
and
add
scas
rolb
sarb
push
mov
dec
bound
inc
inc
ds
jbe
adc
jl
xchg
movsb
and
test
sub
pusha
or
mov
pop
data16
add
loopne
rolb
loop
pop
aad
lock
push
mov
cmpsl
dec
hlt
enter
xor
arpl
sti
stos
pusha
subb
mov
and
lods
mov
pusha
shr
pusha
push
aaa
ljmp
out
and
test
add
and
sub
jns
mov
mov
cmc
sbb
mov
sub
inc
cli
call
adc
mov
into
out
push
and
loopne
jecxz
gs
addb
and
lret
leave
filds
mov
inc
add
mov
cmp
loopne
dec
pop
sbb
xchg
out
lods
addb
push
in
add
in
lahf
xlat
sbb
loopne
mov
fiaddl
xor
and
push
and
mov
inc
ret
adc
js
repz
popa
mov
and
mov
add
mov
sbb
pop
sbb
xchg
lods
pop
lods
rolb
inc
subb
popf
enter
sub
nop
fstl
nop
loop
loop
or
and
cmpsb
mov
sbb
fcomps
rolb
icebp
jae
ret
mov
push
and
xchg
lret
xchg
rcrb
xor
mov
in
pushf
xor
sarl
andb
cmp
pop
mov
out
adc
xor
mov
fxch
or
loopne
out
push
loop
add
rorb
mov
loopne
stc
es
cmp
mov
lea
and
incl
outsl
sub
mov
add
insl
and
pop
xchg
rcll
mov
rolb
dec
jmp
mov
outsl
mov
inc
inc
cmpl
ret
sbb
pop
and
orb
cld
les
arpl
loopne
mov
mov
pop
sub
rolb
cmpsl
dec
shlb
lods
fwait
push
pop
flds
sti
je
cmp
add
mov
inc
shrl
idiv
push
sub
int3
push
in
jb
add
xor
sbb
jns
shl
imulb
sbb
shrb
ficoml
andb
jns
mov
xorl
mov
pusha
jge
dec
pop
jno
add
adc
sti
sarb
lods
std
mov
pop
pop
adc
xor
aad
lret
shlb
inc
mov
inc
and
and
pusha
add
inc
add
loopne
pop
hlt
mov
outsl
out
movsb
addb
and
repz
sbb
int3
les
mov
add
mov
and
cmp
loopne
sub
or
mov
push
inc
sbb
cwtl
aad
push
pop
push
clc
cli
repnz
sbb
andb
andb
mov
inc
and
add
xor
aad
and
pusha
and
xchg
hlt
and
and
dec
mov
loopne
leave
xchg
sbb
push
add
fsubrl
pop
call
fmull
and
mov
or
mov
mov
pop
dec
push
ljmp
mov
subb
add
loopne
mov
rcrl
push
inc
adc
inc
add
stos
and
addb
sub
scas
adc
mov
add
imul
adc
xchg
loopne
lret
pop
or
cmpb
jne
mov
fwait
clc
pop
pop
mov
xchg
pop
mov
rcrl
lret
int3
jmp
push
fs
cmc
call
xor
xchg
in
fs
jo
shlb
push
adc
fsubl
enter
mov
shrl
sarl
push
push
and
out
fdivl
adc
loopne
jbe
movsb
pusha
shr
fidivrs
ds
xor
ja
add
std
scas
addb
lods
mov
sahf
out
sub
pusha
push
ja
inc
inc
cli
int
das
xchg
in
out
cmp
cmp
mov
add
xor
test
inc
adcb
push
fildll
and
jno
push
inc
mov
inc
push
mov
xchg
mov
loopne
lcall
out
or
inc
into
cmp
inc
add
inc
cli
in
test
loopne
pop
jns
fisttpll
loopne
ret
movsb
and
adc
orb
push
ja
pop
vpsubsb
pusha
je
aam
mov
incb
icebp
test
in
xor
loopne
push
aaa
xchg
add
push
add
leave
xor
cmp
loopne
aaa
insl
in
pusha
ror
or
sub
shlb
dec
fsubp
int
and
shlb
nop
rcrb
lret
push
mov
icebp
das
push
adc
mov
loopne
adc
outsb
pop
mov
andb
andb
cmpsb
loopne
jl
add
add
mov
andb
das
and
and
add
js
out
and
cwtl
push
mov
mov
or
add
dec
es
mov
insl
fimuls
loopne
insb
mov
cmp
xor
add
jecxz
fstps
or
loopne
out
push
push
add
cmp
sahf
imul
lahf
xchg
lods
or
add
cmp
xchg
stc
and
scas
pop
adc
frstor
or
test
and
aas
test
add
std
outsl
dec
rcrl
and
mov
jno
gs
xor
mov
inc
ljmp
mulb
push
lock
push
cwtl
add
jp
pusha
rorb
mov
jae
inc
insb
sub
stos
inc
mov
cmpsb
and
into
sub
fcomps
pusha
inc
or
add
xlat
pusha
out
cmp
sbb
loopne
push
pop
stc
movsl
pop
out
or
inc
lock
int3
aad
adc
loopne
insl
mov
adc
cmpsl
lods
ret
scas
pusha
loopne
push
mov
data16
and
pop
into
repz
loop
cmp
cwtl
bound
ret
shrb
add
inc
out
push
std
imul
cmp
dec
mov
mov
sahf
cmp
stos
shlb
xchg
cmc
pop
adc
xor
jb
daa
push
xor
mov
stos
add
pop
dec
xchg
loope
pop
mov
pusha
repz
mov
cmp
xor
or
push
mov
mov
loope
andb
out
mov
pop
add
pusha
jge
outsb
mov
add
mov
cmpb
jle
and
xor
orb
jle
pop
in
stos
andb
fcmovbe
push
add
dec
push
shrb
rolb
jae
inc
and
pop
js
inc
jmp
dec
mov
or
loopne
pop
mov
cmc
xchg
pop
add
or
add
and
mov
and
and
cwtl
jno
fs
sahf
fcmovu
int3
mov
shlb
and
mov
loopne
rclb
and
iret
xchg
lret
scas
or
int3
lock
mov
leave
cld
cmp
and
pusha
fistpl
movsb
mov
add
test
cli
inc
pop
mov
xor
out
ret
add
idivl
rorb
imul
rcrl
sbb
mov
sahf
out
lcall
fisubrs
pop
mov
add
loopne
arpl
inc
mov
add
in
cmp
jge
mov
add
out
iret
push
jns
xchg
mov
dec
xchg
loopne
jl
cltd
movsl
mov
cmp
pop
xor
popa
ud0
xchg
add
mov
mov
jmp
mov
aas
adc
cltd
or
xchg
jl
mov
sbb
imul
sub
and
add
imul
mov
sub
sbb
pop
cld
push
aas
movsl
cmp
aad
mov
stc
repz
jno
dec
jl
xchg
push
andb
jl
mov
loopne
dec
into
int3
jns
sub
pusha
push
and
loopne
ret
das
or
addb
outsb
jo
rol
push
mov
test
loopne
sub
and
lret
pusha
and
lcall
out
pop
iret
sub
inc
jne
and
and
mov
cmp
add
loopne
or
inc
dec
fs
xor
loopne
pusha
inc
jo
push
ss
cmp
fsubp
mov
stc
sahf
adc
xor
cmp
int3
add
shlb
sub
inc
in
cmc
sahf
add
pusha
sbb
fstp
cltd
imul
pusha
push
shl
mov
mov
push
adc
pop
movsl
and
inc
pop
mov
shlb
andb
mov
push
cli
loope
and
mov
inc
clc
push
or
xchg
and
jecxz
adc
aas
push
mov
pop
lret
scas
dec
loop
loopne
mov
and
addb
inc
rorb
push
and
sub
inc
test
mov
inc
leave
andb
push
add
rolb
out
mov
push
icebp
xlat
aaa
mov
push
mov
push
push
inc
push
sub
jne
stc
or
icebp
xchg
loope
imul
mov
int3
stc
jl
mov
push
and
adc
xchg
pusha
addr16
dec
and
adcb
fsubs
dec
and
jp
pop
loopne
dec
dec
mov
repnz
xor
mov
cmp
sahf
fnsave
sub
loopne
adc
push
negb
sbb
pusha
and
andb
out
orl
and
sbb
inc
mov
push
adc
arpl
or
xor
inc
and
idivb
mov
aaa
outsb
mov
pusha
inc
adc
mov
cmp
inc
popa
dec
arpl
out
ret
xchg
fadd
loopne
mov
mov
and
xor
std
in
test
fcoms
jo
jbe
aas
cld
inc
in
daa
jb
jl
adc
cmp
xlat
push
cmp
andb
mov
ret
les
jle
and
movsb
addb
adc
jg
das
xchg
testb
aad
mov
ficompl
fcompl
ds
xchg
jns
int
jecxz
sbb
jecxz
jecxz
inc
lcall
and
add
outsb
sub
and
dec
popf
and
insl
mov
lret
fstp
dec
or
rolb
sub
inc
or
inc
scas
adc
pop
imul
inc
jno
xor
or
push
nop
fs
js
cld
jno
les
or
and
clc
lret
or
ja
mov
sbb
cmp
cmc
mov
and
loope
fidivrs
jnp
add
mov
sub
sbb
cmc
inc
les
jns
and
mov
and
add
mov
xor
inc
shrb
outsl
sbb
dec
cli
cld
lcall
ja
dec
sub
loopne
in
adc
jmp
pusha
loopne
xor
pop
shrl
inc
xchg
pop
fistps
int
inc
add
sbb
dec
cmp
mov
mov
sub
lret
fcmovnb
loop
dec
shl
jmp
pop
jl
jg
cwtl
lahf
gs
aaa
add
lret
pop
out
jecxz
add
out
addb
inc
mov
popf
clc
xor
pop
jecxz
mov
sarb
andb
mov
loopne
fbstp
and
rcrl
lods
das
jno
add
sub
loopne
js
inc
loopne
mov
out
test
xor
xchg
jne
jbe
xchg
rolb
lds
and
cld
stos
inc
addb
loopne
aas
push
adc
mov
add
or
xchg
and
loopne
or
mov
dec
cmp
inc
shrb
push
imul
mov
and
addb
and
inc
sub
inc
in
or
rcl
and
mov
xor
adc
js
lea
xor
sbb
mov
jle
sti
mov
popa
ror
jnp
push
pusha
inc
out
jb
pusha
pushl
xor
dec
out
adc
push
rolb
inc
push
or
push
outsl
imul
add
and
bound
and
jns
mov
test
pop
pop
fidivl
push
mov
jmp
fsubp
push
add
cmp
loope
inc
cmpsl
pop
xchg
loopne
xchg
pop
push
or
sahf
add
add
pop
mov
lahf
push
addb
lret
shl
loopne
push
add
dec
insb
pushf
stos
rol
mov
or
xorb
mov
inc
xchg
mov
lock
in
repz
lea
pop
shlb
lret
loopne
outsb
pop
sbb
cmp
push
loopne
mov
and
outsl
ds
rorb
sub
adc
cmp
mov
repnz
shlb
cmp
adc
fsubl
xchg
cmp
cmc
jp
adc
adc
cmp
push
jnp
sub
xchg
pusha
inc
xor
adc
stc
jmp
sar
add
jno
flds
shl
add
addb
dec
ret
jg
cmp
pop
sahf
iret
mov
mov
rcr
pusha
add
clc
or
orb
add
pusha
push
or
stos
mov
add
adc
dec
pop
pop
mov
loopne
mov
add
mov
jno
inc
loopne
in
mov
push
xor
sub
add
shlb
ljmp
and
and
push
into
ja
dec
cmc
icebp
xor
jp
aad
repz
pop
call
stos
rcll
outsl
push
pop
mov
test
cwtl
adc
mov
sub
pusha
jmp
mov
test
shlb
popa
out
xor
and
loopne
and
and
jnp
jmp
cmp
mov
push
addb
jb
xor
lret
jae
mov
cmp
jbe
roll
xor
pusha
loopne
push
cltd
ljmp
xchg
sbb
push
jo
xlat
pop
arpl
inc
inc
add
js
adc
push
push
mov
and
or
pusha
arpl
stc
ds
dec
loope
sub
addb
and
inc
inc
mov
pusha
xchg
test
mov
lods
mov
data16
cmp
gs
pop
daa
and
push
cmp
or
loopne
pop
inc
inc
mov
shlb
inc
and
imul
dec
arpl
add
inc
adc
cmp
inc
or
loopne
mov
xlat
and
hlt
inc
movsb
mov
into
fistpl
xchg
mov
push
cli
mov
or
ss
das
mov
push
sbbl
cmpsb
shl
xor
push
out
leave
xchg
je
gs
mov
out
mov
mov
inc
in
jbe
js
test
sbb
dec
int
sti
jbe
filds
dec
stc
sahf
xchg
push
pusha
cmpb
jg
fs
mov
mov
out
jbe
pusha
shlb
mov
cmp
rolb
aam
dec
jnp
in
mov
pusha
and
cltd
repz
mov
adc
loopne
xor
and
sbb
loopne
mull
cld
mov
inc
movsb
rolb
enter
loopne
mov
xchg
cmc
icebp
cmpsb
addb
push
int
dec
insl
xlat
cmp
pushf
clc
aad
xchg
ss
fwait
mov
inc
das
cmpsl
emms
jbe
inc
mov
xchg
add
lret
xchg
jb
and
push
les
or
sub
cmp
inc
cmpl
loopne
movl
sbbb
adc
inc
and
ror
pop
rol
aad
loopne
sbb
mov
or
dec
testb
mov
pop
jge
mov
mov
add
mov
movsb
pusha
add
mov
clc
js
pop
adc
pusha
sti
ja
and
loopne
mov
mov
mov
data16
popa
cmp
cmpsl
lret
xchg
and
rorb
loopne
push
cmp
js
sbb
inc
adc
outsl
xlat
loop
and
sbbb
sbb
pusha
into
es
xor
push
arpl
and
movsb
loopne
push
sbb
add
leave
pusha
pop
scas
and
dec
ret
scas
addb
push
pusha
inc
pop
pop
pop
movsb
loopne
arpl
pusha
dec
mov
cld
fdivrp
lcall
loopne
adcl
call
in
shr
xchg
jge
pusha
dec
pop
mov
std
mov
scas
add
lahf
lds
in
imul
ljmp
sbb
or
and
cmp
push
inc
and
popa
and
or
les
addb
scas
fiaddl
bound
in
fs
sbb
mov
dec
ljmp
out
and
cmpsl
jl
push
sahf
sahf
test
and
fdivr
pushf
lea
outsb
dec
mov
sti
sub
sti
cltd
mov
mov
xchg
mov
lcall
pusha
mov
adc
gs
xchg
and
loop
xor
dec
inc
mov
inc
sub
pusha
inc
loope
std
rorb
sbb
lahf
fsts
jns
jae
insb
mov
pusha
mov
add
inc
into
push
fildll
and
add
xorl
push
add
int3
addb
les
dec
lahf
scas
ss
loop
mov
dec
inc
icebp
mov
in
jno
jl
enter
sbb
addb
add
inc
push
loope
dec
aas
push
mov
push
mov
xor
dec
test
mov
mov
loopne
lods
and
in
mov
inc
loopne
inc
pushl
fwait
pop
in
push
jns
xor
pusha
mov
lahf
out
rolb
pusha
lahf
push
jnp
push
mov
xor
push
or
jle
scas
loopne
dec
adc
fdiv
shrl
inc
cmpb
enter
sarb
outsl
jmp
inc
rorl
repz
in
andl
xor
pop
das
and
orb
mov
push
iret
and
and
int
int3
lahf
add
loopne
popa
add
fs
or
loopne
and
add
in
cmpsb
mov
pop
xor
in
jl
lea
mov
mov
data16
fcmovne
fcmovne
xchg
cmp
and
mov
popf
and
pusha
jne
inc
add
cmc
ret
pop
sbb
pop
jle
cmp
aas
js
scas
add
push
out
push
and
and
inc
push
ss
sbb
cltd
imul
jmp
incl
jno
add
and
mov
sub
loopne
std
loop
shlb
and
add
aad
gs
push
xchg
xchg
mov
ss
fstpt
out
inc
out
inc
mov
rolb
and
roll
xchg
mov
sbb
mov
sub
cmp
mov
inc
pusha
cmp
pop
cmp
mov
popf
rcr
inc
test
mov
js
push
ja
pop
scas
mov
inc
repz
add
call
mov
mov
pop
mov
add
aam
mov
and
inc
jb
add
jmp
add
pop
fucomip
test
fistpll
fsubr
cmp
ss
mov
sub
add
addr16
adc
xor
shrb
and
xor
stos
inc
int
push
push
push
in
adc
push
mov
ret
and
jno
pushl
aas
mov
adc
and
stc
loop
and
imul
loope
xor
notl
fstpl
sub
out
pop
ds
dec
mov
xchg
fisttpll
bound
lock
shl
andb
hlt
addr16
and
test
stos
and
mov
mov
mov
pusha
dec
add
in
aas
lods
mov
pop
cmpsl
xchg
fs
xchg
jo
lods
loopne
dec
ret
jbe
push
jae
jno
and
jae
aad
add
subb
lret
icebp
and
loopne
push
or
scas
xorl
in
in
std
add
add
pusha
xchg
notb
adc
mov
xchg
lods
add
enter
pusha
fists
inc
out
loop
clc
pusha
cmp
test
popf
mov
cmpsb
rolb
mov
inc
xchg
movsb
and
pop
or
pusha
sbb
xor
shlb
inc
add
push
sbb
cmovo
xchg
sub
push
scas
add
push
jmp
out
addb
lahf
mov
pop
lods
mov
pusha
pop
js
fdivrs
cmp
js
xor
jle
mov
add
jl
ja
test
and
add
adc
dec
sub
frstor
sbb
add
addb
mov
sbb
aaa
or
lea
jne
push
pop
dec
in
mov
stc
ret
sbb
dec
dec
push
push
cmp
jl
dec
fisttpl
add
and
xlat
sub
mov
pusha
andb
sbb
pop
shll
in
adc
mov
jl
sbb
pushl
push
jg
dec
cmc
mov
add
add
add
add
cmpsb
and
inc
cmc
pop
cmpsl
inc
adc
jbe
js
sub
pop
out
add
loopne
lcall
std
idivl
pusha
pusha
push
cmp
jae
add
xor
cmp
int
int3
mov
mov
test
dec
in
in
test
js
and
inc
mov
popl
addr16
xor
sub
xlat
inc
fnstsw
jns
jle
imul
or
dec
leave
push
andb
std
and
mov
add
loop
pop
out
mov
out
das
jge
sbb
xchg
pop
shll
and
pop
sbb
fwait
jmp
sbb
bound
in
adc
sub
mov
xor
sbb
and
movl
xchg
aad
dec
fs
mov
cmp
cmp
mov
xor
add
shrb
xchg
xchg
test
mov
outsl
push
mov
xchg
addr16
in
lods
nop
xor
push
lret
lcall
cmp
push
in
jge
mov
mov
andb
cmpsb
inc
add
rolb
mov
pop
add
or
in
pop
mov
or
pusha
and
fadd
mov
je
xor
add
jae
in
jb
popf
shrb
add
andb
popa
or
ss
cs
pusha
mov
xor
pop
inc
xor
loopne
xor
adc
fmul
push
and
and
mov
pusha
cmp
imul
fisubl
mov
je
xor
adc
in
std
add
add
mov
jge
inc
rclb
andb
fldcw
imul
dec
cmp
test
cmpsl
jp
lods
decl
xor
and
rolb
or
push
inc
mov
add
mov
inc
xchg
lea
mov
mov
xchg
shlb
sbb
insl
mov
mov
aad
pop
stc
insl
sbbl
shlb
mov
push
inc
lock
loope
adc
loope
aad
hlt
test
in
test
add
mov
loopne
jno
mov
cwtl
sbb
cmp
cwtl
mov
fnstsw
mov
fyl2x
push
lods
loopne
lods
shl
pop
sbb
loopne,pn
lahf
cmp
mov
push
.byte
outsb
add
