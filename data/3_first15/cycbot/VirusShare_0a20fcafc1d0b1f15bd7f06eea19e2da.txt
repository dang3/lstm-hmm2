addl
add
add
mov
inc
add
addb
add
add
pusha
add
inc
add
adc
add
and
adc
sub
and
and
add
add
adc
adc
addb
add
addb
adc
or
add
add
add
nop
add
add
add
adc
add
add
add
xchg
add
or
add
add
add
test
add
add
add
add
add
or
add
inc
push
add
rorb
add
add
or
addl
or
add
mov
inc
test
add
add
andb
add
add
add
or
inc
add
add
add
add
add
inc
inc
adc
xchg
add
add
or
add
inc
add
add
add
adc
add
add
nop
add
add
add
sub
mov
or
add
addl
andb
inc
add
sbbb
mov
cs
ss
dec
ds
jbe
xor
cmp
fs
ss
std
adc
aas
cwtl
rorb
jle
rorl
stos
push
aad
rclb
or
pusha
rclb
mov
mov
lock
mov
mov
fdiv
dec
xor
insb
aas
aas
aam
shl
pushl
dec
shlb
aas
sbb
dec
xchg
std
ljmp
shlb
cmc
ja
aas
int3
jmp
lret
dec
or
dec
sti
imulb
cwtl
and
jl
bound
push
or
imul
sub
outsl
mov
sub
or
cmc
fiadds
lock
rcrl
enter
or
lret
aas
sbb
icebp
xor
dec
adc
push
jne
inc
sub
add
add
xchg
dec
icebp
pop
test
mov
sub
mov
shl
cld
jl
cmp
repz
insl
jmp
in
add
dec
add
fcompl
and
add
sub
outsb
out
jl
rorb
dec
sub
xor
fimuls
insb
jno
xchg
dec
ds
pop
xor
lcall
jae
lcall
xor
clc
ds
aas
xor
call
sub
enter
push
adc
lcall
sub
mov
sbb
mov
stc
jl
aas
pusha
dec
decl
or
add
call
inc
out
sti
cmp
imul
jo
rcl
popa
clc
cmpsl
xor
push
ljmp
out
cmp
xor
inc
pop
inc
fistpl
add
nop
aaa
ss
sbb
outsb
mov
fdiv
dec
xor
sub
aas
in
fiadds
movsb
ds
cli
sbb
jmp
aas
pusha
cld
dec
scas
sti
ds
cltd
or
adc
ds
push
xchg
fcmove
jg
pop
mov
or
pusha
pop
insb
fadds
sbb
add
jno
push
andb
ret
enter
push
xchg
lret
icebp
add
xor
jo
ds
mov
movsb
pop
adc
add
ds
mov
add
ds
mov
add
pusha
add
out
cltd
inc
call
idiv
mov
inc
pusha
add
ret
sub
aas
mov
pop
add
mov
mov
cmp
call
idiv
lock
cs
out
push
push
add
sub
rolb
es
inc
cwtl
inc
mov
add
imul
rcl
sbb
push
insb
adc
fisubs
adc
ret
and
ret
sub
adc
faddp
push
rcl
push
pop
shl
and
lock
cwtl
jo
pushl
xor
push
ror
adc
add
or
xor
cltd
xor
lock
outsb
int3
add
dec
jo
rclb
add
aas
lock
rcl
jno
aas
add
ficoms
repnz
addr16
repnz
pop
jle
cmpsl
cmp
rorb
add
dec
dec
movsl
pop
pop
cmp
add
adc
cs
sub
mov
xor
popa
sub
fidivs
hlt
sub
or
mov
add
jmp
in
repz
incb
shlb
add
or
xorb
push
push
shl
ficoms
shrb
mov
rcpps
xor
repnz
xor
std
add
das
repz
fdivrp
aas
cmp
dec
rolb
fdivr
lock
pusha
mov
dec
movsl
dec
gs
outsl
pop
std
add
loopne
sti
out
incl
ja
xor
fdivrp
aas
cmp
cmp
cld
call
adc
aas
lock
shlb
nop
aas
add
ficoms
repnz
enter
repnz
pop
jp
incb
sahf
sub
add
or
xchg
rol
sbb
mov
sbb
fisubs
shll
and
aas
xor
sub
add
into
adc
and
sub
aam
xchg
jle
sub
cld
add
add
adc
call
cmp
iret
rcr
pop
shrl
sbb
sar
cs
pushf
sub
sahf
inc
rcr
sbb
lret
fisttpl
fisttps
aas
cld
push
out
and
and
cmpb
std
decl
mov
fdiv
pop
push
push
imul
push
xchg
dec
push
addr16
cmp
fcomi
clc
stc
sbb
fmul
out
pop
pop
les
stc
pop
scas
sahf
aam
pop
pop
xor
ds
and
inc
ret
bound
inc
pop
test
inc
scas
repnz
lret
sbb
iret
xlat
outsl
jmp
nop
ret
push
popf
sub
sarl
je
cmpsb
jecxz
pop
fnstsw
mov
fdiv
into
push
add
pop
mov
dec
seta
cmp
pop
lahf
out
popa
filds
pop
ljmp
mov
mov
xor
cmp
mov
popa
ficompl
or
aaa
out
leave
sarl
pop
daa
shl
nop
das
in
daa
jmp
and
testb
sti
mov
xchg
das
nop
das
aaa
in
shrb
xor
mov
push
fdivrs
ucomiss
insl
pop
mov
movsl
imulb
inc
das
insl
and
cli
sbb
jg
jp
outsb
pop
fldcw
xchg
push
lea
js
mov
cmp
xor
bound
lds
cmpsl
fildl
xor
std
jl
mov
clc
and
notb
mov
cli
dec
inc
xor
pop
pop
push
sti
repz
arpl
pop
sub
sti
pushl
fnsave
in
int
mov
std
btr
pop
push
lods
hlt
pop
jnp
fcomp
daa
out
mov
or
out
and
mov
cld
inc
or
add
fisubs
dec
ret
pop
int3
and
xor
into
mov
xchg
inc
lods
lret
movsb
enter
shl
cmp
repnz
out
jg
cmp
mov
inc
les
popf
aas
call
cmp
add
push
in
push
fisubrl
into
insl
rcrb
jne
cld
jg
xor
es
pushf
test
rorb
outsl
insl
sub
sbb
sbb
out
xor
dec
push
out
in
ret
stos
adc
lcall
jle
btr
out
xchg
or
sbb
clc
shrb
add
xor
push
lock
lret
and
pop
enter
mov
and
fdivrp
dec
shl
pop
xor
ret
out
fdivrl
repnz
fcompp
fisttpl
ljmp
sbb
stos
fisubs
jp
adc
iret
or
sti
aas
xlat
stc
sub
fstps
sub
lcall
fstp
pop
jmp
mov
jno
stos
outsl
pop
xor
xchg
in
xlat
into
stos
out
mov
arpl
rcrl
jno
mov
push
pop
mov
imul
pop
aad
sahf
sbb
ljmp
leave
xor
jg
push
sub
mov
sti
insb
or
sbb
shlb
jecxz
fwait
add
push
xor
adc
ljmp
or
xchg
sub
dec
cmp
sub
cltd
hlt
sub
pusha
cld
xchg
dec
cmp
repnz
pop
in
das
add
push
mov
pop
shlb
push
mov
jle
xchg
cmp
jbe
fildll
mov
loopne
sub
jmp
lret
fistl
push
fcomp
xor
insl
jb
aam
cwtl
mov
jge
push
insl
fsubrl
pop
push
outsb
fisttpll
mov
test
mov
mov
sub
push
add
iret
mov
jecxz
aas
icebp
lretw
jno
xchg
sti
add
icebp
mov
xor
xor
adc
cwtl
jnp
arpl
sub
ror
aaa
xor
ret
mov
ljmp
push
je
repz
mov
fisubl
test
mov
aas
bound
addr16
mov
into
fisttpll
lods
mov
dec
jmp
daa
lcall
mov
testl
addr16
or
jnp
movsl
sbb
arpl
in
mov
pop
aas
xlat
scas
and
insl
cs
out
repnz
sub
xor
push
jae
cmp
jecxz
xchg
pop
into
stos
sahf
call
call
cmp
cmc
pop
pop
rcll
sbb
aam
outsb
xor
mov
fcomip
gs
out
das
mov
jns
popf
cmp
xchg
adc
repz
mov
loope
mov
hlt
fdiv
insb
bound
in
repnz
lods
xlat
mov
push
jecxz
fistpl
mov
fdivp
adc
imul
push
xchg
cmp
mov
data16
add
outsl
mov
cwtl
enter
cmp
push
mov
sbb
fstps
and
or
fld
incl
mov
push
lea
das
mov
fsubrl
int3
mov
call
scas
divb
lods
int
mov
push
movsb
cmp
jg
cwtl
push
and
jle
jle
rclb
push
sahf
aaa
aam
jge
sti
outsb
scas
sti
imul
jle
push
repz
jg
daa
pop
and
mov
sbbl
clc
divl
jno
mov
xor
leave
out
fimuls
aam
test
in
jo
jae
jae
sbb
lods
stos
sub
ljmp
lret
rcrb
fnstcw
outsl
mov
inc
mov
mov
dec
mov
mov
js
xor
out
mov
rorl
lahf
out
lds
and
cmp
cmc
out
gs
xchg
lcall
in
lods
pop
fstl
adc
negl
orb
pop
jge
negb
xchg
jg
test
cld
adc
jge
lods
addr16
faddl
ret
xchg
out
sub
cmc
mov
out
jne
jae
sub
cmp
pop
outsb
lea
out
xlat
pop
push
adc
dec
aas
xlat
rcrl
scas
je
ret
aas
dec
pop
data16
das
aad
scas
test
data16
push
cmp
idivl
addr16
frstor
scas
pop
out
fdivr
loopne
jnp,pn
fcom
pop
xchg
loop
fistl
xor
pop
cwtl
fnstsw
mov
pushl
xor
mov
movsl
clc
sbb
mov
mov
cmp
push
mov
xchg
hlt
or
ljmp
repz
jge
mov
into
stos
popf
pop
jae
lea
cmpsl
lea
scas
cmp
pop
lret
out
rcl
mov
das
cs
xchg
cmp
sub
repnz
inc
jle
pop
les
jns
les
loopne
shll
pop
fisubs
adc
mov
cmpsb
cmc
xchg
cmp
fdivl
cmp
out
rorb
xchg
xlat
jmp
pop
jecxz
sub
sti
or
fiaddl
adc
adc
fcoml
push
fsubl
rcll
call
lods
pop
adc
xchg
popf
sub
mov
xchg
insb
ljmp
inc
inc
sbb
in
lahf
cmp
mov
cli
addr16
mov
pushl
sbb
sbb
xchg
xchg
insb
lock
call
imul
stos
xchg
fdivrs
add
and
cmp
in
ss
fldl2e
adcl
test
out
pop
insl
lods
jo
pop
lcall
aad
or
and
mov
lahf
mov
fucomip
pop
and
jo
sbb
ljmp
xchg
outsb
jbe
rorl
mov
push
outsl
jg
fimull
cmpsl
inc
je
sahf
xor
pop
lods
mov
push
mov
mov
mov
sub
and
mov
jnp
scas
sti
addr16
bound
or
jl
pop
dec
pop
lret
mov
stos
test
rolb
pushf
xlat
int
fisubrs
out
out
imul
push
push
int3
stos
pop
scas
push
out
pop
test
test
mov
outsl
sti
imul
and
add
or
sbb
imul
dec
mov
jns
sbb
cmpsl
jl
sar
orb
pop
mov
ja
ja
cld
push
xor
mov
out
pop
mov
mov
jge
sub
fnsave
inc
jge
fimuls
outsl
insl
dec
dec
lock
sbb
push
jae
fisubs
jl
enter
pop
fucomi
jecxz
rcrl
jle
out
adc
adc
pop
into
jle
jp
mov
pop
inc
xor
push
in
mov
iret
mov
push
aas
cli
outsl
fcoml
push
push
mov
mov
jns
jo
dec
fisttpll
in
add
outsb
aam
ret
xlat
pop
push
dec
add
jmp
filds
test
xchg
mov
push
jnp
jb
addr16
stos
in
out
int3
jno
in
movsb
cmpsl
fdivp
push
daa
jl
inc
jg
decl
push
out
scas
cmp
pop
jp
cmpsl
mov
dec
jns
lds
test
neg
movsl
jg
repz
mov
into
inc
jbe
lock
dec
add
addl
ja
mov
cmp
xlat
sub
insb
mov
mov
ja
fidivs
sub
adc
fwait
jle
fwait
popa
pushf
add
sub
inc
mov
dec
daa
icebp
xor
xchg
jg
xorb
pop
xlat
insl
repnz
in
push
xor
pavgb
push
dec
push
aam
cli
sti
sbb
ljmp
cmp
rclb
mov
pop
cmpsl
dec
je
pop
pop
pop
cli
cmpsl
push
fcomip
mov
inc
adc
jmp
push
jne
xchg
call
movsb
sub
push
lret
shrl
pop
jns
mul
fldz
jl
cmpsb
lahf
lret
bsr
stc
xlat
jne
ljmp
sub
lret
aad
adcl
lcall
inc
enter
cltd
xchg
jp
and
mov
int3
adc
push
push
fimuls
pop
aas
cmp
sub
aam
fbstp
out
jge
sub
mov
loope
pop
inc
imul
test
icebp
les
scas
inc
jl
sub
or
mov
leave
mov
sub
mov
mov
xchg
aas
mov
or
lahf
or
mov
cmpsb
cmc
aas
std
push
pop
mov
mov
mov
lahf
scas
cmp
stc
repz
cwtl
ds
xchg
dec
push
mov
sti
out
xchg
xlat
lcall
outsb
lods
push
sub
jge
add
clc
mov
lods
idivl
cs
fdivp
cld
sti
fdivrl
cmp
out
xor
iret
in
mov
fldl
dec
push
sbb
outsb
dec
lret
pushl
xor
jge
imul
mov
jle
sub
fsubrl
add
and
outsb
sbb
or
or
cmpsb
in
lock
push
or
pop
lahf
rcr
imul
jno
xlat
fwait
and
adc
in
mov
push
adc
mov
add
pushf
cmp
ret
ja
aas
cmp
jbe
mov
push
loop
sbb
add
cli
cltd
pop
ss
pop
sbb
out
add
fwait
push
pop
imul
cmpsl
js
push
mov
mov
sahf
jnp
sti
repz
rol
cs
aad
jbe,pn
mov
ret
mov
push
sti
dec
add
scas
pop
mov
xchg
fimuls
mov
or
pop
lahf
cmpb
into
dec
jle
in
mov
inc
daa
push
push
xor
lds
jbe
cld
mov
add
pop
mov
in
mov
ficoms
call
mulb
lock
mov
sub
stos
mov
mov
adc
jbe
jmp
cmpsl
cld
push
xchg
dec
and
jnp
jg
fildl
enter
mov
and
mov
jo
test
pusha
outsl
cs
mov
mov
add
adc
xchg
outsl
pop
xor
dec
fsubrl
or
out
mov
int3
and
out
add
inc
dec
push
mov
shl
pop
aas
aas
push
js
fistpl
lods
xor
pop
test
ja
ficomps
pop
rcll
out
aad
xchg
fwait
movb
cmp
add
sub
sbb
mov
mov
pop
mov
pop
sub
jl
insl
sti
jne
inc
jno
mov
add
jns
or
mov
js
fnstcw
loop
pushf
out
pop
sbb
push
jge
in
sub
xor
add
pop
xchg
popf
das
jle
bound
sahf
mov
ret
lahf
mov
loopne
xchg
xchg
pop
outsb
in
xchg
dec
xchg
and
sbb
cwtl
cmpsl
cld
push
cwtl
cli
cs
loopne
jecxz
mov
mov
jp
cmc
inc
je
or
aad
jge
add
mov
add
mov
cli
std
mov
dec
add
daa
fistl
adc
out
mov
mov
mov
stos
jae
ss
aad
gs
mov
push
mov
std
xchg
mov
insb
jle
shlb
jmp
cmc
cmp
xchg
fs
pop
int
sti
pop
into
cwtl
pop
adc
dec
lock
in
dec
aam
mov
mov
cmpsl
fists
js
jecxz
sub
cmp
xor
cmp
add
or
stc
push
mov
les
jae
pop
jmp
pushl
add
lcall
lods
lahf
and
lods
fs
loopnew
pusha
xchg
repz
sbb
mov
cmp
mov
scas
pop
js
fimuls
push
sbb
add
push
mov
lahf
das
dec
push
fs
enter
dec
mov
mov
inc
syscall
aad
outsb
ss
push
sarl
aas
sarl
in
mov
xchg
outsb
xchg
in
mov
mov
push
mov
out
pop
mov
and
mov
pop
pop
mov
mull
pop
dec
fisttps
dec
add
int3
mov
outsl
push
popa
fists
pop
scas
test
mov
lods
out
js
mov
push
mov
jnp
outsb
xchg
aad
fcompl
lock
push
push
lock
or
mov
mov
mov
xchg
cmp
cmovb
adc
xlat
cmc
fistl
out
std
xchg
mov
lahf
inc
sub
loope
out
dec
jns
sub
lods
cwtl
cmc
fstpl
les
lea
jmp
scas
in
and
subb
inc
mov
cltd
pushf
mov
inc
sbb
enter
jg
sarb
sub
fwait
mov
adc
mov
mov
sahf
cs
cmpsb
scas
mov
pop
stos
xchg
fisubrs
jns
mov
pushf
aas
insl
ljmp
out
outsl
cmp
jnp
pop
pop
mov
pop
cli
jnp
outsb
ds
cwtl
pop
push
mov
mov
idivl
sub
jmp
imul
mov
in
pusha
push
cmp
jg
or
insl
insl
mov
int3
ljmp
jp
imulb
ljmp
push
in
cli
xchg
lods
add
sub
mov
aad
adc
enter
iret
add
sbb
iret
pop
adc
outsb
ja
and
outsl
gs
xchg
jp
js
dec
sub
lea
pop
scas
sbb
pop
sbb
iret
repnz
jb
jg
scas
lock
js
mov
scas
fsts
inc
loope
xchg
mov
push
clc
movsl
add
lock
sbb
xchg
push
stos
fistpll
gs
das
and
rcrl
pop
cmp
mov
cs
xchg
dec
cmp
mov
mov
dec
sbb
push
sbb
jp
inc
mov
es
add
pop
hlt
icebp
bnd
xor
adc
and
cmp
cmp
push
pop
cmc
das
lds
mov
test
and
mov
hlt
mov
mov
sti
xchg
das
xchg
jl
push
sbb
aam
sub
lahf
dec
jl
mov
aaa
xchg
addl
icebp
mov
push
stos
dec
out
fcmovu
mov
jle
outsb
inc
cld
mov
iret
xor
stos
aas
jle
inc
xchg
xorl
stc
dec
sub
loope
orb
aas
xchg
push
jp
push
cmc
es
int
dec
jne
and
cli
mov
pop
xchg
pop
out
scas
add
xlat
pop
mov
or
mov
sub
jmp
mov
fnsave
inc
jg
sub
addr16
pop
rolb
sbb
lods
in
sbbl
xor
mov
dec
mov
fadd
cmc
ret
sbb
std
inc
outsl
sub
push
int3
fmull
adcl
shrl
ficoml
cmpsl
jnp
stc
push
sbb
into
sbb
jbe
imull
mov
clc
ss
cld
xchg
rep
adc
jmp
jg
inc
cmpsl
and
int3
ds
inc
mov
ds
adc
push
insb
repz
sbb
lcall
dec
mov
pop
push
idivb
js
adc
push
or
or
and
pop
cmp
clc
jp
in
scas
jne
aaa
jg
cli
ret
sub
or
sub
adc
ret
aam
fildll
jecxz
push
and
js
push
shll
ffree
ret
pop
lahf
fwait
je
loopne
jmp
or
outsl
test
jns
ret
dec
push
add
fbld
xor
pop
outsb
fistpll
mov
ficomps
into
adc
in
xor
cmp
add
mov
leave
inc
cmp
aad
cli
insl
xchg
pop
add
and
imul
add
das
mov
cmc
ljmp
sub
out
xchg
cld
mov
dec
sbb
push
aas
xlat
inc
cld
adc
mov
push
cmp
in
and
adc
sti
push
out
dec
xor
je
pop
out
mov
sub
daa
ljmp
adc
pushf
in
pusha
test
imul
add
push
aaa
push
mov
mov
sub
jnp
shlb
divl
iret
imul
mov
fistpll
mov
sub
jne
int
mov
pop
comiss
jle
incl
jge
fwait
adc
mov
xor
sbb
aam
scas
pop
and
xorb
out
mov
je
aaa
rorl
mov
std
daa
add
push
iret
mov
fcoms
mov
dec
dec
xor
adc
sub
frstor
inc
push
out
hlt
push
cmp
jge
push
out
fsub
xor
iret
push
pop
hlt
stc
sub
in
loope
fistl
mulb
lds
aas
adc
out
lret
fs
sbb
call
repnz
cmp
aad
ss
sub
sbb
xlat
sub
jg
xchg
cmp
xchg
les
shll
aaa
hlt
inc
mov
push
lret
lahf
adc
jp
aas
test
cmp
repnz
and
dec
scas
mov
pop
fimuls
xor
loope
push
xlat
scas
jnp
sbb
mov
fistpll
stos
nop
les
cmc
outsl
sbb
dec
mov
fadds
jge
lret
xchg
inc
pop
lahf
pushl
jl
push
cmp
jle
scas
xlat
pop
fistps
inc
jp
or
out
in
divl
ljmp
mov
ds
cmp
imul
sbb
into
sub
outsb
jmp
jp
mov
add
cwtl
pop
aaa
aad
das
out
sti
sbb
dec
lret
das
nop
out
xor
xorb
ljmp
insl
das
mov
in
loop
lahf
das
jmp
in
sbb
jp
mov
dec
xor
and
outsl
dec
call
jle
dec
sti
insw
ret
arpl
xor
rolb
ret
xchg
pop
scas
out
dec
mov
sbbb
adc
and
aas
pop
outsb
dec
dec
push
sahf
imul
fnstenv
repz
jbe
adc
xor
push
sbb
fs
lods
stos
out
setb
inc
aas
jae
sbb
xor
sti
je
adc
icebp
sub
das
ret
xchg
xchg
lds
out
pop
dec
rcrb
lock
or
fstl
push
nop
stos
and
sti
adc
outsb
mov
les
test
pop
push
int3
in
dec
add
xchg
inc
leave
adcb
fistpl
mov
pop
lahf
sbb
or
and
xlat
jb
push
int
fcmovnu
mov
adc
outsb
outsl
jge
mov
ficompl
in
adc
repz
sahf
daa
sahf
fcomps
add
pop
stc
imul
and
cmp
cmp
and
or
cs
dec
sahf
das
inc
xchg
adc
mov
xchg
mov
loopw
mov
scas
inc
pop
lods
mov
mov
cmp
pop
mov
call
inc
ror
jmp
andb
xchg
lcall
jle
insl
fwait
mov
and
out
jmp
mov
mov
movsb
mov
pop
push
daa
pushf
outsb
lcall
jg
cmp
mov
idivl
lcall
out
and
addl
lods
sahf
xor
enter
pop
test
jecxz
and
sti
fs
cmp
arpl
call
adc
daa
or
scas
std
sbbb
xor
xor
fcmovnbe
sub
dec
scas
je
mov
xchg
scas
repz
icebp
push
out
push
jae
out
loope
idivl
xchg
sub
mov
out
int
fmulp
mov
adc
ret
sub
adc
aad
dec
sbb
pop
cmp
fcmovu
scas
stos
pop
jge
imulb
fadds
lret
xchg
sub
rcll
mov
cwtl
sbb
adc
pop
dec
sbb
fdivrs
scas
fwait
lods
ret
dec
mov
repnz
jne
mov
sub
xchg
lock
mov
sti
jae
stos
fwait
sbb
arpl
xchg
xchg
dec
pop
test
cltd
outsl
ljmp
xchg
fwait
imul
mov
notb
fldt
idivb
ret
call
mov
flds
adcl
lods
test
jmp
mov
clc
push
mov
mov
mov
cmc
xchg
adcb
adc
stc
cmpsl
ljmp
xchg
ficoms
xlat
loopne
mov
jle
mull
leave
icebp
xor
jmp
mov
leave
pop
rcl
pop
mov
mov
int
aad
pop
out
sub
fucomip
iret
jbe
scas
jno
lods
aam
or
sbb
lret
call
push
jo
stos
shll
xchg
in
xor
sbb
jno
add
lcall
or
push
outsl
cmpsb
and
cwtl
push
scas
cs
jbe
popa
sahf
mov
mov
inc
outsl
cmp
int
ret
mov
mov
jg
pop
mov
ss
mov
push
stos
and
popa
out
and
jnp
pop
push
aam
mov
lret
scas
add
pop
pop
jl
mov
in
call
jg
dec
push
filds
jge
and
scas
xchg
movsl
cld
pop
insb
jnp
int3
mov
push
fnstenv
shrl
lock
push
sbb
xchg
and
or
jbe
std
mov
xor
out
push
rorb
sub
mov
xchg
mov
pop
xor
inc
jg
jg
iret
bnd
sub
in
push
xchg
into
adc
movsl
cmpsl
xchg
stos
pop
jmp
ljmp
inc
les
lahf
cmp
loopne
rclb
push
cwtl
or
xchg
js
lcall
rcr
sub
sahf
jne
jmp
stos
cli
loope
cmpsb
insl
repz
mov
das
fdivrl
fs
sbb
fistpll
pop
lods
jmp
xchg
lret
std
xor
jmp
fsubr
aas
and
lret
jg
iret
mov
out
pushl
xchg
rcrl
mov
mov
aam
pop
out
pop
divl
and
mov
cmp
add
pop
push
pop
push
sub
out
andl
pop
and
je
cmp
inc
lahf
cmpsb
push
divb
sbb
into
adc
ljmp
pop
popf
jp
test
out
xor
cmp
jns
push
std
addr16
mov
frstor
pop
popa
lahf
push
aaa
dec
cld
enter
xor
fdivp
add
test
inc
cmc
mov
and
dec
sbb
inc
shll
outsl
addb
xchg
jnp
fcmovne
fsub
mov
out
fisubrs
jle
cs
ret
pop
pop
mov
mov
cmp
std
pop
fnstsw
lea
sub
add
cmp
stos
lcall
lcall
mov
jg
pop
bound
push
test
call
cmp
lods
fdivr
jnp
jmp
mov
data16
ss
fs
imul
add
fldl
insl
test
lahf
pushl
and
dec
push
lret
testb
loope
mov
dec
mov
insl
aas
fincstp
and
mov
mov
hlt
cmp
xor
adcb
and
mov
jne
shl
cld
lahf
vpcomd
xchg
call
lds
jmp
jle
out
inc
out
adc
pushf
dec
sbb
ja
cmc
inc
in
test
je
pop
mov
iret
cltd
jg
push
jnp
push
or
push
sbbb
sahf
sbb
and
add
mov
and
fstpl
rep
push
adc
insl
jno
xchg
dec
dec
adc
lret
dec
jge
cmpsl
repz
sub
in
dec
mov
cmp
into
fwait
pop
or
aad
out
mov
mov
gs
dec
cmc
or
sti
rcrl
in
sbb
mov
lock
outsb
dec
ljmp
xchg
jecxz
pop
pusha
imul
fsubrl
cli
pop
sub
push
ds
sti
ljmp
ljmp
outsl
mov
lods
xor
lea
popf
mov
push
aas
iret
ret
mov
ss
sar
dec
clc
xor
adcl
pop
fucomi
ret
ljmp
dec
stc
loope
jno
jle
stc
data16
cld
dec
push
jle
ret
cmpsl
loop
mov
jae
lods
dec
sub
insl
dec
in
lret
cmc
jnp
cmc
js
push
outsb
mov
add
mov
mov
dec
loopne
cwtl
sbb
mov
repnz
mov
out
xor
or
iret
pop
call
repz
pop
cwtl
push
mov
jb,pt
aad
or
mov
or
js
sbb
pop
xchg
mov
shrl
xor
lret
xchg
lahf
ljmp
imul
div
sub
dec
jae
out
in
pop
mov
add
push
jnp
fsubrs
mov
add
cmp
icebp
xchg
fistpll
mov
mov
xor
icebp
lods
fistpl
repnz
mov
push
call
fstp
push
sbb
arpl
mov
lret
add
fs
lea
jb
in
push
mov
lahf
repnz
in
jns
daa
cmpsb
outsl
ja
pushl
and
out
jno
cli
cli
outsb
mov
pop
mov
adc
sbbb
divb
sub
out
js
pop
lods
daa
mov
ljmp
mov
and
insl
imull
dec
jg
pop
test
outsl
in
repz
lret
mov
int
outsb
pop
or
xchg
dec
in
add
out
in
dec
inc
pop
pop
mov
push
sub
sub
lock
adc
fs
std
rorl
sub
sbb
mov
sbb
mov
ss
jge
outsl
mov
sub
xchg
stos
in
leave
cmp
ljmp
pop
mov
jl
call
iret
push
cmc
orps
fldl
cwtl
enter
pop
orb
jle
pop
hlt
xchg
sqrtps
lret
mov
loopne
sar
push
ds
sbb
jle
scas
fs
xchg
cmp
mov
das
aad
or
into
jns
imull
outsl
or
repnz
jecxz
arpl
mov
rcr
or
sub
sbb
and
mov
cld
cmpsb
jbe
push
push
je
mov
out
mov
cmp
push
jmp
stos
ret
sub
cmp
iret
sub
aas
into
icebp
jne
mov
ficoms
adc
jmp
pop
pop
jge
jb
ljmp
cli
xor
popf
pop
hlt
fistpl
leave
add
cltd
jg
fsts
cmp
dec
nop
fcom
jmp
mov
movsb
out
or
push
sbb
nop
ja
pop
mov
outsb
sarl
cmp
lds
and
cs
lret
push
es
cwtl
jb
cmp
nop
mov
mov
stos
bswap
loop
cmpl
sbb
sarl
lea
dec
aas
das
xorl
clc
mov
pop
lock
adc
push
jp
int3
mov
rcrl
out
pop
call
stos
mov
mov
pop
mov
imul
lds
outsl
jne
push
das
adc
shrl
adc
fwait
push
lods
sbb
sub
or
ljmp
mov
fcomp
pop
scas
imul
cmp
pop
lea
mov
scas
data16
aam
pop
addr16
aam
aam
fldt
pop
fstpl
sbb
jecxz
repz
cmc
mov
xlat
psubb
mov
sahf
sahf
hlt
arpl
outsl
adcl
xchg
rorl
daa
pop
pop
jecxz
mov
lea
add
lea
outsb
xchg
pop
outsb
dec
int3
sub
sub
addr16
popf
pop
mov
out
cli
dec
aas
xor
lret
fistpl
sub
dec
sbb
cmp
lcall
sub
popf
or
ret
test
jae
push
call
pop
in
mov
mov
ffreep
ljmp
les
pop
cmp
out
jge
neg
inc
sarl
jbe
scas
pop
ret
jl
push
mov
cmp
mov
jae
int
sub
nop
pop
pop
or
push
lods
aam
sub
in
push
pusha
ret
push
orl
dec
mov
lahf
insb
inc
mov
adcl
xchg
out
int
push
out
lret
popf
push
aaa
inc
sub
call
mov
shlb
dec
loope
sbb
jb
mov
loop
dec
dec
jg
andl
pushf
pushf
in
mov
sbb
adc
pushl
push
sbb
ss
lcall
inc
imul
mov
jp
into
mov
or
mov
cmpsl
cmp
daa
fdecstp
mov
and
sub
cmpsl
inc
cmp
mov
cmp
test
push
jae
jge
imul
daa
pop
and
in
cmp
fsts
or
cli
testb
cmp
out
fcompl
hlt
out
nop
repz
scas
and
fucom
clc
scas
test
imul
out
mov
lock
push
test
mov
mov
inc
dec
sbb
fsubrl
fbstp
das
cwtl
xor
pop
inc
sbb
jo
or
mov
loopne
out
cld
mov
cld
mov
je
add
cld
aad
lcall
mov
jo
out
fdivrl
jp
mov
mov
in
loope
shr
fdivrp
xchg
outsb
push
mov
jno
or
xor
push
repz
push
cld
mov
lret
sarb
mov
cmp
cmp
xchg
sbb
sub
jp
aaa
sbb
pause
adc
xchg
fadd
lods
out
push
jae
in
sarl
inc
push
or
or
push
ljmp
pop
add
inc
icebp
sub
in
sbb
xlat
jmp
fucomip
xlat
mov
leave
das
or
shrb
sti
ljmp
outsb
aas
sub
es
add
cwtl
loope
es
rorl
xlat
xor
rclb
adc
xchg
adc
jo
scas
xor
mov
xchg
decl
sub
ds
outsb
dec
xchg
fwait
mov
cmp
mov
jecxz
ja
mov
cmpsl
sbb
and
mov
idivl
cmpsl
dec
cltd
test
pop
pop
xor
iret
int3
inc
movsb
in
xchg
fstpl
hlt
les
cmpsl
ja
nop
xor
outsl
xchg
jmp
js
scas
mov
arpl
pop
mul
pop
jo
cmpsl
pushf
cld
fstpl
ret
scas
and
das
aad
movsl
pop
scas
sub
movsb
inc
pop
pop
xor
jmp
rorl
stc
pop
hlt
clc
sbb
fmul
jle
mov
sub
dec
in
fisttpll
rcl
xlat
mov
inc
lret
notl
push
shlb
fisttpl
lahf
popf
je
dec
cmp
outsb
sbb
inc
push
push
fstpt
lods
imul
loopne
outsl
movsb
addr16
jecxz
pop
cmp
js
pop
xchg
inc
scas
cli
rcrb
out
outsl
xor
pop
adc
or
mov
mov
sbb
xor
adc
dec
xor
fistpll
adc
sbb
xlat
push
push
es
lret
sbb
push
xchg
ds
in
adc
inc
xor
icebp
scas
mov
sbb
repz
lahf
sbb
push
mov
mov
jae
adc
pop
das
loop
pop
outsb
loop
push
testb
xchg
popf
pop
push
jp
cmpl
push
addr16
adc
les
imul
subb
push
dec
push
sub
ret
xor
rcl
pushf
shll
cli
insb
mov
push
mov
mov
daa
mov
inc
and
adc
nopl
or
xchg
stos
sbb
mov
xchg
sbb
neg
mov
inc
pop
cmp
inc
idivl
adc
in
dec
jbe
int
jge
mov
stc
sarl
imul
scas
fucomip
dec
repz
fdivr
pop
xor
cmp
sbb
sbb
push
clc
test
int3
dec
sub
inc
jmp
testl
sbb
sub
cmp
out
repz
clc
das
iret
test
or
or
jge
dec
das
jae
sbb
fucomi
lret
pop
lret
sarb
out
fisttpl
scas
pop
and
iret
daa
sbb
pop
adc
xchg
outsl
enter
sti
jne
lcall
pop
movsb
rcl
sub
lret
sbb
jo
adc
sbb
iret
and
sahf
loopne
sub
fwait
cs
rcr
jmp
aad
mov
jle
adc
or
ficompl
mov
fdivrs
or
dec
pop
xor
sub
aaa
mov
inc
repz
cmpsb
lret
das
ficoml
insl
lods
jno
int3
out
inc
jl
push
dec
insl
pop
std
adc
sub
pushf
mov
dec
sbb
or
fimull
mov
adc
and
mov
mov
jb
mov
jge
ror
dec
push
sahf
bnd
lcall
fs
aaa
push
shl
xchg
jae
cmp
dec
sub
or
imul
and
add
add
sbbb
xchg
xchg
je
popa
inc
mov
mov
in
pop
cmp
fldcw
xchg
cmp
mov
lods
mov
testl
mov
out
movsl
addr16
mov
adc
cmc
cmp
lods
pop
add
and
mov
jo
movsb
xchg
cmp
mov
in
jg
aad
leave
popf
in
mov
xor
mov
jbe
sub
add
dec
into
xor
fstpl
adc
fisubl
lods
mov
cmp
push
pop
std
xchg
mov
out
stos
scas
push
repnz
cmp
out
cwtl
or
push
cmc
sub
neg
leave
das
push
or
out
sbbl
icebp
mov
iret
imulb
mov
mov
mov
movsl
or
ficoml
jne
ljmp
mov
sahf
insb
sbb
daa
in
sub
xlat
xchg
fidivrs
fs
adc
push
pop
cwtl
pop
dec
adc
mov
xchg
inc
sbb
int3
add
rcr
xor
mov
or
into
mov
icebp
mov
ret
test
fsubrp
fcomip
mov
mov
das
das
push
mov
aam
fsubp
mov
xchg
shrb
dec
lods
loope
outsl
lret
fsubr
mov
jmp
clc
sbb
push
cmp
and
fdiv
imul
dec
lret
mov
cmp
iret
add
add
test
fisubl
mov
jge
xchg
pop
mov
gs
lahf
sub
push
addr16
jecxz
clc
arpl
sub
mov
jno
inc
sub
fisttps
pop
push
add
cmp
scas
jae
sbb
jae
sbb
mov
lods
das
lds
push
sub
fdivrl
cmp
into
pop
pop
mov
xchg
ja
mov
sbb
mov
scas
int
lret
pop
push
add
fsubrl
movl
pop
or
cld
insl
leave
push
add
jo
adc
in
fwait
or
rcll
rorb
sti
mov
add
sbb
and
jbe
mov
sbb
cmp
shll
in
mov
sub
mov
push
inc
icebp
jg
pop
jl
outsb
js
rcl
icebp
dec
inc
repz
jmp
cmp
je
cmpsl
iret
ds
mov
cwtl
into
vpmaxub
push
cwtl
scas
ja
mov
fdiv
faddl
pop
adc
pop
cli
xchg
xor
movsl
scas
fisttpl
pop
clc
in
xchg
loopne
mov
paddusb
mov
sbb
mov
jp
sub
dec
push
and
or
fistpl
cltd
rorb
ljmp
fincstp
adc
pop
iret
jg
ss
lods
imul
aaa
rcl
stos
mov
sub
mov
leave
mov
mov
sub
arpl
aad
fisttpl
mov
les
aas
adc
jo
jle
icebp
test
ficomps
rorl
mov
push
or
push
in
js
sub
pop
mov
sub
arpl
or
mov
daa
mov
pop
mov
je
push
inc
jnp
fdivrl
xor
sbb
fwait
jb
mov
cli
mov
test
lcall
and
shl
jae
or
adc
clc
add
or
fwait
push
dec
or
loope
pop
loope
into
pop
lret
cli
adc
clc
add
cmp
loopne
pop
jecxz
push
fwait
mov
in
test
loope
ret
inc
out
jns
test
in
fcompl
aad
or
loopne
pop
pusha
push
call
or
int3
cs
mov
dec
clc
cld
lods
push
sti
and
aas
push
daa
jl
in
pop
out
pop
adc
negl
repnz
xchg
dec
in
aas
clc
pop
shll
and
pop
enter
mov
mov
sub
loop
add
push
repnz
lahf
outsl
test
xor
push
add
sub
lcall
jns
outsl
test
movsl
pop
leave
lods
inc
push
cs
je,pt
test
mov
fdivrs
int3
imul
mov
rorb
sbb
mov
sti
jae
out
push
push
cld
push
mov
loop
ret
pop
aam
cltd
gs
sub
loop
pop
push
les
imul
cmpsl
push
mov
jle
push
push
arpl
insb
push
push
mov
arpl
ss
sub
jb
mov
pop
mov
js
and
icebp
adc
adc
adc
mov
lret
xor
fwait
icebp
sub
push
int
aaa
dec
into
popf
xlat
stos
add
jle
push
jg
ffree
dec
mov
adc
cmc
jb
mov
rcll
mov
lea
aas
push
in
sahf
mov
inc
insb
sub
sub
add
pop
push
cmp
jae
cmp
lock
xor
sbb
mov
pushf
jns,pt
cmp
jnp
cmp
jmp
jb
pushf
mov
or
xchg
adc
mov
mov
scas
sahf
push
cwtl
or
jg
mov
pop
pop
outsb
mov
lcall
test
in
inc
adc
xchg
and
ficompl
jae
movsl
mov
xlat
adc
add
xor
jns
arpl
ss
dec
cmp
loopne
mov
cmpsb
or
jns
xorb
fcomip
ss
ja
iret
out
push
ja
cmc
mov
xor
pop
cmpsl
adc
adc
push
stos
xchg
pop
rcrl
int
mov
pop
jae
xchg
pop
mov
fisttpl
pop
int3
cmpsl
mov
or
fadds
fisttpll
inc
xchg
or
test
pop
dec
mov
or
push
dec
jo
push
jle,pt
mov
pop
mov
ds
pop
insb
xchg
sub
sbb
rolb
lea
sbb
inc
mov
mov
xchg
pusha
into
jge
dec
out
idivl
rcrb
add
mov
out
cmp
aam
jge
mov
fnstcw
sub
cmp
mov
movsb
pop
test
daa
sub
icebp
outsb
ds
imul
fwait
test
mov
sbb
mov
lods
gs
xor
les
dec
aad
repz
cmpsl
sahf
xor
xchg
or
aad
and
jge
mov
lods
movsb
movsl
ss
in
out
test
movsl
fs
lret
sahf
inc
fnstenv
jns
cld
imul
in
aas
and
repz
data16
cmpb
loope
lahf
dec
push
jle
adc
lahf
popf
jbe
in
push
jo
mov
in
dec
pop
sbb
enter
daa
dec
mov
cmp
out
orl
out
scas
out
sub
mov
pop
fsubs
fnsave
jbe
sub
sub
pop
pop
test
cltd
out
push
sbb
scas
sub
cltd
jg
adc
jp
and
adc
das
or
outsb
out
mov
push
das
movsl
insb
cltd
mov
or
mov
sbb
loop
popf
addr16
sub
insl
fisubrs
outsl
mov
push
pushf
sti
jmp
xchg
pop
mov
sub
out
and
int
hlt
pop
lahf
shlb
aad
cltd
adc
mov
hlt
subps
lods
imul
xchg
pop
pusha
out
in
mov
mov
sbb
mov
std
xor
fadd
pop
mov
lods
mov
pop
scas
rclb
imull
gs
add
jns
cmc
xchg
push
jg
push
mov
imul
xor
jbe
mov
cmpsl
cmp
cmp
add
lret
xor
pop
in
push
push
pop
sbb
in
inc
mov
insb
sbbb
out
xchg
mov
icebp
pushf
hlt
roll
and
into
dec
out
enter
int
cmpsb
je
mov
cmp
add
pop
aaa
mov
ret
xchg
ret
or
das
cmp
jp
or
cmpsl
fidivs
outsl
out
pop
addl
ds
cmpsb
sbb
test
mov
xor
and
jbe
outsb
aad
xchg
iret
movsb
jmp
pop
dec
cli
adc
push
or
add
xor
shrl
or
adcb
pop
push
push
in
sub
sbb
ljmp
sub
and
push
mov
daa
add
pop
mov
push
out
adc
fisubrl
jle
loopne
mov
int3
xchg
xchg
fwait
and
jmp
aad
push
lahf
push
inc
pop
mov
arpl
ss
imul
sbb
adc
out
pop
inc
movsb
sahf
call
test
xor
mov
in
fdivrl
mov
mov
jmp
ljmp
cld
cmp
jl
out
sbb
dec
cli
sbb
shrb
add
and
out
jne
dec
and
in
aad
mov
loope
sbb
loop
push
sti
ficoml
or
jno
xchg
movsb
mov
scas
cli
scas
iret
stc
lahf
out
ret
pop
ficompl
xor
daa
mov
fmulp
lret
aam
scas
mov
jmp
inc
mov
pusha
push
dec
movsb
in
fwait
aaa
xlat
sahf
out
loopne
xchg
leave
adc
into
enter
ds
sub
sarl
mov
mulb
dec
jl
loopne
test
and
and
mov
push
imul
mov
in
dec
mov
dec
psrlq
scas
in
cmc
outsl
ss
int
outsb
mov
aaa
xor
xchg
jb
mov
ljmp
insb
sub
gs
cmp
imul
iret
lahf
lods
and
mov
inc
mov
pushf
jo
in
int3
repnz
and
shl
xchg
pusha
fldenv
mov
testb
ljmp
addb
shr
pop
sub
jns
stos
xchg
pop
daa
cmp
pop
push
jb
jge
and
xor
js,pn
and
ljmp
sbb
sbb
mov
pop
add
mov
push
leave
mov
add
pop
mov
into
jae
or
inc
xchg
call
add
cmpsl
pop
pop
out
jge
jecxz
pop
je
fidivs
rcl
inc
cmp
pop
sti
dec
sub
xchg
scas
mov
outsb
dec
or
leave
jb
pop
cmp
repnz
or
cmp
sbb
fsubr
sbb
sbb
or
aas
outsb
hlt
mov
sti
mov
mov
mov
and
scas
cltd
dec
into
jns
cmpsl
jge
outsb
div
adc
or
sbb
scas
jbe
add
outsl
aad
test
arpl
cmp
or
jbe
test
movsl
scas
pop
dec
cmpb
outsb
adc
mov
push
xchg
scas
mov
movsb
shr
xchg
pop
sbb
in
ds
into
xor
cli
pop
mov
movsl
adc
xor
leave
adc
mov
pop
in
cmpsb
push
or
fdivrs
out
movsl
fst
ljmp
fistpll
push
dec
loopne
push
cmp
jecxz
xor
repnz
fistps
or
out
scas
fs
cmpsb
mov
punpckldq
lea
psraw
mov
dec
je
iret
lahf
sub
icebp
mov
fsubrs
mov
lock
jnp
scas
pop
negl
fisubrs
daa
push
cmpsl
mov
jo
mov
xchg
out
fstpl
imul
or
jmp
cmp
push
lahf
pushf
push
aad
sbb
or
dec
mov
mov
adc
add
divl
das
outsb
fisubrs
in
in
insl
scas
mov
sahf
jge
cmp
adc
js
notb
repnz
fstpl
out
jmp
or
dec
mov
adc
gs
pop
int
xchg
jnp
inc
outsb
lods
rcl
ret
sub
popa
sub
sbb
out
and
int
push
fsubr
in
outsb
jp
jbe
stos
mov
call
cli
xor
xlat
loop
inc
add
jne
loop
cvtps2pi
shl
xorb
or
lahf
insl
mov
xlat
daa
lret
xchg
mov
in
mov
xor
in
popa
sub
shlb
fimull
lds
jl
inc
test
dec
pusha
mov
ljmp
repnz
cmp
or
mov
outsl
xor
mov
push
clc
fcoml
pop
or
pop
cmpsl
out
jnp
stc
xor
leave
dec
jmp
test
lahf
js
cltd
addr16
lcall
pusha
sti
cld
add
imul
loop
popf
cmp
aaa
out
iret
pop
iret
push
push
fdiv
insl
test
les
add
into
ret
push
leave
sub
mov
sar
mov
lock
cmp
sub
mov
arpl
inc
jne
pop
out
jge
lcall
mov
and
mov
das
push
ljmp
mov
movsb
divb
test
mov
inc
mov
adc
mov
inc
and
cmpsl
xchg
and
bnd
es
cmpsl
aaa
aas
ja
imul
sbb
add
jle
sbb
jle
xlat
dec
neg
pop
leave
pushf
sub
add
daa
rolb
adc
out
cmp
clc
fidivl
repnz
out
sahf
inc
shlb
xor
test
cmp
push
fcoml
int3
mov
in
pushf
std
scas
repz
insl
adc
mov
mov
xchg
dec
movsl
je
push
mov
out
mov
cmp
popa
adc
dec
sbb
or
mov
cmp
aaa
jnp
dec
aas
xchg
cs
call
or
int
cs
xchg
out
push
mov
xchg
mov
cli
pop
lea
test
fucomip
push
jp
jns
mov
into
lods
inc
mov
inc
xchg
pop
or
outsl
lcall
das
mov
cli
aad
jg
dec
lahf
pop
xchg
jge
xlat
and
popa
push
outsl
push
sub
push
mov
push
xor
shll
inc
xchg
lock
mov
rorl
out
iret
fldt
xchg
add
cmc
bound
stos
out
push
fisubrs
jmp
insl
jne
loope
out
jge
fnstsw
pop
pop
and
fnstcw
jae
in
outsl
ret
ret
out
jae
xchg
adc
or
sar
loopne
cmpsb
or
jg
push
xor
pop
clc
xor
aas
mov
push
mov
mov
movsb
fwait
dec
repz
movsl
xor
popl
adc
out
add
push
divb
sub
cmp
inc
fldcw
filds
rcll
pop
ja
sbb
ljmp
das
or
dec
ja
or
dec
in
lcall
adc
repz
add
sub
jne
add
sbb
scas
aad
xor
push
or
dec
daa
icebp
dec
fidivrl
pop
jnp
aaa
xor
add
adc
popa
pop
ss
scas
paddusb
cmpsb
icebp
mov
mov
lods
mov
lret
rcl
jae
push
push
mov
lret
jb
cmc
iret
add
or
push
dec
add
lahf
cmp
or
push
stc
hlt
call
adc
jb
ds
ret
lods
pop
sub
jo
jmp
daa
mov
jge
push
lds
imul
cmp
dec
push
and
hlt
pop
in
pop
sbb
out
js
in
jecxz
push
pop
add
dec
cs
out
xchg
dec
and
jmp
xor
iret
enter
shl
popf
movsb
sahf
int
add
pxor
pop
shlb
or
inc
outsl
push
pop
push
mov
movsl
dec
pop
int3
dec
scas
cmp
fistps
inc
or
sub
shll
out
scas
mov
xor
mov
xor
outsl
mov
mov
xchg
add
sbb
xchg
jle
mov
fistps
cmc
pop
scas
loop
repz
dec
add
mov
pushf
in
fs
out
xchg
cmpsb
lahf
jae
movsl
cld
je
pop
add
ja
mov
negb
adc
push
stc
push
iret
loopne
test
stos
jmp
adc
dec
std
inc
pop
daa
push
sub
out
or
idiv
ljmp
mov
adc
mov
push
cmp
lock
adc
inc
test
inc
dec
mov
xchg
jl
ss
adc
lcall
push
fst
std
iret
jne
fnsave
cmp
xor
mov
out
fwait
es
insl
insl
xor
jmp
jo
or
jge
push
insb
pop
xchg
push
pop
mov
test
pop
and
mov
lock
cmp
sub
push
mov
jge
scas
cmp
mov
data16
lea
xchg
pop
dec
and
cmp
cwtl
sub
outsl
fimuls
out
cmp
addr16
out
into
inc
cwtl
fiadds
ljmp
ds
ss
and
es
mov
xor
fsubs
andb
cmp
push
in
sbb
cli
and
and
push
out
rcrb
push
jb
cmp
aas
in
in
and
in
mov
or
int3
push
push
xor
lret
fbld
scas
lock
or
repz
cmp
xchg
stos
pop
sarl
lret
fistpll
lret
cmpsl
cmp
dec
mov
loope
aas
cmp
xlat
xor
out
lock
add
aas
repz
sub
lret
ds
xor
leave
fistl
push
daa
sti
xor
cmp
ljmp
xor
mov
icebp
ffreep
xchg
mov
int3
int3
inc
rcrb
andb
popa
cli
mov
or
sbb
sti
insb
sbb
sub
in
sub
bound
iret
ret
lret
fdivs
cmp
cmc
repz
mov
iret
pop
mov
inc
inc
cs
bound
dec
lcall
ret
mov
or
push
out
sub
fidivrl
mov
jge
lret
sbb
xchg
btr
inc
jae
jmp
mov
or
loop
loop
mov
mov
xchg
mov
movsl
sahf
xchg
jecxz
repnz
adc
insl
mov
xor
fnsave
repz
pop
mov
psubb
mov
insb
or
adc
jmp
jae
push
out
insl
mov
mov
mov
push
mov
lods
out
mov
dec
scas
push
mov
push
loop
sub
adc
int3
push
dec
sbb
sbb
pop
loope
ljmp
xchg
imul
mov
sbb
or
pop
aaa
pop
xlat
dec
dec
mov
fdivl
out
jne
int
dec
mov
mov
ss
jecxz
dec
cltd
fiadds
xchg
pop
sbb
inc
cmp
arpl
std
mov
dec
fldl
jae
aaa
push
xchg
ss
lahf
test
xorl
test
push
mov
mov
out
pop
mov
or
dec
outsl
call
dec
lods
cmp
or
jp
jl
mov
cltd
push
jp
adc
mov
cmp
inc
push
clc
sbb
cld
leave
mov
lahf
fsubrl
xor
sub
lahf
scas
push
mov
leave
pop
lock
and
rorb
ret
sub
out
jecxz
icebp
int3
iret
adcb
lock
dec
je
mov
xor
or
xlat
repz
int
cmc
out
dec
lock
jmp
sub
das
es
sarb
xor
lds
cmpsb
xchg
inc
fcoms
mov
push
popf
pop
sbb
addr16
out
in
ja
xchg
lock
sahf
adc
filds
sub
inc
scas
mov
fistps
xor
repnz
or
jno
outsl
mov
lahf
ss
negl
mov
inc
pop
jae
jbe
movsb
sub
ss
mov
icebp
adc
sub
mov
cmp
pop
je
or
dec
cmp
dec
lods
push
jp
rorb
test
push
mov
sbb
mov
add
adc
jae
pop
inc
cmp
mov
in
cmp
jne
lea
adc
inc
cmp
sbb
add
pop
inc
int3
pop
jnp
mov
rcrl
jo
cmp
lods
inc
fs
inc
cs
xor
sbb
lahf
mov
mov
sbb
push
dec
repz
push
aaa
das
arpl
pop
or
xor
dec
fldt
mov
jle
pop
push
pop
mov
fidivrs
jp
addr16
push
push
cmpsl
push
out
gs
orb
or
sbb
iret
mov
push
ror
aam
sbb
mov
addr16
sub
mov
jns
lahf
jg
lret
or
cmp
jmp
pop
stos
or
push
pop
xlat
inc
sbb
out
xor
xchg
leave
sub
test
push
mov
or
cld
sub
popf
push
sahf
popa
dec
push
rol
nop
scas
mov
fcom
push
aas
mov
lods
jl
and
shrb
and
in
imul
fldl
loopne
dec
mov
sub
imul
sub
mov
sbbl
pop
addr16
in
lods
fidivs
xchg
loope
sub
jns
pop
or
leave
or
dec
das
xor
gs
aaa
std
pop
cmp
mov
jle
mov
mull
imul
mov
xlat
daa
inc
fcoms
sbb
adc
jl
mov
jne
movsl
cmp
dec
cmp
or
punpckhwd
orb
loop
shlb
mov
ds
push
push
movsb
mulb
lcall
rcll
push
call
mov
push
mov
pop
mov
out
in
xchg
cmc
jle
jle
stos
cmp
lods
shl
add
lods
dec
adc
cmpsl
push
pop
adc
into
inc
dec
fisttpll
lods
ljmp
aaa
cmp
jle
lahf
idiv
cltd
loope
iret
bound
cs
fidivs
mov
sar
inc
jge
add
test
cli
aad
out
mov
cmp
push
sbb
dec
fdivp
daa
pop
das
or
idiv
cmp
jg
in
lcall
jne
or
fidivs
das
repz
ss
out
inc
xor
fsubrs
fisttpll
movsb
and
out
sub
push
das
mov
xor
outsb
lahf
ljmp
cmp
stos
mov
in
sub
push
test
imul
lahf
mov
cld
push
inc
pop
in
mov
dec
fbstp
mov
pop
mov
daa
icebp
pop
or
sbb
jmp
fisttpl
in
idiv
popf
cld
jb
sbb
rcrl
pop
sbb
std
mov
push
add
mov
adc
sahf
cmp
scas
cmp
cmp
and
fxch
push
adc
fcomps
pop
push
xor
mov
fnsave
push
into
stos
mov
push
xchg
movl
mov
push
popf
jge
mov
das
pop
mov
in
push
imul
pop
out
sbb
sub
nop
jle
jg
xchg
push
out
stc
int
repnz
ljmp
in
mov
mov
pop
hlt
stos
mov
sbb
cs
mov
fistpl
outsb
and
mov
cmc
in
insb
daa
mov
jle
mov
mov
stos
pop
mov
int
dec
testb
cld
sahf
pop
mov
fldcw
insb
fisubrl
stc
cmp
negl
outsb
lods
cmp
push
mov
mov
xchg
pop
push
cwtl
xor
cmp
adc
dec
sub
jbe
insb
mov
pop
push
or
xchg
pop
adc
sahf
cmpsl
pop
divl
aad
mov
mov
fadd
cli
out
jecxz
enter
mov
jg
xchg
mov
loop
fistl
movntq
mov
and
cld
stc
loopne
imul
das
dec
push
iret
stos
adc
cmp
or
scas
push
fldl
lret
scas
imul
mov
sub
xchg
pop
push
jmp
in
or
fimull
lret
xchg
stos
shlb
add
pop
out
ljmp
sti
adc
sbb
cmp
adc
cmp
and
xlat
in
mov
or
add
mov
decl
cmpsb
ja
orb
jl
xor
aad
pop
xlat
adc
sub
mov
pusha
scas
adc
add
push
hlt
lret
jbe
pop
sbb
sbb
and
lds
cs
cli
int
movsl
into
clc
cmc
lret
fcoms
aaa
pop
in
pop
pop
mov
les
pop
xchg
mov
cmpsl
inc
mov
into
jmp
xor
sahf
into
sub
cmpb
push
sbb
ffree
movsb
mov
mov
mov
lret
das
cmp
setae
scas
dec
lcall
xor
mov
aas
out
in
sbb
pushf
lods
xchg
scas
inc
scas
inc
xchg
mov
iret
sti
ja
xchg
pop
jp
adc
out
lret
movsb
into
mov
xor
add
shll
test
stos
push
in
xchg
mov
rcrl
sahf
add
fldcw
lock
into
rcr
adc
cld
outsb
popf
mov
sub
pop
hlt
divl
lret
in
or
pop
cmp
mov
adc
ds
lahf
push
in
push
mov
clc
outsb
cmp
ret
rorl
fstpt
adc
pop
pop
jnp
mov
mov
jbe
sarl
cmc
mov
mov
cs
mov
sub
daa
mov
fwait
pop
cmp
pop
test
pushf
or
test
mov
or
xchg
mov
mov
cmp
jg
mov
add
scas
dec
add
insl
dec
js
hlt
jge,pt
push
outsl
mov
cs
xchg
mov
lahf
aam
push
push
or
mov
out
jp
cld
xlat
add
push
aad
mov
lahf
xor
imul
jnp
sbb
xor
or
mov
fstpt
or
push
cs
sbb
aas
cwtl
xchg
adc
ljmp
mov
repz
sar
out
mov
mov
cli
fwait
leave
jge
add
mov
stos
xlat
fwait
and
xchg
inc
lods
mov
int
adc
jle
leave
xchg
sub
mov
pop
adc
frstor
hlt
mov
xor
xchg
mov
push
clc
pop
in
dec
imul
adc
sti
mov
pusha
lret
shll
jno
scas
jge
stos
jbe
mov
sbb
pop
jg
sub
push
mov
mov
mov
jp
push
pop
pop
sub
mov
pop
sbb
aad
pop
enter
push
call
push
mov
pop
leave
xchg
out
ss
movsb
lret
jmp
out
in
icebp
xchg
add
sti
lods
lock
lds
bound
mov
mov
iret
in
das
stos
jle
das
pop
xor
into
int3
cmp
insl
repnz
dec
lret
sub
mov
xchg
jle
jno
pop
jecxz
push
es
inc
dec
pop
inc
faddl
sub
ja
sub
aam
lret
push
repnz
daa
mov
sti
imul
out
sbb
pop
dec
outsl
adc
int3
movsb
aaa
push
sbb
daa
mov
xchg
xor
adc
inc
hlt
mov
pop
jb
lcall
ja
cmc
popf
lret
sub
or
cmp
push
mov
mov
je
test
jmp
mov
pop
icebp
sbb
dec
int3
pop
aad
sbb
mov
mov
and
mov
arpl
sbb
fisubrl
mov
cmpsl
sbb
jmp
mov
xlat
jg
add
pop
aam
js
call
insb
xorb
and
into
and
pop
and
stos
xchg
jbe
mov
mov
into
ds
nop
negb
xchg
mov
pop
dec
out
bound
es
aas
outsb
lea
jecxz
xor
por
push
mov
out
in
mov
sub
pop
out
scas
ret
adc
pusha
xchg
pop
push
in
scas
sub
scas
add
lock
fwait
sbb
xchg
dec
aaa
mov
ljmp
ja
popf
ret
inc
popf
push
std
add
sbb
pop
out
test
sbb
xchg
cmp
add
cmp
push
push
cmp
push
sbb
jae
loop
sbb
insb
inc
rolb
or
in
outsl
dec
sbb
xchg
mov
jp
sub
out
test
es
insl
aas
fimull
mov
sub
xchg
pop
jecxz
xor
push
add
sbb
mov
outsl
or
lret
imul
shll
or
imul
or
mov
call
cmp
in
pop
adc
inc
mov
jbe
jmp
cmc
add
sbb
push
loopne
and
push
sub
out
enter
adc
scas
sbb
jno
mov
js
jmp
sarl
data16
jecxz
pushf
pop
add
or
xor
insl
pop
push
pop
int3
cmp
lock
sbb
xor
add
mov
jo
out
aaa
sbb
pop
push
pop
dec
mov
nop
cmpsl
xor
inc
mov
cmpsb
dec
cmp
mov
clc
mov
ret
push
sbb
jne
push
outsb
jo
aad
xchg
addr16
dec
scas
rcrb
fcoms
scas
scas
pop
adc
aas
lcall
pop
pop
mov
shr
jb
push
out
shll
cmpsl
rorb
sbb
ja
out
lahf
popa
rolb
and
sub
das
mov
rorl
shrl
outsb
push
je
ss
jbe
pushf
lcall
dec
mov
mov
xor
inc
jne
xor
push
ss
addr16
sub
push
mov
out
pop
imul
pop
popa
dec
movl
push
push
repz
xchg
jmp
mov
gs
sub
jb
addr16
aas
inc
push
sub
fcomps
or
data16
das
out
pop
aas
push
pop
aaa
mov
sbb
add
push
neg
sti
jmp
out
arpl
mov
xor
fldt
jbe
jge
sub
iret
mov
int3
mov
xchg
into
pushw
push
jg
xor
dec
sahf
arpl
ja
pop
leave
mov
sti
out
mov
f2xm1
mov
mov
sbb
sub
aam
cmpsb
pop
adc
cwtl
pop
outsl
jae
jge
xor
imul
or
cmp
popf
pop
and
lea
adc
dec
jecxz
sbb
xchg
outsb
lods
xor
xchg
mov
lahf
je
sti
bound
shlb
aas
iret
loopne
lods
stos
outsl
jl
scas
aas
lret
and
movsl
mov
das
cwtl
lret
aad
adc
filds
push
xchg
inc
pop
enter
rcrb
sub
sbb
testl
scas
loop
or
push
push
pop
fisubs
iret
ss
push
adc
xor
lahf
fimuls
scas
add
popa
or
nop
je
push
sbb
push
loopne
adc
xor
aaa
push
mov
cmp
test
pop
fildll
repnz
in
cmp
dec
xor
jg
inc
scas
mov
subl
push
loop
or
xlat
sti
pop
testl
xchg
mov
scas
ja
cli
ljmp
xor
sti
shl
aad
pop
fs
pushf
hlt
icebp
sti
mov
cwtl
arpl
cld
fidivs
int
adc
push
sub
movsl
xor
push
cmp
cmc
mov
cmp
adc
inc
fnstcw
adc
dec
dec
inc
insl
enter
inc
mov
xor
xchg
inc
push
inc
scas
popf
ja
pop
sbb
mov
sbb
adc
push
fdivp
insl
movsl
aas
into
ljmp
add
mov
sub
cmpsl
shlb
cmp
aam
leave
lahf
jmp
mov
lahf
mov
push
push
clc
mov
fcoml
xlat
negl
pop
or
popl
adc
bound
int
xchg
fs
inc
dec
in
divb
jle
insb
adc
fdivrl
inc
cmpsb
insl
pop
repz
js
fstpt
in
das
js
jle
stc
push
cmc
sbb
pop
pop
cltd
push
jle
mov
xorb
mull
clc
test
xchg
dec
mov
aam
mov
enter
in
jp
cmp
pop
mov
jge
mov
or
jne
outsl
inc
sub
jle
cli
jno
outsb
add
das
cli
out
xchg
int3
push
pop
fisttpl
lods
mov
dec
dec
fistpll
mov
cmpsb
push
outsb
sub
xchg
xchg
fdivs
and
fsubrs
and
aas
ss
shll
xchg
push
inc
add
fldt
out
mov
add
div
xchg
mov
mov
nop
je
push
cmp
sbbl
call
aaa
xor
insb
mov
sbb
mov
call
testl
data16
and
mov
out
cmc
jp
add
pop
add
movsb
cltd
pop
stos
pushl
cs
shl
cli
dec
fisttps
das
inc
jmp
ss
fistpl
imul
sub
push
pop
jo
adc
je
mov
or
loopne,pn
pop
push
sti
jb
xlat
ss
push
adc
xor
or
and
mov
push
xchg
adc
push
mov
xor
out
cmp
enter
filds
sub
sti
adc
std
jle
cmp
fsubr
xor
jno
mov
jnp
ret
addb
push
les
fcmovbe
bnd
fidivrs
lret
adc
in
in
mov
lods
jmp
pushf
or
imul
push
mov
mov
adc
enter
cli
jle
jl
js
xor
or
xor
jnp
push
cmp
out
vpminsw
lret
jns
cmp
imul
test
idivb
movsl
stos
mull
fldcw
aam
dec
jo
adc
xor
adc
push
sti
cli
outsb
push
adc
pop
xor
fldcw
add
lock
out
mov
dec
mov
jle
jle
mov
sarl
add
insl
cmp
outsb
mov
out
jle
clc
adc
inc
jg
dec
das
mov
sub
hlt
int3
lods
inc
pushf
xchg
leave
mov
jg
outsl
out
inc
cmpsb
lahf
cltd
mov
fwait
xorl
std
popa
daa
adc
out
outsl
lea
imul
cli
pop
inc
popf
imul
cmp
insb
xor
pop
pop
adc
mov
mov
mov
mov
addr16
lea
sub
pop
cltd
sbb
insl
add
int3
cs
or
out
cwtl
aam
out
addr16
jl
subb
sub
lcall
jg
imul
dec
sarl
jne
sbb
jo
scas
add
test
pop
mov
adc
dec
dec
pop
stos
sbb
int
loopne
lahf
jo
pushf
call
push
iret
rolb
aas
fwait
adc
xor
mov
testl
fs
scas
repz
or
ljmp
mov
pop
fisubs
mov
aaa
jnp
scas
mov
sti
pop
lods
test
hlt
notl
loope
and
aas
cmp
dec
testb
imul
out
fidivrs
pop
cmp
jbe
inc
movsl
inc
scas
pop
outsb
mov
imul
test
into
dec
sub
lods
outsl
add
mov
fmull
pop
and
bound
push
cwtl
or
mov
cmpsb
jg
pop
fsubp
push
lea
aaa
arpl
dec
lock
negl
ret
dec
jae
in
push
push
or
dec
adc
xchg
mov
ja
shlb
mov
cs
sub
cwtl
push
stos
dec
xchg
mov
dec
sahf
into
dec
inc
push
fisttpl
mov
in
int3
pop
out
out
jmp
and
and
mov
js
scas
stos
shrd
jcxz
shl
loop
jmp
insl
add
fstps
push
leave
lock
mov
xor
xor
dec
or
cmp
outsl
sub
fisubl
pop
jmp
jecxz
pop
push
pushw
cmp
test
xor
shl
pop
dec
fnstenv
and
mov
enter
sahf
pop
leave
mov
mov
pop
push
fsubrl
xor
out
jmp
cli
ds
push
test
and
aas
icebp
jns
test
outsb
out
arpl
cmp
dec
mov
xchg
mov
ds
adc
icebp
mov
mov
sub
mov
lahf
pop
lock
cmpsb
mov
adc
mov
jnp
popa
jnp
cld
loope
mov
fisubrl
sti
arpl
mov
int3
add
sahf
lock
and
push
data16
aas
imul
push
insl
dec
cmc
leave
sub
repnz
cmp
in
repz
cmpsb
jb
outsb
inc
mov
popa
jo
sub
lds
out
mov
enter
jne
add
push
dec
lahf
mov
cli
mov
push
mov
rolb
sub
arpl
adc
mov
cmp
pop
pop
mov
inc
loop
push
fdivrl
mov
mov
xchg
pop
lds
scas
int
fdivs
ljmp
push
fisttps
pop
pop
mov
mov
push
add
lret
xor
cmp
pop
mov
mov
es
pop
jecxz
jbe
fistpl
mov
cmp
cmp
push
xlat
pop
cwtl
adc
fstl
inc
fcoms
pop
call
mov
jecxz
mov
xchg
ja
fistpll
lret
push
sbb
sub
aas
mov
rol
testb
push
add
movsl
cmp
pushf
loopne
movsb
out
cmpsl
popl
fs
test
jae
push
cmp
incl
int3
mov
popf
jp
xchg
outsl
insb
repnz
lds
call
jnp
test
sub
xchg
inc
repnz
pop
fucomi
hlt
test
mov
mull
xchg
cmp
push
inc
clc
iret
outsl
fldenv
mov
loope
xchg
je
sti
imul
mov
in
fwait
loope
xchg
add
sti
add
scas
data16
cmc
stc
xor
fiadds
data16
jle
int3
pop
ljmp
sbb
int3
ficoms
stos
inc
aas
mulb
mov
ja
das
dec
xchg
mov
jle
xor
pushf
xor
push
pop
cld
scas
sub
stos
cmp
cli
mov
mov
sub
cmpsl
shrb
fimuls
add
iret
jmp
sub
or
jge
jl
mov
dec
cli
cmp
inc
lcall
push
mov
out
sbbb
fmull
xlat
sbb
pop
lock
sub
mov
pop
das
sahf
xchg
mov
imul
sahf
out
cmpsb
inc
in
jmp
stos
shrd
pop
jb
jp
outsl
mov
push
push
movsb
sbb
pushf
pop
and
and
shlb
mov
pop
xchg
or
lcall
loopne
std
xor
stos
adc
or
xchg
dec
inc
out
fmuls
insl
mov
sbb
ret
sub
or
xor
pop
loope
mov
jns
popf
aas
fmulp
push
insl
adc
mov
pop
hlt
into
cltd
fisubs
inc
mov
pop
pop
xchg
push
push
adc
mov
ffree
testl
mov
mov
sbb
insb
hlt
and
adc
mov
popf
or
orl
adc
cwtl
scas
cmpsl
popf
xor
cltd
mov
daa
jns
jecxz
out
sub
je
cmova
stc
cltd
push
jae
lret
fisttpl
push
stos
das
outsb
add
jns
in
mov
cmc
or
scas
add
inc
xchg
xor
ds
mov
ror
sbb
fcoms
mov
xor
dec
and
sub
push
xlat
add
out
dec
push
mov
xor
aaa
outsb
insl
sahf
dec
jae
lods
jle
iret
pop
test
fstpl
fidivs
sbb
cli
rcrb
pop
and
dec
loop
es
movsl
les
jns
lea
pop
pop
dec
dec
fistl
mov
xor
sbb
out
sub
fcompl
shlb
sbb
scas
xor
fwait
or
jmp
scas
std
shlb
mov
fmuls
cmp
sbb
scas
dec
in
cld
mov
mov
inc
add
btr
push
dec
sbb
pop
xor
and
daa
fdivrp
mov
xor
and
jne
cmp
cmc
mov
pop
lahf
mov
inc
jnp
xlat
mov
cltd
fsubl
js
jecxz
mov
mov
mov
stos
pop
lods
dec
clc
push
or
or
mov
mov
mov
outsl
pop
add
shl
push
js
dec
and
incb
sbbb
xchg
cmp
out
fsubs
sti
sub
rorb
pop
jnp
insl
in
out
pop
jle
xlat
movb
pop
mov
sbb
jnp
pusha
mov
pop
repz
das
mov
sub
call
inc
mov
lock
sbb
cvtps2pd
xchg
pop
sub
push
push
jmp
icebp
out
adc
push
ficomps
pop
js
sub
lds
pop
pop
ret
pop
out
push
sub
mov
in
stos
pop
push
mov
mov
cld
push
fidivrs
adc
inc
fimuls
mov
jge
xor
jg
int
add
aad
or
and
mov
rep
mov
pop
sti
pop
sub
outsl
out
mov
inc
sub
mov
sub
mov
sub
jne
outsb
ret
test
mov
cmp
pop
cmpl
clc
push
mov
mov
stos
jecxz
lock
imul
pop
sub
hlt
in
inc
aaa
iret
scas
popf
add
sbb
adc
mov
das
lret
mov
aas
in
icebp
cs
ds
out
cld
scas
push
in
and
sti
shll
out
mov
inc
jnp
and
or
mov
pop
movsb
cmc
sahf
dec
xchg
lods
pop
cmc
out
test
addr16
in
dec
out
push
or
out
add
loope
out
cmc
lods
add
in
fisubrl
xor
insb
sbb
and
movsl
jmp
nop
push
loop
lret
test
cmc
loope
fcmove
mov
and
push
mov
adc
jb
dec
call
ljmp
pop
dec
outsl
xlat
xchg
cmp
fisubrl
lods
mov
aaa
testl
movsb
pop
fdivl
mov
stos
pop
cli
lahf
dec
mov
int3
out
cltd
xor
pusha
repz
out
mov
inc
addr16
das
mov
bound
fistpl
lods
std
ss
or
xchg
loope
cld
pop
lods
stc
int
scas
xlat
or
out
push
call
dec
adc
xor
mov
cmpsb
dec
add
push
stos
xchg
cmp
aad
insb
jg
aad
or
dec
cmp
mov
std
pop
or
leave
inc
icebp
rcl
inc
test
mov
or
cmp
fidivrs
dec
fs
lret
pop
fnstsw
in
xchg
aas
rcr
fs
mov
call
pop
movsl
pop
dec
and
sbb
push
leave
jg
das
sub
jg
out
in
pop
jno
cmp
in
imul
jmp
sbb
orb
push
das
cltd
cli
in
scas
cmp
orl
push
mov
clc
sbb
rorl
orl
cmp
sub
outsb
push
push
shl
outsb
jns
or
xchg
aam
mov
push
jbe
cmp
mov
rcr
jl
mov
popf
mov
dec
in
in
inc
sub
leave
or
push
pop
outsl
mov
into
sbb
loopne
rorl
setg
sub
aaa
mov
xchg
pop
mov
sub
cmp
out
mov
cli
sub
add
cld
mov
sbb
push
fdivrs
add
sbb
stc
inc
inc
mov
lods
imul
pop
ljmp
dec
mov
aam
mov
add
insb
mov
dec
rep
inc
sub
mov
adc
mov
outsb
pushf
xchg
push
in
and
adc
sub
mov
das
mov
xchg
cmpl
enter
out
notl
add
mov
sarl
mov
mov
jl
cltd
sub
dec
adc
mov
aad
ret
clc
push
pop
sub
idivb
inc
in
dec
sub
mov
cwtl
pop
jb
or
push
jecxz
and
pop
cmp
outsl
mov
jns
lcall
pop
mov
bound
and
repz
xchg
ficomps
jle
scas
scas
fcomps
xor
jge
mov
cld
adc
dec
lock
leave
pop
mov
ja
cltd
lods
shll
pop
out
push
inc
mov
dec
push
test
aam
mov
and
aam
mov
mov
imul
sbb
mov
pop
pop
jne
ficoms
cmp
pop
sarb
and
lret
xor
sbb
call
jge
mov
insl
pop
insl
das
pop
or
test
icebp
xor
dec
jbe
call
cmp
dec
icebp
xor
and
dec
popf
pop
stc
mov
mov
sbb
daa
jp
cltd
rorl
movsb
push
push
aas
jecxz
lret
sbb
ds
stos
or
jns
popf
cmp
push
adc
cmc
cli
dec
lods
sub
ja
inc
rol
dec
outsb
xchg
mov
dec
and
cmp
sbbb
pop
ljmp
fimull
xor
les
push
mov
loopne
js
fndisi(8087
in
outsb
dec
or
lcall
jg
inc
mov
out
je
mov
hlt
push
pop
xchg
int
cmpsb
jae
popf
mov
push
les
repz
cltd
cmc
mov
rcrl
outsl
mov
mov
ffreep
jb
outsl
in
mov
push
rcrb
sti
inc
fisttps
xchg
idivl
mov
xchg
jns
dec
push
pop
xchg
push
stos
pop
data16
xor
inc
pop
push
arpl
mov
test
fs
out
sbb
testb
scas
lahf
inc
lods
aad
dec
lods
mov
xchg
sbb
push
mov
mov
pop
gs
or
into
jbe
sbb
sub
dec
cmpsb
sti
lods
sbb
lcall
xor
sahf
cwtl
addr16
imull
xor
aas
in
push
lahf
jno
fstpl
inc
add
mov
outsl
sbb
jnp
jbe
pop
pop
push
lock
mov
iret
hlt
cmpsl
mov
add
outsl
imul
setno
aaa
mov
mov
or
fldt
ja
mov
test
out
cmp
fmull
pop
lods
adc
enter
xorl
shl
fistpll
cld
jbe
icebp
xchg
mov
pop
stc
or
fbstp
adc
inc
or
sahf
pop
pop
out
mov
ds
fwait
es
cs
mov
in
jnp
repz
push
pop
shr
pop
push
leave
xchg
mov
jae
lds
jbe
xchg
cs
test
pushf
data16
pop
out
adc
fisubrs
and
mov
mov
xchg
outsb
or
push
out
add
mov
into
adc
mov
sbb
mov
pop
icebp
stos
sbb
sarl
sbb
std
fistpl
aam
sarl
fisttps
pop
hlt
push
repnz
inc
mov
sub
subb
shll
jbe
imul
ss
loopne
loopne
mov
mov
xchg
push
adc
adc
test
repnz
adc
testb
or
pmaddwd
mov
fcmovnu
or
int3
fnsave
mov
fidivrs
lahf
insb
sub
or
cmp
fdivl
in
pop
pushf
or
or
cmp
clc
sub
into
sub
jb
in
mov
jge
fwait
jecxz
xor
push
mov
xchg
adc
ret
aaa
and
dec
push
push
sbb
adc
insb
mov
aam
add
dec
in
std
push
cmc
sbb
movsl
jle
xor
sahf
sub
ret
xor
xchg
jae
data16
sub
and
getsec
xor
mov
leave
mov
inc
push
pop
mov
inc
cwtl
jnp
xlat
cld
adc
push
in
mov
push
bound
mov
movsb
cli
fldt
jge
in
xchg
cmp
rorl
popf
inc
in
arpl
sub
xlat
popf
sbb
in
cs
and
inc
pmaxsw
out
mov
pop
loope
push
and
mov
pop
rcrb
push
into
sbb
bound
push
cwtl
data16
mov
shlb
addr16
mov
out
cmp
add
test
inc
bound
lea
push
adc
test
mulb
subb
adc
jnp
dec
add
pop
xor
jmp
pop
lret
mov
add
sub
test
popa
pop
jecxz
xor
cmpsb
mov
mov
enter
push
in
jl
jnp
ret
mov
ds
or
das
dec
sarb
test
mov
es
rcr
std
mov
testb
add
mov
dec
adc
cld
je
pop
xchg
fsubrl
out
sbb
out
adc
ret
and
fcoml
jae
fnstenv
cmp
xchg
pop
scas
in
jnp
fistpl
mov
das
data16
and
out
lcall
pop
inc
push
out
fstpl
inc
in
or
out
repnz
mov
loopne
fdivrs
mov
dec
sub
mov
push
adc
daa
cmpsb
adc
adc
pushf
sarb
fistps
mov
das
das
sub
xchg
out
xlat
dec
lods
pop
nop
sqrtps
or
enter
hlt
cmpl
rorb
push
xor
repnz
int
out
cmc
jns,pn
jle
xor
insb
mov
xor
outsb
mov
mov
aas
pop
out
sbb
mov
mov
aas
mov
lahf
icebp
adc
imull
xor
ljmp
add
jno
dec
xor
jnp
sbb
jb
fildl
ljmp
push
ss
sub
inc
cmc
fldt
or
adc
or
out
test
imul
add
das
ss
push
aaa
sbb
dec
inc
cmp
sbb
sub
jg
mov
in
and
xchg
mov
arpl
stos
fsubs
dec
mov
insb
out
loop
daa
jge
add
inc
mov
repz
mov
ss
test
dec
ss
xchg
insl
mov
dec
mov
and
movsl
testl
xor
cmp
jl
fimull
pop
xchg
mov
xor
sti
bound
dec
jnp
inc
cwtl
inc
xchg
pop
hlt
mov
pop
int3
repz
inc
fmul
inc
cltd
mov
push
inc
push
jmp
add
bound
ds
ds
andps
pop
xor
jbe
fiaddl
outsl
lods
jp
sub
adc
shll
sub
loop
mov
mov
sbb
test
leave
jle
jecxz
push
sub
scas
cli
daa
hlt
fcmovnbe
loop
imul
jecxz
or
and
subb
fsts
adc
and
or
or
test
fldt
mov
lahf
jg
mov
popf
lock
insl
sub
adc
scas
inc
pop
or
or
int3
sbbl
add
outsl
mov
ss
or
pop
sbb
pop
iret
fidivs
out
push
ret
sti
imul
lcall
xchg
sub
mov
and
mov
addr16
rolb
cvtpi2ps
repz
xchg
fadds
pop
xlat
push
push
jle
cwtl
mov
inc
loope
scas
data16
inc
sbb
or
jmp
sbb
sub
push
sti
scas
jge
jg
mov
inc
mov
fsubr
outsb
fidivl
push
lds
pop
lea
adc
fsubrl
and
mov
int
sub
jge
cmp
mov
out
mov
outsb
dec
dec
mov
dec
xlat
mov
cmpb
lds
jecxz
cmc
arpl
sbb
fldt
pop
xor
xor
or
push
sti
aam
pop
bswap
ss
pop
cli
sub
pop
call
lods
sub
lahf
fwait
and
les
pop
shll
lock
repnz
mov
aad
add
xor
xor
sub
xor
repz
js
in
outsl
jnp
cs
xorb
pop
repz
insb
sub
dec
outsl
xchg
stos
dec
inc
or
loopne
ret
fcomip
sbb
fldl
loopne
mov
lds
ja
mov
dec
enter
iret
int3
pop
cld
mov
les
dec
cltd
jge
leave
ficompl
dec
ljmp
aaa
loopne
mov
mov
and
cltd
pop
and
mov
inc
test
sahf
push
push
bound
mov
pop
sarb
leave
xchg
cmpsb
loop
xor
jae
mov
mov
sub
add
inc
or
mov
xor
mov
into
loop
je
lock
ljmp
mov
sbb
jbe
jmp
lret
lods
rclb
jmp
mov
lcall
es
mov
xor
mov
clc
fucomi
test
in
push
daa
xlat
out
pusha
testb
je
outsb
pop
xchg
std
stos
mov
arpl
insb
add
sbb
jb
imul
sub
shlb
lea
pop
cwtl
or
pop
push
stc
dec
mov
mov
lret
jg
jne
out
add
out
cmp
add
dec
pop
and
mov
jmp
mov
cmp
cmp
pop
scas
fbstp
push
sub
pop
sahf
mov
xor
push
sub
ja
outsl
or
idiv
sub
pop
sbb
mov
shll
repz
dec
push
scas
xor
aaa
rcll
lock
aad
fadd
cmc
bnd
std
test
ret
ljmp
out
mov
xor
pop
jge
repnz
push
scas
out
divl
outsb
dec
test
pop
mov
dec
scas
outsl
sbb
adc
add
and
pop
lea
adc
xor
jmp
inc
lcall
lock
mov
fcmovu
push
stos
test
inc
scas
decl
push
test
xor
pusha
cmc
out
sbb
cmp
cmp
out
push
jae
stos
pop
out
sbb
sbb
sub
mov
lcall
push
pop
adc
aas
lea
addl
dec
and
es
in
cmp
adc
imul
mov
jecxz
push
mov
sub
pop
push
cli
cmp
les
add
fildll
push
and
cmpsb
flds
inc
cmp
xor
and
lret
mov
fcmovbe
mov
loopew
xor
push
fadd
xchg
push
jp
into
add
mov
push
cmp
fisttpll
push
fiaddl
xlat
push
dec
mov
xchg
repnz
xor
fimull
mov
pop
daa
lret
pop
lods
pop
push
cmp
mov
inc
enter
adc
fs
shll
inc
mov
das
scas
pop
test
mov
push
xchg
xor
add
cmpsb
ds
sub
ss
cmc
jecxz
push
lods
shll
in
inc
fs
jl
jmp
mov
js
addr16
movsb
mov
int3
mov
imul
les
xchg
cmc
lods
dec
pop
or
pop
int
sub
mov
pop
hlt
push
pop
in
pop
sub
push
lcall
pop
push
and
fwait
fwait
cmp
scas
fdivr
jle
fstpl
ret
aam
out
frstor
aaa
cmpsl
mov
ret
sub
mov
shrb
jb
fdivrs
pop
or
mov
sahf
mov
imul
cmp
mov
lods
xadd
vdivps
je
fidivs
repz
xor
mov
push
xchg
lds
add
xor
repnz
mov
hlt
ficompl
push
imul
shrl
sub
mov
cli
mov
pop
aas
or
cmp
pop
push
mov
jmp
lock
fcomps
jbe
or
pop
xchg
ret
adc
ffreep
popf
dec
lods
and
sbb
test
in
push
hlt
lds
mov
xchg
mov
rcl
dec
mov
test
sarl
jle
jecxz
repnz
scas
mov
ljmp
and
mov
push
sbb
xor
test
cmpsb
stos
ja
mov
outsl
mov
das
call
mov
cmpb
pop
sub
push
adc
cmp
push
in
scas
mov
push
push
ret
xchg
fimuls
xchg
add
sub
xsaves
int3
call
mov
mov
or
push
aaa
push
mov
push
mov
sbb
and
stos
ja
jg
adc
jg,pn
mov
xchg
test
jle
sbb
or
pop
mov
pop
jle
mov
shl
sub
mov
movsb
repz
out
repz
leave
or
int3
adc
inc
lods
cmpsb
push
xchg
jp
jp
fldcw
movaps
pop
push
cld
cld
sti
mov
adc
leave
mov
leave
stos
les
pop
inc
pop
jecxz
lods
cmp
enter
push
scas
frndint
push
lret
adc
or
mov
repnz
addr16
ja
lret
mov
dec
sbb
daa
xchg
push
xchg
cld
inc
cli
jg
leave
jg
jg
jl
dec
pop
repz
mov
mov
mov
andb
pop
add
cmpsb
leave
cli
int
mov
div
fucomip
sti
mov
push
outsb
xchg
lret
mov
and
stos
stc
xchg
jae
jae
push
std
gs
dec
dec
lret
ljmp
arpl
imul
lahf
pop
pop
mov
xor
decb
jle
insl
push
push
mov
dec
outsl
add
add
xchg
scas
mov
lds
test
sub
dec
push
mov
sahf
cmp
js
push
mov
xor
mov
int
pop
in
and
xchg
lret
cld
xchg
bnd
cmpsb
pop
lods
add
ds
mov
add
mov
out
nop
dec
dec
out
lret
xor
outsb
mov
xchg
cmp
call
mov
mov
dec
fisttpl
pop
bswap
shrb
lods
popl
cmpsl
push
shrl
push
ficomps
repz
adcb
outsb
sub
cld
and
repz
add
outsb
mov
adc
adc
rcrl
or
lea
mov
mov
jp
push
das
ja
filds
aad
sbb
aas
sbb
lds
aaa
sub
jg
cmpsb
sub
or
inc
push
and
dec
inc
cmp
or
mov
fsubrl
mov
mov
cs
or
sbb
es
jl
lret
and
cmp
cmp
jecxz
push
imulb
je
and
jmp
mov
aad
cmp
pop
sti
lahf
popf
mov
outsl
add
jno
xlat
jmp
pop
repnz
mov
sbb
incl
scas
xor
mov
int
mov
int3
cmpsl
or
jns
into
cmpsb
pop
hlt
mov
imul
leave
outsl
repz
push
shl
jmp
and
xchg
cmpsb
mov
int
mov
ss
cmp
xchg
das
bnd
lret
fwait
sub
mov
sbb
dec
mov
push
mov
pop
outsl
dec
push
mov
jbe
insb
das
into
clc
ja
pop
fisubl
rorb
cwtl
clc
das
hlt
adc
adc
push
orl
pop
sub
push
xchg
xchg
sub
syscall
xchg
lret
dec
stc
cld
sbb
adc
subb
out
mov
mov
push
jmp
hlt
and
sbb
loop
sub
push
sub
fs
insl
push
mov
pop
repz
jns
imul
hlt
push
xchg
daa
scas
push
mov
cld
push
mov
sub
scas
mov
xor
push
dec
idivl
jecxz
imul
movb
in
pop
fists
lcall
test
dec
outsb
mov
mov
sbb
push
outsl
and
insb
sbb
or
addr16
mov
xchg
or
into
out
lret
bnd
adc
xchg
mov
fwait
jge
sbb
aaa
cwtl
mov
mov
jle
ficomps
ds
mov
mov
sbb
cli
inc
push
pop
mov
imul
cmp
jecxz
inc
add
int3
cmpsb
das
jbe
mov
dec
lret
xchg
jg
andl
rcl
lcall
scas
sahf
je
cli
int3
mov
enter
jne
inc
out
sub
add
ja
loop
mov
sbb
xor
xchg
call
test
xor
sub
stos
dec
inc
sub
sub
adc
and
push
call
cmp
or
pop
mov
ljmp
lock
mov
and
rcrb
in
inc
jae
sbb
pop
push
pop
pop
cwtl
ja
fildll
hlt
adc
mov
insb
enter
cmc
sbb
push
pop
mov
mov
daa
nop
mov
xchg
cmp
call
dec
cmp
dec
adc
sub
xchg
shll
call
clc
subb
dec
lahf
xchg
mov
or
cwtl
mov
xor
xchg
out
jmp
jmp
cmpsb
repz
jle
shrl
inc
adc
in
fwait
push
dec
dec
aam
scas
mov
mov
adc
jle
dec
daa
and
cmpsb
pop
or
gs
adc
test
scas
push
mov
jge
out
insb
pop
aaa
xchg
inc
fstl
push
fstps
test
scas
jne
jl
int3
in
out
push
or
jg
mov
into
pop
pop
pusha
gs
loop
mov
adc
div
xchg
pop
lods
or
pop
rcrb
and
das
adc
push
xchg
rcrl
fists
push
loopne
mov
mov
lds
stc
mov
mov
mov
pushf
xchg
cli
mov
inc
loopne
stc
add
cmp
ret
inc
rcll
iret
pop
pusha
mov
stc
bound
mov
fisttps
sbb
and
mov
sub
movsb
mov
mov
pop
clc
loope
push
fcoml
std
jb
sti
push
imul
xor
adc
and
imul
fildll
adc
add
pop
mov
fldz
frstor
jp
fstpt
mov
dec
adc
sti
ja
xor
add
das
scas
daa
mov
mov
lock
lret
idivl
scas
or
xor
out
jg
push
xor
mov
ljmp
xchg
stos
inc
add
ret
jnp
pop
push
sub
mov
jecxz
sub
inc
cltd
hlt
mov
in
push
pop
xchg
inc
inc
jge
cmpsl
jno
or
lods
mov
mov
daa
pop
dec
lds
movsb
call
sti
fistl
push
ret
cmp
arpl
setns
dec
aas
and
push
addr16
sbb
test
xor
clc
xor
or
inc
pop
sbb
dec
push
inc
test
xorl
dec
mov
xlat
ss
pop
out
mov
stos
xchg
adc
cs
pop
or
push
push
jo
jge
dec
lret
fbstp
jne
cltd
sbb
jns
adc
pop
mov
repz
jae
lret
roll
jmp
xchg
pop
cmpsl
sbb
mov
mov
lock
fnstcw
scas
mov
inc
pop
test
jge
bound
stos
ja
lahf
sahf
push
clc
cli
lods
jo
mov
scas
outsl
push
adc
xchg
into
mov
xor
adc
mov
mov
mov
adc
iret
scas
cmp
jle
testb
aas
or
in
fcomps
imul
mov
pop
outsl
pop
pop
xor
push
out
sbb
out
xlat
stos
jae
sub
cmc
xorb
pop
hlt
shlb
mov
int
pop
mov
fwait
std
jbe
sub
gs
mov
ret
sbb
popf
sti
sub
mov
fistl
addb
xor
add
sub
mov
mov
cmpsl
bound
and
sti
outsb
mov
pop
mov
cmp
inc
add
dec
mov
aam
negl
cwtl
push
and
inc
ret
mov
lret
pop
jnp
lods
je
cld
dec
ret
in
or
xor
daa
fwait
or
in
fists
push
in
sbb
pop
ja
xchg
pop
out
cmpsl
fsubs
das
movsb
call
mulb
cmp
and
fstpt
ja
ds
mov
incb
pop
mov
popf
mov
cli
inc
sub
decl
cld
out
scas
frstor
pop
mov
outsb
push
jl
outsb
sbb
mov
jp
scas
stos
mov
daa
jl
jmp
push
lock
mov
inc
mov
cwtl
into
insl
inc
loopne
jne
jle
leave
repnz
std
pop
dec
mov
fwait
pop
mov
cld
fwait
mov
mov
inc
cmpsl
add
fbld
mov
dec
out
pop
push
mov
fucomi
pop
add
in
enter
mov
outsl
xor
test
xor
fdivs
sub
subl
xchg
ljmp
and
cmpsl
stos
xor
mov
pop
gs
ret
adc
mov
and
or
fcompl
iret
dec
fldenv
mov
sub
xor
test
iret
jne
ret
jge
roll
mov
sbb
fwait
push
cld
sarl
pushf
adc
fstpl
test
jle
fnstsw
test
mov
inc
pop
jmp
sahf
daa
xchg
scas
das
mov
ja
xchg
jg
lds
adc
dec
mov
or
xchg
xorl
jmp
fdivrs
in
and
xor
pop
fwait
pop
test
addr16
lahf
jle
scas
push
add
lock
pushl
dec
iret
rol
pop
imul
add
cmc
daa
cmpsl
mov
cli
cwtl
int3
and
push
sbb
dec
scas
not
shl
fwait
xor
icebp
jo
in
call
jmp
mov
imul
orb
xchg
mov
mov
loop
lds
pushl
mov
sub
mov
dec
cmp
pop
inc
pop
scas
push
push
inc
xor
scas
das
cmp
filds
dec
mov
mov
push
test
loopne
ret
es
lret
xchg
jge
movsb
xchg
stos
in
je
lret
xchg
test
shlb
push
or
push
rcrb
insb
pop
and
ror
loopne
mov
test
ja
mov
pop
sti
mov
lods
cld
es
aaa
out
mov
mov
sub
cli
push
or
test
cmp
lahf
add
push
iret
out
call
inc
pop
ror
cmpsb
setl
xor
sbb
xor
std
and
bsr
lods
ret
pop
add
mov
adc
into
shrb
xor
sub
aaa
lret
push
mov
imul
das
dec
outsb
movsl
sbb
add
mov
ja
jg
aam
mov
and
outsb
mov
scas
or
notb
das
xchg
iret
jp
mov
add
outsb
jns
enter
out
pop
in
fstps
push
jl
mov
pop
lea
pop
incl
outsl
adc
pop
inc
das
mov
shrl
push
xor
lock
add
cmp
stos
aas
lcall
repz
xor
jnp
pop
bound
mov
imul
gs
arpl
div
rcrl
pop
gs
ss
adc
clc
sti
ds
lds
xchg
pop
int
cli
cwtl
push
mov
and
out
xor
jl
pusha
cmp
mov
jbe,pt
xlat
sbb
or
repz
pop
in
jecxz
ja
lcall
notl
sub
stc
inc
push
test
aas
sbb
push
stc
cltd
adc
test
imul
xchg
push
int3
inc
lock
hlt
jl
outsl
or
in
mov
repz
push
lods
repz
outsb
mov
lock
xchg
rclb
into
or
lret
jmp
adc
cli
sub
pop
out
mov
sbb
repz
stos
sti
sbb
sub
inc
sarl
daa
cli
cmp
mov
testl
push
xchg
out
mov
ja
fbld
cli
mull
pop
notl
xlat
repnz
xor
out
loope
mov
sbb
mov
cmc
mov
repz
stos
cs
mov
inc
insb
jle
pop
fidivl
es
xchg
cli
neg
inc
cli
in
and
sti
jl
in
cli
pop
cmp
pushf
jecxz
idivl
and
sbb
inc
cmpl
test
ror
mov
jb
aad
daa
call
pop
mov
dec
jo
pop
inc
loopne
or
ficompl
rorb
jnp
dec
jo
ficompl
outsb
cmp
cli
and
pop
mov
mov
scas
cmp
ljmp
or
pop
out
shl
imulb
xlat
lock
leave
repz
lcall
loopne
adc
xchg
mov
inc
jp
out
mov
xchg
daa
leave
xchg
stos
cltd
stos
pop
push
andl
cmp
fistps
pushf
lea
xor
jae
adc
mov
add
or
cli
ljmp
pushf
icebp
xchg
and
push
les
mov
mov
lea
les
add
hlt
and
push
cwtl
push
lods
jp
xorl
fs
sbb
mov
mov
mov
pushf
loopne
push
dec
inc
add
es
rep
aas
add
cmp
fdivrl
fsts
xchg
lods
cmp
mov
stc
scas
jle
mov
push
inc
jns
or
add
stos
call
test
add
jmp
cmp
mov
mov
mov
cmpsb
test
inc
jmp
mov
pop
pushf
shrb
inc
mov
cmp
jl
and
fstpt
add
mov
cmpsl
sbb
mov
jmp
pop
sub
repz
cmp
outsl
or
jecxz
jl
roll
test
jp
mov
pop
repz
dec
sti
and
cmpsb
in
imul
insb
aaa
out
pop
cmp
jns
push
pop
cmp
and
inc
push
call
hlt
push
std
and
cs
aas
mov
adc
in
jl
push
ja
mov
fisubs
ja
cmp
inc
adc
inc
out
sub
lret
sub
jmp
rcl
es
adc
and
int3
mov
lahf
inc
adc
fcmovu
pop
mul
mov
xor
je
push
jo
mov
sbb
sbb
xor
out
jl
rcr
jle
fisttpll
push
insb
sub
add
mov
xchg
sahf
push
fnsave
jae
ret
fsubl
mov
fwait
adc
sbb
pusha
scas
ljmp
pop
movsb
xchg
push
repnz
inc
jge
push
scas
jge
cmpsl
adc
pop
ljmp
jp
gs
sub
ja
xor
mov
fs
mov
sub
lods
fimull
test
pop
xchg
jg
insl
and
jg
or
sbb
sbb
push
add
jne
pop
shrl
jnp
lahf
negb
repnz
shrb
adc
mov
out
cmp
subl
pop
cmp
sub
in
mul
inc
in
cmp
add
sub
sti
jge
mov
fdivp
sub
mov
mov
sbb
push
aad
in
cmp
mov
pop
push
rcll
in
daa
stos
xchg
insl
ret
movsb
inc
adc
mov
jne
pusha
in
stc
jno
outsb
arpl
or
xchg
lock
xor
pop
mov
inc
aam
fwait
pop
popf
mov
and
ror
add
xor
mov
push
fst
or
jg
hlt
mov
lods
push
xchg
sbb
cmc
push
rorb
aaa
in
mov
shrl
push
add
fistpl
adc
inc
insl
ljmp
cwtl
add
enter
into
lods
sub
lcall
mov
int3
int
xor
lret
ficoms
les
mov
dec
enter
inc
sbbl
mov
cmp
cli
fimuls
aaa
idiv
push
cmp
jb
lret
sub
inc
mov
lret
call
lods
cli
pop
jmp
aad
sbb
mov
pop
and
and
bound
cmp
repz
jmp
hlt
lcall
cld
out
cmpl
aas
pop
mov
imul
pop
shll
scas
inc
mov
sahf
and
ss
fwait
out
mov
sub
iret
cmpsl
insl
lcall
xlat
fdiv
adc
sub
or
mov
mov
jmp
push
jae
mov
xchg
mov
inc
popf
sbb
add
sahf
shl
cmp
fdivp
arpl
inc
outsl
sbb
inc
lahf
lahf
out
pop
xchg
gs
xchg
pusha
lcall
inc
sub
loopne
sti
movsl
repnz
adc
pop
iret
icebp
mov
push
xchg
aad
cmpsl
add
cs
fwait
in
xchg
adc
jnp
fiadds
sub
clc
mov
push
push
push
imul
pop
int3
mov
adc
test
xorb
xor
xlat
inc
subb
mov
cmp
into
pop
int3
fnstenv
mov
xchg
pop
push
mov
cld
sub
cmc
jge
jmp
hlt
sub
mov
push
shl
dec
xchg
jmp
mov
pushf
jg
fistpll
out
dec
shr
aas
jle
filds
clc
shll
out
xchg
xor
loop
sbb
loope
loop
aas
std
daa
les
add
repz
dec
jl
hlt
dec
sbb
sti
inc
add
xchg
ds
xchg
dec
xchg
and
aam
in
in
mov
jnp
fld
aas
les
inc
mov
test
int
cmpsb
movsb
pop
scas
mov
outsb
ud2
and
jge
add
xlat
adc
xchg
add
addr16
movsb
add
test
scas
mov
xchg
mov
leave
into
cmpsl
scas
iret
imul
add
fnsave
jae
loopne
xor
outsl
in
mov
mov
in
jnp
hlt
mov
clc
jle
sub
push
dec
cmp
sti
cmp
jns
iret
leave
das
into
fmul
pop
or
lret
adc
ss
out
mov
jg
imul
push
mov
pop
inc
gs
pop
pop
cli
sbb
push
lahf
test
push
call
xchg
mov
test
inc
jp
outsl
hlt
cmp
dec
or
sub
add
mov
je
sbb
idivl
lahf
push
push
iret
mov
push
into
clc
cwtl
mov
mov
push
mov
in
into
in
test
adc
mov
and
jnp
cltd
rcr
adc
mov
sahf
idivl
sbb
jp
push
cwtl
loop
mov
sub
mov
xchg
out
mov
repz
ss
out
mov
and
xor
jecxz
sbb
lret
sbb
inc
cli
and
jg
outsl
mov
hlt
lds
lret
rcl
lret
mov
data16
mov
ljmp
add
xchg
xor
lret
pop
cmpsl
decl
xor
xor
adc
push
enter
stos
jp
fnstenv
loope
into
lahf
out
push
jns
mov
cmp
push
push
por
or
lock
lahf
lock
or
push
dec
lcall
rclb
sbb
icebp
scas
mov
je
mov
shrb
repz
and
pushf
fidivl
or
mov
sbb
xchg
addr16
imul
imul
lret
push
fidivrl
stc
xor
lds
mov
jmp
push
sub
andl
lret
test
addr16
and
push
cmpsl
std
adc
jl
hlt
add
ljmp
outsl
popf
lahf
clc
inc
movb
xchg
add
jge
jp
pushf
xchg
mov
mov
push
add
or
int
mov
scas
nop
cld
mov
dec
iret
lret
or
ret
xor
cmp
movsl
mov
pop
sbb
call
imul
pop
xchg
mov
std
mov
xchg
and
cmpb
mov
inc
scas
pop
and
bound
pop
pop
inc
xor
leave
jge
sahf
js
add
mov
in
mov
push
in
in
push
mov
pop
jo
mov
int3
push
roll
mov
lea
xchg
lcall
pop
or
push
fldt
into
testl
sbb
push
xchg
repnz
sub
test
out
mov
push
lods
mov
mov
lret
in
sbb
stos
add
jne
cmp
push
ja
pop
xor
sub
mov
lcall
scas
insb
jae
jae
jbe
push
add
in
in
test
ja
test
sbb
push
pop
rol
push
sub
sbb
cmp
shlb
mov
frstor
mov
pop
lods
dec
ljmp
ss
cmp
ja
dec
and
aaa
divl
xor
dec
sub
cmpsb
and
aam
push
dec
je
out
dec
fildl
int3
or
mov
mov
dec
or
sub
inc
hlt
dec
mov
popa
lea
test
jge
fldenv
insb
dec
sub
aaa
div
ror
xlat
pop
adc
cli
in
sbb
shrb
mov
stos
xor
jo
pop
and
or
push
add
xor
sbb
ds
ret
add
mov
sti
imul
mov
mov
enterw
test
add
inc
adc
cmc
push
out
loope
es
loopne
jecxz
loopne
clc
xor
pusha
arpl
mov
mov
push
lds
or
xchg
pop
out
pop
aad
xchg
cmpsb
sub
scas
loope
xor
jle
lahf
and
inc
out
or
mov
or
in
inc
sub
cwtl
cld
ret
jo
xor
in
and
rcrb
xor
fisttps
xor
rcr
fcompl
or
cmpsb
ljmp
lea
mov
pop
cmp
push
divb
add
scas
mov
in
pop
daa
scas
inc
cmc
dec
push
loop
scas
and
dec
lret
fidivrs
insb
rorb
in
sub
push
push
call
mov
push
call
and
jne
push
call
test
jne
test
jne
push
push
call
mov
push
push
push
call
push
push
call
and
jne
or
jne
push
push
call
test
jne
push
call
mov
push
call
cmp
jne
cmp
je
mov
push
call
mov
push
call
cmp
jne
push
push
call
push
call
cmp
jne
push
call
mov
push
call
mov
push
push
call
push
call
mov
push
call
cmp
jne
push
push
call
push
call
mov
push
pushl
call
mov
push
push
call
push
call
cmp
je
mov
push
call
mov
push
push
call
push
push
call
push
push
call
lea
push
push
push
call
mov
mov
mov
subl
push
call
and
jne
push
call
mov
push
call
cmp
jne
cmp
jne
or
je
mov
addl
call
mov
push
call
mov
movl
push
call
cmp
jne
cmp
je
cmp
jne
push
call
mov
push
call
mov
pushl
push
call
cmp
jne
push
push
call
pushl
push
push
call
shrl
push
call
mov
pushl
call
addl
call
inc
inc
add
or
push
enter
or
mov
add
dec
andb
mov
add
push
push
call
push
push
push
push
push
push
push
call
mov
mov
xor
mov
mov
rep
inc
cmp
jne
pop
pop
pop
leave
ret
test
mov
adc
and
push
mov
sub
push
push
call
push
push
push
push
call
push
push
call
and
je
mov
push
call
cmp
jne
and
jne
mov
mov
cmpl
je
decl
roll
negl
rorl
add
jmp
pop
pop
pop
mov
pop
ret
and
pushf
add
dec
pushf
add
pop
pushf
add
push
add
jbe
add
add
add
push
pushf
add
cs
add
fwait
add
cmp
add
dec
pushf
add
pop
pushf
add
push
add
jbe
add
add
add
dec
inc
push
dec
inc
dec
xor
cs
dec
dec
add
add
insb
jae
jb
outsb
inc
add
add
push
imul
insb
insb
outsl
arpl
add
add
je
jb
arpl
fs
jae
add
add
insb
jae
jb
insl
jo
add
add
dec
outsl
popa
fs
imul
