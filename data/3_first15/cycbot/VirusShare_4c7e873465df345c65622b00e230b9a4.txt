stc
pop
lock
out
rcll
movsl
xchg
mov
fbld
dec
jl
sbb
aaa
jl
add
movsl
into
mov
xchg
adc
mov
mov
clc
icebp
pop
or
ret
hlt
mov
adc
inc
add
shr
or
add
mov
sbb
mov
cwtl
pop
jnp
dec
outsb
aas
pop
scas
sahf
aad
jl
out
icebp
mov
mov
add
push
cmp
xor
or
sub
or
fstl
add
mov
stc
outsb
xor
xor
mov
mov
mov
into
stos
sti
aad
decl
bound
mov
insl
jae
add
jmp
lods
mov
jb
mov
in
iret
les
movsl
pop
pop
sbb
mov
add
add
mov
jecxz
dec
push
pop
es
jmp
mov
jmp
add
jae
loope
icebp
and
sbb
test
mov
bound
mov
cmp
add
add
mov
inc
sub
stc
lds
pushl
ds
add
mov
and
loop
mov
loope
mov
sub
add
jp
ljmp
mov
mov
mov
test
cmp
mov
mov
adc
sahf
shl
adc
mov
add
mov
adc
int
nop
add
jmp
push
imul
push
orl
das
inc
add
or
mov
xor
jmp
and
mov
into
pop
clc
lret
addr16
pop
xchg
imul
add
lock
jb
mov
adc
addb
sub
mov
mov
add
add
and
lahf
pop
xchg
xchg
add
out
or
loop
mov
push
add
mov
add
mov
mov
inc
sub
pop
ljmp
add
test
pop
sub
adc
mov
add
xor
mov
dec
cmp
adc
js
pusha
add
add
testb
mov
mov
xor
mov
or
jbe
sub
add
int3
mov
fxch
mull
add
stc
loopne
mov
imul
in
and
loope
cmc
sti
mov
push
push
mov
sub
push
push
push
push
push
push
call
lea
es
mov
movzbl
cmp
ss
push
call
mov
cmp
je
es
xchg
add
xchg
cs
sub
mov
push
es
call
test
jne
jmp
nop
leave
push
es
mov
test
je
bnd
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xchg
or
popf
jmp
sub
add
push
fcompl
inc
jns
add
and
mov
mov
insl
outsl
fcomps
mov
add
jnp
fwait
outsl
ja
sbb
nop
add
add
nop
add
rcll
mov
out
add
cmpsb
mov
psubusw
sub
cmpsl
ds
fisttpll
rorl
add
xorl
mov
push
xchg
incl
imull
mov
insl
mov
insl
mov
xchg
nop
add
mov
adc
jle
add
push
lock
repz
test
add
aaa
imul
mov
mov
add
and
inc
add
cs
es
add
mov
mov
or
add
pop
adc
mov
adc
das
inc
add
add
mov
loopne
mov
sub
or
push
cmp
add
mov
mov
mov
mov
mov
stos
pushf
pop
out
push
mov
insl
pop
push
out
sbb
add
cmp
push
out
jae
add
mov
or
add
addr16
adc
add
cmc
or
inc
xchg
xlat
sub
mov
popf
pop
add
mov
js
mov
sahf
repnz
push
jnp
add
stc
mov
fcoml
in
in
cmp
jno
sub
dec
pop
leave
movsb
and
div
dec
ss
pop
jbe
js
inc
cmp
lret
adc
jbe
jp
cmp
mov
push
or
and
fsubl
mov
pop
dec
push
push
add
jno
push
mov
pop
data16
cmpsb
add
push
inc
mov
adc
adc
mov
pusha
add
stc
sub
mov
or
cmpsb
aad
js
dec
div
outsl
das
mov
mov
imul
into
xchg
adc
mov
mov
add
mov
vaddsd
in
mov
and
mov
xor
mov
sbb
jg
imul
leavew
and
addl
fwait
dec
movntq
out
fs
xor
mov
xor
es
lds
in
pop
jb
mov
add
pop
pop
pop
insb
idiv
into
adc
or
scas
sbb
mov
mov
push
movsl
les
pop
outsb
push
pop
bound
mov
mov
imul
xchg
jge
aam
lahf
lea
mov
imul
lret
inc
mov
outsl
addb
xchg
push
add
xor
add
add
jno
xor
aad
ds
sahf
jbe
popa
or
dec
hlt
xchg
in
jnp
in
xchg
mov
jecxz
out
xor
cmpsb
rcll
mov
popa
xchg
push
fsubrs
pop
pop
cwtl
xchg
add
lods
out
adc
mov
xchg
add
and
addb
bound
mov
pop
insl
insl
sub
xchg
sidtl
mov
push
jecxz
add
stos
popa
lods
xor
sub
pop
imul
cmp
out
xor
add
mov
or
cs
cltd
xor
loope
add
and
fwait
lods
repnz
jg
rolb
mov
and
lcall
test
adc
add
xchg
add
mov
cmp
in
mov
pusha
add
add
pop
sub
bound
mov
jb
mov
or
push
add
cmp
frstor
push
loop
mov
lods
xchg
inc
outsl
repz
daa
gs
data16
mov
mov
cmpsb
push
outsl
popa
leave
enter
scas
aas
aaa
cmp
add
pop
mov
dec
inc
push
pop
xchg
cltd
mov
mov
popf
jns
decb
in
aaa
pop
sti
sub
add
mov
add
add
loopne
mov
xor
or
clc
xchg
mov
stc
xor
add
add
fadds
mov
add
mov
mov
mov
dec
xchg
push
inc
pop
jg
push
add
jmp
cmpsb
aam
add
jbe
pop
lock
push
data16
mov
es
push
sub
in
push
negb
fucomi
mov
xor
mov
mov
inc
addb
and
mov
add
mov
inc
add
push
divb
imul
call
gs
outsl
dec
xor
mov
lahf
mov
mov
int3
adc
sahf
push
add
add
xchg
cmp
mov
push
lcall
mov
mov
mov
mov
inc
mov
add
aaa
mov
lret
movsl
xchg
mov
and
sbb
mov
add
jno
and
mov
subl
mov
inc
arpl
adc
lret
mov
xchg
cmc
ret
addb
jg
add
mov
add
dec
or
jo
mov
daa
rolb
jecxz
mov
rol
cmp
pop
sbb
fucom
ds
add
xorl
adc
hlt
sbb
add
push
add
xchg
or
addr16
jae
cmpsb
aad
in
add
mov
nop
add
or
repz
sbb
and
mov
add
add
add
pop
push
add
lods
jle
add
pushf
insb
jp
int3
cmc
add
add
sbb
and
mov
adc
mov
cs
push
add
or
add
pop
xor
ret
in
push
pop
mov
or
stc
scas
mov
in
scas
test
stos
out
cmp
mov
jle
pop
push
add
stos
sarl
fisubs
xor
pop
jecxz
sbb
mov
add
idivl
inc
jne
mov
pop
outsl
std
mov
adc
mov
inc
stos
sti
dec
add
mov
adc
test
lret
xor
inc
inc
add
and
mov
pusha
add
mov
push
adc
scas
aad
push
adc
lods
aad
sbb
mov
test
add
add
mov
cmp
or
jns
out
dec
jb
mov
add
or
mov
mov
push
xchg
scas
jbe
add
push
xchg
je
mov
or
add
mov
mov
mov
mov
pop
mov
mov
lret
mov
cmc
xchg
add
jmp
mov
fstpt
add
cmp
in
ret
test
add
leave
and
xor
out
fdivs
push
add
adc
mov
popa
sub
cmpsl
adc
mov
daa
stc
aas
rolb
mov
add
push
add
jmp
sub
andl
inc
int3
adc
gs
cmp
je
xchg
imul
nop
add
adc
pop
icebp
push
outsb
scas
jae
aaa
test
add
mov
in
clc
inc
xchg
cld
cltd
adc
fsubrl
dec
mov
mov
jecxz
push
xchg
lods
pusha
add
jecxz
cltd
lea
aam
mov
xchg
aas
push
xor
mov
aad
pop
sbb
jle
sub
mov
or
xchg
add
mov
imul
repnz
jl
mov
mov
dec
cmp
mov
std
or
mov
push
add
dec
rolb
push
stc
fistl
stc
sub
xorl
cmp
repz
xchg
mov
mov
scas
adc
fs
sub
xchg
lock
xchg
fstp
xlat
dec
push
add
add
ljmp
adc
mov
cli
decl
add
cmp
js
inc
pushf
inc
pop
stos
dec
pop
mov
mov
xchg
out
add
adc
fs
ret
movsb
mov
rolb
mov
mov
push
scas
pushf
inc
fs
or
xchg
dec
sbb
daa
pminsw
add
pop
jae
add
mov
adc
icebp
sub
push
stos
jae
add
inc
add
es
push
pop
sbb
pop
pop
dec
in
push
add
mov
and
mov
push
jp
testb
fmul
das
hlt
push
push
cmp
mov
mov
movsl
inc
gs
mov
add
mov
mov
add
xchg
pop
lahf
bound
mov
test
ds
mov
repnz
push
daa
popf
mov
call
add
push
int
in
sub
lock
scas
pop
xor
cld
nop
add
add
je
xor
mov
cmpsl
imul
jecxz
push
fsubrs
or
fwait
imul
add
sbb
inc
xor
int
add
mov
mov
xor
mov
sub
rolb
jle
mov
mov
ret
xchg
bound
mov
xor
mov
mov
push
sub
and
add
movb
movsb
dec
inc
push
add
mov
mov
xor
mov
imul
in
add
and
mov
add
mov
add
cli
push
add
pusha
add
dec
das
push
imul
insl
insb
cmc
sbb
bsr
inc
loopne
mov
add
mov
aad
and
mov
rolb
repz
inc
dec
jo
mov
dec
adcl
mov
pusha
add
mov
dec
sbb
mov
call
xor
mov
push
rolb
mov
mov
pusha
add
push
aaa
or
xor
test
add
mov
adc
mov
fwait
sbb
xlat
mov
cwtl
sub
mov
stos
cmp
pop
fwait
movsb
scas
push
cs
rcll
movsl
loop
mov
xor
notb
xchg
stos
sbb
scas
jmp
mov
add
push
lods
fisttps
or
gs
adc
add
add
add
add
jae
add
icebp
lahf
stos
clc
addb
lret
mov
xor
mov
mov
add
push
push
inc
loop
mov
push
sub
mov
adc
movsb
stos
aad
mov
cmp
decl
int3
popa
xchg
sahf
fdivrs
jb
mov
mov
pop
arpl
mov
mov
pcmpgtb
rolb
mov
sub
mov
lret
and
mov
mov
pop
ljmp
add
push
pop
xor
stc
iret
sub
mov
cmc
mov
inc
add
movsb
add
mov
arpl
pop
lret
or
mov
add
pop
jmp
sbb
imul
add
mov
cwtl
xchg
fstl
add
sbb
xor
mov
mov
mov
nop
add
out
icebp
or
cmp
cmc
xor
mov
mov
cmp
add
mov
mov
add
mov
sbb
mov
adc
mov
jns
lea
clc
xchg
stc
mov
add
rolb
loope
in
ds
lods
pusha
add
dec
add
sub
and
cmpsl
cwtl
jo
mov
adc
mov
rolb
ljmp
add
adc
add
inc
add
pop
clc
dec
scas
or
add
fdivrp
icebp
xor
push
decb
add
dec
jae
lods
mov
jne
dec
and
pop
leave
repnz
xor
mov
mov
add
jge
stc
sub
xchg
push
xchg
fistps
pop
mov
mov
add
cmp
xor
dec
bound
mov
dec
mov
ds
or
add
aad
add
mov
xchg
add
pminub
xchg
adcl
inc
or
mov
mov
xchg
divb
xchg
dec
or
xor
add
mov
cmp
insl
dec
int
push
aam
lret
pop
int
add
add
aad
lds
scas
shrl
scas
pusha
add
pop
or
out
mov
fldl2t
movsb
lcall
inc
mov
mov
xchg
divl
pop
add
mov
in
test
add
add
add
push
xor
mov
sti
sahf
push
add
icebp
mov
jl
mov
sbb
or
push
sub
mov
add
mov
add
mov
xchg
test
mov
add
xor
insb
xorl
cmc
mov
enter
sarl
dec
lds
rolb
lods
xchg
push
sub
jl
add
nop
add
mov
ds
jecxz
xchg
add
mov
xor
inc
outsb
push
add
lods
loop
mov
mov
dec
mov
adc
movsl
bswap
cmp
bound
mov
mov
push
call
mov
add
add
cmp
push
dec
mov
call
add
lret
adc
lret
out
jle
sti
je
ds
mov
or
cwtl
hlt
pop
jmp
in
add
mov
mov
mov
cmp
or
cmpsl
inc
shll
insl
or
xchg
xor
fstpl
scas
stos
inc
mov
inc
push
rcll
in
mov
arpl
and
mov
add
test
aas
jbe
ret
sub
mov
mov
add
add
jae
xlat
ljmp
cmp
jmp
call
xchg
cs
sub
sub
dec
mov
into
mov
pushf
add
inc
adc
ret
fwait
mov
or
mov
sub
cmp
cltd
push
mov
sub
and
mov
movsl
or
or
out
test
inc
jne
mov
enter
pop
push
insl
ja
jo
mov
jmp
add
mov
or
cli
int
push
mov
fdivr
inc
das
xor
mov
mov
cmp
add
sbb
mov
addb
call
sbb
addb
dec
xor
mov
data16
into
sbb
stos
pop
cltd
xor
pop
push
add
or
int
push
not
call
dec
enter
stos
loope
out
push
call
add
pop
fwait
loop
mov
movsb
mov
ja
bound
mov
mov
add
jmp
jge
dec
cs
adc
add
neg
movsb
add
mov
rolb
das
pop
xlat
cltd
sub
adc
add
sub
sti
xor
add
mov
xchg
jb
mov
add
insl
xchg
inc
fld
dec
cmpsb
mov
xor
add
clc
lds
lret
add
xchg
dec
popa
sti
xor
mov
xchg
addb
cli
xor
mov
xlat
push
enter
jae
scas
cmp
popa
das
repnz
xchg
add
or
lahf
and
or
outsb
rcrl
lahf
das
mov
mov
fcoms
add
lea
and
testl
sbb
push
mov
push
ljmp
add
jmp
mov
ja
add
out
in
mov
lahf
mov
push
fistl
add
fwait
push
lahf
add
mov
inc
add
adc
mov
mov
popl
add
cmp
test
adc
mov
mov
js
sti
xor
mov
mov
out
push
adc
mov
rolb
mov
mov
out
ss
add
je
push
rcrl
repnz
mov
dec
xchg
inc
inc
arpl
ficoms
inc
mov
stos
pop
arpl
mov
add
sbb
rorl
jmp
mov
add
or
push
and
mov
movsb
dec
cmpsb
lods
xchg
mov
rolb
mov
mov
mov
inc
add
ljmp
inc
add
xchg
je
je
cli
aaa
scas
push
jmp
mov
pop
pop
push
and
mov
lock
mov
rolb
xor
mov
xchg
inc
and
sub
roll
push
mov
icebp
mov
test
add
test
xchg
inc
gs
mov
mov
push
sub
stos
push
arpl
jo
mov
mov
pop
sarl
in
add
mov
js
mov
add
bound
mov
mov
mov
addb
data16
iret
lret
xor
mov
add
cmp
jnp
add
popf
push
arpl
xchg
mov
inc
cld
jecxz
rolb
cwtl
push
repnz
adc
fs
lea
popf
inc
lcall
cmc
adc
mov
mov
clc
dec
mov
inc
pop
and
rolb
mov
dec
cli
push
add
mov
and
mov
ja
add
xchg
xchg
imul
ljmp
cmpl
or
cmpsb
mov
sub
mov
add
sbb
xchg
aam
add
dec
pusha
add
mov
mov
add
jns
pop
and
xor
add
and
loopne
mov
stc
inc
xchg
in
and
mov
xchg
mulb
mov
shrl
xor
cmp
add
jecxz
add
rsqrtps
mov
add
mov
jnp
or
pop
sbb
add
add
adc
mov
add
out
add
cld
call
add
adc
mov
es
test
fnstcw
stos
aad
popf
in
clc
test
ja
inc
das
sbb
mov
addr16
or
xchg
push
jb
mov
inc
add
mov
popf
inc
rorl
imul
add
xor
lock
pop
mov
add
lock
mov
add
test
mov
daa
shll
sahf
loope
lds
cmpsl
or
out
into
mov
in
sbb
in
out
cmpsl
xor
add
sahf
pop
mov
pop
adc
add
push
sub
sbb
enter
mov
pop
add
mov
add
fisttps
add
push
dec
ds
add
push
nop
add
call
add
in
push
dec
pop
dec
dec
mov
add
test
mov
inc
add
push
pop
push
add
add
push
pop
mov
filds
iret
mov
push
stc
lods
insl
fs
cmp
das
idivl
xor
inc
rcll
stc
sub
add
fcompl
push
mov
cmp
pop
les
sbb
add
pop
sbb
pusha
add
pop
rolb
mov
pop
and
mov
jge
pop
add
mov
inc
fistl
bound
mov
imul
ds
jbe
add
mov
ja
pop
in
mov
in
cmp
je
lahf
rcll
dec
clc
jge
mov
in
pop
sub
inc
in
sbb
add
sub
push
ret
clc
xchg
addb
pop
jns
bound
mov
loop
mov
mov
insb
aam
add
mov
mov
xchg
add
mov
mov
dec
dec
push
les
cmp
pusha
add
in
jp
add
sti
and
mov
ja
cmp
lahf
mov
mov
dec
mov
jne
jb
mov
and
inc
aad
out
hlt
bound
mov
adc
add
mov
mov
dec
add
jle
test
push
movl
lea
add
je
add
pushf
jle
clc
aam
ja
ret
out
leave
sti
xchg
sahf
bound
mov
add
and
aas
pop
inc
jle
test
dec
inc
in
hlt
inc
loop
mov
addb
test
mov
add
and
mov
lret
je
jns
pop
xor
mov
mov
sub
sub
mov
xchg
ljmp
mov
pop
fidivrl
rolb
daa
and
mov
int3
push
popf
push
jo
mov
imul
cmp
ds
cmpsl
or
pop
inc
test
lret
xor
or
hlt
iret
xor
stos
cmpsb
jmp
addb
mov
mov
add
push
cmp
add
pop
jae
jno
sbb
mov
mov
add
repnz
aam
hlt
fldcw
loopne
mov
in
mov
ljmp
inc
in
rcll
add
pop
xchg
mov
mov
clc
sbb
lea
sbb
add
mov
pop
imul
mov
hlt
pop
iret
mov
jno
cmpsb
xchg
cpuid
add
mov
dec
or
add
mov
mov
sbb
add
mov
and
mov
cmp
xor
xchg
jle
mov
movsb
cmp
repz
sti
push
add
add
imul
add
add
adc
fwait
mov
sub
inc
xchg
add
mov
iret
lods
addr16
xor
stc
out
sbb
mov
into
into
jns
pop
adc
add
sub
cmp
rolb
mov
cmc
jns
add
push
add
rolb
mov
adc
jae
cmp
cmp
adc
mov
mov
int3
test
mov
mov
pop
sub
daa
or
adc
mov
dec
sbb
mov
cmpsl
jae
sub
jg
adc
cli
or
mov
mov
loopne
mov
pop
pop
int3
nop
add
add
repnz
je
add
mov
mov
add
ds
lock
xor
mov
add
sbb
or
flds
pop
adc
mov
subl
mov
add
add
add
dec
ds
test
test
addr16
cmp
sub
rolb
mov
dec
addb
dec
stos
sub
jo
mov
notl
mov
inc
fstpt
test
mov
push
jns
add
pop
pop
dec
push
add
setbe
daa
lds
aaa
jge
rolb
cmp
ds
add
and
in
add
mov
xchg
out
pop
lret
in
fs
mov
inc
and
imul
es
add
add
dec
xchg
cmpsb
add
add
add
jbe
out
jp
jecxz
jne
add
jo
mov
and
mov
lret
mov
xchg
out
xchg
dec
repnz
mov
jb
mov
sbb
cmp
fbld
pop
push
pop
repnz
mov
cmp
add
mov
mov
add
mov
mov
xor
in
add
mov
or
ljmp
mov
mov
ret
push
mov
scas
in
cltd
mov
add
cmp
mov
inc
adc
mov
mov
hlt
dec
lods
mov
mov
dec
sub
add
jp
add
testl
add
sub
mov
add
cli
mov
add
jo
mov
scas
sub
mov
and
mov
adc
mov
insb
sbb
mov
out
add
pop
lods
fisubrl
imull
loope
sbb
cltd
insl
aaa
loopne
mov
sub
les
mov
mov
mov
js
push
popf
jl
hlt
ss
cwtl
addb
sbb
sahf
xor
mov
shll
mov
mov
mov
nop
add
loop
mov
outsb
arpl
jecxz
mov
outsl
adc
mov
adc
add
and
jmp
ret
sbb
adc
sar
aad
add
dec
test
nop
add
out
pop
bound
mov
xchg
fidivrl
add
loopne
mov
mov
in
imul
scas
ljmp
mov
mov
mov
mov
sbb
fwait
dec
adc
daa
dec
mov
stos
jns
idivb
pop
inc
cmp
mov
daa
cmp
push
les
loope
add
scas
addb
cwtl
push
dec
push
insb
fnsetpm(287
mov
adc
fdivrl
ljmp
mov
adc
mov
inc
fldcw
dec
repz
push
addl
mov
ret
dec
fidivs
gs
idivl
push
jg
dec
or
add
and
add
add
xlat
cmp
mov
add
mov
inc
mov
loop
mov
ret
cs
imul
dec
jmp
push
fistl
outsl
dec
mov
mov
push
mov
add
add
mov
cli
jb
mov
xorl
mov
cmp
or
add
jno
sbb
fmuls
je
xchg
xor
add
add
mov
or
sub
pop
inc
add
cmp
cli
dec
repz
push
dec
dec
mov
pop
xchg
dec
xlat
rolb
mov
mov
cmpsl
sub
mov
mov
add
sahf
and
scas
aad
inc
xlat
push
add
ljmp
cmpsl
push
add
add
mov
inc
add
add
add
mov
adc
pop
lea
mov
jae
xchg
or
lcall
or
adc
add
mov
push
dec
fsts
rolb
mov
cmpsl
inc
add
dec
pushl
popf
sahf
lods
clc
mov
cs
sub
pop
cmpsl
shrl
and
xchg
and
in
add
mov
mov
mov
lock
add
aas
lock
add
mov
add
fneni(8087
add
cmpsl
add
mov
pop
cmpsl
xor
mov
xchg
ljmp
mov
xchg
aaa
jp
cmp
mov
lcall
pushf
adc
mov
mov
cmpsl
orl
mov
enter
addb
out
dec
test
mov
lock
mov
inc
adc
test
cmp
pop
dec
js
hlt
outsb
int3
movsb
inc
add
mov
mov
rolb
mov
push
ds
or
mov
inc
add
add
add
movsb
push
add
mov
mov
fs
mov
jns
add
dec
idivl
and
in
inc
out
sub
mov
cwtl
jge
add
mov
jne
fisubl
fs
jle
mov
mov
cld
and
mov
add
jle
aad
xchg
add
loopne
mov
inc
popa
and
mov
mov
adc
pop
loope
jne
dec
jae
add
mov
jae
bound
mov
jge
cld
sbb
add
ficompl
loopne
mov
inc
aad
cmp
dec
test
je
pop
xchg
add
cmpl
xor
mov
mov
push
sbb
enter
push
fcoml
adc
jno
sbb
add
cs
roll
ficoml
fmuls
adc
mov
outsb
cmc
fidivrl
sbb
mov
mov
or
add
mov
mov
add
mov
add
mov
add
testl
and
add
xor
mov
scas
jge
pop
int3
fs
adc
sub
mov
lea
mov
fsubrl
das
imul
scas
sbb
rolb
mov
add
mov
and
mov
cmp
add
mov
lods
lods
dec
pushf
cmpps
es
mov
mov
mov
pop
sub
out
xchg
rolb
in
sahf
insl
dec
jo
mov
mov
add
rolb
mov
xor
fwait
xchg
add
jecxz
lds
xchg
add
add
stc
mov
pop
xlat
fistpll
sbb
rorl
push
add
add
sbb
add
js
jns
aaa
lods
push
xor
int
cmp
add
jo
mov
in
pushf
scas
jne
add
mov
mov
jo
mov
add
insb
or
cwtd
or
popf
mov
cmp
cltd
push
les
sti
xchg
icebp
mov
add
push
iret
push
sarl
add
add
mov
jb
mov
pop
sbb
insb
jge
add
mov
add
add
xchg
nop
add
jp
mov
mov
add
dec
ret
pushf
mov
or
xchg
cmp
cmp
add
popf
mov
pop
mov
sti
jae
ss
daa
mulb
inc
and
andl
iret
js
add
add
cwtl
inc
add
aam
stos
enter
inc
add
add
xor
push
jle
pop
xchg
adc
mov
aam
add
add
test
into
iret
jb
mov
sub
fadd
inc
add
add
scas
mov
jp
mov
cld
lods
push
add
loopne
mov
fldl
mov
cli
add
aas
xor
cmp
fs
inc
add
movsb
jns
ret
push
pusha
add
fwait
mov
add
add
sub
gs
cmp
lcall
je
xchg
or
add
out
push
or
icebp
int
rolb
add
mov
mov
sarl
sbb
mov
mov
loope
adc
add
cld
outsb
and
add
add
dec
adc
xor
cld
sub
mov
mov
add
sar
pop
sbb
add
push
jmp
pop
jecxz
jo
mov
sbb
fistps
dec
iret
inc
push
add
mov
mov
sbb
testb
mov
fildll
or
rolb
mov
inc
ljmp
mov
into
fcoms
sti
out
fstpt
scas
inc
in
push
mov
and
add
mov
add
jne
not
insl
stos
jmp
push
aaa
push
sub
cli
xchg
clc
test
xor
xor
mov
add
or
mov
jg
mov
cmp
addb
mov
mov
add
leave
push
add
mov
aaa
cmp
add
pop
xchg
mov
sbb
dec
mov
add
fnsave
push
add
ljmp
ja
mov
mov
push
add
test
arpl
stos
shr
fs
mov
cmp
push
popa
sub
mov
pop
adc
add
jle
ss
xor
mov
push
xchg
test
scas
push
fcompl
popa
int
js
add
inc
ficompl
push
leave
push
mov
jo
mov
cmp
add
jg
inc
and
mov
out
or
jo
mov
icebp
rolb
mov
mov
or
adc
add
xchg
leave
cli
push
popa
pop
les
mov
mov
loop
mov
aas
scas
and
das
jne
mov
pop
ror
adc
xlat
push
and
cwtl
mov
fcompl
out
xchg
sub
mov
sub
add
add
add
mov
femms
rol
fidivrs
je
mov
stc
xchg
add
mov
push
stos
test
xchg
inc
insb
inc
mov
je
cmp
inc
cli
bound
mov
std
or
and
add
mov
fidivrs
xchg
xchg
push
or
cmp
rolb
jns
enter
rolb
mov
sub
pop
xchg
repz
loop
mov
jmp
pop
cwtl
cmpsl
sub
xchg
scas
push
sbb
cmp
push
add
idivl
stc
movsb
cli
lret
cmp
add
repnz
imul
xlat
cmc
leave
add
push
aad
adc
mov
cwtl
mov
and
mov
insb
icebp
movsl
rolb
mov
add
rolb
enter
mov
add
jmp
add
jecxz
xor
mov
inc
sbb
cmp
outsb
xor
cmc
call
mov
mov
pop
out
movsl
into
fcmovnb
pop
and
mov
aas
loop
mov
add
and
addr16
adc
dec
movsl
inc
mov
mov
add
lret
lods
push
imul
sbb
fcompl
popa
sub
adc
add
fstpt
ljmp
mov
adc
mov
add
mov
int3
add
sbb
rolb
jb
mov
sub
add
add
xchg
fwait
enter
push
es
or
ret
out
mov
pop
pop
dec
fidivl
add
dec
loop
mov
fmul
push
pop
xchg
vpandn
addb
pop
xor
cmp
lcall
push
mov
sahf
es
movsl
cmpsb
js
add
pop
and
jg
push
add
iret
mov
sbb
fsubrl
adc
mov
mov
add
cmp
rcr
loop
mov
push
mov
mov
clc
pop
inc
aaa
or
mov
rolb
mov
sbb
mov
add
sub
or
addr16
xor
addb
add
mov
add
mov
lods
iret
pop
mov
rolb
mov
jno
test
lock
dec
dec
aaa
jo
mov
xor
mov
mov
lock
mov
inc
jp
mov
ljmp
aas
and
cmp
pop
sahf
out
fcmovb
add
aas
cmp
cmp
imul
push
add
add
jbe
mov
mov
mov
int
fistpl
dec
shl
add
call
add
xchg
adc
dec
addb
addb
test
dec
mov
add
mov
fidivrl
add
lahf
and
mov
es
push
add
mov
or
add
addb
stc
adc
daa
add
dec
add
dec
dec
scas
or
mov
mov
jno
add
add
std
and
hlt
mov
add
adc
repnz
push
add
inc
xor
add
add
xchg
add
add
adc
mov
mov
aad
rolb
mov
mov
and
mov
out
jae
adc
mov
mov
mov
mov
add
je
scas
pop
out
out
mov
dec
icebp
or
sbb
and
scas
or
movsl
and
mov
pop
insl
es
jae
lea
iret
hlt
js
add
clc
jo
mov
mov
push
aaa
jle
dec
pop
and
add
lds
repz
add
mov
add
sub
mov
sub
add
aam
outsb
sub
dec
lds
sbb
mov
rolb
mov
lea
into
lret
push
add
ret
cmpsl
adc
mov
lret
dec
xor
add
add
sub
add
outsb
out
xchg
add
dec
and
pop
call
lahf
pop
pop
out
scas
stos
arpl
mov
pop
pop
mov
mov
in
push
scas
pushf
jb
mov
pushf
fdivs
mov
incb
sub
add
add
aam
and
add
arpl
cmc
mov
push
idivb
mov
mov
sub
out
lret
rolb
mov
fcomi
mov
add
pop
out
mov
outsb
pop
xchg
xchg
loop
mov
int3
sub
aam
pop
jmp
stc
xor
test
int
test
mov
int
jne
ds
cli
pushf
into
mov
add
cs
test
cmp
out
add
pop
jecxz
sahf
ss
mov
outsl
and
aad
cmp
xchg
test
add
adc
dec
movsb
cmp
add
sbb
fnstenv
sbb
stos
sub
jle
into
pop
loope
sub
jle
jp
jmp
mov
lret
movsl
hlt
and
or
or
aas
jl
cmc
and
mov
mov
xchg
in
add
mov
and
mov
movsb
movsb
push
popf
and
mov
add
int
add
jae
xlat
xchg
das
in
cmp
mov
jb
mov
icebp
adc
rolb
mov
pop
aam
out
aam
inc
shll
jae
idivb
aas
addb
cmp
xchg
les
dec
test
enter
add
test
add
or
add
mov
addr16
sub
xchg
mov
xchg
lds
movsw
loopne
mov
or
ds
xchg
in
ja
mov
fcoms
mov
mov
notb
out
iret
jg
add
xor
mov
aam
add
mov
insl
jmp
add
add
sub
inc
add
push
out
push
xchg
add
dec
ds
mov
sub
add
mov
add
dec
test
xchg
mov
mov
mov
loope
push
cmc
dec
inc
add
lret
data16
push
add
sub
or
fbld
fwait
sub
dec
mov
mov
mov
mov
icebp
jle
bound
mov
dec
pushf
pop
pop
cmp
xchg
and
mov
mov
adcl
adc
mov
addl
das
addb
push
add
jb
mov
mov
bound
mov
roll
std
mov
inc
add
ret
lea
add
add
mov
xchg
jecxz
add
mov
inc
pop
push
pop
sbb
pop
jmp
in
das
fwait
movsl
out
and
add
mov
filds
and
lods
mov
mov
inc
add
mov
mov
cmp
mov
scas
xor
push
mov
mov
insl
mov
mov
mov
mov
stc
jl
add
sbb
nop
add
loopne
mov
enter
enter
out
add
mov
leave
jnp
xchg
push
dec
adc
mov
addr16
or
push
test
movsl
cmpsl
fcoml
addb
sti
jl
divb
scas
xchg
xchg
pop
inc
mov
push
mov
cmp
push
jge,pt
mov
xchg
sub
mov
inc
push
cmp
cmp
mov
int
add
push
xor
mov
pop
xor
test
out
cmp
add
pop
rolb
mov
test
lods
daa
aam
pop
les
mov
ret
ret
loope
cmp
ljmp
repz
arpl
cmp
add
mov
mov
ret
cmp
xlat
mov
test
andl
add
add
sub
sahf
dec
mov
jno
ljmp
scas
dec
movsl
dec
push
jno
cltd
daa
adc
sub
mov
pop
and
mov
dec
es
loope
sub
addb
sub
fsubl
iret
popa
adc
int3
jbe
inc
stos
cli
mov
outsl
test
addr16
jb
mov
push
lret
push
push
mov
add
psllq
cmp
mov
cmp
add
imul
inc
add
xchg
gs
dec
imul
bound
mov
rolb
xlat
inc
dec
out
imul
imul
xchg
xchg
incl
mov
mov
add
add
in
mov
fimuls
daa
and
jg
add
mov
dec
mov
push
add
add
imul
scas
cwtl
inc
mov
dec
cmp
das
fidivl
add
or
jo
mov
out
lds
adc
cltd
sti
out
iret
loope
and
jmp
bound
mov
dec
iret
sub
mov
push
add
push
and
pop
sbb
fwait
stos
in
jne
jl
sbb
xchg
and
lods
in
aam
cmp
andl
outsb
push
add
xchg
rolb
mov
jae
add
cmc
adc
xorl
shll
sbbl
pop
pop
sbb
fsubrp
fs
aam
shl
add
pop
lods
jl
andl
call
dec
fldt
in
dec
mov
aad
add
gs
dec
xchg
add
inc
pop
inc
pushf
outsl
dec
lock
xor
int
shll
add
inc
add
cmc
ret
cmp
shll
jb
mov
mov
testb
addb
testl
inc
out
sahf
arpl
inc
add
imul
rolb
mov
xchg
mov
mov
or
add
stc
lods
push
xchg
mov
jns
insb
scas
mov
cmpsb
scas
mov
outsb
sbb
mov
mov
lea
lret
movsb
and
mov
xor
mov
cwtl
sbb
fildll
jmp
pop
std
mov
cmp
cmpsb
push
test
xchg
add
mov
and
push
mov
adc
cmp
lds
mov
jp
push
es
jmp
push
mov
ds
add
mov
int3
loop
mov
arpl
jl
call
jno
jbe
addr16
cmp
fimull
dec
out
add
pop
pushf
xor
mov
mov
pop
loope
push
imul
push
add
push
xor
addb
sahf
sub
add
mov
dec
xor
mov
add
mov
decl
test
roll
add
mov
lret
fldl
mov
jp
sub
dec
mov
cs
addr16
outsl
pop
jle
enter
icebp
fisttpll
cmp
xchg
fistpl
add
add
hlt
pop
mov
lods
mov
mov
dec
jg
lock
inc
sub
rolb
mov
repz
rolb
mov
cwtl
sbb
add
outsb
int
sub
cmp
sbb
in
mov
addb
dec
es
pop
and
sub
add
mov
add
addb
movsl
rolb
mov
popa
jmp
je
sbb
mov
add
or
lds
addr16
pushf
or
hlt
push
add
and
mov
mov
xor
lret
pop
pop
xchg
cmp
add
inc
add
popf
pop
xchg
add
in
or
mov
enter
mov
addb
jns
stc
aaa
cmpsb
and
mov
add
movsl
insb
fildl
lds
out
add
ret
sbb
mulb
mov
mov
cmp
shrl
loop
mov
jl
jg
xchg
add
inc
jne
dec
mov
aad
jne
add
pusha
add
std
jne
add
scas
and
std
push
sub
mov
outsb
insb
fdivs
jne
imul
imul
mov
loope
stos
cmp
push
cwtl
insl
std
cmpsl
iret
mov
mov
fcmovu
mov
inc
filds
xchg
mov
mov
mov
addb
xor
mov
out
shll
mov
aaa
jmp
rolb
in
ljmp
push
or
mov
call
and
mov
mov
inc
out
inc
cmpsb
repz
addr16
xchg
orl
pop
insl
xchg
inc
cmp
xor
xor
or
loop
mov
add
add
add
mov
mov
lret
mov
hlt
xchg
add
xor
mov
xchg
add
sub
cmp
xor
jmp
imul
insb
pop
or
popf
test
scas
addb
incb
mov
in
mov
dec
clc
pop
sub
jle
test
incl
scas
out
pop
xchg
lcall
add
ds
sub
fwait
mov
mov
mov
add
ret
movsb
and
mov
lret
jbe
pop
and
mov
iret
mov
sbb
add
mov
push
ret
cmp
or
jg
xchg
and
test
add
lret
psrlw
rolb
in
mov
daa
xor
cmp
cmpsl
pop
push
push
loopne
mov
ljmp
push
jno
dec
sbb
icebp
into
out
add
addr16
mov
push
clc
push
pop
or
and
mov
cs
add
and
jb
mov
bound
mov
test
scas
stos
and
mov
add
xor
mov
mov
dec
mov
mov
xor
add
fnstcw
inc
add
lock
and
out
push
dec
adc
mov
popl
iret
scas
dec
out
data16
mov
out
add
jnp
add
add
mov
loop
mov
cmpsl
xor
pop
xchg
div
jae
add
mov
stos
loope
imulb
mov
loop
mov
jbe
mov
mov
aaa
stos
add
aad
cmp
jecxz
cld
scas
arpl
xor
mov
sbb
sub
cmp
jp
aam
sti
pop
cmp
rolb
mov
cmp
cltd
flds
int3
in
cmp
test
add
cmp
dec
insl
or
adc
or
sarl
add
and
sub
inc
jmp
je
dec
cmp
add
shl
mov
cmp
sbb
rolb
mov
add
mov
mov
pop
push
cli
inc
icebp
add
add
mov
jl
mov
mov
push
insb
push
push
add
lods
fdivr
mov
ss
dec
addr16
push
push
fwait
push
dec
fdivr
gs
mov
stos
mov
int3
cwtl
jns
out
mov
push
sub
into
jmp
pop
popa
add
mov
mov
addb
jno
mov
loope
mov
xor
add
lret
cli
xor
mov
ds
addb
test
xor
add
pop
mov
mov
push
daa
dec
mov
pop
es
sbb
je
add
jae
insl
das
xor
mov
adc
mov
push
repz
mov
sbb
out
jo
mov
pop
mov
movsb
cltd
inc
addr16
lcall
iret
dec
aam
daa
pop
popa
shll
out
enter
mov
push
mov
xor
daa
and
xor
mov
mov
mov
pop
push
add
mov
mov
jnp
sti
cmpsl
mov
sub
add
cltd
jbe
loop
mov
mov
aad
cmp
add
inc
jg
pop
testb
cmc
cmp
or
xorl
sti
jl
pusha
add
xor
mov
pop
stos
ja
add
test
loop
mov
loope
imul
negb
sarl
lods
pushf
push
cli
inc
lds
ja
sbb
hlt
nop
add
inc
hlt
jle
rolb
mov
pop
scas
inc
ss
xchg
in
addb
insl
jne
xchg
push
inc
lret
xrelease
add
mov
hlt
std
inc
ja
sbb
xchg
jae
sbb
rcll
mov
mov
clc
push
add
mov
mov
sub
xor
mov
add
mov
shld
mov
inc
fnsave
nop
add
or
ljmp
mov
cwtl
std
sbb
cli
pop
or
jbe
pop
cmc
mov
and
mov
add
cmp
jle
lcall
in
pusha
add
dec
mov
push
cwtl
fcmovnb
pop
mov
test
add
push
add
jae
push
fwait
xchg
sbb
test
ss
mov
cmp
xchg
add
cmp
addb
or
add
mov
jmp
push
cmp
xor
dec
fwait
rcrl
mov
xchg
lods
ja
test
mov
add
addb
pop
add
add
jb
mov
mov
mov
cmp
push
into
dec
mov
pop
call
pop
mov
add
add
mov
mov
mov
loopne
mov
add
add
test
add
xor
cmp
mov
cmp
loope
je
jb
mov
pop
lock
adc
mov
outsl
mov
dec
lcall
sbb
add
add
sub
mov
mov
scas
xor
mov
add
mov
sbbl
leave
ficompl
xchg
rcll
xlat
jp
jne
repnz
add
and
inc
in
in
xchg
mov
mov
dec
pop
aaa
out
popa
sbb
hlt
cli
xor
sub
stc
mov
mov
add
push
jle
add
mov
clc
and
mov
add
mov
sahf
mov
fistpll
arpl
or
pop
xor
add
mov
xchg
fsubrs
lcall
ds
push
sbb
fdivl
dec
or
rolb
mov
dec
xlat
mov
sub
mov
add
mov
and
mov
mov
addb
out
in
lds
insb
rolb
mov
push
arpl
xchg
sub
leave
and
add
or
mov
dec
xchg
enter
aaa
insl
mov
xor
xchg
add
adc
fstpt
cmc
mov
mov
mov
bound
mov
add
xchg
mov
mov
js
or
add
mov
mov
aam
fadds
fidivrl
repnz
bound
mov
xchg
or
cli
cmp
add
mov
addb
pop
int3
mov
jle
cmp
dec
inc
add
rcrl
mov
inc
jg
pop
mov
mov
nop
add
jl
add
cmp
insb
mov
mov
scas
into
aaa
addr16
inc
add
add
push
call
dec
and
loop
mov
push
lds
mov
mov
xchg
aaa
mov
outsb
fxch
daa
sub
push
mov
jl
add
xor
add
pop
addr16
sti
push
add
enter
inc
addb
jmp
jge
push
mov
push
xor
sbb
jnp
cmpsb
rolb
mov
push
mov
xor
sub
addb
test
lcall
add
lret
mov
add
jae
rcll
add
les
jnp
add
adc
inc
ljmp
add
add
adc
cltd
nop
add
mov
loopne
mov
adc
popa
lret
mov
int3
aam
add
push
sbb
test
aaa
add
mov
cmp
or
mov
int3
add
xchg
jns
loope
sbb
clc
cmp
add
mov
je
stos
idiv
push
repnz
mov
mov
fistl
cmp
fwait
pop
cmp
dec
jae
add
cli
push
pop
add
mov
inc
shll
pop
jle
pushf
jp
add
ljmp
lahf
rolb
mov
jbe
ret
xchg
xor
enter
lahf
rolb
mov
pop
das
loopne
mov
add
mov
jp
add
and
dec
lock
imul
jp
add
lods
std
out
fstl
jg
sub
hlt
rolb
div
add
mov
add
rolb
mov
in
pop
xor
enter
addb
ss
stos
nop
add
add
clc
add
add
dec
loopne
mov
add
jge
loope
push
push
add
cmp
je
div
add
mov
cmpsl
add
and
aam
xor
mov
addb
das
pop
sbb
inc
roll
mov
aad
jmp
and
movsl
addb
dec
out
cmp
adc
mov
mov
in
push
mov
cmp
lea
rolb
mov
mov
ffreep
add
inc
lock
sub
in
lds
add
or
push
adc
mov
pop
rolb
mov
iret
test
sti
pop
cmp
add
dec
push
in
lahf
bound
mov
cmp
add
lcall
insl
hlt
and
mov
mov
push
adc
mov
rolb
mov
add
mov
repz
loope
ljmp
sbb
adc
mov
mov
mov
jae
add
add
lahf
sub
ss
add
lcall
aad
jne
cmpsl
pop
pop
add
dec
sbb
leave
into
add
arpl
mov
add
sub
add
mov
ret
xlat
push
dec
mov
addb
arpl
add
fcompl
add
stos
xor
add
mov
add
add
imul
add
fdivrs
roll
add
mov
addb
fnstsw
xor
test
imul
mov
cli
cmpsl
sbb
ja
loopne
mov
js
add
mov
stos
mov
adc
push
and
pop
aas
dec
outsb
arpl
fyl2xp1
dec
jo
mov
jl
or
cmp
mov
xchg
mull
mov
push
mov
dec
fnsetpm(287
std
or
mov
pop
adc
outsl
ret
dec
movsb
push
and
mov
add
bound
mov
mov
pop
pop
aas
scas
add
inc
in
add
test
add
adc
mov
ljmp
push
and
mov
push
jnp
push
idivl
cld
push
lcall
mov
fmuls
add
add
mov
or
add
lods
push
add
xlat
adc
mov
rolb
mov
inc
mov
ljmp
mov
clc
cld
pop
cmp
or
mov
mov
mov
push
jg
cmp
mov
adc
repz
pop
imul
inc
out
adc
mov
xchg
lea
cmp
test
outsb
xchg
insl
mov
mov
dec
addb
sbb
pop
sub
addb
pusha
add
cmp
lea
shll
push
and
jae
add
movsb
std
sub
sahf
inc
into
pushf
rolb
mov
mov
pop
push
add
add
dec
adc
pop
repnz
add
popa
mov
add
and
fs
ja
add
fwait
push
stc
fs
dec
stos
mov
dec
addb
mov
outsl
and
mov
aas
cmp
add
sbb
out
mov
mov
add
cmp
rcr
xor
or
lahf
pop
sub
nop
add
in
mov
jb
mov
add
jge
loopne
mov
mov
mov
addl
mov
loopne
mov
mov
xchg
bound
mov
add
add
enter
xor
loopnew
mov
shrl
hlt
nop
add
or
push
pop
jnp
js
fisubl
xor
jne
dec
push
enter
mov
add
mov
ds
cltd
addb
mov
outsl
jl
xchg
cmp
je
and
add
add
sbb
adc
mov
push
xor
in
cli
sbb
add
popf
bound
mov
inc
xor
popa
mov
lods
rolb
mov
sahf
or
add
or
out
xchg
pop
outsl
lods
jecxz
aam
mov
loop
mov
add
out
insb
fs
add
mov
test
add
mov
add
mov
hlt
loopne
mov
cmp
jne
add
xor
aaa
orl
mov
sub
pusha
add
add
lretw
pusha
add
jb
mov
fnop
add
aas
and
mov
xchg
push
rolb
push
test
sub
dec
rcrl
xchg
mov
lret
xchg
add
pop
adc
sub
push
repz
mov
push
lcall
pop
andl
xchg
inc
cmc
rolb
fidivrl
nop
add
dec
xchg
lret
aas
mov
jecxz
xor
mov
movsb
sub
add
rolb
out
imul
gs
cmp
mov
mov
shll
cmp
or
add
add
lahf
outsb
dec
cmp
cwtl
sti
jmp
addb
jp
out
mov
mov
out
sti
cmpsl
jecxz
add
sbb
add
mov
ss
and
mov
mov
mov
sbb
outsb
xor
mov
mov
mov
add
push
jmp
push
fstl
pop
aas
cld
sar
repnz
rcll
sub
and
fs
jns
add
movsl
fwait
sahf
cmp
sub
dec
insl
lds
or
movsb
in
push
mov
mov
pusha
add
dec
xorl
inc
add
mov
pop
bound
mov
mov
inc
add
mov
sub
mov
jo
mov
dec
pop
in
sarl
ljmp
cmp
mov
add
mov
data16
cmp
loopne
mov
and
mov
fs
in
fldenv
push
adc
mov
aam
mov
inc
addr16
add
inc
mov
fdivrl
lods
pop
push
xchg
aad
or
push
sti
cmp
xchg
fldt
addb
stc
fwait
int3
sbb
sti
in
xchg
nop
add
sub
xchg
mov
out
xchg
sub
fstps
jmp
xor
xchg
add
sbb
mov
push
cwtl
dec
sbb
fistpll
lahf
and
rolb
mov
mov
add
mov
add
dec
dec
push
add
xchg
jno
lods
ljmp
dec
cmp
lods
test
fildl
push
mov
mov
cld
loop
mov
add
sub
lods
roll
into
mov
xor
mov
aas
sub
mov
dec
clc
rolb
mov
test
out
mov
loop
mov
fsubrp
mov
vmwrite
sub
ret
lret
mov
loop
mov
xor
add
mov
bts
add
int3
dec
and
jnp
das
test
es
xlat
add
cmp
mov
adc
mov
shll
sub
pusha
add
notb
adc
mov
push
mov
je
adc
lods
negb
daa
daa
add
add
cmp
dec
push
add
jmp
inc
add
cli
cmp
push
iret
push
cli
lods
addps
stos
or
mov
stos
and
das
mov
push
or
add
xchg
sbb
jmp
clc
cpuid
add
sub
mov
testb
out
pop
add
mov
pop
fidivs
add
sub
mov
in
rolb
mov
movsb
cmp
add
push
movl
fisubrs
xchg
add
cs
sbb
mov
mov
pop
mov
mov
dec
xchg
adc
mov
popf
es
mov
sub
mov
mov
lahf
adc
mov
jo
mov
cmc
sbb
ret
insb
mov
add
in
mov
lcall
lds
inc
mov
mov
mov
sub
clc
jle
add
sub
and
sub
lods
sub
cltd
mov
lcall
add
mov
jo
mov
addb
lcall
add
mov
push
mov
xchg
mov
out
inc
jle
daa
in
add
lahf
out
jmp
add
add
add
or
or
push
and
sbb
mov
cmp
sub
sahf
rol
and
mov
pop
xchg
inc
imul
aas
mov
adc
mov
push
cltd
test
fnstenv
loopne
mov
add
mov
cs
add
ja
pop
lock
sbb
dec
xchg
mov
xchg
addb
outsb
inc
push
and
cltd
sub
xlat
and
add
sbb
mov
mov
mov
push
mov
jle
hlt
sbb
cmp
iret
testb
inc
aad
xlat
outsl
out
fcoms
xor
mov
sub
add
mulb
push
add
jbe
ret
and
mov
mov
sbb
and
mov
movsb
dec
mov
and
mov
inc
jmp
int
pusha
add
fistl
push
ds
sbb
aam
pop
xor
mov
pop
mov
push
add
mov
scas
das
pop
sub
mov
add
xor
push
das
lret
notb
scas
xor
mov
mov
pop
push
mov
popf
mov
mov
mov
add
add
mov
mov
add
inc
add
mov
push
nop
add
cmc
das
rolb
mov
jl
add
dec
fdivs
icebp
test
add
bound
mov
add
add
pop
pusha
add
mov
repnz
ja
ds
std
fisttpl
hlt
hlt
sub
ficoms
int
mov
mov
dec
jmp
sbb
jge
dec
fldt
arpl
push
push
adc
mov
fisttpll
sbb
int
clc
rol
imul
scas
adc
push
add
mov
or
add
jecxz
add
outsb
leave
cld
dec
es
jle
add
add
lret
test
add
es
add
lret
sbb
aad
ds
ret
addb
push
jl
lahf
pop
sub
jecxz
pop
xor
xor
push
test
mov
cmpsb
call
arpl
movb
add
mov
add
imul
inc
add
add
push
add
scas
mov
push
dec
sbb
mov
data16
pop
lods
adc
add
push
mov
out
jecxz
add
mov
arpl
cmp
icebp
dec
addb
inc
add
adc
xchg
xor
adc
mov
sbb
cmp
dec
test
mov
mov
movsl
fcomip
add
pop
mov
fisubs
add
xchg
filds
gs
add
dec
or
add
mov
mov
ret
test
push
aaa
bound
mov
pusha
add
or
mov
lods
and
mov
ljmp
lret
stos
inc
adc
adc
nop
add
mov
mov
mov
dec
xor
mov
and
mov
add
inc
cld
jbe
negl
sarl
xor
add
jb
mov
jecxz
sarl
mov
cmp
in
xor
aad
mov
inc
add
mov
adc
ret
mov
xchg
add
cmpsb
xchg
add
sub
xor
lret
push
add
xchg
add
repnz
out
sub
rolb
mov
hlt
inc
dec
fidivs
dec
into
fucomi
int
mov
mov
in
stos
movb
rolb
adc
push
mov
add
push
pop
mov
mov
es
aaa
sub
mov
add
adc
xor
mov
lock
mov
sub
xor
sub
test
sbb
mov
adc
mov
dec
loope
sarl
mov
dec
xchg
mov
add
mov
cwtl
into
jae
add
cmc
xchg
add
pop
inc
jg
rolb
mov
push
mov
loop
mov
mov
sahf
cli
fidivrs
pop
bound
mov
add
pop
jg
pop
stos
xor
or
repz
jb
mov
fldenv
mov
pusha
add
jae
add
lret
dec
outsl
xor
add
lods
xchg
aas
addb
rcrl
add
mov
sahf
pusha
add
push
add
addb
pop
xchg
add
jecxz
add
addb
lret
sti
in
test
mov
xchg
std
push
add
dec
int3
mov
mov
cwtl
inc
xchg
add
rolb
add
call
gs
push
add
jno
sub
in
daa
dec
ds
xchg
mov
popa
test
cmp
lods
arpl
pop
mov
daa
out
aad
add
mov
jae
inc
lods
cmp
mov
add
popa
test
jge
ljmp
pop
mov
dec
sub
add
push
add
dec
adc
mov
stos
inc
xlat
test
fcmovnbe
add
out
pop
xchg
xlat
mov
add
add
lret
mov
push
sub
add
dec
ljmp
outsl
mov
push
cld
sbb
add
and
cmp
mov
sub
mov
dec
int
jg
scas
in
pop
xchg
outsb
sbb
mov
or
inc
push
call
push
out
hlt
es
fucomi
xor
arpl
iret
adc
ss
movsl
push
dec
adc
mov
add
nop
add
sbb
mov
mov
or
mov
out
clc
jns
push
sbb
addb
mov
inc
or
jp
add
mov
adc
add
pop
xor
mov
jno
mov
jo
mov
mov
fcoms
add
adc
mov
dec
rcrl
lahf
jl
mov
rcr
aas
rcrl
dec
or
add
push
or
sub
ljmp
cmp
fisttpll
add
mov
in
mov
sbb
mov
rcll
jg
jecxz
mov
in
fisubl
mov
xchg
sbb
cmp
repz
mov
push
cs
cmp
cld
test
je
cwtl
stos
mov
sub
pop
cmpl
push
rolb
mov
sub
or
add
fs
adc
mov
mov
into
dec
or
cmp
arpl
push
dec
add
mov
jg
or
lods
pop
xor
mov
and
mov
jne
mov
xchg
xchg
ret
sbb
test
add
mov
cmpsl
ret
xchg
loop
mov
fmull
in
enter
sbb
inc
pop
nop
add
mov
aaa
sbb
aad
loop
mov
mov
test
cwtl
pop
pop
add
xor
pop
or
mov
mov
mov
nop
add
sti
lods
inc
add
scas
cltd
cmpsb
xchg
add
mov
sbb
mov
in
out
mov
int3
pop
filds
add
xchg
push
jno
fbld
mov
stos
mov
jmp
xor
pop
dec
mov
mov
imul
mov
cmp
dec
inc
stos
ja
dec
jle
or
fisttps
mov
daa
jge
fdivrl
mov
mov
jle
stc
sbb
mov
mov
add
inc
fwait
call
out
mov
jb,pn
mov
or
insb
inc
fstp
cltd
insb
cmc
mov
rolb
mov
out
mov
popf
mov
add
cli
adc
mov
lock
dec
cmp
pushl
adc
pop
cli
or
xchg
push
outsl
mov
mov
add
lea
lret
add
add
int3
dec
xor
ficoml
jg
sub
mov
lock
fisttps
add
push
nop
add
mov
mov
sub
imul
push
pop
nop
add
popf
pop
fbld
dec
enter
or
add
push
mov
sub
movsb
sbb
mov
dec
rcll
mov
xor
cmp
outsl
jnp
xor
or
xchg
lcall
jge
add
mov
add
adc
mov
or
add
pop
int
push
jl
add
int3
xor
mov
cmp
fsubl
mov
mov
xor
cmpsl
push
or
ja
add
ja
add
add
add
imul
dec
and
jbe
push
aam
dec
sub
add
xchg
mov
mov
out
add
adc
mov
mov
or
and
mov
xchg
push
add
cltd
stos
iret
lahf
sub
push
add
fmull
add
xor
mov
ss
mov
jno
jecxz
cmp
and
add
xor
mov
dec
mov
or
add
pand
dec
fbstp
test
add
call
data16
xor
ja
push
or
xchg
les
ds
and
hlt
adc
mov
or
call
sbb
jl
add
test
mov
fs
xchg
repz
cmp
xchg
test
push
lret
fimuls
sub
jae
push
xchg
fs
mov
outsb
xor
xchg
pop
jo
mov
mov
fimuls
xor
jecxz
stos
pop
scas
jae
mov
or
pop
mov
int
scas
imul
adc
mov
lret
push
imul
repnz
ja
out
add
add
and
mov
push
fbld
lods
pop
shll
sub
inc
rolb
mov
dec
jg
test
add
cld
mov
push
dec
adc
mov
rolb
mov
imull
cmp
or
xor
cmpsl
aad
jecxz
add
int
add
add
es
sub
dec
aaa
test
push
xor
mov
sbb
loop
mov
add
mov
sub
add
inc
or
add
addb
xchg
xor
fcmovnb
add
rolb
mov
sbb
add
push
add
in
cmpsb
push
mov
nop
add
or
jns
rolb
mov
add
mov
fistpl
das
out
cs
push
fcmovne
arpl
fistpll
or
fsubrs
call
xchg
iret
mov
add
mov
mov
scas
mov
adc
addb
jo
mov
ja
xor
mov
add
add
fisubs
notb
mov
arpl
cmc
loope
lahf
js
dec
int
sbb
inc
mov
cmp
jno
adc
fwait
add
mov
mov
add
lret
sub
add
filds
divb
push
addl
mov
sub
add
int
cmp
add
push
mov
mov
add
shll
add
add
mov
jmp
or
lahf
and
jg
mov
mov
cmp
add
loop
mov
add
and
lahf
shrl
jno
push
add
pop
cmp
inc
and
mov
sbbl
jae
jnp
add
dec
movsl
mov
mov
sar
mov
adc
mov
mov
ret
sub
xchg
xchg
in
or
xchg
jae
out
fcmovu
sbb
out
outsb
insl
jo
mov
inc
add
add
mov
repnz
mov
fildll
add
outsl
pop
call
adc
mov
enter
enter
inc
adc
sub
js
leave
in
and
jmp
dec
push
push
inc
lret
movsl
into
cmp
fdivs
outsl
fxch
jecxz
stos
cmp
mov
add
xchg
mov
add
icebp
xchg
in
add
repz
mov
or
pop
ja
add
xchg
cmpsb
xor
pop
ljmp
dec
popf
in
mov
lds
push
ret
sub
repnz
push
addb
cld
pop
lret
adc
mov
xor
mov
add
and
sti
test
xchg
dec
cmp
in
cmpsb
ss
xor
cmp
mov
jo
mov
or
mov
cmp
cli
inc
addr16
out
mov
test
call
mov
testb
add
js
out
xor
popa
out
fwait
and
add
mov
mov
jl,pt
mov
cmc
shll
mov
xor
add
add
or
adc
mov
xor
push
add
adc
mov
sbb
or
ja
bound
mov
sub
aas
ja
xor
fisubs
add
mov
jmp
pop
aas
jl
sub
in
push
jb
mov
mov
hlt
push
cltd
into
iret
stos
push
add
and
mov
out
mov
out
mov
ret
mov
mov
add
pop
imull
cwtl
or
jbe
repnz
sub
jg
icebp
jle
cmc
dec
testl
std
addb
lcall
adc
mov
jo
mov
push
mov
cmpsb
outsb
mov
mov
in
aam
sub
add
xchg
dec
aaa
inc
cmpl
lds
jne
lods
cmp
mov
mov
hlt
jecxz
nop
add
sub
xchg
psubb
subl
xor
jle
xchg
mov
add
movsl
xchg
testb
mov
int
addb
jo
mov
sbb
lcall
push
jo
mov
add
or
mov
mov
or
inc
cmp
dec
mov
or
fcomps
mov
xchg
add
adc
mov
lret
jne
push
add
fisttps
enter
mov
dec
xor
setbe
dec
add
mov
lret
jp
dec
inc
add
mov
stos
fisttpll
lock
jnp
sub
rolb
cltd
push
stos
xor
mov
and
rolb
mov
mov
mov
mov
mov
add
sub
loopne
mov
repz
sbb
add
arpl
fisubl
popa
sbb
add
mov
cmp
rolb
mov
pop
sbb
push
xor
pop
gs
push
mov
mov
aaa
xor
xor
mov
or
sarl
nop
add
aas
sub
mov
add
rolb
cmp
test
push
push
lret
and
sub
test
sbb
and
cmp
mov
imul
dec
adc
fsubrp
aam
push
enter
js
xor
mov
mov
add
dec
sti
mov
les
add
lcall
daa
test
sub
stc
sbb
lods
icebp
out
dec
pushf
xor
mov
jns
mov
jb
mov
stos
xchg
icebp
rolb
mov
pop
cltd
pop
mov
mov
inc
add
aas
pop
sbb
lods
mov
mov
and
push
jno
gs
mov
jbe
repz
fsts
das
mov
out
in
add
out
bound
mov
push
xchg
add
xor
ja
repz
cmpsl
rolb
mov
push
test
je
sahf
in
mul
daa
fptan
add
mov
sahf
movsb
shll
add
add
add
xor
arpl
imul
mov
inc
fwait
into
mov
rolb
mov
int3
cmpsb
xlat
inc
mov
stos
inc
add
cmc
adc
add
pop
loopne
mov
sbb
mov
enter
mov
or
add
mov
and
add
ret
movl
outsl
mov
add
bound
mov
pop
repz
cmp
mov
add
cmp
mov
leave
mov
push
mov
cmpsl
popa
mov
in
cmp
mov
mov
mov
call
pop
pop
adc
lods
adc
mov
mov
jbe
insb
es
push
mov
add
adc
rolb
mov
push
test
cmc
and
in
clc
cmp
add
mov
sub
test
xlat
push
push
or
mov
mov
and
mov
push
sub
movsl
repz
and
mov
inc
mov
or
xchg
add
rcrl
jg
pop
cmc
mov
jnp
cmp
in
inc
shll
add
bound
mov
mov
add
add
rolb
stc
or
dec
inc
pop
test
add
jle
ja
pop
imul
mov
out
and
push
xchg
lcall
test
add
lods
and
mov
loopne
mov
popa
jb
mov
mov
loope
xchg
xor
add
add
add
loopne
mov
jl
ds
push
ja
pop
lcall
ret
cmp
hlt
add
add
cmpsl
or
pop
aam
xchg
repnz
add
sahf
push
scas
outsb
push
data16
mov
xchg
dec
push
sub
add
cmc
cmc
cltd
push
dec
test
outsb
std
outsl
jg
lret
test
add
clc
lods
roll
cmp
mov
add
out
mov
incb
cmp
lret
push
aas
dec
lds
cld
mov
jmp
mov
fsubs
jo
mov
mov
push
add
leave
inc
jns
rolb
mov
mov
add
xchg
push
add
jecxz
jnp
pop
mov
cmp
imul
cmp
push
add
inc
add
repnz
nop
cld
jae
es
enter
add
mov
lods
call
clc
repnz
nop
cld
jae
add
add
rclb
ljmp
add
mov
enter
mov
clc
repnz
nop
cld
jae
enter
stos
es
add
in
nop
leave
jmp
sbb
add
add
push
push
mov
xchg
ret
add
pusha
mov
lea
jae
int
cmpl
jmp
mov
jne
mov
nop
cld
jae
add
add
jl
mov
nop
nop
cld
jae
add
add
jno
add
in
nop
leave
jmp
mov
add
add
pop
jne
clc
repnz
nop
cld
jae
jae
jle
push
clc
repnz
nop
cld
jae
orl
outsl
rolb
jno
mov
clc
repnz
nop
cld
jae
lods
lahf
mov
xor
movswl
clc
repnz
nop
cld
jae
add
in
inc
pop
mov
clc
repnz
nop
cld
jae
add
add
push
push
mov
xchg
ret
lea
repz
add
dec
add
je
clc
repnz
nop
cld
jae
add
add
mov
out
clc
repnz
nop
cld
jae
jno
inc
repnz
in
lea
clc
repnz
nop
cld
jae
popa
add
movsb
clc
repnz
nop
cld
jae
add
add
in
xor
and
clc
repnz
nop
cld
jae
sub
dec
pop
clc
repnz
nop
cld
jae
sub
rolb
jmp
add
add
clc
repnz
nop
cld
jae
add
add
add
push
mov
xchg
ret
sbb
add
dec
push
mov
add
mov
pop
add
xor
push
iret
fmuls
cmp
jmp
incl
mov
repz
inc
lahf
add
add
in
nop
leave
jmp
add
cmc
repz
jno
mov
clc
repnz
nop
cld
jae
add
jo
pusha
push
mov
xchg
ret
add
lods
add
add
clc
repnz
nop
cld
jae
popa
rcrb
add
clc
repnz
nop
cld
jae
jmp
cmc
push
add
add
clc
repnz
nop
cld
jae
add
stos
lahf
scas
jmp
outsl
add
imul
add
add
dec
push
clc
repnz
nop
cld
jae
add
dec
add
repnz
nop
cld
jae
add
jl
mov
insl
jmp
jp
out
jl
pop
outsl
cmp
and
leave
faddl
xchg
ret
add
add
mov
bnd
add
in
nop
leave
jmp
imul
outsl
inc
imul
mov
nop
leave
jmp
add
pusha
outsl
loop
xor
mov
mov
xchg
ret
mov
add
lods
cmpw
push
mov
nop
leave
jmp
add
stos
pop
push
mov
nop
leave
jmp
push
xor
icebp
push
mov
clc
repnz
nop
cld
jae
add
sti
lods
imul
push
push
mov
xchg
ret
sti
ja
sbb
into
xor
clc
repnz
nop
cld
jae
pusha
pop
add
icebp
call
nop
nop
cld
jae
dec
add
add
add
add
xor
add
jl
add
add
sbb
dec
add
push
add
addl
and
add
add
add
repnz
nop
cld
jae
cltd
shrb
add
mov
add
iret
add
add
add
add
add
clc
repnz
nop
cld
jae
and
add
fs
pop
add
clc
repnz
nop
cld
jae
add
repz
mov
adc
repnz
nop
cld
jae
pop
fs
add
push
mov
add
cmpsl
cmpb
add
add
mov
sbb
mov
mov
add
add
mov
mov
les
mov
xchg
ret
ljmp
or
nop
nop
cld
jae
mov
outsb
call
push
mov
nop
leave
jmp
lods
sbb
add
push
mov
xchg
ret
add
mov
decb
mov
add
clc
repnz
nop
cld
jae
pusha
add
and
mov
add
clc
repnz
nop
cld
jae
xchg
clc
repnz
nop
cld
jae
outsl
jo
add
mov
repz
clc
repnz
nop
cld
jae
fs
jl
ss
add
add
push
mov
xchg
ret
sti
movb
movb
pop
clc
repnz
nop
cld
jae
add
loop
lea
add
clc
repnz
nop
cld
jae
add
popa
pop
xorl
add
push
mov
xchg
ret
xchg
add
add
repnz
nop
cld
jae
and
lods
shl
add
lahf
testl
push
mov
nop
leave
jmp
sub
and
clc
repnz
nop
cld
jae
add
ljmp
add
mov
push
mov
nop
leave
jmp
and
sub
cld
push
mov
xchg
ret
add
add
add
rolb
nop
nop
cld
jae
fiaddl
lahf
rorb
push
mov
xchg
ret
add
add
add
add
and
mov
add
nop
nop
cld
jae
sti
add
add
inc
sbb
flds
xchg
ret
add
add
sub
add
rclb
iret
inc
add
mov
pusha
add
clc
repnz
nop
cld
jae
sbbl
rolb
mov
out
inc
add
mov
lods
ja
dec
push
mov
xchg
ret
rolb
ja
movb
xchg
mov
nop
leave
jmp
addl
popa
or
repnz
nop
cld
jae
in
add
sub
std
je
push
mov
nop
leave
jmp
jo
cltd
repnz
clc
repnz
nop
cld
jae
add
push
mov
xchg
clc
repnz
nop
cld
jae
loop
lahf
ja
inc
popa
jle
mov
clc
repnz
nop
cld
jae
add
jp
clc
repnz
nop
cld
jae
in
jle
add
add
mov
das
xor
clc
repnz
nop
cld
jae
add
repnz
ja
or
in
nop
leave
jmp
add
add
sbb
inc
clc
repnz
nop
cld
jae
mov
mov
jg
clc
repnz
nop
cld
jae
add
xchg
jno
call
clc
repnz
nop
cld
jae
repz
add
repnz
nop
cld
jae
pop
add
aaa
jo
mov
add
repnz
nop
cld
jae
add
outsl
cmpsl
pop
imul
clc
repnz
nop
cld
jae
stos
xor
and
loopne
add
add
push
mov
add
add
repnz
nop
cld
jae
add
in
add
add
dec
add
sbb
in
add
repnz
mov
nop
leave
jmp
add
jl
lea
sub
jle
fdivrp
repnz
nop
cld
jae
in
ja
rolb
add
add
push
mov
nop
leave
jmp
add
add
add
sarb
repnz
nop
cld
jae
add
aas
mov
clc
repnz
nop
cld
jae
xor
push
mov
nop
leave
jmp
movb
lahf
add
xchg
add
mov
inc
add
add
jae
add
add
sub
add
repnz
nop
cld
jae
add
rolb
popa
fists
in
fcomip
add
dec
mov
int
stc
sbb
mov
inc
add
add
stos
mov
dec
clc
dec
inc
clc
repnz
nop
cld
jae
jmp
mov
in
add
clc
repnz
nop
cld
jae
jmp
sti
jl
ljmp
mov
add
clc
repnz
nop
cld
jae
add
mov
in
xor
add
push
mov
nop
leave
jmp
mov
add
loop
inc
add
incl
push
mov
nop
leave
jmp
popa
shrb
jl
enter
nop
nop
cld
jae
xor
add
add
add
repnz
nop
cld
jae
add
and
add
push
mov
nop
leave
jmp
add
jl
pop
jl
push
jne
clc
repnz
nop
cld
jae
popa
add
add
xor
imul
clc
repnz
nop
cld
jae
add
lahf
jae
add
mov
sub
clc
repnz
nop
cld
jae
sub
xor
mov
clc
repnz
nop
cld
jae
and
add
jae
add
lock
add
add
clc
repnz
nop
cld
jae
jne
xor
inc
adc
adc
pop
inc
add
popa
add
ja
popa
outsl
call
clc
repnz
nop
cld
jae
add
test
push
mov
nop
leave
jmp
sub
cltd
add
mov
add
mull
repnz
nop
cld
jae
repz
nop
nop
cld
jae
popa
add
mov
mov
nop
nop
cld
jae
aaa
add
cltd
cmp
insb
insb
clc
repnz
nop
cld
jae
mov
pop
push
push
mov
nop
leave
jmp
add
add
in
inc
sbb
push
mov
nop
leave
jmp
jle
add
add
cltd
push
push
mov
nop
leave
jmp
add
add
xor
mov
jmp
nop
leave
jmp
pusha
repz
add
add
rep
clc
repnz
nop
cld
jae
add
mov
mov
in
stos
push
mov
xchg
ret
stos
add
add
add
add
add
repnz
nop
cld
jae
and
xlat
push
add
cmp
repnz
nop
cld
jae
jle
add
clc
repnz
nop
cld
jae
sti
jmp
add
add
aas
push
push
mov
xchg
ret
sub
dec
add
in
and
clc
clc
repnz
nop
cld
jae
lahf
sub
add
add
mov
nop
leave
jmp
add
add
and
mov
push
mov
nop
leave
jmp
movb
jle
sbb
repnz
nop
cld
jae
cmc
sbb
add
push
add
add
dec
add
clc
repnz
nop
cld
jae
add
jl
add
fwait
add
push
mov
xchg
ret
add
add
cmc
add
in
mov
push
mov
nop
leave
jmp
jle
add
jo
aaa
mov
sub
in
nop
leave
jmp
ja
xor
add
repnz
dec
push
mov
nop
leave
jmp
add
mov
dec
push
push
mov
xchg
ret
sbb
mov
add
mov
repnz
nop
cld
jae
add
pop
mov
pop
mov
clc
repnz
nop
cld
jae
add
loop
and
add
inc
clc
add
clc
repnz
nop
cld
jae
sub
add
add
andl
fildl
xchg
ret
sub
sbb
push
mov
nop
leave
jmp
add
popa
popa
es
stos
ficoml
repnz
nop
cld
jae
add
add
movb
out
and
clc
repnz
nop
cld
jae
add
in
add
mov
mov
clc
repnz
nop
cld
jae
add
imul
mov
push
mov
xchg
ret
add
add
add
mov
nop
leave
jmp
stos
add
rolb
mov
lds
lea
push
mov
nop
leave
jmp
add
add
add
nop
nop
cld
jae
add
add
add
add
stos
clc
repnz
nop
cld
jae
add
add
in
add
add
clc
repnz
nop
cld
jae
jl
aaa
loop
es
dec
push
mov
mov
add
pop
add
inc
pop
and
leave
mov
push
mov
xchg
ret
xor
cmpl
or
repnz
nop
cld
jae
jo
sti
add
add
clc
repnz
nop
cld
jae
jmp
xchg
add
jne
clc
repnz
nop
cld
jae
add
jne
decb
test
add
clc
repnz
nop
cld
jae
rolb
add
outsb
xor
clc
repnz
nop
cld
jae
ja
add
push
sahf
push
push
mov
xchg
ret
add
shrb
mov
xor
mov
nop
leave
jmp
and
enter
mov
repnz
nop
cld
jae
add
add
cmp
sub
mov
dec
push
mov
nop
leave
jmp
repz
lods
in
add
movb
mov
push
mov
xchg
ret
sub
add
je
clc
repnz
nop
cld
jae
add
xor
jo
mov
add
add
add
add
add
shlb
sub
xrelease
addb
add
mov
add
pop
jae
repnz
nop
cld
jae
add
cmpl
inc
push
mov
xchg
ret
add
add
add
add
repnz
nop
cld
jae
imul
jbe
clc
repnz
nop
cld
jae
jle
sti
ljmp
mov
nop
leave
jmp
stos
pop
lahf
add
add
dec
adc
mov
pushl
clc
repnz
nop
cld
jae
popa
inc
add
add
pop
lret
add
repnz
nop
cld
jae
loop
jno
outsl
in
and
push
mov
xchg
ret
cmc
sti
popa
outsl
add
lods
jl
popa
add
mov
xchg
ret
add
jmp
add
fmuls
repnz
nop
cld
jae
and
mov
add
inc
lds
xchg
ret
add
sti
add
call
clc
repnz
nop
cld
jae
add
add
add
adc
inc
add
jno
mov
sbb
je
sub
gs
add
ja
cltd
xor
jne
je
mov
nop
leave
jmp
cltd
add
add
add
stc
call
in
nop
leave
jmp
movb
add
aad
clc
repnz
nop
cld
jae
xor
add
add
mov
nop
nop
cld
jae
lahf
outsl
imul
mov
mov
clc
repnz
nop
cld
jae
cltd
xor
sub
xor
add
push
mov
nop
leave
jmp
add
imulb
push
mov
xchg
ret
add
add
add
mov
mov
nop
leave
jmp
sbb
in
cwtl
push
jmp
incl
mov
add
jle
add
sub
jecxz
inc
add
cmp
jmp
add
nop
nop
cld
jae
and
add
xchg
cmpsl
addb
rolb
mov
push
clc
repnz
nop
cld
jae
in
addl
mov
mov
jne
clc
repnz
nop
cld
jae
and
cmp
mov
mov
push
mov
xchg
ret
repz
addl
dec
cmp
push
mov
nop
leave
jmp
in
jmp
jo
add
mov
xor
mov
push
push
mov
xchg
ret
ja
add
add
lahf
add
add
xchg
int3
inc
add
add
loop
jae
add
cwtl
push
push
mov
xchg
ret
addl
add
fisttps
nop
nop
cld
jae
add
push
jno
mov
clc
repnz
nop
cld
jae
jle
add
mov
jge
clc
repnz
nop
cld
jae
push
add
add
add
push
mov
xchg
ret
jmp
add
xor
ljmp
add
push
mov
nop
leave
jmp
add
lahf
in
add
cmp
push
mov
nop
leave
jmp
aaa
add
add
xchg
dec
lea
push
mov
xchg
ret
loop
add
add
or
clc
repnz
nop
cld
jae
addl
jl
add
push
mov
xchg
ret
add
add
clc
add
clc
repnz
nop
cld
jae
rorb
fs
sub
clc
repnz
nop
cld
jae
enter
lahf
add
and
add
repnz
nop
cld
jae
jl
add
add
push
mov
xchg
ret
lods
add
add
add
loop
mov
xchg
ret
lahf
popa
enter
jmp
int
inc
adc
mov
nop
leave
jmp
add
jl
dec
and
clc
repnz
nop
cld
jae
jne
outsl
repnz
mov
xlat
mov
repnz
nop
cld
jae
jl
loop
in
sbb
outsl
loopne
mov
nop
leave
jmp
add
add
aaa
add
test
repnz
nop
cld
jae
mov
adcl
push
add
clc
repnz
nop
cld
jae
ja
sarb
nop
cld
jae
in
stos
fs
jle
add
loopne
mov
in
nop
leave
jmp
add
repz
jno
xor
push
mov
xchg
ret
add
rolb
xchg
in
nop
leave
jmp
aaa
add
mov
outsl
pusha
add
loopne
mov
xchg
ret
add
add
popa
popa
int3
rep
clc
repnz
nop
cld
jae
mov
mov
add
add
add
jne
clc
repnz
nop
cld
jae
add
popa
es
adc
mov
clc
repnz
nop
cld
jae
outsl
add
pop
push
mov
xchg
ret
cmc
ljmp
push
mov
orb
call
in
nop
leave
jmp
pop
add
je
add
repnz
nop
cld
jae
add
sti
add
clc
repnz
nop
cld
jae
add
loop
sahf
push
clc
repnz
nop
cld
jae
jl
stos
add
add
push
mov
add
or
pop
add
xor
jnp
jno
jbe
add
jno
mov
push
mov
nop
leave
jmp
cltd
lahf
jo
mov
repz
repnz
nop
cld
jae
add
jo
add
add
gs
repnz
nop
cld
jae
imul
enter
clc
repnz
nop
cld
jae
lahf
add
mov
mov
pop
adc
and
inc
add
add
mov
call
push
mov
nop
leave
jmp
add
add
leave
pop
clc
repnz
nop
cld
jae
add
add
push
or
nop
leave
jmp
add
add
add
xchg
fnsave
sar
nop
nop
cld
jae
lea
add
add
add
idiv
clc
repnz
nop
cld
jae
shl
mov
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
clc
repnz
nop
cld
jae
enter
jne
in
loopne
mov
mov
clc
repnz
nop
cld
jae
pusha
jo
push
clc
repnz
nop
cld
jae
fimull
add
call
clc
repnz
nop
cld
jae
add
mov
and
add
clc
repnz
nop
cld
jae
add
mov
add
rep
clc
repnz
nop
cld
jae
lea
add
add
add
mov
clc
repnz
nop
cld
jae
add
sti
add
add
clc
repnz
nop
cld
jae
lahf
add
add
clc
repnz
nop
cld
jae
popa
cmc
add
jae
mov
out
aam
add
inc
jno
sbb
inc
xor
repnz
nop
cld
jae
imul
repz
mov
sbb
add
fists
inc
add
aam
sbbl
nop
nop
cld
jae
ljmp
lea
clc
repnz
nop
cld
jae
add
pusha
add
add
sub
add
stos
repnz
add
jo
es
das
push
clc
repnz
nop
cld
jae
inc
addl
movb
add
push
mov
xchg
ret
jl
jno
add
mov
popa
clc
repnz
nop
cld
jae
xor
jmp
add
xor
inc
clc
repnz
nop
cld
jae
add
sub
mov
push
mov
nop
leave
jmp
pop
fs
out
out
clc
clc
repnz
nop
cld
jae
add
aaa
jae
mov
fisubrl
flds
xchg
ret
and
stos
add
in
add
or
nop
nop
cld
jae
add
mov
popa
add
mov
xchg
ret
add
movb
mov
jno
cmp
jge
clc
repnz
nop
cld
jae
lods
lods
outsl
add
inc
xor
cmpsl
jae
xor
clc
repnz
nop
cld
jae
mov
stos
add
lea
push
mov
nop
leave
jmp
add
jp
mov
clc
repnz
nop
cld
jae
xor
add
add
clc
repnz
nop
cld
jae
jl
add
jns
mov
clc
repnz
nop
cld
jae
add
xchg
scas
add
clc
repnz
nop
cld
jae
popa
jle
out
mov
push
mov
nop
leave
jmp
dec
add
jl
cli
je
push
mov
nop
leave
jmp
mov
add
and
push
mov
nop
leave
jmp
outsl
jl
ja
add
pop
dec
push
mov
xchg
ret
add
lea
sti
je
push
clc
repnz
nop
cld
jae
add
in
add
loop
adc
clc
repnz
nop
cld
jae
add
enter
mov
mov
nop
leave
jmp
push
in
xchg
mov
nop
leave
jmp
add
add
fistl
repnz
nop
cld
jae
in
addl
mov
mov
test
push
mov
xchg
ret
add
jo
leave
push
clc
repnz
nop
cld
jae
add
pusha
aaa
xor
cmp
nop
leave
jmp
mov
pop
popa
mov
mov
clc
repnz
nop
cld
jae
add
pusha
repnz
add
xchg
sub
repnz
nop
cld
jae
jl
add
jns
popa
add
mov
xchg
ret
add
and
mov
or
mov
xchg
ret
ljmp
lods
jmp
jo
ja
jae
mov
add
subl
jae
add
add
jae
movzwl
clc
repnz
nop
cld
jae
mov
outsl
push
rolb
aad
and
mov
mov
nop
leave
jmp
add
add
add
clc
repnz
nop
cld
jae
jne
add
ja
outsb
je
repnz
nop
cld
jae
add
aaa
aaa
cmp
repnz
nop
cld
jae
add
add
mov
push
ret
sbb
cld
jae
popa
xorl
push
mov
xchg
ret
add
fidivl
add
push
push
mov
xchg
ret
add
add
jno
add
clc
repnz
nop
cld
jae
add
mov
pushl
rclb
push
loop
add
mov
xor
dec
ret
clc
repnz
nop
cld
jae
jne
fs
add
in
rclb
sti
shl
clc
repnz
nop
cld
jae
cmc
addl
mov
clc
repnz
nop
cld
jae
mov
sub
loop
add
clc
repnz
nop
cld
jae
sub
mov
pop
clc
repnz
nop
cld
jae
add
ja
popa
fiaddl
bnd
inc
sub
repnz
nop
cld
jae
repnz
ds
clc
repnz
nop
cld
jae
shlb
sbb
decl
clc
repnz
nop
cld
jae
add
sub
ja
fimull
mov
adc
repnz
nop
cld
jae
cmc
jle
jmp
fisttpl
test
repnz
nop
cld
jae
add
insb
mov
push
mov
xchg
ret
repnz
jmp
jno
add
add
repnz
nop
cld
jae
add
mov
add
mov
sbb
add
clc
repnz
nop
cld
jae
cmp
cmp
push
mov
nop
leave
jmp
fs
sbb
add
push
pop
mov
clc
repnz
nop
cld
jae
add
xorl
clc
repnz
nop
cld
jae
add
test
js
repnz
nop
cld
jae
add
loop
add
aad
ret
push
push
mov
xchg
ret
add
jp
add
push
mov
nop
leave
jmp
add
sbb
dec
push
clc
repnz
nop
cld
jae
pusha
add
jle
add
inc
lret
xchg
ret
jle
movb
add
rolb
adc
clc
repnz
nop
cld
jae
jl
add
jmp
mov
add
clc
repnz
nop
cld
jae
add
add
add
add
add
clc
repnz
nop
cld
jae
popa
xor
movzwl
clc
repnz
nop
cld
jae
outsl
add
fiaddl
stc
add
push
mov
xchg
ret
add
add
mov
jmp
dec
push
add
push
add
xor
mov
and
add
clc
repnz
nop
cld
jae
cmp
add
push
clc
repnz
nop
cld
jae
add
xchg
aam
jge
push
mov
xchg
ret
in
add
jmp
stos
loop
and
enter
nop
cld
jae
loop
mov
decb
cmp
inc
add
xor
add
add
fisttps
test
push
add
clc
repnz
nop
cld
jae
mov
push
mov
xchg
ret
mov
add
bound
mov
push
mov
xchg
ret
jne
add
add
not
push
mov
xchg
ret
xchg
lods
in
jle
int3
inc
clc
repnz
nop
cld
jae
es
add
pusha
clc
repnz
nop
cld
jae
xor
fs
push
push
mov
xchg
ret
add
add
into
jecxz
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
in
loop
add
aas
icebp
inc
add
lea
add
add
repnz
nop
cld
jae
add
mov
xor
mov
cmp
cmpsb
popf
inc
add
add
add
mov
clc
repnz
nop
cld
jae
imul
mov
pop
mov
in
add
add
xor
cmc
add
pop
xchg
clc
repnz
nop
cld
jae
add
add
add
in
cmpsl
aad
mov
clc
repnz
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
rolb
add
push
clc
repnz
nop
cld
jae
add
outsl
add
jmp
add
pop
les
repnz
nop
cld
jae
jle
sub
nop
nop
cld
jae
ja
add
add
add
push
xor
fiadds
xchg
ret
imul
jl
es
aad
mov
jne
add
clc
repnz
nop
cld
jae
mov
mov
mov
xchg
ret
add
bnd
add
clc
repnz
nop
cld
jae
add
lahf
hlt
scas
mov
clc
repnz
nop
cld
jae
add
enter
add
addb
pop
push
push
mov
xchg
ret
add
dec
sub
mov
push
push
mov
nop
leave
jmp
pusha
push
add
push
dec
add
mov
nop
leave
jmp
jne
addl
out
sahf
pop
push
mov
xchg
ret
jne
add
jmp
sub
cmp
mov
xchg
ret
push
sbb
add
shr
add
push
mov
nop
leave
jmp
mov
lea
adc
add
repnz
nop
cld
jae
fisubl
cmpsb
outsb
and
clc
repnz
nop
cld
jae
add
add
sbb
jg
clc
repnz
nop
cld
jae
jle
jae
add
shll
jae
sub
push
mov
nop
leave
jmp
jae
add
sti
add
dec
ret
and
jae
jl
shrb
ljmp
mov
das
jmp
sbb
add
add
add
jo
xrelease
clc
repnz
nop
cld
jae
xor
jo
add
nop
cld
jae
add
jne
add
add
iret
xor
clc
repnz
nop
cld
jae
add
outsl
push
clc
repnz
nop
cld
jae
lods
cmp
add
sti
repnz
cmp
xor
add
clc
repnz
nop
cld
jae
mov
sbb
add
addl
jmp
iret
inc
add
inc
repnz
add
push
fwait
mov
clc
repnz
nop
cld
jae
add
pop
ja
nop
leave
jmp
cmp
sti
mov
mov
repnz
nop
cld
jae
xchg
and
loop
mov
jns
add
scas
lret
xchg
ret
add
add
xor
repnz
nop
cld
jae
enter
mov
cmp
repnz
nop
cld
jae
add
xchg
add
mov
add
xor
add
clc
repnz
nop
cld
jae
add
shr
mov
clc
repnz
nop
cld
jae
enter
jno
xor
add
mov
clc
repnz
nop
cld
jae
fs
in
ljmp
repnz
nop
cld
jae
loop
add
lea
cmpsl
jnp
int
pop
jae
mov
nop
leave
jmp
jl
jno
add
mov
push
mov
nop
leave
jmp
mov
in
repnz
shll
mov
push
jmp
add
shl
add
add
xchg
mov
add
mov
clc
repnz
nop
cld
jae
add
add
popa
add
mov
add
add
in
nop
leave
jmp
add
popa
mov
mov
add
push
mov
xchg
ret
and
xor
mov
aam
add
popa
repnz
das
lea
clc
repnz
nop
cld
jae
add
jle
loop
lcall
repnz
nop
cld
jae
add
in
sub
nop
nop
cld
jae
add
add
push
push
mov
nop
leave
jmp
add
fiaddl
ja
mov
clc
repnz
nop
cld
jae
mov
add
add
fs
add
repnz
nop
cld
jae
add
popa
add
add
std
push
mov
add
add
roll
jg
add
add
test
icebp
clc
repnz
nop
cld
jae
mov
lods
roll
mov
xchg
ret
add
add
add
adc
stos
mov
clc
repnz
nop
cld
jae
mov
mov
shr
cld
or
nop
leave
jmp
popa
add
add
clc
repnz
nop
cld
jae
loop
jo
mov
ja
add
mov
push
mov
xchg
ret
pusha
pusha
add
in
add
jl
dec
sub
das
lock
add
loop
push
lahf
jne
clc
repnz
nop
cld
jae
jle
in
call
push
mov
xchg
ret
repnz
and
addl
mov
mov
add
repnz
nop
cld
jae
add
cmp
leave
and
clc
repnz
nop
cld
jae
add
add
pusha
dec
rol
push
mov
nop
leave
jmp
add
popa
rolb
fsts
repnz
nop
cld
jae
add
add
jmp
add
stc
mov
push
mov
nop
leave
jmp
xor
add
add
pusha
mov
add
repnz
nop
cld
jae
add
add
es
clc
repnz
nop
cld
jae
add
cmp
repnz
nop
cld
jae
outsl
add
sti
rolb
cmp
push
mov
nop
leave
jmp
cmp
add
dec
cmpl
push
mov
nop
leave
jmp
add
add
dec
mov
clc
repnz
nop
cld
jae
mov
add
mov
nop
cld
jae
add
add
rclb
in
nop
leave
jmp
popa
add
add
fisubrl
lods
mov
clc
repnz
nop
cld
jae
lods
push
lret
xorl
clc
repnz
nop
cld
jae
add
cmp
nop
nop
cld
jae
aaa
add
add
repnz
nop
cld
jae
add
imul
clc
repnz
nop
cld
jae
jo
jno
jno
rolb
mov
add
clc
repnz
nop
cld
jae
andl
cmc
mov
out
div
push
mov
nop
leave
jmp
add
es
add
in
sub
repnz
nop
cld
jae
add
repz
add
pop
test
push
mov
nop
leave
jmp
xor
popa
add
add
push
mov
xchg
ret
jl
add
add
push
clc
repnz
nop
cld
jae
add
add
pop
clc
repnz
nop
cld
jae
lods
lods
jmp
in
add
aaa
lcall
repnz
nop
cld
jae
jae
jno
outsl
mov
clc
repnz
nop
cld
jae
mov
inc
add
pop
scas
call
clc
repnz
nop
cld
jae
sub
add
clc
repnz
nop
cld
jae
stos
add
add
rcr
clc
repnz
nop
cld
jae
mov
add
inc
jp
push
mov
nop
leave
jmp
es
std
mov
push
mov
nop
leave
jmp
sub
add
pop
jmp
sti
add
add
add
add
dec
movzwl
clc
repnz
nop
cld
jae
add
add
xor
mov
xchg
pop
jmp
add
add
sub
add
ror
add
push
push
mov
xchg
ret
cmp
jo
jne
add
in
movzwl
clc
repnz
nop
cld
jae
jno
add
mov
mov
push
mov
nop
leave
jmp
sub
mov
clc
repnz
nop
cld
jae
mov
aaa
or
mov
xchg
ret
outsl
add
repnz
jge
mov
pop
jmp
add
adc
adc
add
dec
push
clc
repnz
nop
cld
jae
popa
jne
add
lea
mov
nop
leave
jmp
add
repnz
add
mov
arpl
nop
leave
jmp
add
add
enter
push
mov
nop
leave
jmp
add
add
sub
arpl
mov
nop
leave
jmp
add
push
clc
repnz
nop
cld
jae
outsl
add
add
clc
div
clc
repnz
nop
cld
jae
addl
add
add
or
repnz
nop
cld
jae
push
es
add
clc
repnz
nop
cld
jae
add
jae
add
adc
mov
push
add
repnz
nop
cld
jae
add
add
cmp
dec
mov
add
add
add
nop
nop
cld
jae
outsl
loop
add
es
je
clc
repnz
nop
cld
jae
add
cmp
mov
nop
leave
jmp
add
mov
add
inc
pop
add
push
mov
nop
leave
jmp
mov
cltd
pop
xor
nop
nop
cld
jae
add
add
outsl
sub
push
mov
xchg
ret
jmp
fs
dec
clc
repnz
nop
cld
jae
add
add
add
mov
xchg
push
xchg
jmp
loope
xchg
and
sbb
pop
clc
repnz
nop
cld
jae
jmp
mov
add
clc
repnz
nop
cld
jae
addl
add
xor
mov
lock
pop
call
and
add
add
mov
add
jmp
add
add
add
cmpl
add
repz
mov
nop
leave
jmp
cmp
in
es
mov
repz
mov
add
push
mov
nop
leave
jmp
xchg
jle
pop
mov
clc
repnz
nop
cld
jae
pop
addl
dec
xor
push
mov
nop
leave
jmp
jo
movb
bnd
imul
mov
call
in
nop
leave
jmp
xor
mov
jb
repnz
nop
cld
jae
add
add
fbld
popa
add
mov
xchg
ret
mov
add
shlb
les
push
mov
nop
leave
jmp
add
shlb
or
repnz
nop
cld
jae
sub
outsl
ja
mov
mov
nop
leave
jmp
add
jl
add
lods
inc
add
add
push
mov
nop
leave
jmp
jne
sub
imul
inc
xor
clc
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
lea
imul
sub
enter
loop
and
add
repnz
ja
add
repnz
nop
cld
jae
outsl
mov
add
add
mov
ror
clc
repnz
nop
cld
jae
imul
lds
pop
add
add
repnz
nop
cld
jae
lahf
add
add
nop
nop
cld
jae
repnz
sbb
push
mov
xchg
ret
add
xor
mov
clc
repnz
nop
cld
jae
dec
add
add
clc
repnz
nop
cld
jae
add
add
enter
mov
push
inc
and
push
mov
nop
leave
jmp
mov
jmp
add
or
push
pop
add
lea
add
jae
ljmp
adc
mov
push
push
mov
xchg
ret
jmp
dec
jle
push
cmp
add
lcall
nop
cld
jae
inc
add
lea
add
mov
or
add
repnz
nop
cld
jae
fisubl
add
repnz
nop
cld
jae
add
add
jmp
popa
cs
push
mov
xchg
ret
add
jmp
mov
xchg
in
and
push
mov
xchg
ret
xchg
add
cmp
adc
mov
fldl
cmp
cmp
ret
cmc
push
add
imul
clc
repnz
nop
cld
jae
dec
jl
add
lea
repnz
nop
cld
jae
add
lods
loop
mov
in
add
mov
pop
push
mov
nop
leave
jmp
add
add
cmpl
rclb
nop
leave
jmp
jmp
jne
add
mov
jno
mov
clc
repnz
nop
cld
jae
add
add
add
movsl
sbb
nop
leave
jmp
in
mov
cmp
inc
add
add
repnz
nop
cld
jae
add
add
sub
mov
push
mov
nop
leave
jmp
shlb
add
jmp
in
add
push
mov
nop
leave
jmp
enter
xor
add
clc
repnz
nop
cld
jae
add
aaa
add
jno
adc
mov
add
clc
repnz
nop
cld
jae
add
lea
ljmp
incl
add
aaa
jle
add
jmp
add
pop
insl
mov
clc
repnz
nop
cld
jae
add
add
imul
andl
xorl
incl
add
add
fiaddl
add
pop
push
mov
nop
leave
jmp
add
stos
add
mov
push
mov
add
and
inc
xchg
cld
dec
add
dec
inc
add
mov
clc
repnz
nop
cld
jae
add
stos
sti
mov
push
mov
xchg
ret
loop
lods
add
mov
inc
jle
je
js
repnz
nop
cld
jae
popa
add
sub
jae
mov
clc
repnz
nop
cld
jae
ljmp
jle
push
mov
nop
leave
jmp
add
jo
aaa
add
jmp
lahf
inc
pusha
add
mov
mov
cmc
xor
jle
repz
repnz
nop
cld
jae
mov
add
pusha
ljmp
faddl
xchg
ret
jle
xor
add
cli
inc
clc
repnz
nop
cld
jae
add
xor
and
clc
repnz
nop
cld
jae
add
sahf
push
push
mov
xchg
ret
sub
jl
jae
mov
add
je
clc
repnz
nop
cld
jae
in
popa
aas
mov
push
mov
xchg
ret
add
test
mov
clc
repnz
nop
cld
jae
add
add
insl
xchg
push
mov
xchg
ret
add
imul
xchg
dec
pushl
push
mov
xchg
ret
lahf
add
add
sub
popa
add
repnz
nop
cld
jae
mov
add
repnz
push
mov
xchg
ret
add
add
add
push
int
inc
add
mov
popa
add
shlb
repz
push
mov
nop
leave
jmp
lods
jle
add
add
popa
add
and
clc
repnz
nop
cld
jae
in
pop
add
push
cltd
push
out
push
clc
repnz
nop
cld
jae
add
jae
popa
pusha
mov
popl
mov
nop
leave
jmp
and
add
add
in
nop
leave
jmp
jmp
add
xor
add
mov
xchg
ret
add
add
add
jl
cmp
nop
nop
cld
jae
mov
in
jle
clc
repnz
nop
cld
jae
add
add
in
xorl
clc
repnz
nop
cld
jae
movb
xchg
mov
clc
repnz
nop
cld
jae
mov
add
test
push
mov
nop
leave
jmp
add
add
add
repnz
nop
cld
jae
add
add
lret
push
push
mov
nop
leave
jmp
add
add
cmc
add
mov
mov
nop
leave
jmp
add
mov
add
in
nop
leave
jmp
add
xchg
ja
add
mov
mov
mov
test
clc
repnz
nop
cld
jae
mov
mov
jge
push
mov
nop
leave
jmp
add
add
mov
push
mov
xchg
ret
outsl
lea
add
and
add
cs
clc
repnz
nop
cld
jae
xor
add
enter
jecxz
ss
nop
leave
jmp
add
add
pusha
ljmp
clc
repnz
nop
cld
jae
popa
repnz
cld
mov
clc
repnz
nop
cld
jae
jl
mov
mov
clc
repnz
nop
cld
jae
jno
add
add
xor
push
mov
xchg
ret
add
sarb
out
add
imul
popa
push
repnz
nop
cld
jae
dec
cmp
mov
ret
push
mov
xchg
ret
sbb
repz
lret
repnz
nop
cld
jae
xor
xchg
add
mov
add
in
nop
leave
jmp
in
mov
in
cmc
add
int
clc
repnz
nop
cld
jae
add
xor
repz
repnz
nop
cld
jae
add
sti
add
inc
push
mov
xchg
ret
mov
addl
mov
nop
leave
jmp
add
cmc
add
jae
sahf
pop
clc
repnz
nop
cld
jae
push
push
sbb
xor
add
add
in
nop
leave
jmp
add
add
nop
cld
jae
jmp
add
add
rolb
push
mov
xchg
ret
xor
jmp
repz
sub
add
add
repnz
nop
cld
jae
add
mov
mov
mov
clc
repnz
nop
cld
jae
add
jmp
jno
add
sub
in
nop
leave
jmp
add
aaa
or
mov
push
clc
repnz
nop
cld
jae
add
test
push
mov
xchg
ret
add
in
mov
and
mov
add
push
flds
repz
mov
nop
leave
jmp
addl
and
mov
nop
cld
jae
add
add
fisubrl
add
imul
clc
repnz
nop
cld
jae
add
add
add
add
push
mov
xchg
ret
and
add
push
clc
repnz
nop
cld
jae
mov
pop
mov
push
int
push
mov
xchg
ret
jmp
add
add
add
sub
repnz
nop
cld
jae
cltd
add
mov
inc
rorl
push
mov
ss
imul
imul
mov
push
cld
jp
test
push
pushf
ja
add
cmp
enter
orl
mov
add
stc
outsl
outsl
jp
mov
mov
aas
xor
lcall
inc
push
int3
lea
and
sub
push
sbb
mov
imul
mov
xor
mov
outsl
pop
dec
push
pop
sbb
divb
aaa
lods
pusha
add
cmp
push
add
add
mov
add
or
fidivrs
pop
add
mov
ds
bound
mov
mov
jg
out
ret
dec
pop
addr16
push
xlat
cli
dec
mov
add
xor
mov
sbbl
mov
sub
mov
cltd
cs
test
js
out
les
mov
addb
sbb
insb
inc
add
add
mov
xchg
and
mov
adc
mov
gs
cs
sub
push
popf
push
add
lret
xchg
decl
cld
cmc
mov
mov
mov
outsb
xchg
iret
dec
xor
mov
add
push
imul
mov
xor
add
add
mov
push
add
mov
inc
bound
mov
mov
xor
mov
out
loop
mov
mov
pop
mov
movl
xor
mov
addr16
mov
lods
lret
leave
xchg
mov
add
and
stc
out
iret
out
xchg
cmp
push
data16
arpl
add
cmp
std
sbb
dec
jg
sbb
lcall
xchg
xchg
add
add
mov
cwtl
in
mov
sub
dec
in
inc
nop
add
add
push
xlat
inc
adc
pop
push
lods
sbb
int
lcall
sub
mov
push
or
mov
sbb
inc
outsl
inc
push
add
cltd
and
lds
mov
out
adc
lcall
es
aas
icebp
adc
mov
addb
sahf
add
jecxz
mov
inc
sub
pop
xchg
in
sbb
cmp
add
add
inc
add
arpl
addb
and
mov
test
add
mov
sahf
and
in
scas
inc
add
mov
sti
cmpsb
add
add
cwtl
lahf
cmpsl
test
add
imul
add
out
scas
cmpsb
jle
add
gs
dec
pop
jl
test
inc
rorl
adc
pushf
aam
add
jle
xor
mov
rolb
jp
xor
enter
mov
sbb
adc
push
mov
mov
mov
rolb
or
stos
xchg
xchg
add
pop
inc
mov
and
mov
movsb
div
add
fdivrs
addb
idiv
inc
mov
mov
movsl
js
stos
push
jmp
inc
scas
push
add
rolb
dec
int3
and
add
cld
int3
jns
add
xchg
push
sbb
test
xchg
in
in
pop
bound
mov
ja
ljmp
xor
mov
xor
add
pop
jns
add
mov
lahf
popa
xchg
mov
das
rorl
jecxz
sbb
add
inc
aam
mov
cmp
mov
mov
into
stos
mov
add
mov
imul
xchg
mov
fwait
jge
mov
add
int3
lcall
adc
mov
movsb
lods
fcomip
jle
add
inc
add
xchg
dec
leave
xchg
push
cltd
inc
paddb
add
jmp
add
adcl
insb
and
sbb
pushf
dec
and
mov
mov
pop
dec
cmp
mov
mov
mov
push
sahf
push
xchg
sbb
add
je
xchg
imul
and
mov
out
jb
mov
mov
mov
inc
or
les
ds
and
mov
xlat
cmp
inc
add
add
mov
mov
lods
imul
cmpsl
cmp
push
loopne
mov
jge
jno
adc
sub
mov
mov
mov
add
pop
out
push
dec
lods
bound
mov
add
out
mov
add
adc
adc
pop
mov
push
stos
dec
push
add
dec
addb
xchg
fidivs
add
in
mov
rorl
push
sub
inc
lock
bound
mov
sbb
mov
adc
mov
scas
out
pop
in
jnp
mov
push
movb
add
push
add
add
lods
hlt
mov
adc
stos
dec
jg
cmp
add
xchg
arpl
add
add
fists
adc
mov
add
mov
push
mov
mov
ret
daa
outsb
pusha
add
mov
add
loop
mov
add
shrl
xchg
inc
and
in
inc
adc
lods
sahf
fidivl
adc
mov
mov
mov
xor
mov
mov
xlat
mov
mov
sbb
sbb
mov
mov
rolb
mov
add
sub
add
enter
pop
rolb
pop
cmc
or
sub
mov
mov
add
mov
sub
mov
repz
push
add
add
sbb
add
mov
push
popa
pusha
add
scas
push
les
iret
cmpsb
cmc
pop
test
je
adc
mov
lock
jo
mov
lods
rolb
push
inc
xchg
add
fwait
rolb
mov
clc
inc
push
clc
cltd
cmp
xchg
hlt
add
or
ja
mov
jmp
mov
loop
mov
push
add
add
loope
lret
mov
cmpsl
rolb
mov
mov
jmp
add
jl
add
out
loop
mov
mov
pop
pop
repnz
addb
inc
and
add
fstp
cmc
sti
or
nop
add
mov
ss
or
imul
add
jmp
mov
sahf
cmp
call
sbb
call
pop
and
mov
push
add
mov
cmp
out
stc
mov
jae
sub
das
push
ja
add
enter
aas
add
mov
pop
loopne
mov
mov
xor
loop
mov
dec
fsubrp
and
sbb
or
mov
mov
jo
mov
clc
loop
mov
std
jg
scas
mov
add
dec
addb
mov
mov
and
jno
jmp
lds
call
arpl
add
jbe
inc
fs
mov
xchg
dec
cmpsl
inc
add
mov
pusha
add
sub
jno
add
mov
out
stos
adc
mov
push
mov
xor
jae
je
out
jg
rolb
hlt
inc
xchg
rolb
mov
dec
arpl
add
mov
pushl
fwait
stc
imul
mov
pop
xchg
add
inc
adc
es
pop
repnz
stos
int3
cmova
clc
pop
addr16
sbb
int3
idivb
add
add
outsb
stc
and
imul
add
mov
add
add
cli
fs
std
rorl
mov
xor
in
sub
fs
iret
jle
mov
frstor
mov
xchg
hlt
pop
pop
push
cmp
inc
stc
sbb
add
add
add
xor
pop
sub
scas
cwtl
cwtl
mov
aad
stc
fisubrl
fnstenv
sahf
movsl
in
jnp
aam
bound
mov
sub
sbb
add
push
or
cltd
and
mov
mov
mov
mov
jmp
test
jbe
add
push
cmp
add
mov
imul
xchg
add
cwtl
outsb
cli
cwtl
call
mov
mov
pop
or
cmp
add
xor
or
clc
das
push
add
push
push
pop
xchg
add
cmp
push
sbb
xchg
fcomps
fists
pop
repz
jmp
punpckhwd
fs
fisttpl
aaa
mov
mov
inc
mov
and
mov
je
outsl
movsl
xlat
xlat
push
pop
add
addb
pop
and
add
dec
pop
adc
and
pop
fnstenv
mov
push
sbb
stos
dec
push
je
insb
inc
add
mov
add
mov
add
push
push
fistl
xchg
lcall
dec
fst
cmpsb
fwait
jge
mov
ja
addb
inc
fcomps
xchg
sbb
add
cmp
ljmp
sub
cltd
pop
cmp
lods
dec
xlat
fbstp
int3
sbb
cmpsl
pushf
mov
jmp
jns
xlat
enter
jne
pusha
add
rcll
fwait
sahf
jp
and
movsb
cmp
es
adc
mov
mov
fs
add
and
movsl
lcall
push
mov
xor
pop
push
add
mov
mov
lods
fistl
adc
mov
xor
mov
push
add
add
fsts
add
cld
sub
pop
ret
ds
jl
es
sbb
mov
arpl
and
aad
rcrl
push
inc
scas
push
xchg
add
pop
cli
stos
scas
sahf
lahf
xor
mov
mov
mov
loopne
mov
add
pop
negl
jge
dec
push
mov
mov
jns
push
iret
lods
xlat
outsb
je
add
mov
cwtl
xlat
imul
cmpsl
xor
mov
js
xchg
enter
xor
mov
push
add
inc
add
inc
dec
in
dec
and
sub
push
mov
mov
add
lods
sbb
add
cmp
cld
cwtl
cmp
mov
ss
outsb
lods
jnp
hlt
in
fsubl
stos
inc
dec
xor
adc
mov
rolb
jno
outsl
sub
adc
mov
ret
mov
fcmovu
das
test
add
mov
jbe
fwait
cmp
ljmp
int3
rcrl
sti
repnz
jmp
mov
aad
popa
lock
dec
jl
push
xor
mov
pop
popf
in
imul
in
out
sbb
idivl
jl
add
mov
cli
repnz
lods
mov
add
add
jns
add
je
sahf
testl
cmp
add
add
out
xor
mov
nop
add
cs
xchg
lods
outsb
dec
sub
rolb
and
mov
testb
sbb
cmp
xchg
divl
mov
dec
jb
mov
add
and
add
add
dec
mov
mov
push
sarl
mov
mov
int
jmp
fdivs
ss
aad
push
lahf
loopne
mov
enter
cmp
jo
mov
jns
loope
push
add
mov
adc
mov
add
loope
loop
mov
mov
or
add
sub
mov
add
mov
outsl
in
clc
mov
mov
scas
xorl
adc
add
mov
stos
add
inc
add
mov
out
daa
mov
mov
sahf
push
add
inc
bt
inc
xchg
loopne
mov
add
and
mov
pop
les
and
jge
call
fcmovnu
in
hlt
test
test
dec
dec
pop
mov
and
mov
mov
shll
mov
sti
jle
addr16
repnz
ss
rorl
mov
rolb
aad
push
arpl
add
pushf
in
push
not
imul
pop
shll
stc
push
in
js
fldt
aas
xlat
pop
mov
imul
xchg
in
cmp
push
add
and
notl
pop
insl
jl
push
bound
mov
pop
lret
dec
xor
mov
adc
test
adcl
push
dec
xor
cmp
pop
xlat
dec
out
clc
xchg
leave
mov
inc
rolb
mov
push
or
or
cwtl
cmp
repz
dec
xchg
inc
jl
sbb
mov
jb
mov
xor
xor
popf
adc
add
mov
pop
ss
mov
add
mov
dec
inc
gs
mov
mov
jae
xchg
xlat
loopne
mov
cmc
sbb
add
cmp
repnz
cmp
dec
hlt
fdecstp
sahf
jp
call
xchg
fwait
test
pop
leave
fs
push
add
les
jnp
and
sahf
stc
xchg
add
add
add
add
mov
out
jg
or
pop
cmc
scas
fucomi
mov
add
adc
sbb
and
mov
mov
rolb
mov
insb
inc
adc
call
push
lods
cs
jns
push
or
rolb
mov
add
add
dec
mov
jae
add
fadd
jnp
addb
add
mov
leave
push
dec
mov
mov
out
ret
add
mov
add
mov
loope
inc
loopne
mov
add
push
add
mov
out
bound
mov
clc
jbe
xchg
into
push
leave
adc
xlat
pop
fistl
push
idivl
xchg
xchg
or
pop
jno
add
add
jae
add
cmc
mov
test
or
sub
cmpsl
inc
lea
loop
mov
test
fdiv
ret
adc
lcall
cmp
push
mov
mov
jb
mov
insb
xor
mov
icebp
mulb
or
pop
nop
add
jnp
mov
in
jne
call
enter
add
in
push
add
pop
mov
dec
call
mov
jmp
dec
fidivrl
vunpcklpd
sub
add
mov
adc
sub
ds
push
adc
and
xchg
ss
add
push
add
adc
xor
outsl
in
aad
js
nop
add
repnz
cli
sub
add
xor
pop
lods
xor
mov
xchg
int
jb
mov
aam
ljmp
jns
popf
pushf
xchg
dec
sub
pop
adc
cmc
jle
mov
push
cmc
cmp
mov
xor
mov
push
add
mov
add
add
cmp
mov
inc
fildl
sti
fildll
push
add
mov
dec
push
arpl
jecxz
push
outsl
testl
push
add
ret
in
das
jns
dec
jmp
sbb
mov
inc
jle
mov
lock
push
and
xor
in
imulb
push
fidivl
cmpsb
xor
mov
repz
loope
cmp
fsubrp
push
add
mov
push
mov
sub
add
xchg
adc
pop
inc
inc
mov
data16
loop
mov
xor
mov
mov
fcompl
sbb
cmp
jecxz
es
hlt
popa
sti
mov
add
rolb
nop
add
mov
jo
mov
mov
mov
mov
pop
std
and
sbb
pop
leave
hlt
mov
rolb
mov
cmp
vmovntps
out
lret
mov
mov
cmp
orl
out
push
stos
mov
sub
lock
decb
pop
mov
setle
mov
xlat
ljmp
je
add
add
jno
lods
aam
add
insb
std
lahf
sbb
push
jmp
add
add
outsl
pop
push
lods
and
add
stos
jmp
inc
mov
ljmp
mov
cmp
mov
movsl
loop
mov
fdivrl
sti
fbstp
inc
aam
add
popf
out
mov
inc
mov
inc
push
add
mov
or
mov
daa
in
cwtl
and
push
sahf
xchg
les
sub
insb
mov
sub
in
mov
mov
repz
fsubrs
and
mov
xchg
es
rolb
xlat
push
fisttpll
fisubrl
sub
mov
xchg
sbbl
add
or
add
xchg
addb
in
adc
mov
mov
idiv
jo
mov
add
mov
hlt
and
dec
and
add
mov
mov
rcll
mov
add
leave
test
out
test
add
add
je
add
int
es
mov
mov
lds
das
mov
sbb
push
seto
mov
jg
mov
jbe
ja
test
cli
jo
mov
cwtl
stos
outsl
or
pop
push
aam
dec
fisubrl
add
pusha
add
push
dec
inc
int3
or
xor
mov
fmulp
mov
mov
cmpsb
sahf
sti
scas
in
addr16
popf
scas
push
cld
jns
push
jae
xchg
add
mov
insb
je
in
add
and
and
mov
mov
add
jl
add
mov
lea
add
push
xchg
add
jp
add
mov
mov
xchg
xor
mov
mov
cmp
sti
fs
jge
mov
ret
dec
adc
into
inc
add
inc
add
add
mov
hlt
ficoms
add
adc
or
nop
add
leave
jo
mov
imul
mov
mov
add
push
mov
cmp
rolb
out
rolb
mov
repnz
fmuls
mov
rolb
xchg
add
add
aaa
addb
xlat
cld
out
dec
pusha
add
xor
mov
inc
out
iret
popa
pop
es
fdivs
mov
add
mov
ljmp
jns
out
fldt
arpl
inc
pop
xor
scas
or
add
add
mov
add
std
xor
add
sbb
add
faddl
add
pop
mov
cmp
jnp
js
xor
sbb
cmp
je
pop
data16
or
mov
mov
add
add
sahf
cmp
and
cmp
mov
test
mov
mov
and
add
sahf
sub
pop
adc
mov
push
out
cmp
jno
into
ss
or
pop
cli
push
repnz
jp
fnstenv
fildll
cmp
incl
push
adc
mov
mov
cmp
jmp
add
mov
xchg
sub
les
sarl
cmp
add
sbb
dec
xor
daa
adc
mov
add
mov
mov
in
sbb
add
mov
mov
es
mov
fsubl
fistpl
mov
mov
test
or
and
pop
sub
mov
xor
mov
int
pop
add
mov
fwait
icebp
sub
mov
push
mov
int3
pop
mov
in
ljmp
add
xor
mov
mov
add
test
bound
mov
bound
mov
pop
das
ret
insl
loopne
mov
mov
mov
push
xchg
add
cmp
in
fwait
push
push
mov
xchg
or
hlt
negb
fisttpll
fs
add
mov
into
mov
cltd
adc
inc
aaa
das
insl
outsb
inc
aas
clc
nop
add
decl
xchg
jmp
add
adc
iret
les
sbb
add
js
into
and
mov
mov
xchg
insb
ljmp
xchg
mov
test
call
movsb
and
jmp
fptan
add
sub
mov
and
mov
add
dec
int3
in
sub
into
or
cmp
dec
xchg
mov
add
adcl
ds
and
in
mov
add
add
inc
inc
imul
cmc
hlt
nop
add
je
add
adc
add
mov
adcl
addb
xchg
jbe
push
add
mov
fucom
push
sbb
cmp
add
stos
push
pop
inc
jmp
mov
pop
push
fcomip
xor
sbb
add
pop
jbe
mov
mov
shrl
push
add
cltd
clc
pushf
push
inc
lret
xchg
ds
inc
push
lods
loopne
mov
pop
cli
inc
ja
pushf
fnstsw
int3
daa
sbb
pop
jmp
lcall
stos
vshufps
aaa
int
jne
add
rolb
mov
push
sub
movsl
addb
add
pop
arpl
sbb
add
xor
mov
sti
mov
mov
decl
jae
rolb
mov
cwtl
aad
dec
cli
cmp
mov
adc
adc
pop
dec
in
adc
push
roll
mov
push
add
xor
pop
push
mov
mov
push
sub
fldcw
mov
mov
arpl
mov
xor
mov
cwtl
dec
ljmp
loop
mov
shrl
xchg
jbe
dec
inc
cmp
fisubs
mov
sub
imul
decb
pop
mov
mov
dec
clc
repnz
sub
fwait
in
add
mov
cmpsl
xchg
push
es
sarl
into
into
cmp
mov
addr16
movl
mov
mov
add
sub
sti
or
fbld
add
mov
or
sbb
add
in
add
add
xlat
pusha
add
xor
stos
jae
dec
xchg
add
fidivl
sub
or
test
push
or
je
je
sahf
repz
aam
stc
je
add
xchg
add
mov
add
mov
xchg
rolb
pop
ljmp
mov
add
sbb
rorl
add
mov
mov
dec
lahf
movsb
mov
add
mov
cmp
lock
je
sub
int3
das
js
inc
sti
in
add
add
cmp
das
dec
xor
mov
cmovg
les
jnp
jmp
dec
pop
xor
mov
inc
leave
pushf
jle
push
fsubrl
xchg
sbb
add
jecxz
lea
mov
out
es
ljmp
rolb
mov
pop
lahf
lds
add
pop
dec
sub
add
mov
push
lds
sbb
jns
dec
jb
mov
ljmp
pop
insb
dec
and
cmp
enter
out
jg
dec
xchg
mov
xchg
sub
jp
ljmp
stos
jp
cmp
jnp
sti
cmpsl
sub
into
fs
test
das
pop
pushf
je
mov
sbb
inc
inc
out
add
mov
mov
mov
stos
mov
and
inc
loop
mov
add
push
add
xor
mov
sbb
push
ljmp
add
aas
xchg
sbb
fidivl
mov
sti
push
aad
inc
mov
iret
popf
jg
push
ds
or
lret
mov
xchg
add
addb
dec
sbb
lret
add
mov
push
mov
add
add
add
mov
xor
loop
mov
gs
mov
repz
mov
mov
sbb
sbb
add
sbb
stos
mov
mov
mov
mov
lock
jns
adc
mov
add
push
jmp
lret
clc
in
inc
mov
push
add
mov
jmp
roll
addl
xchg
xor
mov
jne
enter
adc
mov
mov
add
sub
cmp
lds
imul
jnp
and
adc
ja
inc
push
add
addr16
cmp
sbb
mov
mul
add
dec
lea
adc
arpl
mov
jmp
dec
sub
cmp
sti
jle
scas
jbe
add
cmpsl
pop
xor
sub
add
add
add
pop
xor
cwtl
mov
mov
es
add
sbb
add
pop
sahf
rorl
decl
sti
or
mov
mov
push
push
out
xchg
jge
jge
popa
js
ja
outsb
mov
mov
mov
add
rolb
into
pop
leave
jno
mov
mov
pop
jbe
fdivr
fimuls
mov
leave
sub
xchg
stos
sbb
and
mov
mov
add
mov
shrl
sbb
cmp
mov
add
and
mov
cmpsl
test
mov
outsl
sub
push
sbb
inc
arpl
lret
xor
ret
addb
mov
inc
inc
cmp
cld
mov
add
adc
jne
mov
mov
add
stos
jp
push
add
arpl
or
cwtl
inc
enter
mov
xor
int
inc
rcll
mov
mov
mov
mov
adc
mov
mov
rolb
mov
mov
add
popa
dec
mov
jbe
add
sbb
ljmp
aaa
pop
dec
cmovs
xchg
lret
lcall
popf
mov
loopne
mov
ljmp
dec
dec
xor
mov
ja
xor
add
sti
cmc
cwtl
or
pop
aam
aaa
mov
mov
xchg
int
jecxz
jmp
add
scas
fwait
repnz
xor
and
mov
mov
cmp
add
jg
pop
xchg
lcall
sahf
data16
add
mov
mov
aam
lret
add
aad
iret
std
inc
insl
icebp
movsl
dec
pop
sbb
add
or
sub
pop
push
or
add
nop
add
es
cmp
nop
add
clc
dec
scas
fidivrs
cwtl
clc
add
mov
jns
jo
mov
fs
mov
mov
rolb
ja
in
lcall
mov
pmulhuw
xor
cmp
sbb
scas
mov
xor
dec
mov
pop
in
mov
inc
lret
lahf
mov
call
add
sub
mov
add
fdivr
mov
add
xlat
and
pop
test
xchg
inc
dec
mov
add
call
or
lods
out
stos
adc
mov
cli
fcoml
xchg
inc
push
subps
into
lock
and
mov
lods
xor
add
ljmp
push
jp
push
inc
adc
scas
mov
clc
jo
mov
mov
jbe
movsb
mov
pop
and
lock
lods
jo
mov
add
add
mov
aad
dec
add
mov
or
xlat
xchg
pop
inc
jbe
cmpsl
sub
and
jmp
mov
mov
sub
xlat
push
add
jo
mov
sbb
cmp
or
add
popa
sub
mov
add
mov
add
add
cwtl
pop
lea
add
dec
or
mov
and
fsts
add
add
mov
add
mov
mull
xor
jo
mov
iret
lret
sbb
out
sbb
add
mov
fs
add
orl
add
and
mov
out
adc
mov
mov
mov
add
mov
popf
dec
sbb
add
sbb
add
adc
mov
xlat
js
mov
mov
add
mov
fdivp
je
pusha
add
push
mov
dec
mov
ds
pusha
add
popf
jg
cmp
and
cltd
push
add
aaa
mov
push
xor
mov
adc
mov
add
mov
inc
cmpsb
pop
sbb
sub
add
mov
popa
pop
xor
fnstcw
xchg
push
int3
aas
cmpsl
jmp
cs
out
fsubrl
inc
push
icebp
les
das
dec
jb
mov
mov
and
les
add
dec
or
add
stos
mov
mov
add
inc
inc
add
test
pop
pop
xchg
scas
test
mov
in
pop
xchg
mov
and
jg
jecxz
dec
cwtl
gs
out
gs
mov
sub
loope
lret
clc
jl
leave
mov
pop
sub
pop
imul
dec
outsb
cmp
gs
mov
add
mov
ja
cmovns
pop
push
in
lcall
mov
dec
jg
je
out
add
mov
out
add
add
xor
fsubrl
mov
add
cmp
pop
mov
jns
cmc
std
fsubr
xchg
dec
pop
rcll
mov
add
mov
pop
pushf
ret
and
xorl
and
add
iret
sbb
add
lds
inc
rolb
insl
push
add
xchg
imul
jns
inc
dec
pusha
add
notl
xchg
add
xchg
push
movsl
mov
mov
or
pop
jo
mov
mov
mov
aam
mov
mov
nop
add
jnp
pop
mov
je
push
dec
shll
xor
fidivs
hlt
aad
outsb
insl
sti
mov
jbe
pop
lahf
arpl
inc
sub
add
sub
mov
mov
add
repnz
aad
mov
add
push
cmpsb
xchg
pop
test
push
mov
rolb
mov
mov
iret
jmp
xchg
sbb
adc
ja
sub
add
mov
fsubp
mov
add
mov
add
repz
add
inc
jecxz
or
lcall
add
dec
adc
jecxz
adc
mov
mov
jge
xor
add
mov
imul
push
add
out
push
mov
sub
pusha
add
pop
sbb
cmp
out
add
or
nop
add
jecxz
inc
sbb
sbb
shll
add
push
adc
add
sub
pop
repnz
mov
mov
mov
or
cmp
mov
out
rorl
mov
add
sbb
pusha
add
cmp
mov
ret
jle
or
add
sub
fwait
add
push
push
mov
jo
mov
add
stos
mov
jnp
mov
add
es
pop
into
cmp
lds
mov
lods
pop
cmp
push
mov
arpl
out
aas
cwtl
or
lods
addb
mov
fisubrs
sub
push
cmp
jno
mov
inc
mov
add
mov
movsb
jbe
xchg
js
data16
add
mov
es
add
and
scas
nop
add
mov
mov
sub
jg
rolb
mov
outsl
jecxz
jne
jno
mov
adc
sbb
add
popa
dec
negb
ja
and
mov
jno
add
push
jnp
arpl
rolb
mov
sbb
add
mov
imul
scas
jo
mov
cmp
out
imul
add
lock
mov
ret
mov
mov
mov
sbb
mov
jmp
daa
fs
jne
shrl
and
mov
and
mov
mov
movsb
cmp
mov
dec
inc
aam
add
inc
cmpl
push
add
adc
fldt
inc
add
pop
in
fsubp
lret
add
fbld
jbe
add
xchg
and
mov
jnp
cmp
jo
mov
or
mov
xor
adc
add
das
xor
movsb
and
iret
push
dec
inc
add
mov
ljmp
divl
pop
movsl
fstpt
lret
mov
mov
add
push
fidivrs
add
push
adc
xchg
adc
mov
lock
movsl
dec
push
dec
or
sarl
cmp
jg
mov
xor
mov
in
cs
mov
jle
dec
filds
push
jp
jg
cmpsl
lock
xchg
and
push
push
inc
neg
push
add
or
add
jb
mov
into
std
inc
pusha
add
aaa
cwtl
hlt
filds
aad
xlat
xor
mov
mov
fldt
add
out
icebp
mov
push
icebp
addr16
idivb
mov
cmp
outsb
sub
cmp
fdivl
dec
mov
push
jb
mov
stc
and
mov
cmp
add
mov
mov
jo
mov
xchg
add
incb
cmc
les
out
mov
xor
mov
xchg
adc
xadd
mov
addr16
out
ficoms
xor
add
mov
add
mov
outsl
lods
out
push
orl
push
cmp
sahf
enter
jle
add
add
ret
or
insl
cmp
and
xlat
fwait
jnp
mov
xchg
mov
or
lods
sub
mov
jne
xor
mov
or
leave
jp
sbb
cltd
dec
in
push
inc
add
cmp
daa
push
not
jg
add
call
fisttpl
xchg
je
inc
psubw
lods
sbb
sub
sub
sbb
shll
sub
add
push
fdivrs
pop
or
mov
mov
aam
pusha
add
mov
hlt
cld
pop
push
add
clc
inc
aaa
dec
sub
jo
mov
addb
in
inc
notl
int3
xchg
sbb
or
popa
test
xchg
test
in
pop
movsl
hlt
xor
mov
mov
outsb
addr16
fcompl
push
ja
rolb
mov
sub
jae
add
and
mov
xchg
add
mov
inc
xor
mov
addb
xor
mov
lahf
mov
inc
add
mov
add
dec
add
or
jnp
pop
pop
xor
xchg
adc
xlat
push
cld
clc
pop
jo
mov
jge
jbe
push
cs
push
xchg
add
pop
push
mov
enter
jae
les
das
jne
inc
lods
cmp
mov
mov
add
lock
lea
and
push
mov
std
sbb
dec
cmp
lcall
mov
iret
xchg
pop
js
add
mov
jno
adc
out
addb
insb
pop
jge
and
mov
rorl
cld
je
add
dec
pop
xchg
jp
loopne
mov
daa
pop
shll
add
sub
dec
es
mov
adc
mov
inc
add
or
xchg
and
mov
mov
mov
imul
clc
sub
mov
add
mov
sahf
in
xchg
movsb
or
jl
add
clc
adc
shll
dec
imul
jmp
xor
stc
fs
dec
inc
xor
mov
daa
add
dec
xchg
add
mov
add
sbb
add
sti
adc
add
xchg
out
fimull
xchg
repnz
push
popa
cld
loope
add
cmpsl
rolb
mov
xchg
addb
lock
cmp
jbe
lret
in
js
int
sub
mov
fstpt
std
mov
cmpsb
or
sub
adc
pop
pop
loopne
mov
add
mov
scas
clc
iret
negb
mov
insb
dec
xchg
adc
mov
pop
in
les
xchg
jle
les
idivl
popa
inc
add
ljmp
xor
mov
shll
stos
outsb
addr16
jae
aad
pop
cltd
shll
add
dec
aas
sub
imul
mov
bound
mov
insl
add
mov
mov
cmp
idivb
popf
add
jmp
dec
jle
lret
push
add
dec
cmp
ja
jg
xor
mov
pop
mov
shll
add
int3
push
stc
mov
add
ret
clc
sbb
mov
lock
xor
adc
in
adc
mov
and
sbb
add
adc
mov
das
das
mov
add
mov
mov
loope
out
shll
xor
mov
pop
aam
mov
mov
lcall
inc
sbb
sbb
add
jg
popa
decl
push
push
ret
cltd
pop
loope
add
addb
mov
fldl
repz
xor
lret
or
por
pop
sub
sbb
notl
fsubr
mov
adc
mov
leave
das
mov
mov
mov
jl
cli
lea
pop
pop
jnp
mov
pop
clc
mov
jle
es
xor
mov
inc
cmp
jge
test
mov
sub
mov
fmuls
imul
jle
add
jl
add
cmp
cwtl
mov
addb
mov
mov
enter
pop
dec
mov
xchg
add
imul
call
cwtl
in
nop
add
mov
ret
xor
mov
mov
push
cmp
iret
ret
and
add
mov
popf
int
mov
jle
jmp
jo
mov
test
repz
daa
add
mov
push
add
repnz
add
mov
dec
mov
or
flds
mov
mov
dec
fdivr
int
pop
rep
push
jnp
arpl
add
test
mov
dec
cmp
pop
jecxz
outsl
arpl
mov
adc
sbb
into
add
mov
adc
mov
and
repnz
lret
popf
mov
sti
mov
add
add
std
pop
and
mov
xor
and
pop
mov
mov
mov
sti
ret
fdivrl
int3
mov
mov
mov
add
add
mov
or
ss
fidivl
notb
in
outsl
cmc
xor
mov
cmp
mov
cmp
lds
fnstcw
cmp
pop
fcom
jg
mov
jbe
std
jl
stc
cmp
ja
dec
int3
lret
lret
lea
mov
das
inc
push
roll
cmp
inc
add
cs
cmp
clc
mov
xlat
insl
and
jmp
enter
or
mov
adc
gs
jbe
add
imul
jmp
in
add
mov
mov
add
out
ss
jns
hlt
pop
add
mov
jmp
adc
mov
dec
pop
outsl
or
test
pushl
stc
mov
add
movsb
pop
rcll
addl
xchg
add
mov
mov
jmp
cld
lea
faddl
icebp
push
add
into
cmpsl
push
xsaveopt
imul
or
and
and
xlat
hlt
adc
push
test
lahf
cmpsb
inc
xor
mov
dec
and
cmp
add
add
xor
and
int
mull
into
test
jmp
mov
fstps
sbb
mov
rolb
mov
mov
add
mov
out
lret
xor
xor
mov
test
pop
jge
mov
pop
sub
shrl
lea
loope
or
mov
sti
popa
fstps
add
add
mov
stos
outsb
sbb
lret
or
push
add
push
add
lock
inc
out
into
lahf
loopne
mov
add
iret
pop
loopne
mov
clc
jae
aas
mov
jg
xor
add
xchg
fs
sahf
sbb
mov
pop
lret
insl
nop
add
add
add
sahf
sub
or
adc
xchg
inc
addl
mov
mov
mov
add
push
addb
aam
cmp
lret
dec
stos
in
mov
dec
adc
sub
test
push
add
sti
add
nop
add
or
add
push
mov
jb
mov
jo
mov
mov
sbb
test
add
add
dec
pop
fs
and
mov
pop
xor
xchg
leave
or
mov
sahf
into
in
dec
scas
out
mov
arpl
xchg
movsb
fiaddl
repz
xchg
dec
mov
fisubrs
pop
push
jbe
cmpsl
and
jae
jp
ret
rolb
mov
sub
add
add
mov
add
push
mov
mov
nop
add
jns
cmp
add
mov
or
andl
fiadds
leave
in
in
mov
mov
mov
adc
iret
stos
das
rolb
mov
add
jle
mov
xlat
btr
arpl
lods
adc
add
imul
add
sbb
mov
mov
mov
in
push
push
ret
aas
pop
xchg
adc
cs
mov
mov
stos
rcr
jb
mov
dec
dec
cmpsb
pop
jge
in
pusha
add
lods
daa
movsb
out
xchg
add
add
mov
sbb
jecxz
rolb
mov
jne
pop
iret
orl
mov
xchg
popf
mov
lock
mov
xchg
mov
mov
lret
mov
sub
mov
mov
mov
adc
mov
adc
mov
mov
and
subl
pop
xor
add
jmp
aam
dec
mov
sub
notb
xchg
push
xor
addr16
jp
addr16
add
add
inc
add
mov
inc
add
sub
loop
mov
lods
popf
out
rolb
mov
inc
outsl
mov
inc
add
mov
mov
and
fcmovnbe
add
in
insb
daa
clc
lahf
jb
mov
mov
add
adc
adc
xor
mov
adc
mov
lods
out
imul
jp
or
sti
pcmpgtb
fistl
movb
sti
scas
jbe
add
out
jo
mov
xchg
mov
leave
pusha
add
mov
mov
inc
sub
repnz
jmp
add
data16
sub
data16
and
mov
cmp
mov
leave
and
mov
add
repnz
jnp
push
and
mov
test
xchg
loope
jbe
mov
lea
inc
inc
add
sub
adc
push
push
cmc
xchg
sbb
push
ja
lea
divl
mov
add
inc
rolb
mov
rolb
mov
add
loope
enter
pop
sbb
imull
xchg
fcompl
jg
in
ret
idivb
addb
mov
imul
rolb
mov
mov
rolb
insb
addb
out
rolb
mov
dec
aad
add
mov
add
adc
cltd
sub
addb
ljmp
add
jae
cmp
push
add
mov
sbb
icebp
jle
sbb
pop
rcl
mov
mov
in
pusha
add
jns
pop
and
xchg
jmp
imull
mov
inc
add
mov
pop
xchg
mov
inc
dec
mov
mov
cmp
mov
mov
pusha
add
sbb
push
jns
dec
or
fnstcw
iret
or
push
and
test
xchg
mov
xor
cmp
popf
ret
push
add
cld
dec
xchg
incb
cld
jp
xchg
inc
add
add
aaa
jae
and
mov
mov
sahf
adc
or
dec
loopne
mov
test
add
mov
icebp
adc
mov
sbbl
or
xor
mov
ds
jecxz
jnp
mov
jb
mov
int
mov
or
mov
out
es
in
aad
jle
cmpsb
mov
mov
inc
arpl
mov
inc
mov
cmc
adc
aaa
in
jp
test
into
cmc
int3
lahf
popf
mov
add
xchg
cmp
adc
mov
in
cmp
sbb
xor
and
mov
jle
mov
sbb
lret
cld
jp
stos
or
sub
popa
jl
inc
add
mov
mov
mov
movb
pop
in
jle
inc
push
xchg
add
mov
and
mov
sub
xchg
mov
addr16
rolb
inc
add
mov
mov
mov
jns
mov
mov
vmwrite
ret
cmc
lods
pop
dec
cmpsb
psubusw
repnz
test
rolb
mov
in
rolb
jecxz
pop
enter
fcmovbe
push
cmp
mov
loopne
mov
add
insl
mov
mov
stc
sub
push
pop
xor
mov
lret
jbe
add
inc
xlat
xchg
rcll
mov
jle
push
or
lret
adc
leave
aaa
jne
cmp
decl
fsubrs
push
xor
add
aad
add
mov
sub
mov
js
pop
push
ljmp
test
add
add
pop
inc
add
or
imul
mov
lods
and
mov
add
mov
and
jecxz
push
nop
add
jne
rolb
or
add
mov
sbb
rcrl
sub
jbe
and
mov
or
add
sub
cmp
add
adc
popa
lahf
aas
fldln2
sub
inc
add
mov
insb
das
scas
and
fmull
cmp
xchg
iret
lods
mov
iret
into
sub
ss
js
sbb
dec
lods
mov
add
mov
or
in
cwtl
xor
mov
out
fstpt
lea
lods
cli
jecxz
dec
push
add
add
cmpsl
test
mov
test
or
sub
loope
push
push
jbe
xor
mov
rolb
mov
insb
lods
cmp
testl
mov
addr16
xchg
adc
aam
cltd
dec
pop
loope
fwait
xchg
jbe
add
mov
cmpsl
adc
ret
fs
mov
sbb
les
push
add
out
in
xor
and
mov
add
mov
cmp
out
or
adc
mov
mov
in
add
mov
rolb
mov
pop
stos
mov
cmc
adc
scas
outsb
xchg
sbb
push
shll
pop
sub
inc
repnz
stos
mov
xor
mov
xor
xchg
mov
cli
bound
mov
mov
xchg
add
mov
mov
lods
sbb
push
push
addb
xchg
sbb
mov
lods
cmc
mov
add
mov
xchg
leave
jb
mov
add
xchg
xchg
mov
or
addl
int3
pushf
cmpsb
xchg
fidivs
cmp
je
inc
xchg
hlt
mov
inc
roll
aas
and
in
pop
mov
testl
sarl
ret
in
add
push
push
icebp
and
mov
scas
das
test
sbb
out
ret
xchg
jb
mov
xchg
pop
out
mov
loope
cmc
movsb
xchg
inc
mov
jno
test
into
xor
add
jae
jge
insl
jnp
push
add
mov
and
adc
mov
fidivs
ja
sarl
rolb
xor
mov
sbbl
mov
mov
sbb
mov
pop
sbb
sbb
cwtl
mov
pop
leave
pop
sti
xor
mov
mov
xchg
ret
jmp
push
xchg
push
fmull
adc
outsb
mov
mov
ja
xchg
mov
popa
clc
aaa
test
mov
add
push
pop
xor
push
lcall
in
xchg
mov
popa
jg
lea
addr16
loope
ja
notb
add
jbe
js
addb
jl
add
sbb
fstpt
int3
xchg
sub
mov
aas
mov
mov
xor
in
rcll
ja
inc
add
add
add
jo
mov
mov
sahf
subl
repz
iret
icebp
push
adc
mov
and
mov
cmp
pop
ljmp
add
sub
push
out
push
pop
xlat
jo
mov
cltd
lea
adc
adc
mov
pop
or
mov
or
cmp
loope
mov
add
mov
arpl
add
cld
jo
mov
add
ret
inc
add
push
pusha
add
rolb
mov
cmp
outsb
stos
inc
ds
xor
pop
dec
movl
mov
xchg
inc
or
and
lods
or
add
inc
and
mov
pop
xchg
mov
jecxz
into
call
rolb
mov
dec
mulb
add
mov
gs
add
addb
cvtps2pd
cmp
imul
in
mov
and
mov
lods
adcl
loope
in
sub
out
cmp
sahf
jl
loope
cmp
mov
int3
mov
mov
cmp
push
xor
mov
add
inc
add
mov
imul
mov
add
movsb
jbe
addr16
scas
das
dec
xchg
ja
adc
ljmp
jno
outsb
xchg
ret
popf
xor
mov
ss
mov
mov
add
jmp
add
mov
scas
jo
mov
add
iret
les
inc
xchg
enter
aaa
in
test
mov
adc
sbb
pushf
mov
pop
out
insl
in
std
int3
movl
add
push
out
ja
jae
xchg
adc
mov
insl
dec
rolb
jge
lcall
shl
push
push
cmp
jbe
add
and
in
insb
fildll
testb
es
mov
test
sub
xchg
jmp
pop
lahf
data16
mov
gs
pop
mov
push
mov
dec
push
icebp
pop
rcrl
repz
mov
repz
mov
fsts
ret
in
sbb
adc
inc
gs
jmp
adc
cmp
mov
add
lret
fmull
inc
add
mov
out
loop
mov
push
mov
lahf
repz
inc
add
add
mov
addr16
add
stc
fs
sbb
jns
out
cld
add
mov
les
or
popa
cmc
outsl
aas
and
add
sub
mov
ret
mov
sarl
add
pusha
add
add
das
and
mov
hlt
outsl
incl
mov
or
insl
dec
mov
addb
lret
sahf
shrl
scas
cmp
sbb
push
sub
sub
xor
add
xor
mov
into
jle
add
aas
ret
in
pop
loopne
mov
mov
xor
push
fs
lea
fcmovnu
adc
cltd
mov
add
or
adc
mov
lea
add
cwtl
rolb
mov
sbb
jae
loope
cmc
dec
sbb
mov
add
push
repnz
inc
lds
cli
movsb
mov
mov
movl
mov
add
ficoms
loopne
mov
outsl
sub
mov
jle
push
push
mov
mov
mov
mov
clc
xchg
xor
add
xor
mov
adc
repz
push
dec
push
add
jg
add
mov
rolb
jp
popa
sub
out
sub
add
inc
repz
mov
add
enter
jnp
add
sbb
add
xlat
inc
add
xchg
add
push
push
mov
jl
pop
aas
pop
dec
aas
jnp
rolb
mov
xchg
adc
mov
add
jbe
mov
add
add
mov
xchg
cmpsb
adc
xchg
fbld
add
cs
sbb
add
fsubrl
cmp
clc
cmp
pop
add
jmp
add
dec
es
xchg
jo
mov
repz
mov
add
xor
mov
mov
dec
imul
aaa
es
outsb
xor
sti
and
mov
arpl
add
push
rolb
mov
xchg
ss
xor
adc
add
jae
idivb
stc
into
mov
mov
jae
cmp
pop
pop
loop
mov
iret
sub
mov
adc
into
sbb
sti
pop
movsl
mov
pop
mov
inc
cmp
cltd
fistpll
or
lock
clc
repz
in
fimull
and
sahf
orl
add
fisubs
gs
addr16
out
or
mov
cmp
pop
sub
adc
mov
xchg
pop
clc
sub
mov
mov
addb
and
jge
jne
mov
into
aam
dec
mov
or
adc
popf
jno
out
push
xchg
pop
lods
xchg
and
mov
adc
mov
jno
cld
testl
mov
rcr
testb
push
int3
lods
xchg
popa
movsl
adc
mov
mov
add
mov
std
popf
mov
mov
sbb
pusha
add
mov
pop
or
out
mov
pop
sub
lahf
push
push
add
or
add
pop
std
bound
mov
mov
out
sub
hlt
pop
cltd
xor
adc
mov
xor
mov
mov
adc
mov
adc
popf
push
add
mov
mov
jp
add
addb
and
mov
cwtl
shrl
in
mov
mov
push
cmpsb
ret
ss
cmp
fcomp
inc
mov
ret
dec
inc
add
jnp
nop
add
add
mov
add
mov
jae
add
add
mov
add
xor
shll
mov
addb
push
add
inc
iret
sbb
test
pop
ficoml
repz
dec
inc
insl
sti
aad
add
jp
add
dec
aad
add
adc
mov
fcomp
sbb
fistpl
push
xor
movsl
jns
jle
addb
adc
cli
jp
inc
xchg
lret
pop
push
add
in
rolb
mov
inc
imul
mov
add
je
jmp
arpl
push
fnstenv
fwait
loopne
mov
mov
ljmp
jmp
add
int3
jmp
rolb
mov
and
cmp
mov
add
bound
mov
dec
leave
jnp
or
addb
movsl
dec
insb
rolb
mov
add
ljmp
mov
icebp
data16
int3
mov
add
leave
leave
sbb
xchg
xchg
clc
fs
mov
ljmp
inc
sarl
push
jae
mov
mov
sbb
mov
addb
and
dec
jl
sub
mov
bound
mov
stos
jle
mov
jb
mov
xorl
mov
cmp
out
rcll
imul
lret
xchg
das
negb
ljmp
into
test
test
inc
out
mov
ficompl
mov
pusha
add
call
xlat
xchg
add
pop
lcall
imul
xorl
xchg
sub
daa
scas
mov
cmpxchg
add
jle
add
loope
mov
dec
add
add
in
mov
add
mov
jl
adc
mov
rolb
int3
test
and
mov
addr16
setb
mov
sbb
pop
sub
add
push
ds
push
adc
test
mov
out
les
arpl
sub
outsb
popf
mov
mov
mov
and
add
lret
out
fistpl
cmpsl
pop
mov
adc
cltd
xchg
test
push
cmp
adc
mov
or
add
add
sbb
mov
andl
add
push
add
sbb
inc
mov
add
pop
xor
mov
stc
mov
mov
out
nop
add
mov
ds
mov
sub
pop
pop
negl
push
sub
loop
mov
jb
mov
adc
mov
nop
add
mov
adc
mov
mov
in
cmp
add
lods
or
add
cli
add
mov
xchg
xchg
mov
jb
mov
mov
add
mov
mov
add
and
mov
jae
pushf
addb
and
mov
inc
iret
or
pop
inc
xor
mov
add
xor
inc
das
fldt
mov
mov
xchg
mov
fldl
add
dec
inc
jecxz
xchg
incl
jno
sti
jmp
pop
push
jae
dec
xchg
hlt
loope
add
mov
add
mov
scas
test
add
and
push
pop
cwtl
fmul
xchg
adc
or
adc
add
push
and
mov
add
sub
mov
pop
adc
add
xchg
jne
jecxz
add
inc
add
rolb
mov
pop
jbe
sub
add
xor
add
fsubp
pop
imul
loop
mov
mov
rolb
add
add
mov
xor
mov
inc
add
push
clc
int
xor
mov
dec
adc
push
xchg
inc
mov
mov
mov
mov
pop
loop
mov
xchg
test
cmp
daa
sti
test
mov
add
mov
add
add
mov
mov
insb
prefetcht2
lds
add
aaa
sbb
adc
mov
inc
add
xchg
add
or
pop
in
and
aas
es
add
adc
pop
fscale
mov
sub
cs
dec
push
mov
add
inc
int3
sbb
ret
in
or
add
push
pop
int
stos
or
add
mov
xchg
stos
sub
cmpsb
enter
arpl
lcall
sbb
nop
add
add
xor
cmpsb
mov
test
push
rcrl
add
mov
or
dec
dec
sbb
mov
mov
adc
xor
sbb
repnz
inc
scas
sbb
jg
sub
dec
jbe
ja
and
pop
cmp
loop
mov
and
mov
adc
mov
ljmp
mov
sbb
inc
in
les
sbb
je
fldcw
xlat
stos
pop
mov
je
sbb
divb
inc
add
add
data16
push
lahf
scas
sub
add
or
ret
push
repnz
and
mov
loopne
mov
add
enter
sub
jns
dec
rolb
mov
mov
repz
mov
xchg
scas
aaa
loopne
mov
adc
pop
fwait
mov
add
mov
adc
add
mov
bound
mov
or
stos
push
adc
jne
int
jge
mov
mov
into
cmp
test
jno
mov
jae
add
mov
add
sarl
xchg
and
mov
jb
mov
divl
dec
xor
scas
mov
mov
pusha
add
add
dec
imul
add
mov
xchg
lret
sub
bound
mov
out
stos
dec
stos
jl
movb
add
gs
push
mov
inc
add
mov
jne
cli
fisttpll
add
fsubs
add
add
rolb
mov
rolb
daa
xchg
insl
mov
fistpl
xchg
in
test
aas
cmp
inc
or
sub
sbb
mov
add
lret
xor
jmp
into
xchg
xlat
jge
mov
xlat
xchg
add
add
mov
add
fs
test
add
addb
cld
test
pop
pop
test
ljmp
lea
mov
fwait
cmp
incl
mov
add
cmpsl
out
add
ret
lret
mov
sub
cmpsb
lcall
mov
hlt
aad
cltd
xchg
jne
push
mov
es
mov
mov
add
sbb
sahf
sub
mov
xlat
stos
scas
aad
add
mov
aas
jle
cmp
stos
cmp
sub
push
mov
dec
mov
xor
mov
xor
inc
add
dec
or
das
mov
add
inc
sub
xchg
inc
push
pop
pusha
add
scas
ds
insl
sub
mov
inc
add
test
or
jl
xlat
das
int
mov
in
sbb
push
inc
jno
add
daa
inc
mov
andl
mov
mov
adc
mov
repnz
ss
xlat
push
arpl
or
lock
sbb
add
xor
mov
mov
cmp
add
and
mov
dec
pop
stos
pop
js
xor
mov
shll
lods
or
testb
cmpsl
das
idiv
popa
sub
xchg
add
push
dec
repz
push
jecxz
ljmp
xchg
dec
pop
addr16
repnz
mov
lods
jnp
sub
mov
fisubrl
rolb
mov
push
leave
push
jne
sbb
icebp
hlt
aaa
es
jnp
add
adc
dec
inc
out
bound
mov
scas
xchg
sbb
or
inc
lds
scas
sbb
cli
jle
in
add
daa
sti
leave
xchg
or
pop
subl
lods
loope
insb
dec
shll
ret
es
cmp
sbb
nop
add
add
push
mov
scas
xchg
mov
inc
jecxz
cmp
bound
mov
jecxz
addl
sbb
call
mov
andl
add
pop
andl
mov
lods
mov
stc
aaa
mov
jge
sar
and
xor
cmpsl
dec
rolb
shll
add
aas
push
mov
das
js
add
sbb
jo
mov
sub
mov
mov
mov
and
lcall
dec
sbb
add
sbb
cmp
mov
cmpsb
les
mov
lods
lea
aad
mov
add
inc
mov
cmpsb
xchg
mov
loopne
mov
mov
add
fisttpl
int3
les
clc
xor
mov
add
popl
add
sti
lret
mov
mov
jae
and
add
add
add
mov
xor
or
push
testb
ja
add
sti
mov
add
ss
push
aas
jg
ja
add
inc
mov
mov
fs
jge
and
testb
popf
sub
pop
sbb
add
sbb
inc
lea
jo
mov
cmp
pop
mov
add
xchg
popl
cmpsb
sarl
rcll
mov
jg
cmpsl
pop
scas
icebp
clc
xchg
and
in
fwait
adc
mov
imul
dec
pop
or
in
cmp
movsl
loope
mov
push
inc
adc
das
jg
loope
push
imul
add
cmpsb
js
sbb
lahf
jns
scas
rolb
cmp
fcoms
add
leave
repz
push
fistpll
mov
xor
enter
inc
adc
add
bound
mov
pop
xor
mov
mov
mov
fstpt
jb
mov
lds
mov
cld
aas
mov
out
add
mov
xchg
add
mov
je
cmpsb
jns
xchg
mov
sbb
add
mov
add
cs
xor
mov
mov
add
addb
sub
mov
aad
add
mov
stc
popf
rolb
mov
test
adc
push
aam
sub
jo
mov
mov
add
sbb
push
jbe
sbb
push
cld
push
loop
mov
xchg
out
lret
mov
mov
add
in
in
sbb
sbb
dec
arpl
cmp
bound
mov
add
inc
aas
dec
je
std
les
enter
fstpl
das
insb
les
es
out
gs
cltd
xchg
add
pop
xor
dec
fisubrl
cmpsb
xchg
and
sbb
push
push
add
xlat
leave
sbbl
pusha
add
add
ret
lret
leave
jmp
fstpl
lods
sahf
xor
add
ret
push
push
loopne
mov
xchg
add
mov
adc
adc
mov
lret
mov
adc
jne
jno,pt
jno
hlt
ljmp
ja
fwait
test
push
je
addb
je
xchg
fdivrp
adc
mov
add
add
xchg
xor
addb
into
fists
stos
bound
mov
inc
aam
pop
dec
arpl
lcall
lods
sub
add
ret
aaa
pop
dec
sub
pusha
add
mov
iret
rolb
mov
pusha
add
mov
in
sbb
ja
add
mov
mov
iret
imul
add
mov
testl
mov
ljmp
dec
mov
pop
mov
inc
cwtl
pop
lods
jae
sub
dec
jle
cmp
adc
leave
divb
add
xchg
jge
add
loopne
mov
cmp
loope
inc
xor
imul
jae
mov
mov
push
or
dec
in
pushf
and
adc
cmpsb
cmp
cmpsb
mov
sub
lea
bound
mov
mov
cmp
push
sub
or
push
stc
mov
mov
pop
xchg
add
sbb
mov
mov
xchg
mov
add
dec
jmp
add
xorl
add
add
mov
adc
jae
add
cli
or
in
jg
jne
cmpsl
stc
daa
add
test
call
call
cld
jp
sub
add
pop
add
sbb
pop
xchg
push
cli
lea
mov
or
or
cli
jb
mov
test
jno
clc
xor
mov
mov
sub
jl
hlt
in
adc
mov
inc
loop
mov
add
xchg
mov
lods
inc
rolb
mov
add
push
and
popa
pushf
dec
add
mov
xchg
ss
add
mov
ret
sub
sahf
pop
cmp
not
dec
js
lock
add
sbb
add
aam
pop
mov
add
mov
add
xor
mov
mov
add
out
add
mov
jle
sbbl
pop
sbb
divl
xor
daa
scas
and
mov
insb
shll
inc
imul
dec
iret
cmc
fidivs
movsl
fs
mov
and
in
test
add
add
mov
data16
mov
mov
push
add
xchg
scas
call
mov
lods
rolb
mov
stos
out
out
addr16
addb
adc
cmp
cmp
in
test
test
add
mov
loope
sti
rolb
mov
push
popa
push
ret
test
cwtl
pop
and
mov
add
add
pop
inc
xchg
add
ror
dec
xchg
sbb
addb
xchg
ret
or
shrl
inc
add
inc
inc
sahf
or
jo
mov
add
push
xchg
pop
xor
cmp
lds
popa
out
and
add
push
xchg
cmp
xor
insb
adc
add
cmp
fildl
sbb
sbb
push
add
loope
push
add
test
xor
inc
dec
and
out
jbe
add
aas
mov
mov
add
out
jg
add
dec
jb
mov
mov
fbstp
mov
add
mov
add
pushf
stos
xlat
pop
lret
into
cmpsb
adc
inc
xchg
add
cmp
enter
add
dec
repz
sti
hlt
gs
std
rolb
mov
push
xor
mov
inc
cmp
cli
xchg
jecxz
mov
mov
mov
mov
cmp
add
add
mov
mov
mov
mov
lret
adc
mov
orl
out
and
daa
cwtl
mov
mov
add
sbb
mov
pop
jl
inc
es
add
sbb
mov
add
mov
inc
paddsw
mov
ss
mov
les
ja
add
jmp
mov
iret
cli
and
sub
dec
and
mov
insl
outsl
xorl
mov
jnp
lahf
aam
insb
adc
ja
add
mov
mov
aas
ja
add
xlat
inc
fiaddl
add
add
bound
mov
add
push
mov
add
mov
add
inc
add
mov
xor
sub
mov
fs
xchg
lock
pop
les
mov
xchg
std
cltd
and
jae
ss
add
mov
mov
add
popf
mov
nop
add
mov
in
inc
nop
add
sub
addb
push
addb
add
mov
add
hlt
mov
xchg
sbb
lock
add
adc
mov
add
mov
mov
ret
outsb
inc
add
cmp
add
mov
add
lahf
andl
imul
sbb
int
lods
jae
rolb
ja
add
cli
in
pushf
fwait
in
std
dec
jo
mov
imul
pop
or
sbb
cmpsl
addb
popf
dec
pop
mov
jns
out
leave
mov
xor
push
ja
adc
loopne
mov
jbe
add
dec
or
inc
ret
push
nop
add
add
push
stc
ss
xor
add
add
loopne
mov
mov
add
dec
ret
mov
add
negb
push
inc
pop
movsl
lcall
jge
xor
test
mov
in
jae
cmp
or
das
adc
outsb
pop
push
add
mov
fsubrs
cmp
pusha
add
out
popl
add
or
dec
cmpl
inc
fsubs
jns
mov
dec
mov
mov
in
pop
ret
dec
and
add
add
scas
imul
sti
shll
stos
repz
pop
cmp
inc
arpl
ljmp
mov
mov
xchg
mov
inc
outsb
fistl
mov
lods
push
inc
sbb
mov
rolb
mov
mov
inc
sbb
scas
int3
xor
mov
and
test
loope
add
push
imulb
jae
pop
inc
fdiv
in
inc
add
or
nop
add
data16
pop
jns
dec
pop
sti
clc
jg
loope
out
push
aaa
jnp
dec
int3
add
cwtl
mov
addb
in
or
add
add
mov
in
fwait
pminsw
das
add
dec
xchg
add
push
sub
cmp
mov
sub
add
aam
and
adc
mov
mov
sub
pop
jne
mov
cmovae
outsb
mov
jnp
add
mov
or
jb
mov
inc
or
jge
js
and
inc
es
cmp
mov
jp
push
dec
lret
jbe
xchg
lret
ficoms
mov
mov
adc
mov
add
sarl
insl
sub
adc
mov
dec
mov
add
test
mov
sbb
pop
mov
mov
js
jae
inc
add
add
mov
adc
mov
mov
ret
cli
ret
into
xor
add
sub
repz
cli
pop
mov
in
xor
mov
push
mov
fmul
cld
fisubs
add
lock
lret
sub
adc
mov
imul
mov
arpl
mov
add
xor
sbb
notb
add
push
fucomi
push
sbb
add
iret
je
scas
add
mov
jmp
mov
xlat
push
int
inc
das
test
jmp
mov
push
cmp
mov
mov
sti
dec
fcomp
jo
mov
dec
rolb
mov
repnz
jo
mov
sub
dec
es
testb
jns
inc
cmp
add
add
mov
push
ja
push
mov
or
xchg
jnp
add
add
lret
add
adc
inc
addb
inc
in
push
inc
push
add
call
lods
lds
pop
cwtl
outsl
ljmp
rolb
mov
leave
out
mov
mov
sbb
mov
mov
cmc
rolb
mov
add
lret
mov
mov
add
xchg
fidivrl
lret
inc
add
add
add
outsl
mov
jge
add
popa
cmpsb
lock
mov
dec
pushf
inc
cmp
dec
test
lds
cs
hlt
ljmp
das
jmp
or
movsb
mov
out
fsubrp
loop
mov
cwtl
clc
lcall
dec
mov
add
mov
mov
mov
addb
test
mov
nop
add
mov
sub
add
pop
bound
mov
xchg
and
mov
fistl
add
fldl
add
mov
std
cltd
mov
mov
push
movsb
loop
mov
dec
insl
jns
and
push
and
out
xor
pop
roll
add
aad
icebp
pop
mov
add
dec
adc
mov
lcall
and
mov
adc
mov
jne
push
push
rolb
mov
add
test
xor
sahf
xor
insb
adc
adc
cs
mov
jecxz
push
aas
aad
neg
rolb
mov
fisubs
inc
cmpsl
mov
add
push
xchg
pop
adc
vpavgb
mov
xchg
xor
ret
mov
rcll
cmp
mov
test
scas
adc
mov
add
add
pop
pop
incb
jae
stos
cs
imul
movsl
rorl
cld
xlat
dec
enter
mov
out
xchg
aas
mov
test
mov
mov
mov
out
sbb
ja
pavgw
jle
mov
or
xchg
addb
cltd
jmp
cmc
outsb
cmp
push
sbb
mov
mov
mov
jecxz
and
mov
hlt
fs
pop
and
test
adc
leave
lret
or
push
or
outsl
push
adc
add
mov
les
inc
inc
sbb
fldenv
mov
mov
and
mov
mov
scas
mov
add
mov
mov
rolb
mov
adc
and
dec
sub
add
cmpsl
shll
loop
mov
addr16
inc
sub
lods
sub
push
into
adc
mov
xchg
and
jle
es
mov
rep
addb
mov
dec
mov
pop
mov
bound
mov
jle
add
xchg
xchg
dec
test
add
xor
mov
push
add
adc
mov
mov
mov
pop
stc
in
adc
mov
add
adc
dec
stc
movb
mov
pop
aas
outsb
push
and
pop
and
mov
add
jbe
add
jne
mov
add
mov
shl
out
add
pusha
add
mov
add
jp
lea
sbb
mov
add
mov
add
jmp
add
add
add
or
std
cmp
push
add
jb
mov
xchg
fcoms
mul
out
jge
dec
jno
add
adc
cld
pop
cmpsb
mov
cwtl
in
dec
add
jnp
je
xchg
cmpsb
mov
pop
adc
mov
leave
push
fisubl
mov
jle
push
jne
xchg
sub
stos
jge
mov
add
cmp
in
rorl
add
call
push
movsl
aaa
in
xor
mov
pop
cmc
out
sti
dec
jnp
int3
mov
add
cmp
add
add
push
xor
movsb
mov
add
or
sarl
add
add
push
lahf
std
pop
mov
pop
bound
mov
add
mov
mov
add
lods
pop
fcmovb
add
sbb
fnstcw
inc
nop
add
cmc
jle
xchg
add
roll
je
ficomps
xchg
xor
sub
add
rorl
jnp
push
dec
addb
lods
or
icebp
movsl
pop
rolb
mov
lea
add
call
mov
pop
sub
je
aas
dec
iret
mov
pop
jmp
add
xor
add
mov
cmp
mov
mov
mov
mov
add
add
xor
mov
addr16
pop
testb
fsubrl
daa
and
mov
jo
mov
add
rolb
gs
xchg
inc
pop
enter
outsl
adc
cmp
lock
adc
push
add
mov
mov
push
ss
mov
adc
mov
shll
ss
mov
add
es
jbe
xchg
std
sub
loopne
mov
stc
xchg
cmp
sub
add
mov
cli
or
fwait
movl
mov
dec
outsb
and
jmp
call
mov
pop
je
cmp
mov
sbb
add
adc
mov
mov
mov
sbb
and
add
gs
aaa
and
add
sub
ja
daa
addb
mov
aaa
sbb
repnz
mov
mov
mov
xor
mov
jo
mov
out
dec
rolb
push
mov
scas
stos
fmuls
mov
out
jno
nop
add
or
lret
or
dec
repz
add
leave
ret
pop
aas
in
mov
sub
test
and
cs
dec
jge
in
cmpsl
insb
stos
mov
enter
or
in
int
jno
roll
inc
add
addb
inc
push
movsb
fsubrl
repz
add
ret
fldt
dec
and
mov
ljmp
outsb
push
outsb
pop
test
lods
in
fsubr
stos
jb
mov
dec
mov
mov
pop
adc
add
push
sub
jecxz
mov
imul
jmp
mov
mov
imul
add
repnz
inc
mov
lock
cmpsb
adc
sti
mov
sub
ret
or
add
add
mov
stc
imul
int3
sbb
data16
cwtl
inc
add
dec
sbb
add
xchg
add
addb
mov
mov
ja
insb
std
pushf
icebp
lods
xchg
sarl
mov
pop
int3
xchg
pop
arpl
mov
mov
xor
cmp
add
test
vmread
add
dec
rolb
mov
into
cli
sub
pop
mov
add
jmp
test
lret
jecxz
aaa
jge
lods
jl
sub
push
pop
push
add
mov
mov
lods
push
jge
add
add
packssdw
les
cli
std
mov
mov
or
push
jo
mov
mov
scas
jne
mov
mov
ja
aaa
adc
cmpsl
sbb
and
pop
addb
adc
test
and
mov
popa
out
ret
mov
jmp
icebp
sub
push
add
cmp
pop
jns
add
add
mov
dec
sub
inc
movsl
jg
sbb
enter
in
cld
testl
repnz
xchg
fwait
repnz
jecxz
xchg
push
or
movsb
addb
sub
aas
lds
es
rolb
mov
jb
mov
fimuls
add
stc
add
mov
add
mov
add
lcall
aad
popf
add
mov
fadds
push
xchg
inc
xchg
aad
scas
sub
cltd
mov
add
add
mov
cmpsb
mov
mov
add
mov
mov
jg
xchg
imul
xlat
gs
dec
iret
addb
mov
xchg
add
fdivr
xor
mov
mov
int3
push
dec
or
xor
mov
xor
cli
add
add
dec
sbb
push
into
cmp
lock
aam
test
icebp
pushf
out
and
mov
jmp
cmc
pop
xor
add
add
mov
ret
inc
sub
cwtl
sub
add
sbb
mov
cmp
icebp
lcall
lock
pop
pusha
add
add
stc
sti
mov
push
dec
cmp
leave
add
mov
mov
add
pop
mov
push
out
loope
aad
mov
dec
adc
in
jl
test
bound
mov
and
sbb
cs
and
iret
and
mov
add
decl
fistps
pop
push
add
insb
fdivs
mov
lds
aad
int3
and
bsr
cld
imul
pop
popf
mov
addb
fdivrs
aas
sub
mov
cli
std
push
add
in
lret
mov
mov
aad
add
dec
cmpsb
js
add
addb
xchg
dec
push
add
aaa
in
ret
repnz
xor
es
ss
out
add
jne
sub
mov
push
addb
rolb
pusha
add
dec
hlt
in
or
push
orl
test
mov
inc
jno
mov
mov
pop
mov
pop
cs
into
xor
mov
add
mov
imul
sbb
inc
add
push
outsl
fdivrs
data16
mov
mov
dec
adc
mov
fidivrs
adc
or
popa
aaa
sahf
ficompl
mov
mov
mov
xlat
mov
ret
fimull
inc
add
mov
xchg
gs
push
movsb
cmpsl
in
push
add
movb
add
mov
or
xor
in
mov
push
add
add
mov
addb
or
add
stc
iret
add
jle
xor
add
mov
add
mov
xchg
adc
and
shl
add
mov
add
mov
jns
dec
fwait
cmp
mov
jnp
jecxz
push
jbe
cmp
and
mov
lods
repnz
xor
mov
out
dec
les
mov
fldenv
push
push
lahf
es
xor
mov
sbb
and
add
mov
xor
mov
add
in
das
or
lods
aam
mov
mov
sbb
inc
add
cmp
adc
mov
mov
mov
fdiv
arpl
mov
mov
xchg
xchg
ljmp
push
or
pop
lahf
clc
push
gs
mov
jp
les
test
rolb
mov
add
nop
add
mov
sti
adc
add
mov
popf
inc
inc
sub
cmp
push
add
mov
dec
xchg
pop
jb
mov
in
rolb
mov
ja
mov
or
jb
mov
addb
push
add
cmpsl
xchg
or
and
push
insb
cs
pop
dec
aaa
lret
dec
mov
outsb
mov
bound
mov
add
fistpll
pop
mov
insb
lahf
mov
or
test
add
cmp
xor
mov
sub
popf
les
add
movsl
mov
mov
mov
add
mov
inc
add
lahf
outsb
andl
push
in
or
add
addr16
cmpsb
sbb
ret
or
testl
int3
fsubs
mov
and
pop
sbbl
sbb
lret
ss
inc
add
and
dec
popa
jle
cmp
ja
lods
es
inc
add
aaa
testl
lret
push
add
mov
cmp
rolb
mov
adc
pop
imul
iret
jge
daa
mov
add
aam
roll
mov
mov
mov
jbe
bound
mov
push
jns
mov
mov
fcoms
add
dec
ds
cmpsb
fst
xchg
add
mov
add
mov
xchg
jo
mov
add
jne
xchg
mov
push
add
popa
sbb
lock
add
bound
mov
inc
dec
add
mov
mov
dec
lret
add
movsb
pop
std
mov
aad
push
clc
loopne
mov
scas
sub
std
std
adc
mov
jecxz
imul
pop
jmp
addb
inc
add
gs
js
push
out
and
test
or
loopne
mov
mov
pop
addb
rolb
mov
add
dec
jecxz
pusha
add
mov
mov
cmp
rolb
ficompl
rolb
dec
or
ja
jmp
sbb
push
in
jmp
mov
add
or
add
insl
adc
mov
add
mov
cmc
dec
cltd
or
mov
fcmovu
mov
addb
add
and
imul
aam
add
pop
in
outsl
inc
sti
fcompl
fcmovb
xchg
fistpl
xor
mov
add
add
inc
mov
mov
enter
mov
sub
sahf
adc
nop
add
add
jecxz
lahf
xchg
aas
pop
push
lock
dec
jp
gs
dec
hlt
cmp
mov
mov
pop
xchg
movsb
lods
cmp
add
enter
out
push
or
in
and
push
sbb
cmp
in
rcl
add
fs
add
mov
sub
mov
into
adc
mov
push
repz
add
pop
sub
jecxz
sti
dec
hlt
jmp
and
fsubrs
jge
sahf
mov
jge
inc
sub
sub
add
loopne
mov
bound
mov
mov
push
je,pn
negl
pop
addb
and
filds
mov
add
mov
cmpsb
imul
mov
jnp
add
inc
add
js
cmp
xlat
out
mov
popf
cs
jp
xor
sahf
mov
ja
js
add
ljmp
hlt
xchg
cmp
mov
push
or
fidivrl
mov
mov
icebp
sti
int3
pop
fldcw
aas
fstps
out
xchg
add
addb
repnz
pop
int3
cmc
cmp
sti
ss
add
out
jnp
add
add
add
add
mov
sbb
push
xor
add
mov
cmp
rolb
mov
daa
push
push
cmp
std
popf
jo
mov
cmp
sbb
fs
adc
sub
add
aaa
ret
insl
sub
jle
pop
pop
adc
lods
lcall
and
add
mov
mov
mov
mov
inc
imul
cmpsb
mov
dec
aam
sub
mov
addr16
xchg
loop
mov
fs
mov
push
test
icebp
cmpsl
sbb
or
mov
add
jbe
insl
nop
add
mov
movsl
jae
das
data16
mov
jmp
dec
and
mov
inc
jp
inc
mov
cmp
stc
jp
pop
lock
data16
mov
add
fwait
push
and
add
jnp
jle
push
and
rolb
mov
adc
jge
inc
mov
std
xchg
add
adc
add
xor
cmp
add
sub
sbb
int
add
loop
mov
fs
mov
mov
fisttpll
sub
add
fwait
inc
test
mov
ret
popf
icebp
outsl
aaa
mov
push
xchg
add
push
pop
loop
mov
call
mov
cmp
add
popa
dec
cmpsl
and
mov
mov
sbb
and
add
lcall
cwtl
jne
addr16
sti
scas
inc
iret
mov
mov
rolb
push
cmpsb
push
filds
xor
rcll
movsl
movl
ss
jp
mov
mov
push
dec
dec
lahf
addb
sbbl
in
or
jg,pn
addb
mov
mov
push
cs
mov
push
adc
call
pop
push
cmp
sub
add
fstpt
sub
std
mov
outsb
jns
mov
sub
jbe
add
mov
jo
mov
stos
mov
mov
add
push
inc
mov
mov
scas
lods
pop
aas
push
imul
xchg
lods
negb
inc
inc
add
mov
pop
insl
xor
mov
mov
add
mov
in
push
mov
xor
mov
mov
inc
add
pop
push
mov
subl
mov
lcall
pop
lahf
xchg
aad
dec
arpl
or
sub
inc
iret
mov
and
insb
cmp
mov
inc
add
or
cmpl
ja
ljmp
and
nop
add
enter
sbb
push
add
ret
lock
mov
rcll
mov
cmovo
mov
lds
add
mov
inc
jge
add
or
out
shll
xchg
sbb
add
push
add
into
enter
mov
in
fwait
xchg
xor
mov
push
push
add
out
and
mov
inc
add
xor
or
jmp
stos
sar
enter
jno
imul
xor
in
test
cld
dec
adc
cmp
dec
mov
dec
in
pop
inc
add
pop
pop
dec
mov
mov
popa
aad
jns
repnz
sbb
add
push
dec
add
pop
es
or
mov
cmc
scas
pop
mov
mov
jbe
and
mov
pop
cmp
push
in
xchg
repz
pop
or
ja
iret
inc
pop
out
inc
test
jne
add
out
cmp
add
fnstenv
lea
add
addr16
adc
imul
jo
mov
mov
add
iret
cld
movsb
and
ret
push
idiv
mov
dec
andl
adc
inc
insl
xchg
cmpsb
test
in
push
add
mov
lds
jge
sbb
xlat
sahf
inc
add
bound
mov
add
mov
test
mov
or
inc
sub
add
and
mov
negb
aas
lods
int3
mov
lcall
mov
add
push
push
add
mov
daa
mov
mov
mov
jge
pop
mov
inc
inc
add
xchg
rolb
mov
pop
inc
arpl
mov
sbb
mov
mov
add
stos
movsl
xchg
push
add
mov
mov
add
add
repz
lret
xchg
and
gs
mov
jo
mov
push
call
cmc
daa
fildl
jns
mov
add
je
cmp
sbb
lret
mov
mov
mov
insl
hlt
inc
jle
bound
mov
movsl
and
add
add
mov
aad
add
rcll
adc
mov
add
cwtl
in
fs
and
mov
push
add
je
mov
mov
mov
leave
movsl
sub
cs
mov
sbb
add
add
cmp
add
jbe
popf
adc
fidivrs
movsl
mov
lret
std
addb
out
sti
mov
mov
jne
inc
push
lods
mov
mov
loopne
mov
mov
pop
lahf
add
mov
scas
addb
cmp
or
sbb
push
add
mov
shll
mov
mov
add
movsl
in
and
adc
push
es
mov
hlt
les
scas
push
add
test
les
sub
test
loope
xchg
xor
xor
add
mov
add
push
nop
add
xchg
inc
test
xchg
jno
mov
mov
mov
add
mov
imul
jae
lea
add
adc
jnp
add
movsl
inc
test
mov
add
movsb
enter
ljmp
stos
cmpsb
sub
cli
fs
add
aam
out
push
insl
inc
lret
cwtl
xchg
test
pop
popf
xchg
divl
adc
add
rolb
mov
in
movsl
arpl
pop
pop
ja
add
repnz
mov
push
cmp
add
and
add
add
por
add
ret
mov
rcll
add
xchg
ret
dec
repz
xchg
push
mov
insl
mov
jg
add
dec
mov
add
push
xor
les
add
fldl
add
mov
lock
sub
cmpsb
fcmovu
addb
mov
mov
jbe
and
mov
inc
cmpsl
fsubrs
mov
cltd
jmp
inc
adc
mov
jbe
pop
aaa
lcall
mov
movsl
adc
mov
cmp
mov
add
inc
sub
xchg
fidivrs
xlat
cmp
push
push
inc
sub
adc
mov
jp
push
movsb
dec
mov
popf
push
add
add
add
add
sbb
push
xchg
push
lods
jl
mov
scas
mov
fs
sbb
pushf
add
add
or
add
scas
mov
mov
scas
inc
add
ss
pop
jecxz
popa
push
in
ficoml
mov
pop
mov
insl
pop
ret
ffree
jb
mov
push
and
lods
mov
lret
mov
mov
cmp
adcl
je
stc
lods
lds
in
fldcw
ss
adc
mov
mov
or
repz
add
insb
lret
loope
hlt
mov
add
pop
pop
pop
pop
addb
addb
test
xchg
xchg
or
add
add
mov
in
cmp
xchg
cmpsl
mov
test
add
aaa
ja
inc
mov
push
mov
sub
insl
insw
cli
scas
xor
mov
fdivl
fbld
repz
add
mov
jg
dec
sbb
add
mov
add
mov
inc
add
shll
mov
notb
add
addr16
mov
push
cmp
add
aam
xlat
fwait
imul
lret
mov
mov
jb
mov
add
loopne
mov
mov
and
mov
mov
mov
mov
and
jecxz
mov
pop
jae
pop
addb
daa
ret
nop
add
sahf
fists
mov
add
cmp
mov
mov
test
mov
xchg
cmpl
xchg
inc
daa
jl
gs
loop
mov
xor
jns
std
pop
fildll
ret
fisubrl
inc
add
rolb
mov
add
lahf
jns
xor
loop
mov
mov
add
xor
mov
mov
mov
dec
sbb
dec
hlt
adc
pop
mov
lret
stc
sub
add
loopne
mov
sbb
add
add
mov
add
clc
adc
add
nop
add
cmp
mov
adc
test
add
xchg
add
add
jmp
aad
flds
add
sbb
orl
add
mov
aad
sahf
push
fildll
xchg
push
add
push
fwait
cmp
pop
push
adc
mov
lcall
mov
arpl
jae
les
sub
cmp
cmpsl
mov
mov
cltd
nop
add
mov
fs
aam
fsubrl
cmpsl
fisubl
loop
mov
sub
es
das
xchg
xchg
mov
or
push
add
idivb
addb
and
cltd
pop
jle
mov
in
call
add
adc
add
iret
aad
pop
mov
or
push
nop
add
xchg
movsl
aas
mov
pmullw
shll
mov
jbe
add
fwait
pushf
xor
xchg
xor
jmp
add
dec
adc
xchg
jecxz
lcall
mov
inc
pop
fiaddl
fwait
sbb
fimull
aad
sub
iret
loopne
mov
jne
add
mov
mov
in
dec
and
mov
roll
mov
fcomps
pop
xchg
xor
je
in
inc
add
xor
punpckhwd
mov
aad
add
inc
sti
cmpsb
jmp
scas
aad
arpl
inc
add
push
imul
jb
mov
mov
add
mov
test
fcmove
jb
mov
add
mov
add
jne
jp
loopne
mov
add
add
scas
addb
in
add
sti
pop
jecxz
dec
mov
inc
add
inc
add
testl
pop
inc
insb
jp
jg
aas
scas
dec
fnstsw
add
mov
mull
add
xor
sbb
xchg
daa
xchg
inc
testl
add
mov
pop
and
imul
add
mov
add
scas
xchg
add
dec
push
pop
mov
sub
add
mov
mov
addb
fistpl
inc
into
xor
add
or
pop
aad
add
mov
push
lods
pop
inc
mov
mov
pop
popa
popf
sbb
add
and
ficomps
mov
icebp
mov
scas
jno
lods
pop
jo
mov
clc
mov
mov
inc
push
sub
mov
pop
dec
mov
icebp
jl
add
mov
sub
push
xchg
sbb
lods
sub
loope
mov
test
jl
in
sbb
imul
cmpsl
add
rolb
xlat
fildll
or
pop
in
bound
mov
mov
mov
add
mov
subl
daa
test
test
arpl
add
add
enter
cwtl
sbb
xor
jne
add
sbb
sti
and
mov
dec
cmp
outsl
ficompl
add
add
mov
push
imul
add
aad
scas
scas
arpl
sbb
jne
mov
pop
sahf
mov
cmpsl
in
outsl
jae
pushf
xor
mov
jnp
push
add
mov
add
xchg
add
insl
aam
mov
push
mov
jae
bound
mov
add
mov
jecxz
jge
sbb
add
mov
sub
dec
fs
lahf
dec
jle
lret
es
inc
cmpl
xchg
xlat
mov
in
cld
sub
imul
rolb
mov
mov
data16
mov
add
call
aad
mov
adc
mov
cwtl
fs
out
push
push
bound
mov
jmp
mov
add
stc
sub
out
sub
push
jecxz
adc
cmc
loope
add
je
add
out
rolb
nop
add
jb
mov
add
mov
xor
xchg
jg
clc
push
cmpsl
mov
mov
add
sahf
push
and
xchg
or
adc
mov
ret
inc
inc
daa
andl
pop
xchg
dec
ljmp
and
mov
mov
scas
cltd
jns
rcr
dec
in
loopne
mov
add
js
add
add
dec
ljmp
and
in
lret
dec
cmp
out
std
repz
mov
xor
adc
mov
add
dec
push
jno
add
out
jg
add
mov
mov
mov
add
add
mov
rorl
addb
leave
andl
icebp
test
inc
ljmp
adcl
mov
mov
mov
sub
push
add
loope
lods
cmpsl
mov
add
inc
add
inc
cmpsl
or
js
cmp
add
sahf
inc
add
push
leave
sub
push
sbb
out
or
pusha
add
pop
pop
pop
outsb
mov
jg
push
in
pusha
add
mov
sub
add
adc
mov
lret
mov
or
nop
add
jmp
fnstsw
emms
imulb
sub
js
sbb
icebp
pop
jno
add
cmpsb
addb
out
insl
ficoml
mov
mov
inc
cmpsl
xchg
idivb
jle
or
jge
add
inc
stc
adc
mov
lea
xchg
pop
ja
mov
add
sub
mov
mov
sub
fcmovne
mov
mov
je
pop
daa
mov
mov
data16
jnp
imul
fisubrl
xor
dec
insb
aam
stc
pop
testl
dec
add
mov
add
mov
jbe
inc
and
sbb
add
push
jmp
sbb
mov
das
loopne
mov
add
inc
add
dec
aad
jle
pop
sahf
sbb
push
sbb
add
push
mov
rolb
mov
mov
push
dec
jmp
mov
imul
daa
sub
test
mov
pop
rol
add
mov
in
xchg
repnz
iret
fisubrs
daa
insl
cmp
inc
add
xchg
add
add
jg
jnp
or
add
lea
add
ljmp
bound
mov
out
mov
jno
dec
fwait
and
add
add
pop
insb
inc
addb
sub
sub
inc
add
mov
push
imull
mov
xlat
ror
rolb
mov
sub
sbb
aad
rolb
mov
jo
mov
leave
push
cwtl
rolb
mov
adc
inc
add
add
icebp
test
idivl
bndldx
add
sbb
call
xchg
add
push
add
adc
inc
add
push
mov
mov
add
mov
mov
lods
or
xchg
xor
pop
out
sbb
js
add
jnp
sub
jmp
shrl
adc
mov
add
add
xorl
xchg
in
mov
mov
icebp
mov
add
add
xchg
add
sti
adc
test
add
or
inc
add
jae
add
jo
mov
in
and
mov
add
inc
add
push
add
xchg
fcmovne
stos
adc
add
leave
cli
add
nop
add
popf
imul
xor
mov
mov
sub
xchg
add
xchg
lahf
mov
inc
add
xlat
add
mov
or
in
dec
push
push
pusha
add
dec
pop
test
mov
push
add
movsb
out
xor
out
mov
push
push
mov
pop
mov
jb
mov
cmovle
add
mov
mov
mov
mov
in
insl
daa
mov
xor
mov
mov
cmp
jecxz
cwtl
jge
pushf
adc
add
lcall
mov
mov
cs
pop
out
mov
and
mov
inc
xor
mov
or
mov
adc
mov
mov
mov
sti
fistpl
mov
add
stos
mov
les
and
pop
push
enter
add
adc
out
dec
ret
jg
add
sub
xchg
mov
or
mov
mov
fnstsw
cmp
rolb
mov
hlt
aas
ljmp
add
clc
xchg
sub
ret
pop
xchg
dec
sub
mov
fisubrs
pop
jmp
jl
nop
add
and
mov
xor
stc
ficompl
pop
inc
adc
mov
xchg
pop
xor
add
mov
pop
rolb
jns
rolb
push
cmp
cmpsl
jl
es
mov
fildll
xchg
movsb
ss
xlat
xor
mov
sbb
dec
jno
mov
fiadds
add
dec
inc
add
pop
and
add
xchg
add
mov
test
lods
dec
popl
scas
cmpsb
push
add
addb
push
add
test
inc
add
mov
and
xor
mov
add
out
fcmovnb
add
or
sbb
out
ffree
add
sbb
pushf
sub
push
sub
mov
mov
add
add
mov
mov
add
mov
add
cwtl
unpckhps
mov
add
sti
xchg
divb
or
add
lock
testb
gs
jg
insl
inc
outsl
push
scas
aad
xchg
dec
sbb
popa
add
out
sbb
lret
cld
mov
mov
cmpsl
mov
out
add
add
and
mov
add
add
mov
imul
pop
xchg
jl
mov
mov
aam
push
add
and
mov
add
xchg
add
mov
lcall
lea
call
into
gs
cmpsl
stc
repz
mul
add
imul
outsw
imul
imul
in
les
leave
insb
push
mov
mov
adc
mov
sbb
fstps
add
mov
popa
sub
push
add
xor
mov
cmpsb
sti
hlt
xor
dec
shrl
jmp
testl
add
sub
mov
pop
inc
add
push
cmp
push
mov
sub
mov
dec
fwait
in
jp
add
xor
xor
mov
fcoms
ret
push
add
fbstp
andl
mov
int3
sbb
cmpsb
mov
addr16
or
leave
rolb
mov
cmp
icebp
imull
xchg
fimull
repnz
mov
jl
sub
jl
add
jo
mov
mov
inc
pop
cmp
jmp
inc
add
pextrw
xchg
int
add
jmp
test
mov
mov
cmpsb
pop
mov
mov
jnp
call
icebp
cs
mov
jecxz
add
xchg
add
mov
adc
inc
addb
call
xchg
jp
mov
enter
icebp
imul
sbb
add
xchg
add
mov
movsb
inc
in
sbb
iret
loop
mov
push
push
xor
add
mov
mov
aaa
sub
add
add
pop
or
imul
jp
popf
xchg
push
inc
add
xchg
add
jmp
add
and
mov
movsl
or
out
add
dec
mov
mov
push
rolb
mov
add
mov
popf
adc
lods
jge
add
clc
sahf
test
add
lahf
sub
lcall
add
inc
loop
mov
or
add
xor
add
mov
in
and
mov
and
mov
push
add
push
cmp
cli
lcall
shrl
or
add
scas
xchg
add
les
addb
inc
loope
jle
rolb
mov
jecxz
sub
add
insl
and
mov
sbb
inc
lret
mov
call
dec
lea
jmp
add
jns
jge
xchg
fwait
push
add
mov
add
addb
adc
mov
fucomi
mov
add
adc
mov
lar
mov
js
jbe
and
js
insl
idivl
test
adc
pop
lock
push
mov
sub
add
pop
inc
add
xchg
add
add
loop
mov
xor
jmp
cld
xchg
stos
popa
sbbl
mov
mov
jb
mov
aad
jecxz
aad
xor
mov
mov
xchg
add
mov
stos
sbb
sbb
outsl
out
inc
adc
mov
add
sbb
xchg
xchg
cmp
cwtl
daa
cwtl
cli
and
add
mov
iret
ret
loop
mov
add
add
mov
jno
icebp
dec
pop
data16
push
or
add
mov
push
cld
cmp
out
ja
mov
add
push
jge
out
es
mov
fwait
mov
sbb
push
adc
sbb
pop
stos
adc
and
or
call
fdiv
rolb
mov
daa
icebp
jecxz
mov
xchg
stos
inc
sub
mov
dec
jmp
clc
lods
movsl
mov
bound
mov
inc
mov
inc
jl
incl
xchg
imulb
rolb
xlat
test
loop
mov
add
ret
mov
test
mov
add
es
push
xor
mov
cmp
add
pusha
add
mov
mov
jp
mov
and
add
add
fldl2e
xlat
repz
add
sub
mov
inc
add
jl
lea
rolb
mov
sub
dec
push
cld
int3
test
ret
mov
stos
bound
mov
xchg
addb
aad
cmpsb
lods
lret
repnz
in
add
mov
mov
in
mov
mov
cld
push
add
add
xchg
dec
popf
call
mov
rolb
and
add
cmp
sbb
mov
inc
add
mov
adc
mov
wbinvd
cmpsb
out
call
mov
imul
add
sbb
push
into
lods
or
add
mov
jae
and
add
not
add
add
imul
sbb
repnz
fucomi
outsl
hlt
add
mov
imul
ss
add
test
mov
add
add
lods
lret
and
mov
mov
aaa
das
data16
mov
or
sbb
and
mov
movsb
and
add
lret
bound
mov
add
push
inc
pop
std
dec
ds
mov
add
pop
lcall
inc
add
pusha
add
dec
das
sahf
aam
add
push
add
pop
adcl
mov
pop
mov
sarl
add
mov
fwait
popa
dec
xadd
mov
mov
movsb
in
into
pop
ljmp
imul
test
sahf
push
bound
mov
test
in
mov
lret
mov
lods
scas
imul
cs
leave
shrl
add
adc
mov
je
add
mov
loope
test
xchg
outsb
cmp
add
add
jno
push
jp
iret
mov
cmc
sub
fcoml
xor
mov
sub
mov
lahf
xor
xor
mov
movsl
test
movsl
cwtl
mov
mov
mov
push
pop
js
add
int3
pop
jl
xor
movd
push
cmc
mov
add
jb
mov
mov
mov
adc
icebp
aam
fsubs
mov
fistl
icebp
mov
shll
mov
enter
mov
repnz
es
lods
mov
bound
mov
out
push
xchg
into
xchg
outsb
jo
mov
icebp
mov
cmp
push
add
mov
test
mov
in
xchg
mov
mov
adc
lret
in
add
addr16
add
mov
sbb
sbb
fistps
sub
mov
popf
xchg
adc
dec
les
das
pop
sub
push
repz
add
out
xchg
and
adc
loopne
mov
or
dec
ret
repz
leave
push
movsb
out
jae
stc
pop
fists
repnz
xchg
popf
lret
xchg
add
dec
cmp
dec
sbb
mov
mov
and
call
or
sbb
mov
mov
cld
xchg
roll
cs
xchg
mov
xchg
ret
mul
add
shll
sub
sub
jg
mov
roll
or
lret
add
enter
add
xchg
shrl
cmc
and
fisubrl
aad
inc
xor
pop
xor
pop
xor
lret
push
add
mov
lods
jp
fistpl
scas
xor
mov
mov
jb
mov
jbe
rolb
xchg
jecxz
adc
add
aas
dec
jmp
fmuls
sbb
jbe
out
sahf
divl
mov
push
arpl
mov
mov
mov
add
insl
add
and
mov
mov
or
dec
nop
add
xchg
sub
add
add
mov
dec
rolb
mov
xchg
add
mov
add
add
cmp
lods
add
mov
mov
lods
mov
mov
pop
push
enter
mov
mov
lods
dec
ret
and
xor
mov
lret
push
mov
cmpsb
sub
lret
or
add
mov
ficoms
mov
mov
ljmp
push
add
daa
test
add
mov
adc
mov
negl
add
push
push
arpl
js
outsb
and
std
push
popf
sbb
mov
pop
popf
out
add
sbb
mov
sub
cld
xor
repz
push
mov
mov
imul
add
mov
add
or
aaa
out
push
sti
insb
dec
cwtl
cmp
mov
sub
fwait
mov
mov
mov
aaa
inc
add
fimull
clc
mov
adc
and
xor
mov
js
inc
jno
cmpl
lcall
mov
lea
add
imul
pop
in
push
sbb
rolb
mov
push
inc
pushf
pop
nop
add
sub
fwait
mov
outsb
pop
ds
mov
mov
neg
rolb
mov
mov
add
scas
mov
add
mov
or
mov
push
xor
and
pop
inc
rolb
mov
bound
mov
fisubl
leave
mov
in
out
push
ffreep
pop
movsl
loope
es
je
cmp
push
cmpsl
orl
pop
mov
pusha
add
cmpsl
xchg
mov
sbb
mov
and
mov
rcrl
mov
sbb
sahf
sbb
cmp
xchg
pushf
shll
jno
pushf
sahf
push
push
push
es
sbb
test
loope
pop
sub
add
arpl
xlat
gs
push
adcl
or
or
mov
ljmp
jae
data16
in
inc
add
xchg
addb
clc
inc
mov
push
mov
gs
pop
and
xchg
sbb
cs
paddusb
cmpsl
cmc
jnp
pop
xor
dec
icebp
jnp
push
rolb
mov
jmp
add
add
push
inc
loope
pop
addr16
bound
mov
pop
les
ljmp
add
dec
add
mov
imul
add
mov
data16
jno
add
pop
testl
idivb
inc
mull
mov
mov
lret
pushf
push
lods
sbb
subl
lods
adc
jmp
fcoms
adc
mov
shll
mov
imul
cld
push
add
popa
mov
dec
pop
popf
sub
add
pop
test
xchg
mov
add
aas
jbe
cld
lock
add
test
mov
mov
in
pop
addb
sub
int
sub
icebp
rolb
mov
cwtl
jl
lret
add
and
mov
add
popa
mov
das
sarl
push
adc
inc
xor
mov
pushf
rorl
in
shrl
adc
lods
sub
or
je
out
jbe
lods
movsb
xchg
sub
xchg
add
clc
push
insb
aad
dec
scas
test
stc
arpl
cmp
or
add
pushl
jp
sub
lahf
mov
std
data16
mov
outsb
lods
mov
cmc
aad
iret
xor
mov
fwait
das
rdpmc
jne
mov
mov
fiaddl
add
jae
jg
add
push
xlat
mov
add
mov
pop
fdivrl
jne
in
mov
mov
les
xor
xor
mov
nop
add
mov
pop
add
mov
fnsave
add
mov
outsl
dec
jb
mov
inc
out
xchg
add
xchg
xor
mov
lret
dec
fs
xor
repnz
mov
add
mov
add
pop
adcl
pop
ret
dec
and
rolb
mov
mov
jmp
popa
pop
adc
mov
sarl
add
addb
add
mov
mov
out
and
jns
lds
add
sahf
orl
sbb
scas
mov
test
test
mov
adc
arpl
iret
pop
repnz
mov
out
inc
sbb
gs
add
shll
leavew
xchg
xlat
addb
fisubrs
add
xchg
js
or
lock
add
add
mov
int
sbb
mov
inc
mov
clc
add
mov
jmp
jne
ja
jg
adc
mov
in
add
mov
jmp
add
fs
cmpsl
in
jns
pop
fnstcw
movsl
xchg
les
pop
aad
inc
ljmp
in
scas
cwtl
data16
mov
push
jecxz
sub
sbb
sub
cmc
decb
outsl
imul
lcall
rolb
mov
mov
pop
fisubrs
dec
rorl
cmp
xchg
fisttpll
pushf
mov
arpl
inc
add
ds
jno
popf
xchg
xchg
add
cmp
int3
inc
lods
popa
xchg
int3
cmpsb
fs
dec
jecxz
xchg
jmp
mov
adc
add
dec
sbb
add
jnp
inc
fs
xlat
push
dec
mov
ljmp
dec
test
add
leave
jp
fstl
mov
sbb
addb
cltd
and
mov
mov
push
jp
es
movsb
sarl
iret
sbb
loope
add
mov
jb
mov
mov
cmp
aaa
ljmp
add
mov
xor
mov
lods
pop
aad
sbb
sbb
cli
push
and
pop
mov
cmp
xor
mov
dec
mov
test
or
mov
fcmovu
lret
stos
push
dec
shl
imul
jle
cmpsl
jbe
add
fs
bound
mov
mov
add
mov
mov
insb
inc
gs
jge
ljmp
lret
xchg
sub
inc
cmp
mov
cmpsb
fs
inc
inc
add
repnz
js
mov
push
rolb
mov
xchg
push
je
iret
mov
pop
xor
mov
add
add
mov
popf
cmpsb
jmp
into
pop
sub
stos
stos
xor
pop
adc
jge
popf
in
pop
or
mov
stc
jae
adc
mov
and
dec
lahf
cltd
add
mov
push
popf
pop
mov
sub
mov
add
inc
add
add
mov
in
mov
add
call
or
inc
loope
add
lret
sub
mov
inc
test
js
jge
test
add
mov
pop
push
call
add
rorl
mov
add
add
pop
js
push
ljmp
ja
add
dec
andl
ret
xchg
in
pop
mov
push
add
xor
mov
xchg
add
and
add
sub
aaa
push
mov
mov
sahf
cmpsl
jecxz
xor
ja
sbb
dec
pop
and
mov
lods
leavew
or
aad
arpl
ret
iret
pop
or
add
std
pop
rolb
mov
push
jl
jns
jns
add
int3
ret
or
add
add
mov
clc
jnp
movsl
inc
add
mov
pop
inc
cmp
subl
orl
dec
dec
int3
movsl
dec
dec
push
push
mov
add
xchg
add
and
mov
mov
lds
inc
scas
cmpsl
mov
cmp
add
add
jno
stc
movl
mov
mov
je
push
clc
dec
mov
dec
call
cmp
into
pop
and
mov
push
sbb
cmp
mov
add
pusha
add
stos
xchg
push
add
add
cmp
sbb
iret
cmp
add
sub
add
fldl
mov
jle
add
cmc
push
xor
in
rcrl
insb
add
cld
lret
jl
mov
mov
or
pop
in
jp
popa
mov
mov
test
xor
mov
ss
mov
sbb
jle
jbe
inc
addb
inc
orl
sbb
mov
sbb
rolb
mov
loope
pop
aam
lret
cmp
add
pop
inc
add
mov
inc
sbb
popa
xlat
cltd
sbb
fistpl
sub
data16
add
mov
cmp
add
in
add
mov
xchg
mov
pop
jns
dec
mov
in
add
movsb
cmp
fsubl
add
mov
add
jle
and
mov
mov
sbb
call
loope
and
mov
mov
scas
push
add
add
push
xchg
rcll
adc
mov
mov
adc
mov
mov
test
cmp
xchg
xchg
nop
add
inc
movsl
enter
pop
daa
pushf
jmp
or
ret
fimuls
mov
test
push
xchg
push
or
add
sbb
mov
mov
movsl
pop
inc
gs
data16
test
data16
pusha
add
cmp
rorl
jne
movsb
mov
call
cmpl
mov
dec
sub
add
iret
int
or
addb
mov
movsl
lcall
out
cmp
add
ds
dec
push
add
adc
dec
int3
sbb
stos
lret
lret
popf
imul
dec
cli
jl
lret
mov
dec
imul
mov
clc
fstl
inc
add
push
negl
addr16
or
add
data16
loope
out
repnz
jmp
je
mov
adc
outsl
sbb
jno
push
jno
mov
outsl
xor
inc
cmpsb
int
xlat
and
imul
jns
mov
mov
mov
mov
lret
cmp
sub
clc
int3
addb
sub
inc
add
add
ljmp
divl
fwait
popa
dec
lea
push
dec
inc
das
xchg
out
ja
aam
push
pop
jbe
cmp
mov
add
sub
nop
add
dec
fimull
xchg
int3
leave
mov
and
mov
add
pop
cmpl
hlt
sub
gs
add
nop
add
cld
push
sub
inc
bound
mov
mov
mov
add
dec
jno
fwait
push
stos
inc
add
inc
add
pop
mov
xor
sub
clc
fmuls
cmp
lret
push
add
mov
ret
test
or
lods
mov
mov
loope
add
mov
rolb
mov
mov
aas
and
push
add
jns
addb
dec
mov
ret
in
jge
add
mov
aas
jno
std
cwtl
out
add
nop
add
insl
and
mov
or
addb
jno
dec
fisttpll
and
mov
cmc
or
add
jp
pop
inc
sub
clc
js
test
mov
sub
add
add
imul
or
cs
jle
ds
push
sub
add
sti
mov
mov
cmp
fldl
add
and
mov
push
add
insl
dec
insl
scas
stos
aam
and
mov
pop
pushf
rcrl
xchg
cs
arpl
je
xor
dec
int
xor
add
daa
mov
iret
insl
ds
push
xchg
pop
rolb
rcll
add
add
add
das
jmp
push
inc
xchg
add
add
or
sahf
push
add
inc
or
std
push
add
mov
jb
mov
ret
push
test
cli
popa
outsb
inc
outsb
or
and
mov
xor
mov
pop
paddsb
mov
push
sbb
fdivl
add
add
xorl
dec
mov
add
mov
mov
movsl
std
add
mov
test
adc
hlt
sahf
add
mov
imul
subl
stos
fcoml
push
pop
imul
je
or
lahf
imul
add
js
cmp
inc
mov
in
xchg
add
inc
pop
or
xchg
add
test
add
add
fwait
pop
push
adc
mov
sub
add
mov
add
push
xchg
pop
pop
out
sti
lcall
fwait
iret
xchg
callw
stos
ljmp
cmp
xchg
shll
icebp
or
jmp
stc
testb
cmp
pop
jp
xor
sub
or
add
loopne
mov
scas
rolb
mov
xchg
cmp
pop
fwait
ja
cmp
push
ja
mov
lods
sbb
dec
divl
mov
fiaddl
ljmp
jb
mov
mov
add
imul
lods
xchg
stos
and
mov
fcomip
pop
aas
flds
add
imul
dec
in
inc
add
pop
sbb
decb
movsl
lods
sub
adc
add
frstor
add
pop
sub
les
jge
pop
adc
xor
mov
push
pushf
ja
add
inc
add
movb
mov
fwait
cmp
pop
push
add
dec
mov
add
repnz
icebp
into
out
mov
cld
and
add
cld
rolb
mov
aam
movsl
je
repnz
fnstenv
xor
mov
mov
add
clc
icebp
outsb
in
rolb
mov
movsb
dec
xor
add
into
mov
in
pop
cmp
or
sub
movsl
ret
icebp
add
xchg
cmc
stos
fcomps
add
test
fildll
xor
mov
mov
mov
decb
mov
add
mov
cmp
mov
lcall
int3
and
add
jo
mov
or
mov
add
sub
mov
mov
adc
aad
add
push
cltd
shld
inc
add
or
mov
lock
iret
iret
sbb
dec
and
add
ret
or
push
mov
pop
lret
rep
bound
mov
jns
push
mov
imul
jmp
div
mov
mov
mov
cwtl
xchg
add
add
test
add
mov
add
add
dec
std
jb
mov
add
lcall
jne
movsb
pop
sub
xlat
mov
mov
dec
lret
xor
mov
or
ljmp
or
jb
mov
xchg
xchg
add
adc
add
cmp
sub
push
jecxz
icebp
out
sbb
jne
cmp
adc
mov
pusha
add
inc
add
mov
ja
lretw
rcrl
add
mov
add
xor
mov
fdivrs
cli
in
add
add
mov
fdivrs
add
sub
and
add
repnz
mov
adc
lods
pop
mov
mov
mov
lock
mov
clc
ret
cmp
fs
sub
popf
in
dec
stc
loop
mov
add
rorl
addb
addb
testb
std
xchg
rolb
mov
push
add
sbb
jge
int
cltd
scas
sti
push
pop
xchg
jecxz
add
jne
mov
mov
mov
mov
jmp
xchg
push
pop
cltd
adc
cs
sbb
ss
enter
out
sahf
out
mov
and
mov
addr16
add
aad
add
movsl
gs
push
cmpsb
daa
repz
mov
mov
subl
mov
add
or
fsubrl
rolb
mov
mov
push
add
dec
adc
push
out
sub
mov
add
pop
loope
xchg
into
or
aaa
cmpsl
jno
cmc
fmuls
rcl
bound
mov
pop
cld
or
mov
inc
add
pop
les
and
mov
push
fmull
sbb
add
sbb
add
xchg
mov
add
cmp
icebp
scas
into
mov
sahf
lds
addb
or
pop
inc
sbbl
fadd
or
push
js
add
xchg
xchg
fst
mov
push
add
mov
add
dec
stos
sub
sti
pop
es
cs
je
push
push
adc
xor
add
push
add
add
out
adcl
mov
cmp
cltd
pop
out
icebp
out
into
lret
imul
call
mov
add
sub
mov
pop
push
add
mov
and
leave
in
and
push
ljmp
in
stos
and
mov
call
mov
aaa
sub
cmp
add
ss
hlt
ljmp
mov
mov
sbb
add
mov
lahf
xor
add
add
xor
sub
rcll
push
xlat
pushf
roll
adc
add
jp
add
fildll
push
dec
ret
jmp
add
mov
in
jns
add
ret
mov
pushf
rolb
mov
mov
jle
and
mov
pop
mov
add
add
xchg
mov
jae
adc
add
xchg
out
scas
mov
add
and
mov
aas
addb
mov
add
jge
add
add
mov
lret
jg
cmp
ds
fs
add
stc
jo
mov
cmpsl
or
add
push
test
into
jg
mov
inc
cmpsl
xchg
xchg
fiadds
mov
jo
mov
into
mov
xor
add
add
sbb
jge
negb
mov
pusha
add
repnz
mov
mov
fdivrl
pop
pop
iret
add
mov
je
or
push
cmp
adc
mov
add
jl
imul
mov
lds
test
mov
add
mov
mov
pop
inc
nop
add
jecxz
or
aaa
in
mov
add
add
addb
dec
pop
jb
mov
mov
add
repz
mov
test
pushf
xchg
jb
mov
or
outsl
mov
xchg
jns
cmp
add
rolb
mov
add
mov
int
imul
jmp
pop
inc
shl
adc
stc
adc
test
add
mov
mov
sub
mov
xor
or
mov
fiaddl
jmp
int3
rcrl
xchg
test
jne
ja
test
cli
inc
cmc
push
pop
adc
scas
dec
push
mov
add
in
pop
push
sbb
loopne
mov
je
addb
or
jmp
or
push
add
mov
xchg
add
add
sbb
mov
mov
add
call
add
test
xchg
mov
ss
inc
add
fnstcw
dec
scas
inc
mov
jnp
out
mov
lods
mov
imul
cmp
mov
insb
mov
and
out
inc
add
mov
int3
sub
int3
add
jae
rolb
mov
and
mov
mov
aad
xor
scas
xor
cwtl
adc
dec
jb
mov
mov
mov
or
add
pop
sbb
aad
out
idivl
mov
ret
jge
js
sbb
adc
rolb
mov
xchg
add
add
inc
pop
call
adc
sub
outsl
mov
mov
xchg
lret
or
add
ret
mov
gs
mov
cmp
add
cs
push
push
ret
adc
mov
xchg
sub
add
testb
xchg
inc
push
push
jp
out
hlt
in
mov
mov
dec
mov
loop
mov
loope
jecxz
add
sbb
xor
fwait
mov
jno
or
std
mov
notl
out
push
add
mov
cs
das
stos
fld
cli
inc
add
add
dec
inc
add
mov
adc
mov
pop
pop
mov
add
mov
sub
add
mov
mov
ljmp
jbe
in
or
push
add
mov
push
mov
cmp
add
pop
popf
cmp
in
mov
into
push
js
in
dec
mov
xchg
and
add
lods
pusha
add
xchg
add
inc
fcompl
or
mov
rolb
mov
lahf
mov
popl
and
add
mov
mov
cmp
pop
das
sti
dec
mov
and
mov
outsl
pop
add
pushf
jns
and
mov
inc
add
mov
add
addr16
adc
xchg
mov
les
stc
add
ss
add
and
es
xchg
mov
mov
xor
push
add
cld
and
sub
jb
mov
inc
and
xchg
mov
adc
cli
out
aad
rolb
mov
mov
inc
add
js
outsl
push
add
pop
pop
sub
xor
rolb
mov
add
mov
add
and
subl
add
into
imull
addb
cmp
mov
add
cld
sbb
lahf
fisubs
adc
mov
push
push
add
pop
cltd
aad
mov
das
pop
pop
and
mov
fstp
cmpsb
cwtl
hlt
loopne
mov
mov
cmc
sbb
ret
mov
mov
pop
and
mov
inc
add
push
repz
jbe
in
push
adc
enter
cmpsb
js
lds
push
inc
sahf
xchg
cli
and
mov
bound
mov
ret
in
loopne
mov
sbb
out
xor
imul
push
add
mov
int3
dec
fidivs
nop
add
jo
mov
sub
cli
imul
imul
add
and
mov
mov
mov
test
fsts
pop
pop
ficoml
add
mov
mov
or
fdivl
push
rolb
into
call
cs
jbe
jnp
pop
sbb
mov
mov
mov
adc
mov
imul
add
addb
loop
mov
or
pop
andl
adc
fstps
cmp
mov
test
jle
stc
mov
into
push
ds
add
or
add
dec
lds
dec
cmp
cwtl
lret
inc
xchg
adc
jge
push
adc
inc
mov
pop
shrl
pop
jbe
pusha
add
pop
pop
arpl
call
add
xchg
inc
add
and
push
add
pop
push
push
add
jns
mov
insl
js
mov
pop
xchg
orl
out
jns
lods
lods
daa
lods
leave
in
pop
sub
fldenv
ds
arpl
out
and
mov
mov
add
sbb
cli
daa
out
jae
or
aam
imul
repz
hlt
adc
sti
rolb
mov
add
add
mov
add
outsl
jmp
fiaddl
lea
bound
mov
mov
mov
add
addb
dec
and
nop
add
mov
fstenv
inc
or
add
rolb
mov
add
mov
jmp
addb
adc
pop
repnz
mov
xor
mov
add
inc
imul
shll
pop
gs
sqrtps
mov
push
loope
xlat
iret
cmc
push
add
enter
cmp
imul
arpl
mov
cmp
addr16
mov
jbe
nop
add
mov
mov
fcmovnbe
jmp
imulb
inc
ds
xlat
add
mov
stos
push
in
iret
add
mov
lcall
cmp
rcll
aad
push
enter
xchg
fyl2xp1
add
and
jl
cld
inc
mov
ja
sub
mov
and
push
jge
add
mov
mov
mov
sbb
xchg
sbb
add
inc
add
dec
lods
inc
stos
jp
add
sahf
xchg
push
add
pop
adc
pop
pop
jnp
scas
jno
sub
neg
adc
lret
and
bound
mov
dec
out
cli
add
jne
pop
dec
push
repnz
add
mov
jns
cmc
movb
add
add
or
mov
sub
add
rcrl
imulb
pop
dec
mov
mov
sbb
cld
ljmp
test
ds
mov
sub
bound
mov
inc
cwtl
dec
test
push
add
sbb
push
cmp
inc
add
pop
pop
sub
push
addb
js
inc
in
mov
xchg
add
mov
mov
addr16
fsubl
mov
sti
repz
xor
dec
stos
jp
fstl
add
sub
pop
xlat
or
ret
sub
add
push
loope
pusha
add
mov
jnp
outsl
enter
mov
jmp
xorl
je
out
movsl
incl
mov
mov
popa
adcl
mov
addb
push
add
daa
xor
testl
adc
mov
add
add
int
movsb
aam
lock
mov
mov
out
jg
lds
jne
addb
inc
xor
mov
add
xlat
sbb
cs
out
sbb
add
fwait
mov
mov
mov
and
mov
stos
or
add
cli
xor
insl
sbb
add
stos
adc
mov
jns
xor
mov
or
imul
adc
mov
call
xor
add
add
mov
inc
add
mov
push
bswap
repz
add
jno
sarl
pushf
and
add
outsl
fmuls
and
mov
enter
mov
inc
ficomps
add
scas
icebp
adc
int
add
add
add
xlat
xchg
add
xchg
sbb
rolb
mov
subl
add
add
sbb
mov
mov
mov
popa
fwait
sti
mov
push
dec
cmpl
rolb
mov
sbb
inc
add
fldcw
jp
pop
mov
xor
cmp
ds
and
inc
bound
mov
mov
das
push
mov
cltd
fldt
dec
in
pop
xlat
adc
mov
jl
add
add
cmpsb
xchg
dec
cmc
xchg
cmp
lock
sti
es
xchg
daa
adc
mov
mov
add
cmpl
mov
sub
add
xchg
lock
cmp
call
clc
mov
hlt
sbb
shll
push
add
mov
popf
mov
xchg
hlt
data16
push
add
mov
jmp
jno
add
filds
jle
popf
pop
ret
pop
es
add
add
addb
xor
mov
mov
mov
mov
add
or
cmpl
and
add
dec
dec
loope
jnp
js
xor
mov
add
push
pop
mov
dec
leave
test
add
mov
add
mov
inc
add
dec
dec
data16
fistps
inc
push
stos
stos
sub
add
xor
add
push
add
in
push
inc
cmp
inc
and
mov
mov
fidivl
push
aaa
jne
aam
jbe
rolb
mov
inc
ja
add
jne
pop
addb
bound
mov
pop
bound
mov
cmpsb
pop
stos
pop
scas
or
fld
test
loop
mov
loope
add
mov
iret
mov
fisubs
addl
mov
sti
test
hlt
and
test
out
fsubr
lods
pop
js
loop
mov
add
sbb
mov
ficoms
sbb
or
push
mov
das
inc
leave
sub
mov
outsl
bound
mov
hlt
arpl
sub
pop
pusha
add
push
add
inc
add
stos
add
add
mov
leave
gs
mov
movsl
sarl
inc
lods
adc
into
sahf
mov
mov
xor
mov
add
add
int3
mov
fcoms
iret
mov
add
icebp
int3
push
xchg
pop
mov
pop
sub
js
test
scas
arpl
pop
and
mov
mov
nop
add
aad
fbld
add
iret
fcomps
cmc
ret
sbb
gs
sbb
add
add
sbb
bound
mov
add
dec
lock
jmp
add
mov
lret
and
mov
or
mov
lea
mov
mov
push
xchg
mov
cld
jno
and
mov
xor
inc
ds
es
add
pop
divb
inc
ja
add
or
shll
out
repz
ret
mov
pop
lcall
or
bound
mov
rolb
mov
xchg
dec
out
mov
sbb
mov
add
enter
add
aas
out
cmp
xor
repnz
pop
xor
push
mov
mov
mov
enter
mov
xchg
mov
imul
rorl
ss
add
cltd
pop
fcompl
jle
jb
mov
pop
dec
aas
or
pop
mov
xor
mov
mov
push
or
mov
cmp
mov
rolb
mov
into
test
inc
or
sub
or
mov
aas
jbe
pop
in
movsb
lods
rolb
mov
int3
fidivrs
pop
add
shll
stos
mov
outsb
cmp
sbb
dec
push
mov
add
aas
mov
nop
add
fisubl
mov
sbb
ss
add
aam
add
mov
mov
filds
mov
mov
scas
addb
xor
mov
add
pushl
cmc
mov
add
mov
test
