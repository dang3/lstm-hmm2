add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrb
pop
pop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
call
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lock
lock
lock
ja
ja
ja
ja
ja
ja
ja
int3
test
test
cltd
cltd
cltd
cltd
cltd
cltd
cltd
ds
push
add
add
add
add
add
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
das
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
pop
xchg
sub
sub
cli
cli
cli
cli
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
dec
dec
dec
dec
int3
int3
int3
int3
int3
int3
int3
int3
xor
xor
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
addl
addl
addl
addl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
dec
dec
dec
dec
dec
out
out
out
jle
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
popf
adc
adc
sub
sub
sub
sub
sub
sub
push
push
push
push
push
push
test
test
add
add
add
add
mov
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
push
push
push
push
push
push
push
push
xchg
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fs
fs
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
arpl
arpl
arpl
arpl
arpl
sub
sub
sub
sub
sub
sub
ds
ds
int3
int3
mov
mov
mov
mov
mov
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
test
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
and
and
and
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
add
mov
mov
mov
mov
fadd
les
push
push
push
push
push
push
push
fldcw
sub
sub
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
or
and
test
test
test
test
test
test
test
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
bswap
int3
int3
int3
jns
add
add
add
add
add
add
add
add
add
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
sub
sub
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
fs
in
dec
dec
dec
dec
cmc
cmc
or
or
or
or
or
or
int3
int3
int3
int3
int3
int3
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
xchg
xchg
xchg
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
fstp
fstp
fstp
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
rol
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
pusha
pusha
pusha
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
push
fwait
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
loope
loope
loope
loope
loope
loope
loope
loope
loope
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
bt
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
shl
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
rcl
rcl
rcl
roll
addl
addl
addl
addl
addl
addl
addl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
ss
dec
dec
dec
dec
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
jl
jl
jl
jl
jl
jl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sub
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jbe
jbe
jbe
jbe
jbe
jbe
jbe
xor
xor
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
gs
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
cmpsb
cmpsb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rcl
rcl
fcompl
sbb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
shr
call
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
adc
adc
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
call
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
div
div
div
div
negl
pop
pop
pop
pop
pop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
fwait
push
dec
dec
dec
adc
adc
adc
adc
adc
adc
adc
hlt
hlt
hlt
hlt
hlt
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
int3
int3
int3
int3
ss
bound
bound
bound
bound
bound
dec
dec
adc
adc
adc
lret
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
jecxz
jecxz
jecxz
dec
dec
dec
dec
dec
fs
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
cmova
inc
inc
inc
inc
inc
inc
inc
inc
inc
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
ljmp
test
test
test
test
imul
imul
imul
imul
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xabort
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
add
bound
bound
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
stos
stos
stos
mov
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
jg
jg
jg
jg
jg
jg
jg
jg
jg
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
repnz
repnz
jns
jns
jns
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
jg
xor
xor
mov
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
repnz
repnz
repnz
repnz
repnz
rol
rol
rol
rol
rol
rol
rol
rol
rol
rol
das
das
das
das
das
das
das
das
das
das
das
test
test
test
test
test
test
test
test
test
test
test
test
test
test
addl
addl
addl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
mov
mov
mov
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
ja
jns
jns
jns
jns
jns
jns
jns
jns
jns
xchg
xchg
xchg
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
test
test
test
test
test
test
test
test
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
sti
sti
sti
sti
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
or
imul
imul
imul
imul
imul
imul
imul
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
loop
push
push
push
push
push
push
push
push
push
push
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
mov
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
js
js
js
js
js
js
js
js
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcrl
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
jg
jg
jg
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
jnp
or
or
or
or
or
fxch
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
imul
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
imul
imul
imul
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
jb
jb
jb
jb
jb
jb
jb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
or
xor
mov
mov
mov
mov
mov
mov
mov
mov
jle
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
out
out
out
out
out
out
out
out
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
pop
pop
lds
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
jp
jp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
ja
ja
xor
xor
xor
xor
xor
xor
xor
xor
xor
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
pop
pop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
mov
mov
mov
mov
mov
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jae
jae
jae
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
cmp
insl
pop
add
push
add
dec
add
add
add
add
push
dec
add
jg
and
add
mov
gs
aam
add
jmp
jb
clc
loop
add
inc
outsl
cmp
cmp
icebp
or
push
push
add
jecxz
add
add
add
mov
add
xor
jl
push
add
add
add
inc
add
clc
pop
xor
add
out
inc
add
add
jmp
popa
hlt
hlt
imull
jle
out
lcall
rorb
and
loope
or
xor
add
and
fstl
adc
add
add
mov
jp
in
lcall
lea
add
or
mov
jecxz
add
add
add
je
test
lret
cwtl
js
shlb
test
adc
add
data16
call
add
in
pop
or
adc
add
push
add
or
sbb
mov
gs
aas
inc
add
mov
jb
sbb
pop
add
sahf
loope
insb
add
add
push
add
push
add
notb
pop
shlb
rcrl
jg
sti
add
inc
add
cmc
jne
ljmp
shrb
jbe
mov
and
xor
pushf
push
jno
push
add
add
divb
add
and
popf
ss
mov
fwait
mov
sti
mov
add
aas
and
push
add
jo
scas
xor
mov
jbe
push
add
push
insb
add
sub
test
push
add
xchg
or
test
add
push
sub
add
push
adc
jnp
add
fidivl
fwait
sub
mov
add
andb
add
in
xchg
pop
add
pop
xchg
sub
mov
fs
ds
sbb
sub
xchg
loopne
loop
out
jge
insl
cmp
frstor
inc
add
in
add
push
lea
mov
xchg
cmp
jle
dec
mov
arpl
add
xor
cld
add
movsl
sbb
lds
add
fldt
mov
ja
mov
push
add
std
out
add
add
divb
cwtl
ret
into
aas
into
add
les
rorb
sbb
addl
xchg
shlb
lods
pop
add
cmpsl
pop
add
add
dec
xchg
push
add
add
adc
dec
sahf
or
popf
xchg
or
js
jbe
je
push
in
pop
add
jl
push
inc
jle
fwait
push
stc
lds
pop
xchg
lock
mov
xchg
sbb
add
add
pop
add
push
jnp
bound
xchg
imul
jg
add
pop
add
orl
mov
push
add
pop
xor
mov
add
pushf
sbb
cmpl
fstl
loop
add
jg
add
pop
sub
sub
or
push
aam
add
in
push
xor
sub
push
add
add
vmwrite
stos
pop
mov
dec
stos
inc
add
add
fdivrl
inc
add
inc
add
js
jae
xchg
shll
sbb
dec
dec
add
and
je
pop
add
test
repnz
add
aaa
push
xorb
and
and
movsl
xchg
dec
add
out
data16
iret
adc
ret
lea
add
mov
rorl
add
add
dec
add
cmp
add
mov
add
adc
lock
add
je
mov
xchg
fldl
ficoms
rcrb
mov
add
add
add
inc
movsl
or
add
xchg
sbb
fdivrs
sahf
xlat
add
imul
pop
cli
jns
sub
push
add
stos
mov
ret
add
add
jns
add
and
out
add
jecxz
add
outsb
add
add
inc
add
test
push
pop
out
flds
adc
aam
add
dec
add
lahf
mov
repnz
cmpsl
jge
sbbb
mov
push
add
aas
add
dec
xor
push
add
and
pop
outsb
add
imul
out
add
push
cmp
stc
jnp
mov
jle
ret
inc
add
in
mov
mov
lods
mov
aad
xor
dec
add
add
adc
jmp
adc
in
xchg
mov
add
xor
jno
pushf
cmpsb
xchg
cmp
pushf
cltd
xor
add
pop
xchg
adc
repz
jbe
inc
add
inc
add
mov
add
fidivrs
add
pop
cmp
pop
or
inc
cltd
fwait
and
adc
loope
add
insl
fisttps
add
push
repz
cmp
jge
xchg
jns
mov
xor
add
call
mov
das
hlt
mov
mov
add
dec
dec
add
hlt
pusha
add
fwait
dec
idivl
popa
into
jge
pop
loope
in
add
jnp
cmc
add
jecxz
add
push
cltd
mov
jmp
mov
add
dec
jns
add
xor
push
add
mov
dec
add
jns
jns
jge
test
mov
and
pop
pop
add
add
add
lret
dec
add
pop
add
std
jge
mov
mov
test
mov
aad
sbb
add
loopne
iret
idivb
add
sbb
add
insl
push
add
add
mov
add
pop
add
add
and
idivb
ljmp
jae
add
lods
gs
adc
inc
add
cmpb
add
sbb
sti
add
add
xor
cwtl
subl
add
push
stc
add
fists
add
in
fwait
dec
or
int3
in
add
push
mov
add
jae
jns
add
in
pop
adc
push
add
add
mov
hlt
mov
or
pop
add
add
sub
mov
cmp
add
movsb
loope
push
addl
shr
mov
add
and
in
xchg
jle
iret
mov
add
pop
add
mulb
jbe
sbb
movsb
mov
add
pop
add
add
sbb
sti
inc
xchg
inc
addl
mov
add
call
inc
loopne
cld
pop
pop
add
out
std
adc
dec
add
add
pop
nop
inc
add
and
xor
mov
mov
cwtl
jbe
daa
push
add
cld
ss
scas
sbb
jmp
add
xchg
aam
add
add
mov
ret
addr16
jnp
add
movsb
adc
lcall
das
push
add
cmp
stc
fmull
add
test
add
ja
add
xlat
sub
les
fwait
ret
adc
push
dec
rclb
jne
cmp
xor
mov
add
adc
je
xor
adc
add
mov
push
add
mov
popf
and
out
mov
cwtl
incb
bound
mov
stos
fsubl
test
add
repnz
add
subl
bnd
pop
aad
lahf
mov
add
add
mov
dec
adc
pop
ficoms
int
add
cmp
imul
pop
sub
push
pop
testl
sbb
add
arpl
lds
xchg
jb
adc
mov
add
aam
call
gs
add
je
mov
add
xchg
pusha
add
data16
stos
xchg
add
insl
cmp
mov
mov
mov
cmp
loopne
xor
mov
inc
add
pop
and
pop
add
psrlw
aad
add
jg
xor
add
cmp
add
mov
lock
mov
mov
pop
add
fidivl
add
xor
rcl
in
pop
ds
out
sbb
add
add
sub
xchg
pop
sbb
and
adcb
imull
jg
cmpsl
fstpl
fsubrl
adc
stc
push
jbe
xchg
sub
dec
mov
inc
add
and
mov
mov
pop
imul
lahf
clc
sbb
add
mov
or
aam
enter
ret
push
add
nop
add
repz
add
jo
push
sbb
push
add
xchg
aaa
xor
arpl
push
add
mov
add
mov
add
pop
add
and
sbb
adc
push
add
in
cli
data16
jl
outsb
add
add
add
mov
add
push
add
add
push
add
jo
inc
add
mov
movsl
push
add
dec
sub
nop
rcl
mov
cmp
ja
mov
inc
cmpsl
fldenv
or
push
add
sub
test
and
sbbb
sub
xor
add
add
add
push
add
add
add
lret
jb
sti
dec
add
adc
js
adcb
out
sbb
aad
in
xchg
movsl
sub
aas
pop
or
popa
sub
xchg
fucomi
test
loope
mov
jge
add
loopne
push
add
xchg
and
pop
add
sbb
sbb
rclb
aaa
dec
int3
insl
adc
jecxz
add
das
jmp
add
mov
mov
mov
push
mov
sbb
in
push
add
add
add
or
add
popf
fsubl
add
add
add
xlat
mov
or
xchg
adc
pop
pop
lea
cmpsl
cmpsb
inc
pop
movsb
jb
xchg
stos
mov
repnz
imul
insb
add
hlt
dec
add
add
in
ja
add
add
mov
dec
add
xor
add
xchg
out
jecxz
add
leave
pop
sbb
insb
add
add
dec
add
add
mov
decb
inc
add
jle
pop
add
aad
add
pushf
cmpsb
lods
fdivs
add
int3
test
movsl
loop
adc
rorl
mov
jl
sub
lret
add
sarb
lret
dec
div
pusha
add
pushf
add
addl
clc
rcrl
shlb
add
repnz
add
arpl
xchg
adc
insb
add
iret
sarl
add
add
sub
add
xor
lock
sbb
arpl
mov
inc
add
and
mov
sahf
aaa
gs
add
xor
sbb
xorl
jb
lock
add
sbb
or
mov
ret
pop
test
dec
add
scas
jl
aaa
imul
push
jae
add
lods
jge
add
adc
push
int3
sbb
test
cs
fsubs
pop
aaa
cld
pop
add
dec
mov
add
xchg
loop
mov
ficomps
jg
cmpl
sub
outsl
jbe
divb
add
mov
sbb
xchg
jmp
xchg
dec
stc
adc
inc
hlt
pop
push
les
mov
test
and
pop
add
xor
les
add
jo
mov
int3
je
inc
mov
sbb
add
movsl
add
popf
dec
add
mov
add
pop
inc
add
mov
ret
scas
mov
add
adc
jo
lret
shrb
insb
add
icebp
jns
fmull
add
ficoms
ljmp
out
jmp
add
adc
cmp
call
cmc
lahf
lea
add
add
rorb
ficoml
add
mov
leave
sub
mov
add
add
data16
pop
add
fwait
scas
sbbl
add
jno
insl
incl
add
lods
fdiv
fbld
in
lahf
ljmp
imul
add
lahf
sub
icebp
repz
adc
nop
xchg
dec
add
shrb
idivb
add
cmpsb
enter
xchg
lret
in
add
mov
add
xchg
outsb
add
add
sarl
cmp
add
lea
add
ja
lds
add
inc
add
sarb
jbe
jle
xchg
sbb
lods
mov
fdivrl
popf
rclb
mov
jno
adc
xor
stos
out
shlb
sub
fcoms
add
dec
add
icebp
mov
add
xchg
lods
add
sbb
add
movsl
loop
cltd
pop
pop
add
add
add
add
loopne
add
jmp
das
mov
jmp
or
das
dec
lock
add
xchg
or
add
inc
int
mov
dec
add
out
mov
adc
push
jmp
push
add
sti
ret
or
cmc
int
fucomi
push
movsl
adc
test
mov
jecxz
jnp
mov
jp
xchg
mov
sub
jg
add
loopne
jne
jmp
rcll
jg
add
push
add
push
add
pushf
leave
clc
movsb
push
add
inc
add
mov
add
mov
popf
ret
sahf
pop
xchg
add
add
scas
pop
push
add
movsb
loopne
pop
fwait
inc
mov
add
jecxz
add
dec
fwait
orl
add
maxps
ss
inc
xchg
fildll
jp
and
mov
xchg
xchg
fistl
sub
pop
add
mov
sub
cmp
scas
fnstenv
pop
add
lods
out
or
loopne
xchg
add
movsl
or
add
add
add
sar
jae
roll
idivb
scas
or
mov
add
arpl
pop
add
rolb
loop
add
cmpsl
and
leave
xchg
adc
loope
add
jecxz
lock
adc
cmp
lds
pop
add
mov
outsl
sub
add
add
jo
xchg
call
xor
mov
mov
stos
cmp
inc
rorl
add
mov
call
add
and
je
pusha
add
test
sti
dec
decl
jp
daa
xor
add
adc
lahf
jecxz
sar
imul
negb
arpl
stc
das
test
pusha
add
stc
jo
rorb
push
add
add
xchg
out
add
add
add
sahf
mov
push
add
xchg
lock
scas
add
pop
add
add
lods
adc
add
clc
xchg
mov
and
xchg
adc
rorb
add
loopne
mov
out
pop
add
adc
lret
test
jecxz
fwait
insb
add
stos
in
cmc
loopne
xor
push
add
aad
ja
dec
add
push
add
lret
das
je
add
or
push
mov
enter
inc
add
imul
subb
int
mov
jnp
or
aaa
dec
aaa
mov
jbe
inc
add
lret
mov
inc
add
ret
js
sub
bound
ret
xchg
jmp
add
arpl
add
add
cld
pushf
inc
in
mov
xor
sbb
imul
sub
add
adc
mov
dec
test
sbb
adc
call
add
add
sbb
into
shlb
rcl
aaa
dec
add
add
outsb
add
es
xchg
fcomps
enter
pop
jo
fwait
das
pop
ret
mov
lcall
out
add
mov
add
daa
mov
jmp
mov
fstpl
cmp
ret
add
add
add
pop
movsl
fmull
sbb
sti
xor
inc
add
les
add
xor
adc
push
add
int
sbb
sbb
imul
add
jb
in
inc
add
faddl
shl
in
mov
shll
insl
mov
add
add
xor
add
loope
push
ret
mov
add
inc
xchg
and
mov
adc
pop
add
in
xlat
dec
add
add
pop
cld
ljmp
repnz
mov
adc
push
add
sbb
nop
aad
add
add
add
ja
add
xchg
mov
cmp
test
add
sbb
gs
adc
js
hlt
sub
daa
mov
rcrb
clc
xor
repnz
add
mov
xchg
lea
add
add
mov
fstpt
imull
repz
loopne
jno
mov
jbe
sbb
shll
scas
mov
jge
add
scas
into
fimuls
add
stos
inc
add
jge
pop
fadd
sbb
xchg
push
dec
sub
xchg
and
inc
ror
and
xchg
xchg
sub
add
xchg
test
add
inc
xchg
add
xchg
dec
pop
ja
imul
mov
add
test
stos
inc
cmpsl
inc
add
lods
cmp
cmpb
xorb
cmp
push
add
jp
mov
add
mov
cmp
cmp
mov
xor
arpl
xchg
cmp
or
dec
add
js
rorb
pop
enter
xchg
cs
cwtl
int
dec
outsl
bound
and
add
scas
mov
rcll
iret
sahf
push
add
mov
mov
jne
call
add
rclb
ficoml
add
add
jb
stos
fisttpll
stos
popa
out
add
cmp
add
mov
xchg
cwtl
data16
rcl
cltd
push
add
incl
or
cmp
das
outsb
add
mov
pop
repnz
gs
xchg
sub
or
add
add
jmp
push
cld
test
add
add
jg
cmp
pop
add
cmp
mov
lea
add
sarb
adc
xor
push
push
sub
push
add
add
push
add
das
nop
push
cmp
add
jnp
std
inc
add
add
inc
add
roll
mov
add
neg
stos
jl
js
loopne
ret
aad
popa
cmp
jae
xchg
xor
mov
iret
decl
imul
add
mov
aam
lock
xlat
pushf
jecxz
aaa
mov
cmp
outsb
add
cmp
mov
out
add
add
gs
stos
add
mov
mov
mov
sub
lea
movl
cld
andl
clc
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
clc
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
movl
push
push
push
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
test
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
jmp
cmp
dec
and
mov
inc
or
lea
lea
add
shr
lock
sub
and
je
push
mov
jne
dec
add
popf
testb
rcrb
in
rorb
add
sahf
popa
dec
cmp
sub
adc
test
sti
pop
add
movsb
xchg
xchg
push
mov
inc
add
sbb
push
add
bound
pop
jmp
add
cld
push
mov
cmp
and
jg
or
xchg
clc
add
sbb
xchg
cmp
jl
xor
mov
fistpl
test
test
out
repz
cmp
jo
cld
es
sub
test
add
adc
push
xchg
popa
imul
add
arpl
lods
inc
add
add
inc
add
add
cmp
sbb
loop
sub
sarb
add
mov
aam
add
lock
add
add
add
jb
push
in
call
jns
cltd
fimull
add
add
insl
pop
add
add
sub
add
lods
xor
adc
xor
jle
mov
xor
pop
ficompl
cmpsl
leave
xchg
mov
sub
dec
test
add
dec
add
movsb
push
dec
add
push
add
pop
xor
sbb
scas
mov
add
pop
pop
add
sub
adc
sub
ret
mov
mov
add
add
dec
jbe
cmpsl
mov
jecxz
push
inc
add
add
add
add
mov
mov
add
xor
sub
jecxz
dec
loopne
add
mov
hlt
iret
cmp
push
push
test
adc
hlt
push
add
jp
cltd
mov
add
insl
sub
js
in
sub
push
add
add
inc
add
add
sub
xor
rcll
outsl
jle
mov
mov
push
add
lods
loopne
xor
loope
add
dec
and
xor
js
repnz
xchg
cmp
add
out
aas
adc
jecxz
xchg
push
add
add
les
ja
xchg
shr
js
lock
or
gs
and
iret
pop
and
push
fimull
shrb
pop
add
jbe
into
int3
inc
inc
add
add
sub
add
insl
insb
add
aam
dec
add
outsb
add
testb
add
add
scas
outsb
add
sbb
mov
push
lahf
leave
cmp
add
add
add
call
in
mov
outsl
nop
rcl
lahf
mov
sahf
sbb
add
jns
arpl
add
add
inc
mov
jnp
lods
popf
imul
aam
add
add
add
add
jno
add
add
push
add
add
add
cltd
jle
mov
int
aaa
jb
sti
into
jmp
xchg
jp
mov
add
sbb
or
jno
xchg
and
xlat
fwait
in
xchg
xchg
adc
aas
test
in
push
mov
xchg
loopne
add
add
add
je
or
jle
orl
or
push
add
or
popf
mov
imul
cmp
sbb
dec
add
popa
outsb
add
out
cltd
push
clc
lret
shll
sbb
mov
leave
pop
test
filds
mov
dec
add
inc
add
jp
add
cmc
xor
add
inc
add
inc
add
sahf
mov
fidivrl
lret
sbb
dec
add
xchg
imul
sbb
add
or
push
add
ret
lods
xor
cmp
popa
insl
out
xchg
fucomip
inc
mov
lcall
xor
insl
int
or
hlt
rcll
adc
pop
add
push
add
sub
xchg
in
jns
arpl
cld
es
loope
call
push
int3
xor
xorb
push
lods
lods
mov
shrl
loope
cli
sbb
dec
mov
add
add
shrl
sbb
add
enter
add
test
dec
dec
push
adc
mov
add
call
dec
add
adc
mov
rorb
data16
and
dec
dec
inc
sbb
add
add
add
fwait
sbb
rolb
add
xchg
aaa
loop
push
add
add
add
add
cmpsl
jne
add
push
enter
jnp
add
jmp
pop
add
outsb
add
add
xchg
vphaddbw
add
mov
data16
jle
insb
add
add
add
adc
add
xlat
sarb
add
jns
repz
leave
jecxz
pop
mov
xor
sbb
inc
add
add
mov
add
cmpsl
xchg
or
cmp
sub
xchg
mov
aad
ficoms
add
dec
add
jl
sub
por
jo
sub
add
add
sub
shlb
add
lock
cltd
push
xchg
xor
addr16
add
lds
add
loop
ja
mov
add
in
dec
add
into
xchg
fcmovu
inc
add
xchg
fadd
jae
add
mov
add
lret
inc
fisttps
add
rclb
add
add
add
add
std
lods
or
adc
stos
push
add
adc
push
cli
dec
add
push
add
xchg
shlb
mov
add
add
add
cld
mov
rclb
mov
inc
mov
shlb
cmp
out
jb
cmp
out
add
jp
test
jl
test
sbb
push
add
lret
inc
add
add
and
das
sahf
push
add
add
pop
dec
lret
adc
sub
mov
add
xor
add
add
ret
inc
pop
push
fld
mov
pop
add
fdivs
aad
pop
add
aas
add
push
add
fnsave
aaa
out
push
repz
add
ficoms
cmpsl
push
add
lahf
jno
arpl
scas
iret
adc
nop
arpl
in
or
repz
pop
add
add
mov
cmp
jo
mov
xor
stos
loop
add
add
mov
xor
cltd
clc
mov
lret
adc
add
scas
mov
add
dec
pop
dec
add
jbe
and
jb
inc
add
lds
in
out
in
push
add
jecxz
loopne
loop
mov
xchg
cmp
add
mov
lods
ret
iret
inc
add
testl
add
dec
add
add
mov
add
arpl
add
sub
inc
add
jo
inc
add
lea
loop
add
loop
add
loope
add
push
xchg
pop
out
ret
sub
mov
aad
rolb
cltd
push
aad
jg
lret
lret
add
adc
xchg
dec
jbe
shl
xchg
ljmp
std
cmp
leave
pop
dec
mov
mov
inc
add
mov
orl
or
clc
fidivs
mov
jmp
rcll
cmp
sahf
mov
xchg
xorl
shlb
adc
adc
push
add
mov
or
add
ret
mov
adc
daa
fidivrl
fdivl
sub
inc
add
jp
roll
aas
mov
add
pushf
or
pop
test
jmp
notl
inc
add
add
xor
dec
add
add
push
xchg
xor
rol
pop
add
add
sub
aaa
xor
stc
repz
cs
pop
icebp
or
pop
add
lods
pop
add
add
in
stos
dec
push
add
push
push
loope
nop
push
jb
sbb
cltd
int3
imul
add
jp
fists
add
push
cmp
inc
add
in
aaa
pushf
and
lock
dec
leave
mov
or
sub
and
jns
lret
add
clc
sahf
cmp
cli
add
add
jnp
into
pop
scas
dec
add
movsb
repz
inc
add
add
fbstp
add
clc
and
sbb
add
test
mov
stc
mov
add
cmp
addl
add
pop
adc
add
add
fistl
add
lods
mov
sahf
inc
add
popa
popa
pop
add
add
xlat
aad
jecxz
jb
mov
imul
add
testb
add
add
hlt
push
adcb
push
jmp
or
add
std
sbb
xchg
lea
loope
loop
out
pop
div
or
cmc
sub
fidivs
xchg
pop
push
add
add
mov
test
add
pop
mov
add
dec
insb
add
pushl
add
jns
push
mov
add
add
inc
add
sub
lea
xchg
imul
fimull
add
and
rorl
add
mov
add
or
shll
mov
inc
add
pop
dec
cmpsl
mov
xor
cwtl
and
jp
xchg
push
cmp
fs
scas
sbb
adc
imul
or
add
vcomiss
test
adc
jmp
pop
jp
inc
fcomi
ljmp
add
in
xchg
repz
add
add
adc
inc
int
mov
mov
out
push
and
aas
pop
add
jmp
inc
cmpsl
bound
mov
pusha
add
fisttps
mov
add
xor
pop
add
js
imul
jne
int
popf
add
and
repnz
jns
add
add
add
xchg
lret
stos
push
add
xor
pop
enter
add
movsl
xchg
push
add
mov
add
dec
add
mov
add
pop
add
lahf
sub
int
add
xchg
fiadds
mov
icebp
xor
mov
inc
add
cltd
xor
add
add
xchg
shlb
shlb
add
add
jno
mov
popa
sbb
rcrb
add
or
inc
mov
dec
add
lds
add
out
lret
mov
inc
add
popa
das
fiaddl
add
add
test
inc
push
add
bound
adc
pop
pop
add
ja
xor
pop
push
add
repz
and
add
pop
add
add
jbe
in
in
pop
sub
xchg
jp
xchg
rcrl
add
dec
inc
add
add
adc
adc
xor
xchg
stc
inc
add
out
pop
and
sub
and
adc
jne
add
mov
arpl
add
inc
jl
cmp
inc
mov
ret
inc
add
cmp
or
outsl
cmpsb
aad
aad
dec
sbb
mov
mov
push
add
enter
add
test
add
add
mov
out
inc
loope
add
mov
inc
add
fidivrl
dec
add
dec
add
inc
aad
nop
adc
stos
repz
test
dec
mov
pop
add
adc
pop
dec
jb
fxch
out
stos
out
ret
jne
add
mov
inc
pushf
pop
lods
xor
xor
int3
mov
add
jb
mov
std
shrb
icebp
and
jecxz
xchg
das
jmp
add
movsb
xchg
imul
add
outsb
add
int3
lock
ret
adc
lds
fnstenv
inc
xor
cwtl
inc
add
add
add
add
imul
sahf
hlt
jno
mov
int
add
stos
or
mov
repz
rclb
xchg
insb
add
jb
fsubrs
add
add
add
cmp
pop
lea
add
sbb
lea
add
push
add
stc
push
add
push
add
adc
add
fiaddl
loop
cmp
dec
add
add
add
add
pop
xor
ljmp
hlt
repz
mov
add
cmp
scas
hlt
ror
adc
int
push
add
pop
add
mov
add
mov
add
xchg
dec
movsl
ja
add
aad
add
cmp
dec
add
add
fucom
pop
add
pop
add
or
mov
add
cmp
leave
flds
dec
jle
test
in
adc
sbb
add
jecxz
dec
bound
mov
xchg
out
add
add
in
push
sbb
dec
repnz
push
sahf
inc
ljmp
add
add
jge
adc
add
cmp
sub
jmp
jg
mov
fucom
popa
gs
pop
rclb
loopne
add
add
add
dec
add
dec
add
xchg
cmp
add
add
call
add
popa
or
add
and
xor
pop
sbb
sbb
jle
rol
ja
add
leave
scas
sti
push
add
inc
add
cmpsl
pop
add
push
enter
scas
addl
add
mov
add
or
imull
int
mov
add
and
add
push
add
add
xchg
cld
sbbl
mov
xchg
subsd
cmpsl
cli
bound
sub
stc
or
xor
cltd
add
fbld
jge
movsl
loop
add
and
xor
push
leave
inc
fisttpl
jo
aas
out
aam
mov
int3
xchg
fldcw
add
add
lds
fstps
scas
push
add
mov
shrl
pop
add
add
repz
add
lea
inc
add
add
push
add
popf
lret
ja
rclb
add
leave
jmp
ja
rcrl
cld
xchg
pop
ljmp
add
and
adc
add
add
or
imul
or
lea
ja
cmc
push
push
add
jnp
add
push
add
adc
ret
ret
lea
add
add
popa
sub
scas
sub
cltd
jp
test
add
add
jnp
das
xor
mov
add
int
jecxz
add
add
add
jmp
add
out
mov
aam
outsb
add
enter
mov
add
dec
pushf
mov
and
mov
clc
repnz
nop
nop
jae
mov
add
repz
push
mov
xchg
ret
out
lods
int3
rorb
add
add
add
cld
nop
nop
jae
mov
add
adc
pop
add
lret
stos
fistpl
clc
repnz
nop
nop
jae
add
jb
add
push
roll
push
add
mov
push
mov
leave
nop
jmp
faddl
add
push
add
mov
clc
repnz
nop
nop
jae
out
jb
scas
jle
xchg
xchg
add
cmpl
nop
push
mov
leave
nop
jmp
push
and
loopne
and
add
add
clc
repnz
nop
nop
jae
movb
jb
int3
ja
add
repnz
nop
nop
jae
cmp
add
filds
push
add
mov
clc
repnz
nop
nop
jae
add
add
add
sub
mov
xchg
ret
lods
or
in
add
add
inc
in
sbb
lock
push
clc
repnz
nop
nop
jae
xchg
xchg
add
mov
int3
lods
call
add
add
repnz
nop
nop
jae
iret
xor
lods
push
add
enter
and
push
mov
leave
nop
jmp
mov
or
sub
add
fld1
push
mov
xchg
ret
filds
inc
cmp
jle
add
add
clc
repnz
nop
nop
jae
fcoms
add
add
xor
clc
repnz
nop
nop
jae
add
fbld
xchg
add
enter
lods
and
imul
cld
nop
nop
jae
add
mov
add
lods
jg
inc
adc
repnz
nop
nop
jae
and
add
jecxz
jecxz
xchg
add
push
mov
leave
nop
jmp
mov
add
add
rep
clc
repnz
nop
nop
jae
push
xor
pop
scas
mov
pusha
add
pop
pop
push
mov
xchg
ret
jle
cmp
add
add
mov
mov
xchg
ret
fadds
add
add
add
add
push
add
clc
repnz
nop
nop
jae
add
add
add
out
incl
or
add
push
mov
xchg
ret
add
add
iret
fists
add
aas
add
clc
repnz
nop
nop
jae
cmp
jb
cmpsb
and
shlb
adc
test
pop
add
clc
repnz
nop
nop
jae
sti
sti
lods
add
repnz
nop
nop
jae
add
sbb
lods
add
jno
loopne
lret
fld1
clc
repnz
nop
nop
jae
inc
push
rorl
dec
fdivr
xchg
jb
mov
nop
push
mov
leave
nop
jmp
int3
addb
add
test
repnz
nop
nop
jae
push
add
push
dec
mov
push
mov
leave
nop
jmp
roll
int3
add
inc
inc
add
add
mov
mov
nop
push
mov
leave
nop
jmp
xchg
add
lods
addb
xchg
add
movb
repnz
nop
nop
jae
jecxz
cmp
add
jle
cmp
add
stos
push
mov
xchg
ret
add
sub
add
filds
add
or
jmp
insb
inc
add
add
lods
inc
shll
inc
push
push
push
mov
xchg
ret
jno
add
xchg
inc
add
out
add
add
push
clc
repnz
nop
nop
jae
add
iret
add
add
add
add
and
lods
faddl
lret
clc
repnz
nop
nop
jae
data16
add
add
add
leave
nop
jmp
lods
jle
int3
inc
add
fnstenv
sar
cld
nop
nop
jae
add
jle
pop
add
add
mov
pop
push
mov
xchg
ret
or
add
lods
jno
lods
add
adc
nop
push
mov
leave
nop
jmp
add
fadds
mov
clc
jl
add
add
sub
add
add
add
repnz
nop
nop
jae
push
or
mov
cwtl
repnz
add
insb
add
clc
repnz
nop
nop
jae
add
or
add
inc
inc
jle
nop
pop
add
mov
clc
repnz
nop
nop
jae
push
xchg
incl
jge
filds
inc
add
push
mov
xchg
ret
add
add
add
cmp
add
int3
push
add
mov
xchg
ret
push
scas
lods
push
and
pop
lods
or
cmp
mov
xchg
ret
add
xchg
jge
lods
sub
add
lods
dec
push
mov
repnz
nop
nop
jae
hlt
push
pop
mov
add
xchg
call
push
mov
xchg
ret
add
add
add
lods
jp
insb
add
add
clc
repnz
nop
nop
jae
jb
add
iret
add
cld
nop
nop
jae
add
mov
fistpll
nop
push
mov
leave
nop
jmp
jle
faddl
add
add
add
add
add
iret
add
sub
add
sub
add
add
jnp
repz
repnz
nop
nop
jae
add
loopne
push
add
add
xchg
mov
push
clc
repnz
nop
nop
jae
out
add
or
add
add
fistpl
push
mov
xchg
ret
add
aas
add
and
add
add
gs
clc
repnz
nop
nop
jae
data16
push
jecxz
xor
xchg
rolb
add
mov
rclb
int
inc
add
add
mov
add
add
jo
jb
std
sub
clc
repnz
nop
nop
jae
mov
mov
add
xchg
stos
mov
clc
repnz
nop
nop
jae
cmp
add
add
and
add
add
aas
jmp
incl
sti
or
lods
sar
add
lods
incl
out
in
push
popf
test
nop
push
mov
leave
nop
jmp
iret
or
decb
int
sar
repnz
nop
nop
jae
pop
sub
add
add
add
add
lea
clc
repnz
nop
nop
jae
iret
add
pop
add
movzwl
clc
repnz
nop
nop
jae
add
add
inc
loopne
push
xchg
lods
mov
inc
clc
repnz
nop
nop
jae
loopne
add
add
add
add
clc
repnz
nop
nop
jae
add
add
or
xor
daa
cld
ljmp
add
add
add
jle
add
xchg
add
jno
popa
clc
repnz
nop
nop
jae
add
xchg
add
mov
movzwl
clc
repnz
nop
nop
jae
pop
add
add
add
insb
add
sub
dec
add
xor
cld
nop
nop
jae
add
incl
add
mov
push
mov
xchg
ret
or
filds
xchg
add
add
mov
xchg
ret
lods
add
inc
mov
push
add
pop
fwait
add
nop
push
mov
leave
nop
jmp
or
add
add
clc
repnz
nop
nop
jae
add
push
add
and
add
clc
repnz
nop
nop
jae
cmp
sti
jge
add
and
add
nop
push
mov
leave
nop
jmp
add
add
add
leave
xchg
xchg
ret
add
push
add
filds
aas
cmpb
adc
cld
nop
nop
jae
xchg
and
mov
pop
xchg
mov
add
clc
repnz
nop
nop
jae
mov
add
addb
scas
add
cltd
pop
push
mov
xchg
ret
mov
add
rorb
dec
cmp
mov
xchg
ret
and
add
add
lods
fimuls
push
fistpl
nop
push
mov
leave
nop
jmp
push
add
data16
jb
lods
jle
mov
nop
push
mov
leave
nop
jmp
xchg
incl
dec
orb
xor
nop
push
mov
leave
nop
jmp
add
out
aas
int3
fadds
push
mov
xchg
ret
add
jecxz
add
roll
add
aas
pop
inc
add
jecxz
add
lods
push
inc
push
add
pushl
dec
nop
push
mov
leave
nop
jmp
add
add
cmp
add
add
call
inc
add
pop
int3
add
loopne
cmp
test
add
repnz
nop
nop
jae
jno
and
add
add
add
push
push
mov
xchg
ret
push
jecxz
add
add
add
enter
or
add
clc
repnz
nop
nop
jae
or
add
fildll
jns
push
mov
xchg
ret
add
rolb
mov
push
xchg
add
add
add
nop
push
mov
leave
nop
jmp
inc
movb
add
add
push
add
clc
repnz
nop
nop
jae
cmpsb
add
add
add
mov
add
repnz
nop
nop
jae
add
add
pop
add
lods
aam
pop
push
mov
xchg
ret
mov
add
mov
cltd
test
nop
push
mov
leave
nop
jmp
subb
sti
sbb
mov
xchg
add
clc
repnz
nop
nop
jae
add
hlt
add
xchg
add
rorl
jl
call
nop
jmp
movb
incl
push
add
mov
clc
repnz
nop
nop
jae
add
add
xchg
mov
sub
add
nop
push
mov
leave
nop
jmp
add
jge
add
daa
pop
add
clc
repnz
nop
nop
jae
jno
jb
jno
jecxz
push
clc
repnz
nop
nop
jae
inc
ljmp
add
mov
and
xchg
nop
jmp
lods
push
add
add
fildll
cld
nop
nop
jae
in
and
incl
fbld
pop
push
xor
test
add
in
leave
nop
jmp
xchg
mov
inc
scas
add
push
push
mov
xchg
ret
add
fcoml
add
xchg
jb
add
nop
push
mov
leave
nop
jmp
add
incl
aas
iret
push
add
clc
repnz
nop
nop
jae
add
add
andb
pop
cmp
push
mov
xchg
ret
scas
xchg
or
or
and
mov
leave
nop
jmp
inc
add
sti
add
mov
add
sbb
push
mov
push
mov
xchg
ret
add
or
add
add
push
mov
xchg
ret
add
add
add
cmpsb
push
add
push
mov
add
jge
clc
repnz
nop
nop
jae
inc
lods
movb
add
xchg
mov
add
in
and
clc
repnz
nop
nop
jae
ljmp
add
jo
ja
ljmp
add
mov
add
inc
lods
push
add
pop
adc
sub
add
add
add
or
mov
xchg
ret
add
cmpsb
add
add
jge
add
add
clc
repnz
nop
nop
jae
add
fadds
add
fwait
clc
repnz
nop
nop
jae
inc
mov
add
add
clc
repnz
nop
nop
jae
hlt
sarl
add
push
in
int3
lahf
add
clc
repnz
nop
nop
jae
push
add
add
ficoms
add
out
nop
push
mov
leave
nop
jmp
add
fadds
out
add
repnz
nop
nop
jae
add
sub
add
add
dec
add
sbb
add
clc
repnz
nop
nop
jae
inc
add
mov
cmp
nop
nop
jae
add
andb
add
add
add
inc
push
mov
xchg
ret
faddl
add
iret
shll
jp
add
dec
add
add
cmpsb
add
add
mov
xchg
ret
add
add
xchg
add
jp
adc
add
clc
repnz
nop
nop
jae
int3
add
push
int3
mov
xchg
fwait
push
mov
xchg
ret
push
mov
out
add
add
jge
add
push
mov
xchg
ret
add
add
push
mov
mov
clc
repnz
nop
nop
jae
add
or
add
out
add
repnz
nop
nop
jae
xchg
add
add
add
add
in
push
push
mov
xchg
ret
sti
push
add
dec
scas
add
data16
iret
push
mov
clc
repnz
nop
nop
jae
add
add
decl
clc
repnz
nop
nop
jae
and
xchg
hlt
push
add
add
cld
nop
nop
jae
cmp
mov
push
add
add
rolb
nop
push
mov
leave
nop
jmp
pop
add
and
das
mov
clc
repnz
nop
nop
jae
push
jb
or
cmpb
xchg
pop
push
mov
xchg
ret
add
lods
mov
push
in
add
add
pop
arpl
movsl
clc
repnz
nop
nop
jae
add
jge
xchg
cmp
sub
nop
nop
jae
add
add
add
jb
int3
xor
mov
clc
repnz
nop
nop
jae
add
push
add
or
add
ds
push
add
sub
enter
in
leave
nop
jmp
add
jno
loopne
pop
add
iret
fldcw
add
filds
inc
filds
inc
add
pop
nop
push
mov
leave
nop
jmp
and
inc
jecxz
xchg
push
lods
jle
pop
add
add
mov
nop
push
mov
leave
nop
jmp
add
add
lods
inc
int3
out
push
clc
repnz
nop
nop
jae
cmpsb
and
lods
faddl
add
inc
add
mov
outsb
inc
add
hlt
cmpsb
cmp
xchg
add
cmp
repz
repnz
nop
nop
jae
jb
add
push
add
xchg
xlat
call
clc
repnz
nop
nop
jae
cmp
push
add
pop
nop
push
mov
leave
nop
jmp
filds
xchg
add
push
int3
add
cld
nop
nop
jae
in
add
add
add
cmp
mov
fdivs
inc
sub
repnz
nop
nop
jae
add
mov
inc
add
add
mov
and
add
pop
push
add
loopne
cmp
scas
loopne
add
add
add
add
xchg
push
clc
repnz
nop
nop
jae
and
out
out
add
add
push
push
mov
xchg
ret
xchg
mov
inc
cmp
fcoml
pop
clc
repnz
nop
nop
jae
incb
mov
pop
push
cmpsb
fmull
mov
xchg
ret
add
add
addb
add
add
add
clc
repnz
nop
nop
jae
add
push
inc
add
add
add
inc
je
clc
repnz
nop
nop
jae
movb
add
add
pop
pop
push
mov
xchg
ret
push
push
add
jno
fucomip
mov
popa
push
mov
xchg
ret
add
fmuls
add
add
add
hlt
mov
jmp
cmp
inc
add
add
pop
dec
jge
mov
icebp
jne
clc
repnz
nop
nop
jae
inc
add
rcrl
cld
nop
nop
jae
jb
add
add
mov
repnz
nop
nop
jae
cmp
jno
iret
add
add
add
add
clc
repnz
nop
nop
jae
mov
push
loopne
fmuls
push
sub
clc
repnz
nop
nop
jae
dec
add
iret
out
xchg
add
add
nop
push
mov
leave
nop
jmp
push
add
add
mov
push
mov
xchg
ret
add
add
push
dec
mov
dec
add
or
jge
pop
xchg
filds
push
rolb
pop
push
in
inc
add
lea
nop
nop
jae
add
adcb
sub
rolb
cld
nop
nop
jae
sub
add
add
filds
push
clc
repnz
nop
nop
jae
add
add
add
sti
sub
add
ret
clc
repnz
nop
nop
jae
add
mov
add
jno
lret
xor
push
mov
leave
nop
jmp
inc
pop
fdivr
cmp
add
add
mov
add
add
repnz
nop
nop
jae
decl
add
add
cmp
cmp
ret
add
jecxz
add
add
inc
and
push
fcompl
scas
add
clc
repnz
nop
nop
jae
mov
push
cmpsb
add
add
add
pop
add
repnz
nop
nop
jae
inc
add
or
add
pop
add
inc
add
clc
repnz
nop
nop
jae
xchg
fcomp
add
into
add
mov
leave
nop
jmp
pop
lods
scas
hlt
add
add
cltd
mov
nop
push
mov
leave
nop
jmp
add
add
add
cmp
add
clc
repnz
nop
nop
jae
add
add
add
add
stos
add
push
mov
xchg
ret
add
add
add
int3
inc
add
mov
cld
nop
nop
jae
add
dec
sub
add
add
add
push
mov
xchg
ret
add
hlt
add
add
iret
rolb
les
in
leave
nop
jmp
roll
add
add
jge
in
fcoms
add
add
nop
nop
jae
fadds
or
out
push
cmp
jb
mov
fwait
nop
push
mov
leave
nop
jmp
add
cmpsb
inc
or
jno
add
jmp
cmp
ret
push
add
push
decb
lods
inc
cmp
nop
push
mov
leave
nop
jmp
add
pop
add
add
mov
addl
mov
leave
nop
jmp
add
mov
mov
movsb
inc
push
push
mov
xchg
ret
add
cmpsb
pop
loopne
or
add
jle
sbb
nop
jae
cmp
jge
add
fdivrl
add
jl
roll
cld
nop
nop
jae
roll
scas
jge
add
add
nop
push
mov
leave
nop
jmp
filds
add
add
jne
nop
push
mov
leave
nop
jmp
jb
push
add
sub
add
pop
clc
repnz
nop
nop
jae
xor
fcoms
add
push
mov
xchg
ret
add
add
jge
enter
dec
add
add
add
clc
repnz
nop
nop
jae
out
add
sti
add
add
add
popf
mov
clc
repnz
nop
nop
jae
pop
mov
add
add
xor
mov
nop
nop
jae
add
lods
mov
sbb
pop
sub
repnz
nop
nop
jae
mov
push
incb
iret
add
clc
repnz
nop
nop
jae
mov
push
add
fistps
xchg
sub
mov
leave
nop
jmp
mov
add
pop
add
fwait
push
mov
xchg
ret
in
mov
mov
inc
add
jb
inc
fiadds
neg
sbb
clc
repnz
nop
nop
jae
push
hlt
shl
lods
add
jb
add
je
mov
repnz
nop
nop
jae
loopne
roll
add
mov
add
mov
leave
nop
jmp
add
mov
add
lods
incl
add
daa
mov
clc
repnz
nop
nop
jae
sti
add
xchg
add
add
pop
add
add
cld
nop
nop
jae
ror
add
add
add
es
lea
clc
repnz
nop
nop
jae
add
add
add
xor
mov
xchg
ret
faddl
jb
and
xchg
loopne
mov
add
nop
nop
jae
add
add
jno
data16
repnz
nop
nop
jae
jno
xchg
add
mov
pop
add
add
gs
repnz
nop
nop
jae
add
in
add
add
nop
push
mov
leave
nop
jmp
xchg
add
add
mov
pop
add
in
leave
nop
jmp
inc
mov
add
xlat
subl
push
mov
xchg
ret
iret
jle
dec
add
or
jge
lea
repnz
nop
nop
jae
add
add
mov
scas
add
add
mov
push
mov
leave
nop
jmp
add
add
add
add
add
and
pop
add
add
in
leave
nop
jmp
lods
add
add
and
sbb
add
nop
push
mov
leave
nop
jmp
lods
add
jecxz
push
push
mov
xchg
ret
roll
lods
lods
add
add
add
dec
add
add
add
add
mov
add
dec
xor
sub
test
in
leave
nop
jmp
add
add
jle
fadds
push
push
jecxz
jnp
push
sub
add
repnz
nop
nop
jae
add
and
add
inc
add
test
sbb
jecxz
mov
mov
leave
nop
jmp
add
add
jno
add
repnz
nop
nop
jae
inc
add
add
add
sbb
clc
repnz
nop
nop
jae
mov
add
push
push
in
xchg
cmp
mov
xchg
ret
sub
add
mov
inc
adc
add
mov
xchg
ret
add
aas
push
data16
int3
lods
add
jg
call
inc
add
cmp
inc
add
filds
add
fcomip
test
popa
inc
add
add
add
add
add
mov
movb
cld
nop
nop
jae
add
jb
push
inc
add
iret
scas
add
repnz
nop
nop
jae
data16
sbbb
add
add
mov
xchg
ret
lods
lods
add
add
aas
push
inc
add
xbegin
jae
add
lods
fdivrl
add
loope
push
mov
leave
nop
jmp
add
out
xchg
incl
push
add
push
mov
xchg
ret
lods
add
push
or
add
add
insb
add
add
cld
nop
nop
jae
add
add
and
inc
cmp
push
imul
nop
push
mov
leave
nop
jmp
mov
fists
add
in
clc
repnz
nop
nop
jae
add
add
add
mov
push
sub
insl
jns
add
add
add
lea
clc
repnz
nop
nop
jae
out
add
add
push
push
mov
xchg
ret
sub
in
movb
push
push
fisttps
clc
repnz
nop
nop
jae
add
out
add
add
cli
aad
dec
imul
nop
jae
add
add
dec
add
mov
inc
add
hlt
add
add
xor
repnz
nop
nop
jae
add
cmp
add
sbbb
jg
nop
push
mov
leave
nop
jmp
inc
add
pop
add
push
push
xchg
add
add
add
repnz
nop
nop
jae
push
sti
or
in
call
nop
push
mov
leave
nop
jmp
aas
add
add
and
mov
add
clc
repnz
nop
nop
jae
add
add
add
mov
nop
nop
jae
add
sti
add
lods
add
in
je
clc
repnz
nop
nop
jae
add
xchg
add
incl
push
fwait
push
clc
repnz
nop
nop
jae
jno
sti
inc
add
add
add
rorl
in
leave
nop
jmp
add
loopne
add
sti
add
push
add
repnz
nop
nop
jae
add
add
inc
add
dec
nop
push
mov
leave
nop
jmp
add
pop
lods
mov
push
mov
xchg
ret
loopne
add
add
add
mov
add
dec
sub
jo
add
push
xchg
add
xor
rolb
cwtl
cld
cld
mov
push
mov
xchg
ret
add
add
add
dec
add
push
clc
repnz
nop
nop
jae
add
mov
add
cmpsb
in
xchg
add
jle
push
clc
repnz
nop
nop
jae
add
add
add
add
rcrl
add
mov
clc
repnz
nop
nop
jae
fmuls
add
clc
repnz
nop
nop
jae
in
pop
jb
add
add
add
mov
xchg
ret
add
add
add
out
sarb
inc
xchg
mov
sbb
clc
repnz
nop
nop
jae
add
add
add
and
add
repnz
add
lds
inc
and
push
mov
leave
nop
jmp
add
add
push
jecxz
inc
push
shrb
mov
clc
repnz
nop
nop
jae
push
mov
push
add
add
sti
or
add
repnz
nop
nop
jae
add
push
mov
sar
repnz
nop
nop
jae
jecxz
add
inc
jb
jne
push
mov
xchg
ret
cmp
add
add
sub
sub
repnz
nop
nop
jae
add
out
cmpsb
roll
push
dec
mov
repnz
nop
nop
jae
add
jb
incl
jno
add
stos
jb
nop
push
mov
leave
nop
jmp
inc
mov
and
test
mov
xchg
ret
cmp
dec
add
add
add
xor
push
ja
clc
repnz
nop
nop
jae
add
pop
movzwl
clc
repnz
nop
nop
jae
lods
add
add
push
add
das
jne
clc
repnz
nop
nop
jae
add
add
sbb
clc
repnz
nop
nop
jae
add
push
mov
lods
inc
roll
fildl
mov
inc
add
push
int3
add
xchg
cmp
test
clc
repnz
nop
nop
jae
add
jb
xchg
add
in
movsb
push
mov
xchg
ret
add
add
add
inc
xchg
mov
push
add
and
mov
add
clc
repnz
nop
nop
jae
add
add
jno
cmp
mov
clc
repnz
nop
nop
jae
add
add
jb
add
add
add
add
jge
add
add
add
add
sub
xchg
ja
rorl
mov
xchg
ret
add
or
jecxz
add
add
repnz
nop
nop
jae
xchg
inc
add
add
add
mov
nop
nop
jae
fbld
add
add
add
add
mov
nop
nop
jae
push
add
xchg
add
xchg
add
add
cmp
xchg
je
clc
repnz
nop
nop
jae
iret
add
xor
ffree
iret
or
inc
add
add
add
and
jno
scas
enter
nop
nop
jae
push
add
add
inc
add
add
add
add
inc
clc
repnz
nop
nop
jae
andb
xor
sarb
add
test
mov
clc
repnz
nop
nop
jae
faddl
inc
push
movb
add
add
mov
mov
leave
nop
jmp
add
add
pop
add
adc
nop
push
mov
leave
nop
jmp
add
and
add
movsb
clc
repnz
nop
nop
jae
addb
add
add
into
pop
add
outsb
add
jns
clc
repnz
nop
nop
jae
or
add
rorb
and
repnz
nop
nop
jae
inc
add
lcall
jp
fld
add
xchg
push
mov
aas
faddl
add
mov
lods
xchg
jle
mov
dec
or
mov
repnz
nop
nop
jae
add
add
add
jecxz
and
add
sbb
negl
nop
jae
xchg
add
add
push
cmp
add
nop
adc
push
add
nop
nop
jae
jecxz
pop
roll
filds
add
outsl
arpl
add
nop
jmp
lods
inc
add
sub
push
add
clc
repnz
nop
nop
jae
or
inc
mov
add
jg
clc
repnz
nop
nop
jae
faddl
fcompl
aas
add
add
push
loopne
loopne
push
push
mov
xchg
ret
mov
add
add
int3
add
mov
push
add
push
add
clc
repnz
nop
nop
jae
mov
movb
jle
add
clc
repnz
nop
nop
jae
add
push
add
mov
leave
nop
push
mov
leave
nop
jmp
ljmp
jecxz
push
add
call
clc
repnz
nop
nop
jae
lods
add
add
add
dec
dec
add
clc
repnz
nop
nop
jae
sub
push
fadds
cmpsb
add
mov
cli
andnps
mov
jl
inc
xchg
in
push
pop
out
das
add
loope
add
icebp
mov
clc
repnz
nop
nop
jae
dec
add
lods
add
pop
sub
lahf
push
clc
repnz
nop
nop
jae
mov
add
aas
hlt
add
out
clc
repnz
nop
nop
jae
add
xor
cmpsb
mov
dec
add
nop
push
mov
leave
nop
jmp
add
dec
mov
add
add
add
and
in
leave
nop
jmp
jle
add
add
add
add
clc
repnz
nop
nop
jae
hlt
add
add
out
or
orb
psubsw
jmp
add
add
out
inc
loopne
dec
in
inc
add
dec
incl
and
mov
xchg
ret
int3
add
add
add
lods
push
fs
push
nop
push
mov
leave
nop
jmp
fcompl
add
add
add
cld
nop
nop
jae
cmpsb
add
mov
add
jb
add
add
push
push
mov
xchg
ret
add
add
add
xchg
jle
add
add
jne
clc
repnz
nop
nop
jae
subb
add
mov
clc
repnz
nop
nop
jae
add
add
mov
add
add
dec
add
test
lcall
mov
leave
nop
jmp
add
add
add
add
jb
add
push
ret
add
mov
push
mov
xchg
ret
add
or
add
add
add
cmpl
cld
nop
nop
jae
and
add
cmp
add
bound
or
rcrb
add
add
clc
repnz
nop
nop
jae
add
add
jecxz
push
mov
xchg
ret
fsubrs
add
addb
add
add
dec
add
insb
add
in
leave
nop
jmp
aas
add
add
add
add
add
clc
repnz
nop
nop
jae
mov
add
add
add
pop
inc
add
add
add
xchg
add
add
jno
xor
addr16
nop
push
mov
leave
nop
jmp
add
add
inc
add
rep
clc
repnz
nop
nop
jae
lods
scas
xor
jecxz
add
pusha
clc
repnz
nop
nop
jae
add
and
add
int3
add
dec
add
clc
repnz
nop
nop
jae
incl
add
add
fisttps
in
in
push
push
mov
xchg
ret
push
or
push
mov
add
jg
clc
repnz
nop
nop
jae
add
incb
roll
add
add
int3
pop
push
nop
push
mov
leave
nop
jmp
add
add
lods
incl
mov
repnz
nop
nop
jae
push
add
xchg
xchg
and
add
sbb
clc
repnz
nop
nop
jae
add
add
add
jge
rolb
inc
add
adc
adc
fstps
nop
jae
aas
add
addb
fmull
inc
push
push
mov
xchg
ret
add
add
in
add
jge
jge
add
cmp
push
mov
xchg
ret
xchg
pop
lods
incb
add
add
add
and
add
add
add
add
jle
cmp
mov
cld
nop
nop
jae
add
add
fcoms
clc
repnz
nop
nop
jae
add
jle
add
nop
nop
jae
out
add
push
faddl
add
xchg
mov
test
repnz
nop
nop
jae
addb
add
loopne
daa
jmp
xchg
xchg
push
aas
add
addb
add
add
stos
add
clc
repnz
nop
nop
jae
movb
shlb
add
adc
repz
mov
xchg
ret
sti
push
rorb
jb
xchg
mov
push
mov
xchg
ret
in
add
int3
add
add
in
shr
clc
repnz
nop
nop
jae
mov
add
fcoml
mov
pop
jl
sub
out
xor
sub
repnz
nop
nop
jae
faddl
add
add
dec
add
jb
add
fld
jmp
nop
nop
jae
cmp
xchg
add
add
add
jge
sbb
and
dec
je
clc
repnz
nop
nop
jae
add
add
add
out
xor
push
mov
xchg
ret
add
sar
fadds
add
fld1
push
mov
xchg
ret
add
fadds
mov
dec
loopne
inc
orb
cli
cmp
nop
nop
jae
or
incl
lods
add
sub
pop
xor
fld1
clc
repnz
nop
nop
jae
inc
push
push
push
and
add
add
push
mov
leave
nop
jmp
add
jecxz
push
inc
aad
add
nop
jmp
mov
fisttps
stc
xor
clc
repnz
nop
nop
jae
int3
add
mov
mov
clc
repnz
nop
nop
jae
push
add
inc
add
mov
repnz
nop
nop
jae
out
pop
mov
add
int3
add
imul
xor
clc
repnz
nop
nop
jae
add
push
in
dec
xor
xor
in
add
subl
push
mov
xchg
ret
cmp
add
add
out
add
pop
push
mov
xchg
ret
add
fadds
cmp
mov
mov
sbb
repnz
nop
nop
jae
add
rolb
add
test
test
clc
repnz
nop
nop
jae
push
mov
mov
shrl
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
addb
xchg
push
addb
or
movswl
clc
repnz
nop
nop
jae
inc
fbld
add
jno
dec
and
sbb
inc
add
incb
add
or
out
add
fisttpll
test
xchg
ret
iret
fadds
or
or
add
out
pop
clc
repnz
nop
nop
jae
add
sti
out
iret
add
dec
add
repnz
nop
nop
jae
inc
lods
filds
push
xchg
add
jno
xor
pop
inc
add
dec
cmp
lods
hlt
inc
fisttps
add
push
mov
xchg
ret
lods
iret
add
add
add
add
xchg
test
pop
pop
inc
add
pop
add
mov
cmp
xorps
xchg
ret
xchg
lods
in
xor
fists
dec
push
mov
xchg
ret
add
push
add
push
push
lods
add
int3
or
ret
clc
repnz
nop
nop
jae
add
iret
add
add
pop
add
sub
push
mov
xchg
ret
add
add
add
add
in
add
scas
pop
push
mov
xchg
ret
add
loopne
mov
aas
xchg
add
xor
push
or
add
faddl
fdivs
add
and
rorb
push
jb
cmp
movsb
and
sbb
sar
repnz
nop
nop
jae
in
add
add
out
mov
clc
repnz
nop
nop
jae
int3
pushw
mov
add
hlt
push
add
test
add
add
repnz
nop
nop
jae
xchg
mov
add
adc
rclb
jle
add
scas
incb
mov
add
pop
jmp
nop
push
mov
leave
nop
jmp
add
add
add
sub
repnz
nop
nop
jae
inc
loopne
jge
faddl
inc
and
leave
nop
push
mov
leave
nop
jmp
xchg
jle
add
xchg
rolb
xchg
add
repnz
nop
nop
jae
lods
out
mov
push
add
aad
add
decb
and
add
inc
add
add
pop
nop
push
mov
leave
nop
jmp
add
add
add
add
jne
nop
push
mov
leave
nop
jmp
inc
add
filds
sti
add
add
aaa
add
clc
repnz
nop
nop
jae
xchg
add
add
push
out
xchg
push
mov
xchg
ret
pop
add
mov
and
mov
jge
inc
and
clc
repnz
nop
nop
jae
jge
add
cltd
not
clc
repnz
nop
nop
jae
add
jmp
add
add
push
cmpsb
add
fdivr
clc
repnz
nop
nop
jae
hlt
fadds
push
add
roll
repnz
cmp
push
mov
leave
nop
jmp
out
add
and
add
add
clc
repnz
nop
nop
jae
mov
lods
mov
out
mov
add
adc
mov
xchg
ret
add
add
jge
add
lods
cmp
add
dec
movzwl
clc
repnz
nop
nop
jae
add
out
jge
in
add
iret
cmpw
nop
push
mov
leave
nop
jmp
push
jle
mov
add
add
dec
nop
push
mov
leave
nop
jmp
add
xchg
or
mov
in
add
cld
imul
addr16
add
jno
lods
add
push
add
push
or
test
add
clc
repnz
nop
nop
jae
and
add
add
clc
repnz
nop
nop
jae
add
add
add
add
adc
sub
and
add
hlt
roll
push
xchg
add
sbb
cld
nop
nop
jae
add
mov
scas
and
add
add
add
cmp
cmc
add
push
mov
xchg
ret
add
lods
xchg
push
add
mov
pop
incl
push
push
clc
repnz
nop
nop
jae
add
add
add
data16
nop
push
add
js
push
mov
leave
nop
jmp
add
add
add
pop
mov
clc
repnz
nop
nop
jae
add
fbstp
add
loop
add
mov
xchg
ret
add
add
add
add
mov
sbb
repnz
nop
nop
jae
add
pop
hlt
add
add
cmp
add
pop
push
mov
xchg
ret
pop
add
push
addb
sti
add
nop
push
mov
leave
nop
jmp
out
add
xchg
add
add
mov
add
loope
sar
clc
repnz
nop
nop
jae
iret
hlt
add
push
aas
add
add
clc
repnz
nop
nop
jae
add
inc
add
dec
jle
push
add
cmp
pop
inc
add
add
add
add
cmp
add
add
add
iret
xor
clc
repnz
nop
nop
jae
hlt
data16
lods
add
push
push
mov
clc
repnz
nop
nop
jae
add
sub
dec
add
xchg
nop
push
mov
leave
nop
jmp
add
add
add
add
sahf
add
cld
xchg
add
jb
int3
add
andb
add
mov
clc
repnz
nop
nop
jae
add
or
push
clc
repnz
nop
nop
jae
hlt
add
shrb
in
leave
nop
jmp
pop
out
incl
add
sub
add
or
clc
repnz
nop
nop
jae
data16
xchg
add
push
add
add
nop
nop
jae
fists
jecxz
inc
add
mov
push
mov
xchg
ret
push
jge
filds
out
aas
add
push
add
or
push
nop
push
mov
leave
nop
jmp
jmp
push
add
in
cmpsb
pop
xor
repnz
nop
nop
jae
add
sti
cmp
add
push
add
and
nop
jmp
add
push
decb
jge
push
add
mov
xchg
ret
sub
lods
jb
xchg
add
add
hlt
add
cli
imul
mov
leave
nop
jmp
add
or
add
cmp
push
mov
leave
nop
jmp
lcall
add
add
add
add
cmp
mov
xchg
ret
add
cmp
push
push
mov
xchg
ret
add
add
or
mov
mov
clc
repnz
nop
nop
jae
out
mov
add
or
mov
repnz
nop
nop
jae
lods
pop
fadds
aas
add
add
add
clc
repnz
nop
nop
jae
out
push
add
add
mov
xchg
ret
incb
add
cmp
shlb
push
add
clc
repnz
nop
nop
jae
pop
add
mov
add
add
add
call
clc
repnz
nop
nop
jae
add
inc
cmpsb
add
mov
dec
cmp
repnz
nop
nop
jae
xchg
push
push
faddl
aas
incl
mov
mov
clc
repnz
nop
nop
jae
add
aas
data16
pop
clc
repnz
nop
nop
jae
add
push
iret
push
incb
add
in
pause
push
mov
leave
nop
jmp
filds
push
add
jb
loopne
filds
dec
cmp
repnz
nop
nop
jae
add
aas
add
push
jne
clc
repnz
nop
nop
jae
add
push
push
pop
or
repnz
nop
nop
jae
add
pop
add
add
add
mov
clc
repnz
nop
nop
jae
push
xchg
movb
inc
filds
adc
add
clc
repnz
nop
nop
jae
add
add
hlt
mov
add
add
pop
ret
clc
repnz
nop
nop
jae
add
jge
loopne
add
add
lods
mov
div
rclb
nop
jmp
push
incl
add
push
add
push
jb
fistpl
push
mov
xchg
ret
decl
add
push
push
mov
xchg
ret
push
add
int3
sti
lods
xchg
add
add
cmp
mov
push
mov
leave
nop
jmp
add
out
add
roll
adc
repnz
nop
nop
jae
inc
and
mov
sub
add
iret
or
mov
xchg
ret
add
add
and
add
add
mov
add
nop
push
mov
leave
nop
jmp
add
pop
fists
std
clc
repnz
nop
nop
jae
jecxz
add
add
clc
repnz
nop
nop
jae
jb
add
add
push
clc
repnz
nop
nop
jae
push
add
filds
inc
jecxz
andb
add
repnz
nop
nop
jae
add
scas
add
add
clc
call
nop
jmp
add
mov
add
mov
adc
repnz
nop
nop
jae
push
add
lods
rcrl
repnz
nop
nop
jae
int3
add
add
add
lods
inc
add
add
call
out
inc
add
incb
mov
jb
sti
cmp
add
repnz
nop
nop
jae
lods
add
add
pop
add
sbb
nop
jae
out
add
iret
inc
inc
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
fmull
pop
inc
add
cmp
jge
add
sub
cli
movsb
popl
nop
nop
jae
rolb
add
sub
add
add
add
jne
clc
repnz
nop
nop
jae
mov
dec
int3
pop
push
clc
repnz
nop
nop
jae
add
and
inc
add
add
add
add
nop
push
mov
leave
nop
jmp
add
inc
sti
inc
scas
add
std
mov
clc
repnz
nop
nop
jae
hlt
add
add
inc
add
nop
nop
jae
xchg
add
in
add
cmpsb
or
sub
in
leave
nop
jmp
addb
add
add
lods
push
add
add
add
push
mov
xchg
ret
mov
mov
add
sub
clc
repnz
nop
nop
jae
jno
add
push
int3
lods
xchg
inc
add
call
clc
repnz
nop
nop
jae
add
scas
xchg
in
add
push
jno
dec
cmp
repnz
nop
nop
jae
add
or
loopne
mov
nop
cltd
jmp
add
add
mov
scas
add
mov
push
lahf
mov
clc
repnz
nop
nop
jae
sti
sbbb
faddl
and
add
jbe
push
mov
xchg
ret
mov
pop
add
or
add
add
repnz
nop
nop
jae
add
orb
add
add
call
add
push
mov
xchg
ret
out
add
mov
jecxz
jno
pushf
mov
aam
add
scas
je
cltd
lea
clc
repnz
nop
nop
jae
sti
add
push
mov
imul
nop
push
mov
leave
nop
jmp
lods
sub
add
add
push
test
repnz
nop
nop
jae
add
push
add
shr
loopne
in
cwtl
pop
push
clc
repnz
nop
nop
jae
add
cmpsb
add
add
addr16
nop
push
mov
leave
nop
jmp
incl
pop
addb
jge
cld
clc
repnz
nop
nop
jae
add
lods
lods
lods
ffreep
add
add
cmpsl
cmp
nop
push
mov
leave
nop
jmp
xchg
loopne
sti
decl
icebp
clc
repnz
nop
nop
jae
mov
push
xchg
int3
add
add
jmp
mov
xchg
ret
push
add
out
add
out
xchg
add
or
xchg
xchg
nop
push
mov
leave
nop
jmp
incl
jmp
push
add
add
jne
popa
nop
push
mov
leave
nop
jmp
mov
add
jle
add
inc
pop
dec
add
push
clc
repnz
nop
nop
jae
add
push
call
adc
movsb
call
inc
push
mov
xchg
ret
int3
add
filds
add
int3
fmul
add
jnp
pop
clc
repnz
nop
nop
jae
push
add
lods
add
add
add
mov
mov
xchg
ret
jno
add
mov
loopne
sub
out
ljmp
mov
nop
push
mov
leave
nop
jmp
add
pop
add
mov
add
loopne
add
call
clc
repnz
nop
nop
jae
add
add
pop
push
nop
push
mov
leave
nop
jmp
iret
add
in
sub
xor
xchg
add
jae
repnz
nop
nop
jae
push
cmp
cmp
ljmp
clc
repnz
nop
nop
jae
jecxz
iret
mov
inc
add
outsl
loopne
mov
xchg
ret
add
add
fdivrs
inc
mov
clc
repnz
nop
nop
jae
add
iret
mov
pop
push
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
mov
inc
add
add
add
fildll
mov
leave
nop
jmp
out
xchg
add
add
filds
pop
add
clc
repnz
nop
nop
jae
roll
add
add
clc
repnz
nop
nop
jae
fadds
filds
add
add
fdivs
js
nop
push
mov
leave
nop
jmp
sub
xchg
aas
decb
mov
cld
nop
nop
jae
and
push
lods
add
mov
add
repnz
nop
nop
jae
incb
inc
push
lods
push
fbld
add
add
add
clc
repnz
nop
nop
jae
cmp
or
add
mov
mov
clc
repnz
nop
nop
jae
add
lods
jle
pop
push
mov
xchg
ret
add
or
lods
add
hlt
add
add
clc
repnz
nop
nop
jae
add
add
fadd
add
push
nop
push
mov
leave
nop
jmp
add
add
in
pop
int3
add
pop
push
push
mov
xchg
ret
mov
add
sti
add
repnz
nop
nop
jae
inc
incl
add
lods
add
jle
and
stos
mov
push
mov
xchg
ret
xchg
add
dec
add
inc
push
add
mov
leave
nop
jmp
lods
xchg
add
xchg
cmpsb
jno
cmpsb
add
xchg
nop
push
mov
leave
nop
jmp
jno
add
add
das
pushl
clc
repnz
nop
nop
jae
add
add
rcrl
add
push
adc
sar
cld
nop
nop
jae
rcll
add
add
mov
nop
push
mov
leave
nop
jmp
filds
add
add
add
fadds
jmp
push
mov
leave
nop
jmp
iret
fadd
push
add
fildll
nop
nop
jae
in
xchg
or
add
add
add
fwait
clc
repnz
nop
nop
jae
jmp
inc
add
addb
popa
insl
gs
clc
repnz
nop
nop
jae
cmp
add
add
lods
cmp
cld
nop
nop
jae
inc
xor
mov
add
lock
pushl
clc
repnz
nop
nop
jae
cmpsb
add
add
add
mov
push
add
jg
add
lods
add
add
pop
push
sahf
test
lea
xchg
ret
mov
jge
loopne
and
out
add
psubb
cld
nop
nop
jae
add
add
add
cmp
nop
push
mov
leave
nop
jmp
inc
jecxz
add
add
sub
clc
repnz
nop
nop
jae
add
add
add
and
pop
mov
clc
repnz
nop
nop
jae
loopne
pop
jle
shl
add
add
push
clc
repnz
nop
nop
jae
mov
add
cmp
pop
xchg
add
fsubr
mov
clc
repnz
nop
nop
jae
iret
mov
jb
lods
mov
add
inc
mov
clc
repnz
nop
nop
jae
addb
mov
add
add
clc
repnz
nop
nop
jae
inc
xchg
add
out
add
data16
rorl
repnz
nop
nop
jae
data16
add
add
fadds
add
dec
xor
clc
repnz
nop
nop
jae
add
add
add
add
iret
mov
clc
repnz
nop
nop
jae
aas
add
add
xchg
push
mov
mov
xchg
ret
fsubr
add
add
add
out
lock
push
mov
xchg
ret
add
cmp
pop
add
add
rolb
add
mov
aas
adc
nop
jmp
push
push
add
add
inc
mov
clc
repnz
nop
nop
jae
cmpsb
push
roll
int3
adc
xor
repnz
nop
nop
jae
out
add
fbld
add
push
clc
repnz
nop
nop
jae
add
and
add
and
clc
repnz
nop
nop
jae
in
add
add
inc
add
jae
sti
add
add
nop
push
mov
leave
nop
jmp
add
add
mov
leave
nop
jmp
xchg
add
add
add
push
add
xchg
xlat
add
clc
repnz
nop
nop
jae
push
out
add
mov
add
cmpl
jae
fadds
jge
out
add
jno
call
nop
jae
add
hlt
add
push
or
loope
sar
repnz
nop
nop
jae
jecxz
mov
out
add
scas
lret
je
clc
repnz
nop
nop
jae
push
add
push
lods
jecxz
pop
lea
clc
repnz
nop
nop
jae
mov
roll
ljmp
and
mov
leave
nop
jmp
jb
push
fisttps
add
in
nop
bound
and
pop
add
nop
push
mov
leave
nop
jmp
out
add
add
data16
je
arpl
cld
nop
nop
jae
add
add
testl
nop
push
mov
leave
nop
jmp
lods
scas
add
add
add
fbstp
add
add
addb
lods
add
cwtl
add
sti
clc
repnz
nop
nop
jae
xchg
add
xchg
rcr
push
add
movsl
jl
add
jle
fdivrl
pop
push
fcomip
add
mov
add
nop
nop
jae
add
mov
add
push
push
mov
xchg
ret
shrl
add
mov
xor
cld
nop
nop
jae
rcrl
xchg
add
jno
push
rcll
push
mov
leave
nop
jmp
add
add
sub
add
incl
xchg
or
clc
repnz
nop
nop
jae
scas
or
push
fdivl
sbb
repnz
nop
nop
jae
add
fildll
add
mov
xchg
ret
xchg
cmp
add
data16
jno
test
add
clc
repnz
nop
nop
jae
add
lods
mov
jmp
nop
nop
jae
data16
jb
in
add
lods
inc
fildl
or
cmp
ret
add
add
sub
add
fistpl
push
mov
xchg
ret
pop
int3
add
push
lods
and
andb
test
nop
push
mov
leave
nop
jmp
mov
inc
add
add
lods
push
push
push
mov
xchg
ret
fcoms
add
add
andb
mov
xchg
ret
add
roll
addb
add
icebp
push
push
mov
xchg
ret
add
xorb
add
and
xor
or
clc
repnz
nop
nop
jae
push
jecxz
sub
add
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
andl
push
mov
xchg
ret
add
add
add
mov
cld
nop
nop
jae
add
add
add
incb
add
loop
add
repnz
nop
nop
jae
iret
add
add
push
sub
add
mov
clc
repnz
nop
nop
jae
add
add
add
and
add
loopne
clc
repnz
nop
nop
jae
addb
iret
add
add
mov
inc
pop
clc
repnz
nop
nop
jae
mov
add
faddl
add
lods
push
mov
clc
repnz
nop
nop
jae
add
or
sub
clc
repnz
nop
nop
jae
jb
add
fucomip
add
mov
xor
pusha
add
clc
repnz
nop
nop
jae
and
add
mov
add
and
mov
leave
nop
jmp
or
add
pop
xchg
add
jecxz
or
nop
jmp
add
add
hlt
xor
nop
nop
jae
add
add
push
or
add
lods
fwait
push
mov
xchg
ret
jno
pushl
add
add
mov
mov
xchg
ret
push
inc
sti
sti
rcrb
add
add
add
in
pop
push
mov
xchg
ret
and
inc
sti
push
push
add
xchg
out
hlt
mov
push
add
mov
clc
repnz
nop
nop
jae
add
add
or
push
mov
xchg
ret
add
int3
cmp
mov
xorl
clc
repnz
nop
nop
jae
add
add
stos
dec
push
nop
push
mov
leave
nop
jmp
dec
add
add
pop
add
add
inc
add
mov
add
nop
push
mov
leave
nop
jmp
add
jno
lods
clc
repnz
nop
nop
jae
or
push
sti
xchg
add
add
add
xchg
clc
repnz
nop
nop
jae
push
push
and
mov
add
ljmp
nop
jae
add
add
jb
jmp
nop
nop
jae
xchg
mov
in
add
lods
jb
fistpl
push
mov
xchg
ret
mov
add
out
add
rclb
nop
jmp
addb
add
sub
incl
pop
cld
fildl
clc
push
mov
xchg
ret
dec
xor
add
add
aaa
xor
clc
repnz
nop
nop
jae
add
add
roll
add
insb
add
cmp
mov
leave
nop
jmp
add
push
add
addb
add
mul
clc
repnz
nop
nop
jae
andb
add
add
add
mov
clc
repnz
nop
nop
jae
add
roll
add
je
clc
repnz
nop
nop
jae
movb
add
sahf
js
fisttps
nop
nop
jae
add
incb
add
add
add
add
arpl
push
mov
leave
nop
jmp
add
add
push
mov
addb
add
clc
repnz
nop
nop
jae
inc
add
add
filds
jge
add
mov
clc
repnz
nop
nop
jae
aas
cmpsb
add
jecxz
lods
hlt
add
shlb
repnz
nop
nop
jae
mov
add
add
xchg
mov
repnz
nop
nop
jae
add
add
xchg
add
and
add
fcompl
in
leave
nop
jmp
dec
add
add
add
daa
call
clc
repnz
nop
nop
jae
addb
jb
jmp
push
call
clc
repnz
nop
nop
jae
add
inc
add
push
aas
push
aaa
call
clc
repnz
nop
nop
jae
jb
jge
rolb
sti
push
add
int3
gs
clc
repnz
nop
nop
jae
jecxz
add
out
add
aaa
add
clc
repnz
nop
nop
jae
hlt
add
inc
inc
push
inc
out
data16
leave
movzwl
clc
repnz
nop
nop
jae
add
add
add
filds
fisttpl
repnz
nop
nop
jae
dec
add
add
mov
lret
pushl
clc
repnz
nop
nop
jae
mov
add
push
cmp
clc
repnz
nop
nop
jae
mov
add
add
xchg
cmpsb
sti
add
cld
nop
nop
jae
inc
shll
jmp
inc
int3
add
mov
push
mov
xchg
ret
add
sub
iret
hlt
add
add
add
inc
jno
xor
push
mov
xchg
ret
add
fsubrs
sti
clc
repnz
nop
nop
jae
inc
add
add
addb
add
pop
clc
repnz
nop
nop
jae
data16
add
add
mov
in
add
scas
add
out
add
add
cld
add
inc
mov
add
add
add
mov
mov
mov
div
xlat
mov
add
and
xchg
popf
movsl
nop
adc
addr16
adc
add
inc
nop
inc
cli
mov
fildll
je
cmp
test
mov
mov
fwait
sbb
mov
cmc
hlt
js
or
jns
or
out
pop
bound
repnz
push
add
call
mov
cmp
add
test
inc
and
mov
out
add
jnp
pusha
add
xor
orb
js
pmaxub
lock
add
cmpsl
mov
incb
mov
add
shrl
popf
inc
fmull
xlat
and
pop
add
int
nop
into
int
xchg
add
pop
and
push
add
xor
mov
dec
jns
add
sbb
nop
loop
adc
lcall
xchg
sahf
dec
add
push
add
jns
add
add
add
add
sbb
pop
fprem
imul
out
daa
jecxz
lret
and
lahf
test
dec
jge
sahf
loope
rorl
pushf
jno
clc
add
jno
sub
fsts
cmp
add
add
add
inc
sbb
aas
lcall
sbb
xchg
push
add
cmp
mov
add
or
and
scas
push
js
mov
cli
fadds
mov
sub
mov
negl
sub
add
fdiv
outsl
pushf
push
add
adc
jne
mov
push
dec
add
pop
pop
in
out
fwait
clc
mov
add
lret
sbbb
int
push
cmp
iret
dec
add
frstor
loope
mov
cmp
mov
idiv
nop
ja
dec
add
xchg
lea
add
lods
add
add
sarl
imul
repz
cmp
and
jno
fisttps
mov
loopne
adc
mov
add
sbb
adc
in
mov
add
idivb
mov
add
fldcw
add
mov
hlt
shlb
jle
pusha
add
sti
lea
sbb
aam
addr16
inc
add
dec
add
mov
mov
jmp
add
xchg
jns
lcall
add
xor
add
cmp
mov
inc
add
inc
add
sbbl
xlat
xchg
lcall
add
sub
cwtl
repnz
pushf
jae
push
add
pop
cmp
insb
add
add
lods
sub
and
sbb
add
add
sub
pop
add
add
shlb
cwtl
add
pop
add
inc
add
push
popf
mov
add
scas
dec
add
xor
pusha
add
add
insb
add
lods
mov
scas
inc
inc
add
sbb
add
cmp
sbb
jl
outsl
fwait
aam
add
cli
scas
mov
pop
int3
jo
fmuls
ficompl
call
in
jno
add
pop
add
mov
push
add
outsb
add
add
add
adc
cmpsb
cmpsb
mov
push
jle
inc
add
mov
ljmp
ret
lods
lods
push
rcrl
add
push
add
sahf
pop
jle
cwtl
lahf
and
gs
xor
jo
bound
jbe
sub
out
jl
call
out
xchg
add
lock
cli
adcl
jg
pop
jne
dec
add
dec
add
repz
sbb
xchg
movsl
loope
stos
pop
fidivrs
mov
add
cmp
insl
jge
clc
mov
out
pop
outsl
lock
xor
shlb
nop
mov
mov
shrl
dec
add
add
add
add
lea
fdiv
mov
or
cmp
cmp
lret
test
pop
mov
add
add
inc
add
dec
test
or
icebp
ljmp
mov
add
aas
add
add
outsb
add
out
es
data16
popf
andl
popf
test
lret
scas
rol
adc
xor
add
add
xor
js
xchg
cli
outsl
arpl
sub
and
nop
imul
cmpsb
sbb
outsl
lcall
xor
push
add
orb
decl
add
add
pop
add
add
add
mov
adc
lret
aad
add
pop
cmpsl
mov
mov
test
add
setnp
cmp
testb
testb
add
sub
sub
out
clc
bound
dec
cmpsb
lea
add
sub
icebp
inc
add
mov
iret
jp
push
add
jecxz
shl
mov
sahf
jl
roll
add
sti
push
add
xchg
push
or
in
push
add
push
add
scas
adc
add
stos
rcrl
mov
out
insl
add
jno
jns
add
inc
add
push
add
or
pop
push
stc
xchg
mov
enter
stc
add
add
add
cmc
lods
jl
and
sbb
add
jl
popf
lods
inc
andb
xchg
push
add
test
in
xchg
push
add
outsl
pop
daa
cmc
jbe
xor
test
and
mov
add
insb
add
add
add
xchg
mov
data16
iret
pop
cli
test
test
iret
mov
shll
outsb
add
negb
xor
inc
cmc
pop
add
fcoml
and
inc
add
ret
xchg
dec
add
mov
add
repz
fwait
fs
dec
add
pop
push
sbb
push
add
out
inc
test
test
fnstenv
lcall
fidivrl
jno
cmp
stos
or
mov
fcoms
sbb
jns
movl
out
jecxz
add
fsubrl
mov
jae
cmc
inc
add
adc
fidivrs
out
mov
sbb
clc
loopne
jl
mov
adc
aad
sub
pop
mov
rcrl
int3
pop
out
sub
decl
add
ds
pop
cmp
add
pop
add
add
inc
adc
cmp
add
add
jnp
das
mov
movsl
dec
add
mov
jp
mov
ret
mov
add
icebp
rcr
inc
add
dec
jmp
add
cmc
xor
cli
jmp
nop
xchg
push
inc
add
lahf
sbb
das
sarl
cmp
cmp
data16
jle
hlt
jne
jmp
add
mov
xchg
mov
mov
clc
cmp
pop
mov
and
add
dec
add
adc
ret
adc
data16
lcall
sub
divb
push
sub
stos
bnd
pop
dec
sub
pop
mov
add
push
add
idivl
add
xchg
add
enter
mov
les
rol
sub
adc
add
inc
xor
pop
add
push
add
add
add
add
add
add
pop
add
stos
rcrl
add
dec
fcmovbe
or
inc
add
andl
add
test
mov
add
add
add
adc
push
add
out
xchg
aam
cmc
into
sbb
insb
add
dec
add
mov
mov
out
lcall
adc
fisttpl
pop
add
add
pop
bswap
xor
jecxz
rorl
or
lcall
add
add
jle
inc
add
subl
insb
add
jmp
add
add
hlt
cltd
inc
add
add
xchg
lahf
pop
arpl
fstp
data16
add
shlb
cmp
dec
add
dec
jl
ljmp
pop
push
add
add
pop
push
add
popf
mov
test
roll
into
popa
loopne
scas
add
xchg
jg
add
add
push
add
xor
fcomps
mov
arpl
dec
add
cli
add
pop
add
lcall
xchg
mov
sbb
popa
add
mov
leave
mov
stos
in
push
add
pop
add
add
add
xor
std
sbb
cmc
push
add
add
or
add
out
mov
add
and
add
in
movsl
bound
ja
imul
addr16
mov
lods
xor
dec
add
add
fwait
mov
add
add
mov
pushf
clc
pushf
xor
sub
imul
push
add
lahf
aad
int
std
jae
stos
mov
loop
test
or
jb
inc
add
inc
das
cmp
lahf
sbb
push
add
pop
add
add
dec
add
ficoml
cmc
sbb
lods
or
out
in
je
mov
add
mov
add
add
scas
sub
mov
add
add
add
addr16
dec
add
add
mov
push
add
lahf
lods
stos
push
add
add
lods
loop
add
lock
fdivrl
and
sti
xor
push
add
jne
add
dec
add
add
adc
shlb
push
jge
flds
cwtl
xlat
mov
add
push
mov
and
add
call
ljmp
adc
lcall
inc
ljmp
add
sbb
add
ret
xor
push
add
aam
add
and
add
fsub
jns
imulb
xchg
pushf
cmp
mov
add
inc
add
push
daa
sub
jns
pop
add
mov
es
lcall
inc
fisttpll
xchg
int3
movsb
ret
mov
sbb
push
cmp
cmp
add
lea
aas
ja
stos
data16
add
xchg
fisubs
fsubs
add
push
xchg
add
mov
rcr
popf
fucomp
xchg
divb
sbb
or
add
faddl
loopne
hlt
lret
push
fisubs
add
mov
xor
jbe
popf
neg
scas
lods
adc
arpl
rcrl
add
loop
and
or
add
cmpsb
xchg
lock
add
add
add
add
add
pop
push
add
jle
and
and
out
jge
xchg
lods
xor
cs
push
add
bound
cmp
and
add
mov
push
add
or
scas
mov
je
fsub
push
cmp
int3
cld
pop
push
push
add
and
js
ja
test
iret
mov
add
into
add
into
push
xor
lret
in
add
stos
outsl
xchg
push
add
add
xor
shlb
sbb
jae
add
andb
fisubrs
sub
add
add
push
add
mov
push
add
imul
bound
cmpsb
mov
aaa
pop
dec
add
sahf
xchg
sbb
stos
xor
and
mov
push
dec
mov
out
add
mov
shll
pop
or
stos
decl
mov
add
add
push
add
popf
sahf
and
stos
test
xchg
push
add
add
add
inc
out
movsb
sub
test
add
cld
push
into
mov
sub
in
xor
js
jb
and
add
mov
xor
movsl
jecxz
dec
mov
dec
adc
testb
add
cmpsl
fxch
xchg
ficomps
nop
mov
dec
addr16
scas
adc
fs
lea
jbe
add
mov
lea
add
mov
xchg
add
add
add
pop
add
ja
sub
hlt
xchg
and
stc
jns
adc
add
sub
add
push
add
pushf
pop
add
add
add
cmp
mov
add
add
add
sub
push
add
add
jne
mov
add
xor
jo
les
add
add
push
add
add
adc
lahf
add
rolb
mov
dec
cmpsl
and
data16
jmp
push
add
sbb
hlt
dec
mov
cmp
add
add
add
sti
adc
in
pop
fsubp
add
test
add
sub
roll
push
mov
ret
cmp
daa
pusha
add
add
jo
mov
pop
add
add
cmpsl
pop
sbb
add
imul
test
add
or
or
mov
sub
xchg
cmp
push
add
add
pop
add
fwait
xchg
hlt
sub
test
dec
or
jbe
mov
insb
add
add
add
add
paddusw
xor
inc
daa
into
data16
add
scas
xchg
es
scas
imul
inc
xor
scas
mov
jns
movl
paddd
data16
add
je
shrb
into
lahf
aas
insb
add
push
add
cli
mov
push
add
add
mov
mov
int
add
add
pop
add
mov
cvttps2pi
sub
shrl
stos
test
xchg
fcmove
or
inc
test
sub
add
je
or
lea
in
and
jecxz
jmp
add
add
cli
adc
push
add
sbb
jle
ror
movsl
stos
inc
add
imul
xor
jno
addl
sub
cmpl
add
pop
add
add
into
cmp
adc
cs
loopne
aas
xchg
test
pop
add
sub
outsl
cwtl
ret
icebp
push
add
jns
insb
add
mov
fmuls
mov
fwait
popf
sub
pop
add
jo
jns
add
push
add
loope
pop
add
dec
add
sbb
leave
ljmp
and
or
jb
sahf
cmc
lock
adc
repnz
es
dec
add
adc
mov
popf
jmp
sub
mov
and
or
test
pusha
add
or
jle
dec
cmp
add
sub
cmp
cwtl
int3
push
fwait
leave
sbbb
add
sub
adc
call
or
stc
inc
dec
cmpl
xchg
inc
add
fcompl
push
add
add
add
push
out
lea
add
gs
adc
lcall
ljmp
pop
xchg
mov
lret
mov
adc
mov
pop
sbb
xchg
push
cmp
mov
ror
push
cmp
std
mov
mov
fwait
xchg
push
add
and
xor
jl
fsubrl
int
add
add
mov
aad
add
sbb
add
add
xchg
sbb
inc
nop
divps
pop
mov
add
push
lahf
mov
std
push
add
test
addr16
call
mov
sub
jmp
add
or
ds
dec
add
mov
add
add
jae
cld
loop
sbb
outsl
sahf
ja
cmp
movsl
xchg
sti
pop
add
int
add
adc
push
ret
push
add
or
mov
jno
into
fimuls
mov
movsb
in
mov
jno
and
add
pop
cmpsb
cwtl
hlt
pop
add
pop
jae
add
add
jle
adc
add
int
push
dec
add
add
test
jge
subb
std
push
push
add
add
add
movsl
dec
add
mov
add
add
mov
jmp
mov
add
sbb
ret
cmc
scas
arpl
sub
sub
enter
add
fdivr
xchg
out
pop
inc
mov
andb
or
mov
cs
je
inc
push
add
add
push
add
ret
mov
add
add
add
mov
add
or
jmp
add
push
add
add
add
rclb
ss
lods
cmp
xchg
mov
sub
shr
push
add
add
add
lret
cld
cmpl
bound
push
add
rcll
add
add
nop
mov
add
lahf
fidivs
sbb
adc
xor
leave
inc
adc
loope
add
mov
dec
aaa
fildll
fsubp
lret
stos
and
sti
jnp
add
out
inc
add
outsb
add
jns
cltd
mov
addr16
xor
hlt
mov
push
add
out
and
cmp
inc
add
add
push
add
lock
pop
add
daa
lods
or
or
cld
add
push
popl
xor
icebp
xor
add
movsb
pop
add
es
and
cmp
sbb
fstl
sar
sub
sti
bound
sub
mov
and
and
pop
dec
xchg
int
jae
insl
xor
jae
pop
dec
cli
pop
clc
sub
stos
pop
arpl
cmp
jg
add
add
ret
bound
pop
add
loop
shll
imul
mov
cmc
lds
adc
fs
test
mov
in
sbb
addl
lcall
scas
mov
lahf
lods
adc
into
push
add
repz
add
xor
add
fwait
les
add
add
add
dec
add
add
xchg
test
and
add
jmp
add
pop
sub
in
pop
add
out
or
lcall
pop
sub
xchg
cmp
push
add
enter
add
mov
mov
xor
rolb
add
and
push
stos
cmpsl
sti
mov
mov
test
inc
add
add
add
lods
pop
add
mov
cmc
jmp
mov
add
ret
add
push
add
add
mov
add
mov
stos
fcmovu
pop
or
test
imul
add
xchg
mov
gs
inc
dec
add
flds
cmp
lret
addr16
int3
addb
add
xchg
sbb
movsb
adc
ljmp
jmp
nop
cli
jmp
rcrb
pop
or
add
add
enter
xor
lods
insl
push
add
fisubs
ljmp
call
adc
cmpsl
push
add
data16
mov
enter
addr16
into
nop
das
es
xchg
fs
bound
addb
sub
mov
mov
adc
or
cmp
aaa
ret
aam
dec
cmpsl
push
add
xchg
xor
arpl
sarb
mov
add
jmp
stos
sti
add
xor
aas
sti
outsl
dec
add
push
add
out
push
fcmove
jle
les
add
add
arpl
dec
sbb
cmpsl
shl
mov
imull
mov
add
mov
push
add
pop
xor
push
sbb
mov
adc
test
add
stos
dec
lahf
repnz
dec
lods
push
xchg
js
add
in
or
aas
sub
daa
sarl
mov
pop
ret
fs
jb
sbb
add
xlat
push
add
je
rorb
ja
add
add
inc
add
and
add
fistpl
sbb
dec
movsb
jmp
mov
add
mov
mov
shrb
or
mov
std
jns
shl
xchg
mov
fwait
mov
jp
and
sar
add
out
mov
add
pop
add
xor
pop
add
add
add
pop
add
ficoms
sub
pushf
dec
fisttpl
add
add
and
adc
call
fcompl
add
push
add
stos
lods
aaa
mov
jne
xor
ljmp
add
and
aad
add
stc
repnz
sub
push
add
pop
in
inc
add
push
add
ret
pop
push
add
push
add
add
xchg
push
scas
cwtl
lahf
jae
add
add
sbb
add
pop
sbb
push
mov
jae
add
add
mov
mov
add
mov
add
js
add
lret
push
cmp
dec
sbb
and
mov
rcll
lahf
dec
into
repnz
lods
lcall
mov
lret
xor
dec
add
fisubs
andb
loopne
pop
add
add
push
sub
fdivl
clc
inc
add
add
jns
or
lods
jns
xor
sbbb
push
add
pop
jmp
add
xor
cmc
stc
sbbl
add
frstor
iret
push
add
sub
adc
into
pop
call
pop
les
add
add
add
jmp
fcompl
int3
push
inc
mov
add
add
add
mov
int3
push
mov
add
test
jnp
mov
test
ficompl
add
xchg
add
icebp
sahf
adc
dec
add
add
add
iret
fildl
jmp
lods
cwtl
std
das
int
xor
loope
test
rorl
add
aas
push
add
pop
ds
std
xor
pop
add
lods
xchg
mov
add
jp
add
push
add
mov
popf
inc
add
pop
xchg
pusha
add
add
jecxz
insb
add
xor
jp
fnstenv
call
std
fstl
outsl
push
add
loop
push
push
mov
add
dec
push
add
or
pop
pusha
add
sarl
inc
add
call
scas
mov
rorb
add
jl
enter
stos
inc
adc
mov
xchg
test
cltd
inc
add
add
testb
mov
movzbl
and
cmpsl
les
xchg
xchg
adc
add
insl
ja
insb
add
xchg
rcrl
rorb
xchg
sub
adcl
push
fucom
xor
add
add
xchg
adc
sub
dec
xorl
lock
inc
inc
or
outsl
adc
les
das
mov
dec
mov
xchg
adc
jl
lods
xor
dec
data16
cltd
sti
rcl
xchg
loop
cmpsl
stc
pop
xor
das
stos
into
inc
add
add
jecxz
add
scas
lret
repnz
sbb
pop
add
add
add
daa
lods
test
xchg
xchg
into
ret
gs
adc
add
pop
fwait
pop
add
pop
aas
std
out
dec
push
pop
stos
fnstenv
push
sbb
gs
add
xor
fstpl
cmp
push
add
orb
sub
add
inc
add
arpl
out
inc
adc
out
add
push
add
leave
sbb
add
add
fwait
ljmp
mov
inc
adc
xor
jbe
lahf
xor
imul
add
add
lods
inc
rclb
add
cli
dec
add
pushf
push
rcl
add
dec
add
std
ja
add
add
adc
scas
insl
xchg
decl
add
lea
leave
repnz
add
mov
add
dec
add
mov
pop
and
pop
add
clc
mov
or
loop
or
sbb
fisttpll
push
mov
adc
ret
add
adc
lcall
sbb
in
andl
aas
or
adc
test
mov
mov
dec
add
inc
pushf
xchg
cmp
add
call
movsb
mov
add
stos
test
mov
outsl
and
add
cmp
cmp
add
jae
test
mov
add
test
das
jmp
add
mov
add
fistl
pop
jg
insb
add
cmp
and
add
data16
dec
push
add
xor
mov
jbe
sub
mov
ja
testb
loope
add
repz
insb
add
jne
add
push
add
in
add
data16
repnz
pop
add
add
or
in
sbb
add
add
out
fildll
int3
sbb
adc
sub
add
aas
stc
pusha
add
add
cmc
pop
or
and
sbb
add
cmp
add
cli
or
loopne
add
mov
add
xlat
adc
das
addr16
jecxz
fidivrl
mov
adc
testl
add
add
mov
scas
pop
mov
fisttpl
add
sti
dec
add
push
add
je
stos
pop
add
out
xchg
mov
mov
jnp
dec
mov
jmp
lea
dec
pop
add
pop
push
test
cmp
cld
mov
imul
add
add
pop
mov
add
cmp
data16
add
rorl
push
add
and
scas
jne
add
mov
add
sbb
testb
je
mov
add
add
movsl
mov
inc
sbb
mov
cli
cmp
int
add
out
xchg
scas
iret
jmp
call
and
test
enter
lret
adc
div
in
cmp
fisubl
loopne
jecxz
add
ficoml
add
add
add
fcmovbe
idiv
inc
sti
ja
add
idiv
adc
jg
add
and
push
add
sbb
daa
subl
adc
pop
add
cmp
add
add
inc
add
add
cmp
mov
sub
imul
xor
lret
leave
loop
add
add
pusha
add
add
add
mov
mov
aas
add
cmp
push
add
mov
cld
lret
add
je
sub
sar
or
and
cltd
inc
add
ror
adc
das
push
add
call
icebp
fwait
std
dec
add
jp
cmp
xchg
mov
add
popa
jl
out
insl
mov
imul
arpl
push
add
mov
xchg
inc
dec
add
add
sub
mov
and
fwait
inc
add
inc
pop
push
add
jo
mov
leave
cmpsl
inc
fwait
in
add
add
mov
pusha
add
imul
mov
pop
mov
xchg
mov
add
xchg
pop
mov
add
das
add
sbb
xlat
cltd
test
xorl
add
add
add
sub
outsl
inc
rorb
push
add
add
add
fdiv
cmp
push
jb
inc
add
notl
add
add
xchg
mov
inc
add
mov
cmp
shlb
mov
in
xor
repz
nop
push
jge
into
xchg
dec
xchg
stc
test
and
mov
add
mov
add
add
add
push
test
icebp
cmpsb
jl
jle
ficoml
push
add
nop
sub
out
xchg
mov
sbb
xchg
adc
iret
pop
add
daa
mov
adc
in
add
add
sub
enter
push
add
add
add
push
add
add
and
mov
lods
fists
add
add
add
xor
inc
add
add
mov
push
add
sbb
add
loopne
aad
add
mov
add
mov
fcoms
ds
lock
xor
xchg
mov
add
out
jp
mov
push
add
dec
das
hlt
pusha
add
add
mov
dec
add
inc
adc
rcll
mov
mov
icebp
pop
add
adc
add
enter
push
xchg
mov
adc
sub
daa
orb
xchg
popf
push
add
sub
movsl
xchg
and
jl
cwtl
jae
imulb
add
jp
xor
test
add
sahf
leave
xor
mov
add
push
add
pop
mov
insb
add
rcll
fildll
add
fcmovbe
xchg
push
add
add
ret
insl
push
lds
add
ret
inc
mov
test
push
add
add
sti
jb
lcall
hlt
add
add
or
and
lcall
jmp
add
and
in
add
add
out
xchg
add
in
sti
push
add
xchg
add
popf
jg
push
add
add
es
mov
nop
divb
loop
add
or
add
add
jp
sub
and
or
xchg
xchg
jl
int3
push
push
and
fimuls
mov
jns
icebp
repnz
icebp
rclb
loop
add
loope
mov
pop
add
xlat
xchg
mov
jne
cmp
insl
fstl
sbb
dec
add
push
fbld
mov
mov
add
loope
scas
rorb
xor
push
add
xchg
pop
xor
push
add
add
movups
jne
xchg
add
add
adc
mov
add
mov
add
fldt
popa
adc
xchg
and
fsubrl
dec
add
jns
pop
and
push
movsl
pop
add
and
dec
leave
xor
jne
mov
add
add
or
sub
push
add
aad
call
add
add
jmp
add
add
cld
outsl
in
js
push
mov
or
adc
pop
add
arpl
iret
sub
add
cmpsl
ds
jp
sub
mov
add
jne
pop
mov
add
cld
mov
sub
add
add
add
add
and
loopne
pop
movsb
dec
subl
or
cmpsb
xchg
mov
rep
xor
mov
pop
add
add
popa
dec
das
cltd
push
movsl
sub
sbb
cmp
push
add
xchg
enter
add
add
push
icebp
sbb
popf
xor
pop
xorb
fcmovnu
mov
pop
dec
add
sahf
in
add
mov
add
or
movsb
ret
movsb
mov
cwtl
jp
filds
fildll
jae
movsl
aas
ret
sub
dec
addr16
dec
mov
insl
add
jno
pop
mov
jmp
fistl
add
stos
adc
lret
add
add
mov
fcomps
push
out
inc
add
in
add
and
imul
ja
inc
add
add
jl
mov
cli
xchg
pop
add
sbb
and
xchg
fisttpll
in
imul
cmp
sub
stc
push
data16
or
add
adc
mov
push
add
mov
xchg
pop
mov
xchg
pop
add
add
cmp
inc
sbb
xor
push
cmc
iret
repz
dec
add
add
add
into
or
int
add
rcr
dec
dec
push
add
jo
adc
dec
add
add
jns
fistpll
xchg
aam
popf
hlt
test
lret
gs
hlt
push
add
add
push
dec
psrad
add
ret
xor
pop
mov
jae
xor
clc
dec
jp
sub
add
mov
add
ret
push
shl
insb
add
addr16
add
dec
add
lods
je
outsl
shl
add
out
add
jp
addb
in
or
sbb
mov
pop
xor
movsb
mov
stc
push
add
add
mov
add
or
faddl
sbb
push
mov
add
add
or
pop
mov
sbb
jbe
jbe
pop
mov
int
mov
mov
cmpsl
cmp
mov
add
clc
xchg
dec
add
cmp
data16
roll
and
mov
push
add
jmp
mov
xor
roll
adc
add
add
ljmp
mov
mov
add
mov
inc
scas
popf
add
and
sbb
out
insb
add
test
sbb
mov
dec
push
add
cmpsl
add
push
mov
loop
sahf
clc
and
orl
lahf
js
test
mov
rorb
out
jp
pop
xor
lret
inc
test
push
call
shlb
cmp
mull
addr16
dec
add
adc
das
xor
shlb
aas
lock
pop
xor
pop
xchg
inc
add
imul
mov
add
pop
icebp
dec
lds
int3
jmp
add
mov
dec
add
and
lret
movsb
imul
popf
repnz
cmpsl
icebp
inc
jns
sub
add
enter
sti
pop
inc
add
fcomi
loope
jecxz
lahf
fimuls
push
add
add
xor
js
out
jle
mov
add
pop
scas
mov
pushf
jl
or
or
js
inc
add
or
int
mov
in
mov
lock
add
push
add
bound
mov
add
add
add
cmp
int3
inc
xor
cmpsb
subb
add
inc
add
ljmp
mov
mov
add
xchg
cmp
shl
repz
pop
push
add
push
add
insl
xor
xchg
jns
add
mov
add
add
add
inc
add
add
cmp
or
fidivrs
add
mov
xchg
repz
mov
mov
mov
add
add
add
test
add
mov
lcall
mull
add
dec
add
add
out
hlt
cwtl
mov
cmp
sbb
add
xor
or
pop
add
xor
outsb
add
aas
push
cmp
lcall
cmc
out
mov
inc
jl
cmpb
clc
and
fdivrp
dec
xor
rcrb
jmp
xchg
movsl
xlat
cli
sub
add
jae
mov
or
sbb
jecxz
mov
test
int3
push
add
stos
iret
iret
xor
mov
pop
lds
sti
or
pop
leave
add
ret
fistps
mov
jge
jg
mov
pop
add
addr16
jmp
cmp
outsl
mov
add
sbb
mov
add
cltd
test
add
add
sbb
cmpsl
xchg
je
js
mov
mov
add
jo
mov
or
rorb
ss
dec
fdivl
add
not
fmuls
add
or
add
add
add
fcoml
xor
fnstenv
mov
scas
add
mov
mov
add
add
inc
shrb
scas
adc
add
add
ret
icebp
xor
push
add
push
add
stc
or
jmp
xor
add
out
adc
add
jo
imul
add
ret
dec
cmp
jp
jnp
add
mov
mov
xchg
addr16
gs
add
add
add
add
cmpsb
dec
add
test
mov
add
add
add
add
add
lds
stos
sbb
add
adc
push
repnz
xchg
dec
pop
dec
add
sub
fimuls
cmpxchg
bound
pop
inc
add
jne
jb
hlt
cmp
filds
add
push
cltd
jecxz
unpcklps
adc
xor
add
in
scas
sub
add
pop
add
insb
add
lret
test
adc
pop
add
int
mov
dec
add
add
add
inc
incb
push
add
test
jne
add
mov
sub
movsl
xor
push
insb
add
add
pop
sub
arpl
adc
aam
data16
cltd
cmp
or
cmc
scas
pop
jl
in
dec
add
aad
cwtl
inc
add
add
xchg
add
cmpsb
inc
pop
shlb
sub
pop
add
aaa
mov
add
inc
out
lret
pop
sub
mov
test
loopw
jno
mov
pop
or
cli
jo
inc
mov
lahf
cld
adc
add
and
jg
movlps
das
pop
enter
add
shr
out
adc
and
mov
add
loope
dec
add
sbb
jo
jbe
mov
add
dec
add
add
add
andb
dec
into
add
adc
add
lock
pop
xchg
pop
cmpsl
dec
dec
add
dec
add
mov
cmpb
add
push
add
push
mov
and
mov
push
add
cmc
insl
iret
stos
adc
stc
pop
bound
sbb
jae
data16
aad
add
je
sbb
mov
loop
shrl
add
adc
incl
add
enter
sub
xchg
mov
dec
jle
or
hlt
packuswb
mov
sub
jl
mov
cmp
clc
sbb
fsubrl
cmp
mov
jb
push
add
loop
mov
push
mov
mov
iret
cmpsl
and
fcmove
sti
push
adc
cwtl
aas
add
and
mov
adc
fidivrl
rorb
mov
adc
popf
pop
sbb
mov
leave
cwtl
add
or
stos
and
mov
sbb
sub
cwtl
and
lods
push
add
and
xchg
dec
add
jae
pop
orb
push
add
fimull
add
xlat
pushf
jnp
add
push
and
cld
push
add
insl
das
dec
outsl
mov
jmp
add
and
mov
add
rorb
enter
jae
movsl
sbb
in
je
and
cmp
add
mov
leave
rorb
add
add
xchg
je
xorb
sub
jb
dec
add
gs
add
shl
aad
dec
and
push
cmp
add
add
add
mov
ficoms
dec
jae
movsb
and
mov
and
cltd
adc
add
xchg
xchg
sub
push
mov
jmp
xor
repz
add
fdivrp
aad
add
adc
rcl
mov
sti
repz
mov
pop
push
add
addr16
dec
add
sub
jo
cmp
pop
add
and
adc
lahf
inc
add
mov
outsl
in
sub
push
lahf
sbb
mov
sub
ror
xchg
sbb
inc
add
add
add
aam
dec
add
fs
push
inc
add
xor
movsb
cmc
dec
lcall
les
adc
gs
idiv
xchg
xor
movsb
push
add
test
cwtl
jge
lcall
add
push
mov
add
test
or
pop
add
mov
cmp
push
add
push
add
test
and
jl
add
in
dec
add
fisttpll
loope
out
mov
sub
adc
jno
xchg
cmp
add
dec
insb
add
jmp
sbb
orl
test
lea
push
add
cmpsl
sub
out
test
add
in
jle
je
mov
sarl
outsb
add
mov
pop
jae
and
sbb
mov
js
lods
sbb
mov
cmp
add
sub
fidivrs
add
xlat
sub
call
ffreep
mov
inc
add
mov
popa
xor
push
add
ljmp
add
pop
add
adc
imull
add
insb
add
cmp
and
mov
sbb
sub
add
add
cmp
cld
ljmp
xor
inc
gs
add
push
xchg
jle
xchg
push
add
scas
mov
jecxz
add
call
jp
mov
sti
fldcw
add
add
repnz
sub
sbb
cwtl
inc
add
dec
add
add
mov
enter
rorl
mov
or
fidivl
add
add
adc
loop
jle
inc
add
decl
add
add
mov
test
add
add
stos
cmp
lock
icebp
adc
add
xor
test
mov
dec
int3
pop
add
mov
add
add
outsl
ficoms
adc
pop
in
test
scas
mov
sbb
sbb
add
add
xchg
lods
addr16
xchg
cmp
test
add
add
lock
shll
add
add
add
pop
iret
dec
xor
je
js
pop
pop
repnz
insl
push
add
scas
xchg
iret
dec
add
add
jb
adc
lds
add
cltd
adc
mov
xchg
sbb
dec
daa
add
imul
add
mov
fsubrs
jmp
loopne
add
add
add
addr16
cmpsl
ds
ljmp
push
add
movb
sbb
jecxz
add
jge
inc
add
loope
sbb
lock
mov
movsb
mov
mov
add
push
mov
cmpl
xchg
movsb
ficompl
sub
xor
xor
pop
inc
add
push
add
lods
lea
sbb
mov
clc
negl
xor
add
mov
add
add
mov
xchg
or
jmp
add
arpl
out
repz
add
mov
cmp
push
add
xor
fisubrl
and
add
jb
dec
outsb
add
fwait
stc
lcall
inc
arpl
cwtl
clc
inc
add
xchg
inc
xchg
cmp
in
iret
repz
nop
cmc
add
add
cmp
xor
jmp
add
add
add
scas
pop
gs
fistpll
stos
or
add
add
bound
stos
icebp
fprem1
cmpsb
or
fildl
ljmp
mov
mov
push
add
add
or
push
ss
aaa
add
xor
mov
add
clc
add
push
add
test
mov
add
add
add
add
inc
jecxz
fidivrl
add
add
mov
add
scas
sbb
pop
xor
dec
mov
mov
sti
cmpsl
inc
add
int3
and
pop
add
movsl
sbbb
cmp
nop
jo
dec
add
mov
fwait
push
add
add
add
add
ret
js
cltd
scas
pop
add
nop
adc
mov
adc
add
sbb
fwait
in
mov
dec
add
mov
add
arpl
push
add
xchg
add
add
out
adc
fimuls
and
add
xchg
out
adc
fcomi
out
add
inc
mov
add
enter
add
out
into
xchg
and
jl
xchg
lret
iret
jno
adc
xlat
fisubrs
add
jno
inc
add
mov
lds
add
stos
aas
and
repz
and
add
xchg
mov
enter
add
mov
push
add
add
adc
jp
lods
insl
cmp
pop
and
add
pop
mov
add
mull
add
sub
mov
lea
cld
jmp
push
add
jmp
inc
enter
push
add
jnp
inc
add
mov
pop
add
js
loop
jge
add
add
xorl
bound
sbb
push
jne
add
pushf
leave
lods
shll
jns
nop
push
add
add
ficoml
outsb
add
inc
push
add
data16
add
lds
mov
push
sbb
push
add
add
add
add
fdiv
cmpsb
mov
push
loop
add
pop
lods
fmuls
stc
mov
out
add
push
add
shl
lret
cmc
adc
add
fisubs
sbb
sub
decl
push
sub
adc
ret
test
cs
fsubs
sbb
jae
add
xorb
out
xor
out
aas
adc
xchg
pop
test
sbb
adcb
inc
adc
cld
inc
sub
sbb
mov
cld
sub
loope
add
pop
add
sahf
xchg
xchg
aas
pushf
xor
ljmp
adc
pop
add
ljmp
pop
xchg
dec
add
push
fstps
add
ds
add
cmp
clc
cmp
or
pop
cmp
sub
mov
xchg
repz
mov
lcall
sbb
sub
adc
jle
and
adc
hlt
push
add
and
movsb
js
sub
cmp
dec
hlt
fimuls
std
xor
mov
mov
cmp
sahf
mov
add
mov
add
pop
add
shll
or
loopne
add
xor
scas
into
add
stc
jns
add
adc
mov
mov
cmp
push
bound
rcl
add
dec
add
mov
add
mov
gs
or
test
mov
rol
arpl
mov
pop
add
rorl
cmp
push
add
loopne
push
add
mov
je
adc
xlat
aam
clc
imull
add
add
int
out
stc
jl
xchg
fldl
cmpb
mov
iret
add
gs
arpl
fistpll
sbb
xor
fidivrs
add
push
add
sub
xchg
dec
add
fildll
inc
add
loop
add
and
inc
lods
add
setp
add
and
add
mov
or
jo
cmc
inc
add
mov
add
add
add
test
mov
cwtl
sub
mov
add
dec
add
cmc
mov
lea
add
sbb
aas
fimuls
aaa
lcall
cld
xchg
imul
inc
in
add
add
test
dec
adc
testb
add
pop
add
inc
add
loopne
cmp
fcmovu
fiadds
adc
sbb
lds
add
fdivrs
sti
dec
les
add
add
rclb
fwait
pop
push
scas
xor
scas
push
add
ljmp
dec
xchg
sbb
orl
add
ja
shrb
cmp
add
adcl
add
int3
xchg
pop
pusha
add
add
mov
orb
pop
cmp
push
add
xchg
xor
add
insb
add
xchg
adc
xor
add
add
add
cmc
decl
lock
dec
fcoml
add
repnz
mov
xchg
or
mov
add
xchg
sub
jle
mov
add
cmpb
jecxz
repz
pop
pop
xchg
xor
xlat
xchg
fdivl
mov
ljmp
add
mov
add
fidivs
stc
pop
into
mov
add
inc
add
push
add
xchg
jecxz
add
lcall
sbb
add
js
sbb
push
xchg
add
add
add
ret
mov
add
add
insb
add
xchg
push
in
sbb
in
push
dec
add
add
push
or
fistpll
xor
fstps
xchg
out
push
or
mov
add
out
cmpsb
add
push
push
add
faddl
loopne
xor
dec
fcmovnb
addb
pushf
daa
outsl
lea
insl
or
sbb
cwtl
dec
add
adc
jne
test
xor
lea
add
pushf
mov
fsts
sub
add
add
stos
shlb
add
insb
add
jl
cli
mov
stc
pop
add
jbe
pop
jl
push
pop
jle
scas
jp
push
add
xor
or
mov
xorl
out
add
add
sarl
push
add
pop
jmp
testl
outsl
in
lret
mov
xlat
cmp
mov
add
fsubrs
lcall
in
xlat
mov
loopne
ljmp
add
in
adc
inc
push
add
lret
nop
cmp
ss
inc
add
add
xor
jns
add
add
orb
dec
add
imul
push
xchg
out
je
add
loope
lcall
ds
xor
sti
lock
add
add
add
push
add
pop
add
mov
ja
jbe
out
xchg
rcrl
add
add
inc
or
add
sub
add
cld
rcll
outsl
add
mov
add
sub
pop
add
stos
sub
sub
add
cmp
inc
add
test
add
xchg
loopne
cmp
or
dec
ficomps
push
add
enter
and
add
jg
add
add
xchg
cmp
imul
orb
jmp
ja
or
xchg
stos
out
in
cmc
adc
cli
mov
fmul
data16
mov
add
add
add
xchg
and
jl
lcall
cmpsl
xchg
mov
add
dec
mov
addr16
ja
push
aaa
repnz
repz
add
lahf
sahf
addr16
add
test
jns
add
push
popf
dec
pop
push
sbb
mov
rclb
add
in
andl
arpl
sti
and
ja
add
pusha
add
into
cltd
cld
jg
ret
jb
push
add
mov
adc
add
call
add
add
mov
mov
jno
mov
lret
clc
pop
nop
jecxz
inc
cmc
fldl
add
jecxz
sahf
pop
add
xchg
jg
jmp
out
int3
int3
mov
add
jbe
ficomps
add
mov
add
mov
dec
add
add
add
add
mov
out
test
add
xchg
addr16
add
test
lret
addr16
rol
add
mov
mov
in
in
movsl
shrl
mov
add
xor
fmull
add
and
jge
or
js
jbe
xor
xor
js
leave
adc
imul
mov
inc
add
inc
cld
mov
dec
add
jae
jno
mov
dec
sarb
fdivl
dec
in
ret
out
add
add
push
cmp
fwait
lods
nop
std
inc
add
dec
div
mov
pop
mov
jmp
popl
add
add
add
mov
rcl
and
sti
scas
inc
push
add
mov
in
push
push
add
adc
mov
jge
add
lock
fists
add
add
jne
loop
stc
dec
ret
jmp
add
or
cli
jp
xchg
cmp
pop
add
pop
ret
stc
mov
pop
insb
add
add
add
mov
popf
sbb
loop
xchg
lret
add
stc
jno
repnz
repz
and
hlt
sbb
mov
add
pop
mov
jge
loopne
add
repz
mov
xor
add
inc
add
cli
pop
add
js
dec
add
sbb
int
add
mov
sbbl
dec
push
mov
or
add
in
shrb
fistps
adc
imul
cs
cmp
push
add
add
mov
add
cmp
adc
add
add
sbb
adc
mov
push
add
cld
daa
push
das
stc
jmp
cmp
mov
aam
add
lods
mov
icebp
movsb
mov
inc
and
inc
sahf
or
insl
pop
inc
add
push
push
add
imull
add
lahf
inc
push
add
push
add
ret
add
or
ds
pop
add
sbb
inc
data16
hlt
add
adc
push
add
in
dec
scas
mov
jl
movsb
repnz
movsb
dec
mov
or
mov
repz
stos
push
int3
lock
sub
repnz
pop
test
loopne
add
add
jmp
add
cmp
addr16
xor
push
add
cld
test
mov
and
aaa
das
mov
movsl
cltd
push
add
xchg
sbb
aaa
repnz
call
dec
push
imul
add
or
push
aad
mov
add
jecxz
mov
ds
jns
aas
cmp
cmp
stos
jnp
rorb
add
inc
add
inc
add
cmp
add
aaa
sub
movsb
push
add
xor
xchg
cmpsb
icebp
into
pop
add
jb
mov
mov
xor
pop
add
push
add
add
outsl
jp
xchg
daa
jbe
aad
push
add
imul
pop
hlt
sti
adc
repz
lods
add
or
nop
sub
rcrl
mov
mov
add
das
arpl
cli
aam
add
in
out
add
inc
add
popa
iret
movsl
add
jnp
scas
mov
movb
fistps
add
enter
movsb
and
sbb
add
cmp
sub
jle
cmp
add
add
pop
add
xchg
push
add
pop
fsubs
add
stos
outsb
add
xchg
aas
add
xor
sbb
lahf
scas
and
cmpsb
shlb
add
cmp
add
sub
xchg
dec
add
mov
xcrypt-ofb
cmpsl
sub
mov
dec
add
sahf
stos
mov
sub
push
xor
push
push
or
add
leave
in
js
insb
add
aaa
mov
add
jmp
add
arpl
add
out
add
add
lcall
dec
mov
push
add
add
mov
das
cli
mov
xor
push
out
cmp
add
mov
mov
aam
roll
ljmp
mov
sub
add
mov
lods
loope
nop
daa
xchg
pusha
add
ret
jae
cmp
out
sbb
push
add
jnp
scas
rcrl
push
int3
push
add
sbb
icebp
jae
fcompl
jl
fst
sarl
aad
add
ljmp
pop
add
sbb
add
dec
add
das
arpl
add
out
mov
in
cmpb
pop
test
loop
add
xor
mov
or
xor
test
outsb
add
js
outsb
add
fucomp
outsl
jge
pop
add
add
dec
add
xlat
enter
sub
add
push
and
mov
add
mov
cmp
hlt
mov
outsl
out
wrmsr
add
pop
add
test
jp
scas
xchg
jecxz
push
add
pop
add
pushl
jge
xor
ja
popa
mov
cwtl
sbb
jbe
mov
mov
push
add
jae
dec
add
cld
pop
add
xchg
and
jno
pop
add
add
xchg
push
outsl
je
sahf
arpl
movsl
jp
loop
loop
cmp
out
xchg
jns
adc
leave
shrb
mov
and
sbb
out
daa
test
cmpb
add
inc
add
in
neg
push
repz
movsb
iret
cmpsl
cli
mov
or
add
call
lret
fdiv
mov
push
adc
or
jb
rcrb
aas
outsl
loop
jmp
inc
xor
repnz
sub
adc
push
add
jmp
jg
outsl
je
mov
outsb
add
add
mov
mov
outsl
cltd
cmpsl
test
lret
adc
bound
add
adc
hlt
addr16
pop
loope
add
add
mov
sahf
dec
add
xor
xchg
insb
add
mov
add
clc
sbbl
add
add
add
or
and
add
mov
jecxz
add
push
mov
mov
movsl
add
add
add
mov
xchg
push
push
add
inc
lds
add
pop
clc
push
add
insb
add
xor
test
js
ret
ret
mov
cmp
add
mov
cltd
ret
loopne
add
xor
mov
insl
in
adc
jmp
out
jle
adc
pop
inc
add
xor
hlt
inc
add
aam
add
movb
jle
out
test
into
ret
mov
test
jp
bnd
jb
shl
hlt
sarl
insb
add
movsl
shrl
jge
add
aad
shr
xchg
xchg
lret
add
sbb
xchg
out
shrl
jp
adc
insl
das
push
xor
repnz
add
aaa
or
int3
sbb
sub
lret
lods
sub
loope
mov
mov
inc
push
iret
out
mov
add
add
cmp
mov
cli
addb
push
inc
add
jmp
les
jge
cli
cltd
mov
sahf
pushf
mov
adc
xchg
pop
add
lret
fldl
movsb
cmpsb
pop
add
add
add
push
inc
add
pop
popa
xor
sub
mov
ror
movsb
cmpsb
outsl
fistpll
insl
add
add
mov
adc
jae
mov
je
repz
inc
xchg
xor
jo
ret
fwait
pop
add
sbb
repnz
inc
clc
rclb
lret
cli
bound
loopne
jnp
xchg
add
jb
and
add
mov
adc
cmp
jecxz
add
push
add
repnz
add
xchg
lret
ret
in
rcr
cmp
xchg
cmp
add
ljmp
fcompl
out
or
jle
push
add
and
or
mov
lds
jecxz
add
cmp
add
add
mov
push
add
outsb
add
add
add
cmpsb
nop
out
jnp
xlat
test
or
cmp
add
add
add
add
movsl
push
add
cltd
add
sub
xor
ret
inc
cltd
sub
or
lret
jbe
popa
cmp
aam
cld
sarl
add
push
pop
jne
jl
mov
popa
mov
pop
push
pop
jg
js
fwait
xor
adc
dec
push
inc
add
add
aam
add
int
lret
clc
cltd
add
dec
add
push
mov
mov
mov
inc
push
add
mov
sbb
sbb
jno
popf
mulb
add
xor
push
dec
add
bound
dec
cmp
add
add
adc
add
sbb
dec
add
sarl
add
cwtl
aaa
addr16
inc
and
in
fwait
imul
mov
xchg
repnz
add
xor
xchg
add
add
add
mov
add
scas
mov
movsb
fmuls
mov
add
add
loopne
pop
jne
enter
xor
sub
sbb
sbb
mov
daa
add
push
add
mov
icebp
cmp
pop
add
pop
outsb
add
and
notl
add
mov
loopne
add
mov
push
add
cmc
dec
or
add
and
popa
lcall
movsl
sbb
stos
mov
mov
loop
lret
mov
jno
mov
add
cld
enter
scas
pop
jnp
fidivl
fimull
add
add
data16
cli
dec
add
ljmp
push
add
push
incl
clc
insl
pusha
add
jnp
add
test
sbb
mov
add
mov
insb
add
add
rcr
stos
push
add
cltd
ror
inc
jae
mov
in
add
add
inc
add
xor
inc
xchg
cwtl
xchg
and
shlb
stc
xchg
enter
pop
add
jbe
xchg
xchg
gs
pop
add
push
add
jl
xlat
sar
mov
loop
add
cmp
sub
jne
daa
cmp
xlat
or
inc
add
mov
shlb
add
mov
add
dec
not
out
xchg
sti
int
add
imul
xchg
pusha
add
add
add
add
sti
add
enter
add
add
loop
imul
inc
add
mov
fdivs
add
in
dec
cmp
or
jbe
mov
aas
jnp
std
add
dec
add
add
push
das
xchg
dec
jle
and
add
stc
lret
adc
mov
dec
add
lcall
lret
add
lock
fstpt
test
push
dec
dec
add
add
adc
sbb
hlt
inc
adc
mov
pop
add
add
pop
xor
and
xor
in
add
add
add
mov
mov
ja
dec
add
add
out
inc
push
add
outsl
jl
ret
add
out
mov
pop
js
je
add
out
push
cmp
lahf
aam
js
cmp
pop
add
cwtl
movb
mov
cmpsb
push
add
ljmp
jg
add
stos
jb
std
loope
or
mov
add
add
aam
movsl
hlt
pop
scas
jns
inc
cmp
cltd
add
cmp
xchg
ja
add
fnstsw
iret
pushf
sbb
add
add
dec
aam
cltd
insb
add
add
pop
adc
in
cmp
stos
loop
ror
mov
add
xor
xlat
push
lcall
leave
ds
sbb
dec
add
movsb
jb
xchg
out
fucomp
inc
loopne
and
lret
jb
iret
shrb
iret
xchg
stc
or
add
pop
add
adc
push
jb
lret
add
cmpsb
mov
cmpsb
pop
or
aas
lret
add
mov
jge
sarb
int
add
je
pop
add
cmp
and
sub
mov
js
adc
and
adc
add
ja
add
test
add
jae
xor
nop
test
add
push
add
pop
fwait
adc
sub
fsubrp
add
mov
push
mov
cmp
ror
dec
and
dec
sbb
cld
cmp
lods
pop
in
push
add
add
xor
imul
lock
out
adc
rcr
sub
mov
adc
add
push
add
inc
neg
mov
repnz
mov
cmp
dec
add
add
add
add
mov
lock
add
jmp
mov
add
add
repz
add
push
add
add
in
cmp
lret
mov
push
add
ret
icebp
fwait
lret
popa
and
sub
ret
movsb
aaa
jge
add
je
mov
inc
imul
add
add
push
add
add
mov
add
add
add
add
jle
out
inc
add
movb
push
add
add
stos
pop
cmp
cmp
sub
mov
mov
test
mov
add
push
fwait
pop
add
stos
inc
add
mov
aaa
push
add
lcall
std
push
add
add
movsb
jg
add
add
add
dec
add
sub
pop
add
mov
stos
xor
push
add
push
add
incb
add
test
int3
mov
js
mov
lods
popf
lcall
xor
push
add
or
test
insl
cmp
imull
add
das
jns
add
add
insb
add
lcall
mov
sbb
mov
or
cmp
ja
add
adc
add
push
pop
pop
icebp
cld
out
loope
movsb
jecxz
mov
imul
fwait
pop
jp
cmp
mov
sub
sbb
mov
subb
mov
jge
add
jnp
add
mov
add
cmc
xchg
out
sbb
and
pop
iret
jnp
pop
add
add
dec
add
add
daa
inc
sbb
loopne
mov
sub
sub
in
xchg
xchg
ljmp
loop
add
dec
xchg
pop
add
jecxz
add
test
sub
add
cmpsl
add
jb
rcll
push
add
addr16
jo
jg
sub
inc
add
push
add
inc
pop
add
call
stos
dec
add
cmp
add
stc
push
add
xor
inc
add
xlat
out
or
sbb
iret
jno
add
add
shrl
or
add
addr16
and
ja
add
ljmp
pop
ds
mov
mov
add
mov
sahf
xchg
daa
push
add
and
push
add
pop
add
movb
ret
lahf
loop
ret
sti
mov
sbb
mov
pop
sbb
jmp
nop
mov
and
fsubrs
fnstcw
dec
loop
negl
add
je
pop
pop
pop
add
mov
add
add
std
mov
mov
add
xor
outsb
add
add
pop
adc
std
repz
add
insl
jmp
sbb
loop
mov
adc
arpl
add
add
fsubrl
add
and
int3
in
add
add
outsb
add
add
xor
pusha
add
cmp
scas
push
jle
and
ds
cmp
jo
mov
test
jg
and
and
jl
mov
cld
pushf
fcompl
add
jle
push
add
add
jns
or
jl
nop
mov
add
mov
jbe
mov
jg
shl
xor
push
add
add
div
adc
add
mov
xor
pop
sahf
dec
add
call
fwait
js
ljmp
add
xchg
jg
add
add
or
fwait
add
adc
repnz
pop
add
divl
push
add
add
xor
repz
dec
add
stos
mov
and
mov
cmp
and
add
add
in
icebp
xor
push
add
push
add
mov
push
add
mov
add
popf
adc
add
jo
pop
push
jb
leave
push
add
fsts
add
add
clc
pop
popf
add
mov
repz
mov
push
add
add
enter
jbe
push
pop
add
shl
pop
add
add
add
add
add
shll
mov
test
add
loopne
sbbl
mov
pmuludq
into
imul
pop
icebp
test
cwtl
mov
lds
pop
mov
dec
add
icebp
andl
add
jbe
nop
jmp
mov
add
in
xor
out
sti
arpl
loope
pop
aas
mov
pop
mov
add
cmp
dec
jae
add
lcall
enter
add
add
into
lret
add
test
add
cmp
add
jne
add
add
popa
jno
add
adc
lods
sar
or
add
popf
inc
mov
add
add
inc
add
rol
out
jg
add
addb
add
and
sub
push
lock
dec
jo
pop
outsl
in
sbb
jmp
add
mov
cmp
popa
pushf
xchg
or
jb
iret
push
add
sub
cmpsb
pop
fisttpl
popa
or
add
enter
pop
cmp
shr
pop
add
cli
xor
mov
popf
mov
sbb
mov
out
outsl
add
and
dec
fistpl
add
fucomi
insb
add
testl
jmp
addr16
add
pop
cmp
xchg
lods
mov
add
cltd
add
add
iret
jnp
leave
ficompl
add
adc
add
mov
add
lock
test
in
jb
and
jnp
or
shld
lods
sub
loope
stos
popa
fwait
aad
add
cmp
xchg
and
dec
jp
in
ret
pop
mov
xor
push
or
in
movups
jl
mov
mov
out
mov
lods
sub
mov
dec
add
mov
add
jp
out
jo
jl
jnp
ret
add
add
jl
cmp
imul
add
lock
sbb
add
add
add
push
add
orl
out
add
cmc
xchg
pop
lahf
sbb
add
add
pop
add
in
dec
add
fisubl
push
add
loopne
and
mov
push
add
aam
inc
arpl
scas
pop
sti
cltd
push
add
jmp
sti
and
cmp
add
add
adc
sahf
mov
push
adc
fdivr
cmp
inc
loopne
add
add
mov
add
out
movsl
push
add
lock
pop
add
add
in
jnp
scas
inc
add
and
add
and
pusha
add
jns
sbbl
insb
add
adc
add
jns
xor
pusha
add
pop
jecxz
add
aam
jns
sub
insb
add
sbb
pop
add
int3
mov
cmp
stos
adcb
add
cmp
inc
cmpsb
sub
add
in
mov
dec
add
add
or
add
xchg
add
in
inc
add
sub
xchg
leave
loope
add
test
leave
sbb
sub
addr16
adc
sub
movsl
cld
sub
mov
clc
lock
mov
add
add
fmull
data16
mov
sti
push
aas
bound
dec
movsl
jl
mov
xor
or
arpl
add
cld
xchg
jns
add
add
push
ret
pop
int
shl
jno
adc
movsl
fwait
loopne
inc
rclb
loop
hlt
push
add
leave
push
add
outsl
jmp
lods
cmp
rolb
add
shll
shll
push
cmpsl
pop
int
adc
add
mov
add
lret
shrb
sti
mov
fisubrl
add
jmp
inc
pop
in
out
add
xchg
mov
add
add
add
jecxz
sub
cmpl
add
pop
add
or
xchg
pop
fstpl
lea
or
mov
testb
pop
push
nop
push
xorb
push
add
add
mov
add
sbb
pop
mov
out
fcmovne
lods
push
add
xor
add
dec
add
add
mov
add
jmp
add
fcompl
cmp
add
adc
inc
mov
aaa
add
lds
add
add
loop
add
add
cmp
mov
pop
add
or
add
dec
add
xor
mov
mov
pop
push
add
int3
add
dec
add
add
push
out
add
lcall
push
add
dec
pop
add
ret
push
add
pop
add
in
xor
scas
xchg
mov
cmc
call
sti
fs
outsb
add
outsl
mov
mov
mov
add
mov
add
frstor
or
out
and
inc
add
sub
imul
push
add
add
fstps
mov
add
clc
adc
ret
scas
lret
jbe
cmp
test
sbbl
add
or
push
dec
add
sbb
nop
stos
insl
repnz
or
sti
out
sbb
and
in
pop
jo
repz
scas
push
add
jbe
repz
add
jbe
mov
aad
add
inc
add
jmp
jb
shrb
add
push
ret
mov
and
fmuls
push
add
add
daa
add
add
sub
imul
mov
mov
add
xchg
pop
es
ret
add
pop
data16
add
fldl
or
push
add
adc
push
add
js
roll
sub
add
stos
sub
add
add
sub
lahf
adc
mov
add
or
dec
aam
add
in
adc
pop
mov
mov
std
test
xor
lret
push
jnp
add
dec
call
sub
je
jmp
xor
int
add
dec
jo
cmp
jb
dec
add
mov
fyl2xp1
xor
movl
div
push
add
jne
add
add
scas
add
rorb
xor
pop
mov
jge
xchg
push
add
mov
mov
add
mov
push
push
add
jp
add
add
jbe
jmp
outsl
jl
fldcw
add
cmp
orl
daa
adc
test
dec
xlat
sub
jge
cmp
and
add
xchg
add
sub
jg
dec
add
lret
inc
add
fnstenv
movsb
pop
pop
lahf
push
add
add
sub
mov
aam
mov
add
jb
cmc
mov
les
push
ljmp
jl
or
add
adc
mov
dec
cld
dec
add
add
cli
xchg
xor
adc
cmc
leave
xor
in
shrb
sub
fdiv
lret
push
add
and
xchg
das
mov
out
push
add
int3
out
jns
sahf
adc
roll
add
add
negb
icebp
mov
add
push
add
jae
jae
icebp
in
out
add
mulb
inc
add
iret
cs
sub
push
mov
adc
push
add
dec
add
mov
add
into
mov
dec
int3
jecxz
leave
mov
sar
pushf
pusha
add
in
imul
dec
add
mov
add
lods
mov
rcr
mov
out
adc
repz
dec
add
jmp
jns
xor
sbb
and
mov
test
imul
call
jmp
add
add
cwtl
icebp
aam
add
je
das
in
mov
add
outsb
add
jb
sub
add
sbb
xor
pop
add
stc
xchg
jle
movsl
add
pop
push
das
xor
add
ret
add
mov
cmpsb
sbb
loope
add
xchg
cli
mov
mov
iret
jmp
aas
jns
ret
lock
cmpsb
mov
ja
xor
sti
adc
add
rolb
int
add
xchg
push
or
jbe
add
sahf
fimuls
jecxz
add
push
or
ljmp
or
push
into
ret
sbbb
add
sub
nop
add
lds
jp
ljmp
mov
xor
add
xchg
push
add
jle
leave
mov
add
iret
dec
add
sbb
insb
add
push
jno
cmp
or
nop
add
add
push
ret
inc
add
mov
imul
add
popf
mov
dec
add
push
add
push
add
push
add
jle
inc
add
scas
dec
add
gs
movsb
mov
push
add
mov
scas
pop
mov
leave
int3
mov
and
fistpl
add
addr16
push
add
sub
push
mov
mov
add
test
mov
sar
jno
das
push
das
pavgb
xlat
test
add
sahf
hlt
outsl
ljmp
lret
je
pop
add
iret
jbe
mov
cld
lods
loopne
loopne
jecxz
sahf
xor
ja
insb
add
subl
add
jb
outsl
loope
xchg
add
add
movsl
cmp
lret
aaa
cmp
add
inc
add
or
sbb
dec
jle
rcll
nop
adc
push
and
mov
jbe
jle
stos
inc
add
push
add
xchg
dec
add
icebp
mov
jns
xchg
mov
adc
sub
push
jnp
add
mov
scas
lcall
test
pop
ljmp
leave
xor
inc
jle
pushf
loope
push
add
dec
add
add
add
mov
in
int
hlt
cmp
rclb
lcall
add
add
dec
add
add
add
mov
add
cmp
mov
imul
add
dec
add
dec
push
add
cld
jecxz
push
add
add
add
jo
jnp
add
in
add
insl
jo
jnp
inc
add
add
pop
add
mov
add
shll
add
pop
mov
xchg
add
add
add
add
sbb
xchg
je
leave
add
push
out
loop
xor
mov
loopne
mov
rcrl
stos
dec
mov
xchg
lods
jge
add
mov
sub
dec
and
jmp
and
shlb
in
or
mov
add
add
pop
daa
sub
test
push
add
rcr
xchg
jecxz
inc
add
ret
jmp
imul
int
pop
scas
fmull
lds
add
push
add
shlb
out
sub
adc
jge
add
add
add
add
jecxz
add
add
adc
fldcw
add
aaa
push
adc
mov
cmp
add
outsb
add
add
add
gs
xchg
mov
movsl
mov
xchg
inc
lcall
xchg
sub
add
loope
cmc
fadds
add
jl
xchg
add
dec
mov
add
jl
push
cwtl
mov
hlt
fildll
pop
fxch
xchg
dec
jae
jo
icebp
xchg
std
fldt
fdivl
xchg
mov
cltd
das
loop
iret
pushf
arpl
fldcw
ljmp
jae
dec
add
xchg
into
pusha
add
and
ficomps
mov
add
sar
add
push
add
pop
mov
xchg
pop
and
add
sbb
adc
add
fbld
movsb
or
das
sbb
xchg
xchg
dec
cltd
ljmp
add
lea
add
popa
std
out
add
popf
sbb
andl
add
nop
nop
add
sub
add
add
add
pop
add
add
sahf
sbb
cmpsl
cmp
add
inc
add
cmp
fdivrs
sti
dec
mov
dec
cmpsl
das
loope
push
jae
add
shll
mov
icebp
shrl
scas
push
add
add
popa
sub
add
push
fidivrl
aad
mov
jp
int
xchg
jg
loope
sti
das
dec
add
add
and
movsl
mov
out
sbb
and
es
jmp
fdiv
rclb
jns
xchg
adc
cli
jne
add
add
and
leave
das
pusha
add
add
clc
xchg
adcl
sub
cwtl
icebp
cmpl
add
and
icebp
int
and
add
mov
ja
mov
ljmp
add
dec
inc
add
or
xor
ljmp
sbb
ficomps
add
xchg
in
add
add
add
dec
dec
sbb
jmp
stos
imul
sbbb
out
add
add
add
push
add
jle
xor
dec
add
add
mov
pop
pop
add
lcall
int3
cmp
dec
add
mov
adc
je
dec
mov
add
and
add
pushf
jmp
add
add
add
scas
mov
add
bound
sbb
jae
dec
add
add
add
cmp
xor
mov
insb
add
enter
add
call
add
dec
fidivl
add
icebp
inc
dec
add
not
pop
xor
fwait
sbbl
add
je
sarb
push
aaa
mov
add
xchg
mov
add
adc
inc
cmp
and
sub
mov
add
xchg
add
mov
imul
xchg
xchg
fldl
or
cmp
xchg
mov
push
add
out
add
shll
cli
loop
mov
scas
jb
pop
add
add
jae
insl
fstpt
add
add
jns
sub
adc
and
or
cmp
and
xor
adc
inc
xor
xchg
xor
add
add
add
out
mov
data16
loop
add
imul
pop
add
stos
fidivrs
inc
add
add
pop
add
std
and
add
mov
dec
add
rorb
cmp
ds
data16
repnz
jl
cli
sbb
stos
or
pusha
add
lcall
imul
add
imul
sbb
adc
mov
stos
add
add
cmp
add
cmpsb
out
xor
mov
add
pop
add
add
add
orb
jmp
insl
fwait
push
out
add
jo
adc
outsb
add
and
cmp
add
test
mov
inc
pcmpeqb
int
repz
test
enter
cmpsl
or
jno
add
nop
icebp
dec
xor
add
adc
call
xchg
jnp
mov
add
xchg
insb
add
dec
and
jbe
stos
cmc
sar
xchg
adc
std
add
mov
add
test
popf
xlat
mov
jo
sbb
xor
jmp
ja
mov
add
add
xchg
jnp
add
add
or
mov
add
stc
jmp
adc
add
sbb
daa
pop
jae
push
lock
imul
adc
movsb
data16
add
sbb
add
push
add
mov
add
sbbb
cmp
jmp
push
add
sub
aam
xor
data16
rol
sub
inc
loopne
add
push
mov
inc
add
mov
lods
imul
loop
add
cmc
xlat
mov
add
add
or
aaa
test
shr
cmp
shll
cld
test
add
add
add
add
add
add
push
add
out
or
aad
mov
cmp
cmpsb
add
add
lods
or
dec
add
add
add
add
aam
cmp
push
or
shl
in
ficompl
and
stc
xchg
push
add
inc
add
jle
cmc
adc
clc
mov
add
lds
add
je
pop
lds
inc
add
inc
add
add
stos
repnz
inc
pusha
add
add
jge
jp
fnstsw
mov
loop
lds
mov
cmp
add
cld
or
lret
xchg
lock
rorb
mov
xchg
jmp
push
sub
cmp
mov
fbstp
ljmp
shlb
fidivs
test
add
cmp
mov
add
popa
mov
inc
fidivrs
add
add
add
aaa
add
repz
xlat
xchg
mov
add
repnz
call
adc
das
pop
add
ljmp
xor
cmp
cli
pop
out
lock
int
adc
push
add
add
push
add
add
inc
add
cmp
loop
add
int
cmpsb
adc
add
dec
inc
add
mov
iret
daa
sbbl
dec
add
lea
rcr
lret
fcmovnu
loop
add
sub
popa
inc
add
shlb
test
jnp
sbb
xchg
mov
pop
xchg
subl
add
fld
pop
dec
adc
xorb
add
dec
add
add
aaa
popa
sti
repnz
adc
into
call
push
add
lods
and
imulb
dec
add
add
incb
adc
scas
adc
lds
add
push
add
mov
mov
add
dec
mov
addr16
loope
and
jb
or
xor
add
inc
add
mov
adc
das
or
insb
add
cwtl
mov
add
dec
adc
push
add
sub
mov
pop
add
adc
dec
cmp
cmp
hlt
sub
arpl
dec
add
test
xchg
std
shr
inc
out
fadd
sbb
push
add
push
inc
imul
or
mov
add
in
movsb
and
dec
add
add
popf
imul
add
and
aaa
rclb
gs
movsb
dec
inc
cmp
and
jmp
mov
mov
add
dec
add
sbb
ret
cmp
sub
jp
sub
call
jno
add
je
popf
add
scas
sahf
push
add
das
sub
pop
inc
push
add
clc
repnz
sub
xchg
imul
outsl
loope
inc
add
jbe
mov
cwtl
test
lea
mov
cmpl
add
add
mov
add
gs
outsl
adc
gs
mov
jg
mov
add
or
sarb
add
incl
add
and
add
in
add
aas
ret
sub
xchg
mov
add
pop
fcomip
xor
push
add
scas
addr16
jnp
orb
mov
scas
lret
add
movsb
mov
out
hlt
lock
add
std
add
add
aam
movb
push
sub
bound
cwtl
pop
add
dec
add
pusha
add
je
jp
fists
shl
sbb
add
add
adc
jp
push
ret
lea
mov
mov
movsb
lcall
add
mov
add
loopne
xorl
add
ja
add
in
push
add
add
mov
in
sbbb
fsubrs
add
stc
xor
ja
int3
dec
or
or
jle
mov
push
jg
add
push
add
lods
bound
pop
add
dec
xor
pushf
sub
mov
add
add
xchg
ja
fists
add
int
js
in
add
and
push
test
pop
add
out
add
add
add
add
clc
cli
mov
jp
add
fistpl
add
popa
test
nop
iret
lock
or
cli
xor
movsl
ljmp
mov
xchg
or
pop
add
fstpt
add
add
add
add
out
mov
mov
stos
daa
cld
popa
mov
aaa
clc
add
push
add
dec
cmp
into
insb
add
dec
insl
xor
pop
mov
add
movsl
mov
sub
cmp
aas
sahf
cmp
jae
add
add
add
xchg
les
inc
add
sahf
sbb
and
add
mov
sub
test
add
add
and
push
add
and
test
inc
add
push
out
sarb
pop
add
ds
mov
xchg
loopne
add
pop
imul
jo
and
add
cmp
jno
add
sbb
mov
add
divb
pop
mov
add
xor
lds
xchg
stc
xor
cmp
add
xor
push
sarl
jbe
xchg
dec
add
add
and
lcall
xchg
xchg
out
hlt
inc
add
adc
in
ret
mov
stos
sub
jecxz
data16
scas
adc
int3
jb
pop
add
add
push
add
adc
add
shl
pushf
repz
outsl
dec
add
mov
mov
pop
add
add
add
data16
hlt
mov
inc
mov
std
mov
mov
fiadds
mov
adcl
add
stc
sub
daa
imul
cltd
jns
and
sbb
xchg
add
mov
xchg
insb
add
mov
idivb
sbb
add
sub
adcb
adc
subl
push
mov
add
pop
bound
out
mov
sbb
add
das
lea
add
add
push
add
dec
xor
jmp
sti
into
mov
and
cwtl
add
push
add
mov
pop
das
lcall
add
jge
das
mov
out
loop
add
ficoml
xchg
push
adc
add
shrl
dec
add
push
add
mov
gs
push
add
and
and
test
mov
loopne
cli
mov
pusha
add
pop
add
ret
imul
push
lods
xchg
pushf
rclb
test
cltd
sbb
or
setg
jl
data16
add
add
in
adc
std
dec
add
jmp
aam
push
push
add
movsl
lret
sub
push
push
add
fwait
shrl
leave
adc
mov
add
stos
inc
in
test
imul
mov
lahf
cmp
cmpsb
hlt
std
jno
add
cwtl
push
add
push
inc
add
add
push
add
mov
or
dec
outsb
add
dec
add
add
add
into
mov
add
shrb
mov
lret
lods
sbb
mov
add
jnp
movsb
ljmp
into
ds
and
dec
add
es
jg
loope
sub
mov
outsb
add
sbb
stos
adc
add
flds
inc
addl
add
dec
push
add
lods
stos
out
test
push
add
pop
mov
sbb
test
enter
xchg
cmp
add
test
dec
add
add
xchg
mov
jecxz
add
sub
adc
mov
add
int3
popa
adc
int
arpl
pop
out
add
push
add
scas
mov
add
lods
pop
push
add
or
mov
add
xor
lcall
sub
imul
add
add
sbb
dec
add
loope
mov
mov
ja
add
add
add
into
and
add
xor
cltd
fstpt
add
push
add
pushf
xchg
and
xor
orb
mov
add
cmpsl
jmp
cmp
xor
add
add
or
inc
aam
fsub
fnstsw
xchg
push
lcall
mov
pop
add
add
jle
xchg
gs
add
fsubp
or
add
aam
sub
fnstsw
xchg
jle
mov
and
ret
test
xchg
cmp
dec
add
add
xor
stos
pop
add
jg
add
add
dec
add
lret
pop
cmp
inc
add
jb
fistps
or
add
dec
add
add
pusha
add
jmp
dec
out
sub
aad
jecxz
sbb
lods
cmp
jne
jbe
std
js
ror
mov
inc
add
gs
add
orb
sar
fdivs
sbbl
or
xor
add
repnz
add
and
xor
out
adc
clts
add
dec
add
cmp
inc
add
repz
add
imul
push
add
repnz
fiadds
pop
lock
mov
jb
xor
add
ret
cmp
sti
lret
cmp
out
dec
repz
pop
push
add
add
xchg
cmc
cmp
sub
fstpl
add
adc
or
jne
add
aad
pusha
add
add
lret
mov
scas
out
imul
add
xor
lret
std
inc
jnp
data16
push
fnstcw
jbe
push
data16
movsl
test
es
sub
das
dec
or
add
jle
mov
add
int3
in
outsl
rcrl
pop
mov
test
ret
addl
mov
scas
stos
xor
dec
sbb
int3
pushf
jmp
inc
add
movsb
xor
cmpsl
pop
inc
add
add
hlt
inc
push
add
ror
aaa
fcoms
daa
dec
add
push
add
add
add
sbb
add
lret
add
add
fdivs
xor
cmpsl
int
add
adc
add
add
aam
aad
cmpsb
jmp
add
aas
mov
out
arpl
add
xor
add
push
add
add
adc
add
or
push
add
jb
pop
decb
add
or
aam
cmp
add
xchg
repnz
cmp
add
cmp
idivb
cmp
sbb
push
add
stos
out
xchg
xor
scas
inc
add
jne
adc
je
dec
add
add
mov
add
xor
push
inc
add
inc
jno
add
add
add
sbb
sbb
pop
xchg
add
loop
add
jnp
push
adc
and
popf
stc
repnz
addr16
add
sbb
fsubs
inc
jb
arpl
dec
add
leave
les
add
es
dec
add
lds
add
jge
hlt
add
je
push
add
xchg
inc
cmp
jnp
adc
pop
and
cmp
cmp
iret
jmp
les
out
adc
cmpsb
push
sbb
jae
lret
enter
fildl
js
pop
int3
xor
add
add
aas
add
jo
dec
cmp
fmulp
mov
push
add
lahf
jg
pusha
add
add
mov
sub
jne
add
add
lret
inc
add
hlt
push
add
cld
movsl
sahf
mov
add
pop
arpl
add
push
add
jo
into
pop
mov
add
xchg
in
mov
cmc
add
aas
sbb
out
jg
in
int3
mov
or
lret
jg
mov
jne
pop
push
mov
mov
cmp
add
fsts
iret
pop
cmpsl
insl
lods
cmp
leave
je
stos
xor
or
loopne
scas
push
add
cmp
mov
add
adc
jge
add
jne
enter
rcrb
xchg
cmpsl
push
and
add
jg
sub
mov
lock
insl
mov
lcall
add
shrl
jne
fidivs
sbb
add
ret
add
inc
xchg
jnp
pusha
add
test
mov
out
push
ficoms
mov
add
add
mov
add
pop
rolb
imul
pop
xor
pushf
test
and
and
push
dec
add
mov
test
add
push
add
or
xchg
sti
int
add
jne
dec
add
add
mov
cmp
loopne
rorl
jecxz
movsl
pop
xor
add
add
sub
jmp
sbb
push
insl
mov
add
stos
fcomi
mov
add
icebp
push
xchg
daa
cmp
sub
ljmp
adc
push
add
sahf
leave
fdiv
nop
leave
cmp
add
fs
mov
add
daa
test
jg
push
add
mov
test
add
in
mov
add
add
mov
add
add
sbbl
add
lock
mov
add
push
add
add
add
dec
cltd
iret
cmp
inc
mov
stos
inc
add
add
or
add
pop
std
push
add
inc
add
out
and
cmpsl
arpl
add
add
inc
add
add
icebp
dec
mov
add
add
mov
jnp
add
and
iret
mov
add
cli
loope
push
add
mov
mov
scas
pusha
add
add
ficoms
add
addl
mov
ljmp
add
out
sahf
popa
lret
or
mov
jb
cld
lahf
cltd
les
add
divl
jne
add
mov
xor
ljmp
jmp
je
orl
add
icebp
lret
and
xor
arpl
cmp
mov
dec
insb
add
mov
in
push
add
orl
add
cmp
and
mov
mov
add
shll
pop
add
dec
add
in
add
imul
test
ja
add
mov
addr16
add
out
dec
add
push
add
cwtl
rclb
push
mov
add
xchg
xchg
xor
lock
mov
dec
add
add
mov
call
in
cwtl
outsl
into
gs
in
cwtl
mov
add
insb
add
and
enter
add
leave
data16
pop
mov
and
add
add
cltd
mov
nop
cmp
or
jb
scas
lea
xor
add
add
add
fucom
jecxz
add
cltd
adc
xor
fchs
int3
xor
sbb
or
aad
das
cli
pop
add
cld
in
add
xor
iret
rclb
push
add
push
mov
ljmp
imul
and
mov
mov
shll
cmpsb
xor
pop
rcrl
adc
adc
add
jbe
xchg
je
das
outsb
add
or
sub
aas
add
add
push
add
dec
stc
sbb
pop
add
scas
jg
rol
mov
add
shl
adc
cmp
lcall
xchg
or
fwait
add
or
fldcw
stos
sbb
addr16
add
jb
or
insl
je
dec
add
push
add
add
mov
hlt
add
push
add
jbe
arpl
or
xchg
sbb
scas
dec
add
inc
add
add
cltd
into
insb
add
data16
mov
aad
push
add
adc
add
or
call
add
into
jnp
das
add
add
add
in
jb
xor
mov
ljmp
or
mov
add
jns
add
and
mov
add
push
mov
and
add
fsubp
nop
sbb
mov
inc
add
add
push
sbb
xchg
pop
push
add
dec
add
je
add
sub
call
xchg
sbb
xor
jmp
into
test
dec
test
pushf
or
and
add
adc
mov
jae
ret
test
jle
dec
pop
adc
and
add
andl
add
and
jne
jge
jne
sub
js
out
out
add
sbb
inc
mov
lcall
inc
sub
pop
add
in
adc
insl
je
negl
add
pop
add
add
lret
ret
daa
add
push
or
mov
add
out
jmp
aaa
mov
int
mov
cwtl
mov
add
insb
add
add
add
fnstenv
xchg
mov
sbb
outsl
sbb
sub
pop
add
add
outsl
dec
dec
add
stos
xlat
sbb
out
dec
add
pop
out
adc
xchg
sarl
mov
add
out
hlt
xchg
jb
mov
fistpll
add
add
add
lds
add
out
push
leave
dec
leave
sub
in
data16
out
and
outsl
cli
or
stos
test
jge
add
jno
xchg
lock
inc
sbb
add
shll
rcr
pop
add
ljmp
or
dec
shrb
push
mov
lds
add
cmpsb
jns
cmpsl
mov
pop
loope
inc
add
jnp
or
cmp
loopne
add
xchg
cwtl
sbb
mov
add
push
cmp
bound
in
add
cli
lods
sub
lcall
push
add
int
pop
fsub
mov
in
hlt
push
sub
lods
test
push
add
add
jae
xchg
mov
test
ret
insl
add
add
add
enter
inc
daa
rcr
add
test
test
add
push
add
sbb
ds
roll
cld
mov
fdivr
dec
add
into
xor
sub
imul
cmp
and
out
fs
cltd
nop
pop
add
dec
add
aas
sbb
or
loope
test
inc
add
xchg
dec
jns
iret
xchg
in
cmp
add
add
sbb
out
xchg
sub
cltd
fsubp
and
fildll
add
movsb
ljmp
fcmovnbe
fs
out
scas
lret
mov
add
add
add
pushf
and
rol
add
push
add
pop
add
pop
add
pop
das
lds
aas
aam
add
andb
adc
adc
dec
out
adc
mov
add
add
out
add
cmpsb
mov
add
add
pop
add
mov
add
fmull
in
and
popf
cmp
imul
add
fistpll
mov
add
or
fbstp
mov
insl
stos
test
add
int3
sbb
inc
add
add
into
js
out
and
xchg
cmp
jnp
or
sahf
pop
fwait
xor
or
add
mov
add
add
lds
cmp
and
dec
cmp
into
cmp
add
sti
jo
rcrb
jl
add
outsl
das
mov
add
add
add
add
mov
add
pop
and
add
add
push
add
adc
rcrb
clc
js
fld
inc
inc
add
sbb
pop
and
decb
leave
mov
outsl
lods
sti
add
loop
std
lahf
jl
orl
add
push
add
or
lahf
jl
cmc
rcll
xchg
adc
leave
jp
pop
add
add
stos
int3
sub
dec
add
add
add
push
add
add
mov
pop
jb
mov
scas
dec
add
or
or
sbb
das
into
in
push
mov
aam
push
add
into
nop
dec
add
pop
ja
sti
outsl
adc
sub
in
lea
sbb
jns
mov
fistpll
add
add
fisubrs
lock
add
loopne
sbb
add
add
enter
push
stc
ja
add
jae
add
add
imul
xchg
jecxz
pop
add
push
add
les
filds
gs
add
dec
and
repz
add
and
xchg
faddl
jg
test
jnp
add
add
jl
test
inc
add
dec
add
mov
test
dec
add
push
add
jge
xchg
and
dec
add
mov
add
arpl
enter
add
add
mov
addl
add
lods
mov
add
add
jbe
getsec
jbe
data16
shlb
add
add
in
inc
shlb
xchg
lret
push
add
or
mov
mov
add
idiv
xor
or
addr16
shll
add
incl
add
test
push
add
pop
add
jne
in
clc
inc
add
push
sar
movsb
jp
movsb
push
add
add
rcl
int3
aad
push
add
add
into
push
add
sub
fisubrs
sub
imul
cmp
scas
cmpl
push
and
or
cltd
std
cmp
add
push
add
popf
dec
cmpsb
imul
add
stos
or
push
push
dec
add
nop
fsubrl
movsb
jl
mov
or
pop
test
add
add
scas
mov
dec
jae
lds
insb
add
add
mov
fsubrs
cmp
adcl
psubsb
ficoml
jo
imul
mov
sbb
add
add
add
xchg
or
rol
aaa
cmp
call
add
add
shrb
and
pop
add
add
lahf
cmpsl
push
add
xchg
inc
into
sub
adc
add
fcoml
ret
rcll
jmp
add
push
addr16
mov
add
mov
jne
subb
pop
pop
add
add
ds
pop
add
sarl
add
xor
push
bound
jb
jnp
add
dec
add
fdiv
pop
add
and
data16
iret
in
out
cmp
aad
sahf
mov
add
jbe
pop
add
mov
arpl
jmp
add
add
add
xlat
imul
imul
dec
clc
stos
in
dec
add
movsl
mov
fwait
jb
or
push
pop
xor
sbb
cmpsl
and
mov
clc
daa
ds
mov
sbb
shlb
std
roll
add
insl
repz
sbb
je
xchg
dec
jae
push
mov
gs
clc
adc
or
add
cwtl
xchg
pop
jnp
lds
arpl
data16
sub
shlb
daa
sbb
sub
xchg
fldl
add
imul
inc
add
mov
adc
xor
xor
add
ss
cmp
fisubs
out
add
xlat
decl
xchg
pop
add
int3
push
add
add
jmp
shlb
sub
sahf
add
fs
pop
add
cmpsl
pop
call
cld
add
icebp
mov
cmpb
xchg
or
mov
outsl
imul
xor
popa
xchg
test
or
sub
add
jnp
add
fs
push
add
clc
cltd
push
and
sub
and
jbe
jae
daa
in
mov
and
sbb
mov
add
aad
sahf
bound
add
fcmovbe
je
and
jns
add
push
sbb
push
add
xor
iret
mov
add
in
add
stos
mov
or
add
add
xchg
lahf
dec
cmpsl
stos
xchg
loope
pusha
add
or
and
sub
stos
jnp
add
add
arpl
dec
mov
add
fildl
add
push
add
fmuls
xchg
shlb
cmp
mov
add
or
mov
sub
push
add
daa
pushf
sbb
sbb
jbe
test
fimuls
add
add
stc
test
outsl
add
add
inc
add
add
add
add
es
les
test
dec
into
or
adc
sarl
add
adc
mov
loop
add
push
cmpl
ja
int3
fisubrs
adc
or
pushf
jo
fstpl
pop
add
add
sbb
xchg
stc
in
jl
je
sbb
lea
mov
and
mov
cmpsl
inc
add
andb
scas
and
adc
mov
add
mov
insb
add
xchg
pop
add
icebp
movsl
repz
sti
add
test
cltd
mov
add
lods
push
add
add
add
or
pop
add
add
popf
push
orl
add
sbb
add
push
add
bound
pop
add
add
mov
push
and
add
lahf
add
mov
lahf
imul
dec
popa
fldcw
xchg
fcoms
shlb
jl
cmp
mov
fwait
xchg
shll
das
repz
and
xchg
pusha
add
pop
mov
add
cmp
xchg
add
push
repz
push
add
and
lea
add
add
std
xor
mov
je
movsb
jo
test
add
adc
lcall
add
fmul
and
test
repz
mov
pushf
or
add
lret
lock
addb
jecxz
add
inc
add
lret
pop
aaa
repnz
push
add
add
push
add
add
xchg
stos
xor
xor
daa
add
aas
add
push
add
jbe
rcrb
lahf
pusha
add
arpl
pushf
cmc
sbb
mov
cmp
adc
add
aad
sbb
aas
mov
popa
or
mov
add
aaa
daa
xchg
add
jle
inc
repz
add
imul
mov
pop
test
add
aaa
rcl
mov
fcoml
mov
jnp
cmp
push
add
movsl
pop
add
push
add
int
push
popa
push
pop
mov
inc
add
lahf
dec
add
int3
xchg
adc
xchg
mov
add
xchg
push
add
add
popa
xlat
or
lret
aaa
push
add
jmp
push
or
jbe
pop
adc
shll
xchg
pop
add
movsl
mov
dec
pop
add
popf
das
out
dec
movsl
mov
sub
ret
mov
add
jnp
test
add
adc
pop
add
imul
jb
pop
gs
jnp
mov
fwait
addb
or
dec
add
or
adc
dec
add
add
add
cmp
xchg
rcrb
insl
add
mov
jp
es
dec
add
mov
pop
lret
pop
mov
cmp
inc
mov
mov
inc
add
add
inc
add
leave
lods
add
outsl
pushf
push
repz
mov
sbb
cmpsb
fimuls
add
jmp
aad
leave
cltd
fadd
pop
push
jl
adc
xchg
mov
push
add
aaa
test
jle
ds
movsl
inc
push
add
lods
lret
add
jae
int3
ja
out
neg
fldt
jge
mov
dec
add
stos
out
xor
add
std
xchg
nop
cmpsl
jae
sbb
pop
or
jmp
loope
popa
imul
imull
hlt
adc
add
add
int3
jne
int
add
js
call
sub
xor
add
jo
push
outsb
add
lahf
lcall
fdivl
jno
push
add
aaa
dec
add
and
add
adc
fldcw
jmp
sbb
xchg
pop
add
lahf
out
jmp
push
add
aam
jne
fsubs
add
std
test
jae
add
add
aam
mov
sahf
dec
add
sbb
jno
push
jno
popa
int
add
insl
add
add
sbb
adc
fsub
dec
and
pop
add
fisubrs
sub
aaa
in
pop
add
add
jne
add
add
and
add
add
aad
or
dec
aas
lret
sub
ret
fbstp
mov
and
mov
popf
dec
add
add
imul
sub
fcoms
mov
add
aaa
pushf
push
add
shll
add
push
add
cmpl
sbb
stos
movsl
xchg
in
add
call
rorb
add
add
in
popa
cmpsb
test
inc
add
xchg
add
push
outsl
mov
mov
mov
ja
add
jle
inc
pop
bound
mov
add
std
mov
movsb
pop
add
je
dec
into
int3
add
stos
test
add
add
add
inc
enter
sub
and
fidivrl
add
fisttpl
xor
add
and
sbb
aaa
dec
fstp
add
mov
add
xchg
nop
stc
jp
jnp
pop
add
jb
and
ficoms
enter
roll
bound
mov
add
cmp
jo
jge
add
fwait
or
add
cmp
lcall
jp
cmp
add
add
stc
or
add
add
jo
xchg
lahf
loop
repnz
test
add
repz
add
pushf
test
lahf
add
orb
xor
pop
psubd
fmul
sbb
add
test
cld
pop
xchg
mov
add
add
add
jb
jno
stos
scas
lea
jns
inc
add
and
sub
daa
or
push
add
ret
adc
jb
xchg
test
jb
ss
push
cmpl
xchg
outsb
add
fdivrs
mov
add
and
mov
fimuls
xor
mov
popf
sbb
add
pop
mov
je
jge
add
and
out
push
dec
add
add
out
inc
add
jp
scas
push
add
push
into
xor
dec
sub
add
xchg
cwtl
adc
sub
jae
add
add
inc
inc
xchg
mov
in
sahf
cmp
jns
adc
sbb
xor
aam
mov
adc
inc
cmp
in
fwait
or
jae
xchg
xchg
subl
cmc
sbb
add
push
add
mov
add
add
pop
aad
add
add
jae
add
add
arpl
push
mov
add
xchg
pop
ja
cmpsl
sub
pop
adc
aam
dec
add
add
add
add
push
add
dec
mov
add
clc
adc
movsb
jge
in
cld
push
lret
aas
inc
add
xchg
or
or
leave
inc
and
pop
lods
stos
cwtl
lock
cmp
aas
add
xlat
fstpl
add
sub
int
push
jecxz
add
push
add
int
test
sub
push
add
hlt
lods
inc
add
cmp
add
sbb
mov
jns
xchg
fcmovbe
data16
add
loop
inc
add
lea
repnz
push
add
jg
dec
add
lcall
ja
stos
sub
in
adc
test
jb
push
add
lahf
xor
mov
mov
and
sbb
dec
add
test
xchg
jo
jbe
aam
int3
cmpl
jns
int3
in
mov
psrlw
mov
mov
ffreep
inc
jns
imulb
add
or
xor
sbb
shrb
add
pop
add
xchg
mov
idiv
bound
mov
lcall
aad
add
or
fidivs
add
adc
dec
jecxz
add
aam
add
ret
or
aad
insl
int
xchg
cmpsl
mov
push
inc
lcall
add
in
add
divl
sbb
xchg
out
xor
rcll
das
jno
add
add
vpcomw
add
pop
add
add
mov
and
mov
xchg
xchg
stos
cmp
mov
push
add
adc
fldt
xor
or
sub
loop
inc
rorl
xlat
jl
aam
dec
add
orl
jo
jno
subb
jns
xchg
mov
imul
add
jle
ja
out
test
mov
call
out
add
out
jnp
xchg
add
pop
add
ja
mov
data16
sub
mov
pop
add
scas
jne
sbb
fdivr
add
push
add
xchg
push
out
rolb
in
add
aam
add
mov
inc
add
add
and
xlat
add
jo
lret
data16
fstl
clts
add
jo
ljmp
push
sahf
jbe
int
js
push
add
pusha
add
mov
in
add
add
sub
jl
mov
add
add
jge
neg
lock
add
add
sbb
std
mov
push
add
pop
add
sub
mov
lret
sbb
rolb
xchg
xlat
add
imul
mov
add
adcb
add
push
dec
add
or
fwait
in
mov
enter
lret
movsb
mov
addr16
add
add
lea
jae
add
dec
xor
add
add
cmpsb
pop
xorl
add
movb
ja
add
push
add
repz
cltd
cltd
inc
add
add
aaa
push
add
jo
and
add
add
inc
add
mov
inc
add
imul
or
imul
add
push
add
pushf
testb
cmpsb
inc
xchg
xor
jo
pop
fimuls
mov
mov
movsb
dec
add
cld
jns
int3
outsb
add
sub
add
lds
add
ret
add
sbb
mov
fwait
xor
pusha
add
pop
add
add
bound
push
ret
jmp
xor
pop
mov
mov
adc
lcall
pop
add
out
lock
add
insl
popf
sub
xchg
aad
add
rcrb
sbb
add
test
mov
dec
xchg
iret
mov
mov
mov
jmp
dec
mov
sub
push
add
sub
dec
add
inc
cmpb
call
fsubs
scas
jge
int3
mov
add
inc
add
sub
ljmp
add
add
add
add
add
adc
add
jne
add
add
add
add
int3
adc
add
adc
sbb
jae
add
sbb
jb
jecxz
stos
out
or
push
jne
push
add
ret
jno
cs
jno
pop
cmp
sbb
gs
arpl
mov
and
add
andb
push
add
add
adc
fistpll
add
loopne
outsb
add
add
insb
add
dec
add
and
mov
pusha
add
push
fidivrs
xor
sub
dec
add
cmp
data16
dec
add
add
mov
add
jo
pusha
add
xlat
cmp
in
fcomi
cmp
mov
jecxz
add
mov
adc
mov
push
add
mov
add
adc
xchg
dec
add
ljmp
add
aaa
xchg
lds
outsb
add
mov
add
and
imul
xor
add
out
jno
add
repz
adc
xor
xchg
inc
add
push
add
xchg
jecxz
fisubrs
clc
push
add
loopne
fwait
dec
add
mov
or
mov
add
cli
and
mov
sbb
call
mov
add
sbb
pop
add
mov
cmpsl
xor
dec
add
andb
cmpl
add
and
mov
add
pushl
mov
add
or
fstpt
add
adc
mov
push
add
or
js
in
mov
psubsb
addb
add
pop
shlb
add
ficompl
pop
add
push
sub
daa
arpl
xlat
push
add
mov
xor
sbb
jo
push
add
add
mov
das
push
add
fiadds
or
dec
add
push
fs
pop
add
add
add
sub
add
jbe
nop
push
mov
in
in
add
pop
sbb
dec
int
xor
and
pop
ret
mov
mov
mov
ljmp
add
add
add
gs
rol
push
iret
in
add
adcb
subl
add
xor
shr
in
out
add
add
fwait
stc
pop
jbe
jl
jns
jp
or
cmp
or
stos
or
pop
push
add
stos
add
add
lock
and
pop
add
mov
add
ret
add
loopne
cwtl
orb
daa
sub
ror
mov
sub
add
sbb
in
int
xor
dec
add
mov
pop
add
and
pop
adc
imul
push
add
add
lds
cltd
call
sub
add
jle
push
out
enter
push
sub
std
fdivl
add
cmp
mov
lock
andb
pop
add
in
adc
pop
bnd
data16
add
pop
add
jno
mul
addb
add
or
xchg
add
push
mov
xor
push
add
sub
std
jb
int3
or
push
add
sub
aam
xchg
data16
addr16
add
adc
xchg
add
add
lods
adc
mov
sarb
pop
xchg
sub
mov
adc
fsubs
add
mov
add
and
sub
clc
and
popf
and
fwait
sub
add
cmc
xor
div
push
loop
lret
mov
pushf
mov
and
sahf
sbb
jo
sub
sub
ror
push
add
mov
add
test
inc
add
mov
add
add
dec
add
je
jbe
add
jne
add
movsb
in
jmp
xor
add
nop
dec
mov
xchg
mov
clc
andl
movsl
in
sbb
ret
inc
mov
add
add
cmp
fsts
add
dec
and
sbb
test
and
mov
into
jp
mov
add
dec
add
add
add
lret
xchg
mov
leave
jg
test
add
or
add
or
pop
hlt
sbb
add
lret
add
push
add
leave
push
push
add
add
insl
cmp
add
add
add
add
jl
into
fcoms
mov
cli
je
mov
add
in
push
add
stos
sbbl
push
add
add
cli
cmpsb
push
add
dec
add
add
sub
sahf
sahf
arpl
loope
push
mov
jecxz
aad
out
aas
icebp
cmp
add
pop
xchg
mov
pop
add
add
mov
add
lods
arpl
cmpsl
and
push
pop
mov
jp
mov
add
iret
xchg
ficompl
sbb
add
push
add
stos
rcll
lods
jo
bound
inc
dec
add
add
pop
mov
push
add
cmc
or
or
insl
pop
or
add
mov
into
cmp
or
add
add
mov
repnz
rcl
pop
add
out
cmpsl
mov
add
add
fstps
in
pop
test
push
xchg
call
mov
bound
push
add
dec
xchg
jle
push
add
sbb
mov
aad
sub
add
cmp
cwtl
jmp
popa
mov
ret
xchg
inc
push
outsl
xlat
nop
jl
mov
adc
or
dec
add
hlt
fucomp
movsl
in
fisubl
xchg
add
add
push
jecxz
pushf
xadd
jecxz
add
or
pop
sub
add
push
add
add
mov
test
adc
popf
pop
add
ret
jnp
out
and
add
xchg
xchg
jmp
add
add
jp
add
push
add
pop
add
add
jge
dec
cmp
mov
je
in
rcl
mov
imul
add
lods
mov
inc
add
add
xchg
popf
sub
add
cli
mov
mov
adcl
insl
dec
add
xchg
loopne
ja
stos
jl
mov
out
cmc
fdivrl
add
jmp
addb
adc
movlps
mov
popf
push
add
add
sub
adc
add
stos
out
xor
in
pop
sbb
pop
push
add
or
and
gs
add
pop
add
into
cmp
frstor
fwait
or
add
adc
out
mov
pop
add
mov
jbe
xor
fiadds
add
rclb
add
add
sub
mov
std
les
add
xchg
pop
and
int3
jmp
xchg
inc
mov
sub
popf
adc
fildll
jns
pushf
sub
sti
cmp
rolb
cmp
add
jnp
add
or
push
add
push
add
push
add
add
icebp
jge
add
nop
jnp
and
xchg
test
fcomi
push
add
xchg
rorb
bound
arpl
aad
incl
das
imul
stc
xchg
stc
xchg
jbe
mov
subl
inc
add
pop
add
mov
add
pushf
in
cmp
mov
loopne
push
add
enter
icebp
lahf
dec
int3
cs
sub
data16
add
add
sbb
add
sbb
adc
add
nop
les
imul
out
push
add
stc
add
mov
inc
sub
or
add
lret
hlt
mov
sbb
leave
pop
or
mov
add
icebp
test
jmp
jmp
fldenv
in
cmpsb
cmpl
push
and
repnz
inc
shr
push
add
push
add
add
add
dec
ret
and
dec
add
add
inc
or
mov
add
push
add
jle
mov
add
stos
movb
aam
add
test
scas
push
add
movsl
jmp
mov
adc
addr16
pop
addr16
dec
add
add
add
jb
lahf
fisttps
cmp
adc
subb
add
cld
jbe
xchg
stos
or
sbbb
pop
into
fisubl
add
out
daa
cld
jne
dec
push
add
sub
into
pop
push
loopne
push
add
jnp
sbbb
jecxz
stc
mov
push
add
mov
sbb
sbb
xchg
xchg
aam
in
or
sbb
sub
sbb
mov
xchg
add
pop
add
sub
add
add
das
add
mov
dec
add
mov
add
mov
add
daa
lret
inc
push
add
add
push
add
add
les
in
ljmp
lahf
jns
jb
mov
adc
add
mov
add
jmp
mov
add
je
lods
add
add
dec
pop
fbstp
add
gs
enter
add
add
adcb
inc
imul
mov
and
fisttps
and
jno
add
frstor
mov
arpl
push
add
add
lock
cmp
and
nop
cld
jbe
xor
pop
aad
mov
xor
add
fcomi
lcall
cli
push
mov
iret
aad
sahf
dec
mov
and
hlt
and
mov
mov
inc
pop
xlat
add
xchg
add
fistl
cmp
or
mov
jecxz
and
aam
dec
add
cmc
sub
and
loope
mov
pop
add
arpl
add
lods
arpl
cmp
xchg
push
add
iret
push
fsts
add
and
adc
add
add
inc
aaa
or
pop
add
mov
mov
dec
add
or
mov
cwtl
movsb
mov
ret
stc
add
sti
out
dec
add
lahf
lds
mov
addr16
add
pop
add
add
mov
add
movsl
jmp
add
push
repz
add
dec
jae
pop
and
jge
add
mov
add
push
adc
cmpsb
fsubr
inc
add
scas
add
push
in
push
scas
imul
add
sub
add
jae
mov
pop
cld
and
into
in
lods
pop
cld
cmp
mov
outsb
add
jns
add
bound
dec
das
aad
xor
xlat
mov
inc
add
int
pop
push
mov
mov
add
add
cmp
icebp
test
pop
add
mov
push
add
test
cmp
jge
add
add
xlat
repnz
dec
add
in
cmp
pop
add
or
push
add
xor
add
and
pushf
cmc
sbb
enter
std
enter
add
ljmp
leave
aas
jnp
mov
mov
bound
test
lds
pop
shl
mov
pop
mov
pushl
push
add
test
fptan
push
add
cmp
xor
dec
add
fldl
mov
cmc
popl
shlb
gs
sub
sbb
cmp
repz
add
in
add
add
pop
outsb
add
mov
enter
jp
mov
inc
xchg
cmc
jb
data16
xchg
inc
add
add
mov
jp
aam
xchg
inc
nop
dec
add
push
add
lea
mov
cmp
data16
cmpsl
mov
push
add
and
mov
cmp
mov
add
or
add
mov
sti
cmp
adc
orl
in
add
mov
xchg
and
popf
sahf
fimuls
adc
ret
stc
and
lret
lds
add
in
push
add
cld
addb
mov
loopne
xor
pop
arpl
cmpsb
int
or
in
add
xlat
outsl
or
cmpsl
adcl
add
xor
pop
add
fld
inc
jmp
enter
jne
int3
bound
jge
add
add
loope
add
jl
pop
mov
add
add
lcall
in
addb
xchg
add
mov
add
rcrl
or
sub
scas
mov
push
mov
and
dec
add
pop
insb
add
add
lods
psubd
popa
insl
jge
add
roll
inc
add
mov
jle
adc
mov
shlb
add
add
mov
mov
mov
sbb
add
dec
add
sub
dec
add
jmp
insb
add
add
jl
test
add
dec
dec
add
fisttps
repnz
lret
fcoms
push
add
add
cmpb
scas
aad
mov
cmp
test
jg
add
or
inc
jle
jl
ret
fs
lea
neg
aaa
je
inc
in
lahf
icebp
adc
test
xchg
mov
popa
stos
xor
xor
add
sub
and
add
push
add
pop
sbb
int
add
movsb
movsl
push
insb
add
add
xchg
andb
jbe
cli
mov
sbb
and
in
add
add
mov
ljmp
add
iret
mov
add
add
push
add
gs
mov
in
je
mov
push
add
add
inc
inc
add
sahf
insl
arpl
add
pop
add
adcl
cltd
data16
mov
push
add
jmp
fwait
je
loope
out
stos
pop
ja
pop
add
dec
add
mov
sub
cmpb
out
add
add
xor
cmp
pop
xchg
je
hlt
mov
pop
loopne
fdivr
pop
add
movsb
popa
or
add
xchg
rcrl
inc
data16
mov
add
lea
lods
adc
shrl
lret
imul
pop
add
inc
add
mov
imul
dec
mov
mov
mov
sbb
sub
test
add
xchg
jbe
cli
or
fwait
out
or
add
gs
jp
lods
mov
push
add
data16
add
xor
mov
add
add
mov
xchg
cmp
filds
ljmp
push
je
je
fsubrl
push
mov
out
jns
out
add
jne
add
insl
cmpl
in
add
lahf
sbb
pop
inc
add
push
add
dec
add
bound
fimuls
xor
js
inc
add
dec
add
imul
out
fdiv
in
inc
cld
jae
lods
push
add
xchg
ljmp
pop
and
add
pop
xor
sub
inc
add
addr16
pop
add
xchg
out
sub
mov
lea
add
dec
add
add
insb
add
and
sub
dec
add
inc
add
ljmp
xchg
push
add
add
push
movsl
lret
jbe
add
lock
pop
arpl
add
pop
add
daa
sbb
jb
xchg
sti
imul
jns
xchg
pop
add
pop
lret
lcall
pushf
int3
push
stos
fistpl
mov
add
mov
add
add
les
add
pop
add
add
add
scas
aas
addr16
movsl
dec
mov
mov
cmc
lods
adc
pop
dec
call
or
movsl
or
add
add
dec
xor
xchg
arpl
mov
add
dec
add
xor
sbb
out
scas
mov
add
add
data16
pop
sbb
mov
pushf
lahf
fstl
mov
adc
fwait
arpl
add
add
je
pushf
or
add
lds
adc
data16
and
xchg
cmp
dec
mov
lea
add
sahf
add
add
clc
je
sub
xchg
sub
stc
out
xlat
lock
and
add
add
or
leave
sub
sbb
jecxz
xor
stos
shl
jge
mov
movsb
cli
inc
add
mov
or
adc
sbb
dec
add
add
pop
gs
cli
clc
out
jmp
sub
inc
add
cmc
cmpsb
rol
std
loop
add
dec
mov
enter
cmc
cmpb
cmp
add
add
xor
mov
add
in
jecxz
movsl
movsl
jp
sbb
aas
cmpsb
push
xchg
cmp
add
insl
test
add
xor
movsl
test
popa
aad
push
add
jb
jno
movb
mov
and
outsl
xchg
xchg
dec
shll
sbb
mov
add
test
mov
ret
fwait
outsl
and
std
outsl
xor
mov
neg
sbb
rclb
mov
cmp
mov
mov
cltd
out
fists
add
add
add
sarb
add
add
jne
add
pop
pop
add
sbb
rorb
mov
subl
enter
dec
fsubrl
add
int3
adc
dec
add
push
add
add
push
or
add
shrb
add
lods
fsts
add
imul
ds
notl
xor
inc
push
add
test
jl
cmpsl
sub
inc
popf
aas
jg
mov
and
js
jmp
push
lcall
lahf
lahf
test
in
inc
cmp
mov
out
cmc
addr16
mov
xor
out
sub
sbb
adc
cmp
cmpsb
test
in
in
add
sarl
add
cli
sahf
xor
mov
dec
add
cmp
ret
mov
enter
sbb
addl
or
in
xor
cmp
ret
mov
push
add
cmp
pop
ds
sub
mov
ljmp
add
xchg
mov
add
xchg
data16
loope
mov
inc
add
inc
xor
dec
add
shrb
add
in
jle
fidivl
inc
add
mov
jg
mov
in
add
add
add
pop
xor
mov
sbb
pop
adc
and
add
sarl
repnz
or
aas
icebp
dec
add
test
cmp
add
int
out
xor
xchg
in
add
add
in
fists
arpl
movb
cmp
xorl
nop
sub
xor
lcall
clc
push
add
push
add
dec
cmpsb
dec
mov
cmp
push
add
jle
sbb
js
and
or
and
mov
stos
sub
push
add
xorb
add
mov
sub
pop
inc
add
and
cmp
testb
add
mov
jbe
movsl
out
inc
add
xor
or
push
add
add
shl
imul
add
sub
mov
push
add
xor
pop
loopne
aas
xchg
add
jecxz
popl
add
daa
cmp
ds
push
sbb
push
mov
jmp
in
or
add
roll
pop
add
aad
adc
rorb
xchg
mov
imul
test
out
out
add
sti
sub
loop
xchg
movsl
lret
lret
jp
push
add
fsubrl
lods
dec
xchg
pop
add
add
out
mov
dec
les
popf
jmp
ret
popa
and
outsl
das
push
inc
add
inc
add
adc
add
add
sti
pop
loopne
jb
cmp
mov
add
imul
pop
dec
or
add
hlt
into
and
sbb
push
add
out
adc
add
scas
push
add
cmp
pop
push
inc
add
out
add
imulb
add
add
push
add
mov
add
mov
add
scas
sti
sbbb
popa
pop
add
add
into
push
add
and
in
call
test
inc
add
jnp
push
and
in
jp
js
in
in
adc
dec
repnz
push
add
add
stos
loop
mov
scas
das
jp
outsl
fsubs
add
jne
add
repz
pinsrw
sbb
jno
lret
aas
fwait
mov
mov
mov
dec
add
jecxz
add
fisubrl
mov
fidivrl
add
test
std
cmc
push
outsb
add
dec
mov
pop
push
add
or
sbb
dec
add
pop
add
jnp
enter
insb
add
jle
lret
sub
cmp
pop
les
repnz
lret
loope
stos
out
test
jae
add
push
add
out
out
add
inc
add
xchg
xchg
ret
add
aaa
fst
jnp
sub
loopne
lcall
repnz
push
add
and
lods
call
add
push
add
cmpsb
loop
add
add
les
cmp
adc
add
std
lock
and
mov
fmull
dec
add
cmc
jne
push
add
jae
rcr
cltd
outsl
leave
clc
adc
je
xlat
dec
add
stos
xlat
push
lds
sbb
insl
in
add
push
add
xor
in
int
add
pop
add
pop
xchg
sahf
aad
mov
test
mov
add
out
add
cwtl
mov
daa
into
sbb
xor
out
cwtl
dec
mov
cmp
mov
add
out
push
add
dec
jmp
cmp
rcll
jne
add
add
cmp
cmp
mov
shrl
mov
cmpsl
mov
add
or
mov
inc
add
iret
ljmp
sbb
push
add
cltd
xor
pop
xchg
xchg
add
push
add
add
aam
add
xor
dec
add
shll
loopne
add
add
xchg
xor
cli
cmp
bound
hlt
ja
fdivrs
data16
mov
enter
sbb
mov
subl
add
and
xchg
insl
rcl
das
adc
sub
mov
int
add
add
and
add
mov
out
add
xchg
cltd
add
hlt
rcrl
push
add
insb
add
cld
xchg
xchg
pop
je
aam
add
add
pop
dec
lock
jle
xlat
sub
add
sub
fisubl
or
insb
add
add
add
mov
mov
add
in
inc
push
add
jmp
cmpb
add
loopne
sahf
xlat
cmp
sbb
leave
inc
add
jg
add
insb
add
out
ret
add
add
jmp
push
add
mov
add
test
mov
xchg
negb
pop
js
in
jp
push
add
add
push
cld
push
push
out
jns
add
aam
pop
mov
jnp
or
shrb
leave
loopne
add
add
repz
mov
mov
stos
mov
mov
mov
pop
push
add
mov
add
jne
add
xor
sub
enter
inc
rcrl
cmpsl
mov
add
shrb
js
jbe
bnd
je
xor
loop
and
adc
sbb
gs
inc
add
push
add
inc
clc
fdivrs
scas
push
push
pop
add
push
add
push
mov
mov
and
xor
lret
data16
mov
daa
and
mov
add
test
in
mov
iret
cld
add
out
add
jo
das
cltd
xchg
inc
push
add
and
ret
add
pop
inc
add
add
jle
movsl
push
add
repz
stc
test
jb
mov
mov
cli
add
jo
int
mov
mov
xor
xchg
outsl
cld
into
mov
icebp
adc
out
cmp
xchg
lret
jo
int3
push
add
jle
movsl
push
add
ja
add
aad
jnp
add
add
pusha
add
test
andb
jmp
rclb
add
rcll
push
jae
mov
rcrl
pop
add
in
in
scas
pop
add
divb
and
and
jmp
add
cmp
dec
insl
or
ljmp
inc
jge
mov
shll
jge
movl
mov
add
dec
add
stos
add
movl
int
sbb
cmpsb
cwtl
rcl
jno
xor
cmp
and
int3
lret
xchg
pop
inc
adc
sbb
cli
add
and
add
xchg
add
out
push
add
mov
fdivrl
add
ja
push
inc
add
daa
xor
add
push
add
lea
xor
in
sub
add
or
or
cli
out
xchg
inc
xchg
dec
add
xchg
inc
add
add
add
push
add
add
add
leave
mull
outsb
add
add
leave
xor
pop
cmp
cli
std
popf
cld
leave
loope
mov
add
mov
cmc
dec
jae
pop
mov
fisubs
ja
cmpsl
lahf
mov
add
inc
in
rclb
iret
das
je
lret
addl
test
add
push
add
and
inc
add
xchg
out
adc
nop
leave
nop
repnz
add
pop
cmpsl
xchg
adc
call
add
adc
movl
add
sub
add
add
add
popf
int3
jne
sbb
ds
sbb
add
xchg
shlb
add
add
mov
push
je
rcr
nop
mov
inc
mov
add
add
add
xchg
fisubs
je
adc
addl
imul
add
xor
popa
test
adc
lret
daa
and
add
into
in
mov
out
mov
xor
and
or
mov
add
add
aaa
adc
mov
xor
and
dec
stc
lret
add
add
movsl
les
add
push
add
imul
sbb
cmp
pop
js
or
xchg
in
cld
jmp
roll
add
hlt
cwtl
loopne
add
xchg
xor
mov
add
jle
rclb
cmp
out
add
dec
add
cmp
clc
arpl
add
out
push
add
cmp
pop
add
sbb
mov
cld
adc
repnz
jns
leave
add
testl
testb
pop
xchg
xlat
adc
xchg
mov
pusha
add
jo
pop
add
mov
or
bound
fcoms
out
mov
dec
std
fisttpl
xor
pop
add
pop
int3
mov
inc
add
mov
add
add
jns
fstps
add
adc
cwtl
test
jbe
scas
sbb
repnz
sbb
aad
mov
rcrl
pop
lods
inc
add
inc
add
add
push
cmp
add
add
mov
add
je
aam
add
add
mov
sahf
xorb
add
jne
xor
xor
add
xchg
jmp
aaa
or
add
fisubs
add
sti
or
jnp
pop
mov
cli
push
xor
int
xchg
pop
xor
push
rolb
mov
outsb
add
mov
pop
and
lahf
and
add
mov
or
ja
shr
mov
jne
negb
lcall
jg
dec
stc
mov
cs
lds
mov
add
xchg
sub
into
movsl
jns
add
jns
nop
ret
xlat
fisubl
test
daa
xchg
and
cs
adc
add
add
cmpsb
sbb
jmp
cltd
outsb
add
mov
add
add
add
xchg
xchg
test
and
lods
cltd
popf
inc
add
add
lahf
xlat
push
add
insb
add
add
xchg
mov
or
pop
sbb
addr16
cmp
int3
std
enter
xchg
sbb
in
xor
je
mov
sub
arpl
inc
cs
leave
mov
loop
xchg
int3
ja
es
aaa
or
add
push
add
or
sub
jbe
lods
ja
pusha
add
fwait
adc
inc
add
pop
adc
push
or
mov
fwait
clc
repz
sbb
add
add
push
ret
or
lret
gs
lods
outsb
add
add
sbb
pusha
add
mov
push
mov
inc
xor
xchg
mov
sar
xchg
cli
cmpsl
mov
sti
pushf
out
jmp
xlat
aas
je
stc
cmc
or
dec
mov
add
pop
add
add
xlat
leave
sti
dec
add
or
bound
dec
fnstsw
add
pop
add
fisttpll
add
push
add
dec
add
aad
add
add
lea
pop
add
sti
mov
inc
add
aad
mov
fdivrs
add
mov
ss
arpl
add
lcall
mov
fnstcw
and
mov
add
add
xchg
inc
in
fcomps
push
add
adc
sbb
jle
adcb
push
ljmp
sarl
cltd
mov
xchg
mov
jno
stos
mov
pop
add
push
add
lods
xchg
fwait
add
xor
add
cmp
add
mov
mov
andl
mov
stc
lcall
add
push
xchg
lret
add
push
add
push
add
add
add
aad
mov
ret
add
sub
mov
in
cmp
rcll
add
push
sbb
repz
add
add
in
or
xchg
rorl
add
ret
inc
popf
loopne
out
out
test
fldenv
jge
mov
jecxz
add
add
frstor
insl
loopne
pop
cltd
adc
daa
cmpsl
or
add
cmc
aaa
je
cmp
pop
test
add
jno
adc
sub
inc
add
add
add
jl
cwtl
dec
add
add
or
loope
xchg
cltd
jns
cwtl
imul
add
popf
icebp
les
add
mov
stos
push
mov
push
add
loop
add
sub
mov
jge
add
cld
adc
dec
add
xchg
mov
add
movsb
les
dec
add
lret
inc
mov
cmc
in
mov
mov
push
mov
nop
push
adc
aaa
cltd
jne
mov
outsl
pop
jno
mov
add
add
add
add
add
movaps
mov
add
or
jbe
or
dec
add
cltd
pop
mov
add
fisttpl
xor
add
movsl
sbb
cmp
inc
add
xor
rcrb
add
adc
cmp
push
add
push
push
add
nop
lods
adc
cltd
repnz
add
pop
nop
sub
scas
adc
jg
lods
push
jg
add
add
sbb
push
add
stos
xor
add
test
cmpsl
adc
in
in
cmpsl
sbb
stos
or
jae
andb
add
add
add
add
or
or
es
psrad
inc
add
mov
lds
jns
aaa
pop
add
add
jge
mov
add
add
add
add
stos
mov
gs
fdivrs
js
mov
mov
dec
cmp
sub
jae
or
int3
lock
add
push
add
cmp
mov
add
add
push
xor
pop
add
add
adc
mov
and
mov
add
insb
add
adcb
add
pop
add
jo
test
push
mov
push
add
mov
xor
cmp
push
add
jmp
push
add
pop
dec
add
cmp
mov
add
inc
xor
loopne
add
push
add
fucom
jno
xchg
dec
add
jb
dec
add
iret
dec
add
jb
pop
repz
push
add
and
bound
enter
adc
jg
xchg
jb
jle
mov
mov
lahf
mov
jo
push
sti
xchg
push
adc
pop
enter
or
xchg
in
and
jp
dec
xchg
add
cmp
loope
mov
sbb
push
add
lods
fnstsw
add
movsb
push
add
jge
notl
stc
xchg
bound
lock
hlt
insl
rorb
hlt
out
xor
jle
repnz
scas
jmp
add
mov
add
pop
and
lcall
popf
xor
out
bound
jp
sbb
cmpsl
out
cli
inc
add
add
lds
push
adc
stos
js
add
jae
lods
stos
cmp
into
sub
ja
jne
push
add
add
lcall
add
testb
movsl
popf
icebp
pop
mov
cmpsb
lret
mov
scas
rol
push
add
dec
add
pop
adc
fs
addr16
pop
add
cmp
xchg
mov
sub
and
int3
or
add
mov
and
pushf
fwait
jge
sub
clc
mov
add
addr16
and
in
dec
jg
pop
icebp
ret
sub
test
pushf
popf
jae
dec
or
dec
xor
out
aas
pop
add
icebp
adc
dec
add
cli
mov
mov
add
dec
repz
add
rclb
dec
dec
adc
push
push
add
lods
and
sahf
add
mov
aaa
scas
adc
xchg
xchg
pop
add
shll
add
cmp
cwtl
jp
and
push
add
add
mov
movaps
leave
enter
mov
mov
add
outsb
add
add
jl
xor
in
jno
jg
add
add
xor
add
mov
sub
add
sbb
add
mov
out
int
in
xor
daa
push
add
add
mov
or
lea
mov
xchg
mov
jg
imul
add
xor
pusha
add
mov
push
add
pop
and
inc
add
mov
mov
pop
jno
add
add
jge
mov
lahf
in
add
sbb
mov
add
pop
push
add
adc
push
add
or
fldt
fcompl
mov
call
js
leave
pushf
push
add
push
add
add
data16
dec
add
or
jecxz
jne
add
push
cmc
pop
bound
dec
sbb
sti
aaa
add
hlt
mov
and
adc
daa
inc
add
dec
add
add
sub
cmc
popf
xlat
push
add
fsubr
mov
in
iret
mov
cmp
hlt
add
pushf
push
loopne
mov
xchg
in
pop
add
shlb
xor
repz
aad
add
subb
pop
jp
idivl
imul
imul
loop
sbb
jl
cmpsb
push
jnp
cmp
lret
add
popa
push
add
je
and
mov
nop
sub
add
in
add
jb
xchg
stos
xor
sarb
and
lcall
pop
cmc
data16
and
pop
loop
aam
and
shrl
test
adc
cmp
add
cmp
repnz
daa
sarb
add
jmp
data16
aam
je
ret
dec
add
fildl
pop
subb
sub
call
sub
pop
mov
cmp
add
mov
shlb
out
dec
dec
add
add
enter
mov
mov
in
inc
jo
pusha
add
add
add
add
sbbl
mov
add
out
mov
imul
add
add
in
and
mov
shl
push
cmc
add
xor
idivl
add
add
add
xchg
pop
push
add
xchg
ja
dec
repz
sahf
or
arpl
add
outsl
push
add
sbb
dec
mov
mov
add
or
sbb
add
cmp
sbb
lock
push
add
aas
shrl
out
orl
mov
or
mov
add
xor
cmp
dec
add
cli
out
ss
sub
add
add
and
fistl
mov
jns
add
add
loope
lods
xchg
scas
inc
mov
sbbl
xchg
pop
popf
lahf
xchg
xorb
loopne
dec
add
data16
add
add
push
out
sti
ucomiss
shrb
add
and
xchg
and
dec
add
push
add
adc
testl
insb
add
sbb
mov
imull
bound
rclb
add
cwtl
pop
mov
popa
sbb
inc
inc
loopne
xchg
jno
add
add
ds
pop
add
pop
add
test
jno
add
xchg
hlt
sub
add
sub
add
sbb
pop
dec
add
nop
loope
or
dec
shlb
sbb
jo
jbe
mov
add
pusha
add
jle
push
add
or
out
xor
pop
cld
push
push
dec
pop
xchg
jb
pop
add
stos
or
ljmp
xlat
pop
imul
add
fcom
add
jle
sub
push
add
addr16
add
cmpsl
out
push
lret
adcb
iret
pop
add
fsubrl
iret
mov
mov
mov
leave
mov
add
or
rcl
push
add
xchg
add
in
sbb
add
lret
add
or
xor
jb
xchg
add
les
mov
sub
outsb
add
add
movl
pop
scas
in
mov
add
je
nop
divps
xor
outsl
push
add
mov
frstor
add
mov
mov
cs
jnp
je
insb
add
mov
mov
inc
add
pop
lds
add
push
add
out
jne
mov
push
xor
mov
nop
testb
mov
iret
in
add
in
add
psrld
add
push
add
add
add
add
fmul
aam
add
add
or
add
scas
adcl
cmp
add
push
add
enter
sub
pop
push
add
add
mov
sub
adc
rcrl
add
dec
jb
push
add
cmp
jl
push
jg
cld
sub
ficompl
ret
add
add
pop
add
jmp
rcl
push
add
sti
sbb
add
add
pop
add
mov
add
dec
add
adc
mov
fs
addr16
and
sarb
mov
add
push
mov
mov
sbb
mov
popa
sbb
cwtl
xchg
mov
mov
push
add
movsb
outsl
mov
and
aaa
cmp
sub
cmp
inc
cmpsb
xor
shr
dec
add
movsl
mov
lret
hlt
aam
add
movl
loope
mov
or
sub
push
add
fisubrs
test
inc
add
andl
int
data16
adc
int3
lods
add
and
insb
add
in
add
add
data16
add
push
add
add
cmp
add
xchg
inc
call
jl
je
dec
add
mov
add
sub
leave
sub
cltd
lea
outsb
add
or
in
adc
sahf
mov
test
add
pop
scas
jmp
movsl
popf
add
or
jge
imul
test
mov
dec
add
add
xchg
and
pop
add
add
mov
add
nop
push
and
add
push
xchg
adc
push
add
sar
add
ret
push
add
fwait
jecxz
pop
out
add
out
xchg
rorl
in
mov
cmp
in
call
imul
cld
aam
push
add
mov
mov
jo
adc
or
inc
pop
add
inc
add
aas
fwait
mov
adc
xor
xor
sub
mulps
add
cmp
shrl
add
cmp
cmpsb
icebp
lds
add
imul
add
mov
add
xorl
xor
pushf
inc
add
sub
add
add
add
stos
xor
popf
aaa
andb
add
jns
pushf
pop
add
add
adc
mov
jne
cmc
pop
mov
xor
js
mov
cmp
in
andl
jnp
and
add
iret
mov
xchg
fabs
xchg
add
or
inc
sub
add
pop
add
add
enter
mov
enter
lret
pop
mov
add
add
push
add
cmpsl
in
inc
xchg
imul
add
jbe
loop
bound
or
outsb
add
sub
cli
ljmp
faddl
sbb
push
add
pop
les
pop
popf
dec
inc
lods
sbb
or
test
add
pop
mov
add
cld
adc
shll
add
data16
popa
outsb
add
frstor
stos
xor
sub
add
adc
dec
add
inc
add
add
inc
add
add
add
add
xchg
sub
mov
and
cmpsl
mov
cltd
push
insl
mov
inc
test
repz
rcll
pop
dec
add
add
shrl
ret
mov
or
xchg
mov
jns
mov
mov
fdivl
add
sub
mov
cmp
and
neg
mov
add
or
xor
ror
les
ret
cmp
mov
or
add
pop
add
adc
add
cmpl
add
jmp
add
add
mov
loop
sbb
lcall
sarb
adc
mov
add
add
add
xlat
insb
add
xor
push
add
mov
push
add
or
push
and
add
nop
add
xor
xchg
add
adc
push
add
cmc
loopne
add
rorb
fisttpll
add
mov
hlt
js
addl
loop
icebp
sahf
shlb
mov
cli
or
xor
sbb
stc
ss
jle
mov
jno
add
sbb
popa
inc
add
or
add
movsb
sbb
xchg
dec
add
jno
add
mov
shlb
add
add
cmp
add
jne
add
inc
stc
xchg
sbb
add
mov
lret
inc
loopne
movsb
push
push
fistpl
add
into
icebp
xchg
add
mov
loop
gs
add
add
sarl
fisubs
add
add
pop
add
cmp
sbb
xor
add
mov
jge
std
icebp
mov
or
or
or
inc
add
push
add
stc
inc
add
out
ss
mov
mov
in
enter
add
popf
adc
mov
lea
mov
cmp
adc
inc
cwtl
stc
inc
add
ret
push
inc
data16
add
add
add
adc
sbb
clc
cwtl
enter
addr16
push
add
add
xchg
xchg
outsl
mov
push
inc
add
shr
add
add
enter
add
add
sub
dec
add
add
dec
add
in
adcb
mov
fisubrs
add
test
ja
mov
jp
jge
bswap
mov
imul
test
mov
pop
xchg
lods
or
add
pop
jmp
movsb
mov
add
ja
add
add
dec
add
bound
rorl
mov
nop
adc
push
pminub
or
out
out
mov
and
or
int
int
adcb
in
imul
jns
aam
cmpsl
sub
stc
sbb
add
add
add
push
add
add
add
add
sub
or
loopne
add
add
ljmp
js
lods
or
addl
add
and
addr16
mov
cmpb
mov
add
jmp
lret
aas
push
push
add
push
add
add
add
adc
std
pop
add
push
add
or
push
add
xorb
out
xchg
std
or
loope
sbb
aas
or
xlat
and
jmp
jecxz
fisubs
cmp
fdiv
dec
add
xchg
rcll
add
add
fdivr
rcll
xchg
divb
add
inc
push
push
add
jmp
add
jne
add
cmp
jae
inc
add
add
add
in
dec
in
bound
pop
or
in
add
cli
xor
notb
xchg
adc
xchg
or
xchg
dec
add
das
std
mov
icebp
aas
inc
add
xchg
add
aad
fistps
xlat
pop
rcl
pop
out
mov
out
mov
imul
pop
push
mov
pop
pop
aaa
mov
xchg
inc
shlb
cld
inc
xor
shrb
xor
mov
cmp
push
add
mov
popf
jl
popf
loop
ljmp
cmp
fldt
lcall
inc
les
add
fisubs
add
add
les
xor
dec
add
orb
imul
jne
add
iret
sbbl
daa
and
and
mov
mov
adc
xor
xor
add
add
aas
inc
add
loope
mov
int
pop
add
add
fmull
add
add
das
push
insl
sub
xor
cmpsb
adc
ss
mov
add
in
inc
rorb
add
mov
push
fstps
das
andl
rorl
or
and
inc
scas
stos
rclb
cld
cwtl
lods
add
outsb
add
outsl
xchg
fidivrl
jp
cmp
cmp
cmp
or
or
inc
add
loope
mov
add
cltd
movsb
xor
push
add
pop
loopne
inc
push
add
add
add
jge
jecxz
push
add
mov
ljmp
subb
add
hlt
sub
or
and
andb
std
movsb
aas
or
hlt
or
insb
add
add
sbb
jl
mov
push
add
jge
xchg
add
loopne
add
out
mov
das
mov
in
nop
sbb
loopne
add
sub
pop
add
cmp
ljmp
add
xchg
mov
fdiv
mov
int
add
pop
test
push
add
add
pop
jecxz
bound
sbb
insb
add
and
mov
lret
add
push
add
sahf
icebp
jge
test
mov
sarb
cmp
cmp
add
add
fcom
add
aad
scas
push
adc
cwtl
out
add
out
cwtl
movl
sub
add
jg
xor
andb
push
add
scas
mov
add
mov
add
jecxz
loope
add
lods
mov
je
jp
fstpl
orb
add
xchg
inc
fstps
das
ja
add
mov
add
add
movb
jmp
lahf
and
add
add
bound
aam
movsb
rorl
jge
add
ljmp
aam
mov
add
in
adc
and
std
adc
sbb
add
inc
loopne
sbb
add
add
push
add
add
mov
pop
dec
fcomps
add
push
popf
fwait
jno
add
jnp
rorl
add
push
add
and
dec
clc
aam
add
pop
add
add
add
add
xor
and
push
add
xor
dec
out
in
cmp
mov
subb
hlt
or
mov
hlt
or
fidivrl
fcomip
adc
add
faddl
add
and
add
add
outsb
add
adc
sub
gs
mov
int3
addr16
push
add
pop
add
repz
insb
add
lcall
inc
add
rol
pop
add
xadd
dec
lcall
add
push
add
imul
repnz
add
pop
xor
add
add
enter
cmp
or
add
add
rol
push
add
add
mov
lret
cmpl
jmp
add
aad
add
mov
clc
mov
add
add
in
fsts
pop
add
ljmp
in
and
mov
pop
nop
mov
push
lahf
in
sub
rcll
push
ljmp
push
add
inc
mov
add
ja
xchg
mov
loop
out
mov
lret
addl
add
bound
inc
data16
xor
pushf
lods
and
xor
fs
add
imul
add
out
sbb
ss
test
cmp
dec
call
aaa
sub
xor
mov
add
xchg
mov
in
dec
in
add
out
adc
mov
std
stos
test
add
adc
std
data16
pop
add
and
cmp
mov
inc
adc
enter
cmp
movb
add
add
add
loopne
arpl
add
xor
dec
or
out
js
xchg
ret
rcrl
lods
or
jae
and
aas
fildl
dec
adc
mov
inc
add
in
cwtl
bound
and
push
add
fstl
add
add
add
push
add
cmp
sarl
add
scas
pusha
add
dec
sub
pop
push
add
push
add
add
jecxz
add
lahf
and
fsubl
push
das
hlt
sahf
inc
aad
add
sbb
insl
jbe
pushl
dec
out
pop
or
fsubs
imul
lds
sub
pop
xchg
daa
xchg
xchg
cld
leave
inc
das
adc
aad
push
out
inc
adc
das
outsl
int3
pop
cmc
and
std
fdivp
std
inc
scas
lods
nop
xor
mov
add
add
jle
int
or
pop
test
push
jecxz
add
dec
gs
imul
in
popf
std
sahf
out
int
sbb
fistps
add
add
mov
add
add
or
mov
add
add
in
xchg
adc
add
mov
loop
fisubrl
dec
add
rcl
cmp
xor
sub
jl
scas
or
orl
scas
jl
adc
mov
test
test
gs
jns
push
mov
push
mov
pop
add
shlb
clc
addb
mov
or
repz
sub
mov
add
jge
cmpsb
and
xchg
and
dec
add
xor
sbb
outsl
xchg
adc
add
add
test
push
cmp
push
add
add
add
jb
dec
add
sub
dec
jo
xchg
insl
scas
movsl
mov
mov
add
ret
lahf
or
les
data16
xchg
enter
xchg
popa
data16
add
add
rorb
rclb
jne
cmp
push
imul
add
add
stc
cld
insb
add
sbb
lret
movsb
sbb
add
add
add
divl
add
xchg
mov
pop
add
into
mov
add
or
mov
add
sbbl
mov
inc
fwait
xlat
sbb
addr16
xor
cld
cmpsb
in
insb
add
stos
add
jg
test
jae
mov
mov
add
or
cmc
or
mov
rorl
pop
xchg
call
and
int
sub
subl
push
add
add
and
mov
out
xlat
sahf
faddl
add
fbstp
pop
add
xor
add
call
add
push
aam
add
sub
xor
xchg
jecxz
negb
push
add
inc
add
add
shrb
jno
mov
adc
mov
adc
mov
sbb
adc
mov
cmp
jmp
cld
jns
and
mov
jmp
js
inc
add
test
jbe
xchg
pop
fdivrs
add
jno
add
or
add
aaa
fcompl
add
aam
mov
dec
add
add
adc
push
add
ljmp
cmp
sub
movsl
pop
prefetchnta
into
mov
data16
adc
cmp
push
add
test
adc
add
xchg
dec
add
adc
pop
sub
sub
add
add
fcomi
xchg
adc
aaa
pop
add
bound
push
add
fistpll
lret
lock
outsb
add
mov
add
pop
out
fimull
add
mov
add
icebp
clc
fcmovu
rclb
inc
pop
in
fidivl
data16
jl
scas
cmp
enter
in
mov
add
add
fildl
mov
ficoms
std
imull
add
repnz
mov
test
loopne
sbb
add
out
add
sub
imulb
add
push
pop
clc
cmc
in
sar
mov
js
hlt
shrb
adc
dec
add
xor
mov
add
xchg
mov
push
add
cmp
add
ret
dec
lret
ds
dec
test
mov
adc
jge
add
add
add
add
push
add
icebp
loop
inc
add
daa
push
add
add
and
mov
in
daa
push
add
adc
jae
repz
jb
adc
adc
add
sub
cmp
aad
mov
add
fwait
pushf
cmp
add
add
lret
or
aas
fsubl
pop
fisttps
pop
add
cmp
lock
loope
sbb
xor
lods
ja
mov
jb
mov
jmp
mov
mov
dec
add
mov
aam
dec
jmp
into
mov
pop
vmovupd
jge
loop
add
and
jmp
je
pop
add
fsubl
jg
xchg
stc
in
repnz
jae
mov
aaa
mov
mov
add
in
sbbb
repz
add
add
in
jle
sti
mov
pop
popf
fistpl
pcmpgtd
adc
add
add
imul
subl
cltd
loope
mov
out
mov
add
aad
shlb
out
dec
fst
mov
dec
add
mov
iret
cmp
or
popa
shlb
pop
add
add
cmp
pushf
movsb
repnz
add
mov
push
add
bound
mov
add
jne
add
pop
adc
cmp
push
fstl
dec
xchg
dec
add
sbb
arpl
pop
add
mov
mov
xchg
lods
movsb
adc
add
std
xlat
stc
jmp
adc
insl
jnp
popa
shrl
jo
pop
and
mov
xor
pop
add
mov
sub
std
mov
or
xchg
nop
ja
sub
stos
jp
xor
jnp
aaa
adc
add
lds
add
push
add
fimull
cmc
add
notb
cmp
fstl
lahf
add
adc
xchg
sub
push
add
xor
add
test
add
lret
jg
add
push
add
popa
or
sub
nop
push
add
dec
das
xchg
frstor
cmp
in
mov
pop
or
lods
js
lret
nop
inc
scas
lcall
xchg
aaa
dec
add
add
inc
add
add
add
sbbl
jge
mov
add
add
ficoml
insb
add
push
add
stc
jmp
sbb
inc
add
test
pushf
inc
add
add
pop
add
xchg
dec
mov
pop
pop
mov
mov
lret
cmc
xlat
into
jl
mov
add
jnp
add
pop
adc
loopne
add
jae
je
out
pop
cmp
add
adc
sahf
sbb
js
xchg
and
pop
cmc
cmp
shl
jo
or
loopne
mov
inc
jg
add
out
data16
outsl
das
add
sub
div
loop
add
faddl
dec
adc
mov
add
inc
inc
xchg
mov
das
cmp
jnp
jge
ljmp
mov
push
add
push
add
fldcw
dec
add
adc
vpunpckhqdq
dec
add
outsl
sbb
mov
fst
add
add
stc
psubw
add
push
add
push
iret
lcall
add
add
sub
aas
lcall
out
cmp
dec
add
rorl
bound
and
add
add
add
lret
lods
xor
xchg
fldt
mov
lods
inc
sub
dec
pop
pusha
add
call
scas
lret
pop
add
add
xchg
inc
add
mov
fwait
mov
mov
mov
inc
mov
add
jmp
ret
add
xor
sti
pop
add
outsl
idivb
aas
xlat
clc
xlat
dec
add
mov
xchg
xlat
push
add
orb
arpl
sbb
add
add
add
test
rcrb
add
pushf
mov
and
sbb
dec
add
rorb
jg
add
pop
mov
mov
les
add
sub
stos
test
inc
add
jmp
add
dec
mov
cmp
fisubrs
dec
add
js
dec
add
or
filds
add
jp
cmp
sbb
movsl
inc
out
xor
mov
sbb
cmc
lock
add
bound
leave
adc
and
add
mov
lds
dec
add
push
add
prefetchnta
add
andb
mov
test
les
in
sbb
sub
lds
inc
push
add
out
pop
pop
add
fsubrs
pop
lret
push
add
push
lds
jae
cld
sub
ret
gs
fists
or
add
add
and
imul
jp
mov
add
cmc
popa
sub
fsubrl
mov
xchg
test
or
test
add
les
imul
xchg
flds
add
push
add
add
push
adc
dec
jbe
sub
dec
add
add
push
add
int
add
test
mov
xor
ret
repnz
lds
add
push
add
outsb
add
add
add
jae
addb
sub
mov
sti
pop
ljmp
or
add
add
and
and
pop
fstps
add
mov
data16
add
pop
jo
int3
add
pop
inc
add
loop
jecxz
jecxz
add
mov
dec
inc
push
inc
int3
push
add
daa
cltd
mov
cmc
lods
mov
jnp
push
add
sbb
mov
fldenv
sub
mov
sub
mov
add
pop
add
and
stos
mov
jb
cmc
mov
add
cmp
add
test
cmp
push
leave
cwtl
or
xor
sub
xchg
cmpsl
push
add
add
push
dec
xor
add
add
cltd
pop
rcrb
decl
add
or
add
and
dec
sti
jbe
js
jno
pop
add
pushf
sub
mov
inc
mov
jg
sbb
add
sbb
lahf
sbb
push
add
xor
dec
add
add
adc
xchg
push
cmp
pcmpeqw
add
test
dec
add
sbb
mov
jle
cmp
inc
add
push
add
bound
mov
sub
push
pop
sub
mov
popf
add
add
sbb
stos
ljmp
add
add
stc
test
in
add
add
fdivrs
xchg
dec
cli
mov
ja
std
test
ret
add
fdivrs
aas
and
arpl
add
xchg
cli
jnp
sti
stos
shl
idivl
add
les
pop
sbb
data16
dec
movb
shrb
sbb
daa
add
int
add
adc
sub
mov
lcall
es
out
add
xorl
push
add
pop
dec
add
dec
add
add
add
movsl
mov
ficoms
jb
adc
cmp
negb
push
imul
xchg
pop
cmp
lods
pop
inc
add
mov
add
add
leave
mov
lahf
sbb
push
add
xchg
jae
mov
dec
stos
test
sub
icebp
add
or
popa
int
push
add
push
add
xchg
mov
push
mov
mov
add
scas
scas
pop
add
push
mov
fs
cmc
mov
icebp
sub
ficoml
ljmp
add
push
scas
scas
dec
add
xchg
gs
xor
push
add
add
add
xor
dec
add
cmpsl
mov
add
push
add
andb
lcall
adc
aad
jg
imul
add
in
cmp
and
fsubrs
pop
add
test
add
pop
add
xchg
xor
push
pop
ds
loope
add
pop
xchg
shlb
add
xchg
add
add
add
out
pop
lcall
mov
add
inc
and
jl
leave
sbb
jno
pop
add
add
repz
ja
add
add
add
es
inc
add
sub
push
add
cmpsl
push
add
jmp
pop
add
add
lea
add
scas
dec
dec
add
insb
add
push
add
add
pusha
add
inc
add
mov
int3
sbb
add
sbb
ja
out
jl
mov
mov
add
jg
mov
mov
add
lret
jp
push
orb
imul
scas
add
lods
xor
inc
add
pop
lock
sbbl
pop
add
jle
add
xor
fcompl
add
aad
jne
fnstenv
jae
add
add
add
add
in
dec
add
std
mov
xrelease
add
pop
add
push
or
push
out
pop
cmp
sub
mov
add
add
out
mov
popl
xchg
dec
sbb
clc
test
cltd
enter
push
add
add
sub
je
cltd
xchg
enter
sbb
in
mov
loop
or
adc
add
pop
add
gs
cmp
and
movsb
ficoms
mov
and
loopne
pushl
out
pop
add
pop
std
shll
add
and
sbb
sbb
push
and
pop
add
or
mov
add
cmpsl
and
jnp
and
mov
add
lahf
push
jb
gs
add
cwtl
sub
lcall
xor
push
add
jnp
mov
aam
mov
aaa
setp
add
lock
xor
jo
shrb
add
add
add
or
mov
pushf
xchg
push
add
push
jmp
mov
test
loop
add
push
add
sub
jl
call
enter
mov
sbb
push
or
leave
xor
sbb
add
mov
jno
aas
push
pop
push
add
add
cmp
mov
mov
stos
xor
in
je
fiaddl
add
mov
add
add
cmpsl
shr
dec
mov
add
add
add
ret
in
clc
inc
in
add
aaa
xor
xchg
cld
pause
rcll
ja
lret
mov
mov
add
cmp
add
sahf
mov
cmpsb
decb
pop
add
add
mov
int
xor
js
xor
aam
cwtl
insb
add
idivl
and
or
cmp
outsl
loop
dec
adc
inc
add
rcrl
aas
imull
outsb
add
add
add
int
mov
add
in
or
aaa
push
add
mov
add
shlb
jae
loope
add
xchg
repnz
pop
add
testb
mov
add
mov
sbb
lret
dec
in
daa
or
jo
mov
test
out
fnstsw
daa
cs
pusha
add
mov
add
icebp
pop
add
inc
std
sbb
add
scas
sti
dec
add
add
repz
add
push
add
pop
add
or
cmpsl
jmp
pop
add
into
cmp
cmp
push
scas
sbb
pop
movsb
mov
out
rol
add
push
lret
push
add
jmp
mov
mov
icebp
inc
push
add
cmc
pop
cmp
jle
xchg
in
push
iret
jmp
add
inc
add
fstpt
pop
or
jp
testl
mov
add
jg
and
loop
pop
frstor
and
in
add
clc
scas
mov
inc
add
mov
cmc
lahf
mov
add
add
out
add
sbb
push
dec
add
cmp
add
add
jmp
dec
cmp
arpl
dec
add
add
push
out
mov
out
add
addr16
push
add
mov
into
mov
dec
add
stos
lds
imul
adc
loope
sub
stc
stc
xchg
in
cltd
mov
movsb
pushf
mov
and
push
push
inc
nop
sbb
stos
call
add
add
sbb
ljmp
mov
add
shll
call
push
stos
ret
inc
sbb
push
add
cmp
test
add
clc
stc
xor
push
sbb
sub
add
or
cmp
test
test
add
cltd
inc
add
int
movsl
adc
add
into
lcall
sbb
jae
daa
inc
sub
stos
nop
addl
hlt
mov
inc
aad
add
lea
sbb
add
lds
daa
push
add
inc
add
push
add
add
dec
sbb
movsb
jo
or
lret
stc
lea
jns
lret
add
pop
add
loope
inc
cmp
add
add
jno
add
or
push
add
pop
sti
clc
imul
adc
rep
mov
jne
add
fdivs
fldt
add
mov
movzwl
mov
repnz
adc
cmpsl
mov
lcall
sub
or
push
add
sub
out
leave
sbb
and
add
add
lret
cmpsl
test
mov
cli
push
add
loop
xor
cmp
cmp
sub
sub
jo
lods
lret
mov
movsb
or
inc
add
clc
mov
insl
jle
inc
add
add
mov
xlat
out
mov
mov
cmp
and
add
pop
add
or
imul
mov
add
add
add
add
inc
in
fstps
add
add
jae
add
lods
orl
fwait
mov
bound
push
add
jae
and
add
add
mov
adc
fildll
add
sti
scas
jmp
subl
or
mov
xchg
lret
andl
push
add
lcall
add
out
into
out
jge
inc
add
add
dec
add
add
je
sbb
int3
int3
int3
xchg
stc
aaa
dec
add
scas
mul
inc
lea
inc
add
test
mov
lret
fcompp
nop
pop
add
add
or
imul
xchg
mov
or
jo
aad
sbbl
cmp
cmp
adc
inc
cmp
mov
add
add
add
rorb
dec
jmp
or
in
lock
or
sbb
in
xor
add
add
dec
add
ret
xchg
not
cld
push
add
jb
add
insb
add
mov
dec
inc
add
cmp
das
inc
add
repz
ss
xor
mov
cmp
jns
sti
pop
add
add
push
add
add
add
add
and
adc
gs
ret
dec
push
lcall
add
add
xor
addl
and
inc
add
mov
je
jmp
add
lock
fldcw
xor
sbb
mov
add
jbe
jl
mul
mov
add
dec
xchg
dec
mov
dec
add
mov
jg
jge
popf
addr16
add
ljmp
add
jecxz
sub
adc
hlt
jmp
add
sbb
cwtl
push
addr16
call
pop
add
pop
add
out
in
out
call
add
add
aad
mov
popf
jae
sbb
aad
lods
add
add
hlt
dec
add
test
out
sbb
daa
fmuls
iret
push
add
notb
jno
add
or
add
dec
out
jge
jo
inc
jl
or
test
cmpsl
in
add
repnz
xchg
inc
add
mov
jecxz
cmp
xor
lea
insb
add
inc
add
into
in
fcoml
inc
xchg
xchg
add
ds
cmc
pusha
add
push
add
negl
dec
sub
add
scas
cmp
jno
mov
sub
shll
jno
insl
xchg
popa
jne
xchg
fstpl
mov
cltd
adc
nop
ja
movsl
push
movsl
mov
mov
add
cmp
inc
add
andb
sub
add
dec
add
insb
add
stc
push
repnz
jae
add
add
add
add
mov
mov
xor
fwait
inc
add
add
cmp
mov
add
cmc
jecxz
add
mov
add
and
cli
or
out
push
add
dec
add
add
sbb
adc
out
add
xor
cmovne
xor
push
fisttps
sub
xchg
sub
mov
sbbb
lahf
repz
inc
jp
add
add
pop
fdivs
imul
lret
xor
test
ficompl
mov
sub
cmp
and
testl
ret
inc
add
fs
iret
xchg
enter
movsl
dec
push
add
pop
pcmpgtw
and
jmp
xchg
clc
mov
sti
jne
add
in
stos
stc
mov
outsb
add
jo
jae
add
or
loop
add
add
lcall
bound
or
cmp
icebp
add
inc
add
add
add
add
in
dec
pop
hlt
xor
or
add
add
daa
divl
popa
shll
in
or
mov
adc
xchg
jl
mov
cmpsl
lods
scas
jecxz
add
mov
add
add
push
add
add
add
test
pop
pusha
add
mov
xchg
and
inc
add
add
xchg
and
cmp
into
rorl
subl
ss
gs
push
adc
mov
lods
mov
and
or
in
push
add
mov
xchg
jle
lahf
lods
push
add
loope
and
inc
add
pop
jbe
mov
mov
add
add
add
clc
add
shll
add
inc
add
push
xor
outsb
add
fisttpl
aaa
or
mov
add
shlb
xchg
add
mov
rorb
loope
sub
xchg
lret
jnp
cmp
hlt
ret
add
mulb
aam
adc
inc
add
das
daa
cmp
cmp
inc
and
pop
add
pop
add
add
adc
push
xchg
xor
mov
xor
js
aam
mov
test
addr16
xchg
mov
das
mov
add
aaa
data16
adc
out
add
cmp
jg
inc
bound
les
cli
and
add
jne
jle
jp
cmp
add
stos
lret
pop
inc
or
stc
loope
js
cmp
enter
aad
lea
and
pusha
add
add
jb
lock
add
add
add
xor
cmpsb
mov
mulb
add
out
add
add
cmpsl
shl
sbb
dec
mov
jnp
movsl
repnz
add
test
insb
add
or
or
xchg
enter
lret
jmp
and
and
jb
out
and
data16
add
int
test
stos
pop
or
repz
mov
lock
ret
movsl
in
inc
cli
xor
add
jno
imul
add
std
js
cmp
movsl
stos
dec
add
loop
pop
jg
pop
add
out
add
add
shrb
add
aaa
loopne
jle
pop
add
xlat
pop
add
fdiv
cld
inc
add
ja
add
add
add
push
insb
add
cmp
jne
mov
or
cmp
jp
push
pop
fisubrs
jp
add
push
fldl
shr
push
xchg
mov
pop
add
das
dec
or
mov
add
push
add
add
adc
sub
jp
pushf
pushf
dec
push
add
add
jl
int3
mov
or
mov
jg
insl
or
push
push
add
dec
add
fnstenv
add
pop
add
xchg
or
inc
add
sbb
add
aam
add
std
lret
adc
mov
add
add
add
and
subl
sbb
aam
sbb
pop
add
pop
js
pusha
add
in
pop
mov
cmp
adcb
cmp
add
and
xor
add
add
dec
add
sub
and
and
ret
xchg
add
adc
scas
mov
adc
push
add
add
nop
xor
add
stos
and
stos
xchg
mov
cs
add
pop
insl
int3
xor
add
add
cmp
leave
movsb
shll
add
pushf
or
add
add
je
xchg
loop
adcl
stc
dec
add
loop
scas
fwait
push
add
mov
daa
bound
xchg
mov
dec
add
ret
test
test
mov
std
xor
dec
gs
dec
add
pop
cli
add
sarb
add
add
push
lock
mov
add
fcmovne
pop
mov
xlat
ret
add
mov
and
mov
pop
adc
pop
add
and
repz
jge
inc
mov
add
popf
pop
pop
add
pop
inc
add
or
imul
fwait
cltd
call
inc
je
sbb
mov
test
add
push
add
pop
add
add
xchg
clc
xchg
push
add
mov
popa
mov
popf
cmp
pop
hlt
add
ja
xchg
xor
xchg
cmp
add
rep
scas
push
add
cmp
add
and
mov
dec
add
test
cmpsb
leave
add
add
sub
lret
inc
push
add
sahf
cmp
fstpt
pop
xchg
add
dec
add
stc
inc
and
add
add
call
pushf
test
xchg
jp
add
add
xor
cli
cli
fsubl
aaa
jle
cmp
add
add
test
dec
push
add
fnstenv
jno
gs
pop
int3
mov
jge
pushf
mov
or
xchg
jge
xor
and
iret
stos
loopne
adcl
jle
inc
add
add
cmpl
sub
xlat
cli
mov
fs
cmp
add
mov
gs
or
test
inc
add
mov
add
icebp
movsl
loop
popa
movsl
jnp
repz
and
push
mov
ficompl
adc
ret
mov
into
and
add
insl
sbb
xchg
int3
xor
scas
lret
subl
aaa
icebp
lods
es
imul
xor
cmp
bound
cmpsb
push
add
ficompl
xor
int3
hlt
dec
pop
insb
add
add
add
xchg
lcall
out
jge
cwtl
jg
nop
popf
aam
add
add
add
pushf
or
pushf
mov
xlat
mov
add
add
orl
popa
xor
loopne
xchg
adcb
loop
leave
ljmp
add
lcall
imul
jmp
add
bound
cltd
cs
into
shl
bswap
gs
add
dec
mov
cmp
add
add
mov
ret
bswap
rolb
js
dec
add
jecxz
jmp
xor
push
stc
xchg
adc
out
pusha
add
push
or
mov
adc
ret
push
pop
test
or
call
std
div
pop
sub
mov
cmpsb
data16
jge
rcrb
scas
pop
outsb
add
add
xor
jnp
xchg
cmp
add
popa
pop
cmp
xchg
into
mov
sbb
aas
pushf
xlat
fdivr
inc
add
xchg
test
call
scas
repnz
roll
add
push
cli
stc
add
add
rcrb
add
gs
cmp
mov
add
shll
jns
mov
mov
pop
add
cmpsb
mov
add
ds
sub
xor
add
add
mov
inc
shll
pop
pushf
lret
push
xor
add
es
das
lods
inc
scas
and
add
test
jo
and
enter
xor
cli
into
pop
add
js
push
add
add
add
inc
add
pushf
xchg
xlat
push
std
lods
cmpl
fwait
push
add
add
lock
mov
dec
not
jle
lret
mov
add
add
jnp
ja
out
mov
popf
sti
sub
test
aam
dec
mull
ficoml
add
cmc
insb
add
in
mov
jae
push
leave
pop
and
dec
sub
jmp
add
add
add
jnp
or
cmp
xchg
push
and
or
add
add
add
hlt
gs
jb
push
push
add
pop
add
add
and
sbb
addl
lcall
xchg
int3
aas
or
fwait
lods
adc
add
mov
mov
add
dec
js
pop
add
in
insb
add
in
sub
add
add
shl
lds
adc
mov
sahf
sub
lods
or
jg
add
xchg
jle
sub
add
ret
scas
mov
adc
shll
sarl
add
cmc
xor
sbb
dec
add
lret
inc
add
add
add
mov
sub
sub
ficomps
add
xchg
in
or
add
repnz
int
cmpsl
fsubs
mov
add
add
cmp
insb
add
or
jae
mull
add
lods
stos
ret
jecxz
das
and
or
cmp
inc
cmp
outsl
pop
add
add
clc
js
inc
push
outsl
add
mov
add
into
hlt
sub
sub
cmp
xlat
sbb
icebp
mov
sahf
clc
scas
lock
add
into
test
add
into
aam
jbe
jno
addr16
add
add
scas
sbb
cmpsb
mov
ss
daa
cmp
add
add
add
push
les
add
je
lret
xchg
aaa
cmp
push
add
je
add
dec
add
fstl
in
cmp
pop
scas
dec
add
push
loope
add
in
add
adc
lret
insl
insl
popf
xchg
out
in
wrmsr
add
adc
jno
push
imulb
and
and
cmp
dec
add
out
lods
jnp
cltd
push
add
xor
jns
stc
cld
mov
add
add
add
jne
jne
add
mov
in
xorl
add
and
add
push
add
clc
icebp
inc
lret
sub
add
jmp
jno
pop
add
sbb
shlb
jb
sub
call
add
add
jle
roll
andb
mov
or
xor
add
add
add
stos
cwtl
add
pop
ret
inc
lcall
add
push
out
push
add
mov
loop
dec
add
out
xchg
mov
test
jmp
add
add
pop
mov
add
cmpl
stos
pop
cmc
popf
pusha
add
stos
add
sub
jp
cmp
pop
add
mov
lods
adc
cmp
add
add
mov
imul
add
add
add
lock
pop
add
sub
xchg
xor
mov
xor
push
add
add
mov
repnz
add
adc
test
xchg
movsb
sbb
add
jns
pop
add
mov
mov
ljmp
sbb
test
in
daa
add
sti
mov
xchg
cmp
add
add
jae
add
and
add
sbb
add
sbb
outsl
fbstp
gs
je
or
xchg
repz
jecxz
fcoms
xchg
xor
jg
sarb
loopne
inc
mov
sub
jmp
add
dec
add
push
add
cmpsl
xchg
add
inc
add
movq
or
add
scas
mov
add
add
andb
aas
inc
add
pusha
add
flds
cli
jl
mov
call
or
add
xor
sub
fwait
mov
inc
ficoml
call
imul
cwtl
push
add
pushf
rclb
jl
and
sbb
mov
movsb
insl
fadds
lock
add
add
lcall
pop
cld
push
add
sub
rolb
sub
mov
cmp
jo
ret
shlb
mov
mov
pop
add
je
sub
or
lds
add
or
loope
inc
add
cmp
iret
in
xor
adc
pop
add
add
push
add
inc
add
sbb
cmpsb
data16
mov
add
add
pop
insb
add
push
outsb
add
outsb
add
add
add
mov
add
add
testb
vmovd
cmp
push
rcrl
enter
sub
xor
adc
xchg
xor
incl
popf
and
add
mov
test
out
xor
in
fs
adc
jo
jl
push
aam
add
add
inc
add
mov
scas
cmp
sbb
lret
out
add
add
cltd
inc
add
cmp
aam
add
aad
iret
add
mov
add
add
push
add
test
shl
adc
pop
dec
add
daa
ja
sub
inc
repz
pop
add
add
push
add
add
adc
add
cmp
rclb
add
sbb
ret
jb
dec
add
push
add
add
scas
je
lret
ret
xorb
in
add
iret
movsb
ja
and
int3
mov
add
xor
rcl
mov
jge
add
enter
cmp
mov
mov
lods
xchg
jnp
mov
sub
roll
inc
add
xchg
js
xlat
repz
add
add
mov
add
enter
sbb
add
mov
add
add
rcrl
add
addb
xor
add
inc
xlat
clc
xor
nop
cmc
aaa
test
add
jae
aas
fnstcw
lret
mov
add
add
add
xor
add
pop
add
push
dec
aad
jae
or
in
lret
add
push
add
popa
jge
shrb
sub
add
xchg
jo
jo
mov
ficoms
add
popa
sub
mov
sbb
lock
add
add
add
add
sub
loopne
gs
ss
add
add
daa
int3
add
sub
xchg
pop
add
dec
add
add
pop
stos
and
add
bound
mov
xchg
mov
test
add
stc
xor
cmc
or
icebp
jo
in
or
add
cli
repz
ret
sub
add
fsub
mov
sub
add
sbb
cld
mov
fisubl
mov
stos
xchg
sub
ljmp
sbb
adc
cld
mov
dec
pop
out
test
pop
add
add
add
jns
je
fiaddl
mov
add
mov
int
add
jecxz
mov
mov
jp
fstpt
cmpsb
sahf
sahf
dec
add
aad
mov
pop
add
sub
mov
adcl
int3
outsb
add
and
xor
and
mov
mov
test
add
or
bswap
push
add
add
mov
add
and
add
add
add
xor
pop
add
in
lahf
sub
dec
add
jp
sbb
scas
or
xchg
pushf
sub
add
dec
cld
lea
add
pop
std
lret
push
add
mov
jp
dec
add
movl
es
cmp
out
leave
fcomps
add
test
pop
test
jg
add
imul
xor
lods
mov
add
jae
sbb
dec
jle
pop
popa
scas
lahf
aad
pop
cwtl
inc
movsb
js
sub
imul
dec
add
insb
add
out
fimull
xor
pop
ret
jne
scas
add
mov
mov
loopne
add
hlt
push
add
ret
ja
stc
subb
add
add
push
add
add
add
js
and
mov
xchg
sbb
mov
nop
sub
push
add
mov
xchg
xor
jbe
cmp
add
sbb
fldt
lcall
cmp
rclb
add
and
mov
adc
jecxz
add
gs
xor
inc
add
add
mov
mov
add
lods
mov
repz
insl
les
add
dec
add
add
cmp
pop
add
jne
ds
mov
add
sub
and
loopne
xor
and
jae
add
test
add
das
data16
roll
sub
add
hlt
cmc
test
lret
sbb
rolb
mov
jno
xor
pop
add
pushf
push
movsb
xor
add
das
sub
hlt
icebp
aas
sbb
fwait
jbe
sahf
mov
out
lea
mov
add
lahf
cmp
out
add
dec
pushf
jns
add
inc
add
adc
adc
sti
and
push
add
loopne
mov
out
rcrl
les
add
loop
add
add
push
shll
icebp
aam
add
scas
xchg
lods
icebp
pop
push
add
dec
add
add
push
add
and
loopne
inc
pop
cli
fdivrl
jl
loopne
push
add
pop
popf
xor
outsb
add
cmp
fwait
xchg
cmp
xchg
repnz
clc
add
xor
sub
add
sbb
add
scas
xchg
repnz
rcrl
add
ret
or
push
add
sti
outsb
add
loop
fucomi
idivl
inc
mov
add
leave
mov
adc
gs
loop
lods
push
add
add
mov
out
add
ja
rcrl
add
xchg
loope
clc
sarb
aad
add
nop
pop
add
add
xor
add
scas
sbb
or
jno
inc
sbb
cmp
add
inc
add
mov
add
leave
or
mov
inc
add
add
or
sub
mov
pop
add
sbbb
add
les
or
cld
aaa
push
lahf
cmpsl
lret
addb
inc
jl
js
add
jge
or
add
fwait
scas
movsb
mov
mov
lcall
add
add
daa
xchg
xchg
jae
add
sub
fbld
js
sbb
imul
stos
lcall
jbe
xchg
imul
movsl
pop
and
les
add
jo
and
dec
add
jno
fldenv
pop
arpl
push
add
fwait
add
inc
stos
mov
outsl
mov
dec
sub
cmp
pop
or
dec
add
sbb
xor
add
scas
jecxz
mov
lret
mov
xchg
in
pusha
add
jmp
mov
sub
pop
and
push
add
xchg
mov
sti
ljmp
scas
shlb
sub
xorl
icebp
xchg
push
jno
fisubrs
xchg
fidivs
cmc
fdivrl
add
addb
xchg
push
mov
daa
and
aad
inc
out
mov
rorl
xchg
fstps
add
ret
imul
add
add
pop
out
fucomi
and
mov
daa
insb
add
mov
cmp
pop
dec
add
jmp
sti
ret
dec
add
jae
add
mov
add
movsb
mov
or
add
icebp
imul
mov
jae
test
add
cmp
outsl
jns
push
add
add
push
dec
add
mov
push
add
mov
push
mov
add
lret
or
mov
push
sbb
loop
jecxz
or
mov
cmpsb
jge
clc
mov
and
add
add
add
ljmp
jge
repz
xchg
cld
push
add
jp
insb
add
aam
pop
add
dec
into
repnz
repnz
sub
scas
xchg
js
and
pop
sbb
or
add
add
ljmp
add
add
daa
repnz
add
mov
pop
scas
jno
add
icebp
adc
mov
jae
add
fnstsw
add
add
add
popf
push
in
cmpsb
push
add
les
cmpb
pop
add
mov
dec
jo
mov
add
testb
pop
lods
push
add
cmp
or
cmp
lea
out
add
mov
test
add
push
add
cmpsb
out
and
in
jne
push
add
pminsw
rcrl
add
xchg
cmp
and
nop
je
jno
add
insl
shll
cmp
leave
mov
jge
lcall
push
add
add
adc
jae
add
sbb
add
xlat
outsl
ret
xor
cmp
loopne
clc
ret
data16
cmp
cmp
daa
mov
mov
pushf
lcall
int3
add
div
int3
out
add
mov
jmp
mov
and
orb
add
rcl
add
inc
inc
test
pop
add
add
ds
cld
into
sets
movsb
out
cwtl
mov
push
mov
add
jmp
jno
mov
test
mov
add
push
dec
add
jb
dec
enter
jae
incl
xchg
inc
add
cmp
popa
repnz
icebp
mov
add
mov
pop
add
add
dec
add
add
or
mov
rorl
inc
fwait
pop
add
jp
scas
push
and
push
popf
ret
sbb
cwtl
jg
lret
gs
orb
xchg
add
add
add
add
dec
add
pop
xlat
pop
add
lret
stos
add
add
sub
push
push
add
mov
sbb
js
out
into
cmp
jae
add
mov
iret
fs
test
and
pop
sub
and
inc
add
lds
add
int3
push
add
and
push
imul
loope
jp
subl
xchg
cmpb
pop
add
enter
jmp
mov
xchg
pop
in
sub
xor
inc
add
lds
or
mov
sub
scas
ja
cmc
ss
int3
xor
add
xchg
add
adc
add
add
das
jmp
pop
or
or
sub
add
pop
adc
dec
cld
dec
add
add
add
fadds
xor
adc
add
outsb
add
jbe
scas
adc
mov
mov
lock
inc
add
jle
ss
stc
mov
hlt
push
sarl
xor
lret
subl
mov
nop
dec
add
aas
sub
ja
das
fcmove
pop
add
test
js
pop
add
leave
lea
imul
and
cmc
xchg
and
lret
mov
ljmp
jb
sti
stc
jns
push
adc
pop
lods
cmpsl
push
add
add
add
xchg
mov
add
add
in
sub
cmp
sbb
jge
icebp
ret
add
mov
mov
mov
adc
rcl
shrb
add
add
lock
lea
inc
add
lret
or
add
mov
pop
add
dec
aam
xchg
mov
add
adc
xchg
ror
out
push
add
add
pop
sbb
bound
jb
mov
add
adc
dec
mov
xor
js
cmp
outsb
add
dec
add
add
jp
test
jmp
scas
mov
and
xchg
mov
mov
sub
mov
add
add
repnz
movsl
pusha
add
jge
add
xchg
shl
pop
and
add
in
and
cltd
cmp
das
inc
add
add
dec
std
mov
or
xchg
jle
adc
jnp
add
and
cmpsl
data16
cmc
std
xchg
cmc
add
add
and
fadds
sar
jge
add
add
jg
add
pxor
adc
out
lock
adc
xchg
jmp
jp
nop
xchg
and
add
pop
dec
xchg
add
add
fucompp
sub
add
adc
out
je
mov
add
jo
add
pmulhw
add
mov
add
lock
ja
add
or
pop
add
add
lahf
mov
add
aas
adc
mov
ret
add
xchg
xor
call
add
add
or
movsl
dec
mov
outsl
xchg
stos
push
movsb
or
lahf
scas
and
lock
add
into
pop
outsb
add
sbb
jno
in
add
add
xchg
xlat
cmp
test
add
add
xchg
push
add
mov
add
add
or
xchg
mov
add
add
pop
mov
out
adc
add
add
add
adc
cmp
adc
add
inc
add
fsub
or
jle
mov
push
add
insb
add
jmp
jbe
gs
or
fstl
mov
rcrl
pushf
pop
pop
inc
add
add
sbb
add
icebp
je
or
jp
orl
mov
pop
adc
out
rcr
cmp
fstp
cmp
add
rolb
test
jle
jno
scas
add
add
stos
hlt
sbb
pushf
in
outsb
add
add
add
xadd
mov
pop
add
mov
add
add
subb
sbb
mov
sbb
xlat
mov
add
sbb
or
add
stos
xor
stc
or
scas
das
repnz
sub
popa
test
fisttps
add
add
pop
jmp
xchg
jno
ret
add
add
jns
mov
ss
add
loope
dec
clc
or
adc
pop
jo
insl
pop
fstl
int3
loope
add
push
jg
sub
stos
das
dec
jb
and
inc
add
or
adc
lcall
add
jo
jmp
add
xor
mov
mov
add
in
fcompl
add
imul
std
and
sbb
ja
add
jns
hlt
or
cmpsl
nop
insl
jmp
push
repz
mov
add
cmp
cmp
stc
lods
add
lods
mov
add
mov
aad
test
add
mov
sbb
cli
lea
mov
add
add
in
nop
xchg
dec
add
jae
add
shlb
and
insb
add
std
stos
js
xchg
push
add
sub
scas
xor
add
jecxz
or
sub
mov
cmp
nop
leave
xor
out
sbb
fnstenv
lds
xchg
out
dec
les
pusha
add
add
and
add
xor
dec
jbe
add
call
adc
imul
dec
add
imul
add
out
add
adc
popf
mov
lds
add
out
pop
add
push
add
push
mov
insb
add
pushf
sub
mov
jg
add
xorl
jo
pop
add
add
mov
xor
or
add
std
dec
add
pop
add
cmp
add
pop
add
push
add
sub
movsb
mov
add
movl
mov
loop
pop
imul
xor
popf
outsb
add
cmp
jno
sub
push
cmp
aas
out
push
adc
aad
mov
jns
add
out
sti
decl
xchg
add
add
cmp
jmp
mov
enter
leave
or
add
js
adc
jmp
fbstp
adc
and
mov
add
sub
mov
add
pop
inc
push
add
dec
add
and
ljmp
pop
xchg
xchg
lods
cmc
xchg
push
add
add
subl
xchg
cltd
jae
xor
add
xchg
xchg
xor
repz
shll
and
push
push
jbe
push
add
cmc
or
bound
std
mov
daa
std
mov
add
add
leave
repz
mov
add
inc
sbb
add
dec
add
mov
sbb
scas
bound
and
or
gs
out
inc
add
lcall
mov
add
lock
pushf
add
add
sbb
add
xchg
pop
add
add
add
jmp
add
mov
popa
inc
add
insb
add
test
adc
pop
add
cmp
arpl
xor
inc
outsl
xchg
ret
add
pop
pop
add
dec
add
aas
aaa
lea
adc
das
dec
add
jmp
sar
divl
push
add
add
aam
fistps
or
add
fdivrs
inc
or
rcrb
aam
jg
add
cmp
mov
push
add
in
add
adc
adc
add
lock
cwtl
jns
rcll
call
add
pop
add
add
das
xchg
push
xchg
mov
and
xchg
and
and
out
mov
sub
mov
xchg
mov
sarl
cmp
xchg
xchg
sub
cmp
add
pop
rorb
popa
jne
adc
int3
sbb
add
pop
and
or
xchg
mov
jecxz
add
ja
push
xorl
cmc
and
shll
add
mov
mov
add
add
fcoml
rcrl
mov
jo
cmp
dec
add
add
insl
iret
and
pusha
add
add
add
out
pop
add
sahf
sub
xchg
add
out
icebp
into
xor
bound
aad
add
inc
add
std
push
rcr
nop
inc
in
loope
pop
jmp
sbb
stos
ret
cld
or
add
mov
cmp
xor
lret
addr16
or
add
add
adc
jecxz
mov
add
fsubp
push
add
add
scas
push
add
add
pop
push
add
mov
mov
leave
orb
add
dec
add
add
insl
cmp
repz
out
mov
insl
jp
int3
push
add
and
push
mov
push
add
mov
mov
mov
into
stc
les
pop
add
push
inc
add
add
dec
add
add
call
stos
and
icebp
lcall
testb
add
fistps
add
int3
jl
iret
mov
add
or
add
rolb
faddl
and
add
daa
add
dec
lods
sbb
cwtl
nop
popa
sub
add
inc
cmp
add
imul
movsb
fnsave
data16
sub
add
repnz
add
add
add
jne
add
push
pop
movsb
fiaddl
mov
add
mov
add
cli
xlat
stos
mov
and
jp
mov
add
lret
shrl
sbb
add
lcall
or
fsubs
add
lret
mov
add
add
jmp
shll
xchg
in
push
add
add
adc
pop
clc
int3
or
movl
mov
xchg
js
sub
add
add
or
xchg
xchg
adc
push
add
sub
loop
add
mov
add
ljmp
loop
cmpsl
bound
mov
add
in
adc
cmp
into
push
add
add
mov
insl
scas
int
add
stos
xchg
pop
not
xor
mov
add
xchg
gs
add
cmp
add
fnstcw
mov
or
arpl
push
add
mov
sbb
pop
add
movsl
dec
mov
iret
xor
jle
out
xor
arpl
into
mov
add
mov
inc
inc
shll
add
inc
add
or
lock
xor
add
mov
test
add
mov
int3
fadds
out
into
lcall
lret
int3
adc
add
xchg
adc
mov
xchg
out
xor
pop
add
cwtl
mov
add
add
add
xor
les
imul
cmp
out
aad
add
je
cmpsb
loop
lock
in
inc
add
sbb
fdivrs
jmp
jne
lret
bound
lea
xchg
pop
add
or
add
leave
imul
aas
sahf
gs
jecxz
movsb
leave
fs
push
add
add
call
lahf
pop
repz
xchg
xor
cmp
mov
xchg
mov
lcall
add
add
scas
lods
cmpsl
cmp
inc
add
inc
int3
cmpsb
rorl
add
rorl
add
test
cld
mov
bound
sbb
push
adc
sahf
shlb
add
cwtl
add
push
jmp
fdivrl
xchg
icebp
or
jmp
movsb
mov
adc
cwtl
mov
addb
dec
pop
add
inc
xchg
add
jle
int
add
shll
push
dec
add
jae
jns
add
mov
add
push
sub
into
or
lods
aas
testl
add
mov
or
adc
xor
test
or
add
sbb
popa
mov
leave
pop
add
inc
add
inc
add
sbb
add
cmp
mov
xorb
jbe
ja
add
jmp
xchg
roll
pusha
add
ret
or
add
push
add
adc
lcall
imul
add
cmp
sub
popa
or
push
adc
orl
js
hlt
and
or
add
add
pop
in
mov
insl
mov
dec
add
pop
cltd
xor
add
add
and
add
add
insl
xchg
stc
cld
dec
add
pop
push
js
bound
fidivrs
add
lods
outsl
pop
add
add
push
add
shlb
xor
xorb
cmpsb
rcrb
pop
cmp
ret
cmpsb
popa
jmp
popf
cltd
lods
push
pop
ljmp
add
add
jmp
mov
inc
add
add
jno
adc
int
add
add
sarl
add
pop
add
cmpsl
clc
sti
xchg
adc
add
popa
jne
sub
xchg
xor
dec
mov
jecxz
cmp
mov
out
xchg
stc
movsb
add
les
sub
xchg
add
push
add
loop
mov
pusha
add
mov
push
add
dec
add
xchg
add
add
jecxz
lods
loope
mov
xchg
mov
and
add
mov
mov
in
add
ror
je
mov
jle
negb
adc
xor
sahf
inc
add
mov
sbbl
cmp
popf
inc
add
lret
lods
push
add
lds
add
and
cli
push
add
je
mov
mov
xlat
sbb
mov
lods
push
scas
xor
xorb
aas
xor
add
dec
add
mov
mov
add
fcmove
jnp
add
add
jns
jne
xor
subb
jo
fwait
bnd
mov
add
add
daa
or
push
fimuls
in
xchg
lret
xor
xchg
push
add
jne
add
xchg
cmpb
xor
xorl
mov
pop
add
sbb
add
je
call
testb
add
push
add
dec
add
and
jecxz
add
js
mov
inc
add
lret
mov
inc
ret
push
add
je
push
add
mov
add
js
js
jg
cld
jo
sbb
jle
cmp
outsl
cmp
jecxz
and
arpl
pop
xlat
add
repz
xor
pop
xor
and
add
jg
push
add
fstps
mov
add
leave
or
cmc
push
add
stc
call
add
decb
jecxz
inc
test
data16
aas
push
stc
jge
cs
lret
insl
loope
out
and
lds
dec
add
jns
cmp
rclb
add
add
sti
stos
test
add
loop
mov
add
mov
icebp
xchg
mov
or
lret
hlt
scas
mov
insb
add
cltd
xchg
or
pop
jnp
add
in
mov
stc
push
add
std
mov
mov
add
ret
push
add
imul
add
aad
add
add
sti
add
add
int
adc
dec
jae
add
add
into
scas
xorl
push
add
adc
add
pop
outsb
add
rolb
xor
imull
xchg
jnp
sbb
push
add
in
add
ja
aaa
mov
ret
mov
add
cmp
add
into
add
inc
add
shrl
jb
ja
adc
lret
mov
jo
push
push
add
jle
push
add
jg
decb
nop
inc
add
or
sahf
pop
jmp
add
into
in
aaa
shrb
add
and
loope
pusha
add
cwtl
mov
rcl
add
xchg
jge
add
add
rol
pop
add
xchg
xor
pop
sahf
pop
add
gs
xchg
adc
sbb
sbb
icebp
cmpsl
movsl
mov
std
lret
add
add
mov
aad
add
cs
rolb
pop
add
sahf
lods
pop
add
in
mov
mov
add
pop
add
movb
adc
mov
test
popa
rcrl
xlat
cs
pop
iret
adc
shlb
add
xorl
pop
add
sbb
mov
mul
cwtl
cmpsl
cmpsb
sbb
add
aaa
pushf
dec
add
mov
in
scas
push
jmp
stos
aaa
add
mov
imul
lcall
add
push
add
mov
repnz
pop
insl
xchg
xor
test
add
add
inc
add
add
movsb
insb
add
add
mov
pop
push
test
sub
pop
inc
add
movsb
fcomp
push
add
push
pop
cli
lcall
add
add
pop
stc
xor
stc
inc
andnps
fldl
xchg
insb
add
add
adc
add
add
inc
out
je
lahf
rcl
add
mov
hlt
std
mov
push
add
in
push
icebp
inc
add
push
lcall
cmp
sahf
faddp
mov
enter
mov
mov
xchg
or
sbb
or
mov
jle
scas
insb
add
sahf
cmpsl
aam
mov
mov
add
nop
aad
add
fldt
hlt
sti
ja
in
add
sub
cmp
out
jmp
add
jns
jb
dec
push
add
push
add
scas
ret
cld
push
aaa
stos
into
fidivl
outsl
xchg
dec
jge
pavgw
add
or
add
pop
loope
outsl
aad
add
aas
xlat
push
ficoms
in
cli
rcrb
call
loope
mov
add
ret
push
mov
dec
add
pop
or
fldenv
lcall
cmc
push
lods
mov
ret
les
jae
add
mov
push
add
cmc
sti
push
add
dec
add
lods
and
xlat
add
imul
mov
or
xor
bound
ficompl
pop
add
add
add
sub
xor
cmpsb
lea
or
cmpl
fisttpl
mov
pop
add
add
pop
lods
imul
clc
sbb
test
loopne
add
sub
icebp
and
addl
cmpl
add
std
addr16
add
add
push
fiaddl
nop
testb
std
dec
mov
cmp
sub
mov
mov
imul
add
jb
xor
or
add
add
mov
movsb
mov
stos
jb
jp
inc
sahf
xor
test
sbbl
aam
cmp
xor
lea
js
xchg
lahf
loop
enter
test
dec
add
sbb
stos
push
into
movsl
pop
out
adc
lret
stc
push
jp
lcall
mov
mov
add
scas
div
icebp
clc
and
mov
mov
add
rorl
add
xchg
sbb
jne
add
cmc
sub
inc
add
or
adc
mov
add
out
lock
mov
mov
js
pusha
add
add
imulb
fnstcw
test
mov
push
xchg
leave
sbb
mov
fistpl
int
repz
push
add
xor
cltd
inc
repz
add
pop
cvtpi2ps
clc
stc
lods
push
lret
jecxz
cmp
cmp
aas
xor
mov
pop
add
aaa
fcmovnbe
lds
add
pop
add
cmp
fldenv
cs
stc
sbb
sti
pop
add
mov
insb
add
xchg
das
sbb
dec
add
jl
add
and
cmpsb
js
pop
imul
mov
push
fdivr
sbb
xchg
xchg
adc
loope
in
dec
add
pop
xchg
add
push
hlt
sub
mov
dec
add
mov
push
add
inc
add
aam
add
push
jg
addr16
pop
add
add
mov
std
rolb
jge
xorb
add
mov
adc
imul
jmp
add
add
add
jg
add
sahf
and
imul
and
xor
cmp
pop
inc
sti
mov
adc
mov
sbbl
sub
leave
sub
sbb
je
xlat
cmp
adc
add
negl
insl
out
stos
out
inc
mov
pop
add
inc
add
add
stos
xor
enter
test
add
adc
xor
jmp
add
fucomip
in
xorb
sbb
jge
mov
add
dec
sub
add
lods
sub
mov
add
loopne
in
jp
das
fistps
add
lods
mov
cmp
movsb
and
mov
mov
add
sub
das
or
jecxz
pusha
add
das
lea
imull
stos
pop
add
add
cli
push
dec
add
add
dec
add
pop
jo
inc
or
inc
pusha
add
xor
add
and
adc
scas
and
jne
inc
pop
and
add
in
and
stc
aad
cmpsl
xor
mov
sub
scas
lret
xorb
sbbb
add
pop
and
pop
cmp
enter
fadds
aad
jg
outsb
add
pushf
jmp
cmp
jb
push
add
mov
fimuls
add
add
cmp
test
add
adc
dec
sarb
cmpsl
sti
and
cwtl
int
das
cmp
shl
sbb
inc
add
add
out
leave
mov
sub
ss
imul
popa
push
xor
push
add
decb
ja
pop
mov
insb
add
add
pop
add
addr16
mov
cmp
stos
push
add
out
or
pop
push
add
add
stos
aaa
les
xchg
jo
repz
add
popa
cmpsb
adc
mov
mov
mov
movsb
aas
dec
cmp
xor
jecxz
add
xor
inc
add
iret
mov
push
insl
into
pop
outsl
lcall
scas
outsl
cmpsl
add
sub
repz
cmp
in
xlat
test
mov
lds
or
mov
xchg
in
xchg
aad
add
fidivs
add
std
fwait
enter
mov
add
gs
test
mov
add
push
add
add
add
adc
fucomip
xor
arpl
inc
add
add
add
aas
xchg
sarl
xchg
add
add
add
lods
add
imul
cmp
xor
aas
leave
cmp
pusha
add
aad
add
mov
enter
mov
add
xor
mov
mov
fimull
add
pusha
add
mov
add
add
cltd
cmp
jecxz
inc
cmc
xchg
add
add
push
cwtl
aas
inc
add
add
add
xor
iret
imul
ljmp
in
mov
add
push
cld
rcrb
fwait
jbe
sub
fnstenv
add
mov
data16
pushf
xor
in
add
inc
add
arpl
or
mov
imul
add
ja
push
cmp
test
jnp
add
dec
add
cli
cwtl
ret
jl
mov
add
dec
add
cmp
mov
adc
sbbb
pushf
pop
add
mov
xor
adc
pop
add
and
ljmp
into
call
test
shl
mov
xor
jb
in
mov
dec
sbb
mov
xchg
or
lahf
pop
add
add
aam
sbb
inc
add
leave
aad
mov
and
add
imul
mov
push
add
add
insb
add
or
cli
pop
inc
in
int3
lahf
adc
in
cmp
addr16
xchg
and
push
add
sbb
stos
sbb
mov
addr16
sbb
or
aaa
cmp
pop
add
add
add
add
add
aas
jb
jno
add
out
mov
cmc
jo
and
pop
mov
inc
add
mov
mov
loop
sbb
add
mov
add
ja
jp
mov
sbb
xchg
sti
test
in
add
or
loope
imul
push
add
inc
pop
add
xor
pop
add
mov
pushl
dec
add
stos
nop
xchg
cmp
adc
xor
xor
icebp
mov
mov
sbb
adcl
into
mov
shll
add
sarl
add
dec
int3
mov
dec
imul
add
sub
mov
cmpsb
cmpb
add
push
add
mov
push
add
out
in
mov
sub
int
pop
test
add
add
insb
add
pop
jg
jle
xchg
cmpsb
popa
sub
add
imul
xor
int
add
pop
std
test
push
bound
and
out
test
data16
movsb
inc
add
mov
jae
hlt
xor
pop
add
add
add
dec
jb
pop
mov
pop
mov
aad
stos
sbb
enter
cltd
or
dec
add
sbb
add
add
and
push
add
adc
sub
cmp
andb
mov
call
and
sbb
dec
add
xor
cmp
fsts
out
inc
push
mov
pop
add
bound
data16
stc
cltd
hlt
sbb
add
add
lods
cmp
shlb
xchg
outsl
inc
add
adc
push
push
add
and
inc
add
aad
push
add
lock
xchg
xchg
add
add
add
add
or
icebp
ja
aam
add
add
fld
mov
xorl
adc
pop
jecxz
add
add
add
and
and
loopne
cltd
sbb
ret
pop
rcr
rorl
fdivl
fsubr
movsb
mov
jnp
repz
icebp
negb
stc
rolb
cmovbe
mov
pop
or
cmpsl
inc
arpl
add
mov
add
cmp
inc
dec
add
xchg
lods
lahf
dec
add
add
xchg
mov
sub
jbe
bound
push
add
or
in
add
lods
inc
add
push
or
add
add
addr16
lea
add
into
lcall
fistps
out
and
mov
pushf
cmpsl
clc
adc
les
stos
adc
add
ret
or
jae
adc
icebp
dec
repnz
add
gs
mov
jo
sub
add
fwait
leave
push
test
jmp
ja
pushf
xchg
in
xor
mov
data16
cmpsb
xchg
mov
inc
add
add
subl
add
mov
cmp
add
jle
mov
add
pop
add
pop
cmp
push
fwait
dec
push
iret
adc
insl
push
inc
add
sbb
jbe
push
add
add
lock
sti
mov
push
add
sbb
aas
rcr
loop
xchg
lret
cmp
ljmp
cmp
das
test
add
mov
cmpsb
pop
inc
mov
add
rcrl
or
and
push
hlt
or
add
adc
test
mov
insl
mov
and
enter
add
dec
pop
fst
insb
add
jmp
mov
push
push
popa
jl
inc
or
push
jge
push
mov
sbb
xlat
inc
add
push
add
adc
in
add
add
lret
cmp
mov
pusha
add
pop
xorl
loop
xchg
or
jo
add
pop
add
adc
pop
xchg
lock
pop
add
add
push
insl
push
add
insl
add
mov
dec
add
mov
data16
mov
into
pusha
add
aaa
movsb
jbe
or
jg
add
add
insb
add
add
add
sbb
in
sahf
mov
add
dec
add
lea
jp
dec
add
add
cmp
xchg
into
insb
add
and
in
je
xor
xor
cmp
repnz
scas
repz
add
add
sbb
pop
jno
test
sub
inc
andb
dec
out
in
fstl
pop
add
data16
mov
add
sub
add
repnz
aaa
or
xor
frstor
aad
add
xchg
fsts
leave
mov
loopne
mov
call
xchg
xchg
in
mov
pop
add
xchg
add
sti
insl
insl
adc
add
in
sbb
pop
add
jecxz
inc
sbb
push
add
add
or
mov
add
iret
push
add
cmp
mov
inc
iret
xchg
je
test
mulb
and
pusha
add
jmp
pop
xor
cmp
pusha
add
xchg
xchg
add
out
clc
aaa
dec
popf
in
jl
not
ficoms
or
scas
outsb
add
push
add
jmp
add
insb
add
mov
add
jecxz
sub
add
outsl
lods
loopne
xor
add
mov
or
aaa
data16
push
adcb
cwtl
mov
sub
jmp
pop
add
je
xor
add
and
add
loop
shll
outsb
add
subb
add
add
inc
add
hlt
add
or
add
sub
sbb
call
add
movsb
test
and
jcxz
pminub
xchg
add
jge
add
add
mov
pop
dec
add
out
repnz
add
sbb
or
or
xchg
add
push
add
cltd
mov
sbb
xlat
lret
imul
in
stc
pop
lock
add
pop
add
loope
mov
cmp
js
xchg
clc
inc
sbb
adc
cmpsl
aam
lcall
int
cmp
pop
jp
addr16
outsb
add
add
lods
mov
jo
pop
xor
and
fwait
cli
jp
inc
add
dec
cmp
imul
rorb
dec
add
xlat
pop
add
mov
ret
xor
lock
xchg
insb
add
xchg
inc
add
sahf
xchg
push
mov
lret
insl
adc
add
mov
add
aas
scas
rorb
mov
xchg
jle
lock
stos
ja
imul
inc
cmp
add
cwtl
mov
add
cmpb
inc
rolb
lret
add
xor
aaa
loopne
add
push
add
add
stos
stos
shrl
fisttpl
outsb
add
mov
add
mov
add
aad
add
sbb
mov
cmp
bound
aam
out
test
test
popf
pop
xchg
or
add
lea
incb
add
add
mov
mov
dec
cmpsb
popf
inc
add
mov
pop
inc
add
xchg
ret
add
incb
push
add
sub
repnz
hlt
adc
mov
add
add
add
mov
arpl
sub
add
adc
add
fisubrl
add
imul
mov
dec
add
cld
adc
je
push
add
cwtl
jns
add
add
dec
add
adc
adc
xchg
add
jp
lcall
jns
push
movsb
sub
test
add
aam
cli
arpl
mov
add
add
add
add
fs
or
push
add
ds
mov
mov
sub
insl
js
dec
dec
push
add
add
add
mov
add
inc
add
js
ror
sahf
out
add
pop
add
add
add
add
add
push
es
cmp
cmp
sahf
jmp
push
add
subb
and
mov
push
lods
jbe
or
jecxz
mov
inc
xor
xacquire
aaa
push
add
and
js
and
jge
scas
outsl
icebp
mov
add
add
cltd
push
sub
add
push
or
xchg
out
cmp
cmpsl
sbb
dec
add
add
jae
std
in
pop
in
add
mov
sti
xchg
add
js
mov
xchg
xchg
cli
popf
subb
stc
lahf
push
push
sub
add
shll
add
and
cmpsl
add
jae
add
add
cmp
movd
push
mov
push
add
shr
loopne
and
push
or
pop
cwtl
pop
mov
add
xor
repz
and
add
call
add
rorl
add
aas
aaa
and
into
xor
lods
xchg
or
mov
test
mov
ja
add
add
sbb
out
inc
add
nop
lret
jp
xchg
mov
icebp
ljmp
les
out
sti
adcl
loopne
vpminsw
das
mov
clc
xchg
aas
jne
and
add
or
mov
add
imul
add
fdivrs
ja
adc
sub
or
clc
mov
xor
add
mov
stos
mov
sarl
mov
xor
les
mov
in
idivb
add
jne
jge
cmp
add
add
cmp
in
lods
cmp
shr
cmp
mov
subb
orb
mov
adc
mov
jae
or
das
inc
add
and
in
out
add
aas
sbb
mov
pop
add
mov
ficoms
dec
add
jge
add
insb
add
cltd
lods
test
mov
sbb
cmp
cmc
dec
add
add
cmp
inc
cwtl
mov
add
and
add
clc
aas
xor
jns
fwait
sbbl
ret
add
add
mov
mov
add
xchg
stos
ret
add
imul
add
pusha
add
cwtl
pop
mov
data16
pop
add
enter
push
add
iret
loopne
add
and
xchg
fisttps
mov
popa
loop
xor
mov
sti
sbb
loope
mov
add
or
orl
mov
fnstenv
add
cmp
add
add
fsqrt
andl
add
jge
add
sbbb
add
push
add
xor
xchg
inc
cmp
push
icebp
xchg
jge
cmp
add
aaa
loopne
add
or
addr16
sub
xor
daa
out
in
xchg
add
jp
xor
sbb
mov
dec
add
add
add
or
in
jno
push
add
push
add
add
jcxz
add
adc
incl
add
subl
inc
dec
jb
int
add
adcl
rolb
mov
test
cltd
push
mov
fstpt
add
popf
ja
sub
add
mov
lahf
lea
add
add
add
mov
cmp
cmp
icebp
pop
mov
pusha
add
xor
jns
test
call
int3
xchg
sub
push
out
add
jns
inc
jb
xchg
push
add
outsb
add
out
add
add
cmp
add
cwtl
sub
cltd
and
pushf
mov
add
xor
sub
int3
add
xor
mov
add
add
aas
fisubs
jb
in
mov
add
dec
push
add
ss
mov
lds
movsb
stc
stos
pop
cli
cmp
popf
cmp
das
shl
jno
out
push
add
sbb
cld
inc
notb
push
sti
cmp
gs
loopne
iret
stc
daa
cmp
inc
les
add
fnstenv
pop
add
aam
daa
sti
repz
mov
add
pop
rcrb
test
add
add
sti
sub
add
fistl
cmp
sti
xchg
icebp
ljmp
sbb
aas
jbe
popa
imul
xchg
xor
inc
jmp
lea
test
mov
add
mov
stos
add
push
add
add
mov
scas
add
sub
push
add
xchg
shrb
mov
sbb
jp
popf
cmp
int
mov
add
jnp
sti
inc
add
xchg
xor
sub
push
add
mov
cld
and
frstor
or
inc
push
add
js
adc
ds
cli
out
cmpsl
mov
sub
or
dec
stos
mov
add
add
add
shr
inc
icebp
jb
dec
xor
xchg
ljmp
jmp
out
xchg
out
mov
and
imul
inc
push
add
iret
sti
stc
add
ret
lret
scas
fbstp
cwtl
fimull
add
pop
inc
insl
cltd
pop
jns
lea
add
add
sti
in
jmp
add
adc
jo
fstp
clc
test
add
orb
enter
pop
add
push
add
xchg
loopne
sub
aaa
fs
xor
add
nop
ret
je
push
add
inc
add
lahf
xor
mov
loop
sub
xor
lahf
cltd
jns
add
push
mov
dec
add
add
nop
cltd
mov
add
sarl
mov
and
xor
xchg
roll
mov
mov
inc
add
add
xchg
rcll
dec
in
in
xor
aam
int
push
add
push
pop
fwait
or
jbe
sbbb
movsb
ficoml
add
dec
add
xchg
pop
add
add
cmpb
add
stc
pop
add
mov
stos
cltd
and
in
dec
nop
pop
mov
ljmp
mov
add
add
aas
les
ret
cmp
add
and
add
add
add
jg
add
mov
xor
mov
pop
add
call
mov
mov
lcall
mov
subb
dec
pop
xchg
jmp
add
push
add
mov
sub
or
cmp
dec
add
test
dec
add
in
ret
and
or
les
movsl
orl
aas
popf
mov
add
add
add
dec
add
add
shll
adc
fldenv
add
fsts
add
cmp
scas
cmp
movsb
int3
xchg
inc
cld
mov
adc
add
push
jl
pop
xor
push
add
add
lcall
add
xchg
iret
movsl
mov
loope
mov
fcmovbe
jbe
sub
test
mov
xor
adc
lods
or
and
adc
add
pusha
add
push
add
repnz
add
push
sbb
add
pop
xor
add
pusha
add
fidivl
out
adc
leave
sub
call
fimuls
xchg
adc
dec
add
cmc
pop
dec
add
add
loopne
add
addr16
cli
fists
adc
mov
push
add
mov
add
add
or
adc
or
fildl
inc
add
ljmp
movsl
push
add
add
clc
sbb
add
stos
lcall
xchg
add
add
aas
sub
sub
or
dec
or
and
lds
add
xchg
pop
stos
and
mov
add
mov
add
lahf
jmp
add
pop
pop
sbb
cmpsl
divb
insb
add
mov
pushf
fs
aas
or
xchg
sbb
cmpsb
sahf
icebp
xchg
inc
add
loope
ret
and
add
std
enter
add
repz
std
pushf
fsubl
dec
mov
adc
add
add
dec
add
inc
pop
shrl
pop
add
shlb
add
cmp
and
mov
add
out
enter
mov
add
out
add
leave
inc
add
decb
add
aaa
scas
daa
adc
in
add
cli
or
loopnew
lret
xchg
je
cwtl
push
add
mov
pop
add
pop
add
lods
sbb
mov
add
and
xchg
xorb
add
push
add
and
mov
cmp
idivb
ds
loope
add
cmp
push
pushf
lods
push
add
aas
int
jae
sbb
out
adc
divl
add
jg
aas
test
sub
sub
popf
mov
fistl
add
xor
sbb
mov
xchg
xor
mov
das
pop
add
add
and
xor
dec
add
or
mov
jle
inc
add
enter
mov
add
add
add
dec
add
adc
shll
pop
add
xor
paddsb
popf
aas
es
inc
add
add
mov
cs
arpl
fnstsw
jno
add
mov
cmp
mov
add
inc
das
push
add
movsl
add
jns
ljmp
or
jecxz
xor
mov
add
mov
push
add
das
test
inc
bndstx
add
sub
rcll
sbb
shl
push
add
add
iret
ljmp
subl
add
clc
lret
stc
push
add
add
bound
cmp
mov
sbb
ret
rol
add
ds
fildll
adc
pop
lods
daa
add
add
xorl
fistps
add
inc
add
add
add
or
repnz
add
cli
mov
dec
inc
add
add
push
add
call
movzbl
enter
cmpsb
gs
push
add
add
mov
mov
iret
xchg
inc
fsubs
fistpll
add
add
sbb
mov
adc
add
inc
add
filds
sti
and
fidivs
aad
add
scas
movsl
push
add
sbb
sub
hlt
cld
jp
inc
mov
rcll
adc
cld
xchg
dec
add
pop
add
lahf
ret
add
mov
or
adc
mov
pop
fwait
push
pushf
adc
add
jp
popf
xor
add
pop
jp
cmp
push
popf
add
cmc
and
add
add
icebp
imul
and
das
xchg
sub
movsl
add
mov
add
adc
xchg
pop
add
aas
outsl
notl
out
movsb
imul
or
sbb
push
add
cmpsb
sbb
hlt
sbb
xor
add
sbb
add
cmpsb
sbb
push
mov
aaa
mov
in
inc
mov
and
loope
unpcklps
out
adc
testb
sbb
movsb
arpl
aam
cmp
jb
push
add
add
lret
add
mov
xchg
add
cli
mov
mov
loop
xchg
fiaddl
push
add
sub
add
push
add
and
dec
add
cmp
add
out
pop
jmp
add
add
add
out
add
scas
movl
add
add
inc
cli
int3
movsl
mov
bsr
push
stc
jle
in
pop
fsubrl
xchg
add
cli
dec
add
add
shll
add
test
jmp
or
sarl
add
push
mov
cmp
sub
lods
test
add
jb
aam
add
and
add
data16
mov
cmpsb
cmc
xor
add
aas
pop
push
add
add
test
or
add
adc
shr
inc
pop
add
sub
loope
ss
mov
push
in
dec
add
add
icebp
lahf
sbb
cmpsl
or
push
std
jp
jle
and
shlb
adc
mov
fcompl
add
sub
xlat
pop
add
add
add
add
add
xor
add
xor
add
sub
ret
or
mov
fnsave
lret
test
aaa
lahf
enter
mov
lods
movsl
pop
clc
dec
add
push
add
add
das
rorl
xchg
gs
add
inc
add
icebp
dec
add
loop
push
add
push
add
icebp
int3
mov
cmpsb
imul
stos
hlt
cmp
add
add
cmc
bound
adc
mov
imul
add
lret
out
add
add
add
add
pusha
add
add
add
adc
inc
adc
aaa
enter
add
add
add
mov
popf
jl
push
add
mov
mov
loopne
add
add
xchg
cli
mov
xor
or
xor
mov
mov
add
je
push
add
imul
push
sbb
mov
add
test
inc
cwtl
gs
imul
add
add
mov
lods
push
add
stos
pop
add
dec
add
add
out
and
push
add
and
fwait
xchg
mov
mov
and
add
dec
add
dec
add
push
add
add
push
mov
adc
add
into
ja
pop
adc
inc
add
jb
sbb
jbe
adc
add
sbb
add
add
mov
out
jno
add
add
add
xchg
add
aam
enter
cmp
dec
add
stc
add
pop
add
fwait
sub
add
rolb
aad
add
mov
shl
fwait
into
and
cmp
mov
clc
js
iret
inc
add
in
jmp
add
add
add
jp
mov
adc
sarb
add
cld
dec
mov
sub
in
add
and
stos
pop
mov
ss
enter
inc
hlt
dec
add
sub
or
add
dec
add
in
addr16
scas
xor
mov
cmpsb
clc
add
add
popa
hlt
xchg
mov
adc
aas
dec
add
push
std
and
test
lods
lahf
add
push
cmp
movsb
mov
mov
adc
test
add
mov
add
add
sbb
add
adc
and
loope
inc
pushf
je
cmp
rol
add
add
mov
mov
cmp
movsb
push
add
shl
and
cmp
xor
mov
xchg
ret
test
aam
fsubr
pop
sub
sbb
cmp
push
add
mov
mov
pop
push
add
out
xor
and
inc
inc
add
add
jle
sets
pop
cld
mov
jge
dec
add
xor
add
or
mov
sbb
std
sub
sysret
dec
aad
les
int3
mov
jo
imul
ret
sub
rcrb
lcall
jne
stos
pop
push
add
add
int3
mov
add
leave
shrl
add
add
add
sub
outsb
add
cmp
lods
dec
add
add
cmc
jns
cmp
push
sub
add
fmull
rcrl
cmp
jbe
mov
add
rorb
std
mov
add
sbb
nop
cmp
xor
add
scas
jns
lea
add
mov
xor
in
sub
cmp
bound
xchg
push
mov
bound
or
jb
pop
add
dec
add
add
dec
cltd
mov
add
add
xlat
in
dec
add
adc
call
pop
add
add
pop
add
xchg
out
es
xor
dec
add
jb
daa
xchg
jmp
sub
mov
cmp
cwtl
movsb
call
lods
mov
sbb
pop
jnp
and
mov
add
insb
add
das
in
arpl
loope
add
add
add
add
add
add
adc
fucom
jp
sub
and
xchg
lcall
in
add
gs
add
fistpl
add
xor
out
or
inc
inc
add
and
add
rorl
cmp
in
add
or
cmp
sbb
int
std
popf
lea
call
add
rcl
imul
mov
cltd
cmp
add
or
add
ret
iret
inc
cmp
cld
loop
add
xchg
dec
add
push
add
sbb
lcall
mov
arpl
jne
dec
fistl
stos
jg
lahf
out
dec
add
add
outsb
add
scas
jo
movsb
das
mov
test
push
add
add
add
add
push
xchg
push
add
cmpsb
jo
in
xor
popf
inc
add
pop
js
pop
add
data16
daa
push
push
add
add
add
add
mov
stos
jns
add
loope
stc
repz
divb
ljmp
jns
add
push
add
and
add
insl
sbb
pop
add
ljmp
adc
add
add
add
add
into
adc
add
push
add
add
pop
mov
cld
jmp
add
lock
mov
sbbb
push
add
jmp
add
adc
add
js
imul
jno
pop
scas
mov
cld
gs
fcoml
add
inc
lods
mov
shr
push
add
and
xchg
scas
or
out
test
add
ret
dec
add
add
add
add
dec
lods
test
in
repnz
jle
push
flds
push
pop
ret
cmp
and
mov
cmpsl
jnp
mov
test
cmp
add
out
enter
mov
push
adc
add
xlat
popa
incl
cmp
and
rorl
dec
sub
pusha
add
fistpll
scas
cld
mov
pop
add
bound
test
or
out
adc
dec
add
cmpl
jbe
cmp
dec
add
add
mov
repz
and
adc
movb
jle
dec
add
stc
add
push
int3
lock
dec
ret
add
ret
lcall
jmp
addr16
add
loopne
mov
mov
leave
fistpll
add
add
xor
repz
in
dec
shll
stc
inc
mov
idivb
add
mov
pop
push
add
int3
outsl
xchg
push
adc
adc
pop
gs
xor
dec
add
mov
test
mov
test
call
xchg
mov
lea
add
mov
rclb
inc
fstpt
add
xchg
pop
mov
int3
stos
test
dec
add
mull
movsb
add
and
lods
mov
add
and
dec
out
add
or
or
push
add
add
loop
test
add
lds
add
add
loop
inc
add
add
mov
popf
mov
add
test
mov
aam
imul
mov
lock
add
push
add
lret
mov
add
rorb
daa
fwait
ret
leave
push
add
stc
lods
adc
paddusw
add
lahf
mov
add
js
mov
sbb
and
push
out
in
add
int
push
add
ficompl
fs
add
sub
dec
adc
cmpsl
push
push
add
push
fcmovnb
lds
add
sub
outsb
add
mov
and
aaa
sub
pop
cltd
xchg
lods
fnstenv
add
jl
jmp
add
bound
jl
dec
add
push
mov
inc
or
out
push
add
ljmp
push
adc
popa
push
add
or
mov
cmp
jbe
aad
xchg
outsl
cmp
cwtl
insl
mov
jecxz
jl
add
mov
nop
cmp
push
fisttps
mov
test
mov
jno
add
add
jnp
shlb
pop
add
add
or
clc
mov
cltd
in
add
push
add
sub
fidivrl
mov
stc
xchg
mov
add
lret
or
mov
cmp
add
test
out
jnp
add
adc
add
xchg
cmc
movsl
jo
addr16
aaa
scas
loop
rcr
inc
add
jnp
cmp
and
add
mov
div
mov
inc
fs
ljmp
cmp
out
sarl
mov
mov
mov
add
scas
xor
jnp
add
stos
jmp
add
add
cmp
xchg
pop
rcl
stc
jb
xor
push
add
rolb
cmpb
popf
in
push
adc
inc
sarl
aam
push
add
dec
shll
push
outsb
add
pop
jae
pop
add
sbb
scas
rcrb
add
mov
addr16
test
adc
sbb
push
lret
add
jg
push
add
fwait
test
push
add
mov
jecxz
add
jg
add
add
icebp
test
rcr
jle
divl
adc
cltd
add
xchg
sub
sbb
add
mov
sbb
mov
add
lods
js
cmpb
mov
inc
adc
test
test
pop
sbb
and
sti
movsb
nop
add
inc
push
add
or
adc
fcompl
jbe
and
sbb
adc
dec
add
add
fcompl
mov
add
mov
call
mov
add
es
test
add
add
and
add
add
mov
add
ljmp
inc
add
add
out
xchg
jo
popa
fwait
bound
push
mov
xchg
insb
add
pop
adc
pop
cltd
xchg
add
add
arpl
add
add
add
mov
cmp
insl
and
add
push
add
jo
aaa
dec
add
out
imul
add
arpl
shr
stos
pop
add
cmp
mov
bnd
fcomip
dec
add
sbb
push
add
sub
add
ss
das
arpl
mov
inc
add
mov
add
in
xchg
push
add
or
js
mov
add
sub
add
xor
cmp
addl
aam
sti
xor
xchg
pop
mov
sbbb
xor
clc
repz
sbb
mov
sub
mov
sbb
sbb
call
add
incb
add
leave
adc
xchg
flds
lcall
inc
lods
pop
out
lahf
pusha
add
add
add
inc
xchg
ret
xor
pand
fiadds
add
sbb
cwtl
and
sbb
cmp
add
add
ljmp
push
int3
or
std
lea
stos
orl
ds
movsb
fwait
cmp
popf
push
pop
movsl
fistl
mov
add
mov
cmp
mov
insl
sbb
xchg
adc
in
add
test
inc
repz
jno
add
pushf
in
xor
pop
sub
bound
mov
lock
push
adc
cmp
add
mov
ljmp
imul
popa
in
xchg
xor
in
jne
cltd
cmp
pop
pop
mov
jnp
cmpsb
outsl
in
fadds
mov
js
int
add
mov
push
add
sbb
pushf
mov
movsb
push
shl
popa
std
ret
das
stc
add
ja
adc
sbbb
add
push
add
jl
mov
add
nop
push
add
add
add
add
call
mov
int
dec
lods
shll
add
add
inc
add
add
arpl
arpl
outsb
add
add
clc
adc
cmp
icebp
add
push
add
mov
jp
call
sarb
sbb
pop
add
add
loopne
add
dec
add
push
add
in
shrb
sbb
mov
add
xchg
cmp
shll
jg
testl
push
add
repnz
js
pop
add
stos
or
out
add
stos
call
mov
push
pop
add
pop
pop
mov
add
popl
ja
add
add
xor
sbb
cltd
pushf
jge
mov
cmp
xor
add
and
add
mov
cmpb
pop
aam
fsubrs
dec
repz
add
js
adc
mov
add
mov
call
add
ficoml
mov
mov
repnz
int3
cmpsb
mov
pop
pop
add
add
roll
jno
jb
jecxz
mov
jno
xor
push
add
add
lods
les
pusha
add
inc
rol
data16
mov
mov
add
adc
add
add
pop
lods
sbb
push
sub
movsl
inc
adc
mov
add
inc
add
int
xchg
dec
mov
jno
add
xor
add
jle
fcmovbe
pcmpgtw
std
inc
add
push
add
add
push
xor
add
test
dec
nop
loope
cmp
sahf
fnsave
out
jecxz
add
lods
into
fiaddl
jnp
fdivl
add
pop
add
jns
jns
in
out
ja
add
add
jno
add
inc
add
out
rorl
add
jbe
jg
add
dec
push
popf
pop
pop
outsl
or
adc
movsl
rorb
les
int
stos
pop
jle
and
or
dec
add
imul
add
add
add
add
mov
dec
add
les
add
add
fcomps
and
mov
cwtl
sub
rclb
mov
mov
add
xchg
or
push
add
pop
adc
fistl
incl
add
lock
pop
jne
xchg
iret
push
hlt
cmc
xor
or
add
movsb
push
add
add
aad
xchg
jne
sbb
sub
mulb
add
call
iret
ror
mov
imul
les
in
xchg
cmp
jno
in
fldcw
add
mov
add
out
je
jbe
fsubp
ror
mov
pop
cmpsb
aas
sub
jecxz
lahf
call
cld
jnp
ret
jle
subb
sar
cwtl
add
dec
sbb
add
pusha
add
orb
add
add
add
rorb
or
sub
add
movsb
pop
add
das
push
add
add
idivl
das
push
add
add
ljmp
add
mov
and
popf
into
pop
pushf
push
add
dec
bswap
mov
cld
cmp
cmp
inc
add
mov
ret
mov
repnz
or
adc
aad
sub
in
in
or
jns
xchg
add
dec
jge
cmp
inc
add
xor
xchg
cld
test
or
cld
dec
add
lret
add
and
inc
nop
add
pop
add
add
out
add
lahf
shrl
ficompl
mov
xor
lcall
push
add
add
add
mov
pop
cmc
sub
pop
sub
jbe
push
add
lret
std
mov
in
dec
mov
data16
add
add
dec
add
subl
push
cmp
xchg
mov
mov
add
add
adc
loopne
or
dec
add
out
xchg
lds
add
sub
adcl
fwait
inc
negb
adc
mov
cmp
or
xlat
insl
call
adc
mov
lahf
ret
dec
add
aaa
fsubrl
add
inc
add
pushf
mov
mov
add
sbb
repnz
add
jb
jp
pop
jbe
and
add
and
add
and
inc
add
mov
jno
out
js
dec
lret
xor
test
add
dec
add
xor
stc
test
insb
add
add
inc
add
nop
and
cmc
aad
pop
add
pop
add
add
add
aam
mov
pop
add
test
roll
cwtl
add
mov
xor
jne
add
imul
add
addr16
add
pop
pop
fnsave
mov
loop
pop
cmpsl
pop
add
add
xor
xlat
lds
push
add
or
add
outsl
addr16
add
sub
xlat
insl
xchg
mov
push
add
add
dec
add
mov
je
mov
icebp
movb
add
loopne
outsl
std
mov
xchg
jl
xor
xchg
aaa
lcall
sbb
and
cmp
pusha
add
sub
add
icebp
lret
inc
ljmp
add
pop
add
cmp
jo
mov
repnz
clts
add
add
pop
add
das
add
add
jno
add
lods
mov
jge
xor
cmp
adc
or
test
nop
stos
stc
mov
mov
mov
add
add
add
push
add
data16
xchg
cmp
ficompl
movsb
dec
add
out
sub
leave
xchg
fistl
add
daa
test
sbb
lock
cld
rcll
add
jnp
add
pushf
sbbb
add
add
mov
dec
fisttpll
add
subl
das
pop
sub
rolb
fistps
add
sahf
popa
mov
adc
insb
add
add
in
cwtl
and
insb
add
sahf
mov
mov
add
testl
aaa
pop
push
test
pop
add
aaa
in
pushf
mov
add
or
repnz
pop
add
sarb
mov
dec
add
push
pop
add
pop
add
add
leave
pop
lods
loope
add
jae
inc
and
adc
bound
pextrw
insl
and
add
or
lods
sub
push
add
out
mov
mov
add
out
loopne
add
aas
mov
lods
out
insb
add
test
add
mov
cwtl
dec
xchg
mov
add
add
add
cmpsl
sbb
subl
int3
mov
add
pop
pop
xchg
sbb
and
fwait
and
out
mov
and
mov
adc
inc
add
lock
das
and
xor
mov
imul
push
add
cs
decb
mov
mov
adc
jo
je
inc
scas
stos
xor
add
add
add
add
add
ja
add
test
add
aas
sahf
jno
cmp
cmpsb
pop
fiaddl
add
sbb
gs
mov
mov
aam
add
mov
adc
xor
mov
cmp
jp
mov
sbb
sub
bound
icebp
aad
cmc
pop
inc
add
xchg
xchg
mov
dec
add
out
mov
add
and
mov
pushl
xchg
cs
fidivl
into
add
add
or
push
add
xchg
adc
pushf
sti
jo
stos
das
in
lahf
sti
mov
and
jne
leave
dec
sahf
lahf
test
in
mov
xor
mov
out
testb
mov
lret
test
mov
dec
imul
xor
add
add
mov
pop
add
mov
add
jnp
add
inc
mov
add
popf
jecxz
mov
fdivs
sbb
pop
add
mov
aam
add
mov
mov
add
test
mov
aaa
inc
add
sub
loop
scas
jae
test
or
xor
mov
add
pop
add
add
out
call
add
decl
adc
nop
enter
cmp
add
cmp
jno
xchg
cmp
push
add
add
ret
fcmovnbe
or
sbb
movsb
push
add
sbb
mov
cmp
scas
or
mov
jo
jmp
fwait
mov
jl
sub
call
nop
push
cmp
add
or
addb
sub
or
movb
add
fldcw
mov
hlt
dec
add
add
movsb
in
hlt
mov
cmp
leave
jg
xor
lea
add
stos
fwait
mov
int
add
push
add
and
push
loope
sbb
stos
or
test
sub
ret
add
xchg
in
mov
push
add
call
add
shlb
add
arpl
fsubl
and
out
add
push
jno
icebp
push
push
add
add
inc
pop
shlb
add
add
test
add
sub
add
add
bound
cmc
mov
jecxz
xchg
xor
loope
add
add
add
outsl
les
jle
xchg
jne
jmp
add
mov
jae
test
add
mov
jmp
mov
sbb
mov
xchg
repnz
add
xchg
jp
adc
add
mov
jbe
xchg
pusha
add
add
add
add
loop
stos
int
loop
pushf
rol
jns
add
scas
xchg
pop
add
add
xchg
mov
add
in
out
inc
add
lret
or
xchg
add
lods
data16
add
fsubr
rcr
or
bound
dec
cs
bound
sub
jecxz
lahf
sub
push
add
add
scas
sub
int3
cmp
dec
orb
aaa
repnz
add
jl
inc
jb
and
icebp
dec
pop
jb
scas
add
inc
add
mov
add
add
add
cs
mov
add
dec
icebp
inc
mov
mov
dec
add
add
add
push
pop
add
push
add
xchg
jecxz
xchg
nop
cld
adc
mov
lcall
add
add
mov
clc
fdivrp
pop
lcall
add
add
mov
and
add
jbe
jns
and
pop
inc
add
and
mov
jge
popa
lret
xor
add
pop
pop
ficoms
movsb
xchg
jnp
add
lea
add
xchg
rcl
jae
popa
add
mov
add
inc
pop
add
orb
les
add
outsb
add
cmp
mov
cld
pop
popf
out
scas
lods
dec
je
mov
add
daa
into
and
cmp
ret
jno
jl
jg
add
add
add
mov
in
push
add
add
test
mov
adc
add
xor
insl
xchg
add
and
push
out
bound
push
test
bnd
imul
inc
add
inc
gs
shlb
jp
subl
push
add
imul
mov
mov
add
lods
hlt
add
mov
add
pop
lods
push
add
movsb
bound
jle
push
add
mov
aad
add
add
add
or
mov
imul
add
pop
push
sub
add
ficompl
lock
add
sub
or
pop
add
mov
or
adc
inc
add
add
cmpsl
lahf
arpl
cmc
lcall
add
imul
sti
jmp
or
pop
adc
push
add
jne
popa
push
stc
cmp
lcall
add
or
jp
jae
add
push
add
test
add
pushf
xchg
inc
add
add
outsl
lods
icebp
pop
add
and
adc
jecxz
lret
sub
add
stc
sbb
test
lret
cmp
add
outsl
jo
pushf
testb
lahf
jnp
dec
mov
push
add
adc
add
jnp
dec
add
adc
popf
pop
sahf
ljmp
pop
add
mov
add
and
fistl
leave
dec
lcall
mov
jl
jne
mov
fdivrs
lods
inc
add
icebp
scas
sub
pop
add
adc
xor
xchg
dec
add
fbstp
popa
arpl
add
jp
jl
out
add
jbe
roll
je
or
adc
fnstenv
jns
add
adc
push
add
fld1
loopne
shlb
gs
sbb
mov
push
add
add
inc
fidivrl
stos
jae
xor
inc
add
pop
std
mov
xchg
push
add
sahf
mov
fists
fwait
in
inc
adc
sahf
dec
add
scas
or
xor
cmp
cld
add
cmp
cmpsb
mov
stc
mov
mov
add
je
sub
setle
cmc
sti
pop
add
hlt
mov
add
and
pop
add
fists
cltd
or
add
arpl
ret
xchg
fiaddl
jno
mov
lahf
movsl
ljmp
add
psraw
add
ja
add
xchg
les
jb
xchg
cmp
cltd
fmull
jmp
dec
add
sbb
mov
add
mov
movsb
shl
jecxz
dec
add
mov
iret
add
xchg
and
dec
adc
call
cmpb
add
or
out
cmp
push
aam
test
sub
cmp
add
add
pushf
dec
add
aam
pop
aaa
testb
add
pop
cltd
mov
dec
add
iret
jmp
push
add
lret
movsl
cld
inc
add
call
add
add
dec
add
aaa
inc
add
or
mov
sbb
mov
add
add
add
in
out
rorl
add
test
test
add
test
outsb
add
movsl
push
add
popa
popf
xchg
mov
mov
call
insb
add
pop
xchg
mov
and
and
insb
add
les
push
add
add
scas
inc
aam
or
sub
test
pusha
add
nop
fildl
add
add
hlt
outsb
add
ja
lret
dec
sbb
call
mov
add
cld
mov
lods
divb
sbb
sub
ret
mov
test
mov
fisubs
mov
cmpsl
cltd
cmpsl
cmp
push
stos
fldt
add
mov
add
scas
arpl
add
imul
add
push
add
push
add
add
fidivrs
push
pushf
cmp
mov
pop
mov
out
pop
sarb
lds
sbb
sub
sub
or
add
xchg
stos
inc
sbb
movb
aas
jl
nop
clts
add
add
push
adc
sbb
pop
and
inc
cmp
push
add
mov
add
in
add
add
mov
nop
pushf
inc
out
clc
sbb
cwtl
jbe
and
sbb
jbe
lock
push
pop
add
ret
xor
test
add
enter
es
push
mov
enter
add
cmp
mov
xor
sub
cmp
subb
dec
add
test
add
add
add
mov
add
push
add
out
jmp
mov
add
sub
negl
rorb
ljmp
inc
add
jbe
and
mov
add
cld
push
or
add
in
lahf
scas
add
cmp
add
dec
add
sbbl
cmpsl
mov
out
dec
and
clc
add
cltd
cmc
add
sbb
popf
aas
shlb
lret
nop
cli
adc
cmp
cmp
rorl
add
add
add
inc
add
add
out
in
loopne
adc
inc
add
lods
dec
dec
add
add
adc
mov
push
cmpsb
pop
fstl
mov
testb
mov
add
in
add
and
add
add
loope
add
mov
add
add
insl
xor
mov
les
add
jnp
add
inc
add
add
or
xor
mov
push
add
pop
test
lods
daa
std
sbb
add
add
out
pop
mov
aaa
aam
inc
add
mov
add
add
add
add
aad
push
add
add
add
in
sub
adc
out
add
mov
sarl
add
lds
xorb
add
inc
mov
das
mov
and
in
dec
add
lcall
add
fiadds
cmc
into
test
dec
push
sbb
in
mov
push
int
jbe
pushf
out
add
movsl
stos
pop
cltd
stc
scas
lods
jb
rol
loope
data16
rcll
mov
add
pop
nop
push
lea
add
movb
xor
push
inc
ja
fwait
data16
stc
jne
sbb
out
xchg
loop
sbb
adc
dec
fucomip
sub
cwtl
notl
add
xchg
lods
inc
jmp
sbb
push
pop
or
jbe
xor
push
add
mov
add
decb
test
cmp
or
mov
push
add
jns
mov
push
iret
mov
repz
add
mov
ljmp
add
add
divb
test
repz
add
sbb
add
dec
add
add
add
lcall
bound
adc
das
cmp
lods
pop
add
iret
sub
out
adc
push
jl
cmp
test
mov
movb
add
cmpsb
mov
icebp
in
int3
xor
clc
push
add
out
mov
add
add
dec
add
cmpsb
pop
add
add
adc
lods
orl
add
add
call
je
bound
pop
mov
lret
mov
add
add
add
add
add
pop
jl
popf
pop
fisttps
add
mov
jae
and
cmpsb
xor
add
add
adc
mov
add
adc
roll
push
mov
xchg
or
add
test
fnstsw
sub
scas
xchg
int3
xchg
fdivrl
test
mov
add
add
mov
arpl
xchg
mov
adc
add
dec
add
add
out
cmp
loop
mov
add
pop
add
jo
lds
mov
mov
add
jl
insl
frstor
outsb
add
add
add
repnz
and
pop
add
in
fwait
cmp
push
aad
sub
jl
add
jns
rolb
mov
fcomps
cmp
rcll
or
add
lea
add
add
dec
add
add
add
in
jp
sti
dec
fldl
add
outsb
add
int
push
jecxz
aam
inc
add
add
bnd
add
repz
mov
orl
test
lods
push
add
sahf
pop
adc
lret
sub
mov
jmp
inc
fdivp
daa
cmpsb
fidivs
xchg
cmp
dec
add
out
mov
cmp
add
dec
add
pop
mov
and
pop
pop
add
xchg
aam
out
ljmp
mov
add
cli
and
sub
fwait
dec
add
cmp
and
dec
add
fisttpll
cmp
enter
add
add
idivb
divl
js
lret
movsb
cmp
mov
and
mov
cmc
lahf
adc
add
mov
mov
mov
das
push
add
in
data16
mov
jp
mov
sub
into
fwait
scas
jno
and
insb
add
cltd
pop
push
add
inc
insb
add
xor
jp
leave
mulb
add
nop
mov
sarb
add
shl
out
mov
xor
out
push
add
insb
add
ljmp
addr16
add
add
sbb
popa
in
outsb
add
sub
add
mov
add
jne
adc
push
add
movsl
jl
pusha
add
popa
movsb
xchg
and
and
add
stos
lret
mov
add
add
lds
add
push
add
aas
dec
add
add
push
add
xchg
cmp
push
add
jl
dec
add
dec
add
ffree
jnp
mov
dec
add
cmp
add
jns
icebp
lock
inc
push
add
xlat
push
jmp
dec
aas
xchg
mov
inc
and
adc
or
mov
xor
xchg
sub
mul
jbe
add
mov
aad
dec
add
xor
ret
jle
sub
push
add
add
inc
add
xor
add
lods
subb
push
add
add
add
mov
in
pop
xchg
jnp
cwtl
jne
add
popl
xchg
rcll
pushf
lret
shl
mov
jno
pop
add
add
je
xchg
dec
data16
inc
ret
mov
daa
enter
and
dec
xchg
fisubrl
mov
add
lods
sbbl
add
or
inc
add
mov
mov
add
pop
add
mov
lahf
testl
add
add
pushf
cltd
adc
out
add
mov
test
mov
add
repnz
xchg
cmp
dec
jo
push
stos
pop
jbe
xchg
testl
pushf
cli
push
add
add
add
add
or
ret
mov
jo
xchg
fdivl
lds
inc
cmp
jmp
and
mull
or
sub
mov
addr16
add
mov
sub
in
xor
fsubl
fucomp
mov
add
jo
push
mov
add
add
sbb
xor
aaa
and
dec
add
subb
pop
add
shlb
add
add
jle
popa
mov
loopne
mov
sub
jmp
fdivl
add
psadbw
add
mov
insb
add
jo
adc
jo
mov
popf
jge
add
cmpb
add
add
sbb
aaa
push
mov
inc
popf
imul
pop
add
add
pop
mov
lock
add
add
add
loop
clc
outsl
in
xor
aas
push
cli
jno
pop
add
add
add
shll
add
orb
iret
fbstp
dec
add
add
or
add
jne
out
add
ret
in
ret
mov
orl
add
int
outsb
add
push
add
neg
imul
xor
cmpsb
cmpsb
fdivs
xchg
int3
ljmp
push
add
dec
add
jge
lcall
add
jae
jo
jbe
sub
into
jns
inc
cmpsl
dec
sub
and
add
add
into
cmp
xor
add
pop
sahf
fidivs
add
xchg
movsl
mov
mov
add
adc
dec
add
add
and
jnp
addr16
pop
add
add
clc
daa
jno
xorl
and
add
add
gs
add
shlb
cli
scas
cmc
and
xchg
mov
imul
pop
add
popa
testl
test
cmc
sahf
or
icebp
aas
repz
test
add
int3
imul
lods
insl
xor
or
inc
add
pop
or
aad
inc
add
push
add
lea
mov
sub
je
inc
jle
movsb
jno
add
rorb
sub
add
xlat
sbb
add
add
scas
adc
mov
add
add
sbb
pop
daa
jl
adc
icebp
mov
add
sub
test
repz
fildl
mov
enter
fcoms
add
in
ret
gs
lahf
push
add
sbb
push
add
frndint
fcomps
jle
loope
cmp
shrb
jo
xchg
add
cmp
or
addr16
adc
mov
cwtl
sub
add
sbb
and
and
xor
cmpb
lret
inc
add
ret
xchg
fstl
add
jmp
mov
jno
add
mov
xchg
into
stos
hlt
hlt
mov
push
add
aam
jecxz
add
cltd
push
add
add
xor
call
lret
cmp
sub
add
ljmp
pop
push
add
aas
flds
fcmove
pop
ret
add
mov
push
stos
adc
call
xchg
add
add
sarb
in
rcrb
add
cwtl
jns
aaa
imul
in
lcall
mov
scas
outsl
sub
sbb
dec
xchg
add
add
xchg
inc
shlb
movsl
mov
sub
je
lods
insb
add
xchg
and
je
mov
add
sbb
or
dec
push
add
ret
add
push
add
push
add
add
in
sti
mov
add
in
jle
lea
add
and
in
cli
adc
outsl
leave
xchg
cld
iret
mov
and
mov
jmp
or
pop
hlt
ljmp
data16
pop
add
pop
dec
data16
cmpsl
cmp
add
jg
jb
adcl
sbb
add
add
psrlw
inc
and
jmp
cwtl
movntq
inc
sbb
mov
push
mov
mov
stos
xchg
jmp
mov
or
bound
and
movsb
int3
gs
add
add
add
xchg
pusha
add
test
test
out
jge
dec
push
add
add
inc
add
aam
inc
add
insb
add
pushf
inc
add
and
adc
aas
sbb
mov
add
fdivrl
pop
add
add
imul
loop
add
add
sbb
popa
sbb
cmc
xchg
bound
jb
add
sub
pushf
add
insl
inc
add
mul
mov
incl
mov
fsts
dec
add
xor
popl
or
and
adc
pop
add
add
add
sti
jb
js
add
add
ja
iret
lret
adc
mov
add
stc
xchg
mov
frstor
and
iret
icebp
ficomps
movsl
cld
push
push
add
repnz
adc
add
xchg
jo
pop
add
testb
pop
add
sub
repnz
gs
add
into
mov
scas
jno
lea
add
arpl
add
shlb
add
mov
bound
adc
dec
add
lods
mov
push
add
xchg
repnz
jb
nop
xor
mov
and
pop
push
add
dec
pop
add
data16
clc
cmc
inc
add
inc
lahf
outsb
add
inc
add
mov
pop
add
add
add
add
add
mov
aam
push
add
imul
adc
jae
les
add
add
ret
add
add
push
add
divb
out
add
pop
add
add
add
add
xor
add
ja
pop
add
iret
pop
add
sbb
xor
add
lahf
cmpsl
xchg
data16
or
mov
inc
add
insl
dec
jae
xor
mov
stc
or
and
int
and
add
fwait
add
out
and
jns
dec
dec
add
mov
mov
mov
sub
mov
add
sbb
lods
mov
pusha
add
add
jbe
mov
jle
lods
mov
mov
sbb
in
loope
ja
xchg
sti
or
add
pop
add
es
xchg
bound
add
jmp
add
xchg
les
add
jbe
pop
add
out
incb
movnti
lea
xchg
mov
add
dec
add
stc
lock
cmc
mov
add
add
pop
in
push
add
stos
shrl
add
ret
inc
add
iret
fistpll
iret
pop
or
orl
pop
add
add
xor
hlt
pop
add
into
movsb
fsubrs
mov
outsl
clc
in
sbb
add
inc
add
adc
mov
sbb
xchg
push
add
add
pop
push
mov
add
add
xchg
jne
in
add
ffree
xchg
mov
adc
add
or
xchg
lock
xchg
sbb
dec
add
cmp
ret
sbb
xchg
and
pop
sub
and
mov
inc
add
or
shl
xor
cli
movsl
add
or
ret
js
fdiv
arpl
xor
rclb
paddd
add
cmp
lds
test
add
mov
add
test
push
lahf
addr16
add
add
sub
sbb
in
dec
add
imul
or
cli
shl
loop
and
add
ljmp
insb
add
mov
mov
cmc
xor
pop
stos
dec
add
sub
add
inc
add
add
fidivs
jl
and
shlb
cmpb
add
mov
ljmp
pop
ret
stc
cld
jge
pop
add
add
add
fstl
fadds
add
push
lcall
add
jo
xor
jp
mov
add
shll
xchg
jne
xchg
stos
xchg
add
rolb
push
add
movsl
divb
scas
or
lock
add
inc
add
lret
aas
inc
add
in
addr16
aad
add
mov
add
sub
mov
add
add
mov
mov
and
cld
dec
pop
dec
add
pop
sahf
dec
add
movsl
add
cld
rclb
add
in
jecxz
add
fcmovnb
mov
add
adc
lock
insl
xor
call
fldenv
movb
add
pop
jecxz
add
sti
popa
lret
sbb
mov
addr16
pop
add
cmp
adc
add
inc
add
std
push
add
xor
dec
add
loop
mov
data16
mov
add
pushf
pop
out
loope
scas
cmp
scas
je
mov
push
add
add
jl
movsl
inc
sbb
mov
sbb
add
cwtl
std
and
push
add
add
add
loope
ja
add
nop
das
aad
pop
or
mov
mov
and
pop
add
ds
movsl
jns
jb
cmp
push
andb
sbb
jl
jg
or
cmp
and
add
add
sbb
add
popf
push
add
cmp
cmp
push
add
jne
add
or
add
das
out
mov
test
cmpb
jne
add
mov
popa
jg
mov
mov
add
pop
add
add
add
out
insb
add
cmp
insb
add
jmp
push
add
and
and
add
pop
add
add
pop
add
fidivl
dec
jno
add
int3
cmpsl
pop
cmpsb
pop
add
jb
lea
negb
les
mov
inc
add
add
add
mov
mov
xchg
and
mov
add
sub
dec
add
mov
dec
add
incb
add
jl
sub
adc
fisubrl
and
imul
jl
sub
outsb
add
fists
dec
add
add
aas
dec
fldl
or
stos
push
add
leave
clc
scas
mov
pop
xchg
movsl
push
repnz
push
add
cmc
pop
add
arpl
add
fdiv
loopne
es
nop
je
mov
shr
lret
inc
add
add
sbb
add
gs
xor
out
add
add
lret
mov
gs
add
add
out
add
xor
inc
add
add
int
add
pop
push
or
jne
imul
add
cmp
jno
sti
pop
or
mov
sub
daa
and
repz
adc
add
dec
mov
adc
and
mov
xor
mov
cld
popa
jbe
pop
and
int3
sbb
outsl
push
add
adc
pop
jecxz
xchg
inc
pop
xor
add
or
sbb
dec
add
pop
add
xchg
xchg
lcall
in
add
xchg
xchg
scas
jmp
add
mov
repz
add
add
and
jecxz
in
lock
or
and
or
scas
loopne
rorl
pop
add
add
mov
jno
scas
add
add
iret
sti
fwait
mov
imul
int
add
add
sub
dec
add
push
add
inc
push
add
hlt
movsb
inc
in
fmull
arpl
add
movsb
mov
add
add
aam
inc
add
mov
sbb
in
push
add
test
add
add
add
xor
ret
mov
sbb
lret
pop
adc
xchg
push
add
or
cmpsb
iret
jne
add
ljmp
fisttpl
add
cmc
jg
adc
jle
jmp
int
cli
pop
add
dec
add
pushf
sbbl
dec
icebp
jp
and
das
xlat
add
jns
jbe
jl
faddl
ds
or
pop
push
add
add
ss
adc
icebp
inc
scas
cli
and
mov
out
add
ret
rolb
mov
or
int
adc
mov
add
push
add
mov
pop
out
ret
jns
add
call
add
xor
sbb
aaa
add
dec
add
xchg
pop
add
mov
jbe
mov
inc
lods
fldz
fisubrs
add
nop
pop
rclb
and
push
add
add
int
add
add
fwait
push
add
add
xchg
out
cmp
movsl
outsb
add
test
cwtl
ret
fwait
inc
add
pop
aam
gs
push
add
add
add
jne
mov
add
pop
add
mov
add
sub
movsb
ja
mov
jg
sub
cltd
sti
std
ja
out
clc
pop
add
sti
icebp
into
pop
add
jl
pop
add
jae
lea
push
ds
inc
add
inc
or
xor
setnp
lret
lock
pop
mov
add
sub
pop
add
xchg
mov
or
cwtl
lcall
scas
fcom
push
add
testl
xchg
and
jg
popa
lret
mov
sti
cmp
popf
cmp
adc
nopl
add
jecxz
adc
pop
mov
xchg
mov
or
dec
add
leave
dec
add
fsubl
jecxz
add
push
add
sub
add
inc
jnp
fistpl
sbb
push
jnp
add
add
in
pusha
add
pop
add
jb
dec
ss
mov
mov
sbb
cmp
pusha
add
pop
add
ljmp
jl
jnp
jecxz
cli
add
add
push
mov
add
cmc
push
add
add
jecxz
or
add
add
add
rcrb
add
jecxz
mov
add
mov
mov
add
aam
dec
test
mov
jbe
mov
dec
add
icebp
outsb
add
add
add
mov
iret
test
and
mov
cmpsb
rorl
xchg
adc
xchg
int
mov
add
add
add
xor
out
push
imul
pop
add
adc
jnp
add
add
or
push
test
add
add
loopne
movsb
pushf
imul
mov
xchg
movsl
hlt
ret
adc
jmp
cwtl
xor
add
add
mov
aas
les
stc
in
mov
test
lods
push
add
add
clc
sbb
xchg
adc
mov
dec
add
nop
shl
add
call
mov
out
or
mov
add
pop
in
pop
add
mov
mov
add
lret
add
mov
add
add
or
scas
add
adc
add
add
and
scas
das
push
add
xor
idiv
fldenv
cmp
and
out
mov
xchg
xchg
arpl
repz
add
das
inc
loope
dec
add
add
int3
mov
jecxz
mov
out
lods
repz
mov
movb
or
insl
cmpsl
pop
add
add
adc
cmc
out
flds
xor
add
stos
or
out
rorl
jns
inc
sbb
leave
shl
mov
std
cmp
add
aaa
iret
and
xchg
data16
add
lahf
out
pushf
mov
add
add
dec
add
in
cmp
adc
in
add
out
mov
push
add
mov
cmpb
add
add
xor
loopne
add
or
pop
add
mov
add
push
mov
cli
mov
add
add
loop
cmpsb
fistps
add
out
ret
jo
add
mov
adc
out
add
dec
add
xor
add
mov
jle
inc
add
xchg
add
add
push
sbb
pop
aaa
pushf
pop
add
add
add
add
les
sbb
out
cwtl
dec
outsb
add
add
xchg
xor
negl
pusha
add
sahf
and
add
mov
dec
mov
pop
add
add
je
sub
add
fadd
mov
inc
or
add
call
std
jle
insb
add
mov
sarl
sbb
pop
lods
int
pop
add
push
add
cld
rclb
loopne
cmp
add
incl
mov
mov
add
aaa
pop
add
xor
popf
cmp
xor
add
sbb
add
add
lea
add
add
shl
push
add
cld
loop
push
shrb
add
pop
jmp
loop
dec
adc
jmp
add
add
je
mov
push
add
daa
out
jnp
push
add
aad
sub
repnz
in
ljmp
sbb
add
adc
add
mov
add
cmp
or
divl
add
test
xor
fwait
cmp
xor
xchg
add
add
fildl
enter
outsl
cmp
ret
or
shll
inc
imul
andb
sahf
inc
jge
jmp
dec
add
add
add
mov
or
repnz
sub
add
and
cmp
add
mov
nop
push
add
fdivrs
shlb
add
and
insb
add
add
mov
dec
sbb
add
fwait
shrb
into
int
add
push
sarl
add
mov
inc
add
jp
fnstcw
das
xor
mov
jno
add
add
push
add
add
xchg
cmp
shrb
add
imul
imul
cmp
and
pusha
add
push
sti
inc
xchg
pop
lret
call
add
jle
mov
negb
mov
inc
add
out
add
add
mov
add
jmp
mov
ret
add
clc
test
add
add
aam
push
sbb
mov
pusha
add
sbb
inc
stos
mov
std
inc
add
int
add
add
add
lret
repz
dec
add
push
add
int3
aam
sbb
loop
sbb
mov
add
mov
pusha
add
mov
mov
mov
add
cmpsl
sahf
mov
add
dec
add
test
sub
xchg
adc
cld
test
movsl
push
sbb
jno
inc
inc
add
and
out
imul
xor
push
lds
scas
push
xchg
add
mov
mov
add
add
push
add
fistpll
mov
add
mov
xchg
and
or
dec
add
mov
jmp
add
mov
push
add
fisttpll
add
add
clc
adc
aam
jg
and
add
mov
adc
sbbb
sti
sbb
popf
mov
add
lret
rcrl
lock
add
scas
shrl
add
cmpeqps
outsl
inc
add
push
add
add
mov
jecxz
jne
jne
add
jb
pusha
add
add
repz
daa
inc
add
negb
mov
inc
ja
scas
stos
addr16
scas
mov
aas
enter
add
out
lods
mov
jmp
jp
xor
ljmp
add
cmc
je
sub
sub
xchg
mov
imul
add
jns
add
add
jb
add
add
pop
add
add
jmp
add
add
mov
add
icebp
jmp
cmp
fimuls
ret
add
pop
jbe
mov
add
add
xor
cmp
jnp
adc
add
pop
aam
add
clc
repz
jbe
jns
pop
inc
mov
add
popf
add
push
add
add
in
add
dec
xlat
cmpsl
in
push
add
scas
add
pushf
imul
add
push
add
int
inc
push
add
push
add
sahf
fildll
adc
jp
ret
add
add
cli
in
add
rcll
add
cmpsl
imul
mov
cmpsl
xor
or
dec
in
add
insb
add
dec
add
cmp
stc
xchg
int3
into
and
lcall
add
mov
cmc
roll
shll
mov
pop
jmp
add
testl
out
add
jl
pop
xchg
je
jbe
push
icebp
cld
adc
pop
mov
lret
add
cwtl
insl
fisubs
ret
stos
cltd
and
xchg
sub
iret
cmc
pusha
add
push
lods
add
add
popf
push
add
xchg
clc
daa
mov
ret
stc
or
sbb
into
rol
loope
repz
sub
setb
add
stos
mov
and
and
ds
mov
mov
mov
push
add
out
lods
dec
xchg
xchg
jecxz
jbe
cmp
or
mov
outsl
pop
mov
mov
adc
call
jo
mov
xchg
push
add
dec
add
loop
std
icebp
ljmp
bound
leave
cmp
sbb
repz
add
jae
and
aaa
mov
or
sbb
dec
add
lret
or
subl
add
cmp
in
test
cmp
push
add
add
cltd
xor
ret
or
add
outsl
popf
or
inc
add
mov
aaa
ret
aas
sub
dec
in
add
insl
shl
aaa
and
add
decb
mov
fcompl
mov
fidivrl
add
cld
mov
adc
add
push
add
add
mov
insl
jno
movsl
sub
bound
add
push
add
hlt
sub
mov
jne
add
out
xor
add
adc
mov
std
mov
pusha
add
das
add
add
jne
xor
cli
push
add
lods
jne
mov
add
inc
add
fsubl
cmc
fimuls
mov
daa
jb
dec
add
push
add
data16
add
xchg
mov
leave
lock
add
add
mov
add
cmpsl
jo
jge
xbegin
test
jmp
jg
dec
add
xor
xchg
mov
add
add
and
inc
dec
add
filds
add
pop
add
repz
bound
xchg
sbb
adc
in
adc
cmp
xchg
push
out
imul
out
lcall
lods
in
aas
aaa
mov
nop
rcll
or
jno
mov
push
add
sub
aad
out
add
out
jne
jle
sbb
out
mov
loope
mov
jmp
and
cmpsb
mov
inc
jae
add
dec
rol
sti
pop
adc
add
imul
adc
outsl
lahf
adc
cmp
lock
adc
push
adc
int3
fdiv
arpl
or
test
sbb
lahf
jns
mov
sub
and
ds
clc
cli
jp
repnz
lods
sbbl
add
mov
push
add
outsb
add
inc
add
sub
fdivl
add
daa
jmp
cld
jl
testl
test
mov
push
add
fidivrl
jnp
outsb
add
lret
jl
lds
and
xchg
pop
add
dec
scas
and
in
jp
hlt
enter
add
xchg
pop
rolb
add
scas
int3
mov
stc
in
push
add
rorl
ret
fcompl
add
orb
add
cmp
and
daa
inc
fstl
xchg
stc
fcoml
add
rcr
pop
sub
xchg
popf
dec
sub
lea
imul
nop
mov
sar
and
inc
out
add
push
inc
pop
add
jle
std
add
add
add
push
add
fcmovu
mov
arpl
add
sbb
loope
push
jmp
dec
add
mov
dec
and
cmp
out
mov
add
scas
out
dec
add
loopne
add
arpl
adc
out
lahf
push
add
call
add
mov
div
cmp
in
or
icebp
outsl
popa
rolb
add
adc
movsl
mov
imul
add
add
add
add
add
cmc
adc
scas
or
cmp
adc
add
imul
add
loop
add
cmp
movsb
mov
adc
cltd
loope
rorl
fcomip
mov
into
adc
imul
push
add
add
mov
add
pop
or
les
inc
idiv
mov
pop
add
xor
or
and
or
test
mov
push
add
mov
add
jp
xchg
mov
add
jae
xlat
dec
add
imul
fsub
shl
mov
add
add
test
negl
aad
stc
add
subb
sub
sub
inc
add
adc
add
lcall
add
out
test
inc
and
add
or
inc
add
add
ljmp
add
mov
pusha
add
inc
add
sbb
cwtl
add
mov
in
add
repnz
shrb
test
push
test
pop
ret
jbe
daa
ret
outsl
jmp
add
notb
stos
xorb
add
mov
nop
divb
push
popa
add
add
popf
repnz
fidivrl
fsubs
add
dec
add
mov
dec
in
push
add
inc
add
ret
hlt
cli
push
add
add
test
add
add
lahf
mov
add
addr16
mov
add
push
add
andl
icebp
or
enter
dec
add
cmp
add
movsb
std
dec
lods
and
add
mov
add
cmp
mov
mov
lret
sub
mov
dec
add
sbb
out
cmp
add
add
call
call
cs
rdmsr
add
insl
sbb
add
popl
add
push
mov
add
stos
shr
jo
fcompl
sbb
mov
fcomp
sahf
pop
push
add
add
adcl
iret
mov
add
ret
rorl
dec
ljmp
lock
push
add
stc
pop
pop
mov
sub
add
stos
add
add
xchg
dec
or
add
in
dec
add
xor
pop
jo
stos
imul
jl
movsl
ljmp
lret
xor
pop
std
sbb
mov
sti
xorb
add
pushf
push
add
mov
add
outsb
add
add
mov
xchg
movsl
sub
add
fstpl
add
sbb
jb
insb
add
pop
das
push
add
mov
add
jge
add
xchg
xor
dec
pop
and
xor
into
int
mov
adc
cmp
sbb
sub
cltd
rolb
add
add
jl
rep
xor
call
popa
or
jae
movsl
dec
add
pop
mov
add
and
hlt
rolb
push
push
mov
dec
add
push
add
lahf
aad
inc
add
mov
add
add
pop
add
jecxz
add
je
sbb
shll
stc
add
imul
add
test
ja
mov
outsl
cmp
inc
add
in
sbb
sarb
sbb
enter
add
repnz
xchg
or
subl
out
ret
push
dec
xchg
negl
add
mov
mov
pop
add
add
jmp
cmpsb
data16
xchg
bound
fidivrs
sbb
pop
add
outsl
cmp
push
mov
and
jb
adc
add
add
dec
add
mov
add
insl
push
add
add
sub
pop
add
add
pop
add
add
sahf
jmp
add
cmp
in
sub
bound
mov
mov
jo
cmpsl
out
sub
or
add
add
push
add
mov
sbb
mov
cmp
cmpsl
jb
enter
call
jl
sbb
adc
cli
lahf
mov
lea
cmp
imul
insl
pop
sbbl
add
add
ljmp
add
movsl
sub
add
add
or
jnp
lock
jbe
insb
add
add
and
nop
pop
add
scas
in
mov
lock
add
xlat
xor
add
add
mov
rclb
add
xchg
inc
add
push
pop
add
add
add
loop
std
addr16
nop
shl
pop
test
outsb
add
adc
add
add
pop
clc
ficomps
cwtl
cmpsb
adc
addb
dec
pop
add
lock
mov
push
lcall
add
inc
and
cld
pop
add
or
mov
xor
cltd
imul
jmp
or
lds
add
jle
int
add
mov
add
adc
xor
aad
xchg
lahf
mov
cmp
add
add
mov
add
xlat
fdivs
add
data16
cmp
std
jno
add
scas
pop
outsl
in
add
sbb
mov
divb
add
add
add
add
movb
pop
test
les
sbb
add
dec
add
jp
outsb
add
inc
add
ja
movsb
pop
mov
ficoml
inc
aaa
aaa
mov
pop
add
insb
add
push
add
add
mov
add
jle
outsl
add
and
lock
and
lret
push
add
clc
fisttpl
add
push
fnstcw
pop
mov
mov
das
out
xor
mov
dec
add
push
shl
xchg
and
add
inc
add
sub
imul
or
add
stos
insb
add
mov
push
add
pop
mov
aaa
cmpsl
out
cmp
lret
add
outsb
add
loop
jl
push
add
add
mov
dec
add
lret
icebp
sub
cs
sarl
out
push
add
add
jle
cli
push
add
outsb
add
loop
into
add
shl
ret
mov
cmp
add
push
loope
out
inc
scas
push
add
mov
add
xor
mov
mov
add
add
add
add
popa
nop
xchg
xchg
movsl
and
pop
jae
mov
movq
outsb
add
jnp
imul
add
lods
sub
add
jbe
jno
das
add
mov
add
hlt
mov
add
sti
jge
add
ljmp
imul
add
mov
insb
add
cmp
adc
mov
aad
je
mov
fisubl
mov
dec
add
clc
int3
push
add
pop
add
fbstp
cld
push
add
je
pushf
aad
test
add
add
inc
sahf
pop
add
cmpsl
xchg
loopne
adc
inc
add
push
jp
cld
outsl
lods
jmp
bound
lods
or
imulb
roll
lds
jne
add
adc
ja
add
or
movsb
fnstsw
sbb
xor
fbstp
xor
inc
add
imul
leave
mov
add
dec
sbb
enter
lods
nop
add
aas
push
popf
sbb
mov
mov
mov
sti
aas
mov
ret
push
and
cwtl
fnstenv
mov
fidivl
add
in
add
fldt
jmp
les
std
addb
add
push
add
add
xor
pop
add
add
adc
xchg
dec
add
xor
jge
add
add
inc
add
or
xchg
lcall
jbe
add
inc
int3
lods
aam
pop
ljmp
push
add
mov
add
dec
add
sarl
push
add
sbb
add
in
add
cli
sub
pop
inc
add
cmovns
sbb
fistpll
add
bound
icebp
and
mov
out
scas
mov
add
add
add
mov
add
mov
add
insl
and
mov
popf
cmpb
or
add
xor
movsb
xchg
out
pusha
add
pop
add
std
jno
mov
push
add
out
es
adcl
je
push
add
rcl
add
int3
cmp
xchg
jno
cli
adc
mov
mov
add
xor
inc
sub
xchg
js
cmp
fildl
test
xchg
lods
mov
add
inc
movsl
clc
or
int3
cmc
shld
add
add
in
sub
cmpsl
fucomi
jle
and
mov
add
aaa
fdivs
xchg
popa
mov
add
add
push
add
mov
popf
add
sbb
xchg
xor
data16
ljmp
pop
add
and
xchg
push
insl
arpl
inc
and
inc
pop
add
nop
das
xor
std
jno
mov
into
mov
mov
or
lds
add
add
add
mov
imul
pop
add
add
pop
lock
sbb
pop
add
in
aam
enter
int3
cmp
lods
loopne
add
add
insb
add
dec
insl
cmpb
xor
jle
ljmp
shl
aaa
aam
mov
pop
idivl
hlt
outsl
inc
outsb
add
add
push
add
sbb
mov
adc
lret
fstpt
in
dec
push
add
data16
mov
mov
in
add
mov
add
popf
ljmp
inc
add
dec
add
lods
ja
and
jle
dec
add
jmp
xor
cld
mov
add
inc
add
adc
add
js
sbb
add
cld
inc
add
imul
xchg
cmpsl
lods
add
iret
sti
out
add
inc
add
into
sbb
jg
mov
int3
lcall
loopne
cmp
adc
mov
or
add
push
add
insb
add
add
pop
or
stos
inc
add
test
sub
add
add
shll
sub
addr16
xchg
je
cmp
jg
jb
jge
mov
cwtl
cwtl
and
repz
sub
leave
pop
andb
add
xor
jg
add
fsubrs
add
sub
xor
jnp
out
dec
add
xor
cltd
mov
rorl
stos
andl
xor
ljmp
ror
and
decb
add
dec
mov
and
fwait
xchg
stc
ds
aas
pusha
add
add
add
mov
in
add
or
cmp
lret
dec
data16
push
mov
add
jno
mov
xor
dec
add
adc
test
add
inc
mov
sub
ret
pop
fcmovnu
out
shll
push
imul
jl
or
arpl
scas
pop
add
loopne
add
in
inc
add
push
and
fcmovbe
mov
add
popa
cmp
mov
fcoml
shlb
cld
jmp
add
stos
testb
sub
sbb
add
lds
jae
and
dec
ror
cmp
sub
push
test
data16
int
add
add
cmp
addr16
adc
jnp
dec
add
jno
pop
add
add
pop
shrb
mov
pop
add
pop
jb
sbb
cs
cmc
hlt
push
push
xchg
dec
out
pop
push
inc
add
xchg
xor
pop
add
add
outsl
cmp
inc
iret
add
push
add
pusha
add
js
and
pop
in
mov
out
adc
sarb
push
mov
mov
inc
add
ljmp
xchg
out
cmp
rol
push
mov
push
add
add
add
ds
push
add
sub
adc
adc
mov
mov
addr16
mov
or
add
or
mov
jae
cwtl
jge
test
fidivrl
fwait
mov
pusha
add
cmc
int3
pushl
xor
xchg
and
ret
xor
add
adc
mov
add
or
adc
sub
inc
add
cmp
push
mov
add
mov
orb
jns
xor
adc
xor
xor
mov
add
add
dec
add
out
add
fistpl
push
xchg
add
add
sahf
mov
add
inc
add
jecxz
sub
mov
add
shrb
cmp
in
mov
adc
movl
inc
add
sbb
add
add
sub
mov
in
push
add
add
jns
add
add
mov
adcb
sbb
mov
sub
test
add
stos
out
and
sbb
push
add
add
mov
jns
add
add
lcall
mov
add
adc
jbe
js
pusha
add
iret
jno
add
xchg
mov
mov
pop
cmp
cmp
inc
add
addl
in
add
inc
js
je
sti
inc
add
add
iret
lret
pop
ja
mov
add
jmp
loop
mov
mov
ja
sahf
inc
or
lea
je
and
and
int
sbb
stos
test
jnp
cli
std
inc
add
ljmp
add
mov
add
add
jns
pop
add
add
add
add
add
sub
add
ja
add
add
mov
inc
add
jp
inc
clc
rclb
outsb
add
sbb
push
add
add
in
lods
xchg
aaa
pop
mov
sbb
js
mov
and
sbb
test
cli
sbb
lahf
in
cmp
sbb
push
cmpsl
or
push
add
lock
add
ret
or
add
sub
mov
pop
add
mov
or
adc
cmp
add
sbb
ja
add
in
sbb
enter
scas
push
out
xor
fbld
add
movsb
mov
add
add
push
sub
add
sub
fldcw
xchg
imul
or
mov
xchg
mov
in
or
add
sbb
insl
dec
add
add
push
add
mov
fldt
jnp
imul
cmpsb
pop
mov
add
iret
popl
sub
dec
sub
and
pop
orl
es
dec
lds
pop
call
add
sarl
shrb
ret
adc
aaa
testl
inc
or
popf
or
and
loope
movb
xchg
jmp
leave
das
pop
add
loop
xchg
cmpb
add
push
inc
out
and
jno
lods
mov
cltd
movsl
dec
add
add
push
add
and
and
cmp
xchg
sub
in
loop
int
add
add
add
stos
stc
xchg
aad
add
rcrl
mov
xchg
inc
add
loopne
stos
and
push
add
movsl
imul
push
add
add
add
test
or
scas
loopne
adcb
into
xchg
stos
testb
push
add
sbb
xor
in
jne
add
inc
sub
jo
aad
data16
sbb
les
xchg
mov
add
mov
scas
test
sub
in
aam
add
gs
xlat
lods
cs
jge
rorb
add
test
xchg
iret
cmpl
add
scas
popa
mov
hlt
stos
or
inc
add
ret
lods
cmp
jle
popf
jge
add
pop
add
ljmp
add
add
pop
add
jge
jle
in
enter
add
dec
add
test
add
int
add
shl
mov
push
add
add
and
sti
movsl
sbb
sub
add
shrl
out
mov
imul
das
lds
incl
lock
lcall
xor
jle
and
push
add
sbb
in
cmpsb
pusha
add
or
add
mov
add
aad
pop
mov
mov
inc
add
loop
arpl
popf
fwait
inc
add
in
sub
icebp
adc
addb
add
inc
inc
add
push
add
stos
rolb
xchg
fistps
add
add
xchg
pop
add
orl
add
and
sub
scas
xorl
and
mov
add
scas
jae
leave
mov
in
es
mov
xchg
sahf
mov
mov
xorb
add
outsl
and
add
jp
xlat
outsb
add
or
cmp
std
lods
and
cmpsb
and
arpl
jg
sar
stc
pop
scas
js
cld
adc
movsl
popa
cli
or
lahf
pop
aad
add
or
add
and
add
loopne
insl
int3
push
push
mov
xchg
adcl
fisttps
inc
add
pop
shrb
out
mov
cltd
out
orb
add
add
insl
add
add
add
addl
push
add
jno
xor
inc
fistpll
add
ja
inc
popf
or
inc
add
data16
adc
push
add
add
rol
insb
add
push
test
sub
inc
sahf
dec
test
loop
xor
add
shll
ret
stos
test
mov
add
aas
lea
mov
add
bound
addr16
je
cli
das
mov
je
test
xchg
std
sbb
ret
incl
fsubp
pop
add
dec
cmp
aam
aaa
dec
add
add
push
int
xchg
mov
xor
ljmp
cmpb
xor
mov
add
push
add
fwait
lahf
mov
add
ret
lods
mov
add
mov
in
hlt
pop
inc
add
in
test
inc
pop
push
add
mov
add
mov
cwtl
add
mov
test
sbb
test
add
push
ljmp
mov
decl
add
mov
jl
jp
loope
andps
mov
scas
jbe
out
test
lcall
mov
add
cmpsb
gs
add
jg
fldl
loop
out
outsl
sbb
shlb
push
lahf
test
add
int
add
pop
add
jo
loop
add
stos
or
arpl
or
xor
insb
add
arpl
push
int3
jecxz
add
fdivrl
cmp
insl
dec
cli
fistps
test
andl
lcall
mov
add
lock
cs
fsub
out
mov
rol
pop
lahf
les
cmpsl
outsl
mov
add
out
faddl
loop
sbb
mov
add
pop
add
fimuls
mov
scas
test
mov
imul
test
add
mov
mov
add
jmp
mov
push
insl
outsl
add
push
add
clc
stos
cmpsb
sub
add
rcll
cmp
in
cmp
add
add
fcomps
into
push
add
shlb
add
subl
add
int
mov
add
aas
adc
jl
dec
add
pop
add
xchg
ja
add
nopl
and
dec
add
pop
add
in
push
xchg
sbb
sub
mov
dec
add
xchg
dec
dec
add
inc
add
add
add
and
add
iret
daa
cld
xor
sbb
add
mov
add
test
add
sbb
je
lcall
test
iret
jno
sub
out
inc
add
fildl
xlat
jnp
add
jge
add
mov
roll
in
ret
xchg
and
add
out
sbb
sbb
xchg
push
outsb
add
add
hlt
xor
mov
pop
add
mov
add
add
adc
rorl
push
add
int
add
loope
loopne
xor
add
mov
inc
mov
ror
add
add
test
pusha
add
adc
int
or
mov
fsubrs
loope
dec
add
add
jbe
mov
test
loop
out
add
shlb
cmp
pop
add
repnz
xchg
inc
cmp
mov
or
and
ret
xchg
lock
push
pop
insb
add
add
add
jg
fcoml
add
add
rclb
add
add
out
cs
in
inc
add
out
add
nop
lods
and
add
pop
add
mov
sub
add
adc
adc
pop
cmp
in
add
jae
in
sbb
add
sub
xor
imul
pop
add
xor
gs
lods
jne
add
jo
adc
add
jg
add
add
add
add
clc
enter
sbb
lret
mov
add
xchg
decb
cmp
add
xchg
add
aaa
lea
add
loope
mov
lea
mulb
add
cld
cmpsl
pushf
adc
shlb
ret
imul
in
and
add
inc
add
inc
add
lret
sbb
test
mov
test
jno
add
mov
cmc
adc
add
test
stos
xchg
cld
mulb
xchg
mov
pop
aas
movsl
cli
add
add
add
loope
outsl
call
add
cld
mov
or
sahf
or
mov
jle
or
adc
jle
imulb
mov
hlt
mov
add
jnp
ljmp
aad
bt
add
out
repz
stos
jle
popa
aaa
repnz
imul
push
add
and
insb
add
pop
or
adc
mov
out
fbld
add
sub
mov
nop
sub
out
lods
icebp
mov
ffreep
adc
mov
add
or
add
ja
xchg
shlb
add
pop
add
add
fidivrs
add
mov
dec
add
fnsave
add
push
add
add
inc
mov
and
dec
scas
fsubl
mov
pop
add
add
add
push
add
inc
add
mov
add
xchg
add
and
push
mov
loopne
pop
push
xchg
inc
add
push
or
mov
ret
fcoms
add
movl
cmpsl
stos
and
shl
cmp
or
lea
or
and
add
sbb
dec
ret
adc
addl
inc
add
dec
add
mov
idiv
repz
aad
jle
ficompl
cmpsl
lock
add
cltd
sti
mov
push
mov
jmp
test
mov
notl
out
add
add
aam
in
add
iret
nop
sbbb
jmp
cwtl
cmp
fldl
add
add
xchg
mov
add
iret
in
cmpb
add
in
nop
cmp
in
and
add
dec
add
or
ret
dec
add
pop
clc
push
add
mov
stos
pop
sbb
scas
push
add
mov
mov
inc
add
popa
mov
add
inc
add
xchg
es
add
out
pusha
add
div
repnz
and
add
test
cmc
pop
push
shlb
xchg
dec
fsubrl
add
xchg
and
shll
add
pop
cwtl
test
jmp
loope
repnz
adc
cmpsb
pop
add
jmp
add
arpl
popa
out
mov
dec
add
jmp
pop
or
aas
pop
or
fs
insb
add
add
popa
fdivr
nop
enter
push
add
or
das
shlb
gs
cld
daa
and
loope
data16
cld
xor
or
xor
cwtl
out
fistl
inc
pop
mov
loop
sub
xchg
add
add
inc
in
pop
movsb
repz
add
adc
leave
mov
add
and
pop
pop
add
js
sub
repnz
hlt
insb
add
insb
add
cmp
repnz
mov
xchg
shll
add
call
mov
je
or
ds
jl
xchg
shrl
je
test
aas
arpl
xchg
insl
jmp
sbb
data16
cli
aas
mov
add
nop
ret
icebp
aaa
adc
add
scas
pop
test
stos
icebp
call
or
dec
add
cmpsb
push
sbb
out
cmp
fbld
add
xchg
aaa
add
hlt
subb
add
mov
ljmp
jge
nop
cmpb
iret
out
popf
sbb
mov
repz
xchg
inc
add
fdivr
jg
push
add
sub
pop
add
jno
add
mov
jno
push
add
jns
repnz
adc
push
add
add
les
das
add
ficompl
xor
scas
or
mov
js
js
mov
rorl
filds
sti
adc
dec
arpl
mul
call
mov
add
add
repz
add
dec
xchg
ljmp
add
stos
cmp
jb
lock
add
adc
adc
adc
enter
cmp
and
inc
les
add
mov
add
jecxz
hlt
add
out
addr16
mov
fnsave
decl
int
in
ja
and
cmp
sub
or
mov
push
push
add
lock
cmp
call
imul
xor
ljmp
add
inc
jle
mov
outsl
dec
add
lock
mov
mov
les
adcl
addr16
insl
mov
and
pop
add
add
push
add
rcrl
xlat
cmp
mov
inc
xchg
sbb
and
add
into
cltd
fisubl
pop
cmp
lea
sub
jne
xchg
aad
push
add
push
add
adc
cmc
push
mov
dec
add
add
add
addb
aad
add
in
scas
test
adc
aam
jnp
mov
cwtl
jecxz
add
into
jns
shlb
sbb
jecxz
inc
add
dec
add
mov
or
fldenv
js
stos
add
sbbb
jg
mov
fdivrs
or
cmp
sbb
add
shlb
add
loop
cmp
xor
iret
sbb
adc
mov
sbb
push
add
add
or
adc
mov
cmpsl
add
pushf
imul
vmread
dec
xchg
xlat
pop
add
add
insl
sahf
mov
add
push
add
add
imull
outsb
add
add
sub
adc
adc
mov
testl
imul
test
adc
insl
inc
add
ljmp
roll
shrl
add
fs
mov
add
lock
insl
inc
add
pop
add
add
add
sar
aas
push
push
cmc
dec
repnz
sahf
filds
test
add
add
push
jne
push
add
sub
or
int
cli
add
xchg
cmc
jp
jge
add
add
loope
mov
imul
push
repnz
add
add
sub
mov
lds
mov
cltd
add
add
add
add
out
enter
inc
add
push
add
insb
add
jb
add
push
add
xlat
inc
add
pop
jbe
fcom
mov
sub
loop
add
sub
jns
mov
inc
add
out
pusha
add
stc
add
mov
loopne
cmp
xor
add
cli
push
leave
mov
lret
shlb
add
mov
lds
push
add
filds
add
in
outsb
add
push
add
lea
pop
add
lds
add
test
push
aam
fld
aam
add
add
inc
add
or
lods
dec
add
stc
outsl
adc
dec
add
sbb
or
and
xor
add
lret
push
add
add
add
push
xlat
xadd
xor
mov
push
cmpsl
sti
das
aam
loope
stc
aam
mov
mov
push
add
cltd
or
add
xchg
xchg
xchg
dec
add
fcoml
repz
loopne
add
push
add
fwait
lret
scas
fists
xchg
jmp
add
push
add
dec
add
push
add
nop
push
add
lods
dec
dec
movsb
test
in
aaa
orl
fcomp
xor
adc
add
hlt
js
push
dec
add
push
sti
inc
push
bound
loopne
mov
xlat
add
pop
mov
push
add
in
add
fisubrs
push
add
or
js
aaa
lock
mov
add
fisttpl
mov
add
in
inc
xlat
jae
lds
mov
mov
add
add
add
mov
add
aad
add
jae
add
mov
xlat
sbb
add
mov
add
rcll
add
adc
cmp
add
add
add
push
and
aad
mov
add
sub
in
fidivs
xchg
dec
add
pop
add
xchg
js
mov
add
aas
cltd
out
mov
mov
outsb
add
add
mov
pop
add
push
out
push
add
xchg
fcompl
dec
add
add
add
jmp
pop
jp
mov
add
add
and
jb
adc
outsl
fwait
add
rcll
add
std
add
add
pop
add
mov
add
mov
add
in
shll
xor
in
int3
add
outsl
repnz
testl
add
add
int
scas
jo
sub
nopl
ret
xchg
sbb
adc
cmp
add
fsubs
popa
inc
mov
sahf
imul
rcr
and
pop
mov
dec
jns
outsb
add
add
hlt
add
hlt
or
sub
cmp
ds
jmp
mov
sbb
mov
lock
xlat
js
xchg
inc
add
sub
add
add
pop
fwait
mov
jb
dec
add
add
stc
lods
fsubrl
sti
out
xor
adc
sti
push
add
call
add
push
add
daa
iret
cltd
push
pop
sub
add
lahf
cmp
xor
jge
add
imul
push
add
add
adc
pop
add
add
lods
push
add
std
ficompl
add
xlat
cmp
xchg
mov
add
mov
cmp
mov
inc
add
andl
push
jg
and
or
adc
jne
dec
mov
jae
add
add
popa
in
sbb
inc
add
push
popa
pop
add
add
pop
nop
mov
iret
push
add
sbb
in
imul
inc
outsl
or
inc
add
pushl
hlt
fiaddl
add
lds
push
push
add
add
jg
sub
out
pop
adc
int
xchg
mov
jg
add
xchg
xchg
xchg
das
repz
outsb
add
push
lahf
imul
add
movsb
jae
ljmp
mov
repz
cmpsb
push
add
in
and
movsb
dec
add
xchg
pop
add
add
jg
or
jl
add
cmp
and
adc
sub
repnz
aam
aad
add
mov
dec
pusha
add
repz
into
scas
push
je
ret
mulb
loop
add
jge
rclb
push
pop
mov
fmuls
add
pop
add
dec
add
jae
push
add
nop
rclb
add
mov
fbstp
call
es
push
add
add
dec
jle
adc
pop
add
add
add
mov
lret
push
add
cmp
add
enter
lret
add
and
add
xchg
mov
in
test
andb
sahf
sbb
dec
add
inc
adc
sub
cltd
xor
sbb
inc
jp
mov
shll
add
cli
push
add
add
pop
loop
add
ljmp
lret
add
in
test
movsl
and
cmp
out
pop
sub
mov
cmp
inc
add
inc
add
call
daa
je
lods
sbb
xchg
adc
cmp
lods
sahf
ret
add
inc
sub
mov
and
mov
icebp
add
inc
add
add
add
adc
gs
outsl
inc
mov
xchg
cmpb
pushf
inc
rcll
add
fwait
pop
add
outsl
add
std
loope
add
addb
fwait
push
les
sub
fcomp
add
xor
mov
pop
scas
bound
dec
add
or
mov
cmp
mov
pusha
add
fmuls
sar
add
push
rcll
inc
mov
add
leave
movsl
lret
subl
dec
in
and
rcl
cmpsb
fwait
into
dec
add
mov
sti
inc
lret
xor
pop
xchg
js
fld
aas
jmp
dec
fnstsw
jb
adc
pop
fcompl
fiaddl
in
sub
cwtl
or
lods
and
or
cltd
push
add
cmpsl
lcall
addr16
xadd
add
js
shrb
or
add
add
add
mov
add
add
mov
push
mov
test
and
jp
inc
aad
xchg
pop
add
xlat
push
add
dec
icebp
add
sub
sbb
sbbl
add
jg
call
mov
pop
sbb
add
add
push
add
out
push
xchg
adc
scas
adc
in
add
add
mov
iret
xchg
add
add
sub
cmpsb
out
call
jae
add
icebp
xor
addl
add
xchg
push
add
ja
mov
add
add
ja
cmc
ljmp
les
mov
add
add
push
sub
movsl
or
insl
mov
cmp
xchg
insb
add
es
xchg
das
pop
add
add
sti
cli
push
add
add
xor
cmpsl
cmp
add
sbb
addb
xrelease
and
daa
pop
jns
stos
push
add
add
pop
add
sub
lds
mov
xor
mov
sub
fldcw
sub
das
add
mov
fbstp
add
xchg
mov
insl
pop
imul
mov
mov
add
adc
or
fldl
add
push
xor
push
mov
mov
add
aas
stos
int
add
mov
push
imul
fldcw
adc
testl
jo
sub
dec
inc
add
add
add
add
add
add
shlb
add
nop
rcr
and
xlat
dec
add
push
add
std
xchg
xchg
mov
ret
scas
call
add
xor
subb
sbbb
sbbl
mov
add
sahf
jmp
and
repz
lcall
mov
add
bound
dec
repz
pop
data16
or
imull
xchg
insb
add
xchg
clc
mov
and
pop
je
push
add
sub
cmp
add
add
pop
add
add
inc
int
push
imul
add
cmp
mulb
in
add
lahf
add
push
push
add
stc
imul
xor
add
add
cmp
xchg
mov
jg
ret
push
fdivl
inc
add
fcoml
mov
sbb
push
std
pop
pop
sbb
jnp
push
push
add
add
sub
add
add
dec
add
add
sbb
add
push
add
add
dec
add
lahf
loop
mov
and
fldenv
cltd
or
addl
imul
add
add
mov
xchg
punpckhbw
lods
pop
or
xor
lock
iret
push
out
add
test
in
loopne
dec
add
int
enter
add
sbb
sbb
lock
xchg
lea
add
add
sbb
addl
sub
shrl
adcb
xchg
cmpsl
movsl
jbe
in
xchg
push
add
dec
pop
cwtl
sub
aas
push
add
add
adc
add
aaa
ficoml
add
lock
pop
add
movsl
mov
or
lock
pop
add
add
mov
mov
mov
add
add
pop
mov
pop
lds
jbe
aam
add
add
add
sub
add
insl
rcr
push
add
mov
xchg
mov
icebp
stos
scas
and
or
jno
add
xchg
insb
add
imul
lcall
push
add
sti
sub
adc
add
mov
cmp
xor
push
add
mov
imul
and
adc
mov
mov
inc
daa
push
add
vpmaxub
xchg
repz
fcoml
pop
push
mov
je
xchg
cmpsl
add
sbb
das
cmc
int3
jne
cmp
lock
xlat
lret
inc
dec
add
add
add
outsl
mov
rcrl
pop
add
dec
xor
into
dec
add
add
mov
xchg
jg
add
int
std
jg
sbb
in
sbb
or
subb
add
cltd
sbbb
iret
jb
pop
add
add
pop
out
add
inc
add
add
pop
add
add
mov
add
inc
scas
aad
lods
ja
mov
add
add
fldenv
add
iret
jg
adc
outsl
xor
or
test
push
add
hlt
cmpl
add
add
out
add
loop
add
add
jnp
add
cltd
cmpb
add
dec
add
in
pop
jnp
jo
xchg
sub
mov
and
das
jmp
stc
int3
repz
add
pop
rcrb
add
jp
and
mov
xchg
out
add
mov
add
add
mov
imulb
lock
dec
xor
insl
sub
add
neg
loope
inc
add
add
sub
sub
scas
adc
xor
jns
popf
inc
add
or
leave
jns
cmp
clc
aas
inc
add
add
sbb
repz
xchg
jae
add
icebp
inc
add
lock
jbe
hlt
mov
and
ror
sti
in
and
imul
add
lcall
add
nop
jb
cltd
scas
stos
xor
cmp
xchg
lahf
bound
mov
add
add
jecxz
push
add
outsl
clc
jp
jb
add
fsubrl
cmp
dec
add
xor
mov
fidivrs
add
add
pop
sub
das
div
jb
mov
js
dec
add
cltd
sub
cli
inc
add
xchg
add
mov
insl
jmp
add
cmp
add
dec
xor
fs
cmp
stc
add
push
add
outsl
out
lret
shl
xchg
or
inc
test
push
add
sahf
mov
mov
add
or
add
insl
dec
add
sbb
dec
add
mov
movsb
into
pusha
add
cmp
icebp
iret
cmp
xchg
in
inc
lods
lods
scas
dec
add
lcall
dec
add
subb
fstpl
mov
add
shl
push
inc
add
add
add
add
add
popa
imul
int3
call
add
test
push
add
mov
cmp
mov
xor
and
scas
inc
xchg
mov
out
xchg
fcoms
add
xchg
gs
mov
out
dec
add
shrb
pop
add
dec
add
adc
lea
rep
add
add
add
rcr
lock
out
addl
add
add
mov
add
cli
lds
add
pop
or
jmp
loopne
add
mov
aam
icebp
cmc
shr
aad
add
dec
add
mov
add
mov
jae
bound
pop
mov
aas
inc
add
xchg
sbb
lcall
ffreep
movsb
mov
add
cmp
jo
not
shlb
pop
xor
gs
lods
addr16
xchg
in
mov
aaa
mov
add
add
pop
loopne
aam
add
jo
dec
add
jg
add
mov
pop
pop
sub
icebp
dec
or
add
add
mov
add
out
or
out
add
repz
inc
add
mov
push
add
add
mov
and
jmp
pushf
push
add
jmp
push
inc
mov
add
in
add
sub
lcall
pop
add
pop
jno
pop
add
xchg
adc
mov
fwait
andl
in
push
cwtl
add
insl
mov
ljmp
pop
lret
or
xor
add
add
into
lods
mov
add
test
pop
add
add
mov
add
lock
jns
inc
das
mov
add
add
xchg
add
add
jg
cmp
div
clc
push
add
jae
add
add
test
pop
add
mov
add
add
sahf
and
add
clc
mov
add
add
or
jo
in
xchg
pusha
add
inc
mov
insb
add
add
dec
add
xchg
scas
xor
pusha
add
add
pop
orb
pop
add
sub
cld
mov
sahf
push
test
mov
add
aam
sti
loop
jle
pop
cs
movsb
add
cmc
stos
jbe
xchg
mov
add
mov
push
add
xor
cmp
mov
mov
test
cmpsl
mulb
adc
imul
add
xor
bound
mov
add
inc
pop
sub
inc
add
lret
sub
push
aam
sub
nop
lock
flds
bound
aas
lahf
cs
dec
mov
repz
add
ret
jmp
add
fidivs
fdiv
icebp
adcb
hlt
in
add
int3
push
add
pop
add
add
fwait
test
enter
cmp
jle
loope
xchg
pop
add
jp
cmp
jge
inc
add
inc
mov
add
into
and
sar
push
add
je
cli
dec
add
lcall
mov
ret
int3
mov
fbstp
cmpsl
add
scas
mov
loop
inc
mov
add
xchg
int3
loop
push
add
add
add
xchg
lcall
bound
dec
add
outsb
add
pushf
into
and
xor
xor
sub
xchg
cmpsb
jmp
add
xchg
add
daa
push
dec
add
push
shrb
pop
pop
add
add
and
cwtl
xor
out
loop
add
ss
mov
adc
push
add
cmp
push
add
in
imulb
add
jg
pop
fistpll
outsb
add
add
fbld
xchg
inc
bound
mov
pop
int
and
mov
xchg
add
add
fiaddl
js
cmp
scas
fsubl
push
add
add
add
add
pushf
sub
rcrl
subl
aaa
lret
pusha
add
std
jne
jg
stos
test
jl
push
xchg
in
add
pop
add
sub
sbb
mov
or
sub
xchg
pop
inc
mov
sub
adc
push
add
xlat
pop
popa
jmp
out
add
aas
push
cmp
call
add
gs
and
jae
dec
test
adc
jmp
add
addr16
mov
scas
nop
mov
in
fwait
pop
shrl
sahf
mov
add
mov
inc
repnz
test
fstpl
hlt
mov
rclb
add
outsb
add
add
cli
push
add
add
add
add
sub
xchg
popa
sub
movsl
in
mov
in
lret
aam
cmp
mull
mov
scas
out
push
lds
cli
sarb
imulb
insb
add
aam
int3
clc
sbb
jecxz
pop
aaa
push
or
sub
cmpsb
jno
enter
add
add
pop
xor
test
jmp
push
add
xchg
mov
loopne
ret
sub
aaa
decb
jmp
shr
add
and
scas
fidivrs
add
dec
add
pop
pop
xchg
add
lcall
pop
sub
loope
xchg
mov
mov
xchg
addr16
scas
shll
adc
add
add
sub
push
add
add
aad
dec
xchg
cltd
add
add
mov
mov
dec
pop
mov
fmuls
sub
and
js
mov
push
xor
sti
inc
add
add
mov
xchg
inc
add
pop
add
add
cmp
adcl
lock
jne
cwtl
sbb
and
pushf
insb
add
mov
adc
je
and
dec
sub
or
enter
add
jns
xchg
imul
add
lock
sti
sub
add
movsl
mov
psubq
add
adc
xor
jne
imul
popf
add
add
xlat
icebp
inc
fs
and
and
imul
push
add
jecxz
rcll
sub
insb
add
ja
jg
sbb
aaa
stc
inc
add
add
into
jb
pop
lea
add
xchg
dec
add
add
movsb
mov
cltd
test
mov
dec
out
testb
shll
add
adc
repnz
pushf
pop
add
xor
std
dec
cltd
xorb
hlt
mov
aas
bound
add
movaps
lods
je
xchg
adc
xor
sbbb
add
push
add
dec
add
inc
inc
sbb
add
inc
add
inc
cld
fwait
jns
loope
jnp
gs
test
mov
ror
dec
inc
add
icebp
sbb
dec
add
cld
sub
nop
add
pop
or
pop
add
out
push
or
mov
xor
sbb
mov
pushf
not
and
add
inc
add
pop
add
ret
xor
add
dec
punpcklwd
fidivrl
lea
iret
push
jbe
mov
lahf
out
aas
jbe
call
add
xchg
push
arpl
and
scas
mov
push
dec
dec
add
lret
add
add
stos
adc
pop
pop
inc
fcom
or
outsl
add
sbb
jle
inc
add
add
movl
add
clc
mov
pop
aam
sbb
add
pop
add
adc
dec
add
lret
adc
fldcw
add
add
add
out
add
fcmove
mov
cld
decb
jnp
lea
add
push
add
xchg
ror
add
add
add
push
add
xchg
fwait
and
insl
mov
lds
add
sub
jno
add
imul
dec
add
and
pop
js
ret
jno
add
cmpsl
out
out
add
add
in
pusha
add
in
push
mov
add
test
fwait
sbb
xchg
and
out
fsubl
add
mov
pop
stos
cmc
push
mov
aaa
jns
int3
ficompl
fldenv
mov
sub
xor
add
out
xchg
imul
jno
xor
mov
push
add
fdivr
mov
add
mov
dec
jge
add
add
pop
inc
add
test
icebp
shll
add
add
mov
jae
out
addr16
in
add
mov
or
lret
add
sbb
adc
adc
xchg
orl
add
dec
jmp
add
mov
add
add
outsl
add
add
xor
fildll
push
add
cltd
push
inc
sbb
push
adc
fiaddl
add
cmp
jge
jp
test
adc
inc
add
adc
loopne
push
add
pop
divb
pop
stos
flds
ret
mov
jge
add
adc
pop
negb
pop
add
rcr
cltd
repnz
outsb
add
inc
in
add
stc
push
ficoml
add
add
add
and
sub
inc
add
andl
xchg
or
jge
sub
imul
shrl
jnp
mov
add
xchg
andl
add
enter
and
pusha
add
mov
or
icebp
les
xchg
iret
or
outsl
lea
push
cld
adc
add
pop
add
add
add
mov
push
add
mov
in
jl
aam
jo
xchg
std
fistpll
add
jp
lret
dec
add
sbb
jmp
stc
jmp
lock
add
rorb
in
push
add
add
shrb
add
add
fidivrs
adc
push
add
lock
add
adc
jecxz
enter
test
add
shl
cltd
pop
add
add
add
inc
xchg
pop
add
mov
add
ficompl
cmp
pop
add
xor
mov
fsub
dec
add
push
mov
add
xorl
rcll
add
and
imul
dec
mov
push
mov
add
sub
add
lods
sarl
mov
dec
xor
lcall
mov
push
add
adc
data16
add
std
jo
insb
add
sub
adc
std
inc
es
dec
add
jg
dec
dec
add
add
add
frstor
add
xor
loop
loope
je
sbb
add
lret
iret
sahf
pop
int
mov
add
inc
add
fldenv
fdivl
add
pop
add
add
add
xchg
mov
add
dec
sbb
add
push
add
scas
push
add
push
xchg
cmpsl
mov
fwait
add
pop
data16
xor
rcll
cltd
add
add
push
sbb
lods
jns
ja
or
pop
outsl
outsl
loopne
scas
call
push
add
add
add
jns
fstps
xor
loope
add
add
add
sub
js
nop
push
and
mov
mov
add
dec
add
mov
out
and
jge
pop
rcrl
xchg
add
add
pop
add
push
add
inc
add
jl
lea
jb
or
andl
cmp
mov
iret
addr16
lock
add
loope
ret
pop
add
or
in
cmp
add
ljmp
mov
xchg
mov
loope
and
test
add
into
mov
lahf
cmp
stos
mov
add
add
mov
les
add
popf
insb
add
cltd
es
sbb
mov
inc
push
add
imull
mov
xchg
or
mov
add
dec
mov
shll
add
adcb
out
add
jecxz
add
add
aaa
imul
loope
mov
add
stc
fadd
xchg
jl
test
dec
add
add
andl
sub
cmpsb
inc
pop
add
aaa
xchg
xor
sbb
or
xor
fwait
xchg
stc
dec
add
add
pop
jge
xlat
arpl
mov
xchg
cmp
push
inc
adc
inc
xorb
add
add
movsl
test
add
lods
test
in
cmp
sub
sub
xchg
test
loopne
add
popa
jl
inc
add
stos
repnz
jle
mov
jnp
jb
pop
popf
movsb
jb
xor
add
push
add
adc
mov
inc
sub
xchg
fiadds
fwait
rclb
popf
aam
in
add
xor
jg
cmp
stos
ffreep
sti
add
test
stos
fiaddl
nop
adc
jb
scas
mov
fbstp
add
push
add
add
mov
repz
xchg
pop
add
out
sbb
and
add
or
and
add
add
pop
int
fstpl
pop
add
xor
mov
bound
dec
add
shrb
ljmp
out
xlat
cmp
in
ror
sbb
test
outsl
jo
cmpl
add
add
adc
scas
imul
xchg
pop
add
mov
or
mov
loopne
add
xchg
inc
js
sub
sbb
into
adc
into
dec
add
dec
xchg
mov
mov
call
add
jge
mov
rcrl
push
test
add
jbe
add
jmp
cmc
and
negb
adc
xchg
pop
inc
add
jno
lcall
push
sbb
mov
add
lret
enter
mov
iret
stc
and
iret
adc
inc
xchg
adc
cmp
test
mov
ffreep
cli
cmpsb
repnz
and
add
rcll
jecxz
push
adc
cli
pop
add
xchg
cmp
xor
add
mull
jbe
lods
xchg
jns
add
mov
jo
mov
or
jge
add
sub
add
add
inc
add
mov
fisubs
mov
sarl
add
mov
cmp
pop
cmp
into
in
jno
push
add
mov
int
dec
add
shlb
add
cmp
js
loope
test
inc
add
jmp
fnsave
les
add
icebp
xor
adc
xor
dec
add
or
repz
add
mov
add
adc
test
and
push
add
mov
add
jl
inc
adcb
jno
add
outsb
add
aad
jg
mov
loop
pusha
add
sub
pop
stos
ret
add
mov
add
fidivrs
xchg
fs
pop
add
sti
icebp
sbb
xchg
ljmp
add
add
fadds
add
or
xor
mov
pop
add
data16
pop
pop
add
ss
pop
push
add
jae
addl
rcll
dec
add
cmp
mov
dec
add
add
pop
xlat
std
movsb
push
add
add
xchg
cmp
lcall
inc
loopne
sub
jecxz
daa
inc
add
mov
adc
nop
mov
add
jle
stos
xchg
xlat
push
add
aam
add
clc
shufps
add
mov
cmp
xor
sbb
loope
out
add
xchg
bound
les
andl
jmp
add
stos
fisttpll
jmp
add
pop
add
push
add
sub
push
out
add
cmpsl
pop
add
add
xchg
jle
loop
add
inc
add
push
out
sub
add
mov
dec
add
fstps
decb
add
mov
or
in
xchg
add
test
add
leave
sbbl
leave
pop
add
lock
testb
sub
xor
addr16
js
xchg
movsb
and
enter
xlat
and
loop
add
inc
movl
inc
add
add
xchg
test
mov
or
inc
add
aam
mov
and
jmp
or
bound
data16
and
cwtl
int3
hlt
xchg
mov
mov
pop
add
lret
ja
add
inc
add
mov
fsts
rorb
negb
sub
add
xchg
adc
jecxz
gs
cmp
cmp
pop
add
lea
fdivp
adc
int
push
mov
add
cmpsb
ret
add
or
add
pop
add
jmp
and
movb
loopne
add
lret
aaa
cmp
pop
jno
fisubs
mov
or
int
pop
popf
pop
add
dec
add
xchg
sbb
cltd
into
mov
sbb
out
sti
js
shl
shlb
add
adc
inc
shl
jo
jle
lcall
add
add
mov
scas
int
jmp
dec
lret
adc
inc
jbe
addr16
and
cmp
loop
add
daa
xor
in
push
cwtl
data16
jmp
jle
fldl
mov
add
stc
jbe
inc
add
xor
lea
jmp
add
add
pop
add
add
add
push
add
aas
add
push
add
add
add
cmpsl
scas
das
ficoms
add
add
dec
and
popf
in
les
xchg
add
mov
cmpsl
mov
add
add
add
cmpsl
inc
or
cmc
inc
add
or
xor
push
add
add
aad
mov
sub
adc
cmp
add
add
sbb
add
mov
jae
add
pop
add
mov
add
aam
and
pop
mov
push
add
ret
shrb
mov
mov
add
das
and
out
into
test
imul
cld
pop
fistps
arpl
xlat
dec
add
xchg
mov
int
and
push
cld
pop
add
pop
xchg
dec
add
adc
lods
out
andl
hlt
mulb
add
or
inc
add
cmp
rcrl
sub
xlat
xor
lock
jae
add
sarl
test
popf
out
add
cmp
aaa
inc
loop
outsl
inc
push
jmp
adc
jnp
inc
mov
mov
test
add
scas
push
add
fsubrs
iret
out
daa
jg
mov
imul
popf
sahf
jecxz
repnz
mov
in
ret
inc
int
testb
fldt
add
add
mov
add
xor
add
dec
faddl
adc
sub
add
add
loope
add
nop
addr16
xchg
fdivrs
add
push
inc
out
mov
enter
ficoms
add
jbe
add
mov
adc
arpl
sub
pop
add
mov
lret
add
jmp
lea
xorl
pusha
add
jno
lds
sub
jne
cltd
mov
add
add
add
and
ficoms
xor
push
add
roll
in
jl
insl
add
sub
xor
divb
mov
dec
add
adcb
push
add
add
flds
pushf
mov
push
add
and
pop
add
dec
add
out
aam
mov
or
test
add
mov
stc
int
dec
add
add
pop
push
add
in
inc
xor
jb
xchg
sbb
jl
loopne
gs
daa
stc
dec
jne
fnstsw
fadds
add
add
add
and
repnz
lahf
data16
xchg
sbb
mov
xlat
sub
jno
add
sub
sub
enter
inc
xchg
or
mov
shll
xchg
out
movsb
pop
arpl
add
ljmp
pushf
movsl
les
adc
jmp
jg
scas
push
lret
pop
shlb
or
cli
js
mov
outsl
xchg
sbb
pushf
in
inc
add
inc
add
push
inc
sbb
cmp
clc
dec
add
add
add
push
add
fnsave
add
and
call
sub
pop
mov
add
jp
mov
jle
adc
and
add
inc
add
inc
add
mov
sub
enter
add
xchg
mov
jae
add
sub
sub
mov
int
inc
lock
add
jp
jae
andb
add
add
dec
add
lret
lock
or
xorb
jge
push
add
push
fcoms
add
cmp
movsl
imul
xor
fwait
cltd
mov
push
add
push
add
jae
or
int3
push
add
mov
add
mov
jb
add
and
inc
jp
xor
shll
adcb
imul
ret
cld
dec
jns
repnz
fwait
ljmp
add
sub
loope
adc
mov
data16
cmp
push
push
xor
icebp
out
sbb
iret
lods
out
pop
add
and
cli
inc
add
das
and
imul
add
add
mov
inc
pop
imul
jmp
add
xor
adc
add
cmp
enter
lods
push
add
stos
hlt
ror
or
sub
lea
add
popa
push
sub
ja
popl
sbb
pop
add
cltd
arpl
inc
add
mov
sarl
add
add
add
push
add
add
inc
adc
sub
in
call
add
and
data16
inc
add
fucomi
in
cwtl
aam
jo
push
test
mov
sub
pop
mov
andl
loopne
shll
mov
add
inc
add
mov
xchg
cli
add
sbbl
aas
add
bound
shll
lock
into
xor
add
mov
pop
add
inc
add
add
add
pop
xor
add
sti
pop
pop
pop
sub
fiaddl
lret
or
mov
imul
lds
inc
inc
pop
pusha
add
jl
fbstp
mov
cmp
push
add
xor
dec
add
add
stc
xor
lret
inc
add
mov
push
add
mov
daa
test
imul
lock
in
clc
mov
pop
enter
cltd
fsts
add
shll
add
add
dec
add
call
mov
shll
test
out
and
popa
lahf
xor
and
subb
lret
dec
add
jae
add
fstpl
add
mov
add
mov
inc
sub
pop
add
pop
add
loopne
dec
xchg
jo
andl
mov
je
dec
addr16
inc
add
xor
jge
dec
add
aad
pop
sbb
loop
loopne
add
add
mov
lock
inc
add
add
insl
cltd
jne
push
add
xor
add
xor
loopne
push
mov
imul
add
jae
call
mov
stos
je
mov
sbb
sarl
add
add
add
cmp
add
add
inc
sub
imul
js
xor
fwait
dec
nop
out
data16
add
lcall
add
int3
dec
sbb
add
mov
mov
jge
std
and
inc
add
stos
pusha
add
test
push
add
and
insb
add
insl
adc
pop
outsl
lcall
jg
add
pop
adc
decb
mov
add
repz
add
mov
xchg
push
sbb
push
push
add
add
xor
xchg
jno
int3
lds
mov
mov
daa
jle
icebp
or
add
add
mov
stos
add
sub
push
popf
es
add
dec
mov
xchg
stos
dec
add
add
test
add
mov
add
daa
push
pop
sbb
scas
cmp
rcrl
outsb
add
add
add
add
pop
add
out
mov
pop
add
add
jecxz
add
sbb
mov
or
mov
sbb
dec
add
or
xchg
pop
add
nop
push
loopne
iret
cpuid
fimull
add
int3
or
push
add
add
arpl
mov
add
add
fisubs
pop
add
add
jg
jmp
cld
leave
cmp
add
add
scas
enter
add
xchg
add
iret
ret
jo
xlat
or
xor
icebp
int
add
adc
xchg
add
or
add
fdivr
cli
xchg
fadds
inc
add
subl
add
adc
mov
and
mov
xlat
sti
fidivrs
test
fcoml
les
lcall
xchg
adc
sti
cmp
cmp
aas
mov
sbb
add
mov
mov
xchg
mov
mov
sub
pop
add
stc
add
mov
sub
sub
les
daa
filds
mov
add
mov
icebp
mov
pop
xor
xor
pushf
jo
jle
clc
add
mov
dec
add
mov
xor
lea
fwait
sub
imul
add
add
jb
jno
fstpt
test
and
mov
xchg
push
add
mov
shlb
and
jge
loop
add
out
bound
fisubs
add
add
incl
jbe
adc
adc
xor
mov
jle
xchg
mov
add
add
or
shrb
jno
xor
add
sar
push
add
int3
xchg
or
pop
add
gs
xor
in
outsl
xor
sub
pushf
cmp
lret
scas
repz
mov
cmp
add
clc
sub
or
das
and
addr16
add
jbe
outsb
add
mov
add
jns
fdivs
ret
loope
dec
jecxz
movsb
jne
add
bnd
movsl
sti
push
add
out
mov
mov
xchg
mov
scas
mov
add
dec
add
add
roll
test
mov
out
xchg
push
push
add
add
mov
xorl
dec
pop
movsb
cli
shl
add
xor
mov
add
sbb
xchg
jecxz
out
scas
xchg
inc
add
cmpsb
xor
xor
mov
mov
add
jbe
sbb
push
dec
add
js
mov
ja
inc
pop
add
cmc
or
imul
shll
aas
popf
cmc
cmp
test
inc
inc
add
mov
cltd
push
ljmp
mov
imul
pop
push
add
and
arpl
fcomip
sub
push
mov
add
add
xchg
cmp
mov
add
sub
scas
cli
jle
jae
add
add
xchg
xchg
cmpsl
or
jnp
inc
push
add
shr
mov
xor
pop
add
mov
and
jl
sti
data16
push
add
movsb
push
add
in
cmp
fisttpl
jae
stos
jbe
cmc
sub
enter
stc
dec
add
sbb
sti
sub
mov
mov
les
add
lock
jge
mov
add
ljmp
cmpl
aam
mov
add
fisubl
jb
loop
popa
add
or
ljmp
add
add
insb
add
and
add
jp
adc
cmpsb
es
in
mov
or
out
add
js
in
add
sbb
and
addb
jp
repz
and
and
leave
aam
inc
add
sub
add
xchg
into
jl
push
add
add
xchg
xchg
rorl
xchg
add
mov
add
fstpl
sub
add
daa
int3
lock
add
pushf
and
leave
and
into
rcr
bound
out
mov
jle
and
add
adc
cmp
dec
xchg
jb
cmp
cmpsl
xchg
mov
repnz
add
inc
gs
add
add
rorb
add
call
add
lret
mov
add
ljmp
jmp
mov
jecxz
or
add
add
mov
mov
lar
dec
fnstsw
outsb
add
add
sub
test
add
lea
add
in
and
xchg
xor
scas
add
add
dec
add
mov
add
lret
mov
scas
cld
out
dec
add
add
sbb
xor
mulb
gs
cmpsb
push
add
ja
je
xor
nop
add
mov
pop
ret
dec
add
add
sbb
in
adc
add
add
cmp
push
adc
ror
stc
inc
add
fcomi
cmp
inc
add
add
dec
addb
fstpt
xlat
rcl
jb
push
xchg
aaa
mov
ret
icebp
data16
mov
add
and
cmp
cmp
or
imul
push
add
imul
je
cmp
fisttps
add
shr
xlat
push
add
scas
xchg
xor
hlt
dec
pop
adc
push
add
aam
cmp
or
xor
add
adc
sbb
sub
arpl
add
leave
out
stos
jae
add
test
add
or
push
push
add
add
out
je
pushf
push
add
popf
xor
pop
pop
or
push
add
add
inc
ret
adc
mov
rcr
mov
add
arpl
push
add
add
add
add
lret
repnz
sub
add
addr16
jo
xchg
xor
divb
add
sub
imul
cld
jbe
sbb
je
cmp
imul
scas
xor
xor
inc
lret
insb
add
inc
insl
cli
les
faddl
push
shrb
pop
add
ror
loop
or
mov
insl
jge
cmc
dec
cmp
add
jp
adc
sub
mov
add
pushf
mov
push
add
add
xor
cmpl
push
xchg
or
pop
add
movsb
add
add
out
arpl
add
add
add
aad
or
adc
adcl
out
add
sbb
sbb
lock
or
daa
inc
das
add
movsl
out
fisubl
mov
xor
fldt
xchg
cmpsl
aas
xor
add
in
pop
nopl
push
andl
add
xor
out
bound
cwtl
scas
mov
sub
add
test
fs
test
bound
dec
add
outsl
mov
xchg
jae
add
xor
add
inc
add
add
push
add
pop
mov
xchg
stc
fwait
dec
pusha
add
add
pop
add
pop
xchg
mov
xchg
add
add
add
inc
jmp
add
xor
imul
sub
cli
sets
outsb
add
iret
dec
add
aaa
lahf
stos
xlat
lods
les
dec
add
pusha
add
cwtl
dec
add
dec
adc
imul
add
and
scas
jne
lret
data16
add
jbe
adc
fwait
mov
add
mov
popa
xchg
sub
sub
inc
xor
ret
sub
xchg
xlat
jmp
cmp
push
add
imul
xchg
add
ror
push
cmpsl
in
imul
cmp
cmc
mov
sbb
outsb
add
call
pop
add
jb
dec
add
add
add
add
add
push
add
and
rorl
add
js
xchg
pop
add
imul
and
js
sbb
dec
xor
pop
imul
add
add
mov
add
jae
dec
test
pop
add
stos
adc
icebp
mov
mov
xlat
outsl
cwtl
loop
mov
push
add
add
add
xor
ja
xchg
int3
faddl
add
daa
adc
mov
dec
xor
mov
inc
rcll
add
mov
cmc
testl
fidivrl
sbb
push
xchg
add
insb
add
add
add
jno
lods
jp
push
add
movsb
js
mov
sub
jns
sbb
fnstsw
addr16
add
jb
push
lahf
pop
add
add
cmpl
add
push
add
add
dec
xchg
mov
push
add
gs
adc
mov
push
cmc
lock
add
adc
orb
test
adc
in
add
enter
jb
out
test
add
push
or
iret
ret
push
ja
pop
and
scas
xchg
adc
repnz
sub
decb
scas
shlb
inc
inc
into
sbb
shlb
cltd
stos
cmc
jmp
jmp
adc
repz
loop
psubusw
enter
add
ret
daa
mov
add
test
add
pop
add
repz
or
pop
mov
gs
int
pop
add
add
cmpsl
in
mov
or
add
add
xor
add
jg
add
pop
pop
jl
into
int
jo
xor
push
lods
stc
mov
cmp
pop
add
in
mov
nop
add
scas
lods
test
add
sbb
adc
xchg
mov
std
repnz
add
add
xchg
fsubrs
js
add
mov
aas
orb
lea
hlt
popa
fcoms
scas
mov
lds
add
push
fadds
fistpl
sti
clc
jb
pop
enter
add
clc
out
add
add
jnp
fdiv
inc
push
cmovle
daa
popf
mov
scas
pop
add
lret
add
sub
out
push
add
sbb
cld
push
add
ljmp
add
lds
add
add
mov
cmpsl
insb
add
dec
lods
hlt
mov
push
pop
pop
adc
add
add
in
js
shrb
pop
pop
add
pop
xchg
sbb
add
lods
lea
jo
in
jge
add
movsb
out
adc
gs
daa
aas
adc
pop
add
adc
lea
add
std
insl
sbb
movsb
inc
mov
push
fildl
add
jge
ja
lock
add
xor
add
aaa
test
les
add
mov
or
and
rolb
into
into
pop
add
mov
jmp
sub
test
repnz
sbb
sahf
mov
add
dec
lcall
push
add
add
cmp
sub
icebp
neg
clc
test
add
cwtl
add
std
push
xchg
fdivs
enter
jne
pop
rcrl
add
mov
call
adc
jb
inc
dec
add
and
push
add
out
cmpsl
cmp
add
push
pop
add
imulb
add
mov
cli
out
ret
lock
add
cmp
push
arpl
jbe
sub
fadds
jg
mov
cmc
arpl
add
mov
sbb
lret
mov
add
jb
add
lds
pusha
add
adc
into
imul
lea
sbbb
mov
aam
lahf
popf
dec
out
sub
fadds
aas
mov
popa
sbb
movsb
mov
leave
addr16
inc
pop
add
int3
xchg
mov
aad
jno
out
xor
mov
xchg
mov
add
add
add
ljmp
xchg
and
add
cmp
mov
adc
lock
add
xlat
inc
add
lret
inc
add
in
pushf
mov
je
cs
mov
addr16
in
adc
or
add
add
mov
rorb
neg
clc
nop
xorl
cmp
xchg
mov
mov
xorb
mov
out
pop
add
bound
lods
idivl
jnp
mov
add
xor
sub
mov
xor
into
jns
add
jge
lds
jne
mov
fs
or
ss
add
in
jecxz
aam
mov
dec
sbb
xchg
loop
and
popf
fildll
add
jge
xor
insl
mov
add
je
pop
lea
add
lods
mov
add
sbb
mov
add
scas
xchg
jmp
jns
cmp
mov
add
push
add
lcall
xor
loopne
add
ret
xor
add
inc
add
xor
sbb
adc
xlat
iret
dec
add
cmp
aas
into
cmp
xchg
adc
sbb
mov
dec
aad
inc
add
adc
jge
add
aad
dec
enter
mov
bound
fldcw
fistpll
mov
xlat
lds
add
movsl
sub
sub
outsl
adc
icebp
mov
lahf
add
sub
sbb
das
inc
add
scas
outsb
add
push
add
addl
scas
add
icebp
aas
js
imul
or
incl
mov
ja
jb
jns
dec
add
gs
or
add
add
push
fadd
loop
bound
pop
add
ret
adc
clc
mov
das
cmpsl
sub
mov
mov
push
add
xor
testl
leave
out
leave
mov
push
pop
adc
jle
lahf
rcll
add
mov
and
das
out
xchg
jle
xor
and
lods
insb
add
mov
testb
xor
out
iret
lock
add
adc
xor
mov
add
rol
xor
push
lret
pop
ljmp
insl
fiaddl
imul
addl
mov
fldenv
sahf
dec
jmp
in
push
add
cmp
lock
data16
leave
movsl
ficoms
jne
jmp
add
dec
call
outsl
cwtl
sbb
dec
les
add
add
jne
into
pop
add
pop
add
add
push
add
dec
add
dec
xor
imul
add
and
sub
jns
popa
dec
test
add
int3
lock
or
sbb
mov
add
add
xchg
call
add
sbb
and
fs
sbb
jae
add
aaa
ret
inc
mov
cmpsl
outsb
add
jecxz
push
add
mov
add
add
add
add
inc
pop
fadds
add
pop
pop
sbb
jns
stos
cld
adc
add
push
add
mov
cmp
push
add
dec
add
std
add
mov
cltd
mov
decl
add
add
lock
add
push
add
push
adc
inc
add
lds
cmp
add
add
inc
add
data16
xor
xchg
mov
add
xchg
lock
test
addr16
xor
jecxz
push
add
je
movsb
lret
les
add
insb
add
push
add
inc
ja
or
dec
cmpsl
push
fiadds
ret
popf
cmp
out
cmp
mov
mov
add
aaa
outsb
add
pop
stos
ja
xchg
mov
adc
add
inc
add
scas
fldt
jo
aas
sbb
cwtl
daa
cmp
pop
in
xchg
inc
sub
sbb
mov
add
arpl
jns
insb
add
mov
inc
add
add
add
jmp
popf
jbe
add
add
rolb
add
push
add
aas
xchg
or
add
push
add
xor
inc
add
lcall
pop
push
add
add
xor
and
or
iret
add
pop
sti
sub
cmpsl
movsb
pusha
add
sbb
or
in
rcrb
mov
adc
add
data16
add
lcall
ljmp
mov
ficompl
mov
push
add
add
add
mov
stc
adc
mov
fdivs
add
add
out
shl
push
add
enter
sbb
pop
mov
shlb
xchg
sbb
outsb
add
out
enter
addr16
mov
mov
add
mov
jle
add
pop
add
sbbb
test
xchg
xchg
jb
sbb
lea
add
add
fmul
adc
add
push
add
push
pop
xor
jp
loopne
out
cmp
mov
addr16
in
cmp
sub
lcall
rcll
mov
add
add
push
add
lea
fcomps
lds
add
push
add
add
mov
add
add
mov
mov
add
test
mov
adc
or
mov
add
inc
jno
add
and
fstl
mov
or
rcrl
add
add
jecxz
add
jnp
dec
add
or
rcll
cmp
inc
add
hlt
cmp
add
arpl
imul
mov
add
cmp
jne
add
add
aam
pop
ret
jp
cmp
lods
push
add
insb
add
js
or
add
push
add
sbb
sti
jbe
jecxz
inc
cmc
add
sahf
xor
push
add
mov
gs
add
enter
fbstp
lcall
fucomp
adc
mov
sarl
call
dec
cmpb
add
pop
mov
scas
mov
mov
add
ljmp
rolb
add
add
fsubs
add
jmp
add
jmp
add
add
imul
nop
out
add
mov
add
add
pusha
add
sbb
rcrb
dec
jl
mov
mov
jl
sub
gs
xchg
jge
add
test
repz
and
mov
add
jb
mov
xchg
subb
test
add
pop
sahf
std
inc
add
popf
adc
mov
aad
add
in
cli
push
xchg
andl
notb
add
add
addb
pusha
add
enter
je
testb
out
jecxz
add
jge
repz
dec
ror
sbb
add
sub
add
push
mull
movsl
popf
adc
inc
xchg
dec
pop
add
xchg
ja
add
xor
addr16
inc
inc
ret
add
jb
lock
inc
pushf
rclb
xchg
add
shr
and
enter
fdivl
add
add
pushf
push
adcl
adc
add
fsubrs
into
add
add
push
shrl
add
scas
mov
enter
jg
add
mov
add
mov
mov
and
mov
add
add
jle
arpl
and
fbld
push
jo
jecxz
dec
add
cmp
test
fiadds
jge
mov
lahf
cmpb
in
mov
add
push
add
add
xchg
xchg
cmp
add
imul
inc
add
sbb
xchg
dec
cli
adc
pop
push
stc
pop
add
fs
xor
mov
add
add
add
data16
jne
dec
add
iret
pushf
add
xchg
shrl
add
add
je
pop
add
add
sbb
in
fisttpll
xlat
into
in
xchg
lcall
cmp
or
and
add
add
shrb
dec
sbb
jns
cmp
les
add
xor
jns
call
test
add
sbb
pusha
add
dec
add
fldl
jns
add
bound
push
xchg
lods
push
mov
xchg
int3
or
add
jecxz
jb
jno
cltd
cli
orb
lret
inc
add
pop
ja
lds
repnz
shl
ljmp
jl
sbb
push
into
mov
add
inc
add
and
adc
add
icebp
test
mov
adc
pushf
loop
dec
add
or
shrl
shll
add
sbb
add
imul
xchg
push
add
push
add
dec
mov
jno
push
and
pop
xor
add
add
lret
arpl
mov
mov
xchg
dec
add
notl
xchg
add
add
adc
repz
mov
or
ljmp
test
fisubs
out
fldt
fsts
dec
rcl
mov
xchg
add
jge
loopne
rclb
pop
add
mov
pop
ljmp
into
xor
add
clc
xchg
dec
jle
test
push
shll
jbe
lahf
sbb
add
cltd
xchg
ljmp
add
test
movsl
push
cld
fdivs
add
push
add
pushf
cmp
add
mov
setb
add
decl
add
test
inc
add
pop
or
adc
push
add
std
mov
idivl
lret
inc
ret
add
add
mov
and
lea
and
in
xor
xchg
pop
add
or
push
sahf
dec
add
push
add
add
icebp
or
add
dec
add
add
loop
dec
fs
xchg
lds
add
lods
or
jge
pop
push
add
clc
cmp
push
add
dec
push
das
vpinsrw
jno
inc
add
std
adc
sarl
and
dec
xor
add
push
add
add
cltd
push
adc
add
push
add
lret
mov
and
add
sti
inc
add
fdivl
add
pop
pop
ret
cli
inc
add
adc
dec
add
and
scas
iret
add
xchg
dec
add
dec
data16
xlat
fisubrl
add
or
add
sbb
add
outsl
mov
push
cld
lods
movsl
jnp
xchg
xchg
shr
ja
rorl
jno
andl
xchg
sub
and
xchg
sub
lea
js
adc
add
inc
add
ljmp
sbb
fdivrs
push
add
xchg
std
daa
sbb
shrl
add
into
mov
hlt
mov
mov
or
add
add
push
add
bound
fbld
dec
cmp
ret
push
dec
add
add
add
xchg
int
dec
and
add
int3
outsb
add
push
and
lcall
dec
add
pop
add
movsb
sub
add
add
cmpsb
cmc
cmc
push
add
xor
jb
inc
jmp
sbb
dec
add
dec
push
addr16
loope
sbb
add
push
add
repnz
add
inc
add
movsb
mov
insb
add
hlt
mov
add
mov
in
add
add
add
outsl
push
add
and
pop
add
jno
add
xchg
arpl
add
or
lock
fistps
sub
mov
xor
xchg
jno
add
add
repnz
cwtl
push
int3
cltd
cltd
and
jge
mov
addr16
pop
movsb
mov
fdivs
add
std
lods
in
jle
jl
dec
mul
adc
mov
mov
jmp
fildl
aas
js
sub
jae
add
lods
loopne
sub
scas
mov
add
add
add
nop
mov
add
icebp
js
loopne
add
add
mov
add
sqrtps
add
mov
add
clc
pop
add
imul
add
pop
pop
cmp
dec
add
in
xchg
dec
add
aad
bound
or
jne
add
adc
ja
pop
into
ljmp
sbb
xchg
inc
xchg
cmp
das
mov
add
push
sbb
pop
mov
and
clc
arpl
inc
jbe
mov
gs
mov
or
add
aam
pop
push
add
and
movsl
dec
add
lds
test
push
add
leave
xor
pop
ja
outsb
add
imul
dec
add
mov
mov
aas
rorl
add
bnd
stc
fnstsw
shlb
mov
lret
enter
xlat
shlb
pop
data16
pop
add
outsl
lret
sbb
std
icebp
imul
add
mov
setae
out
orb
or
push
aaa
sub
lret
or
sbb
sti
pop
scas
lods
test
push
ds
shrl
fbld
mov
add
add
subl
push
add
cmpsb
sbb
push
fisubrl
test
inc
test
cmp
decb
scas
sub
add
add
idivl
add
icebp
push
or
adc
dec
push
add
in
xchg
xchg
sar
out
inc
add
sbb
add
out
insl
xchg
mov
