loopne
out
out
mov
out
out
out
cmp
out
push
repz
mov
inc
inc
cmp
stos
stos
stos
stos
stos
addl
push
push
out
pusha
pusha
pusha
pusha
clc
clc
push
push
and
out
out
out
stos
mov
add
mov
out
pop
jns
in
in
xlat
out
adc
out
sub
and
and
arpl
out
out
out
out
mov
jns
and
and
xor
mov
hlt
hlt
mov
mov
add
mov
sub
out
out
mov
fs
aas
sbb
test
daa
daa
addb
mov
cmpsl
test
out
pop
lahf
dec
div
div
addr16
std
fidivs
xlat
xlat
movsb
out
out
dec
dec
test
addr16
or
lahf
fcmovu
fcmovu
fcmovu
test
popf
popf
out
in
in
in
in
dec
out
loope
test
jns
pop
pop
pop
pop
push
push
addl
dec
dec
dec
dec
add
add
in
out
stos
or
or
or
or
xor
xlat
cmp
jmp
mov
push
push
repz
sbb
and
and
mov
inc
imul
hlt
sahf
ss
sbb
pop
pop
pop
pop
shlb
data16
jb
sti
aaa
inc
inc
inc
inc
inc
mov
ret
adc
adc
adc
adc
adc
out
ds
test
sahf
xor
sbb
dec
mov
daa
pop
pop
iret
jg
in
in
and
pop
clc
and
push
cwtl
cwtl
cwtl
cwtl
scas
xor
xor
sbb
xchg
xchg
push
push
adc
sub
push
loope
sbb
fildl
int
pushf
jne
aas
aas
mov
imul
out
cmc
cmc
cmc
push
push
push
pushf
xor
mov
popf
sbb
or
das
jno
adc
jge
loop
loop
or
or
or
push
push
push
push
insb
insb
insb
cltd
cltd
cltd
cltd
or
lock
fstp
pop
xchg
xchg
repnz
decb
cmp
mov
lea
jo
jo
jl
jl
jl
mov
mov
hlt
hlt
sub
cwtl
add
call
shll
sub
nop
jb
or
popf
ret
out
sbb
and
jmp
jmp
lahf
lahf
lahf
lahf
test
es
dec
enter
mov
sbb
mov
test
xor
xor
pop
pop
push
push
push
push
push
push
push
push
mov
inc
inc
in
in
sub
iret
iret
aam
push
das
push
mov
rol
addr16
xchg
out
out
je
je
je
je
mov
dec
or
cs
mov
xchg
xchg
xchg
xchg
xchg
fdivrs
adc
iret
push
or
cmp
cmp
cmp
cmp
mov
loop
xchg
xchg
xchg
out
push
push
push
xor
or
cmp
bound
repnz
lods
lods
push
adc
mov
cld
mov
addr16
das
das
das
das
mov
pop
add
imul
xchg
jl
jl
pusha
pusha
pusha
psubb
es
xor
or
iret
iret
in
in
int
ja
out
out
and
and
and
and
out
out
out
sub
loope
jae
movsb
movsb
je
je
or
or
xchg
xchg
xchg
mov
popa
push
lcall
pop
jmp
pop
push
push
mov
jmp
out
xchg
inc
inc
inc
inc
xor
jp
inc
inc
data16
sbb
and
and
xchg
pop
pop
and
inc
xchg
xchg
xchg
inc
inc
js
cmp
pop
pop
mov
jl
dec
dec
dec
dec
cwtl
cmp
cmp
or
mov
ja
ja
ja
rcl
jno
jmp
stos
stos
popa
popa
bsf
ja
ret
mov
in
jns
addl
movsb
movsb
movsb
dec
dec
dec
dec
dec
add
cmpl
mov
pop
pop
push
pushf
out
out
out
sub
sub
test
out
out
out
sbb
mov
mov
mov
push
push
push
push
jg
decl
jecxz
test
add
ret
fistl
cmp
std
std
std
std
mov
xor
xchg
add
fstp
hlt
hlt
hlt
hlt
out
out
out
out
or
lcall
xor
or
mov
popa
popa
popa
and
xor
add
xor
xor
in
cmpsl
cmpsl
movsl
scas
scas
gs
xchg
aas
sti
sti
sti
sti
sti
or
or
inc
repnz
jne
jne
scas
inc
inc
inc
inc
adc
adc
adc
in
in
push
pop
pop
pop
pop
pop
pop
pop
gs
leave
lods
xchg
xchg
sub
mov
mov
loop
jge
rclb
adc
rol
shl
inc
xor
scas
scas
scas
scas
xchg
mov
add
add
xchg
jl
mov
fnstcw
or
sbb
sbb
lcall
arpl
dec
dec
scas
scas
scas
lea
pop
out
call
jecxz
jecxz
push
push
outsl
outsl
xor
pop
pop
push
push
push
push
ds
cmc
cmc
and
xchg
xchg
xchg
scas
scas
imul
rol
lea
mov
iret
iret
iret
iret
iret
iret
xchg
shrb
push
push
push
sub
cmp
sbb
sbb
cltd
cltd
mov
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
es
mov
dec
inc
inc
inc
sahf
sahf
addl
and
push
push
sbb
scas
adc
sub
sub
fdivrl
sub
push
push
and
sub
sub
jg
aad
xchg
push
push
scas
scas
scas
into
xchg
cli
cli
frstor
arpl
arpl
push
push
cmp
cmp
cmp
or
or
or
or
pushf
in
in
out
bnd
cli
cli
cli
cli
cli
cli
cli
cltd
cltd
pop
pop
pop
pop
rcl
and
push
push
test
push
push
lods
lods
pop
pop
jge
push
push
pop
sbb
xor
das
das
das
and
cltd
or
jecxz
jecxz
xchg
xchg
xchg
pop
and
and
and
cmp
imul
popf
popf
popf
popf
lcall
in
addl
jno
jno
jno
jno
jno
jno
or
jecxz
movsl
xchg
cmp
cmp
fidivl
test
pop
pop
pop
pop
pop
push
push
push
jne
mov
pop
adc
repz
xchg
xchg
leave
leave
leave
and
gs
cltd
cltd
arpl
out
xlat
mov
lods
into
into
xchg
fmuls
sub
dec
dec
dec
dec
dec
push
push
push
push
jae
jae
jae
pop
mov
mov
jmp
jmp
mov
inc
cmp
cmp
cmp
adc
mov
and
ja
ja
mov
cmpsb
dec
aaa
loop
movlhps
cld
imul
lock
jg
div
scas
int
push
aad
aad
mov
enter
cltd
sbb
es
js
fs
jo
push
push
pop
cmp
out
out
out
pop
fwait
out
out
out
out
out
mov
sbb
sbb
sbb
sti
sti
adc
mov
sub
add
sub
mov
or
jecxz
jae
jae
in
hlt
adc
sbb
push
push
ret
rcl
test
cli
jp
out
out
out
out
out
addr16
mov
es
icebp
icebp
icebp
icebp
icebp
sbb
daa
ljmp
imul
sbb
movsl
movsl
cmp
cmp
out
stos
stos
std
dec
mov
movsl
adc
div
xor
xor
xchg
xchg
xchg
jbe
arpl
arpl
es
xor
sub
hlt
hlt
hlt
hlt
hlt
hlt
orb
mov
mov
mov
sbb
das
jne
sub
sub
sub
imul
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
xchg
mov
add
pusha
pusha
jmp
jmp
pop
pop
cmpsl
adc
adc
adc
cmpb
mov
mov
mov
aam
lea
aad
aad
popf
popf
popf
mov
mov
add
inc
inc
mov
mov
or
jmp
mov
jmp
push
push
mov
cli
cli
cli
push
lahf
lahf
lahf
lahf
lahf
and
mov
mov
inc
xor
int3
int3
or
mov
mov
jcxz
adc
addb
cld
fisttps
sub
fucom
out
ss
das
cmp
cmp
xlat
gs
xchg
xchg
xchg
xchg
xchg
push
push
jnp
jnp
mov
push
jmp
es
arpl
ss
dec
dec
fwait
or
or
or
cmp
or
stos
stos
xchg
in
jae
xor
in
in
lret
rcl
rcl
rcl
rorl
js
adc
adc
in
xchg
int3
int3
aas
xor
push
lock
call
xchg
scas
sahf
sahf
sahf
int
lock
dec
dec
dec
dec
pop
pop
lods
lods
pop
rol
fdivl
lahf
div
dec
daa
repz
push
das
das
daa
cltd
clc
clc
jg
mov
mov
jle
ss
adc
cmp
mov
adc
adc
push
sub
xor
loope
inc
movsl
sub
div
and
repz
addr16
and
lret
pop
pop
mov
mov
fmull
pusha
pusha
pusha
je
out
addl
inc
inc
inc
inc
hlt
jnp
sub
int3
int3
int3
mov
jl
sahf
sahf
sahf
sahf
push
push
push
push
adc
addl
out
inc
add
pop
pop
pop
pop
insl
mov
cmp
mov
jecxz
movsl
movsl
movsl
movsl
movsl
movsl
jae
sub
add
add
add
mov
xor
aaa
aaa
aaa
fcmovu
fcmovbe
inc
inc
jmp
cmp
ret
cmp
in
add
int
adc
adc
inc
and
and
lods
lods
lods
lods
mov
mov
pop
xor
fidivrl
out
or
repz
jne
or
out
div
idivb
das
das
das
sbb
movsl
mov
loope
mov
dec
and
mov
or
stos
js
js
dec
dec
dec
jbe
or
or
inc
test
xchg
xchg
xchg
cmp
adc
leave
leave
adc
bound
outsl
xor
dec
adc
addr16
sub
sub
data16
stos
out
popa
popa
inc
adc
icebp
ja
adc
stc
stc
out
inc
inc
cs
in
cmpb
repnz
orb
enter
enter
xor
xchg
add
add
add
cwtl
cwtl
sub
out
out
inc
inc
mov
sub
sub
test
movsl
jnp
jnp
jnp
adc
rcl
insl
insl
insl
insl
popf
popf
popf
popf
popf
data16
jae
jne
jbe
jbe
lea
push
push
sbb
jo
jo
jo
sub
sub
or
lahf
dec
lods
mov
imul
mov
mov
or
mov
sahf
cmp
outsl
xchg
xchg
xchg
mov
mov
stos
stos
stos
stos
cmpsl
sbb
and
rcl
xor
rol
xchg
out
jno
cmp
mov
push
gs
out
adc
adc
adc
xor
in
insb
mov
fucomip
push
adc
jnp
popf
popf
div
div
jmp
push
push
cmp
jge
jge
jge
mov
pop
pop
stc
stc
stc
sub
push
mov
nop
cmpsb
cwtl
sub
push
les
rcl
imul
and
lcall
into
push
sub
insl
xor
fbstp
mov
cmp
cmp
sub
add
add
xchg
movsb
movsb
add
add
ja
stos
mov
mov
pop
idivl
les
xlat
lcall
ja
xor
dec
fidivl
fcomip
icebp
xor
mov
ljmp
jp
loop
iret
iret
iret
iret
adc
adcl
popf
mov
or
or
or
sahf
sahf
ljmp
mov
mov
mov
sbb
test
inc
push
push
push
push
ljmp
mov
push
mov
xor
call
pop
test
push
cmp
lds
gs
jg
jg
lods
loope
mov
cli
cli
push
xchg
std
std
std
adc
adc
xchg
xchg
call
ret
dec
ja
ja
ja
inc
orb
or
cmp
cmp
roll
dec
sti
pop
pop
pop
pop
out
stc
stc
xchg
xchg
push
and
enter
outsb
outsb
outsb
sbb
push
xlat
sub
dec
dec
dec
rcl
popa
popa
popa
popa
popa
popa
popa
jb
mov
ja
popf
adc
in
mov
ret
ret
ret
ret
ret
out
cmp
cmp
add
cmp
xchg
xchg
xchg
lock
xor
xor
xor
loopne
loopne
into
push
push
sub
in
mov
xor
repnz
push
push
push
push
mov
ret
ret
cmp
stos
stos
stos
stos
iret
lret
das
lods
lods
lods
stos
scas
scas
jno
jno
jno
pop
pop
les
into
arpl
mov
out
lret
lret
sarb
cmp
cmp
pop
pop
pop
repnz
jbe
cmp
out
out
fs
add
out
out
sub
je
je
je
je
aad
inc
inc
inc
inc
or
mov
add
xchg
xchg
xchg
xchg
jne
subl
or
outsl
imul
rcrb
aam
inc
cmp
or
cs
dec
dec
pop
pop
pop
pop
fstps
push
mov
repz
adc
pop
pop
pop
pop
cwtl
xchg
xchg
inc
inc
inc
inc
scas
outsl
outsl
outsl
ja
adc
add
cwtl
cmp
cmp
mov
outsl
outsl
outsl
outsl
outsl
ds
pop
lock
dec
dec
push
lods
insb
insb
insb
jne
dec
dec
dec
dec
pop
push
ds
mov
aas
fstp
fldl
add
shl
addb
addl
mov
mov
mov
das
fcomp
fadds
rcl
lret
aaa
aaa
imul
jle
or
or
and
and
and
inc
inc
and
ret
in
aaa
aaa
xchg
pop
out
idiv
std
std
and
addl
andl
addr16
pop
mov
push
push
xchg
xchg
adc
in
lret
or
es
loope
push
push
push
push
call
push
push
push
push
push
push
jp
push
push
push
push
push
fsincos
js
insb
insb
mov
rcl
rcrb
xor
pop
or
xchg
dec
enter
mov
psrad
movsb
lret
lret
lret
lret
lret
lret
lret
lret
lret
ds
sub
sub
sub
std
and
xor
insl
rol
xchg
xchg
mov
ja
ja
data16
or
sbb
enter
push
push
push
push
push
push
xchg
add
add
adc
popf
popf
cmp
idivb
aas
aas
int3
add
add
push
push
cmp
sbb
or
addr16
sbb
imul
cwtl
fs
push
push
jns
lret
lret
lret
lret
cmc
cmc
jle
jle
push
cmp
sbb
ljmp
add
xor
adc
adc
adc
fsubrs
adc
pop
pop
pop
jae
call
jno
push
push
push
push
xor
pop
pop
pop
mov
ret
lcall
scas
push
push
dec
rclb
adc
stos
stos
sbb
paddsw
gs
out
sbb
mov
push
mov
xrelease
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
inc
inc
mov
loopne
loopne
xor
cmpsl
cmpsl
sub
lods
lods
mov
aas
insb
insb
mov
fcmovnu
pusha
stos
stos
sarl
sub
scas
pop
pop
fmull
cmp
fsubrl
fcmovnu
ds
or
pusha
pusha
sub
cmp
cmp
movsl
movsl
pop
ret
sub
sub
jbe
jbe
jbe
ds
into
into
into
into
into
into
inc
mov
mov
mov
popf
popf
mov
pushf
mov
fldcw
mov
movsb
data16
cmc
jno
jno
or
pusha
pusha
andl
inc
dec
dec
dec
jge
jge
icebp
icebp
aad
jne
jne
mov
xor
push
push
push
push
scas
int3
int3
push
push
jb
jb
adc
mov
out
out
out
out
or
dec
pop
pop
fldcw
pop
pop
sub
imulb
sub
sub
ds
lahf
loopne
mov
bound
or
or
jbe
push
jg
popa
popa
popa
popa
popa
cmc
pop
pop
dec
dec
sbb
sbb
aad
aad
aad
aad
pushf
pushf
and
and
and
and
and
pushf
xor
cmpsl
pop
pop
dec
rcl
sbb
loopne
adc
adc
mov
pop
pop
pop
inc
inc
inc
inc
idivb
ds
inc
pop
pop
jmp
jmp
aam
pop
rol
jle
rcl
dec
pop
pop
pop
cmc
popa
test
xchg
sbb
lods
pop
popf
popf
xor
mov
sub
push
jle
mov
pop
pop
mov
lods
lods
lods
mov
add
adc
ds
pop
hlt
hlt
hlt
dec
dec
sbb
lods
lods
lods
jns
loope
nop
nop
nop
sub
sub
sub
adc
test
imul
push
xchg
xchg
xchg
xchg
cmp
cmp
dec
into
into
push
ret
xor
mov
jl
cmp
mov
test
pop
pop
pop
pop
cmpsb
cmpsb
jg
jg
stc
stc
stc
fs
test
push
push
mov
leave
jnp
pop
pand
notb
and
and
lods
lods
lods
lods
lods
xchg
xchg
xchg
xchg
inc
inc
mov
mov
scas
push
lcall
scas
scas
pushf
dec
dec
test
cmpsb
cmpsb
cmpsb
inc
inc
cltd
ficoms
sbb
adc
jae
fcmovnu
lcall
push
jb
mov
jp
sbb
ds
dec
push
push
push
push
fdivrl
fcmovnu
jns
div
div
div
testb
dec
clc
clc
icebp
inc
lds
lcall
xor
xor
rcrb
mov
mov
rsqrtps
mov
dec
dec
dec
dec
dec
shll
repz
mov
js
ljmp
cmp
cmp
lcall
arpl
pusha
addb
mov
movsl
iret
push
push
inc
pop
jmp
jmp
jbe
sbb
sbb
shlb
gs
in
jecxz
aam
test
stos
stos
jns
sbb
sbb
sbb
icebp
std
and
mov
mov
mov
mov
add
and
jnp
arpl
decb
mov
out
sbb
aam
add
outsl
outsl
jle
xchg
xchg
xchg
mov
lds
jmp
mov
mov
adc
rcl
call
mov
enter
jnp
jnp
int
movsl
cmp
lods
dec
jno
push
push
push
popf
jo
jo
mov
inc
cmpsl
cmpsl
insl
mov
dec
pop
pop
pop
pop
pop
shr
mov
add
add
add
adc
loopne
sbb
icebp
icebp
icebp
xlat
xlat
xlat
repz
int
push
push
push
push
push
push
addb
rcl
xchg
xchg
xchg
lods
addr16
cmpsb
cmpsb
dec
dec
fs
inc
dec
dec
dec
dec
imul
pop
pop
mov
mov
xlat
pop
div
inc
popf
rorl
outsl
outsl
sahf
popa
popa
loopne
mov
lahf
lahf
sbb
sbb
mov
jo
add
jmp
dec
addb
pop
pop
cmp
cmp
cmp
add
mov
cmpsl
cmpsl
add
arpl
das
das
out
out
rolb
aad
and
ss
pop
fbld
xchg
inc
inc
inc
inc
jnp
adc
dec
xchg
pop
jge
add
popa
popa
popa
popa
popa
lret
lret
lret
sub
mov
sbb
cmc
cmc
or
or
or
call
popa
dec
dec
dec
push
div
cmpsl
cmpsl
cmpsl
les
scas
scas
scas
scas
pop
pop
ja
mov
das
push
repz
ror
iret
mov
pop
mov
push
push
pop
pop
pop
pop
out
out
mov
jne
jne
aam
pusha
pusha
pusha
pusha
inc
inc
inc
inc
inc
inc
and
jae
ljmp
xchg
pushf
pushf
es
cld
cld
cld
inc
inc
inc
inc
inc
jb
shll
mov
fwait
adc
xchg
sbb
sbb
addl
ds
xchg
xchg
xchg
lret
lret
mov
mov
mov
dec
adc
adc
adc
stc
stc
stc
mov
pop
adc
adc
lcall
fs
inc
inc
adc
adc
je
mov
or
mov
xchg
xchg
rcl
arpl
inc
push
fadds
xor
ss
lret
lret
test
dec
dec
or
or
mov
bound
dec
dec
cli
cli
cli
pusha
xor
xor
xor
sbb
mov
std
dec
dec
dec
adc
xorb
xor
push
push
jecxz
jecxz
mov
mov
cmp
cmp
cmp
inc
inc
daa
daa
daa
or
add
add
add
in
je
je
cli
cli
cli
cli
lods
lods
lods
lods
cmp
jne
loopne
js
rcl
rcl
pop
dec
mov
push
push
push
push
push
push
push
push
cmp
cmp
cmp
jg
outsb
loopne
pushf
pushf
cmpsl
xchg
xchg
popf
popf
popf
popf
popf
popf
daa
mov
and
les
cmp
xchg
xchg
dec
dec
dec
dec
lds
ja
mov
mov
dec
sbb
or
loop
aad
mov
or
int3
loop
and
push
add
sub
loopne
lods
pop
add
add
int3
aam
data16
ljmp
xor
lea
push
jo
cmp
add
add
je
jp
jne
cmp
idiv
jne
stos
pop
out
dec
lcall
and
add
sub
cs
pop
dec
stos
pop
dec
add
nop
jmp
jle
lret
negb
xor
shlb
add
sub
js
cmp
out
jbe
add
cmp
push
pushl
out
sbb
or
adc
xchg
push
ss
mov
loop
pop
orb
clc
sub
fnstenv
fidivs
sbb
add
cmp
pop
jmp
and
push
sub
add
movsl
int
add
jnp
xchg
pop
push
or
push
push
test
sbb
adc
jnp
aas
movsb
imul
je
rcll
add
mov
and
out
jp
and
pop
jno
je
add
fwait
push
sbb
add
mov
add
add
xor
int
ja
mov
cmp
loop
jb
ja
sub
xor
xor
ret
enter
jb
clc
cmpb
xor
pop
imul
inc
outsb
add
cmp
add
aaa
xchg
rorb
cmp
loopne
inc
add
add
sub
fmull
je
arpl
adc
push
and
jmp
and
inc
dec
add
xlat
pop
daa
jns
xor
and
les
mov
cmpsb
push
outsb
add
cmpb
add
int
xchg
in
rorb
arpl
rorb
add
mov
sarl
aam
jne
notb
js
adc
shlb
and
add
jge
xor
test
pop
stos
xchg
nop
aaa
inc
xchg
lahf
mov
jae
xor
outsl
push
loop
jbe
xor
mov
test
mov
jle
out
jb
sbb
add
shl
or
xchg
adc
push
outsb
add
cmp
cld
sub
mov
jg
stos
icebp
jae
int3
lods
clc
movsl
repz
mov
scas
rcr
test
push
js
and
mov
mov
dec
mov
or
push
add
cmpb
add
add
xor
cmp
loopne
mov
arpl
outsb
add
aam
into
jb
add
lret
nop
jne
sbb
add
insb
add
or
xchg
mov
lods
mov
add
add
pop
enter
add
jg
add
cld
stos
sub
orl
enter
pop
adc
shl
cwtl
dec
or
arpl
add
jp
pop
addb
add
cmp
mov
add
rcrb
add
repz
orb
or
addr16
jge
and
jge
add
mov
jle
mov
inc
jmp
mov
fiaddl
cli
sub
sub
add
add
jl
jae
xor
jl
add
and
scas
jne
add
scas
sarl
mov
mov
pop
jns
subl
add
dec
pop
repnz
imul
hlt
pop
xchg
xor
push
pop
sub
jno
jo
mov
jae
jle
bound
cmp
ret
fdivs
push
mov
add
add
push
add
clc
jo
push
xlat
sbb
xchg
fisttps
arpl
adc
sub
ljmp
mov
push
sbb
popf
xor
add
pop
sahf
mov
xchg
loope
pop
and
xor
cmp
imul
int
cmp
add
and
mov
cmp
stos
pop
arpl
addl
clc
hlt
out
add
filds
out
fdiv
pop
aam
push
lcall
dec
and
pop
pop
mov
adc
cmp
add
mov
jecxz
jae
add
nop
decl
add
arpl
mov
sub
or
add
addr16
lcall
rolb
add
mov
add
fidivl
adc
jbe
cmpl
add
jmp
mov
ds
add
mov
mov
add
add
aad
jb
cmc
fmull
add
mov
push
dec
sub
cmp
in
dec
cmp
xlat
push
pop
cmp
push
pop
sti
add
mov
cmpsl
loope
int
push
ds
cwtl
pop
and
movsl
mov
fistl
addl
sbbl
push
int3
add
mov
add
cwtl
pop
inc
add
leave
pop
mov
jb
jge
ljmp
jecxz
add
in
and
pop
mov
dec
or
imul
in
cmp
jb
and
pop
lods
or
mov
sbb
inc
shrl
test
mov
inc
push
add
xor
insl
and
fmuls
add
add
std
lahf
lret
jecxz
jl
push
das
iret
insb
add
dec
add
add
xor
in
imul
push
add
add
xlat
dec
fsubr
call
mov
xlat
pop
and
ret
add
jp
movsb
and
int
xor
jmp
out
xor
push
dec
dec
out
add
nop
mov
int
cmp
out
or
sbb
mov
add
and
adc
fwait
inc
icebp
mov
jae
aad
mov
jmp
in
mov
daa
call
popf
daa
jecxz
add
adc
outsb
add
sbb
int
add
sub
sub
les
and
xchg
dec
jmp
sub
xor
sub
repz
add
push
mov
xor
pop
ja
xchg
mov
mov
pop
es
loope
ficoms
or
adc
xor
pop
add
mov
mov
loop
xchg
jg
loopne
xorb
add
cmp
ja
pop
dec
pop
orl
cmp
std
adc
addr16
add
test
adc
cwtl
sub
imul
xchg
sub
outsb
add
mov
andb
icebp
xchg
add
int3
sbb
pop
sbb
push
xor
add
gs
repnz
in
push
dec
add
test
cmpsb
sub
call
jae
jnp
clc
movl
fnstsw
cmp
add
or
xorl
hlt
sbb
das
shrl
jle
mov
add
mov
push
sbb
add
add
cli
jns
nop
xor
loope
mov
mov
add
push
scas
cmp
imul
pushf
fildll
scas
cmp
push
daa
mov
scas
pop
movsb
mov
sahf
inc
add
or
add
popf
push
add
and
test
cmp
add
xor
stos
leave
pop
outsl
in
dec
add
inc
add
adc
sbb
add
inc
call
add
dec
add
push
imull
in
push
jno
ja
push
fistpl
xlat
sarl
jb
xor
movsl
movl
cmp
stc
xchg
dec
add
aaa
popl
sub
sbb
insl
in
adc
mov
ds
mov
sbb
jle
add
aam
add
mov
mov
test
cmc
fmulp
inc
add
or
arpl
add
adc
push
adc
push
je
mov
outsb
add
push
stc
shll
test
mov
int3
test
add
add
add
cmp
loope
scas
pop
xchg
jns
push
out
popf
sbb
mov
aas
idiv
cmp
repz
sbb
test
ds
sub
test
into
adc
cmpsb
mov
scas
fisttps
ljmp
add
xchg
mov
loope
xor
fbstp
in
jmp
xor
dec
unpcklps
fmull
in
fistps
add
lret
lret
pop
test
dec
add
add
inc
add
sbb
adc
mov
mov
rcll
pop
adc
xor
shr
int
or
cmp
xchg
xor
fcoml
imul
cwtl
in
icebp
test
bound
rcll
sub
add
mov
std
jnp
out
jb
lea
pop
out
imul
stos
pushf
pause
cltd
pop
in
mov
stos
ja
mov
cmp
lret
inc
icebp
inc
add
xlat
subb
add
les
dec
into
out
sbb
xor
adc
movsl
outsb
add
mov
ja
orb
ret
jmp
and
lret
cmpsl
repnz
mul
lret
hlt
jp
xlat
push
add
ja
subb
xchg
pop
lea
test
add
and
das
mov
push
pop
jae
lods
push
ja
popa
ss
and
mov
pop
test
insb
add
xchg
mov
push
mov
add
xchg
pop
ret
mov
and
out
fdivl
dec
inc
add
leave
push
add
inc
out
adc
in
pop
jns
fldl
or
xchg
cmc
lock
test
rclb
cmp
add
test
xor
daa
jb
mov
outsl
jmp
jg
bound
mov
and
bound
je
les
mov
xor
jl
inc
add
gs
or
add
or
add
inc
xchg
xor
inc
push
outsl
lea
pushf
lahf
imul
pop
bound
jb
inc
or
mov
lahf
push
jns
jp
cmp
xlat
dec
popf
inc
add
add
add
out
les
stos
aam
add
int
je
mov
rcll
add
int3
add
in
push
lcall
pop
ds
in
add
repz
add
inc
dec
add
pop
sbb
loopne
test
dec
mov
fimull
call
loop
add
add
leave
stos
dec
loope
add
shl
cwtl
ret
or
add
shll
add
add
clc
jno
jp
mov
lock
inc
add
repnz
add
andl
cld
fninit
ds
fisttps
mov
sbb
bound
movsl
pushf
or
idivb
push
movsb
xchg
imul
stos
dec
add
cld
sub
add
cld
jp
mov
xchg
xor
cmc
mov
jo
add
dec
add
add
add
repnz
add
adc
das
insb
add
dec
xor
leave
push
mov
xchg
inc
stos
or
cld
repnz
cmc
or
add
push
ja
shlb
add
or
pusha
add
out
sbb
or
add
pop
xor
scas
and
add
add
mov
lods
in
push
fimull
add
mov
movsl
xchg
mov
xchg
jl
mov
mov
dec
add
add
push
lret
sahf
dec
add
push
add
repz
sbb
outsb
add
push
movsl
rcl
rcrl
repnz
cmp
push
jmp
add
mov
sbb
call
fisttpll
add
push
fimuls
add
push
cmp
lret
stc
mov
data16
les
pop
aas
repz
inc
add
addr16
lret
btc
jle
arpl
and
jmp
ror
cmp
mov
mov
mov
cmp
mov
sbb
push
and
inc
add
pop
mov
loopne
outsl
pop
lcall
mov
rolb
add
push
test
xor
adc
dec
popa
cli
inc
add
lahf
xor
es
lret
in
pop
fiadds
repz
hlt
xor
or
jns
xor
lret
clc
pop
sub
loope
mov
add
add
addr16
add
sub
daa
mov
mov
dec
add
sti
fadd
sbb
jmp
test
cmc
int
addl
add
or
fcompl
inc
lods
rcrl
pusha
add
pop
inc
add
loopne
imul
add
xchg
aas
arpl
in
pop
movsb
mov
add
pop
xchg
adc
jns
push
sub
pop
stc
mov
enter
and
add
and
scas
hlt
into
cld
lea
rorl
mov
pop
mov
mov
push
test
mulb
add
adc
decl
add
mov
xlat
mov
dec
lods
ss
mov
outsl
xor
add
push
jb
mov
add
daa
dec
push
mov
insb
add
fnstcw
jmp
and
outsb
add
jmp
out
adc
notb
jne
mov
add
sar
pop
fcomi
shlb
sub
lods
mov
lods
dec
add
add
in
push
andl
mov
push
cmp
lock
scas
mov
cmc
inc
add
add
xchg
inc
ret
add
loop
cmp
and
adc
mov
sbb
add
mov
mov
pop
mov
into
fstps
les
add
add
pop
shll
inc
add
jmp
xor
sub
mov
pop
add
aam
int3
add
je
jns
fiadds
or
sbb
mov
adc
jl
rcll
add
and
xorl
je
add
jg
mov
loopne
shlb
jecxz
push
loope
jns
sbb
add
push
xorl
pop
cwtl
sub
pusha
add
add
sti
icebp
mov
pop
divl
lods
mov
or
cld
and
jp
jl
mov
movsb
jae
add
iret
cmpb
xor
add
imul
int
mov
sub
mov
cmc
iret
and
int
cmpsl
out
icebp
xor
mov
aas
aad
sbb
jae
in
mov
lods
adc
and
ret
mov
dec
pop
dec
add
mov
icebp
insb
add
cmp
or
add
push
inc
add
ds
add
out
icebp
pop
leave
pushl
jecxz
xor
sub
inc
add
jle
pop
loop
movsl
fsubl
loope
add
add
adc
push
dec
add
shll
push
add
sti
arpl
cltd
movsl
out
push
push
movsl
push
mov
mov
or
mov
movsl
out
filds
sbb
xlat
int3
or
mov
add
sti
lds
lcall
out
add
cmp
ficompl
ret
mov
adc
add
mov
add
arpl
cmpsb
ss
add
fwait
sub
add
add
mov
add
dec
mov
add
add
or
dec
add
aam
pusha
add
add
jne
pop
jg
cwtl
movsb
stc
dec
icebp
push
mov
or
lods
sub
pop
mov
xchg
mov
mov
es
inc
add
sbb
jae
add
pop
add
lods
push
add
repnz
stc
shll
mov
sti
or
mov
jbe
xor
push
rolb
ret
fnstsw
scas
xchg
orl
mov
pop
movsl
cmp
out
aaa
pop
mov
jne
mov
jbe
cmp
add
aam
mulb
push
imul
add
ds
add
add
ret
push
adc
xchg
movsb
mov
push
mov
dec
add
jns
movsb
stos
inc
add
cmpsb
adc
ja
test
hlt
adc
and
add
add
or
inc
add
xchg
in
and
cmpsb
shll
xlat
adc
add
pusha
add
and
or
dec
outsb
add
mov
ja
add
mov
cmp
add
push
jmp
sar
xor
lea
pop
jecxz
mov
mov
cld
dec
add
pop
dec
gs
je
cmc
mov
int
add
inc
out
add
or
cltd
je
jns
cwtl
ss
add
imul
bound
mov
adc
add
mov
push
xchg
sbb
mov
add
pushf
lret
add
pusha
add
xor
stc
into
xchg
loopne
mov
and
add
add
nop
cmp
mov
lea
sub
out
adc
xor
add
stos
and
fwait
xchg
cld
or
mov
and
aad
aam
cmp
rorb
xchg
or
add
int
jl
mov
mov
add
push
dec
add
mov
add
dec
add
nop
mov
jle
add
shrl
sub
out
add
decl
add
pop
cmpsl
aad
roll
lea
fadd
pusha
add
imul
cmp
lds
add
int3
jnp
pop
frstor
fsubs
das
lahf
lea
add
cmp
and
inc
les
adc
lret
xchg
push
jne
incl
inc
in
or
xor
push
sub
popa
adc
jl
lods
xor
sbb
push
mov
daa
push
lea
add
popf
push
sub
pushf
stos
arpl
sub
and
ljmp
ret
jb
test
jecxz
add
shlb
cwtl
pusha
add
add
je
sub
push
add
sbb
dec
add
add
push
movsl
call
add
inc
add
mov
add
dec
lret
test
mov
mov
mov
lret
xchg
lret
or
lock
xchg
push
mov
sub
jo
dec
add
adc
sbb
cmpsb
fisttps
add
cmpsb
neg
push
pushf
cmp
pop
push
mov
add
add
add
aad
xor
mov
mov
test
lea
jo
add
cmp
add
rcrb
test
fwait
bound
inc
adc
add
xlat
xchg
cmp
mov
inc
jge
test
add
dec
add
mov
adc
adc
xor
add
push
mov
and
out
hlt
push
arpl
stos
pop
cmovp
mov
pop
sub
addr16
rolb
mov
orl
or
add
push
fs
pop
lods
jno
mov
push
lea
add
aad
scas
int
push
arpl
iret
call
in
and
sub
and
add
out
leave
stos
in
lret
push
add
out
mov
add
pop
lds
lret
lods
ss
sub
adcl
mov
add
mov
nop
rol
je
and
add
and
fwait
popf
sbb
adc
add
in
xchg
lea
add
mov
aam
imulb
inc
add
add
dec
loope
xlat
mov
or
and
add
xchg
addr16
stos
jp
fiaddl
aaa
xchg
mov
add
add
loope
pusha
add
xor
xchg
push
inc
mov
add
in
push
xchg
dec
add
pop
inc
jle
cltd
test
mov
xchg
mov
cmp
ret
mov
add
cmp
leave
lret
sbb
fdivrp
push
jnp
add
cmp
add
add
inc
mov
push
cltd
push
push
pop
mov
push
inc
xchg
ret
or
subl
rcrl
cmp
mov
out
add
loop
dec
mov
adc
mov
push
dec
add
mov
shl
adc
add
and
add
jno
cmc
xchg
push
add
add
add
add
ffreep
cmp
mov
fwait
mov
sub
aaa
push
dec
gs
js
lcall
mov
fcmovu
dec
add
mov
aaa
sub
sub
add
and
add
popa
movsl
ret
pop
scas
out
iret
mov
add
pop
les
add
add
clc
lock
add
mov
sub
adc
pop
inc
int3
rcll
add
pop
dec
xor
aad
ljmp
sbb
xchg
das
pusha
add
daa
in
dec
add
je
xor
int3
in
cltd
and
dec
add
sub
xor
nop
sub
add
aaa
add
fwait
add
mov
fisubl
mov
add
xchg
outsb
add
popa
pop
mov
or
jnp
fcomps
repnz
out
mov
add
cmpsb
mov
jmp
add
add
add
ss
cmp
bound
in
dec
dec
add
jno
popa
daa
push
add
out
lahf
in
add
ret
out
stos
push
jne
movsl
int3
pop
sarl
inc
add
or
subl
les
mov
cwtl
add
and
dec
sbbl
aam
test
xchg
or
mov
int3
repnz
shll
mov
push
add
mov
push
dec
add
add
push
jmp
das
mov
add
mov
adc
out
dec
cmpsb
mov
mov
mov
mov
lret
mov
push
flds
add
fistl
imul
mov
xchg
aas
fidivs
aas
inc
add
mov
popf
lret
jl
loopne
push
add
ret
push
inc
add
xchg
rorb
add
mov
inc
add
shlb
les
imul
add
sarb
add
push
sbb
jbe
jle
je
loop
mov
add
icebp
adc
aam
cwtl
inc
cmpsb
dec
dec
add
mov
pop
fwait
mov
cmp
js
mulb
scas
push
cli
sbb
xchg
test
sub
clc
or
lock
or
movsl
inc
jle
cltd
jmp
push
out
adc
pop
xor
fisubrs
cmp
js
fldl2e
shll
ds
mov
mov
je
adc
xor
xor
repnz
popf
sbb
add
mov
add
add
push
add
jle
das
nop
inc
add
fcomip
fisttpl
sub
sub
enter
add
adc
add
mov
mov
loopne
sub
idivb
je
xchg
outsl
scas
push
and
adc
mov
adc
mov
ds
jns
inc
push
and
sub
cmp
add
cwtl
cmc
shll
xchg
das
push
lea
mov
out
jp
push
jbe
add
push
outsl
stos
fsubp
imul
movsl
inc
add
sub
pop
mulb
push
outsl
lahf
daa
jb
out
ss
inc
mov
push
mov
sub
movl
clc
push
lea
call
sub
add
add
and
mov
cmp
je
mov
push
push
push
cld
call
test
jne
dec
add
mov
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
call
push
cmp
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
cld
jne
call
xor
mov
add
ret
xor
mov
mov
stc
mov
bnd
cmp
mov
mov
mov
inc
or
lea
lea
add
xchg
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
hlt
fdivrs
xchg
int3
xchg
jg
add
sub
jg
cmpsb
adc
out
push
dec
add
add
jle
faddp
test
int3
jg
pop
mov
or
add
outsb
add
scas
pop
sbb
popa
loopne
mov
rcrb
jmp
sub
add
lds
inc
add
or
cmpsl
jg
add
mov
add
std
inc
xchg
cwtl
mov
sbb
imul
pop
test
and
movsb
dec
insb
add
jle
add
xchg
xor
or
jle
add
test
mov
sahf
enter
cli
cli
push
jle
mov
imul
xor
stos
insl
push
mov
sbb
add
push
cmc
gs
add
mov
mov
jg
push
jmp
mov
push
add
add
mov
test
ljmp
mov
pop
cli
fsts
ficomps
xor
add
loope
add
or
lret
std
push
rcl
scas
ja
sbb
or
add
add
test
push
std
mov
rcrl
add
sbb
addr16
push
add
ror
pop
fwait
enter
test
or
lods
adc
fstl
add
into
sub
mov
sub
xor
shll
push
daa
leave
cmpl
ret
lds
cld
mov
adc
loope
xlat
rcll
jae
push
inc
inc
add
pop
inc
add
ret
jecxz
add
cli
lods
lahf
gs
inc
add
add
cwtl
pop
bound
repnz
add
fsubr
pop
xlat
inc
in
mov
insb
add
pop
fwait
aam
jg
add
aaa
nop
sbb
cmp
cwtl
aam
add
inc
add
add
adc
push
mov
xchg
shlb
push
test
jno
mul
xchg
mov
pushf
loopne
add
fistl
mov
jns
lahf
mov
mov
test
fnstenv
ja
stos
je
adc
daa
ror
imul
add
jge
push
sbb
add
sbb
mov
add
cmp
addl
sbb
pop
mov
jne
fmull
imul
sub
add
or
dec
add
movsb
xchg
mov
xor
xchg
pop
movsl
cmp
or
xchg
test
fisttpl
movsb
xchg
mov
int
sti
fsts
push
add
add
adc
cmp
daa
ret
testb
jle
jmp
add
fdivrl
sub
jns
xchg
jnp
or
pushf
jae
scas
dec
push
lea
sub
out
sahf
jecxz
add
xchg
push
add
jns
out
xchg
jl
int3
add
mov
sub
sub
xor
es
dec
xor
sub
xor
jb
in
jp
std
add
push
add
adc
lret
das
lea
repnz
popa
mov
insl
adc
sbb
push
dec
add
add
lds
insb
add
or
add
inc
xchg
lds
xor
cltd
and
sub
fsubrp
jle
dec
pop
dec
add
stc
push
push
lock
adc
jno
xchg
xor
xchg
sahf
in
cli
add
add
add
addr16
xchg
out
cmpeqps
shlb
sub
add
mov
add
lods
add
insb
add
in
loopne
push
add
ljmp
in
shll
add
cmpsb
es
xchg
push
loop
push
adc
loopne
cmp
sbb
pusha
add
ds
mov
dec
add
add
aas
lock
ljmp
push
mov
cmpl
add
pushf
dec
add
pop
fldz
lret
mov
pusha
add
cmp
or
bound
int
add
cmp
xor
ds
add
cli
xchg
mov
shlb
leave
push
aam
testb
fadds
xor
addr16
cli
sbb
mov
mov
pop
je
stos
pop
push
aad
jle
jmp
and
testb
scas
lret
leave
rclb
sbb
fwait
pop
call
dec
add
pop
adc
pop
adc
sub
mov
add
jle
lds
ficomps
add
add
icebp
adc
sub
insb
add
decl
rcll
jns
cli
add
gs
mov
outsb
add
pop
inc
sti
out
cltd
jae
add
lods
lea
pop
je
push
int
lret
imul
mov
lods
jne
add
loope
push
mov
push
jno
sub
adc
in
cmp
test
cmpsb
ret
cmpsb
aad
add
cmp
test
mov
frstor
das
mov
push
ret
add
inc
add
fldl
insb
add
xchg
pop
lock
sub
fisubs
add
xchg
push
mov
jno
rcl
add
ja
int
xor
popa
inc
add
sbb
iret
mov
cmp
testl
or
pop
cmpsb
movsb
pop
daa
sbb
push
cmc
jb
incb
int
lret
outsb
add
push
pop
loopne
nop
jae
xchg
add
insb
add
push
mov
orb
add
xor
add
roll
xchg
push
mov
sarb
mov
add
adc
add
add
cmpsl
pop
add
dec
add
mov
push
outsl
enter
and
ret
xchg
imul
flds
jmp
add
imul
lret
cli
dec
test
mov
mov
add
push
loop
add
add
add
add
jbe
pop
int
pop
call
test
outsl
in
ss
add
cmpsl
inc
inc
adc
xchg
in
pop
add
int
cmp
add
xchg
jge
mov
lahf
add
add
fdivs
cld
mov
jle
jb
add
aas
adc
add
ficoms
add
mov
mov
push
loopne
xor
mov
mov
jae
add
nop
rorb
aam
and
push
add
add
adc
xchg
clc
xlat
popf
adc
add
fstpl
fsubl
mov
bound
add
aaa
sbb
shlb
pusha
add
inc
add
les
arpl
enter
mov
subb
add
mov
cld
dec
rcr
pop
or
jg
fwait
push
int3
cltd
mov
mov
sub
mov
shll
push
push
andl
test
jmp
pop
jns
loopne
add
push
add
lods
in
add
pop
mov
add
out
push
mov
xor
mov
jnp
clc
stos
push
mov
push
shr
jge
mov
js
jl
adc
sahf
into
mov
sahf
dec
pop
hlt
pop
adc
jno
insl
aas
fcmovu
mov
test
test
add
inc
sbb
sarl
mov
jo
add
ja
jl
dec
mov
cli
nop
dec
in
testb
rcrb
push
leave
adc
adc
fldenv
gs
outsl
andb
in
add
dec
add
dec
mov
mov
jno
add
stc
dec
add
jo
movsl
dec
add
cltd
or
inc
add
adc
imul
out
mov
add
mov
imul
jne
add
aad
ljmp
sti
mov
add
cli
or
fisubs
lret
mov
sar
add
pop
out
movsb
stos
jns
pop
and
xor
mov
pop
dec
add
push
js
add
dec
add
js
push
add
add
fcompl
sub
sub
pop
fistps
leave
dec
dec
scas
jmp
sti
jne
mov
adc
mov
out
dec
sub
or
and
sbb
cld
add
out
mov
sub
sbb
sbb
ret
mov
inc
shl
cmp
ja
testl
push
out
cmc
mov
lods
and
enter
push
cmp
jp
stc
cmp
pop
adc
sub
add
loopne
out
inc
sbb
and
lds
pop
fucomip
divl
int3
pushf
sub
fsubs
adc
adc
add
add
xor
fnstenv
ds
xlat
lret
in
cmc
dec
and
ja
jae
rcrb
pop
in
push
pop
mov
add
push
mov
add
push
pop
and
dec
dec
cmpsl
xchg
and
mov
push
mov
sub
je
loope
adc
ja
js
test
loope
cmp
fsts
cmc
aas
lods
add
mov
mov
or
addl
int3
push
dec
add
mov
les
jle
add
lahf
ljmp
fcmovnb
ljmp
lret
cmp
add
jbe
sbb
xchg
std
adc
repnz
push
and
lret
test
cmp
add
je
jns
jge
add
pop
test
adc
push
xlat
mov
mov
add
push
in
xchg
int
add
and
and
push
xchg
int
pop
pushf
test
repnz
push
loop
fsts
repnz
int
push
bound
test
push
popf
push
jg
push
bound
xchg
mov
add
and
jb
jmp
pop
js
and
cmp
mov
mov
inc
add
and
test
add
loope
int3
mov
and
mov
push
loope
adc
inc
add
sbb
add
popf
mov
clc
leave
int3
mov
add
fimull
jae
test
int3
into
dec
lret
aas
lcall
pop
add
add
sbb
pop
je
add
cmp
xchg
les
inc
add
add
out
stos
mov
ljmp
and
add
es
dec
dec
mov
xor
pop
test
mov
dec
xlat
xor
loop
sahf
aaa
pushf
mov
lret
cmp
fdivrl
fstpt
lahf
mov
leave
inc
add
add
push
dec
dec
add
sbb
cmpsb
cmp
inc
ljmp
fwait
xchg
cli
test
jmp
jg
pop
mov
pop
test
or
ljmp
and
mov
sar
add
or
xchg
cmp
adc
add
and
cmp
inc
out
cmpsl
movsl
movsb
repnz
dec
add
dec
xor
jl
inc
add
push
add
jns
pop
pop
push
inc
xchg
jle
cwtl
call
aad
mov
sbb
les
pop
xchg
cmp
lret
fcompl
xor
stos
std
xchg
aam
loop
pop
xchg
pop
cwtl
shlb
adc
add
bound
and
xor
out
lret
inc
fbld
adc
lret
dec
add
std
bound
aas
sub
add
loope
mov
in
add
lock
xcrypt-cbc
cmpsl
push
sti
dec
add
push
sub
cmpsl
mov
add
jl
in
adc
ret
cmpsl
jp
sub
xchg
add
fiadds
add
fadd
pop
push
mov
pop
mov
mov
mov
xor
add
add
mov
repnz
jb
pop
push
aaa
fldt
mov
test
inc
cltd
xor
add
add
add
add
push
lret
mov
pop
adc
add
dec
bound
xchg
inc
add
addb
mov
jle
in
data16
and
stos
fidivs
adc
and
xor
and
out
daa
inc
add
lcall
push
add
mov
sub
syscall
mov
mov
aam
add
lahf
daa
mov
push
jecxz
add
insl
mov
lea
xlat
mov
add
mov
in
and
movsl
ds
dec
add
mov
add
xor
lahf
cwtl
shlb
dec
add
test
add
mov
loop
adc
or
cmp
lret
icebp
and
mov
fcomps
push
add
sbb
and
jnp
lds
test
addb
jo
inc
cli
pop
mov
out
add
ret
add
pop
add
mull
xor
jno
sub
add
das
jle
jg
pop
imul
xlat
jmp
mov
int3
pop
mov
cmp
fwait
pop
hlt
jo
mov
jns
std
fadds
or
mov
adc
jo
in
add
xor
xchg
imul
pop
dec
add
ror
jbe
cmpsl
insb
add
xchg
aaa
pop
mov
nop
aam
nop
or
pop
cmp
dec
fwait
test
les
orl
pushf
xor
jp
insl
pop
mov
rcl
add
xchg
cmp
mov
lea
add
cmpsb
push
fwait
hlt
aaa
sbb
test
add
jb
xor
add
push
cmpsb
mov
xchg
repnz
push
inc
add
mov
stos
mov
sbb
fwait
dec
lret
je
sub
push
push
add
add
jge
add
xchg
fimuls
sbb
ss
push
hlt
xor
add
movsb
adc
lods
aad
dec
add
add
bound
out
les
sub
inc
add
jge
int3
jmp
add
repz
aam
ljmp
and
pusha
add
inc
add
or
sbb
into
adc
mov
cwtl
mov
push
jg
lret
mov
add
jmp
movsl
cmp
dec
add
cld
inc
and
mov
xchg
inc
add
xor
daa
sbb
aas
mov
xor
and
fildll
cld
int3
les
mov
cmp
mov
and
nop
mov
ret
push
pop
cmp
jmp
leave
xchg
jecxz
cmp
in
out
clc
repnz
nop
nop
jae
add
mov
dec
stos
add
mov
repnz
nop
nop
jae
add
enter
add
sbb
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
enter
rcrb
mov
cmp
clc
repnz
nop
nop
jae
rcrb
add
mov
les
loopne
push
mov
xchg
ret
add
add
mov
adc
add
jnp
mov
add
add
repnz
nop
nop
jae
pop
add
incb
adc
push
add
add
push
mov
xchg
ret
add
enter
add
push
xchg
push
clc
repnz
nop
nop
jae
add
mov
xchg
add
mov
cld
nop
nop
jae
mov
cld
xchg
mov
push
addl
cld
nop
nop
jae
pop
add
add
xchg
fs
mov
clc
repnz
nop
nop
jae
mov
les
and
addb
cmp
ret
adc
add
push
add
repnz
mov
sahf
decl
cld
nop
nop
jae
cmp
pop
add
add
or
add
clc
repnz
nop
nop
jae
mov
add
push
mov
xchg
ret
in
add
add
div
clc
pop
fwait
nop
push
mov
leave
nop
jmp
test
jbe
add
add
idivb
or
cld
nop
nop
jae
mov
les
add
sub
or
lret
mov
leave
nop
jmp
cld
push
add
loopne
out
xor
mov
xchg
ret
loopne,pt
push
mov
sti
movsb
adc
repnz
nop
nop
jae
adc
xchg
loopne
add
add
add
push
add
xabort
cld
nop
nop
jae
repnz
dec
add
dec
add
leave
nop
push
mov
leave
nop
jmp
jns
add
sub
add
lret
xchg
add
aad
inc
roll
movsb
imul
mov
and
mov
clc
repnz
nop
nop
jae
push
add
add
add
orl
pop
clc
repnz
nop
nop
jae
out
add
add
add
add
xor
repnz
nop
nop
jae
mov
add
jbe
add
imul
mov
leave
nop
jmp
add
push
jns
add
mov
mov
sub
adc
inc
add
push
clc
repnz
nop
nop
jae
cltd
xchg
add
xchg
hlt
add
dec
add
and
push
mov
leave
nop
jmp
add
cmc
mov
add
cltd
test
push
inc
add
add
nop
jmp
mov
add
add
nop
jmp
add
add
sbb
stos
nop
push
mov
leave
nop
jmp
add
jbe
cmp
xchg
cmp
add
repnz
nop
nop
jae
add
movsb
add
stos
arpl
add
nop
push
mov
leave
nop
jmp
repnz
add
add
add
clc
repnz
nop
nop
jae
add
repnz
incl
add
mov
jbe
shl
add
add
test
add
loop
or
jnp
add
push
add
cld
add
add
lock
call
nop
jae
add
xchg
add
movsb
add
add
cmp
call
nop
nop
jae
xchg
add
pop
les
pop
je
clc
repnz
nop
nop
jae
add
push
and
jp
mov
push
mov
xchg
ret
xchg
add
dec
push
add
pop
inc
add
pop
mov
add
adc
rcrl
leave
nop
jmp
add
adc
mov
dec
push
mov
xlat
ljmp
loop
int
add
add
add
push
mov
xchg
ret
push
add
add
add
sbb
jne
add
clc
repnz
nop
nop
jae
inc
xchg
dec
add
repnz
push
clc
repnz
nop
nop
jae
incb
adc
push
add
sbb
fiadds
xor
push
mov
xchg
ret
xchg
pop
push
add
mov
or
mov
leave
nop
jmp
add
add
add
imul
push
mov
leave
nop
jmp
add
adc
idiv
stos
jl
push
mov
add
xor
clc
repnz
nop
nop
jae
mov
add
scas
mov
clc
repnz
nop
nop
jae
add
inc
stos
add
cmc
inc
push
mov
mov
xchg
ret
loopne
sahf
test
add
add
xchg
pushl
push
mov
xchg
ret
mov
xchg
testb
call
clc
repnz
nop
nop
jae
in
in
push
add
add
dec
sahf
sbb
mov
leave
nop
jmp
jbe
add
add
xchg
push
mov
xchg
ret
test
add
add
add
test
mov
add
repnz
add
add
cld
rcr
clc
repnz
nop
nop
jae
mov
adc
xchg
add
loopne
enter
mov
add
pop
push
nop
push
mov
leave
nop
jmp
add
add
mov
out
xchg
add
add
push
stos
adc
jno
jne
nop
push
mov
leave
nop
jmp
hlt
add
add
inc
add
add
repnz
nop
nop
jae
add
dec
adc
enter
loope
push
mov
xchg
ret
pop
movsb
add
test
mov
xchg
shlb
cmp
push
mov
xchg
ret
add
enter
add
jns
cmp
add
clc
repnz
nop
nop
jae
add
incb
add
add
cmp
mov
xchg
ret
rorb
ds
add
dec
add
sar
cld
nop
nop
jae
add
add
mov
arpl
add
addr16
push
mov
xchg
ret
add
fcmovnbe
incb
mov
add
sar
cld
nop
nop
jae
rolb
add
add
fs
cmpl
sbb
nop
push
mov
leave
nop
jmp
add
add
add
add
out
adc
clc
repnz
nop
nop
jae
add
add
add
jbe
shl
clc
repnz
nop
nop
jae
mov
add
mov
or
add
repnz
nop
nop
jae
add
dec
xchg
ds
add
lea
repnz
nop
nop
jae
mov
add
add
arpl
ds
fdivrp
enter
clc
repnz
nop
nop
jae
add
pop
sti
movsb
cmc
add
movsb
sti
daa
cmpl
nop
push
mov
leave
nop
jmp
add
add
enter
test
mov
test
data16
ret
add
sub
addl
add
insl
jnp
add
mov
add
add
add
add
add
clc
repnz
nop
nop
jae
add
add
add
push
leave
jl
nop
push
mov
leave
nop
jmp
add
add
in
add
or
mov
add
fstpl
add
add
add
out
add
mov
mov
xchg
ret
mov
out
test
add
arpl
dec
add
mov
clc
repnz
nop
nop
jae
add
pop
add
add
jmp
mov
xchg
ret
xchg
jbe
add
add
add
mov
sub
test
add
clc
repnz
nop
nop
jae
xchg
notb
aas
je
clc
repnz
nop
nop
jae
dec
movsb
enter
rclb
pop
clc
repnz
nop
nop
jae
loopne
add
dec
add
add
add
inc
and
nop
push
mov
leave
nop
jmp
movsb
add
fs
xchg
add
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
sti
adc
add
pop
add
movsb
jmp
repnz
nop
nop
jae
push
add
add
add
test
mov
leave
nop
jmp
add
out
cmc
dec
add
enter
inc
adc
repnz
nop
nop
jae
dec
add
add
add
add
es
jmp
cld
nop
nop
jae
add
add
in
adc
add
fs
fld1
push
mov
xchg
ret
add
add
add
add
sbb
add
nop
push
mov
leave
nop
jmp
add
outsb
add
add
cmpl
nop
push
mov
leave
nop
jmp
rolb
add
pop
push
mov
xchg
ret
rolb
xchg
add
add
and
nop
jmp
rclb
dec
add
icebp
popl
clc
repnz
nop
nop
jae
out
mov
fisttpl
add
ljmp
add
add
nop
push
mov
leave
nop
jmp
add
add
add
enter
jge
add
clc
repnz
nop
nop
jae
add
add
add
cmpl
add
jns
rolb
add
hlt
add
insl
push
clc
repnz
nop
nop
jae
add
add
add
mov
leave
nop
jmp
mov
out
inc
xchg
add
loopne
add
add
mov
nop
push
mov
leave
nop
jmp
add
mov
movsb
add
fcomps
inc
xor
nop
push
mov
leave
nop
jmp
push
cmp
enter
xchg
push
in
add
test
mov
add
mov
mov
cld
nop
nop
jae
jns
add
cld
add
mov
daa
je
clc
repnz
nop
nop
jae
fs
inc
add
push
clc
repnz
nop
nop
jae
pop
add
out
pop
add
add
add
mov
xchg
ret
add
add
out
add
insl
push
push
mov
xchg
ret
test
add
test
clc
repnz
nop
nop
jae
jbe
add
add
xchg
test
add
push
clc
repnz
nop
nop
jae
xchg
add
xchg
rolb
pop
add
nop
nop
jae
sub
add
add
add
hlt
mov
pop
clc
repnz
nop
nop
jae
hlt
add
add
add
add
push
clc
repnz
nop
nop
jae
add
hlt
les
add
push
clc
repnz
nop
nop
jae
out
stos
dec
cld
push
rolb
mov
jne
clc
repnz
nop
nop
jae
ds
jns
add
pop
ja
jge
clc
repnz
nop
nop
jae
add
arpl
enter
add
add
clc
repnz
nop
nop
jae
addl
add
push
mov
clc
repnz
nop
nop
jae
cmp
add
test
pusha
push
mov
xchg
ret
add
push
enter
sub
push
mov
xchg
ret
cmc
add
testb
dec
inc
arpl
out
push
push
mov
xchg
ret
add
movsb
pop
add
add
add
add
repnz
nop
nop
jae
mov
out
xchg
add
mov
push
mov
xchg
ret
xchg
mov
rolb
add
add
nop
push
mov
leave
nop
jmp
mov
add
rorb
pop
clc
repnz
nop
nop
jae
adc
add
xchg
xchg
dec
add
test
mov
mov
nop
push
mov
leave
nop
jmp
mov
mov
add
add
clc
repnz
nop
nop
jae
fs
les
loopne
add
add
add
mov
jmp
add
jp
sbb
add
add
add
add
nop
push
mov
leave
nop
jmp
add
add
in
ds
add
nop
push
mov
leave
nop
jmp
add
add
je
mov
clc
repnz
nop
nop
jae
add
pop
mov
add
dec
add
add
sbb
push
mov
xchg
ret
rolb
stos
xchg
out
add
test
dec
mov
pushf
add
add
adc
les
test
add
push
daa
movzwl
clc
repnz
nop
nop
jae
in
shl
add
add
push
mov
leave
nop
jmp
sti
testb
test
out
mov
sar
repnz
nop
nop
jae
add
add
enter
mov
clc
repnz
nop
nop
jae
pop
test
add
xchg
inc
add
add
jbe
mov
add
shl
push
mov
xchg
ret
add
add
andl
xchg
lea
clc
repnz
nop
nop
jae
add
add
add
sub
shlb
cmp
repnz
nop
nop
jae
add
pop
add
pop
ret
nop
push
mov
leave
nop
jmp
add
orl
add
call
jb
ret
push
mov
xchg
ret
add
idivb
add
cld
add
test
nop
push
mov
leave
nop
jmp
add
add
add
add
add
cld
scas
push
clc
repnz
nop
nop
jae
inc
pop
sti
add
add
movsb
lret
add
or
inc
add
push
mov
cld
add
add
add
repnz
nop
nop
jae
movsb
sti
push
pop
add
clc
repnz
nop
nop
jae
inc
add
dec
xchg
enter
add
and
push
mov
leave
nop
jmp
dec
arpl
add
add
add
repnz
nop
nop
jae
add
stos
add
adc
sbbl
and
movsb
add
movsb
xchg
enter
in
pop
in
fs
outsl
arpl
repnz
nop
nop
jae
movsb
add
add
add
enter
jge
xchg
or
add
enter
cltd
add
add
add
add
sub
xchg
cltd
add
mov
leave
nop
jmp
xchg
fildl
fs
add
movsb
pop
arpl
pop
nop
push
mov
leave
nop
jmp
add
sarb
add
repnz
pop
push
mov
xchg
ret
cltd
mov
add
hlt
xchg
add
inc
add
cmpsb
outsb
add
push
mov
leave
nop
jmp
mov
add
add
mov
loopne
mov
xchg
ret
add
add
add
rcl
lret
mov
clc
repnz
nop
nop
jae
add
xchg
in
fld1
clc
repnz
nop
nop
jae
add
test
add
add
add
clc
repnz
nop
nop
jae
shlb
shl
sub
add
repnz
nop
nop
jae
add
add
push
shr
clc
repnz
nop
nop
jae
jbe
add
negb
jmp
es
repnz
nop
nop
jae
pop
add
mov
xchg
arpl
push
push
mov
xchg
ret
add
movsb
cmp
addl
mov
xchg
ret
add
add
repnz
add
pop
aas
pop
nop
push
mov
leave
nop
jmp
add
rcrb
xchg
add
movsb
rclb
pusha
nop
push
mov
leave
nop
jmp
les
inc
mov
cltd
add
ss
add
xchg
sbb
clc
repnz
nop
nop
jae
jbe
mov
cmp
jecxz
push
mov
xchg
ret
add
adc
add
cmc
add
add
loopne
push
clc
repnz
nop
nop
jae
add
adc
add
add
out
out
add
test
push
mov
leave
nop
jmp
dec
sahf
xchg
add
ds
rolb
mov
repnz
dec
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
add
ds
add
add
jne
clc
repnz
nop
nop
jae
add
sti
test
add
jg
push
mov
xchg
ret
mov
add
add
add
add
repnz
nop
nop
jae
add
out
test
add
out
out
clc
clc
repnz
nop
nop
jae
mov
out
add
add
pop
mov
xchg
ret
add
add
add
xchg
pop
add
mov
repnz
nop
nop
jae
add
mov
idivl
clc
repnz
nop
nop
jae
inc
add
add
xchg
mov
stos
nop
push
mov
leave
nop
jmp
add
push
rolb
add
add
inc
add
dec
clc
repnz
nop
nop
jae
adc
add
add
mov
movsb
add
and
jbe
js
or
nop
nop
jae
les
add
dec
mov
xor
clc
repnz
nop
nop
jae
testb
add
movsb
add
add
sahf
stos
mov
push
clc
repnz
nop
nop
jae
add
sti
repnz
pop
add
and
push
mov
pop
inc
add
xchg
rclb
add
add
add
clc
repnz
nop
nop
jae
jns
xchg
mov
das
mov
push
mov
xchg
ret
pop
adc
xchg
push
fildl
movsb
push
cs
clc
repnz
nop
nop
jae
rolb
add
add
add
xchg
add
pop
nop
push
mov
leave
nop
jmp
pop
sahf
add
xchg
test
add
jge
clc
repnz
nop
nop
jae
cltd
add
mov
add
sarb
repnz
nop
nop
jae
cltd
xchg
movsb
jns
mov
add
adc
mov
nop
push
mov
leave
nop
jmp
mov
les
add
std
clc
repnz
nop
nop
jae
out
in
movsb
sahf
mov
push
sbb
push
mov
xchg
ret
rclb
ds
add
push
cmp
nop
push
mov
leave
nop
jmp
adc
pop
push
loop
nop
push
mov
leave
nop
jmp
add
inc
add
movsb
fs
call
clc
repnz
nop
nop
jae
add
jns
add
add
add
push
push
mov
xchg
ret
push
add
add
add
add
add
les
push
mov
leave
nop
jmp
sub
add
hlt
movsb
add
push
clc
repnz
nop
nop
jae
mov
adc
stos
add
add
push
xchg
push
mov
xchg
ret
adc
add
cld
add
icebp
rep
push
mov
xchg
ret
add
add
push
push
mov
xchg
ret
push
add
mov
push
repnz
nop
nop
jae
add
hlt
mov
mov
xchg
dec
add
xchg
push
clc
repnz
nop
nop
jae
add
hlt
mov
add
jle
clc
repnz
nop
nop
jae
jns
add
add
mov
arpl
sar
repnz
nop
nop
jae
add
mov
add
jbe
ja
clc
repnz
nop
nop
jae
push
cmp
add
mov
nop
push
mov
leave
nop
jmp
add
sub
rolb
test
pop
arpl
clc
clc
repnz
nop
nop
jae
rolb
cltd
cmp
mov
movb
mov
leave
nop
jmp
add
mov
hlt
add
mov
mov
js
add
jns
add
pop
add
mov
ret
clc
repnz
nop
nop
jae
in
mov
add
add
add
dec
xchg
mov
clc
repnz
nop
nop
jae
add
movsb
adc
loop
add
arpl
clc
repnz
nop
nop
jae
testb
sbb
decl
clc
repnz
nop
nop
jae
mov
add
cmp
addr16
clc
repnz
nop
nop
jae
cld
incb
out
add
mov
adc
repnz
nop
nop
jae
add
add
add
xchg
push
jmp
test
add
push
push
add
adc
or
aas
push
mov
add
add
add
cmp
jg
add
fildl
test
nop
aaa
add
clc
repnz
nop
nop
jae
xchg
pop
enter
testb
mov
nop
push
mov
leave
nop
jmp
pop
add
add
out
sahf
add
add
clc
repnz
nop
nop
jae
add
add
jns
add
add
add
mov
fistpl
push
mov
xchg
ret
inc
pop
add
enter
mov
add
mov
push
mov
xchg
ret
add
inc
add
movsb
add
add
add
adc
div
clc
repnz
nop
nop
jae
movsb
add
add
enter
mov
xchg
ret
fildl
push
xchg
mov
add
sub
push
mov
leave
nop
jmp
add
mov
cld
add
arpl
clc
repnz
nop
nop
jae
add
loopne
enter
add
push
push
add
leave
imul
cmp
ret
add
push
add
cltd
xchg
add
add
imul
clc
repnz
nop
nop
jae
add
pop
add
and
clc
repnz
nop
nop
jae
add
inc
mov
cmp
imul
xchg
inc
add
out
add
add
add
repnz
nop
nop
jae
jns
add
add
ss
xchg
dec
add
call
clc
repnz
nop
nop
jae
mov
stos
add
add
mov
enter
nop
nop
jae
movsb
add
add
add
sub
add
push
clc
repnz
nop
nop
jae
incb
in
rcll
cld
nop
nop
jae
enter
pop
enter
add
add
clc
repnz
nop
nop
jae
add
add
enter
push
mov
xchg
ret
cmp
pop
add
hlt
out
add
clc
repnz
nop
nop
jae
add
repnz
mov
fld1
clc
repnz
nop
nop
jae
add
xchg
mov
out
sahf
pop
inc
or
clc
repnz
nop
nop
jae
push
arpl
mov
fistl
nop
push
mov
leave
nop
jmp
add
loopne
add
add
pusha
clc
repnz
nop
nop
jae
xchg
mov
add
test
mov
sti
clc
repnz
nop
nop
jae
dec
xchg
pop
add
add
add
inc
jbe
push
clc
repnz
nop
nop
jae
add
arpl
add
mov
out
inc
fsubs
push
mov
aam
add
add
je
jle
inc
xchg
loopne
and
add
add
push
push
mov
xchg
ret
add
add
mov
add
add
test
add
jne
clc
repnz
nop
nop
jae
stos
mov
add
testb
or
push
adc
add
clc
repnz
nop
nop
jae
add
enter
adc
rolb
mov
push
clc
repnz
nop
nop
jae
add
mov
pop
pop
mov
repnz
nop
nop
jae
out
movsb
mov
add
add
clc
repnz
nop
nop
jae
add
add
movsb
pop
add
add
xchg
mov
test
sbb
add
repnz
nop
nop
jae
repnz
outsb
add
xor
push
mov
xchg
ret
add
addl
mov
fildl
inc
add
das
mov
push
mov
xchg
ret
les
fs
cmc
add
nop
nop
jae
incb
add
mov
dec
pop
mov
add
clc
repnz
nop
nop
jae
mov
add
cltd
cltd
repnz
add
cltd
sub
nop
jae
add
mov
add
add
in
inc
and
clc
repnz
nop
nop
jae
add
jns
add
and
xchg
call
clc
repnz
nop
nop
jae
cmc
repnz
add
les
sti
nop
push
mov
leave
nop
jmp
add
imul
add
add
inc
adc
mov
leave
nop
jmp
enter
add
add
rorl
nop
jae
add
mov
add
add
add
add
or
mov
xchg
ret
cmc
add
not
add
xchg
add
pop
clc
repnz
nop
nop
jae
xchg
xchg
add
mov
add
add
sti
add
outsl
idiv
call
nop
jmp
mov
cld
imulb
xchg
test
nop
push
mov
leave
nop
jmp
add
add
add
add
inc
gs
clc
repnz
nop
nop
jae
add
cmp
in
push
mov
xchg
ret
repnz
push
add
sub
and
mov
repnz
nop
nop
jae
dec
add
dec
jns
mov
movsb
shrl
gs
repnz
nop
nop
jae
cld
add
jns
add
icebp
jmp
movsb
inc
add
push
movsb
add
mov
add
loopne
mov
push
mov
xchg
ret
xchg
mov
cmp
lcall
push
mov
leave
nop
jmp
cmp
add
adc
add
cld
nop
nop
jae
add
push
jbe
stos
movsb
jbe
add
les
push
mov
xchg
ret
rolb
add
add
cmp
les
or
add
clc
repnz
nop
nop
jae
mov
xchg
mov
add
add
cld
nop
nop
jae
inc
add
add
add
add
add
dec
repnz
clc
repnz
nop
nop
jae
mov
add
add
addb
inc
and
repnz
nop
nop
jae
xchg
movsb
jns
inc
clc
repnz
nop
nop
jae
add
add
add
jns
add
add
add
pop
call
clc
repnz
nop
nop
jae
add
movsb
add
add
clc
repnz
nop
nop
jae
jns
add
arpl
cmp
mov
leave
nop
jmp
add
xchg
out
add
dec
mov
add
xchg
cltd
sbb
nop
push
mov
leave
nop
jmp
add
mov
pop
frstor
repnz
nop
nop
jae
push
add
pop
dec
add
add
testb
mov
pop
mov
stos
clc
repnz
nop
nop
jae
enter
test
add
push
add
call
mov
leave
nop
jmp
cmc
mov
add
rcll
test
xchg
ret
test
add
hlt
add
xchg
shl
add
and
cld
nop
nop
jae
add
sub
push
mov
call
inc
add
add
out
add
pop
dec
pop
add
and
add
repnz
nop
nop
jae
add
cmc
bound
xor
lds
cld
nop
nop
jae
testb
test
sbb
clc
repnz
nop
nop
jae
add
add
mov
cmc
movsb
js
sub
push
mov
xchg
ret
add
addl
mov
clc
repnz
nop
nop
jae
stos
movsb
mov
shl
sbb
add
clc
repnz
nop
nop
jae
cltd
sarb
jbe
movsb
aas
fistpl
nop
push
mov
leave
nop
jmp
in
repnz
add
ret
push
clc
repnz
nop
nop
jae
movsb
add
add
add
add
movsb
ds
call
clc
repnz
nop
nop
jae
add
testb
in
push
push
clc
repnz
nop
nop
jae
sub
add
add
add
add
arpl
repnz
nop
nop
jae
jbe
addl
add
mov
push
mov
xchg
ret
dec
add
mov
add
ds
cmpsb
mov
push
mov
xchg
ret
mov
add
adc
add
in
addl
and
repnz
nop
nop
jae
push
mov
add
arpl
clc
repnz
nop
nop
jae
enter
add
add
add
mov
repnz
nop
nop
jae
add
xchg
add
mov
add
test
mov
clc
repnz
nop
nop
jae
add
out
add
sahf
add
inc
push
mov
xchg
ret
xchg
add
jns
xchg
mov
adc
add
mov
popa
insb
gs
repnz
nop
nop
jae
add
sahf
add
xor
nop
pop
sub
repnz
nop
nop
jae
add
xchg
rolb
test
repnz
nop
nop
jae
idiv
stos
xchg
xchg
fcomi
test
jne
clc
repnz
nop
nop
jae
out
mov
add
out
sbb
gs
inc
add
push
andl
jecxz
aas
clc
repnz
nop
nop
jae
mov
cmp
cld
cld
push
pop
je
lods
outsb
add
scas
xchg
inc
add
add
mov
add
add
sti
sub
cld
nop
nop
jae
hlt
add
testb
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
add
test
clc
repnz
nop
nop
jae
mov
mov
hlt
jns
xchg
sti
ret
clc
repnz
nop
nop
jae
add
jns
add
movsb
in
adc
rorl
nop
jae
add
add
enter
subl
push
mov
xchg
ret
add
mov
add
add
clc
repnz
nop
nop
jae
add
rolb
cmc
add
les
add
add
clc
repnz
nop
nop
jae
enter
add
movsb
imul
cld
nop
nop
jae
xchg
mul
add
add
hlt
cmp
clc
repnz
nop
nop
jae
testb
loopne
jns
cmp
ja
clc
repnz
nop
nop
jae
add
jp
pop
push
mov
xchg
ret
arpl
mov
xchg
push
xchg
lcall
inc
add
add
test
push
aam
pusha
clc
repnz
nop
nop
jae
adc
dec
add
enter
add
repnz
nop
nop
jae
push
mov
hlt
dec
add
movsb
pop
mov
add
inc
xchg
clc
repnz
nop
nop
jae
add
add
add
jbe,pt
ret
push
lock
cld
nop
nop
jae
add
repnz
rcl
add
sarb
push
mov
xchg
ret
add
jns
cltd
add
popf
push
clc
repnz
nop
nop
jae
xchg
testb
shl
testb
ja
test
add
clc
repnz
nop
nop
jae
testb
add
add
je
clc
repnz
nop
nop
jae
test
add
cmc
fwait
clc
repnz
nop
nop
jae
rolb
movsb
hlt
add
pop
add
add
pop
pusha
clc
repnz
nop
nop
jae
cmc
add
add
mov
rcrl
repnz
nop
nop
jae
add
add
add
add
maskmovq
testl
nop
push
mov
leave
nop
jmp
add
add
cld
add
mov
clc
repnz
nop
nop
jae
add
dec
add
dec
add
add
add
push
mov
xchg
ret
add
rolb
add
add
add
inc
adc
repnz
nop
nop
jae
add
pop
add
add
fwait
clc
repnz
nop
nop
jae
add
mov
inc
mov
push
clc
repnz
nop
nop
jae
add
shlb
sbb
clc
repnz
nop
nop
jae
sti
add
add
add
add
sub
or
add
add
les
add
add
shlb
pop
enter
fs
push
clc
repnz
nop
nop
jae
pop
add
add
movsb
out
add
push
add
cld
nop
nop
jae
testb
xchg
bnd
cmp
mov
ret
push
mov
leave
nop
jmp
add
add
enter
jnp
roll
repnz
nop
nop
jae
loopne
mov
add
add
add
cmp
nop
nop
jae
movsb
add
add
add
movsb
loope
push
mov
xchg
ret
add
add
add
in
mov
clc
repnz
nop
nop
jae
add
testb
add
clc
repnz
nop
nop
jae
add
add
repnz
fwait
push
mov
xchg
ret
xchg
jns
dec
add
mov
add
repnz
fs
dec
clc
repnz
nop
nop
jae
add
add
add
add
outsl
jne
clc
repnz
nop
nop
jae
mov
pop
mov
sbb
nop
push
mov
leave
nop
jmp
add
testb
add
add
clc
repnz
nop
nop
jae
add
sub
divb
adc
test
clc
repnz
nop
nop
jae
add
mov
out
mov
mov
xchg
ret
adc
sti
mov
add
mov
movsb
sub
clc
repnz
nop
nop
jae
mov
testb
ds
loopne
add
rep
clc
repnz
nop
nop
jae
xchg
add
add
add
call
clc
repnz
nop
nop
jae
add
add
dec
add
repnz
nop
nop
jae
mov
add
test
mov
mov
xchg
ret
add
pop
xchg
hlt
testb
add
stc
push
nop
push
mov
leave
nop
jmp
jns
add
mov
mov
xchg
ret
add
add
pop
mov
mov
clc
repnz
nop
nop
jae
cmc
add
add
add
add
movsb
ret
mov
add
add
jnp
xchg
add
cmp
pop
cmpsl
add
add
push
add
and
sbb
push
mov
xchg
ret
sub
cltd
pop
add
mov
nop
push
mov
leave
nop
jmp
mov
test
add
add
movsb
xchg
inc
add
push
add
mov
sti
sbb
clc
repnz
nop
nop
jae
add
enter
sub
call
mov
xchg
ret
add
add
pop
add
add
add
add
inc
pop
push
mov
xchg
ret
xchg
add
add
testb
add
add
clc
repnz
nop
nop
jae
hlt
add
testb
add
sub
push
pop
nop
push
mov
leave
nop
jmp
pop
mov
xchg
add
dec
test
add
inc
add
sahf
add
sti
movsb
pop
rolb
add
add
push
mov
leave
nop
jmp
rolb
ds
movsb
add
adc
mov
mov
xchg
ret
add
movsb
add
add
add
decb
clc
repnz
nop
nop
jae
sbbl
xchg
add
les
dec
ljmp
leave
nop
jmp
sub
add
mov
popl
repz
repnz
nop
nop
jae
pop
mov
add
stos
add
add
pop
push
mov
xchg
ret
cld
add
add
jns
fisttpl
pushl
nop
push
mov
leave
nop
jmp
xchg
add
inc
add
push
clc
repnz
nop
nop
jae
sahf
add
add
pop
pop
andl
adc
nop
jae
mov
add
pop
dec
nop
push
mov
leave
nop
jmp
add
enter
sarb
push
push
mov
xchg
ret
add
shlb
testb
stos
jae
jg
clc
repnz
nop
nop
jae
movsb
in
add
adc
ds
repnz
nop
nop
jae
stos
add
add
add
dec
outsl
arpl
repnz
nop
nop
jae
sahf
add
add
orl
add
add
repnz
nop
nop
jae
mov
cld
stos
add
mov
clc
repnz
nop
nop
jae
fildl
pop
push
adc
pop
add
push
mov
xchg
ret
mov
movsb
add
mov
add
and
clc
repnz
nop
nop
jae
hlt
add
add
mov
mov
add
push
mov
leave
nop
jmp
jns
add
add
mov
xchg
add
push
mov
xchg
ret
rolb
add
rcrb
add
add
add
repnz
nop
nop
jae
push
sahf
enter
add
mov
xchg
ret
add
add
stos
pop
or
pop
fld1
clc
repnz
nop
nop
jae
stos
rcr
enter
mov
enter
jg
clc
repnz
nop
nop
jae
add
add
inc
add
adc
subl
xchg
ret
add
repnz
push
clc
repnz
nop
nop
jae
cmc
add
test
add
pushl
nop
push
mov
leave
nop
jmp
ds
in
arpl
add
in
push
sub
adc
add
add
test
dec
pop
sub
gs
clc
repnz
nop
nop
jae
add
add
add
mov
mov
stos
clc
repnz
nop
nop
jae
add
hlt
mov
test
daa
add
push
mov
xchg
ret
add
xchg
xchg
add
xor
test
cld
nop
nop
jae
add
mov
rolb
add
out
incl
cmc
pop
andl
cmc
les
in
xchg
fwait
push
push
mov
xchg
ret
add
add
add
add
jb
mov
stc
mov
clc
repnz
nop
nop
jae
add
add
xchg
add
mov
clc
repnz
nop
nop
jae
sahf
addl
adcl
cld
nop
nop
jae
adc
inc
add
add
stos
add
push
mov
xchg
ret
add
add
add
repnz
nop
nop
jae
mov
mov
push
in
enter
push
mov
insb
pushl
add
add
les
add
add
add
cmpsl
pop
xlat
add
push
mov
xchg
ret
add
add
add
nop
push
mov
leave
nop
jmp
add
notb
inc
clc
repnz
nop
nop
jae
add
mov
rorb
add
jnp
cmp
nop
push
mov
leave
nop
jmp
add
repnz
xchg
inc
sbb
add
clc
repnz
nop
nop
jae
push
movsb
add
add
arpl
fs
mov
push
push
mov
xchg
ret
cld
adc
dec
negb
add
add
add
pop
pop
nop
push
mov
leave
nop
jmp
in
add
stos
adc
push
sbb
push
add
add
add
pop
add
test
cltd
add
clc
repnz
nop
nop
jae
adc
add
jns
xor
pop
jl
add
clc
repnz
nop
nop
jae
dec
jbe
sti
ds
push
add
add
jnp
inc
add
add
rolb
adc
mov
xor
push
mov
xchg
ret
add
adc
arpl
add
add
clc
repnz
nop
nop
jae
pop
out
add
add
clc
repnz
nop
nop
jae
out
fcomi
movsb
stos
add
out
pop
rcll
mov
xchg
ret
pop
movsb
mov
add
stos
movsb
mov
jge
push
mov
xchg
ret
in
xchg
mov
orl
nop
jae
stos
pop
stos
jns
rolb
hlt
pop
adc
out
andb
repnz
nop
nop
jae
add
add
add
dec
add
out
lock
jae
repnz
nop
nop
jae
add
test
add
jb
clc
repnz
nop
nop
jae
add
add
add
scas
call
nop
push
mov
leave
nop
jmp
or
add
int3
mov
and
repnz
nop
nop
jae
mov
addl
add
clc
repnz
nop
nop
jae
mov
add
mov
add
sbb
add
add
mov
clc
repnz
nop
nop
jae
arpl
add
jns
test
fdivr
clc
repnz
nop
nop
jae
adc
movsb
test
inc
call
clc
repnz
nop
nop
jae
rolb
add
add
add
xchg
add
push
mov
xchg
ret
add
cld
add
push
clc
repnz
nop
nop
jae
sahf
add
pop
test
cmc
push
clc
repnz
nop
nop
jae
pop
add
add
arpl
pop
add
sub
sbb
cmp
ret
add
add
mov
insl
subl
push
mov
xchg
ret
add
mov
rcl
add
mov
nop
push
mov
leave
nop
jmp
fs
add
pop
add
mov
int
movsb
push
mov
xchg
ret
cmp
add
add
nop
fsub
pop
push
mov
xchg
ret
xchg
mov
mov
arpl
add
cmp
mov
leave
nop
jmp
xchg
add
pop
add
movzwl
clc
repnz
nop
nop
jae
add
add
mov
movsb
adc
push
mov
xchg
ret
add
add
in
add
mov
mov
nop
push
mov
leave
nop
jmp
add
mov
dec
add
pop
push
or
jge
push
mov
xchg
ret
mov
jbe
add
mov
out
cld
mov
add
clc
repnz
nop
nop
jae
add
sti
add
xchg
fistpl
call
inc
add
movsb
add
add
add
cld
cmp
andb
in
leave
nop
jmp
test
mov
mov
jbe,pt
mov
push
mov
xchg
ret
movsb
out
add
xchg
hlt
rclb
push
nop
push
mov
leave
nop
jmp
pop
add
add
add
add
pop
fistpl
push
mov
xchg
ret
rcl
incb
in
testb
mov
pusha
add
push
clc
repnz
nop
nop
jae
add
add
incb
add
mov
clc
repnz
nop
nop
jae
jbe
jns
fcmovnu
hlt
add
loopne
dec
pop
push
mov
xchg
ret
pop
add
adc
out
add
add
clc
repnz
nop
nop
jae
rcrb
add
pop
add
mov
mov
repnz
nop
nop
jae
rorb
add
les
mov
clc
repnz
nop
nop
jae
notb
les
dec
add
ja
add
jns
add
ds
mov
pop
inc
add
in
add
add
mov
stos
arpl
add
repnz
nop
nop
jae
add
arpl
dec
stos
arpl
push
mov
push
mov
xchg
ret
add
add
cmc
push
movsb
fidivrl
push
clc
repnz
nop
nop
jae
incb
add
add
add
mov
pop
clc
repnz
nop
nop
jae
incb
rolb
xchg
add
movsb
mov
pop
jns
inc
call
nop
jae
dec
add
dec
test
orl
leave
nop
jmp
xchg
enter
dec
adc
mulb
mov
jmp
jp
nop
push
mov
leave
nop
jmp
add
dec
xchg
add
xor
mov
xchg
ret
add
xchg
cltd
add
notb
clc
repnz
nop
nop
jae
testb
movsb
cltd
dec
add
add
fnstenv
clc
repnz
nop
nop
jae
add
add
add
arpl
pushl
clc
repnz
nop
nop
jae
mov
add
movsb
in
add
movb
repnz
nop
nop
jae
mov
mov
adc
sub
in
jmp
add
shl
les
loopne
add
add
add
pop
clc
repnz
nop
nop
jae
add
adc
add
add
clc
repnz
nop
nop
jae
add
add
test
cmp
in
leave
nop
jmp
add
adc
add
nop
push
mov
leave
nop
jmp
add
and
dec
add
in
dec
add
pop
add
clc
repnz
nop
nop
jae
add
add
add
pop
add
pop
xor
push
clc
repnz
nop
nop
jae
enter
adcl
addl
negb
fisttpl
add
push
hlt
cld
ds
mov
clc
repnz
nop
nop
jae
add
test
add
add
add
push
mov
leave
nop
jmp
add
xchg
movsb
add
add
enter
or
call
mov
testb
xchg
pop
testb
cmp
or
arpl
jmp
add
hlt
sahf
movsb
add
cld
add
adc
clc
repnz
nop
nop
jae
mulb
add
add
ljmp
add
pop
add
add
test
pop
je
clc
repnz
nop
nop
jae
add
adc
add
mov
leave
nop
jmp
orl
shlb
nop
nop
jae
add
movsb
add
add
xor
add
jmp
pop
add
mov
add
sub
add
sahf
arpl
mov
clc
repnz
nop
nop
jae
add
test
inc
clc
repnz
nop
nop
jae
dec
add
add
mov
sbbl
xchg
incl
rolb
add
mov
les
jbe
push
inc
add
add
clc
repnz
nop
nop
jae
out
add
inc
sar
out
add
push
mov
xchg
ret
add
fildl
add
add
mov
inc
xor
push
mov
xchg
ret
add
mov
add
dec
inc
shr
clc
repnz
nop
nop
jae
mov
add
sub
push
jns
add
add
push
in
clc
repnz
nop
nop
jae
sub
rolb
add
fld1
push
mov
xchg
ret
fs
dec
mov
jbe
test
push
mov
leave
nop
jmp
add
pop
xchg
mov
add
adc
repnz
nop
nop
jae
xchg
pop
push
dec
push
outsb
add
mov
push
mov
xchg
ret
stos
add
add
add
xchg
add
add
insl
xchg
xchg
ret
cmc
rclb
add
add
repnz
add
mov
push
mov
xchg
ret
add
les
adc
test
push
mov
push
mov
xchg
ret
inc
sti
pop
add
add
jbe
add
mov
repnz
nop
nop
jae
add
add
add
add
pop
clc
repnz
nop
nop
jae
enter
add
add
add
repnz
nop
nop
jae
testb
add
movsb
les
add
fistpll
nop
push
mov
leave
nop
jmp
movsb
add
cltd
enter
xchg
add
push
pop
clc
repnz
nop
nop
jae
incb
movsb
add
add
enter
mov
xchg
ret
enter
jns
push
inc
out
fnsetpm(287
enter
les
add
nop
nop
jae
test
loopne
add
enter
mov
mov
xchg
ret
add
jns
in
add
add
nop
push
mov
leave
nop
jmp
push
cld
mov
xchg
add
mov
push
mov
xchg
ret
incb
mov
arpl
enter
adc
clc
repnz
nop
nop
jae
stos
mov
mov
clc
repnz
nop
nop
jae
sbbl
cld
add
pop
lcall
inc
add
mov
fs
add
test
push
add
je
clc
repnz
nop
nop
jae
add
mov
push
push
push
shr
clc
repnz
nop
nop
jae
add
add
add
jge
inc
or
repnz
nop
nop
jae
movsb
dec
test
push
add
incb
dec
push
push
mov
xchg
ret
add
out
add
add
sub
test
or
repnz
nop
nop
jae
loopne
add
mov
push
add
sbb
mov
clc
repnz
nop
nop
jae
add
add
push
add
mov
clc
repnz
nop
nop
jae
dec
add
hlt
inc
add
shr
clc
repnz
nop
nop
jae
mov
add
movsb
add
aad
fistl
nop
jmp
add
pop
enter
jns
inc
add
mov
movb
clc
repnz
nop
nop
jae
add
push
out
repnz
ds
daa
add
push
mov
xchg
ret
add
add
repnz
mov
mov
testb
mov
xchg
ret
xchg
add
add
mov
rolb
add
nop
jae
jns
add
add
dec
sub
xor
add
add
mov
arpl
mov
nop
push
mov
leave
nop
jmp
enter
mov
sti
sub
push
add
ds
nop
nop
jae
jns
mov
movsb
push
add
test
clc
repnz
nop
nop
jae
repnz
add
repnz
clc
repnz
nop
nop
jae
push
cltd
add
cmc
cltd
pop
fstl
mov
xchg
ret
add
arpl
jbe
add
add
clc
repnz
nop
nop
jae
xchg
add
out
rep
push
mov
xchg
ret
add
add
dec
xchg
pop
js
add
clc
repnz
nop
nop
jae
add
add
add
pop
mov
adc
push
mov
leave
nop
jmp
stos
add
inc
arpl
add
jns
enter
pop
push
clc
repnz
nop
nop
jae
push
jns
subl
mov
cmp
repnz
nop
nop
jae
add
in
addl
push
sbb
test
nop
push
mov
leave
nop
jmp
test
add
add
add
repnz
jae
add
add
add
movsb
xchg
shl
dec
cmp
mov
leave
nop
jmp
xchg
les
mul
add
les
pop
movsb
add
enter
repnz
nop
nop
jae
out
xchg
pop
movsb
mov
clc
repnz
nop
nop
jae
dec
add
add
xchg
adc
add
add
adc
push
mov
leave
nop
jmp
movsb
cld
add
adc
add
je
add
clc
repnz
nop
nop
jae
push
add
add
lods
lods
push
mov
xchg
ret
add
add
adc
mov
stos
inc
add
push
sbb
outsl
nop
push
mov
leave
nop
jmp
xchg
xchg
add
add
add
lcall
repnz
nop
nop
jae
pop
adc
add
add
jno
mov
xchg
ret
add
hlt
add
mov
xchg
clc
repnz
nop
nop
jae
mov
pop
notb
mov
mov
repnz
nop
nop
jae
add
add
xchg
add
clc
repnz
nop
nop
jae
add
add
add
mov
enter
push
push
mov
xchg
ret
add
ds
add
inc
cmp
mov
xchg
ret
dec
mov
add
mov
add
repnz
nop
nop
jae
add
push
add
sbbl
push
or
push
mov
leave
nop
jmp
add
add
cmc
mov
jne
nop
push
mov
leave
nop
jmp
test
push
add
mov
sbb
rclb
jmp
mov
out
pop
rolb
add
add
add
pop
push
clc
repnz
nop
nop
jae
cld
pop
add
clc
repnz
nop
nop
jae
add
testb
pop
add
cltd
cmp
xor
clc
repnz
nop
nop
jae
in
pop
mov
add
add
nop
push
mov
leave
nop
jmp
les
testb
add
rolb
mov
mov
xchg
ret
add
test
jns
cmp
and
mov
xchg
ret
xchg
jbe
add
xchg
add
pop
incb
bound
and
in
leave
nop
jmp
test
incb
add
test
push
mov
xchg
ret
add
xchg
fildl
movsb
add
add
clc
repnz
nop
nop
jae
hlt
add
rolb
out
pop
loopne
sub
outsb
add
add
add
mov
xchg
aad
clc
repnz
nop
nop
jae
add
adc
add
add
push
mov
xchg
ret
add
loopne
jbe
jns
add
loopne
dec
nop
push
mov
leave
nop
jmp
pop
rolb
movsb
adc
add
loopne
add
pop
inc
and
repnz
nop
nop
jae
adcl
enter
das
pop
clc
repnz
nop
nop
jae
out
pop
xchg
add
add
sti
loopne
add
rclb
cld
nop
nop
jae
movsb
mov
add
xor
clc
repnz
nop
nop
jae
add
add
add
nop
dec
jne
clc
repnz
nop
nop
jae
add
rolb
add
in
mov
enter
add
add
leave
out
add
add
add
mov
mov
leave
nop
jmp
hlt
add
adc
pop
cmc
mov
outsl
add
nop
push
mov
leave
nop
jmp
fildl
add
jns
pop
js
call
push
mov
xchg
ret
push
jns
add
mov
add
jo
mov
xchg
ret
movsb
rcl
mov
add
add
add
adc
mov
xchg
ret
add
add
pop
rcl
stos
imul
repnz
nop
nop
jae
cltd
add
fs
push
push
mov
xchg
ret
mov
movsb
arpl
pop
enter
mov
in
leave
nop
jmp
add
test
rolb
add
add
repnz
nop
nop
jae
add
stos
ds
add
psubb
cld
nop
nop
jae
inc
mov
out
add
cmp
mov
xchg
ret
push
add
add
add
imul
clc
repnz
nop
nop
jae
add
dec
add
or
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
out
add
hlt
add
inc
sar
clc
repnz
nop
nop
jae
add
out
movsb
add
jne
clc
repnz
nop
nop
jae
add
xchg
add
adc
clc
repnz
nop
nop
jae
add
mov
mov
xchg
add
mov
push
push
mov
xchg
ret
rolb
pop
enter
enter
negb
pop
push
mov
xchg
ret
dec
add
pop
out
fistpl
arpl
sbb
nop
nop
jae
add
add
pop
test
loopne
loopne
dec
movsb
shll
repnz
nop
nop
jae
add
add
cltd
push
cmp
jne
clc
repnz
nop
nop
jae
and
loopne
mov
jg
clc
repnz
nop
nop
jae
add
adc
pop
add
sahf
std
add
clc
repnz
nop
nop
jae
add
add
notb
push
clc
repnz
nop
nop
jae
add
add
mov
mov
sahf
dec
adc
xor
loop
add
push
mov
xchg
ret
xchg
andl
add
cld
nop
nop
jae
inc
mov
out
sti
enter
add
clc
repnz
nop
nop
jae
mov
inc
cmc
add
mov
repnz
nop
nop
jae
adc
add
stos
add
arpl
repnz
nop
nop
jae
sti
add
movsb
pop
add
sahf
add
add
cmp
push
inc
add
clc
repnz
nop
nop
jae
testb
add
dec
pusha
add
add
mov
xchg
ret
add
add
mov
out
push
nop
push
mov
leave
nop
jmp
pop
cld
add
add
add
cmp
call
nop
nop
jae
add
out
add
clc
repnz
nop
nop
jae
pop
rolb
cmc
rolb
arpl
and
clc
repnz
nop
nop
jae
sahf
cltd
enter
dec
add
repnz
nop
nop
jae
cld
pop
in
add
add
sbb
push
test
xchg
ret
sub
cmp
repnz
icebp
add
clc
repnz
nop
nop
jae
add
pop
add
add
cld
in
mov
clc
repnz
nop
nop
jae
add
adc
add
mov
clc
repnz
nop
nop
jae
sub
dec
cld
clc
repnz
nop
nop
jae
add
add
add
add
add
push
mov
xchg
ret
add
testb
out
fildl
add
jmp
pop
clc
repnz
nop
nop
jae
repnz
mov
add
adc
lods
add
clc
repnz
nop
nop
jae
add
movsb
mov
add
xor
repnz
nop
nop
jae
add
pop
arpl
add
mov
xchg
add
cmp
push
mov
leave
nop
jmp
dec
pop
add
mov
add
mov
sub
mov
add
add
mov
test
mov
jbe
das
add
push
mov
xchg
ret
mov
mov
jns
sub
arpl
sbbl
nop
push
mov
leave
nop
jmp
add
xchg
add
add
sarb
add
repnz
nop
nop
jae
add
les
lds
nop
push
mov
leave
nop
jmp
cld
add
add
nop
nop
jae
add
push
add
dec
mov
add
sbb
repnz
nop
nop
jae
dec
xchg
enter
mov
pop
orl
nop
nop
jae
cmp
repnz
stos
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
fsubs
js
mov
xchg
ret
mov
push
mov
pop
testl
andl
mov
test
add
adc
clc
repnz
nop
nop
jae
cmc
push
movsb
maxps
nop
jmp
rolb
mov
shlb
movsb
pushf
pushf
jmp
nop
nop
jae
add
pop
add
add
out
xchg
add
in
add
clc
repnz
nop
nop
jae
add
add
cld
add
mov
mov
clc
repnz
nop
nop
jae
addl
stos
ja
icebp
nop
push
mov
leave
nop
jmp
mov
xchg
addl
push
mov
add
cmc
add
fimull
adc
add
add
inc
inc
lcall
cmp
gs
and
mov
icebp
jle
push
mov
add
shr
adc
mov
les
leave
repz
add
jg
dec
xor
pop
or
add
jnp
or
add
pushf
cmpsl
or
lcall
cmp
mov
add
andl
arpl
mov
pop
inc
add
push
or
addr16
and
push
jecxz
loope
fldl
cmp
add
push
cmc
push
xchg
sub
inc
xchg
jnp
loopne
js
outsb
add
inc
add
xlat
out
inc
add
call
test
mov
imul
mov
mov
pop
faddl
add
in
add
arpl
pop
sbb
adc
jl
cmp
shlb
mov
or
jg
test
add
adc
mov
add
in
pop
inc
or
jae
dec
add
mov
popa
das
pop
xlat
addr16
sbb
jmp
in
rorl
repz
jb
add
mov
jnp
mov
out
sbb
and
sub
imul
enter
adc
outsl
nop
lock
jge
xchg
cmp
mov
fldt
dec
add
test
and
jnp
mov
arpl
mov
vcvtdq2ps
add
mov
add
int3
ds
or
in
in
lds
xor
and
jns
dec
add
dec
lcall
scas
scas
sub
inc
lea
stc
pop
mov
dec
dec
mov
add
and
sub
xchg
xchg
push
sbb
fwait
xlat
and
ret
cmpsb
cmovnp
sub
sbb
sarl
xchg
pop
sub
imul
dec
add
add
scas
in
mov
jae
adc
add
mov
pop
fimuls
roll
add
cli
and
inc
add
aam
adc
and
mov
stos
fists
cmc
outsb
add
aaa
dec
add
clc
adc
or
insb
add
push
sbb
add
cmpsl
sbbl
inc
add
cmp
push
in
sbb
rclb
add
jge
mov
add
cmp
add
add
mov
add
sbb
dec
add
add
add
pusha
add
xchg
cmp
and
jno
add
pop
lds
pop
iret
fidivs
pop
jl
and
or
push
jp
cmpsb
imul
xchg
xchg
fisubs
mov
and
add
cmpsb
int
scas
sub
iret
add
out
cwtl
xchg
shlb
mov
scas
orb
inc
mov
jge
and
add
push
jge
pushf
lock
jo
add
cwtl
add
xlat
jb
or
dec
add
or
xchg
sbb
fildl
pop
push
enter
jnp
push
inc
add
adc
sub
dec
dec
add
insl
xchg
cmp
xchg
pushf
adc
add
int
mov
testl
dec
add
add
pop
mov
test
xchg
dec
add
jb
pop
inc
nop
jnp
mov
mov
push
mov
mov
addl
mov
shll
into
mov
dec
add
inc
add
inc
add
sahf
sbb
test
outsb
add
jbe
movsb
inc
add
out
add
mov
push
push
sbb
cmpsl
sbb
lret
add
inc
add
scas
imul
push
mov
sub
dec
lods
hlt
std
aam
stc
outsb
add
add
mov
aad
sar
mov
sub
ja
fs
push
jns
add
push
sbb
lcall
mov
cmc
das
adc
sub
rolb
lds
dec
bnd
sub
add
push
add
roll
inc
das
repz
mov
popf
icebp
sub
jp
mov
cltd
xchg
popa
stos
push
pop
mov
pusha
add
inc
add
fcompl
bound
jmp
mov
adc
add
xchg
cmp
add
xorl
inc
add
pop
jecxz
sub
jp
add
shlb
test
xchg
sbbb
add
mov
ret
mov
rcrl
dec
dec
add
xor
lods
xor
ret
outsb
add
push
xchg
aad
or
add
inc
add
xchg
mov
icebp
xchg
pop
subb
rcrl
add
daa
inc
sub
mov
xor
sbb
stc
pusha
add
adc
out
loopne
in
xchg
add
or
rcrl
leave
ret
add
fcompl
add
sarb
add
sbb
ficoms
out
add
mov
cwtl
jmp
push
test
mov
ret
push
inc
add
mov
lods
pusha
add
add
dec
jmp
push
mov
add
idivb
sbb
xchg
out
hlt
test
add
pop
pop
and
scas
jg
mov
pop
lods
lret
xchg
sarl
out
fisttps
push
add
push
sbbb
inc
add
add
lds
add
xor
in
mov
or
add
add
xor
ja
cwtl
inc
add
lret
iret
shlb
mov
push
add
mov
rcrl
mov
jl
pop
sub
mov
add
outsl
ss
sub
push
xor
add
add
xchg
cwtl
fdivs
nop
faddl
xor
or
ret
jno
add
in
std
enter
cld
mov
imul
mov
add
jno
jecxz
movsb
pop
adc
in
sub
vpcomuw
cwtl
add
shll
loopne
add
cwtl
bound
shll
add
mov
bound
sub
mov
inc
add
js
loope
mov
sbb
sbb
subl
sub
push
addr16
jmp
rclb
add
pop
in
sub
lods
mov
imul
movsl
aas
or
pop
imul
sbb
fldt
cmp
shlb
test
sub
test
pop
out
movsl
aas
add
dec
add
mov
cmp
adc
data16
sub
outsl
nop
lods
cli
pop
mov
ret
jb
cmp
or
add
add
add
ja
nop
xor
dec
add
mov
lret
rcr
sbb
jmp
xchg
pop
insl
adc
rorb
add
gs
push
add
cmp
add
aaa
xor
lret
mov
add
inc
insb
add
shll
and
adc
push
mov
push
vcvttsd2si
cwtl
mov
sub
cmp
stos
test
lock
clc
adc
sub
add
int3
fwait
mov
add
add
test
jb
mov
mov
mov
in
in
leave
add
mov
add
sbb
lcall
add
orl
std
inc
inc
jle
dec
add
add
in
jg
test
inc
mov
cmpsl
jo
mov
add
push
fidivrs
test
add
inc
inc
add
pop
pushf
adc
ficoml
sbb
mov
pop
add
inc
mov
int
rcrb
add
sbb
or
cmc
in
jge
add
jp
movsl
cmp
stc
mov
pop
cli
jns
rol
adc
cmp
or
mov
mov
add
cmp
add
jmp
sbb
add
cmp
jp
pop
inc
test
outsb
add
dec
add
dec
add
sub
clc
mov
sub
leave
nop
outsb
add
add
das
dec
sbb
add
add
adc
pop
pop
xor
negl
pop
das
les
adc
lods
xchg
pop
jnp
clc
or
xchg
mov
dec
mov
xchg
jmp
out
xchg
or
add
cli
pushf
cli
iret
imul
bound
inc
mov
add
mov
pop
aas
pop
cmc
cmp
add
add
nop
dec
add
mov
aad
fld
dec
add
test
add
xchg
add
inc
add
ror
sbb
dec
add
insl
jecxz
aas
mov
imul
icebp
and
jecxz
add
and
mov
or
inc
ficompl
mov
out
sarb
sub
push
add
mov
inc
inc
add
xchg
rclb
xor
movsl
add
lock
xor
mov
or
sbb
xchg
mov
int3
fnstcw
sub
push
iret
inc
add
mov
add
aam
lahf
mov
test
add
sbb
cld
add
aaa
bswap
push
sub
ret
fadds
mov
insl
xor
sti
jmp
jp
pop
ret
cmp
movsb
push
daa
sub
cwtl
frstor
pushf
scas
dec
add
sub
pop
mov
cmpl
add
imul
pop
jmp
fwait
out
jmp
add
inc
sbb
pop
stos
mov
repnz
ss
ds
add
dec
in
mov
fdivs
push
scas
add
sub
mov
mov
add
pop
xor
mov
add
push
add
mulb
jge
loop
fnstsw
mov
je
add
cmp
daa
add
mov
ret
push
sbb
sub
xor
roll
add
cmc
mov
cmp
std
jnp
stos
cmp
inc
add
subl
sbb
push
mov
jae
sub
xorl
std
push
fwait
mov
clc
lret
sub
neg
insl
subb
dec
movsl
mov
lock
cmpsb
inc
leave
fwait
xor
push
push
jbe
jmp
push
cmpsb
in
addr16
xlat
jb
cmp
add
mov
ret
mov
js
add
inc
sub
xchg
push
or
test
push
insb
add
add
push
mov
cmc
mov
push
pop
stc
out
push
mov
roll
lea
add
add
jbe
ret
sub
cmpsl
xor
and
sahf
sub
cmc
outsb
add
push
popf
lret
add
lcall
andb
sbbb
daa
push
in
aas
xchg
lods
loop
test
add
add
pop
inc
add
xor
add
mov
popa
outsb
add
jns
scas
fcom
jmp
cmp
scas
add
rcll
adc
iret
mov
dec
nop
movsl
mov
xchg
ds
imulb
js
jp
stos
fdivs
add
mov
xchg
scas
xor
imul
daa
enter
jl
push
jp
icebp
push
mov
sbb
add
or
mov
data16
push
ss
add
mulb
jb
cvttps2pi
arpl
add
add
aaa
pop
ds
pusha
add
addb
xchg
or
or
dec
add
jnp
xorb
sbb
push
add
cwtl
lret
add
dec
sbb
add
cwtl
push
popa
jl
icebp
jne
cmp
cmp
movsb
jno
jno
add
fwait
inc
push
test
mov
sub
out
pop
push
data16
loope
push
inc
add
in
mov
out
adc
push
push
add
add
loopne
cwtl
push
test
lret
xchg
jmp
lods
mov
sub
das
or
shll
rolb
add
push
test
add
or
mov
cmpsl
cmp
test
scas
data16
sub
pop
add
mov
cmp
add
ret
mov
js
ljmp
jne
dec
add
loope
out
add
sub
cmpsb
and
shll
add
or
pop
fstpl
aam
pop
xchg
ja
ds
push
cltd
inc
lods
lods
dec
add
dec
xchg
mov
fwait
pop
and
add
data16
repz
bound
ljmp
add
cmp
imul
and
mov
sbb
sahf
push
int
pop
pop
or
xchg
xchg
or
mov
jle
xor
ljmp
popa
push
cwtl
nop
div
ja
add
sbb
push
rclb
sbb
or
or
lahf
add
dec
lods
dec
add
mov
pop
lock
leave
sub
lret
add
imul
and
xor
add
add
lods
or
inc
pop
leave
pop
and
sub
rcl
stos
ret
andl
sbb
out
add
rcl
mov
sbb
das
loopne
push
add
pop
js
inc
add
fsubl
popa
mov
and
arpl
or
and
add
dec
add
add
push
dec
add
mov
mov
push
mov
rorb
jnp
loopne
lods
mov
lret
sbb
lcall
jae
mov
and
out
gs
add
int
jne
mov
addr16
aaa
inc
cmp
into
ss
js
mov
xchg
js
ss
add
int3
nop
xor
test
mov
xchg
adc
xchg
or
mov
aas
sbb
or
adc
add
mov
movsl
jmp
dec
add
stos
jp
test
add
rcll
add
scas
jno
mov
outsl
push
dec
add
mov
push
cmp
divb
pop
test
out
adc
push
add
jo
pop
mov
mov
fs
stos
jo
inc
add
xlat
xchg
jg
inc
add
sbb
emms
push
fwait
mov
hlt
cmp
fbstp
pop
inc
add
pop
rcll
std
daa
subb
movsb
pop
ret
adc
xchg
aas
mov
jge
out
xor
out
insl
jb
and
add
aaa
bound
add
add
cmp
in
dec
add
adc
dec
mov
add
dec
ja
fsts
js
add
lds
scas
xchg
imul
jbe
mov
arpl
xor
pop
sar
sbb
pop
sbb
mov
add
out
leave
js
adc
sbb
out
xchg
ret
cmp
rclb
pop
add
pushf
ror
inc
add
dec
jmp
mov
adc
add
push
jl
push
pushf
insb
add
imul
add
add
pushf
rcrl
in
add
add
rcr
mov
push
jmp
add
xchg
pop
and
stc
dec
fcmovnb
mov
sub
add
pop
rcll
mov
and
out
xchg
add
jne
enter
sub
fildll
aas
cmp
arpl
mov
push
cld
test
cmc
lea
paddb
je
mov
and
sbb
and
pop
ficoms
shll
add
ret
mov
mov
add
imul
push
add
lods
and
pop
jno
push
mov
fadd
mov
sbb
xor
add
lock
dec
sbb
outsl
call
pop
pop
pop
jno
cmpsb
adc
fistl
pop
pop
imul
xchg
pop
shlb
add
and
fdivrl
add
aaa
pushf
sub
xor
mov
in
pop
jns
jecxz
or
ss
clc
sysenter
lcall
push
stc
xchg
push
add
int
push
push
jg
call
dec
out
es
xlat
dec
dec
jno
rol
cwtl
cmp
add
negb
sub
and
dec
add
xchg
fwait
int
aam
push
sti
xchg
xor
lock
adc
popa
fcoms
and
pusha
add
sub
bound
lret
xchg
pop
cmp
hlt
or
jne
add
cmp
sbb
bnd
js
loope
stos
or
and
push
int
iret
jmp
xchg
cmpl
inc
adc
add
xchg
call
pop
xor
xlat
push
inc
xor
xchg
sbbl
sbb
add
pop
lea
fwait
test
mov
add
mov
subb
push
push
pop
pop
jns
rolb
pop
inc
jecxz
bound
jg
fmuls
test
inc
add
xor
mov
adc
pop
adc
imul
dec
lods
jne
or
or
add
add
mov
adc
fistpl
pop
add
sti
ss
push
cwtl
jb
add
sub
xor
push
xchg
andb
jne
mov
sub
loopne
xor
mov
mov
test
xor
pop
dec
add
push
ja
pushl
add
inc
cmp
add
repnz
aad
sub
mov
add
stc
jb
sbb
add
dec
add
jp
std
xchg
xor
cltd
or
jmp
and
mov
fnstsw
mov
add
insb
add
add
shrl
imul
pop
sar
int3
sub
pop
rorl
xchg
add
adc
movsb
xchg
fstpt
imul
aas
pop
add
call
popa
cmpsl
outsl
adc
dec
add
add
jno
lcall
popf
daa
pop
push
sub
push
or
cmc
loopew
fcom
adc
mov
repnz
mov
int3
cmc
dec
cld
push
push
add
add
add
dec
dec
add
sub
jl
mov
xor
movsb
fucomip
jbe
xchg
test
mov
sbb
pop
jl
or
fs
jb
flds
nop
leave
lods
and
cmp
add
jecxz
movb
add
push
jmp
sbb
lock
pop
imul
fcmovbe
ljmp
mov
loopne
sbb
movsl
ret
sbb
cli
fwait
movsb
nop
iret
push
leave
insb
add
add
mov
aam
pushf
pusha
add
add
dec
add
or
add
and
jge
cmpsl
leave
inc
add
std
xchg
and
test
cmc
jp
xchg
pop
jno
sbb
fsts
imul
dec
add
in
xchg
scas
mov
add
mov
in
jno
dec
add
pusha
add
or
mov
jp
add
inc
add
and
popf
and
cmpsb
and
sbb
xchg
jno
lods
push
and
mov
inc
and
add
sbb
mov
jo
mov
add
ja
mov
int3
or
add
iret
push
cmp
mov
push
mov
mov
sbb
jle
fisubl
les
out
dec
outsb
add
int
insl
mov
and
insb
add
add
mov
mov
add
sbb
shrl
aad
pusha
add
sbb
jg
add
divl
into
loop
add
ss
lret
and
add
mov
xor
cmp
add
inc
sbb
xchg
mov
jno
mov
and
hlt
call
push
add
bound
ret
adc
mov
pusha
add
or
pop
mov
aam
mov
mov
cmp
stc
jns
add
mov
mov
out
divb
sub
lret
ss
push
jno
lock
add
repz
cmp
dec
shll
ret
pushf
and
xchg
movsb
pop
xor
inc
and
xchg
mov
pop
pop
sahf
cmp
or
dec
aad
and
in
outsl
orb
mov
mov
add
xchg
cmp
lcall
push
sub
jbe
data16
lret
rorl
shl
add
mov
or
ss
in
push
mov
add
cmp
and
xchg
push
aaa
out
in
mov
xchg
pushf
arpl
add
in
add
jns
xlat
push
add
lds
xor
imul
add
adc
inc
add
add
ljmp
ret
push
pop
push
add
loope
paddsb
jl
pop
cmp
scas
xor
cmpsl
pop
gs
into
inc
add
test
jmp
adc
add
add
add
jne
insb
add
pop
pop
push
jnp
sahf
dec
dec
add
mov
add
sub
decl
mov
data16
or
pop
lcall
add
shlb
mov
add
lea
cmpsb
ss
inc
mov
lcall
inc
push
push
add
dec
or
jp
ja
add
add
scas
loopne
xchg
jecxz
lock
add
pop
mov
or
ja
cmc
insl
lret
mov
push
add
jl
add
aad
jmp
nop
loop
adc
fdivs
or
mov
add
add
add
sub
or
aam
or
mov
add
in
andb
fistpll
js
out
mov
jg
push
add
xor
xor
add
aam
sbb
fsubs
push
js
adc
add
mov
add
sbbl
mov
lea
leave
sub
inc
add
je
or
add
mov
sbb
adc
mov
inc
dec
add
pop
add
cmp
ffree
imul
push
fnsave
lods
add
jmp
pop
xchg
adc
outsl
mov
xor
jmp
jnp
add
lods
pusha
add
sahf
sub
ljmp
sub
inc
add
lret
and
daa
mov
sbb
cmp
cmp
add
jl
dec
xor
int3
ret
jle
mov
add
movsb
xlat
inc
add
mov
fidivs
cmc
jl
sti
jb
mov
dec
js
pop
mov
daa
sbb
jne
cs
lds
bound
insl
push
sub
inc
xor
std
sbb
mov
add
add
push
add
shll
fstpt
hlt
daa
add
mov
and
fwait
loopne
cmove
mov
add
push
jg
add
jae
mov
dec
add
xlat
lods
rol
in
sahf
outsl
adc
add
rcl
mov
arpl
xor
add
fwait
pop
jl
xor
xor
dec
or
lods
jno
pop
loopne
jmp
push
jmp
push
xchg
add
adc
das
outsb
add
mov
fucomip
sbb
cmc
cltd
adc
adcl
add
dec
dec
add
mov
xor
ss
add
xchg
insl
ret
pop
jns
sub
sub
shl
sbb
sahf
xor
clc
pop
cwtl
sti
movsl
and
jb
ljmp
xchg
ja
jle
add
xor
add
or
inc
pop
xchg
mov
cmpb
pusha
add
xor
repnz
stos
test
jge
stos
arpl
adc
push
insl
dec
add
inc
add
cmp
sub
pushf
into
jg
cmc
jno
add
loopne
mov
add
les
add
mov
add
mov
outsb
add
xor
iret
enter
add
jns
inc
inc
add
cli
je
mov
push
stos
fisttps
add
out
lods
push
aaa
arpl
adcb
pavgw
in
sbb
add
mov
mov
and
je
gs
lcall
mov
jmp
test
int3
pop
mov
add
dec
add
cmpsb
arpl
imul
add
dec
jne
loope
sarb
cltd
roll
std
or
adc
mov
mov
add
cltd
lods
bound
and
add
pop
ror
test
xchg
pushf
jg
mov
fst
cmpsl
push
ss
fisubl
or
loope
pop
cmp
add
adc
shll
scas
mov
pop
cmp
or
jge
loopne
jl
cmp
add
xchg
insb
add
mov
push
pop
addb
sbb
call
or
cld
jb
sbb
inc
ljmp
xchg
loope
xchg
cmc
sub
adc
xor
mov
stc
jo
add
scas
add
push
add
sbb
xchg
rolb
daa
cmp
inc
add
xor
icebp
imul
sbb
frstor
mov
add
pushf
and
dec
add
leave
jp
xor
cwtl
repz
add
rorl
lahf
stc
push
cmc
mov
and
in
add
add
pop
xorb
add
inc
add
sub
add
in
add
stos
pop
adc
pop
and
lock
call
stc
jae
or
ret
icebp
iret
aas
jnp
add
adc
add
jge
or
or
add
iret
out
xor
imul
sbb
sbb
add
leave
xor
out
add
adc
mov
test
inc
add
mov
lods
jne
add
test
add
mov
push
xchg
push
sbb
cld
xchg
outsl
in
push
sub
lods
and
adc
adc
aam
out
iret
jbe
pushf
aam
xchg
dec
add
jno
imul
mov
inc
add
imul
mov
sbb
cmp
push
and
cmpsl
test
push
inc
pop
test
push
pop
fnsave
xor
mov
add
add
cli
dec
add
stos
pop
xchg
stos
out
pop
lock
add
xchg
in
jne
cs
xchg
aam
inc
add
add
sbb
dec
add
add
mov
add
inc
add
popa
pop
cmpsb
sub
dec
mov
ret
add
jns
lds
add
outsb
add
dec
and
enter
sahf
ljmp
push
add
das
push
push
or
jne
dec
add
scas
pop
lret
mov
add
loop
add
add
and
sub
in
mov
push
add
and
mov
mov
loope
add
mov
add
aad
or
rorl
dec
add
xchg
mov
add
std
inc
dec
out
out
xorb
mov
dec
add
add
pop
stc
outsl
stos
sbb
pop
cwtl
cmp
fcompl
in
in
jno
push
mov
xor
add
sub
ret
cld
xlat
cmp
add
add
push
add
adc
sti
scas
jmp
mov
dec
push
cmp
and
jbe
insb
add
xor
jle
cli
aaa
les
lret
mov
rolb
xchg
daa
sarl
pop
adc
pop
jbe
movsb
sub
stc
push
mov
add
and
and
aaa
inc
aas
scas
cli
test
inc
add
aaa
add
sub
adc
xchg
repnz
cmpsb
or
dec
add
ret
test
add
push
pop
insl
xlat
mov
mov
cmp
daa
fld
loopne
mov
pusha
add
cmpl
in
daa
ficoml
jno
outsb
add
add
add
mov
in
jae
repz
in
ret
adc
sbb
sbb
jl
sub
loop
add
in
adcl
fwait
cmp
mov
push
add
into
jmp
and
cwtl
cmpsl
push
add
add
mov
add
xor
outsl
jmp
and
pushf
fildl
fwait
outsb
add
cmp
bound
daa
inc
add
add
mov
add
or
add
add
jo
or
add
shll
popa
mov
addr16
mov
arpl
xchg
push
gs
cmp
popa
dec
cmp
inc
lcall
lcall
dec
dec
add
cmpsl
in
xchg
out
dec
add
movsb
inc
add
jge
adc
testb
and
push
pop
fisttps
shlb
mov
push
out
xor
jno
movsl
js
lcall
out
lea
sbb
sbbb
nop
movsl
arpl
mov
aam
xchg
shlb
jne
negl
xchg
adc
add
add
sub
stos
je
pop
push
out
add
adc
rcl
push
xchg
dec
add
inc
add
sbb
pop
pop
sbb
sub
inc
mov
jb,pt
test
in
mov
add
or
inc
dec
mov
enter
ds
fbld
leave
push
mov
leave
xor
adc
xor
ret
fldcw
adc
loop
jno
xorb
sbb
push
cmp
mov
cmp
testl
mov
jle
add
insb
add
mov
dec
add
and
push
fucomp
fstl
mov
add
add
xchg
push
lods
loopne
add
xchg
leave
mov
shll
xor
mov
xchg
imul
mov
jle
pop
sub
add
test
cmpsl
test
scas
sbb
xor
adc
test
add
subl
add
add
lret
pop
sbb
pop
inc
add
sub
xor
and
test
sub
or
dec
cmpsl
jne
xchg
mov
push
xchg
add
shlb
dec
push
jmp
xchg
sbb
push
add
pop
loopne
sub
loope
dec
mov
aam
pop
jmp
inc
add
pop
lahf
add
outsb
add
loop
scas
or
mov
in
std
push
aam
lds
mov
pop
insb
add
or
xor
xor
xchg
inc
add
add
and
add
rcl
jo
pop
dec
jp
je
arpl
sahf
mov
out
add
add
and
pop
enter
or
aas
int
cmpb
clc
popf
testl
xchg
xchg
xlat
jo
sub
mov
lahf
repz
cmp
dec
jmp
mov
mov
int3
sub
mov
scas
in
or
add
xchg
loope
cmp
loop
mov
ss
pextrw
dec
and
jge
mov
adc
bound
mov
insb
add
shlb
testl
xor
cli
aad
loopne
aaa
xchg
mov
int3
push
rorb
xchg
decl
add
inc
xchg
cmpsb
sub
in
cmp
sub
sub
mov
cld
outsl
sbb
add
scas
fistpl
pop
dec
xor
pop
movhps
insb
add
sub
or
sahf
add
pop
out
dec
jo
adc
test
sub
mov
push
lret
ds
sbb
add
stos
mov
add
add
push
add
add
or
sbb
pop
add
add
sub
cmp
popa
out
mov
mov
and
add
push
out
test
mov
or
push
bound
outsl
mov
push
cld
mov
and
ljmp
mov
xchg
add
mov
popf
xchg
ficoml
or
push
in
add
adc
clc
jns
sub
jmp
mov
or
add
jne
cwtl
cltd
pop
or
ret
arpl
push
test
lcall
or
add
xchg
mov
add
xor
inc
add
popf
push
inc
cmc
sti
pop
imul
loop
iret
xchg
mov
lock
sbb
sahf
sarb
pop
mov
pop
lret
lea
iret
sbb
lods
es
lret
mov
jl
add
adc
roll
lcall
fnstcw
fiaddl
cs
mov
rcrb
or
rorb
aas
xchg
mov
dec
add
pop
inc
pusha
add
push
jbe
sbb
add
sub
lods
push
sbb
fiaddl
mov
pushf
out
cli
mull
cltd
lods
pop
loopne
adcl
jae
add
add
jmp
inc
add
jg
fidivl
mov
push
je
and
dec
add
push
add
mov
xchg
sar
sbb
add
add
mov
add
mov
jo
push
or
fnstenv
sub
shll
add
mov
popf
xchg
mov
add
jne
pop
push
repnz
nop
mov
lods
add
adc
jbe
add
mov
shl
adcb
inc
add
out
and
cmp
add
faddl
mov
iret
scas
lea
es
daa
int3
jle
popa
add
xchg
scas
adc
add
xchg
push
add
sbb
out
sahf
xor
insl
add
mov
movsb
mov
and
sub
enter
add
push
push
sub
add
inc
add
in
fsubl
int
add
mov
add
insb
add
add
cmp
mov
mov
inc
rclb
rorb
mov
xchg
popa
mov
mov
add
add
xchg
pop
or
push
lahf
push
pop
and
mov
pop
lret
push
jns
add
or
and
and
imul
xor
dec
and
fidivl
popa
cmp
add
dec
cmp
je
roll
add
cld
sbb
push
enter
jl
pop
fnsave
sub
add
in
das
sahf
lds
push
cmp
dec
imul
pop
daa
cltd
mov
mov
nop
movsb
pop
sbb
add
ficompl
enter
shlb
scas
mov
std
mov
test
mov
out
push
fists
sub
add
cmc
enter
xchg
cmp
daa
push
add
dec
jmp
out
loope
push
mov
add
cmc
jo
frstor
add
rorl
dec
out
xor
add
jp
push
popf
and
cltd
outsb
add
fnsave
clc
sbb
pop
dec
add
add
sub
ss
sub
leave
fimull
add
jp
out
ret
enter
add
stc
push
cmp
add
cmp
lret
cld
mov
add
das
test
add
sub
mov
add
inc
xchg
xchg
adc
loop
push
add
gs
xor
pop
pop
outsl
mov
mov
add
add
mov
adc
add
or
mov
aas
in
add
xchg
movsb
push
add
dec
add
push
cli
rcrb
add
push
outsb
add
mov
xlat
push
jo
mov
add
loop
pop
jno
add
mov
repz
rcll
int3
add
iret
mov
add
jbe
add
xor
adc
fwait
sbb
add
mov
arpl
insb
add
scas
sub
xchg
mov
aaa
sbb
add
cmpsl
sar
dec
add
inc
scas
popa
fcmovbe
int3
pop
ret
clc
adcl
sub
jle
push
add
and
int
add
xlat
ljmp
jo
decl
pop
mull
add
popa
ja
jle
push
jns
mov
cwtl
cwtl
inc
add
mov
pop
pushf
inc
add
xor
or
mov
add
add
lods
dec
pop
jb
cmp
test
mov
mov
in
add
add
imul
add
loope
xchg
ss
mov
cmp
adc
and
fdivrp
push
inc
or
lahf
aaa
push
mov
add
roll
mov
mov
dec
call
add
sbb
add
jbe
fcoml
pop
xor
int
xchg
inc
jecxz
pop
aad
sahf
xchg
addr16
outsl
ficoms
add
jnp
inc
add
add
mov
inc
add
fisubs
add
movsb
mov
add
fistpll
add
jbe
add
repz
hlt
add
add
imul
adc
xor
sub
fidivs
fmul
je
loope
rcr
movsb
pop
divl
jae
push
cwtl
adc
hlt
and
je
mov
add
enter
ret
iret
mov
adc
mov
lds
fidivl
jmp
ret
in
scas
mov
pop
adcl
sub
hlt
fstpt
add
cli
mov
add
daa
mov
fisttps
jo
fstps
push
sub
imul
ret
push
movsl
loopne
in
pop
jge
add
add
test
rcrl
fstl
out
xchg
subb
adc
pushf
mov
addb
aad
pusha
add
sbb
fs
aas
pushf
jno
arpl
dec
add
jmp
aam
std
out
ret
pusha
add
add
sbb
mov
cmp
fimull
mov
sahf
pusha
add
dec
push
add
jb
std
fstpl
jb
mov
add
add
and
pop
xor
sbb
add
orl
or
adcb
add
arpl
in
insl
xor
loopne
mov
sti
aas
pop
out
mov
sub
add
das
inc
add
lds
shl
or
add
cmc
or
je
fs
sbb
cld
test
xor
lahf
lcall
mov
and
jae
jg
mov
xor
inc
add
add
ljmp
int3
inc
cmp
test
dec
ss
or
mov
or
add
out
add
sub
pop
xorb
bound
lea
cmp
jbe
ja
cmc
add
jbe
sub
mov
sar
xlat
aam
jge
dec
mov
aam
xchg
lret
sarb
ljmp
mov
add
out
aaa
pop
rorl
add
lret
scas
outsl
cmpsl
loopne
add
movsb
es
scas
sbb
lock
call
mov
sub
cmpsl
orl
outsb
add
dec
push
xchg
cmp
fdivrs
add
dec
add
cld
es
pop
xchg
xor
mov
xchg
subl
mov
cmc
lock
add
pmaxub
inc
add
imul
adc
clc
imul
std
repz
mov
add
enter
add
push
cmp
mov
mov
add
jnp
and
mov
add
jge
std
xchg
add
add
or
mov
inc
xor
dec
add
add
add
test
mov
mov
cmpsb
subl
mov
push
pop
xchg
sbb
jnp
sub
adc
jle,pt
cli
popa
fnsave
aad
popf
add
out
hlt
pop
mov
mov
sub
std
jns
and
test
jecxz
cwtl
shrb
add
or
out
mov
mov
push
add
jb
cmpb
divb
sarl
push
in
jbe
mov
out
cli
lods
sbb
push
mov
test
dec
add
mov
add
push
leave
stos
xor
fnstenv
bound
fisttpll
in
mov
xchg
cmp
sarl
mov
stos
cmp
lea
jmp
or
clc
mov
or
repnz
xchg
and
inc
add
into
push
jmp
cmp
mov
lret
or
movb
jecxz
pushf
bound
in
adc
subl
repz
jle
add
ja
outsl
push
adc
or
fistpll
cmp
ds
cwtl
mov
inc
aad
sahf
dec
and
pop
mov
jmp
dec
add
and
ljmp
inc
add
xlat
xor
aas
jnp
add
xor
add
add
mov
scas
movl
test
push
add
add
not
cmp
ss
icebp
cmpsl
pop
push
mov
aas
push
add
inc
scas
pop
mov
in
add
testl
sti
movd
add
mov
filds
test
xchg
cmp
jae
mov
add
add
jb
imulb
push
ss
inc
clc
push
cmp
add
jno
shrl
xor
lret
test
add
xchg
btc
repz
jnp
xchg
jg
push
or
add
mov
arpl
pop
lahf
movsb
ja
inc
jecxz
cmp
mov
lcall
sub
inc
add
data16
pop
subb
mov
xchg
sub
inc
add
roll
fptan
les
add
add
mov
mov
or
fmul
cmp
jno
push
aas
dec
outsl
jecxz
add
inc
jmp
jno
loope
and
add
add
mov
or
xchg
lret
inc
add
xor
dec
add
cmpsl
sbb
push
push
add
or
add
add
xchg
push
cmp
ljmp
je
shrl
outsl
mov
add
pop
pop
jnp
dec
inc
add
or
add
mov
test
add
inc
scas
mov
fisubrl
outsb
add
push
mov
mov
out
xchg
pop
lahf
outsb
add
jp
add
add
mov
add
jle
aaa
xchg
add
ud0
addl
add
xchg
rolb
and
movsb
sub
mov
jle
jg
in
and
hlt
lea
xchg
or
add
ror
rorl
mov
dec
rclb
pop
fwait
push
fwait
rclb
cs
jns
adc
pop
in
add
xor
push
and
pop
xor
xlat
sbb
cmc
inc
aam
loope
add
aaa
addb
test
add
insb
add
mov
add
jp
into
or
mul
sub
mov
scas
sti
adc
adc
pop
and
outsl
push
mov
ss
std
sub
lods
inc
add
cmp
mov
mov
call
add
add
and
push
add
push
add
cli
adcl
repnz
pop
dec
inc
add
add
sbbb
sti
cmpsl
jg
ror
test
repz
scas
mov
or
repnz
fildl
add
test
inc
add
mov
lods
adc
in
jge
xchg
jb
dec
shl
fstpt
xchg
movb
xchg
sub
fstpl
dec
pop
mov
mov
in
sbb
inc
enter
push
or
fwait
mov
cmp
test
popa
stos
inc
add
jmp
push
in
out
xchg
add
dec
fdivrl
push
add
aaa
dec
jl
xchg
out
popf
aas
mov
adc
xlat
in
pop
mov
repnz
xchg
imul
loop
add
and
ss
test
cmp
fst
adc
pop
or
and
xchg
outsb
add
cli
je
movsl
incl
sbb
add
stc
cli
sub
clc
idivl
pop
ret
cld
sub
rol
sub
test
test
out
mov
cmp
add
fcmovu
mov
jns
push
add
jecxz
mov
mov
sar
shll
pushf
pop
nop
push
sbb
in
stos
adc
xchg
jmp
or
lahf
xor
xor
add
jl
jns
add
mov
pusha
add
insl
arpl
fistl
imul
call
sub
sub
clc
fmuls
scas
and
imul
imul
add
fiaddl
je
fwait
in
add
xlat
add
std
mov
pop
out
cltd
mov
xlat
inc
add
push
sarl
push
in
jmp
lret
xor
inc
add
sar
xchg
into
scas
jne
add
push
fists
add
or
lods
mov
sti
stos
outsb
add
jo
nop
mov
jbe
lret
xor
mov
xchg
or
repnz
test
add
ret
mov
xor
fstps
adc
add
lods
dec
inc
sbb
adc
fstp
ret
fnstcw
jne
mov
icebp
pop
pop
push
push
jg
ds
mov
hlt
pushf
and
pop
jae
add
loopne
cmp
push
mov
add
adc
jno
dec
add
stc
mov
loop
ja
int3
push
decl
in
aad
add
stos
cmp
cmpsl
into
xorl
pop
adc
ficoml
add
lahf
mov
outsb
add
in
pop
fisubs
xchg
jl
add
add
pushf
test
pusha
add
lret
hlt
std
add
add
mov
add
movsl
fmull
mull
and
jmp
add
cmp
adc
add
pop
das
mov
inc
add
push
cltd
cld
xchg
and
xlat
ja
add
stc
or
mov
dec
pushf
pop
pop
dec
add
add
add
dec
imul
sbb
repz
mov
xchg
sbb
into
push
cmc
xor
dec
push
and
jbe
sub
add
popf
cmp
shlb
or
sbb
mov
xor
aam
mov
add
xor
orb
notrack
mov
add
push
mov
js
jl
add
imul
inc
add
int
imul
js
shld
add
sbb
mov
jp
lock
inc
cmp
sti
and
loopne
pusha
add
jle
add
add
cmp
movsb
rclb
lret
or
xor
imul
int
loopne
sbb
or
dec
push
por
mov
xor
push
or
add
in
popf
test
add
adc
xchg
popf
scas
mov
jae
mov
into
dec
add
add
inc
movl
xor
mov
imul
cmp
lods
jg
icebp
push
outsl
jo
inc
add
and
test
shl
daa
dec
add
addr16
push
add
xor
test
popf
loope
test
dec
add
out
xchg
gs
dec
add
mov
add
das
pop
or
jecxz
add
and
xor
testl
cs
popl
dec
pop
addr16
cli
daa
pop
popa
lahf
xor
ja
cltd
je
add
xchg
mov
sbb
int3
std
cmpsl
add
add
xchg
add
in
jle
test
add
jmp
add
inc
rcrl
push
ret
and
fwait
sti
scas
pop
sub
ss
xor
pop
mov
pop
jp
mov
mov
fst
push
sbb
enter
scas
push
add
push
add
xor
lahf
je
dec
loope
mov
lcall
sub
sbb
testb
mov
push
gs
mov
push
cmp
stos
sub
xorl
and
arpl
lods
mov
adc
lds
out
push
loope
mov
cmpsb
js
xor
insb
add
add
fidivl
mov
push
or
std
pop
push
add
jno
pop
fdivr
mov
add
sub
pop
ret
das
pand
pusha
add
loope
pop
pop
jne
int3
outsb
add
popa
sub
fcomps
pop
lock
sbb
add
mov
add
xchg
jb
xchg
into
js
add
call
test
add
cmp
mov
test
cli
pop
sub
inc
add
add
mov
add
ficoml
cltd
sub
ror
pop
stos
pop
arpl
mov
xor
mov
lds
add
inc
in
dec
add
mov
xchg
insb
add
and
jge
add
out
and
int3
mov
mov
pop
push
adc
add
dec
add
shrl
inc
push
mov
testl
push
fnstenv
scas
fstpt
test
ds
mov
mov
popf
mov
add
sbb
data16
add
mov
sub
pushf
cmp
popf
pop
xor
add
ret
jno
outsb
add
pop
sub
js
shl
mov
push
add
pushf
mov
add
or
mov
ficompl
inc
mov
xchg
stos
test
ret
movsl
lds
push
add
xor
push
cltd
incb
add
and
leave
mov
add
in
mov
xchg
jnp
mov
push
add
arpl
add
cltd
gs
jecxz
addl
or
test
mov
inc
add
add
inc
add
jge
lahf
popa
lds
mov
pop
inc
add
mov
cmp
adc
add
mov
xchg
xor
push
mov
cmp
add
popf
and
out
or
xchg
cmpsl
jns
fdivs
sub
cli
out
add
add
scas
in
add
inc
add
push
mov
or
test
dec
add
inc
add
arpl
test
sti
popa
clc
in
cli
je
movsb
xlat
jae
cli
push
es
pop
das
push
hlt
and
mov
and
bound
add
nop
mov
mov
cmp
lahf
dec
add
sti
mov
sbb
push
push
sub
pop
cmp
pop
iret
sbb
push
jmp
mov
sbb
push
sub
movsl
in
dec
loope
cmp
inc
add
add
mov
mov
add
push
add
out
xlat
in
daa
push
les
cmp
xchg
cmpl
loopne
add
xor
push
out
dec
inc
add
rol
mov
push
jno
shll
add
push
cmpsl
hlt
ds
std
sbbl
cmp
add
push
pop
jb
sbb
call
fidivrs
pop
cmp
xchg
sar
xor
stos
inc
shl
sbb
mov
std
aad
jp
outsl
rorl
call
or
add
add
xchg
popf
mov
mov
or
jnp
fcmovbe
pop
int
cld
ret
je
push
sub
aad
xor
sub
xchg
xor
add
shr
add
xorl
add
add
add
in
shll
int3
repnz
hlt
lahf
loope
mov
xchg
adc
and
andb
add
test
pop
leave
hlt
les
cmp
out
add
lret
xlat
addr16
xchg
ret
add
add
lret
push
pop
lods
rcrl
into
jg
aad
and
sbb
dec
jle
push
in
add
pop
loop
mov
in
add
jno
fcmovbe
shr
adc
scas
mov
stc
aaa
dec
ret
fidivs
cmpsb
cltd
inc
add
outsl
sti
decl
add
sbb
add
mov
jecxz
add
xor
ret
add
lds
mov
mov
push
xchg
add
int
sbb
pop
inc
add
or
sbb
cli
lods
icebp
fbstp
pushf
bound
pushf
bound
in
loope
mov
xor
negb
int3
pop
test
add
add
dec
dec
cld
xorb
ja
dec
ljmp
mov
inc
add
ret
xchg
aam
repz
fdivs
mov
ss
add
call
push
cmp
mov
sbb
cmpsb
cmp
cmp
add
push
rcrb
popf
push
in
testl
mov
imul
jb
jbe
aas
push
leave
lcall
sti
mov
cs
lods
fistl
dec
pop
addr16
pop
push
and
sbb
lahf
mov
das
insl
repnz
test
testb
sbb
add
push
add
adc
and
pop
lret
sbb
fistpl
and
sub
repz
cmp
push
add
add
xor
mov
lret
add
and
in
add
and
lds
mov
mov
insb
add
rorl
inc
lods
cmp
test
rolb
int3
mov
insl
mov
add
aas
imul
or
sbb
or
out
add
jnp
ret
movb
testl
insl
and
lcall
dec
mov
xlat
std
movsl
jle
mov
mov
in
mov
push
outsb
add
inc
add
jb
mov
adc
aaa
push
ljmp
test
out
nop
imul
adc
xchg
xor
add
add
add
add
call
test
xchg
mov
adc
cli
loopne
lds
pop
push
dec
and
xlat
dec
add
ljmp
xchg
sbb
sti
adc
and
push
popa
xorl
popf
adc
fstp
sub
imul
mov
lds
movzbl
mov
mov
sarb
xchg
add
xchg
adc
sub
cmpsl
imul
add
cmp
push
mov
ds
sub
pop
jbe
cmp
ja
test
and
add
clc
adc
add
fs
lret
loop
add
mov
das
lret
in
push
cmpsl
in
inc
push
add
xchg
mov
add
add
add
xchg
fmull
into
mov
imul
cmp
add
sbb
dec
add
push
pop
mov
sbb
les
js
rorb
add
imul
dec
add
jle
push
sbb
mov
rcrl
adc
pop
push
sahf
sub
pop
out
insl
push
icebp
inc
add
inc
add
jmp
fcmovnb
mov
test
call
or
sub
xchg
sahf
shl
xchg
xchg
jne
mov
ja
xchg
pop
sub
jns
mov
fwait
add
cmp
xor
aas
lods
jmp
pop
je
movb
or
inc
or
fdivr
sbb
mov
pushf
out
sti
jmp
test
pop
sarb
pop
sub
mov
add
repnz
icebp
inc
add
cmp
insb
add
roll
sub
movsb
adc
int3
dec
or
mul
aad
lods
icebp
scas
lcall
and
js
stos
mov
add
sbb
aas
adc
add
jmp
push
pop
ret
xchg
subb
loopne
int3
gs
add
add
addr16
inc
add
mov
leave
mov
jg
xor
pop
mov
inc
daa
adc
aaa
push
out
leave
and
mov
imul
mov
mov
int
lret
adc
add
pusha
add
inc
cmp
aam
xchg
lods
mov
pusha
add
xchg
sahf
xor
xchg
jecxz
dec
add
mov
mov
test
insb
add
lods
xlat
movsb
or
sbb
mov
dec
add
insb
add
jp
popa
or
mov
mov
add
sti
lds
add
xor
add
push
dec
add
pop
pusha
add
leave
inc
ds
fcoml
sar
xchg
jo
addps
add
pop
xor
das
add
mov
stos
rorb
jmp
js
in
dec
add
sbb
loop
push
loop
or
rclb
mov
lods
repz
add
fcomps
inc
inc
nop
lret
pop
add
test
add
dec
add
ss
add
cld
icebp
fcoml
daa
jp
jecxz
jnp
lahf
movsl
in
add
lret
inc
add
jb
daa
xlat
xchg
add
cmp
pop
push
scas
xorl
xlat
clc
int3
cmpsb
shl
ss
and
scas
mov
gs
add
add
fcoms
jno
adc
jnp
into
inc
into
mov
lods
pop
lcall
or
out
mov
jae
add
fists
adc
xchg
push
xchg
dec
add
add
lret
in
inc
add
dec
add
add
cmp
fwait
inc
imul
sub
pop
test
push
lea
loope
mov
mov
dec
mov
inc
push
xchg
xchg
test
adc
sub
inc
add
mov
or
insl
add
sarl
mov
add
xchg
in
fwait
mov
xchg
ja
xor
aaa
cmc
jnp
rorl
out
cmp
shl
rcr
jecxz
mov
sub
xchg
or
lret
arpl
jl
gs
fildl
xchg
stos
loope
add
mov
add
outsb
add
int3
out
jns
inc
add
fidivrl
xor
or
lods
incb
repnz
out
push
stos
out
cli
test
shll
rcrb
pop
inc
add
mov
sar
mov
dec
inc
add
add
in
push
xchg
jo
in
jb
add
shlb
add
inc
inc
xchg
mov
add
sub
xorb
or
cld
inc
add
cmpb
cwtl
pushf
push
add
fistpl
sti
mov
add
add
dec
mov
lock
add
add
add
push
repnz
flds
add
add
sbb
pop
cmpsb
lret
xchg
push
dec
add
add
outsl
push
add
dec
cmp
add
inc
je
push
stos
or
cmc
xor
sarl
cmp
pop
jnp
and
outsb
add
add
adc
inc
add
aaa
arpl
pusha
add
xchg
sub
cmp
add
pop
mov
pop
push
dec
adcl
mov
inc
add
clc
mov
dec
insl
sub
in
and
addl
xchg
in
jp
xor
jp
rcll
pop
xor
out
mov
adc
mov
mov
sbb
inc
add
idiv
mov
shll
adc
pop
jmp
aad
sub
mov
fisttpll
add
je
pop
mov
andb
movsl
out
jg
lcall
jg
inc
or
jb
lcall
add
jge
ret
add
add
add
sbbl
mov
push
and
lret
test
sub
in
fwait
mul
push
sbb
loop
cmpsl
add
fildll
push
add
popf
rcll
scas
or
bound
dec
add
or
sarl
and
cwtl
xor
nop
lds
lahf
sub
mov
call
dec
push
imul
movsl
dec
loope
enter
mov
je
xor
inc
addr16
rcrl
xchg
cmpsb
fld
dec
outsb
add
xchg
xor
mov
add
popf
jecxz
dec
add
imul
mov
sbb
inc
add
jp
pop
cli
jle
push
add
jg
add
sahf
jecxz
cmp
mov
lret
add
out
ficomps
xchg
loopne
sub
cmp
leave
jo
sbb
ss
sub
mov
add
les
out
inc
add
xchg
mov
cld
lea
add
inc
add
mov
add
dec
add
pop
dec
pop
xor
adc
jae
dec
in
add
mov
pop
push
inc
add
shl
push
filds
orl
testl
xchg
pop
movsl
ja
jg
jmp
fwait
imul
cmp
jo
add
push
xor
xor
imul
subl
xlat
mov
xchg
dec
add
add
jnp
and
mov
in
cmp
outsb
add
mov
add
cli
insl
shrl
add
lods
push
inc
dec
add
dec
outsl
test
push
lea
mov
adc
or
mov
and
sbb
cmp
fimuls
cwtl
jb
lcall
sbb
jecxz
ja
or
repz
inc
data16
add
lods
test
jmp
add
loopne
shrb
iret
push
add
xchg
push
mov
cltd
sub
in
movsl
sbb
fmul
aam
imul
and
add
mov
inc
add
cmp
lret
add
scas
nop
lock
cmp
pop
js
sub
je
frndint
ret
ss
mov
add
jp
xchg
xor
nop
aas
adc
pop
or
push
mov
add
dec
add
push
cmpsl
add
idivb
sahf
dec
push
add
pop
pop
fwait
mov
adc
push
pop
mov
fisubrs
bound
fadd
mov
int
xor
lock
xchg
push
outsb
add
push
mov
mov
icebp
add
pop
scas
adc
ret
scas
mov
idiv
ja
fs
jns
sahf
repz
add
js
add
add
in
andb
cmp
inc
add
xor
adc
int
mov
add
loop
xchg
lret
push
jmp
pop
lret
mov
gs
ficompl
and
jp
in
mov
push
imull
and
inc
add
dec
add
orb
es
pop
call
mov
cmpb
popa
or
sbbl
push
test
dec
add
pop
mov
and
sub
jns
call
xor
inc
mov
xchg
mov
and
pop
mov
jmp
xchg
ficoms
jnp
ret
add
and
add
scas
mov
dec
add
mov
movsb
ret
or
nop
lret
out
push
sarb
sub
push
adc
test
and
fdivrs
add
ror
rcrb
or
in
add
and
popf
test
fcmovu
mov
aas
test
and
aam
fs
adc
add
mov
mov
aas
jge
pop
fwait
inc
test
dec
lock
je
xor
inc
incl
add
sti
rorl
imul
xchg
int
aad
pop
sbb
loope
jmp
add
out
xor
add
out
sub
or
pop
stc
iret
adc
add
xor
scas
jb
pusha
add
js
sbb
insl
push
add
cmc
xor
mov
lret
cmp
stos
inc
scas
inc
xor
sbb
movsl
push
inc
add
int
cmp
call
movsb
dec
push
scas
and
cltd
pop
ret
lcall
or
cmp
dec
add
out
dec
and
das
xchg
hlt
cmp
mov
out
jo
xor
inc
add
add
adc
inc
inc
add
mov
pop
sub
sub
js
sbb
add
and
inc
add
push
flds
aad
sbb
call
add
cmp
dec
add
add
add
pop
push
scas
je
ljmp
pop
xor
mov
jae
gs
mov
insb
add
fldt
pop
test
js
andl
xchg
fisubrl
add
movsb
cmp
cmp
das
leave
in
cmp
test
test
mov
mov
jle
add
add
outsl
push
mov
add
int
sub
xor
lock
push
lahf
in
dec
scas
fimull
sub
or
push
or
add
cmp
cmpsl
pop
mov
imul
add
dec
add
pusha
add
cmp
pusha
add
int3
adc
cld
pop
xor
repz
sub
lahf
jo
in
call
ja
aas
sub
sub
ja
fwait
outsl
out
fcoms
dec
add
sbb
push
addr16
movb
mov
mov
mov
into
xchg
mov
add
cmc
movsb
or
push
mov
push
aad
mov
adc
jno
xchg
and
outsl
xchg
xchg
push
cmp
in
cmp
out
data16
add
loopne
cmp
repnz
lods
test
add
jp
add
pop
xchg
and
cli
mov
xchg
cmpl
dec
add
pusha
add
sbb
inc
cmp
mov
pop
test
adc
jecxz
cmp
add
and
adc
add
btcl
test
out
pop
or
cmpsb
xchg
push
cwtl
inc
add
xchg
ret
sub
mov
jp
repz
mov
add
xor
hlt
rcll
mov
les
mov
filds
inc
add
fmulp
in
pop
inc
add
cmpsb
mov
mov
popa
arpl
inc
shlb
insb
add
andl
push
or
add
add
mov
mov
jecxz
int
sbb
add
mov
inc
add
cmp
test
cmp
mov
xor
xor
or
sbb
mov
add
add
mov
test
add
jge
por
sti
or
xchg
sub
pop
lock
add
xchg
out
mov
icebp
popa
inc
add
mov
add
sub
or
loopne
or
mov
sub
add
add
iret
cmpsb
inc
lahf
adc
je
fildll
add
cwtl
fnop
or
mov
pop
out
shll
lret
inc
add
fcoml
outsl
mov
outsb
add
mov
aad
mov
add
repnz
lcall
loopne
cmpsb
arpl
or
mov
enter
add
adc
jmp
sbb
insl
imul
push
add
cmp
xor
mov
lods
mov
out
loop
add
clc
insl
inc
stos
mov
add
adcb
add
test
out
lret
popf
pop
or
add
sbb
xchg
cmp
out
popf
jne
mov
mov
fwait
pop
adc
stc
add
inc
dec
add
adcb
les
sub
fcomps
sbb
ret
and
sub
adc
push
mov
call
out
daa
cmp
mov
or
loope
xchg
add
pop
lret
xor
cld
xchg
inc
add
jge
cmpsl
jne
popa
mov
pop
cmp
imul
pop
mov
add
js
daa
push
cmp
xor
pop
xchg
add
out
jl
xor
add
push
inc
ror
lds
jle
add
dec
lock
dec
add
pop
mov
loope
push
addl
dec
jbe
jbe
mov
pop
and
inc
add
jbe
daa
sub
push
cmpsb
movsb
ja
mov
mov
cmp
popa
inc
add
add
jl
inc
mov
faddl
mov
inc
add
ja
add
jns
xor
iret
into
push
pop
test
push
add
clc
fisubl
inc
pusha
add
mov
add
int3
cmp
lahf
adc
adc
mov
dec
add
mov
ret
std
and
add
imul
or
dec
ljmp
cli
mov
add
jae
vcomisd
inc
jno
lds
cltd
inc
in
scas
sbb
ficomps
jecxz
mov
adc
dec
rorl
sarl
push
add
pusha
add
out
xchg
push
fnclex
icebp
and
sbb
fwait
pusha
add
xlat
mov
shr
mov
add
or
idivl
sbb
pop
test
stos
mov
mov
or
sti
xchg
xchg
sbb
xor
or
push
roll
ljmp
lret
mov
sbb
sbb
cmc
fcoms
shlb
cmp
divl
ds
jmp
add
cwtl
xchg
enter
call
lahf
sub
enter
xchg
movsl
mov
add
lods
pushf
faddl
and
fimuls
jcxz
aam
xor
sbb
adc
clc
adc
outsl
lcall
js
dec
or
in
cmpsl
sarb
std
fidivrs
sbb
cltd
int3
sarl
add
ja
mov
mov
ss
jae
xor
add
add
cmp
xor
or
push
mov
sub
jne
cmpsb
xchg
icebp
and
in
cmc
mov
inc
pushf
cli
insb
add
and
pusha
add
cld
inc
add
add
dec
mov
xlat
loope
mul
and
and
sub
insl
sti
mov
jge
out
mov
clc
into
outsl
or
add
cmpsb
aad
leave
dec
add
scas
lds
cmp
cmc
push
mov
mov
js
cmp
add
add
sar
shrl
xlat
fimuls
push
sbb
lock
fsubl
xor
repz
add
std
add
add
sbb
pop
nop
or
xchg
fcmove
sbb
or
mov
mov
fidivrs
pop
cld
xor
adc
popa
imul
push
mov
addr16
out
jae
stc
push
fistpl
outsl
gs
mov
add
and
mov
xor
pop
int
jo
cmpsl
mov
lahf
test
sub
push
inc
shll
aad
mov
lret
dec
add
iret
jmp
in
imul
jge
inc
add
cli
sub
cli
pop
sbb
adc
xor
cltd
leave
sub
mov
stc
inc
aad
repnz
dec
int3
outsl
cmp
or
xlat
out
repz
and
and
repz
jno
cmpsb
mov
xchg
adc
clc
in
jecxz
xor
add
cmp
int3
jne
stc
xor
add
push
dec
adc
add
jge
leave
sub
sbb
sbb
aaa
push
pop
jns
aas
mov
movsb
and
inc
add
mov
push
add
cmpsb
jns
xchg
stc
pop
in
add
push
inc
sbbb
loop
sbbl
pop
out
movsb
lds
mov
lret
fwait
loope
pop
dec
int
hlt
xchg
or
outsb
add
pop
fwait
push
das
aad
js
add
pop
fsubl
ja
mov
sbb
pop
sub
pushf
iret
inc
add
in
xchg
sub
inc
xchg
iret
mov
push
add
or
add
cli
clc
enter
adc
dec
add
stos
jo
xor
addr16
mov
lret
add
daa
xchg
lcall
insl
adc
lods
jp
add
cmp
mov
xchg
test
cmp
sub
lea
aaa
lcall
pop
xor
js
add
pop
or
mov
ret
or
pop
mov
inc
loope
std
ret
in
adc
and
lret
mov
push
cmp
add
xlat
cmp
add
iret
push
insb
add
int3
mov
imul
jns
shrl
mov
aad
sbb
aas
insb
add
sbb
mov
and
pop
lock
mov
into
nop
adc
jno
add
jno
add
inc
add
sahf
data16
mov
pop
mov
mov
mov
pop
cmp
add
jg
test
dec
pop
pusha
add
pop
stos
mov
push
lods
and
cmp
or
add
pop
xor
and
mov
adc
cmp
mov
pop
test
sub
dec
add
add
leave
push
xor
mov
fisubrs
and
or
or
pop
sarb
adc
or
dec
jnp
mov
inc
add
dec
shr
pop
pushf
into
jecxz
hlt
xor
clc
add
inc
add
lret
add
add
subb
stos
cmpsl
and
mov
xor
xor
mov
cld
mov
pop
add
out
test
test
mov
xor
add
gs
aam
add
cld
popa
clc
add
inc
daa
mov
adc
add
add
test
dec
mov
dec
add
in
add
gs
xlat
pop
xchg
repnz
add
jns
add
add
push
les
push
aam
pop
cltd
push
adc
mov
and
inc
add
inc
pop
add
xchg
or
add
add
add
push
cmpsb
pop
adc
loopne
dec
add
jp
pusha
add
jb
jl
mov
add
add
sbb
fcmovbe
pop
jae
jne
push
mov
push
inc
pushf
jno
add
inc
add
in
adc
adc
out
inc
add
dec
or
and
jl
add
xor
add
jmp
nop
fstl
dec
sbb
out
ficoml
ret
pop
shll
in
or
add
repz
and
sub
mov
add
xor
bound
dec
add
cmpsl
lods
inc
cmpsb
push
scas
mov
mov
les
adc
mov
dec
add
mov
ds
pop
cmpsb
pop
lcall
and
negl
ret
inc
mov
adc
push
imulb
mov
ret
dec
adc
outsl
mov
mov
testl
das
sbb
push
xchg
add
add
nop
and
and
testl
jne
pop
mov
mov
popa
pop
jns
in
jp
inc
add
call
pop
stc
push
pop
loop
sub
rclb
mov
lcall
mov
ja
push
gs
mov
pop
mov
pop
mov
pop
sbb
ret
adc
nopl
sarb
jo
ja
rclb
jnp
fstpt
inc
add
in
outsb
add
lods
out
ret
ja
add
add
gs
add
gs
test
stos
and
mov
data16
in
add
or
test
js
dec
mov
add
popa
push
fists
lcall
cld
pop
add
outsl
out
cmp
jp
or
add
or
mov
scas
sbb
or
iret
aad
jp
sbb
popa
outsl
inc
or
xchg
adc
inc
add
data16
mov
push
out
clc
rolb
out
stos
sub
lock
aaa
std
outsl
aam
pop
xchg
xchg
dec
add
add
out
add
mov
add
cmp
daa
and
les
jae
or
shll
data16
sarb
in
js
call
sbb
mov
pop
lahf
mov
add
push
add
add
lds
jbe
ficoml
xor
sub
bound
nop
xor
mov
mov
inc
xchg
sar
loope
ret
int3
popa
and
fistps
add
sbb
faddp
xor
xchg
xchg
xchg
dec
popl
call
cmpsb
roll
add
lret
xchg
push
fildl
inc
js
and
or
das
dec
inc
add
sub
xchg
mov
push
pusha
add
sub
xchg
sub
add
add
test
jecxz
xchg
push
inc
add
adc
jnp
shlb
adc
add
push
mov
add
lret
or
cmp
or
cmpxchg
jl
in
push
insl
xor
push
cmpsb
popf
loopne
movsl
add
ret
fsubr
xor
xchg
xor
mov
leave
aas
mov
fistpll
jnp
mov
add
cltd
fildl
outsl
int3
adcb
xchg
enter
add
cmpsl
sub
ret
movsb
add
sbb
loope
in
mov
shrl
sbb
int
add
arpl
jae
loop
jnp
sbbl
daa
pop
push
dec
push
sahf
ja
sub
mov
dec
pop
iret
test
dec
xor
dec
cltd
push
add
ljmp
mov
add
aaa
xor
cmp
lods
fcompl
lret
fs
out
or
pushf
push
add
mov
std
test
ja
xor
cmp
add
sahf
cmpsb
daa
add
dec
add
jl
mov
and
hlt
cli
dec
or
or
mov
add
test
cmp
cmp
dec
add
daa
mov
or
mov
push
mov
dec
test
add
imul
add
fmulp
mov
mov
xchg
cwtl
mov
lea
push
mov
xchg
popa
cmp
sbb
add
xchg
fmuls
test
pop
sub
mov
divb
shlb
movsb
adc
and
sub
out
les
test
xor
stc
pop
jnp
jae
lahf
out
xchg
stc
add
sub
push
xchg
loope
jp
in
inc
add
inc
mov
test
add
push
or
in
xchg
arpl
add
mov
add
and
aam
iret
mov
in
xchg
and
jp
rolb
add
xor
add
sbb
into
cwtl
test
pop
adc
mov
add
xchg
dec
push
in
sbb
scas
lcall
repz
add
xor
xor
dec
xchg
adc
sub
and
scas
sbb
dec
add
bound
cmp
adc
pop
and
dec
inc
add
into
je
mov
add
add
add
push
cli
pop
sbb
fsubs
jmp
adc
adc
add
test
add
add
andb
push
ret
popa
icebp
mov
adc
loope
mov
ss
mov
leave
cltd
and
add
cmpsl
and
rcr
insl
mov
add
loope
push
xchg
pushf
mov
mov
mov
add
add
add
add
mov
and
arpl
xor
shlb
inc
imul
nop
push
mov
xchg
mov
mov
fdivl
jl
mov
bound
lret
lret
adc
out
sahf
daa
nop
sub
adc
bound
shll
jbe
mov
or
lock
out
add
adc
sub
sub
jae
mov
add
out
pop
xchg
adc
inc
add
push
pop
pop
sti
scas
or
insb
add
iret
cmpsb
pop
sbb
inc
mov
xchg
inc
and
mov
cmp
push
mov
mov
in
mov
lret
movsb
cmp
add
clc
cmp
add
addr16
in
mov
mov
popa
add
ficompl
sarb
sbb
cmp
adc
add
fsubrl
imul
jge
add
mov
rcrl
xor
add
lds
out
sbb
add
dec
add
dec
add
adc
js
lods
inc
xchg
aaa
movsb
mov
sti
inc
add
lret
outsl
ja
cwtl
push
jmp
push
jne
adc
and
cmp
xlat
icebp
arpl
adc
shl
scas
test
notb
icebp
xor
pop
imul
out
add
inc
add
adc
jecxz
push
dec
cmp
inc
xchg
push
jmp
notl
sbb
add
or
imul
sbb
arpl
bound
inc
add
enter
rcl
outsb
add
std
inc
add
cmp
xchg
mov
adcb
lcall
das
lea
add
add
int3
ds
sub
lds
loopne
mov
jle
mov
roll
xchg
mov
add
add
leave
and
push
pop
mov
iret
xor
add
stc
and
inc
add
sub
mov
gs
dec
inc
sbb
sar
data16
add
sti
mov
cmp
fsubl
push
add
mov
jnp
pusha
add
and
push
in
inc
add
sbb
mov
add
add
pop
mov
add
aaa
or
lahf
shll
in
bound
divl
sbb
lea
outsl
inc
cmp
in
movsl
inc
add
jbe
mov
in
adc
or
mov
dec
add
enter
sbb
or
sbb
std
mov
mov
cli
xchg
dec
add
cmpsl
js
mov
push
lea
mov
add
pop
mov
mov
add
pop
push
adc
add
inc
ret
invd
add
ficomps
jl
jbe
add
bound
shlb
add
rcr
das
lds
add
dec
pop
add
je
js
add
adc
push
mov
dec
add
in
pop
mov
inc
add
lcall
add
sub
mov
sbb
les
push
int3
pop
jle
stos
pushf
mov
xor
sarb
daa
adc
mov
mov
mov
inc
xor
sbb
add
jmp
xchg
inc
add
dec
add
in
push
daa
scas
das
outsb
add
mov
push
mov
out
popf
je
shll
int3
cmpsb
push
ret
cmp
jmp
out
add
inc
nop
and
out
push
cmp
repz
sbb
pop
pushf
mov
add
insl
stos
test
mov
push
add
jmp
xchg
cmp
xor
in
shl
push
and
push
and
bound
test
jns
das
int
mov
add
lret
cmp
mov
dec
add
mov
sbb
add
test
add
dec
add
mov
push
pop
mov
mov
cli
mov
lods
mov
add
sub
pop
scas
les
ret
xor
roll
imul
jnp
les
shrl
mov
sub
pmaddwd
add
xchg
inc
mov
push
add
sbb
add
add
xchg
add
and
ficompl
or
jmp
pop
lret
dec
sbb
fstl
adc
jecxz
jne
pop
hlt
cmp
add
cmp
xchg
xchg
dec
add
add
sahf
cli
and
cld
jg
jl
sub
jmp
mov
gs
out
mov
leave
sbb
and
aas
mov
pop
push
add
mov
pop
ret
pop
xchg
sbb
inc
fadds
mov
cmc
fcompl
sahf
sub
movsl
adc
cmp
int3
and
sarb
mov
out
movsl
inc
stos
xorb
add
xchg
dec
add
pusha
add
add
add
jmp
aad
push
sahf
inc
mul
adc
mov
and
jg
add
add
and
mov
test
mov
sbb
mov
add
cmpsb
sub
pop
loopne
mov
sbb
mov
stos
into
push
xchg
add
xchg
or
adc
cmp
fsubp
or
mov
std
popf
fwait
ds
stos
mov
lock
popa
leave
inc
add
add
arpl
add
pop
mov
gs
out
mov
enter
stc
sub
push
scas
sti
lea
lret
pop
insl
sub
add
incl
pop
add
inc
add
xchg
imul
jle
or
push
in
clc
scas
das
loopne
add
aam
sub
imul
mov
in
xchg
mov
add
sbb
dec
add
mov
rolb
repnz
cltd
or
in
jge
ds
jne
inc
add
or
ss
mov
inc
add
pop
xchg
jnp
xchg
shlb
sti
repz
push
test
fwait
stos
sbb
mov
add
cmp
push
jp
and
jp
or
add
jle
sbb
jg
dec
mov
leave
iret
mov
and
mov
scas
pop
shl
cmp
mov
xchg
enter
cltd
std
mov
inc
jne
mov
mov
add
movsb
int3
pop
sbb
dec
add
and
adc
adc
push
push
pop
jecxz
jo
and
icebp
pop
cmpsl
insb
add
jl
repz
shlb
inc
popf
into
mov
push
mov
loop
xor
jno
sub
xchg
out
jb
mov
jb
jp
in
insb
add
add
mov
jmp
clc
jae
pop
xchg
fcmovnu
xlat
push
mov
sub
sti
cli
cmp
pop
lds
adc
fsubp
xlat
inc
add
jp
fildl
or
pusha
add
filds
add
inc
add
aaa
mov
add
in
loope
loope
js
inc
repnz
test
fs
push
push
add
or
dec
ret
sahf
les
xchg
push
sarb
lock
push
sbb
pop
add
icebp
sub
mov
arpl
or
rcrb
lcall
cwtl
movsl
mov
push
sbb
popf
movsb
imul
cmc
xor
mov
repnz
pop
push
lods
add
test
pop
popf
arpl
sti
dec
iret
push
xchg
jne
rcrb
add
jb
fisttpl
in
mov
xchg
rcll
mov
je
loop
adc
mov
jne
sbb
add
and
mov
sub
je
add
cmpsb
or
out
nop
inc
adc
nop
sahf
ret
cmpsl
loopne
mov
insb
add
or
jle
mov
add
pop
jecxz
or
mov
dec
add
pop
rcrl
cmpsb
mov
enter
add
push
mov
add
add
pop
ja
sbb
add
movsb
in
push
outsb
add
mov
xchg
cs
sbb
xlat
jno
dec
xor
sbb
int3
popa
dec
add
and
test
add
or
sahf
aaa
ror
mov
rolb
push
or
add
stos
mov
adc
sarb
xchg
jmp
enter
roll
addr16
jb
push
add
clc
popa
push
inc
xor
fsubrl
adc
test
movsb
pop
mov
cmp
mov
decl
in
jge
sbb
xor
push
push
test
popf
popf
bound
inc
mov
sbb
ret
cmp
ret
add
pop
push
icebp
hlt
jp
pop
and
lods
outsl
mov
or
mov
pusha
add
stc
add
incb
arpl
lcall
and
out
mov
mov
test
sbb
jne
ds
ret
ret
jg
andl
xchg
push
sbb
repz
mov
xor
xor
movsl
lahf
mov
xchg
lret
and
test
add
xor
or
add
inc
pop
sbb
push
add
sub
jg
adc
add
insl
dec
add
xor
ljmp
push
inc
lcall
jne
inc
add
mov
lock
sub
add
subb
shll
int
cmp
jecxz
dec
add
sub
insb
add
push
add
les
add
rcrb
lret
js
inc
add
dec
mov
or
orb
xor
insb
add
push
add
pop
stc
jb
insb
add
add
sub
mov
das
pop
mov
sbb
sub
mov
cmp
inc
push
in
push
add
jge
xchg
das
pop
jae
sub
xchg
sahf
jae
pop
jecxz
mov
xchg
xchg
sbb
jne
add
xchg
imul
loope
add
push
jb
cmpsb
xchg
mov
mov
xor
cli
test
pushf
xlat
jl
and
mov
sub
fbstp
add
add
fstps
xchg
cmc
fildl
out
add
push
mov
insl
and
mov
mov
or
arpl
std
lock
imul
into
mov
mov
mov
leave
in
xchg
jb
scas
pop
xchg
add
add
adc
sub
dec
popa
adc
and
sub
sarl
add
add
dec
jnp
mov
addr16
pusha
add
pop
mov
add
inc
fsub
jecxz
sahf
push
sub
and
lret
sbb
sub
mov
xchg
push
lret
popa
pop
cmp
das
stos
int
add
fsubs
rorb
and
pop
rcl
add
cmpsb
sub
mov
repnz
in
adc
mov
push
in
lea
sbb
out
push
mov
sti
fldcw
cmp
repz
lock
in
scas
idivl
add
aaa
pop
jne
add
adc
mov
popa
sbb
imul
aaa
arpl
aam
add
fdivl
rorb
add
inc
add
jb
mov
jno
and
arpl
adc
stos
pop
adc
add
jmp
inc
lds
cli
loopne
inc
sub
std
sti
add
pop
pusha
add
fadd
adc
fstpl
or
cmp
dec
outsl
sub
and
divb
mov
or
hlt
dec
andl
cld
or
jp
xchg
lret
inc
ret
add
call
push
mov
ljmp
pop
ror
ss
test
push
add
ret
mov
or
or
arpl
inc
add
lea
cmc
punpcklwd
xchg
out
imul
pop
mov
cli
add
xor
xor
imul
sub
aas
jmp
xchg
add
dec
jno
popf
dec
scas
andb
andl
add
mov
add
cmp
out
mov
add
xchg
and
sub
vphsubbw
xchg
cmpb
jge
cmc
mov
ficoml
jns
lahf
bound
xchg
pop
adc
inc
add
add
inc
je
test
iret
addr16
aad
subl
add
jg
jle
sbb
mov
add
xchg
gs
push
mov
daa
rcrl
icebp
add
cli
mov
add
shlb
and
dec
cmp
inc
dec
add
jg
pop
add
nop
andb
insb
add
les
mov
movsb
ja
sbb
add
ljmp
add
repnz
mov
movsb
rclb
fistps
add
cli
rcrb
mov
inc
ret
iret
insl
pop
pop
imul
je
into
xor
imul
add
mov
inc
add
jecxz
or
push
sbb
in
sti
fs
rcll
and
pop
in
pop
or
add
loopne
pop
fwait
add
outsb
add
lds
xchg
test
pop
pop
sbbb
xor
xchg
cmp
daa
je
inc
add
jle
add
add
jnp
push
push
and
sub
xor
movsb
push
add
xchg
dec
in
push
pop
enter
xor
aam
int
add
jge
cmp
mov
cmp
mov
std
sbb
add
addr16
push
add
and
leave
jle
add
mov
les
daa
shl
add
cmp
add
cmp
adc
xchg
jb
add
jle
add
hlt
add
stos
out
mov
fidivl
push
xchg
pop
inc
insb
add
xor
pop
inc
add
shl
jbe
push
movsl
inc
lahf
push
stc
popa
adc
shl
rcr
test
imul
sub
inc
les
lds
mov
or
pop
test
jbe
dec
test
pop
mov
add
mov
cli
or
add
cli
jb
jo
pop
fsubrs
add
in
jle
add
outsb
add
or
xchg
sbb
movsl
sbb
push
mov
dec
add
dec
add
add
aam
inc
add
push
loopne
xchg
daa
test
add
clc
sahf
mov
mov
jle
mov
push
negb
mov
dec
add
and
adc
scas
mov
dec
or
out
repz
clc
or
leave
pop
xchg
aam
add
add
fiaddl
mov
lret
dec
add
push
jecxz
push
add
xchg
jbe
pop
test
lret
add
mov
adcb
gs
or
pop
dec
add
or
ljmp
aas
pop
call
or
add
mov
mov
inc
add
test
insl
jae
and
out
cmpb
mov
inc
mov
sub
dec
add
dec
add
into
mov
bound
xor
ret
enter
push
add
xchg
std
pop
ja
xchg
imul
xchg
xchg
fmuls
add
inc
add
icebp
lods
mov
fldt
or
mov
sub
sub
xchg
lahf
push
add
test
xchg
aas
xor
mov
add
pop
push
std
mov
pop
cmp
xchg
fdiv
bound
fildl
jle
xchg
lds
ret
push
cmp
mov
jmp
inc
add
roll
sti
jg
into
in
les
sub
pusha
add
test
negb
insl
mov
add
in
out
outsl
mov
dec
add
pop
cwtl
mov
lock
punpckhwd
cmp
aam
in
aad
lods
jp
mov
ret
jl
subl
fstpt
mov
fimuls
add
jae
int
push
fucomi
into
xor
adc
add
cwtl
stc
add
aad
sbb
shr
pop
inc
and
cmp
mov
js
jmp
enter
or
jle
lret
sbbl
ret
ja
pop
xor
popa
popl
jb
add
orl
mov
add
repz
cmp
push
add
cltd
insb
add
xchg
xchg
cmp
xchg
clc
dec
add
out
outsl
adc
mov
outsb
add
add
and
pop
stos
lahf
pop
xor
iret
cmpb
mov
add
sbb
frstor
out
ret
add
fs
icebp
mov
sti
stos
rorb
mov
add
repz
dec
out
std
aas
jae
add
xchg
cmc
mov
das
inc
add
mov
or
xchg
xchg
sub
ja
sbb
adc
sbb
mov
idivb
cmc
rorb
add
inc
bound
shll
inc
stc
and
fcompl
inc
add
js
mov
sbb
push
faddp
cmpsl
xlat
clc
add
inc
add
add
sub
stos
add
push
enter
add
mov
in
aad
cmp
scas
sti
push
dec
add
mov
pop
xchg
jecxz
sub
cwtl
sub
dec
add
test
dec
int
shl
or
jmp
cld
iret
and
mov
add
mov
add
and
sbb
stos
xor
cmp
add
lds
inc
mov
push
fmull
sbb
add
leave
push
inc
add
ret
imul
in
add
add
imul
add
sarb
add
jmp
bound
mov
push
mov
mov
mov
mov
or
add
add
div
sub
in
push
add
xchg
sbb
sbbb
push
daa
sbb
pop
pop
icebp
insl
push
push
xchg
jmp
fcmovne
sbbb
aam
imul
inc
faddp
rclb
orb
xchg
sub
add
jmp
cmp
mov
sbb
inc
add
inc
add
inc
add
nop
js
sub
adc
dec
add
inc
add
add
jbe
add
xchg
mov
xlat
xor
and
jge
jp
add
xchg
push
sbb
add
push
loopne
pop
push
adc
out
out
ljmp
xchg
push
cwtl
or
stc
fldenv
add
into
cmp
mov
adc
jmp
mov
pop
push
push
xor
cld
test
add
dec
idiv
mov
testl
jo
mov
lds
xchg
cli
pop
mov
xor
add
dec
pop
xor
jmp
fldcw
int3
fsubrs
pop
shlb
push
add
dec
sbb
jp
xor
add
aam
add
stos
inc
add
sub
ss
mov
dec
dec
sbb
sbb
mov
xor
fbld
iret
and
inc
add
jne
mov
outsl
lret
xchg
repnz
add
out
pop
dec
jge
sub
dec
pusha
add
fucomp
adc
add
cmp
mov
add
popf
cmp
and
xor
mov
js
xor
adc
mov
aas
outsb
add
or
jmp
js
rclb
add
addl
add
leave
addr16
add
test
fcoml
inc
ret
add
xchg
lock
add
add
and
dec
add
cmp
add
sbb
popf
mov
ret
add
add
xchg
into
pop
xchg
mov
fincstp
dec
je
testb
ss
test
sbb
jg
xchg
sbb
imul
xchg
push
cltd
fdivrs
add
xchg
pop
xchg
shrb
jns
add
add
and
out
cmp
dec
push
cmp
insb
add
push
mov
fnsave
out
lock
mov
add
sub
ljmp
cmp
fimuls
aad
daa
ds
add
push
add
sbb
cvttps2pi
outsl
add
jmp
add
aad
fdivrs
mov
mov
add
push
adc
ret
jp
add
inc
arpl
mov
jecxz
popa
xor
add
dec
add
fisttpl
add
scas
inc
add
mov
inc
add
xchg
std
push
dec
add
or
sub
icebp
fcom
mov
dec
add
sub
mov
loope
add
xchg
adc
add
add
outsb
add
cwtl
push
cld
hlt
call
fbld
mov
leave
pop
or
push
cmp
jp
loop
push
sbb
jns
fwait
xor
add
mov
cld
out
push
ljmp
cltd
dec
mov
in
pop
fsubrp
rclb
mov
loope
loop
loopne
add
popa
fcomip
mov
movsl
mov
mov
jns
in
add
std
inc
mov
inc
xor
mov
mov
xor
subl
andb
cld
std
sbb
sub
stc
push
fadd
mov
outsl
cmpsb
sti
dec
rcll
add
cmp
ljmp
inc
inc
add
push
cli
inc
add
xor
add
imul
add
mov
cmp
mov
sahf
push
call
add
add
inc
add
push
jmp
sub
add
fmul
in
notb
popa
sti
subb
ret
mov
loop
dec
add
fists
rcrl
call
or
loopne
sub
lret
add
arpl
mov
add
js
add
in
movsl
ds
sub
jg
add
add
lret
loope
push
out
sub
mov
add
testl
stc
out
add
adc
mov
and
stc
pusha
add
dec
add
add
pop
ficoms
add
cwtl
or
fidivrl
imul
pop
sub
xor
xchg
mov
adc
cmp
jo
mov
add
popa
xor
fld
inc
inc
test
cli
inc
inc
add
lds
add
or
mov
ss
ret
adcl
aaa
test
test
or
add
jne
jg
inc
into
push
sbb
hlt
cmp
aam
out
jae
xchg
pop
stos
adc
cmpb
shll
fwait
cmp
add
jo
lock
sub
pop
jle
sbb
cmp
xchg
fldcw
add
jp
aad
push
inc
pop
sub
icebp
jo
repz
out
sub
cmp
test
mov
stos
hlt
fcom
push
add
jl
or
imul
fnstcw
repz
test
add
imul
jae
popa
jae
testl
aas
and
jle
pop
pop
pop
stos
jns
add
dec
xchg
pop
blcic
jg
add
adc
xor
mov
push
rorl
cmp
mov
add
adc
cmp
dec
xchg
mov
je
xor
test
sbb
or
jb
dec
rolb
jnp
fsubrl
lahf
mov
addr16
movsb
arpl
add
jl
or
lahf
push
dec
add
push
and
mov
xchg
sub
scas
push
pop
mov
jb
cli
popa
sub
ds
fcoml
lret
test
cli
sub
dec
add
test
outsl
icebp
xor
jo
mov
dec
or
push
and
add
or
pop
jp
add
push
cmp
cmp
xor
mov
add
add
fstp
cli
lss
and
sbb
mov
sub
adc
dec
add
ret
add
sti
fnstenv
inc
add
pop
cmp
lret
scas
jge
stos
jnp
xor
pop
stc
sub
cmpl
add
mov
mov
add
sub
pop
negl
add
mov
jo
xchg
enter
xlat
sbb
cmp
enter
mov
inc
enter
sub
sbb
xor
add
mov
fcomps
xchg
pusha
add
push
inc
dec
add
inc
cmp
dec
add
add
cmp
xor
int3
jbe
inc
lahf
lea
cwtl
loopne
lret
push
xchg
in
xchg
xchg
xor
ss
or
mov
add
stc
lcall
fiaddl
push
fucomp
outsb
add
int3
xchg
rorb
adc
mov
add
pop
xor
stc
shlb
fdivp
lahf
cmp
das
jo
adcb
xchg
jmp
ficoml
sbb
jp
add
lds
jge
hlt
sbb
add
dec
add
cmp
mov
fisubl
imul
roll
adc
add
push
xor
xchg
aad
je
add
pop
loopne
mov
mov
add
cmp
fucom
and
outsb
add
adc
fnstsw
bound
scas
cmp
add
xchg
insl
jge
inc
add
daa
add
in
dec
add
aam
test
decb
js
pop
pop
add
loopne
hlt
add
lahf
movsb
insl
jne
add
repz
pop
sbb
and
lock
faddl
add
lret
mov
pop
rcl
scas
push
data16
loop
and
add
jb
add
cmc
lea
mov
push
lcall
add
into
adc
cmp
mov
cmpsl
ljmp
fidivl
and
cmp
jbe
inc
add
imul
aaa
ficoml
test
inc
add
addr16
leave
arpl
adc
mov
scas
cld
adcb
dec
not
loope
mov
fwait
sbb
pop
xchg
out
xor
out
xchg
pop
and
rcr
xlat
pop
ficoml
inc
add
leave
or
sbb
mov
dec
add
add
cltd
adc
cmp
xor
dec
inc
add
repz
fwait
into
push
mov
adc
dec
mov
es
lret
repz
into
addr16
stos
pop
arpl
sub
ret
or
arpl
ret
stos
mov
pcmpeqd
movsb
insl
push
add
cs
add
lods
dec
mov
mov
cmp
inc
add
adc
sbb
fistpll
test
xchg
cmc
xor
test
add
push
pop
pop
inc
add
adc
add
adc
add
jle
jnp
xchg
loopne
js
fwait
xchg
mov
mov
xchg
out
pop
cld
xchg
ficoml
add
repz
add
add
add
mov
into
and
nop
mov
cmp
add
sub
xchg
xlat
push
mov
pop
shl
fdivr
sarb
lcall
mov
add
leave
xchg
and
dec
add
adc
add
adc
shrb
sbb
jmp
std
jno
shl
inc
sahf
push
mov
out
lock
add
and
div
mov
mov
adc
xchg
fxch
ret
pop
cltd
adc
leave
xchg
das
lods
xchg
mov
mov
dec
add
xchg
testb
cmp
xorb
jp
jo
cmpb
std
jb
add
dec
sub
notl
into
lock
sbb
mov
and
dec
add
pushf
movsl
dec
shll
xchg
mov
sub
xchg
jnp
mov
add
outsl
gs
xchg
or
test
aad
into
or
loope
bound
jge
pusha
add
rcrb
popa
testl
dec
add
adc
add
mov
add
dec
repz
cs
lret
dec
jo
lods
in
xchg
add
iret
sti
mov
inc
in
fucomi
cmp
xchg
dec
dec
add
popf
push
dec
in
pop
sub
xlat
fistps
or
lods
in
ffreep
add
fsubr
sub
fstl
add
cwtl
lahf
inc
add
jp
leave
loopne
cmp
outsl
mov
cmp
add
cmpb
shrb
pop
in
cmp
inc
add
xchg
icebp
xchg
pop
inc
add
xchg
nop
sub
cmp
call
mov
fiadds
add
sbb
jmp
cwtl
sbb
or
ffree
push
inc
stc
shlb
imul
hlt
jnp
and
or
add
lret
lahf
dec
test
dec
mov
icebp
sbb
xchg
dec
imul
or
das
loopne
push
cmpsl
mov
icebp
xor
call
dec
add
into
and
lret
aam
sbb
mov
aaa
ffreep
test
push
push
in
or
in
xor
jno
cmc
stos
test
add
ret
add
scas
xor
int3
adc
je
cmc
ljmp
jp
cld
pop
loope
xorl
sub
lods
leave
mov
sub
inc
push
aam
sub
pop
push
sarl
idivb
cwtl
je
add
push
pop
loope
cmp
add
cs
mov
les
sbb
cmovge
cmp
adc
add
shll
cmp
xchg
stos
and
jnp,pt
adc
fwait
cmp
int
aas
mov
imul
nop
iret
sub
mov
push
mov
ja
sub
add
add
xchg
push
add
sbb
ret
adc
xor
ljmp
add
jne
lret
and
cld
adc
stos
sarl
push
sbb
loop
add
add
cmpl
mov
hlt
xor
test
add
mov
outsb
add
push
rcl
push
dec
add
add
cmp
test
repnz
add
loop
add
jno
pop
xor
fchs
cmp
cmp
imul
or
movl
es
clc
das
sti
imul
mov
sti
cltd
jne
fldcw
fsts
int3
fidivrs
add
mov
out
and
add
sbb
ret
add
add
xor
jl
daa
ss
add
and
xor
inc
add
test
or
lcall
add
nop
ds
lahf
cltd
dec
add
adc
pop
aam
add
xchg
add
lret
test
and
nop
dec
add
add
daa
aad
xchg
cmp
mov
out
sbb
pop
imul
and
fstpl
into
pop
fisttpl
out
dec
add
stos
xor
lods
sub
add
xor
cmp
icebp
sub
fucomi
rcrl
test
repz
push
iret
jbe
add
add
xchg
mov
mov
add
xlat
push
orb
and
mov
movl
jb
adc
adc
add
test
add
cmpl
loopne
sbb
aaa
jae
dec
add
pop
insb
add
scas
aaa
lods
fucomip
aam
clc
sarl
mov
insl
addb
clc
mov
jl
add
dec
add
xchg
cld
pcmpgtd
dec
add
add
jecxz
mov
cmc
add
and
je
ss
loope
or
mov
jge
test
xchg
lock
add
add
adc
pop
cmp
sub
idivl
daa
frstor
cmp
mov
lcall
shll
add
mov
dec
add
outsb
add
xchg
push
fadd
push
inc
nop
add
jns
add
sub
sti
jmp
or
push
add
scas
and
ret
je
xchg
out
sbb
into
adc
sti
mov
cmp
adc
xor
inc
add
stos
in
imul
xchg
int
test
xor
add
push
bound
adc
jmp
icebp
out
pop
mov
add
xchg
cmpsb
hlt
add
rol
mov
pop
push
push
push
sbb
aas
pushf
inc
int3
mov
pusha
add
hlt
in
int
mov
mov
add
push
mov
add
add
sbb
xchg
aas
lea
add
sbb
add
idivb
stos
cmp
adc
sub
add
add
aad
lock
ja
xor
add
test
adc
add
mov
sti
jecxz
xchg
mov
dec
add
jg
jl
add
add
push
inc
add
aaa
jo
test
xor
push
adc
outsl
or
rol
pop
or
xor
stc
push
mov
ret
mov
xchg
faddl
cmpsl
sub
dec
add
loop
pop
push
fisubs
add
cmpsl
push
pop
into
push
lods
dec
add
frstor
add
sub
inc
add
dec
add
add
outsb
add
nop
or
add
xchg
push
aas
pop
sub
jno
shl
mov
sub
cwtl
icebp
cmp
xchg
pop
jae
mov
movb
add
add
daa
call
jge
add
sub
sub
push
outsl
cltd
js
add
inc
add
out
mov
movsl
iret
lahf
frstor
add
mov
bound
ret
repnz
add
sbb
dec
mov
sbb
push
pop
cmpl
sbb
lea
out
push
add
add
gs
shll
add
add
inc
negl
add
pop
enter
xor
int3
sti
pop
nop
enter
dec
add
sub
dec
push
movl
leave
xor
dec
add
and
pop
lock
loop
rclb
dec
add
sbb
pop
cmpsl
daa
lret
stos
sub
lock
popf
inc
add
ficomps
and
mov
push
cld
ljmp
cmc
mov
adc
push
push
leave
jae
add
add
add
sub
xchg
scas
addb
add
in
int3
add
dec
and
lcall
bound
btr
mov
pop
cmp
add
mov
add
hlt
ljmp
mov
add
dec
add
rcrb
mov
imul
stos
push
xchg
scas
popa
inc
add
cmpsb
inc
add
xor
sbb
sbb
fbstp
xor
shrl
add
das
sbb
xlat
pop
mov
or
stos
pop
stc
cmc
xor
and
xchg
hlt
sbb
sbb
inc
mov
xchg
inc
adc
lods
cmpsb
xor
mov
cmpsb
divb
cmp
repz
inc
add
loope
cmpsl
fmull
jnp
and
das
stos
push
icebp
inc
add
adc
pushf
push
psllw
or
add
push
jmp
dec
filds
add
cmp
out
push
lret
inc
mov
add
add
mov
dec
add
outsb
add
add
add
cltd
sbb
cli
mov
dec
jb
aam
adc
add
lret
aad
inc
add
inc
add
outsb
add
mov
pushf
mov
test
leave
dec
add
and
cmp
pop
push
inc
mov
sbb
lods
test
arpl
popf
and
dec
add
add
add
call
into
pop
jne
shlb
mov
cmpsb
testb
mov
adc
jmp
fnstsw
mov
sbb
add
or
mov
sub
sub
cmpsl
jg
std
aaa
mov
xchg
sbb
xchg
pop
sti
cltd
jp
add
loopne
xorl
pushf
or
xor
mull
add
jp
adc
push
add
mov
jmp
pusha
add
adc
cmp
mov
xchg
cmp
dec
repnz
sub
clc
jae
out
popl
push
in
dec
add
fcompl
mov
or
mov
pop
mov
lcall
cmp
lds
jo
hlt
mov
or
add
pop
insl
cmpsb
mov
and
xor
add
stc
into
jno
adc
lret
mov
and
mov
xchg
add
or
sbb
or
pop
decb
insb
add
rdpmc
lods
mov
test
insb
add
add
movsl
std
loope
pop
dec
add
ja
adc
jge
add
out
repz
xor
hlt
cmp
jp
pop
xchg
iret
jg
daa
pop
out
pop
push
out
mov
loop
sbb
mov
inc
push
pusha
add
xchg
sti
xor
add
cmp
sahf
mov
adcb
push
fwait
or
lcall
aas
leave
dec
mov
adc
or
pop
sbb
xchg
add
sbb
clc
call
add
xor
jno
in
mov
pop
mov
and
xchg
jg
test
mov
and
imul
nop
stos
xchg
lea
add
gs
push
movsl
pop
push
cld
jp
scas
xor
into
cltd
add
cmp
push
lret
cmp
test
nop
mov
xchg
or
popf
addb
xor
pop
imul
subb
addr16
sbb
jp
pusha
add
jmp
xor
sbb
xorl
add
xchg
ret
sbb
add
sub
jnp
out
mov
push
cmp
dec
add
aam
add
rcrb
imull
mov
cli
ja
sub
mov
add
enter
orb
out
andb
cmpsl
mov
aad
rol
outsl
sar
pop
dec
add
mov
xlat
jge
add
pusha
add
add
add
jns
mov
sub
les
pop
pop
mov
pop
or
add
jecxz
lcall
add
in
loop
add
pop
sahf
adc
outsl
ret
shl
add
adc
jge
fcmovb
push
arpl
outsl
jno
add
inc
add
lret
subb
xor
sbb
mov
or
jge
add
enter
cmp
add
add
mov
dec
arpl
xor
jne
jmp
xchg
push
pop
outsl
cltd
lds
add
and
add
scas
lret
stos
loope
orl
add
add
xor
push
cmpsb
shrl
rorb
add
adc
add
xor
pusha
add
lock
ds
push
push
xor
inc
add
sbb
jns
pop
xchg
loope
ja
add
add
mov
inc
int
repnz
repz
out
fnstenv
and
add
add
sub
pop
scas
pop
inc
add
subb
cmp
test
aas
add
es
xor
mov
movsl
mov
push
adc
add
mov
addr16
fnstsw
lock
push
dec
add
xchg
add
mov
add
mov
jecxz
jo
mov
adc
add
sbb
pop
dec
add
xor
sub
icebp
dec
lods
out
pop
clc
jmp
std
aas
mov
hlt
or
in
shl
xor
add
and
arpl
xchg
leave
sub
push
shrb
xor
lock
add
push
or
imul
icebp
mov
fildl
push
or
pop
popa
jbe
nop
sbb
add
mov
xchg
jge
pushf
fnsave
xchg
out
xor
push
and
out
movsb
js
add
fdiv
adc
andl
dec
xchg
out
adc
add
fists
fsubrs
push
lds
cmpsl
xchg
out
iret
cmp
int
repz
nop
shrb
or
daa
pop
jbe
mov
outsb
add
or
sbb
push
adc
push
sbb
or
mov
sub
push
add
mov
inc
add
pop
push
icebp
push
icebp
pop
leave
popf
mov
in
lds
negl
imul
loop
cli
test
jns
sub
call
lret
mov
arpl
mov
dec
add
add
add
adc
dec
mov
in
into
lret
or
jns
add
add
dec
add
lods
outsb
add
shlb
in
out
mov
ror
inc
loope
test
repnz
mov
icebp
push
inc
sbb
sub
mov
inc
add
ficoms
push
and
sbb
add
sub
and
mov
imul
add
push
addr16
cmp
fucomp
push
cmp
movsl
sub
jp
into
das
cld
mov
insl
or
jge
loopne
insb
add
or
add
and
dec
add
add
bound
in
add
push
mov
fistl
icebp
adc
add
add
add
iret
das
lods
sbb
mov
mov
add
sbb
aad
add
sub
out
shlb
cs
int3
mov
add
psubb
and
push
and
ds
sti
jae
test
dec
add
mov
pop
or
arpl
cmpsb
out
pop
add
shlb
out
cmc
imul
add
fisubrl
add
and
shll
xchg
inc
add
mov
pushf
push
fdivrp
or
stos
jl
cmpsb
or
push
ret
inc
inc
add
std
and
mov
leave
gs
mov
dec
add
addb
xor
lea
mov
stc
dec
dec
pop
add
loope
jmp
test
add
add
pop
jmp
add
xchg
jno
insb
add
out
xor
outsl
loop
cmp
and
ja
push
lret
mov
fiadds
movsl
test
inc
inc
adc
xor
jnp
fistpl
test
cwtl
leave
stc
repz
xchg
push
movsl
xor
ja
pop
jecxz
add
repnz
repz
scas
or
out
jae
addb
lock
add
pop
ljmp
ja
lock
mov
mov
enter
cmpsl
pop
xchg
movsl
xchg
dec
add
rol
xor
andb
imul
cltd
test
add
xor
sub
and
in
fsub
ja
add
mov
add
add
aad
xchg
mov
mov
aas
mov
jg
std
fidivs
dec
mov
mov
pop
into
ljmp
les
add
xchg
fiaddl
sbb
add
pop
and
out
mov
scas
cmp
dec
add
fnstcw
add
and
dec
sub
sbb
bound
mov
add
cmp
or
add
add
and
movsl
jp
mov
xor
out
cld
insb
add
test
add
add
xchg
rclb
jb
add
xor
sub
das
mov
mov
add
cmp
pop
daa
adc
sbb
add
add
lret
add
popf
push
add
cmpl
mov
in
test
add
popf
and
cmp
fnstsw
mov
iret
clc
xor
lret
cld
inc
add
or
push
cmp
add
push
gs
mov
mov
lods
push
mov
add
fisubl
add
sub
bound
add
shl
std
xchg
dec
int
xchg
out
pop
mov
dec
mov
pop
out
mov
scas
adc
out
pop
int
cmp
sbb
lds
add
insl
into
xchg
dec
cs
leave
mov
fldt
xchg
enter
xchg
inc
push
and
sub
aam
sti
sbb
cmpsl
inc
add
ss
add
pop
mov
add
xchg
mov
test
xlat
add
data16
sub
xor
mov
jg
cmp
cmp
int
outsl
xchg
add
add
ljmp
pop
js
mov
cmp
lahf
pop
pop
in
sub
add
orb
gs
lret
enter
sbb
add
add
aas
push
add
push
sub
push
clc
out
jmp
sub
cmp
xor
loopne
dec
movsb
fwait
add
sub
inc
add
orb
add
cmp
std
pop
sbb
insl
and
je
inc
inc
cli
or
cmp
pop
push
add
push
dec
add
lods
sub
pop
in
in
xchg
test
bound
or
or
ret
jo
sub
out
add
mov
xor
push
add
mov
push
add
andb
mov
lods
inc
add
jno
or
pusha
add
or
popl
add
lds
pushf
inc
add
fucom
mov
adcl
rolb
xor
jbe
ret
pop
and
lret
dec
mov
mov
pop
fisttpll
cmp
xchg
jle
mov
inc
add
or
loope
push
sti
mov
jle
fnsave
out
in
xor
scas
int
add
add
cwtl
pushf
or
add
add
pop
out
cmp
out
cmp
arpl
xor
xchg
jg
push
xor
add
mov
sbb
popf
stc
mov
into
or
daa
imul
adc
repz
add
testl
add
or
adc
ljmp
mov
add
pop
inc
outsl
fstpl
pop
scas
mov
add
aaa
xchg
fsubrl
in
pop
insb
add
xor
mov
lahf
xchg
sbb
mov
outsb
add
dec
add
jae
pop
add
arpl
jmp
lods
stc
jge
dec
add
mov
add
cmpsb
fstpl
and
hlt
adc
add
sar
in
mov
push
lds
add
inc
add
add
sti
xchg
das
xchg
and
dec
add
push
xor
sbb
xor
subb
add
stc
cld
and
cld
imul
scas
dec
cmp
faddl
xchg
jl
adc
push
das
adc
and
add
and
add
jmp
insl
test
add
xor
jb
shlb
les
mov
out
mov
adc
pusha
add
cmp
add
cmp
daa
xchg
lods
jno
fdivs
sub
dec
fdivs
scas
jle
roll
and
inc
add
mov
fsubrl
imul
dec
pop
addb
cltd
adc
imul
ss
or
mov
pop
pusha
add
leave
test
push
xor
out
inc
add
mov
adc
shlb
hlt
jl
mov
ds
add
repnz
int
add
cmp
add
cmpsb
cmp
adc
add
xor
and
fstl
and
sub
in
push
mov
in
scas
jns
fdivrl
xchg
jle
je
mov
insb
add
mov
add
into
dec
in
flds
in
test
and
mov
push
leave
test
add
outsb
add
movsl
cmc
jge
fcmove
ficompl
addr16
and
out
add
sbb
or
or
add
lods
jne
cmp
test
insb
add
push
add
jnp
js
add
sbb
xchg
or
add
cmpsb
xchg
test
insl
sbb
adc
arpl
rol
inc
lret
push
in
es
pop
pop
lock
add
lahf
loope
ljmp
jae
imul
rcrl
add
mov
mov
orb
add
cld
mov
aaa
cmp
add
aad
dec
add
add
add
jae
mov
mov
mov
ret
aas
inc
imul
gs
loop
test
pop
call
and
hlt
xchg
in
outsb
add
arpl
pop
xor
push
mov
dec
test
pop
xor
popa
inc
add
jg
mov
imul
add
pop
cwtl
or
mov
lret
cmpsl
or
test
aam
sub
mov
dec
add
cmp
lahf
pop
jle
jns
push
loopne
sub
addr16
pop
jg
inc
cwtl
cwtl
or
xorb
fdivl
in
xlat
jecxz
pushf
repnz
icebp
inc
pusha
add
enter
mov
je
add
movsl
aad
add
sub
add
or
mov
divl
sti
jmp
lods
mov
fwait
out
and
mull
insb
add
and
in
clc
push
sbb
daa
jmp
add
lea
inc
add
stos
mov
jno
push
dec
add
mov
jo
xchg
stos
add
cmpsb
mov
mov
add
jl
sbb
jns
add
cwtl
dec
add
mov
add
xchg
add
int3
cmpsb
dec
jne
das
sub
imul
stos
ss
sbb
mov
and
shr
mulb
xor
xchg
jmp
mov
adc
daa
pop
shlb
lods
add
dec
cmc
lahf
xor
jno
lods
sub
xchg
inc
add
das
lahf
sbb
add
lahf
outsb
add
cld
mov
scas
pushf
add
rcrl
add
add
mov
push
jge
mov
inc
sbb
add
pushf
xchg
aaa
les
sbb
test
add
xorl
mov
sub
cmpsl
cmpsl
adc
inc
add
push
dec
std
enter
or
add
push
and
xchg
adc
push
int3
stos
dec
add
lea
loopne
pop
div
lds
cmpsl
pop
mov
rol
popf
jae
or
out
movsb
mov
loop
sub
push
mov
pop
xchg
movsb
out
scas
mov
mov
imull
xlat
xchg
jns
or
cmp
adcl
decl
add
inc
add
add
leave
add
xor
add
lock
mov
mov
cmpsl
bound
adc
fisttps
mov
sub
inc
shrb
fistps
add
loope
xchg
jo
add
fldt
mov
add
add
popa
imul
push
xlat
jmp
add
jecxz
fisttps
dec
add
add
ja
aas
fiadds
adc
jnp
dec
add
mov
lcall
jmp
mov
pop
cltd
pop
sbb
mov
xchg
je
aad
imull
fcmovu
aas
add
das
lods
aaa
insl
or
mov
mov
stos
iret
popf
cmp
mov
pop
adc
adc
add
mov
and
cmp
mov
add
das
push
sub
fimuls
rclb
lret
jae
dec
add
loopne
xor
outsb
add
out
lock
roll
test
jg
add
mov
add
pop
cmp
std
add
add
push
repz
sahf
xlat
enter
add
add
sarb
aaa
imul
fcompl
insb
add
xchg
jg
mov
jge
cmp
adc
add
xor
or
add
xor
rolb
cmpb
pop
jmp
mov
icebp
and
fcomip
xchg
cmpsl
arpl
ljmp
add
jo
sbb
pop
stc
ss
pop
lahf
cmp
daa
popf
adc
sbb
in
push
add
repnz
add
push
dec
add
out
lods
js
push
cld
mov
rorl
xchg
mov
add
pop
cli
mov
xchg
popf
js
dec
jmp
add
push
hlt
in
dec
add
sbb
ljmp
sub
or
add
add
cmp
addl
push
add
or
shlb
adc
imul
pop
inc
add
pop
sbb
aas
xor
shlb
sarb
xorb
loope
mov
es
aad
mov
ds
out
xchg
sub
fildll
out
fisubl
xchg
sub
enter
in
mov
jno
xor
fcoml
sbb
add
dec
add
fldl
sbb
add
cltd
and
loopne
out
inc
add
shll
sbb
add
mov
pushf
jbe
add
push
push
lahf
std
arpl
fwait
mov
mov
dec
sti
enter
push
mov
add
inc
add
add
sub
loopne
icebp
sbb
mov
lods
sub
add
rcll
cmpsl
pop
fstl
sbb
jp
adc
loop
fs
sbb
mov
dec
add
add
mov
cld
mov
dec
adc
add
mov
pushf
fstpl
or
in
rorl
lods
lods
jns
scas
mov
sbb
xchg
add
xchg
add
push
xchg
das
rclb
or
inc
jo
js
popf
aad
aad
add
add
mov
cmpsl
xchg
inc
ja
sbb
ss
daa
xor
mov
push
into
inc
add
inc
sub
sarl
push
fdivrs
add
outsl
xchg
stos
cmp
add
js
add
mov
inc
add
icebp
cmp
cld
ds
add
xorl
frstor
mov
add
push
fcoml
mov
sti
les
add
xchg
sbb
mov
mov
faddl
fistl
std
jnp
insl
mov
sbb
mov
shl
lds
aas
xor
cmp
push
mov
shlb
mov
push
outsb
add
or
xchg
cltd
jecxz
lds
push
test
inc
mov
add
pop
fstps
movsb
orl
pushf
out
mov
add
mov
aad
add
jae
lock
push
leave
les
add
sbb
xor
mov
iret
mov
mov
testb
add
shl
popf
enter
insl
mov
enter
dec
add
cmp
out
push
push
mov
rcrl
lret
mov
idiv
xchg
or
adc
mov
test
mov
jb
dec
adc
jp
mov
add
push
int
pop
mov
pop
arpl
cmp
icebp
iret
push
add
and
jl
les
push
xchg
ret
out
mov
gs
add
add
daa
and
inc
pop
bound
scas
xor
lock
mov
add
mov
lahf
sub
test
xor
dec
inc
xorl
cld
sbb
or
lea
addr16
scas
icebp
add
add
inc
add
add
xor
add
jb
popa
imul
push
pop
cmpsb
shrb
push
test
add
sub
in
xchg
in
jno
jnp
and
jb
fsubs
push
cmp
push
lret
enter
add
xor
loope
add
xchg
push
dec
add
cld
xchg
mov
push
add
dec
in
add
and
ret
movsb
and
fsts
cmp
lods
jns
add
jb
mov
mov
sub
xchg
idiv
jbe
or
adc
enter
lods
fsubrl
add
sub
cmp
jnp
popf
dec
add
xchg
fmull
xor
scas
xorb
in
lahf
xchg
std
stos
xor
arpl
ret
insb
add
jo
cli
ss
cwtl
call
add
test
in
mov
lret
hlt
mov
arpl
add
lea
stos
loop
icebp
mov
jb
sbb
into
loope
fidivrs
xchg
test
lahf
sbb
out
xor
xorb
rolb
mov
sbb
sub
and
fldcw
add
ficomps
enter
cmp
imul
mov
pop
in
sub
js
mov
lods
fptan
push
js
lcall
add
pop
jbe
sub
mov
ret
push
add
test
movsb
push
pop
xchg
sbb
xchg
fistl
outsb
add
lahf
mov
add
nop
packuswb
jp
ss
or
in
rol
and
push
fdiv
pop
dec
add
push
sar
int3
inc
xor
add
mov
int
add
mov
lcall
adc
popf
cmpsb
repnz
js
xchg
pop
pusha
add
and
pop
jae
call
pushf
push
pop
sub
jmp
mov
imul
test
add
pop
lahf
push
pop
clc
dec
add
xchg
movsb
js
mov
adc
add
jb
leave
xor
sub
cmpsl
clc
scas
jbe
icebp
movsb
les
popf
arpl
loop
xlat
out
and
inc
add
jge
iret
add
xchg
mov
jle
add
add
mov
add
add
jge
pop
les
mov
xlat
xchg
add
mov
add
sbb
push
jecxz
jne
loop
pop
pop
enter
push
add
inc
add
adc
adc
inc
outsb
add
and
dec
add
test
add
leave
ds
jne
add
mov
movsb
and
dec
sbb
in
scas
shl
in
adc
dec
test
and
lcall
stos
in
stos
aas
ftst
fnstsw
add
sti
mov
int3
push
adc
push
jo
insl
inc
mov
aaa
ds
xchg
pavgw
dec
add
jge
add
stos
mov
lret
in
add
xlat
inc
add
push
jmp
sbb
icebp
push
mulb
add
add
addr16
mov
out
inc
outsb
add
in
add
add
movsl
scas
setle
stos
and
fidivrs
sub
daa
push
add
test
int
xlat
cmpsl
cmpl
and
cmc
mov
add
into
xchg
in
push
add
xchg
shll
pop
sahf
les
add
lods
add
xchg
jnp
sub
mov
ret
addb
rcll
out
stos
inc
xchg
xor
xor
xor
mov
jae
mov
inc
add
insb
add
push
pop
push
inc
imul
add
add
out
pop
add
repz
mov
fadd
xchg
nop
data16
sti
pop
xor
test
mov
mov
data16
lods
jno
dec
add
push
and
add
add
sbb
lcall
notl
mov
sub
jnp
inc
add
or
outsb
add
pop
out
sbb
rclb
fld
mov
lock
mov
add
xor
adc
shrl
push
mov
popa
popf
xor
enter
mov
aam
hlt
or
and
andl
or
aas
sub
arpl
das
xor
pminub
add
mov
jg
daa
sub
add
adc
push
aad
xor
push
add
jp
push
sub
sbb
add
dec
add
lods
ds
add
dec
add
mov
cltd
das
xchg
mov
inc
jno
push
sahf
or
pop
repnz
adc
add
mov
negb
push
jmp
push
inc
mov
cmp
in
add
add
sub
sub
add
mov
in
icebp
add
pop
push
pop
xchg
ss
mov
inc
stos
inc
add
add
mov
jae
bound
nop
jle
push
jne
add
pop
aaa
mov
inc
add
cmp
test
dec
add
lods
jle
dec
add
movsb
dec
add
loopne
and
jno
into
incl
pop
lods
xchg
add
jp
mov
lea
mov
lret
xor
movsb
js
mov
clc
jo
xor
add
dec
ss
sarb
or
pop
push
xor
js
xchg
mov
add
pop
mov
lods
call
xchg
decl
xchg
jns
bound
push
mov
add
xor
pmaddwd
jl
pop
ret
inc
push
cmpsl
push
pop
enter
sub
in
repnz
pop
pop
sub
mov
insb
add
add
adc
aaa
pop
ja
mov
jmp
lahf
xchg
mov
and
jecxz
add
aam
outsl
push
jmp
mov
push
add
test
jo
stos
push
add
shlb
pop
push
mov
mov
cld
mov
adc
adc
push
or
cmp
add
mov
add
dec
add
adc
and
mov
add
mov
and
nop
jbe
add
inc
add
add
dec
jmp
pop
xchg
mov
push
fwait
xor
icebp
pop
or
adc
xor
add
mov
sbb
jbe
dec
add
rep
add
clc
jae
ds
add
sbb
cmp
jle
jmp
lahf
enter
fidivs
je
xor
xchg
add
dec
add
sub
inc
inc
fcmovbe
mov
push
add
pop
xchg
repnz
and
je
ja
sub
mov
fbld
out
add
fwait
stc
xchg
pop
push
shrl
inc
add
xor
movsb
ljmp
in
mov
pop
cmp
int3
or
jbe
xchg
adc
xchg
iret
aas
sub
mov
dec
aaa
pop
dec
add
add
faddl
add
jecxz
shlb
rclb
adc
xchg
cmp
xor
add
xor
aaa
add
ret
mov
cmp
das
and
rorl
jne
das
fldcw
sbb
cmp
or
hlt
xchg
mov
xor
test
add
add
add
add
push
pop
xor
inc
xchg
and
repz
out
adc
mov
pop
fidivl
add
dec
and
ret
js
xlat
add
dec
add
add
mov
js
loopne
psubd
add
mov
adc
nop
push
std
test
pop
or
movb
push
imul
add
xlat
lea
fs
call
sub
xor
add
jb
dec
pop
insb
add
add
cmp
ds
ja
and
add
add
jmp
add
add
add
jge
add
inc
push
cwtl
cmp
sbbl
loopne
rorb
add
in
inc
push
jns
mov
aad
addr16
inc
add
pop
addr16
xchg
xchg
ret
add
push
add
dec
add
jbe
lret
sub
add
jne
movsb
sbb
xor
fcom
ja
adc
or
mov
dec
add
scas
sub
add
pushf
daa
test
shll
aaa
pushl
into
sbb
js
and
add
ficompl
dec
xchg
lret
add
in
add
xor
add
aad
decl
shll
xor
cmp
mov
gs
xchg
or
xlat
cli
fcmovnb
push
add
or
fwait
jmp
sub
lds
xor
jl
ja
shrb
add
sub
cmp
cmp
iret
test
xor
inc
add
stos
push
inc
add
iret
push
add
add
cmp
pop
cmp
stos
cwtl
push
les
jmp
inc
add
test
mov
push
inc
push
scas
mov
sub
int3
mov
add
scas
mov
add
mov
xor
add
clc
xchg
pop
loope
fsub
adcl
mov
dec
add
into
rcll
arpl
popa
xchg
jg
lds
add
push
adc
pop
dec
jo
int
add
clc
loopne
jg
mov
divl
sahf
lock
mov
pop
dec
leave
test
clc
mov
jno
add
in
jmp
add
cmp
mov
test
scas
mov
outsb
add
push
sub
pop
jge
jo
daa
out
xor
xchg
mov
add
cs
popf
jo
icebp
lds
ret
fmuls
xchg
mov
pop
cmpsl
push
add
xchg
movsl
mov
and
add
loopne
add
push
stos
out
lds
dec
add
mov
mov
fdivp
jo
sub
mov
mov
add
addr16
fstpt
ret
and
lods
xor
jo
movsl
jns
ss
gs
add
push
scas
mov
popf
fwait
mov
test
inc
mov
xchg
jae
arpl
push
pushf
and
adc
addb
iret
jmp
ja
in
inc
add
add
add
and
cmp
inc
out
xor
test
adc
mov
add
mov
notl
into
push
popf
and
push
inc
loopne
sub
add
cmpsb
pop
cmpsl
test
push
imul
add
mov
add
add
push
xor
add
aam
dec
add
add
in
jp
add
mov
mov
movsl
loope
xchg
push
nop
cli
mov
adc
push
repnz
adc
add
or
jecxz
aad
push
roll
push
xlat
xchg
into
aaa
jge
cmpsb
ss
add
daa
pop
push
pop
lret
data16
movsb
cld
arpl
test
test
sbb
les
add
pusha
add
out
dec
add
add
das
add
mov
les
add
inc
add
push
mov
add
mov
popf
mov
xorl
add
leave
mov
add
jb
add
inc
pop
bound
pop
pop
shlb
out
outsl
xchg
sub
shrb
and
adc
sahf
jl
addl
mov
sbb
das
xchg
jne
add
loopne
cli
push
lret
pusha
add
sti
xchg
inc
add
sbb
addl
mov
mov
and
je
jnp
cltd
or
movsl
mov
xchg
sub
or
inc
aam
add
test
sarl
push
pop
scas
lcall
add
outsb
add
jbe
add
add
mov
jmp
out
dec
add
jg
mov
jo
rcrb
jnp
mov
mov
add
jmp
aam
iret
and
stc
add
push
add
mov
mov
sarb
add
jb
cmp
mov
lods
into
test
loope
stos
xorl
pop
jb
pop
cld
or
fs
scas
lea
pop
add
ret
add
ja
jb
cmp
mull
inc
add
cmp
or
jmp
repz
xor
add
xchg
pop
ret
jl
out
movsb
adc
cmp
sub
dec
ss
add
nop
mov
cmp
dec
add
add
stc
sar
lds
mov
imul
fcomi
shll
add
data16
mov
jmp
add
add
repz
push
sub
and
aas
mov
clc
jecxz
adc
movsb
pop
testb
fbld
jno
adc
shrb
add
push
shll
js
incb
mov
sub
std
je
lds
mov
mov
nop
ret
cwtl
fst
or
add
cmc
inc
add
mov
loope
sbb
out
or
dec
xchg
popf
mov
fmulp
aad
sti
push
das
stos
cli
sub
rcr
mov
insb
add
add
pusha
add
js
shll
add
adc
add
xchg
add
adc
cmpsl
jl
jo
xchg
jle
in
jge
mov
dec
mov
inc
xor
mov
mov
iret
pop
add
rorb
add
or
iret
int
dec
add
inc
add
mov
mov
add
add
add
lds
lea
fmuls
sbb
mov
and
in
pop
cld
sbb
out
and
adc
inc
cli
jo
xchg
cmp
std
xor
mov
fsubr
cmp
insl
cmp
aam
das
bound
sub
fadd
push
aam
das
sti
negb
or
add
or
ret
push
add
jae
sub
sbb
pop
add
jne
add
leave
popa
sbb
mov
xchg
das
dec
add
mov
dec
add
lds
push
adc
dec
add
fsub
test
jmp
scas
std
lea
cmpsb
mov
sbb
or
lea
add
jae
inc
add
cmc
xlat
push
add
or
mov
mov
mov
add
add
push
mov
sbb
and
cvtdq2ps
add
jnp
mov
add
test
in
dec
psrlw
add
pop
repnz
and
aaa
inc
add
push
loopne
add
popa
cmpsl
fisubs
add
nop
test
imul
xchg
sub
lds
add
jp
fwait
sarb
in
xchg
fnstcw
cmpsl
xor
lret
add
jmp
jnp
gs
fcmovu
mov
inc
add
int
jl
movsl
into
lret
mov
imul
pop
int
push
xlat
xor
jle
aas
and
stos
dec
add
arpl
push
cmp
mov
out
push
out
les
insb
add
or
enter
add
das
lret
lds
fdivr
adc
nop
xchg
cmp
mov
ret
add
jle
xor
and
pop
xchg
pop
bound
jg
jbe
inc
sub
inc
nop
cli
mov
mov
sub
and
push
sbb
xor
pop
mov
mov
scas
add
stc
xor
test
rcrb
pop
lret
sub
js
add
lahf
dec
dec
in
dec
andb
push
add
add
into
pop
decb
pusha
add
icebp
imul
out
in
push
mov
xchg
test
add
inc
dec
dec
add
popf
pop
mov
adc
clc
dec
inc
add
psubusw
outsb
add
addb
rcrb
push
mov
out
xchg
xchg
fsubs
loope
enter
arpl
push
adc
cli
mov
add
jb
out
xchg
mov
loope
mov
sbb
mov
and
pop
xchg
push
dec
dec
add
popa
aam
fstl
add
jnp
xor
movsl
jb
inc
xchg
nop
push
test
xchg
std
fmull
adc
add
fwait
inc
add
mov
push
mov
jge
pop
in
pusha
add
inc
add
xchg
push
jb
mov
add
cmp
sbb
xor
fldt
add
jns
xchg
adcb
fimull
in
loop
add
mov
mov
rorb
xchg
cmp
inc
rorl
add
or
jnp
in
mov
dec
sbbl
add
mov
lret
jbe
cld
test
push
adc
jecxz
data16
fcompl
add
stc
and
mov
cwtl
jge
mov
mov
xchg
add
inc
add
add
mov
push
add
js
xchg
add
jns
ljmp
mov
or
repz
dec
add
add
cwtl
cld
into
ds
bound
addr16
inc
add
inc
mov
insl
cmpsl
cmpsl
arpl
sbb
shlb
movsl
cmp
jno
cmpsb
icebp
jecxz
stos
jne
xor
stos
pop
mov
rol
shl
inc
and
add
inc
or
outsb
add
push
push
daa
or
cmp
popf
pushf
sahf
adc
cwtl
ret
mov
mov
xor
outsb
add
scas
mov
out
adc
cmpsb
test
imulb
pop
push
outsb
add
test
imul
add
or
xor
push
add
sbb
int
movsb
add
ljmp
test
scas
xor
pop
mov
add
lcall
sbb
rcrl
inc
cmp
test
mov
fdivrl
mov
out
mov
or
std
scas
insl
mov
aaa
add
mov
jns
in
xchg
add
notb
cld
mov
push
push
in
fcompp
inc
clc
or
sub
pop
xchg
aam
dec
rcr
push
add
dec
add
sbb
mov
outsb
add
packuswb
mov
adc
roll
add
rolb
lods
mov
add
add
mov
in
jmp
sbb
ss
and
or
mov
roll
cmp
scas
add
fildll
shlb
sbb
add
imul
popl
and
je
add
mov
mov
xbegin
cmovo
xor
arpl
dec
add
jno
sbb
orb
add
sub
push
adc
lcall
in
or
add
out
xchg
dec
add
ds
inc
fwait
cwtl
inc
push
js
xor
push
filds
fists
lods
and
mov
js
xchg
clc
mov
sub
pop
testb
sub
lea
popa
or
add
in
movsl
cmp
daa
loop
sub
repnz
int
shl
xchg
lret
sbb
sahf
sub
imul
loopne
jge
xchg
pop
sbb
lret
arpl
add
dec
add
mov
jo
inc
and
fdiv
adc
push
mov
call
add
jl
fwait
sbb
decl
orb
and
push
adc
mov
fadds
outsl
push
popa
pop
movsb
sti
pushf
jle
add
pop
rol
aam
add
add
out
out
ljmp
xchg
mov
lods
data16
mov
popf
mov
data16
xor
dec
add
scas
ret
loope
add
jmp
add
out
imul
jno
roll
jge
add
add
lods
adc
hlt
mov
bound
shlb
mov
sarb
sbbl
xor
dec
sbb
inc
out
mov
mov
add
clc
xchg
pop
inc
xchg
aam
mov
fisubl
push
xchg
jge
jmp
or
insb
add
in
jae
dec
add
or
mov
add
fs
xor
cwtl
inc
add
jno
add
jo
add
call
mov
add
jno
sbb
add
enter
add
imul
fiaddl
test
push
mov
pop
sbb
cmp
in
add
mov
xor
add
add
aad
sbb
call
lods
or
add
mov
adc
shlb
add
mov
add
fimuls
pop
in
and
add
push
std
sub
cld
xchg
in
push
or
pop
outsb
add
mov
sbb
les
jl
adc
pop
cmp
lds
hlt
mov
jmp
add
jl
add
lods
push
sti
mov
mov
jae
in
mov
add
cltd
mov
jl
dec
add
imul
aaa
dec
cli
xchg
push
jge
fsubs
movl
add
cmp
fdivr
stc
add
jmp
push
add
out
and
add
sub
or
push
cmp
mov
and
push
jecxz
dec
add
arpl
cmc
jno
add
xchg
jb
jo
add
sub
addl
inc
xchg
mov
mov
xor
out
mov
clc
cmp
jmp
sbb
add
and
movsb
add
add
xchg
daa
lods
imul
clc
test
or
out
cmc
imul
dec
add
leave
inc
test
test
sub
push
jbe
push
rcr
insb
add
adc
inc
in
cmpsb
mov
mov
add
loop
add
sub
add
nop
gs
out
arpl
out
or
add
add
add
add
add
cmpsb
mov
add
add
out
and
lret
inc
xor
stos
ds
fcmovbe
fnsave
mov
add
mov
sub
out
jmp
add
arpl
fldl
pop
pusha
add
adc
dec
adc
stos
sub
shrb
inc
pop
pop
sbb
add
add
in
imul
repnz
aad
dec
add
cmpsl
out
adc
les
int
pop
fstps
xchg
add
mov
sub
out
das
loope
add
loop
jp
subl
add
rcrb
pop
mov
add
pop
xchg
push
cmpsb
ss
stc
test
stos
arpl
add
jle
add
mov
jl
inc
into
test
add
jae
lahf
arpl
pop
ror
stos
adc
xchg
sbbb
add
das
sub
adc
push
inc
add
lret
xor
add
push
nop
pop
and
add
xor
pop
call
je
or
sbb
mov
je
jae
ja
add
xor
mov
shr
aaa
dec
add
jmp
xor
mov
xchg
lret
add
cmp
jle
pop
cwtl
push
add
cmp
cmpsb
in
bound
into
loopne
sti
mov
das
add
movsb
sub
adc
push
mov
add
add
mov
add
popf
jecxz
jle
push
sbb
loope
xor
loop
xor
lret
out
and
lea
xchg
mov
je
xchg
mov
lds
outsb
add
lahf
divl
add
cmp
xchg
enter
mov
in
shlb
ret
iret
xor
add
rol
andl
lock
or
popl
add
sbb
inc
add
aad
cmpsl
outsl
daa
fcoml
cmpsl
sbb
jle
add
sub
jmp
sbb
inc
out
jecxz
arpl
lock
jnp
leave
mov
call
enter
dec
add
or
sbb
xchg
sbb
sahf
fimuls
outsl
andl
cld
pusha
add
pushf
xor
pop
into
movsl
in
adc
jecxz
sbb
dec
inc
fldt
add
xor
jno
or
dec
fildll
daa
dec
add
add
xchg
add
dec
dec
lret
fistl
js
test
hlt
shr
cld
and
jp
orb
add
add
cmp
add
mov
sbb
loop
add
adc
rcl
mov
aas
clc
push
add
add
and
pop
in
xlat
xchg
mov
add
mul
push
sbb
in
fsts
int
lock
add
xor
jns
and
cli
cs
sti
add
outsl
shll
sbb
mov
inc
add
mov
mov
ljmp
xor
cmp
inc
add
and
in
shll
xor
or
je
add
in
aaa
adc
popa
popf
iret
and
mov
mov
push
add
or
mov
mov
sub
fcomi
pop
imul
sahf
lea
inc
std
pop
xchg
out
cmpb
add
jo
xchg
add
aaa
adc
pop
leave
and
inc
add
xchg
dec
cmp
pusha
add
sbb
mov
add
fmuls
mov
das
mov
bound
fdivr
roll
mov
inc
add
add
jne
adc
pushf
push
pop
aad
fldcw
add
push
fsubrl
add
in
mov
test
add
or
jmp
mov
clc
push
mov
jb
ljmp
out
sarl
cld
inc
add
cmpsb
jge
xchg
xchg
orl
cmp
mov
in
jmp
aad
cwtl
repnz
xlat
movsb
sub
add
jb
jmp
std
lea
movsb
lret
movsl
test
in
add
mov
cmp
push
add
push
jg
inc
add
adc
inc
add
add
sbb
cmp
mov
xor
add
push
addr16
push
movsb
mov
push
jae
add
add
xor
fdivrl
lahf
mov
jg
test
dec
add
jmp
imul
mov
lods
xchg
mov
and
jne
call
dec
imul
arpl
mov
or
aad
andb
add
test
bound
aaa
dec
add
gs
inc
xchg
loope
push
mov
mov
lret
rcll
mov
push
data16
push
in
call
pop
hlt
push
pop
or
cwtl
popf
shll
adc
xor
cmp
je
mov
pop
movsbl
leave
mov
pop
mov
out
inc
enter
ljmp
scas
das
nop
lret
sbb
insb
add
mov
cmp
lret
add
aaa
aaa
jbe
add
or
in
out
aad
adc
fs
inc
add
add
daa
sub
and
lret
inc
mov
mov
call
imul
pop
cmpb
into
mov
repz
cld
insb
add
sbb
jg
cmpsl
jg
andl
shlb
jecxz
mov
pop
call
in
fwait
xchg
mov
aam
bound
arpl
icebp
popa
xlat
jp
adc
flds
xchg
pop
pop
mov
adc
push
jle
leave
add
test
cmp
mov
out
sub
cmpsl
and
roll
inc
jb
mov
fstl
sbb
aas
arpl
lret
jnp
fcomip
sbb
scas
cmp
nop
enter
sahf
jg
mov
fidivrs
push
in
xchg
cmp
pop
sbb
fwait
pop
jb
pusha
add
add
sbb
mov
add
adc
sbb
xchg
popa
bound
stos
fnstenv
nop
pop
outsb
add
pop
dec
lea
push
mov
jb
repnz
add
movsb
pop
stos
js
test
sub
or
dec
mov
jle
inc
sbb
mov
push
xchg
ljmp
sbb
inc
pop
xor
test
clc
mov
js
lds
fimull
add
call
insb
add
das
repnz
mov
jne
jecxz
insl
std
push
add
scas
clc
xchg
sbb
pop
push
stos
jb
cmp
int3
jns
pop
sub
fwait
sub
mov
jp
jnp
imul
push
icebp
mov
addr16
int3
mov
push
lcall
ss
div
xchg
idivb
add
cmp
add
push
ss
xchg
shll
mov
add
out
sbb
imul
add
enter
shll
sbb
add
adc
xchg
add
dec
add
sbb
lds
cli
xchg
sbb
in
sub
jle
lahf
adc
add
cld
lds
mov
stc
jmp
add
mov
mov
adc
xchg
push
fwait
mov
aas
aam
adc
mov
add
pop
jmp
push
hlt
inc
fbld
sbb
hlt
in
fistpll
jmp
add
add
add
cmpsl
loopne
je
or
mov
mov
pusha
add
pushf
push
sub
sbb
lret
rcrb
dec
add
mov
add
mov
in
ds
sub
cmp
scas
mov
daa
xchg
jmp
push
nop
xor
lahf
add
dec
mov
and
cmpl
mov
insl
add
sbb
pop
scas
negl
icebp
sbb
test
cmp
in
ljmp
icebp
mov
or
xorb
scas
adc
int
cmpl
sbb
addb
lahf
lock
add
dec
add
add
pop
inc
add
cwtl
dec
add
cmc
mov
adcb
inc
fbld
add
ficomps
adc
or
lret
add
testl
add
popa
adc
push
add
and
aas
adc
jmp
add
test
int
cmp
add
imul
push
imul
lea
bound
xchg
add
in
mulps
sub
push
mov
fwait
test
ret
dec
add
mov
add
outsl
arpl
inc
test
add
add
and
dec
rcl
inc
add
cmovne
or
dec
add
add
imul
sahf
or
call
add
cmpsl
inc
mov
add
leave
cmpsb
push
adc
lahf
sbb
or
add
add
mov
push
add
ss
inc
add
adcb
comiss
push
add
mov
push
scas
call
dec
add
jno
sbb
pop
sub
scas
repnz
cmc
test
push
mov
push
pop
inc
xor
bswap
inc
add
jp
scas
cwtl
sarl
add
int3
loope
daa
pop
sbb
jnp
add
sahf
push
js
out
xchg
mov
and
add
and
xor
cmp
in
div
add
out
in
mov
xchg
test
in
add
jbe
xor
or
ret
inc
add
xor
fcomi
pop
pop
push
sahf
dec
add
push
fistpll
adc
cmp
add
pop
repnz
pop
adc
pop
pop
sub
inc
fmuls
jge
shrl
add
out
adc
js
add
aad
add
xchg
mulb
enter
mov
les
adc
fistl
icebp
into
movsb
push
fistl
add
aad
add
add
pushf
or
cmpsb
push
add
sbb
stos
push
aam
leave
inc
add
ret
push
lods
arpl
fisubrl
add
out
scas
xchg
pop
ret
je
lods
xor
add
fbstp
adc
cld
pop
add
cmp
sbb
xor
shll
js
shll
leave
fmul
aad
and
inc
add
shlb
inc
add
leave
aam
lret
pop
stos
sti
pop
and
popa
jmp
pop
sbb
subb
in
enter
jecxz
out
adc
mov
inc
push
sub
inc
jg
xchg
lcall
lcall
adc
dec
dec
add
dec
add
les
xlat
gs
iret
iret
push
sahf
add
je
dec
add
cmp
cmpsb
movsb
dec
xchg
dec
add
push
jl
add
mov
push
add
rcll
fsts
xor
cmp
add
adc
dec
icebp
or
pop
push
pop
inc
add
cmpsb
mov
pop
in
faddp
fcomps
dec
fldt
jne
sub
pop
sbb
hlt
inc
add
addb
mov
cli
test
out
lds
hlt
imul
add
and
ficoml
jge
cmc
mov
jge
add
jecxz
or
add
dec
add
mov
test
add
cmp
mov
hlt
lret
and
outsl
adc
rcr
aas
dec
out
jne
sbb
shrl
icebp
enter
add
and
mov
cmpsl
lret
jge
push
add
cld
fistl
sub
stos
push
push
add
add
push
roll
sti
push
cwtl
in
cmp
sti
negl
cmpsl
mov
sar
add
push
or
mov
js
or
out
scas
sub
mov
add
sbbb
xchg
out
in
iret
dec
add
add
and
inc
add
mov
pop
bound
pop
je
xor
dec
add
lock
mov
sub
ds
je
fstl
mov
lea
sub
inc
add
imul
pop
mov
ljmp
mov
jecxz
sysenter
and
icebp
jmp
lcall
mov
pushf
sbb
add
mov
test
ficoml
or
stos
pop
push
and
imul
out
cmp
andl
or
aad
outsb
add
insl
xor
std
mov
lock
or
inc
add
add
lret
nop
jg
sbb
daa
pop
setbe
xor
gs
int3
adc
sbb
jp
in
repnz
xor
adc
jnp
cmc
inc
add
mov
mov
pop
cmp
push
add
push
add
mov
add
mov
call
add
and
inc
psllw
in
mov
cmpsl
cmp
int
mov
movsl
cli
add
mov
pop
adcb
add
pop
adc
in
fldenv
movsb
in
add
xchg
dec
add
dec
add
inc
fsubl
fidivrs
mov
push
pop
adc
mov
add
add
dec
add
add
inc
cs
and
in
xchg
out
insl
sub
pop
loopne
ret
add
out
cmp
cltd
cmp
mov
pop
push
xor
sbb
mov
add
inc
add
cmc
mov
add
or
mov
aas
mov
repnz
aad
mov
iret
je
outsb
add
sahf
movsb
in
jae
add
jl
mov
add
ds
ret
nop
mov
call
pushf
adc
lods
mov
out
dec
mov
pop
aaa
stos
out
xchg
add
add
mov
add
add
inc
mov
mov
cmp
adc
aad
adc
pop
pop
fsubl
push
adc
pushf
mov
adc
cmp
xchg
aaa
fldt
std
push
idiv
fsubrs
add
ss
loopne
movl
add
mov
scas
or
and
pop
dec
add
adc
add
loop
add
add
mov
jae
sbb
aam
add
push
imul
adc
or
pop
test
add
inc
add
mov
adc
movsb
or
add
pop
mov
add
push
and
aam
cmpsl
test
jmp
fmuls
add
add
and
add
ss
add
push
add
enter
add
clc
rcrb
push
int
roll
mov
rorb
fisttpl
lods
mov
jl
pop
cmpsl
push
insl
mov
jecxz
out
incb
lods
subb
pop
roll
mov
rorl
adc
push
add
push
jge
dec
add
push
add
popa
imul
add
jmp
test
inc
add
jp
mov
movl
xchg
xor
dec
add
sahf
into
or
cmc
cmp
shlb
mov
rep
ss
cmpsb
cld
pop
pop
add
repnz
push
add
pop
rcrl
fsts
add
cwtl
sub
imul
push
mov
push
stos
test
add
jmp
dec
and
movsb
decl
add
fiaddl
adc
dec
cmp
cmpsl
lcall
and
pop
js
movsb
dec
outsl
nop
outsb
add
popf
jecxz
call
ja
add
testl
cmpl
xchg
add
inc
add
fidivrl
xor
push
hlt
push
add
mov
lret
xchg
inc
ja
popf
pop
in
xorl
int3
mov
mov
movsl
xchg
pop
fimuls
clts
add
inc
jno
push
mov
add
push
adc
mov
add
xor
dec
loope
aad
add
push
mov
in
out
aad
add
cmp
adc
adc
and
sub
cmp
push
or
mov
sub
push
cld
lods
xor
fistpll
popa
pusha
add
lods
dec
cmp
sbbl
jne
add
js
sahf
cmp
loope
add
loope
jp
out
aad
and
in
fisubs
cltd
outsl
or
mov
add
dec
add
xor
aas
cmp
sar
lods
rclb
enter
push
daa
mov
mov
lahf
push
xchg
adc
bound
mov
clc
lock
sbbl
add
sarl
loope
cmpsb
adc
shl
scas
imul
psllw
sub
sbb
pop
xor
add
sub
dec
add
or
popa
cmpsl
push
inc
add
in
add
jbe
dec
divl
fldcw
add
jg
pusha
add
add
ds
inc
add
js
sub
sbb
cltd
aad
lods
push
repnz
sub
stos
cltd
dec
mov
adc
jae
in
ljmp
test
test
xchg
hlt
rep
add
std
xor
and
jnp
mov
cmp
add
jns
and
jp
insl
divps
jnp
std
add
inc
add
mov
add
inc
add
mov
sbb
lret
popa
test
push
ret
sub
adc
bound
je
icebp
out
jnp
push
sbb
ficompl
in
sbb
jns
adc
cmp
iret
dec
or
clc
je
aaa
inc
push
das
xchg
inc
pop
pop
mov
or
stos
push
das
in
and
xchg
fs
sub
add
inc
fdivp
push
jl
xor
les
add
repnz
add
dec
push
sbb
cli
leave
cmpsb
outsl
lods
inc
or
xchg
aas
scas
push
mov
add
shll
and
scas
js
mov
lcall
push
push
sbb
pusha
add
add
inc
add
movq
jne
sbb
cs
inc
add
lahf
ja
adc
lahf
mov
jg
insb
add
add
mov
ds
out
sub
lcall
add
add
or
pushl
adc
cs
sbb
mov
mov
cmp
int
or
add
adc
xchg
pop
mov
jecxz
add
inc
cmpsl
cmp
cwtl
aad
add
add
add
ljmp
aaa
push
jns
inc
ljmp
movsl
cltd
rcl
enter
shl
jno
add
clc
sbb
pop
cmp
add
iret
adc
in
mov
and
fisubl
cs
or
jg
pop
test
push
inc
dec
lcall
pop
cwtl
and
loope
fwait
cmpsb
int3
lods
rorl
int3
sbb
mov
adc
fistl
mov
arpl
les
pop
xchg
aam
adc
mov
and
add
add
repnz
inc
fdivs
xchg
mov
or
cmpsl
les
fldcw
add
push
idiv
test
add
xchg
push
hlt
bound
mov
jl
mov
xor
mov
dec
add
add
add
jnp
mov
sti
fldt
add
ret
push
dec
add
inc
add
ss
loop
mov
add
mov
pop
jp
out
stos
mov
out
dec
icebp
lods
mov
or
adc
enter
add
fnsave
push
scas
mov
ficoml
sbb
cli
inc
imul
add
xchg
cmovnp
nop
mov
push
add
lahf
int
cmp
or
mov
push
mov
push
sahf
clc
cmp
xor
mov
or
hlt
adc
stos
ds
fwait
mov
ficomps
cli
xchg
test
adc
outsl
mov
push
xor
out
jno
add
sbb
cmp
add
pop
mov
cltd
dec
mov
mov
jae
adc
add
bound
mov
add
je
enter
sub
lods
add
add
add
push
in
mov
dec
dec
add
dec
adc
add
outsl
cmp
adc
in
test
sub
in
add
loope
and
jle
dec
add
add
mov
loop
dec
add
mov
jg
fidivs
shlb
add
dec
add
sbb
dec
sbb
cmp
add
mov
xchg
sub
add
jne
dec
test
add
adcl
fwait
or
aaa
mov
jmp
je
mov
pop
outsl
movsb
add
movsl
js
mov
inc
add
add
pop
pop
mov
cmp
cmp
xlat
mov
mov
divb
shll
add
xor
add
add
adc
add
and
lahf
pusha
add
mov
jp
dec
mov
mov
into
nop
jl
add
add
add
mov
jnp
shl
xchg
add
lcall
mov
xchg
mov
push
add
mov
and
add
add
ja
jne
in
and
cmpsl
push
jae
adc
xchg
inc
movsb
mov
cmp
cltd
enter
mov
inc
add
add
pop
imul
add
popf
or
enter
shll
in
es
cmc
jo
push
cli
fiadds
icebp
loopne
ret
outsb
add
pop
pop
xor
js
bound
and
xor
pop
jecxz
xchg
cltd
and
test
sarb
lcall
add
test
add
int3
aas
add
mov
aaa
mov
and
or
sbb
dec
xchg
ret
jg
popl
sub
ficompl
mov
out
mov
lret
jmp
lahf
inc
add
inc
insl
paddsb
test
jecxz
mov
fs
xor
inc
div
sbb
in
mov
mov
mov
ss
push
add
add
gs
add
add
add
enter
sub
cmpsb
stc
push
int3
mov
iret
push
or
lret
mov
add
negb
popf
imul
movq
pop
mov
push
add
test
fidivrs
xor
add
fists
xor
jbe
sbb
xchg
insl
or
in
jb
jb
mov
xchg
push
clc
mov
aad
aad
sbb
add
add
mov
cmp
iret
inc
iret
loopne
mov
add
sbb
gs
call
add
mov
js
adc
nop
int
hlt
xchg
loopne
insb
add
xlat
pop
adc
test
ret
add
scas
loopne
adc
and
ret
push
pop
xchg
jp
or
idivb
dec
add
jl
add
add
cmp
add
in
mov
lcall
xlat
jle
insb
add
and
fiadds
add
push
rcl
mov
in
dec
add
or
adc
push
mov
fnstenv
popa
ficompl
lods
add
dec
iret
inc
add
cltd
repz
add
add
add
movsb
loopne
mov
cmc
mov
ds
jne
sub
inc
add
add
mov
jecxz
add
faddl
xchg
sti
jb
in
fiadds
mov
loope
jnp
sbb
xchg
cltd
cmp
lods
fnsave
xorb
out
cld
je
add
add
adc
add
add
out
mov
call
add
xor
lret
mov
add
mov
adc
cmp
ss
add
fildl
lret
sbb
pop
ret
iret
shrl
pop
pop
push
sti
test
pop
stc
xor
add
std
jae
add
mov
bnd
inc
mov
icebp
cmpsb
cmpb
popa
or
daa
inc
lods
and
cmp
je
mov
push
fistpl
jo
std
xchg
aad
call
aas
sarl
clc
inc
add
dec
lods
jp
ss
add
add
add
pusha
add
mov
add
lods
inc
add
lret
loop
add
or
test
sbb
mov
adc
inc
add
adc
inc
stos
jmp
popa
adcl
loop
loop
scas
mov
push
add
and
mov
adc
add
lret
dec
add
xchg
mov
fistpl
mov
aaa
and
cmpsl
pop
shll
addl
cmpsb
sbb
cmp
dec
add
add
call
add
add
decl
push
add
pop
push
mov
mov
jge
test
cld
push
xchg
std
pop
stos
and
loopne
cmp
mov
aam
add
add
imul
pop
fistpl
sub
mov
mov
mov
jmp
xor
mov
iret
inc
add
fucomi
pop
lds
sarl
repnz
movsl
jg
lret
mov
add
add
xor
push
jns
rcrb
add
lahf
lods
adc
dec
add
mov
or
mov
ja
shlb
imul
add
lods
dec
add
arpl
and
mov
jnp
out
push
aam
jp
imul
xchg
insl
push
add
jl
or
mov
fwait
insl
repz
clc
add
push
je
jns
pop
imul
dec
add
push
jle
add
mov
cmpsb
andl
mov
je
add
xor
mov
fisubs
pop
inc
imul
fistpll
adc
xchg
insb
add
add
and
movsb
subl
add
dec
add
jge
adc
stos
xchg
cli
push
add
pop
or
xor
lds
cmp
add
push
arpl
cmpsl
aam
js
pop
fsubs
sbb
mov
cmpsb
inc
add
outsb
add
adc
imul
pop
insl
cmp
fnsave
add
add
xchg
adc
in
shll
inc
add
shlb
adc
dec
inc
add
clc
test
adc
out
push
or
inc
add
sti
push
inc
add
mov
inc
sub
insl
ds
sub
sbb
scas
or
adc
stos
and
cltd
into
mov
mov
les
or
je
mov
mov
shll
pop
xchg
dec
add
roll
xorb
mov
lds
repz
sub
mov
cmp
add
nop
fwait
sub
mov
push
rcrl
cmp
and
rol
pop
xchg
or
les
add
dec
popa
sub
out
les
xchg
xchg
out
cmp
and
mov
lods
dec
ljmp
push
add
dec
add
xor
outsb
add
ficoml
lea
faddp
icebp
test
xchg
sarl
push
and
rep
out
hlt
pushf
loopne
fnstsw
add
add
mov
jle
inc
stc
loope
dec
or
dec
lods
lea
inc
add
add
adc
pusha
add
js
hlt
adc
or
loopne
fldcw
xor
add
pop
outsl
xor
pop
std
cmc
add
add
mov
add
push
aas
loope
outsb
add
xor
insb
add
add
xchg
movsl
sarl
movsb
jne
mov
jg
push
mov
and
xchg
pop
xchg
pop
jmp
pusha
add
imulb
iret
inc
add
add
cmpsb
mov
sbb
stos
and
gs
add
push
fs
jle
mov
sub
hlt
fwait
mov
in
add
popa
cmp
jns
sar
add
mov
mov
xor
add
ljmp
dec
add
dec
lea
hlt
push
sbb
aas
lods
sbb
out
add
leave
sub
inc
add
adc
icebp
sub
mov
mov
mov
inc
pop
lods
inc
mov
stos
hlt
mov
xor
das
sahf
mov
fmuls
lods
jecxz
or
hlt
cld
xor
mov
repnz
lock
test
pop
mov
cld
mov
add
pop
clc
fcomps
inc
repnz
nop
shll
addr16
jle
sub
pop
mov
pop
adc
pop
jmp
inc
add
sbb
xchg
mov
lods
jmp
shr
call
sub
push
jmp
add
aam
adc
sub
in
and
or
fmull
push
mov
ret
sbb
inc
mov
inc
add
lahf
addl
ds
cmp
rol
push
push
dec
add
sub
fcomps
int3
jo
test
lcall
imul
lods
stc
push
add
nop
mov
pop
jmp
sbb
inc
add
add
dec
push
cltd
mov
or
inc
add
inc
into
call
sub
xor
add
movl
test
push
iret
sbb
push
add
mov
dec
mov
add
loopne
add
mov
cltd
xorb
ljmp
scas
or
add
add
dec
add
out
adc
mov
inc
pop
xchg
leave
insl
imul
les
jle
std
add
cli
adc
jle
add
in
add
xlat
neg
popa
sbb
fadds
xor
jae
pop
call
rcrb
decl
shl
addr16
inc
add
add
sub
xor
bound
jle
add
add
push
fldt
add
add
add
stos
jnp
loop
add
add
xlat
mov
test
icebp
or
std
lret
outsl
cwtl
in
aam
jae
xchg
inc
add
movsl
mov
xchg
ret
rorb
cmpsl
pop
mov
jmp
jecxz
add
add
push
cmp
pop
into
out
dec
xor
ror
add
inc
add
add
cli
outsl
add
popa
pop
push
sahf
ds
fldcw
call
inc
add
out
and
pop
mov
and
cmpl
cmp
xor
add
in
inc
add
int3
loop
pop
sub
test
mov
lea
ret
gs
xor
jmp
jl
inc
add
inc
pop
test
add
pop
mov
sbb
pop
orb
adc
sbb
cmp
jb
sub
jp
ret
add
insl
test
add
xor
cmp
xor
jbe
cld
ja
incb
sbb
in
lcall
neg
inc
mov
mov
mov
add
dec
add
jmp
add
addr16
fstl
sbb
jg
movsl
push
add
daa
scas
cld
sarl
insb
add
sti
fisttpll
es
lods
addl
scas
xlat
mov
ret
xchg
test
add
icebp
icebp
out
xor
and
mov
fsts
jge
xor
lock
xlat
inc
add
jno
lods
push
add
nop
pop
imul
push
add
sarb
leave
jmp
mov
and
ficompl
bound
mov
dec
ja
out
push
cli
cltd
notl
pop
outsb
add
dec
add
je
mov
mov
fildll
add
int
push
dec
add
xchg
add
mov
fldenv
add
cli
pop
mov
sbb
inc
add
in
call
adc
add
in
addb
pop
xchg
mov
pushf
sub
sub
xor
add
add
fadds
xor
push
cmp
imul
call
fmull
add
push
jnp
dec
push
add
add
sub
in
mov
repnz
jnp
pop
dec
add
xor
fcomps
cmp
popa
sbb
cmp
loopne
lock
add
add
or
mov
sub
jns
cmp
das
mov
xchg
or
xor
cmp
adc
add
inc
add
adc
mov
subb
fdivr
mov
in
add
icebp
inc
xchg
or
inc
stos
mov
mov
sbb
outsl
pop
and
inc
add
add
rcll
mov
fdivl
add
mov
and
pop
jne
jle
ja
mov
mov
jg
add
fisttpl
leave
mov
je
or
pop
jbe
sub
xor
movsl
cwtl
jmp
mov
jo
shlb
mov
add
jl
out
nop
pop
test
daa
cld
hlt
add
in
mov
std
add
and
cmp
int
movsb
int
adc
jno
adc
ror
push
sub
mov
leave
xor
dec
add
add
sub
fldenv
std
jnp
push
add
out
fmull
or
jb
adc
movsl
adc
jne
leave
mov
cmp
pusha
add
icebp
xor
push
add
push
outsb
add
imul
les
fdivl
push
add
test
loope
add
add
pop
out
and
pop
jg
bound
mov
add
add
mov
out
xchg
sbb
in
xchg
sub
sbb
cmp
call
add
mov
popf
jge
or
cmpsl
dec
add
aad
or
les
add
push
xor
add
sbb
add
lret
jno
and
jp
popa
sbb
sbb
mov
mov
add
stos
rcrl
add
sbb
insl
ret
out
mov
fsubl
cmpsb
in
notb
and
inc
mul
les
add
rorb
jno
mov
in
add
push
shrl
nop
push
cmc
or
inc
bound
bound
dec
add
dec
dec
add
and
add
add
cmp
cmpsb
shll
sbb
add
insl
in
insb
add
mov
pop
inc
cmp
and
nop
scas
push
pop
cmp
dec
add
ds
into
loopne
xchg
cmc
sub
or
push
add
jp
repnz
sub
cmp
hlt
xor
mov
jbe
add
inc
add
inc
add
or
add
add
shlb
push
adc
add
and
ljmp
test
lcall
sub
imull
shlb
lock
add
nop
push
data16
xchg
outsl
pop
popa
and
ja
jmp
das
push
lret
push
insb
add
mov
inc
add
cli
fwait
movsl
in
sbb
xchg
hlt
jns
jno
dec
add
call
jle
and
mov
icebp
push
add
stc
mov
bound
jp
jg
xchg
add
cmp
add
pop
repnz
mov
cmp
jecxz
cwtl
imull
push
in
sub
mov
xor
xor
inc
add
jae
add
rorb
repnz
and
dec
add
es
dec
add
in
add
adc
rcll
sahf
xchg
cmp
and
cmpb
int3
int
mov
jbe
sbb
xor
jmp
aaa
cmp
or
inc
xchg
dec
add
fxch
pop
lea
cmpsl
ret
mov
test
int3
arpl
sbbb
loope
mov
ret
jge
add
pop
push
add
aas
jne
dec
xchg
mov
imul
test
push
add
adc
mov
out
jmp
add
sbb
add
dec
add
cmp
mov
mov
add
sbb
pushf
daa
xor
imul
pushf
ds
pop
idivb
and
dec
add
fisubs
mov
push
jnp
cld
pop
pop
pop
imul
jg
cmp
pop
cs
mov
lds
sub
mov
xchg
adc
jge
mov
cmp
pushf
mov
jb
shrb
ja
cltd
xchg
push
lods
or
movsb
inc
add
pop
testb
scas
mov
dec
jo
add
not
xor
lods
or
ljmp
inc
mov
call
add
add
lods
inc
lds
push
clc
mov
cmpsl
add
xor
fdivl
mov
mov
repz
pop
enter
fsts
lds
mulb
add
pop
pop
sub
pop
leave
mov
cmp
add
imul
lret
incb
out
loopne
jo
lea
dec
mov
add
sub
mov
sub
push
inc
add
loope
mov
add
mov
mov
gs
pop
sub
and
outsb
add
pop
jecxz
negb
push
cmp
pushf
jbe
movsl
test
push
jp
or
inc
sbb
movsb
fwait
in
mov
xchg
inc
add
dec
fwait
add
addr16
inc
popa
push
jmp
jne
sbbb
mov
add
adc
cmp
scas
bound
push
mov
dec
add
adc
in
add
inc
add
pop
ljmp
lcall
add
pop
inc
add
jnp
aaa
push
test
jb
add
mov
xchg
xlat
jae
cmp
outsl
jno
push
pop
shl
add
add
cmpsl
and
pop
pop
mov
ss
xchg
call
int
inc
add
shlb
icebp
cmc
jl
push
mov
push
roll
jmp
push
movsl
das
lahf
mov
ja
ds
push
jg
jbe
sub
addr16
shr
pop
icebp
xchg
in
add
out
add
inc
add
pop
popa
or
xor
sbb
fmuls
mov
push
xor
push
dec
mov
sub
pop
lock
into
mov
mov
adc
mov
xchg
into
adc
sub
xchg
jae
xchg
sbb
push
mov
jg
das
adc
sbb
dec
jne
pop
ds
jne
lds
or
cmc
sub
push
mov
subl
aam
pop
cld
xor
jp
dec
addb
fcmovnu
xor
ffreep
mov
add
mov
ret
jmp
aam
add
xor
mov
hlt
les
out
adc
shl
pushf
pop
rcr
je
mov
cmpsl
test
add
add
dec
xor
add
mov
ret
add
add
dec
repz
jnp
xor
jae
cmp
push
add
jbe
xchg
push
imul
xchg
cmp
rorl
pushf
xlat
into
xchg
mov
xlat
icebp
mov
lret
aas
enter
movsb
and
ja
inc
add
add
jmp
or
and
push
mov
aaa
sbb
dec
enter
stos
lods
test
in
clc
push
add
scas
cmp
movsl
ret
inc
add
arpl
out
jle
add
add
cmp
daa
jmp
flds
jno
pusha
add
add
pop
cld
ficoms
push
jp
add
inc
add
xor
pop
mov
aam
aad
fs
iret
ds
mov
add
gs
add
mov
aaa
mov
jbe
aad
jp
jp
xchg
addr16
push
jne
or
insl
gs
dec
sbb
stos
dec
adc
dec
add
pop
cmpsl
mov
dec
push
sbb
mov
test
pop
jecxz
dec
add
rolb
ret
in
cmp
push
inc
insl
scas
in
fimull
arpl
xchg
sbb
xor
fcmovnb
jbe
add
pusha
add
movsl
stc
or
add
jae
dec
add
sbb
jg
popf
stos
dec
add
adc
jnp
sub
pop
xchg
pop
fistpl
cli
cltd
or
pop
add
cmp
lock
pop
add
and
lret
pop
jae
leave
inc
push
in
xchg
insl
jno
sbb
in
inc
add
add
dec
sub
or
or
enter
cwtl
loop
pop
clc
pop
mov
pop
leave
test
add
repz
lds
dec
add
push
pop
aam
add
int3
cmp
in
mov
xchg
rcl
in
xor
add
push
xchg
call
lret
outsl
pop
jnp
jecxz
rcrb
arpl
cmc
mov
out
and
punpckhbw
dec
xchg
push
cmpsl
dec
add
cmp
push
jmp
add
sub
push
mov
in
insb
add
push
pop
fsubrp
jle
push
mov
xchg
push
jbe
inc
add
adc
add
mov
inc
add
clc
xchg
and
sbb
add
aas
cmpsb
pop
sarb
jle
pop
rorb
xlat
arpl
pushf
mov
incl
pop
cmpsl
adc
add
sub
xchg
stos
pop
test
and
mov
adc
popa
out
adc
inc
jge
ds
das
je
and
cmpsl
lock
popf
sbb
bound
jne
mov
ja
cmpsl
inc
pusha
add
xchg
push
sbb
xchg
ret
pop
cwtl
or
pusha
add
aaa
std
jbe
xchg
mov
lret
add
dec
sbb
push
js
test
pop
out
cmp
add
imul
jb
add
mov
add
mov
and
add
adc
rcll
jnp
inc
jg
in
enter
clc
out
jl
push
jge
add
add
add
pushf
mov
shll
lret
jmp
inc
add
and
imul
ljmp
ret
push
data16
cld
dec
add
add
pop
add
and
cltd
push
in
lret
pop
ljmp
and
outsb
add
jb
cltd
push
xorl
add
lods
add
mov
jecxz
add
sbb
in
out
dec
rcrl
add
jmp
xor
jmp
roll
jno
add
sbb
in
add
imul
cwtl
mov
popf
shl
inc
cmp
gs
xchg
xorl
sahf
dec
pop
mov
push
mov
add
pop
ljmp
cmpl
das
loope
clc
rcrb
test
lcall
pop
mov
jl
sbbl
outsb
add
sbb
mov
lahf
inc
jmp
adc
mov
imul
add
ljmp
add
int
add
adc
add
fisubrs
add
mov
jg
pop
cld
xchg
sbb
sti
out
test
cmp
sbbb
add
add
add
mov
icebp
cmpsb
sqrtps
xor
or
sub
mov
and
sbb
push
sub
xor
stos
lret
mov
sarb
adc
inc
add
into
call
aam
jmp
inc
dec
cld
aas
cmp
and
add
mov
fists
sahf
arpl
bswap
outsl
mov
mov
daa
or
cmpb
lcall
add
and
in
mov
cs
push
adc
ret
mov
cltd
scas
nopl
sub
jl
cmp
lea
pop
sbb
dec
pop
out
bound
push
push
xchg
fldl
jns
add
add
adc
cmp
sbb
and
out
pop
sub
in
loop
fmuls
mov
and
out
mov
mov
or
and
mov
push
sub
out
lret
xor
stc
stos
inc
pop
mov
add
stos
loope
lret
dec
cmp
cwtl
or
add
leave
das
rorl
dec
add
add
and
lods
push
add
xchg
inc
sbb
pop
mov
xchg
sub
stc
push
and
pop
lret
add
dec
dec
add
mov
ss
cmpsb
push
and
cld
and
shrb
add
adc
jae
sbb
xlat
fdiv
je
je
out
js
adc
sbb
cmp
out
addr16
dec
inc
add
cmpl
orb
cmc
fcomps
xchg
lods
cmc
imul
or
cmp
jp
mov
aas
xchg
add
fcmovbe
or
rclb
das
and
dec
fs
cmpsl
jbe
jne
add
imul
inc
add
push
cmp
add
xchg
xchg
dec
outsl
shlb
cmp
inc
add
xor
push
add
add
inc
add
loop
mov
imul
inc
sahf
int
and
lds
rcrl
or
push
loopne
adc
je
addr16
addr16
sub
jp
jp
fwait
out
cmp
add
rcrl
lods
lock
mov
add
add
mov
push
add
cld
test
xchg
jmp
int
std
inc
add
push
mov
mov
lcall
add
in
addl
mov
mov
jg
int
fnsave
leave
cmpl
mull
xor
add
imul
mov
loop
and
divb
in
out
xchg
add
pop
js
cld
pop
int
add
jne
adc
enter
and
inc
ret
mov
add
push
add
or
and
or
push
jge
mov
ror
xor
stc
bound
aaa
in
scas
pop
fmulp
cmc
mov
cmpsb
and
js
fsub
jg
in
dec
loope
dec
add
add
cmpps
repnz
addr16
fsubrs
add
pop
mov
fdivrs
outsl
lea
pushf
jp
jns
mov
pop
xchg
cmc
jae
lea
mov
xchg
cmp
add
into
mov
add
lods
add
aaa
ret
mov
and
push
lock
mov
and
movsl
sub
cmp
mov
lds
and
insb
add
stc
xlat
int3
cs
mov
stc
scas
roll
add
mov
testb
push
sub
js
movsb
into
sbb
addr16
mov
imul
push
add
add
lahf
sbb
sbb
mov
add
pusha
add
mov
add
fstps
loop
loop
adc
add
lds
adc
push
adc
cmp
ja
jno
add
adc
xchg
das
jecxz
insb
add
cmpsl
xor
aaa
call
addr16
add
xchg
mov
sbb
add
push
sub
mov
mov
jl
add
js
mov
or
mov
xor
fisubrs
jb
inc
fnsave
inc
add
adc
cmp
loop
add
add
mov
cmp
xor
in
add
lods
stos
mov
add
mov
bound
xchg
movsb
test
add
push
sub
mov
xchg
xor
enter
add
xor
adc
mov
lods
sbb
lea
add
punpcklwd
xor
in
xor
into
push
in
pop
push
xor
add
cld
add
mov
icebp
or
loop
out
and
fwait
push
jge
jns
outsl
repz
outsb
add
call
mov
add
popf
cltd
cmpsb
shrl
out
mov
add
add
repnz
jmp
cld
arpl
mov
lods
add
jp
jge
jne
cmp
leave
push
add
push
and
sti
clc
mov
out
jb
data16
enter
sbb
stos
xor
pop
sbb
aad
and
mov
add
popf
das
orl
adc
dec
add
add
lcall
pop
shlb
add
mov
jge
mov
add
xchg
icebp
sub
cld
and
cld
xchg
jmp
addr16
add
cld
push
add
ja
add
mov
dec
add
inc
add
and
test
pop
fwait
xor
jg
imul
sub
add
inc
add
xchg
bound
sbb
adc
mov
mov
push
call
in
lea
aaa
cmp
sbbl
sub
xchg
jo
in
repz
add
add
mov
push
add
popf
and
mov
int
insl
add
add
inc
add
call
or
xor
jnp
add
and
test
xor
add
add
mov
les
sbb
je
add
cmp
add
inc
push
or
dec
ds
in
pop
mov
sahf
xchg
dec
add
in
xchg
test
adc
mov
jno
mov
aaa
pop
fisubs
or
sbb
jge
aas
push
inc
add
inc
add
dec
add
jge
add
loope
pop
insb
add
fwait
or
test
add
cmc
call
xchg
dec
cmp
xor
cmp
lods
cmc
sti
and
scas
mov
icebp
or
add
scas
lret
mov
nop
sub
pop
fsubrs
lods
loopne
shl
pop
in
out
sbb
adc
and
bound
popa
hlt
xchg
outsl
mov
jle
ret
xchg
and
das
dec
add
ficoms
inc
cmp
gs
popa
jmp
into
lahf
ret
add
mov
movsb
sub
add
mov
jno
jns
div
pop
out
or
xor
int
push
add
negl
cmp
pusha
add
add
xchg
mov
pop
lret
add
fs
flds
push
add
add
popa
adc
outsb
add
mov
add
mov
jae
and
pop
inc
add
mov
mov
lea
add
add
sbb
xchg
aas
xor
lods
push
cld
std
sub
cmc
jno
xor
pop
mov
add
into
or
aas
rolb
add
dec
add
loopne
add
bound
mull
in
in
int3
ja
shll
add
push
add
cli
fsubr
sub
add
adc
sbb
fiaddl
add
stos
cmp
jb
jo
xchg
shlb
mov
ds
sub
jmp
mov
pop
loopne
add
push
push
insl
pop
jmp
outsl
pop
std
jo
int
add
xlat
dec
push
or
push
imul
pop
aas
add
push
les
adc
xchg
add
imul
repz
mov
add
add
push
add
rorb
xchg
mov
jecxz
fcompl
push
inc
orb
sarl
add
mov
lahf
js
bnd
or
and
lods
xchg
cld
int
ret
arpl
scas
pusha
add
mov
jmp
xlat
inc
jmp
and
lcall
loop
jbe
add
iret
jmp
daa
xor
sub
sbb
mov
pop
pop
pop
inc
add
mov
lods
inc
add
filds
push
mov
rcrl
push
add
add
dec
fmuls
dec
mov
push
mov
mov
repz
imul
push
jns
xchg
inc
add
push
push
sti
in
sub
ret
mov
rcl
adc
hlt
je
lock
add
or
lock
pop
les
xchg
mov
cmp
xor
les
addr16
cmpsb
add
inc
inc
add
arpl
aas
add
pop
shl
mov
mov
in
mov
sub
std
mov
xchg
outsb
add
xchg
dec
xchg
lret
pop
add
icebp
sbbb
enter
sbb
inc
cmpsb
sbb
lea
sarb
scas
clc
popa
imul
pop
mov
add
rclb
adc
adc
daa
ljmp
push
pop
pop
and
pusha
add
xor
mov
add
fnsave
in
incb
repnz
repz
push
lds
add
sbb
je
popf
jne
shrl
fs
xor
add
add
inc
add
and
and
cli
mov
add
arpl
add
add
andb
shll
lret
addl
jl
pop
xchg
and
cmp
sub
inc
ficomps
add
lock
inc
dec
add
or
lock
pop
loop
mov
push
add
xchg
incb
add
je
loope
inc
call
mov
and
sub
mov
inc
add
loopne
add
add
add
cmp
add
sub
sub
fildll
add
push
dec
add
pop
xor
add
add
add
xor
scas
inc
imul
xchg
addl
cmc
clc
test
out
dec
cmp
or
in
adc
jnp
decl
mov
outsb
add
cmp
add
aam
add
add
mov
pop
pop
mov
subl
jns
add
add
mov
cmp
js
add
popf
data16
or
mov
jne
add
dec
add
iret
xorb
loop
in
jbe
jne
add
inc
add
mov
addl
gs
incl
cmc
sub
dec
add
sti
mov
imul
mov
das
ficoml
pop
xor
sub
subb
mov
enter
xor
or
frstor
add
push
inc
mov
pop
mov
mul
sub
out
in
jl
sldt
aam
sub
push
mov
jmp
mov
cmc
cmp
or
add
lods
scas
or
ja
pop
and
xchg
sbbb
mov
cmp
dec
roll
add
test
mov
add
add
mov
xor
daa
shll
add
pop
mov
or
adc
jp
add
jne
add
mov
jnp
stc
or
lret
mov
add
add
pop
fstps
sbb
push
negl
xor
add
fwait
mov
add
push
add
pop
fsubl
add
sahf
leave
adc
cmp
add
add
lret
in
pop
insl
addr16
xor
pop
les
pop
cmp
inc
add
dec
dec
add
sub
in
fstl
adcl
aaa
or
add
add
add
inc
add
bound
into
xor
sub
mov
movb
jb
and
inc
jecxz
cmp
and
pop
mov
insl
in
push
inc
jbe
xorb
dec
add
adc
push
push
test
xchg
addr16
push
out
mov
out
push
push
push
inc
test
xchg
pop
in
arpl
xor
in
ret
in
mov
push
mov
imul
hlt
aas
push
sub
divb
lock
inc
add
or
aam
hlt
mov
jbe
outsb
add
mov
sbb
ret
cmp
cmovo
sbb
adc
out
iret
sub
xchg
pop
mov
mov
sbb
mov
dec
inc
cmp
xor
scas
mov
mov
into
sbb
jecxz
std
mov
lock
push
insb
add
into
sbb
pop
add
mov
dec
cmpsl
subl
cli
add
inc
inc
add
filds
add
inc
mov
push
int3
adc
gs
fcoms
xchg
cmc
or
lcall
push
xlat
enter
push
ss
add
mov
mov
imul
or
and
push
add
test
push
lea
mov
fcmovu
pop
or
mov
mov
in
arpl
cltd
scas
adc
sub
xchg
mov
sbb
mov
xor
push
repnz
sub
das
scas
shll
jbe
dec
add
add
add
dec
add
and
in
aam
out
add
push
mov
imul
cmp
jns
fs
lock
test
inc
add
pop
mov
add
mov
sbb
mov
jge
xchg
jecxz
mov
cmp
popa
jecxz
fiaddl
or
jl
add
mov
int3
dec
add
mov
add
mov
test
mov
and
add
add
or
mov
push
pop
jecxz,pt
or
cmp
leave
sti
xor
in
add
xchg
pop
cmp
fstl
cmp
dec
call
add
pop
dec
add
mov
jnp
rcrb
jno
gs
add
out
cwtl
add
xchg
loope
jo
add
inc
imul
mov
lret
adc
repnz
push
dec
dec
add
dec
add
inc
add
enter
mov
mov
mov
sub
mull
add
daa
or
ja
xchg
lcall
inc
add
pushf
mov
jae
ret
sub
xor
pop
add
jl
pop
fmul
push
sub
out
iret
repz
scas
jns
icebp
cmpsl
mov
insb
add
jecxz
imul
sbb
add
aaa
add
add
pusha
add
repz
push
inc
add
ja
jg
ret
jbe
dec
scas
adcl
frstor
pop
add
subl
add
pusha
add
popf
sbb
sbb
add
jle
sbb
mov
xchg
xor
pop
lock
nop
jb
loope
fwait
in
dec
jle
xor
add
xor
pop
add
sub
in
shlb
add
xchg
fxch
and
loope
lds
inc
add
loope
or
jnp
ret
fcomip
push
add
xlat
xchg
addl
mov
jnp
notb
lods
adc
adc
fwait
cmp
outsl
sub
andb
add
enter
adc
jnp
add
and
fstl
jl
lods
mov
daa
movsl
push
add
pusha
add
cmp
adc
cmpsb
hlt
or
inc
out
add
fcmovnbe
popf
and
arpl
sub
mov
jo
fisubl
adc
adc
lods
pop
push
in
or
push
ja
pop
dec
xor
inc
add
fcoms
ret
fsub
pop
push
adc
add
ficomps
sahf
and
or
pop
test
pop
aaa
and
aas
push
sub
dec
add
in
outsl
pop
shrl
add
push
lods
rclb
js
dec
add
xor
inc
pop
ds
leave
gs
push
lret
in
lock
add
jle
aam
jbe
add
jnp
dec
js
scas
pop
xchg
inc
add
cmp
call
movb
lret
sbbl
cmp
fbld
out
stc
inc
add
out
inc
mov
mov
add
mov
cld
outsb
add
xchg
arpl
lret
outsb
add
push
fists
in
or
pop
xchg
testb
jnp
add
enter
add
mov
cmp
add
test
xchg
pop
cli
inc
test
jmp
and
pusha
add
in
lock
sub
enter
push
mov
mov
insl
dec
xchg
fmull
pop
lods
pop
into
lahf
ds
mov
jne
jg
jo
xor
testl
in
sub
imul
sti
jmp
add
push
sar
xchg
imul
and
or
cli
sbbl
icebp
sbb
pusha
add
xchg
out
add
jg
sbb
stc
dec
daa
push
fldenv
lahf
mov
mov
add
jge
sbb
in
dec
movsl
mov
push
and
and
push
dec
add
js
mov
xchg
cltd
add
add
mov
lock
into
xchg
mov
push
dec
adc
lahf
push
insl
ret
aaa
imul
pop
data16
mov
push
mov
push
pop
mov
sarb
cs
pop
xchg
ret
fidivs
test
sahf
xchg
aas
icebp
inc
enter
mov
cltd
jmp
fwait
sub
sbb
sub
das
ljmp
xchg
mov
mov
cltd
sbb
mov
mov
outsb
add
pop
sbb
mov
adc
call
push
add
mov
xor
outsl
jmp
pop
cmpsb
or
pop
push
sub
ds
into
call
sahf
add
dec
pushf
into
fisubrl
jne
add
pop
mov
mov
xchg
push
add
test
add
add
sub
addr16
loop
shll
enter
testb
add
aaa
lcall
jnp
jb
popf
push
mov
bound
mov
add
outsb
add
daa
repz
cmp
sub
mov
test
cmp
xchg
pop
jg
cli
imul
out
adc
jl
xchg
jmp
xor
popa
insl
nop
adcb
nop
mov
cmpl
ja
or
mov
fists
pop
outsl
shlb
out
mov
fcmovb
insb
add
movsl
sub
push
adc
hlt
ja
jl
lcall
and
sti
mov
add
movsb
mov
add
xor
mov
sbb
cmc
lcall
pop
fnstenv
add
xor
push
xchg
ss
and
fbstp
add
inc
hlt
pop
test
sub
mov
pop
xchg
sbb
sbb
in
push
pop
dec
add
std
push
jmp
dec
add
cmp
add
add
and
insl
jno
data16
add
mov
or
mov
cmp
inc
add
xor
sub
int3
push
add
aam
xchg
lret
add
adc
stos
sti
xchg
fsubr
ljmp
add
jge
add
inc
cmpsl
scas
dec
add
or
mov
cmc
mov
rorl
stc
sbb
cld
popf
outsb
add
cltd
dec
add
outsl
test
mov
lret
jno
mov
test
xchg
dec
add
mulb
add
sub
dec
rcll
mov
push
out
ds
fbld
movsl
ljmp
shr
adc
inc
enter
pop
sahf
jge
cmp
mov
or
fsts
imul
sub
push
aaa
xor
mov
jbe
negb
cmpsl
push
fadds
daa
popa
xlat
jp
pop
fisubrs
sub
shr
cltd
adc
stos
int
add
and
and
cmp
cmp
sub
mov
dec
add
insl
pop
cmp
lock
and
add
scas
add
mov
in
or
mov
shll
test
in
inc
add
add
adc
mov
add
add
je
inc
push
add
jbe
xchg
pop
xchg
sbb
add
sub
or
test
popf
imul
or
cmpsb
dec
add
fldl
in
inc
add
and
notb
into
add
ja
inc
add
hlt
orl
test
mov
add
dec
add
lods
imul
lret
pop
add
pop
pop
outsl
jae
and
rclb
add
loop
notb
dec
add
sub
stos
bound
xchg
and
xor
test
mov
cmp
push
dec
add
mov
cli
sub
enter
call
jp
bound
dec
add
add
out
jbe
add
jnp
and
mulb
dec
out
xor
pusha
add
pop
lea
add
ret
and
add
sahf
cmpsb
jmp
add
sbb
shlb
add
lods
jge
aas
push
add
mov
mov
hlt
add
imul
je
add
ffreep
mov
mov
xchg
call
cs
fdivr
les
outsb
add
add
jmp
add
stos
sarl
add
mov
push
ficomps
shll
mov
imul
jno
xchg
aaa
ja
jge
arpl
add
scas
mov
jmp
pop
outsl
pushf
test
lret
jbe
mov
and
jecxz
frstpm(287
subl
inc
add
pop
and
aad
insb
add
mov
cmpsb
in
mov
sbb
pop
add
mov
sub
xchg
repz
mov
cld
shrb
pop
cmovl
inc
hlt
sbb
pop
jno
dec
add
add
mull
xchg
ss
mov
push
cmp
mov
dec
add
lock
bound
sub
sub
cmpsb
stos
xor
imul
dec
add
inc
add
mov
shl
enter
xchg
jae
fists
mov
add
imul
ret
xlat
sbb
flds
sbb
dec
add
mov
icebp
pop
mov
adcl
sbb
sahf
movsl
mov
neg
push
add
jbe
add
test
adc
out
mov
cmp
in
fmulp
leave
jge
leave
movsb
nop
mov
add
add
je
out
arpl
add
js
cmpsb
add
or
and
inc
add
mov
sbb
loopne
sbb
add
xchg
cmp
push
mov
mov
jge
inc
add
add
popf
mov
xlat
sbb
ljmp
mov
add
addl
dec
add
aam
jmp
jge
sub
imul
add
add
repnz
cld
jnp
leave
cmpsb
aam
add
rclb
add
xor
cmc
ja
shlb
leave
mov
add
es
inc
add
jle
stc
enter
xlat
ret
push
mov
add
mov
add
inc
dec
shrl
add
jo
add
or
data16
mov
mov
and
lods
mov
cmp
jl
push
call
and
or
ljmp
stos
test
pop
lods
mov
mov
jg
or
pop
jp
push
xchg
pop
fmuls
add
sbb
fisubrl
inc
outsl
mov
mov
mov
mov
xchg
mov
int3
jnp
lret
scas
std
enter
or
push
push
jg
ficompl
mov
sbbb
add
daa
xor
out
jne
aas
cwtl
and
fwait
xor
push
and
and
mov
cmp
add
pop
push
sbb
int3
ret
icebp
ds
push
add
jp
ret
mov
mov
insb
add
in
dec
ret
lds
jg
mov
ja
sbb
add
jle
inc
add
mov
and
sahf
mov
cmpsl
outsl
in
stos
adc
loope
insb
add
push
add
jne
outsb
add
sbb
scas
shll
or
and
inc
dec
add
add
daa
sbb
lods
sbb
mov
sub
dec
xor
les
add
push
shll
fwait
add
shlb
pop
cli
stos
mov
adc
stos
jecxz
into
popa
push
popf
mov
add
sub
rorl
jp
or
lcall
push
cmp
repnz
mov
fmuls
add
push
push
add
mov
ret
xor
pusha
add
adc
xchg
sbb
mov
xor
lods
jg
dec
in
les
add
mov
out
inc
add
shll
int
test
lock
or
cmp
leave
in
or
add
paddsb
inc
add
add
jnp
add
imul
lds
jle
mov
stc
mov
mov
and
push
mov
sub
jo
add
mov
mov
mov
and
mov
mov
xor
xchg
jge
hlt
outsl
sbb
fsub
jno
mov
cwtl
cmpsl
data16
cmc
mov
insb
add
add
lret
imul
rcrb
jl
mov
sar
push
jg
fwait
pusha
add
mov
inc
add
test
add
pop
cmp
lcall
add
test
inc
lret
jecxz
dec
add
add
mov
fnsave
mov
mov
dec
fs
xorb
add
mov
scas
xchg
add
pop
pop
sti
fimull
pop
data16
rcrb
mov
lahf
js
aam
pop
mov
add
test
or
loop
repnz
mull
pop
fnsave
mov
sbb
mov
add
sub
sub
adc
mov
add
add
add
cmp
add
xlat
inc
add
pop
mov
daa
mov
pop
mov
int
dec
rcrl
lret
mov
cmp
movsb
add
jle
ret
les
mov
outsl
jbe
call
cmp
je
subb
mov
mov
outsl
xchg
int
add
loopne
add
dec
add
adc
xor
nop
inc
add
ss
sbb
inc
add
sahf
shll
std
pushf
iret
push
dec
add
orb
xchg
js
add
add
push
add
out
outsl
rcr
ljmp
add
ljmp
ljmp
nop
lea
inc
add
add
xchg
or
repnz
mov
mov
add
add
lds
pop
mov
pop
inc
add
jnp
cwtl
iret
fildll
pcmpeqd
je
cmc
sbb
pop
daa
sbb
dec
add
inc
add
adc
lock
repnz
inc
add
clc
jmp
out
jne
or
or
insb
add
shll
mov
jle
into
xor
test
mov
mov
mov
pop
outsb
add
cli
iret
jecxz
sub
lcall
xlat
push
add
and
add
adc
inc
cmp
push
and
roll
fidivrl
outsl
stc
scas
andb
lret
mov
in
test
add
jl
jge
adc
mov
push
je
arpl
mov
add
add
loope
add
and
lret
or
jb
sbb
insl
test
fldcw
add
clc
xor
sti
mov
outsb
add
cmpsb
xlat
cli
mov
lods
lcall
mov
je
lds
mov
add
mov
or
fimuls
jmp
xor
sahf
xchg
outsl
dec
dec
or
and
pcmpeqd
sbb
mov
cwtl
pop
movsl
xor
loope
adc
push
mov
add
push
rolb
push
cli
rcll
jecxz
and
ja
es
pushf
or
imul
stos
out
loopne
mov
out
add
imulb
mov
or
rcrb
repnz
rcl
bound
mov
sub
add
mov
pop
inc
add
add
loope
add
add
inc
add
jecxz
testb
push
cld
inc
add
movsb
push
dec
jecxz
aad
lds
loop
jae
and
mov
xor
dec
pop
das
ds
dec
mov
adc
cmpsl
sbb
add
cmpsb
cmpsb
cmp
mov
ss
push
mov
and
clc
xchg
neg
popa
jae
cmp
or
sub
add
jnp
xchg
pop
jne
fldt
stos
scas
in
addr16
mov
outsl
fnstcw
add
pop
dec
and
or
rcll
rcrl
cmpsl
push
xor
inc
decb
add
bnd
cld
xchg
mov
dec
add
ror
outsl
je
jle
mov
loop
adc
lods
push
ds
jbe
add
mov
mov
lods
cmpsb
scas
iret
aas
fmull
dec
aaa
cmp
xor
add
inc
add
xor
mov
and
or
aam
add
outsb
add
add
sub
mov
loope
pop
and
test
add
lahf
mov
arpl
xchg
pushf
mov
pop
inc
add
ljmp
insl
fidivrs
hlt
sub
das
xchg
xchg
and
adc
jecxz
add
frstor
xor
shll
cmp
stos
push
mov
add
adc
cmc
xchg
lods
xor
add
jne
in
lods
subl
add
xchg
xor
stos
in
jo
add
lods
enter
cmp
jns
aas
cmp
imul
inc
sbb
xchg
inc
imul
pop
cmpsl
jge
push
leave
mov
mov
inc
add
inc
add
mov
aaa
or
mov
pop
mov
and
inc
add
test
adc
arpl
or
insl
cwtl
sbb
pushf
mov
test
adc
nop
sbb
add
mov
test
or
and
mov
cmp
mov
dec
add
in
add
data16
xor
dec
add
mov
cmp
arpl
add
mov
cmpsb
mov
scas
cwtl
rcll
cmp
sbb
test
aad
add
imul
jnp
add
push
xlat
insl
push
push
pop
shrb
jb
pop
or
mov
stos
lret
call
out
pop
mov
out
push
push
and
sub
lahf
std
or
dec
add
sub
test
lock
minps
stos
cmpsb
and
push
cmp
cmp
jne
je
adc
xlat
mov
jg
sub
lods
cmp
pop
pop
push
mov
out
and
addl
or
jle
xchg
neg
inc
sahf
push
cmpsb
mov
sub
lock
ss
dec
add
inc
add
add
add
call
cli
mov
add
add
cltd
fcmovne
lods
mov
pop
mov
test
cmpl
rclb
add
mov
int
loop
fists
fdiv
jo
lret
jo
loop
pop
pop
daa
movsl
sbb
add
dec
add
ljmp
call
add
mov
adc
pop
stc
fisubl
add
pop
ljmp
ds
lret
cli
divl
jle
shll
add
xor
cltd
xchg
neg
and
scas
pop
test
int
lods
sbb
xchg
and
addl
push
adc
mov
add
jno
cmpsl
cmp
add
pop
sarl
fsub
pop
daa
out
mov
dec
dec
mov
and
adc
in
mov
xlat
movsl
jmp
xchg
xor
inc
add
sbb
xor
sbb
sarb
cld
popf
push
add
pop
pop
push
xor
adc
out
pushf
mov
loope
and
xlat
scas
pop
sub
add
mov
add
lahf
sbb
sub
aam
adcb
push
add
mov
movsb
mov
lock
popa
repnz
mov
mov
push
pop
add
adc
nop
in
inc
add
mov
aas
xchg
mov
pop
push
ja
stos
push
pop
push
add
add
imul
add
aas
inc
add
xorb
add
add
pop
stc
cmp
insb
add
inc
add
insl
jle
push
or
push
outsb
add
pop
leave
fdivs
or
jmp
testl
popa
mov
and
mov
mov
jns
jbe
repz
xchg
jnp
stos
mov
xor
and
out
mov
jmp
rolb
or
cmc
mov
orl
cmpsl
repz
add
add
jge
add
add
mov
dec
add
push
jg
and
dec
xor
inc
add
addl
dec
add
sbb
add
testl
aas
out
aam
insl
notl
test
inc
bswap
push
dec
test
das
add
leave
movsb
push
dec
add
movsb
adc
mov
ss
xchg
inc
sub
push
mov
dec
aas
insl
addr16
mov
xchg
xlat
rcrb
clc
inc
add
out
jo
fisubrs
ret
sub
addb
pop
mov
mov
add
inc
add
movsb
andb
adc
movsb
mov
mov
cmp
icebp
pushf
lock
aad
jge
movsb
fiadds
hlt
nop
lret
fsubrl
jb
xor
ja
xor
pop
icebp
xchg
inc
push
cmpsl
fwait
loope
outsl
and
push
sub
xor
sub
push
neg
adc
add
mov
andb
repz
push
sbb
add
mov
mov
add
rcll
push
shll
jle
inc
add
jge
push
out
cmc
xor
inc
adc
int
mov
mul
jbe
jbe
xchg
into
and
in
test
jne
in
add
add
in
push
add
ret
add
std
jo
stos
inc
mov
stos
std
lock
sbb
cmpl
mov
popa
jp
imul
cmp
add
add
jae
add
push
mov
add
pop
adc
fisubs
icebp
push
mov
add
rclb
add
xchg
invd
add
out
sub
mov
mov
push
pop
jae
push
or
pop
data16
jmp
ret
cld
mov
fnstenv
lahf
stos
int
add
loop
push
add
mov
aad
or
pop
adc
push
test
add
sahf
aas
fisubrs
decb
add
xorl
pop
inc
loopne
aam
cmp
je
das
enter
jo
lods
inc
add
loop
add
pop
xchg
iret
pop
idivb
and
and
jge
xor
add
push
jmp
and
in
fnstcw
repz
sysexit
stos
movsb
push
in
imul
cmpl
in
cmp
mov
neg
pusha
add
fisubl
add
add
in
outsb
add
aad
aaa
add
or
fldt
out
in
js
mov
xchg
xchg
enter
test
cmpsl
sbb
or
jno
insb
add
add
pop
sub
in
fdivp
pop
sub
stc
movsb
lock
jbe
fdivrs
add
adc
mov
mov
je
jb
dec
add
dec
add
inc
add
pop
sbb
lods
adc
cmp
add
stos
push
cltd
or
out
pop
jp
fwait
into
xor
aam
mov
jl
or
add
adc
mov
sub
sbb
sub
push
pop
xchg
mul
sbb
jecxz
add
sbb
pop
mov
add
icebp
loopne
hlt
mov
or
lcall
lock
stc
dec
fwait
lret
das
jo
mov
sub
mov
in
or
pop
and
xor
add
je
iret
cmc
ds
repz
jns
add
mov
lods
and
add
and
add
pop
mov
or
push
ret
in
sub
pop
jle
data16
add
add
xor
add
shll
add
lds
mov
ss
popa
xchg
test
insb
add
ret
sbb
push
sub
inc
add
int3
inc
and
scas
clc
push
add
add
fidivrl
fistpll
mov
jecxz
insl
scas
fucomip
sub
dec
add
imul
cli
mov
mov
add
sub
sbb
mov
cmp
mov
add
mov
call
sbb
imul
sub
jle
add
lcall
dec
xchg
cmp
imul
xor
push
dec
add
jle
sbbb
ret
mov
add
lret
jo
cmp
add
add
sub
push
shrb
je
shll
add
add
fwait
push
add
push
out
les
cmp
test
adc
lods
out
aam
jle
movsl
inc
add
mov
outsl
sub
add
add
daa
cmc
loope
enter
ja
cmp
add
and
dec
rolb
push
aaa
sbb
push
add
lods
sub
mov
cmp
popa
dec
add
fsub
test
iret
jne
scas
loopne
mov
add
add
sub
cli
add
sti
push
rorb
jne
add
xchg
xchg
test
push
repnz
dec
add
add
cmp
and
sub
mov
push
dec
add
scas
lcall
subb
mov
add
xor
test
pop
stc
sub
mov
test
push
movsl
sub
mov
pop
adcl
sahf
lds
dec
pop
push
xlat
cwtl
push
sbb
scas
lret
add
das
fisubrl
sbb
add
pop
push
add
pushf
lret
imul
add
enter
sbb
add
mov
cmp
arpl
lret
push
pop
add
add
aaa
mov
ret
ja
addr16
imulb
inc
add
add
sub
mov
sub
rorb
push
sbbl
add
sbb
mov
add
filds
add
decl
mov
and
outsl
shll
test
inc
xor
ret
icebp
loopne
addb
rcrl
arpl
push
fstp
mov
mov
and
adc
adc
cmp
add
dec
add
lods
inc
add
add
fsubrl
adc
sub
ds
add
add
and
fldcw
lock
pop
and
ds
cmpsb
xchg
mov
cwtl
sub
add
stos
sub
data16
test
jecxz
in
in
add
dec
ja
jp
adc
push
mov
test
bound
mov
out
mov
sbb
jb
pop
cmp
mov
jg
jg
jo
or
cmpb
cltd
sti
scas
push
imul
bound
inc
rorl
adc
xchg
loop
ret
daa
inc
sarb
jo
jmp
or
mov
add
push
push
lret
push
lahf
jnp
add
dec
add
sahf
hlt
add
jne
call
sti
ds
cmp
sbb
into
fs
dec
popa
add
and
push
repnz
add
lahf
pop
mov
jb
jge
std
xchg
shl
push
mov
xlat
mov
jge
mov
pop
sub
jae
add
bnd
push
sub
lret
pop
or
sub
mov
push
in
stos
jae
add
cmp
add
add
add
sbb
adc
mov
das
mov
aaa
inc
add
stc
iret
jbe
ljmp
xchg
test
xor
xchg
jle
shrb
in
scas
and
in
dec
add
in
jno
sub
add
add
notb
jecxz
repz
xchg
pushf
imul
add
push
outsl
rcrl
inc
add
repnz
out
cmpsl
stos
addb
bound
popf
cmpsl
icebp
sbbl
dec
add
add
sub
jp
sub
add
xor
jmp
cvtps2pi
add
add
enter
sti
sub
mov
dec
sub
mov
xor
jbe
andb
add
cmc
in
push
dec
add
movsl
xchg
lcall
not
xlat
push
movsl
mov
mov
les
add
push
add
ret
cmp
pop
std
sahf
dec
sub
cmp
ja
mov
add
or
out
outsb
add
inc
add
add
sub
jg
lret
lods
je
arpl
sub
sub
mov
add
imul
insb
add
nop
ret
add
inc
dec
xor
cli
jbe
in
aas
scas
pop
xor
mov
mov
jae
mov
addr16
sub
lret
mov
add
roll
fimull
in
sub
inc
add
jo
lods
loop
pop
jns
add
add
mov
jecxz
jno
add
mov
mov
test
cmp
pop
cwtl
adcb
push
jle
add
repz
push
sbb
inc
add
mov
out
xchg
bound
cmp
and
movsb
xchg
cld
xchg
or
stos
popa
add
scas
inc
add
je,pt
lea
in
push
sbb
and
in
sbb
xor
repnz
loope
inc
add
mov
and
lea
lds
movsl
mov
add
jno
mov
add
mov
push
stc
outsb
add
lret
push
push
fdivp
pop
mov
adc
dec
shrb
push
pop
lds
addr16
lret
mov
add
sbb
jne
push
mov
fnsave
aam
loope
pop
arpl
and
fmulp
pop
cli
in
cli
out
push
fildl
xor
xchg
popa
add
in
mov
adc
out
stos
pop
orl
pop
dec
xchg
sub
sbb
lret
pop
or
jb
loopne
cmp
add
pushf
cmp
and
iret
dec
add
add
nop
lods
push
andl
mov
mov
or
int3
cmp
rcrl
inc
push
add
add
movsl
fldl
jmp
rcr
lcall
out
mov
xchg
xchg
stos
jbe
jl
add
or
push
pop
insl
sub
sub
ja
inc
add
sti
repnz
adc
fsub
pop
pop
lcall
add
cmp
mov
and
pop
mov
loop
xchg
inc
add
rcrb
dec
add
add
jne
les
add
mov
dec
add
jne
jne
dec
add
sbb
aaa
and
add
push
movsb
sahf
ret
xchg
lods
insl
jne
add
std
imul
lods
ja
mov
sub
add
leave
sub
pushf
sbb
add
imul
mov
jno
loop
push
data16
bound
out
fisubl
test
insl
and
fcomip
jae
in
xchg
scas
je,pt
adc
pushf
push
shlb
iret
orl
jecxz
and
fucomp
inc
out
mov
push
sbb
dec
add
xchg
xchg
lcall
mov
lahf
test
or
pushf
pop
repz
add
clc
paddd
push
add
movsb
outsl
loope
push
add
push
orl
fdivr
adc
negl
lods
mov
cltd
in
mov
adc
xor
sub
add
test
stc
out
daa
and
aad
jle
adc
subl
add
push
sti
push
pop
loop
add
dec
add
insl
mov
cwtl
or
cmc
push
add
add
mov
sub
imul
cld
clc
push
jle
mov
mov
add
add
sbb
inc
out
add
pop
or
lds
outsb
add
fsubrs
scas
ljmp
jnp
xchg
shll
lea
scas
scas
cmp
push
addl
and
add
fmul
sub
add
std
call
push
pop
xor
div
pop
xchg
nop
sbbl
scas
movsl
stos
pop
pop
add
testl
icebp
adc
mov
and
arpl
add
in
jle
mov
stos
iret
xor
jp
pop
lret
das
dec
adc
pop
scas
xor
cltd
fdivs
fdivl
adc
push
xchg
add
repz
popf
nop/reserved
mov
add
mov
add
loop
call
push
inc
idivb
divl
int
pop
mov
and
popf
xlat
jae
xchg
adc
xor
subps
xchg
and
mov
std
test
sarb
lods
jl
std
mov
stos
pop
jnp
fldl
add
dec
pop
pop
aas
jnp
ffree
jp
add
cmp
add
pusha
add
clc
pop
or
mov
add
add
add
loopne
sbb
push
sbb
insb
add
shl
loop
xor
stos
out
int
xchg
or
add
add
cld
dec
add
mov
pop
rcr
test
rorl
movsl
jg
fsts
jbe
cmp
cmp
sub
sub
xchg
pop
mov
shr
add
mov
in
mov
or
enter
xchg
add
pop
add
add
fiadds
adc
leave
dec
add
or
stos
sub
xchg
jbe
adc
add
fdivl
inc
mov
mov
xor
aad
mov
add
test
mov
cmp
mov
push
mov
pushf
push
add
mov
aad
push
push
test
mov
push
add
add
add
add
pop
sti
xor
stc
pop
out
imul
mov
lahf
push
inc
mov
adc
call
daa
push
out
mov
bound
jo
mov
movb
adc
das
add
fidivl
hlt
scas
aam
cltd
sub
stc
scas
in
mov
mov
bound
inc
add
push
xorl
fadds
mov
jno
add
add
cmp
inc
add
jnp
cmpsb
mov
inc
add
dec
add
call
add
test
pop
xchg
sub
lods
cmp
pop
inc
jbe
adc
adc
lret
xlat
ljmp
mov
mov
inc
cmp
sahf
push
fxch
lahf
sbb
loope
mov
insl
or
add
xchg
gs
test
sbb
dec
dec
repnz
aam
nop
xor
outsb
add
out
shr
jmp
lods
cmp
xor
je
pop
jmp
insl
cmp
jmp
add
inc
or
inc
push
jne
mov
jecxz
sub
mov
add
fidivl
test
insb
add
mov
jle
pushf
push
shrb
dec
add
dec
out
or
test
add
sub
data16
jmp
add
dec
add
fdivs
ds
dec
sbb
adc
mov
fidivs
rol
xchg
add
push
jge
add
xor
add
nop
call
inc
cmc
test
push
xor
jl
add
xor
mov
add
int
nop
inc
adc
pushf
add
xorl
add
inc
add
fiaddl
pop
movsb
movlps
pop
jnp
jle
pop
pop
xor
xor
dec
dec
add
fs
mov
push
bound
xor
adc
rorl
or
add
add
add
popf
pop
xorb
rcrb
jns
mov
push
sarl
jmp
xor
repz
mov
pusha
add
add
sbb
sbb
jae
xchg
ss
stc
in
lahf
pop
js
jle
ds
adc
or
push
add
xor
xchg
ljmp
stos
lock
test
insb
add
das
mov
add
andb
mov
lods
inc
and
push
jle
push
sbb
outsl
movsl
movsl
fimuls
les
shll
xor
xchg
mov
dec
jno
and
in
ds
add
pop
stos
cmpsb
inc
xor
or
sub
xchg
imul
add
mov
cmp
push
int3
add
je
sbb
popf
std
movsb
outsb
add
push
add
add
add
into
jl
or
into
xchg
dec
add
xchg
bound
push
ret
out
aas
push
cld
adc
add
xor
dec
xor
xchg
pop
mov
jo
pop
in
xchg
loop
dec
add
fdivrl
sbb
jl
scas
pop
and
mov
add
xchg
inc
aam
pusha
add
push
sbb
add
dec
out
push
push
or
lock
add
adc
add
mov
out
sti
mov
mov
pop
jmp
add
push
sub
into
jno
mov
add
rcrl
push
inc
add
mov
adc
std
xchg
into
add
pop
faddl
add
cmp
push
fisubrs
mov
pop
test
ja
js
jae
add
add
cli
sbb
repnz
add
call
test
sbb
add
nop
mov
xlat
jne
add
inc
add
sbb
fiadds
xor
test
les
lea
xorb
xor
leave
ja
cmpl
sbb
cmp
add
or
das
ret
push
punpckhwd
xor
mov
cli
popf
mov
add
icebp
pop
aam
jbe
jno
nop
sete
loope
in
testl
mov
cld
dec
add
push
stos
xchg
daa
leave
cmp
cmp
dec
add
and
pop
iret
xchg
mov
add
cld
rolb
xor
add
daa
or
jmp
xchg
pop
fisubs
add
ds
and
jecxz
add
xchg
test
and
add
add
pop
scas
cmp
jg
sub
dec
xor
add
dec
mov
adc
ret
jae
mov
fwait
push
add
cwtl
ja
mov
sub
and
jle
add
xchg
adc
pop
xchg
xorb
pop
out
cwtl
mov
push
imul
adc
inc
push
test
test
mov
inc
inc
add
add
lea
shrl
lcall
fstpt
add
mov
add
add
push
add
mov
or
pop
xor
outsl
stc
ds
xor
test
dec
gs
jb
xchg
xor
push
mov
xor
add
add
sbb
add
jg
sub
decb
push
pop
inc
movsl
inc
add
lock
shr
stos
mov
mov
fimuls
inc
test
mov
pop
add
test
add
stos
mov
or
add
jle
jns
sbb
aam
mov
push
pop
push
pop
mov
dec
add
icebp
fwait
xlat
mov
mov
addb
push
add
and
add
push
mov
fsubs
add
bound
out
out
inc
lea
fmull
mov
scas
push
daa
xor
add
jb
scas
sbb
das
jo
sbb
mov
out
mul
dec
add
push
sbb
add
popf
sub
dec
xor
and
imul
add
lahf
push
mov
add
cmp
xor
inc
push
stos
mov
pop
scas
adc
adc
dec
add
iret
lods
fistpll
and
sar
cmp
pop
lcall
cmp
loopne
addr16
push
out
out
loopne
insl
hlt
push
les
push
cs
sub
add
mov
jb
jb
add
jp
lcall
mov
add
pop
dec
mov
inc
add
enter
sbb
sbb
add
mov
fldt
add
lock
xchg
lret
mov
sarl
add
push
clc
ret
shll
mov
addr16
jl
bound
add
add
jno
ficompl
add
mov
stos
leave
lods
dec
add
sahf
addb
dec
add
mov
push
add
jecxz
data16
add
scas
lcall
add
repnz
scas
jl
inc
add
loopne
add
addr16
aam
adc
mov
sub
int3
jge
inc
add
pop
popa
std
and
loop
mov
add
xor
add
add
bnd
lock
dec
addr16
psadbw
test
in
das
adc
nop
pop
pop
push
inc
inc
addr16
insl
fisubrl
int
adc
add
mov
cmpsb
xchg
push
add
xor
add
or
test
jbe
out
jge
jae
aad
add
sub
loop
add
lret
imul
xor
add
sbb
cs
jmp
int3
mov
mov
push
inc
ret
out
jecxz
adc
and
or
adc
in
rol
int3
or
fwait
icebp
lret
pop
lods
imul
and
mov
mov
pushf
pop
gs
sub
inc
rcl
addb
scas
mov
gs
jne
ljmp
add
inc
add
mov
leave
testb
sbb
mov
test
fldcw
add
into
lahf
roll
ja
jno
xchg
les
loope
cmp
xor
add
sbb
push
pop
push
xchg
xor
xor
into
xor
add
mov
push
cmc
out
xchg
fsubrs
add
xlat
loopne
out
fsubl
mov
inc
add
ret
add
add
add
cli
lret
mov
cmp
jo
or
jg
cmp
std
add
xchg
sbb
dec
add
jl
sti
xchg
lods
adc
stc
sub
mov
dec
jno
std
xchg
lahf
xchg
xlat
xchg
xor
jne
sahf
std
jno
pop
lahf
pop
test
or
lock
lcall
add
dec
mov
mov
xor
dec
add
int
notl
or
mov
xchg
mov
movsl
lret
push
jbe
aad
int
or
loop
dec
mov
loop
out
push
dec
add
clc
add
mov
pop
or
aaa
push
add
inc
pop
adc
into
sbb
sbb
lret
push
mov
loopne
add
add
xchg
pop
pop
imul
andl
mov
add
sbb
aad
sub
add
jl
add
aam
adc
scas
dec
lret
repz
daa
insl
pop
pop
int
out
mov
add
add
mov
mov
xchg
xchg
add
idiv
mov
sbb
sti
jp
or
xor
mov
arpl
mov
inc
add
add
hlt
in
push
mov
jo
mov
add
loope
sub
push
add
add
dec
add
mov
add
mov
fdivrs
ljmp
out
dec
xchg
lcall
ffreep
in
mov
stos
jmp
inc
jae
test
add
test
lds
clc
inc
add
xchg
pusha
add
arpl
jge
jae
xor
ljmp
and
dec
pop
cmc
push
add
add
sub
cmp
jle
dec
cmpsb
or
pop
sbb
xchg
outsb
add
push
push
sub
lds
lods
jo
lret
add
mov
push
iret
adc
shll
sti
sub
pop
and
repnz
ljmp
popa
pop
fcmovnu
push
dec
mov
cmp
pop
sub
ljmp
add
xchg
int
xor
sbbb
popf
movsl
repnz
add
inc
add
jbe
lahf
push
cmp
xlat
add
pop
mov
push
ret
pop
arpl
addb
jg
add
dec
and
sub
push
add
jne
ror
xor
xor
mov
jb
xor
fbld
push
jo
insl
loop
cmp
clc
push
push
cmc
xchg
das
ja
jmp
lds
insb
add
cmpsl
xor
add
xlat
and
cli
xchg
xchg
cmp
loop
push
push
or
or
add
lea
loop
cmpl
loop
add
mov
add
inc
push
jae
fbstp
mov
pushf
mov
dec
add
lcall
xor
bound
mov
add
ds
jmp
add
add
loopne
pop
cmp
outsb
add
cmpsl
xlat
mov
clc
in
or
dec
push
ret
add
dec
add
cmp
stc
jmp
add
test
add
fimull
cmp
repnz
out
test
add
push
fistpl
push
outsl
pop
ret
or
lret
sbb
jmp
xor
les
inc
add
xchg
aad
add
mov
jae
inc
nop
mov
ds
xchg
adc
xor
add
inc
add
outsl
das
leave
out
push
add
sub
push
jecxz
xor
xchg
and
test
fstps
mov
jns
push
add
lods
std
mov
ret
xor
and
inc
add
iret
pop
jg
sub
jae
ret
cmc
dec
jbe
add
add
cld
mov
xlat
je
sbb
mov
sbb
sti
xchg
dec
inc
loopne
int3
mov
cwtl
call
add
sbb
add
ss
add
add
xlat
stos
mov
add
shll
jg
inc
subl
es
mov
pushf
push
call
cmc
mov
mov
sub
sarl
push
add
adc
add
fcomip
xor
sarb
mov
jb
mov
clc
pop
xchg
mov
adc
aas
lahf
jae
xor
fdiv
bound
imul
cmp
add
and
sbb
push
lahf
testl
cmp
cmp
std
xchg
arpl
out
dec
aam
pshufw
subb
lea
xor
cmp
add
dec
imul
xacquire
add
mov
push
add
xor
xchg
pop
sbb
mov
dec
add
gs
cli
or
and
sbb
mov
bound
jnp
push
adcl
add
pop
jle
mov
sbb
aam
jp
outsl
push
arpl
fwait
add
movsb
int3
scas
pop
bound
inc
add
outsl
sub
jl
mulb
ud2
test
ss
jbe
cld
and
xor
add
add
add
lods
fsubl
movsb
cltd
inc
dec
int
add
add
outsb
add
aaa
mov
imul
add
clc
outsl
movsb
in
push
out
sub
mov
shll
cmpsb
push
xor
xor
rorl
add
lret
mov
sbb
mov
sub
pop
mov
js
test
add
adcb
push
movsl
xor
shl
lods
push
sysenter
test
xor
sahf
xchg
jb
xorl
outsb
add
cmc
mov
add
mov
add
test
jbe
add
gs
out
add
and
add
jo
xchg
push
xor
insl
cltd
inc
mov
pop
pop
loopne
inc
add
mov
outsb
add
add
popf
mov
js
add
adc
frndint
add
fidivrl
mov
push
mov
push
add
dec
add
cld
dec
mov
sub
sbb
sub
jnp
ds
scas
stos
nop
test
aad
push
jb
dec
mov
add
int3
dec
add
hlt
pop
sub
data16
sub
inc
frstor
aaa
movsl
dec
add
stos
and
add
in
roll
xor
add
leave
imul
adc
adc
sub
or
fldcw
cwtl
xorb
outsb
add
mov
xlat
mov
mov
cmpsb
push
lahf
pusha
add
jl
rcl
mov
mov
cli
outsb
add
sbb
cmp
add
out
push
add
sbb
add
rcr
add
enter
push
les
add
add
push
out
mov
and
out
push
pop
mov
sub
add
mov
mov
mov
mov
inc
add
mov
cld
xor
push
jl
les
or
push
scas
mov
ljmp
jmp
mov
jbe
imul
jbe
add
int
imul
mov
or
cmc
mov
in
fiadds
mov
inc
and
sarl
sbb
or
lret
popf
sub
sbb
addb
adc
pop
ljmp
push
fimuls
add
cmc
imul
jno
fsubs
add
inc
cmp
int3
cltd
xor
add
or
enter
add
insl
sub
pop
movsl
scas
loop
fisubrl
sbbb
mov
inc
lahf
mov
call
adc
add
jns
push
cmp
movsl
inc
fsubr
push
push
into
push
jno
cmp
loop
test
and
cmpsb
hlt
xor
inc
in
mov
or
sbb
dec
fsubl
stc
fnstsw
arpl
ret
rcrb
mov
dec
xlat
fsubrl
outsb
add
cmp
mov
add
push
jecxz
aaa
mov
or
add
lret
sub
ja
and
or
mov
sbb
add
jnp
dec
mov
aas
scas
sbb
add
ret
add
addl
add
pop
stos
jg
arpl
mov
xor
mov
add
aaa
sbb
nop
xchg
sbb
call
add
stc
adc
add
jp
int
add
or
dec
add
sbb
inc
add
mov
add
sahf
push
dec
add
mov
xor
add
fwait
popa
imul
add
hlt
outsl
add
sbb
ja
mov
inc
int
out
insb
add
sub
pop
push
add
mov
xchg
leave
inc
add
out
jmp
inc
add
and
push
popf
nopl
and
rolb
cmpsl
and
pop
jnp
imul
add
jbe
insl
pushf
into
mov
sbb
xlat
mov
jl
jg
inc
add
xor
arpl
add
xor
pop
jno
add
add
xchg
or
out
addr16
sbb
outsl
leave
aas
sub
or
jno
add
xchg
pushf
jns
add
add
pop
cmp
and
js
shlb
cli
push
and
inc
mov
adc
je
mov
or
rcrl
add
bound
inc
add
xchg
mov
pop
pop
js
divl
mulb
xor
mov
add
fadds
cmc
mov
add
imul
mov
xor
add
push
push
movsl
fisubs
xor
cmpsb
stos
test
mov
out
sub
fwait
das
sti
mov
dec
add
dec
aaa
push
out
xlat
adc
lret
sahf
push
add
movsb
jl
popf
aaa
js
xor
add
pushf
or
divl
pop
sub
mulb
push
movl
jmp
and
inc
mov
add
xchg
dec
ss
popa
cmpsb
inc
add
pop
add
movb
scas
jo
sbb
add
add
adc
mov
add
push
iret
lods
inc
dec
add
cltd
xor
pop
out
lcall
hlt
xchg
iret
or
scas
push
or
mov
cmp
ret
pop
jo
xchg
mov
mov
daa
jle
push
mov
and
loopne
dec
add
pop
pop
dec
lcall
push
add
cmp
arpl
ret
jl
add
dec
add
jmp
scas
jl
clc
adc
mov
loopne
fsubs
fisubl
movsb
xor
pop
adc
pop
xor
cmc
cmp
in
decl
mov
jno
add
cmpsl
inc
add
xchg
inc
xchg
jle
add
jns
data16
cmc
and
sub
repz
add
fwait
and
mov
or
jbe
pop
add
add
dec
add
fimuls
rol
mov
pop
mov
inc
add
cld
rolb
add
add
push
stos
cwtl
adc
mov
and
adc
jmp
mov
fisttpll
sub
loope
out
jp
add
in
mov
jle
jle
lods
out
pop
lahf
out
inc
add
out
pop
add
vmread
loopne
add
stos
int3
mov
stos
adc
mov
push
arpl
or
dec
add
aad
fistpl
ret
in
add
nop
inc
add
add
add
fs
push
lret
movsb
notl
rolb
in
mov
or
aad
repz
ljmp
pop
arpl
push
or
dec
jmp
xchg
jns
cwtl
out
lods
mov
adc
add
push
push
xchg
pop
sub
jne
xor
outsb
add
cmc
out
out
jmp
aam
mov
add
pusha
add
addr16
xor
add
sub
mov
fnstsw
add
inc
add
popa
hlt
jmp
add
ss
push
pop
inc
add
rorb
imul
mov
add
cmpb
and
xlat
out
add
adc
cmp
mov
xchg
add
cmp
inc
add
out
rcl
das
dec
sti
adc
add
insb
add
mov
lds
add
divl
fwait
stos
cmp
lods
sub
inc
add
add
or
jmp
mov
sbb
scas
lods
test
jl
dec
add
cld
ja
pushl
jmp
vmread
add
jae
fisubl
add
add
add
add
pop
and
xchg
add
je
sbb
lods
movsb
pop
jo
fldl2t
insb
add
jo
add
outsb
add
cmp
and
pop
nop
inc
add
add
inc
xlat
enter
mov
mov
ljmp
ljmp
add
adc
stc
loope
and
push
scas
xlat
in
adc
les
push
add
repnz
jne
mov
push
add
outsl
pop
jmp
add
icebp
mov
fistpl
and
nop
cmp
outsl
fidivrl
add
mov
outsl
xchg
loop
imul
add
lock
xchg
inc
add
xchg
add
xchg
adc
lock
mov
push
push
or
jp
sub
add
push
adc
add
inc
add
mov
xchg
dec
add
cli
jb
loopne
in
push
fcomps
push
and
xchg
or
xor
sub
ret
shlb
dec
push
push
fiadds
add
xchg
dec
stos
or
cmc
add
dec
inc
shrb
or
xchg
mov
not
or
aaa
fildll
repz
mov
sbb
add
dec
xchg
arpl
jb
and
mov
xchg
subl
int3
mov
jl
stos
inc
add
cmp
add
lcall
dec
pop
xor
add
call
or
sbb
add
sbb
add
dec
jg
mov
sub
sub
leave
roll
adc
ret
and
shr
adc
sbbb
xchg
adc
cld
mov
sysexit
add
xor
hlt
ret
add
jl
mov
jmp
fdivl
in
lcall
fidivrl
fsub
dec
add
adc
and
lock
addl
pop
sbb
mov
dec
add
lods
xor
add
pop
out
pop
dec
add
add
add
inc
xchg
lret
test
mov
sarb
add
add
push
stos
out
jge
cmp
sub
nop
xlat
fistpll
cmp
and
mov
in
cld
push
xor
out
bound
push
xchg
in
mov
insl
or
cmp
pusha
add
sub
sbbl
cmp
jmp
jp
pop
out
cld
dec
xchg
aam
sbb
jae
cmp
add
add
xchg
inc
add
pop
stos
test
push
add
adc
ret
push
sub
adc
jmp
xchg
mull
jg
push
sub
dec
mov
add
add
or
mov
cmp
or
jle
add
add
add
pop
pop
arpl
jnp
call
pop
sub
or
cmpsb
cli
sbbl
add
call
lds
subl
ja
test
inc
add
add
inc
or
mov
add
mov
aam
sub
xchg
adc
add
ja
clc
ret
test
sbb
mov
xor
into
push
in
xor
add
jecxz
test
add
repz
cmp
je
mov
mov
add
loop
push
in
push
sti
xor
sub
test
xor
add
ret
dec
add
cmpsl
inc
jne
add
or
inc
add
add
cli
in
cmp
mov
fdivrl
dec
add
fistpl
xor
mov
add
rol
push
pop
out
ds
cltd
lock
stos
push
dec
add
pop
lcall
add
mov
mov
in
cmp
lret
adc
movsb
in
sti
xchg
in
in
lock
add
push
aad
add
mov
jg
ret
divb
xor
dec
adc
add
test
outsb
add
les
jbe
add
mov
mov
movsb
ss
adcb
jae
xchg
jle
push
popa
xor
xchg
scas
mov
mov
in
push
xchg
jne
adc
cmp
xor
push
add
sbbb
push
pop
add
fistl
jp
aaa
shl
jge
cmp
sub
push
jae
add
push
into
inc
scas
outsb
add
ret
jl
call
push
cmpsl
pop
jae
popf
js
add
or
sbb
or
aaa
xor
cwtl
mov
adc
sub
ret
lahf
and
hlt
inc
xchg
jns
bound
sbb
outsb
add
cmp
aam
out
nop
cmpsb
jge
aaa
stc
ds
fsubrs
cmc
ljmp
push
popa
sbb
outsl
mov
ror
add
call
in
and
stos
mov
mov
fst
jp
or
add
jmp
inc
add
pop
mov
inc
mov
mov
ret
mov
sbb
pop
push
hlt
aas
and
xor
mov
inc
add
das
loope
pop
rclb
mov
push
add
jo
sti
repz
dec
add
jbe
aas
sbb
add
aad
add
js
xor
sbb
push
add
mov
xor
dec
add
add
repnz
aam
add
js
loop
cmpsb
mov
bound
inc
outsb
add
pop
repnz
sbb
fucom
ret
push
add
add
sub
mov
mov
cwtl
mov
inc
push
loopne
add
add
mov
ljmp
rolb
daa
jbe
add
add
int
mov
push
add
pop
mov
push
pop
xor
xchg
stc
clc
jmp
sbb
gs
test
add
mov
xchg
movsl
jle
inc
add
add
pop
scas
fcmovnbe
xchg
arpl
mov
mov
aaa
cwtl
push
popf
adc
add
inc
test
and
in
sbbb
outsl
mov
xor
jl
mov
dec
xchg
pop
ffree
mov
fnsave
cmpsl
xor
mov
push
in
sbb
add
stos
fstp
xchg
sbbl
push
lahf
inc
xchg
xor
pop
mov
xorb
data16
jno
push
jg
mov
lods
aad
add
ss
ret
add
movsb
in
mov
gs
and
stos
pop
sbbb
adc
outsl
mov
push
pop
and
xchg
add
add
push
add
fldenv
rcr
daa
jbe
pop
repnz
insl
stos
push
cmpsb
dec
add
xchg
add
inc
xor
sti
sub
cmpeqps
jnp
jge
mov
daa
sbb
push
ret
or
push
sub
stc
repz
add
pop
mov
repz
sbb
add
into
and
and
stc
mov
or
movsl
mov
push
cmpsl
add
test
jmp
movsb
aad
add
jbe
xor
in
lret
xchg
jecxz
arpl
sbb
ret
push
scas
mov
mov
lock
outsl
add
xor
fisttpll
loop
outsb
add
cmpl
mov
mov
call
mov
add
sub
pusha
add
mov
cmp
push
pusha
add
xor
lret
xchg
xchg
dec
and
add
sbbl
mov
scas
in
add
pop
mov
add
loopne
mov
adc
in
add
cwtl
dec
inc
enter
mov
dec
repz
aas
lods
mov
enter
push
sub
mov
into
jg
jmp
jge
or
dec
mov
xor
repz
dec
xor
rclb
inc
add
xchg
adc
mov
js
mov
jl
add
push
add
int3
mov
mov
mov
adc
sub
cmp
insb
add
add
jns
and
ja
in
into
fsts
mov
sub
int
mov
push
xchg
ret
ljmp
mov
add
sarb
fwait
arpl
loope
ds
ss
mov
into
fdiv
mov
lods
int3
gs
scas
add
sbb
fdivrs
in
fadd
sti
add
fistpl
test
loopne
push
lcall
ljmp
sub
lds
or
test
fdivp
jg
cwtl
inc
cmc
lcall
mov
hlt
lret
and
sbb
add
sub
popa
jge
mov
icebp
fimull
add
add
leave
and
call
and
pushf
testb
aad
add
adc
xchg
cmpl
push
hlt
loopne
add
mov
fstl
lds
add
and
or
sbb
xor
adc
icebp
popa
mov
jmp
js,pt
subb
mov
into
out
dec
add
xchg
jp
adcl
add
add
xor
ja
sti
cld
and
xor
jne
insl
testb
mov
ljmp
pop
add
loopne
add
mov
daa
jne
mov
fcmovb
test
add
cmp
cmp
dec
push
sbb
aaa
and
aas
xor
ret
pop
scas
out
and
scas
lods
add
and
adc
sub
jbe
cmp
repnz
add
adc
pushf
pop
jb
scas
fdiv
xchg
aas
pop
cltd
add
imull
ret
movl
add
lds
add
jbe
in
and
jo
add
add
add
movsb
jno
mov
mov
mov
cmp
cmpsl
push
sub
add
int
add
daa
ss
add
add
mov
and
negb
lock
out
std
movsb
leave
push
and
cwtl
test
mov
out
push
xchg
add
add
or
les
add
sbb
cli
mov
mov
fistpl
add
jg
arpl
gs
in
mov
jg
xchg
add
add
mov
inc
cli
pop
clc
xor
cmp
pusha
add
sbb
out
adc
cwtl
push
test
pop
int
in
push
add
add
push
sub
bnd
sbb
xchg
insl
lret
add
call
add
int3
test
shlb
pop
add
and
jo
mov
adc
repz
addr16
movsb
inc
jecxz
fidivl
or
dec
xor
sahf
int
imul
stc
mov
pop
sub
add
clc
dec
in
dec
add
adc
ficomps
std
shll
andl
adc
or
je
sub
xor
fidivrs
aas
mov
xor
pop
and
cmp
add
cmpsl
pusha
add
jne
notl
pushf
ror
push
jb
int3
mov
cmp
add
fisttps
xchg
call
bound
imul
jl
sbb
fldenv
iret
rcr
inc
add
adc
add
or
jae
cmp
add
lret
add
or
frstor
jne
add
mov
fwait
test
insb
add
xor
add
mov
and
cmp
jecxz
xchg
dec
hlt
lcall
mov
xor
inc
test
jo
add
jnp
test
call
mov
pop
ljmp
mov
mov
cmpsb
xchg
int
add
daa
and
mov
sbbl
add
popf
mov
stos
pop
jl
arpl
adc
and
and
mov
rcrb
test
jg
add
arpl
adc
out
dec
inc
add
popf
scas
insb
add
cmpsb
cmp
or
sbb
mov
andl
mov
cmpsb
pop
sub
mulb
ljmp
mov
add
jae
in
fwait
jge
stos
ss
imul
xchg
xchg
cmpsb
test
mov
lds
cltd
dec
add
sbb
ja
mov
int3
add
xor
mov
add
sub
add
add
jno
mov
cs
loop
mov
and
int
lods
movsl
push
xor
push
add
push
scas
insl
add
push
add
add
add
inc
cmp
jnp
push
mov
adc
inc
add
or
and
pop
aaa
add
divb
xor
add
push
test
lahf
ja
repz
fldenv
add
adc
push
jbe
jns
out
and
repz
add
and
out
je
loope
push
jp
clc
sub
mov
add
push
add
cmp
jmp
add
insb
add
add
shll
call
mov
mov
test
add
loop
add
scas
adc
mov
sub
add
push
add
jne
adc
insl
sub
and
mull
lds
sbb
repnz
inc
add
sbb
push
popa
jae
mov
dec
imul
add
add
add
sub
add
inc
add
xlat
std
ljmp
inc
add
inc
add
stc
dec
add
cltd
jecxz
add
jae
xor
jl
push
movb
sbb
inc
xchg
scas
shlb
lahf
lahf
fisttps
fsubs
jmp
pop
cmpsl
sbb
cmpsl
inc
add
sti
mov
push
xor
dec
add
and
jbe
out
aas
movsl
mov
push
pop
movsb
jne
xchg
inc
add
mov
sar
add
xchg
push
add
std
fidivs
add
add
xchg
inc
dec
add
sti
repz
inc
add
add
lock
jns
scas
repz
nop
aaa
in
push
xor
cltd
cwtl
pusha
add
pop
mov
test
mov
pop
jg
je,pt
push
pop
stos
dec
fidivrl
mov
add
xor
mov
adcl
dec
add
cmpsb
cmpsb
pop
movsl
lcall
dec
add
add
mov
loop
add
pop
movsl
pop
aam
pop
loopne
loop
add
add
add
adc
and
cwtl
pop
aas
loopne
cmpsl
mov
loopne
cmp
add
jmp
das
shrb
pop
mov
fcmovnbe
mov
or
cld
cmp
je
add
mov
shll
js
inc
push
stos
pushf
pop
test
jno
andl
fistpll
in
xchg
fcompl
iret
lock
push
xor
xchg
push
fcoms
mulb
add
leave
dec
or
mov
movb
out
add
cmp
add
std
dec
add
add
jbe
add
imul
pop
push
inc
add
jns
clc
test
jo
incl
jae
push
xchg
or
int3
pop
push
ds
and
call
add
push
ret
scas
mov
in
add
ss
add
shll
lock
or
mov
stc
inc
cmp
add
rorb
sub
inc
add
sbb
cwtl
aaa
out
add
mov
jl
in
add
loope
loopne
adc
dec
sub
sub
jbe
movsb
and
mov
push
push
int3
out
sub
jae
test
stc
jp
int
mov
cmpsl
jo
xor
dec
arpl
sti
pop
mov
mov
divl
sbb
leave
std
pusha
add
fidivs
emms
jb
push
sub
cmp
pop
cmp
lret
and
or
mov
cld
lcall
mov
adc
add
int
push
cmp
test
mov
mov
jb
cwtl
inc
imul
pop
adc
stos
push
lcall
push
daa
insb
add
add
jo
leave
das
rcll
add
and
xchg
push
call
sbb
add
adc
in
push
mov
inc
out
int
pop
mov
movsl
int
add
push
push
add
call
add
fnstcw
inc
add
leave
lds
sub
cltd
cmp
test
add
enter
fdivr
sub
sahf
in
stos
add
loope
gs
mov
mov
pop
pushf
xor
sbb
cmp
cmp
loopne
xlat
icebp
aaa
xor
add
mov
cmp
push
mov
or
lcall
add
lods
sti
pop
cmp
adc
sub
xor
loope
mov
test
dec
add
adcb
jae
dec
add
pop
dec
adc
loope
leave
push
and
xor
push
xor
xor
mov
add
pushf
lcall
sti
xchg
fsubp
or
pop
or
pop
test
std
cmp
aam
test
repz
jbe
inc
sub
stos
inc
add
leave
into
jecxz
not
das
jnp
xor
inc
xchg
mov
jnp
testl
add
add
add
add
into
lods
jecxz
addr16
filds
dec
add
data16
outsb
add
ror
xor
test
adc
sbb
mov
outsl
rcll
mov
enter
stos
inc
add
dec
add
sahf
or
add
fisttpll
add
in
std
pop
das
subl
mov
cmp
jmp
mov
mov
jmp
scas
loopne
outsb
add
mov
add
cmpsb
rcll
mov
add
add
pop
ja
rorb
hlt
push
sbb
jo
push
iret
movsb
xchg
scas
pop
dec
add
add
out
sub
adc
push
xchg
inc
in
add
cld
push
sti
mov
and
int3
fstpt
or
add
xor
mov
insb
add
imul
add
cmp
cmp
sub
stos
add
or
hlt
in
add
in
jbe
in
fisttps
je
repz
add
add
adc
pop
fists
fisubs
add
xchg
xor
mov
lock
leave
add
sub
mov
add
lret
roll
mov
mov
dec
push
inc
pop
pop
jne
sbbl
pushf
mov
fcos
dec
add
out
popa
adc
add
add
gs
add
cmpsl
test
enter
lcall
aad
cmpsb
aad
push
stc
out
into
lahf
lea
ljmp
dec
gs
mov
iret
add
rorb
add
cmp
xchg
ror
sub
or
mov
aaa
out
int
dec
add
inc
mov
add
cli
xchg
jle
xor
seta
int3
xor
xchg
xor
mov
xor
popa
and
jns
adc
fs
add
xchg
orl
mov
add
dec
add
cmpsl
ss
lahf
int3
mov
add
and
add
xchg
sub
mov
fstps
add
or
xor
ss
jnp
add
xor
sbb
stos
add
aaa
xchg
rorb
add
and
xchg
dec
add
add
mov
add
inc
mov
xchg
xor
cli
sub
insl
jp
jl
inc
icebp
pop
mov
mov
sub
sbb
add
pop
mov
mov
daa
cmpsl
mov
shrl
add
add
mov
cmp
or
pushf
jbe
or
jg
add
repnz
sub
cmc
add
and
pop
les
in
pop
dec
add
push
adc
cli
cli
add
btr
mov
add
add
xor
in
std
ljmp
popa
sub
int
add
push
mov
lcall
lods
outsb
add
leave
mov
and
adc
aad
scas
js
sbb
lcall
enter
lret
fsubr
inc
add
mov
and
les
outsb
add
adc
enter
cmp
mov
inc
sub
into
ffreep
dec
add
pop
ret
sahf
scas
push
ret
pop
jle
jns
aaa
aad
xchg
and
movsb
add
faddl
in
mov
add
pop
rcll
inc
or
cmp
arpl
mov
addl
add
inc
pop
repnz
inc
add
ret
xchg
bound
sub
loop
add
daa
dec
add
mov
cld
adc
jg
jecxz
jl
in
das
std
jne
inc
lcall
stos
sub
js
es
jno
flds
push
mov
dec
add
add
add
aam
std
ficoms
push
js
add
rcrb
inc
add
add
jp
xor
shlb
mov
and
div
mov
das
icebp
loopne
int3
and
mov
adc
xchg
pop
ficoml
das
push
loop
jge
dec
sbb
in
das
inc
or
inc
add
cmp
shl
out
adc
mov
in
fimuls
mov
jmp
aam
imul
cltd
and
jno
push
cld
lods
or
lahf
push
sbb
div
bound
or
add
aaa
sbb
xchg
sub
lret
imul
inc
add
bound
mov
cmp
cmpsb
test
nop
sub
mov
filds
sahf
js
popa
out
cwtl
int
into
push
arpl
fscale
pop
aad
jno
jge
pop
jmp
push
add
fstpl
push
jmp
mov
pextrw
lods
call
add
cltd
into
cltd
xlat
mov
mov
mov
in
lcall
icebp
xor
add
xor
mov
jp
mov
push
add
adc
add
es
jo
mov
push
xchg
lcall
rcll
leave
adc
sbb
add
sub
pop
pop
adc
dec
lcall
cld
movsb
inc
add
mov
add
leave
scas
add
add
dec
jae
popa
gs
jge
add
lcall
lods
push
add
lcall
cmc
mov
sbb
mov
add
stos
push
sbb
mov
or
inc
xlat
sub
adcb
stos
cld
pop
lods
push
adc
or
jne
sub
outsb
add
jle
int
cmp
pop
ds
dec
add
adc
push
pushf
in
hlt
mov
scas
xchg
lock
and
jno
sahf
aad
or
and
bound
loopne
cmp
test
dec
inc
das
jbe
inc
add
mov
xchg
roll
and
jl
cmpsb
adc
mov
jae
add
test
loope
jo
ds
sbb
sahf
std
jmp
jo
imul
shr
mov
inc
inc
add
call
insb
add
add
scas
negb
xchg
xchg
xchg
mov
rorb
mov
inc
add
and
mov
sub
mov
add
pop
xor
and
dec
add
ror
dec
add
aam
pop
cmpsl
xor
add
fcomi
xchg
cmp
xchg
add
push
std
push
incb
pushf
or
and
ret
jns
mov
out
xlat
out
lods
je
jnp
lahf
pop
aad
pop
das
in
lret
imul
jmp
push
imul
mov
and
jae
rolb
mov
sbb
cmp
sub
arpl
icebp
push
stos
mov
add
mov
jge
ds
insb
add
xchg
test
push
dec
decl
out
add
dec
add
cli
dec
add
mov
add
add
mov
outsb
add
push
add
pop
test
lcall
mov
out
std
in
adc
insl
mov
in
lods
adc
and
jb
inc
add
das
insb
add
pushf
mov
sti
mov
add
add
aad
stc
clc
mov
mov
leave
outsb
add
and
lock
add
or
aam
add
orb
xchg
xchg
lcall
cmc
test
xor
stos
pop
cmp
lds
mov
imul
jno
add
mov
cmp
mov
lock
in
clc
outsb
add
iret
ja
jne
inc
adc
add
xchg
in
xor
rcrl
mov
sub
ficomps
jle
stc
pop
mov
int
jmp
xor
xlat
add
cmp
insb
add
sbbb
fistl
add
rcrl
icebp
xchg
cmp
add
loope
jb
dec
add
ds
gs
sbb
xor
add
or
stos
mov
and
ficompl
aas
cld
pop
lea
pushf
sub
jne
add
adc
cmpsb
mov
call
push
test
or
add
cltd
and
aad
fstpl
int
mov
jne
sub
lret
in
add
jns
push
scas
ds
pop
push
jae
js
jg
ljmp
pop
sbb
imul
inc
add
mov
mov
mov
icebp
rcrl
mov
in
adc
add
xchg
loope
hlt
fisubs
popa
addr16
nop
adc
xor
jg
nop
mov
xchg
imull
add
fbld
inc
std
mov
pop
shr
xchg
sub
add
lock
add
mov
pop
cmp
call
add
jnp
xchg
add
add
add
pop
or
mov
add
lahf
movsl
icebp
push
jmp
jl
and
dec
add
sti
push
add
mov
add
jge
stc
dec
loope
stc
xlat
jbe
mov
add
xchg
mov
movsl
iret
push
jno
lahf
adcb
inc
movq
add
jne
lret
or
aaa
add
imul
setbe
add
dec
insl
adc
lahf
int3
mov
add
rcrl
cmp
lret
arpl
iret
testb
add
adc
add
dec
inc
add
je
dec
sub
pop
or
inc
add
add
adc
js
ret
xlat
adc
stos
mov
dec
add
fstpt
arpl
jg
fisttpll
cwtl
sbb
fwait
sbb
add
cmp
push
dec
add
mov
inc
es
adc
dec
add
add
cmp
popf
test
add
stc
and
add
test
add
add
xchg
dec
jns
arpl
add
imul
pushf
inc
and
inc
add
dec
sub
iret
jno
mov
movsl
and
push
addl
or
imul
mov
or
or
nop
dec
add
jecxz
pop
out
mov
sub
ljmp
cmp
pop
adc
xchg
fildl
and
dec
add
push
in
xchg
sarl
movsl
hlt
push
es
shlb
add
inc
xchg
mov
pop
stos
test
or
test
int
add
out
loope
add
and
add
add
sub
repz
cltd
dec
add
add
stos
add
add
sahf
sub
push
pop
dec
add
add
dec
leave
push
sbb
inc
add
movsl
pop
jle
and
cmpsl
jbe
add
lcall
stos
adc
fisttps
push
test
add
xor
cmp
out
pop
adc
mov
push
sub
movsl
movsl
ds
test
adc
jb
bound
ss
std
dec
add
aad
hlt
cmp
mov
pop
mov
add
mov
int3
jne
mov
data16
mov
scas
sahf
ret
push
xchg
lcall
jle
push
loopne
pop
negl
into
adc
cmpsl
daa
mov
hlt
dec
add
inc
add
mov
dec
jp
out
stc
push
lods
dec
add
scas
aas
imull
add
xchg
dec
data16
sub
stc
or
push
test
or
mov
and
leave
insl
push
add
add
jmp
xchg
test
in
add
rolb
add
adc
and
lods
xchg
ret
add
scas
dec
fidivrs
les
dec
ret
mov
mov
xchg
inc
in
loopne
mull
jne
adc
cltd
sub
mov
inc
add
lods
lcall
ret
xor
inc
add
fst
mov
les
xchg
mov
sub
and
test
les
xchg
cmp
stc
push
add
repnz
sub
and
mov
cmp
cli
jo
add
cmp
add
cwtl
mov
jg
adc
clc
xchg
dec
ffreep
imul
jge
aaa
fisubrl
leave
xchg
mov
adc
outsb
add
or
mov
adc
xor
xor
test
cmc
movsl
xchg
je
add
outsl
xor
in
hlt
hlt
ret
jb
pop
push
jno
jne
mov
daa
les
add
or
push
mov
push
fwait
jb
add
dec
add
mov
jmp
inc
inc
xchg
xchg
mov
sub
imul
ret
dec
jmp
lods
insb
add
out
jo
pop
cmp
add
pop
movsl
cmp
cltd
fdivrs
fistps
add
add
sbb
mov
jmp
xchg
ds
xchg
int3
inc
add
add
add
push
ljmp
je
cli
add
bnd
push
add
addl
push
pop
add
add
add
and
push
sub
stos
inc
jb
and
mov
xor
xor
jno
jg
pop
out
xchg
aad
test
cmpsb
std
pushf
incb
sbb
daa
mov
add
push
lock
pushf
out
jae
add
cmpsl
xchg
mov
xchg
xor
or
push
pushf
mov
jp
mov
inc
add
cld
data16
xchg
cmp
inc
add
addb
test
jnp
push
mov
inc
sbb
outsb
add
adc
dec
or
fbld
cmp
push
insl
push
stc
xor
js
push
push
add
pop
fidivrl
sub
and
dec
test
cmc
ficompl
add
xchg
sub
sbb
out
mov
jg
popf
insb
add
fnsave
cltd
xchg
add
out
push
add
mov
add
xor
dec
clc
pop
in
insl
repz
jb
inc
add
add
dec
add
and
data16
pop
adc
outsb
add
cwtl
cld
rorl
or
mov
hlt
xchg
leave
stc
ss
add
cmp
mov
add
add
sub
add
mov
stos
enter
xor
and
cmp
and
cltd
sub
aas
mov
mov
lods
sarb
dec
add
add
mov
adc
dec
add
cmpb
ret
std
dec
add
cmp
pop
lods
mov
enter
pop
repnz
add
cwtl
ljmp
xor
inc
add
adc
add
add
sbb
pop
test
dec
add
out
mov
xchg
imul
sti
lret
or
sub
push
das
jne
lds
xchg
adc
xchg
pusha
add
call
xchg
or
sahf
call
hlt
cmp
popa
xor
inc
add
ja
gs
cltd
jge
sub
push
inc
xor
and
outsl
dec
add
pusha
add
fcomps
add
icebp
pop
andb
push
daa
bound
adc
sbb
mov
int3
xor
ficoml
iret
xor
mov
pop
movsb
insb
add
pop
inc
add
ds
int3
jmp
hlt
js
mov
add
cwtl
hlt
push
clc
add
jae
add
loope
jns
mov
add
adc
test
jle,pt
sbb
and
add
add
movsl
mov
inc
add
add
mov
ja
push
jmp
add
add
sub
dec
add
push
fcomip
mov
cmp
jb
mov
mov
outsl
push
es
xchg
pop
lcall
mov
je
je
insb
add
fs
insb
add
sub
jp
jmp
add
mov
mov
or
add
and
jge
add
adc
push
xchg
test
add
mov
jmp
cld
adc
stc
cmpl
lcall
daa
mov
jae
xchg
lods
xchg
aam
inc
stos
jp
mov
shr
ja
or
push
pop
cld
ss
mov
add
test
adc
hlt
cmc
enter
addl
add
fld
js
inc
add
loop
idivl
xor
imul
or
xor
xchg
call
pusha
add
add
dec
mov
paddsb
ljmp
add
and
aas
mov
inc
add
cld
cmp
fwait
jbe
stos
lods
mov
add
dec
cmpsl
push
pop
cld
sbb
repnz
push
loope
push
sbb
sbb
lret
or
cwtl
dec
pop
push
lods
adc
push
jne
add
sub
jns
mov
repnz
add
add
sbb
cmpsl
stos
rclb
push
aad
testl
rolb
outsb
add
sub
fwait
stc
dec
add
add
and
sub
sbb
mov
sbb
clc
aaa
testl
sti
shll
test
movsb
jmp
cltd
fldt
dec
loope
fsubrl
and
cmpsl
add
outsb
add
add
jbe
inc
mov
jne
mov
mov
add
ja
add
xchg
mov
pop
psubb
ss
pop
mov
dec
add
add
push
add
mov
add
dec
pop
repnz
adc
mov
adc
fnstsw
or
dec
cmc
out
add
and
mov
out
in
dec
add
test
xlat
sti
xor
add
add
mov
fidivrs
mov
adc
mov
cmp
jne
ss
lods
popa
jb
xor
xor
adc
sarb
add
loop
jb
fmull
in
mov
fiaddl
cli
out
jne
or
fidivl
mov
inc
rcl
fwait
aas
jo
cmp
xor
push
inc
in
mov
mov
push
aad
inc
aas
sub
jge
adc
push
push
sub
mov
mov
xchg
mov
inc
pop
adc
test
shl
add
inc
adc
cltd
movsb
gs
aam
repz
fs
jg
fdivrs
sub
pushf
repnz
adc
add
stos
dec
outsb
add
add
pop
outsl
test
lds
adc
add
xlat
dec
add
clc
mov
aad
icebp
adc
add
xor
add
and
jle
add
push
cmp
into
shll
xchg
shl
mov
aaa
pop
push
add
nop
repnz
or
inc
fsubrl
jecxz
add
aam
addr16
das
mov
pop
sbb
pop
mov
add
push
repnz
add
add
icebp
ss
ss
les
sub
int
or
rdpmc
ficomps
call
add
add
jbe
inc
add
mov
cmpb
push
jb
call
add
cmp
add
add
test
mov
inc
add
add
mov
iret
sub
add
inc
add
ljmp
lds
pcmpgtw
out
sbb
test
add
jecxz
jne
mov
imul
cltd
inc
or
mov
ljmp
add
dec
fcmovb
sbb
out
mov
pop
xchg
cltd
xchg
xor
add
sub
push
in
add
insb
add
adc
add
add
dec
imul
add
dec
add
add
test
mov
ss
dec
add
xor
xor
loope
add
and
add
pop
inc
jo
pop
test
bound
mov
and
jge
mov
test
add
or
pop
rep
stos
cmpsb
push
add
shll
xchg
leave
mov
into
je
pop
aad
out
push
xor
add
shlb
jg
test
sbb
mov
jle
add
add
ss
mov
push
jecxz
jmp
xchg
fxch
inc
add
lret
xlat
cmp
roll
iret
gs
add
fsub
inc
add
jmp
add
mov
jge
cmc
fstps
add
das
jg
add
sbb
data16
jno
push
fistl
add
and
test
add
add
add
sti
sbb
iret
addr16
pusha
add
cmp
dec
add
or
js
cli
sahf
inc
jle
inc
jp
mov
xchg
push
sub
cs
dec
add
int
ljmp
xchg
and
aam
inc
add
mov
lds
ret
or
inc
add
add
and
dec
cmc
pop
push
add
call
add
incl
in
add
inc
pop
int
jge
icebp
push
data16
loope
add
push
lods
push
add
jns
adc
mov
sbb
or
repnz
mov
insb
add
jae
icebp
sar
les
mov
repz
add
add
dec
sarl
dec
adc
add
fmuls
add
mov
add
aaa
sbb
add
add
insl
and
fidivs
mov
add
mov
xor
add
imul
mov
or
or
mov
dec
mov
add
fisubrs
cld
cmp
scas
fwait
mov
inc
add
push
adc
mov
mov
das
lahf
fwait
call
jo
xchg
push
mov
adc
add
sti
je
inc
add
push
adc
xchg
fs
mov
pusha
add
jbe
outsb
add
mov
cmc
jle
scas
mov
leave
push
xchg
data16
mov
mov
shl
test
in
or
push
fisttpl
add
scas
mov
wrmsr
sbb
or
add
mov
add
out
mov
sub
dec
add
jmp
add
movsl
fildl
imul
and
jmp
add
xchg
fisubrl
arpl
add
subl
inc
add
jp
mov
xchg
inc
aam
out
into
test
std
mov
and
add
jns
add
jecxz
ret
popa
repnz
loopne
pop
icebp
cltd
add
stos
out
adc
sub
out
or
or
add
xlat
cltd
mov
hlt
mov
ficomps
aas
xchg
add
cmp
lock
lock
or
inc
add
jnp
add
aas
fyl2xp1
dec
bound
pop
addl
sub
push
add
add
les
cmp
add
mov
shlb
scas
xchg
int
out
sahf
stos
inc
mov
xor
bound
cltd
lcall
lret
sbb
add
pop
xor
into
cltd
repnz
movsl
sub
add
mov
xchg
mov
mov
mov
or
push
mov
shll
fneni(8087
in
push
sub
pop
and
cmp
pop
cmp
push
jge
in
push
mov
add
shll
cli
addr16
mov
cmp
add
pop
mov
or
lock
imul
data16
scas
jnp
out
mov
les
add
adc
jge
mov
push
push
xchg
cmp
in
inc
add
push
popf
fisttps
ret
sti
mov
sarb
add
inc
add
sub
inc
add
add
adc
stos
sub
dec
pop
mov
jp
aad
insl
mov
sbb
add
popf
mov
dec
add
jecxz
rcrb
cltd
cltd
xchg
fistl
jg
add
repz
fistl
dec
add
push
popf
xchg
cmpl
xchg
scas
or
ret
out
mov
xor
add
pop
jb
insb
add
mov
dec
inc
add
xor
adc
mov
xor
add
movsb
dec
add
call
mov
xor
sub
ss
xor
arpl
cmpsl
fisubrl
sbb
pop
push
add
lods
btc
mov
add
jbe
sub
cld
jmp
incl
dec
test
lcall
cltd
test
jp
ret
jle
cmp
pop
push
sub
push
cmpsl
aam
add
subb
mov
add
add
sbb
loope
jle
pop
call
fbstp
popa
inc
lret
xchg
in
mov
jbe
jecxz
cmpsb
das
fstps
outsb
add
movsb
pop
ss
adc
ss
push
test
clc
in
pushl
imul
cmp
cltd
cmp
add
xor
arpl
add
repz
icebp
mov
mov
popa
pop
inc
add
jg
adc
dec
mov
mov
popf
ficoms
adc
xor
add
cmpsl
nop
fisttps
add
add
cmp
pop
adc
cmpsb
aad
cmp
and
lods
and
inc
sbb
insl
mov
jp
and
cmpsb
adc
divb
add
push
aad
stos
add
pop
mov
ja
imul
xor
aam
add
add
sub
inc
add
push
subb
iret
mov
movsb
mov
mov
fmull
cmpsl
and
scas
mov
add
in
cmpsl
inc
add
push
rcrb
dec
add
add
inc
add
mov
add
rol
repz
fsubrs
jle
add
sub
lods
fsubr
pop
mov
ss
mov
nop
lods
jl
ja
lcall
aam
sbb
aas
push
pop
call
cmp
outsl
and
push
sti
jmp
fmuls
lods
cld
push
xchg
pushf
pop
cmp
mov
add
sub
repnz
push
add
add
add
add
adc
aam
dec
push
stc
sbb
notb
mov
into
or
add
sub
lds
sbb
and
or
std
pop
or
sub
sahf
mov
addr16
jmp
fistl
or
dec
lds
add
out
movsb
inc
jb
add
push
xchg
or
jle
fisubrl
test
clc
call
cld
add
scas
cmpsb
or
cmc
dec
add
test
ret
pop
jl
and
cwtl
xlat
stos
and
add
mov
push
push
mov
cli
pop
or
cmp
sbb
loope
add
push
jle
jbe
outsb
add
mov
push
and
aam
into
into
mov
rol
std
push
sub
data16
dec
add
scas
nop
insl
mov
add
sbb
jae
push
pop
mov
ret
adc
leave
push
int
adc
cmp
add
fstcw
pop
loopne
lahf
fidivrs
lds
jecxz
inc
jecxz
sbb
add
imul
in
and
test
jg
test
add
lds
mov
stos
cmp
sbb
jg
mov
in
adc
daa
fmulp
lcall
cmp
repnz
xchg
inc
add
or
js
orb
repnz
add
lret
sbb
mov
cmpsb
jns
add
push
cmp
pop
lret
push
inc
insl
mov
and
inc
add
stos
loop
js
add
ror
add
add
inc
add
xchg
dec
aad
xchg
jbe
les
test
xor
mov
add
xor
add
jno
xor
rolb
cmp
cmp
add
loopne
leave
shrl
pop
lret
adc
dec
add
add
dec
jns
cli
xor
cmpsl
cltd
imull
sub
repnz
cwtl
push
rolb
push
je
add
roll
popf
jbe
mov
add
xchg
addl
or
add
mov
add
pop
orl
ja
add
dec
adc
add
or
stc
push
data16
push
add
stos
bnd
int
or
add
and
mov
and
les
add
push
insb
add
std
pop
popa
sbb
dec
bound
xacquire
psllw
inc
add
fidivrs
out
imul
add
add
mov
int
add
mov
inc
add
mov
std
jmp
cmpsb
fcomps
xchg
ret
out
add
adc
add
add
xor
mov
add
scas
mov
ljmp
add
and
arpl
adc
repz
cmp
out
add
jb
pop
das
pop
pop
outsb
add
mov
fimull
add
popl
add
xchg
ret
in
lcall
lds
dec
int3
mov
mov
outsb
add
pop
sub
adc
sbb
out
imul
dec
int
mov
add
xchg
mov
movb
loop
sbb
repz
mov
out
adc
bound
xor
out
imul
loopne
jbe
or
pop
and
cmpsl
sbbb
or
mov
out
add
dec
add
cmpsl
adc
add
jae
out
sahf
test
push
mov
daa
aaa
out
inc
mov
cmp
fdivrs
cltd
imul
and
mov
mov
stos
or
mov
adc
jle
lods
addl
fs
or
insl
dec
cmpl
push
and
xor
pop
hlt
ds
or
insl
int
movsl
std
out
je
or
das
mov
jl
xor
movsl
xor
add
daa
sarb
popa
imul
pop
jmp
shrl
test
mov
add
add
test
cmp
add
inc
add
add
xor
jl
mov
enter
pop
jp
lea
inc
add
mov
push
add
mov
xor
mov
sbb
out
repnz
imul
add
push
into
js
add
jg
xor
ja
sarl
add
ret
lock
fwait
and
or
outsl
inc
add
push
sub
enter
gs
jmp
or
push
shl
inc
add
mov
enter
pop
cmp
xchg
and
mov
mov
imul
jmp
jle
call
adc
push
adc
add
mov
add
sbbb
xorl
lock
ret
call
mov
inc
xchg
faddp
push
xorl
fs
xor
mov
xor
ja
push
mov
ds
ret
rorb
aas
repnz
push
arpl
add
inc
add
add
cld
jns
adc
cmp
add
sbb
icebp
aam
adc
shlb
add
lock
call
jmp
insb
add
fstps
repnz
mov
insb
add
and
mov
add
fptan
cmp
and
cld
subb
xor
daa
jbe
rcr
pop
dec
jno
jno
fiadds
nop
inc
sub
push
lcall
add
loopne
jmp
mov
adc
and
pop
dec
add
or
and
iret
dec
sbb
adc
push
je
push
leave
or
add
lahf
and
mov
mov
mov
ss
data16
cmp
cmp
add
int
fstpt
ficomps
fsub
mov
add
xchg
hlt
jmp
mov
add
movsl
rcl
mov
sbb
push
push
outsb
add
fs
sub
lods
mov
mov
sbb
push
leave
mov
int
lcall
mov
addb
loope
dec
add
sbb
inc
lods
xchg
push
in
mov
add
sbb
add
lds
add
add
push
ret
outsl
lret
xor
cmc
lret
sbb
fcoms
dec
add
mov
sub
fdivr
push
add
push
je
clc
shrl
mov
xchg
enter
fldl
and
cmp
jl
pop
sbb
mov
and
outsb
add
mov
push
pop
and
lods
fs
sbb
adc
ret
sti
in
mov
inc
inc
add
dec
movsb
rclb
out
pop
pop
insl
sbb
mov
movb
add
add
mov
rorb
add
xchg
pop
pushf
repnz
xchg
mov
sti
mov
add
mov
mov
add
pusha
add
jbe
in
mov
add
das
or
gs
stos
inc
mov
call
out
cmp
push
cmp
lret
std
dec
and
sub
addr16
sub
dec
add
xchg
addr16
inc
add
add
add
add
stos
cwtl
iret
dec
add
rolb
xchg
mov
mov
lods
pop
outsl
jl
cmpsl
js
add
movsb
cmpsb
outsb
add
cld
pusha
add
mov
mov
inc
cld
add
add
adc
sbb
add
pop
or
sub
stos
push
add
mov
leave
sub
add
jmp
imul
lret
pmaxsw
loopne
iret
daa
aaa
int3
xchg
sbb
popl
leave
pop
in
outsb
add
leave
aaa
imul
add
sbb
add
fisubrs
mov
daa
inc
add
sub
sarl
and
stc
cmpsb
nop
inc
mov
loopne
add
mov
sbb
bound
pop
xchg
test
ja
fcmovu
or
cwtl
scas
dec
add
js
mov
mov
je
testl
jg
clc
mov
adc
add
lock
mov
xchg
xchg
or
jo
sbb
add
out
stos
fisttpl
scas
out
jmp
insb
add
mulb
aaa
add
mov
cmp
xchg
cmpsl
mov
sub
scas
add
add
into
or
jmp
add
sub
add
enter
and
mov
dec
add
daa
pop
pop
cltd
cld
aas
mov
pop
sbb
mov
add
sbb
jle
jo
dec
inc
add
push
lds
mov
fld
add
push
inc
cmp
add
add
mov
dec
add
int3
sub
xor
add
xchg
xchg
sbb
mov
das
lcall
aaa
fistpll
mov
lcall
add
xchg
sub
pushl
fsubl
mov
pop
movl
cmp
push
daa
push
call
add
out
pop
icebp
loope
cmp
pop
sbb
add
mov
xchg
es
dec
add
es
or
mov
outsl
xor
pop
ficoms
call
inc
aas
and
test
add
adc
sahf
outsb
add
les
add
adc
xlat
push
xor
adc
jnp
pop
xlat
xor
add
add
and
cwtl
loopne
sahf
cli
stc
push
cmp
xor
mov
mov
dec
popa
scas
mov
inc
add
cmpsl
out
sub
je
test
cld
lock
sti
cmp
mov
mov
add
add
mov
lds
loopne
mov
outsb
add
fnstsw
xor
push
add
lods
and
ret
and
pop
hlt
xchg
int
rol
push
push
jg
add
dec
add
sub
inc
add
inc
add
arpl
add
fcoml
lcall
hlt
aaa
fadds
sbb
dec
jb
mov
arpl
mov
mov
push
push
pop
add
rclb
cmp
cli
mov
pop
pop
dec
fsubrs
add
inc
add
cmovae
into
bound
icebp
mov
add
mov
xchg
mov
xlat
xchg
jo
sub
push
loop
add
aas
mov
add
loopne
add
xlat
ljmp
inc
add
add
add
sbb
into
and
shll
add
lods
cmp
fdivl
xor
add
lods
fstps
lret
iret
pushf
mov
rcrb
adc
in
js
add
adc
inc
add
scas
push
adc
pop
dec
add
mov
lret
popa
adc
fwait
and
outsb
add
sahf
mov
in
loope
pop
push
add
call
shll
pop
insl
pop
cld
sahf
je
repz
daa
push
faddp
dec
arpl
fmull
mov
dec
add
loop
push
jg
test
mov
rcll
scas
mov
push
popa
or
fcomi
or
xor
dec
out
sub
jne
adc
xor
jno
clc
jae
pop
jo
push
shll
sbb
add
push
popf
loop
xor
jae
and
loopne
add
xchg
add
add
add
cmp
add
inc
lds
add
data16
scas
leave
aad
pop
lret
rclb
decb
add
add
or
ficompl
out
out
xor
sar
mov
add
xchg
inc
add
add
add
xor
sub
rcl
dec
mov
add
mov
and
inc
add
jl
sub
nop
add
add
fucom
das
arpl
add
xchg
cmc
lds
adc
dec
inc
add
adc
decl
add
add
add
add
pop
add
xlat
mov
add
add
add
addr16
mov
jmp
movb
into
js
testl
stos
loop
pop
push
jmp
stos
ljmp
pslld
add
aad
dec
inc
add
lahf
dec
mov
add
sbb
add
cwtl
insb
add
gs
inc
mov
in
js
and
dec
add
mov
rorl
jne
add
nop
mov
xlat
mov
jns
stos
gs
dec
add
dec
cld
mov
icebp
loopne
pop
out
pushf
push
pop
in
jne
xor
add
mov
adc
add
xchg
push
cmp
sbb
notb
notb
jmp
add
xchg
ds
rcll
mov
xchg
or
popf
js
pop
aas
rcrl
push
sub
pop
cltd
cmpsb
icebp
loop
std
lret
inc
jo
add
xchg
push
andb
shll
jmp
call
fdivr
imul
sbb
jecxz
xchg
inc
lods
mov
pop
push
or
mov
cltd
pop
testl
add
mov
sub
xchg
jno
jecxz
mov
popa
push
add
test
add
jge
mov
outsb
add
adc
sbb
mov
pop
mov
add
xchg
dec
add
push
mov
add
ljmp
fbstp
stos
add
mov
add
ret
xchg
cmp
add
jle
mov
jge
add
or
movsl
sbb
sub
mov
mov
xor
adc
pop
or
daa
int
adc
add
imul
cmp
add
add
lahf
repnz
mov
xchg
lcall
ljmp
add
xchg
mov
pop
imul
add
inc
icebp
jno
je
stc
fwait
sbb
je
inc
test
add
orb
ljmp
bound
cmpl
stc
in
ss
iret
je
add
add
jl
fildll
sbb
adc
jo
mov
out
inc
into
sbb
pop
test
pop
adc
cmp
add
jno
xor
test
add
fwait
pusha
add
lret
jno
es
dec
add
add
add
inc
and
insb
add
rclb
xchg
into
int
add
add
push
subl
jb
mov
pop
enter
add
push
add
and
pop
jl
lret
sbb
lea
add
fiadds
add
inc
add
data16
add
dec
add
add
sub
stc
and
sbb
ret
sub
xor
xor
sahf
sbb
push
dec
add
push
xchg
outsb
add
add
mov
lcall
data16
xchg
ret
sbb
ds
movsbl
adc
xchg
adc
jnp
and
outsb
add
mov
or
dec
add
add
outsb
add
dec
add
inc
data16
testl
repz
ficompl
push
mov
xchg
stos
inc
add
mov
push
pop
add
pop
lods
out
jno
aam
pop
and
add
pop
hlt
cld
lds
dec
add
mov
js
jo
arpl
add
out
cld
lret
add
pop
pop
mov
nop
or
fsubrl
fdivl
pop
iret
cmpsl
push
add
in
push
dec
xchg
sbb
nop
xor
add
and
bswap
nop
shrl
xlat
in
or
or
jp
push
cli
iret
shlb
dec
add
pushf
adc
mov
lock
xchg
gs
leave
lcall
xchg
mov
sub
ss
movsb
lods
out
add
sbb
jl
or
subl
iret
sub
insl
mov
add
pop
fmul
jno
add
pushf
jno
outsb
add
sbb
das
xor
pop
sahf
jmp
push
hlt
pop
mov
add
add
lahf
xchg
test
nop
ss
insl
test
mov
fwait
icebp
repz
daa
mov
xor
out
mov
scas
and
add
mov
push
aaa
dec
add
mov
addr16
fsubrl
add
jns
bound
sub
xlat
out
lahf
sbb
sbb
or
sbb
cltd
pop
xchg
inc
add
pop
push
add
ds
mov
add
lods
test
mov
outsl
pop
adc
arpl
cmpsl
mov
int3
jne
xor
dec
add
and
xor
adc
shrb
add
add
cwtl
add
mov
add
add
je
add
lds
into
jle
xor
clc
inc
add
data16
out
and
pusha
add
add
int3
test
add
sahf
sbb
xorl
shlb
pop
inc
add
push
sbb
adc
call
mov
ljmp
ffreep
mov
xchg
pop
mov
sbb
stos
out
mov
fimull
adc
add
arpl
out
subl
cmp
mov
movsl
inc
mov
rsm
outsl
ljmp
mov
jecxz
add
add
scas
sti
stos
push
lods
cli
movsl
add
add
inc
loopne
sbb
push
call
add
cmpsb
mov
jno
sbb
das
movsl
ss
mov
sbbb
subb
jp
test
inc
scas
jns
mov
enter
add
add
inc
insb
add
mov
lods
adc
add
add
add
mov
add
push
outsl
shll
ret
pushf
lcall
leave
fisubs
aad
ret
fstl
in
imul
in
in
add
push
out
pop
push
push
add
jae
movsb
sbb
xor
mov
stos
and
xlat
push
out
dec
ds
cmp
jns
sarl
dec
add
lea
add
leave
pop
data16
idivl
add
aaa
flds
repnz
in
jbe
add
or
cmp
je
adc
add
es
jb
in
mov
mov
rcl
int
pop
fnstenv
jnp
add
test
ficoml
testb
xlat
test
add
mov
mov
sbbb
adc
lcall
mov
or
stc
int3
xchg
into
sub
adc
addr16
fcmove
or
daa
or
jbe
add
jnp
int3
adc
mov
iret
xchg
pop
push
loop
fprem1
gs
fisttpl
add
jno
arpl
or
dec
dec
add
fdivl
outsb
add
pop
xor
out
dec
add
mov
mov
rep
mov
repz
outsl
imul
or
and
flds
sub
mov
jmp
fistpll
lcall
xchg
xor
and
mov
sbb
insb
add
cs
out
stos
cmp
cmpsl
or
enter
push
lahf
int3
outsb
add
push
pop
fisttpl
or
bound
insl
std
xchg
addr16
bound
dec
add
pop
jle
gs
xchg
and
xchg
push
xchg
jp
pop
add
enter
popf
inc
add
loope
dec
add
add
test
mov
xlat
rclb
dec
sbb
mov
xor
xchg
push
aad
add
cmp
pop
cwtl
adc
pop
fnstenv
nop
pusha
add
arpl
dec
add
popf
lock
add
mov
dec
and
xchg
pop
adc
hlt
inc
add
imul
sti
dec
bound
and
sbb
add
push
sbb
inc
jno
or
fldenv
add
int
cmpsl
lods
fwait
add
jnp
in
jne
adc
jno
pop
sbb
mov
sub
xor
pushf
mov
fwait
or
mov
and
xor
outsb
add
dec
mov
add
add
addr16
add
ljmp
and
stos
jp
mov
xor
out
ret
loope
lret
aas
xor
mov
dec
add
cli
mov
mov
popf
mov
bnd
cmp
inc
add
fmull
jae
dec
pop
mov
add
add
xor
cmc
movsl
and
xor
dec
add
jns
scas
adc
test
inc
add
add
jl
cltd
sub
repnz
