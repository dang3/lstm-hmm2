add
push
in
addr16
pop
pop
pop
pop
out
out
out
out
dec
sti
sti
sti
sti
sti
sti
std
std
std
std
std
std
std
aas
aas
call
call
dec
dec
dec
mov
shrl
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
adc
dec
dec
dec
dec
dec
dec
sub
rcl
rcl
rcl
rcl
rcl
jle
jle
jle
jle
mov
mov
mov
add
fstp
fstp
fstp
fldl
inc
int
int
int
int
int
int
aam
aam
aam
aam
jg
out
out
out
mov
mov
mov
mov
mov
mov
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
jnp
scas
scas
inc
inc
inc
inc
inc
add
add
mov
outsl
pop
pop
pop
pop
mov
in
in
in
sbb
mov
mov
mov
arpl
arpl
arpl
arpl
arpl
scas
scas
scas
scas
scas
scas
scas
pop
mov
mov
mov
in
push
push
push
push
push
push
push
push
push
add
das
pop
call
xor
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
imul
mov
cmp
cmp
cmp
add
and
pop
pop
pop
iret
iret
iret
iret
iret
iret
iret
add
add
incb
add
add
add
dec
dec
dec
cmp
ja
iret
iret
iret
iret
xlat
xlat
ret
ret
add
add
or
lcall
xor
xor
xor
unpckhps
adc
test
add
add
add
fcmovnu
fucomi
jmp
data16
lret
in
dec
sbb
sbb
mov
adc
push
push
push
pop
pop
pop
pop
pop
add
pop
pop
pop
pop
pop
add
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
jg
jg
jg
rcrl
mov
loopne
loopne
loopne
loopne
loopne
loopne
loopne
insl
insl
insl
insl
insl
xchg
out
push
push
push
push
mov
cltd
jge
jge
clc
clc
clc
clc
clc
clc
clc
clc
clc
clc
pop
pop
pushf
pushf
fmull
adc
add
add
rcl
rcl
rcl
rcl
rcl
sub
sub
sub
add
add
add
ljmp
div
div
div
fcomp
xor
xor
push
add
jg
jg
in
ret
ret
ret
ret
ret
ret
ret
ret
ret
push
push
jg
jg
jg
jg
jg
inc
inc
inc
inc
inc
popf
cltd
cltd
stc
stc
stc
add
add
sub
and
data16
imul
dec
dec
dec
dec
dec
dec
les
in
add
add
add
mov
jo
lcall
lcall
test
mov
lret
lret
nop
nop
nop
nop
nop
nop
nop
push
push
add
add
lods
imul
imul
jle
data16
loop
loop
loop
loop
loop
loop
aad
aad
dec
adc
adc
adc
out
out
out
fs
aas
aas
aas
aas
aas
aas
aas
aas
and
jb
mov
sub
addl
inc
inc
pop
pop
pop
pop
jnp
jnp
jnp
jnp
jne
mov
dec
dec
lahf
adc
adc
call
arpl
dec
dec
dec
dec
add
movsb
movsb
movsb
leave
push
push
push
push
push
push
push
push
push
add
add
and
and
add
lock
push
push
push
push
ret
ret
push
add
mov
or
or
or
or
mov
sbb
sbb
xor
sbb
sbb
sbb
sbb
add
fs
cmpsl
fcmovnu
fcmovnu
jmp
jmp
jmp
gs
xor
popf
popf
popf
popf
popf
popf
push
push
add
add
pop
div
negl
sbb
dec
dec
dec
mov
out
das
das
das
das
das
das
std
std
std
out
out
out
out
out
out
ja
ja
ja
lcall
add
add
rcl
lea
lea
scas
scas
scas
scas
scas
popf
lea
aam
and
and
and
and
sahf
add
add
add
lods
lods
lods
lods
ret
fstp
fstp
fstp
inc
inc
inc
inc
inc
inc
inc
fisubrs
inc
out
out
out
out
out
aas
aas
aas
aas
push
push
inc
inc
inc
inc
add
ja
ja
ja
in
lock
dec
dec
dec
dec
dec
dec
dec
dec
dec
addl
pop
pop
mov
out
out
out
out
mov
cmp
or
addl
outsb
addr16
xor
adc
mov
or
or
mov
adc
leave
leave
leave
leave
leave
test
add
sub
jne
popl
dec
add
add
add
add
int3
int3
rcl
rcl
rcl
rclb
push
push
push
push
push
push
push
add
add
add
xor
add
add
inc
inc
inc
inc
inc
jno
into
into
into
ja
add
dec
cmp
cmp
cmp
cmp
cmp
cmp
pop
push
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
in
aam
aam
aam
aam
and
and
sbb
mov
jp
fldl
inc
inc
inc
inc
inc
cmpsb
cmpsb
cmpsb
cmpsb
sub
das
das
das
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
jg
jg
cmp
jecxz
jecxz
jecxz
add
sub
sub
sub
sub
sub
sub
sub
sub
div
test
inc
inc
inc
inc
inc
add
add
or
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
hlt
hlt
pop
add
add
add
add
add
in
in
in
ja
sbb
sbb
rol
rol
inc
jo
jo
mov
rol
rol
rol
xor
pop
pop
pop
cmpsb
cmpsb
call
cmp
sti
sti
sti
sti
sti
sti
sti
sti
add
cmp
dec
dec
dec
add
addl
jp
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
stos
stos
jmp
cmp
in
inc
inc
inc
mov
adc
and
dec
dec
mov
gs
mov
push
aad
aad
aad
aad
stos
stos
stos
stos
stos
stos
jmp
ret
ret
jne
jne
data16
test
ja
ja
ja
ja
sub
sub
pop
pop
pop
adc
adc
call
out
out
lods
lods
lods
lods
lods
stos
add
add
add
add
add
add
add
mov
lret
lret
lret
lret
lret
lret
lret
adc
adc
adc
push
push
push
enter
add
add
push
push
push
push
sub
sub
sub
clc
clc
clc
clc
clc
clc
jmp
jmp
lcall
es
stc
stc
stc
stc
stc
stc
stc
stc
add
jo
push
push
mov
push
dec
scas
scas
scas
scas
scas
cmc
cmc
cmc
lahf
in
in
in
in
in
in
and
and
pop
pop
pop
mov
add
cmp
cmp
xor
xor
sbb
pop
pop
mov
jae
jae
addr16
mov
fcoml
adc
adc
inc
jae
mov
mov
lret
adc
adc
gs
aas
aas
aas
aas
aas
aas
aas
aas
aas
adc
add
add
mov
jg
jg
jg
pop
pop
repz
jle
jle
jle
popa
popa
popa
popa
popa
add
jmp
jmp
jmp
mov
mov
ret
ret
ret
ret
stos
js
js
js
js
js
js
js
js
sub
sub
out
out
out
add
add
and
and
xor
fstp
fstp
mov
mov
add
xchg
add
test
test
lret
adc
adc
adc
adc
mov
inc
inc
sahf
add
sbb
sbb
js
js
js
xor
xor
add
aas
aas
aas
aas
add
add
xchg
xchg
xchg
xchg
xchg
sbb
and
out
out
add
push
push
xor
xor
repnz
mov
xor
xor
xor
clc
clc
clc
clc
clc
add
loope
loope
loope
loope
loope
loope
loope
mov
nop
push
push
lock
out
lahf
push
push
ss
inc
es
jp
in
push
push
add
outsb
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
std
std
std
std
std
std
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
lcall
lcall
add
cmp
cmp
std
std
std
std
std
std
std
sbb
pusha
pusha
rolb
add
js
js
lock
rcl
rcl
movsl
movsl
movsl
cmp
es
lret
pop
pop
pop
adc
adc
lcall
lahf
lahf
data16
dec
dec
dec
dec
dec
dec
in
sub
and
and
es
or
or
or
adc
ja
ja
add
add
add
loop
loop
loop
jge
jge
jge
add
pop
pop
pop
and
and
and
and
and
and
and
and
and
and
and
pop
pop
pop
add
add
gs
mov
mov
mov
cmp
in
in
in
in
in
in
in
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
loope
loope
loope
loope
movl
add
add
add
add
xor
xor
xor
mov
dec
sbb
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
call
aad
sub
sub
dec
dec
dec
mov
rcl
rcl
rcl
stos
jge
jge
jge
push
push
push
push
push
push
push
push
push
push
push
jle
jle
jle
jle
jle
xor
mov
mov
mov
pop
or
or
or
adc
bts
stos
and
iret
add
add
add
add
add
add
jl
hlt
hlt
hlt
hlt
hlt
hlt
hlt
stos
stos
stos
in
lret
lret
outsb
add
add
mov
mov
mov
jae
jae
jae
jbe
dec
dec
dec
dec
dec
dec
mov
mov
rcl
sarb
sahf
sahf
sahf
sahf
sahf
sahf
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sahf
add
add
enter
enter
xchg
push
push
aad
aad
mov
mov
add
add
add
mov
movsl
movsl
movsl
movsl
movsl
data16
dec
dec
dec
xchg
xchg
cmp
outsb
outsb
mov
cmp
dec
cli
cli
cli
cli
cli
fcmovu
add
jbe
jbe
movsb
movsb
cvtps2pd
pop
pop
pop
pop
pop
addl
dec
jl
sub
push
push
mov
insl
insl
insl
insl
fwait
fwait
clc
clc
clc
clc
clc
mov
pop
cmp
cmp
into
into
mov
mov
mov
jbe
jbe
add
jmp
add
add
fisubrs
sub
filds
xor
arpl
jg
jg
jg
addl
cmp
add
rcl
roll
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
xor
xor
xor
xor
xor
xor
xor
xor
es
dec
jg
jg
jg
inc
loope
lods
lods
lods
lods
dec
dec
inc
inc
insl
insl
insl
insl
insl
insl
insl
pop
inc
inc
inc
inc
jp
add
add
fcmovnu
fildl
add
add
sub
mov
int
int
inc
xchg
fwait
fwait
fwait
popa
popa
popa
popa
rcr
push
subl
lock
and
and
jno
jno
sub
sub
push
push
fstp
sbb
sbb
sbb
sbb
fsts
jl
jl
jl
jl
jl
jl
movsb
mov
addb
ret
addb
add
add
add
aaa
aaa
aaa
aaa
aaa
aaa
add
add
add
push
test
test
test
add
add
adc
mov
and
and
and
lret
lret
xchg
xchg
xchg
xchg
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
add
add
insb
insb
insb
add
add
cmp
add
add
inc
jns
push
push
push
dec
dec
out
sub
sub
sub
and
add
add
xchg
jg
add
add
add
xor
fucomip
out
out
out
out
out
add
add
push
push
push
add
xor
in
xor
xor
xor
xor
cs
addl
addl
pop
pop
pop
pop
pop
pop
xor
xor
mov
add
add
jge
lret
lret
lret
lret
lret
lret
lret
adc
adc
adc
rcl
rcl
rorl
mov
mov
mov
adc
adc
adc
add
xor
xor
xor
inc
enter
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
or
add
das
div
idivl
xchg
xchg
xchg
xchg
add
add
add
add
addr16
cmp
cmp
adc
adc
stc
stc
stc
stc
stc
stc
stc
scas
scas
scas
scas
scas
in
in
in
in
in
fldenv
bound
loope
and
and
pusha
pusha
pusha
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
add
add
add
imul
jno
adc
or
or
or
or
or
or
fcmovnu
fcmovnu
fcmovnu
fcmovnu
sahf
sahf
or
or
or
or
mov
mov
repnz
push
push
push
push
push
sub
jge
and
and
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
mov
add
add
add
sub
sub
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
sub
cmpsl
cmpsl
cmpsl
cmp
cmp
xor
xor
push
add
cmp
cmp
cmp
cmp
cmp
cmp
shll
jbe
jbe
add
add
movsb
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
xor
push
movsl
fcomp
fcomp
fcomp
fcomps
pop
pop
pop
lret
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
mov
pushf
pushf
add
add
add
ds
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
cltd
cltd
out
out
out
out
out
out
out
out
out
out
add
add
cli
cli
cli
cli
cli
scas
scas
scas
scas
cs
in
in
in
in
add
mov
mov
mov
iret
iret
iret
iret
iret
iret
add
add
add
lds
mov
mov
mov
cmp
repz
incl
ret
ret
add
xor
xor
xor
and
push
push
push
inc
inc
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
popa
popa
popa
div
div
div
notl
push
push
push
push
push
push
push
push
repnz
add
push
push
and
jns
jns
or
gs
clc
clc
clc
xor
add
cltd
cltd
cltd
cltd
mov
mov
push
push
push
xchg
imul
add
add
add
inc
add
add
add
call
jno
sbb
sbb
sbb
sbb
mov
sub
and
pop
add
es
mov
adc
adc
jp
sub
sub
sub
dec
dec
dec
add
add
inc
inc
inc
inc
inc
inc
inc
loope
loope
pop
pop
pop
pop
pop
pop
mov
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
push
or
rcl
inc
inc
or
or
add
add
add
pop
pop
inc
inc
inc
inc
ret
ret
hlt
hlt
hlt
fcmovu
fcmovu
fcmovu
aad
lret
lret
add
loopne
loopne
loopne
loopne
fcmovnu
hlt
hlt
jg
jg
jg
cwtl
cwtl
cwtl
aam
scas
scas
scas
scas
scas
sbb
sbb
sbb
rol
rol
rcll
push
push
push
push
push
push
push
push
push
push
push
push
push
add
add
add
jmp
cs
addr16
cmp
add
adc
adc
adc
cs
inc
rcl
shrb
sub
sub
sub
stos
stos
stos
jne
jne
jne
cli
cli
cli
cli
cli
cmc
cmc
cmc
cmc
iret
add
push
push
incb
data16
aas
aas
aas
in
pop
pop
pop
es
in
in
popf
mov
mov
ds
es
sti
sti
sti
sti
sti
data16
fcmovu
daa
daa
jo
jo
jo
mov
add
add
add
pop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
icebp
icebp
icebp
icebp
icebp
or
add
add
add
add
add
add
sahf
sahf
sahf
sahf
sahf
cltd
cwtl
cwtl
std
and
and
addb
dec
dec
dec
dec
dec
dec
dec
dec
dec
ss
dec
dec
dec
dec
dec
add
add
add
cmp
cmp
cmp
cmp
add
xchg
xchg
or
or
es
add
mov
mov
mov
and
and
clc
clc
or
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
leave
leave
leave
leave
leave
xlat
xlat
add
push
jbe
rcl
test
xchg
xchg
int
in
in
in
stc
stc
stc
daa
daa
daa
mov
add
add
jg
jg
jg
pop
pop
pop
pop
pop
mov
jle
jle
aad
aad
aad
fwait
dec
mov
mov
push
push
or
adc
add
add
mov
mov
mov
mov
mov
mov
addb
fstp
fstp
fstp
loop
add
jno
jno
and
pop
pop
pop
pop
pop
pop
dec
inc
inc
inc
inc
inc
inc
inc
aaa
jge
mov
cmpsb
cmpsb
cmpsb
or
or
fwait
fcmovnu
fstpt
mov
mov
fisttpll
inc
scas
adc
roll
add
push
push
push
push
push
add
call
call
add
add
sbb
xchg
cmp
cmp
lret
lret
lret
lret
lret
lret
mov
mov
mov
mov
test
test
test
dec
dec
dec
outsl
outsl
outsl
outsl
outsl
out
out
out
out
hlt
hlt
hlt
hlt
pop
pop
pop
pop
pop
pop
pop
pop
adc
or
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
inc
inc
or
int3
int3
and
pop
pop
pop
pop
mov
mov
in
add
imul
imul
enter
enter
xlat
xlat
xlat
xlat
xlat
xlat
lea
fildl
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
lock
mov
xor
xor
xor
mov
xchg
xchg
xchg
pop
or
cmc
cmc
cmc
cmc
cmc
cmc
xor
push
push
push
lahf
lahf
push
jmp
cli
pop
pop
pop
pop
pop
pop
pop
pop
pop
fcoms
add
add
add
aad
aad
aad
aad
mov
mov
mov
push
push
push
mov
cltd
cltd
cltd
cltd
cltd
cltd
bsf
add
out
adc
popf
popf
popf
popf
popf
popf
test
test
cmpsb
cmp
cmp
and
add
jnp
jnp
jnp
jnp
adc
adc
pusha
pusha
jbe
jbe
and
or
or
or
cmp
pfnacc
mov
mov
mov
add
adc
adc
data16
shl
icebp
icebp
out
out
out
out
sub
add
into
into
xlat
xlat
xlat
xlat
xlat
xlat
xlat
addr16
mov
xor
xor
xor
sub
lcall
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
lea
pop
pop
pop
pop
pop
out
out
out
out
out
out
sbb
sbb
sbb
xor
push
push
dec
dec
dec
dec
dec
pop
pop
xchg
pop
pop
xor
xor
fwait
fwait
jnp
jnp
jnp
add
out
out
out
mov
mov
add
add
inc
inc
inc
inc
inc
xchg
xchg
xchg
adc
ss
addl
shll
jbe
add
add
fcmovnu
fcmovnu
jg
jg
or
sbb
mov
sbb
sbb
sbb
sbb
sbb
push
push
mov
sub
sub
mov
add
mov
mov
jmp
jmp
jmp
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
or
or
ret
inc
inc
inc
inc
cmpb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
ret
mov
lock
push
push
push
push
push
dec
dec
xchg
inc
inc
dec
dec
dec
insb
insb
dec
dec
dec
dec
dec
into
into
xchg
xchg
xchg
xchg
xchg
xchg
pop
pop
pop
pop
pop
mov
xor
xor
xor
xor
xor
xor
inc
inc
inc
test
jp
jp
jno
lcall
lcall
rol
out
out
xor
and
add
lret
lret
lret
sub
sub
es
lods
lods
lods
mov
mov
add
gs
cmp
cmp
adc
adc
adc
adc
adc
inc
inc
add
stos
stos
stos
stos
stos
stos
stos
add
add
add
js
js
cltd
cltd
cltd
cltd
pusha
pop
push
leave
leave
leave
leave
add
data16
add
pop
pop
add
fnstcw
push
push
push
push
add
add
add
and
and
and
js
js
stos
stos
stos
call
mov
iret
xor
xor
xor
xor
pusha
add
add
sub
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
mov
mov
add
ret
add
rcl
rcl
add
add
add
mov
int3
int3
int3
int3
test
inc
inc
jnp
jnp
jnp
push
out
gs
or
or
sbb
sbb
sbb
sbb
and
jbe
jbe
add
add
add
xchg
xchg
jge
mov
rcl
sar
in
mov
nop
nop
sub
adc
clc
clc
andl
add
loopne
add
add
add
add
lret
jne
ja
ds
test
minps
rol
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ret
ret
ret
stos
stos
stos
inc
inc
inc
inc
inc
lea
mov
addl
add
jle
jle
jle
jle
jle
and
insb
insb
insb
insb
push
push
push
push
push
push
in
in
in
in
xlat
xlat
xlat
xlat
xlat
add
dec
dec
dec
dec
jo
jo
fstp
fstp
fstp
push
push
push
bound
bound
xor
gs
jmp
dec
dec
dec
dec
call
lcall
lcall
rol
add
add
add
add
outsb
xor
or
mov
mov
stos
stos
fidivrl
push
push
push
push
push
push
sub
sub
sub
ret
ret
ret
ret
ret
ret
leave
leave
leave
cmp
add
add
add
lock
pushf
pushf
scas
scas
scas
scas
mov
add
sub
pop
pop
pop
pop
mov
inc
inc
inc
inc
fistl
push
push
test
test
test
test
test
dec
dec
dec
dec
push
push
pop
pop
pop
pop
pop
pop
pop
pop
fldl
push
push
push
fcomp
fcomp
fcomp
fsubrs
jp
fdivrp
xchg
xchg
adc
add
stc
add
jnp
jnp
jnp
jnp
jnp
addl
addl
push
push
rol
movsl
imul
loop
add
inc
inc
std
std
add
add
push
push
es
jp
xor
rol
test
pushf
pushf
pushf
pushf
ja
ja
ja
inc
loope
loope
loope
add
add
dec
add
add
out
or
add
hlt
hlt
bound
rcl
rcl
rcl
rcl
div
push
push
mov
mov
mov
mov
gs
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
lcall
call
sti
sti
sub
sub
sub
inc
dec
dec
out
out
out
cmp
out
pop
pop
pop
pop
adc
dec
dec
dec
dec
jp
out
out
out
out
out
out
out
mov
dec
dec
dec
arpl
xchg
add
add
add
es
add
add
add
push
xor
add
add
test
test
mov
add
xlat
xlat
xlat
xlat
jl
add
pop
pop
pop
add
add
pop
mov
mov
mov
mov
inc
inc
faddl
maxps
mov
add
add
add
mov
mov
rcl
inc
or
or
or
or
mov
fcmovu
fcmovu
div
cmp
and
and
and
and
and
and
dec
dec
dec
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
add
mov
mov
icebp
icebp
mov
das
das
fcmovu
roll
add
xchg
pop
pop
pop
pop
pop
pop
xlat
xlat
popa
jmp
jmp
jmp
mov
mov
mov
lock
rol
rol
rol
rol
add
add
add
pop
pop
pop
pop
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
xor
xor
xor
xor
xor
xor
xor
repz
push
push
push
push
ret
ret
ret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
and
or
int
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
pop
pop
pop
pop
pop
pop
call
add
add
cld
cld
cld
cld
aas
aas
hlt
hlt
hlt
hlt
hlt
test
add
add
jle
jle
cmp
addr16
cmp
cmp
sub
add
add
jg
jg
popa
push
push
add
add
dec
dec
dec
mov
mov
mov
mov
jg
push
push
ja
ja
ja
ja
leave
leave
leave
leave
filds
cs
cld
cld
cld
mov
mov
mov
add
mov
add
jg
mov
cmp
cmp
cmp
cmp
cmp
cli
cli
mov
push
inc
xchg
xchg
xchg
cltd
cltd
sahf
outsl
xor
push
pop
pop
pop
sub
or
add
mov
shl
repnz
cmp
outsb
add
add
add
add
test
lods
lods
lods
pop
pop
dec
or
or
or
or
or
push
push
push
in
in
in
in
in
in
in
in
add
es
outsb
outsb
outsb
call
aaa
mov
mov
adc
adc
push
push
mov
sub
add
lea
and
xchg
xchg
xchg
xchg
xchg
xchg
push
push
push
push
push
test
pusha
pusha
pusha
pusha
jge
jge
jge
mov
mov
dec
dec
or
or
or
or
or
add
ss
test
add
fs
cmp
movsl
movsl
sbb
sbb
popa
popa
popa
popa
popa
popa
popa
popa
popa
insl
insl
aad
aad
aad
aad
aad
aad
aad
rcl
rcr
push
push
push
push
push
push
add
add
incb
inc
inc
inc
inc
inc
sub
sub
sbb
aam
add
add
add
add
mov
jle
jle
daa
pop
pop
pop
pop
pop
push
leave
and
add
add
add
popf
popf
popf
sub
sub
mov
mov
in
in
in
in
in
in
in
cmp
cmp
cmp
cmp
cmp
cmp
cmp
ret
ret
ret
ret
ret
ret
ret
ret
repz
or
into
into
into
into
or
push
push
push
bound
bound
add
mov
mov
mov
jmp
cmpsb
fstp
fstpl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
outsl
add
in
in
in
in
std
std
fildl
add
jmp
mov
inc
inc
pop
pop
pop
add
stos
stos
stos
stos
stos
stos
stos
stos
lods
lods
push
push
push
push
push
push
push
push
mov
add
add
sub
sub
sub
inc
inc
xor
xor
add
mov
lret
lret
lret
lret
data16
fstp
fstp
fisttpll
push
push
push
push
push
push
push
push
push
push
sbb
cmp
cmp
cmp
mov
mov
mov
mov
push
push
xlat
xlat
xlat
xlat
xor
lods
lods
lods
add
add
add
in
in
in
add
add
add
fists
push
fwait
fwait
fwait
aad
aad
aad
aad
aad
aad
aad
aad
aad
aad
cs
lret
lret
add
add
shrl
test
and
and
and
lahf
lahf
push
push
push
push
add
add
add
xor
xor
xor
xor
pop
pop
adc
mov
adc
pop
pop
xchg
sub
mov
lods
lods
lods
test
pop
pop
or
push
push
push
push
push
push
push
push
push
push
jno
jno
jno
out
mov
add
add
fwait
add
add
filds
add
pop
pop
pop
pop
loopne
loopne
loopne
loopne
call
pop
pop
pop
add
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmp
out
out
out
add
add
adc
je
je
je
je
je
je
je
je
mov
sbb
vhaddpd
pushf
pushf
pop
pop
pop
pop
addb
addb
dec
mov
xchg
xchg
es
fwait
fwait
fstp
fstpl
pop
cwtl
push
or
je
je
je
je
repnz
adc
adc
out
decl
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
push
push
push
push
mov
xchg
xor
xor
sbb
into
into
or
and
and
and
adc
test
add
dec
dec
dec
dec
dec
leave
leave
add
das
das
das
das
das
das
fimull
dec
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
jg
in
in
in
in
in
xor
xor
xor
lahf
lahf
lahf
lahf
lahf
mov
add
arpl
aad
aad
pushl
xor
rcl
rcl
shlb
arpl
lcall
lods
nop
nop
movsb
data16
daa
hlt
hlt
ss
mov
push
jl
jl
add
lds
mov
mov
mov
mov
mov
add
jmp
jmp
jmp
jmp
cs
dec
dec
mov
adc
adc
adc
adc
adc
fcmovu
fcmovu
fcmovu
fiaddl
add
and
and
and
and
and
ss
add
add
add
add
lcall
fstl
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
add
enter
fs
mov
lea
push
push
push
push
push
push
push
push
push
push
mov
mov
imulb
test
xor
jb
jb
add
add
add
outsl
outsl
ret
ret
ret
ret
ret
ret
ret
ret
test
test
and
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
add
add
fildll
pop
pop
call
lcall
das
das
cltd
cltd
cltd
add
test
jecxz
jecxz
jecxz
jecxz
or
or
or
or
or
or
ljmp
rcrb
icebp
icebp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
pop
pop
pop
pop
pop
lock
sbb
and
and
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
xchg
xchg
mov
sbb
sbb
inc
inc
inc
inc
inc
or
or
imul
cmp
cmp
cmp
addr16
gs
and
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
sti
sti
sti
add
add
add
lret
add
add
sbb
sbb
add
add
add
or
mov
mov
mov
mov
mov
add
mov
mov
add
add
inc
inc
inc
jl
jl
jl
ret
ret
ret
ret
ret
ret
ret
mov
or
pop
pop
pop
pop
pop
pop
loopne
loopne
loopne
outsb
outsb
push
push
ret
ret
ret
ret
ret
sti
mov
gs
pop
pop
push
push
push
push
push
push
add
rcl
rcl
cli
pop
pop
pop
pop
pop
pop
pop
mov
push
add
mov
mov
mov
jmp
add
push
push
push
push
push
push
push
push
push
add
ret
ret
std
cwtl
mov
mov
fwait
addr16
pop
pusha
clc
clc
clc
clc
push
push
xchg
xchg
xchg
xchg
xchg
jb
jb
jb
jae
outsl
outsl
outsl
outsl
outsl
outsl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jb
aaa
aaa
aaa
aaa
scas
scas
scas
cmp
cmp
cmp
addb
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
cmp
cmp
cmp
cmp
test
test
jae
enter
enter
repz
pop
sbb
fcoms
and
adc
repz
pusha
lcall
xor
mov
mov
pop
add
pusha
int
jnp
int3
or
ret
add
jle
aad
add
pop
adc
pusha
pusha
andl
into
inc
movsl
pop
and
inc
push
jg
jnp
decb
andb
push
push
jecxz
fidivrs
out
pusha
push
pop
xchg
sbb
cmp
mov
jo
push
dec
and
sub
add
add
or
andb
adc
jge
loopne
cs
lea
ds
ret
xor
and
mov
stc
fcmovnbe
into
lret
cs
pusha
jbe
andb
int
add
insl
inc
cmp
xor
jecxz
mov
pop
sbbl
sbb
sbb
loopne
imul
mov
add
cs
add
sbb
dec
and
sub
inc
jmp
mov
out
adc
jno
test
mov
lods
jge
stos
jns
sbb
rolb
psubusw
add
jae
and
loopne
lock
add
mov
loopne
clc
int
stos
xor
lock
ja
mov
adcl
mov
and
mov
rolb
fstps
sarb
sbb
mov
cld
cmc
cli
push
jecxz
jl
jecxz
daa
popf
out
or
or
and
inc
in
jg
pop
pop
and
pop
and
add
mov
mov
pop
es
andb
int3
enter
pusha
loopne
mov
sarb
les
sub
mov
imul
xorl
inc
mov
mov
add
out
cmp
call
xchg
xlat
cltd
outsl
add
push
jp
push
rorl
test
adc
aas
jp
stos
stos
and
dec
int3
fisttpll
sub
sub
lods
mov
jg
clc
cld
popa
mov
sub
add
cmc
aas
aas
mov
cmp
dec
mov
inc
ret
and
sub
int
das
sub
js
shll
pop
loop
add
shrl
sub
inc
mov
and
sbb
shl
jg
nop
js
loopne
sbb
adc
cld
call
add
lods
sbb
sub
loopne
add
and
push
lret
jp
outsb
dec
mov
push
in
cli
xchg
stos
adc
rcrb
loopne
addl
jb
push
cmp
into
mov
pusha
jne
cmp
inc
call
testb
imul
dec
mov
mov
lock
cmp
lds
shl
ret
or
add
inc
stos
insb
mov
push
inc
and
add
add
and
rolb
sarb
mov
sub
mov
out
cmp
pusha
mov
jae
sub
or
loopne
dec
loope
fwait
sti
jbe
jecxz
jp
cmpl
enter
add
stos
neg
rorl
dec
jb
add
jle
int
jnp
push
push
nop
lods
es
lret
xor
inc
aam
and
mov
ljmp
orb
pushl
lock
mov
aam
mov
inc
pop
lock
pop
je
icebp
sub
push
clc
sub
inc
lods
push
add
jbe
ds
cltd
mov
cmpb
loopne
add
outsb
cmpsb
pusha
and
loop
cltd
push
add
adc
ficomps
cwtl
lcall
faddl
sbb
aaa
adc
push
sub
cmpsb
add
sahf
jb
mov
and
cmp
cli
scas
andb
out
roll
loopne
repz
jp
push
loope
add
pop
cmpsl
jo
jmp
jmp
std
test
loopne
nop
and
addb
mov
xchg
fwait
xchg
imul
leave
and
dec
cltd
cmpsb
loopne
jmp
cmp
add
push
push
mov
cmp
sti
mov
lock
ret
inc
mov
inc
js
mov
popf
cmpsl
jbe
pusha
and
push
loopne
or
cmpps
ror
stos
mov
shl
inc
pusha
mov
loopne
push
mov
mov
outsl
cmp
les
jmp
jge
andb
add
loopne
inc
adc
pop
aaa
push
out
lcall
outsl
inc
fadd
push
inc
sbb
ljmp
pusha
xorb
je
pusha
pusha
lret
inc
jp
sbb
jns
pusha
mov
cwtl
clc
or
loopne
cli
andl
xor
loopne
sub
add
rcl
mov
sahf
or
idiv
lds
fimuls
mov
andb
jnp
sahf
dec
stos
icebp
xchg
adc
jae
lods
shlb
dec
xchg
add
and
mov
pusha
sub
arpl
xor
pusha
sub
xchg
and
inc
pusha
cli
in
outsl
call
test
stos
inc
orb
sti
pop
fstpt
mov
add
je
sub
mov
xlat
lea
mov
insb
jp
lock
fcoms
lcall
enter
push
bound
mov
mov
jp
jns
inc
sarb
shrb
pusha
pusha
or
iret
gs
scas
inc
shlb
nop
gs
dec
push
popa
add
add
xchg
dec
fsubrs
rolb
pop
xor
das
and
inc
sbb
mov
add
loopne
jne
mov
out
pop
push
and
aaa
fbld
aad
and
inc
mov
pusha
fcoms
testb
inc
xorb
inc
das
push
and
pop
sti
mov
inc
testb
rolb
out
jg
mov
inc
mov
jns
aaa
jmp
dec
hlt
xchg
xchg
inc
adc
fxch
fisttps
stos
in
mov
repnz
and
pusha
mov
pop
push
hlt
xchg
xchg
stos
rolb
sbb
xchg
and
aas
push
jbe
add
js
mov
in
adc
or
rolb
mov
imul
cmpl
shll
sbbb
test
cmpb
jnp
or
pop
je
mov
fucomp
test
inc
xchg
pop
lods
jno
inc
and
mov
das
and
mov
inc
iret
sahf
lds
jne
fiaddl
or
sbb
dec
pop
cmp
add
mov
out
mov
pusha
add
add
and
idivl
dec
or
mov
movsb
and
sub
jp
stc
in
pop
out
test
mov
adc
cli
and
and
cwtl
add
lods
loopne
xchg
call
or
add
popl
andb
into
pop
popf
insb
mov
test
and
xchg
stos
pusha
shlb
push
mov
fmull
jmp
mov
dec
jo
and
psubd
into
movsb
and
xchg
jno
rolb
or
push
loopne
xchg
insb
rcrl
xor
or
add
leave
je
push
out
sub
adc
sub
daa
or
cmovb
or
sub
xor
leave
cwtl
bound
push
xor
lock
ljmp
sbb
push
pop
push
je
subl
mov
nop
pushl
outsl
jg
stc
imul
jnp
test
loopne
pushf
mov
cmp
dec
xorl
xor
mov
pusha
rcr
cwtl
jns
jae
and
xor
add
ds
xor
push
movl
mov
sub
loopne
dec
scas
fbstp
jge
xchg
dec
mov
xchg
jg
rol
andb
push
sub
out
out
sub
cmpb
xchg
push
movl
or
cmpsl
insb
mov
mov
sub
xchg
xchg
movsl
sbb
imul
popa
and
out
clc
and
pop
dec
cmpsl
dec
or
incb
ret
inc
lcall
mov
fsubrp
sbb
into
es
inc
or
shlb
sub
popa
test
sbb
dec
test
inc
cltd
xchg
imul
in
stc
pop
sar
pop
mov
or
out
push
xor
lods
and
mov
loop
add
add
in
sub
cmp
dec
mov
shlb
pop
mov
and
stos
pusha
addb
mov
leave
aas
xchg
cmp
push
lea
and
fdivr
movsl
cmpsb
loopne
dec
jne
push
jge
or
add
pop
sub
mov
popf
and
pop
pusha
inc
sub
cmp
and
cmp
xlat
fmul
rolb
and
and
out
lret
rcrb
add
lahf
nop
into
add
out
mov
js
dec
popa
jne
hlt
das
ret
je
jl
es
fs
je
cmp
sbb
jns
idiv
mov
and
jbe
mov
pop
scas
xlat
mov
jns
mov
js
xchg
mov
xchg
add
fs
pusha
push
xchg
mov
clc
sbb
test
shlb
xchg
or
inc
in
push
rcrb
sbb
pusha
shl
out
inc
loopne
fldl
push
ret
test
in
movsb
and
sbb
stos
sub
pop
clc
decl
inc
inc
xchg
sbb
sahf
insl
mov
outsb
xor
scas
mov
cmp
loope
and
shl
into
test
cmp
ljmp
rcr
lahf
xor
movsl
iret
sub
push
dec
xor
fstpt
fcomi
inc
jle
cmp
jmp
dec
addb
xchg
pusha
mov
sub
or
mov
insl
mov
add
in
mov
add
loopne
mov
sub
add
xor
adc
pusha
rclb
repnz
mov
cwtl
aaa
and
fstpl
mov
add
mov
sub
mov
mov
cltd
aaa
and
xor
ja
mov
shll
pusha
cli
cld
push
inc
and
and
xor
loope
jne
andb
xorl
mov
popw
in
xchg
cmp
test
ss
adc
repz
loopne
add
dec
icebp
rorl
shlb
ror
sbb
mov
fdivrl
iret
pop
popf
xchg
jl
pop
push
and
call
dec
xor
inc
rclb
sbb
sub
push
loopne
pop
add
pusha
mov
mov
shlb
mov
fisubrs
add
jg
andb
enter
add
adc
mov
ljmp
aas
mov
movsl
xchg
xlat
mov
shlb
jnp
jecxz
popf
push
loopne
shlb
and
shrb
or
and
repnz
mov
sbbb
dec
or
subb
add
push
daa
flds
mov
inc
and
inc
shrl
push
shlb
shlb
add
dec
cs
pop
and
subb
inc
cwtl
stos
adc
movsb
add
fildll
mov
pusha
and
push
mov
add
pusha
mov
loopne
sti
testb
loop
iret
xlat
dec
push
sti
push
fldenv
xchg
add
lods
clc
mov
xor
in
push
jne
inc
loopne
lret
mov
xor
cmc
xchg
mov
cmpsb
loopne
sbb
inc
loopne
ret
hlt
addb
out
mov
cmc
popa
sahf
outsl
test
lock
push
mov
rol
fsts
fbld
idivl
shl
jl
jo
adc
add
add
mov
push
sbb
xchg
push
in
iret
scas
pop
ret
ljmp
lea
adc
loopne
scas
mov
cwtl
arpl
ficoms
in
loopne
pop
repnz
cs
mov
and
mov
jge
sbb
ret
fs
in
loopne
addr16
jae
mov
shrb
shlb
adc
loopne
std
jg
mov
loopne
xchg
int3
aaa
nop
cwtl
repnz
inc
mov
je
inc
dec
jbe
sbb
sti
xchg
insb
jns
add
mov
out
std
xor
inc
data16
add
in
andb
add
pop
bound
cmp
mov
rolb
xor
aas
sbb
add
cmp
push
jb
jge
imul
mov
jbe
lcall
cmc
jl
or
fidivs
cmp
out
movsl
sub
mov
xchg
mov
cli
testl
pop
inc
or
leave
lret
enter
mov
inc
mov
ret
decl
mov
inc
pusha
cwtl
inc
or
rolb
bound
add
loope
add
aaa
or
cmp
cltd
scas
pusha
mov
jae
mov
gs
inc
pop
nop
and
xchg
insb
pop
subl
sarb
push
pop
jnp
int
jno
cmpsb
inc
loopne
sti
push
cmpsl
mov
and
jns
and
iret
cmp
call
sahf
lods
cli
jmp
add
icebp
icebp
lret
pushf
pop
lcall
jecxz
cmp
jo
mov
mov
add
xchg
push
orl
xlat
cwtl
sbb
scas
xchg
dec
adc
jnp
ja
std
xchg
xchg
and
pop
pop
push
lea
add
adc
imul
adc
mov
sarb
test
xorb
cmp
jb
dec
shlb
cmp
test
inc
push
repz
out
pop
jecxz
loopne
ss
cmpb
pop
iret
call
shlb
mov
xchg
mov
addb
movl
pop
das
jnp
insb
cwtl
push
fiaddl
cmp
adc
pusha
loopne
pop
and
adc
int
pop
xchg
leave
fst
popf
lods
pusha
xorb
pop
jno
mov
push
fsubrs
imull
mov
inc
imul
sub
mov
or
mov
add
aam
inc
loopne
pop
cmpl
mov
jle
daa
ret
rorb
addb
adc
add
daa
xchg
div
sub
loopne
test
add
xchg
add
ficoms
das
mov
inc
cmp
loopne
xor
addb
xor
or
mov
adc
push
test
cmpps
and
jns
sub
ret
and
add
leave
xchg
jl
ljmp
xchg
sarb
pop
arpl
push
pusha
add
add
pusha
cmp
inc
andb
aas
outsb
adc
pusha
and
rcrb
and
pop
cld
and
cmp
loopne,pn
sub
xlat
add
loopne
loopne
inc
cmp
shlb
addb
ds
mov
xor
mov
shlb
pop
or
fwait
dec
ret
sahf
enter
inc
int
cmp
shlb
ja
fs
std
add
mov
cmp
js
int
mov
ja
xchg
in
movsb
inc
pusha
rcl
pop
mov
or
inc
movsl
lods
lea
sbb
and
add
std
frstor
rol
jnp
lock
pop
and
pop
push
xchg
movsl
cmp
ret
xchg
rolb
decb
add
xor
movsl
jecxz
add
mov
pop
icebp
xchg
cmp
js
insl
dec
mov
dec
xlat
push
xchg
int
imul
das
dec
cwtl
imul
mov
push
mov
mov
push
pusha
pusha
jmp
mov
dec
xor
mov
stos
loopne
adc
mov
mov
addb
rolb
pusha
cs
jnp
rol
test
pop
pop
lods
addb
add
call
xchg
push
cmp
jmp
xchg
sti
incb
add
and
and
loopne
ja
mov
mov
loopne
scas
inc
push
lcall
fdivs
and
sbbb
psubw
movsb
rolb
aaa
fisttps
aas
sbb
repz
and
add
mov
mov
cmpsb
loopne
lcall
out
jnp
mov
fisubrl
jg
and
inc
mov
mov
cmp
sbb
and
mov
loopne
xchg
loop
push
pop
cmp
int3
mov
mov
loopne
pusha
lahf
cmp
mov
andb
fcoml
loopne
sub
push
test
loopne
and
out
xlat
in
int
or
push
pop
or
add
fs
lcall
pop
call
inc
loop
cmc
mov
inc
add
pushf
hlt
sbb
je
and
fcomps
push
sub
aam
nop
dec
inc
ljmp
push
inc
or
mov
outsb
ljmp
dec
adcl
and
sub
xchg
dec
pop
xor
add
xor
and
mov
into
and
fcmovbe
out
ficoml
and
pop
imull
add
fsubrl
clc
imul
cld
stos
pop
xor
dec
push
pusha
mov
mov
mov
inc
js
icebp
mov
push
pop
andb
mov
pusha
xor
cmp
jb
mov
add
dec
insb
cmp
xchg
adc
subb
push
insb
adc
cld
jbe
mov
push
add
jl
xchg
fnstcw
push
addb
lret
loopne
stc
adc
cwtl
mov
pusha
pop
mov
test
loopne
jb
inc
sahf
xchg
bound
lds
inc
mov
add
addb
pop
rolb
je
rolb
mov
cmp
lds
pop
dec
out
jne
rclb
jae
sub
repz
cmc
aaa
faddl
mov
js
sub
stc
and
outsl
jnp
leave
adc
xor
rcll
je
out
inc
mov
popf
and
leave
nop
and
inc
mov
shlb
nop
jge
outsb
or
sahf
nop
pop
cld
shll
adc
mov
inc
add
mov
and
fldl
add
fldln2
scas
and
sub
pusha
test
add
add
xor
repz
mov
movsb
add
xchg
bound
sbb
mov
gs
mov
inc
mov
loopne
or
add
jne
mov
dec
add
inc
pushf
mov
dec
ljmp
lods
insl
cmpsl
mov
mov
add
push
push
push
push
push
call
cld
sub
inc
add
imul
nop
push
stc
pop
and
cmp
je
push
bnd
mov
cmp
jne
es
add
cs
add
stc
mov
push
push
clc
call
test
jne
push
ret
jmp
lea
movl
push
push
push
push
call
cmp
lea
jne
movzbl
or
add
mov
cld
not
imul
and
es
call
sar
jmp
sbb
mov
add
add
pop
pop
add
pop
push
sub
push
push
inc
or
xchg
lea
cld
lea
lea
mov
cld
add
mov
mov
mov
sub
mov
push
cld
jmp
xchg
je
xor
push
mov
jmp
and
mov
ja
fcmovb
jmp
and
rclb
clc
pop
dec
outsl
cmp
icebp
mov
adc
inc
adc
inc
mov
dec
inc
aam
out
sbb
dec
xchg
incb
call
mov
or
imul
jle
mov
xchg
testl
add
cmp
and
push
push
mov
add
andb
lret
inc
add
jne
jle
stc
adc
mov
mov
leave
mov
push
cmp
inc
push
and
call
sub
or
xchg
inc
stos
and
push
lods
jns
push
adc
repz
adc
sahf
mov
push
push
xchg
push
pusha
mov
and
sub
add
loopne
or
shr
pop
mov
addb
xchg
adc
ss
addb
cmp
loopne
fildl
mov
aam
enter
cli
ret
into
pusha
cmc
cmp
rolb
pop
mov
xchg
cltd
aam
addb
jne
test
adc
or
stos
xor
pop
aas
imul
add
in
hlt
lock
push
pusha
rolb
dec
dec
sub
shlb
jne,pt
cmp
or
add
and
insl
push
aas
xor
shlb
and
inc
in
pop
lods
loopne
push
imul
and
pop
orl
loopne
sahf
jmp
xchg
out
jbe
sbb
cwtl
or
cli
and
cli
push
and
mov
and
rcrb
mov
aad
xchg
add
mov
subb
enter
adc
icebp
aaa
sbb
mov
sbb
push
loopne
cld
inc
pop
std
and
inc
lret
xchg
inc
jne
cwtl
sbb
insb
push
fnsave
mov
jns
xchg
pop
inc
and
gs
inc
or
addb
inc
xchg
pop
andb
mov
mov
adc
jl
push
loopne
cmp
bound
xchg
in
iret
sub
adc
mov
inc
in
pop
fimull
xchg
in
or
pusha
adc
jl
pusha
pop
popa
push
mov
fwait
ror
adc
jg
dec
sarb
pop
arpl
push
idiv
nop
fadds
mov
sub
add
movl
inc
and
dec
mov
or
out
lret
pusha
shrb
inc
inc
icebp
ss
hlt
sub
paddb
in
arpl
mov
out
adc
test
aad
inc
adc
bound
shlb
fnstsw
add
add
inc
pop
out
insl
mov
and
loopne
fwait
clc
outsl
enter
andl
jbe
ljmp
pop
inc
sub
repnz
xor
cli
push
insb
dec
leave
iret
cmp
inc
ljmp
dec
and
loopne
dec
movsl
bswap
leave
fadd
ja
or
add
in
cmp
fcmovnu
push
icebp
andb
addb
xchg
xchg
lods
mov
loopne
dec
mov
rcrb
and
pusha
pop
cmp
or
or
adcb
or
mov
sbb
sbb
inc
jl
dec
inc
xor
mov
mov
xor
cld
xlat
arpl
decb
add
lds
loopne
sbb
xor
inc
in
inc
sub
mov
push
inc
mov
out
cwtl
mov
jp
mov
out
sub
out
or
lods
pop
idivb
mov
das
adc
xor
sbb
js
and
and
mov
or
repnz
mov
imul
inc
inc
push
adc
add
adc
movsl
fwait
loop
mov
stos
rolb
mov
es
ja
loopne
in
std
pop
add
pusha
add
ror
ret
ret
filds
shlb
out
pop
enter
fwait
mov
push
inc
ror
push
pop
popf
mov
sbb
mov
roll
loopne
cmpsl
les
loopne
jbe
cmp
push
inc
inc
sbb
add
shlb
inc
xchg
rorl
rcll
dec
sub
add
jae
lds
mov
pop
sarl
pop
and
mov
push
jle
ljmp
or
loopne
shlb
sbb
inc
inc
aad
sbb
cmp
jns
imul
jp
pusha
inc
xor
add
cmp
inc
mov
mov
cmp
loopne
xlat
lret
mov
push
or
push
or
je
mov
inc
mov
or
cmp
xchg
inc
or
add
mov
push
mov
sbb
rorb
jne
adc
stos
and
and
and
jb
pop
mov
scas
add
inc
or
inc
cli
sti
jbe
and
sub
sbb
and
gs
inc
jno
mov
sbb
pop
das
mov
cmpsl
outsl
aas
nop
add
das
mov
xorb
fsubs
pushf
iret
loope
xor
or
sbb
mov
scas
inc
mov
xor
gs
lods
lea
lret
add
aam
jo
orl
and
out
push
in
and
dec
add
xchg
stos
mov
loopne
xchg
and
imul
inc
dec
jle
lock
lret
mov
and
mov
add
jae
fs
push
loopne
cmp
jmp
ret
je
and
xorl
add
cmp
insb
xor
inc
and
xor
dec
mov
aas
mov
push
and
imul
or
loopne
cmp
inc
sub
and
cmc
mov
push
addb
loopne
mov
pusha
pusha
les
addb
ja
mov
cld
mov
lods
ja
pusha
hlt
mov
jb
add
pusha
inc
xor
int3
jge
out
xor
cmp
jmp
push
push
mov
dec
mov
sub
subb
and
pusha
add
xor
inc
jno
pop
sarb
pop
and
inc
sub
adc
cmp
cmc
mov
rol
xchg
fwait
sbb
fucomi
push
pop
jbe
gs
lock
push
in
call
int
mov
mov
loopne
not
popf
push
dec
xadd
mov
add
addb
sbb
mov
scas
ljmp
lods
dec
push
xor
mov
pop
scas
loopne
roll
and
mov
cmp
lret
mov
fiadds
insl
test
fstpt
sbb
xchg
jbe
inc
add
rolb
ss
aas
cltd
cmp
popa
jns
add
rolb
mov
cmp
mov
pusha
shlb
sub
push
aas
xor
in
jecxz
xor
dec
cld
outsl
subl
pop
sub
mov
imul
push
mov
xchg
and
je
insl
movsb
andb
mov
push
stos
rolb
mov
xchg
sti
pop
jo
sahf
xchg
pop
or
decb
add
add
aas
ja
in
dec
xchg
ss
dec
mov
or
inc
mov
hlt
dec
jl
rolb
rolb
pop
enter
adc
ds
sub
loopne
and
lahf
mov
mov
add
and
inc
push
or
jl
pop
test
loopne
cmpsb
and
mov
pusha
pusha
shll
cmp
sti
jg
loopne
jo
pop
adc
inc
shrb
test
mov
adc
adc
cmpsb
addb
add
mov
mov
ss
repnz
js
and
pusha
inc
xchg
out
jecxz
sbb
dec
fbld
and
add
jmp
ja
cltd
cmpl
aam
andb
add
or
iret
clc
xchg
inc
jmp
aad
mov
rclb
out
and
sarb
xor
pop
mov
add
inc
aam
dec
mov
ss
and
dec
or
inc
hlt
cmpl
jmp
and
loopne
daa
popf
mov
push
pusha
mov
or
dec
xchg
sbb
clc
arpl
mov
cmpsl
cltd
add
in
popf
fldcw
jecxz
mov
inc
bound
ds
push
pop
movsb
loopne
popa
pushf
clc
or
or
dec
imul
adc
xchg
scas
shl
sub
ljmp
loopne
mov
ja
shll
jl
insl
cwtl
push
xchg
mov
mov
xor
pop
arpl
inc
xlat
in
lods
and
out
fs
loopne
test
and
addb
mov
sub
test
push
loopne
cmp
popa
int
shlb
mov
jnp
mov
dec
push
out
and
sub
add
adc
cmp
out
push
jle
gs
lods
loopne
xchg
divb
test
fisttpll
pop
stos
inc
pusha
in
xlat
sbb
lret
adc
shlb
lock
inc
pop
mov
popf
leave
mov
dec
jnp
add
in
dec
addb
push
and
xor
pushf
sub
pusha
pop
xor
and
jge
xchg
sub
loopne
cmp
andb
pusha
pusha
mov
pop
fcompl
inc
outsb
xchg
shr
fidivs
sbb
ds
call
push
jbe
jns
add
ja
mov
inc
mov
rorb
adc
jmp
cmp
test
inc
mov
shl
adc
jl
cmp
test
and
pushf
cwtl
jg
mov
push
sub
add
jg
or
cmc
inc
shl
pop
cmpsb
inc
inc
fstpt
pushf
push
arpl
push
aam
daa
jg
cmp
cld
aam
loopne
out
cld
and
and
hlt
pop
pushf
mov
push
enter
das
adc
repnz
pop
cli
outsl
ljmp
arpl
lods
shlb
and
pusha
xor
loopne
and
sbb
mov
lahf
sbb
add
andb
stos
cmp
xchg
or
push
inc
cmpb
and
cwtl
push
mov
rorl
and
pop
inc
jnp
mov
push
cltd
xchg
cld
push
push
ficompl
and
lret
adc
int3
mov
xorb
jb
and
mov
inc
inc
shll
rcll
dec
xchg
mov
mov
adc
dec
rcl
jge
cmp
rcll
pop
jns
loopne
jecxz
test
scas
out
rorl
test
inc
addb
inc
add
inc
and
mov
loop
push
int
mov
aaa
jmp
push
popa
jns
add
xor
sti
pop
es
mov
add
out
popa
add
shrb
mov
out
xchg
loop
loopne
cmovbe
add
pop
clc
ret
andb
shll
push
out
data16
sub
mov
mov
loopne
jnp
push
out
stos
add
test
mov
pusha
lret
jge
ret
mov
shl
xor
mov
addb
adc
xchg
rcrb
push
andb
adcl
add
test
pop
inc
insb
jmp
add
stos
mov
and
pusha
fcomip
xchg
sub
pusha
hlt
lods
add
enter
hlt
addl
shlb
xchg
sub
add
test
cmpb
add
and
inc
xchg
mov
inc
jmp
inc
sub
ret
mov
sahf
bound
mov
negb
mov
sub
and
inc
push
adc
mov
cmp
pop
flds
pop
mov
stos
add
add
movsl
sbb
test
inc
call
mov
cmpsl
mov
dec
and
cmp
fisubrl
out
and
rcl
das
lea
dec
insb
pusha
repz
xchg
jg
mov
mov
xchg
addb
sarb
lret
inc
jle
adc
and
lods
dec
cmpsb
pusha
shlb
xor
mov
test
push
and
mov
fbstp
loopne
mov
xor
fidivrs
js
pop
mov
and
inc
push
fsubrs
in
in
cld
mov
scas
imul
add
mov
pusha
adc
xor
sub
add
and
pop
test
mov
jae
fsubl
loopne
xchg
das
int
inc
fucom
imul
adc
popl
bound
mov
mov
cltd
lock
cmc
push
aam
test
shlb
int3
lods
push
fistl
loopne
mov
mov
add
ljmp
push
inc
loopne
sub
sub
mov
add
ret
sub
and
sbb
fldcw
rolb
fildll
jl
or
jno
pusha
loopne
pop
sub
pop
ret
int3
push
in
pop
cwtl
jmp
dec
and
loopne
add
inc
push
outsl
pop
jecxz
mov
shrb
sub
mov
lea
fs
insb
sbb
std
std
lret
mov
test
sbb
sbbb
mov
addb
mov
or
pop
xchg
inc
xor
xchg
xchg
stc
enter
movsb
rolb
mov
jnp
mov
leave
nop
sub
cmp
lds
pusha
in
insl
cld
fwait
or
in
sub
mov
or
and
addb
lock
pop
pusha
sbb
insl
mov
lahf
mov
xchg
mov
fstps
sbb
call
push
loop
push
dec
cmp
inc
sbb
mov
push
frndint
and
vmwrite
stos
inc
sbbb
fincstp
nop
arpl
push
and
xchg
mov
cmp
and
test
mov
ljmp
mov
sbb
cwtl
and
leave
fnstenv
cltd
inc
dec
adc
loopne
dec
es
inc
mov
and
cmp
adc
add
clc
repnz
nop
cld
jae
add
movswl
clc
repnz
nop
cld
jae
add
dec
addl
cmp
push
mov
nop
leave
nop
jmp
add
xchg
inc
inc
adc
nop
cld
jae
add
add
add
inc
add
sub
repnz
nop
cld
jae
add
icebp
icebp
add
mov
in
repnz
nop
cld
jae
in
lret
xor
insl
movzwl
push
mov
nop
leave
nop
jmp
add
or
add
mov
xchg
ret
add
add
out
mov
push
mov
nop
leave
nop
jmp
add
add
mov
and
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
jnp
add
out
add
push
mov
nop
leave
nop
jmp
add
pop
sbb
push
mov
nop
leave
nop
jmp
add
mov
mov
xchg
ret
mov
add
clc
repnz
nop
cld
jae
xor
add
movsl
xor
adc
repnz
nop
cld
jae
and
and
or
mov
xchg
ret
add
movsl
lret
in
in
div
clc
repnz
nop
cld
jae
add
add
push
cli
mov
repnz
nop
cld
jae
add
adc
and
xor
clc
repnz
nop
cld
jae
add
add
add
sub
rcrb
pop
fwait
clc
repnz
nop
cld
jae
add
push
mov
mov
push
mov
xchg
ret
add
add
cld
call
mov
clc
repnz
nop
cld
jae
dec
inc
add
insb
add
shlb
in
nop
leave
nop
jmp
add
add
inc
or
andb
cld
jae
add
add
pop
push
mov
nop
leave
nop
jmp
add
add
push
add
mov
add
clc
repnz
nop
cld
jae
es
add
test
jae
mov
nop
leave
nop
jmp
add
add
mov
mov
push
clc
repnz
nop
cld
jae
add
xchg
add
test
or
in
nop
leave
nop
jmp
js
dec
lret
mov
push
mov
xchg
ret
cld
cmp
add
add
inc
mov
clc
repnz
nop
cld
jae
add
call
ret
push
mov
nop
leave
nop
jmp
in
add
add
out
add
push
push
clc
repnz
nop
cld
jae
call
or
mov
nop
leave
nop
jmp
mov
add
add
add
out
add
clc
repnz
nop
cld
jae
xor
push
mov
inc
clc
repnz
nop
cld
jae
add
cmp
add
aas
andl
mov
nop
leave
nop
jmp
js
add
cmpl
jae
mov
out
jmp
push
mov
xchg
ret
mov
and
add
push
cmp
ret
push
mov
xchg
ret
cmp
cld
inc
sub
lret
sbb
clc
repnz
nop
cld
jae
add
add
and
iret
call
clc
repnz
nop
cld
jae
mov
shlb
push
mov
xchg
ret
mov
insb
push
add
enter
subl
push
mov
nop
leave
nop
jmp
add
add
adc
repnz
nop
cld
jae
jmp
dec
sti
add
clc
repnz
nop
cld
jae
mov
sub
cld
arpl
xchg
ret
xor
movsl
cld
add
mov
add
push
mov
xchg
ret
add
jg
lret
push
mov
nop
leave
nop
jmp
add
inc
xchg
loopne
push
clc
repnz
nop
cld
jae
mov
inc
add
push
loopne
xchg
sbb
fld1
clc
repnz
nop
cld
jae
add
add
or
add
call
push
mov
nop
leave
nop
jmp
and
in
add
cmp
nop
nop
cld
jae
inc
add
inc
in
jne
clc
repnz
nop
cld
jae
add
js
lea
repnz
nop
cld
jae
inc
push
add
adc
lds
mov
xchg
ret
add
add
call
dec
jae
add
aas
js
add
add
add
xchg
add
pop
popa
mov
clc
repnz
nop
cld
jae
mov
add
add
push
mov
nop
leave
nop
jmp
mov
mov
add
nop
nop
cld
jae
and
inc
cmp
add
mov
xchg
ret
loopne
inc
and
add
add
cmpl
push
mov
nop
leave
nop
jmp
mov
or
jp
mov
push
mov
xchg
ret
add
add
cmp
add
repnz
nop
cld
jae
add
or
add
add
lret
push
mov
nop
leave
nop
jmp
add
add
cmpl
inc
add
and
add
sub
push
mov
xchg
ret
add
pop
cmp
push
push
loope
call
cld
jae
mov
add
lahf
mov
push
mov
nop
leave
nop
jmp
movsl
add
add
out
jle
mov
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
xchg
add
add
or
jg
sbb
clc
repnz
nop
cld
jae
add
dec
push
jnp
lahf
add
clc
repnz
nop
cld
jae
add
add
add
scas
loopne
nop
or
clc
repnz
nop
cld
jae
sbb
and
jae
icebp
push
mov
nop
leave
nop
jmp
add
mov
mov
fwait
mov
clc
repnz
nop
cld
jae
adc
add
add
push
mov
nop
leave
nop
jmp
add
sub
add
call
mov
repnz
nop
cld
jae
and
add
nop
nop
cld
jae
add
add
loopne
cmp
in
add
and
lds
cmp
fiadds
add
push
and
add
add
mov
xor
add
add
add
push
mov
nop
leave
nop
jmp
add
pop
add
add
clc
repnz
nop
cld
jae
add
sbb
inc
and
test
add
clc
repnz
nop
cld
jae
and
mov
outsb
and
repnz
nop
cld
jae
mov
loopne
add
xor
insb
inc
add
add
and
add
or
add
repnz
nop
cld
jae
lret
adc
mov
push
mov
xchg
ret
addb
cli
push
add
int3
loope
mov
add
add
mov
push
test
cmc
push
push
mov
xchg
ret
aas
add
add
mov
add
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
add
andb
pop
jg
jb
push
mov
xchg
ret
ljmp
cmp
mov
nop
leave
nop
jmp
xchg
icebp
xchg
xchg
add
mov
xchg
ret
add
cmp
popa
clc
repnz
nop
cld
jae
add
mov
xor
in
inc
add
and
xchg
in
in
mov
movsb
jmp
add
add
add
mov
and
add
inc
ret
mov
clc
repnz
nop
cld
jae
add
add
dec
rep
clc
repnz
nop
cld
jae
add
add
push
ljmp
repnz
nop
cld
jae
add
xor
addb
mov
inc
add
testb
mov
mov
test
repnz
nop
cld
jae
cld
icebp
sbb
je
clc
repnz
nop
cld
jae
icebp
in
and
sar
nop
nop
cld
jae
cmp
or
pop
push
mov
xchg
ret
add
add
xchg
add
sbb
add
imulb
add
aas
add
add
mov
fld1
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
push
push
andl
shl
push
mov
nop
leave
nop
jmp
add
mov
shrb
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
andb
mov
mov
sub
push
addl
add
inc
loopne
xor
push
push
mov
xchg
ret
add
add
add
inc
mov
sbb
nop
nop
cld
jae
xchg
or
imul
push
add
push
mov
nop
leave
nop
jmp
add
jnp
es
pusha
jmp
nop
nop
cld
jae
js
adc
add
lret
fld1
push
mov
xchg
ret
add
add
cmp
in
adc
mov
xchg
ret
add
and
add
and
jb
adc
add
clc
repnz
nop
cld
jae
add
aas
add
add
or
loopne
movzwl
push
mov
xchg
ret
inc
mov
jmp
in
nop
leave
nop
jmp
xor
lret
xor
cmpsl
mov
clc
repnz
nop
cld
jae
sub
cld
dec
mov
stos
rolb
push
mov
nop
leave
nop
jmp
add
xor
inc
mov
nop
nop
cld
jae
sbb
dec
adc
inc
mov
and
mov
xchg
ret
dec
inc
add
add
movsl
push
andb
push
mov
nop
leave
nop
jmp
add
in
push
clc
repnz
nop
cld
jae
add
add
ret
pusha
clc
repnz
nop
cld
jae
ljmp
add
mov
nop
leave
nop
jmp
loopne
mov
mov
rorb
lret
clc
repnz
nop
cld
jae
add
jnp
add
add
push
push
mov
xchg
ret
add
add
pop
xchg
add
mov
cld
or
nop
leave
nop
jmp
inc
testb
or
add
sub
aas
cmp
sub
cmp
repnz
nop
cld
jae
inc
mov
mov
pusha
and
add
clc
repnz
nop
cld
jae
add
inc
data16
mov
add
lret
add
add
sub
inc
and
push
mov
nop
leave
nop
jmp
dec
add
cmp
pop
push
clc
repnz
nop
cld
jae
xchg
xor
jmp
repnz
lret
mov
sbb
repnz
nop
cld
jae
inc
cmp
int3
add
rorl
mov
xchg
ret
cmp
jnp
add
add
push
push
mov
xchg
ret
insb
cmp
int3
add
add
and
psubb
nop
nop
cld
jae
add
add
add
inc
and
push
mov
xchg
ret
dec
add
xchg
add
clc
repnz
nop
cld
jae
inc
add
jnp
add
dec
push
clc
repnz
nop
cld
jae
and
test
inc
rcr
push
mov
xchg
ret
add
adc
mov
nop
leave
nop
jmp
add
adc
repnz
nop
cld
jae
call
add
ret
cmp
push
mov
nop
leave
nop
jmp
add
scas
pusha
pusha
pand
clc
repnz
nop
cld
jae
and
dec
add
aam
call
clc
repnz
nop
cld
jae
mov
jmp
adc
out
js
add
and
add
insb
inc
jb
clc
repnz
nop
cld
jae
sbb
and
outsb
add
mov
xchg
ret
xor
in
xchg
mov
and
rol
repz
repnz
nop
cld
jae
in
and
add
adc
nop
cld
jae
pop
add
adc
cld
add
nop
nop
cld
jae
jnp
and
add
mov
nop
leave
nop
jmp
aas
add
add
mov
push
clc
repnz
nop
cld
jae
add
jne
clc
repnz
nop
cld
jae
add
cmp
pop
push
mov
xchg
ret
add
insb
mov
lods
lret
fld1
push
mov
xchg
ret
mov
cld
add
pop
clc
repnz
nop
cld
jae
add
add
or
add
add
clc
repnz
nop
cld
jae
mov
lret
dec
add
pop
clc
repnz
nop
cld
jae
add
add
nop
nop
cld
jae
mov
inc
mov
push
mov
xchg
ret
cld
mov
add
jmp
int3
addl
aas
addb
add
insb
push
add
mov
mov
jns
clc
repnz
nop
cld
jae
add
add
add
je
xchg
add
push
mov
nop
leave
nop
jmp
dec
inc
add
push
lods
andb
add
push
mov
nop
leave
nop
jmp
icebp
add
jecxz
fistl
into
jl
add
push
add
and
jmp
jne
clc
repnz
nop
cld
jae
int3
add
xor
clc
repnz
nop
cld
jae
lret
xchg
lcall
out
sbb
leave
nop
jmp
xor
add
push
loopne
lret
rep
clc
repnz
nop
cld
jae
sub
add
mov
mov
nop
leave
nop
jmp
xchg
add
add
or
div
add
push
mov
nop
leave
nop
jmp
add
add
inc
sub
mov
repnz
nop
cld
jae
add
rol
push
clc
repnz
nop
cld
jae
add
xchg
xor
add
repnz
nop
cld
jae
inc
add
mov
xor
roll
repnz
nop
cld
jae
inc
add
add
mov
pop
clc
repnz
nop
cld
jae
add
in
inc
mov
je
clc
repnz
nop
cld
jae
testb
or
nop
nop
cld
jae
mov
push
mov
repnz
nop
cld
jae
lods
in
add
mov
inc
sub
sbb
cmp
ret
addl
add
sub
clc
repnz
nop
cld
jae
dec
and
add
push
push
mov
xchg
ret
jmp
add
adc
aam
add
push
mov
xchg
ret
add
add
add
sub
shr
clc
repnz
nop
cld
jae
add
jnp
sub
int
and
clc
repnz
nop
cld
jae
add
ret
cmp
push
mov
nop
leave
nop
jmp
popl
mov
sti
fistpl
push
mov
xchg
ret
add
dec
add
pop
push
mov
xchg
ret
and
in
mov
jmp
pop
mov
clc
repnz
nop
cld
jae
movsl
cmp
mov
repnz
nop
cld
jae
add
xchg
mov
jmp
nop
cld
jae
add
add
sbb
cwtl
or
inc
int3
mov
inc
adc
add
repnz
nop
cld
jae
push
aas
movsl
and
nop
nop
cld
jae
add
add
cmp
mov
inc
pop
mov
rclb
roll
repnz
nop
cld
jae
in
xchg
xorps
in
nop
leave
nop
jmp
cmp
add
xchg
mov
push
mov
nop
leave
nop
jmp
xchg
inc
addl
pop
inc
mov
push
mov
nop
leave
nop
jmp
xchg
or
sub
cmp
in
nop
leave
nop
jmp
xor
add
lret
push
push
mov
nop
leave
nop
jmp
js
add
add
cmp
nop
nop
cld
jae
xor
add
push
add
mov
adc
repnz
nop
cld
jae
mov
call
repnz
nop
cld
jae
add
add
addl
in
filds
nop
nop
cld
jae
xor
add
sub
cmp
repnz
nop
cld
jae
add
add
add
push
sub
clc
repnz
nop
cld
jae
add
andb
clc
repnz
nop
cld
jae
mov
int3
add
add
and
add
cli
movsl
add
out
call
push
push
mov
nop
leave
nop
jmp
push
add
cld
add
adc
repnz
nop
cld
jae
add
jmp
xor
clc
repnz
nop
cld
jae
and
cld
add
arpl
loop
push
mov
nop
leave
nop
jmp
or
cmp
in
add
les
repnz
nop
cld
jae
add
dec
add
clc
repnz
nop
cld
jae
icebp
or
add
add
mov
nop
nop
cld
jae
add
add
add
push
call
clc
repnz
nop
cld
jae
add
sar
nop
nop
cld
jae
mov
add
and
loopne
dec
or
ror
stc
clc
repnz
nop
cld
jae
sbb
add
mov
clc
repnz
nop
cld
jae
aas
add
mov
jns
clc
repnz
nop
cld
jae
cmp
add
add
out
scas
mov
clc
repnz
nop
cld
jae
add
add
aas
push
addl
nop
nop
cld
jae
add
sub
add
loopne
pop
push
mov
xchg
ret
and
mov
add
push
sub
in
nop
leave
nop
jmp
xchg
inc
jmp
mov
add
add
cli
push
add
testb
add
push
mov
xchg
ret
mov
js
movsl
add
popl
xchg
ret
dec
dec
add
in
cld
pop
add
clc
repnz
nop
cld
jae
add
add
aas
jnp
clc
repnz
nop
cld
jae
add
inc
mov
push
push
mov
xchg
ret
in
cli
inc
add
add
jle
clc
repnz
nop
cld
jae
inc
add
in
in
add
mov
push
mov
xchg
ret
xchg
lret
dec
dec
sub
je
add
xor
add
mov
clc
repnz
nop
cld
jae
xchg
dec
mov
jecxz
loop
push
mov
nop
leave
nop
jmp
add
add
fwait
mov
push
mov
nop
leave
nop
jmp
add
add
xchg
ss
push
mov
nop
leave
nop
jmp
and
add
rorb
add
clc
repnz
nop
cld
jae
add
and
add
mov
nop
cld
jae
add
add
addb
mov
pop
mov
mov
xchg
ret
xor
mov
mov
push
mov
xchg
ret
add
add
in
add
add
mov
xchg
ret
xchg
xor
add
push
add
dec
sbb
push
clc
repnz
nop
cld
jae
pop
add
ljmp
nop
cld
jae
ljmp
or
fadds
push
mov
xchg
ret
add
xor
insb
icebp
or
inc
jg
shr
add
dec
add
in
or
addl
add
sbb
push
mov
xchg
ret
add
add
clc
dec
addr16
push
mov
xchg
ret
add
add
add
add
mov
push
clc
repnz
nop
cld
jae
mov
xchg
add
sub
dec
mov
test
add
jmp
add
add
add
or
icebp
add
add
pop
pop
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
cld
jae
mov
add
inc
rolb
rolb
repnz
nop
cld
jae
add
add
pop
mov
push
mov
nop
leave
nop
jmp
mov
jmp
stc
mov
clc
repnz
nop
cld
jae
add
add
rcll
repnz
nop
cld
jae
add
icebp
add
clc
repnz
nop
cld
jae
add
add
add
movsl
cli
stos
add
inc
add
clc
repnz
nop
cld
jae
jmp
call
sahf
addl
or
cmpl
out
mov
push
mov
xchg
ret
in
add
lret
push
stc
xor
clc
repnz
nop
cld
jae
ss
add
add
mov
xchg
ret
add
sbb
and
xchg
ljmp
add
repnz
nop
cld
jae
andl
nop
nop
cld
jae
add
dec
add
add
or
mov
push
mov
xchg
ret
add
call
inc
add
push
mov
nop
leave
nop
jmp
add
insb
dec
cli
fdivl
ret
clc
repnz
nop
cld
jae
add
xor
mov
clc
repnz
nop
cld
jae
add
add
inc
xchg
sbb
lea
xchg
ret
inc
js
add
add
and
cmp
repnz
nop
cld
jae
lret
and
hlt
xchg
xchg
imul
push
mov
nop
leave
nop
jmp
adc
pop
insl
mov
clc
repnz
nop
cld
jae
add
in
imul
clc
repnz
nop
cld
jae
and
in
test
repnz
nop
cld
jae
add
xchg
xchg
jnp
testl
push
mov
nop
leave
nop
jmp
add
and
aas
clc
repnz
nop
cld
jae
in
inc
add
sub
jns
jge
push
mov
nop
leave
nop
jmp
add
add
xor
push
shlb
clc
repnz
nop
cld
jae
add
dec
mov
inc
or
clc
repnz
nop
cld
jae
inc
add
add
inc
call
in
nop
leave
nop
jmp
add
adc
add
nop
nop
cld
jae
add
xchg
es
test
loopne
add
push
mov
nop
leave
nop
jmp
add
loopne
add
aam
fwait
clc
repnz
nop
cld
jae
ss
add
andb
push
clc
repnz
nop
cld
jae
mov
add
mov
inc
xchg
sbb
mov
nop
leave
nop
jmp
inc
inc
add
lods
in
dec
je
push
mov
nop
leave
nop
jmp
and
mov
dec
push
clc
repnz
nop
cld
jae
aas
cmp
add
xor
lock
shlb
sbb
pop
into
adc
nop
cld
jae
add
dec
jg
cs
insb
clc
repnz
nop
cld
jae
pop
add
mov
sbb
clc
repnz
nop
cld
jae
add
adcb
pushl
clc
repnz
nop
cld
jae
add
fwait
pop
clc
repnz
nop
cld
jae
out
orl
scas
pusha
add
mov
adc
repnz
nop
cld
jae
add
push
add
in
add
push
mov
xchg
ret
add
cmp
call
adc
add
add
add
add
and
push
cmp
sbb
mov
repnz
nop
cld
jae
and
add
xchg
xor
dec
xchg
xor
clc
repnz
nop
cld
jae
add
in
ljmp
mov
and
add
push
mov
nop
leave
nop
jmp
in
push
movsl
es
add
inc
push
clc
repnz
nop
cld
jae
inc
mov
add
lret
xchg
pop
push
mov
nop
leave
nop
jmp
add
call
sub
repnz
nop
cld
jae
adc
add
cmp
xchg
push
mov
xchg
ret
adc
add
jecxz
pop
or
repnz
nop
cld
jae
add
xor
icebp
and
repnz
nop
cld
jae
mov
add
not
push
mov
xchg
ret
add
add
dec
jg
clc
repnz
nop
cld
jae
inc
add
add
add
pop
push
mov
xchg
ret
add
call
andl
add
clc
repnz
nop
cld
jae
cmp
add
lret
fs
rol
clc
repnz
nop
cld
jae
add
mov
add
push
mov
nop
leave
nop
jmp
add
add
imul
push
mov
nop
leave
nop
jmp
lods
add
loopne
mov
orl
adc
add
inc
add
add
mov
add
clc
repnz
nop
cld
jae
add
add
je
clc
repnz
nop
cld
jae
add
and
xor
push
mov
xchg
ret
cmp
add
mov
push
mov
nop
leave
nop
jmp
add
add
add
xadd
add
repnz
nop
cld
jae
add
in
dec
and
fwait
push
mov
xchg
ret
mov
add
add
cmc
push
push
mov
xchg
ret
dec
jnp
mov
in
dec
add
mov
nop
nop
cld
jae
add
xchg
fcompl
mov
xchg
ret
mov
mov
adc
mov
nop
leave
nop
jmp
add
andl
add
nop
cld
jae
add
in
jnp
and
in
add
add
add
add
mov
add
lret
cmp
inc
xorb
shlb
mov
nop
leave
nop
jmp
xchg
xchg
addl
pop
inc
fwait
clc
repnz
nop
cld
jae
mov
cli
and
add
repnz
nop
cld
jae
dec
add
lret
mov
clc
repnz
nop
cld
jae
add
add
mov
push
mov
xchg
ret
add
insb
push
cmp
or
pusha
andb
je
push
push
mov
xchg
ret
and
add
fucomp
fmull
add
call
add
push
xchg
in
add
cli
icebp
dec
rep
push
mov
xchg
ret
and
add
add
add
and
cmpl
push
mov
nop
leave
nop
jmp
add
add
or
push
mov
nop
leave
nop
jmp
dec
add
dec
add
mov
push
mov
nop
leave
nop
jmp
and
xchg
or
mov
ds
cli
scas
loopne
add
stos
push
mov
nop
leave
nop
jmp
in
testb
int3
add
or
add
inc
pusha
dec
ret
clc
repnz
nop
cld
jae
js
inc
dec
add
add
ficoms
fdivr
sub
mov
sbb
add
repnz
nop
cld
jae
mov
pop
push
mov
nop
leave
nop
jmp
add
add
sbb
add
es
clc
repnz
nop
cld
jae
dec
add
add
and
push
clc
repnz
nop
cld
jae
xor
mov
nop
leave
nop
jmp
add
inc
xchg
mov
jb
add
clc
repnz
nop
cld
jae
and
mov
nop
leave
nop
jmp
add
xchg
popl
and
inc
adc
adc
add
push
add
cld
push
in
add
add
add
test
mov
xchg
ret
or
add
add
add
push
shlb
test
xlat
addb
cmp
ret
add
and
lods
sbbb
add
jp
add
clc
repnz
nop
cld
jae
cmp
lods
add
mov
clc
repnz
nop
cld
jae
inc
add
add
add
je
clc
repnz
nop
cld
jae
sbb
add
addl
add
out
cli
cmp
sbbl
repz
repnz
nop
cld
jae
dec
mov
in
jecxz
mov
or
nop
nop
cld
jae
add
clc
repnz
nop
cld
jae
xchg
cli
add
add
add
shll
mov
nop
leave
nop
jmp
icebp
add
and
jecxz
outsl
loopne
mov
xchg
ret
int3
mov
add
js
fld1
clc
repnz
nop
cld
jae
dec
js
add
arpl
nop
leave
nop
jmp
add
mov
mov
dec
adc
add
repnz
nop
cld
jae
mov
sbb
push
mov
xchg
ret
add
add
mov
or
mov
xchg
ret
add
add
add
orl
nop
cld
jae
mov
int3
xor
add
and
pusha
add
and
and
pop
clc
repnz
nop
cld
jae
in
mov
add
dec
orl
nop
cld
jae
cmp
jmp
aas
adc
in
nop
leave
nop
jmp
add
addb
jmp
nop
nop
cld
jae
add
add
add
add
rclb
and
clc
repnz
nop
cld
jae
and
mov
cli
clc
repnz
nop
cld
jae
adc
dec
out
pop
clc
repnz
nop
cld
jae
add
in
add
add
or
add
pop
inc
adc
stos
add
add
rorl
repnz
nop
cld
jae
add
add
add
nop
nop
cld
jae
add
add
add
add
nop
leave
nop
jmp
push
add
add
mov
cmc
imul
clc
repnz
nop
cld
jae
or
test
divb
pop
push
mov
xchg
ret
add
add
and
clc
repnz
nop
cld
jae
call
xor
lods
mov
xchg
dec
xor
clc
repnz
nop
cld
jae
mov
inc
icebp
inc
and
test
clc
repnz
nop
cld
jae
xchg
ss
lea
clc
repnz
nop
cld
jae
in
movsl
add
and
clc
repnz
nop
cld
jae
inc
add
or
je
sub
repnz
nop
cld
jae
addb
mov
add
clc
repnz
nop
cld
jae
loopne
add
cld
xchg
mov
repnz
nop
cld
jae
out
in
add
cli
add
outsl
pushl
push
mov
xchg
ret
or
mov
inc
mov
or
nop
nop
cld
jae
push
mov
out
call
clc
repnz
nop
cld
jae
mov
movzwl
push
mov
nop
leave
nop
jmp
push
inc
addl
dec
int
push
mov
xchg
ret
and
add
add
call
clc
repnz
nop
cld
jae
add
and
push
mov
xchg
ret
mov
out
add
aas
fld1
clc
repnz
nop
cld
jae
add
and
add
and
notl
in
nop
leave
nop
jmp
add
aas
mov
mov
clc
repnz
nop
cld
jae
add
add
aas
add
nop
nop
cld
jae
and
pop
inc
insl
je
push
mov
nop
leave
nop
jmp
add
sti
push
mov
nop
leave
nop
jmp
add
add
add
clc
repnz
nop
cld
jae
adc
xor
mov
rolb
jbe
adc
cmc
popf
push
sub
jbe
ret
sbb
push
mov
nop
leave
nop
jmp
add
add
cli
add
xor
clc
repnz
nop
cld
jae
cli
ss
dec
imul
cli
loop
jmp
int3
adc
add
insb
icebp
push
push
mov
xchg
ret
mov
es
add
jae
repnz
nop
cld
jae
add
push
int3
inc
dec
add
clc
repnz
nop
cld
jae
or
sub
or
dec
pop
clc
repnz
nop
cld
jae
add
add
add
testb
add
clc
repnz
nop
cld
jae
cld
add
cmp
lods
mov
data16
add
or
add
dec
std
mov
clc
repnz
nop
cld
jae
int3
and
inc
add
test
push
mov
nop
leave
nop
jmp
in
in
addb
mov
movb
sub
inc
add
push
add
in
inc
push
jp
pusha
inc
mov
clc
repnz
nop
cld
jae
js
and
addb
mov
add
repnz
nop
cld
jae
add
add
dec
fimull
call
clc
repnz
nop
cld
jae
add
xchg
xchg
dec
push
mov
jo
push
push
mov
xchg
ret
add
movsl
jmp
pop
lods
add
clc
repnz
nop
cld
jae
add
add
add
xchg
sub
pop
sub
jb
repnz
nop
cld
jae
and
loopne
mov
jns
repz
repnz
nop
cld
jae
add
aas
add
adc
mov
clc
repnz
nop
cld
jae
mov
add
and
cmp
repnz
nop
cld
jae
dec
lret
push
add
pop
clc
repnz
nop
cld
jae
add
movsl
add
and
xchg
or
sar
clc
repnz
nop
cld
jae
add
mov
sub
nop
cld
jae
add
add
xor
clc
repnz
nop
cld
jae
add
loopne
add
loopne
add
clc
repnz
nop
cld
jae
or
aas
aaa
sub
push
mov
xchg
ret
sub
js
xchg
push
mov
xchg
ret
xchg
sbb
in
add
out
push
clc
repnz
nop
cld
jae
mov
add
aas
hlt
sti
pusha
clc
repnz
nop
cld
jae
push
call
add
jmp
nop
leave
nop
jmp
xor
mov
xchg
fidivs
ss
add
clc
repnz
nop
cld
jae
mov
add
mov
clc
repnz
nop
cld
jae
add
loopne
lahf
push
push
mov
xchg
ret
dec
add
mov
or
or
xor
clc
repnz
nop
cld
jae
add
pop
clc
push
mov
nop
leave
nop
jmp
sbb
cmpl
add
scas
mov
and
ss
clc
repnz
nop
cld
jae
add
inc
jecxz
repnz
nop
cld
jae
mov
add
addl
push
jge
add
and
add
add
out
call
push
mov
nop
leave
nop
jmp
cli
aas
mov
add
mov
xchg
ret
or
inc
adc
add
int3
movsb
add
rcrl
mov
xchg
ret
add
add
or
add
add
sub
clc
repnz
nop
cld
jae
icebp
cld
insb
push
jecxz
clc
repnz
nop
cld
jae
push
add
add
add
in
jbe
xchg
push
mov
nop
leave
nop
jmp
add
cli
cld
sub
mov
nop
leave
nop
jmp
inc
push
add
imul
nop
nop
cld
jae
sub
ljmp
pusha
loopne
in
and
adcb
nop
leave
nop
jmp
cmp
movsl
add
and
push
mov
xchg
ret
add
add
adc
jne
push
mov
xchg
ret
mov
add
jg
clc
repnz
nop
cld
jae
add
add
add
mov
clc
repnz
nop
cld
jae
add
sub
cld
jae
popl
add
ss
dec
pop
push
mov
xchg
ret
cli
adc
add
add
add
sub
add
repnz
nop
cld
jae
cld
xchg
add
mov
inc
pusha
iret
mov
clc
repnz
nop
cld
jae
add
add
loope
sar
repnz
nop
cld
jae
add
jmp
fiaddl
nop
nop
cld
jae
add
inc
fnsave
sar
repnz
nop
cld
jae
add
and
lods
lods
divb
nop
cld
jae
insb
jnp
push
add
add
mov
push
mov
xchg
ret
add
or
add
mov
nop
leave
nop
jmp
int3
add
add
fistpl
push
mov
xchg
ret
jnp
add
push
and
test
repnz
nop
cld
jae
addl
add
sub
xor
jnp
push
mov
xchg
ret
sbb
sub
xchg
add
add
cwtl
rorl
test
fdivr
clc
repnz
nop
cld
jae
add
inc
rclb
insb
inc
add
mov
dec
mov
and
loopne
pusha
and
push
mov
xchg
ret
push
or
add
mov
add
inc
sbb
nop
nop
cld
jae
add
add
loopne
leave
clc
repnz
nop
cld
jae
mov
mov
add
add
iret
xchg
push
mov
nop
leave
nop
jmp
inc
push
and
push
push
enter
pop
clc
repnz
nop
cld
jae
add
cli
ljmp
clc
repnz
nop
cld
jae
push
add
dec
cli
add
mov
xchg
ret
mov
andb
ljmp
add
add
repnz
nop
cld
jae
push
add
mov
test
push
mov
nop
leave
nop
jmp
in
add
jnp
add
mov
or
lret
push
add
out
add
add
and
nop
nop
cld
jae
add
add
add
add
popf
shr
push
mov
xchg
ret
add
loopne
sbb
add
repnz
nop
cld
jae
add
mov
mov
repnz
nop
cld
jae
es
inc
add
add
loop
push
mov
xchg
ret
add
add
add
mov
mov
push
mov
xchg
ret
inc
add
add
mov
xchg
ret
dec
mov
xchg
add
push
push
mov
nop
leave
nop
jmp
add
add
add
sbb
push
clc
repnz
nop
cld
jae
out
lods
add
add
or
repnz
nop
cld
jae
add
dec
xor
add
push
mov
xchg
ret
add
addb
clc
repnz
nop
cld
jae
lret
and
add
je
clc
repnz
nop
cld
jae
add
mov
pusha
push
add
clc
repnz
nop
cld
jae
add
push
clc
repnz
nop
cld
jae
xchg
inc
add
dec
xchg
mov
shrb
clc
repnz
nop
cld
jae
add
aas
je
scas
loopne
shrb
orb
popl
push
mov
nop
leave
nop
jmp
add
nop
insl
add
push
mov
nop
leave
nop
jmp
add
push
jmp
jl
and
repnz
nop
cld
jae
add
mov
add
sub
clc
repnz
nop
cld
jae
in
mov
rorl
cwtl
in
clc
repnz
nop
cld
jae
adc
push
mov
xchg
ret
add
add
add
inc
inc
aas
mov
push
mov
nop
leave
nop
jmp
add
movsl
adc
clc
repnz
nop
cld
jae
add
push
add
subl
nop
cld
jae
mov
or
push
mov
xchg
ret
lods
inc
andb
mov
clc
repnz
nop
cld
jae
add
and
or
ror
push
mov
xchg
ret
mov
add
sarb
dec
addb
cmp
ret
mov
add
push
mov
xchg
ret
loopne
int3
add
pop
setnp
repnz
nop
cld
jae
add
or
add
add
mov
fistl
das
insb
inc
add
adc
in
jmp
push
push
mov
nop
leave
nop
jmp
add
add
add
sub
inc
clc
repnz
nop
cld
jae
adc
add
add
fwait
push
mov
nop
leave
nop
jmp
xor
add
ds
fisttps
nop
nop
cld
jae
and
add
push
bound
andb
add
jb
clc
repnz
nop
cld
jae
add
xchg
aad
es
clc
repnz
nop
cld
jae
add
add
call
in
nop
leave
nop
jmp
call
pop
clc
repnz
nop
cld
jae
and
dec
add
iret
mov
push
mov
nop
leave
nop
jmp
and
dec
add
nop
sbb
xchg
repnz
nop
cld
jae
in
add
push
ja
clc
repnz
nop
cld
jae
sub
jle
call
push
dec
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
add
pop
add
and
js
out
mov
dec
push
mov
xchg
ret
lods
int3
add
add
add
clc
repnz
nop
cld
jae
mov
add
cli
ljmp
loopne
clc
repnz
nop
cld
jae
push
jnp
cmpsb
add
mov
jbe
clc
repnz
nop
cld
jae
add
add
xchg
add
clc
repnz
nop
cld
jae
add
add
push
push
mov
nop
leave
nop
jmp
mov
add
mov
call
push
mov
nop
leave
nop
jmp
add
add
xchg
xor
cmp
push
mov
xchg
ret
add
cmp
add
rolb
nop
nop
cld
jae
add
cld
mov
push
mov
xchg
ret
out
add
add
push
push
mov
xchg
ret
sub
inc
inc
out
mov
mov
sbb
leave
or
add
cltd
add
loopne
out
push
xchg
add
clc
repnz
nop
cld
jae
mov
and
cmp
pop
push
mov
xchg
ret
add
call
add
inc
xor
xchg
inc
push
cmp
xchg
add
clc
repnz
nop
cld
jae
mov
or
add
nop
cld
jae
xor
add
add
inc
adc
add
clc
repnz
nop
cld
jae
add
movsl
add
xchg
movsl
add
mov
test
jmp
clc
repnz
nop
cld
jae
add
aad
jmp
xchg
add
add
pop
add
push
mov
nop
leave
nop
jmp
dec
add
add
cli
add
add
repnz
nop
cld
jae
jmp
mov
shlb
fwait
push
mov
xchg
ret
add
xchg
adc
xchg
add
add
repnz
nop
cld
jae
and
out
dec
js
add
pop
jmp
add
add
leave
nop
jmp
add
add
aam
mov
push
mov
nop
leave
nop
jmp
lods
icebp
push
cmp
mov
xchg
ret
add
add
push
shr
in
ljmp
cmp
add
adc
mov
xchg
ret
mov
add
xor
rolb
stos
push
mov
nop
leave
nop
jmp
add
int3
sbb
jmp
and
mov
push
mov
xchg
ret
add
mov
and
js
andb
mov
push
mov
nop
leave
nop
jmp
add
int3
add
or
mov
repnz
nop
cld
jae
dec
and
mov
add
repnz
nop
cld
jae
mov
add
add
or
clc
repnz
nop
cld
jae
pop
add
in
nop
leave
nop
jmp
add
lods
add
inc
push
jnp
add
push
mov
xchg
ret
inc
call
xchg
nop
daa
lea
push
mov
nop
leave
nop
jmp
mulb
add
inc
add
fs
repnz
nop
cld
jae
xchg
sbb
sub
nop
cld
jae
add
sbb
add
int3
aaa
mov
clc
repnz
nop
cld
jae
add
insb
add
int3
scas
shlb
push
clc
repnz
nop
cld
jae
add
jnp
add
add
call
in
add
inc
add
inc
add
cli
ljmp
push
clc
repnz
nop
cld
jae
add
in
lea
repnz
nop
cld
jae
ljmp
cld
test
inc
les
movsl
add
add
push
dec
jnp
jmp
movsl
push
popf
pop
clc
repnz
nop
cld
jae
add
sub
push
add
pusha
inc
or
mov
sbb
push
mov
xchg
ret
add
adc
fwait
add
push
mov
xchg
ret
add
add
popf
add
clc
repnz
nop
cld
jae
add
adc
pusha
mov
cmp
clc
repnz
nop
cld
jae
add
mov
test
add
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
add
mov
add
repnz
nop
cld
jae
add
and
pop
mov
or
repnz
nop
cld
jae
in
add
xchg
add
call
clc
repnz
nop
cld
jae
add
inc
movsl
sub
shl
mov
clc
repnz
nop
cld
jae
add
add
mov
mov
nop
cld
jae
add
in
icebp
int3
es
add
in
nop
leave
nop
jmp
pop
xchg
add
and
clc
repnz
nop
cld
jae
push
add
insb
lods
mov
and
repnz
nop
cld
jae
ss
add
and
mov
push
push
mov
nop
leave
nop
jmp
add
and
lods
add
cmc
cmp
push
mov
nop
leave
nop
jmp
mov
push
pusha
and
ret
test
jmp
nop
nop
cld
jae
mov
push
clc
repnz
nop
cld
jae
add
add
in
dec
cld
jecxz
clc
repnz
nop
cld
jae
mov
popl
divb
pop
clc
repnz
nop
cld
jae
and
add
js
add
adc
clc
repnz
nop
cld
jae
add
adc
sar
repnz
nop
cld
jae
sub
add
push
push
mov
xchg
ret
icebp
add
icebp
cmpl
push
mov
nop
leave
nop
jmp
add
add
mov
add
push
mov
xchg
ret
dec
xchg
add
add
add
xchg
lods
xor
clc
repnz
nop
cld
jae
inc
mov
and
loopne
inc
push
mov
movsl
add
stos
add
cs
inc
mov
pushl
push
mov
xchg
ret
add
cmp
rolb
pusha
add
call
clc
repnz
nop
cld
jae
add
add
inc
cmp
nop
cld
jae
in
push
jnp
add
add
mov
clc
repnz
nop
cld
jae
sub
add
mov
sub
add
add
add
add
loop
mov
push
mov
xchg
ret
or
in
js
in
add
inc
clc
repnz
nop
cld
jae
mov
cld
or
xor
repnz
nop
cld
jae
push
add
push
mov
xchg
ret
add
add
icebp
mov
cmp
mov
push
mov
nop
leave
nop
jmp
testb
mov
clc
repnz
nop
cld
jae
and
adc
rcll
nop
nop
cld
jae
js
add
xchg
sbb
add
nop
nop
cld
jae
mov
add
sub
push
mov
nop
leave
nop
jmp
xor
push
push
mov
xchg
ret
add
add
call
sub
add
inc
and
clc
repnz
nop
cld
jae
add
or
call
inc
add
xchg
add
sbb
in
loopne
enter
push
mov
xchg
ret
cld
add
add
add
pusha
shl
push
push
mov
xchg
ret
add
add
add
nop
nop
cld
jae
add
add
add
imul
jmp
add
or
lret
mov
loopne
loopne
mov
push
mov
xchg
ret
js
add
mov
inc
sub
pop
add
clc
repnz
nop
cld
jae
add
and
loopne
cmp
sub
dec
cmp
repnz
nop
cld
jae
addb
push
add
jmp
add
and
mov
mov
pusha
mov
aaa
jmp
incl
add
add
add
inc
cmp
push
test
repnz
nop
cld
jae
add
andl
mov
clc
repnz
nop
cld
jae
and
loopne
loopne
in
fwait
clc
repnz
nop
cld
jae
addb
sbb
add
add
mov
push
mov
nop
leave
nop
jmp
add
xor
xor
push
clc
repnz
nop
cld
jae
add
cmp
mov
add
push
mov
nop
leave
nop
jmp
jnp
add
sbb
inc
and
call
clc
repnz
nop
cld
jae
add
js
addb
add
clc
repnz
nop
cld
jae
or
mov
xchg
inc
fs
pusha
clc
repnz
nop
cld
jae
add
add
mov
add
pop
popa
push
mov
xchg
ret
int3
add
out
pop
add
add
les
clc
repnz
nop
cld
jae
add
add
add
test
loopne
loopne
popa
clc
repnz
nop
cld
jae
mov
add
mov
rcrb
push
mov
add
add
add
add
sub
movsb
jb
sarb
imul
mov
pop
xor
andb
aad
push
das
cmp
inc
fstl
push
lcall
out
or
inc
dec
inc
ret
std
js
pushf
push
lret
call
mov
jcxz
addr16
xor
test
push
jb
clc
cld
xchg
xchg
cmc
mov
js
daa
mov
mov
pusha
shlb
fsub
imul
jmp
mov
cld
add
fsts
mov
ds
jl
jl
and
imul
rol
mov
pop
inc
add
push
mov
jns
mov
lcall
add
add
pop
pop
mov
xchg
adc
dec
sub
and
inc
jo
cmp
mov
inc
add
ret
inc
cmp
aam
aam
pop
sbb
ja
and
mov
addb
loopne
insl
rcll
pusha
and
in
lret
scas
shl
and
movsb
and
aad
push
mov
xchg
pop
mov
lret
pop
push
adc
cmp
push
cmp
pusha
loopne
and
jae
addb
sbb
mov
popa
xchg
sub
add
int3
cltd
addr16
push
dec
jge
out
pop
adc
repnz
inc
clc
test
inc
add
lds
or
loopne
sti
shl
pop
push
lds
add
pusha
pusha
rol
lock
test
pusha
pop
mov
mov
pop
add
in
or
mov
ret
mov
loopne
or
outsb
sarb
gs
mov
push
mov
rolb
repnz
pop
scas
add
mov
aaa
lret
xchg
xchg
fldt
rorb
xchg
xor
and
xor
pusha
pusha
into
ficompl
jns
mov
push
shlb
mov
cmpsl
xchg
pop
pop
imul
gs
ret
dec
outsl
scas
out
out
and
and
jns
lds
sbb
in
mov
test
and
gs
mov
cmp
jne
xor
popf
jp
pop
mov
fdivrs
scas
inc
sbb
add
mov
and
xor
rol
dec
push
cmp
and
fwait
sub
mov
mov
loopne
xor
inc
add
lea
sbb
shlb
addb
adcb
mov
push
or
addb
lret
pushf
jbe
cltd
addb
mov
pop
test
loopne
sub
rcl
ror
in
popa
sub
sbb
mov
pop
or
add
inc
arpl
leave
lahf
mov
pop
in
and
xorb
dec
jb
outsb
inc
ja
mov
and
iret
inc
pop
les
loopne
sub
loopne
or
push
sub
cmp
xchg
jnp
shlb
rolb
jns
sub
loopne
repz
loopne
dec
pop
add
repz
repnz
shrb
add
out
add
inc
jae
cmp
mov
xor
punpcklwd
sub
mov
jg
rcl
push
inc
mov
in
dec
js
fdivs
push
and
mov
addr16
pusha
add
xchg
inc
dec
push
push
pushf
out
test
mov
adc
pusha
sub
pusha
add
andb
inc
enter
jge
cwtl
scas
pop
cmp
pusha
loop,pt
das
movsl
sub
or
rolb
loopne
mov
adc
jae
push
mov
or
inc
push
lds
inc
dec
xor
and
cmp
adc
rolb
add
addb
pusha
mov
scas
inc
inc
mov
pop
cmp
jne
inc
and
leave
pop
cmp
movsb
and
scas
neg
add
andb
roll
movsl
mov
cmpsb
inc
and
add
sti
int3
push
mov
or
jl
ret
inc
mov
jno
and
loopne
dec
xor
jle
sub
andb
mov
addb
add
in
jl
mov
pusha
loopne
push
xor
out
std
lods
or
mov
xchg
mov
pusha
pusha
outsl
cmpsb
add
lock
fcomip
inc
dec
pop
mov
dec
lods
mov
inc
mov
sub
and
lahf
dec
push
addr16
or
add
and
or
ja
jno
outsb
mov
rolb
inc
mov
pusha
inc
mov
add
out
xor
sub
aas
loopne
sbb
enter
mov
and
orb
std
xor
xchg
push
xchg
aam
add
insl
imul
sub
rorb
mov
fsubl
rol
or
inc
rcrb
shll
and
sbb
xchg
ds
out
adc
add
fldcw
and
sti
or
nop
out
mov
fstl
les
cmp
paddsb
es
cmpb
mov
imulb
inc
mov
pop
xchg
jb
out
movsb
and
jmp
ret
lea
add
sbb
and
mov
adcl
mov
sti
inc
push
mov
jo
gs
cwtl
cvttps2pi
adc
cmpsl
cmp
push
inc
dec
out
mov
les
std
loopne
add
hlt
jns
pop
sub
inc
push
aam
addb
ljmp
pusha
add
push
or
and
lea
mov
mov
pusha
data16
ret
xor
cmp
shrl
rorb
sub
fldt
daa
popf
mov
jmp
popa
and
inc
repz
hlt
aaa
jecxz
insl
mov
movsl
add
xchg
pop
rcr
ss
rol
add
xchg
mov
mov
mov
outsl
arpl
insb
addb
pushf
in
inc
add
sbb
sub
in
out
insb
adc
push
mov
mov
inc
inc
jle
push
cmp
jecxz
dec
pop
adc
neg
sarb
fcompl
sub
enter
xor
sbb
fisttps
or
loopne
scas
mov
hlt
andb
and
insl
or
enter
mov
sbb
jge
loopne
pop
lret
cmc
ds
rolb
add
hlt
lock
popa
setno
sbb
push
nopl
addb
add
xchg
mov
ficoml
enter
lods
jno
cli
xchg
pop
ds
pusha
or
shlb
jl
shlb
mov
loopne
ljmp
sub
and
rorb
lcall
loopne
inc
mov
insb
fcomps
inc
sarb
fwait
addr16
addb
add
or
and
pop
xor
inc
pusha
mov
lret
mov
and
sbb
jbe
or
and
pop
dec
cmp
add
push
in
inc
pop
and
fidivrs
subl
mov
daa
xchg
mov
cmp
fldcw
mov
cmpsb
shlb
call
ds
mov
pusha
pop
push
shl
out
sub
inc
mov
push
insl
js
mov
lock
das
mov
je
xor
addb
sahf
pop
lods
rol
add
mov
xchg
mov
sub
inc
mov
xchg
add
fldenv
add
adcb
adc
add
and
pop
push
imul
lock
stc
clc
insl
andb
stos
mov
adc
cmpsl
mov
fs
cmp
lods
mov
es
add
in
jg
push
and
dec
and
inc
js
or
aas
data16
cld
sbb
adc
mov
cmp
sub
andb
les
inc
das
shrb
and
and
dec
cmp
push
lock
aam
inc
sbbb
in
stc
pushf
inc
mov
fisubl
mov
aas
pop
cld
push
xchg
clc
ret
andb
and
stos
sub
addb
fwait
xor
loopne
xchg
shlb
xlat
lret
inc
xchg
xor
and
into
in
addb
cwtl
ss
fstl
dec
icebp
jg
mov
add
cmp
into
lahf
mov
out
mov
pop
repz
jl
sbb
stc
jg
push
dec
scas
sub
pusha
pop
add
test
mov
rcrb
enter
pop
shlb
loopne
xchg
mov
fidivrl
in
mov
add
ljmp
cmp
dec
loopne
jns
jnp
and
add
loopne
adc
pop
ljmp
dec
and
loopne
pop
lods
pusha
shlb
shlb
jno
divl
adc
jnp
pop
out
repz
inc
jae
divl
add
and
sbbb
and
dec
cmp
lock
sbb
lods
mov
fwait
addb
inc
xor
sbb
lea
dec
ss
or
push
cmp
nop
rcrb
xchg
lret
xor
or
xor
push
jp
and
xchg
sbb
iret
mov
push
add
shlb
loope
mov
fucomi
xor
out
shl
mov
mov
ja
xchg
in
aad
add
das
push
je
push
pusha
and
inc
inc
jge
cmp
inc
and
pop
in
add
inc
xchg
gs
push
sub
inc
and
and
mov
xchg
ucomiss
mov
and
pop
out
push
and
mov
adc
push
push
inc
add
mov
loopne
adc
pop
imul
mov
dec
popf
clc
in
pop
loope
pop
daa
ljmp
xor
pushf
int3
lods
and
jmp
lret
mov
and
shlb
pusha
add
inc
loopne
inc
mov
imul
jbe
outsb
sahf
jle
ss
sub
fildl
hlt
sbb
or
dec
cmp
or
xchg
and
mov
mov
mov
xlat
inc
aam
faddl
and
jnp
inc
inc
mov
inc
jo
cli
je
add
ret
jne
dec
push
dec
movsb
rolb
push
shlb
mov
movsb
mov
jns
int
mov
ficomps
stos
xor
loopne
sbb
adc
pusha
and
inc
loopne
es
fcompl
add
daa
mov
add
outsb
push
lods
loopne
push
inc
mov
mov
sub
add
inc
mov
add
popf
fistps
mov
and
rclb
add
add
push
pop
push
loopne
iret
out
insb
mov
adc
pop
mov
add
mov
adc
dec
nop
shl
cmp
scas
mov
cmp
hlt
push
mov
add
sarb
fdiv
loopne,pn
js
and
push
pop
jmp
pop
enter
sarb
out
iret
jg
push
sbb
cmpsl
jns
or
shlb
add
int3
jp
je
cmp
bsr
hlt
icebp
mov
hlt
jp
les
dec
test
add
xor
lods
pusha
inc
int
push
push
cmpsb
rol
or
rcrb
and
hlt
adc
imul
add
loop
and
loopne
push
fbstp
fxtract
jle
push
cli
push
cmc
inc
out
pop
mov
popf
cltd
pop
pop
addr16
add
adc
adc
push
xchg
rol
xchg
ss
iret
inc
leave
pusha
or
rolb
adc
ror
mov
inc
imul
cmp
popa
and
shl
pushl
fs
sbb
negb
and
andb
nop
adc
hlt
orl
loopne
jmp
and
insl
int
dec
out
sarl
mov
and
add
loopne
lock
hlt
pop
les
xchg
mov
pusha
rolb
push
dec
pop
subl
mov
sbb
mov
inc
jae
sbb
and
push
cmp
pop
stc
ret
fwait
std
int3
lret
gs
jns
push
sub
loopne
push
stc
cmp
cmp
stos
andb
add
rolb
push
mov
inc
inc
xchg
inc
and
or
shll
insl
data16
pusha
jg
dec
and
mov
data16
pusha
ja
add
mov
push
pusha
sbb
in
gs
hlt
sub
cwtl
into
mov
or
stc
push
inc
sbb
idivl
sbb
mov
mov
out
mov
enter
add
cmp
andb
and
add
inc
shrb
jno
fidivl
ja
ds
jb
lods
xchg
inc
addb
shr
pop
xor
and
cwtl
and
and
lahf
xlat
popa
lret
fsubp
mov
cld
mov
xor
jle
andb
and
in
lcall
addb
lods
lcall
ja
ret
and
daa
aaa
sbb
mov
pushl
in
mov
dec
pop
in
mov
jmp
inc
inc
aam
jle
xchg
and
pop
adc
call
xchg
andb
mov
dec
popf
inc
pop
push
je
test
add
and
scas
mov
mov
aas
inc
lds
enter
shlb
cwtl
mov
loopne
xor
movsb
pusha
inc
scas
pusha
add
lds
mov
ret
xlat
sar
cld
mov
sbb
jp
add
rol
lds
sbb
loopne
mov
mov
or
test
and
xchg
dec
in
mov
add
rcrb
cmp
xor
dec
testb
mov
adc
cmc
or
inc
add
sub
xchg
mov
mov
add
xchg
mulb
loopne
loope
and
jecxz
insb
rcrb
jne
mov
cli
push
mov
loopne
fsubrl
rol
xlat
and
rclb
out
test
push
jne
dec
into
bound
adc
rolb
fidivrs
pop
push
push
mov
mov
loopne
xor
dec
popa
lret
cmpsb
loopne
mov
dec
dec
xor
and
rolb
cmp
mov
sub
add
int
lods
add
pop
mov
mov
inc
aaa
jmp
ret
repnz
gs
icebp
mov
xchg
enter
pop
fildl
push
je
or
mov
xchg
adc
es
sarb
imul
pusha
je
xchg
fadd
and
scas
dec
mov
pushf
addb
repz
or
test
mov
out
addb
mov
add
jmp
cmp
lret
aaa
cmp
imul
rolb
adc
jl
sub
shl
mov
xchg
push
mov
gs
rolb
sbb
add
mov
das
aad
xor
jo
imul
xor
sahf
pop
clc
mov
test
aad
mov
lods
inc
pusha
pop
icebp
and
and
cmc
push
insl
mov
mov
add
iret
nop
mov
xchg
or
scas
push
scas
dec
sub
fsts
rcrl
and
loopne
in
js
add
mov
out
sbb
lret
scas
fbld
leave
pop
stos
inc
shlb
ret
insb
dec
and
add
aam
dec
xor
jge
bound
inc
loopne
jns
shrb
popa
js
push
mov
pusha
inc
lods
loopne
inc
adc
sbb
mov
daa
gs
aam
xor
mov
pusha
mov
xchg
inc
cmp
gs
xchg
push
aad
icebp
pusha
jmp
scas
rolb
push
pusha
inc
ret
pusha
shr
inc
aas
hlt
mov
mov
subb
pusha
adc
cmc
jno
movsb
mov
xor
add
push
xor
roll
loopne
jecxz
mov
pushf
add
mov
std
test
adc
scas
push
cli
xchg
gs
and
lock
and
andb
and
fwait
in
add
xchg
rcll
lods
dec
lcall
jno
jle
ret
inc
rcll
loopne
xor
mov
dec
jle
jb
aad
add
sbb
add
jp
sti
and
mov
shrb
jb
xor
cs
cmpb
mov
and
shlb
sub
lds
test
jmp
das
pop
rclb
ljmp
add
or
mov
sub
sub
mov
lods
pusha
inc
dec
cmp
fs
imul
inc
add
dec
pop
jl
pusha
xorb
shrl
pushf
aad
add
add
rolb
pop
rorb
jle
xchg
jecxz
cmp
lahf
insb
mov
add
xchg
mov
mov
or
ja
and
test
xchg
dec
fiaddl
movsl
cwtl
cmpsl
push
mov
mov
fildll
into
pop
mov
jp
aas
addr16
rcl
pop
in
int3
or
jno
rolb
lods
and
xor
add
aam
andb
hlt
inc
mov
mov
and
mov
in
dec
inc
lods
mov
and
and
pop
mov
inc
jle
pop
inc
enter
call
sbb
cmc
add
sub
jbe
add
ss
arpl
jbe
popa
stos
andb
sub
and
inc
xor
sti
push
xchg
addr16
sbb
loopne
adc
in
loopne
popf
pop
mov
loopne
out
mov
out
mov
xor
rolb
movsb
andb
fs
lret
insb
mov
loopne
movl
ja
loope
insl
insb
cmc
gs
sub
cwtl
test
adc
mov
cmp
daa
lock
clc
mov
enter
pusha
add
lahf
movsl
mov
data16
pop
lods
ja
or
dec
js
add
shlb
mov
cmpsl
xchg
pop
pop
arpl
stos
shlb
test
addr16
into
lahf
test
cmpsb
add
mov
push
jbe
lahf
add
andb
sar
mov
cmp
roll
aas
and
add
loopne
in
aaa
push
out
cmpsl
push
pusha
pusha
dec
test
inc
aas
fidivl
loop
push
xchg
mov
mov
mov
movb
jecxz
mov
fistps
aad
je
or
xchg
das
xchg
ja
add
lret
les
mov
popa
call
push
and
loopne
xorl
das
rcll
popf
xchg
xor
sub
and
sbb
lret
addb
mov
loopne
xor
mov
cmp
xchg
push
rol
mov
rcrb
mov
outsl
call
mov
add
data16
arpl
cmp
pusha
mov
rcll
or
pop
dec
add
inc
out
out
dec
insl
or
movsb
andb
loopne
add
xor
int3
mov
stos
inc
insl
push
out
mov
test
js
mov
popa
adc
xchg
fstpl
sub
lcall
loopne
xor
insb
mov
lcall
andb
fnsave
jbe
scas
pusha
and
mov
in
xchg
aam
add
mov
pushf
adc
mov
sahf
ja
loopne
jne
mov
push
add
xor
jnp
mov
pop
lods
pusha
loopne
mov
aad
rolb
jae
pop
inc
mov
andb
popa
enter
mov
inc
addb
cmp
jp
dec
mov
subl
je
pusha
add
in
mov
mov
inc
adcb
push
xchg
mov
sbb
push
nop
stos
and
in
ds
xlat
leave
in
shlb
andb
xor
mov
sbb
adc
inc
cld
repnz
lods
andb
dec
sbb
out
loop
adc
fucom
push
xor
cmpsl
push
inc
and
add
out
fbld
ret
mov
mov
add
pop
stc
mov
fs
test
mov
pop
and
mov
ja
inc
inc
sub
inc
cmc
pop
push
push
iret
mov
pop
aas
loopne
ljmp
add
add
loopne
and
lea
insl
xor
or
push
sbb
add
xor
cld
pop
popf
outsl
and
add
inc
aaa
iret
and
rclb
add
push
repnz
mov
and
sbb
inc
inc
sub
mov
add
rorb
clc
dec
cmp
and
insl
xchg
add
rolb
aad
aad
scas
and
lret
cld
push
sub
mov
mov
nop
outsl
push
add
mov
and
fs
and
test
add
test
add
adc
pop
or
xor
pop
scas
test
mov
cltd
xchg
jae
cld
cwtl
dec
cwtl
xchg
stos
cmpsb
and
jmp
fcoml
pop
jge
stos
push
or
push
and
into
xchg
push
cld
push
xor
std
inc
pop
cmp
pop
rcll
ja
cmp
lock
mov
stos
addb
inc
loopne
adc
ljmp
insl
mov
pandn
jge
bnd
push
and
sbb
shlb
daa
jge
outsb
fwait
out
xchg
jge
arpl
das
scas
and
aad
mov
fucomi
xchg
js
pop
cwtl
xchg
add
outsb
ret
push
mov
rolb
sbbl
and
iret
cltd
xchg
ja
dec
aam
popa
dec
push
sub
and
add
in
sbb
movsl
mov
push
pusha
sarb
clc
stos
xchg
les
and
inc
pusha
pop
push
push
push
sub
inc
mov
mov
rol
and
inc
rcrb
int3
mov
pusha
add
sub
fs
and
pop
fists
pop
add
mov
mov
int3
sbb
imul
xchg
pop
jno
les
nop
xchg
cmpl
add
loop
xor
lock
lret
test
test
stc
repz
adc
dec
dec
outsl
lahf
and
mov
dec
popa
cs
rolb
imul
pop
jae
ret
aas
push
and
cwtl
sbb
jno
mov
ja
ss
rolb
in
pushf
les
sub
bound
popf
cmp
xchg
lods
mov
xor
outsl
inc
mov
ja
and
out
out
std
test
loopne
xchg
and
gs
and
stos
add
and
shll
sbb
and
cmpsb
rolb
out
inc
loopne
add
cmpsl
imul
loopne
sub
push
rcr
ret
fwait
shrb
sarb
mov
data16
and
xchg
pcmpeqd
or
pusha
push
mov
icebp
sbb
xor
jb
mov
jmp
and
jns
inc
shrb
pop
jg
lret
std
dec
aam
mov
add
mov
cmp
andb
loopne
add
movsl
ret
in
pop
xor
xchg
cmpb
fdivr
jle
es
and
push
aas
add
pusha
mov
inc
fdivrl
sbb
and
cmp
addb
rorl
add
fcompl
cld
adc
in
andb
lds
mov
out
or
rolb
imul
lahf
inc
jae
cmp
pop
mov
inc
add
sub
filds
dec
xchg
jbe
xlat
mov
sub
jo
fwait
nop
insb
movsb
rolb
out
stos
and
lcall
push
xchg
leave
push
jbe
cmc
iret
or
mull
inc
iret
or
mov
lea
dec
mov
pop
xor
subl
xchg
push
xchg
and
gs
bound
call
out
ror
pop
or
sbbb
andb
dec
dec
mov
xchg
dec
adc
cmp
sub
stos
add
xchg
cmp
stc
mov
mov
pop
pop
sti
inc
nop
outsb
mov
adc
rol
push
mov
scas
pushf
add
fwait
sar
test
and
mov
inc
lcall
xchg
mov
inc
cmpsl
adc
mov
out
mov
aam
in
mov
out
xor
sbb
add
aam
pop
and
add
sub
inc
cld
adc
imul
aad
int
filds
sti
aaa
xchg
lds
xchg
push
fwait
stos
je
jb
fstpl
add
push
push
jns
ljmp
mov
xchg
fldl
call
mov
jnp
rcll
push
mov
mov
stos
jno
xchg
or
rorl
xchg
sarl
push
cmpsl
fwait
lcall
in
movsb
add
inc
cmpb
pusha
add
or
mov
sti
push
and
push
add
lahf
sarb
push
pusha
jae
arpl
xchg
mov
sbb
sbb
fldcw
and
rolb
inc
rcrb
jno
xchg
push
mov
sbb
or
inc
xchg
mov
pop
push
sti
daa
lcall
inc
loopne
add
loopne
pusha
and
cmp
fbld
mov
mov
mov
bound
rolb
cmpsb
rolb
in
hlt
xor
jp
inc
daa
imul
mov
mov
add
addb
xchg
lret
lea
nop
sbb
and
mov
pusha
sarb
pop
jb
lea
pusha
cmp
pushf
cltd
mov
scas
dec
adc
jbe
les
fsubr
pop
loopne
adcl
xorl
dec
ret
in
cmpsb
pusha
and
loopne
test
jmp
lahf
push
notl
icebp
push
cmp
out
stos
cmp
pop
cwtl
xchg
fisubs
xor
clc
ljmp
cmpsl
cltd
hlt
and
sbb
outsb
fidivl
push
lods
jl
in
push
or
ja
rcr
mov
popf
jecxz
inc
and
andb
sti
das
arpl
and
cwtl
stos
adc
sub
mov
movsl
mov
mov
loopne
shr
ja
mov
testb
les
movsl
movsl
gs
mov
mov
pop
rcrl
loopne
leave
mov
shlb
out
sbb
lret
ret
gs
into
cmp
and
adc
mov
int
xor
inc
push
hlt
xchg
fcoml
pop
sub
lret
xchg
outsb
add
ds
push
pusha
add
inc
rclb
xlat
ficomps
xchg
mov
fs
mov
std
push
lret
lahf
mov
inc
and
fs
loopne
push
push
fmul
inc
push
push
and
paddw
mov
mov
and
inc
jg
add
loopne
mov
divl
in
xlat
jmp
pusha
add
xchg
das
adc
inc
add
inc
stc
lock
pusha
loopne
stos
and
lcall
and
mov
mov
push
repnz
mov
lret
lret
loopne,pn
xchg
pusha
add
popa
inc
jne
mov
imul
lods
andb
cmp
adc
mov
into
add
pop
jne
stos
pusha
loopne
lret
inc
mov
mov
pushf
addb
into
xchg
repnz
shl
push
adc
pop
mov
loopne
test
and
std
pop
div
inc
loope
sbb
out
pushf
out
dec
loopne
sarb
ljmp
loopne
rcrl
xor
mov
or
addb
inc
lods
loopne
movsb
add
push
out
adc
adc
sti
ljmp
icebp
xchg
xchg
rcr
scas
enter
dec
lret
and
out
aam
fcmovnb
je
out
pop
jne
cltd
repnz
lcall
bound
pop
mov
pusha
pusha
in
pop
dec
fistpl
in
and
mov
fdivr
mov
add
push
div
stos
mov
lock
sti
scas
repnz
and
and
lods
pusha
loopne
movsb
mov
jo
scas
loopne
in
xor
std
cmpsl
pop
f2xm1
mov
inc
and
repz
xchg
sbb
lds
rorb
cmp
adc
and
loopne
inc
mov
data16
and
rolb
add
push
mov
cmpsb
and
xchg
add
xor
js
and
sbb
clc
outsb
mov
inc
inc
ret
dec
pusha
push
and
mov
push
jnp
xor
lahf
mov
fwait
dec
xor
mov
in
add
cwtl
inc
xor
cmp
shl
xchg
cltd
cmpsb
add
fnstcw
pop
arpl
add
adc
pop
das
sbb
sbb
add
cmp
lds
sarl
cmp
mov
xchg
aam
mov
dec
addl
mov
and
dec
addb
mov
enter
hlt
dec
or
mov
hlt
push
push
mov
adc
adc
adc
ror
sahf
or
add
and
cmp
loopne
and
cmp
popa
movsl
mov
xorb
jno
jmp
or
rcr
loopne
pop
clc
mov
in
pop
or
das
addr16
pusha
jae
cltd
nop
cmpsl
sub
adc
jecxz
pusha
inc
sti
dec
push
leave
mov
js
xchg
scas
mov
nop
mov
mov
outsl
rorl
ljmp
lea
mov
int3
in
movsb
add
repnz
xor
shll
in
jl
inc
and
out
adc
or
or
add
or
xchg
pusha
xchg
add
lret
xor
inc
pusha
fcomi
inc
pop
test
inc
cmp
sbb
cmp
mov
and
scas
pusha
loopne
rcll
std
pop
xor
cmpsl
test
mov
inc
ja
jnp
jbe
xchg
inc
dec
add
pusha
jge
and
add
shlb
add
push
iret
in
outsl
mov
loopne
in
cmovo
fwait
inc
lds
pop
mov
jg
mov
out
cmp
fisubrl
ja
ja
inc
push
rcl
add
enter
cwtl
aaa
idivb
mov
call
mov
mov
loopne
pop
pushf
inc
jns
pusha
loopne
loopne
add
mov
notl
add
jle
jno
shll
xlat
and
dec
enter
cs
mov
add
daa
sub
and
cmp
or
mov
push
loopne
jmp
outsb
jg
sub
xorb
lcall
jbe
and
mov
loopne
cmp
pusha
imul
addb
cmpl
pop
mov
out
pop
lret
cmc
jo
or
sub
adcb
inc
imul
push
in
loopne
jns
adc
adcb
mov
dec
and
add
pop
das
imul
mov
insl
mov
xchg
cvtpi2ps
push
rcrl
add
das
fldenv
cmp
cmp
cmp
push
bound
dec
mov
shlb
inc
imul
jne
xor
pusha
sbb
outsb
mov
and
shll
frstor
cmc
pop
jb
pusha
popf
js
and
loopne
mov
mov
movsl
add
xor
inc
ds
xchg
or
loopne
hlt
cli
inc
in
and
and
std
repnz
ljmp
inc
lods
aad
mov
loopne
xchg
sub
and
lods
fsts
enter
xor
push
icebp
cmp
and
push
cmpsl
fistpl
pop
push
jns
shl
sahf
jbe
pop
sbb
outsb
shrd
in
mov
inc
out
ret
cld
call
mov
sbb
dec
sub
add
nop
arpl
lahf
enter
dec
mov
cmp
mov
pusha
xorb
pop
add
icebp
adc
and
mov
insb
push
add
jns
fsubrs
and
shr
mov
or
push
leave
test
hlt
icebp
mov
gs
pop
pop
clc
mov
test
and
cmpsb
pusha
sub
jne
orl
push
pop
jmp
xor
outsl
inc
dec
int
ljmp
rolb
jp
and
mov
sarl
ljmp
adc
lods
pop
jno
lret
insb
jp
inc
fsubl
push
inc
mov
add
jae
pop
add
pusha
stc
add
loopne
stc
push
rol
and
inc
add
clc
mov
inc
hlt
sbb
mov
and
pop
add
out
fidivl
push
shr
or
rolb
pop
cli
stos
adc
stc
jbe
lcall
push
dec
push
fstl
sbbb
sub
dec
sub
or
arpl
sahf
cmpsl
mov
and
jnp
cli
stos
negb
sti
xchg
out
dec
out
mov
in
dec
cmp
mov
add
loopne
mov
inc
loopne
addb
mov
and
mov
and
pop
mov
call
mov
pusha
addb
mov
dec
mov
pusha
inc
xchg
inc
sub
xor
lret
dec
or
mov
add
mov
xchg
sub
insb
arpl
cld
jg
fcomp
jecxz
cld
lcall
mov
dec
out
sti
sbb
pusha
mov
shlb
xchg
sub
or
xor
popf
mov
push
add
push
xlat
pop
and
mov
push
lcall
push
shl
push
shl
or
ret
lods
pop
shrl
pusha
inc
icebp
out
ret
loopne
inc
mov
pop
out
lods
inc
mov
xchg
push
push
shlb
inc
loop
fwait
xor
and
inc
pusha
inc
fcompl
rolb
push
stos
pusha
and
jae
leave
push
pop
mov
clc
inc
repnz
lods
adc
mov
mov
fimuls
and
pusha
in
lahf
mov
pusha
lods
shlb
cmpsb
shl
push
mov
sbb
andb
xchg
push
loopne
or
dec
in
pop
in
fisttpl
mov
xchg
and
and
dec
mov
inc
and
vmptrst
pusha
or
push
and
jecxz
loopne
aad
lret
rcl
ljmp
gs
inc
ret
add
push
sahf
leave
inc
jo
test
inc
and
pusha
sbb
jae
lock
pusha
add
xchg
xchg
mov
dec
movsb
inc
mov
and
sbb
mov
inc
andb
pusha
out
push
loope
flds
std
popa
andl
mov
movsl
or
fistl
aaa
cmp
cmp
sub
sbb
std
mov
pop
movsb
mov
into
push
inc
loopne
mov
mov
in
and
mov
mov
popa
sbb
les
add
aam
fidivl
sbb
loopne
lea
outsl
mov
mov
repnz
test
js
scas
sub
sarb
in
xorl
insl
repnz
cld
iret
push
and
add
push
jno
in
in
push
mov
sub
fcoml
pop
stos
mov
pusha
pop
cmp
pop
jge
mov
cltd
fwait
test
cmp
xchg
add
jne
adc
mov
imul
and
and
iret
fwait
pop
mov
andb
push
andb
sub
loope
faddl
sub
and
and
cmpsl
cmp
xchg
jae
ja
add
add
adc
jmp
pushf
rolb
inc
movl
cmp
pusha
loopne
imul
inc
jle
loop
inc
inc
and
andb
push
adc
jns
xor
mov
popa
xor
jns
jns
mov
mov
pop
xlat
push
sbb
jne
dec
inc
mov
pusha
shrb
mov
mov
lock
shlb
loopne
jle
push
pusha
andb
cmp
sbb
inc
add
sub
bsr
fisttpll
lahf
or
repz
repz
repnz
ret
lcall
fwait
pop
hlt
mov
shll
cmc
push
cmc
and
sarb
xchg
or
and
mov
dec
sub
inc
add
jno
repz
push
sar
in
shll
mov
and
rorl
mov
aad
inc
cwtl
aam
push
pop
jne
test
mov
dec
jns
es
dec
loop
push
in
sti
sub
sbb
lret
sub
cmpb
cmc
add
data16
mov
sub
add
mov
scas
inc
loopne
mov
push
or
mov
xor
push
rolb
xor
xchg
sar
inc
adc
sbb
mov
dec
xchg
xchg
xchg
aad
aas
fwait
loopne
ja
ljmp
das
jae
sub
inc
rorb
cmp
push
jo
das
cmpsl
adc
movsb
pusha
shlb
out
rorl
test
mov
lret
and
inc
popa
push
mov
xor
repnz
repnz
add
lcall
shr
pop
xchg
mov
pusha
add
xchg
lock
push
mov
xor
sbb
lods
loopne
js
sub
cmp
pusha
add
mov
ljmp
loopne
mov
inc
and
ret
popf
cmpsb
pusha
add
lret
pusha
inc
inc
fildll
cmpsl
test
mov
sbb
cli
outsb
call
push
add
das
push
loopne
enter
ret
push
inc
div
inc
cmp
inc
mov
loopne
aam
scas
pop
std
adc
add
adc
dec
out
addb
pushf
loope
repz
outsl
addr16
sub
and
shl
sti
inc
jmp
inc
addr16
lret
sub
sbb
lcall
cmp
cltd
idivb
nop
testb
loopne
mov
shl
pop
sbb
pushf
jecxz
into
mov
jne
test
andb
and
loopne
scas
fcoml
or
loopne
adc
cwtl
jle
jmp
and
mov
test
inc
lahf
pop
in
xchg
pusha
inc
lahf
mov
mov
mov
fldl
pop
outsl
test
and
in
add
xor
and
cmp
or
orb
pop
sub
fs
aaa
push
mov
shl
imul
shlb
mov
xor
cmp
pop
xchg
loopne
sti
insl
push
or
inc
fidivl
mov
and
jmp
mov
and
sti
inc
cld
mov
loopne
das
pop
movb
push
addb
xor
and
xchg
test
and
pusha
call
icebp
xchg
add
loopne
fnstcw
pusha
mov
add
cmp
mov
lcall
xchg
ss
dec
jecxz
popf
inc
fcomp
xchg
add
add
pushf
jns
aam
adc
xchg
call
scas
mov
mov
aaa
ja
addr16
arpl
lret
mov
ret
inc
fwait
xchg
loopne
cli
adc
mov
or
shlb
pusha
and
jbe
pusha
inc
cmpsl
xchg
cltd
xor
push
xchg
push
inc
pop
pushf
inc
mov
pusha
rcrb
sbb
mov
jb
xchg
mov
repnz
cmp
pusha
jle
pusha
and
cmp
sbb
and
pusha
cmp
arpl
scas
rolb
mov
popf
lcall
lahf
iret
enter
inc
ja
cmpsl
and
mov
and
mov
aas
in
test
mov
sbb
jl
jne
cld
pop
xchg
inc
mov
push
and
pop
xchg
repz
and
and
aad
push
popa
cmpsl
loopne
and
repnz
fisubrs
scas
and
jecxz
or
lret
mov
inc
add
les
and
cwtl
xor
fimull
rol
into
pop
cld
mov
insl
push
orl
sub
pusha
inc
dec
and
adc
andb
mov
into
sar
fwait
pop
aad
rorb
mov
ljmp
push
xchg
pop
pushf
fidivrs
mov
and
fcmove
test
xor
shl
cmp
add
inc
call
jbe
stos
loopne
pushf
xor
into
mov
loopne
pop
adc
clc
data16
add
pop
cmp
inc
mov
jecxz
adc
push
js
stc
inc
cwtl
loop
jns
test
add
in
mov
test
inc
into
andb
popf
jo
fwait
pop
imulb
fisttpl
je
out
push
je
out
mov
nop
roll
mov
mov
or
out
xchg
ljmp
loopne
popa
sub
add
loopne
lcall
iret
bound
pop
popa
jb
movsl
mov
clc
pop
sbb
pushf
sar
lret
push
push
mov
in
push
pop
xor
mov
pop
cltd
inc
hlt
out
mov
pusha
fdivrs
sti
lret
mov
add
pusha
mov
arpl
mov
sub
out
in
ja
nop
repnz
cmc
lods
inc
lea
js
xor
fldcw
mov
add
js
jb
out
and
or
loopne
sahf
and
cli
and
add
mov
dec
dec
ds
jbe
sbb
fsts
das
adc
mov
xchg
xchg
pop
push
cmp
pusha
out
xorl
shrb
fstps
fistpll
shlb
pop
scas
jl
rclb
js
enter
lds
bound
jg
mov
add
mov
idivl
sub
loopne
mov
pusha
and
popa
jnp
sub
inc
xchg
jle
insb
xor
jb
push
mov
lock
das
mov
sbb
mov
add
shrl
add
inc
inc
cli
clc
je
dec
popa
scas
pop
packuswb
in
es
and
and
int3
outsl
mov
mov
out
andl
ja
mov
daa
daa
and
push
and
mov
and
mov
mov
lcall
scas
mov
mov
ret
cld
aas
or
mov
or
loopne
jecxz
out
push
add
dec
xor
xchg
xchg
ret
mov
jp
lea
inc
mov
inc
sub
andl
shlb
add
and
insl
push
movsb
andb
outsb
adc
mov
xchg
cmp
sub
xchg
xchg
mov
mov
sub
rolb
lcall
sub
mov
add
inc
loopne
out
jno
cmpsb
shlb
mov
mov
mov
jno
mov
pop
mov
and
js
push
fwait
inc
sbb
into
imul
dec
cmp
loopne
aam
lods
negl
pop
push
xor
push
addb
pop
popa
pop
lea
pop
bound
andb
and
repnz
call
mov
add
mov
dec
jecxz
popa
aas
mov
xchg
sbb
and
pusha
loopne
mov
imul
cmp
out
in
sub
add
mov
and
ss
adc
and
pop
lock
fxch
and
mov
in
xchg
cmpsl
mov
jo
loop
cmc
pop
push
or
rcll
adc
subb
icebp
mov
loope
ja
into
push
stc
loop
add
rcl
inc
loopne
loopne
ss
mov
sahf
leave
in
addb
test
add
pusha
lcall
add
and
jb
mov
imul
inc
outsl
jno
adc
and
call
or
ror
sarb
mov
inc
add
gs
inc
sbbl
inc
pop
stos
jmp
rol
lock
sbb
fdivrs
dec
adc
int
adc
lea
and
cmpsl
cmp
inc
pusha
insb
jle
daa
call
xchg
and
jno
pusha
cmpb
popf
outsl
and
add
jle
sbb
orb
inc
ds
cmp
es
inc
dec
in
shlb
loopne
add
or
repnz
fidivrs
mov
adc
push
aas
add
or
or
inc
aam
sbb
pusha
mov
and
jle
pop
sub
cli
push
push
sbb
mov
xor
scas
les
push
mov
jp
cmp
adc
aas
mov
add
add
jmp
mov
cmovle
popa
xor
dec
popf
les
inc
add
je
xchg
adc
xor
pusha
loopne
add
test
cmpsb
shlb
adc
mov
andb
rol
stos
xor
jg
mov
and
fldl
push
inc
lea
arpl
adc
stos
jns
mov
mov
movhpd
pop
sbb
test
sbb
loopne
stos
xor
enter
adc
js
shl
ljmp
addb
scas
xchg
mov
rolb
xor
add
into
aad
addb
mov
lret
push
mov
xchg
push
dec
ficompl
outsb
and
pusha
inc
dec
xchg
stos
push
and
pusha
rorb
xchg
lcall
popw
mov
pusha
push
fmuls
mov
pusha
jb
pop
das
mov
arpl
or
rcrl
ljmp
inc
and
not
adc
jae
roll
mov
das
pop
cmp
pop
icebp
inc
addr16
rolb
andb
lea
push
xor
loopne
ljmp
xchg
movsb
pusha
rclb
pusha
dec
jge
lahf
and
shrb
ds
cmp
out
add
add
xor
mov
sbbb
pusha
sar
mov
and
sbb
pusha
add
rcrb
sbbb
dec
or
add
inc
add
andb
imul
in
cltd
sub
pusha
mov
push
pop
jmp
dec
jbe
int
xlat
mov
and
in
mov
data16
xor
call
stos
jne
sahf
mov
movsl
fwait
test
loopne
test
jle
cltd
das
mov
sbb
test
inc
iret
repnz
sub
addb
pusha
gs
push
addb
andb
addb
fwait
call
arpl
movsb
addb
shl
sahf
int3
cmp
and
shl
jbe
addb
push
cmp
addb
jb
mov
loopne
cmp
sub
inc
lods
test
cmpb
xchg
and
mov
sbb
pop
sub
push
cmp
sub
fsubrl
add
lahf
pop
and
xor
pop
push
xor
push
call
mov
rcrl
into
lock
pop
xor
out
addb
push
push
mov
addb
ja
insl
adc
loopne
test
jns
hlt
inc
sbb
shrb
inc
stos
shlb
loopne
dec
and
inc
cwtl
push
adcl
push
jecxz
jg
cltd
icebp
mov
andb
or
inc
add
add
mov
add
je
divl
imul
xor
mov
lock
repz
shrb
fidivs
loopne
mov
cmc
adc
loope
cmc
cwtl
and
and
aas
mov
sarl
sbb
mov
scas
mov
inc
cmp
jnp
xchg
mov
in
loopne
adc
jbe
add
inc
jne
into
testl
mov
jbe
out
cmp
pop
fldenv
fdivr
daa
test
shrb
add
and
and
push
fstl
dec
sahf
xchg
inc
sti
mov
inc
add
pusha
int
sbb
mov
jbe
test
shlb
in
add
fwait
andb
mov
inc
rcl
test
out
int
jne
movsl
push
loopne
xchg
outsb
mov
inc
out
repnz
push
mov
jbe
mov
push
jo
add
and
pusha
pop
or
loopne
adc
sub
pusha
or
xchg
mov
xlat
inc
jmp
sarb
add
sbb
jns
lds
pop
push
pushl
lret
pop
inc
mov
sub
sub
pop
jg
test
adc
in
push
add
popf
xchg
test
pusha
xorl
and
xor
pop
dec
insb
pop
lock
pop
push
add
pop
out
andb
loopne
fists
inc
pop
mov
sahf
dec
mov
ret
pop
lea
cltd
push
shl
cli
jnp
rcrb
fisttpl
mov
hlt
lods
add
add
gs
mov
sub
inc
das
nop
mov
fwait
xor
mov
les
pop
pop
iret
and
and
or
icebp
gs
lret
out
dec
jmp
leave
adc
pop
or
xchg
testb
mov
fsubs
gs
movsb
add
xor
inc
sbb
xor
ret
xor
cmp
mov
or
int
mov
iret
xor
in
adc
mov
fiaddl
sarb
andl
notb
adc
sub
das
fstpt
lods
add
push
push
js
and
pusha
xchg
pop
xlat
mov
push
loopne
ficomps
fsub
and
rorb
inc
mov
in
aam
ja
daa
sub
out
daa
mov
and
sbbb
and
and
fisubs
adc
add
sub
push
and
jge
dec
xchg
call
mov
jle
mov
jle
sbb
fstpt
and
inc
hlt
mov
sub
addb
mov
push
mov
shlb
mov
pop
flds
adc
aad
test
or
std
insb
or
jns
adc
nop
xor
sbb
mov
sub
mov
mov
loopne
aam
adc
imul
rclb
popf
cmp
push
in
fisubs
adc
sbb
xor
mov
xorb
sub
mov
adc
lock
xlat
push
jp
pop
outsl
test
adc
stc
aas
inc
and
loopne
mov
incl
repz
push
loopne
and
push
mov
rclb
xchg
add
pusha
mov
insl
add
and
aam
ja
insl
inc
push
jb
repnz
cs
rcll
loopne
ss
mov
xlat
vmwrite
icebp
leave
femms
loopne
loope
loopne
mov
lods
hlt
xchg
add
scas
insb
cmp
daa
add
sub
loopne
sub
and
aad
jne
and
jne
dec
fisttps
push
add
leave
call
dec
mov
inc
mov
pusha
daa
clc
shrl
inc
mov
and
or
pusha
jno
mov
andl
xchg
sbb
in
pop
das
in
inc
test
fwait
in
push
pusha
mov
lret
pop
push
loopne
pop
fstps
int3
lods
shlb
pop
mov
cmp
sbb
and
lcall
addr16
lock
cmp
fs
mov
add
or
or
ja
addr16
aad
mov
add
sbbl
cmp
inc
cmc
fdiv
std
inc
dec
lock
add
sahf
push
mov
xchg
lods
pop
mov
mov
jg
std
lds
push
sbb
mov
sub
cld
add
lcall
dec
jnp
daa
xchg
sbb
pusha
and
sbb
aam
pop
mov
movb
pusha
and
jae
clc
int3
add
dec
push
pop
fnstcw
xchg
dec
cltd
imulb
sbb
mov
mov
loopne
sbb
lahf
push
and
int3
sbb
into
dec
mov
mov
pop
jns
and
add
mov
push
pusha
out
jge
icebp
sti
mov
xchg
loop
in
lcall
dec
xor
cmp
pushf
sub
orb
jo
pusha
inc
ret
or
and
xchg
add
out
addb
cmc
sub
and
inc
add
in
mov
shrb
pop
mov
rol
add
pusha
add
inc
dec
push
add
loopne
shlb
cmp
inc
push
adcl
mov
enter
subl
sub
and
andb
and
insl
xor
cmp
jge
dec
pusha
adcl
notb
xchg
lret
arpl
sti
jnp
and
lret
inc
and
cwtl
jle
ss
jbe
popa
les
push
push
push
int
push
and
test
add
imul
and
inc
fdecstp
sahf
cmp
xor
leave
mov
xor
mov
shrb
cwtl
mov
push
xchg
jl
inc
and
jmp
pushf
mov
pop
in
dec
hlt
pop
xor
and
dec
jmp
cltd
sbb
loopne
mov
mov
cmpsb
shlb
add
lea
sti
sbb
popa
shlb
popa
insl
lods
addl
fldcw
lods
and
mov
push
cmpsb
addb
jp
cwtl
mov
jge
add
shrb
int3
popa
or
and
rolb
and
push
dec
jnp
int3
cmp
xchg
loopne
outsb
lods
jl,pt
pusha
rolb
sub
push
pusha
loopne
cltd
add
and
dec
aas
lea
bound
pusha
shlb
jecxz
push
xlat
cmp
clc
sbb
mov
add
and
jl
rcll
pushf
test
inc
outsl
scas
lret
mov
lods
loopne
jo
shl
or
pusha
outsb
cmpsl
jns
fsts
mov
mov
adc
pusha
rclb
sub
and
mov
addb
addb
insb
pop
inc
sbb
shrb
xchg
jnp
push
mov
mov
pusha
nop
scas
imul
pop
shrl
xchg
jo
sub
ja
in
mov
mov
shlb
sbb
mov
inc
shlb
push
xchg
daa
test
popf
fisubrs
jae
inc
jmp
loopne
cwtl
cmp
cmpxchg
mov
fiadds
orb
shrl
jbe
xchg
mov
add
or
add
sub
add
rcrb
inc
sbb
mov
add
mov
insl
push
cwtl
inc
mov
loope
mulb
and
gs
add
dec
dec
pop
imul
adc
inc
xchg
cwtl
popf
pop
loope
aad
addb
fistl
dec
enter
repz
rolb
mov
pushf
in
test
loopne
mov
cwtl
inc
aam
xchg
lcall
inc
mov
xorb
cmpsb
pusha
add
rol
mov
daa
subl
pop
enter
pop
pop
mov
loopne
mov
mov
or
pusha
inc
sbb
or
cmpsb
mov
and
sub
scas
add
addb
mov
fadd
xchg
loopne,pn
pop
sbb
js
xchg
repnz
pusha
leave
popa
movsl
enter
adc
repz
push
sbb
ljmp
mov
and
and
inc
jge
jbe
loopne
xor
fimuls
xchg
enter
mov
or
or
inc
ds
add
add
cmpsb
mov
xchg
test
sbb
shll
inc
and
int3
sub
ljmp
or
adcb
sarl
loop
cli
rclb
and
icebp
subl
test
and
jge
test
lahf
dec
dec
adc
imul
in
or
add
gs
pusha
pusha
cltd
cmpsl
test
pusha
and
fwait
jp
clc
jmp
mov
xor
xlat
mov
rolb
mov
mov
add
mov
pusha
xchg
movsl
nop
popa
gs
lret
mov
loopne
imul
out
cmp
or
faddp
ret
rorb
add
int3
mov
add
enter
and
jl
lods
andb
mov
add
mov
mov
test
push
dec
cltd
push
mov
lret
jl
push
sbb
lret
in
int3
cmp
xchg
shr
in
sbb
loopne
jb
in
cwtl
mov
rclb
mov
in
pop
mov
jle
inc
loop
inc
mov
int3
jp
inc
cmp
lds
cmp
push
dec
sub
mov
fldl
sbb
xchg
leave
mov
loopne
lods
inc
loopne
shl
push
mov
loopne
pop
push
fs
andb
cld
add
and
int
mov
pop
int3
jl
cwtl
pop
ss
push
adc
add
dec
jnp
sbb
shlb
push
lahf
mov
and
int3
jno
pop
cmp
add
stc
cmpsl
sti
jmp
jmp
xchg
and
or
lcall
repnz
std
pushf
or
add
add
loopne
xchg
out
mov
cmp
dec
mov
jp
in
push
movsb
and
aas
andps
inc
adc
inc
jbe
push
imul
pop
loopne
lcall
mov
hlt
lods
daa
lods
hlt
scas
andb
inc
cmc
cmp
repz
shl
mov
sub
or
jb
mov
sahf
xor
lahf
outsl
pop
sub
shlb
or
jne
adc
test
ror
int
xor
int3
rcrb
fwait
mov
imul
aaa
divw
push
repnz
sbb
fst
sbb
lea
pop
icebp
xchg
out
hlt
adc
and
dec
ljmp
or
mov
call
ljmp
push
cmp
dec
scas
inc
inc
sub
lock
and
lock
test
cmp
fmuls
outsb
cmp
sub
addb
loopne
sti
fcmovb
push
sbb
and
add
andb
andb
sti
shr
jmp
loopne
pop
xlat
and
loopne
cmp
cli
xor
add
pop
mov
loop
and
jg
sbb
sub
cwtl
mov
cmp
inc
dec
cmp
and
sbb
dec
dec
push
ret
lock
xor
into
add
loopne
xchg
into
ret
adc
push
stos
shlb
negb
cmp
loopne
movsl
cmpsb
addb
outsl
push
xor
call
mov
add
sbb
idivl
imul
xlat
mov
lods
loopne
fimull
loopne
in
fldt
fisubrs
pop
xchg
incl
and
inc
jbe
dec
sti
movsb
pusha
mov
xchg
xchg
loop
popf
xchg
cmpsl
mov
mov
mov
das
bound
loopne
jl
jae
test
sub
push
rcr
push
pop
inc
lcall
mov
mov
xchg
push
xor
push
mov
divb
sub
xor
testl
pusha
sbb
lret
dec
sub
mov
rorb
rcrb
les
dec
xor
xchg
cwtl
xchg
out
inc
psubw
cmpsl
fdivl
notl
shll
cmp
add
sbb
xor
add
dec
add
mov
cmpsl
ljmp
out
aaa
outsl
push
icebp
test
sub
adc
xchg
icebp
cmpsb
inc
adcb
xchg
xchg
push
mov
inc
cli
add
mov
jmp
ljmp
insb
cltd
push
inc
add
inc
pop
les
mov
xchg
hlt
fdivp
in
add
insb
pop
add
sti
and
sbbb
pop
inc
inc
out
jg
xchg
add
pusha
pop
mov
and
in
pop
xchg
outsb
loop
js
enter
loopne
sub
inc
addb
loopne
adc
add
pop
iret
jns
push
adc
popf
lret
rorb
xchg
and
sbb
popa
and
add
mov
mov
jns
iret
sbb
cli
mov
push
test
shlb
shl
or
push
mov
repz
rclb
cmp
jp
popf
pop
out
decl
sub
inc
cmp
add
fimull
loopne
add
add
add
shlb
loope
pop
cmp
mov
scas
and
xchg
idivb
dec
xchg
add
rcrb
lods
mov
add
cmc
fdivrs
mov
gs
pusha
add
push
mov
lock
or
addb
add
andb
popa
leave
mov
in
fwait
call
inc
loope
pop
adc
hlt
xor
push
mov
mov
mov
out
jno
add
in
js
push
ret
daa
adc
push
shlb
lahf
push
cs
sbbb
in
push
mov
and
cwtl
movsb
and
dec
scas
jns
or
push
fs
mov
pusha
sub
mov
xor
inc
inc
sbb
jns
out
inc
aam
scas
dec
dec
xchg
insb
cmp
push
mov
fstps
mov
ja
push
mov
sbb
adc
pusha
shlb
and
cmc
pop
adc
loopne
test
sub
shlb
lods
and
mov
inc
stc
jbe
xor
std
popf
gs
out
dec
jns
dec
xlat
xchg
pop
or
dec
sub
dec
outsb
imul
aas
cli
mov
decl
mov
inc
rol
and
mov
js
adc
cmpsb
and
je
sbb
int
rolb
add
add
shl
add
add
rolb
adcl
cld
mov
out
in
jae
jnp
push
pusha
pusha
mov
mov
jl
pusha
mov
and
insb
divb
jl
cmc
push
inc
and
add
xchg
push
repnz
into
and
fisubrs
shlb
andb
fsub
int
sub
int
xchg
fnstcw
mov
pop
divl
inc
mov
sbb
in
fwait
xor
inc
test
inc
dec
sub
push
andb
jmp
dec
sub
mov
cli
pop
or
and
negb
cs
add
shl
adc
call
xchg
repnz
mov
shl
inc
and
loopne
and
inc
xchg
or
pusha
test
mov
inc
rolb
loopne
ret
mov
loopne
xchg
sahf
imul
or
add
add
out
test
outsl
mov
lds
arpl
adc
and
pusha
cltd
cmp
cwtl
mov
andl
dec
pop
sar
cld
cmp
inc
loopne
push
pop
int
shll
and
cmp
and
and
rolb
push
mov
loop
mov
dec
pusha
mov
cmpb
fsubr
add
dec
xorl
sahf
ss
pop
repz
mov
loopne
aaa
mov
dec
cltd
mov
fnstsw
mov
add
cmpb
rorl
mov
add
add
out
mov
jmp
sub
mov
push
push
push
mov
inc
nop
cmc
mov
ljmp
in
sbb
push
iret
and
adcl
movsb
shl
andb
sub
sub
loopne
sub
subb
orb
shlb
sar
cmpsb
inc
sarb
scas
ja
lret
lds
push
scas
add
mov
xor
loopne
jmp
push
out
dec
in
stos
push
popa
push
adc
sub
test
dec
mov
add
mov
pop
aaa
jmp
pop
aaa
push
arpl
cmp
shlb
addb
scas
and
pop
cmp
add
mov
inc
or
inc
imul
inc
push
push
incl
mov
add
sbb
cmc
gs
sarl
pop
fcmovbe
popa
or
pusha
xchg
xchg
dec
sbb
addb
jp
inc
das
mov
pusha
loopne
xlat
cmp
mov
and
dec
push
scas
or
mov
pop
repnz
add
push
xor
lret
hlt
shlb
fdivrs
mov
mov
jecxz
loopne
mov
cmc
inc
mov
hlt
imul
pop
dec
scas
pusha
add
sbb
sbb
test
adc
test
inc
mov
repnz
mov
xor
decl
xor
repz
mov
sub
mov
andb
in
jecxz
xchg
cmp
add
pusha
vmwrite
dec
pop
push
sub
shrb
sub
add
rolb
pop
inc
lods
xchg
cmp
nop
jle
test
mov
pusha
and
pusha
loopne
movsl
jae
inc
mov
push
sti
push
add
pusha
ret
mov
sar
aad
sub
cmpsb
shlb
loopne
fs
outsb
fstps
outsb
xchg
ret
arpl
jle
lret
push
test
mov
sbbb
jb
cmpsb
mov
call
call
lods
mov
adc
jb
or
add
and
jl
lods
mov
ffree
shrl
cmp
punpckhdq
enter
inc
dec
fisttps
xorl
imul
cmpsb
shlb
mov
hlt
mov
test
mov
fildl
int3
or
jne
hlt
push
loopne
xchg
or
loopne
sbb
aam
repz
ret
bound
pop
mov
pusha
shlb
pusha
sar
stos
popa
sbb
and
sub
mov
scas
sub
aas
hlt
push
and
push
add
int3
imul
add
sub
fwait
mov
addr16
sub
add
cs
pusha
cmp
icebp
lahf
mov
dec
loope
addb
mov
and
mov
cmpsb
and
inc
mov
push
push
adc
pusha
and
shlb
dec
lods
addb
xchg
aaa
fs
mov
fisubs
jge
mov
nop
or
loopne,pn
je
stos
andb
loopne
mov
ret
lds
sbb
setle
mov
inc
add
jno
jnp
jmp
mov
push
insb
cmp
push
pusha
and
pop
or
insb
icebp
das
sub
sahf
testb
dec
repnz
and
out
cmp
shlb
loopne
xchg
leave
and
mov
cmpsb
andb
insb
push
xor
pop
cmp
ficompl
and
and
js
out
loopne
pusha
gs
pop
outsb
gs
movsb
andb
or
cwtl
mov
xor
and
add
inc
rorb
ljmp
rorl
inc
loopne
push
nop
push
mov
loopne
scas
gs
repnz
stos
add
loopne
inc
mov
cs
mov
add
cmp
out
repz
and
addb
lahf
xchg
add
dec
push
movsb
rolb
pop
cmpsb
andb
dec
loop
xor
pusha
rorb
lock
inc
add
mov
cmp
push
loopne
test
inc
dec
pop
push
pop
cli
test
orb
mov
mov
add
xor
xor
pop
and
mov
out
push
pusha
test
mov
std
or
inc
push
addb
mov
loop
mov
mov
and
rcl
push
adc
push
loope
gs
shll
je
mov
test
fwait
push
jecxz
mov
mov
and
mov
mov
add
ret
mov
pop
in
loop
rcrl
jbe
fnstsw
inc
pop
js
mov
mov
cmpsl
mov
imull
rolb
mov
push
loopne
aas
or
lods
loopne
mov
lahf
pop
fwait
repnz
mov
test
mov
rclb
pop
mov
sub
stc
inc
mov
cmp
gs
pop
xchg
stos
sbb
dec
inc
ds
mov
inc
and
les
and
mov
test
add
mov
or
lea
push
lcall
add
mov
imul
dec
lods
pusha
inc
out
or
ljmp
sti
xchg
mov
jnp
sub
and
pop
cmp
mov
push
xor
testl
mov
lahf
dec
xor
pusha
xorb
mov
xor
cmp
loopne
loopne
pop
mov
lret
jne
inc
loope
dec
sub
xorl
addb
inc
xchg
or
add
jle
jg
add
lcall
shrb
ss
and
hlt
lea
push
add
push
loope
jge
orl
push
insb
lret
cwtl
sub
pusha
insl
ljmp
cmp
jecxz
cmpsb
inc
inc
cmpsl
mov
fucom
or
rorb
cwtl
inc
das
ds
dec
jne
fldt
adc
cmp
cmc
xor
insb
int
fiadds
xchg
bound
andb
cmp
notb
jns
mov
and
dec
pop
pop
je
pop
into
daa
mov
jg
daa
in
sbb
movl
pusha
mov
leave
mov
pushl
pop
or
push
je
jae
int3
loopne
cmp
add
mov
shlb
pusha
cli
or
push
pop
pop
hlt
arpl
aaa
and
shl
mov
pusha
mov
and
mov
sbb
sbb
andb
ljmp
data16
pop
call
popf
out
xor
nop
ja
pusha
shlb
mov
mov
imul
add
mov
dec
cmp
test
loopne
mov
aam
mov
add
pop
mov
fcoms
sbb
rcl
popa
jb
mov
jg
and
popf
js
ljmp
andl
jbe
mov
add
inc
shrl
mov
adc
sub
add
mov
aad
sbb
add
shlb
cmp
insl
pusha
push
sahf
mov
rolb
or
push
pop
cmp
mov
pusha
rorb
pusha
cltd
std
mov
mov
into
test
cwtl
in
addb
xor
repz
inc
flds
pushw
and
mov
lods
xor
adc
and
xchg
pushf
outsl
and
jb
enter
rol
out
incb
add
mov
add
sahf
sub
jle
movsl
push
loopne
in
std
fldt
push
mov
inc
mov
repnz
ds
sub
in
jl
push
nop
bound
gs
xchg
xchg
pop
ljmp
or
out
add
imulb
loopne
cmp
addb
popf
cmp
sahf
imulb
add
inc
pop
in
push
sbb
rolb
jmp
leave
jle
jne
add
enter
lret
xor
jne
mov
shlb
inc
adc
and
sarb
into
push
ret
orb
shlb
cmp
cmp
fstps
xchg
ja
push
leave
lds
daa
adc
pusha
pusha
movsl
and
jp
mov
sub
insb
and
loopne
push
in
jne
cmp
xchg
negl
fiadds
in
les
popf
jns
cmp
xor
add
add
mov
fwait
in
arpl
icebp
adc
outsb
insl
cmp
inc
loopne
fst
les
inc
inc
push
shlb
cmp
pop
int
inc
pusha
mov
popa
xchg
sub
out
jle
cmp
lahf
push
dec
and
insl
aaa
shl
xchg
xchg
xor
cmc
push
cmp
sub
mov
xchg
les
out
or
sbbb
inc
and
shrl
add
frstor
aad
pop
out
cmpl
pusha
or
jle
out
pop
or
loopne
jae
andb
scas
shl
and
mov
mov
shlb
push
push
data16
add
jne
test
addb
and
mov
pusha
scas
push
gs
xor
add
addb
or
inc
icebp
mov
and
dec
das
inc
push
out
add
push
aad
lcall
test
and
sub
and
popa
adc
jae
sbb
adc
sbb
ljmp
loopne
pop
xlat
jbe
cmpsb
add
mov
push
popf
lret
mov
sbb
mov
pusha
fcomi
mov
dec
add
ja
addb
fcoml
jp
and
mov
test
subb
mov
push
mov
and
jns
jle
int3
lods
jnp
push
or
adcb
dec
test
das
mov
jecxz
lret
addb
pusha
aas
out
arpl
mov
cs
pxor
ret
adc
in
mov
or
subl
pop
push
fdivrl
jbe
in
sub
loopne
push
clc
loop
add
xchg
lods
add
icebp
mov
dec
leave
pop
div
sub
rclb
dec
lods
add
xor
ret
and
repnz
xchg
into
jb
push
push
lock
fstpt
daa
iret
add
inc
fnstenv
lahf
test
pusha
or
cmpsl
in
xchg
mov
fs
mov
lcall
pop
pop
push
xchg
cmc
inc
mov
mov
sarb
faddl
rorb
bound
ficompl
imul
xlat
insb
xor
ljmp
or
sub
cmp
subb
inc
add
bound
xor
jecxz
ret
call
icebp
sub
pusha
inc
pop
addr16
adc
jecxz
popa
ljmp
test
filds
pusha
loopne
andb
cmp
loopne
jnp
shrb
pusha
and
push
mov
xchg
fcomi
lock
in
aad
ss
pop
xor
or
andb
or
sbbb
mov
leave
rorl
shlb
ss
js
mov
sbb
mov
sti
into
sbb
inc
dec
mov
xchg
add
and
fwait
data16
test
xor
or
add
pusha
loopne
add
push
and
add
jae
or
mov
addb
xchg
fdivs
sbb
inc
pop
mov
push
out
push
sahf
loope
stc
fldt
mov
jl
sub
pusha
out
ljmp
add
lcallw
aad
in
ljmp
mov
leave
test
add
mov
mov
mov
inc
mov
mov
scas
lahf
scas
sub
mov
movsb
inc
inc
repz
jecxz
inc
inc
lcall
les
aam
xor
mov
pushl
inc
mov
lock
mov
xor
popa
fdivrs
mull
shlb
add
and
lcall
rolb
mov
add
and
pop
jge
push
push
gs
pop
aam
outsl
dec
hlt
mov
movb
lock
leave
cmp
sub
das
xor
pusha
push
jmp
mov
lcall
loope
in
outsb
cmp
or
add
cmp
jge
sbb
pusha
loopne
cld
ret
cmp
mov
jmp
and
mov
loopne
xor
mov
aam
into
aam
xchg
jae
rolb
xor
outsb
sbb
add
sbb
outsb
dec
pop
pusha
sbb
xchg
push
repz
test
push
mov
and
mov
sbb
push
in
in
mov
xor
sahf
stos
scas
fbld
mov
jae
fcomi
lret
jne
lods
mov
jbe
cmp
mov
jbe
fsubrs
pusha
pusha
cmp
add
ficompl
outsb
xchg
repnz
sahf
ja
push
movsb
and
sub
and
or
popl
rorb
pusha
lods
pusha
and
mov
cwtl
inc
lcall
sahf
stos
repz
sbb
loopne
mov
inc
pop
cpuid
add
push
add
mov
pusha
stc
mov
shlb
xor
jb
or
xchg
mov
inc
push
and
cltd
add
imul
xchg
mov
xchg
test
xlat
push
repz
cmpsl
pop
mov
inc
jnp
loopne
xor
addb
cld
push
pop
out
ljmp
mov
and
inc
push
test
loopne
test
add
pop
adc
stos
iret
lret
mov
add
bound
call
cmp
inc
fmul
lds
sub
sbbb
in
add
loop
mov
test
fisubrl
cmc
jae
pop
sub
rcr
adc
ffree
popa
or
mov
loop
mov
and
sbb
pusha
inc
fs
cmp
popa
mov
mov
int3
push
mov
mov
mov
jle
clc
outsl
out
cli
popf
jge
insb
test
add
mov
fs
jno
in
adc
test
add
movsl
mov
neg
insb
inc
pop
jb
cmp
dec
jg
andb
mov
push
mov
adcb
sbb
cs
mov
mov
addb
mov
sub
mov
and
out
roll
push
and
adc
pop
stc
aas
test
inc
repz
and
jbe
jns
shlb
aas
sub
mov
icebp
jp
stos
lods
ficoml
pop
adc
in
ficoml
mov
mov
movsb
loopne
bound
loopne
dec
jge
inc
inc
inc
xor
or
shrb
and
fistl
ret
fstpl
inc
xor
loope
jo
add
pusha
mov
inc
movsb
and
fiadds
loopne
dec
inc
cmp
les
fucomp
pop
cmpl
mov
sti
mov
mov
add
in
insl
xor
rcll
mov
stos
loopne
icebp
test
and
jg
jmp
movsb
and
cmc
or
jle
sbb
dec
pusha
enter
inc
and
aas
ret
mov
mov
xor
std
lods
mov
jg
loopne
scas
loopne
or
scas
mov
mov
add
xchg
test
push
xchg
fisubs
rcrl
push
cmp
lret
sarb
mov
clc
inc
js
push
sub
adc
cmpsl
fsub
sbb
mov
mov
jle
pop
inc
mov
push
pop
inc
addb
jnp
outsl
sbb
and
inc
ds
in
xor
aaa
int3
dec
stos
loopne
mov
xchg
add
push
mov
pusha
inc
add
adc
in
je
mov
fdiv
sub
cld
or
gs
xor
fmuls
lret
lds
mov
mov
mov
clc
lret
push
and
add
add
sub
pusha
sbb
ja
scas
and
sahf
cs
loopne
pop
cmp
pop
paddd
mov
mov
mov
cltd
rolb
mov
into
rorl
addr16
add
mov
leave
jnp
xchg
outsl
jl
xchg
sub
sub
sti
sbb
sub
mov
jge
sub
je
andb
mov
push
movsb
rolb
sahf
inc
mov
xchg
int
mov
out
ja
pusha
mov
ds
jmp
inc
and
mov
sub
sub
add
rolb
inc
test
jecxz
cld
add
jecxz
jne
clc
add
imul
leave
sub
pusha
andb
das
add
in
dec
inc
and
loopne
and
inc
les
rcll
imul
pop
push
out
loopne
and
loopne
dec
jp
dec
outsb
lret
movsl
push
data16
dec
inc
movsl
mov
add
sti
mov
add
and
shlb
out
dec
ror
xlat
jnp
mov
push
push
dec
cmp
mov
loopne
movsl
outsl
mov
addb
inc
and
sbb
fs
jl
fwait
cmp
push
or
mov
andb
xor
addr16
pusha
add
xchg
subl
sub
fdivrl
cmc
mov
and
addb
push
xor
xchg
out
repnz
insl
pushf
stos
and
xchg
jb
mov
inc
loopne
and
popf
in
pop
inc
fnsave
mov
inc
xchg
pop
lahf
jg
pop
mov
push
inc
xor
dec
cmp
imul
fs
and
and
ja
std
jmp
sbbl
mov
pusha
add
jl
inc
sbb
addb
sub
push
stc
cmp
shrl
sti
mov
test
jae
mov
add
ds
out
sub
rcrb
leave
adc
ret
ja
jbe
loope
jg
jecxz
sub
and
push
inc
outsl
loopne,pn
stos
outsb
lods
push
hlt
jb
add
shrb
clc
ss
xchg
xchg
iret
sbb
idivl
dec
call
mov
loopne
pop
ficoms
out
adc
pop
jg
fbld
cwtl
int3
ret
xchg
mov
imul
pop
aam
fwait
sub
pusha
sub
add
add
rorb
pusha
and
pusha
cltd
lcall
mov
add
nop
mov
mov
pusha
adcb
xor
xchg
fwait
jle
add
pop
popa
cld
add
pusha
sbb
enter
pusha
shlb
and
mov
andb
loopne
cmpsb
add
adc
cmp
pusha
and
xchg
lods
push
add
pop
jmp
iret
cld
pop
adc
mov
test
add
sahf
sbb
jmp
mov
fimull
in
rcrl
inc
add
movsl
sub
sbbb
add
or
and
adc
jecxz
loopne
ja
scas
or
lret
xchg
push
mov
xchg
in
repz
das
and
dec
pop
dec
test
pusha
inc
jns
aas
lods
add
and
jno
out
fisttps
mov
jo
or
xor
pop
sub
xor
adc
mov
cmpsb
pusha
and
jl
push
mov
aas
fwait
jnp
pusha
add
dec
pop
call
pushf
bound
and
loopne
sub
orb
xorb
add
mov
add
dec
test
jmp
jecxz
lahf
mov
ss
les
dec
sarl
aad
pop
push
mov
mov
loopne
divb
insb
inc
int
sbb
mov
inc
aad
incb
add
ja
xchg
les
mov
and
jge
std
notb
out
adc
test
pusha
dec
outsl
inc
movsl
push
pop
inc
add
andl
pop
daa
push
ljmp
lods
dec
jl
negl
rol
mov
add
sub
es
out
test
aam
ja
and
push
xor
or
push
lods
hlt
mov
or
rorb
mov
pusha
sahf
jbe
mov
jle
sub
shlb
mov
dec
fnstenv
jl
or
adc
add
mov
push
jo
and
xchg
loop
sbb
pop
loop
leave
inc
adc
pavgw
push
push
adc
andb
in
cmp
outsb
inc
mov
mov
add
add
loopne
jmp
cmp
shll
pop
mov
sarb
adc
ja
and
inc
adc
mov
jl
jle
andb
inc
inc
testb
pusha
and
subb
in
cmpsb
add
mov
and
out
mov
iret
xlat
xchg
mov
cmc
bound
mov
stos
sbb
xor
and
cmp
mov
das
rcrl
adc
dec
cmpsb
and
fsubr
inc
jne
mov
adcb
xchg
loopne,pn
lock
popf
pop
cmp
mov
inc
sub
and
aam
mov
lret
cld
pop
push
sbb
insl
add
add
xchg
add
or
repnz
into
push
mov
sarb
mov
mov
ret
add
mov
and
mov
loope
addb
pusha
and
sbb
pusha
add
test
inc
dec
in
cmc
in
xor
inc
shlb
cmp
loopne
movsl
out
cmp
mov
inc
pusha
stos
loopne
mov
jbe
push
push
add
ret
push
and
orb
movb
jb
arpl
add
add
adcb
loopne
pop
shl
add
pusha
xor
das
filds
loopne
mov
negl
mov
movl
jle
pop
mov
xlat
mov
leave
sbb
or
orb
inc
enter
sub
add
loopne
mov
shl
xor
aad
inc
and
sarb
shlb
xorb
mov
gs
mov
and
fsts
outsb
mov
mov
xor
mov
loopne
rorl
out
clc
pop
popl
test
shlb
xor
dec
jmp
lea
pusha
pusha
sub
jle
jmp
addb
xchg
push
mov
insb
clc
outsl
xchg
xor
xchg
push
enter
lods
sub
mov
das
inc
dec
inc
mov
ljmp
and
sub
pop
mov
rcr
dec
test
jecxz
loopne
push
mov
repnz
jecxz
loopne
andb
xchg
cmc
sbb
pusha
loopne
cmc
inc
dec
pusha
pusha
sub
xor
inc
mov
addb
inc
xchg
and
pusha
fidivrl
fistl
popa
int3
add
mov
leave
mov
mov
sahf
mov
pusha
pop
dec
jae
jns
test
and
mov
sub
xchg
adc
inc
xchg
or
loopne
or
xchg
and
and
in
push
mov
xchg
fsubl
pusha
cmp
push
test
loopne
inc
mov
pusha
in
jg
mov
fists
hlt
push
shlb
dec
sbb
loope
lds
mov
jnp
stos
in
sahf
pop
mov
shrb
into
rcr
pusha
jae
pop
inc
ret
cs
and
loopne
jecxz
addb
fs
rcrb
and
adc
bound
inc
cmp
loopne
clc
aad
pop
inc
mov
test
pop
dec
mov
mov
sahf
push
stos
xor
xorb
cmp
mov
push
inc
pusha
adc
add
sub
fstps
add
fbstp
add
mov
add
pusha
insl
mov
and
or
and
in
sub
mov
inc
imul
and
cwtl
inc
shlb
insl
lret
hlt
and
mov
pushf
rcrl
loopne
sbb
adc
xchg
nop
and
mov
rcrb
adc
push
das
cmc
adc
pop
pop
adc
push
jge
inc
add
xchg
pop
ds
sub
and
jno
xchg
lock
scas
loopne
hlt
sub
dec
cmc
in
mov
cmp
shlb
push
pop
shll
addr16
fmuls
sbb
pusha
add
cmp
adc
xor
fs
loopne
daa
add
test
pusha
filds
inc
mov
addb
fsts
xchg
ja
loopne
fwait
mov
insb
jg
add
cmp
mov
mov
fs
popa
inc
mov
add
cmpsb
shlb
shl
inc
mov
add
inc
xor
pop
pop
out
dec
pop
sti
sbb
loopne
or
sahf
pop
outsb
repnz
and
add
add
sub
dec
adc
jle
pop
fstpl
mov
dec
fistpl
js
test
shl
mov
inc
and
fwait
out
scas
sub
call
add
fdivl
jb
mov
into
inc
pop
scas
and
sbb
inc
les
jae
pop
jle
scas
icebp
mov
ret
cmp
sub
add
inc
aam
mov
inc
and
xor
pusha
add
fwait
out
cmc
test
xlat
jne
add
mov
jle
dec
leave
cmc
mov
mov
or
or
pusha
fdivl
sbb
add
cmp
and
cltd
jl
loope
and
inc
das
into
int3
icebp
sti
pusha
ja
mov
pushl
loopne
dec
loope
mov
add
inc
testb
mov
and
fimuls
nop
stos
shl
and
jg
aaa
int
cmp
stc
pop
andb
popf
pop
xchg
push
sub
add
and
pop
xor
in
cld
push
push
fldcw
cmp
cmc
loop
insl
loopne
lods
pusha
loopne
add
loopne
fwait
or
add
js
ljmp
aaa
cltd
jl
xchg
aaa
incb
shl
nop
inc
lret
or
loopne
js
pop
sub
jp
test
and
int
add
sub
mov
js
sub
loopne
mov
dec
inc
mov
inc
inc
scas
lret
xchg
scas
add
xchg
gs
pop
insl
mov
push
push
and
dec
nop
mov
insb
lea
inc
inc
jo
pop
scas
pusha
inc
lods
mov
outsl
shrb
subb
cs
and
xchg
and
ror
icebp
cld
or
mov
inc
sbb
cld
cmp
fildll
cmpsl
shll
add
push
loopne
and
loopne
and
pop
cwtl
bound
aam
add
jl
fcmovb
int3
ffree
cmp
movsb
add
ja
and
fs
mov
add
and
and
add
test
orb
fwait
cmpsb
inc
mov
and
mov
aad
inc
and
and
push
sarb
aaa
sbb
stos
loopne
xchg
mov
loopne
es
inc
hlt
lods
mov
loopne
outsb
pop
jge
push
ret
adc
mov
sbb
jmp
sbb
lret
mov
icebp
mov
popa
pop
leave
pop
rorl
lock
fwait
imul
stos
inc
popf
dec
fisubrl
rolb
test
or
ret
push
jae
shlb
jo
mov
push
lret
movsb
loopne
push
add
and
les
in
in
cmpsb
pusha
and
sarb
mov
fs
addr16
xchg
and
sti
mov
stc
adc
adc
test
idivb
add
mov
and
es
pop
push
add
adc
cwtl
outsb
enter
add
das
sti
testb
rol
add
jmp
pop
mov
add
push
pop
lcall
rolb
mov
xor
andb
cli
imull
lcall
mov
add
inc
inc
jnp
pop
icebp
mov
inc
rol
adc
pop
sbb
in
push
jge
mov
repnz
adc
std
pop
stc
bound
cli
mov
mov
sbb
mov
loopne
mov
rcl
jo
and
sub
addb
pusha
add
dec
xor
fstpt
and
dec
dec
jbe
nop
lret
add
push
pop
lds
roll
scas
adc
jecxz
aas
repz
outsl
stc
add
sub
pusha
pop
mov
mov
fwait
dec
je
cmp
jne
cwtl
scas
pusha
pusha
adc
sub
idiv
inc
imull
sbb
cwtl
add
movb
adc
push
insl
xor
mov
jmp
jl
hlt
mov
iret
mov
mov
mov
shlb
pop
jl
inc
push
mov
je
pop
adc
test
ficoml
jg
cmp
cmpsb
and
push
xor
add
andb
aaa
in
push
andb
add
sar
push
mov
in
push
push
inc
loopne
xchg
mov
cwtl
js
push
mov
int
pop
adc
or
pusha
out
and
dec
lcall
loope
iret
std
mov
pop
fdivs
xchg
aam
sub
pusha
icebp
dec
cltd
dec
scas
shlb
sti
sahf
int
loopne
lret
push
push
sti
sahf
rclb
mov
in
leave
dec
testl
jp
and
stos
andb
and
or
and
aaa
les
adc
inc
loopne
pusha
inc
xlat
sub
add
aaa
js
leave
adc
inc
pusha
inc
cmp
cli
lds
and
or
push
fcompl
lods
pop
push
rclb
cmp
jne
mov
mov
add
das
xchg
push
pusha
mov
andb
add
push
mov
cmp
mov
mov
and
xchg
outsb
pop
ja
cmpsl
xor
mov
rol
pop
jle
and
inc
pushf
mov
inc
sub
lods
addb
shl
push
pop
add
add
mov
mov
test
add
pusha
mov
cmp
jo
xor
cltd
out
sti
add
and
xchg
fildll
push
int
mov
adc
inc
dec
test
cmp
mov
sti
cmp
or
add
push
xor
enter
imul
movl
mov
cmp
mov
je
and
mov
mov
lcall
mov
mov
pop
popf
out
stc
loope
imul
inc
cwtl
mov
pusha
pusha
bound
sti
pop
xor
mov
mov
fs
mov
rolb
add
imul
mov
lds
fldl
gs
adcb
mov
xchg
mov
outsb
or
inc
xchg
ret
addl
in
pop
xor
sbb
mov
insb
adc
lahf
bt
gs
jge
test
lock
and
in
mov
call
in
imull
enter
jmp
testl
mov
lock
mov
inc
push
and
sub
pusha
add
cmp
jle
out
adc
xor
fucom
pop
idivb
adc
fucom
out
push
mov
dec
inc
cmpsb
pusha
shlb
dec
xchg
or
jle
mov
loope
jmp
outsl
sub
inc
andb
push
clc
jo
pushf
insb
ret
add
pop
aas
adc
pusha
movsl
cmp
pusha
shrb
mov
xchg
cli
xor
aas
push
mov
pusha
jmp
loope
jmp
dec
fsubl
das
andb
add
push
stos
inc
add
mov
loopne
aas
jecxz
test
movl
int
add
pusha
xchg
and
orb
pusha
in
pop
popa
ljmp
add
out
cmp
nop
adc
xor
loopne
push
push
std
xchg
jns
xlat
jae
and
mov
add
icebp
movsb
rolb
push
cmp
mov
ja
pop
popa
pop
pop
mov
loopne
icebp
dec
pop
jge
add
sarl
insl
xor
ret
lods
mov
lock
loopne
and
sub
and
call
inc
loopne
cmp
mov
adc
fildl
shlb
jnp
add
mov
loopne
into
movsl
mov
and
jno
mov
loopne
aas
jmp
icebp
out
lret
ret
jae
inc
and
scas
rol
add
cmp
push
scas
pusha
pusha
int
mov
or
rcll
xor
fxch
shlb
shlb
lret
push
lret
insb
das
sti
dec
sbb
data16
inc
and
sub
fistl
and
sarb
test
cmpb
and
stos
and
imul
add
mov
jnp
and
pop
mov
pusha
add
or
xchg
fadds
add
shrb
cmp
adc
mov
and
dec
addb
rcrb
inc
je
repz
cmpsl
lods
push
movsl
sbb
mov
imulb
jbe
ljmp
andb
mov
add
push
fmulp
and
pusha
hlt
or
inc
or
mov
repnz
sbb
add
stos
inc
loopne
aaa
inc
fimuls
test
pop
push
mov
add
pushl
int3
cmp
cltd
cmp
leave
push
jno
ficompl
sti
addb
mov
outsb
xchg
pusha
mov
pusha
shrb
inc
sahf
and
dec
shl
xorl
fsubrl
or
inc
adc
aad
call
call
sti
or
andb
mov
cwtl
or
pusha
mov
push
pop
insb
movsb
pusha
pusha
lcall
jo
pop
mov
into
and
mov
inc
sti
inc
lds
pop
cmpsl
pop
test
jno
or
jg
data16
inc
pop
pop
cmp
lahf
jle
andb
andb
inc
inc
ja
inc
mov
sub
loopne
lret
add
in
or
and
sbb
add
in
sbb
cmp
testb
add
fimuls
icebp
push
pop
cmpsl
divl
cmpsw
dec
rorb
push
pop
mov
push
sub
test
loopne,pn
and
pop
out
jge
inc
lcall
xor
jl
pop
sahf
rsqrtps
mov
add
xorb
addb
cmp
mov
gs
add
vgf2p8mulb
xchg
sbb
mov
clc
and
and
loopne
addb
imul
ret
push
and
sub
jg
test
shlb
shlb
pusha
xor
roll
je
out
xchg
iret
mov
lods
mov
mov
les
andb
shll
dec
xor
loopne
sub
xor
sbb
adc
add
dec
jmp
rclb
jmp
pop
mov
out
mov
loopne
sbb
push
int
leave
jmp
clc
pop
rolb
outsl
xchg
outsb
xchg
jmp
pop
out
xchg
inc
roll
int3
dec
push
loopne
into
push
andb
cmc
pushf
mov
js
jl
mov
jg
pusha
adc
nop
mov
popa
fstp
mov
das
rclb
scas
sbb
fimull
fdivs
inc
inc
dec
and
mov
inc
inc
adc
xchg
lea
sti
in
cmp
jno
loopne
cmpsb
andb
cmp
push
sub
xchg
andb
xchg
scas
rolb
xchg
sbb
xor
inc
lods
and
xor
cltd
out
and
pusha
inc
test
mov
add
cmp
and
push
shll
addr16
xchg
push
and
pop
pop
pop
adc
add
dec
xchg
sub
pusha
push
and
int3
aad
xlat
rorb
ds
pusha
and
ja
inc
loopne
sarl
mov
mov
inc
sti
mov
cmp
inc
inc
xchg
fbstp
sub
pusha
incb
add
imul
push
sub
fs
clc
test
test
sarb
push
sub
mov
repz
xchg
pop
lret
mov
cmp
cmp
or
jnp
mov
pop
and
add
shrl
or
out
adc
adc
add
and
add
loope
xchg
xlat
roll
add
loopne
lods
rolb
add
aad
mov
mov
dec
outsl
sub
outsl
lock
aad
loopne
insl
jmp
into
sub
mov
add
mov
call
lahf
rcrl
enter
outsb
cmp
inc
sub
rorb
iret
movsb
inc
inc
test
sub
pop
cld
fnsave
inc
and
arpl
dec
ds
scas
sub
mov
andb
jl
iret
pop
mov
jns
loopne
out
imul
inc
inc
aaa
push
and
push
repz
inc
mov
dec
push
lret
inc
jb
or
shrl
rolb
aaa
add
mov
scas
mov
adc
ds
dec
daa
dec
mov
cmpsb
add
mov
inc
add
jecxz
inc
inc
and
cli
test
dec
ljmp
jle
mov
into
pop
push
pop
jp
pop
mov
mov
and
loopne
imul
pusha
or
daa
sub
and
jmp
jb
xor
pcmpeqd
notb
sarl
and
stos
mov
mov
pop
insb
lea
add
fnstenv
cmp
clc
sbb
outsb
gs
pusha
xor
push
xor
xchg
repnz
mov
pop
sub
push
push
push
aad
and
mov
incl
and
stc
pushf
push
out
loopne
dec
jne
push
push
lret
add
loopne
addb
pusha
and
and
outsl
push
fisubs
cmpsl
outsb
jb
adc
lods
shlb
sub
inc
or
add
dec
shlb
inc
loopne
sbb
add
mov
cmp
cmpsl
leave
push
pop
sub
mov
andb
shl
adc
inc
loopne
or
inc
in
sub
and
and
mov
loope
mov
jnp
rolb
jo
and
xor
add
sbb
decl
mov
fs
mov
cli
jp
iret
sti
imul
cwtl
inc
xchg
addr16
and
cmp
adc
test
mov
add
shlb
add
imul
and
cld
push
xchg
test
push
xor
adc
push
cmpsl
inc
lock
and
add
lret
neg
sbb
loopne
xor
lahf
stc
popf
subl
cwtl
xor
inc
std
aam
out
imul
push
mov
push
pusha
andb
shlb
daa
hlt
cmp
lret
mov
fwait
clc
jg
push
pop
sub
fildll
les
in
dec
pop
daa
and
js
icebp
fisttps
jg
push
cmp
xchg
scas
xchg
in
enter
push
ljmp
or
rolb
je
in
jecxz
addb
sub
pusha
xorb
mov
cmp
xchg
add
xorb
and
lret
mov
fisubrl
andb
and
push
jns
mov
or
inc
in
hlt
loopne,pn
dec
fwait
inc
adc
sub
loopne
jl
add
cmp
push
inc
repz
ret
adc
fsub
jb
fstl
andb
pusha
sbb
lahf
add
jge
shl
inc
in
xor
mov
mov
mov
sbb
icebp
xlat
imul
push
mov
ror
ja
or
adcb
mov
ret
fists
mov
pushf
inc
stos
add
add
add
and
test
and
mov
xor
mov
xor
dec
imul
adc
js
xchg
inc
int
clc
in
jg
mov
mov
inc
or
add
dec
dec
inc
or
add
out
sub
cmc
lcall
int3
jnp
mov
roll
stos
and
dec
stos
loopne
fiadds
mov
add
inc
jmp
inc
add
andb
jmp
jl
mov
mov
xor
pop
repz
inc
pop
inc
adc
icebp
jb
xor
inc
sub
movl
lret
jo
andb
stos
add
sub
cmp
or
shlb
cmc
push
dec
dec
cmp
test
jle
cmp
sbb
sub
sub
rcrb
ret
inc
repz
lods
pusha
loopne
pop
inc
mov
ret
scas
cltd
leave
outsl
push
xor
lahf
mov
push
ds
mov
stc
adc
add
inc
and
inc
pop
shl
xchg
arpl
jbe
pusha
add
mov
mov
rolb
jno
sub
std
in
fwait
jp
jns
das
jae
ret
daa
push
cld
cmp
push
push
out
jns
and
add
daa
adc
lds
sbb
in
mov
inc
repz
insl
add
andb
adc
push
and
ljmp
xor
add
dec
aam
push
add
fidivs
sahf
and
hlt
jmp
mov
and
xchg
into
js
cmp
mov
pop
cwtl
aas
js
ret
iret
cltd
clc
xchg
adc
scas
add
js
sbb
pop
dec
inc
into
cmp
pop
and
and
pop
in
push
addb
shl
add
fldcw
rcrb
push
inc
sbb
pop
movsl
sbb
addb
loop
or
addb
pop
dec
repnz
mov
aad
mov
rolb
lea
xchg
push
subl
mov
rol
pusha
orb
loopne
jecxz
inc
jno
pusha
add
shlb
pop
pop
sub
loope
loop
mov
andb
and
or
cmpsl
sbb
mov
int3
lret
loopne
cmp
and
frstor
ret
and
inc
mov
xor
jg
pusha
pusha
sub
mov
mov
mov
pop
jno
movsb
pusha
pusha
mov
jne
jne
shl
je
pop
jae
aad
cld
out
push
iret
rcrb
adc
dec
stos
add
inc
mov
in
add
loope
aad
push
push
pop
add
stc
imul
and
addb
sbb
and
sbbb
jno
lds
int3
int
xchg
mov
push
mov
ror
xchg
mov
cs
subb
loopne
push
scas
in
adc
rol
enter
dec
jmp
push
add
lds
stos
add
cld
aaa
push
out
inc
shll
mov
inc
xchg
cwtl
jns
add
in
adc
shll
pushf
mov
add
jge
jl
add
inc
mov
andb
daa
push
test
shlb
loopne
mov
lcall
mov
inc
jb
and
push
stos
mov
lcall
out
push
sarb
popa
call
in
cmp
pusha
mov
test
push
xor
ja
sbb
push
add
je
and
sub
mov
inc
int
pop
mov
loopne
out
xor
inc
sub
mov
inc
testb
sub
inc
xchg
in
bound
fnstenv
addb
pusha
daa
and
mov
or
and
mov
call
in
scas
cmp
xor
push
sub
xchg
in
and
and
imul
adc
pop
lcall
stos
inc
call
ficoms
xchg
pusha
add
mov
bound
and
inc
sbb
or
add
xor
sub
mov
xchg
dec
push
pop
add
and
add
addb
dec
mov
out
sti
scas
push
pusha
inc
std
cmp
xchg
insl
lcall
adc
fsubr
lret
add
sti
pop
sub
xlat
add
cld
scas
loopne
push
push
and
fwait
ss
ret
ljmp
jge
jns
add
or
and
xorb
or
pop
mov
and
addb
pusha
mov
jp
outsl
add
addr16
xchg
add
push
loopne
push
sbbl
cmp
jnp
mov
inc
pop
decl
and
mov
mov
add
movsl
or
subl
mov
xchg
orb
pusha
daa
shll
popa
aam
adc
cmpsl
adc
shl
fidivs
jmp
dec
mov
stos
add
sub
push
clc
in
enter
aas
push
pusha
and
push
pusha
pusha
xor
add
ljmp
xor
xchg
loopne
scas
mov
add
data16
and
rolb
insb
lcall
jge
repnz
jge
mov
cwtl
add
push
movsl
inc
inc
aam
pusha
loopne
jmp
mov
imul
jp
inc
jns
popf
iret
mov
movsl
sub
das
xlat
cmp
add
in
dec
mov
mov
mov
int3
out
lret
stc
ja
jecxz
outsl
add
mov
andb
add
pusha
mov
inc
pop
clc
xlat
push
lea
andb
mov
pusha
jl
loop
pop
hlt
pop
add
mov
pusha
sar
out
jno
sbb
cmc
xchg
add
mov
or
add
addr16
inc
add
arpl
and
mov
or
xorb
inc
rcrb
lock
ss
pushf
sbb
cltd
pop
push
add
stos
rol
xchg
dec
mov
into
loopne
fsubl
mov
add
and
outsl
add
sub
fnstenv
out
xor
addr16
aad
sbb
jno
and
andb
push
repnz
mov
sbbb
addl
dec
pop
push
mov
and
into
pop
dec
pop
in
cmp
sub
xchg
inc
mov
sbb
addr16
pop
mov
pusha
sub
cmpsl
movsb
and
xlat
mov
in
cli
mov
sbb
and
jmp
fwait
pop
loope
mov
andb
dec
hlt
repnz
inc
xchg
sbb
and
loopne
sub
add
mov
push
cltd
or
add
andb
sbb
add
mov
aas
ss
sti
sbb
push
test
imul
inc
stos
lods
rol
and
ror
add
pop
push
adc
rolb
mov
enter
dec
push
ljmp
sarb
and
jnp
pop
pop
daa
dec
push
shlb
in
xchg
idivb
arpl
adc
loopne
mov
inc
add
repnz
push
jns
or
movsb
loopne
int
xchg
jp
testb
sbb
sub
cmp
imul
xor
mov
rolb
sub
jge
xchg
sub
out
jnp
fldcw
push
adc
out
adc
dec
ja
rcll
inc
add
addr16
sbb
int3
mov
cmpsb
addb
rcrb
inc
or
lret
xor
loopne
lods
and
icebp
das
scas
add
scas
and
mov
rcrb
xor
incl
mov
int
loopne
test
pusha
outsb
jle
jne
addr16
adcb
or
loopne
icebp
push
lcall
mov
jle
pusha
pusha
or
push
into
ss
clc
xor
sub
add
out
movsl
dec
call
icebp
sub
pop
push
jp
sbb
push
jno
gs
adc
push
insb
mov
scas
pop
enter
rolb
xchg
push
lods
inc
pusha
inc
jne
fld
add
cmp
out
iret
scas
push
mov
fs
stos
mov
in
ja
int3
rol
adc
and
pop
jl
xor
rcl
add
dec
and
pop
dec
jle
shl
mov
add
rcrb
add
cmp
dec
push
repnz
inc
lret
cmp
and
sub
inc
test
in
or
rcl
inc
in
lret
push
out
push
shrb
inc
repnz
adc
imul
lret
lahf
pusha
cmpsl
std
jb
mov
sub
sbb
mov
faddl
imul
sbbb
aad
sbb
insb
cmc
ds
fisttpll
dec
push
mov
inc
int
push
pusha
add
sbb
mov
imul
aad
sbb
sarl
in
fisubs
imul
ret
aam
add
jo
cli
repz
fwait
mov
dec
inc
push
andb
xchg
xchg
loopne
sbb
popa
cmp
inc
orb
loopne
popa
int
pusha
pusha
add
loopne
push
inc
negl
and
jecxz
jne
aam
jle
jb
push
cli
movsl
dec
test
push
lds
and
and
cmp
inc
mov
loopne
cltd
cmc
adc
popf
lea
fistpll
pushf
add
cmp
loopne
pop
jg
dec
pop
test
add
inc
scas
mov
insb
icebp
xor
imul
mov
rolb
pusha
loopne
or
inc
imul
sub
add
lret
subb
pusha
add
add
inc
adcb
aas
setle
and
sbbb
mov
sarb
add
push
loopne
and
mov
or
dec
xchg
insb
jge
xchg
mov
loope
and
scas
pusha
loopne
mov
js
mov
add
add
xlat
jbe
inc
mov
divl
push
jo
jle
jnp
les
out
imul
and
sub
addb
inc
fucomp
std
addr16
stc
push
bound
dec
test
push
mov
jno
test
inc
aas
and
ljmp
inc
mov
fnstsw
add
repz
lods
push
addb
xlat
add
and
add
fstpt
cmp
mov
pusha
ret
mov
addb
sbb
dec
xlat
mov
test
pusha
xchg
scas
rolb
rcrb
andb
out
sbb
sbb
addr16
out
dec
mov
das
sbb
pop
add
xchg
mov
push
pop
sub
add
jae
adcl
sbb
jmp
or
xor
sub
and
jne
sub
add
and
pop
inc
cs
adcb
addb
test
loopne
in
mov
aam
loope
cmp
mov
push
add
or
sub
mov
shll
out
mov
push
inc
pusha
jmp
loope
jg
sub
andb
lock
dec
inc
test
cli
loope
push
imul
sti
jge
sub
popf
out
addr16
dec
inc
fstl
and
sbb
hlt
cli
fwait
adc
sbb
pusha
mov
rclb
cs
lcall
rorb
add
cmpsl
std
cmp
add
outsl
mov
xor
loopne
cmp
inc
inc
call
dec
push
mov
sbb
add
add
lods
pusha
rclb
xor
aam
xchg
lss
shlb
sbb
pop
xchg
inc
loope
and
stos
push
inc
inc
adc
repz
and
clc
pop
xchg
movsb
andb
cmp
lcall
scas
inc
and
push
inc
lret
add
fdivr
popf
xor
popa
fldenv
mov
and
xor
add
leave
pop
adcl
mov
or
pusha
lods
add
mov
dec
das
pop
fmuls
rolb
cmpsl
test
rolb
add
popa
mov
cmp
and
scas
je
sbb
inc
pop
push
mov
xchg
js
cmpsb
inc
pusha
sbb
and
mov
and
repz
push
cmp
das
test
inc
andb
mov
add
pop
push
pusha
and
shl
inc
stc
sbb
insb
xor
fdivrl
into
fcoml
mov
jae
sub
rcrb
gs
sahf
xchg
sarb
mov
add
iret
add
sbb
outsb
das
outsl
fsubrl
cld
or
ds
inc
loopne
mov
fnsaves
mov
inc
cmp
repz
mov
sub
and
or
or
mov
add
inc
outsb
add
rorb
mov
ds
and
fstl
imul
pusha
inc
fs
mov
mov
repnz
jo
or
sahf
and
pushf
pop
stos
andb
rclb
mov
loopne
inc
mov
cmp
xchg
mov
subl
iret
mov
and
and
fidivs
and
mov
dec
lock
rolb
and
fdivl
push
fadd
jno
leave
or
loopne
call
rclb
sub
and
pop
loopne
and
push
push
mov
xchg
pop
ret
hlt
dec
andb
fwait
cmpsl
mov
rcrb
popa
scas
mov
mov
jns
test
mov
mov
loopne
lock
int3
mov
dec
sub
out
rol
pop
dec
push
loopne
and
jg
pop
dec
and
xchg
fstpl
insb
dec
lcall
ja
inc
jo
pop
add
mov
aam
push
adcl
and
add
sub
pusha
push
jg
jb
gs
mov
or
in
sub
pusha
xchg
into
test
adc
pop
jnp
rolb
roll
jo
mulb
mov
add
mov
in
in
add
mov
pop
pop
aam
andb
vpshlq
adc
and
xchg
cmpsb
rolb
and
pusha
add
xchg
test
jge
sahf
fwait
cmc
or
mov
add
imul
push
adc
ja
push
addl
pop
fildll
addb
cmpsb
add
or
pop
push
scas
pusha
ror
or
sbb
cwtl
xchg
cld
out
or
daa
pop
into
clc
lods
andb
inc
and
jmp
cli
xor
lea
sarb
aam
cmp
mov
addb
mov
add
les
mov
inc
and
jnp
stos
andb
loopne
bound
mov
mov
ja
dec
mov
mov
jge
dec
pop
dec
mov
mov
jbe
out
fistps
xchg
and
pop
mov
add
shlb
adc
jns
and
dec
movsb
loopne
lods
pop
inc
es
imul
inc
ja
shrl
aad
loopne
jno
lahf
sarb
and
inc
test
adc
pop
push
sbb
rol
sub
inc
pusha
push
adc
jl
xor
mov
icebp
arpl
loopne
mov
mov
lock
addb
sbbb
outsb
sbb
mov
mov
mov
movsb
pusha
loopne
mov
shr
xchg
aam
fimull
xchg
inc
js
and
outsb
addb
mov
sbb
inc
inc
mov
mov
shlb
test
lahf
lcall
orl
mov
gs
in
mov
mov
out
push
sub
loopne
cli
sbb
loope
xchg
cmp
cmpb
adc
xchg
add
dec
sbb
sbb
rclb
std
push
inc
rclb
and
add
rolb
inc
add
scas
add
lds
inc
jb
mov
dec
xor
andb
add
jg
inc
pusha
jp
repz
bound
ja
mov
mul
mov
and
pusha
bound
inc
push
loopne
jo
pop
add
shll
cmpsb
and
mov
pusha
ret
bound
and
xor
sub
sub
xchg
add
and
ficomps
xchg
dec
mov
loop
nop
add
aaa
mov
and
mov
add
cltd
jge
jns
dec
je
and
subb
popf
in
test
loopne
test
shlb
fcomi
cmpsl
add
loopne
jmp
xlat
xchg
es
and
movsl
xchg
pop
dec
arpl
sub
pusha
add
call
lock
fisttpl
inc
ja
ret
jo
adc
push
out
call
outsb
push
jecxz
andl
mov
cmpb
jle
xchg
jl
fmulp
jp
fsub
mov
cwtl
add
and
rcl
inc
loope
dec
jl
and
add
pusha
mov
loopne
xlat
shl
inc
or
loopne
mov
pop
adc
aam
in
sbb
sbb
shl
and
sbbb
inc
cli
cmp
loopne
sbb
mov
fsts
sub
mov
dec
cmp
add
mov
dec
pop
aad
lock
lret
pop
push
out
loopne
pop
dec
bound
loope
rol
les
xor
ret
cld
jns
andb
imul
aad
fldl
sub
mov
jmp
xorl
lret
outsb
test
mov
aad
fisttps
mov
sbb
test
subb
outsl
mov
inc
std
jle
and
sbb
pusha
and
aas
mov
and
sti
cwtl
sub
mov
xchg
fldl
pusha
xchg
adcb
push
pop
jno
outsl
test
pusha
mov
fmuls
jle
mov
loopne
jns
test
push
sub
adc
mov
fmuls
and
or
adc
pop
in
fs
js
adc
add
rolb
add
add
shlb
sub
add
dec
inc
jae
sub
addb
ja
mov
pusha
add
mov
add
sub
and
mov
xchg
and
aad
xor
push
ffree
jbe
gs
mov
push
jmp
pusha
add
fisttpl
dec
data16
push
lods
sbb
and
and
mov
dec
and
pusha
addb
ljmp
inc
rcrl
pushf
lods
shlb
mov
pop
subl
hlt
or
andb
leave
aad
push
inc
inc
add
mov
fldl
test
mov
cmp
icebp
xor
call
add
or
inc
inc
scas
negl
vmovq
ret
fwait
test
adc
pushf
pop
outsb
adc
push
lods
rol
xchg
or
mov
sub
orb
roll
cld
cld
loope
loopne
fs
je
inc
mov
mov
loopne
fcmovne
push
pusha
or
ss
xchg
push
add
fwait
sub
loope
loopne
sbb
cltd
pusha
sub
adcl
sub
mov
rol
and
fistps
cmpsb
add
lahf
popf
sub
and
and
dec
mov
in
sbb
cld
jmp
sub
sahf
sahf
jl
xchg
sub
loopne
add
rclb
cmp
call
jbe
and
shrb
sub
dec
andb
shlb
ljmp
push
jl
int
les
adc
pushl
mov
pop
mov
in
jnp
or
add
cld
lcall
mov
in
jge
dec
xchg
push
fiaddl
inc
mov
out
mov
cmp
in
iret
dec
int3
stc
pop
xlat
js
add
push
push
and
sarl
xchg
xchg
xor
ret
rcl
pop
sti
nop
mov
shrl
mov
push
rcrb
mov
inc
fildl
lds
mov
pusha
xchg
test
add
not
inc
and
pusha
add
dec
dec
mov
mov
jno
jmp
and
mov
roll
stc
add
and
pop
in
add
stos
mov
out
jb
loop
add
jo
sbb
test
mov
shrd
cmp
js
cmp
and
lock
mov
imul
loopne
andb
fcompl
clc
aaa
fs
sbb
das
xchg
inc
xor
xor
jge
fdiv
insl
insb
cmc
jno
clc
sbb
inc
add
into
jecxz
jecxz
and
sbbb
cmp
inc
addb
push
shl
dec
pop
int3
loopne
and
loopne
arpl
shlb
insl
or
imul
ret
rcrb
jl
pusha
pusha
test
pusha
add
or
or
mov
insb
ja
test
or
les
xchg
stc
les
adc
pop
pop
xchg
push
add
dec
scas
add
rcll
mov
shl
cwtl
mov
mov
icebp
std
imul
mov
pusha
mov
rclb
push
xchg
jg
xchg
pop
test
sub
xor
out
push
xchg
push
jnp
imul
sub
rcrb
stos
pusha
sarb
xchg
pop
cmp
addb
and
sti
or
adc
in
dec
cmpsb
add
aaa
jns
pusha
call
xchg
fcompl
stc
sar
divl
js
mov
mov
sbb
mov
scas
test
inc
arpl
out
mov
ret
mov
xchg
sub
mov
pop
push
add
test
mov
jns
mov
testb
pusha
inc
outsb
imul
push
and
and
sbb
and
ret
jns
shlb
fnstenv
into
xor
xor
add
pop
cli
arpl
lods
and
test
fwait
in
or
add
add
and
inc
outsl
push
inc
int3
push
mov
inc
pop
lods
sub
mov
fnstcw
dec
push
out
leave
cld
idivb
lea
andb
mov
jno
xchg
mov
inc
and
rcl
sub
add
and
mov
xchg
into
gs
dec
fidivrl
shlb
out
and
pop
push
aaa
add
or
jae
scas
cmp
test
shlb
mov
and
mov
inc
out
cmc
inc
mov
push
mov
insb
test
rolb
sbb
stos
rol
cwtl
sub
pusha
sahf
sbb
xor
shlb
in
pop
out
leave
mov
and
inc
pusha
mov
sub
push
jecxz
push
mov
mov
lret
push
in
pop
add
pusha
inc
mov
and
add
add
loope
mov
and
gs
popf
sub
adc
xlat
call
cmpsl
scas
rolb
mov
addr16
or
pusha
inc
clc
push
arpl
add
pusha
lods
and
push
xor
movsb
add
loopne
or
and
and
out
or
inc
cmpsb
add
add
call
add
mov
addb
lret
add
into
call
xchg
shlb
mov
in
in
pop
jmp
or
sub
shll
aaa
cltd
into
ds
mov
sbb
loopne
addb
insl
arpl
push
ljmp
loop
lods
add
xchg
xchg
xchg
testl
cmovo
cld
sahf
sub
inc
jg
sbb
pushf
fwait
std
loopne
and
jns
shlb
int3
out
pushl
adc
mov
cmp
std
insl
call
fs
xchg
dec
xchg
or
arpl
inc
orb
sarl
andb
add
stc
mov
cld
add
inc
bnd
jno
dec
ljmp
sub
xorb
xor
les
xchg
repnz
adc
sbb
adc
xlat
push
cmp
pusha
mov
or
sar
stos
add
rcrb
pop
inc
pop
jbe
arpl
andb
in
das
test
sub
mov
sbb
sti
fs
jo
pop
rclb
xchg
and
sarb
repnz
mov
aaa
scas
and
or
mov
inc
cmpb
sbb
pushf
rcrl
mov
add
adc
repz
ja
or
mov
and
add
aad
outsb
pop
jle
lds
idivl
add
shl
jnp
xor
xor
mov
jns
add
push
out
mov
ljmp
adc
movsb
mov
mov
xorb
or
loopne
adc
sbb
adc
add
mov
add
cmpl
mov
adc
test
mov
mov
mov
int3
imul
dec
insl
push
sub
add
pop
push
push
int3
add
and
pop
xchg
xor
addb
add
aad
dec
add
pusha
imul
push
push
es
andb
in
mov
pop
inc
lods
loopne
into
dec
cmpsl
push
rolb
or
and
adc
ja
stos
mov
xchg
hlt
jecxz
jmp
int
jle
lret
arpl
sub
add
jg
pusha
pusha
pusha
sub
inc
pxor
sbb
out
testb
cmpsl
in
xchg
sub
add
add
push
mov
loopne
faddl
movsb
loopne
lcall
push
jnp
push
in
imul
or
ret
sbb
push
and
loopne
jnp
lods
rolb
pop
xor
dec
adc
and
out
das
icebp
xor
and
fists
push
ja
xchg
scas
push
es
loope
andb
add
sahf
lods
movl
pop
imul
push
add
aad
inc
jae
shll
sar
inc
pop
stc
push
jmp
lahf
popf
jl
fwait
push
leave
clc
std
sahf
mov
xor
mov
xchg
mov
adc
mov
ss
mov
mov
sbb
push
cs
cmp
jbe
lods
sbb
dec
cwtl
fbstp
ss
loopne,pn
jmp
pop
jle
cmp
jp
dec
outsl
mov
adc
nop
xor
scas
xor
loopne
das
cs
loopne
mov
rolb
lock
xchg
adc
inc
mov
jbe
jmp
int3
lods
pusha
pusha
loop
popf
mov
shl
xchg
jp
mov
in
mov
inc
mov
sbb
mov
adc
inc
push
push
fbstp
mov
add
scas
andb
cmpsl
inc
lcall
outsb
push
shlb
clc
or
mov
and
aaa
fs
push
les
xchg
mov
push
lret
xlat
push
xchg
mov
rol
pusha
inc
cmp
stc
clc
scas
dec
lret
loop
ljmp
loopne
fdivrs
push
aam
int
push
mov
das
push
xor
popf
in
notb
ret
jg
iret
jo
dec
pop
mov
ret
inc
jl
lods
popl
xchg
adc
shlb
xchg
cmp
shlb
and
cmpsb
add
xor
mov
aaa
sub
aaa
cmp
cmp
popfw
movsl
adc
xor
lods
repnz
mov
loopne
pusha
dec
push
mov
dec
xor
jne
jmp
pop
jns
adc
jnp
mov
inc
or
pusha
mov
pop
arpl
and
pop
rorb
xor
je
push
ds
and
and
add
shlb
sbb
sbb
or
pop
inc
pop
push
jle
push
ss
xorb
shlb
xor
pusha
lds
inc
andb
fs
xor
and
into
nop
sub
push
jae
cmc
out
xor
xor
stos
mov
mov
mov
cmpsb
pusha
andb
fsubr
sub
repnz
add
fsubl
mov
add
test
sbb
sbb
pmaxsw
or
loopne
jmp
xor
jne
sti
movsb
loopne
xchg
mov
andb
aas
dec
ret
push
or
inc
pop
call
ffreep
in
or
ds
mov
push
pop
mov
xor
inc
loopne
lcall
imul
outsl
cld
jne
dec
in
push
jle
mov
xor
int
jnp
dec
xchg
sub
dec
sti
enter
pusha
jns
pusha
and
out
sbb
push
and
pusha
pop
and
add
mov
outsb
lea
or
pusha
shll
sbb
add
lret
dec
xor
cmp
cld
xchg
jp
xor
mov
shrl
out
lods
and
data16
loopne
pop
push
mov
loop
loopne
scas
xchg
out
jmp
fwait
mov
inc
mov
out
mov
cmpb
and
add
push
mov
mov
scas
and
pusha
loopne
pop
insl
cmp
or
ss
loopne
andb
sub
inc
inc
xchg
adc
pusha
adc
loop
pop
add
inc
cmpb
shlb
aam
mov
xor
adc
mov
std
dec
mov
push
adc
es
inc
into
pusha
xor
mov
and
jg
inc
mov
loopne
xor
mov
icebp
out
fcmovne
push
mov
mov
iret
repz
shrl
loopne
pop
add
aad
sub
add
orb
add
pusha
mov
imul
and
and
jns
jge
shr
ret
out
pop
fwait
imul
push
jo
mov
inc
add
fwait
ret
test
divl
std
add
fldenv
and
mov
jmp
add
lods
mov
mov
inc
sbb
xlat
push
stos
mov
lahf
jne
push
mov
icebp
movsb
loopne
and
pusha
or
sti
push
and
push
jo
shll
inc
or
and
mov
insl
and
inc
insl
jle
aaa
xor
xor
dec
push
add
jns
push
jl
or
add
loopne
dec
mov
or
dec
lahf
enter
lcall
cmp
dec
into
mov
mov
imul
popf
stc
pusha
adc
lret
pusha
and
mov
pop
and
inc
mov
loopne
andb
pop
mul
lret
mov
inc
dec
jae
iret
cmp
test
loopne
jecxz
incb
mov
add
scas
mov
sbb
jg
idivl
es
adcb
and
loope
push
loopne
mov
loopne
iret
xchg
aam
dec
sbb
jle
fistl
int3
sbb
fistps
add
shl
dec
jmp
and
inc
cmpb
xchg
dec
mov
sahf
xchg
push
js
stos
jg
add
lahf
xor
inc
pop
ret
gs
jbe
jmp
pop
testb
andb
addb
add
movsb
loopne
xor
mov
iret
sbb
dec
mov
add
mov
loop
inc
leave
outsl
adc
pusha
loopne
jb
shlb
sub
sub
mov
and
loopne
pop
jle
dec
pop
cli
adc
rcll
emms
leave
xlat
mov
fwait
add
or
pusha
sub
and
add
xchg
ja
idivb
xchg
out
inc
xor
cmp
enter
andb
pop
ja
out
pop
mov
popf
push
stos
or
sbb
inc
dec
xchg
dec
mov
call
add
andb
inc
lret
out
mov
fsts
in
outsb
imul
xchg
xchg
pop
dec
add
xchg
stc
sub
add
fst
inc
pop
jmp
je
shll
ljmp
jns
jmp
adc
lods
mov
pushf
aad
and
fs
push
sub
lret
dec
inc
sbb
pusha
push
sbb
jecxz
dec
dec
push
jno
cmp
dec
dec
fildl
aam
mov
add
adcb
loopne,pn
cmovg
out
adc
xor
ror
inc
popf
add
mov
decl
and
add
adc
fsubr
lahf
lret
push
jl
sarb
inc
shll
or
xchg
pusha
jecxz
sbb
cmp
inc
jno
fisubrs
mov
in
adc
addb
jae
mov
mov
sbb
pusha
and
pop
hlt
mov
pusha
mov
ss
add
sub
sbb
xchg
jae
aas
adc
cmp
lcall
dec
inc
add
and
mov
or
inc
pop
leave
out
add
push
cltd
cmpsb
rolb
aam
cmc
inc
pop
jae
push
mov
adc
dec
mov
push
xchg
mov
mov
sbb
mov
mov
xlat
mov
jbe
into
pshufw
fisttps
enter
or
cmp
or
loopne
inc
mov
test
or
inc
adc
pop
in
jp
jle
push
test
and
or
add
cmpsl
imul
outsl
fbld
add
jg
loopne
daa
cltd
cmp
loopne
jecxz
jmp
dec
imul
mov
add
psubsb
add
or
and
dec
push
dec
jno
rolb
pusha
pop
sbb
mov
push
mov
mov
arpl
push
loopne
repz
repnz
fmull
shlb
add
jno
call
sahf
sbb
stc
fnstcw
out
clc
movsb
addb
arpl
push
mov
or
add
cmp
pusha
pusha
push
or
andb
movsl
xchg
and
rclb
xchg
pop
jmp
inc
pusha
mov
and
sbb
pusha
scas
mov
movsl
mov
loopne
int
xor
leave
cmp
jno
rol
movsl
imul
inc
xor
test
loopne
loopne
call
in
bound
pusha
add
lods
add
cmpl
adc
jmp
lea
shll
lahf
xchg
sub
ret
push
inc
mov
dec
ret
pop
loop
clc
sub
xor
inc
push
addb
lock
xlat
lcall
stos
pusha
add
jge
aas
jg
mov
inc
push
mov
add
imul
cmc
add
inc
and
repnz
add
shrl
jo
loopne
mov
jbe
add
shrb
push
cmp
add
sbb
pusha
inc
and
lahf
test
add
dec
inc
outsb
push
add
loopne
add
add
sbb
mov
or
loopne
data16
fs
mov
and
fidivrl
and
mov
and
add
inc
loopne
cli
dec
and
adc
daa
cmp
mov
pusha
inc
fisubrs
addb
pop
divl
inc
add
incl
pop
ds
repz
lea
imull
pop
jmp
clc
arpl
loope
out
mov
adc
inc
inc
out
fmul
popf
xchg
lock
lods
addb
xor
je
sub
in
int
cmp
enter
negl
ss
cltd
adc
and
sbb
outsb
or
mov
loopne
movb
gs
sub
loopne
dec
movsb
rolb
aaa
add
xchg
sub
mov
sbb
push
shlb
sub
das
andb
jg
inc
call
lds
jg
and
and
mov
push
mov
or
xchg
rcr
test
mov
lods
inc
mov
mov
pusha
inc
negb
or
aam
daa
ds
add
xchg
rolb
jg
cmc
je
in
push
xor
mov
add
adc
mov
into
cmc
stos
add
mov
jecxz
and
popf
adc
bnd
divl
aaa
ljmp
inc
xchg
xchg
mov
shlb
fs
push
iret
push
jae
aam
xchg
xorl
and
mov
pushf
or
loopne
or
inc
imul
sbb
adc
add
movsb
pusha
addb
xchg
mov
mov
cmp
cs
pusha
cmp
gs
xchg
add
and
xchg
mov
cmpb
dec
aad
pop
pop
cmpsl
rcll
dec
xchg
push
and
subl
and
adc
cmp
scas
and
pop
in
in
jg
adc
inc
scas
rolb
sub
aas
mov
pop
repz
pusha
stc
int3
pop
test
and
fimull
xor
rolb
mov
push
xchg
pusha
pusha
or
ss
mov
pusha
adc
inc
dec
xchg
scas
mov
mov
mov
cli
xchg
mov
fists
das
mov
add
dec
les
loopne
push
and
les
loopne
jo
add
rcl
inc
add
cld
test
xchg
pusha
cmp
rol
inc
xchg
adc
inc
push
sub
aas
mov
data16
mov
clc
jb
rolb
add
and
pop
jbe
addb
and
pop
repz
pushf
sti
xor
icebp
nop
xor
inc
xchg
hlt
out
sbb
add
add
andb
rolb
shlb
inc
mov
int
lret
adc
pusha
and
push
test
push
xchg
push
dec
xchg
ljmp
push
pusha
loopne
or
loopne
insb
test
and
shrb
andb
jmp
dec
fs
stos
add
fwait
call
inc
fistpl
mov
cmp
jb
pusha
pop
icebp
push
jmp
add
nop
mov
hlt
jo
mov
loopne
mov
mov
dec
and
push
fstpl
pusha
rcr
inc
xchg
adcb
adc
dec
push
loopne
clc
or
add
scas
and
fst
inc
enter
mov
and
shrb
cmp
dec
add
loopne
imul
mov
icebp
sahf
ret
xor
das
int
xor
fnstsw
xchg
mov
jbe
setl
mov
in
mov
test
inc
cmp
mov
sub
and
lret
insb
ffreep
push
es
pusha
push
xor
cli
ret
shl
sbb
mov
lret
idiv
cltd
arpl
add
push
or
fstps
inc
loopne
xchg
in
mov
mov
arpl
std
jp
pop
insb
test
or
jae
inc
loopne
push
arpl
sbb
orl
push
sbb
pusha
rolb
and
mov
inc
xchg
inc
inc
aaa
xor
loopne
adc
imul
pop
and
xor
fs
shrb
jns
mov
pop
arpl
mov
out
stc
lahf
xchg
xchg
je
dec
out
sub
inc
sub
and
and
push
and
pop
dec
mov
adc
push
jg
mov
loopne
test
push
inc
mov
xchg
ss
ss
jle
daa
fst
sub
mov
xchg
loop
lds
mov
add
add
jle
icebp
popf
pop
xor
pop
fists
cwtl
stc
xchg
sbb
shlb
push
and
xrelease
repnz
das
sbb
mov
and
sub
add
xchg
stos
inc
mov
data16
jl
fmulp
mov
scas
jp
das
les
inc
inc
rolb
out
enter
mov
movsl
pushf
jp
aam
xchg
imul
push
cmp
xor
movl
aas
sti
les
cwtl
out
pop
hlt
leave
cmp
push
shlb
adc
into
mov
and
ljmp
imul
xor
lods
pusha
add
pusha
add
or
rcrb
cmp
das
aas
dec
fidivrs
push
pushw
push
lea
mov
push
mov
repnz
movsb
pusha
loopne
adc
jl
lret
nop
add
out
ds
addb
add
cmpsb
pusha
sbbb
jge
add
add
cmp
rcrl
jmp
ss
xchg
xchg
arpl
add
sarb
sbb
inc
and
mov
lret
ficomps
dec
mov
lret
cmc
adc
and
pusha
cmp
mov
shll
inc
shlb
imul
inc
mov
sbb
push
mov
jb
or
push
mov
add
daa
aam
cmp
daa
mov
sub
push
add
lret
cltd
inc
mov
dec
aad
js
and
ret
add
xor
lret
fsubs
clc
or
mov
enter
lea
outsl
test
subb
loopne
filds
loopne
shr
xor
mov
inc
movsb
inc
pusha
out
sub
or
loop
cmp
clc
xchg
and
shlb
inc
pop
xchg
mov
push
addb
out
popf
add
ret
jle
jecxz
test
mov
jae
scas
ffreep
sub
jnp
inc
adcb
into
icebp
fisttpl
pusha
inc
add
loopne
ljmp
loop
and
cmp
ljmp
xor
shl
fidivrl
adc
sbb
test
loopne
cltd
lods
pusha
pusha
hlt
cwtl
frstor
xorb
or
mov
inc
mov
add
mov
aas
lds
scas
inc
pusha
shll
les
fiaddl
inc
out
inc
sbb
je
add
sub
inc
inc
add
cmpsl
cmc
es
inc
jne
scas
mov
inc
cltd
inc
aam
pop
push
lods
lds
pop
or
cmpb
inc
lock
int3
or
mov
mov
xchg
mov
cmc
test
cmp
push
lods
fldt
or
pusha
loopne
in
sarb
rorl
scas
sub
subb
pusha
xchg
inc
out
push
movsb
add
pop
jge
jl
popf
mov
jmp
jle
xlat
add
in
add
adc
pop
mov
out
or
add
in
mov
jg
mov
mov
shlb
push
mov
mov
loopne,pn
mov
mov
pop
push
push
mov
pushf
scas
jg
shrl
cwtl
cmp
dec
inc
jmp
inc
cli
into
rcl
outsl
aad
arpl
shrb
and
mov
shlb
sub
mov
push
sub
jno
mov
les
inc
xor
sub
out
pusha
pop
insb
adc
mov
adc
loopne
stos
inc
xorb
incl
pusha
mov
loopne
fldenv
jmp
cmpsb
shlb
addr16
push
jmp
cmp
dec
lret
addb
xor
inc
mov
mov
jne
fnsave
xor
inc
jp
sbb
movsl
jg
xchg
jne
dec
clc
mov
xchg
xchg
frstor
add
bound
push
jmp
adcb
push
pop
push
andb
or
push
clc
ffreep
push
mov
pop
int
lahf
adc
sbb
push
ja
add
inc
lock
xchg
jae
loop
or
stos
pop
shlb
mov
test
inc
das
pop
inc
sub
loopne
add
movsl
add
test
cltd
lds
rolb
rorb
pop
jno
mull
mov
into
out
or
jp
mov
stos
inc
inc
adc
sbb
pusha
shrb
pop
lea
sub
inc
and
dec
insb
das
lret
push
inc
lea
loopne
xor
add
inc
sarb
scas
inc
loopne
inc
mov
push
dec
rcll
mov
imul
sub
std
stc
das
stc
mov
mul
jle
pop
dec
push
pusha
pusha
loop
mov
inc
push
lahf
or
cmpsb
inc
add
cltd
inc
xlat
pextrw
xor
loopne
push
cmp
add
jp
stos
pusha
andb
lret
push
in
stos
andb
shl
inc
ss
lods
rol
in
adc
and
pop
lret
lret
and
mov
addb
xor
and
sbb
pushf
inc
repz
repnz
sbb
shll
inc
and
clc
cmpsl
jnp
jg
int3
je
adc
pusha
add
pusha
rclb
rolb
ret
fnstcw
inc
icebp
and
rol
enter
push
imul
dec
jnp
xchg
sbb
xchg
into
fldl
xchg
and
mov
mov
mov
shrb
add
loopne
and
xchg
lret
add
pusha
push
cmp
rol
rcrl
in
cmpsl
mov
and
addr16
and
mov
mov
cld
xchg
push
pop
addl
sbb
or
mov
pusha
rclb
inc
pusha
cmp
shll
xchg
shlb
pusha
pusha
movsl
sbb
or
and
pop
dec
pop
xor
and
add
fdivs
enter
mov
add
aas
jmp
jno
and
add
loopne
cmc
iret
scas
pusha
mov
and
rorb
addb
hlt
aad
push
lock
js
jno
mov
adc
jmp
iret
add
xor
jecxz
jnp
mov
xchg
rorb
fwait
sub
rcrb
inc
stc
xor
xchg
shlb
jmp
mov
lock
add
pusha
loopne
jmp
imul
aas
aas
pop
cwtl
jnp
mov
xor
or
push
pusha
mov
xchg
pop
outsl
mov
adc
imul
pop
and
dec
and
add
dec
in
jmp
stos
jmp
fistpll
negb
and
inc
xchg
ret
jmp
shlb
clc
adcl
and
and
dec
jb
and
mov
fdecstp
rorb
inc
andb
loopne
test
inc
rcr
xchg
out
xchg
mov
imul
xchg
aas
cld
dec
mov
test
loopne
xor
push
sar
popf
mov
stc
cmp
or
outsb
out
in
jmp
rolb
xchg
repnz
arpl
mov
aam
xchg
pop
sub
inc
stc
mov
addr16
gs
and
xchg
adc
add
cwtl
pop
mov
jno
inc
mov
push
insb
in
imul
and
add
loopne
mov
jp
inc
es
inc
loope
pop
out
and
add
inc
fsubrs
inc
push
inc
cmpsb
add
jmp
inc
fisttpll
cmc
clc
orl
loopne
aam
adc
jne
rolb
data16
shl
add
mov
shl
pop
mov
add
leave
mov
lea
xor
addb
gs
pusha
lret
pminsw
mov
pusha
pop
stos
mov
addb
mov
gs
jg
pusha
mov
in
insb
insl
fadds
scas
inc
mov
rcrl
shlb
add
leave
add
shll
loopne
push
add
addb
aaa
ds
pop
pop
xchg
pop
ds
insb
dec
in
cmc
dec
dec
mov
pusha
fwait
push
fisubrs
xor
test
cmc
les
adc
pop
les
xor
std
xchg
retw
adc
icebp
cmp
outsb
cmp
or
pusha
icebp
mov
mov
andb
test
mov
mov
loop
pusha
pusha
in
dec
leave
std
out
addb
push
pop
fmuls
les
rorb
and
xchg
pop
fwait
xor
ss
ret
adc
push
rolb
add
inc
push
aam
shrl
loopne
xlat
cmp
lcall
add
fsub
into
add
inc
mov
rcrl
push
and
and
rorb
xchg
xor
push
inc
and
sub
mov
inc
cmp
dec
jne
adc
mov
fnstsw
hlt
aas
inc
sbb
fmul
xor
sub
cmpsb
mov
pop
adc
xlat
ret
jmp
ret
outsl
icebp
mov
sbb
loop
cmp
cmp
xor
mov
inc
mov
or
sbb
add
pusha
imul
sar
lcall
out
cmp
and
add
add
mov
jp
popf
lcall
mov
andb
cmp
ljmp
adc
mov
hlt
shrl
jbe
adc
cmc
adc
add
shr
jmp
jb
mov
jno
mov
mov
addr16
shlb
jo
inc
add
je
aad
mov
and
pusha
push
gs
sub
pusha
xor
push
mov
inc
sti
add
mov
js
jp
clc
icebp
sub
and
inc
pusha
xchg
sti
sbb
xchg
daa
jb
daa
int
jg
insl
ret
out
sbb
mov
fstps
mov
and
rcrb
pusha
inc
add
cs
pusha
mov
mov
jmp
and
adc
lods
std
inc
ret
mov
xorb
mov
out
mov
pop
dec
pop
popf
out
lret
jnp
popf
mov
jl
andb
test
pop
data16
jle
mov
loopne
imul
pop
push
cmp
out
lods
ja
into
push
sahf
cmpsl
in
popf
inc
out
pop
or
mov
ljmp
push
stos
xchg
je
and
or
mov
ret
stos
insl
push
decb
inc
out
mov
and
out
movsb
inc
pusha
pop
test
out
mov
xchg
push
inc
inc
rclb
pop
leave
push
ja
je
mov
mov
pusha
sub
orb
stos
imul
sbb
add
sbb
pop
data16
cmp
std
and
fists
jne
into
lret
mov
and
mov
pop
xchg
stos
mov
rclb
cld
and
sub
and
jne
inc
rolb
call
sub
mov
cli
push
enter
and
cli
enter
xchg
lret
add
pop
push
pop
sbb
add
mov
mov
lret
mov
rolb
and
xchg
cmp
pusha
jmp
andb
pushf
cli
aad
fwait
xchg
or
andb
and
mov
sbb
enter
push
sub
clc
xor
cld
fimull
and
dec
mov
xor
popa
clc
sub
mov
add
jbe
mov
inc
rolb
mov
dec
fldcw
stos
loopne
lahf
fistps
lret
lds
int
and
sub
add
pusha
stc
dec
iret
cmp
aaa
mov
inc
and
cmp
inc
loopne
scas
pusha
pusha
pop
add
shl
mov
ret
sbb
outsb
push
pop
pop
xchg
sub
and
or
add
dec
orl
xchg
add
fwait
xchg
movsl
ret
fstps
mov
pop
xor
mov
jge
and
add
or
shlb
shl
int3
inc
testb
hlt
add
or
loopne
nop
xchg
pop
popf
jns
push
cwtl
adc
rolb
jecxz
inc
pop
add
mov
shrb
fisttpl
push
mov
out
nop
push
idivl
pop
xor
loope
in
stos
jnp
les
arpl
jo
sub
add
test
fisubs
es
inc
and
mov
loopne
pop
jle
sbb
push
daa
jle
push
mov
stc
cmp
cmp
or
jg
xor
mov
cli
dec
cmp
loope
mov
cmp
adc
addb
mov
dec
testb
lcall
mov
xchg
imul
mov
mov
lret
cmp
pop
dec
aas
in
out
xor
push
jnp
mov
xor
xchg
inc
pop
push
and
and
adcb
jns
pop
test
imul
inc
and
sbbl
sub
js
add
mov
int
mov
addb
outsb
mov
add
mov
test
icebp
fxch
add
sahf
aas
cmc
test
shrb
xchg
loop
icebp
mov
add
push
and
dec
mov
and
cmp
arpl
cli
cmpl
jmp
mov
loopne
jb
mov
mov
loopne
fs
pop
push
mov
mov
stos
add
shlb
call
fisubrs
xchg
addb
fmuls
pusha
push
add
ljmp
lcall
leave
xchg
add
nop
jns
test
and
pusha
inc
pushf
pop
xor
inc
andb
jl
xor
call
outsb
inc
and
mov
jne
out
mov
add
rolb
mov
jge
andb
mov
push
xor
cli
fisubl
jne
loop
pusha
add
mov
jmp
repnz
popa
popf
jo
daa
ret
daa
dec
pushf
mov
adc
pusha
rol
jecxz
shlb
lret
popa
jp
mov
sub
pusha
pop
and
inc
fcoml
jmp
or
pusha
out
cmp
loopne
inc
rol
sub
pusha
xor
or
sbbb
mov
add
scas
dec
mov
push
xor
jecxz
andb
ds
test
pusha
add
push
test
xor
add
or
sbb
rorb
xchg
cmp
fst
adc
pusha
loopne
and
cmc
in
jno
lock
loopne
and
js
cvtdq2ps
push
addb
enter
mov
inc
dec
or
pop
pushl
stos
and
pop
fwait
lea
insb
add
daa
popf
or
or
andb
mov
nop
imul
movsb
add
jge
pop
jae
rcll
sbb
dec
bound
aad
jg
jle
pusha
add
xchg
jne
mov
push
cwtl
pop
add
lcall
inc
andb
push
in
and
and
je
loope
mov
inc
testb
test
ror
and
sub
and
adc
int3
and
pusha
mov
add
imul
dec
imul
xchg
movsb
and
mov
lcall
pusha
xor
dec
pop
adc
mov
jp
add
adc
cmp
xchg
dec
mov
add
sbb
mov
rolb
cmp
cmp
cmp
jne
stc
das
add
xchg
rorl
inc
out
inc
mov
popa
and
mov
push
inc
or
shlb
aad
or
shlb
push
shlb
mov
rol
data16
xchg
push
addb
fld
loopne,pn
xchg
push
lds
xor
and
stos
cltd
sti
ja
rcl
xorl
jno
or
inc
pop
add
shrb
mov
shl
jecxz
xchg
push
inc
dec
stc
inc
add
lds
mov
mov
push
or
and
xchg
loopne
dec
dec
adc
jmp
lea
in
out
mov
add
jae
jle
pusha
shl
cmp
and
add
fwait
xor
or
loope
adc
xor
xchg
and
inc
cld
je
inc
mov
mov
xchg
popa
push
mov
and
test
rol
push
out
andb
fstpl
jmp
fildl
add
lods
pop
jnp
inc
arpl
pop
pushf
out
xchg
pusha
jnp
sbb
dec
out
rcr
xchg
sti
ret
gs
pusha
inc
add
sbb
mov
mov
add
and
inc
mov
adc
mov
add
pusha
lcall
movsl
and
inc
mov
addr16
mov
push
loope
jno
xor
shrl
xchg
inc
sti
mov
mov
sub
inc
push
rolb
sub
or
cmc
int3
repz
mov
cmp
mov
in
mov
add
and
pop
mov
jae
jle
std
push
jbe
dec
sbb
das
xchg
mov
shll
pop
test
loop
inc
testl
shlb
jle
pusha
sarb
add
sbb
pop
loope
mov
sub
add
stos
push
mov
mov
in
push
ret
mov
mov
adc
fsubr
rclb
inc
xchg
inc
and
loopne
rol
fs
in
pop
int3
mov
add
imul
rcr
sbb
nop
push
and
push
in
push
push
iret
jns
cmp
inc
inc
jnp
cld
push
cwtl
ss
mov
jle
flds
inc
arpl
xor
cmp
daa
dec
cmp
mov
pusha
pusha
insl
jle
mov
mov
push
inc
loopne
pusha
shlb
jl
cmpsl
sub
mov
stc
out
pop
mov
mov
inc
xchg
pop
mov
shrb
mov
stos
inc
hlt
pop
or
rclb
jno
loopne
cmc
sti
scas
loopne
std
push
loopne
cmp
push
andb
and
mov
inc
ret
jnp
and
sbb
pusha
add
xchg
add
out
mov
shlb
sbbb
jp
popa
pusha
sarl
mov
inc
popf
inc
ss
and
mov
add
mov
sbb
shrd
rcrb
mov
sbb
in
int
popf
js
jbe
push
sub
pusha
push
and
dec
repnz
loopnew
fwait
ss
aam
das
pusha
mov
mov
push
test
jecxz
popa
add
into
aam
loope
and
sub
sti
pushf
xchg
pop
mov
insl
mov
inc
inc
gs
fimuls
mov
inc
or
ljmp
sbb
or
push
ljmp
pop
fs
or
iret
jl
pop
aaa
and
xchg
mov
inc
pusha
lds
popf
mov
pusha
push
loopne
add
shlb
and
fs
cmp
mov
cmpsb
add
xor
popf
jb
or
mov
add
imul
das
aaa
cbtw
and
mov
icebp
aas
sub
cmp
push
mov
mov
mov
xchg
fisubrs
pusha
and
aaa
mov
push
nop
stos
add
nop
cmp
loopne
and
adc
and
inc
adc
cld
xchg
movsb
mov
scas
add
inc
ffree
xchg
push
and
cwtl
pop
add
add
inc
mov
add
mov
int
lret
push
pop
pop
inc
sub
jbe
and
pusha
or
popf
sbb
push
out
add
sbb
add
jbe
push
mov
cmovae
les
outsl
and
cmp
sbb
shlb
pusha
add
and
xchg
add
fdiv
addb
xchg
jno
mov
inc
nop
iret
fisttpl
and
push
lods
and
int
test
add
bound
jns
out
loopne
in
loopne
jmp
subb
xlat
inc
leave
lods
andb
pusha
shrb
loopne
mov
inc
enter
jb
cmpsb
inc
add
cmpsl
xor
lds
jno
in
inc
sub
addb
add
pop
nop
mov
lea
push
push
je
inc
stc
mov
imul
sbb
mov
aam
mov
lahf
push
test
insb
xchg
push
call
adc
jns
cmpsl
jmp
dec
cli
or
ret
add
rorb
pop
pop
or
popf
bound
dec
mov
mov
aam
test
mov
and
fisttpll
mov
shl
rorl
jmp
out
test
fs
loopne
mov
add
je
xchg
shlb
mov
dec
pop
xchg
lods
inc
rcrb
outsb
arpl
mov
add
ss
shll
jl
shrb
daa
sbb
icebp
divb
mov
mov
and
add
and
rol
adc
xorb
adc
sub
mov
jg
jl
int
daa
push
or
and
mov
dec
fists
enter
adc
add
andb
jo
andb
mov
adc
data16
aam
shl
add
mov
in
pusha
outsb
pop
push
sub
cmc
xchg
dec
mov
adc
shr
fisubrl
shlb
inc
and
sub
adc
add
mov
pop
out
aas
ljmp
addl
out
ret
imul
out
or
xor
cmp
add
loopne
add
outsl
adc
mov
push
aam
and
or
inc
mov
andb
rorb
ljmp
inc
mov
add
adc
aaa
movsl
lock
ss
leave
test
loopne
sbb
enter
cmc
inc
es
rorb
mov
shlb
dec
int3
iret
test
add
lods
into
testb
cmp
mov
add
mov
ja
cmpsl
das
xchg
jecxz
pop
add
and
andb
mov
inc
loopne
mov
dec
or
in
dec
fnstcw
aam
pusha
or
orb
add
lods
and
mov
inc
and
lock
rol
lret
push
pop
lcall
add
or
dec
shll
shrl
xor
arpl
sbb
mov
and
aaa
mov
pop
xor
inc
pop
insl
push
jmp
pop
cmp
cmpl
push
in
mov
rorb
fisubl
stos
pusha
pusha
pop
inc
pop
das
xor
pusha
iret
imul
and
push
sub
cmp
sbb
movsb
rolb
mov
inc
and
adc
aam
mulb
push
cmpsl
inc
mov
add
loopne
out
rcll
sbb
out
loopne,pn
cmp
jo
and
subl
and
pop
stos
addb
inc
inc
push
out
clc
push
shrb
mov
insl
addb
cmpsl
dec
xchg
add
out
pop
ds
pop
mov
arpl
push
mov
jg
nop
mov
pusha
subb
roll
lret
pop
sub
pusha
push
fistl
sub
fsubrl
mov
sbb
dec
mov
ja
leave
xchg
outsl
addb
in
into
insl
sbb
add
xchg
sbb
adc
das
popf
lods
mov
dec
fs
xlat
adc
fildl
clc
and
dec
out
ror
mov
or
fstpl
addr16
popf
inc
arpl
mov
test
addr16
addb
xor
add
cli
loopne,pn
dec
stos
sbb
loop
cli
lahf
sub
pusha
dec
push
mov
hlt
and
and
andb
cmc
fnsave
jmp
sub
mov
inc
inc
and
pusha
icebp
push
loopne
nop
sbb
scas
jo
dec
cs
mov
ds
rcll
movsl
pushl
jle
mov
xorb
add
pop
lahf
andb
rolb
mov
cltd
xchg
stos
jmp
push
xchg
push
js
cmp
shlb
fsubs
loopne
lds
mov
pusha
in
nop
and
shlb
mov
and
jne
mov
mov
sub
aam
insb
insl
out
mov
imul
mov
push
stc
testl
pushf
and
xchg
loopne
shlb
andb
fisubs
rolb
loope
mov
and
loopne
das
fisubrs
aaa
ds
cmp
sbb
or
and
push
ficomps
jnp
imul
icebp
jae
pusha
loopne
jae
punpcklwd
rclb
pop
mov
add
cs
inc
add
pusha
into
sub
loopne
ja
hlt
mov
imul
inc
add
lret
loopne
mov
inc
test
dec
pop
cwtl
adc
dec
push
fimuls
lea
mov
and
pushf
pop
mov
pusha
push
add
and
repnz
andb
test
pushf
cmp
in
sub
inc
outsl
mov
outsl
and
inc
fdivr
stos
cmc
sub
imul
and
add
add
iret
gs
rorb
loopne
enter
mov
orb
rol
jae
mov
add
sub
add
repz
and
jne
das
mov
jmp
mov
dec
mov
popa
leave
sub
mov
pusha
inc
push
inc
pusha
and
sbb
in
fwait
mov
adc
scas
and
shlb
bound
mov
loopne
fwait
dec
cltd
and
das
test
loope
mov
xchg
sbb
movsb
mov
sub
dec
pusha
js
mov
adc
add
and
mov
add
pop
xchg
jmp
mov
jge
lret
and
cmp
mov
inc
and
arpl
add
rorl
icebp
sub
movsl
mov
push
add
aas
pushl
divb
and
mov
xchg
pop
ret
mov
je
ljmp
mov
xor
and
xchg
lock
mov
bound
add
pop
aas
cmp
test
inc
aas
cmp
rolb
loopne
sbb
xlat
sub
andb
xchg
aaa
xor
add
mov
mov
loopne
mov
jmp
mov
aam
xor
adc
int
outsl
sub
add
ja
sbb
cmp
push
loopne
jne
insb
stc
lahf
mov
js
scas
mov
add
pop
cltd
out
mov
stc
jg
nop
icebp
mov
into
scas
lahf
sbb
push
je
movsb
inc
subb
adc
pop
sbbl
aaa
negb
andb
cmpsl
fdivs
sarb
push
iret
and
mov
adc
dec
cmp
loope
pop
inc
add
jns
add
js
rclb
xor
and
add
rolb
jle
or
sub
inc
inc
or
loopne
fcmovb
lds
es
or
mov
enter
cld
int3
xchg
into
mov
loope
push
out
jb
adc
adc
pop
ret
add
add
inc
push
and
leave
cltd
cli
push
lret
or
orb
pop
in
into
icebp
imul
andb
adc
pop
mov
leave
loopne
and
data16
or
add
stos
mov
xlat
in
xchg
cmp
cwtl
sahf
inc
pushf
dec
adc
inc
repz
add
add
add
fs
mov
and
loopne
sbb
cs
dec
fcmovnu
pcmpeqb
imul
ret
lock
addb
lods
pusha
inc
in
cmpsb
loopne
in
xchg
subl
mov
cmp
out
pop
push
add
jp
loopne
push
ja
jno
adc
xlat
push
mov
mov
push
int3
mov
stos
sti
lea
xchg
fwait
xor
and
movsb
loopne
into
arpl
pusha
inc
dec
movsl
jb
mov
push
cltd
popl
sbb
aad
arpl
filds
lods
movsl
push
pop
dec
jmp
mov
dec
inc
adc
pop
and
jl
imul
mov
ds
clc
push
and
shl
dec
push
ljmp
mov
dec
daa
int3
scas
pusha
add
dec
jg
xor
test
xor
lret
and
gs
fwait
xor
push
sub
pop
sbb
mov
shll
add
add
xor
repz
out
cmpsb
add
std
cmc
sub
mov
push
sbb
and
shlb
loope
xchg
inc
std
xor
pop
push
mov
mov
jnp
mov
and
and
mov
lods
push
push
pusha
rcr
add
mov
loopne
dec
scas
and
rol
and
rcl
cltd
mov
cwtl
pop
fadds
pop
insl
addb
pusha
and
xor
add
xor
and
mov
subb
mov
xor
cmp
testb
add
add
push
sbb
and
cmp
inc
inc
add
pusha
cli
es
mov
out
pusha
and
decb
shlb
inc
xchg
aad
stc
fisubrs
rcr
cmp
sbb
mov
pusha
or
scas
mov
add
push
xor
pop
sub
pusha
out
popa
ret
mov
in
fisubrl
push
shrb
movsb
add
int3
jle
aas
popf
mov
jo
ret
pop
cld
movsb
loopne
js
cmp
pusha
cmp
mov
or
fisubl
lods
inc
loopne
adc
jle
leave
repnz
cmp
dec
subps
mov
rcrl
cltd
lds
add
and
aaa
pop
lods
inc
loopne
add
addb
add
cmp
in
fnsave
cmpb
mov
push
dec
lods
rep
outsl
mov
mov
rol
mov
loopne
jle
cmp
daa
in
movsl
cmp
int
repz
jmp
in
sahf
add
popf
test
out
das
push
rol
das
insb
mov
xorb
loopne
popa
pop
push
insb
mov
ljmp
fiadds
or
pop
jo
inc
pop
mov
xor
pop
inc
pusha
lret
loopne
pusha
and
cmpsl
data16
shlb
fistpl
das
lods
add
aas
mov
cwtl
cld
dec
jb
mov
popa
lcall
inc
stos
add
cmp
mov
add
popl
test
mov
testl
fstps
xor
loope
jp
pop
mov
and
jl
pop
pop
imul
jmp
div
ret
popa
pusha
sbb
scas
and
xor
pop
je
mov
loopne
clc
cmp
sti
addb
jnp
pop
test
dec
fisubrs
push
imul
xchg
jne
cmp
jmp
mov
pop
cli
cmpsl
int
sub
ret
pusha
inc
sahf
sbb
idiv
push
ja
dec
jle
out
pop
into
shll
mov
and
faddl
sahf
mov
sbb
mov
fucom
and
sub
sbb
jmp
cmp
shrb
pop
pop
jbe
inc
stc
or
clc
adc
xor
jmp
add
cmp
inc
and
add
lds
loopne
pushf
sub
add
outsl
push
inc
pop
jb
sub
js
in
xchg
pop
aas
push
das
inc
ficomps
scas
loopne
stos
pusha
rol
jge
push
push
rol
test
inc
sub
scas
dec
addr16
cmp
jae
push
jb
ja
inc
pop
shr
and
cmp
mov
decb
dec
in
mov
in
lahf
cmc
iret
sbb
adc
pusha
dec
jecxz
pop
ret
enter
rcr
push
add
add
insl
push
insb
je
add
std
push
mov
xchg
sbb
stos
add
lea
fcomp
mov
sub
add
add
sbb
cmp
sbb
ds
and
mov
vmwrite
mov
pop
int
jo
adc
ficoms
ret
icebp
mov
xchg
daa
pop
das
or
mov
ret
push
std
dec
xorl
sahf
rcrl
insl
sub
add
fldenv
loop
loopne
orl
test
inc
popa
pop
inc
dec
xchg
aam
out
rol
fcomp
mov
into
adc
inc
xchg
sub
and
dec
jns
fdivr
inc
aam
add
arpl
inc
dec
scas
in
xchg
xchg
jno
in
imul
in
aas
pop
mov
dec
xlat
cltd
mov
test
cmc
fs
lods
pusha
and
push
mov
dec
out
ljmp
stos
rolb
pop
sbb
pop
testl
mov
in
rol
sub
dec
mov
mov
or
sbb
jge
cltd
or
psllw
rolb
sarb
mov
in
jbe
rolb
pop
and
cmp
int
xor
daa
pop
cltd
arpl
stc
pusha
stc
fdivr
dec
add
xchg
sti
adc
push
sub
inc
iret
adc
int3
xchg
inc
push
push
jbe
in
inc
dec
jb
sbb
jnp,pt
test
je
out
outsl
ljmp
lods
and
or
inc
aaa
xchg
iret
pop
xchg
mov
add
test
and
cli
rcll
les
mov
hlt
or
sbb
mov
lea
scas
test
shlb
inc
pop
mov
cmp
cld
jb
and
out
lret
orb
andb
rolb
pop
test
pusha
inc
test
inc
mov
mov
pop
shll
xchg
xor
mov
jmp
sbb
and
iret
mov
xchg
dec
ror
sarb
fs
mov
xor
jp
add
jae
pusha
add
or
xor
addb
and
inc
icebp
mov
mov
jo
outsl
sbbl
mov
mov
mov
pop
setge
ja
and
sub
add
mov
ror
cmp
mov
jno
aas
out
addb
mov
fsubrl
sbb
in
jle
mov
add
pop
jecxz
movsl
add
and
pusha
mov
cmp
enter
xchg
and
sbb
shrb
addb
fdivs
add
sub
mov
jl
sub
push
pusha
andb
fidivrs
sbb
jo
pusha
pusha
cwtl
fnstcw
adc
xchg
mov
mov
add
pusha
loopne
xchg
into
aaa
mov
pop
jecxz
pop
or
or
xor
stos
and
jns
mov
outsb
sbb
je
add
inc
xor
stos
stc
inc
jmp
les
mov
add
loopne
icebp
sub
and
pusha
out
mov
inc
adcb
pop
pop
xchg
and
mov
pop
mov
mov
lds
mov
inc
dec
loopne
jo
into
sarb
mov
shlb
mov
inc
mov
inc
mov
shr
sub
jg
call
daa
fdivr
adcl
cli
scas
jle
fxch
sub
test
shr
inc
orb
pushf
cmc
lret
or
xchg
test
pusha
pusha
fcmovu
fldenv
in
subl
add
cmc
xchg
and
pop
push
sub
add
sbb
mov
jg
pushf
jecxz
and
push
shlb
jo
xchg
sub
mov
rcrb
aad
or
das
sarl
andl
cmc
out
fists
rcrl
insl
xchg
jbe
add
cld
pop
dec
sub
inc
sbbb
out
enter
adc
std
jmp
daa
mov
add
push
mov
push
pusha
and
hlt
mov
mov
sarb
sub
pop
mov
pusha
fstpt
sub
and
inc
rolb
pusha
stos
addb
jmp
mov
lock
movsl
idivl
and
push
bswap
test
inc
lahf
cltd
jno
int3
push
mov
int3
test
mov
andb
pop
xchg
pandn
and
imul
in
jb
or
and
sbb
or
inc
mov
add
out
pop
in
ret
orb
mov
and
int
loopne
fisubrl
sahf
fbld
adc
and
or
pusha
jno
xor
sbb
sub
push
cmp
inc
xchg
mov
add
scas
addb
loopne
setle
fadds
xor
out
je
push
popl
xlat
or
mov
mov
add
jae
mov
xorb
dec
jl
push
jmp
lcall
mov
and
popa
cmpsb
addb
shll
cltd
push
mov
imul
sarb
add
mov
outsl
testb
loopne
add
popf
mov
idivb
stos
cltd
cmp
adc
fsubl
jnp
fwait
and
inc
push
pusha
pusha
jns
out
pop
jle
notb
xor
inc
das
push
cmp
mov
loopne
addr16
push
and
mov
sub
pop
insl
aaa
cli
jb
aad
push
cld
adc
enter
mov
push
cltd
mov
mov
add
and
add
cltd
pop
imulb
pusha
rorb
dec
fwait
and
movsb
add
xor
pusha
sti
mov
and
cmp
and
inc
jnp
pop
je
or
pusha
cwtl
iret
enter
add
mov
mov
push
and
and
mov
fldenv
and
and
gs
add
out
les
cltd
mov
shll
pusha
mov
ror
popa
push
insl
pusha
pop
shll
pusha
inc
mov
xor
in
lcall
jecxz
sbb
jl
adc
mov
pop
lock
dec
jo
push
inc
mov
xchg
xchg
sub
pusha
or
jns
loope
insl
ret
dec
adc
inc
fsubl
add
loopne
adc
mov
push
cltd
mov
and
mov
xchg
dec
test
pop
xchg
shll
addb
inc
enter
mov
push
daa
push
mov
add
lcall
iret
in
mov
ret
loop
adc
inc
and
xchg
stos
xchg
add
ja
andb
js
sbb
add
mov
jl
rol
imul
inc
pushf
lret
rolb
dec
leave
or
loopne
pop
jl
add
nop
inc
and
rol
mov
xchg
leave
or
pop
pop
pop
cmp
push
aad
shrb
loop
ret
jno
ljmp
sub
xor
pusha
xchg
adc
adc
andb
arpl
loop
jo
mov
mov
loopne
daa
xor
sahf
dec
or
add
push
jp
push
call
ja
push
int3
lret
push
add
in
aas
inc
ss
or
cmp
dec
das
pop
dec
fiadds
inc
cmp
nop
mov
add
cwtl
movsb
mov
mov
and
lds
jne
cs
mov
popa
aas
sbb
jp
mov
sbb
jne
insl
outsb
xlat
ficoml
ret
adc
inc
rclb
add
inc
mov
loopne
cli
or
sti
mov
cmp
dec
sbb
lea
jge
cwtl
push
inc
or
sarb
inc
and
and
ror
inc
inc
pushf
mov
sbb
mov
jg
jp
sbb
inc
sub
pusha
sub
inc
andb
inc
pusha
cmpsl
mov
jbe
sbb
mov
test
subb
jle
fwait
mov
addb
xor
out
pop
out
outsb
lcall
pop
shlb
adc
jbe
pushf
cmp
sub
sbb
sub
cmpsb
add
fstps
xchg
dec
test
add
jg
int
gs
pop
fnstsw
je
addb
inc
pusha
pop
jae
arpl
dec
mov
movsb
and
ja
dec
jge
push
push
mov
xor
stos
fwait
mov
inc
test
fcmovu
and
in
and
rorb
add
fsubs
mov
mov
loopne
inc
call
sbb
cli
cmc
stos
insl
int
and
mov
mov
pop
outsl
sbbl
arpl
out
jb
push
popf
out
adc
shlb
push
fsubl
mov
add
aam
or
neg
jecxz
push
loopne
sti
clc
inc
aad
cmp
into
pop
out
pusha
fwait
test
and
jnp
or
pusha
ja
add
pusha
xchg
push
loopne
insb
xor
repnz
loopne
les
or
inc
mov
lods
loopne
mov
pusha
lcall
shrb
repnz
jge
mov
stos
mov
inc
push
fsubrl
sbb
push
inc
sbb
clc
cltd
mov
pusha
inc
mov
and
pop
stos
shlb
and
inc
loope
mov
cmpb
pusha
shrb
dec
bound
jp
and
rcl
movb
mov
jno
lods
addb
push
sub
pusha
rorb
shl
mov
mov
jno
test
mov
shl
sub
dec
push
jno
rolb
inc
andb
in
sarl
inc
hlt
xchg
lahf
add
shlb
mov
jnp
jp
mov
in
cltd
mov
inc
lock
and
and
inc
loopne
sar
xor
push
shrb
dec
imul
xchg
push
lret
and
shll
push
push
insl
pop
mov
add
stos
push
and
cli
jecxz
shrl
xchg
mov
push
rolb
or
insl
pop
addr16
popa
push
mov
lods
lock
popf
out
mov
hlt
mov
xor
and
pusha
lret
jnp
daa
repz
repnz
dec
popa
sbb
inc
xor
cmp
fnsave
jo
cli
or
loopne
lds
or
subb
inc
mov
add
out
add
pusha
sub
and
nop
dec
pop
sbb
pop
pop
or
inc
ljmp
cltd
ds
andb
mov
cs
je
mov
add
add
pusha
mov
loop
rclb
and
out
enter
cmp
or
and
and
pusha
inc
add
push
das
addl
out
mov
testl
jb
add
rcrl
mov
test
jmp
dec
dec
dec
push
sub
cwtl
leave
mov
sarb
xor
sbb
xor
mov
jp
add
cmpsl
shrb
add
push
andb
inc
add
in
in
xchg
ja
testb
inc
int
mov
jle
inc
rclb
mov
and
adc
pop
sub
shl
pop
movsb
pusha
inc
mov
pusha
add
mov
and
xorb
fbld
lcall
and
loopne
inc
adc
packuswb
mov
mov
popa
dec
inc
outsb
pop
fistpll
add
outsb
mov
sub
xchg
and
or
enter
cmp
addb
mov
cltd
xchg
outsl
pop
lahf
mov
inc
jo
dec
mov
sub
roll
pop
insb
arpl
rcl
daa
cmp
mov
push
add
fs
mov
jnp
xor
mov
jae
data16
lods
mov
sbb
xor
dec
lds
jmp
or
dec
mov
sbb
fistpl
add
scas
mov
shrb
and
sbb
inc
mov
and
lock
mov
out
or
and
cmpsl
ret
shrl
in
fwait
icebp
cmp
add
and
xor
shl
out
push
lea
pusha
add
dec
lcall
jnp
popa
movsb
add
push
test
and
inc
and
enter
pop
repnz
or
rolb
pop
popf
addb
or
loopne
and
loopne
xchg
inc
imul
loopne
andl
xor
mov
sti
mov
jne
lea
jmp
sub
loopne
and
fs
xor
mov
and
inc
and
mov
dec
push
test
inc
aam
xor
mov
cld
xchg
push
loopne
ret
movsl
adc
pop
and
mov
lods
loop
pop
std
push
ja
loope
sahf
and
insl
add
dec
arpl
test
inc
adc
cmpsb
mov
push
push
bound
loopne
add
shlb
add
sbb
mov
lock
and
pusha
sbbb
xchg
pusha
jmp
adc
and
add
cmp
mov
sub
and
bound
int
rol
sbb
mov
mov
adc
pop
xchg
enter
nop
ja
daa
mov
fmull
std
add
imul
shl
stos
rolb
push
push
jmp
inc
stc
loopne
pop
rolb
mov
cltd
pop
dec
ja
and
repnz
in
adc
rcrb
pusha
and
mov
nop
gs
out
movsb
and
cmp
fcmovu
pop
and
shr
lea
mov
and
mov
add
loop
loopne
enter
sbb
fdiv
mov
insb
lahf
sahf
scas
shlb
mov
andb
data16
daa
das
test
stos
xlat
shl
push
push
xor
add
xchg
and
and
sbb
inc
insl
cli
fs
jno
andb
ror
pushl
ret
rolb
mov
cmpsl
les
pop
xor
add
pusha
or
ljmp
mov
inc
or
xor
out
into
cs
ljmp
jnp
fwait
jne
out
and
pop
test
loopne
neg
mov
inc
mov
and
mov
pop
and
ljmp
jl
mov
orl
and
add
js
jmp
sub
add
dec
sub
cmpsb
pusha
adcb
nop
rcl
cs
pusha
pop
in
inc
push
and
fcoms
out
xchg
inc
cmpl
jns
jae
sbb
js
lcall
ljmp
mov
sti
mov
xchg
add
shrb
push
sub
push
add
fcoml
outsl
inc
std
jecxz
and
les
xor
add
inc
add
push
and
loopne
push
add
mov
loopne
xor
xchg
sbb
push
pusha
and
mov
out
ret
jmp
pop
and
pusha
movlps
pop
sub
clc
xchg
sub
stc
and
jns
int
cs
pusha
sti
test
add
add
in
icebp
ret
outsb
pusha
and
pop
mov
imul
mov
cld
and
das
jle
cli
push
addb
andb
cltd
mov
loopne
clc
addr16
dec
lods
addb
mov
aam
xor
in
rclb
js
mov
and
cmp
clc
test
bound
loopne
popa
loopne
mov
loopne
jne
repnz
add
enter
pop
add
scas
mov
add
xlat
inc
mov
bound
je
les
std
cmp
sbb
and
mov
outsl
shl
lret
je
mov
pusha
sar
lds
mov
pop
xchg
xlat
sbb
cmp
mov
add
xor
and
subb
lock
or
sub
loopne
jae
xlat
adc
xor
pusha
pusha
mov
insb
push
mov
and
mov
jns
xchg
dec
push
jecxz
imul
call
or
pop
mov
bound
xor
data16
pop
int
addb
or
pop
adc
pusha
mov
xor
stos
add
push
or
add
cltd
sub
jmp
icebp
sbb
pusha
movsl
aad
mov
insb
gs
jp
pop
push
out
lea
jnp
es
das
aas
jnp
sti
cld
int3
jbe
movsb
loopne
dec
xchg
sub
and
ljmp
mov
adc
mov
lods
jno
and
sub
sarb
mov
adc
mov
mov
and
push
add
fs
mov
movsl
out
movsl
mov
xor
push
inc
rcl
lods
mov
mov
shlb
jo
movsb
loopne
dec
push
cmp
cld
xchg
cmc
aas
push
jnp
inc
mov
les
push
sbb
mov
dec
sahf
bound
adc
xor
je
or
inc
inc
loope
xor
dec
call
mov
xor
repz
repnz
mov
xchg
test
mov
jae
into
sbb
mov
sbb
jno
push
ds
inc
and
adc
xchg
mov
loopne
mov
dec
scas
shlb
lods
addb
out
loopne
movsl
and
test
popf
jnp
rcrb
rorl
mov
add
pop
or
pusha
shlb
xchg
jno
imul
xor
out
adcl
fdivrs
or
cmp
adc
mov
in
lods
inc
inc
mov
xor
xchg
jae
rol
push
xchg
mov
add
add
jp
imul
shlb
add
xor
cmp
xchg
ja
jle
in
inc
add
push
mov
xchg
mov
scas
addb
pop
sbb
test
ja
outsw
out
fcompl
int
xchg
sbb
mov
or
jae
insl
sbb
cmpsl
jp
and
movsb
loopne
jb
adc
addb
jne
fs
mov
adc
mov
roll
add
fsubp
jne
adc
fsubrs
cmp
icebp
mov
andb
xor
add
loopne
inc
mov
repnz
fildll
mov
jne
shl
sbb
out
pmuludq
push
imul
jp
xchg
pop
jp
sbb
pop
inc
loopne
pop
aas
iret
sbb
out
leave
jbe
cli
dec
rcrb
inc
roll
sbb
sub
cmp
push
mov
add
lcall
das
mov
inc
lahf
or
push
test
push
push
mov
insl
out
mov
add
dec
mov
add
dec
jb
loopne
push
outsl
jmp
push
in
mov
pop
into
in
out
inc
shrb
inc
sbb
or
pop
call
mov
addl
xchg
jl
add
mov
stos
pusha
shrb
and
pusha
loopne
sbb
sbb
and
shr
inc
std
add
adc
sbb
mov
int
movsb
add
jo
adc
aas
add
repnz
pusha
cmp
xlat
mov
push
mov
pop
ja
pop
fs
sub
inc
mov
and
sahf
data16
and
int
add
cmp
dec
jmp
inc
inc
xchg
pusha
adc
pop
addr16
ret
enter
inc
int3
mov
pop
push
pusha
and
add
mov
call
mov
fnstenv
mov
inc
pusha
cmp
shlb
xor
pusha
and
jae
fisttps
ljmp
and
call
mov
pop
icebp
leave
test
loopne
mov
mov
aas
in
insl
xor
push
shll
pusha
pusha
and
add
in
sbb
push
push
test
add
mov
xlat
sbb
cli
fadd
jno
and
and
iret
mov
loopne
cmpsb
and
push
loopne
sub
cmp
int3
or
add
sbb
add
int3
fiaddl
pusha
and
cmp
sbb
movsl
imul
pop
mov
pusha
shrb
xchg
psllq
ret
xchg
push
cwtl
mov
inc
mov
adc
movsl
mov
and
orb
jae
inc
xorl
popa
popf
sub
mov
subb
inc
pusha
adc
loopne
lahf
mov
add
lods
and
stos
ficompl
arpl
adc
sahf
push
mov
adc
loopne
mov
xchg
adc
xor
add
into
xor
or
inc
shlb
mov
loopne
mov
rorb
fdivrl
mov
cmp
pop
testl
gs
and
jp
stc
mov
add
mov
mov
pusha
stos
fstpl
mov
mov
pusha
loopne
shlb
jae
jno
push
inc
pusha
nop
lods
rolb
mov
add
mov
faddl
xlat
or
add
pop
sarl
jl
xor
ss
gs
clc
out
in
lds
xor
adc
mov
adc
sbb
adc
outsl
jbe
rol
jno
cmp
xor
add
shlb
sbb
or
bnd
xchg
cmp
pusha
and
shl
inc
loopne
loopne
loopne
ja,pt
adc
gs
rclb
orb
mov
out
fwait
jo
cmp
mov
inc
shrd
imul
sub
andb
pusha
sarb
pusha
adcb
xchg
sar
in
mov
mov
add
xchg
rcl
lcall
out
daa
sahf
mov
pusha
mov
movsl
jbe
andb
push
mov
shrb
xchg
sbb
das
jo
out
test
and
arpl
cmp
and
and
add
jno
and
lea
add
push
adc
mov
xlat
cltd
jg
and
insl
mov
jbe,pt
dec
jo
sbb
and
mov
addb
pop
xchg
cmpsb
and
cs
addb
pusha
push
loopne
cld
stc
ss
cltd
sbb
jnp
inc
lock
es
mov
rolb
push
dec
cmpl
addb
fldenv
jmp
insl
jae
pop
xchg
adc
addb
clc
pop
aam
xor
mov
mov
and
out
shlb
int3
in
lahf
add
shlb
mov
mov
push
mov
mov
push
push
xchg
sub
sub
mov
arpl
xor
mov
add
rorl
aam
mov
ret
push
xor
loopne
ss
mov
subb
addr16
add
repz
arpl
jbe
ret
mov
decb
mov
dec
pop
or
loopne,pn
jle
ret
or
ds
jbe
push
mov
inc
mov
mov
cmp
enter
pop
test
inc
sbb
inc
mov
pusha
and
into
mov
xor
pop
shr
cltd
mov
loopne
mov
add
loopne
or
pusha
test
loopne
cmpsl
cmc
add
push
jmp
push
insl
popf
es
inc
lahf
test
std
loopne
and
mov
ds
pop
je
sbb
dec
aad
andb
xchg
lods
hlt
lret
inc
adc
shl
lods
inc
add
or
xor
adc
add
mov
sub
inc
mov
dec
fsubp
out
mov
push
push
jecxz
mov
divl
out
sbb
mov
mov
divb
in
sti
push
scas
rolb
xchg
pop
mov
pusha
cmp
mov
aam
sahf
je
orl
xchg
rcr
dec
outsb
insl
hlt
inc
pushf
xchg
stos
pusha
mov
subb
andb
mov
xchg
mov
lds
inc
add
sbb
mov
push
fsub
mov
int
inc
jne
fwait
dec
inc
movsb
mov
lcall
push
xchg
enter
push
adc
fsubrs
cmp
xchg
nop
orl
sbb
jb
xor
pop
jge
rcrl
mov
add
mulb
jb
insl
push
and
cmpsl
mov
shll
xchg
dec
mov
shlb
sti
lea
nop
add
and
mov
push
inc
loopne
push
dec
arpl
in
cld
ljmp
and
loopne
imul
jge
imul
dec
bound
inc
inc
out
std
mov
sub
add
pusha
imul
in
cli
jle
dec
daa
push
jno
dec
xchg
cmpsl
addb
icebp
jns
ja
xchg
xor
mov
fisttpll
addb
or
jmp
ret
jecxz
std
test
add
mov
sbb
into
inc
and
mov
fisttps
and
rcrb
loopne
pop
sahf
ja
pop
je
push
idivl
movsl
out
adc
rol
andb
std
adc
or
dec
mov
loopne
mov
xchg
mov
mov
ret
sub
sarb
dec
in
mov
sbb
not
scas
xchg
inc
xlat
or
mov
addb
aam
in
cwtl
adc
and
cld
stos
pusha
inc
int
dec
mov
pusha
sarb
aam
cmpsb
mov
les
push
loopne
sub
xorb
sub
insl
mov
leave
adc
loopne
add
and
lcall
inc
mov
div
insl
popw
mov
loop
and
push
repnz
ja
ds
cmp
bound
xchg
aaa
xor
xchg
cltd
pop
cmp
mov
fisubs
mov
clc
xchg
sub
and
les
mov
inc
inc
push
mov
jl
rolb
stos
rol
add
call
cmp
sub
push
out
push
lcall
stos
sbb
mov
loop
mov
dec
dec
push
addb
rclb
insl
insl
divb
sar
incl
fs
jle
pop
xor
mov
sbb
inc
and
sbbl
fs
jp
std
arpl
cmp
addr16
jb
leave
icebp
icebp
inc
lock
sbb
sub
xor
loope
inc
add
jge
repnz
cmp
inc
xorb
or
mov
fnstenv
mov
xchg
mov
adc
dec
fdivl
pusha
fildl
push
shlb
add
subb
and
inc
mov
push
fcomps
sbb
ficoml
dec
and
push
filds
mov
enter
add
insl
popf
xchg
in
cli
test
and
mov
rcl
xchg
or
cld
adc
insb
movsl
jo
jns
xchg
cwtl
ret
das
and
jle
gs
or
loopne
out
out
ficomps
jecxz
fdiv
and
stos
loopne
js
and
ja
shl
pushfw
jmp
cmpsb
mov
in
cmpsl
lret
pusha
mov
and
nop
inc
insb
das
mov
add
pop
push
insb
adc
jo
fidivs
mov
cwtl
sbb
add
and
jge
xchg
loope
dec
dec
dec
xchg
pusha
or
add
dec
cmc
test
test
loopne
xchg
daa
dec
sbb
andb
shlb
dec
testb
and
push
sbb
jno
push
or
fwait
adc
pop
data16
inc
jno
in
inc
loopne
inc
pusha
add
adc
mov
jmp
add
jg
loopne
out
imul
xchg
idivl
jg
shl
psubb
push
into
dec
cmpsb
pusha
rcrb
xor
repnz
mov
rcrl
pop
test
add
adc
and
and
out
xlat
cmp
insl
in
and
addr16
push
mov
ja
and
cmpb
mov
aam
and
xorl
dec
jo
mov
insl
lock
and
and
xlat
clc
out
mov
pusha
jne
mov
lret
inc
frstor
clc
addb
movl
push
jns
cld
mov
xchg
ljmp
add
sub
subl
mov
scas
and
jnp
movhps
lods
fisubrl
loopne
xlat
and
inc
sbb
cmpsb
inc
and
lret
adc
es
cmpb
cmpsb
inc
add
inc
daa
cmpsb
and
adc
decb
push
mov
jl
inc
and
rolb
scas
ret
mov
and
mov
loope
mov
inc
mov
sti
cmp
sahf
pop
mov
or
add
ficomps
mov
andb
or
pusha
and
outsb
lock
rcll
loopne
insb
in
imul
inc
stos
push
mov
and
inc
dec
inc
leave
cmc
aam
pusha
loopne
dec
push
dec
jmp
jne
fdiv
ja
or
leave
in
cwtl
call
push
dec
mov
sub
loopne
push
ret
inc
mov
lahf
addb
loopne
aaa
div
and
mov
pop
ret
loopne
fs
pusha
add
notl
pop
pop
jnp
mov
dec
out
sub
mov
or
pusha
rcrb
arpl
and
repnz
add
clc
xchg
pushf
sub
mov
push
jmp
xor
shlb
push
and
vpslld
mov
ror
scas
insb
pop
shl
push
and
mov
insb
dec
lret
jo
add
addb
add
lock
or
and
rolb
add
and
leave
mov
mov
and
andb
addb
inc
loopne
cmp
add
push
stc
cmpsb
add
inc
mov
cmpsb
pusha
inc
mov
outsb
adc
ja
mov
pusha
test
mov
sbb
sbb
cmpsb
shl
lret
mov
sub
orb
sub
sub
into
mov
pop
wrmsr
js
pusha
mov
lcall
inc
insl
out
leave
aaa
scas
loopne
add
add
mov
out
aaa
scas
add
xor
loope
inc
mov
gs
rol
lahf
push
push
popf
leave
out
mov
cmp
jae
add
dec
push
sub
rcl
add
inc
xchg
rclb
pop
or
aad
push
test
ss
out
xor
jp
xor
mov
xor
jns
add
mov
inc
push
dec
lret
shlb
pusha
cmp
fisubl
andb
stc
jne
fists
iret
cmpsl
cmp
adc
test
inc
aam
and
test
inc
dec
xor
mov
loop
js
mov
sti
int
shlb
mov
jge
test
inc
lret
inc
lock
pusha
xor
int3
sub
pusha
inc
hlt
or
add
cld
adc
add
dec
or
insl
gs
dec
stos
sub
rcrb
ficoms
inc
lds
xchg
loopne
adc
int
push
jns
inc
xlat
nop
xor
arpl
sahf
push
xor
movd
addr16
inc
mov
and
or
cltd
adc
adc
pop
adc
out
mov
jmp
add
adc
push
fdivl
aam
shll
add
leave
packsswb
push
add
mov
push
rorl
dec
and
outsb
lock
cmp
and
cwtl
pusha
mov
out
psraw
divps
fs
add
jl
testb
and
sub
loopne
inc
loopne
scas
aam
push
sub
shrb
inc
test
repz
loopne
mov
out
inc
bound
rolb
dec
shl
fdivs
pop
push
outsl
sti
push
call
mov
adc
cmp
pusha
cmp
scas
mov
aad
sbb
mov
loopne
and
addb
dec
mov
push
pusha
loopne
movsb
shlb
jge
xchg
xchg
lahf
mov
push
or
sbb
icebp
push
and
sbb
add
adc
add
jp
imulb
xor
int3
popl
push
scas
add
inc
loopne
outsl
mov
mov
mov
inc
inc
into
jne
jge
inc
cmpsl
pop
jmp
mov
push
adc
xchg
add
and
add
lret
cmp
and
add
sbb
or
pusha
shlb
in
inc
add
pusha
adc
inc
sub
cmp
pop
inc
outsl
cwtl
stos
loopne
or
leave
stc
mov
negb
mov
loope
andb
dec
out
cmp
inc
jno
push
dec
imul
sub
pop
fcmovnu
lcall
push
jge
push
push
pop
push
loopne
adc
adc
in
lods
and
xor
and
add
aad
mov
adc
jl
in
cmpsl
inc
mov
sahf
mov
pusha
loopne
ljmp
mov
insl
mov
andb
push
mov
jb
cmp
fbld
rolb
xlat
cmp
adc
mov
inc
inc
cmp
lods
inc
and
mov
jno
leave
das
pop
shll
push
sbb
mov
pop
or
push
cmp
mov
inc
loopne
sahf
lcall
addb
and
subb
jo
dec
inc
data16
mov
push
add
imul
add
dec
cmc
or
std
aad
rolb
fadds
add
pop
dec
push
incb
and
fcoms
xchg
pop
sub
pop
ja
cli
sub
and
xchg
dec
stos
mov
nop
cmp
bound
jge
jmp
sbb
mov
mov
and
mov
inc
push
pusha
rorb
mov
inc
cmp
sbb
jecxz
cli
out
es
and
call
ds
mov
or
cmpb
pusha
loopne
lods
mov
mov
std
andb
std
and
dec
imul
jl
sub
and
pop
je
inc
pusha
int3
stos
mov
xorb
and
inc
or
and
sub
pop
and
arpl
cmpsl
mov
das
icebp
int
repz
jae
cmp
dec
inc
cmpsl
jp
dec
xchg
push
arpl
fld1
andb
aam
inc
sbbb
call
leave
sbb
jp
mov
rorb
pusha
pusha
lea
pop
call
fisubs
mov
pusha
add
xor
das
jecxz
rcrl
repz
test
and
jl
mov
push
pop
in
rorb
inc
shrb
adc
mov
jge
adc
gs
das
xchg
sub
inc
ret
pop
sbb
xor
mulb
lds
inc
ss
popa
or
into
popf
mov
mov
fldenv
popa
test
mov
in
js
inc
cmpsl
lcall
pusha
sbb
loopne
in
dec
loopne
sub
add
mov
and
cmp
add
inc
push
pop
mov
std
jne
inc
fists
inc
ret
adcb
rcrb
ljmp
mov
sbb
cli
xor
andl
fstp
bound
in
mov
popf
adc
and
andb
or
ds
repnz
mul
cli
xchg
or
leave
mov
mov
arpl
xor
setno
mov
fiaddl
and
sahf
inc
pusha
or
xor
push
andb
or
repz
in
push
test
and
adc
nop
add
shl
mov
shl
mov
add
fldl
decb
sub
popf
jo
and
fnsave
cli
inc
push
inc
mov
pushf
ja
mov
push
test
mov
rol
imul
mov
loopne
jecxz
jns
cmc
push
mov
mov
cmp
fbld
and
fnstcw
jg
in
push
dec
adc
pop
fs
clc
jbe
mov
and
jp
jbe
mov
or
loope
mov
add
or
ret
pop
dec
cmc
mov
push
ja
outsl
pop
icebp
pop
jae
shlb
sar
mov
in
repnz
andb
addb
in
or
cmpb
sub
mov
cli
jl
lea
pusha
cmp
or
loopne
jb
inc
pop
push
stos
inc
sarb
aam
stos
mov
loopne
imull
mov
pushf
stos
addb
push
js
sub
andb
loopne
jecxz
cmp
xor
cmpb
daa
push
shll
clc
jmp
pop
jle
test
fmuls
xchg
ss
pushf
outsl
das
mov
movsl
push
cwtl
sub
aaa
mov
pushf
in
fsubrs
add
inc
jo
inc
mov
inc
sbb
pop
aas
insb
sbb
or
inc
pushf
mov
shlb
push
inc
ds
adc
daa
pop
cmpsb
andb
mov
das
mov
and
stos
ja
and
rolb
pusha
and
lock
sub
cmpb
pusha
jecxz
in
lahf
fisubrl
jmp
mov
adc
icebp
lcall
pop
mov
rcrb
inc
fs
pop
dec
mov
jo
add
push
mov
xor
push
or
and
lahf
mov
inc
out
lret
jg
mov
arpl
jns
jne
pop
jmp
pushf
inc
in
popa
pop
adc
xchg
mov
push
and
add
and
lret
notb
dec
mov
pusha
and
movsl
jg
pmaxub
and
test
inc
imul
cmp
sub
add
mov
int
lods
shlb
mov
sbb
sub
and
push
lahf
and
cmpb
sahf
pop
icebp
add
or
add
aam
push
les
je
push
xor
lods
pusha
shlb
not
scas
js
addb
divb
sbb
fsub
adc
mov
std
sbb
pop
ljmp
xchg
cltd
cmp
loopne
pop
mov
xor
jl
fidivs
adc
cwtl
dec
cli
mov
push
stc
sub
pusha
mov
mov
std
sarl
mov
pusha
rolb
pusha
pusha
aaa
mov
movsb
inc
pusha
stc
xor
jbe
mov
shll
in
dec
loop
fists
les
mov
mov
les
fisttpl
ret
xor
mov
inc
cltd
aad
fdivrl
out
add
pusha
push
xor
movsb
and
pop
add
add
sbbl
daa
movsl
sub
mov
ljmp
imulb
or
jp
pusha
orb
jmp
ret
test
arpl
inc
fsubs
sub
cmc
fcomps
rorb
fstp
cmc
shll
andb
mov
rorl
pop
outsb
push
ret
sbb
add
faddl
and
cmpl
imul
fdivs
push
mov
and
cmp
pop
mov
xor
int
xchg
mov
in
into
sub
inc
lret
outsb
stos
loopne
out
rol
mov
mov
add
pushl
mov
lahf
adc
int
and
adcb
je
cmp
lahf
mov
and
sbb
mov
mov
jmp
gs
daa
ja
orl
clc
add
inc
cmp
inc
orb
in
pusha
xchg
loopne
decl
push
fsubr
add
and
lret
loopne
andb
add
addb
pop
push
shlb
xchg
int3
adcw
into
lock
repnz
or
push
xor
into
cmp
movsb
loopne
mov
test
and
inc
ret
fisubs
loopne
scas
pop
jg
sbb
xchg
sbb
cmp
push
test
pop
in
cwtl
inc
pop
loope
int3
sbb
int3
sbb
add
mov
popf
fcoml
mov
cmp
jmp
addb
in
mov
dec
andb
pop
lods
and
mov
mov
inc
sar
fadds
pusha
inc
subl
xlat
into
jno
stos
and
pop
js
mov
and
jbe
cwtl
xchg
ss
jns
adc
and
das
cmovns
test
inc
mov
pushl
mov
shl
and
fcoms
xor
and
sbb
add
cmp
cmp
test
fs
notb
sub
je
mov
mov
shlb
inc
xchg
movsl
dec
or
stc
in
jae
sub
and
lods
push
mov
mov
dec
push
loopne
xlat
les
inc
adcb
and
dec
sti
pop
xchg
mov
iret
sahf
popa
bound
rolb
call
mov
insb
jmp
jo
imul
in
pop
push
inc
loopne
mov
ret
pusha
add
xchg
sbb
fnstsw
dec
jns
lahf
ret
inc
pop
sbb
mov
roll
rol
addr16
into
scas
add
and
adc
xchg
imul
loopne
andb
push
pop
pop
mov
mov
mov
pusha
lcall
mov
add
push
push
cwtl
fildll
mov
xchg
cmp
int
test
pusha
add
mov
mov
sub
subb
pop
sahf
push
and
xchg
arpl
hlt
je
xchg
inc
add
test
and
mov
test
fidivs
dec
daa
loopne,pn
xor
mov
loop
mov
mov
mov
cs
mov
xchg
je
xchg
data16
mov
fistpl
jo
xor
iret
or
and
cmp
cwtl
push
int3
fnstcw
and
add
xchg
or
jle
xchg
test
pop
sarb
cmc
jge
lods
push
loopne
sbb
ja
pop
loopne
and
inc
mov
lods
rol
call
sbb
jns
add
mov
jnp
in
lds
dec
and
rorb
adc
fstpl
adc
jmp
inc
pusha
mov
cltd
cmp
fnstenv
cmp
inc
add
mov
in
dec
dec
addb
imul
sti
adc
pusha
pusha
sarb
add
and
repz
outsl
or
inc
push
fnsave
shrb
inc
push
inc
dec
xchg
xchg
and
test
mov
mov
test
and
mov
loopne
lea
andb
or
loopne
jmp
lahf
testb
stc
xchg
cltd
pop
cmp
aas
leave
mov
mov
pusha
call
dec
adc
lret
mov
push
adc
sbb
jecxz
ja
inc
inc
lock
int3
push
pop
mov
and
jno
mov
insl
lret
sahf
int3
js
sbb
and
lcall
cmc
pop
mov
icebp
testl
sbb
sbb
clc
sub
and
loopne
sbb
mov
rorb
inc
adc
into
adc
movlps
fisubrs
dec
cmp
js
jo
data16
fidivs
popf
hlt
cs
iret
gs
jae
imul
inc
pusha
ror
das
adcl
mov
jle
cltd
mov
sub
loopne
xchg
and
mov
dec
loope
sbb
cmp
and
pusha
shll
push
outsb
jmp
and
ss
pop
repz
xchg
aas
jmp
pop
dec
push
cmp
sub
aas
jne
shlb
add
add
sbbb
cwtl
dec
dec
scas
and
push
xchg
sub
and
xchg
cld
sbb
shl
sub
mov
subb
lods
shlb
repnz
push
test
xorb
mov
jnp
xor
cmp
mov
fcomip
xchg
cmp
inc
and
inc
mov
sub
xor
testb
and
pusha
dec
pop
insl
frstor
inc
push
lods
loopne
fs
pusha
push
jl
in
sti
sbb
xchg
stc
pop
pop
or
sarb
idivb
inc
fcompl
shl
cmc
aas
ret
loope
xchg
enter
xchg
movsl
lods
aam
in
jnp
add
and
rcll
aas
mov
out
cmc
lds
stc
popa
jle
add
jp
and
fs
add
mov
cmpsl
xor
sahf
in
dec
negl
adc
fwait
ljmp
dec
popa
jg
loopne
jb
xor
shrb
pop
movsl
adc
add
xlat
lret
and
xchg
inc
cmp
mov
mov
outsl
jp
rolb
pop
or
lret
into
mov
jmp
je
lea
iret
inc
cmp
jno
cmp
shl
outsl
mov
dec
arpl
scas
rolb
popf
push
cmp
loop
pop
inc
popf
rcll
push
rol
adc
pusha
mov
outsb
pusha
push
loopne
shlb
mov
adc
add
push
inc
insl
sti
clc
mov
xor
mov
mov
fistl
jg
jno
cmp
test
add
xchg
adc
mov
sbb
add
push
rorb
enter
test
insb
scas
push
mov
and
pop
cmc
push
shr
push
in
test
and
push
les
mov
je,pt
enter
cltd
jae
and
jb
loop
stos
shl
sub
popa
dec
fld
jnp
sbb
cmp
test
pusha
mov
mov
pop
test
and
mov
add
sub
inc
lahf
push
loope
and
shrb
and
or
loopne
addr16
shlb
in
sub
rolb
pusha
xor
dec
gs
jecxz
dec
add
andb
adc
xor
xchg
xchg
lock
cwtl
or
mov
addb
inc
or
loopne
inc
pop
in
jne
add
lock
sbb
push
mov
jno
mov
mov
loopne
outsl
scas
fcomps
and
xchg
dec
jp
or
cmpb
jno
ss
in
mov
mov
mov
andb
adc
mov
inc
inc
push
inc
and
inc
mov
loopne
and
addb
sub
and
pusha
ret
fstp
andb
inc
pusha
pop
cmp
jbe
ljmp
lahf
popf
imul
push
in
pop
mov
sub
pusha
xchg
sub
loopne
addb
in
ret
or
shlb
rol
mov
mov
mov
pusha
and
pushf
sbb
outsl
push
mov
and
dec
cmp
lret
jle
out
loop
xchg
jne
add
jb
inc
xchg
fdivp
jo
cld
dec
out
aas
add
movsb
inc
pusha
lret
push
clc
stc
mov
mov
js
add
and
test
addb
add
addb
in
lds
mov
inc
fwait
add
loopne
and
mov
loopne
mov
or
shlb
rolb
cmp
xchg
add
loopne
xor
xchg
or
jle
push
mov
sbb
pusha
and
xchg
popf
cld
push
xor
push
shrb
fucomi
shl
iret
mov
inc
shlb
add
add
inc
lcall
je
outsb
inc
xchg
or
mov
adc
and
and
inc
into
xchg
pop
xchg
inc
xchg
jl
lock
mov
and
pusha
loopne
sbb
sbb
and
les
rolb
cmpsl
sti
add
pop
lret
scas
cli
jle
jmp
mov
in
out
mov
loopne
sbb
cmp
dec
adc
loop
pop
xchg
enter
shlb
sbb
mov
addl
and
pop
cmpl
insl
push
imul
jl
sahf
cltd
mov
mov
jo
cltd
mov
mov
inc
nop
test
mov
pusha
pusha
mov
repz
aad
shl
insb
lahf
popa
js
xorl
dec
jns
scas
inc
add
jl
inc
xchg
rcrb
leave
hlt
stc
in
repnz
pop
cmp
daa
dec
push
jb
inc
loopne
pusha
pusha
aam
mov
addb
inc
pusha
leave
addr16
push
pusha
adcb
movsl
xor
mov
add
pusha
inc
mov
add
lea
jle
dec
mov
sarb
inc
test
and
cmpsl
or
jno
dec
pop
outsl
dec
fadds
mov
mov
add
inc
scas
cmp
inc
sarb
lahf
movsl
or
ljmp
pop
add
in
xor
sbb
cmp
add
and
xchg
js
mov
mov
sub
pop
add
xor
cmp
pop
add
add
jbe
sub
mov
dec
cmp
dec
test
jge
call
push
inc
ljmp
dec
popa
mov
sub
or
cmc
scas
inc
rolb
xchg
xor
xchg
xlat
loop
mov
loopne
outsl
sti
adc
loop
andb
rcl
pop
dec
jns
cmc
movsb
and
bound
jne
sbb
mov
enter
mov
inc
sub
push
bnd
fsubl
or
add
sbb
loopne
and
fdivr
pop
pushf
push
ret
mov
repnz
enter
imul
inc
sbb
jp
lret
loopne
push
mov
and
pusha
int3
pusha
iret
add
mov
sub
mov
stc
mov
je
aam
mov
fsubrs
shl
dec
adc
mov
mov
dec
outsl
and
lret
jo
sbb
loopne
jbe
icebp
mov
mov
push
out
test
and
xchg
ret
cmpsl
cmpsl
add
sub
rorb
shlb
cli
cmp
jno
or
fsubl
mov
inc
jne
fidivrs
fmull
add
push
je
mov
int
fists
gs
ja
clc
mov
mov
xor
repnz
sbb
mov
dec
fsts
test
pusha
lret
add
cmp
stos
add
and
adc
and
xor
lods
cld
pop
jge
mov
add
cmpl
out
jno
push
mov
shlb
ljmp
shlb
add
and
mov
mov
mov
and
addb
loopne
arpl
jp
pop
mov
add
pusha
addr16
inc
cmp
ljmp
sbb
ret
stos
push
add
or
and
inc
dec
pop
adc
add
loop
pusha
loopne
out
in
sub
loopne
or
push
push
pop
or
mov
inc
inc
add
loopne
inc
add
mov
shlb
sbb
addb
jns
mov
scas
popf
andb
xchg
stc
mov
sbbb
pusha
inc
inc
mov
and
lgdtl
sti
mov
push
jb
int
daa
adc
ja
sub
add
add
mov
sbb
or
loopne
pop
cmp
adc
loopne
push
daa
arpl
pop
sub
xlat
mov
cmp
pop
and
jge
sub
and
inc
cmpsl
std
add
jne
and
mov
ljmp
inc
adc
sbb
xor
mov
mov
adc
andb
xor
add
lds
pop
in
out
jmp
push
add
out
mov
rcl
andl
js
aad
pusha
loopne
mov
cmp
and
arpl
jmp
lods
pusha
add
add
xor
and
shlb
xchg
addr16
loop
dec
jmp
mov
mov
pop
push
push
lahf
sbb
jg
lret
nop
in
rolb
movl
sti
inc
sub
cmp
mov
mov
inc
mov
sub
mov
add
cmp
cmp
pop
icebp
jns
xorl
repnz
movsb
pusha
and
shl
mov
ret
loopne
shr
push
mov
inc
mov
call
jo
out
add
ds
rorl
shlb
loop
les
cmc
mov
popa
push
jnp
xchg
pop
add
mov
loopne
jno
pop
mov
push
add
mov
andb
jle
dec
mov
inc
mov
addb
shl
clc
and
shlb
xor
or
mov
fsts
xor
dec
aas
ds
cmpsb
inc
add
add
push
jge
outsl
cltd
push
ret
and
add
jns
dec
pop
sub
xchg
or
lret
cli
fstpl
imul
xchg
lods
les
jl
movsl
lods
and
ljmp
shrl
cmp
movsb
add
daa
stc
or
and
add
pusha
add
lock
and
add
mov
xorl
pop
push
pop
cmp
push
adc
test
aam
hlt
imul
or
inc
mov
dec
sbb
sbb
in
xor
adcb
push
orl
mov
or
bnd
fsubp
xchg
and
add
mov
inc
add
imul
adc
fidivs
enter
and
mov
push
jae
or
add
jne
xor
mov
call
jb
nop
fwait
xchg
insb
fcmove
jg
shll
dec
ret
daa
push
dec
and
push
imul
lods
mov
sbb
cld
and
xchg
cs
and
jecxz
jmp
push
cld
adc
aas
je
outsl
xchg
movl
cmp
jmp
loopne
mov
lods
and
pushf
jmp
xor
inc
jmp
mov
in
das
xchg
lahf
lock
adc
pusha
xorb
add
jno
mov
mov
add
js
xchg
mov
or
cmp
add
popa
jbe
or
shlb
andb
lds
outsb
cwtl
flds
not
add
les
push
femms
add
in
aam
popf
jnp
movsl
sub
add
out
fists
mov
add
mov
shll
mov
inc
fdivs
jo
movsl
jae
arpl
pop
sub
mov
jle
lods
sbb
xchg
fiaddl
mov
out
aad
sub
add
adc
arpl
sbb
mov
sub
mov
inc
pop
jb
cld
sti
cmpsb
mov
mov
addb
push
sbb
ss
enter
pusha
jl
andb
dec
jb
cli
jg
push
mov
leave
push
push
push
and
iret
inc
fsubr
bound
sti
cmp
aaa
das
mov
or
pusha
inc
sub
cmpb
jmp
and
pusha
cmp
or
sub
mov
pusha
mov
inc
and
loopne
xrelease
and
lcall
add
pusha
pop
in
sbb
lret
iret
or
loopne
cwtl
sbb
and
les
add
imul
mov
and
les
rol
jb
xlat
cmp
sub
mov
and
add
inc
iret
movsb
pusha
loopne
cmp
jb
sub
test
loopne
and
mov
mov
stos
pop
mov
andb
mov
hlt
andb
mov
loopne
mov
mov
es
jns
mov
shlb
lock
ss
movd
mov
xor
js
int
mov
sbbb
add
std
ds
adc
addb
inc
sbbl
fisubrl
inc
or
and
push
ja
enter
les
mov
cli
xor
insb
jle
mov
imul
adc
pop
nop
sbb
mov
dec
or
insb
loop
and
mov
clc
fs
pop
push
mov
shlb
pop
loopne
mov
sbb
mov
pop
imul
mov
jg
inc
pusha
div
inc
fucomi
inc
jle
cmp
push
mov
mov
mov
push
roll
loopne
fs
addb
pop
out
rorb
addb
mov
sbb
aas
aas
mov
and
mov
adc
fistpll
or
inc
aaa
dec
xor
fwait
std
fimuls
stos
addb
mov
nop
jnp
ret
inc
push
push
negl
faddl
aam
pusha
mov
push
mov
and
cld
test
xor
mov
and
mov
jl
out
sub
shlb
adcl
nop
mov
push
inc
mov
pusha
es
ror
jb
out
pop
repnz
dec
xchg
cwtl
add
mov
push
pop
lret
insl
es
addb
lds
pop
aad
movsb
andb
inc
lods
lret
and
loopne
shlb
imul
in
push
add
imul
cmp
mov
lahf
push
stos
addb
loopne
mov
rorb
mov
loopne
adcl
sbb
xorb
dec
mov
inc
add
sti
mov
stc
xor
hlt
mov
mov
mov
lret
cmpsl
xor
movsl
aaa
add
rolb
sub
and
aaa
test
push
andb
sbb
add
and
rolb
popa
jns
ss
loopne
and
loopne
cs
pusha
adc
or
and
adc
stos
xor
cltd
cli
mov
lret
arpl
jnp
xor
and
lock
fldcw
and
mov
xchg
sub
adc
loopne
pop
in
roll
mov
add
pusha
incl
rolb
aas
popl
push
shlb
pusha
add
pusha
xchg
punpcklbw
sbb
lcall
sbb
xlat
addr16
adc
dec
dec
add
mov
push
cmp
fisubrs
add
mov
andb
pop
pop
sarb
ficoml
andb
out
sbb
mov
adc
stos
cli
push
xor
push
or
pusha
sbb
xlat
clc
ja
mov
and
pop
inc
movsb
inc
rcrb
addr16
xor
mov
je
push
je
jo
sbb
shrl
neg
roll
shl
pop
enter
or
cmpsb
inc
and
pop
imul
pusha
mov
and
rcrl
int3
in
jecxz,pt
xor
pop
sti
pusha
xorl
xor
pop
inc
sti
iret
inc
push
sub
add
mov
xchg
movsl
jle
mov
and
out
cs
iret
loope
jge
data16
jo
mov
js
xchg
xor
rolb
inc
mov
mov
xchg
jecxz
incl
jp
jmp
mov
cmp
sbb
sub
mov
xchg
dec
and
dec
in
pop
cmpl
sbb
adc
movsl
xchg
out
and
and
pusha
iret
jl
and
shlb
fstpt
je
dec
out
mov
ds
mov
stos
gs
shlb
fcoml
jge
xchg
xor
negb
mov
inc
cmp
lret
lcall
dec
pop
pop
mov
or
dec
mov
xchg
stc
out
sub
and
cmp
inc
loopne
jbe
pop
jecxz
xchg
add
lods
cmp
andb
xchg
cld
scas
and
adc
fsubl
insl
scas
and
sar
lret
inc
pusha
ss
int3
push
or
push
andl
in
adc
sub
pusha
xor
shlb
inc
add
hlt
adc
cwtl
add
shl
loopne
fidivrl
testl
test
out
push
stos
and
add
rolb
mov
or
mov
inc
loopne
mov
push
sub
shlb
lds
addb
xor
dec
xchg
mov
sub
hlt
push
fs
pop
mov
xchg
je
rolb
mov
add
mov
jecxz
call
pop
or
inc
xor
loope
fs
cmp
and
andb
insl
add
pop
jg
loopne
add
pop
testb
inc
pop
mov
pop
xor
mov
addr16
imul
cmpsb
rol
andb
dec
addb
popf
jo
sub
cmpsl
xchg
pusha
and
cmp
dec
and
cli
push
push
jge
sbb
lods
out
mov
loopne
dec
jp
mov
outsb
sbb
mov
outsb
popf
mov
cmpsb
pusha
loopne
dec
aas
pop
xchg
arpl
sub
je
mov
loopne
insb
sub
ss
gs
push
mul
call
mov
add
sub
ret
inc
loopne
fistl
mov
outsb
adc
loope
dec
xor
inc
xor
cmp
xorb
dec
push
push
mov
xlat
stos
pusha
add
inc
inc
sub
add
mov
mov
loopne
pop
jmp
and
into
scas
fsubr
lds
addb
loopne
clc
mov
loope
xchg
loopne
fucomip
loope
int
shlb
sub
push
fs
xchg
cmp
sbb
cmp
rorl
xchg
inc
mov
dec
lret
inc
mov
mov
and
inc
sti
pop
addr16
mov
cmp
sbb
jnp
pminsw
dec
xchg
push
mov
into
cmpsb
andb
mov
push
xlat
js
push
inc
pusha
dec
inc
scas
shl
add
test
js
repz
out
out
or
sbb
add
cld
out
pop
pushf
popa
inc
sub
add
loopne
rolb
pusha
add
loopne
iret
mov
loopne
das
dec
push
add
subb
and
mov
add
mov
inc
mov
stos
dec
sbb
mov
jb
dec
or
stos
adc
xchg
cwtl
ret
mov
mov
or
pop
outsl
pop
cli
adc
inc
and
sbb
out
andb
and
pop
lcall
dec
neg
or
sub
fadd
imul
rolb
or
addb
ss
fucomip
addr16
push
movsl
or
and
inc
iret
jle
and
movsl
lds
loopne
jl
cltd
fisttps
andb
jne
es
and
rcll
mov
pop
mov
add
dec
mov
xor
mov
inc
pop
mov
mov
pop
cmp
jbe
mov
mov
call
jle
hlt
xchg
mov
jne
jbe
fists
sarl
outsl
insb
fs
xor
push
cli
cs
mov
pop
ljmp
pop
pusha
repnz
ret
mov
inc
or
xchg
add
lds
pusha
inc
cmpsb
mov
inc
inc
sahf
jg
lret
std
jp
mov
pusha
stos
inc
and
xor
add
cmp
inc
int3
movsl
fsts
add
and
ds
inc
pop
stos
andb
test
inc
pop
rolb
je
and
cmpsl
lods
sahf
inc
pop
sub
cmp
pop
pop
pop
pop
out
jmp
outsl
mov
aam
pop
ret
sbb
push
outsb
addb
xchg
xchg
cs
and
rclb
repnz
mov
push
mov
andb
inc
or
ds
jle
rolb
fcoms
cmpsl
or
inc
mov
pop
test
push
rcl
adc
shl
pusha
mov
pop
mov
sti
shlb
mov
mov
sti
pop
jnp
fsubs
mov
lea
inc
mov
jae
das
nop
repnz
insl
mov
loopne
loopne
add
push
inc
jne
loopne
xchg
fmuls
xlat
clc
and
rol
jl
mov
push
jp
add
sub
cld
sarl
and
mov
loopne
and
test
and
ds
cltd
fs
sbb
pop
movsl
mov
xchg
xchg
mov
inc
in
inc
xor
fwait
in
icebp
imul
lcall
lcall
scas
add
add
add
and
jp
mov
mov
inc
mov
and
sarb
popa
shll
aaa
sub
aad
outsl
or
mov
in
sub
aad
sti
add
xorb
and
and
mov
jbe
mov
data16
cmp
sahf
and
and
add
pusha
gs
fldcw
xchg
mov
jbe
inc
fistpll
leave
lret
cmp
push
fwait
loopne,pn
add
add
enter
adc
in
or
add
and
fistps
divl
mov
and
xchg
call
cmpb
cld
mov
mov
idivb
cmpsl
xor
xrelease
movsl
mov
and
stos
add
fstl
add
shlb
ja
shlb
xor
mov
daa
std
popf
test
in
pop
and
sub
add
jp
enter
sbb
mov
push
movsl
sub
and
mov
repnz
push
inc
mov
inc
movsb
loopne
mov
add
int
add
loopne
cmp
jnp
pop
int
shrb
pusha
adc
out
in
jno
ret
jmp
dec
loop
xor
dec
jp
xor
int3
movsl
or
mov
inc
subb
sub
aad
cwtl
mov
mov
xor
pop
stos
aaa
inc
xchg
adc
mov
mov
sbb
inc
mov
dec
aas
movsb
addb
mov
std
mov
cmpsb
mov
ds
and
cli
fwait
jle
mov
testl
and
push
ss
push
inc
or
push
hlt
dec
lods
int3
mov
call
jmp
inc
mov
ss
adc
xor
inc
mov
mov
enter
add
pop
lcall
inc
mov
movsb
add
push
in
andb
in
loopne
cwtl
xor
imulb
mov
cmp
dec
andb
jmp
iret
aam
sbb
or
out
cbtw
lret
sti
std
cmpsl
xor
or
in
fs
xor
sbb
fnstcw
inc
add
jns
and
andb
push
ja
int3
or
in
jns
jbe
inc
and
inc
and
inc
mov
push
mov
movsl
into
faddl
sbb
in
je
std
xchg
cmp
loopne
enter
enter
mulb
push
nop
fs
loopne
sbb
push
lds
add
or
add
pusha
cmpb
negl
andb
in
pop
ja
or
pop
cmp
arpl
ljmp
inc
imul
test
in
and
and
mov
inc
mov
sbb
fmull
and
loopne
or
sbb
lds
leave
lods
and
and
xor
mov
add
test
pusha
sub
push
addb
ljmp
int3
and
lea
mov
and
aam
out
push
jmp
in
push
dec
jmp
in
jno
das
xchg
pop
dec
imulb
sbb
push
mov
mov
add
lret
xchg
cmp
stc
loopne
xchg
cld
aaa
lea
cmc
pop
shlb
and
pusha
ret
das
pop
or
inc
rorl
stos
and
iret
notl
mov
xchg
fiadds
sbb
sub
test
shlb
lock
pop
jnp
pop
xchg
push
cmpsb
shlb
insl
pop
or
mov
jle
xor
inc
and
call
add
sub
loopne
sahf
pusha
mov
mov
pop
mov
and
xor
outsl
sub
pusha
dec
imul
mov
and
test
lods
dec
cmpsb
addb
pop
cli
in
inc
pusha
push
mov
jo
imul
pusha
mov
mov
sub
pop
lret
adc
or
out
jmp
push
dec
dec
and
sub
xlat
sbb
arpl
adc
add
fldl
add
add
jb
pop
test
and
lock
loopne
sbb
dec
rcrb
xor
lret
or
fimuls
or
scas
shl
sbb
test
aad
mov
dec
add
inc
add
ret
jo
repnz
or
test
loopne
jns
sbb
cmc
pop
add
pusha
movsb
rolb
rclb
movsb
addb
and
or
loopne
jmp
into
fldl
xchg
add
sub
fdivs
lea
dec
jg
dec
mov
pusha
addb
fisubl
rcrb
fimuls
adc
jmp
mov
lcall
sti
and
repnz
loopne
adc
imul
adc
add
inc
cmp
ja
mov
sbb
sbb
pusha
xor
pusha
or
scas
and
mov
clc
or
loopne
cmp
mov
inc
push
cmc
cmp
and
xor
in
push
mov
lods
jns
outsl
jp
into
ljmp
daa
mov
mov
jnp
add
mov
mov
inc
insb
test
add
mov
xchg
inc
pop
lahf
cmp
add
outsl
push
dec
out
cmc
push
faddl
mov
in
push
and
add
outsl
mov
ret
fisttpl
shrb
mov
lret
cld
push
mov
rolb
insb
out
cmp
cwtl
cmpsl
test
rcl
mov
ds
dec
xlat
jp
movsb
pusha
and
ret
int3
aam
in
cld
pop
dec
pop
outsl
int
cwtl
adc
dec
jmp
sarb
xor
sub
sub
add
sarb
mov
xor
test
ficomps
cmp
pushf
add
loopne
cmpsl
hlt
sub
loopne
xor
lea
outsb
mul
addb
mov
sahf
or
jecxz
mov
idivl
xchg
mov
mov
and
scas
add
shlb
pop
pop
mov
inc
adcl
adc
cwtl
mov
inc
leave
fucomip
jge
add
mov
mov
push
jg
inc
mov
inc
adc
div
aam
sub
loopne
je
or
add
jg
loopne
int3
cld
xchg
out
xchg
test
push
outsl
mov
inc
in
fcomps
shl
jp
das
dec
clc
in
sahf
bound
add
and
andb
nop
es
sarb
mov
fsubs
mov
pop
sbb
shlb
xchg
mov
inc
and
add
jns
sub
and
mov
cmp
mov
filds
push
popa
xor
mov
dec
lock
in
pop
addb
cmp
mov
add
add
cmpb
movsl
pop
cmp
inc
pop
xor
fmull
sbb
sbb
mov
ficompl
and
lods
rcl
and
sbb
ljmp
or
inc
sbb
inc
and
and
das
mov
pop
jge
aaa
addr16
rolb
movsl
ret
push
in
out
outsl
rcrb
es
lea
inc
shl
lock
inc
jbe
inc
jb
mov
pop
dec
mov
sub
add
dec
je
xor
outsb
or
rolb
rolb
out
dec
jg
mov
inc
inc
inc
scas
sbb
loop
fs
add
pusha
test
add
inc
xchg
push
mov
arpl
push
mov
cmp
cli
call
arpl
insb
inc
imul
and
cmpb
cmp
stos
inc
adc
pop
sbb
xchg
pusha
test
pusha
cmp
dec
inc
std
jl
aas
adc
loope
fadds
and
and
hlt
std
xor
loopne
mov
dec
inc
andb
in
jae
mov
mov
inc
and
mov
repnz
and
jp
and
inc
aad
mov
shrl
jo
jne
and
loopne
or
xchg
push
adc
shlb
pop
push
nop
aam
mov
out
and
lods
pusha
add
shl
jae
mov
cld
aaa
scas
or
push
jl
int
test
mov
mov
add
add
jl
mov
jge
in
rcrb
loopne
out
leave
imul
mov
in
clc
daa
outsl
mov
lea
mov
lahf
jno
lret
adc
mov
pop
popf
and
sbbb
lods
loopne
cmp
mov
leave
cmc
dec
rcr
add
mov
xchg
mov
mov
inc
mov
jge
insb
jne
inc
test
sbb
and
and
mov
mov
fdivrp
dec
dec
mov
add
loopne
xchg
jge
pop
imul
xor
mov
pop
bound
push
inc
cmpsb
and
fiaddl
sahf
fimull
out
stos
popa
xor
nop
add
inc
xor
jo
adc
inc
and
addb
xor
mov
lahf
push
lods
sub
xchg
fwait
inc
jno
adc
rclb
or
rcll
pop
mov
cmpsb
and
add
addl
les
ret
loopne
xchg
and
add
pusha
add
cmp
shrb
rcrb
orl
in
cmpsl
push
fs
jp
cmp
in
jb
int3
adc
add
add
inc
and
scas
pusha
mov
pusha
and
pop
filds
add
insl
push
xchg
cmp
pusha
movsb
rolb
sub
loopne
and
fisttps
cmp
test
pusha
pop
jae
roll
push
sbb
jns
mov
mov
arpl
loope
fisttps
inc
addb
jne
clc
adc
pop
push
xchg
scas
pusha
add
mov
mov
popa
add
in
shll
sub
mov
repz
pop
cmpsl
cltd
ljmp
fdivrl
pushf
and
int3
sub
mov
sti
jge
pop
mov
jo
call
inc
cmc
lods
push
repnz
loopne
test
scas
add
fwait
int
sbb
mov
xlat
xlat
data16
and
sbb
inc
add
xchg
in
inc
addb
or
loopne
mov
mov
push
sbb
loopne
cld
ds
xchg
pop
inc
movsl
jmp
leave
daa
stos
inc
mov
push
cmpl
in
push
mov
jecxz
repnz
shrb
test
cltd
add
fistl
push
ret
jl
addb
lret
loopne
mov
pop
jbe
push
dec
mov
mov
outsb
fnsave
pop
mov
and
je
dec
ja
rorb
push
test
adc
or
sub
movsl
lods
inc
pusha
fisttpll
popf
and
mov
bound
out
pusha
xchg
loopne
repz
inc
lea
icebp
mov
fnstenv
jg
xchg
pop
mov
xchg
pop
inc
cli
fs
addb
add
sub
adc
rolb
xchg
jns
xchg
mov
movsl
js
in
mov
jge
sbb
cmp
pusha
pusha
xor
cmp
inc
in
jo
push
sahf
cld
push
mov
rolb
and
and
and
shlb
jle
das
cmp
pusha
sub
rorb
test
out
adc
lret
bound
add
int3
cmp
out
adc
iret
jl
jns
ds
and
mov
add
add
nop
aad
gs
mov
fprem
in
jge
test
loopne
jo
sub
stc
xor
std
pop
movsb
andb
fistps
fwait
cmp
inc
mov
mov
mov
push
imul
jb
xor
test
xorb
insl
sub
dec
xchg
out
cmp
xchg
jne
lahf
nop
mov
loopne
pop
and
xorb
cmpsb
inc
pusha
andb
jp
mov
fldln2
cmpsb
add
pusha
and
mov
jl
push
jmp
jnp
out
div
sub
in
std
add
inc
pop
jge
rcrb
add
aam
pop
sub
loopne
pushf
pusha
pop
iret
nop
lret
push
inc
inc
jle
or
lods
loope
hlt
mov
leave
push
xor
cmpsl
dec
arpl
scas
add
fsts
nop
popf
jle
iret
adc
mov
pop
addb
pusha
mov
push
jl
pushw
mov
jnp
mov
pop
cmp
addb
out
out
insl
sub
subb
pop
push
push
imul
lods
shlb
and
push
mov
inc
daa
dec
cltd
sarb
inc
add
out
adc
add
push
ljmp
loopne
addb
xchg
test
pusha
and
sub
shll
add
push
loopne
aad
jmp
mov
sarb
adc
loopne
or
and
add
jb
cmpsb
andb
mov
je
aam
call
sub
pusha
pop
cmp
and
cmc
into
lds
or
add
pop
shlb
aam
xor
into
leave
or
mov
pop
cmc
popa
dec
push
data16
inc
jmp
xor
loopne
adc
gs
lds
stos
and
test
adc
mov
loopne
fiaddl
adc
mov
out
or
int3
xchg
daa
xchg
clc
xor
xchg
andb
mov
shlb
jmp
push
out
inc
repz
push
push
outsl
mov
sar
cmp
dec
mov
inc
sbb
in
pushf
ret
and
fldt
imul
and
loopne
and
mov
inc
loopne
ret
out
popa
inc
xlat
rolb
pop
cwtl
mov
loopne
out
ja
push
cmp
pop
out
ret
xor
jae
andb
inc
jbe
ss
inc
adc
loopne
xchg
dec
cmpsl
xchg
leave
push
movsb
pusha
mov
clc
rolb
imul
push
jecxz
sbb
add
lds
scas
loopne
pushl
hlt
inc
jns
sarb
xchg
hlt
fsubs
test
shlb
inc
xor
mov
inc
xor
pop
mov
cwtl
in
jnp
loopne
lods
loopne
pop
jb
loopne
pushf
pop
test
out
mov
lea
cmc
sub
sbb
sub
sarb
andb
shl
mov
inc
inc
mov
iret
jns
fcoml
andb
jl
lods
add
dec
nop
lret
call
pop
insb
ja
mov
mulb
out
or
sub
adc
push
inc
out
or
repnz
clc
mov
addb
idivb
mov
or
out
mov
sub
je
hlt
dec
aas
add
push
enter
or
inc
and
andb
and
sbb
in
and
repz
xchg
rcl
cmp
pushf
popf
pop
les
jp
loope
addb
daa
pop
lahf
cwtl
cmc
hlt
sahf
movsl
dec
stos
addb
dec
push
mov
cltd
test
fwait
or
pop
cmp
sbb
cwtl
pop
mov
or
subb
loope
lock
mov
xor
push
or
loopne
adc
in
in
inc
cmp
pusha
push
and
or
inc
xchg
mov
and
xor
pop
mov
out
lock
out
xor
xor
xchg
or
popf
jno
jns
testl
pop
dec
shrb
add
loop
sbb
or
loopne
call
and
subb
mov
fwait
xchg
dec
cmp
or
mov
add
add
or
xchg
or
subb
pop
ret
dec
clc
mov
sub
inc
xor
fs
pop
xchg
popf
mov
out
xchg
in
dec
and
add
lret
or
and
add
inc
push
pop
aam
push
aaa
mov
data16
inc
loopne
loopne
call
inc
mov
fwait
ljmp
push
mov
imul
and
xchg
ljmp
scas
adc
rcrl
cltd
push
rcrb
and
std
fstpt
repz
rolb
orb
lcall
insl
jl
lret
mov
lods
xchg
mov
push
lods
loopne
outsl
pop
dec
ss
xchg
mov
icebp
xlat
into
push
mov
mov
pusha
rcr
call
pop
insl
out
rolb
shrl
mov
xor
and
and
inc
jae
add
inc
sub
adc
imul
loopne
sbb
das
pop
movsl
int3
mov
andb
pusha
loopne
xchg
mov
mov
fmul
xchg
sti
lods
inc
and
mov
dec
mov
sbb
fistpl
scas
loopne
pusha
clc
je
adc
aaa
loopne
mov
ret
loop
and
or
and
mov
xchg
pop
push
rolb
push
outsl
jge
ljmp
ljmp
xor
arpl
add
jle
into
mov
push
sbb
mov
fisubs
xchg
dec
int3
lods
ss
icebp
mov
test
sbb
adc
and
sbb
jmp
fmuls
idiv
jae
push
es
inc
mov
sub
pop
cmp
loop
mov
lock
pusha
shl
shr
cltd
push
lods
shlb
loopne
dec
mov
mov
inc
add
and
mov
sarl
cli
ja
je
mov
mov
repz
mov
loopne
lret
inc
xlat
adc
sub
jae
shrb
mov
mov
inc
pusha
mov
shrb
orl
dec
mov
xchg
dec
iret
cli
xchg
cwtl
lret
in
dec
mov
jo
cld
adc
adc
push
and
and
lret
or
das
int
rol
dec
mov
pusha
add
jecxz
and
fs
pop
add
shrl
fwait
cmpsl
jl
inc
and
shlb
fnstenv
shlb
push
je
stos
inc
inc
sbb
adc
mov
aam
repz
aam
cmpsl
bound
sub
inc
loopne
out
push
pusha
andb
push
mov
mov
fmul
cmpsl
inc
xchg
inc
xchg
inc
mov
xor
xchg
test
insb
pop
out
jmp
fadd
scas
inc
and
shll
add
stos
push
jl
jmp
sahf
lds
inc
mov
ja
jne
gs
pop
pop
push
add
pusha
adc
inc
add
sub
pusha
lea
hlt
add
pusha
and
int
add
jns
ret
repnz
xor
jmp
sahf
xor
and
inc
lds
mov
sti
xchg
shlb
andb
push
inc
loopne
mov
aad
dec
jmp
mov
mov
mov
add
rcrl
sub
and
add
in
mov
hlt
push
jae
pop
lds
test
add
in
jo
inc
dec
and
sar
mov
push
testb
pavgb
jp
outsb
jmp
xor
xchg
adc
xchg
in
loopne
cmp
inc
mov
movsb
mov
cmp
cmpsl
xchg
vandnpd
pusha
inc
in
cmp
ret
or
loopne
test
xchg
and
adc
mov
fsubrp
lret
pusha
sarb
sub
and
mov
inc
push
add
and
mov
int
xchg
lods
mov
inc
push
mov
add
mov
and
and
mov
cmpsb
add
rcll
rcrl
pop
mov
aas
test
rolb
js
inc
add
push
or
mov
and
roll
inc
and
xchg
push
fisttpll
aam
or
pusha
push
lret
iret
add
std
sqrtps
sbb
ss
sbb
cmp
in
jnp
inc
rorb
mov
repnz
inc
push
aas
sbb
out
sub
add
stos
mov
mov
mov
stos
inc
mov
xor
mov
pusha
add
inc
andb
loopne
cmp
and
mov
cmp
jmp
push
or
and
mov
popf
sarb
lds
inc
hlt
fadd
call
and
push
and
cmpsb
and
andb
imul
xchg
sbb
and
add
and
xor
jp
jb
cwtl
xor
add
add
and
jecxz
inc
pusha
leave
rcrl
loopne
inc
add
mov
loopne
pop
adc
pop
fwait
loope
push
push
rcll
imul
or
xchg
xor
pusha
loopne
adc
mov
loope
add
and
leave
jno
inc
rorb
andb
mov
lods
pop
pop
in
inc
mov
mov
cwtl
scas
mov
add
add
cmc
adc
dec
lret
xor
xorl
cmp
or
andb
and
pop
fildll
mov
out
imul
jmp
pusha
shrb
pop
pushf
fwait
pop
loopne
test
andb
scas
testb
xchg
and
sbb
out
mov
sub
xorb
mov
inc
mov
sti
jno
bound
mov
jmp
bnd
jl
leave
fcompl
outsb
scas
addb
lret
xor
nop
sub
sub
and
dec
mov
test
cmp
mov
out
dec
xchg
or
add
gs
out
adc
pop
push
shlb
ss
cmp
and
shl
leave
cwtl
mov
add
xchg
sub
add
rcl
cmp
stos
mov
jge
jne
cltd
and
andb
and
inc
sahf
xor
lods
loopne
lods
lds
inc
sub
inc
mov
aad
testb
pusha
mov
pusha
das
fnop
rorb
inc
add
in
inc
mov
scas
jnp
mov
out
ret
and
rorb
sub
loopne
ret
loop
sub
dec
mov
pusha
and
jg
push
call
sbb
add
inc
inc
push
rolb
add
loopne
out
add
aas
push
add
jne
js
jp
inc
adc
sbb
scas
loopne
inc
daa
lds
xor
jl
pop
jo
rolb
repz
jg
inc
mov
or
xor
inc
pop
xor
xchg
or
subb
ljmp
sbb
in
cmp
mov
shlb
push
addb
mov
sbb
jb
inc
jns
rolb
inc
mov
inc
in
mov
mov
sub
mov
cmp
arpl
call
dec
xchg
and
or
pusha
mov
sbb
loope
inc
pop
dec
popa
mov
cmp
push
push
push
andb
inc
jnp
loopne
add
add
add
