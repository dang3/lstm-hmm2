rcrb
dec
stc
mov
mov
mov
add
jecxz
int
and
add
sahf
in
pop
or
cwtl
and
jle
das
jl
dec
cmp
mov
into
insb
push
jle
xor
mov
or
xchg
sub
in
int3
and
sbb
dec
push
jge
push
sub
fistpll
jno
add
add
out
xlat
xor
lret
xor
add
mul
and
hlt
or
inc
mov
cs
cltd
xchg
fmulp
lret
movsl
push
shrl
nop
pop
push
xchg
mov
stos
xchg
rclb
cmc
inc
pop
bound
icebp
push
pop
stc
std
adcl
jne
adc
aam
inc
dec
and
repnz
push
dec
mov
nop
cmp
mov
cli
cmp
and
xor
and
clc
mov
xchg
mov
mov
dec
mov
jne
scas
dec
mov
sbb
adc
clc
cmp
or
clc
mov
add
ret
sub
lds
pop
ss
xor
fs
cwtl
sub
fnstenv
outsl
dec
add
mov
xchg
fs
push
mov
not
add
sub
sbb
cli
xor
jne
das
cmp
adc
pop
xchg
in
aas
mov
mov
xor
or
call
sub
mov
leave
loop
push
mov
sub
test
mov
sbb
or
mov
pop
into
push
je
cld
xor
or
add
cmp
xchg
lahf
in
dec
rolb
pushf
cmp
xor
and
shl
mov
jns
orl
mov
movsb
jg
movsl
sbb
dec
sub
cmp
mov
fcoml
add
sub
add
rorb
push
out
push
mov
or
sbb
fwait
rcll
push
or
pop
mov
aam
int
aam
push
imul
es
push
call
leave
jo
enter
loopne
inc
add
dec
scas
nop
mov
fwait
add
pop
icebp
dec
in
add
daa
inc
push
fcmovnu
rcrl
jge
cmpsb
mov
push
add
or
in
enter
mov
sbb
out
sahf
dec
push
add
adc
es
decb
and
cmpsb
sti
and
repnz
fiadds
xchg
imul
adc
int3
scas
sub
inc
add
inc
outsb
xor
jg
pushf
mov
mov
add
or
insl
out
testl
mov
insb
xchg
push
jo
add
adc
mov
push
outsl
sbb
repnz
add
mulb
fsubr
movsl
les
dec
inc
add
je
mov
pop
xchg
jp
jb
cltd
arpl
mov
ja
xor
add
add
in
pop
xor
jo
mov
jae
push
jge
test
addb
in
test
or
mov
adc
out
mov
aaa
xor
add
jmp
shll
push
seto
pop
lret
add
bound
xchg
mov
mov
out
in
jle
jo
in
xor
fwait
call
int
test
ds
push
pop
rolb
add
jl
dec
int
and
push
pop
js
lret
mov
mov
jmp
sahf
mov
call
enter
shll
out
loopne
mov
inc
adc
movsb
fadd
mov
fcmovne
test
sbb
add
mov
mov
int3
test
hlt
in
ficoms
imul
iret
btr
sub
inc
leave
and
xor
pop
adc
test
add
mov
xor
dec
lods
dec
insb
and
out
adc
ja
mov
push
push
rcll
mov
adc
add
xor
icebp
popf
adc
push
cmp
les
mov
adc
mov
outsl
cmpsl
or
je
into
int3
or
or
pop
outsl
repnz
shrb
xor
sub
roll
outsb
and
out
mov
pop
arpl
outsl
cmpsb
sub
les
iret
pop
rorb
aas
shl
sub
frstor
sti
fcomps
js
les
ret
push
pop
arpl
add
stos
mov
aas
fnstcw
and
loope
push
ja
movsl
test
ss
dec
jp
add
cmp
sbb
xor
stc
mov
pushf
les
test
lcall
dec
push
cld
inc
aam
sbb
test
and
push
mov
iret
sbb
add
jnp
ficomps
lret
cmpsb
push
mov
or
mov
and
xchg
stos
mov
mov
and
mov
bound
xchg
das
divl
mov
add
cmp
test
mov
or
repnz
enter
mov
add
mov
lahf
aas
inc
add
mov
cs
test
mov
mov
sub
cmp
out
call
fiaddl
pushf
loope
adc
fmull
add
mov
pop
lcall
call
and
xor
popf
inc
test
push
add
add
jl
outsl
rolb
rorl
insl
lea
movsb
cli
addb
rolb
mov
insl
pop
jmp
leave
add
pop
clc
mov
ja
add
bound
daa
sub
mov
mov
test
aaa
mov
sbb
hlt
xor
mov
add
bound
inc
std
test
xlat
imulb
call
mov
xchg
or
xchg
sbb
cmp
mov
dec
aaa
mov
test
adc
mov
out
inc
add
mov
pop
adc
mov
das
xor
sbb
out
shll
movb
add
les
mov
enter
mov
mov
jecxz
push
inc
add
xor
xchg
xor
mov
xchg
add
pop
dec
inc
bound
xchg
stc
daa
push
xchg
in
sbb
add
jns
shlb
rorl
sbb
pop
jecxz
mov
push
stos
lret
lret
lahf
test
dec
test
pop
or
add
xchg
pop
jmp
rcrb
inc
add
add
and
add
cli
stos
push
cld
stc
insb
gs
test
dec
sub
push
int
cli
push
adc
aad
cli
xchg
add
inc
add
loopne
inc
add
fwait
xor
test
rep
leave
lds
movb
dec
std
pop
xchg
xchg
fisubl
xor
sub
or
fistps
movb
movb
test
scas
jbe
mov
dec
pop
xlat
inc
add
add
dec
dec
movb
jnp
ljmp
test
sti
sbb
pop
mov
or
xchg
mov
cmp
add
inc
add
adc
pop
movsl
ds
ret
shlb
sarl
sub
popf
std
ljmp
and
cwtl
jmp
mov
movb
add
fsub
jno
mov
inc
test
sub
add
ss
mov
mov
or
mov
jnp
cmc
pop
cmpsl
mov
adcl
add
into
out
xchg
insl
and
sub
inc
mov
pop
xor
bound
or
lahf
cmp
mov
xchg
dec
dec
push
popa
jae
mov
sub
pushf
mov
or
stos
les
addl
pop
cmovo
mov
enter
shll
test
bnd
test
and
mulb
add
add
bound
mov
xchg
adcl
lods
dec
inc
add
add
inc
or
aad
mov
push
rolb
jb
jnp
adc
jb
cmp
xchg
arpl
pushf
pop
push
stc
addl
mov
arpl
jno
movb
in
bound
bound
and
mov
mov
stc
mov
dec
roll
cmp
adc
mov
sarl
mov
scas
test
mov
add
cmc
fstpt
ffree
jnp
ja
add
divb
mov
add
mov
mov
gs
inc
add
add
cmp
shrb
push
pop
cmp
movsl
ljmp
or
push
xchg
inc
add
fmull
sbb
push
xorl
test
fildl
add
stos
mov
aad
into
mov
nop
cli
pusha
add
loope
pop
dec
jl
data16
mov
inc
add
decb
pusha
add
fdivrs
int
cmp
xor
arpl
pushf
and
aam
ja
fistps
push
dec
push
add
sub
xchg
jle
clc
adc
loop
sti
mov
dec
rolb
inc
add
mov
lds
nop
shll
cmp
into
rcrl
cmpl
ljmp
or
outsb
xor
lcall
notw
inc
into
aad
mov
mov
fldt
or
add
mov
mov
rcrl
lods
roll
push
mov
ds
cmp
mov
data16
orl
push
jbe
add
jae
or
les
jb
xchg
enter
lods
dec
pop
add
cs
ja
loopne
jecxz
outsl
sbb
jae
lock
adc
cmp
hlt
sbb
xor
stos
or
cmc
into
fwait
movb
jno
xchg
cli
inc
add
xchg
mov
and
push
xchg
push
les
jne
add
lds
mov
mov
aam
adc
inc
or
mov
js
lock
or
inc
add
cli
cmp
add
insb
in
mov
mov
sahf
pop
pop
mov
mov
scas
fldenv
shrl
sbb
mov
or
in
mov
jmp
dec
inc
add
repz
sub
enter
inc
repz
gs
mov
pop
add
lret
ds
pop
popa
jb
repnz
fmull
xchg
mov
inc
dec
jg
nop
stos
mov
movsb
outsl
push
repnz
pop
sbb
fwait
movsl
pop
xor
mov
add
std
jg
dec
loop
sub
add
icebp
movsb
sar
push
popa
loopne
jp
push
mov
shrl
lods
xchg
push
jns
jne
xchg
and
into
jmp
push
sub
jnp
movb
add
adc
adc
adc
push
and
dec
inc
add
mov
repnz
and
loopne
subl
cmpl
shl
and
mov
jl
pop
or
ss
add
lcall
jb
cmc
and
add
add
or
mov
dec
rcll
dec
mov
mov
fwait
rorl
push
clc
cmp
mov
xor
fdivs
mov
jb
lahf
loop
jp
aas
mov
jo
sahf
xor
dec
testl
pop
mov
in
push
adc
gs
add
stos
fwait
jnp
je
adc
cmp
shll
inc
iret
mov
jp
pop
rcrb
aas
inc
call
mov
sub
mov
push
add
movb
cld
shlb
shlb
jno
cmp
scas
add
mov
jp
mov
scas
cwtl
lea
or
mov
dec
jp
inc
xor
popa
enter
movsl
fisttpl
jmp
call
loope
jnp
movsb
push
add
jp
loopne
jo
xor
test
adc
add
or
js
dec
std
dec
icebp
leave
pop
test
add
dec
filds
push
mov
dec
mov
push
xchg
inc
pop
leave
and
fisubs
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
stos
std
push
fs
adcw
mov
or
jbe
mov
or
addb
lea
and
pop
pop
xor
jg
pop
mov
xchg
outsb
aad
ja
shrl
sbb
pusha
add
call
push
bound
mov
push
add
mov
push
mov
lret
aas
jbe
cmp
cmc
aam
xchg
and
clc
jns
addl
add
in
dec
dec
rolb
test
xor
fmul
mov
jno
mov
fwait
cli
push
mov
adcl
sub
fnsave
test
mov
clc
adc
sub
ret
jge
add
cmpsb
adc
add
sbb
xchg
jbe
pop
push
sub
call
pop
push
xchg
dec
inc
xchg
aam
adc
cmp
iret
sub
in
addb
xchg
xchg
outsb
adc
mov
lcall
sbb
sbb
push
sbb
cmp
and
xor
add
add
add
scas
shl
sti
jbe
es
dec
dec
xor
jmp
push
xor
hlt
sbb
or
movsl
mov
add
nop
mov
or
add
add
inc
add
jb
xor
and
mov
add
inc
add
jecxz
push
dec
xchg
mov
insb
icebp
outsl
outsl
lock
arpl
clc
or
sbb
and
add
aam
inc
add
cli
sbb
icebp
sbb
add
and
addb
arpl
in
jno
add
test
sub
adc
adc
mov
movb
push
mov
arpl
jg
andl
mov
fimuls
int
adc
ret
insb
pushf
insl
js
add
mov
sub
inc
add
fs
mov
add
cmpsl
xchg
fisttpl
sub
mov
cmp
sti
insb
adc
fs
repz
dec
scas
addb
push
idivl
lods
aas
shll
subl
inc
add
clc
je
int3
mov
jp
cmp
pop
popa
fstp
aaa
ficompl
call
testl
addb
mov
data16
pop
in
push
xor
cmp
sahf
iret
or
sub
loop
jnp
fstpl
fistl
shll
lea
cmp
repz
dec
or
dec
outsb
add
iret
and
ss
cmp
jae
add
cltd
add
pop
lret
rolb
test
mov
jmp
jns
bound
xchg
cmp
adc
das
add
mov
insb
popf
push
shll
push
hlt
cli
and
nop
dec
jne
adc
push
cmp
add
cmp
rcrl
adc
pusha
add
pop
popa
enter
sbb
adc
pop
jno
bound
dec
je
aad
addb
pop
loop
cmp
inc
in
push
mov
fidivs
inc
enter
adc
pop
sub
ljmp
xchg
fisubs
sti
nop
sbb
jb
ljmp
dec
xchg
and
js
cld
xchg
mov
jb
stc
out
mov
daa
clc
setbe
jl
stos
xchg
mov
fstpt
mov
stc
and
pop
stc
aas
int
pushf
es
add
add
shrl
push
sbb
bswap
je
mov
out
add
fwait
cmc
dec
pop
sub
add
adcl
cmpsb
pop
push
add
jmp
aad
inc
add
aad
cmp
adc
cmpsl
or
sub
sbb
jns
inc
add
gs
clc
sti
xor
jecxz
cmp
loope
mov
mov
lds
mov
data16
ljmp
adc
add
pusha
add
sub
xor
shlb
pusha
add
inc
mov
inc
add
adc
test
push
je
sub
inc
push
add
cmp
loopne
add
ja
add
xchg
jg
gs
popa
dec
jb
fstpt
adc
icebp
mov
mov
mov
add
aam
jno
mov
div
ret
pop
scas
in
in
arpl
in
lret
adc
adc
mov
add
popf
stos
pop
sub
jns
and
movsl
aad
mov
add
scas
addb
xor
push
jge
ret
fwait
cmpsb
fldenv
shrb
fldenv
cmc
out
pushf
enter
shll
mov
in
xor
xchg
ja
movsb
ret
orl
fcomps
mov
mov
add
addb
or
dec
std
adc
cs
add
mov
popf
fcom
lret
addb
out
sbb
cmp
out
xchg
or
mov
or
jl
mov
cmp
push
int
add
push
fs
adc
mov
xor
push
xchg
adcl
call
cmp
mov
roll
stos
cmp
in
push
popf
aad
imul
les
in
mov
inc
add
orl
jns
jp
mov
imulb
push
addb
stos
lret
add
loopne
jns
inc
or
dec
pop
dec
leave
adc
or
cmpsb
add
mov
cmp
je
inc
xchg
jp
xor
xor
mov
jno
ret
fistps
imul
fsubs
lds
dec
sub
in
add
cld
jl
ljmp
mov
aaa
add
dec
popa
adc
scas
jl
add
add
frstor
inc
add
or
push
add
popa
mov
mov
bound
setno
lret
inc
and
mov
add
pop
call
test
lea
add
jecxz
popf
das
sbb
add
bound
test
sub
loop
fsubs
sub
jmp
cmp
orl
pop
pusha
add
sbb
jo
dec
xlat
dec
inc
mov
sub
cmpsl
xchg
jge
sbb
or
xchg
push
add
std
jge
xor
test
aad
cmp
gs
in
loopne
sub
sub
icebp
popf
jnp
xrelease
pusha
add
sbb
add
dec
push
mov
mov
push
mov
inc
dec
not
xchg
repnz
daa
jmp
cmp
inc
or
push
ficompl
int
sub
cld
xor
or
test
jp
movb
addb
adc
xlat
sbb
pop
movsl
and
or
inc
add
xlat
imul
mov
sbb
loope
add
pusha
add
movb
adc
and
mov
add
add
stos
adc
add
cmpsb
jno
mov
or
add
mov
scas
pop
push
jns
xor
ret
lods
push
push
cld
ja
aam
outsl
iret
cmp
in
pop
pop
out
bound
mov
push
push
daa
shll
popf
push
mov
cmc
je
jmp
dec
fcomps
in
and
int
incl
xor
add
xchg
mov
add
clc
push
addb
sti
lcall
mov
dec
sub
add
mov
and
cmp
cltd
stc
int3
add
jbe
sub
inc
adc
movb
ds
pop
mov
mov
shr
mov
sbb
out
leave
arpl
add
stc
or
rcll
sbb
jmp
xor
add
das
and
rolb
adc
mov
jae
fisttpl
into
int3
mov
aas
aas
stos
inc
outsl
sbb
sbb
ja
mov
push
xor
add
adc
jno
cltd
lock
push
cld
mov
add
ret
sbb
jno
jae
jae
mov
mov
fldenv
xlat
icebp
sbb
pop
scas
jnp
cmpsb
shr
push
dec
push
repz
and
push
in
add
push
dec
loop
push
clc
mov
add
lret
fldenv
mov
push
or
jecxz
es
aas
push
and
add
inc
leave
rolb
add
dec
xchg
scas
out
add
push
rcrb
out
mov
das
jns
ret
test
xchg
cmovle
xchg
add
sub
movsb
sub
pop
mov
out
mov
xlat
stos
adc
mov
jmp
ret
and
push
or
mov
mov
add
push
add
pushf
ror
or
add
sub
push
cs
pop
jmp
jecxz
leave
fs
dec
inc
and
inc
add
add
call
pusha
add
jecxz
add
gs
imul
pop
xchg
cmp
add
addb
xchg
inc
push
fmull
outsl
pop
push
pop
add
pop
aam
mov
arpl
add
ja
out
add
inc
add
nop
inc
add
mov
cwtl
lahf
fld
add
lods
lock
popf
jb
mov
sub
mov
mov
fcompl
lods
add
outsb
fcoml
outsb
pop
jns
mov
repz
ret
stc
mov
or
add
pop
aad
mov
aaa
inc
add
xchg
jne
pop
aaa
out
inc
add
cmc
fisubrl
push
ret
pusha
add
sarl
in
add
push
mov
add
inc
sahf
int
nop
addb
add
add
sbb
xor
add
and
sbb
ret
shrl
xchg
push
sub
push
add
in
lret
in
cs
cmpsb
aad
ret
pop
sbb
xchg
aas
out
dec
test
jecxz
into
and
and
popa
out
ljmp
test
cmp
pop
adc
fwait
ret
mov
bound
pop
add
cmpl
out
sti
pop
mov
adc
loop
out
pop
mov
insb
push
out
frstor
lods
cmp
or
fdivrl
cmp
ds
aam
out
cld
jno
mov
jmp
jle
out
dec
imul
mov
syscall
jp
jl
and
loope
or
pop
xor
inc
rolb
jnp
or
jnp
subl
inc
dec
jnp
ja
mov
jae
mov
scas
addl
test
pop
lahf
xchg
fnstenv
icebp
in
pop
sub
mov
ja
or
call
in
add
scas
mov
rcl
mov
in
sbb
rolb
sbb
add
mov
stc
std
push
cli
xchg
xor
jecxz
mov
xor
outsb
xor
es
es
ret
and
sbb
xor
dec
add
mov
imull
int3
jge
push
mov
iret
pop
fidivs
addb
mov
addb
imul
xor
aad
add
adc
xchg
pop
lods
iret
repnz
ret
in
inc
add
sbb
dec
mov
mov
ret
cmp
rol
jge
ret
repz
sahf
iret
pop
mov
sbb
add
leave
jb
dec
jl
repz
cli
jb
leave
mov
lock
push
fs
cltd
cmpsl
lods
push
adc
push
jecxz
pusha
add
movb
stc
or
adc
or
ljmp
cmp
push
add
add
fisttps
cmp
les
movsb
test
and
inc
add
add
pushf
ror
movsb
xchg
fisttps
iret
push
xchg
inc
pushf
pushl
cld
test
mov
test
pop
dec
arpl
shrb
sub
aad
sbb
out
das
sbb
inc
outsb
dec
and
scas
sub
sar
sub
das
mov
lcall
test
data16
or
add
mov
lcall
mov
mov
movsl
shlb
xor
mov
pop
mov
or
pop
pop
rorb
add
rolb
xor
rcrl
out
in
jmp
rcrl
jp
lods
mov
sub
andl
dec
cmp
pop
mov
sahf
fcom
out
add
cmp
std
xor
sub
mov
inc
add
and
fs
cltd
das
inc
add
adc
pop
mov
je
dec
lret
pop
fnstsw
xchg
sbb
addb
add
adc
in
sub
bound
cmp
lret
aam
xchg
fmull
scas
out
and
cltd
jle
aam
push
imul
xchg
mov
inc
or
in
jne
pop
addb
iret
push
inc
nop
jbe
scas
fdivrl
xor
pop
pop
mov
push
scas
int
sbb
mov
lock
push
mov
aas
fs
pushf
adc
add
sub
into
mov
loope
lret
mov
jle
cs
sbb
add
cmp
add
and
repnz
or
add
repnz
pushf
in
cmp
pop
dec
enter
rcll
loope
outsl
and
scas
rolb
add
push
or
int3
sbb
jne
dec
mov
dec
sbb
test
cwtl
and
stos
cmp
lock
stc
ja
push
add
out
jmp
push
adc
mov
xchg
roll
mov
xchg
inc
lret
mov
xor
add
data16
aad
xchg
test
fcompl
adc
fimuls
test
xor
fstpt
inc
add
addb
in
pop
fwait
cmp
dec
in
rcll
out
out
inc
add
clc
es
mov
jg
add
xor
les
shl
scas
or
lock
jp
inc
add
inc
dec
sahf
mov
add
mov
jb
imul
add
fidivs
adc
pop
imul
cmpsl
sbb
and
mov
les
push
stos
sbb
xlat
adc
jnp
add
icebp
dec
cmp
mov
add
add
sub
js
out
adc
add
insl
insl
fcmovb
test
cltd
mov
push
mov
sub
cld
adc
mov
cld
xor
xlat
inc
add
sahf
adc
daa
xchg
cltd
loope
adc
pop
pop
adc
outsl
sub
push
jmp
sbb
add
lock
add
out
addb
dec
test
js
add
or
sub
cli
jg
jge
mov
add
repnz
push
sub
xchg
adc
push
repz
pop
inc
add
push
test
xchg
jno
jge,pt
add
je
push
sarl
cli
and
lea
filds
add
lret
dec
mov
out
out
pop
or
adc
sub
push
adc
jecxz
push
call
gs
jmp
adc
cli
test
pop
xchg
iret
cmp
mov
pushf
nop
call
jb
cld
out
sub
mov
add
mov
xchg
fnstenv
cli
addb
add
jle
mov
pusha
add
pop
mov
push
out
into
add
inc
add
or
lds
das
pushf
xchg
sbb
popa
mov
jle
jl
add
jnp
sbb
cmpsl
inc
add
loop
mov
aad
stos
fs
mov
ret
adc
test
sbb
dec
lods
ljmp
movsl
xor
ret
mov
data16
pop
imul
or
add
and
or
pop
jns
cmp
xor
add
test
jb
cs
sbb
xor
jecxz
cmp
and
adc
lods
sub
ret
xchg
sbb
xchg
scas
mov
add
shll
jo
cmp
sbb
and
or
push
push
or
ret
jle
es
imul
cmp
dec
inc
add
pop
in
adc
add
add
dec
mov
push
aad
dec
push
add
push
sbb
cld
add
movsl
aad
add
sbb
adc
lods
and
cmpsb
test
dec
fstpt
das
mov
pusha
add
add
cltd
jecxz
add
and
add
sbb
fisubl
nop
sti
fisubrs
arpl
pop
push
sub
int3
xchg
or
add
cmp
add
lcall
je
aas
sbb
addb
lea
ljmp
add
jbe
jle
xchg
dec
lock
addb
in
and
xor
dec
out
stc
addb
xchg
les
das
std
fcoml
fmuls
stc
hlt
callw
pop
dec
in
xchg
out
std
lods
fdivs
adc
int3
adc
addr16
jno
inc
fdivrl
and
and
and
cmp
push
addb
xor
lods
ja
add
lret
pmuludq
imul
cld
cmp
mov
pop
push
sbb
scas
adc
pop
inc
add
cld
aad
jne
push
insb
loopne
add
aas
daa
pop
ret
jne
dec
push
pop
pop
mov
add
add
loope
in
sbb
adc
mov
movb
mov
out
paddq
fcoml
lods
inc
add
movsl
mov
shlb
addb
jo
push
jbe
jge
int
or
mov
scas
insl
inc
add
nop
mov
scas
test
adc
xor
cmp
aas
push
ss
mov
adc
xor
ds
add
sahf
das
push
sti
sub
mov
jmp
lods
or
mov
add
enter
dec
mov
stos
push
adc
cmp
loopne
rolb
and
and
arpl
insb
in
or
pop
add
test
nop
imul
add
stc
push
pop
dec
stc
cwtl
add
test
push
vfrczps
les
data16
add
mov
and
mov
add
out
dec
sub
mov
push
xchg
loope
push
jnp
repnz
dec
addb
movsl
mov
cmpsb
fldl
arpl
or
addb
add
mov
xor
fistl
mov
cld
js
dec
add
mov
icebp
jnp
hlt
popf
std
push
sub
leave
sti
mov
adc
fwait
out
test
sub
cli
js
xor
mov
xchg
repz
out
cmpsl
or
mov
in
int
pop
push
aad
inc
sub
ljmp
test
adc
pusha
add
pop
sbb
aaa
adc
hlt
dec
test
and
outsl
jnp
add
mov
mov
cwtl
xlat
imul
pop
inc
add
int3
aas
add
push
lds
xchg
cmpsb
mov
bound
jae
inc
arpl
popf
movsl
rol
add
jb
leave
sub
clc
ror
cld
mov
leave
mov
cmp
and
fs
scas
or
or
das
jbe
shrl
or
jae
mov
xchg
subl
movb
mov
add
pop
int
or
test
adc
jnp
push
leave
lea
mov
jle
bound
add
loopne
addr16
add
inc
cmp
insb
jge
lcall
ljmp
ja
xchg
mov
add
and
ja
mov
pop
test
add
int
jecxz
lock
ds
xor
pop
adc
add
aam
jmp
std
insb
dec
or
icebp
fmuls
xchg
jne
imul
rolb
xchg
movsb
rorl
fbstp
pushf
addb
sub
pop
cmpsb
and
cmp
insb
out
in
cmpsb
int3
dec
in
loopne
mulb
stc
mov
add
sub
sbb
and
out
icebp
and
les
xor
inc
add
push
lcall
push
add
mov
dec
push
mov
insl
or
add
bound
pop
fadds
das
lahf
into
inc
data16
mov
xor
lods
addr16
add
add
fadd
add
loop
add
in
add
pop
add
in
cmc
mov
cmpsb
or
inc
xor
lcall
cmp
lods
ljmp
push
test
fcoms
fs
jno
inc
add
sbb
jg
or
add
push
push
lds
jge
arpl
in
dec
test
add
xor
add
add
mov
mov
add
lcall
sbb
sub
xchg
in
sbb
in
shr
pop
jno
mov
push
loope
sub
pusha
add
in
into
adc
sub
mov
push
xchg
dec
cmp
es
add
jle
add
ret
inc
add
mov
xor
outsl
inc
lcall
test
dec
addr16
or
iret
lods
lret
xor
mov
ss
add
push
ljmp
cmp
clc
aad
ficomps
std
idivb
add
sub
add
push
faddl
mov
add
dec
pushf
repz
stc
stos
xchg
push
xchg
mov
add
mov
add
iret
call
rolb
and
nop
mov
jp
mov
rcll
add
fisubrl
pop
ds
mov
lock
pop
js
andl
sti
lea
mov
cmc
sbb
pop
jb
cltd
iret
ds
cwtl
popa
or
sahf
or
dec
mov
add
push
or
push
add
jno
movsl
push
push
add
out
leave
nop
push
add
out
mov
test
xchg
inc
xchg
jg
push
or
in
cld
add
fnstsw
movb
bound
dec
pop
bound
pop
inc
xchg
cmpsl
mov
inc
add
repnz
insb
sbb
xchg
dec
xorl
dec
daa
and
jnp
add
add
nop
mov
inc
add
cmpsl
cmpsl
leave
adc
daa
loope
je
cmpsb
jns
push
jecxz
in
cli
daa
jmp
out
inc
je
add
adc
psubw
mov
test
cmc
stc
cli
mov
stos
mov
loop
std
or
pop
jl
or
mov
in
sbb
jns
std
inc
add
adc
mov
cmp
repz
test
cmpsl
jae
fdivrs
inc
adc
in
subl
dec
cmpsb
adc
sbb
jge
push
inc
fcom
push
addb
jmp
mov
cmp
mov
lock
fcmovnbe
jbe
shll
mov
add
aam
stos
insb
testb
push
pop
pop
adc
and
call
insl
add
pop
add
push
xchg
mov
add
push
data16
sub
testl
add
push
mov
arpl
pop
fmuls
insl
iret
mov
call
std
add
rolb
aam
insl
pop
inc
xor
stc
fwait
cwtl
cli
icebp
mov
sbb
add
rorb
lock
push
mov
sahf
push
loope
sbb
push
mov
add
add
add
mov
push
stos
fmul
or
test
and
pop
cmp
stos
cld
sub
decb
xchg
aam
and
enter
insl
ljmp
xchg
rdmsr
in
in
cli
inc
add
pop
xchg
ds
add
in
add
lret
mov
scas
push
ficomps
sti
push
loop
xor
add
iret
js
mov
push
mov
mov
sub
imul
lods
push
cmc
adc
iret
and
mov
imul
int
push
out
mov
movb
inc
fnstenv
arpl
pop
repnz
push
jp
loopne
or
xlat
popa
mov
aad
mov
fdivrl
rcrl
add
mov
add
mov
outsl
fsts
add
xor
call
jae
xchg
or
loope
adc
jle
sub
aam
push
out
out
mov
fwait
lods
push
arpl
fwait
cmp
sub
rsqrtps
jne
push
mov
add
sbb
in
rolb
sbb
add
gs
incb
or
add
or
add
test
loope
jbe
imul
add
dec
jbe
jbe
add
bound
xchg
inc
adc
test
bnd
xchg
mov
loop
das
mov
mov
cmp
shlb
or
jecxz
adc
das
aad
dec
cmp
sbb
mov
dec
sahf
and
sub
decb
pop
add
cmpsb
mov
xor
les
fisttps
pop
pop
add
pop
push
add
xor
add
std
idiv
xchg
cli
jecxz
mov
or
sti
jl
lea
or
pop
cmpsw
in
xchg
ror
mov
pop
test
cmp
stos
shl
jns
add
nop
pushf
mov
test
cli
xchg
inc
add
xchg
xlat
lds
add
add
adc
sbb
sbb
fisubrl
or
sahf
jp
hlt
push
dec
jb
pusha
add
and
xchg
mov
dec
sub
cmpsl
imul
inc
add
jg
adc
gs
dec
inc
or
mov
xor
jno
mov
movb
add
mov
mov
xchg
sbb
mov
fidivl
jg
mov
jg
dec
lret
xchg
push
push
add
lcall
hlt
xchg
cli
int
push
scas
fmull
push
cmc
das
mov
hlt
repz
out
les
scas
push
pop
push
mov
imul
out
adc
mov
mov
je
jle
add
add
std
xor
rorb
rcll
add
les
sbb
push
outsb
fistl
test
popf
aad
mov
pop
lahf
push
subl
mov
add
hlt
mov
mov
je
or
add
or
sub
aam
out
negb
les
and
mov
daa
and
inc
push
xor
movb
add
sti
mov
mov
mov
popa
push
enter
dec
mov
sbb
bsr
and
out
lods
sub
mov
pop
call
push
in
cwtl
add
lds
mov
jg
jnp
mov
mov
dec
popf
pop
dec
out
movb
pop
scas
movb
push
mov
mov
dec
gs
add
mov
popf
sub
sbb
pushf
int
pop
cmc
or
popf
inc
add
data16
std
dec
push
push
fbstp
addb
in
inc
test
add
addr16
notb
inc
cltd
repz
imul
add
les
push
xchg
mov
xor
fs
adc
xchg
xlat
gs
addr16
roll
nop
cmp
add
fstl
int3
push
push
pop
sub
add
das
fdivrs
shrb
loope
call
pop
mov
mov
pop
test
xchg
push
add
ret
mov
icebp
push
into
and
mov
xchg
add
or
jge
loope
pop
sbb
xchg
int
dec
sbb
push
dec
femms
and
sti
xchg
sub
outsl
pop
enter
in
cld
mov
fcomps
jno
dec
addb
mov
add
movb
add
inc
icebp
int
pop
sub
das
mov
dec
push
mov
lcall
add
mov
loope
mov
add
out
inc
add
mov
mov
or
add
xchg
cmpsb
loop
sbb
fsubp
outsb
mov
add
dec
call
push
lret
je
movsb
pop
frstor
push
movsl
inc
add
inc
add
add
sub
mov
add
dec
cmp
bswap
sbb
xchg
adc
jp
out
jbe
add
and
mov
cmp
inc
add
imul
add
pop
dec
jmp
repnz
loopne
dec
insb
mov
jg
xlat
mov
or
dec
pop
ds
mov
jecxz
shrb
xchg
mov
adc
loope
mov
pop
insb
mov
push
stos
jae
cmpsb
rolb
add
in
jge
jae
loop
js
cmp
add
add
loope
mov
add
outsb
inc
add
cli
cmp
add
nop
cs
jmp
pop
shrb
call
xchg
cmp
mov
lods
fstpt
mov
or
rclb
add
xchg
push
icebp
hlt
cwtl
outsl
inc
add
arpl
mov
aas
push
test
or
sbb
or
sarl
xchg
dec
add
adc
dec
mov
mov
mov
xor
inc
add
je
add
mov
inc
add
and
mov
dec
clc
ja
xor
sbb
inc
add
add
add
pushf
out
pop
push
inc
add
xchg
dec
jle
jle
xor
jmp
xor
rolb
rcrl
test
loopne
add
rolb
enter
ficoms
or
and
ret
xor
pusha
add
add
and
add
loope
add
or
aad
sbb
pop
outsl
call
pop
cmp
mov
pop
test
mov
xchg
int3
enter
fistpl
mov
lea
sub
and
int
and
mov
les
pop
inc
rolb
arpl
add
dec
clc
std
or
add
cmpl
outsb
in
fdivl
out
fcoml
stos
add
movsb
xchg
clc
lods
jp
add
mov
mov
aaa
jns
push
mov
bound
push
mov
aas
and
jecxz
repnz
or
inc
add
dec
lods
pop
xor
or
jne
rclb
mov
cmp
pop
push
bound
out
rolb
int3
pushf
orl
adc
pop
mov
add
sub
std
mov
pop
dec
js
add
push
fnstsw
call
jae
add
push
or
out
loope
mov
lea
icebp
jnp
int
or
in
test
cwtl
mov
ja
xor
out
fsubrs
ret
cmp
aam
mov
jo
je
jnp
cld
ret
daa
jns
mov
jns
mov
call
pop
lret
add
or
lcall
jg
lea
jmp
add
add
data16
into
mov
cli
popf
clc
and
mulb
ret
push
xor
pop
pop
in
inc
popa
in
cld
and
lcall
push
inc
add
adc
mov
daa
and
mov
out
mov
leave
mov
nop
add
in
cmp
ret
cs
iret
add
nop
dec
stos
jnp
mov
sbb
out
lds
or
cmp
mov
add
add
ret
cld
inc
add
add
call
mov
push
add
mov
jae
jecxz
add
pop
mov
add
out
pop
add
lahf
out
inc
add
repnz
mov
adcl
clc
push
leave
out
xor
add
fisubrs
int
cmpsl
sub
les
or
xchg
fwait
pop
hlt
push
xor
inc
addb
xor
jo
mov
mov
out
mov
add
out
mov
xor
mov
insl
push
mov
inc
lret
insl
rolb
add
add
jge
es
pop
inc
add
xor
jae
add
add
repz
jge
dec
mov
jl
movsl
arpl
xlat
fisubrs
addb
rorl
add
adc
loopne
dec
repz
jge
addb
jae
clc
rcl
iret
pop
addb
push
scas
adc
adc
pusha
add
mov
lock
inc
add
inc
or
adc
dec
lods
xchg
xor
jg
or
add
loope
es
or
add
adc
test
je
adc
outsl
jle
add
stos
imul
jb
dec
push
add
sub
pop
or
fstl
out
jmp
xchg
ficoms
push
into
fidivl
addb
xchg
ds
pop
sub
jge
push
jge
mov
cli
pop
sub
pusha
add
add
mov
cld
adc
mov
inc
dec
jecxz
aas
jge
xor
fcmovne
xchg
fisubrl
leave
clc
lods
push
je
and
push
add
lods
movsl
dec
out
ret
xlat
adc
repnz
cmpsb
jmp
lock
sub
clc
mov
loopne
ljmp
cmp
push
dec
insb
daa
fimull
fwait
imul
addr16
add
testb
movsw
into
push
jg
fisubl
mov
arpl
shll
mov
mov
fisttpl
adc
jne
mov
add
xchg
je
iret
push
add
jg
adc
adc
mov
test
jp
movsl
pushl
pop
lea
inc
add
mov
ljmp
ds
aas
adc
xor
xor
pop
jge
add
out
dec
pop
das
and
das
popf
inc
add
in
cmp
mov
xlat
xor
push
loopne
lahf
outsl
adc
pop
cs
in
cld
cmp
jns
add
inc
xchg
xchg
dec
lret
fistpl
and
sbb
add
andl
push
repnz
cs
add
and
leave
inc
cli
dec
dec
cmpsl
push
out
cld
cmpsl
jbe
xor
cmpsb
add
addb
sbb
mov
fsubl
loop
mov
mov
cmpsb
jb
movb
xchg
push
aas
jo
cmp
sti
sbb
gs
aad
xchg
daa
push
fs
mov
add
pop
cmp
ss
fbld
jne
xchg
cmpsb
call
inc
inc
add
jge
into
shll
push
or
outsb
mov
add
xor
add
or
add
enter
add
add
and
call
das
enter
int3
pop
test
outsl
pop
scas
fmuls
xor
dec
enter
xchg
add
or
jle
mov
fists
add
stc
push
stos
add
jns
cmpsl
test
mov
add
mov
add
popa
test
outsb
push
jge
xor
cmp
lahf
lods
ljmp
xlat
enter
arpl
push
jb
in
aas
xchg
adc
inc
add
repz
lds
outsl
push
jnp
xchg
dec
mov
push
cmpsb
jae
out
icebp
and
jge
repz
push
dec
or
movsb
sub
jae
mov
mov
jecxz
and
dec
sarl
mov
dec
mov
mov
xchg
ficoml
jle
loopne
inc
pop
loopne
dec
je
add
fbld
add
mov
sub
xchg
mov
ljmp
and
dec
xchg
xchg
lds
adc
add
push
dec
add
dec
or
dec
insw
fwait
push
cli
push
addr16
clc
pusha
add
clc
or
mov
fbld
add
jg
mov
add
addb
and
sbb
enter
add
cmc
jnp
iret
aas
insl
inc
add
cmpsl
xchg
cmp
xchg
push
mov
xchg
cmp
fistpl
add
mov
stc
mov
test
int3
fwait
subl
shlb
inc
add
movsl
ret
dec
test
lock
inc
add
push
lahf
xchg
add
jp
add
aas
fnstenv
add
and
les
xchg
les
aam
lret
inc
add
pusha
add
dec
xor
and
cmp
call
mov
dec
inc
add
add
dec
les
ret
movb
xor
divb
rorl
xchg
inc
mov
dec
dec
les
out
push
add
flds
xchg
dec
lods
xchg
sti
adcl
addb
das
push
testl
cmp
stc
addb
xchg
adc
out
mov
test
pop
adc
sbb
xor
sbb
lcall
or
fbld
add
add
or
adc
aam
rol
cmpsb
mov
push
pop
or
and
out
pop
lea
test
push
dec
xor
les
cmp
lret
mov
jle
xor
icebp
push
push
and
ds
add
or
pop
aaa
xor
xchg
dec
clc
ret
add
xchg
pop
inc
aaa
fisttpll
add
or
xchg
scas
xor
dec
inc
add
pop
jo
ja
add
addb
daa
fisubrl
xchg
in
imul
in
sbb
dec
mov
test
fistl
nop
pop
repnz
aas
stc
pop
adc
js
add
orl
rclb
mov
sub
jl
shlb
and
xor
mov
ljmp
jmp
addr16
lahf
pop
pushf
inc
add
mov
fdivrl
jae
mov
lds
xchg
xlat
mov
mov
loop
add
jns
cmpsl
or
adc
mov
mov
adc
stos
mov
fists
xchg
pop
dec
mov
add
xchg
movsb
mov
es
add
rolb
cmp
push
jae
sarl
inc
xchg
mov
aam
lods
rolb
jae
iret
ja
or
and
sti
cmp
movsl
test
cmp
add
lock
rolb
sub
or
daa
xchg
and
pop
sub
push
loopne
xor
xor
mov
mov
out
cmp
addr16
pushf
or
sbb
cmpsl
xchg
jnp
addb
bound
pop
movsl
mov
mov
mov
cmp
adcl
outsb
and
addb
mov
rorb
repz
add
jns
add
ljmp
mov
mov
loop
fldenv
xor
aaa
out
mov
stos
pop
add
mov
adc
jmp
add
cmc
jne
mov
mov
mov
shrl
dec
xor
xchg
xchg
add
add
xor
inc
mov
add
inc
jmp
outsl
mov
inc
add
jns
add
jnp
cmp
mov
pop
out
xchg
push
and
mov
jmp
xchg
sub
loope
xor
sbb
mov
push
daa
jl
lret
enter
sbb
les
in
jp
pop
inc
in
xchg
jae
add
or
sahf
stc
rclb
mov
lds
jecxz
js
iret
stos
mov
jge
int
ret
test
je
lahf
xor
cmpsl
push
mov
in
adc
cli
lcall
mov
jae
dec
pop
dec
mov
icebp
cmp
std
inc
lahf
addb
fstps
jnp
sub
add
dec
adc
into
repz
sti
in
adc
jns
add
and
xlat
jg
add
mov
or
xchg
mov
jae
pop
pop
inc
dec
xchg
adc
lock
rcl
hlt
cmc
or
inc
shll
inc
sub
int
loopne
ss
jle
jo
repnz
pop
int3
fisubrl
adc
jge
push
fnsave
pop
scas
mov
cmp
cmp
pop
sbb
push
sub
mov
push
push
or
add
xchg
lods
sbb
sub
test
xchg
add
adc
popa
push
mov
add
enter
mov
sbb
or
push
and
int3
xchg
insb
lods
sbb
add
jge
xor
add
sbb
mov
or
cmp
add
mov
mov
dec
mov
hlt
loope
add
scas
or
movb
cmp
fcoml
sbb
cmc
addl
add
pop
inc
adc
inc
add
or
rolb
add
test
sbb
arpl
jp
ret
sbb
add
inc
cmp
or
cmpsl
test
fstpt
adc
xchg
mov
lcall
loope
mov
imul
das
xchg
pop
mov
mov
push
pop
xlat
or
fld
out
fsubp
mov
jae
jae
mov
outsl
cmc
push
jp
into
push
dec
jl
lea
dec
sub
daa
or
mov
mov
std
sahf
inc
xchg
xchg
pusha
add
repz
iret
hlt
add
add
cltd
dec
insb
pop
lea
add
add
lods
in
aam
cmp
push
icebp
or
and
pop
dec
aaa
pushf
fisttpll
cmp
and
std
push
adc
pushf
ss
jge
es
push
das
cwtl
pop
scas
sbb
add
add
add
leave
sub
das
mov
jns
loope
clc
mov
aad
jns
and
dec
icebp
add
push
push
xchg
lds
iret
and
sub
add
fcompl
das
adc
subl
in
aaa
cmp
nop
pushf
dec
fadds
xor
in
and
dec
stc
lock
pop
sbb
add
pop
into
arpl
mov
mov
lret
push
add
add
lods
stc
into
arpl
inc
fsubl
jg
sbb
add
pushf
dec
and
popa
addb
lods
sub
jp
xchg
in
push
dec
sub
cmp
fldt
jg
pop
das
fs
push
jns
pop
jmp
add
clc
lret
stc
xor
test
adc
test
nop
mov
xchg
cmp
notb
inc
sbb
add
xchg
sysexit
cli
movsb
xchg
push
daa
cli
dec
cmc
and
or
add
jge
mov
aam
or
fadds
pop
fwait
xchg
inc
stc
mov
add
daa
arpl
fstpt
sbb
push
loopne
arpl
mov
push
sahf
push
in
add
div
pop
in
in
and
sbb
bnd
dec
inc
add
jnp
in
pop
inc
add
fistpl
sbb
or
ds
repnz
dec
or
push
rolb
xchg
mov
add
pop
mov
push
inc
jb
ss
stos
xor
popa
mov
push
add
mov
or
mov
addb
arpl
mov
dec
sti
lahf
mov
xchg
in
mov
jp
inc
adc
or
mov
addb
or
push
add
loopne
lods
loopne
xor
adc
push
inc
add
cmc
ljmp
repz
sub
sub
mov
in
xchg
nop
sub
popa
pop
cld
jo
sub
pop
loope
mov
xor
sub
mov
ljmp
lret
dec
jns
jge
jmp
sub
jns
add
insb
push
push
mov
std
shlb
push
test
pop
rol
jl
push
and
push
test
punpckldq
icebp
cmp
cmpsb
repnz
daa
pop
mov
mov
jmp
or
inc
add
mov
jp
xchg
sar
js
push
add
jns
leave
hlt
gs
ret
and
sub
or
loope
adc
rcll
rorl
cmp
add
repz
inc
add
xchg
popa
push
push
dec
cmpsb
mov
push
xor
add
adc
add
loop
sbb
jl
mov
add
lods
icebp
pushf
cmp
popa
sub
popa
pop
push
cmp
cmp
cltd
scas
push
jbe
and
xchg
cs
test
aad
dec
pop
jge
stc
xchg
fcmovnu
sub
stos
cltd
stc
or
adc
inc
add
add
adc
mov
mov
sar
push
fwait
imul
pop
push
jns
add
add
xlat
adc
push
xlat
mov
into
jle
daa
sbb
mov
mov
jg
add
cmp
mov
fldlg2
xor
push
push
mov
inc
add
loopne
mov
icebp
clc
sarb
jnp
push
jno
xchg
mov
sbb
add
cmp
mov
cli
push
push
mov
fstl
cmp
movsb
xorl
pop
cwtl
leave
mov
pop
mov
or
call
dec
jb
out
arpl
loop
and
mov
pop
stos
mov
push
pop
wrmsr
test
imul
imull
icebp
enter
adcl
add
dec
push
mov
mov
xchg
lods
mov
and
push
push
add
lcall
add
out
repnz
imul
add
loope
insl
dec
add
mov
mov
lods
lret
pushf
addb
sti
hlt
insl
fidivs
add
mov
in
addb
sub
jp
xchg
sub
ret
mov
sbb
mov
lods
insb
push
xchg
test
insb
mov
fisttpll
dec
aas
hlt
sbb
push
loopne
out
clc
in
sbb
xor
pop
lcall
lods
in
out
xchg
xchg
pop
push
fdivl
arpl
out
sarl
in
imul
jne
das
mov
and
jnp
add
out
lods
in
and
sub
push
inc
std
dec
pop
je
or
ja
loop
cmp
imul
push
mov
sub
xchg
push
enter
mov
or
addr16
aas
insb
addb
xchg
mov
add
dec
and
sar
rolb
dec
mov
xor
fnstenv
push
int
fisubrl
or
push
or
imull
xlat
jg
movsb
and
mov
pop
leave
inc
mov
fmull
popa
es
imul
insb
repz
nop
movsb
out
mov
xor
mov
xchg
rolb
add
cmp
into
leave
mov
inc
adc
fs
mov
test
je
stc
pop
adc
xor
test
lods
hlt
iret
roll
add
mov
mov
test
shll
sarb
or
mov
add
call
xchg
insl
adc
adc
or
push
jo
pop
fs
inc
add
stc
mov
and
add
adc
sub
cmp
sbb
push
out
adc
xor
ja
sbb
push
add
and
daa
pop
xlat
aaa
dec
push
add
repz
sub
add
out
lea
add
mov
fcoms
cvtps2pd
insb
lahf
lret
out
rolb
and
or
test
adc
stos
js
movb
mov
sub
sub
add
cmp
out
fldenv
dec
cmp
bound
add
mov
xchg
out
add
and
mov
movb
inc
add
add
fld
add
pop
inc
ffreep
add
nop
dec
sbb
aas
je
mov
mov
mov
adc
jo
or
in
imul
add
dec
pop
int3
repz
sub
and
add
std
jb
add
out
fcmovnb
add
in
mov
jno
popa
cmp
push
mov
add
push
and
add
pop
adc
scas
and
xchg
mov
push
or
add
loopne
lock
jne
loopne
add
sub
into
roll
movb
and
jle
rolb
out
pop
nop
das
jmp
or
add
adc
into
fisubl
insl
dec
jp
std
lock
inc
gs
xchg
cs
mov
ret
jnp
into
xchg
lcall
icebp
dec
rorl
jnp
ss
bound
movsb
outsl
rolb
vmwrite
mov
fsubrp
push
push
test
out
bound
jns
enter
adc
mov
ja
xor
cmp
add
jne
test
xor
push
ljmp
adc
fwait
shl
add
inc
lock
jl
or
aaa
imulb
sbb
xchg
add
push
pop
or
ja
sbb
mov
lock
aad
xchg
fwait
inc
sub
repnz
mov
add
fwait
adc
push
addb
sbb
mov
add
loope
aas
cmpsl
jb
sub
add
mov
jb
sarl
movsb
push
movb
pop
sbbl
xchg
sahf
or
adc
add
xchg
push
or
jg
fisubs
add
jnp
shlb
mov
dec
lret
jmp
cmpsb
sahf
push
les
pop
jo
inc
add
add
andl
add
cmp
sub
add
inc
jb
add
push
cmpsb
in
stc
inc
aaa
xchg
jbe
add
enter
cmp
and
in
lods
inc
add
sub
cmc
push
sbb
je
icebp
iret
push
clc
push
in
push
add
push
cmp
add
daa
pop
lret
add
add
and
push
jecxz
jns
push
out
cmp
mov
adc
adc
mov
inc
add
into
outsb
lahf
or
pop
push
lea
aam
fstl
popf
addr16
rolb
sub
sub
inc
push
popa
leave
pop
mov
sbb
cmpsb
mov
divl
sbb
add
add
icebp
add
add
xor
pushf
mov
push
and
inc
add
addb
bound
lock
jle
xchg
inc
add
scas
cmp
mov
je
push
xchg
pop
xorl
arpl
mov
ds
push
pop
push
inc
add
inc
add
jge
out
fimuls
subl
sbbl
cmpsb
ja
sbb
dec
insl
pop
fstp
xlat
and
les
adc
dec
lods
mov
sub
lret
xchg
or
iret
dec
lret
addb
add
or
lock
mov
imul
and
push
nop
iret
negl
jecxz
test
call
pop
mov
xlat
jmp
xor
pop
mov
movb
sbb
inc
adc
mov
sti
add
sbb
out
pop
mov
mov
add
shlb
rclb
mov
nop
xlat
fsubs
add
fwait
cmpsb
xor
or
imul
push
jl
incb
add
jle
jnp
add
and
inc
push
jmp
imul
scas
inc
lods
outsl
inc
add
add
push
and
push
sub
int
scas
xor
lds
pop
dec
dec
xchg
mov
jl
imulb
lret
je
xchg
dec
in
lcall
movsb
fdivl
call
repnz
mov
and
mov
fimull
aas
not
out
dec
movb
pop
test
aaa
xchg
and
mov
scas
fbld
add
das
punpcklwd
loope
cmp
addb
int
divl
int3
xchg
xchg
in
or
sbb
sbb
mov
sub
mov
fwait
aam
jmp
add
into
xlat
std
mov
stc
hlt
jno
xor
push
dec
lcall
sbb
mov
push
add
jg
lret
cmp
mov
imul
and
in
dec
cmp
ljmp
mov
call
fdivrl
dec
ss
mov
aam
push
inc
sub
cmpsl
adc
test
rcrl
mov
push
cltd
mov
jne
push
outsb
xor
add
jle
cmp
fldl
imul
rcrb
mov
xor
jp
dec
dec
hlt
pop
push
ja
leave
sub
repz
dec
lods
xchg
jo
add
xor
sbb
xor
pop
inc
popl
add
int
inc
js
inc
mov
add
jo
add
xchg
ss
add
lret
insb
sbb
aaa
fnstcw
xor
mov
xchg
add
sti
es
xor
xchg
push
roll
movsl
hlt
stos
add
xor
mov
add
ret
jns
lds
inc
loope
jp
mov
out
jo
xchg
xor
pop
fdivrs
ds
aam
xchg
push
into
pop
jecxz
ja
daa
aaa
mov
pop
adc
mov
lea
mov
fs
push
mov
xchg
jno
leave
aaa
xchg
mov
inc
xchg
cmp
jae
out
popf
inc
add
cmp
sbb
sahf
sti
add
xchg
lock
xchg
or
lret
jno
into
enter
lods
decb
add
add
cli
push
sbb
sbb
and
ret
push
and
lret
mov
mov
loope
fsubp
mov
dec
cmp
subl
adc
add
cmp
cmpsb
mov
jae,pn
add
xchg
mov
xchg
or
add
mov
jge
outsl
xchg
or
jnp
add
mov
inc
add
iret
xor
ret
dec
ljmp
sbb
aam
add
ret
rolb
pop
test
sbb
add
and
aas
mov
add
fwait
or
add
insl
enter
cmp
xchg
outsl
and
insl
repz
add
out
push
cmp
add
inc
add
mov
jle
fistps
xchg
dec
enter
addb
mov
pushw
push
jl,pt
xor
add
cmpsb
xor
cmc
in
sbb
jmp
dec
jbe
xchg
mov
aam
jge
sub
mov
lcall
push
in
int3
mov
add
mov
push
fwait
daa
icebp
cmp
pop
movb
enter
add
add
sbb
fsub
aam
pop
enter
add
lods
das
pop
lret
add
addb
and
testb
mov
insb
mov
mov
jecxz
gs
fiaddl
jecxz
fwait
lcall
sub
int
jmp
sub
ja
insb
je
push
pop
sbb
imul
xchg
sbb
add
jo
ljmp
aas
push
cmp
rolb
pop
fdivs
mov
rolb
aas
lret
addr16
dec
mov
mov
jns
imul
in
div
mov
add
ret
xor
data16
push
push
int
ja
add
jns
pop
scas
jne
loopne
add
insb
xor
jecxz
test
aaa
pop
jge
shl
clc
out
add
inc
stos
iret
popa
jb
lcall
call
lock
add
js
mov
sarl
mov
sar
mov
push
bound
push
lahf
lcall
xchg
out
push
jbe
add
js
enter
mov
pop
cmp
ret
ljmp
mov
repz
fsubrl
mov
aaa
out
pusha
add
test
cmpsl
xchg
repnz
pop
mov
aad
popa
jp
or
push
mov
xlat
lcall
mov
xchg
lods
cmp
inc
add
out
inc
adc
push
iret
or
add
lods
loope
bound
les
jl
into
sub
fiaddl
nop
imul
jp
adc
imul
jge
and
add
pop
inc
ds
push
popf
notl
add
adc
das
jnp
scas
fsts
jge
adc
and
sub
loopne
add
or
add
into
loop
jecxz
cli
xchg
and
lods
push
jnp,pt
mov
push
mov
add
jae
cmpsl
dec
push
xlat
and
push
or
ds
adc
cmpsb
aaa
sti
std
adc
lock
enter
fldl
jne
gs
movsl
std
inc
add
decb
dec
call
test
je
lcall
and
imul
lea
add
or
lods
bound
sub
pop
or
sbb
inc
dec
loopne
jg
movb
cmp
jnp
cmp
addr16
scas
mov
inc
add
test
repnz
pusha
add
inc
add
aas
movsl
push
dec
pop
sbb
jmp
dec
fiaddl
in
xchg
jg
dec
lcall
jbe
pop
popf
mov
or
xor
add
notl
mov
fdivrl
sbb
inc
add
add
ljmp
in
add
xor
divl
inc
dec
rcrb
mov
insb
and
shll
lcall
shlb
push
add
mov
lock
or
jl
lret
jb
mov
jge
ljmp
cmp
cmp
cmp
aam
out
lret
jl
mov
jecxz
sbb
mov
or
or
jns
lock
add
out
push
movsl
mov
dec
mov
les
fisttps
add
and
jne
popf
movb
bound
adc
imul
shll
jnp
divl
mov
fcoml
out
ljmp
imul
sbb
jae
addb
fwait
mov
push
add
mov
mov
js
int3
mov
je
cld
push
addb
stos
mov
add
bound
inc
cmp
jmp
cli
dec
mov
adc
cli
sbb
jae
lock
out
push
mov
push
adc
lret
xchg
dec
popl
jmp
idivl
stos
cmp
dec
int3
addb
mov
cs
loopne
mov
std
cmp
add
add
jae
xor
and
xorl
stc
mov
cmpsb
xlat
lret
es
cld
xchg
lret
push
rcr
mov
xchg
mov
mov
sub
mov
add
xor
or
fiadds
sbb
inc
add
aas
fisubrl
mov
or
movsl
bound
dec
loop
jne
lcall
mov
aaa
mov
dec
mov
sbb
frstor
aam
pushf
mov
jmp
jno
add
add
movsl
jmp
push
cltd
dec
js
stc
jae
lcall
mov
mov
aaa
sbb
cmp
cmpl
shll
cmpsb
cmp
xchg
push
push
adc
pop
sub
cwtl
xlat
test
les
gs
sbb
push
ljmp
cs
jnp
out
outsl
adc
add
cmp
mov
call
pop
add
push
lret
pop
loopne
mov
lcall
push
stos
nop
pop
loopne
movsl
mov
sahf
popa
mov
add
call
jmp
jnp
fcmovne
ss
pop
mov
out
ret
nop
and
frstor
push
add
xchg
and
imul
pop
push
leave
pop
or
in
lahf
xor
je
adc
add
or
inc
hlt
cltd
lods
xor
pusha
add
push
cmc
out
mov
pop
cmp
lahf
xchg
adc
ret
aad
enter
and
jbe
call
iret
repnz
test
pop
rolb
mov
xchg
jg
cmp
data16
inc
idivl
pop
inc
mov
test
addb
sub
imul
clc
cmpsl
sub
mov
test
push
sub
lods
lds
add
inc
xchg
or
mov
sub
add
or
jmp
adc
pop
outsl
rorb
fisubl
shlb
push
or
lods
xchg
movb
out
out
sub
sub
jno
add
adc
push
call
add
jns
add
cmp
sub
xor
data16
cmpsb
xor
clc
xchg
sub
pop
jo
les
loopne
roll
add
aas
cmp
in
jo
adc
xchg
ss
frstor
push
std
ljmp
les
mov
and
inc
stos
pop
addl
dec
mov
add
icebp
pop
lock
fs
repz
sub
adc
inc
add
pop
js
and
call
adc
sti
ret
mov
ret
fs
lock
mov
cmp
lods
mov
jge
std
ljmp
lret
add
shll
ror
push
dec
jg
mov
loopne
ror
pop
lahf
icebp
dec
mov
add
add
cmp
std
and
or
add
andl
lea
shlb
mov
and
sbb
mov
shrl
arpl
adc
xlat
lahf
or
push
adc
push
ljmp
mov
jb
mov
int3
leave
movb
enter
mov
sti
xchg
jb
cmpsb
cmp
movb
lahf
jne
pop
test
mov
jnp
icebp
gs
enter
mov
out
add
mov
sub
mov
sub
jp
sub
cmp
mov
inc
add
adc
add
or
fidivrs
addb
insl
cli
sub
dec
add
push
cmpsb
and
ret
movsl
lods
out
add
push
inc
adc
xlat
adc
hlt
mov
adc
pop
mov
push
cwtl
repz
gs
lahf
push
dec
cmp
add
push
jne
jle
dec
dec
xor
pop
sbb
adc
andl
push
cwtl
movsb
adc
pop
mov
outsl
arpl
xchg
jbe
lcall
inc
lea
or
pop
jns
jmp
add
mov
jo
sbb
pmuludq
cmp
jo
or
add
loop
fnstsw
xor
fcompl
pop
adc
adc
jne
mov
push
es
add
and
adc
add
sbb
cmpsb
cmp
push
cmp
rolb
add
add
mov
cwtl
imull
hlt
aaa
or
add
in
lret
das
xor
xor
addb
xor
push
stc
add
pusha
add
ds
mov
popa
or
dec
int
mov
and
mov
sbb
push
push
lret
mov
enter
imul
es
add
inc
dec
icebp
shlb
pop
lock
hlt
nop
adc
aam
jg
call
jns
add
out
cmp
cltd
mov
cmp
je
xchg
adc
cmp
sbb
xchg
pop
dec
mov
and
add
inc
cmp
add
jo
add
insl
mov
cmp
pusha
add
pop
pop
or
cmp
inc
add
rcrl
pop
sbb
mov
mov
xchg
jge
movb
xor
int3
mov
add
pop
push
pop
mov
jns
mov
jne
or
sbb
fwait
dec
jne
sbb
jae
cmp
int3
mov
int
lods
mov
sti
cli
loop
loopne
addb
xchg
iret
sbb
xchg
sub
sbb
pushf
pop
pushf
dec
inc
add
int3
inc
add
mov
pop
clc
jno
addb
jmp
lds
fdivrs
jl
or
add
xor
mov
or
call
jge
add
jnp
ja
jp
in
addr16
mov
add
in
mov
and
and
push
xchg
scas
adc
xlat
insl
lahf
mov
cmp
imul
mov
add
movsl
fcompl
mov
and
sub
mov
adc
xor
and
push
adc
mov
arpl
xchg
jns
push
sub
mov
clc
enter
dec
mov
in
mov
mov
loop
xchg
add
out
test
sub
cwtl
mov
sbb
dec
addb
sbb
int
sbb
mov
add
in
cmp
test
jns
add
cld
pop
mov
pop
clc
stos
out
push
stc
and
jne
aas
popa
das
clc
shl
xlat
cmp
aaa
shll
or
fwait
and
adc
lods
xor
dec
mov
mov
xchg
push
and
cmc
ret
push
jne
push
add
out
ret
stos
into
mov
jmp
sti
mov
push
jne
add
jecxz
inc
sub
ficoms
xchg
insb
imul
xchg
cmp
or
push
lret
pop
mov
dec
addb
cmp
sub
repz
add
ret
add
shlb
aam
clc
pop
in
stos
pop
gs
out
jmp
bound
lds
mov
inc
add
xchg
pop
add
add
movnti
sahf
mov
ret
movb
jl
rcl
js
adc
inc
add
push
cmpsl
pop
jmp
inc
mov
pop
icebp
test
jg
movsl
mov
cmp
mov
out
add
lret
adc
loope
xchg
das
and
fs
out
sti
push
xchg
sub
pusha
add
push
loop
into
loop
add
fs
fstps
sub
add
dec
and
in
repz
rolb
ja
push
pop
shr
add
adc
dec
or
lods
mov
rcll
es
mov
bound
lock
jge
lods
iret
jecxz
push
adc
aam
mov
xor
push
ss
lea
test
jne
push
add
add
arpl
inc
pop
adc
popf
cmp
int
pop
flds
add
pop
scas
push
inc
add
test
dec
adc
rolb
jnp
fwait
sub
mov
data16
push
pop
cmc
imull
pop
lahf
addb
mov
dec
push
pop
mov
push
add
pusha
add
dec
das
mov
add
arpl
mov
orl
pop
pop
add
add
sub
dec
inc
rcrl
pop
sub
jl
lods
and
cmp
and
mov
mov
jecxz
insb
jno
mov
cmpsb
imul
les
add
lcall
jno
inc
add
mov
pop
mov
adc
repnz
mov
inc
add
add
inc
add
jge
imul
bound
daa
std
clc
sub
ret
dec
cmpsl
cmp
lods
mov
les
movb
sub
xlat
push
popa
and
in
push
push
fldt
daa
mov
mov
cli
push
les
and
sub
jg
jb
push
jge
add
leave
pop
push
add
inc
add
mov
mov
xor
leave
push
ret
and
aas
inc
sub
add
testb
es
xchg
sub
pop
mov
sbb
addr16
pop
in
jp
mov
orl
push
leave
bound
push
rorb
mov
add
cli
mov
ss
pushf
xchg
pop
jmp
jns
movsl
lea
stc
loope
or
into
xor
ret
mov
inc
pop
jge
cld
and
call
xchg
sbb
add
js
push
add
fstl
jns
add
xchg
inc
enter
sahf
out
dec
mov
xchg
push
xchg
mov
or
mov
hlt
mov
inc
or
shl
imul
jbe
hlt
adc
add
sbb
pop
inc
add
scas
mov
xchg
cmp
ja
out
lds
scas
sbb
xchg
adc
xor
stos
dec
test
add
ja
add
mov
jmp
int3
mov
sbb
pop
int
pop
dec
cmpsw
push
add
sub
scas
xchg
xchg
add
sbb
popf
mov
div
and
in
mov
add
cmp
or
dec
shl
pop
cmp
mov
repnz
imul
out
dec
scas
sub
pop
xor
or
ljmp
adc
aas
add
cmp
sti
into
adc
jbe
stos
out
jns
and
jnp
jecxz
icebp
jg
stos
sahf
mov
stos
in
and
jl
test
add
notb
adc
clc
daa
xchg
inc
add
mov
es
xchg
sbb
mov
add
rolb
sbb
xchg
pop
pop
icebp
xor
lock
mov
jg
pop
dec
mov
xchg
outsb
fwait
mov
jmp
jbe
xor
bound
pop
rol
lea
pop
dec
test
xor
sub
and
cmp
inc
push
shll
ja
imul
aas
pop
repnz
push
xor
add
rolb
ljmp
add
pop
je
enter
and
adc
in
adc
out
xor
ljmp
cmpsb
ds
cmp
jle
scas
ja
dec
mov
fidivl
std
push
push
loopne
ret
sbb
and
lock
jmp
mov
lea
mov
sbb
sbb
jecxz
and
jg
and
cmp
dec
sub
and
mov
push
fs
mov
inc
dec
sbb
dec
inc
mov
add
inc
add
add
push
dec
inc
xchg
xor
push
cmp
test
jb
fs
jge,pt
add
jnp
inc
add
dec
aas
shll
negl
scas
int3
mov
lret
add
fsubp
push
dec
lea
sub
fcomi
xchg
push
push
add
outsb
test
test
or
push
in
mov
outsb
dec
mov
sub
icebp
and
xchg
mov
add
repnz
jno
ljmp
loope
xor
outsb
or
push
fs
rolb
xchg
scas
daa
andl
pop
mov
inc
das
aas
icebp
and
xchg
pop
push
inc
add
mov
add
mov
dec
cmpl
pop
es
inc
add
lea
insb
and
and
aad
add
or
shr
inc
inc
add
rcll
add
in
xchg
xchg
mov
addb
add
sti
lret
mov
push
scas
fcomps
aam
dec
outsb
ja
iret
mov
les
into
jge
add
pop
cld
adc
or
out
ja
push
out
fsubrl
sbb
faddl
aam
and
cmp
js
pop
fsubl
push
jo
aaa
and
cmp
lds
lods
xchg
push
push
into
pop
mov
rcl
mov
daa
fucomip
loope
fs
fisttps
add
sub
inc
add
pop
lea
mov
outsl
mov
xor
lahf
xchg
adc
insb
push
es
pusha
add
add
cmp
scas
mov
int
mulb
stc
add
call
imul
roll
xchg
addb
sub
cmpsb
xchg
pop
xor
xchg
mov
addl
cmp
ds
sbb
lret
dec
jnp
xchg
into
outsb
xor
cmp
ja
and
test
scas
outsb
cmp
js
mov
jp
add
mov
xor
sbb
xchg
dec
scas
int
icebp
int3
out
xchg
sahf
sbb
fwait
pop
add
and
push
cmpsb
and
mov
mov
insb
out
sub
push
add
sub
bound
addb
repz
arpl
cmp
dec
leave
dec
push
xchg
loope
push
push
mov
ds
dec
adc
mov
push
dec
and
xor
xlat
cltd
sub
inc
push
std
into
sahf
imulb
jmp
push
or
cmpsl
adc
lahf
mov
scas
repz
outsl
mov
jno
xchg
test
stos
jge
jbe
lods
arpl
shrl
mov
adc
dec
outsl
dec
or
xor
cwtl
dec
mov
inc
add
lahf
ja
add
add
mov
add
add
adc
les
adc
shrb
arpl
movsl
insb
adc
es
mov
insl
jb
notb
pushf
cli
inc
add
lods
mov
mov
sti
add
popa
aad
jns
jle
les
pop
dec
loopne
bound
lods
sbb
addb
add
add
push
add
adc
mov
imul
jb
or
pop
jns
notl
dec
add
mov
xchg
dec
dec
movb
sti
adc
add
add
mov
mov
in
fildll
repz
mov
xor
sub
adcl
add
pop
jge
jno
adc
aad
dec
push
add
sub
xor
in
out
mov
or
and
into
cmp
or
cmp
add
add
repz
add
lods
lret
mov
add
fxch
sub
sbb
outsl
dec
adc
mov
cld
mov
int3
scas
jnp
mov
add
sarl
das
sbb
push
test
lock
mov
push
outsl
ss
add
jmp
mov
mov
add
je
xlat
vcvtsi2ssl
inc
fs
inc
add
scas
jae
andl
mov
fbld
movsl
imul
je
inc
add
dec
add
jmp
loope
jge
jne
adcl
add
push
daa
hlt
fwait
dec
push
mov
push
add
fwait
jl
jnp
xchg
lahf
xor
jae
xchg
es
addb
mov
push
and
std
sbb
mov
clc
loop
clc
icebp
pop
cmc
imul
and
mov
add
mov
sub
outsl
mov
cmp
fucomi
in
sub
call
mov
rcrl
stc
push
ss
lods
sbb
enter
in
add
jl
imul
mov
and
les
icebp
outsl
rolb
js
push
mov
jnp
imul
cli
addb
cmp
xor
movsl
xchg
rolb
jecxz
inc
push
aam
xlat
pop
mov
mov
pop
add
cmp
es
stos
dec
mov
cmp
add
pusha
add
add
lock
dec
fld
shl
leave
add
xchg
inc
add
cmpsl
or
jge
add
or
inc
call
add
cltd
test
jecxz
scas
mov
addb
jp
and
pop
xor
addb
outsl
test
daa
inc
jge
add
cld
fs
add
push
dec
addb
les
add
dec
push
push
pop
push
mov
leave
xchg
lcall
rorl
adc
icebp
inc
outsl
insl
in
add
dec
and
addb
mov
add
pop
xchg
cmc
or
push
mov
lret
jb
fsubl
add
jle
add
cltd
xchg
push
cwtl
xor
ss
iret
movsl
fistps
testb
push
icebp
rolb
push
cmp
outsb
dec
call
enter
outsl
sub
cmp
dec
sub
cmp
gs
sub
cmp
lret
movsb
push
popa
lcall
mov
or
lock
adc
jns
mov
pusha
add
es
mov
dec
pop
movsb
mov
push
cli
dec
arpl
jns
and
add
cmp
ja
dec
loopne
das
call
add
xchg
imul
pop
push
xchg
out
sbb
mov
xchg
cli
mov
test
std
jmp
sub
add
outsl
icebp
out
outsl
mov
nop
inc
cmp
sub
out
stc
pop
mov
jl
lcall
add
cld
lock
dec
cmp
bound
jne
popa
mov
pushf
pop
xchg
pushl
leave
outsl
xchg
aad
ljmp
shrl
call
cmp
cmp
add
ja
jl
mov
jae
fldl
mov
xchg
roll
push
mov
loop
jp
xor
add
add
fsubp
ds
push
push
or
jecxz
jg
loopne
ror
xor
lcall
lods
insb
push
xor
movsl
mov
adc
cld
pop
dec
dec
dec
and
out
or
movb
add
mov
test
add
push
ljmp
xor
xchg
sbb
stos
push
sub
rcll
jo
dec
les
sahf
insl
sahf
movsb
addb
movb
addl
jl
sahf
sbb
aam
jecxz
lcall
lret
cmp
fimuls
es
add
mov
push
cmpsl
cmpsb
and
cmp
mov
outsl
mov
and
xchg
mov
xor
xlat
imul
xchg
or
cmp
test
and
pop
add
ja
stos
pusha
add
sbb
adc
pop
jno
and
ret
dec
jb
in
sub
add
cld
imul
or
adc
fwait
or
mov
lahf
sbb
in
mov
dec
sub
mov
mov
pop
or
scas
xchg
mov
lds
addb
mov
sarl
add
ret
push
xchg
scas
mov
shl
outsb
stos
mov
jae
and
cwtl
rorb
mov
rolb
int
std
jnp
xchg
dec
fisubl
enter
sarl
outsl
sahf
pop
jle
pop
jmp
cmp
mov
dec
push
jnp
dec
or
mov
push
pop
test
pop
mov
sub
add
loop
in
aaa
mov
mov
lcall
int
inc
filds
add
add
out
into
xchg
stos
mov
dec
mov
dec
out
call
add
roll
loopne
push
fstl
push
jno
stc
pop
cli
scas
or
and
mov
test
dec
fwait
xor
adc
movsb
fs
imul
ds
in
push
dec
popf
xchg
nop
in
jbe
pop
mov
jl
imul
jb
push
fcoms
movsl
or
pop
pop
xchg
dec
ficoms
bound
xchg
lea
into
fwait
push
dec
fcomps
mov
sahf
push
cmc
sbb
cmpsb
mov
sbb
adc
dec
in
nop
jae
fnsave
addb
xchg
adc
lock
neg
fwait
xor
rclb
rolb
cltd
push
rcr
or
dec
pop
mov
outsl
push
add
add
and
cmp
add
movb
mov
lret
push
pop
outsl
xchg
cmp
add
and
inc
inc
add
sub
pop
mov
es
jle
push
sahf
lods
std
jae
inc
mov
add
imul
jno
mulb
add
test
stos
jp
in
ficompl
hlt
fscale
pop
xchg
sbb
or
jne
add
cmp
in
xchg
icebp
cwtl
out
das
mov
inc
xlat
xchg
lret
sub
mov
bound
cld
sbb
cmp
jne
mov
xchg
add
je
push
push
add
loop
fstps
and
push
or
inc
mov
imul
lds
lcall
add
ds
test
enter
rorb
inc
sbb
ds
int
stos
repz
outsl
cli
mov
cmp
jbe
dec
jb
push
jne
ret
hlt
gs
mov
fcmovu
inc
inc
add
xchg
sbb
cs
rol
or
mov
xor
add
punpcklwd
jmp
mov
repz
aam
shr
add
mov
shll
mov
add
cmp
fcompl
add
mov
push
push
adc
out
mov
ja
add
adc
addb
in
icebp
scas
mov
mov
test
es
mov
std
add
addb
lret
or
adc
in
test
add
out
divl
adc
jp,pt
sbb
inc
daa
rorb
fisubrs
imul
jge
add
in
and
add
shrl
fisubrl
add
lea
mov
call
push
insl
mov
cltd
enter
and
xor
ret
mov
add
popa
jl
add
xchg
mov
lods
mov
mull
rolb
fldcw
out
and
sbb
arpl
add
xchg
xor
and
dec
xlat
and
xorl
push
aam
mov
push
ret
repz
lods
xchg
shll
and
dec
sub
push
mov
xor
bound
sub
fsubs
xchg
add
mov
cwtl
movsl
cmpsl
mov
test
mov
pop
pop
xchg
sub
dec
dec
insb
mov
xor
add
jbe
xchg
movb
ror
lahf
mov
pop
out
nop
inc
mov
gs
iret
and
out
adc
push
js
push
cs
int
add
int
and
sbb
sub
xor
out
movlhps
in
xor
fadds
add
adc
fcoml
jnp
dec
add
aas
rol
cmp
pop
lock
add
dec
push
les
xor
inc
fdivl
jg
jl
pop
mov
sbb
pop
mulb
cmp
bound
sbb
cmpsb
addb
hlt
cli
or
push
xor
sbb
stos
pop
dec
jne
sub
cmc
inc
add
std
jecxz
jb
dec
lea
je
xlat
nop
xlat
dec
aam
sub
add
movsl
movsl
adc
push
mov
pop
pop
lods
or
mov
jnp
out
mov
adc
add
mov
sbb
xchg
mov
es
xchg
inc
pop
popa
into
add
push
mov
sbb
fidivl
out
movb
pop
pusha
add
out
jg
add
jnp
mov
lcall
push
cs
lock
and
pop
std
fdivr
or
out
add
jns
sub
mov
addr16
push
push
inc
add
lcall
addr16
fs
and
pop
inc
les
or
xchg
popa
bound
cmp
hlt
mov
add
inc
add
inc
add
adc
xchg
repz
ss
int3
jle
jns
outsb
mov
add
aaa
fsubs
mov
jb
push
jle
sub
insl
push
mov
add
outsb
jl
xor
mov
mov
jg
enter
xchg
ja
movsl
pop
xor
sahf
mov
push
push
add
sbb
iret
push
mov
sub
xchg
insb
insb
mov
ss
add
js
ja
push
mov
jae
cli
popf
mov
repnz
xor
mov
addl
popf
jno
xlat
pop
pop
fisubl
pop
in
pop
xchg
imul
add
xor
xor
xchg
ljmp
add
enter
jb
out
cmp
add
push
and
negb
scas
cld
scas
int3
aas
ds
add
xchg
movb
out
add
and
movb
jp
xlat
and
xor
popa
test
fisubs
add
repnz
add
inc
das
pop
cmp
push
push
add
pop
add
xchg
adc
bound
aad
test
fs
icebp
shll
add
jne
aas
fnsave
call
cmp
ja
mov
rolb
cltd
inc
add
add
add
cld
pop
stc
stos
nop
insb
sqrtps
add
push
add
ja
xchg
xor
fwait
pop
jo
add
mov
add
andl
jge
inc
clc
xorl
jno
mov
push
lret
repnz
jmp
mov
jge
fs
sbbw
les
out
dec
xchg
aam
add
sub
ret
cmp
ror
xor
jmp
pop
xor
or
add
in
in
cmpsl
cli
daa
xchg
and
cmp
cmc
sub
inc
cwtl
and
sub
or
add
lds
int3
jl
pop
sub
sub
addb
outsl
loopne
mov
aas
sbb
rcrl
pushf
add
push
xor
or
cli
movsl
push
mov
add
cs
repnz
mov
mov
jge
add
lds
test
add
call
mov
fs
ret
mov
aam
lret
mov
mov
xchg
arpl
add
add
add
test
cmpxchg
mov
xor
es
insl
scas
push
shll
cmpsb
pop
mov
xchg
push
rcrb
and
xchg
mov
mov
insb
cmpsb
aaa
out
sub
int
mov
add
jbe
mov
leave
and
dec
add
xor
ds
dec
mov
bswap
inc
cmp
cwtl
sarl
and
lds
pop
mov
das
sub
or
cs
jg
enter
add
xor
xchg
add
push
add
ja
dec
negl
cld
or
xor
lret
idivb
data16
and
dec
pop
addb
repz
push
or
dec
mov
ds
inc
add
testl
in
call
mov
mov
std
xor
inc
adcl
pusha
add
dec
pushl
aad
sub
xchg
pop
and
or
and
cld
in
and
ss
aaa
cwtl
test
les
cmp
mov
add
sub
add
jmp
imul
mov
cmp
mov
sub
fsubr
ljmp
repnz
aam
add
iret
mov
lret
sarl
addl
add
out
pop
mov
push
mov
xor
scas
fildll
movb
xor
rorb
add
add
ficoms
cmp
mov
add
orl
jge
inc
out
out
dec
or
add
sub
popa
adc
cmp
mov
mov
add
dec
add
data16
dec
or
sbb
mov
inc
add
sub
xor
mov
add
into
mov
xor
jo
xchg
enter
fwait
cmc
lahf
mov
xchg
sti
dec
xchg
fildl
sub
lods
pushf
add
sbb
pop
outsb
mov
jmp
add
nop
es
add
xchg
mov
add
stc
nop
es
push
add
jg
test
and
add
nop
es
add
add
inc
stc
nop
es
add
add
add
popf
dec
push
push
mov
xchg
ret
jo
daa
add
jo
rep
push
mov
xchg
ret
popa
adc
pop
add
mov
stc
nop
es
mov
dec
add
scas
add
bound
adc
mov
stc
nop
es
add
gs
daa
xor
ret
stc
nop
es
mov
xchg
add
add
nop
cld
nop
jmp
pop
inc
sbb
pop
add
xchg
hlt
gs
and
stc
nop
es
or
add
pop
sbb
stc
nop
es
add
add
xchg
add
nop
es
jne
add
add
xchg
in
pop
xor
stc
nop
es
add
xchg
inc
add
add
push
push
mov
xchg
ret
inc
inc
add
and
jecxz
loopne
decl
stc
nop
es
add
es
add
pop
lods
push
stc
nop
es
sbb
add
mov
mov
filds
icebp
stc
nop
es
pop
jnp
jmp
add
adc
sub
test
add
and
add
out
add
aam
mov
nop
cld
nop
jmp
and
pop
sbb
add
cmp
cld
nop
jmp
add
add
mov
add
movb
push
push
mov
xchg
ret
sbb
lret
jnp
and
stc
nop
es
add
mov
es
add
sbb
add
mov
stc
nop
es
sbb
sahf
jecxz
add
push
stc
nop
es
add
scas
add
dec
rep
stc
nop
es
mov
xchg
add
rcrl
andb
int3
rcrb
sub
call
add
decl
rcrb
nop
es
add
daa
add
add
jb
add
pop
mov
add
sarb
add
nop
cld
nop
jmp
add
adc
mov
stc
nop
es
xchg
add
sub
stc
nop
es
add
add
fldl
nop
jmp
add
add
jnp
outsb
cld
stc
nop
es
dec
add
jmp
out
add
sahf
add
nop
cld
nop
jmp
add
add
add
into
je
stc
nop
es
mov
lock
call
nop
cld
nop
jmp
add
add
add
cmp
popa
push
mov
xchg
ret
add
xchg
mov
add
push
push
mov
xchg
ret
add
add
add
jbe
call
stc
nop
es
push
add
sahf
sub
mov
xchg
ret
mov
sbb
and
add
stc
lea
stc
nop
es
add
or
add
clc
push
stc
nop
es
add
add
xchg
and
pop
push
mov
xchg
ret
popf
add
fwait
cmp
sarb
stc
nop
es
add
add
ljmp
add
add
popa
jecxz
mov
mov
nop
cld
nop
jmp
xchg
add
inc
sbb
add
jb
add
sahf
add
xchg
rolb
pushf
add
stc
nop
es
add
daa
add
add
sarl
popl
nop
cld
nop
jmp
mov
scas
sbb
pop
push
mov
xchg
ret
pop
add
repnz
sbb
jne
push
mov
xchg
ret
add
iret
add
push
mov
xchg
ret
popa
popf
jo
jecxz
fcoms
cld
nop
jmp
add
xorb
xchg
pop
shll
add
div
nop
cld
nop
jmp
add
pop
add
add
sbb
add
mov
and
stc
nop
es
add
add
add
add
adc
sub
nop
es
pop
and
jne
stos
popa
stc
nop
es
add
add
push
add
in
add
adc
inc
add
cmp
jmp
jnp
add
out
mov
nop
es
mov
mov
clc
cwtl
add
add
add
add
add
enter
or
add
nop
es
jne
add
dec
push
nop
cld
nop
jmp
inc
add
add
add
add
stc
nop
es
add
add
add
decl
push
stc
nop
es
dec
and
jo
int3
popa
add
jge
enter
es
add
jge
inc
and
stc
nop
es
add
xchg
add
push
sub
and
add
add
into
add
stc
nop
es
add
jno
add
push
mov
xchg
ret
mov
xchg
jnp
jle
stos
stc
nop
es
jecxz
es
add
mov
jg
clc
add
cld
incl
add
es
add
add
stc
nop
es
or
adc
or
lahf
sldt
stc
nop
es
mov
add
pop
mov
stc
nop
es
add
gs
jne
mov
nop
cld
nop
jmp
add
add
cmp
lods
push
add
nop
cld
nop
jmp
jo
sbb
repnz
add
stc
nop
es
add
pop
int
add
stc
nop
es
add
add
xchg
shrb
out
inc
add
lret
add
add
test
addb
stc
nop
es
add
and
incl
inc
add
sbb
mov
lret
test
nop
cld
nop
jmp
add
jo
add
loop
sbb
scas
enter
jmp
add
dec
xchg
add
iret
push
xor
stc
nop
es
jnp
add
add
aas
xchg
stc
nop
es
add
inc
subb
dec
clc
add
stc
nop
es
mov
mov
add
pop
mov
stc
nop
es
jmp
add
add
nop
jmp
add
repnz
add
jns
inc
cmc
xor
push
mov
xchg
ret
add
mov
pop
and
imul
add
add
add
pop
mov
stc
nop
es
add
push
add
stc
nop
es
xchg
inc
add
pushl
nop
cld
nop
jmp
mov
add
out
sub
stc
nop
es
add
dec
lea
in
fldcw
out
in
add
add
add
stc
nop
es
sbb
and
add
or
stc
nop
es
add
lea
sar
es
jne
add
sub
add
sbb
mov
xchg
ret
add
jo
add
cld
inc
add
add
pop
add
nop
es
es
adc
pop
int
sahf
cli
push
stc
nop
es
out
add
add
es
add
add
jnp
sbb
dec
mov
nop
cld
nop
jmp
add
lret
mov
stc
nop
es
add
sbbb
add
cmp
mov
nop
es
add
int3
mov
mov
xchg
ret
jo
mov
xchg
add
push
mov
stc
nop
es
int3
and
test
jne
stc
nop
es
lret
and
inc
add
pop
stc
nop
es
add
mov
jge
movb
mov
xchg
ret
mov
cwtl
cmp
nop
cld
nop
jmp
add
add
mov
add
mov
add
out
add
es
adc
popf
sbb
dec
mov
movsl
push
mov
add
stc
nop
es
jnp
add
pop
inc
add
add
dec
nop
cld
nop
jmp
mov
add
jmp
add
push
push
mov
xchg
ret
xor
mov
push
mov
xchg
ret
add
out
add
nop
nop
cld
nop
jmp
add
add
add
pop
add
outsb
add
nop
cld
nop
jmp
add
add
mov
stc
nop
es
gs
add
nop
cld
nop
jmp
rolb
adc
jne
pop
pop
nop
cld
nop
jmp
cmp
add
mov
adc
mov
sar
nop
es
mov
cmp
xor
sbb
popa
add
mov
xchg
ret
sahf
xchg
add
add
shlb
mov
stc
nop
es
add
repnz
call
nop
jmp
add
sahf
add
inc
jne
add
jmp
loop
add
add
int3
add
mov
push
mov
xchg
ret
out
jne
add
inc
add
add
nop
cld
nop
jmp
pop
adc
and
incl
xchg
xchg
jmp
stc
nop
es
add
stc
nop
es
add
gs
lret
into
or
add
add
add
add
add
and
stc
nop
es
xchg
int3
fwait
add
nop
pop
mov
nop
cld
nop
jmp
mov
fldenv
xor
add
stc
nop
es
add
shl
nop
cld
nop
jmp
and
sbb
add
xchg
push
push
stc
nop
es
add
add
add
int
sbb
jno
stc
nop
es
fwait
and
add
adc
add
nop
cld
nop
jmp
push
xchg
add
pusha
add
xor
nop
cld
nop
jmp
int3
pop
or
add
add
nop
es
adc
mov
jge
stc
nop
es
jns
add
add
adcb
stc
nop
es
add
dec
xchg
add
add
cld
push
push
mov
xchg
ret
add
add
mov
stc
nop
es
mov
add
add
xor
popf
mov
stc
nop
es
inc
add
int
iret
and
je
nop
cld
nop
jmp
add
jecxz
fldcw
inc
add
mov
gs
add
push
mov
xchg
ret
rorb
add
call
inc
add
pop
incl
popa
add
cld
nop
jmp
mov
mov
add
push
push
mov
add
nop
cld
nop
jmp
add
sub
add
xchg
popa
popf
mov
push
mov
xchg
ret
add
mov
call
mov
xchg
ret
jmp
xor
push
mov
es
add
add
jns
lret
test
idiv
stc
nop
es
add
adc
or
nop
es
or
add
nop
ss
push
or
cld
nop
jmp
inc
add
add
pop
mov
stc
nop
es
mov
add
mov
mov
stc
nop
es
mov
adc
nop
cld
nop
jmp
int3
cmp
push
push
mov
xchg
ret
scas
add
dec
and
add
fisubl
stc
nop
es
mov
fwait
or
add
mov
xchg
ret
add
sub
pop
fisttpll
nop
jmp
xor
add
xchg
hlt
lods
push
mov
out
addr16
mov
add
xor
sbb
stc
nop
es
jmp
sbb
sub
inc
adc
pop
add
popf
xchg
pop
add
add
addb
add
add
repnz
lcall
add
lret
add
lea
stc
nop
es
mov
int3
jne
push
pop
mov
stc
nop
es
mov
add
add
iret
lock
add
add
dec
mov
nop
es
xchg
add
dec
add
mov
pop
push
push
mov
xchg
ret
jmp
add
xchg
push
scas
mov
stc
nop
es
xchg
add
jne
xchg
movsl
mov
push
loopne
cld
nop
jmp
popf
pop
adc
push
stc
nop
es
add
jo
int3
mov
lea
nop
es
add
cmp
add
stc
nop
es
add
mov
add
stc
nop
es
iret
popf
add
or
loopne
add
lret
add
add
stc
nop
es
add
lret
add
lods
add
add
nop
es
and
add
adc
es
jne,pt
mov
es
ret
sbb
jmp
add
jne
xchg
popa
add
sarl
jb
or
add
xchg
push
scas
test
nop
cld
nop
jmp
add
int3
xchg
add
and
stc
nop
es
add
sbb
fwait
add
stc
nop
es
jne
add
mov
adc
nop
cld
nop
jmp
add
or
add
vsubss
sub
nop
es
and
inc
pop
add
sbb
nop
es
add
add
and
nop
es
or
and
add
fs
cs
stc
nop
es
mov
add
push
mov
stc
nop
es
jnp
add
add
adc
add
add
lods
stc
nop
es
mov
add
add
xor
push
mov
xchg
ret
add
addb
mov
stc
nop
es
es
add
add
lds
rep
stc
nop
es
add
fwait
int3
jns
add
stc
nop
es
add
add
mov
or
jb
add
add
int3
dec
jne
stc
nop
es
or
mov
push
mov
xchg
ret
add
sbb
aam
add
stc
nop
es
add
fimuls
es
out
add
add
sbb
nop
es
add
add
mov
push
mov
xchg
ret
add
mov
stc
nop
es
scas
add
cmp
dec
mov
push
mov
xchg
ret
add
adc
xchg
ret
popa
stc
nop
es
dec
add
popa
or
or
mov
stc
nop
es
mov
int
xchg
add
addr16
mov
stc
nop
es
add
add
add
nop
es
mov
add
push
push
mov
xchg
ret
sbb
adc
sahf
repnz
cmp
stc
nop
es
inc
add
push
mov
xchg
ret
inc
int
add
adc
nop
es
rolb
add
inc
add
mov
nop
cld
nop
jmp
add
and
add
mov
xchg
ret
add
add
aaa
outsl
pushl
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
add
add
cmp
jmp
add
add
add
jns
dec
leave
mov
push
mov
xchg
ret
add
add
popa
add
nop
es
add
jg
mov
add
stc
nop
es
sub
add
test
loope
push
mov
xchg
ret
add
add
inc
jb
jne
mov
push
mov
xchg
ret
dec
sub
dec
add
add
fiadds
jne
nop
cld
nop
jmp
xchg
iret
inc
pop
add
or
stc
nop
es
sbb
add
add
stc
nop
es
add
addb
xor
stc
nop
es
sbb
mov
subl
cmp
ret
mov
add
add
icebp
mov
add
stc
nop
es
mov
add
shr
stc
nop
es
add
add
add
add
stc
nop
es
inc
jnp
int
lret
or
stc
nop
es
cmp
add
int3
add
call
stc
nop
es
add
add
add
mov
stc
nop
es
jmp
add
add
push
stc
nop
es
add
mov
add
add
nop
es
add
add
jmp
cmp
ret
dec
sbb
andb
sub
mov
stc
nop
es
lret
scas
mov
stc
nop
es
and
add
xchg
scas
mov
jb
add
int3
add
add
stc
nop
es
jns
or
and
and
push
mov
xchg
ret
rclb
mov
adc
nop
es
add
add
add
mov
add
inc
push
mov
xchg
ret
add
lret
add
jl
nop
cld
nop
jmp
jmp
xchg
mov
ja
mov
stc
nop
es
add
xorb
pop
nop
cld
nop
jmp
iret
jns
or
jne
stc
nop
es
add
repnz
dec
push
mov
xchg
ret
add
add
add
std
push
mov
fbstp
add
insb
cltd
add
add
ret
rep
nop
cld
nop
jmp
pop
int
adcb
add
sbb
es
sbb
add
mov
mov
nop
cld
nop
jmp
add
sbb
cld
nop
jmp
and
fwait
dec
jns
add
dec
push
mov
repnz
rolb
add
add
lret
sbb
nop
es
xchg
add
mov
xor
inc
add
add
add
and
es
popa
add
add
add
pop
inc
stc
nop
es
popf
add
int3
add
add
add
mov
xchg
ret
xchg
adc
inc
dec
dec
je
stc
nop
es
mov
push
stos
popa
push
mov
xchg
ret
add
add
add
add
add
pop
dec
mov
stc
nop
es
dec
add
mov
xor
adc
add
add
sbb
cs
push
mov
xchg
ret
jmp
add
add
inc
add
xchg
or
nop
jmp
add
add
xor
stc
nop
es
add
adc
call
nop
es
add
or
add
push
in
add
xchg
xchg
add
xchg
daa
push
cmp
mov
call
add
add
iret
or
lahf
pop
push
mov
xchg
ret
add
cmp
shrl
stc
nop
es
cmp
sbb
mov
add
add
nop
cld
nop
jmp
add
mov
mov
nop
cld
nop
jmp
lret
mov
nop
cld
nop
jmp
scas
add
add
add
mov
add
stc
nop
es
add
lea
nop
es
scas
add
jne
add
rclb
movzwl
nop
cld
nop
jmp
add
lcall
jecxz
add
add
pop
add
rep
stc
nop
es
push
sbb
popf
add
add
ret
stc
nop
es
add
out
popa
add
add
je
movzwl
nop
cld
nop
jmp
lret
add
add
nop
cld
nop
jmp
mov
mov
sahf
popf
push
push
mov
xchg
ret
lret
int3
scas
add
dec
imul
cmpb
pushl
dec
nop
cld
nop
jmp
add
add
mov
lret
add
stc
nop
es
jecxz
mov
mov
cmp
popa
add
nop
es
jecxz
add
add
dec
mov
stc
nop
es
mov
ja
mov
popa
add
nop
es
int3
add
add
int
push
stc
nop
es
xor
add
scas
mov
stc
nop
es
mov
add
orb
xor
mov
stc
nop
es
sbb
fsubrp
sub
nop
jmp
add
add
xchg
jbe
and
push
mov
xchg
ret
xchg
inc
pop
inc
add
es
or
pushl
xchg
dec
sub
stc
nop
es
mov
and
inc
add
imul
add
dec
add
add
push
mov
xchg
ret
int3
daa
iret
add
sti
jmp
stc
nop
es
popa
pop
pop
add
push
push
mov
xchg
ret
add
add
xchg
add
das
adc
add
nop
es
daa
add
sbb
stc
nop
es
sub
add
fld1
and
nop
jmp
mov
and
add
add
jnp
jmp
jp
nop
cld
nop
jmp
and
jo
mov
cmc
out
inc
add
add
add
add
out
mov
stc
nop
es
mov
or
add
add
mov
scas
rorb
and
stc
nop
es
scas
add
add
add
xor
push
mov
xchg
ret
add
push
nop
cld
nop
jmp
and
int
add
cmp
nop
cld
nop
jmp
add
int3
add
int3
jecxz
jl
inc
and
nop
es
sbb
mov
cmpw
stc
nop
es
add
add
mov
nop
jmp
add
jns
scas
add
adc
imul
es
add
add
jg
push
mov
xchg
ret
add
out
or
add
dec
jne
stc
nop
es
mov
add
dec
add
nop
es
add
add
leave
add
stc
nop
es
add
add
add
mov
add
or
add
add
fistl
mov
xchg
ret
jns
add
add
es
add
add
lods
imul
stc
nop
es
dec
iret
mov
push
push
mov
xchg
ret
iret
push
add
add
xchg
xchg
imul
stc
nop
es
add
xchg
mov
nop
es
add
or
pop
add
mov
testb
jb
add
jns
add
add
nop
cld
nop
jmp
add
adc
add
add
scas
mov
stc
nop
es
push
xchg
mov
lahf
out
inc
add
add
dec
int3
dec
push
stc
nop
es
add
daa
int
and
push
mov
xchg
ret
add
pop
out
add
stc
nop
es
push
add
sub
add
js
inc
add
push
xchg
add
inc
je
push
push
mov
xchg
ret
and
popf
add
movsb
stc
nop
es
adc
add
jns
add
int
stc
nop
es
add
sbb
add
push
xchg
xor
nop
cld
nop
jmp
add
add
and
add
mov
nop
es
mov
mov
add
and
lcall
jmp
xchg
addb
or
add
pop
push
inc
add
add
dec
cmc
mov
push
mov
xchg
ret
add
add
mov
xchg
ret
jo
mov
adc
push
cwtl
add
stc
nop
es
add
adc
mov
push
mov
xchg
ret
add
inc
or
add
andl
cld
nop
jmp
adc
add
jo
mov
daa
mov
nop
cld
nop
jmp
mov
into
xchg
push
mov
xchg
ret
add
mov
add
mov
stc
nop
es
popf
add
add
nop
es
or
add
cmp
test
or
add
nop
es
add
jecxz
adc
es
add
adc
call
stc
nop
es
add
add
mov
add
stc
nop
es
int3
add
add
mov
nop
cld
nop
jmp
add
scas
leave
and
push
mov
xchg
ret
add
add
cmp
mov
es
xchg
add
gs
add
push
mov
xchg
ret
dec
pop
add
add
fwait
add
push
mov
xchg
ret
add
add
mov
stc
nop
es
pop
add
mov
add
stc
nop
es
repnz
sub
jb
xchg
add
mov
cs
stc
nop
es
add
add
add
add
push
mov
xchg
ret
rolb
cmp
or
mov
xchg
ret
scas
add
add
mov
nop
es
mov
pop
int
add
call
stc
nop
es
xchg
add
mov
les
push
mov
xchg
ret
int3
add
add
stc
nop
es
add
mov
int3
add
test
sbb
cmp
nop
es
int3
add
add
and
stc
nop
es
add
popf
push
inc
add
clc
stc
nop
es
add
xor
jne
stc
nop
es
incl
jns
add
jne
stc
nop
es
popf
add
xchg
lea
cld
nop
jmp
add
gs
sbb
or
sar
es
sahf
inc
add
ds
jne
stc
nop
es
andb
inc
add
pop
push
mov
xchg
ret
add
pop
ja
js
ret
stc
nop
es
add
mov
add
aaa
clc
mov
stc
nop
es
dec
jecxz
scas
add
inc
add
cld
nop
jmp
jecxz
sbb
add
add
std
mov
stc
nop
es
iret
mov
pop
push
mov
xchg
ret
add
pop
dec
add
add
mov
inc
clc
inc
add
add
or
push
stc
nop
es
jnp
sbb
add
adc
ja
xchg
stc
nop
es
add
popa
xor
add
lea
nop
cld
nop
jmp
sbb
add
add
imul
mov
add
int
lods
hlt
and
xchg
push
jecxz
push
stc
nop
es
add
add
pusha
add
or
es
int3
add
sbb
add
jge
stc
nop
es
jecxz
mov
dec
push
stc
nop
es
popa
int
xchg
mov
add
mov
jb
xor
add
add
add
das
push
stc
nop
es
cmp
add
adc
mov
fwait
add
sub
sub
and
add
loope
test
nop
cld
nop
jmp
add
push
add
dec
add
jle
repz
nop
es
fwait
add
out
mov
stc
nop
es
jnp
add
call
rolb
mov
push
mov
xchg
ret
mov
add
mov
rclb
sub
inc
add
add
int
add
dec
mov
stc
nop
es
sub
add
fldenv
popa
add
mov
xchg
ret
inc
xchg
jns
add
jb
add
mov
dec
cmp
cld
nop
jmp
add
jo
add
add
stc
nop
es
add
pop
fwait
add
add
mov
nop
es
add
mov
dec
add
adc
add
mov
xchg
ret
andb
add
repz
nop
es
or
adc
xchg
add
outsb
push
stc
nop
es
pop
add
add
gs
cmc
stos
jmp
nop
cld
nop
jmp
popa
dec
fwait
xchg
add
cmp
jb
add
iret
push
bound
xchg
mov
pusha
add
outsl
popa
fs
nop
es
add
add
push
push
mov
xchg
ret
add
jmp
cmp
add
xchg
push
nop
cld
nop
jmp
dec
add
add
mov
pop
add
jae
ds
stc
nop
es
add
int3
fwait
xorb
mov
cld
nop
jmp
mov
xchg
xchg
iret
movzwl
stc
nop
es
add
inc
and
xor
stc
nop
es
add
add
push
push
mov
xchg
ret
lret
jo
add
add
imul
jmp
add
add
jecxz
add
add
nop
cld
nop
jmp
add
add
js
push
mov
xchg
ret
sbb
pop
int3
add
nop
es
out
jns
mov
add
add
les
pop
in
movzwl
stc
nop
es
xor
dec
add
scas
pop
nop
cld
nop
jmp
fwait
add
jecxz
add
test
nop
es
adc
lcall
inc
add
add
call
stc
nop
es
add
dec
add
repnz
dec
stc
nop
es
add
and
sub
inc
std
stc
nop
es
or
int
sbb
dec
in
inc
add
add
add
and
nop
es
dec
add
add
mov
add
stc
nop
es
add
or
or
lret
stc
nop
es
add
popf
mov
add
out
popa
nop
cld
nop
jmp
add
adc
pop
add
popa
add
nop
es
pop
add
test
nop
cld
nop
jmp
int
add
and
add
add
leave
add
add
nop
es
jo
sub
aam
movsl
in
add
nop
cld
nop
jmp
push
add
jne
lods
push
mov
sbb
add
add
pop
movl
stc
nop
es
xchg
scas
inc
add
mov
stc
nop
es
inc
mov
cmp
mov
or
stc
nop
es
pop
iret
dec
add
add
adc
loope
incl
mov
rclb
es
push
add
int3
out
xchg
pop
out
add
stc
nop
es
mov
mov
es
iret
rorb
jns
and
out
stc
nop
es
dec
dec
jne
popf
jne
mov
stc
nop
es
add
int3
add
pop
push
mov
xchg
ret
add
scas
xor
xchg
add
add
add
loop
jmp
add
add
push
mov
xchg
ret
sbb
pop
add
nop
jmp
add
add
mov
mov
stc
nop
es
add
popa
pop
add
stc
nop
es
popa
add
add
xchg
add
dec
mov
nop
cld
nop
jmp
and
add
add
add
popa
dec
mov
stc
nop
es
dec
mov
test
nop
es
add
inc
sub
push
mov
xchg
ret
sub
jecxz
movnti
add
mov
add
inc
add
add
adc
jb
int3
sub
iret
pop
int3
inc
add
jmp
stc
nop
es
add
pop
xchg
dec
pop
push
mov
xchg
ret
add
add
jmp
stc
nop
es
jmp
add
dec
add
stc
nop
es
gs
add
add
sbb
out
inc
add
add
add
enter
push
mov
xchg
ret
cmp
add
jnp
inc
nop
cld
nop
jmp
iret
add
add
xchg
add
mov
add
add
stc
nop
es
or
add
lea
stc
nop
es
mov
hlt
mov
cld
nop
jmp
jns
pop
add
add
cmp
nop
cld
nop
jmp
scas
sbbb
add
cmp
nop
es
pop
cmp
add
mov
push
mov
xchg
ret
add
add
mov
push
stc
nop
es
add
pop
and
iret
pop
stc
nop
es
xor
add
iret
add
jmp
add
stc
nop
es
mov
gs
add
jmp
jb
add
lahf
push
push
mov
xchg
ret
iret
add
add
adc
sbb
or
xchg
ret
iret
int3
add
sbb
lods
mov
stc
nop
es
add
add
jb
mov
stc
nop
es
add
mov
mov
nop
cld
nop
jmp
scas
xchg
pop
push
adc
testl
nop
cld
nop
jmp
add
dec
ror
stc
nop
es
int3
add
sbb
decb
jb
dec
add
int
sub
pop
mov
stc
nop
es
add
int3
add
push
nop
cld
nop
jmp
add
add
jnp
add
add
stc
nop
es
jecxz
jns
mov
xor
cs
nop
es
add
inc
adc
jmp
add
add
incl
or
rclb
movswl
stc
nop
es
fwait
add
push
fnstcw
stc
nop
es
and
scas
sbb
mov
stc
nop
es
jecxz
je
push
test
jmp
stc
nop
es
add
add
mov
cmp
ret
pop
add
addb
loop
inc
add
outsb
mov
nop
cld
nop
jmp
add
add
lret
nop
es
add
add
mov
push
nop
cld
nop
jmp
incl
popf
add
inc
add
cmpl
nop
cld
nop
jmp
jnp
pop
adc
dec
fiaddl
es
add
or
daa
jnp
add
stc
nop
es
mov
dec
add
add
push
nop
cld
nop
jmp
add
add
lret
sahf
and
mov
push
mov
xchg
ret
add
mov
lahf
xor
stc
nop
es
and
add
mov
stc
nop
es
add
add
pop
popf
jg
sti
stc
nop
es
popa
and
add
mov
stc
nop
es
scas
scas
add
popf
scas
scas
cwtl
movzwl
stc
nop
es
add
add
add
cmpw
nop
cld
nop
jmp
add
pop
push
push
mov
xchg
ret
add
add
sbb
xchg
stos
push
push
mov
xchg
ret
jo
mov
add
sub
inc
add
sahf
add
int
or
test
call
jmp
jnp
test
gs
adc
mov
push
mov
xchg
ret
mov
add
inc
add
nop
es
xor
jne
cmpb
add
nop
cld
nop
jmp
popa
add
mov
xchg
ret
xor
push
add
add
xor
es
add
add
xchg
add
push
mov
adc
leave
push
push
mov
xchg
ret
add
add
add
stc
nop
es
add
inc
jo
pop
pop
add
mov
push
mov
xchg
ret
cmp
adc
hlt
mov
test
call
es
add
add
call
stc
nop
es
add
mov
stc
nop
es
and
pop
add
mov
stc
nop
es
and
jbe
xor
stc
nop
es
sbb
add
push
mov
add
push
or
mov
cld
nop
jmp
cmp
iret
sbb
dec
add
sbb
pushl
stc
nop
es
add
mov
dec
cmp
jb
stc
nop
es
push
add
gs
jo
add
push
mov
xchg
ret
pop
mov
sbb
stos
loopne
add
add
add
call
ret
add
mov
fmuls
jb
pop
add
daa
fwait
or
rclb
loope
pushl
add
inc
cmp
psubd
stc
nop
es
add
adc
nop
es
jo
xchg
int
xchg
and
fwait
je
nop
cld
nop
jmp
add
fwait
jne
mov
nop
es
push
adc
mov
or
mov
xchg
ret
sbb
and
jne
sub
nop
es
scas
jnp
sahf
or
adcb
pop
stc
nop
es
jecxz
lret
add
add
stc
nop
es
adc
add
push
add
nop
cld
nop
jmp
add
inc
add
jp
jbe
stc
nop
es
add
add
pop
repz
add
add
add
xchg
ds
stc
nop
es
mov
sbb
add
add
mov
xchg
ret
adc
jnp
add
dec
mov
stc
nop
es
xchg
pop
add
add
movsl
addr16
js
push
mov
xchg
ret
add
scas
mov
and
lret
push
nop
cld
nop
jmp
add
mov
add
jne
stc
nop
es
mov
loop
nop
cld
nop
jmp
mov
jnp
add
sub
nop
jmp
add
add
incl
mov
stc
nop
es
dec
int3
int3
add
outsl
mov
stc
nop
es
add
add
test
nop
es
add
xchg
mov
add
stc
nop
es
popa
scas
add
inc
push
mov
xchg
ret
pop
add
add
add
movzwl
stc
nop
es
int
add
lods
mov
stc
nop
es
add
add
add
push
sbb
in
add
aam
add
pop
add
jg
inc
stos
add
nop
cld
nop
jmp
add
xchg
xor
add
popa
das
push
push
mov
xchg
ret
add
xchg
daa
add
and
push
mov
dec
imul
aaa
add
mov
add
bound
pop
or
jle
stc
nop
es
and
pop
xchg
ljmp
add
add
add
lret
mov
stc
nop
es
lcall
add
daa
in
lods
subl
push
mov
xchg
ret
adc
add
dec
pop
stc
nop
es
add
add
ljmp
add
nop
es
add
mov
nop
cld
nop
jmp
add
out
add
jne
fwait
pusha
stc
nop
es
lret
add
add
add
stc
nop
es
dec
mov
insb
inc
insb
insb
stc
nop
es
popa
add
add
or
nop
es
mov
adcb
stc
nop
es
cmp
repnz
add
out
clc
stc
nop
es
inc
add
int3
mov
nop
cld
nop
jmp
rolb
add
add
sahf
sarb
nop
es
add
jecxz
gs
push
stc
nop
es
add
add
mov
stc
nop
es
inc
add
loopne
pop
nop
cld
nop
jmp
add
add
push
cwtl
mov
stc
nop
es
add
jne
pop
test
dec
or
mov
xchg
ret
add
mov
sar
mov
xchg
ret
jo
xchg
add
pop
mov
stc
nop
es
add
add
add
add
push
stc
nop
es
jns
add
add
add
es
add
int3
jecxz
mov
outsl
push
mov
add
add
out
add
movb
add
jg
push
fstl
jns
loopne
and
leave
sub
adc
sub
push
mov
jbe
out
mov
add
inc
add
jecxz
mov
add
mov
jns
stos
cmp
ss
cmp
inc
add
push
add
sub
test
xor
int3
mov
in
mov
inc
and
sahf
addb
fcmovne
add
xor
gs
stos
repz
add
inc
dec
enter
sub
lret
iret
push
cmp
and
cmp
dec
or
test
push
mov
add
daa
or
ror
add
cmpsb
pop
cmc
test
cwtl
xor
pop
push
mov
int3
mov
or
dec
sarb
xor
dec
dec
inc
add
pop
lret
add
pop
leave
idivb
and
aaa
dec
test
in
jnp
addb
mov
rclb
sti
jo
inc
add
lds
jnp
push
ja
xor
mov
incl
mov
mov
xchg
inc
lcall
inc
addb
rcll
mov
dec
stos
xrelease
fdivrl
dec
mov
lods
lea
sbb
sub
and
pop
insl
sbb
mov
adc
or
lods
aaa
lods
ja
xor
repnz
mov
xor
add
mov
and
mov
sbb
xchg
inc
mov
and
xchg
cmp
adc
sub
and
xor
jmp
cmp
dec
clc
pusha
add
or
xor
in
sub
jl
loope
push
mov
and
mov
js
cmp
xor
pop
cwtl
test
insl
sbb
jmp
add
inc
add
nop
or
testl
out
add
imul
add
cmp
lahf
jg
mov
movb
dec
mov
in
out
cmp
add
fistl
rolb
rol
pop
stc
js
add
popf
lret
ret
ljmp
add
das
jl
dec
sahf
sbb
fildll
lds
jns
mov
mov
out
and
jne
add
aam
fcoml
mov
inc
sti
mov
mov
ret
jmp
idivl
movsb
cmp
je
xchg
mov
call
js
stc
sbb
mov
inc
add
popf
dec
das
out
mov
mov
xchg
rclb
jnp
popf
inc
mov
dec
movsl
add
shlb
adc
or
mov
jb
sbb
add
add
sbb
inc
add
aaa
xchg
imul
pop
xchg
sbb
cmc
mov
popa
ficoml
sbb
adc
scas
das
cwtl
push
jg
popf
adc
dec
add
xchg
jg
in
cmpsl
xchg
jecxz
std
xor
cld
push
loop
movsb
xor
cmpsl
cmp
lcall
popl
add
xchg
sub
shl
or
sub
lret
sbb
out
sub
xchg
aad
add
xchg
sub
mov
push
mov
jle
outsl
aas
leave
xor
inc
imulb
mov
movb
lcall
push
jo
mov
mov
jns
cmp
ljmp
xchg
imul
addr16
adc
sub
int3
dec
and
addr16
mov
rcll
and
movb
or
mov
ja
sub
pop
mov
ja
mov
sub
jl
mov
dec
inc
add
add
jmp
and
mov
push
sub
ss
mov
in
xchg
mov
movsl
and
mov
or
test
pop
test
add
stc
je
pop
cmp
mov
cmpl
inc
cmpsb
movsb
jns
cmc
je
mov
call
movb
dec
jp
jle
mov
mov
push
lahf
push
jecxz
dec
xor
add
cmp
insl
stos
dec
je
inc
push
adc
mov
xchg
sahf
lret
das
rolb
enter
fistpl
jg
mov
scas
mov
repnz
inc
loop
aad
pop
xchg
sbb
sub
arpl
mov
add
mov
and
jle,pt
or
fsubl
fcoml
add
pop
dec
xchg
pop
push
outsb
scas
xor
inc
std
into
ror
adc
dec
outsl
and
xchg
test
ret
movsb
mov
xchg
xor
call
dec
lea
arpl
sub
pop
xchg
and
xor
jno
add
fadds
add
imul
push
cmpsl
subl
xor
mov
imul
mov
lods
adc
int3
test
adc
add
jle
add
cmp
addr16
inc
pop
fs
push
movb
add
ret
inc
add
pop
repnz
adc
jle
dec
adc
and
dec
insl
movsl
sbb
push
inc
loope
mov
and
out
pop
xlat
push
addb
popa
shl
sti
enter
iret
xor
imul
mov
xchg
es
scas
scas
sbb
push
ds
jbe
and
push
adc
les
jns
ret
jmp
test
xor
movsl
jbe
frstor
add
daa
jne
add
adc
call
rcr
bound
lock
jo
xor
je
pushf
xchg
jle
xchg
stos
or
lods
fs
dec
fwait
rolb
and
daa
daa
dec
test
enter
repz
pusha
add
add
or
xlat
sbb
mov
xchg
clc
jmp
push
cmovle
jne
scas
iret
popa
in
addb
add
jne,pn
pop
sti
dec
pushf
int
jno
data16
push
js
mov
add
mov
add
in
xor
jl
cmp
subl
xchg
pusha
add
and
test
out
out
daa
and
jns
addb
mov
cmp
add
sbb
add
push
les
ficompl
add
or
lods
cmc
fisubs
jns
xchg
lahf
je
pop
mov
das
sub
jecxz
adc
cwtl
or
sbb
arpl
push
add
add
div
repz
push
rcll
push
dec
insb
mov
ret
or
sbb
jbe
movsl
jp
pop
push
les
inc
add
push
add
xor
push
or
icebp
fildll
add
mov
ret
mov
sahf
test
in
add
jo
in
test
add
adc
add
mov
in
pop
jg
push
jge
int3
jo
and
and
repz
cmp
cmp
sar
test
rolb
adc
dec
and
stos
mov
add
cmp
pop
sbb
repz
pop
push
jecxz
mov
mov
add
sahf
push
testl
add
stos
arpl
add
clc
push
mov
ss
fsubrl
shll
lods
shr
add
mov
lea
addr16
adc
mov
insb
cld
push
lret
sub
push
sti
mov
sbb
aad
jg
push
add
mov
push
push
mov
mov
and
pop
and
je
std
call
popa
mov
mov
add
inc
pop
bound
jmp
repnz
scas
fnstcw
adcl
fcoml
dec
fucomip
push
and
dec
fdivrp
add
lahf
fdivs
add
enter
movsl
cmp
lods
add
push
add
nop
adc
pusha
add
add
insl
imul
jo
les
push
hlt
jb
nop
loop
stc
mov
mov
pop
push
inc
add
sub
clc
pop
xchg
lods
xor
dec
inc
add
sub
test
aaa
inc
add
out
and
insl
movsl
jecxz
sti
xor
add
lods
int3
xchg
mov
cli
ja
pop
fcomi
scas
repnz
cmc
cli
fiaddl
xor
mov
lcall
xor
add
rcll
pushf
stc
clc
out
or
lds
add
movsb
xor
push
scas
pop
cmp
lahf
addb
mov
outsl
rolb
das
push
loop
push
lahf
pop
cmp
popf
lods
daa
imul
pop
push
iret
pop
aad
js
sarl
jl
xchg
mov
and
push
add
out
mov
xchg
adc
movsb
jl
mov
jmp
mov
jg
pop
lret
push
in
and
popf
aas
subps
ss
loop
mov
in
inc
hlt
xlat
xchg
adc
cmp
add
add
add
add
sbb
rcll
fstp
shrb
jnp
mov
data16
push
sub
add
pop
jno
into
cs
xlat
cmc
sub
outsl
mov
add
inc
adc
and
jecxz
inc
jmp
addb
add
mov
add
add
or
adc
add
and
add
cmc
pop
dec
cli
test
adc
ret
outsb
or
aad
mov
lahf
aam
cmp
xchg
adc
push
add
addb
push
xlat
push
movsl
rcrl
aaa
xchg
inc
scas
push
push
mov
mov
add
adc
lds
ficompl
les
mov
dec
cmc
adc
arpl
adc
cmp
push
add
les
in
add
mov
jae
adc
gs
lret
arpl
rcrl
add
addb
inc
sbb
add
add
cmp
mov
stc
adc
xor
je
pop
jo
add
fistl
lret
imul
sub
mov
inc
add
jbe
push
test
and
addr16
cs
adc
mov
dec
xchg
addl
dec
mov
xchg
push
mov
repnz
les
add
outsl
push
leave
rorl
jmp
add
or
or
push
outsb
popa
mov
sti
out
test
idivb
test
inc
repz
sahf
mov
in
xchg
or
push
pop
aaa
add
mov
movsl
sbb
cmp
nop
setae
jmp
adc
sbb
lock
lds
add
add
xchg
inc
out
mov
add
push
test
insb
push
out
imul
sub
mov
mov
ret
insl
ja
or
insl
loopne
mov
fdivr
jle
add
data16
add
ret
dec
adc
notl
gs
int3
sbb
sub
cwtl
gs
cmp
pusha
add
mov
pushf
jne
pop
imul
jb
ficoml
cmp
add
ss
add
add
dec
push
cmpsl
jl
out
mov
mov
int
push
xchg
pop
sar
jbe
mov
cmp
into
fldt
mov
mov
cmc
mov
std
mov
dec
insl
cs
aaa
dec
add
in
imul
adc
add
insb
out
xor
xor
inc
aaa
insl
jae
jnp
xor
aas
mov
bound
xor
mov
xor
or
push
divb
cmpsl
into
addb
in
out
adc
arpl
add
jne
or
add
add
inc
jno
stc
and
shrl
dec
pop
sub
add
je
addb
lods
jns
jg
add
repnz
cmp
or
cmp
jno
int
out
mov
aad
add
cmpsl
repnz
push
adc
dec
push
mov
jne
pop
push
mov
sbb
leave
adc
xchg
mov
add
xchg
lret
movb
add
mov
add
mov
and
repnz
mov
jg
sub
push
idivb
cmpsb
jae
aas
dec
test
pop
in
add
add
add
mov
lods
aad
outsb
stos
push
ds
add
pop
dec
insb
jmp
ret
sub
mov
add
jecxz
sub
out
pop
adc
les
mov
add
data16
lods
or
ret
xchg
scas
scas
roll
add
out
std
inc
enter
repnz
arpl
fdiv
fldl
jne
add
xchg
scas
pop
fildl
out
add
clc
js
je
dec
adc
cld
xchg
mov
aad
or
push
add
and
iret
sbb
mov
popf
test
jb
jle
add
add
es
mov
out
mov
push
imul
mov
push
pop
je
or
insl
imul
stc
jl
and
push
mov
dec
dec
mov
aam
or
jmp
loopne
movsb
lret
fidivrs
mov
vpmullw
rolb
pop
push
mov
in
jmp
add
push
add
xchg
pop
and
jne
not
addr16
cltd
enter
frstor
xchg
hlt
inc
add
add
xorl
cmp
fsubrl
xlat
jb
int3
inc
add
add
dec
nop
sub
icebp
jmp
aam
lret
insl
lret
sub
and
test
jmp
ret
mov
or
movb
or
cmpsl
std
pop
sbb
push
add
or
push
sbb
je
sbb
add
loop
dec
sbb
sbb
aaa
pushf
ljmp
in
ja
enter
movsb
out
fiadds
stc
sub
add
mov
cmpsl
fldl
pop
pop
fs
ds
aam
pop
mov
adc
dec
and
inc
add
and
xchg
lods
mov
hlt
jo
pop
out
add
dec
xor
jb
hlt
add
decb
in
lahf
in
ficomps
or
negb
out
inc
hlt
test
sbb
adc
jmp
xchg
or
hlt
scas
insb
nop
pop
mov
or
xchg
loopne
dec
mov
pop
add
ljmp
jb
jp
cmp
movsl
push
xchg
pop
and
fstps
into
sub
lret
jmp
je
cmpsl
insb
mov
test
adc
mov
sub
mov
adc
es
sub
enter
adc
mov
in
les
xchg
movb
dec
out
add
add
pop
xor
cmpl
and
xor
jne
pop
jnp
imul
pop
rorb
add
call
xor
andl
add
movsl
jns
or
bsr
cmc
push
enter
mov
pop
jle
sub
xchg
repz
add
test
in
sbb
cmp
mov
dec
lds
in
clc
jecxz
fcoms
cwtl
inc
add
add
or
ret
xchg
or
dec
cmpsl
mov
je
jl
push
and
adc
mov
mov
lea
dec
repnz
add
push
and
add
cld
inc
add
in
loopne
mov
test
push
mov
and
or
mov
adc
or
pop
cli
xchg
pop
cmp
cmpl
push
lods
dec
clc
adc
adc
jne
stos
subl
push
dec
push
mov
roll
sub
fisubs
jl
add
idivl
inc
push
call
add
sbb
pushf
in
insb
dec
lret
call
cmpsb
int3
mov
dec
call
push
sti
lods
cmp
or
sbb
aaa
mov
fiaddl
push
data16
mov
mov
add
or
xchg
push
pop
adc
cmpsb
push
or
leave
aaa
xor
jns
scas
inc
jbe
in
adc
inc
add
repnz
sbb
jnp
daa
inc
add
jge
cld
and
inc
add
inc
pop
and
mov
shld
lods
xchg
jnp
xchg
jb
repz
ljmp
adc
test
insl
inc
jle
jecxz
aaa
dec
fs
adc
xor
ljmp
clc
xor
sub
push
sbb
xor
stos
lds
jmp
add
fcomps
add
xchg
push
jmp
or
cmp
lret
dec
mov
fists
pop
js
nop
add
out
xchg
lret
in
dec
cltd
divb
fdivr
push
jecxz
call
std
inc
popa
addb
pusha
add
jns
push
xor
aas
dec
dec
pop
mov
mov
and
or
xchg
inc
add
sbb
outsl
ds
add
insb
mov
loop
inc
addb
add
or
lock
add
mov
notb
cmp
test
aad
lock
push
fildll
push
fsubrl
jl
jecxz
int3
lea
mov
aaa
rolb
mov
mov
in
lods
rolb
fists
loopne
int
andl
imul
xor
pop
test
mov
dec
loop
mov
add
jl
sahf
push
arpl
js
outsb
lds
pop
scas
pop
roll
mov
ds
cltd
sub
push
inc
add
lret
lret
add
shl
repz
add
repnz
mov
jne
sub
test
leave
in
fldl
mov
push
mov
loopne
subl
sub
sbb
jmp
dec
xor
pop
mov
add
insl
mov
add
clc
lea
jne
dec
ljmp
int3
loopne,pn
add
movb
rolb
outsl
jno
int3
sub
or
lea
mov
pop
sub
pop
bound
lods
push
fiadds
mov
and
xchg
in
sbb
sub
into
rcll
dec
xchg
jle
mov
mov
insb
push
clc
xchg
stos
pop
cmc
mov
add
cmp
adc
ja
jae
jecxz
mov
sub
pop
out
xlat
je
lds
test
pop
mov
gs
insb
cmp
pusha
add
mov
mov
dec
sub
dec
daa
dec
das
sub
movsb
push
mov
push
sbb
aad
js
push
bound
push
imul
add
xchg
shll
xchg
std
nop
push
test
cmp
and
jnp
add
mov
add
outsb
add
sbb
cli
mov
lcall
jbe
and
pop
pop
cltd
mov
sbb
sub
mov
std
dec
add
push
add
mov
data16
push
pop
int3
and
ljmp
stos
hlt
fadd
test
jl
mov
pop
outsb
idivb
push
mov
add
add
stos
imul
add
movsl
fbstp
and
push
add
xor
stos
jle
fcomp
shrl
push
lret
ficomps
add
push
lods
adc
xor
xchg
push
inc
mov
add
pop
in
push
repz
or
mov
scas
mov
sub
inc
cmc
movsl
in
jb
inc
add
leave
sahf
sub
inc
jg
out
out
scas
mov
jae
and
mov
cli
lea
sbb
dec
mov
shlb
adc
movsl
jae
cltd
ret
and
adc
inc
add
addb
cmp
and
das
mov
pop
jl
pop
mov
divb
pop
dec
xor
roll
dec
mov
jno
lock
sub
mov
push
dec
push
sahf
mov
add
add
jp
mov
shrl
add
aas
mov
add
inc
add
enter
gs
mov
rcrl
jge
xchg
mov
data16
jae
or
push
cmp
xor
sahf
nop
fldenv
pop
fucom
fcmovb
dec
sub
das
jne
pop
and
mov
imul
addr16
add
inc
add
test
stos
das
add
adc
adc
lret
loopne
adc
push
negb
cld
fwait
sarl
inc
add
mov
dec
mov
movsl
int
je
add
ss
aam
xchg
sub
xchg
fnstcw
icebp
leave
sub
outsl
js
pop
addl
das
out
dec
daa
scas
and
add
add
push
lods
cltd
popf
xchg
add
inc
add
cmp
sbb
mov
dec
mov
js
xor
jae
xor
cmpsb
imul
mov
sub
push
roll
push
add
add
lret
leave
cwtl
mov
push
xor
add
xor
popa
rcll
cld
les
or
dec
cmpsl
shlb
xor
ljmp
sbb
inc
add
test
adc
jle
dec
ljmp
fmul
call
in
xchg
movsb
push
sub
jnp
xchg
add
ja
mov
or
mov
mov
jo
loop
fsub
xor
repz
adc
adc
add
push
ret
lods
out
aaa
lea
aam
and
inc
add
add
add
arpl
dec
adc
loope
jbe
rolb
adc
fcoms
test
add
aaa
out
add
daa
inc
add
sbb
ds
adc
addr16
xchg
scas
sub
push
or
inc
lds
ret
push
xorl
add
sti
push
sbb
pop
mov
mov
push
mov
shrl
inc
and
adc
out
cmp
sysenter
test
mov
lcall
pop
into
push
push
insl
shrl
push
push
fxch
sbb
outsb
int3
je
jnp
in
jp
xlat
addb
into
hlt
outsl
jne
mov
mov
icebp
and
mulb
jg
out
jno
daa
push
shl
adc
xchg
sub
movsb
dec
sub
data16
sbb
addb
mov
xchg
sahf
adc
lods
mov
jne
adc
pushf
mov
movsl
int
jb
lcall
test
inc
adc
push
rcrb
jl
inc
test
shrl
into
leave
pop
clc
or
lods
mov
fs
add
rolb
lods
add
mov
mov
mov
xchg
jmp
sbb
rolb
incl
scas
or
jb
mov
arpl
les
sub
pop
jae
test
bound
adc
mov
addb
test
pop
rcrl
add
mov
inc
add
add
stc
xchg
pop
xchg
adc
pop
mov
es
mov
cmp
loop
xor
pop
lds
movb
ss
test
push
push
lods
mov
test
xchg
shr
addb
cmp
add
inc
pop
imul
add
dec
insb
outsl
add
out
mov
popf
cli
jne
pop
push
dec
jge
xchg
ss
add
insl
rcr
mov
stc
aad
jge
dec
adc
add
arpl
and
ret
inc
cmpsb
lods
call
inc
mov
mov
movl
shrl
pop
push
push
pop
mov
dec
push
nop
fidivrl
dec
lods
xor
jo
add
addr16
pop
xlat
add
and
fs
pop
mov
pop
bound
fisubl
in
cmp
out
jmp
ja
mov
mov
ss
push
movb
cwtl
mov
pushf
push
mov
test
xchg
iret
mov
gs
add
test
or
ss
cli
push
lock
bound
addb
jle
out
dec
xor
xchg
insl
sub
lock
xor
jle
pop
or
pop
ss
and
popa
sub
xchg
data16
aaa
mov
les
sarl
add
icebp
xor
pop
arpl
xor
mov
das
xchg
mov
movsb
mov
push
std
add
xor
mov
nop
daa
js
push
adc
pop
cld
lahf
movsb
and
cmpsb
adc
add
imul
mov
push
inc
add
imul
or
inc
add
aas
fwait
mov
add
clc
fcmovu
and
imul
dec
mov
outsb
xlat
out
adc
movlps
mov
add
dec
mov
add
lds
cmp
jns
pop
je
insb
jle
int
into
inc
add
andl
pop
lock
lret
adc
stos
pop
gs
lret
pushf
addb
push
pop
dec
dec
out
sub
mov
and
aam
addb
or
xchg
iret
push
loop
stos
repnz
push
xchg
push
repnz
mov
sti
jno
jbe
pusha
add
mov
pop
add
cmp
pushaw
add
enter
add
mov
push
test
inc
add
cmp
add
add
add
and
in
bound
arpl
push
lret
mov
cmp
xor
dec
das
scas
out
movb
push
loope
pushf
mov
cmpsl
sub
or
inc
adc
push
mov
rolb
lods
mov
daa
les
xchg
mov
inc
sbb
mov
retw
mov
lds
fildl
add
xchg
pop
loop
mov
nop
fimull
in
push
stc
xor
idivl
sbb
cmp
enter
addb
int
add
cmpl
push
push
pop
test
inc
add
outsb
cmc
fstl
xchg
jl
lock
not
ljmp
push
add
pushw
and
pop
stos
jnp
into
mov
add
jge
fucom
push
sbb
jno
push
adc
add
xchg
jne
ret
rcll
mov
mov
add
jmp
inc
xchg
ljmp
es
jl
inc
add
imul
stc
das
sti
jp
cs
adc
add
in
adc
xor
xchg
mov
inc
add
insl
sbb
dec
aas
rolb
cltd
faddl
pop
cmp
daa
int3
push
imul
dec
ss
stc
add
mov
out
lret
push
xor
mov
cmpsl
or
xor
jge
add
pushf
iret
or
cmpsb
mov
add
out
orl
push
aaa
addb
or
shl
add
lock
push
frstor
in
add
movsb
scas
and
jno
imul
in
cmp
sub
jnp
lock
mov
mov
cmp
add
lods
add
js
xchg
push
out
repz
add
sub
add
in
mov
add
mov
bound
das
jg
das
fcoms
mov
mov
ss
dec
std
adc
sub
dec
mov
push
stos
sub
lds
les
mov
add
jl
inc
or
gs
sbb
push
loope
jne
cmp
cmp
mov
ja
xchg
xor
push
lea
pop
sbb
or
scas
je
ficoms
mov
add
inc
add
push
ret
loope
sbb
add
loope
pop
jg
cli
cmp
les
enter
push
shlb
mov
lock
cli
aam
test
flds
stos
jne
sbb
addb
pop
or
pop
pop
call
adc
or
rcrb
mov
jecxz
das
sub
rclb
movsl
sub
aad
sub
cli
jns
out
es
and
outsl
dec
clc
push
dec
push
cltd
dec
push
sahf
into
addb
sub
int
dec
mov
int3
xchg
jno
fcoml
cmpsl
jne
pop
xlat
xlat
lret
movsl
js
push
mov
shrl
movb
ja
xchg
push
jno
aas
in
xor
lret
sbb
sub
shlb
xor
outsb
lods
sub
iret
int
adc
dec
addb
int3
push
add
addl
sti
hlt
cmpsb
or
sahf
dec
arpl
into
add
sbb
inc
dec
jns
jle
icebp
pop
addb
call
in
fstps
jmp
dec
lods
push
insb
mov
or
add
les
bnd
test
iret
into
roll
or
cmp
mov
pop
mov
dec
stos
iret
jp
cmp
jnp
add
dec
mov
sub
mov
aaa
inc
add
inc
dec
insl
pop
mov
stos
adc
and
repnz
popf
mov
or
cmp
fxch
mov
out
ljmp
push
xchg
inc
add
scas
dec
enter
add
sbb
movsb
jp
jae
pop
cmc
add
imul
mov
fmul
inc
flds
ja
mov
iret
stc
xor
lds
fwait
push
xor
in
fsubrl
insl
and
out
add
or
fisubl
xor
fsubrl
and
add
xchg
jb
mov
jp
add
inc
xor
and
fdivr
test
adc
ds
pop
lods
mov
push
pop
dec
sub
test
and
aad
bound
repnz
push
aad
xchg
push
or
int3
xlat
pop
cmp
les
mov
pop
loopne
mov
jb
lods
pop
add
xor
movb
arpl
sbb
adc
in
sbb
repz
into
dec
sahf
and
xchg
js
or
jns
out
dec
ss
cwtl
and
stos
add
adc
add
mov
out
xchg
pop
imul
and
out
xchg
mov
insl
je
mov
cmpsl
or
mov
add
pop
push
xlat
shr
lea
psllw
or
push
mov
in
mov
xlat
fiadds
lods
or
add
mov
mov
into
pusha
add
repz
push
fldcw
addl
nop
or
test
mov
xor
addr16
test
mov
xor
pusha
add
movsl
and
fsubrs
jns
ljmp
add
sub
stos
mov
add
xor
pop
jns
icebp
pop
add
xorl
addb
cmp
push
dec
pushl
shrl
jmp
pop
pop
jecxz
adc
je
cwtl
loop
add
lods
test
sub
xor
clc
pushf
sbb
push
sahf
add
cmp
aas
inc
adc
repnz
pop
scas
scas
nop
xor
add
add
adc
sbb
add
into
jbe
inc
or
mov
cmp
xor
test
lods
popf
popa
pop
sub
mov
add
add
jno
testb
ja
mov
mov
rcrl
and
fldenv
mov
xchg
sahf
and
jbe
jno
fwait
push
push
pop
out
xchg
fdivr
mov
add
inc
add
fucomip
cli
inc
add
add
or
jmp
or
cmp
xchg
loopne
xchg
push
add
bnd
cmpsb
adc
xor
push
lret
xchg
aas
mov
loope
jmp
adc
sub
add
push
outsl
lahf
jl
pop
in
repz
out
notl
outsl
ja
push
adc
mov
imul
add
sbb
outsb
scas
mov
test
mov
sub
je
sbb
cli
cmp
pop
lods
aaa
cmp
or
lret
stc
int3
aas
addb
xorl
sub
mov
call
xchg
ret
adc
sub
ds
lret
mov
in
inc
add
push
sbb
flds
and
sub
add
push
in
xor
add
lcall
adc
adc
loop
fwait
ud2
imul
loope
sub
xchg
outsl
or
adc
std
iret
or
jmp
daa
push
adc
outsb
jle
clc
jecxz
push
out
das
or
std
adc
mov
imul
jmp
adc
stc
or
lds
out
or
cwtl
jecxz
xor
mov
daa
xchg
popa
notl
mov
or
sbb
sub
scas
cmpsb
in
fsubrl
imul
fwait
mov
xor
mov
ljmp
sub
and
lock
and
out
cli
fcoms
mov
push
aad
cs
cwtl
pop
cmp
gs
add
xchg
addr16
push
mov
xchg
into
out
bound
push
or
mov
jl
ret
aad
lret
mov
dec
fdivr
popl
out
clc
bnd
add
push
mov
add
xlat
scas
inc
xor
mov
nop
cli
sub
out
loop
push
and
lcall
out
push
jle
out
add
dec
xor
fs
imul
insl
sarb
push
cmc
loope
add
push
add
cmp
lcall
and
dec
sub
mov
push
mov
insb
ret
jecxz
xchg
push
and
stc
xchg
out
pop
xchg
xor
cmpsl
jg
aad
movsb
je
ds
mov
jmp
add
iret
jmp
stos
xor
dec
jp
adc
mov
push
ja
out
dec
pop
in
shrl
stos
jbe
cli
push
pop
cli
popa
and
sarl
std
cltd
addb
bound
sub
aaa
repz
fcoms
sub
push
mov
cltd
fisubrs
enter
push
mov
jno
xor
addb
cld
push
mov
addb
sahf
jne
scas
cmp
aaa
lahf
in
shrb
pushf
fistps
dec
xchg
lods
xor
xor
and
jmp
add
xor
xor
fsubrs
jle
add
push
insl
cmp
aas
shll
xchg
cmc
sbb
pusha
add
add
ja
loop
lea
push
mov
rcll
ret
mov
rolb
cmp
cmp
mov
xchg
sub
ret
sub
sbb
add
xor
add
mov
add
jmp
cmp
inc
add
mov
add
popf
mov
loope
sub
push
sub
mov
add
cmp
repnz
addb
or
or
nop
aaa
xacquire
test
inc
and
mov
cld
sub
js
fisttpll
inc
fidivrs
push
jmp
lcall
sub
int3
out
in
sub
mov
sub
dec
outsl
mov
pop
in
js
jno
loopne
fstpt
das
jo
je
push
stc
xchg
loope
jp
or
les
loop
call
imul
add
xchg
pop
es
mov
stos
cmc
hlt
les
int
mov
aas
pop
mov
test
sub
ret
lahf
movsb
mov
js
or
popa
fdivl
push
xchg
outsl
xor
lret
adc
stos
call
jbe
addb
out
xchg
scas
mov
out
test
and
xor
push
sub
jl
jno
xor
scas
repz
fsubl
add
push
imul
add
xor
add
push
incb
pop
push
cmp
fdivs
add
jne
mov
imul
push
aaa
sbb
push
leave
mov
cmp
imul
xchg
cmpsb
dec
popa
xchg
shlb
xchg
adc
sbb
xor
xchg
and
es
lods
mov
jo
mov
sub
in
pop
addb
add
movb
xchg
inc
add
add
or
lods
bound
xchg
dec
mov
sbb
ret
ja
repz
cmp
aam
test
mov
add
xchg
dec
into
adc
sub
int
lods
inc
add
jbe
cmp
sti
xor
lret
or
cmp
mov
push
push
jno
push
push
scas
in
in
jae
add
mov
cs
push
shll
or
xchg
pop
inc
add
adc
mov
add
push
adc
ja
popa
jnp
ljmp
mov
xor
xchg
or
aaa
or
stos
addb
imull
and
popa
jne
ja
icebp
mov
pop
daa
dec
sbbl
cmp
aaa
mov
in
mov
adc
test
cmp
test
push
cli
arpl
sahf
push
add
or
add
add
hlt
xchg
test
add
jecxz
adc
mov
lods
fdivs
jmp
out
movsl
adc
fists
fldl
insl
lcall
push
sub
cltd
pop
jo
pushf
fmull
pop
std
shll
outsl
inc
scas
imul
inc
add
les
xor
cmp
inc
sbb
pop
gs
add
dec
in
jle
push
xchg
add
and
das
mov
mov
jp
outsl
out
add
sub
push
cmp
data16
push
xchg
push
gs
aam
es
test
arpl
push
sti
hlt
aas
es
icebp
out
sahf
cli
xchg
out
pop
in
jbe
movsb
imul
sti
outsb
dec
and
dec
xchg
and
sub
ljmp
mull
mov
frstor
sbbl
adc
lea
add
shll
jl
add
mov
jg
leave
mov
inc
add
inc
nop
push
sub
clc
mov
mov
or
hlt
inc
add
xor
push
rolb
mov
outsl
sbb
fdivp
leave
push
mov
sub
clc
test
into
cmp
int
xchg
xlat
pop
dec
cltd
sbb
add
pushf
dec
mov
sub
aas
push
fsubr
push
aaa
dec
pop
push
xchg
push
mov
dec
xchg
jp
addb
xor
mov
add
pop
and
adc
and
inc
lea
out
xor
cwtl
jl
data16
in
addb
jg
jne
adc
pop
xchg
pop
sub
jbe
push
into
out
lcall
mov
push
movsb
or
cwtl
stos
inc
add
loop,pt
sub
push
outsb
jns
movsl
es
popa
les
sub
push
xchg
sub
cld
in
add
xchg
cmp
fsubs
mov
add
add
loopne
sahf
xor
pop
lods
mov
int
cmp
pop
lods
mov
orl
push
mov
add
xor
fsubl
sub
sbb
pop
jge
rolb
inc
arpl
push
int3
xor
mov
mov
cmpsl
add
pop
pop
xadd
call
mov
js
jle
jns
fcoms
pushf
int
popa
out
fidivl
xor
cwtl
in
jmp
data16
mov
inc
das
mov
pop
push
add
dec
xchg
shlb
sub
jp
push
or
cmpsl
dec
rcr
aas
shll
arpl
sbb
aam
sbb
icebp
adc
mov
xchg
ljmp
and
mov
xor
mov
xchg
pushl
addl
cmpl
xor
daa
lock
rolb
scas
sbb
cmpsl
aaa
and
cmc
roll
jns
hlt
sub
push
popa
arpl
push
add
in
inc
sub
jno
inc
pop
js
cltd
rcrl
xor
xor
pop
mov
data16
jle
stos
rcr
into
out
roll
xlat
inc
imul
dec
and
sub
mov
pusha
add
outsl
jp
adc
mov
hlt
dec
aaa
or
sti
mov
add
lret
add
jbe
cs
jnp
add
mov
enter
jmp
adc
mov
add
add
inc
push
pusha
add
mov
enter
movsb
sub
jmp
xchg
xchg
mov
stc
or
ljmp
add
pop
insb
test
xchg
push
cmp
das
mov
test
outsl
dec
daa
adc
xor
rolb
mov
and
inc
add
fucomp
das
sub
push
clc
imul
out
pop
pop
pop
mov
xchg
cmpsl
frstor
cmp
push
imulb
add
mov
add
jo
cmp
adc
sbb
cli
add
sbb
loop
out
call
mov
stos
test
inc
add
mov
xor
add
cmp
in
lods
cmc
inc
dec
cltd
js
push
add
jle
outsl
mov
std
push
rcll
inc
add
add
loop
pop
pop
pop
xchg
mov
dec
pushf
pop
and
in
jle
ja
pop
in
push
dec
inc
add
push
test
scas
jo
dec
cwtl
mov
and
cmp
or
into
or
add
add
divb
cmp
pop
enter
daa
test
loope
mov
sahf
fcomp
xchg
imul
sub
add
add
add
add
arpl
mov
rcrl
iret
and
jle
jp
add
cmp
pop
add
sub
push
sbb
jo
in
fwait
imul
fnstcw
push
sbb
data16
fisubs
add
xor
xor
inc
stos
adc
insl
out
bound
mov
clc
pop
mov
lods
enter
mov
mov
cltd
dec
xor
lods
add
shrb
pop
icebp
sahf
and
pop
outsl
sub
enter
loopne
lods
imul
sbb
inc
and
loop
negb
cmc
pushl
and
pop
sub
aaa
push
xor
dec
cmp
ja
xor
and
jno
rolb
stos
sbb
adc
pop
mov
cld
arpl
fcomip
pop
movb
fimull
jb
pusha
add
add
cmpsb
cltd
lret
mov
xchg
shll
lods
int3
mov
cmpsb
mov
popa
arpl
add
shlb
add
fcmovb
add
add
test
out
jnp
add
test
imul
popa
mov
sub
jmp
push
push
cmpsb
icebp
lods
dec
out
mov
in
inc
add
cltd
cmp
lahf
mov
inc
js
inc
xchg
inc
push
insb
jae
jbe
push
cmp
add
pop
out
mov
mov
jp
stc
pop
bound
faddl
and
adc
scas
test
out
fcmovnu
mov
xor
push
add
adc
pop
mov
or
idiv
arpl
cmc
xchg
ss
mov
clc
or
mov
jl
and
mov
add
sti
mov
add
subl
xchg
loope
ljmp
jecxz
inc
add
mov
dec
scas
pushf
leave
and
and
inc
xchg
daa
push
add
jle
bound
test
adc
shrb
jns
add
add
stos
ljmp
push
cmp
mov
jmp
sub
mov
in
loopne
inc
add
adc
pop
lods
and
mov
mov
cmpsl
pusha
add
cmpsl
sbb
inc
inc
out
push
dec
xor
les
loope
add
fs
push
scas
hlt
jo
les
sub
add
popl
movsl
jl
lahf
mov
jl
mov
adc
fs
push
insl
cmc
repz
and
data16
cmc
addb
jnp
jb
xchg
ja
cmp
in
scas
push
test
push
pop
gs
mov
stos
mul
repnz
cwtl
movsb
jo
mov
xchg
mov
fsubs
aas
stos
push
add
lods
mov
add
bound
cld
in
xchg
inc
add
and
adc
cmc
xchg
xor
xchg
push
pop
dec
in
jnp
mov
dec
cltd
insb
sub
out
cmpsb
inc
sar
rolb
add
ja
mov
jp
lahf
xchg
cmpsl
daa
mov
lret
add
add
add
push
mov
ret
lea
add
jmp
fdiv
mov
lahf
stos
movsl
imul
aad
sbb
add
sub
pushf
into
aaa
mov
jp
xor
cwtl
cld
mov
sub
cmpsl
test
mov
add
adc
scas
mov
rorb
nop
movsl
xor
adc
inc
call
lea
sbb
rolb
mov
aaa
add
mov
jae
movsb
dec
test
mov
addb
xor
add
cmc
push
mov
cmp
cmp
dec
push
jge
jns
andl
call
pop
outsb
jnp
cmpsb
stc
xchg
sub
adc
cltd
inc
mov
loope
adc
addb
adc
lods
pop
push
movb
add
loop
sbb
jg
cmpsb
pusha
add
push
inc
add
stc
xor
adc
fsub
dec
inc
in
pop
bound
push
inc
out
dec
sbb
aad
jae
fidivrs
xor
add
clc
mov
sub
ret
into
bound
shrb
jecxz
in
nop
pop
inc
add
sahf
xchg
addr16
std
jge
add
lret
lock
inc
add
sub
test
push
stc
mov
add
das
insb
push
imul
mov
popa
xor
lcall
adcl
pop
pop
shll
lds
in
out
and
clc
in
pop
int3
sbb
in
pusha
add
lret
cmpsl
repnz
push
add
push
push
xchg
inc
add
bound
cmp
lods
mov
int3
inc
sub
out
dec
dec
push
ljmp
cmp
arpl
and
mov
lcall
xlat
jge
int
ja
inc
add
mov
mov
pushf
int3
sub
fcmovbe
loop
lods
lahf
mov
in
cmc
test
xor
out
mov
inc
cs
jecxz
addb
cmpsl
and
arpl
iret
mov
inc
add
push
push
or
aad
mov
mov
stos
dec
cs
sub
shl
test
jae
inc
add
int
out
sbb
icebp
adc
add
daa
stc
sub
sub
cmp
add
aaa
and
ret
mov
cwtl
pop
mov
popa
lods
andl
mov
jle
xchg
dec
inc
push
dec
sbb
ficoms
add
xchg
out
stos
je
xor
fbstp
jge
sub
add
jmp
lock
jae
addb
cmpsl
push
pop
repnz
inc
add
aas
push
add
out
lcall
mov
addb
jno
add
aad
push
sub
std
xchg
adc
in
andl
addb
add
xor
repnz
fcoml
adc
sub
test
cmp
shll
pop
inc
sbb
arpl
xchg
ret
jl
jo
jmp
cld
movsl
jle
jae
out
fmull
leave
sbb
sbb
inc
add
push
addl
mov
adc
dec
sbb
or
gs
push
jg
dec
out
lock
inc
add
cmp
add
add
xchg
or
icebp
inc
add
in
enter
sbb
lret
add
add
cmp
cltd
je
fcomps
push
cmp
inc
add
shlb
in
iret
inc
push
cmp
sbb
and
push
jge
daa
xchg
out
repz
mov
clc
popf
dec
push
mov
push
push
popf
cwtl
mov
adc
xchg
into
insl
lods
sbb
or
xor
nop
sbb
jl
cmc
sbb
add
inc
add
addb
mov
cmpsl
mov
daa
add
sub
sub
mov
fbstp
jne
dec
aas
insb
dec
sbbl
std
arpl
fwait
pop
jp
out
mov
in
pop
push
add
mov
imul
cmc
lock
pop
add
popa
or
lahf
stc
cmp
test
scas
jnp
add
notb
outsb
inc
addb
jae
mov
sub
into
pop
das
fsts
arpl
add
dec
in
sbb
test
or
and
xchg
dec
pushl
je
movsb
cli
pop
xor
or
es
inc
arpl
test
repz
mov
and
or
ret
xchg
addb
or
pop
addr16
insl
mov
mov
sbb
bound
sbb
repz
jns
cmp
push
cmpsb
in
cli
push
and
scas
fistpll
rolb
out
scas
lcall
add
int3
ss
inc
push
xchg
mov
mov
dec
push
dec
dec
fs
scas
inc
add
push
inc
add
mov
pop
xor
mov
sub
or
sbb
add
sahf
out
int3
jecxz
lret
int3
pop
psubq
retw
lods
imul
call
inc
mov
out
out
ficoms
add
push
xor
aas
fs
push
mov
addl
inc
call
ss
cmp
cmp
int3
dec
xor
fstps
ja
add
cmp
sbb
mov
or
enter
data16
mov
cld
into
stos
loopne,pt
jg
ret
mov
rolb
cmp
loop
enter
sub
add
push
mov
mov
xchg
add
stos
faddl
pop
movsl
rolb
adc
add
push
pop
ret
jg
inc
or
sub
mov
mov
xchg
aaa
int
mov
repz
pusha
add
aad
or
stc
xor
mov
adc
add
into
pop
test
ljmp
fisttpl
dec
iret
sub
and
das
pop
dec
out
fistpll
xchg
test
add
not
in
test
and
and
aaa
or
fistpl
divb
sbb
dec
push
sarb
dec
mov
push
xchg
je
call
cmp
popa
mov
mov
xchg
imul
add
clc
and
in
out
adc
dec
pop
in
adc
pop
in
test
push
sub
xchg
sahf
subl
and
pop
pop
dec
movsb
push
pop
scas
mov
data16
push
fsubs
push
jmp
iret
dec
lret
imul
mov
js
jbe
ss
or
loopne
data16
xchg
ja
jmp
cmpsl
js
add
add
dec
mov
add
mov
lock
mov
cmp
mov
out
dec
jg
add
sbb
hlt
push
pop
leave
ljmp
clc
lock
sbbl
mov
sbb
add
sti
in
loop
add
arpl
pop
outsl
inc
push
cmp
dec
les
lahf
jmp
mov
mov
sub
fstps
ja
out
cmp
call
leave
fstpt
push
icebp
addr16
mov
sub
enter
fnsave
stc
cmp
lahf
mov
roll
jle
addb
mov
dec
add
or
popf
xchg
aaa
mov
inc
jae
add
xchg
push
arpl
shll
and
outsb
sahf
test
xchg
test
cmp
scas
mov
pop
insl
mov
dec
imul
adc
add
xchg
jns
pushf
cmpsl
in
jle
mov
cmp
jns
add
daa
lret
or
add
xor
ds
lds
out
lahf
call
scas
dec
and
jg
or
aaa
mov
pop
sbb
mov
aas
insb
divl
sub
sub
adc
and
xchg
or
sti
cli
das
xchg
dec
fdivr
inc
add
lock
shrl
add
cmc
in
lods
hlt
cmpsl
lret
and
lahf
sub
sti
shrb
adc
add
sub
mov
pop
cwtl
imul
stc
xor
inc
add
or
sbb
repz
int
jae
data16
pop
pop
xor
cmp
call
xchg
popa
mov
loope
aas
shll
outsl
or
sbb
lret
mov
movsb
pop
jae
addb
fsubrs
pop
push
push
mov
add
aad
add
sub
addb
xchg
adc
add
pushf
push
stos
imul
mov
lea
pop
mov
sahf
xchg
ljmp
ror
sub
and
cmpsb
sbb
xchg
jbe
ljmp
out
inc
popa
mov
fsts
fisubrl
test
xchg
cmp
movsb
push
jns
fcmove
xor
mov
lds
cmp
jbe
lock
add
pop
mov
sub
or
cwtl
jae
or
pop
stc
mov
std
cmpsl
fs
pop
mov
adc
cld
sets
fstpt
and
add
int3
mov
bound
lods
jl
into
lods
lahf
jg
jnp
jp
ficoml
sub
fwait
negb
movl
mov
cli
adc
xor
jg
addb
add
and
mov
lods
dec
stc
sub
ret
loopne
outsl
mov
mov
inc
lahf
xlat
push
cli
imul
scas
mov
test
adc
das
std
movb
sub
mov
adc
ja
add
arpl
push
jle
out
je
rcll
enter
push
pop
sub
add
xor
jmp
add
lret
stos
rolb
mov
nop
jae
mov
jo
add
sub
add
bnd
pop
sbb
movsl
and
mov
movsl
jl
addb
add
rolb
jge
popa
mov
add
jge
mov
mov
add
imul
mov
in
mov
add
int
cmc
js
cli
popf
dec
cs
arpl
xor
int
dec
dec
add
mov
fwait
lahf
xchg
out
sub
bound
mov
pop
xchg
inc
cmpsl
mov
call
push
cmp
jb
mov
ja
add
add
dec
sbb
xchg
pop
enter
cltd
imul
push
es
orl
or
adc
mov
xor
dec
mov
cmp
dec
or
out
les
xorl
fwait
push
dec
inc
imul
sbb
add
and
dec
aas
test
outsl
mov
cmp
fmull
nop
mov
add
inc
add
shll
outsb
pop
dec
data16
sub
shll
cltd
inc
add
mov
lret
bound
lret
sbb
sub
jg
outsb
lcall
ds
inc
adc
pop
xor
es
adc
add
jge
xlat
popl
and
jo
push
jnp
stc
xchg
pushf
sbb
add
imul
pop
mov
aam
xchg
repz
add
rclb
fnsave
hlt
out
sub
mov
mov
add
adc
outsl
cmp
jno
jcxz
fnstcw
dec
inc
add
mov
adc
add
mov
inc
fdivs
adc
add
addb
inc
add
shll
sbb
push
scas
into
je
add
jecxz
add
xlat
and
xlat
adc
jno
push
add
icebp
sahf
mov
dec
scas
out
adc
and
scas
pop
jbe
mov
push
loop
aaa
mov
xchg
sbb
movsbl
lahf
test
std
jle
add
shl
add
mov
loope
push
mov
es
xchg
out
addr16
sbb
add
cld
movsl
fldenv
pusha
add
shll
out
pusha
add
push
test
mov
mov
jno
or
dec
aaa
adc
les
and
mov
fwait
mov
les
lods
cli
fbld
fwait
lcall
stos
cs
mov
int3
out
xchg
mov
and
stc
ds
repz
mov
clc
jne
xor
mov
cmp
adc
and
movsl
add
and
add
lcall
add
flds
mov
lods
mov
adc
or
pop
cmp
inc
add
or
fwait
loopne
hlt
icebp
icebp
rolb
add
out
cmp
out
int3
mov
in
add
pusha
add
lock
pop
sub
mov
push
xor
sub
cmp
xchg
mov
add
fsubrp
add
movb
pop
les
test
pop
pusha
add
dec
pop
jg
adc
out
xchg
shll
lock
pop
into
sbb
fisubs
mov
add
mov
add
outsl
repnz
or
pop
pop
into
adc
movsb
jecxz
add
mov
mov
lret
mov
sti
mov
fwait
adc
test
or
push
in
sbb
mov
pushl
fisttpl
int3
movsl
adc
pop
nop
cwtl
fs
fcompl
inc
add
sbb
add
inc
xchg
sahf
mov
xor
xchg
and
pop
push
subl
push
jbe
in
into
stc
shrl
imul
add
stos
test
cld
jae
shrl
push
add
cmp
int3
inc
call
push
cmp
push
push
je
enter
or
mov
or
out
rorb
push
add
fldt
xor
add
negl
sbb
jge
sahf
jle
fcmovnu
pusha
add
push
dec
jl
gs
dec
jmp
and
addb
mov
mov
adc
sar
push
xchg
out
mov
jne
lcall
sysexit
lds
adc
jae
add
andl
ret
repnz
mov
movb
int
mov
jne
add
cs
add
mov
cld
sbb
dec
sub
fldenv
xor
imul
push
add
pop
iret
int
test
fidivrs
das
inc
je
mov
xor
cmp
mov
dec
aas
lcall
push
imul
adc
scas
pop
sbb
mov
mov
jmp
pop
push
mov
movsl
aam
pop
pop
sub
and
mov
inc
add
push
inc
imul
jmp
mov
lods
pop
sbb
out
push
lret
sarl
gs
cmp
cmp
inc
push
faddp
add
or
xchg
test
inc
incl
xor
mov
rolb
gs
leave
outsl
push
arpl
fistps
rol
add
xor
add
pop
jbe
sbb
mov
insl
dec
rorb
mov
xor
inc
or
dec
cs
fisubrs
outsl
inc
lods
jl
mov
movsb
pop
rcl
icebp
addr16
adc
add
decb
xorl
into
cmp
stc
loopne
lods
icebp
push
fnsetpm(287
jae
dec
scas
ret
push
add
int3
push
jb
or
pop
pop
out
sbb
or
inc
stos
or
mov
lock
adc
out
mov
jg
aam
push
fistps
iret
mov
add
jge
and
rolb
add
scas
xor
cmpsb
inc
mov
xchg
ja
lret
mov
dec
lret
xlat
cmp
or
pop
mov
outsl
pop
mov
add
insl
mov
stos
ret
insl
inc
push
in
add
data16
aad
loope
xor
cmp
mov
dec
add
rcrl
xor
xchg
jmp
and
loop
test
add
xchg
jg
addb
cwtl
ret
stc
cmp
fiaddl
inc
add
mov
nop
pop
and
mov
pop
mov
dec
inc
lcall
mov
add
sbb
leave
sahf
or
fwait
inc
add
aad
mov
jne
push
pop
push
pop
xlat
ror
mov
and
sbb
xchg
pop
xchg
movsl
pop
pop
insb
add
rcrl
push
bound
jnp
add
aaa
cmp
sti
sbb
sbb
scas
add
or
or
cld
inc
mov
aaa
cli
lea
mov
jnp
mov
movsb
mov
arpl
repnz
add
push
outsl
jge
into
repnz
inc
clc
lret
xor
add
adc
fs
add
in
sbb
xchg
jl
jp
popf
fucompp
sub
call
rorl
cmpw
mov
fstpt
add
aam
dec
fstpl
call
and
repnz
sub
add
pop
or
xchg
aam
push
insb
push
cmc
push
insb
lret
loop
inc
and
cmp
add
add
sub
jnp
into
adc
inc
iret
outsl
push
popf
push
out
sti
in
and
leave
lea
add
lahf
sti
roll
clc
sahf
movb
clc
or
shr
sbb
cmp
xchg
adc
pop
mov
sbb
mov
out
cld
jae
and
cld
pop
jb
sub
and
jae
mov
or
mov
pop
push
add
xor
jg
sbb
arpl
push
decl
jae
bound
lahf
leave
test
cmc
in
or
insb
out
sbb
mov
mov
ljmp
pop
jge
mov
sub
lcall
dec
repz
cltd
fildll
int
xor
add
jno
dec
sahf
out
imul
and
add
add
dec
movb
rolb
dec
fwait
loop
push
and
push
add
jg
add
in
cs
cmpsl
cld
cmpsl
scas
push
adc
in
repnz
sahf
iret
shrb
stos
xchg
add
test
and
cmp
sbb
push
jle
sbb
xor
cltd
and
clc
sbb
outsb
aad
dec
mov
call
push
repz
cwtl
dec
loope
pop
popa
ss
imul
or
jp
mov
lock
mov
fidivs
pop
fsubrp
xor
dec
and
add
fs
push
pushf
mov
iret
lods
xlat
pop
loopne
xor
mov
inc
inc
xchg
loope
js
addb
test
add
inc
cmp
pop
add
pop
loopne
ja
sbb
xlat
xchg
es
or
push
popf
stos
addb
dec
dec
push
call
pop
repz
bound
outsb
add
inc
add
popf
mov
mov
mov
mov
cmp
pop
mov
mov
mov
mov
mov
mov
add
add
jp
adc
addb
add
dec
addb
xchg
jmp
insl
sub
mov
sub
push
or
add
inc
add
mov
jl
add
xchg
ret
xor
dec
dec
inc
add
fisttpll
sub
popf
xchg
push
xlat
aam
out
sub
dec
adc
rorl
dec
push
mov
cs
in
ret
inc
add
ffree
add
mov
mov
push
shr
pusha
add
adc
out
jns
add
mov
fsubrs
repz
xor
adc
cmp
mov
sub
add
xchg
flds
push
mov
xchg
push
aad
test
pop
push
sub
inc
ja
fisubl
and
xor
movsl
lret
outsl
jne
add
cs
call
sbb
test
push
add
stos
pop
xchg
mov
iret
cmc
jne
mov
aad
je
cmp
xor
xchg
in
enter
cli
insb
jle
mov
push
xchg
js
lret
movsb
mov
loopne
mul
mov
inc
scas
fisubl
add
inc
add
fidivs
cmpsl
in
dec
fistl
addr16
jmp
lcall
lock
and
ret
ja
add
push
add
inc
adc
and
daa
mov
sbb
clc
add
mov
jo
xchg
sub
out
jbe
sbb
or
add
les
cmp
pusha
add
mov
pusha
add
xor
or
clc
xchg
ret
ljmp
movsl
pusha
add
mov
sub
xchg
xchg
nop
aad
add
icebp
cmp
cltd
stos
or
ss
add
or
add
inc
int
mov
mov
das
push
rorl
dec
out
addr16
movsb
xchg
sub
aaa
sbb
aad
mov
mov
dec
shlb
add
inc
add
mov
loopne
dec
leave
xor
add
lahf
mov
add
cmp
add
xchg
sbb
add
mov
loopne
jp
lock
cltd
lahf
rolb
xlat
int3
mov
sub
scas
sub
lock
out
xchg
add
enter
out
add
xchg
roll
add
cmp
lcall
add
add
cwtl
fcoml
adc
lret
fsubl
adc
jbe
jle
add
pop
es
sbb
add
movb
add
js
testl
push
sub
ret
or
call
mov
xchg
test
mov
sub
or
push
add
sub
xchg
and
movsl
cmp
mov
pop
xchg
cli
and
cmpsl
mov
cs
add
add
add
mov
add
stos
pop
dec
push
xor
iret
add
icebp
mov
and
cwtl
nop
out
add
inc
sbb
sbb
inc
je
sti
repnz
outsl
cld
cwtl
leave
imul
movb
out
lcall
in
imul
or
xchg
pop
push
loop
mov
xchg
jbe
dec
imul
xor
push
lcall
cmp
pushl
out
add
mov
addb
decl
dec
in
sub
push
fidivrl
add
inc
add
mov
jg
popa
cmc
mov
lret
imul
lods
jb
push
rolb
pop
sahf
arpl
test
sub
in
int3
xchg
push
push
xchg
adc
push
nop
pop
jbe
insl
data16
push
leave
in
jmp
out
mov
xchg
mov
lret
jno
mov
add
sbb
rolb
mov
aaa
ja
aas
sar
mov
jmp
xor
xlat
imul
push
add
ret
dec
imul
mov
mov
testl
add
sbb
dec
icebp
jp
add
stc
dec
mov
int
mov
pop
and
jp
je
inc
add
mov
fmull
jge
add
mov
rolb
add
pusha
add
mov
push
dec
push
pop
cmp
cwtl
popf
fisubrs
movb
add
lret
sub
push
xor
jp
aas
mov
lds
ret
loopne,pt
jbe
sarl
aas
xor
std
adc
sub
adc
add
popa
jge
subl
mov
xchg
mov
add
aam
xor
mov
nop
call
stos
je
pop
ret
movsb
sub
mov
jl
repnz
lahf
jmp
add
push
out
test
sub
mov
dec
int
add
add
jno
cmpl
addr16
adc
and
movb
mov
test
mov
add
dec
std
aas
dec
idivl
xchg
or
call
xchg
and
adc
into
lahf
inc
add
jg
dec
inc
add
icebp
lods
movsl
popf
pop
dec
push
pop
js
clc
mov
xor
jl
mov
or
sub
inc
add
lods
inc
add
cmovnp
sbb
jns
clc
pop
inc
add
xchg
mov
push
setno
std
outsl
stc
adc
out
cmp
ror
xor
cltd
mov
sbb
faddl
mov
inc
add
out
push
outsb
pushf
sbb
inc
movsb
dec
je
addb
jno
jno
lods
jmp
scas
mov
lahf
jbe
cmc
je
orl
addb
add
call
sub
dec
xchg
add
mov
or
movb
mov
mov
adc
adc
push
xchg
sbb
enter
dec
sbb
fstpl
push
aam
sti
movb
mov
push
add
or
sub
mov
dec
xchg
movsl
cmpsl
push
std
gs
decb
and
lock
jecxz
sub
test
adc
push
jg
adc
add
sti
lods
adc
cmpsl
push
sbb
sub
loop
xchg
divl
je
xor
cmp
mov
lret
sbb
mov
add
out
cmpsb
fsts
mov
mov
lcall
or
clc
xor
popf
and
add
xchg
xor
xorl
lds
or
popf
sbb
leave
sub
cmpl
add
mov
fwait
lcallw
xchg
lods
push
lods
les
jo
mov
pop
into
pop
pop
ret
push
xchg
and
outsb
rol
lds
sbb
repnz
sub
or
pop
stos
pop
mov
les
movb
mov
add
push
and
gs
mov
add
hlt
sbb
insb
sti
fincstp
jle
out
mov
pop
rolb
jae
movsb
arpl
out
iret
pop
hlt
jo
jecxz
xchg
lret
adc
and
add
ja
inc
xor
cli
ljmp
rcr
cmp
inc
add
sbb
jno
ss
bound
rolb
pushf
mov
jmp
mov
pushf
xlat
push
mov
movl
inc
add
test
mov
ds
adc
call
add
inc
add
xchg
jnp
out
add
enter
inc
add
clc
daa
loope
stc
loope
mov
les
movb
insl
ds
fcmovb
add
xchg
outsb
xchg
in
mov
mov
lods
and
scas
fadds
or
sub
add
mov
inc
add
jb
in
mov
sub
inc
clc
or
ret
dec
push
jl
loopne
outsb
movsb
pop
test
jp
popf
aaa
inc
dec
testl
jb
add
shll
jp
push
stos
xor
outsl
xchg
xchg
lods
vmwrite
cmc
push
test
icebp
data16
std
push
jle
pop
stc
adc
add
test
jnp
mov
pop
mov
lock
mov
rcl
rcll
jmp
iret
xchg
or
test
mov
ftst
insb
je
or
jmp
inc
loopne
leave
mov
xchg
push
pop
cli
into
inc
add
mov
add
add
cmp
scas
jmp
fisttps
sub
dec
mov
sbb
aad
xchg
add
in
ljmp
inc
jne
cmp
es
loop
ret
adc
add
insb
int
mov
arpl
push
push
mov
sbb
sub
call
and
lods
sbb
aas
mov
xchg
ljmp
mov
jne
bound
pop
mov
leave
das
movsl
leave
add
pop
jno
adc
stos
lret
fistpll
in
test
cmpsl
push
xlat
sahf
xchg
std
jmp
out
add
fnstenv
jecxz
adc
xor
int
push
addb
inc
sub
adc
add
out
or
jl
and
out
lcall
sahf
add
adc
pop
ss
push
addr16
add
std
lahf
rolb
xor
repz
cmpsb
jp
dec
jno
cmpsb
pop
sub
into
sub
adc
lds
xor
into
push
lahf
xchg
sbb
xchg
adcl
insb
popa
imul
dec
cwtl
ljmp
or
mov
xor
xor
ret
es
jle
jae
add
fwait
je
rcl
push
ficomps
mov
sbb
jle
cmp
xor
cmpsl
jbe
mov
je
jmp
in
xor
add
out
lahf
jmp
mov
or
adc
imul
inc
add
ljmp
sahf
push
mov
add
pop
pushf
mov
add
adc
add
jg
jp
shr
jnp
pop
mov
sub
push
not
ret
sub
test
cwtl
dec
dec
rolb
stos
cmc
int3
pusha
add
out
xor
mov
je
mov
rclb
mov
jecxz
jle
jp
cwtl
lds
mov
mov
push
fmuls
add
sbb
test
add
mov
sub
pop
mov
addb
popf
inc
add
sbb
mov
jecxz
cmp
mov
xor
sbb
jmp
push
cld
push
xchg
and
popf
mov
cmp
les
and
lock
mov
mov
movsb
das
stos
pushf
cltd
sarl
mov
mov
push
adc
push
and
inc
xchg
rolb
or
jp
dec
hlt
std
mov
pop
mov
lahf
icebp
mov
add
ds
nop
lcall
pop
ja
add
in
std
jmp
xor
add
enter
outsb
leave
mov
xchg
fisttpl
rolb
add
in
mov
dec
int
out
mov
xchg
xchg
mov
xchg
push
adc
mov
add
inc
jb
mov
sbb
test
sbb
or
mov
inc
add
jo
add
add
xor
push
mov
fcoms
js
cltd
scas
push
jne
add
jno
fistps
sub
aas
inc
scas
add
adc
mov
and
xor
mov
push
rcll
les
cs
lock
sub
and
xlat
jp
clc
jmp
push
sti
pop
leave
stc
cs
sbb
lea
mov
jno
sub
adcl
add
xor
jle
sub
ret
adc
lcall
ja
pusha
add
push
jle
movb
shll
xor
xlat
movb
mov
repnz
add
leave
push
movsb
and
call
arpl
jmp
mov
inc
fwait
cmp
mov
and
in
lods
cmp
out
out
mov
fcmovb
add
pop
add
shll
shll
push
add
cltd
aas
pusha
add
js
rolb
movsl
xchg
dec
cltd
push
cmp
ss
andl
mov
cwtl
in
bound
inc
aaa
adc
std
inc
add
add
add
cs
add
stc
leave
push
pop
lock
lods
imul
xor
in
sbb
filds
sub
mov
xchg
push
outsl
cmp
push
sbb
add
test
mov
cmpl
cmp
je
and
xchg
je
add
or
movb
in
pop
lock
lods
sub
and
push
add
dec
fmuls
lock
jo
add
or
inc
add
inc
add
mov
shr
inc
add
arpl
in
daa
daa
test
iret
or
jecxz
add
sub
aad
cld
sbbl
icebp
rcrl
fdivrl
addb
rcr
outsl
mov
and
js
mov
push
mov
test
pop
xchg
pop
mov
dec
pop
push
sbb
fwait
sbb
pushf
mov
or
jge
int3
jb
pop
ret
ss
orl
add
lcall
pop
mov
add
pop
sub
out
mov
or
out
inc
fwait
cmp
mov
mov
add
dec
int3
icebp
sub
dec
stc
xor
cmp
lret
xlat
and
mov
cmp
ret
test
cmp
in
pop
stos
xchg
jnp
stos
outsl
mov
add
fwait
aam
xchg
jmp
jmp
jno
cmpsl
jg
add
insb
pop
lret
sub
add
sbb
fidivrl
mov
movsl
dec
mov
loope
shll
adc
les
lret
pop
add
inc
add
scas
dec
push
rcrb
test
test
insl
or
push
add
pop
xchg
mov
int
popl
scas
inc
add
dec
push
cmp
bound
shrl
ret
and
and
adc
dec
xor
mov
cmc
xor
add
fs
dec
cmp
stos
ja
sub
jae
mov
jb
xlat
adc
xchg
xor
xchg
js
bound
inc
imul
pop
mov
movsb
xor
ja
mov
jno
mov
xor
mov
and
or
sub
arpl
test
scas
popa
adc
push
add
or
cmp
add
lcall
cwtl
xor
cmp
xchg
inc
add
rolb
pop
pop
cs
mov
scas
repnz
outsb
fidivs
sbb
cmp
xchg
add
dec
leave
rcl
pop
scas
sub
cmp
stos
movsl
sub
lods
insb
lahf
mov
in
add
ja
lods
xor
add
js
jnp
js
scas
nop
addr16
xor
mov
lcall
inc
add
jge
add
mov
iret
mov
jl
addb
out
xor
push
fidivl
or
shlb
inc
jns
test
inc
push
inc
or
shr
xor
addl
lahf
xor
add
loop
dec
js
out
cmp
mov
jl
pop
jns
js
hlt
push
jne
sub
sub
jmp
add
aam
push
in
inc
add
inc
fimuls
dec
loopne
add
insb
jmp
add
lahf
das
leave
jp
xchg
adc
aas
jl
out
jae
sar
addr16
fistpll
lret
jge
dec
add
das
dec
fnstcw
lahf
fiaddl
xchg
movb
or
add
push
sbb
call
mov
movsb
in
mov
into
xlat
push
or
clc
fs
cmp
dec
dec
xor
xchg
sti
add
jbe
lods
adc
mov
lock
add
lahf
stos
xchg
loope
pop
insl
jecxz
add
or
lahf
ja
jno
adc
add
lcall
subl
push
adc
cmp
sub
shrb
fs
add
cmp
mov
mov
cmp
call
and
fists
mov
xlat
sub
mov
adc
hlt
ret
cmpl
loopew
int3
ret
fidivrl
push
add
es
fcomps
jae
decl
fsts
lock
in
inc
cmp
loopne
icebp
daa
mov
sbb
mov
xchg
pop
subl
sub
outsb
lods
movsl
hlt
cmpsl
adc
xchg
jg
fdiv
cmpsb
pop
sbb
loope
inc
add
in
andl
or
jno
mov
mov
movb
std
adc
clc
mov
xor
lret
xlat
jbe
jns
inc
add
pop
push
xor
xor
mull
jbe
or
jb
jno
fimull
push
shll
lahf
mov
cmpl
add
pop
mov
mov
mov
jbe
adc
xorl
and
add
bswap
add
mov
mov
add
sbb
cmp
shll
add
pushf
jno
test
xchg
mov
push
pop
fdivl
mov
mov
add
scas
inc
jbe
mov
add
adc
in
test
mov
sub
test
or
sub
inc
jl
clc
rolb
rorb
sbb
fildl
xlat
jge
loope
leave
dec
xor
in
add
xchg
popa
int
mov
les
scas
cld
mov
mov
in
jnp
inc
add
add
popl
cmpsb
arpl
push
mov
sbb
cltd
fsubs
add
xchg
add
cltd
lret
sbb
add
cmp
addr16
xchg
shll
loop
xchg
cld
fdiv
xchg
call
repz
enter
adc
repnz
out
addb
sub
loopne
lret
xchg
xor
adc
push
ret
dec
jle
mov
add
jae
sub
leave
aas
add
mov
movsb
pop
push
jle
or
addb
mov
mov
jne
push
mov
mov
into
lock
lahf
scas
xchg
push
je
movsl
mov
jo
jle
or
leave
aam
jge
rorl
mov
mov
jg
xor
mov
add
jno
add
sub
stos
sbb
aas
stos
mov
xchg
sbb
fs
xchg
out
test
jg
xchg
or
imulb
enter
add
add
leave
sub
jno
mov
push
hlt
roll
stos
pop
add
dec
cmp
xchg
icebp
pop
les
scas
lret
loopne
mov
fldenv
rcrl
cltd
fcmovb
sbb
and
movsb
cmpl
aas
push
insl
js
jb
add
mov
cld
sbb
mov
addl
pop
daa
stos
cwtl
xchg
mov
xchg
arpl
fcoms
xchg
push
inc
add
lret
rolb
mov
xchg
imul
add
rol
add
rorl
push
fsubl
push
out
jb
dec
jmp
fs
add
popf
shrd
nop
fsubrp
mov
arpl
in
sti
fsub
jg
cwtl
or
pop
jg
add
sbb
push
mov
dec
cmp
hlt
xlat
or
jae
mov
push
add
mov
std
test
cmp
mov
dec
xchg
test
push
jno
cmc
and
test
xchg
mov
jnp
pop
stos
lcall
bound
or
movsl
bound
inc
add
rol
add
mov
jne
adc
dec
jno
in
push
aaa
jns
cmc
jb
stos
pop
inc
enter
lahf
xor
inc
add
addl
xchg
addb
ja
mov
push
xor
notb
xchg
sti
sahf
add
nop
jno
insb
lock
ret
jmp
rolb
and
int3
dec
cwtl
lock
fisubs
shrb
mov
test
test
inc
add
add
iret
add
aam
sbb
and
test
push
aaa
loop
mov
and
outsl
sub
or
jmp
push
mov
lret
stos
mov
jns
push
fbstp
stc
cmp
cmp
idivl
add
add
or
jno
addl
subl
cli
nop
mov
mov
xchg
out
and
mov
xlat
pop
xor
sub
int3
addb
jo
push
in
xchg
mov
test
mov
xchg
outsl
std
rorb
pop
sbb
pop
xor
pop
push
add
insl
jecxz
fistpl
sahf
out
mov
mov
or
xchg
sbb
jmp
mov
xchg
idiv
es
rolb
push
insb
cld
nop
push
scas
add
lock
test
mov
es
cwtl
or
gs
cmpsl
add
aam
mov
das
repnz
or
pop
leave
cmp
xchg
bound
sbb
and
xchg
mov
call
sub
xor
add
add
fildl
mov
mov
inc
adc
mov
fcmovnbe
jnp
roll
mov
mov
mov
add
gs
sub
xor
sub
dec
dec
movsl
jae
xchg
jo
pop
in
add
fnstsw
pop
xor
add
rcl
loope
cmp
sub
es
push
mov
addb
add
push
mov
in
je
adc
lds
cs
xchg
pop
rolb
mov
add
ret
cmp
in
sbb
mov
inc
jl
and
mov
movsl
imul
xchg
cli
push
icebp
sbb
or
sahf
in
mov
fwait
mov
shrl
pop
and
or
jle
cld
mov
jl
cwtl
jns
add
fsubp
xchg
jecxz
bound
psubusb
or
stos
cmpsb
addb
inc
pop
sarl
loope
std
ret
rep
jbe
add
mov
jb
mov
jmp
mov
test
and
lahf
into
add
dec
mov
xchg
lods
cs
xor
push
stc
add
push
and
or
scas
aam
push
push
or
pop
lcall
mov
js
fwait
hlt
fdivl
fmuls
dec
mov
jbe
maxps
add
movsb
bound
sbb
paddusw
jnp
inc
add
adc
leave
xor
in
sahf
stos
cwtl
jae
mov
lods
std
adc
add
loopne
or
add
add
and
add
pushf
mov
inc
filds
in
inc
add
push
add
inc
rcll
add
mov
adc
mov
ja
or
mov
dec
imul
lds
xor
push
cmp
movsl
stc
addb
sbb
addr16
aaa
add
jmp
or
mov
mov
jnp
outsb
xchg
or
lea
add
push
pop
addr16
jne
add
mov
sub
add
cmp
pop
lea
adc
jmp
and
add
mov
insb
lock
cmp
add
out
in
insl
icebp
mov
add
lods
mov
shl
cmc
push
jle
mov
bound
ljmp
add
xchg
maxps
fldt
xchg
or
jmp
in
sbb
les
scas
insb
and
rolb
sub
jo
xchg
call
ficoms
bound
stc
push
lea
imul
mov
add
jae
fadds
mov
push
jp
push
repz
fstps
enter
add
repz
add
mov
and
in
xchg
xchg
push
bswap
mov
adc
or
inc
lgs
rorl
popa
mov
jl
adc
std
out
add
repnz
jge
fists
lea
sub
cmp
lret
mov
mov
sbb
inc
add
ret
lahf
or
icebp
movb
mov
jb
jl
add
rcrl
or
outsl
jae
jmp
pop
test
dec
test
fmul
test
mov
adc
dec
rcrb
cltd
imul
lahf
call
push
shr
sahf
jecxz
out
dec
jb
cmp
add
add
or
jns
mov
imul
mov
test
fiaddl
add
mov
sub
movb
mov
loope
pop
mov
add
fldt
xchg
pop
dec
insb
lahf
repnz
in
pop
xchg
mov
imul
sbb
add
in
idivw
negb
xor
leave
pop
jo
dec
enter
fwait
roll
mov
popl
inc
add
pop
dec
xor
dec
out
stos
not
jno
mov
dec
stos
cwtl
pop
out
pop
push
xchg
xchg
sbb
mov
add
mov
dec
iret
shrl
inc
sub
stc
jno
dec
lahf
dec
mov
dec
repnz
sub
lock
pop
mov
test
adc
dec
push
out
mov
or
pushf
cmp
stos
push
imul
pop
and
push
dec
and
add
setbe
lret
jmp
inc
pop
push
fimuls
pop
fbstp
pushf
rorb
cmpsb
aad
aad
push
iret
pushf
lret
mov
sbb
popf
inc
jbe
fwait
out
inc
out
movsl
xlat
sbb
aam
cmp
sub
add
jmp
push
add
push
add
jns
add
xchg
mov
adc
popf
fadd
add
insb
xchg
lret
into
aaa
inc
pop
dec
and
sahf
fsubrl
stos
xchg
push
ljmp
mov
pusha
add
mov
add
ja
xor
ljmp
jp
sub
push
test
movsl
out
xor
js
sbb
add
mov
xlat
mov
add
repnz
fs
add
cwtl
and
mov
addb
sub
cmp
cld
notb
xchg
xchg
sti
xchg
inc
add
xor
and
xor
mov
insw
push
pushf
popa
lods
xor
mov
mov
mov
scas
stc
ds
test
test
fsubrs
add
cmp
xchg
cwtl
iret
adc
sbb
rolb
add
mov
push
xor
or
add
fs
sub
push
leave
movsl
cld
add
inc
add
add
std
fwait
pop
xchg
jo
sub
nop
pushl
iret
les
inc
cmpl
add
jg
int
in
fsubrl
xor
inc
add
addb
jo
stos
rolb
add
push
xchg
insb
xlat
stos
push
loope
fiadds
aas
pusha
add
pop
xchg
mov
rcrb
outsl
dec
dec
cmp
das
divb
ljmp
pop
in
mov
adc
mov
dec
add
pop
lcall
mov
in
cld
lret
and
iret
adc
xchg
mov
and
push
cmp
sub
add
es
add
cmp
pop
jne
popf
mov
jnp
mov
mov
cmp
cmp
push
push
call
shll
std
dec
aaa
addb
pop
das
pop
outsl
pop
popf
push
cmp
jecxz
sub
mov
notb
sahf
add
xchg
loop
test
cmp
repz
shrl
add
push
std
mov
mov
addb
push
pop
retw
jo
fstps
cmp
xor
roll
mov
fwait
mov
jp
cmc
xchg
data16
pop
push
cmp
sub
mov
movsb
les
sbb
jno
aam
add
add
cmp
or
negl
lock
cmp
add
mov
fcom
mov
in
sub
cmp
add
add
stc
out
clc
movb
mov
call
rcll
fnstenv
fisubl
cmp
ds
movsl
pop
lahf
cmp
call
or
mov
ja,pt
sbb
pop
fwait
push
push
pop
jb
aas
in
sbb
xor
movl
ljmp
stos
sbb
jne
addb
and
lods
xchg
ret
sbb
add
cmp
std
sub
lret
sbb
mov
mov
pop
or
xor
ficoms
push
lea
fisubrs
or
add
daa
xor
add
das
jle
rclb
pop
cmpsl
and
add
sbb
adc
or
add
sbbl
idivl
mov
jge
cli
addb
mov
and
pop
xor
sbb
loope
in
out
ds
pop
dec
daa
ret
lahf
idivl
pause
pop
test
add
jb
xor
inc
adc
xlat
mov
add
outsb
push
fcmovbe
adc
jge
les
hlt
lods
getsec
xchg
enter
adc
rcrl
pop
add
arpl
das
call
lods
cmp
popa
xor
mov
dec
fs
sbb
notl
lea
add
dec
xor
fadds
lret
iret
mov
cmpsb
test
stos
movsb
mov
sbb
mov
sbb
lods
sbb
aam
add
mov
sbb
sbb
into
mov
and
aaa
push
dec
sar
fsubp
mov
mov
jl
cmp
xchg
mov
add
fcmovne
mov
push
outsl
sbb
mov
nop
push
add
rolb
addr16
add
gs
test
cmp
fnstsw
cs
jns
je
fidivrl
in
xchg
xchg
xchg
jne
or
popa
push
pop
pop
add
out
adc
aad
add
push
cmp
les
idiv
mov
sbb
mov
int3
daa
es
add
jno
in
repnz
push
sub
sub
add
sar
xchg
lret
aas
sub
addb
mov
jb
mov
fwait
and
out
add
mov
test
mov
int
push
out
call
cmp
jp
mov
mov
arpl
dec
jg
lds
mov
pop
sub
aaa
pop
pop
rcrl
fmull
subl
jl
in
outsl
bound
xor
and
loopne
pop
xchg
and
push
imul
xchg
jle
in
xchg
jmp
cmp
sub
addb
push
xchg
loopne
push
fwait
out
sbb
jg
add
adc
scas
daa
ficompl
movsb
shrl
xchg
cltd
out
push
stc
mov
cs
xor
int3
sub
xor
xchg
loop
add
jl
fsubl
push
add
sbb
das
mov
adc
in
or
add
sub
mov
call
stc
pop
push
pop
fcomp
or
ljmp
in
mov
outsb
leave
repnz
fidivs
mov
nop
das
out
dec
cld
add
dec
in
push
mov
mov
fsubs
add
bound
fs
sbb
push
add
add
inc
add
adc
dec
cltd
inc
add
ss
sub
outsl
into
int
mov
add
push
and
inc
add
add
out
mov
add
aas
cmpsb
or
inc
mov
popf
push
cmpsb
jns
out
mov
cmp
pop
or
scas
stos
lahf
stos
imul
mov
xor
dec
jbe
popf
stos
push
add
adc
mov
adc
lds
test
cwtl
xchg
enter
lock
dec
pop
xchg
jecxz
add
pop
sub
cmpsb
stos
test
imul
xchg
jbe
jg
sbb
call
add
dec
xor
mov
cmp
pop
dec
xchg
cwtl
mov
xchg
add
add
lret
addb
pop
in
test
test
ljmp
mov
pop
or
sub
aad
add
adc
pop
dec
lods
jo
leave
mov
add
jecxz
xchg
ljmp
add
aas
icebp
pop
into
push
or
cld
addb
or
pop
push
adc
add
je
add
xor
lret
or
push
popf
sti
loopne
sbb
jg
loop
mov
cmc
sbb
call
arpl
dec
aam
jae
sbb
lret
add
pop
push
mov
sbb
loopne
xchg
mov
fisubs
je
mov
push
sahf
push
jmp
fidivs
sub
cli
stos
pop
sub
mov
pop
xchg
arpl
jno
push
pop
lea
xor
mov
jmp
icebp
das
out
and
ret
cmc
test
or
cmp
loope
or
out
sbb
cmp
imul
sahf
out
mov
add
jnp
std
pop
ds
pop
xor
cmpsb
addps
insb
nop
iret
sti
mov
sbb
out
fnstcw
in
sbb
pusha
add
xchg
mov
xchg
int
pop
arpl
cmpsb
movsl
jmp
cltd
cli
dec
sub
gs
stc
int
sub
add
dec
dec
mov
cmp
and
ret
push
and
scas
lcall
xchg
sub
add
iret
scas
mov
mov
in
jge
sti
jle
scas
fistpll
addr16
mov
jbe
loopne
pop
loope
mov
sbb
ljmp
mov
and
push
gs
jne
or
dec
add
adc
outsb
daa
jne
xor
push
shlb
xlat
cli
lea
loopne
rcrl
pop
pusha
add
add
ret
rorb
xchg
xchg
loope
cmp
lea
lods
addb
jl
aam
jb
dec
dec
mull
cmp
dec
xor
adc
and
lahf
loop
es
mov
and
lret
add
dec
push
outsb
xor
xor
lds
add
arpl
addr16
sub
mov
jl
mov
cmp
mov
xor
in
push
mov
inc
cmp
test
jb
dec
add
iret
mov
mov
add
cltd
repnz
or
aaa
fs
inc
cmp
add
dec
pop
mov
hlt
shlb
outsb
rcll
jnp
mov
add
sarl
xchg
add
or
jl
xor
icebp
mov
sub
bound
adc
and
sub
daa
pop
divb
add
pop
stos
in
addb
addb
clc
setno
sbb
xor
popf
cmc
inc
add
sub
xchg
inc
add
dec
ret
push
aas
pop
int
js
mov
adc
xor
rolb
fidivl
fwait
jmp
lock
das
fidivrl
mov
and
shl
dec
in
xlat
lock
aam
pop
rolb
xor
xlat
imul
push
jge
mov
das
and
clc
fisubs
adcl
add
cwtl
lock
pop
mov
insb
mov
outsl
sbb
add
add
gs
mov
jnp
int
cmpsl
sbb
idiv
popa
jbe
mov
jg
shl
sub
add
xchg
arpl
jge
ret
sub
adcl
ljmp
add
add
xor
int3
jle
xchg
jl
add
cmp
mov
insl
mov
add
insl
sub
std
in
ja
pop
dec
arpl
arpl
mov
testb
aas
loopne
or
cmp
outsb
and
ljmp
cwtl
in
add
push
xlat
push
add
adc
sbb
bound
adc
push
out
daa
popf
ds
int3
lods
shll
ficoml
push
add
sbb
push
ror
and
push
mov
push
inc
add
cmp
sbb
inc
add
and
ljmp
addb
fists
sub
nop
scas
fsubl
add
add
daa
push
int3
shlb
insb
dec
pusha
add
ficoms
shrb
sbb
icebp
mov
jmp
leave
fidivl
inc
lds
xor
push
sbb
andl
pushf
sbb
add
aam
sub
rolb
push
pop
sub
mov
loopne
lret
xor
lds
xor
aad
shrl
add
ret
jae
mov
pop
mov
add
jge
movsl
push
add
mov
addb
lcall
int
loope
xorl
add
loopne
sub
ds
stos
mov
cli
cmp
scas
mov
cmpsl
aaa
rclb
pop
out
ds
imul
into
jge
dec
stos
je
add
add
sbb
mov
inc
add
mov
mov
cmp
lahf
ss
jne
ja
mov
ja
and
scas
sub
xchg
pop
mov
push
add
fisttpl
pop
movsl
lcall
aas
out
cmp
pop
adc
mov
adc
std
scas
pop
int3
ret
add
outsl
dec
shrl
xchg
neg
pop
sub
push
push
sub
test
cmc
cmpsb
dec
dec
add
jge
inc
pop
incl
add
int
lock
fsincos
loope
mov
lcall
xchg
jg,pt
and
cwtl
sbb
scas
or
cs
call
lret
aaa
outsb
test
das
add
xchg
mov
sbb
mov
ljmp
xor
xchg
shl
pop
xor
mov
pop
shlb
sahf
inc
popa
decl
add
sti
neg
push
sbb
jmp
xchg
push
and
sub
xchg
jns
loope
dec
ficoml
inc
push
mov
sub
lds
add
popa
ret
sub
lret
sbb
in
pop
sub
ret
cmp
pushf
adc
cmpsl
mov
add
mov
cld
in
test
repnz
out
or
mov
dec
sbb
fnsave
test
xchg
and
mul
in
aaa
cmp
out
bound
sbb
outsl
ret
sub
xor
xor
pop
add
add
push
push
xchg
insl
jno
pop
popf
mov
les
push
sbb
xor
cmp
insl
insl
cmc
xchg
lock
dec
push
and
out
xor
mov
repz
pop
add
in
mov
sahf
cwtl
addb
cwtl
and
add
fiaddl
imul
dec
or
ljmp
sub
mov
mov
out
loopne
dec
lea
addb
mov
sub
in
xlat
cwtl
cmc
arpl
repz
xor
je
cmp
lods
jo
repnz
add
add
xlat
in
add
sbb
xor
imulb
add
add
leave
iret
out
mov
pop
loopne
cmp
nop
lret
jle
jecxz
xchg
cmp
insl
jle
mov
gs
out
loope
xchg
sbb
mov
outsb
push
popf
or
into
mov
out
add
add
add
sbb
ljmp
icebp
adc
je
rolb
add
sub
mov
or
add
add
hlt
sahf
xchg
test
push
mov
enter
mov
test
rorb
stc
fstpl
jle
lods
insl
xchg
das
cltd
push
mov
movsb
dec
rcl
pop
rol
scas
xchg
pusha
add
add
cld
adc
add
inc
roll
sbb
jo
cwtl
add
lea
dec
rolb
inc
or
and
jns
jbe
dec
or
dec
bound
popf
ret
dec
push
push
mov
fsubrs
jne
mov
test
mov
push
imul
add
add
xchg
ret
jb
clc
testb
add
xor
inc
add
in
sub
add
sbb
out
popf
inc
arpl
push
test
xchg
cmp
aam
xchg
loopw
addb
or
test
int
int3
inc
add
cmpsl
or
add
mov
add
or
add
rolb
fstps
or
add
cmp
inc
add
call
mov
repnz
xchg
inc
add
into
lret
and
fwait
cmp
les
mov
add
jl
aaa
dec
repz
imul
xchg
pop
push
mov
and
jne
jge
imul
data16
inc
add
fmul
jae
outsb
mov
rolb
test
mov
imul
add
push
sahf
pop
sub
outsl
into
adc
add
dec
movsl
cmp
xor
push
sub
fwait
jno
fbstp
in
fs
aaa
stos
nop
mov
mov
decl
cmpsl
aaa
add
cmpsl
lock
add
or
jmp
test
lcall
mov
stc
je
jae
ss
test
push
jp
out
xlat
or
js
cmp
cmc
sub
rolb
movsl
ret
mov
mov
in
mov
sub
jo
insb
lock
or
pop
mov
mov
bound
or
adc
jge,pt
lock
cli
adc
jle
dec
pusha
add
lahf
decb
addr16
dec
out
jae
sub
rolb
add
sub
rcll
into
or
add
ds
mov
hlt
xchg
and
sub
xchg
mov
mov
into
std
les
movl
mov
inc
add
add
add
xor
les
out
popf
sarb
push
sub
push
cmp
mov
test
hlt
pop
stos
imul
sub
push
or
mov
repnz
rcll
add
push
and
in
jb
add
popa
jmp
jl
inc
push
add
lahf
test
inc
movsb
addb
cmp
aam
sub
cmp
mov
inc
add
xor
and
add
push
mov
add
and
mov
jp
repnz
test
test
arpl
inc
add
andl
add
or
xchg
or
jmp
sub
sub
xor
xlat
fildl
int3
andl
jae
out
cltd
mov
sbb
fs
dec
xor
add
sbb
pop
lds
cmp
add
rolb
shlb
sub
pop
xchg
hlt
inc
mov
cmp
and
add
push
mov
add
imulb
mov
jmp
add
call
pop
arpl
in
movsb
mov
cvtps2pd
rcrb
xchg
subl
repnz
movb
addb
notl
into
ja
mov
dec
mov
xchg
inc
add
and
mov
out
inc
add
movsb
ljmp
stos
pop
call
dec
jne
xor
push
sbb
shlb
mov
out
xchg
out
mov
cmp
lret
xchg
adc
mov
inc
adc
movsb
push
dec
clc
std
mov
sbb
inc
add
add
add
mov
stos
xor
insb
bound
mov
enter
cvtpi2ps
scas
leave
sub
xchg
out
xor
inc
mov
pop
adc
mov
daa
mov
icebp
push
scas
aam
and
cwtl
ljmp
idivb
lods
dec
or
popf
ret
push
add
aam
jmp
mov
add
loope
cli
sub
and
in
adcl
sub
pop
mov
les
lret
pop
ret
arpl
jecxz
stos
leave
jnp
xor
cltd
gs
in
and
gs
add
testl
push
mov
inc
in
shll
and
push
outsb
bt
cmpsb
out
add
cs
idivl
cli
fisubl
xchg
dec
sub
pop
or
mov
imulb
cs
push
cmpsl
fiadds
into
sbb
dec
stc
xchg
mov
scas
repnz
or
sbb
inc
add
sbb
adc
or
xchg
lahf
add
adc
aas
std
pop
inc
stos
dec
pop
push
cmp
pop
inc
xor
cmp
mul
jnp
xchg
inc
cmp
pop
cmpsl
out
sbb
adc
gs
gs
movsb
lods
rolb
jns
addb
sub
and
lods
xchg
add
popa
mov
pop
dec
subl
cwtl
and
add
fists
loope
in
pop
sub
xor
test
sub
pop
movb
enter
cmp
push
jle
lods
xlat
int3
dec
adc
add
data16
imul
adc
mov
rcrl
or
cs
mov
cmp
shll
negb
xchg
sub
outsb
dec
lds
push
jne
push
add
das
push
mov
add
sub
outsb
or
cld
iret
sbb
mov
push
mov
mulb
movb
icebp
iret
popa
addb
out
cmp
daa
int
add
jns
mov
and
testb
mov
sub
or
arpl
scas
adc
mov
or
inc
out
mov
cmp
add
cs
clc
add
lods
xchg
lea
pop
cmp
sub
repz
iret
fisttpl
sahf
adc
sbbl
or
les
lret
push
pop
ret
cmp
lods
mov
cmpsl
xchg
pop
xor
add
lods
cmp
ja
leave
imul
sub
aas
loopne
or
out
adc
add
adc
xlat
test
iret
adc
test
sbb
rolb
mov
fidivrs
pusha
add
les
loopne
adc
in
inc
xor
push
mov
movb
sub
sahf
cmc
pop
push
pop
das
out
addb
add
es
add
add
das
inc
add
mov
cmp
and
cmpsl
call
and
pop
fistpl
scas
mov
sub
lock
mov
jno
and
push
add
out
or
pop
mov
add
add
fiadds
add
push
cmp
mov
mov
mov
hlt
arpl
sub
add
add
js
addb
imul
mov
loope
movsl
pop
push
mov
sub
pop
repnz
test
xchg
out
out
add
or
inc
add
and
sbb
dec
push
mov
add
add
sbb
add
cmp
xchg
jo
adc
stos
cmc
ficomps
test
fmull
inc
cmp
cmpsl
push
jns
push
pop
in
jge
popf
shrb
mov
notb
dec
cld
mov
jle
out
cmp
sub
add
jg
xchg
rorb
add
add
rol
nop
ds
test
fs
iret
mov
test
ret
mov
xchg
hlt
fiaddl
and
out
mov
fwait
jle
adc
and
add
and
out
sub
jnp
test
mov
or
in
add
xchg
test
shll
mov
xor
addb
ja
iret
bound
cmp
mov
and
test
add
mov
rorb
push
adc
xor
mov
mov
add
leave
gs
fstpl
daa
mov
fcoms
mov
cld
xor
mov
aaa
fcomps
inc
add
cmp
sbb
fcmovbe
call
add
scas
outsb
xor
xchg
or
xchg
jb
lret
adc
int3
push
rorl
movsb
mov
sbb
pop
xor
scas
cmp
repz
jno
fdivrl
jmp
cmpsl
mov
pop
cmp
mov
xlat
jb
stc
data16
inc
add
movb
add
add
xchg
xor
int
rolb
lret
fsts
fwait
mov
mov
das
adcl
enter
testl
andnps
add
ret
ret
add
push
lock
fwait
outsb
push
sbb
mov
add
mov
test
push
daa
adc
jp
js
inc
push
jp
test
pop
jb
mov
enter
or
sbb
popa
stos
sbb
xchg
adc
and
cmc
stc
xchg
filds
scas
pop
and
jle
daa
cmpsl
pusha
add
mov
dec
rolb
gs
lret
cld
sbb
addl
push
arpl
cwtl
in
addb
test
mov
std
and
pop
movsb
lret
push
addr16
sub
stc
cmp
sub
mov
xchg
and
sub
test
adc
add
addb
add
jae
imul
or
mov
mov
add
fsubs
add
addb
add
insl
xchg
push
dec
mov
mov
add
les
mov
lods
insl
fisttpll
mov
dec
jmp
into
xor
movsl
mov
or
popf
jno
clc
sub
jnp,pn
or
cmpsl
and
pop
ret
xchg
pop
mov
add
negl
lods
sti
test
add
stc
dec
mov
add
lahf
dec
pop
mov
cltd
das
cmc
mov
push
add
fnsave
cmp
xchg
add
ficoml
int3
push
and
add
dec
mov
ds
inc
add
xchg
repz
jle
push
mov
dec
xor
ret
add
pop
lahf
jl
fs
fisttpll
add
mov
mov
mov
int3
lret
mov
outsl
dec
shr
aas
or
and
loopne
jg
xchg
mov
adc
mov
fnstenv
jno
out
int
pop
jns
pop
outsl
mov
sub
and
mov
and
adc
fcmovnu
jae
scas
or
jo
xor
add
add
inc
dec
sbb
sub
out
stc
cwtl
jecxz
mov
push
stos
mov
jecxz
loopne
in
mov
daa
jns
ljmp
stos
or
push
add
cld
fprem
out
xor
bound
jmp
and
push
xchg
les
rcll
cltd
jp
pop
pop
lods
pop
scas
sbb
call
repnz
jns
js
negb
or
fwait
cmc
push
rcr
rorl
mov
fwait
pop
push
push
pushl
mov
pop
inc
cmp
add
pop
push
fdivrs
add
inc
add
loope
inc
add
lods
jbe
cwtl
and
call
jmp
popf
cmpsl
xchg
push
icebp
jnp
lea
lcall
loop
out
loop
add
inc
add
or
call
fidivs
addb
out
pop
addr16
push
outsb
adc
fldl
in
das
cli
in
xlat
mov
ficomps
or
into
stos
sub
pushf
ja
outsb
and
test
inc
add
ss
int3
mov
add
je
shrb
and
shrl
pop
dec
pusha
add
outsb
mov
mov
and
cmp
fs
add
mov
add
lahf
aaa
out
insb
dec
cmp
popf
insb
rorl
add
add
mov
imul
add
fld
pop
mov
jb
adc
out
pop
call
add
shlb
add
inc
add
xlat
clc
sub
inc
add
add
pop
xchg
std
mov
lock
fdivrp
xchg
imul
and
repnz
cmp
sub
in
ss
cmp
add
add
scas
push
xor
bnd
xchg
int
add
rorb
or
cmp
cmp
dec
jg
inc
dec
add
popa
push
loope
fidivrl
mov
xchg
movb
mov
popa
fmul
push
stos
out
arpl
adc
mov
out
dec
jo
adc
add
aam
push
out
hlt
add
sub
inc
add
in
sub
fnstenv
push
mov
add
jne
xor
lods
out
fisttps
mov
cltd
mov
dec
loope
addb
adc
xchg
mov
dec
data16
mov
inc
add
xlat
out
mov
sahf
imul
movl
or
imul
ffree
add
movsl
cmp
xchg
mov
sbb
pop
jo
in
or
add
mov
aas
rcrl
andl
fcomps
int
xchg
xchg
out
xor
adc
dec
adc
movlhps
dec
inc
pop
sbb
add
mov
test
popa
sbb
inc
test
xlat
sub
testl
inc
add
movb
pop
addb
fidivrl
cmp
pop
cmpl
mov
addr16
inc
xchg
push
cmp
or
jecxz
adc
mov
xchg
jmp
into
pop
pop
adc
xor
icebp
and
add
xchg
pusha
add
data16
ds
lock
add
xchg
lret
loope
push
xor
fisubl
mov
push
mov
aad
jl
sub
xor
bound
sti
or
and
cmpsb
push
fsubrl
add
mov
pop
test
adc
or
test
jns
xor
add
or
xor
xor
ds
ja
xchg
popf
pop
shlb
enter
cmp
insb
xchg
sub
add
xchg
xor
dec
roll
fimuls
addl
jmp
add
pop
nop
lret
mov
dec
lods
in
int
sbb
scas
jae
and
sub
ljmp
dec
lcall
add
aaa
or
imul
or
ljmp
lahf
insl
mov
push
cmp
pop
test
in
jae
pop
lea
cmp
je
add
xor
add
xor
lret
nop
cltd
sub
insb
loop
pop
adc
push
test
add
mov
lds
lods
mov
pop
add
cmp
ret
stos
and
fwait
mov
add
xchg
lea
cmpsl
and
notb
mov
xchg
sarb
add
push
mov
cld
mov
cmp
add
add
dec
repnz
mov
push
in
sbb
std
das
jo
dec
pop
jge
dec
loopne
insl
pop
dec
dec
out
jbe
enter
jno
xchg
sbb
xlat
fbld
add
sub
dec
sarl
cmpsl
bound
test
xor
add
pop
bound
and
cmp
sbb
insb
femms
xor
sub
or
cmp
mov
adc
add
mov
and
out
jo
inc
add
aad
mov
pop
je
loope
and
stc
pop
sbb
xchg
jae
jle
in
jmp
shlb
cs
and
add
sahf
inc
add
xchg
mov
mov
aaa
fstpt
sbbl
movsl
add
sbb
sub
mov
gs
in
ret
rcrb
add
mov
ja
add
mov
rorb
in
mov
sub
adc
out
mov
mov
repnz
add
mov
lock
ret
adc
pop
movsb
cmpsl
and
mov
add
sbb
test
add
adc
jl
inc
lcall
jp
aam
orl
insl
xchg
sub
movsl
es
ds
mov
sbb
mov
sbb
xor
cmp
mov
jl
add
fwait
ret
inc
repz
push
and
out
mulb
push
sarl
push
imul
inc
add
sbb
arpl
jnp
stos
insl
fisubrl
out
pushl
lods
jl
or
add
mov
add
mov
mov
xor
arpl
push
mov
jecxz
add
mov
and
push
fistpll
and
add
mov
and
out
mov
or
ss
add
mov
push
add
push
add
add
test
dec
out
pop
push
add
lods
add
add
mov
or
jge
inc
or
popf
inc
add
loop
nop
fsubrl
jp
push
cwtl
jne
cmp
jecxz
shlw
out
dec
xor
iret
test
dec
cld
mov
jecxz
test
fisubl
xor
hlt
or
leave
int3
and
xlat
sub
add
push
inc
fistps
xor
push
add
xchg
movl
leave
jne
xor
sub
or
pop
cld
inc
add
and
aad
mov
enter
xor
mov
stos
lcall
jb
daa
aaa
in
fisubl
mov
cmp
sarb
mov
lret
add
gs
jb
add
in
mov
pop
cmp
add
sar
push
xchg
imul
imul
inc
add
lcall
out
in
add
shrb
add
fimull
jecxz
mov
mov
dec
out
movsl
and
or
add
xchg
adc
add
mov
and
mov
fsub
mov
fisttps
dec
cwtl
xor
push
scas
pop
mov
and
xchg
mov
in
sar
and
shll
jg
testb
repz
rorb
add
cmpsl
sub
ljmp
movsb
rolb
adc
adc
pusha
add
jae,pt
cmp
ret
xor
dec
inc
push
shlb
imul
push
cmp
pushf
hlt
mov
aad
dec
adc
jecxz
out
cmp
mov
or
xor
fs
in
adc
imul
xchg
push
repz
or
enter
arpl
icebp
mov
lds
call
fsubr
jl
rolb
loopne
repz
sbb
add
and
jbe
or
inc
add
jno
cmp
outsl
xchg
addb
flds
fists
jmp
js
call
out
repnz
lea
lret
outsl
mov
adc
push
dec
push
add
adc
lret
inc
mov
daa
ja
xor
lea
mov
test
pop
cmp
dec
pushf
mov
sbb
rol
add
js
sbb
inc
cmp
add
pop
int
icebp
pop
push
mov
xchg
push
dec
in
mov
mov
mov
mov
and
jmp
mov
ds
outsl
add
pushf
jne
inc
add
stos
imul
add
daa
rolb
aaa
mov
or
sbb
pop
jp
xchg
mov
add
inc
pop
fidivs
imul
jb
and
test
hlt
mov
movsl
les
push
ret
ret
mov
inc
and
and
xor
iret
and
add
add
and
mov
cmc
pop
jb
addb
mov
cli
push
add
fnsave
sbb
add
mov
into
dec
jmp
push
dec
repz
inc
enter
inc
pop
cs
imul
xchg
sub
jbe
or
mov
pop
cmp
dec
add
xor
and
xor
mov
xor
loopne
xlat
push
add
dec
inc
add
js
sub
outsl
leave
rcrl
js
jp
pop
cmpl
mov
lock
les
outsl
mov
mov
int3
pop
mov
push
cwtl
popa
lahf
lcall
mov
adc
push
jo
add
push
pop
in
rolb
cmp
add
jae
movb
dec
adc
movsl
out
es
add
faddp
add
sbb
outsl
movsl
lcall
out
test
add
inc
sub
push
add
add
push
dec
int3
insb
in
add
inc
add
sahf
or
orl
xchg
rolb
add
dec
ja
scas
sub
push
adc
add
popa
mov
inc
jae
jmp
loope
pop
sub
or
rcl
int
pop
adc
sbb
sub
addb
inc
int
xor
mov
jle
xchg
dec
adc
fwait
cmp
outsl
sbb
loop
push
les
test
addr16
adc
outsl
inc
mov
rorb
outsb
jbe
into
sub
nop
fdivrs
pop
cmc
bound
scas
ss
fildll
and
add
std
jno
xchg
adc
mov
and
rcll
mov
mov
int3
and
sub
outsl
dec
leave
icebp
jecxz
push
add
push
sbb
inc
ds
fwait
mov
mov
in
lds
scas
cmc
add
daa
inc
cmp
fsubr
and
adc
dec
repnz
cltd
repnz
fmuls
int3
shl
jnp
lock
mov
lahf
jno
add
pop
mov
push
add
mov
int3
dec
fstl
mov
fldenv
add
mov
int3
mov
and
mov
inc
cmp
xor
ja
mov
sbb
add
jno
roll
push
jg
stos
xchg
mov
mov
loop
dec
dec
xchg
pop
push
sbb
xor
add
cmp
dec
dec
pop
mov
add
les
jg
jbe
adc
stc
jbe
inc
or
nop
add
cwtl
adc
gs
ss
pop
sahf
sub
jo
rolb
xlat
mov
cli
or
pusha
add
adc
cmp
into
dec
scas
adc
mov
cmp
jnp
jne
mov
ljmp
cs
test
cwtl
gs
rcll
xor
sub
pop
hlt
fdivr
mov
faddl
cld
sbb
addb
mull
add
movsl
jmp
or
stos
hlt
pop
jns
inc
jno
and
add
js
outsb
push
add
xchg
imul
push
jbe,pn
mov
cmp
add
add
adc
push
icebp
cmpsb
push
add
mov
lods
arpl
add
sbb
addb
movsb
xor
out
jbe
push
cltd
xchg
mov
adc
and
jbe
and
pop
mov
rol
dec
ds
fsubs
bswap
cwtl
jle
adc
cmc
repnz
cwtl
es
pop
jnp
adc
loope
aas
dec
push
mov
mov
addr16
add
xor
inc
add
clc
mov
xchg
je
pop
and
out
inc
add
or
add
lds
mov
aad
fdivrp
add
jle
stos
ss
insb
xchg
push
roll
rcrl
mov
cwtl
in
std
aas
les
divb
add
push
mov
or
xor
pop
popf
popa
mov
mov
inc
add
cmpsb
add
mov
mov
adc
stc
aam
jge
bound
aam
or
fs
call
movsl
iret
enter
cs
jecxz
pop
movsl
mov
jo
cli
adc
jmp
test
js
pop
xchg
leave
out
test
fstps
cmp
cmp
cmp
xchg
xchg
in
int3
mov
sbb
icebp
pop
or
add
xor
in
ret
std
sub
add
dec
fisubrl
mov
xchg
aam
mov
jnp
sbb
loopne
movsl
outsb
xchg
add
fwait
and
add
mov
and
shrl
or
cmp
les
add
lret
hlt
roll
pop
mov
add
jp
jl
push
pop
adc
pop
rcrb
out
pavgw
mov
jae
ja
add
into
pop
pop
xchg
and
xor
lcall
xor
clc
push
dec
nop
push
xchg
lcall
mov
add
cwtl
mov
inc
testb
mov
jp
pop
or
inc
and
dec
negl
inc
add
std
leave
sbb
js
add
daa
add
pop
dec
repz
mov
add
bound
or
not
lods
test
push
add
lods
dec
cmp
sub
fldt
fnstenv
pop
xchg
bound
fsub
aam
mov
adc
fisttps
xchg
and
mov
sahf
inc
or
add
sub
in
push
mov
incb
jns
xchg
pusha
add
lds
mov
call
shrl
aas
xchg
xor
cmp
out
insb
test
enter
bound
xchg
rolb
inc
mov
dec
movsb
dec
mov
fs
fwait
push
adc
jne
inc
add
adc
xchg
adc
lods
push
sub
stc
pop
addb
inc
add
push
outsb
cmp
test
movl
add
rolb
inc
xchg
mov
jmp
test
adc
xor
mov
test
add
imul
inc
add
sbb
xchg
inc
cmp
sti
in
xchg
sbb
or
add
add
inc
add
imul
cmp
dec
ds
add
add
stos
movsb
mov
sbb
add
addb
sub
jo
insb
lcall
addr16
jo
ds
mov
arpl
add
pop
fs
add
sbb
das
jecxz
inc
add
addr16
dec
xchg
inc
add
mov
lret
add
fstp
push
or
inc
add
adc
push
jae
mov
mov
mov
add
mov
ret
pop
in
inc
add
inc
loop
in
lds
dec
stc
fbstp
lds
push
imul
add
mov
cmpsb
cld
xor
out
pusha
add
jb
sbb
popf
pop
fnsave
jmp
xrelease
bound
xchg
pop
in
ret
int
adc
pop
mov
sbb
and
and
xchg
add
addb
sbb
inc
push
cmp
pop
dec
pop
inc
inc
and
jne
and
sbb
repnz
or
fmuls
mov
repz
cltd
sub
jecxz
test
movups
out
shll
cmpl
add
loop
outsl
xchg
fisubs
insl
ds
in
jp
jp
dec
icebp
and
lea
imull
scas
and
das
add
repnz
iret
or
les
test
push
pop
sti
or
mov
cmpsb
push
js
push
mov
mov
test
jns
out
fldl
xor
push
and
and
add
loop
inc
add
add
or
int
mov
jecxz
add
push
inc
add
add
pop
or
ljmp
add
fucomip
xchg
decl
mov
xchg
jbe
mov
push
stc
jbe
xchg
cmp
imul
pop
shrl
call
xor
lods
mov
pop
adc
add
add
enter
fldt
popa
or
inc
add
xor
mov
movb
and
lods
test
lret
int
jno
add
outsb
mov
pusha
add
jns
mov
f2xm1
aam
sarl
xor
rcl
mov
fimull
add
mov
xchg
sbb
fiadds
adc
mov
or
cmp
pop
bswap
aad
add
mov
add
test
movsl
push
test
xor
and
outsb
imul
mov
ja
aad
comiss
mov
js
addb
cmp
add
pop
aam
mov
cltd
pushf
sti
and
mov
dec
ret
add
pop
sbb
jb
sti
imul
jle
int
xchg
ss
mov
push
xlat
lds
outsb
push
sahf
test
sbb
incb
add
outsb
push
and
outsb
cmp
das
aad
dec
mov
adcl
dec
push
sahf
out
sbb
rolb
fcomps
adc
mov
lea
rorb
sub
add
mov
xor
pusha
add
add
sbb
ficomps
mov
movb
add
xor
and
lcall
lods
push
test
and
adc
add
mov
inc
mov
fwait
scas
cmc
or
les
inc
add
mov
adc
dec
loopne
data16
sahf
repz
push
add
ja
dec
addb
push
xor
inc
add
inc
les
sub
mov
adc
imul
imul
test
rolb
call
jnp
cmp
add
xor
pop
clc
lods
cmp
orl
xchg
fimuls
push
add
scas
xor
xchg
mov
pop
clc
je
add
inc
sbb
call
add
add
imul
outsl
fidivl
mov
mov
xor
aas
movb
mov
cli
add
xchg
xor
and
inc
add
loopne
mov
shlb
aam
sbb
inc
dec
jl
add
adc
int
frstpm(287
inc
or
xor
shl
mov
pop
loop
mov
test
loop
lret
aaa
insl
lahf
mov
jp
cmc
xchg
lahf
cmpsb
pop
inc
add
mov
pop
inc
lahf
clc
out
jnp
movsb
lret
movb
mov
iret
aad
push
imul
iretw
dec
test
lcall
adc
add
add
rolb
mov
sbb
add
int3
jl
mov
das
jecxz
push
cld
jb
cmp
jmp
addb
xchg
out
push
adc
icebp
adc
test
jns
or
adcl
jno
mov
pop
out
dec
sbb
add
je
pop
mov
dec
loope
shll
xchg
xchg
push
sub
aas
in
adc
add
addb
fnstcw
dec
lret
sbb
std
pop
dec
sbb
push
and
xlat
js
std
repnz
scas
cmp
cmp
xor
imul
fdivrs
cwtl
arpl
pusha
add
shrl
lret
lea
cmp
bound
lcall
js
test
inc
push
ds
add
xchg
sbb
in
mov
add
adc
mov
mov
ficomps
ljmp
sbb
jp
xorl
cltd
mov
xchg
js
inc
ret
xchg
or
pusha
add
jns
in
cltd
lock
in
addr16
jge
add
add
xor
add
orl
and
adcl
daa
out
push
mov
add
sub
imul
add
sub
les
stc
pop
xchg
bound
jl
clc
ds
add
add
xor
dec
and
lea
loopne
idivb
dec
sbb
inc
je
dec
movb
dec
test
lea
dec
inc
add
out
fs
shlb
fs
aaa
mov
inc
add
scas
jle
push
sub
mov
xchg
mov
addb
sbb
cld
aam
cmpsl
test
add
cli
mov
inc
jle
add
hlt
ja
mov
cmp
push
inc
jg
and
std
pop
xor
sti
dec
movsb
stos
or
jecxz
insl
loope
cmc
pop
in
loop
push
cmp
sub
adc
js
lds
cmp
mov
or
aaa
jae
imul
repnz
addb
push
dec
inc
adc
jne
mov
inc
add
call
mov
in
outsl
iret
jae
cmp
inc
cli
push
add
add
sbb
sbb
adc
outsl
test
or
leave
into
stos
jae
jecxz
dec
icebp
repnz
mov
mov
test
sbb
jecxz
sub
repnz
push
add
jmp
ret
jbe
adc
inc
add
out
flds
add
cwtl
mov
add
jbe
xor
rcll
lds
add
pop
and
fmull
pop
mov
add
jns
adc
lds
adc
mov
cmp
jnp
arpl
and
push
std
mov
dec
popa
adc
sub
add
jb
in
jns
out
pop
fs
or
stos
ror
cmp
mov
mov
push
xchg
and
movsb
lock
dec
enter
add
mov
add
sbb
push
stos
lahf
repz
addb
xor
aas
pop
adc
xor
addb
ret
xlat
sub
sub
sbb
clc
fdivrs
jecxz
sbb
add
dec
js
pop
pop
dec
jl
xor
aas
inc
mov
nop
imul
fidivs
cmovl
push
ret
test
insl
orl
fistpll
sbb
imul
in
call
roll
addr16
shl
clc
addb
sub
jle
iret
sub
test
sub
sub
add
add
scas
push
and
out
lret
fdivs
ss
dec
test
or
sub
es
popf
test
in
sub
movb
sbb
inc
add
cmp
mov
or
sbb
sbb
add
add
push
push
ljmp
sub
jne
add
loop
testl
outsb
popa
jle
mov
jle
add
lods
aam
into
pusha
add
movb
insl
repnz
adc
adc
mov
jecxz
insb
mov
fstpl
insb
push
enter
jmp
jp
dec
xchg
and
xchg
fiaddl
data16
or
adc
xchg
add
inc
add
add
or
cltd
jmp
inc
add
sbb
and
add
jle
sub
sub
adc
xor
xchg
pop
ret
push
and
in
in
shrl
test
mov
sub
jnp
push
aas
push
dec
push
cltd
cmpsb
fs
add
fidivrs
int
pushf
jle
inc
sbb
dec
inc
add
in
dec
hlt
pop
push
jg
add
mov
mov
dec
dec
nop
in
push
push
insb
je
pop
and
data16
add
push
push
add
lret
jmp
adc
cmp
jns
add
inc
add
add
call
mov
pop
js
mov
pop
iret
inc
add
add
add
cli
popa
jb
cmpsb
sub
add
outsb
out
mov
dec
adc
or
pop
idivb
add
add
aas
push
or
xor
std
enter
testl
xor
and
xor
add
adc
neg
mov
aas
fiaddl
mov
pusha
add
daa
cmp
push
cs
lret
test
cmp
sub
fbstp
add
add
popf
cltd
das
inc
add
cmp
fcmovnb
add
add
clc
sbb
call
inc
add
xchg
mov
sbb
mov
add
pusha
add
add
fwait
cmpl
mov
cmp
sbb
jbe
or
mov
xor
mov
add
jle
add
mov
in
jns
out
adc
mov
test
jnp
mov
sbb
incb
in
ljmp
shll
jmp
add
clc
fs
cltd
and
lods
mov
push
jne
pushf
push
insl
xchg
pop
and
rcrl
xchg
push
add
add
mov
jmp
jg
mov
dec
adc
add
dec
mov
add
cmpsb
loope
and
pop
dec
roll
dec
subl
gs
jecxz
std
cld
mov
sbb
dec
arpl
add
add
call
pop
pop
clc
clc
imul
or
adc
jne
mov
add
ss
je
push
and
dec
pop
sbb
mov
aad
outsb
addb
lcall
push
lds
dec
inc
adc
iret
pop
mov
lahf
enter
mov
psubsb
jmp
movsl
aad
movsb
jp
ret
add
xor
jp
sbb
add
test
inc
mov
mov
in
mov
and
cmp
repz
insb
out
shll
xor
xlat
push
cltd
rolb
sbb
adc
daa
dec
cmp
jp
jle
insb
outsl
fld
add
dec
xchg
xor
fcoml
mov
cmp
test
aad
xlat
stos
punpckhwd
sbb
jne
fxch
mov
pop
pop
jbe
mov
and
add
or
mov
mov
xchg
fs
add
hlt
clc
les
sbb
push
adc
lret
dec
loope
xlat
pop
enter
xchg
adc
aam
adc
xchg
or
dec
cmpsl
out
mov
jae
push
cmp
nop
xor
add
lods
nop
sbb
popa
outsl
mov
leave
pop
ret
push
shrl
mov
imul
imul
xor
sub
add
in
movb
outsl
sub
ficomps
imul
fsub
aas
ja
call
xor
dec
push
in
pop
inc
pop
loopne
stc
mov
adc
inc
adc
incb
add
pop
loopne
pop
adc
push
out
cwtl
mov
adc
add
add
dec
test
clc
or
jb
mov
inc
add
jmp
mov
movb
hlt
aas
insb
out
add
mov
add
push
insl
ljmp
xchg
dec
les
test
add
addr16
cmp
cltd
lcall
scas
hlt
or
mov
lcall
adc
scas
xchg
inc
add
dec
testb
jg
aaa
ret
pop
test
js
test
add
or
lcall
pop
lods
push
pop
cmp
out
adc
cli
scas
int3
mov
ret
inc
add
mov
inc
add
js
push
push
dec
add
jo
cmp
mov
add
ret
mov
cmc
loopne
inc
jno
adc
xchg
sahf
inc
add
push
mov
outsb
std
sub
push
call
repz
sti
aam
jg
sub
add
ljmp
test
jl
lods
jbe
outsl
or
das
fbld
pop
icebp
pop
stos
jmp
inc
add
xchg
mov
stos
pop
xchg
enter
test
shlb
sti
sub
fs
fwait
popa
mov
jg
mov
es
nop
or
call
cmpsb
xor
add
jl
and
fiaddl
add
mov
sti
and
popf
outsb
stos
int3
bound
cltd
repz
pop
nop
daa
xor
rcrl
add
std
sbb
scas
jne
pop
sbb
out
movb
pop
movb
inc
cmpsb
aaa
or
add
call
add
adc
sub
mov
lcall
ret
bswap
jmp
negb
xchg
aaa
sub
dec
data16
adc
mov
out
add
ds
lcall
repz
xchg
cwtl
dec
lds
fsubl
lds
lods
mov
push
add
xor
cmc
pushf
jg
mov
jle
xchg
lods
or
mov
push
adc
mov
jl
into
fwait
xchg
test
pusha
add
addb
mov
addb
test
stc
stc
je
push
push
test
test
mov
add
fwait
mov
cmp
data16
add
outsb
push
fstps
pop
movsl
and
psubsb
enter
mov
mov
add
fdivrl
jo
add
pop
std
push
out
mov
add
in
push
gs
jl
or
dec
cmpsb
dec
mov
pop
mov
in
xchg
out
adc
add
in
sbb
inc
mov
arpl
fadds
and
pop
xchg
cmpsl
mov
add
in
mov
insb
std
test
cmpsb
inc
insb
xchg
xchg
adc
jge
or
push
pop
fldenv
pop
lahf
cmp
and
rorb
xor
ss
bound
or
notl
test
push
shl
jb
lret
int
neg
das
andl
scas
out
add
sbb
pop
sbb
cs
fimull
loope
push
int
mov
mov
addb
mov
fimuls
push
add
xchg
in
pop
mov
scas
into
scas
mov
pop
test
bound
in
pop
cli
ds
add
fldl2t
mov
sbbl
push
push
push
clc
sub
push
jge
and
xlat
inc
idivb
clc
xchg
jp
push
adc
lcall
dec
inc
mov
mov
rorl
add
adc
push
jge
rorl
cmpsl
mov
cld
stos
add
jne
call
int
fiadds
add
add
repz
sub
xor
fidivrs
je
lret
or
add
xor
int
fldl2e
push
mov
add
mov
test
cltd
das
stos
imul
fs
outsl
enter
es
jno
int
outsl
pushf
sub
ret
sub
je
js
xchg
rcrb
in
and
sbb
imul
push
jecxz
xor
inc
add
xchg
hlt
xchg
jl
movsl
jnp
mov
arpl
pop
adc
cmp
add
mov
fdivr
daa
je
mov
je
stos
mov
les
inc
rclb
ds
add
add
into
or
or
aad
add
jmp
add
test
inc
inc
dec
pop
cs
and
addb
aad
sti
lea
cwtl
adc
ret
fwait
jne
add
mov
loope
jno
xor
aad
add
ljmp
outsb
std
jno
sub
rep
xlat
pop
pop
inc
add
ret
cli
xor
mov
js
daa
aam
sti
push
xchg
mov
sub
mov
lcall
je
add
mov
push
pop
cmp
adc
add
jl
dec
sbb
movups
sbb
sub
test
add
into
lcall
cmp
mov
lods
mov
inc
add
scas
ret
insb
jg
mov
dec
mov
mov
xor
mov
inc
add
out
fisubrs
mov
bound
das
mov
inc
add
lret
clc
fists
xor
subl
mov
es
pop
and
sub
fs
lahf
jecxz
test
cmp
and
hlt
jbe
loopne
pop
repnz
lds
jo
pop
xor
jo
push
xchg
xor
imul
cmc
std
push
add
lods
sarb
dec
rol
add
dec
or
lods
inc
xor
or
mov
add
push
scas
xchg
mulb
or
jb
popf
in
dec
imul
aam
add
xor
ja
insb
shll
dec
aad
add
clc
in
mov
in
ja
cmp
les
inc
add
sub
pop
in
lock
jle
scas
lcall
pusha
add
nop
sbb
xor
sub
movsb
xchg
mov
sbb
sub
pop
pop
and
and
adc
add
test
add
push
insb
adc
stos
lock
add
mov
and
jbe
cmp
push
clc
sub
inc
cmp
add
neg
push
mov
lods
cmpl
sahf
inc
add
popf
push
out
xchg
and
rcrl
iret
fildl
outsb
pushf
and
clc
mov
fs
ficoms
dec
xchg
dec
inc
pop
pop
mov
mov
add
nop
out
movb
and
push
add
jb
test
es
and
fdivr
xchg
sbb
mov
xchg
add
pop
sti
pushf
mov
pop
jg
cmc
lahf
pusha
add
cwtl
xchg
pop
push
add
fimuls
push
and
in
mov
jo
add
mov
out
and
add
jmp
add
and
xchg
sbb
cld
mov
dec
and
popa
in
out
aas
fmul
jo
mov
add
xor
shl
add
xor
add
push
les
mov
push
leave
pop
fs
lods
add
cmp
std
xor
sti
sbb
lds
ss
icebp
test
xor
stos
daa
xchg
dec
mov
add
in
ljmp
inc
add
dec
mov
push
add
rol
push
push
add
aas
sbb
and
cs
imul
pop
andl
std
xlat
cmp
dec
dec
xchg
push
xchg
inc
inc
add
fisubs
mov
add
cmc
outsl
test
bound
call
mov
fistps
nop
pop
int3
leave
adc
jb
mov
jne
push
mov
add
popf
mov
jmp
fisttpll
add
mov
add
dec
mov
addr16
mov
push
call
sahf
and
add
fldcw
and
or
push
repnz
fcoms
mov
pop
jp
testl
movsl
fistpll
mov
mov
into
jle
lahf
fbld
add
add
add
xlat
scas
in
inc
std
pop
push
add
imul
sub
or
add
jp
icebp
jb
push
mov
loopne
sbb
mov
rcr
std
push
fstps
addb
add
push
lods
adc
add
pop
cmp
xchg
gs
ja
lock
sbb
sub
nop
inc
icebp
mov
aad
pop
jmp
jae
sub
icebp
jb
ljmp
mov
loope
test
lea
cmpsb
push
sub
adc
cld
push
mov
bound
loop
xchg
in
addb
or
xchg
add
loope
inc
add
outsl
inc
add
pop
movb
mov
jge
xor
rolb
clc
ret
mov
push
or
sbb
popa
push
stc
xchg
sbb
or
int3
cmp
push
fxch
dec
jg
mov
les
mov
xchg
test
gs
stos
mov
xchg
adc
add
stos
mov
aas
jns
add
sarl
dec
xor
jg,pn
rcrl
mov
mov
mov
dec
jbe
icebp
cld
bnd
test
add
insb
xchg
shlb
je
xchg
out
lret
jl
ud0
xchg
or
xchg
xor
cltd
hlt
in
popa
dec
fisubrl
cmp
aaa
outsl
insb
insl
mov
inc
aad
ret
pop
jnp
and
jg
add
pushl
scas
test
dec
jno
jmp
fiaddl
dec
and
loop
or
scas
adc
xor
xchg
add
dec
pop
pop
rcll
test
imulb
push
mov
jnp
fisttpll
stos
sahf
js
dec
fdiv
imul
xchg
mov
cmp
into
dec
fdiv
mov
aaa
popa
ret
jecxz
aas
in
mov
mov
call
push
xchg
stc
pusha
add
adc
adc
mulps
aas
in
xor
push
imul
xor
cmc
jbe
inc
pop
jg
sbb
test
jg
pextrw
sbb
push
and
jne
adc
cmpsb
mov
insb
xchg
hlt
aas
sbbl
pusha
add
and
ficomps
mov
inc
add
or
xchg
cmp
sub
movb
add
xor
ja
xchg
push
ret
loop
mov
xor
fildll
out
xor
pop
pcmpgtd
ds
ret
dec
ret
cmp
add
jb
jnp
adc
rcr
and
movb
pop
enter
add
and
inc
movb
xchg
fs
inc
add
int3
mov
xchg
lds
aas
pop
lods
adcl
in
std
enter
fidivs
in
xor
add
scas
xor
mov
icebp
loope
or
xor
inc
into
ret
jae
loop
js
rcll
pop
or
test
in
cmc
or
xor
mov
jo
iret
fs
or
inc
push
lcall
shr
jmp
cmpsb
adc
cmp
push
mov
inc
adc
lea
test
ds
lea
mov
scas
cmpsl
adc
leave
or
jb
jne
stos
ja
sbb
bound
push
mov
insw
aam
into
iret
int
push
inc
in
xor
imul
jle
mov
pop
sub
dec
add
and
pop
mov
xchg
or
lea
cmp
inc
add
xor
add
rclb
addb
lahf
into
mov
out
xor
add
lock
mov
add
shl
loope
mov
push
mov
roll
and
call
fstl
add
or
repz
add
mov
enter
jge
xchg
inc
add
popf
pusha
add
cwtl
scas
in
enter
cmp
pusha
add
fnstsw
or
lcall
mov
movl
add
mov
xchg
xor
add
loope
xchg
mov
ret
rcrb
add
or
stos
xor
pop
test
fwait
adc
movsb
lahf
mov
mov
jmp
arpl
bnd
dec
rolb
add
lock
js
mov
pop
jb
jecxz
es
les
cwtl
fdivrl
pop
jne
push
add
add
dec
mov
inc
add
push
add
imul
lods
clc
mov
mov
test
cmp
divl
insb
test
int
mov
rcl
sbb
add
add
jo
xchg
xlat
xchg
jo
adc
add
add
sbb
add
and
push
ljmp
push
inc
add
mov
divl
mov
clc
adc
frndint
sti
push
mov
adc
nop
jge
test
jmp
sahf
fwait
scas
cli
push
add
data16
aam
pop
xchg
mov
xchg
lcall
mov
nop
fsubs
mov
jle
add
or
divl
in
into
inc
push
lahf
in
lea
aam
lds
add
lods
cld
movsl
or
add
pop
jb
ss
stos
inc
insb
push
add
mov
cmp
push
xchg
adc
rcrb
jle
shl
dec
enter
jns
ljmp
shr
mov
jnp
mov
sbb
push
add
clc
je,pt
xchg
mov
sub
cmc
or
stos
pop
orps
pushf
mov
xchg
popa
pop
mov
pusha
add
aaa
bound
dec
sbb
pop
rolb
gs
jbe
pop
cmp
add
lods
mov
pushf
xor
jae
jmp
ret
mov
add
rorl
pop
inc
add
ret
pop
and
mov
push
fstpl
cmp
add
add
push
cmp
add
daa
sub
mov
push
mov
mov
loopne
testl
mov
fst
push
push
ss
lahf
jge
std
cltd
test
xor
dec
or
leave
or
mov
inc
cmpsl
ret
inc
add
jb
addr16
inc
stc
addb
int
aaa
fs
int
les
xchg
btsl
addb
push
add
test
inc
push
sahf
outsb
dec
test
mul
sbb
lods
mov
pushf
push
inc
sar
inc
mov
or
pushf
mov
gs
ljmp
rolb
daa
dec
or
popa
sub
xor
enter
pop
add
lods
push
out
loopne
fcomps
xor
mov
aaa
xor
push
add
out
bound
fs
addb
std
dec
les
or
or
xor
dec
mov
call
push
add
lock
fwait
in
in
mov
sbb
ss
inc
add
dec
adc
add
lea
mov
sub
push
push
push
and
mulb
iret
rcl
fsubl
in
dec
shrb
push
inc
add
sub
fadds
push
mov
add
inc
mov
addr16
inc
test
xor
jmp
add
.byte
.byte
gs
