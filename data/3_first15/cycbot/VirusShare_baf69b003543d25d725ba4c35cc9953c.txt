push
movsb
loopne
scas
cmpsl
loopne
adc
loopne
shll
mov
cmpsl
loopne
push
test
mov
mov
loopne
mov
loopne
sub
loopne
cmp
loopne
jae
loopne
or
mov
loopne
push
movsb
loopne
jae
loopne
and
mov
mov
loopne
popf
mov
loopne
add
loopne
mov
loopne
mov
loopne
push
movsl
loopne
cmp
cmpsb
loopne
pusha
mov
loopne
bound
loopne
mov
mov
loopne
cs
mov
mov
loopne
dec
mov
loopne
andl
loopne
and
loopne
inc
test
mov
test
mov
test
loopne
icebp
movsl
loopne
pop
test
loopne
in
loopne
mov
mov
mov
loopne
pop
movsb
loopne
cmpsl
cmpsl
loopne
js
loopne
movsb
loopne
and
loopne
into
mov
loopne
push
test
mov
mov
loopne
adc
movsl
loopne
xor
movsb
loopne
dec
cmpsb
loopne
shll
mov
mov
loopne
lods
mov
loopne
adc
loopne
and
loopne
add
cmpsl
loopne
dec
test
loopne
xor
loopne
pop
mov
loopne
pop
cmpsb
loopne
xor
loopne
lcall
mov
mov
loopne
xchg
test
mov
mov
loopne
adc
loopne
adc
loopne
push
mov
loopne
sub
loopne
shll
mov
movsb
loopne
lods
test
mov
movsl
loopne
test
loopne
push
mov
loopne
xchg
movsl
loopne
fisubs
loopne
jl
loopne
cs
mov
movsl
loopne
inc
cmpsl
loopne
mov
loopne
jae
loopne
shll
mov
cmpsl
loopne
inc
mov
loopne
mov
loopne
leave
movsl
loopne
dec
cmpsl
loopne
sti
mov
loopne
loop
loopne
mov
loopne
in
cmpsb
loopne
ljmp
mov
movsl
loopne
stos
cmpsl
loopne
lods
cmpsl
loopne
imull
loopne
add
loopne
mov
mov
loopne
pop
mov
loopne
xor
loopne
sub
loopne
inc
movsl
loopne
dec
test
loopne
jp
loopne
movsl
loopne
mov
loopne
pop
mov
loopne
and
loopne
repz
mov
movsb
loopne
test
loopne
lods
mov
loopne
xor
test
mov
test
mov
cmpsb
loopne
repz
loopne
add
mov
loopne
mov
loopne
lods
movsb
loopne
test
loopne
imul
loopne
pop
movsl
loopne
push
movsl
loopne
pop
mov
loopne
pop
movsb
loopne
fwait
movsl
loopne
insl
cmpsb
loopne
cmp
loopne
popa
movsl
loopne
or
loopne
cmpsb
loopne
cwtl
mov
loopne
push
cmpsb
loopne
or
loopne
pop
cmpsl
loopne
andb
mov
test
loopne
data16
loopne
xor
loopne
dec
movsl
loopne
jb
loopne
inc
cmpsl
loopne
mov
loopne
mov
mov
loopne
add
mov
mov
loopne
push
cmpsb
loopne
aaa
mov
loopne
dec
movsb
loopne
dec
test
loopne
inc
cmpsl
loopne
adc
loopne
mull
loopne
frstor
loopne
mov
loopne
imul
mov
cmpsl
loopne
out
loopne
in
cmpsl
loopne
sub
loopne
sub
loopne
mov
mov
loopne
dec
movsl
loopne
iret
movsb
loopne
out
loopne
push
cmpsl
loopne
jecxz
loopne
in
cmpsb
loopne
pop
cmpsb
loopne
jo
loopne
les
loopne
mov
cmpsb
loopne
dec
cmpsb
loopne
sahf
test
mov
movsb
loopne
test
loopne
movsb
loopne
mov
loopne
lock
mov
cmpsl
loopne
jne
loopne
jg
loopne
es
loopne
and
loopne
aaa
test
loopne
xchg
cmpsb
loopne
imul
loopne
leave
test
mov
cmpsl
loopne
cwtl
cmpsb
loopne
cmpsb
cmpsl
loopne
pusha
mov
loopne
cmpsl
cmpsl
loopne
mov
loopne
mov
test
mov
test
loopne
xor
loopne
xor
loopne
movsl
test
mov
mov
loopne
jecxz
loopne
imul
loopne
and
loopne
sub
loopne
mov
mov
loopne
or
loopne
push
movsl
loopne
pop
movsl
loopne
xchg
movsb
loopne
sbb
loopne
cmpsl
loopne
add
loopne
outsb
mov
loopne
xlat
test
mov
cmpsl
loopne
push
movsl
loopne
frstor
loopne
lods
mov
loopne
ja
loopne
add
loopne
je
loopne
loope
loopne
repz
loopne
sub
loopne
dec
test
loopne
insb
movsl
loopne
cmc
mov
loopne
jecxz
loopne
jns
loopne
adc
loopne
pop
test
mov
cmpsb
loopne
lds
loopne
inc
mov
loopne
mov
loopne
jle
loopne
dec
mov
loopne
arpl
loopne
jle
loopne
push
test
mov
cmpsl
loopne
or
loopne
out
loopne
adc
loopne
hlt
cmpsb
loopne
mov
loopne
mov
loopne
in
loopne
push
mov
loopne
pop
mov
loopne
inc
mov
loopne
adc
loopne
test
movsl
loopne
les
loopne
sub
loopne
push
test
loopne
das
movsl
loopne
adc
loopne
icebp
mov
loopne
dec
movsl
loopne
pusha
cmpsb
loopne
movsl
loopne
xchg
loopne
outsb
mov
loopne
aas
movsl
loopne
mov
loopne
mov
movsb
loopne
sbb
loopne
loop
loopne
jb
loopne
dec
mov
loopne
lods
movsb
loopne
inc
movsb
loopne
jg
loopne
movsl
loopne
mov
test
mov
cmpsb
loopne
xlat
mov
loopne
mov
loopne
aaa
cmpsl
loopne
lahf
mov
loopne
pop
movsb
loopne
xchg
mov
loopne
mov
loopne
mov
mov
loopne
hlt
cmpsl
loopne
movsb
loopne
xchg
mov
loopne
clc
mov
loopne
fsubl
loopne
in
test
mov
movsb
loopne
push
test
loopne
iret
test
mov
mov
loopne
les
loopne
push
movsl
loopne
adc
loopne
adc
loopne
xchg
movsl
loopne
jne
loopne
fisubl
mov
mov
loopne
insb
mov
loopne
pop
cmpsb
loopne
icebp
cmpsl
loopne
dec
cmpsl
loopne
pop
test
loopne
out
cmpsb
loopne
and
loopne
xor
loopne
sbb
movsl
loopne
loope
loopne
adc
mov
loopne
pop
test
mov
mov
loopne
pop
test
loopne
dec
test
mov
mov
loopne
imul
mov
mov
loopne
mov
loopne
inc
movsb
loopne
pusha
movsl
loopne
or
loopne
lahf
cmpsl
loopne
bt
mov
cmpsl
loopne
andb
mov
movsl
loopne
push
movsl
loopne
xor
loopne
lret
mov
cmpsb
loopne
push
cmpsb
loopne
mov
loopne
int3
mov
loopne
mov
loopne
js
loopne
jmp
loopne
shlb
mov
movsl
loopne
or
loopne
mov
loopne
sub
test
mov
cmpsl
loopne
sub
loopne
mov
test
loopne
sti
mov
loopne
jbe
loopne
loop
loopne
loopne
mov
loopne
bound
loopne
mov
cmpsb
loopne
scas
mov
loopne
shrb
loopne
shll
mov
movsb
loopne
andl
loopne
inc
cmpsb
loopne
movsl
movsl
loopne
lock
mov
mov
loopne
bound
loopne
push
cmpsl
loopne
sbb
loopne
test
mov
mov
loopne
xchg
cmpsb
loopne
push
movsl
loopne
lea
loopne
dec
movsl
loopne
mov
loopne
mov
mov
loopne
loope
loopne
cmpsb
movsl
loopne
leave
mov
loopne
shll
mov
mov
loopne
icebp
movsb
loopne
jge
loopne
stos
cmpsl
loopne
pop
mov
loopne
inc
test
loopne
data16
loopne
lods
cmpsb
loopne
xchg
loopne
popa
test
mov
mov
loopne
mov
mov
loopne
mov
loopne
jnp
loopne
jns
loopne
lea
loopne
dec
mov
loopne
dec
movsb
loopne
lret
mov
movsl
loopne
xor
loopne
cmp
loopne
inc
movsl
loopne
jmp
mov
loopne
andb
mov
test
loopne
mov
loopne
mov
mov
loopne
cmp
loopne
repnz
loopne
or
loopne
mov
cmpsb
loopne
fwait
test
mov
mov
loopne
std
mov
loopne
xchg
cmpsl
loopne
cmp
loopne
push
mov
loopne
mov
loopne
in
mov
loopne
sub
loopne
xchg
movsl
loopne
mov
cmpsl
loopne
cmpsl
mov
loopne
ljmp
mov
test
mov
movsl
loopne
lock
loopne
arpl
loopne
pop
movsb
loopne
loop
loopne
and
loopne
and
movsl
loopne
or
loopne
stos
mov
loopne
bound
loopne
insl
test
mov
test
mov
test
mov
cmpsl
loopne
mov
movsb
loopne
test
loopne
sbb
loopne
repz
loopne
pop
mov
loopne
shll
mov
mov
loopne
inc
cmpsl
loopne
and
loopne
cmp
loopne
sub
loopne
pop
mov
loopne
jecxz
loopne
es
mov
cmpsl
loopne
xchg
movsb
loopne
pop
movsb
loopne
nop
cmpsb
loopne
push
test
mov
mov
loopne
fbld
loopne
push
movsl
loopne
adc
mov
movsl
loopne
xchg
loopne
adc
mov
cmpsb
loopne
xchg
loopne
mov
loopne
in
loopne
inc
cmpsl
loopne
mov
loopne
icebp
mov
loopne
xchg
cmpsl
loopne
leave
movsl
loopne
lds
loopne
pop
mov
loopne
jecxz
loopne
out
loopne
lods
mov
loopne
ljmp
mov
test
mov
mov
loopne
adc
loopne
mov
loopne
push
cmpsl
loopne
cli
mov
loopne
or
loopne
mov
loopne
push
movsl
loopne
stc
cmpsb
loopne
mulb
loopne
in
movsl
loopne
in
loopne
sub
loopne
jb
loopne
aas
mov
loopne
fsubl
loopne
jle
loopne
cmp
loopne
sahf
movsl
loopne
sub
loopne
imul
mov
movsb
loopne
sbb
loopne
int
loopne
sahf
mov
loopne
sbb
mov
movsb
loopne
lahf
mov
loopne
mulb
loopne
js
loopne
cmp
loopne
shll
mov
cmpsb
loopne
or
mov
test
mov
cmpsb
loopne
mov
loopne
inc
movsb
loopne
push
movsl
loopne
jl
loopne
andl
loopne
andb
mov
mov
loopne
pop
mov
loopne
aas
test
loopne
jnp
loopne
test
loopne
into
movsl
loopne
lds
loopne
repz
loopne
pop
movsb
loopne
jg
loopne
sub
loopne
push
mov
loopne
outsb
cmpsb
loopne
out
mov
loopne
cmpsl
cmpsl
loopne
cmp
loopne
jb
loopne
movsb
cmpsl
loopne
sbb
loopne
mov
movsl
loopne
mov
loopne
cmpsb
loopne
push
cmpsb
loopne
adc
loopne
sbb
loopne
xchg
mov
loopne
jno
loopne
jne
loopne
dec
cmpsb
loopne
pop
test
mov
movsb
loopne
out
mov
loopne
imul
loopne
xchg
loopne
pushf
cmpsb
loopne
jmp
loopne
aad
loopne
push
test
mov
movsb
loopne
mov
loopne
jae
loopne
shld
out
loopne
inc
mov
loopne
cwtl
movsl
loopne
inc
movsb
loopne
andb
mov
mov
loopne
loopne
loopne
mov
loopne
cmp
loopne
add
loopne
repnz
loopne
push
movsl
loopne
push
mov
loopne
cmpsw
loopne
sub
loopne
add
mov
loopne
dec
test
loopne
inc
cmpsb
loopne
jecxz
loopne
mov
loopne
sub
loopne
or
loopne
add
loopne
cmpsb
mov
loopne
add
mov
loopne
cmc
mov
loopne
mov
test
mov
movsl
loopne
xchg
loopne
mov
loopne
and
loopne
adc
cmpsl
loopne
addr16
jae
loopne
cmpsl
loopne
jo
loopne
adc
loopne
pushf
cmpsl
loopne
popf
mov
loopne
sbb
loopne
movsl
loopne
loopne
loopne
fwait
mov
loopne
in
loopne
and
loopne
aas
cmpsb
loopne
or
mov
mov
loopne
jl
loopne
inc
cmpsl
loopne
daa
test
loopne
mov
movsl
loopne
xchg
mov
loopne
fldenv
loopne
lods
mov
loopne
mov
mov
loopne
cmp
loopne
inc
movsl
loopne
and
loopne
mov
test
loopne
imul
loopne
xor
loopne
push
test
mov
cmpsl
loopne
adc
loopne
pop
movsl
loopne
je
loopne
pop
test
loopne
jg
loopne
push
test
mov
test
mov
movsb
loopne
mov
cmpsl
loopne
bound
loopne
cmp
loopne
lods
cmpsl
loopne
shrl
mov
movsb
loopne
mov
mov
loopne
dec
mov
loopne
sub
loopne
jae
loopne
inc
mov
loopne
mov
loopne
loop
loopne
cmc
mov
loopne
insb
test
mov
mov
loopne
xor
cmpsb
loopne
mov
loopne
jge
loopne
aaa
movsb
loopne
sub
loopne
push
cmpsb
loopne
sub
loopne
mov
cmpsl
loopne
add
loopne
movsb
cmpsl
loopne
or
loopne
in
cmpsl
loopne
das
mov
loopne
xchg
mov
loopne
ret
movsl
loopne
lcall
mov
mov
loopne
dec
movsl
loopne
mov
mov
loopne
mov
loopne
cmpsl
movsl
loopne
icebp
movsl
loopne
sbb
loopne
loopne
loopne
out
movsb
loopne
pusha
test
mov
mov
loopne
cwtl
mov
loopne
inc
test
loopne
cmp
loopne
dec
cmpsb
loopne
pushf
cmpsl
loopne
in
loopne
shlb
mov
movsl
loopne
movsl
loopne
popa
movsb
loopne
inc
test
mov
test
mov
mov
loopne
mov
loopne
or
loopne
lret
mov
cmpsb
loopne
scas
test
mov
mov
loopne
mov
cmpsl
loopne
cmpsb
loopne
out
mov
loopne
mov
loopne
subl
mov
mov
loopne
mov
cmpsb
loopne
lret
mov
cmpsl
loopne
int3
mov
loopne
inc
cmpsb
loopne
mov
loopne
push
mov
loopne
push
movsl
loopne
fsubrs
loopne
sbb
loopne
add
loopne
xor
loopne
aad
loopne
xchg
cmpsl
loopne
xchg
mov
loopne
frstor
loopne
inc
mov
loopne
lret
movsb
loopne
cmpsb
cmpsl
loopne
push
movsl
loopne
outsl
cmpsl
loopne
push
mov
loopne
cli
cmpsb
loopne
mov
loopne
mov
movsl
loopne
popa
cmpsl
loopne
sub
movsl
loopne
mov
cmpsl
loopne
or
loopne
imul
mov
mov
loopne
adc
loopne
mov
cmpsb
loopne
stc
cmpsb
loopne
adc
loopne
xchg
test
mov
movsl
loopne
adc
mov
test
mov
movsl
loopne
in
loopne
into
mov
loopne
mov
movsb
loopne
lock
loopne
repnz
loopne
out
loopne
mov
loopne
pop
test
mov
movsl
loopne
iret
mov
loopne
loope
loopne
fwait
movsl
loopne
mov
loopne
jp
loopne
lret
test
mov
mov
loopne
xor
loopne
pop
mov
loopne
mov
loopne
cmc
cmpsb
loopne
mov
loopne
mov
mov
loopne
lcall
mov
mov
loopne
xor
loopne
sub
loopne
outsb
mov
loopne
out
loopne
jnp
loopne
mov
loopne
push
mov
loopne
cmpsl
loopne
or
test
loopne
mov
mov
loopne
mov
mov
loopne
shlb
mov
movsb
loopne
or
loopne
lods
mov
loopne
aas
movsl
loopne
pop
movsl
loopne
in
cmpsb
loopne
sub
loopne
lods
test
mov
mov
loopne
lods
movsl
loopne
rep
loopne
adc
loopne
cmpsl
mov
loopne
pop
test
mov
cmpsl
loopne
jge
loopne
push
cmpsl
loopne
add
loopne
daa
cmpsb
loopne
add
mov
mov
loopne
inc
cmpsb
loopne
out
loopne
jmp
mov
loopne
lcall
mov
cmpsb
loopne
add
loopne
push
loopne
movsw
loopne
fsubs
loopne
in
mov
loopne
add
loopne
in
mov
loopne
dec
movsl
loopne
dec
movsl
loopne
inc
movsl
loopne
out
loopne
or
test
mov
test
mov
mov
loopne
enter
push
cmpsb
loopne
add
cmpsl
loopne
ret
mov
mov
loopne
leave
mov
loopne
dec
mov
loopne
mov
mov
loopne
mov
loopne
inc
mov
loopne
or
loopne
jmp
loopne
js
loopne
ret
mov
loopne
pop
cmpsl
loopne
das
cmpsl
loopne
out
loopne
mov
test
mov
test
loopne
add
loopne
inc
test
loopne
or
loopne
add
loopne
int
loopne
test
mov
loopne
adc
loopne
xchg
mov
loopne
lret
mov
movsb
loopne
in
movsl
loopne
pop
mov
loopne
sub
loopne
jmp
loopne
int
loopne
imul
mov
test
mov
mov
loopne
hlt
cmpsl
loopne
xchg
loopne
js
loopne
mov
movsb
loopne
test
loopne
cmpsb
mov
loopne
frstor
loopne
popf
movsb
loopne
cld
mov
loopne
fisubl
loopne
movsb
loopne
shrl
mov
cmpsl
loopne
insb
cmpsl
loopne
jl
loopne
test
loopne
test
loopne
pop
test
loopne
mov
mov
loopne
xchg
loopne
ret
movsl
loopne
lods
mov
loopne
xchg
cmpsl
loopne
dec
test
loopne
push
mov
loopne
cltd
movsb
loopne
loope
loopne
shlb
loopne
ret
mov
cmpsl
loopne
add
loopne
adc
loopne
mov
movsb
loopne
mov
cmpsb
loopne
leave
test
mov
test
loopne
dec
cmpsb
loopne
mov
mov
mov
loopne
subb
mov
movsl
loopne
shld
out
movsl
loopne
add
loopne
adc
cmpsb
loopne
cmpsl
mov
loopne
test
loopne
inc
test
loopne
adc
loopne
test
loopne
push
movsb
loopne
ret
mov
cmpsl
loopne
mov
loopne
fildll
loopne
mov
cmpsb
loopne
add
mov
mov
loopne
push
mov
loopne
shlb
andb
mov
cmpsb
loopne
cs
mov
cmpsl
loopne
adc
mov
loopne
lcall
mov
mov
loopne
je
loopne
adc
loopne
sub
mov
loopne
pushf
test
mov
test
mov
movsb
loopne
push
mov
loopne
and
loopne
shll
mov
cmpsl
loopne
out
loopne
mov
test
loopne
add
mov
loopne
jl
loopne
insl
test
mov
cmpsl
loopne
pop
movsb
loopne
cmpsb
loopne
jmp
loopne
rep
loopne
loope
loopne
mov
loopne
dec
movsl
loopne
jg
loopne
jo
loopne
stos
mov
loopne
pop
cmpsb
loopne
jae
loopne
cmp
loopne
fisubl
loopne
enter
lret
mov
loopne
adc
loopne
ret
mov
mov
loopne
jns
loopne
sbb
loopne
sti
cmpsl
loopne
jnp
loopne
push
movsb
loopne
mov
movsb
loopne
lock
loopne
cmpsl
loopne
sbb
cmpsl
loopne
popa
mov
loopne
jno
loopne
xchg
movsb
loopne
cmpsb
loopne
sbb
loopne
stos
movsl
loopne
jmp
loopne
mov
loopne
inc
movsl
loopne
pop
cmpsl
loopne
movsl
loopne
jp
loopne
nop
mov
loopne
push
movsb
loopne
les
loopne
mov
loopne
int3
movsb
loopne
mov
movsl
loopne
shll
loopne
fwait
mov
loopne
cmpsb
loopne
mov
test
mov
cmpsb
loopne
xor
add
sub
arpl
add
add
jno
add
add
or
pop
pop
ds
ficoml
add
xchg
xbegin
sahf
jb
add
add
jns
cmp
push
add
dec
mov
rcll
add
cmp
fucompp
das
mov
jp
and
add
xchg
cli
std
mov
jmp
and
mov
daa
clc
mov
jg
xchg
movsl
clc
sbb
adc
add
mov
add
aas
ja
push
pop
mov
clc
fldenv
or
add
add
vmaxps
in
inc
clc
adc
add
sub
mov
jg
out
test
xlat
add
add
add
lock
cs
adc
add
repz
mov
jbe
jmp
das
sub
push
push
add
movsl
clc
mov
inc
add
bound
add
add
add
dec
xchg
dec
xor
add
clc
jle
add
push
add
sahf
and
add
clc
sbb
nop
pop
test
in
sbb
test
cmpsb
clc
mov
add
jno
add
push
in
push
sbb
xor
add
push
sub
aad
clc
xchg
cmp
add
shlb
lods
xchg
das
popf
pop
ficompl
mov
clc
adc
add
xchg
mov
add
fcoms
notl
sbb
loope
xchg
push
clc
cmp
add
push
jbe
add
jecxz
mov
pop
xbegin
add
scas
dec
pop
push
and
addr16
mov
dec
inc
add
in
sbb
clc
outsl
icebp
scas
jg
clc
sub
movsb
clc
dec
fdivrl
dec
clc
ret
clc
loope
add
push
cmp
adc
add
sub
mov
or
fadd
clc
xchg
ss
call
cmp
mov
clc
add
add
add
ljmp
clc
jns
das
mov
add
cmpxchg
rcl
fisubl
add
sar
clc
pop
push
mov
sub
out
push
add
push
add
xor
clc
cmc
pushf
dec
insb
add
add
out
call
je
faddl
add
clc
aas
mov
aad
data16
sbb
add
mov
add
aas
popa
add
xor
add
add
jns
mov
das
ret
aaa
pop
mov
add
mov
shlb
add
lcall
int3
mov
xchg
sar
push
js
mov
mov
lcall
clc
push
add
push
add
clc
fimuls
or
sar
add
sub
clc
lret
int
add
lret
bound
add
add
xbegin
outsl
sbb
add
sub
clc
pop
mov
add
add
sbb
clc
cmp
xchg
cmp
clc
movsb
clc
pop
data16
aaa
mov
add
or
pop
mov
mov
fs
adc
add
bnd
sub
clc
das
cld
ds
int3
cmp
clc
push
add
idiv
mov
mov
add
add
out
add
add
jle
sbb
pusha
add
lahf
dec
sbb
movsl
clc
mov
push
cmc
ficompl
or
push
daa
clc
call
sub
mov
pop
pop
mov
add
add
mov
mulps
clc
mov
repz
add
cmpsl
clc
sbb
add
sbb
add
iret
mov
movsb
clc
mov
and
add
clc
pop
and
add
cmpsl
clc
data16
int3
jae
add
es
jge
jne
clc
xor
add
clc
daa
clc
cli
or
bound
add
add
sub
mov
or
dec
jp
leave
cli
mov
add
cmp
jbe
repz
add
xchg
lock
xchg
add
add
clc
jg
pop
mov
mov
ret
clc
adc
add
jge
jecxz
jo
add
js
sub
xchg
push
std
cs
or
clc
add
mov
movsl
clc
lahf
mov
xchg
outsl
jge
clc
fldt
pop
add
pop
pop
jnp
clc
adc
add
fldcw
popf
sub
add
mov
cmp
clc
push
es
repz
aaa
ret
clc
push
lret
lock
cmp
add
add
shl
clc
mov
pop
and
mov
xchg
add
add
add
jp
push
add
repz
add
stc
ret
clc
cmp
cmp
clc
icebp
and
add
cmp
pop
clc
jp
adc
add
sahf
sub
outsl
nop
mov
clc
in
or
add
xor
add
dec
sar
loopne
js
fcom
add
aas
dec
lret
lods
cmp
pusha
add
sub
mov
clc
sar
addr16
pop
xchg
fs
movsb
clc
xlat
cmp
push
clc
mov
sahf
xchg
push
mov
dec
sub
cmp
add
clc
jg
clc
mov
xchg
mov
jae
add
add
mov
sar
add
imul
incl
xchg
movsb
clc
xchg
and
sub
fcomps
rclb
popf
cli
cmp
loope
jmp
clc
mov
inc
clc
fiadds
aas
sub
aad
mov
add
pop
add
push
mov
xbegin
add
cs
push
xabort
pop
clc
nop
mov
add
inc
clc
jl
pushf
sbb
add
clc
sub
sub
xchg
dec
push
clc
leave
mov
xor
add
dec
mov
add
pusha
add
pop
leave
mov
jp
clc
mov
mov
clc
sar
ss
clc
add
xlat
shrl
add
ja
mov
insb
in
mov
clc
mov
lret
add
bound
add
cvtps2pd
add
add
adc
ret
clc
insb
and
fists
add
adc
add
dec
cmp
mov
mov
add
out
cltd
xlat
cwtl
or
add
mov
or
add
int3
in
out
adc
add
mov
test
insb
es
mov
mov
loopne
addr16
mov
inc
add
addr16
psrlw
clc
adc
shll
add
outsl
mov
clc
dec
cmp
loope
mov
dec
xchg
cmp
sbb
add
xchg
repnz
dec
vcmpps
adc
add
jmp
add
sbb
leave
fsub
clc
adc
cli
repnz
add
add
and
js
jg,pt
mov
clc
add
add
imul
hlt
dec
inc
clc
or
icebp
xor
sbb
inc
add
cmp
es
imul
jecxz
hlt
outsb
insb
dec
cwtl
inc
add
fnstenv
push
mov
xor
mov
jmp
add
add
xchg
pop
sbb
add
cmp
pop
clc
movsd
add
sbb
roll
add
js
clc
mov
ja
add
sub
adc
add
cmp
dec
hlt
mov
xor
add
lret
fiadds
xchg
movsl
clc
into
cmp
in
ds
add
fwait
sub
clc
mov
add
clc
xchg
cmp
add
out
notb
es
fwait
inc
add
loope
icebp
ss
sub
or
clc
lods
and
add
add
pop
cmp
push
jb
add
ret
clc
push
add
jg
add
or
add
into
popa
add
fidivrl
push
add
jo
add
or
mov
push
sbb
cmpsb
clc
test
loopne
jg
push
sahf
sbb
mov
xchg
mov
adc
lods
mov
add
inc
clc
add
add
fistpll
js
cmp
lock
jno
add
data16
xchg
cltd
shlb
mov
add
mov
lock
jmp
clc
jmp
sar
mov
icebp
fimuls
gs
xor
add
add
add
jb
add
fcoml
add
shlb
mov
xchg
and
add
je
push
add
scas
js
insb
fisubl
add
cli
inc
clc
adc
clc
xlat
lock
and
mov
add
ljmp
add
add
mov
lcall
lahf
not
push
lcall
fs
cmp
sub
aas
mov
iret
xabort
push
add
mov
ja
push
sbb
dec
cmp
jle
inc
add
mov
movsb
clc
fs
xabort
enter
add
cmpsb
clc
cmp
dec
es
or
jl
fiaddl
sbb
push
clc
clc
stos
mov
add
push
add
and
add
add
clc
cmp
cmp
pop
xabort
lcall
mov
add
mov
movsb
clc
push
data16
pop
xchg
sahf
adc
jo
add
addr16
mov
xor
push
add
xlat
imul
mov
inc
add
repnz
add
or
clc
sbb
pop
clc
jg
gs
and
add
clc
out
pop
sbb
lods
enter
lock
jmp
clc
rclb
add
adc
add
cmp
and
add
clc
push
jl
jb
add
in
push
push
add
test
shrb
cmp
mov
add
cmp
mov
adc
cmp
push
scas
lods
gs
leave
imul
add
add
loope
jo
add
add
sbb
xchg
dec
imul
add
add
clc
or
jp
dec
pop
add
or
cwtl
enter
or
mov
add
rclb
xor
add
clc
test
cmp
clc
fs
jae
add
add
sub
mov
out
pusha
add
arpl
add
push
add
lea
mov
test
test
sahf
sbb
sbb
clc
cmp
rcrl
cmp
aaa
dec
push
add
inc
clc
ret
add
cs
xor
add
clc
mov
add
scas
xchg
aad
das
test
clc
rcrb
lret
popa
add
mov
inc
add
xor
lea
push
push
and
add
add
pop
xchg
in
sbb
in
ljmp
decl
add
rcll
add
inc
add
adc
add
jecxz
cmp
push
ret
clc
cmp
test
jmp
push
add
dec
push
jp
push
add
or
add
gs
adc
add
clc
aam
daa
clc
inc
add
arpl
add
add
add
add
sub
sar
rclb
add
nop
add
sbb
add
add
loope
cmp
jbe
sar
jne
lcall
es
sar
jg
cmp
iret
and
clc
loopne
lods
push
jecxz
filds
add
jb
add
adc
add
dec
test
fsubs
add
add
mov
mov
pop
push
add
aaa
inc
add
push
mov
push
cmpsl
clc
inc
clc
and
add
dec
jno
add
or
add
fdivl
clc
cmpsl
clc
sar
lods
mov
push
cmc
jb
add
add
stc
mov
adc
add
clc
jno
add
lds
and
mov
sub
lea
push
call
sub
es
push
mov
and
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
xchg
ss
pop
add
movzbl
shr
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
pushl
pop
sub
add
ret
test
nop
nop
nop
nop
nop
mov
push
push
je
mov
adc
add
ret
jmp
mov
lea
push
pushl
nop
nop
nop
nop
ret
inc
add
ds
clc
sbb
cld
jmp
fwait
sub
jno
popa
add
push
sbb
clc
dec
stos
pusha
add
pop
enter
mov
and
jmp
sub
aas
je
jns
add
lock
insb
into
lahf
stos
stos
repz
int
bound
add
push
xchg
stos
mov
arpl
add
xchg
lret
and
add
mov
add
sar
inc
clc
inc
clc
xchg
das
push
ja
add
mov
cmp
add
inc
clc
lahf
pop
pop
lahf
fisubrs
mov
add
xor
add
sar
clc
mov
mov
clc
xor
add
add
bound
add
mov
js
repnz
clc
lcall
add
add
pop
adc
push
add
cld
jmp
push
mov
rcrb
jmp
data16
mov
clc
jle
clc
loope
add
cmp
ret
mov
lahf
xchg
xor
sub
add
adc
add
add
add
sub
or
clc
mov
xchg
cmp
pop
call
clc
push
dec
ss
ret
pop
sub
testb
xchg
mov
loope
xchg
or
add
xor
add
add
call
jmp
sub
push
movsb
push
mov
xor
add
add
push
push
cld
jmp
data16
sub
mov
sarl
test
add
inc
clc
repnz
mov
mov
lret
clc
push
add
aam
xor
add
add
add
add
add
push
mov
jecxz
lods
xor
add
dec
cmp
clc
sbb
clc
push
jmp
fwait
mov
fwait
mov
add
mov
fisubrs
clc
hlt
call
add
rolb
add
mov
js
jnp
clc
mov
fnstsw
push
add
lea
imul
cmp
fwait
mov
test
pop
add
cld
jmp
test
lock
add
xlat
ror
jno
add
ret
clc
jbe
sub
adc
add
jno
add
das
or
sar
pop
clc
xchg
sbb
add
add
clc
mov
ja
add
test
add
pop
mov
leave
cmp
loop
mov
clc
mov
hlt
cwtl
aas
push
add
dec
cltd
out
dec
lock
int3
dec
dec
or
cmpsb
clc
ret
clc
pusha
add
roll
lret
push
and
add
add
rcrl
cmp
clc
pushf
mov
loopne
adc
add
add
loope
adc
add
add
cwtl
pushf
sbb
add
add
add
mov
lea
and
jns
mov
add
repz
push
loope
outsb
adc
add
sahf
sbb
lret
add
clc
and
add
clc
push
push
ss
ret
data16
add
inc
clc
jnp
mov
add
xchg
push
add
inc
add
push
aaa
imul
jnp
sub
repnz
clc
mov
int3
push
clc
fcomps
clc
scas
or
ds
mov
add
jl
clc
pop
cmp
pop
inc
clc
sbb
cmp
int3
cmp
add
mov
push
js
pusha
add
lock
and
xchg
out
mov
xbegin
cmp
clc
mov
ljmp
cmp
clc
dec
mov
add
inc
clc
xchg
sar
clc
cmp
movsl
clc
insl
or
arpl
add
clc
fwait
cmp
iret
adc
add
and
add
jne
clc
mov
add
ret
clc
loope
aaa
stos
insl
es
in
xor
add
and
clc
mov
clc
pop
lods
sbb
fsts
push
add
out
adc
clc
fs
sbb
hlt
cld
push
add
mov
jne
inc
clc
cmp
pop
push
outsl
add
je
sub
das
aad
add
in
cli
ja
outsl
mov
add
pop
test
popf
sbb
add
fs
lret
lock
mov
add
clc
push
pop
lahf
lahf
scas
add
add
clc
rol
clc
mov
repnz
jnp
and
xchg
pop
bound
add
add
in
dec
push
add
add
clc
jmp
imul
jg
and
add
add
icebp
mov
add
xlat
int
daa
clc
and
add
clc
leave
dec
add
add
add
inc
clc
xchg
xchg
cmpsb
clc
pop
dec
adc
add
add
mov
addr16
dec
js
repz
js
nop
cmpsb
clc
push
clc
cmp
push
ret
adc
out
inc
clc
lea
add
loopne
fwait
das
repnz
clc
dec
pusha
add
xchg
pushf
xor
add
addr16
sbb
push
add
inc
clc
xor
add
dec
lahf
jge
sahf
call
lahf
cmp
add
adc
add
notb
mov
inc
clc
jmp
add
dec
sub
add
add
clc
add
inc
clc
sar
add
add
cmp
add
data16
mov
add
jb
add
clc
imull
scas
testl
clc
push
fisubrs
clc
cmc
dec
xchg
pop
add
add
test
mov
add
clc
mov
add
test
aaa
test
or
clc
jle
test
movsb
clc
test
clc
adc
add
add
test
mov
or
adc
add
add
loopne
sub
bound
add
clc
sar
clc
or
pop
int
pop
clc
mov
adc
add
add
add
movsb
clc
je
fldt
test
daa
clc
cmp
clc
test
das
jno
add
fmuls
cmp
push
sbb
insb
pop
sbb
jae
add
jge
clc
idivl
sar
pop
lods
inc
add
aam
mov
push
shlb
clc
fildl
push
add
cld
jmp
cmp
add
xchg
pop
adc
add
pop
xabort
clc
data16
xchg
jle
cmp
cld
jmp
add
outsl
dec
mov
sub
inc
add
in
adc
add
clc
rclb
cld
jmp
imul
push
mov
sbb
repnz
push
pushf
dec
adc
add
clc
addr16
lret
scas
push
cmp
outsl
mov
popa
add
cmp
add
sbb
fwait
mov
add
xor
add
sar
insb
push
sti
push
add
jmp
cltd
pop
xchg
mov
enter
std
adc
add
pushf
xchg
xchg
repnz
add
fwait
jl
push
mov
cld
jmp
cmp
add
clc
cmc
cmpsl
clc
xchg
jae
add
sar
xabort
push
add
leave
movsb
clc
inc
clc
movsl
clc
cli
scas
cmp
clc
ss
or
clc
mov
int3
sbb
clc
xchg
jne
lea
xchg
pop
cmp
or
clc
icebp
lret
mov
clc
mov
add
add
mov
lret
add
es
outsl
inc
add
enter
mov
clc
mov
jbe
cli
or
arpl
add
lods
sbb
cmp
mov
iret
je
dec
movsl
clc
fst
in
xor
add
jl
mov
adc
add
add
out
mov
aad
xor
add
clc
cmp
sub
fstps
clc
lahf
pop
repz
dec
lret
lea
loope
test
js
add
sarl
ret
sub
clc
jmp
jmp
cmp
in
dec
jnp
or
test
jecxz
pop
mov
and
sub
add
popf
data16
or
jb
add
add
inc
clc
mov
shr
mov
add
cmp
add
add
add
jns
clc
loop
mov
call
jo
add
clc
jle
cmp
add
mov
sub
jmp
movsb
dec
and
jmp
add
or
add
adc
add
mov
mov
add
adc
and
imul
clc
mov
clc
jmp
adc
add
clc
pop
inc
clc
mov
jle
jge
add
cwtl
mov
clc
add
add
cli
test
out
movsl
clc
cwtl
jge
add
cmp
add
sbb
daa
clc
pop
mov
clc
cmp
idiv
cld
jmp
fs
add
xor
add
add
shlb
adc
add
add
add
arpl
add
add
out
iret
lahf
sar
clc
and
add
inc
add
cmp
push
int
and
add
add
aam
add
cmp
mov
scas
test
idiv
iret
lock
clc
pop
push
add
mov
das
mov
clc
or
push
add
or
add
jo
add
jge
fiaddl
add
mov
adc
clc
inc
clc
xor
add
add
repz
jmp
idiv
ljmp
pop
or
add
add
add
add
lea
add
ljmp
sar
jg
clc
push
xchg
test
inc
clc
outsl
dec
out
mov
mov
add
add
clc
cmp
mov
add
mov
add
cmpsl
clc
xchg
xchg
fisttpll
add
pushf
ret
cmpsl
clc
sar
inc
clc
mov
gs
xchg
call
in
bound
add
in
test
mov
jmp
pop
dec
addr16
cs
add
stc
lea
add
cmp
and
add
in
lcall
jmp
push
add
dec
mov
out
xor
add
aas
cmpsb
clc
mov
adc
bnd
clc
dec
mov
xor
add
or
cmp
clc
mov
fsts
mov
and
add
sub
dec
lods
xor
add
clc
or
dec
adc
in
dec
cmp
movsb
clc
xor
add
xlat
cmp
add
xor
clc
imul
fwait
or
xchg
mov
add
push
add
mov
xchg
mov
add
add
mov
jmp
and
or
sub
jmp
xor
pop
pop
ret
test
push
mov
add
xchg
mov
clc
xchg
jno
add
clc
inc
clc
cmpsb
clc
cs
or
mov
mov
or
add
push
push
test
daa
clc
arpl
add
push
clc
mov
loope
fcmovnu
xbegin
add
sbb
jno
add
add
jno
add
nop
je
mov
clc
xor
add
add
test
mov
clc
cmp
clc
clc
xor
inc
clc
pop
imul
adc
add
leave
lea
clc
adc
add
add
inc
add
cmp
add
adc
mov
add
add
shll
sub
addr16
lea
and
xbegin
clc
xchg
jnp
clc
notl
and
hlt
cmp
jns
lret
clc
lea
add
call
inc
add
pop
clc
cwtl
int3
or
int
clc
daa
clc
mov
add
xchg
arpl
add
add
jecxz
cmp
cmp
jns
ljmp
add
sti
push
imul
imul
int3
bound
ret
sub
xchg
dec
popf
push
clc
fiadds
into
push
inc
clc
test
in
test
clc
xchg
fmul
mov
ret
clc
push
mov
loope
add
push
inc
add
test
lods
jo
add
cld
xabort
add
add
xor
dec
daa
clc
js
sar
add
cld
push
xbegin
mov
push
push
dec
add
sub
jp
pop
stc
iret
addr16
and
add
cld
sar
add
add
push
add
jmp
subb
pop
add
cmp
cwtl
sub
clc
sar
mov
push
clc
mov
out
xor
sub
inc
add
adc
add
lret
xchg
mov
es
and
add
jp
push
add
cmpsb
clc
dec
aad
mov
clc
dec
ss
add
hlt
xchg
jnp
lods
das
mov
push
clc
jl
add
insl
fnsave
add
add
pushf
leave
or
clc
mov
clc
sbb
cld
jmp
sub
clc
sub
mov
sar
dec
xchg
xchg
and
add
clc
mov
aas
cmp
add
jo
add
or
dec
push
add
mov
clc
push
add
cmp
loope
sbb
cld
jmp
cmp
push
adc
add
clc
xchg
push
loop
iret
lcall
das
mov
jbe
push
jp
into
dec
mov
push
add
inc
clc
insl
xor
add
insl
data16
fmulp
popa
add
outsb
mov
inc
clc
test
xor
mov
data16
jg
xor
add
add
leave
adc
add
ficoml
add
decl
addl
fwait
sub
lods
imul
add
clc
inc
add
mov
jmp
dec
outsl
push
cmpsl
clc
icebp
pop
jecxz
cmpsl
clc
jb
add
popf
mov
lret
add
xabort
lods
incl
pop
add
xchg
movsb
sub
ficoms
add
shll
fwait
xchg
inc
add
and
nop
mov
repz
clc
push
add
test
clc
jmp
push
add
cmp
jne
cmp
leave
add
sub
loopne
mov
mov
cmp
push
lock
das
decb
push
add
dec
testb
inc
clc
imul
add
and
pop
xlat
fldcw
fcoml
inc
clc
cmc
sti
push
add
push
cmp
cld
jmp
sbb
add
jmp
or
mov
cld
jmp
fwait
adc
xabort
ja
xor
add
stos
xor
add
cmp
daa
clc
test
sar
jle
add
fs
jmp
jb
add
imul
cmc
ljmp
cmpsb
clc
mov
in
mov
clc
or
test
cmp
add
cltd
xchg
and
cwtl
clc
or
pusha
add
and
add
cmp
push
cld
jmp
xchg
sub
popa
in
jo
add
xor
add
mov
mov
ja
scas
fs
push
jp
clc
iret
or
push
add
or
clc
push
sahf
dec
icebp
fsubrs
add
aad
add
mov
clc
outsb
call
je
int3
out
gs
int3
mov
jecxz
jle
jl
mov
jmp
add
lods
sub
push
gs
incl
mov
add
sub
sbb
mov
add
inc
add
jb
add
clc
mov
pop
inc
add
iret
mov
dec
cmp
add
ret
sar
add
cld
jmp
jno
adc
inc
clc
cmpsb
clc
out
or
add
push
add
adc
add
inc
add
dec
pop
sar
inc
clc
xor
cwtl
dec
and
add
or
sub
test
clc
mov
add
xlat
adc
add
sbb
pop
jl
inc
add
mov
clc
or
clc
mov
sar
clc
aas
sbb
je
mov
add
rcrl
jo
add
xchg
push
fiadds
cs
pushf
and
insl
mov
clc
jge
clc
jb
add
add
cmp
clc
out
ret
in
pop
cmp
ja
clc
inc
add
jae
add
divl
insb
xchg
cwtl
cmp
jp
clc
aad
mov
clc
jbe
clc
nop
mov
loope
adc
add
in
sub
clc
js
clc
mov
popf
pusha
add
icebp
inc
clc
mov
or
out
fbstp
xchg
mov
ljmp
ss
ret
cmp
imul
add
dec
adc
add
and
add
ds
dec
push
pushf
add
adcb
or
clc
lcall
clc
jl
pusha
cld
jmp
cwtl
push
sahf
test
dec
add
add
add
add
add
push
shlb
or
add
xchg
dec
and
add
add
ss
cmp
xor
add
clc
pop
clc
sub
cmp
clc
mov
add
jbe
inc
add
pop
inc
add
ret
clc
in
in
cmp
clc
mov
clc
sub
inc
add
cmp
xor
add
add
test
add
cmp
sub
rcrb
add
imulb
mov
clc
pusha
add
in
mov
arpl
add
clc
push
pushf
data16
adc
add
clc
std
iret
inc
add
int
sub
loop
push
add
lods
inc
clc
sar
mov
lds
jg
sub
fs
cmp
outsl
imul
or
aam
aas
mov
add
mov
push
gs
jno
add
or
jp
ret
dec
fistl
xor
add
lret
mov
add
mov
clc
cmp
or
test
sar
clc
cmp
add
faddl
or
clc
mov
add
repz
out
imul
add
clc
or
add
add
jl
mov
mov
inc
clc
insb
in
mov
clc
add
add
test
scas
xchg
pop
popf
pushf
insb
lea
jmp
cld
jmp
test
negl
cmc
ds
or
dec
cmp
jmp
xchg
das
sub
clc
jl
sbb
add
daa
clc
jg
sub
inc
clc
push
add
jg
clc
loop
jae
add
pop
mov
scas
lods
in
es
mov
jo
add
jnp
mov
or
clc
xchg
xor
add
cmc
dec
inc
clc
jmp
decl
cld
jmp
jp
sub
add
push
clc
and
add
add
mov
add
pop
inc
clc
aam
es
pop
fsubrp
int
popf
call
in
add
repnz
add
cld
jmp
and
fcoms
clc
sub
js
call
nop
iret
iret
or
and
add
clc
sar
dec
test
xchg
fisubs
add
cmp
add
test
add
fwait
xchg
call
loope
ret
clc
cmp
pop
lcall
clc
popf
ss
mov
mov
pop
push
add
scas
pop
xabort
je
add
jb
add
and
xchg
nop
in
jne
jbe
clc
lcall
inc
clc
stos
in
fcoml
add
push
add
gs
pop
in
mov
jns
add
std
lret
fcomps
stos
out
or
add
clc
cmp
imul
cli
popa
add
cmp
add
mov
nop
iret
iret
pop
cwtl
sbb
bound
add
flds
jle
clc
adc
add
inc
add
cltd
sar
clc
xchg
cs
mov
xor
add
cmp
add
add
loop
sbb
add
add
or
cmpsl
clc
sti
pusha
add
stos
sub
add
add
add
movsl
clc
mov
in
stos
push
stc
jno
add
incb
pop
out
inc
clc
sbb
clc
mov
clc
push
popa
add
push
daa
clc
cmp
data16
xabort
add
scas
push
add
loope
ss
rorb
sub
mov
mov
pop
sbb
out
sub
clc
pop
dec
sbb
add
cmp
push
add
fsts
add
jno
add
push
pop
popf
cmpsb
clc
addr16
add
add
in
xor
add
ljmp
add
lock
popf
push
add
push
add
fwait
adc
clc
mov
in
xbegin
data16
nop
jb
add
clc
int
clc
fstpl
cld
jmp
pushw
sub
add
sti
mov
adc
icebp
cmpsl
clc
pop
and
cli
loope
fs
mov
lock
inc
add
loopne
jmp
aas
inc
clc
pop
mov
aas
inc
add
push
daa
clc
cmp
adc
mov
cltd
dec
adc
add
cld
mov
add
fidivl
add
fs
pop
ljmp
clc
jo
add
clc
xor
add
pusha
add
mov
add
fnstcw
xchg
testl
add
pop
aam
cmpsl
clc
sete
or
imul
dec
dec
ficoms
push
pop
cld
jmp
nop
add
dec
pop
mov
add
imull
pop
and
add
clc
nop
test
cmp
jo
add
add
push
inc
clc
fwait
in
cwtl
mov
jg
clc
and
add
out
mov
add
repz
add
add
sar
add
pusha
add
cmp
and
add
cli
cmp
jle
test
idiv
iret
in
sub
jmp
jl
push
inc
add
cmp
lcall
dec
mov
add
clc
lahf
mov
dec
sbb
scas
lcall
xchg
add
add
add
clc
not
dec
dec
jb
add
jp
cmp
mov
clc
sub
pop
clc
sbb
clc
mov
add
push
sub
add
push
arpl
add
dec
jnp
cmc
jnp
cmp
clc
sub
add
sbb
add
push
ss
ret
lods
je
push
and
add
clc
and
add
incl
jmp
push
or
clc
mov
add
inc
add
xchg
and
outsb
cmp
inc
clc
stos
fsubs
add
add
mov
sbb
xchg
push
dec
and
inc
clc
shrb
add
loop
dec
mov
mov
ja
clc
jp
or
dec
loopne
xor
mov
cld
jmp
sub
js
mov
jp
fs
sbb
add
add
sbb
add
add
pop
push
push
testb
add
add
adc
add
pop
clc
daa
clc
xor
add
or
out
or
sar
clc
leave
or
add
test
ljmp
aam
push
pop
mov
filds
repnz
dec
sub
clc
mov
sub
xabort
scas
outsl
jb
add
pop
jb
add
sub
sbb
add
pop
rcr
sbb
data16
decl
in
add
xor
and
clc
xlat
jl
dec
clc
xchg
scas
lods
lods
push
add
ret
clc
cmp
add
xchg
test
mov
enter
add
clc
outsl
out
cld
xchg
cmp
dec
mov
add
shrl
push
mov
and
add
add
arpl
add
cltd
inc
add
ror
mov
jno
add
inc
add
mov
xor
int3
movsl
clc
sbb
mov
xor
clc
insb
mov
pop
je
dec
push
add
push
add
mov
clc
test
pop
sbb
mov
mov
out
das
jne
clc
mov
adc
add
jge
movsl
clc
icebp
ja
clc
and
add
add
stos
jae
add
mov
add
jno
add
mov
push
mov
cld
jmp
xchg
and
clc
xor
add
clc
or
inc
add
push
add
pushf
cmpsb
clc
xchg
xchg
loopne
ljmp
addb
cld
jmp
cwtl
icebp
das
data16
xor
add
add
sar
add
cmp
add
sar
clc
lret
add
add
popf
data16
int3
mull
mov
cs
xchg
test
push
clc
rorb
cld
jmp
cmpsb
es
xabort
clc
arpl
add
cli
cmovb
add
add
push
add
and
cs
loopne
or
clc
jno
add
jmp
test
aas
test
clc
push
add
xchg
call
xchg
aaa
mov
clc
sarl
fidivl
add
adc
add
add
mov
add
add
add
movsb
clc
fsubp
clc
popa
add
mov
call
js
add
dec
add
add
pop
xor
add
sbb
add
inc
clc
outsl
push
clc
xchg
and
add
add
dec
add
mov
add
add
xlat
xabort
arpl
add
jmp
lods
push
cmp
inc
add
mov
clc
lods
or
clc
in
or
call
mov
arpl
add
and
add
add
add
cli
inc
clc
or
dec
lock
sbb
clc
mov
fildll
add
mov
aaa
add
ja
aaa
fcmovnb
clc
adc
clc
sbb
hlt
test
and
add
clc
jg
clc
and
add
mov
call
sbb
add
dec
int
jnp
insl
stos
ljmp
sar
push
leave
test
dec
sbb
add
lcall
clc
mov
add
push
add
push
push
push
push
cmpl
cld
jmp
or
mov
mov
sub
mov
add
jo
add
clc
test
clc
int3
fmull
xchg
gs
pop
cld
mov
jp
clc
and
add
inc
add
data16
sar
clc
sub
shr
sbb
clc
sbb
push
jecxz
pop
pop
sar
mov
add
clc
inc
clc
mov
jnp
clc
cmp
mov
cmp
clc
jmp
xchg
jmp
add
movsl
clc
cmp
cltd
mov
hlt
out
mov
data16
dec
movsl
clc
xchg
outsb
out
imul
clc
stos
push
jno
add
lret
mov
push
ret
movsb
pop
jno
dec
sbb
enter
mov
add
dec
sub
in
jle
testb
push
pop
add
inc
cmpsb
jp
sub
addr16
push
add
cld
jmp
sbb
es
addr16
clc
in
adc
add
add
call
mov
xor
add
add
add
lret
loop
mov
inc
add
gs
test
fbstp
mov
add
add
pop
cld
jmp
fwait
cwtl
add
outsb
cwtl
mov
push
dec
js
mov
repz
cwtl
daa
clc
popl
data16
lret
stos
jne
add
push
inc
add
xchg
out
rorl
jb
add
add
cltd
ficoms
add
clc
scas
xchg
mov
add
fs
ja
add
jl
clc
xabort
mov
jns
clc
and
add
or
add
clc
mov
sbb
jmp
sti
cmp
mov
push
xchg
cld
jmp
add
push
or
xchg
xchg
sahf
imul
clc
es
rclb
lahf
pop
and
add
cmp
sub
out
inc
clc
pop
mov
clc
jp
pusha
ss
ret
inc
cmpsb
jp
xor
add
add
cltd
and
add
repz
jne
cld
jmp
xchg
enter
dec
push
mov
add
xchg
pop
es
mov
aad
adc
add
clc
test
add
cmpsb
clc
mov
push
add
xchg
adc
add
sub
ja
in
jns
push
add
call
clc
xchg
dec
sub
jp
mov
mov
add
inc
clc
lret
pusha
add
fsubp
clc
insb
push
pop
xor
add
add
jns
mov
add
xabort
pop
rorl
mov
xchg
outsl
sbb
mov
rorl
add
sbb
enter
add
and
add
add
add
loop
dec
jnp
xor
add
repz
clc
outsl
fistl
add
test
add
add
adc
add
clc
rcll
fisubs
add
inc
add
xchg
lods
or
clc
loopne
jnp
stos
mov
xbegin
mov
aam
filds
cmp
inc
clc
sub
mov
xchg
test
push
mov
cld
jmp
and
mov
add
cmp
clc
cmpsl
clc
mov
fcmovu
mov
pop
or
dec
scas
adc
add
add
add
call
in
sbb
add
xor
add
out
fiaddl
add
and
add
push
sub
ja
gs
push
cmp
add
mov
jno
add
clc
jge
add
xbegin
add
clc
gs
scas
lret
pop
adc
add
push
add
pushf
pop
or
add
aad
ja
add
jb
add
sar
clc
jmp
lcall
clc
xchg
cwtl
cmp
stos
jns
add
cmp
clc
ret
adc
add
add
add
add
clc
in
adc
add
gs
out
xor
add
sub
add
add
out
adc
add
dec
pop
gs
ss
scas
fisubl
ss
sub
push
ss
clc
cld
mov
add
inc
clc
sbb
dec
sub
add
out
je
push
clc
push
add
cmp
clc
scas
mov
clc
iret
jnp
add
add
dec
add
add
clc
pop
jb
add
or
clc
mov
clc
cmp
add
push
mov
cld
jmp
xchg
nop
mov
sub
inc
add
nop
ficomps
repnz
jp
inc
add
xchg
xabort
add
jmp
xchg
mov
scas
fs
ret
sti
stos
and
add
cmp
cmp
clc
and
clc
es
dec
jae
add
xadd
or
cwtl
adc
add
sub
pop
aaa
jae
add
mov
je
mov
clc
test
clc
divb
mov
ficomps
add
mov
mov
add
jg
js
mov
clc
mov
and
add
add
cmpsb
clc
cmp
imul
aad
adc
clc
add
add
outsb
call
lea
cld
jmp
sbb
or
nop
mov
sbb
add
int3
xchg
push
inc
add
or
jnp
add
xor
add
aas
mov
push
cltd
mov
clc
fistps
sbb
lea
add
xor
add
clc
adc
add
jge
clc
cmp
add
lock
mov
cmp
clc
xchg
stos
movsl
clc
or
clc
xchg
push
bound
add
clc
xchg
test
jecxz
dec
es
mov
pusha
add
addr16
pop
push
cs
xchg
cmp
insl
cld
xlat
dec
or
jge
add
aam
and
xabort
push
xchg
stos
dec
and
add
int3
mov
clc
aaa
cli
dec
insl
jno
add
add
mov
clc
movsl
clc
jle
fisttpl
pavgw
cltd
and
and
ret
sbb
sub
clc
decl
jmp
adc
rcrb
adc
add
clc
mov
out
xchg
push
hlt
mov
cmp
dec
fiaddl
add
clc
pop
fpatan
lahf
test
jg
fisubl
jecxz
cs
add
pop
clc
into
xor
add
icebp
or
add
jg
jb
add
add
and
add
clc
jns
clc
dec
xbegin
add
sbb
mov
jge
dec
or
hlt
dec
jp
lods
dec
jmp
stc
xabort
shr
cmp
clc
das
out
ds
ljmp
mov
jecxz
leave
cmp
clc
gs
or
or
mov
push
insb
inc
clc
jmp
clc
data16
mov
add
mov
add
add
ret
clc
xchg
pushf
icebp
fldcw
add
pushf
ss
ret
push
dec
lods
sub
loopne
xbegin
add
add
ret
clc
adc
add
add
push
add
pop
je
repnz
pusha
add
add
add
mov
xor
add
movsl
clc
std
sar
add
adc
add
pop
iret
and
add
iret
adc
clc
das
cwtl
mov
add
push
jecxz
sub
mov
pop
sub
clc
jae
add
add
sbb
xchg
xchg
nop
cmpsb
clc
mov
clc
push
cmpsb
clc
ret
fwait
inc
clc
jecxz
data16
or
clc
mov
add
inc
add
testb
jo
add
add
imull
add
xlat
lcall
cwtl
sahf
out
je
add
lcall
and
ss
ret
lods
pop
and
inc
clc
data16
xor
add
aam
xchg
arpl
add
inc
add
xbegin
add
sub
clc
lahf
jne
clc
lock
jge
je
popl
bound
add
imul
xchg
sbb
pusha
add
push
sti
jns
clc
dec
cs
test
test
call
add
test
lret
mov
clc
cmp
jp
add
xbegin
cmc
fcmove
and
push
dec
jmp
xchg
sahf
inc
add
jb
add
clc
and
add
clc
into
popa
add
mov
add
test
lcall
add
add
clc
mov
adc
or
mov
fdivrs
add
not
xor
add
sbb
push
or
jmp
ja
sub
add
inc
clc
sahf
aam
fs
inc
add
add
add
jl
pop
jae
add
add
inc
add
xchg
inc
clc
pop
cld
mov
mov
adc
add
outsl
dec
clc
dec
ds
inc
clc
fdivrl
cmpsb
clc
pop
mov
clc
es
ficompl
add
jle
or
mov
jg
mov
add
add
loop
adc
add
mov
clc
cmp
clc
lcall
add
add
push
icebp
stos
mov
or
add
cwtl
mov
loopne
pushf
push
clc
sub
sbb
add
je
pusha
add
xchg
insl
jb
add
pop
jns
clc
adc
add
clc
jp
pop
jns
jecxz
pop
lock
add
mov
jmp
mov
jmp
sar
jo
add
add
add
add
mov
cld
jmp
dec
dec
popa
sub
jle
pop
cltd
sub
clc
pop
lret
inc
clc
imulb
sub
clc
push
add
xchg
xchg
cmp
clc
in
icebp
loope
pop
std
fdivr
mov
int
enter
xchg
pop
sub
and
jmp
adc
mov
arpl
add
and
add
clc
push
xchg
jle
jno
add
fucomip
scas
xabort
sbb
xor
add
sub
arpl
add
outsb
pop
ljmp
jmp
sub
add
pushf
jle
clc
roll
add
jbe
clc
aam
add
pop
push
xor
add
cld
data16
ja
xchg
rcll
mov
aad
dec
push
add
lock
scas
aas
cwtl
cmp
cmp
cmp
jnp
clc
dec
out
dec
mov
clc
dec
cld
xor
add
and
rsm
xchg
aaa
xor
add
sub
ljmp
clc
mov
dec
test
add
add
clc
pop
fsubs
add
sub
clc
jne
mov
lea
ret
xchg
test
or
add
and
add
clc
xchg
add
add
add
ficoms
add
es
push
clc
push
mov
fwait
rcrb
add
ss
jmp
cld
jmp
test
enter
std
mov
and
add
clc
movhps
push
mov
aas
loopne
std
mov
imul
add
add
pop
pop
js
add
rclb
loop
test
imul
test
sahf
or
inc
add
call
cld
jmp
push
sub
xbegin
cli
ret
sub
jb
add
mov
sarb
jl
clc
sub
in
aaa
arpl
xor
add
dec
fidivl
add
sub
and
pop
adc
add
clc
add
add
clc
fcomps
add
fs
cmp
xlat
sar
or
mov
mov
cmp
add
adc
loope
or
add
jbe
xbegin
add
ss
pop
addr16
xor
add
clc
mov
push
inc
clc
dec
xchg
cmp
clc
mov
xor
add
push
lea
cld
jmp
imul
clc
dec
or
add
test
movsl
clc
cmp
repz
push
add
inc
add
test
xor
es
or
add
or
sub
es
sahf
clc
out
cmp
clc
hlt
sarl
xchg
or
add
xor
clc
clc
and
add
pop
cld
jmp
or
lahf
insl
clc
pop
sbb
and
pop
sbb
mov
fs
gs
push
add
cmp
and
add
add
test
fwait
push
add
xor
add
adc
adc
add
cmc
cmp
cmp
add
imul
loopne
out
mov
or
fwait
push
mov
repz
clc
push
jmp
or
mov
daa
clc
mov
addr16
mov
xlat
pop
inc
add
cmp
add
stos
add
add
js
clc
cld
push
add
pop
lock
mov
das
scas
scas
push
icebp
mul
clc
adc
cmp
jmp
sbb
ljmp
clc
push
or
xchg
inc
add
inc
add
scas
cwtl
adc
pushf
xchg
hlt
icebp
ds
add
dec
mov
clc
enter
ja
add
add
fildl
or
jmp
or
clc
mov
movb
nop
xchg
or
pop
fnstenv
clc
jno
add
test
add
inc
clc
test
cmpsl
clc
mov
clc
pop
adc
add
push
add
lret
inc
add
cmp
lahf
push
fistl
or
jmp
push
pop
sub
add
ljmp
call
mov
jmp
movsb
push
sub
popa
add
add
add
add
jmp
cmc
cmp
adc
add
and
js
ds
iret
stc
int3
loopne
addr16
fldenv
add
jno
add
xor
mov
and
add
ret
out
imul
add
dec
xor
add
iret
decb
psrld
add
int3
pop
rcl
popa
add
mov
clc
sar
add
daa
clc
jns
push
adc
add
cwtl
and
clc
cmp
clc
clc
imul
adc
add
clc
loop
daa
clc
cmp
sub
fisttpl
mov
ret
clc
or
stos
cmpsb
clc
jbe
clc
jno
add
add
adc
add
clc
pop
arpl
add
add
insb
dec
jecxz
lock
clc
pop
mov
lods
jecxz
sbb
add
pushf
out
stc
push
add
cmp
jp
fcompl
xbegin
imul
add
add
xchg
dec
imul
inc
clc
iret
out
mov
add
jns
rcrb
xchg
mov
or
outsl
or
iret
int
pop
or
cmp
jge
clc
push
add
jb
add
push
add
imul
stos
shlb
add
cmc
mov
inc
clc
mov
sbb
or
ss
ret
adc
or
inc
add
sub
clc
xchg
stos
or
xor
add
imul
add
or
movsb
xor
jne
clc
iret
xlat
stc
shr
mov
adc
add
add
xchg
data16
xchg
lods
out
clc
sub
cmp
clc
fcomps
clc
push
add
xabort
pop
in
stos
stos
je
clc
in
sub
add
add
or
sub
add
or
xchg
enter
std
gs
add
add
add
jmp
aas
sub
add
clc
test
jb
add
inc
clc
pop
clc
rcrb
add
dec
jno
add
clc
dec
push
add
xchg
xbegin
movsb
ss
ret
fwait
sub
sahf
push
mov
add
add
xor
add
push
cld
jmp
je
or
pop
cld
jp
daa
clc
loopne
jg
mov
or
add
sub
mov
jne
popa
add
cli
push
add
sbb
add
cmp
jmp
sub
dec
push
imul
add
add
ret
adc
add
jmp
clc
mov
add
pusha
add
sahf
test
cmc
repz
clc
push
decl
xchg
dec
add
push
or
cmp
clc
test
call
clc
stos
push
clc
pop
add
add
imul
add
add
aam
mull
jge
add
add
lods
push
push
jmp
push
test
imul
add
add
clc
ret
add
cmp
push
add
das
mov
pop
clc
ror
clc
daa
clc
mov
add
add
ss
push
add
and
mov
mov
insl
lcall
mov
cld
jmp
ja
and
add
adc
add
repnz
clc
jecxz
inc
clc
or
push
dec
mov
hlt
jle
mov
and
jmp
mov
clc
fsubp
clc
mov
add
sahf
test
mov
loop
outsb
out
ficomps
clc
or
and
add
clc
adc
add
and
add
imul
cmp
in
shll
clc
popa
add
pop
or
add
add
xor
add
sar
push
cld
jmp
and
sub
ss
mov
adc
pop
cmp
int
lea
cld
jmp
adc
clc
lahf
stc
testl
add
add
clc
cmp
rclb
or
out
movsl
clc
or
sbb
clc
mov
pop
ss
ret
sub
jns
clc
sub
loope
out
xor
add
add
push
clc
insl
mov
das
mov
jae
add
clc
sahf
inc
clc
pop
and
xchg
movsl
clc
data16
push
clc
mov
ret
clc
jae
add
add
arpl
add
add
push
movsb
clc
mov
clc
sbb
insb
insl
sub
clc
xchg
gs
dec
js
jnp
add
mov
mov
and
add
xchg
fistpll
pop
inc
clc
xor
add
cmp
xchg
movsl
clc
push
add
xlat
xor
add
mov
push
add
xor
add
pop
out
clc
repnz
clc
push
aad
clc
adc
add
adc
clc
sub
add
gs
jmp
mov
clc
xabort
aam
add
dec
and
add
clc
push
add
int
cmp
add
sub
stos
fldcw
clc
and
add
push
minps
bound
add
mov
lock
add
mov
cld
jmp
cmp
clc
and
add
add
je
movlps
add
int
ret
clc
add
add
add
arpl
add
dec
pushf
bound
add
mov
clc
mov
and
add
and
add
lcall
clc
jl
clc
mov
clc
int
add
test
in
mov
or
clc
ja
clc
in
pop
call
add
lret
cld
mov
mov
clc
inc
clc
js
jbe
adc
add
add
add
call
fisubrl
or
adc
add
push
clc
in
inc
add
imul
add
repnz
mov
fisttpl
dec
xor
add
add
lods
popa
add
cmp
ret
clc
or
push
add
call
push
icebp
inc
add
fwait
scas
push
lods
inc
add
inc
add
sbb
clc
or
add
dec
or
loop
cmp
popa
add
cmpsb
clc
popa
add
mov
add
jns
xlat
sub
add
mov
add
dec
insl
add
add
add
lcall
jmp
sub
add
add
clc
pop
div
jb
add
sbb
pop
add
lods
xchg
je
xchg
popa
add
pop
in
jb,pt
add
add
inc
clc
sbb
add
clc
jne
add
add
push
jmp
and
sub
stos
mov
xchg
movsl
clc
xchg
clc
pop
loop
dec
mov
mov
inc
clc
or
mov
clc
mov
and
add
add
push
jge
shrb
clc
test
ds
inc
clc
adc
add
add
rcrl
add
stos
mov
clc
dec
int3
adc
add
clc
xchg
push
shlb
add
mov
dec
sub
add
jle
cmp
int3
jecxz
je
add
pop
jb
add
repz
xlat
push
add
cmc
mov
mov
or
cmp
clc
sub
fwait
iret
xchg
xbegin
add
pop
rcl
mov
aad
mov
add
add
ds
daa
clc
inc
clc
aas
push
jp
add
dec
push
adc
xchg
jecxz
sti
fs
sub
add
add
sbb
fbstp
add
clc
lcall
stos
pop
and
lea
notb
add
popf
out
bound
add
dec
add
test
add
popa
add
test
mov
clc
in
outsl
xchg
jl
ljmp
add
cmp
add
test
clc
mov
mov
jns
aaa
cmp
jge
clc
jo
add
clc
mov
jmp
aas
cmp
push
add
cli
imul
add
clc
leave
rolb
movsb
clc
jmp
clc
lcall
xabort
cmpsl
clc
cmc
out
aas
mov
jle
adc
add
add
and
add
clc
add
add
clc
jge
ret
icebp
sbb
dec
push
add
ficompl
push
mov
cld
jmp
sbb
clc
fiaddl
jae
add
pop
imul
add
mov
xchg
cmpsb
clc
int
lods
lcall
clc
fiadds
shll
add
or
jge
add
cmp
mov
sbb
test
sbb
clc
push
add
pop
fsubrl
add
pusha
add
mov
add
add
clc
mov
clc
xchg
ss
std
xbegin
pop
aam
pusha
add
cmp
lods
idivb
inc
clc
cmp
clc
in
xor
add
add
fdivrp
adc
add
or
inc
add
in
adc
add
sub
jmp
outsl
cmp
enter
test
push
add
cmp
pushl
cld
jmp
outsl
and
js
jecxz
ret
mov
jmp
clc
push
add
cld
jmp
cmp
add
add
add
add
sbb
jae
add
clc
push
add
mov
or
jmp
cmpsb
cmp
sbb
clc
lret
js
sub
add
xor
clc
scas
pop
psubsw
aad
frstor
lods
pop
clc
gs
mov
out
in
xor
add
notl
out
ret
clc
xor
mov
pop
inc
add
mov
add
add
add
shl
clc
cmp
fldl
add
out
enter
adc
clc
cld
jne
insl
lock
xlat
out
fptan
cltd
cltd
cmp
pop
clc
mov
sahf
dec
jmp
jb
add
push
sub
cmp
sbb
movsb
clc
mov
push
add
cwtl
pop
xchg
sbb
cld
jmp
mov
add
sub
fs
cld
shll
add
cld
jb
add
add
in
mul
clc
ljmp
adc
add
add
sar
sar
mov
clc
or
clc
aad
sar
aad
movsb
clc
dec
adc
jmp
sub
iret
cli
or
add
into
gs
mov
add
sti
mov
icebp
inc
add
push
push
jno
data16
xor
add
add
mov
sar
add
out
mov
daa
clc
or
in
push
add
push
or
clc
jns
push
add
cmpsb
clc
xlat
sar
fisttps
clc
xor
add
add
mov
or
add
aas
jle
sub
maxps
mov
add
pop
cmpsl
clc
mov
mov
add
sarl
mov
xor
add
add
add
test
or
push
add
in
jae
add
add
add
test
clc
test
scas
pop
test
fwait
cltd
rep
xorps
lahf
mov
dec
dec
icebp
pop
push
inc
clc
ljmp
clc
popf
adc
jo
add
add
push
pop
xor
inc
add
xchg
mov
mov
ja
add
push
pop
data16
xor
iret
scas
lock
add
pop
pop
in
xchg
jo
add
or
add
xabort
paddw
add
pop
mov
add
add
mov
clc
loope
jl
add
or
data16
data16
adc
clc
es
xor
add
add
add
sbb
push
add
jbe
jge
mov
pop
outsl
push
hlt
pop
jo
add
scas
lahf
jbe
sub
mov
pusha
add
rorl
cwtl
jp
pop
scas
aad
aaa
mov
clc
xchg
sar
add
repnz
scas
in
fistpl
pop
cmp
clc
arpl
add
lea
cld
jmp
add
stos
xchg
jle
cmp
xor
add
stc
push
mov
cld
jmp
cmp
xchg
je
insl
or
dec
jp
and
add
clc
dec
inc
cld
jmp
mov
clc
mov
clc
mov
adc
add
jl
clc
add
add
hlt
xor
add
stos
push
in
insb
push
cmp
hlt
insb
mov
dec
mov
add
jbe
cwtl
je
add
cmp
add
lret
nop
mov
cmp
clc
lods
xor
add
xor
add
cmpsb
clc
push
clc
loope
mov
dec
inc
clc
popa
add
jnp
xor
add
insl
fwait
cmp
xlat
fnstcw
mov
clc
adc
add
mov
test
add
adc
add
add
and
loop
mov
push
sub
repnz
test
jmp
and
add
add
popa
add
arpl
add
add
cwtl
icebp
clc
out
ret
clc
xor
add
add
clc
xor
inc
clc
lret
cmp
jo
add
jmp
and
imul
mov
dec
loope
cld
pop
xchg
push
mov
add
dec
fld
clc
mov
mov
mov
adc
jmp
outsl
sub
cmp
clc
dec
pop
insl
repnz
mov
push
movsl
clc
fstpl
push
add
dec
mov
cwtl
sub
add
int
in
xbegin
addr16
or
xchg
and
add
clc
sbb
mov
clc
or
xchg
das
call
fiaddl
add
psrlq
lcall
sub
cmp
and
add
xchg
inc
clc
outsb
adc
add
mov
out
std
pop
aas
or
mov
pushf
addr16
loop
dec
dec
movsb
clc
jp
je
xchg
lock
cmp
jnp
mov
and
je
clc
pop
pop
clc
cmp
mov
int3
inc
clc
loop
lret
movswl
cld
jmp
push
push
jg
nop
js
out
inc
add
nop
leave
sub
sub
add
add
pushf
aas
hlt
inc
clc
sarl
ret
clc
movsb
clc
lods
in
test
arpl
add
insb
sar
out
xbegin
add
clc
xchg
xbegin
clc
ja
test
pop
adc
add
dec
in
mov
js
in
xchg
test
lods
gs
mov
inc
clc
rorl
jno
add
add
test
sahf
lock
cs
push
fdivrp
lcall
xor
clc
jge
add
ret
add
mov
add
mov
enter
int
jb
add
clc
shlb
add
sub
add
push
add
pop
sub
cld
aad
clc
test
or
mov
clc
std
sub
add
add
add
xor
add
jge
fcmove
faddl
mov
add
repz
add
push
add
or
cmp
push
mov
cld
jmp
fs
mov
add
and
add
push
fs
xchg
cmp
faddl
clc
sub
add
adc
clc
data16
ds
add
pop
sar
sbb
clc
jmp
add
lea
mov
pop
mov
push
inc
add
sbb
sub
add
sub
in
sar
add
cld
jmp
inc
dec
cmp
mov
clc
mov
add
out
ja
pop
das
scas
push
mov
cld
jmp
or
cmp
pop
xor
add
sub
lret
sahf
aad
ret
clc
sub
cli
aam
pop
mov
shr
mov
add
add
sub
clc
mov
cmpsl
clc
mov
jb
add
jns
inc
clc
add
add
jae
add
add
and
pop
enter
test
clc
and
add
mov
mov
clc
outsb
test
xabort
jo
add
clc
cwtl
out
adc
add
add
jmp
or
stc
mov
mov
dec
mov
add
sti
sti
mov
decl
ss
ret
sub
jae
add
pop
mov
pop
jg
ljmp
clc
ret
or
idiv
xchg
sub
add
mov
cmp
clc
and
add
add
fcom
cwtl
adc
add
jmp
add
repnz
clc
jns
clc
jnp
mov
add
test
clc
jmp
inc
clc
jg
clc
cmp
icebp
lcall
dec
pushf
jne
add
sahf
jl
inc
add
aad
xchg
loopne
xor
add
cmp
hlt
xchg
fs
loop
add
xor
sub
in
jnp
sahf
dec
movsb
clc
mov
clc
mov
mov
mov
sub
add
add
js
and
add
jne
clc
aaa
jae
add
clc
push
add
cltd
fsubrs
jae
cld
jmp
test
mov
mov
add
sti
jae
add
lret
sbb
xor
add
imul
aad
add
aaa
sub
add
dec
setb
add
sub
push
cld
jmp
sbbb
clc
and
add
iret
add
add
xlat
into
lods
mov
adc
add
clc
stos
pop
das
jge
clc
cs
add
cs
sar
add
loope
ja
cmpsb
clc
inc
add
sub
adc
add
add
push
pop
and
data16
aas
xor
add
sbb
add
jne
pop
repnz
aas
mov
insl
adc
clc
push
push
out
fwait
dec
stos
sar
push
add
cmp
sbb
movsl
clc
xor
into
cmp
inc
add
cli
xchg
push
rclb
add
jp
clc
mov
add
cld
jmp
aaa
push
in
dec
mov
xor
add
xchg
cmpsb
clc
inc
clc
adc
add
sub
cmp
add
push
in
fisubrl
lods
popa
add
mov
popf
insb
lahf
int
shrl
clc
and
add
clc
fsubs
add
mov
adc
add
add
sar
clc
popa
add
sar
cli
out
sub
clc
mov
clc
pop
repnz
add
outsl
leave
jp
clc
call
push
clc
cmp
jo
add
clc
mov
clc
cmp
jmp
push
sbb
add
mov
repz
add
and
add
xchg
add
add
add
sbb
clc
mov
out
sarl
add
pop
clc
fsubrs
add
fldenv
clc
sbb
mov
pop
test
jge
clc
repnz
roll
out
pop
jmp
add
sub
clc
push
daa
clc
neg
mov
cld
jmp
fucomi
or
add
dec
jp
push
add
jp,pn
mov
clc
lock
add
out
clc
int3
mov
ljmp
jno
add
leave
xchg
adc
add
and
add
pop
loop
mov
lahf
iret
xchg
aaa
sub
clc
bound
add
add
lret
push
clc
jp
add
sbb
clc
mov
iret
mov
fdivr
idivb
clc
std
je
jno
add
js
add
fnstsw
js
es
mov
pop
scas
mov
xchg
cmpsl
clc
and
add
insl
adc
add
add
mov
addr16
and
ret
clc
cltd
mov
mov
lret
dec
aam
pop
inc
add
xor
add
movsb
clc
cmp
push
cld
jmp
fwait
xor
or
clc
sbb
cld
jmp
add
sahf
es
cmp
add
add
pop
clc
push
in
bound
add
add
adc
add
int
in
push
push
add
cli
repz
add
mov
imul
out
inc
clc
loope
sti
movsb
clc
mov
clc
mov
dec
xor
movsb
clc
xchg
out
pusha
add
dec
sbb
clc
repnz
fstpl
add
pusha
add
cs
clc
pusha
add
cld
in
or
dec
adc
add
add
add
clc
movsl
clc
fldt
cmp
push
cmp
aas
sbb
mull
mov
clc
in
mov
mov
imul
mov
sar
add
xlat
out
cltd
jmp
pop
mov
jmp
push
push
cmpsb
in
jecxz
popf
add
mov
cmpsl
clc
in
int3
pop
clc
fwait
ljmp
add
or
clc
es
test
mov
add
xor
sbb
test
adc
add
push
pop
and
inc
clc
scas
add
add
push
mov
roll
add
clc
stos
not
sar
clc
xchg
fstpl
add
clc
jge
mov
clc
push
add
mov
add
dec
mov
mov
clc
jbe
pop
rcrb
add
cmpsb
clc
cli
call
jl
add
add
add
inc
clc
lods
mov
add
cmp
add
cld
jmp
sbb
and
add
stos
xchg
jb
add
into
loop
mov
pop
clc
mov
inc
clc
lock
add
add
sti
jne
insb
into
xchg
pop
sbb
jne
lret
add
clc
in
cmp
js
mov
addr16
in
dec
xbegin
loope
into
pop
pop
outsl
ret
clc
inc
add
jmp
clc
test
sub
add
and
push
cmp
add
adc
push
clc
jo
add
clc
cmp
cli
aaa
cmp
add
loop
xor
clc
repnz
inc
add
cmp
add
cmc
notl
push
add
cld
jmp
jno
add
pop
add
cmp
xchg
jae
add
mov
clc
out
repz
add
cld
jmp
test
add
mov
jecxz
xchg
xchg
mov
neg
iret
ljmp
daa
clc
xlat
adc
add
enter
add
clc
call
in
mov
add
add
mov
shlb
ja
fsub
clc
xabort
test
push
xbegin
lock
sahf
flds
cmp
cmpsl
clc
dec
push
add
test
add
sbb
inc
add
dec
hlt
lahf
push
clc
push
ljmp
jne
das
aas
or
jbe
add
test
stos
repz
xor
add
test
xabort
add
pop
insl
call
jmp
movsb
mov
out
xchg
cmp
add
add
cmp
pusha
add
sbb
push
in
jmp
sub
je
in
push
add
ret
clc
jmp
jmp
add
push
aam
push
add
sahf
ss
inc
add
or
into
xchg
mov
inc
add
daa
clc
test
or
clc
clc
cmp
cld
jmp
add
xor
es
sub
cmp
clc
xchg
sub
inc
add
test
sar
clc
mov
jae
add
xor
jb
add
add
add
fs
into
or
xor
add
add
aam
mov
pop
mov
clc
or
insl
pusha
add
fwait
rcrl
test
stos
mov
mov
sbb
jge
fstpt
mov
jmp
push
das
cwtl
jo
add
add
or
dec
mov
popf
test
add
push
call
mov
lret
fcoms
clc
sbb
add
xchg
jecxz
lahf
mov
sub
sbb
clc
data16
pop
test
cmp
mov
pop
clc
mov
imull
or
cmp
add
in
cmp
add
add
mov
cmp
dec
cli
es
mov
clc
in
dec
push
clc
xbegin
pop
insb
dec
xor
add
xor
ret
clc
jmp
icebp
cmp
clc
sbb
adc
add
or
and
add
cmpsl
clc
clc
iret
cmp
clc
popa
add
and
add
cmp
inc
add
dec
pop
cmp
xchg
lea
clc
das
inc
add
stc
sbb
sbb
cld
jmp
sub
or
imulb
jne
mov
lock
clc
jnp
mov
add
int3
or
cmp
mov
cmp
add
cmp
push
inc
clc
fstpl
add
mov
add
cmp
popf
cmp
aaa
add
add
inc
clc
dec
pop
out
sub
add
jne
cld
jmp
jmp
add
clc
fdivl
add
add
cmp
aaa
inc
clc
ljmp
adc
add
push
add
aas
scas
iret
fistl
add
movsl
clc
jmp
xor
clc
into
cmp
lahf
movsl
clc
mov
fsubl
add
add
insb
cmp
add
pop
imul
add
faddl
mov
mov
clc
inc
clc
lcall
xchg
call
add
stos
cltd
inc
add
mov
xchg
xchg
movsb
clc
mov
clc
mov
fs
in
jo
add
clc
sub
mov
jecxz
test
fsub
clc
and
lret
or
mov
clc
mov
adc
and
add
sub
clc
fdivs
add
clc
dec
fwait
mov
test
add
mov
jecxz
test
clc
fs
cmpsb
clc
outsb
sar
add
xchg
jns
clc
dec
and
add
cmp
add
mov
add
push
leave
icebp
mov
or
clc
in
outsl
dec
in
and
xor
add
negl
sub
movsb
clc
add
add
xchg
push
push
ret
lea
pushf
xchg
add
add
mov
xchg
xchg
hlt
pop
js
pop
clc
push
push
sbb
clc
xor
add
clc
ja
clc
aam
clc
xlat
cmp
add
push
or
add
testb
xchg
push
add
or
add
xchg
jp
mov
cld
jmp
sub
ret
clc
jecxz
clc
ds
add
sbb
jmp
add
push
xchg
push
add
sbb
movsb
clc
fists
clc
outsb
lret
push
mov
add
mov
add
xchg
sahf
cmp
add
lods
jmp
in
dec
imul
cmp
es
jg
jle
add
pop
testb
xor
add
fs
cmpsl
clc
dec
pop
xor
add
pop
dec
mov
adc
add
loop
pop
sub
pop
imul
or
inc
clc
lret
adc
add
mov
add
cmp
jb
add
push
add
cltd
cmp
pop
sub
imul
cld
jmp
mov
add
pop
jl
add
pop
inc
add
enter
cmp
lahf
push
add
push
fcmovu
xlat
call
cmp
cmp
movsb
clc
adc
add
add
xchg
cld
stos
ret
clc
lock
outsl
fs
dec
fdivrl
mov
es
cmp
dec
lret
add
add
jl
clc
xor
add
clc
arpl
add
add
cld
jmp
sub
add
clc
neg
lea
cmp
xor
clc
xor
add
jl
sub
js
add
ljmp
ja
mov
xchg
pusha
add
mov
push
add
cmp
lods
push
scas
mov
xchg
xchg
cmp
test
adc
add
add
add
lock
out
xor
add
and
add
xchg
jno
add
add
in
sbb
sbb
jmp
orb
dec
mul
clc
adc
add
ljmp
push
mov
add
xor
add
jne
add
loop
push
in
xchg
sbb
test
pop
scas
lods
stos
mov
dec
cmp
pop
out
mov
lahf
mov
imul
mov
add
and
dec
mov
adc
add
clc
mov
jge
cmp
data16
test
pop
clc
adc
add
push
add
pop
pop
popa
add
push
push
add
and
add
shrl
add
addr16
or
clc
mov
sbb
pop
mov
clc
mov
add
shlb
add
mov
das
inc
add
pop
imul
clc
in
xabort
outsl
outsl
test
xchg
lea
add
inc
in
push
ret
or
or
or
clc
cmp
cmp
sub
clc
in
jnp
mov
xor
sar
xabort
movsl
clc
test
sbb
clc
jb
add
scas
sbb
xbegin
cwtl
and
int
clc
and
add
pop
mov
clc
pop
mov
mov
add
lcall
add
add
jp
and
cld
jmp
cmp
sar
clc
hlt
and
add
jmp
cld
jmp
adc
add
add
add
add
push
cmp
adc
add
lods
and
add
add
loop
aam
jne
add
ret
clc
xchg
cmp
add
inc
add
xor
add
add
add
add
mov
clc
popf
pop
pop
sub
clc
outsb
adc
add
sbb
stos
push
mov
jne
cld
jmp
sbb
add
popf
lea
cmp
add
clc
add
add
clc
out
push
clc
scas
leave
jno
add
clc
xor
add
outsb
push
je
cld
jmp
jl
xabort
cwtl
data16
sar
adc
add
clc
clc
push
jge
clc
add
add
add
sbb
clc
sar
add
addr16
sti
xchg
mov
clc
xchg
adc
add
dec
jecxz
inc
clc
dec
push
add
mov
enter
out
shrl
jmp
mov
sub
fwait
rcr
cmpsb
clc
out
fmull
cmpsl
clc
jge,pn
popf
xor
add
add
xchg
lods
push
add
outsb
ficoml
inc
add
fwait
popf
inc
clc
in
sub
add
cmp
xchg
or
dec
shll
mov
pop
pop
xabort
add
jno
add
fisttps
dec
mov
repnz
add
cmp
fadds
jge
add
es
das
push
clc
xor
clc
pop
outsb
filds
add
pop
sbb
push
ret
cld
jmp
and
subb
cmpsb
clc
roll
je
mov
add
aaa
sbb
add
push
add
aad
xchg
lods
jns
inc
add
out
adc
add
add
mov
clc
lods
dec
and
add
mov
sar
clc
cmp
cmc
cmp
add
cmp
cld
mov
clc
sbb
fsubrl
gs
lock
clc
pushf
add
add
fs
stos
stos
repz
cltd
and
add
cld
xchg
out
inc
clc
jbe
clc
sbb
clc
push
jmp
add
jno
add
movsb
clc
mov
add
mov
fsubl
cmp
aad
push
cld
jmp
popa
pop
clc
pop
cmp
mov
add
ja
mov
es
mov
add
cli
fmul
mov
pusha
add
mov
test
add
stos
xor
add
add
or
sti
cld
jmp
xchg
sbb
sub
outsl
std
push
cmp
mov
int
add
sub
jl
incl
xchg
cmp
jecxz
inc
clc
mov
add
add
fisttpll
clc
mov
add
or
add
int
aaa
pop
sbb
pop
xchg
notb
in
ja
clc
xor
add
clc
sarl
inc
add
add
adc
add
clc
es
bound
add
push
add
divb
add
jmp
clc
mov
mov
clc
std
imul
push
ret
sub
push
or
pop
pop
iret
sub
dec
mov
mov
clc
push
not
je
xabort
add
cmc
outsb
mov
jmp
imul
clc
dec
test
mov
add
add
add
clc
xchg
shll
xchg
movsl
clc
mov
clc
testl
push
clc
sbb
clc
push
push
mov
cld
jmp
xor
sub
jl
add
pop
push
clc
test
sub
clc
push
shlb
add
pextrw
mov
mov
andl
push
add
mov
loopne
add
add
clc
sub
mov
clc
test
cltd
push
aam
aaa
scas
adc
add
push
jmp
cld
jmp
xor
clc
mov
out
ficomps
jecxz
add
push
add
into
cltd
insl
mov
xchg
push
add
aaa
cmp
int
fld
clc
sub
cmp
jae
add
add
cmpsl
clc
pop
jns
or
int
lcall
dec
cmp
jg
mov
das
push
mov
cld
jmp
sub
sbb
or
add
cmp
scas
push
add
cld
jmp
jp
push
nop
shr
cmp
clc
mov
outsl
arpl
add
jmp
dec
jbe
cld
jmp
je
sub
mov
pop
inc
clc
mov
out
push
mov
dec
loopne
or
mov
repnz
cmp
std
scas
clc
or
clc
sbb
clc
pop
inc
add
and
add
clc
lock
insl
inc
add
adc
nop
mov
mov
clc
cmp
shrb
add
outsl
ss
push
sar
xor
lret
popf
jae
add
dec
int
clc
sbb
scas
in
out
test
cmpsb
clc
data16
cmpsl
clc
dec
dec
sbb
outsl
xor
push
add
add
add
cmpsl
clc
popa
add
xchg
cmp
mov
mov
lea
mov
add
inc
clc
fidivl
aad
clc
jbe
jge
int
add
in
add
nop
out
lahf
insb
adc
add
stos
divb
cld
cld
jmp
imul
add
xor
add
cli
cmp
clc
push
add
enter
shlb
push
ret
je
mov
dec
jecxz
rorb
out
and
add
add
cmc
xor
add
and
add
inc
clc
mov
add
insl
int3
jae
add
add
jl
fwait
cmp
mov
sbb
push
ret
xor
add
and
add
fs
jmp
test
add
add
cld
jmp
cmpsb
movsb
psadbw
rsqrtps
add
loop
movsb
clc
lret
mov
clc
sar
add
loop
sar
push
clc
adc
add
or
fldenv
add
sub
cld
cmovbe
int
into
inc
clc
sarl
push
movswl
cld
jmp
jp
inc
clc
push
mov
push
xchg
scas
clc
lcall
add
addr16
sbb
lea
add
jb
add
add
hlt
mov
cltd
jg
mov
cld
jmp
add
sub
daa
clc
fs
dec
repnz
add
dec
mov
pop
scas
dec
out
jnp
add
inc
clc
xor
add
fnstenv
mov
add
xor
add
xchg
rolb
clc
cld
clc
xchg
push
jmp
lea
and
add
add
mov
clc
push
arpl
add
add
js
push
pusha
add
jecxz
clc
shrl
cs
sub
ljmp
clc
test
xor
add
lret
int3
bound
add
pop
ljmp
mov
clc
mov
jmp
clc
cli
mov
stc
and
scas
frstor
cwtl
or
push
pop
and
add
fsubrp
inc
add
nop
fwait
sub
inc
clc
pop
clc
pop
clc
pushf
xor
add
add
xchg
js
push
mov
pop
inc
clc
lock
mov
add
add
mov
add
sbb
inc
add
sbb
sahf
fsubl
cmp
cmc
jmp
jb
add
add
cmp
add
ds
clc
pop
mov
add
add
clc
inc
add
aam
clc
testb
cwtl
into
inc
add
mov
xlat
in
in
leave
pop
mov
ss
add
movsl
clc
lret
add
stos
cmp
loop
xor
add
hlt
push
nop
dec
jbe
leave
inc
add
mov
clc
push
add
sarb
jnp
clc
sbb
fs
lods
mov
add
mov
add
add
dec
mov
clc
cmp
clc
out
push
add
xchg
sar
xchg
js
shll
sub
movsb
clc
fdivs
jmp
jp
sub
hlt
sahf
push
cmp
fwait
xor
add
ss
ret
sub
pop
cmp
adc
add
rcll
imul
xbegin
es
lods
dec
sbb
clc
mov
clc
jp
js
xchg
mov
sar
mov
clc
mov
mov
add
cmpsl
clc
es
jge
cmpsl
clc
test
dec
cmp
clc
jg
aas
mov
scas
clc
mov
push
jns
cmp
pop
jp
add
mov
mov
outsl
iret
out
shlb
clc
stc
imul
add
mov
clc
and
add
mov
push
add
call
push
ret
movsb
test
sub
push
add
jmp
cli
test
push
ljmp
cmp
clc
dec
inc
add
push
insb
pop
clc
lret
std
and
in
into
mov
clc
aam
mov
clc
fwait
shll
add
clc
shll
clc
mov
add
inc
add
inc
add
shll
add
clc
sahf
mov
clc
xchg
mov
adc
add
clc
mov
push
push
mov
add
add
aam
add
mov
inc
clc
bnd
pop
or
clc
push
add
sub
or
inc
clc
pop
add
add
gs
mov
in
and
add
movsl
clc
mov
insl
clc
mov
cltd
sbb
sti
push
add
inc
clc
cmc
inc
clc
not
cmp
push
and
add
decl
pop
push
add
sbb
cmp
das
mov
or
loop
ficoml
add
nop
sbb
xor
add
add
adc
add
inc
add
insl
ja
jns
clc
inc
clc
mov
clc
adc
push
fs
push
clc
cmp
clc
pop
outsb
ds
es
cmp
daa
clc
hlt
mov
add
mov
add
jmp
dec
cmpsb
clc
aam
es
add
add
inc
clc
cmp
jl
mov
clc
imul
and
add
int3
lcall
xchg
loop
mov
add
mov
and
add
sti
push
add
sbb
fdivl
push
pop
test
xchg
dec
out
xchg
and
add
lock
adc
add
add
fisubl
add
push
xchg
sarl
or
xor
cmp
add
data16
mov
cli
test
rcl
fs
sub
sbb
fwait
push
mov
arpl
add
pop
das
add
add
add
jno
add
imull
test
add
cld
jmp
push
add
jmp
add
add
negb
clc
mov
fistl
add
sbb
lret
and
push
clc
mov
push
add
push
add
mov
push
lock
add
add
add
mov
pop
and
add
cmp
add
ficoms
clc
push
jmp
cmpsb
insb
fwait
pop
add
add
cs
xchg
push
mov
sbb
je
add
mov
clc
fdivl
push
mov
je
jns
negl
push
add
mov
pop
add
add
add
inc
add
js
out
mov
xchg
in
cmp
dec
sar
sub
push
jge
sbb
es
sbb
clc
cwtl
mov
sub
cmp
xchg
fidivrl
pusha
add
fnsave
add
add
into
mov
dec
je
mov
and
add
jne
clc
xchg
cmp
or
add
jmp
push
push
jmp
fs
sub
and
add
mov
in
sbb
add
add
add
aad
push
iret
xchg
jae
add
fdivl
icebp
sub
add
je
or
shll
out
cwtl
adc
add
and
jmp
or
sub
sar
push
add
cld
jmp
scas
pop
das
sbb
clc
bound
add
add
add
push
add
pusha
add
and
add
aam
cmc
and
add
dec
icebp
insb
out
xchg
sub
clc
cmpsb
clc
and
jg
fists
cmc
mov
mov
sti
sbb
clc
rcrb
clc
aas
cmp
push
add
cmpsb
clc
gs
add
add
scas
jp
add
in
jmp
test
jmp
push
xbegin
clc
or
enter
int3
xchg
jb
add
jae
add
add
clc
pop
add
add
add
adc
mov
adc
jne
clc
int
jl
mov
clc
dec
repz
fidivs
aam
xchg
push
clc
and
add
out
dec
inc
clc
fs
push
add
adc
add
shrl
pop
push
add
inc
add
and
add
mov
clc
pushf
movsl
clc
lea
push
add
mov
dec
push
mov
push
ss
ret
push
xchg
mov
add
clc
mov
add
mov
cmp
add
call
cld
jmp
pop
data16
clc
xchg
jo
add
clc
pop
push
movsb
ss
ret
aas
lea
add
cld
jmp
adc
mov
mov
clc
dec
adc
add
lock
inc
add
mov
jns
inc
add
sub
mov
stos
stos
xchg
add
add
add
add
add
arpl
add
mov
cld
jmp
add
sub
mov
repz
test
std
add
add
clc
stos
push
xor
add
leave
xchg
inc
clc
mov
add
nop
repz
add
push
add
dec
cmc
jl
jb
add
jno
add
lcall
jmp
jno
lods
lea
out
inc
clc
xchg
scas
pushl
sar
out
or
add
pop
xchg
scas
and
add
cmp
xchg
inc
add
sbb
inc
clc
imul
clc
es
outsb
and
add
shlb
push
add
mov
iret
xchg
sar
clc
push
pop
pop
aas
xabort
push
clc
mov
add
pop
cld
jmp
andb
fs
add
clc
lods
cmp
inc
clc
filds
fwait
jo
add
xor
add
jnp
mov
jmp
lret
pop
pop
pop
xchg
jno
add
sar
dec
push
add
sub
clc
nop
fdivs
clc
sbb
push
add
and
add
push
push
jb
add
cmp
jp
jne
cld
jmp
mov
mov
add
add
in
dec
mov
roll
add
das
inc
add
fdiv
aas
je
clc
jbe
add
clc
mov
lcall
mov
add
insb
sar
add
and
add
clc
dec
popf
cmp
add
add
add
jmp
sub
sbb
cltd
cmp
clc
rcl
jne
push
xor
add
xor
add
xchg
jb
add
push
test
xor
add
mov
add
hlt
in
and
add
add
sub
ss
cld
jmp
repz
stos
mov
inc
clc
scas
stos
sar
xchg
fsubl
add
jecxz
movsb
clc
cmp
out
xchg
xchg
sub
ljmp
and
add
dec
sub
add
add
and
add
or
clc
dec
mov
clc
aad
pop
adc
clc
outsb
sub
cmp
add
out
push
mov
push
mov
cld
jmp
popa
fwait
sub
stos
fwait
pop
fdivr
mov
push
sub
jl
add
in
cmpsl
clc
pop
clc
fnsave
add
rcll
mov
repz
add
rcrb
aad
clc
lahf
gs
pop
mov
dec
test
jbe
clc
cmpsb
clc
out
out
ret
clc
and
loop
xor
add
out
mov
dec
aaa
inc
add
out
clc
jp
sub
clc
xor
add
cmp
push
add
js
push
and
add
sub
or
add
add
ret
xlat
jl
pop
clc
arpl
add
sbb
add
jp
sub
pop
pop
mov
add
sbb
add
mov
lret
cmpsb
clc
ret
clc
iret
jns
mov
add
add
sub
stc
mov
push
add
cli
mov
test
inc
add
cld
jmp
ss
mov
pop
int
jne
clc
add
add
pusha
add
mov
xchg
mov
add
dec
sar
clc
and
add
add
add
je
clc
aaa
mov
cmp
clc
cmc
and
add
add
fwait
cltd
push
je
cld
jmp
mov
jnp
add
add
clc
mov
pop
adc
add
ret
clc
pop
mov
pop
and
add
sahf
adc
jo
add
and
add
cmp
imul
fmul
mov
clc
jge
clc
fs
jg
add
aam
mov
jmp
xchg
outsl
test
dec
insl
sbb
add
mov
add
mov
clc
sub
jno
add
jmp
or
add
add
sub
add
stc
call
imul
enter
cmpsb
clc
cmc
fimuls
cwtl
cltd
xor
add
pop
insb
stos
adc
add
dec
scas
jge
out
dec
mov
add
add
clc
movsl
clc
cmp
jmp
or
sub
inc
add
cli
out
int
clc
test
add
push
add
add
add
stc
lods
adc
add
mov
xor
clc
popf
shlb
add
sahf
pop
insb
loopne
xchg
jg
jg
cwtl
xchg
cmp
sub
outsb
sub
add
add
mov
int
clc
bound
add
add
adc
add
xchg
jp
in
sbb
add
cmpsb
clc
inc
add
pop
xor
add
add
and
add
add
xchg
push
mov
add
addr16
inc
clc
pusha
add
fs
cmp
sti
gs
loopne
ja
loope
or
mov
clc
mov
mov
add
jle
add
sub
clc
xchg
mov
cld
xchg
aad
xbegin
add
add
stos
cmc
mov
add
jecxz
and
push
cmp
sub
clc
test
add
add
sub
cmpsb
clc
mov
fidivrs
jnp
out
xor
add
add
jl
sbb
das
cmp
clc
mov
int
add
jne
push
clc
xchg
loope
jno
add
add
cmp
cmp
scas
insl
cmpsl
clc
adc
add
mov
into
mov
add
out
sbb
add
xchg
pop
mov
cwtl
adc
add
cmp
lcall
fildll
push
add
movsb
clc
aam
clc
in
rcrl
pop
adc
add
add
test
mov
in
faddl
ret
and
sub
loop
dec
lods
add
add
add
and
add
add
mov
pushf
push
movsl
clc
xchg
scas
and
jne
inc
add
sahf
add
in
lock
add
in
ja
dec
mov
clc
repnz
mov
clc
sub
cmpsl
clc
aaa
or
add
add
clc
mov
in
addr16
cmp
mov
add
cmpsb
clc
push
xbegin
clc
jns
clc
lods
jne
mov
pusha
cld
jmp
inc
aaa
add
ds
dec
je
add
in
mov
clc
xchg
and
add
mov
imul
sub
mov
push
add
repnz
lock
loopne
outsb
cmp
clc
or
clc
or
xchg
or
dec
je
cmp
add
cld
jmp
jg
sub
push
mov
jbe
mov
and
add
rclb
into
in
mov
cmp
mov
mov
add
jmp
es
push
push
jmp
pop
and
hlt
fimull
clc
add
add
ret
clc
or
clc
js
adc
add
clc
inc
clc
add
add
and
add
add
stc
pop
push
clc
inc
clc
sahf
pop
cmp
clc
sbb
ss
ret
scas
sbb
sbb
clc
pop
clc
lret
add
cmc
add
add
add
iret
push
add
xchg
das
div
outsb
push
add
cmp
dec
sub
hlt
push
add
mov
jne
add
lret
pop
cwtl
fwait
dec
addr16
sub
lret
fucomip
scas
mov
clc
inc
add
stos
mov
or
clc
dec
pop
or
mov
clc
cmpsb
clc
es
or
cld
jmp
ja
dec
aaa
aas
jnp
clc
cwtl
xlat
mov
clc
fisubrs
pusha
add
sub
add
inc
add
dec
clc
jb
add
add
add
sbb
clc
in
inc
clc
jo
add
mov
mov
jmp
sub
sub
add
add
jno
add
daa
clc
roll
inc
add
inc
clc
cmpsb
clc
sar
clc
rcrb
add
ljmp
scas
shll
out
fnstenv
add
clc
jecxz
mov
add
dec
ss
ret
pop
jg
fwait
push
add
mov
stos
pop
int
clc
push
lock
clc
or
adc
add
clc
jge
cld
xchg
dec
mov
lcall
add
and
add
add
cmp
jb
add
scas
movsb
clc
leave
imul
add
mov
inc
clc
loop
clc
out
jbe
cwtl
lret
clc
push
data16
sbb
mov
cld
jmp
scas
xchg
xchg
popa
xor
cmp
add
imul
clc
adc
add
add
add
add
sar
cld
xlat
cmpsl
clc
jmp
mov
push
clc
movsb
clc
mov
mov
cld
jmp
nop
dec
sub
pop
je
call
add
lods
bound
add
clc
cmp
lret
inc
add
fxch
xor
fdivrl
lock
add
jne
dec
xchg
ret
clc
daa
clc
insb
xor
add
fwait
in
sbb
faddl
add
fldl
add
add
mov
or
jne
mov
clc
jl
clc
add
pop
outsl
lret
clc
jle
mov
imul
add
jb
add
fidivrl
lea
add
add
pop
clc
jns
xchg
mov
add
sbb
test
repnz
cld
jmp
add
add
aam
sahf
push
add
add
add
add
clc
inc
add
loope
sahf
sahf
cmp
xor
add
fs
mov
push
cmpsb
clc
fildl
add
mov
clc
icebp
add
xor
add
clc
mov
add
push
ja
add
cld
jmp
sub
sahf
push
add
pusha
add
pushf
sub
cmp
cld
jmp
xchg
ja
dec
arpl
add
sub
dec
xabort
das
xor
add
xchg
fadd
clc
push
add
adc
add
mov
clc
gs
pop
xchg
sub
clc
jbe
sbb
ss
ret
add
pop
add
add
cmp
clc
jg
clc
std
sbb
jmp
inc
inc
sbb
sub
add
xchg
lods
or
out
addr16
adc
add
add
mov
pop
push
outsb
xor
out
jb
add
add
or
add
and
sbb
cld
jmp
jno
push
add
push
dec
cmp
cmp
sbb
repz
out
inc
clc
lods
add
add
in
idiv
push
jno,pt
add
mov
cld
jmp
mov
data16
jmp
pushf
mov
add
xor
clc
fmull
fcoml
inc
add
jl
std
mov
scas
mov
std
inc
add
fildll
fisttpl
clc
test
clc
pop
data16
cmpsl
clc
int
add
add
mov
push
cld
jmp
data16
test
popa
push
clc
push
call
push
ret
push
or
pop
imul
clc
cmpsb
clc
jmp
clc
jecxz
test
push
rep
cld
jmp
add
cmp
sar
add
add
and
jbe
add
push
push
cld
jmp
dec
sub
add
push
add
add
jne
clc
sbb
add
xchg
cmp
popa
add
cwtl
push
add
or
and
jge
clc
dec
jg
and
add
add
add
clc
and
add
ja
add
lock
das
lods
xchg
pushf
insb
daa
clc
cmp
xor
add
imul
or
xadd
test
jb
add
xchg
cmp
inc
clc
xlat
ror
xor
dec
push
add
or
push
add
add
shl
pop
and
std
mov
sar
clc
not
pop
lea
add
add
add
inc
add
insl
outsl
and
stc
int3
add
add
add
insb
mov
add
mov
add
dec
inc
clc
imul
clc
mov
cld
jmp
xor
adc
mov
cmp
clc
push
stos
cld
jmp
movsb
cmp
lret
xor
mov
jmp
movsb
cmp
inc
clc
xchg
jae
add
add
add
leave
cmp
add
pop
jp
insl
dec
pusha
add
xsave
jb
add
clc
mov
je
cld
jmp
adc
add
dec
inc
add
xchg
negb
popf
add
add
lods
jle
clc
cmp
cmpsb
clc
ss
clc
aam
clc
iret
rep
mov
clc
bound
add
add
sbb
xchg
adc
add
sub
add
lea
add
cmc
cld
insl
bound
add
clc
cli
sbb
in
gs
repnz
adc
add
add
rcl
sar
add
dec
pop
mov
clc
aam
xchg
mov
inc
clc
jp
clc
dec
and
dec
push
push
cld
jmp
es
jg
in
adc
add
add
fimuls
into
mov
or
add
mov
clc
test
add
jge
dec
arpl
add
mov
clc
test
mov
add
cld
jmp
cmp
sbb
add
repz
add
pop
cmp
ja
aaa
cmp
jae
add
add
add
add
aad
xchg
cmpsb
clc
xchg
arpl
add
clc
addr16
mov
pushf
and
and
add
cmp
clc
nop
or
clc
outsl
jne
push
mov
mov
add
mov
das
jb
add
and
add
sub
clc
add
hlt
push
add
int3
mov
inc
clc
pmulhw
adc
add
and
add
clc
inc
add
mov
pop
cs
mov
enter
xchg
dec
js
clc
cmpsb
clc
inc
clc
jecxz
adc
add
add
js
jl
clc
adc
add
clc
bound
add
rcrb
clc
pop
jae
add
iret
ret
clc
dec
fsubrl
scas
push
dec
sbb
pop
pusha
add
shlb
add
ja
clc
bound
add
jne
push
mov
std
push
add
and
pop
sti
arpl
add
lea
add
data16
xchg
std
loopne
decb
fcomip
jmp
clc
jp
pop
loopne
xbegin
add
xor
add
add
mov
add
stos
jae
add
jnp
clc
adc
add
je
add
mov
cmpsl
clc
scas
das
sbb
clc
xchg
jmp
pop
mov
clc
flds
add
sub
lret
clc
push
sub
add
xor
clc
mov
clc
and
add
add
cld
jmp
cmp
jns
stc
xor
add
cmpsl
clc
lods
ds
inc
clc
xchg
push
add
lcall
sub
in
adc
add
clc
push
pop
jno
add
aas
fists
clc
in
fsubs
int3
jns
sbb
dec
jp
in
out
adc
ret
sarl
out
jg
jge
add
out
cltd
add
inc
add
stc
cmp
add
sub
stos
cmpsb
clc
stos
in
jns,pn
and
add
movsl
clc
lods
sbb
dec
cmp
jmp
nop
or
mov
insb
mov
xchg
sbb
mov
push
jo
add
add
sar
clc
add
add
inc
cld
jmp
scas
cmp
clc
mov
incb
push
pop
lret
stc
outsb
ret
clc
ds
fcmovbe
jmp
iret
ffreep
clc
fistps
repz
xor
stos
jbe
sub
mov
add
mov
imul
xor
add
add
add
add
cmp
xor
cld
jmp
dec
or
mov
or
mov
aaa
pop
clc
push
add
mov
push
clc
das
sub
add
clc
dec
adc
add
mov
sub
adc
or
mov
out
mov
int
clc
das
cltd
mov
mov
fs
movsl
clc
nop
lock
add
call
clc
mov
repz
add
xchg
enter
mov
add
inc
clc
in
scas
jecxz
dec
cli
inc
add
push
dec
add
add
clc
add
add
cld
jmp
cmp
ja
xchg
push
lods
and
add
movsb
clc
call
test
repnz
pop
xchg
mov
int3
nop
inc
add
mov
mov
mov
and
add
add
int
rcll
add
popa
add
aas
xor
add
cmp
add
sub
or
incl
lea
or
add
adc
clc
insb
icebp
xor
add
data16
movsb
clc
jns,pt
nop
mov
jne
clc
mov
mov
clc
cmp
sar
clc
pop
clc
fcompl
add
cld
mov
mov
xchg
push
add
cmp
jg
add
jae
add
clc
mov
cmpsb
clc
push
cmp
add
add
add
push
sub
add
dec
cmp
clc
or
fidivrs
movsb
clc
add
dec
push
xbegin
and
add
dec
sbb
pop
push
xchg
and
add
sti
push
mov
lret
clc
or
jmp
pop
or
or
imul
es
jno
add
in
mov
outsl
inc
add
cmp
icebp
pop
and
add
cmp
scas
mov
ds
xlat
popa
add
ret
add
faddl
add
add
pusha
add
fsubrs
sbb
in
rcll
add
and
push
ret
sub
call
aad
mov
add
lock
jg
cmc
mov
clc
out
in
mov
insb
je
pop
jno
add
clc
xchg
xchg
cli
mov
adc
xchg
push
add
and
add
add
sar
bound
add
test
xchg
pop
mov
pop
cmp
add
in
mov
sbb
pushf
xchg
mov
scas
xchg
xor
dec
mov
mov
cmp
outsb
or
push
add
in
lcall
movsb
clc
cmc
and
add
clc
fmull
fsubl
clc
add
add
fiaddl
add
xlat
pop
aad
add
add
pop
ljmp
mov
out
cmp
adc
cmp
xor
jl
clc
jp
stc
clc
jmp
add
clc
and
addr16
pop
xchg
je
xor
add
lock
sub
add
mov
clc
jecxz
and
jbe
cmp
xchg
add
clc
adc
add
add
adc
clc
ds
clc
inc
add
push
push
add
cmpsb
mov
aaa
mov
je
pop
lea
mov
add
mov
jg
clc
adc
add
ds
add
js
add
and
add
stos
je
loopne
push
or
clc
inc
clc
and
add
popa
add
lea
add
add
xabort
pusha
add
push
clc
inc
add
mov
ljmp
cmp
xor
stos
cmp
cmc
loop
fisttpll
xchg
test
mov
cmp
clc
leave
loop
rep
gs
dec
dec
cmp
add
enter
clc
test
dec
sahf
pop
or
clc
inc
add
push
jmp
sub
sub
or
jmp
xchg
jp
repnz
add
dec
mov
outsb
add
add
mov
mov
jae
add
adc
add
out
lea
bound
add
push
cmpsl
clc
mov
xchg
xabort
mov
sub
jge
pop
clc
cmp
pop
lret
clc
inc
add
adc
add
xor
add
jmp
add
and
add
pop
rorl
mov
pop
lahf
inc
add
dec
mov
push
add
sbb
repz
jl
sub
dec
in
cs
add
pop
fbstp
push
add
cld
jmp
jo
add
clc
and
add
add
add
clc
loop
mov
push
jmp
jg
inc
mov
push
testb
add
add
clc
cmp
or
jecxz
sahf
jb
add
clc
mov
adc
addr16
and
add
add
sbb
inc
insb
insb
cld
jmp
add
loop
hlt
rol
clc
mov
mov
clc
cmp
std
scas
mov
std
in
idiv
push
cld
jmp
sub
pop
test
add
dec
xchg
inc
add
lret
aaa
movsb
clc
fildll
stc
aaa
dec
loop
sahf
and
add
add
xchg
je
xchg
movsl
clc
jge
add
sub
lods
inc
clc
pop
cmpsl
clc
mov
clc
sbb
test
mov
add
cmp
push
vmovlps
add
add
lret
add
add
sbb
clc
mov
add
imul
and
add
into
jne
clc
repz
push
add
out
repz
mov
cld
jmp
sbb
clc
adc
add
cwtl
xchg
sbb
clc
xchg
lret
iret
add
add
clc
popf
jne
cmp
xchg
xchg
call
cmpsl
clc
dec
insb
loope
movsl
clc
add
add
cwtl
sub
clc
cmpsb
clc
add
add
aaa
and
add
add
add
add
adc
adc
fldl
add
sbb
test
icebp
daa
clc
into
and
add
clc
xlat
out
add
clc
push
mov
cld
jmp
mov
xchg
pop
nopl
add
push
add
mov
inc
clc
pop
ret
clc
xchg
addr16
pop
fcomi
push
add
notl
sbb
jmp
fwait
add
mov
test
ss
ret
mov
or
push
test
add
add
lods
sahf
add
add
add
cld
jmp
sub
sub
push
xor
cld
jmp
sbbb
xor
clc
xor
add
xchg
cmp
add
movups
add
add
popf
xlat
sub
pop
push
cmp
scas
xor
add
clc
add
pop
push
xchg
mov
add
imul
xchg
lods
arpl
add
push
fimull
jle
cmp
ret
sbb
int
incl
sub
cmpsl
clc
mov
loopne
fcomip
repnz
push
jo
add
add
out
mov
add
dec
in
push
loopne
jg
clc
sub
divb
add
jmp
add
push
outsl
pop
ret
add
bound
add
cltd
or
sbb
lret
xor
add
scas
xchg
jno
add
out
mov
clc
insb
adc
or
add
cmp
iret
add
add
xchg
cmp
clc
mov
add
pop
sub
push
cmp
and
cmp
clc
or
sbb
test
add
cld
jmp
cld
fldcw
mov
test
stos
xor
add
mov
outsb
out
jge
das
faddl
pop
push
int3
mov
lret
xchg
gs
dec
and
add
mov
ss
ret
push
nop
xor
stc
xchg
jmp
mov
cld
jmp
pop
jg
fs
cmp
jne
es
test
push
addr16
cmp
clc
cmp
fldcw
or
clc
mov
nop
fimuls
cs
pop
mov
ret
je
or
lea
fldt
push
clc
outsl
fmul
pop
or
in
fisttps
sbb
or
dec
cld
jmp
jp
scas
sahf
inc
sbb
add
add
clc
fisubs
add
add
cli
loope
loope
xchg
sub
add
add
add
clc
inc
add
mov
fistps
clc
je
sbb
and
add
lea
add
aaa
ljmp
adc
add
cmp
stc
pop
insl
xor
add
add
add
add
clc
add
add
icebp
inc
clc
cmpsl
clc
cmp
add
clc
push
add
or
clc
divl
fbstp
clc
rorb
call
cld
jmp
xor
add
add
mov
add
push
add
das
or
sub
sbb
in
data16
adc
add
xor
add
lods
push
add
dec
mov
clc
daa
clc
adc
add
mov
enter
mov
mov
rcr
adc
add
clc
add
add
dec
gs
jno
add
clc
js
int3
jge
pop
sub
jle
add
leave
sub
xor
add
push
xchg
sub
add
push
clc
iret
mov
cmp
jmp
and
push
sbb
add
adc
jmp
mov
and
add
sbb
mov
adc
add
repz
pop
mov
js
mov
xchg
in
lar
add
add
add
adc
add
add
in
mov
xor
sti
aas
mov
push
dec
inc
add
dec
xor
add
cmc
outsb
jo
add
imul
clc
jg
clc
in
dec
dec
int3
dec
pop
jl
push
cld
jmp
or
clc
sar
push
add
xbegin
xor
nop
xchg
ja
iret
mov
add
add
inc
clc
fbld
add
sbb
in
addr16
iret
enter
clc
out
loopne
xchg
jecxz
push
sti
loop
and
pop
sar
bound
add
jmp
cmp
clc
sub
scas
inc
add
sub
sbb
mov
add
hlt
scas
jo
add
add
mov
jg
dec
xor
add
roll
or
jmp
add
add
fistpl
mov
aad
clc
adc
add
clc
and
add
cmp
jnp
movsb
clc
shr
or
mov
popa
cld
jmp
sub
mov
add
jmp
dec
inc
loopne
ss
sar
mov
clc
jge
clc
test
pop
pop
xor
mov
out
fldenv
add
add
jo
add
outsl
sub
cmp
or
add
add
clc
mov
cmp
fs
add
add
xchg
xchg
sub
test
push
add
adc
jne
jns
idivb
bound
add
clc
sar
clc
and
add
add
loop
fistpll
add
cmp
clc
mov
xlat
mov
add
jnp
mov
clc
movsb
clc
lock
sbb
cmp
jmp
clc
in
roll
jg
add
cmpsl
clc
es
inc
add
rorl
jns
xchg
in
push
add
mov
add
push
add
add
bound
add
and
add
add
gs
imul
fsubl
add
es
pop
mov
add
xbegin
cld
jmp
pop
test
mov
adc
add
mov
clc
aam
cmp
add
rorl
popa
add
repnz
and
add
jo
add
add
inc
clc
mov
pop
and
jmp
pop
push
pop
cmc
cmp
stos
std
mov
push
add
cmp
add
mov
insl
out
adc
sar
cmp
add
xchg
clc
in
inc
clc
outsb
xor
inc
clc
arpl
add
push
add
icebp
jmp
mov
das
or
add
clc
dec
and
clc
rcrb
inc
add
fisttpl
sbb
sar
outsb
aas
inc
clc
in
xchg
ret
clc
iret
inc
clc
xor
add
add
jmp
or
ret
clc
pop
clc
inc
clc
pop
cmp
add
cld
jmp
insb
dec
mov
cmp
clc
mov
jns
into
es
adc
add
clc
scas
arpl
add
clc
mov
into
add
pop
pop
es
inc
add
nop
bound
add
push
add
rorb
add
loop
sar
stos
aam
add
adc
add
cmpsl
clc
push
mov
cld
jmp
and
sub
xor
add
clc
push
clc
jmp
xor
add
add
mov
test
mov
test
add
mov
stos
xlat
dec
push
imul
out
lods
in
pop
insb
xor
add
jae
add
add
pop
jp
clc
mov
add
clc
pop
clc
cltd
decl
test
shrl
ljmp
xchg
cmc
lock
inc
clc
mov
cltd
jge
dec
imul
add
dec
movsl
clc
cmpsl
clc
push
add
jmp
scas
mov
sarb
clc
mov
sbb
cmp
add
pop
inc
add
clc
push
stos
sub
clc
mov
daa
clc
rolb
dec
or
push
add
mov
clc
xchg
fstpt
clc
repz
add
dec
popa
add
dec
mov
jmp
je
xor
mov
mov
cld
jmp
add
or
dec
mov
clc
xchg
hlt
fs
repnz
in
cmp
movsb
clc
addr16
sbb
add
sub
add
add
enter
clc
hlt
cmp
sub
dec
mov
scas
mov
mov
jp
mov
sar
clc
push
add
sti
inc
add
and
daa
clc
mov
cmp
fistl
add
cwtl
push
imul
loopne
cs
push
jnp
inc
clc
sbb
sub
add
jmp
inc
clc
lock
shl
clc
pushf
sbb
dec
decl
jmp
sub
mov
cld
jmp
rorl
clc
mov
aam
mov
clc
xchg
mov
bnd
clc
or
add
cmp
mov
add
xor
clc
sub
rorl
clc
js
add
xchg
mov
es
jb
add
add
icebp
fnstsw
stos
stc
push
add
fstps
aas
add
adc
add
sar
jmp
test
cmp
clc
gs
loop
push
stc
decl
cmp
jmp
repnz
out
gs
add
mov
clc
xchg
xchg
aam
clc
popf
cmpsl
clc
mov
add
in
xchg
ret
clc
in
aaa
push
add
insb
push
cmp
xchg
loopne
jne
push
add
cld
jmp
sub
add
mov
push
clc
sub
and
add
add
cld
jmp
repnz
lret
xbegin
mov
jge
add
loopne
xchg
loop
loopne
test
jl
mov
add
bound
add
stos
adc
add
add
xor
add
clc
inc
add
xchg
and
add
clc
jne
cmp
sub
clc
loop
lahf
daa
clc
xor
add
aaa
inc
add
push
sub
and
jnp
clc
mov
test
push
clc
pop
aaa
ds
mov
inc
add
pop
out
mov
repz
clc
sarb
lea
push
leave
cmp
clc
xchg
stos
dec
out
bound
add
clc
lret
clc
mov
jne
sub
out
cmc
cwtl
cmp
cld
jmp
sub
shrl
addr16
mov
clc
cltd
sbb
loop
cld
jmp
sub
sub
sbb
movsl
clc
adc
clc
sar
clc
addr16
cmp
scas
loope
cli
sub
fucomip
xor
add
lret
clc
aas
insb
fwait
adc
add
add
cmp
cli
cmpsl
clc
dec
mov
clc
pop
lods
clc
dec
or
icebp
fwait
adc
add
into
mov
add
fsubrs
jle
nop
add
add
data16
push
xchg
cld
mov
aad
add
or
jae
add
add
add
imul
mov
add
mov
or
or
sbb
clc
mov
xchg
loope
lods
mov
jae
add
or
fnstcw
mov
cld
jmp
sub
mov
data16
mov
add
clc
xchg
pusha
add
test
pop
lods
cvttps2pi
add
es
addr16
nop
mov
cli
sbb
imul
dec
mov
add
xchg
dec
inc
clc
mov
add
cmp
aas
pop
xchg
mov
aas
imul
into
xor
add
add
leave
xor
add
sub
jmp
add
push
inc
add
cmp
or
sar
push
clc
xlat
ret
clc
and
add
mov
out
into
add
add
cmp
add
add
pop
cld
jmp
lods
jp
xchg
sub
clc
inc
clc
jne
push
push
cld
jmp
cmp
dec
insb
loop
and
add
inc
and
cld
jmp
or
mov
add
xor
clc
and
add
clc
test
and
add
clc
pop
xor
clc
dec
and
add
clc
lcall
jmp
and
cwtl
add
push
add
in
test
xchg
cmp
sub
clc
inc
add
ret
add
insl
push
add
and
push
or
js
clc
xchg
adc
or
pop
clc
pop
stos
xchg
in
inc
clc
sbb
jmp
inc
sbb
mov
pop
jle
das
xchg
jbe
or
xbegin
add
sar
outsb
int
jge
adc
add
dec
bound
add
clc
pop
fadd
clc
cmp
clc
cmp
in
cmp
cld
or
or
call
insb
outsl
clc
and
add
add
add
adc
add
jo
add
add
sbb
cli
add
add
push
mov
mov
clc
test
stos
stc
xchg
ljmp
and
add
add
jmp
cmp
clc
stos
out
sbb
add
mov
sub
clc
sub
clc
add
add
add
add
outsb
and
add
inc
add
insl
xchg
mov
pop
ds
fs
ss
test
push
xor
add
fisttps
mov
add
mov
push
mov
add
clc
mov
cld
jmp
sub
sub
adc
inc
clc
jno
add
jo
add
dec
imul
ljmp
sbb
sar
jmp
popa
or
rolb
jns
out
xchg
xor
pop
cltd
sub
nop
add
int3
xchg
test
in
bound
add
lret
negl
jnp
dec
cld
jmp
mov
inc
clc
cwtl
lret
jl
lods
cld
jmp
pop
test
add
add
cmpsl
clc
mov
pcmpgtd
ljmp
sub
add
cmp
add
clc
or
xor
add
clc
or
lods
shlb
es
fstps
clc
popf
and
jp
into
sti
mov
leave
sbb
inc
add
mov
xor
sub
fs
mov
add
pop
incb
add
xchg
dec
outsb
in
or
leave
ret
clc
push
add
cmpsl
clc
mov
adc
add
clc
pop
sbb
pop
cld
jmp
mov
mov
add
lcall
cmp
fsts
add
adc
add
sarb
xchg
arpl
add
fs
xabort
add
rclb
add
and
or
add
jb
add
mov
jbe
add
add
add
xchg
mov
dec
pop
xbegin
and
add
mov
repz
xchg
imul
mov
and
add
lods
inc
add
insl
out
pop
ss
jg
mov
ss
clc
jns
clc
loop
mov
add
or
clc
adc
clc
clc
mov
clc
fstps
clc
in
mull
add
mov
outsb
dec
notb
and
add
sub
adc
out
xlat
popa
add
mov
add
lret
cmp
push
add
adc
dec
add
add
inc
add
cltd
dec
mov
addb
cmp
sub
push
cmpsl
clc
je
add
add
mov
jne
imul
adc
jne
int3
cmp
mov
dec
xabort
cmpsl
clc
cwtl
inc
add
int
and
add
in
data16
into
push
adc
repnz
clc
aaa
popa
add
or
push
jmp
sub
movsb
cmp
test
mov
clc
jmp
aad
add
add
jns
push
movsb
clc
and
add
dec
fwait
cmp
mov
lods
cwtl
xor
add
push
add
cmpsb
clc
xor
clc
in
ret
jg
add
cld
jmp
jp
movsb
insb
js
xor
add
push
add
push
add
ljmp
inc
add
mov
aaa
mov
sub
in
cmp
push
cld
jmp
adc
cmp
cmp
clc
dec
imul
call
cltd
push
clc
xor
add
add
add
add
insb
mov
xor
add
add
cwtl
scas
and
sub
add
add
clc
std
dec
jo
add
clc
in
push
xor
ss
ret
xor
aaa
sub
shll
add
push
add
add
add
clc
sub
jae
add
lods
push
xchg
jae
add
clc
fwait
repnz
in
xor
inc
clc
ret
clc
add
add
pop
loopne
cmpsl
clc
cmp
aas
cmp
mov
clc
xchg
jne
pop
sbb
hlt
out
cld
jmp
jp
cwtl
stos
xchg
aas
mov
clc
jge
in
pop
push
lret
out
mov
testl
cld
jmp
adc
add
mov
push
out
pushf
push
nop
int3
xor
add
imul
add
clc
xor
add
leave
dec
sbb
sub
mov
mov
add
xchg
jnp
clc
push
xor
add
add
add
mov
repz
clc
hlt
lods
pop
jg
xor
cld
jmp
dec
xor
outsl
cltd
lret
ss
lods
lcall
clc
xlat
lret
outsb
sbb
imul
and
add
clc
xor
cltd
and
add
add
cmp
clc
jecxz
stos
adc
imul
add
add
fst
lret
mov
clc
adc
add
xbegin
aaa
inc
add
xor
add
dec
push
xchg
lods
int3
mov
push
add
xchg
stc
or
mov
xor
add
clc
and
add
ret
cmp
aam
cmp
add
or
xchg
cmp
mov
in
pop
mov
clc
mov
xor
add
cld
gs
das
lret
mov
add
mov
xchg
sub
dec
xbegin
clc
movsl
clc
ret
clc
or
mov
rolb
add
es
and
add
add
mov
or
clc
pop
mov
add
cmc
and
add
jno
add
ret
in
mov
test
add
add
or
sbb
add
mov
push
mov
push
add
fisttpll
clc
mov
pop
dec
jno
add
clc
cwtl
add
add
xchg
lods
insl
cmp
xor
pop
xbegin
add
cs
and
add
fstpt
ja
clc
push
xor
add
fcmovnu
jge
fs
mov
add
lcall
lods
ja
push
add
ljmp
add
cmpsl
clc
loopne
jg
push
jae
jmp
adc
add
clc
push
out
gs
inc
add
cmp
clc
push
cmc
adc
and
imul
pop
and
dec
into
fs
out
xbegin
test
jp
and
or
cmp
dec
cmp
outsl
sahf
gs
sub
call
inc
add
xchg
test
mov
lods
sub
add
cmc
ss
sarb
clc
or
fxch
mov
clc
mov
and
add
add
push
add
mov
sahf
jbe
clc
add
sub
push
add
sbb
lahf
fcomps
mov
nop
cs
sbb
adc
add
add
jne
xbegin
adc
adc
add
add
push
add
inc
clc
sub
push
mov
inc
add
add
xlat
add
push
ds
nop
or
add
sbb
add
fcomps
pop
mov
and
add
or
pop
test
fld
clc
xor
add
icebp
or
out
mov
popa
add
rclb
add
add
add
add
gs
scas
fcompl
js
and
test
fwait
shrb
clc
mov
add
clc
jns
sub
push
push
push
add
mov
cmp
adc
add
inc
clc
pop
inc
clc
mov
cmp
sbb
stos
in
sarl
clc
fwait
in
mov
das
mov
inc
add
push
je
cld
popf
adc
jmp
arpl
add
mov
add
sbb
pop
mov
rcrb
add
xor
add
xchg
mov
xor
add
xor
cld
jmp
mov
idivb
pop
ss
sbb
add
mov
add
add
mov
push
jne
cld
jmp
decl
roll
add
and
cmp
in
cmpsb
clc
jno
add
dec
pop
out
jmp
into
xor
add
hlt
mov
and
add
add
clc
cltd
push
add
int
mov
jmp
sub
cmp
mov
add
shlb
out
mull
clc
daa
clc
push
add
es
imul
add
cld
xchg
pop
test
sbb
push
add
mov
add
addr16
outsb
push
add
cmp
clc
inc
clc
mov
scas
clc
xor
add
cmpsl
clc
mov
cmp
add
push
add
cld
jmp
dec
or
jnp
clc
lods
dec
add
add
enter
inc
add
push
add
fsubs
add
mov
jae
add
test
out
insb
cmp
or
and
add
je
pushf
addr16
pop
sbb
clc
bound
add
int3
imul
xchg
sahf
inc
add
jae
add
add
cmp
ss
ret
es
mov
jmp
clc
jnp
and
add
bound
add
clc
mov
clc
sar
clc
imul
jmp
add
aaa
add
add
clc
sub
add
cld
mov
or
add
add
add
sbb
into
and
add
add
adc
add
clc
dec
cs
cld
jbe
insb
push
push
clc
jle
popf
xor
cmpsl
clc
pop
clc
sbb
clc
inc
add
mov
or
add
insl
lods
cmp
clc
cmp
clc
inc
add
decl
sldt
pop
or
cmp
add
pop
mov
jb
add
add
cld
jmp
or
pop
dec
cld
fmul
stos
and
add
clc
std
scas
pop
cmp
pop
inc
clc
sbb
in
sbb
popf
imul
add
mov
ss
add
jl
cs
sub
cld
fstpl
cmp
das
fbstp
add
and
clc
xor
add
push
mov
repz
incl
es
adc
jecxz
dec
lea
mov
clc
push
add
cmp
add
dec
mov
xchg
daa
clc
jae
add
mov
movsl
clc
adc
add
enter
cld
jmp
xchg
jp
fwait
fs
add
add
iret
xchg
xchg
ds
add
add
add
in
shl
clc
pop
inc
clc
ds
fsubrs
test
sbb
cld
jmp
xchg
jge
scas
dec
icebp
add
into
cwtl
outsb
push
add
inc
add
mov
clc
ret
clc
sar
cs
clc
inc
clc
dec
mov
adc
add
add
add
mov
mov
add
jg
pop
lcall
call
cld
jmp
je
push
add
sbb
xchg
divl
sbb
jmp
add
nop
sahf
flds
add
iret
es
aas
jns
clc
jle
sbb
add
bound
add
sar
inc
add
cmp
inc
add
loop
ja
sti
xor
je
clc
in
xor
cmp
data16
test
or
clc
divb
ljmp
clc
sbb
clc
push
push
ss
ret
mov
jmp
clc
ret
and
add
clc
repnz
aaa
inc
add
dec
int3
dec
aas
pushl
ss
ret
nop
or
add
bnd
adc
add
sbb
add
push
cmp
clc
xbegin
pop
xor
add
dec
in
push
fildll
add
clc
call
clc
add
in
jmp
sub
inc
add
cmp
add
add
scas
inc
add
call
mov
mov
add
or
and
xchg
in
ljmp
clc
jo
add
scas
jo
add
cmp
add
xor
add
mov
add
cld
jmp
inc
clc
xor
add
clc
add
add
clc
roll
add
into
sar
add
clc
or
add
in
cmp
sub
jge
clc
jge
jns
push
add
sub
clc
insb
jbe
das
inc
clc
jg
pop
cmp
add
xabort
add
pusha
add
call
clc
cmp
jl
fs
js
xchg
filds
add
clc
push
add
xbegin
clc
cmc
cmp
loop
mov
loope
test
sub
clc
mov
add
jmp
sub
pop
xor
add
cmp
test
cld
jmp
sub
or
sbb
add
cmp
repnz
dec
movsb
clc
cs
icebp
and
mov
add
aas
add
add
ficomps
clc
inc
add
and
add
scas
inc
add
popa
add
imul
dec
pushf
imul
dec
mov
add
add
repz
jno
add
ljmp
add
mov
adc
add
clc
xchg
popa
add
mov
pop
mov
imul
add
xor
mov
stc
inc
add
cmp
xchg
arpl
add
js
clc
movsl
clc
mov
clc
fnstcw
mov
and
clc
inc
add
pop
xchg
lahf
shlb
clc
mov
add
add
mov
mov
call
cld
jmp
sub
add
sahf
scas
stc
fs
cmp
push
jo
add
cmc
int3
sbb
push
add
jns
testl
cmc
sbb
add
mov
or
jb
add
out
pop
mov
shlb
clc
testb
ds
pop
dec
push
xchg
stos
loope
dec
lcall
add
mov
leave
mov
jg
clc
add
add
in
xor
add
clc
push
add
mov
sar
aam
clc
push
clc
mov
xor
add
cltd
or
add
dec
gs
bound
add
xchg
es
pop
shll
clc
lea
add
es
jge
add
fildl
add
ja
movsl
clc
xchg
notb
in
ja
push
add
nop
int3
push
cli
pop
pushf
sarl
loop
aaa
lret
dec
sbb
add
arpl
add
insl
mov
add
clc
cmp
xor
clc
add
add
pop
mov
jnp
inc
clc
mov
ret
clc
push
mov
jmp
mov
hlt
add
add
test
enter
add
sub
clc
jg
test
cmp
es
inc
add
mov
add
pop
xor
cmp
add
sbb
mov
test
adc
add
adc
add
lret
hlt
xor
add
sub
xlat
push
in
and
shlb
clc
dec
jle
testb
jno
add
add
sbb
mov
clc
insl
pop
repnz
lret
jno
lods
mov
cld
or
lods
test
nop
es
sbb
inc
sub
jmp
das
sub
sub
and
push
incl
mov
ljmp
nop
test
add
arpl
add
inc
add
sbb
clc
inc
add
cmp
add
fcoml
push
add
pop
loope
ss
add
mov
add
and
push
add
in
xchg
stc
pusha
add
push
mov
push
add
cmpsl
clc
stos
das
jbe
cmp
pushf
test
dec
xchg
push
add
in
std
mov
fbstp
add
cltd
jmp
fldcw
push
add
add
add
add
pop
xlat
mov
sar
outsl
dec
fwait
add
add
mov
fimull
cmp
lahf
inc
clc
pusha
add
imul
jl
clc
mov
add
sar
clc
jl
adc
add
xchg
sub
mov
pop
mov
mov
call
rcrb
das
or
cmpsb
clc
imul
jmp
nop
sub
add
mov
add
adc
add
adc
add
imulb
fld
clc
jmp
decl
cld
jmp
sub
lcall
fs
aam
add
divb
bound
add
pop
rorb
test
js
lea
add
cmp
add
add
clc
inc
add
add
add
jecxz
and
clc
xchg
and
add
mov
clc
xor
add
icebp
iret
jge
push
add
push
outsl
cld
jmp
inc
mov
gs
pop
pop
and
pusha
add
out
loop,pt
xor
add
clc
mov
pusha
add
mov
ret
clc
fs
pop
bound
add
movsl
clc
test
mov
add
in
scas
push
add
add
add
fiadds
add
fidivs
sub
ss
ret
adc
clc
mov
mov
loope
stos
out
push
push
ret
mov
repnz
sbb
cld
jmp
sub
pop
xchg
pop
int3
addr16
pop
push
clc
repnz
add
add
push
jge
es
mov
out
xchg
add
add
add
add
lahf
or
clc
inc
clc
push
dec
xbegin
sbb
jmp
fwait
or
and
and
add
or
dec
mov
das
icebp
pop
cmp
pop
in
outsb
cld
or
add
add
adc
add
clc
push
add
or
cmp
add
clc
sti
dec
aas
jo
add
jne
add
push
clc
push
add
push
push
ss
ret
mov
jp
add
cmp
inc
add
mov
mov
inc
add
mov
mov
cld
jmp
pop
or
inc
clc
cmp
dec
or
arpl
add
clc
test
add
jmp
scas
xor
cli
pop
aas
leave
jmp
clc
int
popa
add
xor
add
xor
add
clc
cmp
clc
cli
sti
popa
add
loop
sti
inc
add
insl
repz
jge
cwtl
pop
and
add
out
jbe
clc
movsb
clc
sub
call
mov
sbb
clc
repz
clc
jb
add
jnp
clc
mov
clc
mov
ja
clc
sar
add
xor
add
add
add
push
clc
data16
pop
xlat
ss
aaa
out
pop
push
pop
outsb
cmp
add
add
add
ret
cmpsl
clc
lock
mov
clc
lods
bound
add
out
and
add
cs
clc
add
sar
mov
cld
jmp
jno
push
movsb
clc
pop
mov
add
add
fdivrl
inc
clc
pop
cmp
test
adc
add
in
add
add
fnsetpm(287
clc
inc
clc
stos
lods
pop
fadd
clc
rep
clc
fs
repz
je
jp
ja
push
pushf
sar
call
sub
cmp
mov
inc
add
add
add
add
data16
cltd
sar
jns
add
cmc
addps
add
jne
pop
cmp
add
mov
or
ds
clc
mov
jmp
jg
inc
and
and
add
mov
pop
cld
mov
add
add
imull
clc
dec
in
mov
pop
mov
aas
ficoms
js
lods
sbb
clc
sbb
jo
pushl
cmp
popa
add
ljmp
add
fdivs
fwait
sarl
dec
push
mov
jmp
sub
add
scas
imul
or
dec
outsb
mov
jg
cmp
std
pop
push
xchg
scas
sti
and
add
cli
mov
and
add
add
jmp
sahf
and
dec
dec
lods
lahf
mov
sahf
mov
add
and
add
push
clc
fisubl
add
imul
lea
sar
clc
stc
arpl
add
clc
inc
add
ret
push
add
idiv
out
sub
xchg
pop
dec
jl
and
pusha
add
repz
xchg
sub
pop
icebp
or
cwtl
cli
iret
test
mov
add
sahf
cmp
inc
clc
push
dec
push
push
cld
jmp
sub
aas
mov
sbb
std
sub
test
dec
std
inc
clc
and
add
add
mov
ljmp
inc
add
xchg
hlt
fistpl
mov
cld
jmp
cmpsb
adc
repz
clc
sahf
pop
bound
add
add
pusha
add
push
add
xchg
decl
test
jmp
int3
hlt
sbb
add
and
add
clc
mov
add
xor
add
jae
add
mov
add
pop
clc
cwtl
and
add
add
sbb
inc
jb
cld
jmp
adc
cwtl
leave
loop
out
cld
xbegin
push
bound
add
mov
add
cmp
data16
out
cs
push
add
push
add
sub
mov
xchg
xchg
xabort
dec
cmp
clc
stc
push
into
repnz
call
repz
out
ficoms
add
cmpsb
clc
dec
addr16
stos
fwait
pushf
clc
and
clc
nop
jnp
dec
cld
xor
or
ljmp
sbb
rcrl
rep
mov
cmp
dec
es
jae
add
cmp
and
xabort
push
xor
pushf
jbe
clc
loopne
ret
pop
clc
add
add
mov
adc
mov
clc
cmp
clc
ret
clc
lods
rcll
push
jmp
jp
add
add
cld
pcmpeqb
cmp
clc
lods
push
mov
ret
dec
push
sub
clc
insb
scas
pop
or
lahf
out
lret
mov
clc
adc
add
cmp
cmp
add
and
add
and
add
add
xchg
xchg
fmull
jle
aad
clc
inc
add
add
add
add
and
add
clc
mov
add
push
lock
inc
clc
in
and
dec
mov
mov
cld
jmp
sub
xor
add
mov
mov
jle
jle
in
cwtl
movsb
clc
mov
mov
clc
mov
sti
lret
ret
clc
inc
clc
or
push
dec
fistpll
iret
pop
xor
add
add
and
add
jg
cld
jmp
mov
mov
or
in
sbb
popa
add
ds
enter
clc
outsb
data16
push
test
xlat
mov
negl
std
cmp
push
sbb
cld
jmp
jno
nop
add
loopne
lret
jge
clc
adc
or
or
add
pop
pusha
add
mov
add
add
add
cld
jmp
sub
clc
pop
pop
xor
add
jmp
or
stos
mov
dec
data16
es
cmp
scas
adc
add
mov
add
xbegin
jl
clc
mov
add
inc
clc
mov
add
mov
clc
push
dec
mov
pop
clc
icebp
test
clc
dec
or
clc
dec
sbb
daa
add
sbb
add
sub
sar
adc
insb
push
add
dec
imul
or
pop
movsl
clc
jbe
clc
jl
clc
pushf
divb
add
in
pop
add
add
cmc
mov
add
add
add
jl
mov
jmp
add
addr16
add
add
and
in
js
mov
push
daa
clc
pusha
add
scas
jnp
sar
inc
add
adc
add
sbb
mov
add
sbb
aas
rolb
ret
sub
add
out
inc
add
mov
jno
add
pusha
add
insl
xor
add
clc
sbb
xchg
cmp
mov
clc
imul
add
popa
add
inc
add
stos
mov
add
scas
sti
adc
add
clc
or
movd
add
jmp
jno
movsb
mov
xor
add
add
in
dec
cltd
ss
xchg
ljmp
xchg
sbb
shrb
fs
push
add
rolb
outsl
dec
push
add
push
test
cld
jmp
mov
push
push
ret
cmp
ds
clc
and
add
xchg
mov
add
hlt
dec
mov
clc
xor
add
jae
add
lcall
stos
jg
dec
int3
jno
add
xor
add
js
mov
ds
mov
in
cwtl
mov
add
lods
adc
add
fisubrs
cmp
and
add
sbb
mov
xchg
or
les
cld
jmp
and
dec
jno
add
jne
cld
jmp
sub
rclb
lcall
jmp
nop
pop
jg
sub
adc
add
nop
mov
sbb
add
int
pop
mov
lods
sahf
sti
fcmovu
ljmp
scas
dec
scas
or
clc
sub
inc
clc
and
add
xchg
test
ret
add
mov
arpl
add
jg
clc
xchg
repz
in
add
jmp
mov
ss
notl
clc
aam
in
gs
mov
popf
test
mov
add
push
ret
add
mov
std
add
add
call
cld
jmp
lods
stos
mov
add
xor
add
shrb
mov
cld
jmp
dec
add
loop
shrb
add
in
jl
fcomp
push
jo
add
loop
shl
call
clc
xbegin
and
cld
jmp
add
push
clc
xor
ja
aaa
out
addr16
mov
clc
test
dec
ret
clc
and
add
insb
cmovnp
push
mov
cld
jmp
je
aam
clc
adc
add
add
push
imull
sar
cmpsb
clc
mov
cmp
mov
pop
movsl
clc
push
scas
add
mov
insl
push
hlt
sbb
clc
jno
add
gs
or
fsubrl
add
filds
aad
clc
shrl
push
clc
lret
xor
add
clc
insl
cmp
clc
js
add
aaa
adc
xchg
enter
xchg
ja
mov
add
pop
test
popa
add
pop
dec
push
add
mov
sub
cmp
clc
xchg
xor
add
add
adc
add
xchg
je
decl
sbb
add
jg
pop
aas
inc
clc
int3
mov
jmp
lea
sub
pop
test
out
inc
add
xlat
ss
pop
and
xor
add
sbb
clc
dec
xchg
push
and
add
test
imul
clc
push
sub
xchg
call
cld
jmp
push
sub
cmp
out
mov
add
insl
mov
sub
pushl
cld
jmp
fwait
push
into
sub
imul
clc
push
call
cld
jmp
popa
push
aas
es
fxch
test
lods
movsl
clc
stos
mov
push
pushf
fs
idivb
xbegin
add
push
add
xor
add
cmp
clc
js
mov
inc
add
fisttps
clc
mov
clc
int
or
es
scas
popa
add
int
and
add
clc
addr16
aam
cmp
jns
es
pop
push
clc
and
dec
mov
mov
or
jp
lcall
aad
stc
mov
add
add
sub
clc
daa
clc
push
nop
in
call
jae
add
push
out
mov
and
dec
cmp
cmpsb
clc
mov
add
lock
clc
es
mov
insl
jge
sub
sar
and
add
add
cld
jmp
mov
sahf
fisttpl
add
mov
dec
and
add
mov
inc
clc
dec
xlat
movsb
clc
lods
push
add
aam
add
adc
add
cmp
push
jbe
jmp
push
fwait
sub
push
mov
outsl
andb
cmp
add
add
clc
sbb
je
mov
clc
jae
add
add
mov
jno
add
add
add
sar
cmp
dec
pop
cmp
add
add
add
adc
add
dec
or
inc
add
bnd
add
add
mov
insl
test
aam
push
movzwl
cld
jmp
test
add
ficomps
and
add
aaa
lods
mov
sub
pop
jo
add
pop
test
clc
ret
clc
out
shll
add
add
add
leave
xchg
clc
mov
adc
add
dec
pop
push
mov
inc
add
push
push
pop
jge
add
inc
add
xabort
loopne
or
fisubl
jecxz
pop
clc
sbb
and
stos
or
cld
jmp
lea
fsubr
inc
clc
mov
fwait
xchg
mov
sar
sar
clc
jb,pn
add
add
cs
push
add
fs
mov
fmul
insb
add
add
lods
push
add
das
clc
mov
in
dec
lahf
jns
cmp
add
cmp
aas
fprem1
js
adc
add
add
xabort
pmulhw
repz
inc
add
into
cmp
inc
clc
inc
add
mov
dec
cs
dec
dec
cmp
add
add
mov
scas
lcall
sub
adc
add
clc
lods
sbb
push
lret
ret
imul
add
push
add
cltd
sar
pop
mov
adc
add
clc
movsb
clc
mov
add
fst
or
vcmpps
clc
enter
add
jl
add
pop
clc
repnz
mov
add
ret
clc
mov
icebp
add
add
lcall
or
push
ret
sub
dec
gs
inc
add
js
repnz
or
inc
add
sub
pop
leave
repnz
int3
loope
jnp
add
pusha
add
mov
nop
jae
add
xchg
sar
dec
mov
clc
imul
sbb
in
out
popl
xchg
mov
add
sub
aam
jecxz
push
add
jl
lret
ret
clc
jne
add
sbb
js
inc
add
mov
add
push
sti
sub
xchg
fwait
push
push
addr16
decl
xchg
call
cmc
push
add
jae
add
je
or
sti
out
aaa
hlt
gs
jmp
xchg
fists
add
cli
lods
xor
add
add
add
cwtl
mov
dec
sbb
push
ret
ja
dec
push
push
aas
xor
add
cmp
cld
jmp
sub
adc
int
mov
mov
inc
clc
sub
jo
add
clc
leave
add
bound
add
pushf
decb
bound
add
cld
jmp
adc
sub
out
test
add
lods
xchg
clc
add
pusha
add
push
jle
stos
ds
clc
leave
push
jo
add
clc
out
shl
xchg
mov
or
mov
jno
add
mov
pop
sub
add
jno
add
repnz
clc
mov
cmpsl
clc
push
add
push
add
sbb
lret
add
add
repz
xabort
clc
push
les
cld
jmp
inc
sub
cltd
sahf
sub
clc
fidivrs
add
cmp
clc
out
es
cli
jb
add
add
rcl
xor
add
add
outsl
sbb
and
add
ret
add
pop
cmp
xor
add
xlat
and
push
add
movsl
clc
mov
mov
shufps
clc
jne
jns
aad
mov
xor
add
push
cld
jmp
xor
cmpsb
lods
jno
ljmp
sub
jmp
sub
xor
add
xchg
stc
inc
add
sbb
xor
add
aas
idiv
pushl
push
cmpsb
mov
mov
add
imul
add
outsb
aad
add
lock
push
add
inc
add
cmc
sarb
pop
inc
add
mov
enter
jle
mov
call
fwait
dec
into
mov
inc
clc
xchg
sub
shrb
sar
jmp
scas
das
push
dec
cltd
inc
add
arpl
add
add
out
jp
clc
mov
push
xchg
fiadds
or
add
mov
mov
add
inc
clc
xor
clc
mov
js
jmp
fildll
lret
clc
arpl
add
outsb
push
in
jge
add
adc
add
add
jae
add
sub
clc
inc
clc
fimuls
add
pushf
xor
add
clc
mov
add
sbb
dec
mov
jle
mov
negb
sar
add
out
daa
clc
jbe
loopne
and
add
clc
sub
xor
add
add
cmp
sub
ljmp
call
add
mov
pushl
cld
jmp
sbb
out
std
sahf
adc
add
add
xchg
jp
add
pop
inc
clc
push
mov
cld
jmp
aaa
sub
ja
clc
sub
add
add
cld
jmp
add
clc
sbb
push
mov
ss
add
cld
data16
xchg
xchg
hlt
xabort
add
push
add
inc
clc
pop
clc
adc
jo
add
adc
and
add
cs
clc
xchg
lret
push
add
loope
inc
add
xchg
nop
cmp
nop
clc
imul
clc
mov
into
mov
clc
lods
jnp
jb
add
and
add
add
clc
out
test
inc
clc
and
cmp
outsb
push
push
add
jo
add
clc
mov
hlt
jo
add
arpl
add
sbb
sub
jmp
add
enter
dec
sar
add
xchg
imul
add
inc
clc
jecxz
cwtl
dec
cmp
sub
lock
clc
iret
mov
add
int3
out
insb
mov
pop
clc
pusha
add
loope
inc
add
sahf
in
mov
shll
sbb
xor
add
add
add
sub
adc
add
add
push
adc
add
sub
add
or
clc
mov
cld
jmp
add
inc
clc
ss
sbb
mov
clc
test
aam
clc
lahf
add
add
negl
xchg
cs
stos
data16
popf
pop
in
loope
and
je
or
gs
xchg
mov
jmp
pop
cmp
clc
scas
lock
aaa
bnd
add
loop
fstpt
test
std
scas
and
nop
pop
stos
aad
and
add
mov
ret
clc
outsb
clc
dec
loopne
addr16
xchg
lret
inc
clc
je
lar
add
clc
jns
je
repz
add
dec
dec
scas
xchg
cmp
dec
es
adc
add
cmp
mov
push
xchg
cld
insb
enter
pop
imul
movsl
clc
bound
add
add
cld
jmp
test
jge
lods
xor
add
or
repz
cmp
inc
add
cmp
push
jge
clc
ss
out
mov
xbegin
clc
pushf
dec
mov
push
jecxz
mov
stos
movsb
clc
mov
lahf
xchg
pusha
add
sub
add
mov
add
push
cmp
je
adc
add
clc
xor
fucomi
in
vrcpps
add
loope
in
arpl
add
sbb
test
jmp
push
pop
scas
ret
clc
sar
xchg
clc
es
jns
add
mov
lods
push
mov
clc
jne
ret
clc
mov
add
add
jae
add
add
xlat
arpl
add
mov
add
or
mov
cld
jmp
data16
add
js
pop
xor
add
xchg
rclb
add
dec
dec
mov
push
cld
jmp
inc
sub
jg
or
add
xlat
shlb
add
fsubs
add
mov
aas
je
sar
add
test
gs
or
clc
inc
add
sar
clc
sub
movsb
clc
mov
add
call
add
cmp
xchg
and
add
xlat
test
aaa
pop
cmp
xchg
insb
clc
push
add
dec
ret
clc
or
fsubrs
add
movsl
clc
std
clc
dec
xor
add
test
add
add
add
pop
sarb
sub
add
test
lret
shl
clc
ss
add
adc
cld
jmp
aas
sub
lods
sub
sar
jmp
or
sub
add
faddp
clc
sbb
jne
cld
jmp
test
add
add
clc
mov
lock
inc
add
mov
or
add
add
add
and
add
ret
sbb
sbb
sbb
sub
add
xchg
dec
imulb
pop
lret
clc
lahf
cmpsl
clc
inc
clc
iret
xor
cmp
add
cmp
clc
int3
dec
cmpsl
clc
sub
add
das
adc
add
add
xor
add
xchg
cmp
add
add
add
mov
add
add
add
push
adc
add
je
js
push
ret
mov
sbb
add
pop
imul
clc
shll
add
cmp
xor
pop
pop
test
cltd
mov
add
sub
fmuls
mov
add
push
sbb
test
add
sar
daa
clc
pop
pop
sar
push
jmp
outsl
sbb
clc
lea
add
push
clc
ret
add
jno
add
add
dec
push
add
in
cmp
add
sbb
add
cmpsb
clc
data16
fcmovnu
lock
xchg
mov
push
sbb
xchg
jmp
inc
clc
push
add
jg
push
mov
dec
fwait
sbb
add
add
sub
daa
clc
scas
sub
clc
int3
pop
cmp
jo
add
add
and
add
in
and
add
add
ss
ret
jp
nop
pop
dec
loop
add
add
jae
add
adc
add
in
imul
mov
mov
ss
ret
sub
mov
add
std
insl
sub
xchg
pop
pusha
add
addr16
sub
add
adc
add
clc
xchg
mov
hlt
cli
cmove
sar
ljmp
cmp
daa
clc
pop
jecxz
xchg
pop
scas
add
add
add
add
sbb
clc
sbb
adc
mov
clc
test
and
add
stc
sar
inc
clc
ret
inc
clc
aam
push
add
xor
add
jecxz
out
test
loopne
icebp
fcoml
cs
movsb
clc
mov
mov
xbegin
ds
aas
push
add
outsb
sub
clc
sbb
aad
add
cmp
incb
xor
add
add
inc
clc
sbb
inc
clc
jl
data16
xchg
fidivs
fidivl
cmp
mov
clc
cmpsb
clc
xor
add
adc
clc
adc
inc
clc
hlt
aad
push
add
rcr
sbb
in
cld
cmp
ss
add
out
adc
add
cmp
xor
add
aas
lods
jg
stos
inc
clc
fimuls
pop
sahf
inc
add
mov
clc
nop
sbb
repz
jmp
sub
popa
add
movsl
clc
ljmp
add
add
push
mov
clc
mov
push
push
ss
ret
aaa
fs
add
pop
jbe
inc
cld
jmp
dec
push
insb
sub
push
mov
inc
add
icebp
call
dec
xchg
fstl
add
out
adc
add
jmp
call
cld
jmp
push
inc
adc
hlt
jle
test
add
into
xor
add
mov
jno
add
add
cs
clc
mov
jecxz
cld
dec
sub
push
xchg
mov
imul
insb
dec
outsl
inc
adc
mov
dec
aas
fmul
jae
add
outsl
out
push
mov
or
add
popf
sar
clc
es
push
cltd
mov
add
pop
jae
add
add
out
je
popf
repz
clc
fdiv
cs
shlb
add
add
sub
clc
dec
xlat
movsl
clc
push
in
ret
xchg
stos
sub
dec
ja
jb,pt
add
inc
clc
ss
dec
pop
sub
fisttpl
inc
clc
mov
push
test
add
ds
clc
test
mov
jge
test
insl
inc
add
stos
mov
jp
mov
add
xchg
lret
in
mov
test
clc
and
xchg
inc
clc
repnz
add
sar
push
add
add
add
out
push
loope
call
clc
loop
test
int
and
add
mov
add
jno
add
stos
shll
add
push
jnp
sar
xlat
out
dec
test
sar
cltd
pop
lahf
int
cmp
cmp
pusha
add
jmp
inc
clc
mov
clc
pushf
mov
cmp
int
clc
fs
aas
cs
clc
jg
clc
fimuls
ret
sbb
stc
cld
jmp
fs
mov
add
add
mov
outsl
jle
xchg
cmp
inc
clc
jmp
rcll
push
out
rcr
cmp
adc
imul
cltd
loope
and
add
push
div
cld
jmp
sub
fs
clc
je
clc
xchg
jae
add
clc
add
add
add
add
adc
jmp
add
es
mov
cmp
add
iret
in
popf
jno
add
ret
clc
xor
add
shl
clc
aas
inc
clc
arpl
add
and
add
add
xor
add
call
add
lcall
clc
or
clc
mov
add
jmp
test
rcrl
loopne
ja
lret
add
jns
je
add
add
ss
mov
and
add
clc
imul
add
into
loopne
jmp
adc
ljmp
lods
cmc
leave
mov
mov
movsb
clc
pop
dec
fwait
ja
clc
fistps
push
jmp
lea
clc
cld
jnp
cld
or
xchg
mov
das
xlat
mov
push
push
movsl
clc
lods
icebp
fsubrl
popf
sbb
jmp
add
push
ret
xor
add
lods
int3
jno
add
clc
ss
adc
sub
fcomps
add
das
in
push
in
jns
aas
jnp
jo
add
fcoms
add
add
cld
jmp
jae
add
clc
jl
add
add
add
sarb
cmp
cmpl
cld
jmp
push
and
and
add
ss
aas
add
push
jmp
sahf
cmpsb
aas
mov
aad
sahf
clc
cs
mov
mov
cltd
pushl
data16
mov
dec
push
pop
clc
mov
clc
mov
clc
jnp,pt
clc
sbb
or
cld
jmp
aas
pop
and
add
xchg
stos
cmp
jecxz
push
jo
add
add
popa
add
inc
add
loope
dec
aas
repz
jo
add
push
popa
jp
sub
bound
add
jle
push
lcall
cmpsb
jp
clc
jl
xor
add
add
mov
in
mov
xchg
pop
pop
lods
mov
cltd
in
imul
fdiv
add
add
clc
arpl
add
add
add
mov
xbegin
mov
jg
mov
cld
jmp
pushf
add
mov
clc
ds
clc
push
add
or
xabort
testb
cld
lret
add
nop
dec
jne
testb
mov
aad
sar
sub
outsl
aad
pop
gs
and
add
add
inc
add
mov
clc
push
add
add
testb
pop
mov
add
push
loop
sar
sub
add
xchg
cld
jmp
mov
cwtl
xor
add
push
fwait
outsb
arpl
add
dec
jecxz
insl
xbegin
adc
add
stos
inc
add
ret
clc
outsl
cmpsl
clc
xchg
pusha
add
push
add
mov
aam
clc
inc
add
clc
scas
mov
jo
add
add
jmp
popa
decw
mov
cld
jmp
sbb
push
clc
sbb
enter
mov
clc
cmp
stos
pop
clc
or
js
sbb
xchg
mov
insb
sbb
clc
push
add
ljmp
clc
sahf
sub
add
pop
testl
pop
ljmp
add
push
cmp
mov
jmp
push
push
mov
clc
add
add
xor
jbe
or
add
stc
or
add
xlat
xchg
xchg
or
fs
inc
clc
or
clc
sbb
jae
add
pop
ss
ret
inc
sub
daa
clc
push
clc
adc
loope
lods
fmul
data16
push
sbb
add
pop
clc
mov
push
shl
jecxz
jge
add
cld
jmp
push
mov
pop
lret
dec
push
shr
cld
jmp
and
test
cmc
js
mov
adc
add
lret
add
adc
add
sti
mov
adc
clc
sbb
cmp
add
adc
add
stos
lret
out
cmp
sahf
xchg
aaa
cmp
in
add
add
clc
cmp
loope
lret
or
add
jl
stc
mov
add
mov
sbb
lret
mov
clc
or
cmpl
jne
ljmp
nop
inc
clc
mov
and
inc
clc
lret
int3
stos
leave
leave
data16
cltd
mov
xchg
sar
stos
popf
sub
outsb
or
jl
clc
mov
mov
call
pop
dec
push
dec
clc
cmc
cwtl
fucomi
cmp
add
xor
add
add
cmc
push
cmp
popf
push
jmp
pop
jno
add
add
pop
aas
popa
add
pop
sbb
jmp
cmp
adc
adc
jmp
cmp
insb
jo
add
out
push
cltd
mov
inc
clc
fadd
clc
cmpsb
clc
call
or
aad
xchg
movsl
clc
aas
cmp
fstpt
add
add
fbstp
hlt
repnz
imul
mov
add
add
insl
xlat
lods
int
push
out
jg
clc
sub
add
mov
clc
mov
pop
hlt
fwait
adc
push
scas
jno
add
add
add
lcall
push
clc
data16
cmp
or
or
mov
clc
stos
insb
jbe
adc
add
icebp
jbe
hlt
mov
mov
fs
or
out
stos
add
add
in
xabort
push
xchg
dec
ljmp
add
or
adc
add
loopne
jo
add
add
or
clc
jl
iret
out
test
sbb
add
xor
add
cld
jmp
push
sub
mov
data16
mov
add
cld
jmp
imul
popf
cld
jmp
sub
sub
mov
inc
add
mov
clc
out
mov
mov
add
cmp
add
fisubrl
push
add
fdivp
inc
clc
data16
cli
sar
mov
bound
add
jne
mov
in
loop
mov
clc
mov
push
cmp
sbb
into
ljmp
adc
add
cmp
imul
cld
jmp
adc
lret
cmp
clc
sar
clc
sar
clc
lock
clc
ja
insb
inc
add
int3
jne
mov
push
clc
mov
add
int
aam
and
add
inc
clc
cs
push
cmp
fcmovu
mulb
add
jl
cwtl
push
mov
bound
add
cmp
imul
test
aad
pop
inc
add
push
cld
jmp
adc
add
cmp
jmp
jp
cwtl
sbb
mov
int3
rcll
mov
add
add
data16
jecxz
lret
repnz
dec
push
clc
leave
in
in
push
jge
in
mov
add
clc
cld
and
add
jbe
call
push
add
rcrb
adc
add
mov
cld
jmp
jno
test
cmpsb
clc
jnp
ja
in
sbb
clc
dec
jne
scas
xor
add
add
scas
lods
dec
add
pop
push
push
add
testb
jl
mov
cld
jmp
pop
cmpsb
ja
sbb
add
das
cli
lret
xor
add
scas
dec
cmp
dec
adc
cmp
xchg
inc
add
add
add
inc
clc
aaa
jnp
movsb
clc
jg
out
cmp
inc
add
jbe
outsl
dec
aas
hlt
xor
pop
testb
and
hlt
cmp
or
fsubrs
lods
sbb
jmp
xor
sub
adc
add
fnstenv
add
arpl
add
add
xor
add
push
add
jg
clc
inc
clc
cwtl
repnz
andb
sub
add
xchg
jbe
jmp
jne
cld
jmp
jg
clc
pop
mov
clc
mov
add
mov
sbb
dec
daa
clc
add
mov
add
sbb
add
div
sbb
add
insl
xor
add
inc
add
push
add
xlat
lods
rclb
pusha
add
fistpll
xchg
dec
loop
inc
add
cmp
clc
cli
cmp
clc
test
aad
clc
movsl
clc
mov
js
clc
pop
cld
pop
xchg
mov
pop
daa
clc
dec
inc
add
cmpsl
clc
outsb
inc
add
sub
add
adc
add
add
jb
add
clc
fmuls
lahf
cmp
jmp
clc
aam
iret
pop
sar
sub
push
ret
cmp
clc
test
divb
add
add
pushf
ret
push
xchg
imul
je
test
jle
or
cs
test
test
clc
and
movsl
clc
mov
sar
clc
sbb
xchg
xchg
ljmp
knotw
push
add
add
add
clc
fwait
sar
add
and
add
add
int
arpl
add
repnz
clc
or
dec
test
movsl
clc
pop
add
add
inc
clc
add
add
add
clc
mov
rorl
clc
xchg
jle
adc
add
sbb
int3
mov
add
and
add
clc
data16
push
add
dec
jo
add
int
add
cld
in
repnz
pop
push
adc
add
add
xabort
je
cld
jmp
jno
add
clc
inc
clc
add
add
push
into
pop
jae
add
add
mov
jmp
sub
cmp
scas
in
sbb
clc
in
add
mov
or
ret
clc
cmpsl
clc
push
clc
sarb
cmp
jb
add
clc
jo
add
pusha
add
xchg
sbb
add
jae
add
shl
mov
cmc
pop
cmp
pop
sbb
adc
clc
leave
nop
push
add
push
add
or
add
clc
fsubs
aaa
je
cmpsb
clc
jmp
add
aam
outsl
pop
mov
int
clc
stos
xor
add
je
mov
cld
jmp
add
mov
js
test
stos
mov
clc
sahf
cmp
jmp
cld
jmp
sub
mov
data16
cmp
xor
add
sbb
sub
push
ret
sub
or
fs
inc
add
out
push
cmp
clc
in
jl
clc
and
add
add
jns
clc
clc
dec
jae
add
mov
cld
jmp
push
cmc
jmp
pop
pop
cltd
xchg
fwait
iret
sbb
mov
pop
ja
imul
cmpsl
clc
out
iret
out
or
cld
jmp
cmpsb
sbb
xor
add
add
rcrl
cwtl
or
add
jge
or
aas
mov
aas
aas
loopne
sub
dec
sar
push
cld
xabort
push
mov
clc
ds
clc
fdivs
add
xchg
lcall
mov
lcall
outsl
cmpsl
clc
iret
cmp
rep
cld
jmp
popa
push
xor
inc
add
xchg
mov
test
mov
or
mov
clc
arpl
add
add
cli
jle
clc
pop
dec
sub
imul
sbb
sbb
inc
clc
cmp
add
data16
mov
clc
idivl
fcoms
or
cmpsb
clc
dec
out
mov
ss
ret
mov
loope
and
add
dec
sub
shrb
cmp
clc
bound
add
pop
clc
push
add
mov
cmpsl
clc
xchg
cs
push
inc
add
xor
add
jmp
ret
daa
clc
jg
pop
sahf
xchg
pop
mov
in
in
pop
icebp
sbb
xchg
rcrl
clc
outsb
sub
add
push
mov
cltd
xchg
or
push
push
ss
ret
cmp
or
add
dec
pop
push
mov
clc
cmp
add
movsl
clc
push
in
hlt
fsts
add
add
add
dec
xor
add
add
dec
clc
push
add
sub
add
xlat
sub
mov
mov
clc
sub
mov
aam
add
test
xchg
imul
out
dec
mov
es
adc
add
lahf
mov
push
cld
jmp
sub
mov
add
add
out
mov
clc
push
adc
add
cmpsl
clc
mov
int3
jne
add
dec
cmp
clc
popa
add
cs
add
push
jl
add
jno
dec
push
test
push
xlat
or
sub
test
std
int
clc
outsl
cmp
clc
push
add
test
push
insb
dec
icebp
inc
add
pop
repz
repnz
add
xor
out
sti
mov
jns
jg
cmp
fiadds
sbb
not
ljmp
data16
test
push
add
addr16
aas
adc
xor
add
mov
add
in
pusha
add
sbb
jmp
mov
push
cmp
add
mov
add
push
clc
aas
mov
add
mov
xchg
cltd
inc
clc
mov
clc
popa
add
fisttps
jae
add
xchg
call
sarb
clc
mov
sbb
sub
adc
add
int3
jo
add
pop
pop
into
ljmp
aas
cmp
add
daa
clc
dec
cmc
push
xbegin
movsb
clc
mov
in
out
ljmp
sbb
gs
push
inc
clc
sub
add
add
lret
xlat
fsubs
repz
pushf
push
add
cmp
cld
sbb
subps
cmp
add
add
pop
sbb
outsb
aam
push
add
mov
lcall
clc
lock
js
add
fxtract
add
add
add
mov
clc
add
std
sar
add
jecxz
or
pop
dec
stos
dec
insb
jecxz
roll
clc
xchg
xchg
lock
mov
rol
clc
cmp
add
repnz
add
add
inc
add
lods
pop
push
and
add
add
test
sar
fwait
int
stos
xchg
push
add
xchg
mov
lods
test
inc
clc
dec
lcall
add
rcrb
add
jge
out
lcall
clc
nop
push
xor
clc
out
out
pop
clc
scas
std
mov
sbb
sub
lock
add
add
add
inc
add
xchg
add
mov
xor
cld
jmp
or
int
popa
add
stos
fsubrl
movzwl
cld
jmp
pop
sub
and
insl
daa
clc
dec
lock
ret
clc
push
add
cwtl
cmp
mov
push
clc
stos
push
xor
insb
cwtl
mov
push
jne
dec
es
sti
and
add
add
ret
mov
mov
pop
fnstcw
or
inc
add
out
sbb
movsl
clc
mov
dec
and
mov
cld
jmp
mov
dec
leave
xor
add
ljmp
push
ret
push
sub
sub
inc
clc
cmc
sar
and
add
and
dec
ja
or
clc
lcall
jl
push
add
jno
add
jbe
and
sub
enter
lock
xchg
imul
minps
fstp
mov
push
clc
pop
pop
cmp
add
jg
adc
add
cmp
add
ret
add
cld
jmp
pop
add
cld
jmp
jp
push
ja
lahf
xor
add
scas
xchg
add
add
clc
popl
sti
mov
cmp
add
dec
cmp
add
add
or
mov
clc
sbb
sar
ljmp
add
add
jge
js
cs
stos
cmp
push
ss
ret
pop
insb
cwtl
incb
clc
dec
add
add
adc
add
fs
jnp
jg
clc
push
add
mov
and
adc
jg
cmp
clc
outsb
add
add
add
gs
jle
adc
add
add
xor
add
mov
cld
jmp
sub
mov
adc
add
mov
lahf
jmp
pop
sbb
shrb
sahf
inc
clc
icebp
sub
adc
arpl
add
add
jnp
testb
add
add
sbb
add
add
cld
jmp
push
dec
mov
fisubrl
cmp
daa
clc
pop
and
add
clc
inc
add
inc
clc
add
clc
popf
fisubl
add
add
rcr
or
jg
sub
cmp
repz
add
nop
inc
add
fcomps
add
push
add
add
add
add
cmp
jo
ljmp
mov
clc
dec
cmc
cmp
add
add
sbb
clc
mov
jb
add
jbe
mov
cld
jmp
aas
jg
test
clc
mov
cmp
dec
sbb
mov
daa
clc
push
add
fwait
test
jle
clc
jbe
clc
repnz
into
add
add
sub
add
lods
mov
add
out
fstpl
push
incl
ret
cld
jmp
sub
add
xor
add
add
pop
dec
aad
xlat
dec
jge
mov
rorl
cmp
pop
cld
jmp
cmp
sub
inc
clc
cmc
rorb
add
imul
push
adc
add
clc
nop
loope
sub
add
popa
add
sub
in
cltd
inc
clc
jmp
imul
loope
out
out
sub
clc
ljmp
clc
call
sbb
add
lea
add
repnz
cli
xor
add
inc
clc
stos
outsb
mov
dec
add
add
ds
loopne
jmp
sti
push
add
pop
ja
add
sub
fisubl
add
add
add
cmp
add
adc
add
loope
adc
add
mov
mov
push
clc
pusha
add
sar
mov
scas
nop
leave
xbegin
pusha
add
into
enter
add
ljmp
imul
imul
incl
add
inc
pop
mov
inc
clc
iret
or
cld
jmp
add
int
scas
int3
xchg
js
clc
or
clc
incl
clc
cld
jmp
cmpsb
mov
sub
mov
test
and
add
icebp
inc
clc
xchg
incb
add
clc
loop
xchg
bound
add
jecxz
mov
clc
test
cmc
lahf
mov
push
add
je
clc
jae
add
mov
fs
adc
add
add
add
or
bound
add
add
add
js
mov
mov
add
pop
cmp
lods
xchg
clc
and
add
xchg
ss
aad
clc
add
add
clc
mov
cmp
push
xor
add
clc
sub
add
inc
add
pop
sbb
sti
mov
clc
mov
clc
mov
pop
lret
mov
xchg
push
clc
ss
push
adc
mov
cld
jmp
and
add
clc
jns
aad
add
add
clc
pop
fs
mov
mov
clc
and
add
add
xbegin
jg
push
add
fcoms
clc
add
add
mov
inc
add
xor
adc
add
or
outsl
adc
add
xor
add
rcrl
clc
mov
jnp
jae
add
add
add
nopl
bound
add
cmp
clc
fisttps
add
inc
add
sub
add
pop
aam
clc
std
jbe
clc
mov
mov
add
fsubrs
push
add
sbb
cld
jmp
test
decl
cld
jmp
mov
jne
ja
mov
clc
mov
cmp
ljmp
in
cmp
add
xchg
or
pushf
mov
movsb
cld
jmp
sub
xor
add
popf
push
leave
xabort
movzwl
cld
jmp
add
adc
add
clc
data16
mov
jle
cmp
clc
jl
sub
sub
and
add
outsb
stos
scas
mov
cltd
call
sub
xchg
cld
jmp
dec
sub
cmp
clc
pop
clc
add
add
clc
xor
add
add
test
add
aam
push
gs
lea
sub
cmp
out
mov
or
mov
mov
mov
js
cwtl
arpl
add
cld
jmp
sbb
clc
test
jnp
inc
clc
fs
sub
pop
fbld
mov
arpl
add
add
push
jmp
cld
jmp
lea
clc
mov
add
dec
jg
add
leave
faddl
addr16
mov
add
mov
in
fdivrs
enter
mov
fiadds
call
adc
push
nop
fwait
dec
jmp
xor
add
mov
xor
add
mov
test
clc
and
add
clc
mov
adc
add
push
or
mov
ret
clc
xchg
lea
in
dec
push
repnz
add
add
int
mov
jne
xchg
xchg
xchg
xchg
cmp
negl
add
imul
sub
rolb
stos
push
popa
add
enter
push
add
adc
add
clc
popf
pushf
pop
xor
push
add
jle
inc
clc
cmpsb
clc
cmpsb
clc
inc
add
mov
sbb
add
pop
jns
sub
cmp
add
out
dec
xor
leave
mov
xchg
xlat
movsl
clc
xor
add
add
xor
add
clc
std
ret
clc
xor
add
clc
enter
rclb
clc
mov
xabort
cmpsb
clc
pop
cmp
add
jo
add
and
add
clc
cmp
mov
add
mov
cmp
add
add
jbe
clc
sub
sbb
clc
outsl
rorl
xchg
cmpsl
clc
pop
inc
clc
xchg
mov
add
fistps
mov
add
mov
cwtl
pop
scas
push
repz
idivb
mov
add
test
clc
mov
lret
jle
clc
or
inc
clc
repnz
mov
pop
test
add
fs
jae
add
mov
cmp
add
push
aad
clc
dec
gs
mov
sub
clc
pop
fcoml
adc
add
clc
push
inc
clc
mov
cmp
add
push
jmp
test
push
or
lods
stos
mov
clc
add
decb
cmp
mov
ljmp
call
loopne
cmp
push
leave
in
notl
add
mov
clc
xor
add
add
mov
and
add
xor
sbb
rcll
xchg
or
popf
fildll
and
push
dec
in
out
mov
mov
out
xor
add
push
clc
out
data16
aaa
cmpsl
clc
xchg
negl
shrl
cmp
add
insl
jae
add
clc
addr16
cmp
adc
add
cmc
sub
jmp
add
mov
iret
cwtl
xchg
pop
or
add
add
cmc
stos
std
push
je
fldcw
add
adc
add
xor
add
add
fiaddl
add
ss
clc
jo
add
cmp
jne
pusha
add
scas
mov
sarb
dec
arpl
add
or
mov
add
sub
add
insb
pop
mov
cmc
or
clc
icebp
adc
mov
nop
and
add
xor
add
clc
arpl
add
fisubs
and
add
cmc
pop
mov
mov
sbb
mov
pop
cltd
sar
pop
pop
pop
lret
cmp
clc
xchg
or
add
push
add
std
ja
cmp
cwtl
jne
clc
push
cmp
add
adc
add
clc
xor
add
add
test
jecxz
jmp
cmp
aad
cmp
add
add
xbegin
clc
add
pop
mov
mov
add
or
clc
pop
int3
mov
cmp
insb
add
add
add
clc
xchg
sub
mov
add
xchg
out
dec
cwtl
sbb
fsubl
add
lahf
outsb
mov
clc
mov
sbb
add
add
pop
dec
add
clc
nop
fdivs
clc
or
fmuls
add
cli
cmp
pop
arpl
add
mov
loope
into
and
add
scas
rcrl
rorb
ljmp
add
outsl
pop
out
js
clc
ds
cmc
stc
mov
ss
jns
test
mov
int3
fisubrl
or
clc
sbb
pop
div
movsb
clc
mov
or
push
clc
inc
add
cmpsl
clc
pushl
jbe
clc
pop
test
dec
loopne
xor
add
clc
hlt
mov
jno
add
and
add
sub
add
mov
sbb
stc
mov
add
pop
popf
dec
mov
xlat
inc
add
inc
clc
xor
add
or
adc
mov
add
add
cmpsb
clc
icebp
xchg
jns
clc
inc
clc
arpl
add
mov
pop
pop
hlt
mov
add
stos
mov
daa
clc
sub
and
add
cmp
shrb
add
pushf
daa
clc
jne
clc
adc
scas
jge
jg
cs
inc
clc
daa
clc
jo
add
inc
add
mov
add
mov
jno
add
fmuls
inc
add
adc
add
cld
out
loope
mov
clc
insb
cmp
dec
adc
add
ficoms
in
and
add
add
sarb
je
xor
clc
lahf
cmp
add
fildl
add
sub
lods
out
call
add
push
add
xchg
mov
clc
popa
add
fnstcw
add
imull
dec
dec
je
clc
cmp
mov
scas
pop
adc
add
lods
jle
in
repz
fisubs
clc
bound
add
inc
clc
bound
add
je
mov
lea
add
mov
add
dec
hlt
push
dec
adc
add
pop
clc
aas
mov
clc
in
lods
clc
loop
mov
mov
mov
add
add
add
cmp
je
fs
fwait
pop
fsubrl
or
xor
add
fdivrl
mov
call
clc
data16
jmp
xchg
xchg
loope
adc
or
add
mov
pop
cmp
daa
clc
sar
dec
lcall
sub
cmp
xlat
xchg
in
push
clc
push
dec
xchg
add
add
add
ss
adc
clc
clc
pop
push
add
push
gs
mov
add
add
test
ss
clc
xchg
xlat
jnp
add
sbb
clc
clc
test
inc
add
enter
adc
add
clc
lret
dec
xor
add
clc
dec
sbb
add
das
xchg
lods
xor
add
add
sub
or
int
outsl
pop
adc
cltd
es
lret
jno
add
test
bound
add
push
add
fistpll
fwait
sbb
hlt
inc
clc
clc
fs
or
enter
xchg
push
clc
xchg
fwait
dec
pop
clc
cmp
lods
cmp
add
mov
fs
call
add
xor
clc
test
fbstp
add
jae
add
mov
add
xbegin
add
cmp
clc
aam
fcomps
xchg
adc
add
pop
out
lahf
inc
add
repnz
inc
add
loop
push
mov
cmp
add
clc
mov
mulb
clc
push
cmp
add
or
out
das
dec
test
flds
in
and
add
add
dec
push
test
mov
cmp
add
xchg
mov
clc
and
add
add
push
xor
add
clc
frstor
add
daa
clc
or
sub
clc
inc
clc
movsb
clc
cmc
neg
push
vaddps
or
clc
fistl
add
pop
xor
add
mov
fistpl
pushf
cmp
addr16
add
add
je,pn
clc
mov
clc
repnz
add
add
add
pop
adc
add
add
hlt
test
add
add
push
cld
sar
mov
mov
into
inc
clc
and
add
cmp
das
inc
add
or
clc
xor
add
sub
add
dec
push
cmp
clc
rclb
xor
add
add
in
cmp
pop
pop
push
leave
cmp
add
sub
addr16
and
add
cmp
add
add
push
add
cmp
xchg
sub
clc
push
clc
in
mov
clc
mov
mov
add
add
repz
clc
clc
cli
xchg
fadd
clc
stc
cmp
aad
clc
sar
bound
add
pop
mov
add
sub
loop
mov
jp
add
xabort
add
repnz
adc
add
clc
inc
clc
cmp
clc
dec
sarl
inc
clc
push
add
cmp
clc
add
add
dec
in
in
push
scas
xor
add
push
dec
pop
dec
and
and
add
clc
jb
add
and
ret
clc
scas
pop
clc
cmp
clc
cs
sar
dec
jo
add
scas
mov
xchg
ja
rcrb
clc
or
ds
loop
adc
add
clc
or
insb
bound
add
push
mov
clc
mov
inc
clc
or
cmp
mov
clc
lahf
sbb
lcall
ret
clc
add
add
ficompl
enter
dec
and
and
add
clc
imul
add
test
adc
add
clc
pop
xor
add
aam
ds
ss
add
jge
add
lret
mov
clc
in
push
add
add
jg
xchg
call
add
push
ss
mov
imul
xchg
lock
mov
cld
cmp
push
mov
add
xchg
dec
jge
mov
clc
cld
pop
xchg
or
add
cmpsb
clc
inc
clc
loopne
in
add
add
es
add
add
cmp
clc
xchg
test
imul
popf
gs
push
cmp
pop
testl
add
jo
add
sub
xor
add
inc
clc
jb
add
nop
pop
xchg
test
clc
cmp
clc
imulb
and
add
test
lods
inc
add
icebp
lcall
mov
int3
add
add
movsl
clc
mov
clc
test
clc
lcall
add
inc
add
mov
loope
out
sbb
clc
cmp
lret
mov
or
cmp
add
inc
clc
push
clc
insb
and
add
add
xchg
dec
jbe
add
add
clc
das
in
xlat
cmp
test
in
mov
dec
sbb
inc
add
mov
mov
or
xchg
loopne
mov
sbb
cmp
fwait
xor
mov
push
jl
xchg
mov
mov
cmpsb
clc
mov
cld
push
cmpsl
clc
inc
clc
xor
rcrb
adc
add
and
add
movsl
clc
ja
mov
clc
pop
cwtl
clc
jge
add
test
icebp
cmc
push
add
or
mov
add
in
xchg
xchg
mov
add
add
fwait
aas
aas
maskmovq
testl
add
add
cmp
clc
pop
dec
or
clc
test
clc
push
stos
xchg
icebp
push
add
and
add
clc
push
xor
add
add
imul
cmp
add
lods
sar
cmpsl
clc
add
es
pop
cmp
add
lock
jge
clc
cmp
clc
or
add
fwait
push
xchg
ds
jno
add
clc
scas
mov
movsl
clc
xor
add
sub
iret
or
clc
inc
clc
cmc
mov
fidivrl
add
mov
add
add
add
cmp
add
mov
add
sbb
add
cli
lods
sbb
pop
jp
pcmpeqb
add
adc
jno
add
clc
mov
cmp
add
lahf
adc
add
xchg
sub
negb
fsubs
add
clc
pop
int
clc
jb
add
jmp
jne
clc
xchg
inc
clc
lcall
cmpsl
clc
mov
clc
sbb
cmp
mov
mov
add
pop
clc
sbb
jnp
add
insl
filds
pop
xchg
stc
jne
push
jno
add
clc
pop
pusha
add
call
std
jno
add
dec
cmp
push
add
nop
cmp
leave
testb
mov
adc
add
xchg
in
xlat
shrl
pop
inc
add
aad
clc
adc
add
and
add
add
clc
aaa
insb
pushf
add
add
add
shl
clc
mov
mov
aaa
push
clc
dec
adc
add
out
inc
add
xchg
sti
jae
add
dec
xchg
mov
sbb
mov
mov
mov
fwait
add
add
add
push
clc
stos
mov
push
jo
add
xchg
mull
add
push
push
add
mov
clc
xchg
sub
gs
das
mov
add
jne
outsb
aad
and
add
add
add
xchg
sub
mov
cmp
jp
add
hlt
xchg
incb
clc
xor
add
or
clc
mov
rorl
test
push
clc
push
add
fwait
xor
add
rcrl
stos
sbb
jge
clc
mov
test
push
clc
movsb
clc
pop
clc
mov
in
sub
add
movsl
clc
or
clc
jmp
push
add
xor
add
fwait
xchg
cmp
movsl
clc
mov
clc
cmp
clc
inc
add
push
add
adc
add
fbld
adc
add
mov
and
add
clc
cmpsl
clc
cmp
ja
mov
or
insl
xchg
in
xchg
mov
clc
add
add
clc
int3
jae
add
lret
or
movsl
clc
inc
clc
push
add
loope
xor
add
inc
add
xabort
clc
stos
in
cmp
clc
xor
add
add
and
add
cmp
sub
add
stc
outsl
mov
cmp
gs
xchg
repnz
cmpsb
clc
roll
add
dec
aad
xchg
push
insb
pop
data16
clc
ficoms
add
mov
int
clc
cmp
clc
sub
add
inc
clc
das
pop
sbb
lret
xchg
shl
push
mov
or
dec
xchg
stos
clc
jne
js
in
jno
add
lock
outsb
mov
sahf
or
dec
lock
mov
pop
clc
lcall
dec
inc
clc
mov
mov
dec
fmull
clc
out
ss
cltd
pop
mov
sbb
xbegin
insb
jg
call
clc
mov
mov
jne
dec
and
add
seta
scas
int3
into
repnz
add
hlt
loopne
and
add
xchg
aaa
std
sub
clc
fcomi
enter
loopne
icebp
xchg
clc
mov
adc
in
fldenv
inc
clc
adc
add
aam
clc
or
call
clc
push
add
mov
add
enter
or
mov
sbb
push
add
jecxz
lods
pop
enter
clc
pop
mov
sbb
mov
js
call
add
sub
clc
add
scas
xor
add
add
dec
ficomps
mov
bound
add
cmp
lods
stos
mov
sti
xbegin
clc
loopne
adc
add
or
sbb
add
mov
add
dec
cmp
insl
fucomip
pop
xor
add
add
clc
mov
data16
or
pop
aaa
push
int
insl
mov
clc
nop
push
add
sub
inc
add
imul
mov
adc
jno
add
movsl
clc
cmp
rcrl
ds
clc
rcrb
iret
jp
in
mov
clc
mov
jl
in
and
add
add
out
jp
sbb
add
and
sub
xbegin
clc
cmp
add
cmp
clc
fs
sar
mov
add
clc
push
cmp
sti
cmp
mov
or
add
add
add
and
add
cs
sub
add
sar
xchg
imul
out
xor
add
clc
dec
insl
mov
sbb
sar
pop
and
add
add
add
stc
aas
mov
add
add
cmp
add
pusha
add
add
add
ret
clc
cli
dec
pusha
add
sahf
leave
inc
add
xbegin
sbb
movsb
clc
push
adc
add
push
leave
clc
xchg
ds
fsubs
add
aad
add
cmp
daa
clc
ljmp
clc
sub
mov
add
iret
outsl
dec
add
add
add
dec
mov
add
jno
add
add
scas
sbb
cmp
sbb
outsl
lcall
add
or
adc
add
test
ret
ret
das
int3
data16
sub
clc
test
xchg
jmp
dec
data16
mov
add
fisubrl
clc
mov
add
and
sub
jp
insl
adc
add
xor
add
jbe
loop
jge
clc
sbb
cmp
xor
add
xchg
testl
pop
add
add
mov
ds
test
fdivrs
clc
xor
add
repnz
test
hlt
mov
clc
pop
clc
loopne
push
arpl
add
cli
push
in
ja
pop
pop
and
in
enter
inc
add
scas
and
int3
cmpsb
clc
out
jb
add
add
pop
scas
cltd
xchg
fcom
or
xchg
in
xabort
pushf
divb
add
add
sub
scas
sub
add
push
clc
int3
in
cmp
inc
add
sub
data16
mov
adc
add
mov
aaa
mov
adc
inc
clc
mov
aaa
jbe
add
jae
add
add
dec
xchg
fisubrs
inc
clc
sbb
clc
push
imul
clc
sub
add
add
cmp
sub
add
mov
clc
add
add
xor
dec
sbb
clc
jl
add
stos
aas
jnp
mov
add
mov
add
xor
add
das
call
clc
jecxz
mov
fcoml
add
cmp
fsts
add
lret
jnp
test
sbb
clc
ss
pop
push
xchg
jecxz
sti
popf
dec
arpl
add
cmp
sbb
mov
in
clc
imul
cmp
add
add
out
loop
sbb
pop
jl
clc
xor
add
cli
notl
jl
add
loope
insl
ficoms
mov
mov
fwait
hlt
mov
ficoms
add
mov
pop
clc
mov
cmp
clc
out
push
mov
test
clc
lcall
cmp
clc
into
cmpsl
clc
and
add
cmp
loopne
add
xchg
xor
add
icebp
mov
adc
add
lret
mov
jmp
ret
clc
push
stos
cmp
mov
addr16
cmp
clc
rorl
add
leave
clc
add
add
clc
fidivl
cmp
das
mov
mov
inc
clc
cld
add
add
add
mov
aaa
out
mov
mov
jle
clc
push
add
cld
xor
add
cmp
data16
and
add
dec
sti
mov
clc
and
add
clc
aaa
push
add
pop
inc
add
clc
dec
ret
ja
clc
mov
add
add
add
enter
fxch
jae
add
clc
fwait
outsb
repz
dec
push
add
gs
push
add
sbb
dec
jne
lock
add
ss
push
add
sbb
cmp
add
scas
and
clc
xchg
or
pop
sub
mov
out
fiaddl
clc
iret
sti
icebp
mov
add
stc
js
test
add
sbb
jl
clc
dec
adc
add
clc
jae
add
clc
hlt
lea
add
fmul
in
stos
push
sbb
stos
je
clc
ficoml
add
rep
mov
add
add
xchg
out
or
clc
mov
add
inc
add
gs
push
ret
clc
icebp
cli
sub
add
inc
add
mov
add
or
inc
add
icebp
mov
es
cmp
cmp
or
clc
jo
add
xor
add
adc
add
jb
add
add
iret
loope
inc
clc
jmp
test
mov
cltd
dec
pop
and
add
clc
popa
add
out
clc
xor
add
test
sbb
xchg
sbb
pushf
shrb
out
sbb
test
add
imul
add
dec
or
mov
cmp
scas
jmp
add
add
jmp
clc
mov
add
cmp
clc
rclb
rolb
add
xchg
out
scas
arpl
add
mov
mov
pop
mov
add
jmp
add
outsl
adc
add
stos
mov
pop
fdivl
sub
add
in
adc
lret
add
adc
add
pop
repnz
mov
mov
ret
gs
jo
add
add
or
out
mov
cmp
clc
or
push
cmc
popa
add
cmp
mov
or
iret
adc
clc
cmp
push
clc
ss
insl
and
add
out
insb
hlt
mov
add
jbe
lods
push
lcall
cmpsl
clc
sbb
add
add
add
jae
add
ss
jnp
out
xchg
cmpsl
clc
push
clc
ficoms
add
fwait
xchg
pop
lret
jo
add
cld
not
cmp
inc
clc
sbb
fadds
add
ds
add
jp
add
jns
xchg
mov
sbb
popf
jb
add
add
in
sbb
add
out
cmp
outsb
int3
fidivs
clc
and
add
add
lcall
add
clc
mov
add
outsb
sbb
push
mov
mov
clc
dec
pop
mov
mov
and
add
cmp
and
add
add
inc
clc
in
push
clc
jmp
add
out
movsb
clc
dec
movsl
clc
pop
jnp
sbb
cmp
add
mov
jl
clc
insl
sar
fsubrs
lahf
cmp
xor
pop
jb
add
pop
in
rorl
imul
repnz
mov
add
jne
clc
cltd
scas
cs
jo
add
add
add
pop
out
sub
jle
jecxz
dec
add
add
add
loopne
fistpl
leave
arpl
add
xor
add
push
add
mov
clc
stc
in
dec
out
jae
add
sub
or
clc
jg
popa
add
adc
stc
jnp
fstpt
and
add
add
push
push
add
mov
xor
add
mov
add
xchg
pushf
ja
inc
add
xor
add
xlat
xchg
sar
clc
xor
xlat
sbb
xchg
xabort
xchg
es
arpl
add
into
lods
xchg
nop
inc
clc
out
dec
add
add
mov
int3
pop
outsb
jle
push
pop
cwtl
in
push
add
mov
sub
sahf
inc
clc
adc
add
fmul
shlb
push
clc
sub
ret
clc
cld
insl
and
add
add
je
clc
cmp
push
mov
add
cli
cmp
xor
add
gs
imul
jno
add
jg
clc
inc
add
icebp
mov
add
pushf
dec
aas
pop
clc
iret
lahf
mov
clc
jp
lods
jae
add
clc
int
jl
push
add
cmpsl
clc
mov
add
repz
jmp
mov
dec
dec
push
aam
clc
adc
add
clc
lret
cli
loop
dec
add
iret
emms
pop
mov
or
add
lahf
mov
add
add
icebp
adc
add
mov
pop
iret
sbb
add
lods
cmp
clc
jae
add
stos
xor
clc
mov
xlat
pop
xchg
movsl
clc
int3
cmp
push
data16
xchg
xlat
pop
loopne
jb
add
movsb
clc
bound
add
inc
add
bound
add
add
sub
jns
je
out
out
je
jg
clc
or
dec
push
add
aas
sarl
in
xchg
hlt
push
add
push
jnp
add
push
jae
add
in
adc
add
add
add
fdivrs
clc
jo
add
xor
jne
lcall
add
add
fs
mov
add
sbb
push
add
xor
add
imul
xor
add
clc
mov
add
cmp
add
icebp
jecxz
push
clc
hlt
cmpsl
clc
pop
inc
add
cltd
mov
jge
clc
lret
jl
mov
add
lea
ds
add
dec
icebp
xor
add
xchg
cld
sub
clc
cmp
mov
inc
add
lret
addr16
mov
lock
add
add
add
add
loopne
imul
lret
adc
add
add
add
cmp
clc
push
push
mov
scas
mov
leave
push
add
movsb
clc
push
xchg
scas
outsb
pop
or
lret
dec
push
bound
add
outsl
call
add
add
clc
xor
add
rcll
add
dec
call
movsb
clc
ja
dec
xchg
dec
loopne
fists
add
mov
xlat
iret
test
test
clc
rclb
cmp
jae
add
clc
or
clc
lods
sub
ljmp
ret
clc
push
clc
pop
mov
or
adc
add
out
inc
clc
jne
clc
sub
out
loopne
test
jne
or
dec
and
inc
clc
adc
add
inc
clc
in
cmp
sahf
nop
cmp
mov
add
add
cs
dec
or
add
cmp
add
jl
add
cmp
cmc
lret
ret
pop
inc
clc
sarb
clc
xabort
clc
pop
loop
push
add
sub
add
icebp
cmc
mov
push
add
fistpll
dec
movsb
clc
lahf
jne
or
add
add
dec
and
add
jmp
clc
push
addr16
shl
clc
iret
mov
add
cmp
fisttpll
clc
imul
icebp
dec
in
mov
clc
add
in
sbb
mov
cmp
dec
jp
pop
dec
test
sub
enter
inc
clc
inc
add
js
clc
dec
or
sub
clc
xchg
inc
clc
ret
clc
test
add
add
clc
ret
clc
in
inc
clc
je
fsub
clc
lcall
shl
clc
jmp
or
cli
aas
dec
lret
add
xchg
inc
add
cmp
clc
xchg
pushf
cmp
ret
clc
aas
dec
dec
outsl
jo
add
cld
insb
repz
clc
std
inc
add
jae
add
add
loope
lods
inc
add
lods
xchg
imul
clc
call
add
jmp
outsb
xor
insb
fiaddl
add
scas
pop
jb
add
pop
addr16
mov
clc
shlb
clc
dec
popa
add
xchg
ljmp
clc
and
add
test
add
hlt
in
fcomps
clc
add
add
add
aad
clc
mov
clc
sar
inc
clc
cmc
xor
jbe
out
and
add
pop
add
pop
push
add
test
add
scas
adc
add
xlat
mov
clc
int
enter
insb
aad
clc
xchg
lods
add
add
clc
test
int3
xor
add
clc
leave
je
dec
and
add
add
dec
int3
shrb
cmp
add
dec
ss
clc
mov
inc
add
clc
xlat
sbb
add
mov
cmpsb
clc
mov
and
add
lcall
add
in
fbld
ret
aad
clc
mov
clc
jno
add
add
mov
adc
add
add
out
mov
cmpsl
clc
xabort
cmpsb
clc
jge
lods
mov
cmp
clc
xchg
ljmp
add
dec
push
add
testl
mov
xor
add
add
push
add
add
out
sar
and
add
clc
or
into
sar
sar
clc
imul
add
push
or
add
out
addr16
or
bound
add
sub
shl
xchg
in
sar
push
add
addr16
daa
clc
inc
clc
mov
outsb
cwtl
mov
clc
sbb
xor
add
add
sub
pusha
add
xor
add
push
cmp
mov
xchg
or
add
fwait
dec
mov
insb
cli
mov
inc
clc
ret
clc
adc
add
add
dec
test
leave
jmp
mov
clc
jp
test
call
add
ss
add
add
clc
pop
inc
add
pop
fnstenv
add
xchg
jbe
xchg
mov
mov
clc
mov
push
ds
add
sub
clc
xchg
repz
in
sar
add
push
popf
out
loopne
pop
pushf
fstp
inc
add
cs
clc
int
mov
add
xchg
cmp
adc
add
xor
add
clc
jge
add
outsb
cmp
dec
cmp
add
mov
add
lahf
cmc
add
jae
add
aaa
pop
pop
data16
pop
cmp
clc
daa
clc
cmp
add
add
add
clc
jb
add
mov
outsb
dec
sub
and
xchg
call
jnp
lea
add
fsubr
inc
clc
xchg
fucomip
outsb
dec
fsts
ss
roll
add
and
dec
ror
add
clc
and
aaa
push
add
mov
cmp
add
add
mov
clc
dec
pop
mov
add
xchg
jecxz
sbb
clc
cli
outsb
mov
mov
add
add
add
pusha
add
inc
add
int
add
aas
lock
sub
sub
jns
mov
das
adc
add
clc
adc
add
clc
gs
pushf
lock
fdivrs
cmp
mov
or
jno
add
pop
mov
add
enter
adc
add
mov
lret
add
mov
xchg
addr16
hlt
in
leave
sbb
test
or
add
add
pop
mov
clc
xchg
cmp
xor
add
add
ret
clc
mov
ljmp
cltd
out
pop
enter
lahf
rclb
nop
or
jne
mov
decl
decl
clc
dec
lods
cmp
clc
pop
jno
add
inc
clc
cwtl
pop
jo
add
jne
add
cmp
add
out
mov
cmp
push
xchg
lea
inc
clc
loop
test
pop
mov
add
jge
mov
mov
clc
icebp
test
add
lods
mov
out
inc
clc
push
sar
jne
das
fs
and
repnz
mov
push
add
pop
lret
out
add
dec
leave
mov
sbb
xor
add
sub
add
add
sub
add
xor
movsl
clc
pop
push
add
push
add
not
stc
xor
add
xor
add
adc
add
in
adc
add
add
fwait
cmp
add
inc
add
out
mov
dec
jmp
insl
sub
xchg
push
add
test
jle
loop
sub
mov
dec
push
mov
sbb
add
xor
add
add
sbb
clc
cmp
rorl
inc
add
or
clc
leave
fcomps
add
add
jne
clc
inc
clc
and
add
mov
mov
cs
xor
add
movsb
clc
and
hlt
gs
cmp
add
cmp
add
hlt
xchg
xor
add
add
add
and
add
add
add
cmpsb
clc
adc
lret
cwtl
sbb
scas
xchg
pop
lret
sbb
clc
and
add
clc
imul
jb
add
add
adc
loop
cltd
cmp
clc
mov
dec
jl
cmp
fnstsw
cmpsb
clc
dec
imul
sub
add
dec
sbb
leave
add
add
xchg
mov
jno
add
or
mov
add
scas
push
add
pop
jmp
cs
clc
pusha
add
cmp
push
clc
xabort
clc
cli
icebp
cmpsl
clc
js
jns
lock
clc
push
add
in
push
sub
clc
push
push
add
fsubr
fstpl
clc
sbb
ret
clc
sahf
cmp
add
clc
cld
sahf
or
add
sarb
add
roll
add
movntq
out
add
add
clc
in
mov
jge
add
sbb
add
mov
cmp
add
xbegin
clc
jg
add
out
or
int3
stc
cld
dec
shll
mov
into
pop
xabort
cmp
push
jge
xor
add
push
clc
inc
clc
movsl
clc
std
xor
add
jmp
fsts
add
clc
test
xchg
xbegin
xchg
mov
clc
imul
clc
insl
adc
mov
add
clc
aaa
pop
mov
out
jb
add
add
add
outsb
into
lods
jecxz
mov
out
push
add
aam
fidivs
clc
out
ret
clc
aam
add
xchg
add
push
add
cmc
pop
ret
clc
cmpsb
clc
mov
jmp
loop
stc
dec
xor
add
pop
addr16
adc
add
lods
jg
cmp
lock
and
pop
add
das
stos
fs
ret
clc
adc
add
fs
aam
fs
outsb
jecxz
or
add
push
std
cli
bound
add
add
add
add
cmp
push
jg
push
and
add
or
add
ret
fsubl
out
mov
add
cmc
lcall
add
dec
jmp
clc
mov
insl
push
xchg
dec
jmp
add
adc
add
sbb
xchg
test
clc
imul
push
add
cmp
clc
jle
mov
clc
popa
add
cmp
clc
ljmp
inc
clc
push
push
xchg
sbb
add
sbb
dec
mov
imul
add
cmp
pop
sub
clc
fs
pop
clc
sar
cmp
xchg
mov
mov
clc
sbb
add
cmp
clc
xbegin
add
test
pop
and
add
es
mov
cmp
pop
mov
mull
clc
loope
leave
and
mov
adc
add
and
add
mov
add
xor
pop
clc
icebp
and
add
sub
sbb
add
pop
test
js
cmp
clc
lret
out
loop
ret
pushl
pop
ret
test
add
add
outsl
cmp
jbe
in
imul
add
xchg
data16
pop
dec
data16
aaa
outsb
sbb
sti
int
clc
cmc
fsub
clc
add
jmp
mov
into
add
add
add
clc
xchg
shl
aas
mov
and
add
test
clc
mov
clc
sub
loop
cmp
clc
mov
clc
cmp
es
xor
add
inc
clc
dec
push
add
movsl
clc
clts
clc
cs
cmpsb
clc
in
xchg
push
mov
add
fldenv
inc
clc
in
cmp
xor
add
sti
jb
add
add
xchg
pop
cmp
xor
add
cmp
mov
mov
xbegin
nop
aas
mov
fcmovb
clc
adc
add
add
cmp
ret
clc
mov
jl
jp
cmp
xabort
jg
clc
and
pop
clc
scas
sahf
xor
add
lret
sar
dec
jmp
shrd
add
mov
clc
adc
add
push
push
int3
sbb
jl
push
sub
clc
pop
and
add
bound
add
clc
adc
add
call
sahf
add
add
add
xchg
mov
clc
aaa
jp
or
push
or
clc
mov
clc
pop
pushf
cltd
or
lock
adc
add
aad
push
add
ja
clc
movsl
clc
nop
mulb
ds
xlat
cmp
lcall
pop
out
loope
xchg
sub
mov
mov
ja
loopne
push
mov
add
clc
nop
pop
in
sub
add
adc
inc
clc
movsl
clc
cmp
sbb
clc
adc
add
push
add
lods
sar
es
ljmp
pop
jmp
or
fcomps
xchg
arpl
add
inc
add
xor
add
cld
pop
mov
cltd
lahf
loope
dec
push
add
inc
add
insl
bound
add
sbb
adc
add
out
push
inc
add
lcall
repnz
clc
pusha
add
fadd
clc
add
add
stc
jo
add
clc
mov
loop
pop
in
aaa
imul
mov
push
mov
mov
pop
jae
add
or
in
insl
and
add
mul
clc
cmpsb
clc
ljmp
add
daa
clc
call
shlb
add
rol
clc
pusha
add
sar
fstl
add
sub
push
clc
mov
push
cmp
cld
jecxz
adc
xor
add
lea
add
inc
clc
pop
jge
aas
pushl
add
sub
add
cmp
or
clc
fldcw
pop
mov
clc
outsb
aaa
mov
clc
sti
sar
pop
dec
ror
and
add
cmpsb
clc
adc
add
in
pop
jp
add
mov
clc
push
enter
leave
mov
in
cwtl
mov
in
mov
shrl
mov
cmp
clc
cld
fwait
mov
xor
add
adc
clc
out
insb
sar
aaa
xchg
clc
cmp
clc
data16
out
push
mov
fcomps
outsb
rol
clc
clc
jmp
cmpsb
clc
mov
jmp
out
xchg
insb
xchg
ret
clc
add
push
mov
es
clc
jns
clc
push
add
mov
inc
add
mov
jle
clc
push
popl
clc
push
loopne,pn
popa
add
mov
add
adc
add
clc
divl
add
or
clc
inc
clc
js
add
push
daa
clc
lea
leave
clc
or
cmp
add
jae
add
cmp
js
aam
clc
and
cmc
jns
dec
jae
add
add
fmull
push
aad
clc
fisttpl
clc
xchg
cmp
sbb
sub
popa
add
mov
clc
push
add
fidivrl
xchg
lret
add
js
add
add
fcompl
add
adc
clc
cmp
add
cmp
clc
fdivrl
push
sar
xor
add
pop
xor
add
insb
lcall
add
leave
test
and
clc
cmp
lods
cmp
dec
insl
cmpsl
clc
mov
dec
sub
add
clc
xor
add
rcl
ss
jae
add
pop
cmp
loop
pop
clc
sub
popl
mov
push
std
jecxz
adc
add
clc
ds
cwtl
push
or
sbb
add
loop
mov
in
out
aaa
clc
mov
clc
xabort
cmp
out
add
add
aaa
inc
clc
push
fs
mov
mov
sbb
add
and
add
adc
add
pushf
xor
add
add
call
clc
push
push
add
sahf
cmp
test
inc
clc
mov
mov
clc
sbb
add
clc
pop
mov
cltd
dec
xchg
jb
add
clc
or
push
add
nop
xchg
jns
add
and
fwait
pop
out
fisubs
clc
out
ss
clc
scas
sub
mov
mov
mov
sub
leave
and
test
xchg
negl
stc
xbegin
clc
and
add
push
pop
fbstp
sahf
cmp
add
clc
pop
mov
mov
pop
inc
add
pop
inc
add
loopne
pop
add
add
aas
daa
clc
mov
cld
in
fidivs
add
adc
add
push
add
pop
clc
or
nop
jge
sbb
clc
jbe
sar
clc
fs
jle
clc
sbb
stos
mov
dec
addr16
lea
pop
mov
mov
clc
in
mov
cmc
xchg
xor
add
das
or
mov
cmp
clc
sub
fbld
add
clc
popa
add
pop
clc
mov
pop
clc
ja
add
cmp
xchg
cmp
cmc
jno
add
shl
data16
mov
xchg
dec
mov
add
movsl
clc
pop
xchg
dec
imul
add
aam
push
add
add
add
lods
ljmp
add
lods
clc
test
sbb
sub
test
pop
xor
add
out
nop
roll
clc
jmp
clc
daa
clc
pop
out
lods
jmp
pushf
aam
clc
fcoml
add
js
cmp
je
out
xor
add
add
daa
clc
cwtl
fcoml
add
jge
cmp
clc
xchg
cwtl
fs
iret
jns
nop
jae
add
clc
inc
clc
pop
pop
clc
mov
add
movsl
clc
xchg
sub
push
mov
divl
add
clc
sar
adc
add
cmp
and
add
clc
pop
insl
fs
cs
add
repz
jbe
outsl
push
scas
xor
add
clc
cmp
xchg
add
add
or
loop
push
add
lahf
mov
clc
aaa
inc
clc
add
add
add
pop
sbb
sub
cli
mov
clc
xlat
inc
clc
sbb
popa
add
mov
std
or
ss
and
add
add
cmc
mov
add
mov
xchg
jbe
sbb
clc
pop
mov
inc
clc
push
inc
clc
sub
sbb
add
mov
test
lret
sub
fstl
add
lock
add
add
cmp
add
mov
clc
jge
adc
add
cmp
ficompl
add
add
mov
clc
mov
int3
nop
cmp
clc
mov
inc
add
sar
clc
mov
add
mov
in
mov
clc
cmp
data16
fisubrl
cmc
push
hlt
and
add
clc
xchg
test
fisubrs
clc
scas
adc
add
add
lret
jbe
add
imul
push
mov
cmp
jae
add
and
jecxz
in
pop
or
adc
test
add
out
imul
pop
stos
and
add
es
notl
add
pop
leave
mov
clc
add
add
mov
add
xchg
add
add
dec
stos
push
add
add
push
mov
clc
cwtl
fimull
imulb
add
ss
clc
xor
add
clc
or
add
daa
clc
arpl
add
sar
mov
push
add
add
add
cmp
add
das
dec
call
add
inc
clc
mov
clc
repz
ss
adc
add
clc
pop
jns
add
add
add
xchg
jne
jp
fisttpll
add
repnz
cwtl
cmp
jb
add
add
add
inc
add
stc
outsl
cmp
enter
xchg
mov
dec
and
add
and
add
clc
dec
cmpsb
clc
inc
add
xor
mov
dec
clc
xchg
pop
fs
and
add
add
scas
popf
decl
cwtl
jb
add
jo
add
loop
xabort
push
add
and
add
fcomp
add
add
pop
clc
inc
add
lret
arpl
add
pop
dec
or
mov
imul
xlat
dec
push
add
add
add
clc
push
pop
fmull
jno
add
add
and
add
pushf
and
add
je
fsubrs
clc
inc
clc
or
jmp
je
addr16
inc
clc
adc
add
clc
inc
add
pop
scas
add
add
add
add
dec
xlat
jmp
ja
clc
or
jmp
mov
clc
jb,pt
add
jae
add
add
adc
pop
xor
add
sar
xchg
pop
or
jge
out
cmpsb
clc
inc
clc
pusha
add
lret
in
pop
jbe
clc
mov
cmp
stos
aas
push
je
cmp
jne
lods
jo
add
sbb
adc
add
clc
shr
inc
add
lahf
jbe
clc
jge
cmpsb
clc
or
mov
add
xchg
sbb
clc
add
add
sbb
lret
ret
clc
mov
outsl
adc
add
add
add
add
or
xor
add
xlat
mov
iret
xlat
test
mov
add
outsb
xor
cmp
cmp
sbb
add
push
clc
add
add
into
sbb
popa
add
mov
jge
insb
popa
add
jp
clc
std
add
add
mov
out
lock
push
add
jae
add
or
add
add
add
cmpsl
clc
and
add
add
ss
cld
cmp
add
popa
add
icebp
mov
or
repnz
jno
add
add
clc
mov
xchg
push
add
mov
clc
lahf
mov
mov
cmp
add
mov
clc
pop
mov
dec
sti
jnp
jl
clc
mov
xor
add
add
lahf
rclb
inc
add
idiv
sbb
cmp
cs
jo
add
add
cmc
cmp
fsubl
in
or
inc
add
pop
mov
add
mov
rclb
xor
imul
pusha
add
lods
adc
add
mov
sub
lahf
mov
push
mov
add
cld
cltd
xchg
bound
add
and
add
je
clc
daa
clc
mov
clc
pop
ds
imul
cmp
inc
clc
and
add
add
add
aas
adc
add
clc
and
or
clc
adc
add
add
add
add
clc
cs
loope
add
jb
add
fcmovbe
push
add
pop
or
mov
clc
mov
daa
clc
das
and
sahf
push
add
pop
xor
add
lret
popa
add
jno
add
in
mov
add
xchg
or
or
lret
xchg
jge
icebp
das
jae
add
stos
pop
fdiv
mov
xchg
js
add
sub
cmp
pop
fstpl
push
add
xbegin
clc
jmp
add
cmp
clc
cmp
mov
test
ret
clc
dec
or
clc
mov
push
jno
add
add
add
clc
jb
add
lods
dec
ds
xlat
jbe
mov
push
add
fisubrs
jne
clc
iret
xbegin
pop
enter
add
adc
add
ret
arpl
add
clc
shll
xchg
and
add
push
bound
add
clc
fimull
clc
lock
pop
xchg
es
popa
add
jp
int
test
and
add
sbb
clc
loopne
or
outsb
add
xlat
xor
add
clc
pop
inc
add
dec
vcmpps
clc
sar
mov
imul
push
add
jo
add
add
mov
add
rolb
aas
dec
inc
add
fwait
in
push
loopne
mov
jno
add
clc
sti
mov
arpl
add
cs
loop
push
movsl
clc
jno
add
daa
clc
aaa
mov
gs
dec
mov
sbb
ret
clc
jl
clc
xchg
xchg
jae
add
outsl
idivb
test
shr
imul
push
and
fwait
and
cmp
add
sar
mov
clc
pop
aas
pop
cmpsl
clc
inc
add
sub
sbb
mov
clc
adc
add
aaa
lcall
sub
add
mov
stos
es
mov
sbb
lret
add
hlt
pop
jno
add
mov
outsl
mov
mov
mov
fyl2xp1
or
cmp
add
add
mov
clc
jle
mov
cmp
adc
add
add
aad
daa
clc
sar
xchg
and
dec
jne
clc
mov
lods
cmp
clc
jmp
clc
in
fsubrs
ficoms
add
mov
add
js
clc
and
add
clc
xor
jecxz
or
jo
add
xchg
aaa
sbb
clc
scas
pop
nop
adc
clc
fimull
int3
pushf
inc
add
push
and
add
push
mov
mov
inc
clc
jg
clc
insl
loop
rcll
gs
add
add
add
xchg
sar
sbb
add
cmp
xchg
in
xchg
gs
jns
int
fstp
outsb
popa
add
cmp
clc
mov
fdivs
frstor
stc
jns
mov
add
clc
insb
ret
clc
scas
mov
clc
and
add
add
adc
add
add
sub
iret
lods
sub
add
stos
pop
sub
fs
stc
clc
pop
jecxz
leave
rep
ds
aaa
pushf
fistpll
clc
in
sahf
or
pop
mov
clc
decl
push
add
cwtl
sbb
sar
sbb
add
add
clc
sbb
mov
sar
ret
add
xchg
ds
sbb
add
dec
mov
mov
mov
sub
push
add
jns
aas
pop
int
cmp
add
out
adc
add
sbb
clc
popa
add
inc
add
push
inc
clc
push
adc
add
adc
add
sub
cli
push
add
jo
add
xchg
cmc
push
or
push
clc
jl
sub
mov
movsl
clc
cmp
addr16
cld
adc
add
outsl
nop
lods
jne
push
add
pusha
add
stos
mov
cltd
xor
add
add
lcall
clc
stos
movsl
clc
dec
mov
lods
out
testl
jbe
mov
imul
push
add
add
add
clc
jl
es
sub
clc
inc
add
xchg
inc
add
sbb
clc
insb
lahf
sahf
xchg
scas
mov
fdivrs
push
inc
add
sub
clc
in
and
add
clc
add
add
iret
push
clc
in
ret
add
cmp
clc
out
fcmovnu
push
lea
add
cmp
xor
add
add
cmpsl
clc
lret
clc
test
pop
xchg
ss
out
loope
cmpsb
clc
adc
insb
out
lods
aas
popa
add
out
cmp
jnp
clc
inc
add
imul
add
dec
add
add
clc
cli
dec
lcall
add
jle
clc
inc
add
pop
clc
cmp
clc
sbb
xabort
sar
ficoml
add
rclb
add
sub
adc
ficoms
lock
pop
jnp
clc
adc
imul
int3
adc
add
clc
and
add
in
pop
test
daa
clc
sbb
jb
add
insl
xor
add
add
inc
add
bound
add
pop
imul
sar
jno
add
add
pop
clc
enter
or
dec
sub
mov
loop
xlat
mov
movsb
clc
sub
cmp
sbb
or
and
add
jl
jecxz
or
add
or
push
pop
clc
push
add
adc
iret
lcall
in
push
shl
clc
cli
lret
aas
xlat
pop
clc
sar
cwtl
cmp
inc
clc
out
ss
clc
cs
dec
mov
add
add
mov
in
xor
add
or
bound
add
add
lahf
push
in
sub
clc
xabort
mov
xchg
mov
xchg
sti
push
add
mov
mov
arpl
add
clc
sar
dec
das
testb
mov
imul
fdivrl
dec
aaa
cltd
cmp
add
inc
clc
pop
xchg
fcoms
clc
xor
add
in
outsl
negl
dec
push
pop
cwtl
test
scas
dec
pushf
in
cmp
add
movsl
clc
pop
aaa
xchg
cmp
add
in
daa
clc
loopne
fisttpll
sub
clc
iret
aas
jge
mov
add
kmovw
jnp
fbld
cld
mov
clc
popf
pop
or
pop
das
xor
clc
cmp
clc
in
push
add
push
loope
pop
loopne
xor
add
add
clc
xchg
scas
mov
pop
syscall
clc
cmp
jge
clc
mov
dec
testl
add
scas
sub
add
sbb
clc
pushf
cltd
jmp
clc
jo
add
xor
add
sub
aaa
sbb
and
add
sub
mov
sbb
xor
clc
xor
clc
lahf
push
add
rorl
push
cmp
clc
pop
adc
add
dec
or
jb
add
add
in
cmp
lcall
add
clc
cmp
add
xchg
std
mov
cmp
das
push
pop
and
add
add
cmp
jae
add
push
add
add
add
push
loope
push
clc
mov
clc
out
fwait
aam
clc
pop
push
bound
add
vmovhps
jp
add
ret
push
clc
mov
es
fs
mov
push
and
mov
clc
mov
clc
lods
and
fucomip
ds
cmp
push
mov
test
sar
add
xchg
ja
insl
lcall
add
lea
add
jp
clc
movsb
clc
lods
ss
inc
clc
lret
mov
mov
add
mov
add
add
mov
add
cmp
into
in
jle
bound
add
clc
adc
add
add
clc
cmp
dec
daa
clc
pushf
xchg
dec
push
add
lods
inc
clc
jmp
stc
adc
add
xor
add
add
xchg
jo
add
mov
add
movsb
clc
jecxz
ret
scas
push
adc
add
jb
add
adc
add
call
cmpsb
clc
into
xchg
lods
cmp
pop
fdivr
mov
add
clc
mov
clc
out
ret
clc
lret
cmp
in
push
adc
add
cmp
cld
or
add
loopne
jb
add
fsubs
clc
out
push
mov
adc
lods
inc
clc
add
and
add
sti
knotw
or
add
das
mov
add
xor
add
lret
ret
aaa
outsb
jmp
clc
xlat
mov
dec
sahf
faddl
add
clc
popf
sub
pop
arpl
add
push
clc
sbb
add
xor
rorb
loope
pop
gs
jno
add
test
push
xchg
dec
xor
adc
xor
inc
add
mull
in
dec
pushf
mov
clc
icebp
fldenv
leave
mov
lahf
push
or
xchg
insl
mov
add
push
add
fildl
add
xabort
pop
enter
clc
std
dec
pop
cmp
mov
clc
das
xchg
pop
mov
add
add
mov
pop
xbegin
xor
add
xchg
mov
clc
push
mov
push
add
imul
adc
add
clc
add
add
mov
pop
cmp
bound
add
fdivr
mov
add
pop
cmpsb
clc
cmp
add
add
out
xor
add
addr16
jecxz
add
sarb
adc
ljmp
mov
cmp
add
into
mov
lock
add
clc
es
aas
insb
outsl
loope
cmpsl
clc
pop
inc
clc
imulb
add
mov
clc
cmp
mov
inc
add
xlat
in
jb
add
scas
movsl
clc
add
in
decb
fsts
cmp
scas
movntps
clc
repnz
out
std
inc
add
data16
xlat
mov
add
add
popa
add
es
xor
add
sahf
xabort
std
std
insb
je
adc
add
add
jg
mov
sub
pop
addr16
daa
clc
jne
mov
cmp
push
fdiv
popf
aad
shll
add
xchg
dec
xlat
cwtl
adc
add
pop
xchg
adc
add
push
add
xor
test
mov
adc
add
ja
arpl
add
clc
aaa
pop
add
add
mov
das
xchg
inc
clc
scas
std
jno
add
xchg
mov
addr16
or
xlat
xor
add
jmp
add
inc
add
pop
dec
mov
or
ds
ret
clc
cmp
je
dec
inc
add
arpl
add
pop
test
add
pop
push
pop
lahf
rorb
hlt
mov
mov
aad
add
add
out
out
js
add
mov
add
clc
cs
pop
mov
add
xchg
or
int3
xchg
mov
loopne
hlt
dec
dec
cltd
in
xchg
cmp
stos
stos
mov
sbb
mov
clc
sbb
mov
aad
clc
bound
add
clc
inc
add
cld
and
cmc
mov
icebp
aad
ds
arpl
add
jbe
call
sub
add
or
add
sbb
icebp
sbb
add
lods
movsl
clc
jne
dec
add
idiv
pop
repnz
clc
outsb
pop
repz
add
xor
add
clc
jecxz
xor
add
and
add
adc
or
mov
test
mov
or
xor
add
pusha
add
or
ficoms
fwait
or
mov
push
add
mov
clc
adc
add
mov
cmp
loopne
xabort
aad
clc
or
add
ret
add
add
shl
clc
xchg
test
push
xchg
scas
repz
clc
je
clc
cmp
mov
dec
test
mov
lret
clc
mov
aas
mov
arpl
add
aas
pop
pop
push
add
out
loope
xor
add
outsb
js
clc
sub
and
add
add
add
pop
mov
jne
movsl
clc
push
add
cld
mov
popf
in
arpl
add
dec
icebp
mov
add
aas
dec
jns
test
mov
cmc
xchg
push
adc
add
clc
pop
xchg
addr16
mov
loope
add
add
sub
xchg
xlat
dec
lcall
adc
popa
add
testb
add
divl
add
cmp
out
out
mov
clc
jne
pop
cmp
add
push
int
clc
push
clc
fstps
push
add
iret
dec
sbb
mov
xchg
cltd
mov
jns
xchg
es
sbb
add
push
add
inc
add
and
add
clc
mov
dec
mov
or
cmp
mov
fs
mov
clc
movsb
clc
movsl
clc
mov
pushf
bound
add
xor
add
bnd
or
xor
add
adc
sub
test
cmp
clc
add
add
inc
clc
push
or
sub
clc
into
es
jno
add
out
pop
data16
push
add
cmp
push
add
jle
mul
clc
xchg
stc
pop
clc
pop
or
popa
add
sti
push
xchg
sbb
bnd
add
mov
mov
pop
fs
add
clc
pop
test
and
push
add
jmp
sub
cld
popf
dec
adc
add
sbb
jg
add
add
add
mov
add
add
repz
idivl
jae
add
add
jmp
xor
add
iret
jno
add
add
enter
hlt
sbb
lea
add
add
clc
and
add
sar
add
adc
clc
sub
clc
sub
mov
iret
adc
add
outsl
dec
lods
popf
or
clc
jl
loopne
or
clc
xlat
pop
mov
add
adc
lock
mov
jns
add
in
adc
add
jae
add
add
lock
out
clc
cs
jl
clc
nop
inc
clc
into
mov
addr16
cs
clc
cmp
clc
cwtl
ljmp
mov
sti
rorl
jbe
pop
jp
sub
push
cmp
add
add
sub
daa
clc
or
mov
clc
pop
in
jg
clc
sub
xor
add
es
sub
pop
sub
add
das
lret
pop
cmp
outsl
test
clc
add
xchg
stos
into
xchg
sbb
out
ljmp
fsubrl
mov
jns
cmpsl
clc
dec
push
add
mov
xchg
popa
add
inc
clc
iret
fs
cmovbe
repnz
clc
xchg
push
add
test
fsubrs
adc
add
sar
add
adc
add
lods
cs
cmp
pop
or
scas
addr16
mov
mov
push
add
data16
mov
ret
clc
pop
popa
add
and
add
sar
inc
clc
arpl
add
rorl
sub
push
mov
push
lcall
cmp
add
dec
dec
mov
pop
and
add
push
clc
pop
fwait
cwtl
outsb
out
add
lea
enter
mov
clc
clc
out
fs
jb
add
clc
jno
add
add
mov
mov
lcall
add
mov
inc
clc
leave
or
sbb
lahf
cmp
add
adc
add
add
add
mov
sbb
out
fidivs
add
push
repz
add
push
cs
int3
adc
add
clc
lret
clc
fiaddl
sar
testb
clc
cmp
jp
lea
add
xchg
xchg
flds
add
rcrl
loop
pop
loop
mov
add
add
pop
cmp
cmp
loope
mov
clc
data16
mov
cmp
clc
pop
clc
push
inc
add
add
add
sbb
out
stos
and
add
add
in
or
clc
inc
clc
add
add
frstor
add
cmp
and
add
lret
adc
lock
fcoml
add
sbb
add
dec
add
dec
clc
sub
add
icebp
mov
clc
int
mov
pop
push
add
add
jl
or
jnp
clc
inc
clc
shll
add
sar
clc
push
data16
xor
push
mov
cmc
ja
pop
ljmp
add
clc
adc
add
or
sub
clc
lods
add
pop
sub
lcall
xchg
sub
imul
clc
pusha
add
add
add
fs
inc
clc
mov
dec
mov
add
add
add
out
loope
sub
xchg
jmp
dec
insb
jge
in
rorl
add
aaa
adc
add
add
pop
jmp
cmc
mov
add
sbb
jnp
add
into
bound
add
push
sub
clc
rolb
fisubrl
cmp
insl
test
bound
add
xor
add
scas
dec
wbinvd
loopne
mov
add
or
std
repnz
add
add
clc
mov
add
push
add
dec
in
fs
inc
add
sbb
add
push
clc
dec
stos
inc
clc
sarb
or
inc
clc
mov
jno
add
cmpsl
clc
inc
clc
pusha
add
sbb
clc
js
lock
inc
clc
clc
mov
cmc
mov
clc
adc
add
clc
aaa
sub
push
and
add
mov
add
push
clc
fisubl
add
mov
clc
insb
xor
add
sbb
sub
lods
daa
clc
mov
clc
sub
add
add
add
dec
aad
cld
dec
fiaddl
add
mov
or
xchg
pop
movsb
clc
xor
add
add
add
lock
add
xchg
jp
push
add
xabort
mov
mov
and
xlat
shlb
add
push
add
lret
clc
pusha
add
movsb
clc
push
nop
lea
aad
clc
sbb
add
mov
mov
mov
sub
cli
mov
clc
push
add
cmp
xchg
mov
js
mov
clc
cwtl
lods
loope
lret
jge
in
test
lods
inc
clc
test
test
pop
lods
test
xchg
cs
lods
dec
push
add
aam
jbe
clc
pop
clc
push
sbb
add
and
add
jae
add
xlat
xor
add
add
add
xor
movsl
clc
popl
clc
mov
rolb
sahf
jno
add
add
add
xor
add
call
sub
fcmovnu
or
shrl
dec
xchg
xchg
mov
imul
mov
add
inc
clc
outsb
dec
lret
jo
add
xor
add
cmp
movsl
clc
and
clc
divb
push
sbb
adc
push
add
enter
add
adc
add
in
push
ret
inc
clc
int
outsb
ret
insl
jae
add
add
mov
adc
add
add
add
add
mov
xchg
leave
xbegin
sti
push
add
inc
clc
out
mov
add
clc
cs
into
cmc
cmp
outsb
fcmovu
cmp
add
imul
in
ficoml
lea
add
adc
pop
cmp
add
lods
jnp
iret
out
add
add
cmp
clc
sub
pop
insl
pushf
jmp
dec
mov
clc
rcll
dec
mov
pop
clc
push
pminsw
adc
add
dec
cmp
dec
inc
clc
mov
lock
add
std
adc
add
mov
or
add
xlat
inc
add
cwtl
sub
add
xor
push
stos
and
clc
fists
xlat
xor
add
inc
add
or
mov
xchg
and
cwtl
adc
add
clc
adc
add
call
jo
add
sub
movsb
clc
jbe
push
clc
cltd
xchg
mov
adc
add
xchg
mov
int3
mov
push
mov
add
add
cmpsl
clc
pop
sarl
mov
add
add
jp
clc
xchg
inc
add
and
add
aas
push
clc
xchg
pop
adc
add
add
or
cmp
clc
mov
add
pusha
add
jbe
or
cwtl
jp
mov
pop
shrl
mov
es
pusha
add
xlat
lahf
push
add
sahf
and
add
pop
clc
clc
std
pusha
add
pop
add
jle
cmp
cld
mov
xor
add
xor
add
jg
clc
xchg
sar
addr16
loop
sbb
in
cmp
cmp
clc
mov
dec
xbegin
jp
enter
push
add
xchg
push
add
movsb
clc
cld
clc
in
add
add
add
add
sti
out
mov
pushf
aas
clc
gs
cmp
enter
cmp
clc
adc
clc
jae
add
mov
cmc
out
out
xbegin
push
add
insb
test
push
add
adc
add
and
add
clc
pop
inc
add
inc
add
jno
add
jle
add
cwtl
or
clc
inc
add
jl
stos
dec
lock
imul
clc
jmp
clc
fists
xor
xchg
int
popf
inc
clc
clc
cmp
js
add
xchg
clc
jo
add
push
add
aas
cmpsl
clc
push
pop
jae
add
cmpsb
clc
pop
push
shll
ret
outsl
call
add
clc
adc
add
test
clc
ja
cmpsb
clc
dec
dec
repz
clc
mov
pop
xlat
in
adc
add
test
out
loope
repz
xchg
or
adc
xor
add
clc
dec
sbb
clc
xor
add
clc
cld
sahf
sbb
outsb
push
add
jns
in
scas
adc
faddl
add
dec
pop
push
push
clc
loopne
mov
in
pop
daa
clc
pop
test
lods
push
or
out
jbe
jnp
mov
mov
jnp
jb
add
jb
add
jg
add
movsl
clc
mov
sub
cmp
dec
cmp
dec
repz
inc
add
or
addr16
lret
add
clc
push
add
or
icebp
dec
push
add
dec
mov
cwtl
adc
xabort
and
add
rcll
clc
mov
dec
data16
or
xor
add
xlat
xor
add
add
or
cmpsb
clc
cmp
add
fnstenv
add
mov
clc
cwtl
xor
add
add
add
lcall
xchg
cmp
inc
add
cs
in
sub
clc
mov
pusha
add
jbe
clc
aaa
dec
dec
testl
add
add
call
clc
or
jne
por
add
out
and
add
cmpsl
clc
mov
ret
clc
lahf
xchg
mov
clc
cmpsb
clc
xor
add
in
add
add
add
add
mov
clc
inc
add
imul
add
dec
insl
fisttpl
stos
incb
sub
or
add
pushf
mov
jb
add
cwtl
clc
js
clc
xchg
shlb
sar
xor
add
clc
aaa
aas
pop
clc
lods
arpl
add
add
arpl
add
add
mov
add
jo
add
jecxz
xchg
sub
mov
cmp
jp
dec
xor
add
add
add
add
int
pop
adc
add
clc
stc
xchg
lock
xor
add
add
clc
add
add
add
fs
vmovups
add
cmp
inc
clc
inc
add
call
pop
data16
jb
add
add
push
das
in
push
adc
clc
pop
xabort
scas
dec
testl
fstl
add
and
add
push
sar
add
lahf
ds
pop
xchg
testb
and
pop
or
or
fdivr
push
stc
inc
add
and
add
mov
add
mull
mov
mov
iret
jecxz
dec
inc
clc
jbe
clc
or
adc
add
ljmp
negb
cmp
arpl
add
add
xlat
inc
add
pop
or
clc
jg
adc
add
sbb
jnp
cmp
adc
add
add
cmc
sahf
push
add
sub
mov
jbe
mov
fwait
ret
clc
sub
add
cmp
clc
pop
clc
sub
xchg
push
push
add
pop
cs
jns
scas
cmp
lock
inc
add
pavgb
dec
xor
add
add
or
clc
ret
es
bound
add
add
frstor
pop
push
add
mov
push
clc
xor
add
push
pop
or
or
lcall
sbb
add
stos
cmp
ljmp
out
push
stos
sub
dec
and
adc
add
add
push
clc
lret
push
cs
clc
adc
add
clc
xchg
inc
add
jg
cmp
clc
sti
pop
xchg
insb
cld
pop
push
clc
push
add
notl
and
pop
and
add
outsb
xabort
inc
add
repz
add
cmpsb
clc
clc
and
sbb
xchg
movsb
clc
lcall
pop
mov
sbb
cmc
movsb
clc
lods
jo
add
jp
dec
mov
fsubrs
test
js
clc
cmp
addr16
jecxz
cmp
mov
add
cltd
data16
scas
stos
mov
insl
adc
add
insl
adc
add
or
clc
cmp
add
adc
add
pop
pop
js
movsb
clc
mov
clc
sahf
sbb
dec
lcall
int3
out
cmp
xor
pop
push
sbb
add
cmp
aam
inc
add
gs
iret
mov
clc
jecxz
adc
add
lcall
add
in
xor
add
icebp
inc
clc
leave
inc
add
dec
stos
push
xor
es
push
clc
ud1
in
das
push
adc
add
jbe
sti
cmp
in
inc
add
and
pop
cmp
clc
pushf
enter
add
push
add
rolb
in
scas
xchg
mov
add
and
add
arpl
add
dec
das
or
pop
sbb
xchg
stos
stc
ss
movsb
clc
hlt
pop
mov
add
jmp
clc
gs
pop
mov
aaa
jmp
inc
clc
and
daa
clc
negb
popa
add
add
add
inc
clc
inc
clc
loop
or
clc
sub
add
bound
add
jl
aam
push
mov
shrb
add
fsubrs
jp
clc
xchg
sbb
add
jmp
clc
leave
es
fdiv
in
aam
clc
movsb
clc
js
mov
aas
cmpsb
clc
xbegin
dec
jno
add
add
add
bound
add
clc
mov
add
xchg
sub
add
add
push
jecxz
push
add
adc
fwait
rolb
clc
out
outsb
dec
jp
jle
xlat
scas
lods
icebp
xlat
lahf
push
mov
clc
mov
insl
mov
fstpl
add
add
clc
jp
mov
clc
int
xabort
and
clc
enter
addr16
negl
add
mul
clc
pop
out
in
push
clc
sahf
jp
cli
jne
clc
jmp
xchg
sahf
add
inc
add
mov
shll
imul
jns
inc
add
cmpsb
clc
test
cmp
xchg
lock
add
pop
pop
clc
adc
add
clc
sub
clc
sbb
add
push
out
fs
mov
int3
imul
add
xchg
xchg
movsl
clc
mov
leave
loop
stc
sub
add
jae
add
jno
add
clc
jno
add
jl
clc
mov
add
stos
cmp
push
adc
add
clc
clc
pushf
loope
cmp
je
add
xchg
iret
loope
cs
sub
add
mov
clc
clc
sbb
inc
add
add
add
jp
jecxz
xor
add
pop
dec
pop
dec
xor
push
cmp
aad
clc
jmp
cmp
xabort
movntq
out
pop
mov
movsb
clc
jmp
mov
add
adc
test
loope
cli
inc
add
mov
std
jl
add
jns
cmp
clc
cmp
clc
pop
cmpsl
clc
enter
scas
add
add
bound
add
sub
add
mov
cmp
cmp
pop
mov
add
cmp
call
cli
add
add
add
add
enter
add
clc
testl
inc
clc
lahf
sbb
sub
mov
add
add
sahf
push
ljmp
adc
int
add
xor
bound
add
add
mov
clc
jmp
add
add
jle
add
ljmp
add
jbe
clc
or
jp
xchg
jbe
add
sub
jb
add
negl
sbb
clc
pop
cmp
in
xchg
and
add
jno
add
clc
push
add
fimull
clc
or
add
add
popa
add
xlat
mov
clc
xor
scas
mov
dec
cmp
xlat
sbb
add
mov
dec
in
fcompl
add
add
lods
mov
clc
imul
clc
or
mov
clc
ja
mov
or
add
leave
cmp
sub
popf
inc
add
xchg
ret
pop
mov
add
mov
add
xlat
push
add
out
dec
sub
shr
pop
cld
xchg
call
xbegin
lcall
push
ret
sub
xchg
jno
add
mov
push
add
out
js
pop
es
int3
in
cmc
mov
add
inc
add
cltd
xchg
or
fdivs
aad
inc
add
clc
inc
add
add
js
mov
outsl
pop
clc
sub
add
data16
and
add
pop
xchg
xor
add
js
clc
cmp
add
inc
add
push
inc
add
add
add
inc
add
pop
pop
adc
add
add
jnp
lret
test
xchg
xchg
insl
imul
xor
mov
aaa
mov
mov
sbb
clc
mov
sub
pop
cmc
and
add
inc
add
ljmp
clc
xchg
cmp
inc
clc
mov
cs
cmp
mov
data16
out
das
icebp
adc
add
clc
xchg
mov
repnz
clc
add
add
push
mov
into
insb
add
add
test
ss
xbegin
jns
inc
add
ficoms
mov
add
pop
xlat
mov
push
add
mov
popa
add
adc
add
add
dec
sbb
pop
sub
ljmp
add
sub
test
clc
push
cmp
data16
bound
add
movsb
clc
nop
icebp
inc
clc
or
stos
dec
test
adc
add
add
add
mov
test
data16
mov
add
cmp
add
clc
mov
fldt
repnz
int3
inc
clc
outsb
push
mov
xchg
push
add
imul
sub
xor
add
lods
jle
adc
clc
loop
jp
xchg
jo
add
iret
mov
dec
push
add
add
inc
clc
jnp
clc
xchg
ljmp
pop
push
inc
clc
push
add
test
mov
clc
sub
repz
or
clc
or
inc
add
iret
cmp
jg
dec
pop
clc
stos
pushf
pop
std
or
into
in
add
adc
add
adc
add
clc
xchg
xchg
fstpt
clc
mov
clc
daa
clc
mov
xor
add
mov
into
mov
add
jle
inc
add
cli
movsb
clc
lods
out
jg
add
add
clc
inc
add
sbb
clc
push
add
mov
lret
clc
mov
out
dec
cld
test
stc
inc
clc
adc
add
add
mov
mov
aam
clc
cmp
bswap
das
mov
jmp
ds
clc
enter
add
pop
es
lret
mov
add
add
mov
clc
ja
clc
repz
push
cltd
data16
icebp
ss
pop
jge
iret
mov
clc
aaa
mov
xchg
push
lods
xor
or
pop
aam
addr16
adc
add
add
pop
inc
add
outsl
lock
and
add
clc
cmp
inc
clc
mov
pop
testl
cmp
add
push
add
rcl
or
jmp
sbb
ret
adc
add
cmp
clc
ds
fdivl
add
mov
pop
inc
clc
mov
add
add
xor
add
add
add
lods
insl
mov
add
add
call
pop
das
dec
jbe
jae
add
clc
add
cmp
add
out
sbb
pop
sbb
and
pop
mov
divb
add
add
pop
leave
out
push
add
movsb
clc
cld
notb
xor
xor
add
movsl
clc
fldl
add
cmp
clc
ja
fs
xabort
add
pop
jecxz
xchg
dec
xchg
jnp
stos
ds
addr16
adc
add
inc
add
pop
mov
dec
out
sbb
cmp
xlat
icebp
adc
add
xchg
lcall
or
clc
dec
scas
test
clc
scas
clc
sbb
jg
jo
add
clc
inc
clc
push
add
mov
sbb
or
xchg
mov
and
add
add
push
xor
xchg
ss
or
clc
imul
add
add
add
cmp
add
mov
clc
dec
xchg
repnz
xor
call
dec
xchg
dec
mov
clc
push
jnp
add
xbegin
add
add
add
outsb
div
xchg
lcall
add
stos
mov
add
sahf
mov
add
and
add
clc
inc
clc
dec
xor
test
push
add
and
mov
add
imul
push
add
sub
test
xchg
cmp
clc
adc
cmp
clc
jmp
bound
add
in
lcall
icebp
sti
sbb
adc
add
movsl
clc
sar
xchg
addr16
xabort
aad
clc
mov
jb
add
jo
add
add
pop
sbb
int3
jge
adc
add
jb
add
add
sub
pop
xchg
xchg
divl
add
add
cmp
clc
mov
pusha
add
sar
addr16
sbb
add
cltd
mov
xor
add
add
cmp
add
mov
add
or
ja
or
inc
add
icebp
xabort
mov
dec
out
adc
or
cmp
mov
clc
and
add
add
inc
add
sar
clc
icebp
dec
xbegin
add
sub
xchg
arpl
add
add
clc
mov
add
dec
test
incl
and
add
pop
adc
add
add
add
mov
clc
mov
or
popa
add
and
xchg
hlt
lahf
lret
lret
mov
mov
popf
jae
add
xor
add
mov
sub
add
lret
pop
sbb
clc
sysexit
movsb
clc
pop
clc
mov
clc
shlb
dec
sub
cmpsl
clc
aam
out
adc
add
clc
mull
clc
lahf
dec
iret
xor
and
add
jne
add
test
dec
ret
clc
mov
clc
pop
hlt
fs
rorb
mov
add
lcall
add
iret
inc
add
and
add
clc
repnz
clc
cmp
lods
jae
add
lock
mov
cmp
clc
test
or
pop
mov
clc
xchg
or
push
bound
add
inc
add
push
add
repz
add
and
dec
mov
mov
sbb
aas
jmp
sub
xchg
lret
testb
add
sar
dec
sar
clc
data16
xchg
insl
in
fidivs
add
mov
add
fistpl
add
xor
add
data16
mov
add
pop
jl
push
leave
fstpl
std
leave
inc
add
sbb
addr16
sar
clc
idiv
jg
push
and
add
add
mov
clc
sub
dec
adc
add
push
mov
push
add
js
clc
sahf
es
je
stos
jle
clc
test
inc
clc
xchg
nop
pushf
aas
popa
add
pop
clc
icebp
je
add
sbb
cli
imul
outsl
sbb
mov
xchg
out
mov
xor
add
dec
insb
push
cld
lcall
add
fs
clc
pop
jb
add
add
xor
add
add
add
add
jb
add
aam
push
cmp
cltd
cmp
out
in
pop
repz
add
jnp
out
jno
add
mov
add
imul
ljmp
jo
add
clc
adc
add
add
mov
xlat
es
mov
add
adc
add
dec
xchg
and
add
add
inc
clc
in
rorl
cmp
mov
clc
dec
jns
jbe
mov
das
movsb
clc
mov
scas
sub
popa
add
mov
clc
sahf
out
setne
out
pop
xchg
sti
js
sbb
lods
mov
add
add
clc
sbb
add
cwtl
jo
add
add
add
xor
add
clc
sbb
inc
clc
inc
add
dec
es
or
mov
clc
cli
mov
clc
in
in
sub
sub
mov
add
xchg
ret
clc
cltd
xbegin
movsb
clc
push
clc
lahf
out
push
add
push
add
mov
add
daa
clc
and
add
in
aam
insb
out
add
add
ss
out
sar
std
or
jbe
fistpll
cmp
add
inc
add
push
mov
out
mov
inc
clc
jns
add
outsl
inc
add
sarb
lods
lock
and
add
clc
xor
jmp
data16
stos
bound
add
in
mov
jbe
add
add
daa
clc
pop
adc
sub
adc
add
and
jno
add
add
movsb
clc
sub
lods
mov
fists
mov
sbb
dec
rclb
add
and
add
clc
push
pop
add
add
add
clc
ja,pn
add
clc
mov
add
sub
clc
and
jle
xchg
sbb
pop
lahf
adc
add
push
push
add
jle
popa
add
mov
add
mov
or
outsb
pop
and
add
clc
add
add
pushf
lock
inc
add
mov
sub
cmp
add
mov
mov
clc
jb
add
icebp
xor
add
rcrb
add
jecxz
cmp
int3
xor
add
clc
jae
add
push
add
cmpsb
clc
es
gs
data16
add
xchg
xchg
adc
add
in
and
add
clc
push
add
cmp
jno
add
clc
add
add
inc
add
mov
add
clc
cmp
xchg
xchg
aas
xor
add
clc
mov
fistpll
clc
icebp
sarl
mov
mov
clc
cmp
add
sbb
push
cmp
out
das
jo
add
xchg
jl
clc
inc
clc
cmp
clc
pop
vcomiss
adc
add
nop
ljmp
jb
add
mov
clc
push
add
cwtl
add
add
dec
nop
jle
faddl
add
cmp
add
jns
pop
fucomp
test
mov
jge
and
add
fs
and
add
clc
inc
add
jno
add
cli
cli
mov
xchg
cmp
mov
mov
xor
clc
fldcw
add
cmp
clc
xchg
icebp
testb
lods
fistps
cld
cmpsl
clc
bound
add
sahf
ret
clc
fcom
sar
add
mov
add
jg
xlat
leave
push
repnz
bound
add
clc
mov
add
mov
dec
inc
clc
mov
xchg
test
popf
sub
add
test
push
int
and
add
jl
add
out
in
scas
mov
cmp
xchg
or
cmp
daa
clc
pop
int3
test
inc
add
or
clc
fisttps
stos
push
add
pushf
and
add
das
inc
clc
adc
pop
mov
xchg
cmc
cmp
add
int
js
punpckhbw
push
inc
add
sbb
add
push
fdivs
mov
nop
cmpsl
clc
out
cld
jg
cmp
fisubrs
push
lret
mov
xchg
pop
mov
outsb
leave
out
addr16
sbb
mov
add
fs
adc
add
pusha
add
es
inc
clc
jb
add
lahf
cmpsb
clc
or
add
enter
daa
clc
mov
jp
clc
call
pop
mov
cmp
add
sbb
pop
clc
push
mov
clc
aad
add
mov
mov
hlt
jne
mov
clc
mov
push
clc
jnp
adc
add
and
cltd
xchg
push
imul
clc
sbb
clc
or
add
mov
add
add
mov
clc
dec
push
clc
xabort
ret
inc
add
mov
sbb
stc
mov
add
ret
clc
lods
bound
add
clc
inc
add
call
jmp
clc
aam
adc
add
enter
inc
clc
cmc
and
add
sarb
lea
cmc
sti
xchg
fmuls
dec
dec
jge
clc
xlat
aad
xchg
loop
bound
add
hlt
stos
sub
clc
xabort
clc
pusha
add
es
add
add
cmp
stos
xor
add
inc
clc
stos
sahf
pop
xchg
in
test
xor
add
xchg
and
add
test
cmpsb
clc
pause
cmpsl
clc
mov
jmp
push
jb
add
clc
jg
add
inc
clc
hlt
jbe
aam
fistl
clc
enter
mov
cltd
mov
clc
mov
mov
bound
add
out
push
stos
pusha
add
imul
add
mov
xchg
jns
leave
movsb
clc
lods
and
and
loop
push
add
jl
clc
ficoms
add
xor
mov
inc
add
out
sahf
push
add
mov
and
mov
test
clc
jecxz
jg
popf
push
pop
pop
jge
xchg
jnp
lahf
xbegin
mov
mov
add
xchg
sar
clc
and
call
clc
lcall
add
dec
pop
sub
clc
in
dec
and
add
push
aaa
lea
adc
add
clc
sbb
xor
add
add
loope
scas
sar
dec
lea
movsb
clc
inc
clc
pop
clc
inc
add
xlat
data16
ss
and
add
xor
add
mov
clc
popa
add
dec
out
mov
push
add
int
add
stos
or
add
add
enter
add
daa
clc
and
add
add
imulb
clc
test
add
dec
xor
add
mov
clc
clc
das
adc
mov
clc
sbb
clc
mov
int3
cmpsb
clc
ret
outsl
add
adc
data16
mov
fstps
mov
clc
sahf
adc
pop
int3
repnz
jmp
or
add
nop
lods
int3
sub
mov
push
sbb
push
ret
clc
xor
add
xchg
xor
add
dec
cmpsl
clc
das
inc
clc
mov
clc
pop
clc
call
fs
jmp
cmp
addr16
ds
jp
jbe
cmpsb
clc
lods
sub
cmp
movsl
clc
pop
cmp
adc
add
dec
cs
repnz
dec
int3
rorb
movsb
clc
inc
add
aad
mov
xlat
cwtl
lcall
clc
xchg
dec
mov
add
xchg
sbb
add
dec
add
ret
add
inc
clc
mov
add
xor
add
add
imul
into
jae
add
mov
add
divl
lret
pop
ss
repnz
clc
fisubs
add
aaa
test
mov
or
pop
scas
add
add
pusha
add
xchg
dec
push
lret
mov
dec
cmp
clc
add
jae
add
add
rcll
and
daa
clc
lret
enter
ss
or
mov
add
xor
clc
cmp
push
xchg
xor
add
jmp
sbb
and
add
inc
add
xor
add
xor
add
iret
aaa
pop
clc
test
pop
pop
clc
pop
and
add
stos
dec
inc
clc
insl
int
add
add
add
idivl
xabort
lret
add
dec
repz
add
add
es
jno
add
fdivrl
mov
cmpsb
clc
push
mov
sub
test
xchg
jns
add
add
add
lahf
in
inc
clc
add
mov
clc
in
clc
jns
mov
out
jne
std
lods
and
add
clc
fst
pop
scas
and
add
jns
shlb
add
jbe
xor
add
stos
pop
clc
movsb
clc
pop
push
add
outsb
push
add
imul
add
add
jno
add
clc
mov
jne
or
clc
mov
cmp
mov
ficomps
push
clc
mov
clc
adc
add
dec
mov
clc
cmp
clc
push
or
lcall
imul
clc
inc
add
lahf
push
xor
add
sbb
adc
add
clc
xchg
negb
clc
fs
pop
aam
repz
mov
mov
test
add
add
add
test
bound
add
add
outsl
mov
clc
sub
in
lods
mov
clc
mov
clc
sti
test
xor
mov
add
clc
jne
push
push
and
add
xchg
xabort
xchg
push
xchg
in
cmp
daa
clc
insb
xchg
add
xor
add
jmp
mov
jg
clc
jl
pop
xchg
sbb
rolb
add
test
cmp
fcomp
ss
clc
test
xchg
movsl
clc
inc
add
lcall
cmp
clc
out
mov
pop
leave
shrb
add
add
mov
clc
cltd
cmp
sub
clc
push
add
icebp
ljmp
adc
add
clc
pop
dec
out
and
loop
insb
outsl
cltd
adc
add
and
aam
std
mov
add
pop
inc
clc
inc
add
imul
add
testb
add
push
jle
mov
bound
add
clc
lret
iret
adc
add
add
add
xchg
test
clc
cmp
inc
add
push
dec
stc
or
clc
mov
add
mov
gs
push
add
stc
push
mov
es
or
clc
outsb
fs
and
add
es
jno
add
xchg
lods
mov
add
enter
inc
clc
jmp
mov
mov
push
mov
push
add
pop
lods
test
mov
mov
iret
imul
sbb
loop
adc
add
mulb
xchg
xchg
sub
clc
insb
or
ljmp
xchg
arpl
add
xchg
test
ret
and
rcr
xor
add
add
and
add
xchg
xchg
push
clc
xchg
add
add
add
mov
mov
clc
testl
add
clc
dec
or
xor
add
add
mov
clc
cltd
xlat
in
sbb
xbegin
add
fcoml
lods
insl
aad
add
out
or
add
mov
in
cwtl
push
cld
add
jmp
clc
mov
jp
clc
out
mov
jb
add
add
sar
fadd
clc
cmp
mov
xbegin
xor
add
out
adc
add
xchg
loopne
and
add
mov
clc
call
add
add
in
addr16
xor
add
or
clc
scas
adc
imul
xor
or
clc
sar
clc
pop
push
mov
arpl
add
icebp
sub
std
lahf
xabort
jns
aad
push
xchg
cli
xlat
jno
add
in
sub
push
pop
fnsave
add
add
ss
push
mov
sub
clc
lods
pop
inc
clc
jl
cmc
mov
add
mov
add
loope
add
add
or
test
pop
mov
pop
aas
nop
stos
test
mov
mov
stos
sub
clc
or
loopne
mov
cmp
je
rorl
mov
lret
stc
or
clc
xor
add
or
cltd
sub
mov
add
sahf
outsl
add
xor
add
clc
sbb
jae
add
cs
add
cli
or
mov
rorb
ffreep
clc
jp
ds
sub
pushl
sarl
call
aam
clc
xchg
inc
clc
mov
scas
sub
add
nop
outsl
bound
add
add
popf
loop
sarl
je
xchg
in
dec
cmp
testb
clc
and
add
add
add
mov
or
sar
mov
clc
xchg
ficoml
add
fwait
rcrb
cmp
clc
scas
iret
pop
pusha
add
adc
add
mov
fs
outsb
pushf
xchg
xchg
pop
sub
lret
outsl
cltd
jl
je
jne
sbb
stc
das
pushf
repz
lods
cmp
ja
mov
mov
je
clc
mov
adc
add
clc
add
add
or
add
add
xlat
cld
mov
add
dec
fstps
sbb
ret
clc
mov
add
test
jo
add
clc
fisubl
cmp
xchg
repz
add
pop
inc
add
leave
and
add
shlb
add
shll
add
stos
sbb
mov
push
add
fidivrs
loopne
std
icebp
add
es
ret
addr16
out
lcall
add
es
adc
add
pop
out
pushf
aaa
in
clc
xor
clc
mov
add
cld
cld
jl
clc
jecxz
xchg
jae
add
sub
sub
add
aad
cmp
adc
add
and
add
sbb
add
repnz
adc
add
ret
clc
cmp
adc
add
add
mov
or
xchg
ret
add
lea
sbb
jecxz
aaa
ret
clc
stc
push
clc
lret
scas
adc
add
clc
scas
mov
clc
cwtl
je
scas
sbb
cmpsl
clc
int3
add
add
daa
clc
jnp
filds
add
cwtl
sar
push
bound
add
add
inc
add
jbe
and
add
ss
xchg
call
into
in
sti
js
xbegin
sub
clc
inc
add
dec
cmp
clc
push
clc
cmpsb
clc
jb
add
clc
and
add
sub
outsl
mov
clc
push
push
clc
insl
stos
mov
mov
clc
lods
sub
pop
or
and
add
clc
clc
or
lea
add
sbb
xor
add
clc
mov
out
ret
clc
mov
pop
jnp
pop
addr16
mov
add
outsb
adc
add
clc
add
clc
jno
add
add
clc
stos
sbb
cli
ret
clc
push
add
pop
sub
add
add
clc
insb
mov
push
add
adc
add
clc
push
add
xchg
mov
popa
add
sub
add
fs
rcll
push
add
add
add
add
mov
repz
pop
clc
push
add
adc
add
inc
add
scas
cmp
cwtl
fldenv
sbb
es
in
cmp
clc
scas
xchg
mov
xor
add
sbb
clc
repnz
clc
rcrl
xlat
out
lods
or
rorl
jg
jae
add
fcoms
sar
clc
das
mov
cli
lret
das
xor
clc
fisttpll
add
and
cmp
jae
add
mov
add
ret
clc
in
xchg
mov
clc
fstps
add
popa
add
add
dec
scas
add
add
das
push
pop
push
add
jnp
aas
inc
clc
in
jnp
cltd
cmp
aaa
jb
add
lcall
dec
sbb
add
ljmp
rcrb
clc
clc
cmp
cltd
into
mov
aas
add
loop
mov
mov
test
in
sbb
clc
int3
pop
mov
jg
sbb
inc
add
cmp
loope
pop
clc
daa
clc
mov
push
xbegin
pop
clc
xor
and
add
cltd
xor
add
push
leave
dec
mov
fcomp
mov
pop
clc
push
pop
clc
inc
clc
cmp
add
ja
pop
sahf
dec
sbb
add
aad
dec
loopne
rcrb
xchg
or
add
sti
call
add
push
clc
xchg
sar
clc
dec
jmp
mov
mov
add
int3
cmc
adc
add
add
sbb
ja
clc
cmp
cs
add
push
adc
add
add
or
clc
out
add
add
add
cld
repnz
jo
add
out
mov
clc
mov
add
in
loop
outsb
jmp
push
jmp
add
clc
lods
sub
clc
in
mov
cmp
clc
neg
mov
in
or
clc
gs
in
jg
jl
ret
clc
mov
add
clc
jg
add
xor
add
add
call
xchg
popa
add
aaa
test
dec
push
xor
add
jg
sub
add
fsubl
add
xchg
and
add
int
add
mov
or
bound
add
xlat
nop
gs
cmp
clc
insb
dec
fbstp
push
mov
inc
add
mov
ret
add
and
add
pop
and
add
jge
clc
dec
jp
fistpll
add
sbb
clc
sahf
ja
xchg
loopne
inc
clc
lret
clc
xabort
fs
jb
add
mov
add
mov
inc
add
jmp
mov
jb
add
add
call
add
sbb
mov
mov
add
mov
add
call
das
mov
or
lret
clc
bound
add
xbegin
decl
sbb
cltd
xlat
jae
add
add
inc
add
sub
add
push
add
dec
leave
clc
xor
add
dec
pop
divb
jne
add
dec
pop
cmp
mov
add
add
dec
adc
add
cs
test
push
dec
adc
add
cmp
adc
add
add
push
fwait
xchg
pop
lods
call
add
mov
test
add
jno
add
mov
clc
cltd
inc
clc
inc
add
jmp
movsb
clc
lods
xchg
test
fs
pop
pop
loop
mov
call
inc
clc
aas
aam
clc
int
enter
imul
nop
mov
in
call
pop
sar
add
loop
mov
push
add
jg
add
in
pusha
add
arpl
add
add
aam
push
add
xchg
jl
in
out
out
decl
ret
clc
cmp
add
xchg
fadd
clc
cmp
adc
add
clc
jns
or
mov
test
ret
clc
scas
test
add
xbegin
cmpsb
clc
ss
xchg
add
add
clc
mov
pop
adc
add
add
adc
add
add
add
add
add
xchg
insb
push
jb
add
sbb
clc
jl
lret
push
clc
push
and
sub
add
push
data16
lcall
aaa
xchg
sbb
jns
adc
add
jecxz
dec
cwtl
inc
clc
push
add
clc
xor
add
je
mov
pop
mov
movaps
clc
dec
xlat
test
jecxz
gs
bound
add
sub
mov
or
test
clc
inc
clc
bound
add
clc
xchg
test
jecxz
loope
inc
clc
ja
mov
pop
sti
ja
xchg
out
addr16
push
mov
push
clc
mov
add
fs
rcrb
add
pushf
cmp
fs
mov
rorl
sarl
sub
clc
lahf
fs
and
add
cmp
ret
clc
fcmovbe
mov
jae
add
clc
int
mov
cmp
fistl
and
add
sub
fs
cltd
dec
xlat
jle
clc
insl
adc
clc
or
clc
in
or
inc
add
lcall
sub
add
xor
add
into
fiaddl
add
jge
jnp
out
sub
pushf
repnz
mov
out
mov
add
or
stos
imul
imul
int
jle
clc
cltd
push
jl
inc
clc
push
lahf
mov
es
or
addr16
mov
xor
data16
jbe
int
in
mov
movsl
clc
pop
push
mov
add
add
pop
pop
mov
test
ja
cmpsb
clc
int3
cmp
cmpsl
clc
iret
cltd
stos
int3
stc
ficompl
scas
ret
clc
mov
clc
in
add
add
and
add
add
jecxz
pushf
adc
add
test
cmp
add
add
test
sbb
lahf
or
push
adc
add
arpl
add
xor
lods
mov
cmpsb
clc
cmc
push
cld
imulb
adc
add
sti
add
add
ds
and
add
jae
add
clc
dec
pop
pop
fs
lahf
fadds
clc
mov
clc
mov
lock
jno
add
call
jnp
mov
jno
add
add
clc
inc
add
dec
enter
dec
xlat
xchg
out
jno
add
push
pop
dec
adc
lcall
xchg
jne
add
insl
push
clc
push
add
test
movsb
clc
or
lret
aas
push
add
xchg
in
xabort
iret
xabort
cld
mov
ficoms
add
int3
ja
sub
jg
je
clc
jne
push
xor
lods
aam
push
add
push
push
add
sbb
outsb
int
xor
add
cmp
jo
add
pop
ds
cmp
add
push
ss
jmp
add
push
clc
mov
xlat
pop
xchg
loopne
aam
clc
or
clc
inc
clc
stos
dec
xor
add
clc
jle
pop
jne
in
mov
std
clc
mov
clc
mov
out
lock
add
xchg
cs
gs
std
dec
lcall
clc
sbb
out
push
add
dec
es
fsubrl
inc
clc
rcrl
mov
shlb
inc
clc
xchg
xor
lea
add
pop
ret
add
scas
inc
clc
push
ficompl
add
stc
pop
mov
add
push
clc
lret
dec
and
bound
add
jp
in
aad
das
mov
adc
add
clc
cwtl
cmp
clc
sbb
add
sub
ficompl
clc
mov
pop
scas
pop
pop
out
data16
bound
add
clc
push
add
add
test
mov
pushl
add
pop
nop
test
mov
clc
ja
data16
scas
dec
in
jmp
clc
pusha
add
stc
call
add
clc
aad
clc
enter
add
or
das
mov
je
push
add
inc
add
loope
mov
push
cmp
lods
xchg
push
mov
clc
das
outsb
lods
lods
xor
add
dec
pop
lea
add
mov
add
xabort
int
pop
repz
jl
jae
add
clc
fcmovnbe
xchg
inc
clc
sbb
sub
add
cwtl
outsb
jae
add
insl
js
clc
cltd
lahf
insl
mov
test
aad
jno
add
mov
fdivrs
out
mov
mov
add
movsb
clc
or
aam
inc
clc
mov
clc
dec
data16
sub
jns
in
cmp
dec
loop
sbb
xchg
cwtl
fwait
shlb
insl
enter
add
and
test
sbb
add
pop
jg
cld
insl
pop
xlat
inc
clc
inc
clc
xchg
xabort
add
clc
data16
movsb
clc
jg
clc
dec
push
clc
rcrb
xor
add
or
add
xor
add
out
push
add
movsl
clc
cmp
cmp
clc
fisubs
add
clc
std
outsl
insl
pop
sti
push
add
dec
lret
add
fildl
clc
sub
adc
sub
sub
outsb
out
fs
jg
clc
push
out
enter
clc
sbb
adc
add
add
in
scas
dec
movsl
clc
adc
add
cmp
clc
xlat
jbe
adc
add
and
jns
lea
clc
cmpsl
clc
mov
clc
sar
movsb
clc
mov
clc
dec
into
xabort
inc
clc
mov
ret
add
mov
add
add
dec
lret
fnsave
add
add
fists
clc
fisubs
pushf
ja
add
xchg
push
add
sub
clc
mov
add
fnstsw
push
popf
hlt
inc
clc
addr16
jno
add
mov
cmp
clc
sub
add
adc
clc
sar
add
in
lret
in
or
clc
loop
push
xor
add
add
push
add
icebp
dec
cmc
imul
bound
add
je
mov
add
pop
and
add
sti
leave
mov
and
add
clc
je
sub
push
mov
add
add
adc
add
inc
clc
jle
repnz
loop
loopne
scas
fisttps
add
add
fisttpll
add
add
outsb
or
clc
adc
imul
ret
clc
jl
inc
clc
sbb
add
or
mov
jl
mov
arpl
add
mov
add
pop
jge
clc
cmpsb
clc
addr16
pop
adc
add
jecxz
clc
ds
cmp
lret
push
add
aad
add
sub
sub
clc
jno
add
clc
lcall
fistpll
mov
and
add
out
cmp
jo
add
xor
add
out
insb
ljmp
jno
add
push
add
pushf
dec
push
clc
dec
pop
stc
push
add
add
add
add
ss
ret
xchg
stos
jne
pop
repz
sbb
leave
jae
add
mov
add
lcall
add
add
pop
in
hlt
mov
clc
ficompl
adc
add
movsl
clc
lods
and
add
add
add
and
add
mov
clc
movsb
clc
or
mov
cli
sar
clc
sar
loopne
dec
fnsave
gs
sbb
dec
enter
push
clc
dec
mov
dec
pop
int
lcall
push
add
pusha
add
add
add
clc
dec
fisubs
push
clc
mov
mov
add
jmp
clc
ret
add
fdivl
dec
in
loope
stc
pmullw
add
xchg
jnp
add
popa
add
lods
daa
clc
shlb
push
cld
fistpll
add
clc
popl
add
jae
add
pop
push
add
addr16
jmp
clc
cmp
mov
cld
aas
cmp
lret
sbb
bound
add
int
lea
int
dec
clc
ss
mov
dec
push
add
rcll
add
jmp
add
pop
enter
jbe
jle
mov
clc
stc
cmpsl
clc
inc
clc
and
add
jmp
cmpsl
clc
sub
lcall
sbb
adc
clc
sbb
jle
add
inc
add
mov
addr16
fs
std
xchg
add
add
mov
and
add
and
add
clc
stos
mov
add
mov
add
push
xor
clc
jo
add
daa
clc
aaa
outsb
push
iret
jns
clc
adc
add
insl
daa
clc
cmpsb
clc
lods
push
mov
clc
sar
clc
flds
sub
test
add
sub
add
ficoms
mov
clc
adc
or
aam
xor
add
jbe
clc
xor
clc
mov
lret
add
rorb
rep
sub
add
outsb
push
add
xchg
inc
add
imul
clc
sahf
lods
fidivs
xchg
fistps
stos
bound
add
add
pop
add
add
sbb
mov
pop
fbstp
add
and
add
clc
cmpsl
clc
push
add
gs
lea
out
sar
add
add
add
add
dec
int
testl
push
add
xchg
iret
cmpsl
clc
add
add
adc
add
sti
adc
add
jns
add
add
ds
add
add
add
and
add
ss
out
mov
clc
into
sbb
clc
or
mov
add
in
adc
add
xor
add
add
cld
inc
add
xchg
jnp
add
xor
add
clc
js
clc
pop
lea
je
fisubrs
push
popa
add
sar
mov
clc
xchg
and
inc
add
out
int3
pop
pusha
add
lret
test
icebp
pop
pop
mov
fisubrl
add
add
mov
adc
add
outsb
push
cmp
lods
dec
xor
add
add
mov
clc
in
outsl
ret
clc
mov
inc
add
lock
sub
pop
clc
cmc
inc
clc
or
add
sahf
sbb
add
add
add
or
ljmp
mov
push
add
sbb
leave
inc
add
mov
in
adc
add
add
cmp
clc
mov
inc
add
mov
clc
jl
clc
fcomi
ss
sub
clc
inc
add
lcall
icebp
xchg
dec
add
inc
clc
pop
loope
cmp
add
add
add
add
add
ss
clc
cpuid
clc
ss
loopne
cwtl
xchg
bound
add
cwtl
aaa
fdivl
leave
inc
clc
and
icebp
iret
popa
add
movsb
clc
test
cmp
add
inc
add
bnd
add
stc
loop
pop
and
add
add
je
in
inc
clc
jmp
ffreep
clc
es
scas
cmp
lahf
xchg
ds
ret
inc
clc
lods
and
add
clc
aaa
push
pop
lcall
cmp
sub
sbb
add
addr16
mov
jno
add
clc
test
add
and
add
add
add
add
jnp
clc
in
pusha
add
test
mov
add
aaa
sbb
xchg
fstp
mov
add
add
loop
xchg
loope
mov
clc
xchg
inc
clc
int
mov
mov
jae
add
sbb
out
call
mov
clc
or
clc
dec
mov
mov
xchg
mov
stc
xchg
testb
pop
sbb
inc
clc
out
test
in
repz
add
add
add
ret
clc
xchg
into
and
add
clc
add
mov
push
clc
mov
sbb
cmp
add
add
sbb
lods
mov
add
sub
add
add
das
addr16
adc
ljmp
ds
cmp
in
iret
je
clc
xor
add
add
push
inc
add
stos
push
into
pop
stos
mov
and
add
clc
mov
je
add
cmp
add
jae
add
adc
add
add
add
add
popf
xchg
dec
or
add
test
aaa
insb
jae
add
sub
clc
inc
add
data16
ret
clc
std
std
mov
add
dec
stc
nop
xchg
sbb
clc
loopne
mov
test
pop
int
fidivrl
fnstsw
dec
jmp
clc
dec
and
clc
xlat
cmp
sub
push
inc
add
imul
cmp
add
pop
imul
clc
mov
out
pop
sbb
clc
out
mov
add
mov
pop
mov
mov
or
cmp
adc
add
adc
add
clc
push
sar
clc
cld
adc
clc
xchg
pop
xor
add
shl
clc
int3
adc
add
hlt
pop
sbb
add
push
int3
xchg
xbegin
cmp
clc
push
add
pop
push
jp
add
testb
push
roll
hlt
mov
clc
out
int3
cli
push
push
add
dec
mov
pusha
add
sbb
clc
sub
add
add
cld
mov
clc
stos
scas
mov
clc
insb
and
add
out
jl
clc
xor
add
clc
or
clc
lret
add
scas
cs
bound
add
inc
add
mov
inc
clc
movsb
clc
pop
aad
jne
clc
scas
loopne
push
add
es
adc
add
and
insl
popa
add
xor
inc
clc
and
xchg
jb
add
inc
add
das
into
add
jg
icebp
xchg
cmp
mov
adc
add
sbb
aam
push
push
pop
repnz
add
stc
shlb
add
clc
pop
sbb
clc
add
lea
lock
add
xor
add
sar
sar
out
fcmovb
clc
mov
add
add
jmp
rcrb
add
pop
out
sub
cltd
mov
add
cmpsb
clc
ss
repz
sbb
add
aad
outsb
out
mov
pop
or
clc
sahf
dec
xchg
add
add
popf
mov
cmp
clc
xchg
aas
outsl
add
add
xchg
jle
cmp
inc
add
add
add
jge
clc
dec
xchg
jo
add
jg
inc
add
add
add
leave
hlt
aaa
int3
stos
jne
in
inc
clc
cmp
add
test
gs
cmp
adc
add
call
aas
xor
clc
jnp
add
outsl
ds
adc
enter
add
push
icebp
lahf
xor
imull
clc
add
add
add
stos
push
add
xor
lods
sub
or
fwait
popf
int
std
out
dec
je
loopne
cmp
popa
add
ud0
outsb
dec
std
fs
xlat
int3
lcall
mov
clc
lods
sub
test
jnp
test
add
add
add
add
xlat
leave
pop
ret
clc
push
scas
pop
push
push
xchg
lret
aam
xor
add
mov
clc
adc
mov
add
add
add
es
ds
ljmp
outsb
push
cmp
push
add
xor
add
dec
sti
and
add
add
xabort
add
fnsave
add
add
insb
rorb
lods
mov
xchg
jecxz
fisubrl
push
add
mov
clc
loope
or
clc
jle
clc
xor
add
inc
clc
push
clc
fdivrs
clc
insl
or
enter
fwait
ja
pop
push
clc
xchg
stos
loop
mov
pop
pop
mov
pop
fwait
movsb
clc
inc
clc
test
mov
jb
add
and
dec
ja
in
jne
call
add
mov
add
pop
sbb
add
out
insl
aaa
or
add
lahf
xor
add
and
add
push
add
lock
xchg
push
mov
clc
mov
add
lahf
mov
add
add
imul
jl
add
mov
jo
add
or
add
add
sub
add
clc
jp
add
add
jns
fs
std
popa
add
dec
leave
and
pusha
add
insb
int3
ret
clc
mov
shll
pop
add
add
clc
out
xchg
mov
pop
mov
add
cmp
inc
clc
xor
vsubps
icebp
cwtl
add
add
clc
mov
cli
jmp
mov
clc
push
imul
or
pop
into
imul
add
xchg
test
sbb
mov
clc
fs
js
add
inc
add
sub
sbb
xbegin
clc
gs
pop
sbb
add
pop
fimuls
dec
xlat
insl
mov
clc
jb
add
add
add
add
push
add
aad
clc
cmpsb
clc
out
lea
into
push
add
cmc
pop
add
add
leave
push
fdivrs
jge
push
pop
aaa
je
cmp
clc
xor
add
push
clc
rorb
mov
cmp
or
push
mov
sbb
mov
clc
sar
adc
add
xchg
mov
ret
clc
cli
push
popa
add
gs
mov
mov
fnstenv
add
and
add
push
clc
lret
clc
or
repz
add
add
sub
add
hlt
imul
add
pushf
add
or
jae
add
clc
jno
add
add
add
pop
faddl
adc
add
add
pop
mov
test
mov
add
sub
clc
push
inc
add
inc
add
repnz
push
add
loop
sbb
or
clc
mull
add
add
push
int3
jmp
and
add
cmp
ja
add
sahf
std
lea
add
dec
lods
imulb
xlat
fs
out
sbb
clc
in
jns
out
xchg
inc
clc
out
jo
add
mov
clc
scas
and
cmp
and
add
add
sub
in
sbb
add
clc
jns
and
add
clc
rclb
leave
outsl
xchg
adc
add
lret
xor
add
mov
add
lahf
or
inc
clc
push
clc
sub
int3
aaa
das
lock
fdivl
fs
shll
clc
xor
sub
inc
add
loope
pop
clc
sub
cmp
mov
jne
cmp
ds
push
add
push
mov
sub
clc
bound
add
jecxz
mov
idivb
ja
jl
or
sub
add
cmp
xchg
js
imul
or
aas
jns
clc
sbb
imul
add
imul
add
cmc
and
add
add
dec
sbb
push
cld
loop
movsldup
add
add
outsl
or
and
add
add
outsl
repnz
sbb
clc
nop
add
add
xor
add
mov
add
add
adc
sub
lret
rorl
add
or
xor
add
and
xor
add
repz
add
adc
add
clc
cli
mov
clc
cmp
pop
test
or
push
add
into
pop
and
add
je
fistl
repnz
mov
cmc
enter
mov
cmp
clc
push
clc
pop
pop
ud2
mov
and
add
sar
aad
shll
fs
sbb
sbb
clc
push
mov
jnp
mov
imull
add
adc
clc
ret
mov
clc
or
add
pop
fisubs
fldenv
add
jl
rcrl
idivl
dec
popa
add
add
add
aaa
adc
add
popf
add
add
leave
lock
outsb
popa
add
push
add
push
add
xchg
xbegin
pop
xchg
or
add
sbb
pop
fwait
cmp
popa
add
or
add
xchg
jns
sahf
into
inc
add
arpl
add
jnp
push
dec
iret
sbb
sub
push
add
sar
cltd
sarb
add
cmp
clc
addr16
adc
add
clc
scas
xchg
call
mov
push
add
out
into
outsb
and
add
add
clc
or
cmp
cld
push
clc
or
sar
add
loope
adc
add
xor
add
scas
inc
clc
dec
popf
inc
clc
mov
jo
add
cmp
pop
clc
xchg
addr16
sub
in
cs
cmp
pop
shll
add
addr16
mov
std
inc
add
loop
cmpsb
clc
mov
clc
jmp
clc
aam
clc
add
add
jnp
cli
mov
jmp
add
mov
clc
outsl
pop
xchg
push
clc
fadds
loop
jl
xor
add
clc
sub
pop
out
pop
arpl
add
add
inc
add
mov
dec
jno
add
movsl
clc
jecxz
int
stos
inc
clc
out
xchg
aaa
mov
imul
clc
fsubrs
int3
out
out
add
mov
sub
sub
divb
add
test
add
out
test
enter
add
xchg
ss
or
add
clc
dec
push
xlat
data16
pop
mov
add
cwtl
fdiv
mov
jp
add
mov
clc
xchg
and
add
and
add
mov
insl
test
jecxz
xlat
xor
add
add
jns
in
jmp
ret
clc
cmp
jne
inc
add
add
add
jo
add
ret
clc
jnp,pt
clc
jae
add
hlt
add
jle
clc
in
adc
fsubs
add
clc
lock
add
clc
adc
add
test
pop
push
clc
dec
ds
clc
es
stc
pop
data16
fwait
pop
in
inc
add
xor
add
add
mov
pop
xchg
das
push
xabort
cmpsl
clc
addr16
mov
lock
fistpl
clc
dec
movsl
clc
cld
mov
sub
add
push
add
call
clc
cmp
add
cmp
or
sbb
lods
dec
ljmp
adc
add
add
push
lahf
cmp
test
add
jle
add
mov
add
iret
xchg
pmaxsw
add
adc
add
test
jge
add
dec
aaa
sub
push
gs
repnz
lret
xabort
clc
lods
sub
push
push
add
in
sarb
clc
imul
add
ljmp
jno
add
rorl
add
add
push
mov
mov
add
or
mov
clc
cmp
jbe
sbb
sub
clc
inc
add
xabort
add
xabort
push
add
cmpsl
clc
xor
add
push
outsl
xchg
sub
add
dec
aas
addr16
out
xor
add
lods
pop
xor
add
lret
mov
je
clc
inc
add
ret
dec
rolb
cmpsb
clc
dec
rcrb
aaa
cmp
and
adc
add
clc
mov
clc
jb
add
clc
mov
je
mov
clc
add
add
clc
or
jmp
push
add
add
add
inc
add
mov
sub
add
adc
dec
mov
clc
dec
jne
clc
mov
gs
sbb
insb
loop
jle
cmp
pop
bound
add
ja
clc
xor
dec
xchg
xchg
jmp
add
fdivp
stos
cld
repz
bound
add
add
lret
outsl
or
add
imul
xor
add
add
add
mov
gs
add
push
pop
dec
in
mov
and
cli
pop
sar
sbb
dec
jmp
in
cmp
lret
lods
jg
icebp
nop
adc
inc
add
popf
jns
adc
adc
mov
dec
push
add
dec
sar
imull
add
push
add
jnp
int3
scas
or
add
cmp
add
mov
iret
jecxz
in
dec
mov
add
mull
add
pop
fwait
and
add
add
clc
lret
popa
add
jp
add
add
mov
clc
mov
sbb
aad
aam
mov
add
test
cmp
xchg
sahf
xor
add
add
das
int3
mov
stos
test
pop
inc
clc
cmp
dec
and
add
cmp
clc
into
cmp
clc
ficoml
jbe
add
pop
rdtsc
add
xor
add
pop
scas
sar
clc
add
add
lahf
stc
pop
fistps
dec
and
add
xabort
add
add
push
add
inc
clc
pop
cmpsb
clc
enter
clc
dec
in
sub
add
sbb
add
call
add
mov
outsl
pop
ja
adc
add
clc
jb
add
cltd
push
or
dec
jo
add
add
pop
das
pushf
cmp
sub
sar
clc
push
cmp
add
clc
lret
mov
jno
add
enter
neg
pop
clc
push
clc
test
movsl
clc
cmp
rcrl
aad
dec
xchg
push
add
out
add
xchg
mov
jo
add
mov
mov
xchg
mov
out
test
clc
into
dec
fsubrs
addr16
loope
ret
xbegin
bound
add
and
add
clc
in
push
add
movsl
clc
and
add
insl
adc
nop
cmp
clc
call
add
jg
andps
movsb
clc
mov
data16
mov
sar
popa
add
jae
add
data16
xlat
cmp
into
ret
clc
pop
cwtl
in
cli
mov
sbb
xchg
inc
add
fists
add
ja
xor
add
add
sbb
insb
xor
ljmp
mov
xchg
inc
clc
mov
add
add
jge
fdivrp
popf
inc
add
cs
cmp
mov
mov
add
pop
mov
aas
clc
jg
clc
aam
pop
xchg
jge
add
clc
mulb
adc
add
cli
fsubl
sbb
add
add
add
add
xbegin
clc
shrb
pop
fcmovnu
ljmp
xor
add
leave
lods
sbb
and
add
add
add
add
add
ret
clc
xchg
mov
call
cmp
adc
add
mov
clc
fs
stc
clc
mov
cmp
clc
push
pop
pop
xchg
data16
sbb
stos
push
add
lea
xchg
divb
call
pop
mov
pop
jae
add
cmp
jo
add
sub
add
clc
dec
fisubrs
clc
pop
cld
movsl
clc
out
stc
in
push
add
or
das
pop
mov
or
stos
mov
add
pop
pop
mov
cmpsl
clc
fidivl
daa
clc
sbb
adc
add
mov
aam
ret
insb
insl
or
clc
cwtl
xor
add
mov
pop
movsl
clc
lods
and
sub
add
mulb
lods
lret
je
clc
insb
call
mov
pop
fcmovu
rcrl
clc
stc
xchg
inc
clc
and
dec
loopne
aam
pop
sbb
add
push
pop
xbegin
stos
sbb
push
jo
add
add
popf
imul
clc
xabort
add
push
add
inc
clc
cmp
sub
add
inc
clc
mov
clc
test
and
add
jns
push
add
add
cmp
add
in
out
aam
xor
clc
sahf
pushf
adc
add
add
cld
ljmp
xabort
and
add
push
add
cltd
dec
xor
add
clc
add
add
xchg
dec
arpl
add
clc
loopne
add
add
add
mov
add
add
push
add
jg
pop
scas
sbb
clc
xor
jge
push
aas
into
outsb
and
add
jnp
cmpsl
clc
mov
push
add
add
add
add
add
add
cli
jmp
dec
push
add
xchg
das
sbb
je
cmp
xor
fwait
cwtl
clc
jo
add
add
add
add
mov
fiadds
add
add
dec
imul
add
movsl
clc
add
pop
clc
mov
clc
xbegin
push
add
mov
clc
imul
clc
gs
add
xor
add
add
push
add
repz
add
add
movsl
clc
jmp
cli
cmp
add
xchg
jno
add
xbegin
clc
mov
repnz
jns
clc
jo
add
add
std
push
add
mov
xor
add
push
clc
out
xlat
sub
mov
jl
cmpsb
clc
sbb
clc
cmp
cmc
cmp
add
push
clc
clc
add
dec
adc
add
add
add
add
jecxz
mov
add
add
das
ret
clc
sbb
add
xchg
push
nop
idivb
hlt
test
add
add
clc
cmp
dec
xchg
lods
push
stc
popf
je
add
out
pop
imul
cwtl
out
je
clc
movsl
clc
inc
clc
push
or
adc
clc
nop
and
add
das
loop
push
xor
add
clc
out
mov
clc
daa
clc
mov
clc
movsl
clc
push
adc
add
add
repnz
xabort
xor
add
clc
into
sbb
jge
sbb
xchg
mov
clc
xchg
adc
add
add
xchg
push
mov
add
iret
hlt
inc
clc
movsb
clc
das
fnstcw
test
icebp
adc
add
fs
dec
cltd
fxch
sbb
clc
inc
add
push
iret
fwait
cld
cmc
shr
sbb
mov
movsl
clc
cmp
add
test
pop
xlat
add
sub
scas
pop
and
add
add
mov
add
add
add
std
mov
add
daa
clc
repz
xchg
ds
fstpt
lea
add
jecxz
ret
mov
js
clc
cmp
push
add
scas
je
inc
clc
sahf
pop
inc
clc
and
add
pushf
sub
add
fisubl
add
xchg
or
add
and
add
clc
fmul
test
sbb
clc
mov
in
add
add
clc
push
cmp
fidivl
add
lods
in
dec
jno
add
sub
clc
cs
nop
loopne
rcrl
mov
add
outsb
test
sbb
je
je
add
movsl
clc
xchg
loop
adc
add
cmpsl
clc
cmp
sbb
clc
push
fldcw
add
cmp
add
cmp
xchg
js
add
mov
xchg
cmpsb
clc
jle
add
sar
clc
pushl
pop
notl
stos
lret
dec
repnz
ja
xchg
cwtl
xabort
sub
add
jl
cmp
roll
lcall
jb
add
add
cld
pop
xlat
in
pushf
dec
fldenv
add
popa
add
pop
jle
cmpsb
clc
mov
fisubrs
or
push
xchg
cwtl
testl
imul
clc
inc
clc
cmpsl
clc
out
movsl
clc
sbb
add
insb
jae
add
add
add
idivb
stos
into
mov
je
adc
add
clc
xor
add
cltd
or
add
jnp
add
add
aaa
out
fiaddl
add
or
add
inc
add
xor
xor
add
add
jecxz
sub
xor
or
jle
imul
rol
clc
cmp
inc
add
sti
xchg
lcall
sub
sbb
out
or
lret
jo
add
adc
add
mov
clc
lret
popa
add
cmp
out
pushf
out
aaa
lcall
inc
add
repz
aad
fcoml
scas
jne
call
xchg
cmp
pusha
add
xor
clc
shll
add
rcrb
cmp
stos
jmp
sbb
in
xor
add
loope
and
add
sub
cld
arpl
add
add
dec
negl
inc
add
mov
dec
sub
das
inc
clc
xor
add
xchg
lret
pop
fistpll
add
push
add
xor
add
add
jle
lret
rcll
clc
test
outsl
neg
add
add
adc
add
clc
cmpsb
clc
fcmovnb
clc
nop
xbegin
leave
sbb
and
add
clc
push
pop
clc
pop
inc
clc
sub
xchg
fcoml
clc
cmpsl
clc
outsl
cmp
add
pop
sti
ljmp
xchg
inc
clc
fadd
clc
dec
sbb
add
pop
lods
hlt
paddusw
bound
add
add
add
shll
add
jno
add
mov
add
add
add
fadd
clc
mov
mov
jno
add
popf
clc
sti
adc
add
insb
mov
loop
nop
xchg
aam
arpl
add
add
add
jg
imul
push
out
rolb
fwait
test
insl
mov
clc
sub
jl
jmp
jle
xchg
dec
adc
add
add
sar
clc
push
dec
adc
jb
add
test
jp
mov
clc
nop
pop
inc
clc
xchg
add
add
mov
stos
xchg
inc
add
or
add
jb
add
aam
aam
mov
mov
add
pushf
mov
int3
lret
or
and
sub
out
rcl
or
fwait
cmp
add
mov
jl
out
and
add
nop
jb
add
add
dec
je
jne
clc
sahf
movsl
clc
inc
add
mov
insl
pop
cmp
add
adc
add
push
add
in
dec
push
add
add
add
add
jnp
icebp
loop
test
sub
add
daa
clc
xchg
je
sbb
adc
clc
idivb
pushf
enter
stc
and
add
in
xchg
mov
inc
clc
cmp
stos
dec
xor
add
clc
lods
and
add
add
popa
add
xchg
fsubrs
ds
add
aam
lahf
sub
ret
clc
fwait
stos
ljmp
clc
ja
jg
dec
fidivrl
mov
add
nop
aam
add
push
fscale
or
mov
sar
into
das
scas
add
fsubrl
je
inc
add
jmp
repnz
add
scas
cmp
adc
add
add
and
add
pop
cmp
xor
add
xchg
in
mov
mov
add
daa
clc
aad
mov
clc
adc
add
aad
cmpps
data16
das
popf
xchg
loop
scas
jo
add
mov
clc
fs
iret
aaa
cmp
clc
cmp
clc
ds
add
pop
lcall
xor
add
clc
sahf
dec
xchg
cmp
xchg
pushf
adc
add
add
add
in
xlat
xchg
mov
clc
cmp
cmp
mov
clc
in
repz
cmp
clc
xlat
and
add
movsl
clc
std
sbb
xor
adc
add
add
pop
int3
mov
sbb
mov
out
popa
add
in
rolb
add
clc
pop
jbe
jmp
ficompl
dec
imul
dec
lea
and
add
pushf
lahf
lahf
adc
add
jp
clc
and
add
xor
add
clc
xor
add
clc
cmp
add
or
prefetch
stos
jne
test
arpl
add
push
add
incb
add
jge
add
mov
add
pop
adc
add
test
ja
xor
add
add
call
jb
add
loopne
push
mov
cld
sub
fcom
mov
es
negl
add
and
add
dec
push
add
invd
jne
clc
mov
test
fisttpl
xor
add
mov
adc
add
add
cmpsl
clc
mov
jle
sub
pop
test
sbb
movsb
clc
scas
mov
mov
cmp
sbb
adc
add
lret
aaa
ljmp
mov
mov
ds
adc
add
add
ljmp
mov
add
mov
jbe
xor
add
jmp
push
fs
xchg
dec
push
clc
lahf
cmp
lods
sbb
jne
das
js
dec
mov
cmp
add
outsb
jl
cmpsb
clc
jbe
add
insb
scas
push
sar
xlat
pop
push
pop
add
add
data16
or
mov
or
std
jne
in
push
add
fnsave
fsub
clc
mov
add
add
movsb
clc
pop
inc
clc
mov
or
clc
stc
jns
add
sbb
clc
dec
xlat
fs
xor
add
test
clc
xbegin
sub
push
jne
dec
loop
and
add
inc
clc
push
add
xor
cmp
or
push
std
dec
insb
jge
add
jb
add
clc
and
add
lcall
clc
aaa
ffree
clc
push
cmp
clc
fisttpl
das
fsubrl
clc
push
vzeroupper
cli
jg
movsb
clc
dec
sub
push
clc
sub
clc
xor
add
xchg
push
dec
ljmp
add
push
clc
lret
mov
mov
and
add
and
add
clc
dec
enter
mov
add
popf
pop
clc
xchg
jb
add
clc
inc
clc
xbegin
pop
clc
negl
xchg
test
pop
clc
xchg
enter
clc
dec
cmp
clc
jo
add
clc
pop
iret
iret
inc
add
outsl
pop
dec
inc
add
jp
cmp
clc
loope
adc
add
and
out
mov
adc
add
clc
jl
clc
gs
ret
clc
or
sbb
and
add
add
das
cmp
test
arpl
add
jp
cmp
xchg
add
add
jmp
fiadds
enter
xor
add
push
clc
popa
add
imul
pop
cmc
mov
lret
jg
clc
xchg
lea
or
add
fildl
clc
add
add
add
mov
add
add
add
inc
add
cmp
ja
clc
pop
popf
stos
pushf
jmp
clc
mulb
add
adc
mov
mov
clc
test
mov
add
xchg
dec
es
xor
add
push
aas
mov
inc
clc
xlat
clc
ret
clc
lret
scas
push
loope
ds
repz
dec
icebp
cld
pop
lock
fbld
add
adc
add
mov
sbb
add
icebp
mov
clc
push
mov
add
lcall
mov
pushf
cmc
insb
mov
je,pt
xchg
movsl
clc
sub
clc
xabort
add
mov
add
mov
push
add
dec
mov
add
cmp
inc
add
push
mov
mov
add
add
xchg
daa
clc
jae
add
add
in
cwtl
push
mov
mov
add
stos
xor
clc
xlat
call
clc
adc
add
clc
inc
add
lret
loop
leave
jge
pusha
add
imul
shrb
imul
call
push
ja
add
movsl
clc
sti
ljmp
pop
sbb
cmp
or
es
push
cltd
xor
add
cmp
add
add
add
fwait
imul
stos
sub
inc
add
testl
sub
add
movsl
clc
pop
test
movsl
clc
aas
cmp
pop
out
lock
add
gs
mov
clc
test
jae
add
insb
lret
sbb
clc
mov
xlat
cmp
add
add
xlat
adc
add
clc
add
add
mov
mov
mov
or
sub
add
clc
mov
xchg
stos
lea
add
inc
add
mov
mov
cs
xor
sbb
clc
ljmp
dec
pop
cltd
add
add
pop
daa
clc
push
inc
clc
mov
je
inc
add
and
add
add
or
inc
clc
fsubrl
fisubrl
dec
jo
add
push
add
jmp
outsl
add
add
add
sbb
out
rcrl
add
adc
add
add
jbe
clc
cmp
pusha
add
cmp
clc
out
xchg
in
mov
lret
add
adc
clc
jbe
xor
add
add
xor
add
clc
jp
cmp
bound
add
in
xchg
lret
cmp
push
sbb
add
cmc
cmp
sbb
fs
popf
jecxz
or
clc
push
clc
xchg
rcr
aad
add
adc
add
cmp
and
add
cmpsl
clc
aam
sub
repz
and
add
jl
daa
clc
mov
inc
add
and
pusha
add
adc
add
clc
vmovhps
scas
xchg
clc
in
jae
add
add
fnstsw
and
push
mov
push
add
test
into
xchg
cmp
or
lock
push
jne
jmp
dec
and
out
insb
push
add
fdivl
add
aam
lcall
mov
stos
adc
add
ret
dec
jp
clc
lea
mov
addr16
es
lods
push
imul
leave
pop
sahf
leave
bound
add
mov
sahf
sub
clc
mull
shl
fs
cmp
xchg
es
ljmp
jl
clc
inc
clc
sbb
add
gs
sbb
add
clc
nop
inc
add
bound
add
add
repz
add
adc
je
aas
fidivrl
add
out
ss
pop
cwtl
cmp
clc
jp
mov
and
add
clc
aam
scas
nop
mov
ja
mov
add
lock
stos
push
push
sub
clc
enter
pop
imul
dec
mov
push
clc
imul
add
fdivrs
inc
clc
inc
clc
clc
ss
fisubrl
stos
push
stos
pushf
cmp
add
jl
test
adc
push
clc
push
add
mov
add
mov
in
in
gs
dec
mov
jnp
add
push
dec
ret
jne
clc
sbb
aaa
push
clc
cmp
mov
and
add
pop
xchg
imul
add
fists
mov
popf
adc
add
or
clc
lods
clc
aaa
push
inc
add
test
mov
add
pop
leave
xchg
mov
clc
adc
add
add
push
sti
xchg
mov
ret
outsl
jl
stos
scas
inc
add
outsb
mov
movsb
clc
lcall
add
clc
cwtl
xchg
sbb
clc
mov
add
dec
aas
pop
clc
daa
clc
adc
add
daa
clc
adc
add
add
add
pushf
sub
mov
jb
add
add
lods
mov
push
xchg
int3
clc
jl
add
add
pop
clc
push
add
sub
add
clc
dec
xor
add
sbb
shlb
add
jbe
clc
pop
add
add
test
lea
clc
mov
add
clc
jae
add
add
clc
and
push
cmp
clc
dec
xbegin
add
leave
cmp
add
and
add
das
lret
gs
mov
jb
add
clc
jns
insb
repnz
push
push
clc
in
pop
jno
add
clc
jno
add
add
clc
add
push
add
xabort
pop
aad
clc
pop
pop
clc
imul
pop
pusha
add
lahf
and
add
xchg
cli
cmp
clc
int3
ds
xabort
dec
stos
push
clc
jo
add
push
add
or
fnsave
add
xchg
addr16
test
lea
fldcw
pop
fst
push
out
lcall
add
mov
add
jecxz
pop
cmp
sub
test
cmp
jnp
jge
sub
popa
add
movsl
clc
or
clc
and
xor
in
mov
es
adc
add
xor
add
push
add
push
add
ljmp
pusha
add
add
add
dec
and
mov
lahf
jns
dec
xabort
loop
addr16
sar
add
xabort
clc
incl
clc
mov
clc
pop
jp
pop
cwtl
lahf
das
xor
add
clc
bound
add
clc
sar
adc
add
clc
cmpsl
clc
es
jo
add
mov
add
arpl
add
clc
push
and
add
or
push
add
inc
clc
mov
add
xchg
test
push
add
and
add
jmp
test
pop
mov
add
add
mov
clc
sbb
add
insb
imul
adc
add
sar
xchg
xchg
xchg
xchg
push
popa
add
pop
bound
add
xchg
push
cmp
clc
inc
clc
gs
sahf
ljmp
add
dec
sbb
scas
push
add
add
ficomps
ret
clc
cmp
add
add
outsb
jns
push
out
test
sar
clc
or
clc
xchg
push
dec
sti
pusha
add
inc
clc
push
add
sbb
clc
repz
xor
ds
pop
xor
add
out
imul
aam
clc
cli
jb
add
add
gs
sbb
add
cld
ljmp
clc
cwtl
jns
add
xchg
xchg
in
stos
scas
mov
clc
test
add
lods
cmp
ja
cmp
sub
clc
sbb
mov
cs
and
add
rcrl
add
lret
call
clc
or
add
or
add
mov
outsb
stos
adc
clc
lods
jo
add
xor
add
add
mov
and
add
icebp
repz
add
add
add
inc
add
sub
push
add
add
add
sub
xchg
es
dec
ljmp
dec
arpl
add
jne
loopne
cmp
bound
add
add
mov
add
and
add
clc
out
mov
adc
clc
dec
testl
dec
jle
clc
cmp
add
mov
adc
mov
stos
inc
add
add
add
in
loope
cmc
knotw
mulb
add
popf
cmp
hlt
push
add
lret
add
or
clc
fwait
emms
xor
pushl
add
jno
add
cltd
add
ljmp
repnz
jmp
add
cmp
xor
jb
add
add
add
arpl
add
add
clc
xor
add
or
test
clc
pusha
add
aad
add
xchg
pop
negb
add
iret
dec
and
add
sbb
inc
add
je
mov
dec
push
push
add
add
add
clc
sahf
cmp
pop
mov
roll
clc
lods
popf
lcall
fimuls
jl
add
and
add
clc
push
inc
clc
das
mov
xchg
test
mov
cli
js
adc
clc
cmp
fimuls
loop
push
pop
push
imul
jo
add
das
jbe
clc
mov
mov
add
xbegin
lahf
mov
clc
gs
pop
jge
pop
sar
gs
xchg
xchg
js
lods
bound
add
mov
xlat
out
ljmp
and
add
dec
jg
add
lock
in
or
loopne
das
mov
stos
dec
pop
add
add
outsb
in
jl
pop
xchg
jge
clc
test
add
add
out
loopne
inc
add
insb
in
in
push
stc
mov
mov
fildl
clc
mov
call
clc
and
mov
fs
push
clc
sbb
push
add
nop
xchg
inc
add
insl
and
add
test
insb
xbegin
add
loopne
fdivs
clc
cmpsb
clc
insl
stc
xchg
push
xchg
test
mov
stc
jno
add
add
nop
mov
add
adc
add
add
imul
popa
add
or
jp
mov
mov
loop
xor
add
push
sub
adc
add
ret
clc
cmp
xchg
inc
add
cmovle
call
sub
add
pop
clc
jle
dec
lcall
sbb
jle
clc
insb
lcall
xchg
cmp
add
jb
add
adc
pushf
push
fbstp
xchg
dec
test
negb
insb
cmp
add
vmovaps
add
in
std
mov
pcmpeqw
xabort
clc
pop
incl
add
jno
add
pushf
and
add
push
mov
clc
repz
add
push
add
stc
imul
mov
adc
icebp
dec
fistps
clc
or
mov
icebp
outsb
cwtl
cmp
add
mov
clc
mov
add
pop
loop
cmp
clc
fstp
xchg
mov
clc
push
mov
add
xchg
dec
test
and
add
cmp
add
das
dec
popf
push
fstps
push
add
xchg
sub
out
repnz
add
pushf
mov
clc
jp
loopne
sar
add
das
lods
push
add
popa
add
fistpll
shl
clc
push
clc
xchg
hlt
into
push
sbb
add
mov
mov
cmp
clc
dec
mov
xor
mov
jae
add
pushf
and
stc
mov
in
clc
js
test
pop
rcrb
xlat
cmp
stos
daa
clc
sbb
pop
addr16
jecxz
sbb
rcll
add
adc
add
cmp
cmp
sbb
mov
mov
mov
sub
add
fcmovbe
aaa
repz
xor
clc
dec
pop
roll
add
or
mov
inc
clc
xchg
pop
sbb
cmp
push
or
add
out
out
xor
fs
in
lahf
and
add
add
inc
clc
movsb
clc
jno
add
push
add
arpl
add
sub
clc
xor
jbe
mov
add
movsl
clc
iret
mov
jp
xor
mov
das
jle
clc
dec
or
clc
cmp
call
add
dec
lea
pop
mov
add
cmp
push
add
das
int3
lret
mov
inc
clc
or
pop
loope
or
adc
sub
into
test
jno
add
add
push
and
add
clc
pushf
pop
jg
clc
push
mov
fs
scas
inc
add
aad
clc
icebp
int3
adc
add
clc
hlt
mov
xor
add
clc
dec
add
xor
add
mov
aaa
in
and
sti
cmp
add
sub
xlat
xchg
push
add
dec
insl
mov
mov
sti
pop
call
add
sub
sub
clc
das
stos
mov
xchg
jl
add
jb
add
add
push
add
arpl
add
clc
push
clc
sub
sahf
gs
loop
jae
add
clc
addr16
mov
adc
add
add
push
ret
shlb
add
clc
sub
add
push
add
mov
add
inc
clc
aad
add
mov
clc
sbb
pop
pop
cmp
add
dec
mov
mov
or
ds
mov
and
add
add
enter
mov
xbegin
inc
clc
jne
mov
ficoms
test
hlt
jbe
sbb
lret
rolb
add
adc
xor
add
push
mov
clc
stc
mov
add
mov
add
sub
jl
clc
shlb
sti
clc
lret
push
xor
jne
add
jmp
adc
add
mov
pop
cmp
dec
movsl
clc
push
in
sbb
sti
mov
and
add
add
add
repz
inc
clc
scas
cli
and
add
clc
jp
jb
add
nop
jl
add
push
add
ficompl
mov
xor
add
lahf
mov
in
es
push
das
mov
xor
add
jb
add
add
clc
sbb
out
int3
popf
xchg
in
or
pop
cmc
jb
add
ret
imul
cmp
clc
dec
int
pusha
add
divl
stos
pop
adc
add
add
std
push
add
aad
add
mov
add
lcall
cmpsl
clc
int
add
loop
and
add
clc
js
pop
lcall
imul
loopne
dec
test
add
mov
clc
cmp
add
add
sar
add
std
cmc
cli
and
inc
clc
aaa
mov
add
or
pop
jp
fbstp
add
and
add
clc
inc
clc
sbb
lock
add
clc
stos
outsl
pop
insl
mov
inc
add
out
incl
add
test
negb
xor
add
out
or
add
jns
rclb
add
clc
jl
test
cmp
add
fsub
clc
lret
sahf
cmp
dec
xor
loopne
add
add
clc
dec
mov
pushf
mov
lahf
insl
jno
add
add
test
cs
push
jae
add
clc
pushf
sbb
add
add
add
outsb
cmp
faddl
add
xor
add
adc
add
mov
clc
inc
add
jmp
in
cmp
clc
pop
cmp
cmp
sub
clc
enter
pop
clc
ds
clc
mov
push
inc
clc
add
add
sar
jmp
clc
cmpsb
clc
mov
dec
insl
aad
clc
adc
add
add
mov
inc
add
add
mov
jg
clc
out
gs
incl
add
push
add
sub
clc
sub
movsb
clc
hlt
dec
pop
js
mov
push
cs
notb
clc
push
pop
ficomps
add
mov
add
add
mov
insb
inc
add
daa
clc
pop
clc
ffree
clc
adc
add
add
jae
add
in
mov
scas
mov
into
sbb
add
cmpsb
clc
lret
jge
lods
mov
add
dec
call
xchg
cmpsl
clc
gs
mov
clc
xchg
out
outsl
mov
add
add
sbb
add
inc
clc
clc
sub
pop
and
and
add
fiaddl
sub
rep
sbb
add
xor
add
push
sbb
aam
xchg
out
add
add
mov
test
add
bound
add
clc
loop
push
mov
lcall
pop
pop
sbb
clc
mov
add
in
lret
pop
in
fwait
add
add
clc
xabort
jge
push
adc
dec
or
dec
xchg
dec
repz
add
clc
sub
xchg
js
insl
cmp
jg
add
out
lock
clc
pop
neg
ret
clc
out
xchg
out
dec
ds
inc
add
push
mov
sti
cltd
aad
and
cmp
clc
cmpsb
clc
and
add
icebp
inc
clc
jp
clc
popf
test
and
add
push
pop
fistps
in
and
mov
enter
clc
mov
iret
xchg
mov
clc
jg
test
lods
lahf
fcomps
pop
js
cmc
xabort
mov
mov
adc
add
jecxz
arpl
add
add
add
clc
and
add
jecxz
mov
xchg
add
add
clc
lcall
inc
add
leave
mov
add
sub
add
je,pn
xchg
ror
es
fst
and
add
stos
inc
add
stc
sub
clc
fcomps
mov
jbe
clc
inc
add
push
mov
aas
lea
icebp
adc
add
clc
imul
pop
clc
std
xchg
test
xchg
dec
ror
sbb
push
pushf
add
mov
lods
popf
pop
inc
clc
push
movsbl
inc
clc
mov
stos
push
add
add
add
lret
clc
js
lods
adc
add
or
add
cmp
add
xor
add
dec
sar
mov
ja
lahf
pop
push
sub
push
clc
jae
add
push
cmpsl
clc
mov
or
clc
loope
in
push
clc
dec
mov
clc
adc
add
clc
mov
dec
inc
add
jo
add
add
cmp
lgs
sub
or
push
add
nop
test
add
arpl
add
jecxz
jl
bound
add
sub
xchg
and
add
adc
add
cltd
or
js
cli
inc
clc
xchg
ret
clc
scas
mov
repz
jle
sub
stos
mov
add
scas
mov
lods
cmp
clc
jnp
clc
outsl
and
dec
jp
add
clc
sub
xchg
cli
aad
std
pop
clc
xchg
pop
mov
add
cmp
add
mov
clc
mov
push
add
test
ja
xor
add
cld
insl
in
sbb
data16
cld
cwtl
aas
cmp
jo
add
inc
add
inc
clc
stos
clc
in
dec
pushf
mov
add
add
iret
jo
add
dec
out
imul
fisubl
add
out
mov
add
fwait
or
clc
xchg
pop
repz
in
xchg
mov
outsb
data16
or
xchg
lock
or
add
loop
fwait
mov
lea
add
add
clc
leave
enter
clc
repnz
clc
popa
add
cs
adc
clc
repnz
add
add
out
mov
add
sub
sub
mov
gs
mov
clc
aaa
fadds
add
xor
add
lods
mov
clc
or
mov
jo
add
fstpt
add
rcrb
daa
clc
cmc
push
aaa
lods
sar
clc
mov
xlat
jno
add
add
jb
add
xor
add
push
add
test
call
data16
cmpsb
clc
and
add
test
sar
enter
or
imul
add
clc
xbegin
int
mov
add
mov
mov
clc
and
dec
mov
clc
push
scas
pop
push
dec
sub
mov
add
stos
loopne
xchg
pop
pop
dec
cmp
clc
scas
repz
stos
mov
clc
xor
add
add
fwait
clc
push
add
xchg
or
gs
cmp
clc
loop
aam
cli
and
add
clc
mulb
add
lcall
add
mov
jl
add
cmp
clc
fnstenv
add
inc
clc
mov
adc
clc
mov
push
add
int3
dec
and
add
cmp
clc
stos
mov
add
sbb
add
add
xbegin
add
inc
clc
imul
movsb
clc
mov
arpl
add
cli
inc
add
jl
add
sar
roll
call
roll
clc
xor
ljmp
or
push
stos
dec
cs
xor
add
sahf
xchg
lock
mov
xchg
lock
lods
std
sub
in
cwtl
push
mov
clc
pushf
sti
cmpsb
clc
xor
loop
movsl
clc
add
add
leave
ret
xlat
mov
lea
add
cli
incb
add
loop
mov
lock
cmpsb
clc
and
dec
fildl
clc
lcall
popa
add
xor
add
leave
push
fs
jb
add
clc
xbegin
leave
jno
add
inc
add
push
clc
fildll
sbb
cmp
scas
inc
add
shl
cmc
mov
add
clc
dec
xchg
inc
add
loopne
xor
add
mov
dec
sub
sub
clc
flds
add
add
add
sbb
std
mov
sub
pop
or
mov
clc
jbe
cltd
push
add
icebp
mov
sub
add
in
sar
clc
mov
add
fdivs
sti
add
mov
lret
add
or
dec
test
add
push
add
cmp
clc
ret
clc
xchg
xor
sub
xbegin
mov
clc
cli
inc
clc
inc
add
out
sub
pop
xchg
movsb
clc
cmp
lea
add
lea
clc
jo
add
add
clc
lahf
sbb
inc
clc
add
and
add
or
clc
inc
clc
sub
add
gs
sar
cmp
aad
cli
mov
push
pop
leave
or
xbegin
push
sar
clc
add
add
lock
popa
add
imul
sub
xor
clc
adc
add
in
push
aad
xchg
outsl
outsl
inc
add
movsl
clc
popf
pop
push
loopne
push
outsb
push
add
sub
jno
add
scas
xor
imul
add
sar
in
jl
clc
mov
xor
add
add
mov
add
in
add
add
add
pop
aaa
jo
add
add
dec
fcoms
xabort
add
and
add
sbb
clc
xchg
gs
cmp
scas
lock
mov
jg
aaa
lret
inc
add
mov
es
inc
add
inc
add
add
add
int
mov
clc
hlt
mov
add
clc
pusha
add
add
add
sub
push
or
movsl
clc
pop
clc
inc
clc
xchg
or
fwait
xor
add
add
popa
add
adc
add
add
clc
dec
pushl
lock
add
jo
add
insl
cmp
clc
ds
clc
loop
adc
add
add
clc
hlt
xbegin
cld
push
popa
add
pushf
xchg
mov
xor
or
insl
mov
clc
lahf
clc
sbb
mov
test
cmp
pop
sahf
cmpsb
clc
xchg
mov
xor
add
imul
pop
dec
jmp
xchg
loopne
pop
cmp
cmp
add
test
mov
or
add
je
clc
fldenv
add
push
push
add
mov
test
lock
add
or
pop
mov
clc
pop
std
js
clc
push
clc
mov
pop
xbegin
cmp
add
sub
add
mov
mov
lock
add
mov
add
ljmp
inc
add
dec
nop
lret
clc
divb
xchg
dec
mov
push
ret
clc
push
add
pop
adc
add
mov
leave
out
pop
jg
add
push
inc
clc
adc
add
cmp
clc
push
sub
cmp
xor
sub
mov
cmp
imul
loope
adc
add
mov
adc
add
or
jecxz
jmp
clc
mov
adc
add
loopne
ds
pop
clc
adc
add
push
add
lods
and
add
clc
aas
loopne
cmp
dec
cmp
arpl
add
xchg
out
jg
sbb
sub
popf
repnz
mov
cmp
sub
dec
jnp
add
movsb
clc
pop
gs
jg
ret
clc
pushf
push
mov
pop
in
inc
add
sub
in
jle
xbegin
jae
add
es
jae
add
jecxz
push
add
and
add
arpl
add
push
push
pop
nop
sbb
clc
sar
clc
test
push
jle
nop
push
add
xor
mov
movsb
clc
aad
and
add
add
add
es
mov
add
add
add
jp
add
jnp
lret
scas
mov
idivb
lret
sub
add
xor
add
add
add
inc
clc
add
add
xchg
jle
adc
add
add
int
or
dec
sub
clc
loope
cmpsl
clc
jo
add
add
dec
cltd
push
lret
inc
add
xchg
loope
mov
cmp
fbstp
clc
mov
jle
notb
jp
clc
mov
arpl
add
clc
pop
imul
sub
add
in
cmp
das
popa
add
out
cmp
sub
sbb
addr16
fistl
add
call
adc
add
daa
clc
mov
popa
add
cmp
mov
mov
inc
add
push
repz
or
clc
arpl
add
fimuls
clc
dec
iret
stos
cmp
mov
add
pop
scas
popa
add
in
ret
clc
mov
clc
mov
cmp
cmpsl
clc
cltd
and
add
fldpi
movsl
clc
push
add
pop
mov
pop
mov
clc
mov
roll
add
add
loopne
loopne
and
add
pop
lret
add
clc
in
insl
sbb
or
add
mov
mov
clc
mov
add
add
add
clc
cmp
mov
push
jns
aaa
push
and
add
sub
add
add
mov
movsl
clc
xor
add
xchg
or
aas
cmp
psllw
add
scas
cwtl
repz
imul
xchg
push
clc
add
hlt
sub
sbb
push
add
jmp
cmp
clc
jmp
mov
hlt
iret
push
add
idiv
lahf
addr16
cs
mov
sar
repz
mov
add
adc
add
inc
add
push
add
pushf
pop
or
clc
je
add
test
lret
jl
clc
cmp
clc
inc
add
lahf
sbb
add
xchg
dec
pop
pushf
fs
notb
xbegin
add
add
push
add
push
add
push
push
add
mov
ss
pop
mov
loopne
scas
sub
add
mov
add
xchg
xchg
adc
add
pop
outsl
mov
es
or
testl
shrb
add
repz
mov
xchg
cs
and
pop
out
lods
pop
adc
add
add
add
xchg
bound
add
xor
pop
cltd
xlat
sar
add
xabort
clc
mov
xchg
lock
add
rcrb
mov
jge
clc
cltd
adc
add
aaa
popa
add
add
add
mov
popa
add
mov
mov
clc
ja
clc
push
and
or
mov
clc
js
in
mov
xchg
jle
adc
add
add
add
dec
add
mov
clc
or
sub
add
nop
inc
add
stos
hlt
add
add
clc
push
push
add
pop
jns
add
lods
adc
add
add
cmp
add
inc
clc
adc
add
inc
add
stos
add
add
add
push
mov
and
repnz
cmp
clc
mov
arpl
add
popa
add
test
in
pusha
add
jne
in
jge
clc
sahf
jne
clc
loop
sar
clc
inc
clc
stos
aam
sub
add
mov
insl
mov
inc
add
xchg
xchg
loope
push
add
mov
mov
outsb
fadd
clc
jmp
dec
or
add
inc
clc
mov
cs
stos
icebp
adc
add
add
add
add
clc
xor
das
mov
add
mov
call
cmp
push
add
frstor
and
add
mov
mov
dec
jbe
fcoms
pop
lahf
mov
add
push
fmuls
add
add
ds
bound
add
xbegin
mov
cmc
cs
inc
clc
xchg
movsb
clc
xchg
mov
mov
out
addr16
ja
cmp
jp
clc
cmp
dec
or
outsl
mov
clc
inc
clc
jb
add
rorb
dec
xor
add
clc
inc
add
jo
add
adc
add
add
loop
cwtl
int3
out
xor
add
add
jb
add
clc
pop
jae
add
pop
xor
push
clc
and
add
add
inc
add
aaa
sbb
rcrl
sub
add
add
jae
add
clc
jnp
add
repz
out
push
push
gs
ret
xor
pop
lahf
lret
sar
inc
clc
pop
imul
ss
cmp
clc
mov
clc
and
add
cmpsl
clc
ja
pop
out
add
add
jg
movsb
clc
mov
je
push
inc
clc
mov
decb
add
pop
nop
call
out
in
pop
pop
mov
leave
gs
insl
inc
add
mov
mov
xor
add
leave
in
pop
and
add
jae
add
or
mov
fnop
sbb
add
add
mov
mov
add
sbb
clc
inc
clc
pop
ss
adc
add
dec
movsl
clc
movsl
clc
cmp
inc
add
test
or
hlt
cmpsl
clc
test
clc
cwtl
inc
clc
or
ficoml
add
and
xabort
add
sbb
lock
add
xlat
jnp
adc
add
leave
cmp
clc
cmp
add
sar
fiaddl
add
sub
outsb
jns
jo
add
test
or
addr16
shr
xchg
mov
xlat
sub
add
clc
push
add
xor
add
lahf
add
adc
add
and
add
clc
sub
clc
push
jnp
clc
push
fsubrs
add
or
leave
fwait
sub
mov
mov
cmpsb
clc
add
add
jo
add
inc
add
xchg
es
dec
sbb
clc
adc
add
add
xchg
pop
mov
add
mov
cmp
push
fcmovu
push
clc
or
mov
adc
outsl
cld
in
ljmp
cltd
push
xchg
xabort
xabort
test
clc
scas
sbb
add
xchg
xchg
inc
clc
insl
out
sub
in
mov
add
popl
pushf
call
clc
xor
add
in
sar
clc
arpl
add
inc
add
aam
add
pop
clc
inc
add
clc
loope
aam
clc
cmpsb
clc
out
cmpsb
clc
dec
data16
pop
adc
add
add
add
sbb
jge
sar
add
fcomip
mov
add
xor
add
clc
cmp
aas
out
cmp
in
sbb
clc
add
add
add
clc
add
add
insb
movsl
clc
pop
shrb
cmp
cmp
aas
sub
lcall
add
jecxz
outsb
push
add
cltd
mov
fidivrl
aaa
enter
pop
fstps
ljmp
sbb
mov
aad
repnz
sub
mov
clc
bnd
add
imul
or
movsb
clc
cmp
rcl
aaa
xchg
pop
xor
clc
notb
add
add
int
test
repz
clc
mov
add
jbe
add
or
addr16
mov
mov
add
mov
in
addr16
test
sub
push
add
mov
ja
clc
ss
pop
and
xchg
pop
push
clc
cld
xlat
out
mov
rorb
bsf
clc
push
add
inc
add
repnz
sahf
stc
clc
mov
cmp
add
mov
in
inc
add
push
or
add
push
movsl
clc
setp
loopne
sahf
fnstsw
pop
clc
pop
xchg
daa
clc
stc
dec
mov
add
pop
jnp
clc
mov
clc
push
adc
add
add
xbegin
dec
xabort
repnz
clc
dec
loopne
movsl
clc
ficoml
add
add
mov
adc
add
out
mov
sahf
sahf
es
push
add
mov
inc
add
cmp
clc
ljmp
and
add
or
add
lods
fninit
clc
mov
lea
inc
add
scas
cwtl
and
add
jo
add
add
push
lret
clc
xor
add
add
add
add
clc
mov
add
mov
dec
sbb
pop
cmpsb
clc
dec
fbstp
add
ja
pop
mov
xbegin
ja
xor
add
test
clc
jno
add
pop
jae
add
add
and
add
xchg
iret
enter
push
add
pop
cmc
not
push
ret
sub
add
add
clc
insl
imulb
xchg
inc
clc
cmp
outsb
inc
clc
or
jmp
xchg
adc
add
add
fs
pop
ja
clc
inc
add
mov
add
add
add
mov
clc
xchg
jg
add
cltd
cmp
clc
mov
rorl
clc
bnd
add
cmp
add
adc
negb
mov
dec
pop
mov
sbb
mov
addr16
cmp
add
cmp
insb
clc
in
push
adc
add
add
mov
scas
and
add
sub
sar
mov
pop
mov
popa
add
jne
scas
cld
loop
or
mov
add
xabort
clc
inc
clc
push
or
testb
fwait
mov
clc
pop
add
add
sub
clc
inc
clc
mov
xchg
dec
lcall
add
add
dec
pop
jo
add
insl
cmp
add
mov
clc
mov
and
add
xabort
clc
mov
mov
clc
xchg
add
add
jb
add
clc
sub
stos
call
push
mov
scas
enter
daa
clc
bound
add
dec
adc
add
mov
clc
dec
xlat
jle
push
mov
push
add
inc
clc
scas
or
shrl
frstor
add
add
cmc
adc
add
ret
pop
xchg
mov
dec
or
lret
add
xor
add
add
out
add
add
pop
xor
add
cmc
jecxz
ret
add
stos
ja
call
mov
add
add
clc
int3
jbe
and
add
and
add
add
in
fadd
clc
insb
lods
fisttpll
clc
xor
add
mov
add
clc
push
add
dec
aaa
lret
clc
jbe
mov
xor
add
int
add
mov
add
mov
add
pusha
add
int
xor
add
sub
add
mov
clc
mov
clc
xor
add
add
gs
iret
xchg
js
lods
loopne
mov
clc
lock
bound
add
add
ljmp
add
add
pop
clc
pushf
lods
js
daa
clc
mov
cwtl
sub
clc
add
add
data16
jp
daa
clc
inc
clc
sahf
sub
add
jecxz
ja
clc
fisubrl
lods
mov
add
ja
add
pop
push
in
sbb
sub
test
mov
xchg
pushf
jle
xchg
aad
cmp
add
cmpsb
clc
outsl
cmpsb
clc
clc
jnp
clc
mov
dec
mov
mov
add
add
cmc
in
dec
cmp
ret
inc
clc
leave
icebp
popa
add
add
add
notl
push
cmp
sub
add
iret
mov
add
into
mov
add
xbegin
jae
add
add
clc
xchg
movsb
clc
cmp
fsubs
add
jmp
or
add
add
sub
in
add
call
pop
out
sar
jae
add
mov
add
add
xor
add
cmp
cmp
add
add
es
push
add
movsl
clc
nop
fnstcw
mov
popf
sub
insl
pop
add
add
sti
pop
outsl
cmpsb
clc
cmp
mov
inc
add
push
enter
add
mov
add
test
add
fidivs
add
adc
push
push
aaa
jle
mov
push
add
add
cmp
bound
add
add
and
add
int3
mov
add
bound
add
add
fs
cli
mov
mov
clc
fsts
and
xlat
rol
clc
leave
or
sar
ss
loope
mov
mov
clc
pop
sbb
add
add
test
sahf
mov
add
pop
cmpsb
clc
out
sub
jnp
and
add
pop
adc
add
hlt
in
icebp
mov
inc
add
xbegin
imul
dec
xor
add
add
clc
lret
push
add
sbb
pop
xchg
and
add
and
repz
clc
add
add
sub
stos
imul
add
add
pop
and
add
clc
and
add
inc
clc
data16
xor
sar
xchg
dec
inc
add
xchg
push
clc
pop
xchg
fildl
add
pop
lock
xor
cmp
push
xor
add
bound
add
mov
leave
mov
psubusw
clc
movsl
clc
adc
add
inc
add
jb
add
mov
clc
or
xor
add
clc
gs
pop
xchg
cli
in
sar
ret
clc
insb
notb
clc
movsb
clc
xor
clc
cwtl
pop
mov
clc
cmp
add
cmp
jmp
clc
mov
ja
cmp
aaa
mov
cli
cmp
xlat
push
add
cmp
clc
int3
xchg
jns
mov
out
mov
clc
mov
push
pop
dec
adc
add
add
jmp
add
in
sbb
imul
mov
clc
test
and
in
jnp
es
sar
clc
or
iret
shrl
out
dec
stos
sbb
arpl
add
sbb
add
lods
fwait
xchg
or
mov
add
dec
push
adc
add
add
cwtl
jecxz,pt
mov
sarb
clc
in
in
pop
and
add
loopne
mov
clc
cld
pop
xchg
inc
clc
fdivl
add
aas
pop
pop
filds
clc
add
adc
add
clc
mov
clc
stos
add
add
clc
div
adc
add
clc
nop
sar
ficomps
sub
clc
shlb
add
or
add
dec
leave
pop
and
add
add
push
mov
add
cmc
lahf
mov
mov
clc
clc
popa
add
xchg
outsl
jl
clc
scas
sbb
clc
cmp
sbb
je
jae
add
clc
in
dec
aad
sub
popa
add
jg
jns
clc
scas
mov
clc
je
clc
and
add
clc
mov
add
push
add
or
and
add
call
ja
mov
cld
roll
add
xchg
test
pusha
add
xchg
dec
pop
dec
pop
std
mov
sub
add
in
negb
ja
sarb
sbb
cmp
repz
xchg
imul
push
out
mov
clc
xor
add
clc
hlt
daa
clc
fxch
push
add
dec
test
pop
fwait
mov
aam
push
add
mov
mov
clc
add
add
mov
clc
pop
add
add
add
punpcklbw
add
sub
adc
add
lret
sbb
mov
clc
push
add
sbb
push
cltd
pop
mov
clc
mov
add
inc
add
scas
cmp
call
inc
add
xbegin
add
add
fadds
add
aad
imul
clc
sar
add
add
jecxz
popa
add
cmp
mov
xchg
out
cmpsb
clc
mov
clc
mov
inc
add
jne
decl
mov
add
adc
add
imul
iret
inc
add
dec
xchg
cmp
clc
sti
add
add
leave
lahf
pushf
adc
add
add
push
add
add
push
add
insl
mov
lods
movsl
clc
mov
clc
dec
out
into
imul
in
repz
sar
clc
stos
shll
clc
jnp
mov
clc
and
lods
add
add
xchg
adc
add
lods
faddl
add
stc
xor
add
mov
sbb
clc
add
add
inc
add
dec
stc
xor
add
cli
mov
in
xchg
sbb
clc
mov
pop
lret
sbb
add
jne
add
fcmovnu
dec
cli
pop
clc
psllq
add
add
add
add
clc
mov
fcomi
loope
sar
clc
or
mov
sub
addr16
imul
pop
push
add
mov
sete
pop
sbb
imul
adc
add
add
loopne
leave
hlt
pop
push
mov
add
inc
clc
mov
mov
arpl
add
clc
arpl
add
add
add
cmp
popa
add
and
add
ficoml
add
add
pop
clc
mov
lea
and
jmp
clc
pop
mov
add
inc
add
jle
loopne
and
lcall
lods
in
push
add
insb
push
clc
dec
pop
pusha
add
pop
clc
inc
clc
xchg
mov
clc
push
add
jnp
mov
add
sbb
pop
push
add
clc
inc
clc
out
xorps
addr16
jg
daa
clc
scas
mov
add
lret
clc
or
lret
add
popf
jecxz
jbe
lret
cmp
clc
jg
clc
mov
add
data16
fisubrs
xor
add
clc
ret
clc
in
add
add
add
cmp
adc
add
clc
mov
add
cmpsl
clc
xor
add
add
cmpsl
clc
leave
cmp
mov
clc
mov
add
push
fsubrl
clc
js
and
add
add
add
clc
push
clc
mov
dec
scas
dec
lret
mov
loope
mov
clc
addr16
cltd
adc
add
xor
add
add
xlat
pop
add
add
ja
push
add
mov
push
add
push
jmp
ds
jo
add
sar
sbb
add
mul
clc
and
add
add
push
mov
clc
xchg
int
xchg
pop
clc
sbb
int3
cmp
jo
add
aam
cmp
cmp
std
ret
clc
nop
fiaddl
incl
push
stc
fbld
clc
pop
and
mov
cmp
inc
clc
dec
cmp
clc
inc
clc
push
mov
sub
cmp
jmp
incb
add
out
lahf
xchg
and
cltd
in
adc
clc
outsl
dec
inc
add
inc
add
gs
mov
clc
inc
clc
mov
add
pop
cmc
jb
add
popf
cmp
add
movsb
clc
lods
clc
xabort
clc
jnp
icebp
dec
pop
loopne
pop
mov
data16
jnp
mov
clc
or
clc
xchg
push
clc
pop
xbegin
mov
sub
lods
int3
xabort
jne
outsl
dec
inc
add
rclb
add
gs
sub
test
xchg
arpl
add
or
add
out
data16
xchg
out
insb
inc
add
ja
clc
push
add
dec
ja
adc
add
sbb
lods
xlat
out
mov
add
pop
fdivl
jecxz
add
add
adc
dec
cmp
clc
pop
movsb
clc
fdiv
clc
sar
sahf
lock
or
clc
mov
into
mov
add
clc
pop
clc
js
dec
push
idivl
mov
xor
add
add
pop
adc
clc
cmp
ret
clc
fsubrs
mov
add
xor
add
or
inc
add
mov
xor
fisttps
add
iret
jmp
add
sti
xor
add
dec
imul
sbb
clc
in
cmp
lods
ret
clc
test
aas
dec
aam
inc
clc
inc
add
pop
jle
clc
add
push
add
push
add
mov
out
cs
clc
aad
inc
clc
jg
and
add
clc
in
lcall
ja
inc
clc
push
add
xchg
ss
jns
add
mov
add
mov
push
mov
leave
int
adc
add
pop
and
add
add
ffreep
clc
jmp
jg
ret
clc
and
add
je
mov
sub
add
clc
jae
add
clc
jmp
sub
sub
add
cmp
sti
pop
lcall
add
inc
clc
outsl
cmp
jae
add
or
add
clc
inc
add
leave
sub
clc
fisttpl
xchg
inc
clc
jle
psubusw
xchg
xchg
xchg
inc
add
lret
cwtl
es
aad
add
pop
clc
ret
clc
shll
add
cmp
std
outsb
test
aas
adc
add
aam
add
jb
add
add
add
filds
add
clc
aas
pop
lods
adc
add
clc
inc
add
in
push
sub
clc
sbb
in
divl
xor
add
add
sub
dec
cmc
arpl
add
add
dec
fsin
test
cmp
sar
push
add
add
xlat
cs
add
cs
clc
inc
add
adc
add
clc
push
add
test
clc
out
or
cmp
leave
lods
xlat
sub
fisttpll
cld
add
add
push
clc
clc
dec
testb
lcall
and
cmc
sar
xor
add
add
xbegin
sub
test
lahf
loope
xor
clc
int3
je
clc
leave
sub
es
sar
add
xor
std
sti
fbstp
add
shl
clc
mov
dec
mov
clc
ja
es
pop
xchg
leave
or
mov
add
and
add
clc
xor
add
ja
fisubs
add
lret
add
cli
cmp
adc
add
add
ficompl
popa
add
push
faddl
mov
clc
push
clc
popa
add
cmp
mov
clc
cltd
inc
add
mov
add
rorl
xchg
clc
xchg
ret
clc
and
add
push
xchg
ss
clc
lock
add
mov
fsubrl
add
shll
xchg
cli
sti
sbb
out
xchg
xor
add
lcall
add
jl
stos
dec
in
ljmp
sub
xor
add
pop
clc
dec
push
add
mov
cmpsl
clc
outsb
ds
add
pop
mulb
add
je
add
add
add
add
add
in
imul
pop
adc
add
sar
mov
lret
insl
mov
add
xchg
cwtl
ja
add
sub
push
pusha
add
xchg
testl
add
sbb
cmc
mov
clc
xchg
lock
fdivr
jp
lahf
lahf
repz
es
shlb
add
imull
add
clc
cmp
jbe
inc
add
in
ja
add
iret
pop
decl
dec
addr16
cwtl
sub
pop
out
add
add
stos
add
add
pop
fwait
xlat
cmp
and
add
test
mov
clc
mov
cmp
out
sbb
mov
clc
clc
cmp
xlat
gs
pop
test
sub
push
clc
pop
out
push
clc
jo
add
insl
out
xor
mov
stos
mov
push
scas
outsl
cmp
clc
insb
xor
add
clc
insl
dec
lahf
mov
stc
mov
enter
sub
clc
jnp
clc
clc
pop
dec
cltd
mov
xbegin
cmp
push
add
dec
add
add
pop
inc
add
out
adc
add
out
insb
frstor
xchg
int
ret
clc
in
adc
add
outsb
cmc
aad
mov
add
inc
clc
pusha
add
movsl
clc
inc
add
das
pop
sbb
add
ret
clc
mov
adc
imul
add
sbb
adc
sar
add
lea
pop
push
mov
add
and
test
int
loopne
jecxz
inc
add
and
call
cmp
and
add
add
add
add
sar
stc
int
add
jo
add
sub
add
adc
add
cmp
mov
jl
or
clc
mov
cmp
gs
pop
adc
add
add
lods
lea
stos
fwait
or
clc
stos
sahf
ds
xchg
sar
incb
add
dec
movsl
clc
sub
stc
pusha
add
ljmp
cmp
clc
aad
dec
dec
mov
xlat
sub
xor
add
jle
scas
ret
clc
jmp
and
add
jge
push
add
leave
push
xchg
dec
inc
add
sbb
cmc
data16
mov
push
sbb
cs
out
sar
clc
bnd
out
add
jnp
mov
mov
cld
movsl
clc
or
out
in
fsubrs
insb
shrb
jnp
add
push
cmove
xchg
pop
clc
jbe
add
inc
add
lea
out
push
add
push
nop
pop
push
inc
add
repnz
add
movsb
clc
call
popf
or
clc
clc
pop
out
push
add
xchg
fdivrs
stos
and
mov
fsubrs
add
push
clc
clc
xchg
adc
add
xchg
call
bound
add
push
out
ss
rol
clc
addr16
xchg
aad
add
add
lock
jecxz
cwtl
xabort
add
clc
test
clc
pop
xchg
leave
ret
clc
sbb
add
add
clc
sub
add
add
mov
cmp
nop
das
adc
add
pop
cmpsl
clc
imul
add
xabort
inc
clc
mov
sub
shll
add
clc
cmp
add
int
mov
fdivrl
leave
fwait
add
data16
in
daa
clc
shll
movsl
clc
movsb
clc
inc
clc
movsb
clc
js
cmp
xchg
pop
jmp
push
or
adc
add
add
aad
scas
pop
inc
clc
mov
shrb
clc
data16
push
in
in
loop
inc
add
dec
ret
clc
in
outsb
lods
lock
pop
mov
jne
ljmp
inc
add
into
loope
or
add
jne
sbb
clc
add
or
and
add
clc
and
or
mov
xchg
rorb
cmp
rcrb
test
cmp
cmp
cli
jns
mov
clc
outsb
lahf
fidivrs
add
sub
and
add
sti
sbb
incl
mov
inc
clc
sub
xchg
dec
loop
inc
add
pop
scas
in
mov
clc
adc
clc
aaa
push
ret
clc
aaa
xchg
imul
add
add
clc
xchg
cmp
fisttpl
clc
xchg
cwtl
insl
add
sbb
call
add
add
stc
xchg
cltd
jb
add
clc
dec
push
cmpsl
clc
lods
push
clc
dec
mov
add
xor
clc
pop
idivb
nop
hlt
cltd
and
add
sub
dec
outsb
mov
clc
fwait
and
add
lcall
or
imul
iret
imul
das
lahf
insb
inc
clc
leave
cs
cld
repnz
mov
push
fwait
hlt
cmpsl
clc
lret
mov
add
clc
pop
jo
add
mov
popf
enter
mov
outsb
push
add
arpl
add
lcall
test
je
clc
enter
or
ret
clc
cmc
scas
adc
add
out
clc
ja
mov
clc
jne
clc
test
clc
sahf
push
add
movsl
clc
xchg
mulb
add
adc
clc
aad
pop
mov
add
loopne
dec
push
cmp
add
cmpsl
clc
int3
es
and
add
or
enter
jns
lret
pop
clc
xbegin
push
cmp
add
adc
clc
jge
outsb
or
and
std
dec
jge
sbb
adc
add
add
cmc
out
int
gs
jns
push
clc
xchg
in
pop
mov
add
add
clc
mov
add
jb
add
stos
sbb
add
add
xor
add
mov
into
pop
cmp
xabort
mov
pop
fcmovnu
cld
xchg
add
add
add
addr16
nop
loopne
inc
clc
jo
add
clc
sub
stos
arpl
add
or
test
insb
sarl
aad
clc
fisubrl
push
add
cmp
mov
out
sar
push
outsb
inc
add
mov
add
cltd
cmp
add
ja
fcom
lret
cmp
clc
add
movsl
clc
sub
clc
lret
jb
add
add
lcall
idivb
data16
adc
add
clc
cmp
inc
add
loop
pop
clc
dec
dec
pushf
cmpsl
clc
data16
mov
clc
out
sbb
add
pop
ds
and
add
push
xchg
mov
imul
add
sbb
clc
add
add
push
popf
js
out
aas
inc
clc
jp
xchg
cmp
sbb
clc
sbb
xabort
add
pop
shl
adc
push
clc
dec
sub
clc
xchg
xchg
and
add
add
addr16
lea
lret
shll
add
adc
add
add
cmp
or
add
jno
add
xor
add
scas
das
sub
sbb
add
push
cmpsb
clc
sbb
jg
jle
inc
clc
lods
mov
dec
inc
clc
push
add
sahf
in
ljmp
inc
clc
pop
data16
test
adc
add
xor
add
mov
sbb
clc
xor
add
jmp
sub
insb
or
and
add
xchg
fsub
clc
in
clc
inc
add
dec
cmpsl
clc
cmc
push
clc
dec
pop
mov
clc
cmp
xchg
add
add
cs
xabort
or
dec
and
add
outsl
lret
in
mov
fdivrs
or
or
clc
ja
jnp
mov
clc
ret
jbe
add
aam
sbb
test
jl
clc
ds
ret
clc
or
push
add
add
es
nop
dec
jae
add
in
add
add
roll
add
push
clc
pushf
imul
xor
add
xchg
mov
or
add
fwait
lods
ja
into
push
shrl
cmp
or
add
in
inc
add
mov
add
mov
add
add
jmp
stc
xchg
xchg
mov
cmp
inc
add
mov
add
adc
add
clc
or
add
dec
aaa
push
pop
adc
add
sar
clc
test
clc
out
cmp
pushf
out
mov
pushf
mov
loop
mov
cwtl
push
cmp
xor
add
add
xlat
shll
jno
add
bound
add
loop
vmaxps
add
into
pop
setne
clc
loop
cmpsl
clc
rcr
lcall
add
clc
pop
sbb
add
clc
dec
xchg
rolb
add
add
shll
dec
dec
jle
add
outsl
push
out
cmpsl
clc
mov
xchg
ljmp
enter
je
jmp
mov
add
ds
out
ss
cmp
inc
clc
insb
jno
add
clc
xlat
add
add
add
clc
arpl
add
scas
lahf
pusha
add
fnop
add
clc
cmp
lods
test
clc
sti
sub
pop
push
add
or
clc
in
cmp
clc
jp
add
inc
clc
sbb
repz
cmc
loopne
fcmovbe
ficomps
mov
xchg
xor
clc
adc
add
in
scas
fcmovb
clc
popa
add
pop
inc
clc
inc
clc
rcrb
push
pop
push
add
incl
add
mov
js
xchg
das
in
es
xor
mov
mov
mov
clc
mov
pop
loop
insl
add
add
clc
cld
mov
push
inc
clc
adc
add
je
add
jo
add
pushf
test
in
sbb
add
or
add
sar
xor
repz
add
jp
xor
add
imul
clc
sub
add
pop
int
clc
inc
add
imul
test
arpl
add
sub
test
cmp
into
or
clc
jg
ljmp
add
ljmp
mov
add
add
add
jp
jnp
add
es
ret
aad
lods
mov
out
test
fwait
lock
add
add
clc
mov
xchg
sub
das
xor
add
ret
clc
sbb
mov
clc
stos
dec
sub
iret
std
jle
push
repnz
clc
adc
add
je
clc
inc
add
mov
nop
jae
add
clc
outsl
mov
div
call
xbegin
sahf
int3
imul
clc
push
add
xor
add
mov
clc
sbb
in
jge
clc
push
add
add
adc
bound
add
mov
sbb
xor
add
add
cmp
clc
sbb
outsl
add
add
test
loopne
lahf
jns
shll
push
add
jl
cs
push
pop
jp
inc
add
leave
mov
clc
xor
add
dec
mov
add
add
add
mov
mov
add
pop
mov
clc
push
scas
cmp
das
cli
adc
add
inc
clc
sub
pop
inc
add
mul
clc
fdivrs
pushf
mov
add
inc
add
mov
mov
clc
adc
add
mov
clc
call
popa
add
xor
fildll
add
mov
push
or
clc
stc
and
add
inc
clc
inc
add
mov
add
xchg
jno
add
das
and
insl
outsl
mull
clc
aaa
sti
ds
xabort
add
jne
add
xbegin
xor
jmp
add
inc
clc
jmp
jo
add
imul
jns
mov
add
fisttps
add
push
add
flds
add
mov
add
or
ljmp
jmp
add
jg
cmp
clc
cmp
add
in
jle
mov
sar
clc
xchg
aaa
sub
add
jle
mov
add
outsl
lea
fcom
in
pop
hlt
sahf
xlat
mov
add
in
test
add
sub
clc
inc
clc
inc
clc
jne
clc
clc
dec
mov
add
add
out
hlt
xor
add
xlat
mov
in
test
bswap
dec
in
loop
pop
scas
fmull
push
cmp
cmp
loope
rcrl
loop
outsb
inc
clc
rclb
mov
clc
jp
pop
ja
xor
add
or
das
outsb
neg
pusha
add
mov
clc
movsl
clc
dec
ja
mov
mov
push
push
add
in
pop
mov
add
stos
xchg
and
add
pop
mov
aaa
fdivrl
and
cli
push
ljmp
sbb
xchg
pusha
add
cmp
add
mov
add
add
jo
add
stc
sbb
clc
pop
cli
xor
clc
in
cli
add
add
inc
clc
push
int3
push
frstor
add
add
mulps
clc
pushf
fnstsw
clc
push
add
sub
and
add
es
or
add
and
xbegin
add
inc
add
insb
clc
pop
mov
jge
add
test
adc
add
xchg
cmp
mov
mov
clc
cmp
add
xabort
clc
cmp
mov
inc
clc
pop
jge
add
pop
lret
filds
cltd
popf
gs
dec
fistpll
add
cs
cmp
sbb
lea
sbb
in
adc
add
mov
and
add
cli
push
gs
cmp
jns
clc
push
out
icebp
test
jbe
sbb
ljmp
mov
repnz
add
pop
clc
in
into
adc
add
inc
clc
jmp
in
sub
clc
fcmovb
clc
test
add
xchg
lret
out
jne
pop
push
cmp
or
pusha
add
xchg
test
clc
and
clc
sar
mov
and
add
mov
jb
add
push
add
cmpsb
clc
mov
leave
push
mov
clc
test
cmp
add
mov
ffreep
clc
fsubrs
cmp
clc
mov
or
enter
mov
clc
call
sahf
xchg
ret
clc
out
popf
cmp
add
and
notl
adc
xor
add
dec
daa
clc
cmp
clc
pushf
aaa
lahf
mov
add
add
clc
fildll
sbb
out
push
rclb
clc
mov
xor
add
sahf
inc
clc
fcmovu
ja
mov
add
int
clc
mov
cmp
nop
loope
push
xor
add
ss
jecxz
dec
mov
mov
add
daa
clc
cmp
mov
push
add
sbb
clc
mov
stos
scas
dec
xchg
pop
mov
jb
add
mov
push
shlb
lods
mov
add
ret
dec
pop
xor
add
jo
add
mov
int
xchg
cwtl
sub
adc
push
pop
fisubl
add
mov
cmp
je
xor
add
clc
add
ljmp
sub
pop
cmp
push
pop
inc
clc
mov
push
clc
lret
jno
add
lret
push
clc
data16
fwait
out
mov
popf
inc
clc
cmp
add
clc
xchg
fdivrs
push
mov
insl
lcall
dec
xlat
in
sti
mov
negb
cld
jnp
adc
add
add
clc
and
add
push
xchg
mov
add
xchg
mov
scas
pushf
adc
test
insb
mov
jmp
stos
nop
fdivs
add
je
xor
add
lret
push
mov
sbb
loopne
mov
ficompl
pop
scas
or
add
cmpsl
clc
test
jmp
pop
cmp
clc
sar
out
or
dec
fidivrs
add
push
test
cmp
xor
add
add
lea
cmp
clc
das
ljmp
mov
outsb
imul
stos
xbegin
clc
ret
dec
dec
imul
pop
pop
sbb
adc
add
add
pop
test
jno
add
clc
jae
add
jmp
imul
sub
scas
and
add
mov
clc
add
sar
xchg
cmp
std
ret
clc
inc
clc
or
mov
adc
add
clc
cmp
clc
mov
and
add
clc
pop
daa
clc
rolb
clc
ljmp
in
pop
stos
push
inc
clc
sub
mov
clc
push
add
inc
add
mov
clc
jp
loopne
xlat
loope
jo
add
sub
add
iret
or
clc
repnz
add
clc
pop
cs
nop
je
sti
add
xor
add
clc
mov
fsubs
aas
xbegin
sbb
fs
clc
pushf
shll
add
add
mov
cmp
in
rcrb
jb
add
jmp
sbb
or
jge
mov
add
repnz
cmp
loope
xchg
jno
add
out
jg
add
inc
clc
jg
daa
clc
sahf
pop
mov
out
sar
clc
std
mov
pop
stos
test
test
fsubrp
xchg
or
add
dec
lods
inc
add
cs
in
in
jo
add
jno
add
adc
cld
out
insb
xbegin
negl
clc
xlat
outsb
sbb
mov
sub
nop
outsl
push
sbb
clc
cmc
xchg
adc
stos
fidivs
leave
ja
out
or
clc
push
add
out
rorb
pop
dec
cmp
add
pop
xchg
push
cmp
sbb
daa
clc
push
add
xchg
jns
in
push
fidivs
out
lcall
popf
push
add
es
jmp
mov
clc
xchg
mov
mov
add
dec
stos
flds
jle
cmp
aad
ja
xchg
pop
cmp
imul
test
test
inc
clc
dec
pop
cmp
clc
je
cmp
jg
pop
lea
jmp
clc
das
cmpsb
clc
and
add
and
dec
cmp
inc
add
cmp
cmp
nop
test
xor
add
or
add
and
add
add
clc
jo
add
clc
loopne
lret
push
mov
add
add
xor
add
int3
cwtl
mov
mov
xchg
leave
arpl
add
clc
es
jp
std
xchg
test
add
bound
add
add
addr16
insl
push
add
mov
push
leave
xor
clc
xchg
cmpsl
clc
mov
xabort
clc
mov
add
lea
push
or
cmpsl
clc
push
aaa
daa
clc
jbe
add
out
imul
cmp
sbb
aaa
pushf
testb
clc
push
add
xchg
mov
jnp
out
mov
add
dec
adc
xor
push
cltd
das
jo
mov
pusha
add
stos
cmp
clc
pop
clc
xchg
int3
add
add
xchg
pop
je
pop
je
pop
push
clc
xchg
dec
jmp
clc
clc
out
clc
jno
add
js
xchg
dec
or
loop
adc
add
add
sbb
rorl
stos
inc
clc
popf
addr16
sbb
nop
data16
xchg
mov
inc
add
div
aaa
movsb
clc
inc
add
test
test
add
dec
fucomip
cltd
std
push
adc
add
add
add
add
add
add
pusha
add
ds
xchg
and
out
std
call
dec
mov
jbe
cmpsl
clc
inc
add
dec
cmp
add
clc
cli
int
xchg
and
add
sbb
xor
add
push
xchg
push
lahf
xor
add
clc
mov
dec
pop
ss
adc
add
psubb
add
mov
clc
adc
add
scas
sub
gs
flds
cmpsl
clc
or
out
jns
add
xchg
jecxz
cmp
add
mov
lods
in
inc
add
sub
pop
clc
mov
or
mov
clc
sub
in
aam
clc
sub
xlat
add
ret
clc
rolb
add
xor
add
mov
jae
add
call
add
add
movsl
clc
leave
jno
add
add
lar
add
cmp
clc
pop
mov
add
add
push
clc
lcall
xor
add
add
jle
mov
scas
addr16
movsb
clc
pop
daa
clc
cmp
mov
xor
add
dec
fisubs
cmp
data16
push
mov
imul
add
add
hlt
adc
add
or
es
push
shll
fldl
add
scas
sbb
mov
clc
sti
cmp
jecxz
cltd
push
xor
add
icebp
pop
ficoml
add
jbe
clc
sbb
push
add
mov
adc
add
idivb
mov
outsb
fwait
shr
jnp
clc
dec
sar
sub
lret
sbb
inc
add
sbb
incb
dec
test
and
add
add
rorb
mov
fidivl
add
push
mov
pusha
add
pop
int3
sub
cli
lcall
dec
adc
inc
add
lcall
sub
lods
aas
inc
add
inc
add
cltd
push
xchg
sub
std
scas
jp
jae
add
push
cmp
loopne
and
add
add
xor
add
faddp
clc
adc
clc
mulb
clc
sahf
push
icebp
push
pop
sub
sub
mov
mov
clc
lret
dec
push
cld
push
cwtl
dec
cwtl
popa
add
or
add
xlat
cmc
xchg
pop
imul
ret
mov
aaa
dec
fs
add
sar
push
clc
sar
dec
xchg
push
push
add
jne
clc
jle
push
inc
clc
clc
aad
add
pop
out
insb
pop
test
fisubl
sbb
sarl
lcall
movsl
clc
and
add
clc
sub
inc
clc
lods
pop
cmp
add
pop
aaa
shl
clc
stc
popa
add
mov
and
mov
sbb
add
jns
js
add
leave
shll
add
add
movsb
clc
dec
cmpsl
clc
popa
add
shrb
stc
popf
sub
scas
addr16
movsb
clc
movsl
clc
pop
and
add
clc
cmp
inc
add
imul
mov
jmp
out
pop
or
int
mov
mov
inc
add
mov
push
outsl
sub
int
sub
clc
inc
clc
mov
clc
in
dec
in
mov
mov
or
add
js
into
popf
cmc
push
popa
add
xor
add
xor
add
or
mov
icebp
xchg
xchg
or
and
cmp
sti
imul
add
test
clc
or
add
repz
ss
inc
clc
mov
clc
nop
and
add
cmp
mov
clc
pop
addr16
inc
clc
mov
clc
flds
add
negl
inc
clc
in
jmp
clc
inc
add
fnstcw
das
cmp
clc
jnp
cmp
clc
xchg
pop
push
add
aaa
fisubrs
clc
js
sahf
or
js
and
add
clc
sub
lea
aad
in
sbb
clc
imul
add
cmp
clc
outsl
dec
jne
sub
push
mov
enter
or
js
add
push
cmpsb
clc
cmp
popf
or
add
ds
pop
push
adc
add
add
push
add
sti
jp
xabort
add
add
lods
adc
mov
clc
insb
hlt
fwait
lea
adc
add
ss
push
clc
jmp
mov
clc
enter
push
mov
add
xor
add
mov
or
addr16
stc
movsl
clc
xchg
cmp
xbegin
ret
clc
push
add
jle
inc
add
jmp
add
inc
add
mov
rcrb
out
in
test
lret
mul
clc
xor
clc
fstps
pop
jl
add
scas
ffreep
clc
gs
imul
cmp
add
sbb
mov
clc
stos
js
add
rclb
add
cmp
push
add
mov
popa
add
enter
add
dec
push
sub
mov
pop
movzwl
add
dec
test
clc
jno
add
cwtl
cmp
and
add
pop
mov
clc
cmp
cs
outsb
adc
add
mov
aas
xbegin
repz
repz
cmp
add
clc
popf
sub
clc
push
test
popa
add
sbb
add
cmp
add
pushf
mov
sbb
dec
dec
or
clc
fsts
push
add
into
dec
outsb
into
xchg
stos
outsb
xchg
mov
fcos
jb
add
inc
add
dec
lods
test
sub
adc
add
clc
sti
push
cmp
clc
pcmpeqd
jnp
clc
imul
add
add
out
mov
add
add
add
cmp
add
add
or
add
xor
add
jno
add
pop
outsl
jg
clc
out
pop
jge
mov
clc
je
sub
add
xchg
repnz
clc
negl
es
sbb
test
inc
add
and
add
clc
cmp
in
or
rep
clc
mov
clc
flds
dec
mov
sbb
clc
sbb
xchg
mov
pushf
lods
sbb
clc
inc
clc
pop
clc
sub
adc
add
dec
sub
lcall
clc
mov
clc
jmp
clc
testb
add
add
call
popa
add
out
inc
clc
insl
icebp
inc
clc
test
add
inc
clc
inc
add
vmovhps
cmp
add
daa
clc
cmp
lods
cmp
clc
jp
clc
xor
add
inc
clc
fldl2e
cmp
xchg
push
mov
push
cmp
push
das
push
add
sub
mov
clc
push
cmp
dec
add
add
clc
insl
rcl
lods
aad
mov
mov
es
sbb
add
sub
add
clc
sub
or
inc
clc
cmpsb
clc
dec
jnp
clc
rolb
jl
pop
cmp
add
push
popa
add
addr16
and
add
add
pop
test
add
push
out
ljmp
clc
ss
testl
mov
clc
add
mov
fcmovnb
clc
insl
popa
add
xor
add
lret
xlat
pop
clc
sub
push
out
pop
inc
add
es
xchg
xor
add
add
jo
add
aas
mov
pushf
dec
pop
gs
pusha
add
mov
add
mov
cmp
mov
movsb
clc
or
pop
stos
in
sub
clc
mov
clc
and
add
in
dec
inc
clc
bound
add
clc
jnp
xlat
cmp
add
mov
in
push
jbe
clc
sbb
xor
add
clc
ror
fstl
mov
clc
cs
add
repz
test
jle
jno
add
add
clc
or
add
mov
ja
decl
neg
in
jl
scas
pop
pop
clc
or
pop
cltd
cmp
clc
mov
clc
or
cmpsl
clc
in
and
arpl
add
cltd
adc
add
cltd
jmp
or
push
in
lods
jmp
cmp
clc
pop
pop
clc
mov
and
add
clc
and
add
cwtl
int
sub
pop
cmp
add
push
cmp
or
insb
dec
leave
sbb
xchg
outsl
push
add
xor
add
add
negb
xchg
lods
sbb
add
loop
inc
add
mov
push
add
mov
add
push
add
fldl
jp
inc
clc
push
xchg
add
add
xchg
ljmp
daa
clc
sbb
add
into
push
xchg
insl
data16
imul
add
add
in
cmp
add
sbb
vucomiss
jle
clc
ss
clc
sub
add
push
pop
clc
in
inc
clc
push
mov
clc
push
xchg
js
clc
pop
cmp
mov
nop
xchg
inc
add
inc
add
test
mov
add
jns
imul
clc
mov
incl
add
adc
add
inc
clc
cmp
clc
cmp
add
fcompp
sbb
clc
loope
sub
repz
clc
aas
sti
and
cmp
cmp
test
clc
outsl
loop
add
add
dec
and
add
add
insl
sbb
mov
mov
push
adc
add
add
jae
add
clc
inc
add
cs
clc
sar
ja
cmp
add
add
fldenv
add
jb
add
fcoml
bound
add
int
sbb
dec
pushf
data16
shl
ds
std
call
loope
inc
clc
lcall
in
sub
clc
pop
jmp
cmp
cmp
fdivrs
das
or
add
mov
pop
cwtl
scas
iret
sub
xchg
outsl
bound
add
mov
add
pavgw
xchg
pop
add
add
clc
pop
xchg
adc
add
xor
add
clc
mov
clc
clc
mov
lock
add
aad
mov
mov
inc
clc
mov
dec
lods
and
add
sbb
and
add
test
xor
add
add
xor
add
push
add
int3
and
add
push
sti
cmc
xchg
and
add
sti
adc
add
xor
add
or
movsb
clc
xchg
sbb
jbe
clc
push
add
xor
add
fisttps
cmp
lret
add
clc
std
pop
es
jl
addr16
xchg
mov
push
ss
add
jecxz
sar
sahf
addr16
inc
clc
jno
add
cmp
add
jp
inc
clc
jbe
xor
add
mov
clc
push
fwait
pop
cmp
add
clc
pop
call
clc
jne
lahf
cmp
cmpsl
clc
push
mov
xchg
fsubl
add
push
test
mov
add
outsb
aas
js
jo
add
addr16
and
add
bound
add
add
add
adc
add
add
sar
mov
inc
clc
inc
clc
push
sbb
mov
xor
add
sarl
adc
add
jns
clc
push
clc
cs
and
add
shl
clc
cmp
aam
mov
out
pop
jle
shll
add
push
xchg
push
add
add
enter
xabort
clc
mov
add
xchg
cltd
jbe
fimuls
in
push
mov
push
sbb
push
add
outsl
cmp
clc
imul
push
hlt
mov
add
push
mov
test
add
adc
mov
clc
or
clc
and
test
adc
add
add
aas
fnstenv
inc
add
xchg
sbb
add
xchg
jae
add
fcmovnbe
shlb
enter
dec
xchg
out
xlat
clc
pop
clc
stos
test
cwtl
add
pop
popa
add
or
inc
clc
jne
popa
add
xchg
mov
clc
adc
add
fdivrs
outsl
and
add
clc
test
clc
cmpsl
clc
ss
add
repz
aaa
lods
mov
mov
sbb
clc
icebp
sar
sbb
mov
int3
mov
add
add
clc
lcall
inc
clc
gs
mov
popa
add
xchg
jmp
add
movsb
clc
rclb
add
mov
add
or
shl
clc
cmp
push
in
inc
clc
pop
es
sub
add
into
stos
mov
dec
lret
aad
mov
add
clc
sub
clc
mov
push
jmp
out
lock
hlt
data16
cmp
mov
movsl
clc
imul
push
clc
adc
add
xor
add
lret
add
add
add
int
add
fcmovu
push
fldcw
mov
loopne
push
add
lcall
add
mov
sub
or
cmp
sbb
ficompl
clc
xchg
adc
add
cmp
je
inc
clc
mov
iret
cmpsl
clc
outsl
xchg
clc
mov
add
loop
pop
outsl
mov
clc
mov
add
add
add
xor
add
cmp
adc
add
clc
std
call
xchg
mov
aaa
cmp
clc
mov
jp
je
repnz
add
add
add
cmpsl
clc
xchg
push
jno
add
loop
movsl
clc
lret
dec
inc
add
jg
das
pop
sbb
stos
mov
jge
scas
mov
push
push
dec
or
mov
ss
gs
and
add
repnz
push
jb
add
stc
mov
push
add
fdivl
lods
add
add
ds
lea
add
xor
add
sar
jne
popf
clc
jg
pop
clc
mov
pop
nop
sbb
mov
lcall
add
ja
add
jb
add
clc
add
add
fwait
ja
inc
add
and
add
clc
push
add
cmpsb
clc
mov
add
clc
cmpsl
clc
ss
xor
add
push
stc
and
add
push
mov
ja
cmp
add
xabort
jle
mov
jmp
add
pop
cmp
clc
aas
pop
aad
inc
add
sbb
or
clc
mov
rcrl
in
dec
push
add
inc
add
pop
xor
add
push
pop
jne
cmp
pop
cmc
pop
inc
add
mov
xchg
enter
into
jbe
add
adc
dec
loopne
push
add
pop
test
clc
cmp
clc
lret
and
add
add
inc
clc
cmp
mov
pushf
js
xchg
scas
scas
sahf
cmp
cmp
add
sub
add
sub
add
fucomp
scas
jnp
fidivs
xor
add
add
mov
clc
xor
cmp
clc
cmc
xor
add
add
add
sar
clc
ret
cmp
clc
jl
clc
pop
sbb
add
ret
clc
mov
inc
clc
push
push
mov
add
add
data16
lock
mov
lock
clc
int3
pop
lahf
clc
jge
stos
pop
outsl
adc
fistl
add
pop
clc
mov
es
dec
loopne
inc
add
pop
shlb
add
mov
rcrb
scas
lock
aas
es
lea
jb
add
add
or
add
add
lea
fwait
inc
add
jb
add
movsl
clc
mov
mov
fbstp
add
and
add
clc
sbb
fwait
pop
push
dec
mov
test
insl
insb
jno
add
mov
je
clc
cmp
sub
cmp
add
test
pop
pop
fiadds
or
sub
clc
mov
clc
outsl
xor
add
push
add
cltd
insl
adc
add
jecxz
cmpsb
clc
test
cli
out
add
add
add
fmuls
add
pushf
cld
dec
rolb
clc
mov
clc
xchg
loopne
cmc
ss
adc
add
mov
jge
icebp
jo
add
add
add
shl
or
add
jge
fimull
clc
iret
outsl
or
mov
clc
jno
add
aaa
pushf
cmp
imul
jno
add
add
xbegin
xor
add
mov
add
sub
dec
mov
pop
loopne
xlat
fcoml
push
icebp
ljmp
jnp
add
jl
clc
xor
mov
mov
add
add
inc
clc
sub
rclb
add
jo,pn
add
outsb
add
repnz
sub
insb
js
mov
add
push
xor
lret
fldcw
push
add
jmp
fs
dec
in
sarb
clc
mov
loope
and
add
add
mov
pop
xabort
mov
add
add
clc
xor
add
dec
jo
add
repnz
jns
push
push
add
pop
or
fadd
clc
daa
clc
mov
test
xor
pushf
jae
add
add
popf
aam
clc
cwtl
and
add
ljmp
scas
xor
add
xor
add
and
or
mov
data16
daa
clc
imul
add
pop
scas
aas
pop
das
dec
add
add
push
add
movsb
clc
xchg
or
clc
and
or
add
sar
add
push
mov
mov
clc
ret
clc
cmp
stc
inc
clc
xbegin
clc
cwtl
mov
mov
call
push
cmp
cmp
or
sub
or
incb
add
gs
lret
imul
cmp
ja
add
add
mov
cmp
cmp
cmp
clc
cmp
clc
cmp
xchg
cmp
clc
test
dec
xchg
imul
add
leave
xchg
je
add
dec
icebp
sbb
xchg
in
leave
dec
push
clc
fcoml
clc
or
cmp
clc
ds
roll
add
pop
aas
push
jge
add
ret
lods
xor
add
xbegin
add
add
call
iret
inc
add
xchg
and
add
das
jne
push
add
sahf
popa
add
fstpl
add
or
add
mov
pop
pop
shlb
pop
push
and
add
clc
mov
clc
es
adc
clc
mov
add
movsl
clc
data16
ljmp
dec
mov
jae
add
cmc
add
stos
mov
movsl
clc
sbb
pop
mov
clc
add
leave
negb
mov
fs
lods
fstl
clc
cmp
dec
stos
inc
clc
xor
add
sub
push
ret
clc
das
mov
jb
add
jecxz
mov
pop
mov
mov
in
mov
and
add
add
add
add
xabort
clc
lea
clc
mov
add
add
mov
add
imulb
jbe
jne
data16
insb
and
add
clc
pop
fistpl
add
push
jle
add
in
cld
clc
cmp
dec
mov
add
movsl
clc
shr
js
add
or
mov
das
testb
clc
data16
gs
in
mov
pop
je
add
ds
xchg
sahf
lcall
clc
loopne
lahf
xchg
insl
pop
aad
clc
xor
add
clc
fiaddl
add
movlps
add
add
sbb
clc
fnstsw
clc
jnp
xor
add
add
add
sbb
mov
xchg
clc
xchg
and
add
jmp
nop
das
mov
nop
or
lea
movsl
clc
dec
in
je
int
clc
js
clc
cmp
add
ret
clc
xor
sub
clc
mov
cmp
pop
cmc
or
clc
cmp
clc
loope
xor
add
mov
add
and
add
clc
rcrb
add
out
sti
adc
sub
sti
pop
clc
fcoml
flds
adc
add
push
add
movsl
clc
stos
xor
add
xchg
clc
mov
xchg
sub
mov
cmpsb
clc
sbb
add
mov
or
clc
mov
icebp
das
filds
dec
adc
add
clc
or
pusha
add
gs
fsubs
add
add
add
cmp
and
add
cmp
mov
jnp
clc
add
add
clc
popa
add
cld
or
outsl
or
add
mov
lahf
xchg
push
add
bswap
aas
jo
add
add
aam
insb
and
add
movsb
clc
adc
fdivrs
dec
dec
pusha
add
lret
pop
int
inc
clc
jo
add
cmp
clc
in
jbe
or
in
and
add
popa
add
dec
xor
add
lret
fnstcw
mov
sub
mov
sar
clc
aas
xor
add
dec
xchg
sub
add
int
mov
clc
jns
int3
jp
insb
fisubs
add
dec
mov
out
lods
inc
add
in
jb
add
add
or
add
mov
in
cmpsb
clc
fsubr
mov
pop
fmuls
xchg
pop
mov
push
add
mov
fcmovne
clc
pop
dec
push
sub
push
aaa
aaa
test
add
out
test
pop
cmpsl
clc
dec
dec
call
mov
ljmp
out
xor
cmp
push
clc
fsubrp
xor
add
add
xor
clc
mov
add
mov
clc
insb
adc
add
bound
add
cmp
add
cmp
mov
mov
push
aam
clc
loope
popa
add
sbb
clc
mov
arpl
add
fstpt
sti
icebp
stos
mov
clc
xchg
inc
add
sub
xchg
and
add
cmp
icebp
mov
add
mov
ja
clc
cltd
and
add
mov
test
jmp
lods
jae
add
clc
sbb
or
xchg
stos
lcall
push
movsb
clc
pop
das
xchg
fidivrs
add
outsl
mov
add
out
mov
clc
testl
xchg
mov
sbb
pop
icebp
dec
cmp
pop
mov
add
ret
clc
add
add
cmp
mov
cld
outsl
push
loopne
push
sub
call
sbb
sbb
add
add
clc
bnd
lods
mov
fs
adc
add
add
pop
out
sub
mov
iret
mov
cmp
add
add
add
addr16
dec
push
adc
add
cmp
clc
mov
clc
lahf
mov
mov
clc
loope
std
or
inc
add
cmpsl
clc
dec
sar
push
ds
jno
add
daa
clc
out
sub
add
out
scas
in
sti
pop
mov
clc
loope
out
aaa
shrl
or
lret
mov
jae
add
popf
outsb
add
or
clc
mov
sar
jecxz
stos
sub
pop
cmp
imul
lock
xor
clc
testb
outsb
cmp
jbe
clc
mov
enter
mov
in
dec
sub
dec
bound
add
push
jl
add
sbb
jl
clc
adc
add
mov
or
fbld
fs
mov
fwait
fs
in
popa
add
cwtl
jge
clc
popa
add
mov
bound
add
mov
add
pop
mov
mov
clc
push
add
or
out
fdivs
cmpsl
clc
mov
lock
add
cmpsb
clc
cmpsl
clc
mov
clc
imul
sbb
add
cmp
cwtl
xchg
pop
cmp
test
inc
add
ret
clc
or
xchg
in
and
incb
clc
clc
add
add
xchg
pop
jno
add
dec
test
mov
aam
fdivl
sub
call
add
add
cmpsb
clc
fs
or
shlb
mov
xbegin
sbb
xlat
mov
fs
int3
xor
add
clc
int3
lcall
add
inc
clc
mov
add
je
ss
inc
clc
or
push
sar
xchg
sti
mov
sub
inc
add
sub
fstpl
nop
enter
xchg
sti
add
add
add
mov
and
add
jmp
clc
mov
mov
ret
clc
aad
xchg
fbld
add
mull
and
add
clc
add
add
add
push
js
pusha
add
or
add
enter
mov
fdivrl
fnstsw
mov
pop
xor
add
insb
xlat
fisubrl
jle
mov
pop
dec
jne
pop
es
sar
add
lods
movsb
clc
test
scas
or
cmp
iret
rorl
pusha
add
repnz
fcomps
fimull
das
stos
add
add
add
popa
add
stc
movsl
clc
in
sbb
loop
sbb
ret
clc
das
cmp
add
push
add
push
add
jp
leave
movsb
clc
mov
add
add
lods
cmpsl
clc
inc
clc
imul
push
lret
clc
adc
add
std
sbb
sbb
add
enter
dec
lods
cmp
add
add
test
inc
add
movsl
clc
or
shll
add
inc
add
mov
add
fisttpll
pop
cmpsb
clc
or
jl
ja
out
mov
clc
mov
push
push
dec
movsl
clc
int3
mov
daa
clc
push
clc
inc
add
inc
clc
in
push
add
mov
xbegin
adc
add
sub
mov
add
and
add
adc
add
cld
add
add
lret
mov
aaa
or
add
add
add
hlt
sub
leave
xchg
cld
and
test
jp
dec
sahf
in
ds
stc
fwait
es
or
out
push
add
cmp
adc
add
cmp
add
add
pop
dec
lods
iret
mov
add
cmp
adc
add
xbegin
jnp
adc
add
test
mov
xor
inc
clc
jno
add
dec
iret
int3
adc
adc
add
clc
decb
or
jbe
jmp
fildl
mov
and
add
test
mov
mov
cmp
sbb
add
int3
cmp
sarl
imul
mov
mov
add
add
xor
add
clc
mov
clc
sbb
pop
lret
clc
push
clc
push
add
movsb
clc
gs
adc
lcall
push
je
clc
mov
repnz
add
dec
inc
clc
mov
clc
xchg
inc
clc
scas
mov
aam
insb
jmp
cmc
push
add
add
stc
out
pop
leave
sub
push
add
syscall
clc
sub
movsl
clc
xchg
sub
clc
std
dec
mov
xor
clc
cwtl
loope
popa
add
sti
repz
xchg
ja
js
clc
lods
mov
icebp
xor
add
xchg
or
add
add
clc
sub
fisubrs
ret
clc
cwtl
pop
add
jae
add
push
xor
add
mov
mov
scas
out
inc
clc
jo
add
clc
negl
add
cmp
inc
add
popf
jle
sub
sahf
mov
add
insl
das
jbe
clc
push
cmp
or
pop
push
add
int3
aas
cltd
or
push
repz
or
xor
add
sub
clc
cmp
clc
movsl
clc
sub
in
stos
in
sar
and
addr16
mov
clc
cmp
add
ljmp
clc
rorb
test
clc
in
cmp
cmp
clc
or
jne
popa
add
cmp
cli
cmpsb
clc
add
jae
add
clc
push
bound
add
jmp
add
nop
adc
add
adc
add
out
fmull
push
mov
push
add
cmp
add
loopne
inc
clc
xchg
repz
testl
lret
cltd
scas
aaa
add
add
cli
lea
arpl
add
cmp
or
aam
xor
add
add
stc
jo
add
clc
jbe
lret
cmp
add
jnp
or
add
mov
mov
clc
fdivrl
xchg
gs
pushf
mov
pop
popf
mov
addr16
jbe
add
clc
repnz
and
add
lods
sbb
mov
cmp
mov
sub
clc
mov
clc
jge
mull
mov
imul
add
sahf
pop
aam
pop
cmp
adc
add
push
dec
bound
add
add
add
add
xchg
cmp
add
xor
add
add
add
int3
xabort
addr16
cmp
add
out
icebp
pop
clc
xchg
cs
xlat
jmp
add
xor
add
or
add
pusha
add
mov
xchg
cmp
xchg
or
data16
in
sar
add
xor
clc
sbb
jb
add
push
add
insb
mov
inc
clc
out
cmp
cs
add
test
data16
inc
clc
mov
dec
cmp
popf
sub
outsl
adc
add
fiaddl
cmpsl
clc
sbb
call
clc
jo
add
clc
adc
add
sbb
add
add
and
mov
mov
aas
adc
inc
add
addr16
push
mov
fcompp
or
in
jnp
jb
add
pop
inc
add
fmull
pusha
add
cmp
cmp
add
mov
add
dec
in
mov
cld
and
add
add
add
pop
sar
scas
pushf
push
add
add
clc
lods
jge
lods
and
add
clc
repnz
jle
xchg
outsb
xchg
sub
jmp
pop
test
clc
and
add
lahf
push
clc
loopne
sub
push
int
jo
add
add
adc
add
nop
inc
clc
insl
sahf
lret
xchg
hlt
jl
push
add
push
pop
xor
add
adc
add
bound
add
sbb
aad
loop
test
test
cmp
clc
test
cmp
mov
ja
sbb
add
popf
jb
add
add
sti
pushf
xchg
push
xor
add
loope
cmp
add
dec
mov
add
rolb
clc
add
add
or
or
clc
fistl
add
or
sahf
pop
cmp
pop
mov
add
clc
xchg
fisttpl
out
icebp
jecxz
xchg
gs
sar
add
aam
dec
aaa
loopne
fldt
inc
clc
bound
add
out
out
sub
clc
cld
and
add
out
jl
pop
push
xchg
mov
add
out
sub
cmp
adc
aaa
cmp
cld
cwtl
scas
sub
add
add
insb
push
clc
data16
jno
add
clc
xor
add
and
add
add
fwait
enter
add
and
add
or
clc
jno
add
leave
adc
add
ret
repnz
int3
cwtl
rolb
mov
add
lods
test
pop
mov
inc
add
push
pusha
add
mov
clc
iret
fcmovb
clc
push
sub
add
jne
mov
clc
sub
clc
xchg
push
add
pusha
add
sbb
add
cmp
add
jns
cltd
aaa
cmp
add
std
sbb
push
out
xchg
push
hlt
rol
clc
adc
add
leave
push
cmp
clc
roll
clc
inc
clc
jnp
adc
add
clc
lea
add
xor
add
out
mov
jg
add
clc
gs
icebp
je
jnp
das
push
add
xor
add
vrsqrtps
add
lods
push
add
add
add
clc
cmp
add
insb
lods
rcr
iret
jg
clc
cmc
pop
es
cmp
clc
dec
mov
mov
xchg
mov
fldl
add
lahf
hlt
loopne
out
test
xchg
sub
stos
in
cmp
and
das
xchg
cmp
cwtl
jl
jmp
xor
shrl
es
jecxz
in
int3
sub
not
dec
jb
add
pop
clc
cmp
add
aas
loop
add
add
mov
add
out
mov
add
clc
js
jae
add
clc
gs
sti
xbegin
pop
clc
push
add
sub
add
mov
clc
xchg
sbb
ss
pop
cmp
outsl
fildll
cmp
add
cmp
add
sahf
leave
push
add
mov
xor
add
clc
stos
mov
sub
add
fcmovne
cmp
add
imul
pusha
add
aaa
xor
cmp
in
enter
into
fwait
es
fwait
sub
push
add
imul
lock
push
cwtl
sub
ljmp
fidivl
clc
mov
mov
pop
mov
aam
and
jle
add
cmp
sbb
and
add
ja
aas
pop
clc
out
es
inc
clc
mov
add
mov
insl
and
add
pop
or
ds
add
sbb
inc
clc
sub
mov
lock
add
inc
clc
xabort
adc
add
clc
repz
sub
sbb
sti
hlt
mov
lret
pop
shll
add
push
clc
push
pop
jae
add
sub
ret
clc
sahf
adc
clc
xchg
adc
add
add
push
clc
add
movsl
clc
mov
push
js
and
add
clc
cmpsb
clc
jmp
clc
popf
xchg
mov
jb
add
add
pop
or
sub
ret
adc
add
jle
decl
add
add
sub
lret
enter
and
add
fmull
flds
add
sbb
mov
scas
lahf
mov
movsl
clc
mov
add
cmp
sub
pop
sti
flds
add
add
cmp
xchg
adc
mov
xor
add
in
cld
mov
add
add
add
daa
clc
pop
gs
cmp
cli
xbegin
add
inc
add
push
lods
pop
jmp
sahf
je
js
adc
add
pop
push
clc
xor
jno
add
and
add
fildll
xor
add
add
cmp
jb
add
in
clc
out
cwtl
movsl
clc
test
add
je
clc
adc
add
add
and
add
dec
faddl
add
add
add
clc
sub
inc
add
cmp
mov
jnp
add
mov
push
arpl
add
out
iret
sbb
xor
add
fcmovbe
mov
pop
cmp
clc
xchg
sub
or
add
pushf
sbb
nop
cli
gs
add
add
clc
shll
add
add
sub
sbb
clc
popa
add
mov
push
add
pop
dec
data16
loope
cmp
pop
jo
add
xor
clc
pop
xor
and
add
add
push
fsincos
sub
clc
mov
add
in
cmc
mov
xchg
ss
add
add
lcall
mov
or
clc
lods
shrb
cli
cmpsl
clc
or
inc
add
int
add
jecxz
push
add
xlat
mov
mov
push
int3
jecxz
jle
jmp
add
cli
and
add
test
mov
stc
aas
cli
aam
aad
dec
push
clc
inc
add
addr16
or
loop
bound
add
fldt
and
add
add
add
add
cmc
dec
in
mov
jbe
sbb
movsb
clc
ret
add
bound
add
lcall
or
add
aaa
cmp
clc
leave
loopne
dec
adc
pop
xchg
xor
add
pop
mov
or
mov
lods
cmp
push
add
cmp
mov
mov
clc
inc
add
ret
mov
pop
sub
add
movsl
clc
stc
dec
and
add
or
pushf
mov
add
add
into
clc
push
add
add
xchg
mov
add
movsl
clc
sbb
clc
leave
rcrl
pop
clc
out
lods
ret
clc
nop
movsl
clc
jp
aam
add
inc
clc
je
mov
push
push
add
sahf
in
fs
lock
cs
lods
in
and
add
clc
or
clc
xor
add
xabort
sahf
cwtl
and
add
push
add
xchg
xchg
jno
add
mov
clc
gs
ja
jl
add
js
add
sbb
inc
add
cmp
add
xor
add
clc
adc
add
cmp
clc
mov
jne
sbb
jne
clc
test
clc
jno
add
add
and
mov
dec
jb
add
mov
add
lahf
lods
frndint
stos
jne
pop
sar
clc
add
add
clc
mov
clc
js
ficomps
add
sarb
push
add
xchg
jg
clc
xchg
inc
clc
pop
clc
push
cmpsl
clc
adc
add
clc
bound
add
push
adc
add
clc
xor
add
xchg
xchg
sbb
pop
mov
add
mov
movsl
clc
repz
in
sti
jne
xchg
out
in
arpl
add
sbb
lcall
clc
pop
pusha
add
dec
xbegin
add
sbb
mov
clc
call
cmc
enter
clc
jl
xchg
insl
pop
clc
xbegin
clc
addr16
mov
clc
shll
add
repnz
clc
fbld
aam
lock
add
sbb
add
mov
arpl
add
jmp
clc
mov
enter
sub
lods
mov
das
mov
or
mov
call
outsb
and
add
clc
or
adc
and
enter
clc
cmp
add
mov
add
xchg
xchg
popl
clc
rol
clc
jno
add
movsl
clc
xchg
pop
clc
cmp
sub
shrl
clc
mov
mov
and
in
loope
push
int3
mov
jno
add
add
or
xor
add
cmp
or
test
mov
cwtl
add
add
mov
shlb
sar
clc
lcall
and
add
lahf
xchg
cs
pop
stos
fcomps
ljmp
clc
and
xchg
mov
repnz
clc
ret
xabort
push
add
js
push
clc
push
dec
xchg
scas
not
mov
xchg
push
add
push
repz
clc
add
add
xchg
stos
push
mov
add
clc
sub
jnp
clc
icebp
mov
sub
test
in
dec
scas
lea
jne
inc
clc
and
add
jns
jns
clc
pop
cmp
leave
inc
add
fidivs
add
xchg
imul
add
mov
push
or
cmp
add
jmp
push
add
sub
clc
mov
or
aaa
mov
add
and
divb
xchg
pop
int3
pop
clc
sti
test
sar
add
mov
clc
push
add
ss
fs
jbe
xor
add
mov
clc
cmpsb
clc
repz
add
cmovl
cld
cmpsb
clc
gs
inc
clc
mov
add
ja
clc
push
jno
add
movsl
clc
mov
add
add
xor
add
add
add
cmp
cltd
cmp
clc
data16
dec
and
add
dec
pop
xor
add
clc
mov
add
aam
clc
add
jbe
clc
repnz
xchg
adc
add
xchg
xchg
or
clc
mov
scas
nop
push
add
gs
repnz
das
adc
add
add
clc
cmp
cltd
stc
cmp
das
shl
clc
int3
cmp
jb
add
clc
cmpsl
clc
rcrl
int3
icebp
cmp
clc
adc
add
add
fnsave
push
add
enter
enter
lcall
pop
add
add
leave
mov
push
sti
fbld
add
mov
clc
fisubrl
add
mov
arpl
add
mov
pop
clc
xchg
mov
jge
add
push
clc
scas
and
sub
cmp
leave
or
add
scas
add
add
and
add
push
clc
movsb
clc
mov
ss
sarl
mov
imul
inc
clc
cmpsb
clc
cmp
cmp
aas
jge
cmp
xor
add
inc
add
cmpsb
clc
jb
add
dec
adc
add
mov
add
loop
mov
clc
sub
clc
je
popa
add
out
imul
add
cs
xlat
sar
clc
dec
out
push
add
sbb
mov
xor
neg
mov
add
pushl
cmp
negl
clc
fnstenv
push
loop
inc
add
ret
mov
stc
lcall
shrl
add
sub
jns
mov
xchg
ror
into
scas
clc
loopne
jle
shl
mov
add
clc
sub
clc
fbstp
clc
xchg
jae
add
pusha
add
repnz
xbegin
cli
insb
insb
ret
mov
iret
int
xbegin
clc
outsb
mov
add
mov
out
out
pop
xchg
fbld
add
sbb
loop
lret
adc
add
push
add
lret
pop
fstpl
int3
fwait
into
pop
add
add
clc
lret
xor
add
add
mov
mov
nop
ljmp
add
add
sar
mov
fst
xlat
jg
adc
add
mov
loop
or
cmpsb
clc
jae
add
mov
cltd
test
jmp
jns
clc
ja
repnz
mov
add
mov
stos
ret
shl
dec
xor
add
add
or
arpl
add
in
scas
sbb
insb
sti
loop
sar
clc
in
scas
jnp
inc
clc
fmuls
jg
fstpt
cmp
jl
lret
mov
add
add
repnz
add
mov
sar
jp
pop
in
lods
ret
clc
and
add
add
clc
je
add
dec
add
add
clc
aam
leave
sbb
clc
xor
clc
mov
add
addr16
sbb
clc
adc
xor
add
xchg
test
pop
iret
sub
call
clc
push
add
test
mov
push
gs
mov
bound
add
add
addr16
mov
adc
clc
aaa
lahf
loop
lret
cwtl
sbb
cmpsb
clc
pushf
and
add
clc
movsl
clc
out
jo
add
cmp
lock
add
or
clc
sbb
dec
rol
clc
mov
xor
add
movsb
clc
lret
xchg
inc
add
xchg
mov
add
or
mov
push
and
add
cld
mov
clc
cs
xchg
ja
loopne
repnz
jnp
clc
pop
push
popf
xor
add
inc
clc
test
out
mov
cmp
add
mov
lea
add
stc
mov
add
clc
mov
int
rcll
dec
mov
pop
popa
add
ret
into
sbb
pop
js
aam
cld
bound
add
cmp
add
xor
adc
out
pop
clc
add
add
aam
imul
ljmp
sub
sarb
aad
cmp
inc
add
je
add
int
stos
repz
inc
add
adc
add
add
dec
lods
xchg
pop
rol
clc
mov
ret
clc
fdivrs
clc
shll
push
xchg
popf
xchg
clc
movsb
clc
ds
clc
jg
add
in
inc
add
clc
push
into
test
cltd
mov
mov
add
mov
lcall
clc
or
add
popf
cwtl
push
add
das
stos
mov
stos
mov
clc
std
in
movsl
clc
ds
jl
fildll
sub
test
clc
lret
xor
call
cmp
adc
add
iret
push
clc
pop
and
add
add
data16
rcrb
mov
mov
pop
sahf
xor
add
int
clc
jne
clc
fwait
mov
mov
cmpsb
clc
jp
add
mov
imul
mov
enter
mov
cmpsl
clc
mov
in
jg
add
jne
add
divb
push
add
out
inc
add
xchg
daa
clc
call
test
test
xchg
cmpsb
clc
xchg
mov
sbb
cwtl
adc
add
clc
sbb
push
add
sub
movsl
clc
push
in
cmp
add
jmp
sbb
clc
clc
std
xor
add
inc
add
es
lahf
inc
clc
mov
fadds
add
push
add
inc
clc
pmulhw
addr16
cmp
add
add
clc
push
push
lea
mov
dec
add
add
jl
stc
es
dec
cmp
clc
xchg
fists
ret
clc
xor
add
mov
roll
clc
or
and
add
add
cmp
je
clc
mov
add
icebp
jns
rorl
sbb
pop
or
sar
pop
sub
push
xchg
mov
add
mov
add
aad
std
in
and
add
jne
fdivrs
cmc
jb
add
clc
push
add
mov
cmc
pushf
cmpsl
clc
mov
clc
jnp
mov
xor
add
clc
add
dec
js
rcl
pop
clc
icebp
daa
clc
std
cmpsl
clc
fisubrs
xchg
cs
lret
shll
add
mov
insl
ss
mov
test
aad
cmp
test
push
dec
ret
clc
pop
inc
clc
fnstenv
mov
add
leave
dec
sub
inc
add
outsl
rolb
aaa
push
cmp
mov
jge
clc
cwtl
rolb
add
fadds
add
clc
xchg
clc
jo
add
clc
dec
insb
cmp
clc
iret
addr16
ss
clc
dec
arpl
add
clc
inc
add
negl
add
test
push
ds
in
fidivrl
sti
sar
clc
inc
add
in
inc
clc
and
push
add
dec
ja
repnz
add
cmp
inc
clc
in
rclb
add
push
clc
and
add
xlat
outsb
push
imul
add
add
add
stc
mov
dec
pop
adc
add
add
and
add
push
clc
imul
flds
add
add
mov
xchg
and
add
test
add
add
xchg
repnz
add
xlat
sub
das
repz
daa
clc
xabort
or
arpl
add
clc
inc
clc
lock
clc
mov
xor
add
test
add
xchg
out
je
ror
cwtl
lret
add
fisubs
jge
xor
add
outsl
jne
cmpsl
clc
and
add
inc
add
gs
xchg
sarl
adc
add
in
mov
mov
jle
add
sarb
int
cmp
insl
cli
in
out
cmc
in
or
cmp
clc
xchg
stc
sbb
add
jae
add
in
fwait
rol
clc
or
faddl
add
mov
add
jge
fs
dec
out
mov
push
clc
mov
add
add
mov
sahf
and
add
xchg
notb
clc
mov
push
mov
push
xchg
mov
pop
xor
add
add
xor
arpl
add
mov
enter
sub
add
lods
cmp
add
in
inc
add
xor
int3
push
add
or
clc
lret
push
clc
lea
inc
clc
dec
add
add
je
clc
adc
add
lret
add
clc
fimuls
xor
add
clc
lret
push
jno
add
mov
add
add
inc
clc
cmc
scas
sbb
push
mov
add
insb
jle
clc
push
add
and
add
add
adc
add
data16
xchg
test
dec
jle
add
roll
add
adc
add
repz
push
loopne
sbb
pop
adc
add
add
add
clc
xchg
insb
mov
sbb
push
scas
or
pusha
add
jp
clc
mov
shlb
sub
cmp
fs
sar
cmp
repnz
add
inc
clc
clc
mov
xchg
sti
cmpsb
clc
and
push
add
xchg
cmp
xchg
jge
out
add
add
clc
xchg
mov
clc
aas
shll
add
add
test
ss
mov
cld
adc
clc
sti
aam
add
clc
pop
clc
xor
add
push
add
fnstsw
fucom
clc
test
cmc
sub
cmp
outsb
push
xor
add
lods
sbb
and
pop
and
add
sub
adc
add
inc
add
aad
add
call
dec
inc
clc
and
push
std
push
sar
sub
and
add
push
gs
push
sar
mov
clc
push
add
test
xlat
in
mov
int
clc
filds
add
add
jbe
pop
xor
add
cld
ffree
clc
push
stos
push
add
clc
jo
add
mov
inc
clc
test
push
clc
mov
pop
cmp
cmp
fsubp
clc
pop
cld
and
add
mov
ja
add
ja
rorb
movsl
clc
cmpsb
clc
xor
add
pop
jl
leave
xor
add
dec
jg
push
ja
add
add
add
inc
clc
test
and
vcomiss
adc
add
dec
cli
xchg
in
sbb
mov
cmp
clc
push
add
mov
inc
clc
xor
add
mov
mov
clc
cmp
and
clc
and
add
add
mov
mov
btr
cmp
clc
sar
aas
dec
call
clc
fisubl
stc
test
cmp
add
clc
xabort
daa
clc
xor
add
clc
ja
clc
and
add
cmp
icebp
imul
scas
mov
lea
lcall
add
pop
shll
add
popa
add
fs
cs
mov
fnstenv
add
add
add
adc
add
pop
sub
jno
add
enter
clc
cmp
enter
add
cmp
or
clc
add
mov
push
nop
or
mov
das
xor
add
and
add
lods
mov
add
jle
fldl
mov
ds
or
cmp
push
dec
inc
clc
int3
mov
dec
sbb
clc
adc
add
and
add
add
mov
add
out
add
add
std
arpl
add
out
jg
mov
cmp
add
and
in
insl
aam
sar
clc
cmp
data16
mov
clc
lods
mov
lahf
xor
jle
rorl
add
sbb
ljmp
shll
or
push
push
cmp
clc
pushf
jb
add
clc
and
add
add
add
clc
add
add
add
mov
add
dec
xor
add
out
or
movsb
clc
mov
test
dec
jae
add
loopne
xor
add
mov
sub
clc
or
add
push
cmpsb
clc
test
add
push
mov
clc
or
scas
xor
add
clc
mov
stc
inc
clc
daa
clc
pop
jmp
cmp
sti
jo
add
iret
cmp
push
add
add
scas
icebp
adc
pop
clc
js
popa
add
dec
clc
or
cmc
inc
clc
pop
mov
clc
dec
fnsave
int
mov
add
fwait
push
add
in
add
cmp
pop
clc
mov
jecxz
cmc
lret
icebp
testl
inc
add
mov
jle
pop
mov
add
and
add
imul
cmpsb
clc
clc
push
add
dec
testl
mov
clc
sub
stos
add
add
mov
clc
adc
add
cwtl
sub
fs
jns
in
mov
add
xor
add
clc
testb
push
adc
add
pop
mov
clc
mov
dec
mov
push
mov
stos
rcrl
sbb
clc
xchg
dec
movsb
clc
divl
jge
and
add
mov
add
aaa
jne
test
cmp
aaa
sar
cmp
cmp
cmp
pop
out
je
test
clc
std
xor
mov
push
repnz
sbb
xor
add
cmp
clc
sbb
sbb
or
clc
and
add
add
pop
push
add
mov
fisubrl
imul
clc
xor
add
fisubs
iret
pop
das
cmc
aaa
xor
lret
adc
ficoml
add
sar
clc
mov
jns
bound
add
push
mov
mov
xchg
fsubrs
add
add
dec
clc
shll
in
pushf
data16
movsl
clc
ret
clc
jp
imul
add
jge
push
in
cwtl
jno
add
push
mov
clc
dec
aaa
dec
loope
jnp
push
push
sbb
add
jmp
add
and
add
add
add
cli
or
scas
sbb
clc
mov
xchg
mov
icebp
pop
gs
neg
shlb
bound
add
clc
mov
dec
sar
mov
inc
add
cmp
adc
add
add
stos
js
jnp
and
add
clc
imul
mov
outsb
push
add
imul
sbb
cltd
cmp
mov
add
add
sbb
xbegin
push
cmp
add
pusha
add
cmp
or
mov
ss
gs
xor
add
lods
sbb
adc
add
adc
aad
sbb
adc
into
out
ljmp
clc
test
clc
cli
inc
add
aaa
loopne
dec
movsl
clc
mov
clc
mov
clc
lret
adc
add
add
add
into
jl
or
loopne
cmp
in
roll
dec
xchg
push
jnp
clc
and
add
clc
cmp
add
mov
mov
lods
inc
add
leave
xchg
inc
clc
mov
adc
add
xabort
cld
mov
adc
add
add
push
add
or
fcoml
add
adc
add
daa
clc
xor
sbb
clc
jl
das
lea
dec
sub
add
xchg
cmp
add
mov
jbe
clc
test
das
hlt
inc
clc
popa
add
lret
push
xabort
iret
fsin
cmp
cmp
testl
sbb
clc
js
scas
sub
imul
pop
inc
add
push
mov
clc
repz
clc
insb
push
rorl
clc
clc
adc
add
in
mov
push
push
rcrb
adc
std
xor
add
sbb
add
mov
add
addr16
cmp
clc
push
adc
add
clc
mov
fwait
cli
mov
pop
cmp
clc
sub
clc
mov
clc
pop
clc
adc
add
push
sbb
stos
ss
adc
add
cmc
and
add
add
clc
loop
negb
sub
add
adc
add
cmpsb
clc
popa
add
sub
clc
inc
clc
out
lret
add
add
add
clc
sahf
mov
add
push
add
ja
push
add
xor
add
sar
jle
gs
and
add
sbb
cli
cmpsl
clc
lods
mov
or
clc
fstpt
std
cmp
lcall
ss
add
dec
mov
fs
dec
pop
fcmovbe
clc
shlb
push
mov
sub
test
aad
out
add
ja
clc
mov
clc
push
add
add
add
pop
in
jb
add
add
imul
jmp
inc
add
cmp
and
add
push
out
jbe
addr16
push
clc
and
sahf
sahf
sar
add
pop
jl
push
add
xor
add
mov
add
xchg
and
clc
imul
add
xlat
mov
push
fidivrs
lods
scas
mov
clc
push
cmp
xchg
cld
mov
clc
dec
es
adc
clc
repnz
push
clc
aad
or
clc
leave
or
push
push
cltd
in
xchg
ret
clc
pop
pusha
add
and
cltd
lret
paddw
xor
add
mov
add
repz
jge
js
inc
add
mov
clc
jle
aam
ja
add
enter
imul
cmp
add
push
fwait
test
sar
hlt
mov
mov
clc
xchg
cmp
add
add
and
add
mov
dec
js
lcall
clc
test
push
add
sbb
aas
popf
cmp
add
in
jle
clc
nop
or
jb
add
add
sub
testb
jmp
or
xor
add
clc
scas
jl
and
push
add
cmp
rclb
clc
gs
xchg
clc
sub
in
dec
fdivs
mov
mov
add
es
cmpsb
clc
mov
out
push
enter
add
add
mov
add
pop
clc
arpl
add
add
xchg
scas
and
cli
mov
adc
add
clc
lods
xchg
add
add
add
push
sbb
cmp
jl
inc
clc
inc
clc
cmpsb
clc
enter
mov
add
add
add
add
add
mov
rolb
aaa
cs
fbld
dec
lret
std
jnp
add
cmp
pop
imul
add
mov
neg
xor
add
xchg
scas
xchg
repz
test
js
je
mov
jg
pop
cli
int
clc
negb
xchg
scas
jno
add
clc
loopne
xchg
jecxz
push
add
jg
push
add
mov
nop
fildll
inc
add
cmp
cld
fisttpll
clc
xor
leave
movsb
clc
and
inc
clc
mov
add
cmpxchg
jmp
xor
add
jnp
adc
add
sbb
add
cmpsb
clc
jb
add
clc
pushf
xchg
sbb
imul
sub
sub
jbe
loop
lea
mov
lret
fsubrs
lock
add
adc
add
cld
mov
xchg
dec
out
aad
or
or
clc
inc
add
mov
jl
nop
xchg
mov
add
add
push
add
or
lods
cwtl
movsl
clc
stos
ja
jmp
lret
push
lods
inc
add
sub
mov
add
xor
add
xchg
sub
bsr
or
mov
clc
fstl
repnz
mov
out
sub
inc
add
mov
movaps
scas
jns
aad
nop
pop
adc
add
call
mov
mov
adc
add
add
mov
add
add
mov
loope
mov
mov
jnp
xor
clc
pop
xor
add
add
movsb
clc
jp
add
dec
xchg
daa
clc
xchg
sub
mov
cmpsb
clc
and
add
clc
scas
cmp
push
clc
mov
clc
lret
pop
loop
clc
adc
add
dec
addr16
add
add
clc
ja
sub
clc
mov
add
call
es
or
clc
mov
add
sub
fiadds
clc
push
test
lea
clc
mov
sahf
out
xor
add
sbb
add
xchg
fistpll
add
inc
add
jae
add
clc
mov
dec
jl
es
jnp
clc
or
mov
clc
push
add
popa
add
in
dec
int
gs
xchg
std
push
je
clc
cmp
rcr
addr16
nop
jae
add
add
pop
mov
lea
xchg
mov
add
data16
dec
pop
mov
clc
mov
and
xchg
jb
add
add
cmp
clc
test
js
add
lcall
add
stc
inc
clc
jl
add
jg
mov
test
push
mov
aam
cmp
add
mov
arpl
add
and
add
cli
bound
add
add
js
xchg
xchg
scas
je
clc
xor
xchg
imul
clc
xor
cmp
add
mov
push
lret
clc
test
adc
cmp
pop
clc
mov
clc
out
das
ret
clc
lcall
rolb
insb
jg
test
js
fists
lea
clc
sub
push
add
fwait
sar
loop
push
shlb
arpl
add
sub
add
adc
clc
dec
xor
clc
cmc
daa
clc
xchg
jae
add
inc
add
mov
inc
clc
into
nop
mov
cmp
clc
lock
xchg
fsubrs
mov
add
pop
outsl
fimuls
add
and
add
fwait
ret
clc
pop
sarb
icebp
lret
add
clc
cltd
pop
push
dec
scas
outsl
pop
clc
vmovhps
add
clc
leave
xchg
xor
inc
clc
mov
enter
or
adc
add
clc
mov
pusha
add
pop
mov
sar
gs
xor
add
test
inc
add
add
cs
bound
add
clc
dec
arpl
add
lods
gs
jle
clc
mov
mul
clc
sub
jbe
stc
jnp
clc
outsb
pop
stc
sbb
loopne
inc
clc
jns
popf
outsl
das
rclb
icebp
dec
pusha
add
roll
add
arpl
add
add
clc
test
add
mov
aas
sub
pop
icebp
mov
xor
add
pop
ret
clc
mov
cmp
arpl
add
fimull
pop
call
pop
flds
add
daa
clc
xor
add
push
pop
or
push
jg
and
add
decl
sub
clc
push
add
das
sbb
mov
and
add
addr16
jg
cmp
clc
nop
add
add
clc
inc
add
pop
pop
or
add
clc
rol
clc
iret
lret
add
push
jo
add
fimuls
sub
jle
push
or
xor
add
push
in
dec
cli
insl
dec
in
inc
add
jbe
mov
clc
int
sub
clc
lret
scas
jge
cmc
movsb
clc
scas
ret
clc
mov
data16
jp
mov
add
repnz
cmpsl
clc
push
jnp
pop
aad
out
xchg
adc
add
mov
clc
gs
scas
xor
add
clc
fwait
push
cmp
add
xchg
mov
jg
add
ret
or
aas
data16
iret
dec
cld
push
add
xlat
mov
add
popa
add
cmp
push
add
sti
cmp
add
cwtl
test
push
mov
popf
add
add
or
fsubr
or
lret
cmp
add
dec
add
add
mov
in
sbb
ret
clc
cmp
out
je
clc
and
add
test
jo
add
pop
stc
cmp
and
cmp
push
adc
add
loope
das
xchg
movsl
clc
stc
cmp
jge
jge
loope
xchg
icebp
push
out
out
js
clc
push
fsub
clc
das
jno
add
int
or
clc
and
add
iret
stc
cmp
add
out
aaa
push
das
push
add
dec
cmp
mov
fbstp
add
scas
test
stos
pop
cmp
clc
insb
or
add
sub
test
repnz
and
add
add
add
add
add
clc
mov
push
outsb
mov
xchg
aaa
insl
clc
clc
or
sbb
mov
mov
sti
sbb
int
add
add
add
xbegin
add
outsb
out
and
add
add
dec
imul
clc
mov
jae
add
ficompl
add
cmp
clc
jne
add
in
dec
xchg
jl
clc
lcall
xchg
mov
or
push
pop
arpl
add
dec
and
add
std
mov
xor
add
add
dec
sub
mov
add
movq
adc
add
into
jle
and
add
pop
lock
mov
cs
add
mov
dec
sub
mov
clc
outsl
push
or
sub
icebp
addr16
pusha
add
add
fisttpll
in
pusha
add
imul
lret
or
push
push
add
adc
add
and
add
imul
lret
add
into
and
xabort
test
lret
xchg
inc
clc
add
add
clc
insb
mov
add
loope
dec
mov
dec
das
rclb
add
lcall
das
daa
clc
popa
add
sbb
clc
add
cwtl
mov
add
sub
sub
dec
mov
jne
aam
clc
ss
xchg
std
xor
add
and
add
inc
add
int
inc
add
and
add
add
add
clc
and
add
ret
clc
mov
clc
mov
pop
xchg
loopne
push
xbegin
add
cltd
mov
add
out
mov
in
out
jmp
mov
or
jge
add
mov
pusha
add
jl
inc
clc
sub
jl
add
adc
iret
mov
inc
clc
xlat
add
clc
push
clc
jle
push
lret
jecxz
vmovhps
insb
shlb
clc
mov
hlt
insl
jp
jae
add
ss
fisubs
int
int
imul
add
mov
nop
and
add
shrb
std
and
mov
add
sahf
stc
and
add
dec
add
add
mov
mov
adc
add
clc
pop
leave
xchg
icebp
stc
pop
hlt
push
clc
fidivs
add
cs
clc
push
sar
clc
mov
clc
xchg
inc
add
sar
dec
inc
clc
xchg
jp
add
cmp
call
ss
movd
pusha
add
pop
loop
xchg
mov
sub
test
in
xchg
lcall
push
lret
jmp
mov
clc
and
cmp
clc
mov
mov
and
add
mov
add
add
lahf
aam
cmp
clc
negl
aam
clc
sahf
int3
mov
add
mov
clc
pushf
adc
add
xchg
dec
fsubs
lahf
sub
adc
add
clc
mov
pop
outsl
clc
pop
clc
fsts
fdivr
imul
add
add
adc
add
pminub
adc
add
push
clc
xbegin
pop
cmp
add
xbegin
clc
mov
clc
cltd
mov
in
xchg
aaa
clc
jo
add
clc
xchg
movsl
clc
iret
dec
adc
out
or
ret
clc
or
jecxz
aas
mov
in
repz
out
mov
add
icebp
stos
cmp
clc
mov
xor
add
add
aas
xor
add
je
clc
out
sub
push
mov
lods
jmp
fs
push
je
cs
clc
inc
add
ret
inc
add
xchg
mov
pushf
pop
mov
add
call
xchg
aad
scas
pop
bound
add
add
je
clc
cmp
cwtl
fs
inc
add
repz
add
add
add
clc
fstpt
icebp
mov
pop
mov
add
xor
cmp
add
enter
out
or
clc
scas
fldcw
cs
hlt
aam
clc
push
clc
insb
add
add
clc
inc
clc
mov
mov
movsl
clc
and
aas
gs
call
add
outsl
push
pop
push
add
rcl
push
clc
jmp
xchg
ja
mov
mov
add
jge
add
sbb
clc
jnp
mov
loop
bound
add
aad
pop
sub
clc
sub
add
push
clc
xchg
or
sar
add
xchg
inc
clc
leave
enter
or
je
add
dec
data16
jle
and
add
sub
fwait
or
cmp
cwtl
daa
clc
xchg
xchg
mov
clc
mov
or
clc
or
sbb
mov
clc
data16
lock
inc
clc
stc
xchg
clc
cmp
xor
clc
ljmp
push
add
jne
inc
add
mov
stc
jns
push
add
jp
or
adc
aam
mov
xchg
jg
add
add
add
add
push
mov
js
popa
add
add
add
popf
push
push
pusha
add
xchg
dec
ret
sar
cs
mov
cmp
clc
fnstenv
push
and
add
add
sub
xchg
inc
clc
cwtl
cmp
clc
pop
stc
push
ret
fwait
push
sbb
popf
jmp
adc
cmp
cwtl
sub
adc
out
mov
add
sar
jp
test
clc
lret
add
cltd
jg
add
jno
add
jge
add
pop
dec
arpl
add
and
into
fisubrl
test
add
xchg
test
cmpsl
clc
xor
add
add
jle
fstl
add
insb
ret
scas
in
cmpsb
clc
and
add
add
int
mov
add
gs
in
add
fdivs
add
push
clc
push
inc
clc
inc
add
lcall
dec
ret
clc
sub
lcall
clc
xor
add
or
clc
push
add
clc
push
xchg
mov
sub
jle
add
aad
add
dec
xor
add
add
gs
xor
add
add
add
mov
in
pop
or
clc
bound
add
clc
push
add
mov
call
add
push
clc
mov
add
jl
add
cmp
dec
sar
add
add
add
mov
imul
sub
ja
sar
add
xor
add
fcmovnbe
jno
add
clc
push
clc
mov
pop
es
sbb
outsb
arpl
add
push
add
add
bound
add
add
sub
add
cmp
add
add
jbe
mov
ret
mov
cmp
push
clc
cmovp
scas
jne
inc
clc
clc
xchg
inc
clc
fwait
imul
mov
inc
clc
ja
add
iret
xchg
aaa
xor
add
xchg
jne
and
jns
clc
insb
arpl
add
xbegin
testl
test
push
push
clc
jecxz
lret
inc
add
test
sbb
lea
clc
cmpsl
clc
scas
movsb
clc
es
xabort
add
cmp
clc
adc
clc
xor
fsubrl
loopne
xchg
xchg
aam
aaa
call
add
add
lahf
mov
cmp
clc
repz
aaa
mov
mov
mov
add
xchg
test
rcll
dec
cld
lock
sub
clc
dec
loopne
in
mov
clc
xor
add
add
into
and
add
into
inc
add
gs
and
add
clc
cmp
mov
push
icebp
cmp
push
clc
stos
push
add
sar
add
add
clc
push
add
push
add
jecxz
xlat
jne
clc
push
add
xchg
imul
rolb
add
inc
clc
inc
add
idivb
fdivs
xor
clc
test
int
mov
mov
shll
clc
pop
clc
or
adc
add
sbb
test
psubsw
clc
popf
mov
pop
mov
enter
cmp
negl
clc
xor
add
clc
imul
mov
clc
push
mov
clc
test
pop
int
pop
add
ds
cmpsl
clc
mov
jle
ret
clc
sub
movsl
clc
stos
out
xabort
scas
loope
or
add
add
xchg
dec
push
add
scas
mov
add
insb
add
lret
xor
add
add
cmpsb
clc
xor
add
add
pop
outsl
jp
clc
jmp
clc
sub
or
clc
adc
add
add
dec
clc
sbb
cmp
mov
add
add
add
icebp
lahf
mov
sbb
cmc
jp
add
xor
add
add
pusha
add
loopne
lret
mov
add
add
adc
xor
add
mov
jecxz
mov
jge
inc
add
aaa
fwait
sub
push
jno
add
add
lcall
clc
dec
fldl
clc
cmp
jno
add
add
clc
push
xor
add
jge
shrl
mov
mov
clc
cmp
dec
sbb
sar
clc
mov
jp
sub
push
test
aas
addr16
leave
mov
adc
divl
mov
add
add
sbb
call
mov
lods
out
xor
add
stos
test
add
and
add
clc
inc
add
dec
jle
sar
clc
sar
sti
mov
fwait
lcall
hlt
xor
add
inc
clc
ret
clc
mov
clc
ds
mov
ret
clc
test
add
jae
add
push
add
and
neg
fst
idivb
rclb
add
adc
lret
xbegin
icebp
xor
add
xor
add
clc
mov
popf
popa
add
mov
dec
js
mov
and
js
clc
enter
clc
or
icebp
je
clc
mov
add
clc
gs
cmp
mov
in
jae
add
mov
cmp
clc
mov
clc
pop
sti
call
data16
jp
xchg
out
inc
add
sub
inc
add
out
mov
pop
call
lcall
add
test
push
add
push
cmp
jne
lods
cli
sub
loop
out
inc
clc
rcl
std
arpl
add
add
mov
add
clc
je
pop
fwait
jns
add
clc
pusha
add
gs
push
and
add
iret
push
add
jmp
push
add
imul
dec
lods
cmp
lock
fnstenv
cmp
mov
mov
pusha
add
repz
clc
stos
rcll
add
mov
add
add
cmp
stc
stos
pop
into
sar
divl
jecxz
pop
mov
mov
mov
xlat
fdiv
and
add
push
fcompl
sbb
add
movsb
clc
cltd
repz
cld
mov
loope
clc
loop
testb
lods
jo
add
xchg
jae
add
add
mov
add
xchg
cld
xchg
js
lret
push
add
sbb
add
push
mov
mov
add
mov
add
add
sub
clc
xchg
mov
sbb
clc
jmp
rorb
clc
movsl
clc
mov
clc
or
lcall
outsl
data16
inc
clc
adc
add
jno
add
clc
adc
add
add
and
mov
clc
inc
add
cmp
clc
xchg
pop
clc
scas
addr16
jmp
loop
mov
pushf
cs
jb
add
mov
dec
push
faddp
clc
mov
data16
adc
stos
out
call
int3
clc
xchg
repz
test
pop
inc
add
sub
xchg
jbe
clc
pusha
add
cmp
mov
add
mov
clc
data16
outsl
mov
mov
clc
mov
inc
clc
pop
jp
repz
add
or
sbb
clc
addr16
iret
outsb
sub
add
fwait
bound
add
pop
push
add
push
mov
or
cltd
push
add
xor
add
cltd
dec
gs
jb
add
jbe
add
test
pop
into
jmp
push
inc
add
xbegin
inc
add
and
add
mov
mov
clc
mov
add
pop
lods
lods
or
ja
out
sbb
in
inc
add
pop
inc
add
push
bound
add
pop
push
clc
cmp
add
push
add
js
out
icebp
push
cmp
dec
and
add
add
cmpsl
clc
sub
add
mov
mov
clc
xor
add
or
mov
and
add
clc
faddp
clc
cmp
clc
stos
pop
leave
pop
mov
or
out
jo
add
clc
pushf
fisubrl
clc
jne
clc
add
add
jbe
clc
jno
add
add
add
lods
js
adc
add
add
out
xlat
jo
add
clc
xor
xabort
and
add
pop
inc
add
movsb
clc
sub
add
cmpsb
clc
pop
mov
add
mov
push
fsubr
loope
stos
out
nop
push
add
sub
add
inc
clc
dec
icebp
data16
or
mov
pop
jge
push
add
cmp
mov
cmp
add
shr
ds
dec
cmpsb
clc
push
rcrb
inc
clc
js
aam
mov
clc
adc
add
add
add
mov
add
out
lods
cmp
mov
push
jne
clc
jp
repnz
add
clc
sub
cmp
add
adc
add
fstps
push
and
add
arpl
add
dec
icebp
push
fimull
xchg
mov
stos
push
add
xchg
pop
out
mov
add
xchg
and
add
clc
clc
pop
clc
int
add
imul
imul
add
push
cmp
add
adc
stc
ror
dec
jmp
aam
clc
insb
ljmp
hlt
mov
clc
pop
mov
clc
shll
fxch
and
dec
adc
add
addr16
mov
jo
add
push
and
add
das
or
add
sbb
inc
clc
sub
cmp
clc
loope
fsts
xor
add
jbe
clc
lret
pop
inc
clc
idiv
sar
inc
clc
sub
add
sbb
clc
jg
add
add
cltd
rclb
add
sub
inc
add
pop
fsubl
clc
jne
pusha
add
clc
inc
add
in
loop
mov
cmc
jmp
das
and
add
add
mov
clc
sbb
add
cs
es
cmp
add
lret
icebp
push
add
push
add
jbe
clc
out
inc
clc
pop
or
cmpsl
clc
cmp
push
add
adc
or
test
add
add
and
add
imul
out
push
sub
movsb
clc
clc
orps
stc
add
enter
insl
jno
add
mov
bnd
inc
clc
xchg
into
std
mov
clc
addr16
lods
adc
add
jns
pop
popf
mov
cwtl
jmp
add
ds
adc
dec
into
pop
cmp
add
add
mov
in
cmp
shlb
add
daa
clc
or
jno
add
sbb
add
stos
int3
mov
add
add
sti
push
test
scas
out
std
test
je
cmp
lahf
in
lret
clc
shrb
and
add
clc
lahf
adc
add
clc
es
hlt
add
add
scas
aad
sub
add
inc
add
data16
xchg
das
arpl
add
jo
add
clc
imul
add
inc
add
xchg
xchg
je
mov
add
mov
xchg
push
mov
adc
add
sar
mov
add
shll
add
sub
add
or
loope
sub
clc
jnp
clc
sbb
adc
add
cmp
push
fs
sbb
clc
push
add
cld
cmp
arpl
add
jno
add
mov
cmp
adc
add
dec
rcrl
rcl
es
pusha
add
add
rorl
pop
xlat
ret
clc
push
testl
push
add
xlat
scas
loope
jle
clc
decb
pop
xbegin
add
ljmp
inc
clc
cmpsb
clc
adc
clc
aaa
popa
add
cmc
addr16
fs
and
add
dec
pop
pop
add
add
clc
cmp
xor
add
adc
clc
sub
clc
add
add
clc
mov
mov
xchg
sub
mov
adc
add
rorb
jp
aas
cwtl
pop
xor
add
xchg
cli
or
add
into
jecxz
cmc
jle
xbegin
add
push
add
adc
add
add
cmp
stc
icebp
xchg
lods
xor
add
fucomip
movsl
clc
gs
xchg
dec
push
cmp
jne
je
sahf
inc
add
add
adc
add
sar
add
roll
sub
add
push
clc
sbb
scas
gs
stos
leave
repz
clc
in
jg
repz
gs
mov
loope
out
or
add
push
xabort
clc
or
mov
jl
ret
clc
js
iret
mov
inc
clc
cmp
add
aaa
insb
into
fisubrs
push
mov
clc
cltd
jno
add
pop
sbb
clc
jo,pt
add
pop
cmp
add
outsb
jl
clc
mov
fs
inc
clc
xor
into
mov
sbb
add
shll
add
add
dec
cwtl
sbb
push
clc
or
clc
mov
lods
sar
ret
clc
aad
mov
clc
jge
and
add
xchg
enter
pop
outsb
sbb
int3
xchg
push
add
push
add
cwtl
mov
cmp
clc
jno
add
fwait
lods
sbb
shlb
add
clc
sahf
vorps
and
xchg
mov
clc
aaa
cmp
clc
lcall
jb
add
iret
pusha
add
adc
ret
clc
inc
clc
mov
clc
bound
add
arpl
add
pop
lret
iret
cmpsb
clc
mov
and
add
mov
clc
rcl
frndint
jg
clc
xchg
pop
push
sbb
ret
loope
mov
add
cmpsb
clc
das
int
scas
mov
mov
sar
clc
imul
pop
pushf
scas
sarb
jbe
sbb
repnz
cmpsb
clc
flds
push
insb
push
jae
add
jg
addr16
in
loope
pop
cmp
clc
push
shlb
clc
outsl
rol
clc
mov
add
inc
clc
inc
clc
jl
jg
fwait
push
stos
cmpsl
clc
sar
clc
xabort
or
dec
or
inc
clc
popf
or
inc
add
mov
lods
jl
int
pusha
add
mov
add
stos
sub
clc
sub
mov
test
jae
add
add
clc
stc
xchg
adc
push
clc
test
xor
clc
mov
dec
dec
push
add
movsl
clc
inc
add
xor
add
inc
add
xchg
cmpsb
clc
out
ljmp
clc
mov
push
dec
mov
cld
inc
clc
mov
mov
xchg
loop
mov
cmp
xchg
or
push
data16
icebp
jge
or
clc
repnz
sub
cmp
add
negb
clc
test
clc
rcr
stos
inc
clc
dec
pop
and
add
or
ret
clc
cltd
sbb
xabort
sar
clc
mov
clc
lcall
inc
clc
mov
mov
out
jnp
pop
cmp
mov
cmp
clc
sbb
mov
push
gs
pusha
add
xlat
ss
sub
clc
pop
mov
int
clc
ljmp
add
fidivrl
jge
hlt
ja
cwtl
inc
add
push
mov
ret
clc
lods
int
test
mov
mov
add
fsubrl
cmp
je
add
es
inc
add
fistpll
popa
add
inc
add
inc
clc
xchg
inc
clc
and
add
fwait
mov
clc
aam
add
dec
pop
int3
mov
xor
add
jb
add
jns
clc
and
add
add
int3
sub
sbb
sbb
sbb
add
clc
jmp
xor
lods
sar
or
fisubrl
add
dec
out
loopne
js
add
inc
clc
lcall
daa
clc
lcall
add
cltd
inc
add
mov
add
add
repz
clc
jne
scas
dec
repnz
sbb
add
in
out
lcall
jnp
lahf
pop
mov
clc
pop
imul
loopne
pop
fsubr
fiadds
add
xor
add
stos
fwait
enter
clc
ret
clc
xor
add
ljmp
rcr
stos
jge
insb
xor
add
push
add
frstor
cs
ror
in
push
sti
fsts
adc
add
clc
cltd
sbb
sub
clc
fwait
insb
sub
lods
push
jae
add
clc
or
xchg
push
clc
sarl
cld
xchg
out
mov
add
add
push
cmp
clc
rclb
and
add
clc
es
dec
adc
add
sub
xchg
stos
out
mov
stos
loope
dec
sub
clc
cmp
into
mov
ds
clc
push
clc
sar
clc
mov
loope
hlt
push
outsl
adc
add
das
cmp
inc
clc
data16
jne
fwait
mov
icebp
and
push
out
cwtl
push
cwtl
sbb
mov
jge
jle
dec
test
sbb
js
pop
rcr
pop
test
dec
xor
clc
pop
mov
add
out
or
sbb
xchg
lods
sub
dec
fstps
jp
daa
clc
fcomi
xchg
fs
icebp
xor
add
clc
fcmovb
clc
rorb
clc
cmpsb
clc
aas
and
add
clc
mov
loope
mov
add
inc
clc
incl
insb
aas
test
dec
sub
mov
add
clc
in
xor
add
cwtl
jp
and
add
lea
add
cmp
adc
add
sub
insb
insl
sub
rol
clc
sub
adc
in
jge
add
add
clc
cmp
pop
sub
add
mov
jne
clc
ja
push
sbb
adc
add
mov
testb
aaa
leave
sar
add
add
insl
push
fildll
sbb
add
and
add
test
sbb
clc
jo
add
jp
loopne
ds
dec
push
xchg
repnz
pop
inc
add
scas
lret
daa
clc
push
inc
add
mov
add
dec
in
lock
push
mov
clc
sub
add
hlt
pop
clc
call
add
jle
mov
test
test
lret
inc
clc
es
cmp
mov
pop
pop
clc
xchg
pop
mov
cmp
mov
insl
adc
add
cmp
mov
lret
adc
add
clc
cmp
inc
clc
and
add
add
sub
lods
lret
cltd
pop
mov
jb
add
add
jo
add
repz
outsb
pop
popf
ljmp
dec
test
inc
clc
outsl
stos
mov
test
cmp
jl
push
add
sti
jg
adc
add
pop
lock
fsubrl
lahf
out
out
addr16
sbb
jle
insb
out
mov
std
adc
add
jmp
cmp
clc
popf
fcompl
lods
ja
push
dec
je
clc
int3
sbb
stc
repz
insb
sarb
shll
add
xlat
movsl
clc
in
adc
clc
mov
add
outsb
mov
je
add
add
add
mov
dec
call
fstpt
add
dec
cli
mov
outsl
adc
add
xlat
xbegin
push
je
push
add
dec
loope
dec
jge
clc
dec
mov
add
xchg
push
mov
daa
clc
push
xor
add
pop
jg
mov
clc
jl
clc
mov
movsb
clc
loop
jge
clc
cmp
mov
inc
clc
mov
add
add
scas
popf
imul
add
in
ret
pop
xor
add
call
sbb
clc
add
rolb
add
push
clc
loop
sbb
cmpsb
clc
adc
add
dec
xor
add
clc
or
mov
ss
clc
jge
xor
dec
sub
fwait
mov
cmp
out
mov
cmc
pushf
repnz
add
popa
add
mov
clc
nop
pop
lods
in
out
fs
outsb
jl
sub
push
or
xor
add
clc
aam
in
arpl
add
shrl
stc
push
adc
out
and
mov
clc
in
adc
add
add
push
sub
iret
in
xor
clc
lock
test
add
add
lods
mov
adc
add
clc
lods
prefetch
or
add
add
jbe
xchg
adc
add
clc
ret
mov
sub
or
clc
and
dec
lret
pusha
add
or
dec
jns
clc
stos
jnp
cli
sbb
clc
mov
add
or
js
ljmp
push
add
clc
fwait
outsl
test
and
aad
inc
add
jnp
sbb
add
clc
cmp
clc
cli
das
cmpsb
clc
cs
jmp
ds
or
out
mov
fimull
jnp
clc
ret
clc
mov
dec
jmp
ret
ja
pushf
mov
clc
leave
imul
xchg
xchg
fwait
cmp
push
cltd
jle
clc
and
add
clc
jno
add
loop
or
and
add
mov
add
xchg
adc
add
add
imul
jl
add
mov
jne
add
jnp
sbb
add
es
cltd
dec
cmp
clc
fbld
push
add
push
add
fsub
clc
adc
add
aam
clc
movsb
clc
push
add
loop
popa
add
push
clc
xlat
cmp
sbb
cmp
out
add
add
popf
jno
add
ret
clc
shl
clc
in
aas
push
add
mov
sbb
xlat
sti
mov
clc
jmp
xor
loopne
lahf
xor
add
add
mov
clc
fiadds
add
mov
mov
sar
add
pop
adc
add
clc
sahf
push
or
ljmp
scas
jo
add
bound
add
repz
pop
cli
outsb
int3
dec
inc
add
dec
test
inc
add
clc
push
push
sbb
clc
arpl
add
add
add
shll
add
jmp
cmp
pop
stc
repnz
test
clc
mov
push
inc
add
dec
sar
out
mov
clc
daa
clc
in
jmp
clc
out
cmp
clc
or
clc
dec
push
jg
pop
sbb
jl
repnz
adc
add
jbe
stc
xchg
imul
add
or
add
insb
in
movsb
clc
cs
fstpl
clc
or
loopne,pn
mov
icebp
mov
adc
clc
pop
clc
in
fs
lcall
sar
xchg
pusha
add
or
add
pushf
add
add
add
clc
lods
push
clc
enter
add
fs
icebp
outsl
inc
add
mov
sbb
mulb
xor
add
in
mov
mov
sar
sub
add
push
add
addr16
sbb
add
lcall
clc
out
cmp
xchg
outsb
jl
clc
ret
clc
cmp
mov
ja
cmp
clc
sar
pusha
add
adc
add
clc
bound
add
leave
andps
jl
mov
icebp
xlat
push
add
push
adc
add
mov
xchg
adc
add
add
sub
test
mov
fcmovu
lock
jne
cld
pushf
jp
in
cmc
loopne
sar
cmp
and
and
add
add
inc
clc
jge
mov
jbe
pop
mov
sbb
nop
cwtl
mov
pop
xor
add
and
add
clc
pusha
add
xbegin
popl
sub
repz
push
dec
aad
repz
and
outsl
jne
lret
add
add
clc
cwtl
pop
clc
xchg
dec
stos
clc
adc
add
movsl
clc
movsb
clc
mov
inc
add
pushf
dec
aam
pop
cs
add
xchg
fwait
into
decl
pop
push
add
add
add
push
dec
xchg
mov
aam
xchg
pusha
add
fwait
push
mov
clc
fs
push
add
sbb
clc
xor
add
add
sub
push
rcrl
cmp
adc
add
fisttpl
aas
arpl
add
add
rorb
leave
sub
clc
xchg
pop
cmpsb
clc
pop
push
add
mov
inc
add
xor
add
mov
data16
inc
add
cli
mov
cmp
je
xchg
cmp
xchg
add
add
add
cmp
aas
call
arpl
add
add
xor
incl
testl
inc
add
lcall
dec
in
test
cwtl
dec
and
jmp
xor
add
add
fbld
add
cmp
clc
iret
jle
aaa
and
add
cmp
out
push
pop
imul
push
sub
add
add
mov
dec
xor
add
add
pop
inc
add
cmp
jl
mov
cmc
mov
leave
inc
clc
mov
clc
cmpsl
clc
xchg
test
frstor
add
jecxz
dec
mov
clc
inc
clc
xor
add
mov
insl
pop
fdivs
add
clc
inc
add
cmpsl
clc
popa
add
outsl
in
stc
test
gs
mov
cmpsl
clc
in
cltd
stos
inc
add
jns
clc
clc
cmp
clc
out
cwtl
scas
jnp
clc
sub
clc
adc
add
or
push
or
clc
sar
add
cmp
hlt
fs
leave
add
add
clc
out
jmp
fadds
clc
shll
add
ss
clc
movsl
clc
pushf
adc
add
inc
add
and
add
mulb
lret
cmp
icebp
mov
add
in
mov
add
add
stos
in
mov
clc
mov
add
pop
push
add
add
add
add
xchg
ret
clc
cs
clc
int
clc
loopne
jge
pop
scas
xor
and
add
sar
clc
push
add
call
add
add
add
jnp
repnz
adc
clc
jecxz
push
inc
add
xabort
add
push
clc
mov
add
lcall
add
mov
sub
mov
ror
xchg
in
and
loopne
in
cmp
shll
imul
gs
mov
inc
clc
adc
add
inc
add
enter
clc
inc
add
imul
popf
mov
clc
nopl
add
dec
xchg
jg
insl
sub
clc
es
dec
push
clc
mov
loopne
es
xor
addr16
or
or
mov
mov
outsb
clc
aam
xor
add
in
jne
das
lcall
add
mov
cmp
add
cmp
gs
fistpll
xchg
jmp
clc
cmp
add
lcall
lods
mov
stos
sar
test
or
sti
insl
cmp
inc
add
mov
icebp
mov
inc
add
roll
add
jb
add
clc
repz
add
xchg
icebp
push
clc
adc
add
stos
lods
sbb
clc
cmp
mov
lock
ds
ret
clc
outsl
data16
xlat
push
sbb
jg
pop
xchg
js
or
cld
sub
xor
add
pop
cmp
sets
add
add
add
push
addr16
imul
add
add
lea
es
xchg
arpl
add
add
add
filds
add
cwtl
imul
mov
add
or
clc
push
add
push
mov
add
aam
push
mov
add
add
clc
test
push
int
bound
add
not
dec
lock
clc
es
lods
push
cmp
mov
add
pop
pop
pop
clc
pop
adc
pop
cmp
adc
add
add
mov
clc
dec
clc
mov
add
add
imul
inc
add
sti
addr16
mov
push
jmp
es
jmp
inc
add
mov
adc
mov
sbb
icebp
test
mov
jge
mov
test
rcl
or
add
jp
clc
sbb
add
test
ja
push
dec
adc
add
out
xor
add
clc
movsb
clc
in
outsl
xor
add
add
lcall
clc
push
mov
add
xchg
lahf
xchg
data16
ret
loopne
dec
stc
lea
dec
imul
add
add
xchg
in
xor
add
add
inc
add
xchg
sbb
clc
mov
clc
dec
mov
add
mov
daa
clc
cmpsl
clc
mov
jecxz
jl
jnp
fidivrl
add
add
pop
je
add
in
out
push
cmpsb
clc
cmp
dec
nop
dec
fdivrp
sub
add
loopne
imul
fwait
into
gs
mov
adc
add
add
