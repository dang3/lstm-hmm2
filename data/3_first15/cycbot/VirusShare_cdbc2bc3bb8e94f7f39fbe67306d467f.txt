daa
test
mov
cmpsl
loopne
adc
loopne
mov
movsl
loopne
movsb
loopne
cmp
loopne
dec
cmpsb
loopne
stc
mov
loopne
jle
loopne
fldenv
loopne
pop
movsb
loopne
repz
loopne
mov
mov
loopne
push
test
loopne
cmp
loopne
xchg
movsb
loopne
jbe
loopne
push
mov
loopne
pop
cmpsl
loopne
add
loopne
lret
mov
movsl
loopne
into
cmpsb
loopne
xlat
mov
loopne
subb
mov
movsl
loopne
inc
mov
loopne
mov
loopne
scas
test
mov
mov
loopne
stos
movsb
loopne
dec
mov
loopne
js
loopne
xchg
cmpsb
loopne
mov
loopne
je
loopne
mov
loopne
shll
mov
movsb
loopne
test
mov
cmpsb
loopne
dec
test
mov
test
loopne
mov
mov
mov
loopne
daa
test
loopne
pop
cmpsl
loopne
mov
loopne
push
loopne
popa
mov
loopne
lahf
movsl
loopne
and
cmpsb
loopne
push
movsb
loopne
shrl
loopne
sub
loopne
xchg
mov
loopne
outsl
test
mov
movsb
loopne
loop
loopne
shlb
loopne
das
cmpsb
loopne
iret
mov
loopne
mov
loopne
aas
test
mov
movsb
loopne
sbb
mov
cmpsl
loopne
dec
test
mov
movsb
loopne
jp
loopne
jbe
loopne
push
movsb
loopne
sbb
loopne
iret
cmpsb
loopne
add
cmpsb
loopne
and
loopne
js
loopne
andb
mov
mov
loopne
dec
cmpsb
loopne
inc
mov
loopne
cmpsb
loopne
inc
cmpsb
loopne
stos
mov
loopne
fldenv
loopne
jnp
loopne
mov
loopne
test
loopne
cmpsb
loopne
add
loopne
mov
movsb
loopne
cltd
mov
loopne
pop
cmpsl
loopne
and
loopne
fsubs
loopne
mulb
loopne
or
loopne
push
cmpsb
loopne
outsl
movsb
loopne
fsubl
loopne
mov
mov
loopne
dec
cmpsl
loopne
scas
mov
loopne
and
loopne
mov
loopne
stos
cmpsl
loopne
leave
movsl
loopne
dec
cmpsb
loopne
push
test
loopne
mov
test
mov
test
mov
mov
loopne
mov
movsb
loopne
or
loopne
es
mov
mov
loopne
mull
loopne
fbld
loopne
lahf
movsl
loopne
dec
cmpsl
loopne
or
cmpsb
loopne
fsubs
loopne
fisubl
loopne
ljmp
loopne
cltd
cmpsb
loopne
inc
test
mov
mov
loopne
push
mov
loopne
pusha
movsl
loopne
push
mov
loopne
cwtl
cmpsb
loopne
mov
loopne
js
loopne
push
test
mov
test
mov
movsl
loopne
scas
movsl
loopne
andl
mov
movsb
loopne
dec
test
loopne
mov
loopne
mov
loopne
int3
movsb
loopne
mov
movsl
loopne
das
test
loopne
sbb
loopne
lret
mov
mov
loopne
cmp
loopne
mov
movsl
loopne
cmpsb
mov
loopne
shll
mov
test
loopne
lahf
movsb
loopne
subb
mov
test
loopne
out
cmpsl
loopne
test
loopne
ret
mov
cmpsl
loopne
test
loopne
lahf
movsl
loopne
cmpsl
loopne
nop
movsl
loopne
xchg
loopne
mov
loopne
mov
loopne
xor
loopne
das
cmpsb
loopne
pop
test
loopne
out
cmpsb
loopne
loopne
pop
mov
loopne
insl
test
mov
movsl
loopne
or
loopne
test
loopne
lea
loopne
mulb
mov
test
mov
cmpsb
loopne
ja
loopne
andb
mov
test
mov
mov
loopne
das
cmpsl
loopne
test
loopne
in
movsl
loopne
xor
loopne
mov
loopne
mov
mov
movsb
loopne
popa
movsb
loopne
mov
loopne
cmp
loopne
mov
loopne
les
loopne
lea
loopne
dec
movsl
loopne
or
loopne
in
loopne
pop
mov
loopne
mulb
loopne
and
loopne
test
loopne
arpl
loopne
adc
loopne
jecxz
loopne
frstor
loopne
push
test
loopne
inc
test
loopne
mov
loopne
or
loopne
mull
loopne
shll
loopne
in
loopne
mov
mov
loopne
push
cmpsb
loopne
mov
loopne
loopne
in
loopne
movsb
loopne
test
mov
movsl
loopne
mov
loopne
jns
loopne
push
test
loopne
jne
loopne
shlb
loopne
mov
mov
loopne
push
movsl
loopne
test
loopne
and
loopne
sub
movsl
loopne
push
cmpsl
loopne
push
movsb
loopne
jns
loopne
bt
mov
movsl
loopne
sbb
mov
loopne
lret
mov
loopne
cmc
movsl
loopne
mov
cmpsl
loopne
dec
mov
loopne
push
test
loopne
pop
mov
loopne
mov
loopne
andb
mov
mov
loopne
sub
loopne
sti
cmpsb
loopne
and
loopne
xchg
loopne
dec
mov
loopne
scas
mov
loopne
int3
movsb
loopne
inc
mov
loopne
mov
movsb
loopne
inc
mov
loopne
loop
loopne
outsb
movsb
loopne
ret
mov
loopne
loopne
frstor
mov
mov
loopne
cmp
loopne
xchg
loopne
andl
mov
cmpsb
loopne
push
test
mov
test
mov
mov
loopne
adc
mov
test
mov
mov
loopne
inc
mov
loopne
sbb
loopne
push
movsl
loopne
test
mov
mov
loopne
add
loopne
mov
loopne
mov
cmpsb
loopne
pop
mov
loopne
inc
cmpsb
loopne
jp
loopne
push
test
mov
test
mov
movsl
loopne
pop
test
mov
cmpsl
loopne
jae
loopne
outsb
mov
loopne
imul
mov
mov
loopne
push
movsb
loopne
test
loopne
mov
mov
loopne
out
test
mov
test
loopne
imul
loopne
test
loopne
add
loopne
shlb
mov
mov
loopne
out
loopne
arpl
loopne
push
movsl
loopne
cmp
loopne
stc
mov
loopne
xchg
test
mov
movsb
loopne
adc
mov
test
loopne
fwait
movsb
loopne
ret
mov
mov
loopne
nop
test
mov
movsb
loopne
icebp
test
mov
test
loopne
lds
mov
mov
loopne
adc
loopne
mov
loopne
sub
mov
mov
loopne
jmp
mov
loopne
shlb
loopne
mov
loopne
add
mov
mov
loopne
js
loopne
lret
mov
loopne
adc
loopne
test
loopne
repnz
loopne
enter
adc
cmpsl
loopne
cld
movsl
loopne
ret
mov
test
mov
mov
loopne
dec
test
mov
mov
loopne
xchg
test
mov
movsl
loopne
into
movsl
loopne
shlb
loopne
repnz
mov
cmpsb
loopne
ret
mov
loopne
shll
mov
cmpsb
loopne
pushf
cmpsb
loopne
test
loopne
test
test
mov
cmpsl
loopne
adc
loopne
fsubrs
loopne
push
test
loopne
aaa
movsb
loopne
add
mov
mov
loopne
cmpsl
loopne
sub
loopne
or
mov
mov
loopne
andl
mov
mov
loopne
cmpsl
movsl
loopne
jg
loopne
xchg
movsb
loopne
cmc
movsb
loopne
test
cmpsl
loopne
pop
movsb
loopne
cld
movsb
loopne
mov
movsl
loopne
loop
loopne
xchg
cmpsb
loopne
lea
loopne
and
loopne
loopne
loopne
scas
mov
loopne
xor
loopne
add
loopne
mulb
loopne
jmp
loopne
mov
cmpsb
loopne
cmc
cmpsl
loopne
sub
loopne
scas
mov
loopne
push
loopne
jno
loopne
jbe
loopne
leave
mov
loopne
pop
test
mov
movsl
loopne
repz
loopne
fwait
cmpsb
loopne
sbb
loopne
cmp
loopne
adc
loopne
lret
mov
cmpsb
loopne
cmpsb
cmpsl
loopne
test
loopne
shll
loopne
or
loopne
dec
movsl
loopne
mov
mov
loopne
or
loopne
or
loopne
pop
cmpsb
loopne
loope
loopne
insl
mov
loopne
fldenv
loopne
icebp
mov
loopne
in
loopne
sub
loopne
subl
loopne
insl
test
mov
mov
loopne
mov
loopne
mov
loopne
xor
loopne
jg
loopne
mov
mov
loopne
mov
loopne
hlt
cmpsl
loopne
pop
mov
loopne
movsl
loopne
cmp
mov
loopne
clc
mov
loopne
and
mov
cmpsb
loopne
lret
mov
loopne
jbe
loopne
push
movsl
loopne
mov
loopne
outsb
mov
loopne
loope
loopne
sbb
movsb
loopne
pop
test
mov
cmpsl
loopne
add
loopne
mov
cmpsl
loopne
ljmp
mov
mov
loopne
dec
movsl
loopne
cmp
movsl
loopne
xchg
test
mov
mov
loopne
mov
loopne
out
loopne
aam
loopne
iret
mov
loopne
lea
loopne
out
loopne
shll
mov
mov
loopne
mov
loopne
mov
test
mov
mov
loopne
mov
test
loopne
stos
cmpsb
loopne
jne
loopne
xor
loopne
mov
mov
loopne
dec
cmpsl
loopne
ljmp
mov
mov
loopne
xchg
mov
loopne
push
mov
loopne
call
test
mov
mov
loopne
lahf
cmpsb
loopne
push
movsl
loopne
mov
loopne
adc
loopne
fldenv
loopne
imul
loop
loopne
pop
mov
loopne
dec
movsb
loopne
cmc
movsb
loopne
leave
movsb
loopne
inc
test
mov
mov
loopne
popf
cmpsl
loopne
dec
mov
loopne
inc
test
mov
test
mov
mov
loopne
fldenv
loopne
je
loopne
jb
loopne
cmp
loopne
mov
loopne
int3
cmpsl
loopne
sub
loopne
clc
movsl
loopne
movsb
mov
loopne
mov
loopne
mov
cmpsl
loopne
lahf
test
mov
cmpsb
loopne
push
test
mov
mov
loopne
inc
cmpsl
loopne
in
loopne
nop
mov
loopne
mov
cmpsb
loopne
movsb
loopne
xchg
movsb
loopne
and
loopne
sub
loopne
mov
loopne
sub
loopne
jb
loopne
andl
loopne
cmpsb
test
mov
mov
loopne
mov
loopne
pop
loopne
xchg
test
mov
test
mov
mov
loopne
andb
mov
cmpsl
loopne
cwtl
test
mov
movsb
loopne
pusha
movsl
loopne
cmpsl
mov
loopne
inc
movsb
loopne
fsubrs
loopne
xchg
loopne
and
mov
test
loopne
out
mov
loopne
adc
loopne
push
test
mov
mov
loopne
nop
movsb
loopne
cmpsb
cmpsl
loopne
andl
mov
test
mov
test
mov
test
mov
mov
loopne
xchg
cmpsl
loopne
pop
test
loopne
lret
mov
movsb
loopne
or
loopne
repz
loopne
push
movsb
loopne
mov
movsb
loopne
std
mov
loopne
cld
cmpsl
loopne
imul
mov
test
mov
cmpsl
loopne
je
loopne
loopne
cmpsb
loopne
push
test
loopne
cmpsb
movsl
loopne
mov
cmpsl
loopne
and
loopne
sbb
loopne
movsb
test
mov
mov
loopne
arpl
loopne
jge
loopne
sbb
loopne
enter
frstor
loopne
dec
movsl
loopne
fldenv
loopne
mov
mov
loopne
inc
cmpsl
loopne
iret
mov
loopne
test
loopne
fsubl
loopne
int
loopne
mov
mov
loopne
xor
cmpsb
loopne
xor
loopne
pop
movsl
loopne
xcrypt-cfb
mov
mov
loopne
jle
loopne
xchg
cmpsb
loopne
pop
cmpsb
loopne
int
loopne
dec
movsb
loopne
iret
test
mov
cmpsl
loopne
movsl
mov
loopne
xchg
test
mov
test
loopne
movsl
loopne
push
cmpsl
loopne
mov
mov
loopne
mov
cmpsl
loopne
lea
loopne
fbld
loopne
sti
movsb
loopne
dec
movsb
loopne
jo
loopne
imul
loopne
cmp
loopne
dec
mov
loopne
out
loopne
out
loopne
mov
movsb
loopne
cpuid
loopne
xchg
movsl
loopne
mov
loopne
jne
loopne
imul
mov
mov
loopne
mov
loopne
or
mov
loopne
inc
mov
loopne
or
loopne
stos
test
mov
mov
loopne
push
cmpsb
loopne
sub
mov
loopne
inc
test
mov
test
mov
movsl
loopne
pop
mov
loopne
mov
loopne
sbb
loopne
bound
mov
movsb
loopne
cmp
loopne
jmp
loopne
fsubl
loopne
push
cmpsl
loopne
mov
test
mov
cmpsl
loopne
fwait
movsl
loopne
mov
loopne
cmp
mov
movsl
loopne
add
loopne
add
loopne
in
loopne
lea
loopne
xor
loopne
mov
loopne
or
loopne
stos
mov
loopne
pop
cmpsb
loopne
cmpsl
loopne
add
mov
movsl
loopne
mulb
loopne
lahf
cmpsb
loopne
test
cmpsb
loopne
inc
movsl
loopne
jnp
loopne
arpl
loopne
or
mov
loopne
mov
loopne
jmp
loopne
in
mov
loopne
xchg
loopne
shld
mov
test
mov
cmpsb
loopne
stos
mov
loopne
leave
mov
loopne
adc
loopne
ja
loopne
pop
mov
loopne
sahf
cmpsl
loopne
das
mov
loopne
dec
movsb
loopne
push
mov
loopne
std
movsb
loopne
dec
cmpsb
loopne
jb
loopne
xor
mov
loopne
mov
movsb
loopne
sbb
loopne
les
loopne
mov
loopne
test
mov
cmpsb
loopne
shlb
mov
mov
loopne
cmp
loopne
frstor
loopne
lea
loopne
or
loopne
fsubs
loopne
mov
loopne
das
mov
loopne
shll
loopne
test
loopne
mov
loopne
lcall
mov
mov
loopne
cmc
mov
loopne
jle
loopne
fisubs
loopne
test
loopne
mov
mov
loopne
lahf
cmpsl
loopne
cli
movsl
loopne
fldenv
loopne
movsl
mov
loopne
sub
loopne
cwtl
cmpsl
loopne
imul
loopne
shll
mov
mov
loopne
inc
mov
loopne
push
movsl
loopne
loop
loopne
sbb
loopne
xlat
cmpsl
loopne
mov
loopne
int
loopne
fldcw
loopne
aaa
movsl
loopne
dec
cmpsb
loopne
cwtl
cmpsb
loopne
mov
test
mov
cmpsb
loopne
xor
mov
loopne
add
loopne
add
loopne
jl
loopne
ljmp
mov
test
loopne
mov
loopne
or
mov
cmpsb
loopne
jecxz
loopne
push
mov
loopne
fwait
mov
loopne
jne
loopne
push
mov
loopne
dec
test
loopne
mov
cmpsl
loopne
test
loopne
cwtl
test
mov
movsl
loopne
dec
movsl
loopne
and
cmpsl
loopne
push
test
loopne
popa
mov
loopne
adc
mov
movsb
loopne
lret
cmpsl
loopne
ret
mov
mov
loopne
movsb
cmpsb
loopne
push
movsl
loopne
imulb
loopne
pusha
movsb
loopne
loope
loopne
xor
mov
cmpsl
loopne
addr16
pop
cmpsl
loopne
adc
loopne
and
loopne
mov
loopne
cmp
mov
loopne
inc
movsb
loopne
cmc
mov
loopne
fisubs
loopne
add
loopne
cmpsb
loopne
xor
loopne
andl
loopne
sub
loopne
adc
loopne
stos
cmpsl
loopne
and
mov
loopne
mov
cmpsl
loopne
sub
mov
loopne
jbe
loopne
inc
mov
loopne
shlb
mov
movsb
loopne
sbb
loopne
enter
pusha
mov
loopne
out
loopne
xor
loopne
cli
movsb
loopne
dec
test
mov
test
mov
movsl
loopne
xor
loopne
jb
loopne
cmpsl
loopne
xchg
mov
loopne
stc
test
mov
cmpsl
loopne
or
loopne
sti
mov
loopne
jb
loopne
loope
loopne
insl
test
mov
mov
loopne
jbe
loopne
fwait
mov
loopne
out
loopne
test
loopne
outsb
mov
loopne
sub
loopne
mov
loopne
in
loopne
push
test
loopne
ret
mov
loopne
std
mov
loopne
lret
mov
loopne
xor
loopne
fsubs
loopne
mov
mov
loopne
mov
loopne
int3
mov
loopne
outsb
mov
loopne
in
loopne
sti
movsl
loopne
stos
test
mov
test
mov
movsl
loopne
or
loopne
std
movsb
loopne
shll
loopne
shlb
loopne
lcall
mov
mov
loopne
pop
cmpsb
loopne
push
mov
loopne
xchg
movsl
loopne
in
movsb
loopne
mov
movsb
loopne
dec
mov
loopne
inc
test
loopne
and
mov
movsb
loopne
pop
test
mov
movsl
loopne
mov
mov
loopne
push
mov
loopne
loopne
loopne
out
loopne
inc
mov
loopne
dec
movsb
loopne
mov
mov
loopne
imul
mov
test
loopne
loope
loopne
xchg
test
mov
cmpsb
loopne
popf
mov
loopne
dec
mov
loopne
pop
movsl
loopne
mov
mov
loopne
out
loopne
mov
loopne
shld
cmpsb
loopne
adc
mov
loopne
repnz
loopne
xchg
mov
loopne
jecxz
loopne
push
test
mov
mov
loopne
frstor
loopne
ljmp
mov
cmpsl
loopne
xchg
cmpsb
loopne
push
test
mov
mov
loopne
jl
loopne
dec
movsb
loopne
lahf
cmpsb
loopne
pop
cmpsb
loopne
mov
mov
loopne
sbb
loopne
in
loopne
inc
mov
loopne
lea
loopne
sbb
loopne
inc
mov
loopne
xchg
mov
loopne
test
mov
loopne
xchg
cmpsb
loopne
push
mov
loopne
pop
movsl
loopne
push
mov
loopne
nop
cmpsb
loopne
xor
loopne
push
cmpsb
loopne
dec
test
mov
mov
loopne
xor
loopne
inc
test
mov
mov
loopne
add
loopne
int
loopne
xchg
mov
loopne
and
loopne
scas
mov
loopne
cmp
loopne
in
movsb
loopne
fisubl
loopne
aad
loopne
fsubs
loopne
mov
loopne
test
mov
test
mov
cmpsl
loopne
test
mov
movsl
loopne
mov
mov
loopne
fsubs
loopne
or
loopne
movsb
mov
loopne
add
loopne
jecxz
loopne
stos
movsl
loopne
push
cmpsb
loopne
mov
mov
loopne
imul
loopne
add
loopne
push
loopne
cmpsl
loopne
sbb
loopne
cmp
mov
loopne
add
movsb
loopne
mov
test
loopne
shll
loopne
test
mov
movsl
loopne
lret
mov
test
mov
movsb
loopne
pop
test
mov
cmpsb
loopne
arpl
loopne
call
movsl
loopne
int
loopne
push
movsl
loopne
mov
loopne
sub
loopne
fldenv
mov
mov
loopne
mov
loopne
loope
loopne
movsb
cmpsl
loopne
xchg
test
mov
movsl
loopne
adc
loopne
mov
loopne
cmpsl
mov
loopne
insl
mov
loopne
pop
mov
loopne
cli
movsb
loopne
imul
mov
movsb
loopne
mov
loopne
lea
loopne
sbb
loopne
mov
mov
loopne
ss
clc
jg
clc
shlb
iret
jne
sub
clc
mov
mov
out
sbb
pop
imul
sar
aas
rorl
cmp
in
sbb
aas
mov
cmc
cs
stos
xchg
cmc
call
jl
mov
mov
cltd
movsb
clc
push
push
clc
lcall
or
clc
pop
adc
add
add
jl
mov
clc
adc
add
dec
fdivs
mov
add
or
xor
add
xchg
sti
notrack
icebp
pop
pusha
add
xchg
nop
jno
add
es
clc
add
add
lcall
jae
add
clc
mov
push
add
adc
clc
out
sar
add
clc
jp
in
sub
add
add
sub
add
dec
dec
arpl
add
add
out
push
clc
jl
add
lods
jnp
clc
xchg
mov
iret
mov
jbe
clc
mov
clc
or
mov
xabort
add
cld
aas
push
push
add
mov
push
pop
dec
push
add
gs
clc
data16
jge
bound
add
add
clc
push
jno
add
add
cmpsb
clc
out
sarl
add
clc
mov
inc
add
inc
clc
xabort
and
add
out
fmull
bound
add
ficoms
es
add
add
clc
fldl
repnz
add
xor
add
fwait
jg
pop
sti
lods
rclb
clc
mov
mov
mov
clc
fiadds
add
add
cmp
clc
jno
add
add
mov
imul
add
add
add
or
dec
xor
add
sbb
add
clc
in
movsl
clc
add
add
xchg
cmc
jge
lods
push
add
inc
clc
mov
add
popf
sbb
xabort
mov
add
sub
pop
lock
cmpsl
clc
sbb
clc
nop
sar
clc
fs
pop
loopne
mov
sbb
loop
or
sbb
add
clc
pop
push
out
push
aaa
imul
ret
clc
repz
add
add
clc
cwtl
in
out
adc
add
inc
clc
cmp
lods
lea
add
mov
addr16
or
dec
nopl
pusha
add
pop
clc
and
add
add
cmp
mov
dec
xor
sar
mov
stos
int3
loope
mov
sbb
cmp
push
sub
push
push
push
push
push
push
call
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
mov
sub
mov
xchg
sub
add
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
jmp
mov
dec
mov
add
mov
add
pop
call
add
pop
cwtl
cmp
outsb
icebp
shlb
add
jle
clc
ds
clc
or
fldt
clc
testb
cmp
jp
cmc
lahf
mov
mov
lock
xbegin
add
add
clc
sbb
add
in
stos
add
add
xchg
xor
add
dec
in
cli
lods
dec
pushf
push
add
aas
out
mov
clc
ds
mov
das
push
jo
add
mov
clc
je
and
add
dec
xor
add
clc
fcom
fwait
mov
clc
mov
clc
adc
add
or
clc
lcall
dec
xor
add
clc
imul
out
mov
push
add
mov
hlt
inc
clc
sar
push
mov
data16
lret
add
pop
sbb
clc
fistl
xchg
or
pop
and
add
add
jno
add
mov
sub
clc
xchg
push
cmpsb
clc
jae
add
add
and
add
ljmp
add
movsl
clc
push
push
mov
add
out
and
add
clc
ficompl
sub
push
xor
jnp
clc
pop
dec
dec
xchg
xchg
dec
out
fildll
in
daa
clc
sbb
ljmp
add
jge
stos
push
add
in
xor
add
clc
xabort
add
add
imul
cli
ljmp
out
test
mov
add
xabort
gs
push
add
cmp
fsubl
in
inc
clc
and
add
mov
mov
sar
icebp
js
sub
mov
stos
cmp
repnz
add
add
ficoms
add
push
aas
fisubrs
movsb
clc
sub
clc
adc
add
clc
roll
dec
mov
clc
mov
sti
in
push
imul
clc
pop
out
mov
cmp
data16
mov
stos
in
pop
rorb
inc
clc
push
call
jbe
mov
cmpsb
clc
mov
hlt
inc
clc
inc
add
push
add
out
pop
inc
clc
push
add
cs
repz
add
clc
or
clc
insb
sbb
mov
dec
jp
xbegin
clc
pop
rolb
add
clc
sar
clc
mov
mov
add
jge
in
popa
add
imul
ret
push
js
pushf
mov
mov
cli
out
sti
cmp
add
add
hlt
call
jno
add
pop
clc
push
or
cmp
mov
rorl
sub
test
aas
or
add
jecxz
cmp
clc
inc
add
mov
push
fcmovb
clc
in
fmull
into
or
add
inc
add
xbegin
adc
add
dec
jbe
jbe
push
push
loop
arpl
add
or
add
xchg
popa
add
outsl
mov
xor
add
add
in
pushf
ja
lcall
decl
popf
add
pusha
add
std
xchg
cmp
add
repnz
clc
inc
clc
fisubs
mov
add
cmp
sub
clc
daa
clc
jg
or
add
clc
sbb
clc
enter
or
clc
enter
xor
add
or
add
lock
fs
unpcklps
test
outsb
dec
data16
test
push
stos
xbegin
jb
add
and
add
cmp
in
lsl
add
add
push
add
clc
cmp
sar
cmp
mov
jbe
xor
add
hlt
testb
mov
stc
scas
or
adc
add
add
jp
xchg
push
pop
cmp
or
in
xchg
lret
imul
add
clc
fistl
add
push
pop
clc
jnp
or
add
aaa
mov
cmp
jp
clc
mov
clc
out
push
xor
sub
test
mov
clc
xor
sahf
sbb
xchg
loope
fucomip
bound
add
push
inc
clc
mov
dec
add
aam
mov
cmp
add
je
cmp
mov
cltd
push
add
inc
clc
mov
mov
xchg
jmp
add
cmpsl
clc
cmp
pushf
cli
test
addr16
test
xor
add
add
shll
clc
sar
jle
pusha
add
ss
add
ss
jb
add
and
add
add
add
sbb
pop
addr16
pop
push
sub
push
mov
dec
pop
push
adc
add
push
movsl
clc
sbb
lods
addr16
pop
mov
mov
xchg
push
cmp
add
cs
add
sub
add
push
inc
clc
sbb
add
jo
add
add
clc
stos
xbegin
add
movsb
clc
fcomps
jno
add
clc
outsb
stos
cmp
clc
js
pop
lret
add
sub
cmp
add
or
or
js
add
sub
sub
push
add
lret
bound
add
addr16
cmpsb
clc
arpl
add
pop
or
stos
popf
jo
add
and
add
add
out
mov
iret
adc
add
add
cmc
dec
jl
jg
repnz
add
mov
mov
clc
sbb
repnz
clc
mov
add
push
jge
popa
add
cmp
cmp
clc
jb
add
add
inc
add
cmp
xor
add
add
jns
int
xor
add
nop
call
inc
add
repnz
add
sbb
pop
clc
and
negb
cli
jmp
clc
xbegin
add
dec
popa
add
jp
push
stos
add
add
push
add
lahf
arpl
add
lahf
mov
mov
pop
rclb
xor
add
clc
sbb
jb
add
aad
dec
test
mov
add
clc
cli
xor
repz
add
decb
jecxz
xchg
jmp
xchg
jp
add
clc
into
push
clc
cmp
clc
imul
pop
daa
clc
xchg
aas
pop
clc
jge
clc
mulb
add
clc
mov
mov
push
add
add
add
clc
in
jb
add
lret
add
add
mov
clc
out
sar
mov
icebp
emms
sub
add
add
pop
lret
sbb
and
add
pop
dec
fcmovnbe
cmp
popf
or
stos
fistl
add
test
call
call
cmc
push
jbe
clc
repnz
xchg
icebp
cmp
clc
imul
jbe
add
inc
clc
pusha
add
pop
xor
inc
clc
stos
mov
clc
adc
insb
mov
clc
test
enter
add
aaa
cmp
push
add
pop
sar
ds
push
add
sar
imul
aaa
add
add
clc
lcall
cmp
clc
mov
xchg
gs
pop
pushf
test
ljmp
loope
mov
sbb
mov
add
push
and
sti
jo
add
clc
stos
fistpll
clc
ljmp
fidivrs
jmp
push
jns
xchg
cli
scas
pop
xchg
daa
clc
or
mov
addr16
inc
add
daa
clc
pushf
fidivrl
ja
clc
sbb
add
add
clc
cmp
add
sub
jp
add
xchg
jp
clc
out
in
xabort
add
pop
inc
clc
rcl
sar
add
sbb
add
imul
lret
inc
clc
inc
clc
pop
jnp
aad
clc
ret
dec
gs
fsubl
add
outsb
and
add
and
xor
add
decl
lods
mov
fldcw
add
inc
add
fldl
clc
sarb
clc
add
add
sar
clc
or
cwtl
ss
mov
cmp
push
add
movsb
clc
mov
mov
xor
add
push
add
add
cwtl
div
leave
rolb
clc
nop
jge
clc
xchg
sub
add
cmp
xlat
push
mov
add
push
cmpsb
clc
or
add
mov
clc
enter
icebp
stos
dec
jnp
xchg
mov
mov
dec
sub
dec
cmc
out
or
add
add
add
xor
add
clc
lret
push
dec
mov
sbb
into
adc
add
mov
inc
clc
jecxz
lods
xbegin
ja
sub
mov
pop
sub
cmpsl
clc
jnp
daa
clc
dec
add
add
inc
clc
loope
pop
cs
clc
outsl
leave
or
clc
push
pop
call
dec
cmp
js
add
adc
shll
sub
ret
clc
sbb
test
cmpsb
clc
inc
add
call
ja
mov
loop
adc
jmp
clc
call
lcall
adc
add
sub
jl
sub
add
clc
xor
clc
or
inc
clc
xor
add
clc
xbegin
pusha
add
cmpsl
clc
pop
and
add
bound
add
clc
jecxz
adc
add
xbegin
ret
lods
push
jl
imul
aam
insb
fisubrl
clc
pop
notb
sub
inc
clc
mov
dec
stos
mov
jne
aaa
test
lock
sar
clc
adc
add
pop
and
add
pop
adc
add
or
cmc
jb
add
mov
or
add
sub
sbb
add
clc
aam
cli
lods
and
add
clc
jb
add
clc
mov
clc
lods
cmp
sar
clc
jl
sub
fsubrs
sub
inc
add
aam
cmpsl
clc
enter
test
ja
sti
fsts
std
mov
mov
arpl
add
xor
add
pusha
add
xchg
sar
add
ds
cwtl
cmc
xchg
ret
clc
mov
add
loopne
sub
cmp
pop
lea
xchg
imul
fnsave
add
add
jbe,pt
add
jns
clc
fs
lock
xor
add
pop
mov
add
push
xchg
inc
clc
xabort
pop
adc
add
sbb
xabort
add
add
clc
add
add
call
es
repz
pushf
cwtl
stc
fldenv
clc
call
adc
add
adc
add
std
ret
clc
mov
xchg
dec
add
add
pusha
add
aas
nop
mov
imul
jp
lock
in
ret
imul
aaa
fists
clc
sub
cmp
cmp
clc
jnp
fdivrl
pop
cmp
push
add
and
dec
xchg
in
mov
icebp
in
mov
add
lret
xor
add
and
lret
inc
clc
sbb
add
scas
data16
gs
xor
add
lods
mov
add
lcall
dec
mov
jnp
sbb
clc
cltd
and
leave
stos
sar
add
es
sbb
jnp
sbb
clc
cmpsb
clc
mov
dec
xchg
mov
pop
mov
inc
clc
dec
dec
mov
add
jo
add
pop
mov
loop
jbe
clc
outsl
mov
xchg
int3
pop
push
fs
jmp
clc
movzbl
add
out
jg
add
sbb
sub
xchg
xchg
xchg
sti
mov
dec
repz
add
scas
shll
jne
mov
cmp
cmp
and
es
into
in
push
add
ja
clc
cmpsb
clc
add
add
add
add
and
add
into
jmp
mov
sar
add
pop
sets
add
data16
jbe
push
sub
lret
cltd
loopne
scas
mov
push
punpcklwd
add
pop
push
add
jmp
inc
clc
sbb
fsts
idivb
or
add
imul
xor
clc
sgdtl
add
sbb
push
std
mov
ja
add
loopne
pop
out
cwtl
xchg
sbb
aaa
jmp
test
clc
lea
clc
clc
aaa
test
add
add
add
add
es
xchg
pop
divl
add
mov
and
movsb
clc
in
fyl2xp1
cld
mov
mov
add
dec
inc
clc
push
cmp
clc
sar
jnp
xor
add
call
sub
xor
clc
mov
cmpsb
clc
rcrl
add
add
aas
ljmp
lods
loop
test
xor
add
cmp
add
inc
add
int3
jbe
add
sar
add
xor
add
stos
xchg
adc
add
lcall
clc
inc
clc
aas
sar
add
fs
pop
cmpsb
clc
icebp
lods
fs
out
call
out
cmp
and
add
add
sar
add
dec
int3
daa
clc
outsl
and
add
fsubl
mov
mov
jmp
pop
lea
add
cld
pop
adc
add
pop
cmp
scas
push
pop
pusha
add
push
clc
pop
ret
clc
push
clc
push
xchg
cwtl
lret
pushf
inc
add
int3
pop
jp
xor
add
xor
add
clc
xchg
out
enter
or
sar
mov
dec
lea
popa
add
cli
dec
jmp
clc
sbb
clc
jns
add
xchg
and
add
add
inc
add
xchg
xor
add
add
add
addr16
cmp
clc
outsb
lock
push
add
popa
add
inc
add
jo
add
popa
add
pop
fcmovnu
mov
add
and
shlb
add
in
add
add
add
and
add
insl
shl
mov
jmp
pop
or
clc
and
add
scas
push
add
mov
add
out
int
sub
add
sub
sti
out
mov
clc
xchg
sub
pop
push
add
into
pop
clc
fs
in
mov
add
xchg
pushf
rclb
imul
add
xabort
ljmp
fdivs
add
pop
and
add
xabort
clc
cmp
push
add
daa
clc
xor
and
filds
add
data16
outsb
out
lea
fdivrp
mov
lea
adc
sbb
clc
add
add
add
out
mov
dec
mov
clc
push
add
into
or
add
fisubrs
fsubrs
inc
clc
dec
clc
fidivrl
lock
sbb
sub
add
sub
cmp
add
clc
popf
sbb
shrb
gs
cmp
add
xchg
arpl
add
add
mov
inc
clc
popa
add
test
movsb
clc
xor
add
imul
add
test
push
js
in
call
jo
add
cmp
sub
je
add
sar
mov
add
xchg
sahf
cmpsl
clc
or
cmp
test
jb
add
addr16
iret
add
add
pop
push
mov
xchg
daa
clc
push
add
xor
add
wbinvd
insb
add
cmc
dec
scas
push
leave
jge
mov
clc
testl
or
dec
flds
mov
imul
add
pop
lods
ja
clc
aas
mov
add
cli
jmp
clc
push
clc
and
sub
cmp
ds
aad
xor
xbegin
mov
movsb
clc
pop
or
fistpll
pop
clc
movsl
clc
pop
xchg
inc
clc
mov
jno
add
clc
xor
cmp
popf
mov
and
add
add
insb
pop
jnp
push
clc
jmp
clc
or
fnsave
ja
mov
add
decb
rcrl
clc
in
insb
xor
add
add
adc
add
loope
add
add
mov
cli
adc
add
cmc
sub
mov
ds
sbb
add
push
add
lea
lahf
loopne
cmp
cmp
add
mov
jl
sub
clc
mov
daa
clc
push
out
cmp
mov
add
clc
xor
shl
pop
in
add
add
jns
mov
clc
push
test
outsl
insl
mov
add
jl
clc
xchg
dec
cmp
fistl
mov
add
add
jmp
add
lret
add
mov
cs
xor
add
add
insl
push
push
cmp
add
cmpsl
clc
mov
ljmp
test
dec
sar
clc
in
into
push
es
sar
gs
fldl
add
pop
in
or
es
scas
cwtl
scas
and
add
fucomip
xchg
mov
je
fiadds
ficoms
bound
add
pop
jb
add
pop
mov
jge
add
cs
cmpsb
clc
sbb
mov
add
clc
and
mov
add
pop
jne
mov
out
enter
je
lock
jnp
xchg
push
add
mov
aas
mov
xlat
cltd
pop
ficomps
clc
or
pop
push
jae
add
mov
hlt
sub
dec
je
cmp
mov
enter
clc
inc
add
clc
sti
sub
mov
fucomp
pop
clc
sub
clc
dec
adc
add
inc
clc
push
clc
xchg
pusha
add
sub
add
add
pop
gs
addr16
mov
mov
in
inc
add
dec
cmp
jp
popa
add
gs
mov
push
clc
cmp
lcall
shlb
xchg
or
sbb
push
sub
add
add
add
iret
stos
ds
add
pop
push
pop
xchg
imul
add
ret
clc
gs
jp
clc
pop
sub
sbb
clc
xor
add
push
push
add
adc
add
clc
arpl
add
add
ds
int3
nop
outsb
loopne
sti
clc
pop
mov
rcr
cmp
movsl
clc
mov
fsubrs
clc
cmp
ret
add
inc
add
hlt
mov
clc
fs
jnp
clc
lahf
in
repnz
clc
rol
clc
dec
scas
push
bound
add
mov
add
into
push
clc
ss
add
daa
clc
jmp
sub
es
xor
add
add
fwait
lods
lods
cmp
inc
clc
mov
clc
mov
lret
clc
loop
iret
add
add
clc
xchg
add
add
add
adc
add
out
mov
clc
int3
out
or
push
pop
leave
xchg
aad
add
xchg
imul
xor
add
mov
add
add
cmpsb
clc
inc
add
xchg
xchg
arpl
add
into
daa
clc
in
ret
clc
cmc
arpl
add
test
add
inc
add
cmp
add
sti
sarb
dec
iret
cwtl
in
addr16
sar
enter
insl
adc
clc
ja
bound
add
outsb
in
jns
push
add
lods
push
lret
xbegin
add
jp
bound
add
add
clc
sbb
add
leave
movsl
clc
xchg
jns
add
call
dec
cmovo
add
inc
clc
pop
push
add
flds
xchg
cwtl
pop
pop
mov
add
mov
mov
movsb
clc
push
and
add
push
lods
or
add
cmp
sub
add
add
add
clc
cmpsb
clc
rolb
add
inc
clc
pop
loop
cmc
das
ficoml
enter
daa
clc
cmp
arpl
add
cmp
clc
test
int
clc
mov
mov
mov
push
clc
and
add
scas
notl
clc
negl
cmp
jge
add
imul
add
add
add
call
cmp
in
lret
cwtl
rcll
add
ret
clc
adc
add
dec
bound
add
dec
clc
out
dec
xor
add
cmp
cmp
clc
mov
mov
clc
add
add
cmpsl
clc
sub
cmpsb
clc
jno
add
clc
aad
xchg
pop
fiadds
cmp
cmp
add
test
fisubrl
add
add
inc
add
fbstp
mov
pop
or
sar
in
movsl
clc
lret
imul
inc
clc
mov
and
add
jp
leave
je
arpl
add
mov
add
lock
pop
cli
daa
clc
fimull
out
pop
jno
add
cmp
cmp
add
clc
mov
sbb
fwait
push
divl
push
add
sub
adc
add
clc
jecxz
fwait
sub
mov
jecxz
test
int3
sar
jl
jno
add
lcall
add
adc
jmp
pop
fldt
clc
out
pop
pop
clc
inc
add
dec
lock
and
add
sbb
clc
mov
clc
data16
iret
enter
cmpsl
clc
dec
adc
jo
add
inc
clc
cs
jo
add
clc
mov
clc
dec
loopne
loop
repz
add
pop
mov
cld
mov
inc
clc
mov
das
pop
and
test
add
xor
add
add
dec
bound
add
push
push
xchg
xchg
pop
and
add
xabort
push
fstpl
clc
fmul
movups
add
jmp
add
outsb
daa
clc
dec
jnp
clc
sub
clc
lret
in
adc
add
add
add
jmp
clc
xchg
pop
ret
and
add
scas
add
and
add
sbb
mov
adc
sti
cli
push
adc
add
push
add
in
or
add
xor
add
clc
in
in
ljmp
ficoml
add
bound
add
mov
add
adc
add
add
jecxz
icebp
or
shr
xchg
outsb
and
add
fs
mov
sub
clc
add
push
fldcw
lods
xor
add
add
mov
clc
repnz
dec
ja
fildl
lahf
popa
add
in
sahf
mov
fwait
or
clc
and
add
xor
add
lahf
add
add
add
out
popf
ljmp
mov
outsb
cmp
add
imul
add
sar
and
add
clc
jle
outsb
lods
clc
xlat
and
hlt
mov
data16
adc
add
clc
and
add
lret
addr16
mov
or
clc
and
add
clc
adc
add
stc
imul
idivl
xor
add
lods
sti
xor
add
push
fwait
mov
clc
popf
fnstcw
xchg
push
scas
jle
push
inc
add
push
jae
add
gs
jne
into
mov
jecxz
dec
fisubrs
clc
mov
add
add
clc
and
add
add
mov
mov
clc
dec
stc
aad
add
stos
mov
aad
push
xchg
lret
rcll
add
mov
shlb
add
jge
xabort
fwait
fwait
lods
adc
add
add
inc
clc
test
int
push
add
insl
mov
jno
add
xchg
and
add
add
add
out
add
add
jno
add
mov
lock
jmp
mov
loopne
and
add
xchg
mov
pusha
add
clc
mov
xchg
xchg
mov
sar
lcall
hlt
enter
add
jbe
mov
push
add
aaa
dec
mov
add
push
cmc
push
hlt
inc
add
sti
mov
clc
jnp
add
mov
clc
clc
pop
mov
cmp
mov
ficompl
loopne
sbb
push
add
loope
cli
repz
pop
clc
pop
decb
jp
push
jno
add
sub
add
add
add
clc
into
xor
pop
cld
add
jno
add
add
fbstp
iret
jg
mov
add
inc
clc
push
clc
iret
mov
testb
fcomps
cmc
hlt
push
sbb
aad
push
push
clc
inc
clc
push
add
add
add
lock
push
pop
xchg
cmp
add
add
outsb
mov
cmp
clc
sti
icebp
cwtl
cmpsb
clc
cmp
cmp
xor
add
pushf
cli
mov
jae
add
out
pop
and
add
cld
fucomi
cmp
xchg
arpl
add
fisttpl
clc
push
clc
pop
int3
in
mov
je
outsb
cmp
js
jns
push
outsl
sahf
fidivl
add
lcall
add
ljmp
cmpsb
clc
jae
add
shrl
pop
cmp
lret
gs
mov
test
ljmp
clc
call
clc
xchg
pushf
rorb
clc
clc
sbb
clc
dec
mov
pusha
add
enter
pop
jmp
clc
fldcw
add
jecxz
outsb
in
pop
arpl
add
clc
insb
mov
add
xchg
push
clc
add
add
add
inc
clc
or
sub
clc
or
push
add
cmp
jno
add
push
jno
add
loopne
cmp
add
jne
clc
add
add
clc
and
add
add
xchg
pushf
mov
xor
add
clc
mov
add
add
dec
fucom
clc
jmp
sar
inc
clc
add
add
clc
scas
aas
add
adc
clc
xor
add
mov
leave
sar
clc
xchg
out
loopne
and
add
test
pusha
add
inc
clc
add
add
shr
jno
add
loopne
mull
mov
call
in
in
std
rcl
push
or
test
and
add
sahf
outsl
in
icebp
loope
mov
add
fistpll
clc
sub
pop
jecxz
out
bound
add
popf
add
add
add
cmp
add
sbb
ss
sbb
clc
lods
mov
add
add
or
clc
mov
jns
clc
sar
adc
add
xor
add
sti
mov
shll
add
stos
cmp
pop
ret
clc
testl
add
daa
clc
loopne
add
add
push
sbb
hlt
add
sahf
loop
xor
add
add
jge
inc
clc
sar
add
cmp
clc
pop
sbb
cltd
testb
inc
add
fldt
bnd
add
cltd
popf
insl
lret
lahf
mov
addr16
jge
clc
lcall
dec
int
out
inc
clc
mov
adc
add
out
add
add
clc
test
or
clc
jo
add
dec
and
add
add
clc
ficoms
mov
dec
scas
push
ljmp
push
bound
add
sarb
push
adc
add
jmp
clc
fiaddl
dec
or
cmp
fs
xor
add
dec
and
ja
add
pushf
jo
add
int
cld
mov
mov
xor
add
or
add
incb
add
and
add
add
sti
dec
pop
inc
add
sub
mov
push
ss
dec
dec
mov
clc
scas
jo
add
repnz
add
add
sbb
add
data16
pop
outsb
mov
add
adc
add
add
addr16
xchg
jb
add
add
mov
bound
add
add
adc
add
jb
add
clc
das
sbb
nop
xor
add
cmp
lock
add
stos
aam
dec
sbb
add
cli
ja
ja
aaa
cwtl
in
mov
pop
cmp
repz
add
jae
add
arpl
add
sahf
mov
clc
mov
pop
clc
inc
clc
pop
inc
clc
mov
sbb
jae
add
mov
add
add
xor
cld
out
add
add
add
jg
sar
xchg
fwait
dec
into
stos
sbb
jne
add
cmp
clc
ljmp
insb
test
add
add
add
lods
cmp
fnstsw
fldt
mov
in
xbegin
mov
dec
mov
push
dec
sub
clc
mov
add
clc
xchg
addr16
int3
inc
add
ss
dec
sub
imul
mov
pop
dec
push
xbegin
xor
out
data16
sar
xchg
movsl
clc
xabort
mov
outsb
jp
nop
cmp
aaa
fwait
outsl
ret
imul
cwtl
mov
mov
sbb
dec
pushf
xbegin
push
into
sbb
add
dec
dec
xchg
xchg
test
xchg
aad
cmp
sub
add
sar
test
xchg
add
add
clc
aam
clc
cmp
loop
sub
jecxz
mov
jne
fimuls
clc
das
sbb
lea
dec
inc
add
cmpsl
clc
scas
clc
jg
lock
cs
bound
add
clc
cwtl
mov
sbb
clc
pop
mov
inc
clc
push
fwait
adc
add
add
sub
clc
stos
add
add
sbb
add
repz
pop
xchg
add
add
clc
insl
xchg
xor
and
add
jle
dec
jl
clc
pushf
mov
xchg
xor
add
dec
pusha
add
inc
clc
adc
add
and
cltd
cli
sbb
mov
mov
add
movsb
clc
es
pop
div
mov
div
jg
scas
add
add
inc
add
xchg
mov
clc
std
xchg
push
add
mov
cwtl
mov
stos
aad
xor
add
add
push
sbb
mov
mov
repz
and
add
add
fsubl
add
and
add
add
pop
jle
jno
add
ficompl
dec
fistps
test
cmp
in
js
add
cmp
loope
loop
lahf
cmpsl
clc
stos
xor
add
mov
repnz
add
out
xor
pop
fmull
icebp
pop
jle
clc
jp
scas
push
add
mov
add
into
mov
clc
jno
add
add
scas
es
sub
add
mov
scas
pop
xbegin
shr
jno
add
add
add
cltd
dec
mov
clc
gs
jge
or
cmp
cmp
push
jmp
fisttpll
clc
xbegin
jmp
sbb
xchg
jno
add
pop
sbb
mov
shll
clc
cmp
mov
clc
movsl
clc
insl
inc
clc
and
inc
add
add
add
mov
clc
and
add
repz
adc
add
mov
daa
clc
data16
aam
cs
js
std
and
fisubs
jno
add
lea
sub
add
add
xor
add
add
shr
icebp
push
add
sub
xor
add
clc
pop
lea
add
nop
sub
add
lahf
lcall
add
mov
fcoms
add
sub
clc
xchg
arpl
add
mov
dec
fcmovnb
clc
addr16
cli
movsb
clc
xor
add
and
add
stc
popa
add
fcomp
sbb
add
and
add
mov
cld
ret
aam
inc
clc
mov
mov
iret
xchg
pop
xlat
cltd
addr16
push
or
add
adc
add
xbegin
add
loop
dec
movsl
clc
fisttpll
mov
loopne
fcoms
lahf
xor
add
add
xor
add
aam
sub
add
ret
clc
cld
adc
add
push
ss
pop
push
add
out
arpl
add
ret
adc
xor
and
add
add
scas
movsl
clc
cmp
pop
clc
cld
push
in
loopne
sub
add
iret
pop
adc
add
clc
loop
int
clc
ja
ljmp
lods
xchg
or
add
mov
clc
stos
mov
mov
jmp
fwait
out
jno
add
clc
int
clc
xor
add
add
add
add
sahf
flds
add
add
xor
add
add
insl
xor
jmp
jle
add
pop
clc
mov
fistps
and
add
clc
pop
and
add
jae
add
add
jb
add
int3
je
sub
sbb
pusha
add
mov
mov
xchg
mov
inc
add
test
out
cli
data16
sub
add
inc
add
mov
clc
ficomps
add
add
xor
sahf
fdivs
add
xchg
xchg
mov
clc
mov
cld
xabort
clc
add
gs
or
add
mov
clc
push
xchg
loop
out
xor
add
cmp
in
push
add
xchg
dec
jo
add
add
into
adc
add
mov
lods
cmp
add
xor
add
xchg
dec
xlat
repnz
clc
repnz
movsl
clc
mov
clc
test
push
sahf
cli
loope
mov
fcoms
add
dec
imul
jo
add
add
or
add
cld
mov
cmp
popf
pusha
add
mov
add
inc
add
xchg
sbb
add
cmpsb
clc
jle
and
cmp
mov
clc
xchg
xor
clc
movsl
clc
mov
dec
jb
add
clc
out
dec
cmp
adc
jp
sub
data16
test
icebp
scas
xor
add
clc
imul
into
pusha
add
andnps
add
inc
add
aad
add
mov
sbb
add
scas
sbb
clc
jns
out
ror
dec
dec
fucomp
mov
add
mov
add
in
sub
sub
jmp
add
dec
cld
stc
addr16
sub
clc
ret
clc
xchg
mov
or
pusha
add
pop
lea
in
sub
add
clc
rol
clc
push
add
int3
push
add
mov
xor
add
jae
add
add
ret
mov
clc
inc
clc
repz
mov
mov
icebp
or
add
mov
mov
pop
outsl
int
lods
das
popf
jge
xor
inc
clc
mov
mov
stos
jo
add
inc
clc
cmp
add
jmp
jmp
clc
loop
fisubl
in
mov
test
inc
add
in
pop
mov
clc
iret
iret
notl
lret
scas
insl
je
scas
xor
add
clc
mov
daa
clc
repz
jecxz
adc
add
push
addr16
jmp
testl
and
add
add
popa
add
aas
add
jno
add
jg
dec
arpl
add
add
or
sub
adc
add
add
clc
test
stc
movsb
clc
stos
sti
adc
pop
cmp
xchg
jle
in
lcall
leave
xor
add
sub
mov
add
hlt
call
ret
clc
cmp
add
add
push
add
sahf
add
nop
call
add
imul
ljmp
clc
mov
sbb
aaa
sub
clc
cltd
pop
jbe
lods
repz
add
mov
mov
kmovw
cmp
clc
fisubrl
xchg
cmp
push
jb
add
add
ret
clc
bswap
jb
add
addr16
dec
out
fcomps
sar
add
jno
add
mov
mov
xabort
add
jg
clc
ja
jb
add
add
cmp
nop
popa
add
sub
sbb
clc
add
push
add
jnp
jp
sbb
clc
jmp
add
xchg
xchg
sar
add
fwait
or
clc
ja
add
and
add
or
add
imul
add
clc
daa
clc
ss
mov
adc
cltd
mov
jle
sub
clc
aas
adc
add
inc
clc
pop
jp
pop
fstpt
pusha
add
mov
jp
mov
clc
pop
repnz
add
popf
xchg
xlat
mov
clc
push
mov
add
jnp
clc
fs
cli
mov
idivl
call
inc
add
add
add
jmp
fildll
clc
fcomi
fsubl
pop
push
dec
aam
mov
mov
clc
push
clc
mov
repz
aad
dec
cld
push
lods
cmpsl
clc
popl
clc
es
cwtl
pop
adc
add
nop
scas
mov
fadd
clc
push
dec
imul
push
add
cli
adc
add
clc
fmul
in
cli
jecxz
ret
and
add
clc
mov
add
repz
clc
mov
mov
pop
pop
cmp
dec
shl
clc
pop
imul
add
or
fwait
cmpsl
clc
cs
push
arpl
add
add
int
fst
je
mov
or
add
sbb
add
pop
inc
add
sub
dec
lods
gs
insb
aaa
repz
cmpsb
clc
je
add
push
sbb
add
add
add
clc
fisttps
push
fdivrl
stc
gs
gs
cmpsl
clc
clc
in
inc
add
jb
add
xchg
jae
add
or
movsb
clc
out
pop
outsl
or
sar
add
mov
adc
iret
pop
scas
cmp
add
add
add
jbe
jnp
and
add
cmovae
add
add
mov
cwtl
cmp
clc
mov
ret
clc
jb
add
clc
std
daa
clc
flds
add
mov
lea
clc
out
xchg
push
add
test
pop
clc
sbb
sbb
xchg
add
mov
add
fmul
data16
mov
add
fmull
movsb
clc
je
dec
and
add
fdivl
dec
cmc
addr16
mov
ss
lret
sub
jae
add
push
add
lahf
sub
ds
push
imul
add
mov
out
jb
add
clc
inc
clc
ret
clc
push
add
mov
jnp
insl
mov
rcll
add
clc
jg
xor
add
add
cmc
aam
clc
cld
fs
stc
pop
push
or
clc
dec
repnz
clc
scas
push
add
xchg
aas
cs
xor
add
inc
add
insb
mov
add
out
data16
xchg
jae
add
sbb
push
add
cltd
pop
mov
aad
mov
lret
sbb
clc
out
fistpll
cmp
lea
add
add
pop
enter
clc
xchg
push
jge
jmp
jmp
iret
inc
clc
sbb
or
pop
cmp
clc
movsl
clc
pop
pop
dec
mov
add
add
add
cmp
xchg
outsb
lods
cmp
ds
jmp
stos
pop
out
mov
dec
in
ja
mov
ja
xabort
jo
add
cmp
clc
pop
ret
clc
pop
outsl
inc
add
or
clc
mov
sbb
lods
sub
mov
mov
mov
in
ja
dec
sbb
add
insl
sbb
clc
and
add
in
mov
and
add
add
inc
add
or
dec
push
add
sahf
mov
clc
arpl
add
add
xchg
aaa
pop
mulb
sub
add
and
popa
add
cmc
out
push
add
push
add
cmpsb
clc
mov
sub
clc
lahf
pop
inc
add
in
cmpsb
clc
sbb
popa
add
daa
clc
or
call
push
cmp
add
nop
pop
xchg
jl
push
add
ret
jmp
rcll
xchg
out
ret
clc
fcoml
clc
jl
sub
xlat
cmp
je
clc
pushf
stos
out
mov
pop
jle
jecxz
dec
aad
push
es
iret
pusha
add
out
jns
xchg
pop
lcall
add
rorl
adc
add
sub
xchg
mov
jl
clc
xchg
outsl
cld
fdivl
clc
or
cmp
clc
imul
add
cmp
clc
jmp
or
xchg
add
add
clc
sbb
jb
add
movsb
clc
xor
add
push
lea
add
cwtl
cmp
inc
add
cs
mov
xor
add
clc
cmp
lock
cmp
push
cmp
add
add
jmp
clc
loop
scas
adc
sar
iret
sbb
clc
inc
clc
jb
add
add
add
clc
es
push
add
out
jle
scas
enter
mov
pusha
add
cltd
push
add
inc
add
dec
sti
daa
clc
popa
add
lods
add
add
push
clc
dec
inc
add
mov
add
push
add
xor
add
add
mov
add
add
or
add
je
inc
add
adc
mov
adc
add
or
add
insl
sub
clc
popl
add
or
clc
xabort
add
data16
lods
rep
fimull
pop
out
sbb
lea
add
add
add
sub
sub
int3
cli
mov
mov
inc
clc
sbb
clc
pop
clc
dec
pushf
in
cs
mov
add
data16
fwait
sub
mov
lods
cmp
fldl2e
inc
clc
and
add
add
clc
pop
push
pop
lea
imul
mov
loop
pusha
add
dec
test
clc
and
add
shll
js
pop
fdivrp
notb
clc
das
adc
sub
add
xchg
add
add
sbb
aaa
xor
add
add
clc
xchg
ljmp
add
mov
fcom
iret
clc
es
clc
mov
clc
or
fcom
pop
dec
shrb
xor
add
add
lret
push
out
lods
adc
add
lods
rcl
lock
mov
xor
add
inc
clc
dec
test
pop
cld
adc
add
rol
clc
dec
push
add
outsl
mov
in
pop
jp
dec
int3
sti
cmpsl
clc
push
add
sahf
clc
inc
clc
je
push
jb
add
add
add
cmp
clc
push
add
sub
clc
sub
arpl
add
push
xchg
fwait
mov
lods
gs
mov
add
fidivrs
jb
add
jnp
jecxz
aaa
ja
mov
add
mov
cmp
add
insl
inc
clc
push
sbb
and
add
clc
xchg
int
add
add
xor
add
iret
insl
ret
clc
add
fmuls
cld
mov
xabort
movsl
clc
add
int
push
fsubrp
ret
clc
cld
push
repz
push
imul
add
fs
imul
pop
mov
clc
mov
clc
faddl
add
sbb
add
pusha
add
adc
add
dec
pop
cmp
std
inc
clc
or
clc
or
add
or
pop
mov
add
movq
add
mov
fildll
clc
mov
pop
and
add
and
add
clc
sub
mov
add
lcall
sub
add
jmp
lret
pop
cwtl
pop
fistps
add
aaa
jae
add
cmp
clc
std
into
outsl
pop
packsswb
add
cmp
or
add
cmp
xchg
pushf
fistps
fsubl
add
push
add
and
xor
mov
clc
das
pop
into
aaa
fucomp
clc
pusha
add
clc
imul
add
insb
cmp
cmp
mov
add
cli
lahf
pop
jns
movzbl
push
add
cld
rclb
pop
ljmp
cwtl
mov
repz
pop
mov
lods
cmp
jb
add
jo
add
push
or
sbb
leave
mov
add
inc
clc
cltd
mov
inc
add
clc
fcomps
add
mov
sub
add
pop
push
add
add
add
sub
sbb
push
add
lock
mulb
add
jle
clc
lods
mov
mov
setb
clc
pop
cmp
add
jg
xchg
ja
lea
clc
loop
sbb
idivb
mov
ret
clc
cli
daa
clc
pop
repnz
outsb
call
jge
push
add
das
or
loopne
in
xchg
mov
push
mov
add
or
add
cmp
cltd
push
jae
add
sub
call
add
jns
sub
xchg
sbb
add
clc
dec
mov
clc
mov
add
cmp
jns
inc
add
push
inc
clc
push
das
lea
clc
xlat
pop
frstor
mov
scas
add
add
push
dec
arpl
add
dec
jo
add
clc
pushf
sbb
vmulps
xabort
in
pop
sbb
pop
xchg
lods
popa
add
mov
nop
mov
and
add
clc
iret
mov
jmp
movsl
clc
sti
push
add
push
mov
mov
leave
inc
add
push
clc
repz
add
pop
dec
fwait
cmp
ret
push
mov
mov
add
leave
xor
add
sar
mov
lock
inc
clc
add
shll
add
sub
push
pop
clc
xchg
popa
add
adc
add
add
std
mov
fistl
mov
clc
push
add
and
add
addr16
sub
inc
add
clc
push
add
icebp
das
mov
clc
xchg
inc
clc
sti
jl
cmp
mov
pop
lods
xchg
outsb
jns
aas
idivl
ds
arpl
add
mov
mov
add
mov
sub
hlt
or
add
jp
clc
je
add
ljmp
fdivs
push
ss
lods
jno
add
jge
out
enter
xor
leave
dec
mov
dec
ret
clc
dec
adc
mov
push
ffree
clc
add
js
dec
sti
jne
clc
shlb
add
lea
ja
pop
es
xor
add
add
add
inc
clc
icebp
or
clc
out
push
scas
adc
add
adc
add
pop
or
add
add
clc
mov
movsl
roll
adc
xor
fwait
jmp
imul
clc
mov
or
add
ss
sti
pop
out
fadd
clc
outsb
in
xchg
lods
mov
push
cld
push
ret
cwtl
xchg
push
sub
je
push
sar
repz
popa
add
cmp
clc
addr16
stos
sbb
divps
clc
test
jae
add
or
clc
fildll
clc
loope
adc
add
add
inc
add
add
add
clc
loopne
loopne
jge
dec
stc
and
add
jmp
bound
add
clc
cmp
sarl
call
cld
push
ret
aas
fwait
scas
aad
clc
or
sbb
fimuls
icebp
enter
aas
outsb
sbb
clc
fwait
jmp
sub
sbb
je
cmp
outsb
mov
dec
sti
or
dec
je
lcall
and
insb
loope
jecxz
stos
xchg
stos
in
mov
clc
push
add
xchg
addr16
inc
add
rcr
mov
cwtl
inc
clc
cmp
add
add
ljmp
inc
clc
jl
add
ljmp
into
mov
clc
ja
xchg
dec
cltd
lret
xbegin
add
xchg
ret
pusha
add
gs
fs
mov
add
lods
sahf
lret
or
clc
cltd
jb
add
add
cmpsl
clc
push
jae
add
mov
clc
sbb
clc
lcall
add
pop
jp
sub
add
inc
clc
movsl
clc
mov
stos
jmp
jmp
and
cwtl
sbb
lock
mov
inc
clc
fimuls
in
fsubrl
rcrb
jge
push
test
jmp
or
test
loop
jno
add
stc
jle
pop
clc
pop
mov
aas
cmp
clc
sar
add
mov
fcoms
add
add
push
ljmp
clc
mov
and
add
clc
jle
sbb
add
mov
ja
imul
add
add
mov
fwait
jmp
xchg
cmp
add
aam
test
int3
aas
jecxz
test
add
pusha
add
std
push
clc
pop
xchg
push
push
je
fwait
jmp
movsb
clc
sbb
add
add
sub
sub
add
lods
cmp
clc
push
insb
sub
loope
mov
sub
ja
dec
adc
add
dec
pop
mov
xchg
popa
add
jae
add
jmp
mov
int3
mov
add
int
imul
adc
clc
jl
aaa
sar
inc
add
popl
je
add
mov
add
xchg
push
add
inc
clc
adc
add
cli
iret
lods
add
add
or
add
int3
gs
xchg
fwait
push
stos
add
sub
scas
nop
adc
mov
clc
mov
movsl
clc
mov
sub
mov
push
xlat
mov
add
add
push
clc
lea
fwait
jmp
jno
sub
xor
lods
cmp
add
and
add
leave
in
loop
push
movswl
fwait
jmp
sub
add
mov
cmpsb
clc
es
adc
divl
loope
adc
add
push
add
pop
insb
inc
add
int
cwtl
sbb
xchg
fcmovu
xabort
clc
pop
adc
add
add
testb
dec
in
pop
clc
mov
pop
add
or
movsb
sub
test
enter
pop
test
scas
int3
cs
bound
add
pop
cltd
pop
popa
add
dec
cmp
add
xabort
aas
and
std
lahf
dec
mov
inc
clc
rclb
adc
add
lods
jb
add
clc
lods
jmp
clc
xbegin
inc
add
sti
nop
push
cmp
add
jns
pushf
outsl
or
xbegin
outsl
add
cld
push
ret
sub
scas
sahf
pop
add
add
add
add
sub
mov
rorb
daa
clc
repz
adc
lcall
add
mov
xor
mov
mov
add
bound
add
push
or
push
nop
xchg
fldcw
pushl
fwait
jmp
sbb
push
or
in
lcall
clc
mov
clc
daa
clc
fimuls
inc
add
push
add
fwait
jmp
inc
mov
dec
icebp
mov
jle
std
jecxz
lea
out
rcr
mov
dec
negl
call
sar
xchg
push
lret
jno
add
mov
fs
xor
add
add
xchg
arpl
add
clc
push
lcall
xchg
cmpsb
clc
in
xchg
cmp
add
mov
fidivrs
into
clc
sbb
pop
mov
add
add
outsb
lret
add
mov
jl
jge
add
jbe
add
jo
add
lahf
fs
ljmp
mov
dec
inc
clc
shlb
mov
inc
clc
xchg
push
clc
adc
add
clc
pop
push
adc
add
and
add
lcall
push
into
push
add
push
xchg
aam
clc
jne
push
inc
clc
dec
pop
dec
push
clc
repnz
pusha
fwait
jmp
cmpsb
and
sbb
dec
add
add
mull
lahf
shlb
clc
sar
add
dec
push
cmpw
fwait
jmp
jp
add
lret
add
add
fwait
jmp
push
pop
jge
xchg
fisttpll
xor
in
add
add
inc
add
mov
lods
pop
cli
repz
xor
or
clc
jno
add
add
in
mov
add
fwait
jmp
std
lea
add
add
sub
clc
imul
mov
scas
lahf
sbb
movsl
add
inc
add
dec
push
fwait
jmp
das
mov
cli
sbb
push
or
push
ret
or
or
adc
add
sub
add
cwtl
lret
dec
mov
jmp
sahf
adc
imul
enter
add
std
mov
clc
push
mov
fwait
jmp
insb
push
sahf
push
mov
jg
jge
add
scas
in
add
jbe
stos
aas
clc
loopne
imul
cld
and
add
xchg
jb
add
add
mov
add
icebp
mov
xchg
mov
add
mov
cmp
mov
out
xor
add
fildll
rol
clc
pop
repz
cltd
fcomps
add
scas
cmp
mov
pop
arpl
add
jg
add
xor
stc
push
lcall
ret
clc
call
icebp
test
xchg
ja
clc
mov
push
test
fwait
jmp
je
fs
outsb
fimuls
pop
cmpsb
clc
dec
or
ds
addr16
rcr
test
sub
mov
fwait
jmp
je
push
xchg
mov
add
add
add
add
repz
add
clc
aaa
outsb
dec
push
add
or
out
mov
push
add
mov
clc
push
push
dec
dec
mov
clc
divb
out
mov
in
push
clc
xor
clc
sub
test
cmp
ret
mov
popf
mov
out
push
xor
add
fmull
movsl
clc
aam
enter
or
clc
cmpsb
clc
cmc
cmp
sub
addr16
data16
xor
add
mov
stc
xor
sahf
inc
clc
daa
clc
mov
clc
popf
or
mov
fistps
xor
add
add
xchg
cmp
dec
add
add
pop
cmp
clc
mov
stos
jns
adc
add
xchg
xor
add
mull
jns
dec
fnstenv
add
mov
add
adc
add
gs
add
add
clc
pop
push
or
add
movsb
sub
add
push
clc
jbe
clc
int
push
add
adc
add
pop
and
add
add
add
sub
inc
add
test
add
mov
or
dec
adc
add
add
hlt
fdivrl
pop
jl
aas
movsl
clc
mov
sub
add
add
add
and
add
scas
movsl
clc
fnstcw
xlat
sbb
outsl
in
or
xor
add
add
push
nop
imul
movsl
clc
mov
add
aad
add
movsb
clc
and
leave
jnp
add
add
add
aas
jmp
clc
or
sti
cmp
clc
js
call
outsl
and
add
push
ret
or
ret
clc
call
jle
fs
cmp
dec
jmp
add
dec
in
fisubs
xchg
add
add
clc
outsb
addr16
ret
clc
cmp
add
jmp
sub
cwtl
inc
pop
and
add
stos
clc
or
sbb
mov
adc
add
nop
sti
sub
scas
jge
push
push
ret
jp
rolb
inc
clc
push
fsts
out
pop
adc
add
xor
clc
inc
clc
or
sar
add
pop
clc
int
clc
jge
add
jmp
push
and
mov
and
add
aam
add
test
sbb
popf
fwait
jmp
and
add
adc
add
hlt
movsl
clc
call
clc
xchg
push
das
stos
repnz
xchg
xor
push
add
cld
xor
xchg
xbegin
xchg
fildll
fwait
jmp
ja
test
pop
imul
call
mov
adc
add
add
jp
clc
cmp
loope
cli
dec
jle
repz
add
mov
mov
cmp
add
jo
add
clc
shl
clc
std
ret
clc
cmpsl
clc
imul
jl
xlat
adc
add
ja
add
cmp
adc
add
dec
adc
add
enter
out
cmp
xchg
mov
pop
clc
xor
add
add
mov
sub
stc
sub
out
daa
clc
scas
mov
cs
sub
clc
fidivrl
popf
add
sbb
add
ljmp
fstpl
inc
add
pop
nop
je,pn
push
and
adc
cld
push
ret
jno
insb
cmp
add
mov
add
insb
adc
add
push
add
cli
jne
mov
clc
mov
mov
clc
and
add
or
clc
xor
add
call
incl
sub
or
lret
in
jp
add
mov
jge
clc
cmp
push
add
push
add
popa
add
push
clc
sub
lret
data16
inc
clc
mov
add
push
add
sahf
mov
jge
or
xabort
dec
dec
clc
sar
pop
loop
add
add
xchg
and
add
add
sbb
push
ret
sub
and
sbb
inc
cmp
jmp
sub
pop
dec
ds
jge
push
add
jp
das
add
clc
in
testb
add
add
cmp
push
mov
sub
add
clc
insl
dec
pop
jns
ret
clc
mov
adc
mov
movsb
clc
adc
add
insb
dec
scas
sub
in
out
enter
clc
cmc
lock
add
xor
add
clc
test
add
or
dec
mov
add
and
add
add
inc
clc
push
mov
fwait
jmp
fwait
lods
sub
mov
out
pop
xlat
cli
sar
ljmp
add
add
cmp
add
mov
stc
lock
mov
data16
mov
clc
xchg
sti
jge
daa
clc
mov
in
mov
out
cmp
mov
add
int
clc
test
lahf
xor
and
add
inc
add
sbb
pop
sub
dec
cld
push
ret
test
mov
push
lret
jns
out
push
mov
inc
add
jno
push
sub
in
out
loop
or
add
add
add
inc
clc
test
and
in
xor
add
jne
ds
pop
aas
push
add
xbegin
fwait
jmp
sub
mov
test
in
cmp
add
ret
clc
icebp
inc
add
jbe
in
add
add
dec
jne
mov
cld
xchg
fs
ficoml
loopne
cmp
add
insb
sbb
jbe
mov
dec
and
add
enter
clc
fistl
mov
in
xbegin
je
fdivr
pop
clc
xlat
or
push
and
add
outsb
xbegin
and
add
mov
adc
add
add
cmp
add
lahf
mov
clc
xbegin
add
daa
clc
sar
mov
fwait
jmp
add
adc
out
arpl
add
cmp
clc
clc
or
mov
fwait
jmp
push
cmp
push
add
test
mov
daa
clc
mov
clc
ds
jle
add
xor
add
insb
jno
add
sub
or
sbb
add
clc
xchg
test
loop
push
mulb
inc
add
mov
add
jnp
and
add
js
add
pop
fwait
push
lods
out
xbegin
add
fbld
pop
and
add
pop
clc
outsb
or
and
add
inc
clc
outsl
xlat
cmp
add
cmc
dec
xchg
mov
scas
mov
jmp
push
add
clc
xor
add
es
pusha
add
leave
sahf
adc
add
clc
sub
sub
push
shlb
add
clc
jb
add
xchg
int3
mov
mov
sbb
cmp
aad
add
in
cmp
add
add
ds
cwtl
pop
cmp
mov
lahf
add
add
mov
ja,pn
add
inc
clc
jmp
lock
pop
clc
ret
clc
imul
int
and
add
mov
jbe
test
fistpl
pop
je
add
sub
add
movups
add
sar
add
xchg
fdivp
mov
clc
cmp
clc
and
add
add
aaa
xor
add
add
mov
clc
mov
clc
adc
add
int
inc
add
es
cmpsb
clc
out
pop
clc
add
mov
insb
out
leave
stc
outsl
clc
mov
mov
fwait
jmp
push
cwtl
data16
and
pop
ret
clc
je
jne
fwait
jmp
add
add
add
clc
pusha
add
hlt
cmpsl
clc
xchg
sbb
cmp
inc
add
lods
add
in
dec
loope
and
add
mov
clc
int
jg
clc
pop
sub
mov
mov
fwait
jmp
and
push
mov
clc
aam
rolb
add
enter
xor
add
imulb
or
je
cmpsb
clc
jbe
clc
sti
decb
cmp
add
dec
mov
and
add
sbb
mov
add
in
pop
push
inc
add
fistps
mov
add
adc
add
jmp
scas
sub
sti
sbb
adc
add
clc
xor
mov
clc
xor
add
adc
clc
pop
inc
add
mov
lahf
dec
repz
sbb
add
stc
push
fidivl
clc
test
clc
notl
add
mov
clc
push
cmp
fwait
jmp
cmp
mov
fwait
jmp
outsl
sub
mov
xor
add
pop
cmp
clc
test
pop
test
pop
mov
ds
clc
mov
add
jg
clc
lcall
loop
testb
shrl
testl
mov
nop
xor
add
mov
clc
mov
add
movsb
clc
jne
cmp
fsubs
hlt
or
push
pop
pop
js
loope
loopne
insl
mov
add
xchg
mov
repnz
daa
clc
mov
jo
add
xchg
cld
push
ret
or
je
jp
hlt
or
add
add
clc
push
add
xchg
and
add
insl
jge
pop
stos
sar
pop
dec
cmp
clc
test
cs
add
dec
stc
mov
test
jmp
idivl
mov
fwait
jmp
sbb
adc
icebp
lcall
jmp
sub
and
push
and
add
ja
sbb
std
dec
sti
dec
sub
or
sar
mov
add
add
add
adc
ss
cmp
mov
cmp
add
jnp
mov
jge
add
cwtl
push
aaa
aaa
stos
pop
mov
add
mov
jp
cmpsl
clc
xchg
cli
mov
test
clc
stc
jno
add
mov
clc
adc
cmp
add
pop
mov
jbe
jecxz
sbb
in
add
es
inc
pop
sub
mov
lods
xbegin
or
add
mov
add
or
xor
add
dec
sub
mov
addr16
fs
clc
xlat
adc
add
clc
es
mov
test
lret
lahf
lock
repnz
lahf
and
add
sbb
sbb
in
jmp
clc
dec
fsubl
add
testb
out
lahf
stos
sti
mov
mov
xchg
mov
add
dec
jmp
add
jecxz
mov
inc
enter
jno
cmp
sub
add
add
jecxz
repz
add
inc
clc
enter
pop
rorb
pop
push
cli
pushl
adc
je
add
jne
add
inc
clc
dec
into
jmp
dec
mov
or
add
add
jnp
clc
push
add
dec
mov
repnz
add
jbe
add
push
icebp
mov
cmp
sti
rcrb
je
fwait
jmp
scas
enter
xbegin
addr16
sar
clc
mov
cltd
inc
add
xor
add
cmc
push
cmp
adc
inc
call
inc
add
sub
xor
add
clc
mov
add
push
lea
dec
cli
cli
push
pop
loope
leave
dec
lcall
add
dec
outsb
xor
clc
gs
std
out
and
mov
insb
in
aam
dec
and
add
fprem
xbegin
test
jo
add
sahf
or
stos
mov
add
pop
mov
clc
aaa
outsb
sbb
add
fwait
jmp
adc
clc
xchg
pop
cmp
clc
mov
daa
clc
jbe
xor
add
xchg
adc
ret
lahf
cmp
clc
movsl
clc
aas
adc
add
adc
pop
cmp
pop
cmpsb
clc
sbb
clc
pusha
add
cmc
ret
pop
push
push
fwait
jmp
movsb
test
fimuls
sar
cmp
negl
add
insl
push
xor
add
jb
add
add
pop
mov
dec
shlb
add
mov
mov
inc
clc
or
in
hlt
ja
add
std
sbb
add
sbb
pop
clc
cs
imul
clc
add
add
add
clc
mov
sbb
je
add
test
sbb
add
pop
and
add
test
pop
xor
add
add
imul
cmpsb
clc
xor
and
add
clc
cmpsb
clc
xchg
xchg
lcall
xchg
pop
clc
jo
add
xchg
ja
test
add
lea
cmp
add
add
loopne
dec
xor
add
push
clc
inc
add
adc
add
add
pop
and
add
clc
mov
dec
mov
inc
clc
adc
add
add
hlt
inc
add
fimuls
xor
add
mov
lret
gs
xor
sbb
fwait
jmp
inc
sbb
es
movsl
clc
mov
mov
mov
clc
pop
xor
add
dec
push
add
ficomps
clc
mov
ljmp
jmp
pop
fwait
push
xchg
cmpsl
clc
out
adc
add
clc
clc
xor
add
add
bound
add
clc
pushf
adc
add
clc
xlat
int
pop
test
movsb
clc
xchg
cmp
sbb
mov
inc
add
and
popf
arpl
add
clc
xchg
idivb
push
add
jae
add
or
cld
push
ret
mov
jecxz
aaa
jbe
pop
jno
add
clc
idivb
adc
add
lcall
push
ret
pop
jge
dec
dec
cmp
lret
fwait
leave
inc
add
cmp
and
arpl
add
add
pop
jle
imul
cmp
clc
incl
push
sub
scas
or
cmp
mov
and
add
mull
pushf
sub
or
add
rorl
negl
das
sub
pop
jno
add
inc
clc
ja
mov
pop
add
sub
sub
mov
add
lcall
pop
and
or
in
nop
stc
sub
movsb
clc
incl
add
add
clc
jg,pn
mov
jl
clc
xor
jbe
xchg
lahf
das
lahf
mov
add
loop
and
add
add
and
add
or
add
add
dec
data16
push
test
fwait
jmp
test
clc
clc
xor
add
cmp
pop
flds
push
add
mov
fwait
jmp
add
ds
add
xchg
shrb
sub
push
imul
je
add
dec
dec
movsb
clc
xor
add
dec
jecxz
in
mov
rcrb
add
push
add
add
fsubs
enter
mov
clc
or
pop
js
ret
clc
repnz
xchg
push
add
out
xor
add
add
sub
push
cltd
popf
and
add
xbegin
jo
add
dec
add
and
add
add
fmull
add
or
pop
xchg
insb
mov
lret
dec
inc
add
xor
add
mov
incl
stc
decl
cwtl
je
clc
cmp
xor
push
xchg
loop
adc
add
mov
mov
addr16
pusha
add
xchg
ret
clc
out
jge
dec
xabort
int
clc
ss
out
dec
sub
add
inc
fwait
jmp
inc
jno
cmpsb
das
int3
or
add
jne
pop
mov
add
fisubrl
clc
adc
add
dec
loope
push
xchg
stos
sbb
out
fwait
jmp
je
sub
clc
ljmp
cli
fwait
jmp
sbbb
inc
add
clc
mov
ror
xchg
xchg
icebp
arpl
add
add
arpl
add
add
bound
add
clc
push
add
xchg
jo
add
popf
cmp
add
sbb
cmovo
add
movsb
clc
mov
pop
iret
dec
lea
inc
add
jecxz
testb
clc
sbb
push
add
jbe
add
jbe
hlt
and
add
cmp
stos
add
add
ss
jl
clc
cs
test
and
nop
in
xchg
jne
adc
add
pusha
add
jmp
fwait
jmp
sub
jno
add
cs
fwait
dec
xchg
test
mov
ljmp
scas
xor
in
popa
add
popa
add
jns
mov
sar
mov
clc
mov
sbb
lock
arpl
add
add
decl
jmp
lods
or
leave
xor
add
in
cmpsl
clc
in
pop
lcall
add
lret
lahf
ljmp
clc
adc
add
dec
dec
xchg
repz
clc
mov
shl
clc
cmp
jl
mull
clc
push
add
out
aam
clc
cli
aam
pop
aaa
decb
add
xabort
jg
clc
mov
fwait
jmp
sub
clc
lahf
comiss
clc
adc
add
clc
sub
clc
dec
xchg
out
jae
add
cmp
sbb
push
ret
cwtl
inc
outsl
sub
push
into
test
sbb
test
mov
add
push
push
cld
push
ret
scas
nop
cmp
mov
clc
pop
clc
add
add
add
mov
sub
add
jge
clc
or
adc
add
and
add
fcomps
adc
add
out
mov
add
pop
cmpsb
clc
xor
add
cwtl
mov
incl
sti
fwait
jmp
das
dec
sub
add
cmp
out
push
nop
aaa
pop
clc
xbegin
jl
inc
add
push
push
cld
push
ret
dec
sbb
push
clc
pop
xchg
stos
mov
clc
xor
test
pushf
pusha
add
cld
js
fwait
lods
push
add
or
jp
clc
mov
add
jno
add
add
mov
ficoml
jns
add
sar
pushf
imul
xor
add
in
dec
cvtdq2ps
add
adc
add
in
add
add
rol
clc
dec
int3
pop
shl
clc
fs
push
fwait
jmp
sub
xchg
sub
mov
jmp
clc
dec
in
clc
shlb
enter
and
add
sbb
inc
add
pop
cmp
pop
fwait
jmp
sub
or
and
mov
das
aam
pusha
add
mov
add
push
sub
add
fwait
jmp
cmp
sub
cld
popa
add
pop
bound
add
out
mov
add
arpl
add
clc
and
add
sub
fimull
clc
mov
ret
clc
jmp
add
xor
add
data16
cmp
jno
add
mov
add
gs
or
add
in
mov
push
add
ror
pop
pop
clc
popa
add
sbb
mov
mov
add
add
xor
add
lcall
clc
jecxz
popa
add
fisttpll
inc
clc
iret
out
jle
add
mov
add
sar
clc
int
push
jne
fwait
jmp
je
or
clc
push
jo
add
dec
aad
insl
push
add
fisttps
scas
sbb
push
add
xchg
mov
clc
cmp
add
mov
add
sbb
clc
pusha
add
scas
sbb
add
xor
add
adc
add
or
pop
out
mov
dec
sar
add
sub
add
clc
aad
or
jecxz
inc
clc
xchg
jmp
imul
mov
jp
dec
sbb
jmp
sub
sub
sub
clc
data16
sti
dec
cmc
inc
add
enter
hlt
add
mov
xchg
gs
ret
cmp
aas
pop
sbb
test
fwait
jmp
sbb
int
clc
mov
add
mov
add
clc
test
test
lock
add
add
clc
jmp
pusha
add
xor
cs
call
clc
push
push
repz
mov
push
popf
cmpsb
clc
inc
clc
in
pop
adc
into
and
add
clc
decl
cld
push
ret
fwait
and
test
jne
mov
cld
push
ret
push
xor
xabort
add
cmp
add
mov
test
cmc
cmp
sar
ret
clc
lods
inc
clc
jo
add
add
sbb
repz
lcall
add
clc
xor
add
add
add
ljmp
mov
xchg
mov
jp
mov
cld
push
ret
sub
imul
clc
or
out
inc
clc
push
leave
cmc
jne
cld
cmpsb
clc
xabort
mov
push
out
xor
add
clc
mov
and
xor
add
sub
add
xor
add
add
add
mov
je
cmp
add
data16
sbb
fwait
jmp
ja
cmp
pop
cld
pusha
add
add
add
push
cmpsl
clc
inc
add
js
add
jo
add
mov
clc
cld
daa
clc
fbld
iret
arpl
add
add
aas
mov
clc
lcall
cld
out
ret
ret
push
add
loopne
sub
sub
cld
sbb
in
inc
clc
sbb
sti
inc
clc
xchg
divb
add
cmc
push
add
push
adc
add
clc
loop
cmp
pop
clc
cmpsl
clc
push
add
sbb
clc
stc
mov
cmp
add
jl
clc
je
ss
clc
inc
clc
cmp
push
add
mov
clc
jne
clc
adc
jo
add
cmpw
fwait
jmp
sub
add
mov
add
pop
cmp
jmp
sub
jp
ficompl
call
add
cmp
gs
mov
pusha
add
sar
clc
jnp
test
lods
jp
decl
test
add
fwait
jmp
daa
clc
stc
cmpsl
clc
mov
test
jg
das
fldl
and
add
clc
adc
add
dec
fmuls
add
add
adc
add
fnstenv
push
or
jmp
test
mov
xor
add
mov
enter
jge
add
fwait
jmp
subb
fwait
pop
clc
jns
cmp
add
add
dec
out
popf
fldenv
sub
fiadds
add
clc
cmpsb
clc
cmp
clc
adc
add
mov
add
add
or
pushf
int
mov
rcl
fistpll
mov
clc
sub
dec
adc
xor
push
add
jmp
incb
sub
add
jmp
sub
add
push
clc
decl
jmp
push
dec
jno
test
inc
add
pop
mov
or
dec
cmp
clc
dec
adc
add
fwait
test
sub
aas
shld
clc
xabort
xchg
fs
mov
clc
jns
in
pop
out
fnstenv
add
clc
fxtract
lahf
push
lods
dec
or
add
and
add
in
out
mov
mov
clc
jg
cmp
pop
aaa
cmp
add
clc
dec
pop
aaa
scas
sbb
adc
add
inc
clc
fimuls
shrl
clc
inc
clc
out
sub
clc
add
add
jns
clc
cmpsb
clc
push
xchg
adc
cs
data16
sub
cwtl
xor
add
clc
clc
cwtl
ja
ja
pop
jns
and
jmp
clc
popa
add
clc
sub
jmp
push
ret
sbb
dec
dec
or
add
sub
scas
pop
push
add
fwait
jmp
sub
hlt
fnstsw
pop
imul
clc
xbegin
xchg
push
add
jnp
add
leave
pop
inc
add
dec
mov
clc
xabort
inc
clc
and
test
clc
sub
add
add
add
adc
add
in
sbb
stos
inc
add
cli
push
sahf
push
add
xchg
sub
clc
push
or
add
cmp
mov
mov
insl
in
fs
sti
add
jno
add
and
add
clc
fwait
ret
clc
inc
add
je
add
fs
jo
add
xabort
icebp
or
clc
cmp
pop
mov
clc
data16
or
clc
das
in
xchg
lea
clc
mov
fnstcw
ret
clc
daa
clc
loop
inc
clc
sbb
push
ret
fwait
jno
dec
inc
clc
xchg
mov
fisttps
add
add
insl
test
add
ret
clc
push
fs
add
push
add
or
clc
jns
out
dec
xor
add
add
clc
push
add
mov
add
rcl
sti
mov
cs
mov
or
clc
ret
clc
sub
scas
mov
clc
pop
or
clc
pop
movsl
clc
mov
sub
cld
mov
mov
loopne
lret
stc
pop
hlt
push
lods
fneni(8087
clc
data16
decb
dec
lea
lahf
and
add
jo
add
xchg
sub
mov
adc
cli
repz
add
scas
loopne
sbb
mov
add
jecxz
aas
nop
out
popa
add
mov
add
dec
shll
jmp
add
and
clc
pop
cltd
loope
lret
icebp
loope
arpl
add
clc
je
clc
pop
clc
sub
fcomps
insl
fcoml
aas
rcl
fcompl
fnstsw
lock
loopne
push
mov
sbb
pushf
mov
jmp
lods
aaa
lods
mov
add
fwait
jmp
xor
cmpsb
popf
and
idivl
clc
cmp
add
fwait
jmp
imul
int
add
push
add
dec
push
clc
and
add
jge
cli
sar
clc
sub
lcall
add
mov
clc
fmuls
into
push
clc
sub
or
test
clc
incb
jmp
clc
mov
add
lahf
sar
sub
add
shr
push
cmp
mov
push
add
lock
clc
adc
add
mov
pop
pop
leave
mov
xchg
popf
sbb
add
aas
xlat
ljmp
mov
aaa
in
aas
out
mov
add
sbb
sar
test
xchg
cltd
es
js
clc
idiv
pop
mov
cmp
clc
stc
mov
lahf
xchg
dec
add
xor
add
in
xchg
sub
add
clc
xlat
lods
jle
clc
int
or
add
std
in
mov
clc
ds
adc
test
ds
into
xchg
dec
fidivl
push
jae
add
add
xchg
adc
add
in
outsb
clc
jp
xor
add
add
add
add
out
add
add
add
push
add
sbb
test
dec
add
fwait
jmp
jecxz
lods
test
mov
mov
cmp
movswl
fwait
jmp
cmp
jo
add
movsb
clc
xor
add
clc
push
jmp
test
clc
push
inc
clc
cmp
iret
fxam
clc
loope
icebp
adc
dec
and
add
push
pop
mov
lret
clc
cmc
fiaddl
clc
pop
mov
imul
xchg
sbb
clc
mov
push
clc
inc
clc
pop
cmp
push
push
ret
mov
lods
xbegin
lock
clc
test
test
or
pop
dec
jb
add
add
push
add
mov
repnz
leave
xabort
dec
aaa
imul
inc
clc
jmp
clc
fiadds
nop
push
push
fwait
jmp
test
imul
jp
jnp
cmp
cmp
cmp
mov
add
gs
cli
out
fs
cmc
inc
add
mov
mov
add
fs
daa
clc
mov
add
inc
add
push
inc
add
xor
add
jns
clc
add
add
clc
mov
xor
add
clc
and
add
cmpsl
clc
in
loope
fcoml
nop
pop
sbb
mov
jns
pop
mov
push
test
mov
push
add
mov
push
ret
mov
push
add
imul
aas
leave
sti
sbb
xchg
ja
inc
add
pop
lahf
jnp
rcll
add
idiv
push
ret
and
es
loop
lcall
cmp
es
fidivs
jmp
cwtl
repnz
add
aam
pop
jnp
push
movsb
clc
fists
clc
movsl
clc
nop
daa
clc
jb
mov
push
ret
lea
jae
add
clc
stos
adc
add
mov
fwait
jmp
and
sub
cmc
je
inc
add
xor
add
add
push
jmp
sub
mov
out
push
push
mov
clc
cmp
int
clc
out
fisubrs
or
clc
adc
add
mov
cltd
dec
bound
add
xor
add
add
add
xchg
outsb
mov
fcoms
add
int
add
add
xchg
cmp
sti
ret
clc
testb
add
jnp
int
in
sahf
dec
cli
pop
pop
xor
clc
ja
cmp
clc
mov
jae
add
fcoml
jmp
insb
pop
lods
or
fimull
jp
add
xchg
pop
sbb
jmp
sub
push
sahf
mov
mov
jmp
mov
ja
or
and
wbinvd
mov
jb
add
sub
clc
cli
add
add
add
push
lea
fwait
jmp
add
mov
add
sub
mov
add
add
pop
xor
add
inc
add
hlt
pop
je
add
mov
add
daa
clc
xabort
clc
fsubrl
aad
shlb
mov
cmpsb
clc
cmp
jbe
add
popf
push
mov
xor
add
call
inc
add
lret
cs
roll
clc
dec
fcomi
rcll
push
ret
lods
adc
sub
jg
fwait
jmp
dec
inc
in
scas
fmuls
inc
add
mov
or
ret
test
pop
leave
sub
stc
or
push
jo
add
add
sbb
mov
dec
push
add
fistpll
sub
clc
mov
pop
and
add
clc
mov
clc
pop
cmc
cmp
adc
testb
in
push
add
mull
add
enter
add
mov
clc
cmp
sahf
jecxz
pop
push
mov
data16
shlb
mov
clc
mov
bound
add
ds
jne
add
sbb
ljmp
mov
fwait
jmp
mov
lret
clc
and
add
dec
js
jle
add
nop
mov
jne
xchg
xor
jnp
mov
add
test
data16
notl
add
movsb
clc
xchg
and
add
pop
mov
clc
sti
mov
add
add
jp
mov
cli
mov
jne
clc
rcll
or
icebp
pop
mov
mov
add
xabort
clc
sub
bound
add
clc
sub
out
bound
add
add
xabort
add
sbb
clc
out
loope
je
mov
popa
add
test
inc
clc
jo
add
add
push
imulb
lods
xor
stos
test
popf
repz
call
ja
cmp
add
lahf
add
add
lea
sbb
or
into
mov
add
and
add
add
mov
lods
dec
fisttps
xchg
add
add
add
clc
je
aad
nop
push
cmp
fwait
jmp
das
sub
pusha
add
lret
movsb
clc
in
adc
add
sbb
mov
push
fwait
jmp
das
fwait
push
clc
jp
inc
clc
mov
cmp
jo
add
mov
push
aaa
fidivl
add
push
jns
mov
cld
push
ret
sub
pop
xor
add
xchg
popf
cmpsl
clc
jmp
push
add
xchg
and
add
add
push
pushf
and
add
test
add
adc
push
arpl
add
add
jmp
xchg
xor
add
pop
sbb
fbstp
add
mov
clc
test
mov
jg
clc
ljmp
mov
adc
add
add
imulb
cmp
xchg
mov
inc
add
fwait
pop
xchg
f2xm1
push
testb
ficoms
add
add
test
cmp
add
filds
clc
fistpll
call
fwait
jmp
xchg
adc
add
clc
movsb
clc
fists
adc
add
add
xchg
insl
and
add
hlt
lea
add
mov
sub
std
fdivl
mov
aam
imul
clc
scas
test
pop
pop
jmp
clc
sar
jae
add
into
jb
add
xchg
mov
add
inc
clc
mov
sbb
and
daa
clc
rolb
add
out
push
insb
out
jle
out
outsb
sub
sub
ljmp
push
ret
and
xor
add
clc
aas
jae
add
cmp
mov
add
clc
std
jno
add
fadds
inc
add
fs
push
gs
xabort
pushf
fwait
repz
push
cld
push
ret
xor
sub
add
add
gs
or
push
ret
repnz
clc
jmp
and
add
cmp
clc
setb
clc
mov
or
mov
pop
clc
test
fwait
jmp
push
outsl
nop
cltd
fs
rorl
push
aaa
jg
lock
sbb
dec
mov
dec
add
add
xchg
pop
inc
add
adc
clc
pop
mov
cmp
add
sub
imul
push
shlb
add
clc
bound
add
add
add
fwait
jmp
jmp
cmp
test
aam
push
push
mov
cld
push
ret
lods
mov
add
add
xor
add
inc
clc
lods
jbe
clc
aad
cmp
xor
cld
ftst
clc
gs
cli
add
add
jo
add
add
add
mov
mov
jg
mov
add
pop
dec
aam
in
pusha
add
aad
clc
adc
add
mov
add
hlt
mov
sbb
add
clc
xchg
cmc
faddl
loope
pop
cwtl
xor
add
clc
repnz
lea
add
add
add
sbb
clc
cli
popa
add
pushf
pop
clc
push
add
xchg
insb
int3
fdivrl
push
add
mov
xor
add
xchg
pop
xlat
push
add
nop
adc
mov
clc
imul
clc
repz
add
add
lcall
jmp
dec
nop
sub
out
pop
clc
fistpl
cs
jae
add
lods
adc
add
clc
pop
dec
mov
clc
ds
and
add
jbe
add
dec
into
jno
add
clc
xchg
movsl
clc
mov
push
packssdw
sub
xor
bound
add
pop
sar
int
add
insl
outsl
sbb
test
jmp
mov
dec
push
mov
add
add
decl
loope
ljmp
pop
sub
data16
jmp
insb
movsb
clc
fnstcw
mov
or
mov
ljmp
xor
add
clc
ficoml
add
clc
xchg
sbb
pop
popa
add
push
push
fwait
jmp
test
sub
out
dec
ja
clc
lcall
or
clc
mov
test
and
push
lcall
add
sbb
dec
hlt
faddl
xor
clc
sahf
mov
clc
jo
add
mulb
add
dec
cli
fwait
daa
clc
aaa
popf
mov
das
pop
mov
add
mov
popa
add
cli
ds
movsl
clc
jge
clc
sar
add
mov
mov
clc
xor
add
cmc
in
clc
fmulp
repz
sub
add
add
jecxz
cmp
mov
pop
xlat
dec
sbb
clc
scas
fsub
clc
arpl
add
bnd
add
add
lret
push
add
push
add
fwait
jmp
or
add
cmp
negl
clc
inc
clc
negl
xchg
sbb
clc
ret
mov
cld
push
ret
jge
xchg
in
test
clc
clc
cwtl
xor
add
lret
add
rolb
or
decl
fwait
jmp
sub
jns
xchg
aas
aad
clc
push
push
cld
push
ret
ja
xchg
jg
jae
in
jge
mov
fyl2xp1
repnz
jb
add
clc
movsb
clc
fs
sar
add
sbb
fnsave
add
inc
add
cmp
clc
leave
xlat
mov
add
add
popa
add
ds
add
mov
fwait
jmp
sub
xor
inc
add
in
aaa
nop
pop
xchg
cmpsb
clc
sti
or
clc
pop
clc
cltd
cmpsl
clc
arpl
add
or
push
div
fwait
jmp
sub
or
mov
fwait
jmp
or
add
mov
clc
data16
sbb
clc
push
add
mov
fwait
jmp
sbb
negb
jge
jnp
clc
xchg
mov
adc
add
addr16
inc
add
addr16
mov
dec
xor
add
clc
mov
jmp
aaa
das
cltd
ds
bound
add
fsts
add
xchg
loop
xlat
in
xor
add
mov
push
pusha
add
fidivs
clc
push
add
xor
add
xor
add
clc
mov
clc
sbb
inc
clc
out
push
jg
clc
sbb
inc
add
mov
lret
add
jp
push
test
or
pop
mov
bound
add
add
add
jb
add
mov
adc
add
call
add
add
in
test
test
mov
clc
es
cmp
push
mov
bound
add
add
or
clc
pop
call
cld
push
ret
sub
cmp
clc
sti
sbb
lock
mov
enter
lret
cwtl
in
jne
jb
add
stc
add
roll
add
clc
jl
in
adc
cmp
inc
clc
daa
clc
push
add
and
sarl
xabort
add
add
add
aad
clc
xor
movsb
clc
add
add
sbb
add
sar
xor
add
bound
add
adc
add
lea
add
shlb
repz
cltd
mov
pushf
sar
pushl
pop
es
inc
clc
cmpsl
clc
fcmove
arpl
add
sahf
or
fs
jns
add
jle
push
clc
lcall
nop
cs
pusha
add
pop
das
outsl
cs
add
add
add
add
add
jmp
movsb
sub
pop
xor
scas
sub
in
inc
clc
lahf
gs
cmp
mov
add
ficoms
add
adc
add
or
clc
stos
aad
clc
mov
test
ja
shll
add
push
ret
fwait
jmp
aaa
or
cmp
sbb
ret
clc
cltd
pop
cmp
ret
clc
icebp
adc
add
insl
jge
add
and
add
pop
or
cmp
add
je
fwait
jmp
fs
xor
push
imul
clc
ficomps
cltd
jno
add
shlb
add
stos
cmc
cmp
xchg
xabort
pop
push
add
mov
idivl
clc
mov
add
stos
lods
xor
add
sub
imul
cmpsl
clc
and
add
push
ret
sub
mov
add
push
add
movsl
clc
pop
fisubrs
clc
nop
adc
add
add
sbb
fwait
jmp
or
clc
rcl
sub
clc
sbb
push
ret
xchg
pop
cwtl
dec
jns
fdiv
dec
xor
and
test
mov
pop
clc
mov
loope
rcl
mov
add
or
add
and
add
clc
ficomps
ds
clc
push
add
mov
add
fisttps
add
js
ja
clc
dec
sub
fs
dec
add
add
test
pusha
add
cmp
hlt
das
outsb
mov
ja
add
jne
mov
stc
pop
mov
push
push
jb
jmp
jg
add
pusha
add
sub
add
jno
add
imul
or
sbb
neg
cmc
add
add
add
data16
dec
aad
clc
mov
data16
pop
clc
sbb
lret
add
jb
add
clc
cmpsb
clc
out
fcoml
jns
add
sub
jbe
add
pop
adc
add
fwait
jmp
sub
sbb
and
add
clc
sbb
add
fwait
jmp
push
ja
xchg
es
adc
pop
mov
clc
add
add
in
imulb
xchg
sub
clc
repz
clc
or
clc
arpl
add
add
mov
xor
clc
push
sbb
dec
outsl
inc
add
mov
clc
cli
scas
es
mov
clc
pusha
add
and
add
pop
push
add
push
clc
xchg
xchg
dec
test
cmp
clc
sub
out
bound
add
clc
and
mov
add
mov
add
or
cmp
sub
xor
clc
ljmp
mov
fistpll
sar
sbb
dec
stos
out
pop
enter
je
add
imulb
clc
pop
push
lea
fwait
jmp
xchg
sub
dec
clc
and
add
add
push
hlt
mov
cmp
cli
lock
dec
ljmp
incl
repz
jmp
sub
sub
pop
or
clc
shlb
cmc
jecxz
cmc
mov
ficomps
lea
clc
in
push
add
xchg
push
push
ret
sahf
sahf
xchg
xor
add
and
add
addr16
pop
int3
push
mov
clc
xor
add
or
clc
pop
push
cmp
fwait
jmp
int3
sub
outsb
xabort
inc
clc
mov
clc
scas
mov
out
repz
imul
out
dec
dec
xor
add
add
add
mov
jae
add
clc
loope
lock
add
add
xchg
or
pop
clc
sbb
mov
adc
dec
cmc
xchg
sar
lahf
sbb
add
add
mov
clc
scas
jmp
lods
and
imul
mov
addr16
outsl
and
add
call
out
mov
cmp
add
cmpsl
clc
mov
add
sbb
add
stc
fisubrs
shrb
clc
in
inc
clc
bound
add
sbb
clc
cltd
and
and
add
ss
aaa
pop
push
add
push
or
xchg
xchg
mov
cwtl
push
add
xchg
sbb
xor
add
clc
push
add
mov
add
das
sbb
jecxz
gs
lods
jp
sbb
test
mov
jecxz
mov
ret
test
add
clc
sbb
sti
divb
clc
mov
fprem1
or
add
or
leave
idivl
add
in
and
add
dec
fwait
jmp
push
pop
lea
jno
add
push
add
sub
xlat
adc
je
clc
iret
and
add
add
mov
fimuls
pop
cmp
clc
mov
push
clc
insl
xlat
gs
into
cs
clc
pop
or
in
orps
clc
and
add
popa
add
sbb
ja
movsb
clc
ds
cmpsl
clc
sbb
pop
and
sti
adc
add
clc
insb
push
add
cmp
add
mov
add
clc
mov
and
add
loope
movsb
clc
lret
jnp
add
mov
in
loope
cmp
imul
mov
add
std
xchg
cwtl
and
add
or
clc
xchg
es
xor
js
xor
add
inc
clc
cwtl
lret
xor
add
add
in
bound
add
push
xor
fwait
jmp
push
pop
outsl
push
push
mov
sbb
rcrb
outsl
sub
pop
notb
add
mov
add
mov
add
mov
sar
cs
pop
cwtl
cli
lahf
std
dec
rcll
jbe
fwait
jmp
sub
add
and
add
inc
clc
imul
in
out
nop
lods
sbb
in
insb
sub
fsubrs
add
clc
enter
add
lock
adc
add
mov
add
inc
clc
pop
push
sbb
clc
outsl
xor
sbb
pop
push
add
and
add
add
mov
stos
aas
fidivrs
add
add
lahf
out
or
js
aaa
aaa
icebp
mov
repz
clc
jp
inc
add
fwait
ret
clc
inc
clc
mov
push
clc
jge
push
insl
mov
and
int
into
pop
add
add
clc
or
decb
aam
push
xchg
xbegin
test
add
add
mov
cmp
clc
xchg
xchg
pop
adc
add
pcmpeqw
addr16
push
add
mov
testl
or
xchg
jecxz
ret
mov
pop
jbe
mov
movsl
clc
mov
in
lea
add
cmp
and
add
add
adc
add
sbb
mov
pop
loopne
sahf
inc
clc
test
test
and
add
clc
adc
add
or
and
sahf
add
push
clc
pop
sbb
clc
inc
clc
ja
add
fwait
jmp
movsb
jno
or
fnstenv
add
mov
shrl
sar
inc
clc
lret
cmp
inc
clc
shrb
ret
clc
or
pop
inc
clc
popa
add
hlt
jl
clc
cs
cmp
add
inc
clc
mov
add
pop
fnstcw
add
lea
mov
nop
dec
lea
mov
out
test
jmp
sub
push
pop
sar
add
xchg
or
xchg
push
aaa
gs
lock
add
add
aaa
xchg
cmp
clc
and
add
imul
add
aaa
or
adc
add
add
xor
clc
inc
add
mov
imul
clc
rorl
inc
clc
call
insl
mov
mov
mov
adc
add
or
sub
xchg
inc
add
daa
clc
or
scas
push
pop
cld
push
ret
lea
xchg
sub
mov
clc
ret
aas
inc
clc
repnz
push
add
mov
idivl
pop
data16
clc
xchg
cld
fistps
add
jmp
outsb
pushf
push
sbb
dec
outsb
mov
imul
jmp
stos
adc
add
xchg
cmp
jae
add
clc
xor
add
scas
add
add
add
adc
add
out
mov
clc
or
add
jge
add
pop
icebp
jp
clc
fdiv
dec
sbb
jmp
push
add
xlat
repnz
clc
cmovg
clc
cwtl
inc
clc
dec
or
xor
clc
xabort
movsb
clc
push
mov
add
sub
clc
inc
clc
scas
movsl
clc
bnd
add
add
add
add
test
mov
clc
sbb
pop
rorb
aam
mov
cmp
jne
add
add
push
cltd
jo
add
lock
js
clc
movsl
clc
inc
add
outsb
adc
loop
iret
popf
and
add
std
fcompl
lods
dec
mov
mov
add
push
add
and
add
mov
sahf
mov
clc
and
lea
add
add
add
insl
jp
push
cld
push
ret
nop
dec
mov
fwait
push
clc
cmp
jmp
fwait
jmp
movsb
cmp
push
fwait
jmp
xchg
sbb
sahf
sahf
dec
test
icebp
test
adc
nop
xchg
pop
nop
and
mov
stos
rol
clc
imul
aas
xor
add
clc
loope
sar
jno
add
dec
aas
push
add
dec
loope
push
ret
clc
imul
mov
arpl
add
insl
lods
cmp
iret
lods
cmp
clc
aam
clc
adc
add
clc
push
add
mov
add
in
jle
data16
scas
mov
jmp
xor
add
clc
leave
sub
aaa
xlat
or
xchg
fsubl
add
inc
add
jns
add
fnstenv
mov
clc
mov
fwait
jmp
sub
daa
clc
repz
clc
mov
clc
mov
clc
in
pop
cltd
out
add
add
popf
ss
sahf
pop
clc
cwtl
mov
pop
testl
dec
decl
mov
cmp
add
bound
add
add
mov
add
xor
add
add
inc
clc
mov
dec
negl
clc
push
mov
or
fwait
sbb
add
fwait
jmp
sub
add
in
call
inc
add
notl
xchg
xchg
mov
sbb
imul
add
fdivrl
clc
mov
clc
shlb
add
mov
ljmp
into
std
mov
mov
fwait
jmp
sbb
pop
bnd
xchg
or
push
dec
outsb
stos
fmul
mov
jmp
xorb
xor
add
out
cmpsb
clc
arpl
add
stc
decb
mov
mov
cmpsb
clc
jge
sub
xor
add
clc
aas
lahf
dec
cmp
dec
cld
sub
add
add
add
add
and
fwait
jmp
jge
adc
add
xchg
int3
xchg
in
stos
sbb
ret
sbb
add
aaa
mov
add
incl
jge
fwait
jmp
aaa
pop
jg
cmp
clc
divl
add
adc
repz
gs
adc
add
pushf
pop
stos
mov
sbb
add
push
out
pop
cld
pusha
add
mov
icebp
inc
add
das
je
xchg
and
add
add
add
das
add
add
fimull
add
jne
test
add
in
int
out
jno
add
cmpsl
clc
mov
push
clc
mov
add
cmp
add
lret
xabort
cmp
pop
sahf
rcrl
mov
and
add
add
xor
add
add
lea
add
push
add
fwait
jmp
loopne
in
aaa
lods
clc
aam
cmp
and
add
add
sar
cmp
arpl
add
cmp
xchg
test
add
cmpsb
clc
in
dec
ret
add
cmp
add
cmp
add
add
or
clc
jp
add
xlat
fs
push
add
mov
popf
mov
fistpll
clc
push
add
test
push
mov
jmp
cmp
test
cmpsl
clc
or
pop
rclb
addr16
cmpsl
clc
mov
sub
push
ret
and
sub
jae
add
sub
jl
clc
fisubrl
icebp
jb
add
add
sub
add
rclb
xchg
rorl
push
xor
xchg
test
or
dec
push
lret
jl
xchg
or
add
add
cmp
xor
add
push
add
xchg
mov
dec
xor
add
imul
fwait
jmp
sub
sub
mov
xor
add
clc
ds
clc
push
xchg
mov
add
cwtl
cmpsb
clc
repnz
add
add
sar
outsb
sub
int
clc
icebp
push
push
add
inc
clc
fwait
lahf
sbb
or
clc
fcoml
add
inc
clc
in
call
cld
lcall
mov
add
leave
cwtl
in
cmp
clc
ret
mov
add
clc
push
fwait
jmp
and
outsb
xor
add
add
xbegin
clc
stos
loope,pn
fadd
clc
out
sub
clc
sbb
clc
mov
into
add
push
lcall
in
sub
sar
fsubrl
sarb
jmp
xchg
sahf
jg
xchg
insl
jl
insb
dec
jb
add
add
add
aas
inc
clc
clc
jo
add
mov
clc
add
add
sar
fildl
ret
cmp
loopne
stos
cmp
inc
add
dec
xor
add
frstor
add
push
test
clc
call
add
xchg
sub
xor
das
sbb
add
add
add
push
nop
jnp
pushf
fiadds
clc
in
sub
or
fsubl
add
pop
std
and
add
and
add
out
iret
es
mov
lahf
popa
add
xor
add
jne
add
nop
cmp
add
cmp
dec
sbb
xbegin
lret
fwait
jmp
and
aas
or
or
jecxz
add
add
mov
add
add
lea
clc
cmp
jl
add
in
mov
popa
add
pop
inc
clc
push
dec
inc
add
mov
add
sub
add
aas
adc
add
pop
out
push
aas
add
scas
test
cld
movsl
clc
mov
add
add
mov
clc
xchg
cwtl
cmp
add
mov
sbb
inc
add
cmp
aas
outsb
xabort
clc
lods
mov
ljmp
push
sar
xor
add
add
test
sar
lcall
add
jp
mov
adc
add
clc
inc
add
inc
add
or
jmp
sub
test
jae
add
cmp
or
dec
cmp
clc
inc
clc
ss
adc
adc
cmp
lahf
push
roll
ret
clc
dec
imulb
clc
sar
clc
in
and
in
cli
pop
adc
add
leave
bound
add
or
repnz
add
add
mov
clc
push
insb
cmp
push
clc
mov
imul
or
push
ret
dec
push
mov
clc
cli
dec
inc
clc
in
rcrl
mov
dec
scas
ret
jp
cld
cmp
jmp
das
scas
insl
repnz
nop
fstl
cmc
stos
mov
add
cli
inc
add
sub
clc
sbb
add
add
mov
clc
lcall
xchg
fdivs
ljmp
jns
je
or
add
sbb
ret
fwait
jmp
scas
sub
pop
mov
clc
ret
clc
add
outsb
out
cwtl
cmc
mov
in
or
clc
mov
inc
clc
dec
repz
add
sub
push
push
ret
insb
sub
in
inc
add
sbb
jp
mov
mov
or
sub
clc
push
icebp
daa
clc
mov
pop
clc
push
add
push
add
xlat
pop
mov
add
or
add
sar
and
add
movsb
clc
dec
or
aam
clc
stc
jecxz
inc
clc
ss
lahf
pop
cmp
mov
mov
jl
lods
sbb
jne
fwait
jmp
sub
jp
ficompl
cmp
jmp
je
add
add
push
add
mov
mov
test
mov
add
jno
add
cmp
dec
cmpsl
clc
movsl
clc
mov
clc
dec
mov
test
mov
fnstenv
pop
dec
sbb
jecxz
in
or
clc
mov
and
jno
add
push
add
push
clc
mov
lcall
add
int3
add
add
add
fstpl
fnsave
add
clc
clc
add
clc
dec
cmpsl
clc
in
adc
add
clc
mov
pop
cmp
add
jle
mov
xchg
xchg
adc
add
add
scas
adc
cmp
mov
add
inc
clc
in
scas
dec
pushf
lods
jmp
xchg
add
add
push
iret
aas
sbb
jb
add
decl
cld
push
ret
sub
loop
insb
sar
clc
cwtl
xchg
sbb
clc
loope
rcrl
xchg
jl
clc
rolb
add
push
ret
pop
fwait
nop
or
add
insb
xbegin
add
clc
dec
cmp
cmp
clc
testl
clc
cmp
pop
push
mov
insb
cmp
mov
cmp
iret
mov
idiv
in
add
add
daa
clc
xlat
cmp
cmpsb
clc
insl
xabort
inc
clc
stos
sub
in
imul
clc
or
clc
loop
pop
push
addr16
cmp
cmpsl
clc
and
add
enter
imul
clc
xor
add
lahf
fisubs
leave
xor
add
add
mov
add
add
in
jp
ret
cmp
add
push
sbb
push
add
fildl
clc
jg
test
pop
or
xor
add
mov
sbb
add
addr16
add
add
jecxz
lret
mov
lock
lods
cmp
dec
push
add
fwait
jmp
popa
sub
cwtl
push
mov
cld
push
ret
insb
sub
add
inc
clc
dec
data16
decb
lock
push
cld
push
ret
sub
dec
fildl
clc
push
adc
add
andb
outsl
push
add
mov
cmp
add
clc
inc
add
pop
fsubrl
add
clc
and
add
movsb
clc
repz
mov
clc
hlt
stos
sub
clc
mov
add
jo
add
jmp
push
fwait
sub
add
xor
add
clc
data16
jnp
pop
push
clc
clc
mov
push
ret
sub
rcrb
scas
popf
ret
dec
sbb
jnp
call
test
pop
add
aad
mov
fidivrs
int
dec
decb
add
mov
sub
std
shll
and
add
out
gs
push
daa
clc
faddl
jmp
pop
insb
add
mov
fwait
jmp
pop
mov
push
push
ret
xchg
sub
clc
aam
and
add
clc
sar
clc
fsubrl
cwtl
shll
add
add
mov
clc
xor
add
add
lret
clc
arpl
add
dec
std
sub
cld
fs
insb
lahf
ret
clc
gs
movsb
clc
push
mov
or
fwait
clc
xlat
add
and
add
lret
inc
clc
push
clc
mov
roll
cmp
add
sar
mov
in
inc
clc
outsl
sar
push
add
clc
jmp
sbb
inc
clc
mov
jb
add
clc
imul
cwtl
jnp
xor
add
push
mov
add
mov
pop
mov
inc
clc
mov
ret
clc
inc
add
js
scas
xor
add
clc
mov
pop
cmp
add
jb
add
int3
inc
clc
loopne
arpl
add
test
movsb
clc
add
add
pop
sti
jnp
jnp
sbb
add
adc
bound
add
add
mov
clc
pop
push
add
xor
ficompl
adc
add
leave
movsb
clc
push
add
pop
mov
or
jle
sbb
cmp
clc
in
sbb
push
sar
out
fildll
inc
add
mov
leave
sub
ja
add
push
clc
movsl
clc
add
scas
aam
in
adc
add
sub
jno
add
jb
add
pop
jo
add
imul
pop
xchg
and
pop
xchg
dec
cmp
add
sar
jmp
adc
add
cmp
loop
mov
add
call
addr16
mov
xchg
dec
adc
add
fwait
jmp
cwtl
jg
stos
into
xchg
mov
clc
or
shrb
add
movsl
clc
jbe
es
fldt
fldt
adc
add
add
cli
ret
clc
pop
fisubs
jnp
pop
cmp
jo
add
bound
add
sub
fsub
clc
lcall
add
arpl
add
dec
add
add
add
or
in
fwait
mov
fadds
add
decl
push
add
jno
dec
adc
clc
and
add
inc
add
push
clc
jl
clc
mov
or
clc
data16
pop
mov
iret
bound
ret
sahf
popa
aaa
xor
add
add
imul
add
push
sbb
sti
xor
enter
clc
jae
add
insb
jmp
xor
add
push
fwait
jmp
add
sub
lods
inc
clc
pop
into
mov
add
fwait
jmp
test
add
cwtl
addr16
out
push
jns
negl
xor
add
call
sarl
sbb
add
in
repnz
inc
clc
xbegin
add
xchg
xor
add
outsb
adc
add
rorl
pop
std
repz
dec
cld
push
ret
inc
mov
jge
clc
lahf
rcr
in
outsb
add
add
add
sar
js
mov
cld
push
ret
sub
jl
test
mov
xor
add
mov
add
fwait
jmp
bound
add
test
fwait
jmp
push
sub
lods
dec
aam
test
push
add
fidivl
clc
mov
add
add
cltd
pop
xchg
outsl
cmp
pop
iret
lahf
das
lret
xabort
xbegin
cmpsb
clc
shr
xchg
push
shrb
movsb
clc
stc
scas
cli
dec
nop
cli
mov
loop
popa
add
sbb
fwait
jmp
sub
add
and
add
enter
ret
add
add
add
and
add
add
add
mov
add
jl
mov
fwait
jmp
and
xor
decl
test
loope
lcall
add
add
add
sub
sub
clc
fsubl
add
add
add
push
sub
clc
loop
mov
cmp
clc
ljmp
mov
add
fwait
jmp
sub
add
or
decl
inc
xabort
mov
mov
pop
nop
daa
clc
dec
scas
cmp
push
arpl
add
add
loope
inc
add
adc
add
ljmp
and
in
mov
cmp
add
cld
push
ret
pop
push
mov
mov
sar
ljmp
ljmp
clc
xabort
jns
aaa
fstps
stos
cmpsl
clc
push
and
add
add
clc
and
add
jbe
add
mov
mov
and
add
add
movb
lea
add
sub
icebp
test
mov
cld
xchg
jge
icebp
lods
dec
add
add
add
je
cmp
mov
clc
jne
or
sub
xchg
ds
push
dec
sbb
fwait
jmp
es
add
arpl
add
clc
bound
add
add
push
jo
add
add
dec
int3
xor
add
add
clc
es
daa
clc
xchg
aas
jecxz
ss
scas
mov
jl
push
mov
fwait
jmp
das
test
inc
add
call
addr16
lret
add
jne
fwait
jmp
dec
inc
add
test
cmp
clc
leave
clc
hlt
movsl
clc
xlat
je
clc
dec
loopne
es
cltd
adc
xlat
push
decl
stc
lock
decl
sub
or
push
add
test
es
xlat
lret
fidivs
xor
cld
push
ret
jg
cmp
add
movsb
clc
push
addr16
lahf
outsb
jp
clc
jb
add
add
fnstcw
adc
add
add
in
into
pop
cmp
mov
clc
ljmp
stc
mov
out
sbb
jmp
or
fcmovbe
pushf
or
xchg
jo
add
enter
add
cmp
add
add
clc
sbb
pop
sub
clc
mov
clc
rcl
push
shlb
pop
jmp
jbe
clc
ljmp
popf
inc
add
pushf
add
add
pop
inc
add
or
push
clc
clc
sub
clc
fidivrl
inc
clc
test
imul
clc
mov
clc
decb
jnp
or
add
jl
sbb
add
xadd
icebp
mov
clc
imul
jp
cmp
insb
ds
sbb
data16
incb
add
ret
clc
clc
or
clc
jno
add
mov
cmc
sub
insb
jp
pop
xbegin
clc
mov
clc
or
add
mov
xchg
cmp
call
fwait
jmp
jg
sub
dec
aam
clc
or
mov
cmp
je
clc
stos
adc
xor
add
xchg
in
xchg
data16
pop
sbb
inc
clc
iret
xor
add
add
jg
clc
cmp
clc
decb
inc
add
pop
gs
cmp
sbb
fwait
jmp
cmp
bound
add
pop
test
jg
jbe
add
sbb
lcall
call
dec
ret
clc
lahf
jbe
lret
sbb
cmp
mov
add
add
pop
in
jp
fdiv
mov
clc
lea
out
sbb
test
fcos
lcall
pushl
add
sbb
add
inc
clc
nop
mov
sbb
jae
add
clc
cmp
fwait
jmp
adc
inc
addb
bound
add
mov
add
lea
add
pop
sub
ljmp
add
adc
nop
in
inc
add
mov
mov
clc
cld
ret
clc
fdivr
push
fwait
jmp
sub
xor
add
xchg
nop
cld
fsubrl
test
or
clc
fwait
xchg
xchg
pop
clc
push
insb
outsb
insl
js
adc
add
outsl
inc
clc
and
add
push
cmc
xchg
add
loop
jmp
in
lods
fdivs
sbb
std
incl
je
pop
mov
push
clc
sti
stos
and
add
add
push
add
sar
fstps
rcll
out
add
add
add
aad
adc
add
inc
cld
push
ret
fwait
or
jae
add
sti
xchg
jns
data16
stos
mov
sub
clc
aas
js
mov
xor
add
add
int3
insb
dec
dec
xor
add
push
add
and
add
popf
xor
push
loopne
lock
add
into
fidivs
add
pop
add
and
mov
stc
sar
add
rorl
clc
mov
loop
mov
or
push
dec
inc
clc
inc
clc
insl
mov
clc
push
das
stos
add
add
loopne
loopne
test
clc
shrb
dec
fsubs
add
pop
fstpt
jg
jb
add
clc
or
fadd
clc
stos
xbegin
inc
clc
pop
lcall
add
inc
clc
rolb
clc
pop
cmp
cmp
push
add
int3
push
push
add
out
pop
xchg
loop
add
add
add
add
enter
add
mov
out
arpl
add
push
ds
add
add
add
data16
pop
daa
clc
je
fsub
clc
xchg
clc
xchg
pop
mov
clc
add
add
clc
mov
clc
add
add
push
ret
cmp
dec
test
cmpsl
clc
xchg
idivl
outsl
mov
jmp
inc
push
sbb
add
negb
loop
pop
fistpl
movsb
clc
add
add
add
push
mov
fwait
jmp
ja
ret
fstl
add
insb
and
pusha
add
ret
mov
lret
mov
xchg
xor
lods
pop
iret
xchg
lret
leave
and
mov
clc
addr16
dec
mov
add
jbe
imul
inc
clc
sub
cmp
add
ficoms
add
sub
xchg
cltd
in
int
lcall
dec
sub
rep
xabort
adc
lcall
add
scas
sar
xor
add
add
add
and
add
aas
gs
xor
add
clc
and
add
scas
sar
clc
cmp
data16
data16
xbegin
cld
push
ret
aas
lods
or
gs
push
add
dec
xor
add
add
ret
add
ja
pop
cmp
clc
dec
int3
inc
clc
inc
add
sbb
add
out
out
dec
stos
adc
add
add
in
push
add
mov
clc
imul
add
add
push
scas
add
add
clc
rorb
clc
xchg
cmc
lods
int3
cs
addr16
pop
cmp
clc
mov
jg
add
pop
sar
push
add
gs
xlat
out
ds
sub
clc
inc
clc
sbb
clc
sahf
pop
pop
popf
repnz
clc
mov
jecxz
stos
mov
mov
add
imul
clc
enter
dec
xchg
lods
out
inc
clc
icebp
cmc
or
insl
out
cmp
xchg
inc
add
jb
add
clc
pop
adc
add
mov
clc
repz
and
sub
add
fiaddl
ret
clc
and
add
test
clc
aam
ljmp
inc
add
xor
sahf
scas
aaa
ret
aam
or
clc
jo
add
clc
jl
gs
adc
add
clc
push
mov
add
inc
add
movsl
clc
loopne
ret
mov
dec
sub
add
popf
jmp
clc
add
add
clc
xlat
pushf
xchg
jl
clc
stc
jbe
stos
idivb
aas
push
add
add
add
add
add
dec
ret
clc
out
and
pop
cmp
and
add
clc
pop
pop
lcall
clc
insb
cmp
mov
jno
add
add
jmp
cmp
clc
mov
and
jo
add
jmp
mov
and
add
add
push
je
or
rcrb
add
pop
je
ret
clc
repnz
loop
or
and
xchg
in
jne
jg
xor
outsl
aas
pop
into
incl
nop
xor
add
sbb
clc
data16
add
dec
sbb
sub
add
add
clc
das
clc
test
pop
insb
mov
push
add
jnp
mov
cld
push
ret
push
jp
jp
xbegin
add
sbb
sub
iret
sub
stos
cltd
dec
sti
movsb
clc
je
outsl
xor
add
std
pop
clc
addr16
decb
xchg
adc
add
xor
add
cmp
cmp
dec
mov
xchg
adc
add
decl
mov
sub
ljmp
pop
ss
clc
in
mov
clc
aas
cs
shll
and
mov
fwait
jmp
or
mov
data16
fisubrs
or
xor
outsl
xchg
xchg
jnp
jl
clc
mov
add
sbb
pop
mov
push
inc
add
ret
clc
mov
mov
clc
jge
shr
fwait
jmp
dec
popa
push
dec
add
add
push
jo
add
inc
add
jno
add
test
push
repz
dec
dec
xchg
sbb
outsb
xchg
fisubl
rclb
pop
or
dec
pop
fildl
add
add
dec
fstl
add
fsubrp
insl
mov
clc
sub
out
lcall
xchg
inc
in
fwait
jmp
jge
mov
adc
lcall
cmpsl
clc
xor
add
push
jmp
fwait
jmp
sub
dec
mov
mov
inc
clc
or
add
bound
add
aaa
mov
test
imul
arpl
add
add
dec
push
add
add
sbb
aad
ss
xor
add
inc
clc
ret
imul
and
add
mov
adc
add
in
mov
cmp
clc
xlat
sbb
je
sub
add
jg
add
scas
adc
add
add
and
or
clc
loope
in
xchg
sbb
ljmp
sub
incl
adc
mov
add
mov
mov
xlat
ljmp
sub
xchg
inc
add
mov
pop
xlat
pop
jp
pop
clc
and
add
dec
mov
lcall
call
cli
or
jns
mov
add
fwait
jmp
es
aas
cmp
push
in
dec
xor
add
push
or
clc
pop
cmp
add
xchg
mov
popa
fwait
jmp
xor
scas
sub
fdivl
dec
adc
add
scas
pop
pop
clc
xor
add
add
dec
out
mov
mov
adc
add
clc
cmp
aad
sbb
cltd
xchg
js
clc
xchg
repz
rorb
shl
add
aam
clc
mov
clc
int
fmul
pop
mov
and
add
or
call
cli
jo
add
clc
and
add
add
cmp
add
dec
stc
daa
clc
iret
mov
movsl
clc
psraw
push
add
test
es
add
add
sub
add
fstpl
clc
xchg
jae
add
add
push
fildl
inc
add
cmp
clc
sahf
xor
add
movsb
clc
repnz
or
clc
das
jge
fdiv
mov
mov
mov
sbb
add
clc
sub
clc
loope
scas
fstpt
shll
mov
mov
clc
dec
and
mov
cli
sub
and
add
add
jnp
cmc
icebp
in
inc
clc
mov
cli
fisttpl
and
add
jg
call
push
ret
cwtl
lea
jmp
iret
jae
add
add
je
fwait
jmp
out
mov
repnz
add
shll
clc
xchg
insb
mov
clc
xor
add
sbb
mov
fwait
jmp
adc
test
call
daa
clc
add
add
xabort
leave
fs
adc
add
add
add
add
lret
shlb
add
sub
jns
clc
xbegin
pushf
inc
clc
fnstcw
ret
push
clc
lock
mov
xchg
xchg
lods
inc
add
or
jg
jne
clc
imul
and
add
xchg
rcrl
dec
push
cmp
pop
stc
mov
add
add
add
dec
adc
add
cwtl
ljmp
pop
jg
std
push
cmp
clc
mov
fwait
jmp
sub
es
stos
ret
clc
mov
call
js
add
dec
out
cmp
stos
dec
or
push
dec
bound
add
clc
cld
ret
mov
push
clc
arpl
add
clc
xchg
dec
addr16
into
push
cmp
dec
int3
test
sbb
adc
add
cltd
mov
pop
cld
push
ret
and
das
nop
pop
je
add
aad
in
loope
xchg
or
clc
jns
shr
fwait
jmp
or
adc
add
clc
int
divb
test
sub
leave
cmp
jmp
push
add
xabort
clc
lcall
sbb
clc
into
adc
ret
pusha
add
daa
clc
call
int3
addr16
ds
pop
clc
call
push
add
dec
sahf
and
sub
or
pop
cmp
mov
lcall
outsl
mov
sar
or
cmp
add
jmp
clc
dec
jecxz
sub
clc
xlat
dec
mov
lret
movsb
clc
imul
test
dec
xchg
mov
mov
clc
imul
into
aam
cmc
xor
add
clc
mov
sti
xchg
mov
add
add
clc
and
clc
imul
clc
repz
adc
add
clc
cmp
clc
mov
clc
mov
lcall
pushl
cld
push
ret
add
add
test
fidivs
add
push
ret
or
pop
aaa
test
int
jo
add
lahf
push
add
outsb
push
pop
inc
clc
and
add
stos
stc
int
cmp
test
clc
and
pop
outsb
add
add
clc
pop
daa
clc
das
pop
cld
scas
pusha
add
xlat
test
fwait
popa
add
outsl
clc
mov
add
clc
inc
clc
cltd
mov
clc
data16
data16
test
jge
cmp
add
add
add
clc
pop
addr16
jg
pop
aad
clc
repnz
and
add
clc
cmp
aad
jo
add
clc
inc
clc
cmp
mov
fistps
repz
xor
add
clc
mov
xor
add
jp
and
add
inc
clc
or
paddq
and
add
fisubs
add
add
clc
enter
add
sub
out
and
add
in
sar
add
xor
add
ds
push
clc
test
add
push
jae
add
int
clc
jp
sbb
add
cmp
clc
sub
add
lea
clc
sub
pop
lea
cld
test
sar
bound
add
clc
pop
push
pushf
pop
frstor
add
add
clc
sub
xor
add
add
dec
cltd
repz
data16
jnp
clc
inc
add
push
fs
xchg
lret
clc
push
add
fwait
jmp
mov
cmpsb
clc
push
sbb
cmp
pop
mov
pop
fwait
jmp
xor
push
cwtl
cmp
xor
or
push
add
bound
add
and
add
adc
add
fdivrs
mov
decl
je
add
add
sbb
jmp
pop
xor
xchg
push
in
cltd
cli
fwait
and
inc
clc
push
mov
pop
addr16
mov
push
clc
push
add
xchg
loopne
dec
pop
clc
clc
ficoms
pop
ret
lock
and
mov
adc
add
clc
mov
popa
add
jp
mov
popa
add
inc
clc
leave
add
mov
xchg
in
jne
clc
in
enter
imul
add
rcll
push
add
jecxz
cmp
add
or
clc
in
in
sub
clc
mov
add
add
repz
add
movsl
clc
xor
add
xchg
repnz
movsb
clc
xchg
push
add
dec
rcrb
clc
jp,pn
push
add
cmp
out
jns
xbegin
add
gs
dec
nop
xchg
push
add
lahf
sbb
aaa
cwtl
clc
loope
mov
clc
sti
dec
xor
add
aas
jno
add
clc
push
jmp
add
ss
dec
out
mov
add
sub
dec
sub
add
add
addr16
or
xor
sbb
clc
mov
jecxz
cli
mov
cmc
ret
sub
mov
push
add
dec
jns
add
sar
mov
popa
add
insl
inc
clc
das
idivb
pop
or
clc
mov
push
fwait
jmp
sbb
and
push
ret
inc
pop
dec
data16
jbe
test
jns
clc
mov
add
xchg
jp
add
sbb
add
movups
add
pushf
popa
add
fnstenv
add
test
fwait
jmp
push
cmpsb
sub
pop
bound
add
clc
in
jns
dec
fwait
jmp
adc
add
inc
clc
outsl
insl
jp
add
cmp
sub
add
jnp
jne
cmp
sbb
clc
dec
and
add
xchg
xchg
mov
inc
add
lret
shl
clc
sbb
nop
add
fwait
jmp
jp
add
push
push
clc
and
add
popa
add
insl
sahf
movaps
cmp
xor
add
add
sub
add
adc
add
clc
sbb
add
inc
add
imul
xchg
mov
jmp
adc
popa
add
pop
jmp
clc
push
cltd
dec
pop
cmp
fxch
xchg
int3
fistpll
out
inc
clc
fdivs
ljmp
mov
clc
mov
jmp
clc
dec
jae
add
test
or
mov
clc
int
add
stc
or
xbegin
or
add
add
add
xchg
push
je
add
neg
add
add
add
call
add
dec
adc
add
xchg
or
sbb
add
sbb
fdivrl
inc
clc
push
clc
dec
lea
mov
lock
add
push
or
cmp
xchg
out
push
add
mov
sub
add
data16
sub
clc
lea
push
add
jb
add
test
xor
add
add
dec
popa
add
or
sti
mov
ret
clc
xchg
leave
add
add
clc
xor
jnp
jb
add
jae
add
push
add
mov
clc
pop
in
mov
clc
pop
and
add
ljmp
lret
xor
add
push
add
aam
add
xor
add
insb
xbegin
push
sbb
stc
shrl
or
add
mov
clc
fadd
clc
dec
and
icebp
pushf
bound
add
xor
clc
in
test
push
sar
sbb
stos
push
jae
add
add
mov
decl
fwait
jmp
sub
repnz
and
add
clc
clc
add
add
pop
gs
cmpsb
clc
lret
push
add
mov
add
or
add
es
inc
clc
mov
sar
call
ret
clc
out
stos
xchg
leave
stos
add
mov
mov
add
cmpsb
clc
jae
add
clc
pop
xchg
dec
xchg
add
add
sarb
sub
inc
add
mov
clc
mov
push
sub
push
ret
jge
sbb
hlt
mov
shll
add
fcmovu
jge
add
sub
arpl
add
add
not
dec
mov
inc
add
call
mov
cmc
gs
sbb
xchg
aas
lcall
sbb
fs
mov
clc
aas
lods
adc
add
clc
cmp
xor
jne
test
test
lahf
jne
inc
add
pop
push
add
data16
push
aad
mov
fwait
jmp
push
ret
mov
push
ret
xor
lock
add
cmpsb
aas
sub
cmp
adc
add
negb
mov
clc
jg
add
data16
sub
add
jle
clc
cmp
xchg
xchg
lahf
push
add
int
int
sahf
loop
mov
clc
pop
fsubr
dec
xchg
das
jb
add
add
cltd
lock
gs
sbb
add
add
add
add
inc
add
hlt
dec
movsl
clc
push
aaa
mov
xor
add
shll
sbb
faddp
clc
push
clc
sarl
arpl
add
add
clc
sub
clc
adc
add
cwtl
cmp
adc
int
adc
add
add
add
push
add
in
inc
add
push
mov
mov
dec
sub
xor
add
adc
add
add
adc
xor
add
add
leave
xlat
movsb
clc
jmp
jmp
popaw
dec
push
push
repz
test
lcall
ljmp
imul
pop
popa
add
dec
imul
mov
insl
into
cmp
add
adc
add
add
and
add
adc
add
and
add
or
scas
stos
adc
add
clc
shll
add
movsl
clc
push
add
clc
shlb
add
jp
clc
decb
je
clc
ret
clc
xchg
mov
push
ret
adc
loope
stos
insl
rorl
add
clc
fs
xchg
decl
push
ret
dec
mov
sub
add
add
and
add
sar
icebp
fisubrl
out
xchg
lcall
add
add
adc
add
div
fwait
jmp
push
cwtl
cmp
pop
pop
cmp
sbb
clc
cltd
lret
adc
add
ds
clc
pop
clc
mov
cmc
stc
pop
ret
clc
mov
idivl
jbe
mov
lock
decl
mov
shrb
clc
call
clc
pop
jns
test
imul
clc
jg
clc
movsl
clc
mov
add
mov
test
out
xor
add
ja
test
cs
mov
add
fimull
pop
xor
add
xchg
jmp
sar
jnp
push
mov
mov
add
inc
clc
xchg
mov
mov
add
clc
ficomps
sub
push
push
cld
push
ret
dec
mov
jmp
clc
cwtl
call
push
ret
xor
push
push
and
add
clc
icebp
ljmp
fwait
jmp
inc
jb
add
lahf
loop
xchg
xlat
nopl
add
fldt
outsl
das
sti
lock
add
popa
add
mov
clc
pop
clc
cmpsb
clc
ds
ds
inc
clc
shrl
cmpsl
clc
push
add
add
adc
fldlg2
pop
clc
xor
add
icebp
cmp
or
cmp
clc
push
inc
add
popf
arpl
add
add
push
add
int3
ss
add
icebp
enter
adc
add
cmp
sar
sbb
add
and
add
inc
add
or
mov
add
clc
cmc
sbb
fsubrl
clc
mov
clc
daa
clc
aam
daa
clc
out
cwtl
in
add
bound
add
jne
xchg
bound
add
je
add
call
mov
jnp
inc
add
ljmp
jo
add
add
sub
shlb
jae
add
clc
fisttpl
push
ret
gs
add
add
clc
inc
add
pop
imul
clc
push
dec
stos
cli
fmul
jle
add
das
jp
cmp
clc
or
lcall
dec
cmp
add
add
add
add
add
add
int
add
inc
add
inc
clc
sub
out
sbb
jne
mov
add
cld
push
ret
xchg
jg
push
mov
fwait
jmp
sub
sub
adc
mov
incb
add
xchg
mov
dec
mov
clc
shlb
add
bound
add
xbegin
shrb
cmp
das
pop
or
ja
inc
clc
mov
pop
mov
push
ret
sub
mov
xchg
in
jbe
xor
add
mov
fwait
jmp
or
mov
add
jmp
es
push
add
sbb
es
jnp
pop
mov
clc
xchg
insl
arpl
add
movsl
clc
push
add
adc
add
clc
aaa
dec
sbb
out
test
dec
iret
mov
add
dec
sahf
repnz
notb
mov
cmpsl
clc
gs
push
and
add
adc
add
cmp
mov
out
movsb
clc
shlb
inc
add
push
add
cmp
clc
lea
mov
adc
push
add
movsb
clc
sub
mov
add
push
mov
cmp
add
popf
pop
adc
add
clc
jmp
ds
popa
add
jbe
jns
lock
clc
xor
add
clc
popa
add
push
add
notb
outsl
jbe
je
cwtl
inc
clc
movups
add
xchg
mov
mov
pop
add
add
dec
sub
jo
add
clc
enter
sub
clc
in
xor
add
mov
add
sbb
clc
pop
push
leave
repnz
cmp
sar
clc
int
add
add
clc
add
and
add
xbegin
test
jnp
add
push
call
fwait
jmp
jno
dec
adc
fcoms
adc
add
clc
mov
lahf
fucom
clc
lods
outsl
imul
adc
push
cld
push
ret
or
mov
add
mov
jmp
add
add
add
mov
mov
jno
add
add
add
add
sbb
mov
add
mov
add
lret
scas
iret
iret
push
outsl
loop
jp
mov
clc
movsl
clc
pop
dec
mov
pop
dec
std
sar
add
and
cld
out
xchg
gs
cltd
cmp
clc
repz
add
push
pop
out
push
add
cmp
or
add
add
add
add
clc
push
mov
sub
sub
push
add
xor
add
sub
fwait
jmp
subb
cmp
fisttps
clc
pop
inc
add
push
stos
insl
add
add
mov
add
add
add
xchg
and
add
clc
ljmp
jecxz
push
add
data16
jg
clc
sarl
repnz
ljmp
movsb
imul
sbb
testb
rdtsc
add
lahf
or
std
gs
xchg
cmpsb
clc
push
in
stos
push
push
cld
push
ret
pop
dec
push
sub
clc
inc
add
pop
in
mov
jle
in
rorb
dec
repz
icebp
jp
xor
clc
dec
in
mov
pop
out
fbstp
js
mov
fwait
jmp
and
cltd
pop
mov
adc
sar
clc
lahf
ret
clc
js
clc
xchg
ja
mov
jmp
adc
add
push
add
dec
jge
clc
xchg
popf
mov
clc
xchg
mov
lret
xor
add
push
pop
inc
add
add
mov
pop
sbb
add
test
add
test
pop
in
xor
add
clc
pop
dec
test
clc
jp
clc
sti
cmc
clc
xor
add
iret
dec
and
xor
mov
push
clc
sbb
ss
add
imul
add
push
add
ds
pop
xchg
adc
add
arpl
add
add
ret
clc
lea
jle
movsb
clc
dec
inc
clc
jb
add
push
and
add
dec
cmp
cmpsb
clc
jae
add
mov
add
stos
aas
jp
xor
add
clc
xchg
cmp
ffree
clc
xchg
cmp
addr16
out
popf
mov
out
mov
ret
xchg
xchg
lea
cld
pop
aam
clc
xor
add
clc
ret
nop
cmp
adc
add
sar
add
and
add
pushl
cld
push
ret
movsb
sbb
add
sub
inc
add
ffree
clc
cltd
and
add
stos
int
scas
mov
push
add
outsb
sar
clc
xlat
pop
mov
fwait
jmp
sub
jge
mov
adc
cmp
clc
incl
jo
fwait
jmp
inc
outsl
xor
add
jmp
xabort
add
jmp
sar
and
in
pop
xchg
sar
add
rolb
add
and
add
add
add
popf
push
shll
add
data16
out
lock
xabort
aam
pop
xlat
pusha
add
mov
or
add
scas
adc
add
clc
mov
add
jno
add
aam
add
and
add
mov
jmp
and
add
arpl
add
dec
out
pushf
xchg
cld
inc
add
inc
add
int
clc
into
loope
pop
xchg
mov
mov
mov
add
mov
dec
ljmp
and
cld
push
ret
es
stos
je
add
add
adc
add
clc
push
fwait
and
add
sub
das
cmpsl
clc
std
mov
push
mov
lods
sub
add
cltd
xchg
jle
in
and
add
pop
clc
or
fisttpl
sar
and
les
add
add
incl
clc
cmpsb
clc
repz
clc
rcl
loopne
loopne
cmp
clc
dec
arpl
add
pop
jmp
and
add
pop
outsl
add
add
add
and
push
add
into
xor
add
add
leave
insl
inc
add
pop
mov
jne
fwait
jmp
cmp
stos
fwait
sub
mov
fwait
jmp
inc
das
add
adc
add
xchg
add
add
popf
test
sbb
push
pop
cmp
sub
add
xor
xchg
daa
clc
std
adc
add
add
add
int
jge
add
enter
sbb
jge
xor
add
add
push
std
scas
test
add
add
fistl
add
mov
clc
fiaddl
fwait
pop
clc
jmp
add
incl
dec
cmp
jmp
mov
sub
es
mov
outsl
adc
add
int3
sub
scas
mov
cmp
clc
add
add
cld
push
ret
adc
add
xchg
test
movsb
clc
adc
add
repz
and
add
add
jbe
ret
clc
add
clc
cmc
insb
ss
out
pop
icebp
cmp
and
cltd
std
add
clc
movsl
clc
mov
mov
ret
clc
and
add
xchg
add
add
pop
imul
lcall
add
inc
movsb
clc
mov
nop
jecxz
stos
call
push
mov
or
mov
jle
add
jle
scas
dec
pop
xor
add
bound
add
add
repz
in
mov
add
add
add
addr16
gs
mov
clc
daa
clc
fistps
mov
fwait
jmp
scas
sub
sbb
add
jg
add
push
std
jns
and
add
orps
ror
fwait
jmp
nop
add
sbb
sbb
add
push
add
loope
lcall
mov
decb
test
sbb
add
cld
daa
clc
adc
add
and
fstps
sub
clc
mov
xor
add
movsb
clc
enter
mov
clc
sbb
add
and
popf
rorl
add
shrb
push
cld
push
ret
sub
cmp
add
lea
add
push
sub
add
jns
add
cwtl
pop
jbe
fs
test
dec
push
mov
sub
push
add
stos
in
push
add
repz
clc
loop
cmp
aas
outsl
mov
add
dec
pusha
add
mov
les
jmp
je
popa
out
aaa
div
dec
pop
or
add
jge
dec
stos
and
ss
mov
fwait
jmp
pop
inc
sub
outsl
into
insb
jecxz
test
sar
push
sar
inc
cld
push
ret
jno
adc
push
aas
test
mov
scas
xchg
jg
cs
in
jg
clc
inc
add
aam
sub
inc
clc
xor
add
add
aaa
test
push
add
fnstsw
lods
fiadds
add
mov
push
add
push
add
mov
clc
mov
add
fwait
jmp
mov
icebp
aam
arpl
add
add
clc
das
es
push
decl
or
ret
dec
mov
movsl
clc
test
clc
ljmp
add
pop
enter
add
xchg
xor
add
clc
adc
or
outsl
jmp
aad
mov
rorl
bound
add
call
add
pop
xor
add
ds
bound
add
nop
mov
sbbb
cmp
clc
je,pn
add
adc
add
fadds
xor
add
clc
and
add
aad
jns
clc
ja
push
clc
inc
clc
mov
mov
clc
aad
dec
std
xabort
clc
in
sar
ret
clc
and
cmp
clc
push
pushf
push
add
mov
je
clc
mov
arpl
add
add
imul
repnz
add
xor
add
push
cld
push
ret
sub
push
adc
add
jg
sub
clc
imul
shll
clc
xchg
cld
ffreep
clc
push
add
fs
sti
cmc
iret
mov
clc
rclb
cli
loop
pusha
add
test
shl
clc
sti
xor
add
pushf
xabort
clc
mov
pop
push
xchg
add
add
xor
add
jp
and
insl
xbegin
clc
sbb
fs
jbe
add
and
add
fidivs
add
fwait
sub
add
sbb
dec
lret
clc
and
mov
and
add
leave
fwait
push
xabort
pop
sbb
add
cmpsb
clc
xchg
jbe
add
and
add
pop
nop
inc
add
dec
movsl
clc
leave
pop
daa
clc
inc
clc
fisttps
clc
repz
add
fwait
jmp
xor
loopne
cmp
add
add
sub
imul
push
cld
push
ret
sub
pop
push
clc
inc
clc
pop
inc
add
or
jno
add
stos
or
xor
push
fnstcw
lods
or
add
inc
add
xchg
mov
add
add
clc
shll
clc
inc
add
fdivrs
clc
xchg
sub
add
sbb
clc
sahf
loop
pop
jb
add
fsubrl
xchg
daa
clc
jecxz
pcmpeqd
adc
mov
fwait
jmp
test
jo
add
add
adc
clc
xor
add
loope
fmuls
js
clc
and
sbb
jb
fwait
jmp
adc
test
and
add
sarb
push
test
add
clc
cmp
add
lret
cmp
lcall
add
fisttpl
mov
lea
pop
pop
clc
loop
movsb
clc
test
push
fwait
jmp
push
je
aaa
loope
stos
mov
das
inc
clc
inc
add
dec
mov
push
test
push
add
repnz
jp
clc
pop
mov
into
js
mov
in
shll
pop
popf
into
pusha
add
sub
clc
cmp
mov
cld
push
ret
or
clc
fwait
out
ja
clc
add
cmp
add
add
jp
clc
ja
clc
mov
inc
clc
popf
fwait
imul
xor
add
add
clc
idivb
in
int
je
add
fcoml
add
or
add
cmp
cmp
add
mov
fwait
jmp
sub
pop
clc
cli
iret
cmp
jb
add
adc
add
sti
sub
pop
xor
repz
add
dec
xor
push
pop
cli
loopne
mov
add
add
fwait
jmp
sub
clc
pop
pop
sub
xchg
add
add
cmp
mov
add
ret
clc
push
jmp
or
xor
add
or
clc
push
add
fwait
jmp
sub
lods
stc
xchg
adc
add
movsl
clc
xor
add
push
push
cld
push
ret
dec
xorb
and
add
fistpll
ret
clc
xchg
cmp
dec
push
jmp
push
cmpsb
sbb
test
popf
stos
adc
add
add
adc
add
fs
outsb
jns
sub
clc
test
aad
test
xor
add
fs
jnp
dec
imul
imul
clc
hlt
mov
xor
cmp
mov
fwait
jmp
add
push
push
flds
mov
add
arpl
add
and
add
add
mov
aam
cmp
addr16
out
lret
sub
push
rclb
clc
jmp
add
imul
sub
mov
clc
dec
dec
inc
add
fs
fists
arpl
add
clc
add
add
add
mov
pusha
add
mov
xor
inc
clc
imul
jae
add
add
dec
mov
ja
pushf
aas
lods
pop
fldl
mov
jmp
insb
sub
jb
add
add
fcoml
add
and
jle
add
add
xchg
or
inc
add
mov
and
add
and
add
clc
dec
sar
push
add
test
iret
sub
inc
add
add
add
cmp
adc
add
clc
mov
mov
mov
jge
add
add
clc
xchg
mov
clc
fmuls
mov
push
aad
lcall
test
jge
mov
clc
inc
add
pusha
add
in
cmc
leave
pcmpeqd
pop
jo
add
inc
add
cmp
arpl
add
xor
add
clc
lret
ds
add
mov
add
add
adc
add
popa
add
mov
add
dec
gs
xor
add
call
push
pop
cld
push
ret
es
inc
sub
cmc
aas
add
rclb
mov
add
sub
add
mov
jp
and
add
cmp
add
sub
clc
mov
xchg
es
dec
addr16
push
add
sub
jecxz
adc
add
out
pop
dec
adc
add
and
sub
add
add
das
cmpps
add
mov
add
in
aas
mov
insl
mov
add
sahf
sub
add
data16
mov
fcmovb
clc
imul
mov
push
add
xabort
cmp
lods
push
add
roll
add
test
leave
xor
jb
add
outsb
daa
clc
xor
clc
fnsave
sub
lods
mov
mov
mov
add
cmp
clc
xor
jne
add
xor
hlt
sbb
add
jne
outsb
out
divb
daa
clc
jnp
clc
bound
add
clc
add
add
add
lret
inc
add
xor
add
jae
add
mov
sub
cmp
popa
sub
push
pushf
dec
mov
add
xchg
mov
or
nop
scas
sub
jge
call
jecxz
int3
aam
icebp
and
repz
jl
test
mulb
add
clc
fmulp
insl
adc
add
fwait
outsl
xchg
lret
daa
clc
adc
add
clc
and
add
iret
dec
movlhps
clc
fnstenv
stc
insl
sahf
sha256rnds2
mov
clc
add
in
insb
mov
movzwl
fwait
jmp
pop
mov
clc
jle
add
cwtl
cwtl
je
clc
clc
insb
lea
add
add
loopne
push
jmp
fwait
mov
push
fdivl
add
repz
sub
clc
mov
add
and
mov
mov
das
xor
mov
ds
inc
add
jbe
addr16
arpl
add
mov
lahf
je
imul
and
add
mov
jae
add
xchg
std
aas
pop
clc
lcall
pushf
and
add
mov
shr
or
add
jecxz
mov
xchg
int
clc
or
jg
out
int
jmp
dec
in
in
pop
cs
lret
ds
ja
clc
cltd
pop
sbb
add
inc
clc
cmp
adc
add
aas
mov
clc
hlt
pushf
sbb
jmp
jno
popa
aas
sub
stc
xchg
sub
mov
daa
clc
pusha
add
and
add
pop
ret
clc
xchg
push
xbegin
clc
dec
fs
in
pop
loope
sbb
fistpl
add
jp
out
cmpsb
clc
bound
add
sub
or
cmp
mov
jecxz
xabort
cmp
int
add
clc
movsl
clc
or
sbb
pop
mov
lods
push
testb
clts
clc
scas
xchg
test
add
or
push
into
mov
ficoms
add
inc
clc
sbb
pusha
add
xchg
push
xbegin
cmp
xchg
std
pop
ret
clc
out
pusha
add
and
add
clc
jecxz
js
clc
cmp
leave
loope
add
add
lret
and
add
sar
lret
clc
xor
add
clc
data16
mov
inc
add
cmp
mov
mov
fwait
jmp
pop
sub
add
adc
add
add
add
imul
jmp
add
push
loope
std
jae
add
add
clc
sbb
sbb
sub
mov
add
add
icebp
xchg
nop
in
or
mov
ror
sub
addr16
sti
addr16
jo
add
fstpt
jns
ret
clc
jle
add
cltd
dec
insb
xchg
clc
jge
mov
sar
add
add
pushf
nop
or
inc
clc
cmp
cmpsb
clc
ror
iret
nop
xlat
test
add
push
add
das
cmc
sbb
add
loopne
sbb
daa
clc
in
mov
add
inc
add
mov
es
clc
jg
or
xor
ja
clc
bound
add
add
fldl2e
cmp
add
pop
fmuls
clc
je
add
mov
and
add
add
aad
clc
lea
add
cmpsl
clc
ss
add
sahf
mov
insb
mov
cmp
clc
jo
add
cld
xor
add
xchg
rorl
flds
add
sbb
scas
inc
clc
xchg
mov
mov
clc
push
mov
add
push
add
fwait
jmp
sbb
outsl
add
add
clc
pop
xchg
or
add
push
jne
fwait
jmp
jbe
add
mov
cmp
pop
pop
outsl
push
inc
clc
test
repnz
insb
mov
jle
add
arpl
add
clc
cmp
mov
xchg
aas
andb
clc
aas
es
call
clc
sahf
ret
clc
xchg
pop
add
add
inc
clc
or
das
mov
xchg
inc
add
xor
add
xor
add
add
cmp
pop
jle
clc
dec
dec
mov
inc
clc
push
add
ret
or
ret
clc
inc
add
inc
clc
pop
xchg
push
add
aam
or
add
mov
fxch
sbb
lret
cwtl
mov
outsl
push
add
cmp
aam
sub
js
pop
mov
clc
mov
lock
adc
add
xor
add
clc
push
pop
push
dec
bound
add
mov
jo
add
add
push
lods
test
clc
or
mov
in
outsb
pop
jmp
add
mov
add
add
mov
scas
jg
clc
icebp
sbb
jmp
mov
in
mov
and
add
clc
pop
mov
jbe
cmp
mov
dec
inc
clc
push
dec
mov
add
or
push
clc
sbb
xchg
mov
sbb
push
add
stc
decl
test
add
fwait
jmp
add
add
test
jno
add
dec
dec
ret
jl
frstor
add
in
mov
clc
scas
mov
jmp
test
out
push
add
adc
ss
clc
mov
clc
jle
sub
add
rorb
ss
clc
ds
add
ds
push
inc
add
fidivl
add
add
dec
mov
mov
add
cld
push
ret
sbb
sbb
xor
clc
xor
clc
mov
cmp
clc
in
gs
pop
push
cs
push
mov
lea
repz
vsqrtps
add
pop
mov
clc
add
add
jle
icebp
add
add
push
cmp
cld
push
ret
dec
or
clc
test
push
mov
add
mov
test
fwait
jmp
xor
ja
sar
clc
dec
sti
cmc
xchg
push
xchg
jp
dec
dec
and
add
dec
pop
aaa
add
add
in
ljmp
jge
clc
mov
clc
addr16
loopne
or
inc
clc
sbb
jmp
sub
inc
xor
cmp
add
stos
aas
arpl
add
add
pop
inc
add
add
pop
dec
pop
fsubrp
aam
fldt
add
add
mov
lahf
jl
movsb
clc
arpl
add
or
popa
fwait
jmp
and
or
ja
sbb
xabort
mov
push
add
bound
add
gs
push
add
aam
inc
add
imul
xchg
pushf
or
clc
mov
lock
mov
jmp
clc
ljmp
add
mov
clc
aad
add
and
add
add
rclb
add
sbb
pop
enter
mov
sub
repz
clc
mov
add
mov
clc
inc
add
cmp
add
mov
clc
xor
pop
sar
add
shlb
clc
decb
add
and
add
repz
clc
lret
xchg
xor
add
pop
adc
add
cmpsb
clc
cltd
jb
add
clc
inc
clc
push
add
ret
add
cmp
add
pop
pop
nop
sbb
clc
cmpsb
clc
pop
jns
add
and
add
add
add
add
and
pop
clc
sahf
jmp
clc
mov
bound
add
clc
sar
inc
add
psrlq
popf
xchg
sub
clc
stos
aad
icebp
inc
clc
mov
js
mov
loope
imul
mov
lcall
add
pop
clc
inc
add
mov
jmp
aaa
dec
sub
add
mov
add
fmull
pop
mov
add
nop
mov
clc
and
fldz
adc
add
icebp
popf
cmpsl
clc
ss
add
out
mov
ffreep
clc
mov
clc
sub
stos
sub
clc
clc
test
add
cmp
sarl
clc
lcall
push
ret
nop
data16
inc
clc
notb
shrb
push
ret
cwtl
jg
adc
cmp
and
jmp
mov
lret
mov
and
add
add
pop
in
xchg
icebp
into
jnp
icebp
and
clc
cmp
repnz
add
shl
clc
add
mov
clc
pop
xor
add
sbb
cmp
add
repnz
ret
fwait
jmp
sub
inc
add
hlt
and
add
add
xor
add
inc
clc
xchg
pop
gs
sahf
adc
add
add
in
xor
jnp
cmp
clc
in
mov
xchg
fwait
jmp
cmpsb
jge
lea
pusha
add
sbb
fwait
jmp
lods
xlat
xchg
sub
fcompl
sahf
cmp
clc
and
add
jb
add
fidivs
or
clc
ds
push
jmp
cmp
mov
ret
clc
and
add
fmuls
test
xlat
aas
pop
xor
add
dec
jb
add
push
cmp
clc
jns
mov
clc
popf
fmuls
scas
aad
xor
jp
add
or
mov
mov
fwait
jmp
cmp
clc
mov
aas
lods
sahf
lret
mov
clc
cmc
mov
add
pop
add
add
sbb
cmp
lea
add
fiadds
clc
jae
add
clc
jno
add
push
inc
cld
push
ret
cwtl
sub
add
inc
clc
rcrl
clc
shll
sahf
sbb
mov
fwait
jmp
insb
cwtl
cmpsb
es
pop
pusha
add
ret
add
imul
or
gs
push
add
addr16
mov
xor
clc
push
clc
xlat
je
clc
mov
mov
cld
push
ret
sahf
or
clc
dec
mov
clc
sbb
dec
push
call
mov
cmc
xchg
add
add
lea
clc
repnz
mov
inc
add
aaa
pop
sbb
lods
cmp
sub
sub
mov
add
mov
mov
add
jp
clc
push
add
sbb
jmp
and
jno
dec
repz
xchg
loop
or
add
fdivs
sub
lret
clc
idivl
movsl
clc
xor
add
pop
and
add
in
pop
aad
in
push
imulb
imul
clc
xabort
jne
clc
xchg
int3
push
clc
jecxz
xchg
mov
inc
add
inc
clc
jmp
mov
add
jge
inc
clc
iret
xchg
test
push
add
inc
clc
mov
push
adc
jmp
xchg
sub
or
sbb
sub
or
data16
sub
clc
aad
clc
add
add
or
xchg
xchg
mov
add
fsubr
insb
fcomi
rorl
dec
hlt
or
clc
stc
iret
gs
xchg
cmp
or
xlat
in
xor
add
add
clc
stos
push
mov
pop
jbe
into
shll
clc
inc
add
jnp
clc
xor
add
clc
test
cmp
mov
imul
jp
add
mov
jno
add
add
clc
aam
inc
add
mov
sub
das
aaa
mov
xor
add
out
stc
add
add
clc
sub
ret
clc
xor
add
add
in
mov
inc
clc
jge
or
push
add
dec
xchg
pusha
add
test
cwtl
in
mov
pusha
add
inc
clc
repz
pop
lea
clc
push
push
cld
push
ret
dec
xor
mov
hlt
and
mov
or
clc
mov
sbb
cmp
cmp
pushf
xor
cld
aaa
adc
clc
loop
lock
xchg
add
test
pop
pop
mov
xchg
jns
ret
push
add
cmp
clc
sub
cmp
jne
fsub
clc
sbb
cmp
aaa
cmp
aas
insb
xbegin
mov
add
push
add
or
das
mov
clc
inc
add
ffree
clc
push
add
mov
xor
add
das
repnz
xchg
int3
rolb
add
or
clc
sbb
stc
inc
clc
fldt
jmp
repnz
inc
clc
lret
or
cld
push
ret
inc
pop
pop
clc
sbb
clc
outsb
xchg
pusha
add
pop
push
cmp
push
add
loope
mov
mov
add
clc
std
jne
mov
add
add
mov
cmp
in
dec
or
add
pop
push
add
idivb
in
dec
in
rol
clc
mov
clc
push
lods
mov
mov
cld
push
ret
dec
jge
xor
add
clc
shl
clc
popl
ret
mov
or
pop
ss
clc
push
and
fwait
jmp
xchg
cmpsb
sbb
je
fwait
jmp
in
and
add
jo
add
xor
add
cmp
scas
xchg
add
sbb
dec
dec
xor
cmp
imul
clc
in
hlt
enter
mov
test
add
inc
clc
div
mov
clc
sar
add
sbb
jns
clc
dec
or
clc
out
push
dec
pop
clc
pop
clc
push
add
cmp
in
or
add
outsl
mov
jg
out
nop
fistpll
cwtl
fcomp
xlat
and
cmp
loope
out
lock
mov
clc
add
aas
push
add
fdivs
add
shll
cld
push
ret
sub
ja
add
lea
imul
inc
sub
push
ret
popa
sub
arpl
add
mov
fwait
imul
inc
add
mov
gs
adc
add
es
or
cmp
xchg
inc
add
mov
ret
clc
push
lods
cmp
add
mov
pusha
add
in
repnz
lcall
clc
xchg
mov
add
mov
mov
clc
mov
inc
add
hlt
pop
ficoml
clc
and
add
xlat
repz
popf
mov
cmp
imul
fwait
jmp
xor
sub
pop
clc
dec
push
mov
jp
add
mov
ret
jle
pushl
jge
adc
stos
sti
div
test
pop
xor
add
or
mov
adc
add
add
or
fwait
jmp
jp
scas
push
add
mov
imul
test
add
add
dec
sti
nop
inc
add
dec
cltd
test
pop
mov
add
fwait
or
mov
add
add
loope
negl
fildll
clc
jle
inc
add
inc
clc
cmp
clc
cmp
dec
cmp
data16
sti
or
clc
gs
add
add
aam
clc
xabort
xor
add
inc
clc
arpl
add
add
add
add
mov
add
sar
add
add
clc
jnp
sub
sbb
xchg
jns
ljmp
jp
cmp
xor
add
sub
clc
jnp
add
lret
sbb
ds
inc
clc
ret
clc
rclb
add
jmp
cld
mov
push
push
push
add
stos
cmp
add
jae
add
add
ficoml
add
or
ret
add
fildl
call
add
pop
mov
add
add
clc
jns
add
add
std
popf
scas
mov
mov
and
add
clc
mov
mov
jmp
ja
and
mov
add
cmp
add
adc
add
mov
add
and
add
dec
xchg
pop
fildll
xchg
out
jne
clc
sar
sahf
push
add
inc
add
inc
clc
fistps
push
fwait
jmp
mov
or
clc
push
add
xor
add
mov
out
leave
pusha
add
mov
fwait
jmp
aaa
sub
add
dec
adc
add
add
fwait
jmp
or
es
sbb
clc
imul
clc
lock
mov
clc
mov
movsb
clc
not
sbb
loope
cmpsb
clc
jmp
inc
add
dec
cmp
mov
fwait
jmp
adc
add
mov
faddp
clc
mov
clc
lret
jge
pop
jle
clc
inc
add
push
adc
add
pop
fidivs
add
in
std
jb
add
dec
pop
cmp
loope
pop
enter
add
fs
jo
add
and
dec
insb
insb
adc
add
add
lret
or
repnz
jg
sbb
stos
cld
push
ret
sub
je
mov
xor
add
xbegin
cmp
testb
dec
jbe
bound
add
add
add
jno
add
jg
in
sahf
lahf
mov
fwait
jmp
nop
cmpsb
clc
es
xor
add
add
jmp
fwait
jmp
sbb
cmp
fs
imul
add
add
clc
setnp
or
pushl
sub
clc
stos
push
add
jbe
cld
mov
sbb
add
mov
clc
pop
cmc
clc
xchg
movsl
clc
jae
add
addr16
cwtl
cltd
test
arpl
add
mov
clc
add
pop
jno
add
xchg
cs
pop
cmp
cmp
and
add
xchg
lea
clc
pop
xchg
inc
clc
pusha
add
inc
add
sbb
push
ret
sbb
or
clc
test
imul
clc
jge
xor
add
add
inc
add
adc
clc
sbb
jmp
add
and
sub
add
or
cld
sub
sub
incl
mov
add
fmuls
outsl
and
mov
cmp
add
cmp
add
add
clc
loop
fldenv
add
push
add
mov
inc
add
or
insl
test
enter
dec
jl
clc
scas
sub
test
mov
lcall
ljmp
mov
clc
dec
out
push
add
hlt
ret
clc
movsl
clc
enter
clc
xchg
imul
clc
inc
clc
inc
clc
cmp
pop
clc
fldenv
clc
jnp
or
pop
fcoml
xchg
shrd
adc
loope
lods
jge
cli
in
cmp
cs
add
inc
clc
sahf
das
icebp
and
add
xlat
xchg
and
add
popl
clc
pop
mov
sahf
sub
mov
clc
xchg
lock
add
pushf
notb
add
mov
cmpsl
clc
pop
clc
xor
add
add
xchg
jo
add
clc
mov
jl
clc
fs
or
push
push
add
xchg
addr16
adc
add
cmc
fsubrs
add
cld
lea
dec
sbb
mov
test
call
test
add
add
imul
cli
nop
filds
movsl
clc
incb
add
ljmp
fistps
cmp
or
add
lea
mov
outsb
mov
insb
loope
popa
add
test
pop
jnp
add
fldcw
test
mov
lcall
jmp
push
call
pop
clc
stos
cmpsb
clc
pop
xabort
mov
fwait
jmp
sbb
add
popa
add
mov
lret
out
adc
add
xchg
cmp
jg
mov
dec
sar
or
sbb
sub
push
ja
call
outsl
cmp
pop
xor
add
loopne
add
add
clc
out
jns
sbb
jmp
cmp
aas
mov
mov
mov
sub
std
inc
add
sar
jmp
clc
add
add
pop
insb
cli
scas
mov
ret
clc
xchg
sbb
xchg
outsl
aam
add
add
jne
xchg
or
clc
cmp
jmp
fwait
jmp
sub
lods
sub
add
testb
add
mov
add
jp
clc
dec
sbb
add
cmpsl
clc
cmc
cmpsl
clc
jmp
add
pusha
add
adc
add
xchg
js
stc
scas
out
cmp
xor
add
and
add
or
mov
push
xlat
incl
sar
clc
inc
clc
loop
in
pop
sti
mov
clc
cmpsl
clc
adc
add
outsl
std
push
push
out
out
xchg
mov
clc
sar
std
push
add
loop
pop
pop
add
add
imul
fiadds
clc
cmp
fwait
jmp
fwait
mov
push
pop
test
add
dec
fwait
rcrl
pop
sub
bound
add
clc
dec
add
stc
sar
fwait
xor
add
clc
cmpsb
clc
out
adc
add
or
clc
xor
add
sub
mov
clc
stc
push
mov
pop
and
add
add
outsb
shrl
daa
clc
ljmp
es
icebp
sbb
aas
in
adc
add
clc
addr16
in
xchg
loopne
inc
clc
mov
sub
push
add
dec
add
add
clc
addr16
imul
add
add
clc
jg
in
mov
add
repz
cs
clc
adc
add
cmc
sbb
clc
bound
add
clc
cmp
push
fadds
adc
add
dec
imul
add
jg
clc
cmp
add
push
add
jno
add
repz
cmp
fwait
jmp
nop
outsl
dec
cmpsb
xbegin
inc
add
cmp
mov
repz
cmpsb
clc
ret
clc
lcall
push
adc
fwait
jmp
nop
fstpt
pop
loopne
std
pushf
sub
adc
add
add
clc
sub
add
mov
add
xchg
push
add
sub
aam
lods
cmc
in
out
jns
sbb
mov
mov
clc
cmp
add
and
add
clc
sar
js
imul
clc
rolb
add
xabort
add
cwtl
inc
clc
imul
xor
insb
movsb
clc
divb
add
add
jb
add
imul
inc
add
mov
and
add
lret
aad
clc
jle
push
push
fwait
jmp
scas
subb
add
aas
jmp
mov
movsl
clc
add
inc
add
icebp
movsl
clc
inc
clc
test
fimull
xchg
jnp,pt
clc
loopne
std
cmp
pushf
cltd
add
add
xchg
addr16
rcrl
xbegin
jbe
cmp
add
add
xchg
leave
out
daa
clc
movsl
clc
shlb
clc
js
fdivrs
sbb
add
jne
clc
inc
clc
nop
es
mov
mov
clc
fs
dec
jmp
data16
sbb
add
imul
scas
mov
inc
clc
or
ljmp
xbegin
clc
gs
pop
clc
jmp
add
dec
xchg
ret
xor
add
add
sbb
clc
push
jmp
ja
xchg
stc
mov
mov
jl
pop
das
mov
clc
mov
fwait
xor
aas
inc
add
mov
rcrl
adc
add
clc
or
clc
fcoms
add
inc
clc
enter
add
sbb
mov
inc
add
out
xor
loopne
in
xor
add
add
aam
clc
pop
or
sar
add
inc
clc
mov
aaa
adc
lods
testl
scas
cmp
clc
mov
xchg
fwait
add
mov
clc
ss
or
lods
inc
clc
fs
mov
xor
add
clc
jle
add
lahf
pop
pop
clc
mov
out
xor
add
repz
clc
mov
jmp
sub
xor
cmpsb
clc
jp
inc
add
shll
add
leave
incl
dec
add
and
clc
jle
stos
push
inc
add
sub
pushf
cmp
clc
mov
clc
addr16
jmp
add
ds
fwait
cmp
repz
clc
sbb
std
sti
jmp
aas
and
clc
and
add
movsb
fwait
jmp
jg
sub
fldenv
add
leave
pushf
push
sbb
jge
xor
add
sbb
add
mov
add
aaa
jno
add
adc
add
inc
add
je
jge
insb
xlat
scas
insl
iret
mov
fidivrs
pop
push
mov
cld
push
ret
xchg
mov
xbegin
add
push
lods
jecxz
pop
clc
xchg
inc
add
mov
and
add
cmp
add
add
xchg
scas
mov
xchg
pop
xor
add
dec
int3
or
add
fidivrl
rclb
loopne
test
loopne
call
pop
xlat
xor
add
mov
clc
push
add
xor
add
test
dec
and
rcr
jae
add
add
scas
and
add
fwait
jmp
test
add
jns
adc
add
icebp
mov
clc
sbb
inc
add
adc
add
clc
cmp
loope
cmp
xlat
ja
and
sti
test
nop
clc
xor
add
popa
add
cmp
add
filds
or
cmp
clc
data16
dec
pop
sar
cli
std
inc
add
jge
add
mov
loop,pt
dec
push
test
arpl
add
jb
add
clc
nop
enter
jne
fwait
jmp
out
fistps
inc
add
fistps
push
inc
clc
jns
cwtl
pop
cmp
imull
clc
test
add
enter
xlat
cmp
sub
add
cmc
xchg
jmp
xor
clc
adc
add
sar
inc
add
xchg
sub
cld
xor
add
add
fwait
dec
push
add
lcall
mov
clc
aam
aaa
mov
add
cli
xchg
loope
decl
add
push
into
lahf
add
add
clc
lcall
fwait
jmp
sub
clc
mov
ljmp
clc
addr16
aaa
inc
add
loopne
cmp
test
sbb
clc
xchg
jl
clc
dec
pop
adc
add
clc
fwait
jmp
test
dec
dec
loop
cmp
xor
clc
add
add
aad
jbe
xor
add
push
lods
adc
add
das
cwtl
bound
add
inc
add
fs
xor
add
scas
popa
add
cld
pushf
addr16
mov
pop
ret
clc
ret
push
push
cld
push
ret
push
lea
jmp
aam
push
cwtl
jo
add
lea
dec
stc
sar
clc
imul
push
mov
add
add
add
xchg
or
aas
and
add
add
cmp
lret
xchg
sarl
cmp
sbb
call
adc
add
jp
clc
leave
cmp
clc
mov
call
mov
fwait
jmp
xchg
xchg
adcb
add
or
std
into
jl
jmp
xabort
xlat
and
add
fwait
jmp
jge
or
cltd
push
pop
xor
add
clc
fistpl
add
add
add
add
dec
imul
clc
sbb
add
jmp
inc
clc
cli
or
addr16
or
clc
cld
pushf
push
xor
add
add
add
mov
xabort
add
lea
repnz
ret
clc
std
repz
add
add
dec
push
fcmovne
or
loop
js
clc
fs
test
adc
add
cmp
clc
pop
xabort
xor
xor
add
add
bound
add
arpl
add
ja
xor
add
mov
clc
xchg
dec
popa
add
sbb
add
mov
shlb
fbld
scas
int
cmp
cld
push
ret
sub
clc
jne
xchg
add
add
mov
add
div
stos
jns
fs
leave
pop
pop
mov
clc
mov
push
add
xor
add
paddw
clc
sbb
addr16
insb
stos
cs
jb
add
clc
bound
add
add
adc
add
and
add
mov
add
jge
add
add
test
sub
jp
pop
sti
and
add
clc
bound
add
je,pn
aaa
sub
and
add
clc
adc
add
nop
test
nop
fildll
pop
pop
xor
add
lea
cld
loope
and
add
jg
cmpsb
clc
or
add
mov
scas
test
out
int
mov
lahf
ficompl
add
pop
clc
push
sti
rorb
cmp
test
into
jge
ret
add
jo
add
clc
repnz
cmp
jae
add
add
and
adc
sbb
int3
mov
fwait
push
mov
fwait
jmp
mov
dec
popa
add
stos
push
rolb
add
jecxz
ss
fs
jl
cld
fwait
jmp
jno
sub
sub
mov
add
xor
add
clc
lret
ss
and
sub
ret
clc
and
add
mov
loop
fwait
jmp
sub
push
clc
cli
push
clc
jle
mov
xor
aam
lods
sub
sub
fdivl
cmp
mov
dec
aad
clc
aam
fsubrl
clc
xchg
daa
clc
clc
cmp
clc
sahf
xchg
adc
dec
and
clc
pop
xbegin
clc
push
rcrb
push
mov
fwait
jmp
add
add
cmp
push
clc
data16
fists
add
add
adc
add
mov
inc
add
and
add
fstpt
stos
pop
sbb
fwait
jmp
nop
mov
inc
clc
sub
call
movsl
clc
cmp
add
js
inc
clc
ret
clc
std
stos
loope
stc
cmp
push
add
js
clc
xbegin
clc
sbb
jmp
jno
sub
dec
mov
addr16
lea
dec
cli
xor
add
clc
popf
xor
add
adc
add
push
add
cmp
daa
clc
push
push
fwait
jmp
pop
imul
add
jbe
and
add
add
add
stc
pusha
add
sar
repnz
adc
add
shlb
clc
mov
add
out
cld
sar
add
lcall
inc
clc
test
sub
xbegin
push
push
incl
cmp
clc
or
clc
decl
repnz
call
es
jge
clc
cmp
xlat
popf
std
iret
sbb
mov
movsb
clc
mov
rcll
add
clc
inc
add
pop
mov
sbb
lods
jno
add
out
sub
add
and
test
pop
or
add
scas
scas
mov
jnp
and
add
cmc
or
std
mov
add
inc
add
popf
cmp
clc
pop
lods
mov
pop
into
cmp
cmp
pop
sar
clc
pop
mov
out
insl
dec
bnd
aam
ljmp
xchg
lcall
add
add
std
dec
pushf
xchg
clts
clc
push
clc
popa
add
cmp
stos
fsubrl
add
test
add
xchg
push
scas
xor
add
clc
push
mov
add
shll
out
movsb
clc
jno
add
add
mov
out
incl
clc
and
mov
sti
loopne
arpl
add
in
dec
adc
add
mov
clc
ror
cwtl
mov
sahf
sar
clc
dec
and
add
add
sub
mov
add
xor
add
cltd
dec
out
pusha
add
sar
dec
xchg
mov
clc
jp
out
fisttpl
jb
add
fwait
mov
jecxz
lcall
pop
jg
in
sbb
xbegin
cmp
or
gs
mov
clc
sub
xlat
or
cltd
or
out
inc
clc
incb
add
add
pusha
add
add
inc
clc
cmpsl
clc
addr16
inc
clc
push
stc
jmp
sahf
mov
testl
jmp
cmpb
sahf
sub
add
add
shrb
jno
add
imul
int
push
add
lcall
clc
jle
clc
inc
add
call
clc
inc
add
mov
jmp
mov
dec
out
sub
cmp
add
add
clc
push
mov
add
ret
repz
push
in
mov
clc
sar
add
mov
ja
fwait
mov
jae
add
clc
lret
inc
clc
sbb
ds
jbe
clc
daa
clc
pop
clc
xchg
stos
cmc
jp
es
push
fdivs
add
repz
or
mov
clc
mov
cmp
pop
push
clc
and
or
clc
mov
sarl
sub
pop
clc
push
mov
sbb
clc
cmp
fcomi
das
cmp
xchg
repnz
and
push
ret
pop
mov
add
add
sar
lret
jns
clc
hlt
dec
push
push
fwait
jmp
jp
xchg
sub
add
and
add
add
clc
jbe
cmp
stos
rcll
imul
clc
xchg
repnz
dec
xchg
or
inc
clc
xchg
inc
clc
inc
clc
into
cmp
add
jle
adc
add
lods
fsubrs
push
add
out
lahf
repnz
lahf
mov
clc
sbb
clc
test
insb
sbb
xchg
mov
add
loop
jp
clc
test
xchg
sarb
or
add
sub
sub
pop
daa
clc
dec
movsl
clc
pop
pop
push
or
add
fwait
jmp
sbb
lods
cmp
jmp
sub
dec
inc
cmp
add
out
xchg
inc
clc
and
add
mov
fwait
jmp
sub
lcall
mov
adc
add
ret
lods
jns
cmpsl
clc
add
add
add
clc
ja
ljmp
mov
arpl
add
fnstsw
clc
pop
mov
xor
add
clc
js
add
push
xchg
jp
clc
xchg
into
xchg
mov
mov
or
adc
mov
jmp
or
jmp
or
clc
repnz
bound
add
add
jmp
loopne
xchg
cmpsl
clc
in
xchg
shrl
and
add
into
mov
jge
mov
add
jb
add
add
add
fs
jecxz,pn
cld
mov
in
mov
sub
pop
xabort
add
loopne
js
inc
add
gs
inc
add
adc
add
imul
add
cmc
push
out
xchg
sar
add
inc
clc
mov
mov
xlat
sbb
adc
dec
arpl
add
pop
repnz
add
add
pop
push
arpl
add
fiadds
jl
sbb
mov
rclb
jle
mov
push
add
add
add
not
mov
clc
sbb
and
add
ficompl
add
test
sbb
pop
aad
clc
jne
in
mov
pop
aas
into
int
or
add
add
cmp
jmp
push
add
pop
mov
add
sahf
movsl
clc
mov
ss
sub
add
decb
jbe
clc
dec
insb
adc
je
or
add
sub
sub
add
test
repz
mov
push
cli
sub
pop
xor
add
add
clc
mov
add
negl
xor
add
clc
adc
loopne
mov
es
out
js
add
dec
jmp
jbe
out
mov
jbe
clc
push
mov
cld
push
ret
sbb
fcoml
add
clc
mov
ret
clc
imul
pop
leave
mov
clc
daa
clc
and
add
lret
ja
sub
add
jmp
nop
push
sbb
add
add
scas
and
add
add
adc
add
clc
sbb
xchg
aam
jmp
cmp
add
mov
clc
mov
clc
cmp
mov
push
ret
xchg
xorb
pop
fdiv
push
add
sub
push
add
scas
je
ret
fwait
jmp
and
lods
sub
rorb
mov
std
lea
push
push
add
popf
popf
repnz
pushf
push
jne
fwait
jmp
cmp
jns
xchg
loope
sbb
add
loope
adc
add
clc
xor
add
clc
into
adc
add
fwait
jmp
cwtl
pop
ja
cmp
add
cmp
clc
jl
add
call
push
ret
add
jbe
sbb
fwait
lret
jecxz
inc
add
in
mov
mov
sbb
push
clc
scas
xor
add
mov
mov
add
stos
lock
add
jne
add
leave
in
mov
fwait
jmp
sub
xchg
loopne
pop
xor
add
clc
nop
fwait
pop
clc
xor
add
fwait
xor
add
ret
clc
lods
addr16
insl
inc
clc
icebp
xabort
cmp
push
jmp
test
stos
inc
add
push
add
dec
cli
xabort
add
lret
pop
mov
jge
ds
add
pop
sbb
fldenv
add
clc
sbb
or
add
in
sbb
clc
and
add
xchg
add
add
sub
add
bound
add
clc
data16
enter
mov
cmp
rorl
pop
sbb
jo
add
clc
xchg
cwtl
mov
sub
clc
mov
into
cwtl
sub
sar
in
nop
or
clc
jns
es
pushf
xabort
sar
clc
mov
arpl
add
add
cmp
in
cmc
es
in
jmp
clc
mov
arpl
add
arpl
add
outsl
fldenv
shll
push
add
add
clc
xchg
leave
pop
adc
add
cld
lods
inc
clc
rorl
std
pop
adc
clc
mov
add
clc
pop
add
add
arpl
lcall
test
dec
jl
scas
or
push
add
stc
cmp
clc
shrb
cmp
push
enter
dec
add
add
push
add
add
clc
jecxz
sub
xor
add
add
jmp
and
push
push
xor
clc
xor
add
sbb
rolb
clc
adc
add
add
pop
xlat
cmp
sbb
add
sbb
clc
jp
clc
sbb
lahf
cli
rclb
add
cmp
sbb
fwait
pinsrw
cmp
adc
add
xabort
mov
jmp
add
dec
pextrw
clc
jae
add
cs
inc
clc
pop
and
add
clc
mov
add
push
add
lahf
aaa
mov
je
clc
jnp
bound
add
lret
lods
jge
icebp
dec
inc
clc
mov
divb
clc
hlt
xor
add
cli
insb
adc
adc
add
daa
clc
loopne
test
push
dec
dec
sub
clc
iret
aad
call
fwait
jmp
lea
inc
clc
mov
xlat
add
add
outsl
sbb
imul
lea
sub
push
add
out
and
add
ret
clc
cmp
add
adc
insl
mov
xchg
cli
xchg
pop
mov
add
insb
and
add
mov
in
xabort
clc
mov
cmp
pusha
add
pop
xor
add
aad
clc
test
clc
fdivs
xchg
cmc
push
test
loopne
gs
in
loopne
jns
and
ljmp
nop
test
cmp
add
xchg
test
je
add
gs
ret
clc
xabort
xor
add
xlat
mov
add
inc
add
fs
dec
dec
push
add
jl
clc
mov
clc
insb
mov
jb
add
clc
gs
mov
lret
cld
push
je
mov
imul
add
push
fnsave
add
clc
push
add
je,pt
xchg
adc
add
add
xlat
cmp
add
insl
test
push
fwait
add
add
mov
mov
cwtl
xchg
clc
fcomps
jle
stos
xchg
fildll
pop
lret
cmp
aam
test
mov
add
add
add
lods
xor
add
jae
add
adc
add
clc
xor
vcmpneqps
clc
xor
sub
push
mov
out
cmp
cs
and
add
add
clc
fwait
test
sub
add
adc
add
clc
jno
add
test
dec
and
add
clc
clc
call
mov
lahf
lret
jne
fmulp
popf
imull
scas
arpl
add
cmp
clc
sub
add
clc
inc
add
lret
clc
add
mov
add
inc
add
pop
loop
repz
stos
dec
fcoml
sub
push
add
pop
mov
cmc
or
test
es
cmp
repnz
int3
loopne
repnz
clc
insb
sbb
and
add
mov
add
add
jg
pushf
ss
addr16
cwtl
jl
clc
xor
add
cld
push
ret
sbb
dec
lret
xchg
outsb
shll
add
mov
fwait
jmp
pop
push
movsb
jecxz
adc
add
add
xchg
rcrb
clc
dec
cmp
xor
clc
or
out
push
dec
or
clc
aad
sti
clc
push
outsb
repz
movsb
clc
jns
add
xchg
sbb
mov
hlt
loop
jo
add
sti
rcr
adc
add
add
add
add
mov
fwait
jmp
mov
stos
inc
add
iret
inc
clc
sti
test
sub
mov
add
cmp
or
imul
mov
cmpl
fwait
jmp
sub
ljmp
rcrl
nop
xor
cwtl
sarb
adc
clc
mov
loopne
aam
inc
clc
adc
or
clc
and
add
call
pop
out
cmp
loop
ja
cmp
loope
xchg
dec
fstpt
jnp
gs
mov
clc
mov
cmpsl
clc
leave
cmp
hlt
dec
cmp
clc
and
add
add
xchg
pop
notl
add
cmp
mov
clc
fs
push
iret
xbegin
lock
outsb
cld
sar
push
popa
add
stos
adc
add
add
push
mov
mov
mov
clc
ljmp
add
add
movsb
clc
popa
add
cwtl
pop
lods
jb
add
add
push
cmp
push
mov
hlt
icebp
mov
add
call
shll
clc
push
es
xchg
sar
lahf
filds
add
add
add
mov
and
sub
xchg
jle
cmpsl
clc
push
in
cs
clc
inc
add
mul
clc
xlat
mov
clc
lods
sbb
jmp
imul
add
jl
clc
inc
add
loopne
cmp
inc
clc
mov
popa
add
in
sub
xabort
add
fsubl
add
lock
add
fwait
jmp
adc
add
addr16
das
rolb
clc
jb
add
clc
lods
push
arpl
add
clc
mov
in
sbb
jb
add
sub
adc
xor
add
add
icebp
loope
sub
xchg
mov
add
xor
add
clc
xor
add
clc
sub
stos
test
loop
mov
add
add
sar
std
iret
in
ret
adc
add
clc
call
add
je
cmp
add
push
add
mov
jp
out
add
lahf
pop
int
clc
push
cmp
mov
clc
mov
mov
fidivrl
popa
add
jae
add
movsl
clc
add
add
imul
jge
clc
sar
clc
call
clc
out
bound
add
add
and
add
add
sub
clc
imul
mov
mov
add
add
lods
notb
icebp
addr16
mov
iret
xor
add
ret
aaa
xchg
test
sarl
mov
lods
sub
inc
clc
push
clc
fildll
jb
add
add
add
in
mov
jns
incl
das
movsl
decl
imul
mov
add
push
clc
sbb
clc
cmp
xabort
sub
sar
clc
jne
clc
mov
lcall
call
and
add
add
cmc
sbb
add
add
aaa
pop
inc
add
dec
js
add
lcall
add
dec
dec
daa
clc
sbb
dec
leave
adc
add
sbb
das
mov
clc
test
mov
jp
js
clc
imul
xchg
movsl
clc
mov
icebp
and
add
jg
dec
out
out
jge
ret
clc
jg
add
cmp
clc
xchg
jp
clc
push
add
ret
add
jae
add
outsb
jg
pop
shr
or
je
test
jecxz
flds
rcrb
xor
cld
push
ret
test
jg
inc
clc
or
dec
xlat
lahf
dec
inc
add
movsb
clc
das
fsub
clc
int
add
shl
clc
dec
fstpl
xor
pusha
add
fdivl
add
pop
bound
add
data16
sub
add
add
fwait
jmp
add
clc
sub
rolb
clc
add
add
add
mov
add
mov
clc
cmp
lock
clc
inc
add
insb
loope
mov
adc
add
ror
push
rolb
add
sti
inc
add
scas
arpl
add
and
dec
add
mov
push
sbb
xor
push
ret
xor
sub
add
int3
cmp
clc
cmp
int3
pop
scas
mov
fnstcw
iret
or
clc
cmpsl
clc
lcall
call
mov
fcom
das
sar
add
xabort
inc
clc
test
imul
scas
xor
add
clc
or
and
or
ja
clc
xchg
test
clc
test
std
add
add
add
lret
aaa
cmp
add
adc
insb
push
add
dec
jecxz
add
js
clc
out
and
add
clc
inc
clc
or
add
imul
call
fwait
jmp
adcb
add
mov
add
clc
lods
es
sahf
xchg
lret
mov
into
std
or
ljmp
or
xchg
jae
add
add
mov
fwait
jmp
fwait
cmp
jl
mov
add
and
add
sub
add
ret
clc
mov
sahf
mov
idiv
lods
ljmp
mov
cld
push
ret
sub
mov
add
inc
clc
out
ja
cmp
add
inc
add
in
push
add
inc
clc
jnp
lods
mov
add
adc
add
dec
push
in
ret
add
bound
add
ljmp
clc
popf
push
test
clc
mov
mov
add
inc
clc
xor
add
clc
das
std
out
data16
jbe
clc
nop
jp
jge
addr16
rorl
inc
add
jge
jno
add
clc
adc
ret
clc
adc
add
add
add
pop
mov
add
push
add
inc
add
sub
sub
mov
mov
insl
fnsave
add
fptan
pop
clc
test
dec
cmp
add
in
jne
clc
jae
add
mov
and
add
fistpll
clc
scas
bound
add
add
xor
add
or
add
loope
fmul
adc
add
stos
rcrb
and
test
clc
dec
clc
int3
test
inc
add
sti
fstps
mov
dec
insl
das
loope
std
imul
ja
in
test
or
sub
add
fcmovb
clc
sbb
inc
clc
xchg
sub
clc
sub
shll
add
sub
add
int3
aam
add
scas
rcrl
fwait
add
dec
sbb
mov
push
add
mov
mov
inc
add
in
divb
add
nop
enter
clc
mov
mov
or
jmp
add
add
add
add
mov
add
clc
aad
clc
lret
xchg
push
jmp
lods
scas
sub
mov
test
jmp
add
add
and
test
add
or
xchg
xor
add
add
clc
pop
jae
add
clc
xabort
outsl
cmp
push
clc
incl
rcrl
call
add
dec
push
sar
mov
xor
outsb
mov
xchg
lods
cmp
mov
clc
inc
add
dec
fcomps
out
aaa
shl
push
add
add
clc
mov
sarl
ret
clc
jle
add
jbe
enter
repz
je
popf
fcmove
push
add
sbb
cld
push
ret
outsl
fwait
sahf
ror
inc
add
leave
xchg
cmp
cmp
clc
loop
or
add
test
xabort
clc
jl
dec
mov
push
es
or
push
pop
clc
add
add
inc
add
cli
outsl
sbb
sub
add
or
add
adc
add
add
xlat
mov
pop
or
sbb
jnp
adc
add
xlat
fwait
cmp
add
mov
clc
loopne
push
xchg
dec
xor
add
bnd
add
add
ja
clc
clc
insb
fs
and
add
dec
sub
add
add
into
clc
mov
clc
cmp
outsl
pop
mov
push
ljmp
sub
data16
mov
clc
mov
dec
xchg
mov
mov
adc
fwait
jmp
push
add
fwait
jmp
pop
jg
jno
add
clc
pop
jle
shll
arpl
add
js
clc
mov
aad
clc
jno
add
adc
dec
test
and
clc
or
add
pop
jb
add
clc
repz
sti
mov
adc
cmp
incl
jne
fwait
jmp
je
adc
add
mov
inc
clc
in
inc
clc
adc
clc
cmpsl
clc
mov
fwait
jmp
mov
mov
clc
es
adc
clc
in
adc
add
loop
cwtl
push
enter
add
arpl
add
and
cld
push
ret
add
jnp
add
ljmp
pusha
add
add
add
xchg
xchg
fimuls
dec
dec
mov
clc
in
jl
clc
jg
pop
sub
clc
int3
push
dec
cld
push
ret
jge
pop
es
xchg
sahf
sub
inc
add
inc
clc
sub
jge
push
daa
clc
dec
xchg
fcompl
clc
jo
add
add
mov
xabort
clc
inc
clc
and
add
arpl
add
add
fs
sar
xor
fwait
jmp
or
loop
sub
scas
xchg
aad
aaa
clc
clc
add
xchg
and
add
clc
mov
clc
add
add
clc
mov
clc
sub
insb
in
inc
add
dec
pop
xabort
cmp
repnz
ljmp
add
jnp
add
ret
adc
out
mov
stos
into
ljmp
sub
push
dec
dec
dec
outsl
dec
ficoml
inc
clc
push
add
push
add
push
into
sub
loope
stos
out
movsb
clc
or
push
clc
xchg
mov
and
call
nop
adc
ja
push
ljmp
stos
and
add
fidivrl
int
add
sti
mov
inc
add
jmp
jmp
and
fwait
das
xor
add
jmp
clc
roll
clc
aas
test
imul
fidivs
add
in
out
int3
cmp
daa
clc
adc
add
add
outsb
add
ret
fwait
jmp
add
popa
dec
insl
jb
add
add
lret
ds
jmp
stos
sbb
mov
clc
ja
clc
fisubrl
fwait
jmp
jp
ja
add
icebp
pop
icebp
je
clc
das
popf
mov
lcall
jmp
fwait
xor
jecxz
add
add
clc
and
add
cltd
lret
jg
outsb
fwait
pop
clc
adc
add
jge
jno
add
cmp
add
add
and
lea
fwait
jmp
insb
xor
mov
xor
clc
ret
jno
add
sbb
sub
add
cs
add
add
add
lret
cmp
pop
mov
adc
fst
inc
clc
mov
inc
add
xor
add
clc
dec
sbb
adc
cmp
sub
add
not
ret
clc
jns
mov
cld
push
ret
sub
push
dec
lahf
jecxz
adc
clc
add
add
mov
add
pop
into
jge
clc
cmp
aam
add
pop
adc
add
cmp
fs
xlat
xlat
fimull
dec
sbb
decb
and
add
xlat
dec
scas
data16
test
popa
add
xor
add
push
add
outsl
frndint
push
rclb
mov
sub
sub
jecxz
in
adc
clc
inc
clc
dec
cmp
add
jno
add
pushf
pop
cwtl
dec
bound
add
clc
je
clc
fbld
add
mov
clc
mov
clc
leave
scas
pop
jo
add
add
inc
clc
repnz
movsl
clc
xor
add
and
add
clc
rcr
mov
cmpsb
clc
fcmovb
clc
add
add
scas
jns
clc
inc
clc
add
add
sar
cli
bound
add
mov
das
mov
add
xor
add
lods
test
add
pop
push
clc
push
clc
jbe
add
loope
scas
dec
lods
cmp
push
add
rcrl
shll
inc
add
push
add
sar
add
pop
ficomps
popf
mov
inc
add
fidivrs
pushf
outsl
ljmp
call
sbb
dec
imul
mov
pop
inc
add
or
mov
stos
lret
sar
arpl
add
add
xlat
add
add
mov
stc
xor
add
cmovns
test
into
ss
jae
add
clc
push
add
push
push
sbb
clc
arpl
add
sub
xchg
ret
mov
and
hlt
fstp
out
lea
add
add
or
add
add
add
inc
add
aad
jo
add
cmp
add
shlb
clc
pusha
add
clc
or
pop
jno
add
inc
add
enter
inc
clc
fcompl
cmp
add
add
add
pop
sub
inc
add
insb
pusha
add
sub
clc
cltd
mov
cld
pop
pop
cli
push
pop
popf
ret
push
push
add
sar
clc
mov
shll
lret
pop
fidivrl
clc
fidivrs
fstl
add
out
dec
sarb
inc
clc
ret
std
nop
mulb
iret
data16
fdivrl
add
call
clc
adc
add
mov
and
add
add
xor
sbb
add
std
mov
add
dec
mov
fstpl
ficomps
clc
jmp
repnz
scas
in
pop
pop
pop
cld
mov
pop
shll
scas
pop
repnz
pushf
ss
clc
mov
pop
cmp
add
mov
add
clc
js
pop
clc
fldt
clc
mov
xor
add
shrb
clc
mov
jb
add
add
pop
xabort
scas
stos
dec
leave
jns
clc
bound
add
clc
xchg
ds
add
or
popa
add
sub
in
lods
pop
or
pushf
ljmp
setle
xchg
xchg
movsb
clc
popf
clc
sbb
add
pop
xor
add
or
pop
mov
add
sbb
int3
int
add
int3
int
add
aam
dec
insb
pop
aas
test
mov
add
aas
icebp
das
pushf
cltd
and
add
clc
popf
sub
jmp
xchg
lcall
add
cwtl
xchg
clc
sub
add
add
cmp
add
imul
cmp
xchg
punpckhbw
aaa
cmp
mov
add
imul
maxps
add
mov
mov
add
mov
out
movsb
clc
outsb
pop
and
dec
jl
clc
or
cmp
clc
dec
sahf
ja
add
es
jmp
jle
in
leave
push
clc
or
cmp
in
dec
pop
ds
pop
xlat
fisubrs
lods
or
add
push
cmpsl
clc
dec
iret
and
xor
add
enter
add
clc
lods
inc
add
pop
into
pop
call
clc
lea
shlb
add
sti
jae
add
clc
jnp
call
ss
jl
mov
cmp
add
fistps
testb
add
push
jmp
add
jecxz
fcmovnu
outsl
ret
jecxz
xor
decb
xchg
leave
sti
scas
sub
jne
aas
xchg
or
push
add
loopne
int3
mov
fs
sub
mov
add
movsl
clc
hlt
gs
mov
test
clc
push
add
jmp
add
dec
push
add
daa
clc
aas
cmc
xchg
lods
xchg
jecxz
insb
cmp
add
or
push
clc
fidivrs
mov
add
or
fs
and
add
out
test
jns
clc
and
add
jmp
clc
xbegin
and
int
clc
clc
xor
lock
cmp
es
and
add
scas
sbb
pop
ret
jae
add
test
or
clc
mov
mov
sbb
clc
mov
outsb
imul
mov
add
aas
mov
inc
add
mov
add
cli
mov
pusha
add
lock
mov
ss
enter
ds
lods
repnz
add
shrb
test
clc
stos
inc
clc
and
add
jae
add
clc
in
jle
cwtl
outsb
cmp
add
add
add
aad
ja
jne
mov
add
clc
push
clc
mov
clc
scas
fstps
sbb
sub
clc
or
stc
sbb
clc
daa
clc
mov
mov
daa
clc
inc
clc
out
jns
sbb
or
add
xor
add
add
xchg
sti
ljmp
int3
pop
cmpsb
clc
pushf
xor
add
add
divb
add
clc
push
clc
scas
mov
add
inc
clc
hlt
je
enter
clc
int
add
dec
idivb
sub
xor
add
cmpsl
clc
mov
ss
dec
mov
clc
cmpsb
clc
inc
clc
and
mov
lcall
ret
clc
fcmovbe
xabort
es
pop
mov
add
mov
add
shlb
add
push
mov
add
mov
add
add
das
fs
cltd
inc
add
pop
sbb
add
jmp
sbb
hlt
sbb
mov
mov
xchg
inc
clc
pop
jno
add
clc
inc
clc
xlat
and
add
add
adc
add
xchg
add
add
or
clc
jne
inc
clc
xabort
add
jp
pop
cli
mov
mov
or
cmp
pop
pusha
add
inc
add
mov
pushf
sub
ret
add
add
add
int
add
cmp
xchg
xchg
int
test
pop
xlat
dec
aam
add
add
lods
sub
xabort
push
add
fucom
clc
notl
clc
mov
add
mov
mov
mov
nop
imul
jmp
clc
gs
test
sub
je
add
mov
cld
xchg
add
add
int
or
add
test
mov
sub
dec
movsb
clc
xor
add
jo
add
cmc
xabort
clc
sti
mov
add
adc
add
add
clc
jp
cmp
popa
add
lods
imul
push
add
jbe
clc
push
clc
enter
and
jecxz
data16
pop
stos
insl
mov
mov
clc
sar
add
xor
xchg
mov
xchg
push
add
into
dec
dec
adc
add
add
je
clc
mov
add
stos
and
add
clc
jl
add
out
je
clc
cmp
clc
into
or
add
gs
ret
clc
pop
iret
arpl
add
clc
or
add
aaa
lahf
adc
add
mov
ljmp
and
add
in
aam
fsubp
clc
mov
clc
pop
push
add
movsb
clc
ljmp
clc
pop
or
clc
outsl
cmp
ja
clc
jne
jns
mov
clc
mov
idivb
or
out
mov
clc
inc
add
rcrb
cwtl
xabort
gs
fimull
clc
stos
data16
jnp
int3
mov
rcll
add
ss
add
mov
popf
push
loope
clc
lods
loopne
das
cmp
xchg
sahf
pop
or
clc
imul
add
clc
cld
mov
clc
into
or
add
and
add
movsl
clc
test
pop
into
cmp
in
rcl
addr16
sub
sti
pop
xchg
fisubs
clc
cmp
sub
pusha
add
aam
clc
mov
into
push
add
aam
aas
xor
add
add
push
xchg
push
add
and
add
std
adc
xor
add
add
addr16
out
sub
arpl
add
movsb
clc
cmpsl
clc
xor
clc
adc
add
add
add
and
add
repnz
mov
aaa
push
clc
loope
xabort
xchg
scas
mov
add
add
in
mov
cmpsl
clc
xchg
inc
add
xchg
popa
add
push
clc
xor
add
add
insb
jge
clc
push
add
insb
dec
fmull
xor
add
ds
add
cltd
dec
jmp
clc
and
add
clc
xchg
mov
clc
cmp
stc
fwait
mov
mov
add
out
mov
clc
fstpt
clc
dec
jae
add
clc
test
mov
pop
cmp
leave
insb
adc
add
clc
out
jge
cmp
sub
or
clc
data16
leave
pop
ja
sti
lret
stos
or
loopne
shl
in
and
and
add
add
cld
cld
ds
mov
push
clc
jbe
add
jo
add
jns
es
stos
ret
add
int
clc
aaa
dec
pop
ds
clc
push
add
push
add
test
cmp
add
add
mov
add
cmpsl
clc
and
mov
gs
insb
cmp
clc
inc
add
jmp
mov
sti
and
ficompl
aam
ss
jg
jnp
pop
loop
fidivrl
add
outsl
test
in
cmpsl
clc
test
cld
push
sahf
cli
sbb
mov
clc
dec
mov
rorl
dec
pop
clc
sub
imul
add
ficomps
sti
pop
jno
add
mov
add
cmp
clc
xor
or
add
xchg
jmp
xabort
add
out
or
cmp
gs
mov
add
adc
push
clc
das
mov
cmp
clc
sub
mov
xlat
xchg
adc
add
xor
add
clc
es
jb
add
inc
add
lods
add
repnz
clc
jl
lods
jb
add
xchg
mov
adc
add
add
and
add
jae
add
lahf
xabort
add
sti
clc
jo
add
clc
pushf
clc
push
lock
add
clc
pop
cmp
icebp
inc
clc
sti
xor
add
add
xchg
xchg
loopne
cmpsb
clc
sub
add
jno
add
add
outsl
pop
lods
sbb
add
add
clc
leave
push
add
popf
ret
clc
fdivrp
xor
out
cmp
xabort
loopne
adc
add
sar
stc
out
adc
add
clc
xchg
notb
add
add
inc
clc
dec
mov
and
add
add
xchg
sub
add
jmp
fstp
xchg
and
add
jbe
clc
sar
clc
xor
add
pop
cmp
jmp
or
cmp
jo
add
jl
push
clc
adc
pop
and
add
clc
ja
add
add
clc
out
ds
add
sub
mov
and
add
add
xchg
jne
mov
add
bound
add
in
mov
outsl
mov
lcall
ljmp
add
clc
mov
arpl
add
clc
sub
add
mov
call
inc
add
idivl
xchg
hlt
sub
mov
or
cmpsl
clc
outsb
int
and
fldt
cli
sub
clc
jb
add
add
aaa
jg
clc
adc
add
cmpsl
clc
aaa
movsl
clc
mov
add
add
mov
add
aam
repz
xchg
sti
push
add
aaa
mov
jmp
pop
imul
sbb
clc
mov
in
jae
add
fistpll
test
sar
or
mov
enter
cwtl
sub
sbb
adc
add
loop
xabort
int
clc
pop
clc
xor
add
add
lret
cmpsl
clc
imul
add
sub
paddd
sahf
imul
add
sub
mov
lret
ss
adc
add
pop
cmpsl
clc
xor
jo
add
xor
add
pop
sti
add
add
clc
mov
in
mov
test
mov
add
ficoml
dec
loope
xabort
movsb
clc
mov
dec
sub
cmp
out
jle
ss
fwait
and
rsm
add
pop
and
add
adc
clc
dec
idivl
clc
push
jp
push
adc
add
add
xchg
cs
je
clc
fwait
sub
add
cmc
popf
xor
add
inc
clc
dec
mov
push
add
test
mov
clc
ss
lret
add
clc
sbb
clc
inc
clc
jno
add
cmp
clc
push
in
or
mov
cmp
test
xor
add
or
add
clc
cs
add
adc
add
add
nop
out
repz
sar
clc
cmpsl
clc
add
clc
xchg
dec
cli
push
cmp
add
jmp
clc
lret
clc
adc
add
sti
jbe
stos
sbb
add
cmp
add
xchg
xor
add
xor
dec
aaa
imul
lods
jb
add
out
ss
pop
or
add
push
xor
add
add
add
stos
and
add
clc
cltd
mov
outsb
mov
and
add
sbb
inc
add
mov
clc
int3
call
aas
cmp
jg
fldenv
clc
push
push
clc
in
push
add
pop
outsb
std
movsl
clc
mov
clc
daa
clc
and
add
clc
add
add
inc
add
lock
iret
sarl
add
push
inc
clc
xchg
xchg
leave
in
or
mov
xchg
push
mov
in
xlat
jmp
add
into
push
clc
xchg
outsb
jno
add
clc
adc
add
add
clc
push
jnp
jp
sbb
cmp
lods
sub
pop
dec
cmpsl
clc
push
add
mov
xor
add
clc
loope
fiadds
cmp
add
sbb
jno
add
pop
filds
add
push
or
popf
dec
dec
cld
inc
add
mov
fnstcw
sar
or
psubsb
divb
add
ret
clc
pop
clc
mov
imul
push
mov
stos
dec
inc
add
and
add
rorb
imulb
push
inc
add
rcl
xor
add
add
cwtl
mov
fs
int
add
dec
gs
or
ret
clc
add
add
jae
add
and
add
int
clc
es
rcrb
ds
cs
out
pop
clc
popa
add
and
add
jne
clc
shll
mov
clc
arpl
add
add
add
add
mov
add
clc
dec
sar
in
loope
mov
test
mov
push
jmp
clc
addr16
cmp
pop
sub
lods
pop
test
cli
sbb
in
push
mov
clc
sub
test
fistpl
test
push
push
add
testl
add
cmc
push
pop
clc
insb
ret
clc
outsl
mov
sar
jb
add
vunpckhps
pop
pop
sub
push
clc
flds
aam
jg
clc
icebp
lret
outsl
inc
add
pusha
add
xor
add
add
sub
clc
mov
negl
scas
inc
add
fdivl
ret
iret
mov
clc
loop
jb
add
clc
jno
add
xchg
in
pop
adc
push
cmp
clc
mov
lahf
jb
add
clc
xor
clc
clc
test
das
pusha
add
jge
clc
push
dec
mov
clc
shrb
add
dec
rol
clc
mov
add
xor
add
fdiv
fldl
add
add
aas
sub
xchg
out
dec
add
add
cmp
xchg
mov
fimuls
adc
add
clc
push
xchg
sets
mov
add
add
clc
sub
iret
test
fmul
push
sbb
add
inc
add
sar
stc
push
xchg
mov
add
or
jns
fsubl
add
cmpsl
clc
push
sarb
out
push
add
or
add
scas
int3
add
jge
add
cld
and
xchg
add
add
mov
add
lahf
jno
add
cwtl
test
clc
stos
sub
add
cmp
adc
add
sti
xchg
rep
xlat
xchg
sub
mov
pop
movzwl
clc
sub
clc
insb
fwait
push
sar
xor
add
cmpsl
clc
sbb
add
add
add
mov
cmp
mov
xbegin
lock
add
stc
push
add
rcrb
adc
inc
clc
loop
push
fstpl
enter
clc
adc
add
or
clc
pop
test
adc
out
into
ljmp
filds
add
jg
mov
scas
jmp
in
jmp
clc
cltd
sub
dec
xchg
mov
decl
data16
pusha
add
cld
iret
movsl
clc
mov
push
add
inc
add
enter
enter
xchg
stos
idivb
dec
add
add
clc
mov
sub
add
adc
add
add
or
xchg
in
inc
clc
dec
out
xchg
jno
add
clc
cwtl
popa
add
mov
push
clc
push
sti
or
test
sbb
add
add
clc
cmp
clc
pop
mov
add
xbegin
add
mov
add
mov
add
fistps
dec
push
add
xchg
sbb
clc
mov
inc
add
aad
fidivl
push
add
pop
fsubs
adc
add
ljmp
add
clc
mov
clc
sar
loope
push
xchg
push
clc
imul
stc
clc
mov
add
mov
sub
jo
add
int
xchg
imulb
add
aad
sbb
dec
mov
and
add
popa
add
jno
add
cmp
add
popf
add
add
clc
lahf
pusha
add
dec
mov
sbb
ret
clc
adc
clc
cmp
js
sar
clc
out
inc
clc
fildll
test
clc
or
jmp
cmp
pop
and
add
jmp
clc
sti
add
cmp
add
mov
mov
clc
fdiv
sbb
push
add
xor
add
lret
scas
cmp
clc
sub
clc
into
leave
cmp
dec
adc
add
mov
add
add
clc
pusha
add
or
clc
fwait
mov
add
cmp
daa
clc
push
add
cmp
imull
push
jbe
sbb
pusha
add
adc
add
test
clc
jge
cmc
cwtl
in
mov
push
push
es
repnz
clc
pusha
add
dec
insl
sbb
add
mov
clc
push
ret
inc
clc
insl
sub
movsb
clc
pop
ds
pop
leave
pop
in
jb
add
pop
aad
dec
xchg
add
add
sbb
mov
rorl
mov
jbe
clc
jg
daa
clc
or
jg
jns
xor
add
clc
xchg
jle
add
jg
fs
es
test
clc
iret
nop
fdivrl
clc
inc
add
aad
sub
jns
pushf
repz
in
addr16
inc
add
inc
add
xbegin
dec
imul
fnstenv
ret
clc
mov
add
sub
add
mov
movsb
clc
push
add
stos
js
lcall
nop
push
rolb
sar
repz
add
add
into
sbb
sub
add
das
ret
clc
sar
test
fisttpl
mov
sbb
popf
pop
jo
add
clc
ret
clc
push
adc
add
pop
repnz
push
add
jae
add
cmp
pop
jnp
inc
clc
sar
cmpsb
clc
insb
pop
and
add
xor
add
clc
inc
clc
push
add
out
data16
mov
sbb
imul
and
add
adc
add
hlt
scas
ret
clc
cltd
dec
outsb
adc
add
clc
loop
sar
shrl
pop
clc
pop
push
xor
add
clc
cmp
add
imul
cwtl
mov
jge
mov
dec
lods
jg
push
jb
add
xchg
pop
ds
clc
pop
clc
inc
clc
aam
fcomps
or
clc
ds
jmp
fldenv
xor
add
out
mov
clc
add
jle
mov
pop
cmp
mov
clc
aad
clc
pop
gs
insb
xor
push
clc
stc
test
dec
repz
icebp
cmp
bound
add
jns
clc
fldcw
ror
testb
add
xchg
xchg
jecxz
mov
jle
xor
add
or
add
clc
push
test
fwait
into
loope
jne
xchg
xor
add
add
and
add
movsb
clc
xor
add
iret
ljmp
jbe
jecxz
jg
mov
fsubrs
pop
es
lods
es
mov
mov
and
add
inc
add
jbe
dec
pushf
mov
add
jo
add
jle
pop
jnp
clc
dec
cmp
data16
fstl
add
add
jns
clc
pop
stos
test
dec
repz
clc
jl
xchg
ljmp
mov
cmp
clc
sar
loopne
xchg
xchg
clc
ljmp
add
clc
jle
clc
stos
cs
js
clc
rcr
xor
inc
clc
pop
clc
adc
add
pop
add
add
in
nop
or
fsubs
rol
clc
adc
add
test
xchg
pop
or
data16
std
movsb
clc
aad
filds
add
popa
add
int
clc
in
push
add
add
add
push
dec
xchg
mov
clc
clc
das
repnz
pop
push
add
stos
mov
add
inc
clc
jns
in
shl
test
mov
xchg
jge
clc
xbegin
fstps
addr16
scas
sub
push
add
lea
jl
sub
push
add
lods
add
add
mov
rcrb
sar
fucompp
pop
pop
dec
incl
test
add
add
clc
dec
adc
test
add
lods
ret
clc
movsb
clc
jp
scas
lahf
int
push
jnp
clc
push
add
rorl
adc
add
push
push
in
cld
mov
lods
divb
add
inc
clc
test
pushf
sbb
push
fistpll
addr16
add
jne
mov
xor
add
cli
cmpsb
clc
shlb
add
xchg
test
clc
es
ret
mov
clc
repz
clc
into
sbb
add
or
clc
jne
dec
xchg
out
xchg
and
add
aad
sub
clc
cltd
xchg
and
add
adc
add
jno
add
and
add
lret
clc
int3
scas
gs
mov
test
adc
clc
fistpl
push
add
lock
sbb
clc
lahf
movsl
clc
dec
sbb
shrb
ds
test
xor
scas
imul
sbb
dec
mov
add
add
lods
and
in
adc
clc
xchg
aad
add
sbb
dec
scas
ret
add
sar
clc
scas
out
push
push
add
fs
add
add
dec
in
cwtl
mov
incb
clc
mov
mov
cmpsl
clc
dec
loop
dec
cmp
clc
pop
mov
clc
lret
clc
pop
movsl
clc
push
insl
mov
clc
push
or
add
enter
loopne
sub
das
sub
lods
mov
add
pop
inc
add
aam
clc
xchg
dec
and
dec
adc
add
mov
cmp
sub
clc
add
add
add
insb
mov
add
add
sub
cmp
push
add
clc
in
cmp
ret
clc
xabort
add
mov
clc
xbegin
lods
cwtl
sbb
jae
add
add
or
mov
inc
clc
repnz
add
inc
clc
aaa
iret
insb
lods
xchg
call
add
add
pop
out
lret
lods
xchg
push
add
rcl
int
clc
push
lcall
sbb
clc
mov
add
test
add
jecxz
cmp
add
add
add
xabort
sub
pusha
add
bound
add
clc
adc
add
or
ret
add
aas
idivl
insb
inc
add
jbe
or
cwtl
scas
push
or
leave
or
mov
inc
clc
cmp
fcomps
outsl
pop
repnz
add
jp
clc
sub
add
lods
push
push
ret
clc
ja
xchg
pushf
inc
add
mov
mov
lea
rolb
clc
cli
mov
add
add
add
add
add
test
push
xchg
jmp
push
outsb
fs
cmp
jg
clc
cmp
gs
int
pusha
add
data16
shlb
es
sar
clc
clc
lock
pop
int
daa
clc
add
add
call
dec
xlat
fimuls
fst
nop
add
mov
out
sbb
clc
scas
shr
push
movsb
clc
jnp
add
movsb
clc
adc
add
arpl
add
sar
add
xchg
and
add
push
add
or
add
add
je
enter
mov
cmp
aad
jns
mov
add
add
in
test
xor
add
js
clc
sahf
adc
add
scas
int3
xchg
mov
clc
in
fnsave
and
lock
mov
clc
mov
pusha
add
pusha
add
test
or
xchg
test
mov
popf
int
mov
ja
cmp
and
add
add
sub
cmp
cmpsb
clc
mov
iret
dec
jb
add
clc
push
jb
add
sub
clc
dec
je
out
add
add
imul
add
sarl
cltd
xabort
cmp
add
lcall
clc
sub
clc
es
add
add
dec
adc
add
xchg
movlps
add
inc
clc
pushl
add
add
add
mov
ljmp
push
clc
ja
add
cltd
pushf
push
clc
test
out
popa
add
cmp
sub
clc
movsb
clc
test
clc
pop
test
clc
out
fdiv
push
or
clc
lea
stc
fisttpll
popa
add
mov
jmp
add
adc
add
sar
mov
xor
and
out
es
sbb
jb
add
inc
add
je
rcrb
add
clc
adc
add
fcoml
lock
adc
add
std
jns
xchg
push
add
pop
fwait
cmp
clc
in
gs
xor
add
scas
pop
sub
clc
movsl
clc
sti
arpl
add
pop
test
daa
clc
sub
add
aad
out
clc
and
add
in
sahf
adc
add
add
xchg
hlt
movsb
clc
scas
mov
mov
add
add
loopne
push
add
fistpll
xchg
jb
add
scas
dec
cmp
pop
mov
add
add
lret
xor
add
add
test
ret
clc
out
popa
add
jo
add
outsb
sub
mov
clc
sbb
push
push
clc
add
add
inc
add
xchg
push
clc
cmp
add
push
push
clc
push
add
add
add
xlat
sti
cmp
clc
adc
add
call
xchg
cmp
popf
cmp
incb
add
ds
in
nop
cmpsl
clc
outsl
scas
repnz
add
lea
xchg
jecxz
stos
nop
mov
inc
add
sar
clc
mov
clc
or
inc
clc
clc
sbb
add
add
xor
add
dec
xchg
add
add
clc
mov
mov
add
clc
outsl
test
add
jae
add
sub
add
add
push
add
dec
xchg
lock
out
cmp
clc
xor
inc
clc
in
or
sub
movsb
clc
xchg
xbegin
push
add
xchg
add
add
add
clc
sub
daa
clc
mov
lret
mov
inc
add
leave
pop
mov
fs
mov
int3
es
vsubps
dec
dec
daa
clc
pop
fwait
push
add
repnz
fmulp
mov
test
scas
mov
pop
mov
inc
clc
scas
add
add
xor
add
clc
sub
push
add
rcr
xchg
lods
mov
aaa
int
adc
add
add
xchg
adc
add
clc
mov
add
out
xabort
add
add
clc
mov
and
popf
inc
add
mov
fsubl
aas
jg
add
out
xchg
icebp
cmp
out
cmp
add
int3
xor
popa
add
pop
in
mov
add
add
fldcw
xchg
sbb
leave
lock
mov
stos
cmp
pushf
jb
add
and
add
cmp
sbb
add
cli
cmp
jge
push
xor
add
push
movsb
clc
push
add
xor
add
clc
aas
aad
add
push
add
leave
pushf
popa
add
xor
add
addr16
stos
in
out
scas
cmp
add
icebp
xor
add
mov
cmp
mov
ljmp
xor
add
outsb
and
add
mov
add
mov
lock
mov
jge
dec
push
pop
clc
cs
add
imul
add
mov
add
jmp
mov
mov
jle
inc
clc
xchg
xchg
add
add
add
inc
clc
xor
add
add
clc
sub
push
clc
out
add
add
xchg
xchg
cli
test
push
add
loopne
fs
jno
add
outsl
sub
clc
pop
imul
clc
int3
jg
imul
and
push
fs
out
add
add
push
add
std
inc
add
loopne
out
enter
and
push
add
frstor
add
add
inc
clc
xor
add
inc
clc
push
add
mov
add
test
xchg
sub
clc
in
pushf
adc
add
clc
mov
add
add
add
add
es
jl
clc
cmp
clc
cmp
jnp
aad
clc
imul
and
add
add
cmp
data16
push
add
fs
add
fidivs
inc
clc
mov
pushf
fists
test
cmp
scas
mov
mov
mov
clc
fadds
add
push
into
mov
shr
xchg
or
add
int3
adc
xchg
jbe
scas
sub
add
sub
sbb
in
aad
or
insb
xchg
ja
clc
out
clc
data16
xbegin
aas
mov
clc
out
aam
inc
clc
adc
push
xor
add
sub
out
mov
clc
out
dec
and
mov
add
leave
lea
add
lret
adc
add
push
dec
push
add
sub
add
daa
clc
ret
bnd
es
or
stos
or
mov
add
roll
movsb
clc
xchg
addr16
add
add
xchg
jmp
clc
movsb
clc
jo,pn
add
add
je
adc
clc
fnstsw
push
ss
add
inc
clc
decb
inc
clc
aam
out
test
call
aas
mov
cwtl
mov
add
add
adc
add
add
push
sub
out
sbb
mov
add
add
inc
clc
mov
add
out
lret
loop
rcll
scas
xlat
movsb
clc
in
push
pop
clc
stos
shll
add
pop
stos
ror
jbe
add
decl
push
add
ja
add
stos
sbb
cltd
ja
clc
or
lahf
sub
clc
test
clc
jns
clc
sub
loope
jge
fmul
xchg
sbb
sub
add
clc
fimull
push
lret
mov
clc
lret
data16
xlat
outsl
lret
push
es
test
aad
jg
push
clc
jbe
cmp
add
icebp
cmp
lret
cmpsb
clc
pop
sub
clc
adc
add
out
pop
mov
test
clc
in
xchg
repnz
clc
sbb
add
add
clc
enter
xchg
rolb
adc
add
nop
je
cmpsb
clc
cmp
dec
ret
sub
adc
add
clc
pop
push
je
adc
add
into
outsl
adc
push
xchg
sar
add
push
cmp
pop
jecxz
lret
ret
clc
mov
and
jmp
pop
jbe
clc
pushf
jns
clc
sub
clc
pop
or
mov
data16
test
sub
jl
pop
clc
xlat
sbb
pop
xchg
or
add
add
jno
add
add
xchg
lcall
jmp
add
push
stos
lods
fdivr
fld
clc
stc
mov
clc
xchg
jle,pt
xchg
dec
dec
iret
mov
jne
xchg
dec
push
add
and
add
mov
sar
add
fldcw
aam
pushf
inc
add
mov
stos
lea
mov
ss
insl
in
xor
add
idivl
cmpsb
clc
xor
cmp
pop
pop
shlb
out
cs
or
insb
pop
fistpll
pop
push
xabort
fdivrp
fisubrs
aas
cmp
clc
test
xor
add
clc
insl
dec
sub
xbegin
clc
int
addr16
push
push
add
lret
push
add
add
add
clc
xor
add
add
leave
jb
add
out
inc
clc
clc
add
add
clc
shr
hlt
cmp
jae
add
clc
rcrb
and
add
scas
xchg
pop
push
cmp
in
pushf
jle
mov
in
jo
add
int
push
ss
or
clc
nop
add
clc
and
inc
clc
mov
clc
ljmp
xlat
push
mov
add
sbb
push
fdivr
sbb
adc
add
add
aad
jl
mov
add
mov
lahf
and
add
clc
xchg
hlt
divb
mov
jae
add
rcrb
dec
cmp
popa
add
inc
clc
popf
jle
xchg
cmpsl
clc
das
repz
dec
dec
mov
inc
add
or
clc
cs
test
push
add
hlt
or
inc
clc
loope
jecxz
xchg
repnz
sahf
xchg
add
add
push
sbb
push
ja
add
inc
add
jb
add
mov
jb
add
add
lods
push
add
out
out
test
adc
add
outsb
inc
clc
rcrb
clc
mov
pop
pop
jp
add
sub
mov
cmp
clc
mov
push
add
xchg
lods
data16
mov
test
xor
clc
out
aad
clc
aam
add
xor
clc
sub
add
xchg
jne
dec
xchg
rcrb
es
or
dec
cmp
lea
add
add
add
add
rcrb
repz
and
add
daa
clc
ja
push
add
rolb
das
add
inc
add
test
clc
lret
clc
int
fidivs
cmp
add
pop
mov
cmp
sbb
mov
cmp
add
lods
cmpsb
clc
pop
mov
clc
gs
xabort
push
clc
shll
add
shl
mov
push
xor
add
cmp
add
lea
loopne
test
clc
testb
insb
jp
popf
outsb
scas
sub
imul
add
xchg
scas
cmp
mov
xabort
clc
xchg
lods
xchg
outsb
lret
add
xor
add
lods
js
clc
enter
test
outsb
out
lahf
xchg
cltd
mov
cmp
add
lods
sub
clc
stos
pop
or
adc
add
clc
js
sub
sub
add
mov
add
add
repz
inc
add
push
push
cs
clc
mov
cmp
mov
cmp
lahf
test
or
ret
arpl
add
clc
fmul
push
clc
or
into
scas
jb
add
mov
push
dec
xor
outsb
push
xor
add
add
sub
loopne
xchg
out
mov
jmp
data16
hlt
fistps
clc
mov
add
clc
ds
push
xbegin
icebp
rorl
mov
add
jns
pop
jno
add
fwait
cmp
in
or
add
sub
add
cwtl
jns
add
out
aad
mov
clc
adc
call
add
and
add
mov
dec
xor
add
add
dec
popa
add
sub
jae
add
add
jb
add
clc
jge
fistpl
outsl
lahf
in
insb
ss
inc
clc
lcall
add
mov
clc
mov
loop
es
ja
add
mov
add
sbb
cmc
adc
mov
clc
inc
clc
jns
cmpsl
clc
enter
jle
sbb
in
mov
add
hlt
jmp
movsb
clc
cmp
clc
cmp
mov
mov
clc
jl
clc
stos
adc
add
add
add
filds
add
loope
mov
add
push
add
std
lods
je
mov
add
stos
jecxz
hlt
and
add
add
jg
std
sub
loope
push
and
add
add
or
repnz
outsb
inc
clc
xor
mov
clc
pop
outsb
and
add
inc
add
adc
add
clc
test
clc
int3
stos
jnp
dec
sbb
push
cwtl
push
xor
add
pushf
mov
clc
mov
push
xchg
push
je
cmp
add
in
clc
loopne
add
add
sbb
add
sbb
popf
pmulhw
adc
das
pop
xchg
pushf
cmpsb
clc
push
shrl
add
jecxz
pop
inc
clc
shlb
add
cs
mov
int
in
ret
clc
add
add
add
adc
add
lahf
xor
clc
push
cld
jg
cmpsb
clc
lahf
into
or
add
mov
add
lcall
clc
jns
rclb
add
call
or
or
add
add
adc
add
pusha
add
xchg
mov
clc
ds
aas
out
loop
cmp
add
cmp
rorb
stos
pop
lods
js
dec
inc
add
sub
jmp
mov
pop
jnp
clc
pop
clc
mov
jp
mov
loop
sti
cld
jno
add
popf
mov
add
push
push
xor
add
cmp
dec
rcrb
add
lcall
dec
clc
cmp
cwtl
mov
mov
cmpsb
clc
adc
add
add
loope
call
int3
jbe
cmc
cmp
cmp
pusha
add
data16
sub
sti
inc
add
adc
add
mov
push
scas
test
aaa
add
add
fidivrs
mov
scas
call
in
jae
add
dec
popl
add
pop
jl
add
jle
push
or
jp
add
ficoml
clc
push
add
pop
repz
clc
pop
inc
add
xor
clc
xor
adc
xchg
ss
daa
clc
ffree
clc
test
and
add
scas
inc
clc
adc
add
inc
clc
mov
inc
clc
insb
arpl
add
add
add
add
in
cmp
sbb
dec
or
clc
mov
clc
fucompp
je
clc
mov
add
lea
in
pusha
add
xchg
ss
add
sbb
add
filds
and
add
mov
sbb
xchg
mov
loopne
cltd
lret
sti
jns
lret
je
add
inc
clc
test
clc
mov
sbb
clc
inc
clc
mov
add
scas
testb
clc
cmove
push
sti
adc
sbb
std
aam
or
icebp
lods
mov
imul
jae
add
mov
clc
imul
mov
add
call
xor
clc
mov
xchg
or
sbb
add
clc
sbb
add
lods
sub
push
add
jns
inc
add
sub
inc
add
jo
add
cmp
clc
imul
add
clc
xchg
cmc
es
jl
aas
stc
ljmp
add
add
cmp
sbb
imul
xchg
xchg
mov
pop
clc
repz
clc
lret
xchg
flds
add
mov
sar
lods
fsubr
mov
push
into
push
ljmp
clc
mov
in
arpl
add
clc
sahf
mov
xor
add
cmp
sbb
das
lahf
or
add
stc
adc
add
imull
xchg
mov
arpl
add
pop
clc
lcall
clc
aas
clc
ja
clc
pop
clc
lock
add
clc
mov
add
clc
sub
dec
in
push
and
push
stos
js
xchg
mov
aam
dec
dec
negb
dec
mov
add
dec
loop
dec
jb
add
call
add
rolb
dec
mov
add
mov
clc
call
add
insl
pop
pop
cltd
gs
xchg
loopne
mov
fwait
notb
dec
jmp
xlat
jne
add
adc
add
cwtl
jo
add
icebp
and
add
add
add
bound
add
clc
push
out
jmp
sbb
fmull
mov
cltd
mov
clc
scas
test
hlt
mov
sub
ret
clc
cmp
clc
inc
clc
mov
jo
add
insb
leave
icebp
in
push
sar
add
fwait
mov
pop
mov
in
movaps
pop
adc
add
nop
imull
inc
add
mov
add
pop
sub
pop
cmc
mov
lahf
xchg
sti
sar
sub
xor
add
test
dec
mov
nop
jecxz
jle
fisttpl
or
loop
add
xor
or
add
clc
inc
clc
sub
add
add
xor
add
clc
sbb
mov
cwtl
arpl
add
add
add
add
lea
mov
test
pop
ret
adc
add
clc
ret
clc
int
dec
push
sbb
mov
add
in
test
add
add
adc
add
nop
insb
sti
xlat
fwait
mov
add
push
and
mov
pop
mov
clc
jno
add
clc
add
add
mov
add
inc
clc
call
clc
not
jo
add
clc
jp
adc
cmp
sub
pushf
pop
xlat
movsl
clc
push
lahf
dec
lret
clc
imul
add
inc
add
cmp
es
mov
dec
insl
shlb
cmp
repnz
add
adc
add
iret
jmp
clc
pop
xchg
jae
add
jnp
and
add
adc
add
clc
sub
cmp
pusha
add
xchg
int3
ret
clc
in
sti
mul
clc
outsb
fwait
jmp
clc
js
add
dec
inc
clc
inc
add
add
add
add
jecxz
dec
dec
rcr
pop
jp
bnd
add
clc
popa
add
setle
mov
or
sahf
inc
add
xor
add
add
cwtl
ret
clc
mov
ljmp
xor
add
out
xchg
jns
loope
mov
or
add
xor
add
add
jbe
in
out
data16
push
add
divb
add
in
mov
aas
xchg
lret
mov
add
clc
add
add
add
mov
std
dec
dec
xor
add
clc
call
clc
inc
add
add
fwait
dec
lods
stos
out
out
ss
add
and
add
cmp
mov
cmp
je
add
push
insl
bound
add
add
lods
mov
into
scas
push
add
insb
cmp
clc
dec
and
add
cmp
pop
pushf
fxch
ja
clc
movsl
clc
test
clc
jno
add
or
cmp
xabort
dec
pusha
add
pop
lret
dec
jmp
repnz
sbb
add
mov
inc
clc
dec
mov
test
sar
jmp
adc
add
mov
clc
pop
clc
out
dec
aad
cwtl
mov
xchg
inc
clc
pusha
add
xabort
mov
movsb
clc
mov
add
fistl
sub
mov
js
add
cmp
clc
push
xor
add
clc
inc
add
jb
add
add
ret
clc
or
clc
mov
push
leave
pop
adc
add
add
and
cmp
lcall
clc
hlt
mov
lcall
clc
hlt
pop
imul
add
lea
add
clc
out
nop
jne
clc
or
clc
or
clc
mov
add
add
xchg
popf
sbb
clc
bound
add
adc
dec
xor
add
or
mov
xchg
xor
add
xor
clc
xor
add
clc
push
gs
bound
add
fisubl
add
test
insb
sbb
clc
dec
pop
pushf
inc
clc
js
or
lahf
and
add
clc
xor
add
clc
sub
insl
fbld
loope
shll
xor
add
mov
adc
add
xor
add
test
clc
jg
daa
clc
dec
pusha
add
xchg
mov
cs
js
add
clc
push
mov
sub
mov
add
add
add
push
adc
clc
sub
jmp
sub
enter
dec
outsb
shlb
add
add
clc
xchg
fstl
add
fcomip
aad
jno
add
add
inc
clc
dec
fwait
xlat
std
xabort
add
leave
daa
clc
inc
add
out
dec
ja
popf
sbb
jp
sbb
cmp
add
xchg
fs
sub
inc
clc
testb
pop
cmp
clc
mov
add
inc
clc
jle
in
repz
inc
clc
loopne
xchg
inc
add
dec
push
xor
add
mov
jnp
or
fdiv
test
fisttpll
push
ja
clc
pop
clc
sub
add
xchg
xchg
xor
add
push
jbe
pop
loopne
sub
clc
mov
fcompl
add
mov
fstpl
add
jo
add
sahf
dec
and
add
clc
gs
icebp
scas
push
aad
clc
jno
add
mov
or
clc
inc
add
jno
add
mov
clc
jae
add
shlb
clc
popa
add
gs
xor
add
xbegin
mov
clc
stos
pop
cwtl
test
pop
int
add
mov
dec
pop
xchg
loopne
cmp
clc
sar
xabort
inc
clc
inc
clc
cmp
push
dec
cmp
lret
dec
or
add
clc
add
add
add
add
mov
cmp
mov
clc
test
fsubrl
stos
fs
mov
add
dec
jno
add
call
hlt
xchg
stc
es
sbb
cmp
xchg
cmpsb
clc
call
clc
push
add
push
add
daa
clc
ret
add
popf
ret
clc
cmp
add
pop
js
mov
dec
pop
in
ss
es
add
clc
inc
add
or
js
clc
mov
test
jns
negl
frstor
insb
bound
add
jl
mov
add
push
fildll
sbb
gs
cmp
clc
mov
cmp
inc
clc
shrl
inc
clc
pop
lahf
adc
add
sub
jmp
add
add
stos
dec
or
clc
xor
dec
in
lea
add
add
jno
add
inc
clc
or
nop
mov
xor
add
loope
testb
lea
add
xchg
and
add
sub
ja
dec
ficoml
add
cmp
sub
clc
in
pop
int3
mov
clc
divl
add
inc
add
imulb
mov
out
repnz
push
add
lret
xlat
mov
clc
push
jmp
xabort
clc
fcompl
add
scas
cmp
add
jne
lret
ljmp
leave
sbb
loope
mull
mov
jb
add
add
pop
dec
sbb
clc
cmp
lea
add
mov
clc
negl
cmp
jns
mov
aas
mov
mov
add
jne
push
jle
add
into
xbegin
dec
cmp
fs
mov
mov
clc
push
and
add
clc
in
pop
imul
push
add
push
inc
add
add
add
xor
add
outsl
adc
push
add
cmp
pop
cmp
add
cmp
add
and
add
add
jns
mov
sti
sbb
add
sbb
dec
or
clc
adc
add
cmc
mov
and
pop
or
add
sbb
cli
inc
clc
fadd
clc
fbld
add
mov
add
out
insl
aam
add
clc
cmp
jno
add
sti
gs
in
std
nop
pop
jae
add
add
rcrl
lods
test
clc
sahf
jmp
clc
xchg
jnp
in
cwtl
sub
push
add
in
cmp
clc
clc
pop
bound
add
and
add
add
jbe
dec
jno
add
inc
add
mov
add
test
add
add
mov
cmc
lock
dec
testb
dec
push
add
aas
push
cmp
clc
push
dec
cmp
int3
mov
clc
and
add
push
clc
add
aam
cmp
fistpl
cmc
shr
pop
clc
aas
pop
inc
add
xchg
in
jp
mov
mov
add
add
add
or
add
loope
pop
ja
fildl
clc
clc
aaa
aad
clc
push
add
loop
scas
jae
add
add
pop
push
es
clc
push
xor
fmuls
test
cmp
clc
dec
sub
and
clc
and
and
add
enter
xor
add
clc
lods
push
cmp
clc
data16
repz
mov
clc
icebp
dec
shlb
add
mov
int
clc
shrb
dec
inc
clc
or
lret
add
add
loop
fwait
mov
push
in
ret
clc
fcoml
pop
ret
clc
js
clc
mov
mov
dec
jmp
jns
outsl
insl
and
add
ret
cmpsb
clc
pop
clc
ja
mov
cmp
pop
or
clc
clc
into
nop
inc
clc
jmp
clc
popf
lret
mov
fs
mov
cmpsb
clc
mov
clc
mov
fmul
add
add
clc
inc
clc
jge
ss
adc
in
xchg
pop
xchg
cwtl
loop
leave
mov
gs
jns
clc
out
ffreep
clc
dec
dec
repz
int
clc
or
clc
mov
adc
add
int3
ss
mov
sbb
add
iret
mov
sahf
jns
add
inc
add
repnz
add
mov
data16
sbb
hlt
xchg
push
jle
add
or
push
mov
clc
jns
jmp
add
add
add
add
add
and
add
add
xor
add
clc
jbe
lahf
scas
mov
add
jae
add
jmp
lret
cmp
or
cmp
adc
sub
or
mov
add
mov
out
fdivrs
add
addr16
mov
cmpsl
clc
mov
shrb
clc
dec
sbb
clc
in
mov
cmovge
add
clc
mov
pop
inc
clc
add
and
add
add
cmp
add
pop
dec
xchg
inc
clc
movsl
clc
sub
popa
add
or
add
add
add
pop
cltd
sub
push
sahf
lods
add
inc
clc
jp
push
out
std
xchg
and
mov
rorl
clc
cmp
cld
enter
loopne
dec
lods
clc
push
ss
sbb
clc
inc
clc
xchg
ret
clc
xor
add
cmp
add
push
add
push
add
cmpsl
clc
loope
pop
jnp
clc
dec
cmp
mov
sbb
add
clc
aam
clc
mov
add
bound
add
and
add
jae
add
clc
stos
pop
dec
jne
and
add
adc
add
daa
clc
sar
pop
cmp
push
clc
das
sbb
int3
mov
clc
fcmovu
mov
mov
add
fisubrs
clc
jbe
test
cmp
clc
movsb
clc
sbb
clc
bound
add
clc
jbe
add
data16
add
add
stos
jbe
movsb
clc
lea
imul
inc
add
divb
loopne
xchg
out
pop
pop
push
add
stos
mov
add
adc
mov
clc
imul
add
aam
sub
cwtl
bound
add
clc
popf
xchg
sub
clc
inc
clc
and
add
aas
in
pop
rcr
stos
sub
add
arpl
add
pushl
pop
into
inc
clc
mov
clc
jge
add
flds
clc
call
ljmp
clc
jns
cmp
clc
into
mov
ja
add
sub
mov
pop
clc
sbb
clc
test
jg
icebp
jp
jno
add
flds
mov
add
mov
mov
push
lea
fldcw
sbb
clc
xchg
cmp
add
sbb
add
aad
cld
clc
xbegin
cmp
add
pop
sahf
mov
pop
pop
ja
xchg
je
clc
outsb
adc
add
xlat
or
pop
or
popa
add
pop
bound
add
add
gs
ret
add
sub
clc
lret
shll
clc
inc
clc
sub
add
xor
add
jmp
popf
call
jne
jbe
mov
clc
or
add
add
std
xchg
cli
xor
add
clc
in
out
sub
jmp
adc
add
inc
clc
repz
cmp
lcall
clc
pop
clc
inc
clc
and
add
xchg
jge
clc
dec
sub
clc
popf
push
and
add
mov
add
outsl
adc
add
fs
or
rorb
and
add
add
inc
add
jg
ljmp
add
adc
add
add
sbb
add
add
bnd
add
rcrb
jmp
xchg
gs
movsb
clc
imul
clc
mov
add
adc
add
clc
dec
xabort
pop
push
cwtl
iret
lret
cmpsl
clc
stos
and
add
inc
add
cmp
xor
out
pop
mov
add
int3
mov
clc
or
clc
pop
dec
cmp
add
xor
add
clc
dec
mov
push
mov
add
stc
shrb
mov
push
jo
add
push
add
sbb
sub
clc
cli
push
add
cmp
clc
inc
add
mov
sub
clc
fprem
adc
scas
ret
clc
popf
jecxz
inc
add
push
clc
aad
clc
mov
jns
clc
shll
push
iret
aaa
adc
inc
clc
mov
clc
sbb
add
jno
add
clc
cmp
cmp
mov
clc
into
pop
pusha
add
pop
jmp
loopne
and
add
add
sbb
add
clc
jecxz
or
jl
jmp
mov
loop
cmp
dec
jp
out
jg
adc
add
sub
adc
add
mov
clc
int
pushf
cmp
push
xor
add
add
rcrb
int3
inc
add
inc
add
iret
out
pop
data16
shrl
jg
xchg
adc
pop
or
mov
dec
call
adc
add
hlt
int3
mov
add
push
dec
sbb
jg
in
nop
ss
xchg
inc
add
fsubrl
mov
clc
add
cmp
or
add
lock
clc
test
imul
dec
add
mov
rcll
add
das
sbb
iret
or
clc
mov
push
int
clc
mov
add
add
je
clc
xchg
xbegin
dec
mov
ss
pop
stc
or
clc
enter
add
add
adc
add
add
xor
mov
add
add
in
movsb
clc
xbegin
mov
clc
mov
stc
fidivrs
push
mov
clc
nop
loopne
pop
sbb
add
imul
lea
xor
add
jge
add
clc
xor
add
add
mov
adc
fsts
add
cmp
vrcpps
add
push
add
xchg
xchg
sbb
nop
pop
loop
popa
add
mov
clc
mov
mov
xabort
data16
push
pusha
add
out
jp
xor
add
loope
insb
add
stc
test
pop
loopne
push
xor
add
clc
stos
lret
sarl
test
cmc
lcall
add
clc
pop
clc
shlb
add
jge
insb
jmp
clc
adc
add
add
add
push
clc
xor
add
sahf
mov
test
aad
dec
nop
rorb
cmp
icebp
and
add
clc
add
add
add
icebp
inc
add
fs
pop
and
add
clc
xchg
mov
add
xlat
pop
xchg
test
lock
mov
fcmovnu
pop
clc
jg
pop
pop
xchg
gs
and
add
cmpsb
clc
loope
mov
clc
inc
clc
cmp
clc
sub
stos
inc
clc
cmp
daa
clc
stos
cmp
mov
clc
psubb
imull
sub
clc
inc
clc
mov
not
incl
cltd
and
add
add
call
clc
shr
inc
add
xabort
sub
xbegin
clc
mov
lods
mov
mov
add
xchg
insl
sbb
add
xchg
dec
add
xchg
adc
add
test
jmp
out
pop
xchg
jae
add
and
repnz
fs
mov
add
and
xor
add
clc
cmp
sbb
sub
pop
cmp
and
add
clc
fsubp
clc
ds
add
and
push
add
pop
mov
repnz
jo
add
add
cwtl
int3
or
clc
mov
mov
add
xbegin
mov
sti
enter
add
mov
cltd
lcall
fcmovbe
push
addr16
cmp
add
add
ss
pop
cmp
clc
push
stos
loope
in
xbegin
loopne
pop
movsl
clc
cltd
arpl
add
out
scas
mov
cld
push
clc
dec
xor
add
clc
mov
clc
mov
adc
or
add
clc
in
cmpsl
clc
sub
sbb
or
add
sbb
xchg
divl
add
add
xlat
insl
lret
xchg
das
mov
stc
mov
and
add
add
mov
js
stos
shl
clc
pop
in
in
fidivrl
add
cmp
add
pop
xor
inc
add
outsb
sub
add
jbe
push
clc
dec
mov
sbb
sub
mov
shll
mov
clc
cmp
or
fwait
adc
add
adc
add
mov
push
clc
sub
ss
dec
mov
mov
or
clc
sbb
mov
imul
add
xchg
lock
push
scas
add
mov
sbb
pop
mov
add
clc
nop
cmp
add
jge
mov
push
and
add
repnz
xor
std
icebp
je
mov
lods
loope
roll
dec
outsb
xor
clc
stc
pop
int3
cmp
add
push
xor
add
add
pop
fwait
push
add
inc
clc
mov
fisubrs
pop
mov
out
xor
add
mov
cld
xchg
into
mov
xchg
fs
clc
cmp
clc
not
out
and
add
inc
add
cltd
gs
iret
add
mov
add
out
loopne
add
add
mov
sub
divb
mov
xchg
lock
add
call
in
mov
clc
dec
hlt
inc
add
xchg
repz
add
inc
add
leave
bound
add
clc
mov
loope
push
add
ss
xor
add
shl
clc
out
pop
sbb
cmp
add
push
clc
and
add
clc
xchg
pop
lods
stos
addr16
jno
add
add
add
xabort
js
mov
clc
fisubl
mov
popf
push
and
add
fistpll
ljmp
xchg
mov
jg
mov
data16
aaa
mov
daa
clc
sub
out
sub
add
sar
xchg
add
add
int
add
add
add
lea
clc
ret
clc
stos
jg
add
or
xor
adc
clc
mov
sti
mov
clc
test
call
scas
jl
sahf
push
xor
add
mov
clc
rcr
add
add
clc
sbb
mov
mov
sbb
sbb
cld
lods
sahf
add
cld
sbb
fs
dec
inc
add
inc
clc
out
leave
test
mov
ds
mov
insb
inc
add
sub
dec
es
aam
inc
add
xchg
push
jge
stos
mov
ds
and
add
popa
add
cwtl
pop
mov
clc
mov
clc
inc
clc
out
jle
add
sar
and
ss
pop
rorb
sub
in
mov
js
add
cmpsl
clc
dec
jle
clc
push
mov
clc
xchg
fnclex
clc
dec
adc
add
jns
mov
dec
push
sbb
stc
stc
aaa
fisttps
rorl
dec
pop
in
pop
mov
clc
mov
and
add
add
arpl
add
out
jno
add
clc
dec
repz
push
push
add
push
add
movsl
clc
sahf
xor
cmp
fsubrs
jmp
popa
add
dec
cltd
xchg
jbe
std
adc
add
add
bound
add
pop
clc
sar
fstpt
jp
int3
out
jns
aaa
loope
rorl
nop
lods
rcrb
add
sbb
lods
pop
mov
bound
add
pop
iret
arpl
add
sbb
bound
add
add
icebp
pop
pop
cld
movsb
clc
repz
filds
pop
adc
mov
pop
ret
clc
out
fldt
add
add
add
add
inc
clc
gs
and
add
pushf
fdivrl
in
jb
add
xor
add
add
arpl
add
clc
bound
add
and
add
jp
cmp
clc
fsub
clc
sub
lret
and
add
inc
add
push
add
data16
insl
lret
add
loopne
in
fnstcw
stos
lret
popf
ja
shlb
add
jnp
mov
jmp
add
clc
dec
popf
mov
out
xchg
pop
clc
mov
xchg
cmp
xchg
xor
outsb
mov
cmpsb
clc
xchg
adc
add
jno
add
add
xchg
push
add
mov
push
clc
push
add
in
pop
adc
add
cmpsb
clc
popf
xor
clc
jb
add
clc
cld
mov
add
lcall
clc
pop
xchg
cmp
arpl
add
test
loopne
sbb
push
add
fs
negl
sbb
cmp
add
or
mov
jp
mov
add
inc
clc
inc
add
aaa
shrl
clc
xor
test
into
and
push
cmp
clc
xabort
cmp
add
cmp
icebp
mov
idivl
clc
lods
or
add
and
add
lahf
cmp
add
hlt
push
fistpll
clc
data16
cld
imul
clc
roll
add
add
lods
add
add
add
sub
cmp
push
clc
lahf
test
mov
and
mov
add
mov
add
push
js
add
clc
fwait
testl
adc
add
add
std
sub
sbb
jle
inc
clc
stc
loopne
cmp
ds
jae
add
adc
add
jbe
add
jge
pop
ss
pop
sub
lret
test
mov
jae
add
cld
enter
mov
add
mov
arpl
add
test
add
lock
pop
pusha
add
adc
dec
test
test
sar
add
jae
add
adc
add
bound
add
das
mov
lods
cmp
xor
add
imul
ja
outsb
xchg
ret
mov
add
sti
xchg
insb
lea
movsb
clc
cmp
clc
dec
test
or
lods
mov
xabort
sub
clc
sbb
mov
add
xor
add
cld
push
cmp
pop
mov
loopne
lret
mov
pop
imul
pop
imul
ret
xor
add
jne
imull
clc
sub
adc
add
add
ds
add
mov
clc
fdivrl
xbegin
mov
out
mov
add
jl
clc
scas
scas
dec
dec
xor
pop
clc
or
push
add
mov
xchg
or
clc
xor
ja
pop
or
or
into
pop
out
push
outsb
hlt
push
add
sahf
jle
jg
pop
push
add
into
gs
sbb
clc
xor
add
clc
aaa
add
clc
cltd
pop
clc
insb
fsts
add
xchg
in
xchg
push
add
jle
clc
int3
jo
add
enter
dec
jp
je
clc
or
add
mov
cmp
add
mov
inc
clc
popa
add
decb
cmp
call
jmp
sar
mov
mov
pop
push
fdivrl
clc
test
nop
icebp
inc
add
mov
inc
add
sub
add
and
add
and
add
sub
clc
sub
and
add
fdivs
add
pop
sbb
or
outsb
and
das
shll
add
lods
fdivs
add
adc
clc
or
sub
clc
cs
imul
mov
jns
mov
rolb
pop
push
lahf
pop
dec
ja
cmpsb
clc
adc
dec
push
lahf
pop
inc
add
cmp
add
jge
clc
test
sbb
clc
bound
add
outsb
jmp
dec
pushf
int3
arpl
add
add
jae
add
fs
fwait
scas
insb
cmp
or
fnstcw
sub
hlt
jnp
clc
cmpsl
clc
lods
cltd
cmc
inc
add
push
xchg
fidivs
lea
add
mov
clc
and
add
int
clc
jmp
add
iret
push
add
push
mov
add
pop
mov
add
or
xor
add
fisubrs
clc
inc
clc
dec
jmp
mov
fisttps
mov
into
psrld
shlb
clc
push
mov
add
mov
add
enter
clc
clc
pop
loopne
mov
lods
movsl
clc
mov
mov
fdiv
popf
hlt
jle,pt
clc
fwait
lods
ss
mov
cwtl
cmp
pop
push
movsl
clc
cld
mov
into
or
add
add
clc
repnz
sahf
test
int3
mov
or
add
add
mov
sahf
dec
cmc
xlat
add
add
negl
inc
clc
je
xchg
push
add
jne
and
add
leave
sub
out
mov
add
psrld
clc
jno
add
clc
sbb
icebp
adc
add
repnz
cmpsb
clc
adc
add
add
dec
aad
xchg
xor
add
pusha
add
ljmp
cmc
adc
add
mov
aam
cmp
add
je
xchg
fcmovnb
clc
addr16
xor
add
fwait
mov
mov
lods
lods
or
clc
call
xchg
sti
xor
clc
fwait
cmp
inc
clc
out
mov
sbb
cmp
in
jo
add
stos
ja
jmp
clc
and
mov
cmp
jg
xchg
xchg
xchg
push
cltd
scas
daa
clc
cmp
inc
add
xor
add
cltd
lods
loop
sbb
imul
xor
add
mov
clc
sbb
push
mov
push
mov
clc
pop
jecxz
sar
cmp
sbb
add
mov
clc
sbb
add
mov
add
ret
mov
iret
popf
sti
push
mov
dec
mov
clc
cld
add
add
add
inc
clc
sub
add
mov
push
cmc
mov
stos
fmull
dec
fisttps
push
into
mov
outsb
je
mov
push
or
add
clc
xbegin
add
xchg
iret
mov
add
gs
adc
clc
cs
lret
xor
cltd
xchg
mov
push
dec
adc
add
xchg
sub
add
sbb
add
cmp
add
add
movsb
clc
iret
mov
dec
and
add
call
sub
inc
clc
adc
add
and
cmp
add
clc
xor
add
sar
sti
xchg
fs
aas
sub
lcall
add
ds
mov
testl
sub
leave
hlt
cld
and
add
add
jle
xor
xor
je
mov
shlb
repnz
ja
clc
pop
outsb
sbb
es
cmp
clc
or
addr16
mull
add
es
xchg
insl
or
cmc
inc
add
fildll
cmp
jns
fs
aam
add
inc
clc
addr16
clc
sbb
add
mov
mov
add
nop
sar
cmpsb
clc
sbb
push
mov
sub
add
sub
xchg
pop
gs
ss
lcall
pop
clc
or
add
pushl
enter
pop
add
add
clc
out
mov
shrb
inc
clc
sti
push
add
cmp
add
pop
movsb
clc
repz
adc
add
add
mov
cld
inc
add
or
arpl
add
clc
cmpsl
clc
mov
mov
add
cmp
add
add
add
jb
add
in
cmp
jecxz
mov
xor
fldcw
int3
loope
jae
add
mov
push
clc
jecxz
push
add
loop
xchg
addr16
mov
mov
mov
imul
shll
clc
cmp
and
add
xor
repz
clc
cmp
es
bound
add
jg,pt
clc
negl
and
shlb
add
mov
je
addr16
call
add
push
clc
sarl
lret
clc
cli
jb
add
xor
add
mov
xlat
mov
add
sar
clc
fcomps
mov
clc
xchg
sbb
add
xabort
imul
ret
loop
pop
xchg
mov
mov
clc
pop
clc
cs
and
lods
push
add
gs
xor
push
decl
push
push
xor
add
mov
stos
sub
sbb
jno
add
clc
mov
or
data16
sbb
sub
mov
add
add
ret
jecxz
cmp
xchg
mov
add
iret
xor
add
mov
dec
mov
push
add
inc
clc
xor
add
movsb
clc
mov
cmp
clc
push
jp
add
stc
dec
pop
sbb
mov
add
clc
xor
add
clc
inc
clc
fwait
out
ja
call
cmp
jnp
xchg
push
pusha
add
and
add
jle
sbb
add
out
dec
inc
clc
call
imul
clc
leave
add
add
lods
js
mov
mov
popf
or
add
repnz
push
add
xchg
add
clc
push
dec
outsl
inc
clc
je
aaa
cmc
or
add
mov
popf
in
lock
add
clc
and
add
out
loope
inc
add
push
outsb
insb
push
cmp
stc
jge
clc
cltd
call
clc
mov
ljmp
lcall
clc
xchg
mov
clc
hlt
pop
xor
clc
std
notb
mov
xchg
sub
leave
jg
je
jb
add
jp
clc
lods
push
add
and
add
sbb
es
cld
pop
dec
mov
clc
int
bound
add
add
add
cmp
or
push
push
add
cltd
fadds
add
add
adc
add
clc
sub
clc
loop
mov
scas
mov
clc
xabort
or
clc
jle
imul
xbegin
stos
data16
movsl
clc
xchg
sub
add
jne
add
cmp
dec
js
clc
mov
fcoml
sar
xchg
out
leave
gs
sub
int3
adc
push
adc
adc
add
add
add
je
mov
inc
clc
int3
mov
mov
add
sar
cmp
xor
add
add
jmp
add
shll
jle
dec
fucomi
cwtl
in
jl
repz
lock
clc
or
aas
fninit
clc
jb
add
jbe
xadd
ret
add
or
clc
test
ja
insl
cmpsl
clc
push
add
xabort
and
add
xor
add
js
push
leave
cli
out
sahf
mov
jne
rorl
fsubl
add
out
aas
imull
add
mov
pop
aaa
call
add
or
stos
push
add
pop
jae
add
cmp
add
in
nop
je
clc
out
es
cmc
xchg
xor
clc
out
cwtl
add
add
add
and
add
cli
fsubrs
je
jl
clc
jp
push
add
mov
cmp
call
push
and
push
mov
fmuls
add
sti
sti
fimuls
clc
sahf
xor
add
out
ljmp
lods
into
cld
lods
push
in
mov
add
lods
jbe
paddusw
clc
xchg
mov
sar
and
add
lret
js
sub
push
add
add
ja
jne
aas
addr16
pop
or
popf
inc
clc
cld
xchg
mov
add
cmp
add
int
clc
int3
cs
dec
clc
hlt
mov
jp
inc
add
loopne
add
dec
mov
repnz
add
adc
push
add
add
adc
add
mov
add
pop
shl
aas
jne
clc
inc
clc
mov
in
stos
mov
popa
add
or
clc
or
add
pop
fld
clc
fisttps
push
add
cmpsb
clc
rolb
clc
ret
push
cmp
mov
clc
das
add
add
test
xor
push
add
movsl
clc
xchg
jbe
sbb
ror
loopne
add
add
std
cmpsl
clc
xor
add
push
notb
dec
test
mov
clc
adc
add
clc
add
add
add
fstl
add
cs
add
sub
clc
cmp
mov
addr16
mov
hlt
inc
clc
mov
std
sub
inc
add
sub
push
je,pt
add
mov
aaa
cwtl
adc
add
add
push
arpl
add
add
add
into
hlt
cs
test
fs
mov
imul
add
sub
add
sahf
fs
mov
stc
fcomi
leave
loopne
idiv
imul
test
jge
and
cmp
pop
sbb
clc
ja
mov
xabort
imul
cmp
mov
mov
out
outsl
cmp
cmp
popl
fwait
inc
clc
push
out
fs
jl
scas
push
add
mov
movsl
clc
mov
pop
aad
fcoml
add
insl
jp
clc
mov
add
dec
lods
xlat
adc
jne
clc
jno
add
clc
xor
inc
add
sub
or
clc
xabort
xor
add
clc
cmp
sub
gs
outsl
push
add
add
jmp
add
ficoms
push
xchg
push
loopne
out
pop
sbb
xchg
push
stos
push
add
jge
sar
pop
inc
clc
pop
rolb
add
push
das
jae
add
push
sar
clc
dec
data16
clc
xchg
popa
add
push
add
xchg
inc
clc
addr16
shll
fs
adc
add
or
adc
add
mov
pop
push
mov
clc
jae
add
add
dec
loop
add
add
or
sar
clc
mov
shr
pop
dec
mov
scas
sahf
ds
clc
mov
test
pop
sar
pusha
add
mov
clc
fstpl
sub
or
cmp
in
or
add
clc
cwtl
fcoms
add
and
add
je
jle
xabort
add
movsl
clc
jno
add
push
xor
dec
xchg
filds
jbe
pop
clc
push
add
addr16
sbb
clc
cmc
addr16
pop
dec
ljmp
and
add
xor
add
stos
scas
inc
add
cmp
add
add
add
push
add
push
clc
iret
shl
jne
add
or
js
ss
setge
clc
rep
jl
mov
add
add
and
dec
scas
ds
or
test
xchg
lods
xor
add
or
int3
shl
in
pop
mov
clc
pop
cmp
inc
add
xchg
push
aas
inc
add
aas
cmpsb
clc
and
add
addr16
jnp
xbegin
add
clc
ficompl
mov
ss
clc
push
push
clc
xchg
sbb
clc
insb
pushf
cld
jle
loope
or
add
xchg
in
and
or
idiv
cmp
sahf
stos
dec
data16
outsl
mov
xor
aam
clc
fstp
lahf
arpl
add
out
test
sar
clc
and
add
je
das
lahf
imul
popf
push
das
addr16
ret
clc
push
dec
jg
lahf
addr16
pushl
clc
jno
add
add
add
clc
cli
add
add
jae
add
inc
clc
xchg
xor
add
rcrl
test
repnz
add
fs
nop
sarl
inc
add
ficomps
add
clc
push
add
shrl
testl
add
add
jmp
clc
dec
cwtl
adc
ss
mov
push
inc
add
mov
mov
xchg
cmp
cmp
add
rcrb
into
iret
jb
add
add
test
clc
arpl
add
add
jp
pop
push
mov
push
lods
loop
jo
add
mov
lcall
mov
std
movsb
clc
or
in
loope
aad
lret
daa
clc
movsb
clc
jl
lret
pop
inc
clc
adc
add
and
cwtl
andps
and
add
clc
adc
loope
inc
add
jbe
inc
add
fs
pop
lcall
lret
add
test
stos
insl
mov
sub
pop
clc
xchg
jne
mov
sbb
clc
push
lret
cmp
repnz
push
adc
add
xchg
into
clc
test
mov
cmp
jae
add
iret
iret
out
insb
push
fidivs
push
xor
add
clc
and
add
imul
add
addr16
cmp
add
and
add
xor
clc
dec
xbegin
sahf
test
test
sub
inc
add
ret
clc
aam
add
push
cmp
ret
dec
mov
mov
call
xchg
inc
clc
mov
clc
in
and
add
dec
mov
sar
imul
stc
jg
jb
add
pop
outsb
mov
add
fcmovnb
clc
test
push
jle
clc
push
sar
add
aad
mov
add
pop
sar
clc
and
add
push
add
jl
outsb
cmp
jp
push
add
ret
clc
cmp
clc
fstpl
add
add
fnstsw
mov
and
add
add
clc
in
adc
add
dec
add
add
ret
clc
add
add
add
xor
pop
inc
add
mov
xor
add
bound
add
mov
add
clc
inc
clc
scas
fs
daa
clc
dec
xchg
push
stc
scas
adc
xor
add
add
outsb
in
adc
add
sub
inc
add
dec
cwtl
pop
push
loopne
lea
sbb
dec
push
clc
fnsave
and
add
sbb
add
in
and
or
hlt
mov
clc
mov
pop
popa
add
fmul
add
add
popa
add
popa
add
cmp
nop
out
pop
into
fbld
add
pop
clc
cmp
xchg
and
xor
add
clc
mov
cltd
je
add
jno
add
clc
push
xchg
pop
pop
clc
enter
lret
outsl
sbb
imul
cmp
dec
pop
jmp
clc
push
add
sahf
xchg
in
cmp
addr16
jmp
imul
rclb
pop
clc
or
popf
jae
add
xchg
jecxz
rclb
push
xor
clc
mov
imul
movhps
add
clc
dec
mov
add
bound
add
shr
sub
cmp
cmpsb
clc
push
add
mov
xchg
ret
clc
testb
inc
clc
inc
clc
cmp
stc
lods
je
or
imul
add
clc
imul
add
out
jl
out
cs
mov
clc
jo
add
mov
jl
pop
or
push
mov
add
clc
add
popf
xabort
pop
inc
add
cmp
faddl
add
add
xor
add
add
inc
add
inc
add
dec
out
lret
add
inc
clc
mov
mov
clc
pop
lods
xchg
jmp
and
clc
push
xor
add
mov
clc
outsl
jg
adc
add
push
lock
clc
fadds
add
mov
sar
int3
jae
add
lret
sbb
clc
insl
push
jmp
clc
mov
inc
add
mov
jbe
lods
push
add
add
clc
inc
add
bound
add
or
jns
jge
clc
gs
scas
dec
and
add
repnz
and
add
clc
jb
add
dec
out
lcall
mov
add
add
add
dec
jecxz,pt
jnp
test
clc
ret
clc
fists
add
aam
clc
loope
cmpsl
clc
xchg
mov
clc
data16
pushf
and
add
xchg
pop
fistps
pop
or
cmp
add
pop
mov
mov
movsl
clc
popf
outsl
mov
cmp
clc
leave
cmp
clc
aaa
xchg
jmp
jg
add
iret
inc
clc
jb
add
sar
ljmp
or
clc
gs
loope
stos
or
cmp
es
or
mov
push
pop
out
or
sti
mov
add
mov
clc
pop
add
clc
sub
and
add
nop
enter
xchg
xlat
xor
add
lahf
jg
add
clc
repz
cmp
xor
add
cmpsb
clc
inc
clc
outsl
pop
insb
wrmsr
add
dec
sbb
add
sbb
clc
xor
add
jmp
adc
add
imul
add
out
or
clc
fnstsw
lea
scas
pop
jae
add
int
pcmpeqw
jecxz
and
add
cs
xchg
push
jnp
clc
nop
xchg
mov
lahf
scas
and
add
add
add
xchg
cmp
fwait
add
add
add
inc
add
mov
clc
push
clc
xor
js
add
add
test
aaa
pop
gs
jmp
repz
add
test
and
add
aad
sub
clc
ds
add
xor
fisubl
adc
add
mov
add
test
jo
add
mov
adc
add
mov
inc
add
adc
dec
xchg
push
cmp
add
lahf
or
clc
xor
add
inc
add
adc
add
clc
sar
pop
mov
ljmp
cmp
add
clc
mov
sahf
xchg
dec
outsb
and
add
clc
mov
pop
mov
add
push
sar
mov
add
inc
add
mov
add
sub
clc
inc
add
and
add
add
xlat
cmp
clc
pandn
in
lret
add
jg
clc
xchg
mov
aas
cmp
add
leave
aas
cli
pop
jae
add
clc
xchg
or
add
mov
add
movsb
clc
dec
inc
clc
imul
ret
clc
test
nop
lea
dec
push
clc
iret
adc
clc
mov
add
add
in
or
add
xbegin
in
data16
out
pop
jge
xchg
inc
clc
mov
jnp
push
stos
pushf
sub
out
negb
clc
or
or
add
adc
add
add
and
add
mov
cmpsl
clc
out
xchg
ret
cltd
inc
add
push
add
mov
stc
mov
js
sbb
add
cmp
clc
push
add
cmp
xchg
inc
add
and
add
push
add
imul
add
xor
add
in
xlat
stc
sar
cmp
fdivrs
inc
clc
fsub
clc
in
push
or
add
cmp
mov
and
add
add
jbe
xchg
loopne
enter
adc
add
mov
clc
pop
data16
pop
xchg
inc
clc
push
xchg
mov
lcall
add
dec
inc
add
jecxz
dec
xchg
inc
clc
fdivl
cmp
mov
fwait
loop
repz
insl
add
sbb
or
loop
inc
add
push
std
jmp
mov
add
clc
lea
push
clc
push
pop
xor
aad
cmc
inc
clc
aad
clc
mov
add
dec
xor
add
sbb
adc
and
add
inc
add
repz
pop
adc
or
ret
clc
dec
scas
sub
arpl
add
adc
shll
add
inc
clc
out
mov
xor
add
ss
out
push
add
lock
dec
jg
lods
xor
add
add
add
int3
ds
add
test
out
xlat
mov
sub
cmp
sbb
cli
jge
insb
outsb
out
mov
add
or
add
cli
popf
inc
add
mov
clc
test
rolb
clc
cmp
xchg
cmp
into
sahf
or
pop
xlat
arpl
add
decl
cmp
clc
xlat
xchg
or
jmp
in
mov
clc
into
add
add
add
inc
clc
or
add
mov
mov
js
add
sbb
out
pop
mov
js
fwait
pushf
call
insb
data16
shrl
clc
jmp
add
push
add
mov
push
or
aaa
add
add
mov
adc
add
add
dec
jae
add
mov
pop
clc
adc
add
aaa
clc
stos
mov
add
add
dec
add
and
add
xabort
clc
jmp
clc
mov
dec
xchg
repnz
lahf
hlt
jg
xchg
and
add
clc
cmp
mov
cmp
mov
out
push
test
loopne
cmp
int
clc
jg
pop
push
inc
clc
cmp
jmp
adc
add
js
ds
out
aaa
lcall
clc
cmc
ficoml
add
add
jmp
add
dec
clc
push
add
lsl
add
mov
ljmp
mov
sub
dec
xchg
outsb
test
mov
clc
insb
push
clc
imul
pop
jl
movsb
clc
pop
jbe
loope
loopne
pop
loopne
scas
inc
add
fs
sbb
clc
filds
sar
push
clc
push
add
inc
add
fdivrl
divl
add
xchg
push
test
cs
stos
and
scas
sar
clc
ret
clc
lods
mov
addr16
sar
mov
add
sbb
clc
jp
adc
add
mov
mov
fcomip
mov
int3
cmp
aaa
lods
sar
out
pop
xor
push
popf
repnz
ljmp
add
add
add
inc
clc
hlt
xor
add
clc
mov
clc
mov
push
add
inc
add
in
xchg
push
incb
add
mov
cwtl
xor
add
jecxz
jns
mov
arpl
add
into
aam
outsb
pop
inc
clc
hlt
rorb
add
sbb
push
sub
jo
add
clc
mov
sbb
clc
movsl
clc
cmp
mov
adc
add
fs
pusha
add
jae
add
cmp
fmull
clc
rol
clc
push
add
call
pop
jne
dec
js
add
imull
pop
vmovlps
add
pop
mov
xchg
test
add
aam
aaa
rcrl
cli
stos
clc
leave
incb
add
inc
add
dec
jg
popa
add
xor
add
inc
clc
gs
push
add
add
std
rorb
arpl
add
mov
clc
mov
adc
add
daa
clc
data16
rorl
and
add
cli
fadd
clc
push
jl
clc
mov
int
cmp
clc
mov
adc
mov
cmp
clc
stc
xchg
cmp
nop
es
pop
out
leave
popa
add
aad
add
jb
add
add
lock
add
int3
sbb
pop
sti
push
add
enter
fcmovnb
clc
pop
inc
add
inc
clc
shrb
rcll
add
lahf
add
add
mov
clc
dec
inc
clc
out
add
mulb
mov
add
or
fcoml
inc
add
shr
outsl
xchg
in
repz
cmp
in
sub
sub
mov
add
pop
jmp
jl
clc
sahf
mov
mov
add
mov
gs
mov
push
cmp
jns
stos
int3
sub
inc
clc
pop
mov
stos
cmp
inc
add
inc
clc
fisttpl
or
add
clc
cmp
fadds
add
xlat
sub
add
imul
clc
dec
xchg
xchg
jb
add
fucomi
bound
add
ret
add
mov
icebp
lods
xor
pop
clc
stc
mov
dec
jmp
sbb
pop
imull
ds
clc
add
add
push
dec
je
clc
aas
xchg
daa
clc
adc
add
add
add
inc
clc
mov
clc
lret
mov
mov
add
inc
clc
aam
jo
add
inc
add
gs
movsl
clc
test
add
mov
pop
shll
add
clc
pop
pop
clc
sub
or
repz
or
fnstenv
clc
mov
clc
into
ljmp
push
mov
out
cmp
add
clc
in
repnz
add
mov
aas
sbb
mov
lock
scas
push
pop
into
movsl
clc
sar
sbb
mov
adc
cmpsb
clc
add
add
push
add
add
adc
push
add
inc
clc
xchg
xor
add
add
in
out
outsl
in
cmp
pop
cmc
cmp
addr16
cld
sbb
pop
sub
add
add
test
and
add
cmp
add
cld
xchg
inc
clc
lahf
add
add
cmpsl
clc
sbb
xbegin
aas
xchg
inc
clc
int3
cmp
add
js
and
and
div
cmp
add
loop
sar
add
in
mov
mov
clc
or
call
push
rcll
add
add
mov
ror
and
add
mov
loope
push
clc
mov
jecxz
mov
or
outsl
mov
insl
pop
outsb
add
sar
push
clc
xor
aad
add
insl
ret
clc
vmovups
add
and
add
mov
add
lret
cli
data16
out
sar
clc
cwtl
sbb
add
add
clc
imul
add
inc
add
sar
lods
pop
ljmp
add
lods
out
in
sar
pusha
add
add
add
add
add
repnz
add
clc
mov
jnp
push
addr16
add
add
clc
lea
clc
or
lcall
mov
clc
add
add
fsubrl
clc
mov
add
inc
add
loope
repz
add
test
inc
clc
inc
add
in
fmul
jl
sub
clc
nop
xchg
jns
sbb
mov
xchg
and
jg
clc
sub
inc
clc
fimuls
gs
inc
clc
dec
adc
dec
cmp
pop
lods
mov
cmpsb
clc
popf
aad
pusha
add
add
add
ficoms
add
dec
out
xchg
call
mov
add
cmp
insl
rcll
or
xbegin
clc
adc
add
push
mov
add
sbb
je
add
cmc
mov
lea
into
mov
add
mull
add
into
ss
jecxz
in
pop
incb
je
or
int3
incb
add
jbe
pop
fwait
mov
jle
stos
nop
cli
ljmp
cmp
jle
push
clc
inc
add
data16
cmp
mov
add
add
clc
sub
add
movsb
clc
sar
jge
xchg
pop
mov
aam
fstps
popf
xchg
adc
add
clc
fdivl
icebp
jbe
jg
add
imul
mov
xbegin
js
mov
and
add
add
cmp
dec
push
sub
pop
mov
ss
and
inc
clc
cld
cs
enter
jmp
test
clc
and
add
clc
mov
jg
mov
add
in
call
add
xor
imul
clc
fldt
daa
clc
out
jecxz
jl
and
add
jge
ret
clc
shlb
add
jg
clc
jmp
mov
or
clc
cmp
add
cmp
sub
push
add
add
pop
outsb
data16
mov
mov
sub
mov
dec
das
sbb
clc
int
jge
add
jg
test
cmp
add
fdivr
shll
add
shll
add
add
push
xor
add
mov
add
xlat
aaa
lcall
mov
repz
add
add
clc
clc
pop
fmulp
daa
clc
adc
add
push
xchg
data16
add
add
sub
or
mov
clc
in
test
add
add
add
in
pop
clc
push
add
jo
add
add
aas
xchg
or
add
arpl
add
clc
xabort
test
add
dec
jbe
clc
repnz
jns
clc
fdivrs
stc
sar
jle
cmc
push
lcall
clc
push
add
xchg
mov
add
pop
push
add
cmp
pop
cmp
add
cmp
clc
insl
xor
add
sbb
add
add
stos
push
jbe
sbb
pop
clc
xor
add
add
stos
add
add
clc
aaa
sar
clc
inc
clc
xor
add
clc
add
adc
add
dec
stos
xabort
adc
add
add
xchg
add
add
clc
push
fstps
dec
bound
add
xchg
out
sub
add
pop
xor
add
add
insb
enter
cmp
xor
push
add
fwait
mov
pop
xchg
dec
scas
push
mov
imul
xor
add
fistps
cmp
add
ja
push
daa
clc
xchg
pop
clc
cmp
in
sar
sti
jp
movsb
clc
xchg
adc
add
and
and
add
xchg
and
add
clc
data16
in
cmp
jl
add
xbegin
pop
pop
clc
and
add
in
push
cmp
paddusb
xchg
add
add
add
cmp
add
mov
clc
push
add
lods
mov
clc
xor
add
decb
out
or
xchg
shl
clc
notb
cmp
sub
push
cmp
add
push
jle
and
push
add
es
cmpsl
clc
pop
clc
pop
bound
add
add
data16
das
add
add
clc
add
cmp
pop
pusha
add
ja
clc
xor
int
add
movsb
clc
cli
dec
inc
clc
cwtl
jecxz
dec
dec
mov
add
repz
pushf
pop
xor
add
icebp
outsb
rcr
sbb
out
mov
jne
xchg
into
rcrl
push
lcall
stos
imul
sbb
jae
add
add
dec
dec
sub
dec
adc
add
lahf
sbb
mov
clc
lods
call
add
pop
clc
jae
add
xor
add
sarb
aad
repz
add
dec
cld
sub
mov
cld
lret
mov
repnz
pop
cmp
clc
cmp
in
int
clc
pop
push
imul
add
and
add
add
xor
lcall
imul
clc
sahf
lods
and
and
add
add
int3
cmp
add
call
js
sbb
add
jnp
cwtl
pop
mov
pusha
add
fidivrl
xchg
jp
clc
and
add
cmp
or
mov
mov
clc
in
cmpsb
clc
dec
fs
icebp
cs
shll
add
push
add
scas
aas
mov
pushl
add
cltd
sti
mov
inc
add
xchg
cmp
aad
adc
add
clc
nop
cltd
fs
jno
add
add
add
clc
dec
fstl
add
push
iret
lcall
or
clc
xor
add
mov
cmpsl
clc
or
ss
js
fimuls
add
in
nop
pusha
add
jns
mov
xor
add
sub
add
flds
push
fstpl
mov
mov
mov
clc
pop
das
fisttpll
add
xbegin
mov
clc
mov
ret
clc
aad
aaa
push
add
add
add
push
aaa
sub
mov
xchg
je
mov
clc
jge
clc
pop
ljmp
cmp
add
sti
sbb
ret
clc
add
add
bound
add
int
lcall
movsb
clc
xor
add
fs
push
add
popl
add
add
arpl
add
add
mov
hlt
sub
clc
inc
add
pop
push
add
fs
or
add
push
insb
inc
clc
inc
add
or
cmp
add
fwait
mov
cmp
add
jp
clc
ja
sub
add
gs
nop
sub
out
fs
sub
fs
dec
jmp
xor
fildl
clc
leave
lcall
jge
bnd
add
ja
add
or
cwtl
push
xbegin
popa
add
pop
push
add
mov
pop
cmp
jo
add
add
loop
dec
out
mov
test
cmp
ret
clc
test
pop
sar
jo
add
push
lods
rol
clc
stos
xor
add
clc
add
cmp
clc
or
insb
jnp
clc
lret
add
mov
int
sti
adc
add
mov
clc
pop
cmc
cld
je
inc
add
xchg
mov
xor
add
add
popa
add
jb
add
clc
repz
add
sub
add
pop
dec
xlat
push
into
pop
push
add
cmp
es
in
adc
add
add
in
lcall
adc
add
sub
or
add
popf
add
add
repz
outsb
nop
fsubl
or
add
xchg
mov
pop
push
pop
bound
add
clc
leave
lahf
add
clc
inc
clc
push
imul
cmc
es
aam
dec
fisttpl
clc
add
add
mov
inc
add
pop
loopne
mov
clc
pop
shll
dec
ja
inc
add
or
insl
imul
clc
stos
scas
repz
add
add
jge
sbb
clc
xchg
mov
je
clc
mov
and
add
mov
xor
add
adc
jle
add
mov
add
js
imul
out
movsl
clc
lods
push
add
add
data16
mov
clc
mov
sbb
clc
mov
clc
jne
fbld
add
fisttpl
lcall
inc
add
mov
push
and
add
ss
sub
arpl
add
add
inc
add
lea
clc
imul
movsb
clc
js
test
pop
lock
add
clc
loopne
push
clc
sar
idivl
jge
clc
add
add
clc
fists
add
stos
out
rol
clc
test
and
add
add
dec
mov
add
cli
inc
clc
xbegin
jmp
test
movsb
clc
cmp
clc
loop
fstps
dec
adc
add
xchg
test
xor
add
shl
je
add
dec
std
mov
xor
add
dec
push
clc
jle
add
sub
or
clc
stos
push
clc
pop
clc
mov
add
fidivrl
jo
add
fnsave
out
mov
cmp
mov
out
pop
sbb
cmp
out
out
aas
jmp
nop
push
cld
lods
pop
clc
sub
mov
xlat
adc
add
add
cmp
xor
add
push
add
movsb
clc
clc
sahf
or
mov
inc
add
adc
add
mov
clc
lret
cmp
jo
add
clc
movsb
clc
push
add
scas
and
add
clc
mov
push
mov
cs
cltd
sub
clc
or
or
into
lods
adc
add
mov
movsl
clc
cmp
clc
lcall
cwtl
mov
imul
cwtl
pop
jnp
clc
jle
add
add
clc
dec
jae
add
jg
adc
add
clc
lods
mov
out
sbb
add
add
xchg
inc
clc
jbe
and
add
dec
dec
cmp
movsl
clc
je
push
gs
xor
add
add
mov
ja
clc
jnp
clc
dec
test
add
or
clc
jno
add
fstps
in
dec
cmp
outsb
in
push
clc
push
and
add
scas
clc
pop
int
add
test
and
add
sub
add
nopl
std
fs
xchg
pop
pop
movsb
clc
jp
clc
cmp
add
popf
add
add
jne
mov
es
je
add
mov
jne
mov
sar
inc
clc
sar
dec
mov
add
clc
pushf
mov
loope
inc
clc
data16
in
pop
mov
inc
add
cmp
arpl
add
add
add
testb
push
pop
popf
cmp
pop
inc
add
es
jl
sbb
jnp
xor
ror
loop
and
add
xor
add
fistpl
arpl
add
pop
push
mov
in
add
add
push
clc
xor
add
stos
cwtl
cmp
mov
ret
add
inc
add
ret
clc
pop
jg
add
pop
push
clc
add
jp
cmp
add
cmp
pop
std
push
cld
das
sar
cmp
clc
je
data16
xabort
popa
add
or
data16
sti
das
and
add
xor
pop
pop
mov
clc
lods
mov
jno
add
add
clc
pushf
repnz
add
es
fcmovnbe
jmp
xchg
test
add
sar
push
add
mov
clc
sbb
xabort
ret
xchg
xlat
rcrb
mov
xchg
adc
add
sahf
push
dec
jge
add
and
add
clc
push
clc
sub
ss
fdiv
cmp
mov
mov
xlat
add
mov
add
ds
and
add
add
clc
arpl
add
test
stc
or
scas
cmp
mov
clc
testb
clc
add
add
and
add
rolb
add
in
mov
inc
add
sbb
clc
mov
mov
dec
pusha
add
jge
clc
mov
add
aas
mov
add
clc
fdivrl
rcrb
jl
add
or
push
add
push
push
add
mov
add
mov
in
mov
scas
jp
mov
mov
cmp
add
cs
clc
inc
add
iret
sahf
sahf
insl
cs
pop
xor
add
add
lock
clc
nop
pushf
test
cmp
cmp
clc
data16
cmp
int3
out
xor
dec
cmp
add
clc
lock
clc
cmp
loopne
outsb
loope
popf
xchg
adc
add
add
bound
add
add
pop
clc
mov
clc
mov
mov
xchg
sub
push
lret
cld
xchg
fstl
add
add
nop
xor
add
cmp
std
lock
daa
clc
mov
xbegin
add
rclb
add
add
into
aaa
je
clc
cltd
lret
inc
clc
int
gs
fwait
pop
jecxz
leave
push
push
sti
scas
xor
add
xchg
add
add
xor
add
imul
mov
add
xchg
addr16
shl
clc
bound
add
clc
inc
add
or
clc
push
movsb
clc
lret
add
aam
clc
stos
sub
pop
dec
es
lea
xchg
mov
mov
lock
rclb
insl
push
es
push
jbe
mov
cmp
or
add
add
movsb
clc
fildl
addr16
mov
scas
cmp
add
ljmp
icebp
push
and
add
jns
aad
flds
ret
add
mov
add
fcmovne
mov
daa
clc
jb
add
test
sub
pop
add
add
clc
stos
cmpsb
clc
jae
add
call
clc
push
loope
pop
sbb
cli
jle
dec
sub
out
or
cmc
js
js
clc
cwtl
lods
adc
add
cwtl
popl
negl
inc
add
aas
or
int
mov
xchg
xchg
arpl
add
pop
clc
inc
add
aam
and
add
cmpsb
clc
jg
clc
icebp
sbb
daa
clc
das
adc
add
sbb
add
xchg
cmpsb
clc
pop
loopne
cmp
clc
jle
xabort
je
push
shl
sahf
add
add
movsl
clc
add
add
push
inc
clc
cltd
fs
and
add
pop
test
or
arpl
add
and
add
mov
outsl
xchg
addr16
sub
add
mov
clc
push
jge
clc
clc
jle
jno
add
inc
clc
fistl
clc
aad
push
cmp
xchg
mov
clc
lock
clc
inc
add
ret
adc
es
push
jno
add
and
dec
dec
sub
outsl
sub
fbld
enter
lret
ftst
clc
fs
pushf
jbe
pop
and
add
push
fists
add
mov
add
cmp
cmp
loope
js
cmc
ret
clc
dec
outsb
jmp
insl
push
add
mov
cmp
fbld
clc
in
xor
add
loop
mov
test
add
imul
mov
cmp
mov
filds
mov
xchg
cld
daa
clc
mov
clc
mov
add
cmp
clc
and
add
mov
push
add
mov
mov
clc
pop
inc
clc
cmc
cwtl
dec
jle
aas
js
aaa
adc
add
inc
add
cmp
clc
dec
xbegin
cmp
cmp
clc
mov
add
push
clc
sub
or
clc
gs
scas
push
clc
mov
mov
in
ss
dec
adc
add
lret
sbb
movsl
clc
add
add
inc
clc
insb
hlt
sub
scas
cmp
jae
add
clc
push
mov
je
nop
rolb
clc
mov
into
test
jp
add
repz
clc
adc
add
clc
xor
add
pusha
add
aaa
daa
clc
push
add
fisubl
clc
dec
repz
inc
clc
xchg
xchg
push
clc
or
in
push
add
lods
dec
cli
jne
add
add
cmpsl
clc
cmp
sbb
or
clc
pushf
sti
nop
out
cmpsl
clc
jns
clc
mov
sub
das
sub
add
add
ja,pt
clc
mov
add
inc
clc
cmp
add
clc
shl
clc
or
bound
add
clc
ljmp
std
gs
sbb
add
sahf
add
add
cmp
jmp
cmpsl
clc
xchg
jp
out
dec
fwait
xchg
enter
flds
sub
add
add
in
cmp
add
clc
out
mov
iret
cmpsl
clc
into
repz
clc
daa
clc
sar
clc
cmp
add
sub
aaa
push
pop
adc
add
xchg
gs
imul
xchg
pop
clc
inc
add
clc
popf
pop
cmp
cld
jbe
into
loopne
sub
and
add
outsb
loop
xchg
jle
clc
call
add
or
ljmp
cltd
dec
fs
add
outsl
stos
fwait
dec
std
sar
sub
clc
mov
sar
sti
test
clc
jb
add
out
out
das
pusha
add
sti
sub
add
mov
in
movsb
clc
pop
dec
fidivl
add
add
mov
add
sub
sti
cltd
sub
adc
add
mov
push
clc
js
fnstsw
clc
repz
cmp
add
mov
negl
outsb
in
out
in
hlt
aam
clc
in
inc
add
movsb
clc
dec
mov
mov
clc
mov
clc
call
fdivs
add
pop
lahf
sbb
inc
clc
pop
clc
mov
xor
add
std
jl
dec
js
clc
pusha
add
shrl
cmp
aas
ret
clc
movsb
clc
fstpl
add
add
leave
cmpsb
clc
repnz
clc
ljmp
xchg
adc
add
dec
ret
xchg
cwtl
mov
addr16
jecxz
movsl
clc
cs
aam
mov
mov
test
add
jge
mov
add
lret
gs
push
add
mov
xchg
dec
in
cmp
add
lea
jbe
ret
clc
and
add
gs
adc
add
pop
pop
add
add
add
mov
mov
mov
and
add
das
xchg
adc
add
adc
add
clc
adc
clc
jnp
movsb
clc
test
xchg
test
addr16
cmpsl
clc
nopl
bound
add
push
addr16
and
push
sbb
clc
or
add
sahf
adc
inc
clc
sub
cmc
push
add
mov
test
push
add
cmp
xchg
push
clc
xabort
pop
jmp
cmp
clc
xchg
dec
jb
add
aas
fldcw
mov
cmpsb
clc
xlat
inc
clc
mov
add
add
add
jo
add
add
repz
sbb
add
and
clc
ljmp
jno
add
cmp
aad
xchg
mov
and
aam
clc
aaa
push
stos
loope
ret
clc
movsb
clc
out
out
jge
loope
test
into
int3
lock
clc
xchg
cltd
dec
adc
add
pop
or
adc
add
mov
mov
clc
and
add
cmp
out
or
add
and
add
imul
in
data16
lret
adc
add
cli
imul
cld
lcall
stos
ss
add
add
push
pop
decl
clc
aas
dec
inc
clc
mov
clc
gs
pusha
add
jl
repnz
pop
adc
sub
outsl
out
lcall
out
in
xor
clc
xabort
clc
inc
clc
lret
test
lock
in
aad
test
inc
add
or
clc
outsl
mov
jmp
add
pop
divb
dec
xbegin
enter
clc
mov
clc
test
push
fstpl
rorb
mov
add
js
add
call
clc
mov
xor
clc
pop
push
add
imul
popf
and
add
jb
add
mov
pop
xchg
xor
push
jbe
in
ljmp
clc
jno
add
ficoml
inc
clc
cltd
mov
fidivrs
clc
loopne
mov
xabort
jl
clc
ja
in
fimull
jno
add
imul
pop
dec
inc
add
daa
clc
fiadds
mov
mov
push
clc
push
out
fildll
inc
clc
jno
add
cmp
clc
pop
cmp
mov
add
add
add
fmull
mov
movsb
clc
pop
cmp
and
add
dec
ljmp
pop
mov
sbb
std
push
sbb
add
cmp
lock
fnsave
iret
lahf
cmp
or
lret
clc
lahf
cltd
aam
or
clc
jg
xchg
imul
clc
add
dec
cld
faddp
clc
add
add
clc
imul
xchg
mov
mov
add
pop
inc
clc
mov
xchg
in
iret
test
ret
clc
lcall
inc
clc
hlt
ja
add
dec
mov
xbegin
xchg
pop
test
test
out
add
jmp
dec
call
clc
pop
push
add
ljmp
sar
inc
clc
nop
sub
jp
jle
jb
add
shlb
xchg
cmp
add
inc
add
cmpsb
clc
and
add
add
jno
add
add
clc
sbb
sbb
add
clc
adc
add
dec
xabort
xadd
push
add
cmp
pop
xchg
xor
outsl
stos
cmpsb
clc
clc
sti
xchg
leave
in
xor
cmp
popa
add
xor
add
aam
add
bound
add
pop
out
jb
add
xor
cmc
or
cmp
xor
add
cmp
jno
add
fs
into
push
hlt
xchg
pop
add
psubsw
gs
clc
mov
loop
adc
mov
ss
clc
aaa
add
add
cld
sbb
add
jno
add
xchg
and
add
add
mov
insb
mov
add
push
add
push
clc
mov
xor
xabort
in
icebp
push
add
jne
clc
sar
push
je
clc
adc
add
out
xlat
jle
clc
imul
push
add
bound
add
fwait
fs
lock
add
or
and
add
inc
add
lcall
add
pop
cmp
add
add
add
bound
add
into
or
jne
and
cmp
clc
mov
imul
jb
add
sbb
aam
mov
clc
loopne
data16
mov
mov
clc
xchg
outsb
je
add
aad
mov
or
iret
sti
out
mov
clc
xchg
test
clc
mov
cwtl
hlt
mov
fwait
add
add
mov
rolb
add
imul
fiadds
add
add
dec
xor
clc
mov
fiaddl
aas
sbb
xchg
sahf
cli
out
or
sub
ljmp
add
flds
add
clc
xor
cltd
test
stc
mov
sub
jno
add
clc
mov
out
mov
clc
das
xchg
sub
dec
int
clc
fstp
loopne
int
push
add
xor
add
pop
pop
outsb
stc
xabort
clc
stos
add
loopne
clc
scas
dec
or
add
xchg
aam
mov
clc
mov
cmc
sub
iret
cmp
cmp
sti
xor
add
add
clc
int3
cmp
clc
nop
jno
add
clc
or
ds
add
jp
add
jns
sub
mov
add
clc
pusha
add
dec
xchg
sbb
mov
outsl
inc
add
jmp
clc
add
lods
mov
adc
pushf
xchg
sub
add
jnp
rcl
outsl
mov
sub
cmp
clc
mov
cmpsl
clc
dec
xor
add
movsl
clc
xchg
movsb
clc
jl
adc
add
clc
filds
add
sbb
push
clc
ret
clc
rolb
clc
and
add
cmpsl
clc
dec
mov
decl
adc
clc
mov
loope,pt
xchg
push
pop
jnp
xchg
je
add
es
sub
jecxz
or
mov
sti
es
cld
cwtl
mov
imul
lcall
jmp
sar
add
inc
clc
iret
push
sahf
aaa
mov
es
lret
pop
adc
add
out
clc
push
sbb
icebp
jl
mov
sub
add
xor
add
dec
addr16
jo,pt
add
clc
cmp
clc
aas
push
adc
mov
ret
das
or
clc
xchg
sbb
clc
xlat
mov
cmp
add
clc
test
lret
fcomip
xchg
out
sub
lcall
fisttpll
adc
add
test
jl
lret
add
test
push
add
add
clc
push
add
dec
sar
clc
sbb
push
add
jae
add
and
add
mov
cs
xchg
out
outsl
xchg
shlb
push
xor
add
aas
aas
inc
add
daa
clc
mov
dec
add
lret
mov
add
add
pop
cli
adc
mov
clc
jne
add
inc
clc
mov
add
pop
and
add
xor
mov
add
add
adc
add
es
sub
clc
cltd
pop
cmc
xchg
out
lock
out
jo
add
clc
push
add
inc
clc
imul
out
mov
push
or
add
add
add
fsubl
imul
add
pushf
xchg
mov
data16
pushf
aaa
fstl
add
pop
aad
mov
ret
clc
daa
clc
loope
repz
loope
pop
std
xchg
xchg
adc
xor
clc
or
jg
push
add
cmp
mov
imul
sar
ljmp
clc
div
sub
clc
and
xor
sbb
int
fsts
add
insb
int3
xor
add
add
add
iret
in
and
add
jno
add
mov
jecxz
aaa
loop
in
outsl
sbb
add
jmp
add
js
fldcw
dec
jle
clc
test
clc
mov
ljmp
xchg
lret
inc
add
mov
pop
pop
dec
push
add
add
jne
add
mov
add
clc
mov
sub
mov
cmp
jmp
rolb
pop
mov
mov
push
mov
xor
add
pop
mov
mov
push
add
push
fstpt
jmp
clc
mov
add
xchg
call
cltd
mov
mov
add
mov
imul
out
mov
cmp
int
lods
jne
add
fdivl
sub
or
xor
adc
clc
xabort
repnz
clc
sar
add
jle
pop
int3
mov
jno
add
cmp
cmc
cmp
and
add
clc
inc
clc
shlb
in
mov
hlt
sub
xor
add
add
lea
popa
add
and
add
add
shll
cmc
test
add
add
xlat
mov
pop
cmp
rcll
add
sar
inc
clc
mov
outsl
mov
clc
inc
add
popa
add
cli
shlb
fadds
loope
add
add
clc
and
add
xor
add
js
clc
mov
jns
cltd
leave
lods
jg
jp
sub
clc
dec
or
in
in
ljmp
mov
gs
xchg
fnstcw
push
rolb
clc
xchg
xor
add
cli
jl
xchg
jmp
test
pop
pushf
cmp
sar
add
aam
sahf
cs
inc
add
sub
pop
fnstcw
mov
ja
add
mov
xchg
mov
cmpsl
clc
outsb
repz
sbb
jns
clc
in
add
add
sti
and
pop
mov
cmpsb
clc
loop
push
jae
add
clc
in
cltd
mov
clc
sbb
add
or
xchg
fstpl
clc
jg
push
clc
push
add
and
xor
out
sub
mov
movsl
clc
cmp
cmp
add
adc
lret
std
or
and
add
and
add
adc
add
add
out
cs
dec
cltd
xlat
mov
jmp
xor
add
jo
add
cltd
lock
sti
pushf
jns
add
arpl
add
pop
mov
inc
add
cmp
repz
push
push
leave
lock
mov
clc
jge
pushf
jmp
mov
clc
inc
add
fdivs
sar
loope
mov
mov
add
pushf
jmp
add
add
dec
popf
mov
pop
lea
add
push
add
or
add
cmp
add
cli
imulb
jno
add
xchg
xor
add
and
add
sar
lods
push
clc
cmp
add
and
add
ret
loope
xchg
clc
insl
stos
cli
scas
mov
cmp
repnz
cmpsb
clc
test
testl
dec
addr16
mov
inc
add
adc
clc
cmc
aam
push
leave
dec
adc
add
or
pushf
xor
inc
clc
xbegin
clc
push
and
add
sbb
clc
xor
add
add
insl
dec
js
into
pop
cmpsl
clc
adc
add
cld
xbegin
pop
dec
ja
fldt
popa
add
lods
sbb
ds
clc
clc
push
mov
jg
and
add
shll
add
data16
mov
add
jp
arpl
add
add
int3
fnstenv
add
sbb
dec
add
add
clc
push
inc
add
loop
jl
or
xchg
pop
add
add
push
cmp
mov
pop
repz
add
pusha
add
iret
cmp
clc
clc
jne
stos
test
pop
xchg
lea
clc
cmp
ficomps
aam
clc
adc
add
mov
and
push
fisubrl
push
and
add
add
mov
add
jg
scas
int
inc
clc
data16
jp
js
jo
add
pop
cmp
mov
add
clc
pop
jae
add
mov
sahf
bound
add
clc
test
pop
clc
pushf
jo
add
add
fwait
xchg
jo
add
pop
outsb
sti
push
clc
inc
add
aam
clc
es
and
add
mov
clc
scas
out
scas
xchg
imulb
clc
pop
dec
push
inc
add
gs
aas
ja
cwtl
fs
mov
add
pop
cmp
add
cmp
clc
xchg
outsb
loope
cs
cmp
cmp
rclb
add
imul
add
pop
ret
add
dec
sub
clc
inc
add
or
add
add
add
sub
and
fdivl
add
lahf
in
fwait
std
sub
mov
outsb
jne
mov
dec
clc
outsb
test
mov
add
fcompl
add
shlb
add
clc
add
add
pop
arpl
add
stos
dec
adc
stos
sub
adc
add
add
imul
clc
adc
clc
in
xchg
dec
add
cmp
cltd
and
add
push
clc
pop
and
add
clc
lods
loopne
dec
daa
clc
data16
mov
clc
faddl
ret
notl
clc
daa
clc
cmp
clc
xlat
rorl
stos
loope
stos
cmp
clc
and
add
jo
add
mov
add
push
xor
add
insl
sar
mov
add
mov
clc
iret
dec
rol
clc
or
inc
clc
xbegin
clc
mov
add
mov
add
clc
addr16
fiaddl
add
in
out
adc
add
call
es
cmp
jno
add
js
cli
jl
dec
pop
add
xchg
shll
add
int3
enter
cs
fadd
clc
arpl
add
add
loop
inc
add
jl
add
stos
pcmpgtw
dec
loope
jecxz
jbe
mov
clc
mov
fisubs
cld
dec
clc
jno
add
sbb
clc
es
jmp
pusha
add
lret
pop
push
xchg
mov
clc
mov
jo
add
lods
push
cmp
cld
sbb
es
xor
add
clc
adc
add
lret
xchg
mov
mov
jae
add
add
clc
fsubs
add
pop
or
mov
jae
add
add
cwtl
ja
and
add
xor
add
je
es
push
stos
add
add
sbb
aam
clc
cmpsl
clc
repnz
sub
stos
fs
pusha
add
cli
pusha
add
pop
aad
sub
add
add
add
xchg
jmp
cmp
xchg
xor
add
int
clc
adc
pop
adc
add
cmc
clc
arpl
add
mov
clc
movsb
clc
mov
pop
in
cltd
sbb
add
xchg
mov
ficomps
clc
sti
push
push
add
stos
mov
clc
mov
add
test
test
dec
mov
clc
sar
clc
arpl
add
xabort
clc
inc
clc
jl
mov
jl
scas
jp
fsubrs
add
clc
int
fists
clc
xor
add
clc
adc
add
clc
dec
in
pop
inc
clc
popa
add
in
in
test
clc
mov
mov
clc
es
xchg
jge
ud0
add
cmp
daa
clc
or
clc
pop
xchg
loop
cmp
clc
test
imulb
fildl
mov
or
add
xabort
ficoml
add
mov
sar
inc
clc
jo
add
pop
push
push
pop
inc
clc
scas
sti
mov
daa
clc
pop
dec
mov
insl
int
imul
clc
std
mov
add
clc
push
cmp
adc
outsl
sti
fbstp
add
push
loope
dec
movsb
clc
xchg
jnp
clc
sar
clc
and
add
clc
rorb
jnp
mov
pop
imul
dec
sar
add
outsl
call
aaa
xor
insb
mov
and
add
add
xchg
fdiv
adc
add
add
cmp
fs
xchg
add
add
jns
aam
pop
je
add
out
insb
mov
inc
clc
mov
adc
add
clc
ja
clc
pop
mov
aaa
sbb
pop
lcall
outsl
divps
clc
pop
sahf
js
data16
push
add
adc
add
xabort
xor
outsb
into
xchg
lcall
clc
mov
dec
decb
dec
mov
iret
sub
fdivp
clc
nop
ss
push
sar
sar
add
mov
add
scas
cmpsb
clc
fisubs
add
mov
sub
pop
dec
xor
add
add
and
add
xchg
sar
nop
dec
add
add
clc
out
cmp
add
inc
add
clc
push
hlt
mov
mov
add
add
add
inc
clc
xor
inc
clc
xchg
add
add
clc
mov
mov
cmp
mov
lods
xbegin
cmp
pop
outsb
xchg
imul
add
clc
addr16
push
cmp
pop
cs
push
sar
sar
dec
sar
pushf
push
add
push
mov
clc
icebp
xchg
mov
push
add
sub
das
aam
loopne
sahf
jo
add
xchg
ss
clc
and
add
clc
stos
cpuid
clc
sbb
int3
cmpsb
clc
movsl
clc
mov
cmp
add
mov
mov
pop
clc
test
xor
add
inc
add
adc
add
cmp
clc
popa
add
shll
push
xchg
inc
clc
adc
add
movsl
clc
lea
add
lcall
pop
clc
jge
pop
test
and
add
jns
cmp
push
clc
xchg
mov
arpl
add
dec
or
add
sar
pop
outsb
sbb
ds
lahf
jecxz
gs
cmp
xchg
xabort
add
and
jne
clc
data16
fs
in
scas
jne
clc
add
add
add
fwait
gs
popa
add
outsb
dec
clc
jecxz
inc
clc
jb
add
out
inc
add
dec
es
pop
clc
lea
jecxz
test
jl
add
mov
xbegin
ficompl
fsub
clc
test
lea
data16
out
clc
and
add
or
mov
cmp
add
push
clc
int3
xchg
inc
clc
fimuls
cmp
cmp
add
add
add
inc
add
aad
clc
std
xchg
xchg
mov
push
clc
in
mov
sbb
clc
jl
mov
clc
lsl
add
cmp
jns
jecxz
jge
pop
clc
cmc
clc
dec
xchg
sti
ficoml
test
cmpsl
clc
popa
add
scas
xor
add
clc
popa
add
sarb
add
add
test
add
add
add
test
mov
repnz
clc
adc
add
clc
cmp
sub
mov
add
lods
dec
daa
clc
cmp
mov
frstor
xchg
insl
shrl
clc
inc
add
out
gs
ja
add
xchg
lahf
cli
stos
stos
jbe
add
fldenv
add
clc
cli
jb
add
add
clc
jmp
add
aam
clc
nop
jns
add
std
cmp
daa
clc
inc
add
jg
icebp
fcmove
xlat
sub
shrl
clc
jne
into
jnp
mov
clc
cmp
jno
add
clc
movsb
clc
sub
and
mov
ficompl
inc
clc
mov
sub
clc
push
pop
lods
and
inc
clc
ljmp
adc
add
mov
xor
add
mov
cmp
xor
add
clc
mov
bound
add
clc
dec
add
add
adc
add
add
int
add
push
add
mov
add
jl
clc
and
add
sub
jns
loope
inc
clc
inc
add
je
pop
jns
add
dec
cld
cmp
jge
add
inc
clc
dec
jne
mov
adc
sar
clc
push
add
popa
add
jne
add
scas
outsb
adc
add
mov
xchg
popf
cwtl
enter
lcall
lcall
sahf
add
add
data16
pop
aad
inc
add
mov
clc
fs
ret
testb
test
std
jge
or
cmp
mov
pop
mov
clc
scas
lods
sub
repnz
xchg
jg
clc
test
cli
jl
push
add
mov
xor
mov
jmp
pop
pop
in
lahf
inc
add
adc
add
and
add
add
add
or
jnp
clc
cmp
clc
mov
mov
lods
xchg
push
pop
loop
mov
xbegin
shlb
add
test
clc
loope
fwait
cmp
mov
or
clc
jne
jge
and
add
clc
mov
and
clc
nop
test
rorb
cmpsl
clc
mov
clc
push
mov
pop
cmpsl
clc
xchg
and
mov
clc
adc
add
clc
mov
add
clc
in
imul
add
cmp
add
add
clc
sahf
mov
pop
pop
mov
clc
fsts
sub
add
clc
leave
test
fsub
clc
pop
nop
inc
clc
inc
clc
dec
add
add
std
pop
dec
lret
je
jno
add
sub
clc
mov
sahf
sub
push
add
ljmp
gs
fidivrl
enter
mov
inc
add
cli
faddl
xchg
pop
cmp
sar
xchg
jo
add
test
clc
or
push
jmp
and
add
mov
fidivs
ret
test
into
sub
clc
mov
clc
dec
sub
push
cld
adc
add
add
add
jnp
mov
imul
add
clc
stos
addr16
lock
shll
aad
clc
inc
clc
mull
clc
jp
cmp
push
je
adc
add
loop
mov
mov
add
pop
push
loop
xchg
mov
add
das
jecxz
js
lcall
popa
add
fwait
inc
add
int3
in
mov
dec
aad
clc
out
mov
push
xor
add
add
clc
sarl
sbb
jns
dec
lret
mov
clc
repz
pushf
inc
clc
cmp
clc
testl
and
add
clc
cmp
clc
aam
adc
add
add
outsb
push
add
ret
clc
xor
add
add
xchg
push
add
inc
add
aam
add
xor
add
jmp
push
push
and
add
add
mov
add
sar
clc
cmc
mov
add
neg
pop
subps
ds
xor
add
out
xchg
or
lcall
mov
fstp
cld
dec
cmp
add
pop
cmpsl
clc
cmp
pop
mov
xor
add
rorb
mov
in
popf
cmp
add
imul
add
add
clc
ds
add
sub
jmp
clc
arpl
add
add
es
in
out
push
add
out
inc
clc
mov
pop
push
out
and
ror
inc
clc
aas
ja
xchg
cmp
js
adc
add
clc
mov
fldcw
dec
xor
add
add
shrb
js
pop
xabort
clc
cmp
mov
ret
clc
int3
test
pop
movsb
clc
xlat
bsf
clc
inc
add
push
add
add
add
fcmovnbe
push
clc
sbb
int3
cltd
inc
add
sub
stos
movsb
clc
outsb
sahf
cmp
out
mov
clc
push
nop
scas
pop
push
clc
stos
enter
fs
inc
clc
adc
add
mov
clc
je
add
cmp
sbb
clc
cmpsl
clc
mov
xor
add
idiv
pop
clc
fcmovnbe
dec
and
xchg
xchg
bnd
clc
popa
add
jge
add
xor
add
inc
add
xchg
ffree
clc
dec
fisttps
rcrl
clc
loopne
stos
scas
adc
add
pop
push
lcall
dec
inc
clc
or
stos
pop
pop
add
add
add
or
clc
or
sub
add
mov
fwait
sbb
mov
and
sub
scas
data16
sahf
xabort
xchg
leave
and
mov
clc
adc
add
dec
pop
test
push
leave
dec
out
nop
cwtl
jp
clc
lea
mov
add
pop
clc
movsb
clc
cltd
fimull
lock
leave
jbe
jnp
push
pop
sahf
cmp
cmp
inc
add
mov
sbb
xor
add
hlt
mov
mov
and
add
add
add
clc
mov
clc
icebp
push
sbb
clc
out
fsubrl
fwait
jo
add
dec
fwait
cmp
mov
shl
cmp
nop
pop
clc
into
dec
xchg
sbb
clc
add
jg
add
pop
push
add
add
pushf
aas
stos
dec
pushf
add
add
add
in
mov
pop
sbb
add
mov
std
xchg
sub
xlat
aam
xchg
lret
jge
clc
imul
mov
clc
adc
clc
fisttpl
pop
mov
add
mov
jp
outsb
dec
int3
lret
cmp
mov
clc
fldcw
jnp
sbb
add
test
popa
add
mov
push
add
pop
clc
test
arpl
add
test
inc
add
insl
push
jge
add
test
pop
mov
outsl
fmuls
push
out
cld
in
cmp
clc
jmp
add
add
add
aad
or
lcall
inc
add
into
cmp
mov
mov
jmp
mov
clc
stos
es
inc
add
jnp
add
ds
clc
xchg
in
lret
out
adc
add
scas
mov
add
clc
repnz
inc
clc
xor
add
pop
inc
clc
cmp
movsb
clc
call
add
addr16
popf
arpl
add
add
push
cmp
clc
and
imul
scas
mov
mov
add
mov
sub
add
sbb
mov
repnz
clc
loop
pop
mov
add
es
fidivrs
lock
pop
repz
cmp
clc
cmp
daa
clc
sar
xlat
negl
ss
add
fistpl
add
push
add
add
add
dec
cmp
fcmovu
sub
outsb
inc
add
and
add
pop
xor
clc
dec
inc
add
mulb
add
mov
add
add
or
push
sar
popa
add
nop
test
test
xor
add
fisubrl
in
aas
in
xor
add
add
dec
push
push
add
mov
sar
sub
or
adc
mov
mov
clc
adc
add
add
mov
dec
jmp
movsb
clc
inc
add
xchg
lods
outsb
pop
sub
add
lret
rcr
jle
cmp
jecxz
insl
dec
add
add
xor
and
clc
cmp
add
cmp
fdivl
add
mov
clc
js
cmp
mov
add
xchg
xlat
outsb
mov
push
jecxz
jo
add
lret
pop
iret
push
fs
push
fidivrl
into
in
jnp
or
add
dec
sub
cmp
clc
mov
inc
clc
add
jo
add
xor
add
add
pop
sub
testb
add
add
fs
cmp
mov
mov
clc
loope
enter
mov
adc
add
mov
and
add
add
xchg
jae
add
pushf
ljmp
xbegin
inc
clc
inc
clc
cmp
add
add
add
shl
clc
inc
add
daa
clc
out
sbb
add
fdivl
enter
clc
hlt
scas
and
imul
clc
sbb
mov
call
add
sbb
loop
sbb
clc
sub
add
sbb
dec
and
movsl
clc
gs
pop
clc
inc
clc
clc
fwait
and
add
ljmp
cmp
add
mov
sub
mov
jne
dec
and
add
xor
pop
addr16
mov
add
push
mov
add
dec
lret
rcr
mov
outsb
lret
mov
add
int3
cwtl
out
int3
je
ljmp
clc
xchg
addr16
filds
add
clc
paddsw
sahf
popf
push
add
mov
clc
push
roll
clc
sar
dec
pop
outsb
out
jp
clc
xchg
or
sti
mov
xor
add
cwtl
jb
add
clc
xor
add
push
dec
push
fidivl
xchg
adc
add
pushf
jmp
add
xchg
es
pop
repz
clc
mov
sub
clc
aaa
push
add
jmp
xchg
jle
movsl
clc
mov
xchg
ds
xchg
ret
clc
bound
add
jne
outsl
stc
je
add
add
mov
push
and
and
add
mov
inc
clc
lea
add
cld
fcompl
add
jb
add
clc
pop
data16
jecxz,pt
clc
cmc
cmp
jecxz
xabort
xchg
mov
fpatan
and
add
add
sarb
mov
popf
sub
push
repnz
push
add
mov
clc
pop
add
add
add
xchg
out
repnz
cli
test
mov
pop
xchg
jmp
xchg
inc
clc
inc
add
imul
clc
xlat
xchg
std
lea
movsb
clc
sub
jne
and
clc
jb
add
je
xchg
inc
add
add
add
scas
rsqrtps
add
ret
clc
adc
add
add
bound
add
add
xchg
inc
add
xor
or
ss
xchg
lods
cmp
add
insl
mov
out
cwtl
add
jae
add
xchg
fiadds
add
add
add
clc
jl
push
xor
inc
clc
push
and
add
add
rep
clc
leave
fwait
dec
dec
push
clc
cmc
xchg
cmp
mov
and
add
sub
sar
clc
dec
or
add
inc
add
in
test
clc
pop
fwait
add
add
jmp
clc
cwtl
or
loopne
inc
add
aam
lcall
and
add
cli
cmp
cmc
mov
mov
inc
add
cmp
push
add
daa
clc
or
add
cmp
insb
in
cwtl
ljmp
xabort
pop
movsl
clc
mov
frstor
clc
pop
jae
add
jne
clc
ret
clc
sub
push
add
test
add
movd
xchg
sbb
add
jb
add
cmp
arpl
add
dec
bound
add
fstpt
decb
xor
add
add
add
inc
clc
jne
push
popl
add
add
add
add
ja
in
inc
add
imul
es
push
mov
lock
mov
add
cmp
mov
clc
ret
clc
adc
add
into
ds
ret
clc
ror
bound
add
add
mov
add
hlt
aam
mov
lods
daa
clc
lods
mov
call
outsb
mov
lods
inc
clc
leave
testl
sbb
clc
dec
out
cltd
inc
clc
adc
add
data16
mov
test
iret
sub
clc
push
int3
dec
iret
pop
lods
cmc
popf
pushf
xor
add
rorb
mov
add
imul
jbe
cmc
loopne
push
or
mov
dec
fwait
mov
add
add
add
dec
pop
clc
mov
add
lcall
xor
add
daa
clc
pushf
loop
out
sub
dec
lock
xchg
sbb
add
clc
jmp
clc
leave
shrl
test
xor
add
addr16
test
fcompl
rorb
std
sub
jp
lods
inc
add
sub
mov
clc
push
mul
clc
outsl
push
add
adc
add
pop
jae
add
imul
cmp
mov
add
loope
stc
pop
clc
push
cmp
add
push
imul
add
sti
xchg
mov
add
xchg
pop
and
call
and
add
mov
cltd
cmp
sar
testl
or
in
pop
hlt
xabort
clc
iret
xchg
seto
xor
add
sti
dec
cltd
and
jae
add
iret
mov
mov
fs
cs
xlat
nop
negb
mov
add
sbb
into
sbb
pop
dec
push
movsb
clc
inc
clc
dec
push
mov
pop
sub
test
cmp
xabort
pusha
add
test
out
cmp
push
iret
mov
call
xchg
xor
add
add
pop
and
add
add
adc
add
push
add
stos
xchg
adc
add
add
inc
add
popa
add
push
stos
sbb
add
clc
enter
mov
data16
push
fucomp
push
add
cmp
mov
movsl
clc
scas
sub
mov
jp
add
data16
cld
fildll
mov
cmp
clc
stc
test
jb
add
inc
add
jmp
cmpsl
clc
stos
jecxz
mov
movsl
clc
ds
fdivrs
dec
jno
add
lock
insb
test
clc
jmp
add
push
add
xchg
jae
add
xbegin
pop
clc
in
sub
add
adc
add
sub
test
repnz
jecxz
push
sub
clc
popl
sub
xor
add
stos
cmp
repnz
clc
cli
jae
add
add
sar
dec
aas
dec
xchg
pop
sbb
sub
add
clc
clc
cmp
outsb
mov
pop
mov
clc
daa
clc
xchg
xbegin
mov
jge
jns
mov
mov
xchg
aam
sub
das
clc
mov
lret
cltd
adc
add
adc
add
pop
cltd
es
xor
add
aas
ret
clc
gs
cmp
add
pop
clc
or
add
sbb
clc
cmp
inc
add
sub
clc
jmp
mov
testb
add
push
mov
clc
repnz
pop
add
add
sahf
inc
clc
pop
cmp
or
clc
nop
push
pop
popa
add
aaa
lret
xbegin
mov
fldcw
cmp
inc
clc
mul
clc
lahf
jp
add
add
add
ds
push
xbegin
add
mov
clc
adc
add
cmp
add
ljmp
clc
mov
xor
add
fldenv
mov
mov
add
cmp
add
push
add
push
mov
add
inc
clc
push
lret
add
clc
addr16
adc
add
xchg
xchg
dec
cld
xchg
test
or
add
popa
add
mov
sar
push
add
push
add
leave
out
xlat
dec
and
add
dec
lods
loop
lea
cwtl
out
js
push
dec
jge
jo
add
add
sub
jmp
add
cvtps2pi
and
add
add
add
repz
lfs
add
pop
add
add
add
push
jae
add
std
sub
in
jnp
and
add
mov
clc
and
add
cmp
mov
jecxz
fldl
add
int
std
mov
fs
std
sarl
clc
std
ret
lods
add
add
add
clc
jnp
in
ja
fadds
add
flds
add
push
add
mov
pop
adc
add
add
cmp
mov
clc
adc
add
ret
clc
xchg
cmp
add
push
clc
js
clc
cmp
je
jl
add
sub
clc
cmp
mov
push
mov
iret
and
add
push
lcall
jmp
or
add
icebp
rclb
add
push
in
sbb
add
jns
clc
popf
sahf
push
adc
pop
ficoms
test
push
clc
fisttpll
clc
js
addr16
scas
cltd
aad
pop
or
loopne
popa
add
clc
push
add
dec
mov
clc
roll
add
fcmovne
inc
clc
popf
push
cltd
or
mov
add
clc
xor
add
cmp
and
add
mov
add
xchg
dec
lock
cltd
test
or
add
pop
lods
sbb
pop
push
call
add
jnp
push
mov
ja
mov
leave
add
add
push
push
mov
inc
clc
movsl
clc
sarb
pop
mov
clc
loope
cs
test
loopne
add
add
je
clc
mov
data16
clc
enter
add
pop
jge
sar
mov
add
dec
and
add
lock
popa
add
lods
xor
clc
mov
lret
fisubrl
cmp
clc
jo
add
loop
rcrb
clc
out
fs
jno
add
clc
insb
nop
push
add
ret
clc
bnd
adc
add
add
pop
mov
lcall
xor
add
jnp
mov
pop
inc
add
pop
call
add
jg
add
add
clc
xchg
loope
cmpsb
clc
iret
fimull
jecxz
mov
xchg
pushf
xor
add
mov
inc
clc
clc
push
add
fisubs
add
gs
xchg
cmp
add
popa
add
and
add
add
mov
clc
mov
inc
add
xchg
negl
pushf
push
clc
test
clc
mov
add
inc
clc
and
clc
adc
add
push
sbb
dec
push
ret
mov
rcrl
fstenv
add
mov
mov
clc
sar
push
add
adc
add
sub
stc
adc
sahf
int
xor
add
add
clc
jmp
add
ljmp
pop
mov
push
and
ret
clc
pop
scas
sub
or
jne
mov
dec
sbb
add
ret
clc
add
add
add
mov
rcrb
add
pop
add
add
data16
mov
cltd
aas
pop
clc
and
add
cmp
sar
add
cmp
sub
clc
movsl
clc
shl
leave
inc
add
xbegin
clc
data16
cmp
clc
out
pop
push
add
cli
xabort
add
and
fxch
push
add
xchg
inc
add
xbegin
ret
clc
jnp
clc
sub
add
in
outsl
cmc
inc
clc
push
insb
xor
add
add
add
add
hlt
pushf
lods
stos
or
in
stos
loop
add
add
add
jecxz
and
add
add
pushf
xchg
outsb
adc
mul
clc
pop
dec
and
add
xbegin
push
outsb
lea
add
dec
lods
into
arpl
add
insb
clc
mov
pop
ds
jae
add
nop
int3
ss
jl
clc
imul
clc
lea
ret
lea
or
clc
adc
add
add
adc
add
pop
adc
add
clc
push
add
pop
movsl
clc
icebp
cli
xchg
gs
mov
jno
add
add
ja
clc
xor
add
add
lret
mov
clc
mov
add
jae
add
add
mov
mov
jmp
clc
pop
mov
clc
sub
mov
jmp
clc
popa
add
pop
mov
fildl
insl
flds
mov
clc
inc
add
mov
xor
add
dec
int3
mov
add
xor
add
lods
xbegin
push
nop
dec
mov
or
movsl
clc
scas
imull
add
xbegin
clc
scas
push
cld
loop
fs
xbegin
sarl
jne
add
loop
push
cmpsl
clc
es
jns
clc
in
xor
add
fiadds
fildll
outsb
push
xor
add
clc
dec
jge
mov
clc
inc
clc
out
scas
int
clc
seta
clc
out
mov
mov
add
xchg
stos
js
clc
mov
lea
xor
add
mov
clc
imul
add
clc
out
popf
ja
adc
dec
cmp
gs
pop
cmpsb
clc
repz
jge
pop
aam
add
sbb
scas
loop
sahf
cmp
mov
add
sti
dec
repnz
test
scas
imul
add
cmpsb
clc
adc
add
ja
sbb
addr16
arpl
add
clc
pop
sub
sbb
ds
add
mov
adc
cmp
scas
popf
sahf
fiadds
add
add
clc
sbb
mov
add
jl
popf
xor
add
xchg
mov
clc
xor
add
or
gs
mov
inc
add
ds
mov
lret
cmp
pop
cs
inc
clc
lea
out
aam
clc
sbb
sbb
push
int
and
add
add
xchg
int
add
dec
sub
add
clc
cld
popf
xchg
into
imul
add
clc
adc
add
xchg
cmp
push
add
mov
add
inc
clc
or
and
add
add
cmp
push
add
cltd
cmpsl
clc
cli
xor
add
or
add
js
add
mov
clc
call
add
pop
insb
repnz
add
sub
pop
ret
clc
xor
add
push
add
mov
mov
clc
insl
cmpsl
clc
mov
mov
clc
and
sbb
add
pop
mov
clc
xchg
popf
pop
ja
add
fsts
cmp
xor
add
sbb
hlt
fdivrs
out
aaa
jne
inc
add
sub
xchg
cmp
int
push
add
sbb
add
xor
add
or
ret
cmp
add
scas
push
add
mov
dec
add
xor
add
add
lea
sar
xor
add
clc
or
jl
or
add
sub
movsb
clc
jp
add
add
ret
clc
xor
sar
fs
into
mov
clc
inc
clc
cmp
push
mov
clc
add
push
fs
clc
call
sub
out
shll
clc
dec
inc
add
jnp
inc
add
int
add
es
inc
clc
sahf
cmp
repz
add
xchg
icebp
xchg
add
add
add
hlt
xor
clc
lods
mov
clc
dec
add
add
clc
test
clc
clc
push
mov
xchg
xabort
mov
clc
sub
push
add
fucomi
mov
add
add
add
inc
clc
jg
push
clc
sbb
sahf
ds
cmp
pop
xor
add
push
clc
sbb
pop
xor
add
js
sbb
push
mov
add
enter
in
pop
xor
add
clc
dec
loop
and
adc
add
clc
mov
mov
clc
inc
clc
test
and
add
cld
nop
push
shlb
add
fisubs
clc
push
add
aas
and
add
adc
dec
lea
adc
lret
or
mov
aad
insb
pop
clc
mov
jge
mov
xchg
ja
clc
mov
lahf
xchg
inc
add
cmp
jle
add
add
clc
es
inc
clc
ret
cmp
dec
xor
add
add
mov
pop
stc
lea
inc
clc
push
js
pop
pop
clc
cmpsl
clc
jb
add
out
jle
sub
cmp
add
or
add
sbb
pop
or
add
clc
out
jo
add
push
ret
clc
enter
add
xchg
ret
clc
cmp
clc
jbe
call
scas
insb
es
fdivl
insb
bound
add
add
clc
lret
jns
push
add
rorl
xlat
dec
dec
enter
scas
popf
cwtl
push
add
pop
clc
imul
add
stc
int3
xor
add
add
loope
lock
ljmp
add
mov
sbb
push
lret
and
add
std
insb
lcall
mov
push
enter
daa
clc
mov
lret
pop
leave
outsl
std
mov
jbe
mov
xor
add
mov
iret
add
mov
lea
popa
add
sti
adc
add
ds
scas
xchg
call
adc
add
insl
sahf
hlt
xchg
fisubrs
sahf
push
js
mov
clc
dec
repz
clc
addr16
xchg
mov
add
fildl
add
imull
add
mov
lret
pop
cmp
popa
add
dec
jg
add
clc
jo
add
sbb
fldcw
add
clc
int
inc
clc
add
add
cmpsb
clc
mov
hlt
maxps
add
add
fcomip
ss
dec
fs
add
add
lods
mov
jne
testb
push
loopne
addr16
clc
enter
clc
and
ss
add
stos
sarl
pushf
cmp
add
in
add
add
pop
enter
add
cmpsl
clc
fisubl
ret
clc
mov
add
sbb
and
add
xchg
out
pop
mov
add
add
daa
clc
inc
add
cmp
pop
and
add
xchg
popf
mov
cmp
arpl
add
call
add
lods
cltd
xchg
sar
xchg
jp
xabort
or
clc
fs
xor
add
adc
add
mov
jo
add
xor
inc
add
xor
add
add
pop
jnp
enter
std
cmc
adc
add
jo
add
clc
fbstp
add
jo
add
xbegin
add
test
dec
and
pop
add
add
add
mov
ret
clc
mov
leave
flds
mov
popf
shrb
jmp
clc
sbb
clc
mov
push
repz
ret
in
adc
mov
push
sar
rorl
xor
add
xchg
mov
fidivrl
in
in
pop
icebp
gs
mov
add
inc
clc
push
add
mov
add
stos
sub
sbb
clc
gs
dec
mov
xchg
pushf
imul
call
dec
mov
mov
pop
sbb
add
scas
jmp
sbb
add
add
sbb
and
add
jmp
push
fstps
lahf
loope
jo
add
xor
add
mov
jle
add
ja
clc
add
cmpsb
clc
push
outsl
scas
sub
fmul
jle
out
gs
lods
es
idivl
jge
clc
out
push
sbb
add
clc
xor
add
add
lods
mov
add
js
sbb
or
ret
clc
or
add
push
add
xchg
pop
sbb
add
pop
clc
imul
push
add
aaa
xchg
imul
add
lock
mov
mov
mov
mov
js
ss
lcall
clc
mov
add
sbb
clc
jns
fnstsw
add
aas
xor
add
lods
add
add
push
clc
into
int
push
add
add
add
out
icebp
clc
xabort
dec
out
enter
filds
add
popf
test
fwait
adc
add
mov
inc
clc
in
ret
out
das
fcompl
inc
clc
hlt
lahf
aad
fcompl
test
cmp
add
and
test
lret
xchg
gs
mov
lret
outsb
dec
lock
loop
push
add
and
test
jno
add
rcrb
cmp
clc
dec
push
clc
test
fnsave
add
mov
lods
cmp
jbe
clc
in
add
aaa
sar
clc
jecxz
sbb
mov
add
mov
das
loope
clc
adc
add
mov
addr16
fstpt
add
jge
mov
push
add
cmp
inc
add
sbb
sbb
cmc
inc
clc
mov
test
sbb
clc
jae
add
into
xchg
and
out
and
add
cmp
cmp
clc
frstor
add
jns
scas
jb
add
add
mov
and
add
xor
add
cmpsl
clc
aam
add
mov
clc
dec
call
pop
cmp
sbb
xor
add
xor
add
xchg
dec
mov
clc
mov
pusha
add
jbe
cmp
clc
adc
add
clc
cmp
ret
clc
or
mov
in
pop
clc
lods
adc
cli
lcall
add
add
out
aam
clc
fwait
icebp
dec
mov
clc
jecxz
dec
push
mov
push
adc
add
mov
clc
pop
clc
test
cmp
int
xchg
mov
dec
cmp
clc
adc
add
clc
adc
add
push
add
inc
add
mov
xchg
into
or
cmp
clc
inc
add
dec
bound
add
mov
clc
decl
ljmp
cmp
push
clc
xchg
out
lock
clc
flds
add
add
and
add
add
ljmp
add
out
iret
cli
pushf
iret
arpl
add
clc
push
add
sbb
inc
clc
sbb
xchg
push
mov
lods
push
add
repnz
clc
ret
data16
rcrb
pop
mov
add
add
add
sbb
add
add
pop
or
add
mov
clc
mov
clc
push
add
inc
clc
rcll
add
jmp
dec
pop
fsubl
dec
popf
pop
or
pusha
add
nop
mov
mov
add
add
clc
sub
cmp
inc
clc
in
inc
clc
lock
fdivl
jne
xor
add
sbb
jle
sub
jbe
push
aaa
inc
clc
shl
clc
mov
mov
sbb
mov
clc
cmp
in
jb
add
add
sar
clc
clc
and
add
add
adc
xor
add
pop
pop
scas
cmp
pop
pop
adc
add
add
xor
xor
push
inc
clc
lea
bound
add
xabort
clc
lret
stos
mov
jmp
fsubs
push
add
jae
add
add
sub
add
inc
add
aaa
sahf
xchg
cli
je
add
and
add
lcall
data16
add
jo
add
sbb
enter
pop
xlat
sub
fistpl
or
add
add
inc
clc
push
add
add
imulb
and
add
xor
add
sti
faddl
clc
mov
or
jo
add
cmp
in
and
add
add
add
xchg
sbb
add
jno
add
add
mov
dec
pop
in
data16
mov
call
add
cmc
push
out
aas
insl
popa
add
stos
lock
clc
clc
cmpsb
clc
or
sbb
jle
push
add
aas
test
lcall
add
add
adc
add
fcomi
shrl
leave
mov
negb
or
clc
in
flds
add
push
loope
insb
pop
movsb
clc
lret
pop
cmp
push
clc
jmp
clc
inc
clc
nop
pop
sub
jbe
add
sahf
cwtl
cmp
mov
clc
cmp
scas
dec
out
out
test
insl
repz
je
outsb
ss
ljmp
leave
inc
add
lock
add
and
jle
add
call
push
pop
lods
mov
and
xabort
xchg
sub
jp
pop
enter
cmp
cmp
repnz
mov
pop
mov
lock
add
into
jg
clc
push
cmp
clc
xchg
repnz
mov
mov
adc
add
cmp
clc
into
daa
clc
mov
xchg
pop
dec
mov
adc
pop
pop
add
add
add
mov
clc
fsubs
add
add
pushf
sub
clc
lret
jl
in
dec
out
xchg
pop
pop
clc
jbe
clc
or
xbegin
add
add
pop
daa
clc
mov
cmpsb
clc
fmull
je
push
clc
ret
and
add
fdivl
mov
daa
clc
mov
xor
dec
sbb
add
mov
clc
test
sbb
adc
add
add
lret
in
addr16
dec
sub
punpcklbw
add
testb
into
scas
inc
add
sbb
rcll
test
rcll
sub
clc
iret
test
mov
ds
loope
daa
clc
test
clc
inc
add
clc
adc
pop
xor
add
cmp
and
add
in
shrl
xchg
pop
jmp
add
into
gs
xchg
push
clc
jnp
push
adc
add
jg
or
mov
mov
clc
stos
add
lods
or
mov
clc
cs
sbb
clc
adc
mov
xbegin
mov
clc
hlt
push
clc
insl
pusha
add
or
xor
movsl
clc
out
std
adc
add
aas
negb
clc
or
or
gs
ja
push
add
dec
sbb
clc
inc
add
add
add
add
push
clc
cmp
jmp
add
xor
add
sub
jle
pushf
mull
add
fnstsw
scas
iret
xor
sub
repz
inc
clc
inc
add
insl
lahf
sar
cmp
aam
jae
add
loope
jl
mov
call
dec
aad
repnz
push
test
jnp
mov
mov
xlat
add
add
or
add
add
xchg
xchg
mulb
clc
adc
add
add
adc
add
add
adc
add
clc
call
add
mov
xchg
cmpsb
clc
cmp
xabort
xchg
add
add
and
add
add
xchg
test
add
vminps
iret
in
xor
lock
insb
pop
inc
clc
push
add
mov
mov
push
adc
add
test
add
add
push
push
add
test
out
test
clc
cmp
popa
add
loop
and
add
xchg
mov
lock
fs
bound
add
loopne
aam
aaa
jl
jp
fistl
clc
adc
add
adc
add
xchg
xchg
adc
add
mov
outsb
sub
sahf
data16
mov
pop
inc
add
and
add
movsl
clc
cli
dec
sbb
cmp
aam
clc
cs
pop
dec
jnp
jp
adc
xchg
icebp
mov
clc
mov
clc
pop
jns
cmp
mov
je
clc
mov
add
add
add
sar
clc
adc
add
jmp
clc
jns
inc
clc
add
mov
dec
xchg
pop
jl
add
add
jg
arpl
add
out
mov
pop
mov
push
mov
add
jle
clc
and
add
clc
push
add
test
data16
lcall
std
data16
dec
pusha
add
push
clc
icebp
or
dec
lret
je
lods
stos
mov
clc
sar
cmpsb
clc
adc
add
clc
cmp
clc
lock
jnp
jp
jno
add
clc
lahf
jmp
lahf
fdivs
ficompl
scas
inc
clc
mov
adc
add
add
dec
jge
cmpsb
clc
data16
scas
lods
or
jp
negb
clc
xabort
cmp
enter
add
and
add
data16
sbb
inc
add
cli
icebp
pushf
addr16
mov
add
xchg
mov
xor
clc
in
mov
clc
nop
fbld
add
mov
push
clc
mov
add
mov
clc
divl
jle
add
cmp
clc
adc
pop
bsr
add
stos
mov
or
clc
int
clc
cltd
pop
arpl
add
clc
mov
cmp
sbb
scas
stos
adc
add
clc
cs
mov
cmp
inc
add
jnp
cs
testl
sahf
sbb
pusha
add
mov
add
cmp
sbb
add
divb
dec
push
scas
or
add
add
pop
adc
clc
imul
add
sbb
add
aaa
or
push
add
xchg
mov
fisttpll
add
or
data16
mov
aad
inc
clc
push
sti
or
xabort
clc
clc
in
xchg
pop
stos
mov
pop
sbb
dec
in
cmp
js
sar
mov
cmp
add
add
dec
mov
cmp
in
inc
clc
push
clc
xabort
rcll
mov
iret
pushf
push
clc
and
push
inc
add
adc
mov
clc
and
add
clc
popa
add
sbb
add
xlat
scas
xchg
ret
add
mov
cmp
adc
add
add
sbb
dec
xbegin
test
int
push
or
clc
jbe
and
add
bound
add
in
aaa
sar
fisubrl
fdivs
pop
paddsw
push
add
xchg
inc
clc
ss
aad
add
sbb
cmp
adc
add
aaa
mov
add
mov
add
pop
jl
jecxz
es
call
add
ret
clc
lea
add
int3
add
add
push
adc
add
sub
add
xchg
xchg
call
cmp
clc
insb
leave
inc
add
adc
clc
dec
in
jae
add
scas
insl
kmovw
insb
sbb
or
clc
add
add
add
dec
pop
sti
jnp
sbb
fs
mov
xor
add
add
jae
add
fldl
clc
mov
aaa
mov
pop
mov
pop
and
add
shrl
adc
add
insb
sub
cmp
add
clc
int
scas
arpl
add
clc
aam
push
add
hlt
adc
add
cmp
jl
sarl
das
ljmp
outsb
xlat
pop
adc
loop
inc
add
mov
add
dec
cmpsb
clc
add
adc
add
add
sub
add
add
add
icebp
lea
rol
clc
cmp
clc
pop
cltd
mov
add
or
add
pop
jecxz
xchg
fs
xor
clc
scas
sub
hlt
clc
cmpsl
clc
or
add
inc
add
fmull
popf
xchg
xchg
movsl
clc
inc
add
mov
clc
push
add
add
mov
pop
ficoml
shlb
add
mov
ret
clc
fwait
or
clc
push
aam
cmp
clc
shr
popf
imul
add
add
add
dec
icebp
aas
fcmovb
clc
mov
add
mov
test
add
test
pause
jecxz
js
js
jl
cs
xchg
add
add
test
mov
clc
fwait
in
xchg
xchg
imul
mov
clc
ret
clc
add
and
fmull
jns
sbb
add
cmp
push
test
cwtl
imul
mov
test
clc
adc
clc
push
int
imul
sub
add
xchg
dec
pop
cmpsb
clc
mov
cmp
clc
movsl
clc
stc
push
addr16
lahf
adc
add
cmp
out
mov
inc
add
mov
clc
leave
jns
xchg
das
jno
add
add
adc
add
add
add
iret
mov
xchg
push
fs
mov
fisttps
clc
pop
mov
mov
pop
clc
xor
add
cwtl
and
add
mov
jbe
rcll
mov
cmpsb
clc
lret
clc
push
pop
adc
add
add
xchg
scas
ret
clc
loopne
xchg
filds
clc
mov
xchg
pop
sbb
pop
jbe
fcmovb
clc
test
adc
add
push
jl
clc
xor
add
sub
clc
or
add
arpl
add
adc
add
ds
add
fsubrl
push
clc
jg
xchg
sbb
add
add
xchg
xlat
cmc
rorb
add
mov
movsb
clc
decl
clc
mov
mov
add
scas
mov
fldenv
adc
add
xbegin
add
cli
leave
fsub
clc
cmp
xabort
loopne
sar
add
bswap
pop
in
or
pop
ljmp
jp
clc
jp
mov
adc
add
js
cmp
clc
dec
lret
add
data16
cli
es
dec
dec
dec
mov
add
stos
jmp
mov
pusha
add
add
add
mov
cld
daa
clc
mov
clc
dec
pop
out
cltd
aaa
xor
add
add
mov
push
fsubl
add
push
lret
loope
sbb
add
add
mov
add
xor
add
add
add
push
add
xchg
fwait
or
clc
ss
cltd
nop
xchg
sarb
mov
mov
clc
repz
dec
jbe
add
pop
xor
add
inc
clc
out
cwtl
imul
sub
mov
js
popa
add
sub
add
in
cmp
push
sar
sbb
add
cwtl
out
dec
adc
mov
pop
in
mov
cmc
roll
hlt
mov
add
in
cwtl
pop
inc
clc
int
inc
clc
dec
mov
add
sar
clc
xchg
mov
add
clc
push
add
aad
push
add
cmp
xor
add
xor
movsl
clc
jge
insl
inc
clc
or
clc
ds
clc
inc
add
cmp
fnstcw
cmp
add
incl
add
adc
ljmp
adc
ljmp
ljmp
add
or
clc
int3
repz
dec
inc
clc
pop
sar
push
enter
test
add
add
adc
add
add
ds
sti
cmpsb
clc
pop
sub
clc
cmp
in
imul
fsubrl
push
add
mov
add
cs
mov
clc
or
and
add
and
add
out
mov
xchg
mov
xchg
mov
or
mov
sub
cs
cmp
clc
or
clc
movsl
clc
gs
push
outsb
mov
jne,pt
int
pusha
add
add
add
or
and
add
loopne
pop
dec
sub
push
add
pop
mov
ret
clc
dec
or
add
add
push
cmp
push
add
mov
clc
int3
in
mov
sub
add
xor
add
mov
add
daa
clc
popf
push
repz
clc
lods
or
ret
clc
mov
fildl
test
jo
add
int3
pusha
add
mov
xchg
rcrl
mov
ja
xor
xchg
dec
clc
stos
mov
cli
jns
pop
pop
mov
and
add
clc
pop
and
add
gs
add
add
clc
cmpsl
clc
dec
insb
ds
sub
push
mov
lods
push
add
shl
dec
movsl
clc
sar
cmp
repz
call
add
add
add
add
add
jb
add
fmull
add
add
add
dec
cmp
add
mov
clc
mov
add
dec
movsl
clc
repnz
out
or
add
lock
sbb
mov
add
add
scas
bound
add
clc
mov
std
push
repnz
add
and
add
cli
dec
mov
dec
xor
add
sbb
movsb
clc
mov
clc
mov
add
ss
xor
clc
push
clc
mov
nop
outsb
fbld
or
add
negl
lahf
or
xchg
mov
js
clc
imul
out
pop
xchg
test
push
gs
dec
dec
mov
sbb
push
add
lahf
xlat
cmp
mov
loop
pop
inc
clc
sar
mov
mov
clc
mov
add
cmp
add
cmp
inc
clc
mov
pop
clc
scas
in
nop
dec
mov
dec
and
shl
clc
cltd
pop
xor
add
jnp
clc
ret
xchg
xor
add
mov
jp
fisttpll
cmp
repnz
add
sub
xor
add
cmp
add
inc
add
std
cmp
jne
clc
arpl
add
xchg
cmpsb
clc
jns
mov
clc
inc
clc
or
xlat
ret
cmp
jne
clc
jle
clc
push
aad
xor
add
dec
push
fadd
clc
xadd
xabort
sar
into
call
gs
sbb
xchg
mov
test
xor
add
or
sub
add
adc
add
sahf
pop
repnz
inc
add
mov
add
test
add
xor
or
sub
inc
add
cmp
or
popa
add
popa
add
cmp
cli
lret
adc
and
pop
clc
push
clc
cmpsl
clc
mov
sub
js
inc
add
mov
mov
jbe
or
adc
add
jge
add
cmp
clc
icebp
cmc
aaa
insb
mov
add
adc
pushf
lahf
jecxz
in
fnstenv
add
or
lea
add
pop
cmp
loop
inc
clc
out
and
cmp
clc
jns
add
out
dec
push
jmp
cmp
jno
add
clc
popa
add
das
jno
add
add
movsb
clc
iret
adc
clc
out
stc
push
add
push
fs
pop
clc
into
adc
add
dec
repz
push
clc
or
push
add
dec
mov
add
cmp
lea
or
add
call
add
add
fstpl
clc
xchg
test
add
xor
add
and
add
stos
inc
add
lret
rorl
add
add
in
cmc
int3
or
push
clc
mov
pop
data16
popl
jnp
sbb
clc
mov
mov
clc
data16
add
add
sbb
clc
adc
add
cli
outsl
sub
test
xchg
cwtl
test
add
lret
pop
and
add
add
lods
popf
add
add
clc
clc
aad
aas
pop
mov
clc
cld
push
clc
push
fidivs
fnstsw
clc
and
add
loop
push
test
mov
xor
mov
push
out
in
cmpsb
clc
xchg
sbb
clc
inc
clc
push
xchg
test
xchg
dec
out
lret
out
lret
sbb
add
fwait
dec
inc
add
pusha
add
lods
cmp
mov
mov
add
jmp
adc
add
or
add
in
sub
rcl
iret
or
add
es
dec
call
cmp
rcrb
clc
pushf
sbb
clc
dec
fdivs
add
add
pop
pusha
add
cltd
loope
xor
add
pop
outsl
inc
add
jge
xchg
push
add
xor
xor
clc
repz
xlat
mov
add
mov
add
jns
clc
aaa
imul
jle
clc
jb
add
clc
sar
or
lret
mov
clc
repnz
pop
mov
cmp
clc
cmp
add
pop
ret
clc
pop
xor
add
add
inc
clc
pop
jg
scas
clc
inc
clc
mov
ljmp
imul
add
xchg
xlat
pop
adc
dec
mov
and
add
mul
clc
mov
xchg
sub
sub
punpckldq
add
push
add
cwtl
push
insl
fs
addr16
sti
addr16
xlat
xlat
call
mov
clc
inc
clc
call
clc
xlat
add
test
adc
add
jb
add
add
add
mov
add
gs
sub
push
cmp
clc
sahf
push
push
add
push
test
mov
add
lock
mov
xchg
jb
add
add
clc
dec
hlt
and
add
add
or
inc
clc
outsb
nop
aaa
popf
aam
clc
int
add
push
add
add
xchg
inc
add
jnp
loopne
cmp
enter
add
xchg
outsl
lret
add
xchg
xchg
mov
clc
sahf
pop
push
add
or
add
cmc
cmp
ljmp
add
fwait
mov
mov
add
pop
clc
xchg
in
test
lret
xabort
mov
insb
std
comiss
clc
mul
clc
inc
add
cmp
add
dec
nop
movsl
clc
jg
clc
xlat
adc
mov
clc
sbb
insb
stos
mov
add
add
xor
add
fmulp
jp
mov
popa
add
dec
sbb
add
add
repnz
insb
lods
enter
sub
or
mov
mov
shrb
clc
loope
xabort
inc
clc
sbb
clc
pop
mov
iret
push
add
mov
jl
lahf
push
mov
add
ljmp
adc
insl
and
cmp
add
mov
inc
clc
iret
or
push
add
enter
sub
add
clc
mov
out
test
cwtl
add
inc
clc
addr16
shll
add
fldl
mov
add
xchg
jbe
add
jno
add
add
ret
arpl
add
flds
xor
clc
sub
cmp
scas
adc
add
daa
clc
in
fldl
add
xchg
lods
insl
dec
fs
cmp
clc
stos
loop
dec
mov
mov
add
xchg
mov
fimull
jl
clc
js
or
add
mov
add
fwait
sar
clc
fisubrl
cmp
out
ljmp
fistps
lea
std
sbb
jl
jnp
clc
mov
clc
insl
push
sbb
mov
aad
imul
xor
add
fucomip
inc
add
bound
add
mov
add
or
clc
jbe
add
mov
rolb
lret
cmp
mov
jle
clc
aas
test
mov
clc
ds
pop
mov
sbb
int
sar
clc
adc
out
bound
add
add
fnsave
mov
or
adc
add
mov
add
add
adc
add
cwtl
mov
clc
mov
mov
inc
add
clc
int3
and
add
push
add
mov
cmpsb
clc
dec
and
add
repz
clc
jp
add
mov
sbb
cwtl
mov
clc
mov
test
clc
repz
add
adc
add
add
push
notl
mov
xlat
inc
clc
ret
clc
leave
add
add
jne
cltd
cli
xabort
aas
jmp
jbe
pushf
sar
xchg
and
dec
popa
add
sbb
pusha
add
sbb
clc
iret
and
sar
cmp
xor
cmp
roll
add
sbb
clc
and
add
inc
clc
xlat
loope
and
push
stos
or
lahf
push
add
or
adc
add
clc
fistl
add
add
add
sub
add
sbb
clc
test
inc
add
jmp
clc
cwtl
mov
lret
cmp
data16
adc
add
addr16
sbb
inc
clc
cmp
pop
cmp
add
test
cmp
jmp
xchg
add
add
push
add
sub
add
fstl
add
lcall
cmp
fistl
add
sbb
cmp
clc
sar
pop
jnp
add
add
or
mov
test
adc
add
stc
cmp
dec
mov
add
clc
xchg
mov
xor
add
add
mov
xabort
in
out
xchg
das
jp
add
out
fxch
fmuls
imul
pop
fnstsw
test
mov
xchg
fisubs
in
arpl
add
notb
add
mov
add
repnz
outsb
adc
add
clc
ficomps
add
mov
add
out
cmp
clc
addr16
repnz
nop
dec
notb
and
add
mov
clc
fwait
push
jbe
mov
sar
mov
negl
clc
inc
clc
cltd
inc
clc
mov
xchg
sub
lods
es
cmp
mov
clc
pop
fs
push
add
cmp
or
imul
test
inc
add
pop
or
imulb
sub
and
add
or
add
add
xor
add
sub
ret
clc
xchg
sub
jae
add
daa
clc
or
add
mov
adc
add
jg
stos
dec
mov
add
add
and
out
sbb
clc
dec
mov
push
cmp
add
das
pop
daa
clc
push
add
adc
imul
add
mov
add
clc
xchg
fsubrs
adc
add
cmp
clc
mov
add
add
mov
cwtl
int3
dec
ljmp
ja
xchg
push
mov
popa
add
test
clc
inc
add
dec
adc
add
clc
aaa
mov
mov
push
pop
xchg
imul
jno
add
clc
into
and
add
out
xor
push
ret
add
movsb
clc
clc
push
outsl
xchg
stc
cmp
mov
ret
clc
stc
xabort
clc
imull
xchg
push
add
mov
mov
push
add
mov
mov
add
clc
fisttpll
mov
aas
pusha
add
sar
clc
mov
icebp
xor
add
xor
in
outsl
dec
mov
jbe
add
cs
in
push
add
mov
adc
add
add
push
lcall
jo
add
jb
add
add
out
inc
clc
dec
pop
xchg
pop
pop
lret
jl
inc
clc
mov
add
add
popa
add
pushf
pop
push
dec
mov
add
ss
cmp
add
roll
addr16
loopne
ss
mov
mov
lods
es
add
add
add
pusha
add
jno
add
ret
add
or
ss
push
enter
mov
loope
out
xor
add
movsb
clc
sbb
mov
dec
bound
add
fadd
clc
arpl
add
movsb
clc
cmp
rcrb
clc
sub
in
in
insl
sar
in
dec
add
add
mov
mov
clc
sub
cmc
push
mov
clc
jb
add
icebp
lods
inc
add
sar
filds
sbb
clc
push
add
iret
test
ret
clc
repnz
cmp
pusha
add
cwtl
pop
inc
add
fimull
add
popf
mov
into
jb
add
cli
add
add
add
fisubrl
dec
hlt
out
lea
add
lock
add
xor
mov
add
mov
rcl
leave
cmp
sbb
add
cmp
sbb
sar
mov
call
add
adc
add
out
xor
add
outsl
xlat
daa
clc
cmp
add
mov
mov
stc
aas
mov
stc
dec
dec
inc
clc
or
add
clc
fnstcw
mov
jns
pop
rorl
xor
add
fistps
aas
mul
clc
add
add
js
jle
repnz
add
xor
mov
loope
dec
popa
add
bound
add
add
add
lret
clc
scas
outsb
nop
ljmp
clc
jge
clc
icebp
cmc
cld
xchg
sub
fs
and
add
xor
add
test
lcall
pusha
add
push
dec
push
or
add
clc
faddl
add
mov
xor
pop
clc
mov
out
cmpsb
clc
pop
int
ds
add
add
sub
add
pop
sbb
in
mov
mov
add
xor
add
xchg
clc
xchg
lods
xor
add
add
jae
add
clc
clc
xor
jg
mov
inc
clc
scas
xchg
movsb
clc
pop
and
add
clc
lahf
fistps
xabort
ret
cld
adc
add
add
je
scas
sti
data16
lea
aad
clc
shll
add
cltd
ds
clc
or
or
outsb
xabort
clc
shll
clc
sbb
clc
fsubrs
dec
push
add
jo
add
ja
add
add
add
cli
xor
add
je
xor
add
bound
add
jb
add
jbe
fldt
add
xbegin
clc
jns
add
pop
push
add
adc
xchg
in
jbe
ret
clc
pop
lret
add
out
btc
fdiv
inc
clc
cs
jl
clc
jbe
add
std
enter
cmp
add
test
push
add
test
mov
clc
ret
clc
lret
loope
stos
fdiv
and
add
mov
dec
adc
add
clc
jne
dec
in
rcr
cmp
lahf
xbegin
sbb
clc
jge
nop
add
add
xchg
lods
popa
add
jo
add
or
add
clc
xor
add
clc
mov
push
and
add
sahf
adc
add
sar
clc
lock
mov
popf
iret
xchg
push
add
clc
negl
push
test
sub
mov
add
add
add
xchg
stos
gs
ficoms
add
push
test
clc
jae
add
clc
lods
sbb
clc
add
fs
dec
ret
loope
loop
lret
clc
inc
add
sbb
add
cmp
into
sub
clc
in
xchg
adc
loope
cs
clc
sub
test
and
add
outsb
in
jp
or
mov
stos
insb
xchg
pusha
add
insl
sub
in
dec
lret
call
ja
clc
das
lahf
test
push
loopne
add
add
out
outsb
mov
push
dec
ds
mov
mov
add
leave
cmp
add
add
or
lret
pop
mov
lods
popf
ss
add
sub
clc
xchg
bound
add
mov
mov
sbb
pop
lcall
pop
cmc
out
dec
mov
fdivs
add
rcrl
leave
cld
lock
clc
out
mov
loopne
aaa
sbb
inc
add
clc
insb
pop
xchg
jmp
jmp
sub
mov
push
fs
in
push
push
clc
in
xchg
scas
xchg
sub
lret
dec
hlt
lcall
lock
add
movsl
clc
in
repz
or
push
add
jne
add
leave
mov
inc
add
mov
cmp
outsb
mov
and
xchg
imul
or
popf
inc
clc
fldt
cltd
dec
cmp
clc
pop
aad
xor
add
jmp
clc
xchg
add
ja
xor
imul
clc
scas
outsl
push
add
lods
and
add
sbb
clc
mov
clc
repz
clc
cmp
jmp
add
shrl
xchg
fld
clc
mov
add
or
out
mov
clc
stos
jl
clc
adc
clc
push
clc
inc
add
ret
xchg
xchg
fisubs
add
mov
add
iret
pushf
cmp
inc
clc
xor
insl
lods
aam
clc
incb
jle
add
mov
stos
jp
mov
sub
add
mov
lahf
mov
in
imull
clc
adc
add
clc
push
add
push
insb
pushf
and
ds
clc
jp
xchg
cmp
push
mov
cmp
add
add
lahf
int
add
push
or
push
mov
clc
mov
clc
push
add
and
add
clc
loop
mov
dec
xor
add
add
dec
sbb
clc
sub
mov
fistpll
clc
mov
add
shrb
xchg
in
insb
cmc
aam
add
xchg
into
loope
outsb
movsb
clc
push
jl
add
add
clc
cmp
jg
aas
jns
adc
add
add
dec
jnp
adc
clc
sub
incb
add
pop
clc
repz
and
add
ja
clc
pop
push
mov
sarb
add
cmpsl
clc
arpl
add
clc
mov
add
jae
add
add
push
jmp
out
pop
clc
xor
add
mov
clc
inc
clc
cmp
xchg
cli
mov
clc
xor
add
dec
jecxz
or
mov
add
daa
clc
das
rcll
clc
insl
adc
add
cmp
mov
push
mov
mov
add
bound
add
clc
or
add
add
add
add
mov
clc
xor
add
loopne
pop
add
add
jo
add
enter
imul
fs
pop
push
add
cmp
fisttps
mov
arpl
add
imul
add
mull
add
add
cld
popl
add
clc
clc
outsb
rcrl
add
out
add
call
add
popa
add
mov
leave
mov
add
clc
rdtsc
add
push
add
es
sub
xchg
push
clc
sub
mov
add
cs
add
and
or
add
push
push
add
bound
add
add
clc
fldl
sbb
add
cmpsb
clc
icebp
add
add
pusha
add
adc
add
pop
clc
or
out
aaa
repnz
cwtl
inc
clc
xchg
push
imul
add
xchg
fcmovnu
popf
dec
fldl
pop
xchg
adc
add
insl
stc
jns
test
cli
loope
and
add
add
clc
dec
outsl
sbb
pop
fistpll
mov
outsb
cld
add
add
xchg
aaa
and
add
mov
add
test
add
sub
rcrl
inc
clc
cmp
out
lret
clc
mov
pop
mov
cmp
clc
xchg
in
sar
repnz
int
inc
add
in
xchg
push
data16
aad
xchg
mov
clc
aam
xchg
or
clc
lock
push
xor
add
test
cmc
int3
sar
imul
fdivrp
and
add
xchg
sbb
add
call
add
mov
sbb
cwtl
ficoml
add
clc
pop
adc
add
ja
xchg
inc
add
inc
clc
sub
in
lahf
xchg
jecxz
pop
int3
incb
adc
add
pushf
sar
insl
in
lea
movsl
clc
loope
mov
add
xor
add
clc
mov
sbb
pop
imul
push
pop
mov
leave
adc
add
clc
shll
sete
push
add
adc
add
cld
cmp
push
clc
xor
add
clc
or
add
loopne
aaa
ret
sbb
add
sub
mov
clc
push
fs
loop
pop
clc
std
loope
ss
repnz
add
add
add
imul
mov
inc
clc
cwtl
mov
add
jg
clc
xchg
mov
xchg
or
add
add
leave
cmp
cwtl
popa
add
inc
add
jne
clc
fnstenv
cmp
jne
clc
sbb
adc
clc
push
push
or
cmp
loope
stc
ret
clc
fadd
clc
repz
cmp
and
add
ja
stc
gs
or
and
add
sbb
inc
add
jg
ja
add
xor
add
add
adc
add
out
fmull
imulb
add
gs
mov
mov
add
sub
mov
add
add
fwait
and
clc
inc
add
add
shrb
jl
jno
add
sbb
icebp
or
test
xor
add
clc
xchg
mov
clc
mov
add
push
js
mov
cmp
xor
add
add
xbegin
mov
add
outsl
mov
lock
dec
lods
clc
int3
push
fisubrs
add
jecxz
sub
out
xchg
add
add
mov
clc
jg
push
psrlq
clc
int3
mov
adc
add
dec
shrl
lcall
sbb
dec
mov
fdivr
cltd
sar
jg
clc
aaa
mov
add
mov
add
sbb
cmp
add
add
adc
add
add
xchg
sub
jb
add
jmp
add
clc
daa
clc
clc
sbb
sbb
lcall
xchg
enter
add
jbe
clc
sub
push
inc
clc
push
add
or
lret
mov
call
clc
push
add
stc
lret
jmp
clc
roll
dec
loop
ds
inc
add
imul
add
movsl
clc
pop
or
sbb
add
ljmp
push
cmp
add
dec
mov
adc
inc
clc
imul
add
push
add
xor
add
add
jo
add
clc
adc
add
add
inc
clc
mov
stos
xor
add
cwtl
sub
add
inc
add
cmp
add
or
add
push
add
sti
mov
sbb
or
add
add
add
mov
mov
fnstcw
or
xlat
iret
aam
leave
add
add
bound
add
push
add
push
mov
pop
stc
addr16
sar
add
xor
add
mov
push
movsl
clc
pop
ja
mov
clc
test
mov
mov
clc
out
add
add
add
insb
out
aaa
movsb
clc
xchg
cmp
scas
movsl
clc
or
sbb
mov
cmp
add
cmp
leave
mov
das
xor
sub
sbb
clc
and
add
sub
fnstcw
add
clc
cmp
adc
push
add
sbb
lock
sti
sti
jb
add
xchg
fiadds
add
add
outsb
or
add
loop
lahf
gs
divl
add
add
jl
sbb
add
adc
add
adc
cmpsl
clc
sub
add
call
clc
ds
xbegin
add
clc
push
add
add
scas
sahf
je
cld
fs
outsl
in
pop
xor
add
fildl
add
mov
add
push
je
dec
scas
lock
daa
clc
dec
stos
repz
clc
stos
hlt
fsubs
ljmp
and
add
push
icebp
mov
cmpsl
clc
pusha
add
pop
push
clc
mov
xchg
or
sub
jge
lahf
fs
sbb
xor
xbegin
clc
test
xchg
jmp
incb
clc
sbb
clc
xor
cmp
inc
add
in
test
ljmp
ret
clc
push
mov
ficomps
lcall
add
push
ret
push
outsl
sbb
sub
mov
or
fcoms
sahf
gs
or
mov
dec
sbb
mov
and
cmp
clc
pop
sbb
test
add
ds
clc
popf
xor
gs
iret
jbe
scas
in
ret
cmpsl
clc
fisubrs
sub
aam
push
add
dec
movsb
clc
cld
call
dec
mov
add
jb
add
clc
mov
popa
add
push
mov
push
clc
push
add
enter
add
repz
sub
loope
fistpll
lret
clc
gs
test
cmp
or
rcrb
jmp
push
cmc
pop
imul
add
fs
pop
mov
sbb
cmpsl
clc
xchg
cmpsb
clc
sub
jo
add
add
outsl
test
and
add
jl
add
repz
mov
xchg
jge
cmp
xchg
cmpsb
clc
movsl
clc
jae
add
push
add
push
cmp
sub
inc
add
loopne
shll
sbb
pop
sbb
clc
mov
mov
test
cld
mov
clc
add
add
test
jle
xbegin
add
push
add
xor
movsb
clc
filds
add
dec
gs
sbb
pop
push
inc
add
pop
bound
add
fidivs
or
add
stc
daa
clc
shll
lret
cmp
mov
pop
add
add
add
mov
push
mov
arpl
add
mov
clc
fs
aam
shrb
adc
add
cmp
stc
cmp
mov
fwait
ljmp
call
dec
add
add
inc
add
jl
repnz
clc
sbb
clc
cmp
push
cld
int3
xchg
jb
add
stc
std
inc
add
mov
clc
in
mov
lods
push
out
sub
add
clc
das
imul
sub
loop
jmp
shlb
add
bound
add
add
clc
movsl
clc
xor
push
shll
stos
stos
lret
rcrl
ret
clc
add
add
clc
jmp
clc
out
and
add
ret
clc
stc
pop
jle
clc
in
fmull
gs
add
outsb
lcall
cmp
mov
add
add
in
add
add
add
clc
adc
add
add
xchg
vandps
add
and
add
add
and
pop
not
jp
add
add
add
pop
enter
xor
inc
add
mov
mov
add
clc
movsl
clc
mov
jb
add
sarl
clc
jle
xchg
inc
clc
xchg
push
jge
adc
add
ljmp
add
loope
loopne
cltd
repz
inc
clc
bound
add
dec
jb
add
clc
cld
iret
xor
add
push
xchg
fsub
clc
ret
xchg
jne
clc
mov
add
leave
outsb
xchg
nop
cs
xchg
lahf
aas
stc
cmp
out
and
add
pop
hlt
stos
xchg
adc
cmp
sub
adc
add
clc
test
ljmp
idiv
mov
sub
stos
mov
xchg
sbb
clc
xor
add
jle
add
push
xchg
mov
popf
add
sub
and
add
iret
cmpsl
clc
xor
add
clc
inc
add
add
add
sar
cmp
push
inc
add
negb
mov
clc
movsl
clc
test
clc
xor
add
data16
and
icebp
out
mov
clc
in
cmp
xor
cmp
popf
fcomp
mov
add
sub
mov
xlat
mov
push
add
in
jne
fnstsw
add
add
insl
cmc
mull
clc
data16
or
push
add
js
jbe
call
mov
dec
adc
clc
lock
outsb
jo
add
add
in
mov
add
gs
ss
cmp
pop
clc
xor
add
ds
or
add
scas
pop
pusha
add
add
add
imul
adc
add
clc
mov
clc
jecxz
outsb
mov
lea
dec
aad
fwait
stos
dec
sub
hlt
dec
push
add
in
mov
clc
imul
clc
cmp
pop
movsl
clc
push
dec
in
movsl
clc
jmp
sbb
clc
jbe
shll
loope
inc
add
test
xlat
movsb
clc
cmp
sub
mov
xor
outsb
rol
clc
in
sub
insl
loop
cmp
xor
add
clc
jg
push
jnp
push
xchg
test
cmpsb
clc
in
fwait
dec
imul
adc
icebp
add
jge
add
push
add
inc
clc
addr16
repz
xchg
adc
add
or
clc
fldenv
scas
pop
jg
mov
pop
adc
add
mov
movsb
clc
dec
cmp
sbb
add
inc
add
sub
add
cmp
loop
enter
ljmp
and
add
clc
jae
add
clc
lods
hlt
data16
mov
divl
add
xor
add
add
ret
jmp
inc
clc
ja
es
cmp
dec
fstps
add
into
stos
xabort
jmp
sbb
fistpll
pop
xchg
jmp
sbb
int
inc
add
sbb
pop
jmp
jl
stc
das
pop
pop
das
mov
sbb
add
jmp
add
js
mov
push
clc
mov
clc
bound
add
cmc
lret
add
sbb
clc
test
push
add
mov
add
xchg
fs
outsb
xor
add
data16
mov
add
clc
cs
add
aad
jne
dec
lods
xor
add
cmp
enter
add
adc
mov
gs
pop
icebp
jg
clc
xchg
and
add
jne
ljmp
ss
add
mov
inc
clc
bound
add
fwait
add
dec
mov
cmc
xor
add
jnp
add
clc
jmp
add
pop
push
add
sarl
fs
outsb
test
shlb
add
add
add
dec
dec
shr
aad
adc
add
movsb
clc
and
add
pop
inc
clc
aad
adc
add
clc
out
dec
mov
das
push
add
mov
cwtl
sbb
or
add
hlt
nop
call
xchg
push
and
add
lea
not
pop
push
and
add
pop
mov
dec
sbb
add
dec
rol
clc
mov
cmp
add
push
aad
jae
add
lods
shll
add
clc
cmc
icebp
jb
add
mov
clc
jl
push
data16
por
int
adc
add
clc
scas
push
and
call
push
add
nop
sbb
loopne
mov
cltd
cwtl
add
add
clc
dec
dec
fldt
clc
xchg
ret
clc
gs
push
jl
sbb
jo
add
clc
jns
clc
cwtl
sbb
adc
add
in
ret
clc
and
add
jb
add
mov
adc
add
mov
xchg
add
add
clc
inc
clc
mov
clc
fistps
add
dec
mov
add
sub
fninit
clc
xchg
mov
add
jo
add
mov
cld
aaa
jmp
sbb
bound
add
push
clc
dec
mov
cmp
in
mov
clc
add
clc
daa
clc
xchg
mov
clc
loop
lret
jne
mov
xchg
or
add
adc
leave
jmp
ljmp
daa
clc
add
add
add
sar
in
test
push
xbegin
loopne
mov
test
inc
clc
push
clc
je
mov
test
xchg
out
push
or
add
clc
or
mov
jnp
sub
clc
rclb
add
or
mov
clc
cmp
add
inc
clc
inc
clc
jae
add
cmp
aad
sub
clc
push
or
clc
cmp
xor
add
gs
push
inc
clc
loope
daa
clc
xchg
sar
xor
inc
add
lret
js
clc
out
sbb
cmp
decl
fstl
add
stos
inc
clc
mov
mov
clc
or
add
or
cmp
sbb
clc
ret
lods
push
mov
stos
js
stos
xchg
fs
fimull
clc
add
cmp
add
add
xchg
push
add
in
jge
inc
add
adc
add
dec
xchg
sub
dec
sub
sub
mov
clc
push
add
cmpsl
clc
mov
sar
or
jbe
add
push
add
push
cmp
dec
imul
clc
fs
jb
add
add
mov
cmp
jns
clc
movsb
clc
out
mov
decl
mov
clc
cs
stos
ja
clc
out
cmpsl
clc
outsl
clc
inc
clc
fistps
inc
add
mov
jecxz
mov
sarl
add
cmp
clc
jbe
clc
or
clc
loopne
dec
mov
clc
es
mov
adc
rol
clc
leave
jl
sarb
push
fldcw
inc
add
ficoms
add
push
add
and
add
mov
add
jl
popf
sahf
mov
imul
push
clc
fisubs
xabort
jg
xchg
data16
es
aad
in
aam
xor
add
and
add
addr16
cmp
add
insl
lea
clc
add
xchg
std
dec
rorl
shr
lock
clc
lock
xor
add
add
stos
jmp
clc
xchg
mov
jecxz
cmp
pusha
add
pop
pop
add
iret
dec
or
add
dec
inc
add
mov
mov
add
clc
push
dec
testl
jbe
fdivrs
push
xchg
adc
add
fsubrl
int3
movsl
clc
pop
pop
cs
mov
clc
out
rcrb
clc
inc
clc
mov
add
sub
clc
insl
xchg
cltd
mov
enter
jbe
add
or
add
ljmp
bound
add
and
add
xchg
daa
clc
inc
add
sub
ljmp
clc
rcl
pop
enter
rcll
mov
mov
pop
cmp
int
jb
add
add
xor
add
dec
or
data16
xchg
push
jle
and
mov
mov
cmp
add
and
out
sbb
push
sets
add
xbegin
ja
gs
outsb
clc
xbegin
lret
mov
clc
mov
rcpps
add
clc
popa
add
jno
add
in
scas
cld
scas
adc
add
jge
and
add
bound
add
insl
adc
add
add
bound
add
leave
imul
sub
clc
push
add
cmp
clc
push
sub
add
mov
add
and
add
clc
fucomip
test
pop
xchg
sti
push
clc
das
lcall
stos
jecxz
mov
clc
xor
add
clc
cmp
sub
daa
clc
pop
add
and
add
add
rcl
stos
test
or
clc
inc
clc
gs
insl
xchg
mov
add
add
clc
jp
push
mov
add
mov
clc
add
add
dec
pop
repz
pop
jl
icebp
lock
ljmp
mov
pop
pop
cmpsl
clc
cmp
scas
pop
push
clc
pop
and
add
add
clc
xchg
cmpsl
clc
jno
add
add
lods
mov
call
sti
xchg
push
add
xabort
aam
cmc
ja
clc
mov
cltd
fbstp
add
add
pop
scas
push
scas
mov
clc
rcrl
std
adc
mov
sbb
scas
fistpl
clc
test
fdivr
jmp
add
pop
lret
clc
psubd
mov
fcompl
pop
cmp
add
call
inc
clc
sahf
mov
add
inc
clc
mov
aaa
mov
add
ret
clc
jmp
cmp
xor
add
aaa
cmp
dec
mov
cs
scas
leave
mov
add
add
inc
clc
xchg
cmp
add
data16
or
clc
rol
clc
stc
into
loopne
mov
mov
clc
mov
stos
jle
gs
fwait
push
stos
call
add
jne
popa
add
mov
and
add
lret
xabort
clc
jl
jecxz
adc
add
add
jnp
clc
or
clc
mov
repz
push
mov
mov
cmp
clc
pop
idivb
add
cmc
sbb
xor
pop
nop
xor
add
clc
lret
xchg
xchg
mov
add
clc
stos
mov
dec
pop
test
movsl
clc
das
push
shrb
clc
aam
clc
shl
clc
lret
and
add
or
fnsave
popa
add
lods
cwtl
push
add
inc
add
add
add
clc
out
sub
jle
ja
out
or
lret
ss
push
add
cld
mov
sahf
mov
insl
imul
clc
jp
mov
sub
add
sub
pop
cmp
sbb
clc
or
add
mov
pop
pusha
add
scas
stc
add
add
clc
adc
add
xchg
add
mov
mov
add
in
mov
clc
mov
sarb
fiadds
push
jp
pop
mov
jbe
lahf
sub
add
aas
push
clc
xor
sub
xor
or
ja
mov
clc
sbb
imulb
popl
out
xchg
aas
cmpsl
clc
faddl
add
and
add
add
scas
into
pop
clc
mov
fildl
iret
pusha
add
pop
rorl
sahf
xchg
dec
inc
add
mov
mov
and
add
outsl
mov
cld
sbb
jae
add
clc
mov
clc
gs
dec
pop
insb
repz
and
add
fnsave
xchg
mov
sti
rolb
add
push
je
dec
push
adc
add
gs
repz
jmp
clc
std
dec
pop
jo
add
sub
clc
daa
clc
inc
add
int3
es
out
and
mov
cmp
out
ss
xchg
out
mov
mov
add
ds
clc
je
jg
push
data16
sub
clc
xlat
imul
cmp
clc
mov
cli
jae
add
and
add
fmuls
clc
das
ds
cmp
dec
into
dec
xbegin
sbb
jno
add
pop
clc
add
cmp
xchg
pop
div
cmc
lods
lahf
sti
insl
cmpsb
clc
mov
push
add
out
sar
mov
add
clc
push
sahf
jle
clc
test
test
ror
scas
add
add
clc
push
add
aam
dec
stc
jg
cmp
add
sar
clc
cmp
push
cwtl
xor
add
add
and
add
clc
xchg
rolb
add
daa
clc
inc
add
pushf
es
aad
mov
clc
sbb
clc
inc
add
ret
mov
clc
mov
inc
add
stc
jns
sub
add
lods
add
add
lods
lahf
mov
cwtl
nop
fisttpll
stc
roll
pop
inc
clc
dec
mov
mov
clc
xlat
lods
lods
push
pop
pop
adc
loopne
into
mov
add
into
xbegin
xchg
push
pop
pop
into
dec
mov
cltd
fsubs
add
add
xabort
cli
inc
add
scas
xchg
pop
jb
add
clc
sar
pop
clc
mov
test
das
inc
add
sub
xor
add
clc
push
mov
add
addr16
into
and
add
mov
xor
add
jmp
add
rolb
add
int3
in
dec
or
clc
cmpsl
clc
int3
and
clc
mov
add
add
xchg
aad
clc
pop
jge
fwait
shl
clc
jne
clc
aad
lret
push
cs
cld
aaa
enter
add
clc
mov
add
enter
add
clc
pop
call
in
mov
lock
xchg
mov
jb
add
add
clc
mov
add
aas
sub
jne
cltd
xchg
pop
sbb
add
clc
cmpsb
clc
int3
int3
xor
pop
and
add
pop
mov
jne
dec
add
mov
cwtl
inc
add
clc
ror
jne
push
xor
add
add
out
dec
negb
inc
add
mov
add
xor
clc
sar
ret
clc
mov
lods
ret
clc
mov
cs
insl
xor
add
loope
testl
add
call
add
rorl
cmp
mov
add
mov
popa
add
dec
sar
das
loop
pop
clc
data16
push
and
mov
sub
outsl
lahf
mov
adc
add
movsl
clc
push
inc
add
repnz
add
xor
add
add
mov
cmp
fwait
sbb
clc
imul
mov
pop
add
add
into
adc
clc
loope
je
add
ja
mov
xlat
ficoml
clc
add
add
gs
sub
xchg
stos
movsb
clc
xchg
out
push
push
pop
sar
add
dec
mov
add
sub
cmp
ds
mov
clc
jae
add
jne
pop
inc
add
ret
clc
inc
add
aad
pusha
add
jmp
add
sub
cmpsb
clc
xchg
ljmp
clc
push
push
add
add
add
add
push
jns
cmpsl
clc
sahf
pop
inc
clc
int3
outsb
pop
clc
lods
mov
jmp
lahf
fdivr
pop
cmp
adc
add
dec
out
mov
xbegin
sbb
add
repnz
lret
add
cmp
add
push
add
inc
add
sub
clc
mov
clc
or
in
and
add
cmp
clc
imul
mov
pop
leave
movsl
clc
xor
clc
lock
jb
add
pop
xor
add
cmpsl
clc
jo
add
ret
clc
es
cmp
hlt
jne
pop
out
in
clc
movsl
clc
cmp
clc
pop
divb
sarl
je
flds
add
imulb
jmp
outsl
nop
push
mov
adc
add
dec
fnstenv
push
aaa
lahf
mov
mov
xchg
aas
cmp
clc
in
and
add
mov
push
add
jae
add
and
add
add
mov
add
sbb
addr16
pop
or
add
mov
icebp
fst
pop
aaa
imul
jne
clc
mov
and
add
dec
cmp
fldcw
pop
lahf
ret
clc
cmc
mov
jbe
mov
xor
mov
mov
clc
cmp
clc
mov
dec
es
loope
idiv
outsb
in
and
mov
clc
xor
add
jns
clc
xchg
jo
add
idivb
je
sub
xchg
cmp
jle
nop
inc
clc
xchg
sbb
stc
vmaxps
mov
add
sbb
add
mull
add
jl
sbb
dec
loopne
adc
clc
inc
clc
pop
dec
imul
mov
clc
jmp
xchg
scas
xchg
lcall
clc
ret
clc
xchg
lahf
fidivs
sbb
mov
clc
imul
sbb
clc
scas
xchg
sub
add
sub
sbb
xchg
lret
nop
xor
add
sbb
cmp
clc
ljmp
sar
clc
xchg
addr16
mov
clc
int3
xor
add
adc
add
jb
add
add
xlat
pop
adc
adc
add
ds
clc
test
ret
clc
rorl
lret
or
add
and
add
pop
aam
push
clc
dec
jmp
mov
clc
mov
cmp
clc
inc
add
cltd
push
add
pop
pop
in
int
clc
leave
push
test
mov
add
push
or
sahf
sti
sbb
sti
xor
movsb
clc
repnz
add
adc
scas
xor
add
clc
or
add
div
xchg
popa
add
rorb
loope
pop
enter
fimuls
sti
test
pop
clc
mov
push
dec
stos
cmp
xor
adc
add
sbb
inc
add
cmpsb
clc
scas
insb
pop
pusha
add
pop
jp,pt
add
add
add
pop
repz
add
add
clc
pop
rolb
and
xchg
cltd
scas
jmp
add
repz
add
jns
clc
std
pop
inc
add
negb
addr16
es
sub
lahf
cmpsb
clc
dec
dec
dec
or
daa
clc
push
add
test
sub
xor
jae
add
imulb
stos
or
add
imul
push
lock
add
rorl
add
sub
clc
sub
or
clc
mov
out
sbb
sbb
clc
decl
inc
clc
jno
add
cli
adc
push
jnp
add
add
add
cmp
lcall
clc
jg
jecxz
xchg
add
add
lret
daa
clc
cltd
push
icebp
add
add
in
xchg
clc
xbegin
cltd
gs
cs
insl
and
add
clc
sbb
mov
add
movsb
clc
add
add
jae
add
repz
or
xor
add
call
mov
stc
into
add
add
add
clc
insb
sub
test
push
cmp
jp
add
and
add
pop
data16
mov
push
insb
mov
sar
push
xchg
dec
mov
insb
mov
ja
add
add
add
das
adc
cmp
repz
inc
clc
fldl
add
shll
sar
xor
add
inc
add
imul
in
icebp
out
cmp
add
fisubs
clc
sub
arpl
add
dec
clc
sar
push
jge
add
and
add
fcompl
nop
insb
cmp
clc
pop
push
add
inc
add
notl
add
pop
push
add
sub
popa
add
pop
clc
sarl
sbb
int
push
clc
mov
clc
or
daa
clc
sub
lret
leave
jne
pushf
xor
add
add
add
testl
cmpsl
clc
loopne
pop
push
or
add
fldz
jne
inc
clc
mov
dec
and
add
add
add
sbb
sbb
xor
add
fcompl
data16
cmp
or
clc
sar
xor
add
add
cmp
loope
sbb
add
cmp
cmp
jecxz
imul
add
cmp
aaa
cmp
stc
sti
lcall
add
and
cli
xchg
rcrb
stc
sub
out
push
clc
mov
arpl
add
jle
clc
xor
add
clc
enter
clc
lcall
sub
out
je
or
add
add
push
dec
pop
ret
clc
add
add
push
add
out
aas
push
and
sahf
pusha
add
stos
xchg
mov
inc
clc
in
arpl
add
push
fldenv
add
outsb
push
inc
clc
scas
mov
mov
push
inc
add
test
add
test
lcall
cmpsl
clc
sbb
aaa
sarb
sar
jmp
jnp
add
dec
in
mov
das
add
add
add
add
add
add
lods
cmp
aad
clc
and
add
mov
pop
std
pop
repnz
clc
imul
clc
test
push
add
into
jge
cmp
push
add
pop
hlt
mov
add
movsb
clc
push
and
add
push
sar
or
fisttps
add
xchg
leave
fldenv
clc
js
add
pop
lcall
mov
push
inc
clc
in
mov
inc
add
mul
clc
push
add
aas
lods
jecxz
push
add
and
add
clc
or
clc
fdiv
xchg
inc
add
je
loop
xchg
mov
clc
js
mov
lods
js
lcall
fcmovne
data16
in
mov
lock
clc
sub
insb
sbb
pop
clc
add
insb
sar
add
push
add
sbb
inc
clc
shlb
add
sbb
cmp
clc
dec
push
shll
add
sar
leave
cwtl
jbe
xchg
push
stos
mov
adc
in
fbld
add
clc
call
clc
jle
pusha
add
rcrb
outsb
mov
clc
jge
sahf
lock
std
sub
clc
cmp
mov
add
in
inc
clc
mov
pop
lea
clc
aaa
sbb
clc
jp
loop
sub
mov
mov
insl
cmpsb
clc
fidivl
jnp
clc
in
in
pop
push
add
push
cmc
mov
ja
fs
xabort
and
add
add
xchg
aas
inc
clc
inc
add
mov
push
ss
clc
loopne
ja
iret
xlat
addr16
mov
clc
push
add
dec
adc
add
pop
push
add
mov
fst
or
cmp
cwtl
pop
and
xchg
imul
clc
test
mov
stos
gs
xor
icebp
mull
push
clc
mul
clc
mov
dec
stos
cmp
mov
xchg
mov
add
aam
jno
add
add
in
xchg
pushf
jno
add
popf
pop
aam
shlb
cmp
stc
sub
add
mov
movsb
clc
and
add
clc
add
add
jl
rorb
pop
push
ds
push
add
push
jne
pop
int
in
movaps
jne
push
clc
jl
push
pop
clc
pop
jae
add
ljmp
add
repz
clc
rcrb
xbegin
clc
pop
push
and
add
adc
fildll
fwait
clc
cld
xor
add
cmp
clc
in
scas
cltd
add
clc
cmpsb
clc
push
popa
add
dec
push
xchg
in
rolb
dec
js
sub
add
add
xchg
and
add
movsb
clc
add
add
adc
add
add
add
add
add
push
xor
in
mov
jb
add
add
add
in
inc
clc
xchg
cmp
clc
xlat
jp
mov
jns
add
push
mov
clc
adc
add
add
icebp
xchg
cmp
adc
clc
pop
sahf
imul
clc
add
mov
jne
sbb
adc
add
clc
test
xchg
push
clc
sub
clc
mov
divl
add
cwtl
or
add
jns
pop
fwait
aad
lret
lods
sar
add
sub
clc
cmp
xor
jl
clc
das
jbe
add
jno
add
add
in
aad
rcll
cmpsl
clc
jg
mov
leave
in
stc
mov
inc
add
rol
clc
fs
pop
mov
push
gs
out
or
push
add
cld
sub
clc
pop
adc
add
neg
sahf
iret
mov
and
add
cltd
xor
add
cmc
xor
clc
mov
add
lcall
int
jne
sarb
fildll
adc
add
clc
jne
add
gs
fists
xor
xchg
jmp
add
pop
mov
daa
clc
inc
add
sbb
clc
outsb
call
repz
add
xchg
pop
clc
mov
clc
cmp
or
clc
cs
lcall
add
add
push
add
inc
add
mov
add
pop
fwait
adc
add
add
testb
pusha
add
lods
push
fidivs
lea
add
add
mov
add
test
clc
jecxz
sar
add
add
addr16
xchg
xor
je
add
xchg
lcall
clc
mov
clc
mov
add
mov
in
fmull
or
clc
std
inc
clc
sbb
stos
xlat
in
cld
addr16
stos
add
add
in
int3
arpl
add
lods
mov
add
add
add
xchg
xor
add
sahf
push
add
aaa
mov
add
bound
add
add
add
mov
push
in
adc
add
inc
add
mov
xchg
fidivl
clc
sub
add
out
data16
or
inc
clc
jb
add
jp
xchg
daa
clc
jp
push
add
pop
clc
mov
arpl
add
pop
cmp
sahf
in
fdivs
or
icebp
jo
add
fs
fwait
mov
clc
test
sub
cmp
shr
popa
add
jecxz
cli
jbe
clc
fnstenv
insb
bound
add
clc
push
out
and
add
iret
jb
add
push
imul
add
std
push
stos
outsb
cld
lret
add
jo
add
push
add
cmpsl
clc
icebp
clc
jb
add
clc
xchg
xor
add
std
xor
add
add
stos
cld
movsb
clc
rol
clc
adc
push
sahf
xchg
scas
jle
add
je
jg
mov
fsubr
push
add
cmp
popf
aaa
insb
stos
push
loopne
push
aas
sub
scas
jl
imul
clc
sub
push
add
rorb
sub
jg
cmc
cwtl
sar
push
jno
add
rorl
add
mov
clc
loope
loopne
pop
ja
clc
xbegin
push
insl
push
aad
aaa
xor
add
xlat
mov
clc
and
add
clc
ud1
add
cmp
jl
clc
or
add
clc
sar
jle
clc
fdivr
sbb
add
repnz
add
loopne
jl
add
out
xchg
dec
aaa
mov
clc
cmp
add
sbb
fsubrl
dec
mov
pop
test
xor
add
cmp
lea
addr16
cmp
clc
jecxz
outsl
mov
clc
cmp
jbe
jp
pop
bound
add
add
pop
sti
fnstcw
add
fldcw
cmp
clc
cmp
xchg
adc
add
sbb
add
cmp
and
add
mov
add
pop
outsb
jno
add
mov
add
outsl
or
repz
add
js
add
inc
clc
fsubp
clc
pop
and
add
enter
pop
lcall
popf
popf
fs
sub
add
sub
xor
add
sub
add
lea
adc
add
imul
clc
mov
ret
cmp
add
add
cwtl
ret
pusha
add
mov
clc
shlb
std
test
clc
loope
aas
clc
decl
jg
xor
cli
movsb
clc
xchg
aaa
dec
adc
add
mov
in
jbe
adc
clc
sub
test
and
add
adc
add
fildl
hlt
xchg
xchg
lock
push
add
xchg
mov
clc
jmp
add
add
push
dec
push
data16
in
sbb
sbb
clc
fsubs
add
xchg
mov
mov
add
dec
aas
daa
clc
lods
jmp
add
ret
clc
or
jmp
and
clc
and
add
push
add
in
pushf
jecxz
mov
add
int3
jge
add
xor
add
sub
clc
out
xlat
aaa
int3
add
add
add
call
add
xor
add
mov
clc
aad
clc
imul
fnstenv
clc
jle
push
sub
clc
adc
add
fucom
clc
mov
aam
repz
add
xor
add
out
lods
lods
xchg
arpl
add
clc
mov
adc
add
neg
js
lahf
dec
data16
inc
clc
mov
jns
xchg
jmp
mov
xor
lods
push
clc
cld
xchg
pushf
add
add
add
cmpsb
clc
push
push
push
xbegin
pusha
add
mov
xor
add
in
cmp
scas
data16
pop
sub
pop
push
add
movsl
clc
in
stc
push
sar
sbb
clc
lock
mov
xor
add
clc
xchg
out
sti
in
mov
add
adc
add
xor
jno
add
sub
adc
add
clc
scas
std
sub
ja
cmp
sub
scas
pop
mov
and
add
add
hlt
test
clc
pop
clc
pop
xchg
fs
iret
stos
lahf
pop
loope
ja
mov
or
clc
cmc
repnz
inc
clc
cs
arpl
add
jg
aad
add
inc
clc
divb
insb
out
movsl
clc
dec
ljmp
ljmp
mov
clc
fs
jbe
clc
insb
pop
clc
enter
adc
add
add
outsb
pop
out
insb
jecxz
sub
clc
inc
clc
add
add
in
outsb
mov
int3
or
add
loope
mov
add
daa
clc
pop
lea
bound
add
pop
push
gs
mov
daa
clc
loope
pushf
sub
sbb
add
shlb
add
cmp
cmp
add
repz
dec
adc
add
push
clc
mov
fbld
add
clc
cmp
xor
add
clc
in
and
add
pop
lret
add
xabort
add
lcall
dec
mov
iret
sti
cmp
maskmovq
notl
mov
add
inc
clc
inc
add
ja
clc
pop
add
into
in
jbe
int3
xor
add
xchg
loopne
nop
loopne
push
clc
sbb
sbb
add
mov
test
add
rclb
pushf
idiv
cmp
ficoms
inc
clc
adc
add
imul
clc
fxch
bound
add
cmp
add
adc
add
add
lret
mov
or
xchg
inc
add
loop
cld
jle
sub
or
enter
out
mov
mov
add
or
shll
aam
fs
push
pop
jnp
add
cmp
negb
cmc
ja
sbb
xor
add
stc
xchg
lock
and
add
ficoml
add
clc
push
clc
into
enter
push
pusha
add
sub
add
mov
popl
clc
dec
cmc
data16
cmp
add
sub
add
lcall
test
pop
pop
clc
lea
sbb
clc
je
add
add
add
or
cltd
mov
gs
scas
sar
cmc
dec
jge
push
mov
add
lods
ret
lahf
jnp
clc
inc
clc
xlat
jmp
scas
jmp
clc
xor
push
cs
enter
and
add
pop
imul
out
add
add
ret
clc
cmp
clc
pusha
add
cmp
enter
clc
add
add
dec
jp
pushf
cmp
clc
fucom
clc
jge
movsb
clc
cmpsb
clc
jae
add
add
cmc
out
adc
add
add
jnp
clc
and
add
add
iret
test
mov
mov
add
stos
addr16
js
clc
shlb
cmp
sbb
sbb
imul
gs
add
nop
lcall
clc
sbb
leave
push
js
clc
in
mov
add
clc
fwait
cmovbe
test
dec
clc
or
add
xor
add
jge
ds
into
lret
std
fwait
pushf
cmp
loop
xchg
add
mov
add
add
pushf
fnsave
add
add
ret
clc
aad
out
sub
fucomi
xchg
inc
clc
sub
push
add
push
add
dec
adc
add
jg
mov
xor
add
inc
clc
dec
fwait
mov
clc
into
add
add
add
fcmovbe
call
add
add
add
push
add
cltd
pusha
add
stc
inc
clc
lea
clc
jbe
sub
xor
add
clc
jl
popa
add
xor
add
fiaddl
mov
std
lods
mov
mov
add
cmpsl
clc
dec
and
add
add
add
mov
lods
mov
add
out
aam
sbb
cmpsb
clc
and
add
add
add
clc
mov
add
fsts
adc
add
sarb
scas
mov
hlt
ds
clc
jbe
sub
clc
xchg
jo
add
call
add
mov
add
pop
sbb
stos
xor
add
in
jns
push
clc
push
mov
scas
adc
add
pop
push
jl
mov
es
data16
call
add
aas
addr16
lods
cli
aad
insl
cmp
add
fnsave
xor
add
add
popf
insl
pop
clc
fdivs
xbegin
add
inc
add
cmpsb
clc
dec
jp
cmp
add
xor
add
inc
add
dec
roll
add
clc
in
lods
mov
clc
xor
push
mov
clc
scas
sub
shrl
test
clc
aam
repz
bound
add
sbb
add
nop
push
add
fmull
clc
bound
add
mov
mov
or
sbb
and
add
adc
stc
sub
sbb
add
into
in
js
cmp
clc
fsts
sbb
jae
add
mov
adc
add
pushf
cmp
scas
stos
leave
sbb
push
pop
xchg
mov
mov
shrl
mov
or
fxch
ljmp
imul
jo
add
mov
sbb
and
add
lock
stos
popa
add
xor
add
add
daa
clc
fmuls
cmpsl
clc
cltd
sub
clc
lcall
ss
mov
add
insl
mov
clc
and
or
add
sub
loop
lcall
insb
mov
add
mov
clc
adc
add
aas
sub
inc
add
push
pop
test
sar
clc
shld
push
repz
add
add
sub
das
xbegin
clc
clc
fbld
add
push
add
bound
add
add
inc
clc
popa
add
inc
add
icebp
jb
add
insl
imul
clc
imul
add
jnp
sbb
clc
mov
add
pop
loop
add
push
sar
clc
xchg
out
sahf
int3
mov
clc
push
arpl
add
rcrb
xor
add
sub
mov
push
clc
mov
add
clc
and
add
adc
add
sub
out
adc
add
movsb
clc
dec
and
add
clc
shll
mov
clc
mov
inc
clc
fisubrs
pusha
add
push
add
into
mov
pop
clc
inc
add
lret
add
jae
add
loop
cmp
mov
cmp
adc
add
push
stos
lock
ficomps
aas
inc
clc
sub
add
and
frstor
clc
mov
add
lods
es
rcrl
add
adc
test
fldl
clc
leave
mov
loop
fmul
adc
clc
cli
or
pop
xchg
icebp
jmp
dec
pop
add
add
enter
jne
mov
pop
sar
lods
mov
xchg
pop
outsl
xchg
shlb
sub
dec
gs
dec
jo
add
add
and
add
aad
inc
clc
adc
add
clc
popa
add
insl
xchg
jl
clc
lcall
repnz
clc
imul
clc
ja
int
clc
ljmp
add
shrl
clc
lcall
add
xbegin
jae
add
fcomi
inc
clc
je
add
nop
lret
add
add
iret
push
add
sbb
outsl
lods
pop
sbb
clc
add
add
popf
fimull
push
lret
cmc
pusha
add
iret
je
mov
clc
xor
add
add
add
push
push
dec
inc
add
dec
xabort
clc
cmp
or
add
cld
and
add
add
mov
aad
clc
test
adc
add
clc
fsubrl
mov
clc
fstl
add
add
dec
add
imul
dec
idiv
xor
add
jb
add
clc
scas
mov
xchg
cmp
outsb
out
cmpsb
clc
mov
cmp
gs
sbb
hlt
addr16
dec
dec
inc
add
loop
push
clc
or
add
and
add
daa
clc
adc
xchg
pushf
cmp
sub
xchg
js
and
add
cmp
clc
lods
cs
add
add
loope
xor
add
arpl
add
add
xchg
jae
add
add
push
add
jl
and
add
xchg
rcr
call
jno
add
add
mov
scas
iret
repnz
add
pusha
add
xchg
test
xchg
push
inc
add
jbe
mov
adc
push
cli
sbb
jp
mov
and
add
cmp
or
or
inc
add
scas
sub
add
jne
xchg
inc
add
push
add
fwait
mov
out
pop
pop
push
ret
and
add
movsb
clc
mov
add
cli
mov
add
insb
xchg
cmp
inc
clc
or
clc
push
xchg
test
ret
clc
jbe
out
mov
and
add
add
jle
clc
cmp
clc
adc
add
pop
or
xchg
adc
add
stos
adc
stc
jns
cmc
inc
clc
sub
or
add
clc
sahf
mov
jno
add
cwtl
ds
cmp
adc
cmp
add
cmp
in
xor
and
add
sbb
xchg
fstps
clc
movsl
clc
cmp
mov
std
in
imul
loop
sub
clc
inc
clc
and
fwait
adc
add
xor
add
and
add
add
sti
jne
add
test
jno
add
cmp
clc
mov
cmp
add
fiaddl
mov
add
jno
add
and
sar
clc
jne
ret
clc
mov
add
mov
clc
mov
and
adc
add
add
clc
and
add
add
repz
add
imul
jmp
mov
lahf
mov
clc
or
xchg
and
add
imul
cmp
add
xor
add
cmp
sahf
into
in
lea
add
xchg
add
add
jnp
xabort
add
sub
std
testb
dec
addr16
in
and
es
pop
addr16
mov
xchg
pop
leave
dec
mov
add
xor
mov
shll
clc
out
clc
cs
scas
adc
add
aas
ret
clc
pop
lea
sbb
nop
insl
mov
bound
add
clc
bound
add
add
add
add
cmp
mulb
add
mov
jo
add
je
shlb
add
or
jl
sar
clc
cs
clc
ret
clc
stc
loop
fdivr
mov
add
in
pop
clc
popa
add
push
clc
in
pop
mov
js
clc
and
add
add
das
sti
test
jecxz
sub
add
add
fwait
lret
clc
inc
clc
sahf
mov
cli
arpl
add
rorb
mov
movups
add
cmp
cmp
add
add
add
fiadds
imul
add
cli
xor
add
add
sarb
pop
fdivl
clc
in
lods
frstor
mov
xabort
pop
bound
add
loopne
pushf
sbb
pop
jo
add
add
pusha
add
js
push
add
inc
clc
adc
push
ja
ret
xor
dec
or
fscale
pop
mov
cmp
xor
add
pop
pop
mov
mov
add
mov
insl
jge
add
inc
clc
es
jg
outsl
mov
lods
fcmove
push
loop
xabort
push
push
mov
sbb
add
pop
and
add
clc
pop
inc
add
iret
jb
add
clc
insb
sbb
add
std
cmp
add
inc
clc
loop
push
add
mov
add
in
imul
jp
mov
add
out
adc
add
add
dec
or
je
push
clc
pop
clc
push
fidivrs
xchg
cltd
pop
pop
jge
add
pcmpgtb
movsl
clc
jle
or
pusha
add
cld
cmp
push
add
ja
clc
add
call
movsl
clc
dec
jo
add
pop
cltd
pop
insb
xchg
mov
xor
add
add
pop
fnstsw
icebp
and
add
add
clc
fimull
clc
je
insb
mov
xchg
xchg
jge
add
xchg
pop
add
clc
jp
lods
xor
add
xchg
adc
add
mov
cmp
mov
dec
dec
push
sbb
sub
add
popa
add
xchg
addr16
in
xor
pop
ja
pop
imul
add
imul
add
test
inc
add
mov
inc
clc
and
add
clc
or
and
add
add
popa
add
cmp
clc
sbb
clc
and
add
je
xbegin
mov
ljmp
repnz
add
xor
add
clc
mov
add
shlb
add
jne
add
pushl
xchg
cwtl
or
xor
ret
clc
mov
clc
sbb
jne
xor
out
scas
enter
clc
mov
mov
add
and
add
sub
add
add
dec
sbb
mov
lods
ss
add
fstpl
clc
push
lock
add
loopne
mov
lock
add
add
add
inc
add
clc
ficoml
call
adc
add
add
pop
out
je
cmpsb
clc
dec
icebp
add
sbb
stc
inc
add
pop
cmp
clc
xor
add
imul
adc
add
push
pop
or
push
add
mov
add
lods
out
mov
clc
inc
clc
sbb
in
loope
jl
add
jp
clc
push
dec
push
jb
add
add
mov
jno
add
add
rolb
repnz
int3
add
add
fldcw
xabort
and
fdivrs
std
popf
stos
xor
add
clc
mov
cli
cmc
inc
clc
lods
jb
add
adc
add
mov
clc
cmp
cmp
ja
insb
and
xchg
jbe
ret
mov
fwait
cmp
cmp
into
ss
negl
add
popl
jp
sub
add
jns
fdivr
and
add
clc
inc
add
dec
add
add
fcmovnbe
mov
clc
outsl
add
add
and
add
shll
add
push
sub
mov
inc
add
lock
jno
add
clc
hlt
pop
stos
lret
mov
push
add
or
clc
pusha
add
popf
ds
add
cwtl
pop
mov
clc
mov
mov
mov
sub
sub
clc
mov
add
mov
daa
clc
das
scas
fwait
inc
add
fmul
jbe
test
xor
add
xbegin
add
xchg
sub
fs
aaa
scas
cmp
mov
and
add
lods
jns
clc
mov
xor
add
add
clc
sub
test
sbb
int3
stc
push
fists
jle
popa
add
sbb
cmp
sbb
clc
setle
add
mov
and
add
sbb
mov
clc
enter
idivl
clc
push
xor
add
clc
sub
sub
add
or
add
jmp
clc
fmuls
add
shll
add
push
imul
int3
scas
test
movsb
clc
imul
movsl
clc
cmp
pop
test
or
add
xchg
out
push
lahf
fs
outsl
lods
fs
and
add
inc
clc
out
jnp
add
or
clc
push
add
mov
jo
add
pop
mov
arpl
add
enter
inc
add
mov
add
sub
popf
pop
inc
clc
mov
in
mov
and
mov
add
adc
add
out
inc
clc
rorl
pop
cmp
mov
aam
dec
mov
shl
clc
mov
dec
int
add
mov
push
pop
in
xchg
pop
clc
xchg
or
repnz
xabort
jo
add
imul
sar
clc
pop
push
test
imul
cmp
add
fdivl
add
cmp
mov
xchg
sar
inc
clc
jge
add
scas
add
jecxz
or
mov
jp
sub
add
add
adc
add
clc
clc
jns
in
int3
test
clc
lods
fabs
clc
push
scas
rolb
add
add
and
xor
pop
adc
add
dec
shlb
sahf
fnstcw
add
negb
popa
add
lock
sub
add
call
lods
xor
add
pop
sub
lods
std
xchg
dec
sar
loope
es
es
adc
add
icebp
inc
add
divl
das
es
sub
adc
clc
repnz
sub
arpl
add
xabort
int3
ljmp
scas
xor
jp
jle
clc
xchg
xor
pop
add
add
and
sbb
clc
lret
and
add
add
cmp
mov
mov
cmp
inc
add
stos
pop
push
and
faddp
clc
push
out
cld
mov
fs
cmp
inc
clc
insb
inc
add
stos
dec
insb
in
jae
add
adc
sub
add
lods
loope
inc
add
jbe
pop
cli
hlt
adc
add
mov
leave
xchg
cwtl
std
mov
lret
clc
cmpsl
clc
repnz
jb
add
in
je
pop
imul
and
add
int
clc
pop
fstps
clc
push
jmp
clc
lret
out
fs
sub
add
insl
jmp
clc
cwtl
mov
add
in
add
add
xor
add
clc
and
add
imul
je
cli
or
sarl
bound
add
popa
add
sub
add
movsb
clc
xor
add
add
jb
add
add
and
jmp
jns
mov
mov
mov
clc
or
add
iret
add
add
clc
mov
clc
mov
xor
add
lret
add
dec
mov
mov
movsl
clc
out
sbb
add
lods
push
add
loopne
xchg
scas
push
add
stc
mov
fwait
lahf
mov
shlb
xchg
pop
hlt
daa
clc
jmp
add
clc
mov
ds
shrb
fcmovnb
clc
jo,pt
add
fs
push
sub
xor
push
das
push
mov
clc
adc
mov
cmp
cmp
data16
out
int3
sub
divb
clc
cmp
inc
clc
rcll
add
add
pavgb
inc
add
push
mov
add
dec
stc
lret
xchg
xor
stos
mov
clc
sar
push
clc
hlt
stos
push
pop
paddusb
xchg
jmp
imul
popa
add
inc
clc
push
add
test
in
js
add
xchg
std
xor
aaa
mov
add
add
add
clc
and
leave
std
cmp
add
clc
daa
clc
cmp
clc
sub
pushf
movsl
clc
jno
add
add
fmull
jbe
out
rolb
add
cmpsb
clc
call
mov
push
sahf
sbb
clc
push
cltd
add
add
xchg
popa
add
cmpsl
clc
mov
insb
in
loop
mov
clc
xbegin
mov
popa
add
sub
jbe
cs
jnp
add
loopne
notl
add
dec
and
add
out
jo
add
clc
clc
push
sub
lret
add
add
ret
adc
clc
outsb
cmpsb
clc
out
sub
add
daa
clc
mov
clc
mov
fs
cmp
add
and
add
bound
add
loopne
jnp
mov
add
cmp
or
es
and
add
rcrl
push
ljmp
clc
mov
clc
push
add
jle
loopne
mov
aam
clc
adc
add
sbb
ljmp
cmp
or
or
sub
ss
arpl
add
add
jmp
add
inc
clc
xchg
stc
xchg
nop
cmp
dec
sbb
push
add
sarl
cwtl
addr16
xchg
adc
add
mov
ljmp
sbb
add
add
pop
jecxz
pop
sbb
adc
or
imul
xchg
mov
jne
add
call
clc
mov
add
cmp
or
add
xabort
xor
add
clc
adc
add
test
clc
stc
push
mov
add
clc
xor
adc
clc
mov
sti
jecxz
pop
iret
xchg
push
test
aad
xchg
mov
insl
sbb
clc
jge
add
adc
add
mov
mov
ss
sbb
sahf
ret
sub
or
mov
xor
add
lea
mov
add
add
add
cmp
adc
add
mov
cmp
fsubrl
jbe
lret
xchg
xchg
out
push
add
shll
add
adc
cmp
add
sar
lret
xchg
cli
sbb
es
push
clc
mov
mov
clc
out
cs
add
sbb
add
pushf
push
sbb
or
aad
clc
sbb
pop
xchg
pusha
add
xor
xbegin
out
push
and
add
add
mov
jne
clc
xor
add
add
cmc
sar
mov
add
aas
pop
popf
das
inc
clc
jmp
add
push
mov
js
and
jmp
clc
pop
push
add
push
clc
leave
lcall
add
add
xor
add
arpl
add
clc
pop
das
adc
xchg
fs
loopne
fistps
mov
outsl
ds
sbb
cmp
clc
ss
jle
gs
cmp
push
or
into
mov
clc
repz
inc
add
and
cmc
mov
dec
stc
add
add
add
add
test
btr
jg
lret
jns
js
add
inc
clc
or
xabort
pop
clc
aaa
aam
mov
jb
add
pop
cmp
popa
add
jg
sub
mov
clc
mov
loop
adc
add
jns
xchg
in
sub
clc
and
add
hlt
insl
dec
pop
jmp
or
data16
and
xchg
and
mov
jecxz
repnz
sar
clc
mov
mov
clc
pop
push
cmp
sub
clc
inc
clc
sub
clc
aas
push
clc
push
add
je
clc
cltd
mov
push
repz
sub
mov
inc
add
inc
add
call
pop
scas
mov
insl
push
in
popa
add
ret
clc
popf
bound
add
mov
add
cmp
mov
enter
mov
jmp
arpl
add
mov
out
mov
mov
clc
xchg
add
add
clc
ret
add
mov
out
fs
mov
clc
xchg
popa
add
enter
add
clc
das
xchg
bound
add
add
mov
jmp
xchg
pop
es
cld
sar
add
daa
clc
mov
add
jg
mov
cmpsb
clc
mov
cmp
clc
leave
ljmp
sbb
lret
clc
mov
sbb
div
aaa
dec
scas
cmp
clc
dec
imul
clc
inc
add
jl
jno
add
mov
clc
pop
sub
mov
add
aam
insb
out
fwait
loopne
rorb
loope
xchg
jmp
flds
adc
add
ljmp
mov
add
sbb
clc
add
add
cwtl
movsl
clc
push
xchg
sub
add
sbb
clc
xchg
mov
ret
clc
test
in
jbe
inc
clc
ffreep
clc
mov
cmc
push
push
leave
lahf
test
imul
pop
cmp
cmpsl
clc
test
insb
nop
xchg
pusha
add
adc
add
push
push
mov
imul
mov
cltd
xor
add
clc
cwtl
jecxz
lea
sti
es
adc
add
cwtl
mov
push
aaa
or
xchg
lock
sub
add
cmpsb
clc
stos
addr16
add
add
in
in
jge
cmpsb
clc
cmp
clc
inc
clc
mov
cmp
mov
or
inc
add
jmp
clc
fwait
inc
clc
cwtl
clc
mov
inc
clc
jmp
sti
cltd
jg
test
push
jbe
sbb
clc
pop
cmpsl
clc
mov
inc
clc
sbb
divb
cmp
add
jbe
inc
add
and
lods
lods
mov
clc
insl
mov
add
out
push
ja
clc
sub
add
daa
clc
enter
cmc
lock
add
insl
xor
add
clc
imul
sar
loope
insl
and
add
sub
add
aas
mov
clc
loop
pop
testl
outsl
imul
repnz
ljmp
out
loop
jge
add
dec
sti
push
xchg
sbb
add
ret
mov
add
add
outsb
sub
add
xabort
clc
out
mov
clc
loopne
mov
pandn
insl
ret
clc
jnp
clc
or
clc
push
aad
clc
add
add
adc
mov
add
cwtl
xchg
cmp
insb
stc
or
mov
pusha
add
dec
push
add
mov
clc
push
add
and
add
and
add
add
cmpsl
clc
xor
pop
out
out
stos
mov
clc
xbegin
add
sbb
clc
mov
js
add
mov
pop
loope
xor
add
daa
clc
add
add
or
add
stos
insl
and
add
pusha
add
sub
push
dec
xchg
data16
lock
roll
mov
sahf
cmp
add
xchg
mov
mov
add
add
add
data16
jbe
insb
lcall
xchg
inc
add
mov
pop
sar
clc
inc
add
and
add
imul
mov
clc
rorb
stc
insl
mov
clc
mov
add
lods
xchg
clc
sub
add
add
add
punpckhbw
clc
or
add
sub
add
add
mov
enter
lcall
or
pop
and
add
sub
fsubr
jae
add
add
mov
addr16
push
push
add
mov
sbb
push
add
push
fisttpl
clc
jb
add
xbegin
add
add
xor
add
mov
jae
add
cmp
aam
add
sbb
call
mov
incl
fdivp
pop
sub
mov
add
add
repnz
or
in
movsb
clc
push
scas
jl
clc
mov
add
xchg
dec
mov
leave
fld
clc
jecxz
jno
add
daa
clc
and
add
push
add
sbb
clc
jmp
mov
fisubrs
or
stc
loope
leave
adc
mov
stc
mov
clc
cltd
cld
imul
clc
xlat
adc
add
clc
push
add
add
mov
clc
mov
mov
add
stos
push
xchg
repz
push
or
icebp
imul
add
cmp
add
mov
and
inc
clc
nop
dec
sbb
add
jmp
add
push
add
cmp
add
jne
xor
movsl
clc
aas
mov
add
in
jmp
push
shlb
add
pop
jp
je
call
mov
push
movsb
clc
sub
xor
add
aad
nop
lret
dec
adc
mov
aaa
lcall
add
notl
xor
add
inc
clc
xor
es
ja
clc
in
xabort
add
cmpsb
clc
push
xor
add
add
bound
add
std
dec
test
int3
lret
pop
mov
inc
add
sub
add
lret
call
inc
clc
sar
ret
add
repz
test
inc
clc
loop
push
pop
push
clc
cwtl
sbb
add
test
clc
sahf
and
add
clc
loopne
in
punpckldq
add
add
lahf
adc
clc
lods
clc
fistl
clc
in
rclb
inc
add
mov
add
mov
test
add
add
push
fsubl
add
xor
add
clc
lock
add
or
dec
cmc
jne
jno
add
lock
int3
insl
xor
add
clc
pop
clc
push
dec
int3
fs
mov
lods
sbb
mov
add
cmpsl
clc
jmp
fs
add
add
in
mov
mov
bound
add
clc
cmp
clc
imul
sti
cmp
jmp
clc
inc
add
mov
mov
ja
clc
mov
add
inc
clc
ja
cld
js
nop
and
add
add
clc
lods
mov
cld
shlb
clc
lods
xor
add
add
add
aas
add
in
mov
xchg
call
hlt
adc
add
xchg
movsb
clc
pushf
pop
popf
pushf
sar
add
xor
repnz
adc
add
repnz
aaa
xchg
sbb
cltd
sub
add
nop
mov
add
in
jecxz
ficoml
dec
sar
adc
xor
jbe
clc
rorl
pushf
out
xchg
cmp
mov
add
inc
add
jg
sub
clc
in
fisubl
add
cwtl
sbb
add
cwtl
es
enter
xchg
lock
dec
add
sti
lcall
aam
clc
out
jmp
add
cmp
mov
jmp
clc
adc
clc
cmpsb
clc
mov
xchg
ss
push
in
sub
cltd
jp
clc
cmp
inc
add
cmpsl
clc
mov
adc
add
out
push
je
mov
fdivr
or
cwtl
pop
je
ret
clc
arpl
add
add
ss
clc
cmp
stos
sbb
adc
add
jns
mov
lret
cmp
add
imul
mov
leave
adc
add
lret
and
add
cltd
xor
add
clc
cmp
clc
and
add
cmp
es
inc
clc
cmp
sbb
cmp
add
push
push
pop
and
dec
lret
xchg
mov
clc
bound
add
add
add
add
mov
add
adc
add
mov
sbb
into
cmp
jg
sub
add
mov
mov
mov
scas
into
cs
int
clc
adc
add
pop
stos
ror
xchg
xor
es
test
mov
jge
xbegin
clc
sbb
std
sub
xchg
dec
dec
outsb
dec
xbegin
cmp
jb
add
inc
add
arpl
add
fs
xrelease
add
pop
and
lods
shlb
xor
es
adc
add
clc
pop
pop
jo
add
clc
call
mov
jo
add
mov
clc
out
add
pushf
push
mov
popf
daa
clc
addr16
cmp
add
add
add
add
test
jge
pushf
mov
fucomi
add
add
roll
add
jg
clc
imul
fsubrs
fnstsw
sbb
sbb
mov
clc
clc
xchg
cmp
lret
push
and
add
or
fdivs
inc
clc
in
das
fisubrs
dec
decb
pushl
add
ja
clc
xchg
in
cmpsb
clc
fmuls
scas
jmp
clc
lret
jbe
clc
data16
arpl
add
add
pusha
add
ljmp
xor
add
clc
xchg
into
add
add
daa
clc
out
roll
push
add
xor
add
push
mov
add
cmp
xchg
inc
add
mov
add
clc
inc
add
iret
push
test
push
add
inc
clc
add
repz
clc
pop
in
xor
add
pushf
mov
clc
dec
dec
stc
and
add
clc
sub
dec
dec
cmp
add
pop
push
clc
bound
add
mov
loopne
mov
data16
nop
mov
add
leave
mov
clc
stos
mov
add
dec
stc
push
mov
icebp
mov
dec
sbb
add
outsl
xchg
loop
mov
mov
and
add
xabort
add
or
int3
pop
xchg
sbb
clc
pop
clc
es
mov
adc
adc
clc
jno
add
lahf
cwtl
inc
clc
cmp
add
pusha
add
and
mov
add
add
add
jmp
fs
test
or
clc
push
add
pop
mov
mov
sbb
cwtl
ret
clc
arpl
add
pop
and
outsl
sub
in
dec
sar
clc
loope
adc
add
push
lea
mov
sar
add
imul
add
ljmp
clc
inc
add
ds
jno
add
add
inc
clc
dec
mov
loope
inc
add
mov
add
xor
cmp
in
fs
pop
clc
js
add
inc
clc
lods
push
clc
inc
clc
call
add
test
clc
in
outsl
daa
clc
sub
add
mov
add
mov
int3
jae
add
pop
std
inc
clc
in
gs
jp
clc
fs
xchg
sub
ss
mov
add
cmc
stc
aam
jg
clc
mov
and
add
pop
sti
xbegin
xlat
or
movsb
clc
cmp
jne
clc
adc
mov
mov
clc
cmp
shr
add
add
jno
add
mov
push
clc
mov
mov
and
add
mov
or
into
or
add
inc
clc
mov
mov
icebp
gs
jns
clc
dec
fdivr
sti
xlat
insl
sub
jae
add
clc
in
mov
loop
lea
insb
push
add
cli
xor
stos
push
clc
inc
clc
into
sub
outsb
mov
jo
add
jmp
nop
add
sbb
or
clc
jb
add
add
push
pop
clc
push
mov
add
outsb
push
xchg
jmp
inc
clc
neg
nop
rolb
clc
sub
clc
cmc
mov
cmp
loop
cmp
adc
add
push
add
sub
clc
xor
add
pop
cmp
and
or
clc
xchg
pushf
and
add
add
clc
je
push
push
add
add
fildl
js
xbegin
add
icebp
aas
mov
ljmp
adc
add
xor
add
clc
add
add
clc
pop
mov
pushf
add
in
or
and
and
add
add
xchg
mov
sbb
push
clc
cmpsb
clc
or
lret
lcall
das
movsl
clc
test
scas
xor
add
enter
fcoms
sar
clc
dec
sbb
mulb
clc
dec
js
jnp
add
dec
fcomip
adc
add
push
sbb
add
mov
clc
and
add
jns
xor
add
or
bswap
sub
and
stc
add
add
ljmp
lods
sub
add
clc
das
std
cmp
in
fs
fisubrs
and
add
add
imul
add
xchg
jle
xchg
arpl
add
fidivrl
mov
scas
out
lea
or
cmc
es
jno
add
adc
add
add
add
add
add
mov
clc
ret
clc
sbb
clc
cmp
in
push
in
in
jb
add
add
mov
jge
clc
and
add
outsb
ja
cmpsb
clc
stos
sbb
xchg
mov
clc
clc
lret
insb
dec
insb
cmc
cmp
add
mov
mov
add
add
in
jbe
xchg
adc
add
sbb
scas
adc
add
cmp
insb
push
cmpsl
clc
push
clc
push
inc
add
add
add
pop
and
add
int
pushf
fisttpll
lret
fisubl
cmp
sahf
mov
dec
cltd
mov
or
out
movsl
clc
test
ficoms
inc
add
jnp
add
filds
add
add
in
rolb
clc
cmp
add
inc
clc
lods
sbb
lret
jle
mov
adc
clc
adc
add
jae
add
test
lods
fdivl
mov
add
sar
leave
fsubrl
pop
clc
hlt
jge
aam
clc
adc
add
fsubrl
clc
cmpsl
clc
cmc
gs
add
add
ss
repnz
xor
add
add
stc
hlt
pop
cmp
ss
mov
pop
cmp
add
push
adc
add
mov
clc
out
mov
add
add
xor
add
pop
imul
clc
ljmp
sbb
add
dec
add
leave
dec
xchg
adc
add
and
enter
add
and
add
add
add
or
sbb
in
dec
int3
inc
add
mov
rcrb
push
fld
clc
rolb
add
add
mov
lock
mov
push
fs
xor
cmp
add
clc
cltd
push
jecxz
cmc
scas
fistpl
jns
or
leave
data16
loope
jmp
clc
jge
inc
add
pop
jg
push
stos
mov
std
mov
sbb
sar
ljmp
add
sar
cmp
pop
clc
xchg
lret
xor
add
fadds
add
add
inc
clc
jle
clc
xor
add
push
mov
fcoms
push
clc
jns
mov
clc
lods
movsb
clc
pushf
rcrl
sbb
clc
lods
loope
add
add
add
movsl
clc
movsb
clc
sbb
clc
xchg
in
fmul
jo
add
xor
add
and
add
add
sub
add
add
jae
add
add
and
add
and
add
popa
add
dec
cli
aad
jbe
cmp
test
push
addr16
mov
sbb
add
and
add
imul
aam
push
movsb
clc
fstps
clc
jo
add
test
add
cmp
clc
test
mov
clc
mov
xlat
cmp
dec
cmc
add
add
clc
jge
cmpsb
clc
jecxz
push
add
outsl
dec
sar
loopne
jnp
add
cmp
enter
jne
syscall
clc
rol
clc
cli
imul
xor
add
clc
outsl
add
add
add
cmpsb
clc
jo
add
xor
add
clc
mov
push
add
jae
add
cmp
clc
xchg
mov
sbb
clc
clc
pop
jecxz
std
mov
add
clc
int3
xchg
xor
add
add
dec
xor
add
mov
popa
add
bound
add
add
inc
add
cmp
test
xchg
mov
fnstenv
and
adc
add
pop
lret
add
add
mov
sub
xchg
sti
sub
clc
sahf
lret
cmp
add
mov
movsb
clc
inc
add
cs
cwtl
call
adc
add
add
dec
sahf
ficomps
add
cmp
xchg
add
add
add
push
add
sub
sar
push
fistps
jns
mov
mov
clc
xchg
and
add
add
clc
push
add
dec
cli
push
out
das
cli
outsl
cli
sub
pop
aas
jg
add
iret
sarl
cmp
fsubl
add
test
pop
stos
dec
and
add
dec
rol
clc
push
dec
cld
dec
pop
loop
stos
sbb
movsb
clc
xchg
and
add
mov
cmp
clc
xor
add
cmp
clc
pop
sbb
cwtl
cmc
stc
cmp
mov
add
clc
fisubrs
dec
cmp
jg
fmull
jecxz
popf
fidivrl
inc
add
push
add
or
add
add
decb
jge
add
add
sbb
dec
jp
clc
cmp
cld
sbb
add
add
and
add
js
lahf
mov
jl
clc
outsl
inc
clc
jecxz
fidivs
clc
jno
add
jle
and
add
mov
clc
push
add
inc
clc
clc
add
add
sub
sar
clc
sub
add
mov
cmp
insl
leave
cli
cmp
add
cmpsb
clc
cmp
cwtl
mov
add
add
mov
movsb
clc
gs
arpl
add
out
loope
fwait
and
add
add
sar
sub
dec
xor
add
inc
clc
cmp
add
push
push
add
dec
gs
adc
add
inc
clc
sub
sbb
clc
jp
mov
rcl
in
arpl
add
aam
lcall
stos
push
clc
sar
inc
add
xchg
pop
mov
adc
add
or
clc
je
clc
bound
add
add
xchg
push
push
clc
jnp
clc
mov
fidivl
scas
or
sar
jmp
adc
add
push
add
sbb
add
shl
dec
ljmp
add
addr16
xchg
mov
clc
and
add
dec
call
inc
add
ret
clc
jne
clc
mov
or
add
bound
add
cmpsb
clc
stc
idivl
negl
xabort
xchg
lret
and
add
stos
dec
or
sti
mov
adc
add
add
add
hlt
pop
cmp
clc
xchg
ret
clc
cmp
add
jle
mov
clc
cs
popa
add
scas
push
xabort
adc
add
cmpsl
clc
sbb
clc
pop
pop
push
add
jns
ja
fnstcw
loop
mov
icebp
and
sbb
inc
add
xor
add
clc
test
and
add
sbb
pop
adc
add
push
add
ficomps
xchg
jge
cltd
cmp
mov
clc
cmp
clc
ret
clc
adc
add
mov
clc
ja
int3
add
add
stc
nop
pop
cmc
cmp
lcall
mov
sub
add
fdivrl
mov
or
clc
dec
cmp
pusha
add
xbegin
clc
cmp
push
scas
push
mov
jne
arpl
add
add
mov
clc
in
aas
xchg
xor
add
push
dec
xchg
ret
add
dec
aam
clc
adc
add
clc
mov
in
xor
clc
lahf
sti
jl
or
pop
inc
clc
cltd
in
sbb
pop
clc
mov
imul
or
add
fcmove
fisubs
xor
add
sub
or
add
push
add
sbb
add
mov
sti
xchg
inc
add
neg
shlb
add
test
cmovl
clc
sub
stos
mov
add
movsb
clc
sbb
sbb
jne
clc
xor
dec
jle
push
cmp
clc
mov
clc
push
fmul
push
pop
push
xchg
cmp
cld
xchg
scas
or
clc
lods
xbegin
add
add
loope
repnz
fldl2e
push
aaa
loope
fadd
clc
test
loop
mov
arpl
add
clc
out
pop
leave
adc
add
add
test
and
jne
cmp
add
call
add
jo
add
into
fcompl
add
push
add
es
leave
icebp
sub
push
decb
hlt
cmpsl
clc
enter
pop
mov
stos
cmovle
ja
cmp
clc
or
cmp
xor
mov
push
add
push
mov
lahf
push
push
jns
add
cld
sbb
cmp
cwtl
in
xchg
stos
adc
add
jmp
mov
rolb
movsb
clc
push
add
push
mov
add
bound
add
add
sbb
mov
aad
add
lcall
pop
xor
add
ja
clc
fsubrs
sti
cmp
cmp
push
aad
clc
aad
adc
add
xbegin
pop
dec
ret
pop
mov
add
pop
clc
sub
lcall
add
add
add
dec
lods
xchg
aam
clc
inc
clc
jno
add
int3
out
shll
in
cli
sub
and
add
add
negl
add
outsl
sbb
clc
xor
add
sbb
ret
add
cmp
dec
xor
add
rcr
or
hlt
and
add
jp
mov
xor
push
xlat
push
add
xor
add
add
and
add
pop
leave
sbb
mov
test
jecxz
loopne
mov
xor
add
inc
add
cs
imul
jp
cwtl
outsl
popf
mov
clc
inc
clc
lods
das
popf
cld
and
vmovlps
add
add
mov
nop
jb
add
movsb
clc
cli
mov
movsb
clc
int
lret
shrb
loop
mov
add
push
or
fistps
hlt
pop
clc
clc
pop
xchg
sar
clc
movsl
clc
mov
dec
scas
push
dec
lahf
or
add
lahf
pushf
cmp
sar
add
push
jns
add
ss
xor
add
lock
repz
mov
add
sbb
mov
mov
bound
add
stc
ja
jns
mul
clc
lods
xchg
mov
add
into
mov
insb
jns
stos
aad
jbe
clc
jae
add
out
mov
adc
add
xbegin
mov
int
add
xchg
je
dec
imul
clc
jo
add
jns
dec
xchg
fwait
hlt
jl,pt
xor
add
add
fsubl
clc
lods
inc
clc
call
imul
push
clc
cld
push
add
sbb
clc
mov
add
pop
int
add
cld
pop
pop
fdivrs
mov
pop
add
add
mov
pushf
xor
jg
clc
adc
add
and
add
clc
daa
clc
adc
add
or
mov
cli
test
sbb
cmp
inc
add
jnp
add
lret
push
sbb
push
add
adc
add
fsubrl
add
add
mov
clc
and
add
dec
jae
add
sub
add
pop
mov
ja
clc
cmp
lret
out
pop
jl
mov
push
add
movsb
clc
loopne
adc
loopne
enter
cmc
inc
clc
je
clc
mov
add
jns
clc
loope
dec
mov
add
add
and
add
clc
test
clc
nopl
int
test
lea
clc
mov
pop
rorl
clc
icebp
pop
xchg
xchg
xor
add
insb
pop
clc
es
arpl
add
pcmpgtw
adc
add
clc
out
adc
add
add
pop
cwtl
fs
adc
add
out
test
pop
and
add
outsb
jp
add
clc
imul
push
add
add
mov
add
ficoml
gs
arpl
add
lods
jp
call
aaa
mov
add
pop
push
add
xchg
pop
xchg
cmp
mov
clc
cli
imul
mov
add
adc
add
cmp
lret
fs
cs
jmp
jae
add
add
add
add
scas
push
add
out
adc
cmc
cltd
adc
add
clc
test
das
or
daa
clc
fcoms
add
jnp
add
xchg
mov
xor
add
test
add
loop
xchg
cmc
movsl
clc
cmp
loop
pusha
add
insl
adc
add
out
test
pop
addr16
or
add
add
jmp
mov
clc
jne
add
mov
dec
ljmp
add
mov
outsl
pop
das
mov
clc
insb
mov
add
xabort
xchg
push
pop
jecxz
mov
fisubs
popf
jp
xchg
negb
push
cs
outsl
pop
cmp
pop
cmp
loope
mov
add
mov
mov
mov
add
dec
je
clc
das
cmp
int3
lret
ret
in
pop
pop
xchg
pop
pusha
add
jmp
sahf
mov
clc
dec
cmp
or
xor
add
popl
add
mov
in
pop
out
fmull
mov
add
cld
adc
add
mov
gs
dec
cmp
aas
call
imul
cmp
add
xor
add
pop
and
add
push
cmp
xor
add
push
add
push
fildll
clc
xor
add
push
clc
std
inc
clc
sar
or
shrb
jnp
daa
clc
mov
pop
clc
push
jmp
mov
sub
sbb
add
mov
add
add
dec
cmpsb
clc
fstl
add
icebp
sete
jge
pause
in
inc
clc
push
add
ror
xchg
lcall
mov
add
xchg
cmp
or
data16
lea
add
cmc
dec
mov
into
aam
loop
icebp
mov
cmovs
clc
inc
add
jns
clc
es
das
dec
mov
jmp
mov
sub
cmp
push
add
adc
add
push
add
adc
add
ss
mov
adc
add
scas
sub
mov
add
out
dec
adc
lret
out
ret
xor
add
add
push
cmc
cmpsl
clc
fisttpl
add
aad
scas
jne
clc
cmp
and
add
clc
mov
push
cmp
xchg
dec
and
add
add
sbb
xor
add
clc
iret
push
ret
fsubp
clc
es
ljmp
sar
fimull
cmc
stos
cmpsl
clc
xor
add
das
mov
mov
add
mov
iret
xchg
sub
cmp
add
add
mov
add
imul
add
repnz
cmp
or
and
add
pop
mov
clc
into
fsubs
add
push
add
loope
data16
fsubrp
bound
add
pop
imul
mov
popa
add
mov
and
inc
add
xor
add
jecxz
add
add
fmull
out
lea
aaa
out
movsl
clc
add
data16
lock
and
pop
sbb
and
jg
add
jb
add
inc
clc
xchg
sub
clc
cmp
out
movsl
clc
loopne
adc
add
jbe
ljmp
sub
add
inc
clc
mov
and
add
cmc
movsl
clc
insb
icebp
xchg
jbe
cli
movsl
clc
enter
sub
cmc
xchg
mov
add
rorl
lock
push
add
sar
inc
add
loopne
shrb
push
mov
test
stos
cmpsl
clc
mov
add
xchg
mov
loopne
leave
call
sbb
or
pop
clc
xchg
push
mov
add
add
add
add
jno
add
mov
mov
jp
sub
add
pop
mov
clc
lret
sbb
dec
xor
add
jp
mov
dec
or
clc
push
add
mov
mov
mov
pusha
add
loop
xchg
mov
clc
loopne
repz
aas
inc
add
mov
clc
push
add
dec
cmp
add
add
add
add
pusha
add
jnp
mov
clc
jmp
push
add
insl
test
xchg
mov
mov
sar
je
pop
jecxz
fs
pop
push
add
mov
clc
aas
cs
cmp
mov
add
xchg
sbb
out
xlat
jns
mov
push
clc
xchg
mov
sti
mov
clc
jb
add
add
sarl
aaa
rclb
add
out
pop
lahf
into
frstor
add
inc
add
cmp
repnz
cmp
add
push
add
mov
loop
clc
call
add
add
add
add
clc
cmp
add
fdivs
add
clc
data16
mov
fisubs
add
push
push
popf
or
clc
in
je
clc
imul
clc
repz
add
add
clc
in
mov
clc
bound
add
clc
push
pop
mov
clc
out
mov
mov
add
fucomip
lahf
mov
clc
lret
xor
daa
clc
mov
push
add
cmp
add
add
add
loope
mov
add
and
add
sar
clc
lods
leave
sbb
add
pop
arpl
add
fs
repz
pop
clc
pop
mov
hlt
bound
add
clc
push
fs
add
add
xor
add
mov
and
sbb
lahf
jp
or
jp
clc
add
insl
dec
pop
pop
popa
add
int3
push
test
xchg
pop
jo
add
add
mov
push
clc
adc
clc
js
add
or
add
imul
xbegin
xor
fs
mov
imul
popf
call
notl
jne
clc
fsts
add
add
push
stos
inc
add
and
xor
add
fdivrl
rcr
popa
add
xor
mov
clc
cmp
add
jecxz
mov
push
pop
jmp
add
pop
mov
add
mov
sbb
xchg
aam
add
cmp
and
add
clc
aas
mov
xlat
pop
and
add
clc
mov
nop
mov
clc
ret
clc
jo
add
in
jp
pusha
add
push
add
xchg
lcall
cmp
clc
mov
gs
cmp
clc
arpl
add
clc
push
add
outsl
xor
add
sar
cmovge
in
ret
clc
add
add
ret
clc
leave
clc
sahf
sub
jnp
clc
mov
clc
dec
add
mov
add
add
or
lahf
je
add
lcall
push
jge
clc
mov
movsl
clc
aas
adc
loopne
js
sar
in
lret
adc
add
lods
aas
repnz
or
mov
clc
push
scas
push
xlat
clc
leave
cmp
clc
mov
add
popa
add
jo
add
add
sbb
daa
clc
test
sbb
xchg
jle
add
jo
add
mov
popf
mov
out
or
xchg
mov
clc
leave
cmp
clc
jmp
clc
mov
dec
int3
cmp
je
add
in
inc
add
sub
and
add
outsl
nop
mov
add
es
imul
ret
shl
clc
ljmp
or
clc
adc
clc
dec
mov
addr16
mov
adc
add
inc
add
inc
clc
jmp
cmp
sub
iret
xor
add
add
sbb
lret
fimuls
ds
mov
clc
out
loopne
adc
shll
aaa
pushf
mov
push
add
add
clc
pop
jmp
xchg
dec
repnz
mov
fildll
mov
clc
imul
mov
add
or
sar
inc
add
mov
cmp
loop
mov
mov
add
push
cld
addr16
dec
adc
add
xchg
xabort
sbb
mov
test
adc
add
lea
add
test
push
es
out
sahf
jns
decl
add
ja
addr16
or
clc
test
loop
add
add
adc
add
or
add
clc
pop
cmpsb
clc
sub
or
clc
data16
mov
jnp
ret
clc
sub
dec
test
inc
add
popa
add
push
add
dec
push
clc
movsl
clc
jmp
inc
clc
and
add
clc
adc
xchg
jne
xchg
ficoms
add
jp
stc
mov
mov
mov
call
add
adc
add
mov
push
clc
mov
or
jp
dec
jmp
sti
mov
add
jecxz
scas
sub
jg
jns
daa
clc
lret
arpl
add
add
testl
clc
adc
add
negl
int3
jle
clc
call
add
clc
mov
xor
add
add
inc
clc
inc
add
mov
or
aaa
outsb
push
ficoml
sahf
bound
add
clc
add
add
test
das
rclb
out
xchg
pop
push
add
iret
fnclex
clc
inc
add
xor
add
int3
aaa
movsl
clc
popf
or
mov
push
inc
add
jp
sbb
clc
push
add
cli
mov
clc
xchg
jne
xor
fsubrs
clc
xchg
and
add
loopne
push
in
sar
and
add
add
or
sti
sarb
mov
idiv
mov
lock
jl
push
add
clc
data16
mov
xchg
cli
das
cmp
arpl
add
jmp
daa
clc
pop
cmc
loop
mov
mov
leave
mov
mov
add
arpl
add
add
data16
mov
push
enter
add
outsb
sub
add
clc
mov
xchg
mov
add
repnz
ret
ljmp
push
jecxz
jecxz
inc
clc
fiaddl
add
pop
mov
add
mov
add
cmp
or
add
add
add
add
scas
notb
add
push
add
rorb
add
add
mov
sbb
add
push
add
add
add
add
xchg
lock
cmp
push
add
lret
add
fbld
insl
mov
add
jbe
and
add
add
and
add
add
sub
mov
clc
lret
adc
cmp
add
xchg
cmp
clc
rclb
add
sub
int
clc
xchg
or
clc
jg
push
lock
push
add
nop
mov
or
enter
clc
dec
in
mov
inc
add
mov
lahf
rclb
push
es
jb
add
add
clc
out
dec
lock
dec
in
lret
add
lcall
inc
add
jbe
clc
into
xlat
ficomps
inc
clc
xor
clc
insb
xchg
sar
clc
addr16
shl
clc
cmp
jmp
add
add
arpl
add
and
add
xor
add
xor
add
popf
das
xchg
cli
cs
cmp
lods
inc
clc
hlt
sbb
cmpsb
clc
push
clc
test
ret
clc
pop
in
cli
pop
fdiv
pop
ret
clc
cltd
fwait
inc
clc
bnd
add
in
repnz
add
cli
pop
mov
add
add
add
add
enter
mov
push
add
out
mov
clc
scas
outsb
shl
mov
leave
and
bound
add
add
xor
add
repnz
clc
xchg
jle
or
insb
scas
pop
sub
jmp
lods
and
push
xbegin
clc
shrl
arpl
add
add
xchg
push
add
jge
add
cmpsb
clc
out
mov
add
mov
mov
clc
pop
jbe
lahf
adc
add
push
pop
mov
xor
add
pop
popa
add
fdivrl
dec
movsl
clc
xchg
lods
mov
add
add
push
push
push
jne
call
clc
xor
add
add
add
add
inc
add
cltd
adc
sbb
push
mov
clc
lea
fucomi
push
mov
clc
inc
clc
cld
js
add
sub
fisubl
clc
test
cmp
add
xor
add
popa
add
xlat
iret
adc
fwait
or
add
daa
clc
sar
xchg
clc
sub
xchg
xchg
loop
out
in
cmp
mov
add
inc
clc
insb
xor
clc
pop
adc
clc
cmp
clc
outsb
dec
pop
js
dec
es
icebp
and
pop
add
cmp
add
decb
mov
add
add
ja
clc
addr16
aas
dec
push
or
clc
mov
xabort
inc
add
xchg
inc
add
js
clc
mov
movsl
clc
cmp
cmp
add
adc
clc
lods
or
add
xchg
or
jge
inc
clc
int
fisttpll
in
mov
or
jo
add
xchg
cmp
and
add
ljmp
clc
or
cmp
add
adc
add
clc
fnstsw
clc
sar
fsubp
clc
daa
clc
rorl
clc
shlb
out
cwtl
adc
clc
push
jbe
adc
add
clc
cmp
sarl
pop
bound
add
mov
pop
test
clc
cmc
ja
clc
push
add
jg
sahf
fnstsw
sbb
cmp
scas
xchg
clc
jmp
sti
dec
negl
in
xchg
pushf
outsl
mov
mov
xlat
jmp
cmpsb
clc
xchg
into
in
addr16
xabort
add
mov
jne
add
add
add
sub
add
add
add
in
addr16
pop
adc
add
sbb
add
mov
add
jno
add
ret
add
decb
popa
add
daa
clc
roll
clc
scas
pushf
lods
arpl
add
sbb
and
add
cmp
iret
add
add
xabort
jge
add
adc
in
dec
inc
add
fimull
sub
cmp
clc
ja
mov
shlb
sub
jnp
inc
clc
cmp
xchg
push
add
iret
jae
add
das
pop
clc
add
add
imul
clc
xchg
mov
in
and
add
jbe
cmovbe
jae
add
mov
test
out
push
mov
out
mov
add
dec
js
clc
pop
ret
jp
clc
and
add
sub
add
enter
add
cmp
fsubr
aad
clc
into
mov
or
pushf
out
jno
add
xchg
push
add
or
clc
jns
mov
bound
add
clc
lock
imul
add
nop
mov
stos
ret
clc
xchg
arpl
add
add
prefetch
add
cwtl
daa
clc
cmp
stc
or
and
xchg
sti
sub
clc
aad
in
movsl
clc
dec
sbb
dec
cmp
add
testb
add
clc
pop
xchg
sub
das
inc
clc
xchg
aaa
leave
cmp
xchg
daa
clc
enter
add
pop
or
inc
add
push
jg
add
popf
bound
add
int3
sub
add
cmpsl
clc
loop
fnstsw
pusha
add
sub
xchg
mov
add
add
clc
in
pop
addr16
adc
mov
and
add
clc
fisubrs
mov
clc
push
add
jle
bound
add
add
add
xlat
loope
cmpsl
clc
pop
push
clc
dec
test
aad
repnz
xor
add
add
lea
add
clc
jo
add
add
and
add
add
inc
clc
inc
add
or
lcall
add
movsl
clc
rol
clc
in
mov
push
add
mov
clc
push
sbb
clc
add
add
clc
sbb
pop
clc
cmpsl
clc
adc
clc
fsts
add
repz
and
add
add
dec
push
push
adc
add
push
add
jl
add
xor
add
pop
ss
add
mov
inc
clc
movsb
clc
out
mov
jecxz
cmp
push
mov
dec
stos
lret
add
pusha
add
gs
roll
add
cmp
clc
xbegin
stos
adc
add
clc
ja
xchg
sahf
xor
add
dec
lods
xchg
lods
jmp
aas
test
lcall
outsb
shrb
clc
cwtl
loop
imul
das
fs
iret
push
add
push
add
push
add
push
add
rcll
add
aam
ds
aad
push
icebp
aam
or
filds
add
popf
outsl
cmpsb
clc
sub
mov
mov
idivl
ss
add
sub
add
add
add
xor
add
add
fdivrp
clc
mov
xor
add
loop
adc
add
push
mull
add
jbe
xchg
aaa
pop
icebp
jb
add
jae
add
pushf
call
outsb
ljmp
inc
add
ss
inc
add
jae
add
aad
ret
clc
mov
clc
mov
movsl
clc
test
cmp
add
aas
or
add
aas
mov
lock
out
xchg
mov
clc
cmp
add
xor
add
add
bound
add
loop
outsb
aam
clc
xor
add
sub
movsl
clc
in
push
xor
add
dec
sbb
enter
clc
aaa
data16
push
add
pop
sub
clc
pop
sar
clc
jne
add
pop
faddp
clc
ficomps
add
add
repnz
add
lods
push
add
in
xchg
insb
lods
int3
ds
xor
add
scas
mov
dec
and
fistl
data16
ds
push
repnz
call
aad
clc
ret
clc
xor
test
add
aam
clc
mov
mov
sbb
push
add
cmp
push
clc
adc
scas
mov
bnd
ljmp
push
fisubl
add
jae
add
add
sahf
xor
clc
mov
stc
and
outsb
and
dec
stos
jo
add
add
add
clc
xor
add
add
icebp
popf
out
aas
sub
popf
xchg
movsl
clc
push
add
stos
shl
push
add
dec
sub
movsb
clc
or
clc
and
add
add
rcr
repz
add
push
add
clc
dec
or
clc
jne
insb
fisttpll
xor
add
add
add
adc
add
sbb
clc
faddl
mov
lret
xchg
enter
in
rcll
add
xor
and
add
dec
lret
pop
addr16
sbb
mov
clc
test
shl
clc
push
popa
add
loop
adc
add
xor
add
ret
mov
add
jmp
add
add
aam
test
test
jnp
add
adc
add
add
mov
push
add
add
jbe
outsb
mov
daa
clc
mov
lods
movsl
clc
xor
clc
jecxz
nop
push
add
adc
add
clc
jmp
add
aas
bound
add
cltd
fwait
clc
scas
or
clc
ficomps
pop
cli
dec
xor
js
xor
add
inc
clc
sbb
in
jo
add
enter
xor
add
and
add
jb
add
pop
push
mov
aad
jp
clc
xbegin
addr16
sahf
xchg
xor
dec
cmc
inc
add
shl
clc
jg
jle
xchg
std
test
xchg
jg
clc
ss
arpl
add
clc
ljmp
clc
push
or
pop
stc
push
mov
das
and
jns
clc
fs
shll
add
lcall
mov
testl
jne
pusha
add
push
and
add
xchg
out
scas
cwtl
setne
xchg
cmp
push
add
dec
mov
test
dec
fcompl
add
add
xchg
sbb
in
addr16
mov
repnz
rol
clc
enter
scas
outsl
push
jp
clc
mov
clc
inc
add
and
bound
add
repz
sub
inc
add
shrb
jbe
clc
repnz
mov
mov
mov
add
lahf
mov
cmp
or
jne
add
fnstenv
add
add
mov
shll
aaa
sbb
dec
repz
imul
add
lock
and
add
push
mov
dec
test
shld
mov
or
sbb
or
clc
or
add
cld
xchg
mov
add
add
add
sub
aam
push
fstl
add
lods
push
xor
clc
aam
clc
es
dec
je
jno
add
daa
clc
and
add
add
jle
clc
jge
add
sbb
mov
add
cmp
clc
cs
bound
add
clc
add
add
stos
adc
in
pop
jb
add
out
xchg
scas
loope
rorl
data16
mov
add
inc
clc
aas
outsl
cmp
clc
out
aas
xchg
cmp
add
add
shll
jno
add
push
mov
and
add
cwtl
cmp
je
add
out
mov
clc
jno
add
cmp
add
out
popl
clc
notl
test
pop
clc
ret
clc
xchg
pop
stos
js
fldt
es
popa
add
mul
clc
push
xchg
stos
jnp
add
add
or
fcomps
lods
jmp
in
mov
pop
clc
xor
xchg
mov
adc
add
cli
fsubrs
mov
hlt
or
add
pop
cmp
add
mov
add
lods
adc
add
add
mov
clc
or
clc
pop
dec
jno
add
add
add
add
add
ljmp
push
and
add
add
clc
mov
add
add
add
jne
and
arpl
add
mov
add
cmp
clc
cmc
adc
add
mov
sbb
dec
push
add
loopne
es
mov
clc
xor
xchg
cmp
aad
mov
add
push
and
inc
add
mov
clc
test
dec
jne
mov
clc
mov
testb
add
add
xor
jo
add
out
sub
mov
clc
dec
popf
scas
je
sub
add
sahf
adc
add
and
shll
lods
popf
test
sbb
clc
shrb
add
xchg
pushf
xor
add
push
add
pop
lret
clc
ret
clc
pop
rol
clc
roll
clc
mov
clc
jo
add
push
add
push
scas
pop
cmpsb
clc
jmp
xbegin
add
ficompl
fisttps
inc
clc
sub
push
xchg
lret
sahf
clc
iret
inc
add
xchg
mov
pushf
fimull
clc
lock
or
jo
add
add
inc
clc
and
add
inc
clc
cmp
push
add
faddl
std
loop
fldcw
inc
add
or
loope
push
xor
add
sbb
fdivs
dec
aad
clc
loop
adc
xchg
xor
cmp
add
pop
add
or
mov
aaa
dec
xabort
sar
xchg
cmc
xchg
or
jle
add
sub
clc
fwait
or
add
add
jnp
mov
add
xor
add
sar
clc
jecxz
test
cwtl
sbb
fcmovb
clc
or
and
add
jns
add
stc
push
and
add
clc
mov
clc
pop
inc
add
inc
clc
mov
sar
lcall
fildll
sub
aam
inc
add
jp
add
insl
or
clc
test
and
mov
aaa
stos
adc
add
pop
imul
add
push
out
inc
add
adc
pop
mov
idivb
pop
push
add
movsl
clc
xbegin
add
into
and
jecxz
mov
xchg
cmp
clc
xchg
in
data16
or
aaa
dec
jp
xchg
clc
in
pop
clc
mov
inc
add
adc
add
jns
clc
daa
clc
popf
or
add
mov
add
clc
ret
clc
sar
add
push
dec
jae
add
dec
int3
lcall
js
jle
mov
clc
mul
clc
pop
inc
clc
fbld
add
jns
push
add
pop
out
mov
mov
cmp
add
jle
push
inc
add
aad
clc
or
add
mov
bnd
mov
jmp
mov
jbe
and
add
add
inc
add
test
add
popf
std
xor
jae
add
lea
clc
stos
mov
enter
dec
mov
xchg
jbe
mov
clc
ja
pop
mov
lret
pushf
jno
add
es
add
add
sub
add
lea
icebp
pop
aaa
rcrl
add
jb
add
sub
push
lock
in
mov
add
sbb
out
sbb
clc
or
xchg
sbb
add
scas
mov
loop
aad
clc
aam
add
adc
add
pop
mov
add
clc
sub
xchg
daa
clc
cmpsb
clc
call
mov
sbb
aas
dec
pop
xabort
cmp
mov
pop
inc
add
popa
add
aad
dec
jg
clc
cmp
push
add
pop
dec
jle
data16
faddl
in
dec
xor
add
dec
cmp
add
fldcw
mov
add
add
into
in
insb
xchg
sti
jle
loope
inc
add
je
mov
mov
inc
clc
push
add
cmp
mull
adc
clc
pop
xchg
addr16
test
fiadds
add
pop
pop
int
imul
and
add
xchg
out
cmp
push
clc
es
out
scas
mov
clc
lahf
adc
add
pop
mov
stos
jg
sbb
add
sahf
add
add
clc
icebp
sbb
dec
inc
clc
popf
add
add
pop
pop
test
bound
add
aaa
ret
clc
mov
pop
imul
push
sbb
sub
add
add
fiaddl
or
add
add
in
cmpsl
clc
xchg
outsl
or
add
pop
daa
clc
jg
clc
mov
add
jno
add
xor
add
leave
xchg
cmp
out
sub
pop
cmc
mov
clc
pop
and
add
xor
add
cmp
mov
clc
mov
mov
pop
iret
in
cmp
clc
das
inc
add
test
mov
clc
out
xchg
cmp
sbb
out
gs
outsl
mov
cld
incb
js
mov
cmpsb
clc
xor
fdivrp
pop
clc
push
add
inc
clc
xlat
push
and
add
stos
xchg
lcall
jle
dec
aaa
mov
clc
arpl
add
inc
clc
clc
fwait
cmp
int3
int3
mov
clc
rcr
test
sbb
add
inc
add
xchg
or
or
or
imul
sahf
cmp
pusha
add
and
add
clc
mov
repnz
divb
add
cmp
push
cmp
add
jg
clc
cmp
add
sub
movsl
clc
cmp
add
inc
clc
mov
and
xor
add
add
fxch
aas
jp
add
push
cmpsl
clc
jp
inc
clc
xchg
cmp
addr16
ret
clc
fldcw
clc
insb
mov
add
imul
adc
sbb
clc
out
movsb
clc
xabort
je
mov
cmc
or
jo
add
nop
and
add
outsl
aas
mov
pop
mov
out
adc
cmp
or
clc
sbb
or
out
mov
clc
notl
add
mov
lock
arpl
add
inc
clc
pop
test
fs
sar
add
lods
in
loope
ja
jle
fnstcw
pop
jne
pop
cmpsb
clc
sub
dec
test
lret
leave
das
add
pop
mov
and
add
pushf
mov
clc
imul
dec
jmp
clc
test
add
add
add
pop
cmp
ljmp
jae
add
add
dec
or
add
xor
add
jecxz
outsl
sbb
clc
jl
pop
push
add
xor
add
nop
test
mov
clc
mov
cli
sbb
cmp
xor
cmp
mov
mov
sbb
out
xchg
xchg
inc
add
mov
or
clc
mov
pop
cmc
mov
repnz
out
rcll
add
add
fisubl
clc
mov
inc
clc
push
dec
sarl
repnz
mov
hlt
fdivrl
ss
mov
pusha
add
dec
or
add
add
out
sub
clc
seto
mov
add
cmp
clc
pusha
add
nop
fmull
add
call
add
xchg
dec
and
mov
cmp
outsl
insl
fucomip
ljmp
cmp
or
loopne
cli
rcll
add
and
stos
mov
add
add
stc
cmp
ret
clc
xchg
fidivs
aad
mov
adc
add
cmp
mov
in
pcmpgtb
out
mov
in
test
clc
jmp
xor
add
pop
clc
mov
push
add
pop
lcall
push
jp
xor
add
clc
or
clc
and
add
adc
add
pop
mov
into
cmpsl
clc
xbegin
add
clc
sub
clc
movsl
clc
sbb
clc
jmp
cmp
mov
arpl
add
add
cmp
sbb
nop
inc
clc
mov
add
xchg
test
jle
add
js
clc
leave
mov
clc
cmp
ret
clc
add
add
add
xabort
mov
clc
test
sarb
clc
push
add
bound
add
clc
arpl
add
clc
sarl
nop
push
or
and
add
clc
mov
adc
add
movsb
clc
fwait
push
clc
repnz
mov
sarb
testb
adc
add
and
mov
add
add
daa
clc
repnz
add
in
xchg
pop
and
sub
xor
and
and
add
out
dec
jne
and
add
pop
out
pop
clc
cld
inc
clc
scas
xor
dec
add
addr16
or
pop
pop
int
clc
sbb
lods
js
sub
into
sub
pop
push
add
push
cmpsb
clc
xchg
xchg
push
add
adc
add
add
dec
clc
and
add
cmp
cmp
xor
add
pop
sar
inc
add
int
add
adc
ja
clc
jecxz
xbegin
dec
lcall
jns
cs
jl
pop
outsl
or
ret
add
clc
sar
pusha
add
fildl
add
gs
xchg
and
sub
fs
test
sub
gs
fwait
lret
xor
clc
jb
add
add
gs
sbb
cmp
dec
xor
faddp
clc
fistl
add
push
jb
add
clc
movsl
clc
cs
bound
add
sub
add
icebp
mov
test
and
add
in
sub
pop
jle
add
jns
add
in
or
add
push
mov
add
ljmp
add
add
outsl
or
cld
xor
insl
fistpll
and
into
movsb
clc
leave
out
inc
clc
xchg
aaa
fwait
rcll
ret
clc
fisttps
adc
mov
clc
xchg
sbb
mulb
jmp
cmpsl
clc
sub
cmp
add
ljmp
clc
adc
add
clc
add
mov
mov
mov
clc
pop
sahf
pop
loop
lods
call
xor
add
mov
clc
dec
cmp
add
push
pop
xor
add
add
xlat
sbb
and
add
pop
mov
adc
add
add
mov
push
mov
out
mov
inc
add
inc
add
mov
clc
jno
add
dec
clc
mov
add
into
insb
push
add
xchg
jmp
clc
lret
adc
add
jg
je
pushf
aas
in
pushf
clc
push
adc
add
mov
test
clc
divb
test
pop
je
ljmp
fs
into
cmc
or
sbb
lret
add
clc
imul
push
mov
clc
jmp
lret
dec
pop
clc
cmp
sbb
add
add
imul
pop
sbb
add
add
call
and
dec
mov
add
clc
ss
xabort
mov
or
fwait
iret
mov
imul
add
clc
dec
pushf
pop
cmp
mov
add
clc
fadds
sub
add
clc
mulb
add
xchg
jne
cli
mov
mov
clc
xor
add
inc
add
or
fidivs
add
jge
clc
mov
clc
pop
mov
clc
pop
out
xchg
jge
clc
or
add
cli
mov
clc
test
mov
add
inc
clc
hlt
cmp
adc
add
add
push
pop
clc
test
cltd
jo
add
stos
xchg
sbb
jb
add
clc
jns
int
clc
add
add
xbegin
clc
pop
inc
clc
stc
jnp
cmp
out
fimull
add
sar
push
clc
xchg
xlat
add
add
add
and
stos
fadds
add
into
js
das
stc
imul
adc
add
clc
xchg
scas
leave
mov
mov
clc
pop
and
mov
add
mov
pop
pop
imul
clc
pop
mov
clc
popa
add
add
add
add
adc
add
cmpsb
clc
xchg
cmp
lcall
mov
pop
inc
clc
clc
add
push
add
mov
add
dec
fsubs
clc
cmp
sbb
adc
add
and
add
clc
imul
xchg
in
xchg
and
add
cmpsb
clc
idivl
push
add
mov
or
sub
mov
cmp
outsl
adc
add
add
add
clc
mov
pop
cmp
lret
clc
cwtl
sbb
loope
jl
add
mov
add
shlb
add
and
push
add
imul
add
repnz
out
gs
cmp
clc
mov
test
rcrb
fbstp
clc
stc
mov
clc
cmp
outsl
icebp
inc
add
and
fucomip
flds
rcrb
clc
int3
hlt
jnp
add
daa
clc
fs
mov
jmp
xlat
cmpsb
clc
sar
sbb
enter
add
mov
ret
clc
lret
hlt
inc
clc
aaa
insl
mov
int3
out
or
out
outsb
xbegin
lods
pop
xchg
mov
adc
add
add
sbb
fnstsw
mov
mov
add
cmp
clc
int
fistps
call
add
xor
add
scas
add
add
add
fisubrs
cli
in
mov
loope
dec
mov
loop
stc
mov
js
pop
js
lods
add
in
es
test
fadds
pop
cli
fwait
pusha
add
ljmp
mov
xor
add
repz
add
xbegin
clc
xchg
out
fsubl
add
add
add
roll
inc
add
jge
add
cmpsl
clc
and
add
clc
ret
out
xchg
decl
mov
cmovns
add
add
cmp
add
add
nop
jne
clc
xor
add
xchg
cmpsl
clc
shll
add
inc
clc
sub
stos
cmc
xchg
sbb
clc
push
clc
je
xchg
sub
aaa
and
add
out
in
in
in
xabort
xor
daa
clc
xor
xor
add
add
add
add
in
sub
dec
ds
clc
jmp
aas
jle
clc
mov
cmc
pop
gs
inc
clc
sbb
clc
outsb
push
clc
xchg
shlb
push
or
clc
xchg
fmul
arpl
add
sub
jbe
nop
push
test
dec
rolb
add
lods
stc
mov
mov
insb
data16
mov
add
or
add
scas
outsl
enter
enter
mov
add
test
arpl
add
frstor
sbb
inc
clc
mov
mov
add
xchg
xchg
mov
clc
and
xchg
int
repnz
mov
int
add
pop
shrl
and
add
add
or
adc
xchg
pop
pop
aad
add
add
and
add
clc
mov
and
add
add
imul
add
mov
xchg
popa
add
sub
inc
add
cmp
inc
clc
xor
add
sar
add
aad
arpl
add
add
cmp
clc
mov
adc
add
add
xchg
cmp
test
ja
addr16
pop
clc
cmp
add
fimuls
and
add
cmp
cwtl
in
hlt
scas
jne
inc
clc
addr16
out
cwtl
cmp
dec
cmp
clc
jnp
in
cmp
clc
or
add
lret
mulb
lret
add
clc
ljmp
clc
xchg
push
mov
sbb
fucomp
mov
inc
add
jmp
push
clc
pop
cmpsl
clc
ds
lods
and
add
add
jne
add
cld
and
add
jg
add
mov
pushf
ret
clc
mov
cmp
add
inc
add
add
add
add
dec
xor
add
clc
mov
test
add
add
mov
fsubs
cs
mov
data16
xor
clc
imul
mov
xchg
mov
mov
push
das
addr16
mov
clc
add
lret
hlt
cli
push
cltd
in
dec
pop
hlt
or
clc
adc
add
dec
sahf
es
mov
test
cli
adc
add
xchg
adc
add
add
ljmp
pop
movsl
clc
dec
adc
add
loop
jnp
cli
inc
clc
scas
aam
jle
sahf
mov
clc
push
aam
in
sbb
add
xor
add
clc
and
and
add
iret
cltd
mov
pop
clc
aam
clc
cmp
or
inc
add
addr16
mov
mov
jle
clc
jne
add
mov
xchg
outsl
int
dec
ret
clc
cld
fdivrs
add
push
or
add
add
mov
jp
pop
iret
test
add
sbb
jo
add
clc
daa
clc
mov
clc
outsb
pop
xor
add
mov
push
add
call
clc
push
clc
aam
add
int3
movsb
clc
nop
add
add
xchg
in
inc
add
xor
clc
jae
add
add
mov
leave
and
add
xchg
ret
clc
jne
iret
cmp
ss
inc
add
mov
inc
add
pop
lret
adc
add
fs
sar
sar
nopl
cld
dec
mov
addr16
adc
pop
clc
fcompl
xabort
or
push
jne
clc
ds
sub
add
movsb
clc
adc
add
in
add
add
add
clc
ss
xor
add
mov
push
add
add
mov
clc
pop
jp
add
mov
add
testb
add
jle
mov
add
adc
popf
push
add
push
add
nop
int
stc
mov
add
dec
sbb
add
stc
push
fnstenv
add
jp
call
mov
cmp
jb
add
clc
adc
add
cmpsl
clc
imul
popa
add
xor
mov
cmp
outsl
int
call
arpl
add
inc
clc
jns
shrl
ret
clc
and
cwtl
pop
clc
addr16
fmuls
add
add
imul
add
jbe
outsb
mov
add
faddl
and
mov
cld
mov
cmp
in
adc
add
mov
clc
cmc
movsb
clc
push
mov
cwtl
dec
adc
add
clc
cltd
pop
clc
add
add
xchg
mov
in
xor
add
add
cmc
out
sub
movsb
clc
into
out
pop
fcmovnu
lods
mov
pop
add
add
clc
sbb
clc
ficoml
clc
dec
out
in
addr16
ss
add
cmp
add
xor
add
enter
rcr
add
add
dec
clc
cmp
or
add
mov
mov
bound
add
cmp
aad
mov
popf
outsl
test
iret
mov
pop
int3
in
xchg
push
add
adc
add
or
or
inc
add
cmp
sbb
or
clc
mov
pop
push
add
lret
mov
leave
cwtl
xabort
lret
push
push
mov
mov
int3
cli
inc
add
clc
out
adc
add
mov
mov
inc
clc
add
add
fstp
jmp
clc
ljmp
into
popf
out
imulb
add
gs
xor
add
nop
daa
clc
push
clc
push
fldt
movsl
clc
mov
add
jmp
cmp
icebp
cmpsb
clc
pop
pop
movsl
clc
aam
clc
lods
mov
add
add
add
mov
adc
add
clc
enter
inc
add
clc
aad
mov
je
clc
repnz
mov
shl
fs
clc
cltd
pop
repnz
pop
mov
push
add
lods
sar
xchg
clc
lret
add
clc
std
and
clc
fwait
out
out
mov
jle
add
cmp
clc
ret
sbb
add
add
clc
adc
add
and
add
sbb
add
ss
clc
and
add
lcall
jbe
rcl
dec
add
add
clc
xor
add
clc
shll
jo
add
clc
ffreep
clc
xchg
js
call
mov
clc
mov
aad
pushf
mov
jmp
sbb
das
cmp
aaa
push
add
xlat
mov
push
clc
cmpsl
clc
and
add
jmp
add
insl
lods
push
add
xabort
fdivr
inc
add
dec
add
add
inc
clc
neg
clc
aad
clc
gs
xor
clc
inc
clc
lret
cmp
add
jecxz
or
fisubs
clc
fucomp
fwait
decb
add
add
cmp
addr16
cmc
in
mov
add
xchg
push
jb
add
sahf
adc
add
clc
insb
xchg
pop
js
mov
clc
sbb
clc
cmpsb
clc
sbb
clc
or
jno
add
clc
add
add
pop
add
add
enter
dec
push
clc
in
jne
clc
sbb
add
mov
pop
movsl
clc
cmp
insb
fstl
add
sub
sub
loop
push
add
int
add
insl
pop
jmp
add
add
mov
add
cmp
int3
lods
dec
adc
add
fwait
insl
or
fcoms
add
add
clc
inc
clc
inc
add
mov
clc
push
sar
mov
and
add
fadd
clc
call
out
push
xchg
sub
test
push
outsl
out
leave
pop
imul
add
add
das
das
inc
clc
sbb
jae
add
xchg
scas
pop
clc
push
add
inc
clc
clc
fisttps
lret
xor
add
pop
cmp
mov
jb
add
add
out
mov
outsb
fstpt
lret
cmp
clc
and
add
add
mov
pop
clc
sub
add
clc
hlt
jmp
je
negl
pusha
add
mov
pop
aam
add
adc
add
insb
testb
add
add
add
add
sub
add
add
add
add
add
daa
clc
xchg
fbld
jo
add
pop
push
jns
mov
or
push
add
fmuls
inc
clc
jae
add
popa
add
jge
push
add
jle
jmp
mov
arpl
add
sub
add
jno
add
add
add
out
lock
add
clc
pop
clc
push
inc
clc
push
add
xor
add
jge
clc
je
clc
sbb
lret
cmpsb
clc
out
inc
add
gs
mov
pop
clc
insb
data16
sti
in
dec
pop
push
test
xor
add
add
stc
sub
and
add
xabort
clc
jge
sub
mov
xchg
pop
ret
clc
in
xchg
aad
clc
mov
imul
jg
clc
jg
adc
add
sub
clc
or
add
clc
insb
fadd
clc
jmp
es
gs
pop
push
loopne
into
aad
fdivp
inc
add
out
cmpsb
clc
push
clc
inc
clc
mov
into
mov
insb
je
loopne
popa
add
pop
clc
sahf
push
ficoms
clc
push
mov
add
jo
add
xor
add
add
fs
pushf
dec
and
add
rorb
movsb
clc
inc
add
in
out
test
xchg
cmpsb
clc
adc
add
jbe
clc
adc
add
mov
xchg
adc
add
data16
js
clc
insb
jne
stos
pop
pop
dec
bound
add
pop
in
cltd
ljmp
gs
dec
cmp
or
sub
hlt
mov
clc
fisubl
add
clc
mov
add
inc
add
test
in
pop
bswap
out
aaa
mov
pop
inc
clc
sub
add
pop
pop
sbb
sbb
xor
clc
jns
clc
mov
dec
movsl
clc
xlat
ds
psllw
add
push
mov
aad
dec
sbb
clc
push
clc
das
gs
pushf
xor
add
in
jg
pop
add
adc
add
out
in
cmpsl
clc
inc
add
mov
jo
add
clc
fwait
pop
xor
add
ret
clc
sub
clc
incl
push
add
icebp
dec
xchg
xchg
inc
add
rorb
mov
adc
add
adc
add
clc
xabort
clc
sbb
dec
mov
scas
xchg
xchg
sbb
clc
inc
clc
or
inc
add
mov
imul
inc
clc
pop
jle
add
in
xor
add
clc
cmp
icebp
cmp
sbb
add
aad
fidivl
cltd
cmp
clc
outsl
sbb
add
in
and
add
jne
add
loope
fcomps
pop
add
shrl
add
loope
sar
daa
clc
dec
mov
imul
jns
inc
add
gs
enter
or
xchg
jnp
mov
dec
xchg
sub
add
int3
cwtl
inc
add
es
pop
clc
sub
lea
sbb
mul
clc
mov
add
jecxz
and
add
out
inc
add
xchg
stos
iret
lahf
push
or
add
adc
add
cmp
clc
push
mov
pusha
add
sti
jle
push
add
pop
cli
mov
jp
clc
cltd
add
add
add
ds
ficomps
clc
gs
mov
mov
sub
pop
pop
cmp
pop
pop
clc
outsb
mov
fiaddl
clc
inc
clc
mov
movsl
clc
ja
add
add
sbb
pusha
add
push
clc
push
adc
add
xchg
mov
test
gs
rcr
scas
pop
adc
add
add
dec
xor
clc
sub
popf
mov
loope
pop
clc
sub
out
test
jb
add
cmp
clc
mov
ret
clc
adc
add
inc
add
push
xchg
dec
inc
add
lret
push
pop
scas
popa
add
sub
xchg
sbb
add
clc
xor
cwtl
mov
hlt
mov
clc
ds
jp
clc
inc
add
popf
inc
clc
cmp
pop
add
add
cli
push
xchg
addr16
cmp
and
add
clc
shlb
div
stos
push
js
clc
repz
add
xchg
sbb
adc
add
xchg
das
mov
icebp
iret
data16
jge
sar
sar
add
je
push
fisttpl
mov
mov
mov
pop
adc
add
mov
sar
dec
push
repz
enter
add
add
xchg
inc
add
test
movsb
clc
push
sub
xabort
clc
cmp
js
iret
es
outsb
jecxz
jbe
lods
dec
sbb
clc
sar
jmp
rcrl
fistpl
cs
and
add
add
push
aad
pop
stos
mov
sub
sbb
mov
enter
add
or
add
clc
xor
add
fst
fsubrl
pop
mov
ret
clc
in
je
popa
add
pop
sbb
clc
push
add
je
clc
push
add
jle
clc
mov
dec
in
in
iret
incl
clc
mov
clc
repz
pusha
add
and
add
int3
add
add
add
pop
and
add
clc
sbb
mov
cmp
add
bound
add
out
mov
fildl
adc
add
mov
or
add
cli
dec
dec
test
aad
clc
xor
add
clc
pop
cmp
ret
add
and
add
imul
sbb
in
pop
stos
fdivrl
lea
xor
add
add
jo
add
inc
clc
cmp
sub
add
push
lret
push
add
mov
push
dec
jmp
mov
leave
sbb
ljmp
add
clc
in
mov
adc
add
fdivs
add
dec
jnp
sti
shlb
pop
call
clc
and
add
add
sar
add
imul
sub
mov
insb
test
pop
push
and
add
add
xchg
insb
adc
add
pop
clc
lret
repz
dec
jns
fists
cmc
mov
xchg
add
add
cmp
cld
xchg
stos
jmp
loope
lret
add
aas
mov
clc
xbegin
add
dec
shll
add
add
mov
add
inc
clc
xor
add
clc
pop
xchg
jo
add
sub
clc
imull
add
jb
add
add
add
popa
add
adc
add
add
fdivs
add
xchg
mov
movsb
clc
jno,pt
add
add
push
popa
add
push
add
adc
add
rcrb
ja
iret
and
and
add
adc
jecxz
jno
add
xchg
jecxz
pushf
dec
outsl
outsl
aas
in
mov
in
mov
add
pop
mov
and
add
xchg
in
lock
mov
clc
pop
shlb
clc
call
add
jmp
iret
dec
lcall
mov
rcrb
push
add
je
jno
add
icebp
dec
dec
je
add
add
push
add
push
cmp
std
pop
sar
mov
clc
jmp
mov
sbb
add
test
clc
into
fdivl
add
sar
inc
clc
scas
push
out
mov
clc
mov
clc
in
cmp
and
add
add
jns
mov
sbb
pop
lcall
clc
jg
es
paddsw
cmc
dec
mov
jg
rorl
outsb
jb
add
clc
jns
add
sbb
cmp
sub
sar
fst
cmpsb
clc
aaa
popa
add
mov
lods
inc
add
push
add
mov
clc
xchg
mov
sti
xchg
mov
push
add
mov
clc
push
clc
add
or
aad
push
std
mov
arpl
add
arpl
add
pop
insb
scas
and
add
lods
cmp
mov
aas
lock
xchg
dec
pop
in
inc
clc
jle
add
adc
add
xchg
fs
adc
add
cwtl
test
sub
aam
xchg
and
add
dec
jmp
clc
ret
in
xor
add
clc
jb
add
incl
add
mov
clc
jg
add
sbb
and
and
add
add
xchg
cmp
mov
add
pop
iret
gs
iret
push
repz
pop
mov
insl
cmp
loopne
jl
xchg
sar
clc
inc
clc
jg
dec
push
push
xbegin
sar
pop
xor
add
lods
mul
clc
mov
std
int
push
add
out
add
shrl
lcall
add
inc
add
mov
push
add
sbb
add
repnz
sbb
data16
sub
popf
cwtl
movsb
clc
cltd
dec
xchg
mov
sar
clc
popf
push
jb
add
ret
out
lea
xchg
cmpsl
clc
repz
sub
or
add
push
data16
add
add
clc
lcall
add
mov
mov
cmp
xchg
jmp
push
clc
lret
add
inc
add
push
lcall
mov
cli
inc
add
in
dec
adc
mov
ja
stos
cmp
mov
add
jb
add
imul
add
push
xlat
adc
clc
sar
data16
lahf
pop
inc
add
mov
dec
clc
push
repnz
mov
add
mov
clc
out
mov
add
leave
pop
in
or
icebp
inc
add
adc
cld
push
clc
xchg
fldl
add
xor
add
xlat
fwait
lahf
xor
add
clc
jno
add
dec
shrb
xabort
sbb
add
ljmp
add
xchg
sbb
repz
add
lods
mov
sub
sub
mov
cmp
jle
add
pop
push
add
in
cmp
push
add
loopne
inc
add
leave
jae
add
stc
sti
flds
decb
add
out
and
add
mov
in
and
add
jle
clc
inc
add
lret
xchg
sub
fs
mov
adc
add
push
jle
scas
in
fcmove
out
into
imul
add
adc
cwtl
xchg
out
xor
add
mov
clc
add
push
mov
sbb
iret
mov
add
cmp
xabort
clc
and
add
inc
add
rclb
sbb
add
clc
jne
clc
add
add
pop
rorb
out
mov
add
outsl
add
lods
outsl
popa
add
xchg
lods
lret
xchg
push
add
dec
or
pop
xor
add
inc
add
push
clc
jb
add
add
lods
cmp
cs
inc
clc
pop
out
mov
add
sbb
leave
ret
clc
ret
clc
out
push
ret
jge
clc
fidivl
add
and
lock
loopne
mov
or
clc
jl
pop
inc
clc
or
jns
add
fldt
xchg
pop
sahf
sub
sbb
xchg
in
outsl
or
lahf
xor
pushf
push
add
mov
cltd
add
add
clc
and
add
add
mov
push
jle
clc
into
movsl
clc
jns
add
inc
clc
push
pop
push
xbegin
imul
jp
insb
scas
inc
clc
push
insl
movsl
clc
pop
push
sbb
mov
jb
add
sub
pop
cmp
inc
clc
out
testb
jl
loopne
sbb
ja
clc
test
push
push
add
adc
add
loope
fstpl
loopne
jo
add
loop
adc
add
clc
cmp
dec
jnp
add
aaa
cmp
cmpsl
clc
push
pop
jp
xor
add
xchg
bound
add
add
jno
add
xor
add
mov
test
add
sub
and
add
add
aaa
mov
push
es
add
add
out
jnp
clc
add
add
clc
sub
clc
add
add
add
lret
pop
cmp
leave
movsl
clc
sbb
add
add
add
bound
add
clc
inc
add
loop
in
add
add
add
bound
add
or
fisubrl
mov
mov
rcll
add
clc
mov
in
xabort
or
movsbl
sub
into
cwtl
pop
pop
mov
clc
scas
mov
add
xchg
push
fs
mov
clc
sbb
add
and
add
sbb
mov
jp
add
jne
jl
add
add
add
xlat
sub
add
mov
in
jp
add
dec
push
mov
pop
mov
and
sub
add
adc
add
sub
xchg
ja
inc
add
and
add
add
clc
adc
cmp
sbb
aas
pop
shll
add
add
ret
add
fsubrs
leave
cmc
dec
jmp
imul
jns
adc
adc
add
cmovns
add
clc
push
clc
xchg
icebp
fimuls
imul
jnp
inc
add
inc
clc
push
adc
push
aad
sub
adc
add
ss
cwtl
aam
into
pusha
add
fs
pop
loopne
jno
add
add
add
add
addr16
fs
push
nop
adc
add
jl
xchg
or
mov
clc
jecxz
xchg
mov
add
add
add
inc
add
mov
add
lahf
mov
dec
ret
hlt
js
and
add
enter
push
add
hlt
push
add
leave
push
clc
xor
clc
iret
dec
add
add
jbe
add
std
mov
add
add
xor
add
mov
cmp
clc
xchg
sub
clc
dec
das
out
std
mov
clc
nop
imul
add
add
icebp
pop
es
cltd
fs
push
add
lcall
clc
jns
xchg
mov
sbb
and
or
clc
fnstcw
push
add
insl
cld
ja
clc
das
and
add
icebp
cmp
mov
add
dec
mov
dec
or
ja
mov
inc
add
mov
xchg
cmp
test
ljmp
insl
push
ja
cmp
add
test
xchg
call
add
dec
cmp
pop
adc
add
xchg
push
das
dec
mov
add
pop
jb
add
dec
pop
xabort
jns
aad
clc
mov
clc
pop
hlt
xlat
mov
clc
jge
add
mov
leave
sbb
jmp
sbb
dec
dec
cmp
pop
popf
lods
lret
mov
and
add
lahf
cmp
leave
loopne
jnp
jmp
sahf
and
hlt
add
add
mov
pop
lcall
clc
daa
clc
in
mov
clc
adc
pop
mov
in
adc
add
call
outsb
clc
and
add
popf
inc
clc
pusha
add
xchg
xor
add
mov
or
clc
jns
jo
add
add
into
sub
add
xadd
mov
adc
add
ret
lcall
add
add
mov
clc
and
add
add
outsb
inc
clc
outsb
xchg
cwtl
sub
clc
xor
pop
clc
bound
add
clc
fisubl
out
cmp
int
sbb
push
sub
xor
add
fs
dec
arpl
add
clc
xor
add
adc
add
scas
shll
das
pushf
inc
clc
cmpsb
clc
lock
cmpsl
clc
movsl
clc
js
es
xchg
loop
push
pop
push
jmp
push
inc
clc
ljmp
jns
add
mov
add
pushf
lods
aad
clc
or
dec
xor
sahf
fs
and
add
clc
dec
rdtsc
add
insl
fnstcw
mov
das
cmpsb
clc
outsb
mov
add
out
adc
add
mov
push
clc
cmp
xchg
popa
add
in
pop
clc
leave
inc
clc
inc
clc
jmp
clc
push
clc
jle
fistpll
and
add
clc
fidivs
add
js
add
mov
add
cmp
cmp
adc
dec
push
add
pop
clc
pop
add
add
and
add
fsubs
add
imul
insb
pop
clc
pop
cmp
add
mov
add
insl
mov
data16
addr16
fwait
aam
add
cmp
sbb
clc
fnstcw
add
sub
enter
imul
imul
clc
cmpsb
clc
ljmp
mov
add
hlt
cmp
fwait
aas
inc
clc
scas
loope
int
push
out
add
add
add
movsl
clc
jns
sar
xchg
cmpsb
clc
not
sub
add
mov
into
mov
test
popa
add
mov
stos
jmp
push
add
jp
add
add
add
clc
dec
push
xbegin
clc
xor
push
loop
lret
cmp
pop
movsl
clc
and
add
add
js
push
add
pusha
add
mov
clc
cmp
mov
clc
mov
clc
pushf
pop
add
add
push
inc
clc
push
xchg
sub
clc
jne
xor
clc
fwait
cmp
clc
out
ljmp
jg
arpl
add
fmul
and
add
clc
sbb
clc
add
add
clc
jnp
jae
add
add
adc
add
mov
add
xchg
adc
add
push
clc
fs
scas
sbb
clc
dec
movsl
clc
or
mov
and
add
add
int3
adc
add
add
cmp
push
add
inc
add
jbe
mov
push
fildl
mov
sti
pop
in
xchg
inc
add
xbegin
jp
or
add
push
fyl2xp1
dec
sub
clc
jge
add
and
sbb
push
cmp
je
inc
add
mov
push
clc
shlb
clc
dec
adc
add
cmp
fsts
xchg
cwtl
or
aas
mov
jno
add
clc
movsb
clc
xchg
cmp
jecxz
inc
clc
add
add
add
push
add
daa
clc
cmp
mov
add
mov
ficompl
cmp
xchg
or
lret
ud0
adc
jnp
add
insb
std
lahf
pop
clc
popa
add
or
xor
add
iret
cmp
push
clc
mov
inc
add
jge
add
call
add
xchg
sar
fdivs
xor
xor
add
add
push
add
jl
rcll
test
call
clc
sahf
pop
xchg
jecxz
fsub
clc
aam
insl
loop
mov
dec
and
add
pop
cmp
inc
add
add
xchg
fists
add
stc
sbb
insb
sahf
pop
cmp
add
test
insl
fs
mov
add
bound
add
clc
stc
or
hlt
loope
enter
add
in
mov
xchg
xor
add
clc
stc
add
adc
add
clc
gs
fsubp
clc
jnp
xchg
jae
add
clc
aam
sub
inc
clc
cmp
push
xchg
push
add
or
loope
inc
add
in
jnp
mov
xchg
xor
add
pop
popf
pop
cmp
jge
and
test
add
call
add
push
sbb
dec
pop
jg
into
inc
add
sbb
clc
xchg
repnz
add
fs
test
cmpsb
clc
mov
sub
add
test
clc
js
add
lret
pop
clc
cmp
js
shrl
iret
adc
cmp
clc
xbegin
add
lea
dec
lahf
pop
sarl
push
clc
jns
clc
push
je
clc
push
sti
push
in
aam
gs
out
out
adc
add
cmp
lea
cmp
aam
insb
ja
cmp
mov
xlat
clc
mov
fcomip
movsb
clc
lea
jge
sar
push
push
iret
leave
ss
clc
add
inc
add
aas
add
mov
cmpsb
clc
adc
mov
jmp
mov
add
inc
clc
pop
pop
filds
xor
das
fmuls
lret
or
add
mov
push
xchg
pusha
add
mov
cmp
add
clc
xlat
and
add
clc
ret
clc
daa
clc
insb
aaa
test
xor
add
dec
rcll
add
add
mov
bound
add
bnd
clc
lock
pop
mov
clc
scas
pop
fs
jmp
jne
fildll
ret
push
add
pop
sub
mov
mov
cld
nop
imul
push
add
mov
clc
jno
add
shll
add
add
jo
add
mov
clc
adc
add
jg
clc
add
add
sar
add
iret
mov
add
pop
jno
add
add
add
add
aas
or
jmp
cmc
mov
test
push
add
clc
xchg
or
sarl
mov
sub
cmp
sar
jb
add
mulb
add
mov
jg
clc
cs
mov
icebp
push
add
std
int
add
xlat
mov
clc
dec
mov
mov
mov
add
add
inc
add
out
bound
add
cltd
jo
add
cwtl
or
xchg
xchg
nop
sar
inc
clc
mov
out
enter
xlat
pop
mov
mov
aad
outsl
sub
jmp
inc
clc
es
or
fst
in
xor
add
sub
out
frndint
out
xchg
xbegin
cmc
jne
add
mov
cmp
xabort
test
mov
push
clc
stos
jnp
in
nop
pop
cmp
clc
mov
jb
add
sbb
lea
sub
and
add
clc
mov
mov
cmp
fldt
mov
std
mov
sub
xchg
mov
out
sub
adc
pushf
int
mov
ret
add
das
dec
movsl
clc
int3
mov
add
cwtl
nop
xor
add
ret
clc
data16
fst
mov
insl
scas
dec
and
add
dec
out
iret
adc
add
jmp
int
dec
inc
add
loope
xor
add
add
cwtl
cmp
clc
mov
jb
add
out
mov
aam
loopne
adc
add
jmp
clc
jecxz
mov
or
or
sub
adc
imul
outsl
adc
xor
imul
iret
or
adc
add
out
dec
xor
pop
mov
int
add
dec
xbegin
mov
sub
add
cmp
es
jae
add
add
push
add
int3
and
add
lock
pop
xor
clc
sahf
pop
sti
jns
jbe
aad
dec
xchg
movsb
clc
dec
leave
inc
add
lea
clc
add
add
clc
es
dec
in
insb
pushf
hlt
xchg
outsb
sti
sar
movsl
clc
and
add
clc
fs
nop
push
inc
add
enter
clc
sub
clc
mov
adc
add
or
xchg
jb
add
xchg
add
add
add
clc
test
lahf
in
push
mov
stc
mov
int3
sbb
clc
aaa
loopne
arpl
add
or
add
jno
add
xor
dec
sar
add
outsb
xlat
jnp
adc
scas
imul
cltd
cmovne
mov
fwait
xchg
fsubr
inc
clc
xchg
bnd
add
xchg
mov
clc
fsubrs
loop
xchg
xchg
stos
or
add
stos
lods
sar
imul
clc
pop
mov
or
clc
xchg
aas
insb
or
mov
xor
add
add
out
jo
add
jg
clc
es
and
add
adc
add
and
add
adc
inc
clc
add
add
pop
mov
add
mov
jae
add
clc
cmp
dec
lret
jl
inc
clc
cmpsb
clc
pop
dec
ds
clc
iret
lods
lods
mov
push
in
je
jb
add
add
shrl
xbegin
clc
lcall
lcall
add
mov
cld
push
xor
mov
jmp
clc
pop
mov
dec
push
lea
aad
fisubrs
lods
ficompl
add
mov
mov
xchg
lods
mov
clc
add
add
clc
cli
lret
cmp
add
icebp
pop
nop
int3
ja
jecxz
nop
pusha
add
xor
add
clc
cwtl
cmp
mov
ret
clc
notb
rcl
mov
mov
jbe
add
add
outsl
jnp
mov
or
add
clc
inc
clc
cmpsb
clc
mov
xbegin
clc
notb
clc
ds
cld
jns
clc
dec
sar
clc
imul
scas
loopne
mov
mov
clc
xchg
lret
cmp
clc
in
notl
add
xor
add
or
add
push
add
xchg
mov
imul
mov
mov
cmc
nop
cmp
add
in
xchg
es
enter
mov
sarl
std
push
loope
loopne
xchg
imul
dec
mov
add
or
clc
pop
xor
add
bound
add
clc
repz
clc
test
add
sar
sub
cwtl
xbegin
cmpsb
clc
cmp
add
push
add
xor
add
clc
cmp
sar
or
testb
clc
notb
sar
jmp
add
sub
inc
clc
loop
cltd
mov
push
in
mov
jle
or
ds
clc
dec
ljmp
add
push
into
adc
lods
xor
xchg
in
sar
clc
mov
clc
dec
jg
clc
adc
jne
clc
int
clc
or
rol
clc
xchg
fdivrp
sahf
mov
daa
clc
push
clc
rcll
add
clc
sub
clc
push
xchg
nop
movsb
clc
xabort
clc
sbb
hlt
out
inc
clc
int
rcr
mov
add
insb
stos
add
add
imul
add
xchg
test
add
push
mov
mov
fnstsw
jge
sub
pop
mov
mov
clc
pop
pop
fstpl
cmpsb
clc
pop
ja
inc
clc
ds
data16
adc
add
and
add
mov
add
clc
aad
push
add
push
dec
xchg
xor
add
ret
clc
int
clc
jns
add
add
icebp
inc
clc
pop
sub
shrb
lea
mov
fstpl
je
cmp
cwtl
mov
dec
testl
xchg
aas
jmp
into
push
add
into
call
in
inc
add
scas
inc
clc
sti
xchg
xchg
mov
dec
sub
push
mulb
jg
xchg
lret
jno
add
fiadds
xchg
jle
test
add
cmpsb
clc
idivb
xchg
fisttpll
rorb
fldcw
stos
pushf
mov
jge
mov
clc
popf
repz
xchg
pop
mov
out
add
add
add
rcl
add
add
pop
pop
clc
mov
add
out
mov
mov
mov
adc
add
pop
jl
add
dec
fs
mov
add
clc
xabort
adc
add
add
clc
pop
xabort
mov
fdivrl
cltd
sbb
ds
loope
push
leave
iret
in
scas
mov
mov
mov
jmp
or
add
cltd
lods
cltd
add
add
add
out
push
cmp
data16
mov
fadds
jge
sahf
inc
clc
je
push
dec
mov
out
aas
outsb
lahf
cmp
mov
imul
push
int3
data16
test
or
pusha
add
push
inc
clc
mov
add
sub
pop
cmpsl
clc
push
add
inc
add
das
fst
mov
es
xor
add
push
sbb
clc
call
std
and
cmp
add
sbb
sahf
push
add
popf
rolb
in
push
clc
xor
add
enter
cmpsb
clc
mov
xor
add
clc
xor
add
add
push
add
cmp
mov
pushf
fcomps
incl
add
mov
cmp
imul
pop
pop
push
push
std
mov
or
clc
outsb
xchg
pop
cmpsl
clc
loop
lret
clc
and
add
loope
fisubl
add
add
pop
idivl
std
imul
push
sahf
mov
sti
cld
clc
dec
adc
add
jns
std
cmp
clc
xchg
hlt
stc
mov
cmp
add
sti
bound
add
popa
add
mov
add
mov
inc
clc
inc
add
loopne
rcll
add
js
inc
add
sbb
clc
shll
jg
fcomip
sar
sbb
clc
jae
add
clc
cmc
pop
clc
xor
add
clc
jae
add
mov
xchg
jne
test
dec
enter
mov
add
icebp
shrl
push
sbb
add
cltd
adc
add
clc
cmp
clc
lret
es
notb
add
add
add
sbb
clc
push
aas
fcomps
clc
add
add
arpl
add
hlt
cltd
cltd
push
add
loop
inc
add
inc
clc
imul
xchg
mov
into
or
sbb
shrl
mov
push
add
push
mov
add
ss
aam
add
cmpsb
clc
xchg
movsb
clc
insb
push
add
rcrl
cmpsl
clc
pop
testb
xabort
clc
aad
add
lret
mov
cli
and
mov
jb
add
xchg
mov
xchg
insb
stos
sahf
or
cmp
clc
std
mov
clc
fcomps
sbb
add
iret
dec
dec
fs
fcmovne
pop
leave
rdtsc
add
jg
add
sub
ljmp
clc
xchg
mov
pop
xor
add
clc
xchg
xchg
pop
sbb
pop
push
add
lock
inc
clc
mov
mov
test
sub
clc
div
inc
add
sub
fs
enter
xor
add
clc
inc
add
mov
hlt
add
clc
inc
clc
aad
mov
mov
call
rcll
add
add
or
mov
add
push
dec
je
clc
pcmpeqd
jg
xor
std
lret
add
add
push
add
in
and
add
add
add
mov
and
add
outsl
and
sar
data16
cmp
sbb
sbb
mov
add
fisubl
add
inc
add
inc
add
pop
or
outsl
cmp
fisubrs
push
add
sub
add
push
in
ret
add
rcll
movsl
clc
fidivrl
mov
popa
add
mov
or
add
out
testl
pop
cmp
mov
clc
stos
sar
or
adc
add
lock
in
clc
pop
rolb
add
add
add
incl
add
add
clc
mov
inc
add
lock
cmp
inc
add
xor
add
add
cmp
mov
inc
add
sarl
fwait
xbegin
clc
pop
jns
clc
jns
add
jmp
xchg
xor
aad
stos
jp
test
clc
stc
xor
sbb
fisubs
add
adc
add
add
sbb
clc
and
add
xor
add
mov
and
add
jmp
clc
add
xchg
lea
pop
clc
jge
add
add
clc
icebp
popf
mov
sarl
inc
add
cltd
test
clc
ret
clc
mov
mov
clc
pop
clc
xchg
stos
push
out
ja
clc
sub
xor
add
add
lea
pop
cmp
clc
repz
scas
imul
add
add
add
add
add
add
add
add
hlt
mov
clc
jmp
shll
push
scas
pushf
add
add
ss
add
mov
clc
cmpsb
clc
gs
mov
int3
aas
add
aaa
mov
leave
mulb
sbb
pushf
mov
clc
pop
mov
clc
cmp
add
add
movsb
clc
cmp
xlat
sub
xchg
clc
pop
clc
inc
clc
or
mov
add
clc
pop
push
cli
mov
add
clc
jmp
ds
lahf
add
add
jmp
xchg
jmp
ret
clc
call
mov
clc
clc
pop
or
add
mov
clc
pause
clc
push
add
jnp
clc
cmp
clc
or
sahf
xchg
xchg
and
add
add
xabort
clc
mov
int3
mov
add
fsub
clc
fisttpl
mov
repz
inc
add
ret
add
add
clc
aam
clc
in
xor
add
add
sub
clc
sahf
test
es
xchg
dec
sub
out
arpl
add
aaa
pop
clc
and
js
sbb
mov
pop
clc
dec
jle
mov
jno
add
add
enter
push
push
add
cld
loopne
fistpl
clc
pop
pop
jns
std
stc
lahf
cld
jbe
lahf
push
add
push
add
std
out
aad
testl
notb
add
jno
add
ror
imul
clc
outsb
in
es
inc
add
test
push
sar
je
sub
push
add
jecxz
inc
add
pop
mov
or
add
out
xchg
pop
ss
clc
adc
add
add
repz
add
incb
mov
popf
fistps
push
add
out
pop
clc
add
js
add
or
decb
imul
mov
test
in
cmp
add
scas
cli
test
movsb
clc
flds
clc
rolb
add
mov
dec
fistpl
pop
dec
call
ficomps
add
add
or
clc
mov
add
or
enter
movsl
clc
add
jg
addr16
sbb
mov
push
add
cltd
fadd
clc
mov
sbb
ds
iret
cmc
pop
pop
jl
clc
xbegin
add
daa
clc
mov
clc
jo
add
jge
iret
insl
dec
sti
cmp
fisubrs
dec
cmp
or
clc
cmp
xbegin
mov
lret
mov
lcall
pop
xor
add
sbb
pop
mov
clc
in
sub
cmp
and
xchg
test
pushf
add
add
clc
inc
clc
dec
adc
add
movsb
clc
clc
push
xchg
lods
in
mov
or
add
mov
adc
add
in
add
add
sub
cmpsb
clc
mov
outsb
test
cli
test
loopne
loop
ficoms
add
add
add
cmp
sar
add
nop
inc
clc
in
in
add
add
add
add
in
cmp
lods
jg
cmp
mov
ret
clc
and
add
jnp
add
add
sbb
adc
add
xchg
pop
bound
add
loopne
push
dec
adc
add
xor
add
mov
clc
pushf
popa
add
out
out
push
add
cmp
scas
popf
xchg
arpl
add
push
add
add
out
add
add
add
mov
mov
add
jo
add
pop
es
jp
or
add
in
cvtdq2ps
add
clc
push
add
je
push
lcall
rcrl
xchg
pushf
out
inc
add
xor
add
inc
clc
aad
out
push
clc
out
add
add
add
fisubrs
xor
add
mov
sbb
clc
jl
inc
clc
xchg
icebp
data16
in
adc
add
fdivl
add
sti
imul
lcall
xchg
fcomip
adc
clc
cmp
cmp
mov
mov
clc
push
clc
gs
mov
cmp
clc
imul
fidivl
xchg
fwait
push
clc
jmp
gs
mov
add
out
push
add
and
add
adc
mov
add
jbe
clc
sub
add
arpl
add
and
add
add
push
outsb
cltd
in
repnz
add
sbb
pop
mov
cmp
add
add
mov
add
out
pop
cmp
pop
shr
xbegin
decb
jmp
dec
in
dec
fcoms
cmp
add
jb
add
and
add
add
popa
add
xbegin
test
jle
clc
ds
and
je
cs
incb
push
and
add
or
add
leave
rclb
add
decb
out
into
xor
add
loop
adc
add
add
mov
add
add
popa
add
aaa
sahf
inc
add
sar
dec
cli
ret
clc
dec
pcmpgtd
dec
aam
add
lods
cmp
mov
movsl
clc
ss
cmp
add
lret
adc
add
sbb
dec
dec
push
add
test
xchg
or
sub
sbb
xor
add
insl
inc
clc
sbb
mov
jnp
popf
xchg
repnz
clc
cmp
sbb
add
clc
fsubs
popa
add
inc
clc
fsts
stos
jecxz
jmp
clc
jp
add
movsb
clc
push
sbb
adc
add
xchg
hlt
iret
insb
fcmovne
and
add
push
dec
fneni(8087
clc
mov
pop
clc
cltd
or
sub
mov
clc
call
clc
in
mov
add
clc
cltd
push
cmp
int3
dec
pop
and
add
add
inc
add
lods
mov
clc
not
adc
add
das
xor
add
clc
or
movsb
clc
pop
cmc
cmp
xabort
outsb
iret
xchg
ds
clc
cmp
test
ss
add
js
data16
and
clc
pop
nop
and
add
add
clc
sub
nop
out
push
and
add
add
add
clc
jb
add
clc
cli
in
jge
adc
add
add
int3
xchg
xbegin
int
inc
clc
pusha
add
inc
clc
daa
clc
dec
pop
dec
pop
cmc
cmp
sar
add
fistl
add
add
loope
es
das
popa
add
add
xchg
mov
or
add
lret
pop
pusha
add
mov
cmp
inc
add
lcall
and
add
jo
add
add
sub
inc
clc
mov
xchg
dec
push
add
jae
add
xchg
sahf
mov
imul
add
adc
add
das
das
aas
ret
clc
call
aam
cmp
je
jno,pn
add
test
dec
dec
popa
add
pop
lahf
xchg
adc
add
jle
adc
add
clc
enter
clc
xbegin
cld
pop
cmp
loopne
push
add
xchg
adc
add
add
push
add
arpl
add
clc
xor
test
in
adc
add
sub
add
mov
clc
ret
icebp
dec
mov
or
add
push
je
add
xchg
popf
out
inc
add
popf
and
add
cmp
push
mov
fsub
clc
movsb
clc
sub
add
and
dec
fs
ljmp
adc
mov
mov
xchg
iret
jg
clc
cmp
xor
add
sbb
dec
jle
int
clc
add
add
lahf
push
add
cltd
dec
repnz
loop
into
sub
add
movsb
clc
sar
icebp
scas
addr16
lcall
clc
mov
push
pop
inc
clc
xlat
jg
sbb
clc
mov
lcall
push
mov
push
add
mov
dec
adc
add
js
clc
ja
imul
repz
mov
out
das
mov
mov
add
add
add
xbegin
jbe
clc
ja
add
jmp
pop
dec
pop
push
add
test
clc
data16
xbegin
xchg
and
add
adc
add
add
mov
xchg
inc
clc
jne
jmp
cmc
add
add
add
ficomps
dec
out
into
sar
mov
clc
enter
cmp
clc
and
add
testb
ja
push
add
add
add
test
mov
add
xor
add
imul
mov
jle
lods
inc
clc
and
cld
popa
add
sbb
sub
clc
dec
adc
add
mov
mov
in
lcall
add
in
test
clc
ret
clc
push
add
sub
fldcw
clc
scas
push
jbe
imul
aad
dec
data16
jl
jl
clc
push
xor
add
and
add
sbb
clc
add
enter
sub
jl
clc
icebp
xchg
rorl
xor
push
xchg
cmp
add
pop
je
clc
pop
loopne
pop
lcall
clc
lea
add
outsb
mov
mov
ret
clc
scas
ficompl
iret
fcomip
pop
repz
add
popa
add
mov
clc
sbb
clc
cld
xor
add
mov
clc
fsubp
clc
in
dec
stos
clc
in
add
add
test
es
ljmp
add
add
add
add
mov
dec
push
jmp
cmp
add
gs
lea
bound
add
add
insl
cmp
icebp
sbb
adc
add
add
add
int3
mov
into
push
add
mov
clc
add
add
inc
clc
cmpsb
clc
imul
pop
js
add
mov
jg
dec
push
add
cmp
gs
loop
sar
out
cmc
in
jmp
xor
add
add
or
jecxz
stos
lahf
jae
add
pop
int3
xbegin
cltd
pop
clc
cs
clc
lret
add
jbe
xchg
push
add
adc
aam
sub
clc
mov
add
bnd
fstp
testl
out
cmp
clc
stos
in
sbb
fsub
clc
or
clc
fcmove
stc
mov
inc
add
inc
clc
adc
add
sahf
ja
add
cmp
cmp
add
mov
aad
add
jne
xchg
insl
add
add
add
inc
add
pop
xor
cmp
push
mov
sub
add
scas
fcmovbe
sbb
add
add
add
and
add
lods
xchg
cmpsb
clc
xchg
dec
jp
sbb
mov
xor
add
add
xchg
cmp
clc
scas
and
add
mov
dec
gs
ljmp
test
jae
add
xchg
aam
adc
pusha
add
gs
cltd
dec
pop
mov
xchg
sub
and
add
add
mov
dec
arpl
add
push
dec
inc
clc
iret
mov
outsb
push
add
jbe
xor
add
ficoms
jge
test
push
sbb
cmp
sti
mov
inc
add
lcall
add
int
or
add
mov
sbb
insb
mov
add
inc
add
mov
clc
aad
aas
cwtl
ficompl
clc
enter
add
dec
push
or
fs
push
sub
clc
adc
add
mov
aas
jo
add
cmp
sahf
pushf
lods
jae
add
into
nop
xor
add
clc
push
push
loop
dec
sub
push
add
cmp
pop
jmp
add
imul
sbb
imul
cmp
clc
shl
clc
push
add
and
add
jl
mov
arpl
add
add
sti
loopne
lods
lods
push
dec
in
ja
clc
and
imul
clc
aaa
pop
mov
add
fisubrl
clc
add
add
and
add
jno
add
add
bnd
clc
insb
cli
pop
scas
clc
mov
loope
clc
cmp
dec
inc
add
push
add
clc
loopne
pop
std
imul
clc
out
dec
or
inc
clc
xor
add
clc
jns
clc
push
sub
clc
insl
push
or
lock
add
add
mov
clc
cmove
dec
pop
stc
jo
add
add
test
or
jbe
cmp
arpl
add
push
sahf
xor
add
dec
outsb
and
shrl
xchg
lahf
pop
mov
clc
iret
dec
pop
xchg
xchg
mov
xabort
or
jge
push
dec
jns
imul
clc
mov
jb
add
add
add
add
add
mov
pusha
add
mov
xor
add
cmp
mov
or
clc
mov
daa
clc
push
push
add
hlt
cltd
mov
clc
lock
add
xchg
mov
shlb
add
in
fs
or
add
ljmp
mov
shlb
add
popa
add
jge
mov
fmuls
ljmp
or
cld
mov
add
cmp
mov
cmp
pop
sti
jne
clc
cmp
dec
mov
sar
mov
add
add
add
fsubrl
clc
and
add
clc
je
clc
mov
clc
test
add
adc
ret
clc
jb
add
ret
cmc
pop
inc
add
test
in
es
push
mov
clc
inc
add
inc
add
xbegin
mov
add
mov
clc
clc
mov
clc
ret
clc
fdivr
scas
stos
test
inc
add
cmp
into
mov
or
sahf
mov
add
jbe
sbb
add
fiadds
xchg
or
incl
push
add
mov
add
clc
test
cmp
add
data16
or
add
or
mov
pop
mov
loopne
shll
add
clc
mov
xor
test
cld
cmp
add
faddp
clc
sub
sahf
es
aaa
lods
call
xchg
or
add
clc
xchg
jo
add
add
jl
clc
xlat
jg
clc
mov
sbb
scas
std
cmp
fistpll
or
fcmovbe
or
and
add
sbb
mov
negl
inc
clc
jno
add
or
add
mov
adc
add
pop
insb
lcall
mov
loopne
cmpsl
clc
std
test
xchg
mov
cmp
xor
add
mov
add
push
lret
lcall
push
mov
add
jb
add
lcall
sub
add
pop
sbb
stos
cmc
dec
imull
push
dec
inc
clc
insl
sbb
sub
lahf
mov
add
add
outsl
lret
into
hlt
inc
clc
xor
add
push
scas
fiadds
add
cmc
iret
sbb
add
jbe
add
pop
nop
fidivrs
add
ja
xchg
cmp
dec
dec
push
flds
in
dec
lcall
xchg
push
or
mov
sub
cwtl
jmp
sar
mov
push
adc
add
ret
fwait
mov
add
add
clc
inc
clc
scas
cmpsb
clc
pop
sti
data16
mov
dec
call
pop
sbb
clc
sub
mov
mov
aaa
leave
pop
mov
add
clc
xor
add
clc
dec
jle
xchg
add
add
xchg
sti
aas
mov
add
clc
dec
sub
test
mov
jl
jns
dec
dec
mov
clc
sbb
push
mov
add
xchg
aad
mov
clc
fidivl
clc
ret
clc
sub
clc
or
adc
add
push
clc
xchg
out
out
mov
cwtl
sahf
xor
add
lock
xchg
or
dec
mov
add
add
lock
addr16
pop
imul
push
jmp
ja
add
add
add
mov
clc
icebp
mov
test
mov
je
loope
xabort
cmp
inc
clc
add
lock
push
test
add
cmp
sti
out
adc
add
clc
ds
add
xchg
sub
clc
clc
mov
add
adc
add
pop
das
emms
mov
add
aaa
sub
test
loope
sub
jno
add
push
fistpll
clc
movsl
clc
insb
testl
mov
push
pop
adc
add
clc
movsb
clc
mov
push
add
xlat
dec
dec
dec
push
mov
repnz
ds
sar
loope
repz
loopne
test
stos
adc
add
adc
jge
clc
bound
add
clc
add
add
pushf
stc
mov
sub
dec
sar
mov
mov
xchg
scas
xchg
das
flds
clc
xchg
add
mov
shl
das
adc
add
clc
push
lods
pop
xor
add
add
bound
add
addr16
dec
mov
add
mov
or
clc
sbb
xchg
out
add
add
cmp
add
mov
clc
or
xor
add
fldt
int3
jecxz
or
cld
loop
push
lods
rcpps
add
xor
add
add
mov
clc
pop
mov
rcll
xchg
test
leave
iret
fimuls
add
add
add
clc
xchg
add
add
clc
mov
add
add
aad
clc
xabort
adc
add
push
add
aaa
sar
stc
jge
std
sbb
clc
and
add
sub
add
clc
hlt
insl
dec
jp
clc
pminsw
clc
bswap
jno
add
clc
and
sbb
xbegin
add
jne
add
lret
clc
pusha
add
imul
clc
cli
in
lock
cmpsl
clc
mov
add
pop
push
cmp
loope
test
xchg
je
inc
clc
pop
je,pt
jl
mov
clc
lret
xor
add
das
xchg
fidivl
sub
dec
push
daa
clc
add
add
adc
sbb
stc
lcall
iret
and
add
or
pop
cmp
add
add
xor
add
dec
arpl
add
add
add
add
push
add
outsb
xchg
inc
add
jp
clc
add
inc
add
or
xabort
sbb
pop
mov
out
lret
xchg
sbb
inc
clc
push
call
clc
fdivrs
mov
scas
xchg
popf
sbb
push
add
cli
das
mov
cmp
mov
add
pop
bnd
add
or
mov
daa
clc
xchg
cmp
testb
cmp
jnp
mov
push
add
scas
notl
mov
clc
mov
popa
add
scas
icebp
pop
mov
clc
cmp
jnp
xchg
ret
xchg
adc
add
es
xor
clc
or
in
jmp
aaa
mov
movsl
clc
jmp
clc
js
mov
sub
adc
add
in
dec
xor
out
and
add
add
push
add
add
mov
clc
enter
xbegin
fsubs
in
int
icebp
xchg
shrb
rcll
out
clc
sbb
cltd
cmp
aam
rolb
clc
pop
or
clc
in
cld
call
clc
sbb
lock
test
sub
cwtl
fld
clc
fildll
cmp
imul
decb
push
add
ds
or
pop
push
add
in
insl
xlat
add
add
add
pop
clc
cwtl
xchg
add
add
insl
lods
xlat
daa
clc
in
es
mov
out
sar
pop
repz
add
jg
ja
mov
clc
ss
add
pop
xor
add
add
pop
inc
add
mov
clc
cmp
jmp
out
movsl
clc
cmp
into
ss
clc
push
outsl
sar
clc
mov
mov
sar
lock
cli
ja
dec
mov
dec
or
add
dec
adc
add
in
jle
add
aaa
in
and
pop
test
jnp
add
mov
jo
add
add
ljmp
add
push
add
lahf
movaps
add
jp
fidivrs
mov
mov
fisubrs
clc
imul
xchg
sar
nop
pop
pop
outsl
push
xor
add
inc
clc
movsl
clc
xchg
out
scas
sti
cmp
add
inc
add
jne
sarl
ss
add
gs
dec
mov
dec
xor
sbb
add
mov
sahf
pop
push
xchg
jl
xor
and
add
fwait
dec
cmpsl
clc
pop
stc
sbb
clc
and
rcrl
popa
add
sbb
inc
add
pushf
sub
sub
iret
iret
or
pop
push
add
mov
mov
fcoms
clc
mov
push
mov
sbb
add
daa
clc
push
int
or
push
pop
out
mov
ret
clc
and
int
imul
clc
cld
clc
test
fdivrl
imul
inc
add
pop
jmp
in
lods
push
lret
pop
adc
add
xchg
sti
repnz
add
fistpl
out
push
xchg
daa
clc
sbb
ljmp
jmp
pusha
add
jbe
add
push
add
and
add
pop
sbb
add
imul
jecxz
sbb
sub
test
rorl
stos
cmp
mov
pop
lcall
cmp
adc
add
imul
add
mov
cmp
add
add
xchg
popa
add
cmpsb
clc
mov
pop
pop
clc
push
icebp
std
dec
sahf
int3
push
aas
dec
repz
add
cmp
fsubrl
std
jg
add
xabort
sbb
scas
popa
add
rorl
adc
cli
adc
add
add
sbb
add
xor
clc
xor
add
push
jmp
cmpsb
clc
push
clc
gs
and
add
add
add
inc
add
hlt
in
idivb
adc
fidivs
clc
add
add
add
add
add
ret
cmp
clc
lea
add
sti
cwtl
mov
add
add
insl
xor
add
add
ja
notl
add
inc
clc
pop
out
adc
add
enter
clc
adc
clc
xor
cmp
dec
popa
add
adc
mov
add
in
dec
adc
add
clc
lret
test
add
jmp
lret
js
decl
or
jge
add
dec
stos
arpl
add
add
ljmp
pop
add
add
add
cli
sbb
mov
outsl
adc
add
add
pop
dec
dec
and
add
push
cmp
add
cmp
jae
add
add
cmp
add
cmc
push
inc
add
pop
idiv
mov
loopne
push
add
inc
add
xchg
js
jecxz
inc
add
and
cs
xchg
xchg
adc
add
clc
mov
leave
xchg
cmp
clc
xlat
dec
aas
lods
aas
adc
add
repnz
add
dec
inc
add
mov
dec
inc
clc
pop
push
cmpsl
clc
cmp
test
sbb
add
xchg
data16
jo
add
add
cmp
xchg
mov
iret
push
cmp
lock
adc
xchg
push
popa
add
enter
mov
clc
or
dec
das
cmc
fcmovnu
pop
xor
add
lret
mov
clc
jne
add
xchg
pop
clc
fcom
xchg
mov
clc
mov
clc
xor
add
pop
add
add
lcall
xbegin
clc
aam
into
or
imul
add
add
add
push
add
insl
cmpsl
clc
cmp
clc
mov
push
cmp
xor
add
sbb
sar
dec
jb
add
stos
icebp
lock
add
pop
sar
add
add
add
sbb
xor
add
aas
push
add
push
and
add
add
add
ffree
clc
jae
add
mov
cltd
xor
xchg
jnp
lahf
xchg
lock
push
adc
loop
mov
pushf
ds
fld
clc
xchg
jmp
clc
or
popa
add
mov
mov
adc
clc
insl
mov
cmp
clc
dec
mov
in
cmp
add
imul
add
aas
jmp
jns
add
mov
mov
add
es
add
add
add
icebp
jae
add
clc
sbb
add
inc
add
movsl
clc
xchg
pop
add
inc
add
jb
add
scas
and
stos
clc
jbe
add
jle
ja
push
clc
inc
clc
push
cmp
add
fdivs
add
push
fcmovnb
clc
push
add
pop
lret
push
clc
outsb
fwait
aas
dec
hlt
in
int
clc
out
jns
adc
add
clc
cmp
sub
sub
add
xor
pop
clc
push
lods
and
add
add
add
add
nop
or
cmp
mov
out
enter
add
aaa
push
add
or
mov
lods
and
add
add
jmp
sub
add
mov
loop
cmp
dec
icebp
inc
add
out
adc
in
sub
add
clc
cs
clc
sbb
add
add
xor
add
clc
jo
add
aas
in
cmp
inc
clc
mov
test
mov
clc
es
inc
clc
out
aaa
mov
add
clc
xor
add
xchg
push
add
add
out
xchg
in
gs
jbe
cwtl
fisttpll
sub
notl
add
scas
and
add
clc
jbe
mov
adc
add
clc
loope
jo
add
hlt
sbb
dec
push
add
movsl
clc
cmp
add
xchg
or
clc
xchg
mov
add
xor
add
