add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
jge
add
add
pop
pop
pop
pop
repnz
add
add
add
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
add
add
call
sbb
sbb
sbb
sbb
sbb
sbb
add
test
test
add
stos
stos
stos
stos
stos
stos
stos
stos
jnp
pop
pop
pop
pop
add
add
rcl
rcrl
int
in
in
in
in
in
in
faddl
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
sbb
sbb
sbb
sbb
add
add
add
add
add
and
sbb
sbb
adc
adc
aas
add
add
scas
add
xor
xor
xor
add
add
add
add
fcoml
adc
lods
lods
lods
lods
lea
lock
add
add
add
add
add
mov
add
add
add
les
stos
stos
lds
add
add
mov
add
lret
lret
add
hlt
hlt
add
xchg
add
sub
add
lock
add
insb
insb
insb
insb
add
add
add
add
add
add
mov
mov
mov
add
add
add
add
inc
inc
inc
inc
add
sub
sub
sub
sti
sti
sti
sti
sti
sti
inc
inc
inc
inc
inc
inc
mov
hlt
hlt
hlt
hlt
hlt
hlt
hlt
add
data16
int3
int3
int3
fidivrl
cmp
cmp
add
sbb
sbb
add
add
lret
lret
add
add
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
add
add
add
jge
jge
jge
jge
add
lcall
dec
dec
add
lock
add
add
add
add
xor
aad
add
xor
xor
xor
xor
xor
xor
xor
xor
add
inc
inc
inc
inc
inc
inc
inc
xor
add
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
sahf
sahf
sahf
sahf
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
rol
rol
mov
add
add
add
add
je
je
je
je
je
je
je
add
nop
nop
nop
nop
cld
cld
cld
mov
fcomp
fcomp
fcomp
das
xor
xor
xor
xor
xor
xor
xor
add
add
call
fs
xchg
xchg
xchg
xchg
xchg
xchg
xchg
inc
inc
add
movsb
movsb
movsb
movsb
movsb
movsb
movsb
add
add
add
mov
add
add
jne
jne
jne
jne
jne
jne
jne
jne
loopne
loopne
loopne
loopne
loopne
loopne
loopne
popf
popf
popf
lret
lret
sub
sbb
add
add
jae
jae
jae
jae
jae
jae
loopne
loopne
loopne
add
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
mov
rcl
sarb
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
and
icebp
icebp
adc
adc
adc
test
rolb
add
je
je
je
je
je
je
je
je
je
or
add
add
mov
add
aad
pop
add
add
add
add
add
mov
mov
mov
push
add
cwtl
cwtl
cwtl
cwtl
push
push
push
push
push
add
add
add
add
leave
leave
add
clc
clc
add
add
add
add
std
std
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
aad
aad
aad
aad
aad
aad
aad
ja
ja
ja
ja
ja
dec
add
lret
lret
add
rcl
loop
xchg
xchg
xchg
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
push
push
addb
adc
adc
adc
adc
adc
add
ds
sub
sub
sub
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
push
xchg
xchg
addl
add
sbb
sbb
add
add
add
in
in
xor
xor
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
pop
xchg
xchg
xchg
add
add
add
add
add
popf
popf
popf
add
sbb
sbb
add
add
xchg
xchg
xchg
xchg
scas
scas
scas
add
ds
add
add
add
push
add
add
rol
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
adc
adc
adc
adc
add
imul
imul
imul
imul
imul
imul
push
push
push
push
push
push
push
add
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
cmp
loop
add
add
add
jnp
sbb
sbb
sbb
jge
jge
add
xchg
xchg
add
call
add
mov
imul
add
add
add
add
add
add
addb
pop
pop
pop
pop
addb
add
jmp
jmp
xchg
add
add
add
mov
add
and
and
and
and
and
and
and
and
and
add
sbb
sbb
add
add
add
add
add
in
add
add
iret
iret
iret
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
add
add
add
add
add
flds
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jge
jge
jge
jge
jge
jge
jge
jge
jge
or
or
jbe
jbe
jbe
jbe
jbe
int3
int3
int3
int3
int3
int3
cmp
cmp
cmp
add
add
add
add
repz
xor
xor
add
clc
or
add
js
js
js
js
js
xchg
xchg
xor
xor
add
add
add
add
add
add
or
or
or
or
or
add
add
aad
aad
add
add
add
jno
jno
jno
jno
jno
jno
add
add
cmp
add
add
add
das
test
add
div
div
div
div
div
div
testl
add
push
push
push
push
push
push
add
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
or
or
imul
add
add
dec
dec
dec
dec
dec
add
imul
add
addb
addb
add
add
add
fwait
fwait
fwait
push
push
push
push
add
add
add
add
or
or
or
or
or
or
ja
ja
ja
ja
jmp
add
push
push
add
mov
mov
add
cltd
cltd
add
add
add
add
insb
insb
insb
insb
je
je
je
je
add
stos
stos
stos
stos
stos
add
add
add
add
adc
adc
adc
add
add
xchg
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
push
push
push
push
mov
add
add
add
in
in
in
dec
dec
add
add
xchg
xchg
xchg
pop
pop
pop
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
add
into
into
into
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
add
add
ret
ret
pop
popa
popa
popa
xor
add
rol
rol
rol
add
jmp
jns
jns
jbe
jbe
sub
ljmp
ljmp
iret
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
es
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
stc
jle
add
add
add
sub
add
add
add
jb
mov
lock
add
add
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
iret
iret
push
push
push
push
push
add
add
add
clc
add
or
add
orl
add
mov
add
fcmovnu
fcmovnu
fcmovnu
fisttpl
or
or
or
or
or
movlps
adc
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
add
add
aas
aas
add
add
add
add
add
out
out
cmp
cmp
das
das
das
das
das
add
rcl
rcl
rcl
xor
xor
xor
xor
xor
xor
xor
add
add
add
fadds
iret
iret
iret
iret
iret
add
lcall
add
add
and
and
and
xchg
and
and
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
dec
dec
dec
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
in
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
mov
mov
mov
fcomp
fcomp
add
add
jecxz
jecxz
jecxz
add
xor
add
add
add
add
push
push
push
push
adc
add
pusha
pusha
add
add
ret
ret
ret
jnp
jnp
jnp
add
add
add
add
xor
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
xchg
xchg
add
add
add
mov
adc
adc
adc
adc
adc
adc
add
add
add
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
fiadds
push
push
push
add
add
add
add
add
add
call
call
xlat
xlat
xlat
xlat
xlat
add
add
pushf
pushf
pushf
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
add
sub
sub
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
stc
stc
stc
stc
stc
add
add
add
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
add
scas
add
add
add
add
int
int
int
int
out
add
add
add
inc
add
add
add
add
add
add
add
pop
pop
pop
pop
pop
pop
pop
mov
mov
add
add
add
add
lods
lods
lods
lods
lods
lods
lods
lods
lods
add
sbb
adc
adc
dec
dec
dec
add
add
imul
add
add
add
mov
mov
mov
mov
mov
add
add
cmp
cmp
cmp
jl
jl
jl
call
add
add
mov
mov
add
cmp
scas
scas
scas
scas
scas
scas
add
jnp
jnp
jnp
jnp
jnp
jnp
add
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
add
test
shll
bound
bound
bound
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
add
ds
mov
add
pop
add
std
std
add
add
add
jb
dec
dec
dec
dec
dec
pop
pop
js
js
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
movsl
movsl
movsl
iret
iret
iret
iret
iret
iret
add
add
fwait
add
add
add
cmp
cmp
add
imul
loope
loop
loop
loop
loop
loop
loop
loop
loop
loop
cltd
jb
add
add
rol
rol
rol
rol
rol
rol
rol
roll
add
add
incl
add
add
add
add
or
or
or
or
or
or
mov
mov
mov
data16
xchg
xchg
sahf
sahf
sahf
out
out
lahf
lahf
lahf
lahf
lahf
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
addl
add
aam
aam
aam
add
add
add
mov
mov
mov
add
add
add
jp
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
and
mov
mov
mov
add
add
add
add
rcl
rcl
rcl
rcl
sahf
sahf
sahf
sahf
cmc
cmc
cmc
fs
jle
push
push
aam
aam
aam
aam
aam
mov
sub
sub
add
add
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
add
add
inc
inc
inc
inc
inc
inc
add
mov
mov
mov
xchg
cmp
dec
dec
dec
dec
dec
dec
add
jecxz
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
add
std
std
std
std
std
std
std
std
std
add
cmpsl
cmpsl
cmpsl
cmpsl
or
or
add
or
or
or
or
or
or
add
out
out
out
out
out
out
out
out
out
out
out
out
inc
inc
inc
inc
inc
inc
test
add
add
add
add
jae
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
mov
andl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
mov
mov
mov
insl
sub
sub
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
es
ret
or
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmpsl
pop
pop
add
test
test
adc
sldt
push
push
push
add
inc
inc
inc
inc
inc
loopne
loopne
loopne
loopne
loopne
loopne
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
loope
add
pop
pop
pop
pop
pop
pop
add
add
mov
add
or
or
or
or
addb
popf
popf
popf
popf
popf
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
add
bound
bound
bound
jne
jne
jne
jne
jne
jne
jne
jne
jne
add
add
add
add
add
add
add
add
jb
jb
jb
add
mov
add
add
dec
dec
dec
add
add
lods
add
add
arpl
arpl
arpl
arpl
arpl
add
test
add
add
add
add
add
xchg
xchg
xchg
rol
mov
mov
mov
mov
mov
mov
mov
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
add
add
cmp
cmp
enter
enter
enter
int3
int3
int3
int3
int3
mov
xor
lods
lods
lods
lods
incb
add
sub
add
add
lock
gs
add
xor
xor
std
jl
sahf
sahf
sahf
sahf
sahf
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
icebp
icebp
icebp
add
adc
or
or
outsl
outsl
outsl
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
xor
xor
xor
repnz
daa
daa
add
add
jno
mov
dec
dec
dec
dec
jne
or
mov
add
mov
les
add
add
sbb
sbb
sbb
sbb
add
add
sahf
sahf
sahf
sahf
sahf
cmp
cmp
cmp
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
stos
stos
stos
stos
stos
stos
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
add
add
jb
jb
jb
jb
jb
jb
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
gs
gs
jp
jp
dec
dec
add
add
add
sub
sub
sub
sub
sub
sub
sub
sub
das
das
das
das
das
das
das
add
cmp
mov
rcl
rcl
rcl
rcl
rcl
fcmovnu
fildl
sbb
sbb
sbb
adc
adc
outsl
outsl
outsl
outsl
add
adc
adc
adc
imul
cs
addb
stos
stos
stos
stos
stos
stos
add
sub
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
push
loope
loope
loope
loope
mov
mov
imul
imul
or
or
add
add
add
add
test
test
jno
jno
jno
jno
jno
jno
jno
jno
jno
add
and
and
and
and
and
and
and
data16
dec
dec
dec
dec
dec
add
add
out
out
out
out
out
out
add
add
add
cld
cld
cld
add
add
mov
mov
mov
add
add
add
xor
xor
xor
xor
xor
xor
add
ja
ja
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
scas
scas
scas
mov
mov
dec
dec
dec
add
add
xchg
or
dec
add
add
add
add
pushf
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
fcomp
or
or
add
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
daa
lea
xchg
xchg
xchg
xchg
xchg
mov
into
into
into
add
push
and
add
add
adc
adc
adc
adc
add
add
add
jge
jge
add
add
add
mov
leave
leave
lods
add
in
in
in
in
in
in
in
in
in
in
in
in
in
mov
jmp
jmp
fcomp
fadds
add
dec
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rolb
add
js
js
js
addb
push
push
push
push
push
push
push
push
push
add
pop
pop
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
imul
add
add
add
addr16
jl
jl
jl
jl
add
add
cs
dec
dec
dec
dec
dec
dec
mov
mov
mov
mov
mov
mov
add
ljmp
dec
dec
dec
dec
dec
dec
dec
dec
jecxz
jecxz
push
push
dec
dec
dec
dec
dec
add
adc
dec
dec
dec
dec
dec
insb
insb
insb
insb
insb
insb
lea
cmp
cmp
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
add
ja
add
add
add
add
xor
xor
xor
xor
add
add
insb
insb
insb
insb
insb
insb
insb
in
in
in
in
in
in
in
in
add
sub
add
pop
pop
pop
add
add
add
add
add
add
add
add
push
push
xor
add
add
add
add
aam
aam
add
add
add
add
add
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
pop
pop
pop
loopne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
fdivrl
add
sub
sub
add
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
cwtl
cwtl
cwtl
add
add
add
ljmp
jecxz
jecxz
dec
ret
xchg
pmaddwd
add
outsb
cmp
sarl
cmc
clc
repz
jmp
push
popf
fidivrl
mov
jp
daa
and
add
mov
test
add
or
dec
ja
xchg
xchg
or
arpl
add
push
out
imul
add
into
lea
add
gs
ds
xor
shrb
dec
fs
loop
jg
inc
cmpl
add
mov
sub
add
add
jge
add
mov
add
sub
add
in
in
insb
sbb
push
stos
sahf
mov
cmp
push
lods
add
movsl
mov
pop
jns
pop
mov
pushf
push
add
xchg
insl
pop
inc
sahf
jns
mov
adc
mov
cmc
aam
add
mov
inc
inc
das
rcrl
add
ret
add
add
loopne
mov
aad
add
add
fldlg2
fs
mov
aaa
xor
pop
cmp
int
shlb
dec
ret
mov
dec
fstpt
xchg
add
cltd
dec
popw
repnz
add
adc
mov
add
add
ds
add
cltd
test
add
in
sbb
or
add
sahf
cmp
repz
repnz
cmpl
dec
ds
mov
add
add
repz
iret
stos
push
push
ja
lea
and
xor
mov
sahf
pop
cmp
mov
in
mov
add
stos
add
jg
mov
shlb
add
into
pop
mov
add
repnz
add
mov
outsl
mov
add
jp
rcl
mov
mov
add
repnz
nop
inc
sbb
mov
mov
add
insl
mov
inc
clc
inc
or
or
add
add
pop
jge
or
add
insl
mov
add
clc
in
test
add
int3
icebp
push
xor
jno
addb
adc
sbb
add
loopne
jbe
aam
add
mov
out
add
scas
add
sbb
fistps
jp
add
cli
sbb
pushf
gs
inc
aas
jno
sbb
add
xchg
add
das
inc
stos
add
cmc
xchg
sahf
mov
jnp
pop
daa
xor
out
add
jb
push
outsl
data16
test
add
adc
cmpsb
add
iret
pop
das
push
add
dec
das
pop
nop
inc
cmp
divps
lods
in
xlat
pop
sahf
shrb
int3
pushl
add
cmp
mov
fisubl
add
stos
cmp
cmp
dec
adc
push
in
add
add
jecxz
add
add
or
add
arpl
mov
add
add
mov
add
add
repz
adcl
into
bound
mov
por
nop
popf
sti
mov
dec
mov
pop
push
push
jmp
lods
add
or
add
sbb
push
add
mov
cmc
inc
push
xor
cltd
mov
xchg
pop
lret
lret
adc
add
outsl
push
popf
fwait
cmpsb
add
and
add
or
add
out
mov
add
shrb
add
arpl
add
add
adc
add
mov
pop
xchg
add
xchg
inc
mov
roll
sbb
add
mov
xor
insb
adc
lret
push
ss
ss
in
add
xor
add
int3
mov
and
add
out
daa
call
testb
insl
adc
imul
xchg
jg
ljmp
fmuls
dec
shll
ss
add
shr
out
and
shll
jl
ja
sahf
mov
in
push
push
adc
add
mov
mov
xor
push
push
add
sbb
lret
mov
add
fmul
xchg
add
sarl
test
add
jmp
int
and
add
add
adc
or
add
or
add
mov
mov
test
add
mov
add
dec
aad
imul
lods
add
in
mov
lods
add
rorl
add
sub
add
sbb
fnstenv
movsb
add
orl
add
je
xorl
add
add
sbb
add
movsl
leave
mov
add
add
jo
sub
add
or
dec
jmp
and
add
filds
add
mov
add
xchg
call
mov
sub
push
int
add
dec
rcrl
dec
jge
mov
call
add
mov
out
or
add
dec
dec
pop
cmp
inc
mov
add
jb
loop
pop
jno
jl
push
int3
mov
addr16
les
add
xchg
inc
cmp
lods
add
sti
mov
daa
testl
insb
dec
int
add
insl
enter
jg
pop
jmp
inc
leave
push
jb
add
push
mov
push
push
cmp
ljmp
add
jle
add
lret
int
push
xor
adc
add
add
daa
xor
cmp
in
cmpl
add
sub
add
sar
fcoms
imulb
out
ds
movsl
mul
xor
mov
add
pop
iret
mov
fsubrs
call
mov
enter
sub
add
inc
mov
mov
add
fmuls
add
adc
add
mov
pop
pop
mov
add
je
popa
add
add
mov
jl
add
mov
lret
add
rclb
cld
and
mov
add
add
sub
jl
add
fnsetpm(287
cmp
sub
mov
add
add
in
pop
aam
scas
pop
mov
add
adc
gs
mov
add
adc
lods
jg
lods
push
jae
adc
add
scas
and
add
cld
pusha
pop
mov
add
loop
push
pop
sbb
popf
loopne
idivb
add
test
xor
jle
rolb
pop
inc
inc
dec
data16
cmc
push
or
lea
mov
add
adc
xlat
jbe
pop
adc
aaa
ret
pop
mov
push
mov
mov
or
add
xor
rcl
mov
ret
xor
dec
lods
in
jp
add
repz
icebp
xchg
lods
add
cmpsb
add
dec
push
push
lods
into
mov
mov
add
js
pop
jne
cmpsb
add
mov
mov
out
xchg
pop
cmp
add
sbb
add
xchg
or
add
push
ret
insb
adc
cmp
das
mov
add
jb
pop
jno
shlb
std
and
adc
push
sub
add
shrl
jmp
inc
pusha
push
mov
sub
int
out
cmp
mov
jb
sub
add
add
add
lret
ficoml
sbb
stos
add
dec
inc
xchg
mov
or
add
in
jno
jns
loope
add
addr16
and
add
dec
sub
pushf
dec
stos
scas
add
mov
cmp
inc
iret
and
mov
lcall
add
pop
lret
xlat
gs
mov
push
pop
or
add
pop
jb
fidivrl
mov
add
sbb
push
cmpl
rcr
out
xor
pop
mov
add
add
addb
js
or
add
xchg
rcrl
xchg
pop
sbb
jmp
pop
daa
inc
into
mov
faddl
pop
rorb
ret
test
add
pusha
mov
mov
add
add
outsb
fmuls
repnz
pop
aad
cmp
std
push
jge
arpl
dec
adc
in
jo
sbb
xor
cmp
adc
mov
ret
pop
loope
ret
adc
add
les
pop
xchg
xor
sbb
lds
into
aas
xchg
jge
or
add
cmpsl
ja
add
xchg
mov
inc
bound
pop
add
adcl
add
mov
inc
sbb
in
into
ret
aaa
in
dec
add
add
pop
mov
add
xor
out
sub
add
gs
xor
das
sbb
fcoms
cmp
pusha
and
add
xchg
popf
or
add
out
fstl
lahf
inc
movsl
std
sub
push
shrl
add
or
add
pop
mov
add
mov
add
xor
inc
aad
add
xchg
add
in
fldenv
add
ret
or
add
add
xor
mov
add
mov
pushf
dec
shll
and
add
xchg
lods
add
dec
gs
add
pusha
add
inc
outsl
push
add
add
push
popa
test
add
lahf
pop
cmp
add
xor
jmp
add
xor
addb
movsl
xchg
mov
je
mov
in
mov
add
imulb
add
and
sti
xchg
js
lret
test
add
lods
stc
mov
add
dec
rclb
lret
lds
add
negl
inc
xchg
jae
xor
add
sbb
insb
mov
leave
pusha
je
pop
push
dec
xor
add
push
or
add
sti
cmp
je
rorb
pop
loopne
xchg
cmp
push
push
add
and
add
test
in
add
mov
add
incl
int3
scas
add
mov
add
lock
scas
mov
add
add
adc
add
insb
pop
ror
add
or
add
cld
ret
cmp
add
add
add
add
and
add
scas
sub
add
sbb
add
fdivl
pop
mov
adc
push
jnp
mov
fbstp
inc
shl
jne
jl
cli
push
pusha
add
add
adc
cmp
push
add
mov
add
inc
xlat
inc
mov
out
push
das
dec
sub
add
in
pop
test
test
add
add
sar
js
aas
push
cmp
cld
xchg
and
add
mov
movsl
adc
mov
mov
add
rorb
movsb
add
dec
fnstcw
cwtl
int3
fwait
or
stos
add
jle
lods
add
inc
mov
pop
push
jge
xchg
ret
jecxz
arpl
push
sahf
mov
and
mov
add
dec
dec
or
jl
sbb
add
test
add
mov
cmpsb
add
xchg
roll
pushf
inc
adc
addr16
test
add
mov
add
sbb
mov
add
add
fnsave
ss
arpl
gs
mov
pop
fmull
mov
add
or
add
je
add
imul
mov
movb
mov
or
sbb
add
mov
sbb
test
add
insb
outsb
pop
out
xchg
je
adc
shlb
pop
imul
add
xchg
mov
add
push
pop
sub
mov
add
dec
pop
or
add
add
sub
add
ficomps
mov
sub
cwtl
push
and
add
ret
addb
and
add
loop
bsf
hlt
xchg
add
sbb
insb
mov
xchg
pop
lret
filds
mov
popa
mov
cmp
enter
pop
or
add
cmp
add
movsl
push
add
sti
push
mov
pop
mov
addb
int
pop
outsb
negb
dec
xchg
add
jge
add
and
loopne
cli
push
jae
add
add
push
add
add
add
in
mov
add
cmp
fs
xchg
outsl
jl
cmp
add
or
add
jno
add
xchg
push
je
fs
xchg
add
cmp
add
sub
loope
dec
addr16
pop
insl
pop
lock
ret
add
pop
test
add
js
cmpsl
pop
ja
aam
aad
add
jecxz
mov
ds
add
add
and
add
sti
mov
outsb
outsb
jl
dec
lcall
add
add
and
add
push
jp
add
push
icebp
movsl
pusha
out
out
dec
inc
lods
add
inc
mov
aam
mov
add
cld
sub
push
std
mov
xchg
aam
xor
shlb
jmp
xor
add
aas
cmp
mov
add
pusha
sub
add
test
shll
lds
arpl
add
cmp
cwtl
inc
repnz
loopne
rcr
mov
popf
fildll
xor
test
and
pop
sbb
je
sbb
xchg
cmp
addb
sbb
jmp
aas
jecxz
movsb
add
js
xor
daa
add
add
notb
and
add
mov
scas
fistps
and
xlat
jb
xchg
inc
pop
ljmp
in
xorl
add
xor
sub
add
test
dec
push
cmp
add
leave
iret
jmp
sbb
mov
add
add
and
add
add
out
dec
push
mov
cmp
fcoms
das
push
xor
cmp
mov
add
jnp
add
rcrb
seta
xor
popf
shll
mov
jg
xor
add
add
aad
xorl
in
pop
test
pop
and
add
cli
cmp
into
push
add
sub
add
addb
fdivr
insb
enter
add
jae
fwait
enter
mov
add
loop
movsb
add
dec
jo
and
lea
xchg
test
add
and
add
fnstcw
in
insl
lds
or
xor
mov
scas
dec
jmp
add
in
add
jl
les
sub
add
popa
push
or
pop
stos
xor
mov
add
mov
add
aaa
pop
cli
add
mov
add
shrl
and
add
add
add
xor
cwtl
loop
arpl
ret
cmp
add
mov
sbb
lods
add
and
add
popf
bound
push
icebp
cltd
addb
adc
sahf
add
add
arpl
mov
push
cld
mov
leave
xchg
add
jge
xchg
mov
fadds
cld
jecxz
stc
sahf
jo
mov
nop
inc
sarb
sbb
inc
sbb
dec
xchg
add
cmpsl
jg
push
rclb
lret
lret
add
sub
ss
enter
adc
or
add
sahf
xchg
enter
push
cmpsb
add
mov
cli
cmp
pusha
push
cmp
imul
mov
jns
jg
push
xchg
adc
lock
jge
jecxz
add
jge
mov
or
add
lods
test
pop
and
add
xor
sti
in
or
add
add
repz
sbb
add
dec
xchg
insl
jns
jecxz
pop
imul
sub
add
add
sbb
add
push
int3
xchg
cmpsb
add
sub
add
mov
xchg
jge
or
and
addb
das
rorb
out
pop
dec
jns
sbb
xlat
insb
xchg
add
into
xchg
mov
add
jo
add
add
or
xor
addb
mov
add
dec
jl
or
add
add
push
adc
add
push
stc
pushf
int
dec
addb
stos
add
xor
out
loope
add
push
dec
stos
and
push
les
jne
add
adc
mov
dec
daa
add
add
jmp
adc
xchg
jbe
inc
insb
sbb
add
pop
adc
cli
sbb
imul
add
imul
add
cmc
jmp
imul
add
xchg
inc
lcall
xchg
xchg
jecxz
je
sub
mov
pop
mov
add
sbb
jne
dec
push
addl
add
push
add
add
shrb
loope
mov
js
add
add
push
stos
add
add
add
push
mov
add
or
lea
add
mov
or
popf
pusha
jo
js
loopne
jmp
pop
add
add
inc
adc
popf
loopne
jecxz
lret
add
jne
lds
leave
insb
daa
pop
jbe
add
jle
dec
aad
pusha
sub
add
add
and
add
stos
add
test
add
push
and
add
xor
add
adc
cmp
adc
sub
pop
ret
out
xchg
rcll
outsb
or
add
xchg
aaa
sub
out
movsl
test
add
fwait
jb
int3
aam
mov
mov
add
das
or
mov
mov
add
add
mov
push
ret
bound
mov
pop
insb
or
add
imul
push
gs
rcrl
add
dec
mov
push
mov
mov
xchg
add
mov
popf
mov
pusha
lock
shr
sti
sub
add
mov
push
scas
loop
add
imul
xchg
sbb
je
fwait
xor
scas
add
dec
jl
sahf
subl
inc
loope
nop
icebp
movsb
add
addb
xlat
sub
add
aas
xor
ljmp
aaa
mov
adc
mov
fnstcw
xchg
lea
test
add
mov
ficoml
out
adc
mov
sbb
loopne
add
cmp
aad
loop
add
or
add
cmpsb
add
outsl
sbb
sub
add
pop
arpl
inc
fsubrs
jnp
sbb
cmpsb
add
imul
dec
pop
dec
nop
push
ss
adc
add
push
add
push
adc
pop
inc
outsb
mov
sahf
add
ds
cmpsl
int3
pop
rcrl
cmpsb
mov
mov
sub
movl
lea
push
call
sub
add
and
mov
mov
and
test
je
mov
push
push
push
cld
call
test
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
imul
and
jne
call
rorb
notrack
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jmp
inc
stos
inc
xchg
icebp
icebp
or
add
out
shl
cmp
xchg
dec
lock
add
add
inc
test
out
out
in
out
jmp
cmp
pop
cmp
add
add
sub
add
add
lret
fs
or
or
add
mov
add
ret
fsubl
sahf
ret
imul
roll
addb
cmc
dec
adc
js
jecxz
add
dec
stos
push
mov
das
dec
je
add
shl
adc
add
adc
mov
jl
leave
inc
loope
jns
xor
pop
pop
jmp
fistpll
mov
jno
cwtl
rcrl
shll
add
cmp
addr16
sub
mov
xor
leave
sbb
adc
jnp
test
add
jge
dec
jb
movsl
ret
scas
add
loope
sub
add
call
or
add
movsl
pusha
sub
add
stos
add
and
add
pushf
mov
sbb
insb
sub
add
lcall
ret
pusha
fadd
cmp
add
in
mov
mov
push
popf
movsl
or
sbb
sub
add
pop
in
jp
popf
cmpsb
add
cmpsb
add
xor
xchg
add
add
add
ds
mov
add
test
add
ljmp
lahf
cld
popl
or
in
xor
add
pusha
jbe
xor
add
lahf
faddl
mov
inc
sub
xchg
dec
mov
mov
lods
add
xchg
mov
mov
add
jae
add
addr16
push
lcall
jmp
fnsave
mov
add
push
sbb
inc
mov
or
and
jl
rclb
add
lea
add
sbb
test
add
scas
add
push
sbb
mov
or
add
cmpl
add
icebp
xchg
fildll
add
add
loop
into
fwait
mov
add
sbb
stos
add
dec
pop
sbb
lcall
lret
add
or
add
jmp
std
loop
cld
jge
sub
mov
add
add
add
add
push
leave
push
adc
jae
movb
lods
inc
pop
fnsave
mov
add
call
jmp
add
xor
sbb
les
test
xchg
mov
popf
sub
fsubs
in
jmp
imul
sbb
push
pushf
and
add
adc
push
adc
data16
dec
repnz
ljmp
into
hlt
shrl
add
lods
xor
add
xchg
loop
mov
out
and
add
cmp
into
scas
add
dec
pop
push
sbb
fwait
push
jle
add
xchg
fidivs
add
fwait
insl
mov
add
add
cwtl
outsb
in
ljmp
lret
add
pop
push
les
fwait
adc
mov
add
push
insl
out
and
add
mov
dec
lahf
sar
add
aaa
out
add
inc
mov
fadds
jge
bound
xchg
and
movsl
pop
mov
jp
movsb
add
pop
into
je
push
movb
inc
sbb
mov
add
add
mov
sub
push
add
sub
add
pop
dec
popa
add
mov
add
adc
aad
ficomps
xlat
jbe
add
jns
test
add
inc
sti
inc
and
add
inc
pop
adc
out
add
xor
outsb
test
add
mov
leave
add
xchg
lahf
cmc
ja
add
aaa
mov
test
add
add
add
dec
lods
or
test
jae
xor
or
add
hlt
xchg
add
jge
clc
jo
stc
inc
insl
or
add
push
cmpl
inc
pop
cmpsb
add
fwait
movsb
add
sub
add
movsb
add
lcall
mov
mov
leave
add
lods
popf
mov
adc
fs
inc
push
and
add
dec
faddl
jbe
add
push
add
add
adc
mov
sbb
add
mov
add
add
jg
add
mov
addb
notb
out
jnp
mov
add
arpl
aam
xchg
fs
or
add
push
mov
adc
jno
lea
addb
inc
incb
lock
data16
mov
stos
lret
imul
push
xchg
push
add
cmpsl
mov
add
insb
hlt
addb
lds
inc
pop
test
add
adc
mov
aas
jl
inc
dec
daa
test
imul
inc
mov
add
add
mov
fsubs
in
and
add
cmpsl
dec
insl
mov
dec
pop
test
sbb
add
dec
out
arpl
jp
cmp
aam
mov
add
mov
mov
test
scas
add
shrb
lock
mov
add
or
add
bnd
push
iret
mov
xchg
sbb
dec
sbb
lds
jl
pop
fsts
pop
insb
mov
sahf
hlt
fsubr
pop
xlat
test
xchg
out
fwait
inc
popf
imul
mov
inc
lods
add
inc
inc
add
jg
dec
imul
movsb
add
inc
rolb
add
sub
add
push
dec
dec
je
les
test
add
mov
fstp
mov
jmp
insl
pop
inc
and
mov
negl
addb
loope
rcl
add
cmp
cmp
adc
add
popa
js
mov
pop
fidivs
test
arpl
mov
adc
mov
fnstsw
pushf
rorb
add
dec
test
dec
dec
lods
repnz
sub
add
cmp
dec
jnp
push
lods
stos
das
pop
loope
lds
std
test
add
adc
add
adc
fxch
test
add
negb
addb
xchg
push
push
loope
fmull
fidivs
push
add
testl
and
add
in
xor
add
xor
insl
mov
inc
add
xor
add
repnz
mov
inc
mov
jl
add
add
mov
xchg
pushl
lcall
test
and
add
aas
mov
inc
jecxz
arpl
add
xor
nop
and
add
in
push
pop
sub
push
inc
or
fildll
js
add
or
add
pushf
jae
mov
adc
pop
xchg
lahf
and
add
cmpsl
xchg
xlat
jno
repnz
aas
cli
mov
xor
xchg
mov
lock
sahf
mov
sub
fists
outsb
mov
sbbl
outsl
or
sub
mov
add
mov
je
cmp
lods
jno
or
stos
add
jnp
fcoms
jnp
add
add
add
fsub
in
mov
popa
je
pop
mov
mov
add
lret
popa
test
xchg
add
lret
les
mov
ret
inc
mov
imul
mov
add
cld
add
mov
adc
add
pop
dec
adc
jbe
jnp
lret
into
gs
xor
jb
xor
xchg
cmp
push
inc
mov
fwait
sub
or
pop
adc
xlat
xchg
jle
enter
clc
pop
movl
add
jmp
lods
add
leave
das
cld
fsubl
aam
jno
ljmp
add
sar
ror
xor
xchg
rolb
xor
add
ret
sbb
add
popa
cmpsl
incb
mov
ret
sub
or
add
movsb
add
repz
add
xor
push
add
imul
mov
add
jne
xor
lret
stc
out
jbe
mov
add
frstor
sbb
mov
in
pop
and
int
addb
mov
inc
xchg
out
mov
add
push
jp
das
addl
inc
inc
adc
adc
negl
lret
ret
mov
mov
add
mov
mov
add
sti
dec
fisttpll
nop
test
cmp
xlat
fldl
ljmp
sub
shlb
cltd
repz
lods
add
scas
add
mov
add
add
push
and
add
jns
scas
mov
add
sbb
cmp
add
xchg
sbb
dec
or
add
sti
inc
je
loop
mov
add
add
dec
sub
ret
sub
adc
out
add
pop
out
dec
push
jo
sbb
pop
xchg
scas
add
xor
jno
cmp
pop
inc
xchg
je
push
inc
roll
inc
mov
dec
stos
repz
inc
cmp
inc
test
add
add
xor
and
inc
or
add
popa
mov
adc
add
popa
notb
popa
test
add
jno
popf
fwait
cmp
push
add
pop
add
add
push
add
test
add
add
and
add
in
sub
add
mov
mov
xchg
adc
push
iret
sahf
iret
lret
mov
add
xchg
sbb
arpl
xor
shl
mov
add
leave
jle
xor
fildl
cmp
mov
repz
stos
ret
sti
add
addr16
mov
dec
rcll
les
test
add
push
cmpsb
add
or
addb
fimuls
push
add
mov
das
adc
int
imul
add
jae
cli
jle
icebp
enter
adc
aam
mov
ljmp
jge
cltd
xlat
ror
sub
add
cmpsl
cmp
ret
jno
aas
test
add
add
pusha
pusha
outsl
pop
filds
add
pop
pushf
xchg
dec
repz
add
scas
add
andl
movsl
or
fldl
xchg
je
loope
mov
ds
mov
hlt
and
add
push
push
or
add
out
repz
pusha
dec
test
pop
adc
test
add
adc
fadd
adc
fsts
sar
mov
push
cmp
mov
fwait
test
add
insl
jp
nop
pop
xlat
test
add
ds
jbe
xor
test
aam
testl
fimuls
nop
add
inc
popf
pop
ucomiss
add
add
push
and
add
inc
jmp
mov
mov
add
fs
inc
sbb
aam
sbb
add
sub
scas
add
pop
notb
or
add
xor
cmpsl
test
add
adc
cmp
call
jmp
add
int
jb
add
loopne
and
xchg
mov
mov
add
out
std
adc
test
add
lds
fidivrl
addb
mov
pop
cmp
inc
mov
lds
xchg
add
ja
push
add
cmp
add
dec
test
add
push
mov
sub
add
and
add
add
andl
les
or
add
xlat
xchg
add
or
add
and
push
leave
sub
mov
add
mov
cmp
xchg
test
add
xor
iret
pop
sbb
add
xor
loop
mov
daa
cmp
jecxz
add
notl
outsl
sub
cltd
dec
jbe
add
xor
add
push
hlt
cmpsb
add
lock
pusha
insb
les
add
lret
jp
cmp
adc
out
mov
mov
add
outsb
cltd
out
add
add
add
push
xchg
xchg
push
pop
cmp
sti
outsb
in
outsb
cmp
fcoms
ficoms
or
add
insl
and
add
scas
add
or
xchg
jne
test
add
mov
cltd
mov
add
daa
fiaddl
add
mov
and
add
add
and
add
push
jne
add
daa
dec
mov
pop
arpl
ds
into
push
add
mov
add
cmp
mov
dec
adc
in
mov
jecxz
add
mov
add
test
sbb
fs
xchg
nop
pushf
jge
mov
nop
cmp
jp
xlat
xorl
int
daa
rorl
add
cmp
fcomps
jae
std
xor
movsl
fcompl
add
mov
add
sarb
test
add
add
xor
test
add
jns
inc
push
add
xor
add
add
add
sbb
sbb
adc
add
je
adc
mov
push
xor
sub
add
and
add
out
iret
das
sahf
jae
adc
mov
fdiv
arpl
repz
add
sub
sub
sbb
mulb
add
je
pop
and
add
enter
add
call
pushl
loope
negb
or
test
stos
add
xlat
roll
jb
imul
add
add
outsb
inc
shlb
xchg
out
repnz
mull
add
add
add
pop
popa
ss
mov
mov
hlt
push
inc
in
push
cltd
dec
push
add
mov
enter
inc
pop
mov
sbb
repnz
xor
inc
push
stos
jmp
rolb
ljmp
mov
cmp
mov
aaa
in
fwait
cmpsl
rcr
fdivl
add
adc
add
add
xchg
or
std
les
push
inc
and
add
add
mov
add
add
add
mov
mov
sub
ret
jle
or
add
lea
enter
add
pusha
cmp
inc
pusha
cmp
sbb
add
sti
call
cwtl
sbb
jle
add
add
jbe
ficoms
repnz
add
sub
add
sti
mov
xchg
rcl
mov
fisttps
or
add
or
add
or
add
fs
mov
or
add
cmp
ficompl
movsl
xchg
movsb
add
push
dec
test
add
jmp
add
sbb
add
add
decb
add
cmp
popa
add
add
orl
ds
outsb
cmp
jge
out
clc
repnz
nop
nop
jae
add
addl
adc
inc
add
add
push
pusha
subl
mov
clc
repnz
nop
nop
jae
or
cmpb
jnp
add
addb
add
add
movsb
add
jnp
ficoms
nop
jmp
popf
popf
add
bound
mov
push
mov
xchg
ret
xchg
add
xchg
add
test
add
cli
clc
repnz
nop
nop
jae
add
add
push
shlb
push
mov
leave
nop
jmp
incl
add
add
in
leave
nop
jmp
adc
xchg
push
cs
clc
repnz
nop
nop
jae
push
xchg
push
addl
mov
xchg
ret
out
add
add
add
stc
mov
nop
push
mov
leave
nop
jmp
add
sub
rclb
addl
cmp
add
or
pop
push
mov
xchg
ret
add
add
add
add
clc
repnz
nop
nop
jae
add
cmp
add
pop
lea
push
mov
xchg
ret
stos
add
add
inc
js
push
add
push
mov
xchg
ret
repz
add
ds
mov
nop
push
mov
leave
nop
jmp
or
xor
repnz
nop
nop
jae
addl
faddl
jb
dec
jecxz
push
mov
xchg
ret
xchg
add
lret
push
or
xchg
add
fld1
clc
repnz
nop
nop
jae
sbb
jne
dec
in
fcoms
nop
jmp
add
add
jmp
rorl
mov
xchg
ret
xchg
add
push
push
xchg
add
mov
xchg
ret
out
addl
push
or
add
ret
clc
repnz
nop
nop
jae
xor
xchg
add
adc
push
clc
repnz
nop
nop
jae
add
add
lret
push
insb
mov
add
add
push
mov
xchg
ret
add
add
sbb
nop
nop
jae
xchg
xchg
inc
psubw
repnz
nop
nop
jae
or
cmp
and
add
xchg
adc
pop
mov
clc
repnz
nop
nop
jae
add
push
add
jne
mov
repnz
nop
nop
jae
add
push
clc
repnz
nop
nop
jae
mov
add
dec
nop
push
mov
leave
nop
jmp
add
add
movb
std
jne
clc
repnz
nop
nop
jae
mov
or
sbb
pushl
push
mov
xchg
ret
lock
push
adc
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
jne
add
add
out
xlat
mov
clc
repnz
nop
nop
jae
int
add
out
stos
xchg
cmpsw
add
push
mov
xchg
ret
push
add
jne
icebp
stc
xchg
rorl
mov
test
clc
repnz
nop
nop
jae
sbb
mov
add
cmp
add
icebp
add
add
add
aaa
push
clc
repnz
nop
nop
jae
stc
pusha
add
ss
pop
mov
nop
push
mov
leave
nop
jmp
add
add
add
dec
nop
push
mov
leave
nop
jmp
incl
push
sub
add
repnz
nop
nop
jae
addb
adc
pusha
add
add
push
push
mov
xchg
ret
add
add
add
add
sbbb
mov
xchg
ret
addb
bound
movzwl
nop
push
mov
leave
nop
jmp
bound
add
clc
repnz
nop
nop
jae
jmp
js
add
cwtl
inc
orl
nop
nop
jae
mov
andl
push
clc
repnz
nop
nop
jae
jp
add
push
nop
push
mov
leave
nop
jmp
inc
add
sub
or
push
mov
leave
nop
jmp
add
add
sub
js
aad
push
mov
xchg
ret
xchg
andl
mov
add
pop
xchg
add
jne
clc
repnz
nop
nop
jae
jne
add
hlt
pop
jl
clc
repnz
nop
nop
jae
call
push
mov
xchg
ret
add
add
add
add
nop
push
mov
leave
nop
jmp
pusha
add
pop
push
clc
repnz
nop
nop
jae
faddl
add
clc
repnz
nop
nop
jae
lret
add
stc
mov
loopne
sbb
nop
push
mov
leave
nop
jmp
xchg
add
ss
clc
repnz
nop
nop
jae
add
add
pop
push
clc
repnz
nop
nop
jae
addl
lock
add
add
cmp
xor
push
mov
xchg
ret
add
xchg
add
sub
add
repnz
nop
nop
jae
push
add
dec
sub
movsb
push
mov
xchg
ret
or
push
add
add
int3
fwait
add
clc
repnz
nop
nop
jae
add
dec
hlt
add
add
popa
fistpl
push
mov
xchg
ret
add
mov
add
add
add
nop
push
mov
leave
nop
jmp
adc
add
js
iret
fwait
push
mov
xchg
ret
add
lods
add
sub
xchg
add
cld
nop
nop
jae
sub
add
sub
dec
cmp
repnz
nop
nop
jae
add
sbb
rol
push
mov
xchg
ret
add
add
add
sub
add
add
cmp
int3
pop
pop
push
mov
xchg
ret
add
mov
repz
ret
pop
clc
repnz
nop
nop
jae
add
add
cmp
push
mov
leave
nop
jmp
popf
add
sub
xchg
out
les
nop
push
mov
leave
nop
jmp
add
out
js
ljmp
addb
cmp
ret
add
add
add
aam
pop
clc
repnz
nop
nop
jae
add
add
sbb
sbb
clc
repnz
nop
nop
jae
add
add
inc
mov
jae
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
or
sldt
add
xor
clc
repnz
nop
nop
jae
mov
popf
push
icebp
xor
clc
repnz
nop
nop
jae
add
cmp
mov
cmpl
nop
push
mov
leave
nop
jmp
mov
dec
jl
movzwl
clc
repnz
nop
nop
jae
push
add
jl
and
or
inc
add
mov
add
lret
shr
clc
repnz
nop
nop
jae
sub
push
add
jp
das
je
clc
repnz
nop
nop
jae
sub
int
in
call
bound
js
jnp
jp
sbb
cmp
repnz
nop
nop
jae
inc
add
add
pop
jne
clc
repnz
nop
nop
jae
add
cmp
add
push
mov
xchg
ret
add
add
add
add
jge
stos
sub
add
cmp
add
faddl
aam
add
clc
repnz
nop
nop
jae
add
push
xchg
add
call
clc
repnz
nop
nop
jae
add
repz
mov
push
mov
leave
nop
jmp
add
jnp
bound
push
aas
pop
nop
push
mov
leave
nop
jmp
dec
add
add
add
pusha
loope
jns
clc
repnz
nop
nop
jae
xor
popa
popa
clc
repnz
nop
nop
jae
xchg
int
faddl
adcl
dec
cmp
repnz
nop
nop
jae
addl
and
add
nop
cld
xchg
jmp
lock
add
push
push
mov
pusha
int
sub
add
push
xlat
mov
clc
repnz
nop
nop
jae
jno
jne
push
mov
xchg
ret
add
add
add
xor
dec
nop
push
mov
leave
nop
jmp
add
jne
add
adc
test
or
add
repnz
nop
nop
jae
mov
inc
in
push
mov
xchg
ret
mov
add
jne
add
stos
clc
repnz
nop
nop
jae
add
add
add
add
sar
repnz
nop
nop
jae
add
add
add
repz
push
mov
xchg
ret
add
cmp
add
ror
clc
repnz
nop
nop
jae
add
hlt
adc
add
fistl
mov
xchg
ret
andl
hlt
mov
add
clc
repnz
nop
nop
jae
push
add
out
sbb
mov
sub
repnz
nop
nop
jae
push
add
lods
scas
add
addr16
clc
repnz
nop
nop
jae
repz
mov
nop
nop
jae
dec
push
add
mov
clc
repnz
nop
nop
jae
add
pusha
add
add
jae
orl
mov
leave
nop
jmp
add
lods
sbb
mov
clc
repnz
nop
nop
jae
int
add
or
push
clc
repnz
nop
nop
jae
add
sbb
sub
cmp
cmp
ret
addl
repz
clc
repnz
nop
nop
jae
lret
add
pushf
mov
ljmp
add
add
lods
clc
repnz
nop
nop
jae
add
xchg
lret
ja
clc
repnz
nop
nop
jae
dec
add
popf
adcl
mov
in
push
mov
xchg
ret
or
dec
add
push
add
mov
fisttpll
and
add
cs
add
clc
repnz
nop
nop
jae
mov
sub
sub
jmp
add
inc
add
mov
popa
add
add
nop
push
mov
leave
nop
jmp
add
addl
popl
clc
repnz
nop
nop
jae
sub
add
mov
sbb
push
mov
xchg
ret
jae
add
add
icebp
mov
clc
repnz
nop
nop
jae
add
movsl
add
clc
repnz
nop
nop
jae
lret
xchg
mov
add
mov
leave
nop
jmp
add
add
add
sti
push
push
mov
xchg
ret
pusha
add
add
addb
jae
add
lret
push
push
mov
xchg
ret
add
sbb
lock
push
push
mov
xchg
ret
add
add
add
orb
test
nop
nop
jae
add
add
lock
jno
xchg
call
nop
jmp
add
add
inc
push
mov
clc
repnz
nop
nop
jae
lret
add
notl
nop
jmp
add
sub
js
clc
repnz
nop
nop
jae
mov
lock
push
push
jg
aas
nop
push
mov
leave
nop
jmp
mov
push
add
push
clc
repnz
nop
nop
jae
add
add
je
push
clc
repnz
nop
nop
jae
lret
add
dec
repz
enter
mov
leave
nop
jmp
mov
add
fldpi
push
mov
xchg
ret
add
add
repnz
nop
nop
jae
add
xchg
add
scas
js
add
add
lock
add
add
jo
add
add
adc
xchg
add
adcb
clc
repnz
nop
nop
jae
add
out
addl
mov
add
add
repnz
nop
nop
jae
add
sahf
xor
push
mov
leave
nop
jmp
add
sub
xchg
add
add
cmp
jae
repnz
nop
nop
jae
icebp
out
add
stos
add
ret
push
clc
repnz
nop
nop
jae
xchg
bound
push
clc
subl
repnz
nop
nop
jae
add
add
cmp
dec
push
clc
repnz
nop
nop
jae
orl
push
mov
leave
nop
jmp
mov
xor
ret
sbb
nop
jae
add
out
icebp
jmp
add
add
add
xchg
add
roll
mov
leave
nop
jmp
lock
xor
addb
scas
push
clc
repnz
nop
nop
jae
mov
add
add
lahf
push
clc
repnz
nop
nop
jae
int
bound
aad
dec
imul
nop
jae
add
pusha
add
ja
add
xchg
inc
stos
push
hlt
lret
aas
lods
clc
repnz
nop
nop
jae
xchg
mov
icebp
aad
clc
add
jnp
inc
add
add
add
add
xor
push
mov
leave
nop
jmp
stc
icebp
popf
cmp
stos
add
pushl
clc
repnz
nop
nop
jae
repz
pusha
mov
mov
add
test
loope
inc
add
ds
add
popa
stos
jnp
insb
push
nop
push
mov
leave
nop
jmp
sub
jnp
adc
jne
clc
repnz
nop
nop
jae
add
popa
add
nop
push
mov
leave
nop
jmp
subb
stos
cmp
repnz
nop
nop
jae
add
int3
repz
push
mov
xchg
ret
js
sub
xchg
je
clc
repnz
nop
nop
jae
cs
jle
push
push
mov
xchg
ret
jp
xchg
incl
out
subl
sbb
repnz
nop
nop
jae
add
add
jno
nop
push
mov
leave
nop
jmp
add
lock
jnp
stos
pusha
leave
mov
nop
push
mov
leave
nop
jmp
jae
repz
rorl
cld
nop
nop
jae
or
cmp
mov
push
clc
repnz
nop
nop
jae
add
movl
xchg
mov
clc
repnz
nop
nop
jae
add
in
rcrb
repnz
nop
nop
jae
mov
add
nop
push
mov
leave
nop
jmp
addl
stc
xchg
add
call
inc
add
add
add
add
add
loop
push
mov
xchg
ret
jp
xor
add
add
nop
jae
call
add
xchg
pop
mov
push
mov
xchg
ret
add
add
xchg
add
test
add
mov
clc
repnz
nop
nop
jae
add
sub
lcall
jns
add
sub
adc
sbb
cld
nop
nop
jae
add
add
int
stc
push
mov
sub
add
add
xor
mov
test
clc
repnz
nop
nop
jae
or
add
fwait
nop
push
mov
leave
nop
jmp
add
ds
cld
nop
nop
jae
xchg
add
and
repnz
nop
nop
jae
add
add
ds
mov
dec
nop
push
mov
leave
nop
jmp
hlt
jae
mov
jp
aad
jno
clc
repnz
nop
nop
jae
xor
jmp
add
add
dec
mov
push
nop
push
mov
leave
nop
jmp
push
adcl
lods
add
push
mov
xchg
ret
add
add
add
add
add
je
clc
repnz
nop
nop
jae
add
andb
aas
adc
nop
jmp
add
out
or
mov
mov
xchg
ret
stos
add
add
push
ss
nop
nop
jae
int
add
inc
add
mov
je
clc
repnz
nop
nop
jae
or
add
xor
addl
cmp
ret
add
pusha
pusha
outsl
sub
clc
repnz
nop
nop
jae
add
add
in
leave
nop
jmp
stc
add
sub
sbb
nop
jae
jnp
js
cmovl
mov
nop
push
mov
leave
nop
jmp
add
add
add
nop
push
mov
leave
nop
jmp
add
out
xchg
int
div
clc
repnz
nop
nop
jae
add
add
add
mov
push
push
mov
xchg
ret
add
add
add
push
clc
repnz
nop
nop
jae
addl
push
inc
call
push
mov
xchg
ret
add
add
int
add
pop
xor
add
clc
repnz
nop
nop
jae
add
cmpb
sub
clc
repnz
nop
nop
jae
add
add
add
enter
in
leave
nop
jmp
add
js
cmp
in
nop
push
mov
leave
nop
jmp
add
add
or
add
add
push
mov
xchg
ret
add
verw
mov
xchg
ret
add
add
popf
add
push
mov
leave
nop
jmp
or
jne
out
sbb
int
sbb
clc
repnz
nop
nop
jae
or
addr16
nop
push
mov
leave
nop
jmp
adcl
incl
push
clc
repnz
nop
nop
jae
sub
add
insl
pop
nop
push
mov
leave
nop
jmp
stc
add
add
andl
repnz
nop
nop
jae
add
adc
ss
push
cmp
push
mov
xchg
ret
mov
hlt
stos
mov
pop
call
nop
jmp
add
jae
or
cld
nop
nop
jae
popf
add
add
jbe
clc
repnz
nop
nop
jae
add
mov
stos
incl
lds
nop
nop
jae
stc
lret
add
add
xor
clc
repnz
nop
nop
jae
push
lods
add
mov
push
mov
xchg
ret
add
add
add
add
fists
repnz
nop
nop
jae
decl
fcoml
xchg
scas
add
push
add
xchg
shr
nop
push
mov
leave
nop
jmp
add
stos
pushl
add
mov
nop
push
mov
leave
nop
jmp
add
fcompl
lret
mov
leave
nop
jmp
add
add
leave
mov
push
mov
xchg
ret
js
add
cmp
fwait
push
mov
xchg
ret
incl
pushl
or
cmc
add
clc
repnz
nop
nop
jae
add
add
inc
cs
jno
jmp
nop
nop
jae
lods
push
push
stos
add
clc
repnz
nop
nop
jae
add
add
add
mov
push
mov
xchg
ret
add
add
dec
adc
repnz
nop
nop
jae
addb
push
add
lods
pushl
nop
push
mov
leave
nop
jmp
pusha
push
add
mov
mov
leave
nop
jmp
add
movl
mov
leave
nop
jmp
mov
lods
cmp
add
add
fistpl
push
mov
xchg
ret
repz
add
fwait
push
mov
xchg
ret
add
add
sub
in
leave
nop
jmp
add
or
add
clc
repnz
nop
nop
jae
int
or
add
ljmp
add
cmp
rcrb
loopne
loopne
adc
cld
nop
nop
jae
hlt
add
add
addb
leave
push
clc
repnz
nop
nop
jae
icebp
add
repz
add
xchg
inc
add
push
mov
lldt
mov
add
incl
add
adc
push
or
cmpl
repnz
nop
nop
jae
add
add
fisttpll
cld
nop
nop
jae
or
xchg
add
add
stos
clc
repnz
nop
nop
jae
add
add
outsb
cmp
cltd
fld1
push
mov
xchg
ret
incl
add
add
add
add
dec
mov
nop
nop
jae
add
mov
add
mov
add
and
cmp
and
add
add
mov
xchg
add
dec
mov
push
mov
xchg
ret
repz
pop
cld
clc
repnz
nop
nop
jae
jnp
addl
mov
add
clc
repnz
nop
nop
jae
or
add
icebp
hlt
orl
add
repnz
nop
nop
jae
xor
pusha
andl
nop
nop
jae
repz
inc
rclb
jne
nop
push
mov
leave
nop
jmp
add
lret
jns
clc
repnz
nop
nop
jae
jne
add
add
mov
nop
nop
jae
add
bound
add
mov
add
clc
repnz
nop
nop
jae
mov
add
cwtl
mov
or
add
repnz
nop
nop
jae
icebp
inc
add
add
mov
adc
repnz
nop
nop
jae
or
incl
int
and
add
mov
add
test
mov
loope
add
in
mov
pushl
clc
repnz
nop
nop
jae
int
ss
add
mov
nop
push
mov
leave
nop
jmp
bound
add
adc
repnz
nop
nop
jae
addl
mov
aad
clc
repnz
nop
nop
jae
adcb
push
add
ljmp
scas
out
clc
repnz
nop
nop
jae
add
dec
sub
cs
add
add
js
stos
add
mov
clc
repnz
nop
nop
jae
addb
movl
push
mov
xchg
ret
xchg
add
add
addl
andl
hlt
add
add
xorb
mov
xchg
ret
add
add
add
addl
or
int
or
jae
xchg
and
add
mov
clc
repnz
nop
nop
jae
push
or
add
dec
and
add
repnz
nop
nop
jae
mov
sbbl
inc
add
add
add
addl
push
mov
xchg
ret
popa
add
add
add
add
add
scas
add
adc
pop
ret
clc
repnz
nop
nop
jae
xorl
jne
add
push
aaa
push
clc
repnz
nop
nop
jae
push
add
add
add
incl
nop
push
mov
leave
nop
jmp
incl
ds
nop
push
mov
leave
nop
jmp
add
push
movl
add
cld
push
mov
xchg
ret
add
mov
push
jg
dec
sub
repnz
nop
nop
jae
hlt
popf
add
add
pop
push
mov
xchg
ret
add
add
add
cld
nop
nop
jae
sbb
icebp
add
add
clc
repnz
nop
nop
jae
int
push
out
and
add
nop
jmp
add
jne
clc
repnz
nop
nop
jae
addl
cld
push
mov
xchg
ret
add
add
xor
adc
repnz
nop
nop
jae
xor
repz
push
clc
repnz
nop
nop
jae
mov
out
incl
sub
mov
xchg
ret
add
cmp
add
lods
push
clc
repnz
nop
nop
jae
push
add
lock
add
pop
sbb
pause
push
mov
leave
nop
jmp
add
mov
sub
add
add
nop
inc
xchg
add
add
add
or
in
leave
nop
jmp
pusha
popa
push
add
add
or
push
mov
leave
nop
jmp
movl
adc
clc
repnz
nop
nop
jae
push
add
bound
or
jbe
adc
mull
mov
xchg
ret
xchg
add
add
stc
push
add
insb
sbb
cld
nop
nop
jae
add
add
sub
lods
add
nop
mov
mov
clc
repnz
nop
nop
jae
out
add
mov
nop
push
mov
leave
nop
jmp
out
add
add
in
add
add
incb
lcall
pop
add
nop
push
mov
leave
nop
jmp
sub
repz
xchg
clc
repnz
nop
nop
jae
sub
push
jnp
inc
ret
add
push
popa
inc
add
add
jnp
cmp
xchg
push
repz
cld
nop
nop
jae
add
addb
add
nop
jmp
addb
out
mov
add
clc
repnz
nop
nop
jae
add
add
add
and
sbb
push
mov
xchg
ret
repz
add
mov
popa
push
mov
xchg
ret
add
add
sbb
sbb
push
mov
xchg
ret
add
add
pusha
add
add
nop
push
mov
leave
nop
jmp
add
addb
bound
add
push
fimuls
mov
clc
repnz
nop
nop
jae
inc
add
cmp
add
enter
mov
xchg
ret
add
subb
jbe
push
mov
xchg
ret
call
add
clc
repnz
nop
nop
jae
add
xchg
add
mov
cld
nop
nop
jae
stos
add
stos
cmp
mov
inc
add
hlt
add
xor
mov
add
push
push
mov
xchg
ret
js
orl
test
repz
repnz
nop
nop
jae
add
jnp
js
fimuls
add
xor
call
clc
repnz
nop
nop
jae
add
push
inc
mov
add
mov
xchg
ret
lret
add
dec
add
add
call
clc
repnz
nop
nop
jae
call
and
repnz
nop
nop
jae
addl
mov
clc
repnz
nop
nop
jae
mov
mov
jae
ret
push
clc
repnz
nop
nop
jae
add
add
add
cmp
fld1
clc
repnz
nop
nop
jae
xchg
int
add
js
push
clc
repnz
nop
nop
jae
out
add
addb
mov
fsub
add
add
cld
nop
nop
jae
mov
add
sub
adc
add
clc
repnz
nop
nop
jae
xchg
add
or
add
test
add
repz
add
pop
jmp
mov
ja
push
mov
xchg
ret
add
addl
add
dec
clc
repnz
nop
nop
jae
lods
addb
add
add
aad
inc
add
add
or
add
sub
cld
nop
nop
jae
add
incl
sub
add
repnz
nop
nop
jae
add
adc
decb
in
leave
nop
jmp
add
add
insb
jns
les
mov
xchg
ret
add
xchg
add
add
nop
nop
jae
add
jp
xor
add
fwait
clc
repnz
nop
nop
jae
addb
addl
add
add
leave
nop
jmp
add
add
add
repnz
nop
nop
jae
add
incl
xchg
add
loopne
filds
cld
nop
nop
jae
or
sub
cmp
cld
nop
nop
jae
add
mov
sar
repnz
nop
nop
jae
add
add
add
add
clc
repnz
nop
nop
jae
add
or
ds
push
clc
repnz
nop
nop
jae
add
sub
xor
inc
and
repnz
nop
nop
jae
add
lods
hlt
popa
add
out
clc
clc
repnz
nop
nop
jae
push
sub
lods
or
cld
nop
nop
jae
add
popa
add
clc
repnz
nop
nop
jae
add
repz
xor
push
mov
xchg
ret
add
add
add
lock
add
push
mov
xchg
ret
add
add
repz
repnz
nop
nop
jae
add
sbb
and
and
cmp
ret
add
mov
add
sub
nop
jmp
js
cs
push
nop
push
mov
leave
nop
jmp
add
add
jl
daa
mov
clc
repnz
nop
nop
jae
popf
add
xchg
add
nop
push
mov
leave
nop
jmp
stos
out
jae
sub
dec
push
clc
repnz
nop
nop
jae
icebp
pusha
add
jae
add
xor
call
nop
jmp
hlt
add
sbb
nop
nop
jae
push
pusha
add
movl
clc
repnz
nop
nop
jae
add
add
xchg
push
mov
leave
nop
jmp
cmp
sbb
fistl
repnz
nop
nop
jae
add
repz
or
add
test
push
mov
leave
nop
jmp
add
je
clc
repnz
nop
nop
jae
add
add
sar
mov
xchg
ret
push
add
jp
stc
mov
jb
sbb
mov
leave
nop
jmp
add
cmp
add
add
cld
nop
nop
jae
xorb
add
sub
add
cmp
clc
repnz
nop
nop
jae
add
addl
clc
repnz
nop
nop
jae
add
sbb
pop
movzwl
nop
push
mov
leave
nop
jmp
push
sbb
xchg
clc
repnz
nop
nop
jae
add
add
jge
push
es
jecxz
repnz
nop
nop
jae
add
lea
nop
push
mov
leave
nop
jmp
add
mov
subb
lret
mov
clc
repnz
nop
nop
jae
call
add
test
nop
push
mov
leave
nop
jmp
add
xchg
add
add
nop
nop
jae
addb
out
out
pop
clc
repnz
nop
nop
jae
add
nop
jae
xchg
aad
rorl
repnz
nop
nop
jae
add
add
add
ss
push
mov
inc
cs
push
sub
fldl
add
cmpsl
inc
sbb
loope
call
inc
add
add
hlt
pop
pop
push
mov
xchg
ret
xorb
add
push
mov
xchg
ret
mov
cmp
pop
nop
push
mov
leave
nop
jmp
mov
sbbb
add
popf
xorl
clc
repnz
nop
nop
jae
add
clc
repnz
nop
nop
jae
hlt
add
lock
out
add
mov
clc
repnz
nop
nop
jae
lldt
pusha
lock
xor
clc
repnz
nop
nop
jae
xchg
arpl
repnz
nop
nop
jae
cmpb
lock
add
mov
repnz
nop
nop
jae
add
add
add
dec
add
clc
repnz
nop
nop
jae
repz
cmpsb
add
scas
add
scas
add
scas
push
clc
repnz
nop
nop
jae
add
add
push
add
js
jmp
add
jp
xchg
jne
jp
int
inc
fdivrl
scas
add
sbb
add
mov
addl
or
push
js
push
add
pop
cmp
add
outsb
and
repnz
nop
nop
jae
bound
dec
ss
jmp
or
add
clc
repnz
nop
nop
jae
add
stos
add
add
push
mov
xchg
ret
add
add
out
cmp
nop
push
mov
leave
nop
jmp
js
cmp
mov
leave
nop
jmp
add
lock
xor
subl
push
mov
xchg
ret
xchg
add
popf
lods
shl
clc
repnz
nop
nop
jae
xchg
popa
add
add
push
mov
mov
cmp
aaa
push
stos
bnd
dec
add
out
sub
repnz
nop
nop
jae
add
out
jae
push
clc
repnz
nop
nop
jae
adc
add
add
lret
add
clc
repnz
nop
nop
jae
add
popf
add
int
push
mov
xchg
ret
add
add
add
add
mov
leave
nop
jmp
add
push
adc
incl
push
inc
jge
clc
repnz
nop
nop
jae
mov
hlt
inc
pop
clc
repnz
nop
nop
jae
push
inc
jae
push
add
add
cld
nop
nop
jae
cmp
add
or
sub
insl
jae
add
sub
mov
inc
lock
mov
xchg
ret
add
add
mov
clc
add
int3
mov
jl
push
push
mov
xchg
ret
add
cmp
jnp
sub
test
sti
clc
repnz
nop
nop
jae
add
add
mov
leave
nop
jmp
pusha
add
add
adc
repnz
nop
nop
jae
stc
add
out
add
add
clc
repnz
nop
nop
jae
popa
lods
add
js
pop
icebp
and
nop
push
mov
leave
nop
jmp
jp
xchg
add
push
clc
repnz
nop
nop
jae
add
push
stos
jnp
adc
mov
leave
nop
jmp
add
repz
push
mov
xchg
ret
add
jp
add
add
pop
les
add
xor
clc
repnz
nop
nop
jae
xchg
sub
add
mov
icebp
clc
repnz
nop
nop
jae
add
inc
loopne
push
add
and
repnz
nop
nop
jae
orl
sub
mov
xchg
ret
add
add
popa
or
out
sarl
clc
repnz
nop
nop
jae
mov
add
mov
je
clc
repnz
nop
nop
jae
cmp
fld1
push
mov
xchg
ret
sub
add
add
clc
repnz
nop
nop
jae
mov
mov
cmp
pop
clc
repnz
nop
nop
jae
add
xor
add
or
sub
push
sub
shrb
xchg
ret
add
add
pop
mov
add
clc
in
push
mov
xchg
ret
repz
add
test
add
add
clc
repnz
nop
nop
jae
js
call
clc
repnz
nop
nop
jae
addb
add
pushf
aam
xchg
repnz
nop
nop
jae
cvtps2pi
add
js
push
sub
add
daa
lea
nop
push
mov
leave
nop
jmp
xchg
fisttpl
test
repnz
nop
nop
jae
xchg
popf
xchg
mov
push
loopne
mov
xchg
ret
icebp
add
iret
test
push
mov
xchg
ret
js
jp
add
andl
nop
nop
jae
add
add
in
cmp
clc
repnz
nop
nop
jae
stos
push
popa
sub
add
jbe
jne
rclb
jmp
add
add
add
add
mov
ret
push
mov
xchg
ret
add
add
add
packssdw
jecxz
add
clc
repnz
nop
nop
jae
lock
mov
clc
repnz
nop
nop
jae
sub
add
push
mov
xchg
ret
add
add
push
sub
add
mov
or
mov
xchg
ret
cmp
sldt
adc
push
clc
repnz
nop
nop
jae
int
jae
push
or
mov
leave
nop
jmp
jne
add
orl
add
test
repnz
nop
nop
jae
add
sub
mov
xchg
ret
add
add
add
clc
xor
mov
clc
repnz
nop
nop
jae
lret
add
cld
or
in
leave
nop
jmp
hlt
or
inc
cld
sub
mov
xchg
ret
or
add
add
add
mov
xchg
ret
add
adc
addl
dec
add
repnz
nop
nop
jae
add
jne
je
add
clc
repnz
nop
nop
jae
or
cmp
nop
push
mov
leave
nop
jmp
dec
sbb
pop
clc
repnz
nop
nop
jae
out
stc
xorb
mov
clc
repnz
nop
nop
jae
xchg
push
add
pusha
add
inc
add
clc
repnz
nop
nop
jae
add
out
mov
rclb
mov
xchg
ret
add
out
push
add
pop
add
push
mov
xchg
ret
add
orb
add
lds
cld
nop
nop
jae
add
jge
test
clc
repnz
nop
nop
jae
xchg
adc
repnz
nop
nop
jae
push
add
add
adc
nop
push
mov
leave
nop
jmp
inc
push
stc
add
and
push
mov
xchg
ret
push
ds
lock
jne
clc
repnz
nop
nop
jae
lods
call
mov
movsb
clc
repnz
nop
nop
jae
sldt
add
add
inc
dec
imul
clc
repnz
nop
nop
jae
add
add
push
add
leave
nop
push
mov
leave
nop
jmp
jp
add
add
inc
jns
clc
repnz
nop
nop
jae
sbb
add
data16
add
mov
xchg
ret
add
addb
push
push
jb
clc
repnz
nop
nop
jae
add
stos
fwait
jne
nop
push
mov
leave
nop
jmp
xchg
add
mov
clc
repnz
nop
nop
jae
jp
add
dec
mov
cld
push
mov
xchg
ret
add
add
add
add
add
addb
cmp
ret
jae
stos
xchg
add
les
mov
xchg
ret
add
xorl
xchg
loop
negl
mov
xchg
ret
add
js
or
ss
lret
cmp
mov
clc
repnz
nop
nop
jae
subl
mov
nop
push
mov
leave
nop
jmp
add
add
mov
clc
repnz
nop
nop
jae
add
add
push
rcll
mov
xchg
ret
lret
or
mov
out
incl
add
repnz
nop
nop
jae
sldt
popa
clc
repnz
nop
nop
jae
push
add
mov
pusha
lret
add
clc
repnz
nop
nop
jae
mov
call
std
push
nop
push
mov
leave
nop
jmp
push
sub
int
add
add
lret
clc
repnz
nop
nop
jae
int
add
add
jae
inc
pop
push
clc
repnz
nop
nop
jae
add
add
add
pop
mov
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
sub
add
popf
cld
pop
cmc
add
push
mov
xchg
ret
push
add
add
js
mov
clc
repnz
nop
nop
jae
addl
add
push
xchg
call
nop
push
mov
leave
nop
jmp
add
popa
push
cld
arpl
inc
xor
clc
repnz
nop
nop
jae
add
add
xchg
notl
and
mov
xchg
ret
add
js
add
adc
add
clc
repnz
nop
nop
jae
popa
mov
cmpl
inc
add
out
call
add
mov
icebp
call
nop
push
mov
leave
nop
jmp
push
bound
add
fld1
clc
repnz
nop
nop
jae
add
or
cmp
nop
jmp
lret
ds
mov
push
mov
xchg
ret
xchg
repz
cld
ja
clc
repnz
nop
nop
jae
xchg
add
repz
cs
add
jns
dec
push
clc
repnz
nop
nop
jae
add
imull
clc
repnz
nop
nop
jae
add
add
lahf
movswl
clc
repnz
nop
nop
jae
dec
add
cmpl
nop
jmp
add
add
orb
add
imul
nop
jae
add
out
add
verr
fld1
push
mov
xchg
ret
add
push
out
cmp
test
add
insb
fdivp
in
jl
and
clc
repnz
nop
nop
jae
add
js
mov
cld
nop
nop
jae
movl
js
imul
clc
repnz
nop
nop
jae
add
pop
xorl
clc
repnz
nop
nop
jae
js
pop
clc
repnz
nop
nop
jae
mov
jae
mov
clc
repnz
nop
nop
jae
push
add
popf
adcl
clc
repnz
nop
nop
jae
add
addl
add
lea
rclb
test
add
sub
lods
mov
push
clc
repnz
nop
nop
jae
popf
add
lock
xor
add
clc
push
mov
xchg
ret
out
stc
jp
cs
dec
gs
clc
repnz
nop
nop
jae
subb
add
xchg
call
int
push
mov
add
add
add
jnp
sbb
cld
nop
nop
jae
push
add
fdivr
dec
repz
sub
sar
repnz
nop
nop
jae
add
sub
adcb
jne
clc
repnz
nop
nop
jae
fmull
mov
xchg
ret
mov
addl
nop
push
mov
leave
nop
jmp
push
out
add
incl
int3
cmp
add
ds
orl
add
nop
jmp
add
add
add
pop
mov
jnp
clc
repnz
nop
nop
jae
jp
add
add
add
jge
test
clc
repnz
nop
nop
jae
stc
add
fld1
clc
repnz
nop
nop
jae
or
add
addb
cld
nop
nop
jae
add
add
push
jnp
and
push
mov
xchg
ret
xchg
or
mov
mov
xchg
ret
popf
adcl
bound
repnz
nop
nop
jae
lret
add
push
mov
mov
clc
repnz
nop
nop
jae
add
icebp
add
cwtl
bound
add
clc
repnz
nop
nop
jae
lock
add
bound
mov
leave
nop
jmp
add
add
incl
add
out
xchg
nop
push
mov
leave
nop
jmp
add
incl
add
sub
push
mov
xchg
ret
addl
popf
jbe
push
clc
repnz
nop
nop
jae
add
lret
aaa
sub
clc
repnz
nop
nop
jae
add
arpl
mov
leave
nop
jmp
popa
push
adc
sbb
and
push
mov
leave
nop
jmp
add
add
out
mov
cmp
cld
nop
nop
jae
push
add
add
sti
mov
nop
push
mov
leave
nop
jmp
ss
lock
test
call
nop
jmp
stos
push
stos
dec
fmul
stc
imul
clc
repnz
nop
nop
jae
add
add
cmpl
nop
jmp
icebp
add
gs
clc
repnz
nop
nop
jae
cmpl
fs
add
sub
int
add
cmpsl
fistpl
push
mov
xchg
ret
cmp
add
add
pop
mov
push
mov
xchg
ret
add
stc
add
jp
sub
repnz
nop
nop
jae
adc
popa
add
add
repnz
nop
nop
jae
add
cmp
and
mov
xchg
ret
add
jnp
mov
lret
jne
nop
push
mov
leave
nop
jmp
add
js
push
cmp
add
repnz
nop
nop
jae
xchg
add
roll
repnz
nop
nop
jae
add
add
add
add
repnz
nop
nop
jae
add
add
dec
nop
push
mov
leave
nop
jmp
stos
dec
xor
sub
enter
std
shl
nop
push
mov
leave
nop
jmp
add
add
pop
clc
repnz
nop
nop
jae
add
add
push
incl
rep
cmp
mov
jmp
ds
mov
int
add
out
call
call
and
mov
xchg
ret
or
add
mov
clc
repnz
nop
nop
jae
add
mov
add
add
clc
repnz
nop
nop
jae
repz
add
clc
repnz
nop
nop
jae
js
add
addl
add
clc
repnz
nop
nop
jae
jne
sub
mov
adc
repnz
nop
nop
jae
add
add
call
clc
repnz
nop
nop
jae
popa
mov
add
mov
mov
clc
repnz
nop
nop
jae
incl
or
nop
push
mov
leave
nop
jmp
add
add
add
sub
cmpw
nop
push
mov
leave
nop
jmp
push
add
repnz
nop
nop
jae
addl
fdiv
xor
test
add
jne
incl
push
xchg
add
add
add
call
jb
lea
clc
repnz
nop
nop
jae
add
add
add
cld
nop
nop
jae
mov
verr
lret
loopne
stos
add
pop
push
clc
repnz
nop
nop
jae
add
addl
hlt
clc
repnz
nop
nop
jae
add
add
mov
push
clc
repnz
nop
nop
jae
lock
sub
lret
dec
push
mov
xchg
ret
mov
and
add
mov
clc
repnz
nop
nop
jae
xchg
add
add
sub
repnz
nop
nop
jae
call
push
add
je
js
mov
xchg
ret
add
incl
add
mov
data16
add
repnz
nop
nop
jae
add
or
nop
nop
jae
jne
orb
add
clc
repnz
nop
nop
jae
add
add
push
add
mov
nop
nop
jae
add
or
cmp
out
push
mov
xchg
ret
push
lret
xchg
add
sbbl
cld
nop
nop
jae
addl
dec
sub
repnz
nop
nop
jae
add
add
add
sbb
insb
fsubl
mov
clc
repnz
nop
nop
jae
add
add
rep
clc
repnz
nop
nop
jae
add
add
int3
inc
add
push
mov
xchg
ret
popa
mov
incl
bound
clc
repnz
nop
nop
jae
hlt
add
add
mov
clc
repnz
nop
nop
jae
lock
add
inc
mov
nop
push
mov
leave
nop
jmp
hlt
call
add
push
xor
nop
push
mov
leave
nop
jmp
add
inc
push
lods
add
jo
stos
push
mov
xchg
ret
or
add
js
mov
clc
repnz
nop
nop
jae
add
mov
push
push
ret
add
nop
jmp
cmpb
add
ljmp
nop
nop
jae
add
jae
add
add
sub
inc
lret
add
bound
add
add
add
add
test
cld
call
nop
jmp
jnp
add
push
mov
add
scas
add
lea
mov
push
xchg
add
add
add
nop
nop
jae
add
out
add
cmp
push
add
nop
push
mov
leave
nop
jmp
add
add
add
test
push
mov
leave
nop
jmp
js
mov
add
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
out
xchg
cmp
orl
push
incl
add
sbb
addb
popa
call
nop
push
mov
leave
nop
jmp
add
xchg
add
jmp
clc
repnz
nop
nop
jae
cmp
add
add
jb
push
fdivrp
mov
push
mov
leave
nop
jmp
adc
add
js
dec
rep
clc
repnz
nop
nop
jae
add
jp
cmp
shl
push
mov
xchg
ret
add
sub
add
insb
arpl
xchg
ret
add
jp
adcb
shlb
nop
push
mov
leave
nop
jmp
hlt
add
add
pop
nop
push
mov
leave
nop
jmp
push
add
add
js
add
add
repnz
nop
nop
jae
push
add
rolb
push
mov
leave
nop
jmp
stos
add
add
add
call
clc
repnz
nop
nop
jae
jnp
sub
in
pop
pop
jb
sub
add
movzwl
clc
repnz
nop
nop
jae
add
sub
clc
repnz
nop
nop
jae
cmp
add
add
adc
inc
ja
sbb
push
mov
xchg
ret
js
addb
mov
ret
add
jp
add
cmc
mov
shr
add
pop
pop
test
nop
push
mov
leave
nop
jmp
mov
add
mov
leave
nop
jmp
push
add
add
xchg
repnz
nop
nop
jae
add
addb
push
mov
xchg
ret
addl
test
add
mov
jne
add
add
add
sub
add
inc
outsb
or
aas
mov
add
add
int3
pop
int3
inc
and
add
sub
xchg
mov
add
cmp
jp,pt
fmuls
and
add
add
fcoml
add
cmp
jg
push
mov
add
dec
daa
insb
cmp
cmp
add
sub
ret
mov
call
jp
lock
add
addr16
dec
jae
pusha
xor
in
nop
add
scas
add
clc
cmp
and
adc
cmp
add
fnstsw
add
mov
rclb
ds
mov
add
add
loopne
add
les
xchg
push
add
roll
lcall
scas
and
add
mov
dec
dec
push
cld
popa
mov
insb
ljmp
add
xchg
add
add
pop
inc
or
cld
and
addb
insl
nop
mov
push
add
sub
add
mov
push
hlt
mov
add
aam
iret
push
jp
sbb
xchg
mov
pop
out
cmpsb
add
cmc
ss
pop
iret
push
inc
data16
and
jp
xlat
inc
loopne
inc
jnp
bound
outsl
or
in
rol
adc
in
movsl
sbb
add
ja
sar
pop
xor
into
push
lea
imul
mov
mov
repz
ss
pop
fstl
pop
push
sbb
add
push
fwait
push
dec
imul
test
add
adc
sbb
push
add
fstpt
lods
xchg
xor
or
add
add
add
pop
fldenv
sub
add
mov
add
push
add
add
arpl
adc
out
in
repnz
or
fsubrp
scas
test
add
cmp
xor
add
int3
xchg
xchg
pop
sarb
push
mov
adc
cmpsl
ljmp
movsl
and
add
ror
shlb
jnp
xor
inc
dec
dec
stos
lcall
add
cmp
add
adc
add
adc
in
mov
int3
hlt
movsl
ja
add
clc
movsb
add
gs
loopne
xor
add
add
push
add
pop
lds
sti
push
fs
xchg
lea
test
out
mov
repnz
push
sbb
das
mov
add
or
add
add
add
ja
in
jl
mov
add
add
fldcw
add
inc
bnd
and
add
inc
lahf
fs
sbb
mov
pop
adc
sbb
fiadds
add
add
insb
pop
dec
cmp
jge
test
add
sbb
pop
pop
push
or
inc
xchg
dec
push
or
add
inc
lret
cmc
sbb
push
mov
dec
and
lock
inc
jb
mov
jecxz
pop
scas
add
rorb
jge
jl
add
js
cmp
cmp
sub
add
add
std
sbb
stos
add
sbb
je
sub
test
call
lret
fwait
mov
movsb
add
or
add
add
push
fbld
add
daa
and
fdivr
int
mov
sbb
loop
loope
sbb
mov
and
xor
lahf
int
std
push
sbb
mov
test
sbb
jl
mov
jg
lret
lcall
add
cwtl
jmp
add
xchg
test
add
sbb
xchg
mov
add
adc
lods
das
inc
das
jno
xor
scas
call
sub
cld
and
add
inc
sub
add
xchg
pop
cmp
dec
jge
dec
in
xchg
mov
adc
lea
add
test
add
pop
push
add
inc
cmp
inc
xchg
popa
adc
xchg
imulb
add
add
mov
push
pop
sbb
fidivrs
add
loope
add
and
add
jl
ffree
xlat
enter
inc
cmp
adc
mov
mov
mov
add
xor
xorl
push
or
add
xchg
jbe
out
movsb
add
push
jg
cmp
mov
cmp
sub
add
dec
insb
fldl
pop
mov
mov
add
add
lret
xchg
add
mov
sbb
add
xor
add
mov
add
ljmp
xchg
loopne
ds
scas
add
inc
lahf
sbb
xor
add
add
xchg
pop
test
add
xchg
daa
gs
cmpsb
add
xor
aad
dec
push
test
mov
pop
adc
add
scas
cmp
add
lods
add
dec
or
add
add
ud0
add
insl
xchg
mov
add
ret
mov
sbb
or
insb
dec
lret
dec
xchg
sbb
add
stos
add
das
sub
add
imul
add
push
sub
add
sbb
out
xor
xor
bswap
cmpsl
iret
xor
and
add
add
test
add
add
adcl
add
cmp
aas
mov
add
pop
push
test
add
add
push
in
movsl
mov
je
jbe
mov
add
dec
mov
add
sub
add
inc
and
add
mov
sbb
mov
and
add
cmc
jg
scas
add
cmpsl
loop
incb
add
jmp
fnstsw
mov
scas
out
sub
loop
add
addb
adc
int
push
mov
push
pop
cmp
in
jmp
sbb
mov
movsb
add
adc
and
add
mull
insl
sub
cmpl
cmp
mov
loop
xor
pushf
xor
mov
in
lahf
adc
mov
add
sub
add
cmpsl
je
jmp
xor
repz
mov
adc
scas
add
or
and
add
aam
cmpsl
push
xor
mov
and
add
into
pop
and
add
jns
add
and
add
negl
or
add
imul
add
sub
add
cmp
inc
cmpsb
add
into
dec
push
xchg
ss
add
sbb
in
push
add
jle
out
xor
or
lret
and
add
add
jb
mov
addr16
pusha
mov
xchg
lods
add
jb
stc
mov
add
add
add
rcrl
idivb
loop
jo
push
pop
pop
jecxz
ljmp
dec
cmovb
outsb
movsb
add
addb
pushf
add
mov
xchg
fcomip
ret
lahf
mov
movsl
push
add
inc
jl
cltd
inc
ftst
shld
test
add
add
add
add
sbb
andl
mov
lea
inc
pop
jp
jp
sbb
dec
das
popf
test
daa
mov
add
push
movsb
add
stc
jmp
stos
xchg
addb
sti
jnp
xor
mov
add
and
add
add
jp
push
mov
add
pop
aad
aas
rol
in
add
add
hlt
mov
sub
add
xchg
and
mov
jecxz
mov
and
or
add
pop
out
arpl
mov
lret
ud2
roll
add
adc
int
mov
mov
add
cld
fstp
pop
xchg
std
lods
add
mov
add
add
loope
mov
cli
add
and
sub
add
xchg
sub
and
daa
scas
out
outsl
gs
and
clc
ss
sub
add
imul
mov
add
jbe
jmp
icebp
cli
jno
mov
add
sub
push
adc
int
add
sbb
mov
ret
ss
int3
aaa
or
add
add
push
enter
imul
in
fs
mov
add
sbb
ja
and
add
xchg
xchg
jb
xchg
push
ficoms
push
out
xor
or
mov
add
imul
add
lretw
mov
outsl
inc
sarb
cmc
data16
add
fcmovnu
xor
xchg
add
add
xchg
cld
xlat
cmp
add
add
add
vextracti32x4
add
pop
and
jl
and
add
nop
pop
or
add
das
cld
jnp
shrl
shlb
mov
add
fsubs
add
aad
add
jecxz
test
imul
jo
mov
add
add
inc
cli
fldenv
lds
sbb
int3
daa
pop
cltd
cld
push
jae
in
dec
test
add
cmp
hlt
out
xchg
mov
call
lods
add
mov
xor
mov
out
popa
xor
outsl
xchg
mov
mov
add
movsl
sbb
fwait
jae
aas
into
pusha
addb
cli
in
stc
jl
out
sbb
ret
mov
jmp
fstpt
mov
call
push
xchg
push
scas
mov
add
pop
out
repnz
int3
cmc
xor
add
cmpsl
pop
lahf
nop
movb
add
out
and
inc
push
or
mov
add
add
fistl
sbb
in
popa
mov
add
sahf
stos
sub
mov
push
and
add
or
add
jge
movsl
gs
add
add
sub
add
xchg
add
add
enter
sbb
cmp
add
in
cmc
pop
addb
mov
push
or
add
xchg
add
and
add
add
cmp
outsb
inc
test
mov
ljmp
cmp
cmpsl
in
pushf
pop
sub
add
shll
rorl
test
add
add
pop
jbe
add
inc
mov
popf
cmp
test
push
mov
nop
iret
xchg
aas
int
add
jmp
stc
cmp
outsb
call
in
push
and
add
outsb
xor
mov
cmp
arpl
leave
add
sbb
inc
test
add
add
and
js
mov
fcoms
add
les
outsb
pop
outsb
cmp
and
and
mov
inc
je
add
add
xchg
enter
insl
ja
das
stc
pop
in
sbb
mov
lods
add
sbb
push
imulb
pop
pop
xchg
xchg
push
add
or
sar
jl
fs
lods
add
cmp
ret
mov
add
mov
add
add
mov
lahf
popa
sbb
add
pop
dec
stos
add
lahf
cmp
repnz
push
jbe
stos
pop
mov
loopne
pop
pop
in
divb
add
mov
add
add
stos
sbb
rorb
add
fdivrl
add
pop
ss
stos
stos
add
mov
enter
pop
hlt
or
sarb
add
add
leave
mov
add
fbld
add
dec
movsl
loope
add
mov
fimull
add
push
call
add
add
mov
stc
mov
sub
add
add
xchg
outsb
ja
add
inc
or
bound
addl
sbb
js
fsubrs
adc
ret
pop
pop
lea
mov
dec
hlt
adc
les
jb
or
add
dec
mov
aad
stos
adc
mov
push
add
gs
je
add
ret
sbb
cli
or
add
or
add
jns
clc
sbb
jne
shrb
and
add
inc
arpl
fidivs
clc
mov
xor
add
xchg
xchg
dec
cli
mov
add
jl
sbb
lret
cmp
stc
test
mov
inc
mov
inc
jb
aad
cmp
xchg
cmp
mov
mov
add
xchg
pop
popa
and
add
xchg
lret
mov
or
add
hlt
arpl
jmp
daa
ja
addb
das
data16
add
and
in
mov
pop
cwtl
sub
add
jl
sub
aad
add
adc
mov
xchg
adc
les
add
inc
and
lds
cmpsl
dec
je
mov
clc
pop
aaa
iret
repz
pop
mov
cltd
cli
fistps
adc
jne
aaa
aas
aaa
push
stos
push
lods
add
sbb
add
out
jecxz
mov
add
sub
add
pop
pop
in
pop
mov
fs
cmp
jbe
and
shll
xorl
add
mov
lea
mov
add
mov
xlat
and
add
xchg
hlt
popa
adc
cmc
jge
inc
inc
adc
fisubl
xchg
add
adc
std
push
mov
sbb
xor
das
lret
mov
add
adc
pop
pop
out
mov
inc
jns
aam
xchg
pop
daa
or
add
iret
out
add
rcrl
lds
pop
call
and
add
xor
add
in
outsb
cwtl
dec
adc
cmpsl
or
add
add
mov
divps
add
inc
mov
add
add
add
ret
lcall
fmul
push
push
jl
mov
mov
add
sub
in
sbb
testb
or
add
add
push
add
pushf
xor
or
add
arpl
add
ja
addb
enter
call
add
stos
add
add
add
adc
sub
add
add
cwtl
ljmp
maxps
jbe
add
add
imul
sbb
out
pop
cmpsb
add
xor
add
incl
add
add
sub
add
add
negb
roll
addb
testb
add
push
cwtl
fistps
add
xor
add
add
ja
lret
xchg
add
add
loopne
fiaddl
jle
push
dec
pop
xor
push
push
adc
into
in
add
add
mov
jmp
ret
sahf
sub
add
add
aas
jg
xchg
sbb
add
add
push
add
das
pushf
ret
pop
fdivrs
pop
xchg
add
xlat
popf
push
lret
shlb
mov
xor
add
pop
sti
enter
std
aas
pop
mov
ficoml
and
dec
shl
xchg
lret
xchg
add
add
pop
shlb
xor
imul
xor
dec
cld
sub
add
mov
mov
mov
mov
or
add
addb
push
jo
sub
add
jne
mov
add
lock
sbb
rclb
add
dec
mov
xchg
test
cmp
ljmp
imul
add
int
je
pop
dec
fldl
add
add
mov
add
rorl
add
add
popa
cmp
ss
jne
cmp
cli
cmp
sub
lcall
mov
lea
add
add
jge
add
add
mov
add
jbe
xchg
add
mov
add
sub
add
add
push
add
cmpsl
inc
adc
popa
leave
push
add
aad
fdiv
das
dec
xor
add
cmp
xor
lcall
sbb
mov
sub
push
scas
fwait
push
pop
cmp
dec
mov
push
outsl
cmpsb
add
addb
les
pop
and
aas
sti
xchg
rorb
lret
lcall
add
inc
scas
add
push
sahf
sbb
cwtl
mov
insl
fdecstp
rclb
mov
mov
outsb
in
and
aam
inc
lock
xor
sbb
cmp
in
xor
and
scas
add
in
imul
add
sbb
inc
jl
push
add
movsl
sub
add
movb
add
cmp
mov
push
outsl
lret
pusha
mov
dec
mov
leave
xor
add
mov
loopne
or
outsl
test
add
test
add
cmp
popa
ja
dec
pushf
int
inc
jp
jp
push
insl
sbb
sbb
testl
addb
andl
dec
pop
sbb
add
xrelease
add
jecxz
out
pop
xor
js
div
adc
add
outsb
fnstenv
add
add
add
xor
add
inc
nop
lcall
lret
add
add
pusha
leave
stc
insb
jmp
scas
pop
mov
add
loopne
aas
mov
pop
data16
add
out
mov
push
mov
call
add
test
add
add
mov
add
sub
js,pt
imul
outsl
insb
push
les
add
dec
call
aas
cmpsb
add
addb
aad
pop
das
jns
xor
cwtl
out
pop
sub
adc
inc
lahf
in
jbe
addb
cmp
xchg
clc
fsubrl
bound
add
cmp
add
push
iret
pop
popa
int3
popf
jbe
xlat
fstpt
stc
aad
repz
call
cld
jecxz
mov
add
adc
jl
add
xchg
jle
pop
jnp
stos
add
xchg
addb
insb
cmp
and
add
cmp
jb
nop
add
add
pop
pop
sbb
and
add
sbb
mov
add
inc
jae
pop
xor
insb
pop
rol
xchg
add
out
cmp
add
outsl
imul
add
sti
cmp
mov
popf
inc
mov
add
cmp
addb
push
add
into
sti
mov
in
cmp
std
imul
repnz
add
dec
cmc
adc
add
movsb
add
add
popf
inc
addb
push
dec
in
sbb
fucomp
mov
sbb
mov
aaa
out
add
add
inc
xor
test
add
cld
lock
add
out
aas
xchg
clc
xor
pop
lret
out
mov
into
adc
add
add
pop
jmp
aad
clc
xchg
clc
sar
xchg
add
popf
mov
cmpsl
rorl
add
push
imul
aas
mov
inc
xor
push
rorl
mov
adc
push
decl
add
std
loop
je
add
jno
add
popf
fdivr
outsl
clc
mov
add
pop
repnz
mov
scas
cmp
cmpsb
add
dec
fcmovnu
adc
in
jo
cltd
sbb
sub
add
push
mov
aad
icebp
xchg
sarb
js
mov
add
add
pop
test
add
testb
xchg
pusha
scas
jbe
orl
xor
jge
or
add
popf
mov
add
pop
xchg
iret
dec
inc
mov
add
testl
add
jne
cmc
pop
and
add
rclb
fdiv
mov
add
add
mov
add
lret
add
sti
jecxz
rcr
adc
imul
arpl
lods
add
movswl
imul
sub
enter
test
add
movsbl
sub
add
xor
add
icebp
cli
or
inc
and
add
add
gs
add
dec
fwait
test
mov
add
lret
adc
fnstcw
add
mov
mov
ret
jp
add
inc
pushf
out
cwtl
icebp
add
add
pushf
lret
add
loop
inc
sbb
je
dec
adc
mov
add
and
nop
sbb
xor
add
cmp
add
add
xchg
shll
add
fisttpll
xor
jmp
into
icebp
sbb
divb
ljmp
fs
repnz
xchg
test
add
rcr
aam
test
add
push
icebp
jmp
fmuls
int
add
inc
dec
adc
mov
pop
mov
das
push
push
add
pop
js
daa
mov
or
add
insb
cmp
adc
stc
nop
pop
cwtl
adc
sub
and
add
mov
add
inc
roll
pop
mov
add
mov
cmp
pop
pusha
mov
add
stc
std
std
imul
mov
mov
or
divb
sahf
xor
test
add
out
add
adcl
sub
sub
je
rcll
fsubrs
add
add
cmp
add
inc
ret
add
add
add
and
jge
xor
push
add
xor
js
aad
nop
and
add
sbb
cli
gs
adc
loop
add
imul
mov
jg
call
inc
jae
scas
add
inc
scas
stos
addb
xchg
add
cmpsl
mov
add
push
add
imul
add
sahf
enter
jmp
xchg
sub
add
jge
mov
push
cmc
or
sub
add
and
add
aas
add
pushf
adc
fwait
js
add
mov
lret
add
sub
mov
add
and
add
inc
mov
xchg
clc
aas
mov
add
jecxz
jg
or
add
add
dec
or
xchg
in
mov
xor
xchg
lret
ss
addb
pop
cmp
bound
pop
add
add
mov
aaa
pop
add
leave
iret
ret
add
push
add
inc
sbb
adc
hlt
loopne
roll
add
xchg
daa
sub
add
or
loop
add
jae
cld
mov
repz
clc
mov
add
ds
lcall
idiv
and
pop
pop
icebp
push
in
push
add
add
add
sub
aad
mov
add
mov
sub
add
sub
add
lret
or
add
jge
addr16
lcall
js
test
cmpsl
iret
aas
jle
leave
dec
mov
cli
xor
xor
loopne
gs
mov
add
std
imul
add
or
or
add
add
daa
enter
scas
add
rcrl
jle
mov
fldenv
cmc
pop
push
aaa
fimuls
add
add
sarl
ret
fisubs
call
insl
push
pop
in
popa
xchg
add
sbb
sub
add
mov
lret
popf
aaa
dec
jg
ljmp
adc
std
mov
add
inc
adc
cmp
add
add
cmp
pop
adc
cmpsl
push
adc
lea
mov
add
add
ja
push
je
add
push
addb
cld
ljmp
push
aaa
jne
int
cmc
push
jns
adc
add
mov
and
add
sbb
xlat
dec
scas
add
jnp
add
into
arpl
xor
inc
pop
repnz
add
cmp
pop
frstor
stc
xor
cltd
and
add
add
pop
js
and
add
push
sbb
frstor
add
mov
add
add
fldl
add
add
add
sub
data16
fst
inc
mov
jmp
jg
jl
pop
push
xchg
adc
jnp
add
push
mov
add
lcall
sub
add
rorb
sbb
cmpsl
push
add
std
fcompl
inc
push
pop
xchg
add
jl
add
fs
leave
push
xchg
movsb
add
xchg
loop
addb
pusha
shl
dec
add
jns
cmpsl
pop
arpl
add
add
add
pop
xor
and
add
fs
adc
add
pop
dec
mov
add
hlt
test
add
outsl
inc
mov
add
dec
add
add
pop
imul
out
addl
adc
sub
fldenv
add
shrb
mov
outsl
lea
mov
add
je
aam
adc
popf
test
jecxz,pt
mov
add
cmp
pusha
enter
push
add
or
add
add
aaa
sub
xor
cmc
push
pop
mov
add
add
and
xchg
and
les
jmp
lock
jb
enter
out
add
dec
jbe
sahf
test
add
stos
add
xchg
jo
mov
add
jbe
arpl
add
sbb
adc
jo
in
pop
cmp
adc
dec
cli
push
adc
fimull
xlat
out
std
mov
int3
add
mov
sub
or
xor
dec
add
cli
stos
add
fistl
sbb
fisubrl
add
pop
adc
xor
out
add
sbb
adc
in
stos
int3
clc
inc
fiadds
add
int
inc
sbb
neg
push
add
pop
or
add
lcall
mov
rclb
add
pop
ret
xor
adc
dec
pop
xchg
fistpll
fildl
ret
pop
xor
xchg
std
ret
cmc
shlb
add
or
sub
add
dec
js
inc
adc
add
mov
add
xchg
push
insl
cmp
adc
jbe
push
xchg
pop
and
add
adcl
mov
mov
add
add
add
flds
dec
adc
movsl
loopne
xchg
ret
xchg
mov
push
add
push
add
mov
xor
add
aam
icebp
jge
or
xor
jmp
out
cmp
xor
je
mov
add
in
jl
scas
xlat
mov
add
xor
adc
cmp
push
add
cmc
cmp
pop
pop
test
add
add
push
ud0
out
inc
arpl
scas
add
aam
and
add
jbe
xchg
add
push
nop
xchg
add
pop
imul
scas
add
add
inc
add
in
and
add
push
sbb
pop
inc
mov
and
jp
mov
add
add
mov
add
sbb
rolb
popa
push
push
pusha
test
add
xchg
sub
shr
scas
push
add
jns
xchg
in
mov
sbb
mov
add
stc
mov
inc
inc
mov
fsubs
xor
lds
or
rcl
cli
ret
rolb
test
add
add
mov
jge
add
aaa
lahf
sub
add
jno
ds
jmp
mov
movsl
ds
popf
mov
add
stc
ja
pop
jnp
pop
movsl
jb
inc
cmc
in
cld
jg
scas
push
sub
add
mov
ret
dec
and
add
in
dec
in
cmp
call
add
mov
pop
int3
xor
add
in
cmc
adc
repnz
fstpt
ret
fwait
arpl
cmc
leave
clc
dec
xor
jg
sti
or
adc
adcl
mov
sub
add
mov
add
add
repnz
pop
pop
mov
push
and
add
outsl
filds
lods
in
add
shll
add
pop
lock
mov
add
sub
dec
push
dec
in
lret
scas
add
les
add
js
or
addb
jmp
into
outsb
cmp
fsts
rcll
mov
pop
xor
xor
jmp
xchg
add
mov
pop
gs
pop
jecxz
add
jno
add
dec
in
sbb
xchg
pop
clc
popl
stos
add
jb
aas
jl
push
lds
scas
add
dec
data16
insb
push
add
stos
and
add
jbe
xor
mov
fcompl
add
jns
repnz
or
add
lds
addl
sub
add
push
jbe
sub
add
popf
add
outsl
cmc
iret
fwait
loop
add
push
inc
out
xor
or
add
dec
or
add
adc
stos
jae
lcall
in
mov
add
add
add
add
and
mov
add
push
lea
add
mov
outsl
cli
test
dec
push
add
xchg
add
xor
loopne
cmp
mov
inc
or
add
add
and
add
pop
ss
mov
jmp
jmp
pop
push
push
sti
sub
jne
sarb
add
add
add
add
lcall
call
dec
aam
or
add
pop
stos
add
sbb
xchg
add
pushf
cmpsb
add
xor
add
xchg
mov
cmp
sub
add
mov
scas
stos
imul
sahf
xchg
add
add
popa
mov
mov
jge
loopne
xor
test
add
dec
insl
jmp
and
add
addb
pop
gs
les
ret
or
add
add
add
daa
mov
add
add
mov
add
jnp
mulps
out
mov
pop
addb
xchg
add
scas
add
and
pushf
cli
jno
mov
mov
jns
cmc
jp
xchg
in
add
aaa
or
add
imul
add
data16
mov
add
add
and
add
daa
push
add
add
in
mov
add
pop
xor
push
add
sub
add
mov
xchg
cmp
add
ficomps
cltd
sbb
inc
sbb
xor
push
in
lods
add
pop
sahf
jb
mov
jg
cld
cmpsl
mov
add
add
mov
add
cltd
ret
cli
rclb
jle
addb
pop
fldcw
lds
dec
push
add
pusha
lods
add
xchg
in
test
cmp
mov
add
pop
jmp
enter
roll
subl
insb
call
sbb
jnp
aad
and
add
xor
sub
add
sub
mov
cmp
outsb
ret
push
outsb
and
add
stos
add
sbb
cld
or
add
and
jle
add
scas
add
cwtl
push
bound
mov
push
add
add
aad
sahf
cld
mov
add
add
je
hlt
push
popa
in
vmulps
cld
addr16
lcall
add
shlb
jg
aam
xchg
add
mov
addb
xchg
cmp
outsl
ja
cmpsb
add
addb
idivl
jns
arpl
icebp
aas
in
lret
loope
test
add
fdivs
add
add
add
sbb
lea
add
add
or
and
fcom
pushaw
xchg
xchg
add
push
jae
scas
cmp
mov
das
push
add
adc
cmc
movsb
add
inc
rcrb
pop
cltd
movsb
add
xchg
push
call
adc
iret
ds
add
out
sub
add
add
dec
mov
add
insb
repz
add
add
add
cmpsb
add
loopne
leave
mov
pop
rol
add
std
sti
mov
or
add
rorl
add
mov
sbb
clc
std
pop
mov
sbb
pushw
add
sbb
jp
mov
out
loopne
mov
mov
add
out
and
add
insl
ds
push
in
or
aas
xchg
dec
push
jl
push
loope
stos
add
js
mov
lret
outsl
mov
add
mov
cltd
ljmp
mov
cmp
mov
repz
xor
loop
incl
loope
add
ja
mov
add
addr16
cmp
add
mov
test
add
aaa
inc
jg
daa
jl
sbb
dec
lea
ss
rorl
das
and
lret
dec
jl
xchg
add
sahf
jbe
cli
mov
cmc
aaa
mov
imul
ss
out
pusha
push
xor
adc
lret
push
add
add
mov
jbe
cwtl
jno
mov
scas
add
fsub
ret
aas
push
add
or
add
adc
mov
add
test
fwait
or
add
add
ljmp
add
add
xor
sbb
and
add
jb
pusha
cmc
jns
lret
ja
pop
inc
jl
dec
xchg
adc
jecxz
pop
cmp
lret
add
push
dec
or
push
lcall
jg
in
add
xor
dec
xlat
dec
sub
add
jne
cmp
add
ja
xchg
rep
add
les
inc
add
push
inc
add
xchg
dec
xchg
cmp
repnz
adc
adc
pop
loope
lds
jb
and
test
fdivrs
pop
test
add
cmc
push
add
cmpsb
add
and
add
dec
movsb
add
test
add
add
mov
scas
sti
mov
add
test
aaa
lods
inc
out
xor
xlat
or
add
or
add
add
dec
xchg
add
mov
add
and
add
sbb
add
mov
add
add
ret
cmp
adc
mov
xrelease
add
movsl
jne
pop
push
dec
sti
sub
add
pushf
mov
lea
cmc
imul
cmp
inc
iret
jp
in
inc
ds
aam
add
xchg
push
in
xor
test
add
sub
add
loop
and
add
dec
movsl
les
push
out
sbb
add
add
add
sub
add
add
or
add
sahf
or
push
add
push
and
add
adc
cmpsb
add
ds
pop
mov
cmp
adc
add
aad
and
add
mov
add
add
stos
add
cli
and
add
xchg
pop
jns
ljmp
lcall
cli
data16
add
out
insb
xor
gs
jo
rclb
jnp
adc
sbb
popf
imul
inc
test
add
dec
and
add
add
xchg
lds
outsl
out
in
add
add
jb
lret
hlt
lss
add
pop
xchg
fimuls
xor
sub
repz
sub
repnz
sbb
push
add
xlat
lock
add
mov
add
xchg
dec
call
js
pop
lcall
addb
push
add
mov
decl
or
add
dec
sbb
cwtl
test
add
int3
lea
add
imul
push
xchg
fisttps
and
add
push
push
add
leave
xlat
cltd
cmp
add
add
jg
xchg
ds
loopne
xor
popa
ja
lcall
jp
xchg
hlt
adcl
jno
scas
add
fistl
mov
add
mov
add
or
sti
daa
repnz
cmp
inc
or
add
mov
inc
outsb
add
inc
daa
mov
adc
or
push
mov
add
inc
or
cmp
add
add
mov
add
add
cmp
or
add
add
pop
aam
adc
out
insl
push
push
das
ja
pop
mov
add
xor
ret
add
lods
add
rcr
movsl
add
insb
addr16
xchg
add
std
out
mov
imul
push
push
sbb
cmp
jge
lahf
dec
stos
or
add
mov
sub
mov
lock
addb
mov
mov
aad
inc
cmpsl
dec
int
andw
inc
loopne
push
mov
lds
pop
into
das
push
lods
add
push
jb
mov
dec
ljmp
add
add
fistps
scas
dec
xchg
cld
fcomps
fadds
lret
cmp
cmpsb
add
lahf
or
add
mov
mov
add
jns
mov
add
push
aas
roll
add
addb
lea
bound
mov
add
movsl
jge
leave
pop
pop
and
add
xor
addb
sbb
push
mov
dec
out
in
test
add
push
aas
mov
add
add
pop
jae
add
add
add
mov
in
xor
ret
std
cwtl
out
mov
add
std
repnz
pop
jmp
or
add
sbb
add
cmp
pop
jae
push
pusha
enter
scas
addb
bnd
lock
add
add
out
add
pop
lock
out
inc
popa
pop
shrb
sub
add
push
jg
out
popf
mov
add
outsb
scas
add
or
xor
push
rolb
pop
mov
add
xlat
pop
pop
ljmp
mov
add
test
add
mov
data16
add
int3
mov
lods
mov
or
mov
lea
add
shll
add
push
and
add
leave
and
add
int3
push
addr16
inc
outsb
push
pop
and
add
xor
add
aas
je
add
movzbl
mov
repz
push
xchg
inc
cli
fsubrl
fcoms
jle
adc
insl
les
cmp
and
add
dec
mov
add
add
popf
flds
add
add
nop
adc
mov
mov
add
xor
mov
add
lahf
cmp
add
test
add
add
xchg
sub
add
add
test
add
mov
ret
fdivrs
jbe
test
mov
out
outsl
dec
fwait
test
add
inc
adc
fldl
mov
push
push
sub
add
pop
and
add
adc
pushf
cmp
sti
mov
cwtl
jb
mov
and
add
add
add
stc
xor
sar
dec
loopne
add
cmova
fwait
sub
add
add
inc
stc
dec
fwait
or
add
int3
scas
cmp
cmp
dec
ss
or
add
loope
sub
add
mov
rorb
cltd
cmp
das
mov
rclb
cmp
sbb
std
fisubrl
aaa
addr16
and
outsl
lcall
add
inc
int3
or
call
dec
add
xor
xchg
nop
dec
add
add
rorl
add
repz
add
add
add
mov
fninit
movsl
adc
fwait
lret
mov
in
arpl
dec
pop
outsl
test
and
jo
mov
aas
adc
xchg
fdivrl
dec
or
add
mov
add
in
add
mov
int
testb
inc
imul
cmp
pop
mov
inc
xchg
mov
sub
rcll
lods
ljmp
test
add
jle
scas
unpckhps
xlat
shrb
fcomps
add
jmp
ret
and
jmp
jecxz
mov
addr16
daa
push
inc
mov
pushw
jne
inc
pop
xchg
push
ljmp
add
push
fisttpll
repz
pop
lret
pop
pop
std
jg
iret
call
popf
aad
add
sbb
mov
add
sbb
ljmp
jecxz
jo
add
mov
mov
add
movsl
xchg
add
out
xor
movsl
adc
ret
fdivr
aam
xchg
add
in
add
inc
in
jp
lds
xor
aas
inc
fdivrl
inc
mov
add
shlb
clc
nop
js
fisttpl
stc
inc
shll
cmp
add
adc
add
adc
add
stc
add
inc
fstpl
dec
cmp
jns
imul
fbld
add
cltd
mov
xchg
ret
ljmp
push
or
add
fildl
add
jbe
push
add
jno
xor
add
imul
mov
mov
divl
call
out
rolb
add
js
mov
add
lods
add
ds
clts
add
outsl
cwtl
insb
mov
dec
fdiv
adc
out
add
test
add
and
add
and
mov
jle
pop
lea
add
cmc
test
addb
mov
sub
aam
add
and
add
test
add
lahf
fwait
stos
add
popf
mov
add
and
add
push
add
sub
cmp
sub
add
inc
jnp
int3
stos
and
add
add
mov
sarl
clc
in
adc
pop
adc
mov
sbb
jg
inc
rcr
jmp
ret
in
and
iret
and
add
mov
pop
daa
ret
inc
idivb
adc
fsubrs
push
nop
mov
add
out
jl
aad
push
addb
jg
sbb
inc
xor
test
out
or
add
xor
inc
fcmovne
dec
bound
add
xor
add
and
add
enter
add
and
add
addb
jl
xchg
push
sbb
scas
add
fmuls
add
add
stos
not
xchg
add
das
out
pop
dec
test
cmp
sar
icebp
imul
add
push
cmp
xlat
movsl
cld
push
adc
xor
add
sub
add
add
shl
lret
test
add
add
je
adc
push
mov
jl
pusha
mov
add
and
push
add
cmp
inc
fsubl
add
pop
add
out
hlt
sbb
repz
xor
rol
or
add
xchg
jge
xchg
fwait
jecxz
mov
mov
add
movsl
fwait
clc
outsb
dec
mov
add
xchg
inc
cltd
sub
stc
pop
and
add
mov
push
inc
mov
test
add
add
dec
rcr
fimuls
add
mov
in
jno
add
pop
jo
cmp
imul
int
shll
mov
test
add
xchg
and
add
test
jp
inc
aaa
test
xlat
aam
nop
fmuls
add
add
dec
inc
jmp
lds
scas
add
fiadds
xor
add
shrl
rcll
clc
mov
add
or
test
sub
add
mov
repz
push
outsl
lahf
lcall
jns
jb
add
push
into
cmp
xor
das
cmpsl
or
add
sub
add
adc
ja
loope
in
cmc
aam
xchg
outsl
cli
jl
inc
mov
add
or
add
sahf
dec
lret
cwtl
lcall
add
add
sub
add
mov
inc
lahf
aam
add
xor
fsub
cltd
sarl
addb
hlt
adc
frstor
andl
add
cltd
add
add
sub
add
or
inc
and
add
and
add
fs
inc
xlat
cmc
and
add
cmpsb
add
xor
in
sub
add
out
pusha
leave
out
add
pop
or
dec
int
addb
mov
add
add
mov
add
mov
pushf
jne
dec
sub
add
dec
sti
aad
test
test
add
jmp
pop
test
add
outsb
bound
inc
cmpsl
xchg
bound
pop
xor
ds
outsb
mov
adc
mov
add
pop
ds
adc
xchg
out
push
inc
or
add
add
mov
add
and
push
or
add
xchg
test
add
je
xchg
push
add
sub
push
xlat
push
jmp
push
add
dec
fisttpl
add
call
xchg
add
faddl
jne
ljmp
jb
cmpsb
add
xor
in
jno
out
mov
jns
in
sub
add
xor
or
push
fistpll
jae
jle
cwtl
das
fwait
pop
shrb
jno
push
adc
sub
add
sub
add
or
cld
fadds
add
add
add
xchg
add
push
push
ret
imul
add
and
jle
add
pop
arpl
movsl
cmp
out
or
add
mov
push
add
aad
dec
mov
int3
jno
add
dec
inc
pop
or
inc
lret
add
pop
push
add
add
ret
loope
inc
addr16
orl
ss
sbb
outsl
movsb
add
add
add
cmpsl
int
icebp
mov
add
out
pop
xchg
mov
movb
inc
imul
sbb
mul
call
jns
add
fstps
enter
aaa
mov
and
add
out
cmpsb
add
add
add
or
add
mulb
cmp
push
loopne
mov
add
arpl
xchg
add
imul
test
add
xor
scas
add
lret
xor
inc
fisubrl
add
add
cltd
rorl
or
add
jmp
pop
and
add
in
xor
outsb
add
mov
add
xlat
stos
sbb
add
cmp
jo
sahf
xlat
dec
ljmp
add
jne
jmp
lret
add
sub
mov
out
xchg
orl
test
add
pop
pop
sbb
add
sbb
add
popa
in
sbb
xchg
leave
roll
mov
cli
in
inc
push
add
out
pop
insb
or
add
out
add
jge
xchg
fisubrs
out
outsb
addr16
adc
test
xor
jl
std
sbb
pusha
hlt
std
xor
add
std
sbb
aam
xor
add
addr16
add
mov
shl
xchg
das
sub
add
inc
jge
mov
jge
push
push
mov
sub
add
add
jnp
in
push
and
dec
cwtl
jne
insb
rorb
add
lret
add
test
into
push
sub
push
dec
push
out
adc
in
add
jno
add
jbe
iret
in
lods
inc
hlt
mov
repnz
push
add
push
add
and
ljmp
xchg
cmpsl
je
adc
out
in
gs
xchg
jae
push
sub
add
sbb
jg
leave
jmp
pushf
lcall
cmpsb
add
fistpll
jmp
xor
jns
mov
in
cmp
movsb
add
pusha
jno
out
aas
lea
push
int
jmp
add
mov
add
and
add
repz
scas
xor
add
add
cmpsl
je
in
pop
and
add
pop
filds
push
add
xlat
push
lahf
adc
push
mov
add
dec
mov
in
pop
xor
or
add
xlat
and
push
pop
into
or
add
adc
in
jae
jle
add
lret
movsl
fcomp
sub
add
xchg
dec
roll
xor
add
jecxz
enter
and
add
add
cltd
mov
cmp
mov
call
fiadds
add
add
add
inc
push
sbb
lcall
mov
mov
pusha
popl
cmp
ja
insb
sbb
and
cwtl
xor
sbb
jne
xchg
pop
sub
add
add
sbb
jmp
add
and
pop
mov
in
jmp
ret
and
add
call
int
pusha
js
add
dec
and
add
mov
add
or
add
dec
mov
dec
push
mov
push
mov
jmp
adc
xchg
jmp
aad
inc
cmp
cld
insb
pop
cmpsb
add
addb
ror
xchg
mov
or
pop
arpl
test
add
popa
and
fidivs
addl
stos
add
into
shll
idivl
pop
or
int3
fwait
ret
xchg
jl
add
popl
add
add
lock
inc
mov
add
cwtl
jle
ficoms
inc
mov
aaa
ljmp
add
mov
add
test
add
add
sarb
das
xor
mov
das
hlt
fisttps
add
xor
add
xor
packssdw
cwtl
cwtl
or
add
mov
inc
mov
mov
add
xchg
add
pop
popa
leave
dec
jge
test
enter
cmp
sbb
shlb
jmp
mov
sti
adc
insb
ficoml
or
mov
iret
addb
js
push
push
add
adc
jne
flds
ret
add
test
push
xchg
aad
roll
stos
mov
add
or
push
add
adc
out
adc
mov
add
rcll
add
sub
add
inc
mov
add
aaa
insl
bound
add
dec
rclb
xor
or
in
sbb
lcall
pop
sar
or
add
add
nop
adc
xchg
cmp
sbb
add
ja
loope
imul
lahf
adc
add
mov
add
sbb
enter
sbb
les
out
clc
jmp
add
int
ficompl
xor
stos
push
add
je
add
xor
iret
cmp
sbb
add
addr16
js
sti
push
stc
fcomps
and
add
pop
adc
sbb
add
cmpsl
lret
fs
inc
add
add
push
push
stos
fdivrl
add
in
popa
mov
cmpl
xchg
inc
daa
movsl
int3
pop
xor
out
fstp
fstps
in
imul
mov
ljmp
aas
add
add
add
cmp
je
add
clc
jbe
stos
add
mov
push
fs
stc
aad
adc
jo
sub
xchg
xchg
jo
or
xchg
xor
scas
adc
in
mov
add
pop
jno
pop
loop
clc
das
mov
clc
mov
add
adc
iret
lret
lock
dec
shll
add
xchg
xchg
add
outsl
pop
mov
add
loopne
add
test
add
movsl
lods
je
ljmp
push
fisubs
add
mov
sbb
imul
loope
and
jp
push
cmp
xchg
and
sbb
or
xor
data16
add
fdivrl
adc
add
mov
jbe
cmpsl
or
pushf
sub
add
add
cmp
fs
stos
push
sbb
loope
cmc
xchg
add
clc
shrb
lret
insb
pop
repnz
cmp
clc
test
jb
mov
xchg
cwtl
in
mov
adc
aad
add
daa
ret
and
add
sub
arpl
sub
add
rcll
xchg
jae
mov
xor
adc
stos
insb
and
add
inc
sti
movsl
sub
add
mov
mov
jbe
leave
pop
mov
pushf
ljmp
pop
adc
jmp
sti
call
pop
xchg
add
mov
out
incl
jb
pop
mov
add
xchg
outsl
sbb
xchg
jns
aas
ret
cmc
or
add
rcrl
addb
fstpl
icebp
out
jl
add
jb
imul
add
inc
shll
cmp
movsl
dec
mov
xchg
or
mov
pop
cmp
sub
add
add
ja
imulb
movsl
sub
add
out
aam
mov
sbb
cmp
bound
cmp
add
add
inc
lods
add
adc
fisubrl
clc
movsb
add
shr
mov
in
add
repnz
add
outsb
out
pop
cmpsl
addr16
loop
aam
out
scas
add
fisttps
jge
add
ret
pop
xlat
cmpsb
add
mov
add
shlb
ja
xchg
sub
cmc
out
jbe
adc
mov
add
hlt
addr16
into
shrb
int
xchg
jo
xlat
shr
outsl
add
inc
js
arpl
fs
pop
push
pop
xorl
add
add
cltd
icebp
adc
xor
add
test
pop
cmc
loop
pop
push
add
fwait
or
add
add
xchg
je
xor
xlat
fsub
cld
ficoml
addb
std
std
fnstenv
jl
cwtl
sbb
insl
enter
add
mov
std
jg
xor
and
in
mov
fucomip
lods
add
test
add
push
add
mov
add
stos
pop
in
adc
or
loopne
mov
ja
add
inc
das
mov
popf
clc
test
or
add
mov
mov
add
jne
add
sti
ljmp
add
insl
repnz
popf
lret
add
add
xchg
aam
mov
push
rolb
das
std
shrl
aas
fcoml
mov
mov
adc
mov
add
add
int
into
js
adc
adc
add
xor
add
jmp
icebp
je
add
pop
add
add
sub
add
add
in
pop
mov
add
int3
sbb
add
mov
mov
add
add
in
fidivl
dec
bound
sub
ds
in
iret
add
les
pop
push
cwtl
sub
add
add
add
add
ja
ja
push
sub
scas
add
or
outsl
shll
or
cmp
inc
sbb
hlt
jl
mov
add
adc
loopne
fcompl
cmp
lahf
repz
mov
pop
fcoml
sub
add
pop
pop
mov
cltd
inc
jno
mov
sbb
pop
lahf
push
mov
xor
mov
loop
scas
add
addb
int3
push
test
add
mov
add
adc
xor
push
in
and
sbb
dec
sub
and
add
lret
xchg
dec
in
ss
push
or
add
add
mov
add
adc
sbb
enter
int3
inc
in
cmp
add
dec
push
sahf
in
xor
pop
and
add
addb
add
add
scas
add
addb
xchg
or
insb
mov
gs
call
or
cmp
inc
je
xchg
push
push
add
jmp
xchg
fnstcw
movq
add
mov
add
xchg
push
mov
sub
add
xchg
int3
xlat
push
add
mov
add
sti
shll
add
dec
pop
mov
add
icebp
inc
aaa
sbb
xor
or
xor
jp
add
out
test
dec
fnstcw
add
or
add
lret
mov
push
lds
out
xchg
call
push
mov
sub
add
add
test
add
jo
dec
stos
clc
cpuid
add
jmp
push
loope
lods
add
mov
ror
xchg
js
imul
mov
push
jo
cmp
sahf
cmpsb
add
fsub
push
pop
and
add
movsl
cmpsl
sub
sub
xchg
cmp
adc
mov
sub
dec
insl
or
add
add
jb
into
mov
add
push
jl
test
ret
int3
lcall
or
ds
into
add
out
inc
aaa
mov
sahf
xchg
pop
mov
mov
xchg
pop
mov
jmp
test
add
adc
in
mov
mov
add
out
pop
lahf
dec
call
jbe
add
xchg
add
add
mov
js
js
das
pushf
adc
jbe
dec
mov
add
xchg
adc
inc
xor
add
add
cmp
add
out
xchg
push
stos
add
add
shr
inc
add
cmp
scas
or
add
add
cmp
mov
pop
aad
and
add
pop
inc
jne
mov
sbb
push
add
mov
push
dec
and
lcall
add
add
scas
add
fiaddl
add
mov
test
add
lcall
add
jmp
repnz
int3
xchg
pushf
sub
add
xor
add
add
xor
arpl
xor
push
ret
or
add
add
in
and
sbb
add
faddp
add
add
addb
lcall
mov
add
and
add
xor
jg
sbb
add
cltd
inc
sbb
and
add
add
add
fwait
push
add
mov
add
je
shll
or
add
fldt
pop
rcrl
out
testb
adc
jo
mov
shll
cltd
and
lods
add
push
ja
leave
jp
pop
and
pop
lret
pop
in
lret
jno
clc
sbb
add
test
lret
push
fwait
push
lods
add
movsb
add
cmp
add
imul
rcrl
push
xor
push
test
test
add
scas
or
add
cmp
xor
adc
add
sar
jns
mov
rcll
add
jns
or
push
add
pop
rcrl
fmulp
cmp
insb
dec
xor
pop
push
jg
push
ficompl
adc
dec
ficompl
insb
cltd
cmp
add
stos
add
aam
out
jbe
add
loop
add
sbb
add
add
xor
push
inc
fistpll
push
xchg
fsubs
pushf
fxch
outsb
dec
jns
add
loope
inc
xchg
add
add
call
hlt
mov
shlb
outsl
mov
add
mov
fidivrl
ljmp
ret
sub
add
inc
inc
aaa
int3
or
add
and
add
enter
adc
rep
push
nop
sbb
add
cmp
add
pop
xchg
jmp
push
add
addr16
and
add
movb
mov
stos
add
mov
pop
das
inc
xchg
add
mov
icebp
push
rolb
loopne
pop
adc
sbb
lea
pop
adc
xor
xchg
cmpsl
jne
rcll
xchg
add
add
add
or
stc
lds
add
popa
and
stos
jp
add
add
add
mull
adc
or
add
or
add
ja
dec
stc
lds
add
addb
repnz
icebp
ret
scas
add
mov
xchg
add
sub
add
daa
test
add
aas
pop
or
add
shrb
adc
cmpsl
testl
add
daa
push
inc
lret
mov
add
lods
arpl
pop
jae
mov
ljmp
sbb
xor
jne
push
push
cmp
xchg
fdivs
add
or
add
xchg
adc
sub
add
les
aaa
push
add
pop
and
add
and
add
aam
adc
adc
xchg
ds
push
mov
add
add
mov
jle
add
repz
mov
sar
sti
mov
mov
fidivrl
add
jae
popa
sub
add
loope
add
stos
lret
dec
pop
loopne
mov
or
push
add
add
add
and
movsl
inc
sub
add
stc
shll
aaa
dec
mov
add
sub
add
in
jo
and
add
sbb
popa
add
adc
decl
add
mov
inc
sahf
sbb
test
add
pop
xor
out
push
and
add
push
add
mov
mov
pusha
cmpsb
add
test
add
aam
jle
je
sbb
pop
lds
in
aam
test
add
or
add
cmp
xchg
hlt
insb
loopne
bnd
xchg
jp
sub
out
add
shl
in
shlb
sbb
mov
sbb
jo
addb
inc
cmp
lods
add
push
fistpll
add
stos
add
out
clc
inc
data16
add
fwait
jg
lods
add
mov
xor
js
imul
test
add
pusha
xchg
add
in
rol
stos
pop
jns
xchg
lds
adc
lods
push
scas
insl
leave
xlat
adc
dec
jo
leave
mov
add
xor
cmpsl
pop
sbb
mov
pop
fmull
cmp
fsincos
int
mov
pop
pop
aaa
fisubrs
stac
inc
fnstsw
push
cmpsl
pop
jno
loop
jbe
xchg
inc
lds
into
fisubl
mov
int
xlat
popf
dec
jl
add
aaa
popa
sub
add
push
pusha
shrb
pop
mov
jle
sub
add
mov
jb
add
out
and
add
add
add
add
add
xlat
push
lods
cmp
push
sbb
add
mov
int
ljmp
movsb
add
mov
fcmovne
jo
call
add
adc
insb
test
add
xchg
mov
mov
shr
jno
sbb
or
add
jl
rcl
cmp
shrl
mov
add
daa
push
addr16
add
sahf
mov
fstps
ds
test
add
jae
mov
jns
add
fwait
out
pop
out
dec
inc
xchg
add
clc
dec
xchg
add
int
add
mov
and
add
roll
add
movsb
add
push
mov
add
sbb
push
gs
add
lahf
out
pop
sub
add
xor
add
btc
lods
add
and
add
dec
push
out
pop
addb
xor
sbb
xchg
fwait
test
add
add
in
out
add
add
or
add
scas
lcall
loop
sbb
pop
mov
add
movsb
add
inc
inc
call
jg
sub
nop
addb
pop
cmp
repz
add
add
scas
add
pusha
push
add
xchg
xchg
pop
jecxz
ret
mov
mov
add
push
add
xchg
popf
mov
add
mov
hlt
pop
lea
popa
push
push
pop
dec
adc
cmp
pop
movsl
jae
clc
ss
and
add
add
dec
scas
les
push
dec
std
adc
add
xlat
cmp
loopne
add
out
or
add
xchg
push
jmp
jecxz
jmp
push
push
inc
repz
pop
mov
hlt
sbb
lea
add
in
and
add
pop
pop
jns
out
pop
jp
dec
xchg
add
inc
push
inc
inc
jne
adc
or
call
add
fbstp
addb
cmp
mov
and
cltd
add
add
arpl
adc
loopne
rol
cmpw
popa
push
mov
add
mov
ret
add
fldenv
lcall
pop
pop
cmp
loopne
nop
lock
shr
or
jb
scas
fisubrs
test
add
outsb
out
jg
add
test
push
pop
xor
add
sub
jb
pop
mov
mov
ret
fldl
add
mov
add
push
push
mov
and
sub
add
pop
add
push
dec
fimuls
add
jg
rdmsr
cmpsl
lret
les
mov
pop
mov
ficompl
icebp
add
add
icebp
pop
into
fadds
xchg
in
inc
addr16
addb
pop
lahf
xchg
push
add
dec
sbb
fistl
fists
add
jmp
cltd
mov
or
add
add
sub
add
cli
movlps
mov
add
add
test
mov
add
mov
fcomi
fidivrl
add
mov
aam
movsl
cmp
add
adc
fadds
jle
add
in
in
stc
je
add
add
sbb
js
xor
cmc
cld
cmp
arpl
add
ja
cmpsb
add
pop
mov
jecxz
inc
iret
mov
push
lret
call
add
ja
and
add
pushf
push
pop
inc
xor
pop
nop
inc
mov
gs
sub
add
mov
add
mov
daa
add
add
mov
add
pusha
mov
add
mov
pusha
jno
dec
sbb
negb
adc
lods
shll
divb
out
outsb
or
add
or
add
lock
add
or
add
pusha
lea
add
cltd
movsl
add
add
das
jl
out
fmul
xor
xchg
add
mov
insb
fldcw
lods
xchg
in
mov
or
add
add
dec
imul
inc
mov
add
add
shl
xor
add
pop
fisttpl
and
lods
pop
dec
mov
fistps
add
imul
lcall
jb
mov
rcr
jo
in
adc
cmp
inc
or
pop
xor
insl
jg
icebp
mov
add
sbb
and
insl
mov
cmpsl
sbb
push
add
add
xchg
add
jae
or
cltd
cli
rcll
iret
iret
or
add
mov
add
test
pop
mov
mov
mov
cmovnp
sub
add
jg
arpl
sub
add
mov
add
je
out
call
add
push
pop
inc
cmc
mov
push
mov
xor
cld
insl
rorb
lods
sbb
popa
movsl
data16
add
ret
pusha
add
dec
xchg
mov
and
mov
push
test
rorl
lds
scas
add
js
sub
stos
add
pushf
xor
aaa
pop
mov
add
lret
mov
outsb
xchg
mov
sbb
mov
loopne
aam
xchg
fs
fistl
in
inc
or
add
add
lret
mov
das
je
mov
jb
dec
xchg
pop
sahf
push
jae
jl
mov
xor
gs
dec
push
int
ds
add
cmp
pop
aad
pop
adc
add
push
fs
or
add
andl
add
mov
fldl
mov
aaa
jecxz
sub
hlt
adc
aaa
out
outsb
jae
out
repnz
fistl
or
add
add
rclb
add
mov
popa
xchg
out
jno
adc
mov
jnp
data16
add
pushf
or
add
xor
dec
jl
add
add
stos
add
mov
add
cmc
push
push
test
dec
fstps
ffreep
mov
add
add
jl
add
imulb
xor
movsl
cmc
insb
push
add
insl
sbb
add
std
dec
stc
aaa
cmpsb
add
mov
into
pop
ljmp
movsb
add
sarl
stos
add
inc
add
add
jb
sub
test
sti
xor
inc
addb
ret
jno
sub
push
push
enter
add
add
dec
sub
add
dec
jmp
add
mov
add
jb
add
daa
insb
mov
add
sub
add
push
add
add
mov
out
test
add
add
sbb
in
adc
inc
sahf
sbb
add
pop
out
add
jecxz
je
inc
sub
jnp
push
xor
adc
add
ljmp
lock
dec
cld
lods
rcrb
outsl
cmpl
test
add
xadd
popf
add
mov
mov
push
int3
sahf
dec
mov
add
add
mov
add
ds
pop
push
and
add
adc
adc
lahf
imul
icebp
test
popf
scas
repnz
xor
add
inc
push
or
aam
jne
mov
add
or
dec
mov
add
add
jns
sahf
cld
sub
mov
arpl
imul
lcall
add
addb
sub
gs
rorl
add
aad
mov
stos
into
sarb
fisubrl
mov
js
sbb
add
add
add
xchg
test
add
add
add
enter
add
adc
cmp
das
sbb
cmpl
addb
outsl
add
mov
mov
push
inc
pop
addl
add
add
mov
push
cmp
add
xchg
mov
add
add
dec
push
test
add
pusha
jns
cli
mov
pop
out
inc
test
add
jmp
push
mov
and
add
pop
jecxz
cli
lcall
add
jae
sbb
mov
add
jo
in
std
push
into
mov
add
dec
mov
cmpsl
int3
addb
add
sbb
add
lods
add
mov
add
shlb
ret
dec
mov
add
push
nop
fnsave
inc
pop
push
fs
loopne
into
cmp
insb
xchg
outsb
add
pop
push
test
test
add
inc
mov
gs
jns
xchg
add
inc
in
stos
add
out
and
jne
mov
nop
nop
popf
dec
negl
add
sbb
sub
shll
add
xchg
lds
in
jmp
add
arpl
pushf
je
nop
mov
arpl
leave
pop
aad
fcmovbe
into
push
add
inc
shll
fst
mov
testl
add
cmpsl
pop
add
in
xlat
repnz
add
or
cld
mov
movsl
xchg
add
in
aaa
xchg
push
jb
pusha
xchg
fistl
mov
xor
push
sbb
rcr
mov
add
jno
nop
dec
jb
jne
xchg
jmp
add
dec
shr
xchg
test
ret
add
int
pop
xchg
pop
test
push
ss
jae
stos
add
mov
out
jo
cmp
loopne
cli
push
xchg
and
add
add
mulb
aam
sbb
add
bound
lds
add
jnp
enter
lods
add
sub
loopne
adc
movsl
addr16
pushf
in
jae
add
and
add
jns
add
sbb
jno
fistps
icebp
das
out
lods
add
scas
xchg
adc
fidivrs
add
scas
add
mov
fadds
add
shl
addb
push
jmp
aaa
and
in
add
add
outsb
cmp
fwait
lret
add
xor
pop
sub
fwait
add
push
in
sahf
push
add
popa
xor
add
int3
repnz
icebp
rorl
lcall
xor
jo
lret
push
add
inc
rorl
and
add
dec
mov
mov
rcrl
push
mov
jp
mov
lds
lret
xor
cmc
sub
add
push
in
jne
stos
add
negl
add
cmpsb
add
mov
add
push
xor
idiv
mov
adc
test
add
xor
in
rolb
mov
in
mov
and
pop
mov
add
mov
cmp
and
pop
into
mov
add
cmp
sarb
xchg
add
jno
sub
add
jns
jae
cmp
into
inc
fists
jns
ret
jnp
bound
add
add
push
adc
fcompl
xor
sub
add
ljmp
fnsave
inc
dec
pusha
xchg
out
loop
pop
fsts
sub
add
add
lock
in
inc
cld
sbb
mov
add
stos
add
call
test
lods
add
dec
test
add
jae
xor
dec
in
push
sbb
add
sti
cmpsl
jp
test
add
scas
add
in
push
add
and
inc
daa
iret
sarb
inc
loope
push
arpl
shlb
ljmp
add
fnstenv
fnsetpm(287
sub
add
fcoms
dec
inc
cli
mov
mov
push
jns
scas
xchg
fsubl
and
jbe
negb
call
xchg
in
pop
loope
dec
mov
aas
imul
in
popl
xor
and
add
add
mov
and
add
sub
add
inc
mov
mov
add
xchg
test
add
fwait
sbb
sbb
pushf
insl
jbe
jle
imul
jno
ds
pop
fisttpll
add
add
adc
add
sub
add
dec
mov
iret
jge
xor
jo
pop
in
pop
call
add
repnz
add
int3
aam
fidivl
int3
sub
add
add
cwtl
popf
and
mov
add
clc
fwait
out
and
add
mov
loope
jmp
mov
adc
insl
ja
mov
jg
movb
clc
xchg
add
out
adc
lcall
fidivl
add
sbb
imul
sahf
inc
inc
inc
cmc
xchg
add
xchg
test
add
mov
add
mov
add
lahf
loop
jns
mov
add
add
sub
add
loop
fcoml
add
or
sub
add
enter
out
rclb
data16
fsubrl
xchg
in
dec
adc
dec
fnsave
call
mov
sub
add
adc
fs
push
mov
mov
add
xor
add
jecxz
pop
jb
mov
popf
and
add
push
add
fiaddl
roll
jbe
dec
sub
push
adc
inc
jmp
dec
sub
add
add
adc
mov
pop
fisttpl
scas
add
jmp
add
dec
addb
sti
push
pusha
jb
lret
push
inc
jns
cmp
data16
insb
lahf
sti
sub
add
mov
mov
add
outsb
popf
addb
xchg
cmp
add
ljmp
add
mov
call
push
mov
lret
sar
ret
xchg
loope
test
iret
arpl
inc
pop
push
lret
mov
add
push
cltd
mov
sbb
add
mov
popl
xchg
push
sbb
and
add
sbb
lcall
lahf
jbe
into
lret
push
cmpsb
add
xor
add
div
sub
add
add
sti
jb
push
add
adc
pop
ds
adc
mov
int
in
cmp
add
fdivs
add
scas
add
sahf
negb
insl
and
add
pop
add
add
cwtl
mov
pop
inc
inc
in
add
lods
fmuls
add
add
push
jl
add
mov
xchg
mov
add
push
add
or
ljmp
out
mov
add
add
add
and
add
loopne
add
loopne
jo
adc
jp
mov
gs
into
mov
stos
cld
std
test
jle
and
cmpl
add
scas
pop
mov
xlat
outsb
add
add
mov
fmul
mov
dec
xchg
daa
lret
pop
mov
sbb
addb
pop
lods
jno
mov
add
add
lods
add
fisttpll
add
out
pop
add
add
div
scas
add
into
sbb
push
mov
cmp
dec
mov
add
mov
inc
das
add
add
add
jno
sub
add
stos
mov
add
shll
xor
xor
rorb
add
lcall
cmp
add
scas
insb
jmp
add
mulb
or
add
mov
mov
in
add
push
mov
mov
sbb
lret
dec
jmp
jne
paddsw
scas
repz
icebp
dec
paddd
add
xchg
pop
mov
fbld
daa
sbb
add
sbb
ljmp
cmp
lods
add
aas
arpl
and
push
and
add
add
push
add
test
sub
add
pop
cmpsb
add
out
jl
repnz
pminub
push
sub
add
xchg
and
add
and
add
xor
add
jmp
cmp
pusha
mov
add
lret
push
mov
addb
fldl
dec
subl
inc
or
data16
or
add
rclb
gs
add
jbe
in
scas
add
cmp
test
add
mov
sub
xchg
aad
icebp
xor
cmpsb
add
add
add
sbb
shl
mov
popf
or
insl
xlat
or
add
jne
ds
int3
add
add
add
lret
add
add
mov
popf
add
add
fldcw
dec
mov
add
add
xor
or
mov
stos
andl
test
std
fmuls
enter
mov
adcl
mov
mov
testl
and
add
in
mov
nop
addl
add
shll
add
lock
add
pop
adc
pop
dec
je
add
xor
add
and
add
das
or
add
shl
and
add
add
add
lods
add
push
cmc
clc
xlat
jle
bound
add
push
push
cmp
stos
add
loopne
add
cmp
dec
repz
lahf
pop
xor
and
add
jp
add
stos
adc
fcmove
loopne
je
addb
or
add
cmp
add
add
movsb
add
pop
cmc
cmc
cli
add
mov
xchg
mov
add
mov
and
push
imul
mov
add
add
cmpsb
add
ret
push
mov
add
jne
in
xor
inc
mov
add
imul
jne
lods
add
push
pushf
bound
mov
inc
imul
out
push
push
add
xor
add
push
sahf
push
cmp
add
add
sub
add
lods
add
js
jae
pushf
ljmp
lret
pop
jnp
add
add
jmp
stos
cmc
les
cmp
mov
fucompp
nop
adc
jle
ret
jnp
cmp
push
mov
cmp
xchg
mov
test
jl
push
cmp
cmpsb
add
out
dec
push
mov
sbb
icebp
lods
cmp
add
add
int
add
mov
lcall
test
add
add
add
mov
add
xchg
sbb
xchg
sub
add
test
add
adc
cmp
cmp
add
pop
xchg
inc
loope
stos
adc
jo
add
or
add
xor
fidivrs
add
mov
lret
jge
mov
sbb
sbb
and
fcmove
sar
pop
pop
xchg
outsl
ret
jne
jmp
scas
xor
add
add
inc
rol
ja
add
add
stos
jl
sbb
dec
inc
sbb
sub
nop
iret
push
add
aam
inc
push
cmp
aad
and
add
add
faddl
add
ror
pop
fildl
add
rorb
add
call
sub
add
lea
pop
mov
add
adcl
jecxz
les
add
add
daa
sti
faddl
movsb
add
out
and
add
add
fists
aad
ss
mov
add
test
add
popf
pusha
lock
mov
add
inc
lahf
jp
add
cmpl
add
fdivrl
xor
repz
jbe
mov
add
add
sub
add
fadds
add
jno
push
rcll
add
mov
mov
mov
add
popa
jg
daa
pop
addb
inc
mov
xchg
daa
leave
xor
cld
test
add
add
inc
or
add
arpl
into
push
iret
ficoml
pop
adc
jle
les
mov
add
mov
mov
add
add
cmp
dec
push
scas
add
sbb
or
loop
and
add
mov
add
fs
rcrl
ds
mov
ljmp
add
add
cmpsl
sub
add
je
std
jne
and
cli
and
add
pop
arpl
int3
mov
add
in
dec
push
push
pop
jecxz
inc
lret
lock
fmull
add
xchg
add
cmpsl
sbbl
ds
add
jecxz
ds
xor
jmp
cmp
or
add
loopne
roll
jns
and
mov
mov
sahf
cmp
cmpsb
add
sub
rcrl
or
popa
mov
lcall
loopne
cld
into
and
add
loop
add
mov
pop
icebp
inc
hlt
push
out
inc
xor
mov
add
add
add
fnstsw
inc
ret
cld
cwtl
in
cmp
add
loop
lcall
je
jle
mov
add
fbld
int3
faddp
adc
push
sub
add
insl
lods
add
dec
mov
cld
lds
add
add
daa
and
add
andl
in
lahf
cmc
lock
add
jb
dec
xchg
loopne
jae
cwtl
cwtl
adc
test
sahf
adc
out
in
cwtl
sarb
add
cmp
add
mov
add
jecxz
dec
or
add
jae
ret
push
add
shll
out
add
inc
push
inc
sub
adc
sbb
in
sbb
arpl
mov
or
add
aas
mov
jno
sti
ds
inc
shlb
mov
dec
dec
adc
pop
test
add
mov
add
pop
popf
outsb
rcr
and
add
imul
shl
shll
cmp
data16
pop
imul
lds
les
popf
insb
mov
sti
sbb
jg
add
cmp
test
add
into
popa
jb
jne
adc
add
mov
inc
popf
adc
and
add
loope
inc
jmp
jle
add
sbb
lcall
mov
adc
int
test
add
out
push
loope
test
popf
mov
add
cli
shrl
cmp
inc
rcl
dec
mov
movsl
or
add
jb
pop
xor
scas
add
fldenv
add
mov
xchg
add
pop
jmp
xchg
add
and
add
sbb
inc
addr16
lahf
fiadds
add
int3
lds
jae
sahf
add
out
rcrb
push
in
jle
and
adc
add
xor
out
in
xchg
outsb
call
aas
jnp
mov
cmc
popa
mov
add
out
lods
xchg
pop
xlat
hlt
out
push
mov
add
adc
stos
add
or
add
popa
and
add
iret
jns
push
add
popf
rol
icebp
and
add
jp
mov
into
lcall
jns
mov
dec
mov
hlt
rclb
popl
leave
scas
inc
adc
push
jmp
cmpsl
jmp
sahf
sarl
sub
add
inc
ficoms
sub
lahf
add
js,pt
add
xor
jbe
sarb
insb
mov
mov
add
loopne
add
add
clc
test
adc
jg
push
add
cmc
enter
dec
fidivrl
add
push
add
sahf
int3
das
jle
sti
mov
inc
add
mov
enter
fs
movsl
fldl
mov
arpl
add
mov
add
rep
add
lret
jmp
add
add
add
pop
sbb
add
xor
sub
add
leave
fisttps
and
add
dec
daa
scas
add
xchg
sub
add
cmp
jp
cmp
cmp
pusha
addb
outsl
jp
aaa
pop
push
scas
add
inc
enter
movsl
add
jno
mov
cmp
jo
xlat
into
pop
or
add
loopne
add
add
add
ds
xchg
inc
fstpt
cmp
push
add
das
mov
add
ljmp
and
addb
or
add
cmp
mov
stc
sbb
add
sar
rcrl
outsl
sub
leave
cmp
and
add
lahf
mov
adc
test
enter
sbb
push
add
jo
inc
xchg
sbb
jne
xor
add
imul
add
out
or
add
inc
sarl
add
add
or
add
scas
lret
or
add
mov
xor
lock
add
inc
outsl
push
push
daa
das
das
js
push
sahf
out
adc
xor
sub
clc
mov
jno
or
pusha
push
pop
pop
mov
add
add
adc
clc
jmp
pusha
js
hlt
imul
or
mov
add
cmp
out
jno
sub
add
add
aam
pop
or
add
jb
push
test
add
pop
test
add
test
add
repnz
loopne
add
bound
add
xchg
mov
mov
add
enter
jecxz
mov
inc
mov
in
pop
daa
insb
push
mov
pop
loope
call
jno
pushf
jmp
cmp
pop
mov
add
jns
sub
add
adc
add
and
add
add
cld
and
add
faddl
add
adc
lcall
cmpsb
add
mov
arpl
out
icebp
insl
outsl
aaa
dec
fdivrs
out
ficoml
inc
hlt
xchg
inc
scas
add
xor
add
int
and
add
add
test
fmuls
xchg
aaa
add
jae
jmp
add
bound
mov
add
cmc
stc
pop
rorb
int
add
push
fiadds
add
mov
add
push
pop
mov
mov
jnp
loope
xchg
xchg
ljmp
add
ljmp
inc
cld
data16
pop
lahf
mov
jecxz
dec
dec
dec
repz
cmpxchg
pop
pop
aaa
inc
pop
jge
mov
add
add
popf
ja
movsl
xor
dec
outsl
xor
outsl
fs
rcrl
scas
add
mov
dec
mov
outsl
xchg
sarb
incb
rcrl
xor
mov
add
dec
add
roll
add
loope
cli
shlb
mulb
pop
jbe
lods
cwtl
hlt
push
jb
jecxz
addb
lret
or
add
sbb
into
addb
hlt
lret
adc
push
sub
daa
push
ret
add
cmp
pop
pop
hlt
sbb
xchg
call
add
repz
xchg
fstpl
movsl
negl
out
pop
pop
mov
repz
lods
add
into
dec
out
rorl
shrb
add
popa
xor
leave
scas
aaa
paddq
push
pop
sbb
leave
push
push
inc
sbb
xor
and
add
rorb
outsb
or
mov
cltd
sti
les
aaa
call
jno
je
add
rorl
fldenv
ss
sbb
or
or
add
add
jecxz
movsb
add
sub
add
lods
add
addl
sbb
sub
add
ret
add
add
jne
test
add
cmp
add
and
add
mov
add
add
add
scas
add
lea
sub
add
push
xor
add
pop
jb
pop
xchg
outsb
insb
mov
add
add
mov
adc
rcrb
add
sub
add
add
jne
dec
mov
nop
cld
jno
insb
inc
outsl
mov
jno
xor
push
insb
jne
int
add
rorb
cmp
xor
addb
sub
dec
jbe
pusha
loop
add
in
add
jne
add
ja
stos
add
mov
inc
xchg
push
or
add
add
out
xchg
pop
imul
push
and
add
mov
add
sbb
add
mov
xor
or
add
xor
push
fdivrs
inc
mov
add
and
add
mov
add
jmp
lods
fwait
or
sbb
loopne
or
add
test
add
addr16
jns
mov
add
pop
cmpsl
dec
icebp
movsl
movb
xor
pop
leave
inc
sub
pop
ds
mov
adc
dec
in
daa
nop
aad
mov
ljmp
add
adc
sbb
outsl
sub
dec
xlat
out
or
pusha
pop
dec
loopne
scas
lods
iret
push
enter
dec
fldt
popa
test
or
sbb
add
fisttpll
int3
scas
add
inc
bswap
mov
add
dec
xchg
enter
add
add
sbb
xchg
xor
cltd
adc
out
idivl
jo
mov
sbb
add
add
test
add
mov
add
and
std
out
xor
ret
dec
lret
cmp
add
psubq
movsl
xchg
xor
add
add
mov
xchg
cli
in
in
mov
lret
pop
or
add
and
add
orl
add
leave
xor
adc
pop
xchg
push
mov
loop
add
sbb
sub
add
bound
daa
push
outsb
jecxz
and
push
in
sub
push
add
mov
pop
push
add
pop
inc
in
adc
fisttpll
not
mov
cmovnp
sub
add
lods
mov
add
or
add
adc
add
movsb
add
fs
dec
push
push
ds
pop
sar
data16
add
out
ss
and
dec
sbb
sbb
addb
out
xor
sahf
push
fnstsw
adc
sbb
iret
bound
mov
data16
add
sarl
adc
ss
fisubs
xor
add
add
add
clc
scas
mov
add
aaa
arpl
ss
sahf
dec
sbb
xchg
fs
add
jbe
push
das
das
mov
mov
scas
add
lods
or
or
fwait
dec
divb
add
add
xchg
mov
add
xchg
and
add
add
add
cmp
add
fildl
add
daa
call
add
std
outsl
les
jno
and
add
push
lret
sbb
lods
cld
mov
add
icebp
push
das
push
add
mov
mov
jae
pop
add
mov
add
cld
jns
das
ds
aam
jae
out
adc
add
add
rcr
mov
shll
mov
add
shlb
scas
add
mov
sub
mov
imul
shl
add
lods
add
pop
icebp
sub
mov
dec
push
arpl
jge
inc
cld
jp
adc
and
add
ret
aaa
aam
and
inc
cmp
sbb
paddsb
mov
bound
pop
cmp
xchg
jmp
enter
mov
fistl
fadd
or
add
mov
rol
pop
cltd
std
mov
add
in
cmp
inc
jecxz
adc
int3
std
int3
repz
add
mov
pop
dec
mov
les
nop
outsb
mov
add
aad
leave
iret
rcll
add
or
jbe
addb
leave
jb
push
das
cltd
fimuls
pop
mov
add
out
mov
add
dec
pushf
lea
mov
mov
pop
add
fnstcw
add
fsubs
mov
jno
add
inc
jle
adc
or
add
cmp
rcr
cmp
loope
loope
xor
fdivrs
frstor
add
imul
out
xchg
fisubl
add
lret
data16
add
and
add
dec
sub
add
inc
mov
add
add
inc
outsl
mov
das
pop
fmull
adc
add
insb
or
add
int3
dec
outsb
sub
add
mov
lahf
mov
jmp
add
popf
or
add
mov
loope
push
adc
or
filds
add
repnz
pusha
inc
add
or
jmp
add
test
add
mov
add
shll
inc
inc
mov
ljmp
sub
xchg
out
or
push
bound
mov
xchg
jne
mov
roll
mov
mov
add
mov
cmpsl
sahf
pop
cltd
dec
jp
add
movsl
and
add
les
mov
cmp
std
push
loop
popf
mov
add
addb
ficoms
insl
sub
add
iret
adc
and
nop
xchg
or
mov
popf
fwait
shr
jmp
cmp
pop
out
cwtl
fsubrl
dec
push
pop
jo
add
mov
mov
aad
push
into
jl
add
dec
cmp
arpl
arpl
mov
add
add
add
lcall
mov
mov
call
imul
cltd
and
add
mov
add
add
lahf
jae
add
dec
push
add
adc
add
lret
jnp
inc
aam
jmp
sub
add
add
out
add
push
or
add
sbb
add
cli
out
cli
pop
ftst
pusha
or
add
pop
inc
push
mov
loop
cmpsl
jne
ror
repz
movsb
add
push
js
repnz
or
aas
iret
mov
fcompl
dec
aad
add
das
out
add
loopne
push
add
mov
sub
add
pushf
jmp
loope
sbb
inc
mov
add
in
ret
stos
add
fadds
add
out
out
push
or
add
movsbl
das
loop
xor
mov
gs
das
mov
mov
or
sub
movsl
dec
and
add
push
adc
cld
jae
lea
add
xor
xor
pusha
and
or
cmp
imul
add
sub
jno
fists
fbstp
dec
popfw
mov
js
mov
sub
add
in
cmp
add
in
sub
jo
inc
jae
fcmovnu
pop
fildl
add
mov
pop
push
popf
fsubrs
addb
and
add
xchg
add
jns
jle
rcrl
pusha
inc
cwtl
fimull
mov
adc
add
outsb
movsl
addb
sbb
dec
pop
jnp
aaa
outsl
jmp
pop
mov
add
mov
add
mov
add
cmp
add
add
fisttpl
mov
push
inc
lods
add
inc
pop
adc
lods
aaa
mov
sub
cmp
dec
adc
add
sub
add
add
jo
repnz
fcoml
xlat
mov
add
scas
cmp
bound
add
repz
dec
inc
in
iret
xchg
add
or
xchg
add
mov
fidivl
les
adc
fwait
inc
mov
xchg
push
xor
push
scas
cwtl
outsl
adc
xlat
xchg
add
stc
inc
jge
add
inc
xlat
add
shl
outsl
iret
stc
rcll
sbb
seto
js
mov
sbb
sub
pop
adc
mov
add
add
sbb
mov
add
fcmovu
push
add
add
xor
add
pusha
scas
dec
push
and
stc
jae
jp
movsl
fnsave
xchg
lahf
xchg
cmc
orl
mov
add
neg
pop
adc
or
sti
xor
push
sbb
add
sarb
push
add
pop
into
or
push
je
adc
test
push
and
add
cmp
fistl
add
push
add
or
add
dec
push
das
loop
jmp
add
push
jnp
insl
je
mov
dec
jg
and
mov
mov
inc
mov
add
jae
xchg
cld
ss
xchg
mov
inc
adc
lahf
mov
nop
adc
add
popf
pop
mov
out
push
add
or
add
inc
cmp
fisttps
fdivr
xchg
pushf
bound
fwait
sbbl
nop
xchg
mov
dec
push
addr16
jmp
pop
ret
enter
add
add
fdivrl
add
pop
mov
faddl
mov
lds
jne
inc
pop
push
xlat
adc
cld
loopne
mov
add
add
in
lock
in
mov
mov
sub
add
vphaddbq
add
into
aad
imul
call
rclb
aaa
outsl
push
add
in
push
hlt
and
or
add
mov
add
dec
xor
add
add
loop
push
push
fwait
cli
jmp
inc
fstpt
and
inc
out
pop
in
add
fwait
or
add
xchg
repnz
cmc
jae
jge
jmp
add
lds
in
add
movsl
addl
add
out
stos
rorl
add
icebp
sub
add
decb
push
and
add
scas
cmp
add
mov
movsl
dec
xorl
fcmovnb
ljmp
push
add
add
inc
xor
sbb
shrb
scas
dec
cwtl
mov
add
lea
push
add
or
add
ret
xchg
inc
gs
outsb
lock
lret
jno
add
mov
inc
out
or
jbe
divb
inc
xchg
xchg
fs
cmp
outsl
and
add
lahf
or
add
sub
inc
out
das
loope
or
ss
push
popf
add
jbe
mov
add
clc
jne
sahf
or
add
aas
lock
push
inc
addb
sahf
push
add
mov
imul
adc
jae
and
add
cmp
dec
xchg
lret
jo
fbld
cmp
push
out
clc
in
stc
ret
xor
mov
push
int3
shrb
ficoms
iret
aas
enter
add
push
sbb
add
dec
pop
stos
add
inc
pop
pop
cmp
add
inc
cmp
jnp
pop
pop
test
add
mov
scas
add
add
inc
add
add
add
loop
xor
xor
mov
cld
cltd
lea
shll
dec
adc
xor
adc
pop
out
jne
xchg
add
std
or
add
pop
das
push
push
insl
loopne
add
aam
add
pusha
add
add
mov
test
add
xchg
push
add
mov
xor
add
mov
ret
dec
and
add
loop
inc
inc
daa
stos
add
push
mov
frstor
add
push
repnz
pop
mov
push
cld
cmp
insb
fmul
sahf
out
or
add
sbbl
dec
inc
std
decl
add
outsb
fstl
add
out
jl
fs
addr16
add
add
mov
jne
or
add
sub
add
insl
pop
push
mov
add
push
cmp
sub
add
push
inc
inc
and
lds
mov
pusha
shl
shrb
mov
dec
push
cmc
mov
xor
fildl
add
xchg
jno
aam
add
lret
push
sbb
jle
add
stos
sbb
ljmp
pop
dec
dec
add
mov
add
add
inc
mov
aaa
xchg
in
int
add
xor
les
xchg
jle
cmp
iret
adc
xchg
add
add
mov
add
dec
lods
sub
add
out
add
jnp
mov
add
xchg
mov
mov
add
lea
mov
addr16
add
movsl
sub
add
xchg
js
fisttps
add
jp
out
cmp
fwait
xor
add
jbe
fcmove
mov
ss
sub
je
add
scas
add
rcrb
mov
xchg
dec
repnz
add
test
dec
add
add
addr16
sbb
jmp
add
faddl
add
push
fnstenv
xor
cmp
out
aas
xchg
xor
add
xchg
imul
bound
xor
cltd
addb
cmp
add
fcompl
mov
add
add
add
shrl
inc
in
add
mov
add
and
add
scas
add
inc
ljmp
add
xlat
cmc
pushl
dec
int
aam
faddl
add
sarl
loopne
jecxz
stos
inc
push
sarb
mov
add
cld
mov
imul
and
add
cmpsb
add
outsb
jnp
repnz
add
mov
sub
movsl
addb
fsubs
xor
gs
and
add
sbb
mov
addb
mov
mov
sub
adc
lds
add
arpl
in
add
add
sbb
ds
push
fmull
fdivl
stc
cmp
push
out
call
pop
sbb
dec
sub
mov
mov
push
add
add
add
add
jmp
aad
insb
push
add
or
add
mov
jg
add
pop
adc
add
fcomp
lcall
icebp
mov
add
stos
add
je
mov
inc
dec
sub
add
xchg
add
xor
add
ss
mov
inc
push
jb
jo
imul
jae
mov
add
gs
dec
rorl
add
movl
jmp
jp
daa
test
out
add
stc
sbb
fisubs
in
add
add
add
add
xor
fimuls
das
insb
adc
add
push
loop
mov
add
mov
add
lret
add
add
inc
sbbl
out
and
add
add
xor
add
sbb
lods
add
dec
sub
add
adc
mov
ja
fbld
or
mov
xorl
add
xchg
push
stos
add
push
push
add
and
add
jp
xor
push
add
scas
clc
arpl
add
movb
add
pop
push
add
sbb
or
add
pop
xchg
mov
add
lods
into
enter
ror
lock
popf
loope
jbe
mov
add
add
ljmp
pusha
in
rcll
in
fsts
add
push
out
rolb
test
add
and
pop
imul
das
mov
add
add
lea
in
icebp
mov
push
mov
mov
and
push
call
add
and
add
sub
sti
inc
enter
leave
adc
add
jae
add
mov
jnp
add
lret
fwait
push
inc
repnz
mov
mov
adc
sti
pop
xor
cmp
add
inc
mov
add
lods
aaa
adc
mov
add
dec
bound
pop
cwtl
cmp
popf
inc
ja
sub
add
xchg
push
mov
clc
pop
sbb
sbb
mov
scas
fcomps
and
mov
pop
sarb
mov
jns
idivb
jl
mov
adc
pmuludq
out
movsb
add
pusha
idiv
or
xor
xor
ret
add
mov
stos
loope
das
stos
add
mov
sbb
hlt
negl
xor
jl
adc
add
mov
add
add
inc
sub
xchg
add
testb
ljmp
add
stc
mov
in
out
sbb
lret
movsb
add
pop
cld
add
add
out
sbb
addb
pop
pop
out
or
xchg
pop
cmp
inc
add
and
add
shlb
add
sbb
push
add
cmp
add
push
xchg
roll
and
add
jno
cld
jge
movsb
add
sub
int
xchg
add
or
add
lret
jo
mov
mov
add
data16
xlat
sub
add
icebp
pop
adc
ret
add
in
clc
lods
out
icebp
loop
adc
add
cmp
dec
inc
push
sbb
add
cmc
imull
movsb
add
sub
push
lret
stc
daa
sti
cmp
sub
add
xchg
rclb
je
jge
push
mov
mov
add
and
add
rorb
out
mov
aam
pop
rcrl
or
test
outsb
pop
jecxz
add
iret
dec
push
add
jb
or
mov
add
test
add
mov
mov
pop
mov
xchg
push
or
cmp
adc
inc
push
sub
add
test
add
cwtl
lcall
std
sub
add
bound
or
add
je
fcomps
jnp
repz
pusha
daa
xchg
fsubr
push
lock
scas
mov
stc
test
add
addb
jns
add
movsb
add
int
add
iret
in
dec
xor
pop
std
push
addr16
jno
add
add
sub
add
and
add
aas
sub
add
movsb
add
sub
add
icebp
mov
add
mov
add
add
add
mov
add
add
outsb
sahf
xlat
gs
xchg
movsb
add
test
mov
cli
pop
notl
shl
inc
out
jp
add
xrelease
mov
mov
sahf
or
add
negb
push
adc
push
or
add
dec
icebp
pushf
outsl
inc
mov
add
lods
repnz
test
cmp
test
add
out
mov
in
push
xor
jo
add
dec
sbb
daa
aam
or
add
int
and
add
add
icebp
sbb
add
cmp
xor
aad
push
pop
xchg
lods
daa
pop
jmp
std
test
lock
leave
aaa
or
jo
add
xchg
add
push
sub
xchg
inc
loop
cmpsb
add
stc
std
mov
add
add
add
addr16
hlt
jecxz
cmp
cltd
mov
add
add
and
ret
add
mov
leave
mov
add
movsl
andl
sub
add
clc
add
add
adc
lcall
movsb
add
addr16
test
push
xchg
mov
add
mov
add
sub
add
pop
add
std
sub
add
jg
fxch
sub
or
add
mov
add
push
add
mov
add
add
gs
in
sub
sti
lods
cmc
mov
cmp
insb
add
sub
add
das
cmp
jno
push
ss
inc
fwait
nop
insb
pop
xor
mov
add
and
or
jne
sar
cmpsb
add
lahf
push
in
and
pop
outsl
hlt
mov
and
add
out
cmpsb
add
push
mov
add
add
out
inc
mov
cmp
add
scas
add
cwtl
stc
call
pushl
aaa
mov
add
push
cltd
popa
inc
mov
sti
bound
add
lds
icebp
fiaddl
movsb
add
movb
pop
or
add
cmc
jne
jp
mov
and
add
ds
sbb
push
daa
jne
cmp
push
and
add
mov
insl
lods
add
jp
and
add
xchg
out
cmp
rolb
inc
mov
or
add
adc
add
jp
sub
add
mov
cli
fildl
jno
push
sub
add
and
xchg
lahf
lret
jae
add
add
xchg
aas
test
add
and
adc
add
xor
enter
mov
orps
lods
incb
add
inc
cmp
push
add
lods
nop
adc
add
lods
add
mov
xor
shlb
sub
add
jle
mov
add
in
xchg
xchg
add
adc
lret
push
movsl
aas
and
add
add
lods
add
xor
aad
jle
xchg
push
inc
cmp
xchg
mov
fsts
jns
sti
push
and
add
in
sub
add
jecxz
add
in
mov
or
jns
sub
add
ja
and
mov
inc
repnz
push
cmp
sub
add
add
out
sarb
or
inc
sahf
push
sbb
dec
mov
leave
fcmovne
call
add
inc
mov
fstps
fs
add
inc
and
inc
and
sahf
or
add
scas
add
imulb
in
jnp
stos
test
inc
out
mov
mov
fsts
decl
and
add
adc
addr16
push
jle
adc
repnz
ljmp
add
gs
add
push
add
adc
bound
cmpsb
add
adc
cmp
mov
xorl
jg
js
in
fldcw
loop
loope
mov
les
daa
arpl
add
xor
add
or
add
ja
xor
jmp
mov
leave
sti
jb
dec
jne
int
aam
loop
scas
lock
in
fwait
shlb
dec
lahf
pushf
mov
ret
stos
add
adc
pop
pop
cld
ss
and
add
add
inc
pavgb
imul
repnz
ds
and
add
add
mov
add
dec
mov
add
push
mov
cmp
inc
add
pop
imul
add
outsb
arpl
enter
add
lret
pop
push
or
add
mov
nop
and
add
pop
jae
add
inc
adc
inc
jno
in
jp
xor
add
add
call
dec
fdivs
push
daa
mov
add
sub
mov
add
dec
sahf
in
hlt
cwtl
xor
add
aaa
js
jb
push
mov
add
andl
mov
loopne
dec
lods
cmpsl
inc
mov
add
adc
and
sbb
jecxz
jo
mov
cld
test
add
mov
add
cltd
pop
pop
push
mov
add
add
add
outsb
inc
dec
cmp
xchg
jnp
jmp
add
cmpsl
and
jecxz
js
add
test
addb
pusha
cmp
sahf
sti
and
add
test
add
add
sub
mov
test
add
push
adc
and
add
pop
push
pop
addb
mov
add
sub
add
add
or
add
add
and
add
test
out
jmp
cmp
lods
mov
xor
test
add
xchg
sbb
pop
push
pop
cmpsb
add
iret
inc
xchg
mov
dec
jl
cmpsl
lahf
jl
sub
add
add
addr16
dec
ror
mov
add
jge
and
add
sbb
lods
test
add
adcl
and
add
icebp
pop
xchg
inc
xor
jae
lret
adc
clc
mov
lcall
cmp
xchg
jbe
adc
ffree
faddl
add
in
lret
add
fstl
jns
imul
imul
add
addr16
incb
ret
mov
mov
cli
add
aad
dec
lods
stos
add
jne
add
test
add
add
xchg
xor
and
add
jnp
lods
add
je
xor
add
stos
fiaddl
add
sub
add
push
lret
jg
sbb
test
mov
int3
cmc
adc
mov
mov
out
add
add
mov
push
in
inc
stos
add
xchg
insl
mov
lahf
outsl
mov
add
push
sahf
out
or
add
xchg
inc
in
inc
inc
inc
jp
addb
adc
jp
loop
imul
clc
or
add
add
add
and
add
lret
jbe
add
into
xor
in
je
add
movsl
hlt
push
add
lock
pop
int3
pushf
jns
movsb
add
sti
push
sbb
test
add
cld
dec
int
mov
sbb
sbb
sub
add
popf
pop
outsb
ret
ret
adc
or
and
add
in
xchg
add
mov
add
push
cwtl
jmp
ss
add
sub
loope
push
or
add
ljmp
nop
scas
add
sub
inc
add
in
push
clc
dec
test
xlat
cmp
incl
add
sbb
add
mov
movsl
insl
cltd
push
jb
addr16
sub
aad
icebp
xor
sub
add
inc
xchg
cli
jmp
mov
popf
and
add
cmc
repz
add
add
sbb
test
add
add
das
sbb
add
add
add
in
add
scas
decb
rorl
add
js
xchg
add
push
ret
fistl
jns
shlb
pop
mov
add
add
dec
jnp
push
test
xchg
or
fisubl
add
addl
sbb
cmp
fimull
dec
int3
cld
cmpl
aaa
push
cmp
sbb
pop
cmpsb
add
loope
fsts
dec
dec
lods
add
mov
test
add
inc
hlt
pop
mov
add
jne
cmp
aaa
cmpsl
cmp
int3
test
add
fistpl
outsl
rclb
js
pop
aas
inc
dec
jmp
jg
cmp
add
push
add
xchg
add
mov
xor
fldenv
out
aas
add
add
popf
mov
add
mov
pop
mov
jbe
fnstcw
add
movl
in
loopne
jo
cld
mov
xchg
jno
sbb
mov
jne
add
sbb
add
adc
or
add
lret
dec
xorl
movsb
add
test
out
add
mov
sub
movsl
inc
adc
dec
mov
mov
push
mov
cltd
mov
into
inc
sub
mov
outsb
mov
add
fucomip
pop
push
and
fidivl
add
add
add
add
test
xor
add
sbb
xor
shrb
movsl
push
arpl
ss
out
and
add
mov
sbb
add
aaa
ds
popf
adc
lds
sub
add
pop
add
add
add
add
cmp
push
mov
add
xor
fwait
popa
mov
andl
push
xchg
jmp
jmp
stos
add
xorps
xchg
arpl
add
ja
add
scas
adc
mov
mov
inc
jge
pop
lcall
outsb
pop
push
add
pushf
push
dec
dec
push
add
cmpsb
add
mov
add
add
sti
jbe
xchg
xor
dec
jne
movsb
add
filds
lahf
and
add
mov
add
shrb
push
fstps
add
xor
out
roll
cmp
inc
xor
outsl
out
add
push
add
push
add
xor
cmp
pop
les
add
fisubrs
cmp
xor
mov
daa
xor
push
add
inc
popa
stc
das
mov
adc
add
ljmp
test
pop
cmp
cmc
mov
aas
mov
cltd
mov
mov
add
in
add
sub
add
add
or
cmp
lcall
mov
add
xchg
add
jb
sbb
les
cmp
push
add
ljmp
add
mov
mov
movsb
add
insb
ficompl
stos
add
cmp
pop
pop
jae
add
pop
mov
add
add
dec
ret
pop
gs
dec
je
mov
add
dec
push
out
mov
inc
pop
jmp
sub
add
pop
aad
fsubl
add
sbb
sub
add
mov
add
or
add
js
aaa
stos
add
mov
add
push
add
mov
add
in
jbe
add
pop
push
cmpsl
or
add
mov
lods
ja
add
ljmp
adc
shll
negb
lret
jne
or
add
add
mov
adc
mov
add
or
add
add
add
fistpl
test
add
out
cmp
mov
int3
jae
add
int
outsl
rclb
lds
add
mov
ja
jne
xchg
add
cltd
add
dec
mov
push
jl
add
mov
aad
pop
aaa
add
add
out
int3
pop
and
addb
mov
sahf
and
repnz
or
add
pop
lods
insl
cld
sbb
add
daa
inc
or
mov
mov
add
lret
mov
js
add
sub
mov
add
xlat
mov
adc
or
cmpsl
jb
or
ret
jge
jo
add
add
icebp
nop
rcrb
aam
lds
add
add
add
or
add
aad
mov
or
add
add
aad
jecxz
or
add
add
xor
mov
add
inc
mov
cmp
sub
add
push
add
add
aas
dec
loop
sub
mov
add
sub
push
inc
sub
add
pop
mov
idivb
repz
jge
push
add
pop
stos
mov
mov
jmp
jne
add
or
add
int
iret
mov
add
mov
add
sub
scas
add
ret
ja
imul
js
arpl
add
pusha
xor
add
ds
mov
test
add
js
pop
sub
pop
sbb
cmp
jge
sub
add
hlt
addb
loop
test
add
pop
stos
cli
in
lods
add
dec
imul
dec
cmp
sbb
leave
sbb
aas
aam
add
enter
sub
add
aas
das
mov
add
call
ljmp
add
insl
test
add
shll
mov
add
xor
jmp
sbb
xor
std
rcrb
add
dec
dec
mov
lahf
stc
in
addb
test
add
xchg
frstor
jp
add
add
ja
xor
push
pop
adc
inc
addb
lods
add
enter
push
inc
addr16
frstor
jo
add
stos
ja
add
jl
add
mov
cmp
insb
shll
les
add
jp
add
ret
push
mov
bound
iret
dec
inc
mov
aam
add
add
je
or
or
add
call
test
iret
dec
inc
mov
add
cmpl
fmull
add
adcl
add
je
add
mov
jecxz
int
push
add
lret
pop
in
inc
dec
mov
mov
mov
ficomps
push
push
jge
jmp
xor
sub
add
imul
fcoms
hlt
int
push
int3
xor
jno
push
add
add
add
dec
cmp
mov
inc
jmp
mov
add
add
loopne
aas
gs
pop
ljmp
aas
ret
push
mov
popf
mov
add
adc
mov
or
add
pop
addb
imul
loopne
pop
mov
add
jmp
add
lret
jbe
jmp
jle
fstps
cmp
lcall
cmc
mov
add
dec
jbe
jecxz
add
jne
mov
hlt
add
xchg
icebp
push
mov
in
jg
push
enter
test
xchg
or
test
add
push
cmp
addl
jns
add
add
dec
xchg
divl
pminub
cmpsl
xor
pop
lods
add
adc
push
lds
rcll
mov
jnp
xchg
adc
dec
mov
xchg
adc
sub
add
add
leave
inc
mov
add
add
js
pop
mov
test
mov
add
mov
movsb
add
jbe
add
cwtl
push
pop
fldt
arpl
inc
cltd
xor
gs
mov
add
addb
mov
sti
les
scas
roll
sahf
aaa
stc
lcall
and
add
mov
mov
out
jb
les
add
jmp
scas
add
divl
push
cmp
mov
in
xchg
shrb
shll
sbb
lea
popf
xor
dec
add
adc
loop
cmpsb
add
mov
add
add
pop
in
push
shrb
cltd
xchg
xor
add
test
add
add
iret
or
add
and
jns
inc
mov
add
or
add
inc
jmp
xor
push
push
mov
lcall
clc
push
jp
add
add
loopne
mov
lahf
or
xchg
ljmp
add
iret
mov
add
ds
jne
xchg
pop
sbb
ret
and
adc
out
dec
aam
inc
lods
add
sub
add
cmp
jmp
cmp
push
test
daa
xor
enter
adc
jg
ds
push
aas
push
pop
add
sub
and
add
mov
sub
add
push
rclb
cltd
cmpsl
pop
dec
push
dec
or
add
add
incb
add
jmp
and
sti
adc
outsl
push
mov
add
ss
imul
jmp
add
mov
leave
fdivs
in
sahf
fmull
retw
out
mov
add
fstpt
fisttpll
mov
add
push
add
mov
add
and
add
add
arpl
mov
pop
xchg
adc
sub
add
add
je
add
cld
pop
and
add
shr
adc
push
and
push
addb
push
add
pop
test
dec
mov
add
dec
mov
addb
mov
addb
add
and
ret
fcomi
xchg
aad
add
addb
mov
cmpsl
mov
mov
add
and
push
in
dec
sub
add
or
add
ret
sbb
xchg
mov
fcomps
fisttps
ja
fidivs
lret
leave
fildll
add
add
cwtl
out
add
movsl
pop
rcr
dec
popl
pop
lea
add
jo
push
lret
push
jnp
daa
out
add
call
lret
sarb
or
ja
add
pop
inc
out
cmp
lret
add
adc
xorl
popf
jmp
sub
add
arpl
shlb
out
sti
pop
mov
outsl
xor
ja
cmp
push
xchg
mov
mov
add
jmp
and
mov
popl
add
sbb
stos
xchg
outsl
mov
xchg
add
pop
leave
sub
add
add
add
leave
cwtl
cmp
add
fsubs
icebp
setns
sbb
cmc
dec
fwait
insl
inc
mov
outsb
jnp
add
ja
test
popf
sub
fwait
loope
out
addb
out
in
addb
call
iret
int3
xor
pop
sbb
push
add
ja
add
add
or
faddl
pop
cmc
jl
add
add
xor
insl
mov
add
mov
clc
jmp
les
stos
add
adc
add
cmp
add
add
shlb
add
out
test
add
pop
incb
add
test
mov
add
addb
mov
pop
pop
pop
test
lret
add
add
sti
out
out
push
mov
bndmov
cltd
jp
add
mov
add
xor
xchg
mov
icebp
pusha
arpl
xchg
sarb
insb
scas
add
nop
push
cmp
add
fadds
outsb
into
add
fwait
add
add
bound
rorl
mov
add
mov
add
and
cmpsb
add
int
clc
fdivrl
mov
mulb
add
sbb
fsubrl
out
sti
call
push
mul
and
add
push
add
xor
xchg
inc
mov
pop
adc
ret
lock
add
lds
cmp
xchg
pop
or
pop
inc
sub
add
add
push
inc
mov
adc
out
cmpsb
add
mov
fildl
add
sub
push
sbb
push
pop
push
shll
mov
jbe
sub
xor
add
push
cmpsl
or
add
sbb
push
fisttpll
leave
jg
sub
cwtl
fistl
addb
popa
fistl
mov
xchg
je
add
add
add
add
mov
movsb
add
push
jnp,pt
mov
add
ljmp
xchg
outsl
insb
add
cmp
or
xchg
stc
sub
lcall
add
cmpsb
add
cmp
jae
adcl
ror
aad
sbb
rcrb
je
add
add
sbb
add
jl
dec
push
jp
inc
lods
add
mov
dec
add
add
int3
call
xchg
movl
add
add
push
scas
add
xchg
mov
add
push
popl
add
lds
add
lahf
add
ds
pop
icebp
sbb
add
add
add
xor
adc
mov
pop
and
add
xlat
movsb
add
pop
jb
fwait
mov
add
dec
jl
insb
data16
add
pop
mov
add
or
add
in
xchg
sbb
out
sbb
or
add
xor
testl
add
push
fcoml
add
xor
adc
or
add
lret
cmc
sbb
imul
add
push
push
add
movsb
add
mov
pop
sub
add
dec
lods
lea
add
scas
mov
add
pop
cmp
pop
fsubs
lea
dec
inc
lcall
mov
sbb
push
cmp
in
sbb
add
xor
mov
das
js
inc
loope
pop
ds
icebp
add
cmp
sbbl
and
mov
ds
add
lea
add
sti
sbb
shlb
je
lret
inc
mov
inc
movsl
loope
mov
add
pop
mov
add
iret
lret
add
sbb
or
add
add
loope
adc
mov
and
add
test
add
cmp
xor
xchg
mov
faddl
mov
cmp
push
push
dec
repnz
rorb
add
jbe
jbe
add
add
ficompl
pushf
pop
xor
cmp
inc
jne
cld
dec
je
psubw
mov
lcall
sti
or
inc
pop
das
outsb
xchg
js
sub
add
subl
ss
add
mov
fadds
outsl
xchg
ret
xchg
add
add
iret
add
add
cmp
jl
add
lock
xor
fs
xchg
add
push
add
push
adc
loope
jle
add
inc
ja
in
cmp
push
add
lea
in
dec
sub
add
push
push
add
lret
mov
push
add
getsec
add
mov
add
cmpsb
add
xchg
add
mov
dec
ljmp
lret
loop
add
outsl
out
into
mov
fwait
pusha
or
add
in
clc
out
hlt
fadds
xor
add
sub
mov
sbb
test
repnz
outsb
cmpsb
add
imul
mov
fwait
mov
and
add
out
shll
jb
cmp
or
jmp
loop
xor
adc
mov
pop
sbb
add
add
cmpsl
adc
out
movsl
jne
pop
dec
int3
lods
cmp
adc
mov
pop
push
lcall
add
mov
add
and
add
pop
js
and
add
addb
mov
xchg
inc
lock
sbb
mov
add
sub
add
jmp
add
xchg
ds
and
add
test
xchg
lock
mov
add
js
mov
mov
adcl
sbb
xchg
sub
lock
or
add
xor
pop
push
stos
add
and
add
std
jno
stos
sbb
rclb
add
add
add
add
inc
inc
add
pop
add
push
enter
xchg
nop
push
cmp
add
push
jno
add
add
add
shlb
add
sahf
std
sub
add
popl
xchg
mov
loop
cmpsb
add
xor
sar
dec
inc
xchg
adc
sbb
das
lods
add
daa
sahf
ljmp
add
cmp
stc
test
add
mov
sbb
add
movsl
mov
add
nop
cltd
adc
addb
mov
inc
add
add
add
das
sub
aaa
popa
mov
add
movsl
cmpsl
call
or
add
push
nop
ret
notl
rorl
inc
dec
mov
loope
dec
sahf
add
in
in
sbb
scas
cltd
iret
xor
fnstcw
cmp
cltd
xchg
dec
int3
jb
stc
or
add
add
fwait
cmpsl
icebp
fidivrs
mov
sbb
xchg
cmp
mov
add
pop
pop
popf
inc
popa
idiv
fbstp
mov
test
adc
mov
add
add
add
add
jns
add
jns
xor
jae
xchg
in
sbb
daa
mov
add
add
add
mov
add
xchg
stos
adc
add
loopne
add
in
test
add
sub
xor
fbld
add
inc
xchg
add
mov
int3
dec
lcall
dec
ror
push
or
add
add
scas
add
loopne
add
rcl
add
add
testl
hlt
xor
or
xchg
ror
in
cmp
in
les
aad
add
mov
cmpsl
xor
adc
mov
mov
mov
add
insl
std
mov
adc
add
aas
xchg
xor
add
adc
cmpsb
add
ds
stos
add
lods
sub
add
xorl
sbb
in
push
sbb
mov
mov
cmp
stc
std
out
jb
jno
adc
dec
cmp
push
add
fs
add
js
pop
fnstenv
push
cld
xchg
mov
and
add
mov
cmpsl
sbb
add
mov
add
addb
push
add
fcompl
js
and
add
inc
mov
add
call
lock
insb
push
sub
add
sbb
add
addb
dec
movaps
mov
pop
add
or
add
outsl
test
add
in
add
call
repz
sub
add
jno
test
add
loope
dec
call
jne
add
mov
add
mov
add
fidivs
add
add
adc
sub
lods
add
push
out
mov
int
cmp
cmp
pop
sbb
stc
test
add
sub
xchg
mov
mov
xchg
ljmp
stc
sbb
add
xlat
mov
add
shl
fildll
dec
and
call
mov
add
add
ret
inc
mov
add
lods
jge
stc
pop
imul
xchg
xor
add
ljmp
cmpsl
int3
inc
push
rolb
add
into
into
lahf
or
add
or
add
mov
addb
lds
push
nop
imul
inc
adc
add
or
mov
add
xchg
outsb
lods
ret
add
add
add
insl
ja
lahf
mov
imul
add
sub
add
mov
add
flds
ror
stc
xchg
mov
mov
loop
push
notl
cmp
push
imul
test
int
fsubr
lods
fisubs
inc
and
setns
js
cld
orl
add
add
test
add
inc
add
xchg
movsb
add
or
mov
add
add
popf
lds
add
push
push
pusha
data16
add
push
jl
jmp
add
and
add
cmp
movsb
add
adc
idivb
mov
mov
ljmp
mov
inc
xchg
xchg
dec
jle
adc
pop
jge
cwtl
push
push
test
jnp
add
and
add
xchg
add
fmull
add
adc
outsl
or
add
jae
lret
arpl
into
or
decb
add
hlt
stos
add
pop
ret
add
inc
scas
mov
add
add
rolb
add
add
sbb
add
test
add
lahf
stc
sub
add
add
xlat
inc
push
add
ljmp
pop
sbb
pop
mov
add
push
mov
add
adc
test
add
mov
lods
add
fists
test
add
add
and
pop
rcrb
mov
add
aad
in
xor
add
sbb
data16
add
mov
push
loope
adc
or
add
ljmp
sbb
mov
sub
add
lret
lods
add
mov
jg
pop
loope
mov
add
sti
in
ret
pop
sub
add
sbb
insl
ljmp
add
add
call
addb
adc
pusha
adc
add
inc
ret
fstpl
adc
add
lods
addl
lods
add
sbb
in
negb
lahf
fsubl
out
pop
std
add
icebp
movsb
add
sbb
roll
add
adc
loope
arpl
fwait
cld
sahf
faddl
aas
popa
pop
pop
xchg
lds
add
iret
clc
xor
popf
mov
pushf
and
add
dec
or
cmp
clc
push
add
test
add
repnz
fists
rcrb
add
push
int
in
mov
or
add
xchg
into
enter
loopne
stc
xlat
movsb
add
ret
push
pop
fstps
mov
add
jge
dec
mov
add
subl
mov
add
add
js
ror
mov
mov
add
bound
pop
sub
add
sub
add
add
imul
add
lds
add
insb
xchg
add
add
ss
daa
in
jl
lahf
pop
idiv
std
test
dec
inc
dec
pop
adc
movsl
inc
pushf
lea
hlt
inc
decl
and
pusha
sub
add
stos
popf
insl
jb
dec
shr
aaa
popf
mov
movsb
add
mov
add
add
add
lret
xchg
outsl
add
add
sahf
fwait
jae
pop
dec
scas
into
mov
dec
mov
test
add
jbe
sbb
add
push
pop
add
imul
add
add
cwtl
pop
imul
popw
cmp
push
ficomps
lods
add
das
mov
add
addr16
push
mov
fists
les
add
or
add
add
push
mov
pminsw
adc
mov
add
jbe
inc
sub
and
or
pop
in
dec
in
cmc
xchg
push
inc
dec
pop
sahf
loope
ret
mov
xchg
add
dec
ja
aam
lahf
sbb
push
add
scas
add
push
add
mov
push
push
xchg
add
mov
cld
popf
arpl
add
add
add
mov
add
sbb
out
popf
cmp
pop
adc
popa
mov
flds
outsb
jmp
pushf
insl
ret
add
add
jmp
jp
jle
call
and
add
dec
jmp
in
fistl
add
push
shrb
add
pop
pop
mov
xlat
mov
add
imulb
pop
in
fucomip
push
xchg
adc
add
addr16
notl
test
add
add
mov
jo
jo
je
mov
add
pop
roll
add
pop
inc
rcrl
jecxz
xchg
jmp
lods
add
movsbl
add
sarl
push
sbb
sub
add
in
ficoms
insl
mov
mov
jb
movsl
das
xchg
in
add
lods
add
jge
aam
fmull
add
sub
imul
mov
add
sahf
shr
inc
lcall
pop
add
movsb
add
jnp
push
and
add
outsb
sahf
jcxz
data16
scas
add
nop
add
in
add
xor
adc
pop
jle
push
and
add
lret
jnp
and
add
repnz
cltd
sub
add
imul
sub
push
add
mov
out
pop
test
add
adc
jno
jp
xor
push
add
in
fwait
cmp
xor
das
sub
sti
and
add
mov
add
pop
xchg
xor
mov
xchg
ja
popf
xor
add
daa
out
mov
add
jnp
sub
add
add
inc
mov
sbb
dec
dec
faddp
sub
mov
add
icebp
mov
mov
add
stc
adc
push
or
add
test
mov
add
cmp
sbb
imul
add
call
add
test
add
sub
add
push
sbb
fcoms
dec
or
adc
add
mov
add
cli
in
rcr
sbb
jl
aad
jbe
fdivl
sub
add
add
data16
jae
addb
test
and
stos
fistps
pop
lods
add
ljmp
cmp
push
add
and
add
cmp
sbb
jmp
cmp
add
jmp
sbb
jge
push
cmp
add
xlat
int3
daa
add
sbb
mov
add
movsl
cmovg
add
mov
sbb
in
sbb
mov
loopne
sub
popa
aam
sbb
movsl
cmp
add
aaa
mov
shlb
add
xlat
lret
jmp
aad
lds
push
mov
add
add
rorb
jecxz
dec
pop
aad
push
in
pop
pop
ror
or
add
sbb
add
add
out
mov
add
cmp
xlat
or
add
add
ret
adc
icebp
stc
insb
add
popf
inc
aas
bound
int
sti
adc
xor
or
mov
add
fdivp
and
add
adc
add
xlat
and
ss
arpl
adc
out
push
adc
push
je
shlb
into
mov
add
pop
pop
and
xchg
dec
sahf
xor
dec
nop
testb
push
mov
std
out
push
aas
adc
fsubs
popf
fdivrl
add
add
push
mov
insl
mov
ret
adc
push
out
sub
add
jle
insl
fs
leave
aam
add
mov
inc
cltd
loop
dec
loop
cmp
mov
mov
adc
add
add
mov
pop
mov
inc
mov
pop
lock
fcomps
sub
add
addr16
add
lcall
mov
or
add
pop
fistps
mov
adc
add
adc
out
xor
les
add
mov
add
jnp
xor
pop
push
in
pushf
and
add
in
movsl
and
add
test
add
pusha
jno
xlat
sti
cwtl
fwait
pcmpeqw
mov
add
add
mov
jecxz
add
add
xor
sub
add
add
add
jno
mov
add
out
addb
or
add
add
sti
push
scas
dec
pop
ret
xchg
je
mov
into
lods
add
rcrb
lahf
xor
xchg
pop
xchg
inc
jmp
add
sub
std
lahf
int
mov
add
xchg
add
add
add
xchg
inc
push
mov
pop
push
inc
mov
add
push
outsb
and
add
sbb
add
les
push
lods
add
fdivrs
out
aam
je
ljmp
repz
cmpl
dec
dec
inc
ljmp
outsb
lahf
mov
add
xchg
sbb
repnz
add
and
add
scas
add
ret
jne
dec
add
leave
add
add
out
fwait
add
sub
out
mov
add
test
add
add
in
add
decb
pop
mov
test
icebp
fiadds
add
cmp
add
ljmp
scas
add
mov
in
mov
add
in
cli
push
mov
loop
hlt
mov
icebp
xchg
jl
cmp
sbb
mov
pop
push
mov
dec
inc
add
xchg
add
cvtpi2ps
add
lock
and
out
out
and
add
inc
cli
adc
push
rorb
add
pop
xchg
jns
out
ret
imul
add
add
jno
mov
addr16
sub
add
add
jp
mov
inc
push
sbb
enter
mov
in
mov
mov
xchg
mov
sub
jmp
shlb
add
addb
pop
sti
cmp
push
jmp
mov
fs
adc
mov
or
add
outsb
xchg
frstor
add
sbb
xlat
add
clc
push
popf
filds
add
pop
mov
je
aam
and
add
pusha
jp
movsl
faddp
mov
psadbw
mov
cmp
dec
andl
mov
lods
add
fscale
repz
xchg
neg
jb
test
add
les
sar
cmc
xchg
add
add
add
negl
mov
add
add
pusha
repz
add
push
fstpl
pop
or
pop
cmc
mov
lock
add
xchg
imul
jo
in
xchg
xchg
push
les
add
push
dec
cmp
and
add
jne
loop
sahf
lods
add
mov
inc
test
add
xor
aad
add
idivb
ljmp
mov
add
add
add
in
aaa
icebp
cmp
adc
mov
push
lods
add
aas
sbb
minps
repnz
adcl
or
add
imul
hlt
xchg
pop
add
add
out
cltd
cmpsb
add
dec
jl
mov
add
push
add
inc
xchg
add
adc
add
mov
cli
rclb
iret
sarl
add
add
jnp
jns
and
jnp
sub
add
pushf
jmp
jnp
movsl
ljmp
std
call
adc
fs
push
push
addb
ret
mov
cwtl
imul
sub
add
jns
leave
lods
add
bts
and
add
pop
sti
hlt
xchg
inc
outsl
push
imul
or
add
sub
rolb
mov
mov
mov
add
inc
repnz
add
adc
in
lcall
int
add
fs
adc
xchg
test
aam
xlat
push
stos
ds
add
push
stc
shll
add
lret
bound
add
pop
gs
sub
add
adc
pop
in
aad
sub
add
test
add
incb
jg
pop
add
push
mov
jo
sub
rcr
pop
lods
add
dec
ret
cmp
popa
inc
cwtl
andps
jnp
or
add
into
cltd
aas
adc
repnz
pop
mov
scas
push
ds
inc
aam
testl
ficoml
add
xor
mov
jb
jns
add
pop
and
add
add
ret
lea
mull
or
push
add
addb
dec
insb
les
cmp
mov
add
pop
dec
iret
stos
add
jae
xchg
in
add
jbe
add
fsts
inc
in
cmpsb
add
adc
divl
aad
add
xchg
lods
pop
mov
insb
mov
dec
cwtl
dec
jecxz
stc
lahf
xlat
rolb
sub
mov
add
add
popf
add
mov
icebp
adc
cmp
mov
xchg
stc
cltd
mov
push
adc
out
test
add
xor
xor
daa
loopne
cmc
test
add
add
imul
pop
mov
xor
add
or
add
shlb
jmp
push
xlat
addr16
stos
add
fsubrs
pop
push
pop
in
pop
fbld
xchg
stos
push
xor
pop
mov
xor
adc
mov
push
sti
ss
push
add
push
add
cld
inc
decb
add
xor
add
xor
add
jo
outsl
lock
mov
add
mov
fistpll
push
cwtl
rorl
and
int
fwait
rorb
add
add
outsb
add
add
inc
sbb
lods
pop
scas
idiv
or
xor
dec
lods
into
data16
push
mov
add
jmp
pop
push
cmp
add
add
movsl
xchg
or
add
add
aad
popf
sbb
dec
sub
mov
or
add
into
sub
add
pop
mov
sbb
push
rcrl
sub
add
movsb
add
push
sahf
mov
add
cli
lods
add
dec
rol
cwtl
into
out
pop
addb
dec
rcl
push
push
call
add
fsubs
add
loop
xor
xchg
mov
addb
cld
push
lret
stos
add
or
add
xchg
lock
mov
test
add
int3
sbb
gs
aad
jge
int
mov
add
lcall
fwait
dec
push
aad
rcr
out
mov
jmp
scas
hlt
repnz
jg
xchg
add
add
testb
add
ds
ljmp
sub
bnd
pop
imul
or
add
add
push
std
jecxz
lea
add
mov
repnz
push
outsl
jb
add
jne
sub
mov
pop
clc
jo
mov
add
iret
out
int3
jmp
add
xlat
mov
push
add
push
cmc
scas
add
push
mov
add
lret
mov
add
dec
cmp
add
push
sti
push
nop
iret
rcll
mov
sbb
add
sub
add
pop
and
add
add
adc
push
xor
lock
mov
mov
add
dec
pop
in
lret
insb
out
add
push
add
sbb
mov
lea
push
xor
and
add
mov
xchg
add
int
push
loopne
loope
add
les
add
push
shlb
add
add
mov
push
mov
xchg
add
add
xor
in
decl
xchg
loopne
mov
add
test
add
in
fisubs
xor
sub
push
popf
inc
flds
js
cli
cmp
add
add
fsts
sahf
mov
shrl
rol
push
add
je
push
movsb
add
sub
add
mov
add
inc
pop
ss
dec
push
add
pop
jmp
add
add
or
add
add
iret
or
add
mov
add
addr16
add
fistpl
add
jne
rol
mov
add
jb
sbb
hlt
push
jbe
push
cwtl
jb
push
add
movsl
jno
stc
stos
leave
add
ja
add
mov
xchg
sub
add
or
add
outsb
mov
nop
stos
add
cli
push
dec
mov
add
in
sbb
fwait
add
add
lcall
push
inc
test
sbb
sbb
addb
mov
cmp
mov
add
lods
add
fists
iret
imul
repz
jl
int
rcrb
push
push
enter
pop
dec
lods
add
pop
dec
inc
int
dec
sbb
inc
ret
and
xchg
fnstcw
mov
mov
push
fs
cld
inc
bound
popa
xor
pop
roll
and
add
inc
push
cld
mov
add
psadbw
add
shll
sbb
add
cmc
xchg
in
add
add
xchg
fstp
movsb
add
xor
cmp
jbe
mov
test
xchg
add
fdivrl
jge
add
sbb
xchg
int3
xchg
out
popl
movsb
add
dec
push
je
inc
push
add
xchg
add
sub
sub
sbbl
jnp
leave
fldenv
xchg
xchg
in
xchg
out
and
add
popf
xchg
pop
fldt
bound
and
ss
cmc
mov
adc
mov
dec
icebp
cltd
cwtl
in
fstps
pushf
push
mov
mov
xchg
sub
test
insb
cmpsl
sbb
imulb
push
fistps
add
in
mov
jno
jg
mov
push
push
dec
icebp
cmpsb
add
or
add
xlat
mov
mov
add
inc
pop
int
inc
jg
adc
sbb
jecxz
addb
dec
push
mov
cmp
xchg
out
pop
xlat
addb
add
add
sub
add
stos
add
push
xor
push
add
or
add
loop
lods
sahf
push
lds
lds
rorl
add
sub
add
negb
mov
dec
mov
call
fldt
add
add
cmp
into
in
adc
movsl
imul
cmp
add
add
ja
lods
mov
addb
inc
subl
add
add
fdiv
cli
mov
sub
test
add
and
dec
lret
add
sbb
dec
jns
add
add
add
faddl
add
or
add
add
pop
loop
push
pop
dec
lahf
icebp
daa
stos
adc
sbb
test
add
stos
add
pop
mov
add
faddl
adc
adcl
dec
lret
lahf
jge
jle
mov
pop
fs
pop
nop
lds
mov
jns
inc
sbb
add
pop
mov
jl
jbe
roll
fldt
mov
stc
sub
xor
sub
pop
popa
xchg
aas
xchg
out
add
or
xlat
lds
sbb
dec
inc
insb
dec
cmpsb
add
sti
test
mov
adc
pop
mov
add
pushf
dec
adc
sbb
pop
mov
sub
add
push
icebp
sub
add
add
inc
rcrl
mov
add
jnp
test
add
ds
jnp
xor
mov
outsl
adc
cmc
xchg
sub
mov
sbb
jno
rolb
sub
add
hlt
jb
mov
cmp
add
inc
inc
sbb
lods
mov
cmpsl
inc
inc
fs
xor
insb
inc
xchg
push
dec
stos
add
push
mov
jne
out
xchg
pop
ror
xchg
add
push
jns
out
mov
out
shlb
aaa
test
push
shll
add
mulb
inc
push
jecxz
test
mov
add
add
mov
dec
repz
mov
mov
jb
addb
int
jb
sub
add
sub
mov
aas
cmp
jb
into
push
outsb
or
add
add
ja
add
add
aas
addb
add
adcl
popf
data16
or
mov
add
add
pop
fnsave
add
mov
bound
psrlq
add
add
add
clc
das
test
xor
add
arpl
jne
loop
mov
scas
and
add
push
sub
mov
add
add
shlb
sub
add
in
add
or
add
mov
add
inc
mov
daa
push
add
xor
mov
test
add
dec
testl
into
div
inc
jns
add
dec
xchg
xor
adc
push
scas
addr16
add
out
popa
mov
add
bound
lret
pop
push
add
push
add
pop
and
add
add
cwtl
pop
into
mov
dec
xor
addl
add
iret
je
push
add
adc
jle
mov
and
add
inc
outsb
clc
xchg
imul
add
ja
stos
popa
inc
iret
fs
pop
sbb
repz
or
add
popf
scas
add
sub
add
scas
add
dec
adc
addb
sbb
orl
mov
add
icebp
mov
aas
ret
jne
lods
add
lret
je
adc
imul
sbb
fbld
add
ds
jo
adc
dec
cli
cli
push
sub
jae
test
add
add
xchg
stos
add
and
push
mov
add
sbb
add
push
mov
mov
mov
push
rcl
jno
je
mov
add
mov
cmp
data16
data16
add
add
cmpsb
add
mov
dec
xor
add
pop
xchg
or
push
dec
xlat
ret
add
jo
push
add
or
mov
add
pop
add
add
add
adc
addb
adc
lret
popa
and
movsl
std
adc
test
add
bound
xor
outsb
or
data16
xchg
stc
cpuid
add
fistl
jo
add
adc
outsb
out
je
mov
mov
add
add
xchg
in
push
arpl
dec
jmp
ja
and
add
add
mov
add
add
mov
add
or
add
stos
add
mov
add
pop
jecxz
cmp
or
movsb
add
add
add
add
bound
mov
add
aas
jnp
arpl
add
sti
adc
lret
jo
fcomps
mov
add
xchg
add
push
addb
gs
push
mov
add
movsb
add
subl
add
in
ljmp
outsl
icebp
inc
popf
mull
cmp
test
add
stos
add
fisubrl
imul
xor
mov
mov
add
xor
cmp
add
sub
sub
add
jnp
sub
cmpl
mov
add
adc
out
cld
push
insl
pop
les
mulb
inc
pusha
aaa
in
addb
int
cmp
fndisi(8087
mov
data16
iret
jle
dec
rclb
decl
push
inc
mov
add
push
mov
add
pop
movsl
xchg
in
jo
movsl
rcrb
add
add
mov
sbb
dec
addb
pop
sub
add
stc
in
xor
sub
pop
aas
cltd
out
mov
add
cli
sbb
add
lahf
inc
mov
sub
add
push
cmp
stos
pop
movb
add
popf
fimuls
addb
int
mov
add
xor
add
pop
sbb
add
add
and
hlt
mov
add
jbe
stc
xchg
cmp
test
add
lods
inc
xchg
add
jmp
cmp
stos
stos
add
fsubrl
push
data16
loop
adc
popf
pop
sub
add
adc
push
lcall
out
add
inc
loopne
lcall
out
sub
add
lahf
mov
leave
adc
nop
push
add
nop
or
addb
out
lahf
add
add
rcrb
xor
add
add
inc
in
movsl
test
add
test
add
add
push
sti
repnz
pusha
pop
jecxz
pushf
cmp
popf
push
add
push
lret
lret
add
pop
mov
and
add
adc
add
mov
insb
or
mov
xchg
lds
cmpl
cltd
jle
sub
jle
cmp
xor
ljmp
jg
pop
pop
imul
mov
add
push
add
movsl
add
cli
insb
add
add
loope
add
stos
mov
outsl
or
dec
in
ss
cmp
testl
sub
cld
mov
and
add
add
push
sti
jns
clc
aas
insl
add
add
testl
andl
mov
cmpsl
repnz
add
inc
push
xchg
add
mov
out
xchg
add
add
cmp
outsb
lock
jbe
test
pop
or
add
add
push
jle
cmc
out
inc
xchg
orl
jmp
xchg
add
shrl
xchg
fdivs
into
jns
sub
add
gs
dec
test
fistps
add
adc
push
sub
ss
add
popa
idiv
adc
pop
shl
and
add
popf
lock
mov
add
add
popl
loopne
ss
push
aam
mov
mov
add
xor
clc
das
movsb
add
fldcw
loop
xchg
fwait
pop
movsb
add
add
add
enter
cmp
mov
fdiv
stos
lds
xor
xchg
sbb
out
inc
cmp
add
fwait
pop
fsubrl
iret
jp
or
add
adc
test
add
outsb
mov
add
mov
leave
addb
ret
xchg
inc
jo
add
xchg
cmp
int
js
sbb
ja
add
pop
outsl
mov
lods
jbe
inc
shlb
push
add
jo
add
xchg
add
jmp
out
mov
add
addb
int3
addb
test
add
xlat
xor
and
add
int
je
daa
mov
psrlq
inc
and
add
arpl
int3
fsubr
add
enter
add
rorb
test
add
sub
ror
sti
int3
cwtl
stos
add
add
add
jl
mov
call
xchg
jecxz
add
aas
lret
int
sub
add
int3
out
mov
rclb
rorl
in
xor
add
and
xchg
mov
xchg
idivb
xchg
mov
dec
in
out
retw
in
cmp
mov
mov
cmp
scas
dec
xor
insb
mov
inc
mov
inc
hlt
pop
fcomps
add
incl
sti
inc
ret
sub
shlb
stos
inc
mov
add
add
add
das
xor
cmp
and
add
pop
pop
roll
add
dec
jle
adc
mov
dec
fadds
sub
add
xchg
sub
fildl
add
adc
mov
ret
ret
add
test
add
or
mov
fisttpl
push
addb
ljmp
add
lret
jnp
push
mov
in
inc
adc
jle
add
push
lods
addr16
add
fistps
jg
xchg
fwait
bound
pushf
fiaddl
ret
mov
je
roll
and
add
add
add
lea
add
xor
loop
mov
aam
mov
ret
movsb
add
lock
sbb
inc
xchg
aaa
mov
pop
dec
push
pop
sbb
aam
insl
adc
shrl
add
xchg
add
mov
jo
sub
add
mov
add
orl
and
add
add
adc
jl
loop
adc
popa
add
jge
ds
clc
ss
push
mov
cmp
mov
popa
imul
stc
outsl
lea
sub
jb
pop
pop
nop
in
jbe
movsb
add
dec
fiaddl
fcmovnu
push
das
and
add
mov
mov
add
ds
loope
cwtl
dec
iret
sub
add
add
lret
mov
cmpsl
cmp
add
addb
xor
arpl
add
das
into
pop
sbb
add
cli
into
and
add
cli
mov
add
out
mov
add
jmp
imul
inc
pop
xor
nop
addr16
xchg
add
fldcw
fisttps
push
add
pop
push
add
sub
add
add
cltd
or
mov
fldt
scas
jl
daa
pusha
scas
loopne
data16
mov
sub
add
xor
inc
test
add
shll
test
add
out
push
push
add
outsb
pop
sbb
xchg
mov
add
pop
push
add
pusha
addb
and
lea
sbb
scas
add
mov
stos
add
add
mov
add
add
test
add
cmp
pop
out
and
inc
add
add
dec
iret
popa
push
mov
pusha
adc
addb
mov
add
sub
add
addr16
pusha
sub
movsl
pop
add
jo
rcrb
in
orl
negl
jg
sub
add
popf
xor
add
add
loop
add
jle
pop
pop
jecxz
jmp
ss
fldcw
sub
push
cmp
sbb
adc
ficompl
push
pusha
std
pop
and
add
notb
daa
shl
push
data16
add
stos
int
add
push
push
repz
addb
push
add
out
ds
add
out
in
cmpsb
add
push
and
dec
or
add
out
inc
mov
les
add
fbld
les
inc
adc
add
add
xchg
fwait
jecxz
push
push
loopne
pop
push
fnstcw
push
ja
fldcw
cmp
xchg
mov
push
mov
mov
addb
push
mov
lret
pusha
lea
adc
and
inc
bound
lret
add
or
add
inc
xchg
pop
and
add
das
xchg
loop
subl
mul
outsb
pop
sub
xor
pop
mov
add
mov
add
push
iret
xchg
shrb
add
push
sub
add
fwait
or
mov
add
add
rcr
mov
add
frstor
scas
add
xlat
xor
and
add
pop
test
add
mov
add
stc
outsb
cli
push
mov
jns
sti
mov
and
push
orl
clc
dec
andl
loope
popf
call
add
into
sarb
add
sti
popa
add
mov
push
dec
pop
push
add
test
add
inc
cmp
in
xchg
repz
in
gs
jnp
add
les
sbb
add
push
add
or
add
gs
aam
push
out
fstl
clc
fs
jle
inc
test
add
mov
mov
add
ljmp
ret
and
and
add
dec
in
lds
add
cmp
aam
ja
out
or
add
add
add
xor
sahf
pop
add
add
ficoml
in
push
add
mov
iret
in
fnstsw
sbb
add
mov
decl
jne
pop
outsl
mov
add
test
sbb
add
dec
pusha
popa
std
pop
rcr
enter
sbb
nop
add
add
test
add
add
xchg
into
int3
sahf
cli
mov
add
jl
add
jb
sbb
into
aad
or
add
xchg
add
xchg
add
cmp
inc
cmp
pop
fdivrs
xchg
add
add
push
add
jnp
popf
pusha
pop
pop
ljmp
sbbl
add
jge
shll
pushf
dec
aaa
lret
rol
insb
inc
scas
inc
addb
xchg
out
pop
pop
xchg
fsubl
xor
pop
sub
std
lret
test
add
fnstsw
sub
add
and
add
mov
ljmp
adc
add
out
mov
pop
add
xor
pop
xor
sbb
aam
les
pop
sbb
fsubrs
cmp
pop
adc
ret
scas
push
shrb
jns
dec
ljmp
and
add
cmpl
add
das
daa
adc
loopne
mov
add
movsl
sub
add
add
out
stc
fdivrs
outsl
loope
mov
scas
push
add
jnp
sbb
ret
movsb
add
add
add
fisubrs
add
push
jp
adc
out
out
jnp
sub
add
in
frstor
ret
jns
add
push
add
in
add
ja
lea
cli
outsl
lcall
lahf
in
add
adc
insl
mov
sbb
sbb
cli
cmp
cld
adc
mov
and
pop
pop
dec
scas
add
add
add
dec
or
cmp
jo
jo
stos
add
mov
jo
pop
xchg
outsl
in
jmp
pop
fidivs
and
add
ret
or
in
inc
pop
xor
add
xchg
xchg
cmp
incb
sub
add
mov
mov
push
push
fsubr
ss
push
in
aas
add
add
sbb
std
inc
or
jp
cmp
push
fisttpll
add
sbb
add
inc
or
add
push
xchg
pop
arpl
aad
sbbl
sub
add
cmp
and
add
loope
jp
jle
add
mov
add
shlb
test
push
add
loop
out
xchg
mov
jp
xor
dec
cmp
mov
ljmp
gs
mov
cmp
cmp
outsb
inc
mov
jle
xchg
sbb
push
popa
int3
pusha
dec
out
ljmp
pop
dec
repnz
mov
add
xorl
add
add
addb
enter
push
sub
add
les
mov
add
xchg
dec
mov
gs
add
pop
int3
in
loopne
addr16
in
jne
iret
or
mov
add
adc
frstor
sbb
icebp
lahf
mov
mov
repnz
ret
fisttpl
outsb
xor
les
or
add
movsb
add
xchg
addr16
cwtl
inc
cmp
add
add
cmp
xchg
ficompl
lds
fcomip
xlat
aas
or
add
dec
les
xor
xlat
js
cmp
xchg
push
and
add
sub
and
int3
aad
addb
dec
mov
add
iret
add
pop
jmp
test
add
and
add
cld
jo
iret
adc
add
inc
mov
add
imul
cmpsl
addb
stc
jge
aas
addb
aas
roll
sbb
testl
xchg
push
and
add
jns
insl
sub
add
pop
fldl
add
je
adc
add
add
ljmp
add
repz
add
jle
pop
mov
add
shll
cltd
cmp
mov
inc
cmpsb
add
sbbl
in
arpl
or
mov
test
xchg
mov
cmp
mov
sub
lods
add
jne
inc
out
dec
mov
add
cmp
enter
xchg
ret
push
xchg
stos
add
sub
aad
pushf
fisttpl
add
push
aam
add
push
dec
aad
xchg
adc
dec
ret
xchg
fstps
cli
cmpsl
aad
aad
lea
add
add
enter
xor
adc
out
ljmp
inc
add
add
cmp
dec
dec
in
cmc
xchg
andl
pop
popf
fwait
arpl
mov
leave
inc
addb
mov
add
xchg
sub
inc
icebp
std
pop
mov
xchg
and
add
and
pusha
xor
mov
in
sub
add
sbb
mov
add
test
add
or
add
out
imul
add
ljmp
adc
pop
test
cmp
jle
aas
pop
lods
cmpsb
add
mov
das
push
cmc
mov
or
add
inc
loopne
add
cld
scas
xor
addb
movsl
pop
adc
out
mov
fistpll
aas
mov
xchg
pop
mov
addb
dec
cli
push
jmp
pop
inc
pop
aaa
cmp
xor
xchg
add
dec
jb
add
jmp
mov
push
add
sbb
rorb
add
push
mov
xor
stos
xchg
arpl
popa
push
add
mov
mov
insl
clc
or
les
xchg
add
aad
mov
or
add
add
into
into
sub
add
bnd
add
or
mov
add
jns
out
jnp
add
enter
add
lcall
test
or
add
add
ja
cmp
mov
repz
mov
mov
addb
push
stos
push
inc
add
add
and
add
stos
add
dec
shl
and
add
xlat
pushf
pushf
jl
orl
dec
push
push
add
daa
cmpl
add
sbb
mov
and
add
xor
xchg
shll
das
pop
sti
je
or
dec
adc
mov
addb
xchg
push
jns
ret
in
fstpt
xchg
adc
shrl
add
bound
add
add
sub
xchg
add
sbb
push
dec
pop
shlb
jb
movsb
add
xor
and
add
addr16
cmpsb
add
dec
iret
das
in
and
dec
into
jnp
jb
xchg
fnstsw
cmc
negb
add
sahf
dec
clc
nop
loop
add
adc
or
in
ljmp
imul
add
test
pop
mov
mov
fildll
inc
addb
push
mov
insb
or
xrelease
sbb
xchg
hlt
add
dec
out
jg
popa
mov
add
and
add
mov
add
add
daa
sbb
add
mov
add
add
add
addb
adc
ret
xchg
roll
add
pop
ds
hlt
cmp
insl
or
add
xor
aas
and
push
aam
xchg
test
test
movsl
les
push
adc
fldt
sarb
scas
add
mov
sbb
popf
insb
and
add
push
sbb
addb
push
mov
pushf
xchg
int3
mov
icebp
pop
mov
add
jle
test
cwtl
pushf
sub
add
and
push
add
add
mov
into
rcr
out
pop
mov
stc
fwait
cmp
sar
leave
out
std
add
cmp
call
xor
dec
sahf
cld
movsb
add
rorl
sbb
outsb
out
or
iret
fisubs
mov
jae
jno
lret
pop
rorl
add
das
frstor
add
and
add
inc
loope
and
das
mov
fsubrs
and
add
ds
jne
push
cwtl
xchg
dec
mov
add
addb
movsb
add
sub
add
jmp
adc
lods
add
repz
add
pusha
pop
jb
fcomip
mov
insb
xor
rcrb
lods
add
inc
sbb
add
jmp
or
add
mov
add
sub
xor
jb
in
aad
addr16
les
add
sbb
imul
leave
jle
add
ds
jge
adc
mov
add
push
add
in
fistpll
insl
out
push
sub
add
add
stc
add
and
xlat
stos
add
xor
daa
lcall
hlt
jg
adcl
out
jp
cli
nop
xchg
pop
fistps
sbb
xor
pop
cmp
mov
icebp
lds
inc
cwtl
jb
mov
sar
pop
sub
add
add
dec
adc
repz
jmp
mov
or
mov
push
int3
fistps
and
add
mov
rorb
mov
lods
add
mov
add
add
add
cli
add
add
dec
push
arpl
les
rclb
iret
xchg
pop
jge
je
xchg
bound
add
dec
int3
lret
or
add
add
and
add
add
aam
push
cli
ds
and
mov
int3
dec
ss
mov
mov
loop
aam
jb
add
popa
jp
add
jg
add
insb
pop
push
je
test
add
mov
fistps
fcompl
addb
inc
mov
add
add
fsubrs
add
shlb
hlt
cmpsb
add
aad
add
gs
inc
cwtl
outsl
push
jbe
mov
add
add
push
pop
int3
and
add
sub
add
dec
lcall
lret
pop
movsb
add
ret
or
add
shll
fadd
dec
and
mov
sbb
cmpsb
add
addb
xchg
mov
stc
mov
ficoml
test
clc
mov
add
dec
mov
add
aam
pop
mov
add
stos
add
adc
fwait
jge
add
xorl
dec
divl
js
nop
xchg
iret
aas
jo
xchg
pop
jns
test
add
add
add
xor
add
rcl
outsb
stos
add
imul
add
das
rcrl
inc
inc
xchg
mov
add
add
test
int3
add
mov
fcoms
add
pop
cmpsb
add
jp
js
inc
sbb
xor
add
pop
push
jle
mov
add
stc
mov
cwtl
sbb
or
outsl
fwait
mov
push
mov
mov
mov
xchg
lock
stos
mov
lahf
lds
add
aad
aad
insb
cwtl
jge
add
aaa
add
lea
insb
insb
xchg
jmp
xchg
fwait
in
sti
push
mov
push
jno
cmp
pop
out
cmp
add
lods
sbb
xchg
in
add
sahf
testl
xor
hlt
cmp
aam
dec
or
add
adc
add
mov
mov
add
nop
xchg
sub
imul
sub
add
add
mov
add
and
add
dec
cwtl
xor
pop
daa
push
fld
mov
add
into
dec
lret
add
lds
add
icebp
mov
cmp
add
pop
imul
add
inc
arpl
cmp
mov
add
nop
into
inc
mov
popa
addr16
repz
jle
jb
add
and
and
add
add
xor
add
clc
dec
cmc
jne
jmp
xor
add
push
test
pop
test
add
in
hlt
repz
xor
add
pop
sbbl
add
sub
inc
subl
add
icebp
push
xlat
fldt
or
add
test
fcomi
addr16
adc
gs
cmp
xchg
insl
pop
addb
xchg
inc
xor
ljmp
pop
inc
pop
pop
stc
les
add
inc
cmp
ss
in
clc
fs
popl
leave
mov
idivb
sbb
add
flds
add
inc
out
into
dec
jg
xchg
add
insb
cmp
push
inc
call
cmp
add
xor
aas
divl
add
add
or
add
xor
icebp
pop
jge
mov
add
add
inc
dec
mov
jno
add
push
add
dec
cltd
lods
add
add
pushf
icebp
push
add
btr
daa
sar
lods
scas
add
mov
mov
add
out
sbb
addr16
pop
adc
lret
add
sbb
roll
fildl
add
std
mov
lcall
sub
add
inc
fsubrs
insb
test
xchg
mov
js
stos
std
fwait
xor
stc
dec
mov
push
add
pop
pushf
mov
add
sar
icebp
mov
jnp
loopne
sahf
add
push
add
lock
int
cmp
enter
inc
and
and
add
mov
sahf
xchg
xchg
insl
mov
add
push
dec
jl
bound
shrl
lret
out
cmp
add
pushf
fldt
add
cli
lret
add
cmp
add
gs
inc
push
sub
xor
jno
xchg
dec
cmp
pop
pop
enter
cmpsl
xchg
mov
gs
jne
pop
sbb
or
add
arpl
mov
loope
xor
add
mov
insl
push
and
jle
lahf
out
ja
test
pop
fnstsw
inc
or
add
add
jmp
or
add
add
mov
dec
pop
cmpsb
add
lods
add
cmp
test
add
add
add
add
add
push
imulb
add
push
cmpsb
add
add
in
dec
cmp
repnz
mov
inc
std
sub
movsl
inc
ret
rclb
mov
xchg
inc
sbb
jns
add
add
and
shlw
add
popf
jns
sub
add
add
mov
add
adcl
or
add
add
inc
outsl
xor
test
add
call
add
leave
addb
and
add
mov
xchg
pop
loopne
repz
xchg
repnz
adc
mov
enter
jo
push
add
call
add
jo
push
lret
dec
jmp
xor
into
mov
push
pusha
fnsave
and
push
cmp
sub
push
xchg
scas
add
stos
add
add
add
cld
cmp
sbb
push
mov
add
add
leave
pushf
in
int3
mov
add
sub
xor
add
mov
add
inc
add
add
add
add
ffreep
inc
add
scas
add
pop
add
inc
xchg
aad
test
add
shlb
add
jns
add
dec
or
add
and
lea
or
lods
add
adc
aad
xchg
lods
add
stos
push
add
pop
pop
jne
rcll
lock
pop
mov
push
aad
mov
add
idivl
ficoms
scas
fcom
sub
out
add
pusha
xor
jb
add
jae
sbb
jnp
fisubs
add
lds
push
push
xchg
or
mov
ja
jbe
add
repnz
add
out
adc
in
pusha
sbb
aam
addb
jo
add
xchg
lret
add
xchg
insl
mov
inc
cmc
insl
jbe
jne
xchg
call
call
pop
pop
shlb
stos
add
test
das
add
orl
int
cmp
dec
ret
add
mov
stos
aad
push
divl
cmpsb
add
sub
lods
add
test
add
jno
inc
and
add
movsb
add
xor
in
mov
and
out
pop
sbb
add
inc
add
mov
add
xchg
add
addb
mov
rolb
add
in
lods
inc
adc
test
push
add
daa
mov
add
nop
popf
dec
jmp
push
add
out
shl
hlt
push
add
lods
add
cld
xlat
in
inc
pop
jno
jne
add
and
sbb
add
out
shr
push
sbbl
add
shll
gs
ljmp
add
jp
add
dec
imul
imul
add
imul
add
add
inc
movsl
push
inc
lods
add
xor
adc
jle
shrl
add
add
cmpsl
fs
jmp
add
xchg
jno
add
arpl
lods
add
mov
sub
adc
pop
bound
or
add
mov
inc
ds
ficoms
pushf
jmp
jl
adc
add
pop
and
lock
addr16
jno
adc
adc
aaa
mov
add
add
sarb
ror
leave
inc
jmp
arpl
add
dec
stc
dec
pop
mov
js
fists
dec
pop
loop
pop
add
add
add
ss
nop
fdivrs
push
sbb
pop
les
aam
add
lds
add
push
pop
jp
ds
jge
cltd
jo
add
imul
lahf
push
pushf
inc
hlt
add
sarb
add
add
adc
or
xchg
fmuls
add
add
add
add
jne
test
cmp
addb
jae
lret
sub
add
enter
sbb
in
insb
cwtl
jp
pop
cld
mov
jae
jge
push
add
in
aad
add
adcl
and
sti
sub
add
xor
in
sbb
sbb
lods
add
xor
sub
add
cmpsl
subl
pop
and
add
popf
in
xorl
mov
loope
dec
lea
movsb
add
iret
cmp
and
mul
rorb
add
add
push
and
add
add
daa
pusha
pop
test
add
xorl
stos
add
cmp
sarb
mov
dec
ret
scas
add
xor
sub
add
and
add
add
add
sahf
or
mov
ds
mov
add
imul
add
inc
and
add
or
add
add
pop
and
add
repz
call
jle
ds
mov
add
shrl
add
ljmp
add
or
add
mov
pop
mov
int3
pop
jnp
addb
orl
dec
mov
cmp
and
add
out
add
jge
das
mov
push
xchg
add
arpl
loope
xchg
add
mov
fnsave
add
jmp
jecxz
add
outsl
mov
movsl
push
xor
jp
pop
arpl
cmp
or
add
inc
xchg
push
add
add
fcmovb
int3
sahf
mov
add
push
je
test
add
add
ds
popf
sub
add
lock
pop
push
mov
enter
add
lds
adc
clc
stc
dec
mov
je
pop
enter
dec
stos
add
xchg
rolb
outsb
sbb
test
add
inc
or
add
insl
sarb
add
mov
add
mov
out
xor
fwait
mov
add
and
add
sub
add
ds
xchg
add
add
mov
dec
andl
add
jae
mov
cwtl
sbb
add
adc
add
xchg
outsb
test
sahf
adc
call
add
mov
add
pop
pop
cmp
add
mov
add
xor
inc
push
out
sbb
aaa
icebp
xchg
pop
jbe
jg
xor
cwtl
out
xor
inc
iret
xor
dec
push
add
mov
insb
adc
push
mov
xor
mov
loop
mov
jge
push
ret
ret
push
pop
mov
jle
stc
scas
sub
sar
icebp
adc
out
sub
add
jo
int
lds
add
cli
movsl
mov
xchg
sub
pop
jecxz
or
add
into
fbld
mov
add
inc
mov
ds
push
ljmp
mov
ds
pop
jge
dec
xor
adc
fadds
inc
test
sti
push
imul
pop
adc
sub
add
les
adc
or
sahf
flds
sbb
jae
cmp
pop
fdivrp
jecxz
popa
out
sub
mov
fcomi
ds
push
int3
mov
int
jg
mov
add
fidivl
jecxz
repnz
add
cwtl
imul
push
dec
in
push
add
xchg
nop
adc
addb
jb
add
mov
add
jmp
add
ja
sbb
mov
movsb
add
popa
cli
xor
iret
sbb
xor
push
and
add
jb
insl
sahf
shll
dec
sar
lcall
jp
pushf
push
add
pop
jmp
cltd
mov
inc
in
ret
inc
xor
icebp
inc
fsubrl
add
adc
pop
imul
mov
pop
les
add
xchg
lods
add
push
xor
push
jae
dec
dec
aaa
jae
jb
pop
je
add
iret
or
add
add
xchg
lret
fxch
bound
add
sahf
mov
add
add
mov
negb
leave
mov
add
add
idivl
xchg
lret
ret
sbb
dec
mov
sub
add
add
dec
or
add
int3
stc
cld
and
int
add
add
push
jae
inc
lds
call
add
xchg
add
cmpsb
add
enter
notl
jo
jne
add
and
add
les
add
mov
xchg
mov
dec
jmp
fcmovb
in
or
add
push
adc
add
ljmp
push
cmpsl
sbb
xchg
mov
or
add
mov
add
fistl
jg
fdivs
inc
xor
add
add
add
push
shl
and
mov
add
jae
add
add
cmc
dec
cmp
xor
add
xchg
mov
add
sub
sbb
adc
ffreep
imul
adc
into
dec
and
pop
cld
jl
imul
jmp
mov
adc
shrl
mov
mov
cmp
jae
xor
cmp
add
addb
addr16
add
inc
xor
fistpl
daa
push
fcmovb
xchg
shrb
add
inc
ret
jae
xor
loope
jne
add
ss
cmp
orl
add
push
shll
cltd
lock
into
push
add
clc
fstpt
cwtl
insb
fimull
mov
rcll
pop
aaa
push
xchg
cmp
add
fwait
ljmp
pusha
std
push
add
sub
neg
in
xor
and
add
jae
loope
jl
mov
add
loop
add
insl
lret
add
insb
adc
pop
cmpsb
add
dec
gs
add
push
inc
hlt
mov
stos
add
movsl
lcall
cmp
js
push
addr16
mov
xor
int3
fistpl
mov
add
mov
add
inc
sub
dec
xor
add
add
add
fcmovne
cmpsb
add
cwtl
push
inc
or
clc
mov
xchg
les
add
shl
pop
ret
xchg
adc
jo
mov
add
mov
push
addb
fsubrs
mov
dec
push
mov
add
adc
add
mov
sub
add
add
push
add
bound
pop
shrb
jns
mov
fmuls
xchg
add
push
mov
add
ret
cltd
push
inc
xchg
dec
pop
inc
pop
sbb
dec
pop
dec
and
add
push
cmp
out
jmp
xchg
sbb
in
scas
add
icebp
out
cmpsl
lods
xor
jb
les
add
ffreep
in
sbb
mov
inc
lret
add
mov
add
je
outsl
jne
cltd
enter
daa
mov
add
add
rolb
pusha
push
sbb
jmp
hlt
xchg
xor
dec
sbb
lds
out
jo
mov
add
add
dec
pop
or
ljmp
xor
shrl
add
out
jns
and
push
push
inc
pop
dec
into
cmp
cmp
add
cld
frstor
ret
cwtl
mov
add
test
add
pushf
sub
add
lock
mov
add
push
lods
add
mov
loop
add
mov
mov
push
dec
add
icebp
pop
stos
add
cmc
pop
push
fstl
in
sbb
mov
xchg
sbb
jo
add
lahf
cmp
push
fs
add
push
mov
mov
add
add
xchg
add
dec
or
add
in
dec
and
add
pop
ret
xchg
add
dec
sbb
pop
adc
mov
dec
mov
add
or
add
ret
push
dec
divb
fcoms
fmull
test
inc
clc
fdivr
call
lods
call
stos
int3
jle
clc
jp
jg
sbb
xchg
xor
add
xor
dec
mov
cltd
repz
in
jp
sbb
pop
and
jmp
add
nop
movsb
add
dec
xchg
mov
sub
add
add
add
add
lea
push
addb
push
add
cmp
cld
movsb
add
sub
pusha
insb
adc
add
ficoms
add
inc
xlat
pop
sub
add
adc
shll
add
add
cwtl
push
mov
roll
xor
shll
jbe
lock
aas
push
arpl
xor
std
imull
outsb
out
xor
mov
add
jg
imulb
inc
push
xor
add
push
add
pop
pop
mov
add
fst
pop
loop
in
mov
add
push
popa
test
add
cmp
add
stos
xchg
add
lcall
and
add
add
add
sbb
xchg
and
add
add
xorl
add
or
add
mov
add
mov
fidivrs
aaa
fwait
pcmpeqw
mov
fiaddl
add
ficompl
imul
add
sbb
push
test
addr16
jo
dec
cmc
adc
stc
xor
add
outsl
andl
add
push
sub
add
sbb
rclb
stos
add
idiv
adc
add
sahf
xchg
jo
rclb
cmp
add
xor
mov
sbb
nop
push
test
inc
mov
xchg
out
mov
ds
lods
add
cld
out
imul
add
add
out
xchg
dec
shll
cmp
out
xchg
loopne
and
add
and
add
sbb
dec
pushf
adc
test
out
test
add
je
daa
pop
jl
sbb
jmp
xchg
bound
add
lds
and
mov
pusha
shll
sti
add
mov
or
add
add
add
push
xor
mov
mov
popf
fdivl
add
add
pop
inc
sbb
daa
mov
pushf
in
cmp
lods
add
test
add
add
and
add
pop
add
addb
cmp
add
sub
add
sub
adc
mov
movsb
add
arpl
sbb
lret
mov
add
std
ljmp
xchg
jbe
xlat
test
add
mov
out
xor
inc
mov
stos
mov
in
pop
jb
pushf
and
add
daa
outsb
stos
ja
pop
incb
add
jns
outsb
movsl
sarl
into
sub
add
sbb
mov
or
add
test
add
inc
xchg
jae
jmp
push
add
dec
movsl
mov
add
pop
scas
add
push
mov
into
and
add
icebp
repnz
add
cmpsb
add
mov
add
aad
add
fst
pusha
outsl
xor
mov
add
xor
ja
into
cmp
pop
pop
loop
add
addb
or
add
add
xor
push
sub
xchg
sbb
int
pop
pop
call
add
xor
fwait
push
add
addb
mov
add
mov
add
push
add
add
sbb
sete
add
xchg
scas
add
popf
mov
push
mov
repnz
pop
aad
hlt
jmp
push
sbb
xlat
ret
add
imul
mov
cld
inc
das
fcmovnbe
push
adc
push
mov
inc
sahf
push
mov
add
or
mov
inc
dec
pop
hlt
and
or
mov
add
cltd
jp
pop
mov
add
dec
mov
push
add
jae
add
and
add
mov
add
add
dec
jl
add
sarb
inc
mov
sub
add
add
ficoml
ljmp
add
or
add
lods
add
jo
js
aam
popf
push
aad
jne
jg
sti
lea
mov
aas
mov
xchg
add
xchg
add
out
in
in
mov
rcll
sub
add
xor
mov
add
add
mov
add
pop
jge
dec
sbb
adc
add
inc
pop
pushf
ret
and
add
add
dec
stos
add
jne
inc
pop
cmpsb
add
daa
cmp
add
addb
xchg
add
adc
inc
sar
push
add
inc
xor
and
jns
sarb
ficoml
rcl
leave
out
ss
fisttpll
add
popa
dec
or
add
imul
aaa
jno
add
addb
mov
add
cli
xor
add
jmp
add
in
imul
add
add
add
add
repz
jg
sbb
jo
lret
or
add
lds
jg
inc
add
add
pop
sub
add
mov
xchg
leave
mov
loop
fs
inc
fidivrl
in
pop
mov
loop
and
add
jae
outsb
cmp
adc
xor
cmp
mov
jle
add
inc
aad
mov
sbb
add
mov
iret
cmp
dec
fisubs
add
jns
outsl
daa
xor
out
pslld
fstps
add
add
cmp
das
scas
sbb
or
add
sahf
dec
pop
push
lods
add
mov
out
cmc
push
or
add
pop
push
addb
scas
icebp
sti
insb
inc
mov
popa
xor
cmp
icebp
xor
inc
pop
cmp
leave
popa
inc
xchg
dec
xor
inc
push
xchg
dec
jb
fs
lret
pusha
push
fildl
mov
mov
lods
fisttpll
sub
adc
add
out
xchg
add
sbb
js
cwtl
addb
pop
notb
add
enter
add
ret
and
add
mov
add
mov
ja
lcall
insl
in
add
add
ss
add
or
add
aad
ret
inc
mov
cmp
fabs
pop
cltd
mov
mov
add
fcomp
in
mov
add
dec
adc
js
and
add
xor
xchg
fs
std
jno
fcmovnbe
lret
add
xor
add
add
arpl
iret
and
add
add
inc
fadds
add
fimuls
pop
dec
shll
jb
add
mov
add
insl
arpl
pop
jg
into
fwait
mov
add
lahf
sarl
or
and
xor
insb
mov
insl
sbb
push
mov
add
cmp
jmp
mov
pop
pop
mov
add
jo
lret
iret
inc
sahf
loop
adc
add
add
repz
sub
nop
faddl
cmpsb
add
add
add
mov
mov
jecxz
dec
stos
add
and
add
add
xor
and
xor
add
push
cmpsb
add
xchg
add
and
mov
xor
mov
inc
inc
jp
xchg
lahf
pop
mov
daa
cmp
lcall
jne
and
add
lods
add
lea
add
or
sti
xchg
xor
negl
mov
dec
sub
add
mov
add
mov
add
adc
repz
mov
test
add
push
lods
add
dec
out
add
dec
ja
push
sub
push
add
loop
dec
mov
add
dec
pop
jecxz
add
cmp
xor
and
add
push
add
repnz
add
or
loope
adc
and
imul
xchg
push
push
fstpt
or
add
shll
mov
dec
stos
je
cmp
shlb
int3
add
push
add
jl
xor
add
or
add
add
rcrl
add
dec
out
xchg
je
repz
jg
leave
lret
mov
add
mov
mov
mov
add
test
add
jmp
pop
out
nop
out
repz
lea
cmp
add
sub
add
and
movsb
add
xchg
pop
cwtl
sbb
js
stc
or
add
add
or
add
and
add
loopne
add
mov
add
add
aad
mull
adc
pop
pop
lds
jo
and
mov
add
add
jnp
add
fld
push
mov
idivb
sti
imul
add
scas
scas
data16
add
lds
add
fstl
mov
in
lahf
in
ljmp
xchg
sbb
cld
xchg
mov
add
aas
mov
dec
inc
and
add
scas
cmp
xlat
xor
sbb
roll
enter
lret
add
push
imul
ficoml
popf
fisubrl
add
mov
daa
inc
fbld
add
or
and
aad
add
jle
fdiv
adc
jae
xchg
add
fstl
in
aaa
sbb
lds
add
sarb
add
sub
jle
jg
push
insb
aam
add
push
sbb
pop
addr16
jle
sub
sub
add
sti
inc
or
add
xchg
jo
sar
cmp
adc
add
mov
aad
push
fldenv
add
inc
lcall
pop
xor
add
test
test
add
test
add
add
jo
insb
mov
inc
inc
js
fdivl
mov
lret
enter
jo
in
cli
gs
add
pop
add
repnz
push
mov
into
xorl
dec
and
add
in
dec
sub
add
out
jnp
dec
lock
or
add
mov
add
mov
imul
add
add
sbb
das
adcl
sbb
aaa
push
add
push
mov
add
and
add
add
push
add
add
loope
movsb
add
add
add
add
jmp
in
rcrl
xor
insb
push
rcrb
pusha
in
addb
mov
mov
add
cmp
nop
outsl
aas
aas
rcll
add
or
add
dec
cli
mov
add
adc
das
ds
add
cmpsl
mov
imull
add
pusha
stos
cltd
xchg
xlat
cli
mov
add
add
sbb
movsb
add
lret
in
mov
inc
pushf
popa
outsb
dec
lds
lret
add
mov
mov
sub
dec
test
sub
add
add
mov
add
xchg
data16
loope
dec
jle
out
shr
into
movsb
add
fistps
add
add
sbb
mov
in
cmp
push
xor
xor
add
xor
add
sbb
popa
pop
fisubrs
push
add
dec
das
aas
mov
add
aaa
and
add
lods
add
pop
push
fucomi
out
cmpsl
fildl
sahf
cmp
shr
pop
int3
push
in
stos
inc
scas
mov
outsb
mov
imul
call
inc
ljmp
test
add
rorb
lea
xchg
outsb
jae
mov
push
add
jg
mov
pop
jo
inc
icebp
xchg
lcall
adc
add
add
pop
lds
cmp
fists
cmpsb
add
pop
pop
lds
push
cmp
sub
push
add
or
mov
subl
cli
jl
in
add
jbe
int
add
aam
add
repz
movsl
sbbl
imul
and
fdiv
inc
push
cmpsl
mov
add
xchg
dec
pop
into
arpl
in
xor
popa
push
push
add
add
add
aaa
adc
inc
jo
arpl
push
add
out
xlat
ret
inc
hlt
vmptrld
add
mov
mov
push
ret
jl
add
cld
scas
dec
push
loope
and
add
cmp
jne
jecxz
in
ret
push
outsb
or
add
arpl
add
add
loope
fdivs
outsl
test
add
int
cmp
add
icebp
test
and
push
add
fwait
and
add
dec
std
pop
negl
fwait
add
pop
mov
or
das
in
arpl
add
mov
fiaddl
in
sahf
xchg
add
addb
jno
cwtl
dec
jecxz
add
adc
cld
mov
xorl
add
cli
mov
add
dec
insb
mov
cmp
imul
cmpsl
push
mov
mov
out
pusha
jno
outsl
mov
push
das
jmp
jmp
add
inc
add
add
or
add
outsb
mov
scas
and
dec
leave
pop
sbb
in
jae
add
in
sbb
add
add
mov
add
mov
push
rclb
dec
inc
icebp
sbb
add
adc
lret
lcall
mov
cmp
xor
mov
aam
mov
adc
add
lahf
sbb
jns
add
testl
jo
push
xor
pop
jecxz
lret
adc
adc
add
add
jmp
add
xor
lret
lret
rorb
add
xlat
jns
sbb
pop
add
mov
mov
add
pop
push
add
cmpsl
imul
mov
pop
lea
add
int
jecxz
movsb
add
push
mov
cld
and
add
inc
mov
or
add
add
add
lds
inc
test
add
add
push
pop
dec
mov
dec
pop
bound
fnsave
xchg
les
sbb
add
popa
ss
rcr
fxch
int
add
pop
movsb
add
mov
pop
addb
pop
daa
sbb
mov
scas
add
mov
pop
pop
test
add
dec
add
imul
xchg
pop
or
add
add
fcmovnu
aaa
adc
repnz
add
jno
cltd
sbb
arpl
mov
aam
mov
add
dec
add
mov
add
sbb
dec
cmp
inc
dec
mov
and
add
subl
xlat
mov
xchg
jae
test
cmp
nop
adc
iret
enter
movl
icebp
aas
inc
cmpsl
add
inc
imul
jecxz
jecxz
or
add
cmc
sahf
jle
add
mov
add
add
xchg
jge
inc
int3
shr
in
loope
xor
add
mov
xlat
sub
add
push
sahf
push
jae
xchg
mulb
add
xor
fidivs
mov
add
loope
hlt
dec
int
sarb
ret
mov
sub
add
addr16
push
push
fisubs
sahf
test
gs
xchg
mov
sbb
cmp
jb
mov
add
dec
lret
cwtl
push
jo
repz
add
sbb
cmp
movsb
add
sub
lahf
aas
pop
and
sti
fcompl
add
add
dec
xchg
into
inc
popf
aaa
jecxz
shll
leave
mov
imul
add
mov
adc
add
fiaddl
add
out
into
hlt
aad
addb
pop
in
add
nop
add
add
jp
insb
scas
pop
in
mov
lcall
bound
or
add
daa
stc
outsl
push
add
jb
sub
add
pop
push
add
push
pop
mov
mov
int3
dec
test
add
test
add
add
mov
or
add
add
movsb
add
mov
insl
lcall
and
add
test
je
add
mov
push
incl
in
int
movsb
add
stc
aad
xor
inc
lahf
rorl
push
pop
xchg
cmpsb
add
mov
enter
push
addb
dec
subl
add
add
inc
inc
fcomp
js
xor
pop
repnz
add
pop
imul
push
iret
mov
add
pop
mov
cmpsl
jne
mov
lret
mull
cmp
sub
lcall
pushf
aam
and
add
dec
jl
add
icebp
mov
dec
xor
pop
xchg
add
dec
fdivs
out
or
add
add
pop
cmpsl
fcompl
addl
add
push
add
test
repz
dec
jg
fsubrp
rorb
add
add
sbb
rorl
push
add
dec
jbe
sub
mov
push
je
lods
add
rolb
insb
jl
bswap
outsl
in
xor
std
lods
add
jo
test
sarl
fcoms
xchg
add
xchg
stos
xchg
addb
adc
add
mov
dec
jne
nop
inc
lret
mov
add
cmp
add
shll
enter
add
fimull
push
mov
inc
mov
add
pusha
lret
das
inc
cmp
push
mov
jmp
cmp
lock
fisubs
add
cld
dec
das
divb
dec
and
add
add
loop
push
and
fsts
add
xchg
add
jae
lock
jbe
dec
push
inc
mov
and
add
stc
mov
inc
in
cltd
xchg
or
enter
push
xchg
int
pusha
push
add
repz
sub
add
sub
add
add
scas
add
popa
in
sub
add
gs
addb
jp
add
movsb
add
mov
add
pop
ret
push
stos
cmp
xor
decl
or
mov
and
add
dec
test
into
jge
add
arpl
add
mov
mov
add
dec
mov
lcall
into
mov
add
dec
js
hlt
cmp
add
pop
cmpsb
add
sbb
sub
add
and
insl
add
add
call
movsb
add
dec
ja
rcl
push
xor
and
push
out
mov
add
add
add
add
push
add
movsl
into
cmp
jnp
mov
pop
jmp
add
ds
rclb
lods
add
mov
enter
add
mov
mov
daa
mov
fidivrs
into
rolb
inc
fidivrl
lods
add
mov
add
ljmp
adc
cwtl
fbstp
push
shl
rolb
aam
jg
mov
imul
cmp
add
fs
push
pop
scas
add
std
mov
add
pop
movsb
add
push
add
fdivrl
xchg
sbb
repz
lds
dec
xchg
pop
addb
add
jge
xchg
bound
stc
sbb
sbb
test
add
orl
add
sahf
mov
add
ja
loop
aas
out
pop
add
add
and
pop
mov
add
push
adc
push
bswap
jl,pt
adc
int
pop
ds
out
mov
push
stos
aas
repz
and
ret
sub
add
repnz
lcall
add
imul
psrld
adc
mov
add
cmp
pop
out
out
in
cmpsl
je
hlt
pop
inc
inc
cmp
mov
add
push
add
jecxz
movsl
inc
iret
xchg
call
popa
jmp
mov
add
mov
and
add
addr16
and
add
xchg
xlat
jne
test
add
push
add
push
lret
pusha
xchg
stos
add
mov
add
add
push
scas
add
out
je
push
fcomi
aas
push
sti
sub
add
add
mov
mov
add
out
jmp
test
jge
push
das
fnsave
dec
addb
mov
cltd
cmp
cmp
lcall
pop
inc
lds
sbb
sahf
or
fcomi
inc
jmp
repz
or
jae
shlb
mov
xchg
popl
lods
mov
add
cmp
and
add
movq
movsb
add
adc
inc
mov
xchg
and
fistps
out
adc
daa
ficomps
shl
loopne
add
jbe
lret
sar
in
sbb
mov
add
and
jmp
jns
push
test
add
add
stos
or
add
shr
test
fwait
imul
fistpll
mov
jle
imul
and
add
jnp
or
add
loope
popa
out
push
add
cwtl
cltd
lcall
add
mov
sub
mov
add
and
add
mov
cmp
and
push
add
movsb
add
test
add
ret
lds
fnstenv
stc
xor
mov
sub
add
push
mov
lods
push
and
add
aas
test
in
jp
sti
fsubs
xor
cmc
jno
ljmp
add
rcl
loope
add
ljmp
jg
add
dec
enter
add
dec
fsubs
add
lcall
pop
or
dec
mov
add
cmc
movl
outsl
mov
int
fs
dec
inc
cmc
outsb
xchg
jno
lret
subl
cld
cmp
add
cmpsb
add
add
test
mov
xchg
mov
negl
gs
add
into
add
add
jo
add
sbb
movsl
lahf
popa
xchg
add
xchg
inc
addr16
stos
add
jg
lret
je
lahf
push
jb
or
add
cltd
jecxz
push
movsb
add
pop
push
lahf
add
repz
in
pusha
mov
mov
dec
stos
add
leave
xor
mov
add
adc
aaa
pop
dec
jmp
shrl
add
outsl
js
and
add
xchg
pop
mov
outsb
add
add
add
mov
in
cmp
add
push
add
loop
movsl
cmpsl
jnp
stos
shll
jo
pop
inc
fisttps
pushw
add
pusha
notb
mov
addb
adc
loope
std
int3
cmp
and
add
lds
xlat
adc
jae
mov
out
dec
iret
out
push
add
cmp
push
or
add
add
outsl
mov
inc
movsb
add
xor
ret
sub
add
imul
outsb
jle
inc
stos
push
mov
add
repnz
xor
aad
adc
rol
aas
sbb
push
out
add
add
js
add
test
pop
mov
daa
jmp
call
repz
pop
inc
lcall
call
pop
ret
fnstenv
xchg
pop
mov
sbb
sbb
inc
pop
hlt
inc
cmpsb
add
fsubp
jle
nop
fsubl
adcl
sahf
sbb
adc
lret
fsubrl
dec
jl
push
add
pushf
pxor
shr
xchg
addb
call
and
add
add
add
enter
lret
add
add
rol
cmp
xor
add
outsl
pop
mov
push
mov
add
xchg
cmp
push
push
xchg
push
add
mov
sub
push
push
xor
mov
push
add
mov
add
xor
pop
push
icebp
jne
ret
xchg
adc
pop
stc
inc
sub
dec
mov
inc
aam
add
call
in
fld
and
movsb
add
sbb
test
arpl
xrelease
add
out
fs
pop
cltd
xchg
sub
add
ds
test
add
shlb
popa
add
xchg
mov
add
inc
push
add
out
cmp
pop
jbe
jbe
ret
stc
dec
add
add
popf
ljmp
mov
stos
add
add
add
std
lods
add
push
add
add
loopne
ss
xor
xor
add
push
mov
add
mov
add
dec
add
add
add
jo
sbb
and
add
test
repz
jmp
mov
add
or
pop
pushl
add
dec
cmpsb
add
mov
js
push
ss
xchg
add
inc
jl
cmpsb
add
add
xor
mov
and
add
push
add
mov
inc
adc
pop
mov
jo
sbb
popf
push
mov
mov
sub
add
mov
add
aaa
ret
inc
add
xor
add
ja
push
pop
test
add
lcall
xor
imul
or
add
add
lods
cwtl
cmp
jp
fnstenv
iret
xchg
add
test
xor
out
or
add
cmp
add
inc
cmc
dec
ror
sbb
or
inc
and
fnsave
test
add
push
add
lods
add
cmp
rorl
push
pop
sbb
mov
in
or
inc
mov
add
push
clc
push
outsl
xor
mov
leave
ficompl
stos
add
mov
add
movsb
add
and
add
shrl
mov
add
cmpsb
add
jp
mov
popf
ds
sub
add
ficompl
add
das
test
add
pop
pop
stos
mov
cmp
mov
add
mov
add
fcoml
jle
pusha
xor
add
add
jge
lock
or
add
push
add
or
sbb
add
mov
sub
add
xchg
test
add
xor
dec
mov
add
cmp
bound
sub
in
add
mul
jb
xor
xchg
dec
sub
add
incb
inc
out
jno
sub
add
enter
mov
mov
imul
push
clc
or
mov
mov
jbe
push
xlat
mov
jbe
cld
cmpsb
add
je
std
mov
add
jbe
rcrl
fcmovbe
sub
add
sbb
add
cmp
cmpsb
add
inc
xor
push
add
shll
add
stos
mov
pop
fbld
sbb
fstp
inc
jb
jno
pop
addb
inc
sbbl
inc
aad
test
add
add
push
les
sbb
dec
mov
inc
iret
or
add
lret
iret
std
or
add
jge
xor
adc
cmpsl
push
add
xor
xor
mov
loope
add
mov
mov
testb
mov
add
jo
or
jmp
mov
je
rcr
pop
test
clc
add
pusha
imul
xchg
jmp
out
fldcw
add
fcomip
push
mov
add
add
test
add
push
sete
add
cli
jnp
jbe
aam
fcmovnb
dec
xor
cwtl
outsl
push
jnp
int3
push
mov
jne
sarb
adc
pop
sbb
cmp
cmpsl
arpl
add
out
xchg
push
mov
mov
mov
xor
mov
pop
movsb
add
lds
add
test
add
pop
mov
aaa
or
and
add
fbld
add
jg
test
jge
enter
inc
and
add
mov
add
add
aad
out
dec
dec
sub
add
addb
xlat
stc
arpl
add
clc
push
push
cmc
mov
lahf
xor
iret
call
add
add
xchg
xchg
xlat
inc
cmp
push
cmp
add
repz
add
pop
and
lcall
pop
pcmpeqd
cmpsb
add
lock
shrb
add
xor
dec
dec
sbb
adc
fdivr
jae
jmp
insb
cld
mov
xchg
dec
add
sub
ds
pop
pop
jg
and
in
xchg
push
outsb
outsb
cmc
lods
add
sti
cli
cmp
call
inc
mov
addr16
pop
jno
adc
adc
jnp
add
xor
mov
push
hlt
xor
jno
add
xor
arpl
lods
cmp
sub
add
add
clc
cltd
fucomi
jno
add
cmp
in
add
mov
mov
enter
add
pop
jno
inc
imul
scas
add
int3
push
in
popf
add
add
sbb
clc
push
cmpsl
mov
add
repnz
cmpsb
add
std
loope
addb
pop
repnz
mov
dec
and
add
mov
movsl
cmp
sub
add
jno
add
pop
inc
jae
or
js
mov
add
mov
test
add
and
mov
and
push
adc
inc
lret
jge
inc
lods
loop
add
cmovb
mov
push
add
std
popa
mov
add
mov
outsl
icebp
sub
add
add
lods
xor
xchg
lods
add
outsb
hlt
pushl
cld
xor
inc
outsl
adc
jmp
jo
push
mov
lahf
mov
add
je
add
mov
cltd
out
dec
xchg
xor
jno
movsb
add
pop
dec
jb
stos
dec
add
jecxz
sbb
ret
ret
cwtl
shll
add
fptan
mov
mov
imul
xchg
dec
inc
lcall
push
lods
and
add
xchg
push
cmp
add
loope
xor
add
add
jne
push
inc
inc
push
fsubr
push
insb
bound
jecxz
and
add
add
sub
add
mov
int
fcom
jp
add
sub
cmc
cltd
ret
lods
add
or
xchg
xchg
jecxz
lock
push
sbb
add
push
jmp
add
imul
add
xchg
add
add
jnp
jmp
add
sbb
and
add
dec
mov
add
int3
stc
cld
pop
jl
inc
dec
inc
out
add
push
adc
add
and
add
inc
les
adc
sbb
in
insb
arpl
dec
xchg
add
ljmp
jns
das
out
inc
leave
adc
movsb
add
push
add
scas
add
adc
je
add
inc
rcll
xchg
sbb
insl
insb
ljmp
jge
cmp
add
fists
paddw
push
add
cmpsb
add
sub
test
dec
inc
lret
push
add
addb
pusha
jns
sub
mov
add
stc
push
sub
add
inc
xchg
sbb
add
sub
add
sub
add
mov
add
scas
add
hlt
fcomps
push
insb
xchg
movq
add
rcll
roll
test
add
xchg
add
mov
in
aas
push
pusha
arpl
xor
mov
adc
lock
dec
mov
rcrb
fadds
data16
add
fcmovnbe
in
mov
mov
add
pop
jle
adc
sub
mov
jmp
inc
xchg
test
fdivrs
fwait
sub
add
ljmp
lcall
cwtl
xchg
adc
dec
out
mov
add
push
outsb
icebp
xlat
dec
cli
insb
cmp
push
xchg
mov
je
or
add
push
shll
xchg
scas
add
test
add
cmp
dec
pop
push
add
xlat
loope
lret
sarl
cld
mov
inc
sahf
stc
fcomps
lock
mov
add
cld
pop
sbb
popa
movsb
add
jne
aaa
std
addb
push
or
add
add
adc
add
cld
loope
add
in
pop
mov
dec
and
mov
ss
mov
add
mov
add
mov
push
xchg
rorb
add
xor
xchg
addb
jmp
pusha
fstps
sub
add
imul
add
ds
inc
xchg
add
xlat
int3
mov
xor
add
xchg
push
jl
xchg
add
add
out
bound
pop
loope
ror
ss
mov
pop
fs
int3
clc
add
add
push
add
jno
ds
push
jbe
push
jb
mov
dec
sub
add
call
mov
add
lahf
cmp
add
test
add
fwait
test
bound
inc
outsb
movsb
add
ja
adc
add
jbe
scas
add
rol
sub
add
mulb
call
add
dec
outsl
sub
add
aas
jge
mov
add
jle
cmp
sti
pop
shll
out
js
jne
pop
sbb
xchg
adc
outsb
dec
lahf
fsubrs
pop
inc
stos
add
adc
inc
xchg
jo
decb
inc
inc
loope
icebp
mov
sbb
pop
sahf
fstpt
xor
shrl
add
das
pop
mov
mov
add
push
adc
mov
push
mov
sub
popf
lea
scas
add
push
add
pop
addb
rorl
stc
daa
insl
add
shll
inc
rol
repnz
sti
cmp
cwtl
ss
mov
add
add
ss
mov
add
dec
inc
scas
add
dec
lds
jp
dec
in
push
or
add
hlt
fstpt
int
fstpt
add
jne
repz
mov
add
mov
sub
add
or
add
bound
cmpsb
add
inc
xchg
add
arpl
add
xlat
sarl
inc
cmp
add
add
add
dec
jns
pop
mov
mov
add
in
inc
ljmp
mov
dec
sahf
dec
fldl
mov
add
xchg
inc
rclb
jp
daa
cmpsb
add
mov
insb
sub
add
inc
filds
pop
mov
add
mov
fstp
in
notb
shlb
jp
iret
mov
add
push
or
add
jmp
cmpsb
add
pop
mov
xchg
movb
sbb
sub
add
push
mov
cmp
add
cli
mov
add
loopne
cltd
sarb
mov
movsb
add
jp
mov
add
fnstsw
cmc
leave
pop
jne
add
and
add
add
insl
sahf
sbb
jl
jmp
push
into
inc
xchg
or
add
mov
daa
insl
add
lock
cmp
fiadds
nop
outsb
lcall
test
lret
cmp
rol
cmpsb
add
and
add
xchg
outsb
mov
dec
push
pop
ret
loop
pop
or
add
das
mov
lahf
mov
add
mov
and
add
mov
mov
add
test
fisubl
mov
test
scas
add
in
sbb
loopne
and
add
mov
lfs
add
repz
outsb
xchg
les
push
lcall
push
les
call
int
add
add
scas
add
std
movsb
add
lret
add
add
les
push
jge
xchg
add
add
gs
shlb
add
sub
add
dec
mov
ficomps
sbb
and
add
iret
lcall
add
dec
ret
arpl
sahf
daa
or
add
push
jmp
popf
adc
xor
add
and
add
jne
add
sbb
nop
pop
outsl
jb
xchg
add
fwait
cmpsl
sub
shrb
movsb
add
out
add
ret
add
inc
repnz
add
scas
add
out
cmpsl
outsl
push
addb
and
adc
pop
add
repz
hlt
xchg
add
pop
test
sbb
jecxz
repnz
and
cmp
rol
push
mov
test
imul
sub
add
sub
add
xchg
add
mov
add
pop
ret
addb
pop
dec
lods
add
cmpsb
add
cmp
cmp
int3
mov
iret
or
addb
cmpsl
sbb
div
inc
scas
add
aaa
stos
adc
notl
xor
mov
add
mov
in
add
add
mov
xchg
lcall
cli
sub
add
mov
movsl
cld
and
add
add
xor
add
loopne
fsubrs
add
cmp
jecxz
adc
sbb
add
out
in
sub
add
push
mov
add
add
cmp
cwtl
xchg
mov
fwait
incl
hlt
dec
mov
and
push
inc
sarb
inc
fucompp
lret
inc
jmp
js
add
cmp
shr
mov
inc
les
leave
out
cmp
add
frstor
aaa
aaa
jne
add
lds
add
mov
push
sub
add
fdivs
stos
add
xor
adc
jmp
fidivrl
pop
pop
jp
xor
add
mov
test
add
add
aas
push
push
ret
cmpsl
sub
add
add
adc
jge
xchg
popf
or
inc
jp,pt
je
lcall
aam
mov
ficomps
xchg
push
cltd
sub
add
cmpsl
sbb
mov
lock
add
add
cmp
mov
add
scas
lods
sub
fwait
inc
pop
shll
gs
in
jp
fidivrl
xchg
sbb
mov
test
sti
fadd
mov
jg
sub
leave
mov
add
enter
cmp
leave
jae
iret
push
call
insl
fwait
loope
mov
push
out
lahf
je
xchg
mov
fisubrs
mov
adc
stc
fistps
clc
push
add
or
das
or
sarb
adcl
js
add
mov
orl
add
mov
mov
pusha
jmp
jle
add
push
dec
cmp
dec
movsb
add
and
add
pop
xor
inc
or
add
mov
test
add
adc
push
add
add
sub
add
rcll
mov
mov
push
js
fwait
dec
ret
mov
add
mov
hlt
in
jno
jl
stc
data16
repnz
jecxz
adc
into
shlb
pop
add
jle
sbb
mov
jns
movsb
add
stc
into
fcmovnu
aad
aaa
in
jge
adc
add
lcall
add
push
in
inc
mov
add
cmp
int3
mov
pop
pop
or
sar
jb
add
inc
out
sbb
lcall
mov
xor
sbb
add
in
add
fnsave
add
add
repnz
sub
add
jb
pop
sub
add
ja
pop
inc
test
add
aaa
packssdw
add
rcrl
jno
gs
add
movsl
lret
mov
fistl
clc
sbb
push
add
bound
lock
fwait
into
dec
push
inc
iret
ds
imul
xchg
outsl
mov
add
push
mov
sarl
xor
aam
pop
mov
and
mov
stos
add
les
ja
add
jecxz
xor
in
int3
adc
add
rorb
sarl
sbb
call
sub
push
add
sub
hlt
lods
and
add
xchg
movsl
iret
out
int
mov
add
add
and
add
add
jnp
push
add
jbe
or
add
adc
push
daa
mov
ds
add
push
pop
outsl
inc
jle
pop
pop
xor
push
adc
dec
pop
mov
clc
adc
add
sub
jg
test
mov
add
lds
or
add
cmpsl
rcr
in
pop
push
mov
adc
cld
lahf
and
add
add
xchg
adc
add
sub
add
xor
jo
loopne
dec
int
test
add
sub
sbb
mov
push
xchg
mov
add
inc
cltd
and
add
lret
ficomps
add
jecxz
cmpsb
add
push
inc
movsb
add
mov
inc
arpl
add
jno
test
add
add
jnp
jno
cmp
ja
pusha
xlat
bnd
lret
leave
jae
lock
add
xor
add
sub
add
mov
add
ja
add
leavew
fwait
lahf
mov
scas
cwtl
jno
push
fisttpll
pusha
sub
hlt
adc
add
and
add
shll
ficoml
add
pop
bound
ja
jmp
popf
popf
xor
test
adc
xchg
pop
lret
mov
inc
pop
mov
add
inc
repz
adc
xor
repz
jge
repnz
add
pop
mov
stos
add
ja
mov
add
mov
in
mov
sbb
lods
add
add
add
add
rcll
cltd
pop
cmp
test
add
pop
add
roll
xchg
pop
add
add
adc
ja
out
adc
mov
jnp
xchg
add
and
add
xchg
adc
imul
mov
cmp
add
fdivrl
cmp
add
mov
fisubrs
movsl
dec
shl
add
popa
neg
cmp
add
movsb
add
cli
sahf
test
add
pop
dec
mull
add
dec
js
cmp
pop
stc
sub
add
xchg
les
add
add
mov
add
pop
imul
outsl
mov
add
add
leave
add
add
jb
mov
add
adc
roll
add
xor
add
out
in
adc
and
sub
add
js
aaa
mov
in
jp
add
lock
mov
cmp
jbe
leave
addb
and
in
sbb
jecxz
push
nop
xor
add
sbb
lret
mov
aad
sub
add
movb
loope
add
sub
jae
cmp
xlat
out
pop
aam
or
mov
and
add
jmp
mov
add
rclb
adc
popf
sbb
adc
shll
add
add
pushl
cli
mov
add
cltd
add
add
pop
out
sbb
insb
insb
fldl
push
ret
adc
mov
add
add
add
add
dec
inc
rcl
dec
cmpsl
mov
movsl
add
les
mov
mov
sbb
sbbl
fs
add
add
add
incb
inc
stos
outsb
clc
mov
leave
add
pop
into
repz
and
ja
test
out
subl
add
orl
mov
mov
andl
pop
mov
rcl
sub
add
lret
mov
outsl
into
out
lock
and
cltd
jne
cli
lret
or
add
les
stc
fistpl
add
fcmovne
jno
add
xchg
add
add
xor
and
add
out
mov
add
loop
push
fmull
mov
into
xor
jbe
hlt
mov
add
push
gs
mov
fistpll
add
lcall
inc
fwait
and
add
test
add
lahf
add
add
add
add
add
mov
add
lock
mov
add
cwtl
xor
add
outsb
push
xor
pop
mov
sub
add
inc
ja
add
adc
pop
mov
add
shlb
sub
add
add
sub
push
xchg
dec
mov
add
ss
lret
rclb
out
xor
test
add
mov
add
sbb
add
inc
inc
add
mov
clc
push
addb
mulb
or
add
adc
add
jne
ret
pop
and
push
addb
sub
add
pop
sub
mov
lods
add
and
add
stc
into
xchg
mov
pop
lret
lahf
outsb
mov
cltd
push
jbe
xor
add
and
lds
jl
psubw
inc
xlat
xchg
jne
fisubrl
ret
or
add
loope
add
mov
add
pop
lods
test
add
ljmp
push
mov
pop
mov
inc
sbb
add
iret
je
cmpsb
add
cld
ds
xor
or
push
pop
cli
and
sub
rcll
outsb
addb
sbb
dec
fidivs
bound
and
add
cwtl
popa
cmp
in
pop
and
add
stos
add
fdivrl
out
jnp
mov
leave
xchg
popa
dec
call
stos
cmp
movsb
add
cltd
in
xchg
in
jmp
dec
and
add
lret
add
dec
or
add
lods
add
pop
adc
xor
push
fnstsw
mov
sahf
sub
add
in
shrb
add
inc
popa
ss
out
mov
fdivrs
enter
add
aam
fists
aaa
sub
add
jg
cmp
fadds
dec
arpl
add
add
shl
fimull
add
add
int
clc
leave
push
out
je
fnsave
popa
adc
sbb
cmpsb
add
mov
inc
sbb
imulb
stos
xor
xchg
xchg
add
add
inc
shr
mov
test
xchg
out
sbb
add
mov
pop
inc
lret
add
add
sub
add
clc
outsb
les
pop
and
add
pop
addb
in
outsl
mov
in
jnp
cld
adc
fst
in
inc
sbb
add
aaa
rclb
add
les
or
js
add
dec
jmp
and
popa
or
add
jge
repz
add
add
lods
inc
jl
icebp
int
add
sbb
ljmp
add
jp
add
sbb
and
add
add
add
add
loopne
lret
dec
jge
sbb
add
pop
and
add
and
daa
test
outsb
loopne
movsb
add
xor
jae
dec
adc
cmp
daa
jecxz
fnstcw
ss
daa
roll
add
cwtl
inc
pop
sbb
xchg
inc
cli
aad
and
add
inc
push
mov
cmp
int3
and
xor
xchg
jbe
adc
mov
jecxz
mov
out
std
pop
cmp
stos
add
mov
mov
add
pop
dec
cmpsl
push
add
shrl
add
adc
add
in
mov
mov
jle
adc
fbstp
mov
add
adc
add
