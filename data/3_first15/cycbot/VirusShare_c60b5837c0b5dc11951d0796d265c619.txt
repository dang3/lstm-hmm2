data16
mov
data16
data16
data16
data16
data16
data16
data16
jg
data16
data16
data16
data16
data16
data16
data16
data16
data16
mov
data16
data16
in
data16
data16
fwait
fwait
fwait
fwait
data16
std
std
data16
data16
data16
loop
cmp
push
data16
data16
mov
data16
data16
xor
data16
andb
data16
int
data16
data16
data16
inc
inc
data16
mov
data16
data16
data16
data16
data16
data16
data16
jbe
data16
pcmpgtd
data16
data16
data16
data16
icebp
data16
data16
data16
data16
dec
dec
dec
data16
mov
data16
data16
data16
data16
data16
data16
push
dec
data16
data16
add
xchg
data16
xchg
data16
data16
data16
data16
stc
data16
cwtd
cltd
data16
cmpsb
data16
data16
data16
loopne
data16
add
data16
data16
lcall
cmc
data16
push
data16
data16
mov
data16
push
data16
data16
data16
mov
data16
daa
daa
data16
xchg
loopne
data16
data16
dec
retw
pushw
data16
data16
data16
data16
data16
sti
data16
data16
mov
data16
data16
dec
dec
dec
data16
out
out
add
data16
insw
insl
insl
insl
data16
shlb
data16
lods
data16
data16
data16
data16
data16
data16
data16
pushw
data16
data16
data16
data16
data16
data16
into
data16
data16
data16
mov
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
lea
data16
data16
data16
sub
sub
data16
data16
mov
mov
data16
data16
data16
mov
data16
data16
data16
or
pop
pop
pop
data16
data16
fs
data16
data16
data16
data16
data16
dec
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
stos
stos
inc
popw
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
mov
movsl
movsl
data16
add
data16
data16
data16
data16
sti
sti
data16
data16
data16
data16
data16
data16
data16
data16
sub
data16
data16
data16
data16
data16
jne
ret
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
pop
pop
data16
pop
pop
data16
data16
data16
data16
data16
push
push
data16
data16
data16
data16
dec
data16
data16
push
push
push
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
push
data16
data16
loop
data16
data16
data16
add
data16
data16
callw
data16
data16
data16
pushw
popw
pop
data16
data16
data16
data16
data16
data16
dec
data16
data16
data16
data16
data16
data16
fwait
fwait
fwait
les
pop
xchg
xchg
xchg
data16
pop
mov
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
jns
data16
push
push
xchg
data16
data16
mov
data16
data16
data16
data16
xor
data16
data16
data16
data16
data16
data16
data16
data16
sub
data16
data16
data16
data16
data16
data16
sti
data16
data16
movsb
sub
data16
jge
data16
data16
data16
data16
lahf
data16
outsl
outsl
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
push
push
push
mov
in
in
data16
data16
data16
cmc
data16
leave
leave
leave
insb
data16
data16
data16
mov
data16
data16
data16
data16
sub
data16
cmp
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
data16
inc
data16
data16
data16
data16
insb
data16
data16
data16
data16
push
data16
into
into
push
data16
data16
data16
hlt
data16
data16
push
data16
data16
data16
data16
data16
data16
data16
nop
nop
data16
data16
data16
data16
data16
data16
data16
data16
inc
jns
data16
mov
data16
data16
data16
data16
data16
data16
data16
data16
push
data16
mov
data16
data16
data16
data16
data16
or
or
rcl
shll
data16
data16
xchg
data16
data16
data16
data16
data16
data16
data16
jecxz
jecxz
data16
sub
data16
data16
hlt
data16
data16
data16
data16
insl
data16
inc
data16
data16
jl
data16
data16
data16
shll
data16
data16
data16
cmpsb
data16
data16
data16
data16
data16
data16
data16
adc
data16
data16
data16
data16
mov
data16
in
data16
data16
ret
data16
mov
data16
data16
data16
data16
data16
data16
data16
data16
data16
lods
data16
data16
aas
data16
data16
adc
vpcmpgtd
data16
data16
data16
data16
data16
push
push
data16
data16
ret
ret
data16
data16
data16
data16
data16
data16
data16
pcmpgtd
data16
jo
data16
insb
data16
les
data16
data16
data16
out
out
out
data16
data16
data16
data16
data16
les
data16
data16
data16
push
push
data16
data16
data16
data16
data16
data16
and
and
data16
data16
data16
data16
frstor
jmp
data16
or
data16
data16
data16
data16
data16
mov
data16
mull
data16
data16
data16
push
data16
data16
andb
data16
in
data16
data16
data16
les
data16
data16
js
data16
add
data16
data16
data16
xchg
data16
data16
push
data16
das
data16
data16
data16
data16
data16
data16
data16
jns
jns
data16
data16
data16
pop
pop
pop
pop
pop
data16
data16
data16
xor
data16
data16
data16
data16
data16
data16
xchg
data16
in
in
data16
adc
data16
data16
data16
data16
data16
data16
data16
inc
inc
inc
data16
mov
data16
data16
data16
push
data16
data16
popa
popa
data16
data16
data16
data16
data16
data16
data16
data16
fisubl
data16
dec
data16
data16
data16
data16
data16
data16
push
data16
data16
data16
fisubl
data16
data16
data16
data16
data16
mov
popw
data16
data16
scas
data16
data16
cli
data16
or
data16
push
testb
xchg
aam
inc
push
ret
addr16
ret
mov
aad
stos
inc
out
mov
pop
dec
cmp
adc
inc
mov
or
ret
dec
ret
mov
xchg
int
cmp
test
icebp
enter
jbe
aad
ret
jnp
out
jnp
push
lahf
repz
nop
addb
mov
mov
ret
mov
mov
cli
cmpsb
sti
mov
jnp
test
lds
jnp
frstor
in
sti
loop
fsubrs
into
and
mov
inc
mov
mov
jmp
aad
in
mov
aad
out
call
add
out
call
gs
lcall
xchg
dec
inc
ret
adc
hlt
addr16
lds
xchg
scas
mov
repz
mov
pop
fists
rcrl
mov
imul
xchg
repz
mov
cmc
ret
sub
ret
mov
js
push
inc
jge
test
outsb
jl
dec
inc
ret
mov
mov
aaa
testb
insl
jae
ja
out
dec
ret
pop
mov
add
cltd
mov
in
push
push
icebp
or
and
mov
and
mov
jns
mov
rorb
dec
ret
adc
xor
mov
push
dec
ret
mov
adc
cmpl
out
outsb
push
jge
out
test
les
mov
xor
lret
or
test
inc
ret
pushf
jns
push
mov
dec
xor
sbbb
stos
ror
pop
bound
sub
mov
push
outsb
mov
insb
ret
mov
adc
inc
push
sbb
cmp
jnp
ret
mov
ficoms
jmp
ret
repz
ret
mov
add
and
mov
push
pop
hlt
sub
bound
xor
rcrl
adc
sbb
adc
int3
xor
imul
sub
fs
mov
add
outsb
sahf
mov
xor
add
pushf
inc
scas
test
addr16
mov
inc
jle
int3
iret
cltd
and
inc
pushf
jne
jmp
xchg
sti
jne
ret
scas
add
adc
in
clc
sysret
adc
jp
mov
cmp
ret
jp
sbb
ret
mov
je
mov
mov
into
xchg
xor
insb
ret
mov
cmp
cmpsb
mov
jle
cltd
and
mov
test
pop
loopne
xor
xor
icebp
test
mov
add
pushf
mov
adc
fildl
nop
movsb
ja
xchg
xchg
jns
cmpsb
aad
sbb
pusha
ret
jge
ret
mov
stos
xor
shlb
jae
push
or
mov
add
push
xchg
sub
add
mov
subl
push
add
repz
sub
pop
sbb
mov
ret
mov
aad
xchg
inc
jne
mov
sbb
ret
mov
cltd
jl
and
dec
rorl
js
test
jo
outsl
xchg
orl
adc
or
ret
dec
ret
incb
ret
ret
jl
adc
adc
jns
ret
cmp
ret
std
les
addr16
xchg
ret
or
outsb
mov
shl
xchg
cmpb
xor
lret
call
xchg
cmpb
jbe
inc
add
mov
jg
scas
jl
xchg
mov
mov
in
dec
ud2
ja
loop
in
lods
mov
adc
cmpsb
out
sahf
pop
movsb
mov
xchg
xor
xchg
jecxz
or
mov
pushf
arpl
mov
mov
adc
ja
movsl
mov
pop
add
push
mov
std
fidivrs
inc
xchg
flds
jp
mov
xor
mov
sub
mov
aaa
repnz
inc
testb
add
or
add
sti
pop
leave
sub
mov
js
negl
ret
mov
lds
clc
sub
ret
mov
cli
or
mov
ret
mov
ret
mov
add
jo
test
ret
mov
ja
fnstsw
lret
adc
and
mov
ret
sub
mov
jns
mov
xchg
dec
ds
out
std
xchg
cs
xchg
fildl
sub
mov
daa
jp
out
mov
pop
into
insl
jg
out
cwtl
and
ret
addr16
push
test
mov
cmp
mov
ljmp
iret
lea
adcl
bound
mov
inc
ret
mov
mov
jle
add
mov
fwait
mov
dec
aaa
sahf
xor
dec
aad
lcall
pop
iret
pushf
inc
ret
mov
mov
int3
cmp
xchg
out
ja
mov
pop
cli
ds
dec
ret
xchg
shlb
jno
js
aam
mov
enter
mov
cmp
mov
inc
leave
mov
pop
xchg
jg
mov
mov
nop
jg
ret
mov
cmp
daa
push
imul
jmp
push
clc
mov
mov
push
movsb
push
mov
mov
in
mov
mov
addr16
mov
sbb
jo
lret
jp
or
mov
mov
mov
sbb
aaa
and
mov
enter
mov
adc
imul
mov
stos
out
imul
xchg
sahf
jno
pop
jns
fdivs
cld
xor
add
mov
hlt
cmp
pusha
ret
mov
shlb
ret
dec
ret
mov
subl
jne
jno
pusha
ret
mov
stc
cltd
je
xlat
aam
arpl
mov
pusha
ret
ljmp
mul
lods
add
mov
sahf
into
sbb
mov
add
adc
cs
nop
mov
push
gs
daa
xor
out
aad
xchg
add
sbb
jge
das
cmp
and
mov
pop
aaa
pop
xchg
mov
ror
add
mov
ret
mov
fs
mov
xchg
push
inc
jae
ret
mov
inc
hlt
rorb
add
or
in
pop
add
mov
xor
adc
sub
lods
cs
adc
inc
popa
mov
int3
mov
addb
mov
add
clc
rorl
inc
ret
mov
lods
push
adc
mov
ret
out
cmp
or
add
or
je
jge
fadds
lock
add
mov
xchg
enter
and
rclb
or
mov
and
mov
inc
loope
outsb
or
mov
pop
lea
cli
hlt
push
ret
scas
cmp
out
pop
push
cmp
stos
ss
xchg
out
pop
test
dec
adc
add
cmp
jmp
ret
mov
push
dec
mov
fidivs
cmp
lods
cmc
jb
rcll
cltd
sub
divl
cli
fst
xor
and
shr
cmovo
mov
push
clc
pop
stc
scas
xorb
aas
pop
adc
ret
add
nop
push
sbb
jp
mov
sbb
mov
dec
dec
test
add
test
test
iret
lods
dec
ret
mov
push
pop
call
jl
sub
mov
test
je
loop
dec
out
pop
mov
or
sbb
or
jge
fldt
mov
ret
push
pop
mov
mov
mov
or
mov
sbb
and
push
jnp
je
xor
cwtl
repz
cwtl
pop
sarl
mov
jae
adc
dec
jae
mov
mov
pusha
ret
mov
xchg
pop
adc
ret
jne
ss
in
pusha
ret
mov
dec
ret
mov
call
lahf
xor
loop
adc
loope
stos
testl
cli
sbb
dec
add
mov
push
xor
pop
daa
cmp
mov
inc
adc
mov
add
mov
push
jl
in
pop
out
sub
mov
lods
movsb
push
ret
push
int
adc
inc
mov
inc
mov
push
lcall
mov
test
leave
ja
mov
push
leave
push
js
mov
xor
pop
outsb
pop
mov
iret
inc
and
mov
and
pop
insl
cmp
cmpsl
notb
arpl
ret
mov
cld
xor
ljmp
pushf
cmp
adc
movsb
cwtl
cmp
stc
push
pop
loopne
movsb
sbb
add
and
inc
lcall
add
jo
addr16
xchg
repz
push
xlat
stos
mov
imul
addl
dec
aaa
sbb
loop
or
mov
rcr
mov
jne
iret
xchg
lea
scas
loopne
ret
mov
lcall
mov
into
jnp
jbe
jmp
inc
jnp
jnp
in
mov
ljmp
lcall
outsb
mov
sbbb
fstpt
cmpl
sub
mov
add
sbb
mov
jnp
inc
pusha
ret
imul
cmpsb
inc
ret
mov
mov
mov
sbb
mov
lods
pop
dec
out
xor
push
movsb
sti
icebp
rclb
jp
add
lahf
cmp
les
mov
fnstenv
sub
push
push
pop
sbb
xchg
jo
xchg
inc
call
add
cmp
divb
loop
dec
pop
shlb
and
jmp
cs
mov
mov
cmp
push
xor
stc
cmp
push
sbb
or
mov
pop
fwait
out
ja
mov
or
mov
ret
fistl
ret
xchg
int
outsl
adc
mov
lods
mov
mov
loop
sbb
leave
ja
cltd
pushf
jmp
jb
push
flds
adc
dec
jp
sub
pop
sbb
lret
lret
xchg
jl
or
cli
dec
pop
xchg
je
sub
mov
mov
rolb
pop
das
xchg
jp
nop
mov
mulb
jnp
lock
xor
ret
sbbl
inc
xlat
shll
add
lods
xchg
and
mov
dec
ret
mov
aam
aaa
aad
add
mov
push
lret
adc
stos
les
daa
pop
cmp
sub
inc
test
scas
mov
cmpsl
mov
cmp
lea
inc
sbb
int3
mul
or
add
push
hlt
cld
mov
rolb
add
bound
inc
ret
adc
sbb
pop
movsl
int
push
push
push
aaa
mov
cmp
rcll
push
jmp
inc
xchg
push
outsl
push
push
pop
sbb
ds
push
cmp
jmp
ret
jns
adc
and
fisttpl
inc
imul
add
adc
xchg
popf
ja
jle
mov
cmp
push
ret
mov
iret
adc
xchg
aaa
xor
pop
fimull
test
and
sbb
mov
sub
inc
ret
dec
ret
mov
dec
and
sbb
add
push
sbb
jae
cmp
jo
ret
mov
sub
and
inc
xor
and
mov
nop
inc
mov
mov
inc
aas
ds
lock
xchg
jns
mov
popa
test
mov
sub
rorb
xchg
repnz
ret
in
dec
aaa
or
mov
stos
push
dec
add
in
jecxz
xor
add
mov
mov
cwtl
pop
idivb
icebp
push
sbb
inc
fwait
and
jp
sbb
mov
add
ret
jo
xchg
xlat
lds
test
jns
dec
mov
sub
mov
mov
inc
ret
in
ret
mov
ret
mov
mov
cmp
add
loope
cli
jg
mov
out
mov
or
adc
hlt
xor
fists
pop
cmpl
call
pop
sti
mov
push
add
mov
mov
popf
outsl
mov
testb
and
sti
mov
in
add
mov
cli
pop
pusha
ret
into
pop
sub
ss
faddp
cmp
dec
rorl
add
sbb
repz
hlt
sar
xor
inc
ret
imul
ljmp
jle
inc
ret
pop
ljmp
add
add
fistps
and
lret
mov
rorl
mov
int3
sub
mov
add
sub
mov
adc
imul
ret
cwtl
add
mov
or
ret
mov
add
push
adc
push
jge
call
xchg
sti
pop
inc
add
imul
dec
jp
mov
sub
or
mov
movsb
push
in
repz
loopne
ret
pusha
ret
mov
sbb
adcl
and
popa
pop
push
mov
daa
mov
nop
test
jecxz
xlat
sbb
dec
ret
mov
sub
out
lds
mov
test
xchg
js
dec
add
mov
outsb
sbbl
rol
cmp
lea
loopne
ret
dec
mov
icebp
shlb
mov
repnz
mov
jns
mov
sbb
mov
mov
andl
adc
mov
mov
add
scas
push
xor
add
ret
mov
and
push
call
adc
add
sbb
enter
or
mov
pop
in
xor
push
cmp
jns
sub
imul
ret
fnstcw
sbb
lcall
adc
dec
mov
mov
lcall
dec
xlat
stos
rolb
ja
cs
dec
or
outsl
andb
mov
pusha
ret
mov
cmp
pusha
ret
xor
lret
iret
ja
icebp
aaa
cmp
cmp
pop
leave
jo
clc
popa
sbb
jne
jae
jge
sbb
pop
or
mov
es
push
inc
sub
add
fcomps
jl
sub
mov
dec
pop
add
jg
shlb
out
xor
xor
aas
adc
bound
loope
leave
add
or
leave
in
push
fsubrs
mov
lea
aaa
dec
rorl
jl
imul
incb
das
xchg
push
ret
mov
loop
fs
mov
and
or
mov
mov
xchg
out
or
mov
into
arpl
sarl
or
fdivrs
lods
mov
in
leave
test
pushf
jne
test
mov
mov
loopne
rcrl
arpl
xchg
mov
divb
leave
sub
popa
mov
mov
mov
xor
jg
aaa
into
pop
iret
adc
dec
cmp
inc
scas
dec
ret
test
pop
cld
mov
ret
add
add
out
or
xchg
lahf
das
rorl
push
sbb
sbb
or
pop
sbb
mov
jae
push
les
jg
mov
inc
repz
mov
ret
mov
stos
push
jnp
mov
sbb
dec
cltd
outsb
insl
pop
repz
sti
imul
roll
daa
movsb
mov
mov
imul
imul
dec
ret
stos
fwait
dec
ss
stos
push
call
out
sub
test
mov
scas
cmpsb
fsubrl
push
ds
inc
ret
mov
jno
mov
sub
lea
sub
xor
dec
repnz
loop
aad
jge
aas
mov
adc
out
stos
addr16
xchg
mov
xchg
jb
and
lock
sbb
push
or
mov
ret
in
aaa
divb
lret
mov
pop
ret
nop
and
mov
pop
mov
mov
mov
ret
push
jge
repz
ret
xor
cs
pop
or
cs
data16
mov
xor
bound
add
lret
xor
leave
jns
mov
testl
add
inc
xor
cmp
mov
aad
add
and
and
mov
ret
mov
ret
or
mov
adc
jp
push
mov
sbb
out
test
ret
mov
aad
push
mov
and
es
mov
popa
fstpl
in
repz
jbe
out
outsb
call
mov
ret
mov
mov
add
mov
scas
ja
mov
mov
xchg
les
add
mov
ret
mov
mov
rol
ret
jne
scas
jecxz
mull
aaa
xchg
mov
ja
lcall
imul
mov
sbb
fildll
mov
jg
xor
adc
sub
mov
in
sar
pushf
or
mov
cmpsb
jecxz
cmc
call
dec
ret
int
mov
fstp
cmp
xor
jl
inc
mov
ret
mov
outsb
scas
sti
test
adc
or
mov
icebp
movsl
fstps
js
inc
ret
mov
push
pushf
call
xchg
xor
fnstsw
dec
cmpb
adc
leave
dec
cmpsl
loop
xchg
xor
mov
and
decb
add
lret
mov
popf
xchg
or
jnp
lret
push
mov
pop
ljmp
add
xor
inc
mov
mov
test
in
sbb
adc
mov
out
insl
ret
enter
push
pushl
out
pop
xor
ret
cmc
sub
pushf
je
sbb
ret
or
mov
loope
push
in
jmp
add
push
dec
mov
dec
jnp
push
pop
inc
mov
loope
das
mov
or
mov
xchg
and
mov
ss
ret
jmp
ret
loopne
jge
lds
popf
push
jb
shlb
mov
mov
push
xor
inc
adc
imul
fisubrs
dec
mov
das
scas
cmp
fs
mov
pop
lock
gs
inc
ret
mov
ret
mov
add
movsl
repz
scas
or
mov
test
xchg
mov
adc
mov
arpl
mov
stc
dec
ret
mov
loop
nop
or
adc
mov
into
gs
and
out
in
cs
push
leave
add
jle
or
mov
cmp
jg
sahf
xor
add
popf
lret
cvttps2pi
mov
ret
mov
ss
stc
pusha
ret
mov
mov
je
dec
ret
mov
es
dec
mov
dec
or
lret
leave
stos
xchg
lock
jno,pn
movb
movsl
adc
mov
scas
cmc
sahf
inc
jge
add
jle
stos
pop
cltd
mov
add
lcall
shll
add
sbb
ret
xchg
sti
shl
jp
inc
loopne
add
mov
mov
mov
add
mov
ret
mov
dec
testb
test
or
call
pop
jmp
jl
jno
and
mov
pop
lret
ret
imul
mov
sarb
and
mov
lahf
jg
sahf
ret
or
fadds
movsl
adc
and
mov
add
add
lods
pop
jnp
iret
ds
ret
inc
ret
mov
add
and
in
fsubrl
insl
jle
xchg
scas
int
mov
cmp
fs
mov
add
mov
mov
jmp
mov
jecxz
cmpsl
mov
xchg
outsl
fs
xor
rorb
dec
scas
cli
and
mov
xchg
jg
shll
sbb
ret
pop
enter
or
lret
mov
pop
sbb
and
add
mov
add
call
in
add
movl
clc
push
lea
call
sub
add
add
xor
mov
cmp
je
mov
clc
push
push
push
call
test
clc
jne
dec
add
mov
add
add
push
push
push
push
push
call
test
jne
xor
cld
push
es
lea
movl
push
push
push
push
push
clc
call
push
or
lea
jne
movzbl
or
add
mov
add
not
cld
xor
test
cld
jne
call
xor
mov
add
add
rorb
mov
bnd
cmp
mov
mov
mov
lea
lea
add
xchg
shr
shr
xchg
lock
and
sub
cld
jne
push
mov
jne
test
das
ret
mov
fisttpll
aaa
stos
out
rcll
add
subb
inc
add
mov
rcrl
inc
sub
mov
scas
push
popa
or
push
push
lcall
fstpt
jge
xor
mov
xor
testb
popf
ss
out
in
icebp
je
or
in
mov
pop
inc
mov
sub
push
cmpsb
icebp
decb
inc
or
jb
jne
xor
arpl
shlb
ret
fsubs
mov
mov
fmuls
add
mov
add
jl
and
mov
ja
jnp
inc
jecxz
ret
insl
movsb
out
mov
xchg
sbb
sub
dec
xchg
popa
test
mov
xchg
add
test
inc
ret
mov
mov
sub
mov
lods
add
mov
xchg
cs
cmp
in
jge
loopne
loop
insb
ret
mov
inc
ret
mov
test
add
jbe
push
add
pop
std
push
cs
xlat
jo
fisttpl
cmp
add
add
mov
or
sbb
bswap
mov
xchg
mov
cmp
xchg
scas
pop
xchg
mov
adc
insb
ret
xor
cmp
ret
mov
add
xchg
sbb
mov
add
pop
mov
inc
jns
mov
push
mov
and
jne
ret
dec
ret
mov
adc
mov
push
sti
cs
mov
adc
adc
and
addr16
jmp
mov
mulb
add
mov
push
int3
outsl
lds
lret
pop
pop
mov
dec
xor
aam
into
add
and
and
jp
xchg
movsb
sbb
dec
sti
mov
xchg
add
mov
pop
loope
cmp
orb
dec
loop
pop
add
mov
int
cmpl
inc
jo
rol
jns
loope
lret
add
jl
ficoml
je
out
in
outsl
jle
xchg
ret
mov
sub
mov
jno
imull
add
xor
mov
stos
popf
mov
adc
push
test
mov
outsl
test
mov
mov
pop
inc
pop
nop
inc
ret
and
adc
add
xchg
mov
ja
pop
dec
inc
xor
adc
js
jmp
sbb
jmp
sti
jle
out
jno
push
dec
ret
and
cmpl
scas
mov
enter
and
mov
jno
and
inc
in
pop
repz
xchg
xor
mov
movsl
rorl
add
mov
inc
mov
push
pop
cmpsl
push
adcb
and
mov
lret
mov
ret
mov
sysret
ds
sbb
clc
mov
cmc
sbb
push
jnp
sahf
je
and
mov
jl
ror
jns
cs
pop
push
hlt
mov
add
fucomi
xchg
aam
leave
lods
out
mov
lea
lock
enter
test
xlat
cmp
mov
lcall
jbe
add
xchg
popa
sub
mov
cld
inc
xchg
fwait
sbb
jns
dec
mov
and
mov
fnsave
xchg
mov
std
rcrb
es
ret
ret
push
mov
push
push
cmp
outsl
or
and
ret
push
je
pop
mov
xor
mov
sbb
and
mov
movl
lds
or
mov
ret
test
ret
stos
push
cmp
push
add
jge
adc
pop
rcll
add
ret
mov
ret
in
mov
inc
xorb
add
or
mov
mov
dec
int
inc
xchg
xor
stc
mov
lret
pop
xchg
pop
adc
fnstsw
jne
int
pop
aad
std
sarl
add
add
movsl
dec
or
enter
and
enter
icebp
dec
inc
lods
pop
mov
jl
mov
nop
push
inc
test
add
lock
movsl
inc
test
lds
push
loope
fstp
mul
mov
adc
add
mov
mov
aaa
lock
insb
ret
subl
xchg
movl
lret
popf
ficomps
sub
sbb
sbbl
inc
stos
out
shl
or
push
repnz
out
aaa
cld
lret
jo
push
mov
ret
mov
ret
push
pop
push
cmp
stos
mov
daa
push
das
cltd
lods
shll
adc
mov
ret
mov
jae
or
mov
push
cmpsl
popa
ja
ret
cs
jp
sub
mov
mov
je
cmc
jns
xor
mov
mov
in
movsl
lods
sbb
mov
jne
test
and
mov
lds
add
and
test
mov
pop
call
ret
mov
addr16
push
xor
icebp
sbb
leave
adcl
into
je
stos
nop
sub
mov
mov
mov
mov
hlt
mov
mov
arpl
pop
cmc
inc
ret
or
dec
ret
popa
xchg
jns
outsb
mov
or
mov
outsl
inc
ret
or
mov
mov
or
test
lret
daa
ret
popf
std
out
unpcklps
icebp
loope
ret
mov
cmpsl
rcll
cltd
jb
ret
mov
jnp
lcall
lcall
pop
xchg
xor
scas
jmp
jl
dec
add
mov
add
subl
cmpsb
mov
adc
add
lret
pop
cmpl
pushf
push
inc
xor
sub
imul
outsl
push
mov
ret
pop
cmp
add
mov
mov
fildll
mov
add
add
cmp
mov
add
insl
ds
dec
xchg
inc
test
js
imul
and
pop
mov
add
jo
ljmp
iret
xchg
mov
pop
repnz
pop
clc
and
pop
dec
data16
add
sbb
add
add
iret
push
and
mov
inc
adc
mov
jo
jne
es
ret
mov
xchg
das
lods
pusha
ret
mov
pop
enter
lahf
aam
or
add
test
mov
es
push
cmpsl
out
imul
jnp
mov
repz
ret
inc
andl
ret
repnz
mov
outsl
pusha
ret
rclb
ja
push
cwtl
rcrb
jnp
int3
lret
mov
ret
mov
fldenv
dec
mov
push
arpl
mov
stos
insl
push
cmp
jne
mov
mov
mov
mov
jb
jae
push
sub
mov
bound
add
cltd
dec
xchg
scas
int3
bnd
test
out
jno
xchg
sbb
pop
inc
ret
cmp
lret
hlt
mov
mov
lret
cltd
dec
mov
or
push
cld
mov
hlt
xor
xor
add
mov
dec
ret
ret
bound
lahf
test
shlb
into
inc
inc
ret
data16
cltd
pop
mov
sbb
add
mov
call
push
fdivr
or
mov
mov
jp
enter
mov
aam
lahf
add
sub
in
int3
adc
sbb
imul
sbb
ret
mov
add
mov
mov
int
add
mov
in
pop
test
mov
rolb
or
jecxz
int
movsl
shrl
das
pop
adc
shlb
jge
in
cmp
shll
mov
mov
cmc
stos
and
mov
ret
and
cmp
ret
mov
ret
mov
pop
in
ret
mov
mov
mov
push
sbb
sbb
or
sbb
imul
imul
cmp
add
ljmp
jnp
mov
mov
lock
bound
ret
adc
push
ja
pop
fadds
or
out
push
and
jg
ret
mov
fisubrs
mov
jmp
pop
inc
ret
fidivrl
testl
ret
out
xchg
sarb
push
mov
adc
ret
imul
xor
mov
or
mov
xor
mov
subb
shll
add
pushf
fwait
xchg
mov
sub
and
mov
test
sub
mov
in
repnz
dec
ret
in
ret
xchg
shrb
enter
add
push
and
mov
pop
lret
inc
dec
adc
fldcw
add
sbbl
jnp
mov
arpl
cmp
inc
popa
cmp
les
mov
jb
mov
dec
jg
out
jo
ret
mov
sahf
mov
jp
add
push
mov
aad
or
mov
xchg
dec
fnstsw
scas
pushf
sbb
jae
xchg
and
mov
mov
xchg
mov
add
mov
insl
dec
jb
in
insb
ret
mov
pop
pushf
pop
int3
or
and
xorb
outsl
mov
stos
push
pop
cwtl
in
cs
mov
incl
push
jne
sbb
movsb
dec
cmpsb
daa
fsubrl
ret
mov
add
scas
mov
xchg
sbbb
jle
loopne
add
mov
ret
mov
add
div
gs
ret
mov
je
pop
fstpt
stos
mov
xor
loop
fs
mov
mov
mov
mov
out
aad
outsb
push
rcrl
mov
mov
or
xor
ret
mov
or
in
rorl
ret
mov
add
fldenv
sub
lcall
sub
call
test
stos
int3
sub
mov
loopne
dec
mov
lds
gs
and
mov
jge
mov
adc
inc
icebp
pop
mov
xor
hlt
aas
addl
pop
adc
out
rcrb
sub
mov
movsl
cmpsl
push
fsts
adc
mov
out
and
mov
aaa
scas
mov
aam
ret
scas
ret
push
cmpsl
jno
jmp
add
fdivl
scas
jb
and
sbb
xor
adc
jnp
aam
xchg
jns
jno
arpl
mov
cwtl
and
scas
jae
test
dec
mov
xchg
dec
and
mov
or
cli
sbb
adc
stos
adc
add
aaa
popf
aam
int3
mov
out
jnp
push
mov
mov
ret
mov
add
in
mov
outsl
mov
mov
call
adc
fildll
fsubs
imul
stc
out
fnstenv
imul
mov
cmp
or
push
out
fsin
pop
fdiv
loopne
scas
inc
fiadds
ret
adc
ljmp
aas
push
jmp
scas
into
sbb
mov
dec
ret
xchg
mov
jecxz
in
call
rcl
stc
or
ret
mov
xor
jae
out
push
ret
cmc
dec
jns
sub
jne
mov
adc
and
mov
mov
xor
or
mov
mov
pop
pop
push
pop
mov
mov
scas
movsl
and
mov
add
in
cmp
add
inc
add
std
adc
vmread
idivb
pop
inc
ja
ret
jl
stos
jb
xor
std
sub
mov
imul
pop
dec
ret
mov
cwtl
pop
scas
and
stos
adc
mov
mov
jmp
or
fmuls
hlt
or
pop
out
sbb
rcl
add
mov
xlat
cmpsl
outsb
push
mov
repz
lods
sub
stos
aam
lock
rorl
pop
les
cmp
cmp
lcall
cmp
mov
ret
mov
in
pop
jmp
cmpsl
fstpt
mov
ret
dec
sbb
andb
jbe
xchg
cmpsb
jb
leave
jne
and
mov
add
jns
hlt
jmp
je
outsb
mov
ret
int
push
add
dec
lcall
add
adc
add
sub
adc
mov
adc
mov
dec
test
xor
sub
lods
mov
movsb
test
dec
lret
shll
lods
xorb
mov
stos
push
nop
push
shll
mov
inc
push
fdivrs
outsb
iret
mov
test
mov
in
dec
pop
enter
int
xchg
int3
psubb
inc
cli
xor
ret
rcr
repz
scas
rcr
sahf
pop
mov
int
adc
jns
sub
arpl
ret
xchg
loope
add
mov
mov
mov
or
into
repz
sub
mov
movsl
fcmovnbe
push
dec
js
sub
inc
pop
loopne
icebp
setne
xor
fnstcw
mov
andb
add
pop
rclb
cld
sbb
outsl
pop
int3
or
xor
mov
sahf
nop
popa
push
je
shrb
mov
jo
mov
add
cli
mov
xor
xchg
insb
ret
inc
mov
push
jbe
cmp
shrb
cmp
mov
pusha
ret
mov
inc
ret
aam
mov
cmc
bswap
dec
cmpsb
pop
sub
outsb
mov
xor
add
add
mov
ds
mov
adc
xchg
ds
or
repz
jnp
out
clc
repnz
nop
nop
jae
mov
cld
add
fwait
clc
repnz
nop
nop
jae
add
add
fcmovnu
add
outsb
loope
test
add
nop
push
mov
leave
nop
jmp
add
insb
mov
push
nop
push
mov
leave
nop
jmp
push
in
call
add
push
jle
ret
push
push
mov
xchg
ret
add
add
add
call
les
add
add
repnz
nop
nop
jae
add
in
enter
aaa
pop
clc
repnz
nop
nop
jae
add
add
cwtl
fucomi
xchg
adc
add
mov
sbb
add
nop
push
mov
leave
nop
jmp
add
add
fimuls
dec
push
push
mov
xchg
ret
adc
or
mov
lret
sub
push
mov
clc
repnz
nop
nop
jae
adc
add
mov
add
mov
clc
repnz
nop
nop
jae
or
outsl
add
cwtl
xchg
lock
stos
clc
repnz
nop
nop
jae
add
shll
mov
dec
ret
mov
mov
clc
repnz
nop
nop
jae
sarl
add
pusha
pusha
aam
mov
nop
push
mov
leave
nop
jmp
call
add
pusha
fld1
nop
push
mov
leave
nop
jmp
outsb
rcrl
imul
inc
adc
repnz
nop
nop
jae
aam
add
or
enter
inc
nop
push
mov
leave
nop
jmp
add
insb
ds
add
arpl
push
fsubp
je
clc
repnz
nop
nop
jae
add
cld
mov
mov
push
inc
push
in
clc
repnz
nop
nop
jae
sbb
or
mov
call
push
mov
xchg
ret
add
ds
add
popa
add
addl
movzwl
clc
repnz
nop
nop
jae
sub
sarl
push
clc
repnz
nop
nop
jae
add
add
sbb
add
mov
mov
leave
nop
jmp
add
add
fstps
repnz
nop
nop
jae
add
add
add
or
flds
cmpsl
inc
clc
repnz
nop
nop
jae
ss
add
add
shll
or
inc
pop
clc
repnz
nop
nop
jae
add
aam
add
stos
leave
fwait
add
ficomps
mov
clc
repnz
nop
nop
jae
insb
add
imul
xor
clc
repnz
nop
nop
jae
mov
add
fidivl
sub
clc
repnz
nop
nop
jae
add
mov
cmp
in
leave
nop
jmp
mov
enter
roll
fistpl
push
mov
xchg
ret
adc
add
in
stos
sub
mov
xchg
ret
test
xchg
outsb
roll
push
dec
add
lret
out
push
push
pop
clc
repnz
nop
nop
jae
mov
add
add
sub
add
clc
repnz
nop
nop
jae
add
lods
mov
adc
xor
push
mov
xchg
ret
add
fwait
mov
mov
add
test
add
nop
push
mov
leave
nop
jmp
add
sub
inc
add
add
repnz
nop
nop
jae
aam
add
ds
add
lret
test
nop
push
mov
leave
nop
jmp
add
add
fwait
add
xor
out
sub
nop
push
mov
leave
nop
jmp
lret
add
add
mov
clc
repnz
nop
nop
jae
imul
add
sbb
cld
nop
nop
jae
outsb
add
add
add
popa
hlt
mov
add
clc
repnz
nop
nop
jae
mov
lods
outsb
mov
add
lods
and
imul
cld
nop
nop
jae
add
cwtl
sbb
addb
mov
clc
repnz
nop
nop
jae
inc
add
add
sbbl
arpl
add
nop
push
mov
leave
nop
jmp
add
call
xor
and
push
mov
xchg
ret
mov
outsb
fcmovnu
add
shrl
mov
add
mov
clc
repnz
nop
nop
jae
add
or
lods
out
ffreep
jmp
nop
nop
jae
sbb
jns
sub
add
mov
push
mov
leave
nop
jmp
outsb
shll
add
add
xchg
add
les
add
clc
repnz
nop
nop
jae
sbb
orl
push
mov
leave
nop
jmp
pushf
add
add
add
add
add
insb
push
shlb
repnz
nop
nop
jae
add
add
add
sbb
cwtl
repz
inc
ret
cs
and
clc
repnz
nop
nop
jae
add
add
add
movsb
or
mov
outsl
arpl
add
nop
jmp
stos
ficompl
xchg
add
push
mov
xchg
ret
add
add
add
xchg
add
add
pop
and
mov
mov
xchg
ret
push
imul
add
stos
outsb
mov
clc
repnz
nop
nop
jae
mov
test
adc
mov
push
mov
imul
push
dec
push
repnz
mov
icebp
add
nop
nop
jae
or
imul
add
add
add
clc
repnz
nop
nop
jae
add
add
flds
push
adc
test
xchg
ret
add
lods
add
add
fwait
mov
or
lret
clc
repnz
nop
nop
jae
add
add
xchg
shrl
add
enter
or
repnz
nop
nop
jae
add
add
addb
add
clc
repnz
nop
nop
jae
add
outsl
adcl
add
lret
dec
jne
clc
repnz
nop
nop
jae
add
add
rorl
add
nop
jmp
add
add
js
push
mov
leave
nop
jmp
adc
add
add
hlt
in
fistl
cmp
and
add
add
popa
push
add
sbb
mov
nop
push
mov
leave
nop
jmp
cwtl
dec
fwait
add
add
add
flds
aam
ret
mov
push
nop
push
mov
leave
nop
jmp
add
add
add
add
cld
nop
nop
jae
arpl
dec
call
add
add
jmp
pop
inc
add
mov
imul
add
mov
test
add
nop
push
mov
leave
nop
jmp
add
test
mov
ret
mov
inc
and
push
mov
leave
nop
jmp
add
dec
sbb
add
dec
lods
push
mov
xchg
ret
add
add
ds
add
pop
mov
xchg
ret
add
mov
lock
jmp
add
add
add
xchg
jne
add
nop
nop
jae
out
cwtl
sbb
add
lret
mov
inc
and
clc
repnz
nop
nop
jae
add
sub
mov
insb
ret
es
jne
clc
repnz
nop
nop
jae
add
add
enter
mov
clc
repnz
nop
nop
jae
add
pusha
add
shrl
sbbl
mov
xchg
ret
pusha
repz
leave
mov
insb
in
mov
and
and
or
lock
add
jle
ret
xor
repnz
nop
nop
jae
add
mov
leave
add
add
sar
repnz
nop
nop
jae
add
adc
add
add
lret
mov
push
mov
xchg
ret
sub
popa
call
not
push
mov
xchg
ret
add
add
add
test
clc
repnz
nop
nop
jae
call
flds
orb
nop
jae
add
add
add
add
add
add
mov
xchg
ret
fwait
add
cmpsb
add
mov
xchg
ret
ficomps
mov
cmpl
cld
nop
nop
jae
outsb
adc
add
add
or
xchg
in
mov
nop
push
mov
leave
nop
jmp
add
add
outsb
lret
add
adc
cmp
ret
add
add
add
ss
xor
nop
nop
jae
fiaddl
leave
add
add
add
mov
push
mov
leave
nop
jmp
outsl
addl
add
add
adc
clc
repnz
nop
nop
jae
add
addl
add
jg
push
repnz
nop
nop
jae
add
adc
or
add
ss
mov
rorb
add
nop
jmp
add
lods
mov
push
push
mov
xchg
ret
add
or
or
add
pop
push
nop
push
mov
leave
nop
jmp
add
in
xchg
add
add
jge
nop
push
mov
leave
nop
jmp
add
leave
call
add
pusha
ret
into
les
aas
adc
nop
jmp
add
sarl
adcl
cld
nop
nop
jae
add
adc
add
add
add
and
insb
add
sbb
cmpsb
xor
lret
add
xor
clc
repnz
nop
nop
jae
add
add
dec
add
add
jne
push
mov
xchg
ret
fisttpl
add
xchg
aam
add
add
clc
repnz
nop
nop
jae
add
add
inc
xchg
mov
hlt
mov
imul
clc
repnz
nop
nop
jae
pusha
add
insb
cmpsb
add
cmp
ret
push
mov
xchg
ret
add
repz
cld
lock
lock
add
repnz
nop
nop
jae
add
push
add
sbb
arpl
enter
clc
repnz
nop
nop
jae
leave
add
add
adc
cli
decl
mov
adc
repnz
nop
nop
jae
mov
leave
add
add
mov
clc
repnz
nop
nop
jae
add
add
cmpsb
sub
inc
ret
mov
in
add
flds
add
repz
add
adc
add
add
push
mov
push
mov
xchg
ret
add
add
add
push
add
ds
lret
nop
push
mov
leave
nop
jmp
add
add
call
sub
test
add
push
mov
xchg
ret
add
add
fcompp
or
add
outsb
dec
ret
insb
ret
mov
add
push
mov
xchg
ret
push
inc
add
add
aam
outsb
add
fdivrl
jmp
call
nop
jae
add
leave
add
lret
add
cltd
add
clc
repnz
nop
nop
jae
fwait
leave
add
adc
outsb
outsb
or
mov
pushf
add
xchg
sarl
repnz
nop
nop
jae
add
cmpsb
add
pop
pop
inc
add
add
add
sub
add
add
repnz
nop
nop
jae
add
or
xchg
push
mov
xchg
ret
ss
push
add
stos
dec
in
sbb
push
sbb
sti
clc
repnz
nop
nop
jae
push
add
mov
push
adc
add
repnz
nop
nop
jae
cwtl
or
sub
sbb
fildl
outsb
mov
cmp
add
clc
repnz
nop
nop
jae
sbb
popa
flds
sbb
incl
add
xchg
cmpsb
push
mov
add
add
outsl
xchg
dec
mov
clc
repnz
nop
nop
jae
add
imul
stos
add
xlat
mov
push
mov
xchg
ret
repz
or
jns
add
add
sub
push
ret
mov
mov
clc
repnz
nop
nop
jae
add
aam
add
add
sub
repnz
nop
nop
jae
out
repz
sbb
mov
clc
repnz
nop
nop
jae
add
push
add
pushf
lock
add
push
mov
xchg
ret
add
add
xchg
add
cmp
in
leave
nop
jmp
mov
mov
mov
cmp
scas
push
nop
push
mov
leave
nop
jmp
push
call
fiaddl
stos
xchg
or
mov
clc
repnz
nop
nop
jae
add
add
add
jmp
nop
nop
jae
mov
ss
inc
dec
popa
out
call
repnz
nop
nop
jae
outsb
add
add
adc
sub
hlt
sbb
push
clc
repnz
nop
nop
jae
xchg
add
mov
xchg
ret
dec
add
sbb
popa
add
add
add
add
add
mov
fwait
add
flds
add
sbb
xchg
mov
xchg
ret
popa
add
xchg
sbb
add
clc
repnz
nop
nop
jae
sbb
add
add
addl
push
push
mov
xchg
ret
add
lods
ds
cld
outsl
add
call
and
clc
repnz
nop
nop
jae
add
add
adc
mov
clc
repnz
nop
nop
jae
add
mov
fiaddl
add
push
call
push
mov
xchg
ret
hlt
xchg
inc
add
dec
push
ss
je
push
push
clc
repnz
nop
nop
jae
or
inc
stos
add
sbb
mov
push
mov
leave
nop
jmp
add
leave
cwtl
or
add
add
xchg
clc
repnz
nop
nop
jae
lods
add
fiadds
out
add
lock
add
mov
xchg
ret
cwtl
mov
add
add
add
mov
xchg
ret
or
flds
stos
add
pusha
add
add
lock
push
lcall
cld
nop
nop
jae
add
add
cld
add
add
and
mov
xchg
ret
cld
jne
outsb
hlt
add
push
add
clc
repnz
nop
nop
jae
add
out
lret
add
add
leave
add
sbb
add
clc
repnz
nop
nop
jae
mov
cmpsb
popa
arpl
add
repnz
nop
nop
jae
add
add
sub
mov
clc
repnz
nop
nop
jae
pusha
add
push
outsb
add
cwtl
add
sbbl
repz
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
fwait
push
add
aam
cld
clc
repnz
nop
nop
jae
add
xchg
fildl
dec
sbb
and
push
mov
xchg
ret
xchg
mov
add
add
cmp
push
clc
repnz
nop
nop
jae
or
add
add
add
mov
add
repnz
nop
nop
jae
push
fnstcw
add
clc
repnz
nop
nop
jae
add
fwait
stos
sub
add
jne
lock
sub
mov
movsb
clc
repnz
nop
nop
jae
push
dec
flds
ss
add
sbb
mov
gs
repnz
nop
nop
jae
call
add
sub
mov
add
mov
clc
repnz
nop
nop
jae
xchg
leave
add
add
clc
repnz
nop
nop
jae
dec
adc
inc
imul
or
mov
nop
push
mov
leave
nop
jmp
pushf
add
add
add
enter
lcall
nop
jae
add
cmpsb
sub
add
clc
repnz
nop
nop
jae
sbb
stos
jne
mov
add
and
jge
clc
repnz
nop
nop
jae
add
flds
mov
insb
das
push
push
mov
xchg
ret
cld
add
enter
inc
or
clc
repnz
nop
nop
jae
insb
stos
sbb
fs
mov
nop
push
mov
leave
nop
jmp
add
add
add
insb
mov
repnz
nop
nop
jae
push
cld
add
add
inc
add
test
and
add
repnz
nop
nop
jae
add
inc
adc
push
pop
fld1
push
mov
xchg
ret
inc
add
add
add
mov
clc
repnz
nop
nop
jae
pusha
test
add
add
repnz
clc
repnz
nop
nop
jae
mov
add
add
cmpsb
pop
jmp
add
outsl
mov
add
add
mov
aam
add
iret
jne
clc
repnz
nop
nop
jae
add
dec
add
pop
push
push
clc
repnz
nop
nop
jae
fwait
add
inc
add
arpl
imul
sti
xor
push
mov
xchg
ret
sub
add
lock
fiadds
add
into
cmp
repnz
nop
nop
jae
ss
leave
outsb
mov
pop
jg
push
mov
xchg
ret
cwtl
mov
hlt
add
out
inc
sub
mov
xchg
ret
add
add
dec
push
outsb
mov
sti
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
dec
add
stos
add
roll
nop
nop
jae
fwait
test
aam
outsb
hlt
add
jne
ja
clc
repnz
nop
nop
jae
push
sub
dec
aam
add
clc
add
int3
jne
add
sbbb
lock
dec
cld
sbb
mov
lea
push
mov
xchg
ret
aam
jns
add
leave
xor
aad
inc
add
add
jne
add
fwait
add
mov
dec
xor
nop
push
mov
leave
nop
jmp
xchg
add
cwtl
add
inc
dec
es
repnz
nop
nop
jae
add
or
imul
ret
push
scas
fwait
push
mov
xchg
ret
jns
mov
add
stos
enter
clc
repnz
nop
nop
jae
mov
add
add
ficoms
sub
add
add
add
add
lock
add
add
pusha
clc
repnz
nop
nop
jae
mov
pusha
fwait
add
add
psubsb
repnz
nop
nop
jae
add
xchg
in
xchg
imul
sub
add
outsb
add
flds
add
add
add
movb
cld
nop
nop
jae
add
cld
sub
arpl
lret
stos
in
jmp
add
add
add
fstps
imul
and
mov
mov
xchg
ret
add
add
add
ss
add
lods
or
add
repnz
nop
nop
jae
add
leave
add
add
movsl
mov
push
mov
xchg
ret
dec
dec
roll
mov
add
ljmp
nop
jae
add
add
add
lret
pop
pop
clc
repnz
nop
nop
jae
stos
out
test
push
add
add
clc
repnz
nop
nop
jae
or
add
add
leave
arpl
add
fld1
clc
repnz
nop
nop
jae
add
add
add
dec
addb
mov
push
clc
repnz
nop
nop
jae
jne
add
outsl
lret
jg
clc
repnz
nop
nop
jae
or
outsl
jne
sbb
lock
cmc
stos
clc
repnz
nop
nop
jae
lock
sbb
lock
hlt
add
add
dec
ret
test
push
mov
xchg
ret
add
sbb
add
lret
inc
mov
push
mov
xchg
ret
lret
or
inc
add
add
ret
mov
sub
nop
jmp
add
add
add
sbb
dec
hlt
clc
repnz
nop
nop
jae
fwait
sarl
dec
mov
and
mov
nop
push
mov
leave
nop
jmp
shl
leave
add
xchg
or
pop
clc
repnz
nop
nop
jae
add
add
mov
dec
ret
mov
repnz
nop
nop
jae
add
adc
add
add
clc
dec
inc
clc
repnz
nop
nop
jae
add
add
test
add
push
test
cld
nop
nop
jae
outsb
add
add
add
addb
add
add
mov
push
mov
xchg
ret
sbb
add
add
add
lock
in
sbb
clc
repnz
nop
nop
jae
add
test
add
push
in
add
clc
repnz
nop
nop
jae
add
add
add
es
nop
nop
jae
add
add
pushf
stos
push
add
pushl
clc
repnz
nop
nop
jae
add
add
mov
sbb
pop
clc
repnz
nop
nop
jae
enter
adc
pusha
add
enter
inc
ret
jnp
clc
repnz
nop
nop
jae
mov
adc
add
xor
clc
repnz
nop
nop
jae
test
dec
mov
out
or
sbb
inc
add
add
mov
dec
cmp
nop
push
mov
leave
nop
jmp
add
pushf
add
fwait
push
mov
xchg
ret
add
add
call
mov
call
clc
repnz
nop
nop
jae
cwtl
ds
add
add
ret
add
add
stos
xchg
mov
outsl
aam
add
ds
sub
repnz
nop
nop
jae
add
mov
jns
or
js
divl
sar
cld
nop
nop
jae
add
lock
jne
imul
clc
clc
repnz
nop
nop
jae
push
sub
add
add
cmpl
nop
jmp
arpl
fstpt
pop
popa
clc
repnz
nop
nop
jae
add
arpl
add
lret
add
imul
add
clc
repnz
nop
nop
jae
add
test
add
add
repnz
nop
nop
jae
pusha
sub
sbb
sub
dec
fld1
clc
repnz
nop
nop
jae
outsb
add
add
push
lods
add
push
inc
add
push
mov
xchg
ret
add
or
fldt
add
add
or
nop
nop
jae
push
add
ficompl
inc
push
ret
cmp
jo
add
clc
repnz
nop
nop
jae
add
mov
addb
imul
nop
nop
jae
add
pushf
add
add
add
push
pop
push
mov
xchg
ret
or
or
lods
add
fwait
add
outsl
jne
nop
push
mov
leave
nop
jmp
hlt
add
add
add
pop
fld1
push
mov
xchg
ret
or
add
push
outsb
push
mov
xor
push
mov
xchg
ret
cmpsb
flds
outsl
add
fstpt
pusha
sub
push
mov
xchg
ret
add
jns
add
dec
jne
hlt
dec
add
clc
repnz
nop
nop
jae
popa
add
outsb
add
add
add
sbb
clc
repnz
nop
nop
jae
add
add
add
add
out
jmp
push
loopne
repnz
nop
nop
jae
add
push
inc
add
mov
push
mov
iret
test
add
add
push
add
add
lods
mov
add
xorb
and
add
add
enter
outsb
add
push
mov
mov
add
add
add
das
testl
add
add
repnz
nop
nop
jae
add
add
add
mov
repnz
nop
nop
jae
add
add
add
fs
mov
inc
clc
repnz
nop
nop
jae
add
lods
cmpsb
outsl
add
push
cmpsl
pop
clc
repnz
nop
nop
jae
outsb
or
add
clc
repnz
nop
nop
jae
sbb
add
dec
add
inc
add
push
clc
repnz
nop
nop
jae
addl
cwtl
insb
dec
add
das
call
clc
repnz
nop
nop
jae
add
addl
mov
nop
push
mov
leave
nop
jmp
dec
push
add
lock
add
fimull
clc
repnz
nop
nop
jae
add
outsb
add
ds
add
out
outsl
cld
push
mov
xchg
ret
add
push
add
ds
arpl
add
add
clc
repnz
nop
nop
jae
sub
cmpl
cld
nop
nop
jae
add
dec
add
fisttpl
nop
and
push
mov
leave
nop
jmp
mov
add
mov
add
out
xorb
xchg
clc
repnz
nop
nop
jae
add
dec
add
add
nop
nop
jae
imul
leave
add
test
add
jo
clc
repnz
nop
nop
jae
add
pusha
add
or
or
pop
and
repnz
nop
nop
jae
inc
add
rep
stos
ss
in
pop
push
shrl
add
clc
repnz
nop
nop
jae
add
add
fistl
in
add
clc
repnz
nop
nop
jae
addb
add
in
push
clc
repnz
nop
nop
jae
add
stos
add
add
rclb
icebp
mov
xchg
ret
mov
cwtl
add
sbb
add
mov
leave
nop
jmp
insb
add
out
add
leave
add
repnz
nop
nop
jae
add
aam
add
add
shl
mov
clc
repnz
nop
nop
jae
popa
push
adc
lock
adc
nop
push
mov
leave
nop
jmp
lock
add
nop
nop
jae
add
dec
adc
in
pusha
push
add
add
cld
nop
nop
jae
add
add
add
add
out
sbb
mov
clc
repnz
nop
nop
jae
adc
adc
lods
add
sub
push
push
mov
xchg
ret
add
mov
insb
add
add
clc
repnz
nop
nop
jae
add
imul
js
rol
nop
push
mov
leave
nop
jmp
outsb
pusha
add
pushf
add
add
or
js
mov
arpl
clc
repnz
nop
nop
jae
lods
insb
imul
xchg
sub
add
push
mov
xchg
ret
add
add
ss
repnz
nop
nop
jae
sub
mov
roll
stc
nop
push
mov
leave
nop
jmp
add
add
addl
mov
mov
add
clc
repnz
nop
nop
jae
in
add
add
sub
add
sti
mov
push
mov
xchg
ret
fcmove
add
add
div
clc
repnz
nop
nop
jae
outsb
add
call
mov
push
mov
xchg
ret
fwait
add
add
or
add
add
mov
clc
repnz
nop
nop
jae
add
add
add
add
ss
loop
stos
clc
repnz
nop
nop
jae
add
add
add
cwtl
xor
shl
nop
push
mov
leave
nop
jmp
fiaddl
mov
add
cld
popa
add
xchg
jmp
clc
repnz
nop
nop
jae
add
add
add
xchg
test
std
mov
nop
push
mov
leave
nop
jmp
add
add
outsl
add
cwtl
and
loop
push
mov
leave
nop
jmp
fisttpl
add
lret
call
addr16
clc
repnz
nop
nop
jae
sub
dec
mov
add
popa
add
or
clc
repnz
nop
nop
jae
outsb
add
or
fstpt
fwait
xor
nop
push
mov
leave
nop
jmp
stos
push
add
out
add
repnz
nop
nop
jae
pushf
add
sbb
add
enter
mov
xchg
ret
test
add
add
lret
cwtl
addl
mov
nop
push
mov
leave
nop
jmp
add
add
insl
push
clc
repnz
nop
nop
jae
pushf
popa
addl
enter
outsb
roll
and
push
mov
xchg
ret
stos
add
out
add
out
add
add
jns
clc
repnz
nop
nop
jae
pushf
xchg
repz
add
mov
cs
aas
mov
push
mov
xchg
ret
cld
lret
mov
add
add
nop
push
mov
leave
nop
jmp
add
add
add
sub
repnz
nop
nop
jae
cmpsb
or
push
add
mov
xor
nop
pop
sub
repnz
nop
nop
jae
add
add
or
xchg
and
mov
xchg
ret
xchg
xchg
out
pushf
add
in
leave
nop
jmp
mov
add
add
jne
fildl
sti
clc
repnz
nop
nop
jae
imul
sbb
add
add
addl
add
ss
add
mov
push
mov
xchg
ret
add
imul
add
nop
push
mov
leave
nop
jmp
mov
add
repz
popl
clc
repnz
nop
nop
jae
pushf
lret
lods
enter
add
lret
push
mov
xchg
ret
jne
sbb
call
fistpl
clc
repnz
nop
nop
jae
dec
add
outsl
sub
out
add
int3
orl
mov
repnz
nop
nop
jae
adc
push
jns
dec
pushf
pop
and
clc
repnz
nop
nop
jae
add
hlt
fwait
outsb
popa
pusha
add
leave
mov
clc
repnz
nop
nop
jae
xchg
add
add
add
call
clc
repnz
nop
nop
jae
push
mov
arpl
mov
nop
push
mov
leave
nop
jmp
mov
add
add
push
mov
hlt
cld
clc
repnz
nop
nop
jae
jne
sbb
mov
adc
clc
repnz
nop
nop
jae
add
add
leave
fpatan
add
fs
mov
add
push
mov
xchg
ret
add
pusha
or
add
movsl
push
clc
repnz
nop
nop
jae
add
inc
sub
add
nop
nop
jae
imul
add
fisubrs
dec
or
push
mov
xchg
ret
add
sub
shrl
sub
add
popa
mov
clc
repnz
nop
nop
jae
sub
add
mov
pushf
add
push
mov
xchg
ret
push
add
add
sbb
add
mov
adc
nop
nop
jae
or
add
in
xchg
dec
add
push
clc
repnz
nop
nop
jae
add
cld
add
add
cld
add
mov
pusha
clc
repnz
nop
nop
jae
add
sbb
ficoms
fwait
add
enter
sbb
clc
repnz
nop
nop
jae
add
push
dec
sub
je
clc
repnz
nop
nop
jae
add
or
add
xchg
mov
je
sub
test
inc
add
addl
test
add
out
psubsb
push
mov
leave
nop
jmp
hlt
add
sbb
aaa
stos
nop
push
mov
leave
nop
jmp
add
add
fwait
add
dec
jns
lds
cld
nop
nop
jae
add
popa
inc
inc
add
outsb
xchg
addr16
clc
repnz
nop
nop
jae
or
repz
cwtl
pop
popa
clc
repnz
nop
nop
jae
test
ss
add
push
add
add
dec
shl
push
mov
xchg
ret
fisubrl
add
pushf
add
add
in
subl
clc
repnz
nop
nop
jae
add
add
lods
fwait
addb
dec
ret
mov
lret
cli
clc
repnz
nop
nop
jae
add
adc
pand
push
mov
xchg
ret
push
in
outsb
xchg
cmpb
outsb
pop
inc
ret
mov
clc
repnz
nop
nop
jae
fiadds
add
popa
cwtl
pusha
dec
dec
add
ja
clc
repnz
nop
nop
jae
adc
add
add
inc
cmp
nop
push
mov
leave
nop
jmp
addl
add
mov
add
pop
fistpl
clc
repnz
nop
nop
jae
repz
add
leave
dec
pop
clc
repnz
nop
nop
jae
fwait
add
add
call
add
fcoms
nop
jmp
popa
sub
popa
add
add
arpl
push
inc
add
add
repz
sub
int3
xlat
mov
clc
repnz
nop
nop
jae
add
stos
add
adc
mov
sbb
nop
push
mov
leave
nop
jmp
roll
add
add
push
aam
sbb
clc
repnz
nop
nop
jae
add
pop
loop
ret
mov
dec
cmp
push
mov
leave
nop
jmp
add
addl
add
adc
ja
nop
push
mov
leave
nop
jmp
add
add
leave
addb
ret
mov
push
mov
leave
nop
jmp
add
fiaddl
add
outsb
add
insb
add
testl
nop
push
mov
leave
nop
jmp
outsl
lret
imul
or
repnz
nop
nop
jae
add
add
add
outsb
add
cmc
mov
push
mov
xchg
ret
stos
add
sbb
add
mov
test
push
mov
xchg
ret
leave
add
add
fisubs
insb
add
mov
jmp
adc
add
enter
dec
sub
repz
imul
inc
add
arpl
cld
add
leave
cwtl
adc
mov
clc
repnz
nop
nop
jae
add
add
adc
add
clc
repnz
nop
nop
jae
leave
add
add
stos
add
in
leave
nop
jmp
xchg
out
sbb
add
add
add
add
repnz
nop
nop
jae
xchg
out
outsb
adc
add
cmpsb
add
aas
jb
clc
repnz
nop
nop
jae
sub
add
cmpsl
push
clc
repnz
nop
nop
jae
add
mov
sub
push
mov
je
cmp
clc
repnz
nop
nop
jae
sbb
imul
xor
nop
push
mov
leave
nop
jmp
in
fwait
or
dec
sub
add
nop
nop
jae
add
sub
subb
push
add
ljmp
push
xchg
inc
add
add
add
push
push
push
mov
xchg
ret
add
add
add
jne
clc
repnz
nop
nop
jae
mov
add
xor
nop
jmp
add
mov
ds
add
test
clc
repnz
nop
nop
jae
out
add
dec
ret
test
nop
nop
jae
add
rcr
pushf
outsb
fimuls
xor
adcl
repnz
nop
nop
jae
hlt
jne
add
mov
call
clc
repnz
nop
nop
jae
test
dec
add
ficompl
repnz
nop
nop
jae
call
add
popa
mov
push
mov
xchg
ret
add
lods
dec
add
add
out
push
clc
repnz
nop
nop
jae
leave
sub
add
add
ss
mov
nop
push
mov
leave
nop
jmp
add
add
add
sbb
nop
push
mov
leave
nop
jmp
lods
sar
repz
add
repnz
nop
nop
jae
outsb
mov
add
add
addl
mov
xchg
ret
aam
mov
ss
adc
nop
nop
jae
in
inc
add
cmpsb
outsl
jns
mov
cld
nop
nop
jae
add
fsts
cmpsb
inc
adc
aam
orl
nop
nop
jae
adc
add
add
cmpsl
mov
clc
repnz
nop
nop
jae
lret
add
add
add
add
nop
push
mov
leave
nop
jmp
add
outsl
add
add
repz
jb
clc
repnz
nop
nop
jae
xchg
repz
sarb
clc
repnz
nop
nop
jae
add
fcomi
add
imul
mov
push
mov
xchg
ret
add
add
add
mov
mov
xchg
ret
add
add
outsb
addl
add
fisubrs
mov
xchg
ret
add
add
add
shrl
jmp
jp
nop
push
mov
leave
nop
jmp
or
add
sbb
and
push
mov
xchg
ret
sub
add
add
outsb
add
add
ja
push
es
jecxz
push
mov
leave
nop
jmp
mov
add
ret
nop
push
mov
leave
nop
jmp
add
add
mov
mov
inc
clc
repnz
nop
nop
jae
inc
add
lods
add
add
aam
dec
jl
movl
xchg
ret
outsb
enter
add
add
clc
repnz
nop
nop
jae
add
sub
hlt
add
ds
lret
dec
ret
mov
pop
push
mov
xchg
ret
add
pusha
add
add
add
add
data16
call
nop
jae
push
add
add
add
mov
xchg
ret
or
add
leave
add
mov
dec
flds
add
fistpl
push
mov
xchg
ret
add
outsb
jne
add
add
ds
push
clc
repnz
nop
nop
jae
out
adc
fwait
add
add
loop
xchg
test
fdivr
call
nop
jmp
add
add
stos
add
dec
data16
nop
push
mov
leave
nop
jmp
enter
lret
add
add
dec
fld1
push
mov
xchg
ret
add
add
add
in
add
clc
repnz
nop
nop
jae
mov
or
sbb
dec
add
in
leave
nop
jmp
add
inc
add
lods
cmpsb
add
add
pusha
push
push
push
mov
xchg
ret
add
add
mov
mov
mov
cmp
ret
add
add
fwait
add
add
add
push
inc
clc
repnz
nop
nop
jae
dec
add
add
add
push
sub
mov
clc
repnz
nop
nop
jae
mov
push
add
outsb
xchg
lret
add
inc
push
mov
xchg
ret
jns
add
leave
repz
cwtl
hlt
add
pop
nop
push
mov
leave
nop
jmp
jns
dec
push
push
call
add
mov
clc
repnz
nop
nop
jae
add
out
sub
add
ret
mov
clc
repnz
nop
nop
jae
outsl
add
add
add
test
nop
nop
jae
fimull
add
or
add
add
stos
stos
inc
clc
repnz
nop
nop
jae
add
add
imul
push
mov
xchg
ret
add
add
push
sbb
add
clc
repnz
nop
nop
jae
add
mov
add
jmp
mov
xchg
ret
add
popa
cmpsb
add
add
add
push
mov
xchg
ret
push
imul
add
push
push
mov
xchg
ret
add
add
leave
add
add
pusha
cmc
jmp
add
xchg
outsb
outsb
add
aam
jns
sub
mov
fimull
nop
nop
jae
mov
or
push
add
dec
pop
aaa
mov
clc
repnz
nop
nop
jae
add
fwait
add
aam
addl
jb
clc
lea
push
inc
add
fisubs
add
add
cmpsb
and
mov
leave
nop
push
mov
leave
nop
jmp
add
add
mov
mov
sbb
xchg
xchg
xchg
ret
mov
in
test
sbb
add
push
mov
xchg
ret
subb
add
add
clc
repnz
nop
nop
jae
out
add
or
add
add
push
mov
xchg
ret
fldcw
inc
out
adc
add
enter
push
push
mov
xchg
ret
add
imul
mov
xor
push
add
mov
add
nop
jmp
mov
add
add
add
clc
repnz
nop
nop
jae
add
dec
add
outsb
pusha
xor
or
add
repnz
nop
nop
jae
pushf
add
stos
outsb
adc
add
iret
mov
nop
push
mov
leave
nop
jmp
subl
add
ss
and
inc
xor
nop
push
mov
leave
nop
jmp
push
lret
lods
add
mov
sti
pushl
push
mov
xchg
ret
repz
in
orb
lret
fimull
clc
repnz
nop
nop
jae
add
sub
add
addb
add
pop
fistpl
clc
repnz
nop
nop
jae
dec
push
add
push
dec
repz
or
repnz
nop
nop
jae
add
repz
inc
arpl
mov
out
call
nop
jmp
add
mov
lock
clc
repnz
nop
nop
jae
add
add
xchg
inc
mov
push
clc
repnz
nop
nop
jae
add
ds
push
mov
xchg
ret
add
pusha
pushf
mov
add
add
repnz
nop
nop
jae
leave
fxch
leave
add
sub
hlt
lret
xor
jne
clc
repnz
nop
nop
jae
in
add
add
add
arpl
popl
xchg
ret
dec
add
or
mov
enter
clc
repnz
nop
nop
jae
imul
arpl
fwait
mov
push
clc
repnz
nop
nop
jae
add
add
imul
push
push
mov
xchg
ret
pushf
add
add
add
add
movb
cld
nop
nop
jae
mov
dec
add
add
lret
ret
clc
repnz
nop
nop
jae
add
add
ficoml
lret
rclb
jmp
imul
add
jmp
rcl
add
add
insb
add
pusha
add
add
jns
enter
mov
xchg
clc
repnz
nop
nop
jae
fcmovnu
add
fiaddl
out
add
leave
nop
push
mov
leave
nop
jmp
jne
add
repz
add
mov
repnz
nop
nop
jae
cwtl
mov
out
dec
add
lods
adc
add
shr
out
clc
repnz
nop
nop
jae
pushf
push
imul
lods
call
clc
repnz
nop
nop
jae
add
add
add
fstcw
nop
push
mov
leave
nop
jmp
insb
lock
outsl
adc
lock
dec
mov
clc
repnz
nop
nop
jae
enter
add
add
mov
imul
leave
nop
jmp
jns
add
filds
pop
jne
add
sbb
lret
add
or
add
repnz
nop
nop
jae
mov
or
outsl
fcomi
call
mov
xchg
ret
fsts
xchg
arpl
add
add
and
mov
ret
add
add
push
mov
xchg
ret
add
outsb
cld
sbb
xchg
add
mov
repz
jmp
add
fwait
add
inc
cwtl
add
add
add
mov
jbe
xor
push
mov
xchg
ret
cld
arpl
popa
lret
add
xchg
add
clc
repnz
nop
nop
jae
jns
add
outsb
mov
sbb
add
nop
push
mov
leave
nop
jmp
jne
leave
add
aam
cwtl
add
popa
add
ret
mov
clc
repnz
nop
nop
jae
add
outsb
mov
add
clc
repnz
nop
nop
jae
mov
ficomps
fildll
inc
add
add
add
add
ss
add
subl
push
inc
pop
nop
push
mov
leave
nop
jmp
add
pushf
add
add
add
repnz
nop
nop
jae
sbb
lret
add
add
sbb
dec
pushl
clc
repnz
nop
nop
jae
arpl
enter
add
outsl
add
nop
push
mov
leave
nop
jmp
sbb
ss
sbb
inc
fiadds
add
add
cmpw
clc
repnz
nop
nop
jae
call
push
add
mov
rclb
bound
and
popa
sar
adc
mov
add
sti
lea
push
mov
xchg
ret
add
outsb
push
add
sbb
cld
nop
nop
jae
pusha
orl
add
nop
nop
jae
adc
add
add
mov
mov
clc
repnz
nop
nop
jae
cwtl
add
add
add
cld
push
inc
sbb
repnz
nop
nop
jae
add
add
add
flds
cmp
clc
repnz
nop
nop
jae
add
cmpsb
add
add
nop
nop
jae
add
pusha
enter
arpl
jl
and
pop
mov
xchg
ret
dec
mov
fiadds
add
adc
push
mov
xchg
ret
add
mov
jmp
sahf
filds
mov
sbb
add
mov
add
add
clc
repnz
nop
nop
jae
jns
add
add
fidivrs
cld
nop
nop
jae
jne
add
lret
fcmovnbe
cmpsb
jno
jb
push
mov
xchg
ret
add
mov
cwtl
enter
jnp
fwait
xchg
xchg
call
nop
jmp
f2xm1
lods
addb
sub
mov
add
add
repnz
nop
nop
jae
dec
imul
jo
sub
clc
repnz
nop
nop
jae
repz
add
add
add
mov
sub
cld
nop
nop
jae
outsb
add
add
add
add
sbb
add
clc
repnz
nop
nop
jae
dec
ss
outsl
push
add
imul
jmp
cld
nop
nop
jae
add
add
and
enter
nop
nop
jae
add
fnstcw
xchg
add
dec
ret
jnp
and
nop
push
mov
leave
nop
jmp
add
add
add
add
repnz
nop
nop
jae
cmpsb
add
add
popa
repz
jne
jne
clc
repnz
nop
nop
jae
jns
add
add
movsb
sti
push
push
mov
xchg
ret
add
outsl
xchg
fiaddl
add
fldt
push
mov
nop
push
mov
leave
nop
jmp
add
add
add
add
idivl
clc
repnz
nop
nop
jae
sbb
add
sbb
mov
jmp
mov
xchg
ret
add
roll
aam
flds
in
mov
repnz
nop
nop
jae
dec
lret
add
dec
mov
add
push
mov
leave
nop
jmp
fwait
add
add
add
push
push
clc
repnz
nop
nop
jae
jne
lods
jns
mov
or
push
pop
pop
push
mov
xchg
ret
adc
add
pushf
add
popa
add
shl
nop
push
mov
leave
nop
jmp
sbb
subb
pusha
ret
mov
clc
repnz
nop
nop
jae
outsb
pusha
outsb
or
add
add
cld
fwait
stc
mov
clc
repnz
nop
nop
jae
call
lock
add
add
mov
clc
repnz
nop
nop
jae
add
add
mov
fistpl
clc
repnz
nop
nop
jae
cwtl
mov
outsl
adc
nop
nop
jae
adc
repz
repz
hlt
and
test
call
cld
nop
nop
jae
outsb
or
add
cs
ret
mov
push
mov
xchg
ret
jne
add
mov
lods
push
add
add
out
add
push
mov
xchg
ret
add
subl
mov
lcall
push
mov
leave
nop
jmp
add
xchg
add
fwait
repz
mov
xchg
ret
lret
add
add
sub
and
ret
clc
repnz
nop
nop
jae
hlt
imul
repz
ret
les
add
mov
mov
add
popa
lock
adc
arpl
jne
clc
repnz
nop
nop
jae
jns
fcmovnu
fildl
add
adc
push
mov
leave
nop
jmp
aam
mov
mov
jne
popa
clc
repnz
nop
nop
jae
add
add
add
insb
add
dec
jmp
repnz
nop
nop
jae
or
lret
add
mov
push
mov
xchg
ret
add
add
fildl
flds
add
adc
add
push
mov
leave
nop
jmp
add
cwtl
cmpsb
stos
add
add
stos
cld
pop
je
clc
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
push
add
insb
add
ret
nop
int3
push
xorb
push
mov
pop
cmc
inc
mov
xor
add
cmp
add
movsb
mov
add
loope
push
mov
xchg
ret
pusha
add
add
aaa
pusha
push
mov
xchg
ret
ds
fiaddl
outsb
popa
add
mov
sub
nop
nop
jae
test
add
or
inc
pop
aad
idiv
repnz
nop
nop
jae
add
mov
xchg
fld1
clc
repnz
nop
nop
jae
call
add
pusha
mov
pop
push
mov
xchg
ret
aam
cmpsb
add
add
add
clc
and
push
clc
repnz
nop
nop
jae
lock
sbb
sub
nop
push
mov
leave
nop
jmp
add
mov
jne
add
ret
dec
cmp
repnz
nop
nop
jae
add
add
pusha
pushf
ficompl
add
clc
repnz
nop
nop
jae
mov
add
adc
nop
nop
jae
sbb
or
add
out
fiaddl
add
pop
fwait
nop
push
mov
leave
nop
jmp
sbbb
subl
add
lret
add
push
mov
xchg
ret
mov
stos
repz
add
jnp
add
add
add
adc
add
out
add
nop
push
mov
leave
nop
jmp
add
push
dec
add
cmp
push
mov
leave
nop
jmp
add
add
fwait
and
nop
jae
xchg
mov
add
fisubrl
add
clc
repnz
nop
nop
jae
fiadds
add
add
arpl
mov
xchg
ret
hlt
add
or
sbb
aam
fcmovu
outsl
add
fistl
es
add
flds
add
add
push
addl
mov
clc
repnz
nop
nop
jae
repz
outsb
add
add
dec
mov
dec
cmp
repnz
nop
nop
jae
add
mov
push
mov
pop
jo
push
fistpl
nop
push
mov
leave
nop
jmp
push
cwtl
add
fcmovbe
mov
les
repnz
nop
nop
jae
push
fnstcw
add
push
push
mov
xchg
ret
cwtl
fstps
roll
out
lods
arpl
add
push
insb
ret
mov
clc
repnz
nop
nop
jae
add
add
xchg
xchg
dec
sub
clc
repnz
nop
nop
jae
hlt
enter
sbbb
add
fwait
nop
push
mov
leave
nop
jmp
mov
add
dec
xor
cmpl
nop
push
mov
leave
nop
jmp
add
add
add
outsb
test
clc
repnz
nop
nop
jae
jne
lock
add
fwait
add
mov
ret
mov
push
clc
repnz
nop
nop
jae
repz
add
cld
nop
nop
jae
add
lret
add
lock
cwtl
cmp
or
mov
repnz
nop
nop
jae
add
outsb
popa
add
sbb
push
add
js
ret
insb
ret
sbb
in
leave
nop
jmp
add
leave
add
adcl
inc
lss
nop
push
mov
leave
nop
jmp
call
jecxz
les
push
mov
xchg
ret
add
mov
mov
jae
push
mov
leave
nop
jmp
inc
add
insb
xor
repnz
nop
nop
jae
add
hlt
mov
sub
add
add
hlt
sub
xor
nop
nop
jae
add
push
add
outsb
pushf
imul
fimull
int
pop
jae
repnz
nop
nop
jae
add
add
lcall
mov
add
add
mov
cwtl
repz
les
repnz
nop
nop
jae
inc
outsb
add
out
xorl
clc
repnz
nop
nop
jae
test
add
test
mov
adc
add
add
nop
jae
or
shll
adc
add
ret
scas
lods
push
nop
push
mov
leave
nop
jmp
adc
add
add
add
add
add
dec
cmpl
nop
push
mov
leave
nop
jmp
cld
mov
mov
add
clc
repnz
nop
nop
jae
cmpsb
or
cwtl
add
mov
decl
clc
repnz
nop
nop
jae
add
lret
ss
add
mov
cld
push
mov
xchg
ret
arpl
dec
add
add
imul
xchg
jb
mov
clc
repnz
nop
nop
jae
add
add
add
clc
repnz
nop
nop
jae
call
add
add
add
popa
nop
push
mov
leave
nop
jmp
add
rorl
cld
in
ds
pop
lods
clc
repnz
nop
nop
jae
push
adc
dec
add
inc
jne
cmpl
repnz
nop
nop
jae
add
add
subl
insb
sbb
sbb
mov
xchg
ret
push
add
add
cld
add
add
lock
cmpsb
rol
call
nop
nop
jae
add
add
sub
dec
mov
cld
nop
nop
jae
add
add
ss
adcl
add
mov
dec
push
clc
repnz
nop
nop
jae
call
add
add
fwait
mov
data16
clc
repnz
nop
nop
jae
cwtl
push
add
and
nop
jae
imul
add
das
push
push
mov
xchg
ret
sbb
hlt
add
adc
jle
mov
nop
push
mov
leave
nop
jmp
cld
add
mov
add
fwait
lock
and
xchg
xchg
ret
cld
imul
enter
push
mov
nop
push
mov
leave
nop
jmp
add
add
insl
fistpl
push
mov
xchg
ret
fiadds
fwait
add
fildl
inc
add
xchg
rep
nop
push
mov
leave
nop
jmp
fldt
jns
add
add
add
pushw
push
mov
leave
nop
jmp
sbb
inc
add
add
clc
repnz
nop
nop
jae
or
add
inc
push
adc
clc
repnz
nop
nop
jae
lods
add
mov
adc
repnz
nop
nop
jae
sub
add
mov
add
add
clc
repnz
nop
nop
jae
add
add
sub
add
mov
inc
add
push
mov
add
add
rclb
add
add
ss
cmpl
nop
push
mov
leave
nop
jmp
add
fiadds
cmpsb
icebp
nop
push
mov
leave
nop
jmp
push
pushf
add
in
push
add
add
jl
sub
push
mov
leave
nop
jmp
xchg
ds
leave
sub
xchg
mov
clc
repnz
nop
nop
jae
xchg
enter
add
das
jne
clc
repnz
nop
nop
jae
add
ficomps
mov
push
mov
xchg
ret
add
cld
add
pushf
add
push
mov
clc
repnz
nop
nop
jae
sbb
aam
cmpsb
add
jp
inc
add
add
sub
add
push
inc
add
add
add
add
add
or
fsubrs
add
dec
sub
sub
and
add
add
xchg
xor
cmp
cld
nop
nop
jae
in
pusha
mov
imul
cmpw
nop
push
mov
leave
nop
jmp
add
cmpsb
adc
push
clc
repnz
nop
nop
jae
mov
push
sbb
fstps
clc
repnz
nop
nop
jae
push
add
or
popa
jns
add
repz
movswl
clc
repnz
nop
nop
jae
add
add
sbb
sub
add
mov
push
mov
xchg
ret
sbb
add
jne
imul
repnz
nop
nop
jae
add
add
add
fcmovu
add
sub
mov
sub
add
clc
repnz
nop
nop
jae
add
add
flds
dec
leave
add
mov
xchg
ret
pushf
add
fwait
repz
lret
add
mov
xchg
ret
pusha
mov
add
add
rcl
fld1
push
mov
xchg
ret
add
add
mov
fidivl
repnz
nop
nop
jae
fiadds
mov
outsb
add
ret
test
jge
clc
repnz
nop
nop
jae
stos
add
outsl
cwtl
add
mov
cmp
nop
push
mov
leave
nop
jmp
sub
add
and
scas
enter
nop
nop
jae
add
cmpl
jne
fld1
clc
repnz
nop
nop
jae
sub
dec
mov
add
add
inc
in
mov
xchg
ret
enter
add
lea
repnz
nop
nop
jae
adc
add
add
push
xchg
add
adc
out
stos
clc
repnz
nop
nop
jae
mov
outsb
add
adc
mov
add
nop
push
mov
leave
nop
jmp
add
adc
add
dec
add
nop
push
mov
leave
nop
jmp
sbb
mov
ficoms
outsb
and
repnz
nop
nop
jae
insb
add
imul
add
call
nop
jmp
outsb
sub
dec
push
and
mov
push
push
mov
xchg
ret
add
add
shl
add
fldcw
loope
roll
repnz
nop
nop
jae
outsb
add
out
sbb
cli
lret
fistpl
clc
repnz
nop
nop
jae
cmpsb
add
lret
add
xchg
mov
mov
xchg
ret
dec
sub
lret
add
lock
in
add
push
pop
push
mov
xchg
ret
add
add
add
fistpl
clc
repnz
nop
nop
jae
add
add
add
add
fisubrs
out
lods
push
mov
xchg
ret
addl
mov
add
leave
mov
mov
push
mov
leave
nop
jmp
add
add
mov
sbb
cmp
repnz
nop
nop
jae
xorb
add
mov
or
repnz
nop
nop
jae
add
add
repnz
nop
nop
jae
xchg
add
jns,pt
add
lods
add
add
mov
in
mov
add
add
add
xchg
pop
lret
add
add
mov
seta
mov
xchg
ret
mov
mov
add
fstpt
mov
cs
call
add
mov
inc
ret
mov
push
sub
bound
data16
repnz
stos
add
mov
lock
pop
xlat
addr16
loopne
arpl
cli
pop
xlat
out
jge
or
dec
imul
sub
into
test
or
je
pop
mov
sub
mov
lcall
xor
xchg
pop
add
mov
clc
mov
push
push
int3
push
mov
dec
sbb
pop
cmp
pop
xchg
add
mov
and
push
mov
insb
ret
mov
scas
scas
lahf
cmp
cmp
add
ret
mov
cs
leave
ja,pt
ret
call
ss
iret
es
int
int3
out
cmp
ror
xchg
call
dec
ret
mov
pop
xchg
out
and
xchg
xchg
pop
jl
mov
cmpsl
pop
cmp
fwait
or
mov
mov
mov
outsl
jl
fsubrl
aam
loop
sbb
lods
inc
pop
in
pop
and
dec
mov
sbb
sti
push
xchg
inc
insl
jns
xchg
shr
lock
mov
jge
dec
xor
gs
xchg
add
mov
xchg
jno
mov
mov
and
addr16
pop
inc
es
ret
mov
pop
popf
pop
sti
sarb
mov
and
mov
pop
hlt
and
mov
push
xchg
filds
mov
popf
xor
outsb
cld
sbb
arpl
pop
xor
pop
or
add
adc
ret
mov
sarl
incl
pop
nop
mov
adc
fs
mov
inc
ror
mov
loope
leave
cmp
ret
add
mov
and
daa
xor
or
in
ret
mov
dec
ret
mov
jecxz
neg
or
frstor
mov
ss
xchg
xor
inc
inc
ret
mov
pop
sbb
jnp
pop
mov
push
sbb
or
mov
mov
mov
jp
add
out
mov
mov
mov
ret
mov
fimull
add
mov
or
out
or
movsb
stos
in
push
xor
xor
movsl
out
jl
loop
fcoml
ret
mov
jecxz
lret
xchg
jp
add
mov
xor
pushf
push
push
mov
pop
ss
ret
faddp
cmp
push
push
outsb
mov
rorb
ret
inc
inc
cmp
push
xchg
in
xchg
mov
nop
xor
rolb
mov
dec
push
jle
bound
ret
mov
jo,pt
ret
ret
lods
sub
mov
ret
push
jle
lock
fdiv
popf
add
mov
cmp
inc
aam
out
push
jne
cli
cmp
or
imul
fs
mov
call
fiaddl
mov
push
add
mov
mov
shll
xor
ret
mov
adc
fbstp
mov
add
pop
dec
sub
pop
fwait
jmp
cmp
mov
clc
ficompl
insl
add
mov
xchg
addr16
pop
add
mov
int
mov
shlb
and
mov
and
test
push
das
inc
mov
daa
mov
fiaddl
xchg
out
jmp
mov
jbe
or
in
or
test
lret
xor
xchg
cmpsb
cmp
ret
mov
pop
nop
sbb
icebp
mov
aam
mov
fdivp
test
xor
out
roll
mov
hlt
movl
mov
scas
mov
mov
sub
pushl
pop
sarb
or
icebp
and
mov
and
mov
std
ret
sub
incb
ret
mov
fucomip
mov
dec
or
mov
loop
jp
in
sub
lret
xor
add
ret
mov
push
mov
mov
loope
xchg
dec
ret
mov
push
lods
ss
pop
stc
lret
jecxz
aad
loope
ret
fisubrs
mov
lret
sbb
xor
or
mov
add
mov
pusha
ret
mov
ret
mov
jle
das
daa
push
scas
mov
add
xlat
popf
testl
enter
jl
out
fcomip
test
mov
cmc
xor
mov
or
addb
push
nop
into
lods
iret
xor
xchg
aaa
popa
pmaxsw
xchg
mov
adcw
xor
dec
mov
ret
pop
xor
mov
cmpsl
out
cmp
inc
cwtl
ret
test
fidivrl
ret
les
or
mov
sti
test
add
add
fisubs
clc
sub
mov
mov
jp
fidivs
stos
pop
das
add
push
imul
xor
das
testb
xchg
jmp
add
mov
xor
arpl
pop
cltd
inc
ret
mov
lds
orb
fwait
mov
add
mov
add
les
mov
jo
pop
jmp
fcmove
or
mov
sub
mov
and
sbb
inc
ret
mov
roll
xor
mov
ret
fidivl
in
cmp
mov
xchg
or
aad
sbb
push
and
sti
sahf
mov
cmp
repnz
push
aad
jge
aas
in
ficoms
nop
roll
in
call
and
mov
xchg
scas
das
or
clc
jbe
mov
jae
ss
pop
rorb
mov
jnp
mov
jb
cmpb
lahf
mov
add
xchg
jno
push
push
cmpsb
jl
int
ja
out
inc
xor
jg
sub
daa
inc
ret
add
rclb
mov
repnz
ret
sub
mov
in
mov
stos
ja
jg
jl
pop
jl
rolb
adc
subl
stc
mov
jecxz
sarb
mov
ja
push
mov
shl
adc
jb
fsubrs
outsl
xchg
in
or
mov
push
jle
ret
fcom
fsts
lea
daa
sbb
xchg
jns
mov
imul
lret
cmc
std
outsl
cmpsb
mov
or
xorps
add
fsubl
enter
pop
arpl
mov
lcall
xchg
fldenv
gs
cwtl
pop
inc
pop
push
sub
xchg
rep
mov
iret
fidivl
pop
pop
add
test
or
add
mov
sar
cmp
add
dec
and
adc
xor
hlt
sub
dec
jl
jnp
aaa
inc
sub
push
fldt
sub
ret
lock
sbb
push
pop
test
mov
mov
lcall
ret
mov
jmp
repz
fsts
js
mov
outsb
js
cmp
jg
jl
jns
xor
into
ret
xchg
aad
push
popa
add
mov
ret
xchg
jecxz
shrl
adc
ret
push
xchg
mov
popf
mov
aas
mov
mov
dec
fmull
call
icebp
or
cmp
mov
add
leave
jecxz
pop
push
subb
stc
adc
xorb
les
push
pop
dec
cmp
and
loop
loopne
pushf
add
cltd
cmc
jno
jle
mov
std
adc
sub
push
fsubrs
adc
sbb
ret
mov
xor
data16
ret
lret
cmp
add
add
mov
clc
lock
mov
mov
push
lods
jb
mov
jnp
out
mov
loop
xchg
cltd
xchg
add
ret
mov
pushf
aad
mov
pop
pop
push
sub
jmp
aaa
iret
add
popf
int
push
mov
repz
arpl
sub
and
mov
jmp
insb
ret
pop
push
sub
dec
xlat
in
lods
loop
xchg
and
mov
add
sbb
sub
mov
mov
in
jo
cltd
loop
and
pop
movsbl
dec
add
mov
sub
pop
jbe
fmull
data16
ret
mov
inc
ret
mov
add
pop
lods
jl
lock
test
jno
mov
mov
lods
mov
icebp
fdivs
xchg
ljmp
rolb
dec
ret
mov
pusha
ret
lcall
pop
pop
xchg
and
mov
add
cmpsl
stc
movsl
fidivrs
add
or
mov
lret
dec
adc
outsl
fiaddl
mov
push
adc
ret
je
adc
idivl
mov
out
ds
clc
ljmp
mov
sub
sub
loopne
and
add
mov
icebp
std
lret
jns
repz
fsubr
fs
jmp
imul
xchg
shl
ss
shlb
in
push
addr16
inc
ret
add
add
mov
mov
arpl
cmp
fisttps
pop
pop
nop
cmpsl
js
inc
cmpsl
jno
push
mulb
test
ja
int3
xlat
inc
add
mov
jmp
push
fstpt
pop
into
shlb
ret
mov
add
jbe
repnz
ret
mov
cmpsb
mov
add
fidivs
sub
sbbl
xchg
jo
jle
icebp
loop
dec
int
and
mov
add
lods
mov
xor
jno
mov
xchg
xchg
dec
push
cmp
xor
or
mov
lods
push
cs
je
ficoms
xor
cmp
pop
inc
fisttpll
add
or
mov
xor
jg
sti
hlt
into
ds
aas
jns
mov
mov
xor
hlt
mov
insb
ret
mov
inc
cmpsb
xchg
popa
push
sub
cmc
sbb
push
pop
sbbb
jb
ret
mov
xchg
sbb
xchg
jo
fistpll
mov
add
mov
mov
cmp
adc
dec
ret
cltd
sbb
bound
sub
mov
jno
mov
jae
scas
mov
ret
sub
mov
ret
push
into
or
decb
cmp
mov
addl
out
int
ret
mov
dec
ret
int
loop
addb
pop
lea
add
mov
lret
sbb
es
xchg
cmp
arpl
inc
ret
mov
add
mov
ret
loope
enter
testl
ret
mov
shrb
ret
ret
fsubrs
push
and
gs
mov
lcall
xchg
popa
xchg
sub
mov
lock
fcmovnb
cmp
or
out
ret
mov
xor
sbb
cmc
xchg
jne
sbb
pop
sbb
xchg
jmp
movsl
pop
mov
ljmp
jl
repz
insl
daa
out
pop
out
pop
push
sbb
fcmovb
lret
hlt
js
xchg
aas
scas
jmp
rcrb
dec
ret
jne
cwtl
pop
push
ret
mov
mov
fiaddl
add
cmpsl
xchg
add
leave
sbb
jecxz
mov
jae
sub
fcomp
gs
lock
mov
jne
sub
mov
mov
ret
nop
addl
insl
and
ret
jmp
sbb
out
fsub
shll
jge
in
fwait
cwtl
fimull
shll
cwtl
dec
mov
imul
dec
ret
lods
andb
fnstcw
push
xor
cs
clc
mov
adc
test
out
pop
ret
iret
in
out
bound
mov
xchg
ficomps
sar
repnz
insl
add
movsb
mov
ret
bt
mov
out
loope
repnz
and
mov
popl
mov
add
mov
mov
lret
enter
mov
lahf
sub
mov
stc
adc
adc
push
fdivs
jo
lahf
add
pop
loopne
arpl
pop
jae
jg
test
mov
sub
out
sub
ret
mov
mov
xchg
cmp
into
aam
sbb
ret
mov
test
aaa
aas
sub
mov
ret
rolb
inc
ret
mov
rcll
test
shrl
add
ret
fcomps
ret
mov
mov
ret
fsubrl
inc
push
mov
and
lahf
test
inc
ret
cmpsl
pop
cltd
dec
sbb
jns
in
ja
rcrb
ret
jmp
mov
jne
cmp
daa
add
mov
ret
xchg
push
adc
add
xlat
xchg
sub
sub
ret
mov
sbb
in
fucomp
scas
fistps
mov
jmp
je
sub
pushf
inc
in
and
and
fldz
jl
mov
cmp
repz
xchg
mov
test
sbbl
jl
pop
mov
ret
mov
scas
int
ret
mov
sarl
pop
mov
and
dec
fmull
ror
jne
ret
mov
andl
out
and
xor
dec
ret
mov
xchg
ljmp
adc
inc
inc
js
iret
les
sub
bound
xor
mov
push
daa
sub
mov
divl
inc
hlt
shll
hlt
daa
jge
fcomp
sub
mov
add
dec
push
fwait
mov
mov
fistpll
mov
and
mov
add
ret
mov
pop
shl
push
mov
nop
jmp
ret
mov
bound
sbb
nopl
cmp
ds
mov
js
mov
scas
subl
add
jge
fimuls
mov
dec
mov
adc
rcrb
outsl
lock
insl
dec
fs
xchg
cmpsl
dec
stos
popa
mov
xchg
lcall
stos
cmp
or
mov
iret
mov
xchg
in
sti
pop
xor
imul
mov
stos
pop
jne
aas
push
add
or
jge
mov
mov
out
clc
inc
xor
ret
add
mov
test
loope
ret
push
and
ret
fsubr
pop
stc
std
bnd
fdivs
sbb
xor
push
int3
adc
pop
lret
ret
push
jnp
mov
xor
ret
xchg
jmp
cld
xor
mov
mov
jae
adc
in
ret
mov
lahf
es
pop
iret
pop
mov
sbbl
pop
push
inc
int
addr16
sub
pop
bound
data16
les
int
cwtl
jb
mov
aas
mov
ret
mov
roll
insb
ret
imul
push
repnz
xchg
sahf
clc
fwait
sub
out
and
shlb
fnsave
add
mov
adc
mov
adc
mov
pop
push
push
push
and
xchg
notl
adc
pop
ret
inc
xor
ret
mov
mov
push
daa
and
iret
xchg
mov
add
adc
sub
adc
js
or
xchg
ret
mov
out
out
mov
bound
sub
mov
add
pop
jg
lret
loope
mov
sbb
and
shll
or
mov
xchg
mov
icebp
adc
add
push
push
in
andl
add
adc
mov
rorl
xchg
xchg
or
mov
inc
repnz
sbb
popa
xor
push
js
dec
pop
popf
imul
jo
jmp
in
sub
mov
mov
inc
negl
fsubrl
pop
loope,pt
fs
mov
fsubr
les
and
mov
add
into
lret
test
iret
lret
imulb
xchg
push
pop
pop
dec
ds
pop
xchg
notl
adc
int
ret
jns
sbb
mov
push
loope
popf
cli
push
test
fwait
shrl
inc
ret
mov
jmp
dec
mov
pop
mov
fldcw
mov
repz
adc
jecxz
push
add
add
cmp
xchg
pop
loope
ret
mov
jp
int
sub
mov
sbb
xchg
test
mov
xor
nop
loopne
or
ret
mov
mov
mov
nop
push
adc
lret
mov
ss
sub
imul
push
int3
test
out
test
sub
add
mov
mov
jge
mov
stos
and
or
mov
ret
pop
int
inc
ret
mov
mov
mov
loopne
pop
pop
pop
jae
push
mov
mov
add
std
aas
test
mov
xor
mov
jle
lret
adc
mov
int
shrl
js
xchg
sub
mov
sbb
ja
jg
inc
ret
mov
aad
hlt
sti
inc
mov
mov
pop
xor
xor
imul
inc
iret
or
sti
add
dec
ret
mov
ret
mov
cmpb
xchg
sbb
ret
stc
in
ret
jg
lret
mov
out
or
popa
lea
popl
and
mov
or
cmc
int
ds
es
imul
add
mov
and
mov
adc
add
add
mov
push
sbb
add
dec
mov
add
mov
mov
mov
pop
loop
lock
mov
add
and
pop
mov
or
mov
dec
ret
mov
out
push
xchg
adc
mov
push
sbb
xchg
inc
ret
mov
pusha
ret
mov
pop
push
out
lods
sub
mov
jno
add
sub
mov
add
ret
cs
pop
or
lret
adc
test
fdivs
test
mov
inc
pusha
ret
mov
mov
add
gs
lret
xor
mov
ret
mov
ja
ret
mov
dec
out
cmpsb
xchg
cs
mov
scas
jns
sti
into
daa
lcall
pop
or
in
sbb
and
mov
mov
rcrl
xor
shl
fisubrs
sbb
or
in
lods
fcmovb
mov
xor
test
or
daa
sub
in
pusha
ret
mov
sbb
add
dec
sbb
jb
cmc
xor
adc
fcoml
sbb
cmp
clc
into
dec
ret
pop
sub
mov
ret
mov
jnp
insl
and
and
mov
enter
stc
jge
mov
mov
mov
hlt
push
std
inc
out
xor
xchg
mov
dec
ret
ret
and
mov
xchg
rcr
ret
ret
mov
ret
cmp
adcb
ret
mov
mov
xchg
in
data16
xor
js
ret
fstps
xor
cmp
adc
mov
adc
insb
ret
mov
leave
lret
pop
mov
adc
mov
imul
mov
cmp
jl
sub
mov
xchg
jbe
sbb
ret
test
rcl
add
fsubr
fcmovnb
lods
sbb
lds
mov
add
mov
inc
repz
loopne
cmp
jns
daa
pop
jmp
insb
ret
dec
or
ror
lret
jo
push
push
push
insb
ret
add
mov
in
and
out
insb
ret
xor
and
repz
and
mov
add
cmc
sub
jns
sub
mov
adc
jge
mov
sbb
lods
mov
sub
mov
jb
sbb
repnz
ret
arpl
in
cwtl
sbb
fldenv
add
das
lds
in
dec
sub
jmp
leave
mov
sarl
mov
shll
push
pop
mov
push
lret
inc
mov
xchg
repz
add
xchg
std
xchg
outsl
mov
mov
mov
inc
mov
adc
cmpb
jle
pusha
ret
mov
int
incb
add
sbb
rcl
sbb
negl
sub
mov
mov
ret
insl
and
mov
jmp
stc
call
jo,pn
out
cmp
pop
jne
das
inc
dec
fistpl
aad
cmp
ret
mov
push
push
mov
aad
sub
cs
cltd
inc
divb
jp
sarl
mov
mov
in
xor
xor
adc
sarl
mov
inc
js
mov
adc
dec
pop
adc
fildl
cmp
xlat
cmp
cltd
shlb
cltd
mov
mov
ret
cmp
xchg
test
mov
xor
or
mov
out
mov
pop
jg
sahf
cmp
sub
mov
mov
mov
jg
sub
xor
or
mov
sub
sbbb
aaa
aaa
cmpl
pop
idiv
arpl
cltd
inc
ficomps
aad
scas
or
mov
mov
bound
in
push
fnstenv
mov
ret
cmpsl
je
sub
outsb
lods
pop
ss
cmp
fs
mov
cltd
jne
orl
sub
push
vmovss
pop
jecxz
scas
mov
lods
or
int3
xchg
int
ret
dec
add
mov
sbb
aad
cmp
cmp
ror
inc
cmp
xor
cs
and
mov
insl
jbe
ret
or
mov
dec
mov
xchg
ret
mov
push
lcall
push
out
inc
ret
mov
mov
mov
repnz
add
and
ret
mov
mov
mov
mov
ret
mov
sub
mov
push
add
mov
add
outsl
jbe
adc
fwait
or
mov
mov
sub
ja
cmp
mull
dec
xor
mov
ret
xor
rorb
call
test
jle
cmpsl
and
mov
bound
mov
push
fs
in
xchg
inc
negb
ret
mov
notb
adc
dec
movsb
outsl
add
mov
add
push
push
jno
je
les
movsl
pop
aam
pushf
mov
cli
pop
dec
sbb
push
adc
sbb
push
fwait
out
jmp
mov
adc
adc
dec
pop
jb
mov
add
sub
mov
push
xchg
aas
mov
mov
sti
adc
cmp
loop
mov
add
mov
jne
loopne
scas
clc
pushf
cltd
mov
cmp
or
push
popa
xor
icebp
push
xor
mov
mov
aas
xor
bound
adc
subb
mov
ret
adc
lock
ret
ds
push
scas
repz
les
xor
dec
sbb
or
lret
xor
je
imul
mov
shll
fsubl
and
mov
fstps
stc
adc
jl
xchg
sbb
out
repz
jo
repz
ret
filds
add
mov
jne
mov
nop
sbb
insl
out
adc
pop
adc
movq
pop
stos
dec
ret
mov
mov
popf
cmovp
mov
pushf
sub
stos
imulb
sbb
jnp
xor
loopne
push
shrl
ret
mov
xchg
arpl
mov
inc
lret
shlb
add
pushf
jo
subl
lds
iret
ss
sbb
jmp
ss
mov
add
sbb
push
mov
mov
divb
divb
mov
mov
xchg
cmp
and
jle
jp
ret
dec
and
mov
pop
stos
rcrb
popf
or
mov
mov
jnp
sub
mov
jnp
adc
in
and
mov
or
movb
mov
into
stos
sub
mov
or
inc
ret
mov
add
cmp
fidivrl
hlt
stos
stos
jl
lahf
pop
movsb
mov
call
dec
ret
mov
sub
and
sbb
ret
lret
test
aam
mov
fiadds
mov
loope
popf
sbb
push
test
shll
cmp
cmp
xchg
xor
inc
inc
loop
into
pusha
ret
push
jecxz
out
mov
test
repnz
add
mov
mov
and
mov
ret
sub
insl
fistps
test
je
pushf
clc
cmpsl
add
mov
mov
or
out
dec
rcrl
pop
push
inc
push
es
xor
sub
mov
lret
loopne
arpl
cltd
cltd
pop
and
mov
aam
cmp
mov
daa
xchg
xchg
sub
mov
iret
pushf
inc
inc
in
nop
pop
fnstsw
mov
outsl
push
ja
mov
cmpsl
and
test
pop
push
fmuls
add
ret
mov
jnp
xor
fmull
jb
test
add
popa
or
inc
mov
push
mov
jae
inc
ret
mov
cld
iret
or
popa
movsb
adc
add
les
adc
mov
pop
jg
pusha
ret
mov
mov
dec
ret
inc
addr16
mov
mov
pop
movsb
pop
adc
shlb
cs
mov
mov
xorb
pop
adc
sub
imul
out
inc
mov
fnstsw
ret
insl
mov
bound
mov
mov
imul
ret
ret
mov
xor
mov
push
adc
add
mov
jne
out
das
add
sbb
stc
lret
pusha
ret
mov
add
rorl
pop
leave
lret
aaa
jge
cwtl
xlat
xor
cmp
lods
cwtl
addr16
mov
ret
mov
lahf
sti
shlb
add
add
ret
and
outsl
mov
loop
push
pop
sub
mov
scas
adc
sub
mov
xor
mov
arpl
mov
popa
cld
lret
hlt
ja
pop
lcall
repz
cmp
scas
fistps
ss
cmpl
sub
mov
ret
mov
sbbl
xchg
add
add
mov
ret
arpl
or
xor
jbe
and
lea
int3
cwtl
mov
in
insb
ret
mov
dec
adc
fadd
test
ret
mov
cmpsb
add
int3
lret
or
mov
xor
mov
sbb
enter
sahf
dec
stos
out
pusha
ret
mov
mov
mov
aaa
jno,pn
insb
ret
mov
frstor
mov
js
sbb
popa
ficoms
pop
xchg
in
mov
pop
or
mov
pop
cli
xchg
imull
add
rcrb
aaa
in
dec
aaa
jl
nop
inc
ret
mov
cmc
sbb
ja
mov
push
xor
xorl
movsl
test
inc
add
mov
call
mov
ret
ljmp
mov
fidivrl
mov
test
jmp
xchg
int
sub
push
xchg
adc
arpl
popf
jmp
adc
gs
push
or
rolb
push
enter
pop
ffree
pop
push
cli
fwait
gs
mov
mov
dec
ret
mov
xchg
inc
jecxz
fucomi
pushf
hlt
push
sti
add
ret
mov
cltd
cmpsl
ret
inc
ret
mov
ret
inc
ret
and
sbb
add
add
xchg
sbb
in
jge
ret
mov
ret
insl
movsl
rcr
pushf
push
jns
lock
sbb
loopne
leave
mov
dec
ret
inc
xor
adc
pop
adc
scas
push
bound
xchg
fwait
mov
rcll
mov
jmp
push
inc
lods
adc
fdivl
adc
mov
or
ds
sub
mov
mov
call
inc
jb
repnz
pop
cltd
xor
or
pop
pop
xor
and
leave
jb
cltd
sub
mov
or
out
inc
ret
mov
mov
push
or
mov
sbb
jl
movl
jns
push
push
sbb
repnz
insb
ret
mov
popf
push
dec
ret
mov
xor
jbe
arpl
test
rorb
rolb
add
outsl
dec
ret
pop
minps
cmc
imul
lock
xchg
cmp
add
push
andb
add
fdivs
sub
ret
mov
ret
movsl
icebp
mov
mov
mov
test
fmull
ret
mov
mov
aaa
xorl
call
mov
pushf
imul
mov
cmpsb
mov
mov
fbld
pop
enter
loope
stos
pushf
adc
addr16
pop
xchg
pop
int3
jecxz
jl
das
or
mov
pop
out
xlat
or
nop
idivl
and
mov
cmp
aaa
push
cmp
imul
pop
push
les
ret
mov
ret
mov
add
push
dec
std
cmpsb
fbld
add
xchg
or
sbb
shr
lret
fimuls
mov
mov
pop
nop
cmp
ret
or
mov
in
dec
sub
push
xchg
jmp
imul
test
mov
push
fmul
ljmp
imul
inc
mov
mov
cs
jp
mov
mov
in
pop
push
cwtl
push
test
roll
fdivr
mov
sub
mov
xor
aaa
in
sbb
mov
jecxz
xchg
imul
fs
mov
mov
sub
outsb
or
mov
mov
fildl
add
inc
dec
movsl
sbb
ret
mov
nop
bound
add
inc
sbb
out
sbbb
xlat
fcompl
xlat
xchg
dec
ret
mov
fcomps
lods
inc
stos
int
sbb
mov
mov
push
jb
sub
mov
adc
stos
xchg
cwtl
sub
push
xchg
dec
adc
jbe
loope
int3
scas
fcmovnu
pop
xor
inc
inc
rclb
fnsave
jne
in
xchg
sbb
ret
adc
mov
dec
add
jp
aaa
loope
cltd
pop
cmpsl
movsl
js
in
mov
or
iret
enter
arpl
out
clc
add
dec
and
mov
imul
ret
mov
jg
inc
ret
mov
lock
mov
stc
lock
inc
adc
ret
mov
mov
scas
push
inc
mov
inc
add
sbb
jge
leave
loop
scas
outsb
scas
adc
les
lahf
insb
ret
out
testb
rcrl
jecxz
lock
aaa
adc
sbb
orl
or
pop
sbb
jmp
pop
mov
jecxz
jmp
xchg
lods
adc
sub
ja
lock
adc
and
mov
and
mov
sbb
mov
ret
hlt
jo
lret
es
ret
dec
shrb
into
out
pushl
xor
ret
mov
stos
rorl
testb
sub
mov
nop
hlt
inc
fwait
xor
js
mov
inc
lds
or
pop
add
repnz
ret
sbb
xor
pop
dec
ret
mov
pushf
mov
dec
mov
push
aad
jb
and
inc
shlb
mov
pop
cmp
and
pop
dec
or
mov
bnd
xchg
stos
out
scas
jp
aam
popf
push
ret
mov
or
mov
lret
add
mov
arpl
loopne
daa
cltd
les
insl
sbb
pop
adc
jge
dec
scas
test
or
mov
mov
mov
fmuls
add
lods
std
subb
aaa
sub
xchg
in
mov
addb
add
adc
repnz
xchg
mov
add
add
mov
ss
mov
mov
sub
mov
push
add
xchg
and
lahf
cmpsb
fdivrl
pusha
ret
in
int
mov
movsl
pop
test
mov
pop
in
cld
fcmovnb
sub
je
lods
mov
fsubrs
xor
data16
mov
in
mov
pop
push
enter
scas
cld
lods
lcall
insl
jecxz
ret
mov
js
repz
aam
xor
js
insl
in
add
cmpb
xorl
lea
ja
js
cmpsl
push
dec
pop
stos
icebp
in
xchg
jno
mov
das
shlb
mov
mov
or
mov
dec
jae
and
mov
repnz
fimull
adc
daa
call
mov
cmpsl
add
mov
mov
aaa
lods
stos
mov
mov
pop
dec
ret
hlt
ret
add
popa
sbb
mov
idivl
flds
mov
es
movsl
jl
xlat
pop
add
cmpw
lret
out
xchg
pop
or
mov
out
pushf
movl
push
iret
loopne
xchg
loope
lcall
dec
ret
mov
or
cmc
jbe
mov
imul
arpl
xor
mov
rclb
arpl
xchg
imul
shrb
add
push
push
lods
push
cld
push
xchg
mov
pushf
xabort
push
call
insl
sahf
lret
push
inc
ret
and
ret
or
fnstsw
sbbl
dec
ret
mov
add
dec
jmp
ret
push
lock
mov
inc
dec
add
lahf
in
shll
push
xchg
ret
or
ret
xchg
out
jl
and
mov
add
dec
jg
aad
je
mov
clc
pusha
ret
mov
clc
mov
dec
ret
or
mov
loopne
adc
cmpsl
aad
ret
jnp
dec
ret
mov
imul
jne
jo
inc
fwait
pop
loope
or
mov
mov
stc
pop
cli
and
xlat
sbb
pop
pop
push
push
int3
inc
ret
cld
shl
loope
call
mov
mov
mov
mov
inc
or
push
repnz
fbstp
xchg
jge
xchg
jmp
out
dec
ret
mov
adc
add
rolb
ret
or
and
lods
pop
shll
int3
cmp
xchg
stos
popf
push
xor
ret
mov
pushf
or
mov
shll
add
enter
add
lods
ja
imul
xchg
ud2
out
xchg
mov
std
dec
ret
jmp
add
testb
sub
jae
fwait
dec
in
test
ret
popa
adc
or
jl
ret
mov
push
hlt
adc
or
ret
mov
mov
xchg
xchg
outsb
mov
jno
mov
mov
xor
mov
add
sbb
cmp
ror
cli
sub
mov
mov
mov
pop
cmpsb
mov
dec
pusha
ret
mov
push
icebp
cmp
imul
sub
outsb
lods
add
mov
or
mov
aas
xor
add
sbb
xor
dec
pop
push
dec
adc
and
mov
jb
ret
in
xchg
adc
adc
cmp
aaa
mov
std
jns
xlat
in
xchg
jle
jl
xchg
inc
ret
mov
xor
jae
inc
push
push
dec
aas
out
stc
lret
xchg
cwtl
pop
pop
out
out
xchg
xor
int
jae
xor
jg
and
mov
xor
mov
andl
pop
or
jmp
ret
mov
dec
loopne
stc
mov
iret
cwtl
ret
xchg
sahf
std
rcll
movsl
clc
mov
out
cs
aad
sub
mov
and
stos
pop
jle
lods
or
mov
leave
xor
mov
sarb
jns
jbe
xor
out
add
sbb
and
imul
lret
daa
sbb
dec
jecxz
dec
stos
jmp
mov
into
adc
enter
add
scas
movb
out
jmp
ret
mov
insl
xchg
dec
dec
push
loope
inc
or
jo
or
mov
imul
add
mov
mov
kxnorw
es
add
sbb
jg
ret
pop
aaa
jge
lea
mov
xchg
nop
jo
xor
ret
shl
pop
mov
shr
add
mov
lods
and
mov
jle
lret
test
jmp
jnp
dec
mov
fdiv
rclb
adc
stos
xchg
mov
and
repz
jnp
push
lret
and
and
push
pop
ja
jge
mov
add
in
and
mov
add
ret
mov
push
cwtl
cmp
inc
fcmovnb
pushf
std
dec
mov
mov
insb
ret
stos
sbb
jge
test
ret
fsubr
inc
cmp
mov
out
fidivl
insb
ret
mov
hlt
lret
movsl
sbb
add
fcmovu
icebp
bound
insl
lods
movsb
xchg
in
ss
mov
or
inc
mov
mov
mov
adc
push
adc
fwait
cs
push
cld
adc
add
mov
cmp
jns
mov
ret
mov
fistps
lahf
inc
pop
ud2
pop
ljmp
dec
test
push
pop
xor
cs
xchg
lock
jnp
push
jecxz
mov
int
ret
mov
xlat
lods
in
fcmove
out
xor
fwait
repz
ret
mov
mov
pop
or
mov
enter
add
mov
je
lahf
adc
xlat
sbb
mov
stos
imul
ret
movb
aas
xlat
ret
adc
lcall
jbe
enter
add
jp
inc
bnd
test
std
fmuls
and
out
xchg
push
cmp
push
push
mov
cmp
setg
cmpsb
out
cli
lret
jecxz
aad
pushf
int3
sub
mov
dec
ret
lret
mov
lods
inc
push
lret
and
mov
mov
jb
jp
nop
fdiv
add
int3
in
in
pop
out
imul
outsb
inc
ret
insl
stos
lock
js
nop
dec
imul
mov
stc
arpl
mov
imul
icebp
js
mov
outsb
dec
inc
inc
ret
mov
ret
push
pop
or
or
xor
add
ret
fwait
roll
cmp
jmp
incb
add
pusha
ret
mov
mov
inc
ret
mov
aaa
pop
mov
rolb
mov
cmpsl
pop
adc
sub
pusha
ret
mov
or
mov
fmull
shlb
xor
mov
les
int3
stc
lcall
call
cmpsb
jp
lret
out
push
or
mov
fimull
imul
jecxz
loopne
sbb
mov
inc
add
dec
scas
flds
adc
ret
in
dec
jmp
cli
pushf
and
scas
mov
mov
mov
ret
dec
ret
mov
and
mov
push
xchg
mov
jp
push
enter
sub
add
aas
xchg
call
fstps
adc
cmp
push
jb
xorl
add
mov
call
cmpsb
mov
mov
fdivr
push
out
lret
xchg
add
add
mov
lcall
aaa
mov
mov
xor
ret
mov
lcall
sub
scas
sub
mov
stos
push
mov
cmp
ret
cmp
inc
ret
mov
int
sbb
lock
out
movsl
rcl
ret
dec
fdivs
stos
fistps
pop
cltd
xor
add
mov
das
add
mov
stc
mov
addr16
jns
jp
inc
enter
ret
xchg
subb
mov
add
mov
add
ljmp
add
cmp
repz
xor
push
xchg
hlt
pop
outsl
adc
ret
mov
mov
ret
mov
and
test
or
mov
int3
push
xchg
out
dec
ret
mov
add
lods
aad
daa
and
sub
ret
xchg
scas
or
mov
sahf
enter
or
push
xor
insb
ret
jle
mov
out
inc
jnp
ljmp
add
mov
cmp
popf
int3
pop
movsl
cmp
adc
fisttpl
xchg
mov
xor
fs
mov
dec
ret
mov
xor
mov
cmc
je
add
mov
leave
in
mov
fwait
xor
rorb
push
shrb
data16
in
pop
xchg
pop
aaa
lcall
mov
mov
mov
rcrb
ret
xchg
add
shrb
mov
mov
push
dec
cltd
enter
add
pop
add
mov
jmp
push
addr16
pushf
jo
xor
dec
ret
sbb
or
dec
sbb
outsl
sti
and
flds
xor
cmp
ljmp
js
jmp
jg
or
rcrb
rorl
addb
mov
mov
leave
push
int3
cld
mov
adc
loopne
pop
xchg
ss
sti
fs
mov
ds
jne
push
pop
jno
lret
mov
jae
in
pop
and
mov
std
mov
jg
pop
xchg
mov
xchg
ja
and
mov
xchg
ret
mov
rolb
test
mov
int3
cmpsb
mov
in
mov
aam
iret
sbb
lret
xchg
jmp
std
imul
cwtl
sbb
xchg
inc
ret
mov
or
mov
cmp
sub
das
dec
jbe
ficoml
ret
jmp
mov
je
mov
jno
int3
pop
xchg
mov
ret
enter
arpl
add
mov
int
pop
lahf
or
push
repnz
enter
ret
jno
cld
push
xor
insb
ret
mov
mov
mov
add
push
push
outsb
lds
sbb
or
mov
sbb
mov
in
mov
outsl
fsubs
mov
test
add
outsl
push
sarl
mov
mov
mov
push
or
push
out
cmp
pop
xchg
mov
lahf
nopl
add
mov
xor
xchg
subl
add
push
jae
es
mov
push
loop
stc
jmp
dec
mov
xor
cmc
out
mov
mov
cmp
mov
ret
mov
mov
ljmp
dec
and
adc
jp
movsb
mov
add
mov
ficomps
xchg
or
push
push
loopne
jae
dec
daa
movsb
jno
pushf
pop
jp
cmp
lods
add
mov
jg
push
das
fisubrs
mov
and
mov
icebp
mov
fisttpll
ret
mov
pop
jge
xchg
idivl
rorl
mov
jmp
lds
dec
out
movsb
fwait
or
ss
and
mov
mov
ret
pusha
ret
add
mov
test
inc
ret
mov
add
movsb
xor
or
add
pop
mov
sahf
mov
cs
xor
adc
scas
lock
shll
or
inc
lods
or
sbb
cmpsb
adc
ret
mov
or
mov
adc
mov
shr
lods
jno
clc
or
int3
sub
jecxz
fisubs
sub
loope
aam
pusha
ret
mov
ret
xor
ja
mov
divl
daa
add
cmp
mov
cmpsl
sbb
std
das
fcmovnb
rclb
adc
mov
jb
shll
xchg
in
cmp
inc
scas
cmp
ret
icebp
xor
lcall
jmp
mov
mov
test
loope
inc
rorl
dec
mov
mov
lahf
mov
inc
add
mov
in
mov
dec
mov
ret
dec
ret
mov
add
les
dec
ret
outsl
and
sub
mov
mov
fs
mov
mov
bound
xchg
mov
ret
cmp
push
int
mov
lret
lds
test
shl
rorl
daa
push
push
or
mov
add
jns
add
andb
mov
xor
shll
xlat
push
or
mov
inc
insl
adc
in
pop
or
mov
std
xchg
mov
and
inc
ret
mov
mov
dec
ret
pop
add
xchg
adc
dec
ret
mov
or
in
cmp
cmc
sub
movsb
jb
mov
mov
shrb
jne
fistl
sarl
xor
iret
mov
and
sarb
shll
in
add
mov
pop
mov
subl
nop
movsl
sub
pop
cmp
cmp
mov
xor
clc
push
outsl
enter
or
add
cmp
lret
push
stos
data16
lret
mov
test
aaa
popf
ja
adc
movsb
dec
dec
ret
ficoml
or
mov
hlt
sbb
xor
mul
out
nop
into
pop
loopne
ljmp
shrb
icebp
sbb
xor
ret
scas
sub
js
mov
mov
subb
dec
rolb
cmpsb
cmp
push
dec
hlt
adc
mov
shll
mov
adcb
dec
ret
mov
mov
xchg
out
dec
bound
push
mov
ret
repz
cmc
mov
mov
adc
mov
test
push
mov
cmpsb
test
stos
add
mov
mov
add
mov
sbb
jo
mov
cmp
cmp
push
cmpsb
fsts
xchg
xchg
xchg
jb
sub
mov
inc
jb
ret
inc
push
arpl
popa
arpl
out
shrb
rcr
inc
jne
mov
ds
outsb
lods
jge
cmpsl
sbb
std
incb
lods
pop
inc
ret
dec
ret
sbb
call
out
sti
fsubrs
out
cld
sarb
sub
mov
pushf
imul
sub
mov
imul
fistpll
add
ret
mov
mov
mov
push
in
or
mov
and
mov
and
mov
dec
mov
ret
mov
stc
cli
cli
loope
ret
popf
loope
std
movsb
loop
xchg
sbb
mov
adc
mov
ret
mov
jge
push
mov
fdivs
call
and
mov
mov
push
mov
ret
outsb
lahf
mov
sbb
sbb
cltd
cmp
mov
push
sbb
scas
lret
data16
aam
sub
mov
call
push
cmp
add
mov
jmp
loope
cmc
decl
add
popl
ret
mov
idivl
arpl
cwtl
pop
pop
in
sbb
mov
mov
inc
pop
cwtl
rcrl
push
add
pop
leave
inc
lahf
jo
jnp
cmp
ret
mov
xchg
or
loop
outsl
push
add
mov
mov
pop
stc
cmp
jl
inc
ret
mov
mov
sbb
mov
dec
jne
iret
movsb
stos
arpl
ret
mov
cmp
iret
mov
add
adc
mov
ret
and
stos
cmp
ret
pop
aad
inc
leave
mov
aaa
shll
movsl
mov
lock
repnz
fdiv
iret
add
mov
outsl
sbb
and
or
add
sbb
lcall
add
push
pop
ljmp
jl
clc
cmp
mov
pop
push
shll
adc
xchg
mov
and
fimull
push
lods
pop
or
jnp
sbb
mov
sti
testb
hlt
cmc
adc
inc
ret
loopne
push
cvttps2pi
mov
fisubl
mov
pop
imul
jmp
ret
mov
push
adcb
mov
inc
les
out
popf
sbb
ret
orb
jmp
xor
add
xorb
cwtl
adc
enter
cwtl
and
cmc
movsl
arpl
mov
cmp
adc
add
shrl
sbb
dec
ret
mov
ret
xor
nop
in
lea
add
sub
xchg
es
mov
bound
fidivrs
ret
mov
cmp
out
jmp
das
cli
jmp
lcall
mov
mov
mov
aad
add
pop
in
adc
in
sub
iret
and
pop
mov
pop
std
movsb
mov
sbb
mov
roll
imul
push
mov
cmpsb
jmp
test
jecxz
mov
mov
xchg
out
fisubrl
enter
push
sbb
popa
nop
sbb
mov
or
lcall
mov
lcall
insl
cmpsl
jp
xchg
aas
ret
mov
pop
mov
cltd
int3
subl
push
lods
pop
cmp
mov
push
cmc
mov
push
cmp
pop
xlat
fucomi
pop
pop
xlat
xor
mov
adc
fmul
lods
mov
scas
mov
ret
mov
or
mov
sub
mov
cmp
loop
pop
pop
lahf
adc
mov
fisubl
add
in
mov
and
daa
pop
inc
cwtl
mov
jle
shll
mov
mov
xchg
xchg
xchg
js
mov
pop
sbb
jae
add
data16
lock
push
mov
inc
ret
mov
pop
cmc
lcall
xchg
lds
inc
jmp
fimull
or
cmpsb
mov
mov
xchg
push
and
mov
add
js
popf
movsl
es
push
jns
int
push
or
fsubl
add
add
mov
adc
add
dec
ret
mov
stos
clc
mov
mov
xchg
sub
insl
jo
ret
mov
mov
lcall
sbb
std
out
insl
xchg
in
mov
mov
aaa
xorl
insl
mov
ret
stos
mov
pop
jns
push
xorb
mov
push
fs
jge
fsubrl
rcll
outsb
xor
loopne
stos
sarb
sbb
push
stc
or
daa
inc
ret
xor
rolb
mov
ja
gs
mov
mov
scas
xchg
jg
js
inc
cmp
mov
inc
js
iret
dec
lods
push
push
inc
mov
and
ja
mov
ret
mov
xchg
sub
mov
cmp
jmp
push
push
test
lahf
lcall
add
dec
iret
xlat
in
fnstsw
movsb
mov
cmp
loop
ret
dec
ret
mov
ret
mov
into
xor
ret
xor
cmp
pop
cs
rcr
stos
push
ret
sti
pop
xor
mov
pop
inc
aad
ret
mov
ret
sahf
push
imull
insl
sub
test
inc
test
inc
ret
hlt
mov
jne
shlb
adc
aad
fwait
js
push
inc
ret
mov
ret
mov
loopne
call
jb
add
mov
sbb
pushf
frstor
mov
cmpb
ret
mov
mov
hlt
sbbb
jbe
insl
mov
mov
ret
jb
or
mov
stos
push
inc
ret
jns
ret
mov
ljmp
gs
fdivl
adc
xchg
gs
push
mov
hlt
cld
mov
mov
jmp
mov
xchg
sub
adc
adc
cli
jg
sbb
jecxz
pop
xchg
arpl
push
mov
add
add
in
cmpsb
mov
leave
aam
testl
cmc
adc
cmp
test
adc
cmpsb
out
mov
mov
mov
icebp
jecxz
cwtl
add
mov
les
clc
stos
cmp
mov
lods
or
mov
jmp
call
xchg
les
pop
or
mov
mov
pop
pop
jb
dec
push
xchg
xchg
adc
mov
lds
xlat
into
es
enter
push
or
mov
add
addr16
adc
and
mov
mov
inc
ret
mov
mov
xor
pop
fcomps
mov
mov
mov
mov
icebp
add
mov
test
push
leave
out
pop
push
sub
adc
notl
rol
aas
jle
dec
ret
std
lds
add
jbe
adc
and
stc
mov
mov
imul
mov
adc
std
pop
xchg
ret
mov
dec
and
mov
push
ficompl
mov
add
out
les
xchg
push
xchg
push
hlt
cmp
decb
adc
adc
out
int
lds
cmp
leave
or
mov
scas
imul
hlt
daa
jecxz
and
mov
xor
ret
imul
sub
mov
push
and
mov
and
fisttpll
mov
cwtl
in
lods
adc
push
pop
ret
push
jecxz
dec
test
jg
test
push
sub
mov
imul
sbb
sbb
ret
mov
pop
stos
xchg
nop
or
mov
repnz
popf
js
jns
int
ret
mov
outsb
loop
div
out
push
sbb
mov
sub
stos
cmp
movsb
mov
jb
testl
ret
mov
jne
mov
add
ret
mov
mov
inc
push
fcoml
jns
add
mov
add
out
and
mov
sbbb
push
xor
pushf
testb
pop
sbb
ret
dec
stc
in
pop
sub
ret
mov
and
div
jecxz
sub
jae
or
gs
je
enter
rcll
mov
aaa
aaa
int3
das
orl
dec
std
stos
cli
xor
stos
scas
pop
dec
add
mov
sbb
imul
lds
ret
fwait
sub
mov
fdivl
stc
fnstsw
pop
testb
adc
testl
lret
stos
loopne
nop
adc
mov
mov
xor
ret
fbstp
mov
ret
mov
or
pop
adc
cmp
mov
daa
xor
paddsb
notb
or
ret
mov
bound
out
in
push
ja
rcrb
and
ret
sub
adc
test
ret
mov
add
jl
sub
mov
inc
cltd
pop
ret
je
add
mov
push
in
mov
mov
mov
fcmovne
adc
cmp
scas
jo
repnz
enter
test
sbb
pusha
ret
aam
xchg
dec
ret
bound
xor
dec
test
jbe
pusha
ret
js
repnz
adc
leave
pop
xor
sub
mov
leave
push
cmc
jge
test
ret
mov
test
xor
and
adc
jmp
mov
add
mov
push
in
cmp
dec
mov
push
and
scas
sbb
lock
popa
test
ret
mov
add
inc
js
aad
enter
sahf
cld
hlt
in
jb
popf
inc
mov
call
xchg
sbb
out
in
pop
xchg
sub
lahf
fisubl
test
xor
sbb
mov
repnz
mov
cwtl
push
or
ret
mov
mov
xor
ret
jnp
or
shlb
cmp
jg
add
mov
ret
mov
ret
mov
lock
inc
ret
mov
rolb
js
push
ficomps
push
lret
push
and
mov
xor
ret
lret
lods
sbb
or
aad
lret
xlat
rorb
add
push
addl
jecxz
adc
mov
add
mov
ret
mov
inc
adc
stos
xchg
movsb
dec
bound
ret
mov
dec
pop
inc
ret
adc
rcr
cmp
mov
ret
mov
das
in
jno
dec
ret
mov
sub
popf
outsb
stos
xor
push
ja
pushf
fld
dec
ret
mov
out
dec
hlt
jge
sarb
popa
mov
mov
mov
and
mov
mov
clc
sub
testb
ficompl
add
ss
jmp
mov
sub
ss
or
mov
nop
xor
inc
xor
fistpl
aam
pop
push
loope
je
nop
pop
push
fimull
ret
in
test
jno
sbb
test
or
pop
aaa
mov
ret
mov
mov
xor
fs
jle
test
mov
iret
inc
cmp
add
fisubl
outsl
out
clc
add
mov
inc
ret
mov
mov
stos
sub
add
mov
movsl
mov
gs
add
loope
and
sbb
movsb
inc
mov
aaa
insl
mov
les
jbe
ret
mov
ret
mov
cmpsl
std
xor
jb
cmp
cmp
mov
leave
add
mov
add
mov
mov
xor
push
cltd
popf
xchg
xor
mov
jg
ret
mov
mov
pushw
add
jmp
mov
push
mov
push
xorb
test
xchg
das
mov
pop
add
and
sub
mov
or
mov
pop
in
jo
pop
popf
mov
add
sub
inc
inc
or
inc
ret
mov
jmp
scas
lret
lea
jne
stos
push
dec
mov
sub
adc
sub
pushf
push
mov
sub
jp
rol
pop
jb
fcompl
add
and
mov
ds
mov
xchg
ss
or
lret
mov
add
push
notl
cli
pop
jnp
xchg
fbstp
sbb
adc
jmp
test
repnz
ret
repnz
jae
mov
aas
mov
aas
jae
sbb
push
aad
mov
jbe
jnp
je
adc
mov
inc
push
dec
dec
jp
hlt
gs
cmp
and
mov
sbb
push
call
ret
fstpl
pop
mov
sbb
jp
sbb
jmp
or
cltd
jge
or
xlat
add
mov
jle
loope
ret
jno
jbe
test
jbe,pt
xlat
push
adc
popa
adc
sub
shrl
xor
push
or
mov
or
loopne
xchg
jno
fs
xchg
add
mov
out
mov
add
xorl
mov
xchg
dec
sbb
adc
add
dec
xor
js
mov
mov
movsl
xchg
out
ret
imulb
cmpsb
lods
inc
add
ljmp
adc
mov
pop
faddl
add
xchg
add
inc
jmp
and
js
int
movsb
sbb
mov
sbb
scas
mov
adc
ja
aad
inc
xor
add
mov
push
lods
xchg
sbb
adc
adc
inc
pop
cmp
addr16
add
xchg
xchg
cld
mov
push
sub
test
jo
cli
inc
ret
dec
mov
jmp
std
mov
push
or
in
jmp
fcomip
ja
hlt
pop
or
stos
mov
and
rorl
push
pop
dec
scas
fdivs
fisttpll
ret
mov
mov
sahf
xchg
cmp
loopne
xor
cmp
hlt
push
fbstp
jns
ret
mov
sub
mov
add
jne
add
mov
scas
out
mov
jmp
ret
mov
ret
mov
push
mov
add
and
mov
ret
js
mov
orl
or
aaa
cmp
pop
fwait
add
mov
push
std
push
xchg
popf
popf
out
hlt
cltd
mov
lock
popf
movsl
xchg
mov
add
or
rcll
ret
inc
ret
mov
movsb
imul
push
mov
ret
fbstp
std
ss
adc
pop
mov
repz
jmp
push
inc
scas
lods
cltd
shll
add
into
pop
mov
sbb
push
fdivrl
ret
cwtl
aad
roll
push
jle
sub
lock
ret
mov
fsubl
add
mov
cmp
aam
jmp
sbb
ds
push
sub
and
add
cmc
popa
add
mov
mov
test
outsl
jp
je,pn
iret
je
xor
inc
ret
insb
ret
ret
movsb
adcb
ret
push
fs
mov
ret
mov
or
cwtl
inc
mov
cltd
cmp
frstor
aam
sti
cld
andb
aad
test
cmp
scas
push
mov
ljmp
push
fidivs
pop
jb
mov
push
aad
inc
ret
mov
bound
push
js
xor
pop
daa
jge
push
xor
dec
pop
cmp
add
inc
ret
mov
xchg
sarl
ret
mov
pop
mov
sbb
out
pop
mov
cld
mov
outsl
das
bound
loopne
push
adc
mov
movsl
sarb
hlt
dec
ret
mov
mov
mov
mov
ja
jmp
addb
pop
mov
rcll
ja
das
imul
push
lea
mov
xchg
xor
mov
fstpl
ret
out
cltd
shr
pop
outsl
lods
add
jmp
clc
dec
and
sub
dec
ret
repnz
out
sub
mov
icebp
jbe
scas
sub
xacquire
xor
add
ret
mov
mov
cltd
mov
mov
lods
lea
pop
es
sub
std
jg
mov
ret
lock
dec
mov
xor
outsl
pop
dec
ret
mov
loope
les
push
dec
and
in
mov
dec
ret
or
mov
faddl
sub
sti
adc
std
adcl
mov
xor
rcrb
jne
testl
loope
jmp
fxam
out
or
mov
shlb
out
stc
adc
mov
js
push
es
fistps
mov
xchg
sahf
pop
or
mov
mov
add
popf
adcb
push
and
mov
mov
mov
loope
jle
insl
mov
pop
xchg
cmp
shll
inc
mov
jbe
mov
adc
and
xchg
ret
mov
mov
mov
mov
jle
mov
mov
push
ret
dec
ret
jb
dec
push
ret
sbb
ret
mov
cmp
pop
dec
ret
mov
lret
sbb
sarl
in
js
jl
and
ret
test
jp
mov
repnz
mov
adc
inc
stos
cmp
adc
jmp
nop
push
into
filds
ret
mov
mov
sbb
lret
fsub
pop
dec
jl
pop
aaa
lcall
cli
mov
outsl
xchg
jno
ret
mov
ret
mov
addr16
js
jle
xor
daa
inc
ret
mov
mov
sahf
fstpt
cmp
sti
ret
stos
loope
ret
mov
push
bound
add
xor
fwait
inc
mov
adc
or
mov
scas
out
sub
dec
mov
add
mov
add
imul
aaa
dec
add
out
push
lcall
mov
iret
mov
es
lcall
das
pop
stos
xchg
dec
insb
ret
inc
sub
cmc
jmp
lods
int3
lds
cmp
pusha
ret
mov
ret
mov
push
cmpsb
mov
lret
add
lret
in
nop
sub
mov
ret
insl
push
pusha
ret
out
fstpl
jge
loop
xor
or
fbstp
push
in
ss
shlb
es
in
cltd
xchg
mov
inc
rclb
and
ret
repnz
ds
mov
gs
leave
clc
scas
cld
or
std
pop
jl
adc
sahf
or
pop
inc
outsb
xchg
cwtl
imul
in
cld
decb
jb
aad
ret
mov
iret
int
ret
mov
mov
jnp
rcrb
xor
fisttps
mov
sti
aam
daa
ds
iret
iret
dec
fldl
inc
mov
shll
cmp
lds
inc
mov
mov
fidivs
cmpsb
add
mov
inc
ret
mov
pop
int3
xor
repnz
xor
mov
ret
mov
xorl
mov
and
jmp
add
in
in
hlt
pop
or
mov
pop
popf
fsubp
sar
data16
jl
lods
add
test
sbb
sub
mov
mov
add
into
mov
mov
fldl
xchg
pop
cwtl
adc
orl
ret
mov
push
adc
or
push
pop
pop
in
mov
hlt
roll
pop
aam
popa
mov
ret
test
hlt
popl
xor
xlat
fs
mov
loope
shrb
add
xchg
jp
add
dec
js
jmp
jmp
jno
sbb
incl
ret
xchg
adc
shr
add
mov
cmc
popa
paddusw
mov
sti
cmpb
insb
ret
mov
flds
stos
push
enter
cmp
pop
and
in
dec
sbb
adc
scas
cmp
movb
mov
mov
pcmpeqw
push
aad
mov
shlb
addr16
decl
dec
ret
repz
sarb
stc
fstl
xchg
xor
sub
mov
out
xor
in
pop
cmp
xchg
mov
mov
inc
ret
mov
out
and
jbe
les
or
cmpsb
ret
repz
ret
mov
jb
test
add
jecxz
lret
stos
add
movsb
jno
mov
popa
push
inc
xor
mov
jbe
ret
popf
in
jo
iret
mov
mov
jle
loop
psllq
iret
data16
mov
xchg
mov
dec
je
ret
mov
call
pop
rcrl
xchg
pushf
bound
mov
xchg
pop
add
mov
cmpsl
dec
pushf
int
xchg
test
movsl
or
mov
jp
test
xchg
lahf
mov
mov
mov
push
sub
jmp
ret
pusha
ret
mov
mov
lds
inc
ret
mov
add
add
call
inc
ret
mov
ret
mov
cmp
mov
iret
adc
std
cmp
sar
aad
ret
mov
nop
rol
sbb
ret
sbb
xchg
ret
cli
mov
popa
stos
in
in
adcl
add
add
rorl
and
and
mov
fdivs
insl
js
pop
add
mov
add
xor
and
add
dec
decb
sub
lods
and
jne
dec
push
je
adc
xlat
cmp
xchg
cmpsb
lcall
sub
dec
xchg
addr16
jge
mov
lret
aad
dec
js
sbb
enter
push
jb
inc
add
and
mov
ficompl
jno
mov
ret
mov
aam
negl
loop
and
mov
clc
sti
push
inc
aas
xchg
add
aam
ret
mov
fidivrl
mov
and
pop
cmpsl
push
sbb
adc
inc
movsb
ss
inc
sub
pop
mov
mov
cmp
mov
ret
mov
or
int3
lds
adc
ret
mov
add
adc
mov
test
cmp
lock
loop
inc
lods
repnz
int3
jne
popl
ss
adc
dec
sbb
push
sub
mov
push
mov
push
movsb
lea
dec
pop
enter
mov
out
scas
test
xchg
jmp
icebp
add
adc
mov
xor
inc
stc
lcall
call
push
icebp
adc
jbe
ficoms
ret
mov
mov
ret
mov
dec
mov
cmp
lods
push
andb
ret
mov
cmp
xor
mov
stc
mov
cmpsb
stc
or
mov
add
sub
mov
scas
push
sbb
rcrl
push
scas
sarl
adc
add
jge
dec
pop
and
sti
lods
mov
add
mov
pop
stos
out
push
xchg
loope
pop
inc
jne
ret
nop
out
lds
int3
or
sarl
lcall
lock
and
jge
push
cld
cmp
ret
push
and
fistl
lcall
mov
jo
cld
out
mov
outsl
testb
in
sub
das
jo
fnsave
arpl
or
cmp
lock
test
lret
test
ss
inc
scas
adc
mov
or
mov
imul
enter
and
jae
mov
mov
push
push
lods
sbb
pop
clc
fcomi
das
push
xchg
push
sbb
movsl
push
mov
mov
pushf
shll
stos
in
mov
sub
loopne
pop
sbb
add
pop
call
icebp
jl
enter
ret
mov
scas
repz
and
mov
sti
dec
ret
pop
stos
push
into
and
mov
mov
leave
or
mov
cmc
call
xchg
add
shll
sub
aam
inc
ret
mov
pop
sub
enter
ret
call
push
sbb
inc
ret
mov
adcb
add
imul
aaa
pusha
ret
sbb
faddl
es
jbe
sub
sbb
lahf
lret
and
out
mov
ret
mov
xchg
call
and
add
inc
and
ret
mov
fmuls
imul
add
bound
jnp
les
inc
dec
xchg
cmp
aam
fstpl
xor
add
mov
mov
and
dec
ret
mov
ret
mov
test
test
mulb
mov
mov
mov
jle
enter
add
fsubp
cs
loope
xchg
pop
jl
cld
ja
inc
sub
fidivrs
push
jns
pop
adc
xor
lcall
push
pop
call
jns
aas
ljmp
rcrb
pop
inc
ret
outsl
jle
pop
mov
cmp
jecxz
cmpl
outsb
js
xchg
mov
mov
mov
js
loopne
scas
mov
pop
push
adc
lock
adc
les
cmpsl
sub
stos
insb
ret
mov
sbb
add
ss
sarb
ret
mov
mov
xsaves
xchg
pusha
ret
mov
pop
into
or
xor
loopne
ret
pop
addr16
ret
sub
testb
daa
loopne
mov
test
ret
mov
out
std
fs
mov
jns
imul
add
sahf
push
fcoms
lahf
fcompl
pop
decb
mov
in
adc
jp
ret
mov
loopne
mov
ret
aaa
cmp
pop
add
roll
and
mov
add
push
add
mov
test
mov
add
mov
in
int3
pop
jbe
stc
adc
pop
aaa
sti
ja
xor
into
push
mov
or
push
push
pop
push
mov
sysenter
xor
fisubs
and
lret
push
xchg
mov
loop
inc
out
insl
mov
and
orl
test
push
stc
dec
sbb
sbb
jnp
jae
xchg
notl
cltd
insb
ret
in
jle
nop
pushf
adc
lea
outsl
ds
mov
daa
push
ret
jp
push
repnz
add
cmc
dec
ljmp
sub
cmp
out
add
mov
jns
sbb
fstl
jle
enter
xchg
lock
xor
nop
mov
adc
ret
mov
pusha
ret
lods
inc
ret
inc
lcall
aaa
jge
daa
xchg
jl
mov
mov
pop
fwait
push
in
xorl
pop
std
mov
leave
jecxz
xchg
mov
cld
inc
and
test
and
cmp
sbb
mov
cmp
je
lods
add
jmp
cmc
sbb
mov
fldcw
xor
icebp
fwait
in
or
xchg
pop
xor
sbb
push
and
in
or
mov
cmp
or
jns
test
ret
test
mov
jecxz
cs
push
loopne
sbb
inc
ret
mov
push
lock
adc
dec
test
mov
add
mov
sbb
inc
ret
mov
sbb
mov
sub
add
pop
cmc
dec
xchg
push
shlb
scas
mov
mov
in
lret
sub
fs
or
jne
stc
pop
inc
sub
rolb
jl
lret
sub
mov
test
addb
xchg
sub
xor
mov
cmp
ret
mov
das
out
sub
mov
out
sub
mov
dec
adc
push
popa
mov
mov
inc
or
mov
or
or
push
scas
in
mov
test
aaa
imul
inc
ret
andl
pop
push
addl
mov
orb
mov
imul
jne
ljmp
jg
in
mov
in
shrl
sub
lret
mov
ret
push
repz
mov
test
fisubl
leave
and
inc
popf
fwait
mov
jne
mov
lods
sub
mov
mov
das
mov
stos
or
ficomps
cmp
mov
push
je
sbbb
aad
cld
stos
mov
jnp
lods
xor
imull
gs
sbb
jg
pop
js
shrl
mov
mov
aaa
stos
sbb
nop
je
jg
scas
mov
pop
repnz
ret
mov
notb
add
movsl
aam
addr16
ret
mov
ret
lods
sbb
stos
pushf
adc
cmp
outsb
xlat
repnz
jbe
xchg
add
mov
jne
ret
lret
mov
xlat
adc
lret
mov
jo
mov
add
adc
scas
out
leave
pop
call
daa
lods
xor
ret
mov
sbb
mov
jo
lods
push
loop
jnp
sahf
imul
gs
rclb
je
xor
jb
mov
ficompl
imul
sub
ljmp
std
cs
scas
mov
lcall
or
add
xor
mov
ret
mov
add
testl
xor
ret
sub
mov
xlat
lret
mov
xchg
ret
mov
add
xor
push
mov
popa
inc
ret
mov
dec
insb
ret
mov
ret
dec
clc
jecxz
mov
movsl
rorl
xchg
cli
push
std
mov
insb
ret
mov
or
mov
fcmovne
push
ss
ret
ret
pusha
ret
stos
lods
jno
cwtl
cltd
fnstenv
ret
nop
mov
mov
mov
ret
mov
cli
push
mov
pop
xor
inc
sub
mov
mov
aas
scas
pop
rolb
call
sbb
popf
rcrb
xor
jb
lcall
mov
mov
in
test
pop
scas
leave
ljmp
dec
dec
ret
mov
xor
add
lahf
addr16
push
call
jp
or
mov
jne
ds
out
popa
setb
inc
push
in
mov
outsl
sbb
in
scas
dec
in
cmp
stos
mov
leave
xor
add
call
add
mov
jl
jnp
ficoms
cmpsb
incl
xorl
jbe
pushf
ficoms
popf
push
bound
dec
popf
pop
mov
out
xchg
xchg
inc
sahf
out
pop
jnp
sbb
push
mov
fwait
sarb
xor
mov
mov
ret
add
call
in
jg
jle
pop
mov
lret
push
mov
jl
nop
icebp
je
dec
mov
or
xchg
ficoms
cwtl
test
mov
das
jb
test
add
clc
dec
lds
or
mov
sub
in
add
mov
orb
inc
mov
and
jl
scas
jmp
mov
push
push
jle
outsl
out
or
mov
repnz
popa
aaa
test
add
lret
xor
daa
jne
loop
mov
cld
push
scas
fidivl
scas
adc
das
aad
jo
ret
mov
ret
xchg
cmp
je
cmpsb
popaw
add
ret
mov
mov
dec
stos
cltd
adc
ret
shrl
add
add
aad
and
fdivs
pusha
ret
mov
test
sbb
pop
push
loop
cmp
mov
push
add
mov
inc
ret
syscall
sub
test
or
mov
mov
int
xchg
movb
add
out
xchg
jns
sub
xchg
scas
movsl
scas
inc
ret
push
lret
adc
sarl
stc
insb
ret
mov
imul
mulb
aam
mov
lds
jae
mov
out
stos
out
dec
xor
pushf
mov
sub
push
jbe
fisubl
add
and
pop
orl
push
cmpsl
rcrl
cmpb
ret
xchg
mov
mov
ret
mov
arpl
je
mov
or
test
jp
imul
pop
inc
adc
add
inc
ret
pop
and
mov
outsb
mov
lods
pop
sbb
lret
lahf
or
mov
in
je
ret
gs
les
adc
inc
sub
xchg
leave
fwait
mov
mov
ret
mov
inc
jl
mov
mov
insl
adc
xchg
mov
loopne
leave
dec
sub
mov
mov
outsb
loopne
ret
mov
mov
mov
dec
ret
sub
xchg
stc
adc
mov
and
les
ret
fiadds
pop
and
fwait
aad
mov
ret
mov
add
ja
ret
daa
rorl
lds
imul
aad
jo
mov
mov
fistl
jo
or
aaa
cli
xor
push
mov
xchg
lret
pushf
loopne
ret
mov
xorb
mov
ret
cmp
sti
test
sbb
lods
stos
pop
dec
ret
mov
in
mov
mov
adc
and
mov
mov
xlat
pop
pop
inc
xor
fistps
fwait
sti
ret
dec
mov
mov
fwait
enter
xchg
xor
xor
mov
sbb
sti
add
mov
popa
adc
cwtl
lret
nop
cli
stc
add
and
ret
mov
aaa
pop
and
aad
mov
icebp
lods
and
mov
ret
cmpsl
sub
mov
add
inc
lret
les
fsubrs
inc
in
dec
cmp
jnp
hlt
jno
mov
rcrl
gs
popf
mov
add
adc
mov
mov
dec
ret
push
insl
shll
and
je
add
xor
pop
sbb
mov
or
ret
push
cmp
out
mov
ds
ljmp
jp
arpl
adc
nop
pop
dec
ret
rorb
popf
sub
mov
jmp
mov
mov
cmp
cmp
fcoms
mov
push
push
xor
out
or
sbb
adc
jmp
shll
fsubrs
xchg
jbe
and
lret
fpatan
cltd
data16
leave
fdivrl
jb
ret
frstor
pop
jbe
sub
mov
mov
lahf
and
mov
push
push
ja
dec
ds
je
ja
inc
arpl
enter
pop
aam
jp
int3
cmpsb
jge
ret
push
add
mov
scas
cmc
push
enter
xchg
and
adc
andl
add
jo
xor
adc
push
popf
jmp
hlt
cltd
call
in
test
mov
and
and
pusha
ret
mov
mov
cli
ret
leave
sub
inc
jbe
in
xchg
pop
mov
ret
mov
mov
fs
mov
ret
lret
cmp
mov
shl
mov
test
movsb
lret
xchg
jmp
xchg
rcr
xchg
mov
xchg
out
cmpsl
mov
dec
xor
cld
testb
scas
scas
jns
loop
jle
orb
dec
cltd
movsl
push
sbb
jnp
and
dec
adc
ret
mov
add
cwtl
sub
mov
bound
enter
pop
or
faddl
test
mov
ret
lods
xchg
out
mov
jl
clc
xchg
orl
idivb
test
or
jmp
ret
mov
fadd
xchg
sub
and
mov
sbb
lret
push
ja
rclb
adc
mov
mov
inc
arpl
jle
jg
out
enter
and
mov
ljmp
cwtl
movsb
mov
jecxz
jecxz
mov
lret
ret
push
jmp
ret
mov
mov
push
mov
pushf
push
mov
ret
popa
shrb
add
xchg
adc
pop
iret
mov
idivl
pusha
ret
mov
and
and
insl
shl
in
sti
cmp
mov
adc
push
std
xor
mov
sahf
in
lods
pop
nop
mov
xchg
inc
inc
ret
jle
xchg
xchg
sub
mov
negb
mov
gs
imul
sbb
aaa
and
push
outsl
in
fistpl
or
fbld
insb
ret
adc
ret
inc
ret
mov
sub
mov
shrl
jo
push
fnsave
fisubs
mov
lock
push
lahf
rorb
ret
push
ja
clc
xchg
shll
out
mov
sub
int3
jne
mov
add
cld
fldenv
test
ficomps
aaa
lods
in
fidivs
ret
mov
cmp
insl
jecxz
cmp
sub
and
xchg
outsb
inc
ret
mov
and
jo
stos
jns
sbb
or
mov
add
push
out
jno
adc
aaa
jae
cmp
sub
ret
mov
bound
ret
mov
push
rcll
movsb
push
fsubrs
fwait
sbb
mov
push
mov
or
mov
cmpsl
mov
xchg
movsb
jmp
mov
push
mov
or
xor
add
hlt
push
cmp
pop
mov
call
mov
in
push
movsb
cmp
mov
out
fcomps
jl
jbe
fisttpl
mov
add
mov
push
mov
leave
imul
lock
and
mov
out
sub
cmpsb
push
aam
xchg
mov
sbb
pop
pusha
ret
ss
mov
pop
pop
mov
xsha256
cmpsb
xchg
jmp
outsb
ficoms
movsb
clc
xlat
sbb
cwtl
in
add
ret
mov
inc
mov
push
ret
fidivl
daa
movsb
pop
push
pop
and
pop
sub
mov
jmp
inc
ret
mov
lds
push
pop
lock
add
and
mov
cmc
test
std
mov
cmp
cmpsb
lods
gs
jle
jl
test
sbb
xchg
or
icebp
cmp
ret
mov
hlt
mov
ror
mov
sbbl
in
pop
in
popa
inc
pop
imul
cmp
inc
mov
ret
cmc
lret
dec
cmp
push
xchg
dec
out
mov
jge
add
movsb
in
icebp
lods
gs
push
inc
ret
clc
pop
pop
and
and
ret
sub
mov
pop
pop
cmpsl
xorb
cmpsl
gs
push
inc
ret
mov
cmp
push
xchg
rorb
add
pop
aas
arpl
or
xor
and
data16
ret
ds
mov
in
aad
or
ret
mov
add
and
mov
mov
adc
sub
mov
add
push
lods
dec
push
test
push
add
mov
jnp
pop
jno
mov
pop
ljmp
mov
ret
mov
mov
xchg
mov
or
push
movsl
lahf
dec
ret
mov
add
ss
add
mov
loope
cld
inc
jl
out
sti
int
outsl
push
lock
int
test
daa
insl
jnp
cmpsb
xchg
popa
adc
test
jne
push
fsubrl
movsb
push
push
aad
xchg
mov
push
jnp
shl
push
repz
mov
sbb
stos
lcall
aam
pop
push
cmp
lahf
mov
ret
adc
in
cmp
sti
leave
push
jo
adc
fisttpl
stos
lahf
daa
orb
mov
nop
add
jbe
gs
mov
mov
and
clc
dec
ret
mov
push
arpl
push
and
pop
imul
cmc
push
add
mov
pusha
ret
mov
mov
cmp
jmp
push
in
pop
dec
jns
cmc
inc
scas
and
push
jp
ret
mov
pop
mov
es
lahf
std
mov
mov
pop
push
popa
repnz
sbb
jnp
cmpsb
mov
ret
test
dec
shrb
sbb
xchg
outsl
aam
mov
add
pop
loope
ret
pop
xchg
or
call
ret
mov
inc
loope
jl
ret
adc
jge
or
mov
ret
mov
jp
orb
sbb
xchg
das
cmp
mov
cmpsl
ja
ret
mov
sbb
lahf
pop
jp
outsl
jecxz
loope
ret
mov
dec
ret
jmp
les
cld
mov
es
jae
ret
pop
in
fmuls
mov
cmpsb
xor
mov
pop
pop
ss
push
std
mov
loope
out
xor
pop
repz
stos
or
cmp
mov
add
mov
ret
mov
nop
push
mov
into
sbbb
jb
xchg
xchg
sbb
push
inc
xchg
fwait
aas
ss
cmp
mov
clc
pop
sbb
mov
mov
aas
ja
sbb
sub
mov
xchg
push
pop
insl
xchg
sbb
aam
gs
cmp
xlat
sbb
cmp
jno
dec
pop
mov
and
pop
scas
lcall
pop
cwtl
push
out
mov
insb
ret
ja
push
cmpsb
cmp
sub
cmp
cmp
xchg
xchg
repz
xchg
rcr
pop
subl
mov
mov
inc
ret
or
loope
lret
out
sbb
out
and
fistl
jnp
mov
mov
mov
lods
into
dec
je
hlt
aam
push
jge
aad
push
aad
cmpsl
mov
cmp
add
lret
cld
ret
lods
pop
mov
cmpb
icebp
adc
ret
mov
push
sti
das
popf
pop
dec
add
outsl
aas
xchg
and
mov
aam
rcrb
and
xchg
sti
repnz
pop
test
xchg
shll
push
dec
add
sti
or
xlat
sbb
mov
bound
fs
mov
pop
insb
ret
push
and
mov
outsl
jns
pop
and
mov
aas
push
xor
push
lock
mov
add
mov
xchg
xorb
add
mov
sbb
fidivrs
gs
mov
sti
loop
dec
ss
pop
int3
es
mov
je
mov
bound
subb
push
fstl
out
mov
push
cmp
ret
aad
addr16
lds
mov
aam
inc
cmp
ret
mov
sbb
mov
jb
lock
dec
ret
mov
lcall
mov
inc
ret
mov
out
ret
adc
inc
mov
clc
insl
outsb
popw
xchg
ret
mov
mov
mov
aaa
mov
pop
jae
frstor
gs
xchg
and
mov
shrb
add
jo
popf
fdivl
rolb
mov
ret
mov
sub
mov
lods
adc
and
mov
test
xchg
arpl
lock
xor
ret
mov
pop
push
stc
or
adc
cmp
jo
ret
mov
add
shl
xchg
test
mov
jae
shll
mov
sub
and
mov
jno
adc
pop
loop
jmp
jge
mov
aaa
sbbb
jae
sti
push
sahf
mov
test
pop
xchg
out
mov
and
mov
imul
inc
xchg
ja
jp
insb
ret
mov
xchg
mov
js
push
testb
jle
mov
lret
ja
fnsave
mov
out
repz
fwait
sbbb
arpl
or
adc
inc
ret
pushf
mov
sbb
fwait
or
dec
enter
jp
mov
fld
dec
push
push
movsb
dec
mov
stos
or
mov
imul
notl
mov
dec
ret
mov
jmp
cmp
pop
fcoml
icebp
dec
ret
mov
ds
cld
adc
mov
enter
xchg
lods
inc
mov
fisttps
add
jns
loope
in
aam
shr
mov
ror
into
push
or
mov
mov
push
in
sub
ret
cs
cmp
cmp
cld
xor
cmp
ss
popa
cld
xchg
fsts
jmp
add
push
add
dec
adc
cmpsb
inc
ret
test
movsl
lods
sub
mov
or
mov
mov
iret
in
loop
jnp
ret
fs
shll
ror
aaa
out
inc
ret
mov
add
fstl
icebp
gs
mov
push
std
jne
jb
adc
loope
in
pop
mov
inc
push
cmp
adc
mov
sub
mov
int3
pop
in
inc
cmp
sub
mov
bound
scas
mov
xchg
int3
add
mov
popa
rcl
mov
xorb
std
rclb
call
add
push
xor
mov
in
mov
mov
sub
mov
mov
aas
add
or
pop
stos
sbb
nop
test
ljmp
inc
ret
sbb
mov
mov
aad
mov
push
mov
jp
mov
or
out
cmp
cmpsl
loop
pop
iret
fld
div
ljmp
fsubrs
pop
xchg
sbb
cmp
cld
mov
sbb
dec
ret
mov
sbbw
cld
xchg
mov
std
es
jns
jp
jmp
mov
cmp
ficoml
adc
pop
imul
sub
movsb
mov
sub
data16
xchg
mov
outsl
cmp
pop
out
sti
dec
mov
add
mov
push
mov
subb
and
in
out
mov
jne
inc
adc
push
js
fcompl
ret
aaa
test
mov
enter
and
aas
pusha
ret
test
sahf
aaa
daa
popa
sub
mov
inc
mov
sbb
ret
int
mov
scas
dec
mov
ret
mov
mov
popa
mov
fstpl
jns
mov
xor
lahf
push
clc
xchg
jnp
les
dec
and
mov
dec
leave
cmpb
je
mov
inc
mov
cmp
push
arpl
jle
xor
js
ret
mov
and
pop
insl
int
ret
ss
sbb
loop
cmp
push
daa
fs
mov
adc
dec
ret
mov
mov
or
mov
ret
mov
pop
icebp
pop
fistl
cmpsb
pop
sbb
gs
subl
movsl
and
xchg
add
mov
mov
cmp
jmp
xchg
jecxz
repz
fstpt
imul
push
nop
jne
mov
ret
out
imul
jl
ret
jmp
ja
pop
jmp
ret
fwait
xchg
adc
ret
mov
icebp
push
nop
mov
int3
sub
mov
mov
scas
daa
fnstenv
cmpsb
inc
mov
push
dec
dec
sub
mov
out
je
repnz
fs
stc
jns
ret
xchg
scas
inc
push
test
out
lcall
scas
dec
ret
mov
ret
mov
popf
jge
ret
mov
fldl
insl
mov
or
cmp
inc
mov
xchg
dec
adc
lea
and
ret
push
mov
cmp
push
test
ret
mov
or
sbb
mov
push
stc
movsl
sbb
inc
shlb
mov
mov
mov
insb
ret
or
in
loopne
mov
icebp
dec
add
mov
mov
cli
pop
insl
push
xchg
pop
fwait
push
pinsrw
pushf
jl
pop
rclb
xchg
sub
push
insl
sbb
repnz
repnz
pushf
cltd
js
pushf
mov
xchg
les
repnz
xchg
sbb
push
push
xlat
loope
ss
lret
rcrb
mov
mov
hlt
xchg
dec
out
outsb
ror
mov
fs
mov
insb
ret
mov
push
gs
pop
pusha
ret
or
push
hlt
push
add
mov
ret
in
ret
mov
mov
adc
mov
fadds
push
inc
xchg
push
mov
push
lock
jp
inc
ret
test
mov
inc
mov
pop
jge
insb
ret
mov
iret
dec
cmpb
adc
aaa
fs
and
mov
mov
cltd
cmpsl
jbe
test
ret
mov
ret
mov
mov
ret
mov
ret
xor
out
mov
add
fs
mov
iret
sub
out
push
in
mov
aas
jmp
push
mov
icebp
push
or
js
add
cld
cmpsl
push
dec
ret
mov
shll
push
ficomps
jns
cmp
ljmp
dec
dec
jmp
loop
jno
aam
pop
push
mov
push
pop
mov
and
mov
add
test
mov
enter
cmp
mov
call
mov
mov
call
dec
and
es
add
mov
rorb
add
aaa
fcmove
popa
or
mov
cmp
std
call
mov
rcr
mov
add
pop
inc
and
test
int3
mov
inc
ret
mov
mov
mov
loope
cmp
mov
push
shl
lahf
cli
das
insl
sub
xchg
inc
inc
add
jno
ret
cmp
ror
jo
iret
push
dec
inc
fwait
jecxz
inc
dec
sbb
xor
ret
mov
or
enter
popa
or
sub
add
mov
xchg
pop
out
aam
dec
fcomp
adc
inc
ret
mov
jmp
fisubl
in
mov
and
adc
cld
mov
mov
ret
add
mov
xchg
cmc
adc
icebp
imul
or
dec
ret
mov
ret
mov
pop
out
into
add
sub
aaa
gs
jns
sbb
jb
popf
into
xchg
pusha
ret
or
sub
push
loopne
xchg
dec
ret
pop
in
shll
ret
mov
popf
dec
ret
pop
test
and
jnp
jno
xor
jno
add
mov
repnz
out
fwait
cmpsb
cli
insb
ret
push
rcrb
test
cmp
sti
repz
and
lods
imul
cmp
mov
jle
xchg
daa
cmp
aaa
jnp
pushf
rcr
jg
pop
popf
clc
inc
mov
fistpll
pop
xchg
adcb
mov
dec
and
ja
rcl
ret
sbb
mov
ljmp
add
jg
ret
mov
push
int
ret
in
in
pop
gs
adc
add
ret
mov
fs
daa
jge
xor
mov
add
mov
ret
mov
lock
cs
int3
outsb
xor
push
dec
ret
stos
xor
icebp
int3
call
xor
cmp
gs
lret
mov
jl
xchg
push
movsl
sbb
jnp
icebp
cmpsb
or
mov
fsubrs
es
push
sti
out
sub
push
jp
sub
mov
cmp
cli
push
clc
sub
mov
dec
ret
mov
fisubs
and
mov
add
pop
es
inc
fld
clc
in
cld
nop
xor
loop
je
mov
js
pusha
ret
orb
inc
ret
cmp
test
xchg
and
mov
mov
jg
fistpll
ret
sub
mov
mov
scas
jl
popf
push
mov
sub
mov
mov
inc
ret
mov
sbb
loope
push
dec
cld
daa
or
mov
popf
inc
mov
rcrl
mov
mov
hlt
pop
leave
pop
or
test
mov
andl
sbb
imul
ficoms
jo
adc
add
push
push
dec
in
outsb
push
mov
add
mov
xchg
hlt
pop
xchg
add
and
mov
jb
pop
cmpsl
lcall
add
adc
xor
mov
ret
out
sub
mov
loope
scas
adc
pop
movsl
cmp
add
test
and
sub
mov
shlb
pop
shrl
insl
popf
inc
ret
mov
mov
divps
mov
adc
mov
arpl
pop
mov
adc
add
lock
pop
into
std
into
stos
mov
mov
popa
js
jge
ret
mov
roll
mov
addr16
clc
mov
ret
mov
add
loopne,pn
pop
ja
pop
arpl
outsb
push
sbb
dec
cld
in
adc
xchg
cltd
push
rorb
add
movb
add
imul
into
out
sub
mov
add
add
das
jle
test
mov
xchg
mov
push
cmp
lds
mov
or
mov
cmp
out
ret
mov
jns,pt
jmp
xor
ret
dec
imul
imul
sub
sbb
lea
loopne
xchg
test
jecxz
adc
cmc
stos
xchg
xor
hlt
and
mov
dec
insl
fisubl
jnp
pop
pop
inc
ret
mov
mov
xchg
loopne
jmp
scas
pop
js
mov
imul
pusha
ret
mov
sbb
add
mov
xor
scas
pop
jno
adc
ret
inc
ds
cmp
dec
pusha
ret
mov
aam
je
push
sub
add
dec
in
ss
pop
xor
cmp
nop
sti
dec
push
int
mov
and
lock
mov
rorb
lret
push
push
and
push
xor
push
or
mov
popa
xchg
mov
movsl
mov
shrb
add
ret
cmpsb
jmp
aad
addr16
jle
sub
in
cmpsl
lahf
fisubl
add
jmp
icebp
test
out
adc
add
fcoms
cld
cmpsl
push
shrl
in
and
mov
mov
mov
dec
add
mov
mov
ret
addr16
adc
iret
mov
ret
mov
scas
cmp
ret
mov
sbb
insb
ret
mov
jae
jp
ret
jmp
jno
jge
rcrb
and
addb
mov
outsl
aas
fiaddl
sarb
into
ja
xor
add
addl
dec
fists
insb
ret
xchg
insb
ret
sub
cmpsl
popf
mov
dec
cmp
add
arpl
sbb
mov
test
jmp
inc
jp
test
add
push
popl
add
ret
xchg
sahf
std
arpl
pop
mov
rcrl
lahf
arpl
mov
pop
subb
imul
icebp
add
cmp
dec
icebp
mov
sbb
jae
mov
ret
mov
in
popa
jmp
loop
mov
xor
mov
popa
loop
lods
xor
add
or
mov
jmp
ret
mov
imul
sbb
hlt
outsb
push
movsl
adc
mov
dec
ret
cmp
inc
lea
jae
or
mov
test
sahf
scas
add
sbb
mov
push
ret
xor
sub
ret
mov
mov
ret
gs
mov
ret
mov
aaa
adc
movsl
aaa
leave
clc
cs
bound
sbb
cmp
mov
lds
loopne
dec
je
scas
bsr
daa
mov
rolb
add
add
pushf
vmwrite
es
cmpsl
cli
cmp
incl
mov
jl
ret
mov
aad
pop
cmpb
push
pop
mov
mov
add
push
pop
popa
andl
repz
add
lret
pop
mov
jp
mov
push
shll
mov
test
mov
mov
pop
inc
or
das
std
pop
lds
mov
adc
or
mov
add
add
loop
xor
xor
cmp
mov
inc
ret
cltd
cmp
inc
push
xor
mov
fisttps
cmp
push
push
icebp
pmulhw
test
into
and
mov
clc
sbb
je
and
xchg
mov
sub
lcall
mov
add
ret
mov
xchg
test
lods
and
mov
jno
int3
jecxz
jmp
out
ja
xchg
fsubs
add
mov
movsb
leave
push
dec
ret
mov
mov
xchg
pop
fs
mov
xchg
arpl
add
mov
and
ds
ret
mov
loopne
push
sbb
mov
lods
jnp
jae
jp
ret
mov
adc
mov
pop
lret
jmp
dec
fsts
inc
ret
mov
rorl
push
push
loopne
scas
or
mov
or
pop
xchg
push
mov
mov
mov
mov
add
and
test
jg
mov
xor
cmp
addr16
stc
pusha
ret
mov
out
lcall
xor
xor
icebp
sar
mov
je
sbb
loop
or
and
sar
mov
push
ret
push
sub
mov
mov
cmp
xorl
ret
mov
dec
ret
mov
ret
xlat
adc
jbe
sbb
inc
ret
hlt
lcall
dec
sbb
lret
lret
sub
mov
dec
ret
addr16
shll
mov
cmc
fcmovb
clc
mov
add
es
mov
mov
cmovs
mov
into
inc
iret
gs
in
jmp
stc
mov
push
adcl
ret
mov
mov
pop
data16
inc
sub
mov
xor
fsts
hlt
mov
ljmp
mov
adc
and
out
pop
cmpsl
das
and
dec
ret
mov
sarl
and
mov
xchg
faddl
push
jg
xchg
inc
xchg
sub
inc
sub
mov
popf
arpl
cmpsb
lods
movsl
mov
shlb
mov
mov
pushf
cmp
lods
dec
and
fs
mov
cmp
add
out
mov
dec
mov
testb
add
fidivl
inc
ret
mov
add
adc
push
dec
ret
imul
ffree
add
mov
xchg
in
pop
sub
mov
dec
insl
xchg
je
insb
ret
dec
hlt
movsl
sbbb
ret
push
inc
ret
mov
repz
cmp
shll
and
out
arpl
int3
add
js
frstor
pop
adc
ret
xor
ret
mov
mov
add
mov
pop
lea
repz
into
repz
mov
int
fwait
mov
jp
in
and
jmp
ret
cltd
pop
cs
ret
pop
push
movsl
push
aam
in
fwait
stos
rolb
sub
mov
stc
pop
mov
repnz
push
out
aas
stos
and
ds
aaa
cmp
cmp
mov
mov
xchg
pop
sub
push
xchg
stos
cmp
xor
mov
xchg
cmc
jnp
or
inc
lret
lcall
dec
ret
mov
bsr
test
cwtl
hlt
aad
out
fisttps
test
dec
lar
add
mov
xor
iret
popf
mov
xchg
jle
cmc
inc
ret
or
js
hlt
push
push
loop
mov
iret
js
adc
xchg
scas
sub
gs
jge
cmpsb
add
mov
popaw
lret
ljmp
push
push
bound
cmp
or
incl
and
inc
das
pop
jecxz
fwait
pop
xor
dec
cmpsl
and
pop
insb
ret
mov
adc
sbb
fisubrl
scas
movsl
cmc
stc
push
jb
loop
dec
out
stos
ret
mov
dec
ret
fdivs
mov
insb
ret
xchg
pop
xchg
inc
imul
mov
lahf
adc
daa
insb
ret
mov
ret
jge
inc
in
popa
sti
xchg
mov
inc
mov
xor
mov
gs
ret
andl
xor
jo
in
push
xchg
push
and
mov
inc
icebp
pop
test
adc
mov
add
jns
cmp
inc
mov
sti
lods
out
xchg
std
inc
fistl
sbb
mov
mov
add
lret
cmc
xchg
jnp
fcomps
repnz
inc
jb
mov
ds
sub
mov
pop
inc
outsb
popa
mov
pushf
addr16
loopne
inc
adc
in
mov
das
cmpsl
out
pop
mov
jae
ret
jmp
in
xor
mov
pop
cmp
jae
xor
pop
mov
jbe
mov
repnz
and
or
mov
mov
fbld
outsl
clc
out
mov
pop
jge
out
out
inc
xor
lahf
and
push
imul
fdivl
es
popa
add
int3
imul
mov
jmp
dec
cmp
mov
jle
push
mov
scas
mov
push
mov
in
mov
pop
pop
mov
sti
pushf
and
mov
and
mov
adc
in
fldenv
pop
mov
inc
in
jbe
jb
ficoms
out
ret
jmp
hlt
push
call
imul
adc
cs
xchg
pop
push
xor
and
fildl
int3
mov
mov
push
jg
adc
in
push
xchg
loop
cli
in
popl
add
ret
mov
sti
cmp
enter
enter
push
mov
ret
mov
iret
divb
lea
outsb
cmc
sbb
imul
pushf
stos
xchg
xchg
lds
inc
fidivrs
cmp
fwait
pushf
insl
mov
std
stos
popf
xchg
xor
xchg
sarl
dec
ret
mov
ret
dec
push
inc
ret
outsl
xchg
lret
popa
ret
adc
fisubrl
and
cmp
add
inc
mov
shrb
jae
shlb
xchg
outsb
fiaddl
sub
roll
and
mov
push
xchg
push
stc
aas
adc
mov
inc
sbb
in
in
xchg
nop
cmpsb
jae
cld
shll
pop
mov
add
cmpsl
fcompl
int3
inc
ret
fstps
fcomi
ror
jae
fdivrl
fiadds
adc
push
cwtl
cld
cmp
int3
mov
aaa
and
mov
xor
cwtl
lds
scas
pop
orl
lret
jmp
dec
pop
aam
xchg
jb
jnp
mov
mov
aas
ss
xchg
pop
in
je
cmp
adcl
popa
out
and
add
lock
adc
or
inc
ret
mov
sub
sub
jl
mov
mov
js
rorl
and
mov
ret
pop
lret
fcoms
dec
mov
jle
adc
aas
in
test
fwait
bound
inc
test
ret
sub
mov
mov
cwtl
popf
test
ret
jae
jns
enter
sub
mov
jae
dec
mov
lret
ljmp
xchg
lods
mov
adc
popl
sub
mov
pop
adc
mov
xchg
cmp
xor
push
jecxz
aam
sbb
adc
adc
sbb
lret
pop
add
nop
xor
test
jp
xchg
xchg
and
mov
xlat
cli
inc
mov
mov
inc
mov
js
add
mov
mov
movsb
cltd
clc
xchg
nop/reserved
mov
push
xchg
adc
out
add
mov
mov
and
mov
add
mov
and
mov
mov
mov
sub
insb
ret
inc
ret
cwtl
dec
push
pop
inc
ret
in
lods
cli
push
shlb
xchg
inc
ret
mov
add
rolb
jle
sbb
mov
aam
in
xor
add
xor
cmp
or
insb
ret
mov
test
pushf
jmp
or
out
int
cltd
adc
int
dec
bound
addr16
xchg
xchg
pushf
icebp
imul
bswap
xor
ret
rclw
mov
loop
ret
shll
test
faddp
inc
lret
lret
dec
ret
ficomps
push
jne
adc
mov
sub
jl
ret
mov
mov
in
pop
dec
xchg
sub
mov
and
ret
test
cmp
mov
inc
lock
icebp
scas
pop
xor
daa
fwait
jg
pop
cwtl
mov
test
inc
cmpsl
pusha
ret
xchg
inc
sbb
into
fdivrs
js
pop
push
fildll
popf
or
mov
das
and
mov
call
adc
je
or
mov
ret
mov
pop
dec
ret
or
add
mov
add
repz
push
arpl
xor
sbb
mov
inc
arpl
ret
imulb
mov
call
cld
inc
ret
mov
mov
or
insb
ret
test
pop
mov
adc
mov
mov
jae
and
jmp
xor
mov
sub
mov
hlt
or
dec
ret
mov
mov
push
fcomps
sbb
pop
dec
pminub
out
fwait
dec
ret
popa
sub
fisubs
in
xchg
enter
ret
out
inc
int
aaa
add
ret
mov
leave
mov
sbb
add
out
cltd
iret
mov
cmpsl
xchg
mov
test
sub
mov
lret
gs
lret
xchg
movsb
add
sub
mov
mov
int3
xor
ret
mov
add
clc
imul
sub
mov
cmp
sub
mov
add
hlt
pop
insl
jns
ds
push
outsl
lds
stc
cmp
mov
fcoml
ret
mov
adc
lret
xchg
shll
jge
ret
idiv
pop
fistpll
push
sbb
mov
and
ret
je
adc
cli
pop
sar
add
ljmp
mov
cmpsl
sub
scas
fs
out
rorb
imul
dec
ret
mov
ss
mov
pop
mov
sbb
inc
add
mov
pop
xor
mov
in
pop
fimull
xchg
pop
xor
in
pop
sub
add
mov
pop
cmp
mov
push
fsubs
jb
or
pop
pushf
sub
mov
dec
ret
ss
mov
stos
rcrb
xor
cmpsl
and
mov
ret
mov
ja
sbb
cli
loope
loop
dec
scas
sbb
mov
outsb
stos
xchg
sub
mov
int
outsl
fisttpll
mov
ret
outsb
mov
xchg
out
mov
xchg
js
mov
and
or
pop
pop
adcl
jo
xchg
push
out
mov
jg
fwait
test
pop
and
xlat
repz
mov
or
mov
cltd
loope
or
push
mov
cmpsl
dec
hlt
test
cmp
mulb
inc
and
mov
mov
cmp
push
dec
lcall
mov
ret
inc
ret
mov
and
loopne
mov
push
push
stos
and
sub
mov
dec
out
mov
or
push
iret
or
sub
out
or
dec
movsb
in
jnp
pop
or
outsb
lcall
ret
outsb
imul
ret
inc
mov
sbbb
jns
nop
or
adcb
push
mov
xchg
lahf
sarb
insb
ret
sub
mov
mov
test
outsb
push
xchg
dec
ret
mov
call
movsl
fstpt
pop
sbbl
xchg
lods
mov
xchg
xchg
rorl
and
mov
mov
inc
scas
lahf
and
mov
jmp
mov
mov
sub
fdiv
adc
mov
ss
mov
insl
scas
cli
push
faddl
cmp
daa
movsb
les
arpl
or
mov
das
outsl
inc
ret
mov
ds
in
ds
lahf
mov
bound
mov
lahf
and
ljmp
add
cmpsb
test
clc
add
mov
pop
js
push
push
rcrb
xor
stos
lods
std
pop
dec
dec
std
mov
lcall
mov
xchg
dec
ret
mov
es
xchg
pop
sar
ret
mov
ret
ret
mov
popf
pop
jg
test
ret
mov
push
and
ss
or
mov
mov
sbb
mov
ret
cmp
sarl
mov
stos
clc
movsl
fstpl
pop
lods
das
push
lea
aam
xor
loopne
lret
mov
insl
jle
cs
stos
pop
dec
cmp
out
inc
add
ret
xchg
add
xor
and
mov
out
mov
inc
cmp
push
shlb
lahf
mov
pop
sbb
in
push
movsl
mov
out
shl
jg
aam
push
pusha
ret
mov
xchg
xor
jb
inc
pop
xor
ret
mov
pop
insl
mov
repz
mov
pop
push
je
push
cmp
cmpsb
inc
ret
addb
jae
jae
push
loope
bound
inc
in
js
cwtl
es
shlb
dec
ret
sbb
add
mov
cs
mov
jns
popa
fwait
sti
insl
pop
cmpsl
cmpsl
dec
dec
push
mov
shl
sub
mov
xchg
and
mov
xor
in
xchg
adc
adc
enter
mov
cmp
sub
add
and
mov
call
sbb
pop
sub
lock
loope
lock
xchg
fs
mov
test
leave
nop
arpl
fwait
mov
add
lock
inc
ret
xor
inc
inc
shrl
adc
xchg
fiadds
aaa
sub
mov
daa
cld
inc
icebp
xor
aas
ja
push
hlt
jmp
ret
add
xor
dec
ret
test
jge
inc
ret
fcomp
aaa
insl
repnz
ret
mov
lds
and
dec
mov
sub
mov
mov
or
lock
hlt
lret
add
add
in
sub
mov
mov
outsl
pop
add
mov
test
cmp
cs
xor
push
push
xchg
or
mov
test
mov
and
stos
insb
ret
mov
mov
scas
mov
mov
mov
jmp
daa
push
cmp
in
out
jnp
adc
mov
pop
lret
inc
mov
cmpsb
cmp
js
adc
mov
lahf
sahf
pop
inc
sbb
jge
lret
lods
fmuls
mov
stos
out
pop
mov
jle
push
pop
mov
lcall
scas
das
xchg
icebp
mov
or
xchg
movb
xor
cmpsb
bound
es
sbb
enter
jle
sub
nop
in
xchg
adc
nop
mov
and
mov
ret
jmp
jecxz
repnz
ret
mov
hlt
pop
push
addps
ds
repnz
jmp
ret
gs
sub
movsb
jmp
mov
xchg
xchg
jp
ret
mov
mov
add
mov
lock
testl
leave
mov
add
pusha
ret
jo
mov
dec
mov
es
xor
pop
fwait
or
mov
add
mov
pop
das
rcrl
clc
push
lcall
imul
sbb
mov
movsl
add
shrl
imul
decb
fnstenv
jno
ret
jmp
push
push
xchg
fsubs
inc
ret
sub
mov
gs
arpl
cmc
lahf
pop
xchg
or
pop
jbe
mov
into
adc
rcr
add
es
ret
mov
cmpsb
scas
fldt
pop
mov
add
mov
add
mov
out
lods
cmpsl
xchg
test
ret
add
xor
mov
jl
xor
add
push
scas
or
mov
jmp
jge
test
sub
mov
ljmp
rcll
dec
rorb
jecxz
outsl
repnz
ret
mov
sub
push
mov
mov
fldl
cwtl
int
test
sub
pop
in
lods
and
movsb
adc
aaa
xchg
add
xor
ret
mov
outsl
pop
lea
sbb
in
jb
mov
lcall
int3
push
int3
dec
ret
out
lahf
push
sahf
mov
ret
mov
fisubs
mov
mov
xor
add
adc
out
aas
inc
sbb
cmpsl
imul
incb
jge
adc
jecxz
mov
fsubs
push
mov
add
push
fs
mov
sub
cmp
rcrb
fidivs
and
and
mov
mov
and
add
push
push
xrstors
fstps
ret
mov
mov
lods
lods
mov
sub
ret
mov
or
or
std
sbb
cmp
rcrl
jo
push
dec
or
mov
lahf
sarl
pusha
ret
test
mov
imul
mov
ret
mov
mov
jae
sbb
cmp
cld
jae
inc
mov
gs
sbb
loope
stos
out
push
jae
imul
adc
aas
in
mov
adc
ret
mov
or
dec
dec
mov
adc
add
mov
and
mov
mov
xor
mov
das
mov
inc
add
mov
ja
inc
and
inc
ret
imul
xchg
mov
cs
mov
ja
jnp
rcrl
sbb
add
dec
ret
mov
push
cmp
lahf
jnp
rcr
shr
dec
dec
ret
mov
mov
ds
or
xchg
sub
je
mov
imul
xor
or
insb
ret
mov
jp
cmp
ret
mov
into
mov
ret
push
fsubrl
mov
pop
rolb
or
loope
rcrl
sbb
sahf
push
sar
xor
loope
cli
jg
sbb
loopne
cmpsb
mov
out
xchg
jae
or
mov
adcl
int3
shrl
ret
push
mov
aaa
in
test
pop
cmp
les
test
mov
mov
mov
add
add
and
ret
mov
out
or
mov
push
fs
mov
ret
fwait
ljmp
xor
shlb
cmpl
inc
mov
ret
mov
add
in
daa
popa
insl
ljmp
mov
repz
rcpps
xchg
sti
fs
xor
mov
add
mov
xlat
push
imul
dec
shll
mov
lret
hlt
popa
xchg
xchg
test
imul
inc
push
cli
pop
pop
add
pop
in
sub
icebp
mov
add
xor
ss
pop
mov
jg
lods
lcall
push
stc
jp
mov
lods
ss
ret
mov
rep
leave
and
adc
push
int3
push
pop
in
int
push
pushl
and
mov
stos
test
orb
add
cmp
pop
stos
in
cmp
sahf
and
fstpt
pop
sbb
gs
aas
pop
and
jle
adc
fwait
loope
xor
ret
mov
dec
and
sbb
ret
loope
fidivl
dec
push
cmp
jns
mov
daa
and
xchg
test
lret
push
pop
or
ret
mov
adc
cmp
and
mov
inc
ret
mov
lahf
test
pushf
mov
test
sub
push
cmp
loope
sarl
push
push
js
into
iret
push
jnp
popf
push
xchg
das
insb
ret
ja
cmp
mov
roll
mov
popf
sbb
scas
pusha
ret
clc
sub
xchg
gs
mov
test
mov
or
imull
add
aam
ret
or
mov
daa
sbb
lea
or
mov
movsl
lea
inc
aas
out
pop
imul
pop
popl
cmp
push
cltd
push
fwait
jne
dec
ret
jo
and
in
idivl
sub
mov
fwait
cmp
pop
sbb
out
add
sbbb
rorl
mov
or
sbb
popf
test
ret
mov
jns
pop
cmpb
ret
adc
sbb
sbb
sbb
cltd
xor
shl
mov
add
mov
pop
mov
xchg
or
add
mov
cmp
add
mov
rclb
stos
loopne
fisubl
mov
pop
out
repz
jl
cmp
mov
xor
adc
shlb
jl
adc
and
pop
int
jge
or
push
lods
mov
cmpsb
pop
xor
xchg
out
iret
dec
jne
mov
sarb
add
add
sahf
mov
rcr
fisttpl
cwtl
jmp
mov
xorl
fidivs
pushf
or
mov
mov
inc
popl
ret
mov
pop
in
pop
pop
scas
outsb
sub
call
and
add
inc
adc
ret
mov
add
push
dec
or
mov
in
push
xchg
enter
xchg
loop
movsb
test
fsubp
test
cmpl
aas
lods
or
insl
mov
fimuls
nop
mov
addb
add
xor
outsb
lret
clc
xchg
iret
add
add
xor
ret
mov
test
add
je
sbb
int3
in
sbb
ret
fistpll
andl
cmp
adcb
add
xchg
adc
rclb
iret
cmc
popa
add
cmc
std
add
push
xor
jl
aad
ret
test
ret
mov
add
xor
lret
repnz
sbb
add
jns
loop
les
in
aaa
jmp
or
sub
mov
inc
add
das
jno
lea
and
mov
or
inc
mov
test
outsb
sub
rcrb
jbe
pop
sahf
and
sarl
imul
push
adc
xchg
pop
out
and
mov
inc
ret
xchg
xchg
mov
xchg
sub
xor
mov
jnp
into
fsubr
outsl
xor
mov
and
push
and
jb
mov
or
insb
ret
mov
adc
jp
sub
repz
sahf
mov
hlt
adc
cmp
adc
ret
mov
ret
inc
sbb
pusha
ret
mov
jle
movb
ret
mov
mov
fmull
mov
scas
or
mov
gs
mov
and
mov
jae
pop
push
xor
dec
or
cmp
push
mov
cmpsb
adc
ret
or
mov
jl
jmp
pop
daa
pop
lret
aad
movsb
pop
xchg
inc
inc
ret
mov
mov
xchg
loopne
inc
lds
mov
lret
sbb
jne
jle
and
mov
aas
fwait
xchg
add
aaa
js
xchg
mov
push
fisubs
add
mov
sahf
mov
push
iret
ss
adc
adc
in
scas
fs
mov
outsl
test
add
xchg
fbstp
jmp
add
inc
ret
inc
sub
in
push
pusha
ret
mov
pop
mov
pop
add
aam
cmp
jg
fildl
push
repz
adc
ret
mov
sbb
cmpsb
testl
ret
mov
scas
pop
adc
mov
add
mov
cmp
and
cld
sbb
fs
xor
push
sub
mov
pop
hlt
hlt
in
movsl
ljmp
ret
mov
add
add
cmpl
movsl
cmp
ret
mov
xlat
push
lret
jl
ret
mov
or
mov
sub
push
imul
push
or
mov
sbb
sbbl
lahf
pop
mov
push
jnp
and
pusha
ret
mov
mov
lret
shlb
loope
or
mov
ret
mov
add
cld
xchg
mov
mov
arpl
push
mov
fwait
or
in
ss
jmp
stc
lret
lcall
add
mov
sbb
icebp
frstor
push
xchg
leave
or
nop
jae
and
mov
mov
ret
mov
enter
movsb
sarb
xor
aas
out
enter
popf
push
ret
push
in
test
push
out
or
mov
loopne
out
and
or
orl
mov
sbb
pop
add
add
cmc
xor
int
adc
mov
mov
fistl
les
xlat
xor
mov
ret
mov
xchg
cmp
xchg
sbb
sti
mov
pop
test
xchg
mov
sub
push
stc
dec
ret
mov
xlat
inc
bound
ret
jmp
ret
mov
stos
call
jae
hlt
jo
sbb
add
mov
sub
jbe
add
sub
mov
mov
mov
ljmp
scas
mov
mov
clc
and
mov
push
push
jno
and
mov
add
insb
ret
imul
dec
ja
gs
add
ret
mov
add
mov
sahf
sbb
lret
subl
push
adc
std
fnstenv
cmc
std
and
mov
push
or
mov
mov
popf
int
jl
sub
mov
aam
sbb
in
push
lods
es
xchg
movsb
aaa
sahf
cli
inc
jl
lods
mov
sti
aaa
ds
ficompl
and
push
push
xchg
mov
lcall
stos
xchg
inc
rcl
pop
nop
jle
mov
adc
jae
hlt
clc
mov
jo
jo
adc
sub
jge
lods
xchg
sbb
or
mov
rcrb
ret
mov
sub
mov
push
aam
xor
mov
jl
xlat
cwtl
adc
lds
inc
stc
decb
mov
ret
mov
add
jne
push
enter
ret
mov
iret
shll
cwtl
sarl
jne
pop
sub
mov
mov
jmp
repnz
ficomps
xor
dec
fbstp
mov
call
outsb
jo
ret
sbb
test
hlt
sub
push
stos
dec
push
mov
mov
out
sahf
jno
pop
scas
adc
mov
mov
add
jmp
gs
inc
xchg
push
out
ret
sahf
cs
or
out
notl
push
jp
outsb
mov
jecxz
leave
hlt
in
std
inc
cmp
enter
shr
add
jns
imul
xor
ret
ret
mov
mov
add
aaa
loope
les
push
push
int
push
lret
sub
cmp
cmp
push
xor
dec
ret
rorb
popa
cmc
xchg
dec
ret
mov
adc
shlb
in
xorb
inc
aad
sbb
mov
jle
mull
add
jb
push
mov
push
addr16
ret
xchg
es
mov
add
push
or
sbb
lds
sahf
les
mov
addr16
sbb
inc
fdivrl
cld
cmp
lahf
leave
test
cld
sbb
dec
andl
add
dec
ret
data16
lods
add
mov
and
pop
xchg
pop
add
mov
xchg
les
ret
xchg
mov
xchg
dec
ret
mov
mov
xor
mov
mov
add
cmpsb
loopne
leave
pusha
ret
mov
mov
and
ret
mov
add
adc
mov
repnz
clc
jo
ret
inc
ret
pop
fildl
add
xchg
jb
push
sub
push
cmp
addl
out
aaa
bound
sub
mov
mov
push
cli
mov
xchg
mov
in
xchg
jmp
dec
in
cs
sub
and
ljmp
std
sbb
mov
push
mov
ret
mov
ret
les
stc
sub
cmp
xchg
pop
push
sahf
fnstsw
inc
test
mov
ret
dec
xchg
xlat
sbb
add
mov
inc
ret
mov
lods
adc
inc
bound
rol
popa
push
xor
sub
insb
ret
mov
xchg
xchg
test
add
mov
jns
and
shlb
add
data16
mov
ret
ja
jg
bound
adc
xor
fstps
test
shlb
inc
ret
lahf
jns
pop
call
js
aad
pop
adc
cli
push
inc
jg
jns
xchg
add
mov
and
dec
mov
mov
dec
mov
push
mov
into
xchg
cmpsb
fsubs
sbb
insb
ret
inc
adc
out
pminsw
sub
aas
mov
mov
movsb
push
jnp
fmull
sub
mov
jmp
sub
mov
mov
lahf
ret
mov
inc
test
xchg
sbb
dec
jg
ret
mov
sub
test
cltd
nop
dec
ret
movsb
pop
loopne
test
push
arpl
ja
xor
jno
stos
leave
inc
ret
mov
mov
popa
or
mov
test
or
daa
ja
and
mov
lahf
popf
frstor
ret
mov
or
lahf
mov
mov
add
movsl
cmp
mov
mov
xchg
shll
imul
ret
lcall
xor
imul
pop
stos
mulb
add
nop
addb
add
jns
int3
inc
je
lret
adc
pop
stos
outsl
call
mov
sbb
mov
mov
mov
ret
mov
test
mov
cmpsl
dec
jne
ret
mov
jmp
xlat
push
sarl
sahf
xlat
xor
jne
fidivrl
add
aam
fisttps
add
inc
xor
test
and
mov
pushf
pop
mov
ret
mov
in
xlat
sarb
jne
ret
hlt
out
aad
pushf
rol
test
inc
fwait
lods
clc
adc
mov
dec
ret
mov
movsl
bound
fimuls
push
addr16
sbb
int
inc
loop
lret
inc
ret
push
jns
sub
or
xchg
mov
leave
xchg
test
adc
ficomps
or
mov
lahf
inc
xchg
lods
enter
inc
xchg
push
add
mov
test
int
cmp
mov
popa
xlat
jnp
out
enter
jae
and
popa
or
mov
cmp
add
sbb
ret
mov
aaa
sbb
lods
add
lcall
data16
popf
shll
mov
and
mov
push
hlt
arpl
xlat
shrb
outsl
add
out
cs
outsl
cli
clc
jp
mov
xchg
std
push
imul
mov
dec
adc
ss
ret
mov
addr16
inc
ret
pop
cmp
xor
cmp
pop
mov
pop
xchg
push
and
mov
idiv
out
dec
push
sbb
icebp
sahf
jbe
cmpsb
movsb
je
arpl
stc
add
mov
addr16
sbb
or
das
mov
inc
ret
nop
lcall
mov
pop
aaa
push
jns
mov
daa
mov
inc
ret
out
pop
pop
xor
daa
popf
aad
and
mov
out
jne
adc
sub
inc
or
and
aad
in
mov
cmp
mov
mov
into
jbe
into
test
adc
mov
add
loopne
nop
test
adc
imul
lcall
push
mov
leave
jb
mov
xchg
fisubrs
hlt
jns
repnz
cmp
andb
inc
xchg
movsb
pop
fwait
enter
sub
repnz
or
mov
outsb
scas
enter
rorl
shlb
movsl
lods
outsl
add
shrb
add
jbe
prefetch
cs
ret
in
pop
shll
mov
adc
mov
mov
inc
jne
or
jbe
adc
fsts
in
sub
mov
dec
ret
mov
jg
jp
sub
mov
lahf
adc
divl
pushf
stos
mov
outsb
mov
ret
mov
mov
imul
popf
and
mov
cmp
and
or
lahf
lahf
fadd
int
popf
lods
or
add
popa
dec
and
push
fildll
ret
mov
clc
or
mov
add
inc
ret
cli
in
outsb
jge
jecxz
adc
jb
mov
imul
jne
or
mov
ret
dec
push
fsubp
mov
cmovae
mov
loopne
movsb
mov
data16
mov
cwtl
rcr
cmpsl
insb
ret
mov
add
cltd
add
add
outsl
subb
insl
cmp
add
mov
ret
jecxz
sub
xchg
inc
in
xchg
push
add
mov
adc
addr16
in
rorl
push
push
int3
ss
push
pop
dec
ret
mov
fidivrl
xor
bound
das
mov
divb
sahf
mov
add
mov
mov
mov
lret
sub
mov
ret
cmp
xchg
jno
ret
mov
xor
loope
pop
lock
addb
mov
les
mov
lahf
mov
or
lods
and
movsb
xor
push
fs
ret
es
push
push
repz
movsl
xor
push
lahf
out
add
test
add
jno
scas
mov
jo
mov
aas
sub
push
pop
clc
mov
add
mov
add
dec
ret
test
in
pop
xchg
mov
ss
jnp
adc
pop
stos
fsubl
pushf
test
cmp
ret
mov
inc
xor
pop
jp
popa
cmpsl
in
xchg
fstpt
ret
xorl
push
inc
ret
mov
mov
xchg
sarb
push
add
mov
add
or
ret
mov
ret
or
mov
inc
pop
jnp
xor
cmp
adc
add
es
out
ds
aad
sbb
or
out
sti
and
stos
test
mov
xchg
xor
sub
imul
mov
dec
add
jbe
test
xor
aad
into
push
bound
loope
pop
ljmp
das
ficomps
or
loop
ret
mov
in
fnstcw
inc
sbb
insl
lret
lahf
daa
lret
in
popf
fnstenv
cltd
ds
pop
iret
cld
inc
push
add
mov
ret
mov
mov
mov
leave
jns
clc
enter
in
fdivs
lahf
push
imul
xchg
cmp
call
mov
data16
mov
icebp
xchg
sub
test
mov
xor
xlat
fsubl
adc
cli
ret
cmp
inc
inc
add
mov
fucomip
mov
bswap
adc
sub
popf
in
fldt
xchg
daa
arpl
cmpsb
popa
lret
test
push
and
mov
mov
push
aam
adc
iret
sub
mov
rorl
imul
xchg
andl
pop
arpl
insl
insb
ret
popf
mov
repz
adc
sub
mov
mov
sub
mov
int
in
xor
mov
dec
mov
stc
sub
mov
nop
gs
loopne
push
sub
test
pmulhuw
testl
and
mov
add
xchg
nop
ds
iret
jecxz
add
lods
jp
rol
and
ret
popf
or
mov
popf
lds
decb
popa
data16
mov
xchg
add
add
cmc
sbb
ret
mov
xor
movsl
xchg
in
int3
fadd
sub
mov
call
icebp
sbb
sub
ds
sti
jg
mov
xor
ret
mov
mov
lock
mov
adc
rcll
lock
mov
stos
out
xchg
lock
adc
inc
loopne
sub
mov
sti
js
jecxz
insl
push
ja
rorb
mov
cmpsb
pop
adc
imul
int
aas
lahf
ss
jmp
jbe
push
pop
pop
inc
mov
add
aad
sahf
dec
ret
mov
push
jo
xorb
ret
xor
mov
dec
dec
out
lahf
pop
jecxz
ret
loopne
add
mov
dec
ret
mov
in
and
int
movsl
fiaddl
xchg
lea
mov
scas
out
push
jae
gs
sub
mov
push
xchg
dec
ret
push
fwait
scas
mov
sub
xlat
push
mov
cli
adc
sub
fdivrl
mov
adc
pop
push
nop
xchg
addr16
and
orb
push
in
cmp
jns
ret
mov
mov
push
add
adc
add
mov
mov
adc
cmc
ror
ret
mov
mov
adc
mov
insl
cld
mov
add
mov
mov
xor
lahf
or
jecxz
ret
dec
imul
and
dec
sbb
int
addr16
or
ja
adc
xchg
inc
add
or
mov
add
mov
leave
push
test
dec
ret
mov
jb
repnz
repz
mov
cmpl
mov
xchg
enter
add
push
aaa
mov
cld
sbb
pop
mov
add
jge
sti
rcrb
lahf
add
data16
js
jae
ficomps
icebp
and
push
cmp
adc
fists
lcall
bound
mov
mov
arpl
or
mov
mov
add
push
lock
sub
out
daa
sbb
inc
test
jnp
xor
or
ret
mov
mov
lcall
aam
adc
jge
dec
mov
inc
mov
mov
lock
push
ret
or
mov
mov
outsb
pusha
ret
ss
loope
jmp
jno
mov
pop
add
inc
dec
lods
mov
out
mov
cmp
dec
cs
mov
jge
ds
adc
ret
inc
ret
inc
adcb
shlb
arpl
lea
sbbl
push
pop
rcl
mov
test
addr16
lret
jmp
sub
mov
sub
mov
aad
in
aad
insl
out
out
addr16
pop
push
jge
cmp
ss
mov
aas
lret
lods
push
stos
xchg
data16
ljmp
dec
ret
sahf
adc
and
adc
imul
shl
imul
mov
mov
pusha
ret
je
sti
or
mov
fimuls
ret
mov
shlb
dec
cmp
ret
mov
loop
ffree
outsb
ljmp
jne
xor
arpl
jb
inc
sub
cmp
push
or
mov
and
mov
push
and
mov
ret
rol
scas
lock
dec
ret
clc
call
mov
int
ret
sbb
mov
ret
mov
ret
mov
add
mov
dec
or
cli
mov
or
ret
mov
fadd
ja
jmp
loop
aas
out
sbb
pop
jo
insb
ret
mov
imul
loope
sahf
mov
lea
mov
push
pop
lea
add
cmp
xchg
mov
pop
jo
popa
inc
xchg
cld
mov
subl
pusha
ret
stc
cwtl
mov
pop
jmp
aam
dec
out
cmp
cmp
sub
mov
sbb
repz
js
lcall
loopne
mov
scas
mov
nop
mov
test
mov
ret
sub
mov
adc
xchg
sub
mov
pop
adc
sub
cmp
dec
scas
fwait
loope
and
sub
adc
mov
imul
movsl
cmp
add
cmpsl
pop
loope
clc
es
pushf
out
pushf
ljmp
mov
ret
into
into
inc
ret
test
ret
cld
xor
or
mov
mov
cmp
cmp
jb
mov
inc
sti
cli
dec
bound
ret
mov
push
mov
xor
mov
mov
pushf
dec
pop
pop
xchg
add
mov
add
sbbl
inc
adc
pusha
ret
mov
sub
add
outsl
bound
jg
mov
jmp
das
stos
lret
push
xor
mov
cwtl
shr
mov
cltd
outsl
cmp
shll
mov
push
imul
addr16
icebp
in
lods
repz
mov
adc
sub
sbb
pusha
ret
mov
add
pop
cmc
mov
adc
add
mov
or
mov
add
or
out
test
push
or
mov
mov
mov
mov
push
movsb
xor
ljmp
push
xchg
push
iret
cmp
push
in
rorb
mov
cli
das
jmp
sub
outsl
mov
sti
sbb
movsbl
insl
mov
js
fs
mov
in
cltd
jns
test
ja
mov
add
pop
lods
adc
inc
mov
xor
xchg
repnz
arpl
add
fwait
sbb
mov
mov
inc
ret
mov
add
mov
or
cmp
xorl
push
xchg
xchg
lds
nop
fisubrs
ret
fs
out
and
cmp
ret
mov
dec
add
mov
xor
ret
mov
mov
xlat
inc
lock
dec
cmpsb
or
test
shrb
pop
xlat
xchg
xchg
in
cmp
test
push
inc
int3
clc
repnz
pop
lahf
pop
cmp
xor
aaa
mov
ret
inc
jne
aaa
stos
cld
jne
mov
shll
or
push
mov
ja
push
jle
das
dec
ret
mov
adc
lcall
sub
mov
adc
rep
pusha
ret
mov
ret
mov
jns
ucomiss
ja
stos
subl
or
push
cmp
push
fadd
jno
rolb
mov
mov
mov
mov
sbb
pop
inc
ljmp
scas
inc
xchg
aad
cs
sub
mov
cmp
ret
in
pushf
leave
in
mov
ret
cltd
dec
loope
es
inc
cmp
ss
insb
ret
mov
xchg
imul
in
xchg
pop
mov
mov
clc
lcall
ret
aas
jb
mov
enter
ret
mov
add
mov
pop
xor
aam
ret
sbb
negl
ret
mov
sub
push
cmp
adc
xchg
scas
mov
xor
mov
ljmp
ffree
scas
popf
int3
je
add
daa
test
cmp
xlat
imul
jo
jb
inc
roll
adcl
dec
push
mov
jae
xchg
inc
nop
daa
add
movsb
pop
dec
je
leave
fs
push
jp
and
nop
mov
lds
stos
sub
mov
pop
and
mov
leave
stc
mov
bound
sahf
lcall
lret
mov
jb
mov
add
pushf
inc
fs
xchg
pop
or
xor
test
sub
bound
jg
outsl
stos
inc
dec
in
sub
pop
pop
and
mov
fadd
aam
push
stos
fidivrl
push
jmp
iret
test
xorb
jbe
or
or
fs
mov
mov
jp
ret
int3
pushf
jns
ret
mov
xor
mov
movsb
fwait
pop
add
cmpsl
jg
inc
jb
mov
cmpsb
or
mov
mov
add
fcmovb
addl
and
mov
imul
jge
adc
icebp
shrl
mov
jge
jno
fwait
xor
shlb
mov
push
movsl
cmpb
dec
div
mov
inc
aaa
mov
add
pop
ret
ret
negl
push
fcoml
sub
mov
jbe
xchg
repnz
jl
popa
pusha
ret
xlat
stos
outsl
sarb
xor
enter
xlat
out
inc
or
mov
sbb
fs
adc
insb
ret
mov
and
roll
cmp
jno
loopne
pop
out
pop
or
loope
sub
mov
mov
mov
cmp
mov
dec
mov
into
pop
inc
ret
mov
loope
ret
dec
xorl
mov
mov
stos
rcrl
cmp
dec
ret
loop
sub
jns
hlt
ss
aam
dec
ret
mov
fmuls
jb
mov
data16
push
nop
inc
push
inc
mov
hlt
lds
lods
mov
cwtl
aad
jae
iret
lock
shrl
fs
add
mov
add
pop
imul
popf
jl
out
testl
xor
xor
imul
and
ret
adc
es
ret
loope
addr16
lock
and
mov
lds
or
add
sub
leave
mov
xor
loope
ja
mov
movsb
dec
or
xor
out
mov
fs
test
lcall
shlb
jnp
out
sbb
in
adc
xchg
add
add
xrelease
mov
pop
add
adc
enter
dec
mov
cmp
mov
jmp
mov
pop
fprem1
ljmp
push
repz
fcmovne
out
add
mov
out
out
mov
xor
inc
ret
mov
dec
adcb
xor
push
out
xor
test
mov
mov
mov
pop
inc
adcl
mov
jnp
ret
popf
dec
mov
gs
lahf
xchg
add
push
movsb
shlb
std
fldenv
sbb
mov
ret
inc
mov
xorl
xor
inc
mov
sub
mov
push
sbb
jns
stos
fstps
push
dec
add
mov
leave
in
ja
andb
xchg
test
addl
push
loopne
push
test
mov
movsb
popf
fdivrl
fstpl
adc
cwtl
roll
ret
aaa
out
imul
jbe
mov
rcrb
syscall
xor
add
mov
inc
ret
cli
push
pusha
ret
mov
mov
mov
push
mov
xchg
mov
add
cwtl
divb
lahf
stos
fmuls
scas
shlb
mov
ret
das
mov
cmp
mov
mov
fcoml
call
add
inc
adc
loope
ret
mov
add
ja
xor
fwait
popa
mov
add
cltd
insl
leave
leave
pusha
ret
mov
fdivs
lcall
ret
xchg
rcrl
cmpsl
xor
scas
push
inc
aas
movsl
arpl
inc
out
add
mov
ret
lock
xor
inc
fwait
fwait
test
or
mov
adc
adc
arpl
mov
inc
ret
mov
add
mov
cmpsb
hlt
and
mov
decb
lds
mov
xchg
mov
fcompl
lcall
xchg
xchg
ja
or
shlb
pop
jp
rcr
rolb
dec
jge
push
push
jp
push
pop
sarl
xor
aaa
fstpl
sbb
mov
add
mov
jge
cltd
ljmp
scas
and
mov
cmp
jnp
jl
xchg
es
inc
shlb
mov
adc
test
sub
mov
scas
push
mov
xchg
mov
mov
xor
ret
mov
add
add
mov
cmpsb
mov
dec
inc
loope
jl
and
mov
imul
cmpsl
mov
sbb
mov
inc
je
add
add
add
mov
and
mov
or
mov
mov
adc
mov
push
xchg
mov
and
mov
divb
lock
and
xchg
dec
pop
mov
das
mov
pop
dec
cmp
pop
mov
scas
or
mov
into
dec
dec
push
das
lods
push
js
scas
daa
aam
rclb
pop
stos
adc
push
pop
pop
mov
loopne
addr16
pop
push
in
xchg
mov
xchg
mov
loop
loop
or
mov
mov
mov
and
inc
ret
inc
icebp
outsl
push
or
mov
mov
xor
xchg
sbb
neg
inc
ret
mov
into
lods
lods
std
push
popf
push
inc
cltd
popa
cltd
orps
icebp
adc
ret
in
add
ret
sub
add
sub
inc
ret
dec
flds
outsb
ret
into
ja
scas
jnp
shlb
pmaxub
mov
std
or
mov
add
imulw
mov
mov
aaa
lret
hlt
out
cltd
inc
ret
mov
outsb
dec
ret
mov
mov
je
jecxz
out
aaa
inc
cmpsl
cmc
push
fidivs
xchg
lret
pop
repnz
adc
sbb
scas
push
ljmp
mov
ret
cltd
sub
lret
sbb
xchg
fcomi
lock
xor
pop
ja
andb
ret
stos
call
sarl
outsl
dec
jge
push
mov
pop
out
mov
xor
adc
ret
in
mov
enter
jl
push
cmp
call
in
out
sub
imul
jo
or
mov
push
adc
hlt
push
ret
sbb
add
xchg
and
mov
jmp
adc
cmp
and
in
call
icebp
push
inc
mov
popa
push
scas
push
push
inc
ret
inc
pop
mov
dec
dec
movl
hlt
call
xor
cmpsb
fiadds
cld
pushf
popf
pop
pop
int3
push
iret
aas
mov
lock
outsb
or
dec
adc
iret
loop
sarl
into
dec
mov
mov
sbb
test
das
and
jge
push
movsb
fimuls
push
mov
push
add
mov
mov
out
sahf
push
ret
mov
lret
cs
fst
push
xor
loopne
jnp
ret
cltd
push
dec
sbb
loopne
js
pop
dec
sbb
sub
pushf
mov
scas
add
mov
xlat
mov
xchg
lock
testl
lahf
shlb
pop
inc
fwait
or
mov
je
test
adc
orb
adc
add
xor
out
loope
shll
outsl
dec
pop
add
mov
jo
fbstp
or
add
mov
jo
cmp
sti
pop
decb
cmp
xor
or
sub
mov
ret
fcomi
pop
mov
and
jmp
ljmp
in
xor
pop
andb
add
out
inc
mov
inc
ret
jecxz
xor
cs
cmp
ljmp
dec
repnz
jl
imul
fisttpl
mov
or
mov
mov
in
and
lcall
mov
icebp
shlb
inc
lret
mov
in
xchg
and
mov
inc
pusha
ret
lods
clc
xor
push
mov
xor
mov
xchg
mov
xchg
mov
ss
mov
and
lds
lock
mov
fcoml
icebp
out
inc
ret
mov
roll
cmp
movsl
sbb
xor
idivb
pop
lods
add
mov
adc
imul
xchg
adc
iret
imul
xchg
fs
adc
or
jg
push
xor
mov
add
pop
les
sub
mov
das
lcall
xchg
jnp
ror
outsl
mov
push
push
adc
pop
or
rolb
ret
push
test
inc
leave
xchg
addl
ret
mov
xor
mov
mov
adc
ret
mov
mov
sbb
dec
ret
mov
test
cmp
xchg
xchg
scas
adc
addl
mov
pushl
gs
sar
aas
xchg
mov
or
inc
ret
dec
lea
push
pop
stos
cmp
jg
mov
jnp
rorl
add
popf
test
and
dec
push
cmpsb
pop
mov
add
mov
data16
mov
xor
mov
mov
cmp
ljmp
movsl
les
inc
ret
loope
push
shll
add
dec
ret
mov
ret
mov
add
cmp
sub
mov
mov
iret
out
sti
mov
or
sbb
jo
adc
mov
add
mov
pop
lods
fcmovu
sub
mov
ss
inc
lea
outsl
adc
lock
add
mov
cmp
leave
negb
shlb
mov
stos
fs
icebp
movsb
pop
imul
ret
std
aad
ror
shl
mov
imulb
jp
ret
insl
daa
int
ficoms
jl
adc
test
jne
push
cmp
ret
mov
add
dec
ret
mov
fists
pop
orb
mov
leave
or
fmuls
xchg
loopne
add
mov
pop
insl
jns
inc
in
jg
shl
shl
mov
enter
fstl
lret
mov
ret
loope
cmpl
mov
jg
cmpl
popf
pop
insb
ret
mov
ret
mov
or
ds
shlb
into
or
mov
jnp
push
lods
xchg
add
cmpsl
jae
test
ret
mov
mov
mov
xchg
int
pop
loop
jp
inc
ret
or
xchg
out
push
int
addr16
rcrb
inc
adc
das
mov
add
arpl
scas
mov
daa
mov
out
add
fsubrs
cmp
stos
push
sti
mov
mov
clc
sub
push
nop
repnz
jo
add
push
mov
xchg
sti
mov
mov
xchg
and
mov
fwait
mov
lods
fidivrl
pop
push
in
add
adcl
fwait
rol
and
mov
cmp
das
add
mov
inc
ret
mov
scas
test
sbb
in
sti
mov
mov
in
fildll
mov
mov
les
xchg
pop
sub
mov
pop
imul
pop
pop
cmp
ret
mov
mov
movsl
int
jb
sub
mov
adc
mov
cli
inc
testl
mov
test
das
in
jmp
test
inc
dec
aas
jno
jnp
jmp
mov
adc
aad
lret
ror
call
cmpsl
pop
test
ret
mov
sti
ds
fucom
mov
aam
ss
cmp
test
cmp
mov
ret
push
sbb
lret
movsb
cld
sbb
pop
mov
adc
repz
jb
ret
mov
mov
mov
xor
cmp
add
mov
add
lock
lcall
mov
es
lods
aam
dec
pop
rcr
ficompl
and
mov
js
jnp
insl
inc
cs
jl
mov
mov
push
jmp
add
movl
arpl
clc
das
jae
and
mov
sbb
mov
ljmp
mov
leave
imul
cmp
add
arpl
ret
mov
mov
addb
mov
popf
sbb
inc
and
adc
andb
iret
sub
mov
add
mov
nop
add
mov
subl
ret
andl
push
ret
bound
in
mov
adc
cwtl
je
insl
jmp
cmp
orb
push
and
mov
ret
mov
add
push
or
mov
jae
push
aad
jle
loop
movb
xchg
fistps
fcmovnb
or
ret
mov
out
ret
mov
mull
iret
popa
cld
dec
stos
sbb
jb
subb
ret
lret
xchg
orb
loopne
sub
mov
ret
mov
mov
xor
loope
faddl
lea
or
mov
cmp
arpl
adc
rorb
fyl2x
outsb
pushf
pop
inc
fwait
xor
cmp
and
mov
ret
mov
push
leave
fsubrs
imul
ret
mov
add
sub
mov
and
mov
lahf
inc
push
xchg
addr16
mov
dec
movb
mov
cmp
je
add
add
mov
loope
loopne
inc
ret
mov
neg
fstpl
test
cwtl
inc
xlat
dec
out
mov
shrb
test
js
mov
lds
mov
and
mov
jae
in
cmp
lds
fstps
jae
movl
ret
mov
cmp
cmp
mov
lock
sti
fistpl
divl
ficoml
lods
mov
mov
jae
pop
jmp
pop
aam
jno
inc
ljmp
cmp
mov
sub
outsb
or
pop
in
repz
add
add
mov
mov
in
pop
mov
mov
push
mov
push
mov
sbb
loopne
inc
xor
mov
pusha
ret
dec
cld
xor
adc
mov
mov
mov
sti
ret
js
ret
iret
mov
adc
call
fisttps
imul
ret
sub
mov
bound
sub
in
pusha
ret
mov
ljmp
shr
daa
js
dec
repz
orl
add
cld
js
into
jmp
xchg
sbb
ret
mov
out
movsb
cltd
stos
sub
pop
test
xchg
add
xchg
mov
leave
ds
bnd
cld
fdivrl
das
or
mov
fsqrt
stos
inc
ret
outsb
hlt
jmp
sbb
xor
add
mov
sbb
jne
xchg
in
lahf
push
jne
mov
cmc
movsl
cwtl
fs
xor
ret
mov
sbb
rorl
ret
push
mov
scas
es
add
mov
pop
xchg
sub
adc
sub
mov
lods
rclb
fbld
cwtl
jge
ret
in
pop
mov
ret
dec
cs
mov
jae
inc
inc
rorb
jle
ret
mov
push
mull
mov
rcrl
and
adc
cmp
xchg
xchg
mov
fcomps
mov
add
aas
and
ret
dec
ret
mov
mov
js
addr16
jp
pop
outsb
xchg
jg
lea
mov
xchg
lret
and
mov
aad
ja
imul
out
hlt
jmp
mov
push
dec
inc
imul
and
push
dec
cs
arpl
sub
mov
pop
inc
mov
jle
inc
lret
sub
mov
ret
add
mov
mov
push
jns
push
pop
les
mov
jb
int
lret
ret
pushf
std
mov
mov
addl
ret
mov
push
fnstsw
ret
lret
popl
mov
out
inc
mov
xchg
js
fdivs
add
out
jae
mov
dec
push
and
mov
add
lods
jmp
mov
push
jle
and
and
lds
stos
push
popa
testl
insl
or
jo
popf
mov
xor
add
aad
push
imul
lods
clc
xor
xchg
mov
in
std
xchg
or
mov
xor
aas
inc
xchg
stos
xchg
mov
dec
push
xchg
adc
nop
sbb
add
add
aad
insl
dec
cli
or
mov
mov
xchg
ret
mov
lods
fldcw
and
int3
dec
sahf
aas
scas
idiv
loopne
xchg
adc
push
test
rolb
fisttpll
jmp
lcall
mov
ljmp
xchg
scas
cmp
ret
mov
pop
ret
outsb
mov
add
jns
adc
sbb
and
mov
mov
jge
and
push
or
push
mov
ret
push
bound
mov
pop
xlat
into
inc
mov
jmp
push
add
orb
cwtl
data16
mov
mov
cltd
int3
mov
ds
sub
adc
cltd
insb
ret
inc
ret
lods
add
dec
pop
mov
jbe
js
jmp
loope
inc
jmp
movsb
add
mov
lea
out
sub
mov
cmp
js
xchg
bound
xor
sbb
lock
mov
mov
add
sti
sub
xlat
mov
and
fldenv
jge
jge
pop
push
mov
dec
sti
cs
lcall
ret
mov
scas
push
ljmp
enter
mov
add
cmp
add
lea
xchg
mov
xchg
stos
cmp
shll
fisttpll
jns
xor
mov
out
or
shll
mov
jmp
arpl
pop
sbb
cmpl
ret
mov
add
mov
dec
bound
inc
sbb
inc
ret
mov
insb
ret
mov
mov
push
out
lret
push
mov
add
adc
mov
adc
out
sbb
ret
push
xchg
test
lret
push
add
stc
cld
push
mov
leave
sbb
lods
test
add
adcb
jge
pop
ror
lods
adc
cmpsb
js
fcomip
inc
ret
cmp
cmpsl
sar
lcall
jo
gs
dec
mov
and
mov
adc
lods
xchg
mov
or
mov
xchg
dec
add
divl
int3
and
mov
pop
mov
xor
in
mov
add
hlt
add
mov
icebp
xchg
pop
fcmovbe
movsb
jns
aaa
aam
sbb
inc
mov
xor
es
pop
gs
lods
std
mov
mov
inc
inc
gs
cmp
cmp
cmp
sub
xor
push
sbb
sbb
addl
xor
mov
ret
enter
mov
or
mov
add
jge
mov
and
mov
aam
fs
mov
sti
lods
lcall
hlt
out
mov
inc
mov
ret
push
cld
mov
ret
sbb
mov
sbb
and
ficoml
jp
movsb
pop
int
inc
cli
jp
jo
sbb
ret
outsl
jae
in
imulb
mov
mov
add
addr16
mov
stos
cld
mov
jnp
cmp
out
add
dec
mov
add
fst
test
mov
mov
mov
adc
sarl
mov
dec
add
mov
ret
mov
jno
jne
or
push
add
mov
pop
pop
push
iret
ds
ret
cli
ret
mov
push
dec
push
pusha
ret
mov
decb
add
lods
into
cmovae
adc
pop
ficoml
ja
pushf
dec
ret
jae
lods
ficompl
into
outsl
cmpl
fisttps
mov
mov
mov
mov
faddl
pop
fbld
add
mov
fnstenv
ret
mov
pop
leave
repz
xchg
mov
xchg
sahf
shl
loope
clc
out
sub
mov
xrelease
mov
sbb
cmpsb
and
mov
fdivrs
sub
int3
loope
jl
fcompl
adc
push
mov
fs
adc
int
xchg
leave
test
test
sub
mov
mov
das
add
xchg
dec
ret
lea
fiaddl
mov
sub
mov
jae
xchg
jnp
shl
adc
orb
ret
stos
dec
push
inc
insb
ret
int3
xor
push
bound
fsubl
mov
sbb
call
icebp
inc
ret
outsl
cmp
leave
pop
int3
inc
inc
push
cmc
aaa
shll
sbb
nop
mov
call
jnp
out
fsub
add
mov
cwtl
push
mov
xor
ret
dec
dec
xor
inc
ret
mov
sbb
mov
std
mov
outsb
pop
inc
pop
std
push
lods
sub
dec
inc
mov
cmpsb
mov
int3
popa
mov
cmpsl
xor
sub
sbb
sub
sbb
sbb
pusha
ret
mov
in
adc
inc
jnp
cmp
dec
xchg
pop
and
mov
mov
and
mov
fsub
jae
popf
or
mov
add
test
out
jnp
ret
mov
cmpsl
pushf
jno
ret
or
jbe
out
sbb
stc
mov
cmove
mov
pop
mov
ret
ljmp
scas
scas
fcmovb
ljmp
add
jns
push
sbb
add
lahf
or
mov
mov
add
mov
scas
dec
leave
icebp
inc
popf
jge
xchg
xor
mov
xor
mov
pushf
cs
icebp
xchg
or
jmp
xor
loopne
es
add
out
orb
pop
arpl
call
mov
xor
icebp
sbb
jl
adc
pop
mov
mov
or
xchg
cltd
inc
lods
icebp
jmp
add
push
movsl
stos
xchg
fistpl
lock
ljmp
mov
or
mov
shrl
and
rorl
ret
mov
pop
adc
es
pop
fidivrl
jle
adc
int
mov
add
cmpsl
fiaddl
ret
xchg
ds
loope
fmul
imul
add
mov
inc
xchg
insl
and
push
adc
roll
push
jo
push
mov
jle
popf
sbb
mov
scas
sbb
in
ret
mov
cmp
loop
mov
loopne
sbb
cltd
es
mov
sub
test
pop
or
mov
add
jmp
sbb
mov
iret
xor
pop
cmp
in
cltd
mov
mov
pop
lahf
sub
loopne
ret
sahf
jmp
cli
repnz
cmp
sbb
mov
sahf
nop
movsl
std
popa
lds
fidivl
ret
mov
dec
xchg
mov
jecxz
adc
add
push
aad
xchg
dec
ret
arpl
mov
mov
dec
dec
pop
call
pop
xchg
adc
xchg
ret
jmp
jbe
jmp
lcall
mov
leave
std
dec
sub
mov
loop
and
loopne
dec
ret
mov
xchg
aad
mov
add
mov
push
cmp
push
mov
cld
jns
call
or
mov
shrb
sub
imul
lret
adc
dec
adc
repnz
jne
lods
aam
dec
ret
ja
ret
jno
lods
js
mov
xchg
jg
sbb
mov
loopne
xor
adcl
shl
push
outsl
orps
jo
inc
ret
mov
and
mov
ret
jne
movsb
pop
sub
test
lods
mov
decl
jnp
adc
jge
inc
jp
ret
stc
push
xor
repz
dec
sub
mov
dec
xchg
pop
icebp
mov
push
sub
add
add
jp
and
dec
mov
inc
inc
insl
test
mov
addb
dec
ret
inc
ficomps
js
sub
mov
andb
ret
mov
cmc
sub
add
mov
mov
inc
ret
cmpsl
gs
dec
ret
mov
xor
ret
mov
xchg
xchg
xor
or
mov
inc
ret
cmp
insl
mov
jecxz
adc
jnp
fwait
inc
inc
leave
aaa
in
mov
xchg
jns
pop
enter
mov
xchg
call
bound
push
pop
push
jo
and
arpl
ret
jo
fs
fcmovnb
out
adc
pop
jle
lods
idivl
mov
jg
lret
test
jnp
shll
rolb
sub
pop
xchg
cmpsl
cmp
dec
sbb
shrb
test
ret
stc
xchg
jns
mov
add
stc
adc
mov
push
imul
in
loopne
or
fwait
out
dec
ret
adc
pop
xchg
xchg
dec
lcall
push
mov
enter
xchg
ret
mov
std
add
xchg
inc
mov
pushf
sbb
or
mov
jne
out
adc
shll
pop
or
repnz
mov
mov
hlt
icebp
rcll
mov
sti
cwtl
jne
jecxz
in
call
mov
xor
in
jo
aad
xor
xchg
in
and
mov
popa
repz
mov
or
adc
hlt
jmp
lcall
mov
ret
mov
add
fisubs
data16
mov
push
cld
jle
or
cmpsl
push
add
iret
fisubrl
mov
add
add
cltd
lods
mov
imul
cmp
push
pop
push
and
push
mov
xor
fidivrs
mov
pop
jbe
mov
mov
mov
xchg
mov
xchg
mov
fbld
paddusb
jns
lahf
js
repz
cltd
lods
jo
icebp
test
add
adcl
idivl
sahf
add
mov
in
icebp
xchg
mov
cmp
dec
leave
mov
xchg
into
xor
jle
adc
nop
mov
mov
mov
cmpsl
aaa
jecxz
fidivs
or
popa
push
fcmovb
mov
ss
mov
into
cmp
nop
mov
mov
add
sbbl
mov
out
addl
or
mov
inc
sbb
stc
sbb
jnp
ret
mov
daa
mov
cs
lods
inc
cmpl
add
aam
out
xchg
adcb
dec
mov
lcall
ret
or
add
xlat
pop
repnz
ret
mov
mov
add
mov
cs
pop
fisubrl
iret
pop
scas
aaa
gs
pop
popf
call
shld
daa
mov
stos
mov
in
jle
pop
jmp
test
jbe
popf
add
jb
ret
xchg
rol
stos
mov
add
xchg
out
stos
test
insb
ret
mov
repnz
lret
xchg
mov
loop
sarb
ret
mov
cltd
gs
stos
sar
hlt
mov
or
mov
add
mov
add
mov
xlat
iret
xor
ficoml
dec
test
outsb
int3
sbb
pusha
ret
loopne
mov
jmp
cmc
hlt
sti
push
ja
pop
add
mov
mov
ss
jae
inc
mov
adc
mov
push
fcoml
pop
cmc
mov
xchg
push
subl
loope
mov
clc
mov
jno
or
mov
rclb
pop
sub
mov
ret
mov
js
jae
ret
mov
cmpsb
leave
adc
mov
leave
ds
ret
jp
mov
shll
sbb
test
inc
imul
push
jmp
ds
mov
or
leave
mov
notb
loop
mov
cli
das
out
jmp
xor
lock
pop
jle
leave
mov
xor
mov
shlb
mov
out
jns
loop
mov
in
test
cmc
mov
mov
fadd
dec
mov
and
mov
out
stos
lock
popa
mov
pop
andb
mov
push
adc
imul
loope
stos
and
das
movsb
mov
ret
mov
sarb
sbb
xchg
pop
in
out
or
sbb
mov
pop
icebp
dec
push
xor
ljmp
inc
ret
mov
mov
xor
push
sahf
or
mov
lahf
cmp
ret
mov
jno
inc
popa
enter
repnz
mov
ret
mov
mov
xchg
nop
in
ret
test
jns
sahf
cmp
ret
lds
jg
out
shl
mov
cmp
mov
outsl
in
data16
cmpsb
adc
xchg
in
out
shll
xchg
xchg
mov
lcall
cltd
lock
push
mov
push
inc
mov
clc
test
mov
nop
outsl
loope
push
dec
into
xchg
frstor
jnp
sahf
sbb
loope
ret
nop
lcall
pop
xchg
nop
add
mov
add
ret
iret
sbb
lods
inc
ret
add
mov
sub
mov
add
loope
xorl
or
gs
sub
ret
test
mov
push
mov
clc
loop
push
jbe
cli
fwait
adc
lahf
xchg
dec
daa
sub
mov
add
mov
mov
pop
shl
cmp
hlt
or
mov
xlat
lds
nop
stc
jno
add
test
push
dec
lcall
dec
jbe
imull
mov
cmp
test
xor
mov
mov
mov
lock
loop
cmp
mov
ret
pop
into
repnz
sahf
outsl
or
push
and
add
push
jae
rorl
sub
pop
and
dec
xchg
ficomps
sbb
jb
lcall
inc
jbe
jae
mov
test
jg
repnz
arpl
inc
out
jg
cmpsb
inc
push
xlat
adc
and
mov
out
in
sub
movsl
inc
push
lahf
gs
mov
adc
jle
xor
inc
fisubrl
rorb
mov
in
lock
das
dec
test
movsb
ss
push
lret
cmp
gs
sbb
std
xor
cmc
sub
mov
sarb
loope
out
enter
add
and
mov
in
or
mov
lods
cmp
ret
mov
add
repz
add
mov
pushf
insb
ret
jb
ret
enter
daa
xchg
aas
stos
mov
rclb
pusha
ret
adc
xchg
add
addr16
push
mov
pop
pop
cmp
push
or
dec
xchg
mov
dec
rcl
inc
xchg
jecxz
ret
sub
push
pop
lea
fsubrs
xlat
pop
sbb
xchg
jle
mov
mov
arpl
add
out
and
hlt
or
mov
add
outsl
movsb
or
stos
out
movsl
decl
adc
cmc
lods
dec
and
scas
or
sarb
ret
xor
mov
dec
mov
sbb
xlat
push
sub
insl
xchg
mov
cmpsl
mov
rcl
push
mov
mov
ret
xchg
xlat
loopne
out
cmc
xor
jno
ret
mov
cmp
and
add
xchg
push
pop
push
fildl
mov
and
int3
jge
adc
push
cmpsl
test
in
adc
shll
jecxz
mull
or
xlat
xor
jg
cmpsl
jb
js
dec
dec
dec
push
jo
inc
mov
mov
mov
in
and
add
and
xchg
fisubrs
sub
call
shrl
mov
xchg
sahf
xlat
jmp
mov
cmpsb
or
sbb
das
dec
subb
sbb
mull
arpl
jmp
lods
aaa
add
je
adc
dec
adc
rorl
and
mov
mov
mov
ret
mov
adcb
mov
ret
cs
sti
or
push
push
stos
and
mov
ret
mov
push
xchg
insb
ret
mov
or
sbb
push
sbb
vxorpd
mov
jno
fwait
add
pop
mov
test
ret
pop
fbld
lock
negb
cmp
scas
popf
aad
mov
mov
cmp
int
add
enter
gs
and
mov
ret
mov
addl
push
add
push
and
adc
cwtl
push
push
ret
mov
ret
addl
and
xchg
insl
jae
adc
pop
testb
mov
mov
xor
xor
fdivl
clc
cwtl
aaa
push
inc
fwait
icebp
mov
arpl
ret
mov
mov
mov
xchg
jecxz
ret
dec
movsb
cmp
adc
mov
or
mov
fildll
cmp
xor
fisubl
ret
mov
lahf
aas
js
aas
dec
push
xchg
mov
and
push
popf
test
sbb
ret
lods
adc
out
mov
jmp
xchg
mov
add
mov
ret
adc
pusha
ret
aas
inc
push
std
cmp
pop
mov
incb
icebp
add
mov
mov
jle
jmp
lods
pusha
ret
mov
push
push
sahf
push
push
sub
insb
ret
mov
cs
jl
mov
xor
negb
inc
fcmovnu
jno
pop
xlat
inc
sub
mov
push
andl
mov
cmp
sbb
dec
cmp
bound
insl
in
inc
ret
iret
cmpsl
in
pop
sub
mov
ret
mov
scas
push
hlt
adc
mov
das
lret
mov
into
clc
mov
lods
mov
insl
leave
jmp
xchg
imul
adc
xchg
or
lods
jl
mov
repnz
ja
fsubl
ret
mov
xor
push
sub
mov
iret
push
aam
mov
ret
jmp
imul
rcrl
add
add
in
xlat
jns
pop
xchg
dec
insb
ret
dec
call
mov
fwait
imul
mov
stos
jno
jecxz
pop
lret
bound
cmp
jo
and
fildll
out
xor
lock
mov
add
stc
or
imul
sub
mov
in
fcomps
iret
rolb
pop
in
cmp
push
mov
lret
movsl
mov
lcall
add
lea
and
pop
sahf
addr16
cwtl
ljmp
insb
ret
lret
sbb
pop
mov
dec
ret
cltd
and
adc
push
xlat
and
mov
nop
int3
fstl
mov
mov
mov
adc
and
fucomip
mov
or
ret
sub
push
out
push
mov
ret
and
mov
xor
mov
mov
mov
and
ret
add
mov
lret
es
jl
fisttpl
xor
mov
jl
pop
push
mov
mov
dec
ret
mov
mov
and
mov
ret
divb
mov
lea
lods
gs
pop
push
add
jp
fs
imul
push
dec
ret
leave
and
lahf
rolb
ret
push
mov
adc
fisubrs
mov
aad
stos
or
mov
movsl
mov
adc
add
les
ljmp
addr16
mov
dec
push
js
je
xchg
loopne
dec
inc
out
insl
ja
repz
bound
aad
out
movsl
call
dec
ret
dec
push
mov
mov
jge
mov
dec
shlb
aad
pop
mov
gs
xchg
or
lods
pushf
pop
pop
nop
outsb
test
and
mov
pop
std
add
rclb
xlat
loopne
xchg
mov
sub
clc
mov
add
repnz
pushf
packssdw
pop
add
clc
nopl
test
pusha
ret
mov
xchg
fidivrs
xchg
in
into
mov
lret
sbb
jns
loopne
popa
dec
das
loopne
mov
jbe
ret
iret
mov
ret
xlat
imul
dec
xlat
or
mov
add
or
stos
test
lcall
fldl
popa
xor
addr16
test
test
js
xchg
mov
pop
pop
ss
loope
sub
mov
bound
add
mov
ret
mov
mov
aad
pop
out
into
cmp
xor
repz
inc
ret
mov
ret
inc
in
and
xor
add
roll
add
mov
pushf
out
cs
push
orl
add
mov
in
xor
mov
jp
scas
stos
cmp
mov
lcall
lahf
adc
xor
ret
mov
mov
hlt
jnp
nop
mov
insb
ret
mov
fimull
pop
jne
call
ret
mov
add
sub
iret
mov
xorl
add
gs
sti
orl
movsb
fdivl
ret
mov
jbe
nop
push
out
ret
hlt
js
jno
ret
aaa
imul
jnp
push
inc
ds
lea
mov
add
mov
pop
data16
pop
jnp
or
or
mov
out
in
cmp
push
push
jle
loopne
adc
test
jnp
ret
mov
add
mov
sbb
inc
adc
add
push
or
mov
adcb
fistpl
and
mov
cmp
sbb
incl
loopne
xchg
mov
dec
rcrl
jno
sub
mov
ror
sub
jns
xchg
push
out
dec
rcrl
ret
out
push
dec
mov
pop
lahf
scas
gs
inc
ret
mov
adc
inc
ret
mov
insb
ret
sub
clc
xor
fidivrs
pop
xorl
imul
shrl
repnz
xchg
add
mov
cltd
out
lret
dec
or
mov
and
mov
ret
fs
cmp
in
rclb
rclb
loopne
sub
and
mov
pop
jne
test
ret
jo
pop
sub
mov
loop
pop
push
add
mov
test
add
add
push
lods
cmp
xchg
inc
ret
daa
out
mov
ret
cwtl
lahf
mov
mov
xchg
out
xchg
adc
pop
sub
mov
ret
and
aam
sbb
jo
mov
test
test
add
fisubrl
mov
mov
stos
pop
leave
or
mov
pop
mov
ret
mov
push
fstl
ss
inc
sbb
aaa
bound
push
fmulp
mov
ret
mov
fistpl
hlt
ljmp
ds
ret
mov
idivb
mov
or
stc
and
push
movsb
cmc
xchg
sbbb
inc
ret
mov
sbb
mov
movsb
fdivs
mov
shl
sldt
mov
stc
push
xor
enter
and
mov
mov
ljmp
pushf
xchg
cmp
xorb
fxch
or
incl
mov
pop
cmc
arpl
sub
movsb
data16
pop
or
mov
or
mov
adc
int
xchg
sub
sahf
or
inc
divl
ret
mov
dec
ret
mov
xlat
lods
sti
aas
cmp
mov
push
pop
lcall
dec
ret
and
push
pop
aas
mov
push
fs
mov
push
fsubl
dec
ret
lods
pop
ret
ror
loopne
xchg
or
add
push
fstl
add
fucomi
js
inc
imul
or
mov
dec
arpl
inc
push
mov
dec
ret
push
pop
push
dec
jecxz
jp
pop
stos
flds
jmp
out
pop
sbb
in
add
mov
xchg
push
ret
mov
gs
outsb
ret
add
mov
insb
ret
cwtl
int3
mov
into
sub
xchg
lret
xor
mov
lds
ret
cmp
daa
add
mov
xchg
xor
add
xchg
sub
mov
cli
rorl
xchg
lcall
pop
pop
pop
cmpl
mov
aad
call
pop
push
dec
mov
loopne
pop
fisttpl
cmp
cmp
incl
lds
add
cmp
xchg
leave
pusha
ret
popa
xchg
ret
sahf
sti
rcl
shlb
add
mov
mov
push
repnz
ret
mov
mov
in
es
call
out
inc
mov
jecxz
aam
ljmp
mov
jl
int3
mov
hlt
rep
mov
jle
repnz
shrb
stc
dec
jmp
sbb
adc
lcall
mov
ret
rcr
ljmp
fsubl
sbb
stc
addr16
adc
mov
add
mov
adc
mov
mov
cs
fistl
sub
das
jno
imul
mov
adc
jnp
sbb
mov
xor
aas
loope
xchg
or
mov
mov
sub
sub
and
mov
or
ret
mov
jecxz
out
fstpl
outsl
shll
negb
dec
ret
lea
jb
testb
add
pushf
lods
rol
dec
mov
orb
mov
addr16
scas
mov
ret
ljmp
dec
pop
push
fsubs
int3
inc
xchg
xchg
sub
mov
mov
jecxz
ret
mov
mov
sbb
inc
and
dec
cmpsl
repnz
inc
ret
mov
xchg
jp
into
push
nop
mov
xchg
cmpsb
jp
nop
mov
in
mov
hlt
int
mov
jle
dec
mov
ret
pop
mov
inc
insl
imul
mov
mov
aam
cmc
adc
add
in
in
add
pop
orl
ret
mov
add
fisttpll
imull
mov
mov
shlb
cmp
lret
add
hlt
ror
push
jbe
jnp
test
or
mov
xchg
outsl
jno
lret
mov
andb
push
std
mov
add
inc
xchg
mov
mov
add
mov
xchg
loopne
dec
ret
mov
cmp
mov
add
pop
popf
in
lea
popf
or
push
adc
dec
ret
into
insl
lcall
mov
mov
aam
push
or
loopne
addr16
orl
ret
cmp
ret
mov
adc
jle
mov
stos
cld
or
cmpsb
lds
push
add
add
out
and
pop
int
ljmp
movl
mov
aad
jmp
in
mov
ret
push
mov
pop
dec
xor
pop
xchg
pop
int3
test
in
and
mov
out
mov
out
and
adc
sbb
mov
stos
lcall
mov
mov
clc
mov
pop
movsb
mov
mov
inc
xchg
clc
loopne
adc
aaa
adc
in
and
stos
push
jae
cmc
in
push
enter
inc
ret
out
mov
xchg
sub
sub
adc
mov
ret
mov
xchg
inc
and
mov
mov
jle
cs
stos
cld
sub
mov
int3
and
dec
ret
mov
mov
ret
sbb
loop
or
mov
add
sub
add
movsb
lea
inc
fsubl
pop
rol
hlt
add
mov
sub
mov
jmp
je
mov
fisubrl
add
mov
ret
mov
mov
xchg
dec
ret
mov
inc
mov
ret
pop
and
mov
push
in
mov
ret
fs
mov
leave
dec
ret
inc
ret
shl
and
test
pop
call
popa
mov
sub
mov
subps
inc
push
popf
popf
shrb
sub
and
ret
mov
jle
cmpsl
xlat
rolb
movsb
addr16
xor
enter
inc
ret
mov
adc
mov
jmp
fnsave
sbb
mov
pushf
xor
dec
les
and
mov
mov
mov
inc
cwtl
lret
je
insl
insb
ret
fsubrl
push
popf
mov
jae
sti
inc
ret
fs
mov
mov
xorb
out
aam
ret
xchg
mov
push
stos
or
sbb
jg
adc
sub
xlat
jo
ret
into
test
scas
lahf
cmp
mov
jbe
ret
shlb
pop
mov
lret
adc
sub
and
add
fnstsw
in
mov
imul
sti
mov
int3
fsubl
mov
add
loope
add
mov
push
lea
ret
mov
out
pushf
push
rcr
ret
mov
je
and
rolb
cltd
cltd
inc
ret
fmulp
xorb
adc
xchg
jmp
mov
vcmpngess
mov
sub
mov
cs
arpl
and
mov
or
pop
outsl
divb
pop
nop
and
outsl
pop
add
inc
shufps
fsubl
ret
xchg
mov
dec
inc
rep
aam
loop
xor
xchg
jb
ret
sub
mov
lock
int3
lcall
fstpt
add
aas
fiaddl
mov
mov
in
roll
jnp
jle
insb
ret
jle
or
mov
push
fdivs
cmp
inc
ja
pop
shll
sbb
mov
inc
mov
imul
xor
fmul
sahf
stc
xor
sbb
add
mov
ret
mov
mov
mov
ret
add
ret
jae
xor
clc
sub
mov
xor
fmull
add
add
push
pop
sub
sbb
ret
ja
and
scas
dec
lret
sahf
sar
stc
test
lods
jmp
rorl
inc
nop
fsubs
pop
ret
daa
dec
ret
mov
fmull
push
sbb
ret
cmpsl
push
mov
add
push
xor
fildl
sarl
fisubl
fwait
in
push
jl
jle
aaa
xchg
pop
and
push
lahf
xor
xchg
shrb
ret
add
push
aas
out
and
push
sbb
sarl
and
sub
fdivl
dec
out
ret
movsb
mov
sahf
and
mov
mov
pop
push
jge
inc
cmp
add
lods
scas
mov
add
push
in
call
fcmovbe
insl
cmp
aaa
test
xchg
ds
adc
popf
mov
fisubrs
shlb
clc
repnz
scas
or
dec
xor
pop
pop
nop
and
mov
adc
pop
imul
ret
sub
mov
dec
ret
jmp
xorl
ffree
jg
ss
inc
icebp
pop
jmp
jmp
repnz
mov
fnstsw
or
mov
add
mov
jp
xchg
jne
mov
dec
popa
in
mov
xor
cwtl
scas
jg
or
mov
mov
jno
int
outsb
mov
pop
repnz
fsubrl
add
jge
loop
mov
cmp
idivl
jne
leave
dec
sbb
dec
pop
or
cmp
in
cmpsb
cwtl
push
test
ljmp
sub
mov
fimull
das
pop
mov
arpl
ljmp
rcl
inc
cwtl
xchg
in
dec
ret
inc
push
int
ret
mov
xor
pop
pop
jns
mov
cmp
scas
cmp
pop
test
sub
jno
mov
push
jnp
ret
mov
jne
fdivs
mov
out
adc
push
push
add
push
lcall
cmp
insl
adc
out
mov
mov
ret
and
mov
add
test
cwtl
fisttpll
rorb
and
orb
in
loop
dec
and
sbb
push
je
lds
pop
adc
test
pop
cmpsb
add
jnp
pop
sub
sarb
in
nop
sbb
aaa
lcall
out
fwait
adc
pop
dec
ret
mov
hlt
test
inc
xchg
ret
mov
sahf
push
dec
mov
xor
and
leave
push
lcall
sbb
add
add
fs
insl
fnstcw
in
loop
sbb
fwait
les
inc
mov
sbbl
adc
sub
jp
movsl
cs
aas
ret
inc
and
ret
fs
mov
ret
sub
repnz
icebp
pop
pop
mov
outsb
push
push
sbb
xchg
int3
cmp
loop
imul
sub
mov
pushf
sub
mul
xchg
ja
dec
jbe
cwtl
cwtl
inc
push
adc
sub
xchg
xchg
cld
mov
pop
fs
test
jnp
jns
iret
rorl
jne
push
push
in
cmp
xchg
lcall
mov
in
clc
ss
mov
add
mov
mov
scas
pop
fstpt
ret
mov
ret
iret
inc
ret
mov
fstpl
sbb
inc
mov
lret
and
mov
cmp
cwtl
aam
push
data16
fbstp
pusha
ret
mov
xchg
lahf
fildll
or
sbb
pop
pop
push
in
xor
dec
ret
mov
mov
cwtl
adc
out
ret
cld
test
mov
mov
jecxz
cltd
xor
jmp
push
lcall
add
aad
add
mov
cld
pushf
mov
xchg
cmp
inc
ljmp
cmp
xchg
pop
and
mov
cmp
cmc
xchg
gs
sub
sub
out
jecxz
lahf
fs
scas
sub
push
mov
lods
pop
call
adc
rclb
and
mov
pop
int
adc
rcr
mov
push
xchg
cmpl
lcall
or
shll
ret
mov
fcoms
jne
adc
pop
pushf
push
mov
add
mov
jmp
jge
aam
out
or
jp
dec
clc
enter
and
mov
lcall
mov
push
cmp
scas
mov
mov
jbe
xchg
outsl
aam
ret
push
push
mov
jl
cs
sti
pop
jnp
jge
movsl
add
das
adc
mov
repz
inc
outsl
jle
test
ret
pop
adc
dec
ret
push
imul
les
je
push
out
rorl
daa
mov
mov
push
mov
ret
inc
mov
xchg
push
adc
ret
mov
aam
lcall
add
jle
xchg
jno
or
adc
inc
cmp
addb
add
add
mov
ret
leave
sbb
loop
inc
out
jno
arpl
push
xchg
sarl
push
mov
adc
hlt
aas
jge
fisubrl
test
mov
xchg
or
mov
shl
xchg
xor
setae
add
cmc
shlb
xchg
push
or
repnz
add
call
cmpb
or
pop
leave
sub
mov
dec
dec
ret
mov
mov
sub
mov
mov
insb
ret
jae
push
mov
mov
mov
dec
ret
and
xchg
inc
jns
push
push
ss
insb
ret
inc
mov
mov
iret
jl
ret
sub
mov
sbb
and
mov
icebp
scas
mov
popa
cmp
hlt
or
scas
push
adc
pop
xchg
ret
dec
icebp
std
jmp
push
mov
xor
lock
daa
sbb
icebp
rdtsc
shl
adc
mov
mov
or
push
ds
mov
repnz
lea
mov
ret
mov
pusha
ret
sub
mov
mov
lds
dec
loop
xchg
dec
ret
push
aad
or
cs
jno
mov
jge
xchg
jo
and
lahf
in
adc
xor
repz
ret
mov
push
dec
fisubrs
add
repnz
adc
sahf
mov
shrb
dec
fcoml
xchg
dec
xchg
sub
imul
sbb
push
push
pop
rcrl
mov
stc
sub
mov
cltd
adc
mov
cwtl
cmp
shl
sub
mov
out
or
aad
shrb
and
mov
mov
xor
mov
fucompp
pop
xchg
daa
inc
ret
test
push
or
push
cmc
outsl
mov
imulb
fiadds
cmp
lcall
or
mov
cwtl
lcall
push
jbe
inc
ret
lcall
cmc
sbb
stos
jp
leave
dec
ret
test
pop
jns
aas
cmp
ret
mov
popa
arpl
pop
stos
xchg
leave
mov
out
outsb
jo
mov
shll
add
xor
insb
ret
mov
mov
mov
jns
jp
adc
ret
sbb
movsb
ret
mov
jp
incl
scas
mov
dec
lock
add
add
add
inc
ret
mov
movsb
xor
aad
rolb
ret
lcall
mulb
fcmovbe
popa
mov
sbb
mov
ret
mov
xor
rorb
inc
ret
mov
into
in
mov
stos
pop
imulb
mov
xchg
cmp
xor
test
es
jle
cli
mulb
nop
pop
push
in
xor
add
push
lcall
je
test
push
push
or
push
pop
shlb
xor
shlb
mov
xor
jb
test
mov
mov
cld
dec
pop
xor
sbb
add
mov
cli
pushf
iret
cltd
sarl
lcall
mov
mov
jae
aam
mov
mov
adc
add
cmpsl
adc
hlt
push
xchg
pop
imull
cmp
xchg
orl
and
add
mov
loop
ds
andb
in
es
movsl
add
mov
mov
outsl
or
sub
inc
xchg
pop
inc
adc
ret
aam
adcl
cmp
call
test
fs
and
mov
test
pop
xchg
sbb
arpl
mov
rcrb
nopl
mov
mov
ret
xchg
out
ljmp
shl
lret
add
mov
ret
mov
mov
mov
fst
lcall
aaa
in
xchg
subl
call
mov
shrb
push
repz
or
inc
ret
mov
and
cmp
add
lret
dec
ret
jb
add
mov
ret
adc
add
sub
cli
xchg
add
ret
mov
scas
adc
or
mov
add
int
xor
and
mov
add
sbb
nop
dec
mov
ret
jle
jmp
roll
add
xchg
sub
data16
outsl
jne
cmc
in
add
ret
mov
popa
cs
add
jns
es
mov
imul
or
mov
mov
repz
mov
testl
add
stos
cmp
push
cmp
jg
test
inc
ret
mov
pushf
loop
cmp
pop
shll
sti
xchg
inc
push
pop
inc
jg
xorl
jg
ret
in
sub
jae
loop
fs
mov
or
mov
push
dec
ret
repz
test
xchg
mov
or
mov
sub
mov
and
mov
jle
sub
mov
in
jmp
add
ficomps
aam
sbb
adc
add
sbb
fcmovnu
testl
mov
fucomi
mov
ficoms
mov
fs
mov
fwait
and
xor
or
mov
sbb
sti
jmp
mov
ret
mov
leave
and
cmc
or
mov
ret
inc
ret
mov
and
mov
and
mov
add
pushf
and
pop
lds
in
pop
aad
sti
in
pop
pop
imul
push
cltd
xchg
pop
icebp
mov
ret
mov
add
dec
in
stos
adc
jae
mov
xor
int3
aaa
xor
inc
push
xchg
int
outsl
sarb
dec
ret
mov
inc
ret
pop
iret
test
cltd
out
ret
mov
into
jbe
lods
xchg
mov
xlat
mov
out
fdivr
dec
and
mov
pop
std
movsb
daa
inc
gs
int
les
mov
push
sub
lods
test
outsb
sbb
adc
ret
mov
ss
movsb
jb
imul
test
add
into
insl
stos
ret
pop
cmpsl
jp
inc
lret
daa
adc
mov
and
mov
int3
aad
push
adc
jns
fistpll
lret
adcb
lret
test
pusha
ret
mov
arpl
sbb
mov
shlb
fucomip
notb
fsts
push
xchg
adc
xchg
and
in
movb
lcall
dec
leave
adc
and
mov
jns
ret
jecxz
mov
rcrl
cmp
cmc
mov
popa
pop
xor
push
punpcklbw
mov
or
mov
ret
sbb
fsubs
pop
stos
mov
addr16
mov
and
jb
xor
add
jns
push
mov
cmp
pop
test
in
call
clc
cltd
jb
inc
sub
fdivl
xchg
jo
ret
mov
pop
jb
fstl
inc
ret
mov
push
pushf
pusha
ret
popa
mov
insl
cmpsl
in
push
mov
and
lea
add
out
push
das
sub
cmp
and
mov
sbb
sub
adc
mov
push
scas
mov
pop
es
mov
out
ret
js
pop
and
mov
mov
outsl
inc
push
xchg
add
push
call
xorl
adc
xchg
xchg
lahf
sbb
fsubl
sub
pop
xor
repnz
test
in
in
imul
ret
inc
mov
mov
mov
daa
movsb
clc
fstl
xor
mov
cmp
out
pop
cld
push
cmp
pop
lahf
ret
data16
mov
inc
jmp
ret
mov
dec
adc
mov
insl
cmpsl
add
xchg
mov
rcll
in
fwait
jge
lret
fstpt
sub
push
ret
mov
cmp
push
inc
scas
or
mov
or
jae
leave
add
addl
push
push
xor
xlat
test
and
xor
inc
ret
insl
loop
sbb
fbld
push
fadd
xor
xor
jp
cmpsl
leave
shr
mov
ret
pop
aaa
gs
ret
sbb
dec
ret
mov
mov
push
pop
xchg
ret
mov
lahf
push
fstpl
ret
mov
fsts
aam
adc
aad
fistpl
gs
cmp
push
inc
ret
mov
pop
xchg
sarb
cmpsb
ret
push
scas
stc
pushf
scas
and
mov
add
or
mov
mov
pop
mov
mov
pop
movsb
sub
cmp
mov
test
int
scas
mov
mul
mov
mov
inc
or
mov
mov
roll
loopne
mov
and
push
mov
fsubrp
adc
sub
mov
push
push
fidivl
cmp
lods
dec
mov
enter
add
xor
mov
popf
mov
movsb
lock
out
xchg
or
mov
adc
mov
lret
pusha
ret
enter
cmp
shll
jae
ret
mov
iret
testb
in
sub
sub
xor
mov
push
loop
es
push
dec
insb
ret
dec
ret
outsb
data16
inc
fwait
aam
cmp
sub
cmp
mov
ret
mov
sub
mov
mov
dec
or
ret
mov
add
pop
in
mov
fs
mov
add
hlt
mov
inc
imul
mov
add
rorb
cmp
mov
sbb
adc
insl
xorl
mov
pop
into
mov
mov
pop
push
xchg
mov
sahf
fnstcw
jbe
inc
push
lods
xor
paddusw
test
cmpsb
and
mov
push
pop
dec
xor
mov
cmp
into
icebp
rorl
loop
ret
scas
scas
jo
cld
push
adc
mov
fldcw
lock
popf
mov
outsb
fadds
stos
add
mov
xchg
cld
sbb
test
mov
xlat
inc
dec
daa
jge
pusha
ret
lea
or
mov
fisubl
mov
mov
mov
pop
cltd
cmp
int3
in
mov
cmpsl
mov
ret
je
addr16
outsb
xorl
ret
mov
jo
mov
cmp
dec
ret
mov
in
ret
mov
sbb
fcoml
sbb
add
mov
hlt
popf
dec
dec
ret
push
test
imull
ret
mov
lods
cmp
pusha
ret
mov
mov
iret
pop
mov
mov
cmc
push
cmpsb
xor
cld
cld
cmpsb
imul
mov
repz
mov
cwtl
cmp
loopne
adc
dec
mov
or
xor
inc
ret
mov
push
pop
push
xchg
popa
push
pop
mov
rclb
negb
jecxz
sub
testl
xchg
push
fwait
scas
push
faddp
and
mov
dec
ret
mov
sub
add
mov
mov
xor
mov
stos
adc
loopne
je
mov
mov
xlat
out
xchg
inc
fiaddl
push
loopne
insl
xor
ret
push
filds
popl
and
mov
pop
adc
addr16
in
and
jecxz
cmp
add
leave
cmp
lods
bound
add
dec
loop
btc
cli
cltd
addr16
cmp
push
dec
int
and
mov
mov
in
cli
aam
mov
xchg
test
mov
add
add
mov
fidivl
imul
sub
mov
dec
ret
mov
int
xor
dec
nop
es
jge
loope
ret
ljmp
xchg
out
fs
jne
outsb
jge
pop
dec
ret
mov
mov
std
sbb
ret
cmp
jae
mov
and
jae
and
mov
lock
insl
and
jmp
js
inc
sub
loope
push
movsl
push
inc
jle
jle
pop
imul
insl
aad
out
out
sti
cmpsl
test
out
mov
push
es
jg
shll
xor
mov
push
jmp
add
scas
data16
pushf
pop
lret
ret
pop
call
ret
mov
mov
ja
mov
add
add
in
gs
scas
es
fwait
dec
push
sub
pop
inc
sbb
inc
mov
es
movsb
lds
mov
aas
out
dec
xor
stos
dec
pop
insb
ret
stos
rcrb
lret
jmp
jns
mov
pop
lods
pop
push
pusha
ret
mov
inc
cli
inc
shll
mov
fs
push
addr16
or
mov
and
adc
rorl
add
mov
mov
ret
inc
and
lea
jge
pop
das
add
xor
lods
es
lea
sbb
ret
test
ret
mov
aam
std
cmp
add
pop
sub
ret
rcrb
outsl
imul
and
and
cmp
les
into
jnp
out
sbb
jo
ret
mov
inc
cmp
sbb
jb
inc
add
push
pop
jno
pop
mov
pop
mov
push
sub
add
leave
cmp
nop
or
mov
xchg
pop
adc
hlt
dec
fdiv
ret
rol
xor
adc
sbb
adc
mov
scas
jno
adc
add
cmp
and
jmp
push
seta
push
out
int3
mov
scas
adc
leave
dec
cmp
pop
je
stc
ffree
repz
repz
jb
test
push
mov
in
xchg
pop
fs
mov
sbb
mov
mov
xlat
imul
int
dec
ret
mov
inc
icebp
sbb
ret
mov
sub
cmp
aad
cmp
mov
dec
sub
incl
hlt
aas
add
pop
cwtl
andl
mov
cmpsb
dec
sbb
or
mov
add
ljmp
repnz
sbb
test
je
sub
xchg
jns
jnp
xor
fs
mov
nop
es
mov
stc
mov
cmp
dec
ret
mov
orb
lea
ret
dec
ret
mov
mov
dec
ret
mov
or
mov
jnp
add
mov
xchg
std
popa
bound
sbb
jo
ret
mov
xchg
fistps
push
cmp
sub
push
movsl
mov
fcoms
push
imul
ret
mulb
mov
mov
push
mov
pop
ds
int
pop
cmp
jns
ret
mov
movsl
clc
xchg
lds
inc
ret
mov
cmp
ret
adc
cmp
fsubrl
mov
cld
sti
movsb
fcomps
xor
mov
arpl
bound
sbb
loopne
rolb
xchg
sub
mov
scas
arpl
dec
iret
stos
mov
out
sbb
mov
daa
lret
mov
jmp
in
pop
jnp
sbb
lods
flds
mov
ror
leave
sbb
and
mov
xchg
pop
int3
mov
ret
lret
dec
push
sbb
and
mov
insl
insb
ret
mov
std
jmp
es
fsubrs
sbb
test
mov
add
aam
add
mov
sbb
test
mov
sbb
mov
ret
xchg
rclb
push
arpl
outsb
fldcw
fwait
aaa
xor
ret
mov
jne
mov
pop
push
cltd
lds
and
cmp
push
push
xchg
push
adc
sub
or
sub
mov
add
push
mov
lods
and
in
orl
ret
mov
mov
inc
stc
aad
jge
jne
mov
sub
imul
inc
or
leave
push
call
mov
sti
js
adc
mov
test
add
in
leave
mov
cmpsb
jnp
lret
sub
mov
cmp
shrb
aad
mov
leave
pushf
pop
negl
cmpsb
outsl
or
mov
mov
xor
push
cmpb
lcall
ds
popf
xor
pop
lea
cmp
mov
xchg
sub
add
xchg
test
inc
dec
iret
dec
dec
adc
ret
dec
sub
dec
ret
push
mov
stc
mov
add
cmp
xor
sti
shrb
addr16
sub
add
jb
mov
ret
lds
ret
mov
push
fsub
jnp
pop
cmp
in
mov
sbb
mov
ret
mov
add
or
mov
bound
pop
mov
and
frstor
add
push
adc
pop
data16
lds
pushf
cmp
mov
pushf
cs
test
inc
ret
adc
mov
cwtl
scas
xor
pusha
ret
mov
jmp
rclb
mov
mov
mov
das
adc
rolb
add
imul
mov
ret
out
xor
or
mov
mov
push
cmp
xor
mov
mov
ror
pop
lahf
push
push
in
add
xor
sub
cmpsl
inc
inc
ret
out
xchg
push
lods
nop
sub
mov
adcl
flds
aad
sbb
stc
dec
mov
mov
dec
lods
imul
jl
or
in
jmp
inc
in
aaa
mov
lahf
lods
fnop
lret
imul
mov
sub
push
fmuls
jp,pn
shll
add
jge
ficomps
xor
xchg
repz
enter
mov
jae
mov
ret
aad
xchg
jne
jns
pop
jp
ror
fisubrs
nop
std
lock
mov
fwait
push
into
or
mov
ss
or
jb
ret
mov
out
call
mov
dec
sarl
loope
mov
or
ret
mov
ret
icebp
mov
negb
sahf
xchg
add
mov
xchg
mov
insl
mov
jmp
or
rorb
sub
mov
mov
pop
dec
push
lds
dec
scas
and
ret
faddl
mov
in
pop
fcoms
dec
xor
or
inc
pop
pop
adc
mov
test
int
xchg
inc
into
lods
pop
xchg
aaa
pop
mov
std
pop
jp
xchg
mov
push
sbb
pop
iret
inc
adc
fs
mov
add
adc
icebp
pop
in
mov
inc
popf
stos
adc
ret
movsb
stos
out
lret
addl
mov
in
xor
int
cmp
add
lret
cmp
xchg
popl
jnp
mov
scas
and
add
ret
adc
dec
hlt
adc
add
mov
ret
sbb
ret
inc
or
mov
ret
mov
test
add
clc
mov
adc
cs
jg
mov
and
dec
sub
cmp
lret
ret
jb
repz
shrl
not
imul
adc
sti
fs
mov
cmp
jno
int
dec
es
or
and
adc
andb
cmpsb
lcall
lret
inc
faddl
out
dec
jle
mov
add
mov
int
icebp
shr
lock
push
xor
mov
dec
ret
sbb
clc
cmp
mov
lret
or
mov
adc
push
mov
leave
repz
mov
jae
ret
mov
cmp
int3
ret
mov
jbe
cmp
sbb
and
mov
ret
push
scas
fwait
lock
movl
daa
mov
add
inc
lea
xchg
scas
data16
repnz
sub
lret
mov
ds
ret
mov
aaa
xor
lahf
mov
mov
fists
into
out
out
and
mov
ret
mov
leave
add
dec
roll
shl
ret
sub
js
ret
adc
aam
mov
xor
sahf
rolb
mov
sarb
push
push
fdivrs
or
push
xchg
push
inc
ret
mov
add
ret
sahf
xor
outsl
xchg
inc
jns
pop
cmp
and
mov
jne
fsubrl
or
inc
ret
mov
repz
adc
lret
dec
out
nop
adc
incl
xor
pop
dec
sub
mov
jae
es
clc
incb
xor
sub
mov
jae
mov
mov
mov
sub
mov
into
push
mulb
popf
cmpl
ret
mov
pop
nop
cmp
fidivs
ret
mov
mov
inc
mov
insl
test
aas
lea
jae
dec
in
dec
data16
xorl
mov
lods
es
es
sbb
adc
stos
and
cmp
lea
ljmp
imul
jae
shrl
fs
xor
mov
ret
pop
cmp
cmp
mov
andl
jns
imull
add
std
mov
add
mov
lret
call
mov
xchg
into
mov
push
lret
popl
push
fs
mov
push
cli
mov
ret
mov
mov
std
push
mov
mov
dec
jns
ret
mov
mov
ret
adc
in
cmpsb
push
inc
sub
enter
dec
jmp
pop
test
jne
shlb
push
dec
je
xchg
je
outsb
mov
jo
lods
xchg
mov
subps
ds
call
jnp
adc
mov
jl
stc
insl
xchg
in
pop
bound
pusha
ret
add
sub
in
or
mov
push
jge
jnp
mov
bound
inc
mov
inc
ret
mov
ret
push
in
aaa
and
inc
sub
fistps
cmp
ret
mov
add
sub
mov
out
xor
xor
call
adc
and
push
sbb
or
mov
mov
mov
jbe
pop
inc
je
sahf
push
mov
fwait
es
popf
xchg
mov
push
int
push
xchg
mov
push
pop
jnp
cld
lods
pop
mov
and
mov
fwait
dec
ret
mov
cmpsl
pop
shll
cwtl
or
mov
insl
mov
or
push
insl
jle
push
and
mov
xchg
add
jecxz
cmp
ret
xlat
mov
mov
test
mov
mov
add
inc
sbb
idivb
ret
data16
lods
lcall
cmp
outsl
add
add
popl
mov
add
mov
mov
fsubrs
mov
cmpsl
rorl
ret
mov
lcall
jmp
fistl
xor
cmc
iret
and
mov
outsb
addr16
mov
and
mov
dec
in
lret
mov
sahf
mov
sub
cmp
ret
mov
push
push
adc
adc
sub
ret
imul
push
pushf
lods
pop
mov
mov
out
fistpll
repnz
mov
push
aam
std
cs
ret
mov
cmp
repz
aad
cmpsb
fwait
test
sub
mov
lcall
adc
sub
add
js
jbe
fimull
mov
sub
add
fldenv
roll
pop
pop
push
sub
mov
add
mov
add
pop
xchg
adc
inc
loopne,pn
dec
mov
cmp
mov
sub
add
icebp
and
and
or
icebp
jo
xchg
sbb
add
adc
mov
adc
push
lcall
jl
lods
aaa
adc
test
adc
push
pop
mov
pop
fstl
and
mov
int
cmp
push
fdivrs
ja
or
mov
fs
outsb
cmp
lret
mov
mov
imul
gs
sbb
arpl
add
adc
ds
fcompl
aam
fiadds
and
popf
sarb
lret
mov
pop
mov
inc
pop
enter
inc
fdivrs
adc
lods
subl
xor
faddl
jecxz
daa
jp
ret
mov
clc
xchg
cmpb
push
dec
jo
mov
xor
ret
call
mov
pop
fstpt
ret
cmpsb
sbb
shll
add
fimuls
scas
pushf
daa
in
cld
ja
icebp
cli
adc
and
stos
pop
lcall
ret
push
std
xchg
adc
sub
mov
add
dec
ret
fdivp
sub
mov
xchg
ret
pop
cmpsl
out
aad
out
iret
pop
sti
lods
ja
add
mov
cld
pop
push
mov
sub
mov
sbb
push
mov
mov
ret
loope
mov
push
pop
jnp
test
lods
push
mov
loope
lods
out
mov
push
ret
push
mov
test
or
add
mov
jnp
cmp
popf
lods
cwtl
mov
clc
cmp
push
movsl
sahf
jecxz
loope
fisubs
loope
xorb
jl
ret
mov
inc
jne
pop
cli
push
fnstcw
adc
mov
add
cmp
inc
xchg
or
aas
and
mov
mov
ret
mov
xor
jecxz
cmp
add
add
dec
jo
pop
stos
add
pop
cli
sub
mov
jo
fs
mov
add
fdivs
sbb
mov
add
xor
xchg
pusha
ret
mov
cs
jge
ret
enter
notl
jae
sub
or
sub
mov
jp
xor
jno
pop
jb
ret
movl
xor
dec
loop
hlt
jg
jle
sysenter
frstor
in
hlt
or
insb
ret
mov
leave
iret
pop
mov
mov
adc
into
sub
mov
aam
ret
mov
add
push
xor
popa
xor
ret
mov
mov
mov
mov
sbb
fstpl
mov
iret
pusha
ret
mov
ficompl
cmp
mov
adcb
repz
or
mov
add
mov
mov
das
cs
test
pop
rcrb
outsb
rcrl
es
push
std
sub
mov
lods
add
mov
lret
ret
xchg
cmp
mov
add
push
les
aam
xchg
sub
test
mov
push
fs
jle
and
repz
arpl
in
je
pushf
xor
cmp
mov
lock
jno
rcrb
pop
dec
mov
andb
mov
ret
das
cld
movsl
andb
and
sbbl
mull
mov
mov
fmuls
xchg
sbb
sbb
lcall
mov
jecxz
rorb
dec
ret
mov
pusha
ret
xchg
ds
aaa
insl
jne
ret
mov
repnz
shrb
ret
mov
add
mov
cmpsl
ret
fcmovbe
mulb
cmp
call
sub
ja
out
insb
ret
mov
test
sbb
ljmp
mov
fidivs
pusha
ret
lock
adc
push
jl
imul
ret
mov
mov
inc
jmp
mov
inc
push
sarb
pop
pusha
ret
dec
ret
mov
fstpt
stc
xchg
cltd
fdivrp
jge
adc
test
ret
mov
or
ret
mov
push
sub
adc
mov
inc
mov
and
in
pop
adc
pop
jns
mov
mov
add
mov
aad
in
pop
test
mov
pop
sub
push
xchg
cmp
or
mov
ss
xchg
incl
xchg
cmp
mov
pushf
pop
mov
adc
jo
sbb
push
out
sbb
jb
movsb
test
movsb
leave
jecxz
std
push
jecxz
mov
dec
fsubrs
xchg
repz
fucomi
xchg
mov
ss
or
pop
insl
aad
in
add
mov
inc
ret
mov
mov
mov
ret
fisubrs
test
jb
lds
js
fcompl
popa
push
xchg
mov
jle
dec
ret
add
ds
mov
xor
xchg
mov
insb
ret
mov
imul
pmulhw
push
aaa
rcrl
mov
icebp
pusha
ret
mov
inc
hlt
xor
repz
mov
cs
cmp
adc
jle
loope
fcoml
out
mov
jbe
sbb
xchg
and
cld
les
out
lret
cmpsl
jae
aad
mov
ret
mov
mov
push
sub
das
sbb
push
test
push
sub
push
sti
xchg
sub
push
dec
or
ret
adcb
clc
out
hlt
outsl
push
or
mov
pop
push
iret
xor
in
pop
and
loope
mov
add
xchg
push
dec
jbe
lret
fdivs
pop
sub
add
test
adc
add
mov
xchg
or
mov
aas
mov
add
mov
out
dec
ret
mov
add
sbb
ljmp
mov
fisubrs
lret
sub
mov
mov
jl
and
mov
cltd
fisttpl
addb
insb
ret
mov
mov
push
and
dec
ret
mov
xor
ret
mov
cmp
add
stos
scas
out
test
add
mov
ret
pusha
ret
mov
and
mov
std
or
mov
jg
mov
decl
sbb
cmp
ret
mov
or
mov
out
mov
pop
sbb
mov
arpl
cltd
dec
cmpsl
push
xchg
pop
cmp
lds
cmpsl
jne
lahf
sbb
add
lds
xchg
push
add
mov
aad
sbb
ret
mov
dec
add
mov
pop
and
mov
cmp
test
mov
test
test
push
jmp
or
ja
jb
outsb
mov
bound
add
mov
lret
js
push
sbb
lahf
icebp
insl
pop
test
add
lahf
push
das
pop
jle
jae
adc
mov
xlat
sub
adc
int
push
xchg
sbb
in
jecxz
repnz
lea
push
lock
ret
ja
jae
cmp
adc
stc
sbb
test
mov
add
cmpsl
add
mov
ja
es
adc
adc
mov
popa
or
mov
push
lods
sub
pop
add
call
lds
push
ret
in
jno,pt
cmc
test
addr16
sbb
xor
cmp
out
ficompl
stos
jns
mov
mov
mov
add
sahf
push
pop
mov
rol
mov
add
mov
fistps
cmp
mov
add
mov
ret
mov
add
push
mov
dec
jb
lret
ret
scas
sbb
in
cmpsl
test
mov
mov
mov
push
mov
push
rcr
jo
sahf
lods
call
push
inc
or
mov
pop
xchg
push
fiaddl
call
mov
inc
lds
mov
movsb
dec
adc
adc
xchg
dec
cmp
xchg
or
mov
ljmp
mov
sarb
push
dec
mov
xchg
jnp
sbb
test
insb
ret
mov
ja
out
out
mov
aas
loop
ret
mov
add
cmp
push
sbb
add
jecxz
mov
add
fcoms
mov
imul
mov
movb
mov
and
xor
jno
leave
lahf
adc
add
dec
fsubrs
xchg
xor
ret
pop
shll
lret
cmpsb
adc
mov
cmp
ljmp
ret
mov
xorl
stc
les
mov
jne
pop
andb
jae
adc
mov
or
add
insl
jmp
mov
mov
pop
dec
test
mov
cli
jae
nop
xchg
popa
movl
xor
ja,pn
xchg
sub
mov
push
cs
mov
mov
pop
mov
xchg
pop
mov
mov
mov
add
icebp
enter
push
loop
adc
fwait
mov
dec
dec
ret
mov
rcll
or
mov
add
push
loop
fdivrl
sbb
mov
std
push
outsb
rcll
adc
jge
imulb
dec
fsubrp
dec
inc
pop
add
pop
mov
xchg
push
sub
ret
xor
jne
sbb
inc
orl
push
or
mov
mov
push
jno
lret
pop
dec
add
xchg
repnz
xor
add
xchg
in
or
sbbl
in
in
push
insb
ret
mov
xchg
and
mov
jbe
pop
mov
sbb
push
dec
ret
mov
dec
sbb
xchg
inc
inc
sbb
mov
aas
fs
stos
cmp
dec
ret
mov
shrb
scas
cli
xchg
jns
mov
ret
mov
mov
cmp
xchg
outsb
std
lcall
clc
test
xchg
rolb
push
nop
xchg
out
dec
js
int
imul
sub
lret
mov
mov
ret
rcl
stos
cmp
or
mov
insl
int
movsl
loopne
arpl
push
jg
push
adc
xchg
adc
sbb
test
push
and
imul
jmp
lods
daa
or
in
les
fidivrl
mov
inc
adc
cltd
aaa
sub
pop
enter
sub
test
sub
testl
mov
jge
ret
mov
push
in
dec
jg
cmp
cmp
les
arpl
repnz
mov
xchg
xchg
push
fists
fbstp
adc
push
dec
setno
test
mov
fucomi
orb
mov
mov
inc
ret
mov
movsl
jl
cli
enter
mov
mov
and
adc
lods
or
out
sbb
int3
dec
ret
lods
aam
jge
into
gs
xor
fstps
cmc
sub
mov
fidivl
out
shll
dec
ret
mov
pop
test
dec
sbb
xor
sbb
je
xor
jae
ret
int
inc
lahf
dec
stos
into
inc
ret
pop
adc
cmpsb
or
mov
jne
push
dec
ret
mov
jo
pop
fisubs
repnz
aam
into
lods
xor
push
out
loopne
test
ficoms
shl
dec
push
push
lcall
ret
dec
mov
add
scas
jmp
dec
mov
std
mov
outsb
cs
mov
mov
mov
mov
jnp
push
add
jmp
mov
or
mov
ret
lret
dec
and
mov
fs
jnp
inc
dec
in
and
add
add
nop
jo
mov
mov
inc
repz
mov
andb
push
push
cmc
jle
dec
inc
ja
in
xchg
adc
test
in
mov
sub
mov
pop
in
jb
daa
mov
mov
mov
jne
or
mov
push
pop
fstpt
lahf
pop
and
lods
adc
push
sti
inc
ret
mov
add
pop
lea
or
push
and
mov
test
sbb
push
aam
rcrb
je
pop
adc
and
mov
pusha
ret
add
mov
mov
mul
shrb
cmp
jo
jmp
xchg
loop
jl
or
add
xchg
and
mov
or
addr16
pop
mov
jo
fcompl
mov
mov
cltd
xlat
xor
ret
adcl
mov
jge
sti
cmpsb
mov
test
dec
ret
icebp
sahf
loop
test
loop
shll
xchg
dec
rcrl
adc
jp
inc
neg
cmpsl
jns
pop
mov
cmp
dec
ret
xchg
push
ss
sbb
scas
mov
cwtl
sahf
mov
sbbl
mov
ret
jecxz
test
call
add
and
adc
sub
mov
in
movsb
lea
add
std
push
shlb
loope
pop
add
mov
mov
add
lahf
mov
ret
or
fbstp
cmpsb
jecxz
cmp
out
cmp
fidivl
pop
repz
shll
popa
xchg
stos
mov
ds
xchg
adc
ret
xchg
push
mov
mov
dec
ret
adc
inc
xchg
aam
push
mov
xlat
test
xor
cmpl
xor
ret
std
mov
inc
sub
adc
mov
or
ret
inc
dec
scas
lods
xor
stos
sbb
fdivr
mov
shll
mov
add
pusha
ret
ss
fnstsw
or
stos
mov
adc
or
mov
mov
adc
mov
jne
icebp
pop
jb
ret
jecxz
test
rolb
ret
inc
inc
scas
pop
jg
cmp
xor
daa
pop
pop
xchg
ja
sub
lret
or
sbb
ret
repnz
ret
lahf
xchg
pop
mov
dec
ret
mov
cmp
pop
out
jmp
inc
dec
stos
jmp
jae
iret
adc
int3
lods
inc
sbb
pushf
hlt
test
inc
mov
adc
aaa
nop
cmp
ret
or
xchg
mov
push
push
ret
in
stc
call
mov
mov
repz
add
imul
sbb
loope
in
sbb
mov
cmp
inc
fsubs
mov
xlat
push
mov
gs
scas
adc
ret
fimuls
add
mov
mov
xchg
adc
mov
ret
mov
ret
mov
movsb
aad
push
shl
push
pcmpgtb
mov
mov
mov
adc
fs
aas
or
int
dec
jno
repnz
push
xor
mov
sbb
cli
push
mov
shll
push
pop
frstor
xor
push
jnp
inc
out
and
mov
fidivl
int
jp
les
add
cmp
outsb
push
and
mov
movsl
subl
jp
mov
add
fisubrl
lret
imul
imul
mov
movsl
jp
rcll
fidivrl
xchg
inc
pop
fistps
ret
mov
pop
cmp
loope
frstor
cmpsl
sub
mov
lods
fnstenv
rcr
adc
xor
movsb
ret
scas
call
adc
mov
adc
or
mov
sub
gs
push
push
movsb
imull
dec
dec
xchg
cmc
add
repz
mov
dec
add
mov
sbb
xchg
ret
pop
mov
push
mov
cmp
mov
add
mov
jp
cmc
cmp
ret
mov
std
aam
sub
mov
add
leave
dec
ja
pusha
ret
mov
ret
mov
insb
ret
mov
mov
scas
mov
ret
aad
inc
sub
scas
or
jne
sbb
fnstcw
mov
fcmovb
or
xchg
dec
bnd
push
sub
cmp
add
sub
mov
xchg
scas
cmp
ret
mov
cmp
add
jl
stos
test
ret
mov
mov
dec
icebp
jge
pop
mov
xor
mov
sarb
or
mov
test
imul
mov
or
test
sub
and
sbb
nop
xor
sub
cmp
sbb
ret
les
ret
fcoms
mov
dec
ret
mov
mov
add
sub
mov
mov
repz
pop
sub
adc
fsts
mov
jge
fidivl
ret
ret
loopne
lods
sbb
mov
sbb
mov
cltd
outsb
jne
add
mov
xor
ret
popf
push
stos
adc
xchg
shrl
popa
in
xlat
mov
pop
fcoml
sub
mov
add
add
dec
push
je
sub
sbb
std
inc
dec
ret
lock
xor
cmp
in
sbbb
xchg
push
scas
cmpsl
mov
mov
ret
std
inc
sbb
inc
dec
loopne
dec
ret
mov
add
inc
test
adc
push
cmp
push
jg
sbb
sti
adc
lock
les
mov
mov
lock
mov
mov
pusha
ret
mov
cmpl
jns
pop
fxch
inc
ret
mov
jge
xchg
mov
fisubs
shll
push
fwait
rol
sbb
sub
mov
mov
adc
ret
mov
mov
mov
pop
dec
jmp
aaa
fdiv
inc
popa
add
mov
pop
lcall
movsb
sti
pop
arpl
fisubs
add
rcll
insb
ret
mov
cmp
call
adc
lret
fdivl
ret
xor
pop
jg
repnz
out
jl
cmp
cmp
jns
jmp
sarl
push
jge
pop
sarb
mul
or
ds
ret
lods
mov
idiv
inc
pushl
fistl
loope
mov
mulb
loope
in
add
mov
push
push
xor
add
fdivr
mov
ret
and
mov
test
or
mov
xchg
loop
imul
arpl
or
add
push
lret
mov
push
leave
fsubrs
jae
js
shrl
data16
inc
mov
les
push
sbb
mov
pusha
ret
mov
lds
ret
mov
add
mov
mov
pop
iret
inc
ret
jb
ljmp
add
mov
sahf
clc
mov
cwtl
out
mov
ret
mov
pop
repz
xchg
xchg
xor
or
mov
sub
mov
test
cwtl
mov
inc
rcrb
aaa
mov
mov
mov
cmp
or
pop
int3
jecxz
es
and
mov
or
mov
add
add
mov
insl
dec
push
push
or
hlt
inc
ret
out
or
mov
jbe
xchg
mov
mov
lock
mov
ret
cltd
xchg
ret
mov
mov
inc
ret
xchg
jns
dec
aam
xor
dec
test
xor
int
das
cli
inc
add
mov
xchg
xor
lea
dec
loop
mov
cwtl
rolb
cmp
or
add
mov
and
test
jmp
repz
out
pop
insb
ret
mov
adc
add
ret
cli
push
ja
clc
ljmp
fcmovbe
mov
inc
ret
pop
aaa
and
xorl
cmp
andl
jge
cwtl
add
cmpl
js
cmc
xor
test
and
addr16
add
ret
mov
imul
test
mov
stc
js
xor
clc
pop
test
push
aam
cs
stc
sbb
and
ret
mov
arpl
fcompl
cmp
jp
add
mov
pop
test
outsb
loopne
sbb
dec
adcl
jbe
sub
mov
xor
pop
rorb
push
add
add
dec
inc
lods
cmpsl
or
xchg
out
jp
ret
and
jp
popf
popa
imul
mov
xor
sub
mov
dec
sbb
loopne
or
mov
insl
mov
add
add
dec
ret
ss
mov
inc
ret
movsl
mov
cltd
imul
xchg
movsb
and
push
xor
fisubrs
mov
inc
fwait
pop
cli
dec
sahf
out
in
shr
ret
mov
and
mov
push
mov
and
int
jecxz
in
fidivl
jbe
test
mov
inc
into
lods
adcb
fsubrl
lahf
cmp
sub
cmpsl
or
mov
and
mov
add
lcall
xchg
repnz
mov
add
pop
in
ret
cmp
movsb
jb
ret
mov
mov
cld
call
mov
ja
push
ret
lock
push
mov
mov
lret
mov
pop
jo
add
sti
pusha
ret
outsl
repz
jae
mov
mov
add
fwait
stos
ds
fbld
adcl
sbb
ret
mov
in
push
data16
mov
add
imul
add
or
das
scas
shrl
outsb
push
and
add
mov
repnz
cmc
out
pop
movsb
adc
movsl
ret
mov
add
addr16
out
mov
enter
ljmp
jle
ret
mov
add
lock
cmp
inc
ret
ror
adc
xchg
add
push
push
into
es
shl
pop
inc
gs
rcrl
pop
inc
ret
mov
cli
dec
mov
xor
xchg
jge
or
ret
gs
mov
dec
push
inc
ret
xorb
and
and
jns
shr
add
mov
add
ljmp
fs
xchg
call
cmp
pop
lret
rsqrtps
pop
mov
push
test
cld
jge
scas
adc
xlat
pop
les
lret
icebp
jbe
mov
fisubrs
test
jno
add
cs
lret
daa
repnz
cltd
imul
pop
mov
ret
dec
and
mov
xor
rorb
add
das
cli
add
fbstp
or
push
inc
fsubl
cs
inc
jmp
mov
jle
ret
cs
cmp
jb
aam
jmp
stos
mov
add
ret
mov
jmp
mov
or
mov
mov
mov
sbb
jge
ret
fs
mov
mov
mov
jge
xchg
xor
je
or
inc
push
push
clc
lcall
scas
lds
ds
mov
push
sbb
into
cmpsl
dec
in
or
lods
sbb
add
mov
cmpsl
bound
add
xchg
adc
cmpb
movsl
fnstenv
cmp
test
xor
xchg
mov
mov
pusha
ret
pop
insl
add
int3
ret
mov
push
adc
mov
test
xchg
jne
repz
jmp
push
sahf
movsb
sub
ficompl
jnp
insl
mov
push
mov
add
mov
and
lods
out
pop
pop
xchg
add
xchg
sarb
ljmp
mov
xchg
push
loopne
popf
mov
push
movsb
dec
ret
mov
sahf
add
xchg
in
psubw
xor
push
or
cmp
xor
and
hlt
jl
xchg
push
cli
sbb
in
ja
push
ret
push
adc
sarl
dec
mul
cltd
cli
jmp
xchg
lret
sbb
ret
sbb
add
sub
fisubrs
cmpsl
out
sbb
dec
pop
xor
push
cwtl
loope
dec
in
movsb
ret
in
xor
and
xchg
test
inc
rcr
or
mov
xor
pop
pop
out
das
inc
and
insb
ret
outsb
cltd
inc
subl
sbb
shrl
jb
cld
jg
push
das
fsts
ret
in
inc
lock
add
and
adc
xchg
cltd
push
or
mov
push
ja
pop
mov
cmp
mov
nop
loope
inc
and
fbstp
mov
mov
mov
xor
mov
adc
xor
das
dec
jle
mov
test
pop
jb
shl
orl
jl
mov
push
addr16
lret
in
sbb
jo
mov
fwait
test
ret
mov
ret
jne
push
std
adc
sub
ret
xchg
and
mov
sahf
inc
ss
add
adc
call
ret
mov
xchg
push
mov
imul
xlat
out
sbb
xor
add
jecxz
clc
inc
ret
sub
mov
pop
scas
jg
movl
out
cltd
aaa
lea
sbb
ret
mov
shll
out
adc
or
pop
jl
test
lods
pop
fistl
stos
loopne
shr
jns
adc
adc
xor
mov
add
mov
test
ret
add
mov
add
sbb
add
shl
es
xchg
mov
pushf
push
push
or
push
shlb
add
xchg
lock
pop
adc
sbb
out
cmp
sahf
and
mov
ret
mov
push
mov
fldenv
enter
pop
fwait
inc
jge
pop
ss
dec
mov
jecxz
lods
mov
mov
cmpsb
xchg
lea
lock
ror
mov
ret
mov
jge
in
jbe
mov
mov
popa
js
jmp
pop
mov
mov
inc
cmpb
das
roll
movsb
enter
jp
adc
inc
leave
data16
mov
and
std
mov
mov
ljmp
xor
mov
push
cmp
icebp
ja
inc
ret
mov
das
clc
ljmp
xchg
dec
adc
sti
pop
rcll
hlt
push
ret
sub
dec
dec
ret
mov
or
xchg
jecxz
or
add
xchg
jge
ret
mov
lret
sub
enter
mov
mov
hlt
xor
aam
mov
in
pcmpgtb
mov
xor
or
mov
lock
inc
stos
mov
pushf
imul
inc
ret
mov
and
rol
cli
push
xchg
lods
jmp
scas
mov
popa
and
add
out
pop
sbb
shlb
mov
pop
cmp
pop
fadds
and
mov
inc
xor
repnz
jp
mov
adc
xchg
dec
ret
mov
call
jb
ret
out
jbe
arpl
daa
or
repz
gs
add
test
fstl
sub
mov
movsl
pop
aaa
cltd
cmp
or
dec
inc
call
push
ss
jge
ret
clc
cld
insl
test
add
or
insb
ret
mov
adc
pop
mov
jno
inc
mov
ljmp
add
mov
addr16
mov
cli
cmp
repz
push
lock
ret
mov
cmp
pusha
ret
mov
xor
xor
in
stos
outsl
scas
xor
std
jb
adc
xchg
int
stos
add
mov
fbld
add
fs
mov
ficomps
fadd
test
insl
icebp
sahf
mov
jge
adc
arpl
mov
adc
cwtl
rcrb
push
or
add
xchg
pop
lahf
sbb
jmp
add
mov
test
xor
sti
insb
ret
or
lahf
hlt
sub
mov
cmpsb
in
add
mov
add
inc
cmp
rolb
xor
pushf
rcrl
mov
mov
popf
add
mov
mov
mov
inc
sbb
arpl
outsl
ror
add
mov
sub
add
cmp
fists
add
mov
pop
leave
pop
outsb
mov
xchg
arpl
insb
ret
lret
xchg
fidivrs
fsubs
ret
mov
repnz
mov
in
pusha
ret
mov
ficoml
iret
push
inc
ret
and
xorb
inc
lods
push
and
cmpsl
shlb
add
ret
add
mov
in
dec
xchg
or
mov
pop
cwtl
adc
mov
fwait
pop
bound
and
add
mov
push
in
pop
repz
jo
sub
add
mov
enter
lea
mov
cmp
dec
ret
jo
or
rcrl
in
or
jns
cmp
dec
mov
mov
stos
add
data16
mov
cli
pop
push
sbb
mov
dec
xchg
enter
sarb
lods
out
clc
ljmp
push
leave
push
arpl
popa
out
orb
cwtl
mov
add
sub
add
or
mov
cmp
mov
ret
mov
mov
mov
sbb
neg
sbb
pop
shrl
mov
out
lds
loop
mov
adcb
pop
test
inc
repz
and
mov
jae
mov
dec
stc
dec
push
repnz
add
cmp
mov
cmp
pop
icebp
lods
and
mov
mov
cmpb
add
mov
mov
ret
popf
sti
aam
call
ret
pop
push
push
pop
lods
adc
mov
jg
stc
call
dec
ljmp
push
sahf
adc
lret
ret
mov
push
mov
mov
insl
mov
out
cmp
scas
movsb
inc
mov
in
mov
sti
sub
mov
jb
mov
inc
jmp
aaa
lret
mov
nop
ljmp
outsl
jmp
cmp
aas
add
mov
jns
pushf
pop
jl
mov
sbb
adc
add
lahf
push
mov
or
sub
mov
mov
add
repnz
mov
xchg
mov
ret
mov
push
or
or
mov
push
and
push
in
nop
fsubrl
add
in
adc
jae
std
push
fcmovnb
jle
sub
mov
insl
lret
movsb
clc
push
pop
js
mov
out
jg
movsl
mov
jns
cs
adc
ret
mov
ret
cs
ret
mov
jg
clc
xlat
push
std
or
mov
ret
mov
sti
hlt
addb
add
enter
imul
fs
out
inc
dec
ficoml
leave
adc
lcall
aas
enter
push
xchg
out
mov
dec
ret
mov
ja
adc
add
jne
sti
into
mov
add
push
or
sti
enter
dec
aad
repz
cmp
mov
fbld
gs
cmpsl
frstor
add
sbb
inc
sbb
mov
dec
aas
je
data16
mov
rol
nop
inc
sti
outsb
push
lret
xchg
mov
add
cmp
or
inc
rcrl
outsl
sub
inc
ret
mov
popl
aam
and
mov
outsb
daa
jnp
or
daa
xchg
pop
mov
pop
addr16
mov
addb
pop
or
mov
mov
push
mov
jae
jmp
lahf
das
jne
and
hlt
xchg
int3
sub
cmp
int3
lods
cmp
leave
test
mov
xchg
lahf
js
ret
adc
ret
mov
ret
mov
jle
sub
mov
fisubrl
ret
or
xor
hlt
iret
inc
fcoml
mov
mov
mov
add
xor
and
lea
mov
and
dec
xchg
mov
jnp
or
mov
enter
out
ret
mov
xchg
mov
cmpsl
xchg
sub
xchg
out
jae
push
popf
loope
ret
mov
ret
mov
rcll
test
mov
sbb
push
pop
add
out
outsl
pop
sahf
xor
repz
cld
test
push
push
push
out
js
dec
ret
movl
xchg
xor
ss
mov
rcr
add
cmp
ret
adc
ljmp
jmp
add
sbb
add
pushf
fstps
push
mov
sub
outsb
lea
and
cld
sbb
insl
xorl
xchg
leave
pop
scas
jno
inc
or
mov
cmp
cmp
pop
xchg
xor
mov
dec
dec
mov
gs
jp
in
sub
add
mov
mov
mov
adc
ret
mov
mov
std
mov
test
int3
add
scas
in
mov
add
mov
mov
push
out
cmp
popa
aad
sub
xchg
pushf
xor
sbb
int
fisubrs
add
scas
aam
xchg
fcmovnb
repz
mov
ret
lods
xor
lcall
xor
mov
outsb
cwtl
lret
inc
rorl
int
outsb
push
dec
nop
and
pop
call
mov
cmc
and
aam
jecxz
and
mov
inc
ret
or
and
sbb
xchg
inc
je
dec
xor
mov
lods
mov
push
out
es
stos
sti
leave
cld
lods
call
sbb
sub
add
cld
in
loopne
into
push
fwait
cli
addl
xor
mov
mov
or
mov
or
mov
and
pop
movsb
or
mov
cwtl
mov
enter
lret
pop
mov
pop
loopne
es
mov
andb
push
dec
jns
or
mov
dec
inc
sarb
push
arpl
aad
pop
push
push
mov
imul
xchg
aam
mov
imul
adcl
mov
add
sub
xchg
in
repz
popf
pusha
ret
mov
jb
lret
inc
out
fildl
cmpsb
jp
jle
es
push
inc
out
and
mov
ret
test
xchg
mov
adc
add
pop
or
add
mov
xor
dec
in
sti
and
fisubs
ret
mov
insb
ret
mov
pop
and
lods
xchg
in
aaa
ret
push
sub
add
mov
mov
lea
mov
mov
jle
pop
pop
arpl
cmp
pusha
ret
mov
xchg
xor
out
sub
enter
mov
lods
xchg
cmc
out
out
lods
cmp
xor
jl
add
mov
lea
test
ret
mov
dec
xchg
imul
add
mov
push
ret
sahf
mov
pushf
jb
mov
arpl
inc
test
mov
pop
mov
mov
ret
arpl
mov
add
xchg
inc
ret
mov
jle
cmovl
mov
xchg
popf
adc
out
je
push
sbb
ret
xor
mov
fwait
and
aas
adc
inc
repnz
aam
fsubp
and
icebp
cmp
in
inc
ret
mov
bound
push
shld
mov
ret
mov
xchg
mov
out
mov
lcall
add
xor
enter
mov
fcom
dec
cmc
jg
popf
bound
ret
xchg
push
add
fidivl
cwtl
dec
ret
mov
mov
fdivl
out
mov
push
xchg
adc
ret
adc
je
mov
rorb
scas
adc
movsl
push
adc
jne
and
mov
jbe
and
nop
cmp
sbb
mov
ret
mov
push
dec
mov
and
mov
stc
addr16
mov
addl
xchg
mov
mov
movsb
inc
adc
lea
scas
sub
sbb
mov
adc
ret
in
addb
adc
mov
mov
clc
icebp
cmp
add
out
jp
xchg
push
cwtl
mov
ret
jecxz
add
mov
std
push
or
iret
lock
fiadds
ret
mov
ret
dec
fistpll
bound
rcll
pop
xor
push
dec
imul
cli
mov
lahf
add
out
pop
or
mov
add
mov
ss
sti
mov
or
and
aad
cmp
pop
push
push
xchg
dec
mov
adc
xor
ret
mov
xchg
jne
stos
call
add
data16
out
push
cli
ss
out
lea
and
mov
push
aas
sub
mov
mov
adc
cwtl
sub
mov
repnz
mov
mov
mov
pop
es
icebp
icebp
pop
dec
ret
fists
out
jmp
inc
jae
ret
mov
mov
mov
inc
jae
test
lds
inc
push
pushf
arpl
fwait
lea
dec
aam
push
add
jp
insl
mov
add
jb
mov
xor
xchg
das
insl
test
sbb
or
mov
mov
add
add
call
push
inc
ret
mov
int
push
adc
sti
mov
inc
ret
inc
and
test
jnp
cmp
cmp
xchg
sar
pop
sbb
xor
mov
ljmp
or
fsubs
inc
ret
mov
sbb
and
jp
jns
and
mov
xchg
int
xchg
jb
ret
test
mov
add
outsb
mov
ret
mov
or
mov
or
dec
mov
movsb
std
not
push
aas
inc
ret
mov
mov
jge
scas
mov
or
xchg
ror
sbb
add
je
and
cs
or
mov
clc
std
cmpsl
mov
cmp
outsl
push
jnp
fldenv
mov
in
call
leave
push
adc
xchg
das
mov
addr16
inc
mov
cltd
std
lret
jle
call
mov
mov
push
mov
xchg
inc
pcmpgtw
add
outsb
jae
mov
mov
jle
sub
mov
mov
sahf
pop
jno
xor
in
adc
mov
ret
push
cli
gs
mov
jbe
jno
ret
popl
add
daa
rol
iret
ljmp
or
push
sbbl
fisttpll
lahf
xchg
sub
stc
imul
cmp
cmp
fnsave
sti
idivb
leave
imul
mov
std
mov
add
lea
inc
dec
add
mov
add
cs
enter
add
and
mov
add
xor
xchg
sbb
push
divb
sbb
leave
fldenv
ret
lret
rorb
sub
mov
scas
rolb
cmpsl
scas
nop
arpl
cmp
or
outsb
lea
cltd
mov
sub
fsubrp
in
push
pop
mov
cs
shlb
outsb
cmpsl
sbb
push
xor
add
mov
ret
mov
nop
mov
fstpt
pop
jmp
icebp
mov
xchg
insl
jmp
dec
cmc
std
pop
iret
divb
jbe
pop
aam
into
mov
movsb
shll
pop
mov
lret
aas
push
call
adc
mov
lea
mov
mov
dec
ret
mov
add
in
push
adc
mov
sbb
gs
mov
cmp
gs
sti
and
mov
stc
mov
adc
adc
jbe
cmc
imul
je
pop
incl
xor
fmull
mov
and
jg
add
cs
fimuls
arpl
fmull
out
xchg
aaa
and
mov
sbb
std
dec
ss
mov
fidivs
dec
ret
jb
fs
je
mov
sbb
jns
loope
mov
jmp
lret
callw
ss
nop
sub
mov
xchg
nop
sbb
add
repz
mov
add
out
inc
int
mov
or
je
bound
push
pusha
ret
enter
xor
stos
out
sub
sar
nop
sub
mov
into
xor
mov
or
push
mov
pop
inc
ret
fwait
sub
mov
add
mov
adc
add
fidivrl
pusha
ret
mov
call
test
inc
ret
pop
int
push
stos
sbb
push
xchg
mov
push
arpl
jmp
mov
jbe
stos
fnstcw
es
insl
rclb
push
iret
pop
mov
jnp
pop
mov
das
bound
ret
dec
out
cltd
iret
dec
rorb
outsl
cmp
sub
sbb
aam
jnp
sub
pop
addr16
int
ret
in
and
mov
jecxz
xlat
ret
subb
push
pop
sbb
es
ja
dec
push
xor
or
mov
iret
into
jp
out
pop
aad
inc
shll
cmp
push
jae
dec
push
or
mov
in
fwait
addl
pop
push
outsl
cltd
cmpsl
push
pop
xchg
xchg
inc
push
adc
test
insb
ret
mov
add
push
add
orb
cmp
sbb
jl
pop
sub
out
fistl
pop
xchg
push
inc
stos
jl
in
mov
ret
sub
xchg
or
mov
cltd
fnstcw
jb
emms
lret
push
add
movl
cmp
js
ljmp
add
mov
in
cwtl
pop
fldt
testb
arpl
dec
ret
rolb
mov
add
mov
mov
mov
add
mov
mov
dec
out
sub
mov
cld
das
incb
mov
ret
mov
fcomps
cmc
mov
ret
mov
mov
sub
sbb
or
sub
testl
xchg
pop
push
cmp
pop
cli
loopne
repz
out
push
fistpll
call
adc
xchg
pop
xchg
arpl
ret
out
ljmp
jb
add
ljmp
sub
and
mov
add
mov
scas
push
dec
xchg
mov
daa
pop
sbb
sub
adc
jle
imul
lahf
cli
mov
fistps
imul
dec
xchg
stos
add
mov
xchg
mov
dec
ret
mov
sub
mov
pop
test
in
or
mov
mov
xor
insb
ret
mov
loopne
mov
ret
mov
sub
dec
ret
mov
lret
int3
subb
or
mov
jne
xchg
add
dec
xchg
ret
mov
mov
mov
mov
ret
mov
cmp
sub
js
pop
and
add
fwait
loope
sub
xchg
and
or
sub
or
out
ret
xadd
add
cmp
cmp
push
dec
popa
loope
sbb
xchg
pop
dec
mov
int
lahf
lock
xchg
jae
mov
sub
popa
sub
mov
ljmp
pushf
mov
cmpsb
mov
add
mov
fcmovb
mov
dec
push
mov
push
cmp
outsb
imul
loop
lea
pop
mov
inc
sub
mov
ret
lods
cmpsl
clc
pop
push
aam
aam
mov
mov
insl
jns
sub
mov
add
popf
iret
mov
fsubrl
add
mov
add
mov
ljmp
xor
mov
push
sub
jne
insl
aad
and
cmp
mov
add
popa
test
dec
sti
jo
es
out
mov
roll
sbb
mov
insb
ret
push
movsl
mov
add
jecxz
xor
bts
adc
sbb
inc
ret
mov
scas
fistps
inc
ret
mov
inc
push
xchg
std
fisubl
sub
inc
ret
testb
outsl
adcl
jg
cmpl
add
outsb
push
test
out
adc
mov
insl
inc
or
mov
bound
sub
in
xor
sub
mov
cmp
mov
push
das
cmp
in
scas
adc
and
int3
xor
ljmp
dec
ret
push
jne
aad
pop
ja
sbb
mov
xor
sub
mov
rorl
push
outsb
sbb
push
push
out
lods
loopne
jg
mov
mov
and
push
mov
mov
adc
rcll
gs
inc
popa
sbb
push
ja
movntq
out
repnz
xchg
stos
rol
jge
adc
jno
sub
pop
movsb
cmp
notl
cmp
and
mov
ficoms
add
mov
mov
fnstcw
lods
outsl
pop
dec
xor
les
push
movsb
dec
cmp
adcb
scas
push
push
adcl
push
lock
mov
jmp
aas
test
andl
imul
in
mov
mov
mov
sub
iret
sub
mov
xchg
cmp
push
or
ret
mov
nop
cltd
lds
add
xchg
scas
sub
jae
pushf
roll
mov
add
ret
mov
shll
mov
mov
sbb
xor
mov
or
mov
sbb
test
xchg
scas
mov
mov
mov
push
mov
fs
int
mov
mov
ret
mov
pop
outsl
rcr
jae
ret
in
xchg
cmpsb
mov
pop
loope
mov
loop
pop
insl
pop
sbb
mov
hlt
mov
aam
fldt
rolb
xor
add
mov
ret
mov
jb
cs
mov
testl
in
and
in
ret
mov
sbb
jae
or
repz
insl
stc
stc
jns
mov
cltd
mov
mov
lods
mov
mov
sub
fwait
lea
xchg
cmp
mov
or
inc
jbe
add
rcr
incb
jle
fstps
inc
jns
daa
std
fdivrp
aam
sti
std
dec
adc
inc
ret
mov
mov
lret
in
addr16
fwait
sahf
jbe
jle
jbe
ret
cmp
xor
xlat
decb
fld
mov
sarb
daa
add
dec
and
mov
lock
push
mov
ret
mov
jns
push
ffreep
pop
popf
aam
stos
and
mov
cmp
inc
push
and
mov
ret
jl
mov
ficoms
sub
aad
cwtl
dec
fmull
xor
jbe
push
test
mov
int3
jle
pop
sarb
fcompl
jae
push
mov
loopne
sahf
add
lret
mov
adc
jno
imul
xor
rorl
xor
cmp
jg
fwait
inc
shlb
popa
stos
push
imul
ret
mov
hlt
repz
sbb
pop
adc
ja
ret
mov
ljmp
add
imul
sub
add
ret
mov
clc
pusha
ret
mov
and
ret
sarl
pop
iret
dec
lahf
outsb
iret
cmpsl
cmpsb
lea
mov
and
mov
adc
ret
enter
test
add
out
sub
cmp
mov
lds
shr
and
mov
les
lds
mov
loopne
dec
ret
mov
fsubs
out
xor
dec
push
repz
inc
ret
mov
xor
xorb
cmp
les
cwtl
popf
fs
mov
jmp
and
add
push
outsb
iret
jl
loope
ret
mov
movsl
and
mov
ret
cmp
xor
mov
in
push
mov
ret
mov
les
dec
push
cltd
mov
dec
ret
mov
inc
xchg
hlt
jne
mov
int3
mov
popf
cmp
jae
sbb
ret
sbb
sub
cmp
cmpsb
and
mov
mov
jnp
push
jnp
insl
pop
xchg
lret
lahf
mov
adc
jge
xor
mov
mov
push
js
xor
test
sahf
or
ret
mov
in
and
mov
mov
ret
je
inc
ret
mov
mov
sbb
fld
sti
fs
mov
cmpl
addl
ret
je
jg
out
push
addps
add
cmpsb
invd
ret
shl
push
mov
cld
aam
std
fistl
or
mov
ret
mov
add
and
sarb
and
mov
into
sbbl
mov
ret
mov
inc
fiaddl
cmp
sbb
psrad
cltd
and
mov
sub
nop
sbb
jnp
cli
daa
movsb
jne
insb
ret
pushf
add
push
mov
fistl
ret
mov
les
pop
sahf
inc
pop
cmpl
outsl
rorb
add
ret
mov
fiaddl
mov
ss
ja
sub
subb
inc
pop
jne
test
or
addb
stc
inc
and
xchg
lock
sbb
add
mov
fcmovnbe
enter
jbe
ret
loope
push
sbb
xchg
cs
mov
stc
adc
mov
stos
pusha
ret
mov
imul
jne
sahf
nop
adcb
ret
mov
cmp
xchg
rcrb
add
mov
faddl
into
es
sbb
mov
movb
or
mov
dec
fdivrl
ljmp
inc
ret
pushf
arpl
arpl
cmp
mov
jne
ret
fldcw
ret
in
inc
jge
lock
test
add
mov
jae
xchg
xchg
repz
mov
jae
ljmp
add
cmp
mov
sbbb
mov
mov
mov
xchg
mov
aad
and
stos
stc
dec
jns
push
or
and
mov
push
scas
jle
push
inc
mov
mov
ret
mov
or
loopne
mull
aaa
cmc
pop
mov
das
mov
imul
fnstsw
dec
ret
mov
stos
jmp
lock
popf
mov
add
sbb
test
xor
xchg
sub
mov
out
popa
sbbb
sbb
leave
mov
sub
and
mov
xchg
xor
push
sti
inc
xor
push
xchg
lret
lods
dec
std
mov
cmp
jnp
xchg
loop
fiadds
add
mov
or
mov
push
mov
pop
in
mov
jmp
icebp
jne
fadds
dec
jecxz
fwait
pop
jge
ja
lahf
out
imul
sub
mov
insb
ret
mov
lret
mov
add
cmp
jo
mov
adc
out
mov
and
mov
mov
dec
fwait
push
movsb
mov
adc
pop
mov
ret
mov
insb
ret
mov
xchg
sahf
xchg
je
mov
ss
arpl
mov
shll
mov
ret
jecxz
add
add
add
lea
mov
sbb
cs
sub
jle
inc
cs
jo
enter
mov
sbb
out
mov
sbb
push
imul
aas
mov
add
mov
arpl
aad
cmp
pop
imull
cmp
scas
push
fiadds
nop
or
push
test
fs
ret
icebp
xchg
mov
sub
mov
mov
jecxz
ret
mov
cltd
pop
addr16
fwait
xchg
lcall
ds
push
dec
mov
out
mov
cmp
xor
xchg
push
or
mov
fadd
inc
popf
and
mov
testl
add
and
vpaddsw
jo
cmp
push
into
aaa
lahf
jecxz
sub
lret
cmp
sarl
mov
test
push
in
rcrb
mov
pop
inc
ret
mov
adc
mov
mov
push
bound
add
mov
and
mov
pop
mov
add
mov
cld
or
jb
aam
sbb
or
mov
push
pop
sub
mov
sbb
mov
push
adc
jle
cwtl
add
push
in
test
jno
add
mov
jne
or
xchg
std
ljmp
push
ucomiss
test
push
das
test
xchg
or
mov
ret
adc
add
fdivrl
cmp
add
mov
sub
add
outsl
mov
xor
or
repnz
pop
orl
dec
jmp
ret
pop
out
sub
mov
popa
loop
mov
ret
mov
jp
icebp
jbe
push
sub
mov
mov
adc
pop
pop
icebp
sub
mov
call
xor
test
xchg
xchg
mov
out
or
mov
and
pop
xor
adc
lods
sub
mov
test
mov
sbb
ficoms
in
mov
pop
mov
mull
cltd
bound
jo
push
popa
mov
lea
rorl
add
mov
mov
jp
sub
mov
icebp
sbb
add
test
popa
sub
xchg
int3
ret
shr
scas
int3
test
sub
mov
mov
mov
cmpsl
outsl
dec
ljmp
xor
xchg
es
cwtl
pop
shrb
mov
cmpsl
cmpsl
lods
or
inc
je
dec
ret
mov
push
out
aas
mov
add
lods
loop
aad
mov
ret
dec
add
mov
xchg
pop
xor
ret
aaa
mov
or
nop
xlat
ret
xchg
xlat
or
mov
add
sarl
mov
out
aad
leave
test
sbb
or
add
sahf
mov
xchg
jecxz
ja
call
xchg
jno
sarl
popa
jne
mov
call
inc
ret
fmulp
ret
push
sbb
inc
ret
xor
mov
xor
sub
mov
mov
scas
test
push
push
xor
loope
insb
ret
mov
xor
ret
mov
in
inc
ret
mov
mov
adc
mov
xor
loope
jmp
mov
in
andb
ret
cmp
adc
add
adc
stos
jp
mov
test
mov
addr16
add
mov
and
mov
sbb
inc
int3
lret
cmpsb
pop
jp
xchg
mov
mov
mov
repz
inc
mov
hlt
out
push
adc
jge
dec
or
mov
push
cwtl
sbb
pop
add
mov
out
mov
xor
mov
xchg
out
jl
imul
pop
int
sbb
cmc
test
shrb
jg
add
sysenter
mov
mov
lahf
jecxz
xchg
test
repz
or
mov
outsb
cwtl
xchg
sahf
stc
mov
mov
jnp
cs
push
mov
aaa
cmp
leave
shll
ret
mov
clc
cmp
rorb
cmp
pop
and
fs
mov
dec
loopne
sete
les
aaa
mov
jo
aaa
ds
jge
test
call
inc
int
test
cld
fidivl
ret
mov
div
pushf
push
xchg
sub
jmp
test
je
jns
push
pop
out
lods
ret
fwait
push
and
mov
add
jbe
ret
addb
je
or
lods
add
add
shll
fisttps
ja
jmp
xor
and
mov
mov
clc
outsb
inc
cwtl
mov
cld
out
clc
pusha
ret
das
adc
ret
ret
pop
mov
mov
aaa
pop
jge
sbb
and
mov
xor
push
and
add
nop
inc
add
sbb
or
mov
add
out
xchg
ret
mov
mov
mov
aaa
int3
mov
ficompl
ret
mov
and
mov
add
mov
pusha
ret
xor
dec
loopne
mov
lcall
shlb
add
std
sbb
push
movsb
xchg
dec
mov
xchg
out
adc
mov
ret
add
mov
mov
sub
mov
das
shrb
push
cmp
pushf
fcomps
stos
rcrb
ret
imul
sbb
jge
fwait
pop
shrd
mov
inc
mov
sbb
lret
scas
inc
mov
ret
jge
test
add
pop
shr
cs
mov
test
xor
mov
add
mov
adc
pop
xlat
mov
mov
icebp
mov
mov
out
imul
sbbl
xchg
nop
aad
lock
data16
out
jle
mov
and
rcr
xorb
sub
filds
pop
cmp
adc
mov
pop
shrl
in
adc
mov
sub
faddl
fistl
dec
xchg
std
ret
inc
ret
mov
ret
aad
push
cmpsl
addb
jmp
mov
and
mov
ret
mov
add
mov
lcall
mov
ret
mov
pop
insl
inc
stc
add
test
jmp
lahf
or
ja
sbb
sahf
mov
add
icebp
std
cmp
pop
sbb
lods
leave
pop
cmp
hlt
fiaddl
mov
in
and
ret
mov
ret
sbb
cmp
inc
inc
ret
mov
inc
popa
add
ret
mov
and
cmp
ret
arpl
dec
stos
xchg
adc
cmp
insb
ret
mov
ret
mov
cld
xchg
mov
leave
aad
leave
stc
mov
imul
and
mov
and
mov
dec
push
test
test
shrl
cli
mov
adc
pop
ds
pop
mov
std
movsl
mov
adcl
push
jo
aaa
hlt
mov
lods
mov
insb
ret
mov
mov
dec
xchg
stos
sbb
aaa
into
test
push
dec
push
jp
mov
mov
jno
rorl
mov
push
outsl
jmp
movb
jmp
fldl
adc
jle
fs
outsl
cld
cmp
xchg
mov
pop
adc
sub
ret
mov
xor
movsl
pop
stc
call
arpl
sahf
inc
ret
mov
pop
cmp
mov
jns
mov
sti
add
lds
add
sbb
mov
ficomps
lea
js
mov
push
iret
jecxz
pop
into
ds
out
cmp
outsl
sub
dec
ret
or
mov
out
pushf
fucomi
arpl
test
mov
push
pop
outsb
inc
pusha
ret
mov
jne
mov
in
ret
rorl
out
leave
in
sbb
in
sub
ret
and
jp
or
popa
dec
ret
mov
repnz
mov
shrb
add
mov
jns
je
jl
mov
xlat
push
into
fs
mov
aad
pop
scas
outsl
sarb
mov
fstps
jecxz
sub
mov
notb
faddl
cmpsl
inc
cmc
push
cmpsb
mov
cmc
mov
loop
or
popf
dec
ret
mov
inc
mov
sbb
fs
add
ret
push
addr16
fwait
and
ret
mov
xchg
dec
mov
jecxz
xchg
sbb
and
push
fs
insb
ret
mov
mov
dec
test
add
sbb
mov
add
into
pop
xchg
pop
dec
ret
mov
out
ss
jle
adc
into
xlat
mov
ret
es
cmpsb
test
les
fdivrs
sub
jl
in
hlt
dec
ret
mov
xchg
push
xchg
add
cltd
loopne
sbb
push
cmp
mov
pop
pushf
mov
lahf
cmp
cmpsb
pop
mov
jae
es
lcall
add
stc
cltd
dec
inc
xchg
bnd
loope
loope
out
in
adc
int3
pop
push
push
leave
add
mov
xchg
push
xchg
cmp
mov
out
cld
push
push
test
add
mov
add
out
mov
repnz
xor
sub
shrb
mov
movsb
push
pop
ret
mov
shlb
inc
out
push
mov
sub
push
int
jb
push
fstps
mov
dec
xchg
cmp
cmp
repz
jae
out
sub
ret
pop
mov
xchg
mov
sbb
xor
ret
mov
push
dec
or
xor
push
fs
inc
ret
mov
ret
mov
popa
paddsb
xor
sahf
mov
inc
ret
mov
add
addl
or
adc
xchg
inc
sbb
xor
sub
movsl
pop
negb
jb
inc
ret
mov
dec
jne
cmp
pop
and
mov
fsubs
inc
dec
cmpsb
push
pop
mov
ret
push
aad
sbb
shrb
and
mov
into
fimull
ret
mov
cmp
sub
mov
filds
or
int3
and
mov
fildl
push
xor
add
or
xchg
js
and
or
pop
sub
xchg
jo
pop
xchg
popl
inc
ret
cmp
int3
imul
xor
cli
mov
mov
sub
in
mov
gs
xor
mov
ret
fcmovnbe
xchg
stos
outsb
lret
adc
cmc
sbb
add
daa
xchg
ret
mov
jo
idivb
mov
lds
xor
cs
jecxz
ret
mov
sub
je
stos
jmp
mov
dec
mov
push
pop
pmaxub
int
lods
cli
xor
out
divl
ret
dec
repz
fistl
lods
mov
mov
and
mov
mov
push
int
ljmp
negb
stos
inc
cli
add
mov
dec
pop
in
fdivrs
data16
dec
cmp
xchg
sar
jle
out
sbb
leave
loope
mov
xor
jmp
jno
xchg
jle
cmp
xchg
push
fs
inc
xchg
mov
ffreep
in
clc
call
lods
jne
inc
adc
and
add
mov
xor
mov
aam
rclb
ds
mov
sar
std
pushf
lcall
mov
aas
jnp
cmp
mov
xorb
ret
mov
repnz
decl
imul
gs
mov
xlat
outsl
les
push
lock
stos
push
and
rclb
rorl
jbe
inc
icebp
push
roll
add
inc
cmp
fbstp
jb
mov
das
inc
ret
mov
popf
mov
out
add
mov
add
out
aas
pop
lcall
pop
iret
mov
sbb
adc
ret
hlt
jp
xchg
adc
ret
jns
out
fldl
cmpb
popa
sub
push
pop
or
mov
mov
je
into
jnp
fsubrl
jno
inc
pushf
stos
adc
sbb
imul
test
push
push
daa
insl
xor
dec
cmp
pop
xor
call
adc
mov
ss
fcomp
or
divl
pop
popf
mov
fldt
xor
into
push
sar
jl
mov
inc
lahf
pop
adc
push
pop
mov
pushf
pop
std
sub
sub
inc
ret
mov
add
imul
adc
dec
loopne
loop
sub
add
mov
testb
mov
mov
or
mov
mov
pop
jl
xchg
inc
push
or
lock
push
jbe
ret
mov
pop
fnstsw
cmp
inc
fldenv
jle
ret
mov
add
mov
jg
ret
pop
lods
pop
lods
jo
es
mov
push
movsl
ss
ret
mov
pushf
push
xor
sbb
pushf
cltd
mov
xor
ret
popf
and
mov
and
mov
mov
pop
pop
add
pusha
ret
mov
daa
xchg
inc
xor
std
out
cmpsl
movsb
clc
nop
ret
sbb
mov
jmp
les
aas
mov
addr16
lcall
jmp
xchg
pop
push
jp
push
add
mov
jbe
out
dec
ret
mov
lods
ret
cmp
jnp
ret
dec
aam
jp
cmp
pop
add
mov
mov
dec
ret
mov
call
shll
fnsave
push
out
mov
ret
mov
adc
pop
sub
mov
xchg
add
xor
ret
mov
or
mov
lret
and
mov
inc
sub
and
mov
mov
add
xchg
dec
add
pop
into
push
sub
inc
scas
jns
mov
dec
push
mov
hlt
imulb
das
sbb
mov
and
add
mov
out
enter
mov
mov
fwait
stc
xor
lret
cmp
stos
shlb
movsb
push
pushf
push
cmp
pop
mov
mov
repnz
ret
mov
es
lret
dec
mov
inc
sub
cmp
pop
jmp
pop
jmp
or
adc
mov
mov
test
push
scas
xchg
cmp
fdivrl
xchg
inc
ret
pop
cld
dec
cmpsl
repz
adc
lock
sbb
adc
inc
enter
mov
mov
out
jmp
hlt
push
inc
shr
mov
dec
push
push
and
in
or
lret
xchg
fiaddl
in
insb
ret
in
sarl
inc
ret
xor
shll
jae
mov
adc
xor
xchg
push
cmp
insl
mov
sub
add
clc
xchg
dec
lods
dec
hlt
fiadds
push
adcl
mov
mov
mov
jg
adc
jae
jmp
imul
js
ret
mov
xlat
stos
mov
jo
adc
out
sbb
mov
sub
mov
mov
lock
call
mov
ret
mov
add
cmpsl
fistpl
mov
adc
sbb
ret
mov
or
sti
mov
push
test
in
jg
xor
lret
xchg
mov
jmp
cmp
jle
pop
inc
pop
inc
out
or
mov
mov
iret
fbld
ds
stos
inc
inc
or
mov
hlt
ja
adc
lret
sub
mov
dec
in
mov
jnp
sbbl
and
mov
mov
test
dec
xlat
lret
mov
shrb
call
xorb
lcall
pop
mov
mov
ret
inc
xchg
jo
decb
add
jecxz
cmp
mov
pop
mov
cmpsb
or
xchg
mov
sti
sub
mov
clc
leave
jmp
imul
cmc
repz
js
int
ljmp
mov
cmp
xlat
addr16
xchg
int
arpl
cmp
ret
mov
mov
ds
bound
lret
fstl
jbe
iret
cmp
rcr
xchg
hlt
cmp
mov
pop
jns
sbb
repz
dec
xor
mov
add
cli
pop
call
push
filds
inc
ret
mov
aad
xorb
xchg
adc
sbb
mov
rorb
jns
lds
repnz
push
jl
inc
outsb
loope
cmp
loopne
dec
cs
jle
jmp
pushf
cltd
shlb
call
add
or
mov
in
and
jecxz
sbb
mov
ljmp
lea
aaa
fdivrs
xchg
sbb
imul
dec
ret
mov
cmp
loopne
rclb
cmp
dec
ljmp
int3
jmp
mov
clc
test
add
push
pusha
ret
jne
sahf
jle
xor
ret
bound
push
add
movswl
dec
sub
mov
popa
adc
xorb
sub
and
gs
xchg
xor
jg
ret
push
push
jg
sbb
in
mov
push
jns
ss
pop
loop
imul
xchg
fwait
jg
mov
int3
xchg
sub
mov
fildll
adc
out
push
imul
dec
pop
mulb
ret
xchg
adc
and
pop
jl
lea
inc
lods
push
dec
ret
mov
sti
xor
jle
iret
inc
push
inc
add
mov
mov
cmp
out
in
ret
inc
ret
mov
sub
sub
mov
jl
pop
jge
divb
jg
push
pop
not
mov
adc
push
popf
mov
cli
mov
nop
jb
std
and
mov
mov
ret
mov
in
stc
lret
adc
or
mov
add
sub
mov
jle
ret
mov
addb
pop
sub
pop
cmpsl
andl
lret
mov
ret
divl
nop
xor
fstl
ret
mov
pushl
jmp
jnp
ret
xchg
fstps
ljmp
popa
dec
ret
mov
inc
cltd
add
mov
mov
ret
adc
test
sbb
fadd
out
xor
push
add
outsb
sub
mov
shll
lods
inc
ret
mov
and
mov
cld
xor
mov
aas
out
lret
push
faddl
add
mov
add
pop
pop
xchg
push
cmp
ret
jecxz
ret
mov
rolb
sub
loop
mov
and
mov
cmpsb
fldenv
lret
cmp
daa
mov
xchg
cwtl
sub
mov
ret
mov
mov
and
mov
mov
into
stc
cmc
mov
scas
out
mov
sbb
outsl
xor
cli
jl
jno
in
push
test
icebp
dec
in
jge
pop
daa
subl
aaa
and
mov
dec
push
inc
ret
mov
sub
or
popa
sti
mov
mov
and
rolb
fisttpll
int3
gs
pop
mov
mov
pushf
sub
mov
xor
fisubs
add
cmc
add
dec
sarl
shrb
stc
xchg
mov
out
ret
dec
jecxz
test
xlat
aaa
ds
cmp
push
push
inc
ret
in
shl
scas
or
mov
das
or
pushf
sbb
mov
imul
stc
scas
mov
leave
or
and
out
or
inc
ret
xor
fstl
mov
mov
cmp
lret
sbb
jle
in
das
xchg
mov
jno
and
mov
xor
jecxz
adc
pop
mov
mov
jmp
mov
lret
push
into
jle
lret
rcl
aas
insl
or
mov
add
roll
dec
fdivrs
dec
ret
pop
inc
lods
sub
mov
xchg
dec
mov
aaa
ucomiss
mov
ds
cli
out
adc
dec
jae
leave
movsl
pusha
ret
lcall
stc
mov
pop
out
into
cmp
dec
mov
cld
ficoms
inc
ret
mov
mov
sub
ret
leave
outsb
fldt
stc
movsb
pop
lods
adc
push
imul
out
int
notb
jnp
push
push
mov
jmp
es
push
add
jbe
sbb
xchg
push
std
cmc
pop
and
out
mov
mov
push
movl
inc
bound
data16
mov
into
mov
out
in
push
rorb
add
mov
jl
fwait
es
ret
inc
sub
cmpsl
faddl
adc
movsb
pop
lea
lds
fisubrs
ret
mov
jecxz
or
mov
jo
ret
aaa
mov
or
pop
and
xchg
mov
iret
test
lods
push
rcll
xchg
cmpsl
js
jge
mov
mov
mov
ret
mov
movsl
in
pop
cmpsb
sbb
push
cmp
jno
jno
xchg
aaa
cli
jge
sbb
lret
xchg
adc
sub
pop
mov
nop
or
jno
call
xchg
jns
ret
or
dec
add
mov
push
out
xchg
in
sbb
aas
push
push
out
jae
ret
mov
mov
xchg
xor
dec
xchg
test
mov
cwtl
les
xor
data16
push
cs
imulb
push
cli
and
push
insb
ret
mov
mov
sub
or
cwtl
enter
xchg
js
cmc
mov
adc
outsb
scas
add
or
into
dec
shll
sub
mov
scas
adc
in
mov
aam
jns
pop
pop
lea
mov
mov
sub
mov
dec
ret
xchg
pcmpgtd
jbe
jl
lods
inc
xor
xchg
xchg
pop
push
leave
push
xchg
pushf
cmp
lods
adc
into
mov
sub
fildl
mov
mov
cli
ja
ret
mov
xchg
xchg
cltd
fcomp
sbb
ss
push
jns
ret
mov
jp
pop
add
mov
movsl
std
cmpl
ss
xchg
adc
sbb
xchg
jmp
in
fmull
jae
ret
test
rcrl
enter
push
lds
ret
mov
dec
dec
ret
mov
add
mov
push
lret
push
jnp
dec
ret
mov
mov
or
mov
mov
push
pop
imul
xchg
idivl
scas
pop
rol
mov
sbb
or
xor
fmuls
pushf
cli
xor
jmp
lock
cld
jbe
ret
mov
add
mov
ret
pop
jle
push
cs
aas
lock
rorb
adc
pop
pop
ds
out
jae
hlt
push
sbb
sbb
cwtl
imul
aaa
pop
mov
jae
out
add
mov
rcll
ror
sahf
shrl
and
mov
insb
ret
mov
cmp
ret
mov
cmpsb
jae
jmp
mov
lods
pop
or
xor
setne
mov
ret
fsubrl
push
aad
pop
adc
mov
adc
mov
mov
scas
dec
ret
out
cmc
rcrb
sbb
push
aaa
fiadds
ret
sub
push
int
sbb
jne
cmp
jmp
loopne
pop
sub
aad
ret
mov
test
or
fs
mov
xor
dec
jns
scas
js
pop
jne
stc
xchg
pusha
ret
mov
arpl
cmc
add
mov
mov
or
mov
mov
mov
push
les
push
xor
int
fcoms
cmp
add
mov
mov
lods
xchg
imul
lds
ret
mov
movsb
xchg
cmp
xchg
mov
stc
stc
mov
call
cmp
cmp
pop
jno
prefetch
ret
mov
push
inc
decb
mov
daa
dec
xchg
insb
ret
mov
mov
jmp
add
int3
cmc
mov
xchg
fwait
into
mov
out
push
inc
jbe
pusha
ret
cltd
shlb
pop
and
shrb
add
and
mov
pop
lahf
ja
adc
push
jb
iret
je
pop
sbb
ffreep
sub
in
mov
pop
pop
loope
xor
fsubl
or
mov
cmp
testb
mov
data16
aam
rorl
mov
mov
mov
inc
addl
mov
repnz
ret
or
mov
ret
mov
fld
or
add
mov
add
mov
and
pushf
cld
mov
jmp
pusha
ret
mov
dec
ret
mov
jecxz
xchg
xchg
jbe
cmp
mov
mov
mov
aaa
add
mov
inc
or
bound
ret
sub
popf
in
or
mov
push
mov
inc
cmc
jno
jecxz
fcom
dec
xchg
dec
out
outsb
add
mov
jbe
popa
idivb
ret
mov
add
mov
ret
mov
push
pushf
mov
pop
mov
ret
mov
outsl
and
mov
or
mov
push
mov
rorb
pop
push
inc
ret
js
ret
mov
cwtl
shl
insl
pusha
ret
fidivrs
mov
xchg
ret
xor
ret
mov
orl
cmpsl
dec
ret
mov
pop
inc
sub
jg
push
inc
pop
cli
xchg
jmp
mov
xor
xor
jmp
pop
aad
inc
fadds
mov
ret
mov
js
xor
sbb
push
xchg
stos
pop
xchg
jo
pop
ljmp
fists
lret
pop
sub
mov
lods
sbb
add
xchg
movsl
test
js
cmc
aad
xchg
mov
and
mov
ret
mov
pop
or
rorb
mov
sbb
cmpsb
enter
sub
jae
and
mov
dec
imulb
leave
jb
stos
jne
ret
mov
mov
fisubs
add
mov
cltd
push
subl
stc
add
xchg
or
popl
inc
sub
mov
jno
cmp
mov
mov
add
pop
cmc
cmp
pop
popa
adc
arpl
mov
loop
test
mov
in
inc
popa
arpl
xchg
mov
subl
sub
jno
inc
mov
test
add
ss
scas
adc
push
push
push
mov
fisubrs
pop
js
dec
ret
mov
in
popa
ja
xchg
bnd
icebp
jmp
mov
in
mov
or
mov
lock
add
cmc
lods
mov
add
out
lcall
ret
mov
movsl
xchg
stos
hlt
ficompl
ret
mov
add
lock
outsb
jmp
ret
mov
ret
pop
shlb
cmpsb
lret
mov
ret
outsl
jns
lcall
in
dec
lods
mov
test
and
jecxz
jb
add
and
mov
sarl
mov
ss
xor
inc
fwait
stos
push
fs
test
cmpsb
pop
test
repnz
rolb
or
xchg
jle
sbb
adc
dec
ret
mov
jmp
hlt
and
pushl
jg
cmp
jo
dec
ret
loop
ret
mov
insl
mov
pop
mov
sub
testl
dec
fwait
mov
mov
or
mov
sti
imul
dec
xchg
je
xor
adc
mov
add
mov
adc
clc
insl
jge
ljmp
xchg
loop
addl
sbb
and
jge
test
inc
ret
mov
shll
push
inc
sti
mov
mov
sub
dec
fistps
mov
pop
push
dec
sbb
aad
test
pop
pop
jecxz
mov
out
push
dec
movsl
jmp
scas
mov
cmp
ret
mov
jmp
in
cmp
int
ret
mov
sub
mov
xchg
mov
iret
outsb
push
mov
ret
shll
pop
inc
ret
cmp
jb
enter
push
jns
stos
clc
mov
repz
cli
xor
scas
in
test
jo
xchg
lea
mov
adc
rclb
mov
ret
jmp
sub
ret
cli
in
js
add
cmp
xor
fisubrl
iret
push
lock
icebp
inc
out
test
mov
push
cld
jle
mov
stc
fs
mov
int
xchg
rcr
lds
adc
pushf
dec
loopne
scas
movsb
inc
mov
push
jnp
xor
mov
fidivl
jo
push
pop
lds
stc
addr16
jb
mov
rcrl
dec
jecxz
add
call
ss
shll
cmpsl
cmp
clc
cwtl
push
inc
inc
ret
mov
lret
mov
push
or
jl
test
sbb
cmpsl
ret
bound
das
or
or
mov
shlb
lret
insl
test
or
mov
add
mov
cli
mov
pushf
mov
divl
xorl
lea
mov
push
sbb
test
dec
xor
add
adc
mov
int3
in
xor
or
mov
xchg
in
pop
ds
ret
or
mov
or
pop
dec
jae
or
jo
push
push
dec
cmp
repz
and
mov
ret
fyl2xp1
jae
ret
pop
mov
ret
mov
add
faddp
mov
inc
out
jb
stos
sub
cmp
imul
mov
sub
pusha
ret
xchg
mov
cmc
jp
and
loop
xor
mov
push
jb
jns
mov
jge
sub
mov
sub
pop
sbb
pop
ret
mov
mov
mov
pusha
ret
mov
int
je
sbb
nop
outsb
std
sub
aas
cmp
sub
mov
fcoms
in
rorl
arpl
adc
hlt
xchg
fs
mov
out
lds
pop
jb
sbb
add
pop
mov
mov
push
test
jne
ljmp
push
jle
test
ror
xor
into
divb
dec
ret
sub
mov
test
add
jp
cmp
fst
xchg
clc
sub
mov
test
mov
out
add
jmp
mov
xchg
jmp
movb
push
mov
cmp
scas
adc
push
xor
jno
pop
das
cld
pop
cmp
fs
mov
and
imul
pop
jp
pop
mov
lock
ret
mov
xchg
and
out
mov
mov
icebp
ret
icebp
pop
mov
xor
pop
xchg
hlt
test
out
inc
jge
or
aad
icebp
les
cmp
or
jge
lods
ljmp
hlt
sub
loope
bound
mov
xchg
mov
push
std
mov
sbb
pop
xchg
fcoms
div
dec
ret
mov
mov
popf
arpl
movb
inc
ret
in
out
mov
jnp
fists
mov
mov
fmul
in
push
sar
lret
lcall
sbb
push
dec
or
mov
imul
pop
sub
cmpsl
jbe
ret
push
es
jb
popa
mov
add
mov
fcomps
mov
inc
ret
mov
das
jge
imul
mov
add
mov
nop
mov
mov
adc
xchg
mov
repz
das
pop
insl
add
insb
ret
jge
pop
mull
ret
mov
fwait
dec
ret
mov
orb
mov
aam
rclb
push
pusha
ret
pop
mov
sbb
ds
dec
ret
fcomps
adc
mov
add
addr16
jb
pop
push
jb
dec
sub
ret
or
loop
mov
scas
out
pusha
ret
pop
xchg
pusha
ret
mov
mov
mov
add
push
sarl
negb
fwait
xor
inc
mov
cmp
iret
out
mov
ret
mov
and
mov
add
inc
pop
adc
xchg
xchg
ss
dec
ret
xchg
xor
sbb
add
bound
or
pop
or
mov
loopne
or
mov
xchg
push
mov
mov
fmuls
aam
lcall
mov
int3
dec
sub
mov
sbbl
xor
push
loope
iret
lock
push
jo,pn
fildll
stc
iret
clc
mov
dec
ret
mov
icebp
loope
stos
xchg
inc
jbe
je
mov
mov
icebp
fs
mov
std
mov
cld
cmp
or
add
xlat
ret
fwait
pop
cmp
repnz
stc
test
aaa
outsw
sbb
ret
mov
imul
test
in
cltd
cmp
add
jo
lcall
jle
cmp
stos
into
cwtl
std
push
es
cmp
or
mov
jp
ret
mov
ret
mov
mov
mov
mov
ret
mov
cmp
aas
push
inc
icebp
ret
stos
fmulp
and
mov
xchg
in
popa
jg
out
cmp
push
mov
and
mov
movsb
lods
and
xchg
push
pusha
ret
cmp
nop
sbb
xor
ljmp
aas
and
test
mov
inc
in
xor
jl
fildl
fnstenv
or
ret
mov
les
mov
insb
ret
stc
inc
inc
fbstp
cmpsb
pop
xor
ret
mov
add
lcall
cs
add
dec
or
jmp
adcb
and
fistpll
inc
int
ret
jg
mov
adc
mov
sahf
jns
adc
int
adc
mov
mov
add
rclb
jmp
push
nop
sbb
cmp
pop
xchg
jle
xchg
jl
ret
mov
lds
pop
xor
xchg
jmp
cltd
sub
inc
ret
mov
inc
ret
movsb
jne
gs
sbb
pop
rorb
insl
or
inc
mov
ret
mov
ret
mov
jns
ja
adc
or
dec
jo
daa
and
gs
cmpsl
inc
andl
ret
dec
xchg
sbb
sub
mov
lret
test
or
lcall
xor
imul
mov
sub
aam
lea
dec
mov
andb
bound
mov
sbb
mov
cmpsl
mov
fwait
or
xchg
cmpsb
icebp
insl
mov
ret
mov
ret
mull
mov
popa
jb
subl
cmp
or
mov
jns
xchg
adc
sub
mov
add
adc
cmc
aad
stos
mov
jp
lcall
mov
ret
mov
pminsw
std
add
add
mov
pop
jnp
leave
push
out
jae
mov
stos
int
roll
ss
dec
dec
cmp
aam
sahf
xor
cs
dec
ret
out
js
outsb
sarb
cmp
subb
add
xchg
sub
add
ret
cld
fnstcw
ret
mov
dec
iret
cmpsb
shl
mov
mov
pop
rcrb
sti
push
jbe
popf
jecxz
pop
dec
add
mov
push
scas
push
push
aaa
std
jo
and
mov
inc
cmp
ret
push
mov
scas
scas
dec
push
data16
mov
cmp
movsb
clc
mov
scas
in
fdivrs
jno
jbe
cmp
adc
loopne
stos
bound
aad
insb
ret
add
scas
lea
and
sbb
cli
pop
cli
aaa
jge
arpl
pop
dec
ret
mov
cmc
mov
int3
jl
ret
call
sub
mov
lret
data16
mov
ret
shll
ret
jmp
xor
stos
int
imul
andb
add
dec
mov
repz
inc
lret
sar
adc
dec
ret
popf
or
or
xor
ret
xor
pop
sub
cmp
xor
mov
sbb
add
lcall
adc
ret
aad
nop
adc
adc
pop
and
loope
xor
movl
pushf
push
mov
out
iret
mov
in
ljmp
int
jp
ret
mov
out
sub
mov
testb
pop
push
mov
mov
fs
mov
lret
add
lock
imulb
ret
jle
mov
mul
mov
fistpl
push
gs
dec
ffree
popf
mov
push
les
hlt
xlat
push
mov
sti
inc
stos
add
mov
or
cs
pushf
push
das
add
mov
inc
cmp
out
imul
out
mov
jbe
sub
movsb
das
lcall
xchg
pop
ljmp
jle
dec
es
add
ret
mov
push
lcall
xorb
fildl
adc
sub
aaa
mov
jns
lods
push
xchg
mov
orb
push
sbb
movsb
push
cmpsl
scas
mov
sti
sbb
add
dec
rcll
add
mov
push
in
int
ret
mov
and
jl
pop
nop
lock
das
pop
lods
stos
lock
mov
xchg
hlt
sub
es
inc
ret
inc
xchg
cmp
inc
ret
cwtl
das
jns,pt
outsl
dec
push
loope
adc
inc
mov
cmp
jnp
mov
sbb
inc
pusha
ret
mov
cmp
rclb
ret
mov
lds
sarl
fucom
sbb
jno
ret
mov
sbbb
enter
xchg
adc
xchg
mov
ret
mov
mov
add
aam
mov
mov
imull
mov
add
xor
loopne
sbb
mov
in
inc
ret
mov
lods
inc
cld
cli
or
popa
mov
int
lods
inc
stos
in
mov
subb
jae
jg
in
mov
add
adc
fisubrl
mov
jo
xchg
push
clc
mov
imul
mov
mov
lods
push
cmp
cmpsl
lods
push
cs
mov
mov
fisubrs
test
xor
jp
mov
sub
mov
shlb
cli
pusha
ret
ds
jge
aaa
lret
and
jge
std
dec
ss
inc
aas
lret
jb
xor
push
lods
or
mov
cli
mov
mov
add
fists
call
mov
sbb
js
mov
stos
stos
and
push
mov
pop
insl
popa
movsb
shl
movsl
hlt
mov
fsubl
ret
jmp
cmp
and
dec
push
cmp
lret
jbe
sbb
or
pop
movsb
loopne
ret
mov
ret
stc
lret
loopne
lea
insl
jg
mov
lods
xlat
mov
pop
cmp
jp
mov
cmpsl
lahf
pop
mov
in
push
in
jo
sarb
mov
cwtl
dec
xchg
push
gs
jmp
cld
push
dec
jmp
fimuls
jl
inc
scas
in
dec
fnstcw
add
cmp
pop
adc
mov
add
imul
aaa
xchg
push
jb
jns
imul
mov
loop
lock
xchg
add
mov
xchg
enter
add
pop
jge
scas
pop
dec
iret
cmpsl
push
out
jb
mov
scas
cmc
jmp
push
push
cmp
adc
mov
mov
push
movsb
and
or
dec
cwtl
sahf
sbb
dec
gs
push
push
push
mov
or
aam
outsb
adc
push
mov
iret
lcall
in
and
imul
inc
sbb
test
ret
mov
ret
jl
sbb
mov
out
or
mov
mov
mov
add
lods
faddl
dec
adc
out
jle
fcmovnb
jge
adc
mov
dec
cli
mov
jmp
std
mov
xor
fsubrl
ret
mov
dec
in
and
in
mov
and
mov
ret
mov
ret
std
or
mov
push
cld
daa
cmpl
mov
imul
mov
push
subl
mov
cmp
mov
or
lock
lret
aad
mov
xchg
lcall
clc
scas
push
xchg
fs
mov
dec
push
das
inc
ret
mov
push
aad
add
mov
out
inc
mov
iret
ja
pop
dec
adc
xorb
ret
mov
lea
mov
repz
insb
ret
and
mov
in
inc
ret
mov
icebp
xor
inc
ret
pop
out
ret
or
mov
and
and
mov
ret
mov
cld
dec
scas
and
mov
and
xchg
mov
scas
sti
lcall
push
push
sbb
sbb
push
mov
ret
stos
push
add
ret
mov
insl
pop
or
mov
cs
jne
scas
or
mov
add
mov
jge
mov
mov
sub
ret
mov
ret
inc
pop
cmp
outsl
adc
mov
pushf
add
jp
cltd
std
lret
ret
cmp
ljmp
ret
mov
pop
rorl
out
lfs
add
jbe
sbb
xchg
testl
hlt
cmc
fs
mov
push
mov
mov
ret
mov
jg
dec
xchg
fdivs
push
not
or
icebp
decl
lahf
scas
xchg
cld
sbb
test
adc
and
mov
inc
inc
popa
or
or
mov
mov
and
mov
sahf
pop
jnp
arpl
ret
loope
leave
sub
fsubrs
adc
pop
cld
sbb
mov
mov
scas
jp
jb,pt
xchg
icebp
ret
sub
and
mov
call
sahf
cwtl
aam
jbe
mov
mov
mov
jno
cmp
test
flds
adc
sub
ret
mov
add
pop
ds
sbb
ss
in
icebp
xor
sbbl
aam
fnstcw
sbbb
dec
push
ret
mov
mov
rorb
dec
cld
dec
ret
mov
add
ret
loope
repnz
sbb
arpl
sbb
ret
sub
fiaddl
rorl
dec
ret
jo
jne
bnd
test
pop
out
inc
popf
dec
jl
sbb
fwait
xchg
pop
mov
fdivs
push
iret
ficoml
inc
pop
stos
mov
push
cmp
push
adc
pushf
jnp
add
ret
mov
imulb
ds
push
ret
mov
xor
ja
test
adc
clc
les
mov
pop
xchg
jle
ret
and
mov
dec
cmpsl
or
jnp
mov
add
mov
add
mov
iret
adc
add
add
mov
ret
mov
mov
out
outsl
lods
filds
mov
aaa
dec
ret
sbb
adc
js
int3
sbb
sub
mov
fildll
into
lcall
inc
ret
mov
xor
ret
mov
inc
ret
mov
mov
popa
out
sbb
sub
cld
push
adc
in
ret
mov
add
mov
inc
mov
neg
xor
sbb
sub
jb
jmp
fcoml
andl
addr16
movsl
jmp
inc
ret
mov
ret
mov
imulb
jne
outsb
mov
mov
stos
xchg
sahf
dec
ret
mov
mov
scas
push
and
sub
les
mov
add
mov
in
sahf
jno
loopne
imul
jb
ret
mov
xchg
mov
inc
stos
cmp
add
add
add
xor
cmpsl
fnsave
xchg
fcoms
pop
push
pop
lret
rcrl
ret
std
mov
aas
jbe
push
movsl
lahf
sub
mov
add
mov
xchg
push
je
cmp
insb
ret
mov
fwait
pop
mov
ret
cltd
xchg
mov
cmp
std
test
jns
pop
loop
mov
cltd
push
out
in
inc
imul
mulb
repz
push
insb
ret
mov
jbe
pop
ror
addr16
adcb
dec
mov
add
sub
mov
inc
out
mov
xchg
xchg
mov
imul
pop
jnp
sbb
push
lret
addb
test
mov
xchg
pop
inc
dec
add
mov
lea
insl
lret
mov
data16
lods
sub
dec
int3
fcmovu
in
mov
pop
mov
sbb
addb
inc
ret
ret
push
adc
xchg
jle
push
das
das
repnz
fisubl
jo
mov
ret
mov
xchg
loopne
andl
jmp
sbb
mulb
ljmp
fs
das
fistpl
jp
shlb
aam
mov
das
inc
sahf
push
cmp
into
add
mov
ret
pop
sbb
cmp
sbb
mov
xor
sbb
cmc
adc
icebp
jno
ret
insl
jg
shll
int
cli
notl
cmpsl
sbb
jecxz
jne
jg
jne
cmp
popa
and
mov
dec
repnz
adc
popf
das
sbb
nop
test
ret
insl
test
std
mov
xchg
lcall
shrl
sub
jae
xorb
xchg
leave
xchg
loope
mov
pop
test
mov
fdivrl
lea
ret
les
jge
sarl
ret
mov
shl
fldl
out
cmp
or
mov
loope
sbb
or
mov
sub
mov
mov
inc
push
fdivs
sti
rcl
push
or
mov
jg
push
out
xchg
loope
stos
fsubrs
add
sbb
insl
ja
xchg
leave
dec
push
push
jmpw
mov
ret
mov
lret
aad
sub
mov
sahf
or
mov
dec
ret
mov
mov
xchg
sbb
lcall
fbstp
pushl
shl
sarb
faddl
ret
mov
add
add
lea
jnp
sbb
ret
mov
into
addr16
hlt
add
ret
lret
iret
mul
xchg
cld
and
lret
in
push
mov
pushf
leave
add
xchg
into
mov
and
rcll
ret
jmp
xchg
mov
jg
jo
cmpsl
mov
aam
leave
dec
mov
cmpsb
dec
pushf
leave
and
lods
jo
ret
mov
jp,pn
ret
data16
jl
pop
cmpsb
stos
pop
test
test
add
adc
mov
mov
pop
jnp
push
imul
fsubl
pop
push
push
mov
mov
push
jmp
sub
subl
ret
mov
mov
mov
es
es
xchg
inc
fs
mov
jge
add
mov
cmp
pop
insl
add
mov
add
pop
pop
cs
out
dec
mov
jo
std
push
movb
mov
inc
push
jbe
fwait
in
adc
fmul
mov
fcompl
loopne
lock
in
jnp
adc
shl
adc
mov
push
jno
outsb
aad
mov
div
test
rcr
mov
add
in
mul
arpl
fwait
popf
cmp
mov
mov
sbb
add
mov
popa
inc
repnz
push
xor
mov
pop
adc
pop
or
or
push
ficompl
jg
fisubrl
cmp
data16
mov
pusha
ret
mov
fstpt
pusha
ret
mov
xor
mov
dec
int
and
mov
mov
in
inc
shr
ja
xor
mov
out
dec
xchg
mov
ret
mov
xor
sub
mov
loop
movsl
sbb
pop
xor
out
mov
loop
inc
ret
dec
mov
push
fst
jecxz
or
mov
ret
mov
push
cmc
imul
add
mov
inc
ret
mov
push
sarb
repz
leave
popf
scas
ljmp
jle
mov
cmc
aam
mov
ret
mov
inc
fs
adc
jb
stc
xchg
xor
pop
ljmp
dec
xlat
xorb
iret
adc
or
push
nop
sbb
cmp
mov
xchg
and
mov
mov
out
add
mov
sub
fwait
jmp
mov
adc
rcrb
mov
fs
mov
cmpsb
test
push
or
mov
into
dec
mov
movsl
pop
jno
loope
xchg
mov
sbb
ret
pop
dec
scas
inc
cmp
ret
mov
sti
ret
fnsetpm(287
xorb
ret
mov
push
sbbl
cmp
ja
xlat
fistpll
push
xor
mov
xchg
fmull
jmp
test
ret
test
loopne
ret
fwait
inc
ret
mov
int
pop
scas
adc
outsl
sbb
pop
pop
leave
repz
cmp
stc
xchg
jl
pop
imul
fmuls
fisttpl
ret
mov
mov
mov
outsl
aas
out
jbe
sub
mov
js
xchg
xchg
out
fs
mov
mov
jmp
mov
fcompl
cwtl
push
enter
mov
sub
or
sbbl
arpl
sahf
hlt
xor
jge
jmp
lds
jle
xor
mov
adc
sbb
cmc
stos
ss
jb
xchg
clc
loopne
mov
xchg
jnp
lahf
add
inc
enter
xor
jge
push
dec
out
jae
ret
xchg
pop
mov
fldenv
mov
ret
mov
shl
xlat
jmp
cwtl
out
mov
jp
mov
mov
push
loope
popf
sbb
push
out
lea
aam
fidivl
xchg
roll
movb
jno
imul
add
dec
out
mov
pop
mov
push
test
popf
outsl
shr
push
jb
jge
mov
mov
push
shrl
fsub
js
shlb
cwtl
xor
xor
notb
add
mov
inc
shrl
or
mov
jo
jle
mov
push
out
lret
or
mov
jae
sub
mov
xorl
mov
jge
adcl
int3
xchg
jge
ret
mov
jp
mov
push
cmp
add
nop
cmp
js
mov
add
mov
fnstcw
icebp
repnz
cmp
sbbl
insl
test
mov
cmp
sbb
jmp
push
mov
sbb
sbb
mov
cmpsl
and
out
ret
andl
incl
imul
pop
push
js
mov
mov
jmp
inc
ret
cmpsb
or
dec
sub
pop
inc
sti
lods
sub
mov
add
stc
mov
jmp
sub
mov
mov
mov
ret
mov
adc
ret
mov
or
fisubrs
cmc
into
mov
pop
std
push
rcrl
add
ret
push
jns
mov
sub
imul
aaa
shr
andb
mov
add
mov
sub
jae
or
push
bound
repz
inc
ret
mov
inc
cwtl
or
imul
sbb
icebp
lret
sbb
add
rorl
xlat
xor
jne
repz
push
ja
and
mov
mov
mov
cmp
add
mov
lea
mov
mov
notb
jmp
push
rolb
das
mov
inc
ja
cmpb
add
dec
xchg
enter
in
cli
in
rcl
leave
sti
nop
cmpl
mov
lods
cmp
int3
jbe
mov
jp
loopne
sbb
mov
sub
mov
roll
push
cmp
fists
insl
mov
loop
ret
inc
xchg
cltd
pop
and
and
pusha
ret
daa
repz
lods
ss
jo
daa
mov
sub
xchg
flds
pop
out
or
pop
lea
out
pop
add
mov
mov
aas
xor
mov
xchg
fstps
dec
fstps
fisubrl
and
dec
int3
inc
add
aam
push
scas
mov
ret
mov
adc
loop
cmp
movsb
mov
xchg
mov
jle
or
push
xchg
add
call
stos
aad
pop
inc
ret
mov
jae
dec
xchg
push
bswap
outsl
pop
loop
mov
and
jle
add
mov
jno
or
iret
insb
ret
mov
jbe
fcomi
mov
inc
test
unpckhps
out
ss
lea
hlt
loopne
mov
push
loop
das
mov
dec
ret
fld
jmp
pushf
or
jmp
into
les
add
push
loope
or
inc
inc
inc
mov
mov
add
add
xor
movsl
test
imul
les
inc
ljmp
ret
inc
mov
push
ret
xchg
inc
adc
in
dec
mov
mov
adc
mov
add
mov
lock
es
or
hlt
sub
ret
mov
leave
pop
bound
mov
push
push
push
loop
or
push
stos
dec
ret
mov
ja
test
lods
lds
jne
xor
cmp
hlt
sbb
cli
ds
fcmove
outsl
mov
cli
jns
into
sub
fdiv
or
mov
js
jp
sbb
mov
ret
mov
dec
mov
ret
mov
add
add
jg
icebp
xor
cli
shrb
je
mov
add
add
test
xor
xlat
or
cwtl
mov
xor
cli
pusha
ret
mov
adc
rcrl
shrl
lret
mov
clc
ret
cwtl
xchg
push
jge
fisubs
daa
push
scas
mov
mov
cmc
jnp
add
ret
loop
mov
jb
lret
cwtl
or
mov
xor
mov
xlat
mov
out
sub
cmp
ret
and
add
mov
jmp
dec
ret
mov
mov
rclb
dec
pop
das
cmp
cmp
ret
jmp
ret
mov
nop
stc
js
insl
dec
ret
leave
adc
loopne
jne
ret
mov
adc
stos
bound
and
mov
sbb
lods
add
add
les
xchg
sbb
out
out
imul
gs
and
mov
movsb
subb
shr
xchg
stos
negb
jp
insb
ret
mov
lcall
and
mov
sub
mov
sbb
cs
sbb
push
sahf
jne
outsl
iret
les
psllw
xor
bnd
pause
sbb
mov
mov
scas
cmpsb
jmp
add
lea
sbb
dec
ret
push
dec
ret
jnp
sbbb
iret
mov
sub
test
xchg
mov
mov
add
mov
test
cli
jp
pop
sub
mov
sbb
pop
out
mov
sub
fstpt
addr16
rcl
jp
sub
sub
lret
xchg
pop
and
jne
insl
sbb
mov
fs
mov
outsb
scas
aaa
cs
sbb
xor
add
insb
ret
mov
xor
mov
mov
pop
jo
scas
or
dec
mov
mov
jns
mov
gs
mov
push
push
fisubs
push
arpl
std
dec
adc
pop
adc
xlat
push
jae
dec
stos
mov
sahf
fs
push
lret
iret
inc
ret
mov
mov
mov
lock
fnstcw
mov
cs
lea
lahf
mov
adc
push
pusha
ret
xchg
mov
fwait
push
sub
in
imul
add
add
addr16
push
xchg
pop
test
sbb
xchg
and
sti
in
add
lods
dec
ret
mov
jp
jecxz
jne
xor
mov
in
mov
mov
nop
jns
mov
scas
push
ret
inc
ret
jle
cmc
shlb
ss
int3
sub
loopne
push
repz
xlat
das
addl
cltd
push
test
imul
xchg
pop
cmpsl
arpl
sbb
lahf
test
ret
mov
mov
mov
mov
push
mov
pop
xchg
xor
mov
ret
mov
xor
cmpsl
fsub
mov
out
and
xchg
jnp
adc
jb
addl
daa
fcoms
mov
jp
add
stc
add
fwait
xor
adc
mov
cmpsl
jp
sub
mov
nop
lcall
pusha
ret
and
add
nop
popf
add
mov
cmp
into
fdivrs
mov
mov
lahf
jo
xchg
add
mov
shr
gs
dec
or
mov
mov
or
mov
inc
and
mov
icebp
imul
mov
mov
test
jl
hlt
data16
das
daa
repnz
mov
mov
push
lds
daa
push
sahf
jl
add
add
popa
insl
cs
adc
mov
adc
ret
mov
sub
mov
mull
ss
pop
pop
inc
inc
pop
loopne
sti
lock
int3
xchg
cmpsb
sub
add
mov
add
sbb
xchg
pop
out
mov
ret
mov
int
sub
out
mov
cmp
js
movsl
subl
and
cmp
add
fists
mov
mov
mov
es
iret
outsb
dec
icebp
mov
fisubl
sub
aas
push
pop
xor
icebp
sbb
daa
movsb
pushf
movups
outsl
ljmp
cs
inc
ret
mov
lock
outsl
sbb
movsb
bound
fisubs
fsubr
ljmp
data16
xchg
cmpsb
mov
add
mov
xor
pop
and
lods
imull
mov
in
and
mov
jp
xorb
ds
cmp
or
mov
push
sub
mov
xchg
enter
add
int
dec
out
mov
dec
ret
mov
or
xchg
andb
push
mov
in
jne
ds
fstl
fisttpl
mov
ret
iret
push
gs
adc
stos
mov
loope
clc
mov
out
adc
jl
ds
xchg
ret
pop
dec
push
and
mov
movsb
xor
push
fistps
xchg
add
je
mov
sbb
mov
shl
and
push
xchg
stos
jp
test
imul
ret
mov
in
mov
sbb
mov
add
mov
flds
ret
mov
mov
sbb
pop
xchg
xor
lods
mov
mov
push
sub
add
push
into
mov
mov
test
test
scas
out
adc
jl
or
mov
jne
jns
mov
pop
fs
movsl
jne
loop
push
adc
into
push
rorb
cmp
cmp
or
mov
jne
js
movsl
shlb
jne
call
outsb
pushf
loop
add
or
mov
lods
dec
ret
adc
mov
mov
les
jae
ds
inc
int3
mov
xchg
and
mov
cmpsl
and
or
mov
cmp
das
pop
mov
lds
jno
add
cs
sbb
shrl
jne
xor
sub
xchg
add
mov
sub
sbb
pop
fldenv
loopne
fmuls
pop
enter
add
lcall
bound
xor
fmul
sub
mov
pop
idivl
cltd
scas
add
cmp
xlat
popf
loope
mov
pop
int
sbb
sti
mov
arpl
xor
ret
mov
das
mov
test
mov
mov
jg
je
cmp
sub
jle
xorl
ret
cmp
ret
cltd
pop
fidivrl
push
jl
imul
mov
js
enter
pusha
ret
mov
pop
pop
rolb
idivb
cmpsl
push
scas
test
add
fidivrs
pcmpgtb
mov
imul
sbbl
dec
jg
sub
addl
mov
mov
add
daa
cmp
test
shll
mov
mov
mov
scas
insb
ret
mov
pop
in
sub
mov
jmp
ret
rcrb
inc
ret
test
vpsrlq
inc
ret
mov
mov
bound
mov
daa
ficomps
pop
jb
fstpl
jp
xor
inc
ret
push
mov
inc
sbb
dec
ret
add
and
lahf
in
pushf
int3
shrl
add
mov
cmc
jl
inc
jge
dec
divl
add
repnz
call
fwait
mulb
iret
js
lods
negb
ret
outsl
loop
jno
xchg
xchg
mov
je
ljmp
out
sub
mov
add
add
inc
in
add
cmp
scas
dec
ret
leave
ljmp
add
cmpsl
jb
add
mov
stc
shr
add
mov
dec
inc
aam
stc
rcrb
out
in
jb
popf
sbb
sbb
mov
popa
or
mov
inc
cmp
push
insb
ret
mov
je
and
cs
fisubl
pop
int3
cmp
ljmp
push
push
out
mov
shll
das
cmpsl
in
or
sbb
out
leave
cs
add
mov
rcrl
push
xchg
xchg
cs
mov
stc
sbb
in
push
or
sbb
mov
sahf
addr16
adc
mov
mov
mov
mov
scas
fsubs
mov
int
push
and
mov
cwtl
mov
mov
ret
faddl
lret
clc
iret
leave
in
xor
mov
insb
ret
mov
or
mov
ret
mov
hlt
add
mov
ret
orl
std
inc
pop
xor
fisubs
inc
ret
pusha
ret
mov
sub
movsl
outsb
lcall
mov
sahf
fisubl
push
dec
test
push
jo
cmp
sbb
or
xor
movsb
lahf
push
out
cmp
sub
jno
jle
ret
fcoms
cmp
mov
jne
mov
cmp
inc
ret
loopne
sbb
sbb
xchg
and
mov
ret
pop
or
mov
lds
cltd
cmpsl
sub
mov
mov
adc
sti
les
cmp
lahf
arpl
roll
mov
sub
repnz
ret
movsb
lret
test
stc
dec
or
cmc
jmp
inc
jmp
ret
mov
leave
insb
ret
mov
test
mov
push
out
sub
ret
mov
lock
stc
lock
push
sahf
inc
ret
mov
shl
xor
add
mov
hlt
stc
js
xchg
mov
mov
or
mov
pop
lahf
dec
mov
ret
jnp
loope
mov
pop
pop
ss
fs
sub
mov
ja
repnz
sub
lea
or
bound
adc
popf
mov
mov
ret
mov
loopne
mov
inc
ret
mov
stos
mov
push
push
xor
int
sbbb
push
jl
rcrl
xchg
std
add
repnz
cmpsb
pop
xor
cwtl
jle
ret
outsl
push
imulb
dec
repz
int
test
mov
add
daa
filds
sub
fwait
jb
test
cmp
cmp
xor
inc
ret
roll
push
test
sbb
inc
mov
dec
jae
xor
cli
xchg
outsb
mov
add
xchg
cmpsb
sahf
fld1
ljmp
fcompl
aas
xlat
cmp
pop
ficompl
test
clc
push
push
aas
fistps
ret
mov
call
test
sub
mov
and
push
ja
ficompl
push
mov
ret
rcrb
loopne
dec
ret
mov
or
sub
jno
or
mov
fwait
adc
dec
push
dec
ret
mov
mov
call
xchg
xchg
movsl
dec
popa
out
jo
insb
ret
sbb
inc
mov
shll
ret
xor
repnz
inc
imul
and
pop
outsl
jmp
push
mov
insb
ret
mov
fcomip
shrb
cmp
mov
and
mov
push
sbb
pop
inc
gs
xor
fists
sbb
push
mov
fstpt
data16
ds
pop
jmp
or
pushf
inc
ret
jb
daa
stc
scas
into
mov
add
adc
ret
jle
inc
ret
mov
sti
test
mov
fdivrs
jmp
adc
add
mov
cmp
enter
push
es
mov
or
mov
mov
xchg
dec
jl
cmp
add
push
rcrl
in
sahf
push
lds
add
or
test
inc
fstl
les
sbb
push
ds
ret
rorl
enter
shlb
ds
nop
daa
cltd
loope
jp
xchg
push
xor
daa
adc
std
orb
adc
rclb
call
sbb
rclb
test
fildll
ret
in
cmpsl
fcoms
lret
bswap
sub
adc
cvtpi2ps
xor
imul
push
das
nop
jne
xor
adc
sbb
lret
ljmp
add
add
testb
jb
xchg
rol
mov
arpl
int3
push
mov
and
adc
out
jle
mov
or
pushf
ds
mov
out
push
cwtl
cmp
or
mov
das
sub
mov
push
shlb
mov
xor
out
int
lea
lock
fsubrl
loopne
outsb
icebp
fisttps
aam
shr
jle
inc
ss
fstps
sarb
loopne
jb
sub
mov
aad
mov
mov
dec
fdivr
data16
adc
jo
xor
ret
push
mov
std
or
mov
in
in
int
mov
ret
mov
out
push
xchg
push
mov
int3
pop
ror
fildl
lock
mov
pop
and
mov
xor
jecxz
push
cli
test
neg
push
sub
call
je,pn
adc
pop
arpl
ret
mov
mov
mov
dec
add
mov
stc
daa
dec
ret
mov
ret
adc
jp
cmp
ret
mov
mov
jl
movsl
add
mov
sub
or
mov
ret
mov
fwait
rclb
shrb
fwait
call
mov
add
fimull
cmp
andb
lahf
xlat
fadds
jbe
mov
testl
je
jge
push
or
mov
push
ret
dec
ret
mov
add
fistpll
lret
mov
or
mov
mov
ret
lahf
push
jbe
jle
and
mov
cmp
dec
ret
insb
ret
call
pop
mov
or
mov
mov
das
inc
push
loope
add
or
or
mov
cmp
arpl
push
pop
fs
mov
arpl
shr
mov
jns
and
push
pop
cmpsb
gs
in
cli
xchg
adc
push
push
dec
dec
mov
in
xchg
jbe
imul
ret
in
mov
add
lahf
cmp
add
xlat
outsl
sbb
jne
adc
ret
stc
fnstcw
les
es
and
mov
ret
out
adc
sbb
repnz
inc
push
jge
pop
popa
sub
jl
push
and
and
mov
xor
das
mov
xchg
andb
fcoms
stc
jmp
dec
mov
and
lods
xor
fadds
push
movsl
js
fs
mov
ret
outsb
iret
xorl
jns
test
xor
mov
icebp
adc
ret
mov
insb
ret
dec
mov
or
mov
rcrl
jecxz
sbb
sarb
mov
or
cmp
jg
aaa
shlb
imul
addr16
pop
cmp
shll
fwait
mov
mov
jg
fbstp
loopnew
mov
mov
int
test
cli
iret
or
mov
cwtl
aas
pop
inc
ret
mov
sub
mov
outsl
xchg
imul
add
scas
dec
sbb
or
mov
adc
add
imul
iret
mov
test
mov
jnp
int
and
aad
push
cmp
insb
ret
stos
fldenv
loopne
sarb
jne
fstpl
insb
ret
xchg
ret
rorb
add
mov
or
ret
jo
icebp
or
push
mov
dec
stc
mov
cltd
or
stos
pushf
mov
jne
test
xor
js
xor
mov
pop
pop
call
jg
ret
out
rcrl
mov
xor
test
jge
pusha
ret
mov
in
les
mov
mov
xor
bound
xchg
stos
sub
pushf
in
aas
xor
pop
add
mov
lea
out
dec
add
nop
ljmp
mov
lea
add
mov
iret
dec
xchg
mov
push
jae
dec
in
ret
xchg
lahf
imul
mov
cmp
push
out
or
push
pop
loope
repz
bound
mov
inc
iret
mov
xor
lsl
int3
inc
xchg
dec
mov
enter
addb
xorl
sbb
mov
xchg
popa
lret
bound
inc
xlat
into
mov
les
cmp
mov
loop
dec
dec
ret
mov
ret
mov
jg
loop
in
lahf
cli
ror
les
add
addr16
ret
outsl
jmp
add
mov
testl
mov
and
mov
or
mov
mov
xchg
mov
in
pop
int3
ds
mov
sub
mov
sbb
cmp
ret
mov
ja
pop
pop
nop
movsb
mov
mov
mov
cmp
pop
ficompl
sub
addr16
stos
and
jecxz
add
push
inc
jae
xchg
movsb
pop
fwait
or
ss
scas
lea
bound
cld
dec
add
das
xchg
cld
stos
lock
repnz
mov
addb
cli
mov
sub
and
stos
imull
call
add
mov
mov
loope
in
out
sarb
dec
ret
mov
div
imul
push
jp
cmp
fiadds
add
mov
out
mov
cmp
add
rolb
push
mov
stc
sub
mov
sub
cmpsl
orl
cwtl
and
ret
inc
mov
flds
ret
mov
in
sbb
xchg
je
mul
pmaxub
ss
bound
test
push
fbld
fwait
mov
sub
mov
dec
fdivrs
inc
mov
addb
add
je
and
mov
stos
jne
imul
lods
mov
stos
imul
mov
fsubrs
push
mov
outsb
jmp
cwtl
and
rcrl
dec
lahf
loopne
adc
daa
cwtl
cmc
sbb
sar
xchg
xchg
divb
insl
mov
ficoms
sbb
cmp
pushf
adc
inc
dec
lds
jmp
leave
in
add
xchg
adc
xor
je
rcrb
ret
pop
push
add
mov
ret
mov
fmull
jecxz
outsb
xor
stc
push
std
arpl
jae
out
cmp
dec
addb
xorl
out
sub
ret
mov
sub
in
cmp
pushf
xchg
mov
pop
outsb
test
fnstsw
and
add
xlat
xchg
aad
int3
rorb
push
xchg
xlat
sub
mov
into
lock
ds
sbb
js
jge
shll
outsb
adc
adc
sbb
dec
ret
cmc
lcall
cmp
jnp
not
adc
mov
loop
add
dec
push
fwait
and
adc
add
mov
arpl
jno
ret
mov
mov
cmp
aas
mov
xchg
daa
xor
testl
enter
mov
pop
cmp
pop
lahf
push
sub
jmp
in
jns
mov
push
in
jbe
inc
ret
fadds
add
ret
mov
jp
mov
jle
dec
ret
mov
add
stc
pushl
xchg
aad
cmc
pop
jno
icebp
and
loopne
pop
int3
mov
lret
and
and
inc
ret
mov
jmp
inc
imul
dec
out
aam
ret
mov
add
lds
mov
lret
ja
shlb
mov
in
pusha
ret
mov
mov
pop
mov
out
jne
fistpl
ja
icebp
bound
out
test
dec
dec
shlb
xchg
push
stos
xchg
es
call
add
popf
stos
sub
mov
in
mov
sub
mov
pop
cmpsl
test
cmp
xchg
fsubl
sub
jnp
sbb
cmp
gs
aam
mov
ljmp
insb
ret
neg
mov
add
fcomps
adc
xor
das
mov
ret
sub
lret
or
mov
ja
data16
inc
ret
cmp
mov
push
sti
clc
bnd
add
lahf
xchg
cmpsb
popf
add
cli
das
dec
lods
sub
gs
xlat
and
mov
xchg
imul
mov
lods
out
enter
xchg
mov
xchg
pushf
xor
cli
fdivl
sub
mov
daa
mov
shl
shll
sub
mov
fnsave
and
push
sub
add
dec
ret
clc
pusha
ret
mov
mov
add
mov
inc
cli
sti
std
mov
jmp
cmpsb
ss
inc
rcll
mov
add
mov
mov
jb
in
arpl
sbb
mov
pop
dec
jo
ret
movsl
push
inc
ret
mov
and
xor
mov
cmpsb
mov
into
xchg
loopew
fs
mov
ret
mov
ret
add
mov
es
jp
inc
ret
mov
sbb
mov
fimull
rol
fcoml
lcall
inc
ret
pop
movl
push
and
ret
inc
sub
andb
test
push
mov
hlt
js
push
int3
ss
and
mov
clc
add
add
idivl
inc
ret
mov
cmpsb
aas
mov
cwtl
pop
outsl
cmp
int
shll
rclb
mov
insl
pop
and
pop
adc
cmp
bound
ja
int3
sar
inc
inc
ret
out
les
sbb
sahf
xchg
or
ret
lret
jnp
mov
sbb
inc
