addr16
in
in
in
jecxz
in
jecxz
in
out
in
loop
in
loop
in
in
in
in
in
loope
in
in
in
jecxz
in
out
in
out
in
out
in
in
in
jecxz
in
loop
in
loop
in
out
in
call
loop
in
in
in
out
in
jecxz
in
in
in
loop
in
call
loop
loopne
loop
and
loop
das
loop
in
out
in
in
in
loop
in
call
loop
fsub
loop
or
loop
and
in
call
loop
cmc
loop
in
loope
in
out
in
in
in
out
in
out
in
out
in
call
loop
shl
in
loope
in
jecxz
in
out
in
in
in
jecxz
in
jecxz
in
jmp
loop
jns
loop
sbb
loope
in
jmp
loop
jne
loop
mul
loop
cmp
out
in
call
loop
mov
loop
repz
in
out
in
loop
in
loop
in
loop
in
in
in
in
in
call
loop
es
in
jecxz
in
in
in
loope
in
in
in
out
in
in
in
loope
in
call
loop
push
jmp
loop
repnz
in
loope
in
loop
in
loop
in
out
in
out
in
in
in
call
loop
mov
out
in
out
in
jecxz
in
loope
in
loop
in
loope
in
loop
in
loop
in
call
loop
mov
loop
in
call
loop
dec
loop
in
in
in
loop
in
jecxz
in
loop
in
out
in
out
in
loop
in
call
loop
and
in
out
in
in
in
call
loop
push
in
in
in
in
in
in
out
in
in
in
call
loop
fwait
out
in
in
in
in
in
out
in
jmp
loop
arpl
loop
fucom
loop
and
in
call
loop
sbb
loop
mov
loop
lods
jecxz
in
in
in
out
in
in
in
out
in
out
in
out
in
in
in
call
loop
fsub
loop
push
in
in
in
in
loop
in
loop
in
call
loop
out
loop
dec
jmp
loop
in
in
in
loop
in
out
in
jecxz
in
out
in
loop
in
loop
in
out
in
loop
in
loop
in
out
in
loop
in
out
in
loop
in
in
in
in
in
in
in
jecxz
in
call
loop
and
loop
out
in
jecxz
in
out
in
loop
in
in
in
jmp
loop
mov
in
in
out
in
jecxz
in
loop
in
loop
in
in
in
jecxz
in
in
in
in
in
jmp
loop
xchg
loope
in
jecxz
in
in
in
loop
in
loop
in
call
loop
lret
in
loope
in
out
in
loop
in
in
in
call
loop
pop
out
in
call
loop
pop
out
in
out
in
out
in
in
in
out
in
jecxz
in
in
in
in
in
call
loop
push
call
loop
jns
loop
jecxz
loop
lcall
in
out
in
loop
in
loope
in
call
loop
int
loop
sbb
loop
inc
out
in
loop
in
call
loop
call
loop
in
in
in
in
in
in
in
loope
in
in
in
in
in
in
in
loope
in
loope
in
call
loop
cltd
out
in
out
in
in
in
in
in
jecxz
in
loop
in
in
in
call
loop
repnz
in
in
in
in
in
jecxz
in
in
in
out
in
out
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
out
in
out
in
loop
in
out
in
loope
in
in
in
in
in
loope
in
jecxz
in
loope
in
out
in
call
loop
jb
loop
jne
loop
inc
out
in
jecxz
in
out
in
jecxz
in
in
in
out
in
in
in
out
in
jmp
loop
adc
loop
insb
in
in
loope
in
call
loop
loop
clc
jecxz
in
jecxz
in
out
in
call
loop
ret
in
in
in
jecxz
in
out
in
loop
in
out
in
out
in
in
in
out
in
jecxz
in
in
in
in
in
loop
in
loop
in
loope
in
in
in
loope
in
out
in
in
in
in
in
out
in
loop
in
loop
in
out
in
call
loop
xchg
loop
in
jecxz
in
in
in
in
in
loope
in
out
in
loope
in
loop
in
in
in
out
in
loop
in
in
in
out
in
in
in
jecxz
in
out
in
loope
in
out
in
call
loop
mov
loop
xor
loop
shr
loop
scas
loope
in
call
loop
in
in
out
in
jecxz
in
in
in
call
loop
cmp
loop
test
loop
loope
loop
xor
loop
jb
loop
in
in
in
out
in
call
loop
xchg
in
in
loope
in
out
in
jecxz
in
in
in
jecxz
in
loop
in
loop
in
in
in
call
loop
jmp
loop
js
loop
sahf
jecxz
in
loope
in
in
in
out
in
jecxz
in
loope
in
in
in
out
in
loop
in
in
in
loop
in
in
in
loope
in
in
in
out
in
in
in
loop
in
loop
in
loope
in
jecxz
in
call
loop
cmp
loop
cld
out
in
in
in
loope
in
in
in
in
in
out
in
out
in
in
in
call
loop
into
out
in
call
loop
mov
loop
popf
out
in
in
in
in
in
in
in
jecxz
in
jecxz
in
out
in
call
loop
in
loop
int
loop
xchg
loop
js
loop
cld
loop
in
jmp
loop
adc
loop
mov
jmp
loop
imul
loop
jp
loop
lahf
call
loop
inc
jecxz
in
jecxz
in
loop
in
in
in
loop
in
call
loop
sti
out
in
loop
in
out
in
out
in
loop
in
loop
in
loop
in
out
in
out
in
in
in
loope
in
loop
in
call
loop
cli
call
loop
push
out
in
out
in
in
in
loope
in
jmp
loop
aaa
loop
in
out
in
out
in
out
in
loop
in
jecxz
in
in
in
call
loop
loope
loop
and
loop
or
in
in
out
in
out
in
out
in
loop
in
loop
in
out
in
loope
in
in
in
loope
in
call
loop
xor
loop
into
jecxz
in
in
in
out
in
out
in
out
in
call
loop
mov
loop
sbb
out
in
in
in
call
loop
lods
jecxz
in
in
in
in
in
loop
in
out
in
jecxz
in
in
in
jecxz
in
in
in
jecxz
in
in
in
in
in
out
in
in
in
out
in
jmp
loop
loop
inc
in
in
loop
in
out
in
in
in
out
in
call
loop
clc
loop
in
loop
in
loop
in
in
in
out
in
out
in
in
in
out
in
in
in
loop
in
in
in
in
in
loope
in
in
in
out
in
loope
in
out
in
call
loop
jecxz,pt
in
in
in
in
in
in
in
jecxz
in
jmp
loop
movsb
out
in
in
in
loop
in
out
in
jecxz
in
jmp
loop
sbb
loop
es
in
jecxz
in
out
in
out
in
out
in
jmp
loop
inc
jmp
loop
stos
out
in
in
in
out
in
out
in
jecxz
in
in
in
loope
in
out
in
out
in
out
in
call
loop
aam
loop
jg
loop
pop
call
loop
lods
out
in
jecxz
in
in
in
out
in
jmp
loop
out
in
jecxz
in
in
in
in
in
jmp
loop
xchg
loop
in
loop
push
out
in
call
loop
insl
out
in
in
in
in
in
loop
in
in
in
in
in
in
in
jmp
loop
xchg
in
in
out
in
call
loop
pushf
loope
in
in
in
jmp
loop
jo
loop
pushf
out
in
call
loop
stc
loope
in
call
loop
mov
loop
push
in
in
loope
in
in
in
in
in
jecxz
in
out
in
in
in
out
in
in
in
in
in
call
loop
mov
out
in
out
in
in
in
jmp
loop
mov
loop
mov
loop
imul
loop
cs
in
in
in
jecxz
in
loop
in
out
in
in
in
loop
in
loop
in
call
loop
in
in
out
in
in
in
loope
in
loop
in
loope
in
out
in
in
in
out
in
jmp
loop
adc
loop
pop
loope
in
loop
in
loope
in
loop
in
loope
in
loop
in
jecxz
in
out
in
in
in
loop
in
out
in
loop
in
out
in
call
loop
push
call
loop
mov
in
in
jecxz
in
jmp
loop
dec
in
in
loop
in
out
in
out
in
in
in
loop
in
loope
in
in
in
in
in
in
in
out
in
out
in
jecxz
in
call
loop
sbb
loop
aas
out
in
loop
in
out
in
loop
in
loop
in
out
in
loop
in
jecxz
in
loop
in
loop
in
loope
in
loope
in
jecxz
in
out
in
out
in
loop
in
out
in
out
in
call
loop
push
loop
in
call
loop
data16
in
loop
in
out
in
jecxz
in
out
in
loop
in
jecxz
in
in
in
out
in
loop
in
loop
in
in
in
jmp
loop
push
jecxz
in
call
loop
add
loop
lods
loope
in
jecxz
in
loop
in
in
in
call
loop
imul
in
call
loop
or
loop
out
in
in
in
call
loop
push
loop
sbb
loop
mov
call
loop
shl
in
loop
in
in
in
in
in
loope
in
in
in
loop
in
out
in
loop
in
call
loop
xchg
out
in
out
in
in
in
loope
in
out
in
out
in
out
in
call
loop
jmp
loop
add
loop
push
loop
in
out
in
out
in
out
in
out
in
in
in
in
in
loop
in
in
in
out
in
out
in
in
in
out
in
jecxz
in
in
in
call
loop
in
in
loope
in
in
in
call
loop
fwait
in
in
in
in
loop
in
out
in
in
in
in
in
call
loop
mov
out
in
call
loop
cltd
loope
in
in
in
out
in
in
in
jecxz
in
out
in
loope
in
out
in
in
in
jecxz
in
out
in
in
in
out
in
jmp
loop
lods
loop
in
out
in
out
in
in
in
loop
in
jecxz
in
out
in
jecxz
in
out
in
jmp
loop
outsb
in
in
jmp
loop
add
loop
lods
call
loop
imul
loop
cmp
loop
mov
loop
fsubr
loop
adc
loop
das
out
in
in
in
call
loop
sub
loop
xor
call
loop
shl
loop
dec
loop
in
in
in
jmp
loop
gs
in
loop
in
loop
in
in
in
in
in
out
in
jecxz
in
jecxz
in
jecxz
in
jmp
loop
or
jecxz
in
in
in
in
in
jecxz
in
in
in
loope
in
out
in
in
in
out
in
loop
in
jmp
loop
add
loop
loope
loop
sbb
loop
and
loop
pop
loop
in
out
in
call
loop
jle
loop
inc
call
loop
fsubr
loop
jp
loop
fsub
loop
loopne
loop
mov
loop
mov
in
in
out
in
in
in
in
in
in
in
jecxz
in
jmp
loop
pop
in
in
call
loop
call
jecxz
in
jmp
loop
and
out
in
in
in
out
in
in
in
in
in
loop
in
loope
in
out
in
in
in
in
in
loope
in
call
loop
mov
loop
jle
loop
mov
loop
hlt
in
in
call
loop
xchg
loope
in
loope
in
in
in
out
in
loope
in
jecxz
in
out
in
call
loop
std
out
in
loop
in
loope
in
out
in
in
in
out
in
out
in
loop
in
in
in
jecxz
in
jecxz
in
call
loop
cmp
loop
fnclex
loop
pop
call
loop
mov
loop
in
in
jecxz
in
out
in
out
in
call
loop
push
in
in
out
in
out
in
loope
in
out
in
out
in
out
in
jecxz
in
jecxz
in
out
in
call
loop
push
in
in
call
loop
test
jecxz
in
jmp
loop
mov
loope
in
jmp
loop
in
in
jecxz
in
out
in
out
in
in
in
out
in
in
in
call
loop
add
loop
psubsb
in
out
in
in
in
call
loop
and
in
in
in
in
out
in
jecxz
in
loope
in
in
in
in
in
jecxz
in
in
in
call
loop
outsb
out
in
loope
in
out
in
in
in
loop
in
loope
in
call
loop
test
in
in
call
loop
sub
loop
mov
jecxz
in
in
in
out
in
out
in
out
in
loop
in
loop
in
jecxz
in
in
in
out
in
in
in
loop
in
loop
in
in
in
jecxz
in
out
in
in
in
loop
in
jecxz
in
out
in
call
loop
frstpm(287
loop
and
loop
shl
loop
cs
loop
psrad
in
out
in
call
loop
loop
pop
out
in
jmp
loop
mov
out
in
loope
in
out
in
call
loop
outsl
loope
in
loop
in
out
in
in
in
out
in
out
in
loop
in
loope
in
call
loop
cld
in
in
jmp
loop
loopne
loop
sub
loop
jbe
loop
add
loop
and
loop
in
in
out
in
out
in
jecxz
in
call
loop
jb
loop
out
loop
icebp
out
in
out
in
out
in
loop
in
jecxz
in
out
in
out
in
out
in
out
in
out
in
out
in
in
in
in
in
loope
in
in
in
jecxz
in
loop
in
loope
in
call
loop
and
loop
mov
loop
into
loop
in
call
loop
scas
jecxz
in
out
in
jecxz
in
loop
in
out
in
out
in
in
in
out
in
out
in
loope
in
loope
in
jecxz
in
call
loop
pop
jecxz
in
out
in
jecxz
in
jecxz
in
out
in
jecxz
in
call
loop
psubsw
in
in
in
out
in
call
loop
nop
loop
in
out
in
call
loop
mov
loop
das
loop
in
jecxz
in
in
in
call
loop
sub
loop
loop
fwait
loope
in
loope
in
in
in
loope
in
call
loop
add
loop
cli
out
in
in
in
loop
in
in
in
call
loop
cmpsb
out
in
call
loop
and
loop
adc
loop
fs
in
jmp
loop
movsl
in
in
in
in
out
in
jecxz
in
in
in
jmp
loop
ret
in
in
in
call
loop
push
out
in
call
loop
inc
in
in
loope
in
loope
in
call
loop
test
loop
dec
call
loop
ja
loop
pusha
in
in
loop
in
out
in
loop
in
out
in
loope
in
in
in
loop
in
loop
in
in
in
out
in
in
in
out
in
call
loop
or
loop
inc
in
in
loop
in
out
in
loope
in
out
in
loope
in
out
in
call
loop
sub
loop
xchg
loope
in
loop
in
in
in
jecxz
in
in
in
loope
in
loope
in
jmp
loop
sbb
loop
jecxz,pt
in
in
in
loop
in
in
in
in
in
out
in
jecxz
in
jecxz
in
call
loop
inc
loop
in
in
in
call
loop
mov
loop
mov
loop
sub
jmp
loop
jg
loop
jg
loop
loop
scas
loope
in
loope
in
jecxz
in
loope
in
in
in
in
in
in
in
jmp
loop
mov
loop
add
loop
xor
loop
lret
in
out
in
jecxz
in
call
loop
dec
in
in
call
loop
xchg
out
in
in
in
loop
in
out
in
loope
in
out
in
out
in
in
in
call
loop
call
loop
push
jecxz
in
in
in
jmp
loop
arpl
loop
cwtl
call
loop
add
loop
add
loop
jecxz
in
loop
in
in
in
out
in
in
in
out
in
loop
in
in
in
jecxz
in
out
in
call
loop
sub
in
in
in
in
in
in
loope
in
loope
in
call
loop
xchg
in
in
out
in
out
in
jecxz
in
jmp
loop
push
call
loop
test
in
in
call
loop
js
loop
adc
loop
push
in
in
out
in
call
loop
jge
loop
mov
loop
in
out
in
loop
in
out
in
jecxz
in
loope
in
call
loop
sub
loop
cmp
loop
adc
loop
mov
in
in
call
loop
pop
jecxz
in
out
in
in
in
jecxz
in
out
in
in
in
in
in
in
in
jecxz
in
loope
in
in
in
loope
in
loop
in
loop
in
jecxz
in
call
loop
aaa
out
in
jmp
loop
cli
out
in
call
loop
in
in
in
in
out
in
out
in
out
in
in
in
out
in
call
loop
cmp
loop
imul
in
loope
in
out
in
loop
in
jecxz
in
jecxz
in
jmp
loop
shl
in
in
in
in
in
in
in
out
in
call
loop
shl
loop
ret
out
in
in
in
loope
in
jmp
loop
and
loop
out
in
out
in
in
in
jecxz
in
out
in
call
loop
jno
loop
jns
loop
xchg
jecxz
in
jmp
loop
jmp
loop
and
loop
adc
in
in
in
in
in
in
call
loop
lcall
in
in
in
in
in
in
in
out
in
out
in
jecxz
in
in
in
out
in
out
in
loope
in
loope
in
loope
in
jecxz
in
loop
in
jmp
loop
add
loop
cmp
loop
ret
loop
in
jecxz
in
loope
in
out
in
in
in
call
loop
out
loop
js
loop
clc
loope
in
out
in
loope
in
call
loop
test
loop
dec
in
in
loope
in
out
in
jecxz
in
jecxz
in
call
loop
je
loop
lods
loop
in
out
in
jmp
inc
add
cmp
pop
xchg
sbb
mov
xchg
lods
cld
frstor
pop
dec
in
mov
clc
cmp
sbb
sahf
jno
add
xor
add
add
fisubrl
push
cmp
imul
add
add
xchg
jmp
add
je
xchg
sbb
add
or
clc
repz
cld
mov
xchg
lods
and
add
mov
outsb
pop
clc
in
rorl
clc
cmp
inc
add
stos
cmc
cmp
cmp
adc
clc
sbb
lods
cmp
clc
and
add
ljmp
and
add
sbb
sbb
dec
jns
or
add
sbb
add
jg
lea
clc
adc
repnz
add
add
add
clc
cltd
or
add
dec
mov
add
xabort
add
clc
pop
insl
aad
outsb
jbe
mov
add
clc
enter
xchg
aad
sub
add
mov
cmp
dec
test
popf
fabs
clc
insl
lods
stos
mov
add
add
and
jmp
and
add
add
lret
mull
clc
out
push
add
cwtl
js
mov
push
clc
into
mov
clc
repnz
add
cltd
or
add
mov
jbe
add
jmp
add
xchg
adc
add
cltd
adc
add
pop
xchg
dec
push
clc
stos
xor
add
xor
add
test
xchg
lret
hlt
and
add
into
int3
sbb
mov
jne
scas
and
add
pushf
aam
push
add
lret
out
inc
clc
loope
jo
add
add
shlb
add
scas
roll
cmp
add
add
gs
daa
clc
lret
jp
add
outsb
daa
clc
pop
sub
arpl
add
mov
add
fstps
clc
jo
add
push
or
add
add
loope
cld
in
mov
inc
clc
pop
stos
in
dec
aad
addr16
and
dec
and
add
mov
repnz
add
mov
in
pusha
add
sub
cltd
pop
imul
bnd
lcall
mov
push
jne
add
movsl
clc
jae
add
clc
fdivs
add
shlb
add
add
clc
sbb
call
fwait
xchg
in
and
add
add
and
add
rcr
clc
nop
ficomps
clc
movsb
clc
pop
pop
fsubrp
in
out
dec
pop
outsl
test
ja
sahf
xchg
lret
or
pusha
add
jo
add
mov
push
adc
add
clc
push
add
push
add
sub
cmp
sub
cmpsb
clc
add
add
clc
push
clc
movsb
clc
lock
ret
imul
fadds
add
and
add
ljmp
lock
ret
inc
add
mov
pop
repnz
movsl
clc
bound
add
clc
in
sbb
add
xor
add
cwtl
inc
add
jmp
add
adc
sub
cmp
lods
in
rolb
add
movsl
clc
xor
add
test
or
pusha
add
jp
cmp
xor
add
in
outsb
insl
xchg
hlt
ficoms
add
jge
ffree
clc
outsb
dec
push
add
sub
iret
push
add
cmp
cmp
add
lcall
imul
lret
cmp
testb
js
and
add
sub
jns
rclb
ret
lods
add
add
clc
jnp
and
add
data16
stos
inc
clc
add
in
gs
mov
add
hlt
addr16
xor
add
cwtl
sbb
cwtl
xor
add
add
js
add
cmp
mov
pop
pop
clc
fistpl
outsb
sub
push
cmp
das
xbegin
add
mov
dec
cli
fldt
clc
sti
xchg
in
inc
add
aas
cwtl
mov
add
xchg
xchg
pop
or
add
add
add
mov
add
outsb
jno
add
add
adc
add
add
push
fcoml
add
push
xchg
fucomp
xchg
out
fmull
sbb
ds
loopne
lcall
add
xor
add
gs
xchg
sbb
sar
or
add
add
imul
xchg
cmp
clc
call
clc
or
cmp
pop
sar
clc
pop
mov
xchg
lcall
and
add
std
ret
clc
mov
scas
aas
cld
js
pop
mov
mov
stos
hlt
pusha
add
xlat
jb
add
mov
mov
cmp
add
aas
adc
add
das
in
dec
lods
cmp
jecxz
movsl
clc
jg
or
imul
call
push
aad
add
fdivp
sbb
clc
fdivs
mov
clc
adc
add
xchg
adc
add
clc
clc
fsub
clc
stc
out
sub
xchg
push
fists
add
sbb
cmp
xor
add
add
jl
add
push
clc
loope
out
in
mov
add
push
jae
add
es
xchg
fwait
xchg
in
xbegin
add
rep
xor
add
int3
sar
cmc
imul
cmp
std
inc
add
pop
adc
add
xchg
mov
clc
mov
cltd
jg
add
mov
add
push
bound
add
sar
clc
pop
aas
sar
pop
out
cli
test
push
clc
cmp
add
pop
xchg
add
add
add
cmp
add
cmp
or
add
push
push
fcmovb
clc
adc
add
clc
sar
clc
or
data16
or
clc
lock
add
add
outsl
jecxz
ds
fiaddl
push
enter
sub
clc
jnp
add
and
add
fcompl
sub
clc
push
add
outsl
add
add
and
add
fcompl
add
add
mov
dec
adc
add
clc
mov
clc
lock
in
mov
add
ds
or
dec
call
inc
add
in
cmpsl
clc
ds
jl
clc
clc
cmpsl
clc
push
scas
outsb
jae
add
add
xor
fstl
fidivrs
xchg
in
jmp
add
add
pop
inc
add
dec
repnz
mov
dec
pushf
cmc
sar
cmc
in
cmp
clc
shr
lcall
mov
repz
movsl
clc
cli
in
js
inc
clc
pop
cmp
add
xchg
mov
movsl
clc
dec
adc
add
clc
repnz
je
outsb
add
add
rorl
jl
add
xor
mov
add
vmovhps
jg
mov
pop
clc
cmp
in
hlt
lock
jne
sbb
cmp
cmp
out
pusha
add
pop
dec
sbb
sar
inc
clc
and
add
dec
adc
add
mov
add
add
add
mov
pop
xchg
fcoms
add
push
mov
clc
and
add
clc
ss
cltd
add
add
pop
clc
cmp
clc
incb
loope
popa
add
push
xchg
mov
mov
clc
jl
popf
out
xchg
mov
dec
fcmovu
imul
leave
int
repnz
pop
sub
add
scas
xchg
mov
mov
push
clc
push
jp
xchg
add
add
jge
enter
clc
enter
add
jnp
sub
test
dec
loop
sbb
mov
add
jg
outsl
rcrb
add
add
cmc
mov
clc
cmp
out
stc
lret
jecxz
sub
sbb
add
lahf
sub
ret
inc
add
sub
fistl
ljmp
sbb
pop
cli
xor
lcall
cmp
clc
in
pop
mov
add
pop
jae
add
add
mov
pop
pop
and
inc
add
pop
clc
push
add
ret
clc
dec
and
add
shr
idivl
xchg
xabort
fists
add
pop
cmp
test
in
lea
clc
and
add
add
mov
clc
inc
clc
fidivrs
and
add
jg
sub
adc
add
or
clc
push
add
stc
arpl
add
pusha
add
inc
add
out
es
jb
add
insl
add
add
test
sub
add
cmp
mov
sbb
add
nop
mov
jb
add
mov
clc
cmp
add
loopne
inc
add
sbb
cmp
das
dec
clc
xchg
push
add
push
divps
clc
inc
clc
dec
data16
lcall
mov
insl
pop
cmpsb
clc
or
inc
add
adc
add
clc
out
imul
sbb
clc
into
mov
mov
pop
push
je
clc
sub
dec
pushf
clc
test
enter
clc
lahf
mov
clc
movsl
clc
adc
add
clc
xor
add
add
ss
test
int
mov
add
cmp
clc
cli
inc
add
lea
dec
out
fidivrl
clc
push
clc
mov
push
add
inc
clc
cmp
fcomps
sar
add
xchg
dec
aad
fsubrl
outsb
mov
insl
pusha
add
mov
push
fnsave
clc
adc
add
push
add
aam
das
ret
scas
add
enter
cmp
mov
shll
mov
aaa
cmp
clc
insl
cld
pop
clc
push
add
test
cli
lret
icebp
pop
sub
dec
popa
add
jecxz
lea
loopne
jbe
lods
ds
push
clc
push
jb
add
out
push
add
sbb
add
inc
clc
sub
sarb
add
aad
scas
or
add
repnz
rcll
add
rorb
lods
push
sarb
lret
fimuls
inc
add
nop
jns
clc
or
xor
add
add
lret
dec
xor
add
addr16
cmp
clc
jnp
clc
cwtl
adc
add
jecxz
mov
clc
jbe
clc
push
icebp
mull
add
clc
in
xbegin
mov
addr16
push
sbb
add
sub
lahf
daa
clc
adc
add
cwtl
pop
imul
imul
clc
xor
add
clc
js
add
xor
add
je
add
add
add
enter
leave
test
add
out
ficomps
add
jbe
clc
mov
daa
clc
loopne
sbb
nop
sbb
xchg
divl
imul
mulb
add
clc
daa
clc
sbb
and
add
xor
clc
push
clc
out
pushl
dec
stc
inc
add
jmp
add
cltd
mov
and
add
add
mov
add
adc
add
fisttps
xor
add
dec
mov
clc
add
add
std
in
je
testl
ret
clc
cmp
dec
pusha
add
pop
push
lock
add
clc
dec
sub
add
pop
clc
pop
popf
sub
clc
faddl
jb
add
add
or
lret
clc
or
add
nop
xchg
mov
aas
scas
lcall
mov
add
jns
idivl
std
inc
add
mov
jne
add
in
xchg
pop
and
bound
add
out
and
dec
mov
cmp
cwtl
aas
rclb
lret
mov
shll
mulb
add
add
add
add
cmp
mov
add
or
into
cmp
inc
clc
sbb
addr16
push
xchg
cmp
sbb
push
insl
in
cmp
pop
cs
lods
add
add
aad
out
push
xchg
pop
jg
and
add
add
rcl
add
add
mov
fs
imul
mov
dec
lods
xabort
movsl
clc
push
ljmp
clc
dec
cmp
clc
xchg
pop
js
clc
inc
clc
mov
stos
sbb
inc
clc
xor
add
in
aaa
inc
add
cmp
cmp
clc
std
push
add
aam
sub
out
je
lock
clc
and
imul
jl
sbb
dec
jbe
clc
cmpsl
clc
mov
xchg
adc
add
add
clc
cmp
cmp
add
icebp
mov
iret
push
clc
jnp
add
cmp
add
sub
add
jae
add
add
fsubl
in
sbb
sar
xchg
mov
test
xor
add
add
inc
clc
sar
out
cmp
add
sbb
sbb
add
loope,pt
dec
mov
ljmp
add
int
pop
inc
add
mov
clc
fcmovnbe
jecxz
dec
or
pop
out
out
xchg
pop
or
add
cs
or
repnz
cld
adc
dec
push
add
pop
mov
cmp
push
inc
clc
fdivl
sub
clc
push
repnz
clc
dec
pop
leave
mov
clc
xlat
loop
push
clc
jecxz
or
clc
inc
add
sti
fadds
add
clc
lcall
add
add
and
insl
bound
add
dec
mov
or
clc
in
shrl
clc
cmp
xabort
nop
cmp
mov
loopne
test
jl
clc
mov
jne
push
jmp
out
loop,pt
push
cmp
clc
cmp
sub
clc
lret
rcrb
out
sub
int3
dec
xor
add
sub
add
sarl
sub
inc
add
dec
test
cmp
out
dec
repnz
and
add
mov
mov
ss
and
in
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
mov
push
lret
call
bound
add
add
mov
mov
sub
add
mov
adc
lea
out
sar
clc
push
scas
lea
add
xor
mov
clc
addr16
xchg
jno
add
push
loope
repnz
cmp
mov
out
data16
nop
cmpsl
clc
xor
add
imul
cld
test
sub
nop
sbb
add
cmp
ss
mov
std
jb
add
lods
sbb
out
pop
pushf
jo
add
cmp
add
stos
add
add
jb
add
pop
pop
mov
add
out
sub
xchg
in
xchg
or
cmp
clc
or
pop
lret
xchg
push
ja
add
cmp
add
out
or
out
clc
test
clc
push
add
mov
cli
stos
insl
bound
add
mov
push
inc
add
aas
outsb
into
jmp
add
add
mov
adc
addr16
call
test
pop
inc
clc
in
dec
sar
or
jne
lock
add
clc
iret
sti
jmp
push
clc
dec
mov
inc
clc
pop
leave
loop
std
pop
aaa
jnp
clc
and
add
in
sbb
sbb
clc
pusha
add
fcoml
add
add
shl
clc
pop
xor
add
xchg
inc
add
mov
add
clc
sbb
and
add
pop
pushf
mov
aad
pop
outsl
inc
clc
push
adc
clc
xor
add
cltd
jle
add
mov
clc
pop
adc
add
clc
push
clc
mov
clc
loopne
mov
dec
or
xor
cmc
jl
add
add
clc
lea
add
clc
outsb
jne
push
add
add
add
push
push
bound
add
outsb
mov
add
inc
clc
data16
inc
add
adc
bound
add
push
or
clc
mov
test
cmp
mov
xor
add
cmp
out
js
dec
into
xor
add
fcoms
mov
cltd
xchg
fadds
add
sahf
xchg
sbb
aaa
stos
jg
inc
add
popa
add
aaa
push
fs
pop
call
aas
in
xchg
sbb
clc
cli
pop
je
or
inc
clc
fs
pop
enter
dec
jecxz
popa
add
setb
add
clc
test
clc
pop
gs
sub
mov
sbb
inc
add
sbb
jecxz
jmp
adc
add
clc
and
cltd
or
cmpsb
clc
out
push
enter
push
sti
movsb
clc
test
cmp
add
outsl
xor
add
ljmp
fwait
mov
hlt
pop
or
clc
jmp
add
clc
clc
dec
test
sti
mov
cmp
add
or
mov
jns
add
cmp
jp
xchg
cmp
add
aas
cs
pop
test
clc
shlb
add
ds
add
sbb
ror
pop
testl
fnstsw
jne
add
movsl
clc
stos
repnz
nop
cmp
add
mov
mov
mov
pop
test
add
mov
add
clc
dec
xchg
mov
in
cmpsl
clc
mov
push
add
xchg
and
add
hlt
adc
add
out
fisubrl
push
add
mov
jg
inc
add
dec
mov
mov
ss
jnp
push
jno
add
popl
add
clc
sar
repz
adc
add
clc
outsl
ljmp
add
add
add
fs
xchg
sar
clc
ficoml
add
clc
push
xor
add
push
add
rcll
add
leave
sti
sub
add
add
add
fbstp
jp
jge
imul
jle
clc
push
push
add
clc
dec
hlt
dec
test
cld
jl
cmc
fwait
push
in
cmpsb
clc
or
add
add
add
enter
clc
xchg
fstpt
stos
daa
clc
mov
clc
adc
add
push
add
add
push
sbb
add
data16
sub
mov
or
clc
xor
add
clc
push
inc
add
fwait
repz
add
stc
clc
xor
clc
add
add
loopne
xor
add
imull
nop
aad
jae
add
or
call
test
lahf
sbb
add
clc
or
inc
clc
pop
sbb
jns
dec
inc
add
sub
clc
lods
jae
add
mov
add
ja
clc
in
das
lret
repz
clc
mov
add
mov
hlt
xchg
cmpsb
clc
mov
lock
stos
pop
fildl
xchg
xchg
clc
scas
ficoml
jbe
movsb
clc
inc
clc
xabort
pop
jle
clc
adc
add
lock
fsub
clc
jne
add
push
arpl
add
ficomps
ss
add
scas
nop
mov
add
clc
pop
clc
out
jg
clc
stos
clc
mov
xchg
adc
clc
scas
iret
mov
mov
add
test
jb
add
xchg
cmp
jnp
clc
sar
jle
clc
mov
push
cmpsb
clc
cld
jle
cs
xabort
mov
push
int3
mov
add
clc
cmc
sub
movsb
clc
mov
add
add
clc
mov
cmc
cmp
add
add
fisubrs
lock
or
clc
in
inc
add
fcompl
jno
add
aaa
dec
lret
pop
mov
clc
test
clc
adc
add
add
pop
sub
aad
clc
lods
imul
add
xor
ds
sub
out
cltd
mov
into
and
iret
faddl
clc
cwtl
jle
mov
lahf
es
mov
dec
hlt
xor
mov
sbb
clc
or
movsb
clc
sub
clc
mov
ljmp
sub
add
clc
pop
xor
add
arpl
add
jg
add
cmp
add
cld
scas
xor
cmp
je
sub
daa
clc
pop
das
dec
sbb
sub
mov
jb
add
clc
repz
mov
pushf
mov
clc
jge
mov
add
leave
sahf
pop
clc
dec
push
cmp
add
add
or
or
loopne
popa
add
or
add
jb,pn
add
clc
fstps
add
mov
mov
scas
repnz
clc
in
mov
dec
cmp
loope
cmpsb
clc
xchg
ret
clc
and
mov
clc
or
xchg
aaa
cmc
ja
add
das
inc
clc
adc
add
jle
add
sub
pop
clc
dec
cmp
jno
add
jle
out
pop
pop
mul
clc
cmp
clc
fldt
xor
xchg
mov
clc
push
scas
cmp
sub
cmp
clc
mov
pop
clc
movsl
clc
push
sub
lock
lods
push
inc
add
push
add
cltd
fld1
addr16
sub
scas
ja
clc
movsb
clc
or
roll
add
fiaddl
stos
outsb
shlb
add
add
xchg
test
add
repz
jns
jnp
xor
add
insl
fwait
dec
push
or
in
xchg
mov
clc
push
jmp
pop
push
jg
clc
loope
std
inc
clc
mov
in
jg
sbb
clc
scas
shlb
popf
scas
addr16
push
iret
mov
add
push
ja
cmp
ds
pop
test
mov
or
fld
clc
out
aaa
jbe
bound
add
fsubs
cmpsl
clc
pop
int3
sbb
inc
add
js,pt
add
pop
mov
add
cmpsl
clc
sub
mov
das
cwtl
repnz
add
mov
fistpll
out
lods
xchg
fucomi
sti
cmpsl
clc
pushf
repnz
add
fs
dec
mov
cmp
pushf
sub
stc
push
rorl
add
mov
mov
clc
cmp
outsl
mov
push
add
jbe
mov
add
xchg
sub
pusha
add
mov
sub
add
cmp
add
mulb
clc
pop
pop
jb
add
xor
add
add
jnp
nop
in
or
add
movsb
clc
fcomi
sbb
xbegin
mov
add
and
add
add
add
cmp
sar
mov
add
int3
xchg
sar
jp
in
clc
es
xbegin
mov
int
mov
inc
add
sbb
ds
push
add
xchg
sar
clc
fs
cmp
add
add
clc
cmp
clc
jb
add
dec
cs
clc
sub
fcoms
add
mov
add
cmpsl
clc
fisttpl
imul
repz
mov
pop
jbe
jae
add
add
push
add
adc
add
add
and
add
cltd
clc
and
dec
push
and
add
add
sbb
push
clc
in
test
clc
ljmp
clc
xor
mov
fildll
sbb
add
add
icebp
xchg
nop
ret
clc
fidivl
mov
sub
mov
clc
mov
clc
cmp
add
fucomp
cmp
or
popf
out
sub
mov
sub
clc
clc
push
cmp
add
rorb
and
add
lret
cmovae
add
dec
popa
add
add
add
dec
inc
clc
lods
inc
clc
fists
push
add
pop
xor
add
cmp
pop
in
and
add
clc
movsl
clc
sbb
push
pop
imul
ds
out
fs
dec
or
adc
add
lods
or
je
jl
mov
add
add
jmp
sbb
jle
push
lret
dec
imul
clc
dec
hlt
fdivs
add
clc
scas
ficoml
clc
xchg
into
pop
jmp
add
and
cwtl
jne
clc
mov
or
add
push
mov
dec
nop
outsl
xor
add
mov
sbb
add
xchg
or
mov
mov
clc
xor
add
clc
loope
add
add
jne
enter
mov
clc
mov
clc
cs
push
add
dec
mov
add
fsubrs
push
test
xchg
inc
clc
sbb
clc
ja
clc
lret
popf
lock
push
jbe
ljmp
clc
push
add
sub
add
and
add
loope
pop
add
add
add
lahf
jl
xchg
mov
sbb
pop
pop
push
clc
jle
jbe
cmp
mov
xchg
adc
add
aaa
add
sub
add
adc
add
add
clc
push
or
add
clc
push
into
add
add
cmp
mov
popf
add
add
xchg
adc
add
mov
cmp
inc
add
clc
outsl
mov
add
xor
clc
scas
fiadds
add
add
jb
add
add
add
add
inc
add
dec
iret
loope
add
add
cld
pop
clc
dec
jge
clc
popf
in
rorl
dec
cmc
daa
clc
data16
xchg
jne
mov
cmp
clc
mov
add
int
insl
xabort
clc
in
out
adc
add
fstpt
dec
imul
add
sub
add
add
add
lea
push
add
out
aas
pop
in
ret
add
and
add
aas
sahf
out
fidivl
pop
clc
clc
dec
sbb
call
or
out
xchg
push
dec
call
clc
cld
ds
dec
add
add
popa
add
vucomiss
or
dec
xlat
lcall
pop
clc
xor
loope
sahf
mov
lods
xor
add
clc
sahf
dec
es
movsl
clc
out
in
mov
dec
popa
add
dec
and
add
icebp
lods
dec
jmp
add
or
add
jle
clc
repnz
add
add
add
sub
mov
add
jae
add
jle
inc
add
popa
add
jbe
icebp
jl
clc
lods
ss
clc
pushf
cmp
push
sar
loope
bound
add
push
or
movsb
clc
mov
mov
stc
fdivs
add
mov
stos
mov
pop
inc
add
and
cmpsb
clc
std
sbb
repz
clc
pop
cmp
icebp
add
add
xabort
ljmp
dec
mov
push
test
sub
add
mov
pop
insb
pushf
pop
inc
add
iret
test
rcl
pop
mov
cmp
xlat
sbb
add
mov
pop
mov
sub
sub
loop
push
clc
push
adc
push
add
mov
aad
clc
sub
movsb
clc
adc
add
add
mov
pop
sub
mov
sahf
cmpsb
clc
add
pop
push
add
lret
fiaddl
jmp
add
test
decl
enter
clc
lea
add
mov
add
add
clc
vrcpps
add
clc
scas
pop
or
clc
jb
add
or
mov
clc
xor
add
mov
jb
add
push
add
icebp
push
clc
sbb
lods
jo
add
push
jp
add
push
clc
pop
clc
xchg
adc
add
xchg
lods
adc
add
add
std
sub
mov
cmp
clc
xlat
shl
sar
add
stos
or
and
add
es
jle
add
cltd
je
clc
jns
clc
mov
cmp
clc
in
xchg
clc
push
jo
add
lea
jb
add
and
add
push
rcrl
cmp
and
aaa
sbb
jecxz
lock
aad
test
clc
popa
add
dec
jp
cmp
xchg
call
add
adc
add
inc
add
in
cmpsb
clc
insl
sub
mov
out
dec
xbegin
inc
add
dec
jae
add
push
add
mov
add
or
clc
sbb
test
je
add
mov
add
out
shll
sahf
repz
clc
daa
clc
xchg
imul
sbb
in
out
push
mov
add
add
clc
and
add
add
add
clc
push
pop
pop
in
std
mov
and
add
add
or
daa
clc
fstpt
lret
mov
push
add
pop
jns
mov
lret
jecxz
push
add
or
mov
gs
add
sub
add
lcall
clc
stc
mov
add
push
jns
fstpt
add
fs
lods
mov
xor
add
nop
xchg
lock
aam
insl
aad
in
fwait
outsb
push
repnz
add
adc
add
adc
add
add
gs
inc
clc
iret
mov
add
clc
movsl
clc
and
clc
or
clc
xchg
loopne
lods
cmp
push
clc
stos
test
jecxz
sar
xlat
jecxz
inc
clc
push
pop
cmpsl
clc
gs
imul
add
add
test
in
or
test
inc
add
adc
add
shlb
stos
mov
sub
clc
shll
add
pop
sbb
sbb
mov
int
clc
lea
enter
push
pop
fwait
aam
push
ss
push
mov
dec
push
add
xor
add
jmp
clc
lea
add
push
push
cli
leave
jo
add
push
add
push
sbb
clc
daa
clc
sbb
clc
xchg
mov
cli
pop
test
add
fistpll
clc
adc
add
add
popf
cmp
clc
or
add
movsl
clc
sub
fistl
jae
add
mov
fbld
add
fidivl
add
and
add
add
or
clc
stc
pop
in
and
add
add
clc
fisttps
clc
push
add
daa
clc
dec
xchg
ss
add
jl
dec
insb
pop
sbb
add
sub
inc
clc
or
nop
insb
sub
sub
clc
push
stos
sub
add
add
call
dec
arpl
add
or
pop
lcall
dec
stos
inc
add
lods
std
adc
add
jge
or
jmp
mov
clc
mov
clc
push
stos
inc
clc
mov
push
clc
cwtl
out
inc
clc
xor
add
ljmp
shlb
push
clc
sub
ljmp
clc
arpl
add
add
push
add
inc
add
jns
xor
add
mov
sar
clc
clc
mov
dec
cmp
add
add
add
add
cli
xchg
push
dec
int
add
add
aad
add
sbb
clc
dec
cwtl
cs
pop
mov
add
clc
lcall
cs
das
mov
cmp
add
xor
add
add
clc
cs
add
mov
add
clc
out
repnz
cmp
jg
out
mov
add
and
add
jo
add
test
clc
sub
add
addr16
inc
add
addr16
jne
aaa
mov
jo
add
cli
fs
jge
aas
push
mov
or
clc
pop
clc
jbe
mov
jg
push
add
fmuls
cmp
pop
cmpsb
clc
fistpl
cwtl
outsl
leave
ds
clc
pop
pop
adc
add
sub
xchg
out
hlt
or
pop
mov
add
out
outsb
sar
clc
push
dec
xor
add
add
imul
mov
ljmp
dec
popa
add
mov
pop
jne
xchg
popa
add
jg
rorb
arpl
add
cmp
adc
add
clc
cmp
clc
jle
mov
and
mov
ja
add
cmp
sbb
clc
push
cmp
clc
xchg
inc
add
inc
add
lock
add
je
xchg
nop
test
imul
cwtl
inc
add
sub
add
fimull
jp
cmp
clc
dec
das
mov
clc
and
add
in
fstpt
sbb
clc
outsb
fidivl
add
imul
test
cli
fildll
lock
cli
mov
and
add
aaa
cmp
add
push
add
jecxz
cmp
dec
stc
or
add
jne
fstl
add
clc
or
dec
xchg
cmp
clc
iret
pop
xor
mov
jecxz
aam
stos
adc
add
mov
xchg
popa
add
xchg
inc
clc
insb
and
add
neg
push
out
and
add
add
lods
sahf
fldt
add
test
arpl
add
lret
cmpsl
clc
scas
or
adc
rcll
add
jecxz
sub
xchg
popa
add
mov
add
mov
std
insb
fucom
clc
dec
leave
or
jle
add
sbb
movsb
clc
cld
xor
add
add
mov
call
push
add
inc
clc
repnz
fmuls
dec
icebp
jg
add
jg
fnstsw
in
mov
add
xchg
or
add
cld
int3
cmpsl
clc
sub
add
pop
imul
fdivrl
jge
xor
fidivl
push
add
icebp
inc
clc
xlat
in
fnstsw
add
jno
add
popf
add
add
add
mov
add
rcll
add
xbegin
inc
add
xchg
xbegin
jl
ret
clc
repnz
ds
shr
dec
inc
clc
scas
dec
mov
movsb
clc
movsl
clc
sar
nop
sbb
xchg
int3
negl
push
and
add
inc
clc
and
push
add
stos
adc
add
ljmp
outsl
or
aas
or
clc
mov
cmp
in
addr16
jge
lret
clc
push
shll
clc
dec
xor
add
add
clc
cmpsl
clc
sbb
jg
jae
add
clc
push
clc
sub
ret
cmpsb
clc
push
clc
test
push
fsubs
sub
ss
add
pop
or
insl
sbb
mov
clc
pop
gs
push
add
enter
clc
fsts
push
test
in
dec
mov
add
aad
lret
jae
add
cwtl
clc
in
scas
fsts
adc
add
pushf
inc
add
xor
add
jo
add
and
add
clc
sar
clc
hlt
daa
clc
pop
sahf
mov
pusha
add
bound
add
clc
mov
fwait
sar
cmp
jle
es
xchg
cmp
dec
ud1
add
pop
push
clc
add
add
out
jge
add
shll
add
fsubl
add
dec
std
mov
testb
dec
mov
sbb
xchg
or
sub
imul
adc
add
or
int
mov
add
and
add
rsm
rcrb
sub
dec
fnstcw
loopne
sar
add
mov
add
pop
arpl
add
mov
pop
gs
incb
push
test
loope
cmp
cli
repnz
outsb
adc
add
dec
outsb
jnp
cmp
add
inc
clc
xchg
pop
clc
enter
frstor
test
iret
jle
sub
lods
ffreep
clc
repnz
add
xchg
cmp
aaa
xabort
sti
mov
clc
sub
fistps
pop
push
push
hlt
push
stc
das
inc
add
rcrb
sbb
lret
ja
clc
sbb
lods
lret
jmp
mov
clc
inc
clc
in
pop
loopne
and
add
xchg
add
add
xor
add
push
add
in
jge
lret
sbb
clc
mov
ljmp
ss
add
js
clc
dec
dec
bound
add
push
fwait
out
mov
clc
out
dec
mov
ret
clc
push
loop
and
add
adc
ficomps
clc
sbb
stos
xchg
jmp
sbb
in
daa
clc
xabort
add
aad
lods
mov
mov
dec
iret
and
sub
clc
jnp
xchg
sbb
mov
mov
and
xor
add
jle
sbb
std
sar
xor
clc
into
scas
test
jp
lret
scas
fstpl
and
je
add
mov
outsb
pop
ret
int3
pushf
test
clc
push
xchg
js
sub
adc
add
aam
clc
mov
add
dec
jne
add
xor
add
adc
std
scas
adc
mov
mov
out
ds
pop
clc
insb
xchg
cmp
mov
testl
add
enter
clc
push
push
cmp
int3
sbb
cltd
aaa
adc
add
clc
frstor
addr16
pop
sar
mov
push
fistpl
jb
add
clc
pop
sub
or
clc
mov
cli
in
cmp
clc
adc
add
popf
and
add
icebp
enter
clc
xor
movsb
clc
push
sbb
hlt
xchg
xbegin
add
and
add
add
clc
pop
loope
dec
add
out
mov
cmp
add
outsl
inc
clc
jle
and
add
clc
and
clc
mov
cmpsl
clc
lea
and
call
enter
jns
mov
mov
sarl
clc
pop
jmp
xchg
xor
add
clc
inc
clc
or
jbe
sbb
push
add
sub
out
sahf
push
jg
add
jbe
fcoml
mov
test
mov
push
cs
clc
xor
add
add
jecxz
cmp
add
mov
add
in
inc
clc
cmp
inc
clc
sub
dec
inc
add
es
in
mov
push
add
call
incb
clc
stos
xchg
dec
scas
out
push
add
repnz
add
inc
clc
jno
add
clc
push
add
cmp
sahf
fsts
add
dec
es
sti
gs
rcr
mov
ror
xchg
clc
jb
add
or
gs
xchg
stos
mov
clc
push
add
std
jae
add
pop
clc
cwtl
sub
lcall
movsb
clc
adc
aam
dec
pop
gs
push
repz
lods
aas
std
pop
fisubrl
xchg
jae
add
clc
not
dec
lcall
clc
cld
adc
jno
add
xchg
insl
sar
lea
jns
vrsqrtps
add
clc
pop
cmp
push
aaa
xchg
push
lods
xor
add
push
int3
xor
add
loopne
loopne
sub
add
test
cmp
inc
add
push
clc
fstps
adc
add
clc
shrb
fsubl
dec
sbb
cwtl
add
fstl
and
int
jmp
cmp
enter
mov
or
mov
mov
sbb
xchg
add
out
gs
movsl
clc
lods
inc
clc
mov
out
mov
sub
xor
add
scas
shll
test
lea
sbb
int
ss
addr16
dec
jnp
push
add
nop
fwait
dec
dec
dec
insb
push
lret
push
clc
pop
pop
rolb
in
cmp
cmp
inc
clc
mov
hlt
insl
add
add
xchg
iret
cmc
cmp
jne
add
dec
or
sub
add
inc
add
arpl
add
loopne
xlat
push
mov
daa
clc
and
add
adc
add
sbb
add
mov
add
add
clc
add
mov
add
clc
lock
lret
pop
movsb
clc
inc
add
imul
clc
outsl
call
sbb
in
ret
clc
sti
enter
insb
inc
add
pop
push
in
rclb
or
add
mov
cmp
xor
add
add
add
inc
clc
cmp
adc
rcl
jne
das
loope
lods
mov
fdiv
mov
sub
dec
mov
add
pop
js
clc
add
add
clc
clc
adc
clc
sub
clc
loopne
cmp
add
insb
add
mov
add
mov
mov
pushf
aam
repz
sar
lods
shl
clc
inc
clc
iret
ror
inc
add
adc
add
clc
lods
sar
jecxz
cmp
aaa
sub
or
add
add
test
je
clc
xor
add
add
clc
das
popf
loope
and
add
clc
xor
add
insl
inc
clc
rorl
das
test
mov
clc
pop
inc
add
mov
test
push
or
jg
out
mov
dec
push
add
out
test
mov
sub
int3
aas
cmp
add
clc
add
cmpsl
clc
and
add
gs
push
add
add
jb
add
add
sub
adc
add
jb
add
add
xchg
fimull
pop
popa
add
add
add
aas
scas
push
imul
stc
sub
or
clc
jb
add
add
lods
xor
jnp
sub
mov
and
add
sbb
add
ficoms
add
fisttpll
jg
aad
and
add
xchg
pushf
aad
gs
sub
aaa
ss
push
cmp
add
mov
add
jl
stc
mov
mov
adc
add
test
add
push
add
mov
ja
jge
cmc
xchg
mov
xchg
and
add
add
mov
clc
jae
add
dec
imul
sar
and
add
clc
ja
sub
loopne
inc
add
fs
xchg
mov
jo
add
jbe
clc
mov
lods
mov
call
inc
clc
aas
jg
jb
add
fcomip
fcmovb
clc
loop
into
sar
inc
add
inc
add
pop
sbb
enter
pop
jno
add
arpl
add
out
es
sbb
movsb
clc
icebp
xor
data16
jne
add
jmp
in
cs
shl
clc
jmp
push
ss
mov
add
sub
adc
add
xor
add
mov
dec
sbb
jge
imul
sti
jg
mov
pop
cmp
clc
inc
add
sub
add
sar
add
imul
lods
in
int
fs
jno
add
add
out
mov
mov
add
mov
mov
add
cmp
add
adc
cmpsb
clc
pop
jecxz
repz
fstl
lret
negb
push
cmp
xchg
mov
add
pop
ds
clc
add
add
add
adc
add
mov
int
add
jno
add
pushf
jge
clc
inc
add
push
add
out
jg
clc
or
add
jno
add
clc
add
add
fs
xor
add
add
aad
je
dec
adc
add
add
mov
xchg
cmp
add
xchg
call
ret
add
lods
jmp
cmpsl
clc
jbe
dec
lret
add
add
aas
fs
gs
sbb
insl
mov
rolb
add
arpl
add
or
lret
mov
lahf
pop
xor
add
add
add
mov
fsub
clc
ja
clc
lock
clc
sub
xor
mov
mov
push
cld
adc
add
push
add
enter
xor
add
add
lods
dec
inc
clc
xor
sbb
lods
push
add
xchg
jge
xor
add
js
add
mov
mov
clc
fists
clc
push
inc
clc
or
aaa
jp
push
into
mov
test
add
mov
mov
pop
sar
pop
cmp
mov
mov
scas
jg
xor
add
inc
clc
or
mov
cli
pop
adc
add
sbb
clc
gs
add
add
shrb
in
fiadds
jecxz
sbb
ret
clc
fs
insb
clc
in
sub
add
je
clc
sti
mov
popa
add
in
mov
popf
dec
xlat
cmp
push
xor
add
cmp
scas
xbegin
dec
outsb
xchg
fisubrs
cmp
inc
add
inc
clc
mov
clc
mov
mov
pop
out
mov
int
add
sar
mov
bound
add
add
add
sub
pop
mov
add
push
in
test
out
hlt
aad
add
loopne
pusha
add
and
add
add
inc
add
and
add
add
aas
xchg
cltd
nop
repz
clc
js
clc
pusha
add
js
fnstcw
lea
hlt
clc
mov
add
jle
mov
add
clc
das
or
repz
jno
add
and
add
fsincos
inc
clc
pushf
ss
sub
dec
push
add
mov
clc
xlat
das
fiaddl
clc
mov
mov
mov
dec
sarl
adc
add
sbb
popf
je
clc
stos
gs
sub
add
into
adc
add
jmp
clc
stc
dec
xbegin
clc
push
add
pushf
fildl
clc
imul
decb
popf
dec
mov
out
xlat
add
add
add
clc
add
add
clc
adc
add
test
pop
mov
push
add
jecxz
dec
xchg
clc
stc
ficomps
adc
add
pop
push
push
push
add
sar
or
clc
aaa
inc
add
in
mov
add
clc
mov
in
movsb
clc
out
popf
int3
fsub
clc
cs
insl
cltd
std
iret
shr
sub
clc
cmp
dec
dec
pop
cli
adc
pop
xchg
fdiv
xchg
inc
clc
cld
mov
push
test
in
mov
clc
int3
into
pop
iret
dec
loope
in
mov
mov
inc
add
outsl
cmp
add
add
sbb
inc
add
iret
sbb
and
add
sbb
clc
dec
loopne
pop
clc
jo
add
add
add
add
mov
lods
movsl
clc
leave
iret
js
clc
mov
std
and
push
dec
dec
xchg
ret
inc
add
inc
add
xor
add
add
mov
scas
aam
loopne
pop
clc
or
cmp
cmp
in
in
cmp
clc
popl
add
mov
xor
add
rcl
jae
add
mov
clc
movsl
clc
lret
jecxz
data16
jmp
pusha
add
or
clc
repz
clc
dec
inc
clc
arpl
add
mov
dec
icebp
out
cmp
clc
mov
pop
xor
add
cmp
nop
ret
lret
add
add
sub
enter
pushf
adc
add
clc
dec
xor
add
dec
das
iret
ficomps
add
mov
or
fs
dec
popf
call
add
push
add
cmpsl
clc
push
mov
xlat
popf
lea
sahf
push
cmp
inc
clc
add
add
add
in
lods
push
add
xor
add
pop
pop
add
add
fdivrp
xchg
pop
dec
xchg
jae
add
fdivrl
add
add
dec
aaa
mov
clc
pop
inc
clc
xchg
jae
add
mov
dec
dec
sarb
clc
pop
jp
cmp
add
jmp
cmp
popf
cli
adc
add
add
jbe
add
xchg
xor
add
clc
mov
clc
fcmovne
fs
pop
leave
sbb
int3
ficomps
jg
mov
mov
lods
sbb
add
out
cmp
inc
clc
lret
fistps
clc
stos
outsl
clc
outsl
xor
add
addr16
cmp
in
dec
sbb
iret
mov
jb
add
sub
add
popa
add
cld
test
test
add
fidivrs
imul
in
rclb
jg
clc
xchg
sub
or
mov
xchg
mov
iret
and
add
popf
cs
clc
imul
jmp
add
add
pop
sub
clc
pop
clc
mov
hlt
push
clc
jne
movsb
clc
popf
cmc
pop
clc
sub
sti
stc
push
push
xor
push
clc
mov
push
xor
add
xchg
lock
out
inc
add
scas
xchg
call
int3
data16
or
add
lea
ds
add
mov
outsb
insb
testl
add
add
mov
mov
dec
sub
sbb
clc
movsl
clc
repz
cli
test
rcl
dec
mov
stos
ja
clc
imul
clc
test
ds
jns
clc
js
add
cmp
sbb
fmulp
pusha
add
and
add
stos
in
jl
clc
clc
leave
jge
add
cmp
add
mov
add
and
dec
cmp
pop
xchg
out
dec
inc
clc
sbb
clc
xchg
inc
clc
xchg
icebp
lahf
mov
popf
ds
ret
mov
clc
cmpsb
clc
lcall
cmp
addr16
fidivs
lock
add
aas
push
cmp
add
dec
imul
adc
add
cmp
xchg
repz
icebp
sbb
mov
aad
add
scas
idivb
iret
in
lods
mov
clc
or
clc
mov
clc
sub
jecxz
mov
add
clc
aas
cmp
sub
jbe
add
push
bound
add
add
mov
jne
lret
mov
add
iret
je
mov
mov
lods
add
add
add
pop
push
add
fisttpll
add
add
jo
add
cmp
dec
outsl
push
lcall
enter
loopne
mov
inc
clc
ja
add
add
sub
xchg
mov
mov
in
jns
sub
xchg
scas
cmp
test
clc
jmp
aam
mov
clc
mov
mov
insb
in
and
add
clc
shll
add
mov
jne
add
out
data16
jnp
bound
add
clc
enter
sbb
mov
add
or
add
add
clc
sub
mov
clc
test
add
stos
clc
daa
clc
sbb
sti
xor
clc
xbegin
aaa
mov
clc
daa
clc
out
adc
adc
add
outsl
in
int
out
push
add
outsl
movsl
clc
sahf
daa
clc
sbb
clc
mov
jmp
pop
clc
shl
xor
ja
clc
mov
add
xchg
jmp
popf
or
fisubrs
popf
xabort
push
add
push
sbb
cmpsb
clc
push
add
outsb
push
mov
xbegin
add
clc
dec
jp
dec
flds
clc
in
jmp
gs
loope
leave
pop
cmp
add
clc
pop
mov
add
jmp
xor
add
in
aas
mov
add
sub
add
dec
loope
and
idivl
clc
jmp
push
add
mov
clc
sar
clc
pop
sub
clc
mov
push
add
and
sbb
add
push
cmp
jp
mov
repnz
push
in
fdiv
pop
imul
dec
int3
cmp
clc
mov
clc
pop
dec
xchg
cmpsb
clc
cmp
add
clc
sti
or
and
add
sbb
cmp
push
clc
cmp
add
xor
add
add
fdiv
or
fistpll
push
and
sar
loope
push
push
fs
xor
add
add
jo
add
lods
mov
popf
out
cmpsb
clc
or
add
jae
add
clc
jae
add
clc
arpl
add
jp
lock
shrb
ffree
clc
add
add
push
jo
add
add
sbb
add
outsl
in
xchg
pop
sub
scas
mov
enter
clc
adc
add
inc
clc
or
pop
imul
add
popf
je
add
mov
jge
mov
add
pop
sbb
stos
clc
mov
add
fldcw
add
add
jae
add
xchg
fsubr
outsb
in
testb
mov
push
add
xor
add
clc
call
rorl
add
add
push
dec
out
ja
clc
pop
fs
jle
add
lret
push
add
out
sbb
clc
lcall
scas
je
dec
fisubl
inc
add
mov
aam
sarb
je
addr16
js,pn
js
test
clc
sub
test
jbe
add
xabort
clc
out
int3
dec
xabort
addr16
adc
add
clc
outsl
dec
inc
clc
pop
dec
and
add
add
loopne
and
add
dec
xchg
inc
clc
int
sar
clc
add
add
clc
sar
add
out
mov
push
rcrb
out
adc
clc
pop
pushf
add
add
xor
test
ror
testl
clc
sub
add
mov
stos
mov
cmp
into
daa
clc
pusha
add
outsl
cli
xbegin
sti
inc
clc
xlat
in
enter
pop
mov
add
add
jb
add
out
inc
add
sar
add
fsub
clc
addr16
fisubl
add
shll
push
cltd
jp
jecxz
es
and
add
aaa
dec
std
jmp
or
cmp
or
mov
mov
clc
inc
clc
cmpsb
clc
dec
xchg
jbe
test
clc
addr16
xchg
jp
in
jo
add
cs
clc
and
add
clc
jmp
cmp
mov
mov
dec
aad
xchg
outsb
fdiv
cmova
push
add
sar
sbb
stos
sti
fwait
mov
add
cmp
mov
add
add
mov
xor
add
xchg
pop
cmp
clc
enter
add
dec
pop
mov
insl
ja
ret
clc
mov
ret
jno
add
add
add
test
and
add
mov
add
inc
add
repz
popf
sahf
shll
add
pop
jg
pop
jae
add
mov
jne
add
insl
mov
cli
sub
pop
ja
xchg
add
add
add
fisubl
jbe
push
push
push
add
xor
lods
xchg
sub
add
lock
aas
fs
xchg
sub
sub
cmp
add
jb
add
add
loope
sbb
xchg
jno
add
add
inc
add
mov
popa
add
loope
sbb
mov
mov
lock
add
pop
push
add
inc
add
mov
push
xor
add
add
adc
add
jecxz
mov
or
int3
ljmp
inc
clc
mov
stc
xor
add
clc
dec
ret
clc
sub
cmp
xchg
cwtl
sbb
add
sub
add
in
aam
cltd
test
inc
add
dec
cli
clc
jno
add
mov
xchg
xor
add
clc
cs
clc
in
ljmp
clc
lea
add
and
jge
arpl
add
cwtl
nop
push
popf
jns
rorb
add
inc
add
dec
pop
insb
push
add
push
add
xchg
adc
add
dec
stos
cmpsb
clc
and
add
clc
mov
jo
add
sbb
sbb
icebp
lret
popf
fadds
add
adc
add
add
adc
add
gs
bound
add
mov
shlb
out
das
gs
pop
sub
add
pop
into
adc
inc
add
xor
add
pop
enter
aad
cltd
notl
xbegin
add
pop
clc
and
add
leave
mov
xchg
sub
add
ss
add
pop
lret
jnp
cmp
clc
fildll
dec
inc
clc
js
pop
push
mov
add
jmp
scas
push
sti
adc
add
add
xchg
pop
xchg
push
add
mov
xchg
sub
aaa
sbb
xchg
mov
add
add
clc
fwait
das
dec
cwtl
sbb
clc
or
xlat
xchg
sub
add
cmp
lea
mov
add
icebp
mov
push
mov
dec
in
cmp
fdivrl
jae
add
lock
outsl
into
repz
mov
leave
jae
add
add
inc
clc
ja
mov
aad
mov
push
add
sar
jno
add
sbb
add
ja
daa
clc
xchg
lea
add
inc
add
sbb
sbb
add
or
insl
sar
sub
dec
aas
rolb
add
mov
add
xchg
mov
pop
push
push
add
shl
clc
sti
mov
clc
insl
xchg
mov
repz
push
gs
push
jns
test
jmp
add
cwtl
mov
add
add
add
lret
clc
pop
scas
cmp
sub
add
inc
clc
cmp
clc
add
add
out
xor
add
in
pop
cmpsl
clc
imul
clc
sar
add
aam
negb
xchg
bound
add
cmp
add
xchg
pushf
push
push
adc
add
add
int3
dec
mov
pop
xor
add
mov
clc
push
cmpsl
clc
insb
inc
clc
sub
mov
xchg
popf
or
int3
int
xchg
xchg
adc
cltd
test
xor
add
clc
pop
jo
add
clc
ret
clc
cmpsb
clc
add
jnp
clc
shll
push
icebp
popa
add
es
loopne
cmp
xchg
pushf
ret
dec
arpl
add
xlat
mov
test
mov
clc
test
dec
insb
adc
add
push
in
dec
arpl
add
sbb
fidivrl
or
test
adc
add
fs
outsb
jnp
in
outsl
jnp
outsl
mov
dec
adc
add
add
adc
add
add
lea
add
add
mov
mov
clc
sub
mov
or
outsl
cs
imul
clc
sub
fstps
notl
add
jnp
clc
adc
iret
jb
add
pop
cmp
das
cmp
push
clc
mov
and
loope
aaa
push
hlt
mov
xbegin
clc
or
clc
dec
jl
clc
lock
roll
add
bound
add
xchg
out
loope
mov
clc
dec
push
jle
je
dec
mov
in
pop
clc
adc
add
pop
or
add
push
fistpl
test
ljmp
dec
push
jg
clc
lods
lahf
pop
xabort
add
in
inc
clc
stc
jle
arpl
add
adc
add
test
add
add
cli
or
add
loop
out
stc
decb
mov
add
mov
clc
cmp
clc
adc
dec
dec
aas
scas
lea
push
add
xchg
sbb
jno
add
mov
add
add
pushf
into
jle
add
std
arpl
add
push
add
xchg
dec
jbe
add
out
shrb
es
xor
add
js
test
std
imul
dec
data16
mov
hlt
pushf
mov
jge
add
clc
fidivs
add
divb
add
or
mov
add
loopne
or
pop
call
lret
xor
sub
add
xbegin
int
in
xor
add
enter
or
loope
lret
cmc
fldl
jecxz
clc
aaa
mov
add
movsl
clc
jne
push
add
cli
and
add
xchg
push
add
shl
clc
in
inc
add
push
push
add
jge
clc
fsubr
xchg
push
inc
clc
xchg
clc
inc
clc
int
xor
pop
add
out
lock
push
clc
clc
nopl
das
cli
mov
dec
pop
pop
adc
add
sar
out
cmp
es
mov
add
jne
imul
add
pop
cltd
cmp
add
arpl
add
clc
mov
lahf
dec
and
add
add
popa
add
xchg
pop
lret
jmp
in
and
add
clc
cmpsl
clc
je
loop
fimuls
clc
std
out
cltd
stc
adc
add
mov
inc
clc
adc
add
jp
jge
leave
popa
add
mov
fisubrl
lock
fdivrl
add
fsubr
cwtl
xchg
movsl
clc
inc
clc
pslld
add
adc
repnz
pop
shlb
add
add
stc
push
add
mov
insl
lret
add
mov
clc
jae
add
add
and
add
out
adc
add
clc
lahf
push
add
xchg
mov
imul
mov
xchg
sbb
clc
rolb
add
scas
push
add
push
or
add
aam
test
clc
pslld
fldl
clc
cli
enter
add
mov
mov
data16
not
adc
add
add
scas
clc
vrcpps
add
clc
ja
clc
in
mov
add
add
popa
add
insb
rcrl
into
int
stc
popa
add
fldenv
add
fidivs
add
movsb
clc
pop
jge
out
clc
popa
add
je
test
cmp
mov
pop
je
rorb
add
pop
jl
clc
inc
add
pop
fmull
pop
test
cmc
jns
jb
add
cmp
clc
rcrb
sar
sahf
push
add
xchg
inc
add
out
mul
clc
pop
pop
das
xor
add
mov
add
data16
mov
add
clc
cmc
push
sbb
mov
adc
add
push
outsl
xor
add
mov
pusha
add
add
mov
shll
cmp
push
ret
clc
sar
adc
add
add
pop
and
add
add
bnd
add
clc
inc
add
arpl
add
clc
aaa
pop
push
add
pop
or
clc
mov
pop
jg
add
add
clc
das
jnp
dec
adc
ljmp
add
inc
add
rcrl
mov
cmp
mov
loop
mov
mov
out
mov
sub
sub
xchg
popa
add
jge
add
sub
jmp
lock
insb
mov
dec
pop
clc
inc
add
cld
stos
pop
mov
dec
sti
aad
dec
leave
mov
add
mov
dec
cmp
pusha
add
jle
or
add
pop
pop
cmp
lret
and
add
clc
sbb
dec
in
xchg
add
add
clc
xlat
iret
sub
inc
clc
fstpl
add
cmc
stc
sbb
xor
add
clc
fwait
cmc
adc
add
clc
jecxz
inc
add
mov
shlb
push
outsl
cmp
xbegin
add
cmpsl
clc
mov
sbb
cmp
clc
fs
out
jns
mov
xchg
fdivs
add
lcall
fisubrs
cmp
add
mov
clc
inc
add
cmp
stc
shr
pushf
xchg
sarl
insl
or
call
addr16
mov
stos
daa
clc
inc
clc
mov
add
dec
cmp
or
add
testb
pop
ret
clc
pushf
int3
jl
add
add
sar
inc
add
push
clc
pushf
mov
inc
clc
loopne
jnp
clc
bound
add
clc
mul
clc
nop
jns
clc
sub
jae
add
stos
pop
cmpsl
clc
lret
clc
fisubrs
push
add
push
add
rolb
pop
push
dec
fcompl
repnz
clc
es
mov
add
scas
mov
pop
clc
ret
add
js
clc
mov
mov
dec
sysret
clc
xabort
add
es
cli
repnz
add
cmpsb
clc
mov
add
sbb
test
imul
adc
add
pop
mov
add
cmp
pop
mov
sbb
xchg
rolb
add
aas
push
add
pop
clc
push
gs
and
add
add
loopne
daa
clc
fiaddl
aaa
add
sub
ja
jae
add
hlt
shrl
test
xor
add
inc
clc
sbb
clc
pop
clc
lock
pushf
sti
xchg
cltd
lock
mov
xor
mulb
add
jo
add
add
add
sbb
add
add
lret
xchg
mov
sbb
into
scas
pusha
add
fdivr
out
mov
add
add
xbegin
pop
sti
cmc
or
fsubs
clc
jnp
clc
iret
and
add
clc
lock
jae
add
pop
stos
add
add
xchg
inc
add
lcall
mov
scas
cmp
xabort
in
jecxz
dec
test
cmp
push
add
inc
add
jnp
push
mov
enter
add
mov
mov
jecxz
jnp
dec
leave
and
add
xchg
push
add
lcall
push
cmp
or
add
add
sub
pushf
cmp
mov
add
pop
jmp
mov
inc
clc
mov
mov
fcmovnb
clc
decb
and
int
clc
stos
sbb
add
repnz
jg
add
divl
add
push
xor
add
gs
dec
jnp
sbb
add
dec
xor
add
xchg
negl
jno
add
add
cmp
lss
ret
int3
outsb
pop
es
xor
add
cmp
add
bound
add
clc
push
sar
add
add
add
rcrb
mov
add
stos
insb
inc
add
lock
dec
scas
sub
out
sahf
pop
dec
data16
out
xor
add
pop
xlat
imul
xor
icebp
cmp
jno
add
add
fbstp
add
shll
cld
test
idivl
js
mov
lret
negb
outsl
iret
shr
addr16
inc
add
out
push
dec
daa
clc
negb
sarb
mov
add
or
clc
jbe
push
stos
dec
cwtl
loope
insl
mov
sub
clc
pop
mov
out
sub
repnz
add
clc
mov
sbb
push
xor
mov
fidivl
add
cmp
clc
lods
pop
jbe
cmp
shr
xor
add
push
clc
sub
add
loope
adc
add
clc
std
call
clc
xchg
xor
add
xchg
test
pusha
add
xchg
jbe
ljmp
leave
push
clc
enter
dec
pop
clc
xchg
dec
lret
ljmp
add
sbb
add
xchg
scas
push
clc
mov
repz
add
addr16
int3
cld
fucom
clc
out
cmp
clc
inc
clc
mov
add
repnz
data16
aad
add
pop
ss
cwtl
pop
popf
test
ds
or
add
jnp
cmp
mov
add
add
dec
fstl
out
push
add
inc
add
mov
clc
mov
pop
xor
add
add
and
fiaddl
add
and
add
clc
sub
movsl
clc
cmp
jb
add
add
cld
adc
add
add
xabort
inc
clc
jp
add
add
sahf
push
xabort
xchg
jle
mov
jb
add
adc
add
and
add
pop
and
add
jle
sti
lcall
sbb
and
add
rolb
or
clc
push
clc
sbb
mov
clc
fldenv
clc
cmp
add
clc
mov
clc
jbe
or
icebp
mov
pop
out
xor
add
xchg
or
repnz
scas
add
add
cmp
add
clc
cli
ret
out
pop
jl
clc
mov
push
add
fdivrs
pop
jbe
pop
clc
mov
and
add
into
and
jmp
cmpsb
clc
add
add
add
add
add
add
in
pop
cmp
add
xchg
sqrtps
add
inc
clc
imul
faddl
lea
add
add
add
stos
push
in
test
xor
add
clc
xor
nop
addr16
pop
mov
add
and
add
cvttps2pi
add
enter
add
mov
clc
mov
loope
das
shlb
or
lods
pop
dec
mov
sub
cmp
testb
jmp
add
add
std
cmp
aam
add
adc
add
and
add
add
or
and
add
mov
xor
add
aaa
sbb
add
lcall
test
and
add
add
xor
add
shlb
clc
add
add
lea
addr16
push
clc
sbb
clc
out
pop
mov
mov
add
rcll
add
clc
fsts
jle
add
ja
push
push
inc
clc
scas
dec
mov
mov
add
dec
mov
clc
negl
xbegin
cmp
imul
clc
arpl
add
clc
into
pop
adc
add
call
mov
mov
stos
enter
outsl
loop
jnp
or
add
add
fistpl
clc
mov
clc
sub
add
add
or
clc
sar
stc
push
dec
iret
enter
cmp
cld
in
aas
xchg
jnp
or
clc
adc
add
gs
cmpsl
clc
and
add
clc
sbb
clc
mov
jmp
clc
mov
xchg
jmp
imul
arpl
add
iret
loop
mov
bound
add
clc
add
add
mov
clc
inc
clc
out
in
mov
push
add
test
clc
pop
out
outsb
inc
clc
sbb
clc
hlt
mov
out
mov
addr16
adc
add
mov
add
add
sar
clc
out
rclb
in
dec
lea
add
roll
add
add
add
clc
outsl
fs
fs
movsl
clc
lock
push
aad
hlt
in
flds
add
js
push
push
nop
cmpsb
clc
pop
jbe
lods
sahf
int
sub
clc
cs
mov
ret
ret
clc
pop
add
add
pop
fdivr
imulb
add
rcrb
mov
add
clc
insl
jmp
jmp
jno
add
sub
clc
testl
mov
fbld
cmp
icebp
sub
outsb
push
push
stos
jb
add
daa
clc
popf
adc
add
add
inc
add
shll
add
clc
lcall
jns
jg
add
add
add
clc
xchg
mov
in
clc
inc
clc
or
push
xor
add
jns
das
inc
clc
push
mov
inc
add
xor
add
adc
add
add
dec
lcall
aaa
loop
dec
out
aam
clc
mov
add
or
add
jmp
cmp
adc
add
cmp
add
clc
sahf
jb
add
rcr
dec
mov
add
add
int
rol
clc
icebp
adc
mov
clc
sbb
pop
sbb
clc
notl
add
adc
add
clc
xchg
xbegin
add
dec
xor
pop
bound
add
xchg
loope
gs
pop
cld
xor
add
add
cmp
int
clc
mov
xor
add
xbegin
and
add
add
jmp
xchg
aaa
sbb
add
xchg
mov
hlt
mov
add
add
bound
add
fldenv
clc
fsubr
pop
or
clc
pop
clc
adc
fwait
push
add
std
test
sarl
mov
insb
adc
add
adc
add
mov
pop
lcall
add
push
dec
xchg
roll
add
je
clc
mov
or
adc
add
clc
cmp
mov
lock
xchg
push
clc
cld
adc
add
sub
push
add
cmp
xchg
lock
add
add
clc
bound
add
add
lcall
ret
clc
push
sub
xlat
and
add
gs
mov
add
xchg
cmp
aam
add
jmp
add
and
add
add
fsubl
adc
add
std
inc
add
js
mov
clc
dec
push
test
xlat
push
pop
mov
add
push
nop
jecxz
loop
jle
stos
ja
lea
dec
jno
add
add
data16
xor
add
add
add
repnz
add
add
insb
sti
lret
sbb
clc
push
sbb
cmp
add
mov
adc
mov
add
add
clc
test
clc
out
xor
add
leave
push
sub
add
mov
mov
jno,pn
add
clc
repnz
adc
mov
pop
fwait
cmp
clc
push
stos
mov
lret
dec
xchg
or
mov
clc
pushf
and
enter
adc
add
xchg
loop
sahf
bound
add
cmp
xchg
addr16
out
inc
clc
outsb
imul
inc
clc
pop
fwait
int3
mov
cmp
or
xor
add
clc
add
cmp
clc
inc
clc
sti
scas
testb
clc
xbegin
clc
je
mov
sbb
adc
add
add
das
xchg
jle
cmp
pop
adc
jo
add
clc
cmp
pop
clc
std
jge
clc
fistpl
ret
add
or
and
add
dec
fdivrs
sub
cmp
add
xchg
icebp
fcmovbe
and
add
repz
add
clc
cltd
sbb
jecxz
mov
in
sbb
popa
add
cmp
clc
cltd
sar
mov
jmp
jae
add
mov
imull
mov
add
stos
in
fisttpll
out
or
insl
xbegin
sbb
clc
jl
ret
clc
lret
and
fcomip
sub
xchg
inc
clc
loope
jmp
add
add
clc
fisubrs
outsl
and
add
clc
imul
mov
in
pop
fsubl
add
clc
pop
repnz
xchg
mov
mov
inc
clc
inc
clc
bound
add
fwait
neg
or
mov
test
xor
clc
out
mov
and
add
filds
add
add
add
mov
mov
pop
int
add
in
sub
sub
add
add
in
stos
or
or
clc
and
add
cmpsb
clc
fsubp
clc
mov
in
ret
clc
lea
add
data16
push
clc
or
push
mov
xchg
pusha
add
test
adc
add
clc
sub
add
mov
or
add
push
cmp
add
mov
clc
adc
add
inc
add
inc
add
xchg
fsubl
mov
es
add
add
cmp
cmpsl
clc
mov
out
cmp
add
ret
clc
cmc
and
add
push
dec
into
data16
xchg
mov
enter
outsb
xchg
xchg
dec
cmpsb
clc
adc
clc
out
jmp
add
call
pushf
ss
mov
mov
lret
js
add
jecxz
sub
mov
xbegin
arpl
add
gs
dec
xor
add
add
add
clc
faddl
add
fisttps
iret
sub
sar
add
add
add
add
daa
clc
push
or
add
add
add
clc
addr16
push
add
push
dec
sub
clc
jg
clc
pop
int
stc
popf
fsubrs
clc
mov
mov
xor
add
imul
clc
xchg
cmp
pushf
mov
push
add
add
pop
mov
ss
mov
add
clc
mov
xor
add
add
mov
add
cmp
in
movsb
clc
sub
clc
add
add
in
xchg
dec
sub
cmp
push
ja
clc
lcall
clc
push
sbb
cwtl
inc
add
push
push
rdmsr
add
pop
int
clc
shrd
enter
push
add
push
add
clc
pop
pushf
in
outsl
daa
clc
push
add
setp
aam
push
dec
and
add
inc
add
stos
aad
add
iret
sar
xchg
lea
pop
out
sbb
clc
sti
sar
je
clc
inc
clc
movsb
clc
insb
insl
jb
add
gs
fisubl
scas
int
jno
add
clc
push
add
push
add
gs
jb
add
add
mov
dec
imul
add
push
pop
clc
mov
add
popf
dec
add
sub
clc
inc
add
fdivrs
jne
dec
ja
enter
dec
loopne
jle
add
lret
dec
xor
add
add
out
ja
add
out
clc
sarb
sbb
dec
push
add
xlat
sahf
mov
clc
inc
clc
mov
test
and
add
clc
call
mov
popa
add
cmp
push
cmp
clc
adc
add
sbb
add
add
add
or
add
add
xchg
jecxz
sub
clc
jle
add
push
jg
clc
xor
add
fiaddl
addr16
and
add
jne
out
data16
ds
pop
clc
add
add
adc
add
stc
pusha
add
in
sub
clc
scas
mov
add
sbb
stos
mov
aaa
add
and
add
add
clc
cs
or
ret
mov
mulb
add
xchg
fisttpll
clc
and
add
and
add
clc
lahf
clc
jbe
jns
je
mov
repnz
adc
add
jl
mov
xor
add
mov
push
add
push
sahf
outsb
mov
clc
rcrl
clc
sub
cmp
clc
popf
in
add
popf
nop
xchg
push
cmp
mov
gs
cmp
sbb
lret
loopne
hlt
xchg
ja
clc
xchg
xchg
and
add
xbegin
test
lcall
xbegin
clc
or
ret
inc
clc
stc
mov
mov
mov
push
dec
jmp
or
add
adc
add
and
add
or
clc
mov
xor
add
jo
add
add
dec
inc
add
xor
add
clc
push
push
rcrl
pop
jl
xchg
call
add
clc
ljmp
pop
dec
mov
or
nop
inc
clc
inc
add
jne
cmp
clc
xchg
ret
clc
or
mov
in
sarl
push
dec
push
add
dec
imul
or
clc
cmp
add
jbe
add
mov
jne
clc
or
clc
push
mov
cmp
clc
sarl
clc
push
jge
add
mov
clc
lock
add
clc
mov
jge
add
sub
clc
adc
add
fsubrs
gs
xor
add
add
add
xor
add
inc
clc
lock
stos
push
add
push
add
xchg
dec
or
add
out
cmpsb
clc
stos
jbe
pop
add
add
add
lret
ret
clc
pop
dec
pop
es
out
popa
add
push
push
jbe
clc
aad
clc
sub
clc
adc
add
stos
aam
add
sbb
add
imul
clc
push
add
mov
clc
adc
add
clc
mov
add
sar
outsl
mov
nop
xchg
cmp
pop
movsb
clc
lret
xor
clc
bound
add
push
mov
clc
sti
flds
add
mov
jnp
clc
sar
inc
clc
lods
fists
fsubr
bound
add
fs
xor
add
out
add
inc
clc
mov
out
xlat
ljmp
inc
add
pop
cmp
clc
dec
push
test
enter
mov
adc
add
out
mov
sub
add
add
es
out
lret
cltd
setp
clc
fwait
sbb
clc
cmp
lcall
xabort
inc
clc
fld
clc
pop
clc
in
imul
icebp
cmpsl
clc
pop
jo
add
int3
dec
sub
gs
aam
ja
add
xchg
xchg
scas
push
add
repnz
add
xchg
or
ss
push
clc
fisttps
inc
clc
mov
clc
pop
clc
arpl
add
clc
push
add
test
lods
lcall
call
xchg
clc
sahf
and
dec
jle
sub
clc
adc
add
add
lods
stc
fiadds
scas
jecxz
xor
add
add
clc
jnp
inc
clc
push
dec
movsl
clc
mov
mov
clc
in
xchg
imull
cmp
clc
push
xor
add
jns
aad
mov
add
cmpsl
clc
sarb
clc
arpl
add
add
adc
add
add
add
cmpsb
clc
inc
add
popf
dec
popa
add
stos
daa
clc
cmp
mov
clc
xor
add
xchg
xchg
insl
jp
push
clc
xchg
dec
cmp
clc
or
fsts
add
push
mov
gs
out
add
xchg
and
cmpsb
clc
jnp
jbe
jo
add
clc
sti
xor
or
add
insl
jle
lret
add
add
add
add
add
arpl
add
add
xchg
test
add
push
add
es
fcomps
add
inc
clc
stos
sub
lcall
jns
add
ja
rclb
test
movsb
clc
mov
xor
add
js
clc
loopne
cmp
add
sub
add
add
add
add
clc
out
fwait
test
jb
add
bound
add
and
push
mov
xchg
push
add
mov
loop
xabort
pop
inc
clc
outsl
loope
scas
pop
out
stc
test
add
test
out
pop
inc
add
inc
clc
add
add
clc
arpl
add
clc
lods
mulb
add
add
push
clc
mov
add
cmp
stos
xor
add
add
stos
jmp
xchg
icebp
lods
xor
pop
sar
pop
cs
mov
jmp
out
xchg
pushf
fidivrs
mov
clc
cltd
and
add
clc
dec
sbb
add
ret
clc
out
sub
add
fsubl
sub
push
add
dec
pop
push
clc
adc
add
add
mov
mov
clc
jle
clc
clc
adc
add
shl
clc
jae
add
jns
jl
add
imul
movsl
clc
ret
clc
cmp
daa
clc
or
sub
cld
adc
or
leave
mov
add
imul
dec
jmp
clc
xchg
mov
lret
out
mov
cmpsl
clc
push
mov
clc
mov
call
add
push
push
fwait
aas
dec
sbb
adc
add
push
add
add
cmp
cmp
add
dec
sub
cmpsb
clc
xlat
xbegin
or
std
sbb
sbb
clc
mov
scas
popf
xor
add
test
or
add
inc
add
mov
add
add
clc
cmp
ljmp
dec
leave
call
out
xor
add
jge
clc
jle
jp
clc
cmp
clc
loope
xchg
cwtl
clc
jg
fbld
clc
dec
fwait
add
fisttps
cmp
sbb
clc
mov
popa
add
jo
add
add
insl
std
push
push
dec
ss
clc
mov
inc
add
hlt
repz
nop
or
clc
lahf
addr16
push
add
je
clc
aaa
inc
clc
mov
mov
mov
scas
in
cld
gs
push
add
jge
cwtl
push
add
test
cmp
movsl
clc
mov
ss
clc
clc
mov
jb
add
lods
mov
clc
in
outsl
inc
clc
push
clc
add
add
clc
out
xchg
cld
inc
clc
pushf
repz
insl
dec
xchg
jne
push
mov
push
cmp
clc
jmp
add
add
mov
clc
jle
test
jne
insl
out
and
add
push
add
aas
xbegin
add
cli
outsl
pusha
add
mov
clc
xchg
shr
inc
clc
add
add
pop
sti
jbe,pn
clc
xchg
out
inc
add
or
and
add
add
fs
cld
push
xchg
add
add
add
aaa
sub
dec
shll
clc
in
or
cmc
xabort
sub
pushf
fcomps
clc
cmpsb
clc
mulb
stos
arpl
add
int
inc
clc
int3
lea
add
add
and
add
clc
pop
icebp
or
xbegin
mov
ljmp
mov
stc
xor
add
clc
cmp
dec
sbb
adc
add
clc
pop
imul
bound
add
cs
inc
add
inc
add
mov
clc
in
jmp
inc
clc
xchg
mov
add
push
clc
das
sar
sbb
add
mov
jecxz
cmp
add
in
pusha
add
xor
add
dec
dec
cmp
pop
cmc
xchg
sarb
clc
movsl
clc
inc
clc
stos
and
cli
je
inc
clc
dec
scas
fidivs
add
push
add
cmp
clc
movsl
clc
xchg
ja
loop
mov
hlt
sbb
push
addr16
loopne
arpl
add
add
add
loopne
inc
clc
or
jge
push
fiadds
xbegin
mull
loope
jns
leave
sbb
add
lahf
clc
clc
or
clc
xor
add
clc
popf
sbb
repnz
add
dec
xor
add
ret
add
stos
std
jl
loopne
push
fildll
inc
clc
inc
clc
cmp
stc
jle
add
popf
xchg
sub
and
dec
dec
mov
mov
dec
insl
dec
repnz
sub
sbb
clc
cli
cli
mov
pop
call
add
jp
pop
sar
mov
clc
test
jle
ja
sar
pop
hlt
stos
frstor
fisubrs
add
pop
xor
add
daa
clc
pop
clc
pop
fwait
cmp
clc
sbb
add
leave
into
jb
add
and
add
and
add
repnz
mov
or
aad
or
clc
jo
add
sub
sub
xor
add
or
cmp
add
rorb
jle
xbegin
and
add
clc
lods
push
pop
das
mov
mov
rorb
add
mov
pop
xlat
jno
add
clc
adc
add
xchg
inc
clc
in
cmp
imul
add
and
jl
add
or
cmp
add
ja
ss
pop
pushf
lea
fisttps
addr16
xbegin
push
add
lock
into
xchg
dec
add
add
outsb
inc
clc
adc
in
ljmp
push
mov
sbb
cmp
add
mov
push
add
mov
dec
xchg
fidivrl
and
add
add
mov
add
dec
adc
add
xchg
jg
repz
jo
add
in
mov
clc
xchg
sahf
xchg
loop
pop
clc
dec
imul
faddl
add
mov
ds
sub
je
add
add
clc
hlt
xchg
xchg
xor
add
mov
je
clc
cmp
clc
leave
fs
scas
imul
call
jb
add
pop
enter
ret
mov
xchg
je
std
mov
clc
jbe
push
add
xor
sar
mov
lahf
arpl
add
js
fldt
cmp
loope
int
push
add
icebp
xor
add
dec
icebp
psubsb
cmp
in
mov
add
popa
add
dec
in
xchg
ficompl
fimull
jge
clc
and
cmp
clc
push
rcrl
idivl
add
push
push
add
push
clc
hlt
cltd
cmpsl
clc
cmpsl
clc
and
add
adc
clc
mov
rorb
inc
add
mov
and
xchg
das
inc
add
sbb
mov
clc
aad
sub
add
movsl
clc
cmp
lods
or
imul
add
mov
das
fidivrl
lock
sahf
out
sar
ja
clc
add
add
cmp
dec
sbb
inc
add
gs
into
cld
std
mov
clc
and
add
mov
cmp
popl
xchg
mov
test
clc
data16
or
insl
nop
frstor
clc
adc
add
aas
call
cmp
add
jae
add
add
clc
push
add
cmp
clc
movsl
clc
pop
mov
xchg
icebp
sti
sti
lea
add
dec
sar
xor
add
gs
jne
add
inc
add
sub
mov
jo
add
push
jmp
add
test
dec
xor
mov
leave
imul
in
outsl
out
cmpsl
clc
dec
int
clc
push
inc
clc
pop
movsb
clc
pop
clc
imul
pop
push
clc
xchg
add
add
or
jns
into
sbb
mov
add
into
clc
push
frstor
add
fmuls
jge
in
xlat
lea
inc
add
dec
inc
clc
push
loop
iret
sub
jp
sahf
pop
jbe
clc
cmp
clc
mov
add
add
cmp
xchg
dec
adc
clc
push
xor
add
mov
out
add
add
clc
push
ljmp
or
pop
dec
fistpll
jge
add
aam
add
push
add
add
add
je
cld
jmp
add
inc
clc
jb
add
adc
fdivl
cmpsl
clc
adc
add
lock
pop
ret
fimuls
icebp
jb
add
add
push
stos
test
fwait
push
add
pushf
mov
clc
das
sub
adc
add
lret
mov
jae
add
movsb
clc
xchg
out
or
mov
ljmp
popa
add
xchg
cmp
stc
inc
add
in
rolb
cltd
pusha
add
push
push
pop
mov
clc
push
add
mov
and
add
adc
push
mov
xor
add
add
adc
add
std
xchg
mov
cmp
arpl
add
add
pusha
add
jg
cld
xor
clc
shl
mov
add
add
adc
scas
jmp
add
stc
pop
adc
add
mov
clc
xbegin
cmpsl
clc
jge
outsb
pop
mov
add
or
sub
add
lcall
push
ret
stos
add
add
add
pop
adc
clc
jle
clc
aas
or
clc
and
add
add
pop
outsl
je
cmp
jecxz
fstp
add
add
mov
push
push
mov
nop
jmp
outsb
push
cmp
cmpsl
clc
int3
push
fmuls
add
inc
add
jp
jmp
dec
int3
xchg
adc
add
add
add
xchg
enter
clc
pushf
hlt
repnz
std
cmp
pop
sahf
sub
push
decb
mov
add
mov
xor
add
add
xchg
xor
or
insl
incl
jge
nop
jmp
fcmovnu
and
add
clc
mov
add
in
adc
jb
add
mov
pop
adc
add
add
insb
sub
data16
push
add
cwtl
push
int3
sub
add
add
stc
fprem
adc
add
ret
clc
sbb
add
dec
loop
sti
add
add
mov
fwait
add
add
and
outsl
sub
add
sar
clc
jno
add
divl
xchg
or
clc
pop
jnp
clc
adc
add
pmaddwd
xbegin
cmpsb
clc
lea
add
insb
cmc
out
inc
clc
stos
data16
cli
mov
aad
add
xchg
xor
add
mov
push
imul
enter
add
clc
pop
sbb
clc
insl
out
adc
add
clc
loop
movsl
clc
hlt
and
add
add
add
clc
mov
lahf
xor
add
add
sbb
loopne
inc
clc
mov
add
jecxz
arpl
add
and
or
add
push
clc
mov
clc
mov
int3
xchg
inc
add
fsts
add
lods
inc
add
imul
and
add
clc
mov
fcmove
or
add
cltd
repz
clc
adc
add
add
cmp
clc
loop
sbb
add
sti
addr16
or
push
add
arpl
add
clc
sbb
mov
add
jmp
fmuls
pop
pop
ljmp
ret
clc
or
adc
add
leave
es
outsl
stos
cmp
add
xchg
cmp
pop
dec
movsb
clc
shll
clc
add
jg
jmp
imul
faddl
add
arpl
add
popa
add
cmp
clc
pusha
add
fidivrl
add
add
add
cmp
jecxz
xor
clc
aas
jb
add
mov
sahf
mov
or
xchg
or
bound
add
sbb
nop
jmp
jg
add
xchg
add
imul
xabort
mov
mov
clc
aas
je
clc
test
loop
xlat
sar
add
add
add
sub
mov
add
cwtl
pop
movsb
clc
adc
add
clc
inc
add
lods
jmp
jmp
in
push
adc
add
add
or
add
dec
push
mul
clc
xbegin
test
cmc
cmp
add
add
clc
xor
add
and
scas
faddl
sbb
pushf
push
jg
movsb
clc
loop
cmp
sar
inc
add
mov
rcrb
repnz
add
mov
push
mov
xchg
ret
cmp
clc
ret
add
add
add
insb
mov
add
mov
pop
and
add
dec
adc
add
clc
lods
loopne
fninit
clc
cmc
inc
clc
lods
out
pop
clc
push
mov
cmp
clc
mov
sar
enter
xor
add
mov
sar
xor
lret
add
mov
inc
clc
ret
clc
clc
mov
adc
clc
sub
sar
clc
or
add
clc
data16
mov
clc
cs
and
inc
add
fcmovnbe
pop
push
xor
push
mov
xchg
ret
pop
add
leave
and
add
push
mov
nop
jmp
xchg
stos
std
fs
jns
std
out
pop
clc
inc
clc
xor
add
loope
fadds
xchg
dec
mov
inc
add
stos
mov
clc
mov
sbb
fmul
cmp
sbb
mov
xchg
ret
jae
xchg
add
add
add
mov
nop
jmp
outsb
pop
rorb
cli
mov
clc
mov
mov
jae
add
int3
cmp
mov
clc
bound
add
pshufw
sar
clc
mov
add
add
pop
mov
add
or
mov
add
pop
pop
mov
in
mov
add
popf
ret
iret
mov
clc
mov
nop
jmp
rcr
shrb
fildl
dec
ds
push
mov
cmp
jne
clc
adc
add
mov
cmpsb
clc
mov
in
cmp
clc
aaa
dec
outsl
sub
add
in
dec
add
add
mov
add
cmp
nop
jmp
pop
fmull
fcmovu
mov
data16
push
gs
inc
clc
xabort
add
stos
mov
cwtl
insl
ja
add
aad
clc
in
loope
fisubl
add
push
mov
nop
jmp
add
cltd
add
jl
clc
lcall
cmp
test
cmp
push
cli
lods
out
push
add
aaa
add
inc
clc
sub
cmp
add
xor
add
clc
out
adc
add
rcrl
add
fisubrs
push
mov
xchg
ret
add
sarl
add
out
loopne
inc
clc
lods
sahf
stos
mov
clc
xor
add
sub
mov
leave
dec
mov
clc
sbb
inc
clc
adc
add
outsl
push
mov
nop
jmp
or
and
mov
into
fisubrs
xlat
push
clc
gs
std
push
jmp
and
pop
jg
jp
push
popf
aad
clc
jns
mov
pop
dec
int
clc
push
push
add
pop
clc
aad
testl
clc
dec
and
add
fyl2xp1
inc
clc
repnz
jbe
daa
clc
add
add
lcall
pop
cmpsl
clc
dec
and
add
int
enter
mov
cmp
add
outsl
mov
jno
add
mov
nop
jmp
xchg
loopne
pop
add
in
or
add
push
mov
xchg
ret
fcmovu
dec
xchg
dec
cmp
cmp
cmpsb
clc
mov
clc
cmp
cmp
add
nop
jmp
arpl
pop
xchg
popf
fs
push
jne
add
jae
outsb
mov
adc
clc
add
add
cmp
jmp
jmp
loopne
imul
mov
push
clc
ret
clc
je
ljmp
add
and
dec
mov
push
mov
xchg
ret
add
add
rcrl
mov
mov
xor
add
enter
inc
add
and
add
out
jbe
add
mul
clc
out
xchg
mov
pop
fs
ret
clc
lret
add
xchg
sarl
add
xor
cli
stos
sahf
xchg
sbb
clc
fildll
add
jbe
sub
mov
pop
push
jp
rolb
push
push
mov
xchg
ret
arpl
add
pop
add
add
add
mov
cmc
insl
push
clc
inc
add
sti
or
add
cltd
add
pusha
add
rclb
sbb
cmp
int
and
pop
inc
add
in
pop
push
hlt
jne
clc
pushl
rclb
add
fisttpl
call
push
pop
or
fldl
mov
add
add
xor
popf
and
add
pop
jno
add
add
add
add
clc
pop
mov
ret
or
hlt
loope
test
add
mov
jno
add
add
lret
nop
jmp
roll
bound
faddl
loopne
clc
iret
or
add
pusha
add
insl
push
add
rcrl
add
sub
jmp
rcrl
xor
add
aam
in
adc
add
nop
jmp
aad
add
aam
pop
inc
clc
mov
jae
add
clc
jg
add
xor
or
sbb
sbb
mov
sub
xor
add
pop
popa
add
jge
adc
icebp
add
add
clc
in
adc
add
add
fcmovu
in
jae
add
jnp
movsb
clc
scas
lods
data16
or
fsubr
add
add
sub
clc
xchg
push
adc
add
push
outsl
jp
adc
add
sti
test
pop
xbegin
aas
sar
mov
or
add
sti
out
and
cltd
jle
clc
push
add
nop
jmp
out
and
add
sarb
add
jecxz
je
jns
dec
aam
cmp
sbb
mov
xchg
rcr
std
je
add
fiadds
add
push
mov
push
nop
jmp
pop
add
arpl
add
push
mov
clc
xor
add
add
add
add
mov
gs
xchg
stos
mov
fistps
inc
add
cmp
dec
jecxz
xor
add
pop
add
clc
mov
push
pop
nop
jmp
arpl
add
add
add
push
clc
xor
pop
rcll
mov
clc
push
sub
mov
fnstenv
mov
inc
add
add
adc
clc
pop
ret
je
nop
jmp
xchg
cmp
clc
mov
add
add
sub
add
nop
jmp
add
add
add
push
add
xor
add
in
rorl
ljmp
push
mov
xchg
ret
jae
add
push
sahf
push
add
rcr
sti
arpl
add
xor
add
mov
jmp
lods
and
or
add
call
es
dec
js
add
out
xlat
push
fstps
clc
shr
xchg
push
push
add
and
add
push
add
adc
add
add
add
jo
add
jbe
clc
out
std
or
or
fcmovnbe
pop
out
call
xlat
or
cmp
sub
nop
jmp
or
pop
jg
lods
cld
sub
mov
sbb
jmp
add
xchg
pop
xor
jecxz
sub
cmp
mov
push
add
dec
and
clc
enter
ret
clc
mov
clc
mov
mov
xor
add
cmp
sbb
inc
add
mov
data16
add
add
mov
inc
clc
xchg
xchg
dec
adc
add
mov
pusha
add
out
aas
dec
test
cld
call
add
fdivrs
mov
add
cmpsb
clc
js
sbb
add
scas
cmp
add
and
add
xor
add
cmp
mov
inc
clc
mov
add
mov
clc
or
add
dec
into
lods
or
or
clc
xchg
jmp
add
add
dec
notb
add
inc
add
inc
add
ret
clc
rorb
xabort
int
dec
inc
clc
jnp
add
add
cmp
adc
add
clc
jmp
add
adc
add
clc
sahf
mov
add
test
cmpsb
clc
jp
add
cwtl
or
add
push
push
push
mov
xchg
ret
rolb
add
add
jle
add
nop
xchg
ss
clc
in
xchg
jle
clc
into
add
adc
clc
mov
mov
imul
add
jbe
mov
bound
add
sub
mov
gs
and
add
add
mov
sbb
push
add
mov
imul
add
xlat
sti
lret
sar
xchg
pop
aas
or
aaa
stc
sbb
rclb
out
inc
add
imul
xbegin
adc
add
ljmp
sub
std
jle
xbegin
leave
sub
add
jae
shll
inc
add
jl
or
sub
xchg
mov
add
jp
clc
dec
xchg
aaa
inc
add
xchg
fists
nop
jmp
jae
and
clc
scas
mov
push
nop
jmp
dec
rcrl
add
push
push
ffree
clc
jl
aam
clc
and
add
clc
mov
popa
add
ljmp
fdivr
or
xchg
xabort
inc
push
mov
xchg
ret
outsb
fmull
adc
add
mov
jle
mov
clc
inc
clc
idivl
add
dec
pop
es
push
test
or
test
faddl
dec
cmpsl
clc
xlat
dec
test
cmp
add
lret
fstpl
add
addr16
int3
bound
add
jnp
xor
add
xchg
bound
add
adc
add
fcmovnb
clc
pop
fcoml
dec
sub
add
jle
je
add
mov
add
insl
xchg
data16
inc
clc
repnz
clc
bound
add
add
mov
clc
cmp
clc
add
add
pop
pop
sbb
add
mov
clc
cli
push
add
xchg
lcall
push
add
lret
fdivl
clc
jge
sub
add
xchg
push
clc
stos
arpl
add
rolb
imul
sub
mov
in
mov
daa
clc
push
lcall
add
mov
cmp
es
cmp
add
sub
jns
lods
cmp
clc
das
ret
clc
clc
test
xchg
movsb
clc
cmp
cmp
fwait
xchg
clc
insb
addr16
or
or
sbb
pop
clc
lret
cmpsb
clc
data16
xabort
lret
sti
sar
adc
add
dec
xchg
and
add
adc
add
clc
adc
add
add
add
ret
clc
cmp
cmp
aaa
call
clc
jecxz
xor
add
clc
jmp
add
mov
adcb
mov
imul
add
stos
dec
movsl
clc
cmp
xchg
stos
lahf
add
cmp
xor
add
insl
cmpsb
clc
mov
aas
cli
fwait
loop
xchg
mov
add
cmp
clc
sbb
add
and
sar
xabort
inc
clc
xchg
imul
mov
shrb
dec
jmp
mov
fbstp
add
icebp
mov
add
and
cwtl
mov
dec
or
push
xlat
sar
clc
mov
outsb
adc
add
int
clc
xabort
add
data16
jmp
add
xchg
dec
outsb
push
add
mov
add
sub
clc
jno
add
clc
mov
add
ret
clc
add
add
xchg
cmpsb
clc
xor
ret
xchg
mov
add
pcmpgtd
pop
sbb
xor
add
clc
jecxz
xchg
xor
add
data16
push
cs
clc
xchg
enter
xchg
xchg
mov
clc
ret
clc
adc
clc
mov
clc
enter
cmc
mov
clc
and
add
mov
cmpsl
clc
sbb
roll
cmp
aam
ja
cmp
in
scas
lods
vmwrite
add
and
add
cmpsb
clc
mov
push
push
mov
xchg
ret
jp
dec
pushf
out
mov
and
add
xor
add
add
enter
stos
mov
mov
clc
mov
add
int
inc
add
sbb
out
out
mov
jecxz
jge
clc
dec
adc
add
ret
outsl
jnp
test
sar
clc
int
clc
aas
daa
clc
xchg
jmp
adc
add
add
daa
clc
mov
xor
add
add
add
add
shlb
add
out
jne
mov
mov
leave
adc
add
clc
or
lahf
dec
lret
clc
add
add
int
xchg
mov
inc
clc
cld
ja
in
xor
add
mov
xchg
ret
add
shlb
clc
in
loopne
mov
dec
dec
int
lea
nop
jmp
add
arpl
pop
data16
aas
pop
xchg
ljmp
adc
fucomip
mov
rep
nop
jmp
fsubrs
cmp
loopne
cmp
mov
bnd
lcall
jo
add
add
out
test
push
push
mov
xchg
ret
jp
andl
stos
add
nop
jmp
pop
loop
fs
xchg
add
add
nop
jmp
fadds
pop
cltd
imul
das
dec
stc
bound
add
push
sub
push
add
test
push
clc
arpl
add
ret
ja
xchg
mov
adc
clc
pop
jmp
jns
clc
stc
imul
rcrb
jns
add
fmul
xbegin
movsl
clc
clc
jp
test
add
loopne
jle
cwtl
xchg
arpl
add
outsl
cmp
fisubl
jecxz
pop
clc
rol
clc
or
mov
nop
jmp
pop
and
jp
cltd
xor
clc
push
cmp
nop
jmp
add
or
add
popf
push
add
xor
add
std
jge
imul
nop
jmp
cltd
add
iret
jge
inc
add
inc
add
fmull
pop
or
add
ficompl
leave
ds
clc
pop
adc
add
pusha
add
mov
pushf
cmp
add
jns
loope
das
and
add
mov
xor
add
clc
mov
add
nop
jmp
and
xchg
addr16
adc
add
shll
jne
lret
dec
mov
pop
ret
clc
imul
add
es
jge
movsb
clc
cmp
add
in
xchg
mov
sarb
mov
jbe
clc
loopne
sti
pop
movsb
clc
sbb
sbb
inc
add
xor
clc
jmp
mov
lock
ret
clc
daa
clc
cmp
jnp
in
mov
push
nop
jmp
fcmovu
add
jae
add
js
mov
in
jae
add
lea
ret
push
add
rcrl
cld
mov
pop
cmp
sbb
clc
aas
fistl
add
add
xchg
mov
mov
mov
add
dec
add
adc
add
dec
and
add
jnp
adc
add
dec
pop
add
sbb
dec
movsb
clc
xchg
sub
clc
sarl
xor
add
add
nop
jmp
loop
imul
pop
out
jecxz
cmp
and
clc
and
add
pop
or
add
push
mov
mov
sub
add
add
add
clc
cmp
push
push
insb
nop
jmp
add
out
sar
push
xchg
fisubs
add
sar
pop
aaa
imul
lahf
cmp
add
push
xchg
nop
js
adc
add
push
bound
add
add
sbb
iret
push
clc
popa
add
out
cwtl
aad
addr16
push
adc
add
add
add
nop
jmp
add
cmp
add
jae
add
clc
out
lahf
lods
mov
clc
xor
add
sar
pop
mov
lret
pop
sbb
clc
lahf
sar
stc
ljmp
lret
jge
scas
ljmp
nop
pop
popf
fs
cmp
jmp
push
repnz
movsb
clc
xchg
push
adc
add
add
ss
sbb
clc
arpl
add
add
add
nop
jmp
add
pop
lahf
push
aaa
or
add
inc
add
popf
cmc
out
ljmp
aam
add
mov
add
rcrb
sub
lret
in
jg
xabort
or
or
sarl
outsl
jl
add
pop
shlb
add
mov
add
into
mov
clc
dec
pusha
add
sbb
cmp
mov
clc
or
clc
enter
sub
mov
das
leave
xchg
fisttps
ljmp
stc
test
add
cmp
add
sar
push
nop
jmp
fcompl
dec
fistpl
add
clc
repnz
test
adc
add
clc
dec
jne
aam
push
nop
jmp
add
fiaddl
imul
cmp
clc
idivb
negb
jecxz
adc
add
cmpsb
clc
sub
cmp
xchg
addr16
push
call
jge
inc
clc
ret
clc
out
and
add
mov
add
popa
add
clc
fmuls
add
das
inc
add
stc
pop
xchg
int
clc
jnp
fldl
ljmp
add
in
enter
xor
nop
jmp
cmp
fcomps
mov
jl
xor
add
inc
clc
cmp
shl
clc
sbb
mov
nop
jmp
fadds
fsubs
add
fs
xchg
pop
lret
pop
push
push
add
pushf
int
ss
or
add
add
fisttps
insb
insb
insb
in
mov
add
dec
xchg
sar
and
add
clc
iret
xchg
sub
add
jns
ret
ffree
clc
cmpsl
clc
fidivrs
push
clc
mov
xbegin
test
popf
sbb
clc
jnp
je
out
data16
xchg
movsb
clc
in
test
into
popa
add
pop
adc
add
add
mov
nop
jmp
imul
lock
add
add
stos
or
clc
pop
cs
cmp
clc
pusha
add
xor
add
lret
clc
mov
xor
add
out
pushf
ficoml
sar
outsl
xlat
test
clc
fistpll
add
in
mov
jno
add
pop
jg
sbb
add
fwait
lods
fdivp
xchg
inc
add
and
insl
imul
mov
clc
dec
jbe
rcll
add
pop
test
movsl
clc
mov
clc
lcall
inc
add
mov
inc
clc
adc
add
dec
test
add
and
cmp
ss
fcoml
add
clc
imulb
leave
inc
add
mov
popf
movsb
clc
xchg
cmp
movsl
clc
filds
add
mov
popf
add
lods
movsb
clc
insl
cmp
fbstp
call
mov
xchg
ret
bound
adc
jle
dec
push
add
nop
jmp
imul
mov
or
test
je
stos
add
add
push
push
nop
jmp
jae
sbb
pushf
or
pop
enter
jnp
clc
lcall
outsl
int3
iret
loopne
fldenv
add
fs
outsl
mov
testl
cltd
mov
clc
mov
add
cmp
add
popa
add
sub
sub
push
mov
xchg
ret
push
add
lock
add
inc
clc
xbegin
sar
clc
sbb
xor
add
or
add
sub
or
lcall
mov
xchg
ret
jae
loop
pop
adc
add
lret
add
xchg
fsubrl
add
cmp
cmp
aad
xabort
lods
inc
clc
dec
aad
clc
lret
sub
inc
add
xabort
xchg
ret
clc
roll
add
ret
clc
jnp
in
leave
into
shrb
add
fwait
jae
add
add
add
add
or
clc
cmp
inc
add
aas
jle
add
stos
xchg
ret
clc
mov
ja
aam
jne
clc
dec
xchg
je
adc
push
add
dec
roll
clc
cwtl
adc
add
aaa
rcrl
out
xchg
mov
mov
push
nop
jmp
add
adc
pop
xchg
je
aad
and
add
std
ret
add
imul
cli
inc
add
sub
clc
insb
inc
add
cwtl
add
add
data16
push
in
stos
push
cmpsb
clc
in
stc
arpl
add
add
arpl
add
sub
fsts
add
dec
pop
pop
jb
add
sbb
mov
nop
jmp
add
loop
or
mov
cmp
frstor
add
arpl
add
clc
popf
mov
sub
sub
clc
and
pop
mov
add
push
mov
add
pop
pop
cmp
jl
push
clc
scas
cmp
push
add
fildl
jp
add
push
push
mov
nop
jmp
arpl
fiaddl
add
movsl
clc
fstl
clc
popf
int
popf
insl
add
add
dec
push
mov
xchg
ret
imul
inc
add
pop
int
clc
xor
add
mov
adc
add
push
xor
add
pop
mov
add
xbegin
xchg
inc
clc
mov
jl
in
sar
xchg
fninit
clc
jbe
lock
jnp
clc
repnz
add
clc
movsl
clc
sbb
add
test
clc
das
sar
sub
add
aaa
imul
jae
add
stos
mov
xor
add
mov
cmpsb
clc
jg
clc
or
inc
add
inc
add
mov
add
add
add
fwait
push
aaa
cmpsl
clc
outsl
and
fs
pusha
add
iret
loope
fs
data16
xor
add
clc
popa
add
inc
clc
or
add
arpl
add
dec
adc
add
inc
add
stc
ret
clc
out
dec
push
mov
xchg
ret
mov
sbb
clc
and
inc
add
cmp
clc
cmp
add
bound
add
push
add
sbb
jmp
decl
and
sti
mov
lcall
xbegin
clc
inc
clc
decl
cmp
xchg
ret
lock
and
fisttpl
out
sub
pop
inc
clc
push
out
cwtl
leave
sbb
cmp
idivl
sub
clc
std
clc
and
add
sbb
psllw
out
mov
add
cmp
stos
push
add
mov
mov
add
stos
clc
jns
clc
and
add
or
xor
clc
mov
mov
cmp
add
subl
push
mov
xchg
ret
add
sar
dec
cltd
into
jnp,pt
dec
and
add
add
repz
loop
add
push
add
nop
jmp
add
add
add
mov
clc
jb
add
add
cmc
mov
pop
push
add
cmp
mov
sar
mov
cmp
ds
iret
outsl
dec
jmp
clc
sbb
ret
clc
sub
clc
mov
push
add
test
dec
repnz
clc
dec
xor
xchg
test
imul
clc
aaa
mov
addl
add
loop
and
add
sub
xlat
mov
clc
data16
push
clc
pusha
add
pop
sub
add
cltd
push
in
gs
popa
add
push
pop
fidivl
add
mov
nop
jmp
out
sbbb
dec
mov
clc
test
sar
cmp
test
dec
pop
sbb
out
bound
add
lret
clc
aas
mov
js
cmp
mov
ret
jae
add
clc
cwtl
aam
into
shrl
xabort
ret
clc
cmp
clc
jg
fdivs
sbb
add
mov
xchg
ret
fcomp
add
gs
jbe
sahf
sahf
clc
fstl
and
add
pop
and
add
out
dec
jb
add
clc
cmp
mov
pop
mov
clc
and
add
clc
sbb
sbb
lret
cmpsl
clc
clc
popf
pop
pop
dec
or
adc
add
es
push
sub
imul
cmp
or
popf
ror
je
clc
loopne
xor
add
fadd
clc
sbb
push
bound
add
clc
mov
aas
stos
mov
pop
push
add
bound
add
xchg
cmp
test
icebp
popa
add
jmp
clc
push
clc
inc
clc
mov
clc
rcrl
pop
cmc
mov
add
bound
add
add
mov
add
ja
pop
jb
add
test
jmp
cmc
ds
add
iret
jge
clc
inc
clc
xchg
imul
add
add
psubusw
dec
adc
mov
jo
add
data16
and
add
add
dec
ljmp
pop
mov
jmp
add
add
push
and
add
cwtl
cmpsl
clc
or
clc
and
add
jae
add
add
fs
iret
icebp
pop
clc
or
test
cmp
clc
inc
clc
leave
mov
clc
sub
add
clc
sub
bound
add
clc
int3
pop
fildll
clc
push
add
testl
nop
jbe
jo
add
fadd
clc
mov
add
es
fwait
sub
push
cmp
jns
hlt
scas
repz
int
fdivs
clc
insb
cltd
mov
add
clc
dec
inc
clc
adc
add
clc
sbb
imul
add
mov
add
push
and
add
add
and
add
pop
dec
jl
clc
data16
into
std
leave
jmp
clc
mov
add
push
mov
push
mov
xchg
ret
mov
add
xchg
pop
fwait
xor
add
clc
repz
out
push
add
mov
add
cld
push
clc
in
clc
test
clc
mov
push
xor
add
sub
pop
out
mov
cmp
clc
fisttpl
data16
fistps
bound
add
add
lahf
lock
add
clc
cmp
loope
aad
int3
cld
data16
addr16
pop
int3
sar
insb
cmpsl
clc
and
clc
repnz
push
jns
add
or
mov
sbb
pop
cmp
adc
xor
add
cmp
cmp
or
add
fimuls
add
shrb
add
jns
clc
xchg
stc
sbb
push
cltd
xchg
jmp
add
pop
lods
xchg
iret
sti
mov
add
data16
dec
mov
sub
clc
js
arpl
add
add
cmp
add
add
test
arpl
add
test
inc
add
xchg
je
add
imul
or
nop
aas
pop
pop
xchg
push
push
lret
clc
cmc
add
push
xbegin
outsb
ss
inc
clc
dec
push
add
cmp
clc
cs
sbb
dec
push
and
add
xor
push
cltd
fwait
lcall
test
aam
stos
xlat
push
aas
mov
cmp
arpl
add
jo
add
add
cmp
test
sahf
dec
pop
cmp
add
lea
push
xor
nop
jmp
faddl
add
add
add
add
out
mov
fxch
cmc
xchg
adc
add
push
ljmp
add
push
mov
xchg
ret
shrb
clc
ds
add
adc
add
add
bound
add
or
fidivrl
clc
insl
sub
pushl
nop
jmp
add
aam
loopne
lahf
push
ljmp
mov
aas
xor
add
dec
cmp
adc
sub
clc
testl
jp
lahf
mov
clc
sbb
and
add
clc
test
add
add
iret
mov
dec
add
pop
add
add
add
dec
cmp
mov
mov
add
loope
lcall
in
std
outsb
inc
clc
sub
cmp
fdivrl
clc
clc
hlt
out
mov
clc
lret
out
daa
clc
stos
sbb
xchg
mov
stos
cmp
add
pushf
gs
mov
mov
jo
add
jne
add
aam
jne
sub
clc
arpl
add
add
clc
ret
loop
xlat
loopne
ret
clc
mov
clc
dec
mov
ss
dec
test
bound
add
adc
add
xchg
scas
pop
sub
push
add
stos
dec
jge
stc
jecxz
push
jb
add
add
push
add
test
sbb
stos
sar
cmp
rorb
add
add
add
mov
add
add
mov
jge
add
adc
out
pop
xchg
dec
and
add
add
pushf
sahf
insb
insb
loopne
popf
adc
add
test
adc
add
lods
gs
mov
hlt
sbb
adc
sar
clc
in
cmp
in
lock
lret
add
repz
add
add
and
add
pop
cmp
hlt
dec
jnp
insl
std
push
push
nop
jmp
sbb
out
adc
add
cwtl
mov
add
mov
dec
add
nop
jmp
mov
pop
std
jno
add
add
lods
push
add
imul
add
add
xor
xchg
out
or
add
mov
cmp
clc
fidivrs
pop
xchg
mov
add
jecxz
loop
sbb
add
jecxz
clc
jb
add
add
xchg
aad
into
or
clc
lea
add
lods
scas
mov
out
add
add
aam
clc
cmp
bound
add
add
adc
cpuid
clc
xor
add
clc
cmpsb
clc
mov
add
outsl
test
icebp
loope
jno
add
imul
xchg
xor
add
add
nop
mov
jle
sbb
sub
out
jae
add
repnz
add
leave
xor
add
xchg
sar
pop
int3
add
add
add
dec
out
testb
jmp
jae
loop
add
out
push
mov
sub
cli
and
add
add
jnp
mov
sarl
je
add
fisttpll
stc
fisttps
out
add
shll
mov
outsl
push
add
sbb
adc
add
push
inc
clc
insb
jno
add
clc
cltd
rclb
add
clc
jnp
push
add
push
add
mov
stc
sbb
add
cmp
fildll
add
dec
jo
add
clc
sub
jmp
or
movsb
clc
scas
or
add
inc
clc
or
add
add
add
jb
add
call
in
into
ret
jnp
mov
add
push
in
sbb
inc
clc
stos
lods
arpl
add
dec
sbb
outsl
aad
into
test
bnd
clc
mov
add
and
add
test
sbb
cmp
cmp
or
clc
insl
xor
add
ja
push
mov
push
inc
add
imul
add
sbb
or
out
xchg
cmc
ss
mov
test
mov
add
add
ds
xor
add
or
fistpl
clc
js
add
scas
jmp
clc
insl
repnz
add
mov
clc
mov
add
std
test
clc
lods
dec
aaa
inc
clc
fidivrs
mov
sbb
mov
add
add
and
clc
test
pop
xchg
gs
push
add
cltd
out
insb
jb
add
clc
mov
je
clc
pop
push
mov
nop
jmp
add
fdivrl
add
add
xchg
xchg
je
mov
es
pusha
add
or
push
dec
bound
add
add
add
sub
clc
adc
cmp
clc
push
lcall
clc
cmp
sub
add
imul
shl
clc
fldl
add
int3
pop
dec
dec
inc
add
inc
add
xchg
xabort
shr
nop
jmp
aam
add
xchg
mov
clc
xchg
lcall
add
or
clc
cmp
add
clc
fs
icebp
mov
add
mov
xlat
push
xor
add
mov
int3
add
add
add
mov
mov
clc
jg
filds
shlb
pop
int
clc
inc
add
push
add
jl
xor
add
add
enter
ret
add
mov
mov
outsb
jge
popa
add
push
add
xchg
xabort
jg
clc
xchg
mov
add
xchg
fmuls
sbb
mov
jp
add
add
clc
clc
insl
and
add
cmp
cmpsb
clc
call
mov
clc
inc
clc
adc
add
aaa
lods
pop
clc
test
push
add
mov
add
xchg
insb
lock
in
mov
test
nopl
ret
push
nop
jmp
rcrb
sbb
add
adc
add
pop
mov
xchg
and
add
xchg
es
xor
add
mov
pop
jl
add
add
add
icebp
xchg
mov
movsb
clc
lret
in
adc
add
scas
stc
lea
clc
inc
add
mov
xor
add
clc
cmp
push
js
add
xchg
fildl
add
add
add
cmp
add
data16
inc
clc
cmp
add
add
clc
es
adc
add
push
mov
push
mov
xchg
ret
add
adc
xchg
xchg
out
mov
add
insb
in
sub
test
cmp
fdivs
add
pop
mov
call
add
add
jo
add
test
mov
insl
mov
mov
jne
cmp
clc
insb
fcom
test
in
leave
push
jmp
cmpsl
adc
add
fs
mov
pop
push
add
into
jecxz
ror
mov
clc
and
add
repz
xor
add
inc
add
dec
jecxz
sub
and
add
add
cmp
push
add
fcomp
add
dec
mov
ljmp
pop
push
mov
xchg
ret
add
faddl
clc
cmp
jno
add
pop
arpl
add
add
inc
add
lock
clc
xchg
adc
add
add
cli
dec
xor
add
add
add
push
mov
jne
add
inc
add
movsb
clc
in
sub
loope
and
add
loope
jp
clc
inc
add
out
sti
popf
movsb
clc
dec
jle
add
nop
jmp
pop
pop
dec
fcoms
add
pop
fisttpl
add
hlt
aam
dec
stc
aam
push
jbe
mov
sar
daa
clc
mov
clc
adc
add
clc
es
sbb
cmc
scas
xor
add
add
sub
aaa
cli
inc
clc
cld
icebp
jg
add
inc
clc
mov
add
add
clc
pop
or
mov
sub
clc
mov
add
mov
adc
adc
nop
jmp
and
sbb
add
clc
or
mov
test
add
add
add
stc
pop
clc
popa
add
sar
aad
lods
cmp
push
add
loopne
adc
add
cmp
outsl
dec
loop
pushl
push
mov
xchg
ret
and
pop
push
push
mov
sbb
add
add
subl
push
pop
jns
call
cmp
push
nop
jmp
sbb
outsb
xchg
xor
add
xchg
push
clc
cmp
cmc
sbb
or
and
add
out
test
arpl
add
inc
clc
in
sub
add
and
add
sub
add
add
pushf
add
mov
push
nop
jmp
imul
add
clc
or
mov
add
mov
cmp
das
aaa
out
adc
add
xor
xchg
ret
out
loop
stos
inc
add
mov
clc
cld
pushf
scas
or
add
fsubrs
push
clc
mov
call
sar
sub
sti
stos
push
clc
sub
add
clc
out
iret
ljmp
dec
push
clc
xchg
inc
add
jecxz
test
out
jb
add
clc
divb
cmp
push
add
sbb
dec
lock
xor
add
xchg
or
add
or
clc
add
mov
es
adc
add
repz
ss
enter
clc
cmp
add
mov
inc
nop
jmp
jae
add
test
fistl
jmp
mov
addl
cld
sar
arpl
add
movsl
clc
test
pop
xabort
popl
add
in
scas
add
add
push
dec
ficomps
add
inc
clc
cli
decl
pop
add
mov
aad
fs
jmp
add
ret
clc
call
add
clc
pop
fldl
mov
jnp
jns
insl
test
and
and
xor
add
das
add
add
jmp
sbb
and
clc
xor
add
icebp
repz
xchg
or
imul
sti
inc
clc
or
clc
cmp
add
or
cmpsl
clc
fstl
add
call
pop
lret
pop
mov
add
add
add
pop
push
clc
aam
enter
add
and
add
inc
clc
adc
add
jnp
and
add
add
add
iret
cs
rclb
add
sbb
adc
add
add
add
lret
add
ja
popa
add
lcall
clc
cmp
add
add
aas
in
movsl
clc
adc
add
cmpsl
clc
in
xabort
push
je
nop
jmp
add
mov
sbb
lods
nop
jmp
xchg
fisttpl
out
rcrb
lcall
clc
cmp
adc
add
clc
sbb
clc
or
add
sub
out
pushf
push
clc
sbb
inc
clc
and
add
leave
out
ja
stos
or
clc
dec
shlb
add
inc
clc
or
movsb
clc
cltd
mov
jae
add
loop
add
add
hlt
add
add
clc
outsb
jno
add
mov
inc
clc
mov
sbb
cmp
add
jo
add
inc
clc
sbb
mov
test
insb
mov
ret
clc
mov
add
cmp
arpl
xor
add
clc
sub
cmp
clc
shll
jns
in
and
add
add
jne
mov
add
lret
add
or
add
or
clc
movsl
clc
push
aad
add
push
add
fs
adc
add
lcall
inc
clc
sub
mov
scas
mov
pop
inc
clc
xchg
xchg
add
add
jmp
loopne
rcrb
sbb
clc
sub
or
add
nop
jmp
fisubl
fdivrs
add
and
add
or
xchg
aam
lea
push
add
clc
push
mov
push
mov
xchg
ret
xchg
psllq
add
pop
cmpsb
clc
xor
add
or
out
repnz
in
imul
adc
add
mov
add
add
dec
add
push
add
xor
add
adc
add
cmp
cmp
pop
lret
add
nop
jmp
xchg
pop
stos
inc
clc
add
add
xchg
shlb
add
add
aad
add
or
add
imul
cs
clc
push
add
and
add
int3
imul
iret
int
xor
add
rcl
hlt
in
aam
clc
mov
inc
add
or
add
out
add
add
add
push
std
xchg
jg
clc
out
loopne
or
mov
cmp
clc
or
clc
pop
enter
loope
add
add
icebp
clc
push
clc
test
gs
fcom
jle
sub
clc
cmp
or
clc
xchg
push
add
push
add
cmpsb
clc
sbb
inc
and
jmp
mov
aad
loop
jmp
cmp
add
clc
mov
inc
clc
out
fucomip
pop
out
cmp
loope
fdivrp
daa
clc
cmp
ljmp
add
fistpl
ret
clc
fistpl
clc
push
sbb
or
push
mov
xchg
ret
add
xchg
aam
je
in
loop
xchg
push
jmp
pop
xchg
pushf
imul
jno
add
add
cmp
clc
ficompl
add
nop
jmp
arpl
jp
mov
cmp
jo
add
inc
clc
mov
scas
xlat
dec
lret
jle
push
add
loop
pop
mov
mov
cmp
add
jno
add
add
dec
icebp
cmp
sar
pop
pop
clc
fsubl
clc
pop
stc
sub
aas
or
pop
xor
add
add
mov
daa
clc
repnz
add
add
stc
enter
xchg
and
outsl
xlat
rclb
je
push
inc
add
add
nop
cmp
mov
cwtl
scas
movsb
clc
ja
pop
mov
add
jecxz
test
or
in
addr16
icebp
mov
and
add
add
add
out
int3
inc
clc
jle
cwtl
das
test
push
mov
xchg
ret
mov
fsubrp
mov
lods
repnz
clc
cmpsl
clc
xchg
daa
clc
addr16
lret
add
and
add
ret
movsb
clc
in
cmc
mov
mov
push
mov
xchg
ret
dec
sub
ss
pop
xchg
clc
loopne
mov
add
add
mov
add
add
fsub
clc
xlat
cmp
inc
clc
mov
sub
push
inc
clc
adc
aam
aad
cld
call
fyl2xp1
int
lahf
nop
xchg
test
add
aad
into
dec
leave
fmuls
clc
int
sbb
jmp
add
mov
add
ficompl
mov
mov
fcmovu
inc
clc
push
filds
xchg
ret
outsb
loop
jp
clc
pop
jb
add
jno
add
jle
cld
ss
pop
ljmp
pushl
pop
aam
xlat
inc
clc
jne
push
lods
aam
decl
out
dec
adc
jp
fcoml
clc
push
add
inc
add
jecxz
mov
clc
hlt
popf
sahf
movsb
clc
cmp
in
es
test
fisubl
clc
push
add
mov
jmp
mov
cmp
mov
add
add
add
clc
dec
add
add
mov
add
shll
sub
dec
arpl
add
dec
dec
and
add
clc
and
call
out
dec
mov
and
add
add
add
dec
mov
clc
jle
clc
mov
imul
clc
mov
sbb
xor
add
clc
add
add
sti
rclb
add
pop
clc
rorb
add
xchg
or
push
cltd
mov
add
push
add
add
inc
clc
or
xchg
fsubl
mov
add
pop
mov
lret
add
add
mov
imul
lret
repz
clc
add
adc
add
jae
outsb
pop
test
ret
clc
xor
jb
add
add
ds
or
clc
int3
xbegin
prefetchw
jns
xchg
dec
or
jae
add
mov
dec
cmpsb
clc
or
add
add
clc
gs
jae
add
add
fs
rcl
push
clc
xor
add
add
loopne
xchg
sbb
and
add
pop
bound
add
xchg
ja
loope
mov
pop
xor
add
es
sub
cld
fmull
add
pop
inc
add
cmp
mov
add
sub
cmp
pop
sti
mov
mov
jno
add
imul
push
ss
add
add
popa
add
rcrl
mov
add
insb
cmp
dec
xchg
je
clc
push
clc
sub
add
mov
pop
iret
mov
aas
add
pop
add
add
bound
push
add
inc
add
xor
push
arpl
add
fistpl
clc
dec
mov
mov
mov
filds
add
jo
add
jle
add
cmc
mov
add
pop
pop
clc
je
push
jns
mov
nop
jmp
out
aad
outsb
mov
mov
mov
test
jno
add
lcall
clc
imul
push
add
push
lea
cmp
add
ljmp
sahf
and
clc
aam
adc
sbb
add
add
pop
jnp
add
jno
add
add
add
pop
jle
clc
cli
int
and
add
xchg
cmp
lret
popf
mov
add
sbb
add
add
add
and
add
sbb
cwtl
aas
sub
add
imul
adc
add
add
insb
pop
fsubp
clc
stos
or
mov
mov
cmc
test
dec
sub
sarb
jae
add
into
aad
pop
fcomip
inc
add
adc
arpl
add
mov
cmp
add
jnp
inc
clc
fmulp
mov
clc
icebp
pop
test
movsb
clc
push
add
add
add
inc
add
imul
pop
sar
shlb
pushf
push
add
xlat
ret
clc
mov
add
add
inc
add
dec
cmp
stos
mov
sub
xor
and
add
add
fidivrl
add
clc
push
je
out
lahf
cmp
clc
inc
clc
mov
clc
add
aam
pop
fmull
xlat
test
sub
out
xabort
out
loopne
iret
outsb
pop
ja
ffree
clc
adc
add
add
add
dec
out
and
add
add
add
mov
and
jmp
add
push
add
and
add
outsb
repz
mov
jae
add
jne
pop
scas
insb
and
add
adc
add
sub
out
xchg
jmp
and
xchg
fcmovu
and
add
mov
clc
insb
xabort
clc
or
add
xbegin
clc
or
int3
dec
pop
clc
mov
clc
in
cmp
clc
pushf
or
loope
xor
mov
mov
add
enter
add
std
gs
xchg
pcmpeqw
push
and
add
xor
jnp
call
mov
movsl
clc
pop
outsl
iret
sub
loop
inc
add
jae
add
add
lods
cs
xchg
std
inc
clc
fwait
nop
ja
imul
cmp
jg
es
mov
add
imul
add
push
add
add
xchg
mov
jmp
imul
add
push
dec
pop
aad
clc
lea
add
add
scas
mov
xchg
lods
and
add
xor
add
fildl
mov
add
test
xchg
xchg
mov
mov
mov
add
push
xor
add
add
pop
mov
adc
add
jmp
lods
xchg
iret
dec
jne
add
add
add
mov
push
mov
xchg
ret
fsubl
clc
mov
add
mov
mov
in
mov
sbb
ss
mov
clc
sar
clc
outsl
test
push
add
in
sub
pop
mov
clc
cmp
mov
clc
movsl
clc
enter
and
add
mov
add
imul
inc
add
repnz
pop
clc
push
mov
inc
clc
insb
mov
clc
push
clc
test
push
repnz
xchg
nop
jmp
fs
jp
add
add
clc
out
cwtl
movsb
clc
rol
clc
pop
and
add
lret
adc
incl
pop
add
pop
ret
clc
and
add
add
mov
das
int3
dec
out
xlat
sarl
push
nop
jmp
add
aam
in
sbb
fwait
adc
add
inc
add
stos
out
repz
fwait
int
inc
add
adc
add
cmp
add
fdiv
aaa
jb
add
aas
pop
loop
dec
shrl
add
mov
pop
incl
inc
cmp
mov
xchg
ret
add
inc
add
in
out
repz
jmp
ficompl
adc
repz
movsl
clc
sub
add
add
ror
mov
insb
adc
add
in
mov
jnp
dec
lret
xor
add
add
clc
pop
sub
or
add
inc
add
push
cmp
clc
int3
jge
clc
in
and
add
or
in
ss
jle
in
mov
add
xor
add
push
out
mov
mov
add
add
add
movsl
clc
lret
clc
inc
clc
insb
data16
add
add
clc
mov
test
mov
popf
cmpsl
clc
pop
cmp
adc
add
or
inc
loopne
mov
xchg
ret
fcomps
mov
add
loop
cmp
add
xchg
dec
sub
sbb
cmp
cwtl
dec
imul
popf
cmp
pop
or
in
mov
adc
add
inc
add
aad
clc
movzbl
sar
clc
jle
jno
add
add
jge
xor
add
add
int
in
sbb
or
stos
mov
push
nop
mov
clc
jecxz
ja
add
jmp
jmp
add
bound
add
out
out
cmpsl
clc
mov
push
add
std
add
add
and
inc
add
sub
clc
sub
sahf
push
mov
clc
push
loopne
or
clc
and
xlat
and
add
fs
mov
xlat
xchg
xlat
lods
aam
pusha
add
popf
xchg
out
mov
pusha
add
xchg
sub
and
mov
clc
sub
clc
add
add
add
repz
xabort
clc
or
cmpsl
clc
mov
jmp
add
sar
add
xor
add
adc
add
add
inc
add
and
add
sub
adc
add
int3
xor
add
add
mov
add
clc
pop
daa
clc
cltd
test
jno
add
clc
dec
repnz
add
in
pop
xchg
push
add
add
mov
cmp
movsb
clc
mov
lock
dec
and
add
jns
lock
std
jnp
into
jg
mov
fadds
add
xchg
push
lret
imulb
aad
clc
push
mov
clc
dec
mov
dec
in
adc
pop
clc
out
push
add
cwtl
adc
add
insl
cmp
add
add
add
mov
nop
jmp
mov
pop
fists
add
inc
clc
cmp
clc
bound
add
inc
add
pushf
adc
add
add
in
dec
test
aad
cmp
mov
dec
mov
sbb
push
add
xor
add
add
std
sub
add
add
dec
dec
mov
dec
addr16
hlt
es
arpl
add
mov
mov
mov
clc
loop
insb
cmp
repnz
clc
popl
add
cmp
pop
repnz
test
inc
add
stos
sub
clc
dec
xchg
cmp
clc
cs
in
cmp
mov
push
mov
xchg
ret
add
push
inc
add
nop
out
xor
add
push
mov
push
mov
xchg
ret
adc
add
je
or
mov
xor
and
add
leave
jb
add
clc
or
add
daa
clc
xbegin
add
mov
clc
daa
clc
push
add
je
add
scas
jns
mov
xchg
arpl
add
clc
xchg
jecxz
xchg
sbb
stos
cmp
imul
mov
mov
outsl
add
add
movsb
clc
data16
adc
add
clc
dec
or
mov
jmp
add
add
add
sub
inc
clc
push
pusha
push
mov
xchg
ret
lock
cmpsl
clc
push
mov
xchg
ret
add
daa
clc
lcall
xor
add
mov
clc
xchg
mov
cmp
add
dec
inc
clc
addr16
rorl
je
add
inc
add
mov
add
xor
add
xchg
dec
outsl
cmp
js
clc
sub
clc
dec
nop
leave
sahf
cmpsl
clc
pop
adc
add
add
add
push
clc
das
cmpsb
clc
mov
add
out
movsl
clc
jmp
add
add
lea
xchg
xor
add
clc
mov
or
add
data16
lods
push
sbb
push
fsub
clc
idiv
cmpw
nop
jmp
cmp
mov
test
mov
dec
sahf
scas
mov
popl
aad
inc
clc
cld
push
push
push
mov
xchg
ret
imul
in
sar
out
sti
bound
add
or
mov
clc
mov
rcrb
clc
xor
add
hlt
cmpsb
clc
outsb
ret
add
nop
jmp
sbb
arpl
cmpsl
clc
iret
xbegin
into
fcompl
inc
clc
push
add
lcall
add
mov
nop
jmp
loop
add
pop
sbb
add
xbegin
jge
and
fbld
gs
mov
pusha
add
ds
add
push
mov
xchg
ret
add
add
js
clc
jb
add
inc
clc
cmp
add
loopne
int3
mov
out
add
nop
jmp
cmp
dec
cmp
mov
into
data16
mov
or
add
sub
add
push
in
pop
xchg
movsb
clc
jns
push
xchg
rorl
imul
add
add
add
ret
clc
xchg
enter
xor
add
add
mov
add
add
add
add
add
nop
jmp
fsubl
stc
mov
clc
iret
shll
add
sarl
inc
add
add
pusha
add
scas
push
add
xlat
cltd
jecxz
inc
clc
mov
add
sbb
clc
xchg
inc
add
dec
sti
push
pop
clc
sahf
push
sahf
add
add
push
ficompl
cmc
ret
fcmovb
clc
adc
add
clc
push
mov
cmp
inc
add
in
outsl
sub
or
outsb
mov
lret
incl
bound
jae
aam
add
add
scas
mov
clc
ds
add
cmp
xchg
popa
add
out
out
add
add
mov
jle
add
popa
add
push
add
fldt
lods
and
imul
lock
add
dec
dec
in
into
and
add
add
add
pop
and
add
imul
clc
mov
mov
addr16
repz
add
adc
rcll
add
dec
rorb
clc
mov
xchg
ficomps
adc
add
ljmp
or
add
inc
add
xor
gs
dec
in
jecxz
negl
inc
clc
and
add
inc
clc
jae
add
add
jns
test
sub
add
icebp
pop
add
add
add
clc
subps
pop
sub
jge
add
pop
outsb
xor
add
push
add
push
add
nop
jmp
imul
mov
out
scas
lahf
fs
clc
sarb
mov
add
xor
add
xchg
sub
in
dec
repnz
cmp
mov
jo
add
jb
add
add
pop
sbb
add
cwtl
inc
clc
cmc
push
sub
test
mov
adc
add
add
iret
adc
add
cmp
add
add
clc
add
add
add
dec
scas
out
xlat
daa
clc
movsl
clc
cmc
out
imul
push
je
add
push
add
mov
add
sub
lock
inc
clc
data16
test
jmp
xchg
fs
lods
mov
sti
jle
add
add
lea
nop
jmp
fcoms
inc
clc
fcmovnu
leave
add
add
add
adc
add
and
add
clc
sbb
push
mov
push
add
jns
mov
add
iret
sub
adc
add
add
pop
or
clc
das
cmp
add
cmp
test
cmp
clc
mov
add
imul
ljmp
cmp
clc
movhps
add
inc
add
sub
clc
and
and
sub
lret
pop
fidivl
dec
jge
jle
clc
mov
add
dec
and
add
clc
in
dec
gs
mov
mov
cli
and
add
clc
dec
mov
lahf
adc
add
clc
loopne
aam
mov
mov
cwtl
pusha
add
clc
leave
and
jge
clc
dec
scas
push
dec
inc
add
arpl
pop
iret
test
dec
or
inc
clc
test
sbb
outsb
or
pop
dec
or
clc
cmp
clc
dec
adc
add
enter
xor
add
hlt
popa
add
insb
mov
lods
pop
jp
js
clc
jno
add
loope
imul
fstpl
scas
push
loope
mov
sbb
mov
nop
jmp
add
jp
pop
cmp
clc
ret
int3
dec
sub
clc
inc
add
cld
imul
add
dec
fwait
out
cmp
add
add
add
add
dec
pop
dec
outsb
fiaddl
nop
adc
add
je
adc
add
jb
add
add
mov
add
cmp
mov
sub
push
inc
inc
add
pop
jmp
out
lret
in
ret
mov
add
gs
and
in
int
cli
je
jecxz
pop
ljmp
imull
loope
cmp
push
add
sbb
clc
xchg
add
add
sub
clc
adc
add
inc
clc
mov
clc
pop
inc
add
sbb
pusha
add
cmp
xchg
cltd
mov
mov
and
loopne
jp
sbb
nop
jmp
add
fisubl
cltd
mov
mov
push
nop
jmp
imul
jp
add
pop
in
cmc
xor
add
fwait
or
add
jg
cmp
mov
clc
mov
inc
add
adc
add
clc
fucomp
imul
add
in
mov
add
mov
clc
ret
cmp
insl
sub
pop
dec
xor
add
xor
add
sahf
mov
mov
xchg
test
mov
nop
jmp
cltd
mov
imul
add
inc
clc
dec
xor
aas
cs
add
lcall
mov
insb
imull
fistpl
ret
clc
adc
add
repz
clc
jno
add
cwtl
insl
add
add
ret
and
add
inc
clc
inc
clc
jge
icebp
fmul
or
inc
add
pop
or
add
pop
pop
ret
clc
arpl
add
clc
add
add
xor
inc
clc
mov
xbegin
add
xbegin
clc
jno
add
add
inc
add
adc
pop
xchg
dec
xor
sbb
roll
add
cltd
jge
mov
add
and
push
add
xchg
or
add
fstpt
inc
add
adc
add
aaa
aam
repz
aas
xchg
adc
add
pop
daa
clc
jecxz
add
add
push
add
ja
xor
add
imul
inc
add
or
popf
enter
clc
pop
xor
add
cmp
clc
push
mov
adc
add
sbb
clc
pushl
add
add
frstor
nop
jmp
roll
add
pushf
sub
add
jns
mov
pop
xchg
stos
hlt
or
xchg
push
jbe
mov
jmp
aad
fcompl
sar
add
add
movsl
clc
sub
clc
pop
or
mov
clc
or
cmp
mov
clc
mov
adc
add
in
int
add
jne
clc
hlt
mov
clc
mov
clc
mov
add
pop
inc
clc
mov
add
xlat
loopne
cmp
arpl
add
xor
add
clc
inc
clc
xchg
cmp
add
fstps
ror
push
mov
xchg
ret
fisubrl
sub
int
pshufw
fs
or
mov
xchg
ret
add
add
sbb
dec
sbb
add
sbb
in
in
push
add
nop
jmp
loop
xchg
loopne
jg
in
mov
icebp
adc
test
fwait
in
pushf
mov
add
arpl
add
add
or
clc
push
clc
cltd
int3
sarl
clc
add
add
clc
inc
add
movsl
clc
aas
dec
sub
inc
add
jecxz
test
mov
adc
add
push
cmp
clc
mov
enter
xchg
imul
in
out
lea
add
test
sti
daa
clc
xchg
push
add
insb
xor
add
add
movsb
clc
cli
adc
add
or
std
add
add
data16
sub
outsl
idivl
mov
cmp
clc
xchg
in
loop
loopne
push
add
xor
add
inc
clc
mov
xor
sub
clc
push
jmp
mov
xor
clc
stos
xbegin
add
lcall
flds
add
aas
sub
pop
fdiv
cmpsl
clc
ret
clc
scas
inc
clc
call
cmp
xchg
inc
add
fmull
mov
add
add
cmp
cmp
in
add
add
mov
add
add
sbb
mov
inc
clc
cmp
push
outsl
and
add
clc
or
cmp
test
add
xor
add
add
add
add
std
lock
cwtl
shrl
inc
clc
push
push
nop
jmp
add
or
inc
add
mov
adc
add
mov
xchg
outsb
out
lret
clc
mov
or
add
jge
jge
add
sar
add
out
xchg
imul
clc
jae
add
cmpsl
clc
filds
jg
clc
or
push
add
push
sar
arpl
add
lahf
pop
pop
and
add
clc
aad
pop
clc
xchg
enter
inc
clc
mov
cmp
clc
xor
add
cmpsl
clc
inc
clc
or
mov
dec
jb
add
jg
clc
cmp
clc
stos
xabort
inc
add
insb
into
xor
add
and
add
dec
icebp
jne
clc
inc
add
mov
data16
out
sbb
add
bound
add
pop
imul
clc
mov
mull
add
clc
daa
clc
testl
cmp
clc
xlat
cmp
pop
cmp
add
jne
mov
mov
cmp
out
loopne
mov
add
add
jmp
aam
add
pushf
inc
add
lods
dec
xlat
lods
xor
add
cmp
push
mov
xchg
ret
imul
jns
add
push
out
clc
sub
pusha
add
xchg
lock
add
mov
mov
mov
xor
add
or
xchg
adc
add
add
xchg
add
addr16
mov
add
ficoml
add
push
add
inc
clc
divb
adc
add
gs
add
add
fs
shrb
cmp
loop
sbb
in
add
nop
jmp
jae
out
sub
add
sub
push
add
dec
dec
push
mov
clc
popf
cmpsl
clc
sbb
and
add
add
jp
clc
jp
push
rorl
and
add
dec
push
xor
add
mov
aam
add
add
add
add
setge
mov
adc
add
fcmovu
add
inc
add
sub
jmp
jo
add
das
xchg
cmp
add
pop
arpl
add
lods
fwait
negl
sbb
add
push
cs
imul
push
shl
clc
xor
add
mov
clc
mov
mov
lock
add
mov
jg
dec
inc
clc
idivl
jne
clc
fsts
add
clc
adc
clc
or
mov
hlt
lock
xchg
aas
xor
add
clc
rorb
clc
push
add
jge
clc
or
dec
loop
mov
testb
jge
clc
or
iret
sbb
adc
add
push
add
jno
add
add
fcmovnb
clc
push
adc
add
clc
push
jbe
or
jne
jnp
add
xchg
stc
add
add
add
cli
xchg
inc
clc
mov
mov
mov
in
bound
add
sbb
popa
add
fwait
xchg
hlt
out
fyl2x
scas
xchg
inc
add
out
test
and
add
clc
test
pop
push
add
test
cmp
add
add
mov
mov
jmp
add
add
add
cmp
and
add
add
mov
lea
clc
into
test
cmp
ja
xor
add
jae
add
lahf
iret
sbb
lcall
rcrl
jl
clc
push
ja
push
add
mov
pop
loopne
incl
pop
imul
insl
sbb
bound
add
data16
icebp
cli
sub
clc
pop
xchg
jb
add
add
daa
clc
clc
cmp
clc
insl
in
sar
or
xor
add
jns
ss
test
add
add
add
adc
sub
ret
adc
sar
add
inc
add
add
add
add
add
add
add
jno
add
add
clc
cmpsl
clc
mull
add
add
jbe
arpl
add
adc
add
stos
push
inc
clc
lea
clc
xlat
push
clc
ret
clc
mov
movb
add
nop
jmp
loopne
fisubrl
ja
clc
sub
clc
out
add
mov
test
nop
jmp
add
scas
add
xchg
arpl
add
jmp
add
cmpsb
clc
mov
clc
fidivrl
clc
add
add
clc
add
add
xchg
sub
add
cmp
clc
mov
dec
pop
sbb
add
lcall
jmp
or
dec
mov
pop
das
inc
clc
cltd
adc
add
das
imul
xchg
and
add
jns
dec
out
ret
clc
in
xchg
fs
into
data16
mov
test
xbegin
popf
lret
gs
adc
add
add
stos
cli
outsb
add
pop
inc
clc
lahf
jecxz
movsl
clc
adc
add
dec
into
clc
push
clc
and
add
mov
xchg
enter
idivl
mov
nop
jmp
adc
add
inc
clc
cmp
push
ds
push
add
rcr
in
and
add
add
push
mov
nop
jmp
xchg
add
xchg
cltd
xchg
psrld
ljmp
flds
add
lret
movsl
clc
push
add
rorl
fiaddl
clc
mov
test
pop
sar
clc
notl
jbe
ja
pop
xchg
in
pop
dec
dec
in
xor
add
jnp
and
xchg
sub
scas
leave
movsb
clc
sub
pop
mov
mov
nop
jmp
mov
xbegin
mov
jmp
xor
add
add
xor
add
cld
pop
sub
inc
clc
sbb
call
inc
clc
int3
jb
add
into
testl
dec
mov
push
push
nop
jmp
sbb
inc
add
jnp
ret
clc
lret
sar
or
add
cmp
bnd
clc
mov
stos
xor
add
and
add
rorl
cmp
cld
test
fistpll
clc
nop
gs
arpl
add
add
loop
sar
fldt
add
add
nop
jmp
add
mov
clc
or
clc
adc
add
add
rolb
add
lock
add
clc
ljmp
fwait
mov
cmpsb
clc
stos
push
add
dec
xlat
sbb
or
add
mov
dec
push
add
mov
es
dec
aam
mov
out
or
sub
rorl
xor
inc
add
pop
fstpt
push
jne
nop
jmp
cmp
fstpt
mov
out
jo
add
mov
clc
out
daa
clc
mov
mov
inc
add
jbe
mov
rcll
clc
ljmp
pause
jmp
roll
add
loope
ret
clc
or
scas
out
xor
add
clc
fldl
add
icebp
dec
ds
mov
add
adc
add
add
cs
ret
stos
inc
clc
scas
in
data16
dec
fwait
xchg
out
aas
scas
iret
xbegin
daa
clc
sbb
clc
mov
clc
addr16
in
iret
fnstenv
inc
clc
dec
mov
add
imul
add
add
lock
mov
add
call
add
loop
xor
add
cmp
ficompl
ja
ds
add
bound
add
stos
push
add
aam
je
add
clc
xor
add
xchg
in
adc
add
add
jnp
pop
xchg
sbb
jmp
xchg
aad
movsl
clc
popf
push
or
clc
mov
add
xor
add
and
add
add
xchg
pop
jp
inc
add
fs
mov
pop
aas
jl
clc
fmuls
out
jge
sub
clc
je
lahf
mov
into
push
mov
add
adc
push
mov
push
jl
cmp
clc
mov
clc
out
xor
xor
add
leave
jb
add
nop
jmp
add
rcrl
add
dec
xchg
and
mov
add
push
add
pusha
add
test
pop
stos
inc
clc
icebp
loope
out
sbb
add
add
or
clc
pop
div
imul
mov
cmc
in
lods
inc
add
ja
cmp
xchg
mov
out
inc
add
sbb
clc
xor
add
add
in
in
mov
clc
shlb
lahf
mov
clc
mov
mov
clc
sub
clc
mov
test
daa
clc
xchg
sbb
add
loop
jg
xor
aad
add
roll
arpl
add
add
add
clc
or
add
mov
add
sbb
fsts
add
and
add
clc
mov
push
dec
in
inc
clc
in
imul
add
div
nop
jmp
loop
fiaddl
imul
clc
imul
aad
cmp
sbb
sahf
dec
stc
cmpsb
clc
mov
ljmp
add
pop
outsb
cmp
mov
add
pop
mov
jnp
fdivs
sbb
aam
clc
mov
clc
xchg
xchg
mov
dec
mov
je
xor
add
clc
mov
add
mov
clc
pop
mov
mov
clc
iret
clc
pop
jno
add
add
cltd
adc
add
add
xor
add
clc
std
data16
fidivs
add
and
nop
jmp
rcrl
lret
cmp
clc
ss
and
add
fsubr
xbegin
mov
pushf
jae
add
adc
push
mov
nop
jmp
add
mov
das
out
out
adc
cmp
nop
jmp
xchg
add
cmpsb
clc
aaa
aad
dec
ret
and
add
sub
add
stos
cltd
lret
sbb
add
add
clc
test
aaa
xabort
pop
int
pop
call
iret
imul
and
add
hlt
clc
xchg
rorl
add
xchg
cwtl
cld
jo
add
jp
clc
stc
cltd
mov
insl
bound
add
adc
add
xchg
sub
clc
insl
and
add
clc
arpl
add
add
or
add
inc
clc
mov
add
clc
mov
pusha
add
lods
xlat
mov
fisubs
add
jg
dec
jp
out
pusha
add
shrb
out
cmp
add
xor
add
add
or
clc
bound
add
out
sti
and
add
and
add
cmp
clc
imul
mov
xchg
ret
add
push
add
mov
add
inc
clc
xlat
cmp
mov
and
sarb
add
or
add
add
in
jb
add
imul
jl
jbe
lret
out
fldcw
fldenv
clc
decb
add
fnstsw
repnz
cs
push
add
int3
enter
push
add
inc
clc
jge
dec
popa
add
xchg
adc
add
clc
outsl
sub
clc
cli
pop
cmp
adc
add
push
push
mov
xchg
ret
mov
clc
add
mov
clc
xabort
hlt
adc
or
cmpsl
clc
push
clc
xor
add
add
aas
jecxz
push
clc
test
cmp
add
cld
xchg
fs
sub
add
cmp
clc
xbegin
push
jmp
dec
imul
sbb
ss
jecxz
mov
jmp
add
fmuls
add
clc
cmp
clc
bound
add
push
nop
jmp
outsb
dec
mov
fimull
cmc
rcl
sbb
mov
add
in
sbb
insb
rorl
cs
popf
lahf
fisubs
into
into
sub
or
add
rcrl
or
outsl
leave
dec
pop
fsub
clc
ds
add
sbb
clc
xchg
test
push
das
inc
add
add
clc
dec
xchg
sbb
cmpsb
clc
sub
shrb
add
ret
mov
push
lret
mov
cmp
clc
push
clc
sbb
loopne
or
add
add
clc
into
mov
in
jmp
xor
mov
hlt
pop
ret
je
add
je
aad
pop
add
add
xor
clc
mov
jbe
lret
or
or
mov
nop
jmp
jp
pop
xchg
in
push
xor
push
mov
xchg
ret
faddl
arpl
cmp
jecxz
or
out
fnstcw
mov
sbb
clc
cmc
inc
add
hlt
cli
lret
das
cmpsb
clc
add
add
in
sub
mov
sbb
or
xor
add
pop
hlt
dec
xabort
movsl
clc
popa
add
xor
add
scas
sbb
clc
inc
clc
pop
lods
mov
inc
add
in
divb
add
mov
cmc
xchg
xabort
mov
jne
nop
jmp
fildl
sbb
clc
fwait
das
push
push
add
scas
dec
outsl
gs
push
clc
daa
clc
cmp
push
nop
jmp
shll
or
je
add
sti
add
add
clc
adc
add
data16
out
pop
push
cld
push
add
inc
add
lcall
add
ficoml
inc
add
pop
xchg
lcall
pop
leave
pop
sbb
add
clc
in
and
add
clc
in
and
add
clc
icebp
cltd
or
mov
push
sub
add
inc
add
out
pop
cmpsb
clc
mov
clc
jno
add
lret
clc
int
jmp
xchg
cmc
pop
out
fmuls
jns
out
insb
or
mov
jae
add
push
mov
xchg
ret
fcomp
inc
add
aaa
stc
mov
add
negl
cwtl
mov
add
add
outsl
or
mov
clc
lods
das
lret
dec
cmp
add
std
insl
cs
xbegin
clc
mov
inc
clc
jns
mov
jge
jp
add
mov
repnz
clc
xchg
push
add
push
mov
nop
jmp
push
pop
mov
pop
jmp
xor
dec
xchg
cmovae
add
add
or
xor
add
clc
jge
adc
sbb
xchg
adc
add
inc
clc
adc
add
cmp
add
jmp
dec
jo
add
clc
xchg
mov
push
jmp
pop
xor
add
add
nop
outsb
int3
cmc
mov
mov
dec
sar
add
pop
sbb
ss
add
clc
dec
dec
hlt
inc
add
xabort
fldcw
xbegin
clc
sar
test
in
and
add
add
ficompl
lret
or
xbegin
mov
add
add
fdivrs
mov
clc
fsubs
push
jne
nop
jmp
add
fisubl
inc
add
movsl
clc
outsl
push
add
scas
jno
add
addr16
js
jo
add
cmp
ficomps
mov
cmc
dec
jl
out
mov
and
add
cmp
clc
cmp
add
mov
mov
add
and
add
clc
js
cmpsb
clc
mov
add
xor
add
clc
lods
pop
aad
jg
repz
add
xlat
add
add
clc
aam
add
loop
inc
clc
cmpsb
clc
cmpsl
clc
jl
cmp
clc
fcompl
jne
nop
jmp
outsb
fdiv
xor
add
clc
xchg
add
sti
push
shr
nop
jmp
mov
add
sbb
dec
dec
push
add
sti
popa
add
in
cwtl
data16
mov
add
out
jnp
jbe
loope
cmpsb
clc
xor
cmp
push
add
into
xchg
in
push
add
mov
ss
add
jp
mov
jbe
clc
out
into
out
mov
add
cmp
add
ss
mov
xchg
movsb
clc
lcall
stos
and
add
clc
jbe
push
inc
add
jno
add
clc
mov
nop
jmp
pop
out
add
push
add
cmp
add
add
cld
and
add
bound
add
dec
xor
add
jo
add
push
clc
ret
out
adc
add
push
sub
outsl
mov
clc
push
lahf
arpl
add
lock
add
lcall
lods
push
add
inc
clc
call
jmp
cltd
rolb
jg
fcmovbe
cmp
add
add
call
mov
xchg
ret
bound
add
int
lret
add
add
clc
xchg
mov
stc
mov
xlat
sbb
inc
clc
addr16
add
add
and
add
add
imul
and
add
aam
lock
lea
dec
xchg
jle
cmp
push
scas
cmp
add
clc
mov
add
fistps
clc
mov
pop
xor
add
imul
ficompl
stc
mov
clc
dec
mov
clc
data16
lcall
xchg
pusha
add
in
jmp
call
nop
jmp
loopne
add
imul
movsl
clc
icebp
sub
add
push
add
push
sub
push
mov
xchg
ret
imul
arpl
add
xchg
pandn
add
jl
sbb
jmp
aad
sbb
xor
add
jno
add
xlat
out
inc
clc
lock
fs
or
dec
add
push
jmp
add
loop
xor
add
sub
xchg
xor
adc
cmp
clc
xor
das
pop
enter
mov
push
je
nop
jmp
and
adc
clc
push
push
inc
add
ds
aam
clc
in
mov
add
and
add
add
mov
out
cmp
jmp
mov
pusha
add
or
clc
std
push
clc
sub
clc
cmp
pop
clc
lock
out
test
es
jno
add
mov
lret
lock
add
cmpsb
clc
dec
je
clc
data16
jno
add
into
inc
clc
inc
clc
call
mov
xchg
ret
add
add
jno
add
icebp
cmp
add
pushf
mov
in
pushf
sbb
jmp
inc
clc
pop
cli
cmp
add
xbegin
clc
xor
add
add
int
clc
sbb
stc
fcomps
std
mov
call
sbb
cmp
clc
fnstenv
mov
clc
jmp
cmp
add
xchg
jg
mov
mov
clc
cltd
mov
jns
test
es
clc
cmp
mov
out
xor
add
cltd
enter
lcall
out
outsb
aas
test
clc
mov
add
jle
mov
stos
mov
add
insb
or
cmp
mov
clc
pop
adc
add
in
adc
push
add
adc
add
clc
imul
nop
jmp
add
add
lock
cs
cwtl
push
inc
add
fdiv
lea
xchg
xor
sar
pop
jno
add
clc
jns
push
add
jle
mov
nop
jmp
adc
add
mov
call
nop
jmp
pop
add
loopne
xchg
xchg
mov
pushf
dec
test
scas
sahf
cmp
inc
add
add
add
clc
test
fst
sub
lods
lret
fsubr
jb
add
test
add
mov
insb
mov
call
add
clc
test
jb
add
xchg
in
cmp
clc
push
add
clc
add
add
pop
sahf
or
ret
jns
movsb
clc
popa
add
or
movzwl
nop
jmp
dec
add
mov
clc
sub
clc
add
adc
into
cmp
and
add
movsb
clc
in
ss
add
imul
movaps
push
clc
xchg
cmp
xchg
add
or
clc
fwait
pop
inc
clc
adc
clc
clc
xchg
shl
clc
clc
data16
dec
fistl
add
jg
clc
xabort
xchg
test
shrb
add
dec
dec
das
dec
or
mov
clc
cli
add
add
outsb
or
jmp
pop
fcmovbe
add
pop
fadds
ds
jno
add
js
dec
fstl
inc
clc
jne
lcall
loopne
or
repz
clc
into
sahf
cmp
or
and
add
imul
sbb
clc
cs
jl
clc
or
add
cmpsl
clc
lock
sti
jne
add
pushf
arpl
add
add
adc
add
loope
addr16
out
stos
pop
fdivl
sub
fsubrs
adc
cmp
outsb
jno
add
add
ja
push
in
mov
adc
add
clc
pop
hlt
lahf
jmp
lock
aam
push
mov
pop
outsb
xchg
add
imul
je
pushf
clc
add
add
clc
js
ret
clc
rcl
or
clc
aad
ss
add
cmp
add
popa
add
rolb
add
add
cmp
jo
add
add
add
xor
add
add
test
mov
clc
mov
mov
cmc
scas
sbb
jmp
add
cltd
cltd
add
mov
bound
add
inc
clc
inc
clc
inc
clc
aam
outsb
lock
clc
rcrl
jb
add
adc
add
clc
xor
add
inc
add
ja
cltd
mov
mov
add
ljmp
mov
std
test
xor
mov
nop
jmp
xchg
mov
sbb
dec
cmc
cmp
dec
dec
sub
clc
jne
sbb
nop
jmp
fadds
add
add
mov
jns
clc
fwait
cld
enter
inc
add
cmp
arpl
add
dec
stos
xchg
ljmp
jne
addr16
out
mov
xbegin
add
sar
clc
pop
scas
fs
bound
add
add
insb
cmpsl
clc
imul
outsb
dec
cwtl
dec
out
pusha
add
inc
add
cmp
clc
out
cli
sub
jo
add
add
add
add
adc
add
mov
in
sbb
fstpt
pushf
dec
xor
add
add
cs
add
or
addr16
sbb
mov
xchg
ret
out
imul
clc
ss
push
mov
nop
jmp
add
add
addr16
mov
add
pop
cmpsb
clc
imul
add
mov
add
mov
mov
call
jmp
cmp
out
imul
dec
pusha
add
stos
pop
icebp
in
and
add
clc
shrb
cmp
jae
add
fstl
jp
add
add
add
add
or
fcoms
jmp
pop
add
or
mov
clc
ja
pop
aad
clc
pop
scas
xchg
sar
fnsave
add
aas
sub
mov
stos
sar
add
jnp
pushf
fdivrl
add
add
add
int
cld
popa
add
lret
push
add
sbb
sbb
mov
pop
push
add
sub
add
and
js
pushf
test
aad
clc
sub
pop
clc
push
popf
pop
in
cmc
shl
jo
add
outsl
aas
fadd
clc
pop
in
int
clc
outsl
jmp
jmp
add
loop
dec
add
fdivrl
clc
xchg
inc
add
repz
add
and
add
clc
adc
xchg
dec
in
loop
popf
cli
or
cmp
jmp
add
out
pop
add
sub
xchg
jns
xor
clc
sub
adc
jmp
mov
add
cmp
movsb
clc
xor
add
add
pop
clc
pop
mov
jge
lock
gs
fwait
push
add
in
fistl
lret
mov
xor
nop
jmp
add
pop
add
push
and
add
fstps
clc
mov
or
scas
mov
out
scas
or
mov
outsl
and
add
add
cmc
int3
cmp
clc
dec
jb
add
in
repnz
add
add
cs
add
pop
xor
add
clc
jb
add
add
clc
jb
add
sbb
add
cmp
rcrb
jmp
pop
and
add
or
adcb
and
adc
xchg
std
js
outsb
sahf
mov
mov
into
stos
pop
addr16
nop
cld
icebp
cmp
clc
outsl
jg
jbe
repz
fsubrs
cs
or
xor
add
iret
jge
pop
ret
add
sub
je
clc
pop
clc
sbb
in
pop
and
iret
add
add
xchg
xchg
clc
inc
clc
outsb
jnp
adc
add
add
dec
dec
lret
sub
jp
clc
jne
and
dec
mov
fndisi(8087
clc
pop
ds
jmp
jp
mov
aam
cmp
vandnps
add
out
int
test
push
mov
xchg
stc
decl
sbb
clc
cmc
push
add
or
xor
add
add
mov
dec
call
clc
or
in
mov
clc
adc
add
pop
mov
test
add
xor
add
jge
mov
pop
nop
jmp
imul
add
jp
pop
mov
push
nop
jmp
addl
add
clc
fistps
add
jg
mov
push
mov
xchg
ret
pop
add
cwtl
push
lahf
adc
add
add
sti
push
jmp
cmp
add
roll
xor
add
add
clc
int
mov
clc
negl
leave
push
add
and
add
add
ss
fists
add
icebp
stos
popf
cli
xlat
dec
mov
dec
leave
inc
add
pop
add
stos
xchg
xabort
inc
add
negb
and
add
xchg
pop
pushf
nop
out
imul
inc
add
add
sub
push
mov
sub
xchg
sub
clc
test
clc
cmp
shrl
mov
ret
clc
js
clc
cltd
mov
iret
mov
dec
mov
clc
fisttpl
xchg
cs
clc
shl
sbb
sbb
add
add
rorl
sbb
fnstcw
fsubrl
mov
xchg
pop
or
inc
clc
sahf
outsb
xbegin
mov
clc
cmc
jp
scas
push
inc
add
jp
cmp
fisubrs
mov
in
test
sbb
xchg
inc
clc
cmp
nop
test
clc
imul
mov
xchg
jge
add
repz
add
add
push
sub
xbegin
clc
pop
mov
clc
pop
cmpsb
clc
sar
aas
test
aaa
xchg
idivl
mov
add
jne
nop
jmp
mov
add
lods
jb
add
out
or
push
add
and
add
or
shll
add
xchg
lcall
lahf
pop
inc
clc
loop
stos
or
add
es
mov
js
jno
add
add
xchg
cld
jo
add
add
clc
xchg
scas
insl
not
gs
mov
xchg
lods
xchg
ds
loopne
cmp
add
scas
cltd
inc
add
push
add
scas
pop
sti
cmp
clc
adc
add
jns
or
or
call
jmp
fs
or
outsb
bound
add
clc
aad
add
push
add
push
mov
sbb
dec
loop
sub
push
clc
mov
add
add
das
es
test
test
push
add
sbb
clc
cs
push
and
add
push
clc
add
sbb
rclb
pop
fs
dec
adc
or
clc
pushf
ret
clc
or
sahf
fucom
clc
addr16
xlat
xchg
push
add
dec
mov
lea
add
inc
add
mov
and
add
mov
add
add
mov
add
aas
in
or
arpl
add
push
add
push
add
and
add
add
mov
and
add
stos
jb
add
sub
add
push
notb
loop
cld
pop
mov
mov
rclb
xor
add
mov
jmp
sbb
mov
test
cmp
loop
adc
add
add
add
rclb
fistl
sti
ds
sub
clc
sar
bound
add
push
nop
cmpsl
clc
and
cs
inc
add
sub
jae
add
int3
mov
jns
clc
aas
mov
xchg
std
push
gs
adc
out
pusha
add
int
dec
or
add
clc
fistpl
add
fisttps
and
add
cmp
or
fcomps
add
popf
xor
add
mov
mov
repnz
and
add
lock
cmp
sub
add
sti
lcall
jmp
aad
pop
add
imul
popl
add
push
movsl
clc
inc
clc
pusha
add
in
mov
fs
jp
add
adc
add
push
add
or
clc
into
xabort
enter
sbb
clc
sbb
clc
fwait
lods
xor
add
add
leave
push
inc
add
dec
adc
add
in
xor
add
sbb
cmp
clc
sub
add
pop
out
inc
add
aaa
cmc
add
add
jno
add
add
es
mov
add
xor
cmpsl
clc
mov
xchg
push
add
cltd
jg
clc
xor
push
push
push
mov
xchg
ret
sbb
push
add
sub
add
add
pop
inc
clc
xchg
xor
add
mov
jge
add
bound
add
pushf
xchg
out
or
clc
loopne
sub
ss
add
mov
lahf
push
add
jbe
push
add
pop
lret
das
adc
add
xchg
pop
and
add
add
js
add
push
xlat
push
clc
aas
repnz
add
clc
data16
cmp
clc
cmp
insb
mov
clc
mov
pop
mov
pop
enter
fisubl
add
push
shlb
add
mov
pop
cmc
insb
mov
add
add
out
jnp
out
mov
clc
push
add
sub
clc
sub
repnz
outsb
bswap
into
mov
inc
clc
cmp
add
mov
inc
clc
mov
stc
xbegin
clc
xchg
inc
clc
jae
add
clc
xchg
fs
cmp
add
out
and
adc
add
pause
jmp
faddl
add
add
fwait
mov
xbegin
xlat
lods
push
add
data16
gs
dec
fmuls
sahf
fucomp
add
add
cmc
mov
inc
nop
jmp
add
mov
push
add
es
in
pop
clc
aam
adc
add
jle
xbegin
xchg
popf
add
add
xor
add
clc
and
add
jne
nop
jmp
jae
pop
imul
pop
mov
xchg
sub
clc
dec
cmp
jnp
jmp
adc
add
add
dec
icebp
xor
add
add
add
mov
clc
lods
fwait
add
add
adc
sahf
kmovw
dec
lea
in
test
notl
add
add
add
pushf
arpl
add
bound
add
sarb
jne
lret
pop
cmp
jmp
xchg
jg
push
movsb
clc
aad
lret
stos
xor
add
add
cmc
jp
call
add
jmp
jb
add
cltd
dec
divb
lahf
sbb
hlt
adc
add
add
faddl
fisubs
mov
add
add
add
add
add
mov
arpl
add
sub
stos
sub
xchg
inc
add
mov
nop
jmp
sbb
pop
add
jmp
cmovnp
add
add
and
icebp
push
dec
jl
jne
adc
add
and
add
jmp
jae
add
fimull
xchg
ja
je
push
add
in
mov
mov
out
pop
add
add
clc
out
ljmp
push
sbb
std
int
clc
adc
add
dec
mov
mov
decl
jns
decl
add
push
add
nop
jmp
add
fsubs
clc
push
sbb
cltd
jg
or
cs
mov
imul
fstps
jmp
xchg
add
add
clc
gs
mov
call
clc
cmp
push
add
mov
mov
clc
cmp
xchg
jbe
pop
dec
add
loopne
or
cmp
or
outsl
testl
pop
sub
sbb
clc
mov
add
lock
adc
add
xor
add
fcmovb
clc
sarl
clc
movsl
clc
xchg
cmc
movsb
clc
jns
lods
mov
jnp
clc
imul
clc
pop
in
ret
clc
es
sbb
add
bound
add
icebp
mov
leave
sarb
sbb
in
push
test
push
mov
xchg
ret
push
loopne
dec
add
add
add
xchg
repnz
loope
je
wbinvd
dec
iret
cmp
popa
add
inc
clc
bound
add
jp
add
mov
pushf
cltd
mov
jb
add
push
add
into
jno
add
cwtl
mov
out
jbe
mov
add
add
pop
aas
clc
cltd
sar
clc
mov
push
or
add
sbb
adc
dec
jecxz
cmp
ljmp
ret
aaa
xor
loop
sbb
add
ja
insl
in
pop
ja
push
push
nop
jmp
cmp
pushf
arpl
add
inc
clc
sub
pop
fisttpl
aad
add
add
add
movsb
clc
in
sbb
sti
shll
add
in
sub
test
fs
push
add
sub
add
jge
fsub
clc
push
add
push
nop
jmp
lock
add
sbb
mov
xchg
ret
adc
add
outsl
push
pusha
add
xor
add
icebp
mov
jmp
mov
clc
das
cmp
and
add
rcrl
mov
add
decl
or
push
add
or
clc
xchg
jl
addr16
inc
add
adc
movsl
clc
rcrl
mov
sbb
outsb
mov
xchg
sbb
clc
lcall
clc
add
in
adc
add
add
add
or
jns
clc
cltd
mov
dec
dec
lret
clc
mov
xabort
je
sub
clc
lret
clc
pop
and
add
jns
daa
clc
cmp
pop
js
add
add
xchg
jg
sub
sub
in
sbb
mov
fnstsw
mov
xchg
ss
clc
scas
mov
clc
push
add
sbb
cmp
clc
add
clc
rorl
popf
stc
and
loop
and
add
sbb
clc
dec
push
jmp
adc
scas
lock
test
mov
mov
nop
jmp
cltd
lock
lret
add
fs
mov
xchg
sub
adc
add
lods
test
push
frstor
push
clc
pop
pop
dec
out
mov
add
inc
add
outsl
xchg
push
add
push
clc
cmp
in
xor
add
fs
bound
add
add
add
push
push
aam
decb
clc
mov
add
mov
clc
fwait
add
mov
jbe
add
add
ljmp
add
jae
add
clc
inc
clc
add
add
mov
nop
jmp
add
add
shrd
xor
nop
jmp
add
adc
add
data16
test
pop
mov
add
add
cmp
je
add
nop
jmp
or
lock
popa
add
out
dec
add
add
xchg
or
clc
dec
cmp
add
test
add
push
add
sub
jae
add
imul
add
jb
add
add
gs
clc
fsub
clc
jae
add
gs
stos
inc
clc
jo
add
add
cli
icebp
mov
clc
ss
add
fisttps
jl
add
add
add
pusha
add
push
add
rclb
sub
sbb
in
cmp
arpl
fildl
sbb
clc
lods
aas
imul
xchg
daa
clc
loopne
dec
and
add
ret
mov
rorb
add
inc
add
push
add
jo
add
mov
clc
das
cmp
xlat
push
es
add
fsubrs
pop
clc
inc
add
insl
cwtl
lcall
roll
clc
xchg
loop
inc
clc
push
and
pop
sub
add
ret
clc
xlat
lcall
add
data16
stos
outsl
xchg
nop
lret
pop
push
mov
stc
inc
clc
dec
mov
imul
loope
inc
add
add
insl
lcall
add
inc
add
pop
and
mov
sbb
xor
add
clc
cmc
xabort
ret
add
and
add
clc
jbe
add
test
sbb
add
cmp
adc
add
shrb
sahf
insb
and
sub
clc
jge
inc
clc
sar
push
out
je
cld
sti
fidivl
add
sub
add
add
add
mov
knotw
and
add
clc
jns
cmp
push
push
mov
xchg
ret
pop
add
dec
adc
add
add
pop
cwtl
xchg
popa
add
inc
add
enter
pop
mov
gs
fwait
aaa
push
clc
inc
clc
in
aad
dec
nop
jmp
add
add
sahf
aam
adc
add
sub
shll
ret
aam
cmpsl
clc
push
or
inc
add
cs
call
nop
jmp
and
clc
add
push
cmp
ret
clc
and
and
add
lods
mov
pusha
add
jmp
clc
fs
xor
ficoml
mov
nop
jmp
imul
jp
clc
call
sub
clc
mov
cltd
mov
mov
push
pop
mov
cltd
ja
add
add
lcall
imul
clc
sub
icebp
cmp
lods
xchg
mov
loop
mov
push
mov
and
add
stos
pop
adc
add
out
jp
push
mov
xchg
ret
cltd
dec
xchg
clc
jecxz
mov
clc
jle
clc
push
add
jp
cmp
clc
adc
add
add
mov
cmp
cld
pop
out
adc
add
add
add
scas
clc
ss
mov
ljmp
clc
in
mov
pop
mov
ljmp
xchg
mov
incl
add
add
add
in
push
fisubl
add
add
cmp
mov
stos
inc
add
jne
fsubrs
mov
jmp
add
sbb
add
in
into
aam
int3
pop
clc
js
pop
cmovl
clc
sahf
sub
adc
add
cmp
add
add
add
mov
sbb
xbegin
clc
into
adc
add
add
std
sub
test
call
add
pop
or
jmp
pop
dec
aam
cmp
and
add
add
ret
pop
in
mov
clc
cld
mov
lea
nop
jmp
fdivrs
dec
or
cmp
pop
mov
xchg
add
add
repnz
push
cmp
clc
lahf
sahf
stc
mov
mov
arpl
add
aam
clc
ficompl
clc
sti
sub
je
mov
rcll
das
cmpsl
clc
inc
clc
jnp
clc
mov
add
clc
push
add
adc
add
add
inc
clc
lcall
clc
iret
mov
xchg
lcall
jle
sbb
add
add
push
xor
add
add
add
cmp
add
mov
adc
mov
push
dec
inc
clc
inc
clc
loop
push
clc
iret
jp
iret
out
aad
int3
cmp
adc
jmp
cmp
xchg
sbb
add
mov
add
sub
push
add
mov
add
jbe
mov
cli
cmp
mov
add
incl
add
add
add
add
stos
in
dec
xchg
inc
clc
sar
clc
js
xchg
mov
fsubl
std
jnp
jno
add
add
inc
clc
jae
add
add
clc
jb
add
add
clc
mulb
add
leave
inc
clc
jnp
sub
xor
add
add
mov
add
call
sar
cmp
xor
add
add
sub
clc
ja
clc
pushf
and
jno
add
clc
sbb
test
jmp
adc
cld
jg
clc
mov
daa
clc
pusha
add
inc
add
mov
enter
nop
jmp
add
add
dec
xor
lret
ss
clc
ficomps
xor
add
add
sbb
nop
jmp
mov
clc
and
add
cmp
nop
jmp
outsb
pop
loopne
xchg
sbb
clc
sbb
add
lea
jbe
cli
cmp
arpl
add
add
mov
aas
lret
test
aaa
or
sub
fwait
jl
add
out
adc
add
popa
add
mull
clc
into
ret
add
jg
pop
adc
jecxz
inc
add
cmp
clc
xchg
bnd
add
jl
dec
cmp
dec
nop
jmp
add
arpl
add
adc
add
clc
sub
icebp
inc
clc
decl
nop
jmp
shl
add
and
inc
add
clc
cmp
sar
fdivrs
push
mov
clc
pop
mov
icebp
jp
ljmp
test
sub
clc
push
add
inc
add
mov
mov
add
jmp
clc
push
add
add
xchg
iret
clc
aaa
cmpsb
clc
lods
pop
mov
fnstenv
insl
shrl
out
xlat
mov
jae
add
clc
or
aam
clc
imul
push
adc
clc
nop
in
or
loope
aas
dec
sbb
add
clc
xor
nop
call
mov
add
mov
ljmp
cmp
clc
movsl
clc
decl
xor
inc
add
mov
test
test
clc
imul
add
push
mov
xchg
ret
pop
add
lea
test
clc
adc
add
ret
clc
xchg
sbb
mov
clc
dec
cmp
and
add
fdivrs
or
clc
mov
sub
push
add
iret
jge
xchg
xchg
lods
sbb
mov
clc
mov
imul
fnsave
insl
icebp
dec
adc
add
clc
sbb
add
and
add
push
and
add
dec
cmp
insb
loop
test
int3
cmc
aaa
xbegin
clc
dec
int
jle
add
stos
outsl
and
add
xlat
clc
fidivrl
and
add
add
cmp
clc
in
fs
shll
jmp
mov
clc
jnp
push
add
imul
add
add
xor
add
add
scas
sbb
mov
mov
clc
ret
data16
mov
add
add
jb,pt
nop
jmp
or
mov
add
pop
dec
pusha
add
pop
jno
add
cmp
jmp
xchg
fs
outsb
mov
clc
shl
clc
or
outsl
pop
add
add
clc
and
fcmovb
clc
pop
shl
clc
push
hlt
mov
add
test
xor
add
mov
clc
ja
add
stos
stc
cli
test
jmp
cmp
ret
clc
mov
pop
xchg
shll
cmp
clc
dec
aad
cmp
clc
dec
sub
in
mov
sar
andb
shrb
out
clc
cld
cltd
inc
add
mov
add
or
add
xchg
lcall
inc
add
sbb
add
cmp
fsts
add
iret
fucomi
push
fstpt
mov
faddp
clc
cmp
and
add
fstl
sti
cmp
add
or
js
clc
mov
add
or
add
fnstenv
clc
push
rorb
add
pop
add
fdivrl
pop
sub
jg
and
add
test
mov
nop
jmp
add
cmp
cltd
out
dec
or
clc
and
add
add
loopne
cli
push
nop
jmp
pop
rclb
pop
and
add
sbb
add
nop
jmp
add
add
imul
rorb
out
and
add
dec
mov
add
dec
jge
cmc
in
mov
clc
repz
in
and
add
jnp
movsb
clc
fucomp
in
imulb
arpl
add
add
clc
sbb
sar
and
add
clc
aam
clc
xor
add
mov
or
test
clc
xor
add
adc
add
add
jle
add
push
add
clc
xbegin
clc
sub
jne
lahf
add
pop
int3
dec
jne
mov
into
xabort
ror
aas
aas
add
add
add
add
es
mov
clc
clc
fsts
cltd
inc
add
mov
add
int
clc
imul
add
test
out
mov
sbb
adc
movzwl
lcall
and
add
out
sbb
nop
jmp
adcb
stc
shll
add
hlt
sbb
sub
mov
sti
jnp
inc
add
insl
out
cmp
cmp
add
and
push
clc
push
or
add
or
add
fstpt
jbe
fldt
adc
mov
clc
in
dec
addr16
jecxz
mov
dec
pop
xlat
in
adc
add
mov
sbb
test
call
add
imul
clc
mov
cmp
add
xor
outsb
lret
cmp
add
clc
cmc
out
jmp
clc
mov
clc
cmpsb
clc
jbe
movsb
clc
pop
push
clc
imul
add
int
aas
or
add
sarb
mov
inc
clc
jnp
sti
pop
xor
add
add
or
addr16
aam
clc
das
pop
pop
inc
add
movsl
clc
in
mov
stos
bound
add
je
add
outsb
adc
mov
or
add
int3
fcomps
test
clc
dec
push
ja
clc
aam
mov
jno
add
loopne
inc
add
dec
test
leave
mov
clc
pop
fdivrs
popl
add
popa
add
int3
int3
mov
add
add
add
mov
shll
mov
xor
add
jne
data16
lcall
xor
add
sbb
jmp
adc
sbb
fildl
add
push
add
in
jge
clc
hlt
mov
jmp
dec
pop
mov
pushl
rclb
add
lock
add
jg
add
xchg
or
push
add
fisttps
clc
xor
clc
int
ja
gs
dec
sub
test
call
fsubs
add
add
pop
jno
add
clc
jb
add
adc
add
lcall
nop
jmp
arpl
rcrb
cmp
jnp
and
add
sti
inc
add
push
add
push
mov
jmp
lock
mov
insl
xlat
fwait
mov
add
xchg
fcompl
clc
sbb
xchg
sar
decl
aad
cmp
pusha
add
lahf
rolb
rcll
fistpll
add
adc
clc
call
incl
shrl
push
jl
jmp
and
sbb
clc
bound
add
loope
push
cmp
clc
test
mov
bound
add
and
add
data16
rorl
fidivs
loope
push
add
mov
outsb
or
add
inc
add
pop
shll
add
cwtl
stos
into
rcl
mov
dec
lods
xor
add
clc
xor
add
or
cld
jecxz
xabort
cmp
stos
cmp
es
stos
jae
add
jbe
rolb
add
push
shll
add
sub
push
nop
jmp
aam
pop
fs
pop
aam
shufps
dec
sahf
ret
cmp
leave
test
fcmove
rcl
pop
cmp
ss
clc
pop
push
popa
add
mov
add
add
xchg
pop
inc
add
cmp
in
add
add
add
inc
clc
inc
clc
lcall
inc
add
nop
jmp
aam
aad
pop
cmpsl
clc
out
push
inc
add
pop
rolb
pop
daa
clc
je
cmpsl
clc
mov
mov
xchg
ret
imul
scas
pop
dec
pop
fadds
clc
int
sar
mov
sub
pop
sbb
clc
mov
imul
insb
adc
test
bound
add
jnp
add
push
add
stos
adc
add
das
frstor
clc
aam
sub
add
dec
dec
and
add
into
fwait
mov
fcmovnbe
dec
stc
mov
fcmovu
insb
xchg
test
test
cmp
stc
cmp
push
add
cmpsl
clc
jp
imul
test
inc
add
add
fsubs
clc
ret
clc
xor
add
and
add
stos
or
add
mov
jno
add
jge
pop
xor
clc
clc
hlt
sub
sbb
clc
in
inc
clc
mov
inc
add
jle
clc
xchg
inc
add
sar
adc
add
clc
cmp
in
out
xchg
push
clc
pop
clc
inc
clc
leave
mov
clc
jmp
pushf
push
jmp
imul
add
aaa
pusha
add
jne
add
add
add
sahf
pop
imul
and
add
shl
nop
jmp
add
jp
shlb
push
jge
jno
add
addr16
cs
push
out
nop
jmp
add
arpl
ss
gs
sbb
add
clc
xlat
jle
clc
pop
fwait
xabort
push
clc
inc
add
adc
add
addr16
mov
clc
sbb
clc
in
stc
jns
clc
xlat
test
cmp
dec
sarl
data16
bound
add
pushf
repnz
push
add
cmp
clc
and
add
add
sti
popa
add
int3
lods
daa
clc
sti
mov
add
shrb
mov
add
xchg
inc
clc
cmpsb
clc
mov
testl
push
mov
int
add
pop
aad
clc
dec
push
cmp
nop
jmp
pop
lock
dec
pushf
add
call
nop
jmp
aad
add
cmp
and
nop
outsl
sub
clc
arpl
add
clc
dec
pop
sar
clc
sub
sbb
clc
outsl
stc
push
clc
mov
repz
pop
stos
pop
dec
aaa
fdivrs
pushl
fmull
or
decb
add
shl
clc
xor
lods
rol
clc
add
xbegin
cli
lcall
add
xor
clc
xchg
mov
jge
clc
mov
mov
dec
stos
or
push
adc
add
add
movsl
clc
mov
adc
dec
xor
lods
lahf
iret
ret
clc
das
sub
sbb
clc
cmp
clc
mov
xchg
call
clc
push
mov
nop
jmp
jp
fisubrl
clc
imul
or
je
clc
sbb
clc
dec
hlt
inc
clc
nop
mov
sub
cmp
setnp
lcall
add
lods
aas
leave
daa
clc
call
add
adc
clc
je
add
cmp
cmc
xchg
fwait
xchg
mov
xchg
in
dec
sbb
clc
pop
test
add
xchg
inc
add
nop
push
cmp
cmp
jg
fistps
ret
clc
mov
aas
cmp
mov
loopne
or
dec
or
clc
call
jmp
add
sbb
push
push
mov
xchg
ret
xchg
fdivrs
and
add
jne
add
lock
add
test
or
xchg
into
cmp
dec
adc
add
sub
add
adc
add
clc
into
incl
test
add
adc
add
ret
clc
dec
cmp
clc
cmp
clc
sbb
fwait
push
test
sbb
clc
into
loop
push
add
push
add
stos
pop
fdivs
add
and
add
pop
inc
add
fistl
add
push
add
push
cmp
mov
nop
jmp
rcrb
adc
sub
stc
jno
add
add
aam
sti
cld
test
clc
scas
xor
add
add
inc
clc
je
sahf
jge
pop
scas
mov
clc
cmc
sub
imul
add
mov
cmp
add
adc
add
mov
jbe
add
add
add
add
add
or
cmp
clc
sbb
push
jecxz
and
add
mov
test
add
add
clc
sti
lret
jnp
dec
shlb
add
inc
add
loope
dec
test
in
jae
add
add
pop
add
add
insb
mov
xchg
mov
fisttpll
stc
negl
xabort
add
dec
lods
popf
rcrb
jmp
arpl
add
mov
add
push
clc
popa
add
fistps
or
add
and
adc
add
add
and
add
mov
lods
das
add
add
clc
xchg
lea
sar
add
repz
push
jbe
nop
jmp
lock
test
fs
fistpll
pusha
add
jne
clc
and
add
add
add
jnp
mov
imul
cmpl
add
add
out
cmp
clc
dec
out
mov
push
sar
clc
ret
push
add
rep
cmp
add
add
out
es
data16
bound
add
sbb
cs
mov
inc
add
stc
push
or
xchg
xchg
out
stc
popa
add
ljmp
mov
nop
jmp
add
add
sbb
clc
es
jae
add
clc
sub
cld
lods
push
cwtl
xchg
fstp
push
bound
add
inc
add
stos
sub
clc
int
add
nop
cwtl
push
add
xlat
icebp
lcall
add
nop
jmp
pop
arpl
clc
mov
push
es
nop
jmp
add
or
addr16
mov
clc
lahf
inc
add
out
mov
and
mov
clc
addr16
jecxz
adc
add
push
add
mov
clc
sti
clc
inc
add
jge
clc
inc
add
mov
fwait
xchg
inc
clc
xbegin
mov
add
jne
xor
add
add
lods
ret
clc
mov
add
add
cmp
clc
out
push
add
outsb
es
xor
add
pop
and
add
test
pop
fldenv
add
add
nop
jmp
loopne
fiaddl
fiaddl
add
jle
add
mov
add
mov
cs
dec
mov
out
stos
adc
add
sbb
nop
pop
add
xchg
jnp
dec
push
jmp
pop
and
mov
adc
clc
lret
jle
dec
pop
popa
add
sar
data16
cmp
jae
add
and
add
add
mov
add
push
add
dec
into
push
add
cmp
pop
mov
add
add
jg
clc
clc
daa
clc
mov
add
xabort
add
push
add
dec
jne
add
push
jmp
jle
xabort
mov
inc
clc
pop
mov
es
negb
ficoml
add
fs
and
dec
cmp
add
dec
insl
xchg
push
dec
cmpsl
clc
pop
sub
cmc
outsl
xor
add
lods
push
dec
sbb
sub
or
dec
jmp
cmp
popf
inc
add
inc
add
fadd
clc
add
sar
or
clc
mov
jecxz
and
add
clc
cmp
xlat
xchg
pushf
nop
icebp
mov
shll
ror
outsl
in
pop
xchg
or
cwtl
int
jb
add
dec
lahf
jmp
mov
clc
inc
clc
cwtl
adc
add
leave
mov
add
loopne
mov
sbb
jns
xchg
adc
add
or
add
and
mov
adc
fadds
add
sub
fdivl
clc
mov
clc
mov
add
xchg
cli
fldenv
clc
outsb
lret
add
arpl
add
rorb
testb
clc
sti
jle,pt
inc
add
mov
in
xchg
sub
jl
add
mov
fs
fisttpl
add
sti
testb
clc
adc
add
enter
add
add
add
sub
add
imul
ret
xchg
jns
sbb
add
in
xchg
out
mov
ljmp
das
clc
call
add
outsb
rolb
xbegin
add
push
mov
xchg
ret
outsb
bound
inc
clc
ljmp
cmp
sahf
notl
clc
xchg
popf
arpl
add
ljmp
dec
fisttps
mov
sub
jae
add
sbb
clc
fs
movsl
clc
ds
jae
add
jnp
inc
clc
sbb
mov
clc
mov
mov
nop
mov
inc
clc
stos
lahf
sub
clc
or
daa
clc
scas
or
ja
jecxz
mov
cs
add
outsl
out
ja
scas
mov
dec
pop
clc
aaa
xlat
out
inc
clc
cmp
clc
je
add
push
clc
add
xbegin
sbb
outsl
or
mov
outsb
jb
add
sbb
decb
aaa
cmpsl
clc
xor
add
mov
add
dec
cmp
mov
faddl
add
clc
dec
sti
aam
clc
inc
clc
clc
fs
mov
xlat
cltd
push
add
in
adc
add
stos
das
cmp
lock
add
add
loopne
mov
es
mov
clc
sti
mov
clc
push
add
jnp
mov
into
xor
add
ret
clc
filds
add
das
dec
jp
and
add
mov
into
xor
movsl
clc
out
lahf
cmp
sar
lret
ja
add
push
pop
in
inc
clc
rolb
add
jmp
push
add
enter
dec
jecxz
aaa
lcall
dec
movsb
clc
repz
cmp
clc
ljmp
add
out
sub
iret
cmp
clc
je
add
nop
pushf
test
add
inc
clc
and
add
add
outsb
in
jmp
add
cmc
dec
and
add
bound
add
clc
iret
mov
add
cmpsl
clc
xlat
inc
add
push
cmp
clc
jp
xchg
mov
jl
xor
clc
jo
add
nop
jl
add
or
add
or
add
add
clc
stos
sbb
enter
nop
jmp
or
cmp
mov
push
mov
xchg
ret
add
add
mov
sub
sbb
dec
cmp
es
js
jns
dec
aas
popa
add
mov
clc
data16
add
add
aas
std
or
and
add
add
clc
paddq
pop
cwtl
jge
push
xor
add
nop
jmp
loop
or
push
nop
jmp
add
pop
add
inc
add
sbb
clc
sub
xbegin
loopne
pop
pop
mov
inc
add
incl
adc
add
int
and
ret
clc
push
add
loop
mov
clc
clc
mov
mov
xchg
ret
add
inc
add
xchg
sbb
pop
pop
test
mov
clc
fldenv
add
mov
xor
add
mov
mov
adc
add
clc
mov
clc
lods
es
cmpsb
clc
mov
clc
or
mov
jmp
cmp
or
add
clc
mov
add
rorb
mov
clc
sbb
mov
aam
add
fildl
imul
mov
sub
mov
mov
clc
out
mov
jb
add
clc
mov
jo
add
push
mov
repz
add
and
adc
add
rol
clc
js
cltd
sub
add
clc
dec
jg
pop
clc
mov
clc
mov
in
dec
clc
call
jmp
add
jp
subb
pop
fs
mov
clc
push
jmp
loop
adcb
clc
pop
call
clc
outsl
mov
test
popf
jg
jle
clc
ds
clc
jnp
daa
clc
sti
xchg
fcomi
iret
inc
clc
mov
scas
mov
fdiv
xchg
pop
xchg
jmp
in
pop
imul
sub
add
jno
add
push
add
lcall
pop
push
add
enter
add
ljmp
add
rcrb
test
mov
nop
jmp
pop
mov
cltd
cmp
add
inc
add
mov
movsl
clc
ret
clc
mov
clc
fs
or
loopne
nop
sbb
popa
add
pusha
add
lock
imul
adc
aam
imul
cmp
xchg
in
rcl
push
clc
jecxz
clc
loopne
jp
out
push
jmp
sbb
bound
add
clc
cmpsb
clc
lea
xor
add
push
clc
inc
clc
sar
movsb
clc
mov
push
add
cmp
clc
dec
sub
sahf
xchg
loop
push
mov
lahf
inc
add
out
sub
sbb
xchg
xchg
push
jl
outsb
ret
iret
sub
and
add
clc
mov
test
adc
add
add
cmp
clc
fnstsw
pushf
dec
stos
adc
add
xbegin
mov
cmp
clc
add
add
jge
sub
and
add
sti
cmp
add
aam
clc
adc
add
mov
decl
add
pop
cltd
mov
jmp
nop
jmp
and
addb
or
out
insl
sub
mov
jmp
add
pop
pop
inc
clc
into
jecxz
fincstp
rorl
and
inc
clc
sbb
cmp
clc
shr
mov
cmp
call
es
jecxz
cmpsb
clc
fstpt
je
clc
outsb
adc
add
or
lcall
add
sub
xchg
dec
cmp
add
daa
clc
or
pop
push
mov
xchg
ret
pop
add
out
add
push
add
insb
enter
test
aad
add
and
add
mov
jp
fisttpl
clc
and
add
jne
rolb
add
int
cs
or
add
add
clc
test
leave
ja
je
out
lret
or
add
clc
jnp
sbb
aaa
imul
xor
add
clc
mov
dec
xchg
imull
or
clc
cltd
xlat
xchg
pop
arpl
add
add
mov
clc
lods
xlat
mov
or
add
jbe
add
test
add
push
add
sar
add
inc
add
adc
add
or
cmp
clc
cmp
pop
jns
shll
ds
jb
add
lret
jmp
nop
jmp
mov
lock
mov
xlat
ret
clc
in
and
add
sbb
mov
add
out
cld
mov
jge
xchg
cs
pusha
add
call
or
decl
sbb
add
jae
or
clc
adc
add
add
lcall
add
add
pop
and
add
cmpsb
clc
pop
sbb
mov
rolb
add
int3
js
movsb
clc
mov
cwtl
fldt
decb
inc
clc
sbb
clc
sahf
scas
sbb
clc
nop
sar
clc
xchg
cmp
add
outsl
or
clc
inc
clc
in
sub
jae
add
add
pop
nop
jmp
orb
xchg
xor
movsb
clc
jnp
sub
clc
mov
out
int
js
pop
mov
xor
mov
jo
add
sbb
adc
add
add
rolb
jge
xchg
jmp
jg
nop
jmp
or
imul
int
or
add
mov
jae
jmp
add
shrl
jmp
clc
notl
add
ss
mov
nop
jmp
adc
add
and
add
std
movsb
clc
and
mov
cmpsb
clc
pop
nop
push
addr16
repz
repnz
ja
scas
jbe
clc
add
cmp
clc
mov
fsubs
add
lret
jmp
out
call
add
cmp
add
loopne
mov
clc
cmp
sti
mov
adc
mov
add
add
sbb
pop
clc
push
add
pushf
iret
cmp
add
sbb
mov
xchg
ret
add
arpl
push
leave
nop
jmp
sbb
bound
out
xabort
rcrb
nopl
jmp
add
pushf
add
or
clc
sar
lahf
lahf
scas
notb
add
jo
add
inc
add
mov
clc
ficoms
clc
or
add
hlt
test
inc
add
sbb
add
add
add
lods
lock
cmp
clc
jmp
clc
jl
push
cld
pop
or
clc
cmp
clc
cmp
dec
rcll
add
cmp
in
mov
add
out
loope
add
dec
ja
clc
jecxz
mov
add
add
int
add
and
add
stos
cmp
sbb
mov
incl
out
sbbb
add
jle
sar
add
pop
xor
add
or
add
clc
int3
xchg
mov
call
xchg
jp
scas
cmp
cmp
xchg
sar
sti
sbb
add
movsl
clc
lea
dec
jp
clc
fdivs
addr16
sar
add
sar
jb
add
in
fwait
mov
lret
leave
jecxz
popa
add
jl
adc
pushf
es
push
add
sarl
cmpsl
clc
lods
mov
rcrb
out
xchg
cwtl
push
add
xor
add
inc
add
xchg
xor
add
test
mov
add
out
movsl
clc
push
mov
clc
scas
cltd
xchg
mov
mov
repnz
loope
dec
daa
clc
sbb
or
sbb
lret
xabort
jno
add
xchg
push
in
xor
add
clc
scas
stos
sub
sub
mov
push
scas
clc
sti
jp
add
add
add
cmp
clc
sbb
clc
cwtl
pop
sbb
cli
out
jno
add
clc
pop
inc
add
rcl
push
in
incl
arpl
add
das
sbb
clc
js
adc
clc
push
add
test
push
cmp
push
add
push
jmp
add
imulb
sub
pushf
xchg
fcmovne
vcvtdq2ps
push
push
loope
jmp
arpl
adcl
clc
fdiv
out
test
movsl
clc
fmull
fdivrp
cwtl
push
fdivrl
and
add
fdivl
rcr
data16
xchg
cltd
and
add
std
mov
sar
add
dec
jmp
dec
test
sub
clc
cmp
mov
jmp
xchg
add
add
adc
add
daa
clc
push
aam
or
cli
mov
xor
add
add
dec
sbb
jb
add
clc
into
and
add
add
cmp
add
sar
popf
fistps
add
adc
add
add
bound
add
clc
movsl
clc
mov
xchg
pop
xor
add
lahf
clc
scas
inc
add
ss
adc
into
popf
pusha
add
mov
pop
clc
pop
pop
jo
add
pop
push
clc
insb
int
add
fxch
inc
clc
push
add
das
xor
add
add
jg
add
lret
shll
add
jo
add
mov
out
xchg
pop
icebp
rcrl
or
decb
in
push
loop
sbb
jmp
add
add
add
jmp
add
cmp
mov
dec
dec
addr16
mov
addr16
das
loope
pop
sbb
push
inc
add
pop
lret
xor
add
mov
nop
jmp
xchg
fdivrs
add
and
add
add
inc
add
sub
outsl
xor
leave
sub
xor
add
aaa
outsl
aaa
rorb
clc
push
add
das
xbegin
cmp
out
mov
clc
pop
out
mov
mov
push
adc
clc
mov
push
add
jecxz
aas
fcomps
cltd
repnz
jmp
add
dec
push
ror
jne
clc
push
add
dec
mulb
ljmp
jle
jl
push
daa
clc
or
in
xor
clc
pushf
or
div
sahf
fadds
pop
dec
xchg
xchg
bound
add
add
add
sub
mov
sbb
add
mov
insl
adc
clc
dec
in
fistps
clc
pop
lock
add
das
adc
add
add
gs
xor
add
repz
add
push
lock
pop
clc
cmp
add
add
cmp
sub
jno
add
add
test
add
pop
fcmovne
dec
in
push
mov
nop
jmp
add
and
mov
add
inc
add
mov
xchg
cltd
dec
sar
je
nop
jmp
xchg
pop
jno
add
sbb
jmp
add
sbb
arpl
mov
int3
dec
js
clc
es
fmull
add
in
inc
add
mov
clc
cmp
arpl
add
push
add
fldt
or
push
add
in
daa
clc
sub
xor
add
repnz
xor
add
or
scas
mov
das
cmp
repz
stc
nop
jmp
loop
cmp
cmp
and
mov
mov
lock
scas
into
and
add
add
jmp
ret
push
jmp
cmp
add
aad
clc
cmp
push
mov
xchg
ret
loop
fcompl
push
sti
enter
clc
xchg
jnp
cld
pop
shll
lods
test
push
clc
sar
jns
and
add
add
faddp
clc
sar
inc
clc
cmp
clc
and
push
add
scas
sti
sub
sarl
pusha
add
fprem1
stos
sub
jg
rcl
add
add
ljmp
cmp
imul
add
aaa
lret
incl
js
nop
jmp
jp
fcmovbe
add
push
ja
adc
add
add
push
cmp
int
clc
jne
cmp
cmp
xchg
sub
xor
add
mov
add
push
out
add
add
clc
cld
mov
movsl
clc
push
pop
xlat
loope
mov
clc
or
add
add
fidivs
xor
stos
movsb
clc
push
add
lea
jmp
addr16
mov
cmp
mov
clc
add
add
mov
out
fldt
pop
fcoms
pop
je
inc
add
in
add
add
xchg
fdivs
xchg
push
jmp
jae
pop
outsb
sbb
inc
clc
xor
add
mov
jmp
loop
loopne
adc
jg
clc
in
cmpsb
clc
div
jmp
clc
lock
cmp
ja
cwtl
sahf
movsb
clc
xchg
pop
clc
sbb
shll
jae
cmpb
xchg
push
jmp
add
dec
aad
add
add
pop
sub
and
add
mov
das
mov
popa
add
xchg
mov
push
lret
repz
pop
clc
cmp
add
inc
clc
push
clc
xlat
int
push
lods
or
lcall
add
test
arpl
add
fsubs
add
icebp
xchg
cmp
daa
sub
add
add
pop
pop
clc
dec
gs
ficompl
clc
xor
add
fsts
add
clc
pop
jmp
clc
in
cmp
push
add
push
and
add
imul
mov
and
add
fstpl
aas
mov
xchg
push
dec
pop
mov
jo
add
popa
add
std
pushf
cmp
push
cli
xchg
into
sbb
paddq
ljmp
adc
add
loopne
adc
rep
push
mov
xchg
ret
pop
add
add
clc
outsl
push
jl
clc
bound
add
add
add
add
add
lcall
or
icebp
inc
add
or
xor
push
mov
xchg
ret
jg
mov
clc
mov
sarl
push
pop
fnstcw
clc
inc
add
xchg
arpl
add
xlat
mov
nop
jmp
xor
mov
in
data16
mov
mov
test
insl
add
cmp
mov
cld
fcoml
cmpsb
clc
loop
lret
mov
xchg
into
sbb
xor
add
or
mull
sbb
dec
fdivl
add
add
mov
pop
lret
jg
es
dec
incb
add
clc
idivb
xor
push
add
in
inc
clc
pop
push
add
pushf
fcmovnbe
jbe
clc
mov
nop
jmp
add
push
add
movsb
clc
mov
add
add
cmp
push
add
mov
push
cmp
add
cmp
add
or
add
scas
repz
jmp
add
xchg
add
add
pusha
add
jns
test
sub
jmp
xor
add
insl
out
out
cmp
clc
push
cmpsl
clc
ds
and
add
clc
or
clc
mov
clc
pushf
and
pop
push
mov
inc
clc
pop
iret
xchg
insl
jl
jne
nop
jmp
or
xor
add
add
bound
add
in
fisubs
add
dec
pop
icebp
gs
mov
scas
jne
clc
jbe
clc
sti
pushf
clc
out
idiv
leave
adc
add
clc
pop
imul
clc
inc
clc
jge
fldcw
xor
add
add
clc
push
clc
cmp
clc
insb
es
or
add
scas
stos
repnz
clc
test
xor
add
add
pop
clc
xor
outsl
sar
add
push
add
sar
clc
sahf
iret
hlt
sar
fistl
add
add
clc
xor
add
add
add
clc
repz
clc
dec
or
clc
test
add
xor
add
sbb
test
test
call
add
dec
add
clc
inc
clc
pop
inc
add
fidivrs
clc
jns
add
mov
clc
pop
jge
fisubs
add
add
add
dec
hlt
mov
nop
jmp
and
rcll
sub
pop
pop
clc
or
dec
ds
xor
nop
jmp
add
pop
mov
out
clc
add
xabort
ret
add
and
add
sahf
js
push
arpl
add
add
sti
cli
dec
or
add
scas
filds
divl
add
mov
mov
add
clc
or
push
cmp
clc
gs
stos
xchg
hlt
insl
pop
clc
in
cmp
movsl
clc
xabort
xor
mov
inc
clc
mov
add
in
cmpsl
clc
adc
add
push
lcall
clc
adc
pop
clc
jle
mov
clc
ss
cld
frstor
and
add
xchg
mov
add
xor
add
add
push
push
add
adc
add
add
clc
pop
fidivrs
clc
je
add
sahf
test
popa
add
arpl
add
mov
js
clc
mov
push
inc
clc
insl
mov
cli
aam
fucomp
addr16
inc
add
sar
clc
jo
add
inc
add
shlb
dec
sar
loope
add
add
clc
sub
jecxz
lods
add
add
clc
lcall
movsl
clc
shll
bound
add
add
nop
jo
add
es
add
add
add
add
movsl
clc
xor
add
add
es
pop
inc
add
lods
dec
wbinvd
fsts
add
clc
ja
add
add
hlt
sar
clc
fiadds
dec
test
or
sbb
jg
or
add
adc
add
jmp
cltd
icebp
mov
clc
jnp
clc
cmp
clc
push
push
add
ret
clc
cld
add
ja
clc
dec
fs
jl
clc
sbb
add
or
pop
fisttpl
lods
push
pop
imul
fcmovu
add
add
inc
add
pop
clc
test
sbb
xor
mov
add
push
xchg
or
add
cmp
mov
scas
xchg
in
or
inc
add
repnz
dec
ret
clc
test
pop
ljmp
add
add
stc
ljmp
decl
jmp
adc
arpl
add
xbegin
xchg
push
mov
repnz
repz
clc
push
add
pushf
out
sahf
test
clc
and
add
fucom
clc
shlb
lahf
pop
clc
add
clc
lods
mov
data16
lret
cmp
sahf
dec
add
clc
sub
add
add
push
push
mov
xchg
ret
add
jae
clc
cmp
add
mov
ja
mov
and
add
clc
insb
mov
add
sub
clc
mov
arpl
add
adc
add
mov
add
lcall
add
push
std
sti
repz
fidivrl
mov
nop
jmp
sbb
aam
clc
xchg
cmp
jb
add
cld
cmp
clc
and
sti
nop
jmp
cmp
pushf
pushf
arpl
ficomps
lret
leave
dec
cmc
dec
cltd
pop
clc
or
dec
xor
add
jecxz
cltd
adc
add
stos
faddl
clc
sar
add
and
add
mov
clc
repz
sub
clc
mov
add
jae
add
clc
fisubrl
stos
outsl
jecxz
popa
add
fs
aaa
out
pop
scas
int3
leave
add
pmulhuw
lods
outsl
ss
xchg
movsl
clc
test
movsl
clc
loope
inc
clc
push
add
cmp
jmp
mov
pop
pop
and
inc
clc
mov
es
outsl
inc
clc
xchg
push
popa
add
mov
lcall
add
add
dec
lcall
add
push
mov
xchg
ret
push
or
add
into
xchg
cmp
dec
cmp
cmp
popf
nop
inc
add
cld
xabort
add
cltd
xchg
das
adc
add
add
xor
scas
inc
clc
sub
clc
pop
clc
or
clc
mov
add
mov
in
cltd
adc
add
mov
clc
pop
mov
iret
scas
decl
add
or
sub
cmpsb
clc
mov
add
lcall
inc
add
sar
inc
add
inc
add
in
insb
cltd
fs
xchg
lcall
jmp
mov
add
clc
rcrl
out
clc
lret
out
inc
clc
cmc
stos
pop
clc
jge
outsl
scas
data16
mov
nop
call
scas
test
or
clc
cmpsb
clc
sub
sbb
add
in
cmp
clc
jae
add
clc
lea
clc
inc
clc
or
jo
add
dec
fisubl
xor
add
decb
outsl
int
jmp
push
dec
mov
add
nop
xchg
mov
ljmp
clc
lret
mov
xchg
pop
shrl
dec
cld
sub
in
pop
jp
clc
or
add
add
sub
sub
mov
shl
clc
lock
or
xabort
lret
pushf
mov
clc
sbb
mov
clc
push
jo
add
pusha
add
sbb
add
add
sbb
add
xchg
daa
clc
mov
mov
out
cmp
jl
add
sbb
clc
sar
or
mov
mov
push
add
arpl
add
push
push
pop
mov
xchg
xor
add
ds
mov
nop
jmp
adc
or
sarl
mov
sti
and
clc
into
in
aam
inc
clc
lret
push
lret
insl
data16
cld
and
add
add
scas
stos
add
add
clc
add
add
cmp
jp
clc
cs
dec
shlb
mov
nop
jmp
add
add
add
sbb
jge
nop
jmp
pop
pop
add
sbb
inc
clc
pop
mov
repnz
stos
iret
ja
push
add
jg
clc
clc
adc
add
clc
cwtl
aad
inc
clc
adc
add
push
add
test
push
add
xchg
ret
arpl
fistl
dec
xabort
hlt
bnd
add
push
call
popa
add
add
sub
mov
add
inc
clc
cltd
mov
pop
nop
jmp
xor
add
call
pop
scas
xor
add
insb
pop
or
clc
or
clc
dec
ss
add
or
add
add
cmpxchg
clc
pushf
cltd
imul
pusha
add
adc
add
add
fadd
clc
cli
ds
sar
mov
dec
sar
clc
lret
imull
sar
adc
pop
data16
loop
pop
pop
mov
negb
fidivrl
sbb
clc
cmp
add
out
cld
add
add
sub
add
mov
mov
nop
jmp
imul
loop
aam
mov
clc
sbb
mov
add
nop
jmp
xchg
shll
in
cli
das
cmp
jb
add
add
outsb
push
sahf
dec
dec
outsl
xlat
xor
add
mov
xor
add
clc
add
add
addr16
fcompl
dec
jmp
dec
jg
add
sbb
adc
jo
add
popa
add
loop
cmc
ljmp
leave
add
data16
pop
clc
scas
test
jmp
add
imul
imul
or
xabort
xlat
xchg
push
xchg
inc
add
loope
mov
add
clc
out
push
clc
mov
clc
js
jl
xchg
inc
add
icebp
push
add
inc
add
adc
add
add
push
mov
and
add
push
clc
jbe
icebp
cmp
icebp
inc
add
popa
add
or
hlt
in
add
add
sti
iret
in
shlb
scas
gs
lahf
fsubs
clc
out
mov
cld
sub
clc
jg
or
add
decl
add
xchg
jo
add
sbb
mov
adc
jo
add
sub
adc
outsb
lahf
and
add
in
test
mov
push
data16
ds
and
test
stos
xor
add
and
add
mov
test
call
add
pop
arpl
add
xor
cmp
clc
jg
add
or
lahf
push
add
mov
push
pop
ljmp
clc
mov
sarl
mov
cmp
clc
rol
clc
das
sti
int3
add
add
leave
dec
lret
jl
clc
mov
addr16
or
mov
mov
scas
sub
clc
int3
cwtl
imul
add
sub
push
push
add
mov
popa
add
mov
add
in
es
test
fs
jns
dec
mov
clc
dec
clc
jle
clc
pop
clc
lret
sti
addr16
dec
mov
lods
xbegin
arpl
add
mov
xor
add
mov
clc
mov
imul
insb
test
iret
arpl
add
jo
add
add
cmp
nop
jmp
and
and
cmp
jl
hlt
out
or
ja
xchg
adc
add
clc
popf
push
int3
inc
add
push
sbb
fistps
add
call
nop
jmp
jg
add
movsl
nop
jmp
fcmovu
push
arpl
add
je
aaa
push
inc
add
cs
push
popa
add
push
add
add
loopne
aas
cli
cltd
test
inc
clc
je
lods
int
add
xchg
ret
clc
mov
mov
xor
add
add
aas
xchg
in
aam
clc
sub
clc
or
clc
and
add
sarl
sub
nop
jmp
add
pop
mov
popf
jle
add
jo
add
clc
loopne
dec
aas
stc
dec
inc
nop
jmp
add
pop
rorl
jae
add
or
add
cli
or
add
nop
jmp
fcompl
push
push
stos
xchg
hlt
loopne
adc
add
mov
nop
jmp
fs
add
bound
add
out
sahf
push
add
xlat
cmpsb
clc
push
mov
add
add
sbb
jmp
pop
loopne
add
cmpsb
clc
inc
clc
fsubrs
clc
dec
shll
adc
add
add
add
call
pop
and
add
shl
clc
adc
add
clc
aad
aaa
xchg
xchg
in
pop
and
add
hlt
cmp
stos
sbb
add
adc
add
dec
cmp
ss
xor
clc
test
imul
sub
add
fiaddl
in
mov
add
hlt
hlt
sub
add
loop
mov
adc
add
mov
clc
in
push
add
adc
add
push
sar
push
xlat
cmp
add
adc
cmp
push
mov
scas
pusha
add
and
add
add
test
mov
data16
fsubl
add
rorb
xabort
clc
pop
daa
clc
mov
scas
sub
push
and
or
je
clc
cmp
clc
mov
jno
add
xchg
pop
sub
dec
jnp
sarl
push
add
push
lcall
or
add
clc
fadds
add
jge
jo
add
cmp
clc
add
add
add
push
jg
mov
push
mov
xchg
ret
and
ret
clc
lret
mov
ss
push
add
sub
clc
jle
clc
mov
clc
in
mov
fnstcw
jp
icebp
jge
mov
repz
add
add
pop
mov
pop
in
cld
enter
push
xchg
decb
mov
jb,pn
add
clc
inc
clc
add
add
rorl
insl
adc
add
add
clc
lret
ds
clc
xlat
cmp
clc
mov
add
scas
cmp
sbb
stc
aas
jbe
out
adc
add
add
cmp
push
jno
decl
mov
pushf
xchg
xchg
outsl
mov
clc
push
add
repz
call
add
push
imul
clc
and
add
xabort
add
out
xchg
xlat
popa
add
ds
add
dec
jno
add
cwtl
repz
lock
add
add
add
mov
sbb
add
push
add
lahf
popa
add
xchg
aaa
fxch
pop
xbegin
cmpsb
clc
and
add
test
nop
jmp
outsb
and
mov
add
test
pushf
clc
stc
sar
clc
std
ja
mov
addr16
test
rcr
ss
cld
xchg
test
adc
add
mov
add
popf
xor
hlt
test
sbb
dec
inc
add
push
add
jbe
add
jp
cwtl
inc
clc
je
cli
or
movsb
clc
icebp
es
sub
clc
mov
add
gs
jbe
cmp
clc
mov
jmp
cwtl
imull
add
js
add
pop
clc
inc
clc
ljmp
inc
add
inc
clc
aaa
mov
pusha
add
push
add
pop
add
mov
add
je
adc
add
iret
dec
pop
dec
cs
add
add
mull
add
ret
clc
xchg
popf
test
xor
add
clc
add
add
testb
sahf
lods
push
add
pop
cmp
neg
push
into
out
jne
and
add
in
push
add
aaa
ret
clc
mov
movsl
clc
insl
ficoml
add
add
sbb
mov
clc
push
add
jge
mov
mov
sub
popa
add
int
xor
add
jmp
push
mov
xchg
ret
dec
add
add
clc
adc
mov
loope
dec
sub
clc
sub
lret
or
cmp
add
fidivs
add
outsb
mov
imul
add
add
add
jae
add
insl
adc
add
add
sbb
push
mov
xchg
ret
imul
clc
nop
sahf
mov
sar
jbe
clc
add
push
stos
nop
jmp
add
xchg
and
pop
pop
cmpsb
clc
jnp
clc
hlt
xchg
sub
add
adc
add
add
adc
add
movsb
clc
and
leave
jns
push
clc
sbb
test
call
jmp
add
add
mov
jmp
mov
mov
out
push
add
movsb
clc
push
pusha
add
lcall
adc
add
clc
adc
add
ret
clc
xbegin
add
mov
pop
xchg
lea
int
add
ss
add
sub
push
call
nop
jmp
or
lret
cmp
test
or
test
fcomi
xor
or
mov
loop
inc
clc
push
clc
fldl
int
inc
add
outsb
out
in
or
add
int3
lahf
xor
dec
lods
jmp
clc
pop
ficompl
insl
negb
and
nop
jmp
mov
xor
orb
clc
jno
add
movb
mov
jmp
dec
adc
stos
cmp
cld
gs
in
clc
adc
mov
clc
loopne
outsb
inc
clc
int3
push
add
nop
jmp
or
xor
clc
in
ds
add
add
push
jl
clc
stos
jmp
cmc
push
add
test
cs
inc
clc
or
cli
jne
fs
loop
jecxz
sub
xchg
aaa
sar
lods
sti
lcall
cmp
pop
addr16
inc
clc
fwait
shr
out
cmp
sarl
add
add
clc
cmp
negb
nop
jmp
dec
arpl
ficompl
mov
nop
jmp
pushf
dec
dec
and
leave
mov
data16
test
out
pop
jle
cmp
and
add
or
cmp
sub
clc
and
add
add
inc
add
mov
push
xor
sbb
pause
jmp
out
add
outsb
add
push
jge
pop
jp
dec
int
inc
add
jns
clc
imul
add
add
xor
add
clc
sub
mov
dec
lods
sar
mov
add
add
adc
add
data16
or
sub
jmp
aam
cmp
fcmovbe
mov
cmpsl
clc
inc
clc
sub
clc
call
rep
push
mov
xchg
ret
add
cmp
je
clc
jno
add
jae
add
jns
inc
add
xchg
pushf
mov
fsub
clc
mov
add
mov
clc
sbb
cld
mov
clc
fsubrs
or
add
clc
mov
add
fwait
adc
sub
clc
lock
clc
pop
sbb
add
cld
dec
vshufps
xchg
cmp
inc
clc
fcompl
add
fstl
add
imul
add
clc
addr16
test
add
jl
clc
adc
add
clc
iret
stc
popa
add
fdivl
cmp
add
fs
ljmp
add
add
std
push
add
add
xchg
dec
leave
es
cmp
add
daa
clc
in
xchg
xabort
xor
add
cmp
jo
add
dec
xchg
sbb
call
pushl
add
adcb
add
add
clc
sub
push
add
sub
adc
add
push
add
cmp
mov
mov
clc
lods
out
pop
adc
add
ds
cmc
stos
fwait
sub
pop
in
or
sbb
pop
mov
xor
clc
adc
mov
clc
js
mov
mov
sbb
inc
clc
test
stc
loopne
cmp
notb
add
or
add
cmp
test
clc
pop
clc
push
add
fnsave
add
adc
add
sbb
out
adc
add
or
pop
clc
cwtl
sar
test
cmc
jno
add
outsb
push
clc
in
out
inc
clc
sarb
clc
cmc
sbb
iret
pop
cmp
clc
sahf
xor
add
add
in
loope
mov
add
add
add
push
add
ja
xor
clc
pop
mov
mov
add
adc
add
clc
xchg
jge
jp
decl
push
mov
xchg
ret
add
cmp
das
cmp
stos
movsl
clc
imul
aad
mov
dec
xchg
fisubrl
cmp
nop
jmp
fadds
add
and
add
fadds
push
mov
xchg
ret
fcmovnu
and
add
cmpsb
push
inc
add
mov
icebp
xchg
mov
clc
pusha
add
mov
insb
mov
add
stos
fcomps
lret
imul
lret
clc
fnstenv
add
xor
add
fisubs
es
add
add
clc
mov
data16
dec
cmp
mov
cmp
inc
add
aad
cmp
lret
fs
jae
add
add
add
add
adc
add
and
add
add
sbb
add
pop
xor
add
add
lcall
push
mov
clc
data16
cmp
repz
stos
sar
push
jns
lcall
dec
fiaddl
clc
out
or
icebp
loop
jo
add
shlb
loopne
test
fists
daa
clc
int
clc
sbb
xor
enter
xor
add
add
add
mov
jae
add
sub
adc
sub
shlb
pushf
out
es
pop
jns
clc
adc
add
clc
and
add
sar
iret
das
push
clc
dec
dec
and
add
or
clc
test
call
push
notrack
jmp
and
dec
add
loopne
add
lods
inc
add
pop
xchg
fadd
clc
cmp
clc
dec
dec
cmp
mov
out
mov
jae
add
lcall
mov
add
mov
lods
ss
add
add
inc
add
add
add
adc
inc
clc
xchg
test
adc
add
call
incl
pop
jae
inc
clc
cs
xbegin
lret
clc
pop
or
sub
lahf
mov
aad
sub
adc
clc
and
add
cmp
add
sub
mov
pop
sub
or
incl
imul
xor
adc
nop
loopne
or
icebp
fcomps
add
add
add
lea
ss
add
leave
mov
imul
add
aas
ss
xor
add
xor
nop
jmp
roll
jae
add
mov
mov
sahf
sar
jne
add
mov
rcll
add
lods
cmpsb
clc
pusha
add
jl
clc
leave
enter
xabort
sbb
mov
adc
add
sub
cmp
inc
clc
sub
or
xchg
aaa
fistps
add
push
lock
pop
leave
xchg
icebp
push
mov
imul
and
add
lods
jo
add
mov
add
pop
in
leave
sbb
pop
fbstp
add
dec
cmp
add
xbegin
xlat
clc
inc
add
xbegin
cmp
clc
mov
call
jmp
clc
test
js
sub
aad
stos
xchg
pop
xor
add
ficomps
bound
add
add
dec
sahf
xbegin
xor
jb
add
mov
fmul
push
mov
pop
clc
movsl
clc
ljmp
add
loopne
ror
test
mov
outsb
loope
sub
sbb
inc
clc
dec
push
clc
mov
add
mov
in
mov
insb
pop
cmp
clc
or
add
xor
add
ss
mov
cmp
mov
movsl
clc
xor
add
adc
fadds
add
int
loop
jecxz
fiaddl
add
cmp
xabort
jmp
add
outsb
mov
es
pop
sub
add
adc
add
das
cld
sub
mov
sub
das
cld
lods
neg
inc
add
pop
int
in
dec
data16
lea
aaa
out
in
mov
add
in
nop
insl
lret
cmp
stos
jnp
pop
into
loop
fwait
lea
add
mov
add
pop
mov
in
xchg
lret
jge
add
add
clc
sbb
clc
xchg
stc
xor
add
fwait
mov
dec
fwait
sbb
push
gs
sbb
mov
out
addr16
lret
push
and
nop
jmp
mov
aad
jl
clc
push
je
nop
jmp
pop
pop
sbb
add
push
add
mov
push
scas
mov
sub
cmp
cmp
add
jecxz
addr16
je
mov
add
add
xchg
je
xchg
mov
clc
fwait
inc
clc
sub
push
mov
nop
jmp
out
arpl
jb
add
add
add
add
out
dec
jbe
pop
xor
add
or
add
add
mov
rorb
push
add
jl
add
into
or
jne
nop
jmp
add
loop
clc
cmp
fimull
clc
loopne
ljmp
push
lcall
icebp
push
cmpsb
clc
cmp
xchg
mov
mov
cli
es
into
xchg
ja
pop
lret
mov
mov
clc
push
add
adc
add
nop
jmp
adc
outsb
or
clc
fcoml
inc
add
xor
add
and
mov
call
incl
mov
add
clc
cmp
add
nop
jmp
arpl
sbb
mov
sub
sar
and
add
ret
inc
clc
outsb
push
add
pop
xchg
push
int
clc
popf
mov
imul
nop
jmp
pop
or
lock
clc
inc
add
xor
popf
aaa
and
add
jae
add
add
stc
xlat
cmp
push
clc
inc
clc
adc
add
xor
add
clc
insl
aas
adc
lahf
pop
dec
xor
jecxz
jecxz
sub
bound
add
add
clc
and
add
insl
test
sub
add
add
nop
jmp
cmp
adc
add
sbb
ja
adc
add
add
mov
add
sub
push
push
sub
jnp
jo
add
clc
xchg
fisubs
lods
insb
out
aam
cmp
lea
clc
in
sti
sbb
rcr
incl
out
clc
sub
push
outsl
push
lock
adc
jg
outsb
movsl
clc
jle
sbb
add
mov
add
loop
clc
xor
add
add
add
sub
iret
std
jo
add
xabort
xor
add
mov
nop
jmp
fs
aam
fsub
rorb
movsl
clc
mov
imul
clc
loopne
and
int
cwtl
xor
add
dec
sub
lea
inc
clc
dec
lods
movsl
clc
pop
out
add
add
pop
rol
clc
mov
aam
incl
fildl
jnp
mov
dec
sub
mov
in
mov
clc
sbb
imul
clc
cmp
mov
popa
add
int3
mov
jne
nop
jmp
outsb
jg
xor
jge
es
fisttps
imul
inc
clc
jg
in
cmp
sar
dec
clc
ljmp
clc
pushf
inc
clc
pop
and
add
jecxz
mov
cmp
pop
pop
lea
push
nop
jmp
imul
add
add
sarl
clc
push
cmp
push
add
vcomiss
pushf
idivl
dec
sti
in
stos
outsl
mov
or
add
add
clc
fs
sar
inc
add
cmc
push
pop
push
mov
xchg
ret
add
cmp
sbb
pushf
adc
sub
add
popf
push
add
jne
pop
jecxz
cmp
clc
jnp
decl
test
stc
mov
call
subb
add
add
mov
push
jae
jmp
cmp
dec
add
clc
data16
jle
mov
cmp
ljmp
clc
sar
inc
clc
mov
xbegin
add
or
rcrl
add
lcall
popa
add
cmp
hlt
arpl
add
add
or
jae
add
cmp
std
jp
add
mov
cmp
sar
jbe
add
es
cs
pushf
jae
add
mov
clc
int
into
jae
add
mov
aam
dec
mov
add
sbb
mov
xchg
ret
cltd
jae
shr
loope
jno
add
clc
mov
cmpsb
clc
inc
clc
data16
xchg
dec
idivl
in
push
loope
fcmovbe
lock
adc
clc
mov
add
dec
adc
add
pop
mov
clc
push
add
push
nop
jmp
add
pop
mov
add
out
gs
adc
add
push
xor
ret
ficomps
inc
add
in
jmp
inc
jb
nop
jmp
add
jg
pop
hlt
nop
pop
sub
jle
add
jecxz
cmp
add
push
inc
clc
mov
mov
nop
jmp
rcrb
sbb
loope
fistpl
mov
mov
add
data16
jo
add
cmp
icebp
adc
add
add
mov
cld
inc
add
or
daa
clc
insl
clc
in
cwtl
fisttps
clc
or
clc
or
movsl
clc
push
call
nop
jmp
fiaddl
add
mov
clc
cmp
clc
das
cmp
jmp
clc
arpl
add
clc
cmp
add
scas
pop
jl
sbb
in
pop
loop
jb
add
push
clc
mov
ljmp
add
insl
xor
add
ljmp
push
jmp
add
imul
mov
add
mov
xchg
nop
jmp
adc
outsb
or
add
loop
jmp
test
mov
das
test
lret
mov
add
nop
jmp
mov
cmpb
xchg
xchg
into
add
cwtl
pop
int
cmp
add
and
add
clc
or
repnz
sub
int
mov
fyl2xp1
je
mov
jbe
lods
adc
add
add
clc
lret
enter
clc
add
add
cmp
clc
add
movsl
clc
push
clc
jb
add
clc
fimuls
mov
shl
movsl
clc
cmp
add
pop
xchg
mov
out
insl
repz
mov
dec
je
cmpsl
clc
faddl
add
and
pushf
adc
add
clc
cmpsl
clc
xchg
pop
sar
xor
clc
lret
inc
clc
cmp
test
pushf
das
sub
clc
mov
arpl
add
add
clc
push
aam
stos
cmc
js
aad
js
out
jo
add
sbb
clc
or
inc
add
comiss
xor
push
cli
push
add
push
mov
xchg
ret
subl
mov
test
push
mov
xchg
ret
or
and
add
jg
mov
or
clc
ljmp
inc
clc
fadd
clc
cld
jno
add
shlb
insb
jbe
clc
jo
add
add
data16
mov
test
adc
add
clc
icebp
xchg
mov
add
add
cmp
add
incl
loopne
mov
push
push
jnp
insl
xchg
mov
idivl
jno
add
add
sub
aas
ss
adc
sahf
in
out
in
lea
add
push
add
add
mov
add
fcoml
add
negb
jae
add
ja
mov
clc
in
dec
mov
clc
imul
add
dec
aaa
repz
jmp
dec
pop
dec
push
loop
xchg
and
mov
jae
add
clc
into
lods
pop
clc
js
inc
clc
ss
clc
icebp
inc
clc
mov
addr16
popf
jne
add
mov
mov
push
lea
lahf
dec
pop
cs
xor
clc
cmp
inc
add
sahf
out
or
jl
add
js
clc
cmpsl
clc
mov
xor
add
add
xabort
mov
cwtl
xor
add
add
pop
cmp
clc
aaa
xbegin
add
arpl
add
dec
icebp
sbb
add
mov
add
add
clc
sti
data16
mov
call
clc
dec
cmp
add
lret
add
data16
jb
add
dec
push
add
arpl
add
pop
xchg
int
jl
in
inc
clc
push
call
nop
jmp
pushf
add
int
add
enter
add
jae
add
add
pop
iret
cmp
cs
add
out
jbe
movsb
clc
ret
clc
jne
clc
xchg
adc
add
test
clc
fs
jecxz
fsubrp
push
xchg
imul
aaa
test
push
jl
sub
clc
mov
lods
jecxz
dec
jbe
aad
ud0
jo
nop
jmp
or
clc
cmp
add
pusha
add
aas
leave
jecxz
or
pop
mov
mov
nop
jmp
or
fcmovu
mov
adc
add
jecxz
or
sub
add
add
clc
add
add
add
outsb
inc
clc
insb
data16
inc
clc
aam
clc
out
sbb
cmp
mov
stc
add
add
add
add
mov
clc
adc
inc
add
aad
dec
fnstcw
fadd
clc
imul
clc
jae
add
xor
add
clc
je
cmp
clc
leave
in
inc
clc
aad
ss
clc
mov
inc
clc
cmp
cmpsl
clc
xor
add
push
add
inc
add
inc
add
sbb
cmp
mov
pushf
enter
sbb
call
push
jmp
clc
push
add
push
add
fldl
add
sahf
sbb
mov
clc
repnz
pop
xchg
cwtl
idivb
push
nop
jmp
add
pushf
ds
mov
add
fwait
cmpsl
clc
dec
adc
add
dec
test
mov
insl
and
add
clc
ret
add
scas
jno
add
add
cs
inc
clc
lods
mov
add
and
add
add
and
add
xchg
dec
fadds
pop
sar
in
repnz
xchg
add
add
cmp
cmp
int3
dec
jecxz
sbb
cli
dec
lret
clc
popf
loop
cmp
clc
and
add
sbb
push
ret
jp
add
add
ficoms
add
test
sub
jbe
sar
mov
xor
add
add
insb
add
in
sbb
sub
ljmp
add
pop
repnz
xchg
inc
add
jmp
sbb
add
add
in
jp
clc
push
xchg
dec
movsl
clc
dec
outsb
dec
jb
add
add
enter
pop
clc
movsb
clc
add
add
mov
add
add
clc
cmp
push
clc
lret
inc
add
mov
pop
cmp
add
add
pop
and
add
push
add
mov
pushf
popf
fsubl
add
aaa
jns
sbb
jae
add
add
sub
clc
dec
mov
test
sub
call
dec
sub
add
sbb
gs
fdiv
je
add
imul
add
jg
mov
ret
clc
and
add
clc
inc
add
es
xchg
and
add
clc
xchg
hlt
stos
push
pop
nop
jmp
aad
cmp
fiaddl
xchg
dec
clc
inc
clc
dec
pop
jb
add
add
or
clc
jmp
push
shll
popf
jle
clc
cmp
adc
cmp
repz
add
out
push
add
mov
scas
rolb
clc
mov
mov
aaa
inc
clc
mov
add
cmp
sub
fimull
mov
clc
jp
sahf
iret
cmp
add
add
mov
cmp
jno
add
aaa
jl
clc
data16
xchg
fcoms
add
and
and
add
add
cs
xchg
lret
cmp
pushf
cwtl
data16
imul
mov
ror
xabort
cltd
push
and
inc
clc
movsb
clc
out
pop
mov
and
add
lea
nop
jmp
add
add
jae
add
add
push
clc
sbb
add
xor
add
clc
fmul
jae
add
push
mov
xchg
ret
cmp
sub
test
sahf
jnp
clc
pop
sbb
clc
cld
rcl
jmp
das
push
fcmovne
jmp
nop
jmp
outsb
add
pop
add
add
sar
xbegin
fsubs
imul
ds
inc
nop
jmp
add
add
arpl
pop
add
lods
jl
xchg
popa
add
adc
add
andl
jle
decl
dec
add
add
out
push
inc
clc
sbb
call
incl
imul
xor
add
sub
clc
clc
cmc
cmpsb
clc
fdivrs
sbb
daa
clc
test
xchg
aad
bound
add
je
xchg
ja
sub
sarl
notb
cmp
adc
xchg
mov
movsl
clc
ret
add
adc
clc
out
xchg
leave
cmp
icebp
xbegin
add
aam
test
xor
add
sub
clc
pop
and
add
add
cmpsl
clc
adc
add
out
cmp
test
call
jmp
mov
clc
xbegin
mov
cmp
dec
cltd
rcl
adc
clc
fistpll
push
add
shl
clc
cltd
lea
mov
sbb
cmp
shll
jp
test
enter
jns
dec
nop
jmp
addl
pushf
and
xchg
mov
inc
clc
xchg
outsl
mov
lcall
popf
data16
mov
fcoms
pusha
add
scas
cmp
mov
in
jne
sar
add
lret
xor
add
jno
add
add
mov
jle
in
adc
add
nop
jmp
add
dec
add
add
cmp
xor
add
add
bound
add
add
jl
clc
iret
movsb
clc
or
clc
fsubrl
clc
jne
xchg
sbb
clc
leave
xor
insb
xchg
xor
add
xchg
mov
add
add
xchg
iret
add
fwait
leave
xor
add
push
pop
call
incl
adc
sub
out
cld
lods
ret
clc
xchg
sbb
stos
mov
out
jnp
push
mov
nop
jmp
mov
cmp
pop
es
jge
or
add
push
ret
mov
mov
xchg
ret
dec
add
add
leave
xor
add
add
pop
adc
nop
jmp
sbb
adc
and
add
add
add
jl
mov
jmp
cmp
call
pop
jg
add
mov
clc
mov
mov
add
dec
push
dec
xabort
and
add
add
pushf
cltd
adc
add
dec
popa
add
jbe
add
add
clc
ficoml
popf
decb
mov
nop
jmp
add
out
ror
cmp
clc
into
adc
bnd
adc
add
add
clc
and
add
or
push
add
shlb
aaa
repnz
dec
add
add
add
inc
add
not
cltd
iret
xchg
xor
dec
rclb
add
scas
mov
clc
stc
clc
fdivrs
sbb
stos
sbb
add
mov
or
mov
clc
int
lods
mov
sub
aam
push
xbegin
add
add
add
add
clc
xor
add
std
cltd
test
clc
mov
add
pop
int
rclb
add
negb
dec
lret
pop
clc
fwait
xbegin
add
cmp
add
not
mov
add
popf
cltd
xchg
aad
push
cwtl
adc
add
cwtl
mov
cmp
clc
ja
sub
add
add
fsubr
jg
push
mov
clc
push
comiss
sub
sbb
clc
mov
ret
mov
clc
dec
cltd
leave
dec
jge
ror
mov
jns
nop
xchg
loope
pop
push
add
push
dec
int3
in
mov
cmp
add
dec
cltd
or
fsub
clc
pop
decl
test
call
jp
arpl
xchg
loopne
outsl
popf
mov
icebp
shr
jo
add
clc
loope
xor
clc
movsl
clc
js
js
clc
mov
jmp
add
add
dec
test
pop
mov
inc
add
daa
clc
xchg
or
add
add
dec
arpl
add
xor
add
nop
jb
add
in
sar
stos
sbb
cmp
clc
cmp
imul
xor
add
clc
rclb
add
insl
outsl
lods
test
add
data16
xchg
lods
adc
add
add
add
icebp
dec
push
clc
fisttpl
push
ror
sbb
cmp
clc
int
push
add
lahf
inc
add
int
inc
add
xbegin
clc
fs
dec
mov
push
add
jp
popf
push
dec
insb
addr16
movsl
clc
mov
fwait
test
js
add
icebp
addr16
cmp
pop
cmp
clc
iret
mull
clc
scas
cmc
mov
xor
mov
test
sahf
cmpsl
clc
cmp
sbb
or
clc
insl
adc
xor
add
cli
in
ds
pop
xchg
adc
mov
ss
push
add
into
int3
lret
movsl
clc
push
adc
add
imul
lret
inc
add
jle
clc
push
popa
nop
jmp
fiaddl
add
lock
arpl
out
cmp
xchg
pop
dec
test
xor
aaa
xabort
sahf
sub
scas
cmp
and
add
inc
clc
add
clc
inc
add
imul
mov
add
mov
jae
add
in
xor
add
clc
adc
add
add
sub
mov
clc
inc
clc
repnz
mov
pop
mov
lahf
cmp
clc
icebp
fildl
add
add
dec
inc
clc
cli
jmp
add
cmp
add
js
dec
mov
rcll
add
bound
add
add
jns
clc
bound
add
dec
imul
decl
cmp
add
add
imulb
cmp
clc
or
shl
clc
and
popa
add
add
clc
mov
and
mov
clc
jb
add
clc
cmp
or
popa
add
dec
inc
clc
stc
daa
clc
mov
out
out
dec
add
lahf
mov
add
dec
and
cmp
add
aas
pop
sti
mov
push
add
das
cld
push
add
mov
add
add
dec
jo
add
cmp
clc
repz
fistps
adc
add
push
mov
nop
jmp
arpl
sbb
adc
add
clc
and
add
clc
lock
clc
into
mov
cmp
push
jb
add
cmp
pop
clc
jb
add
in
and
add
fdivrl
out
jnp
mov
add
pop
jno
add
add
mov
arpl
add
clc
out
adc
frstor
clc
decb
xchg
out
pop
dec
jle
push
nop
jmp
add
or
cmp
add
jp
xchg
fistpl
clc
adc
add
and
add
and
jno
add
clc
sub
in
push
sub
add
out
xchg
fstpl
dec
adc
add
sub
clc
mov
clc
cmp
clc
sar
add
xchg
inc
add
sub
jg
pop
ds
add
pop
ljmp
pop
and
add
jne
nop
jmp
out
add
dec
bound
add
add
adc
add
out
mov
add
add
jecxz
jp
and
add
add
loop
jmp
scas
sub
and
add
ja
push
add
push
add
pop
clc
mov
sub
lock
add
or
add
xabort
jbe
dec
inc
clc
cmp
sbb
mov
lea
nop
jmp
add
add
lret
iret
pop
sahf
mov
mov
clc
je
stos
lock
add
clc
dec
stos
inc
clc
inc
clc
cmp
fs
adc
clc
cmp
pop
inc
clc
mov
adc
add
cmpsl
clc
sti
cwtl
cltd
es
or
dec
xor
add
hlt
xor
add
add
jmp
outsb
add
aad
cltd
ficoml
lea
lock
loopne
mov
add
mov
mov
in
xchg
incb
dec
sub
outsb
in
test
add
add
add
fisttps
and
add
dec
add
jmp
push
clc
mov
add
add
clc
mov
jge
clc
fs
mov
clc
leave
mov
sarb
add
cmp
xchg
xchg
pop
or
add
fisubrs
or
xchg
or
iret
pusha
add
das
inc
add
mov
in
pop
imul
add
clc
shrb
inc
add
faddl
ds
lahf
jo
add
pop
clc
loope
sar
xor
add
clc
ret
clc
jno
add
inc
clc
adc
add
clc
sub
arpl
add
mov
in
ret
clc
pop
loop
in
push
fisubs
add
bnd
add
gs
cmp
gs
mov
pop
fndisi(8087
clc
add
add
clc
sub
cmp
fcompl
pusha
nop
jmp
pop
pop
sbb
cmpl
clc
nop
jmp
mov
outsb
fs
add
mov
stos
or
adc
clc
stc
cs
clc
or
adc
add
daa
clc
push
aad
sub
mov
add
mov
push
mov
push
jno
add
testb
add
sahf
pop
mov
lock
scas
movsl
clc
std
adc
add
adc
add
push
add
imul
pop
sar
es
idivb
and
add
clc
or
add
push
ss
push
xchg
das
icebp
lods
mov
ret
imul
add
sbb
xchg
data16
adc
clc
je
clc
enter
add
mov
add
sbb
sbb
rcrl
xchg
mov
bound
add
clc
jo
add
clc
ljmp
jg
pop
in
add
add
int
int3
or
add
fcoms
add
shrb
pop
sbb
xor
add
sahf
pop
sar
std
jns
clc
stos
push
std
inc
clc
xchg
pop
or
cmpsl
clc
mov
shlb
push
add
vminps
repz
clc
jp
es
in
mov
or
clc
dec
test
clc
clc
jp
mov
clc
mov
add
out
hlt
call
lock
clc
jg
insb
push
add
pusha
add
lock
test
cmovb
add
inc
clc
jo
add
cltd
or
lods
cmp
repz
add
fldcw
clc
nop
clc
or
clc
jnp
clc
inc
add
jae
add
mov
lret
insl
pop
clc
leave
incb
add
add
js
add
movsl
clc
push
mov
ror
icebp
fwait
mov
stc
fidivrl
insb
xor
add
loopne
jno
add
clc
jp
add
push
xor
add
jecxz
movsb
clc
push
add
add
stc
cmp
add
dec
rcrb
clc
xor
add
add
add
clc
sbb
clc
mov
push
and
add
add
adc
add
call
clc
mov
xchg
stc
aas
outsb
cwtl
mov
mov
into
mov
iret
mov
mov
add
dec
arpl
add
clc
cmpsl
clc
js
shl
clc
mov
add
test
add
daa
clc
gs
inc
add
call
or
sbb
add
dec
idiv
fists
lret
pause
xlat
std
adc
add
jmp
inc
add
cmp
push
clc
sbb
movsl
clc
lods
mov
inc
add
fldcw
add
jmp
clc
mov
das
mov
mov
add
gs
scas
push
sar
enter
sub
cmp
lock
clc
mov
inc
add
cmpsb
clc
or
add
in
dec
clc
in
jg
add
push
lret
add
sbb
or
mov
js
inc
add
sar
jnp
lret
xchg
dec
mov
xchg
repz
clc
and
add
rolb
pop
imull
xchg
in
jbe
lcall
stc
fldcw
lods
aaa
dec
sbb
inc
clc
push
and
add
rcr
lea
ffreep
clc
sahf
addr16
inc
clc
ss
sub
clc
mov
inc
add
lcall
clc
fs
ljmp
add
push
push
stc
pop
xchg
ja
clc
scas
push
add
mov
clc
push
push
inc
add
aam
clc
push
ret
clc
out
sub
outsb
fistps
and
add
clc
sub
fs
lea
fs
mov
mov
lret
cmpsb
clc
fwait
jmp
add
rcrl
add
sub
lods
adc
xor
add
clc
addr16
in
sar
jnp
fistps
fdivl
add
add
fldl
jle
lods
mov
cmp
aad
clc
fs
xchg
sbb
add
shrl
add
add
add
loop
jae
add
clc
jecxz
push
dec
xchg
loopne
mov
clc
mov
or
loopne
lret
add
sbb
jmp
clc
std
int
clc
sti
loop
push
inc
add
movsb
clc
push
push
lcall
add
hlt
shrb
dec
cltd
repnz
push
and
add
fst
fbld
clc
in
clc
std
rorb
imul
mov
add
and
add
clc
je
fidivrs
clc
mov
sbb
add
jge
xlat
and
add
add
clc
adc
add
adc
add
add
aad
add
icebp
or
add
sbb
icebp
cmp
mov
daa
clc
push
pop
inc
clc
popf
add
pop
clc
mov
add
daa
clc
mov
clc
pop
clc
jl
or
pop
stc
cs
xbegin
shl
push
add
mov
prefetch
add
xor
add
lock
je
in
cmp
clc
mov
cltd
ss
clc
jne
xor
add
notl
add
clc
test
jecxz
stc
xchg
jbe
mov
mov
xor
add
daa
clc
push
pop
aad
inc
clc
add
add
adc
rorb
cwtl
dec
mov
add
sar
sub
lods
mov
ja
cmpsb
clc
cmpsb
clc
cmpsb
clc
and
add
add
clc
add
add
data16
add
add
add
nop
xchg
imul
ss
mov
cmpsb
clc
cld
adc
loop
stc
bound
add
clc
dec
xchg
lret
push
lcall
or
add
cmp
mov
clc
test
ds
add
das
out
mul
clc
repnz
movsl
clc
pop
loopne
loopne
dec
sar
jne
clc
dec
pop
fcoms
addr16
and
add
clc
test
jmp
add
hlt
movsl
clc
mov
roll
clc
jns
sti
out
mov
movsl
clc
cwtl
sar
cmp
dec
pop
je
mov
clc
sbb
clc
xchg
or
or
fcmovbe
ret
pop
jle
clc
cmp
push
lcall
aam
sub
inc
clc
mov
add
clc
or
push
push
add
cmp
inc
clc
xchg
fsub
clc
inc
add
cmp
add
fsub
clc
daa
clc
pop
and
add
add
jae
add
clc
into
push
clc
int3
cmp
inc
clc
in
lock
clc
icebp
mov
mov
mov
clc
or
xabort
ret
clc
mov
clc
dec
rclb
clc
loopne
jnp
pop
popa
add
test
jp
add
add
add
adc
add
ss
xchg
xchg
imul
add
add
repnz
clc
ljmp
das
leave
leave
push
add
and
clc
cwtl
fisttps
cmc
pop
dec
test
cmpsb
clc
dec
mov
out
push
arpl
add
repz
call
add
clc
jmp
add
clc
xchg
push
add
sub
clc
jp
clc
add
add
push
inc
add
xchg
jnp
in
mov
rcrl
clc
pop
cmp
mov
pop
test
mov
inc
clc
cmp
out
cld
sahf
lock
rcrl
test
data16
or
mov
add
add
add
ljmp
cmp
mov
clc
ficompl
ljmp
sar
mov
add
add
pop
sar
rcl
test
jne
mov
mov
inc
clc
push
mov
cmp
add
mov
jae
add
sub
xor
add
add
lods
jge
add
push
add
inc
add
nop
or
clc
icebp
push
add
add
clc
out
in
xchg
xor
add
clc
insb
cmp
push
repnz
or
add
adc
mov
xor
add
push
in
lret
xor
clc
outsb
mov
fmull
xor
add
add
push
aas
mov
add
jnp
bound
add
sar
std
xabort
xchg
sbb
cmp
cmp
clc
push
cmpsl
clc
dec
mov
test
clc
mov
clc
mov
in
sub
cli
stos
dec
xor
add
loop
push
jae
add
out
nop
sub
out
test
mov
inc
add
cmp
nop
xlat
jne
sbb
add
clc
cmp
je
daa
clc
mov
enter
vsqrtps
add
jg
nop
out
rolb
add
das
mov
clc
add
cmp
add
bound
add
enter
clc
dec
add
add
clc
lods
decb
mov
lods
hlt
mov
clc
mov
xor
add
dec
imul
std
shll
add
clc
int3
or
repz
add
cwtl
adc
dec
fs
xor
add
divb
mov
push
add
repz
sahf
nop
jns
sbb
xchg
test
push
outsb
ss
pop
xor
cltd
negl
dec
xchg
cwtl
jg
inc
clc
mov
jbe
inc
clc
fsts
add
in
fisttpll
add
mov
clc
call
insb
xor
add
fadd
clc
aas
pushf
cmp
add
clc
cmc
ja
clc
enter
dec
mov
add
int
add
addr16
ficomps
popf
or
mov
cmp
jne
dec
add
add
mov
clc
repz
movsb
clc
insl
arpl
add
fistps
fsubrl
mov
ret
clc
cmc
fisubrl
in
xor
add
add
jl
mov
dec
cmp
add
sar
add
popa
add
outsl
mov
sub
add
mov
push
test
clc
aaa
mov
add
add
cmp
lcall
clc
cmp
mov
clc
xchg
test
fwait
push
add
gs
push
xor
sub
rcrb
add
or
add
scas
int3
clc
mov
popa
add
cmpsl
clc
pusha
add
push
add
push
add
xchg
or
or
push
and
add
cmp
fldcw
outsb
sub
inc
add
aaa
movsb
clc
popa
add
outsl
add
pop
mov
clc
inc
add
xchg
cs
mov
mov
cmp
clc
insl
mov
and
add
clc
and
add
mov
xor
add
clc
inc
clc
dec
cmpsl
clc
int3
loop
xabort
inc
add
or
clc
mov
mov
clc
jne
rcll
icebp
or
add
mov
jmp
clc
mov
add
out
in
adc
cmpsl
clc
test
xchg
psubsb
pop
pop
addr16
push
icebp
movsl
clc
adc
add
push
stos
mov
clc
push
shll
test
push
add
call
insl
mov
clc
xchg
clc
dec
pop
das
adc
add
mov
add
outsl
inc
add
and
add
add
push
clc
in
add
add
lods
arpl
add
mov
mov
outsl
fistpll
mov
xabort
clc
jo
add
and
inc
add
adc
loope
mov
aad
call
or
add
pop
ds
adc
add
adc
add
jl
clc
or
jb
add
clc
fdivrs
sbb
mov
fnstsw
add
add
add
jno
add
mov
fs
jg
or
lcall
fs
cmp
xor
add
mov
add
add
sub
and
add
loope
int
inc
clc
in
ficomps
iret
or
mov
cmp
push
xabort
pushf
out
cmp
add
add
add
test
push
pop
mov
cld
mov
clc
sbb
jp
add
jae
add
cmc
inc
add
mov
add
mov
add
push
push
push
in
leave
jge
hlt
inc
clc
or
cmp
and
add
clc
hlt
aaa
adc
add
clc
sbb
inc
clc
shll
clc
fisttpl
jg
int
arpl
add
call
clc
and
aas
fldcw
inc
clc
loop
pop
adc
add
add
add
sarl
add
clc
xor
add
add
jno
add
outsb
mov
clc
ljmp
or
clc
add
pushf
push
int
clc
push
add
dec
test
push
add
mov
add
notl
clc
mov
outsb
aaa
pop
clc
jo
add
daa
clc
sbb
and
add
xchg
add
add
gs
xor
data16
jl
fdiv
inc
add
xor
add
add
arpl
add
sar
add
bnd
add
mov
loopne,pt
movsl
clc
lock
add
add
faddl
add
mov
lcall
dec
fldl
push
clc
push
clc
cmp
add
adc
sar
xor
add
add
idivl
cld
mov
clc
test
cmp
add
pop
xchg
push
out
xchg
sar
adc
add
or
clc
repz
xchg
add
fidivl
cmc
inc
clc
inc
add
pop
mov
xchg
pop
fisttpll
add
clc
dec
dec
mov
mov
pop
clc
icebp
mov
clc
pop
fistpll
mov
cmp
inc
add
sbb
add
aad
sbb
mov
xchg
sbb
add
inc
clc
push
out
sub
clc
mov
inc
clc
fcmovu
adc
add
lods
es
test
mov
add
in
push
clc
and
stos
jbe
adc
add
add
and
dec
sub
cmp
sbb
inc
add
cmp
hlt
cmp
shl
or
inc
clc
test
pusha
add
or
add
add
insl
and
add
inc
add
pop
ret
clc
test
cmp
test
std
sbb
add
add
xbegin
shl
pop
add
add
clc
or
add
jle
cld
in
or
xabort
clc
test
and
or
add
enter
add
clc
sti
cmc
test
pop
pop
mov
add
mov
jne
add
scas
mov
pop
pop
push
add
xchg
aas
cmpsl
clc
in
cmp
add
sti
into
xchg
js
clc
pop
jns
clc
adc
add
filds
or
clc
mov
in
ficompl
gs
bound
add
loopne
mov
add
and
mov
pop
test
inc
clc
stos
roll
cmp
clc
or
clc
xor
add
arpl
add
clc
aas
lret
mov
add
and
add
hlt
test
add
test
int
clc
adc
add
add
call
jp
inc
add
ret
cs
clc
adc
add
ljmp
add
pop
sub
add
mov
xor
add
inc
clc
lea
daa
clc
scas
cmp
push
clc
and
add
mov
popf
mov
clc
sub
push
dec
shlb
push
pusha
add
mov
push
push
mov
mov
pusha
add
insb
daa
clc
inc
clc
jae
add
int
xchg
dec
pop
mov
clc
stos
mov
add
add
add
clc
jmp
das
es
inc
clc
lods
cmpsb
clc
xor
add
fs
dec
dec
pop
test
push
jbe
loope,pt
aam
add
inc
clc
fscale
sub
add
daa
clc
jae
add
add
cmp
xchg
hlt
or
add
clc
imul
xchg
inc
add
bound
add
add
lods
xchg
and
add
lcall
lahf
push
scas
mov
pusha
add
jns
pushf
and
add
xchg
pushf
int
clc
stos
xor
add
mov
mov
add
test
loope
mov
jb
add
add
bound
add
add
dec
shr
mov
mov
enter
add
push
clc
pop
clc
lods
inc
add
cmp
lock
sub
or
push
cmp
int3
cmp
jge
clc
clc
aad
inc
add
shr
lcall
lahf
jg
cmc
sbb
pop
sub
or
clc
inc
clc
lods
test
push
incb
pop
adc
add
pusha
add
jb
add
outsl
sbb
push
imul
data16
enter
xabort
aas
sub
clc
jno
add
mov
sbb
clc
fnstenv
add
sbb
clc
ljmp
pushf
or
clc
add
mov
cmp
jns
int
inc
clc
sub
mov
cs
jb
add
add
add
add
clc
cmp
rcrl
push
add
in
push
add
jle
mov
inc
add
testb
clc
ljmp
add
clc
movsb
clc
adc
add
xchg
cmp
add
cmp
popa
add
mov
sbb
add
add
cmpsl
clc
pop
repz
add
cmp
add
mov
sbb
pop
call
or
in
xchg
push
or
pop
and
ja
add
mov
dec
push
add
fsub
clc
xchg
test
add
mov
jbe
movsl
clc
push
adc
gs
call
add
xor
add
gs
pop
clc
icebp
push
rcll
gs
push
pop
repnz
or
fwait
pop
bound
add
push
add
hlt
sbb
dec
or
call
dec
add
loopne
js
sbb
add
and
add
xlat
mov
fldt
stos
pop
clc
mov
clc
fsubrs
dec
cwtl
test
adc
add
clc
call
scas
mov
aam
pop
cmp
add
sub
dec
lahf
adc
add
clc
cmp
mov
clc
je
add
add
add
mov
inc
add
aas
pop
sub
add
push
mov
mov
scas
fwait
aad
jae
add
inc
add
xchg
xchg
stos
je
addr16
sti
push
cmp
sahf
stos
dec
test
clc
push
add
lret
xchg
mov
out
dec
sub
mov
pop
adc
add
mov
clc
insb
inc
clc
addr16
pop
jge
cmp
movups
add
or
pop
scas
cmp
cmp
fldcw
mov
add
gs
xchg
iret
jne
mov
add
fdivl
add
add
ret
add
negb
fwait
cltd
cmp
or
add
add
clc
xchg
mov
clc
setbe
mov
cli
cmp
mov
clc
add
add
jecxz
movsb
clc
pop
or
clc
inc
clc
inc
add
mov
pop
jge
add
dec
or
cmp
clc
out
stos
int
jb
add
ja
scas
pop
sub
add
add
add
cmpsl
clc
fdivl
nop
xor
add
and
add
push
add
add
adc
ret
clc
pop
and
add
inc
add
push
xor
add
pop
mov
aam
sbb
lret
push
mov
adc
add
vmovups
add
adc
add
push
pushf
gs
scas
shr
lods
insl
cmp
clc
ds
call
out
adc
add
lods
push
repz
outsl
add
add
clc
cld
hlt
jbe
roll
clc
mov
rep
sarl
gs
add
add
out
sbb
clc
mov
fdivrl
sar
clc
xor
xchg
int
lcall
data16
mov
xchg
adc
cmp
aad
fs
xchg
lock
inc
clc
pop
xchg
dec
mov
loopne
lret
ljmp
adc
add
push
das
inc
clc
fld
clc
leave
cltd
bound
add
clc
sub
outsb
mov
push
sub
cmp
clc
xbegin
and
add
add
jl
mov
aad
add
loope
test
clc
push
cs
push
add
dec
mov
aad
cmp
add
aad
cmp
cmp
add
repnz
cmp
and
xchg
and
add
add
add
add
fnstsw
leave
aad
clc
cmp
adc
add
add
xchg
mov
add
ret
clc
pop
clc
mov
and
add
testb
add
sbb
imul
add
mov
add
fdivp
push
xor
add
add
add
arpl
add
ss
bnd
jns
out
std
mov
clc
sbb
add
faddl
sub
push
jae
add
cwtl
in
adc
add
add
into
ljmp
out
stc
dec
std
mov
add
sub
lock
add
and
add
ja
jb
add
mov
insb
cmpsl
clc
test
ds
push
add
lahf
pushf
push
jo
add
push
bound
add
add
mov
or
icebp
and
add
cmp
data16
cld
jbe
pop
inc
add
test
and
add
add
mov
pop
and
lock
add
mov
bnd
cmp
add
test
pushf
in
pop
cmp
add
pop
push
sbb
dec
pop
mov
clc
inc
clc
sub
pop
sub
add
xchg
xor
or
sbb
clc
out
mov
bound
add
dec
hlt
ret
aad
add
pop
xor
add
adc
add
clc
movsb
clc
nop
cmp
data16
inc
add
dec
or
clc
clc
cmp
mov
clc
es
sar
jns
adc
add
dec
cmp
fldcw
adc
add
jne
add
mov
clc
mov
mov
add
into
adc
clc
xchg
cmp
movsl
clc
lock
cmp
inc
clc
data16
cmp
cmpsl
clc
mov
sub
mov
and
add
out
fldcw
cltd
push
cli
int
outsl
dec
mov
mov
dec
xchg
push
add
inc
add
dec
or
clc
inc
clc
test
mov
mov
cmp
clc
or
and
add
add
add
pop
popl
aad
jnp
and
test
clc
out
cmp
cli
sbb
add
outsb
jle
ja
in
pop
fwait
sahf
fstl
add
ss
clc
clc
dec
jb
add
clc
mov
jnp
repnz
ja
clc
xchg
xabort
clc
lods
xor
clc
pop
call
imul
clc
enter
clc
fnsave
mov
adc
add
xchg
filds
loopne
cmp
push
add
aam
clc
sub
js
lods
out
xor
add
jl
cmc
sub
imul
add
push
jp
add
jno
add
dec
xor
add
and
add
stos
call
inc
clc
mov
clc
add
add
adc
add
add
dec
mov
clc
push
mov
add
mov
adc
add
add
lcall
in
push
dec
cmp
add
fldenv
iret
and
add
clc
hlt
xor
add
pop
sahf
sub
js
add
lock
jg
outsb
push
clc
xor
add
or
aaa
lcall
ss
out
clc
or
push
cmpsl
clc
adc
add
cltd
jp
sub
neg
push
add
xchg
xchg
scas
push
and
add
add
add
fst
in
or
inc
add
xchg
fnstsw
test
mov
add
clc
xor
clc
popf
cwtl
push
pusha
add
inc
clc
jns
clc
or
add
cmp
add
stos
arpl
add
add
aaa
mov
cld
xchg
dec
inc
add
jle
inc
clc
into
lods
mov
add
inc
add
and
add
outsb
mov
clc
mov
push
adc
dec
in
jl
jl
xor
test
jnp
jno
add
mov
xor
add
clc
cmp
fs
addr16
dec
das
sar
push
addr16
std
pop
clc
pop
mov
fldl
add
add
rorb
clc
icebp
push
clc
pushf
cmp
cmp
test
mov
popa
add
xabort
mov
mov
mov
clc
push
or
jg
inc
add
or
add
mov
clc
lock
sar
cs
aad
add
cld
xor
add
xchg
pop
xchg
push
add
clc
icebp
test
lahf
jbe
jmp
lods
jmp
lock
clc
cmovge
sar
movsl
clc
adc
add
xor
add
mov
add
iret
cmpsl
clc
scas
hlt
push
add
repz
clc
ss
add
clc
es
mov
dec
cmp
fistpll
add
imul
add
sbb
rclb
and
add
cmp
int3
push
xchg
out
rcrb
mov
or
pushf
gs
mov
clc
adc
add
mov
clc
xor
add
add
addr16
xor
add
mov
mov
inc
clc
sbb
cs
aaa
add
ret
clc
mov
clc
scas
fisttpll
aas
add
add
clc
lods
jge
add
cmpsl
clc
icebp
push
push
add
sar
and
add
jmp
inc
clc
dec
mov
sar
dec
dec
cmc
mov
add
out
ret
imul
push
lock
add
dec
mov
clc
push
clc
rcrl
cmp
inc
clc
push
add
popa
add
xor
add
add
xchg
fstpl
add
sbb
push
add
mov
clc
mov
sub
mov
repz
add
inc
clc
aad
inc
add
inc
add
clc
js
clc
imull
rorb
arpl
add
clc
or
add
int
mov
sub
in
dec
lock
sar
negb
rcll
cs
clc
sbb
adc
clc
cld
scas
mov
add
adc
add
add
data16
add
add
and
add
add
clc
add
add
add
fiadds
cld
jp
fwait
popf
jo
add
xor
clc
xchg
mov
clc
xchg
cmp
fwait
and
add
mov
clc
sub
imul
add
popa
add
popa
add
sub
aad
add
es
ja
add
cmp
gs
shll
add
insb
push
clc
or
clc
outsb
ljmp
add
pop
cmc
xlat
or
add
add
into
sti
xor
add
add
loope
dec
inc
add
xor
clc
mov
jecxz
call
add
rcrl
cmp
mull
inc
add
push
xor
add
add
add
mov
push
push
popa
add
ss
mov
sbb
add
push
add
pop
test
mov
clc
ja
leave
test
add
and
add
add
outsb
mov
daa
clc
adc
add
add
icebp
pop
insl
push
add
movsb
clc
dec
lret
jle
mov
sahf
jb
add
addr16
or
and
loopne
mov
clc
inc
clc
bound
add
sub
mulb
clc
dec
pop
dec
mov
clc
sbb
mov
add
xchg
mov
clc
xchg
pop
daa
clc
out
add
add
das
cmp
clc
cmp
add
jl
clc
pop
js
add
fisttpll
ret
clc
inc
add
scas
dec
pushf
dec
mov
clc
and
add
add
jmp
fs
aad
lcall
dec
dec
push
mov
clc
adc
add
clc
data16
mov
shll
dec
dec
or
mov
arpl
add
shlb
add
fwait
int
pop
enter
clc
or
seta
add
or
icebp
inc
add
xor
add
pop
mov
add
xor
xor
add
add
jnp
adc
add
sar
add
test
ss
lods
scas
adc
and
add
clc
jae
add
push
std
sub
clc
xchg
push
push
add
pop
jb
add
clc
popf
pop
outsb
cmp
mov
dec
pop
mov
es
scas
out
stc
inc
add
sub
clc
or
or
clc
test
or
clc
sar
aaa
xor
add
add
jns
sbb
add
add
add
sub
add
cmp
mov
add
jmp
mov
clc
mov
mov
add
adc
add
fistl
add
add
imul
clc
mov
lods
adc
clc
push
jl
add
and
add
add
not
rcr
insl
mov
clc
loopne,pn
lret
aaa
cmp
add
sahf
push
pop
mov
add
xchg
mov
pusha
add
pop
std
sub
test
aad
add
cmp
dec
mov
jno
add
add
mov
add
sub
and
add
xchg
mov
imul
icebp
and
add
bound
add
jne
add
jg
aaa
dec
gs
fbld
add
adc
add
add
add
add
clc
pop
clc
mov
int3
pop
pop
jl
jmp
add
pushf
adc
add
insb
cmpsl
clc
inc
clc
xor
add
clc
cmp
clc
add
add
cmp
adc
insb
nop
inc
clc
push
test
cmc
js
cmp
mov
add
aad
add
aaa
jmp
addr16
gs
cwtl
inc
add
scas
fnstenv
bound
add
out
repnz
xchg
jmp
add
fdivl
add
pop
iret
and
add
mov
clc
inc
add
inc
add
xchg
and
add
sub
clc
adc
add
incb
adc
add
add
jnp
rorb
ljmp
add
lea
inc
clc
aas
ja
clc
cmp
clc
or
add
add
add
add
inc
clc
inc
add
sbb
add
clc
ljmp
clc
in
enter
clc
push
enter
clc
add
add
clc
shlb
add
add
add
shrb
fimuls
sub
clc
cmp
mov
add
push
clc
rcrb
add
xbegin
adc
add
add
xor
clc
push
lret
repnz
or
add
push
add
jne
push
add
loopne
int
clc
dec
mov
lahf
in
test
clc
repz
mov
add
imul
mov
add
adc
add
xor
add
clc
or
or
add
lock
aaa
daa
clc
call
insb
push
add
lock
dec
xchg
xchg
mov
add
add
add
mov
add
stos
popf
cmp
clc
inc
add
sbb
test
mov
push
mov
add
or
scas
and
jecxz
aaa
cmp
clc
fcmovb
clc
idivb
gs
cmp
mov
imul
repnz
or
pop
xchg
add
and
add
clc
push
cmp
clc
add
add
jg
xchg
into
mov
or
rcrl
add
add
fcmovnbe
push
mov
clc
fildll
clc
xor
add
add
mov
sarl
rcl
lock
add
dec
mov
in
lret
das
popf
jnp
mov
shlb
xabort
clc
inc
clc
pop
mov
xchg
js
clc
fnstcw
je
clc
fsts
add
sbb
jnp
ss
add
inc
add
cmp
inc
clc
xchg
sub
insl
cmp
ss
add
add
in
sub
pop
mov
sub
popf
xor
add
add
mov
add
leave
mov
sub
clc
inc
clc
lea
add
add
fs
xchg
insb
aaa
xchg
jb
add
in
clc
cmpsb
clc
enter
add
clc
out
inc
clc
fadds
or
clc
adc
add
cmp
clc
add
add
nop
push
cltd
adc
add
clc
loopne
jp
jnp
imul
rep
mov
sub
test
sbb
xor
add
clc
jae
add
cltd
test
hlt
lcall
add
movsb
clc
clc
int
mov
push
add
sar
add
sti
inc
clc
mov
add
add
mov
clc
movsl
clc
mov
and
add
inc
add
inc
clc
sbb
pop
icebp
jno
add
clc
in
cmp
add
push
scas
sbb
add
and
ret
clc
jle
add
push
bound
add
xor
add
pushl
lret
pop
cmp
add
mov
clc
fiadds
clc
inc
clc
jp
mov
add
incb
add
and
add
add
nop
push
jge
clc
xor
add
clc
aam
lahf
cmp
or
clc
mov
add
mov
inc
clc
mov
stc
mov
ss
clc
cmp
clc
std
jns
add
cmp
mov
clc
mov
add
jne
cmp
or
clc
xchg
daa
clc
lret
add
add
add
add
mov
clc
and
add
clc
ja
and
add
clc
xabort
clc
inc
add
jecxz
pop
clc
negb
clc
and
add
test
and
add
add
cwtl
test
aad
inc
add
xchg
dec
add
adc
sub
xchg
and
sbb
xor
add
cmp
jmp
je
cmp
sbb
clc
lahf
rol
clc
mov
pop
xabort
dec
nop
pop
lahf
mov
add
fbld
lret
stc
loope
and
mov
inc
add
add
add
add
add
add
add
pop
pop
not
mov
add
sbb
ljmp
fcomi
hlt
xbegin
mov
mov
cmp
movsb
clc
repz
add
mov
imull
imul
enter
mov
add
push
mov
data16
or
push
add
mov
mov
clc
call
clc
push
pop
out
and
xor
add
addr16
sub
pop
ss
mov
sbb
mov
add
sbb
push
add
aam
add
call
xor
aam
xchg
push
sar
outsb
call
cmp
add
push
add
or
jno
add
clc
xchg
xchg
in
shrl
push
add
add
add
mov
mov
jg
inc
clc
inc
add
repz
aad
push
add
xor
add
add
mov
adc
add
xchg
jmp
enter
add
inc
add
pop
jl
loope
jg
int3
cmpsl
clc
shll
lea
mov
push
add
xchg
cli
cmpsl
clc
inc
add
mov
dec
jo,pn
add
popf
mov
mov
cmovo
add
add
dec
or
push
add
jb
add
mov
clc
push
dec
cli
xchg
sbb
cli
pop
clc
xbegin
sub
jmp
add
inc
clc
aad
add
dec
and
add
add
mov
add
sbb
lods
lcall
inc
add
push
jb
add
add
xor
xchg
xbegin
lods
jnp
dec
dec
sub
clc
lret
add
ljmp
push
clc
pop
lods
xchg
fidivrs
pop
xor
add
repnz
iret
push
clc
xor
add
fsts
xchg
xor
clc
dec
xchg
mov
clc
pop
gs
lods
xor
cmp
clc
in
insb
sub
and
add
and
add
hlt
push
add
lahf
nop
mov
push
add
jae
add
ds
inc
add
mov
scas
dec
data16
stc
inc
clc
pop
mov
clc
aam
clc
or
add
mov
cmp
jnp
add
adc
add
add
cmpsb
clc
lret
inc
clc
mov
clc
push
add
xchg
jmp
cmp
lret
clc
clc
push
sar
js
out
sar
clc
ljmp
clc
mov
in
aam
movsl
clc
jb
add
inc
clc
xchg
jg
add
aaa
test
je
xchg
push
hlt
and
add
push
add
in
inc
add
cmp
xchg
enter
clc
dec
icebp
sub
add
push
pop
gs
sub
bound
add
pop
mov
add
test
mov
clc
xor
add
add
lret
adc
clc
pop
clc
int3
mov
clc
cmp
xchg
jbe
inc
clc
cmp
add
dec
cmp
xchg
das
call
add
sub
test
clc
aas
ja
clc
sub
clc
jb
add
inc
add
scas
xor
add
mov
or
add
add
xor
repnz
or
clc
repz
repz
clc
jmp
clc
nop
xchg
int
add
xor
add
clc
lret
adc
add
add
int
sar
add
and
add
iret
cli
pop
ljmp
clc
fs
adc
clc
stc
sti
mov
pop
fmull
jb
add
sbb
clc
xchg
sub
icebp
scas
pop
movsb
clc
jp
mov
es
mov
add
inc
clc
cmp
clc
clc
or
push
notb
add
push
add
test
jp
sub
add
mov
dec
pop
mov
movsb
clc
jnp
lret
ret
clc
shlb
add
cmp
clc
addr16
pop
shll
xchg
sub
mov
clc
fs
inc
add
cmc
lret
sar
stos
push
add
jne
pop
fmuls
xor
add
clc
cmp
das
std
lret
add
int3
ja
popa
add
lcall
in
push
add
mov
sub
clc
das
mov
add
adc
add
cltd
and
add
clc
cld
loopne
xchg
push
add
inc
clc
or
add
clc
push
es
jg
loopne
pop
es
sti
mov
je
dec
dec
cmp
add
aaa
outsb
ret
clc
movsb
clc
das
das
add
add
add
imulb
ficomps
clc
sub
clc
pushf
jge
sub
vandps
add
mov
clc
dec
dec
sarl
outsl
jno
add
mov
xor
add
lahf
push
and
clc
adc
add
add
mov
clc
and
add
loope
xchg
push
fs
mov
pop
fidivs
clc
pop
xor
add
je
add
sbb
add
xchg
mul
clc
jo
add
inc
add
xor
cs
testl
pop
idivl
scas
dec
pop
inc
clc
pop
clc
test
inc
clc
pop
dec
inc
clc
mov
add
jb
add
ss
add
and
add
clc
pop
clc
lcall
add
in
dec
adc
stos
data16
push
jae
add
cld
imul
lcall
addr16
cld
sub
push
clc
push
add
xor
clc
dec
sbb
lahf
repz
clc
cmp
daa
clc
jecxz
xchg
in
cmp
xchg
ret
clc
aam
mov
jecxz
clc
test
cmp
icebp
adc
add
sbb
or
clc
and
gs
dec
shrb
leave
mov
xor
sub
push
mov
clc
and
add
add
hlt
adc
clc
lret
and
add
add
imul
add
add
add
mov
add
jnp
add
sub
fs
fcmove
gs
add
add
pop
mov
clc
into
push
add
sbb
cmp
clc
jae
add
add
clc
mov
mov
xbegin
add
push
add
jno
add
add
mov
add
fwait
pop
pop
and
scas
mov
add
fstl
mov
dec
push
int3
cmc
inc
clc
push
scas
push
test
push
mov
clc
inc
add
cmp
mov
add
scas
fists
add
mov
shrb
add
mov
push
add
loopne
out
sar
int
clc
mov
add
cmp
ss
add
sbb
add
mov
clc
sbb
clc
mov
sbb
cwtl
ret
clc
ja
imulb
mov
stc
jl
ss
data16
add
add
pop
aaa
rcrl
pop
xchg
lcall
leave
fbstp
scas
or
sar
add
add
lods
ja
mov
pushf
add
add
add
mov
clc
int
add
pop
movsb
clc
cmp
arpl
add
add
push
jmp
clc
xchg
test
jbe
clc
mov
clc
sbb
sarb
clc
add
add
mov
add
clc
bound
add
add
jae
add
clc
push
cs
clc
data16
gs
jg
sub
arpl
add
clc
divl
sub
add
pop
iret
mov
add
in
mov
and
add
cld
cld
cmp
add
dec
cs
dec
mov
jo
add
inc
clc
sarl
movsb
clc
dec
cmp
push
clc
xor
push
pop
aas
add
clc
cmc
pop
insl
mov
xchg
sub
clc
xchg
add
test
inc
clc
or
inc
clc
repz
cmpsl
clc
sar
clc
xbegin
cmp
clc
and
add
mov
clc
test
mov
add
fstpt
ret
clc
cmp
clc
mov
clc
jns
outsl
sub
scas
sub
inc
add
cld
lock
add
dec
push
clc
stos
fidivs
outsl
das
hlt
cmp
inc
clc
push
fcoms
add
clc
lret
dec
in
faddl
clc
cmp
in
sub
lret
adc
add
add
add
add
gs
js
je
xchg
sbb
mov
add
popf
mov
sar
push
add
mov
into
cmp
add
ret
clc
jmp
add
add
add
clc
or
clc
push
jns
mov
cmp
daa
clc
cld
sub
clc
jp
add
add
add
adc
mov
lock
xchg
setns
mov
add
lea
mov
idivb
clc
sub
clc
std
and
add
dec
xbegin
add
cmp
and
add
push
add
cmp
mov
sar
push
add
mov
push
imul
hlt
pop
mov
sar
clc
mov
add
dec
jnp
add
mov
repz
add
cmpsl
clc
mov
and
add
add
sbb
adc
mov
clc
paddsw
dec
xor
add
clc
cmp
mov
add
adc
add
add
sub
mov
clc
or
add
xor
add
clc
loopne
push
pop
sbb
xchg
sub
add
fisubs
add
inc
clc
loopne
lcall
sbb
mov
clc
aam
add
push
add
jge
clc
popf
jg
js
xchg
clc
mov
add
clc
push
clc
cmp
add
mov
sti
xchg
pop
adc
add
xchg
arpl
add
clc
mov
pop
cmp
popf
test
add
xbegin
stc
data16
dec
dec
xchg
shlb
add
outsb
add
add
clc
cmpsb
clc
inc
add
xor
add
add
inc
clc
mov
xchg
adc
add
fwait
or
add
add
mov
loope
push
add
gs
ja
bound
add
mov
cltd
mov
repnz
jne
clc
add
data16
insb
adc
add
push
repz
add
add
adc
add
xchg
mov
mov
push
lock
addr16
fldt
xchg
sbb
xor
add
sbb
or
shr
push
mov
clc
imul
into
in
js
daa
clc
es
dec
dec
nop
repnz
inc
clc
jb
add
jae
add
insb
fisttps
mov
fiaddl
add
add
add
clc
test
lods
leave
fdivr
mov
cld
fistps
cmp
sar
movsl
clc
and
add
adc
pop
or
add
imul
dec
mov
clc
rcll
aas
push
add
je
clc
sbb
dec
data16
push
in
pop
test
xchg
pop
xbegin
add
mov
add
fwait
fwait
and
add
add
add
inc
clc
test
jne
pop
pop
push
push
inc
clc
lods
clc
inc
clc
pop
aam
sub
cmp
sar
jne
add
add
adc
xchg
push
xchg
stos
insb
and
add
mov
and
add
testb
add
fnstenv
stos
fdivrp
fmull
ds
sti
xchg
call
sar
add
es
sub
add
daa
clc
ficomps
fwait
call
add
and
add
clc
dec
imul
add
add
out
fdivrs
lods
lea
ja
add
pop
sar
add
pusha
add
mov
arpl
add
sbb
clc
pop
sbb
std
inc
clc
pop
clc
arpl
add
add
rcrl
je
ret
clc
mov
jo
add
inc
clc
and
add
push
loope
std
sbb
add
loop
mov
and
add
in
add
add
mov
xor
add
mov
clc
inc
clc
mov
clc
mov
cmp
add
clc
ds
xchg
adc
add
mov
clc
xor
lock
cmpsl
clc
pop
sti
loopne
jp
mov
add
imul
dec
fisubs
pop
cmp
pop
add
pop
mov
add
clc
popf
cmpsl
clc
and
add
add
in
jmp
ret
add
push
push
add
outsl
push
aaa
adc
add
add
xchg
inc
add
sbb
popa
add
or
clc
fnstcw
gs
aam
jmp
clc
pop
xlat
lock
add
xor
xabort
xor
add
add
cmp
clc
cmp
inc
add
and
clc
es
inc
clc
xbegin
cmc
jb
add
cwtl
mov
xor
add
loopne
hlt
inc
clc
push
add
sbb
psubsb
dec
push
icebp
imul
add
icebp
mov
clc
push
aaa
fstl
mov
ss
clc
inc
add
hlt
lods
add
add
sti
xchg
movsl
clc
mov
xchg
int3
lahf
mov
lcall
int
in
mov
jbe
ljmp
add
sub
jmp
add
xchg
and
jno
add
add
scas
cwtl
cmp
or
add
loopne
push
add
cs
repz
pop
rolb
ror
out
into
mov
clc
call
add
jmp
std
lahf
out
push
fmull
clc
out
inc
add
scas
test
jle
cmp
js
push
add
loopne
cltd
push
add
inc
add
mov
clc
xchg
aaa
cli
mov
mov
add
add
push
clc
sub
stc
push
push
clc
add
add
movsl
clc
sub
xor
add
jnp
adc
add
stos
fmul
mov
fdivrs
add
rcrl
lock
cmp
clc
inc
clc
shlb
add
iret
fwait
sbb
data16
xor
add
xor
clc
clc
cwtl
adc
add
nop
movsl
clc
icebp
cmp
push
add
cmp
jl
jb
add
add
clc
xchg
stos
enter
xchg
cmp
cld
cltd
dec
sbb
popf
fadds
bound
add
fdivrs
sub
add
dec
sub
jae
add
pop
adc
add
clc
je
std
aad
out
loop
push
mov
cmp
push
clc
sbb
data16
fildll
clc
add
jae
add
push
add
mov
fcomip
js
inc
add
jecxz
js
jno
add
clc
unpcklps
mov
mov
xchg
ljmp
mov
sar
clc
jne
clc
cmp
pusha
add
xor
add
sub
in
lock
add
sahf
sub
mov
rcll
add
push
jmp
test
jne
clc
mov
pop
pop
dec
xchg
jns
stos
imul
xchg
dec
add
add
js
jo
add
mov
pop
adc
add
add
pop
push
add
mov
clc
cltd
mov
add
cmp
lods
inc
clc
lods
sahf
sbb
hlt
test
stos
adc
add
and
add
or
jne
clc
pop
xchg
fdivs
jae
add
int
xlat
sbb
clc
mov
push
fsubrs
or
mov
add
dec
pop
imul
lcall
shrb
add
jp
clc
mov
jecxz
in
fstps
pusha
add
lcall
dec
inc
add
push
jmp
cmpsl
clc
sub
clc
dec
push
fdivrl
negl
and
add
add
jge
clc
out
popf
jle
clc
add
aad
addr16
fcmovbe
leave
out
sahf
cli
sub
in
pop
cmp
clc
fldcw
clc
pop
adc
add
dec
loop
mov
mov
xor
add
add
add
das
ds
movsb
clc
in
sar
inc
clc
cmp
clc
pop
cmp
push
adc
mov
pushf
jae
add
clc
fs
jnp
es
jnp
clc
pop
imul
add
jmp
mov
sub
add
xbegin
add
out
sub
mov
mov
clc
adc
add
cwtl
arpl
add
add
push
stos
aas
mov
mov
add
push
lahf
ds
jecxz
into
pop
aad
movsl
clc
mov
clc
xchg
lahf
test
jbe
dec
sub
clc
int3
pop
clc
cmp
clc
lods
pop
mov
adc
or
cmp
test
mov
ja
test
push
add
insb
xor
rorl
sub
add
enter
sub
xchg
pop
pop
imul
or
add
and
add
add
fcmovb
clc
or
xchg
inc
add
vandps
and
inc
add
bound
add
dec
add
add
clc
mov
add
and
sar
test
sbb
clc
xchg
and
jnp
out
sahf
je
jb
add
add
add
hlt
fldt
add
add
test
loop
xor
mov
jno
add
add
adc
add
js
or
cmp
pop
clc
outsb
mov
jb
add
in
push
clc
in
ret
clc
mov
clc
xchg
cmc
xchg
cmpsl
clc
push
add
out
push
add
add
mov
sbb
inc
clc
dec
mov
clc
mov
cmp
add
movsb
clc
inc
add
scas
stos
scas
push
clc
repz
cwtl
lret
push
or
add
stos
test
and
add
sub
add
negb
lret
jp
sbb
stos
imul
add
mov
add
push
mov
pop
cmpsb
clc
notl
bound
add
mov
test
mov
add
mov
pop
and
add
xchg
xchg
push
cmp
mov
clc
fnstcw
sbb
add
jecxz
popf
cmp
clc
jge
pop
pop
add
add
xchg
xchg
dec
lods
sbb
sti
call
pop
cmp
push
add
adc
add
add
add
jmp
scas
mov
rdmsr
add
inc
clc
f2xm1
add
cmp
pop
adc
add
cmp
clc
lcall
cmp
ficoml
add
dec
mov
loopne
and
add
mov
push
mov
mov
addr16
inc
clc
aaa
dec
or
add
dec
sbb
daa
clc
aad
add
jmp
add
pop
clc
mov
adc
add
mov
add
fsubs
sub
call
icebp
mov
popa
add
xchg
and
arpl
add
clc
mov
jge
stos
test
cmp
mov
add
ds
ret
into
aaa
inc
add
out
add
add
pop
pop
sbb
test
movsl
clc
pop
es
xchg
or
clc
sar
add
cmp
clc
pop
cmpsl
clc
adc
add
clc
mov
clc
daa
clc
mov
popa
add
icebp
daa
clc
mov
add
add
clc
add
add
clc
movsb
clc
dec
mov
xor
clc
cmp
pop
xor
add
add
adc
add
in
sbb
push
add
dec
outsl
scas
cmp
nop
popa
add
and
shrb
int3
xor
insl
adc
add
add
ja
xbegin
add
xchg
jl
add
cld
je
push
mov
stc
mov
xchg
mov
add
dec
addr16
push
mov
clc
adc
add
mov
lahf
addr16
push
add
mov
add
jmp
mov
rol
clc
xchg
pop
es
mov
or
push
jne,pn
add
mov
add
adc
add
dec
js
scas
pushf
movsb
clc
xor
das
dec
jp
dec
negb
ret
clc
inc
clc
in
xchg
or
sbb
pushf
out
enter
mov
clc
cli
in
cmp
and
add
or
mov
add
xchg
pop
jle
rcrl
pop
mov
jnp
sahf
add
jno
add
pop
sbb
add
dec
shr
unpcklps
pop
rcr
aas
lcall
inc
add
shlb
inc
clc
xchg
mov
cmpsb
clc
jne
inc
add
sbb
cmpsl
clc
mov
data16
and
testb
ss
mov
pop
clc
repnz
icebp
cmc
test
lods
sbb
add
dec
enter
push
add
mov
movsl
clc
fistl
add
out
jae
add
std
stos
adc
add
add
jb
add
ficompl
lods
mov
clc
pop
lss
pop
clc
push
add
cwtl
cmpsb
clc
mov
mull
add
adc
add
lcall
enter
or
dec
fists
mov
arpl
add
xchg
push
add
hlt
mov
add
xchg
cmp
rcrb
add
clc
inc
clc
xchg
sbb
mov
outsl
dec
adc
add
mov
jg
shrl
inc
clc
adc
add
add
ret
cmp
or
or
xlat
mov
jecxz
cli
ss
gs
cwtl
mov
clc
out
out
mov
xor
dec
and
add
dec
sub
test
sub
pusha
add
push
add
insl
lret
lods
mov
rcrl
or
add
add
push
aad
clc
xor
add
mov
add
fldenv
clc
ss
or
add
xabort
fs
popf
daa
clc
fwait
lret
mov
push
loopne
pushf
out
test
cmp
push
clc
lock
cmp
inc
add
push
mov
xbegin
add
add
add
mov
sti
dec
into
scas
jl
add
out
inc
clc
lods
jne
fisubs
shlb
add
mov
dec
decl
add
mov
hlt
mov
clc
fs
data16
daa
clc
xchg
or
add
xabort
stos
mov
add
inc
clc
in
sbb
dec
icebp
cmc
sub
add
push
clc
stos
cli
inc
add
clc
sub
add
add
push
add
and
add
add
add
lcall
or
mov
clc
sub
in
pop
cmp
clc
fwait
mov
aas
jle
dec
stos
push
add
mov
jmp
push
shrl
adc
add
js
fadd
clc
mov
clc
fucomp
cwtl
out
jnp
loopne
jle
imul
add
mov
arpl
add
icebp
cld
clc
lret
lret
xchg
xchg
aaa
xchg
xor
add
clc
cmp
xor
add
imul
xchg
dec
jp
add
loope
call
xabort
lea
insl
add
inc
clc
aas
xchg
arpl
add
call
mov
add
adc
push
leave
int
fs
push
add
inc
add
mov
clc
inc
add
jae
add
aad
sub
add
adc
add
dec
xor
clc
sarb
push
loope
loop
stos
jecxz
hlt
push
sbb
clc
es
loopne
movsb
clc
mov
push
pop
cmp
in
push
insl
push
clc
inc
clc
xchg
add
add
into
xchg
icebp
add
clc
bound
add
add
clc
mov
clc
push
add
cltd
stc
popl
add
inc
add
pushf
ds
dec
cmp
clc
xchg
mov
add
dec
pop
lods
jmp
pushf
cmp
daa
clc
mov
rclb
add
dec
mov
mov
frstor
clc
sbb
clc
and
add
mov
sub
mov
add
pop
clc
mov
jle
lcall
xbegin
int3
xchg
mov
add
fwait
xchg
mov
clc
dec
inc
add
in
mov
xor
add
popa
add
ret
clc
push
clc
xchg
pop
pusha
add
and
add
clc
sub
js
mov
daa
clc
scas
clc
push
add
gs
lods
fistl
mov
mov
addr16
cmp
out
ss
insb
push
add
mov
clc
mov
clc
testl
inc
add
fwait
test
arpl
add
add
aad
adc
add
push
stos
mov
xor
add
mov
push
ss
mov
clc
clc
es
xor
add
gs
loop
in
popa
add
mov
clc
xchg
cltd
cmpsb
clc
push
fisubrs
mov
clc
scas
test
ret
xchg
xchg
int3
aad
clc
cld
and
add
push
lcall
pop
sub
and
add
data16
sbb
push
add
outsb
out
mov
clc
adc
add
scas
dec
jmp
add
nop
mov
clc
aad
add
fcomip
and
jmp
clc
sub
and
add
clc
or
add
xchg
inc
add
test
clc
lods
jge
inc
clc
or
xchg
leave
mov
das
dec
push
fldl
clc
cmpsb
clc
daa
clc
adc
add
add
fcmovu
mov
add
aaa
mov
dec
mov
add
aaa
in
cwtl
jb
add
or
xchg
inc
clc
repz
mov
or
clc
lahf
cmp
clc
adc
xor
add
adc
add
mov
add
mov
cmp
add
adc
add
fmull
add
jecxz
pop
add
add
clc
mov
add
int3
loope
inc
add
add
add
cmp
mov
push
sbb
xabort
xor
add
fdivs
jae
add
add
mov
clc
mov
adc
add
sti
cmp
mov
xchg
in
cmp
add
leave
movhps
add
cmc
scas
adc
add
jae
add
clc
aaa
sbb
jo
add
clc
jecxz
sub
cld
xchg
addr16
out
scas
sbb
add
out
jno
add
jae
add
clc
bound
add
test
aad
add
sbb
add
mov
in
adc
add
add
push
xchg
add
add
add
add
clc
test
mov
jle
ljmp
xchg
sbb
add
mov
dec
mov
clc
test
iret
fs
clc
add
add
cmp
sarb
push
add
push
inc
add
arpl
add
dec
mov
sar
clc
loopne
es
frstor
xchg
mov
sbb
lods
lret
clc
cmp
jl
clc
mov
sar
add
cmpsb
clc
cmp
clc
ss
pop
xchg
fnstcw
jne
sub
clc
aad
cmp
sar
imul
mov
add
clc
inc
clc
mov
inc
add
pusha
add
lea
add
add
pusha
add
lret
gs
xabort
call
cwtl
cmp
dec
mov
jg
add
cmp
loopne
mulb
jecxz
jle
jne
cmpsl
clc
dec
mov
movsb
clc
mov
in
jne
jbe
imul
jne
clc
jb
add
add
mov
clc
cmp
sub
sar
stos
insl
jb
add
jp
xchg
je
clc
or
add
mov
add
insb
push
add
cmc
js
idivb
clc
cmp
clc
mov
add
add
stos
in
fidivs
cmc
xchg
push
mov
mov
mov
pop
clc
stc
push
bswap
cmp
scas
ffreep
clc
add
cli
xchg
mov
add
add
add
clc
cmp
pop
inc
add
leave
and
insl
xchg
pop
sub
cmpsb
clc
jo
add
mov
lock
clc
shrb
cmpsb
clc
cmpsl
clc
mov
add
cmp
mul
clc
mov
clc
or
stos
inc
add
adc
add
clc
in
fisubl
jmp
sbb
add
dec
mov
add
dec
clc
pop
xchg
cmp
movsl
clc
cmpsb
clc
jg
ljmp
add
frstor
add
inc
clc
icebp
cmp
add
aaa
in
pop
int
jno
add
pop
push
dec
push
mov
pop
mov
sbb
add
loopne
inc
add
adc
add
outsl
js
clc
add
add
add
out
cmpsl
clc
fisttps
clc
decl
and
pop
sbb
mov
jge
add
xchg
lret
jo
add
cmp
add
mov
fdivs
movsl
clc
cmpsb
clc
add
add
das
adc
clc
inc
add
cmp
clc
push
xor
add
add
fcomp
fs
in
push
mov
hlt
lcall
cmp
call
fdivl
add
ficoms
add
add
data16
add
add
add
add
arpl
add
sbb
clc
xor
add
test
add
add
sahf
cmp
jl
icebp
xor
clc
outsl
repnz
cmp
add
clc
fistpll
add
or
clc
popf
pop
int3
test
jo
add
das
icebp
push
out
push
loop
cmp
imul
es
popf
in
std
and
mov
stos
into
add
add
test
add
and
sbb
nop
cmp
add
add
mov
fildl
clc
gs
sub
add
add
add
or
cmpsl
clc
inc
add
into
int3
stc
cmp
sar
dec
fnsave
add
and
add
mov
xchg
sub
clc
pushf
popf
sbb
inc
add
sub
pusha
add
loopne
sub
add
clc
xchg
and
add
int3
rcrb
lahf
dec
push
add
mov
add
add
push
clc
fs
loopne
test
mov
mov
adc
clc
push
hlt
inc
clc
push
add
rol
clc
icebp
shrl
jns
bnd
add
aas
int
adc
add
clc
enter
lret
sarb
add
jb
add
add
out
into
mov
arpl
add
rcll
add
mov
sar
add
jge
clc
mov
loopne
xor
fsubl
jg
cltd
and
dec
sub
clc
push
mov
add
jns
jg
push
add
cmp
add
sbb
repnz
in
std
pop
pop
je
xabort
xor
add
cmp
add
clc
mov
cmc
adc
cmp
daa
clc
aas
adc
test
pop
clc
sub
out
and
add
xchg
out
xor
idivb
mov
clc
jnp
add
cli
mov
mov
popf
mov
xchg
call
pop
repnz
mov
and
add
cmp
add
sub
loope
fwait
mov
clc
mov
xor
add
popf
inc
add
sbb
scas
xchg
sbb
cli
mov
shl
clc
fadd
clc
repz
cmp
adc
add
clc
or
jecxz
fisubl
sub
clc
mov
into
ds
std
es
data16
mov
push
and
add
pop
cwtl
adc
add
add
xchg
cltd
sub
cmp
add
sar
insl
ret
clc
stc
in
xbegin
bnd
clc
add
pop
sbb
pop
cmpsl
clc
testb
mov
add
lahf
and
add
mov
add
and
add
aaa
mov
mov
clc
pop
pop
sbb
fldt
add
in
mov
int3
add
mov
clc
mov
mov
add
aam
leave
sbb
std
pop
clc
adc
or
nop
bound
add
sub
sbb
out
xor
add
pop
pop
test
push
clc
mov
or
pop
mov
add
cmp
hlt
adc
add
insl
out
sti
xor
add
jg
add
add
sar
clc
loope
frstor
clc
pop
popa
add
jns
add
inc
clc
add
clc
mov
xchg
cmc
adc
fs
and
add
push
mov
stos
scas
popf
or
add
jne
repz
clc
dec
push
int
clc
outsl
jle
xchg
imul
jns
lods
fldl
clc
fs
xchg
push
das
jbe
clc
sub
clc
adc
add
loop
or
clc
push
shrl
adc
add
stos
js
mov
and
add
clc
ja
add
add
movsb
clc
mov
cld
mov
cmp
sub
fs
and
jle
filds
pop
cmp
clc
mov
fbld
add
push
imul
add
or
jns
mov
clc
sti
sti
daa
clc
lock
jno
add
sub
imul
mov
clc
dec
push
sahf
pop
sar
clc
sqrtps
add
add
sahf
jecxz
xor
add
mov
or
add
cmpsl
clc
push
loopne
sbb
cmp
cmp
add
sar
adc
add
add
clc
and
add
cmp
or
pop
adc
dec
bnd
out
mov
repz
clc
mov
or
imul
sub
cmp
clc
or
test
clc
imul
pop
and
xor
add
push
add
mov
inc
clc
ss
sub
mov
fists
cmp
add
mov
out
pop
in
and
add
imul
clc
xor
dec
rolb
pop
aas
std
aam
or
in
cwtl
or
xor
add
clc
xor
add
mov
xbegin
add
add
mov
cmp
clc
xchg
mov
dec
movsl
clc
push
pusha
add
data16
negl
clc
inc
add
mov
popf
mov
scas
or
out
outsb
adc
imul
ljmp
or
add
sub
clc
aad
dec
lcall
adc
sbb
sbb
adc
add
fsubr
sar
adc
add
add
xor
clc
ret
clc
adc
add
pop
xor
pop
call
mov
enter
ret
clc
sub
clc
imul
add
add
push
add
data16
pop
mov
cmp
loop
sbb
sub
dec
stos
sbb
hlt
cmp
cmc
sbb
xor
clc
cs
popa
add
push
test
add
mov
pop
loopne
push
test
push
add
sbb
aam
clc
ficoml
clc
notl
add
mov
aas
hlt
mov
cmp
mov
and
loope
sub
add
ret
add
outsb
xor
add
je
add
fs
aad
clc
rclb
fcoml
imul
push
pop
mov
movsl
clc
push
leave
cmp
pop
xor
jbe
repnz
fs
clc
and
add
or
mov
lock
int3
jmp
jae
add
into
sbb
mov
insb
xchg
fistpll
clc
cmpsb
clc
or
clc
test
push
push
add
dec
popa
add
mov
mov
aam
jle
lods
mov
arpl
add
repnz
push
xchg
in
xor
incb
insl
int
mov
dec
mov
xchg
pop
fildll
aam
imul
add
hlt
test
xchg
test
mov
add
or
fcmove
pop
mov
clc
lret
stos
sahf
mov
cltd
daa
clc
cwtl
pop
pushf
push
pop
mov
imul
dec
fwait
ret
lret
mov
ljmp
and
add
mov
add
jae
add
add
mov
add
gs
sar
adc
add
inc
add
clc
popf
sub
add
pop
adc
add
test
in
xchg
mov
cltd
loop
movsl
clc
addr16
out
xchg
adc
stos
and
sbb
and
add
add
xabort
fs
div
aaa
mov
scas
mov
mov
sahf
ds
add
dec
xchg
pop
ss
clc
cld
mov
clc
pop
loopne
pop
cmp
lods
insb
pop
fcomi
cs
sbb
int
pop
in
mulb
add
fidivl
xor
add
add
clc
bound
add
add
xor
js
test
add
test
dec
sar
add
add
add
loop
js
loop
fisubrl
add
dec
jno
add
clc
cmpsl
clc
add
pop
js
or
jnp
clc
arpl
add
lods
mov
ss
repz
inc
clc
dec
xor
add
pop
clc
pusha
add
cs
ljmp
loope
mov
clc
push
add
sub
clc
push
push
add
add
inc
clc
cmp
push
jmp
clc
push
mov
movsb
clc
add
add
ret
clc
dec
ret
clc
cmpsb
clc
fs
adc
add
sub
pop
xchg
cmp
pop
inc
clc
mov
ds
cmpsb
clc
cli
dec
lods
push
in
cmp
scas
int
mov
jecxz
sub
aam
je
add
testb
add
add
icebp
pop
clc
stos
pop
add
add
aad
stc
stos
rol
clc
into
lods
jle
pop
int3
adc
and
add
or
clc
add
add
fcoml
inc
clc
or
clc
xchg
pop
in
mulb
imul
dec
call
add
arpl
add
pop
clc
shl
clc
addr16
pop
xor
add
repz
pop
clc
in
mov
add
clc
ret
clc
lret
clc
fimull
inc
add
clc
das
sub
xor
add
add
lcall
inc
clc
fwait
dec
and
out
in
dec
icebp
push
dec
mov
add
data16
xor
add
mov
stos
adc
add
std
data16
fnsave
sub
clc
pop
in
dec
push
repnz
call
es
fildll
std
cmp
clc
or
pop
clc
inc
add
mov
xor
add
fisttps
fsts
clc
bound
add
xchg
loope
test
inc
clc
cld
in
pushf
out
dec
jmp
clc
xchg
mov
push
xchg
jae
add
mov
pop
in
mov
out
xor
jl
add
mov
lods
add
add
add
cmp
clc
testb
and
add
add
dec
mov
add
mov
stc
mov
loope
inc
add
cmp
pop
call
clc
mov
lcall
int3
stos
inc
add
clc
mov
mov
add
frstor
clc
movsb
clc
ficoml
mov
xabort
clc
jecxz
jae
add
in
fdivrs
xor
out
int3
push
clc
xor
clc
inc
clc
fnstenv
add
mov
jge
es
js
clc
fcomps
pop
insl
jge
dec
push
add
add
add
std
repz
lcall
jmp
sar
shr
jge
clc
cmpsb
clc
push
mov
add
xchg
xchg
mov
in
mov
add
mov
adc
push
aam
clc
lahf
jle
add
add
xor
mov
add
or
mov
lahf
sbb
xchg
test
rcrl
mul
clc
das
add
add
mov
add
mov
popf
pop
inc
clc
push
mov
xchg
lods
lock
xabort
add
fwait
rcll
add
sub
mov
rorb
xchg
and
add
sub
cmp
clc
data16
negl
test
leave
cmc
stos
in
cmp
test
mov
mov
imul
clc
mov
cmpsb
clc
or
xor
add
add
ffreep
clc
sbb
xchg
movsl
clc
fs
mov
sbb
data16
cld
jp
sub
addr16
or
jae
add
inc
add
pop
pop
sti
aam
fs
mov
inc
clc
add
add
add
loope
sahf
mov
clc
add
mov
ret
cmpsb
clc
lret
lock
add
jnp
mov
pop
clc
add
aas
mov
lahf
jl
push
pop
js
clc
cmp
clc
adc
add
clc
iret
cwtl
cmc
cmpsl
clc
sub
add
clc
push
add
xor
add
add
pushf
cmp
clc
fsubr
mov
and
add
add
inc
clc
aad
xlat
inc
clc
xchg
incl
pop
aaa
mov
jl
clc
nop
inc
clc
cmp
pop
stc
lock
test
outsl
fstps
test
je
clc
insl
in
push
add
pop
sbb
clc
aaa
pop
cli
xor
add
add
jne,pt
clc
push
add
fidivrs
pop
iret
psubw
xor
add
lock
bnd
sub
add
mov
clc
sub
add
push
or
push
add
sar
pop
add
add
aas
aas
mov
dec
inc
clc
mov
add
scas
scas
xchg
imul
push
add
ret
clc
ja
add
pop
jns
fiaddl
sbb
add
jmp
lahf
sub
add
push
in
ficompl
cmp
clc
inc
add
adc
imul
pop
stos
mov
gs
mov
rcrl
dec
mov
xchg
dec
add
add
clc
mov
clc
pop
cmpsl
clc
loope
lods
mov
test
pop
cmp
test
jae
add
xor
add
add
xor
add
clc
inc
clc
add
clc
pop
jno
add
jle
and
add
outsl
stos
xchg
adc
add
insb
jae
add
aad
mov
nop
push
pop
or
scas
sub
add
in
fimull
sbb
fsubrs
mov
mov
mov
add
jg
inc
clc
stos
push
jg
xchg
dec
mov
xor
add
fidivrs
cmp
jne
xor
add
clc
mov
stos
mov
into
pop
ljmp
clc
leave
out
lcall
clc
and
into
je
lods
repz
in
rcl
bound
add
pop
ds
clc
or
cmp
mov
clc
cmp
pop
inc
clc
mov
push
mov
add
clc
call
das
xor
test
in
xchg
js
sbb
jae
add
clc
sahf
dec
rcll
add
clc
and
add
clc
inc
add
dec
ror
mov
lret
pop
lahf
fucomi
xchg
and
add
dec
push
or
sti
jae
add
stos
adc
add
push
mov
popa
add
sbb
sbb
xbegin
daa
clc
pop
push
xchg
jge
or
cmp
dec
jae
add
sbb
sbb
cmp
push
add
add
ja
inc
add
sub
icebp
gs
pusha
add
mov
add
mov
cmp
clc
insb
xbegin
add
out
rcrb
xor
push
je
stc
cmp
clc
sbb
mov
fcoml
add
mov
xchg
mov
sarl
mov
add
mov
push
add
push
std
cmp
cmp
cmp
popf
sbb
add
jne
inc
add
jmp
dec
popa
add
ret
push
inc
add
and
add
clc
nop
movsb
clc
or
clc
or
rcrl
add
lret
stos
negl
sbb
rorl
add
sub
js
clc
dec
add
mov
cld
clc
cs
clc
push
sub
mov
clc
jb
add
imul
lea
add
add
pop
bound
add
add
push
clc
adc
es
pop
mov
mov
mov
xchg
ret
das
popf
xchg
cmp
movsb
clc
jae
add
aam
adc
add
int3
test
adc
clc
and
add
outsl
insl
mov
clc
xchg
mov
test
clc
enter
add
mov
pusha
add
adc
dec
addr16
lea
cli
mov
in
sub
cli
pop
dec
xor
mov
push
dec
mov
ds
adc
add
add
mov
add
repz
clc
clc
rorb
clc
fs
sarl
lods
adc
add
push
jae
add
xlat
fbstp
mov
es
xor
shrb
into
lods
add
daa
clc
sub
add
add
rclb
clc
xor
add
clc
dec
or
outsb
and
add
add
test
fwait
xor
add
add
fidivs
add
movsl
clc
sbb
clc
cmpsl
clc
fsubr
imul
clc
mov
jecxz
xlat
pushf
mov
jp
xor
add
cmp
stos
xor
add
dec
or
test
mov
add
jnp
sub
shlb
add
add
sbb
imul
or
clc
jno
add
clc
aad
cld
jmp
clc
adc
aaa
repz
std
mov
clc
std
ljmp
push
loop
jecxz
xabort
add
add
icebp
jb
add
call
xor
add
pop
clc
jne
xchg
jg
stos
fwait
aaa
adc
add
cmpsb
clc
mov
add
inc
clc
pop
ljmp
add
and
add
and
add
push
data16
js
in
cmc
push
add
sbb
add
xchg
pop
add
sub
mov
insb
cld
insb
aaa
inc
clc
adc
add
sbb
adc
add
shll
int3
mov
and
add
pusha
add
mov
clc
xchg
jmp
loope
mov
add
add
add
xchg
lea
push
add
es
push
add
arpl
add
sub
pop
jg
sub
jne
xor
add
into
push
push
adc
add
mov
add
adc
mov
clc
pop
ja
sar
sbb
mov
in
mov
add
cli
cmp
cltd
out
adc
or
add
clc
lahf
test
call
add
mov
cmp
idiv
or
popl
add
push
clc
imul
adc
add
or
add
jnp
sahf
jecxz
inc
add
or
pushf
sti
inc
add
test
sub
jnp
clc
sbb
dec
adc
add
adc
add
pop
data16
imul
add
fistpll
clc
sahf
inc
clc
scas
test
fldenv
jge
add
add
insl
mov
dec
mov
push
add
jb
add
add
xor
add
jae
add
jmp
jmp
and
add
popf
mov
clc
inc
add
pop
shll
clc
into
pop
sbb
add
dec
push
mov
clc
xchg
lret
jge
xlat
je
add
scas
xchg
mov
bound
add
cmp
clc
mov
out
xlat
dec
push
add
mov
clc
mov
clc
stc
push
push
rcrb
clc
scas
cld
movups
add
addr16
lods
or
add
jl
pop
clc
imul
jmp
cmp
xor
sbb
clc
adc
add
lret
jo
add
add
add
je
repz
nop
in
sbb
add
dec
mov
insb
test
mov
jp
test
movsb
clc
sbb
clc
jle
add
add
fisubl
add
clc
jns
xchg
imul
add
pop
pop
sarb
cs
cmp
xchg
mov
or
clc
mov
mov
hlt
stc
lahf
repz
movsb
clc
es
xor
add
add
add
ffree
clc
cmp
clc
push
cmp
add
movsl
clc
outsb
cltd
imul
add
add
aad
stos
sar
sbb
clc
int3
inc
add
stc
lods
loopne
xchg
aaa
into
xor
clc
xchg
cmp
mov
cli
loop
jmp
and
add
mov
add
xchg
daa
clc
cmc
xchg
inc
add
test
negb
add
in
cmp
and
add
aam
clc
int3
sar
ret
clc
or
add
push
add
cmp
test
dec
int
xchg
data16
out
stos
inc
clc
lahf
xchg
xchg
ljmp
fwait
and
clc
cmc
and
add
clc
sbb
mov
add
sbb
push
add
aaa
jns
mov
add
sub
clc
ja
int3
out
ret
xbegin
pop
clc
push
clc
jle
clc
jg
rcll
clc
xchg
inc
add
lret
add
out
and
add
mov
clc
out
push
outsb
mov
bound
add
hlt
cmp
cmpsb
clc
cmp
sbb
add
imul
mov
cmp
clc
xchg
add
add
cmp
add
xchg
scas
and
add
cs
mov
outsb
lahf
xchg
adc
add
or
cmp
in
xchg
sub
clc
fwait
lret
repz
jns,pt
xbegin
pop
clc
in
dec
shlb
add
jb
add
lea
mov
clc
clc
repz
ljmp
add
outsl
inc
clc
imul
inc
clc
xabort
ss
push
add
fs
xor
add
mov
mov
hlt
call
inc
add
repnz
jae
add
pop
jo
add
shl
push
add
xchg
icebp
inc
add
mov
clc
sar
xchg
jecxz
test
shll
add
xor
add
push
je
jo
add
add
jg
clc
or
aad
xor
add
clc
or
add
clc
adc
add
pcmpeqb
add
mov
add
data16
and
add
add
int3
adc
ds
mov
clc
or
addr16
add
cmp
clc
mull
add
push
sbb
clc
mov
popf
fnstsw
mov
test
clc
fistpl
lahf
add
add
add
inc
clc
dec
pushf
shrl
fldln2
lock
cmp
dec
dec
call
movsl
clc
adc
add
adc
add
mov
fsubrs
hlt
data16
gs
scas
fsts
stos
sub
clc
flds
add
cmp
add
cmp
cmp
mov
pop
xlat
mov
add
hlt
loope
fdiv
push
clc
cmp
add
sbb
push
fldcw
mov
xchg
outsb
xchg
add
add
dec
aaa
mov
add
cmp
clc
outsb
and
add
clc
inc
add
adc
add
dec
clc
fiadds
add
cltd
xchg
mov
add
add
or
add
lock
pop
call
cli
fistpl
icebp
fidivrl
std
stos
cmp
dec
ds
add
add
mov
add
jge
push
loopne
jns
clc
pop
mov
adc
add
fldl
popa
add
pusha
add
shlb
add
inc
clc
dec
test
test
jecxz
std
jb
add
clc
sarl
mov
clc
imul
sbb
add
jne
pop
cmp
popf
lret
ret
clc
dec
out
divb
lret
push
clc
out
mov
cmp
pop
rorb
lods
pop
mov
push
add
push
mov
push
add
push
pop
cmp
lea
mov
cmp
daa
clc
sub
test
fsubrp
daa
clc
jmp
cmp
xor
add
or
pop
xchg
ficoml
jns
clc
incl
loope
or
dec
push
call
add
xor
add
roll
clc
xor
add
fcoml
out
jb
add
popa
add
xbegin
add
daa
clc
sub
imul
clc
and
add
imul
add
pop
cld
scas
jg
data16
and
add
rcl
fisttps
fwait
cmp
clc
fidivrl
in
jb
add
and
add
jmp
icebp
cmp
out
xchg
data16
inc
clc
jge
jge
add
dec
mov
clc
add
test
movsb
clc
js
clc
out
dec
lcall
inc
clc
jle
clc
cmp
clc
movsl
clc
movsl
clc
jbe
sub
xor
add
cmp
clc
outsb
in
jo
add
add
outsl
inc
clc
and
add
clc
rcrb
add
data16
fucomi
push
repnz
and
add
add
adc
add
push
test
cmpsl
clc
mov
cmp
dec
jmp
es
pop
aas
pusha
add
clc
movsl
clc
lret
mov
clc
push
mov
add
jl
clc
fbstp
add
push
add
jp
add
dec
mov
fcoms
add
jg
shlb
add
add
add
add
mov
scas
imul
sbb
outsl
sti
ss
push
jmp
add
cmp
add
or
rorl
inc
clc
rcrl
clc
sti
xchg
dec
negb
jle
je
add
std
sar
clc
and
inc
clc
ljmp
pushf
mov
jmp
clc
fnsave
add
mov
lcall
inc
add
repnz
fs
xchg
and
mov
clc
lahf
movsl
clc
fdivl
sbb
jno
add
clc
jae
add
clc
cmp
cmp
add
add
push
fcmovne
xlat
mov
fldl
sahf
adc
add
clc
add
lea
cmp
add
add
inc
clc
sub
push
push
sbb
and
clc
popf
adc
and
jmp
add
add
clc
cli
sub
pop
push
push
xor
add
clc
dec
cli
sti
fidivrl
sub
sbb
add
test
pop
clc
mov
clc
cmp
sar
add
mov
divl
add
sahf
xor
add
add
pop
dec
insb
sbb
clc
mov
adc
add
clc
lahf
jno
add
mov
clc
in
adc
add
jo
add
mov
call
push
xlat
jmp
call
add
insb
arpl
add
sahf
int
cmp
mov
jbe
movsl
clc
popl
clc
cli
sbb
dec
ljmp
sbb
lret
cmp
clc
pusha
add
sar
adc
add
iret
es
xchg
inc
add
xchg
gs
clc
adc
add
outsb
aaa
pop
adc
add
add
xor
add
add
or
test
add
xlat
mov
mov
ja
pop
inc
clc
je
clc
aas
adc
add
loop
int3
jb
add
fcoms
add
push
push
bound
add
add
clc
fwait
mov
add
xlat
add
call
clc
repnz
clc
scas
sub
divl
mov
add
add
shlb
mov
ss
js
add
lcall
push
inc
add
mov
stos
mov
mov
add
push
test
mov
mov
mov
jbe
shr
xor
clc
clc
or
call
enter
lret
inc
add
clc
imul
clc
or
jb
add
clc
jp
cs
cmp
xor
add
push
add
dec
popa
add
dec
in
popa
add
xor
nop
and
clc
in
add
pop
adc
add
mov
int
clc
mov
data16
adc
add
clc
loope
or
xchg
mov
cmpsb
clc
inc
add
in
stos
pop
xchg
mov
or
aam
add
sub
sar
mov
clc
sar
pop
cmpsl
clc
push
adc
add
add
ficomps
lahf
add
add
add
es
fcoms
flds
int3
push
mov
mov
jmp
sub
dec
call
clc
stos
pop
xor
add
xchg
mov
add
add
add
daa
clc
fildll
aad
sub
iret
add
add
push
add
jmp
xor
add
add
xchg
mov
add
sub
mov
pop
mov
cli
and
add
clc
stc
out
sub
add
mov
add
jb
add
clc
mov
test
add
aas
xchg
mov
inc
add
sbb
clc
or
add
add
cwtl
ljmp
aas
or
jo
add
div
popf
aaa
lods
mov
cmp
mov
jle
lods
and
add
mov
clc
aas
adc
add
in
ljmp
dec
and
add
add
add
and
and
add
out
imul
xor
add
dec
mov
dec
mov
and
add
mov
xor
add
clc
mov
bnd
outsb
jns
add
mov
test
add
sbb
clc
test
je
inc
add
in
dec
mov
xchg
popa
add
aad
clc
pop
leave
vmovlps
add
loopne
imul
popl
add
pop
out
pop
inc
clc
xor
add
fdivp
pushf
mulb
sbb
das
call
push
add
pop
lock
jl
push
add
xlat
cmp
mov
add
pop
adc
add
sbb
add
push
xor
mov
fnstcw
sar
rcr
aas
jnp
add
int3
inc
add
std
xor
add
add
push
movsl
clc
jp
ret
negb
jl
xchg
jns
mov
mov
sar
clc
and
fwait
std
popl
daa
clc
addr16
shlb
push
add
fwait
bound
add
add
and
mov
clc
sbb
add
mov
mov
inc
add
push
mov
clc
mov
clc
cmp
imul
add
clc
pusha
add
xchg
push
xabort
clc
je
loope
test
daa
clc
outsb
lods
jge
clc
xabort
mov
add
nop
repz
push
or
jns
int
sub
clc
xabort
add
adc
call
add
xchg
dec
dec
dec
cmp
clc
cld
dec
adc
xabort
sahf
lods
push
clc
mov
cwtl
repnz
into
rorl
clc
outsl
adc
add
add
and
add
inc
clc
push
push
clc
or
clc
push
push
add
aaa
xchg
jecxz
xchg
in
push
add
xor
iret
push
clc
inc
clc
fnsave
pop
xor
outsl
int
jmp
aas
xchg
mov
jl
and
xor
add
xbegin
mov
lock
xchg
lods
popf
mov
cmc
mov
adc
jg
clc
mov
add
iret
stos
xor
mov
mov
scas
imul
jnp
cli
insl
push
js
sarl
cmp
nop
sub
add
mov
mov
push
push
mov
clc
adc
add
add
cmp
or
sbb
mov
add
add
jae
add
add
push
add
shlb
add
mov
add
loope
popf
push
add
js
add
mov
std
flds
add
dec
repnz
clc
inc
add
insl
scas
mul
clc
and
in
js
add
movsb
clc
dec
scas
out
out
lcall
clc
push
add
in
xchg
insb
or
add
add
xor
add
pop
stos
mov
pop
scas
imul
nop
imul
arpl
add
xchg
insl
loope
leave
insb
mul
clc
into
iret
mov
add
adc
mov
clc
mov
inc
clc
nop
fwait
scas
dec
xor
out
adc
add
add
add
imul
or
push
inc
clc
ffree
clc
mov
lcall
js
dec
hlt
filds
sar
cld
mov
and
add
mov
jo
add
add
movsb
clc
in
or
mov
mov
lcall
inc
add
mov
cmp
add
arpl
add
fnstenv
add
aas
inc
add
adc
add
sar
hlt
push
add
dec
push
fwait
inc
add
mov
mov
clc
xlat
lret
inc
clc
loope
push
das
movsb
clc
mov
sub
add
clc
cmp
add
inc
clc
xchg
int3
add
add
clc
push
or
iret
test
jo
add
add
add
sar
or
add
adc
add
fbld
mov
daa
clc
sahf
lock
pusha
add
dec
hlt
nop
inc
clc
aas
lahf
in
or
add
add
js
clc
push
inc
clc
mov
add
clc
push
clc
mov
lahf
xchg
test
xchg
jp
and
fmuls
add
push
stos
lock
cmp
inc
clc
xor
add
pop
add
sub
add
add
add
clc
adc
add
pop
sbb
add
inc
clc
stos
cmp
push
sub
lods
pop
jecxz
repz
xor
jns
add
inc
add
dec
out
inc
clc
call
sahf
adc
add
pop
dec
cmp
add
pop
scas
mov
add
push
add
adc
add
add
add
insb
in
testl
clc
mov
clc
mov
clc
in
scas
sub
clc
sbb
lret
jbe
clc
aam
add
pop
stos
fsubrs
loope
scas
mov
cli
sti
stos
sti
data16
push
sub
clc
mov
add
addr16
sub
repz
inc
clc
cmp
add
adc
add
mov
iret
test
push
add
insb
sbb
or
clc
mov
clc
jae
add
clc
sar
jns
add
add
clc
test
or
ret
add
sbb
add
jo
add
mov
jp
add
xbegin
add
add
cmp
scas
jno
add
add
aam
xbegin
push
clc
dec
mov
add
jp
pushf
movsl
clc
inc
add
nop
cwtl
inc
add
movsl
clc
hlt
jns
pop
ret
clc
mov
dec
pop
xor
clc
popf
fstps
mov
lret
fldcw
shrb
clc
xor
add
add
cmp
ljmp
sar
mov
clc
aad
clc
jno
add
inc
clc
pushl
add
into
sar
inc
add
int3
sbb
fcomps
sub
add
jp
inc
clc
push
add
xchg
cld
test
repnz
add
clc
das
fbstp
clc
mov
sar
add
cmp
inc
clc
cmp
pop
fwait
adc
add
cmp
insl
sub
out
xchg
adc
add
clc
es
cld
lahf
push
add
sbb
std
or
clc
sahf
cmc
bound
add
mov
jns
add
xor
add
add
xchg
stc
cmp
cmp
add
push
clc
int
neg
and
push
aas
mov
movsl
clc
or
pop
clc
or
add
cmp
add
clc
idiv
imul
scas
pusha
add
jle
fsts
ss
int3
adc
add
push
addr16
xchg
xor
inc
add
sar
pop
lods
mulb
add
popa
add
into
sub
test
cmp
add
cmpsb
clc
xchg
adc
add
ja
push
pop
pop
sbb
add
inc
clc
inc
clc
pushf
mov
add
mov
clc
xchg
adc
add
mov
imul
add
add
inc
clc
inc
add
mov
jae
add
clc
outsl
in
push
add
jns
fstl
add
test
lods
stc
push
add
add
add
add
jle
mov
mov
add
cmp
clc
dec
movsb
clc
or
jbe
add
add
clc
mov
hlt
sar
push
clc
ret
clc
push
mov
jecxz
inc
clc
ljmp
xor
add
add
int
clc
push
jl
adc
add
mov
aam
ret
clc
aad
gs
mov
clc
dec
pop
es
adc
clc
xlat
push
ficomps
sbb
hlt
test
xor
add
add
xchg
into
lret
xor
add
inc
clc
js
cwtl
dec
add
add
arpl
add
scas
repnz
adc
add
mov
cmp
lods
pop
lret
pop
xor
add
clc
and
add
xchg
lea
ficoms
lahf
repnz
lret
add
add
xchg
sub
xchg
jge
mov
in
pop
cmp
add
xchg
sbb
clc
xabort
sbb
cld
fnstenv
add
jecxz
jge
pop
outsb
iret
rclb
ret
inc
clc
rcrl
cmc
jne
clc
nop
es
xchg
dec
clc
pop
clc
inc
add
mov
jns
scas
pop
lea
mov
fimuls
clc
cmpsb
clc
mov
jne
mov
adc
add
clc
popa
add
jg
int
sti
js
and
add
add
mov
clc
pop
stos
test
inc
clc
lea
jge
sub
add
mov
inc
clc
jnp
add
xchg
mov
add
loop
or
ja
clc
sbb
add
add
inc
add
cmc
insl
sub
clc
ljmp
clc
cmp
push
clc
inc
clc
jmp
add
imul
add
or
sbb
test
cltd
lods
push
in
jp
pusha
add
cmpsl
clc
negb
clc
jnp
add
add
mov
clc
sar
clc
mov
pop
fs
and
add
clc
and
add
out
xchg
mov
clc
out
into
clc
cmp
add
dec
pusha
add
inc
add
pop
jp
inc
clc
xchg
popl
bound
add
lods
dec
cmpsl
clc
repnz
call
add
out
aaa
sahf
xbegin
push
out
jg
clc
stc
fs
jp
add
sub
jg
loop
cmc
add
add
mov
clc
xor
add
jbe
add
lahf
jae
add
add
add
popf
mov
mov
clc
scas
pop
clc
in
cmp
mov
and
add
jno
add
clc
jo
add
clc
jno
add
adc
add
sbb
pop
xor
cmp
clc
clc
cmp
pop
ret
clc
in
lods
mov
sub
adc
add
shlb
int3
push
or
add
pushf
and
add
add
xor
add
add
clc
stc
dec
js
addr16
fisubrl
add
xor
add
add
xor
add
add
push
mov
xor
add
popf
push
and
add
push
clc
arpl
add
jb
add
testl
adc
add
add
rcl
mov
pop
inc
clc
rcr
mov
imul
xchg
mov
clc
in
sahf
into
lcall
test
out
ffreep
clc
push
mov
je
outsb
and
add
clc
push
push
add
xlat
cmc
and
add
clc
gs
pop
dec
adc
add
clc
aam
add
fs
xchg
sahf
mov
jb
add
mov
clc
aaa
mov
cmp
insl
and
add
clc
mov
push
add
lock
or
cli
pop
sbb
ja
sbb
mov
sti
in
loope
dec
in
push
dec
fistps
cwtl
adc
add
jns
ds
pop
sub
clc
data16
sbb
add
xchg
repnz
mov
insb
mov
scas
insl
shlb
add
cmp
add
mov
movsl
clc
mov
je
ss
mov
lock
add
insl
ror
add
aad
cmp
clc
mov
and
add
xlat
cmc
lods
outsb
negb
jl
jl
dec
outsb
fists
clc
mov
jp
add
jns
push
adc
add
imul
cli
xchg
sub
mov
push
out
mov
push
pop
pop
clc
mov
add
dec
or
mov
clc
test
popa
add
xor
add
clc
or
clc
in
fsubr
lcall
add
add
cmp
add
add
clc
cmp
lahf
in
nop
clc
in
out
mov
add
add
mov
cli
add
add
sub
sbb
clc
push
dec
xchg
outsb
scas
adc
add
out
xchg
out
das
pop
jle
push
cli
adc
add
clc
fnstsw
clc
and
add
clc
xchg
xchg
aad
ss
div
adc
clc
cmp
clc
cmp
add
test
sbb
insb
rcl
cmp
mov
and
add
add
mov
imul
sahf
sbb
nop
push
dec
loop
jo
add
ja
and
enter
repnz
stos
in
test
hlt
mov
pop
push
clc
pop
xchg
lahf
pushf
push
mov
fistl
xchg
call
clc
jo
add
out
xor
add
add
push
mov
add
add
add
and
add
clc
inc
clc
xor
lock
mov
sbb
clc
test
jl
sub
clc
adc
add
int
movsl
clc
cmp
lock
int3
sbb
in
test
mov
add
fmuls
mov
push
add
mov
inc
clc
pop
pop
mov
ljmp
lcall
pop
push
add
jl
add
cmp
in
into
clc
test
jmp
push
jnp
clc
xor
cmpsl
clc
int3
sar
int
add
stc
js
clc
jmp
clc
gs
mov
cltd
loope
loope
ss
scas
or
cmp
popf
xchg
pushf
xor
add
clc
mov
adc
add
sub
jno
add
push
add
push
add
jge
clc
push
clc
cmp
hlt
cmp
aad
cmp
mov
sbb
loop
in
pop
int
cmp
es
xbegin
add
add
out
sub
push
add
and
inc
clc
outsb
xchg
movsb
clc
pcmpeqd
clc
jg
das
cmc
clc
inc
clc
cvtpi2ps
test
add
cwtl
insb
icebp
mov
xchg
xchg
mov
out
bound
add
fs
mov
or
sar
gs
aad
clc
out
insb
test
movsb
clc
and
es
pusha
add
cmc
cwtl
xchg
add
sbb
and
mov
dec
sub
sar
add
jmp
cmp
add
clc
cmc
mov
clc
ret
push
fcmovnb
clc
mov
test
dec
push
add
jno
add
xor
out
and
add
jmp
lahf
cld
fsubl
add
clc
shr
lret
push
out
jl
cwtl
xor
daa
clc
dec
add
int3
lock
add
mov
clc
repz
icebp
iret
das
dec
idivb
sub
outsl
jle
dec
cmp
xchg
std
mov
nop
testl
add
aam
push
fisttps
clc
push
sub
add
mov
fcom
cmp
add
sti
mov
ds
add
cmp
add
test
xor
jb
add
xor
add
insb
ja
dec
aaa
sub
cmp
add
sbb
add
add
fisttpll
repz
push
add
lods
jecxz
mov
and
add
das
ret
popa
add
xor
add
add
mov
xchg
cmp
add
and
lods
cmp
sbb
mov
clc
mov
scas
dec
loopne
pop
push
sbb
pop
das
pusha
add
adc
add
push
add
jp
dec
mov
int
loope
je
repz
add
js
clc
std
push
and
add
scas
ja
xlat
pop
mov
clc
cmc
mov
add
fnsave
inc
add
mov
inc
clc
dec
mov
sbb
jns
clc
sar
ds
inc
add
sbb
mov
jge
jbe
cli
push
add
bswap
jb
add
mov
add
in
dec
roll
add
add
fwait
ret
clc
mov
out
dec
and
add
clc
loop
test
and
add
pushf
test
add
cmp
das
fsubrs
sub
clc
mov
lods
or
cwtl
int
sub
add
clc
jge
mov
lret
fs
sar
data16
popa
add
bt
fnstenv
mov
add
clc
lret
push
add
aam
or
add
aad
clc
lcall
xchg
mov
test
clc
aas
mov
xchg
push
ds
clc
inc
clc
fiaddl
add
xchg
mov
dec
cmp
add
nop
pop
cmp
add
push
pop
notl
fiaddl
jo
add
add
jb
add
add
add
jmp
clc
cmpsb
clc
jnp
add
sbb
xbegin
inc
add
shrl
add
out
xabort
or
clc
adc
pop
cld
mov
int
mov
add
std
dec
inc
clc
in
mov
jl
cwtl
pop
clc
xchg
pop
jnp
pusha
add
push
add
lea
push
out
insl
lcall
adc
add
in
xor
add
test
mov
jbe
decb
clc
dec
push
add
cmp
add
cmp
push
mov
xor
add
sbb
add
jle
sub
add
add
jle
adc
add
xor
add
cld
lcall
arpl
add
dec
mov
fwait
fwait
arpl
add
clc
rclb
dec
rcrl
in
pusha
add
shl
clc
inc
add
jnp
insb
push
clc
add
ja
clc
test
inc
add
js
and
add
mov
clc
mov
mov
gs
imul
adc
cmp
push
cmp
sub
clc
inc
add
addr16
add
add
cltd
lock
pop
inc
clc
adc
clc
jmp
imul
outsb
inc
clc
and
jb
add
jecxz
addr16
mov
mov
jb
add
add
addr16
gs
mov
add
mov
add
clc
dec
es
rorb
or
sub
add
clc
cmp
jge
xbegin
jp
in
adc
add
daa
clc
test
clc
or
cli
aaa
sub
inc
clc
lods
cmp
clc
pop
inc
add
jge
repnz
dec
jno
add
xchg
ja
sbb
jbe
int
add
rorb
push
leave
xchg
push
add
sub
insb
and
test
push
add
data16
bound
add
add
decl
add
add
adc
cmp
xchg
push
add
repz
bound
add
add
stos
adc
add
xchg
sub
clc
jo
add
or
mov
clc
xchg
sub
push
jecxz
mov
push
mov
cmp
add
mov
add
not
cmp
aaa
adc
adc
add
mov
es
das
nop
cltd
sahf
xchg
dec
inc
add
loope
into
mov
clc
imul
sti
and
inc
clc
inc
add
mov
sbb
inc
add
pop
pop
xbegin
clc
cmpxchg
stos
ret
clc
fstp
xchg
mov
xchg
scas
scas
xor
leave
mov
clc
pop
xchg
cmp
mov
loope
xbegin
inc
clc
mov
add
dec
or
repnz
fdiv
fiadds
add
sub
jb
add
jp
clc
cmp
or
loop
jg
xchg
mov
clc
pusha
add
negl
push
clc
mov
push
hlt
or
jo
add
sub
iret
cmc
cmp
cmp
adc
add
xor
add
xbegin
mov
push
add
jp
push
adc
add
into
pop
cmpsb
clc
addr16
cmp
push
xchg
jmp
xbegin
mov
or
leave
xor
add
xchg
adc
add
add
pusha
add
xchg
dec
test
push
clc
jae
add
mov
lcall
add
and
add
xchg
push
insl
sahf
out
dec
outsb
das
in
pop
lods
inc
clc
add
mov
cmpsl
clc
pop
lahf
mov
clc
adc
add
mov
clc
jo
add
loopne
xor
sub
clc
je
clc
addr16
jb
add
xor
fldcw
js
clc
stos
insl
lock
push
add
xchg
inc
add
add
add
cmp
add
add
stos
cmp
add
add
add
add
add
inc
clc
movsb
clc
sub
repnz
vdivps
add
jns
mov
add
cmp
xchg
dec
out
je
in
jo
add
ljmp
clc
jecxz
pusha
add
cltd
push
inc
clc
push
push
mulb
mov
inc
clc
push
add
push
add
test
sbb
pop
dec
fimull
add
dec
cmp
aam
add
dec
mov
add
mov
stos
cmc
repnz
cmp
int3
sbb
addr16
push
shll
clc
xor
add
cltd
xor
add
add
movsb
clc
aas
arpl
add
insl
add
sub
clc
lcall
add
cmpsl
clc
mov
add
add
lods
add
test
popa
add
push
add
xor
add
add
test
pop
jb
add
lods
cwtl
in
push
push
imul
cmp
add
and
inc
add
insl
test
clc
cmp
push
clc
in
ja
add
out
mov
add
lods
inc
clc
comiss
clc
xor
repnz
dec
test
cli
push
pusha
add
mov
add
mov
add
iret
jno
add
enter
mov
mov
jmp
inc
clc
xchg
pop
fcomps
out
fwait
adc
add
mov
movhps
clc
imul
pop
clc
je
add
add
add
stos
mov
scas
ds
add
fcmovnb
clc
fidivrl
fisubrl
xchg
mov
and
add
mov
testl
cltd
shl
or
sbb
add
pop
clc
mov
clc
es
gs
push
add
inc
add
in
pslld
clc
sar
add
clc
fs
push
add
add
arpl
add
add
jmp
xor
add
sbb
clc
xor
add
test
add
clc
mov
mov
in
int3
fdivrp
in
lea
jmp
imul
arpl
add
call
loopne
cmc
adc
add
jo
add
ds
cmp
imul
clc
sar
jnp
clc
jge
and
xchg
mov
add
aad
clc
into
mov
mov
mov
cmp
loopne
fwait
xchg
lcall
cmp
add
clc
pusha
add
cmp
jbe
xchg
push
clc
cmpsl
clc
js
aad
inc
add
shl
clc
pusha
add
push
shll
xchg
divb
jo
add
imul
clc
das
mov
aas
movsl
clc
cmp
or
in
out
add
jae
add
sbb
aaa
xor
test
inc
add
shll
mov
add
into
nop
in
stc
repz
cmpsl
clc
sub
ret
clc
shlb
pusha
add
push
add
xchg
jle
sub
add
jp
and
add
adc
add
xchg
sahf
push
xchg
jle
mov
outsb
daa
clc
dec
add
add
mov
clc
jp
outsb
idivb
cld
sub
incb
add
int3
ret
xor
add
clc
add
add
add
pushf
xor
jg
scas
mov
clc
fstl
add
dec
xor
add
cs
mov
and
imul
sbb
mov
gs
negb
inc
clc
int3
das
or
add
icebp
sub
clc
pop
mov
ret
push
add
insl
cmp
mov
dec
in
push
mov
popa
add
or
inc
clc
icebp
sahf
cli
push
xlat
xchg
and
add
arpl
add
sub
push
clc
dec
push
clc
ljmp
clc
cmp
data16
inc
add
cmp
sub
dec
mov
clc
cmp
clc
insb
mov
test
clc
sar
and
add
inc
clc
lret
mov
loopne
addr16
pop
clc
mov
addr16
inc
add
sbb
inc
clc
inc
add
push
hlt
jle
lods
ja
clc
ret
clc
sar
clc
push
lock
cmp
pop
out
or
add
std
icebp
mov
pushf
jns
add
aam
sub
add
sbb
sbb
add
bound
add
clc
not
icebp
arpl
add
clc
jno
add
add
add
add
add
add
pop
aaa
xor
add
add
add
or
xchg
stc
or
add
cmpsl
clc
jae
add
mov
sbb
dec
xchg
sub
add
sbb
mov
add
adc
add
cmp
mov
dec
pop
repz
cmp
dec
gs
xbegin
lahf
lock
jbe
dec
out
cmp
clc
fwait
adc
and
or
add
and
add
add
lods
stos
pop
xchg
jge
imul
clc
daa
clc
xor
add
clc
push
add
mov
addr16
cmp
sahf
push
add
add
mov
adc
add
dec
jne
outsl
das
dec
cmp
clc
insb
ljmp
cmp
cmp
in
and
add
lret
push
popa
add
data16
shlb
mov
imul
pop
cmpsl
clc
cmp
es
mov
divl
rorl
lods
push
movsl
clc
jo
add
and
add
mov
add
pop
das
arpl
add
clc
lods
push
adc
jmp
jno
add
sub
add
xabort
add
xor
add
sub
cltd
dec
test
push
dec
mov
outsl
bound
add
add
cmp
clc
or
dec
es
and
leave
sub
arpl
add
pop
xor
add
gs
mov
add
xchg
xchg
xchg
mov
fildll
or
xor
add
push
add
add
add
clc
data16
je
aaa
pop
mov
imul
popf
pop
xchg
pushf
aad
outsl
test
cmp
ficomps
inc
clc
ja
mov
or
sub
clc
add
add
xchg
in
fwait
fisttpll
add
pop
in
sub
add
imul
insl
insl
sub
shlb
clc
pusha
add
inc
clc
pop
clc
imul
sar
dec
push
add
sar
clc
mov
clc
sbb
pusha
add
addr16
pop
adc
clc
push
out
cmpsb
clc
fs
aam
adc
mov
jl
push
add
aas
das
aad
add
xbegin
clc
outsl
push
jl
add
sbb
int
clc
pop
mov
clc
or
jno
add
pusha
add
fisttps
stos
arpl
add
push
mov
clc
in
push
mov
add
clc
add
add
add
mov
and
add
adc
add
pop
sub
gs
and
add
add
mov
xor
sti
pop
sbb
js
clc
dec
jnp
cmp
mov
stc
hlt
dec
insl
cs
dec
mov
add
mov
lret
and
add
add
clc
or
add
leave
cmpsb
clc
scas
jp
stos
mov
jl
or
and
add
or
test
xchg
cltd
movsl
clc
cltd
cmpsb
clc
add
add
dec
adc
add
clc
and
jge
inc
add
test
mov
clc
add
add
or
clc
fimuls
adc
add
add
jge
clc
push
clc
testb
xor
mov
sbb
clc
ret
clc
mov
clc
xor
clc
dec
sahf
jecxz
inc
clc
mov
fisubs
in
xbegin
je
mov
stos
cltd
pop
lock
mov
add
cwtl
repz
clc
inc
add
in
adc
jne
clc
test
dec
aas
add
add
mov
xchg
mov
ret
clc
in
mov
clc
aam
clc
cmp
sbb
sar
jmp
push
clc
sbb
dec
in
jnp
add
lods
mov
jns
xabort
clc
ds
and
add
add
popa
add
and
add
ret
clc
call
clc
fmuls
clc
fwait
ret
clc
mov
clc
out
push
fcomps
mov
clc
jp
jmp
fsubl
fildll
clc
insl
cmp
scas
pop
scas
mov
and
add
out
pop
mov
clc
int
add
sub
clc
fnstenv
mov
clc
push
dec
nop
xchg
mov
add
jne
clc
or
add
addr16
pop
out
iret
sar
dec
xchg
push
clc
mov
pop
clc
xor
add
sub
add
sbb
arpl
add
clc
mov
pusha
add
jg
add
push
push
je
clc
jg
clc
dec
js
pop
push
add
cmp
clc
push
clc
sbb
movsl
clc
mov
and
add
in
xlat
jno
add
add
stos
jl
lcall
jns
loop
sub
cmp
scas
xor
add
jg
scas
fsubrl
clc
adc
add
xlat
pop
jns
clc
test
out
aad
xor
add
and
enter
addr16
repnz
stos
or
jl
and
movsl
clc
cwtl
pop
jnp
jmp
fs
inc
add
sbb
fwait
data16
dec
push
add
cmp
xchg
xor
stc
js
xchg
inc
add
pop
ficomps
clc
jne
add
inc
add
test
add
cmp
out
mov
add
xor
add
fnstenv
add
shlb
stos
and
add
clc
mov
ljmp
pop
cs
pop
xchg
daa
clc
lods
xor
test
add
clc
dec
jg
clc
mov
clc
ljmp
clc
pusha
add
clc
mov
add
cli
cmp
add
fnstcw
clc
stc
ds
push
adc
add
ljmp
clc
inc
clc
add
add
clc
xchg
cmp
test
loopne
inc
add
mov
add
and
add
cmp
add
cmp
add
add
rol
clc
into
fldt
mov
add
iret
aad
leave
test
es
mov
add
xchg
roll
clc
dec
dec
lahf
cmpsb
clc
add
and
clc
mov
scas
mov
clc
xchg
loop
inc
add
dec
push
dec
add
add
dec
fimull
lods
loope
test
mov
clc
inc
clc
xor
push
mov
add
push
add
pop
inc
add
pop
cmp
push
xor
add
jae
add
add
push
add
sbb
add
cli
addr16
mov
repz
lcall
add
lret
sub
mov
add
mov
add
mov
add
icebp
jns
clc
sar
clc
cmp
into
clc
loope
cmp
sub
add
xchg
repz
scas
adc
mov
in
repz
cmpsl
clc
je
dec
cmpsl
clc
daa
clc
mov
imulb
mov
cmp
xor
add
cmpsb
clc
movsl
clc
pop
cmpsl
clc
out
aam
push
clc
imul
icebp
incl
add
ss
data16
shl
clc
push
pop
clc
mov
add
cmc
sub
jp
clc
addr16
push
sbb
add
add
clc
cmp
clc
and
add
mov
inc
clc
rcrb
add
jae
add
mov
add
add
sub
imul
push
add
call
jnp
sbb
enter
repz
fs
clc
test
movsb
clc
inc
clc
fs
cmp
dec
aad
add
mov
insl
push
add
xchg
test
or
add
xor
add
add
fidivs
add
and
add
add
pause
fwait
pushf
ss
add
fwait
cmp
lock
mov
clc
mov
jne
add
lahf
ret
cwtl
mov
add
sub
inc
add
leave
addr16
das
out
lret
add
pop
fwait
cmc
fcomp
xchg
test
dec
aaa
mov
add
int3
jne
pop
mov
insb
push
add
outsl
movsb
clc
pushf
dec
ror
dec
mov
jp
clc
push
cmp
clc
mov
add
push
xchg
cltd
jnp
jl
add
ljmp
clc
mov
sbb
dec
jecxz
outsb
dec
sar
cmp
sub
add
loope
mov
add
out
aas
mov
clc
xchg
fwait
out
jp
and
add
jbe
dec
jge
jecxz
ret
clc
cld
mov
add
add
add
jmp
sbb
stos
or
es
addr16
mov
test
lcall
dec
fsubrs
negb
leave
cmpsb
clc
stc
rclb
xchg
jle
push
bound
add
add
push
add
sub
add
icebp
add
add
add
dec
xchg
sarb
icebp
pop
xor
add
bound
add
jno
add
add
icebp
out
inc
clc
fisttps
clc
shrl
add
mov
jmp
clc
cmp
dec
push
mov
add
dec
or
add
add
add
clc
adc
add
out
adc
or
testl
lock
add
repz
sbb
dec
sub
xor
add
clc
xchg
sub
clc
cmpsb
clc
test
or
pop
cmp
push
cmp
idivb
clc
bound
add
clc
inc
add
jmp
hlt
shll
mov
inc
clc
sbb
clc
cs
mov
add
push
clc
mov
add
push
add
mov
cmpsl
clc
testb
je
pop
leave
sub
sub
mov
and
add
fwait
push
sbb
das
xchg
scas
mov
int
clc
add
clc
jbe
gs
mov
add
icebp
fcompl
movsb
clc
es
ds
int
add
das
cltd
jge
add
and
add
add
mov
add
aas
jbe
xchg
dec
scas
iret
cwtl
inc
clc
push
add
push
add
or
cli
add
add
mov
add
ljmp
jmp
clc
loop
rorl
divl
add
popa
add
clc
mov
test
jns
mov
dec
xor
push
mov
jge
xchg
fsubp
clc
cs
addr16
mov
cmp
push
cmp
movsb
clc
cmp
sti
jae
add
cld
adc
add
addr16
ret
clc
cmp
pop
clc
int
fs
insl
add
adc
add
cmp
add
xchg
cltd
sub
clc
icebp
sub
jb
add
ss
jle
push
int
imul
insb
push
push
das
add
add
add
mov
outsb
fisttps
aas
mov
add
insl
movsl
clc
scas
lret
stc
and
cmp
mov
xor
add
add
dec
gs
jge
add
cmp
mov
add
ss
clc
mov
push
mov
xchg
jg
jno
add
add
clc
push
add
jmp
clc
scas
pusha
add
push
add
psubd
sub
stc
mov
add
push
jle
adc
adc
add
mov
cmp
xchg
jmp
clc
dec
add
inc
add
in
xchg
mov
add
adc
add
dec
addr16
push
add
mov
mov
in
xor
add
add
push
add
pop
movsl
clc
and
add
sub
mov
outsl
xchg
sbb
clc
xor
aaa
and
add
lcall
movsb
clc
ja
add
mov
clc
pop
or
jle
scas
xchg
cwtl
mov
or
dec
mov
push
aas
lock
fistps
clc
cmpsl
clc
ret
clc
popf
jne
dec
mulb
add
add
add
loop
cli
xor
add
incl
lea
pop
push
add
lods
sbb
xchg
mov
push
pop
jae
add
clc
lock
dec
sub
clc
into
std
test
ljmp
dec
es
pop
scas
sub
cmp
stos
insl
mov
clc
fsincos
cmp
lahf
addr16
push
add
cmp
dec
mov
test
nop
scas
cmp
add
push
repz
inc
clc
push
cs
out
notl
clc
jmp
add
fimull
xlat
jge
lret
bound
add
mov
mov
add
loop
cmp
clc
cmp
out
inc
clc
loopne
cmp
mov
cmpsb
clc
lea
clc
xchg
in
movsl
clc
xor
add
sbb
add
lret
aam
clc
ljmp
add
ss
jmp
mov
xchg
mov
add
outsl
popa
add
mov
pop
out
mov
add
and
add
std
mov
add
or
cmc
mov
jno
add
jl
out
mov
add
dec
out
jb
add
icebp
sub
mov
lods
stos
jmp
and
add
xchg
add
add
enter
mov
jle
nopl
jnp
in
and
add
xor
add
mov
xchg
dec
jg
clc
xor
add
sub
adc
add
xchg
arpl
add
loopne,pt
scas
in
enter
xchg
xchg
leave
dec
mov
ret
clc
pusha
add
cltd
hlt
xor
add
adc
mov
add
in
arpl
add
movsl
clc
test
add
clc
and
cmp
add
or
movsb
clc
sbb
adc
dec
jmp
add
add
adc
add
clc
mov
clc
inc
clc
fstl
xchg
push
iret
sbb
lahf
xor
add
add
ja
fisttps
push
xchg
xor
add
push
add
stos
popa
add
fwait
lods
mov
xor
call
push
shlb
into
data16
adc
aad
clc
cmp
leave
push
pop
add
add
clc
push
add
fisttps
cs
scas
sbb
and
add
pop
in
std
jp
xchg
gs
or
cli
unpcklps
and
add
clc
fs
fsubrs
sar
or
mov
add
inc
add
adc
mov
and
add
loopne
pop
cmpsl
clc
je
outsl
push
clc
into
gs
ret
clc
cmp
push
add
dec
mov
shll
sbb
cmp
clc
test
add
add
mov
fisttps
add
cmp
out
mov
xchg
sub
xchg
repz
clc
gs
lock
add
clc
scas
je
clc
jb
add
xor
add
add
insl
mov
push
jp
pushf
sub
xchg
cmp
clc
arpl
add
gs
and
add
add
or
sti
sti
popf
cwtl
push
add
mov
das
repnz
clc
mov
add
leave
pop
ficoms
or
inc
clc
push
repnz
add
cli
fisubrs
add
jbe
clc
jo
add
clc
out
repnz
or
clc
clc
aaa
push
arpl
add
clc
mov
xor
add
and
add
clc
in
loopne
push
mov
pop
push
or
test
clc
jl
clc
in
addr16
sbb
jge
int
mov
push
mov
mov
fmull
push
dec
addr16
cmp
imul
add
add
cmp
or
add
jb
add
lahf
sub
clc
iret
inc
add
aas
outsl
popf
adc
add
icebp
out
lret
add
movsl
clc
pop
cltd
cmp
leave
or
aad
add
shlb
clc
adc
add
out
xchg
adc
fiaddl
test
add
fidivl
push
xbegin
test
jp
push
add
cwtl
push
out
repz
cmpsl
clc
mov
add
jp,pn
add
add
inc
clc
cld
shll
add
idivl
pop
mov
fisttps
clc
push
pop
mov
add
fildll
test
clc
fwait
or
fadds
clc
dec
inc
add
xchg
mov
fwait
je
push
jl
dec
adc
clc
pop
loope
out
fwait
xchg
add
mov
push
ja
sub
clc
outsb
cmp
or
jge
stc
jo
add
mov
add
jge
dec
pushf
or
iret
call
clc
imul
lcall
push
pusha
add
push
add
sbb
add
cld
push
clc
lods
sub
clc
or
add
jge
imulb
pop
pop
clc
pop
paddsw
xchg
pop
pop
xor
clc
pop
dec
cmp
out
loop
ret
clc
pop
js
mov
clc
leave
add
movsb
clc
icebp
mov
fadds
add
pop
clc
mov
cs
dec
xchg
mov
adc
add
clc
jmp
add
add
daa
clc
repnz
clc
pop
clc
std
and
mov
cmp
cmp
out
cmp
lea
incl
add
mov
push
mov
add
pop
mov
clc
sbb
loope
pop
std
sti
leave
dec
mov
push
inc
add
push
add
int
movsb
clc
fcompl
movntq
out
bound
add
add
push
mov
ljmp
push
mov
jno
add
mov
inc
clc
push
adc
add
imul
add
clc
test
movsb
clc
in
dec
fmull
add
inc
add
loop
jecxz
cmpsl
clc
push
add
xchg
shrb
add
inc
clc
fsubp
clc
fs
mov
js
add
add
add
clc
mov
clc
shlb
add
push
add
xchg
jae
add
insl
cmp
add
mov
in
xchg
sahf
stos
adc
add
push
add
test
inc
add
jge
fwait
or
clc
arpl
add
inc
add
mov
add
add
sbb
add
xchg
add
push
xchg
pop
inc
add
sbb
out
push
fdivrl
rcrl
clc
je
mov
pop
pushf
movsl
clc
or
clc
in
xor
add
add
jp
xor
add
add
sbb
adc
add
std
int
cltd
push
pop
adc
add
cs
mov
loopne
jmp
hlt
and
push
clc
inc
add
leave
sarb
push
xchg
sub
mull
mov
cli
test
and
add
clc
mov
add
or
rcr
add
add
sbb
rclb
add
jno
add
mov
xchg
loopne
add
add
imul
mov
cmp
push
add
jo
add
loop
fadds
add
imul
scas
fmul
xabort
sar
cmpsb
clc
aam
lods
mov
mov
sub
out
cmp
scas
aas
hlt
jl
clc
clc
mov
add
jge
clc
xchg
inc
add
test
test
js
xchg
stc
mov
push
add
add
add
add
mov
clc
cmp
clc
data16
jg
lret
inc
clc
jbe
clc
test
pop
jb
add
add
jbe
dec
add
add
insl
std
rolb
mov
mov
cmp
clc
aam
addr16
data16
xor
add
movsl
clc
cmp
push
fcomps
rcl
push
add
out
mov
clc
stos
stc
mov
clc
jecxz
inc
clc
lret
shr
lock
sar
clc
cli
or
xchg
popa
add
repnz
push
aaa
icebp
call
in
or
clc
xchg
jmp
clc
push
add
and
add
popa
add
cmp
add
push
lret
cs
mov
cmp
test
adc
mov
fcompl
aam
scas
inc
add
icebp
push
add
inc
clc
and
add
add
xchg
xchg
cmp
add
sbb
jne
clc
loope
decl
frstor
test
mov
mov
pop
hlt
jp
negb
fimuls
jmp
xchg
dec
jo
add
mov
clc
in
int3
jb
add
add
jnp
adc
add
clc
imul
add
cmp
es
pop
cmp
push
add
rolb
add
loopne
jmp
lcall
hlt
loopne
clc
es
out
test
out
sub
add
and
mov
aam
push
clc
imulb
loopne
mov
pop
clc
mov
ror
sahf
mov
and
add
pop
clc
stos
push
clc
jne
or
add
in
imul
shll
add
daa
clc
dec
fadds
sbb
inc
clc
sub
clc
std
cli
jmp
clc
sahf
pop
leave
clc
add
add
loopne
popf
jmp
mov
mov
add
xchg
aam
idiv
add
add
sar
stos
aad
clc
leave
jbe
pop
imul
add
add
add
clc
dec
cli
mov
push
clc
nop
lahf
mov
sub
xchg
jbe
add
add
add
clc
adc
add
jmp
insl
push
test
inc
add
pop
clc
fucomp
add
in
out
xchg
dec
or
ljmp
cs
xchg
push
dec
icebp
dec
dec
sbb
hlt
mov
mov
xchg
xabort
add
addr16
aam
mov
clc
add
add
fcoms
add
jo
add
add
clc
lea
mov
movsl
clc
push
clc
xor
add
clc
jb
add
ret
clc
dec
clc
cld
mov
aaa
cmp
clc
fidivrl
inc
clc
rcll
clc
and
add
sub
fidivrs
push
ljmp
bound
add
mov
jnp
enter
sub
clc
or
add
cs
sub
cmp
add
gs
mov
lock
std
cli
mov
clc
bound
add
shl
jle
ja
and
add
arpl
add
mov
add
clc
daa
clc
ja
mov
loop
mov
pop
clc
mov
mov
inc
clc
mov
mov
add
add
insb
std
sub
jb
add
out
push
dec
invd
and
add
clc
mov
clc
inc
clc
push
add
aam
jae
add
add
xchg
imul
lods
sbb
jle
jmp
add
call
fnsave
add
xor
add
clc
outsl
das
xchg
scas
xor
and
test
mov
xchg
test
cmpsb
clc
jl
cmp
clc
inc
add
bt
pushf
pop
clc
mov
popa
add
call
add
pop
jnp
sti
pop
clc
imul
add
add
in
lods
or
add
clc
sti
fwait
pop
clc
jle
jbe
rcll
shr
ljmp
lahf
cmp
or
clc
or
dec
sbb
add
xlat
fwait
dec
sub
js
loopne
mov
fmull
add
add
push
add
icebp
imul
in
nop
jo
add
clc
xor
imulb
add
xor
add
aaa
cmp
clc
aad
mov
ljmp
mov
add
data16
sar
add
out
mov
mov
test
cmp
pop
cmp
add
out
add
add
fwait
sbb
and
add
pop
jge
jmp
cmp
cli
and
add
in
insb
fwait
pmaxsw
cs
and
dec
xor
add
iret
imul
aaa
add
add
pop
lea
jge
call
add
out
sar
cmpsl
clc
mov
add
adc
add
clc
stos
push
push
test
cmp
or
add
pop
dec
icebp
inc
clc
fwait
push
icebp
add
jb
add
add
sub
add
shr
cmp
icebp
aas
lret
jl
add
sbb
lahf
xor
clc
sub
ret
xchg
scas
jg
das
sti
daa
clc
mov
clc
cwtl
mov
inc
add
outsb
outsl
xor
add
push
mov
add
cmovb
add
mov
clc
cli
sub
sar
jp
push
add
sar
add
das
jle
shlb
add
jo
add
add
clc
ds
add
mov
aaa
mov
add
pop
jno
add
ljmp
loopne
icebp
insl
inc
add
push
clc
mov
add
add
jnp
add
fcoms
add
or
out
jle
add
test
push
clc
idivb
inc
clc
push
cmp
xchg
outsb
fs
ret
add
fs
push
nop
cs
inc
add
mov
jge
or
add
and
daa
clc
sar
clc
xbegin
and
add
or
pop
dec
pop
out
inc
clc
cmpsl
clc
jns
add
mov
clc
or
sahf
clc
fmull
fstl
aas
xabort
data16
test
pop
icebp
roll
dec
cmp
std
popa
add
or
mov
jae
add
leave
testb
clc
xchg
and
add
int
clc
pop
adc
mov
outsb
add
cmp
and
add
pop
lea
add
jp
pop
and
pop
xor
clc
int3
stos
in
aad
xabort
or
dec
xor
add
add
fcmovnbe
sub
clc
das
sar
into
inc
add
leave
mov
add
clc
inc
add
test
vdivps
sbb
test
es
cmp
cmc
in
xchg
in
sar
clc
or
add
jne
clc
mov
cmp
add
fsubp
clc
mov
dec
call
fdivr
mov
pop
fistpll
sbb
int
aam
sar
clc
popf
into
dec
jne
clc
cmp
repz
pop
clc
int3
cmpsl
clc
push
clc
push
ds
xchg
sbb
clc
in
dec
mov
push
jle
inc
clc
inc
add
push
add
stc
in
mov
mov
clc
aad
clc
addr16
loopne
inc
clc
and
add
flds
add
add
add
in
lock
xchg
lret
mov
lret
add
inc
clc
cmp
mov
pop
icebp
je
adc
xchg
movsl
clc
mov
push
add
ja
add
dec
pop
clc
add
add
add
pop
imul
dec
stos
lret
addr16
cmp
clc
jne
dec
dec
xabort
sbb
clc
arpl
add
mov
mov
add
call
jb
add
clc
data16
or
add
xchg
xor
add
movq
clc
movaps
clc
adc
add
add
loopne
mov
pop
sub
add
icebp
adc
add
inc
clc
mov
pop
clc
push
add
inc
add
push
xor
add
loope
adc
add
and
scas
repz
test
lods
mov
add
js
popf
cmp
clc
daa
clc
test
add
jnp
pop
fisubrs
ljmp
movsb
clc
push
mov
lock
add
clc
pusha
add
aam
jne
sub
and
add
mov
clc
ret
dec
inc
clc
lods
leave
ret
push
add
jp
add
mov
adc
add
jmp
add
add
clc
movsl
clc
push
add
in
ljmp
mov
stc
fs
sub
add
mov
dec
cmp
and
sub
gs
add
add
outsl
cli
dec
movsl
clc
push
test
xabort
or
clc
cmp
movsl
clc
xchg
rcrl
add
shll
lret
add
cld
fs
and
add
cld
sub
add
fcompl
dec
arpl
add
add
clc
js
adc
aaa
jg
test
cmp
fmuls
push
add
add
add
jno
add
clc
out
clc
mov
es
int3
push
jecxz
inc
add
insb
movsb
clc
dec
cmp
clc
nop
out
mov
clc
sar
sub
xchg
mov
movsl
clc
sub
push
add
jg
pushf
add
add
or
adc
and
adc
add
clc
iret
xchg
sub
out
pop
push
fldl
add
add
jbe
rclb
add
mov
icebp
dec
jbe
cltd
rcl
jne
dec
pop
cwtl
sar
xor
add
in
in
mov
add
jp
add
enter
add
cmp
add
mov
sar
sub
xchg
mov
das
lods
fidivl
add
pop
mov
inc
add
lret
dec
cld
fldcw
inc
add
inc
add
scas
and
add
mul
clc
mov
inc
clc
test
mov
test
jo
add
push
add
xor
add
add
inc
clc
fidivs
movsb
clc
cmp
add
add
fwait
adc
add
mov
lret
add
add
jne
or
sti
push
insl
stc
adc
dec
lods
or
cmp
jg
and
add
add
rorb
sbb
dec
clc
aas
leave
pop
movsl
clc
add
add
add
jp
and
clc
js
sub
jmp
clc
pusha
add
stc
cli
mov
clc
pop
aam
clc
or
clc
add
add
xor
mov
or
add
insl
adc
add
and
add
xbegin
clc
and
add
xchg
call
sub
inc
clc
cwtl
or
pop
movsl
clc
sbb
add
in
pop
mov
add
leave
jnp
clc
jns
shll
out
add
add
push
add
notb
add
cmp
mov
add
inc
clc
sub
add
jne
in
jbe
insb
and
inc
add
aaa
mov
clc
push
repnz
add
jg
sub
imul
clc
cmc
xor
add
xchg
gs
in
cmp
stos
pop
mov
mov
loope
fsubl
fnsave
add
mov
clc
fstpl
jb
add
ret
clc
pop
xor
add
or
mov
clc
fwait
push
jns
shlb
add
mov
add
iret
and
clc
xbegin
clc
bound
add
cmpsb
clc
negl
add
add
add
test
xchg
outsb
adc
add
inc
clc
cmc
bound
add
add
je
pop
push
std
mov
or
add
rep
dec
fwait
fwait
addr16
scas
jbe
clc
in
int
mov
mov
dec
dec
sbb
sub
cmc
call
jbe
pop
dec
in
mulb
loope
into
mov
ljmp
loope
cmp
add
mov
jle
clc
fucomi
mov
push
scas
add
add
mov
clc
cmp
pop
enter
std
pop
out
cmp
adc
add
cmc
in
jecxz
xchg
sbb
add
jmp
insb
or
int3
fists
pop
das
clc
std
lock
clc
inc
add
sub
clc
xor
add
repnz
clc
in
gs
or
push
add
sar
fldenv
inc
clc
cmpsb
clc
xchg
sar
or
dec
cmp
dec
and
add
je
fsubr
add
add
add
adc
add
clc
cli
cmp
pusha
add
in
js
popa
add
enter
add
add
fisubrl
cwtl
adc
add
cmp
data16
icebp
ret
clc
lea
clc
cmp
pop
or
push
sub
pop
push
or
xabort
in
ficompl
add
xor
add
aas
mov
inc
add
push
pusha
add
sub
add
cld
stc
adc
add
add
mov
adc
add
jle
movsb
clc
jns
clc
popf
int
add
jbe
clc
xor
add
mov
clc
out
cltd
dec
divb
push
pop
inc
clc
cmc
mov
test
scas
or
clc
movsl
clc
fmul
adc
add
cli
in
xor
add
jle
mov
add
xchg
pop
sub
or
insl
jg
mov
cmc
cld
dec
jecxz
scas
out
cmpsl
clc
or
test
adc
clc
std
rol
clc
mov
mov
clc
sar
in
decb
pop
adc
add
clc
add
add
mov
aad
std
imul
clc
sbb
sti
add
add
add
mov
clc
jnp
daa
clc
cmp
add
dec
cltd
das
lea
in
xchg
mov
pop
scas
push
pop
fwait
popa
add
and
add
add
add
pop
sbb
add
push
add
loopne
outsl
lret
add
add
add
mov
fs
int3
xchg
push
add
imul
add
daa
clc
push
adc
clc
js
pusha
add
sbb
rorb
clc
jge
xor
add
idivl
daa
clc
dec
outsl
xor
clc
cmpsb
clc
jecxz
pop
mov
xor
add
scas
inc
add
or
shrb
mov
jge
add
in
mov
hlt
out
inc
add
dec
decl
xabort
popa
add
divb
add
add
std
xor
mov
adc
add
xchg
shll
xor
jge
clc
rorl
lret
int
add
mov
lods
call
clc
mov
xor
add
pop
sti
and
add
sub
clc
jns
mov
pop
jmp
clc
cwtl
sar
adc
clc
daa
clc
gs
add
add
mov
imul
add
and
clc
lods
lcall
lock
ja
clc
sbb
fs
das
push
clc
fcompl
push
mov
clc
dec
adc
add
xchg
into
mov
add
clc
loop
pop
pop
cmp
sarb
push
js
clc
daa
clc
jb
add
add
mov
add
mov
add
sar
mov
out
sbb
sar
clc
pop
mov
add
xchg
vmovntps
add
jbe
ljmp
add
push
repz
add
pushl
add
add
clc
and
add
scas
cmp
and
add
add
add
sub
and
arpl
add
add
mov
nopl
out
sub
xor
add
dec
mov
in
gs
mov
add
daa
clc
scas
xor
add
jp
push
clc
addr16
mov
mov
faddl
dec
pop
and
das
jns
aaa
sahf
lcall
pop
sub
clc
arpl
add
add
cmp
pop
xor
add
ror
fwait
cli
xor
add
add
add
add
xor
add
add
dec
jmp
push
add
rcrb
flds
mov
mov
ljmp
add
add
jecxz
mov
sub
add
loope
clc
pop
pop
fldt
cmp
add
clc
adc
add
scas
pop
cld
mov
daa
clc
mov
loope
pop
cwtl
pop
fs
out
nop
nop
std
ja
add
test
or
clc
hlt
sub
clc
pushf
lret
mov
aad
clc
mov
clc
addr16
int
out
fcoml
add
outsb
test
and
cmp
clc
push
add
adc
add
and
add
mov
add
clc
push
pop
in
sub
clc
lret
outsl
inc
clc
in
ret
clc
mov
fs
dec
cs
or
jnp
push
add
inc
add
mov
push
insb
dec
out
cmp
add
or
sar
lods
loopne
test
sbb
jle
sub
lods
jbe
mov
clc
in
add
add
xchg
daa
clc
maxps
lret
xchg
jp
cld
xchg
jns
sub
repnz
clc
jnp
add
add
add
pop
pop
fwait
and
add
in
fildl
add
jmp
clc
adc
add
sbb
clc
xlat
test
sbb
add
ja
mov
add
sub
sbb
add
pushf
js
rcrl
or
arpl
add
into
push
clc
jl
pop
jo
add
add
addr16
popf
sbb
add
pusha
add
cli
outsl
dec
ffree
clc
xor
add
pusha
add
mov
stc
pop
cltd
jp
mov
mov
cmp
es
rcrb
add
jne
clc
mov
clc
dec
mov
lea
jle
test
popa
add
je
sub
aam
add
nop
push
add
cmp
or
cmp
xbegin
add
add
add
jp
add
insl
ss
mov
sbb
loopne
aaa
pusha
add
faddp
clc
lods
jmp
stos
lcall
jp
rcl
sar
clc
xchg
stc
xchg
cmc
aam
xor
cmp
aam
add
push
int
sbb
adc
add
clc
jnp
add
pop
push
jg
clc
lea
add
adc
pop
enter
jae
add
add
clc
xchg
jb
add
insb
mov
add
clc
or
pusha
add
test
jno
add
lock
push
add
test
sub
clc
cmovge
lret
scas
and
add
add
sub
add
jge
inc
clc
push
sbb
test
mov
outsb
clc
sarb
xchg
cmp
push
add
repz
jne
clc
insl
cmp
mov
add
ds
add
dec
rcr
push
jmp
aad
inc
clc
xor
sub
sbb
jge
clc
dec
sub
clc
mov
in
xchg
mov
xchg
sbb
jb
add
out
and
adc
add
xor
mov
sub
js
mov
clc
xor
add
and
mov
enter
clc
sub
cmpsb
clc
lcall
into
mov
add
adc
jnp
in
bound
add
dec
sar
sbb
arpl
add
add
clc
leave
cmpsb
clc
shrl
popf
movsb
clc
imul
add
mov
data16
mov
nop
cmp
insl
xor
add
xor
add
sub
sbb
pop
fbld
xor
add
clc
cmpsb
clc
jo
add
imulb
clc
mov
cmp
popa
add
dec
pop
imul
jae
add
jnp
xor
add
inc
clc
cmp
daa
clc
enter
add
cmp
fnsave
add
add
test
sahf
push
aaa
sar
aaa
cmp
pop
sub
add
lret
add
dec
pminsw
adc
add
or
clc
cmp
sbb
add
in
push
add
faddp
clc
cmp
add
shll
xor
add
leave
xchg
dec
add
outsb
jmp
add
clc
repz
clc
out
repz
mov
push
add
cs
sbb
sbb
add
in
loope
xchg
sbb
and
push
int3
sar
dec
inc
add
cmp
clc
cmc
jno
add
add
enter
add
jb
add
xor
cli
lahf
add
add
mov
and
ja
add
fdivrp
icebp
xchg
cld
pop
imul
push
fcoml
pop
adc
jp
jb
add
clc
test
jmp
dec
or
add
lahf
push
add
xchg
loopne
or
push
mov
jb
add
add
pop
push
imul
fs
rcll
loope
lret
adc
add
pop
clc
js
jne
add
add
add
lret
add
clc
sbb
add
mov
clc
sahf
and
pushf
lcall
dec
push
add
cmp
cmpsb
clc
cmp
gs
dec
mov
add
pop
mov
clc
jecxz
inc
clc
in
xor
add
inc
clc
xchg
sar
in
inc
clc
push
add
mov
mov
xchg
cltd
addr16
pop
sahf
data16
jns
add
jg
add
mov
filds
mov
add
adc
add
mov
scas
fdivrs
push
jns
clc
inc
add
movsl
clc
xbegin
add
add
clc
inc
add
outsb
adc
inc
add
mov
clc
mov
add
inc
add
mov
cmp
sbb
mov
add
incl
clc
hlt
gs
jne
clc
imul
std
fdivrl
cwtl
ror
in
scas
clc
es
popl
aas
sub
add
aad
add
fst
cmpps
jo
add
lret
aas
jb
add
xchg
into
push
mov
mov
clc
pop
cmp
inc
add
iret
inc
add
clc
int3
xbegin
clc
mov
cld
cwtl
ss
clc
clc
cmp
add
mov
clc
movsb
clc
cmp
push
add
xor
dec
sub
sahf
pop
clc
inc
clc
pop
xor
add
clc
pop
cmpsb
clc
lock
pop
clc
aaa
inc
clc
aad
add
dec
cwtl
sbb
clc
cmp
mov
jnp
je
clc
add
add
or
stos
aas
sub
add
and
add
dec
add
clc
gs
pop
sub
add
inc
add
mov
clc
inc
add
dec
mov
and
add
cltd
inc
clc
cmp
rolb
fmul
dec
inc
add
mov
gs
mov
cmpsl
clc
inc
clc
mov
clc
pop
iret
mov
insl
push
cmp
dec
loopne
lret
push
stc
mov
xor
add
add
ja
clc
or
add
lcall
jle
push
clc
test
cld
mov
icebp
xor
add
xor
nop
lods
lock
fmulp
xchg
inc
add
dec
xor
jns
cld
xchg
mov
outsb
mov
clc
or
add
clc
xlat
fisttpll
fmuls
clc
addr16
push
lret
loopne
cmp
pop
jns
xchg
ret
lahf
lahf
data16
cmp
and
pop
clc
add
add
xchg
cmc
lret
push
imul
clc
inc
add
enter
sbb
sbb
add
ja
nop
mov
cltd
dec
fs
xlat
sub
clc
xchg
dec
roll
push
lods
out
and
add
mov
add
cmp
sahf
addr16
and
add
push
aas
push
jnp
xchg
int
pop
lret
add
add
add
fcoms
add
clc
adc
add
push
out
popf
pop
mov
add
clc
stos
in
stos
aad
add
xchg
or
jbe
in
xlat
call
clc
mov
add
add
xor
add
push
and
add
inc
clc
and
add
fs
sbb
clc
xchg
pop
clc
sbb
xor
jmp
xor
add
mov
bound
add
popa
add
lods
imul
jae
add
lea
jl
add
add
and
xor
add
mov
call
add
mov
add
sub
clc
leave
cmp
lods
dec
imul
add
pop
cmp
ret
mov
xor
mov
cmp
add
xchg
xchg
mov
imul
out
mov
mov
outsb
mov
xchg
repz
push
and
add
add
xor
add
add
push
je
outsb
out
cmc
xor
push
clc
es
push
test
sbb
clc
mov
add
clc
inc
clc
adc
add
add
push
add
push
lret
xor
add
mov
jns
fdiv
mov
cmp
add
loope
mov
xor
add
in
test
pushf
dec
cmp
add
cmp
clc
lret
jg
add
add
xabort
add
pmaddwd
pop
cmp
pop
pop
jmp
clc
clc
jle
lcall
clc
or
jo
add
jo
add
shrl
add
mov
clc
mov
clc
pop
mov
adc
add
jp
clc
insb
jmp
and
add
mov
ret
clc
xor
add
sar
sub
imul
sbb
add
into
mov
sub
xor
xchg
pop
add
hlt
out
xor
add
shld
add
aad
add
cmp
xor
add
xchg
inc
clc
push
add
cmp
cmp
dec
inc
add
push
add
data16
lods
jmp
sub
sub
clc
out
loop
xchg
xor
add
mulb
clc
push
clc
sar
adc
add
sub
out
or
add
pop
xabort
mov
add
jo
add
fldl
add
cmp
add
add
mov
out
movsb
clc
push
popa
add
int
clc
xchg
mov
xlat
adc
add
rcrl
push
push
jo
add
sub
push
add
cli
jg
cli
mov
inc
add
inc
add
push
add
cmc
push
add
mov
add
sub
gs
out
inc
add
push
loope
jb
add
mov
clc
clc
dec
jb
add
clc
pop
add
add
clc
pop
mov
mov
add
add
test
mov
add
cli
jl
sbb
mov
dec
mov
sbb
add
add
adc
jecxz
outsb
daa
clc
stos
add
add
mov
push
dec
std
sub
add
or
fimull
clc
iret
shl
clc
lcall
pop
sbb
test
jae
add
movsb
clc
inc
add
ja
mov
inc
add
add
add
mov
bound
add
jmp
gs
mov
adc
sbb
add
xor
add
clc
and
add
mov
clc
xchg
or
clc
xchg
in
mov
in
dec
mov
jns
clc
stos
inc
clc
mov
adc
xor
add
fwait
xchg
sahf
gs
or
fwait
mov
mov
and
add
jmp
add
inc
clc
gs
ss
or
je
clc
mov
jnp
clc
std
xor
add
clc
push
rcll
add
clc
cmp
cs
add
sbb
push
push
lahf
cmp
clc
jae
add
je
out
inc
clc
xabort
clc
pusha
add
mov
add
pop
and
jb
add
add
mov
clc
add
add
add
inc
add
inc
add
ret
clc
xchg
cmp
clc
cli
add
add
add
inc
add
outsl
jmp
sub
movsl
clc
inc
clc
leave
das
jl
sub
clc
sbb
add
xchg
sub
mov
push
cmp
add
cmpsb
clc
aaa
popf
in
test
ljmp
cmpsb
clc
gs
std
cmp
add
add
repnz
add
mov
jl
mov
jo
add
add
cmc
nop
add
add
enter
push
mov
add
inc
clc
mov
out
fsubl
add
mov
mov
cmp
arpl
add
fyl2xp1
pop
dec
fisttpll
sbb
clc
push
add
add
cmp
ficompl
clc
inc
clc
mov
pop
clc
fs
mov
clc
icebp
in
xchg
cmpsb
clc
push
rcr
push
repz
clc
mov
xchg
sar
mov
add
xchg
adc
adc
add
add
jae
add
clc
sbb
mov
add
sbb
mov
dec
lock
clc
mov
push
pop
pop
add
add
into
xbegin
add
sbb
clc
insl
dec
in
sbb
jmp
clc
out
fdivrl
pop
clc
clc
push
clc
sar
mov
push
adc
add
clc
in
pushf
adc
add
add
or
clc
xor
add
or
inc
clc
shll
add
test
iret
pop
inc
add
xor
add
add
jle
pop
cmc
inc
clc
mov
mov
pop
clc
cmc
cld
xchg
or
pop
mov
add
jmp
adc
add
add
xchg
sbb
jnp
add
sub
xlat
popf
mov
cltd
loopne
mov
clc
dec
push
rolb
add
jbe
mov
add
or
pop
mov
adc
add
mov
jbe
add
add
pop
loop
adc
add
dec
popf
xchg
in
es
jl
clc
mov
or
and
add
faddp
clc
push
add
xbegin
add
add
lahf
mov
clc
cwtl
push
stos
cmp
clc
adc
cltd
or
add
clc
fstpl
inc
add
scas
stos
xchg
jl
pop
cmp
out
sar
add
add
aaa
sahf
test
jbe
jb
add
clc
fldenv
clc
lea
add
dec
test
insb
xlat
fwait
cmp
nop
inc
clc
adc
add
cmp
or
clc
mov
clc
imul
cmp
rol
clc
stc
pop
dec
nop
pop
push
push
add
cmp
fs
xchg
mov
cs
adc
aaa
movsb
clc
cmp
je
add
divl
dec
imulb
xor
aaa
sbb
clc
loop
push
push
push
jp
mov
clc
and
add
add
mov
sbb
lret
or
test
jae
add
clc
leave
sub
sar
test
cmpsl
clc
or
imul
clc
jns,pt
bound
add
loope
or
adc
jno
add
cmpsl
clc
iret
xchg
fiadds
add
lods
mov
sub
cmp
clc
loopne
fldenv
imul
sbb
fimull
add
sub
iret
clc
mov
push
add
cmp
cs
push
inc
clc
xchg
adc
add
add
add
jnp
jns
jne
clc
mov
clc
ss
mov
clc
push
add
out
pop
scas
insl
dec
push
add
out
fistpll
inc
clc
or
adc
add
jnp
add
int3
xchg
jecxz
aas
sub
fwait
jl
stos
cs
outsl
xchg
xchg
mov
add
ja
aas
gs
mov
mov
xor
in
addr16
cmp
test
mov
mov
clc
sarl
add
jl
arpl
add
outsl
xbegin
jecxz
stos
and
mov
add
add
loope
jne
sahf
call
add
mov
movsl
clc
and
add
add
cmc
fildll
clc
fs
sub
inc
clc
add
add
clc
adc
add
push
clc
dec
in
or
stos
in
loope
cmp
add
mov
add
out
jns
clc
outsl
or
clc
sub
add
shr
sub
add
add
cmp
jno
add
add
push
add
je
fistpll
add
jge
dec
jmp
xchg
stos
inc
clc
push
clc
sub
sbb
rclb
add
cs
xchg
xchg
mov
clc
push
repz
mov
add
add
gs
clc
add
add
push
jne
pop
jb
add
add
fisubrs
add
bound
add
push
add
loop
jge
ret
add
pop
pusha
add
xchg
cmp
mov
add
aaa
xchg
or
or
cmp
add
add
mov
add
filds
icebp
imul
shrl
in
aaa
sbb
push
add
scas
add
and
add
mov
clc
sbb
rcll
add
frstor
add
sbb
add
mov
clc
pop
test
mov
add
sqrtps
add
jp
clc
sbb
mov
insl
adc
add
add
pop
in
xchg
or
clc
add
and
add
and
xchg
cmp
dec
je
dec
pop
in
cld
mov
xor
adc
add
add
mov
add
add
aam
clc
fimuls
fcmovne
push
pusha
add
addr16
mov
cmp
clc
xor
add
xor
add
add
add
jg
clc
out
sub
shr
push
add
fwait
push
push
clc
cmp
imul
push
ljmp
aas
jo
add
add
pop
clc
add
cmp
data16
cwtl
xbegin
clc
push
jns
lock
sbb
daa
clc
dec
xor
add
add
push
aaa
dec
add
add
add
mov
mov
inc
clc
adc
add
add
add
lcall
stos
xchg
jne
jae
add
cs
add
and
add
clc
fstp
es
mov
clc
fs
cli
push
vzeroupper
cmp
pushf
sahf
pop
dec
or
loope
xabort
arpl
add
clc
adc
scas
repnz
loope
mov
xchg
shll
cmpsl
clc
mov
sbb
push
pop
and
add
lcall
clc
icebp
dec
cmp
repz
cmp
cli
jns
xor
out
sub
dec
insl
sahf
sub
clc
sub
add
daa
clc
cmp
sbb
clc
ja
mov
ret
add
in
clc
push
pop
push
clc
jmp
add
rcl
mov
mov
jmp
fists
clc
jmp
adc
add
add
clc
push
loop
mov
clc
mov
leave
addr16
mov
shl
clc
sbb
clc
call
xchg
mov
je
clc
stos
xchg
inc
clc
push
add
movsb
clc
lea
xbegin
jg
clc
cmp
add
xchg
or
add
sahf
neg
xchg
add
lahf
dec
inc
clc
scas
mov
cmp
arpl
add
add
jge
int3
push
mov
clc
cmp
clc
push
add
fsts
add
xchg
add
add
hlt
gs
xor
add
lods
sbb
add
in
cmp
sub
push
jle
clc
add
add
sub
add
cmp
clc
dec
mov
js
loope
out
clc
mov
jnp
clc
push
rol
clc
xor
add
add
push
lahf
popa
add
popa
add
xchg
lret
add
cmp
add
mov
add
jno
add
clc
xchg
and
add
add
pop
or
imul
push
clc
sub
inc
add
push
clc
out
jl
add
dec
lahf
imull
mov
pop
sub
xbegin
add
fcompl
inc
add
std
test
pop
outsb
aam
sahf
ficoml
loopne
stos
sbb
lock
ss
add
data16
inc
add
xchg
sub
clc
cltd
into
sahf
ljmp
clc
jl
adc
add
add
arpl
add
add
inc
add
xchg
jl
clc
pop
jge
std
adc
add
add
xor
add
test
jo
add
aam
daa
clc
jmp
mov
clc
push
sub
clc
cmp
clc
scas
cmc
xabort
add
mov
add
mov
rclb
add
add
ljmp
push
add
imul
cmp
mov
add
or
std
cmpsl
clc
cmp
xor
add
add
cmp
clc
sarb
mov
adc
add
clc
negl
bound
add
inc
add
test
clc
push
add
test
int3
xchg
mov
push
add
mov
dec
cmp
clc
aas
icebp
decb
add
mov
fsubs
add
clc
add
sub
fwait
inc
clc
xor
inc
add
dec
enter
clc
mov
xchg
mov
outsb
add
icebp
cltd
and
add
int3
loope
jmp
fucom
clc
fs
nop
cmpsl
clc
pop
jecxz
fldenv
add
jle
xor
add
clc
clc
out
lock
add
push
pop
xlat
dec
sub
xor
add
mov
clc
fidivrs
clc
ja
add
popa
add
add
add
add
sbb
sub
mov
push
lahf
mov
cld
enter
lret
in
sbb
add
jp
rcll
add
add
leave
sbb
clc
xor
add
mov
add
cmp
add
in
xchg
adc
add
xor
add
clc
push
add
adc
clc
mov
mov
push
sub
pop
fisubl
add
push
clc
sbb
rcrl
test
add
add
xchg
add
add
in
add
add
in
push
data16
xchg
push
pop
mov
sbb
inc
clc
xor
mov
aas
sbb
add
cmp
add
add
clc
je
clc
in
sar
jle
add
imul
add
popa
add
or
clc
rorb
add
scas
data16
outsl
cmp
shll
add
add
je
clc
and
mov
add
add
fisubl
add
xabort
adc
add
xor
add
add
es
dec
mov
clc
xor
add
insl
sub
shl
clc
mov
rorl
add
cmp
sbb
clc
adc
add
xchg
mov
jae
add
fstpt
scas
fwait
push
add
shrb
pop
clc
ss
ljmp
call
unpcklps
add
mov
push
add
leave
add
add
clc
or
xchg
adc
add
clc
mov
add
clc
pop
xchg
sub
cmp
xor
xchg
loopne
lret
push
clc
jp
add
or
add
jle
outsb
mov
add
add
add
cld
inc
clc
fldt
mov
aam
mov
add
jmp
add
sub
xbegin
pop
cmp
jbe
test
inc
add
push
add
inc
clc
jno
add
dec
fldcw
xor
add
push
add
fs
movsb
clc
or
add
icebp
sub
cwtl
lret
add
cmp
scas
mov
clc
lods
inc
clc
movsl
clc
clc
shl
clc
imul
add
movsl
clc
mov
gs
dec
mov
xchg
clc
push
mov
in
fdiv
mov
and
add
add
add
add
dec
loope
sub
inc
clc
cmp
add
sub
rcr
jo
add
add
jo
add
insl
xor
add
add
inc
clc
hlt
repnz
add
data16
std
xor
add
mov
xor
rclb
adc
add
in
mov
mov
xor
add
sub
in
pcmpgtw
fcmovnbe
push
mov
das
mov
or
jne
clc
push
xchg
push
add
lahf
push
add
xor
add
popa
add
push
add
test
mov
add
jmp
push
rorl
dec
repnz
add
data16
sbb
xchg
lea
add
jmp
clc
aam
ss
xor
add
dec
jge
clc
out
lods
nop
ret
clc
xchg
stos
xor
add
insl
push
pusha
add
fs
lock
jne
pop
pop
test
cmp
cmp
jge
xchg
mov
jmp
mov
pop
insl
shl
clc
push
clc
ljmp
enter
clc
fstpl
imul
add
add
add
xor
add
jp
xor
add
hlt
js
daa
clc
clc
xor
add
add
sub
add
add
mov
fistpl
push
xchg
aam
clc
ret
std
and
mov
adc
add
clc
push
add
aam
pushf
scas
and
pop
cmp
clc
or
add
add
popf
inc
clc
cli
pusha
add
add
adc
add
cld
mov
mov
clc
iret
jmp
and
add
xchg
sub
xor
add
dec
mov
xchg
clc
std
mov
add
clc
cli
mov
push
add
pusha
add
mov
xchg
jae
add
add
mov
imul
mov
add
add
clc
lock
ljmp
push
clc
or
xchg
xchg
out
cmp
cmp
mov
clc
test
enter
or
clc
jbe
jle
pusha
add
mov
xchg
push
dec
cmp
mov
pop
inc
add
add
fmuls
jmp
mov
test
push
mov
ret
add
push
add
pop
or
clc
sbb
dec
ss
cmc
add
add
lret
mulb
clc
hlt
addr16
and
clc
lret
rclb
add
insb
pop
add
add
clc
cltd
cmpsl
clc
lcall
or
add
add
clc
jmp
int
in
push
push
and
add
outsl
jle
repnz
inc
clc
test
jno
add
ds
add
xbegin
add
test
jg
clc
xor
add
push
add
jge
out
aad
clc
and
add
or
lea
and
movsb
clc
inc
add
mov
adc
add
and
add
sahf
popa
add
dec
cld
push
jle
movsl
clc
jecxz
mov
lea
pusha
add
jg
add
out
js
pop
popf
xor
add
repnz
sub
add
push
add
jp
add
or
clc
jmp
and
add
add
cs
gs
and
add
add
sar
add
sbb
add
cmp
cmp
xor
add
jb
add
xlat
outsb
in
mov
add
clc
and
add
scas
adc
add
or
inc
clc
ret
iret
aas
cmp
movsl
clc
fimull
clc
aas
xor
add
and
add
clc
xor
add
add
xchg
pop
outsl
jb
add
int
clc
sbb
xor
add
clc
sub
pop
or
push
mov
push
clc
jae
add
mov
push
adc
add
clc
arpl
add
cli
scas
dec
jecxz
cli
add
add
add
test
sbb
ret
clc
ja
ja
push
inc
clc
mov
lea
mov
jae
add
add
adc
mov
or
clc
xor
add
and
add
clc
test
ds
add
add
mov
clc
shrl
fldt
pop
pop
clc
dec
inc
clc
mov
es
negb
clc
push
bound
add
mov
adc
pop
idivl
push
add
lock
daa
clc
mov
cmpsl
clc
pushf
cmp
clc
rorl
clc
xabort
xor
bound
add
clc
cmp
add
dec
inc
clc
jmp
jp
pusha
add
or
loopne
mov
ss
test
jle
cmp
add
sarl
push
add
fwait
sub
loope
inc
clc
divl
jnp
pusha
add
cmp
gs
mov
clc
mov
sbb
and
add
add
in
pop
inc
clc
sbb
int3
mov
notl
jmp
jae
add
je
push
add
add
xchg
jecxz
lods
mov
clc
sub
add
push
add
jg
out
dec
pusha
add
add
add
lret
arpl
add
add
xor
xchg
mov
add
sub
add
xor
add
movsl
clc
and
add
test
xbegin
clc
jbe
xor
loope
lock
clc
pop
pop
test
inc
clc
mov
push
loopne
fidivl
add
add
add
inc
add
and
add
pop
add
add
add
add
jmp
lahf
icebp
mov
clc
inc
add
dec
out
pop
cmp
fs
ret
clc
or
outsb
or
clc
push
add
xchg
push
pop
cmpsl
clc
sar
inc
add
push
add
pop
std
icebp
pop
pop
scas
pop
clc
adc
pop
mov
jmp
out
xchg
icebp
mov
add
xabort
jne
cs
push
ljmp
adc
sar
mov
add
add
clc
pop
clc
push
push
mov
push
dec
ret
fbstp
mov
fildll
lock
or
jnp
push
add
xchg
loope
jecxz
add
add
add
imulb
add
jge
movsb
clc
loop
dec
out
cwtl
aaa
fistpll
or
inc
clc
popa
add
add
add
mov
cmpsb
clc
rcrb
jp
clc
loop
ss
bound
add
inc
clc
dec
outsb
mov
mov
bound
add
push
add
das
adc
add
cmp
clc
mov
cmp
add
jge
xchg
loope
bound
add
into
or
pop
cwtl
inc
clc
mov
clc
das
pop
clc
ret
clc
and
add
clc
dec
push
jo
add
clc
fsubp
clc
in
data16
push
mov
hlt
jle
clc
mov
mov
ljmp
add
add
inc
clc
out
movsl
clc
mov
lock
add
cli
mov
and
add
add
sub
and
add
aad
clc
xchg
ja
add
fiaddl
add
mov
jo
add
add
out
test
clc
cwtl
inc
add
repnz
add
sti
fiadds
add
jecxz
jecxz
adc
std
fistps
cld
js
cwtl
xchg
mov
add
aas
mov
in
mov
mov
add
push
add
jae
add
clc
sbb
add
add
rorb
add
out
in
lea
add
arpl
add
clc
bound
add
xor
test
mov
clc
inc
add
adc
adc
add
adc
push
xlat
mov
add
pop
adc
add
add
add
cmp
add
inc
clc
pop
ljmp
add
add
clc
loop
scas
mov
clc
jge
clc
fmuls
or
inc
clc
popa
add
imulb
in
rep
fistl
add
inc
clc
std
mov
add
cld
lods
xor
add
and
mov
add
or
or
add
in
pop
or
sti
or
sbb
adc
add
cs
xor
add
test
clc
in
inc
clc
out
mov
add
jp
popf
sar
test
xor
add
rorl
and
rcrb
lret
repz
add
mov
add
push
add
sbb
adc
je
xchg
in
es
mov
mov
clc
xchg
jns
clc
push
es
addr16
mov
inc
clc
add
add
imul
add
xchg
mov
insb
mov
clc
je
clc
gs
fcoms
inc
clc
mov
clc
mov
clc
insb
sbb
add
cltd
jmp
fcompl
arpl
add
std
loopne
add
add
clc
lret
lods
aas
push
and
add
mov
add
push
jo
add
pop
jg
clc
movsbl
adc
insb
movsl
clc
mov
scas
daa
clc
sbb
inc
clc
fdivs
jo
add
add
mov
adc
add
cmp
inc
add
dec
arpl
add
mov
cmp
imul
xchg
pop
test
fstl
add
clc
push
add
in
gs
daa
clc
test
cmpsl
clc
lcall
dec
and
add
cmp
add
in
inc
clc
out
das
or
outsl
cmpsl
clc
xor
clc
push
add
jae
add
dec
and
add
stc
fcompl
movsb
clc
cli
mov
add
push
cmc
mov
insl
sar
ljmp
pop
xchg
fs
xor
add
mov
dec
push
clc
lods
lods
xchg
rorl
das
icebp
stos
neg
loope
cmpsl
clc
add
pop
jo
add
clc
dec
ret
clc
mov
gs
insb
pop
clc
cmp
clc
pop
nop
das
sbb
add
cmp
jl
inc
clc
pop
pop
inc
add
gs
mov
in
and
add
dec
adc
dec
or
add
insl
jle
bound
add
fldcw
clc
add
add
pop
das
in
mov
clc
repz
add
sar
lahf
jbe
add
push
lods
adc
add
frstor
clc
pop
testb
roll
add
jb
add
add
add
repz
clc
push
add
mov
clc
cmp
clc
fisttpl
hlt
push
push
scas
jle
inc
add
dec
inc
add
dec
push
mov
out
outsb
movsb
clc
lret
push
add
mov
clc
pop
cmp
loop
mov
push
inc
add
jmp
clc
out
jno
add
push
add
xchg
test
outsb
ds
and
add
add
lock
add
jle
add
adc
add
inc
add
lock
xchg
inc
add
mov
dec
fldt
clc
mov
add
out
pop
out
or
add
sarl
out
sub
popa
add
sbb
mov
clc
ljmp
cmp
add
sub
mov
jmp
jns
add
xor
add
in
pusha
add
push
clc
out
das
sbb
add
test
clc
pop
clc
es
mov
clc
jmp
add
add
inc
add
sbb
dec
add
cld
fwait
jo
add
sub
into
sahf
pop
pop
ljmp
clc
je
clc
jne
movsb
clc
sub
aas
imul
inc
clc
xchg
popa
add
test
adc
add
clc
pop
xor
add
xchg
fisubl
add
jb
add
and
add
clc
popa
add
and
cmpsb
clc
cmp
add
sti
popf
sub
inc
clc
jbe
xchg
push
shr
clc
notl
inc
clc
es
mov
add
push
add
gs
test
xor
or
out
arpl
add
mov
add
dec
and
or
add
insb
sbb
movsb
clc
mov
notb
add
jbe
popa
add
sbb
shufps
clc
icebp
inc
clc
gs
clc
xchg
push
pop
scas
aad
push
sub
or
cli
fidivs
or
clc
daa
clc
clc
in
mov
test
movsl
clc
jle
addr16
cmc
mov
xor
add
add
xor
add
testb
add
or
add
push
iret
adc
add
xbegin
add
outsb
sarb
dec
insl
sbb
sbb
clc
out
jno
add
add
mov
push
pop
and
cmc
lock
clc
cltd
fs
add
loopne
lea
add
mov
add
xchg
out
sub
pushf
nop
lods
jp
clc
jne
add
sbb
dec
js
daa
clc
push
add
sbb
cmp
aaa
stos
fwait
sahf
loopne
insl
mov
popa
add
or
ja
push
hlt
pop
jmp
clc
add
nop
rorl
xor
adc
add
adc
add
add
mov
aad
dec
jne
rcrb
cmp
add
or
xchg
into
js
or
in
movsb
clc
daa
clc
scas
mov
popf
fisubrs
loope
into
xchg
push
lret
mov
xor
add
clc
mov
scas
add
add
out
jnp
divb
inc
add
insb
je
add
add
add
movlps
add
pop
pop
ret
clc
mov
add
and
xlat
enter
add
insl
es
testb
jp
scas
lahf
in
adc
add
ret
clc
cmp
push
add
enter
add
mov
cmp
push
jns
imul
lods
lahf
imul
add
lret
clc
sub
add
add
jle
clc
sbb
add
cmpsl
clc
and
add
add
push
enter
add
add
clc
lods
fists
xchg
popa
add
and
add
clc
mov
add
mov
add
das
inc
clc
mov
leave
test
lret
fyl2x
lcall
stos
inc
add
nop
pop
mov
ljmp
and
enter
mov
clc
ret
clc
xchg
shll
add
xabort
mov
js
dec
push
ss
shlb
add
xchg
cmp
stos
inc
add
mov
enter
push
mov
std
lcall
xor
add
adc
add
and
add
clc
stos
fwait
gs
and
add
push
jg
inc
add
mov
fldenv
add
mov
sbb
jle
out
mov
inc
add
push
xchg
mov
pop
push
jmp
rorb
aaa
jnp
movsl
clc
je
clc
pop
jae
add
inc
add
jg
add
gs
or
popa
add
xbegin
sti
mov
inc
clc
clc
push
pop
dec
scas
cmpsb
clc
cmp
xbegin
add
clc
lret
pop
lret
ljmp
cmp
push
clc
out
bound
add
lods
dec
push
xbegin
mov
clc
push
mov
je
jnp
outsl
jne
clc
add
add
enter
mov
mov
gs
adc
add
cltd
enter
jae
add
ret
xor
add
clc
mov
clc
xlat
xchg
push
sbb
jne
sbb
add
inc
clc
mov
add
clc
mov
add
add
das
int
ja
clc
ficompl
add
clc
sar
add
lret
fldl
adc
add
loope
push
add
pop
mov
add
inc
add
cmp
in
pop
mov
movsl
clc
sub
jne
add
sbb
es
xor
add
clc
push
xchg
dec
je
gs
xor
mov
add
push
add
adc
add
jge
xor
add
sub
sbb
stc
mov
xlat
jle
mov
and
add
add
clc
sub
jle
jbe
or
rep
movsb
clc
call
adc
mov
xor
add
sarl
loop
addr16
setae
stos
loope
out
aam
clc
rcrb
clc
inc
clc
jle
clc
lock
add
fisttpl
faddl
or
add
xchg
scas
icebp
sub
cld
test
mov
inc
add
xlat
xor
add
sub
and
add
mov
or
add
inc
add
xor
add
clc
int3
imul
add
xor
add
add
xor
add
das
iret
xchg
pushf
addr16
xabort
insb
xor
add
push
ja,pn
add
pop
jae
add
daa
clc
ret
clc
fcomp
dec
js
add
pushf
mov
add
shrl
or
add
test
or
add
xlat
sub
lods
or
or
stc
push
ss
fbld
jo
add
add
pushf
inc
clc
mov
add
and
add
add
leave
enter
and
add
loopne
cmc
jno
add
clc
scas
loope
dec
outsl
out
icebp
mov
jge
sub
push
xchg
mov
xchg
gs
fwait
jmp
add
mov
lcall
int
lcall
rcr
stc
repz
rcl
xor
add
es
in
loope
repnz
adc
jnp
clc
loope
sub
add
jle
aaa
mov
clc
repnz
data16
clc
mov
nop
outsb
push
add
movsl
clc
imul
arpl
add
add
add
cli
pop
in
mov
sbb
push
push
add
sub
lea
mov
cmp
mov
push
fwait
pusha
add
icebp
or
outsb
clc
testl
add
cs
pop
test
xor
add
jno
add
add
mov
add
out
sub
mov
pop
xchg
jle
clc
cmp
mov
ja
lret
clc
test
clc
rolb
add
call
clc
mov
xchg
in
fidivl
add
cmp
add
test
dec
and
add
jne
jmp
mov
clc
xchg
js
gs
rorb
std
xchg
inc
clc
sar
clc
push
clc
mov
add
push
add
mov
add
add
clc
jp
mov
pop
mov
sbb
add
mov
sar
pop
jle
add
pop
nop
add
std
jo
add
add
cmpsb
clc
bound
add
xor
add
stos
ret
clc
dec
xchg
mov
add
mov
imul
clc
mov
fwait
mull
clc
lret
clc
cmp
in
cmpsb
clc
push
clc
adc
hlt
jnp
add
and
add
adc
add
clc
push
or
xor
add
push
add
shlb
int
jecxz
xor
add
out
sbb
out
push
clc
add
add
arpl
add
add
xchg
lcall
add
mov
in
xchg
std
aaa
cmp
clc
pop
sub
clc
out
call
add
mov
arpl
add
add
into
fwait
scas
mov
push
aad
and
add
ss
mov
insl
cmp
sub
sbb
pop
clc
add
add
cmpsl
clc
inc
clc
movsb
clc
mov
sbb
loop
cmp
clc
xchg
mov
add
clc
mov
or
xlat
push
arpl
add
add
inc
clc
dec
sahf
inc
clc
insb
js
mov
add
add
popf
pop
jns
jge
xor
add
add
and
add
pop
aam
enter
mov
fnsave
clc
and
cmpsl
clc
stos
pop
in
pop
negl
loopne
stos
sar
popa
add
pop
push
push
test
scas
push
xchg
hlt
sti
or
ds
sbb
mov
add
push
fildl
and
add
pop
jmp
cwtl
in
js
clc
sarb
lods
scas
dec
push
add
add
mov
mov
imul
gs
pop
mov
sar
mov
out
sahf
sar
dec
sub
xchg
and
add
pop
cmpsb
clc
adc
add
sbb
add
cmp
add
punpckldq
add
dec
mov
jp
clc
clc
inc
add
push
jae
add
int3
icebp
jb
add
cmp
add
in
sub
add
mov
push
leave
jnp
inc
add
stos
lar
add
xchg
inc
add
jg
add
sub
loopne
imul
and
add
push
add
fimuls
int
add
fldcw
clc
cmp
jge
sub
outsl
imul
push
add
roll
add
outsl
daa
clc
lods
xchg
ret
clc
dec
dec
sar
add
sub
popa
add
push
mov
add
add
cmp
xchg
pop
sti
stc
ja
xor
add
clc
fnstenv
clc
pop
push
clc
jbe
aad
in
dec
sbb
add
jecxz
repz
stos
lret
push
mov
mov
push
add
mov
inc
clc
sti
inc
clc
cmp
jecxz
mov
add
cmovno
add
clc
sub
xchg
cmp
cmp
xchg
fdiv
cmp
jo
add
push
add
ss
clc
push
add
sub
imul
cwtl
test
pop
xbegin
xor
add
xchg
push
add
mov
add
cmp
sub
add
popl
jne
clc
push
mov
out
mov
clc
dec
mov
pop
xchg
jle
clc
fnsave
add
outsb
cmp
add
add
and
fidivl
sbb
clc
cs
je
enter
add
loop
mov
js
clc
pop
adc
add
dec
xchg
repz
fimuls
xlat
jae
add
outsb
repz
jb
add
add
add
jl
add
push
add
mov
clc
or
inc
add
lods
outsb
imul
sti
mov
insb
sub
add
aas
push
add
mov
cmp
mov
lret
jne
adc
add
ds
cmp
jbe
dec
pop
imul
sti
lahf
mov
xchg
xor
add
add
mov
and
add
in
in
cmp
jg
scas
inc
add
xchg
mov
add
inc
add
stc
lea
sahf
daa
clc
aam
xlat
into
sub
repnz
add
sbb
sub
js
inc
add
or
clc
jmp
clc
hlt
movsb
clc
adc
add
xbegin
add
lock
add
lods
mov
mov
push
mov
clc
push
add
sub
sbb
fildl
add
sub
add
mov
shlb
add
jbe
add
cli
cmp
pop
std
insl
pop
mov
clc
add
clc
mov
loope
gs
inc
clc
pop
ret
clc
jmp
mov
mov
das
mov
insb
inc
add
aas
fsts
adc
lods
sub
shll
add
stos
xchg
push
dec
adc
add
xchg
xor
clc
test
into
sbb
lret
dec
xor
add
mov
jne
leave
lock
or
clc
mov
popf
insb
xor
sbb
xabort
int
clc
imul
add
in
pop
clc
jno
add
add
into
cwtl
xor
mov
lret
add
mov
fcompl
xabort
cmp
mov
push
add
test
scas
aam
add
hlt
int3
push
xor
add
mov
xor
mov
pusha
add
xor
in
xchg
stos
mov
or
add
jbe
jno
add
clc
jl
fldt
pop
lahf
mov
cmp
fmull
clc
cmp
in
cmp
or
addr16
sahf
fisubl
sub
add
mov
mov
add
fwait
add
add
mov
add
add
cmp
add
push
sbb
push
roll
clc
xchg
fiaddl
clc
outsl
out
test
dec
mov
cld
fistpl
std
mov
add
std
std
repnz
add
add
add
jo
add
mov
je
mov
add
mov
cli
loope
loop
imul
add
gs
push
test
add
pop
imul
mov
add
xor
push
add
ds
clc
sbb
dec
add
add
add
xor
add
add
add
pushf
push
add
pop
int3
out
popa
add
or
adc
leave
into
mov
add
loope
scas
pop
mov
or
jnp
cmp
lods
inc
clc
test
in
mov
sbb
es
sar
add
add
add
icebp
add
dec
push
aas
imul
dec
fstl
add
add
inc
add
lahf
push
pop
and
add
add
fcoms
bound
add
and
dec
push
add
dec
mov
add
int3
pop
idiv
lods
outsb
out
cmp
fiaddl
add
hlt
jns
add
ja
mov
add
test
jge
aaa
mov
inc
clc
popf
pop
pop
cmpsb
clc
das
mov
ja
fistps
clc
div
arpl
add
clc
jl
pop
aaa
push
mov
cwtl
ss
clc
in
mov
add
or
pusha
add
sub
jp
int
popf
shll
clc
test
lret
add
clc
mov
add
clc
lret
imul
outsl
outsb
cltd
cmp
dec
push
clc
jl
clc
mov
clc
pop
add
add
clc
pop
loope
dec
inc
add
insb
jnp
push
push
mov
pop
sub
in
ja
inc
add
fwait
jmp
or
fs
movsb
clc
lods
fsubrs
in
mov
adc
add
sti
mov
push
in
outsb
push
add
cmp
inc
add
cmp
lahf
sar
jecxz
sbb
or
xor
add
js
clc
xchg
xor
add
dec
mov
push
pop
pop
fsub
clc
push
clc
jno
add
movsl
clc
pusha
add
mov
clc
test
pushf
lret
push
pop
jge
gs
mov
xchg
cmp
cmp
add
bound
add
xor
sub
fcom
and
add
jg
dec
loopne
cmp
push
xor
add
clc
inc
clc
pop
pop
ret
clc
xchg
or
stc
fbstp
insb
data16
into
fdivrp
jnp
push
ja
add
jns
dec
jbe
mov
and
add
jmp
add
push
add
push
clc
xor
mov
add
cmp
clc
add
add
sar
lahf
outsb
mov
add
int3
shll
add
xchg
jb
add
add
sub
inc
clc
nop
jns
int3
das
enter
pop
test
mov
sahf
sub
pshufw
mov
mov
add
clc
push
clc
pusha
add
pusha
add
stc
sarl
cmp
clc
movsl
clc
sbb
mov
push
add
sahf
cs
test
fxch
push
add
xbegin
fildll
scas
fs
lods
clc
mov
add
cli
lea
add
jo
add
jecxz
dec
mov
sub
gs
and
add
ljmp
add
movsb
clc
das
scas
inc
clc
xchg
fs
sar
add
jnp
clc
adc
mov
clc
jp
fidivrs
lret
stos
imul
jmp
clc
call
sar
into
xchg
or
mov
clc
popa
add
sahf
insb
push
xlat
sbb
add
sbb
add
int
adc
add
clc
push
push
add
mov
lods
or
dec
daa
clc
or
jbe
in
sbb
out
cmp
clc
mov
mov
jg
adc
add
jns
xbegin
out
pop
cltd
mov
xor
add
loop
pusha
add
sar
clc
inc
add
or
add
clc
mov
and
adc
add
cmp
jge
xor
add
add
add
clc
repnz
icebp
and
add
add
pop
sub
rorl
mov
loope
data16
jl
clc
fdivp
cmp
sbb
clc
in
push
add
iret
adc
add
mov
sti
add
add
push
add
repz
add
fildll
mov
xor
add
xor
add
add
adc
add
call
inc
clc
mov
dec
loopne
nop
push
adc
add
sbb
clc
cmp
adc
xor
add
push
movsl
clc
pusha
add
jp
psadbw
clc
pop
mov
clc
push
gs
xor
add
push
mov
add
sar
clc
insb
cmp
xor
cmp
add
mov
cmp
scas
xor
clc
add
add
xchg
repz
out
mov
pop
mov
mov
mov
add
push
mov
and
add
mov
clc
add
add
clc
adc
ret
clc
push
mov
js
push
test
clc
cld
in
and
out
inc
add
ljmp
clc
mov
clc
test
testl
dec
loop
test
add
jmp
mov
sbb
clc
jne
sbb
clc
outsb
pop
arpl
add
sbb
movsl
clc
es
jle
add
incl
add
add
add
add
add
mov
clc
xchg
adc
mov
xor
add
clc
push
add
inc
add
inc
clc
adc
and
add
mov
pop
push
add
mov
adc
add
xbegin
xor
clc
iret
sub
sarb
dec
scas
push
add
pop
int
pop
mov
sub
clc
es
bound
add
add
in
fidivs
movsl
clc
push
gs
dec
bound
add
add
xchg
movsl
clc
negb
out
int3
cmp
loope
fidivs
add
add
cmp
frndint
pop
sarb
cmc
xor
add
pop
das
mov
xchg
inc
add
inc
add
xlat
add
add
fidivrs
clc
into
stos
inc
clc
xchg
aas
and
add
clc
pop
clc
xchg
cmp
daa
clc
mov
add
js
clc
ret
clc
jbe
mov
add
imul
lods
inc
clc
jmp
xor
add
jl
add
lea
mull
add
in
cwtl
mov
jmp
scas
mov
clc
lods
xlat
dec
test
xor
in
cvtpi2ps
call
fisttpll
cmp
add
jo
add
add
out
sar
add
jno
add
push
add
lret
ja
add
cwtl
mov
xor
mov
pop
divb
xchg
rcll
add
repnz
scas
sbb
clc
aas
adc
add
xchg
das
jle
xchg
push
add
das
icebp
mov
test
clc
fs
mov
mov
add
inc
add
or
xabort
sbb
adc
pushf
pop
cs
cmp
cmpsl
clc
inc
clc
lret
jle
jae
add
mov
mov
xchg
shll
clc
enter
add
pop
iret
adc
add
xlat
sar
or
sbb
jbe
ret
clc
nop
movsl
clc
outsl
out
addr16
cmp
sbb
add
jmp
adc
add
and
add
insl
mov
cli
mov
add
out
outsb
hlt
mov
gs
jne
jecxz
cmp
movsb
clc
iret
push
add
inc
add
pop
popa
add
lods
fwait
fwait
sbb
stos
or
cmpsl
clc
nop
or
loop
add
cmc
rcrl
add
add
add
pop
mov
out
inc
add
push
add
xbegin
sar
cli
out
cmp
lcall
inc
add
xchg
mov
mov
or
mov
lcall
mov
clc
popf
pop
sar
xchg
fs
test
xchg
mov
clc
xor
clc
xchg
sar
push
mov
push
pop
fstl
add
xor
dec
and
add
mov
fistpll
fs
push
aam
imul
clc
aam
cld
push
jns
add
and
pop
sbb
sub
mov
pusha
add
jae,pn
add
cmp
movsb
clc
xor
add
push
clc
cmp
clc
jg
add
sub
arpl
add
mov
gs
mulb
clc
sbb
clc
jo
add
add
add
or
clc
or
clc
sbb
rorb
outsl
popa
add
popf
sar
cmpsl
clc
jecxz
xor
add
shl
cmp
clc
in
flds
add
das
dec
scas
insb
scas
and
add
data16
cmp
clc
call
out
cmp
stc
pop
leave
lret
lahf
or
add
mov
mov
add
insl
jmp
xor
mov
clc
ret
clc
fnstcw
inc
clc
cmp
and
add
add
icebp
testb
mov
loop
dec
inc
clc
pop
mov
mov
add
cmp
mov
notl
clc
div
stc
sbb
cmp
add
mov
mov
add
dec
mov
lods
std
mov
pusha
add
ret
clc
xchg
imul
jmp
add
clc
sti
inc
add
int
clc
nopl
clc
out
pusha
add
icebp
sub
sbb
lret
mov
mov
xchg
sub
adc
add
clc
addr16
cmp
das
mov
xor
mov
xbegin
xor
add
clc
popa
add
adc
add
ss
sbb
clc
ss
sbb
clc
pop
mov
jne
add
dec
mov
add
cmp
jecxz
adc
bound
add
add
dec
outsb
cli
out
pop
clc
push
test
pop
clc
into
dec
cmp
lahf
pop
mov
aad
cld
jno
add
add
add
xor
add
stc
adc
add
mov
sbb
sub
test
jp
clc
ja
lods
pusha
add
xchg
cmovg
add
inc
clc
sbb
inc
clc
dec
xchg
inc
add
pop
out
or
or
pop
or
mov
lret
test
cmp
add
ret
clc
mov
mov
clc
test
sub
cmp
dec
or
jl
out
popa
add
movsl
clc
icebp
push
add
fwait
inc
clc
aas
int
inc
clc
sbb
cmp
add
lock
cltd
fisubl
add
fcoms
ljmp
and
add
std
fimuls
imul
cmp
pop
jb
add
clc
add
sub
jecxz
lods
inc
add
sub
add
dec
ja
add
mov
sub
inc
add
scas
pop
ss
pop
ret
filds
add
or
add
jns
mov
sub
clc
adc
cwtl
ret
nop
cwtl
and
add
add
add
clc
pop
aad
psrlw
add
lea
inc
clc
xchg
xor
add
cld
aad
cltd
loop
test
je
jns
clc
inc
add
adc
add
mov
clc
xchg
push
xchg
pushl
fists
cmp
add
add
iret
decl
add
cmpsb
clc
repz
sbb
lret
cltd
cmp
imul
xchg
push
in
cmp
jl
mov
push
lret
mov
add
mov
ja
add
iret
cmp
clc
sar
repnz
adc
jecxz
mov
add
popl
add
add
aas
mov
arpl
add
clc
push
add
cmp
clc
mov
or
test
adc
add
clc
adc
add
add
pop
clc
mov
mov
out
cmc
int3
pop
sub
jb
add
lcall
xchg
imul
jne
cmp
clc
in
and
test
add
cmpsb
clc
sahf
mov
call
sub
mov
or
add
adc
add
sub
arpl
add
add
mov
jns
cmp
pop
scas
jbe
lret
fs
jae
add
add
jns
clc
in
jmp
cmpsl
clc
scas
cld
push
hlt
sbb
es
or
repnz
clc
cld
jl
clc
sar
mov
clc
xor
add
ljmp
add
clc
in
mov
add
insl
je
inc
add
fucomi
jne
xor
add
dec
addr16
fidivl
add
mov
clc
fbstp
push
mov
xchg
je
repnz
cwtl
jl
clc
adc
add
inc
add
jno
add
clc
lods
ja
xchg
cwtl
cmp
clc
cld
xchg
push
add
mov
and
jb
add
jp
popf
mov
aaa
repnz
adc
add
cmp
clc
pop
in
jmp
lock
gs
jnp
fucomp
loopne
mov
mov
add
xbegin
insl
lods
cwtl
addr16
mov
ret
clc
jno
add
mov
push
add
out
ds
clc
insl
bswap
arpl
add
add
dec
addr16
push
clc
in
loopne,pn
lret
sbb
mov
clc
sarl
sub
inc
add
dec
fisubrl
clc
jl
inc
clc
movsl
clc
test
pop
xchg
xor
roll
nop
inc
clc
inc
clc
adc
add
adc
clc
cmp
add
data16
adc
add
outsb
or
push
test
or
add
jle
clc
or
lret
pop
scas
out
mov
clc
insb
mov
fwait
push
add
cmp
add
mov
add
btc
clc
cmp
clc
repz
clc
sbb
stos
jb
add
clc
mov
pop
icebp
xchg
in
aaa
mov
mov
aas
shrl
push
or
clc
nop
jae
add
clc
enter
fimull
add
in
je
clc
aad
clc
gs
jmp
and
das
popa
add
xchg
push
add
jae
add
add
mov
sub
add
loope
pusha
add
ss
lcall
lret
mov
push
je
clc
bound
add
xor
clc
stos
in
adc
add
clc
inc
clc
cmp
clc
lock
and
add
inc
clc
jno
add
mov
mov
clc
adc
add
lcall
add
push
pop
out
outsb
sub
mov
and
fstl
sarb
add
pusha
add
clc
adc
add
jns
mov
cmp
sub
add
add
pop
fwait
aaa
loope
pop
repz
add
add
mov
clc
mov
add
je
cmp
enter
into
adc
add
push
fmull
cmc
sbb
pop
mov
clc
cld
and
add
mov
jmp
xchg
loope,pn
pop
sbb
cmp
add
or
adc
add
clc
pop
scas
lahf
mov
pop
mov
or
clc
scas
mov
clc
mov
sub
and
add
je
clc
jp
clc
mov
movsl
clc
jbe
xor
aas
xchg
dec
or
xchg
jle
or
lcall
nop
add
add
push
jmp
push
sbb
push
jbe
test
clc
push
cmp
ret
clc
mov
clc
adc
add
jle
in
jns
push
add
fldt
adc
add
sar
clc
pop
lcall
add
and
add
sbb
clc
out
outsb
cmp
add
inc
add
jb
add
inc
clc
add
add
cmpsl
clc
mov
int
add
or
cmp
clc
pop
pop
lret
pop
clc
or
aaa
cmp
jns
into
cmp
rorl
aaa
mov
dec
je
add
jle
fs
sbb
call
clc
repnz
push
cmpsl
clc
mov
ss
xchg
xchg
scas
ljmp
clc
dec
fstpl
rclb
add
xor
add
mov
mov
add
add
lods
sbb
or
repnz
outsl
lea
mov
clc
insb
xor
add
mov
clc
imul
sahf
cli
rorl
iret
mov
clc
add
add
bound
add
add
loope
jnp
jecxz
and
mov
inc
clc
insl
enter
xor
add
clc
imul
add
xchg
jp
jge
and
add
add
ret
pop
pusha
add
cmp
mov
clc
fdivr
dec
cmp
push
fisubs
add
xchg
push
add
xchg
pop
in
dec
cmp
add
cs
mov
clc
mov
ret
clc
xor
add
test
jl
add
pop
pop
xchg
add
add
adc
clc
xchg
xchg
mov
add
and
and
add
sbb
inc
clc
insb
daa
clc
es
mov
clc
mov
clc
push
jb
add
mov
mov
and
jg
add
test
ret
ss
dec
inc
add
mov
add
fcoms
jecxz
cmp
shrl
test
out
mov
addr16
mov
clc
add
add
add
movsl
clc
xor
add
add
or
add
pushf
out
aad
add
jae
add
or
add
outsl
test
lea
xor
add
add
and
jne
sub
cmp
add
push
add
push
mov
add
inc
add
lcall
add
add
stos
pop
cmp
daa
clc
clc
out
pop
add
add
sbb
rcl
lret
dec
pop
ret
mov
clc
loop
adc
add
push
cmp
cmpsb
clc
pop
arpl
add
adc
add
popf
push
and
add
clc
popf
add
add
mov
clc
push
add
ret
clc
scas
push
cmp
xor
add
clc
sub
rcrb
fidivrl
mov
mov
mov
sub
dec
sti
aas
and
add
add
divps
pop
clc
test
clc
cli
sbb
add
clc
and
cmp
clc
addr16
push
sbb
scas
jae
add
add
int
scas
std
ljmp
ficomps
cmpsl
clc
or
add
add
lret
xchg
mov
dec
rolb
add
ss
clc
sub
xchg
out
xor
clc
scas
jae
add
aad
push
add
fldcw
mov
add
in
mov
pushf
outsl
and
mov
mov
out
iret
rcrb
xchg
faddl
add
data16
aaa
push
pop
mov
add
or
clc
push
adc
data16
sahf
mov
int3
pop
clc
shl
clc
fisubl
add
and
add
test
clc
cmp
mov
add
xor
add
mov
and
add
push
clc
inc
clc
and
add
add
or
or
cli
enter
jl
or
das
insl
cmpsl
clc
call
clc
dec
inc
clc
and
mov
clc
daa
clc
loopne
scas
jo
add
insl
inc
clc
xchg
push
clc
in
popf
xor
test
outsb
mov
xchg
jne
loopne
fcom
cmp
lcall
cmp
add
sar
mov
clc
pop
adc
add
es
adc
add
adc
add
add
test
jae
add
clc
adc
add
insl
insb
cltd
je
push
add
xchg
js
sbb
gs
jnp
clc
pop
cmp
clc
xor
clc
mov
out
gs
hlt
dec
dec
nop
jl
imul
add
mov
xor
add
clc
xchg
push
add
or
rcrb
clc
pop
and
add
clc
fmuls
inc
clc
lret
add
movsl
clc
imul
in
testb
adc
add
dec
push
in
jae
add
sti
shl
clc
lret
clc
mov
popa
add
inc
add
data16
inc
clc
jecxz
aaa
popf
jnp
inc
clc
cmp
movsb
clc
jg
mov
popf
mov
jp
jne
mov
ret
clc
sbb
push
jl
int3
negl
add
aas
cmp
clc
bound
add
mov
jbe
clc
xchg
push
pop
sbb
clc
lret
sarl
push
add
xchg
cmp
xchg
mov
add
xchg
sarb
aad
out
xchg
aam
sar
clc
or
outsl
cmp
mov
pop
add
dec
dec
xor
add
filds
add
js
lahf
mov
add
jns
xbegin
push
pop
push
add
scas
pop
fwait
dec
xchg
mov
xchg
pop
mov
clc
or
add
cmc
pop
clc
sti
mov
out
dec
sub
pop
pop
mov
mov
pushf
lahf
xabort
daa
clc
repnz
mov
hlt
bound
add
mov
sti
adc
add
add
inc
add
mov
imul
fwait
mov
adc
add
lret
add
push
mov
sarl
mov
outsl
call
gs
pop
test
dec
stc
arpl
add
sub
cmp
jle
repz
shl
cs
clc
faddl
add
cmovge
add
or
and
add
mov
add
sbb
add
stos
inc
clc
test
push
add
add
pushf
or
clc
fsubl
outsb
test
jle
jbe
ret
clc
cmp
mov
enter
add
add
cmpsl
clc
in
push
and
add
icebp
movsl
clc
push
add
std
and
add
dec
fiaddl
push
sbb
std
jae
add
xchg
int3
testb
into
ffree
clc
mov
sub
add
test
repz
dec
jmp
pop
insb
stos
cmp
add
scas
out
sar
das
cmp
leave
xor
add
add
pop
mov
mov
and
add
add
add
clc
cmp
clc
inc
clc
fwait
xor
add
test
or
or
add
inc
add
jae
add
mov
icebp
bound
add
and
add
clc
add
add
inc
add
outsl
ja
clc
or
daa
clc
ret
clc
aad
xor
add
mov
test
add
push
add
out
cmpsl
clc
das
mov
pop
stos
dec
mov
clc
aaa
mov
add
scas
add
add
and
add
dec
add
clc
and
inc
clc
test
pop
popa
add
repz
loope
sbb
add
add
add
add
sti
sub
cmp
fs
into
pop
adc
add
clc
xor
jge
clc
cmc
cs
lret
ljmp
gs
mov
jle
insb
data16
int3
es
ret
sar
clc
jnp
clc
xchg
scas
es
out
sub
mov
repnz
test
mov
clc
xabort
clc
mov
mov
or
add
ja
add
or
push
add
pop
arpl
add
add
add
clc
dec
push
cmpsl
clc
add
dec
push
clc
test
clc
inc
clc
ja
mulb
add
xor
and
add
and
add
repz
clc
cwtl
pop
cmp
clc
jbe
aas
and
add
add
imul
add
rolb
add
sar
divl
add
sbb
or
adc
add
sar
clc
sub
ret
clc
stos
sar
push
add
inc
add
push
add
sbb
or
lods
out
popa
add
dec
adc
add
adc
add
clc
inc
clc
std
and
add
add
and
add
mov
mov
mov
clc
and
add
fwait
lret
clc
push
mov
test
aaa
pop
lcall
scas
or
push
pop
sbb
clc
ja
clc
call
sub
clc
cmp
clc
ret
clc
add
add
add
push
ficoml
add
fdivs
add
lea
fildl
outsb
push
and
jbe
add
sbb
xchg
cli
mov
insb
pusha
add
cmpsl
clc
mov
clc
ret
clc
in
pop
dec
iret
repnz
add
pop
jo
add
add
hlt
xor
add
add
xabort
mov
rcrl
mov
mov
es
mov
cld
or
out
pop
clc
rol
clc
iret
pop
ret
clc
rolb
push
insb
jns
dec
or
clc
cmp
in
repz
clc
ret
inc
add
adc
add
sbb
adc
add
lock
sar
add
xor
add
clc
push
clc
sub
add
jmp
xchg
adc
fisubrl
cmc
popf
sbb
add
xor
add
jnp
sbb
add
mov
fwait
pop
lcall
add
sarl
xchg
jo
add
add
mov
clc
dec
cmp
clc
ficompl
add
pop
cltd
adc
add
cs
repnz
clc
adc
sbb
add
repz
push
add
sar
and
mov
cmp
es
and
push
xchg
push
out
dec
xchg
cmp
sti
push
enter
fildll
jmp
loop
xor
add
add
cmp
cmp
outsl
call
jecxz
scas
xor
add
add
out
ret
clc
mov
add
imul
clc
je
clc
mov
lea
clc
cmp
add
addr16
fstpl
add
fcmovb
clc
and
add
dec
add
add
sub
shll
add
xlat
or
jo
add
int
clc
pop
mov
pop
test
jo
add
mov
ret
mov
lods
aas
jl
je
cmp
mov
outsl
mov
clc
dec
bnd
clc
jno
add
imul
clc
jecxz
test
mov
arpl
add
add
add
add
jg
push
mov
jecxz
arpl
add
into
in
push
and
add
in
and
lods
mov
jp
sbb
cmp
xchg
lock
testb
add
stc
lcall
clc
xchg
mov
mov
jp
jb
add
cmp
in
xor
clc
jnp
lods
push
aas
cs
das
clc
adc
add
inc
clc
mov
gs
aaa
popf
sbb
insb
fwait
data16
dec
enter
add
es
decb
pop
clc
xor
fsubrs
clc
dec
cmpsl
clc
push
add
mov
add
add
in
daa
clc
aas
add
fisubrs
ret
inc
add
aaa
icebp
inc
clc
mov
pop
sub
clc
add
add
ljmp
jbe
add
nop
das
stos
daa
clc
add
add
dec
dec
fcoms
pop
xchg
outsl
adc
add
push
add
clc
push
sub
clc
inc
add
mov
in
insb
mov
add
clc
jae
add
jns
clc
xchg
out
int
jecxz
and
mov
clc
jle
sub
add
out
mov
add
sub
add
jp
jle
lods
pop
mov
leave
jmp
fcmovu
inc
add
lret
pushf
jb
add
repz
clc
dec
or
inc
clc
and
add
pusha
add
adc
add
add
test
es
adc
add
cmp
je
cmp
mov
add
lret
sbb
and
outsl
sahf
xor
add
add
mov
clc
enter
clc
jecxz
aam
clc
inc
add
mov
clc
aas
or
add
sub
pand
add
dec
jbe
ds
clc
adc
add
clc
cmpsb
clc
jle
dec
pushf
fmul
or
fcomp
lods
push
xabort
add
jae
add
clc
or
add
addr16
clc
das
mov
sbb
add
in
int3
repnz
out
scas
push
icebp
ret
clc
fcoml
mov
clc
or
or
clc
push
dec
das
mov
add
test
or
insl
push
addr16
add
out
out
push
add
aas
cmp
repnz
je
clc
je
out
icebp
and
add
add
add
clc
mov
clc
sub
add
push
pusha
add
push
push
add
jg
clc
imul
mov
es
pop
jle
sub
add
add
or
clc
sub
sbb
add
lea
add
sbb
xor
add
clc
rolb
sbb
jecxz
das
dec
pop
or
xor
add
xor
rolb
add
sbb
xor
add
inc
add
push
add
fsubr
arpl
add
add
dec
add
add
lods
popf
lret
cmp
add
dec
js
mov
clc
imull
decb
cs
clc
xor
add
add
movsl
clc
push
add
outsl
mov
neg
dec
stos
call
jne
in
sub
outsb
mov
clc
sbb
test
aaa
pop
mov
add
out
sbb
clc
push
cmpsb
clc
lret
arpl
add
push
add
scas
mull
and
add
cmp
add
dec
push
stc
adc
clc
and
add
add
xor
add
add
add
imul
pop
sub
mov
clc
add
add
mov
fwait
ret
clc
lods
push
push
add
ja
popa
add
addr16
imul
add
add
add
mov
sbb
xchg
movsl
clc
enter
in
jno
add
add
xabort
aam
sbb
clc
jmp
add
in
std
inc
add
jo
add
clc
outsb
add
add
lods
push
push
clc
add
add
dec
xor
popf
mov
cmpsl
clc
loopne
bound
add
clc
out
sbb
jae
add
add
stos
xchg
xor
add
fabs
clc
mov
nop
jno
add
add
mov
cmp
mov
clc
sar
clc
arpl
add
add
add
cld
call
push
jge
or
push
ds
clc
cmp
std
sbb
add
loope
cmc
push
add
gs
mov
push
clc
inc
clc
pop
clc
pusha
add
pop
clc
fidivrs
leave
imul
pop
ds
add
sbb
ret
clc
lahf
insl
jecxz
daa
clc
or
clc
mov
mov
shl
mov
stos
adc
popf
mov
mov
add
es
jecxz
sub
xor
add
add
jns
dec
clc
fistl
add
adc
add
mov
clc
cs
dec
mov
loop
xchg
addr16
dec
fs
cmp
clc
call
sbb
fstl
in
mov
adc
add
xchg
test
add
hlt
fists
add
sub
add
cltd
mov
test
add
add
clc
mov
pop
test
xchg
fcoms
clc
test
or
scas
lods
mov
add
clc
loopne
cmp
clc
mov
clc
jl
add
and
add
cmp
loopne
mov
xchg
xor
clc
out
je
pop
loopne
inc
add
adc
lcall
enter
clc
xchg
xor
mov
pop
push
add
adc
add
inc
add
gs
mov
add
add
clc
outsb
aas
pop
mov
pop
arpl
add
xchg
or
aam
and
add
xor
add
mov
movsl
clc
adc
add
add
mov
add
add
add
inc
clc
or
clc
xor
add
int
sahf
mov
rorl
jl
jo
add
pop
aad
mov
mov
clc
notl
cltd
and
jecxz
adc
add
clc
jne
jne
clc
es
loopne
jmp
push
add
mov
sbb
inc
clc
out
cs
sbb
mov
cmp
clc
cmc
jno
add
add
push
pop
fcoml
add
ljmp
add
and
add
mov
add
repnz
clc
fbld
mov
fadd
clc
enter
xchg
mov
add
cmc
mov
xchg
adc
add
mov
add
cmp
cmp
sbb
add
cwtl
out
push
add
adc
add
or
xbegin
xbegin
add
rorb
fs
inc
clc
mov
clc
jnp
aas
lock
shrb
or
ret
inc
add
pop
aaa
xor
add
ja
imul
add
and
add
fsubs
add
or
mov
push
add
leave
pushf
mov
js
jge
test
sub
push
jno
add
icebp
mov
and
add
mov
js
add
add
push
ret
out
cld
mov
push
inc
add
jns
in
mov
sbb
cs
imul
dec
sbb
pop
dec
mulb
clc
sub
add
clc
shr
mov
cmp
jmp
mov
mov
pushf
pop
push
ret
clc
imul
int
mov
clc
in
jne
fstpl
xor
add
sar
clc
bound
add
add
in
xor
clc
shr
jne
enter
and
mov
loope
jmp
sub
clc
ljmp
mov
add
decl
add
es
push
imul
add
clc
xchg
or
add
mov
mov
dec
xor
add
add
pop
inc
add
test
clc
cwtl
push
test
fidivs
add
jmp
fcmovnbe
cmp
adc
add
xchg
cmp
add
mov
xchg
test
imul
mov
repz
into
nop
insb
cmp
clc
cmp
dec
int3
pop
loope
inc
add
add
clc
jns
add
mov
and
add
add
adc
add
dec
cli
add
add
mov
add
gs
xchg
test
fucomi
outsl
iret
push
push
add
scas
mov
pop
or
sahf
mov
jg
and
add
mov
add
xchg
xor
add
clc
aad
add
push
lret
je
clc
xabort
fsubs
add
dec
lahf
test
sub
das
leave
out
xchg
in
arpl
add
add
cmp
sub
cmp
xchg
gs
pop
stos
pusha
add
add
es
xchg
cs
test
add
mov
clc
inc
clc
movsb
clc
push
stos
je
mov
mov
add
cmp
add
lods
dec
cmp
clc
out
pop
and
add
pop
clc
aad
inc
clc
dec
jbe
clc
fwait
insl
add
add
lock
add
in
xor
add
adc
add
add
jmp
pop
mov
js
enter
mov
mov
dec
mov
scas
cmp
add
pusha
add
dec
jne
clc
addr16
cltd
and
add
sbb
fs
add
cmp
xchg
adc
add
jnp
popl
add
or
add
jg
pop
clc
dec
adc
clc
test
and
push
jbe
clc
clc
jno
add
ret
jg
clc
xor
or
movsl
clc
stos
push
mov
cltd
mov
xchg
mov
jno
add
add
and
add
mov
and
fiadds
imul
xlat
bound
add
or
adc
add
or
add
mov
sahf
shll
add
cmpsb
clc
mov
sbb
shll
add
add
and
add
add
adc
add
add
pop
mov
or
pop
add
add
add
adc
add
aam
clc
sahf
cmp
mov
movsl
clc
sub
clc
pop
pusha
add
lret
repnz
xchg
dec
push
xor
add
lret
inc
add
leave
sbb
xor
add
stc
out
arpl
add
inc
clc
or
add
popf
push
xchg
insl
mov
add
add
clc
sub
add
or
mov
push
cli
pop
clc
test
sub
clc
add
add
jg,pt
mov
push
cmp
add
cld
cmp
xabort
add
popa
add
jecxz
and
add
xchg
mov
xchg
inc
add
cmpsb
clc
xchg
xlat
out
data16
mov
and
add
add
add
add
xor
add
cmpsl
clc
add
add
ss
xabort
push
add
sbb
push
inc
clc
lret
or
nop
cmp
data16
cmp
clc
std
jl
scas
vcomiss
add
add
outsb
repz
add
jp
or
jp
clc
scas
adc
add
out
fwait
arpl
add
add
stos
inc
clc
mov
jb
add
in
sbb
sub
push
cmp
lret
add
sub
clc
fidivs
jns
clc
push
add
jmp
inc
add
lock
add
pop
pop
dec
sti
pop
mov
aad
add
cmp
push
add
mov
imul
xchg
inc
clc
xbegin
sbb
sarb
clc
sub
xchg
xchg
cmp
inc
add
or
popf
cmp
in
mov
jmp
push
add
or
xchg
scas
add
stc
cmp
aas
in
or
sbb
jno
add
loopne
in
lahf
jae
add
clc
or
clc
cmp
sub
pop
sub
push
mov
cmc
and
clc
inc
add
leave
sbb
mov
push
std
mov
add
pop
pop
mov
add
add
xor
add
add
clc
pop
sbb
push
add
test
insl
jle
inc
clc
addr16
sub
fbld
clc
jno
add
add
jmp
clc
cltd
out
xchg
or
ret
clc
inc
add
stc
mov
add
adc
add
xor
add
test
clc
fwait
jno
add
add
add
add
clc
mov
ret
sbb
loope
test
adc
add
clc
arpl
add
imul
mov
add
add
scas
fdivr
xchg
outsb
lret
xor
gs
jo
add
lcall
fwait
es
addr16
out
dec
push
add
stos
add
sub
xor
add
add
mov
inc
add
xor
add
add
xchg
xor
add
jle
out
das
fmuls
cltd
xchg
div
divb
add
cmp
add
clc
xchg
ss
clc
push
mov
add
add
add
xchg
cmp
clc
mov
add
push
add
imul
dec
jmp
clc
push
jnp
xabort
jg
jmp
sbb
sar
clc
push
push
bound
add
cmp
xchg
push
cmp
add
pop
xchg
xbegin
add
cld
pop
clc
mov
jl
out
dec
sub
insl
inc
clc
ss
clc
mov
jmp
aas
sub
sbb
push
add
jle
clc
mov
sbb
add
add
cmp
ret
clc
cmp
icebp
cmp
ficomps
add
push
fsubrl
rorl
repz
add
das
pop
sbb
clc
test
cld
out
loop
clc
xchg
mov
cmpsb
clc
cmc
mov
jb
add
clc
inc
clc
xchg
lods
pop
bound
add
leave
gs
pop
clc
cmp
add
movsl
clc
jecxz
outsb
xor
add
mov
add
mov
add
add
repnz
rclb
repz
jmp
clc
aas
cmp
xchg
repz
negb
sahf
push
popa
add
fs
insl
adc
add
pop
fcoml
add
xor
add
sbb
movsb
clc
fwait
loopne
inc
add
mov
insb
dec
imul
add
ficoml
add
or
sti
jns
cwtl
push
adc
std
xor
add
sub
or
je
pop
pop
mov
mov
cmpsl
clc
sbb
sub
add
rorb
xchg
dec
gs
jb
add
clc
cmpsl
clc
test
or
xchg
inc
clc
mov
xchg
daa
clc
xor
add
call
movsl
clc
ret
clc
sub
jno
add
add
cmp
mov
stos
repnz
add
ljmp
jmp
fstpt
dec
inc
add
lods
and
add
fistl
add
clc
fwait
jle
xbegin
add
add
in
in
ljmp
push
inc
clc
imul
and
add
fbld
ljmp
xchg
adc
and
add
outsl
push
add
and
add
gs
pushf
pop
clc
add
add
add
cwtl
jne
add
jbe
and
sbb
vmread
xor
add
lods
negb
scas
cmp
and
add
clc
xlat
inc
add
fnstenv
jmp
cmc
aas
mov
mov
clc
ret
fdivl
add
ds
mov
push
push
sbb
jg
add
pop
clc
add
add
pop
aaa
dec
jo
add
add
clc
pop
clc
mov
clc
cwtl
jbe
sti
into
je
es
sbb
xor
add
add
pop
xchg
dec
mov
add
insb
call
cld
fisttpll
inc
add
loope
push
add
push
jne
inc
clc
pop
add
out
hlt
jecxz
pusha
add
loop
pop
cmp
imul
add
inc
clc
scas
lret
add
or
call
hlt
or
adc
add
ljmp
push
lcall
sub
clc
jg
mov
addr16
ja
fistps
in
push
pop
loop
or
test
pushf
sar
mov
data16
cmp
lahf
cmp
clc
ret
clc
inc
add
std
imul
mov
fwait
push
in
and
add
sub
mov
mov
xchg
loopne
hlt
jmp
sarb
icebp
rcll
add
adc
add
mov
sar
add
enter
clc
xbegin
push
add
sbb
fidivrs
int
add
popf
sar
cmp
clc
xchg
dec
lret
add
add
add
add
neg
sbb
add
xlat
sbb
scas
and
in
push
clc
push
add
sbb
jbe
mov
clc
divl
pop
mov
add
fdivrs
or
clc
push
adc
add
and
add
shlb
add
add
add
in
ret
daa
clc
push
xor
mov
clc
movsl
clc
cmp
adc
out
cmp
clc
mov
dec
mov
int
test
shl
clc
push
mov
sub
lret
push
push
clc
mov
fwait
pop
fbstp
dec
jecxz
bound
add
add
push
add
sti
lahf
bound
add
jmp
add
fisubrs
cmpsb
clc
cmp
add
fildl
add
mov
add
add
add
pop
jmp
js
xchg
mov
rorl
je
mov
add
mov
clc
mov
xchg
and
add
in
inc
clc
repz
sub
call
jmp
adc
add
or
add
mov
mov
clc
insl
fsubrl
clc
sub
add
aam
mov
sub
out
cmpsb
clc
movsb
clc
xor
add
clc
scas
in
adc
add
add
jne
sub
add
jae
add
add
add
es
dec
fldl2e
inc
add
sbb
cmp
add
sbb
jae
add
add
mov
add
insb
mov
clc
loopne
adc
clc
push
es
fstpl
jnp
jo
add
inc
add
mov
clc
push
add
xor
lods
sub
dec
jo
add
and
xchg
jle
shll
clc
cmc
mov
mov
mov
clc
stc
sbb
aas
ss
clc
cmp
imul
pop
rcrb
mov
sub
clc
cmp
clc
data16
lods
pop
and
add
in
scas
cmp
int
add
jae
add
clc
add
int3
test
add
cmp
gs
pop
dec
das
mov
cmc
jbe
loopne
adc
add
outsb
sar
clc
stos
lods
mov
add
mov
jl
clc
xbegin
and
add
inc
add
fwait
mov
fistps
hlt
mov
jl
in
fsqrt
cld
stos
mov
pop
pop
xlat
mov
clc
fldt
pop
or
lahf
fidivl
add
fs
pusha
add
xor
add
cmc
std
out
push
data16
inc
add
and
add
jp
loopne
cwtl
cmp
gs
scas
iret
jns
dec
xor
clc
std
fildl
add
push
clc
dec
call
adc
add
clc
mov
pop
xchg
in
lods
gs
jbe
clc
int
clc
lcall
clc
loope
dec
jnp
add
add
mov
fdivs
ds
xchg
push
clc
mov
stos
cmp
jmp
adc
clc
xchg
ret
clc
sub
mov
and
xchg
jge
inc
add
fidivrl
clc
scas
fimull
sbb
filds
add
aas
and
add
sbb
jae
add
pop
xchg
loopne
dec
and
add
int3
popa
add
scas
and
or
loope
adc
add
psubsw
ret
mov
clc
sub
add
cmp
adc
mov
clc
fldcw
add
sbb
mov
insl
out
adc
clc
aad
shrl
mov
pop
icebp
push
jnp
pop
mov
fs
fistpl
stos
rorb
clc
lret
add
in
xor
xchg
push
mov
jg
mov
mov
add
add
pop
sti
xchg
out
mov
stc
out
inc
clc
fistps
add
sti
das
ret
clc
mov
mov
pushf
xor
add
call
fst
ds
lret
dec
pop
fsubr
mov
add
sub
lahf
sub
xor
add
dec
ret
mov
inc
add
mov
xchg
fnstenv
add
xchg
mov
pop
clc
xchg
mov
push
bound
add
adc
mov
clc
movsb
clc
xchg
mov
test
push
add
xor
add
cmp
mov
clc
jmp
jp
mov
clc
jmp
dec
pop
sbb
cmp
clc
in
addr16
jle
clc
mov
clc
es
pop
xor
iret
and
sbb
add
add
add
sub
ljmp
push
jbe
push
mov
lcall
out
lea
add
cmp
add
mov
sub
clc
mov
add
xbegin
xor
cmp
mov
cltd
mov
add
pop
clc
jle
icebp
leave
testb
imul
xor
add
and
add
sar
jg
out
rcll
pop
leave
mov
fprem1
push
aaa
and
clc
lcall
stos
jo
add
clc
and
add
add
add
fs
cltd
call
cmpsb
clc
jge
clc
mov
xbegin
dec
cwtl
adc
add
add
mov
add
add
jae
add
mov
add
sub
add
add
clc
adc
add
add
add
arpl
add
sar
mov
pop
pushf
cmp
mov
clc
scas
mov
add
stos
std
pop
or
repz
int
push
add
mov
jge
clc
sub
mov
xor
add
flds
add
mov
add
sbb
sbb
into
cmp
jo
add
or
clc
sbb
jp
mov
jo
add
lahf
fld
clc
pop
push
mov
or
mov
daa
clc
insb
and
cwtl
mov
add
gs
in
insl
call
clc
jecxz
cwtl
mov
push
clc
out
mov
pop
jp
mov
test
mov
cmpsb
clc
out
push
add
mov
clc
cmp
movsl
clc
daa
clc
fidivrs
clc
loope
adc
add
xor
add
imul
and
and
add
cmp
clc
mov
aas
ds
jns
add
add
add
add
repz
gs
mov
loop
xchg
daa
clc
push
add
inc
add
fs
jo
add
hlt
imul
add
mov
clc
and
add
pop
pushf
inc
add
in
jne
inc
clc
jle
mov
add
ret
add
rcrl
add
pop
insb
dec
aad
clc
mov
add
xchg
hlt
adc
into
mov
clc
xchg
add
add
jb
add
mov
in
mov
and
add
xchg
adc
clc
cmpsl
clc
or
sub
xchg
out
test
hlt
jmp
jbe
es
sbb
add
dec
mov
cmp
cwtl
add
gs
out
pushf
mov
adc
add
shlb
add
add
out
gs
lret
or
add
ja
pop
cmp
inc
clc
stos
xabort
ret
call
mov
mov
xor
or
clc
dec
dec
in
fs
into
mov
sti
push
add
inc
add
mov
loopne
add
add
sbb
test
add
xor
ret
clc
insb
jp
icebp
bound
add
sbb
ret
mov
jl
movsb
clc
xbegin
inc
add
enter
ret
clc
cwtl
lss
scas
icebp
sub
add
repz
daa
clc
pop
iret
fs
js
push
lret
pushl
enter
hlt
je
adc
add
pop
das
push
ljmp
add
jge
scas
in
sub
add
add
sub
sub
data16
mov
jp
loop
dec
xchg
and
add
cmpxchg
clc
leave
xor
add
mov
pop
mov
pop
add
mov
shrl
cmp
add
cmp
call
add
lock
in
int3
icebp
push
addr16
test
adc
clc
add
add
mov
mov
add
ud2
and
add
and
jnp
clc
push
clc
inc
clc
loop
or
pop
clc
dec
cld
jb
add
add
add
push
add
cs
out
adc
add
jg
inc
add
pop
pop
in
cmp
add
ficoms
inc
clc
arpl
add
fisubl
out
push
add
je
add
or
cmp
outsl
jo
add
jge
mov
mov
add
std
and
arpl
add
clc
push
clc
imul
nop
xor
add
hlt
xchg
xchg
dec
sbb
mov
push
add
cld
mov
xchg
or
pop
sbb
jg
cmp
js
sar
cwtl
cmpsl
clc
push
xchg
mov
icebp
out
jnp
clc
inc
clc
out
xchg
add
add
dec
cltd
xchg
mov
push
xor
dec
add
add
clc
lret
ja
aaa
outsl
repnz
lods
sti
jo
add
dec
cvttps2pi
iret
adc
add
ss
sbb
add
je
lcall
test
imul
js
push
push
pop
pop
ds
adc
add
mov
xor
addr16
xor
add
add
iret
pop
mov
pop
cmp
daa
clc
cmp
add
insl
loope
jecxz
jecxz
mov
pop
clc
adc
movsl
clc
in
ret
add
add
loopne
xchg
mov
pop
je
aaa
mov
scas
jae
add
cmpsb
clc
xchg
add
movsb
clc
xabort
xchg
or
add
rcll
add
push
rcrb
clc
cmp
add
dec
sar
clc
aad
cld
je
add
xor
add
insl
cs
clc
gs
add
es
xchg
mov
clc
cmp
or
clc
ror
cvtdq2ps
clc
pushf
in
sahf
shll
inc
add
test
vcvtdq2ps
es
popa
add
add
add
sti
or
ds
add
xlat
xor
add
arpl
add
push
mov
cmp
clc
xchg
lea
clc
jmp
add
in
adc
jns
add
pushf
imul
sbb
test
dec
mov
clc
pop
clc
pop
arpl
add
bound
add
dec
add
jle
clc
xchg
test
jge
pusha
add
out
xor
add
dec
sbb
iret
mov
popf
jae
add
clc
xchg
sbb
lahf
or
jbe
jne
xor
add
add
mov
push
add
nop
fisubl
add
add
out
mov
clc
xlat
cld
into
jnp
jg
clc
arpl
add
cmp
add
clc
xchg
xor
add
xchg
push
add
mov
clc
out
pop
into
pop
sbb
clc
lret
xor
add
mov
and
add
fstpl
or
add
xor
add
add
sbb
dec
or
add
fwait
jecxz
jmp
cmp
and
mov
inc
clc
xabort
and
mov
cmp
add
xor
jecxz
lea
clc
jo
add
lahf
sub
clc
sbb
mov
clc
sar
mov
add
add
add
add
cmp
jnp
clc
jmp
clc
push
add
or
xor
add
clc
dec
je
or
add
adc
clc
call
test
sub
cmp
add
movsb
clc
pop
and
add
pop
mov
clc
pop
fwait
int
add
adc
add
add
push
clc
cli
lcall
clc
nop
movsl
clc
xchg
sub
clc
cli
mov
inc
add
push
add
push
add
push
clc
dec
aaa
cmp
add
cmp
or
clc
xchg
mov
jl
add
xchg
lock
add
add
loope
and
inc
clc
dec
fs
cs
add
outsb
loop
out
clc
dec
in
sbb
jmp
popa
add
dec
jle
mov
add
or
test
es
dec
ret
or
add
cwtl
mov
add
in
mov
repnz
add
mulb
out
test
add
push
add
cmp
push
nop
xlat
adc
xchg
inc
add
fstpt
add
add
add
clc
sub
cs
push
push
btc
add
sub
and
add
clc
fdivl
add
clc
insb
es
and
push
add
add
clc
cmp
add
sub
test
enter
add
mov
clc
bound
add
add
decb
clc
mov
dec
and
add
add
add
mov
in
sti
jbe
clc
clc
cli
mov
js
test
ss
clc
out
xor
arpl
add
add
sar
aad
ss
xor
add
clc
xor
add
clc
and
add
fisttpll
clc
iret
or
clc
in
scas
loope
mov
popa
add
or
insl
cmp
clc
dec
incb
out
mov
nop
lods
ret
clc
or
adc
add
mov
or
adc
jae
add
mov
add
outsl
test
dec
mov
add
add
sahf
pop
xor
add
sub
add
inc
clc
bound
add
add
mov
clc
push
cmp
imul
add
xchg
cmpsl
clc
mov
test
clc
bound
add
jne
xchg
jp
nop
roll
jns
add
out
out
or
ljmp
or
clc
shll
rcl
in
inc
clc
lods
ret
clc
push
push
add
cmp
dec
or
clc
nop
mov
add
scas
stc
inc
add
add
sar
adc
jae
add
clc
nop
jmp
mov
clc
insb
js
int
lock
add
fisubl
add
test
dec
sbb
dec
mov
ja
sar
dec
clc
add
sar
xor
add
clc
mov
cmp
sbb
dec
sti
pop
icebp
cmpsb
clc
cmp
xor
add
add
or
not
idivb
add
arpl
add
cld
push
cmp
and
add
add
sti
js
stos
sbb
sub
add
repz
lret
xor
rorl
xchg
or
add
add
pop
mov
add
cmpsl
clc
shll
add
roll
add
add
lods
sbb
clc
loopne
insl
pop
pop
outsl
xchg
lahf
loope
aam
jmp
pop
loopne
out
cmp
clc
mov
adc
add
mov
clc
fstpl
addr16
lods
jno
add
clc
sub
clc
mov
cmpsl
clc
mov
xabort
clc
pusha
add
mov
data16
inc
clc
dec
push
add
sti
test
enter
mov
fildl
add
inc
add
daa
clc
int3
pop
fwait
into
adc
clc
push
cld
add
sub
jmp
sar
gs
jns
pusha
add
dec
ret
clc
insl
jg
or
push
add
or
push
arpl
add
mov
pop
mov
or
into
cvttps2pi
xchg
or
add
pusha
add
cmp
loope
xor
add
sub
scas
sbb
leave
or
jbe
jg
cmp
add
jge
ljmp
out
xchg
mov
clc
mov
cmp
stc
lods
ret
clc
xchg
in
enter
clc
jno
add
add
clc
imul
inc
add
sti
js
clc
xbegin
pop
test
cmp
clc
jno
add
add
out
mov
icebp
cmp
xlat
xchg
stc
push
cmp
clc
es
fadd
clc
sub
push
add
mov
adc
add
fsubr
or
gs
in
pop
jns
or
add
fisttpll
jecxz
out
fsubr
pop
inc
add
aaa
mov
movsb
clc
xlat
jge
clc
sahf
pop
jecxz
cmp
or
test
sub
lods
adc
add
mov
loopne
cld
sahf
je
add
clc
and
push
add
into
ss
movsb
clc
sbb
pop
cmp
lahf
jbe
clc
pushf
test
repnz
clc
inc
clc
mov
mov
insb
sbb
xor
add
out
pusha
add
add
add
sub
or
pop
cmp
fiadds
lahf
insl
push
add
in
push
xchg
or
and
add
clc
push
add
movsl
clc
push
movsb
clc
mov
js
xor
inc
clc
xor
int
clc
inc
clc
dec
bound
add
mov
std
mov
cli
push
mov
clc
or
add
movsl
clc
push
mov
inc
add
inc
add
outsl
in
push
add
cmp
add
scas
in
sub
xchg
adc
add
clc
push
add
cld
pop
fists
add
fwait
dec
mov
outsb
fstpl
lcall
push
cmp
clc
push
rorb
add
nop
adc
add
clc
sbb
daa
clc
pop
imul
and
add
clc
xor
add
clc
sar
mov
xchg
test
cwtl
xchg
popl
add
out
or
cmp
dec
out
pop
and
lret
xbegin
add
js
xchg
mov
sbb
clc
mov
add
mov
clc
outsl
mov
clc
adc
add
or
das
es
cmc
push
add
cld
mov
push
add
fucomi
fmuls
ja
clc
out
push
gs
pop
sti
and
add
clc
es
call
add
fistpll
pop
loope
popa
add
into
jb
add
sahf
loopne
adc
add
add
stc
cmpsl
clc
icebp
in
daa
clc
pop
cltd
std
push
mov
test
inc
add
xor
add
add
ror
cmp
lods
jmp
mov
test
or
cmp
cmp
add
push
push
add
jno
add
es
out
mov
pushf
push
loop
enter
add
clc
kortestw
clc
into
sub
lock
mov
mov
add
mul
clc
pop
xlat
lret
clc
inc
clc
mov
add
dec
jae
add
add
add
sub
xchg
cltd
or
add
sbb
clc
jg
rolb
es
pop
and
and
add
in
inc
add
flds
inc
add
inc
add
lahf
fisttpll
cli
xchg
into
adc
add
add
xor
add
movsb
clc
sub
or
mov
push
clc
xor
add
clc
mov
push
add
shrb
clc
loop
sar
or
div
fdiv
sbb
add
add
clc
jl
std
jmp
jge
dec
into
cmp
or
add
ds
push
push
add
add
xchg
dec
fmull
sub
dec
jae
add
pop
push
clc
stc
js
jp
mov
add
jb
add
rcll
clc
data16
out
pusha
add
into
std
fistpll
test
call
push
add
enter
xchg
clc
in
mov
clc
movsb
clc
mov
lods
lock
clc
dec
jp
add
and
pop
mov
cmp
call
clc
pop
sub
add
cld
mov
add
call
add
clc
test
clc
popf
in
push
add
scas
mov
test
dec
xchg
xor
add
mov
cmp
clc
out
icebp
cltd
pop
in
mov
add
pop
mov
add
mov
inc
clc
jbe
add
xchg
mov
ljmp
in
call
xchg
test
sub
mov
add
rcrb
mov
clc
hlt
mov
add
jne
adc
add
clc
sub
add
mov
clc
pop
mov
inc
add
daa
clc
push
add
pop
cmp
hlt
ja
clc
pop
pop
cmp
in
aad
clc
pop
clc
imul
mov
push
mov
clc
mov
dec
sub
repz
xchg
loope
push
add
loopne
sbb
xlat
pushf
fstpt
fisubs
add
jb
add
sti
in
stc
inc
clc
loopne
imul
sub
add
fsub
clc
push
mov
push
pop
cmp
pop
mov
clc
push
xchg
fstpt
adc
add
mov
out
or
addr16
dec
mov
pop
out
dec
jo
add
stos
aaa
adc
add
add
rorb
push
lods
sti
adc
add
cmp
add
add
xor
clc
jno
add
mov
add
fdiv
or
add
mov
clc
loope
lods
scas
jp
pop
lock
jb
add
clc
cmpsl
clc
jb
add
test
clc
adc
add
cmp
xchg
imul
mov
je
out
jns
cmp
clc
addr16
push
cmpsb
clc
sbb
push
fwait
scas
jo
add
xchg
ror
mov
clc
mov
out
bound
add
and
cmc
in
lret
lock
test
cmp
clc
adc
add
sbb
int
clc
fadd
clc
inc
clc
mov
loope
inc
add
sub
cmp
loope
push
inc
clc
outsb
sub
add
clc
mov
clc
out
mov
clc
mov
add
add
ret
clc
sar
mov
dec
rclb
add
add
xlat
or
add
cmpsl
clc
push
add
sbb
test
ret
jl
fsubs
clc
xchg
xor
lret
add
add
xchg
gs
fists
add
mov
ret
clc
pop
aas
loopne
inc
add
addr16
jmp
add
add
dec
in
xor
add
pop
cmp
cltd
xor
add
loop
push
insl
sbb
dec
test
lods
clc
jle
sub
icebp
lret
outsb
pop
xchg
in
jle
and
pushf
mov
clc
mov
jl
pusha
add
rol
clc
mov
add
loop
mov
sub
addr16
bound
add
and
add
add
sub
and
imul
push
clc
xor
cs
dec
aam
jmp
add
sub
xor
lcall
ficoms
insl
fistl
add
sub
mov
jo
add
dec
mov
adc
mov
sar
clc
inc
add
push
add
out
dec
out
dec
outsl
in
mov
mov
dec
insb
pop
clc
pusha
add
loope
loop
cmp
clc
xchg
sbb
cwtl
mov
add
add
inc
add
mov
clc
inc
clc
adc
mov
fstpt
lods
mov
lcall
fnstcw
clc
fsts
add
and
add
clc
add
add
add
scas
leave
aas
rorb
push
add
jae
add
clc
pop
insl
add
add
mov
clc
inc
clc
lret
xor
add
clc
pop
or
add
lock
cmp
mov
js
loope
fstpl
hlt
imul
xor
add
lock
ret
add
rorl
add
add
movsl
clc
movsb
clc
and
add
addr16
add
add
and
add
xor
add
ss
clc
sbb
aaa
call
add
clc
into
mov
add
pop
clc
xlat
xbegin
mov
sub
sbb
clc
xor
add
cltd
hlt
sahf
fcmovnu
sbb
clc
push
add
sar
add
add
rolb
enter
jge
sbb
add
into
xchg
cli
pop
sbb
insl
jae
add
add
out
nop
out
xchg
cwtl
mov
clc
or
dec
mov
add
add
and
add
jmp
add
mov
add
add
clc
notl
popf
mov
add
mov
pop
fdivs
movsb
clc
fldl
add
imul
fnstsw
ja
mov
adc
add
add
out
xlat
jae
add
clc
arpl
add
call
add
adc
lods
decb
sbb
xchg
mov
scas
sti
cli
pop
push
mov
add
dec
jns
clc
push
scas
xor
add
clc
aad
neg
jno
add
or
add
mov
add
or
xor
lea
adc
add
add
mov
mov
add
out
rclb
add
add
add
add
jmp
mov
push
add
mov
insb
mov
cmp
clc
pop
xchg
jbe
clc
xlat
clc
sub
das
xabort
mov
shll
add
mov
mov
mov
fidivrl
enter
clc
pop
loop
sub
add
xor
add
pop
jmp
add
inc
add
jo
add
add
push
lcall
pop
jmp
out
pop
aad
pop
addr16
imul
xchg
stos
xchg
ljmp
add
popf
movsb
clc
cmp
clc
and
add
clc
jb
add
inc
add
dec
adc
add
negl
rcll
inc
clc
fimull
loopne
or
sbb
inc
clc
mov
clc
dec
loope
and
add
clc
jge
push
add
ljmp
cmp
pop
push
call
inc
clc
mov
clc
add
clc
lock
sub
or
add
dec
mov
add
pop
repz
ret
clc
dec
int3
into
scas
notb
inc
clc
push
push
add
fistl
clc
rolb
add
push
jns
xbegin
clc
push
add
pusha
add
iret
push
sbb
cltd
popf
xor
clc
stos
dec
push
mov
out
clc
dec
cmp
xchg
xchg
xor
clc
lock
and
add
lods
enter
add
movsb
clc
jmp
fstpt
xbegin
xchg
or
in
mov
clc
jmp
sbb
sub
fidivrs
lcall
xchg
ret
clc
call
test
enter
clc
addr16
fcmovnb
clc
mov
clc
cmp
jnp
jbe
clc
imul
add
xlat
leave
aad
clc
pop
rcll
inc
clc
movsb
clc
sbb
jmp
sarl
negb
push
nop
sti
pop
cmp
clc
je
loope
dec
push
cwtl
mov
inc
clc
sbb
jge
lcall
jge
add
scas
adc
add
clc
imul
and
sbb
clc
cmp
fistpll
clc
pop
sti
test
inc
add
inc
add
sbb
clc
push
add
mov
ss
into
clc
adc
add
clc
push
xchg
jle
mov
add
add
sbb
clc
dec
xchg
dec
fcoms
data16
ret
aas
iret
dec
push
out
xlat
out
pop
lea
adc
add
add
add
or
in
es
cmp
add
add
add
and
add
clc
data16
mov
dec
in
mov
xchg
mov
cltd
fnstsw
lea
add
mov
inc
clc
mov
add
pop
insl
mov
data16
mov
clc
lret
jno
add
pushf
mov
mov
adc
pop
push
cmp
add
mov
clc
loop
xor
add
repz
dec
std
addr16
jle
shlb
add
xchg
xchg
popa
add
call
testl
sbb
loope
dec
stos
sti
pop
testb
mov
mov
mov
add
add
pop
pushf
clc
mov
add
add
mov
clc
and
add
pop
out
jo
add
add
test
mov
fisubrs
clc
mov
add
stos
add
add
mov
fldl2t
cltd
je
add
cmpsl
clc
js
adc
add
add
add
mov
clc
hlt
movsl
clc
das
fidivl
add
push
clc
adc
dec
sbb
and
add
push
fisubrs
cmp
movsl
clc
ror
pop
popa
add
and
add
sub
add
stos
call
mov
add
cld
mov
add
mov
dec
push
inc
add
mov
fs
sarb
mov
std
sbb
and
adc
add
add
xor
add
add
push
inc
clc
sbb
xchg
add
add
or
add
clc
or
add
add
rcr
inc
clc
test
clc
sbb
add
fsubrl
mov
adc
lret
push
stos
and
or
stc
push
xchg
sbb
adc
add
sub
insl
pop
imul
es
decb
jo
add
das
sti
xlat
or
clc
pushf
insl
inc
clc
outsl
mov
lea
clc
adc
negl
gs
mov
add
popa
add
mov
xor
add
adc
add
dec
aaa
add
add
push
adc
add
hlt
inc
clc
xchg
add
add
clc
mov
stos
mov
fidivrs
cltd
je
clc
cs
and
push
imul
mov
mov
scas
jecxz
cmp
clc
into
pop
xchg
pop
sbb
clc
xbegin
adc
add
clc
cmp
add
mov
out
stc
sub
add
mov
clc
mov
clc
ret
sbb
adc
add
add
mov
xchg
loopne
cmp
inc
add
sub
clc
test
xor
clc
jb
add
clc
sar
pop
in
pop
shlb
clc
addr16
in
je
jbe
dec
xchg
into
fs
addr16
xor
xchg
lcall
mov
dec
dec
popf
dec
dec
xchg
cs
push
clc
xchg
stos
sub
add
aad
clc
test
lret
test
add
inc
clc
out
inc
add
pop
popf
cmp
adc
add
add
or
clc
sub
sbb
add
insl
sti
fs
ljmp
push
push
clc
sarl
push
add
test
and
add
push
dec
sti
pop
sub
out
popa
add
and
ljmp
add
adc
add
jmp
repz
add
es
mov
add
fnsave
add
aam
bound
add
clc
cmp
mov
sub
clc
jae
add
das
fwait
lret
pop
aad
add
mov
xor
push
mov
xbegin
pop
cmp
and
add
mov
add
add
clc
mov
dec
adc
add
imull
das
lret
sbb
clc
addr16
xor
add
shl
pushf
lods
push
cmp
jp
clc
jne
adc
add
add
mov
pop
dec
sub
jmp
add
nop
cmp
ficompl
add
lods
mov
clc
add
add
add
inc
add
pushf
iret
in
mov
add
data16
pop
test
aaa
fmull
add
adc
aam
inc
clc
mov
clc
pop
leave
dec
or
cmp
add
cwtl
outsl
add
add
iret
mov
jb
add
imul
cmp
clc
scas
sub
add
pop
bound
add
adc
add
or
in
cmp
pop
add
imul
cmp
mov
add
mov
clc
pop
xor
add
call
bound
add
inc
clc
sbb
clc
test
clc
sti
popf
sub
add
cmp
sbb
sub
repz
adc
add
scas
adc
add
idivb
mov
dec
inc
clc
nop
cmp
mov
aas
into
movsb
clc
aad
nop
cli
mov
push
add
out
push
xor
add
xabort
aad
jae
add
mov
shl
clc
adc
add
cmp
clc
pop
clc
inc
clc
mov
clc
test
clc
inc
add
push
mov
sar
pushl
pushf
xchg
inc
clc
fdivr
adc
add
das
add
add
clc
xchg
faddp
clc
fadds
push
add
bound
add
add
fimuls
add
add
mov
cmpsb
clc
mov
mov
mov
clc
jbe
sar
cmp
imul
push
test
or
clc
sub
mov
clc
mov
add
lods
push
repnz
sahf
scas
lods
sub
pop
push
add
pop
cmp
or
add
cmp
clc
fchs
clc
mov
add
and
add
add
clc
je
clc
cmc
fmull
xor
add
add
add
inc
clc
cld
pop
mov
clc
int3
cmc
into
out
in
push
mov
add
jp
clc
inc
clc
jmp
push
in
inc
add
mov
and
add
mov
testl
add
add
add
jle
fsubs
mov
jb
add
jae,pt
add
inc
clc
xor
outsl
mov
xchg
xchg
xchg
or
pop
clc
or
ficoms
sbb
ljmp
xchg
test
cmp
mov
add
stos
adc
add
and
add
clc
xlat
push
sub
add
clc
js
clc
ds
clc
jnp
fwait
xchg
sub
cs
dec
sub
fistpll
outsl
mov
sarb
loop
out
loop
xchg
sub
gs
cmp
add
insb
push
test
xchg
mov
add
ds
add
xor
add
add
daa
clc
or
add
mov
aam
clc
repz
add
mov
dec
dec
jo
add
clc
mov
mov
out
pop
jmp
add
outsl
mov
add
in
jp
jno
add
rcrb
push
cmp
clc
clc
mov
clc
int
popf
push
add
mov
lods
dec
iret
adc
push
outsb
push
add
leave
xabort
add
add
add
es
ja
pop
xor
add
add
loopne
push
add
add
xchg
outsb
aad
popa
add
popa
add
clc
mov
add
pushf
mov
test
or
lods
sub
das
mov
iret
jge
clc
addr16
mov
add
xlat
faddp
clc
pop
inc
add
in
aas
outsl
xor
clc
std
movsl
clc
adc
add
cltd
adc
in
add
add
mov
jne
repnz
push
cmp
xor
mov
mov
sbb
out
or
add
out
inc
add
jl
xor
clc
popa
add
jne
adc
add
dec
cmp
add
add
clc
jno
add
in
mov
or
xchg
xor
add
clc
add
add
add
mov
clc
xor
add
add
mov
add
xchg
mov
pop
out
bound
add
test
in
fidivrl
int
nop
xor
and
aaa
int
cmp
clc
out
pop
pop
mov
clc
ret
call
shlb
je
adc
add
cltd
scas
xchg
mov
add
or
pop
mov
clc
jmp
and
lods
cmp
mov
clc
mov
add
cli
jae
add
jae
add
clc
cmpsb
clc
lods
xchg
adc
add
xchg
sub
test
mov
inc
clc
iret
jnp
clc
cmp
in
out
jno
add
mov
mov
aam
clc
cmp
inc
clc
data16
push
add
gs
lods
inc
clc
mov
clc
xabort
jmp
mov
xchg
push
clc
add
clc
fiadds
add
fists
or
clc
xor
or
repnz
xor
add
lock
data16
out
jl
sub
clc
cmp
push
add
xor
add
clc
push
push
lea
mov
insl
pop
scas
add
add
movsb
clc
mov
add
add
mov
inc
add
jp
cld
cmp
cmp
add
scas
xchg
sar
scas
shlb
outsb
data16
pop
setae
adc
add
ljmp
in
es
push
dec
negb
dec
mov
clc
xchg
aad
sar
or
clc
inc
add
js
fwait
loopne
sahf
jns
add
sub
add
add
xchg
std
push
add
es
adc
add
sar
clc
jns
xchg
fwait
push
cs
mov
clc
jae
add
loope
jmp
out
mov
clc
stos
out
dec
fsubp
clc
xchg
cs
jno
add
clc
push
adc
add
cmpsb
clc
aad
jge
clc
fnstsw
clc
xchg
jecxz
jo
add
mov
ja
aaa
das
aaa
xbegin
movsl
clc
jne
clc
cmp
clc
jbe
mov
test
dec
and
add
add
inc
clc
ljmp
dec
push
lret
aas
mov
clc
mov
addr16
int
sub
push
add
cltd
dec
stos
fnsave
pop
outsl
repnz
cmp
insl
out
repnz
add
cmpsl
clc
xchg
cmp
xchg
mov
mov
add
arpl
add
cmp
cltd
in
add
add
sar
clc
in
cmpsb
clc
push
clc
stc
leave
dec
in
int
imulb
add
lods
push
clc
xchg
and
clc
sub
cmpsl
clc
dec
pop
aam
add
mov
add
pop
push
add
pusha
add
inc
add
mov
add
mov
es
adc
inc
add
add
add
stos
pop
sar
repz
dec
cmp
pop
call
add
inc
add
xor
add
or
dec
sbb
inc
add
lock
test
push
pop
sub
clc
insb
test
daa
clc
and
add
add
clc
cs
mov
out
push
clc
ds
add
xchg
ret
clc
stc
cmpsl
clc
inc
clc
fcmovnb
clc
repnz
push
lahf
mov
clc
cli
push
inc
clc
cmp
imul
iret
rcrl
mov
push
mov
test
jmp
clc
jno
add
pop
mov
loope
jecxz
popf
bound
add
loope
xchg
lock
clc
vcvtps2pd
clc
push
add
scas
or
clc
ffree
clc
xchg
and
add
clc
inc
clc
jmp
add
dec
adc
add
clc
mov
add
lcall
mov
xabort
and
add
adc
add
mov
jecxz
cmp
xchg
or
add
data16
sahf
xor
add
add
clc
xchg
repz
add
data16
iret
or
push
xchg
out
push
clc
pop
adc
add
dec
pop
loopne
jo
add
add
fmul
xor
add
aaa
testb
and
add
imul
test
add
cmp
aam
clc
inc
add
push
xchg
sbb
push
scas
in
je
push
add
in
sahf
xchg
jp
jne
rol
clc
ret
clc
dec
sbb
inc
add
das
int
push
mov
add
popf
push
je
ficomps
and
add
or
add
clc
cltd
sbb
clc
enter
mov
imulb
daa
clc
push
clc
out
cmp
clc
pushf
dec
jns
clc
movsb
clc
imul
and
add
enter
es
inc
add
push
leave
add
pushf
ret
sub
idiv
cmp
repz
mov
mov
add
cs
lahf
ss
mov
adc
add
jns
add
fistl
sub
clc
mov
das
jmp
xchg
dec
xor
movsb
clc
repnz
mov
sbb
jb
add
clc
dec
dec
mov
jle
cld
cmp
push
jo
add
add
inc
add
sub
sbb
mov
push
add
into
push
sub
sti
push
cmpsl
clc
dec
lods
outsb
fiaddl
add
add
add
add
cmpsl
clc
cmp
or
clc
clc
mov
jmp
outsb
mov
add
js
add
sar
pushf
iret
rcl
addr16
or
data16
scas
cli
rol
clc
arpl
add
sbb
push
leave
int3
cltd
negl
in
movsl
clc
fsubrl
lahf
leave
shrl
clc
pop
jo
add
cld
out
stos
xchg
sbb
iret
inc
add
call
and
mov
lcall
and
add
add
stos
clc
arpl
add
loop
jge
ret
add
out
pushf
pop
clc
insl
adc
clc
enter
pop
test
clc
sbb
add
sti
lods
scas
mov
mov
add
xor
add
push
add
outsb
xlat
sub
sub
incl
and
shr
rorb
std
jmp
add
outsb
xchg
push
hlt
enter
clc
pop
inc
clc
in
es
fadd
clc
mov
or
clc
gs
loope
sbb
add
add
jno
add
clc
into
mov
xchg
pop
mov
pop
xor
cld
ljmp
add
and
add
mov
add
push
jne
or
add
clc
ror
cmp
add
and
mov
aas
test
xchg
inc
add
in
cs
out
aaa
sub
lock
clc
vmread
add
insb
mov
dec
pusha
add
pop
clc
mov
fistps
dec
inc
clc
xchg
jecxz
aaa
dec
mov
xchg
stos
lret
clc
dec
ds
cld
xabort
mov
rcll
lods
sub
add
add
popa
add
leave
out
mov
inc
add
enter
clc
pop
ret
adc
add
push
xor
clc
in
inc
clc
mov
add
add
add
adc
add
add
frstor
add
push
add
lods
inc
clc
mov
clc
xchg
or
mov
add
roll
add
and
add
cmpsb
clc
gs
ljmp
add
adc
add
inc
clc
inc
clc
stc
adc
add
clc
aas
push
stos
jno
add
jle
movsl
clc
sbb
loop
dec
cld
xor
add
add
clc
xchg
jmp
add
mov
aas
xor
add
ds
xor
scas
cmc
or
xor
add
clc
mov
inc
clc
test
jg
mov
pop
mov
add
loopne
or
test
cmp
int
add
jecxz
inc
add
daa
clc
das
pop
cmp
imul
repz
ret
clc
or
sar
sub
sti
push
je
add
jbe
add
insl
test
pop
clc
push
sbb
add
shrb
cs
es
aam
add
test
add
int3
sub
add
mov
mov
clc
sarb
xlat
cwtl
lret
pop
arpl
add
mov
xchg
sbb
shrb
clc
ss
clc
mov
cmpsb
clc
mov
and
push
clc
jne
adc
mov
lods
pop
push
sub
in
dec
jno
add
ja
icebp
xchg
pop
xor
add
icebp
dec
sub
xbegin
arpl
add
stos
lea
std
add
add
lods
mov
clc
scas
xchg
out
ljmp
add
add
aas
pop
or
add
js
lret
es
popf
bound
add
add
add
call
sbb
xor
add
clc
jae
add
scas
imul
repnz
cmpsl
clc
xchg
push
xchg
shl
scas
aad
fcmovu
sub
add
roll
add
add
inc
add
insl
bound
add
jge
clc
sarb
pusha
add
pop
fisubl
mov
add
cmp
add
clc
popa
add
in
hlt
outsl
into
push
add
insl
mov
dec
std
push
sbb
xchg
pop
dec
test
pop
xor
add
add
lea
cmp
clc
mov
insl
add
add
clc
or
sbb
add
adc
add
add
adc
clc
mull
jmp
add
bound
add
mov
lahf
pop
mov
enter
rclb
add
clc
xchg
mov
add
jmp
cmp
test
ret
clc
xor
add
clc
dec
and
mov
dec
addr16
ja
jo
add
add
mov
add
add
mov
add
dec
imul
add
cwtl
repnz
jne
xchg
stc
in
or
fwait
push
add
xchg
lock
and
add
ss
clc
adc
cmp
fsubrs
add
data16
jp
clc
push
clc
test
clc
aas
cwtl
stc
lock
clc
jae
add
mov
outsb
mov
clc
cmp
in
cmp
add
cmp
push
jo
add
sti
mov
lea
repz
lcall
in
ret
clc
mov
loop
mov
sub
add
inc
clc
or
add
std
fists
clc
inc
add
mov
xor
add
inc
clc
sub
push
gs
dec
pushf
sbb
out
jmp
pop
mov
mov
clc
cmp
or
add
and
add
add
pop
push
push
popa
add
cmp
dec
scas
repnz
clc
xor
add
out
popf
repnz
bound
add
js
add
cmp
clc
or
dec
mov
sbb
clc
cli
data16
cmp
out
sahf
and
sub
and
out
cld
negb
clc
push
add
or
clc
lock
add
call
add
xor
push
clc
push
add
dec
add
pop
icebp
mov
add
cmp
pop
sar
pop
xchg
imul
ficoml
cli
sbb
out
leave
aas
loop
icebp
movsl
clc
adc
add
ljmp
clc
leave
into
daa
clc
aam
add
add
mov
and
add
data16
inc
add
and
add
and
clc
xchg
push
lahf
dec
filds
add
mov
pushf
cmp
rorl
xchg
incb
add
shll
cld
dec
mov
cmpsl
clc
in
loope
mov
xor
jbe
incl
push
clc
test
mov
lret
clc
fmull
clc
lods
clc
push
add
xbegin
push
push
out
mov
test
mov
add
sar
clc
add
add
movsl
clc
repnz
xor
ffree
clc
cmp
dec
pop
dec
test
clc
fiaddl
clc
test
xor
add
clc
and
rorl
push
sarl
xchg
mov
jle
dec
aas
fsubl
clc
pop
xor
add
ljmp
add
inc
clc
dec
pop
dec
inc
clc
out
cmp
sub
imul
add
mov
clc
mov
lea
mov
add
add
add
sub
sti
mov
mov
push
jmp
xchg
xbegin
clc
push
add
push
repnz
mov
imul
imull
daa
clc
popa
add
out
dec
jns
sub
clc
aam
dec
jae
add
clc
ror
pop
lahf
lahf
iret
jmp
clc
mov
out
repz
fcmovne
out
popf
xchg
or
add
add
add
inc
clc
aaa
cwtl
ss
pop
lcall
xor
or
or
add
call
sbb
inc
add
jp
add
xchg
and
add
int
out
push
add
add
add
ret
testb
pop
mov
cmp
lahf
sub
and
add
in
pop
clc
loop
sar
lods
pop
mov
add
push
sbb
clc
mov
dec
cmp
add
lret
cmc
pop
dec
mov
xor
sar
xor
add
add
cwtl
negb
clc
jno
add
sub
fcoml
add
in
testl
mov
clc
call
daa
clc
mov
cld
pop
cmpsb
clc
sbb
mov
clc
scas
pusha
add
decb
ret
clc
pop
scas
bound
add
shr
lret
insl
loope
xchg
out
data16
int3
sub
clc
loop
js
cld
fdiv
out
mov
cmpsb
clc
jo
add
sbb
add
add
add
adc
clc
arpl
add
lret
iret
hlt
sub
cld
push
add
add
clc
out
pop
popa
add
jbe
clc
rcl
jmp
inc
clc
adc
inc
clc
popf
cwtl
xbegin
enter
clc
add
add
clc
xlat
mov
add
mov
clc
mov
cli
lods
std
ljmp
mov
mov
add
pop
push
push
add
gs
test
out
xlat
adc
add
fsub
clc
lret
rclb
add
adc
push
cmp
xor
clc
xor
clc
cmp
scas
cmpsl
clc
mov
pop
mull
add
dec
or
add
push
repnz
out
sbb
fwait
or
xor
add
sti
dec
shlb
clc
lret
adc
add
adc
add
clc
fcmovb
clc
inc
clc
adc
dec
jo
add
cld
mov
add
jb
add
sqrtps
add
clc
and
add
cld
xchg
es
xchg
jae
add
clc
hlt
pushf
leave
dec
outsl
pop
pop
or
clc
mov
add
test
outsl
setle
cmpsb
clc
dec
cltd
mov
inc
add
cmp
sub
fs
sub
inc
clc
add
add
add
je
jb
add
or
sbb
jg
jmp
xor
add
fisubrs
push
clc
dec
xor
or
loopne
push
stc
mov
jl
add
setno
dec
test
inc
add
fsts
add
add
add
clc
jl
push
adc
add
std
lahf
push
add
lods
movsb
clc
xor
clc
imul
aad
jge
clc
roll
add
stos
in
pop
mov
cltd
das
inc
add
push
add
dec
or
add
cmp
clc
loopne
pusha
add
lods
mov
mov
clc
movsb
clc
mov
in
dec
inc
clc
pop
mov
es
fistl
sbb
clc
out
inc
clc
je
inc
add
xchg
aaa
hlt
xchg
out
popa
add
push
add
xchg
cmp
clc
aad
inc
clc
inc
clc
and
ret
clc
add
add
add
into
ret
clc
push
data16
and
add
cmpsl
clc
and
add
cmp
add
cli
mov
add
or
loop
pop
mov
or
shr
fcomps
movsb
clc
mov
ret
clc
enter
clc
loop
add
lret
pop
clc
fisttpll
imul
loopne
repz
add
mov
std
inc
clc
mov
cmp
pusha
add
nop
mov
add
in
lret
xchg
add
add
clc
lea
sbb
clc
mov
add
add
clc
stc
pop
clc
jb
add
sbb
push
add
dec
loopne
outsl
and
add
add
pop
jne
jbe
add
adc
scas
into
jnp
adc
add
or
add
inc
add
xor
add
add
loopne
loop
test
add
das
fildl
add
shl
clc
lods
ret
mov
xabort
jmp
insl
dec
sar
outsl
mov
add
data16
test
popf
push
add
stos
mov
pusha
add
push
or
std
es
mov
add
scas
push
daa
clc
sub
clc
jl
xbegin
std
ljmp
clc
mov
xchg
lods
ror
mov
clc
daa
clc
clc
mov
mov
clc
adc
add
out
jbe
mov
mov
pop
lret
add
add
pop
in
jge
popl
add
clc
add
pop
mov
mov
popf
jecxz
adc
clc
xchg
popa
add
out
cltd
aaa
mov
dec
lahf
iret
outsb
mov
repz
aaa
adc
add
mov
mov
clc
jge
and
jae
add
clc
fistpll
xor
add
js
add
xor
add
in
push
das
mov
bound
add
test
into
fstl
add
adc
add
add
inc
add
dec
mov
clc
sub
jnp
cmp
add
mov
clc
clc
jae
add
add
call
clc
scas
sbb
clc
and
add
mov
add
add
add
mov
ss
add
mov
or
insb
jo
add
add
push
add
hlt
pop
pop
clc
cmp
clc
xor
add
clc
jg
pop
clc
andnps
sbb
xchg
jl
xor
add
dec
cwtl
inc
clc
jle
clc
imulb
mov
int
out
fildl
sub
sub
cmp
clc
dec
sub
dec
inc
add
xor
add
sar
lcall
clc
jmp
and
add
frstor
add
and
stos
xor
lret
xor
or
cmp
and
mov
push
lcall
clc
je
clc
and
add
jae
add
add
inc
clc
xchg
mov
mov
lahf
test
aaa
push
add
add
jae
add
push
add
xchg
pop
dec
mov
clc
repz
push
add
int
add
out
pop
imul
mov
clc
mov
or
clc
xor
add
mov
clc
rcll
add
negb
daa
clc
stos
push
add
cmp
xor
add
aas
imul
jbe
int
ja
fildll
sahf
add
add
dec
cmp
insb
jmp
clc
mov
clc
cmp
mov
fisubrl
add
xchg
inc
add
and
add
push
faddl
add
mov
clc
das
jb
add
cmpsl
clc
adc
loop
imul
lods
loop
sbb
clc
gs
cmc
cltd
dec
mov
mov
add
jmp
add
movsl
clc
mov
mov
sbb
cmp
cs
ss
jo
add
ja
clc
repnz
mov
cld
mov
clc
xchg
push
inc
clc
in
mov
clc
stos
push
mov
add
add
clc
inc
clc
sub
sti
and
add
insl
cmpsl
clc
clc
sar
insl
shlb
clc
fnstcw
add
add
add
in
and
add
or
jl
cmp
mov
mov
fisttpl
clc
jae
add
outsb
fadds
xchg
call
jge
or
cwtl
pop
jle
iret
pop
clc
cmpsl
clc
cmp
clc
xchg
pop
fwait
or
clc
push
add
test
test
lods
inc
add
pop
sub
mov
add
add
fistpl
clc
daa
clc
xchg
pop
movsl
clc
outsl
sub
iret
and
clc
xor
add
add
clc
stos
xor
add
in
int3
ret
clc
imul
stos
jg
add
and
add
or
add
int3
lahf
xchg
mov
clc
xchg
mov
add
clc
aad
clc
pop
clc
rorb
clc
testb
xor
add
clc
iret
ret
clc
loope
mov
clc
mov
clc
icebp
adc
add
xbegin
inc
add
jno
add
add
clc
scas
inc
clc
out
jne
clc
add
add
lret
xchg
adc
add
cmc
mov
cmp
fsubrl
mov
aad
cmp
clc
in
rorb
cli
jb
add
and
jae
add
add
xchg
insl
inc
clc
add
sub
clc
std
daa
clc
adc
inc
clc
mov
clc
add
add
inc
clc
jbe
mov
add
fs
sbb
clc
ss
add
mov
insl
test
in
jae
add
add
add
jno
add
clc
cs
iret
xchg
cmp
fcompl
mov
fs
add
add
add
das
xchg
mov
fwait
mov
xchg
cli
pop
into
cmpsl
clc
cmpsl
clc
sbb
push
add
push
cmp
mov
jle
insb
stos
insl
add
int
out
mov
clc
loope
cmp
sub
clc
jp
clc
push
ja
mov
clc
nop
fwait
cmp
sub
clc
sti
mov
es
paddw
sbb
es
out
cld
test
clc
adc
aas
leave
push
popa
add
xor
add
dec
add
add
