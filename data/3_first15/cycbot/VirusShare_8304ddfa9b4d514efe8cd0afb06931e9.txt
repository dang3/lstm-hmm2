push
call
loop
pop
call
loop
mov
loop
call
loop
clc
out
in
in
in
call
loop
mov
in
in
out
in
out
in
out
in
loop
in
in
in
loope
in
loop
in
jecxz
in
call
loop
pusha
jecxz
in
loop
in
call
loop
test
jmp
loop
sub
loop
ja
loop
push
loop
in
call
loop
cmpsb
jecxz
in
call
loop
or
loop
cmp
in
in
jecxz
in
out
in
loop
in
jecxz
in
loope
in
out
in
in
in
in
in
in
in
out
in
loop
in
jecxz
in
call
loop
fwait
in
in
call
loop
in
loop
mov
loop
es
loop
outsb
in
in
call
loop
mul
loop
sbb
loop
popa
in
in
out
in
loop
in
call
loop
jae
loop
and
loop
insb
jecxz
in
loop
in
in
in
jmp
loop
dec
jecxz
in
out
in
jecxz
in
loop
in
jecxz
in
out
in
out
in
out
in
loop
in
in
in
out
in
out
in
out
in
loop
in
loop
in
in
in
out
in
out
in
loop
in
out
in
jmp
loop
loope
in
in
in
in
in
out
in
loop
in
out
in
jecxz
in
in
in
jmp
loop
repnz
in
jecxz
in
out
in
loop
in
jmp
loop
add
loop
arpl
loop
jle
loop
mov
loop
in
loop
mov
loop
ljmp
in
out
in
jecxz
in
in
in
out
in
loop
in
out
in
out
in
out
in
jecxz
in
jmp
loop
in
out
in
loop
in
call
loop
add
loop
aam
loop
pop
loop
in
loop
in
jecxz
in
out
in
jmp
loop
mov
loop
out
loop
mov
loop
in
in
out
in
in
in
jecxz
in
call
loop
lods
loop
in
loop
in
out
in
loop
in
loop
in
in
in
out
in
call
loop
in
in
jecxz
in
call
loop
sti
in
in
call
loop
stos
call
loop
pop
out
in
out
in
in
in
out
in
loop
in
out
in
loop
in
out
in
in
in
in
in
in
in
in
in
call
loop
out
call
loop
sti
loop
in
in
in
in
in
jecxz
in
in
in
jecxz
in
loop
in
loop
in
in
in
out
in
out
in
out
in
call
loop
shr
loop
and
in
out
in
loop
in
in
in
call
loop
fndisi(8087
loop
fnclex
loop
push
loop
in
loop
in
out
in
jecxz
in
loope
in
out
in
out
in
out
in
jmp
loop
int
loop
cltd
jecxz
in
out
in
loop
in
jecxz
in
loop
in
jecxz
in
in
in
loope
in
jecxz
in
out
in
in
in
in
in
call
loop
loop
loop
cmp
loop
imul
loop
addr16
in
call
loop
fsubr
loop
add
loop
loop
or
jmp
loop
shr
in
in
in
loope
in
call
loop
xor
loop
jl
loop
cmp
loop
popf
loop
in
jecxz
in
jecxz
in
in
in
call
loop
lods
loope
in
in
in
out
in
out
in
out
in
in
in
in
in
in
in
out
in
in
in
call
loop
stos
out
in
call
loop
xchg
call
loop
xor
loope
in
jecxz
in
in
in
out
in
in
in
out
in
in
in
call
loop
cmp
loop
mov
in
in
loop
in
in
in
in
in
jmp
loop
cmp
loop
push
in
in
jecxz
in
loope
in
out
in
loope
in
loope
in
out
in
out
in
jecxz
in
loop
in
in
in
jecxz
in
loope
in
jmp
loop
xchg
call
loop
scas
loop
in
in
in
in
in
out
in
jmp
loop
dec
jmp
loop
out
in
out
in
jmp
loop
scas
in
in
in
in
jmp
loop
stos
out
in
loop
in
in
in
call
loop
fucom
loop
mov
out
in
out
in
out
in
loope
in
out
in
call
loop
jae
loop
je
loop
push
call
loop
xchg
loop
insb
in
in
loop
in
loop
in
loope
in
jecxz
in
out
in
loop
in
in
in
call
loop
jmp
loop
mov
loop
in
jecxz
in
loop
in
out
in
out
in
loop
in
loop
in
in
in
in
in
in
in
loop
in
loop
in
in
in
out
in
jmp
loop
or
loop
mov
loop
and
loop
cltd
in
in
out
in
out
in
call
loop
push
loop
in
call
loop
inc
jecxz
in
loop
in
call
loop
cmp
loop
mov
in
in
loope
in
out
in
loop
in
call
loop
cmp
out
in
call
loop
cmpsl
call
loop
shl
loop
out
in
in
jecxz
in
in
in
loop
in
out
in
in
in
out
in
out
in
in
in
in
in
loop
in
jecxz
in
jecxz
in
call
loop
insb
in
in
out
in
in
in
loope
in
call
loop
sbb
loop
mov
jecxz
in
jecxz
in
jecxz
in
call
loop
xchg
loope
in
in
in
in
in
loope
in
out
in
jmp
loop
ret
jecxz
in
in
in
loop
in
call
loop
aad
loop
sbb
loop
or
loop
imul
loop
fucom
loop
cmp
loop
shl
in
out
in
call
loop
xchg
loop
add
loop
clc
in
in
loop
in
loop
in
in
in
loope
in
loop
in
loop
in
jecxz
in
loope
in
jecxz
in
out
in
call
loop
outsb
jecxz
in
out
in
loop
in
jecxz
in
loope
in
call
loop
pop
call
loop
mov
loop
lods
in
in
loop
in
in
in
out
in
jecxz
in
in
in
loop
in
call
loop
push
loop
in
call
loop
jae
loop
in
in
in
call
loop
in
loop
fsubp
loop
sub
loope
in
call
loop
dec
in
in
out
in
in
in
call
loop
inc
jecxz
in
loope
in
in
in
jecxz
in
call
loop
dec
out
in
out
in
call
loop
ljmp
in
in
in
loop
in
jecxz
in
loop
in
call
loop
imul
in
loop
in
out
in
jmp
loop
es
loop
mov
loop
push
jmp
loop
push
in
in
in
in
out
in
jecxz
in
in
in
in
in
jecxz
in
out
in
in
in
jecxz
in
loop
in
in
in
out
in
out
in
in
in
out
in
out
in
loop
in
jecxz
in
out
in
in
in
jecxz
in
jecxz
in
in
in
out
in
loop
in
loop
in
in
in
call
loop
pop
in
in
in
in
loope
in
jecxz
in
in
in
jecxz
in
loope
in
in
in
in
in
loope
in
call
loop
fsub
loop
mov
jecxz
in
out
in
in
in
loope
in
out
in
loope
in
jmp
loop
mov
loop
inc
in
in
in
in
call
loop
dec
in
in
jecxz
in
out
in
jecxz
in
loope
in
out
in
jmp
loop
sbb
loop
and
loop
pop
jmp
loop
pop
loope
in
loope
in
out
in
jecxz
in
out
in
out
in
in
in
call
loop
jb
loop
ja
loop
dec
out
in
loop
in
out
in
jecxz
in
out
in
call
loop
aad
loop
in
out
in
jecxz
in
jecxz
in
call
loop
dec
in
in
in
in
in
in
jecxz
in
out
in
loope
in
out
in
jmp
loop
loope
loop
mov
loop
je
loop
mov
out
in
call
loop
dec
loop
in
in
in
in
in
out
in
out
in
in
in
out
in
loope
in
in
in
in
in
in
in
jecxz
in
call
loop
adc
loop
sbb
loop
ss
in
out
in
jecxz
in
in
in
in
in
in
in
call
loop
pusha
jecxz
in
in
in
jecxz
in
loop
in
out
in
in
in
loop
in
loop
in
call
loop
and
loop
sbb
loop
push
jecxz
in
jecxz
in
loop
in
loop
in
out
in
loope
in
jecxz
in
loop
in
loop
in
call
loop
in
loop
jns
loop
xchg
out
in
call
loop
jno
loop
repz
in
jmp
loop
lahf
loop
in
out
in
jecxz
in
in
in
loop
in
jecxz
in
out
in
jecxz
in
jmp
loop
popf
jecxz
in
call
loop
ret
in
jecxz
in
out
in
loope
in
jecxz
in
jecxz
in
in
in
loop
in
call
loop
pop
jmp
loop
push
in
in
in
in
call
loop
and
loop
pop
out
in
loope
in
jecxz
in
call
loop
sub
loop
mov
loop
xchg
in
in
jecxz
in
in
in
out
in
out
in
call
loop
xchg
out
in
out
in
call
loop
dec
call
loop
out
in
jecxz
in
in
in
out
in
in
in
loope
in
out
in
out
in
out
in
jmp
loop
mov
loope
in
loop
in
in
in
in
in
jecxz
in
loop
in
in
in
out
in
jecxz
in
call
loop
mov
in
in
out
in
jecxz
in
in
in
out
in
out
in
in
in
jecxz
in
loope
in
jmp
loop
mov
in
in
loop
in
loop
in
call
loop
and
in
in
in
out
in
call
loop
cs
loop
inc
loop
in
jecxz
in
out
in
in
in
in
in
call
loop
aad
loop
and
in
in
in
call
loop
iret
in
in
jecxz
in
loop
in
out
in
in
in
out
in
jecxz
in
out
in
loop
in
loope
in
loop
in
out
in
jecxz
in
in
in
in
in
call
loop
xchg
in
in
out
in
loop
in
loop
in
out
in
out
in
call
loop
repnz
in
out
in
out
in
in
in
out
in
out
in
out
in
out
in
out
in
jecxz
in
out
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
loop
in
call
loop
adc
loop
out
loop
leave
loope
in
out
in
jecxz
in
loope
in
loope
in
in
in
out
in
out
in
call
loop
xchg
loop
ret
in
in
jecxz
in
jecxz
in
call
loop
cmpsl
in
in
in
in
jecxz
in
loop
in
in
in
loop
in
out
in
loop
in
jecxz
in
in
in
call
loop
pop
in
in
loope
in
in
in
jmp
loop
adc
loop
leave
out
in
loop
in
call
loop
popa
in
in
out
in
loop
in
in
in
call
loop
nop
in
in
jecxz
in
loop
in
in
in
out
in
out
in
out
in
jecxz
in
out
in
out
in
jmp
loop
std
loope
in
loop
in
in
in
loope
in
out
in
in
in
jmp
loop
ds
loop
pushf
in
in
out
in
out
in
in
in
in
in
jecxz
in
call
loop
aaa
jecxz
in
loop
in
out
in
in
in
in
in
jmp
loop
xchg
loop
in
jmp
loop
xchg
in
in
out
in
in
in
out
in
out
in
call
loop
lods
call
loop
call
loop
and
in
in
in
jecxz
in
out
in
call
loop
loop
in
call
loop
shl
loop
gs
in
in
in
in
in
loop
in
call
loop
ljmp
in
in
in
in
in
in
in
jecxz
in
call
loop
cmpsb
in
in
out
in
in
in
call
loop
mov
loop
inc
in
in
jecxz
in
call
loop
mov
loop
test
loop
sub
loop
loop
das
call
loop
jle
loop
mov
loop
mov
loop
scas
loope
in
jecxz
in
out
in
in
in
jecxz
in
out
in
call
loop
and
loop
insb
loop
in
loope
in
in
in
loop
in
out
in
jecxz
in
out
in
in
in
out
in
out
in
in
in
loop
in
out
in
call
loop
int3
loope
in
loop
in
loope
in
in
in
loope
in
out
in
jecxz
in
out
in
call
loop
xchg
in
in
loop
in
out
in
in
in
call
loop
clc
jecxz
in
jecxz
in
in
in
in
in
out
in
jecxz
in
call
loop
inc
in
in
loop
in
loop
in
loope
in
jecxz
in
out
in
out
in
jmp
loop
loop
loop
xchg
loop
test
loop
jg
loop
popf
loope
in
jmp
loop
fwait
out
in
in
in
jecxz
in
out
in
jecxz
in
in
in
loope
in
loop
in
jecxz
in
in
in
in
in
in
in
call
loop
es
in
in
in
call
loop
pop
loop
in
out
in
loope
in
in
in
loope
in
in
in
out
in
loope
in
out
in
loop
in
in
in
call
loop
xchg
jecxz
in
in
in
out
in
in
in
loop
in
in
in
out
in
jecxz
in
out
in
in
in
loop
in
out
in
call
loop
xchg
loope
in
jecxz
in
in
in
loop
in
loop
in
call
loop
mov
in
in
jecxz
in
call
loop
loop
loop
mul
loop
fucomp
loop
insl
jecxz
in
call
loop
in
in
in
call
loop
adc
loop
call
out
in
in
in
out
in
loop
in
out
in
out
in
call
loop
mul
loop
stc
out
in
out
in
in
in
loope
in
call
loop
inc
out
in
out
in
loope
in
out
in
loope
in
loope
in
loop
in
in
in
in
in
out
in
in
in
in
in
loope
in
call
loop
pop
loope
in
loop
in
jecxz
in
call
loop
push
in
in
call
loop
data16
in
call
loop
in
loop
xchg
loop
test
in
in
out
in
in
in
call
loop
aam
loop
xor
loop
mov
out
in
jecxz
in
loope
in
call
loop
mov
loop
mov
loop
insl
jecxz
in
jmp
loop
into
in
in
out
in
in
in
loope
in
out
in
in
in
out
in
out
in
in
in
call
loop
sbb
loop
xchg
loop
lret
in
out
in
out
in
jecxz
in
in
in
in
in
in
in
out
in
loop
in
call
loop
into
loope
in
call
loop
aaa
out
in
jmp
loop
fsub
loop
mov
loope
in
in
in
in
in
out
in
loope
in
loope
in
loop
in
out
in
out
in
jecxz
in
out
in
loope
in
call
loop
sbb
loop
daa
jecxz
in
jecxz
in
out
in
loop
in
jecxz
in
jecxz
in
jecxz
in
loop
in
loop
in
out
in
out
in
in
in
jecxz
in
in
in
jecxz
in
out
in
loope
in
loop
in
in
in
call
loop
loop
in
loop
in
loope
in
jecxz
in
out
in
in
in
jmp
loop
inc
out
in
jecxz
in
in
in
out
in
jecxz
in
loope
in
out
in
in
in
out
in
out
in
loop
in
in
in
out
in
call
loop
jo
loop
into
in
in
out
in
out
in
out
in
out
in
out
in
out
in
jecxz
in
out
in
in
in
in
in
loope
in
out
in
jecxz
in
in
in
out
in
in
in
in
in
in
in
out
in
in
in
call
loop
das
out
in
loope
in
call
loop
sub
out
in
call
loop
mov
loop
pop
jecxz
in
out
in
call
loop
dec
jecxz
in
jecxz
in
in
in
loop
in
in
in
jecxz
in
out
in
jmp
loop
sbb
loop
and
loop
jl
loop
pusha
jecxz
in
in
in
out
in
loope
in
loop
in
jecxz
in
out
in
jmp
loop
ja
loop
clc
out
in
loope
in
call
loop
fsub
loop
ret
in
in
out
in
in
in
loope
in
in
in
in
in
in
in
loop
in
loope
in
loop
in
loope
in
in
in
call
loop
jp
loop
add
loop
loopne
loop
adc
in
in
call
loop
ds
loop
in
in
in
out
in
loop
in
in
in
out
in
out
in
call
loop
pop
loope
in
loope
in
call
loop
out
in
loop
in
out
in
call
loop
stos
jecxz
in
in
in
call
loop
cmp
loop
push
in
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
jecxz
in
out
in
loope
in
in
in
jecxz
in
in
in
call
loop
jmp
loop
in
in
in
jecxz
in
out
in
out
in
loop
in
out
in
out
in
jmp
loop
push
loop
in
loop
in
out
in
call
loop
cmpsb
loop
in
out
in
out
in
loope
in
loope
in
out
in
jmp
loop
and
loop
inc
in
in
call
loop
test
loop
pop
in
in
in
in
call
loop
push
jmp
loop
mov
out
in
in
in
loop
in
in
in
out
in
in
in
call
loop
iret
loop
in
call
loop
and
loope
in
in
in
in
in
in
in
in
in
call
loop
cmp
loop
out
loop
pop
in
in
loop
in
in
in
in
in
call
loop
xor
loop
adc
loop
mov
loop
push
out
in
in
in
loop
in
in
in
in
in
jecxz
in
out
in
out
in
loope
in
jecxz
in
in
in
in
in
out
in
call
loop
aam
loop
jb
loop
jbe
loop
and
loop
xchg
in
in
jecxz
in
call
loop
and
in
in
in
loop
in
jecxz
in
jecxz
in
in
in
call
loop
jecxz
in
in
in
loop
in
in
in
out
in
loop
in
loop
in
jecxz
in
call
loop
into
jecxz
in
call
loop
in
in
jecxz
in
loope
in
in
in
in
in
out
in
loop
in
out
in
out
in
in
in
loope
in
pop
stos
cmpsb
add
ljmp
repnz
cld
xchg
dec
mov
test
nop
daa
add
addb
hlt
cmpsb
add
jmp
loope
loopne
xchg
inc
add
out
mov
mov
or
pop
pop
dec
cmp
add
xor
in
push
add
push
add
add
imul
add
add
pop
stos
js
add
call
add
mov
dec
pop
add
fdivs
daa
add
dec
jle
fisubs
add
sub
add
dec
dec
stos
push
scas
popf
outsl
ret
xor
incl
add
add
filds
call
jbe
inc
add
stos
insb
lods
leave
push
push
sahf
in
mov
push
add
add
adc
lcall
add
or
push
xchg
cld
xor
lcall
sarl
fidivrl
fiadds
add
add
dec
stos
cmp
push
add
cmp
fwait
mov
ds
add
add
dec
cmc
hlt
movl
add
add
and
lcall
movb
add
inc
add
xchg
aam
clc
mov
sub
lods
addl
jnp
adc
call
or
add
dec
mov
call
pop
add
repnz
push
add
xchg
and
push
shll
and
jmp
inc
add
test
or
fiaddl
sbb
insb
xchg
add
decl
add
and
jmp
add
add
outsb
mov
in
neg
lods
pop
jae
inc
add
dec
enter
pop
stos
or
sub
jecxz
fisubrs
add
addb
in
jo
call
decl
add
add
out
mull
dec
lds
add
mov
add
lods
mov
insb
jecxz
sbb
add
mov
aaa
stos
push
add
fadd
add
add
mov
push
cmp
mov
jae
lcall
add
sbb
ss
xchg
pop
jge
je
add
mov
add
pop
xchg
sub
pop
pop
data16
add
mov
loopne
add
cli
and
pusha
add
roll
jae
push
jns
xchg
cmp
int3
and
decl
xchg
dec
mov
fidivl
ljmp
sub
mov
add
call
fstp
test
pushf
je
adc
pusha
add
add
call
or
adc
lds
clc
fdiv
mov
in
mov
mov
add
fisttpl
hlt
or
mov
or
add
add
jge
add
jg
out
arpl
jmp
fisubrl
aad
repz
jmp
add
sbb
roll
or
add
mov
and
call
stc
bound
push
cmc
dec
pushf
loopne
out
jbe
outsb
push
add
add
pop
or
addl
dec
cmp
add
cmc
sub
sub
add
movl
ffree
add
pushl
add
jb
jmp
adc
add
or
in
test
call
sub
lea
jnp
ret
add
jo
ljmp
mov
add
jp
out
xchg
cmp
add
add
les
rcrb
mulb
shrb
add
push
std
mov
add
addb
lcall
jb
call
sbb
leave
add
lcall
mov
add
lods
jb
jmp
ds
movl
xor
or
stos
cli
push
mov
sub
push
push
push
push
push
call
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
je
ret
jmp
add
add
add
add
rolb
cli
out
fidivrs
mov
add
dec
sub
cmp
push
outsb
enter
sbb
inc
add
add
ljmp
mov
jge
fdivr
loopne
scas
fadd
add
add
adc
jmp
add
or
and
lcall
add
add
add
mov
add
add
icebp
imul
lcall
mov
mov
fwait
jp
popf
mov
aaa
frstor
mov
add
scas
jae
fbld
lret
repnz
addl
repnz
ljmp
push
add
test
jmp
incb
jmp
add
jmp
add
add
add
add
add
popf
loopne
xor
add
in
inc
add
inc
add
mov
lcall
mov
ret
fisubs
xchg
adc
lcall
xor
add
jecxz
sbb
addb
add
fldcw
notl
sbb
sub
add
add
mov
lret
or
add
add
push
add
movl
and
dec
push
mov
add
lods
outsb
xchg
test
pop
pop
add
lcall
push
adc
pushl
add
gs
mov
mov
add
add
neg
les
lods
dec
data16
incl
jb
ljmp
jecxz
sbb
add
jmp
add
add
jecxz
pop
push
out
adc
jmp
addb
add
test
sbb
icebp
es
icebp
mov
decl
cli
pop
les
movsl
add
sbb
lods
popf
out
fsub
add
decl
or
add
add
bound
ljmp
test
imul
add
lcall
fistpll
push
mov
dec
call
add
and
cmp
xchg
dec
movsb
add
add
mov
add
insb
out
std
sub
inc
add
pop
jno
inc
add
xchg
dec
mov
int
test
aas
aad
cmp
jmp
es
lock
cmp
add
dec
sbb
add
dec
in
add
incl
add
bound
jmp
add
jbe
ret
dec
ss
mov
add
add
sti
mov
movsb
add
and
dec
rclb
xor
add
incl
pushl
add
icebp
sub
cmp
mov
scas
sbb
push
sub
add
cmp
decl
add
arpl
pushl
jmp
jnp
xchg
cld
call
lcall
push
add
jle
jno
incb
lahf
pop
dec
fbstp
decl
add
jne
add
add
dec
sub
mov
push
loope
hlt
test
mov
or
mov
add
add
cmp
add
pop
addb
adc
ljmp
add
ljmp
add
add
lret
add
shlb
mov
add
ret
add
add
fldenv
decl
mov
push
add
out
jno
lcall
hlt
adc
lcall
add
mov
adc
decl
in
jl
cwtl
es
xchg
jg
push
add
pop
rolb
add
or
cmp
adc
sub
loop
insb
ret
add
ds
movsb
add
int
roll
xor
fsin
pushf
das
sbb
add
pop
push
add
sub
add
rclb
adc
ljmp
fld
add
add
add
add
imul
push
scas
sub
je
pop
fnstenv
nop
dec
aad
in
inc
add
fcomp
loop
das
cmp
add
ret
add
pop
rcrb
add
push
hlt
out
cmp
add
fisubrs
nop
repnz
insb
roll
mov
xor
call
sbb
in
fcompl
enter
js
add
add
sbb
add
add
add
pushl
mov
mov
cmp
xchg
or
imul
sbb
stos
xchg
popa
add
lods
lcall
test
addb
and
mov
int3
scas
add
clc
add
ljmp
addb
enter
pop
add
adc
jmp
rcll
add
xor
pushl
lea
incl
add
imull
add
add
js
xor
dec
push
add
icebp
daa
add
add
popf
shr
add
fildll
add
out
pop
mov
cmp
cs
mov
add
mov
add
add
add
lock
jmp
ds
mov
cmpsb
add
add
mov
pop
push
sub
rolb
flds
add
ror
rclb
add
add
add
outsb
stc
sub
and
scas
and
ljmp
add
out
pop
push
cltd
movsb
add
sub
mov
add
hlt
jnp
add
jmp
add
leave
dec
mov
pop
and
incl
data16
nop
adc
jmp
add
clc
leave
popf
loope
cmp
test
xchg
mov
or
add
cmp
add
pop
push
mov
mov
and
out
into
in
cmpsl
add
add
xchg
bound
mov
add
pop
popl
add
jle
add
cmp
mov
sbb
inc
add
add
loopne
push
add
ret
add
add
mov
jle
add
or
js
add
repz
decl
add
xchg
jno
ljmp
add
add
or
jmp
add
mov
into
lock
jae
js
mov
fcompl
test
jns
xchg
js
add
push
add
movl
add
lock
add
hlt
stos
add
ljmp
out
dec
push
roll
in
lahf
std
xchg
pop
notl
add
add
add
jle
add
movb
jbe
add
inc
add
add
xchg
sbb
add
lret
or
add
add
pusha
add
push
xlat
out
jmp
mov
add
push
mov
add
out
lock
pop
add
mov
add
push
add
sahf
cmpsl
add
mov
sub
bound
mov
icebp
into
aas
popa
add
lds
add
ljmp
or
add
mov
or
decl
out
les
pop
xchg
push
add
pusha
add
mov
add
mov
add
sub
add
lods
cmp
mov
add
mov
scas
and
call
sbb
bound
decl
pop
sub
ja
pop
cltd
arpl
jmp
add
sbb
jb
lcall
fldl
add
jl
add
add
lcall
xor
ficoms
addl
or
add
add
xchg
loop
add
pushl
add
cwtl
mov
mov
scas
push
add
sub
stos
cmp
inc
add
fimuls
arpl
ljmp
or
cmpsb
add
ret
add
loop
mov
int
jo
decl
add
add
inc
add
addb
add
add
incl
add
lcall
and
lcall
cwtl
jmp
ror
cmc
push
add
fldl
push
add
in
call
inc
add
and
add
aad
in
or
jne
add
scas
inc
add
sub
xlat
into
loope
movsl
add
sbb
incl
loopne
les
aas
fs
std
xchg
xchg
dec
scas
fcmovu
add
call
loop
stc
push
xchg
jmp
mov
cmp
outsl
in
stos
inc
add
xor
pop
sub
test
std
jns
dec
push
loop
loopne
sub
add
mov
dec
or
add
push
adc
decl
sbb
lcall
roll
add
adc
lcall
add
popa
add
ret
add
cmpsb
add
addb
add
out
jo
call
push
shl
xlat
testb
cmc
roll
pop
insl
add
cmp
add
push
adc
ljmp
inc
add
mov
add
add
fwait
call
add
and
dec
xchg
fwait
mov
leave
xor
ljmp
add
sti
pop
add
add
jnp
cmc
out
mov
jae
pushl
add
out
jmp
mov
pushl
add
push
rolb
xor
add
hlt
repz
add
cld
hlt
test
mov
add
loopne
ja
add
add
icebp
xor
mov
dec
sbb
addb
pop
jo
dec
ss
scas
ret
add
add
and
jmp
cmc
out
fnstenv
ja
pop
dec
pushf
mov
push
addl
movb
pop
in
in
push
test
movb
mov
add
add
or
or
fisubrs
add
out
lcall
lret
and
sbb
xchg
repnz
cs
dec
push
add
add
or
add
xlat
loop
add
mov
lods
push
imul
pushl
in
imul
mov
loope
in
clc
ja
popl
enter
pop
add
dec
pop
push
js
or
add
add
call
decl
add
add
and
mov
add
incb
fldenv
add
dec
xlat
enter
pusha
add
into
jecxz
pop
mov
rcl
stc
push
out
jle
mov
jge
in
add
ljmp
mov
jbe
jne
call
add
das
mov
dec
rorl
xor
ljmp
gs
add
add
cmp
cmpsb
add
add
roll
cmp
add
add
mov
adc
decl
jo
cmp
out
inc
add
movl
add
mov
movl
add
pop
xchg
nop
adc
call
lods
adc
decl
and
ljmp
add
add
cmp
push
add
lahf
mov
jmp
add
add
ja
insl
mov
add
add
decl
jp
mov
add
neg
pop
add
mov
add
dec
fs
popa
add
fsts
add
cmpsb
add
ja
pop
addb
add
bound
incl
call
add
sub
lret
addl
call
arpl
fistps
test
push
rorb
jae
lcall
add
les
sbb
loop
inc
add
xchg
stos
sbb
pmaxub
pushf
push
dec
enter
jle
jb
call
jmp
ljmp
cmp
add
mov
add
pop
mov
add
lahf
in
inc
add
les
repz
xchg
sub
lods
add
ljmp
cmpsl
add
call
roll
in
lret
push
add
xchg
add
jmp
add
xchg
push
roll
or
movsb
add
call
add
push
sub
shrb
aam
cld
ret
add
gs
or
add
add
stc
and
call
add
out
add
ljmp
add
arpl
inc
add
add
test
pushf
fimull
and
lcall
xchg
ret
add
pop
add
add
jmp
jo
ljmp
xor
add
sub
push
pop
imul
or
sbb
add
stc
fidivrs
out
insb
mov
nop
sub
stos
sub
add
adc
decl
das
or
fisubrl
add
xchg
stc
mov
add
ljmp
fwait
pop
movb
mov
push
mov
jb
dec
pop
scas
rorl
add
add
add
outsl
in
ficoms
add
and
add
mov
add
mov
dec
gs
or
push
or
jbe
sarl
rolb
lahf
loop
sbb
add
xchg
lds
int
xor
incl
inc
add
add
movsl
add
push
cs
std
aaa
daa
add
js
add
cwtl
push
add
test
out
dec
pop
out
lods
mov
iret
inc
add
cmp
add
stos
imull
pop
and
pushl
add
mov
add
push
repnz
add
xor
incl
mov
jle
add
add
mov
dec
pop
jns
clc
movsb
add
mov
flds
add
aas
mov
sub
jp
and
add
add
mov
icebp
mov
ljmp
fdivrs
ffree
add
mov
jo
cmp
imul
pop
mov
add
jecxz
inc
add
add
xchg
call
add
fwait
sbb
mov
add
xor
addb
cld
xlat
ja
jecxz
xlat
sahf
hlt
add
call
xchg
bound
jg
enter
add
incl
inc
add
sbb
call
jg
add
cmp
and
jmp
stos
inc
add
add
mov
data16
add
call
mov
cmp
mov
and
incl
add
test
fcompl
inc
add
incl
push
stos
or
xchg
add
test
mov
inc
add
std
sub
fwait
out
mov
in
inc
add
dec
cmp
add
mov
add
addl
jmp
lds
insb
cwtl
pop
mov
add
incl
les
and
rolb
add
jle
add
and
dec
movl
cld
in
and
les
and
jmp
incl
jmp
test
pop
mov
ss
add
test
push
mov
je
and
lret
mov
add
add
mov
movsl
add
mov
mov
add
or
add
fcompl
add
test
lods
addb
add
out
in
bound
pushl
incl
push
xlat
mov
addb
xor
inc
add
call
push
or
pop
cmc
iret
sub
daa
add
call
add
cmp
add
lcall
inc
add
lock
add
out
jb
lcall
or
pushl
add
jecxz
lock
cmp
cs
and
mov
jp
outsb
jg
and
cmp
add
mov
add
dec
or
add
mov
add
dec
dec
in
das
pop
lret
lods
js
add
cmpsl
add
add
dec
mov
add
repz
sub
add
rorb
add
in
adc
fcmove
cmpsl
add
fcompl
cmp
add
mov
inc
add
out
jg
out
frstor
jl
cltd
hlt
and
ljmp
sbb
mov
scas
fwait
dec
scas
in
xchg
mov
push
lret
inc
add
mov
inc
add
aam
mov
push
add
sub
iret
divb
push
sbb
ret
add
jecxz
incl
decl
add
fs
add
add
mov
into
sub
or
pop
push
cmp
mov
jl
push
pop
cmp
ja
inc
add
pushl
js
add
adc
dec
jnp
roll
ljmp
outsl
iret
xchg
jo
dec
jl
add
daa
add
jge
bnd
lcall
adc
pushl
add
add
jmp
incl
add
add
pop
inc
add
mov
add
roll
jmp
lcall
int
jbe
add
sub
add
mov
lret
roll
add
push
add
mov
dec
pop
mov
sahf
or
mov
add
add
cs
add
add
lcall
pop
xchg
les
enter
mov
cmp
inc
add
jns
add
arpl
jl
mov
pop
enter
mov
add
push
xor
add
outsb
cmp
stos
jle
mov
cmp
sbb
adc
pushl
add
and
jmp
add
push
add
inc
add
jb
inc
add
mov
dec
outsb
out
and
shlb
add
imul
add
lds
and
lcall
arpl
pushl
add
mov
push
fsubrs
icebp
or
jge
add
add
sub
pop
jp
add
add
fsub
add
add
mov
ss
add
add
sub
mov
add
sbb
int3
mov
cmp
add
add
xor
pushl
loope
mov
mov
push
jge
aam
sbb
push
testl
pop
add
add
je
dec
repz
jp
xchg
xchg
pop
xchg
les
pop
lds
sahf
pop
jle
adc
decl
xchg
xchg
shlb
ficomps
scas
lea
add
je
adc
push
add
aad
call
add
decl
in
jo
jmp
add
add
in
das
xchg
push
xor
das
sbb
dec
jnp
lcall
add
xor
pushl
add
sbb
test
or
add
add
xor
add
test
add
cwtl
add
pop
inc
add
movsb
add
add
add
mov
lcall
add
lea
push
add
adc
call
addl
xlat
jg
pop
jnp
add
and
push
jmp
pusha
add
and
push
test
insl
and
fistpl
jb
cld
sub
push
add
inc
add
add
sti
sbb
add
add
call
out
jnp
stos
into
popf
jl
je
add
mov
add
sbb
inc
add
sbb
decl
ffree
add
jne
push
cmc
sbb
or
add
pop
add
and
pop
imul
test
add
inc
add
add
scas
inc
add
fwait
movsl
add
add
add
add
add
bound
inc
add
jp
add
data16
push
mov
pushl
xlat
and
jmp
add
add
cmp
mov
add
add
aas
ret
mov
and
call
mulb
pushl
jae
inc
add
call
dec
lds
fdivr
or
inc
add
inc
add
cmp
stc
inc
add
out
push
add
add
add
add
add
add
jmp
add
dec
lret
or
stos
cmp
push
pop
mov
clc
dec
into
js
add
jmp
add
fdivr
ret
add
fnsave
add
nop
cmpsl
add
decl
mov
add
std
mov
add
divl
add
ljmp
push
jbe
aaa
inc
add
pop
inc
add
lds
movsl
add
add
lcall
add
test
inc
add
push
add
dec
inc
add
aad
cmpsb
add
setae
sub
add
add
add
sub
sahf
movl
imul
movb
add
shrl
xchg
fstl
add
call
push
lods
pop
push
push
xor
call
add
mov
rcll
dec
lea
add
push
add
sahf
mov
fdivrp
xchg
or
int3
dec
mov
add
sbb
add
roll
add
into
clc
adc
fadd
add
ds
xor
mov
push
nop
roll
add
sub
aaa
cwtl
out
mov
imul
cmp
add
popf
xlat
push
adc
lcall
sbb
xchg
bound
jmp
add
push
pop
cld
out
scas
mov
add
mov
pop
stos
inc
add
mov
loop
adc
decl
add
shlb
adc
addb
xchg
sbb
add
sub
mov
lcall
jo
pushl
add
inc
add
loop
push
add
sbb
add
and
shrl
cli
sbb
jmp
push
cmp
mov
imul
sbb
imull
dec
nop
fisubrl
mov
add
jmp
add
pop
out
rolb
push
ret
add
je
push
jecxz
mov
imul
std
inc
add
mov
out
cli
movsb
add
push
mov
sbb
push
and
fscale
aas
pop
add
ljmp
adc
add
in
cmp
add
mov
loop
loope
dec
xchg
imul
sub
add
xor
add
mov
fiadds
cmp
inc
add
mov
add
xchg
xchg
sub
movb
rcpps
lcall
in
or
add
push
add
add
add
xchg
and
lcall
add
incl
shrb
mov
add
call
addl
adc
add
test
jne
jl
icebp
nop
int
add
sbb
adc
add
add
add
cs
popf
mov
repnz
add
cltd
aam
add
xor
lcall
push
add
add
add
jnp
mov
out
leave
clc
or
sub
ljmp
nop
add
push
add
aam
add
add
add
mov
add
cmp
add
jecxz
ljmp
add
cmp
neg
or
shlb
add
cli
out
ret
mov
add
fbld
mov
cmp
add
xor
xchg
pop
push
add
push
add
mov
add
add
nop
sbb
in
inc
add
inc
add
pushl
push
xor
mov
add
pushl
add
xchg
stos
push
mov
mov
add
add
ds
add
decl
add
testb
incl
add
jae
incl
shl
pop
add
rep
add
add
add
add
jecxz
mov
add
ljmp
add
push
add
or
dec
movsl
add
out
out
lcall
adc
jmp
jg
add
aas
or
add
push
or
jle
add
sub
mov
inc
add
lret
add
adc
sti
ds
sbb
jo
call
decl
add
ljmp
dec
mov
incl
add
jl
dec
stos
incl
inc
add
nop
push
inc
add
fisttpll
cld
sub
lret
add
adc
add
pop
add
decl
mov
add
dec
dec
addl
add
add
add
cmp
jb
jmp
mov
dec
xor
add
add
aaa
jle
add
mov
cmp
add
xor
mov
outsb
pushf
jp
push
add
jnp
lods
out
push
add
insl
cs
ljmp
pushf
aas
in
sarl
fisubrs
adc
jmp
aas
out
cmp
nop
fwait
pop
add
aas
repz
add
in
jne
in
push
xchg
ret
add
mov
jecxz
push
add
jp
jo
ljmp
add
push
dec
xchg
push
pop
push
mov
xchg
pop
xchg
lock
add
out
inc
add
in
push
add
shlb
imul
arpl
pushl
call
add
loopne
test
push
add
cmp
xchg
sbb
mov
mov
stos
lods
popf
loopne
lret
movsb
add
mov
pop
lcall
jbe
insl
mov
add
adc
jmp
add
lds
xchg
push
add
aaa
or
jmp
ja
sbb
push
add
dec
mov
out
addb
scas
push
sbb
addb
test
mov
dec
sbb
test
push
inc
add
jne
rolb
add
inc
add
add
call
roll
add
add
das
pop
sti
pop
idivl
xor
lcall
decl
jmp
push
mov
fcomp
repnz
cmp
ljmp
loop
aam
add
xchg
sub
popa
add
adc
decl
add
cmc
cmp
call
jmp
dec
mov
add
dec
adc
mov
push
add
jecxz
clc
loop
jp
fnstsw
add
cmp
add
ss
jnp
or
outsb
add
lcall
aaa
inc
add
into
sbb
add
mov
push
add
add
addb
mov
add
push
sbb
pusha
add
adc
call
add
adc
fldt
add
and
jmp
add
jmp
add
pop
pop
adc
ljmp
or
add
add
mov
jle
test
getsec
pop
movl
add
xor
dec
mov
add
jge
dec
xlat
test
add
add
decl
imul
push
add
sbb
add
inc
add
addb
dec
dec
mov
add
ss
dec
ljmp
test
jae
incl
add
push
cmp
add
jp
add
add
loop
xchg
cld
mov
mov
das
scas
addb
and
call
jp
imul
add
sti
inc
add
push
add
push
arpl
ljmp
addb
repz
and
xor
std
sarb
pushl
add
push
or
inc
add
mov
icebp
stos
xlat
pop
in
outsb
push
add
addl
call
add
stc
xchg
sub
add
inc
add
rolb
mov
add
mov
fnstenv
sbb
add
hlt
xor
dec
cmp
add
xor
call
mov
xor
decl
add
decl
setp
fwait
iret
jp
add
add
aas
jecxz
inc
add
mov
out
xchg
lods
aas
loopne
mov
add
pop
and
lcall
out
scas
les
xor
ljmp
or
mov
rolb
add
lret
xor
decl
add
add
add
pop
inc
add
add
rorb
add
mov
dec
fistps
adc
mov
mov
leave
fbstp
add
adc
add
add
add
cltd
adc
decl
add
test
lret
out
push
cmp
add
sbb
add
fcmovu
repz
lcall
jnp
add
add
or
pop
aas
sbb
add
add
dec
icebp
and
ljmp
call
mov
sbb
into
sbb
jno
pushl
jmp
xchg
sub
loop
adc
pop
into
lds
daa
add
inc
add
sbb
jp
add
nop
xchg
or
add
cmp
add
add
dec
insl
iret
pusha
add
dec
cmp
mov
cmp
adc
stc
insl
inc
add
dec
add
ljmp
mov
lea
mov
cmp
cmp
add
push
add
xor
addl
push
push
add
insl
and
in
addl
push
pop
add
add
rol
add
repz
pop
mov
add
push
add
ljmp
lods
cs
add
mov
add
outsb
add
pushl
and
decl
enter
adc
dec
xor
cld
push
add
icebp
cmp
shll
add
add
outsl
je
mov
sbb
add
insl
mov
add
leave
mov
add
mov
add
sbb
nop
add
call
or
add
add
test
rolb
add
cmp
pop
das
and
jmp
add
pusha
add
scas
inc
add
in
lcall
aaa
pop
and
inc
add
jl
dec
test
imull
lahf
stc
inc
add
add
inc
add
imul
mov
add
pop
addl
jnp
adc
in
mov
jne
push
inc
add
mov
sbb
add
add
add
add
addb
movl
int
repz
rcrl
add
popa
add
xchg
cmpsb
add
add
add
add
mov
dec
addb
add
jge
dec
movsb
add
inc
add
dec
pusha
add
leave
jae
push
out
bound
jmp
imul
lahf
mov
sub
add
mov
push
add
fdivl
push
add
jne
jb
pushl
decl
popa
add
in
mov
add
add
mov
jmp
jl
mov
shrl
mov
addl
add
add
xchg
pop
mov
ljmp
cmp
add
sahf
mov
jae
cmp
mov
lahf
cwtl
sub
add
stos
dec
popf
lock
xchg
jecxz
mov
xrelease
cmp
lcall
push
add
sub
add
add
jo
jmp
add
cmp
add
add
add
ss
xor
ljmp
add
xor
cmp
ja
fdivrs
add
pop
or
add
add
add
pushl
add
mov
add
arpl
dec
js
add
in
cmpsb
add
mov
jbe
sbb
xor
decl
out
cwtl
sahf
rcrl
inc
add
pop
data16
cmpsl
add
aam
xor
lcall
movsl
add
xchg
mov
notl
push
inc
add
mov
add
cmc
xlat
adc
add
pop
loopne
sub
cld
cmpsb
add
add
pop
hlt
mov
add
call
push
add
lret
movsb
add
xor
fldenv
test
sub
in
data16
add
stos
movsl
add
push
mov
nop
aas
in
call
mov
push
mov
decl
sbb
cmp
mov
jmp
add
decl
movsb
add
cmp
scas
push
add
xchg
movsb
add
or
add
addl
cmpsl
add
outsl
lods
push
add
ret
dec
inc
add
push
add
aad
add
jae
jmp
sbb
add
push
mov
or
ds
sti
dec
inc
add
add
mov
add
ja
add
add
push
js
add
clc
or
ds
test
aaa
aad
cmp
adc
shrb
jle
int3
mov
add
movsl
add
ss
add
das
fildl
add
add
test
add
add
add
fdiv
insb
das
and
aam
mov
add
addl
addr16
jge
pop
fdivs
lret
dec
enter
add
in
pop
dec
inc
add
add
jmp
xchg
fldenv
add
das
roll
loopne
js
add
dec
sub
add
add
cmp
call
jb
decl
add
pushf
pop
mov
add
clc
dec
cmp
ljmp
dec
xor
outsb
popa
add
movb
dec
mov
push
mov
add
movb
add
add
jecxz
adc
inc
add
xchg
or
insb
adc
repnz
fbld
ds
add
lods
xchg
lahf
xchg
jl
jo
jmp
add
pop
cmp
add
add
add
lret
sar
cmpsb
add
add
mov
int
add
mov
mov
lcall
push
jo
ljmp
xor
cmp
jle
jns
inc
add
out
mov
stos
sti
add
and
jmp
add
add
test
add
out
and
incl
sbb
inc
add
mov
cmp
add
cwtl
test
movq
rcr
divl
add
lds
pop
cltd
and
mov
fbstp
fwait
fwait
mov
rcl
lock
xchg
adc
or
add
add
add
add
rolb
cs
add
pop
imull
adc
fnsave
aam
add
imulb
addl
int
xchg
mov
add
cmp
or
add
movl
mov
test
pop
push
add
data16
stos
out
cmp
loop
mov
add
add
add
movl
add
xor
decl
call
pushf
lds
or
out
loopne
lods
add
decl
fwait
inc
add
mov
mov
rcll
addb
sahf
enter
cmp
test
adc
add
inc
add
repz
incl
into
push
add
xor
jmp
add
jo
ljmp
lods
xor
sti
push
sub
sbb
js
add
fldenv
add
add
add
and
incl
lock
add
sub
add
hlt
test
stos
leave
cmp
xchg
cld
testb
add
movb
ret
add
pushl
add
add
cmp
add
stc
inc
add
adc
add
fcmovne
insb
stos
xchg
js
jbe
pop
add
add
cmpsl
add
add
add
std
and
xchg
push
aam
add
js
add
loopne
mov
add
cmp
int3
and
out
sbb
add
adc
pushl
add
add
push
enter
out
push
dec
xchg
addl
pop
out
xor
add
lea
lret
or
inc
add
in
sbb
and
mov
add
add
decl
add
xchg
outsl
outsb
int
add
sub
add
lahf
mov
adc
scas
fistpll
add
jbe
add
out
inc
add
inc
add
mov
addl
addl
addl
add
sbb
add
jne
mov
add
add
loop
jmp
add
rcr
mov
xchg
jp
mov
push
fcomps
inc
add
fldl
add
addb
out
xchg
stc
or
jnp
add
add
pop
outsb
mov
add
lea
fstpl
mov
jo
incl
add
dec
loopne
in
or
sarl
jnp
add
add
imul
pushl
jnp
add
bound
call
lods
pop
dec
loope
aad
add
addb
ss
add
add
mov
dec
dec
icebp
repz
mov
sub
in
pop
jecxz
sti
call
repnz
jb
inc
add
add
scas
cmc
rcl
addb
dec
mov
add
lcall
out
mov
add
add
lcall
and
call
lock
leave
pop
add
add
add
loop
in
xor
stc
aad
cmpsb
add
xchg
outsl
mov
push
add
mov
push
add
scas
js
incl
call
pusha
add
jmp
test
mov
das
dec
ja
add
and
decl
hlt
fisubl
add
addl
jmp
add
add
ds
mov
add
loope
pop
adc
lcall
xor
aas
sbb
jno
decl
add
xchg
insb
enter
add
push
sbb
mov
test
stc
fwait
popa
add
mov
mov
cli
mov
dec
add
mov
scas
add
jmp
jmp
incl
add
xor
decl
mov
add
jge
inc
add
add
clc
ds
add
je
cmc
push
add
dec
out
pop
sar
pop
mov
add
sbb
loop
clc
addl
dec
mov
add
dec
or
outsl
or
add
fsubrs
fistpll
push
je
add
repnz
jge
movsl
add
inc
add
inc
add
cli
dec
cmpsl
add
aaa
arpl
in
test
flds
cmp
add
mov
rolb
mov
movsl
add
push
adc
pushl
bound
jmp
add
add
jg
add
xchg
pop
add
add
cmc
xchg
adc
incl
add
push
add
add
decl
xor
sbb
js
std
clc
and
push
lea
cmp
mov
jmp
mov
push
add
sti
dec
clc
inc
add
fistl
shr
inc
add
add
inc
add
lcall
in
loopne
sub
mov
ljmp
dec
dec
jae
decl
push
add
jmp
fstpl
sbb
lcall
je
incb
pop
mov
shrb
pop
push
add
or
mov
add
add
push
jne
and
decl
sbb
cmp
add
xor
incl
add
out
or
push
add
jl
add
add
add
lds
pop
fucomip
movl
pusha
add
xchg
inc
add
stos
aaa
fcoms
pop
dec
outsl
or
decl
pop
inc
add
lods
or
add
lcall
jnp
add
add
jnp
loopne
fimuls
or
jmp
mov
movsl
add
xchg
outsb
xchg
push
xchg
mov
add
add
icebp
cltd
ja
addb
add
add
jge
inc
add
lea
and
lret
pusha
add
push
sahf
add
dec
ret
inc
add
xor
mov
insb
jge
lods
test
rcll
mov
add
out
arpl
jge
add
fs
stos
jp
adc
call
add
add
jae
cmp
add
mov
add
mov
dec
int
add
test
pop
add
call
add
push
ret
add
add
bound
jmp
inc
add
fmulp
sti
mov
inc
add
or
nop
inc
add
mov
test
adc
decl
add
decl
add
ljmp
add
repnz
add
jb
jmp
jl
add
dec
ret
add
add
add
jmp
add
mov
add
sbb
push
add
hlt
xchg
cltd
cmpsl
add
leave
mov
xor
ljmp
fiaddl
lds
pop
cmp
add
inc
add
incl
add
jecxz
dec
in
sub
roll
pop
add
add
mov
jl
ja
mov
decl
shlb
add
mov
add
pop
add
int3
fstl
add
aam
xchg
ja
or
add
mov
lock
pop
testl
mov
add
call
movb
add
jle
insb
lock
inc
add
out
fwait
repnz
call
call
push
mov
sbb
add
jg
adc
push
insb
sub
push
add
int3
or
add
add
movl
add
xlat
cmc
faddl
jmp
add
xor
decl
inc
add
clc
push
jns
add
int
add
testl
inc
add
ljmp
inc
add
sub
mov
add
lret
inc
add
lods
or
sti
add
inc
add
mov
pop
mov
add
scas
add
std
sub
xor
jle
push
int3
outsl
mulps
out
rolb
xor
add
cmp
pop
lcall
inc
add
jnp
mov
add
add
addl
add
dec
dec
fwait
stos
cmp
adc
adc
decl
mov
push
add
lret
in
mov
add
sub
add
shl
add
add
pop
imul
add
pop
les
mov
or
xor
add
jp
add
inc
add
mov
pop
les
std
leave
mov
fildl
lcall
mov
or
push
add
xchg
and
ljmp
or
add
roll
adc
fldenv
add
out
or
push
scas
sti
xchg
lret
jmp
mov
ja
pop
popl
jne
add
add
movsb
add
imul
push
add
add
push
lock
dec
lret
push
loope
ror
outsl
push
and
lcall
fstps
dec
popf
xor
call
fistps
out
mov
add
decl
lock
enter
in
xchg
test
xchg
les
xor
inc
add
add
sub
add
pop
shlb
enter
jmp
pop
pop
stc
lret
mov
call
sub
fdivr
test
add
push
push
add
ljmp
push
add
addl
shrl
jbe
shrl
mov
add
push
add
add
std
out
sbb
adc
add
nop
ficomps
add
in
cli
mov
mov
mov
xlat
pop
lcall
mov
add
jge
adc
std
jle
mov
fwait
push
adc
jmp
jl
push
add
or
add
inc
add
ja
xor
lcall
fistps
sti
jp
aas
pop
inc
add
mov
sbb
lock
addb
xor
lcall
jp
jmp
mov
les
clc
push
cmp
add
add
mov
push
adc
or
add
call
inc
add
push
in
sub
fwait
movsb
add
out
ljmp
clc
loopne
fisttpl
arpl
inc
add
inc
add
add
inc
add
lret
lcall
add
arpl
jmp
add
jmp
mov
dec
cmp
out
and
ljmp
mov
add
ja
les
sbb
pop
fdiv
sbb
leave
mov
repnz
cmp
movl
add
push
add
hlt
popa
add
pop
add
add
add
jle
add
lahf
cmp
out
fstps
add
pushf
imul
sub
dec
inc
add
add
pop
mov
add
sarl
lds
jge
addl
jle
std
xor
lcall
dec
imul
lock
mov
loop
mov
ja
push
push
add
add
add
shll
add
out
roll
loope
sub
jmp
add
imul
jno
mov
das
addl
lcall
in
stos
add
add
dec
test
rolb
js
sbb
js
cmp
add
out
and
ljmp
add
adc
incl
add
push
add
mov
into
js
aas
xor
inc
add
and
jle
push
add
stos
mov
adc
scas
lret
mov
movsb
add
aad
add
add
sub
or
pop
add
shrb
test
push
add
add
call
ljmp
mov
add
add
jne
add
inc
add
lcall
adc
incl
push
into
into
jns
add
jp
add
xchg
test
adc
add
add
clc
lahf
mov
add
add
xchg
enter
sarl
xlat
sub
add
les
sbb
add
decl
mov
dec
xchg
das
mov
add
dec
sub
add
js
sub
inc
add
int3
test
outsb
push
or
dec
sbb
add
aaa
fs
testl
cwtl
or
xlat
js
out
arpl
push
cmpsb
add
pop
jl
add
xlat
fbld
add
cmp
add
iret
adc
decl
test
hlt
jns
lds
xor
jmp
add
add
add
rcrb
add
adc
fcmovnbe
and
ret
mov
add
add
addb
or
sbb
push
add
push
add
or
mov
lds
stos
jp
cmc
stos
pop
xchg
nop
mov
pop
mov
out
pop
rcrl
add
mov
ja
add
add
cli
sbb
add
daa
add
in
insb
test
out
pop
aam
add
add
push
add
ss
sbb
repnz
add
imul
stc
mov
add
add
shrb
mov
jae
pushl
mov
add
lcall
add
add
lds
pop
ret
add
pop
mov
bound
jmp
in
mov
xor
lcall
add
add
inc
add
add
add
jno
incl
jmp
add
pop
stos
adc
xchg
loop
test
inc
add
stos
cld
inc
add
mov
out
divl
add
pop
fwait
stos
loopne
mov
repnz
pop
and
lcall
lock
incl
add
aam
out
adc
decl
jbe
test
mov
negb
xor
call
addb
add
inc
add
add
push
ret
test
xchg
addb
and
decl
dec
scas
stc
popf
pushf
jo
decl
jns
xor
jmp
add
add
in
enter
call
mov
incl
mov
jns
cmpsl
add
cwtl
pop
add
add
lea
decl
dec
sub
mov
add
add
add
jge
jg
add
and
lcall
xlat
xchg
addl
inc
add
mov
aam
dec
das
test
pop
call
mov
decl
imul
mov
sbb
fadd
add
ljmp
fcmovnbe
leave
sbb
add
insl
xchg
or
or
add
je
loop
loopne
fnstenv
addb
pop
lahf
test
repz
ds
repnz
jmp
add
mov
push
add
pop
push
push
xlat
or
sub
add
cmc
jl
add
add
jmp
fbstp
add
addb
xchg
ret
add
inc
add
clc
push
add
incl
add
fcmovne
test
inc
add
mov
pop
xor
lcall
rorl
or
add
sbb
add
int
inc
add
add
adc
add
add
add
sub
pushf
shrl
pop
scas
add
push
add
pop
fwait
add
add
dec
pop
fadds
mov
cli
insb
inc
add
call
lods
jl
add
out
mov
add
fidivs
lcall
lahf
lods
dec
xchg
in
and
pop
outsb
daa
add
xor
add
movsb
add
pmaxsw
cmp
lcall
pop
das
jne
push
xor
pushl
mov
stos
adc
mov
add
adc
lcall
sub
jecxz
daa
add
mov
add
daa
add
add
jp
add
incb
pop
xor
push
ret
add
dec
dec
xor
decl
mov
mov
add
add
and
cmp
sub
pushl
jl
leave
inc
add
mov
add
cli
js
jmp
xchg
aaa
mov
cwtl
mov
pop
cmp
add
adc
inc
add
push
add
push
sbb
sahf
cmp
add
mov
add
add
pusha
add
ja
lret
push
insb
test
mov
mov
xchg
cmp
sub
add
add
add
add
pop
pop
add
and
call
fucomi
loopne
push
add
dec
jnp
add
std
sbb
add
dec
dec
mov
arpl
incl
jmp
lcall
test
or
pop
mov
pop
add
add
call
ss
mov
pop
cmc
addb
jle
add
add
das
sub
sbb
add
push
add
movl
or
addb
hlt
xchg
adc
out
loopne
adc
add
and
in
movsb
add
pushl
add
rcll
add
add
icebp
jg
add
push
fadd
add
or
mov
dec
sub
fidivl
daa
add
add
decl
push
lret
fisttpl
out
sbb
inc
add
and
roll
mov
add
int3
aad
imul
add
std
inc
add
or
lret
add
in
push
add
or
xor
push
adc
add
add
loopne
pop
dec
pop
fbld
inc
add
addl
aas
cmpsb
add
iret
or
add
add
addl
pop
jle
add
sub
fstpl
addl
outsl
xchg
es
add
add
xchg
add
mov
repnz
push
jae
pushl
pop
add
sbb
add
dec
sbb
icebp
jae
pushl
add
jge
and
int3
jb
push
insb
mov
add
repnz
cmp
adc
pushl
add
add
xchg
aad
add
add
mov
out
cs
ja
add
add
add
add
popa
add
jg
sbb
fidivl
add
jno
lcall
lea
push
add
addb
add
adc
inc
add
add
ficompl
add
add
cmp
push
add
mov
add
add
add
pop
sahf
mov
add
sub
decl
add
add
add
aas
dec
movsb
add
jmp
add
inc
add
xchg
in
xor
jmp
ljmp
scas
seto
mov
add
jge
xchg
xchg
sbb
in
add
incl
call
add
and
mov
inc
add
inc
add
add
call
cmp
jns
add
mov
in
fbstp
pushl
call
add
lcall
pop
pop
popa
add
pop
adc
ljmp
mov
pushl
add
add
call
pushl
add
or
cmp
inc
add
add
out
scas
fidivl
add
xchg
sub
jl
xchg
jmp
add
repnz
mov
jne
and
call
add
inc
add
aad
add
push
add
sub
push
add
jmp
add
xor
pushl
in
sbb
insb
enter
ljmp
add
pop
insb
jb
dec
ret
mov
in
std
sbb
mov
ja
mov
jmp
add
xor
add
loopne
pushf
dec
sbb
insb
inc
add
sub
test
add
add
add
xchg
addb
pop
adc
insl
mov
sar
stos
repnz
fdivrs
add
pusha
add
das
mov
add
mov
mov
sbb
cmpsb
add
bound
jnp
movsb
add
add
ljmp
sbb
add
push
jmp
xor
push
and
dec
movsb
add
xor
in
sbb
inc
add
sbb
loopne
dec
scas
push
addl
dec
xchg
pop
add
dec
pushl
popf
inc
add
jecxz
cmovo
jmp
ds
pushf
leave
iret
es
add
xor
jmp
add
cld
add
incl
incb
add
add
jge
jb
call
add
add
sbb
dec
and
incl
add
lods
jae
lcall
dec
xchg
or
add
ret
add
pop
jae
decl
sub
add
movb
push
add
add
jno
call
nop
lods
cmp
addb
and
inc
add
lea
add
aam
add
decl
aam
mov
add
xchg
insb
fnstenv
ljmp
movsl
add
add
jmp
xchg
test
add
ret
sub
add
inc
add
mov
dec
sbb
mov
add
add
mov
outsl
mov
lods
sub
add
rcll
jmp
add
push
sbb
add
loopne
sti
sbb
add
add
mov
add
xchg
xchg
sti
fistpl
mov
add
out
addb
push
add
pop
movsl
add
add
lods
sub
add
lcall
xor
ljmp
mov
das
sarl
jle
repnz
and
incl
add
push
in
dec
push
iret
add
rolb
jnp
lock
lcall
xchg
js,pt
add
out
aas
xchg
xor
jmp
ljmp
xor
pushl
decl
hlt
mov
add
mov
add
mov
loopne
sbb
add
add
push
add
xchg
sbb
add
add
sub
rolb
add
add
enter
or
addb
shlb
add
push
add
or
add
daa
add
jmp
push
add
hlt
lret
out
mov
add
jne
stos
dec
fstl
add
push
push
add
cwtl
push
mov
mov
out
ret
add
add
in
sti
mov
icebp
dec
mov
mov
add
sub
and
addr16
cltd
stos
in
jae
std
sub
xchg
into
cmp
jl
jne
add
outsb
outsb
adc
cmp
mov
inc
add
add
pop
mov
in
inc
add
aam
stos
aaa
jl
aaa
cld
movb
dec
sbb
add
stc
pop
rcl
loope
imul
add
stc
aad
add
add
add
ret
and
mov
and
lcall
lods
mov
mov
add
add
adc
add
add
mov
add
hlt
cmc
mov
add
mov
test
xor
mov
add
jge
cltd
iret
mov
rcrl
add
scas
lods
jl
dec
pop
sub
sub
dec
xchg
or
jb
inc
add
add
add
jp
imulb
in
dec
xor
out
test
push
add
in
push
lret
add
repz
push
xor
ljmp
test
push
add
bnd
ficoms
dec
inc
add
add
add
daa
add
cmc
lds
mov
add
mov
add
jmp
add
mov
add
fdivrl
lcall
add
inc
add
add
push
push
sti
jno
jle
ret
add
dec
out
pop
add
rolb
sbb
mov
mov
lcall
sub
add
pop
inc
add
add
loope
dec
test
xchg
pop
adc
fldenv
sub
cltd
aam
roll
add
push
add
pop
push
xchg
js
add
inc
add
add
mov
jmp
clc
bound
push
jae
fistpll
lahf
inc
add
jb
incl
add
addb
add
test
mov
add
cmc
push
mov
add
add
xchg
adc
add
jp
cld
mov
dec
sub
adc
call
add
pop
push
push
add
idivl
add
jmp
add
mov
add
insl
xchg
inc
add
test
pop
cmp
add
aas
fdivs
cmp
sbb
sub
mov
inc
add
sbb
add
add
and
pushl
inc
add
scas
and
pushl
inc
add
aam
add
mov
add
mov
mov
jbe
testl
je
and
pushl
mov
pop
in
sub
pop
test
add
fnsave
add
sub
add
mov
cmp
jmp
mov
popl
add
adc
pushl
add
add
add
in
outsb
lds
loope
dec
xchg
popf
inc
add
aad
add
cmp
add
mov
add
mov
add
addr16
adc
pushl
rolb
xchg
lea
push
add
lock
test
add
cmpsl
add
mov
adc
lret
cmp
add
or
sarl
mov
mov
push
add
cmpsb
add
addb
add
notb
add
mov
add
lcall
add
add
arpl
std
push
out
jl
addb
outsl
cmp
dec
inc
add
test
add
push
mov
stc
xchg
and
pop
push
add
sbb
add
xchg
lahf
shll
add
enter
mov
aas
shrb
mov
bound
fildl
movsl
add
int3
lods
stos
add
add
iret
ror
sbb
jge
mov
inc
add
mov
lahf
stos
jle
call
pushl
add
out
adc
cli
inc
add
add
xor
decl
add
push
mov
add
loop
adc
add
add
xlat
rcrb
lods
push
xor
pushl
enter
call
repnz
pushl
add
cmp
mov
or
les
mov
in
pop
jge,pt
arpl
call
add
mov
movsl
add
dec
data16
add
out
cld
pushf
mov
icebp
movsb
add
adc
incl
add
pop
stos
lock
std
cmp
push
nop
test
push
pop
add
in
pop
js
add
pop
inc
add
cmp
pop
push
add
arpl
incl
inc
add
add
fidivl
adc
decl
lds
add
out
mov
jb
jl
ret
loope
ret
pop
dec
pop
pop
sub
aam
out
pop
jae
ljmp
xchg
mov
jno
decl
ds
push
cmp
add
jae
incl
add
sub
pop
iret
cli
mov
incl
pop
mov
lock
or
add
test
mov
sub
pop
add
rolb
add
movsl
add
mov
clc
add
add
call
movl
sub
add
in
movsb
add
add
loope
loop
mov
clc
mov
fldcw
mov
loope
mov
xchg
mov
pushf
sub
add
add
lods
pop
add
jns
sarl
movb
add
nop
mov
enter
push
add
mov
add
or
add
or
add
add
inc
add
add
testl
push
sbb
negb
arpl
lcall
add
roll
mov
and
ljmp
icebp
inc
add
imul
cmpsl
add
adc
imul
jge
push
sbb
lcall
call
aaa
popf
and
inc
add
cs
adc
aad
push
add
adc
incl
mov
mov
and
inc
add
jno
decl
movb
add
decl
int
sbb
add
aad
sub
mov
xor
jl
sldt
pushl
incl
add
push
add
jb
cmp
xor
dec
lds
push
add
pop
add
add
pop
rcr
mov
xor
push
pop
xchg
fiaddl
add
fsubl
add
mov
add
test
mov
imul
jne
xor
call
push
mov
adc
call
add
aam
add
call
decl
sub
in
inc
add
add
decl
add
loope
mov
arpl
decl
gs
mov
data16
test
inc
add
fldenv
sbb
in
pop
add
push
add
mov
incl
call
cwtl
lcall
add
inc
add
pusha
add
jae
incl
stos
outsl
add
call
adc
call
testl
add
push
inc
add
add
call
and
dec
and
jg
jg
add
add
lcall
xchg
movsb
add
jns
pop
scas
addl
das
dec
add
inc
add
add
or
clc
mov
and
cmpsb
add
movsb
add
mov
mov
clc
insb
sbb
int
add
data16
pop
or
adc
icebp
lcall
add
ss
xchg
outsl
pop
push
enter
sub
add
jbe
out
add
jmp
add
and
pushl
mov
in
negb
adc
push
mov
je
add
add
pop
mov
add
in
add
mov
jmp
add
lahf
adc
xchg
pop
jecxz
call
add
incl
mov
incl
push
xor
add
xchg
sbb
add
out
jmp
add
enter
pop
cmc
arpl
pushl
inc
add
add
add
adc
cld
inc
add
mov
add
bnd
adc
lcall
pop
adc
add
addb
mov
call
add
pop
addb
add
addl
pavgw
stos
aas
xor
les
mov
icebp
jb
call
xor
call
mov
add
jns
add
insb
push
add
std
nop
out
cmc
je
mov
add
out
nop
leave
pop
mov
repnz
or
repz
cltd
cmc
inc
add
lds
push
mov
popf
adc
pushl
loope
add
ljmp
add
decl
sbb
mov
push
add
push
add
icebp
stos
js
pop
cmc
pop
xor
xchg
cli
or
mov
popl
and
call
scas
mov
add
mov
add
popf
jnp
sbb
or
sub
ss
xor
jle
cmp
stc
cltd
sbb
or
in
adc
dec
scas
dec
fisubrl
mov
xchg
outsl
fwait
add
xchg
jne
add
bound
dec
sarb
insl
xchg
jns
add
fildl
mov
rcll
add
jo
call
add
lcall
pop
cli
mov
mov
add
lds
mov
add
mov
xor
movl
add
xchg
pmullw
pop
xor
pushl
aas
lea
pop
dec
cmpsl
add
add
repz
sub
out
and
ljmp
pop
push
and
loopne
mov
decl
add
jg
or
xor
lcall
xor
repnz
ljmp
cld
test
clc
cld
ret
add
add
jl
push
negl
add
mov
lock
int
pop
inc
add
xchg
into
adc
std
jl
fidivs
add
movsb
add
popa
add
cmp
addl
mov
add
mov
add
mov
ficoms
int3
inc
add
xchg
aad
mul
add
and
jmp
add
add
fstp
out
addl
fnstenv
adc
add
pop
fstpt
inc
add
sbb
add
inc
add
decl
in
dec
adc
pushl
add
add
popa
add
mov
add
ljmp
xchg
rolb
int3
dec
mov
xchg
pop
data16
lret
incl
decl
cli
mov
add
icebp
and
push
cwtl
cltd
add
cmp
test
xchg
sub
pop
repz
aaa
dec
or
add
arpl
fimuls
inc
add
inc
add
xchg
loop
jecxz
leave
mov
lahf
jnp
cltd
mov
push
and
flds
sub
call
xchg
push
push
mov
add
add
lock
xor
in
xchg
sbb
xor
add
add
jle
push
add
add
xchg
int3
out
daa
add
cmpsb
add
add
jle
add
lahf
imul
xchg
dec
jae
incl
outsl
mov
add
jmp
pop
sbb
push
dec
dec
sub
pop
aas
fs
mov
mov
das
pop
add
add
ret
xchg
add
lcall
and
jmp
xchg
add
ljmp
sbb
add
pop
daa
add
jmp
pop
roll
jbe
add
ds
mov
pushf
sub
jne
jbe
add
shlb
pop
add
add
sti
movsb
add
and
jns
lea
rclb
incl
lcall
xor
call
divb
mov
sti
inc
add
loopne
add
lock
mov
jmp
add
int
dec
push
xchg
jge
sub
mov
add
add
fistpll
mov
add
xor
jmp
and
ljmp
add
sub
xlat
sub
pushl
push
and
sub
sub
add
int
pop
add
call
fistps
filds
add
add
pop
xchg
ja
mov
push
add
repz
fistpl
mov
pop
push
add
es
add
mov
add
push
add
mov
jne
fwait
movb
push
ja
fstl
call
cmc
and
jmp
push
add
lods
out
sar
add
call
pushl
jmp
add
and
ljmp
incl
push
imul
je
add
push
add
jbe
push
mov
add
mov
scas
fmuls
xchg
inc
add
add
mov
add
lock
inc
add
add
pushl
add
fstpl
and
jns
ficoml
jl
pushf
pop
push
cmp
pushl
add
cld
movsb
add
add
dec
lds
in
push
aas
movsb
add
or
add
jns
add
mov
add
jecxz
push
lock
xchg
popa
add
push
mov
popf
xlat
jae
decl
adc
and
push
pop
add
mov
sub
lret
inc
add
pop
dec
pop
fmuls
add
jmp
fstl
add
push
inc
add
add
push
add
aas
pop
dec
stos
int
je
cmc
imul
mov
xor
dec
dec
leave
sbb
popf
add
call
leave
mov
test
add
lcall
add
add
and
add
add
in
pop
xor
cmp
add
outsb
xchg
icebp
shld
mov
add
add
inc
add
into
mov
and
add
in
lahf
test
push
add
mov
mov
decl
out
inc
add
xor
call
push
add
cld
adc
jae
decl
repnz
sti
daa
add
pop
xchg
test
add
add
popa
add
mov
int
lret
pushf
adc
jmp
test
movsl
add
or
pop
add
pop
push
add
icebp
inc
add
hlt
test
jg,pt
sub
lock
fiadds
add
clc
sbb
pushf
adc
pushl
dec
hlt
xor
ljmp
das
jo
lcall
mov
stos
mov
popf
ljmp
add
pop
add
ljmp
fisubrs
js
popf
les
adc
ljmp
in
cmp
inc
add
stc
addb
jnp
jne
cwtl
mov
into
mov
jmp
dec
or
flds
push
jp
add
insb
gs
and
call
pushl
add
insb
add
fcmovne
jle
add
sub
xlat
mov
inc
add
add
mov
movb
jecxz
mov
inc
add
cld
mov
add
jo
inc
add
in
push
add
jns
add
enter
push
add
sarl
sarl
les
inc
add
lods
jmp
lds
cli
icebp
popf
jnp
add
jns
add
fmuls
pop
icebp
movb
add
cmp
jmp
cmpsl
add
and
icebp
push
add
pop
popa
add
mov
jmp
push
mov
movl
or
mov
add
iret
inc
add
pop
sub
add
jg
je
ja
add
mov
call
add
dec
push
cmp
cmpsb
add
addl
add
sub
iret
repnz
les
out
jp
adc
aas
dec
test
movl
add
pop
push
scas
negl
add
dec
fimuls
add
adc
decl
xor
cmp
add
rcr
imul
mov
inc
add
es
sub
jl
jecxz
xor
cmp
test
xor
decl
inc
add
cmp
pop
and
incl
cli
adc
jmp
add
add
cwtl
jb
incl
adc
incl
clc
lds
inc
add
fwait
xor
jmp
add
add
mov
push
push
pushf
inc
add
push
add
out
data16
outsb
push
mov
jl
scas
pop
inc
add
repz
cmp
xor
fbstp
add
jle
aaa
push
add
imul
add
add
les
roll
test
sbb
lahf
dec
mov
mov
adc
jmp
add
add
mov
add
pop
pop
lret
or
add
cmc
aaa
add
mov
add
add
mov
add
cmpsb
add
or
add
add
or
int
test
leave
add
xor
jmp
add
sub
lcall
out
xor
int3
aam
add
add
ss
lret
and
ljmp
add
pop
push
fidivl
pusha
add
rorl
mov
out
popa
add
inc
add
add
add
add
add
push
add
daa
add
jne
mov
incl
mov
mov
popf
aaa
je
add
inc
add
add
add
mov
sub
and
cmp
mov
daa
add
sbb
and
fildl
pop
daa
add
ljmp
bnd
ljmp
out
popf
aam
add
dec
stos
adc
decl
sbb
dec
rclb
pushl
repz
xor
jmp
add
testb
add
into
sub
inc
add
mov
add
push
imul
in
imul
xor
or
cmp
fwait
outsl
jb
incl
add
out
insb
xchg
jp
jg
sbb
scas
xor
add
mov
xchg
push
add
jg
add
ret
roll
test
cltd
jecxz
ror
fistpll
jecxz
jbe
dec
leave
leave
mov
jmp
add
jae
call
inc
add
cmp
in
ljmp
dec
sbb
add
add
stc
lods
mov
jmp
mov
divl
ds
mov
test
dec
test
fimuls
mov
add
add
lcall
or
add
in
pop
rolb
add
cmp
add
push
ja
add
out
cmpsb
add
add
in
les
fistl
adc
push
out
sub
cs
xchg
fucomi
stc
xor
add
add
jmp
add
addb
add
add
mov
add
shll
add
xchg
jmp
mov
push
pop
sbb
add
mov
add
bound
ljmp
and
push
add
repnz
add
lret
out
sub
and
mov
cmp
add
jne
aad
add
ljmp
add
pop
add
int
lahf
cmp
call
inc
add
dec
ret
add
iret
or
add
pushl
rorl
add
incl
push
jecxz
mov
aad
loope
cli
nop
clc
loopne
imul
add
pushl
adc
decl
icebp
or
add
jmp
add
sub
add
mov
sbb
push
out
les
xor
jmp
ss
outsl
jg
mov
cmp
dec
movsb
add
inc
add
ljmp
inc
add
dec
mov
test
mov
decl
add
ds
push
sahf
cs
adc
mov
call
cli
push
add
mov
into
cmp
lock
add
add
lahf
aam
add
add
fdivl
ljmp
daa
add
add
nop
jo
pushl
jae
ljmp
mov
add
hlt
jl
insb
jle
rolb
add
shrl
js
rolb
pop
call
ljmp
mov
mov
jb
decl
add
or
add
add
loope
fdivrs
add
aaa
adc
cmp
sti
int3
flds
add
ret
add
adc
jmp
mov
ja
inc
add
lret
dec
iret
shrb
aaa
xor
lcall
loopne
mov
sti
popf
xlat
sbb
aaa
sub
dec
imull
lret
xchg
jle
sahf
test
xor
mov
add
in
imul
jnp
sub
bound
jmp
add
xchg
xchg
addl
add
push
xchg
fisubl
push
xchg
test
fsts
add
adc
jmp
add
adc
in
insl
adc
add
test
pusha
add
nop
icebp
dec
cmp
add
incl
add
jmp
out
decl
call
sub
mov
decl
xchg
sub
decl
mov
add
xor
decl
add
movl
shl
fcmovb
add
add
lock
add
movsb
add
mov
add
shll
add
push
dec
xchg
ljmp
add
iret
inc
add
dec
lock
decl
hlt
add
in
sub
add
in
push
mov
out
pop
xchg
and
or
call
fwait
push
movl
push
mov
decl
inc
add
push
add
add
mov
sbb
add
add
xchg
mov
popa
add
or
hlt
xchg
and
incl
ljmp
jnp
out
test
arpl
call
add
out
rcrl
push
xor
js
xlat
cltd
imul
sbb
pop
aas
dec
dec
and
ficomps
fnstenv
mov
dec
mov
sbb
jmp
inc
add
das
call
push
add
add
sub
int3
bound
pushl
in
push
add
lcall
add
lcall
pop
das
out
pop
mov
add
add
add
add
add
xchg
push
test
pusha
add
adc
call
or
or
add
inc
add
sbb
arpl
ljmp
add
cmp
jl
jbe
add
inc
add
mov
lds
enter
add
push
add
jg
add
add
mov
ds
lea
cmp
aam
sahf
sbb
shlb
lret
mov
add
mov
call
push
add
lods
iret
jno
decl
add
mov
adc
add
cmp
adc
cmp
add
inc
add
add
xor
lcall
xchg
dec
xlat
and
push
cmpsb
add
add
insb
call
add
add
sbb
xor
call
xchg
mov
push
lods
and
ljmp
lds
pop
add
in
fildl
mov
add
faddl
cmp
add
or
movl
inc
add
inc
add
mov
popf
or
ss
xor
aas
jg
push
jp
add
and
cmp
dec
cmpsl
add
push
and
call
add
loope
aas
fsubrs
inc
add
addb
popf
movsl
add
xor
add
repnz
add
mov
cmpsb
add
add
xchg
mov
add
mov
test
inc
add
loope
jmp
pushl
fisttpll
add
mov
je
jne
add
xor
jmp
add
cwtl
mov
decl
js
dec
sti
aam
fldenv
call
pop
ljmp
lds
add
xlat
stc
aam
inc
add
mov
pushl
add
sub
and
xchg
mov
pop
push
adc
jg
cmp
or
pop
add
scas
xor
lcall
test
loop
ja
add
jge
aas
pop
movb
cmp
les
mov
push
pop
rolb
stos
into
cwtl
sub
cmpsl
add
add
add
shl
roll
add
xor
jmp
inc
add
push
add
negl
mov
add
add
add
scas
loop
add
jmp
xor
mov
popa
add
or
scas
cld
dec
mov
push
call
aaa
jle
add
inc
add
in
mov
iret
sub
les
mov
adc
incl
xchg
sbb
add
add
pop
and
mov
push
pop
sbb
shrb
jne
lods
mov
mov
adc
les
push
add
xchg
xchg
push
cmpsl
add
lods
std
das
roll
incb
roll
movsl
add
dec
stos
mov
jp
add
decl
add
add
sbb
cmc
or
mov
mov
movl
imul
pushf
repz
jbe
jl
xor
insb
popf
mov
hlt
xor
add
add
popl
jmp
add
call
add
jmp
dec
lods
dec
mov
into
loop
inc
add
rorl
and
and
dec
popa
add
int3
stos
cmp
lock
add
sub
jmp
add
or
pop
into
iret
push
pop
mov
mov
lahf
pushf
aas
mov
aad
bound
incl
decl
add
outsb
mov
add
and
cmp
add
ljmp
lcall
out
mov
add
lcall
pushl
add
mov
add
call
xchg
outsl
pop
imul
call
jns
cs
pop
push
add
push
xchg
inc
add
popa
add
cmp
in
cld
sub
add
fistpll
sub
lret
call
add
fadds
test
scas
and
call
aaa
jno
call
add
jecxz
roll
adc
ljmp
and
sti
stos
push
sub
xchg
dec
stos
xchg
inc
add
mov
fs
mov
repz
xor
add
add
fisttpl
add
stos
add
pushl
add
push
add
jo
pushl
mov
push
pop
sub
xchg
mov
pop
movsl
add
add
add
push
add
sub
and
ljmp
cmp
add
int3
in
pushl
add
scas
inc
add
inc
add
mov
scas
test
into
mov
jns
jecxz
das
insl
clc
ds
and
jns
mov
cwtl
in
fldcw
movsb
add
sbb
ljmp
addl
add
cwtl
and
jmp
pushl
sub
cmp
add
dec
popf
cltd
aas
add
ds
add
les
cs
iret
repz
add
add
dec
in
insl
xchg
shr
add
add
scas
push
add
outsl
cmp
add
stc
frstor
add
pushf
incb
add
jae
call
sub
lret
daa
add
add
xor
ljmp
add
mov
pop
sub
xor
decl
ss
add
test
add
stc
repnz
add
pushf
out
roll
add
xor
jmp
lcall
add
int
add
inc
add
lret
rcrb
add
xchg
inc
add
push
pop
mov
ret
push
divb
add
in
mov
cmp
add
pusha
add
or
stos
mov
dec
aas
pop
jne
xchg
pop
mov
xchg
mov
adc
decl
add
mov
add
pop
icebp
xchg
xor
incl
lcall
pusha
add
xchg
push
sub
insl
mov
push
das
push
inc
add
add
add
add
incl
add
mov
ljmp
in
stos
out
jnp
jae
dec
int
push
and
decl
add
imul
push
test
and
pushl
decl
push
add
rcrl
imul
cli
mov
add
arpl
jmp
cmc
lock
dec
lea
ret
das
stos
and
call
ljmp
cli
outsl
iret
adc
incl
add
xchg
out
fdivr
cs
adc
call
dec
add
incl
pop
add
add
add
mov
add
mov
jp
cwtl
ja
add
arpl
jns
int3
cmp
add
sub
mov
call
lcall
mov
pushl
jle
xchg
mov
mov
addl
add
mov
jo
decl
fisubs
add
add
cmp
mov
add
add
dec
aad
add
mov
mov
add
mov
pop
cld
mov
pop
and
jmp
add
ret
sahf
movsl
add
add
pop
lret
pop
je
mov
add
mov
xchg
outsb
in
sub
add
movsl
add
add
scas
jecxz
mov
and
decl
and
decl
xchg
pop
add
rolb
lock
out
loopne
adc
decl
scas
insb
es
push
adc
ljmp
repz
push
add
or
sub
lcall
add
add
cmp
pop
pop
add
dec
nop
inc
add
loope
ret
add
mov
icebp
cmp
adc
lds
inc
add
sbb
pop
add
jecxz
data16
xchg
inc
add
push
add
and
mov
add
inc
add
add
dec
outsb
arpl
mov
add
mov
add
add
add
jnp
sbb
add
and
dec
jbe
into
dec
push
pop
mov
add
stos
cltd
and
push
cmp
xchg
or
and
pop
mov
and
call
lret
pop
pop
insl
mov
mov
lcall
decl
lahf
cltd
mov
jmp
add
out
or
add
sti
mov
sti
jo
inc
add
add
in
imul
xor
jmp
add
add
idiv
push
ret
inc
add
add
add
mov
jo
push
bound
pushl
inc
add
rolb
add
cmp
sub
add
ljmp
mov
add
ljmp
lods
aad
xchg
dec
push
js
push
adc
ljmp
aaa
mov
add
add
add
ret
add
rcll
and
jmp
lcall
mov
cltd
and
lcall
fsub
add
ljmp
xor
fdivrl
data16
fs
add
add
addl
scas
sbb
sub
add
es
jge
pop
dec
pop
pushf
popf
ja
das
push
inc
add
add
and
add
jmp
add
mov
dec
fwait
cmpsl
add
mov
jns
cmp
and
dec
shr
addr16
xchg
jae
lcall
inc
add
jmp
fmull
xchg
dec
add
mov
adc
add
push
cmp
mov
faddp
add
add
movl
or
gs
mov
mov
adc
jge
lock
push
add
mov
add
add
inc
add
enter
xor
add
call
sbb
movl
add
or
out
hlt
out
xchg
lea
les
xor
decl
add
in
cli
insb
dec
push
dec
aam
xchg
and
decl
mov
add
add
mov
add
loopne
inc
add
pop
shlb
cs
adc
lcall
jne
jb
call
xor
decl
push
add
ficoms
or
xchg
mov
jne
add
sbb
movl
add
fcmovu
out
xchg
push
jg
into
stos
mov
push
add
nop
pusha
add
xor
cmp
enter
add
call
sub
mov
cmp
inc
add
cmp
test
stos
jnp
add
ljmp
and
call
fcompl
inc
add
add
adc
pushl
add
test
cmp
into
inc
add
aas
popa
add
lock
idivl
dec
ret
add
das
mov
sbb
test
pusha
add
dec
inc
add
daa
add
ljmp
pusha
add
fildll
mov
xor
push
call
add
test
loopne
inc
add
add
stos
and
ljmp
add
add
call
add
shll
push
add
or
mov
mov
push
add
pushl
inc
add
jp
add
mov
xor
add
dec
popa
add
minps
hlt
movsl
add
push
es
mov
add
mov
loop
xor
call
and
incl
dec
stos
inc
add
sub
add
jae
lcall
cmp
iret
push
mov
mov
mov
sub
repnz
add
inc
add
pushl
add
or
add
mov
cmp
add
jmp
add
addb
add
repnz
add
das
fidivl
sub
and
lcall
add
inc
add
cmc
jns
dec
lods
movsl
add
stc
sub
addb
add
mov
inc
add
add
js
add
add
lcall
xor
push
es
push
jge
ja
pusha
add
sub
add
push
ret
add
xchg
or
sbb
sbb
add
or
sbb
ss
cwtl
xchg
pop
loop
fwait
inc
add
mov
mov
add
add
add
push
add
mov
enter
pop
add
push
outsl
pushf
out
xor
test
mov
add
and
call
xchg
jmp
ds
adc
decl
inc
add
dec
sub
jae
cmp
fistpll
add
mov
inc
add
mov
fidivrs
add
das
arpl
pushl
les
mov
add
add
adc
add
cwtl
jo
call
add
cmpsb
add
fstl
loope
aad
cltd
adc
lcall
mov
add
sbb
add
aam
add
add
add
mov
loop
nop
jmp
adc
cmp
ja
xchg
mov
mov
xchg
ret
add
or
jo
add
add
mov
nop
jmp
aam
insl
stos
dec
add
jmp
andl
add
add
add
aam
in
insb
pop
nop
jmp
add
mov
jns
mov
mov
xchg
ret
add
mov
aad
jns
imul
mov
in
mov
nop
jmp
add
add
jns
aas
add
add
add
mov
nop
jmp
sub
ja
inc
add
add
add
push
add
and
nop
jmp
pop
add
and
xor
ljmp
test
add
nop
jmp
int3
mov
cs
add
nop
jmp
add
add
add
cmpsl
add
repnz
jmp
sub
out
scas
imul
sahf
inc
add
xor
push
adc
add
int3
xor
lea
nop
jmp
add
lahf
in
jmp
xchg
inc
add
insb
std
xor
int3
ret
nop
jmp
imul
add
add
mov
jmp
add
dec
insl
add
adc
push
imul
add
aam
aam
mov
push
mov
xchg
ret
lea
cmp
mov
xchg
ret
mov
xchg
popa
add
aam
push
push
mov
xchg
ret
stos
add
and
mov
popf
inc
add
add
jmp
mov
xchg
ret
insl
insl
mov
nop
jmp
scas
fadds
stos
add
out
cmp
jge
nop
jmp
add
insb
aam
xor
cltd
pushl
nop
jmp
and
lahf
xchg
add
add
jmp
add
out
scas
repz
add
ret
mov
xchg
ret
add
lret
mov
nop
jmp
add
add
jns
push
mov
add
add
add
add
add
ja
rep
nop
jmp
and
adc
push
nop
jmp
add
add
scas
add
mov
je
nop
jmp
fdiv
add
sub
pop
mov
add
ljmp
sbb
add
add
and
or
jbe
add
add
add
aas
add
nop
jmp
add
repz
fldl
popf
nop
jmp
repnz
mov
jmp
add
add
js
nop
jmp
add
adc
sub
movsb
nop
jmp
xor
xchg
in
pop
push
mov
xchg
ret
add
aam
sbb
xchg
xchg
inc
add
add
add
insb
mov
nop
jmp
add
mov
jmp
add
jb
mov
jmp
add
dec
mov
nop
jmp
mov
add
add
add
add
add
add
sub
pause
jmp
add
add
mov
nop
jmp
imul
add
add
push
push
mov
xchg
ret
stos
dec
fdiv
ja
add
add
add
test
lret
nop
jmp
add
add
mov
inc
add
push
inc
add
xlat
loopne
stc
mov
nop
jmp
inc
add
pop
mov
nop
jmp
adc
add
mov
dec
sub
nop
jmp
sub
mov
nop
jmp
add
xor
add
adc
cmp
icebp
nop
jmp
inc
add
add
add
repz
mov
xchg
ret
and
mov
dec
cmp
jmp
aam
inc
add
mov
add
nop
jmp
sub
test
sbb
adc
add
nop
jmp
test
and
jmp
mov
xchg
ret
add
lcall
incl
add
mov
test
add
nop
jmp
lea
fmuls
xor
add
scas
add
and
add
imul
fcompl
add
xor
add
add
ljmp
mov
xchg
ret
jmp
nop
jmp
adc
aam
mov
add
add
add
add
dec
jmp
nop
jmp
add
stos
add
pop
push
mov
xchg
ret
mov
popa
nop
jmp
add
stos
and
test
add
add
nop
jmp
inc
push
add
add
mov
nop
jmp
mov
mov
mov
nop
jmp
xchg
add
jmp
and
add
fists
add
sub
je
call
add
stos
add
shr
subl
nop
jmp
add
xor
push
mov
xchg
ret
add
adc
add
nop
jmp
mov
ret
adc
push
mov
xchg
ret
in
xor
nop
jmp
xor
insl
lahf
and
ljmp
inc
add
add
sub
fisttpl
and
or
add
add
add
add
cmp
adc
add
xchg
insb
cmpsb
add
xor
push
fwait
push
mov
pop
int3
add
fiadds
add
mov
xchg
ret
lahf
add
xchg
add
nop
jmp
xchg
dec
add
adc
add
inc
add
shll
roll
jmp
nop
jmp
repz
add
inc
add
lea
push
mov
xchg
ret
dec
insl
cmp
mov
xchg
ret
mov
xchg
add
and
add
xchg
bnd
jmp
sub
xchg
aam
add
sub
xor
add
test
push
cmp
add
nop
jmp
mov
insl
add
fcomi
stos
nop
jmp
add
add
add
xchg
nop
jmp
add
std
ror
add
nop
jmp
add
dec
pop
add
add
push
push
mov
xchg
ret
jmp
add
add
add
add
fstps
jmp
cmc
push
stos
mov
push
insl
adc
jne
nop
jmp
add
ljmp
jmp
repnz
push
add
add
push
add
nop
jmp
add
test
fcompl
push
mov
xchg
ret
mov
push
nop
jmp
mov
add
jmp
and
int3
stos
mov
adcl
std
sub
movsb
push
mov
xchg
ret
add
int3
or
stc
nop
jmp
add
add
or
nop
jmp
add
nop
jmp
add
cmp
add
lea
nop
jmp
add
add
inc
push
push
add
sub
nop
jmp
inc
add
add
add
add
mov
nop
jmp
add
cmp
test
data16
call
div
nop
jmp
mov
add
in
xor
ja
jp
or
popa
rolb
in
ret
dec
cmc
cmp
xor
add
add
xchg
add
mov
xchg
ret
add
adc
add
add
add
std
adc
push
mov
xchg
ret
add
add
nop
jmp
add
sub
mov
nop
jmp
jmp
fcoml
nop
jmp
add
ja
mov
xlat
mov
test
jmp
stos
mov
in
cltd
mov
nop
jmp
adc
add
movzwl
nop
jmp
ja
add
movb
push
nop
jmp
add
lea
add
and
incl
ljmp
clc
incl
mov
inc
add
cmp
nop
jmp
push
add
jmp
mov
add
stos
addl
adc
add
sub
mov
nop
jmp
inc
fsubrs
in
add
je
add
add
add
add
add
cwtl
lods
push
mov
xchg
ret
add
add
arpl
lcall
xor
push
mov
xchg
ret
add
inc
add
sahf
pop
nop
jmp
lea
aam
add
decl
lods
push
mov
xchg
ret
sub
inc
push
mov
xchg
ret
out
add
add
ljmp
leave
nop
jmp
sub
fsubr
add
mov
loop
push
cltd
add
add
fstps
jmp
add
add
add
add
cmp
inc
and
jmp
dec
add
add
cmpsb
add
nop
jmp
fists
or
jmp
fadds
aam
add
inc
sub
jmp
inc
add
ja
jne
nop
jmp
adc
and
jmp
add
add
nop
jmp
add
add
lahf
add
xchg
push
add
int
ficoms
call
ss
add
add
mov
add
decl
add
add
add
xor
call
addl
call
add
inc
insl
inc
repnz
add
pushf
push
push
mov
xchg
ret
add
add
add
add
add
int3
scas
push
popa
push
mov
xchg
ret
add
data16
nop
jmp
push
fadds
push
add
sub
add
mov
nop
jmp
add
add
nop
jmp
add
add
and
xor
inc
add
add
add
add
add
jmp
jge
nop
jmp
add
jo
incl
jmp
ret
add
popa
mov
add
inc
test
add
add
inc
add
xor
nop
jmp
std
add
imul
nop
jmp
or
mov
nop
jmp
addl
inc
push
add
pusha
add
nop
inc
add
inc
add
add
sbb
mov
xchg
ret
xor
adc
push
mov
add
add
add
add
pop
jae
jmp
mov
add
mov
nop
jmp
std
pop
add
add
nop
jmp
add
mov
dec
nop
jmp
repnz
pop
mov
add
push
jne
nop
jmp
lahf
fistpll
nop
jmp
add
mov
add
mov
nop
jmp
inc
add
add
mov
nop
jmp
add
stos
and
mov
nop
jmp
add
xor
add
mov
ret
nop
jmp
add
xor
lea
xor
incl
cld
push
push
mov
xchg
ret
xor
dec
add
add
and
pushl
nop
jmp
add
xchg
inc
stos
scas
jo
lcall
jmp
dec
add
add
les
jns
mov
nop
jmp
add
add
stos
lahf
cmp
nop
jmp
add
shrb
mov
xchg
ret
lahf
add
jmp
inc
repz
add
and
jns
sti
nop
jmp
jns
add
xor
add
nop
jmp
add
inc
inc
add
pop
jmp
nop
jmp
add
add
pop
mov
jg
nop
jmp
lea
add
push
mov
adc
enter
mov
jmp
add
dec
ja
add
popa
add
repz
push
push
mov
xchg
ret
add
dec
imul
add
cmpsb
add
ret
jmp
incl
xor
nop
jmp
add
mov
fmull
mov
sldt
sub
add
pop
add
push
mov
xchg
ret
add
add
mov
mov
add
adcl
add
incl
add
cs
nop
jmp
rolb
fdivrs
add
add
add
push
push
mov
xchg
ret
add
add
jmp
in
cmp
add
add
nop
jmp
add
add
mov
nop
jmp
fcoms
xor
add
nop
jmp
insl
pop
add
in
movb
mov
nop
jmp
mov
add
push
nop
jmp
add
add
repz
push
nop
jmp
scas
insl
filds
dec
scas
add
adc
call
mov
nop
jmp
add
repz
add
aam
rolb
stos
push
mov
xchg
ret
mov
stos
nop
jmp
lahf
add
add
call
incl
insl
mov
popa
add
out
add
cld
add
nop
jmp
sub
add
add
fildl
fldcw
and
adc
push
nop
jmp
sub
insb
les
jns
mov
push
mov
xchg
ret
test
jmp
add
ret
sub
add
pop
push
mov
xchg
ret
add
push
add
and
add
mov
add
out
pop
mov
nop
jmp
add
add
nop
jmp
add
add
sub
in
xchg
add
mov
add
push
add
jmp
nop
jmp
xchg
add
add
xlat
push
dec
cmp
jmp
add
faddl
mov
adc
call
add
out
push
or
loope
add
add
xchg
inc
fadds
ja
loop
or
xchg
inc
add
and
xchg
rcrb
std
push
add
aam
add
add
add
add
mov
nop
jmp
lahf
ret
pop
xchg
add
and
bnd
nop
jmp
add
add
add
inc
inc
push
mov
nop
jmp
jmp
dec
jnp
push
mov
xchg
ret
cmpsb
fadds
insl
xchg
and
in
je
mov
jno
add
nop
jmp
dec
inc
add
movb
call
nop
jmp
add
cld
push
mov
xchg
ret
add
xchg
mov
add
fcoms
mov
xchg
ret
insb
insl
push
mov
push
mov
xchg
ret
stos
add
add
nop
jmp
adc
xchg
arpl
push
xor
xor
push
mov
xchg
ret
add
jmp
jmp
hlt
incl
add
xchg
lahf
add
dec
push
push
mov
xchg
ret
add
add
add
jo
incl
sti
shr
nop
jmp
aam
add
std
mov
push
mov
xchg
ret
repnz
and
incl
in
call
mov
xchg
ret
aam
ss
push
jmp
nop
jmp
ret
lahf
add
xchg
adc
add
imul
add
call
nop
jmp
inc
addl
aam
pop
dec
call
nop
jmp
add
je
push
nop
jmp
add
add
add
test
repz
call
dec
add
xor
inc
add
mov
nop
jmp
aam
add
test
push
mov
xchg
ret
test
cmp
jmp
add
pop
add
nop
jmp
jmp
cmc
aad
and
decl
call
nop
jmp
and
add
add
mov
push
nop
jmp
fisttps
shll
incl
dec
pusha
nop
jmp
stos
mov
add
cmpsb
and
xchg
jae
pushl
lcall
mov
push
mov
xchg
ret
add
xchg
dec
ror
push
mov
xchg
ret
jmp
lods
push
nop
jmp
add
add
cmc
dec
push
mov
mov
nop
jmp
add
imul
add
insb
push
mov
or
add
add
add
push
imul
nop
jmp
fadds
jmp
fs
fisttpll
test
add
nop
jmp
xchg
add
nop
jmp
ljmp
add
pop
or
jmp
ret
add
insb
add
test
out
inc
add
add
adc
lcall
nop
jmp
add
insl
pop
add
mov
nop
jmp
push
push
add
int3
daa
add
or
add
nop
jmp
shrb
xchg
add
gs
nop
cld
mov
push
mov
xchg
ret
ja
lahf
mov
nop
jmp
add
int3
jmp
mov
adc
add
mov
push
nop
jmp
add
cmc
add
sub
adc
add
dec
add
fadds
add
mov
and
push
mov
xchg
ret
add
pop
add
rep
nop
jmp
jns
cmp
cmc
push
aam
add
add
add
push
mov
inc
pop
aam
mov
or
incl
add
out
add
nop
jmp
xchg
add
inc
fdivrs
call
pushl
add
jns
add
mov
jmp
xchg
add
add
add
jmp
add
add
add
add
push
and
repnz
add
nop
jmp
add
pop
fidivrs
nop
jmp
insl
repz
cmp
jmp
add
add
xrelease
mov
nop
jmp
add
add
mov
orl
jmp
xchg
xchg
mov
call
nop
jmp
insl
add
fists
add
xor
decl
push
push
mov
xchg
ret
xor
fadds
add
addb
add
add
add
nop
jmp
adc
xor
xchg
cli
incl
add
sub
push
nop
jmp
stos
jmp
stos
add
add
dec
inc
mov
pop
movl
add
ret
add
add
and
call
jmp
sub
add
dec
addl
push
mov
xchg
ret
add
inc
add
decl
test
inc
jmp
ljmp
nop
jmp
add
add
mov
nop
jmp
out
add
add
add
push
mov
xchg
ret
add
add
adc
ljmp
add
add
stos
add
add
add
xchg
mov
xchg
ret
cmpsb
lahf
xchg
and
decl
add
push
mov
xchg
ret
cmp
pusha
add
ds
mov
add
sub
cli
clc
fimuls
pop
push
mov
xchg
ret
add
and
add
pop
push
mov
xchg
ret
add
add
nop
jmp
mov
dec
cli
imul
nop
jmp
cmc
cmp
pop
add
cwtl
out
incl
add
sub
imul
lea
nop
jmp
add
cmpsb
aam
and
mov
outsb
add
and
add
add
imul
nop
jmp
mov
imul
pop
xchg
inc
add
add
or
mov
sub
push
xchg
inc
add
cmc
xor
incl
sti
lea
nop
jmp
insb
inc
cmpsb
xchg
add
mov
add
lcall
jmp
add
add
addb
add
leave
sub
incl
add
ret
adc
jo
add
nop
jmp
fcoms
aad
pushl
nop
jmp
fsubrs
add
repz
leave
nop
jmp
add
add
dec
mov
push
nop
jmp
and
scas
aam
or
add
add
insl
add
stos
inc
add
add
jmp
jmp
mov
add
popa
nop
jmp
insl
add
shr
mov
sti
call
add
add
add
push
mov
xchg
ret
stos
add
add
or
add
pop
cmp
sti
nop
jmp
add
sub
repnz
jne
push
mov
xchg
ret
mov
stos
push
nop
jmp
fadds
inc
and
adc
scas
inc
add
jmp
add
xchg
repz
fsubrs
popa
nop
jmp
add
pop
fsubrl
xchg
lret
add
nop
jmp
add
add
add
cwtl
sub
nop
jmp
add
add
lea
in
cmp
add
adc
add
nop
jmp
cmp
add
add
les
nop
jmp
lea
add
sub
pop
mov
nop
jmp
mov
dec
call
nop
jmp
rolb
mov
call
incl
add
pop
push
mov
xchg
ret
xchg
add
rcrb
push
mov
xchg
ret
ret
add
shl
test
into
mov
nop
jmp
add
pop
add
jle
push
mov
xchg
ret
add
add
pop
shlb
push
add
nop
jmp
add
lahf
add
add
xor
nop
jmp
add
jmp
push
mov
xchg
ret
add
mov
sti
dec
nop
jmp
add
ljmp
call
nop
jmp
add
add
mov
nop
jmp
pop
addl
jne
nop
jmp
inc
lahf
insl
sbb
lsl
add
incl
add
ss
mov
nop
jmp
add
add
icebp
push
add
add
add
inc
add
or
jmp
add
test
mov
cmpb
add
nop
jmp
aam
add
sti
add
add
incl
add
insl
mov
nop
jmp
test
add
add
insl
push
add
incb
lcall
add
imul
add
popa
nop
jmp
inc
jmp
adc
in
xor
dec
sub
je
pop
push
sub
add
mov
mov
xor
cs
mov
pushf
inc
mov
roll
add
imul
lcall
stos
push
add
js
arpl
jmp
add
push
mov
xchg
ret
ret
add
add
jge
nop
jmp
xor
add
push
mov
mov
nop
jmp
add
mov
add
das
dec
nop
jmp
lea
aam
add
insl
push
roll
fsubrl
rcll
mov
add
cmpsb
dec
sub
pop
xchg
inc
add
in
push
jbe
add
and
jge
inc
or
mov
xchg
ret
sub
mov
add
pop
add
xchg
inc
add
add
jmp
mov
incl
pop
aam
insl
xor
imul
std
call
mov
nop
jmp
dec
add
pop
add
cmpsb
in
call
add
repz
stos
add
stos
inc
add
add
add
nop
jmp
cmpl
sbb
cmp
call
add
repnz
dec
mov
nop
jmp
ljmp
add
sbb
repz
xchg
fistpll
jg
nop
jmp
repz
add
add
arpl
jmp
add
dec
inc
nop
jmp
lea
add
mul
add
nop
jmp
xor
add
cmp
mov
add
inc
xchg
adc
pop
lahf
fwait
cmp
nop
jmp
stos
scas
aam
stc
pop
push
mov
xchg
ret
insl
add
add
add
jmp
adc
fcompl
and
mov
xchg
ret
mov
jmp
add
add
or
push
mov
xchg
ret
xchg
add
in
call
add
add
sbb
rclb
xchg
inc
add
mov
ljmp
push
nop
jmp
insl
pop
add
add
mov
push
mov
xchg
ret
adc
add
push
add
pop
xor
nop
jmp
add
repz
add
push
nop
jmp
xchg
add
scas
add
shrb
sub
incl
jmp
out
les
xchg
sbb
push
in
incl
dec
scas
add
mov
call
add
add
addb
call
nop
jmp
add
xlat
xor
add
add
cmp
nop
jmp
add
add
sbb
jmp
std
add
add
and
outsl
dec
push
mov
xchg
ret
add
faddl
in
call
nop
jmp
add
add
push
ljmp
add
and
pop
shr
nop
jmp
add
jmp
pop
nop
jmp
rolb
push
cmpsb
lea
stos
mov
adc
call
add
and
or
add
faddl
add
add
add
jbe
add
rclb
mov
inc
add
add
pop
mov
nop
jmp
add
insl
add
in
pop
push
nop
jmp
in
add
add
add
or
jmp
add
inc
mov
mov
pop
nop
jmp
jns
add
and
add
out
addb
add
nop
jmp
cmp
inc
inc
add
xor
add
add
rep
push
mov
xchg
ret
add
repz
call
js
call
add
std
add
repnz
insb
inc
insb
insb
nop
jmp
add
leave
test
nop
jmp
jmp
in
sti
cmpl
nop
jmp
add
inc
push
add
add
clc
add
nop
jmp
add
add
add
nop
jmp
add
stos
insl
jmp
add
nop
jmp
inc
add
call
out
jmp
add
add
add
pop
mov
nop
jmp
add
push
mov
xchg
ret
in
add
pushl
add
push
decl
nop
jmp
add
repz
adc
incl
mov
pop
pop
push
mov
xor
flds
mov
add
add
add
add
popf
pushl
push
mov
xchg
ret
xchg
mov
pop
ljmp
xchg
fadds
ret
add
int
pop
jae
jmp
add
add
jne
nop
jmp
rolb
mov
incl
out
add
nop
jmp
add
xor
inc
inc
add
mov
nop
jmp
inc
or
nop
jmp
cmp
lahf
add
add
or
test
call
add
push
mov
xchg
ret
aam
stos
std
mov
push
nop
jmp
add
add
add
add
mov
push
mov
add
adc
repz
nop
jmp
add
addl
hlt
dec
mov
push
mov
xchg
ret
mov
test
jmp
aam
xchg
iret
push
push
mov
xchg
ret
add
fadds
gs
pop
nop
jmp
pop
inc
aam
scas
add
add
cmpw
nop
jmp
jmp
shl
nop
jmp
add
add
ljmp
inc
nop
jmp
add
sub
je
nop
jmp
pop
sub
jbe
nop
jmp
ja
push
ljmp
sub
incl
add
in
jmp
in
push
mov
sbb
shrb
gs
push
arpl
add
pop
ret
nop
jmp
inc
xchg
add
pop
adc
insb
sub
nop
jmp
xor
xor
add
int
jne
nop
jmp
xchg
cmp
int3
faddl
lods
inc
nop
jmp
out
imul
add
inc
sub
add
stos
add
add
cwtl
out
call
push
faddl
adc
cmc
call
incl
xor
iret
mov
add
ret
push
add
add
nop
jmp
add
xchg
imul
inc
call
inc
add
add
add
add
nop
jmp
add
mov
push
nop
jmp
add
add
add
add
pop
test
nop
jmp
and
add
mov
popf
inc
add
in
add
add
pop
popl
nop
jmp
cmc
mov
add
cmp
mov
xchg
ret
rolb
sub
add
jbe
add
mov
add
add
add
inc
push
nop
jmp
add
add
add
jmp
filds
imul
xchg
les
nop
cmpsb
add
jmp
jmp
lea
cmp
nop
jmp
ret
or
lcall
nop
jmp
add
add
cmc
add
fdivs
movb
mov
xchg
ret
add
push
add
filds
repz
jmp
add
sbb
add
nop
jmp
insl
xchg
cmp
or
nop
jmp
insl
add
fwait
cmp
nop
jmp
xor
imul
xor
nop
jmp
cmp
dec
shrb
pop
fdivs
and
cld
je
nop
jmp
add
aam
mov
nop
jmp
add
outsb
push
nop
jmp
add
add
add
jmp
and
add
insb
and
add
mov
nop
jmp
scas
insl
add
ss
mov
nop
jmp
add
add
add
add
xor
decl
nop
jmp
add
add
adc
mov
nop
jmp
add
sub
add
decl
xor
nop
jmp
inc
adc
imul
and
incl
add
dec
inc
push
mov
xchg
ret
add
jmp
add
xchg
nop
jmp
mov
add
add
xchg
add
fdivrp
call
ljmp
add
in
add
nop
jmp
add
add
add
ret
test
nop
jmp
add
faddl
lea
add
xor
jmp
cld
lods
nop
jmp
inc
std
ret
dec
dec
fdiv
adc
dec
push
nop
jmp
add
adc
add
lcall
test
call
jmp
jge
nop
jmp
stos
jmp
jg
nop
jmp
add
insl
add
pusha
push
mov
xchg
ret
ja
lahf
insl
in
shl
nop
jmp
repz
inc
add
push
nop
jmp
add
lahf
add
add
mov
pushl
push
mov
xchg
ret
add
imul
nop
jmp
faddl
aam
subl
movsb
mov
aam
mov
nop
jmp
xchg
mov
in
push
mov
xchg
ret
ss
loop
enter
nop
jmp
addl
lods
push
mov
add
add
add
das
add
mov
mov
xchg
ret
add
mov
mov
mov
nop
jmp
add
add
xor
lock
jmp
add
jmp
inc
loopne
jmp
inc
add
std
add
add
inc
adc
jmp
add
add
sub
mov
push
nop
jmp
int3
cmp
mov
nop
jmp
add
and
add
add
stc
call
add
insl
add
adc
ljmp
jmp
add
add
adc
imul
dec
test
jns
xchg
popf
push
nop
jmp
and
repnz
jmp
nop
jmp
pop
add
add
add
mov
and
js
jmp
ret
add
scas
addl
push
iret
rep
nop
jmp
add
fadds
mov
popf
jmp
nop
jmp
add
add
cmp
add
incl
add
sbb
sti
incl
add
add
repz
test
idiv
call
call
or
andnps
xchg
ret
lea
xchg
or
jmp
fadds
stos
add
add
stos
add
nop
jmp
add
add
xchg
mov
jl
clc
push
mov
xchg
ret
add
fbstp
incl
add
jmp
ret
dec
aam
and
and
lcall
nop
jmp
add
add
add
outsl
popa
fs
jmp
fadds
ret
rorb
inc
nop
jmp
add
int3
mov
nop
jmp
add
xchg
and
sbb
insb
std
int3
add
add
pop
add
nop
jmp
add
add
pop
fcomps
ljmp
add
mov
or
nop
jmp
repnz
add
iret
or
inc
add
addb
xchg
out
add
push
mov
xchg
ret
add
test
push
add
jmp
add
insl
and
shlb
call
ds
push
mov
xchg
ret
add
xchg
pushf
call
nop
jmp
add
sub
not
nop
jmp
add
add
xchg
sub
in
call
incl
add
arpl
incl
add
push
mov
push
push
mov
xchg
ret
mov
jne
nop
jmp
mov
call
add
ljmp
jmp
add
add
fimull
sub
incl
fdivrs
test
and
and
add
add
cmpsl
inc
add
int3
and
fsts
jmp
add
out
jmp
arpl
jl
nop
jmp
lahf
add
push
add
add
subl
nop
jmp
add
adc
jmp
lret
xor
pushl
insb
and
sub
push
add
stc
add
nop
jmp
add
jmp
add
add
imul
add
stos
adc
addb
in
jp
notl
incl
xor
add
fmull
imul
incl
add
stos
dec
adc
aad
inc
add
add
insb
aas
mov
push
mov
xchg
ret
fsubs
and
mov
nop
jmp
add
add
in
adc
call
call
jmp
add
nop
jmp
aam
insb
add
push
nop
jmp
add
jmp
push
add
add
stc
push
push
mov
xchg
ret
push
add
mov
add
movsw
inc
add
inc
mov
aaa
dec
call
nop
jmp
int3
add
fcomip
and
pop
nop
jmp
rolb
add
leave
mov
nop
jmp
sub
push
mov
out
pop
imul
std
ret
add
mov
add
mov
add
aas
mov
push
push
cmp
int
out
push
lahf
addl
add
xor
jmp
add
mov
add
add
scas
sti
in
rcrl
sbb
cltd
cmp
add
in
and
inc
add
add
add
fsubrs
mov
add
ret
add
dec
dec
inc
add
lds
mov
jmp
add
daa
add
add
adc
scas
jmp
add
add
pop
daa
add
add
insb
cmp
add
jae
jmp
add
out
test
xor
ljmp
push
add
lcall
add
call
pop
xor
dec
frstor
push
add
addl
add
iret
jbe
outsb
aas
sahf
push
out
mov
pop
jecxz
fidivl
sub
popf
xchg
call
add
js
ret
add
cmpsl
add
incl
add
int
add
sub
add
inc
add
fists
xor
lcall
inc
add
data16
add
stc
cmp
clc
dec
pop
hlt
fwait
sbb
inc
add
sbb
add
js
sti
lahf
mov
int
inc
add
ror
sbb
add
dec
jae
push
loope
scas
cmp
xchg
and
call
mov
xchg
add
lcall
add
pop
xor
inc
add
mov
xlat
xchg
push
add
inc
add
add
mov
outsb
sbb
mov
test
inc
add
push
add
aaa
xor
std
lods
cmp
ljmp
add
add
mov
ficompl
pop
jnp
mov
mov
rcrb
lcall
add
inc
add
add
decl
add
sahf
cmc
jmp
add
dec
inc
add
cli
inc
add
incl
incl
hlt
and
jmp
add
fists
add
add
mov
add
jmp
add
add
add
aaa
fst
add
rolb
add
mov
fbld
add
out
add
pushl
jmp
add
add
push
add
add
nop
push
sub
add
add
leave
call
sbb
adc
jmp
add
mov
add
add
mov
xchg
addb
mov
xor
incl
add
add
lds
mov
add
loopne
mov
add
loop
xchg
jp
dec
in
adc
lcall
rcl
rclb
add
jns
add
jp
outsl
mov
cwtl
insl
cmc
movsb
add
hlt
jb
fistl
data16
mov
push
add
add
daa
add
dec
push
test
pop
cmpsb
add
lds
repnz
sbb
inc
add
insb
xchg
daa
add
xchg
xchg
push
les
adc
jp
or
cli
or
and
pushl
lcall
jb
pushl
add
mov
sarl
add
dec
add
jnp
add
loopne
cmp
xchg
and
incl
add
enter
jmp
pop
lods
dec
inc
add
jmp
jo
jmp
add
or
insl
out
adc
lcall
roll
add
push
add
mov
add
add
add
lret
add
mov
sub
add
out
dec
sbb
lods
ret
pushf
jae
push
mov
push
add
xchg
mov
add
loop
cltd
fldcw
sti
pop
sbb
cmp
into
sub
push
pop
pop
add
add
add
add
push
rcrb
add
mov
add
rol
add
jmp
ret
add
out
push
add
jmp
add
in
and
call
add
push
mov
cmp
add
call
add
xor
ljmp
mov
cmp
mov
add
add
add
add
add
cmpsl
add
adc
jne
daa
add
cld
and
jmp
add
add
add
clc
jp
roll
add
fstps
incl
pushl
std
int3
sub
xor
incl
pushl
loopne
testl
call
stc
mov
adc
fnsave
pushl
jle
cwtl
movsl
add
push
test
pop
in
cmpsl
add
fbstp
xchg
or
add
fcmove
cmp
in
ds
push
add
sbb
push
pop
aas
adc
pushl
movsb
add
arpl
call
xchg
pushf
jp
movb
repnz
add
fidivs
stc
jae
decl
call
push
sub
roll
mov
ss
jp
cli
pop
ss
int3
fcompl
add
int
dec
and
add
adc
decl
add
dec
sub
add
ljmp
cmp
mov
xor
pushl
decl
mov
clc
addb
in
dec
sti
les
cmpsl
add
xlat
push
lock
mov
add
jp
add
add
sub
dec
jo
aas
mov
bound
decl
cmp
ljmp
call
jp
add
xor
call
add
data16
add
cli
mov
mov
sbb
add
lret
ret
add
add
add
daa
add
lcall
cs
cld
pop
scas
loope
mov
pop
cmp
add
xchg
sub
add
aad
mov
add
cltd
sbb
cmpsb
add
xchg
jnp
sub
repz
push
xchg
loop
test
xchg
add
addb
jno
call
or
mov
xor
add
add
pop
jle
std
fs
xor
add
add
repnz
add
enter
add
jbe
movsl
add
add
pop
mov
les
shl
add
jecxz
cmp
cmp
jmp
add
mov
lcall
mov
call
jle
jb
inc
add
pop
dec
popf
or
add
ljmp
add
inc
add
push
add
sbb
aam
lcall
mov
xor
decl
mov
addb
add
call
jp
add
out
jmp
pop
into
mov
add
add
das
in
ss
jno
inc
add
xor
incl
icebp
push
dec
movl
int
add
cs
push
fdivs
mov
xchg
jnp
fcmovne
cmp
xchg
and
stos
push
push
add
aaa
ret
add
and
lcall
hlt
pusha
add
xchg
adc
ljmp
add
xor
jmp
add
popa
add
xchg
sti
jg
fdivl
ljmp
pop
adc
ljmp
add
jmp
bound
lcall
inc
add
data16
pop
aam
add
jp
std
jno
call
addl
lock
dec
movsl
add
repz
jg
add
mov
add
mov
mov
out
outsl
fcmovb
add
jne
lods
cmp
sbb
inc
add
out
jo
ljmp
mov
test
data16
or
add
add
mov
daa
add
cmp
mov
mov
pushf
xchg
popa
add
shrl
sbb
sub
testl
lcall
js
add
int
add
popf
div
out
push
jmp
dec
xlat
or
jmp
cli
dec
cli
dec
xor
push
add
into
repz
add
push
add
jge
stos
pop
fnstenv
or
decl
scas
dec
mov
adc
call
in
cmp
jle
mov
icebp
ss
add
call
adc
call
inc
add
in
inc
add
sbb
out
je
mov
decl
xchg
add
pop
lcall
add
mov
add
xchg
xor
ljmp
mov
add
inc
add
or
xor
inc
add
add
jbe
out
leave
mov
mulb
cwtl
fstpt
add
pop
icebp
cli
jg
add
sub
mov
push
add
cmp
add
lds
fwait
shll
call
jl
add
in
shrl
add
add
push
enter
in
div
fsts
jmp
add
add
add
es
ret
add
leave
movb
ret
aaa
imul
lds
aam
movl
add
add
inc
add
add
xor
arpl
inc
add
add
add
mov
add
mov
decl
add
pushl
fisubrl
add
add
cmp
xchg
or
test
mov
add
ljmp
add
cmp
testl
xchg
lret
cmp
inc
add
sbb
push
add
lahf
out
jae
jp
loopne
test
ret
add
mov
stos
das
in
hlt
mov
lret
add
mov
inc
add
jle
icebp
or
test
test
pop
add
dec
mov
insl
add
add
pop
jno
incl
lahf
sub
add
sbb
outsb
push
adc
jmp
add
add
add
arpl
push
fdivs
mov
mov
xor
jno
out
sub
call
sti
pop
je
add
cmp
insb
jb
call
ljmp
outsb
inc
add
addl
pop
mov
add
decl
lea
add
cwtl
aam
pop
xor
incl
mov
add
addb
add
call
push
add
data16
lock
add
jecxz
jne
mov
filds
add
mov
add
jge
adc
incl
add
popf
xor
cli
mov
push
clc
dec
test
fdivrl
push
int
cmc
stos
and
jmp
ljmp
jae
in
cmp
add
mov
mov
call
call
jno
lcall
sub
add
roll
add
push
stos
lret
sbb
nop
mov
call
ljmp
adc
jmp
add
lock
call
add
or
int
add
sbb
mov
dec
testb
add
xor
lcall
add
add
in
aad
fmuls
dec
pop
xchg
xor
call
sub
add
push
add
fistpll
movsb
add
push
add
mov
add
add
push
mov
add
add
add
xor
pushl
outsb
addl
fwait
stos
jno
jge
add
xor
mov
add
push
je
nop
test
rcrb
xlat
or
outsb
dec
call
add
add
leave
mov
add
incl
data16
add
dec
or
and
jmp
ret
add
xor
add
add
popa
add
adc
decl
call
add
ljmp
xchg
test
pop
and
push
sbb
add
cwtl
jp
fwait
scas
stos
into
pop
xor
decl
adc
incl
add
ja
add
dec
mov
add
aad
outsl
ficoml
add
jns
sbb
add
add
pop
movsl
add
bound
jmp
lcall
js
inc
add
fsts
add
jnp
add
add
shl
rclb
out
cmp
lret
data16
fnsave
neg
or
lds
stos
push
fimull
add
shlb
push
push
inc
add
cmpsb
add
mov
ja
push
add
addl
jnp
mov
movl
push
movsb
add
cmp
addr16
ds
sbb
add
pop
lds
sbb
sbb
cmp
rorl
rcl
jp
add
mov
add
lods
mov
adc
jmp
fnstcw
and
scas
or
push
add
jle
add
lcall
aaa
jmp
mov
das
jp
add
scas
sahf
movsb
add
int3
push
add
sahf
jne
add
add
nop
sahf
lea
add
pop
add
pop
jmp
add
ret
filds
add
arpl
jns
inc
add
push
test
cmp
jmp
add
sbb
incl
mov
jp
pop
jbe
out
inc
add
movb
xor
ljmp
test
mov
addb
add
inc
add
push
add
push
cmpsb
add
add
in
sub
push
loopne
sahf
add
add
addb
lock
add
add
mov
push
sahf
pop
int3
int3
sub
loopne
push
add
sbb
adc
cmp
push
inc
add
push
xchg
negb
mov
push
add
les
testb
insl
inc
add
adc
add
xchg
mov
add
fnstenv
incl
add
xor
pushl
cmp
or
add
dec
in
sbb
add
dec
inc
add
loopne
mov
xchg
and
pop
stos
je
adc
jmp
add
mov
ljmp
add
and
call
pop
adc
call
pusha
add
pop
add
int3
push
call
xlat
jp
add
mov
das
stos
inc
add
jns
sub
add
cltd
fcmovnbe
fistps
add
push
add
movl
pop
and
test
add
add
shlb
jmp
incl
push
or
add
addb
lcall
incl
add
add
or
decl
call
cli
cmp
add
bnd
push
mov
dec
stos
dec
addl
dec
fwait
mov
jmp
mov
inc
add
add
je
add
stos
ljmp
adc
pushl
das
or
loop
xchg
addl
pop
add
call
inc
add
movsb
add
cmp
movsl
add
add
scas
imul
add
aas
iret
add
add
mov
add
dec
mov
add
add
sbb
jmp
add
jns
add
add
fidivs
rolb
sub
data16
pop
add
push
add
mov
add
cmp
movsb
add
out
sti
test
repnz
pop
cwtl
repnz
sub
decl
or
sti
sub
add
jmp
inc
add
ja
movl
js
lret
inc
add
mov
stos
dec
daa
add
add
jo
decl
mov
outsb
movl
addr16
add
mov
adc
pushl
sub
popa
add
add
call
add
or
movl
add
sbb
cmp
pop
pop
inc
add
pop
scas
addl
and
mov
add
add
push
add
mov
ljmp
mov
fwait
rorb
cs
and
dec
daa
add
adc
incl
add
sub
add
push
mov
fdivrl
pop
pop
pusha
add
jmp
push
add
and
ljmp
push
add
out
outsl
in
mov
lods
add
call
in
adc
mov
add
add
add
add
add
rorb
pop
mov
in
mov
sti
int
add
lea
add
decb
add
int3
movb
xchg
aam
add
and
pushl
pop
or
dec
vmread
ret
add
pop
sbb
leave
out
mov
add
movl
mov
negb
pop
add
cmp
incl
pushl
dec
sahf
inc
add
adc
fistpll
and
addb
mov
call
add
out
add
repz
add
add
das
stc
inc
add
pop
pop
add
dec
imul
fxch
inc
add
ret
add
xor
dec
add
push
aas
pop
out
or
out
sbb
and
lcall
add
js
scas
rcrl
scas
jnp
add
repz
add
cmpsb
add
lcall
movl
dec
int
xor
decl
add
mov
sub
adc
into
sbb
repz
mov
mov
into
pusha
add
push
add
fsts
mov
jg
cmovge
add
jbe
add
add
mov
jo
call
add
popa
add
sub
xchg
fsubrs
cld
test
cmp
out
scas
das
cmpsb
add
add
pushl
add
inc
add
cld
mov
incl
add
loop
rolb
mov
adc
jmp
add
xchg
pop
sbb
add
dec
or
les
mov
xor
or
mov
pop
xchg
xchg
mov
add
std
pop
clc
loope
outsb
or
hlt
rolb
add
loope
add
mov
fisubrs
cmp
sub
push
add
pop
jge
push
das
mov
push
addb
add
add
add
out
pop
lcall
xlat
loopne
sub
add
add
in
adc
lcall
lret
add
in
mov
add
ljmp
add
jns
sbb
nop
aas
and
jmp
or
cmc
aas
test
cltd
push
add
leave
jb
ljmp
lcall
mov
dec
add
cmp
add
add
inc
add
into
ds
add
lcall
sub
mov
sahf
popf
sbb
add
and
call
mov
add
out
xchg
or
mov
out
movb
add
jl
add
je
add
addb
add
add
mov
add
mov
ss
test
movsb
add
std
aad
add
les
or
rolb
push
inc
add
and
pushl
add
xor
call
cmp
add
call
lods
adc
incl
add
hlt
xchg
aaa
ja
add
repnz
or
add
mov
push
add
testb
call
add
or
add
or
adc
cmp
inc
add
mov
fbld
or
fldl
fnstsw
add
add
clc
loopne
dec
fwait
xchg
sub
add
les
add
pop
add
mov
add
incl
incl
pushl
dec
adc
add
mov
xchg
scas
inc
add
add
in
sub
imul
add
mov
std
mov
add
jmp
inc
add
push
push
add
nop
sub
add
std
or
add
add
lds
cmp
add
inc
add
push
xlat
sub
sub
imul
xchg
int3
sbb
fsubrl
dec
imul
inc
add
adc
jmp
cmc
popf
std
pop
xchg
adc
call
jbe
add
add
add
add
sub
add
mov
mov
mov
xchg
fwait
xor
add
add
dec
ljmp
fstpt
push
push
data16
pop
adc
in
add
pop
inc
add
xchg
loop
out
clc
gs
add
inc
add
add
call
cmp
add
xor
lcall
fsub
add
mov
add
xchg
adc
incl
mov
loop
push
ds
add
xchg
pop
addb
sub
xor
dec
loope
add
decl
jmp
dec
push
add
data16
pop
jno
incl
pop
aas
cli
push
add
outsb
movb
add
jns
add
add
add
jmp
add
add
or
add
dec
pusha
add
mov
addb
int3
xlat
pushf
xor
jmp
add
add
bnd
aad
add
add
add
adc
decl
and
jl
add
pop
xchg
pushl
ljmp
ficoms
decl
or
aas
or
fsubrl
ljmp
lret
dec
pusha
add
fchs
add
pushl
add
add
decl
xchg
data16
add
and
jmp
and
decl
pop
leave
sub
add
inc
add
add
and
push
push
and
decl
dec
mov
or
add
inc
add
out
inc
add
add
add
movb
add
dec
jbe
add
mov
scas
js
add
repz
dec
jle
add
adc
ljmp
jg
sbb
jb
decl
addl
pushf
cmp
inc
add
insl
fimuls
cmp
add
fdivrl
mov
jne,pn
in
call
rorl
pop
std
jmp
add
add
incl
dec
dec
je
add
jmp
bound
call
push
add
aaa
add
ljmp
paddsb
or
pusha
add
into
push
fwait
rcll
cmp
jmp
or
add
mov
mov
xchg
movl
das
mov
add
iret
test
fiaddl
fsubs
call
add
roll
fmul
jmp
xor
add
add
decl
push
xor
or
lock
call
add
xchg
mov
lret
or
add
call
sbb
sub
add
lahf
stos
pop
add
dec
sti
adc
jmp
call
add
or
add
add
mov
test
add
mov
stc
jge
add
pop
inc
add
sti
scas
bound
mov
add
inc
add
je,pt
sbb
mov
imul
in
and
push
inc
add
fmul
and
decl
insl
test
js
arpl
lcall
cmp
xlat
push
add
mov
rcrl
sub
xchg
xchg
sbb
scas
imulb
add
pop
cmp
add
add
sti
aas
jge
add
inc
add
js
sahf
push
scas
sub
aad
fcmovb
add
aam
cmp
inc
add
mov
cmp
add
add
sar
mov
jns
hlt
and
pushl
aaa
je
pop
je
add
mov
add
outsb
mov
idivl
sub
jecxz
fsubl
fbstp
xchg
mov
fstpl
jmp
and
push
dec
push
add
cmp
jbe
add
add
add
cltd
mov
adc
push
cli
mov
add
or
cli
cwtl
add
decl
sub
mov
call
int3
xchg
lret
sbb
daa
add
jmp
sbb
mov
cld
dec
daa
add
decl
mov
add
xlat
cmp
add
ja
add
add
sub
add
dec
push
add
xchg
xchg
popf
aad
add
cmp
cmp
add
jmp
add
das
add
mov
mov
dec
movb
add
push
adc
pushl
fdivr
cli
cmp
sti
adc
jne
stc
test
add
dec
xchg
int
stc
fwait
out
pop
push
add
pop
cmpsl
add
rorl
inc
add
pushf
or
push
movb
add
adc
pushl
in
fucomp
xor
decl
ss
xchg
pop
push
add
sbb
cmp
incl
add
fsubrs
and
lcall
cmp
add
pushl
in
dec
xchg
push
test
popa
add
lcall
sub
mov
ja
sub
outsl
adc
lcall
mov
rcrb
add
loop
enter
add
js
add
xchg
push
add
push
adc
inc
add
lcall
jb
lcall
daa
add
add
adc
pusha
add
inc
add
or
ret
add
nop
in
dec
pop
cmp
mul
add
stc
and
jmp
fdivr
repz
pusha
add
fdivl
jle
push
add
addl
sub
aad
add
inc
add
mov
adc
pushl
add
push
add
add
pushl
push
add
jmp
add
add
pusha
add
addb
sub
cmp
add
add
dec
daa
add
add
dec
jle
cmp
pop
outsb
out
push
add
and
jmp
jmp
ja
add
mov
mov
add
mov
ss
cld
sub
mov
fbld
pop
pop
lret
sub
loop
pop
sbb
add
jle
add
adc
call
push
addl
add
pushf
stos
push
add
mov
popa
add
mov
add
in
mov
addb
add
enter
add
jecxz
xor
incl
lock
add
pop
movsl
add
mov
add
bound
pushl
add
dec
int
add
dec
xchg
push
lret
pushf
in
data16
into
fisubrs
add
or
add
sti
addr16
add
call
adc
decl
add
mov
sbb
xchg
hlt
xchg
lea
dec
mov
cmp
pop
adc
dec
adc
add
in
insl
lds
hlt
sbb
movb
add
cmp
add
ret
dec
mov
add
lahf
cld
mov
leave
mov
add
addb
jle
add
sub
int
imul
add
nop
dec
mov
xor
imul
xor
dec
in
ret
es
lcall
pushl
imul
add
sub
pop
cld
xor
jmp
add
add
lret
int3
mov
lret
sub
add
sub
or
stos
fidivs
jp
add
add
add
out
mov
data16
jg
add
push
inc
add
xchg
jle
in
sub
mov
rcrl
adc
test
repz
adc
lcall
mov
in
mov
lea
dec
mov
pop
loopne
out
test
mov
adc
jno
lcall
ds
outsl
scas
jl
addb
pop
pusha
add
xchg
mov
add
adc
jg
dec
xor
incl
add
test
mov
add
add
aas
add
push
aaa
loop
pop
mov
xor
sahf
push
add
add
push
add
movb
add
ljmp
mov
in
and
icebp
and
pushl
decl
mov
loop
rcl
push
push
test
adc
push
and
inc
add
xchg
outsl
sub
add
push
or
add
jnp
add
sbb
xchg
sub
jp
inc
add
jo
call
lcall
fwait
push
add
add
out
into
ja
mov
call
cmpsb
add
cmc
jmp
mov
hlt
inc
add
lcall
and
decl
add
in
xchg
out
push
pop
lods
inc
add
and
jmp
filds
mov
sbb
ja
inc
add
cli
push
dec
call
rolb
lock
outsb
js
xchg
xor
incl
sbb
cmpsb
add
pop
sub
sbb
mov
shrl
out
mov
add
inc
add
loopne
mov
pop
das
xchg
push
add
fwait
mov
sub
add
xor
jmp
add
cwtl
out
cwtl
addr16
add
add
pusha
add
xor
ljmp
xchg
sub
push
insl
cmp
add
lcall
lods
dec
negl
add
sbb
add
add
call
ljmp
add
inc
add
fsubp
add
ret
add
add
pop
inc
add
stc
out
push
sahf
or
inc
add
test
jae
call
xor
ljmp
test
lret
call
add
stos
and
jmp
add
sbb
add
movsl
add
jmp
add
jmp
push
add
add
fildll
add
pop
add
mov
push
push
add
jecxz
adc
call
decl
xchg
cmp
adc
incl
add
scas
fidivrl
ret
add
movsb
add
or
add
gs
dec
in
and
in
bnd
xchg
pop
in
cmpsl
add
jno
call
jbe
add
shl
add
mov
pmaxub
add
sbb
mov
stos
pop
repz
add
daa
add
add
add
repnz
xchg
js
imul
dec
add
fdivr
mov
mov
add
dec
inc
add
adc
jns
ss
add
pop
pop
lret
push
repz
add
or
add
push
roll
add
fldcw
mov
sbb
mov
add
addb
adc
decl
jecxz
nop
xchg
lods
xor
incl
decl
add
iret
insl
push
add
jle
jmp
stos
pop
in
xchg
dec
inc
add
pop
adc
mov
push
add
inc
add
cmpsb
add
mov
add
lahf
xchg
mov
call
add
add
mov
add
add
xchg
xchg
mov
add
jae
ljmp
js
add
les
lea
sbb
dec
std
adc
dec
mov
add
imul
add
add
mov
mov
pusha
add
popf
jbe
mov
jmp
add
and
xor
decl
ret
pusha
add
loope
add
dec
adc
inc
add
jae
dec
sbb
filds
add
and
jmp
add
imul
inc
add
mov
int3
cmp
mov
adc
ljmp
pop
inc
add
mov
and
jmp
mov
adc
jmp
jmp
add
lcall
ljmp
fbld
add
add
add
mov
push
add
xchg
into
jne
call
jmp
cmpsl
add
mov
sti
lods
xchg
imul
out
sbb
lods
push
add
push
test
jno
call
fucomi
ret
add
jmp
frstor
incl
pop
loope
and
mov
adc
add
cmp
add
xchg
aaa
jmp
or
jbe
pusha
add
inc
add
mov
cli
xor
pusha
add
dec
jecxz
jns
add
add
call
add
les
mov
dec
ss
shlb
scas
inc
add
add
xchg
dec
xchg
ds
shrb
enter
cmp
add
jmp
adc
dec
clc
push
out
sbb
add
rolb
stc
out
push
cmp
add
push
mov
add
popf
jle
nop
adc
dec
in
sub
add
sahf
out
mov
add
lock
and
sti
adc
jnp
jecxz
xchg
pop
lahf
test
pop
or
bound
incl
lcall
lcall
test
push
add
add
add
incl
insb
loop
cmpsb
add
leave
movl
cltd
mov
add
mov
add
push
loopne
stc
stos
mov
add
mov
dec
loope
mov
add
pop
shll
ljmp
sbb
jnp
push
add
add
and
aad
jp
add
sbb
or
roll
push
add
inc
add
or
add
mov
cli
inc
add
cmp
lcall
inc
add
je
pop
mov
cmp
in
std
xor
pushl
addb
call
add
dec
addl
aas
shlb
add
clc
add
push
addb
mov
add
popa
add
jmp
add
incl
add
xor
mov
or
fs
aaa
mov
add
aas
das
stos
test
test
mov
add
enter
add
call
fwait
cmp
add
xchg
lahf
add
jge
add
mov
cld
movsl
add
inc
add
cli
xlat
xor
lds
test
add
aas
das
loope
addb
popf
in
out
fsubr
and
decl
bound
mov
or
push
stc
mov
push
mov
das
mov
add
add
add
push
add
mov
sbb
testb
jmp
xchg
sbb
ljmp
add
add
addl
cwtl
cmc
or
stc
xor
out
fisubl
or
xchg
test
add
bound
incl
add
dec
pop
call
jns
add
lods
pop
mov
ret
xchg
inc
add
fmul
mov
sbb
ret
add
mov
add
dec
out
pushf
pop
jae
cmp
roll
call
sbb
add
add
add
pushl
add
inc
add
xor
decl
out
iret
ret
jmp
pandn
add
or
jp
add
add
mov
sub
outsl
push
rolb
add
dec
aaa
in
push
push
adc
mov
xor
enter
mov
xor
jmp
add
adc
mov
bound
ljmp
cmpsl
add
push
stos
inc
add
add
push
add
add
std
out
das
mov
pop
fwait
or
add
add
lods
or
out
and
std
les
mov
pop
jecxz
iret
jb
call
ret
add
cmp
in
stos
cmp
shlb
imul
cmc
push
cmp
mov
push
aad
outsb
insb
inc
add
add
xor
call
add
add
xchg
mov
add
or
add
lds
fnstsw
or
mov
rcl
pushf
push
jge
add
roll
add
push
and
decl
add
add
sarb
add
gs
pusha
add
iret
xchg
out
pop
pop
add
insb
mov
dec
xor
push
add
jp
dec
lea
pop
mov
mov
inc
add
cmpsb
add
add
arpl
call
decl
pushl
add
ljmp
mull
add
lods
jns
mov
jne
add
push
insl
scas
xor
incl
add
inc
add
jno
jmp
pushl
push
add
pusha
add
fmuls
mov
add
pushl
ret
add
inc
add
mov
adc
adc
rcll
ljmp
sbb
mov
sub
rolb
jg
xor
xchg
xor
inc
add
cwtl
imul
or
fdivr
int
addb
mov
rolb
add
or
add
lcall
jbe
add
data16
test
nop
inc
add
loop
mov
roll
je
lret
jmp
add
adc
call
xlat
out
adc
mov
inc
add
lea
jmp
add
jmp
divl
add
xchg
ret
add
ja
sub
das
int
add
adc
jno
mov
popa
add
or
add
fucompp
imul
add
and
add
mov
aad
mov
pop
jecxz
xor
decl
xchg
cs
mov
inc
add
imul
add
es
sar
popf
add
fbstp
jg
add
sbb
loope
jmp
icebp
pop
xor
lret
inc
add
mov
pushl
add
imul
mov
cmp
jns
push
add
mov
mov
fimuls
add
xchg
inc
add
add
movsb
add
add
incl
sub
sub
add
incl
incl
add
sub
int3
add
shrb
push
xor
decl
add
scas
sub
add
add
add
hlt
pop
lcall
test
jecxz
and
inc
add
aam
add
add
hlt
fcoml
cmp
jno
call
add
inc
add
add
mov
hlt
pop
movsl
add
pop
or
fisttps
add
add
add
xchg
sbb
add
fstps
pop
hlt
add
cmp
mov
add
jle
movsl
add
push
add
mov
jmp
mov
add
push
add
mov
mull
lcall
in
fbstp
add
sub
add
decl
add
mov
add
xchg
inc
add
add
movq
movb
add
add
out
jbe
dec
add
incl
add
xchg
add
scas
cmp
add
dec
daa
add
or
mov
ja,pn
inc
add
xchg
xchg
mov
and
ljmp
xchg
jae
mov
mov
inc
add
int
aam
xor
jmp
add
out
loop
dec
adc
inc
add
mov
in
lret
mov
add
mov
push
setle
mov
in
mov
sub
dec
cmp
inc
add
jmp
add
stos
push
add
xor
call
pop
adc
incl
push
xchg
ja
addl
sahf
mov
repnz
add
call
mov
leave
dec
add
decl
jb
fcoms
adc
js
jle
pop
sbb
int
lods
cwtl
pop
leave
pop
rolb
fists
add
inc
add
fcompl
movb
xchg
ror
sub
and
or
aaa
addb
add
pop
cmp
push
rcrl
add
add
loope
shll
imul
repnz
add
add
jo
incl
call
sbb
add
pusha
add
addl
xchg
mov
out
jns
arpl
pushl
add
add
jl
and
pushl
fsubrl
roll
stos
and
jmp
add
lret
iret
jnp
xlat
add
test
addb
push
mull
add
clc
jge
sub
pop
cli
pop
lds
scas
mov
add
jmp
add
nop
js
add
add
push
add
out
add
decl
popa
add
pushf
out
icebp
mov
pop
pop
sbb
add
xor
ljmp
add
add
mov
add
lret
rorl
into
xchg
adc
jmp
call
add
ret
add
add
lcall
roll
add
add
mov
add
xchg
cmpsl
add
sbb
iret
adc
ljmp
pop
add
add
roll
loop
and
call
call
jecxz
pop
xor
call
fiaddl
add
add
fadds
add
add
sbb
pop
cmp
add
pop
jge
add
fsubs
lahf
jmp
add
xchg
pop
add
nop
push
aad
into
icebp
lcall
cmp
inc
add
add
in
pop
loop
mov
add
and
pushl
add
addb
push
call
add
push
pushf
add
sub
add
xor
add
mov
mov
sarl
adc
lcall
mov
jmp
xchg
xor
lcall
int3
dec
test
push
add
out
scas
int
add
mov
add
push
add
les
clc
dec
stos
dec
xor
sbb
mov
xor
jmp
xchg
ds
cmp
jl
jb
incl
inc
add
lcall
mov
jp
lret
pushf
addb
inc
add
add
push
add
mov
lods
mov
pusha
add
fs
fnsave
jne
rcl
or
sub
add
call
lret
ss
or
mov
adc
lcall
cltd
sub
cmp
add
pusha
add
push
jnp
add
xchg
mov
add
ljmp
pop
mov
mov
add
imull
push
rorb
add
mov
lcall
add
dec
es
add
add
lock
xor
call
aaa
mov
add
addl
add
ja
add
add
movsb
add
add
in
add
ljmp
mov
popf
mov
xor
jmp
or
mov
add
fidivrs
add
add
bound
jp
js,pn
xor
call
and
call
ds
add
push
add
push
add
xor
call
aad
lods
xchg
sbb
fisttpl
loop
dec
stos
sbb
in
pop
push
mov
add
movl
adc
add
add
jecxz
inc
add
jmp
addb
add
adc
decl
add
add
inc
add
pop
inc
add
decb
add
sub
jbe
add
jl
cs
scas
stos
sub
mov
sub
loop
stos
lds
adc
inc
add
adc
adc
call
add
sub
mov
push
jo
decl
adc
pushl
add
xchg
fidivrl
pop
add
add
jnp
adc
pushl
lds
mov
add
push
cmp
insb
add
ljmp
or
cmpsl
add
add
cmc
lds
adc
and
mov
add
dec
xchg
or
add
add
sbb
outsb
xlat
jmp
rolb
out
and
jmp
add
add
adc
pushl
lcall
call
add
pop
jno
ljmp
ljmp
cmp
add
xchg
cmpsl
add
add
add
call
pop
add
mov
repz
rcr
xchg
sbb
mov
jno
call
sbb
jp
adc
call
lcall
std
stos
jns
add
pop
pop
add
leave
and
push
mov
add
mov
incl
add
mov
les
fildl
call
add
lea
outsl
xor
inc
add
add
insl
lds
test
dec
mov
sub
adc
cmp
stos
mov
mov
mov
das
shl
add
push
dec
mov
incl
sub
add
or
in
cmp
addb
push
push
add
push
mov
add
pop
cwtl
pop
out
pop
mov
add
hlt
ss
cmpsb
add
add
add
jp
cwtl
aas
adc
lcall
int3
push
dec
cmc
mov
push
add
xor
jle
or
addb
repz
add
ja
cmp
add
ljmp
cmp
push
add
pop
inc
add
addb
sub
pop
push
add
adc
xor
jmp
sahf
loope
sbb
pushl
dec
in
dec
aam
add
scas
js
outsl
dec
jno
lcall
lret
add
mull
mov
js
rcrb
scas
imul
shl
jno
incl
add
add
jmp
add
xor
inc
add
pop
jecxz
outsb
enter
imul
call
add
mov
pop
mov
add
iret
addb
sbb
add
sti
jle
sahf
enter
add
decl
sbb
imul
and
pushl
pushf
cltd
mov
add
add
pusha
add
push
add
xchg
loope
movsl
add
or
add
sub
add
dec
push
add
pop
dec
add
incl
out
jae
pushl
add
aaa
jp
xchg
gs
and
jnp
rcl
int
adc
push
xchg
fdivs
add
stos
jne
in
lret
adc
mov
jo
in
aam
mov
or
add
jp
je
add
decl
pop
mov
mov
mov
add
incl
add
sub
sub
inc
add
xor
incl
add
leave
inc
add
cltd
data16
add
add
dec
iret
roll
pop
arpl
call
ljmp
adc
push
push
add
bound
dec
jnp
lcall
incl
mov
jns
mov
add
add
inc
add
pop
add
cltd
add
dec
jge
stc
push
pusha
add
test
add
js
add
addl
mov
jno
incl
inc
add
add
sbb
add
loope
ret
add
call
dec
rol
add
cmpsb
add
insb
mov
cwtl
in
mov
outsb
les
and
decl
lea
clc
movsb
add
push
or
xchg
enter
add
ret
add
add
cmc
jns
jbe
mov
add
idivb
add
fstp
mov
pop
adc
or
popa
add
mov
fsub
add
add
test
add
fidivs
pop
dec
mov
xchg
inc
add
aad
loopne
or
stos
cmp
add
ljmp
testl
add
loopne
jb
lcall
xor
pushl
sub
add
movl
mov
add
loopne
loopne
xchg
fwait
lods
add
incl
cmp
mov
lcall
pop
lods
push
jge
add
or
pop
iret
push
imul
add
and
sbb
add
mov
pop
xlat
in
add
decl
xor
call
incl
add
add
xor
call
call
inc
add
sub
in
jns
cld
mov
add
add
jne
adc
mov
in
inc
add
mov
jmp
add
adc
call
hlt
test
inc
add
ret
add
cwtl
cmp
pop
dec
fadd
add
dec
loopne
jno
jmp
add
add
fs
add
fimuls
addb
scas
popa
add
mov
mov
sub
sub
dec
mov
pop
das
leave
out
mov
xor
jmp
fistpl
xor
ljmp
ja
xor
jmp
ret
dec
loopne
mov
lods
in
or
bound
inc
add
call
add
push
add
out
xchg
in
cs
out
or
pop
xchg
sbb
or
mov
cmp
lcall
or
pop
mov
or
jmp
add
push
and
lcall
loope
je
push
es
add
incl
lcall
dec
inc
add
lcall
push
jp
add
add
or
add
scas
add
mov
add
dec
stos
pop
add
add
mov
add
std
mov
add
incl
jbe
add
pop
add
jmp
add
pop
jnp
push
pop
ret
dec
mov
sub
shl
add
add
lcall
cli
rolb
push
jno
dec
addl
test
in
jp
in
sub
ljmp
cmp
xlat
out
add
jo
call
add
movl
jnp
add
bound
call
add
mov
incl
mov
sbb
call
decl
add
fcompl
add
mov
call
cmpsl
add
mov
cmp
ret
add
add
jmp
jmp
cmp
add
icebp
arpl
dec
ja
push
pop
in
pop
cmc
jnp
xor
call
ljmp
push
mov
add
filds
add
movl
mov
daa
add
movsb
add
add
mov
movsl
add
mov
mov
pop
lahf
in
mov
mov
inc
add
dec
push
xor
add
cmc
bound
ljmp
sub
roll
incl
call
add
push
cmc
in
and
call
dec
loopne
lret
and
mov
test
data16
out
add
add
lcall
repz
lahf
push
add
hlt
stc
dec
sbb
inc
add
lret
inc
add
add
add
mov
add
sbb
xchg
push
insl
pusha
add
pop
addb
mov
jge
add
or
lods
aas
fisttpl
fnstenv
add
cmp
std
bound
call
add
test
xchg
dec
outsb
adc
dec
or
pop
add
mov
call
add
add
mov
add
add
mov
add
in
xchg
jnp
add
push
add
ljmp
add
add
jmp
jmp
into
enter
ljmp
jnp
add
add
xor
add
in
test
add
mov
lret
dec
outsb
xchg
fcoms
push
sbb
cmp
and
jmp
lcall
mov
jae
ljmp
scas
jns
lods
addl
add
mov
add
imull
add
add
add
daa
add
cmpsb
add
incl
add
mov
xchg
sbb
add
mov
sbb
adc
jmp
add
add
jmp
sti
mov
add
cli
cmpsl
add
mov
addl
inc
add
lcall
jmp
add
mov
add
ljmp
sahf
rolb
add
add
xchg
clc
lcall
add
decl
adc
pushl
decl
dec
add
pushl
pushl
add
fs
add
xchg
inc
add
das
out
insl
xchg
repz
pop
pop
cmp
add
add
pusha
add
sub
stc
pop
fwait
xor
decl
test
je
popf
lds
mov
cltd
jae
call
add
jb
call
fnsave
adc
pop
dec
cmp
decl
pop
aam
add
outsl
mov
dec
outsb
and
decl
sub
roll
data16
push
cmp
ret
add
cmp
les
or
jmp
add
jmp
leave
jp
loopne
adc
ljmp
scas
out
bound
lcall
mov
cwtl
xchg
add
decl
sbb
call
jmp
jbe
aad
add
pop
insb
jmp
add
pop
pop
inc
add
dec
push
call
pop
imul
or
add
notb
push
cmp
add
aad
add
and
jle
add
ljmp
loopne
das
sahf
mov
dec
jae
call
clc
test
int3
js
add
mov
rcrb
sbb
push
and
jns
or
jmp
add
insl
mov
stos
clc
movb
add
push
out
xchg
test
iret
ss
rcrl
add
mov
add
leave
inc
add
rcrb
imul
add
add
and
ljmp
add
mov
push
cmpsb
add
call
add
loop
cmp
pop
or
cld
aaa
loop
imul
inc
add
rclb
pushl
push
pop
imulb
push
into
xor
rsm
or
js
inc
add
call
mov
mov
sbb
stos
xchg
outsl
jo
call
add
or
popa
add
jmp
add
das
roll
shll
add
sbb
sub
cld
sbb
and
cmpsb
add
ljmp
scas
fsubl
add
ficoml
add
loop
mov
fisubrs
mov
lods
ja
add
push
sub
add
mov
add
sub
push
sti
addb
sub
cmp
jg
add
hlt
mov
pop
stos
push
add
cmp
add
insl
flds
add
ljmp
dec
repz
adc
call
call
incl
push
lret
insb
inc
add
add
popf
addl
add
add
roll
fisttps
mov
sub
sbb
lcall
and
call
std
or
add
jmp
push
mov
jno
lcall
lret
sbb
mov
add
outsl
sar
cmp
pop
addb
push
add
fmul
scas
out
rcll
dec
adc
rcll
add
inc
add
xchg
pop
xor
dec
insl
cmp
jmp
inc
add
hlt
pop
add
add
add
adc
ficomps
stos
bound
decl
js
add
add
mov
cmp
add
stc
mov
movb
add
jle
add
mov
xchg
xor
ljmp
add
popa
add
and
ret
fwait
into
movsb
add
dec
push
leave
add
dec
lods
add
ljmp
add
call
roll
mov
inc
add
jle
push
mov
movb
and
push
add
jae
decl
jmp
add
add
lds
inc
add
pushf
insl
push
xchg
mov
xchg
cmpsl
add
icebp
test
iret
ret
add
add
add
std
inc
add
mov
add
paddb
add
add
inc
add
out
mov
add
jp
add
fcoms
adc
jle
add
sub
add
add
pusha
add
in
stos
add
sbb
inc
add
repnz
hlt
repz
xlat
push
add
add
ja
js
add
in
sbb
add
xchg
int
or
add
pop
and
dec
pop
add
add
out
jae
decl
add
or
pop
add
sub
xchg
imul
ret
add
addb
dec
add
add
addr16
and
call
add
xor
inc
add
addl
add
xchg
imul
push
ljmp
ljmp
in
lea
call
int
dec
les
incb
push
inc
add
inc
add
push
iret
ja
divl
add
sub
add
test
leave
pop
lcall
out
sub
add
inc
add
mov
fwait
and
incl
mov
rolb
inc
add
add
out
or
add
adc
ljmp
jno
jmp
roll
add
add
push
add
addl
add
add
popf
in
sarb
add
ret
push
add
int3
sbb
add
add
pushl
add
pushl
pop
lcall
pushl
add
incl
ljmp
add
jbe
add
int
add
cmp
add
mov
and
out
adc
mov
add
add
cmp
cmp
add
push
add
pop
jge
pop
sarb
inc
add
arpl
decl
rcl
and
lcall
ret
add
scas
mov
incl
sub
push
add
lock
clc
sbb
mov
add
lds
popf
jg
rcrl
add
push
popa
add
mov
outsl
jo
push
int
add
inc
add
rol
add
sahf
mov
add
xchg
cmc
scas
stos
jp
ja
add
xchg
loop
pop
add
roll
push
cmp
add
and
ljmp
add
sti
jae
dec
xchg
xchg
imul
ret
add
das
lea
jmp
lcall
add
movb
jg
int
add
in
and
cmp
outsb
sub
add
cmp
bound
lcall
cmp
dec
xchg
call
cmp
add
add
ret
add
insl
mov
leave
push
pop
add
add
xor
mov
add
insb
jne
add
aaa
push
fidivrl
add
cmc
aas
mov
add
add
cmc
xchg
fistpl
scas
xlat
movsl
add
inc
add
jns
mov
add
add
add
jg
clc
add
jmp
add
push
mov
shlb
in
mov
repz
add
stos
js
add
cmc
ret
add
add
add
add
xchg
hlt
mov
add
inc
add
fdiv
int3
lock
adc
call
jmp
prefetchw
add
or
add
out
nop
mov
add
inc
add
mov
lods
je
or
dec
adc
leave
mov
mov
mov
add
pop
and
lcall
add
hlt
lcall
add
popa
add
imul
lods
jns
or
dec
iret
fstl
add
cmp
xlat
and
pushl
sbb
pop
sub
add
add
xchg
dec
mov
jo
incl
lds
popf
push
add
roll
add
out
add
ljmp
js
add
rolb
add
jnp
add
xchg
data16
add
fcmove
jae
inc
add
add
jns
add
push
fwait
movsl
add
test
push
mov
cmp
aad
push
add
fbld
addl
and
mov
xlat
das
add
call
xor
std
addl
cmc
call
add
push
add
add
int3
movsb
add
sarl
inc
add
les
stos
mov
xlat
mov
add
add
cmp
pop
jns
add
pop
add
add
mov
aas
nop
cmpsb
add
ljmp
push
and
call
add
mov
add
pop
jb
push
jp
fmul
int3
frstor
add
add
loope
add
mov
rorb
test
add
bound
ljmp
or
test
add
aaa
mov
add
pop
into
repz
add
sub
dec
jle
add
xchg
test
push
add
sti
dec
pop
mov
add
lds
roll
fistpll
push
add
cmpsb
add
in
dec
mov
add
add
data16
jle
dec
xchg
sbb
add
decl
sbb
cmp
add
rclb
add
jp
add
jle
or
push
scas
dec
imul
insb
cltd
addl
xchg
sti
roll
popa
add
fucomip
jne
xor
pop
loope
dec
or
sub
add
jmp
add
rorb
dec
and
lcall
addb
mov
mov
cmpsb
add
xor
fisubs
and
lcall
stos
pop
xchg
in
fucomi
int3
pop
cmp
fdivr
jecxz
jmp
movsl
add
pop
addb
pop
sbb
add
ljmp
and
incl
add
incl
mov
mov
dec
xor
jmp
decl
lret
lock
lcall
add
outsb
lret
or
add
jnp
jmp
sbb
add
pop
or
sub
sub
jl
or
push
out
push
add
xor
ljmp
add
lcall
jo
mov
dec
or
in
cmpsb
add
add
addl
test
add
add
int
adc
lcall
lret
inc
add
imul
pop
sbb
add
sub
mov
fsubrs
sbb
add
xchg
addb
and
pushl
sub
dec
roll
lret
test
xchg
bound
call
xchg
sbb
call
ljmp
add
call
roll
jbe
add
lods
add
mov
cmp
into
scas
lods
pop
sub
jmp
add
jns
dec
mov
adc
dec
and
call
ljmp
test
sub
roll
icebp
insl
mov
xchg
jne
add
lcall
mov
incl
ljmp
add
incl
add
faddl
add
pop
or
xor
mov
dec
ja
add
push
push
add
jne
add
add
adc
pushl
add
add
add
cmc
lea
nop
sbb
stos
inc
add
enter
xchg
cmp
insb
leave
aas
mov
add
push
or
cli
add
lcall
sbb
and
cltd
call
add
out
mov
add
arpl
js
xchg
mov
add
mov
pop
xchg
push
add
pushl
sbb
pop
and
popa
add
xchg
or
movsl
add
test
pop
or
lret
dec
fstl
or
pushl
add
loopne
push
add
cmp
sub
add
add
movl
addl
loope
cwtl
mov
addl
add
pop
insl
sub
adc
lcall
add
add
and
jmp
add
test
movsb
add
ljmp
add
jnp
pushf
jecxz
add
call
adc
lcall
add
fwait
in
mov
add
cmpsb
add
call
data16
inc
add
mov
loope
mov
sti
mov
add
pop
ljmp
add
test
xchg
shlb
add
jo
decl
jo
decl
add
stos
jg
popf
inc
add
add
roll
add
insb
movsl
add
mov
add
insb
xor
xor
ljmp
add
pop
add
je
pop
sbb
in
fsubl
add
jb
jmp
test
sahf
mov
pop
cmp
out
dec
movl
dec
sub
decl
xchg
jg
fistpll
mov
cmpsb
add
add
add
mov
jb
in
mov
add
or
and
ljmp
cmpsb
add
xchg
mov
xchg
call
xlat
out
in
jle
add
mov
roll
push
add
add
push
xchg
xchg
lods
vmwrite
call
dec
std
fwait
push
movl
jle
xchg
push
stos
mov
lcall
dec
pusha
add
adc
call
lcall
push
mov
scas
push
add
hlt
mov
add
jecxz
xor
incl
mov
ljmp
add
add
imul
fldl
mov
les
pop
xchg
mov
lods
shll
incl
add
fisubl
lcall
in
jmp
add
jmp
mov
push
pushf
fiadds
add
jo
lcall
add
fistpll
fcomps
xor
test
stos
mov
add
inc
add
add
or
add
dec
ds
push
add
jbe
add
incl
add
push
mov
add
add
add
add
add
jno
dec
mov
add
dec
sbb
add
addl
xchg
sbb
sbb
add
mov
add
mov
inc
add
xor
incl
cs
add
es
icebp
rcrl
aas
push
add
jmp
insl
outsb
sub
add
push
xchg
xor
add
jmp
data16
add
iret
cmp
fwait
loope
outsl
ja
jb
inc
add
push
add
lahf
insb
addb
in
inc
add
push
add
xchg
mov
inc
add
scas
popa
add
stos
pop
cmp
sbb
xchg
and
in
pop
push
pop
stos
xchg
addb
fwait
stc
nop
movl
decl
jae
decl
clc
push
leave
dec
movsb
add
in
mov
data16
dec
mov
std
pusha
add
in
mov
jecxz
pop
xchg
std
fidivrl
ljmp
push
and
out
or
pushl
rcrb
addl
adc
ljmp
cmp
add
add
out
xchg
mov
sub
iret
inc
add
jp
cmp
add
in
fstpt
aaa
jbe
add
adc
mov
mov
test
pop
rorl
fwait
decl
into
mov
fsubs
fnstsw
inc
add
inc
add
add
push
stc
iret
push
add
scas
cwtl
test
sub
ljmp
cli
xchg
mov
push
add
dec
or
add
add
xchg
and
call
or
aad
add
add
mov
add
inc
add
add
inc
add
add
pop
add
inc
add
xchg
inc
add
sbb
jmp
scas
hlt
sub
add
nop
lahf
sti
sbb
jmp
incl
add
fxch
insb
cld
scas
out
les
js
addb
xor
pushl
inc
add
push
pop
mov
add
push
xor
push
addl
add
test
pop
out
pop
pop
es
cli
scas
xchg
addl
add
add
in
pop
inc
add
stos
addl
movl
ret
add
cmpsl
add
adc
call
push
lcall
add
push
dec
xchg
fadd
add
fldenv
dec
jecxz
lcall
jmp
in
push
pusha
add
out
jmp
out
adc
cmp
xchg
pop
push
push
add
and
jmp
add
mov
dec
cmp
decl
add
js
add
hlt
push
add
pop
fadds
decl
in
sbb
sub
loope
mov
add
add
xchg
sub
std
push
add
lret
addb
add
paddq
adc
add
lock
insl
loope
cmc
sub
mov
add
and
lcall
mov
add
sbb
sti
or
or
int3
popl
add
or
cwtl
cmp
add
mov
mov
mov
add
lea
add
add
add
dec
xchg
mov
aaa
xor
cmp
cmp
add
call
add
lock
add
xor
incl
fstps
add
add
lcall
lcall
add
leave
scas
push
xchg
ret
add
test
incl
ljmp
int
or
add
in
xchg
and
call
fidivrs
ja
add
roll
jg
jmp
add
pushl
addr16
jg
mov
add
xchg
call
popf
cmp
add
dec
icebp
dec
lock
test
adc
pushl
jmp
add
pushl
add
ljmp
add
add
add
movb
add
add
inc
add
mov
pop
aad
nop
addb
add
lret
xchg
inc
add
add
shll
test
push
jne
add
faddl
add
pushl
xor
jmp
out
adc
jnp
add
mov
icebp
jno
lcall
scas
mov
lods
and
mov
push
add
cltd
mov
call
add
mov
add
hlt
rcrl
add
mov
ficoml
in
adc
ljmp
add
and
lcall
and
incl
imul
ret
jo
lcall
mov
cmp
inc
add
sbb
add
sub
aam
add
ret
add
aas
movsb
add
popa
add
sbb
mov
lahf
and
dec
pop
aaa
pop
add
mov
jmp
addl
adc
ljmp
pusha
add
mov
add
add
pop
and
jmp
decb
aas
xchg
out
jb
jmp
ljmp
add
xor
call
cmp
lcall
add
and
xchg
jnp
jbe
jle
pusha
add
add
mov
add
call
xor
out
mov
mov
roll
add
lods
ss
add
lcall
ja
add
pushf
xor
call
xor
incl
add
flds
jge
add
mov
add
cltd
outsl
cld
out
mov
pusha
add
push
ja
aas
cmp
incl
add
enter
add
call
xchg
addb
add
dec
addl
push
add
sbb
jnp
add
add
adc
add
js
jle
push
clc
and
xor
push
fmuls
out
cmp
add
call
inc
add
ljmp
enter
into
and
lcall
in
jmp
pop
cmp
ficoml
cmp
mov
leave
cltd
mov
add
inc
add
icebp
int
pusha
add
adc
call
add
mov
incl
pushl
sub
add
push
add
repz
pushf
imul
lock
ret
into
add
lock
add
add
add
or
test
stos
jp
jge
add
fcmovnbe
jo
incl
into
movsl
add
jmp
add
call
add
aad
add
add
mov
rolb
add
add
int3
xlat
inc
add
adc
decl
add
dec
ds
add
ljmp
cli
mov
xor
arpl
pushl
jmp
add
mov
test
push
nop
data16
xor
fmull
rol
add
test
arpl
ljmp
add
icebp
mov
jp
add
add
or
and
push
add
sti
jp
add
sti
ret
add
add
icebp
push
pop
adc
cmp
add
mov
push
add
ljmp
add
in
iret
ret
add
push
add
jb
decl
add
adc
jmp
add
outsb
fcoml
and
lcall
addb
data16
mov
lods
and
decl
stos
test
cld
mov
cmp
or
jmp
and
lret
push
add
leave
push
test
mov
mov
mov
mov
loope
pop
adc
add
jl
add
add
ficoms
mov
cmp
xchg
aad
sub
add
lds
mov
test
push
add
cmpsl
add
add
xor
add
pop
xchg
add
lock
add
aad
add
inc
add
add
add
scas
cmp
pushl
pushl
ficomps
incl
add
dec
pop
jge
push
add
mov
ss
cltd
notb
movsb
add
or
in
lea
add
cmp
and
jmp
add
add
sbb
loope
cmp
push
test
push
cmpsb
add
add
mov
add
add
add
rolb
jne
ljmp
xlat
adc
incl
add
lret
add
fistpl
mov
out
test
add
std
xchg
fnstenv
sbb
xlat
sbb
jb
fisttps
push
add
movb
roll
jne
add
add
imul
rolb
lea
add
add
add
and
ljmp
add
call
pop
in
mov
mov
add
stc
mov
add
mov
add
add
add
xchg
scas
movsl
add
incl
lcall
push
add
mov
push
add
pop
inc
add
loop
dec
rolb
sar
mov
in
mov
jg
into
cmc
mov
add
mov
bound
decl
lret
sub
add
jmp
lock
adc
mov
js
push
add
jmp
insb
and
mov
mov
add
xchg
pop
sbb
addb
cmpsb
add
inc
add
push
mov
add
jno
cmp
add
add
stos
mov
add
lcall
push
push
add
adc
addl
fsubrp
lods
inc
add
jg
fwait
inc
add
push
jnp
add
rcr
addb
mov
jg
aas
mov
test
sbb
add
test
addl
xor
sub
add
adc
jmp
add
add
add
add
nop
dec
in
mov
dec
cld
ret
xor
call
add
add
scas
xchg
jl
sti
pusha
add
movsl
add
fwait
mov
xchg
inc
add
sub
enter
daa
add
add
incl
add
mov
aaa
out
jnp
mov
add
add
add
jne
fs
sub
add
inc
add
add
repnz
decl
fnsave
add
mov
jp
and
clc
push
dec
sbb
inc
add
mov
add
xchg
mov
jb
pushl
or
xor
jmp
jge
movb
add
and
arpl
lcall
repnz
incl
decl
ss
popa
add
and
loopne
add
pushl
dec
cwtl
out
xchg
add
inc
add
data16
mov
shl
push
sbb
or
icebp
into
inc
add
mov
add
cmc
test
add
lcall
add
test
add
mov
add
add
jno
lcall
stos
roll
add
repnz
nop
xor
dec
int
add
mov
addl
decl
sub
lret
push
and
sti
sbb
pop
xchg
and
decl
pop
mov
das
out
icebp
aam
sub
jne
xlat
mov
add
not
int
cmp
add
add
movsb
add
add
and
push
mov
mov
mov
incl
add
sub
in
add
dec
cmpsb
add
cmp
loopne
flds
call
add
adc
pushl
decl
add
sbb
add
push
add
or
cmp
add
add
push
add
xchg
lea
fstl
add
in
dec
xor
lcall
inc
add
pop
pop
xor
js
adc
lcall
je
add
dec
push
add
in
fisubrs
arpl
dec
pushf
fsubp
add
pop
in
jg
movl
add
pushl
pushl
cli
test
into
setge
pop
addb
pop
aad
out
mov
add
roll
add
pmaxsw
jge
add
outsl
or
xor
pushl
add
mov
pop
shll
adc
jmp
add
jnp
mov
fcomps
xchg
and
call
mov
mov
add
test
xchg
add
mov
fmuls
mov
testl
popf
push
cmp
add
or
lea
xchg
mov
pop
test
jl
sub
decb
inc
add
xlat
mov
pop
rolb
inc
add
sti
cmpsl
add
popa
add
popf
xor
add
incl
ljmp
and
sbb
push
pusha
add
mov
mov
imul
insl
add
xor
lcall
add
add
xor
pushl
push
ss
mov
jp
add
xor
incl
or
repz
inc
add
jbe
mov
add
out
cltd
out
hlt
sub
imulb
adc
lcall
add
and
call
into
roll
aaa
mov
add
xor
dec
add
inc
add
adc
add
sbb
pop
push
sub
mov
add
cltd
inc
add
xor
pushl
lds
popf
stos
mov
pushl
add
xchg
xor
incl
add
pop
add
push
add
inc
add
pusha
add
pop
mov
adc
decl
lock
dec
jae
clc
hlt
addl
add
das
jb
decl
add
add
mov
add
jo
incl
incl
js,pt
add
decl
cld
jo
jmp
add
push
add
adc
inc
add
std
jo
jmp
jmp
add
add
test
sar
outsb
or
add
loop
sub
and
call
add
mov
dec
xchg
and
call
add
call
cli
imul
arpl
jmp
add
or
out
xor
lcall
add
xchg
arpl
incl
and
jle
scas
lds
xchg
dec
jmp
movl
test
testl
call
add
add
clc
pop
pop
adc
mov
add
call
incl
add
ljmp
mov
add
sbb
add
jle
dec
pop
push
add
sarl
add
lret
push
aaa
fisttps
add
jo
incl
add
and
call
clc
shlb
adc
add
imul
adc
out
add
jmp
add
fbld
ljmp
sub
add
pop
cld
dec
fstpl
add
jg
push
push
stos
sbb
test
dec
cld
sbb
sar
dec
and
ljmp
fcmove
mov
inc
add
fstpt
aad
loop
sarb
dec
fstpt
add
std
xor
mov
add
inc
add
lret
jbe
movsb
add
push
add
das
sbb
add
cmp
mov
rcll
jmp
add
ljmp
mov
mov
mov
in
aas
push
or
cld
dec
arpl
cmp
ljmp
out
cld
fmull
les
adc
lcall
add
add
sub
aad
xor
mov
add
lcall
mov
and
incl
add
incl
add
cli
jmp
xchg
dec
push
loop
adc
lcall
adc
pushl
sbb
add
add
pop
xor
ljmp
cmp
add
adc
std
sub
add
stos
fisubrs
aaa
clc
mov
mov
cld
idivl
leave
inc
add
pop
insl
push
add
aad
ret
add
push
aam
cmpsl
add
add
mov
pop
sub
push
mov
mov
int3
repnz
push
and
pushl
decl
add
jne
fldcw
movsl
add
movsb
add
addb
mov
insl
mov
addl
fistps
fsubp
add
mov
addr16
add
add
lahf
mov
add
cmpsl
add
add
and
out
sbb
or
cltd
int3
dec
cld
cmp
inc
add
add
push
dec
mov
add
mulb
add
add
add
jns
xchg
cld
jmp
push
and
sbb
and
pop
cmc
pop
jb
incl
shll
push
add
jo
jmp
ljmp
ljmp
add
add
add
cmp
add
add
inc
add
add
add
sti
addb
fwait
sbb
pusha
add
ljmp
add
mov
data16
cmc
sbb
add
call
add
add
jae
call
adc
add
jp
shl
movb
pusha
add
jbe
add
decb
sti
outsb
or
add
cmpsl
add
xlat
inc
add
sarl
jle
sbb
add
imul
jbe
sets
push
mov
popa
add
xor
jmp
pop
std
push
add
and
fcmove
out
inc
add
and
decl
add
push
xor
jmp
fidivs
add
add
dec
adc
jmp
cs
mov
mov
push
add
xor
inc
add
fcmovb
add
das
sbb
add
jae
jmp
add
movb
add
cld
add
push
add
sti
mov
js
add
pop
lea
push
add
xchg
shll
add
jl
add
pop
lods
mov
push
pusha
add
cli
sub
jg
add
or
add
push
mov
jge
add
jl
xor
push
add
aaa
and
push
fnsave
jmp
jbe
popf
popf
mov
add
xor
lcall
xchg
add
pushl
cs
lds
cli
addl
add
mov
icebp
sub
into
inc
add
sub
add
movsl
add
sbb
lcall
add
les
dec
or
jg
dec
or
call
jp
and
incl
add
clc
add
lcall
or
mov
movb
or
add
test
mov
add
xchg
push
roll
add
call
mov
add
std
sub
add
push
sub
add
mov
sub
pop
pusha
add
xchg
xor
ljmp
mov
add
mov
insb
fldenv
cli
pusha
add
inc
add
add
add
mov
cmp
popa
add
ljmp
add
xor
decl
dec
aaa
cmc
jae
jge
cmpsl
add
loopne
mov
cmp
dec
pop
movsl
add
das
jb
decl
ss
xchg
in
mov
jecxz
enter
jb
lcall
call
add
loope
push
add
jne
push
add
pop
inc
add
mov
add
cmp
js
pop
lea
xor
add
out
dec
movsb
add
mov
add
mov
and
fwait
adc
call
jb
decl
addr16
add
decb
add
xchg
in
enter
add
add
loope
mov
pop
cmp
add
xor
ljmp
shll
out
lret
into
popf
lds
loop
addl
or
out
mov
add
mov
add
into
in
popa
add
stos
mov
enter
popa
add
out
dec
mov
mov
repz
push
add
pop
jg
add
movl
add
cmp
rolb
js
sub
data16
adc
jmp
add
addb
fadds
add
mov
lods
sti
pop
add
and
dec
xchg
adc
add
ljmp
or
add
rolb
rolb
mov
aas
mov
daa
add
add
push
add
adc
lcall
loop
mov
sbb
test
mov
movl
mov
add
jnp
add
xchg
lcall
add
sbb
xor
jmp
add
adc
ret
lret
lret
fwait
jmp
les
cld
cmp
mov
mov
int
pushf
add
pushl
xlat
roll
add
ljmp
fstpl
fcmove
test
xor
incl
add
inc
add
pop
lea
out
mov
mov
dec
roll
sbb
add
lret
roll
mov
ss
fbld
add
add
clc
and
inc
add
or
jle
cld
add
add
in
mov
add
aam
inc
add
push
add
call
add
xor
add
xchg
insb
push
add
mov
pusha
add
xor
jle
add
sbb
addb
add
ljmp
into
inc
add
dec
push
dec
adc
mov
aas
loop
push
jne
imul
add
insb
pop
push
add
call
add
inc
add
add
cmp
inc
add
es
sbb
cmp
add
ss
std
lods
js
add
ljmp
xlat
out
int
inc
add
push
add
sbb
mov
mov
add
push
imul
add
dec
cli
or
dec
mov
add
fs
sub
add
int3
inc
add
fstpl
pop
mov
inc
add
pop
push
add
jae
lcall
inc
add
ja
in
dec
mov
imull
add
scas
dec
out
dec
fdivrs
enter
jmp
add
inc
add
arpl
cmp
add
add
sbb
add
push
cmpsb
add
outsl
sbb
add
pop
fnstsw
out
cmc
jbe
sub
push
add
fstl
xchg
cmp
add
out
data16
ljmp
add
sti
push
ret
add
add
add
popa
add
mov
incl
outsb
nop
mov
enter
cmc
or
mov
add
stos
daa
add
add
add
inc
add
test
xor
call
xchg
data16
fisttpl
add
popa
add
out
xor
dec
mov
aad
add
dec
add
decl
add
mov
ljmp
add
jb
call
add
test
dec
add
arpl
lcall
mov
add
add
jmp
dec
push
add
addb
nop
jg
add
xchg
add
dec
mov
jae
incl
add
sbb
out
lods
push
lret
jge
movsl
add
push
sahf
mov
add
nop
sbb
dec
pop
add
add
push
add
pushf
in
fisttpl
lods
ljmp
incb
add
cs
sarl
dec
mov
in
jnp
xchg
xchg
or
rcrl
cmp
push
scas
dec
dec
add
add
or
lcall
mov
add
mov
push
add
iret
mov
ljmp
in
or
pop
pop
xchg
jl
loop
mov
push
sbb
or
mov
add
mov
sub
add
or
dec
inc
add
jp
add
adc
add
fidivl
or
adc
incl
add
les
hlt
jecxz
dec
dec
outsl
and
cmp
cs
ret
add
add
add
into
frstor
add
loopne
mov
add
or
add
add
shrl
les
dec
mov
add
test
mov
pushl
inc
add
add
outsb
ret
add
in
ror
je
rclb
add
cmpsb
add
lock
scas
test
notb
fistl
add
fs
xor
ljmp
and
add
inc
add
loopne
not
push
hlt
push
add
add
jo
pushl
add
add
xor
add
add
sub
dec
out
sti
sub
imul
add
xchg
push
add
loope
jmp
add
pushf
frstor
jne
or
in
iret
jmp
js
out
loopne
repz
imul
inc
add
addl
push
movl
add
inc
add
jecxz
adc
sarb
addl
cmp
ljmp
sub
mov
add
push
adc
ljmp
cmp
addl
shr
sbb
outsb
pop
mov
mov
add
jl
add
jne
lea
flds
dec
movsl
add
add
incl
add
mov
sub
add
jb
incl
leave
addl
add
add
pushl
jmp
pushl
lods
cmpsl
add
add
push
add
jmp
pop
lods
insl
mov
sub
out
ljmp
add
add
cli
dec
mov
in
sarl
fists
add
fidivl
add
addb
mov
fdivrs
daa
add
sub
xor
and
pop
stos
das
lcall
add
add
addb
push
fisubl
jmp
add
jmp
add
push
add
adc
movl
sub
rolb
push
in
sub
ret
add
enter
add
add
test
push
mov
add
xchg
adc
inc
add
add
je
mov
or
mov
cmp
pop
aaa
fldt
add
mov
mov
pop
jge
add
xor
inc
add
sahf
pop
pop
cmpsl
add
add
and
jle
xchg
sbb
cmp
mov
xchg
xchg
jb
push
mov
xor
add
sbb
lret
adc
pushl
xchg
int
das
mov
add
sub
cmpsb
add
out
sahf
in
lods
lret
popf
insl
icebp
rolb
add
inc
add
sbb
and
lcall
lea
xchg
jno
jmp
add
mov
mov
add
lcall
lret
jmp
call
xor
pushl
add
aam
add
pop
or
and
pushl
in
sbb
rolb
decb
add
hlt
xor
ljmp
add
or
das
push
add
mov
pop
push
lds
and
cld
in
hlt
dec
dec
xchg
sti
inc
add
lock
insl
rolb
icebp
scas
scas
js
pop
scas
lahf
pop
mov
int
add
call
add
add
add
lcall
mov
mov
fdivl
je
add
mov
add
fucomip
adc
lcall
cmp
iret
lds
pop
popf
fsubrs
add
add
test
stc
adc
call
clc
popf
add
lcall
add
xor
out
lahf
push
add
cwtl
bound
call
inc
add
adc
mov
in
or
jl
jno
lcall
xchg
test
les
sbb
add
or
adc
pop
jge
mov
pushl
cmpsb
add
add
xor
decl
mov
jmp
push
push
and
movsb
add
sbb
sbb
add
lods
dec
and
inc
add
add
in
add
call
lods
add
data16
aad
aaa
addb
push
mov
lods
dec
stc
lods
int3
fldenv
jae
decl
jge
daa
add
hlt
addb
pusha
add
addb
test
mov
add
dec
mov
add
call
sub
jns
mov
adc
lcall
add
add
mov
ds
icebp
fiadds
add
add
lcall
add
pop
lods
xchg
insb
sbb
adc
decl
push
pop
aad
add
aaa
sarb
push
add
add
add
sbb
push
add
inc
add
inc
add
mov
xor
lcall
cs
int
add
push
add
cli
push
add
mov
sbb
add
pushl
lcall
add
push
add
cmp
mov
in
xor
decl
nop
sbb
add
jno
ljmp
add
xchg
inc
add
adc
pushl
add
fcmovnu
and
decl
imul
into
faddl
call
adc
addb
jae
call
bound
pushl
std
lahf
mov
sub
fildl
sub
sub
out
movsb
add
mov
in
fsubl
push
add
add
lahf
aad
add
add
pop
push
or
jnp
loope
sub
add
adc
add
and
add
rorl
cmp
lds
loope
adc
mov
loopne
xlat
into
fidivl
bound
mov
mov
cwtl
movsb
add
sti
movsl
add
cmp
add
mov
add
addl
stc
jl
je
fdivrs
push
aaa
ss
add
shll
roll
mov
inc
add
lret
outsl
test
ret
add
jnp
add
mov
pop
out
das
pop
movl
fldl
add
mov
add
add
and
pop
add
jmp
add
add
jmp
add
loope
in
dec
leave
test
or
inc
add
add
daa
add
mov
cmp
and
call
push
mov
fstps
push
or
scas
out
enter
cmp
loope
jl
xor
pop
testb
sbb
fucomip
stos
push
loope
enter
add
add
sub
dec
lahf
cs
xchg
sub
cltd
and
mov
dec
int3
ljmp
enter
lret
sar
inc
add
pop
mov
addl
jns
add
decl
add
sbb
bound
decl
sub
add
add
and
mov
add
push
add
daa
add
add
sub
dec
mov
sub
mov
les
arpl
jmp
add
mov
add
pop
aaa
xor
out
inc
add
pop
sbb
push
push
add
sti
lock
jbe
xor
call
das
dec
aas
cmpsb
add
xchg
enter
out
sbb
jge
xchg
addl
fistl
xchg
jb
fldl
add
icebp
cld
daa
add
xor
incl
jno
mov
daa
add
addl
ss
jge
add
jnp
push
pop
add
sub
add
cltd
loop
add
ljmp
add
push
hlt
mov
out
ret
jb
call
incl
add
lods
or
xor
jmp
add
add
xchg
cmp
xchg
pop
add
add
out
and
jmp
add
add
decl
into
jecxz
popa
add
or
jbe
add
ljmp
mov
xchg
roll
jg
sbb
push
xor
jge
or
add
ret
add
notl
jnp
add
lcall
std
aas
xchg
sbb
push
add
in
and
call
dec
daa
add
sub
add
movsl
add
repnz
add
add
jns
jge
popa
add
pop
xor
cmp
mov
dec
add
pushl
add
ljmp
lcall
clc
adc
mov
jbe
lock
out
std
sbb
push
add
mov
inc
add
ljmp
add
add
ss
pop
pop
and
incl
pop
sahf
mov
xchg
mull
add
pop
lds
roll
jg
pop
dec
cwtl
mov
inc
add
mov
jecxz
or
pop
sbb
loope
pop
movl
jne
add
decl
mov
stos
mov
push
or
cmp
add
incl
sti
ret
add
jo
decl
push
nop
dec
aas
xchg
jbe
loop
cmp
ja
add
shrl
add
lods
aas
aad
lods
cld
loope
aaa
mov
add
add
pop
and
add
lods
pop
rorb
add
add
mov
adc
jmp
popa
add
mov
add
repnz
ljmp
lret
push
mov
mov
insl
cmp
add
add
xchg
sahf
ret
add
fcompl
add
add
in
sbb
pop
mov
add
add
xchg
js
add
add
pop
adc
idiv
and
mov
mov
xchg
and
stc
int3
movsl
add
inc
add
jg
inc
add
frstor
sbb
roll
add
addb
stc
xchg
push
jae
call
jmp
inc
add
movsb
add
lahf
not
pop
ja
stc
je
sub
jmp
add
out
ret
cmp
lcall
loop
imul
in
mov
add
fdivs
outsb
loop
xor
mov
rep
in
sub
sarl
add
jbe
add
sbb
sbb
mov
popa
add
inc
add
cmpsb
add
pusha
add
cli
insb
ljmp
rorl
sbb
add
call
mov
jecxz
in
ljmp
add
add
mov
decl
add
fimuls
out
push
add
lahf
mov
add
sub
add
add
add
add
mov
mov
add
xor
ljmp
stc
insb
push
ja
pop
bound
push
pop
or
add
add
inc
add
add
adc
pushl
add
repz
incl
add
pushl
clc
xlat
lods
inc
add
pop
std
dec
addl
lcall
pushl
push
ljmp
add
add
or
inc
add
test
inc
add
cld
cmp
add
and
incl
cld
mov
xor
add
xchg
dec
add
mov
adc
decl
xor
dec
aam
add
pop
add
roll
add
pop
invd
mov
movb
lret
jge
insl
mov
add
data16
push
ret
add
jge
add
mov
cmpsb
add
sub
inc
add
bound
fdivrl
add
add
mov
add
add
adc
call
add
lods
call
mov
inc
add
nop
push
add
out
insl
sub
dec
inc
add
mov
add
and
pop
jmp
inc
add
mov
ja
add
cmpsl
add
add
add
movb
sarl
mov
add
add
mov
aas
inc
add
mov
or
add
add
movb
xor
and
decl
ja
ds
cmp
add
jmp
jecxz
dec
addl
ljmp
loope
add
idiv
mov
add
fcoms
pop
jno
lcall
xchg
cmp
xor
add
push
xor
jmp
stc
aad
iret
xor
dec
dec
testl
into
pop
insl
sbb
add
fmull
stos
mov
dec
movl
inc
add
out
add
pushl
inc
add
ljmp
mov
mov
out
sbb
add
add
mov
decl
add
add
add
jne
mov
add
jno
ljmp
pop
mov
jbe
test
popa
add
or
add
adc
lock
ljmp
mov
inc
add
xchg
or
add
jge
add
pushf
movsl
add
addb
add
jmp
jle
fwait
roll
adc
push
mov
mov
add
add
sahf
sti
imul
mov
add
stos
mov
jae
decl
popa
add
les
mov
adc
maskmovq
add
or
sub
add
add
inc
add
add
add
xchg
pop
add
jg
xchg
inc
add
lods
sbb
add
mov
mov
add
fidivs
ljmp
adc
add
out
add
incl
add
xchg
sti
int3
popa
add
pusha
add
cmp
push
stos
sub
add
xchg
inc
add
fldenv
add
push
add
jp
add
pop
lret
ja
add
stos
les
inc
add
xor
ljmp
or
add
or
je
and
mov
add
pop
out
mov
jae
jmp
pusha
add
movsb
add
xor
jp
add
add
les
jae
call
add
dec
xor
add
add
roll
add
jg
fisttpll
jmp
add
ja
add
js
std
adc
inc
add
add
icebp
mov
decl
int3
pushl
incl
jl
push
xchg
or
add
cmp
inc
add
call
outsb
aam
hlt
enter
add
int3
ja
add
sarb
cwtl
fldl
add
std
add
inc
add
pop
out
dec
jg
add
pop
or
add
and
add
add
jmp
lcall
pop
fwait
cmp
cmp
push
add
inc
add
sub
cli
es
pushf
stc
loope
fwait
scas
sahf
mov
pop
lcall
push
or
lahf
imul
mov
movsl
add
add
xchg
dec
mov
cmp
add
add
add
in
dec
scas
pop
cmp
xchg
dec
pop
out
sbb
dec
xor
mov
call
call
add
loope
addl
movsl
add
mov
xchg
ret
or
lods
fisttpll
cmc
in
pusha
add
jne
jbe
add
sub
add
add
negb
in
xchg
and
imul
push
test
roll
pop
add
ljmp
add
add
roll
add
inc
add
or
nop
cmpsl
add
add
movb
add
icebp
cmp
fidivrs
add
decl
add
add
ljmp
daa
add
call
xor
add
daa
add
addl
popf
inc
add
add
mov
lcall
outsl
push
addl
ds
add
push
outsl
adc
jl
and
inc
add
dec
arpl
lcall
jne
cld
or
xchg
fistl
mov
bound
incl
ljmp
add
sbb
add
xchg
addl
jle
pop
js
int3
cs
xchg
and
lcall
inc
add
insl
push
adc
add
and
fidivrs
std
jbe
and
and
jp
xchg
push
add
stc
in
test
pop
inc
add
ljmp
push
les
xchg
mov
in
push
sahf
cmp
insb
xchg
or
add
pushl
jbe
add
add
imul
add
fstpt
add
add
pop
std
jg
popf
insl
scas
pop
je
int3
jle
cmp
pushf
push
adc
adc
loope
cmc
ds
mov
mov
xchg
outsl
push
jmp
add
inc
add
add
mov
xor
call
call
lock
or
pop
fcmovu
push
les
sbb
pop
mov
add
add
cmp
fisubrl
add
xchg
adc
call
mov
add
add
ss
mov
cld
mov
or
add
add
leave
mov
add
addb
add
stc
dec
mov
or
add
add
mov
adc
add
ljmp
add
dec
inc
add
aaa
movl
jg
roll
add
sbb
or
sub
addl
data16
fiadds
arpl
in
sub
add
add
add
jg
rolb
pushl
cmp
xor
jg
add
aad
std
jb
jmp
add
xor
call
add
add
add
pop
dec
js
imul
push
add
outsb
sahf
out
sub
add
inc
add
popf
adc
call
lods
mov
add
and
cmp
stos
dec
test
xor
decl
and
pushl
add
out
cmpsl
add
or
scas
inc
add
pop
add
pushl
add
popa
add
jb
incl
flds
clc
incb
add
faddp
add
mov
call
ljmp
arpl
pushl
add
fisubrs
add
mov
sub
mov
add
fmulp
std
mov
rclb
add
icebp
addb
mov
imul
mov
cmp
xchg
mov
stos
inc
add
aad
jno
ljmp
add
sbb
mov
add
lret
pop
sahf
call
in
xchg
add
mov
add
add
add
faddl
add
cld
pop
pop
add
add
mov
add
or
fimull
cli
popa
add
std
mov
addl
cmp
push
add
fisubrl
stos
aad
mov
out
cltd
sbb
add
out
movb
clc
lea
addb
add
or
dec
add
clc
xchg
pushf
out
sbb
add
addb
add
mov
dec
jbe
inc
add
push
add
insl
ds
icebp
adc
lcall
cld
data16
inc
add
inc
add
pop
xor
dec
or
pop
mov
xlat
cli
out
xchg
mov
sbb
adc
inc
add
jo
mov
add
jge
add
sub
add
pop
add
push
adc
call
lods
cmp
jbe
jne
clc
mov
jl
sbb
add
jb
push
mov
into
xchg
or
push
add
call
add
nop
sub
jne
add
js
add
cmp
add
scas
mov
mov
ljmp
and
cmp
mov
jge
jle
add
add
loopne
addb
add
call
add
add
mov
push
mov
outsb
push
jmp
pop
aas
add
stc
dec
jg
addb
fwait
in
sub
cmp
and
pushl
mov
aaa
fwait
arpl
decl
ds
dec
lods
jbe
add
push
lret
add
daa
add
js
cwtl
fsubs
mov
lds
mov
roll
roll
gs
add
add
ret
add
dec
cli
aas
adc
mov
add
imul
add
lahf
cwtl
xor
call
add
mov
js
jo
lcall
add
sub
xor
jmp
jge
and
incl
call
aam
add
push
add
mov
insb
sbb
mov
fisubrl
daa
add
jmp
mov
aaa
or
add
xor
ds
ret
mov
add
pop
test
add
ret
add
push
add
fcmove
xchg
add
ljmp
hlt
ret
add
outsl
icebp
inc
add
dec
xor
push
in
xchg
inc
add
inc
add
fistl
cmp
cli
shr
dec
sbb
push
jle
popf
mov
add
jmp
outsl
fs
xor
fptan
loop
cwtl
stos
xchg
fidivrl
add
div
pop
dec
stc
cmp
addl
stos
xor
call
lods
test
inc
add
mov
push
add
pop
xlat
ja
add
adc
decl
pop
sub
add
pop
sbb
iret
add
ljmp
inc
add
add
lahf
or
pop
addl
add
addl
pop
add
sbb
dec
cmp
push
pop
dec
enter
decl
add
js
add
add
pop
psrad
jns
addb
add
add
adc
outsl
outsb
mov
jne
jb
call
ds
lcall
push
add
in
or
sahf
fnstenv
call
fisttps
nop
movsb
add
sbb
mov
add
add
mov
jmp
movsb
add
pop
add
add
dec
sub
test
fsubrp
mov
fdivl
call
les
xchg
cmp
lods
je
add
mov
add
ljmp
xchg
push
add
mov
add
mov
jns
test
cs
mov
add
jno
cmp
add
repnz
inc
add
ror
push
movsl
add
stos
aad
add
test
push
add
add
das
loop
and
ljmp
sub
or
inc
add
add
aam
add
lret
test
add
and
and
jge
stc
ret
add
mov
cmp
add
push
pop
mov
insl
adc
decl
and
sub
cmp
into
xor
sub
adc
inc
add
pusha
add
les
out
sbb
iret
aam
insb
movb
pop
fsubs
add
test
pop
add
lcall
xor
add
cmp
add
jmp
pusha
add
aas
pushf
dec
pop
dec
cmpsl
add
inc
add
arpl
lcall
sbb
xchg
lds
push
push
add
pop
fldcw
test
inc
add
push
out
and
inc
add
inc
add
mov
cmp
lcall
test
add
incl
mov
xchg
cltd
pop
add
incl
pop
push
dec
xor
incl
add
mov
and
ljmp
add
or
add
xchg
dec
lock
jl
pop
add
add
add
mov
dec
daa
add
icebp
inc
add
lcall
add
aad
cmpsl
add
ret
add
add
les
cmp
sbb
jbe
dec
icebp
daa
add
add
mov
dec
in
push
lret
jmp
add
xchg
flds
ljmp
add
jnp
scas
push
or
and
pushl
pop
add
push
std
sub
shrb
cmp
jg
add
add
icebp
pushf
or
shl
add
add
dec
mov
lcall
imulb
add
dec
cmp
incl
inc
add
iret
sahf
pop
in
mov
jns
lret
lahf
std
ljmp
pushl
add
shl
sbb
add
ret
cmp
roll
bound
pushl
addl
addl
test
push
add
push
mov
add
addl
add
xchg
addb
add
call
insb
push
and
decl
mov
add
cmp
mov
add
sti
and
pushl
add
add
pusha
add
bound
ljmp
cmp
mov
add
add
add
hlt
sub
xor
jmp
loopne
aaa
incl
jle
add
add
push
xlat
lods
loopne
mov
popf
cs
push
add
js
add
jne
mov
add
test
movb
lret
push
jno
ljmp
movsb
add
add
pushl
add
nop
je
add
ljmp
add
add
cmc
popa
add
jns
jge
push
inc
add
add
in
push
add
add
jmp
add
mov
aad
add
frstor
sub
add
fstl
call
sub
and
xor
push
stos
xchg
add
lods
adc
lcall
std
add
incl
pushl
add
add
incl
shlb
xor
pushl
adc
decl
xlat
push
mov
add
das
sahf
aad
mov
add
test
mov
call
adc
repnz
mov
adc
call
pusha
add
pop
mov
add
lock
incl
add
les
or
mov
add
jge
adc
lcall
fstl
dec
leave
xchg
fwait
jns
pop
pop
xlat
clc
push
loop
or
lods
aaa
fwait
sub
and
lcall
mov
jns
movb
add
movsl
add
and
jmp
add
add
add
out
icebp
in
xchg
xor
decl
add
add
lods
ja
add
pop
pop
movzwl
add
dec
sub
push
jle
add
xor
decl
sti
daa
add
add
enter
add
icebp
pop
repz
test
mov
jg
sbb
add
push
jp
sub
jnp
cltd
jecxz
int
les
mov
add
inc
add
jb
decl
add
lock
add
xchg
mov
pushf
cmpsb
add
scas
movl
add
mov
out
adc
pushl
js
aad
out
std
jnp
out
mov
movl
mov
xor
xor
jmp
lea
add
push
rclb
ljmp
cmpsl
add
movb
mov
pop
movb
mov
add
jmp
add
cmpsb
add
or
mov
fmull
int
add
test
fcomi
add
cmpsb
add
jle
repnz
call
add
imul
test
leave
cmpsb
add
cwtl
sub
insl
aas
pop
pop
mov
add
add
call
mov
add
and
or
incl
lcall
lds
and
ljmp
sub
cli
pop
mov
fwait
or
xor
pushl
add
dec
inc
add
cmp
mov
mov
add
add
dec
add
cmc
ja
add
fsubrs
sub
push
add
cmp
mov
incb
add
add
push
add
add
ljmp
add
sub
or
jmp
call
add
mov
decl
xchg
adc
lcall
dec
dec
adc
pushl
add
sub
mov
mov
push
jae
call
xor
mov
add
adc
jmp
add
push
dec
xchg
clc
enter
rolb
movl
sbb
outsb
add
ljmp
cmp
add
addl
jae
mov
daa
add
add
incl
add
in
push
cmp
add
addl
add
out
movsl
add
add
iret
lods
sbb
out
mov
add
mov
mov
incl
call
mov
add
jmp
jmp
inc
add
pop
push
add
roll
in
lds
stos
sbb
or
pop
je
loopne
insl
das
into
jecxz
pop
mov
lret
test
mov
add
add
in
jmp
ljmp
mov
add
popf
mov
fldcw
insb
mov
adc
ljmp
stos
scas
dec
xchg
xchg
jb
call
mov
jge
add
xlat
scas
movb
add
out
lods
add
mov
add
and
das
repnz
bndldx
enter
add
scas
js
and
add
das
and
fistpll
movsb
add
add
cmp
add
inc
add
jmp
decl
inc
add
cltd
xchg
jnp
add
into
inc
add
mov
add
ljmp
call
fwait
push
scas
loopne
push
js
add
lds
xlat
and
pushl
add
push
add
addl
mov
jg
sbb
add
jbe
add
pop
lahf
cld
or
or
add
inc
add
xchg
dec
aad
ja
add
arpl
call
lods
mov
in
mov
sbb
mov
xor
flds
incl
inc
add
add
decl
ret
outsb
rcrl
test
cmpsl
add
sub
out
outsb
xor
dec
inc
add
mov
repnz
testb
add
ljmp
lcall
cltd
ret
add
xchg
daa
add
mov
decl
popa
add
add
or
add
push
jge
add
insl
in
aaa
dec
lcall
aad
sbb
add
cmpsb
add
xchg
dec
or
filds
incl
add
into
sbb
rcr
push
add
out
dec
xchg
sbb
out
push
cwtl
cmp
inc
add
mov
pop
and
incl
add
add
decb
dec
pop
xor
jmp
add
leave
dec
cmp
into
cmp
les
pusha
add
sbb
mov
sbb
outsl
out
shll
mov
push
sbb
out
pop
rcrl
add
add
adc
add
rolb
add
rolb
add
add
sub
cwtl
dec
outsl
mov
jae
push
call
add
lcall
add
cld
xlat
jb
dec
jo
call
push
adc
jmp
add
add
sbb
pushl
add
bound
pushl
push
add
scas
outsl
sbb
add
fbstp
ljmp
jp
dec
mov
clc
cmpsl
add
add
cltd
pop
add
mov
add
add
add
add
hlt
pop
or
dec
adc
mov
add
cmp
or
add
cmp
addb
pop
jp
add
imul
incl
add
mov
add
add
and
jmp
incl
jl
or
inc
add
shll
fwait
mov
std
jle
in
mov
add
inc
add
aad
mov
rcrl
add
dec
cmpsb
add
add
add
jmp
je
add
xlat
push
or
xchg
mov
add
cmp
sbb
push
add
push
andnps
jnp
lret
notb
lcall
fs
add
bound
cmp
add
pop
mov
add
sarl
js
add
in
sub
mov
dec
data16
fisubs
test
push
add
xor
call
adc
mov
cmp
lcall
mov
pop
push
add
decl
sahf
in
cld
cli
push
add
loop
inc
add
pushl
call
add
jb
call
jmp
dec
push
add
sub
jo
inc
add
pop
lock
pusha
add
je
jmp
dec
roll
pushl
lcall
dec
outsb
pushf
dec
xchg
stos
cmp
out
xchg
pop
iret
xchg
push
aam
jne
scas
js
xchg
pop
mov
add
add
data16
xor
lcall
inc
add
mov
add
enter
add
scas
mov
jmp
xor
out
iret
push
scas
data16
xor
call
sbb
mov
inc
add
add
dec
sub
inc
add
loopne
arpl
jl
int
or
mov
pop
aaa
or
add
aaa
cmc
ja
pop
push
out
jnp
or
add
add
stos
inc
add
idivl
cmp
pop
cld
pop
das
add
lcall
out
add
inc
add
pop
mov
pop
sbb
sub
cmc
stc
outsb
push
repz
in
lret
jle
add
mov
outsl
dec
js
sub
pop
xlat
imulb
lock
stos
aam
inc
add
cwtl
insl
insl
popa
add
sbb
add
hlt
aam
add
lods
xchg
push
pop
mov
data16
lock
shlb
jmp
xchg
sub
add
push
add
pop
std
cmp
jg
cmpsl
add
add
jmp
add
add
add
repnz
add
lds
stos
addl
add
inc
add
jg
mov
xor
sbb
in
push
add
dec
jp
add
inc
add
daa
add
adc
ljmp
pop
das
xor
incl
add
ss
jmp
sbb
mov
mov
xchg
syscall
add
call
add
pop
push
int3
loope
rcrb
pop
push
repz
or
mov
adc
incl
mov
xchg
outsb
fucom
add
sbb
movb
addb
inc
add
out
push
add
adc
add
addb
add
push
into
imul
fcompl
ja
sbb
add
movsb
add
inc
add
lea
add
stc
jnp
jno
mov
jae
lcall
add
inc
add
add
lcall
jp
jo
decl
add
ds
and
dec
pop
into
fists
adc
incl
xor
call
push
jmp
add
icebp
sub
fsubs
add
add
add
fwait
scas
pop
test
shrb
scas
repz
loop
cli
push
add
mov
add
fiadds
add
mov
cmp
pushl
add
das
repz
pop
mov
imul
dec
out
mov
add
aaa
int
clc
in
shll
add
cmp
jbe
xlat
adc
incl
jge
dec
sbb
xor
incl
jmp
add
add
out
dec
addb
add
inc
add
mov
add
int
jo
push
shrl
add
pop
call
mov
add
jmp
lds
aad
push
add
loop
jbe
push
add
imul
jmp
add
dec
xor
mov
ljmp
mov
xchg
test
xor
jns
xchg
mov
add
add
filds
jg
loop
add
jmp
incl
dec
fptan
pop
sbb
cwtl
sub
shlb
add
push
cmp
add
div
lret
fcompl
lcall
and
cmp
add
and
jmp
add
jmp
add
std
nop
in
jmp
popa
add
push
add
push
add
add
lahf
mov
movsl
add
nop
push
add
cmp
xchg
lret
out
leave
int
or
lahf
addb
imul
add
inc
add
repnz
add
ds
in
out
in
movb
add
pushl
adc
decl
call
add
fwait
clc
inc
add
or
out
mov
and
lcall
add
out
xchg
cld
lret
into
or
add
sub
jnp
add
xchg
dec
out
movb
or
add
add
jle
sub
cmc
add
adc
jmp
add
pushl
add
xor
mov
inc
add
data16
lahf
and
cli
pop
inc
add
sbb
mov
add
repz
pop
add
lcall
shrl
lods
outsb
add
decl
push
std
mov
cwtl
mov
xchg
push
mov
repz
xor
ljmp
filds
add
mov
loopne
bound
incl
push
fildll
ss
push
jb
call
call
mov
add
mov
jbe
jo
incl
mov
call
add
lcall
outsl
repz
add
pusha
add
xor
lcall
adc
jmp
pushl
call
push
or
imull
sbb
add
add
imul
add
pop
or
lcall
add
sbb
inc
add
pop
enter
push
add
lahf
adc
jmp
push
cmp
add
movb
mov
in
pop
cmp
clc
inc
add
out
stc
jg
add
adc
inc
add
addb
shlb
pop
xor
lcall
xor
pushl
add
push
dec
outsl
fldenv
dec
push
add
add
jmp
add
pop
add
xchg
movl
cmp
push
or
enter
mov
ljmp
mov
push
pop
data16
aaa
dec
fidivrl
adc
jge
jp
addl
jmp
add
out
push
add
int3
cmp
call
call
add
push
pop
add
pop
mov
in
and
decl
mov
jmp
loope
stc
pusha
add
pusha
add
pop
lds
js
add
mov
clc
pop
cmp
stos
lret
mov
mov
pop
lahf
and
jge
add
xor
jge
jb
fidivrs
insl
xchg
mov
clc
push
add
and
call
jge
add
dec
outsb
dec
or
add
lcall
icebp
shl
add
popa
add
push
movl
jmp
add
sbb
add
out
cld
push
pop
jae
jmp
ficoml
add
cmp
test
out
lahf
dec
xchg
call
cmc
pop
mov
add
lock
jbe
add
fcomps
push
adc
add
add
and
adc
jmp
add
cmp
ljmp
or
add
xchg
mov
inc
add
addl
or
cmp
aad
add
add
je
das
jbe
add
add
imul
push
add
call
adc
jmp
dec
cmp
arpl
ljmp
icebp
out
arpl
push
lcall
and
call
nop
shll
add
sub
mov
stos
adc
jg
add
add
repz
ret
add
pop
arpl
decl
xor
add
mov
pop
fimuls
cmp
add
mov
add
mov
scas
hlt
loope
push
mov
add
and
outsb
sub
mov
add
inc
add
pusha
add
data16
add
adc
add
pushf
push
ljmp
add
movsl
add
scas
in
imul
addb
adc
icebp
lods
lods
sub
mov
and
and
incl
jmp
jmp
add
pop
and
imul
cmpsl
add
add
fdiv
jo
incl
ja
or
cs
add
mov
call
incl
jg
std
or
add
pop
push
pop
pushf
out
push
add
xchg
inc
add
add
fldenv
sahf
inc
add
and
adc
lcall
add
add
dec
jns
insb
lds
jmp
add
lcall
mov
mov
imul
add
sti
test
fnstsw
insb
push
in
jae
call
decl
fadd
add
mov
jmp
add
incl
add
mov
aas
and
fiaddl
adc
lcall
incl
add
push
add
mov
inc
add
cmp
xlat
std
xchg
push
ss
or
add
je
add
dec
add
jmp
add
incl
add
scas
xor
lcall
idivb
xchg
lods
in
pop
addb
sub
add
add
fsubr
data16
roll
test
loop
inc
add
mov
jg
add
mov
mov
add
les
adc
in
ljmp
pop
mov
stc
repz
mov
pusha
add
pop
je
xchg
cmp
add
add
cmc
mov
add
dec
add
xor
decl
add
mov
sbb
and
aad
push
xchg
add
add
aam
xor
dec
add
add
mov
add
call
add
sbb
cmp
xchg
insl
sbb
xlat
add
scas
roll
outsl
js
cmp
addb
push
add
ret
repnz
bound
decl
jge
cmp
shrb
out
ljmp
inc
add
jae
call
fstpl
xchg
mov
jns
add
jmp
add
dec
out
cltd
sbb
add
and
jmp
mov
add
and
ljmp
inc
add
add
jbe
in
cmp
out
or
rolb
add
in
add
jle
sar
lcall
adc
mov
lcall
mov
jo
jge
inc
add
addl
add
pop
test
add
loopne
xchg
jmp
add
jne
add
inc
add
call
mov
add
mov
push
add
cld
adc
jb
jmp
jp
mov
push
mov
call
cmp
add
ret
mov
jecxz
je
xchg
lea
add
add
ljmp
outsl
sahf
fmul
mov
pop
ljmp
adc
lea
add
xchg
xor
incl
add
test
aam
add
mov
dec
mov
into
mov
add
inc
add
ds
cmp
fwait
mov
adc
lcall
ficomps
or
add
popf
mov
jmp
add
add
lahf
cld
pop
inc
add
std
push
add
ffree
add
add
aaa
addb
add
ljmp
loopne
mov
add
add
sub
decl
shll
add
in
inc
add
xchg
cmp
scas
mov
mov
add
in
pop
aad
mov
repz
add
clc
inc
add
sbb
incl
sub
movsb
add
ja
and
incl
call
call
mov
add
add
or
add
jne
add
inc
add
in
fistl
addb
test
cmp
pop
loop
sub
push
jmp
scas
outsb
cmp
jnp
add
test
fmul
test
outsb
in
movups
push
mov
add
add
dec
and
in
xor
incl
ljmp
lahf
repnz
xor
adc
jmp
mov
add
pop
mov
add
sub
dec
incl
add
mov
pop
and
ljmp
rolb
add
add
mov
loopne
xchg
sbb
dec
imul
push
add
add
hlt
loop
or
add
ljmp
add
mov
pop
add
sbb
add
add
mov
mov
add
jns
iret
push
adc
lcall
out
movl
sub
cld
gs
add
and
lret
add
pushf
fstpt
or
add
sar
mov
add
movsb
add
das
mov
add
stos
adc
incl
mov
popa
add
inc
add
mov
add
cmp
mov
std
mov
ret
add
add
push
aas
mov
dec
outsl
and
pushl
pop
sub
ret
add
xor
ljmp
add
dec
add
add
cmp
add
test
scas
adc
jmp
call
movsb
add
fwait
push
negl
jl
bound
ljmp
leave
add
jge
stos
pop
add
rolb
lret
int
add
pop
in
pop
inc
add
adc
jmp
add
out
add
out
loop
pop
movl
add
cli
jb
pushl
ljmp
add
and
pushl
test
mov
add
or
xor
movsl
add
add
movl
daa
add
sahf
mov
sbb
add
sbb
fcomi
mov
popf
hlt
data16
sbb
je
add
das
idivb
add
fadd
add
add
add
call
mov
and
in
shrb
add
inc
add
sub
sub
test
lds
cmpsb
add
add
mov
add
jno
ljmp
decl
xor
lcall
push
add
in
xor
call
roll
jp
out
dec
xor
jmp
cld
aam
cmp
add
imul
lock
test
lods
mov
mov
inc
add
jb
incl
add
jp
add
mov
repz
pop
cli
iret
inc
add
add
add
add
add
out
lahf
negl
dec
outsl
mov
add
lds
fwait
mov
mov
add
add
add
aaa
repz
mov
xchg
ret
add
adc
call
jo
dec
xor
cmpsl
add
add
in
shll
add
cli
ljmp
add
cmp
xchg
inc
add
test
dec
addb
das
jmp
out
int3
outsl
and
decl
les
bound
lcall
add
pop
pusha
add
sbb
stc
cltd
ds
xchg
sbb
add
xchg
push
add
push
add
add
setno
aaa
cmpsl
add
add
lcall
jae
call
call
filds
lret
je
leave
mov
mull
ljmp
sub
xchg
addl
mov
lret
into
push
pop
enter
mov
pop
lods
inc
add
adc
push
xchg
mov
in
pusha
add
dec
movsb
add
ja
add
call
test
add
add
add
mov
jmp
test
inc
add
xor
ljmp
ss
test
test
dec
movb
cmc
movl
out
pushf
push
add
add
test
mov
jmp
jmp
add
lds
loop
mov
rol
add
lret
push
add
push
fcmove
lret
addl
add
rolb
jno
and
decl
sbb
ffreep
add
dec
add
add
lret
cmpsb
add
pushl
loopne
ror
mov
add
mov
or
cmp
sbb
fidivrl
testb
dec
jle
inc
add
add
outsb
rorl
add
add
test
add
mov
stos
in
hlt
repz
xchg
xchg
clc
mov
add
pop
enter
jle
add
test
addb
push
add
mov
pop
pop
hlt
sub
add
xchg
nop
and
lcall
mov
add
add
cwtl
jl
ljmp
add
xor
cmp
jno
mov
adc
ljmp
pushf
mov
add
call
add
ret
add
jg
in
fiaddl
jl
fwait
test
pop
add
and
add
mov
movl
add
addb
enter
add
popf
pop
rorl
push
adc
jns
cs
xor
add
mov
mov
jbe
dec
jmp
and
jle
cltd
popa
add
xor
lcall
add
or
addb
lea
movl
sub
mov
add
lret
jae
jmp
cli
pop
rolb
jmp
cld
scas
sub
loopne
shrb
sub
js
add
add
rorb
or
add
mov
xor
jmp
add
add
jmp
lods
jo
lcall
imul
int
movsl
add
mov
pop
nop
lea
mov
je
pop
or
xchg
or
and
dec
imul
mov
add
cmp
mov
add
jb
pushl
add
sti
or
mov
add
mov
arpl
pushl
add
lods
push
in
imull
lods
bound
ljmp
testl
mov
aas
nop
jne
push
ds
jl
and
ljmp
add
inc
add
fisttpl
push
or
or
rcrl
sub
push
test
addb
add
xor
add
add
and
jp
cmpsb
add
sbb
jg
add
jg
xchg
add
add
cli
push
mov
add
add
add
inc
add
jbe
push
dec
jae
fdivr
cmp
icebp
stc
and
cmpsb
add
dec
test
roll
or
and
lcall
addr16
pop
cmp
mov
dec
mov
add
add
push
add
mov
mov
xchg
push
add
adc
incl
outsl
add
ljmp
repz
add
add
in
add
incl
add
jg
push
jecxz
sub
arpl
lcall
addl
sbb
in
cmp
add
lcall
aam
leave
fistps
mov
pop
aad
add
add
mov
sub
enter
inc
add
les
ret
add
dec
push
add
or
add
call
lods
nop
dec
push
add
scas
jno
jmp
xchg
sbb
inc
add
inc
add
push
add
cli
xchg
sahf
in
jmp
xor
lcall
fsubrl
push
add
push
fwait
addb
xor
ror
icebp
push
jl
cld
push
add
push
add
inc
add
out
loop
loope
fmuls
mov
enter
fcmovu
pushf
mov
add
jae
mov
add
add
out
mov
mov
add
xchg
pop
daa
add
jns
mov
push
add
aad
push
add
addb
add
js
push
adc
call
add
mov
repnz
add
aaa
add
jmp
add
add
repz
add
pop
mov
roll
dec
xchg
or
int3
ficoms
das
inc
add
jbe
add
add
jmp
add
popl
jmp
incl
add
add
addl
add
bound
jmp
add
divb
pop
mov
mov
dec
pop
repz
out
cmpsl
add
add
add
adc
ljmp
adc
ljmp
push
add
pushl
fistpll
movl
add
test
loope
fisttpll
imul
call
add
add
jmp
add
add
adc
mov
add
push
add
popf
jbe
testb
psubq
dec
mov
add
incl
fwait
xor
pushl
jo
clc
inc
add
pop
sub
call
add
xlat
jo
jmp
add
scas
test
sti
and
mov
jnp
add
dec
in
sbb
nop
push
addl
add
add
sbb
add
mov
dec
dec
clc
xchg
aam
push
sub
or
and
inc
add
jae
call
ffreep
add
add
aas
pop
lods
jne
add
add
lcall
daa
add
or
ss
add
cmp
sbb
movb
sub
add
xchg
push
loope
pusha
add
push
add
inc
add
lods
test
sbb
add
add
jae
pushl
mov
test
jl
add
sbb
add
pushl
pushl
xchg
dec
cmpsl
add
roll
les
fsubr
mov
add
push
pop
dec
cmp
add
adc
addb
add
outsb
dec
mov
mov
mov
and
movb
add
add
mov
fsubrs
mov
dec
scas
xchg
push
add
xor
jmp
add
push
in
cmc
aas
push
add
lds
mov
mov
push
call
lret
lcall
mov
out
mov
and
jns
add
pushf
mov
jo
dec
jecxz
xor
incl
add
test
xchg
push
add
pop
sti
fucomip
jne
add
push
sub
inc
add
dec
loop
movl
aaa
test
and
call
add
sub
loope
pop
dec
faddl
xor
mov
add
mov
addl
repnz
inc
add
loop
mov
add
rolb
dec
je
add
dec
mov
mov
out
mov
add
dec
pop
cmp
decl
imul
incl
fidivrl
pushl
jmp
add
sarb
pushf
mov
add
out
lock
incl
incl
add
mov
add
ret
add
add
jp
pop
sti
dec
xor
sub
call
pop
push
cld
xchg
aad
jnp
add
or
add
inc
add
xchg
loop
movsl
add
jo
jmp
add
add
add
xor
add
add
add
add
data16
in
lcall
adc
mov
and
jl
inc
add
aad
imul
adc
decl
sbb
add
add
or
push
iret
cwtl
jg
adc
fdivp
addb
xchg
cli
jb
jmp
add
add
fcos
jmp
repz
sbb
and
ds
add
ljmp
outsl
adc
ljmp
add
pushl
add
cld
movsl
add
dec
xchg
xor
incl
fnsave
decl
adc
decl
inc
add
and
ljmp
add
mov
in
aas
hlt
js
out
cmp
pop
cwtl
inc
add
sbb
pop
outsb
scas
lret
cld
sbb
cmp
loopne
dec
mov
icebp
xlat
push
add
pusha
add
adc
lcall
add
add
call
pop
rolb
xchg
pop
lahf
add
call
add
cltd
cmp
xchg
fmull
mov
add
add
in
adc
decl
add
int3
and
lcall
insb
sbb
add
xchg
stos
inc
add
ds
mov
and
incl
fwait
add
decl
jns
mov
jg
mov
add
add
add
push
mov
add
cwtl
inc
add
addb
mov
add
cmp
mov
add
dec
ja
lods
test
lret
mov
cld
mov
test
add
add
rolb
sbb
cld
xor
jmp
add
mov
pop
mov
inc
add
add
jecxz
pushf
push
add
push
add
add
add
addl
add
add
aad
mov
add
out
inc
add
add
adc
add
lcall
add
and
dec
stc
mov
xchg
xor
jmp
aas
imul
sub
lret
add
es
add
mov
add
dec
test
xchg
adc
pushl
outsb
bound
ljmp
push
add
and
lcall
or
sub
insl
add
add
leave
and
call
mov
add
aam
stos
dec
cld
pop
out
xchg
scas
jne
add
and
decl
add
ds
sub
add
mov
add
fldcw
xchg
imul
add
mov
in
in
dec
mov
div
in
mov
add
add
add
lcall
xchg
imul
sub
insl
mov
sbb
sub
jle
sub
push
jge
add
sub
add
add
adc
mov
and
and
jp
mov
adc
decl
push
xchg
pusha
add
mov
lret
fdivl
add
jl
push
add
jnp
add
push
popa
add
sub
add
inc
add
addl
inc
add
cmp
add
add
mov
cmp
jmp
add
pushf
mov
xchg
sub
mov
pop
ret
rolb
add
add
or
add
add
jle
int
jnp
add
cwtl
and
add
push
add
js
pop
popf
xchg
inc
add
or
xor
daa
add
add
dec
jae
call
jge
xchg
push
loopne
test
cltd
movl
or
test
or
jecxz
inc
add
lds
aam
xchg
push
add
loope
dec
ret
jbe
add
mulb
add
out
mov
inc
add
pop
cmp
jbe
mov
data16
xor
add
or
aam
add
iret
sub
addl
inc
add
cmp
in
fildll
decl
add
jle
jo,pt
call
fists
pop
add
add
add
decl
les
mov
add
mov
push
add
and
jmp
add
nop
or
add
add
jmp
add
pop
cmp
jmp
add
push
add
popa
add
in
stc
mov
add
cld
mov
addb
add
push
jecxz
loope
sub
fadd
add
add
add
incl
add
fwait
jl
or
dec
divb
lock
daa
add
fwait
push
add
add
lock
xchg
push
add
int
cmpsb
add
push
add
xor
loope
mov
adc
add
xchg
imul
add
sub
into
cli
push
add
add
incl
add
pop
incl
push
add
mov
filds
push
and
incl
incl
jmp
roll
or
add
jl
add
iret
xor
pushl
push
fadd
add
cli
addl
sbb
addb
fcompl
add
jnp
fdivrs
gs
fptan
dec
jne
insb
xchg
movl
scas
sbb
xchg
inc
add
stos
sbb
add
and
pushl
icebp
lods
push
add
imul
test
in
inc
add
lcall
ljmp
add
aaa
test
dec
pop
ficomps
add
jmp
mov
push
sub
out
sub
bound
call
lcall
lahf
xchg
sub
xlat
cld
mov
mov
xor
push
in
adc
in
aam
lcall
lock
movsl
add
xchg
jp
add
in
mov
xchg
dec
add
call
int
add
push
xchg
fwait
xchg
cli
stc
cmpsb
add
or
add
inc
add
sbb
test
xor
jmp
add
ljmp
addb
add
mov
push
daa
add
add
pushl
add
dec
and
fsub
add
cmp
jmp
fistpll
add
gs
or
pop
in
pop
push
mov
addb
push
add
adc
ljmp
roll
xor
call
sbb
add
add
data16
or
dec
sub
add
pushl
call
jle
lea
push
cmpsl
add
add
cmpsb
add
xchg
mov
lahf
mov
leave
inc
add
xchg
int3
dec
ja
add
add
fidivs
mov
or
hlt
cmc
sub
cli
aad
mov
pop
xchg
adc
jmp
lcall
lock
addb
movsb
add
add
sbb
add
adc
add
call
decl
adc
out
pop
xchg
jge
push
stos
out
cmp
ljmp
xchg
mov
or
add
decl
adc
jns
add
or
loop
push
add
in
and
jmp
add
adc
lcall
cli
lods
std
inc
add
scas
pop
add
mov
dec
mov
add
mov
cmp
push
add
add
fnstcw
popa
add
inc
add
inc
add
adc
movsb
add
mov
add
mov
cmc
scas
test
out
leave
cld
pop
loope
mov
add
inc
add
or
daa
add
sbb
jno
incl
add
pop
pop
or
das
xchg
push
add
repnz
or
add
mov
ret
add
add
dec
ret
add
jae
jmp
add
mov
mov
call
pushl
movb
in
inc
add
std
ret
cmpsb
add
test
cli
jl
add
ret
add
sub
adc
push
adc
add
xor
fsubp
add
jge
dec
rcrl
add
add
jae
push
jg
cmpsb
add
in
and
jmp
aam
daa
add
imul
movsb
add
les
dec
mov
add
or
add
push
add
int3
ja
add
pop
push
movb
add
xchg
and
cmp
movb
add
decl
cmp
add
nop
and
lcall
jecxz
inc
add
lcall
rolb
addb
mov
add
add
lret
stos
mov
add
sti
lret
nop
stc
out
xor
jmp
add
push
xchg
sysexit
and
lcall
add
out
sub
movsb
add
mov
xchg
loope
add
add
add
jge
add
icebp
movsb
add
daa
add
dec
out
addb
add
xor
add
lds
icebp
test
pop
push
and
rolb
lods
xor
call
cmp
add
ficomps
loopne
sub
fwait
jno
jmp
add
mov
dec
jp
sub
cltd
pop
daa
add
add
add
add
icebp
movsb
add
inc
add
pushl
jmp
cld
cli
pop
aas
loope
dec
imul
mov
sbb
add
pop
sahf
mov
jecxz
inc
add
add
add
or
add
rolb
cmp
or
movl
addb
mov
and
incl
add
test
cmp
cmpsl
add
loope
daa
add
pop
add
aaa
jl,pt
ljmp
in
repnz
sub
mov
xchg
daa
add
popf
push
clc
aad
scas
ftst
add
jge
sub
add
push
push
cmp
add
add
popf
add
jmp
add
jb
jmp
add
ljmp
or
add
das
inc
add
add
incl
add
shll
or
call
sub
aaa
test
add
mov
jmp
pusha
add
fdiv
push
cmp
xor
lcall
mov
add
mov
sub
incl
outsb
xchg
xchg
stos
fdivl
add
sbb
bound
incl
add
adc
pusha
add
mov
stos
lcall
ljmp
add
ret
lods
in
ljmp
dec
push
add
mov
mov
add
xor
call
fdivrs
add
xor
roll
push
shrl
inc
add
decl
mov
add
mov
dec
xchg
cwtl
jns
add
jnp
add
mov
mov
push
inc
add
mov
add
in
filds
incl
add
jmp
add
cli
cs
jmp
mov
ret
test
test
loopne
xor
decl
aas
mov
js
xchg
stos
add
pushl
add
testb
jne
add
jno
decl
mov
iret
and
add
add
sbb
pop
nop
je
sbb
xor
lcall
int3
sub
add
add
xchg
sbb
add
cmp
inc
add
pop
ja
pushf
fs
add
xor
inc
add
mov
add
pop
add
call
in
cwtl
pop
mov
add
and
pushl
mov
add
add
ret
pop
jno
dec
push
pop
in
xchg
test
jl
add
mov
insb
fistpll
add
pusha
add
test
std
ret
add
sbb
add
add
rclb
pop
shl
pop
add
ljmp
add
lret
mov
add
pop
add
add
add
add
pusha
add
clc
pop
fsts
pop
int
outsb
ret
add
inc
add
adc
jmp
dec
aad
mov
xchg
outsl
imul
fadd
add
lahf
enter
add
add
lods
mov
mov
push
add
movsl
add
add
add
loope
pushf
in
movb
adc
jl
mov
aam
push
add
add
xchg
fisubs
add
cmpsb
add
adc
decl
addb
push
addb
pushl
add
xchg
push
les
or
scas
dec
cmp
and
incl
aam
fcomps
pop
int3
mov
inc
add
cmp
add
incl
add
decl
add
adc
pushl
add
ja
je
add
call
mov
mov
push
int
lock
mov
add
fbstp
add
int3
mov
add
cmpsl
add
pop
or
add
mov
jo
cmp
add
sahf
add
call
pushl
sti
test
and
mov
ljmp
mov
add
out
scas
or
add
pushl
xor
sbb
add
and
or
lcall
repz
xchg
out
jp
push
or
pop
scas
sbb
add
sbb
jmp
dec
mov
shll
incl
lcall
add
jge
add
testb
testb
xor
incl
cmp
add
inc
add
cmp
pop
jnp
add
add
xchg
aas
arpl
decl
jmp
add
out
test
add
call
addl
decl
push
add
inc
add
loope
mov
add
pushl
add
movsl
add
add
xor
loopne
lods
mov
sbb
addl
sbb
add
xchg
mov
cmp
cmpsb
add
add
xor
mov
std
lret
mov
bnd
add
or
add
add
fwait
xchg
ja
add
jb
pushl
mov
js
mov
bound
decl
xor
fwait
cmp
imul
das
in
add
in
jb
cmp
flds
inc
add
and
lcall
add
inc
add
rcrb
xor
ljmp
push
mov
cmpsl
add
add
ljmp
mov
shll
jge
call
call
mov
lcall
pop
mov
nop
or
rcrb
pushl
fsubrl
lods
xchg
mov
pop
add
pushl
add
xchg
sbb
add
xchg
mov
incl
incl
loop
lret
das
insl
jne
rolb
sub
xor
dec
inc
add
out
mov
add
inc
add
jns
fcmovnbe
sub
sub
cmp
sti
sub
add
sub
out
popa
add
or
test
lods
imul
pop
lea
add
add
mov
add
add
add
aad
call
and
mov
add
or
cmc
fdivrp
and
dec
jbe
add
add
add
in
mov
add
push
shrl
mov
rcrl
and
decl
jns
add
stos
shll
jecxz
data16
pop
add
push
add
add
lcall
insl
int3
mov
ljmp
mov
add
or
or
ljmp
rolb
add
add
add
xchg
repnz
add
jne
add
mov
cltd
lret
leave
pop
pushl
add
pushl
aad
dec
mov
add
or
add
sbb
je
sbb
add
lahf
out
lock
lret
pop
add
push
in
gs
adc
jmp
add
pop
pop
cmp
outsb
jg
mov
mov
add
ds
add
add
add
add
add
jp
add
ret
add
les
mov
es
xor
pushl
jmp
add
add
mov
adc
dec
outsb
lds
push
jns
call
sub
add
cmp
mov
fidivrl
movsb
add
adc
push
addr16
shll
add
add
cmp
lock
addb
add
push
mov
mov
xlat
jge
hlt
in
sbb
insl
push
out
mov
add
test
push
add
lcall
scas
sub
rolb
add
stc
data16
add
into
imul
add
and
add
add
decl
repnz
and
mov
add
shlb
jns
cmpsb
add
mov
add
cmp
add
add
xor
pushl
call
push
mov
add
js
add
inc
add
add
inc
add
add
add
incl
int
add
ljmp
es
pop
shr
mov
add
add
call
in
sbb
add
mov
call
sub
mov
add
call
xor
push
fsubl
add
int3
inc
add
stos
insb
leave
sti
cmp
sbb
cmp
ficoml
add
mov
or
add
mov
add
add
fdivs
repz
dec
adc
xor
decl
repnz
add
xor
aad
add
insl
movsb
add
adc
decl
les
add
jmp
add
add
cmpsl
add
add
jae
jmp
add
add
outsb
push
or
call
xor
mov
push
add
mul
add
mov
inc
add
ss
xor
arpl
call
jmp
jbe
add
mov
add
test
xlat
pcmpgtb
inc
add
addb
jle
and
adc
incl
add
pusha
add
ja
add
cmpps
add
rolb
add
mov
xchg
sub
mov
decl
inc
add
cmpsb
add
arpl
call
jmp
add
sub
add
or
lea
add
jmp
sub
dec
push
dec
call
jecxz
stos
pop
loope
fldcw
add
xor
cmp
icebp
push
test
push
popa
add
pushf
mov
jecxz
ds
fsubp
add
jmp
add
add
inc
add
insb
mov
or
cmp
add
jecxz
test
sbb
js
add
mov
std
popf
ljmp
cwtl
mov
add
repz
add
jmp
add
loope
aas
sbb
shr
jmp
pop
pop
add
add
add
jae
call
add
ljmp
xchg
adc
cwtl
ret
add
aad
jbe
add
fisttpl
aam
roll
cli
sbb
add
into
add
decl
xlat
xor
inc
add
add
mov
lock
cmp
add
lcall
mov
inc
add
sub
mov
add
movl
push
add
jecxz
jnp
lods
mov
sarl
insb
push
xchg
inc
add
lea
out
in
js
and
dec
sub
add
loop
ret
add
aaa
fs
add
push
sbb
sbb
add
sarl
push
add
aad
xor
add
add
add
add
bound
incl
mov
xchg
mov
add
mov
add
icebp
add
jg
addl
add
push
adc
add
xchg
addl
xchg
std
and
incl
add
mov
xchg
lods
or
push
add
jno
ljmp
mov
pushl
add
and
inc
add
add
push
add
mov
add
and
decl
add
dec
sbb
add
cmpsb
add
add
pop
cld
lds
pop
adc
add
jo
ljmp
jle
pop
call
sub
xlat
in
mov
add
cmp
outsb
cli
hlt
out
sbb
outsb
adc
call
add
xchg
mov
add
inc
add
adc
nop
fbstp
clc
cmp
test
es
lea
jg
or
push
add
dec
add
pop
imul
push
js
lcall
add
xchg
imul
add
or
pop
push
xchg
jae
incl
add
add
jo
pushl
jmp
add
add
stc
mov
add
mov
mov
in
fwait
gs
pop
add
sti
dec
or
add
push
add
mov
add
mov
lds
cli
adc
add
inc
add
mov
add
lcall
fistl
add
out
inc
add
add
movsl
add
clc
hlt
out
movb
cmpsb
add
xchg
dec
arpl
fists
lcall
or
and
call
push
test
add
fadd
add
xchg
pop
movsl
add
sti
sub
add
out
sar
sti
or
adc
call
int3
rcrb
in
xor
ljmp
or
mov
add
xchg
jno
incl
ret
add
incl
or
jno
lcall
mov
add
cld
jle
insl
mov
add
les
mov
add
add
sahf
push
push
add
add
movsb
add
bound
in
aam
mov
add
xlat
dec
inc
add
std
mov
js
into
add
add
in
xchg
daa
add
add
addb
add
add
xor
mov
dec
xor
js
mov
jmp
add
repz
xor
call
add
out
out
and
enter
xchg
and
jmp
jecxz
xchg
and
aas
mov
adc
jmp
push
out
jb
lcall
add
push
arpl
jmp
frstor
inc
add
mov
cmp
aaa
jo
jge
test
mov
xor
call
jmp
incl
or
and
decl
ret
add
cmp
fnstcw
stos
das
xchg
push
sbb
scas
mov
sbb
fsts
add
fwait
mov
out
or
clc
sbb
out
loope
sahf
pop
lock
movl
movl
fcomps
out
popa
add
shlb
add
incl
pushl
mov
mov
outsb
movsl
add
push
xor
decl
xor
lea
mov
dec
bswap
dec
das
ret
add
call
in
pop
xchg
sbb
add
mov
lock
add
ljmp
add
add
jmp
repz
and
ljmp
lret
ljmp
cmp
pusha
add
adc
dec
pop
sbb
ljmp
add
call
add
push
add
sbb
fdivp
inc
add
add
dec
sub
addb
add
add
lcall
lods
xchg
mov
pop
add
fistps
jb
jmp
lcall
divl
repz
jge
jne
add
push
add
ljmp
divl
add
push
addr16
loope
xor
call
lret
sbb
cmp
into
adc
add
cmp
jmp
add
mov
ljmp
dec
cmp
add
imul
incl
adc
pushl
dec
jnp
add
add
call
fmul
stc
faddl
pushl
incl
add
cltd
pop
sbb
inc
add
aad
sti
pop
ja
add
push
mov
fnsave
add
mov
pop
loop
repnz
add
inc
add
aad
dec
dec
pop
pusha
add
push
mov
add
mov
pushl
mov
or
js
pop
rolb
aas
into
jge
add
int
add
fcoml
addl
shl
mov
sbb
adc
call
rorb
jmp
xlat
addb
sbb
push
in
addl
add
fwait
mov
add
or
add
add
add
cli
cmp
repnz
pop
les
dec
pop
popf
pop
imulb
imul
out
sbb
add
mov
mov
fst
popf
mov
jmp
inc
add
xchg
movl
enter
dec
cmp
fldcw
xchg
add
clc
repz
inc
add
call
add
xlat
xchg
cwtl
adc
lods
ret
addl
add
adc
fimull
imul
xchg
jge
add
repnz
pusha
add
cmp
add
add
add
add
push
dec
int3
pushf
pop
push
sub
mov
jnp
outsl
and
fnstsw
insl
stos
inc
add
xor
lcall
pop
add
add
sbb
call
adc
jmp
add
out
and
push
cltd
dec
ret
addb
add
loopne
mov
add
rolb
sbb
add
cld
jnp
stos
adc
decl
jno
jmp
mov
dec
stc
into
movl
mov
cmp
sbb
add
lret
mov
jmp
cld
inc
add
dec
roll
fstp
fwait
inc
add
add
daa
add
sub
add
fmul
lods
add
sti
sub
sub
adc
lcall
mov
jmp
xchg
push
mov
inc
add
push
add
pushf
mov
add
jns
add
pop
xchg
push
cmp
loopne
jp
test
mov
and
add
bound
call
add
add
xchg
xlat
addb
xchg
xchg
cmp
mov
dec
faddp
add
fisttpll
inc
add
adc
jmp
add
stos
inc
add
movb
cmc
dec
repnz
inc
add
sahf
stos
scas
mov
in
inc
add
push
fisttps
add
sub
mov
fisubrl
add
les
xor
jns
add
jmp
add
adc
call
and
decl
mov
incl
jnp
add
add
add
nop
sti
mov
add
add
mov
ss
add
sbb
add
jge
xchg
rcr
lods
sub
inc
add
push
add
add
icebp
movb
add
sti
flds
dec
hlt
jmp
insl
jl
sahf
adc
dec
push
add
in
dec
lea
add
push
jns
pop
mov
pop
stos
pop
adc
pushl
nop
imulb
testb
aaa
xlat
cmp
nop
inc
add
xor
lcall
pushl
decl
push
aas
scas
push
shlb
frstor
add
xchg
daa
add
jge
ss
test
xchg
push
add
data16
add
call
add
roll
add
jns
add
add
xor
mov
jg
in
mov
lcall
add
add
mov
push
add
push
decl
add
cs
pop
xchg
imul
ljmp
lcall
mov
add
pop
arpl
dec
dec
jnp
fsubs
add
jbe
add
add
mov
add
pop
cmc
test
imul
jmp
lcall
pop
movsb
add
inc
add
rolb
insl
frstor
test
fimuls
pop
cmp
stc
out
loop
xchg
imul
lcall
enter
je
loop
sbb
negb
sub
mov
add
incl
add
test
addb
add
fisttps
arpl
call
dec
pop
xchg
adc
jae
decl
xchg
xchg
fidivrl
cmp
inc
add
out
lret
addb
add
add
add
mov
add
roll
or
add
arpl
decl
add
and
or
jle
cltd
add
pop
add
pop
enter
aas
call
jne
ret
add
mov
add
movsb
add
mov
pushf
shrl
jne
bound
lcall
add
sbb
repnz
fxam
add
add
mov
push
add
add
mov
xlat
inc
add
xchg
and
arpl
jmp
add
insb
dec
jg
add
loopne
xor
dec
adc
add
inc
add
ss
std
or
add
mov
lret
decl
add
movl
pop
rolb
mov
pop
mov
cld
daa
add
add
xchg
cwtl
cmc
mov
out
out
xchg
jno
decl
std
ret
add
ljmp
outsb
repz
mov
aad
and
ljmp
mov
and
cmp
jmp
cltd
xchg
rcrl
mov
test
data16
add
xchg
dec
movl
add
into
cli
xchg
addl
jle
add
addl
lds
dec
pop
cmc
jl
nop
addb
add
ss
pusha
add
jo
dec
aad
addb
cmpsb
add
add
sti
or
mov
inc
add
sbb
add
into
addl
pop
pop
xor
add
into
xchg
xchg
imul
pop
outsl
dec
iret
cmp
incl
call
adc
call
in
mov
add
adc
call
mov
add
jmp
roll
add
cmp
or
mov
dec
in
mov
sub
add
add
add
loopne
stc
bound
inc
add
xchg
jmp
add
dec
stos
mov
adc
jmp
add
std
mov
add
call
decl
outsb
adc
movsb
add
insl
mov
add
shrl
add
stos
jecxz
pcmpgtd
pushf
sbb
ljmp
call
call
sub
lock
add
cld
mov
add
call
add
push
add
ljmp
add
add
mov
add
dec
lcall
add
push
jo
jmp
aas
fnstsw
add
mov
adc
clc
xor
incl
cmp
jne
mov
adc
lcall
lods
or
lock
stos
and
decl
add
out
mov
mov
dec
mov
add
mov
jb
incl
ds
addl
jbe
addb
jbe
add
ljmp
nop
jecxz
jl
push
mov
xor
jmp
stc
nop
jns
inc
add
dec
inc
add
sub
add
or
add
lock
lcall
lcall
add
inc
add
rolb
ljmp
pop
jb
ljmp
xchg
adc
decl
push
add
jne
add
and
jmp
add
cmpsb
add
notl
push
sbb
repz
add
add
add
out
push
add
sub
jecxz
dec
mull
lcall
xchg
mov
decl
dec
and
ja
sbb
ljmp
std
cwtl
or
popf
lret
and
out
in
adc
jmp
lds
add
rolb
push
mov
xchg
icebp
sub
jl
push
xchg
lret
incl
inc
add
add
add
dec
or
adc
add
dec
pop
mov
sbb
adc
incl
ljmp
notl
imul
addb
add
inc
add
jns
mov
add
sbb
jnp
jne
cmp
pop
add
incl
mov
lods
cmp
add
cwtl
push
add
out
lcall
add
and
cmp
push
jmp
jb
inc
add
fnstsw
bound
decl
inc
add
dec
lds
jmp
lods
enter
add
aad
idivb
add
cmp
adc
jmp
jne
pop
add
jle
add
mov
add
mov
add
jg
add
sti
xor
call
sbb
xchg
addb
mov
mov
js
ja
mov
fstl
mov
add
lret
arpl
pushl
sbb
add
sub
adc
call
roll
daa
add
insb
sbb
pushf
stos
lea
scas
jb
jmp
inc
add
lret
daa
add
add
jp
add
out
enter
or
mov
dec
mov
add
jmp
jmp
add
add
mov
mov
sub
and
call
lcall
add
je
pop
nop
in
add
dec
lock
enter
add
out
in
pushf
mov
bound
lcall
push
jne
xchg
and
rcrl
in
sti
inc
add
fsubr
rorl
pushl
add
bound
jmp
add
push
add
jnp
add
fidivrs
sub
sbb
add
add
mov
jae
jmp
add
dec
mov
daa
add
jmp
add
and
call
add
dec
loopne
insb
addb
cmpsb
add
dec
into
pop
xor
add
xchg
xchg
mov
add
add
sti
xlat
sub
add
push
xchg
jge
add
lcall
icebp
inc
add
or
std
pop
movb
add
add
mov
jge
push
add
mov
incl
int3
ja
add
lcall
mov
jmp
add
in
out
adc
cld
dec
int
aas
xchg
jnp
cli
push
jnp
add
dec
inc
add
mov
add
rcrb
mov
xor
add
pop
jae
ljmp
rcr
into
push
aaa
and
call
push
push
sahf
mov
or
into
add
ljmp
xchg
dec
pushf
push
add
xlat
outsl
shufps
imul
addb
add
push
add
add
push
inc
add
and
fisubs
call
arpl
cmp
hlt
mov
jge
in
cltd
fadd
add
sbb
jnp
add
test
movl
enter
cmp
add
add
dec
mov
jns
hlt
jg
add
movl
fnstsw
sbb
out
xchg
iret
outsb
mov
add
pushl
cmpsb
add
arpl
pushl
add
add
push
insl
mov
ljmp
add
cltd
mov
add
popa
add
xchg
and
decl
ret
add
fnstcw
cli
imul
lock
jmp
jbe
cld
popf
mov
add
daa
add
add
lods
inc
add
adc
call
add
loopne
inc
add
inc
add
ljmp
add
push
add
dec
pop
add
sbb
push
add
xor
incl
das
add
call
jbe
loope
mov
add
popf
icebp
jp
add
cld
sub
sbb
add
add
sbb
cmp
rorl
push
bound
lcall
xchg
xchg
dec
push
insb
and
lcall
mov
fs
sbb
xor
or
mov
add
xchg
mov
sub
mov
mull
mov
add
add
xor
add
cltd
pop
and
dec
jne
mov
ljmp
jecxz
leave
movb
hlt
mov
jmp
add
loopne
outsb
and
add
lods
push
movb
adc
inc
add
test
ljmp
popf
push
add
shlb
and
add
test
ss
adc
add
mov
add
pushl
lret
sbb
sbb
incl
mov
cmc
push
mov
inc
add
pop
jecxz
adc
incl
pushl
stos
sahf
jmp
iret
bound
jmp
add
add
sbb
add
sbb
fbstp
add
shll
decl
mov
add
xor
jp
scas
xchg
in
cmp
add
mov
add
and
incl
icebp
cmp
mov
out
insb
jb
jg
add
cmp
add
jmp
dec
jmp
adc
add
jmp
xor
inc
add
cmpsb
add
les
mov
add
adc
fldenv
dec
mov
add
loope
enter
jmp
add
mov
ret
push
inc
add
cmpsb
add
aam
sti
xor
decl
or
add
decl
add
loope
lods
xlat
jl
add
mov
mov
cmp
and
lcall
icebp
out
je
mov
add
std
xchg
or
add
and
jmp
add
dec
ficoms
pushl
cmp
add
mov
dec
jecxz
fisttps
call
mov
rolb
mov
add
repnz
sti
daa
add
add
sbb
fldln2
lea
ds
push
add
addl
add
fs
sub
stc
push
mov
aam
cmp
pop
enter
add
insb
cmc
scas
cmp
imul
rolb
addl
mov
roll
insb
sahf
mov
mov
add
nop
sbb
shl
add
enter
mov
sahf
imul
mov
add
add
neg
and
push
daa
add
add
xor
add
arpl
call
lcall
mov
pop
or
add
add
aam
add
add
call
or
add
incl
ret
add
decl
jns
add
xchg
scas
lret
test
repz
loopne
cmp
es
xchg
push
add
pop
adc
add
xchg
dec
add
ljmp
popa
add
mov
add
xchg
dec
mov
test
add
lods
scas
fsubrl
add
mov
psadbw
mov
dec
bound
inc
add
push
add
mov
cmp
pop
push
pop
xor
or
adc
iret
add
decl
xchg
cmp
push
std
jecxz
movl
in
pop
hlt
xchg
sub
notb
add
out
repz
add
add
into
ja
add
mov
movl
add
pop
inc
add
sub
fisubs
add
incl
nop
lds
inc
add
or
sub
or
int3
out
or
add
sub
add
sbb
inc
add
pop
stos
sbb
incl
add
push
add
xor
inc
add
add
add
mov
lock
xlat
mov
add
mov
pop
lock
mov
rorb
sbb
mov
add
scas
sub
add
test
xlat
xchg
xor
mov
pop
add
add
out
cmp
add
jne
lahf
jge
imul
pop
popa
add
push
sbb
push
add
add
aad
jl
fnstenv
decl
out
aaa
imul
lods
sahf
pop
jo
inc
add
lcall
cmp
jg
rcr
dec
cmp
jmp
cli
xor
out
xor
decl
add
jmp
add
repz
add
adc
jmp
repnz
into
cmp
add
xor
add
push
add
ss
add
fwait
xchg
mov
xor
decl
add
push
sbb
add
ss
add
jae
incl
sub
adc
pushl
add
jle
add
lea
add
ret
add
call
fdivrl
mov
ja
pop
adc
call
add
mov
out
mov
repz
sub
pop
and
dec
jnp
aam
int3
sub
movl
or
fidivs
add
or
mov
mov
adc
decl
mov
aas
lret
aas
pop
add
pop
and
lcall
jno
jmp
add
inc
add
mov
roll
lret
inc
add
sbb
add
add
jne
outsb
xchg
jnp
add
inc
add
add
lods
popl
adc
push
nop
mov
fcompl
lahf
add
addl
add
in
sbb
add
incl
jmp
add
loop
jb
jmp
out
cmp
sti
js
mov
add
adc
call
loope
out
movl
add
dec
ja
inc
add
pushf
movsb
add
ljmp
sub
jmp
add
inc
add
lds
add
fidivs
cmpsl
add
add
rcrl
imul
xor
lcall
cmp
and
clc
push
imul
add
add
out
and
call
pop
jb
jmp
leave
das
mov
add
inc
add
add
add
push
repnz
loope
mov
movl
add
add
push
rolb
add
adc
decl
stos
out
outsl
add
clc
out
or
lahf
sub
add
call
lcall
xchg
mov
add
mov
flds
add
inc
add
add
add
push
or
add
nop
je
add
cmp
push
add
pop
pop
mov
movsb
add
scas
jne
or
mov
dec
xchg
mov
cmp
mov
jecxz
pop
lods
push
add
xor
call
add
lea
jle
xchg
cld
push
add
push
add
insl
fcom
sahf
mov
bound
ljmp
jle
fwait
int
add
add
cwtl
ret
add
bound
lcall
pop
lock
add
add
in
cmp
add
lods
jl
sbb
loope
cs
clc
out
jae
decl
mov
inc
add
xchg
mov
out
mov
mov
add
data16
call
ljmp
loop
cltd
ds
addl
mov
not
fstp
nop
inc
add
xchg
and
lret
and
outsl
mov
cmpsl
add
fwait
mov
sarl
add
sbb
mov
jl
pop
les
add
push
add
ja
addb
add
movsb
add
add
and
fistl
add
aam
cmpsl
add
add
adc
fsub
add
repnz
add
sbb
outsb
jbe
add
inc
add
jmp
adc
pushl
and
jmp
add
cmc
aad
inc
add
add
scas
addb
add
add
cmpsl
add
xchg
aas
movb
sub
sub
call
jns
mov
pop
jae
incl
sbb
cmp
lods
push
add
mov
add
add
cltd
pusha
add
sbb
add
or
add
lahf
movb
cmp
movl
sbb
ljmp
add
into
aaa
cmpsb
add
jne
fistpl
ja
xlat
shl
add
daa
add
int
int3
loope
test
adc
movsb
add
ds
cmp
das
xor
dec
sti
rolb
jp
fsubrl
dec
mov
add
add
cwtl
push
add
incl
lcall
ljmp
stos
xchg
loop
mov
loop
lods
fbstp
add
addl
leave
jle
xchg
ss
add
mov
rorl
dec
aas
inc
add
dec
je
add
mov
inc
add
inc
add
call
add
pop
add
pop
movsb
add
add
ds
add
add
dec
jp
cwtl
loop
shrl
cmp
testb
repnz
add
cmp
int3
push
add
test
add
fmull
lcall
mov
mov
lods
fimuls
mov
add
add
movl
pop
jle
fst
cmp
addb
lahf
sahf
scas
out
push
cmp
xlat
mov
add
push
add
and
push
add
daa
add
add
push
xchg
and
call
sbb
movsb
add
or
add
ljmp
sub
add
add
lods
outsb
mov
add
add
int3
or
adc
mov
add
insb
in
cmp
xor
out
repnz
aad
add
add
movsl
add
add
dec
inc
add
test
mov
out
cmp
mov
shll
inc
add
les
push
jecxz
jge
and
call
mov
add
fdivl
pop
jl
ret
add
push
insb
sub
sti
cld
xor
decl
into
jmp
jmp
clc
xchg
mov
sub
add
add
das
adc
jge
adc
jmp
add
ljmp
xor
incl
ds
add
setge
out
outsl
pop
pop
pop
push
add
pushf
movl
jmp
fdivl
add
std
mov
add
aam
enter
iret
mov
add
add
add
add
add
add
mov
mov
add
adc
jmp
add
test
pop
mov
inc
add
cltd
xchg
mov
fdivrs
mov
xor
jmp
call
add
pushf
adc
inc
add
add
movl
and
incl
or
incl
jl
sahf
xchg
hlt
je
add
cld
fldcw
addb
add
out
stc
inc
add
jle
dec
xor
jmp
add
clc
repz
add
dec
add
in
cmp
add
icebp
push
pop
fs
js
add
add
ret
add
add
inc
add
addb
add
mov
pop
jno
call
pop
fwait
jae
call
imulb
push
cmp
jle
std
sahf
aam
loopne
cmp
push
add
sbb
into
insl
insb
push
sub
jno
decl
insb
inc
add
lock
jecxz
cli
jp
add
scas
lret
add
movl
add
add
mov
test
js
add
add
add
add
pop
fcoml
pushl
jmp
adc
cld
add
decl
cmp
stos
mov
xchg
inc
add
sahf
or
add
mov
addl
xchg
pop
add
decl
dec
roll
add
out
inc
add
ds
or
lods
push
lea
push
ret
push
lds
loope
roll
inc
add
pop
add
lret
sub
ss
iret
mov
mov
mov
movl
add
push
lea
inc
add
hlt
adc
mov
out
mov
fcmovu
shr
mov
sub
enter
dec
in
in
add
dec
cltd
or
fwait
addl
pop
std
xchg
loopne
aaa
xchg
and
das
cmp
add
jmp
movsl
add
add
call
add
mov
dec
rcrb
data16
add
incl
jge
lods
jnp
add
pop
not
pop
mov
or
xor
decl
outsb
scas
in
cmc
sub
add
fisttpll
outsb
push
xor
add
add
loop
stc
shrb
cmp
nop
xor
jge
add
ljmp
mov
pop
fmull
jmp
add
popf
les
cmp
add
inc
add
dec
dec
push
add
outsl
hlt
sbb
in
test
add
mov
sbb
xor
incl
decl
dec
and
push
in
call
decl
add
in
inc
add
mov
icebp
jmp
inc
add
js
add
and
call
add
das
fiaddl
std
push
xor
or
rolb
push
add
add
mov
ficoml
jae
call
sbb
cmp
pop
leave
xchg
lds
jne
lods
js
inc
add
sti
mov
add
mov
mov
or
add
add
jmp
add
dec
dec
mov
roll
addl
movb
add
add
and
incl
pop
in
xor
decl
add
decl
add
fcoms
add
push
je
mov
incl
in
fistps
subps
pop
fisttps
mov
mov
fcmove
les
inc
add
mov
jo
ljmp
add
add
mov
sub
add
add
xchg
and
lcall
add
roll
add
dec
xchg
cmc
out
dec
push
add
cld
addb
add
dec
int
mov
add
cmc
inc
add
mov
cli
sub
add
jg
mov
add
add
fprem1
out
lret
arpl
decl
adc
incl
cmc
add
mov
addb
lahf
jecxz
sahf
lcall
imul
jl
add
add
mov
jg
das
outsl
rcr
lock
pop
push
add
outsb
neg
adc
push
mov
add
mov
jg
jae
decl
cmp
add
sbb
add
xchg
mov
and
xor
jmp
add
add
add
sbb
jmp
jb
push
lods
test
aad
jo
call
xor
ljmp
add
pushf
hlt
test
adc
out
pop
mov
add
xor
nop
mov
adc
cli
dec
out
sbb
push
outsl
cld
sub
or
xor
lcall
cmpsb
add
jmp
xchg
je
jb
cmp
jl
daa
add
ja
add
dec
fdivrl
add
inc
add
sub
push
or
push
addl
in
rcll
jmp
push
aaa
popa
add
push
add
movb
add
mov
sbb
add
ljmp
std
mov
mull
lahf
sub
add
mov
pop
pusha
add
push
addr16
inc
add
xchg
push
xor
jmp
decl
call
add
aad
push
ret
add
out
or
add
add
popa
add
je
adc
jmp
add
add
shrl
call
in
and
std
addr16
dec
xchg
cmp
add
les
add
add
pushl
add
push
add
inc
add
adc
fcompl
roll
add
sbb
adc
lcall
clc
fsubs
xlat
jmp
decl
ret
add
out
add
adc
add
call
push
pushf
fisubrs
add
int
add
ljmp
je
jns
pusha
add
into
in
sbb
xchg
aaa
ljmp
addb
cmp
add
push
pop
in
pop
xor
cli
xor
add
ljmp
movsl
add
add
int3
icebp
and
decl
add
mov
add
pop
mov
pop
test
or
add
or
lock
mov
xlat
mov
ret
add
pop
fbstp
or
test
lahf
lret
xor
pop
ret
add
fsubs
adc
shlb
push
mov
add
dec
stc
inc
add
adc
jmp
add
lock
add
push
ret
add
mov
insb
fimull
pop
add
sbb
xchg
lcall
xchg
shr
add
xchg
leave
jnp
pop
jge
xchg
inc
add
mov
push
xchg
cli
push
add
pop
sbb
leave
mov
outsl
pop
jae
call
stc
rol
add
pop
mov
pop
cmpsb
add
add
and
ljmp
sub
popf
pop
mov
add
add
dec
mov
add
and
ljmp
and
mov
add
hlt
cmp
iret
add
jmp
add
movl
and
lcall
xor
std
idivb
add
push
add
push
xor
lcall
mov
sbb
add
mov
sarb
add
aaa
mov
add
xchg
js
xor
ds
cwtl
fstl
add
fdiv
je
add
incl
incl
incl
decl
add
push
jbe
into
addl
push
decl
incl
push
rorb
scas
jae
ljmp
aaa
sub
add
jmp
and
inc
add
mov
jmp
add
pop
add
add
call
or
jmp
add
rcrb
or
stc
adc
decl
add
xlat
xlat
mov
add
or
push
cmp
movb
cmp
js
add
xor
pushl
decl
das
jbe
add
pushf
cwtl
push
mov
rcl
mov
push
pop
sub
dec
fdivl
fidivrs
cmpsb
add
xchg
mov
and
decl
imul
call
jmp
add
int3
popf
imul
ds
repz
popa
add
xchg
inc
add
add
add
inc
add
inc
add
cmpsl
add
add
loopne
xor
call
add
arpl
incl
ljmp
sub
add
lods
arpl
jmp
add
add
xchg
call
lcall
fwait
mov
dec
add
mov
inc
add
enter
lods
stos
cld
jg
mov
aas
popf
push
mov
cmp
dec
or
xor
add
call
ret
mov
add
test
push
add
aad
add
lahf
push
add
aam
in
pop
mov
insb
inc
add
xlat
dec
inc
add
mov
std
dec
repz
cmpsb
add
sub
sti
jne
imul
out
dec
aad
add
inc
add
pushl
push
add
dec
fbld
add
arpl
clc
ljmp
add
add
add
push
add
or
roll
push
addb
sub
jnp
mov
decl
mov
add
inc
add
add
xor
decl
add
lret
lcall
add
mov
roll
cmpsl
add
imul
sub
add
stos
enter
outsb
dec
add
add
les
gs
aam
mov
into
xlat
addl
adc
decl
fidivl
add
cmpsl
add
xchg
jle
add
ficoms
outsb
pop
jne
out
fcomps
add
inc
add
mov
add
add
fstl
lcall
add
gs
sahf
std
jg
mov
pop
cmp
dec
inc
add
popf
std
inc
add
add
out
adc
ljmp
daa
add
push
incb
addl
stc
rolb
add
repz
cmp
add
movsl
add
add
mov
sub
add
and
imul
push
push
or
aaa
xlat
add
sub
add
fcoms
add
loope
fwait
imul
add
add
inc
add
incl
add
popa
add
jnp
mov
fbld
sbb
push
add
hlt
cmp
cmpsl
add
xchg
and
lcall
add
nop
movb
out
filds
imulb
inc
add
inc
add
add
fmull
add
xchg
pop
add
push
add
hlt
or
jmp
decl
jo
call
mov
adc
add
movl
add
lcall
add
movsb
add
popa
add
ficompl
faddp
add
xlat
add
pushl
int3
aaa
or
cmpsl
add
inc
add
mov
add
cmpsb
add
sbb
fs
mov
rolb
mov
sbb
negb
sub
add
add
add
call
add
fwait
std
add
ljmp
xchg
or
dec
jl
popl
add
test
loopne
insl
nop
movsl
add
add
pushf
sahf
dec
inc
add
add
mov
mov
cmpsl
add
add
add
fcoms
add
mov
popa
add
stc
aad
add
sub
addl
add
mov
cmc
mov
sbb
mov
ret
pop
cmp
add
in
addl
cmp
add
add
stos
mov
dec
loopne
bound
push
cmp
inc
add
fwait
cli
xor
ljmp
ror
dec
mov
add
add
out
fwait
or
jbe
pop
fnsave
dec
cmp
call
add
and
lcall
dec
fcompl
ds
add
pushl
add
add
xor
ljmp
data16
dec
add
add
lds
push
fisubrl
icebp
mov
out
adc
lcall
outsb
jg
adc
pushl
add
fcoms
add
cli
loopne
and
push
mov
add
imul
push
push
adc
call
add
adc
dec
push
fistl
add
add
stc
push
push
add
adc
lcall
pushl
sbb
jmp
add
nop
mov
mov
add
mov
in
jp
mov
stc
aad
testb
and
push
lods
adc
incl
movb
movsl
add
lcall
out
add
decl
sbb
and
incl
cs
cmp
xor
ljmp
icebp
jle
mov
adc
cld
add
adc
ds
cmp
into
fisttpl
mov
xchg
fxch
addb
mov
mov
jle
add
lcall
test
lock
add
dec
sub
mov
and
mov
push
mov
bt
addb
add
out
shlb
add
add
jmp
loop
movl
in
inc
add
js
dec
mov
das
mov
sbb
add
loopne
sub
cmp
lds
cmp
add
mov
call
shlb
mov
or
add
nop
leave
int3
sbb
add
add
dec
xor
cmpsl
add
ljmp
call
cld
les
mov
add
scas
testb
js
add
test
add
cld
repnz
add
add
add
mov
pop
pop
push
lds
xlat
das
test
rolb
mov
stc
out
mov
call
add
movsl
add
jp
add
lock
imul
push
dec
cmpsl
add
into
pop
outsl
sbb
inc
add
mov
add
in
fcmovu
mov
add
dec
dec
cmpsl
add
push
or
add
and
incl
mov
mov
add
mov
decl
xchg
cmp
ficompl
cld
jg
add
push
add
cld
mov
test
ret
imul
repnz
les
addl
clc
sti
push
movsb
add
add
daa
add
cmp
nop
int
int
jge
add
add
and
aas
jno
sub
in
push
add
fucomp
adc
dec
into
ds
mov
adc
jmp
add
test
mov
xchg
mov
insl
fwait
loope
sbb
add
pushl
es
add
add
dec
cmp
lea
insb
mov
sbb
add
mull
ficoml
ja
xor
jmp
add
xor
jmp
add
add
in
jb
lcall
and
xor
ljmp
add
add
xor
mov
mov
push
add
movb
sub
fstps
nop
ret
add
mov
add
fistps
push
add
stos
and
cmp
push
cmp
add
add
inc
add
roll
mov
pushl
add
cmc
addb
add
pushl
and
pushl
add
fwait
repnz
cltd
mov
imul
jg
ficoms
add
mov
push
add
jno
incl
add
add
mov
add
lcall
xchg
lock
dec
push
xor
lcall
inc
add
aas
jl
add
push
inc
add
push
add
scas
and
call
roll
cld
mov
insb
lods
popa
add
addl
mov
add
in
push
add
xlat
rorb
or
pop
inc
add
pop
ljmp
lcall
push
insl
push
add
mov
lock
movl
mov
add
pop
pop
loope
lods
xor
lcall
dec
mov
add
les
push
add
add
cltd
jno
jmp
addb
add
and
decl
test
dec
loop
inc
add
adc
lcall
mov
sub
add
pushl
call
add
fbstp
pushl
inc
add
ss
add
jbe
ss
and
jbe
add
int
mov
xchg
rolb
lods
sub
cmc
nop
jecxz
movq
outsl
loop
inc
add
jge
add
xchg
pop
xchg
jns
aaa
ja
stos
iret
pop
jge
add
or
mov
leave
cmc
xchg
cmp
push
mov
out
cmc
in
push
int
jne
add
add
inc
add
addl
and
add
or
in
enter
stos
mov
push
mov
enter
bound
decl
cmp
jle
jmp
mov
pop
ds
add
add
add
sub
leave
inc
add
mov
mov
add
mov
lcall
outsl
push
inc
add
mov
mov
or
add
jge
add
repz
imul
mov
add
push
arpl
dec
out
mov
sub
add
add
add
cmpsl
add
cmp
lret
call
inc
add
mov
add
dec
xchg
fadd
add
inc
add
xchg
sbb
mov
add
inc
add
add
mov
rcrb
addb
dec
xchg
adc
push
jg
push
imul
add
ficomps
add
add
scas
jns
shrb
xchg
jmp
pop
cld
cltd
adc
dec
ret
add
add
rcrl
add
pop
add
lds
mov
xchg
flds
xor
push
aas
mov
add
push
pushf
outsl
loope
ror
push
repz
mulb
add
ljmp
mov
add
stos
rcrl
inc
add
add
add
js
int
lret
add
pop
sbb
cltd
inc
add
lret
push
add
push
aaa
outsb
pop
push
add
dec
mov
gs
mov
ss
add
xchg
push
inc
add
add
lods
iret
jno
cli
jno
aas
push
add
or
add
inc
add
call
lahf
mov
push
add
dec
push
mov
lock
and
pushl
std
addr16
add
adc
push
push
add
jle
add
add
inc
add
add
cmp
sub
sub
add
add
or
cmp
data16
fistl
in
mov
add
add
shrl
push
xor
std
notl
enter
mov
inc
add
add
pop
dec
push
add
dec
xor
ljmp
mov
bound
jp
add
add
pop
int3
fwait
mov
jp
add
add
int
ret
add
add
inc
add
filds
pop
stos
inc
add
icebp
imul
add
mov
lcall
repz
add
add
pop
dec
and
xor
cmp
les
or
std
aas
cmc
pushf
sbb
pop
sbb
mov
mov
adc
ljmp
fists
add
add
lcall
loope
push
fucomi
xor
ljmp
sbb
sbb
sbb
add
mov
jns
cmp
fwait
or
jmp
call
addl
into
popa
add
or
pop
add
je
repnz
lret
cmp
xchg
sub
mov
inc
add
repz
add
aad
add
repz
sbb
push
ds
add
les
movsl
add
mov
dec
or
rcll
mov
cmp
add
bound
push
lds
cmp
add
sub
iret
fiadds
push
add
or
adc
jmp
add
add
fwait
pushf
cwtl
pop
scas
lock
pushl
inc
add
sub
add
or
sbb
decl
add
xor
fdivl
inc
add
jmp
mov
lds
pop
movl
push
xor
add
adc
ljmp
dec
adc
inc
add
addl
jns
push
je
cmp
xchg
add
ljmp
insb
pop
aas
push
movl
lcall
mov
out
adc
push
inc
add
jne
fldenv
add
sbb
add
dec
mov
adc
inc
add
test
add
add
std
fnsave
add
push
add
pop
mov
int3
stc
cwtl
mov
add
dec
call
ljmp
pop
lea
add
icebp
pusha
add
or
daa
add
or
cwtl
cs
add
mov
addb
jne
mov
fstl
sti
inc
add
push
add
pushl
add
mov
mov
lea
mov
add
movb
add
add
sbb
add
cli
imul
add
ljmp
add
decl
add
addb
sbb
pushl
add
rclb
add
cmp
inc
add
push
jne
add
add
add
js
jno
ljmp
call
add
cmp
add
jno
jmp
add
ja
jge
pop
push
insl
lods
ffreep
add
add
jb
jmp
add
fwait
ja
sbb
mov
repz
ljmp
lds
pushf
lahf
xor
decl
sti
sbb
fdivrs
jecxz
xchg
pop
inc
add
ljmp
lcall
cmp
adc
cmp
enter
arpl
jmp
add
mov
sub
mov
adc
ljmp
in
push
add
add
pushl
inc
add
add
mov
add
adc
pushl
add
das
dec
xchg
imul
cmpsb
add
xlat
addl
test
cld
cmp
add
dec
pop
cwtl
out
jno
call
cwtl
aad
dec
in
ret
and
aad
xlat
outsl
leave
or
xchg
lcall
xchg
sbb
add
inc
add
add
add
jge
cmp
aas
add
das
pop
inc
add
jbe
add
add
push
add
pop
mov
add
pushf
xor
push
add
jmp
add
lcall
add
add
push
add
jbe
mov
xor
and
call
lock
add
add
add
pop
rcl
mov
decl
dec
mov
xchg
incl
jne
add
sub
or
testl
push
mov
ljmp
sbb
add
ljmp
out
or
movsb
add
pushl
enter
mov
add
mov
iret
adc
dec
mov
adc
jo
incl
add
and
std
daa
add
add
mov
add
roll
add
lds
movl
mov
jle
add
add
cmp
data16
add
jne
pop
cmp
movsl
add
in
jp
add
ficomps
add
lock
cmp
insl
addl
mov
add
add
int3
out
or
inc
add
jmp
lahf
or
pop
add
add
arpl
lcall
mov
add
test
mov
add
mov
pop
add
movsl
add
iret
rorl
add
sbb
add
adc
ljmp
pusha
add
and
decl
mov
pop
lds
dec
cs
add
add
aam
add
decl
mov
add
add
jmp
add
fsts
add
xor
fbstp
add
add
add
adc
pushl
add
cli
pop
lcall
movl
mov
nop
and
cld
out
inc
add
outsb
sbb
push
add
rcll
xchg
insb
lock
pop
dec
jb
call
add
imul
add
lds
add
add
iret
cmpsb
add
out
mov
mov
incl
add
add
add
mov
jp
inc
add
ljmp
mov
add
decl
clc
shlb
add
in
test
dec
cltd
je
cmp
add
dec
push
cmp
mov
pop
cmp
xchg
mov
sbb
add
aam
add
shl
roll
out
dec
dec
rcrb
in
scas
cmp
add
jno
pushl
push
add
je
add
pushl
add
out
fidivrl
lret
push
scas
addl
dec
in
frstor
add
imul
loope
jmp
add
jmp
add
cmp
test
add
add
add
test
ret
add
add
lahf
mov
je
add
jmp
imul
add
inc
add
inc
add
mov
cmpsl
add
add
add
loopne
fwait
jae
incl
popl
mov
mov
add
inc
add
cmc
sub
lds
adc
inc
add
mov
mov
add
inc
add
jnp
data16
add
call
icebp
out
jne
jnp
add
inc
add
push
shlb
jg
into
cmpsl
add
push
add
out
lds
hlt
ja
iret
pop
lret
stc
mov
adc
jnp
in
out
lahf
addl
push
adc
jp
jb
decl
add
push
imul
jnp
pop
scas
addl
mov
dec
inc
add
data16
add
adc
incl
ljmp
rolb
adc
add
rorb
add
and
int
push
add
push
in
mov
insb
fildl
add
xor
push
adc
cld
mov
add
cmp
enter
mov
movsl
add
add
ficompl
add
add
sub
inc
add
xchg
pop
add
das
push
test
daa
add
add
mov
jmp
add
incl
add
push
testl
ret
add
movsb
add
add
push
add
adc
call
movsb
add
loopne
add
incl
dec
mov
movb
mov
push
add
fdiv
cmp
add
and
incl
cmp
add
in
repz
jp
icebp
and
decl
jmp
add
add
movsb
add
push
pop
call
add
add
insb
cmp
addl
add
test
xor
call
mov
std
cmp
sahf
lret
fnstsw
adc
call
add
jle
je
imul
mov
in
loop
in
ret
add
add
and
jbe
add
movsl
add
xlat
xor
jmp
mov
je
adc
mov
mov
insl
popf
mov
push
add
adc
ljmp
mov
add
inc
add
adc
pushl
add
jnp
add
out
mov
add
pop
cmp
push
jp
inc
add
add
in
jbe
pusha
add
lea
dec
inc
add
lret
jno
js
add
add
pop
mov
xchg
rolb
pusha
add
xor
lcall
add
ficoml
jmp
add
mov
mov
or
dec
and
ljmp
clc
inc
add
rolb
lret
pop
add
add
inc
add
pop
cmp
pop
xchg
add
adc
incl
add
cmc
dec
mov
add
fst
das
mov
add
adc
pushl
pop
jo
ljmp
sbb
pusha
add
push
decb
cwtl
lds
leave
fwait
push
add
add
cmp
add
sbb
iret
jns
pop
stc
cmpsb
add
cli
dec
push
add
cmc
xlat
std
sbb
add
mov
xor
call
add
addb
mov
in
sbb
add
mov
mov
xchg
push
sub
fstpl
lahf
cwtl
inc
add
add
add
pop
movl
rolb
sbb
pop
sbb
or
pop
mov
addl
mov
jmp
pop
out
dec
lret
jle
add
in
jp
add
lods
leave
jns
addl
mov
sub
ds
add
movsb
add
add
xchg
popa
add
push
add
loope
or
push
sbb
add
jns
add
mov
add
mov
add
add
cmp
mov
sti
into
test
add
jmp
add
add
pop
sbb
mov
adc
add
add
add
das
adc
mov
add
pusha
add
or
add
les
mov
jno
incl
add
add
add
add
mov
xor
incl
mov
add
push
test
xchg
mov
inc
add
add
enter
jecxz
repz
add
jmp
cltd
jle
add
int3
mov
push
add
mov
xchg
mov
add
roll
xchg
imul
ret
add
push
scas
movsl
add
push
add
add
addl
dec
sbb
add
lods
inc
add
jno
jmp
add
and
add
movsb
add
arpl
call
cmp
aam
jb
incl
stos
lods
mov
add
adc
call
cmp
or
shll
add
cld
lods
pop
mov
add
add
addb
jp
add
fldenv
add
xchg
xchg
cwtl
xchg
leave
xor
jl
xor
into
adc
cmp
addb
mov
add
fwait
repnz
sub
lods
push
add
ja
pushl
add
nop
mov
gs
repz
add
inc
add
xchg
mov
add
add
lcall
and
incl
fdivs
mov
push
loope
fwait
roll
sbb
in
arpl
jmp
imul
sbb
add
xchg
gs
add
or
pop
pop
adc
lcall
pop
int3
add
pushl
add
xchg
inc
add
movsl
add
cmp
add
push
add
add
or
cmpsb
add
xor
call
xchg
pop
push
mov
add
sbb
pushl
jbe
sbb
lcall
hlt
ret
add
icebp
mov
testb
add
sbb
pop
push
mov
enter
add
inc
add
imul
or
hlt
inc
add
outsl
int
sbb
add
inc
add
daa
add
lods
adc
inc
add
push
roll
jmp
dec
movl
rolb
adc
jmp
push
aaa
mov
add
inc
add
mov
add
out
add
lcall
add
jno
jmp
add
addl
xchg
sub
add
decl
and
and
incl
call
inc
add
cmpsl
add
push
add
push
cmp
lret
pop
arpl
ljmp
add
mov
movsb
add
add
add
mov
add
lcall
shlb
add
mov
call
inc
add
ss
add
and
call
dec
cmc
inc
add
inc
add
mov
sti
or
outsb
repz
add
pusha
add
dec
push
add
xchg
sbb
inc
add
dec
push
xor
jmp
pop
std
mov
push
or
lea
cltd
jg
pop
and
or
add
out
mov
add
or
add
in
add
call
data16
mov
add
inc
add
stc
mov
push
pop
sahf
out
jns
call
pushl
insb
test
jecxz
add
adc
repnz
incl
pop
mov
sub
out
loope
adc
jmp
add
xrelease
add
push
sbb
add
jge
int
add
imul
dec
inc
add
push
pushf
add
cmp
jnp
add
add
add
dec
push
add
dec
leave
pop
int3
dec
xchg
sub
add
add
jg
outsl
inc
add
or
stos
dec
test
xchg
popa
add
xchg
mov
add
and
ljmp
mov
pop
pop
stos
and
adc
cmp
nop
bound
decl
add
or
add
add
addl
mov
add
inc
add
jg
lcall
add
insl
mov
mov
in
mov
mov
sub
out
addb
pop
cmpsb
add
call
jmp
jnp
sub
add
jecxz,pt
mov
mov
dec
or
ss
jno
dec
jno
fistpl
and
or
add
lcall
and
mov
mov
add
sub
add
add
push
in
js
push
add
cmp
ljmp
lods
xchg
push
add
les
mov
stc
dec
lock
add
decl
add
rolb
push
cmp
add
pop
jbe
push
add
jno
pushl
cltd
inc
add
lods
loop
mov
inc
add
add
push
mov
cmpsb
add
inc
add
inc
add
add
add
dec
mov
add
add
and
incl
add
fldenv
mov
insl
add
incl
add
mov
cmc
popf
or
dec
outsb
push
sub
sub
jbe
push
add
add
jmp
or
outsl
addl
add
sub
mov
jg
cld
or
lea
jmp
jmp
lcall
movb
add
mov
add
dec
addl
push
fcompl
add
mov
in
xchg
in
mull
add
lcall
and
call
add
lods
lock
outsb
push
add
sahf
pop
das
cmc
popa
add
or
adc
decl
loop
or
add
incl
mov
cmc
push
bound
call
add
add
movsb
add
adc
mov
add
shlb
add
fwait
lods
cmpsb
add
dec
xor
aaa
daa
add
push
add
push
pop
inc
add
dec
xor
jmp
pop
push
mov
dec
repnz
add
push
xchg
adc
mov
lret
xor
call
mov
add
movb
add
add
addb
sti
bound
jns
add
cmp
add
add
sub
lahf
mov
repz
es
mov
add
arpl
lcall
add
inc
add
adc
lcall
jg
push
xor
push
add
incl
add
mov
mov
mov
add
fbld
add
add
decl
xchg
lea
add
adc
add
dec
mov
jge
or
cli
movsb
add
add
decl
push
dec
fadds
or
push
arpl
pushl
xor
ljmp
lret
mov
movsb
add
jns
add
and
pushl
pushl
in
push
add
in
daa
add
mov
add
or
cli
hlt
inc
add
je
add
incl
sub
hlt
mov
add
push
nop
inc
add
addl
movl
push
add
mov
inc
add
add
push
lcall
popf
xlat
mov
add
or
hlt
push
add
mov
adc
ljmp
add
pop
insl
out
mov
and
test
jmp
add
aas
dec
pop
and
data16
shrb
aas
in
pusha
add
cmc
sub
loopne
push
add
lcall
xchg
inc
add
mov
add
enter
dec
mov
out
pushf
push
jb
incl
add
mov
pop
int3
in
bswap
xor
call
and
adc
call
add
add
xchg
test
sti
mov
mov
pop
add
add
add
add
add
sbb
rorb
addl
add
ljmp
or
adc
lcall
sub
inc
add
or
xchg
addl
add
mov
cmc
stos
jae
decl
lds
and
cmp
cli
cmp
enter
insl
sbb
stc
inc
add
add
add
lods
call
push
mov
popf
out
cmpsl
add
add
cmp
lods
mov
cmpsl
add
add
pop
xor
lcall
push
into
rcrb
adc
incl
mov
pop
lods
cmc
in
mov
std
iret
ja
adc
lcall
pusha
add
pop
xchg
or
pop
sub
dec
movl
sti
cmpsb
add
add
or
dec
inc
add
xchg
inc
add
addb
loope
into
out
test
add
adc
jmp
add
fucom
add
add
xlat
shll
cli
mov
test
add
bound
jnp
cmp
mov
mov
pushf
xchg
xor
lcall
add
ljmp
add
pop
inc
add
inc
add
out
sbb
jge
stos
imul
arpl
inc
add
incl
add
inc
add
add
sbb
data16
mov
sbb
or
ljmp
sahf
lret
call
push
add
adc
sti
dec
mov
pushf
lahf
sub
dec
push
add
decl
nop
aaa
das
js
mov
incl
jmp
add
add
xchg
cmc
and
incl
add
dec
sub
jge
add
fdiv
filds
lea
mov
icebp
mov
add
incl
outsl
addl
add
add
mov
push
sahf
cltd
out
jp
jo
pushl
clc
cs
inc
add
lock
pop
mov
xchg
dec
jnp
dec
bound
ljmp
add
add
pop
jbe
add
push
and
dec
daa
add
push
xor
out
add
add
xchg
inc
add
aam
cmc
inc
add
fstps
mov
dec
mov
add
jns
ret
add
add
lock
add
add
add
add
push
dec
jo
decl
add
dec
mov
push
add
push
stos
mov
sub
fldl
add
mov
mov
add
adc
inc
add
jle
dec
add
insb
pop
add
jmp
add
push
jp
imul
out
ja
add
mov
add
add
sub
xchg
cmpsb
add
clc
data16
dec
mov
stc
lods
jae
inc
add
xchg
mov
add
or
add
push
add
add
mov
add
fstpt
add
in
aaa
pop
in
xor
incl
les
xchg
add
pushl
cmp
fimull
mov
add
jno
decl
sbb
daa
add
xchg
lret
stos
repz
call
call
xlat
cld
jnp
sub
add
mov
or
dec
cmp
add
je
in
xor
decl
jae
ljmp
gs
add
es
loop
je
xchg
cmc
jecxz
add
add
addl
add
inc
add
cmp
mov
jbe
out
and
les
or
add
aaa
cld
notb
push
addb
adc
pushl
add
lret
daa
add
push
add
fidivs
call
inc
add
call
jmp
add
mov
add
dec
insb
adc
mov
add
roll
push
add
ret
cmp
add
or
push
repz
les
dec
pop
add
fstl
std
sahf
pop
sbb
mov
ds
aaa
fildll
ret
add
jno
push
mov
mov
mov
clc
and
jmp
subps
add
pop
clc
adc
push
jmp
pop
lods
xchg
sub
stos
nop
mov
or
xchg
mov
jl
or
add
jg
jp
enter
mov
stos
mov
ss
add
aam
push
clc
xchg
test
add
pushl
add
mov
lds
jo
clc
mov
add
add
ljmp
push
add
push
ds
pop
out
loop
insb
rolb
add
xchg
ret
add
mov
xchg
gs
sub
dec
or
into
shll
add
xchg
adc
incl
fsubl
call
icebp
mov
jmp
add
dec
arpl
incl
jmp
incl
and
call
add
or
add
test
add
jmp
add
add
aaa
mov
add
pop
stos
ljmp
add
nop
scas
ret
add
cmp
pusha
add
iret
push
inc
add
paddd
call
movsl
add
sub
push
or
fsubrl
test
nop
pop
mov
roll
add
inc
add
decl
pop
and
inc
add
add
add
add
add
insl
pop
mov
stos
sbb
jl
je
mov
push
call
addb
xchg
fists
jl
add
jae
decl
sbb
add
push
add
inc
add
add
jg
pop
outsb
in
push
pop
jecxz
jecxz
push
test
ret
add
cmp
imul
jo
incl
add
cs
add
pop
jl
in
hlt
pop
xor
incl
add
add
or
push
add
jb
in
arpl
mov
add
ret
add
rolb
xchg
je
add
add
clc
or
mov
add
daa
add
stc
rolb
add
punpcklbw
pushl
incl
incl
ljmp
mov
add
jecxz
fucomp
pushf
or
add
lcall
mov
cld
push
xor
or
add
xchg
mov
jbe
add
sbb
ds
fdivrl
leave
filds
add
cmc
sbb
add
jae
push
xchg
divl
xchg
mov
add
arpl
decl
add
jecxz
mov
insl
lret
xchg
shl
add
mov
add
lret
clc
out
xchg
add
ljmp
cmp
dec
cmp
std
popf
mov
lods
dec
lahf
movb
in
sarb
movsl
add
addb
je
add
es
repnz
pop
cld
mov
loopne
adc
inc
add
add
movl
jg
xor
sbb
call
add
jo
pushl
call
add
inc
add
add
pop
mov
fisubrs
ljmp
jl
inc
add
les
inc
add
bnd
add
cmpsb
add
push
add
lods
ret
add
sbb
cmp
add
push
push
add
jo
pushl
ja
push
add
add
cld
stc
or
add
lcall
jae
dec
scas
pop
ljmp
and
incl
add
add
roll
in
cmp
add
pop
and
add
add
imull
leave
inc
add
xchg
stos
movsl
add
add
jbe
add
add
mov
add
add
cmp
add
pusha
add
sti
movsl
add
addl
add
scas
adc
jmp
add
add
push
inc
add
dec
mov
js
pop
inc
add
addb
push
or
add
add
sub
lret
daa
add
enter
mov
xor
incl
add
pop
mov
jl
in
push
cli
dec
sahf
pop
loope
dec
cld
call
add
add
add
add
cmp
add
add
call
and
ljmp
mov
repnz
add
push
push
jbe
popa
add
dec
shl
add
add
popf
cmc
mov
cli
fstpt
js
pop
adc
xchg
push
add
out
fcoml
ljmp
lret
loope
jbe
add
mov
das
js
add
add
pop
inc
add
add
mov
jnp
dec
movl
add
push
sahf
adc
lcall
iret
scas
jp
sub
sarb
inc
add
idivl
lcall
roll
add
and
ss
add
loope
xor
call
add
outsb
ret
add
lret
inc
add
add
push
lock
mov
dec
add
add
mov
or
add
xchg
addb
inc
add
add
mov
pop
iret
ret
add
les
sub
xchg
sub
xchg
xor
jmp
xchg
or
aad
add
add
sbb
add
lods
call
add
incl
call
in
mov
add
lahf
push
jb
ljmp
fnstsw
aad
add
add
lcall
mov
add
jmp
jmp
pop
push
lock
push
add
push
add
ffree
add
add
gs
addl
inc
add
movsl
add
iret
push
mov
cmpsb
add
add
clc
movsb
add
jge
sahf
cmp
cmpsb
add
insb
btsl
add
mov
inc
add
add
push
clc
aam
cwtl
ret
add
add
cmp
jge
add
nop
xchg
clc
xor
aas
adc
decl
inc
add
pop
cli
cmpsb
add
repnz
xchg
imul
mov
add
and
loope
hlt
mov
sbb
stos
into
xor
jmp
leave
adc
incl
sbb
flds
jmp
add
add
jmp
lahf
jp
cmp
add
jmp
or
inc
add
add
movsl
add
push
add
sarl
mov
mov
sahf
mov
ljmp
push
add
lds
inc
add
js
add
xchg
pop
or
push
add
inc
add
fcompp
push
add
push
add
movsb
add
add
and
incl
cs
sub
add
lcall
dec
or
add
xchg
fimuls
scas
lds
sahf
dec
add
call
add
insl
mov
add
rorb
add
jnp,pn
add
mov
add
add
adc
call
addl
jp
mov
add
adc
incl
jmp
ljmp
addb
mov
shll
loope
xor
push
inc
add
add
add
jae
call
test
cmpsl
add
adc
jmp
push
movsb
add
call
aaa
mov
incl
add
add
ljmp
fwait
jmp
or
add
bound
ljmp
add
loop
loope
movl
mov
imul
mov
push
mov
les
xor
lcall
shlb
xor
jmp
add
movsl
add
add
add
sbb
lret
das
jo
call
inc
add
mov
test
out
push
ljmp
mov
mov
pop
sbb
pop
movhps
add
lcall
xchg
pop
add
inc
add
add
adc
jmp
add
incl
jmp
add
adc
ljmp
mov
rolb
add
push
add
xor
ljmp
cmp
ret
push
pop
mov
leave
sahf
pop
xchg
jge
add
jmp
js
and
ljmp
add
adc
jmp
add
jg
ja
clc
sbb
jno
in
mov
fdivp
repz
add
incl
dec
mov
cmp
add
add
sub
mov
call
dec
into
test
mov
shrl
add
jo
decl
mov
add
fwait
pop
jb
lcall
mov
adc
lcall
movb
jmp
pop
pop
int3
loope
hlt
mov
add
or
call
lret
loope
mov
push
push
cld
inc
add
add
insb
push
add
sahf
pop
mov
push
push
mov
lcall
add
bnd
add
add
hlt
into
leave
add
jmp
jnp
add
jae
jmp
fwait
movsl
add
cmp
stos
les
shrb
push
scas
imul
incl
adc
call
cmp
adc
lcall
push
and
jmp
add
ret
add
xchg
xchg
repz
shr
addb
inc
add
mov
add
out
mov
add
addb
add
jmp
mov
jns
cltd
mov
add
jmp
add
pop
push
jnp
add
inc
add
imul
xchg
mov
std
sub
repnz
in
js
clc
dec
popf
test
out
aaa
sbb
push
dec
addb
adc
ljmp
dec
pop
jp
inc
add
add
cmp
dec
pop
clc
add
ljmp
loop
pop
xor
movsl
add
pop
test
decl
jae
in
stos
cmp
add
add
mov
xchg
jae
jmp
add
dec
addb
call
popa
add
adc
ljmp
add
sub
and
cmp
ss
add
bound
fdivl
and
call
jno
lcall
nopl
add
and
ljmp
dec
push
pop
test
lcall
test
add
loop
xchg
push
sti
mov
add
pop
cmp
add
loop
add
pusha
add
cmp
lea
jmp
add
jo
push
into
xor
decb
ljmp
incl
xchg
cmp
add
les
loope
xchg
ret
mov
add
jle
and
mov
add
add
dec
aas
movl
leave
push
fiaddl
pushl
addl
arpl
pushl
fsubs
add
push
fdivrl
in
shl
add
pop
add
scas
inc
add
daa
add
int
stos
outsb
nop
xchg
xor
xor
fnstsw
int
add
xchg
aaa
aas
inc
add
cwtl
not
mov
and
cmpsb
add
add
push
add
in
imul
in
mov
out
cmpsb
add
add
push
add
mov
pop
sub
xchg
pop
xchg
xor
in
imul
add
dec
cmp
cltd
mov
adc
add
add
add
inc
add
into
aad
pop
push
into
stos
add
inc
add
pop
add
push
test
test
xchg
push
fisubl
add
icebp
fisubs
add
xchg
jecxz
lods
mov
add
movb
add
add
clc
jle
imul
ljmp
imulb
nop
mov
push
add
inc
add
scas
and
ljmp
cmpsb
add
add
xor
mov
les
in
adc
xor
pushl
add
mov
add
outsb
sbb
jb
lcall
pop
outsl
roll
add
fwait
loopne
int
add
and
add
cli
lret
mov
imulb
sub
jmp
mov
mov
bnd
push
xchg
jmp
and
incl
ficompl
clc
lds
sarb
arpl
decl
add
sub
add
out
cltd
sti
fadd
add
add
jo
call
aam
fwait
add
packssdw
xchg
das
jmp
fidivrs
mov
add
incl
dec
nop
ja
add
into
enter
in
inc
add
pusha
add
pop
call
add
add
fsubs
lcall
jae
inc
add
add
xchg
addb
movsl
add
add
and
ljmp
stos
pop
xchg
mov
inc
add
add
pop
aaa
sub
pop
pushf
jno
push
dec
pop
mov
addl
pop
pop
addl
call
decl
in
stos
mov
pushf
lret
outsb
dec
xchg
cld
or
daa
add
insb
test
jnp
addb
aas
fimull
add
add
enter
in
mov
sahf
test
fcoms
add
fistl
add
push
add
sub
add
call
dec
inc
add
movsl
add
or
xchg
rorl
xor
xlat
mov
loopne
push
movsb
add
mov
ljmp
jmp
add
mov
add
mov
rcrl
sub
incl
add
mov
sub
inc
add
mov
push
mov
mov
pop
imul
addl
push
add
add
cmp
addb
add
rcrb
mov
add
push
xchg
out
jmp
mov
fdivrs
xlat
sub
add
mov
mov
add
popa
add
dec
sub
add
mov
int
jmp
pop
add
mov
dec
inc
add
xor
add
push
outsb
aaa
push
mov
mov
add
addr16
in
jns
add
mov
add
add
xchg
shrl
add
fisubs
add
movl
dec
mov
and
jbe
fcomp
sahf
add
xchg
lods
xchg
into
push
add
inc
add
popf
mov
ficomps
add
pop
imul
rorl
add
add
add
add
roll
xchg
dec
mov
inc
add
mov
add
test
pusha
add
mov
xchg
sbb
roll
push
add
xor
incl
mov
fadds
mov
pushl
call
cmp
add
pushl
leave
pop
sbb
add
add
out
ja
sub
ss
add
clc
inc
add
mov
pop
sti
xchg
addl
movl
xchg
pop
dec
cwtl
xor
jmp
add
add
ljmp
pop
data16
daa
add
mov
insl
repz
add
add
push
add
inc
add
push
add
sbb
add
mov
addb
add
lcall
add
inc
add
add
pop
mov
fildl
add
lret
ds
add
inc
add
mov
mov
jle
add
cmp
xchg
xor
call
jge
sbb
daa
add
addl
add
add
out
sti
mov
xor
lcall
sti
add
sub
out
add
call
lahf
sbb
add
mov
add
add
jge
dec
inc
add
jle
cmp
pop
mov
cltd
in
mov
xor
lcall
add
mov
add
add
mov
decl
and
jl
dec
aaa
or
jg
leave
insb
rorl
mov
popf
shrb
decl
add
jge
mov
add
test
push
stos
add
call
inc
add
ja
mov
jecxz
bound
jmp
add
roll
add
push
stc
sti
push
push
add
rcll
push
jne
xor
ljmp
arpl
jmp
add
sub
cli
xor
add
jle
and
lcall
test
xchg
inc
add
xor
in
daa
add
xchg
sbb
clc
leave
add
int
mov
add
negb
and
jbe
mov
rolb
sbb
add
stc
scas
dec
and
pushl
lock
cltd
fiadds
ror
ret
mov
add
adc
pushl
pushl
data16
add
cwtl
mov
add
mov
mov
mov
push
cmpsl
add
push
sti
movb
push
imul
addb
add
cmp
aaa
incb
sub
loope
jb
ljmp
adc
lcall
aam
sub
test
add
add
or
dec
mov
add
lods
pusha
add
popf
bound
jmp
add
xchg
xlat
scas
aas
cmp
and
jmp
add
inc
add
roll
inc
add
add
incl
add
test
dec
clc
inc
add
call
mov
push
xor
sub
jnp
add
push
add
jmp
into
mov
add
in
xchg
shl
int
popf
dec
test
cli
dec
in
jno
jg
add
xor
lcall
movsb
add
push
add
roll
sbb
stos
mov
mov
xchg
lret
cld
in
adc
lcall
mov
jecxz
hlt
mov
fwait
stos
cmp
add
mov
and
dec
mov
add
sbb
mov
stos
push
jle
cld
sahf
jo
jmp
add
jg
add
inc
add
push
add
mov
pop
dec
jp
mov
push
jp
add
shrl
add
add
xlat
mov
cmp
add
in
arpl
decl
stc
sub
bound
push
and
pushl
add
mov
cmp
mov
add
mov
jne
jbe
inc
add
lcall
outsb
ret
add
add
testl
add
add
jmp
xor
incl
add
add
add
incl
add
add
clc
cmp
jmp
add
push
out
or
add
add
xor
add
pop
sarl
jbe
jno
ljmp
mov
xor
jmp
add
add
sbb
add
add
add
fsubrl
add
sahf
push
adc
mov
jnp
sub
call
lcall
inc
add
les
push
lds
fldenv
add
push
addr16
out
lods
cmp
mul
add
fdivrl
add
movl
loop
clc
mov
add
jmp
mov
inc
add
add
add
rorl
movb
mov
dec
dec
lds
and
pushl
add
jns
les
lods
xor
inc
add
in
sub
add
jo
call
std
in
addb
add
add
pop
cmpsb
add
add
jp
cmpsb
add
in
rorl
cmp
aam
add
xor
lcall
mov
cld
into
sbb
cmp
lcall
test
je
add
push
add
repz
shlb
add
adc
and
lcall
iret
int3
out
mov
js
jae
incl
decl
dec
jo
ljmp
inc
add
sub
jne
daa
add
add
push
add
sub
jbe,pt
adc
call
mov
jg
add
jecxz
mov
shll
add
mov
fiaddl
add
sbb
roll
mov
mov
enter
pop
add
rolb
add
add
add
fildl
push
stos
pushf
movsb
add
jmp
mov
jno
jmp
jmp
call
ljmp
and
lcall
jl
add
inc
add
shlb
ljmp
or
lds
add
cmp
addl
scas
scas
push
cmp
in
addl
in
adc
incl
xchg
inc
add
sub
add
add
push
dec
mov
stos
addb
add
int3
test
dec
push
jecxz
pop
lcall
icebp
outsl
sbb
add
or
pop
sbb
add
pop
in
add
test
mov
popa
add
add
mov
add
dec
sti
popf
pop
lcall
mov
push
add
add
jmp
add
add
add
pusha
add
pop
mov
incb
std
pop
add
aas
adc
add
or
add
ljmp
add
fldcw
daa
add
call
jecxz
inc
add
out
pop
nop
jae
jmp
add
mov
add
mov
pop
mov
add
add
mov
iret
movb
cmpsl
add
mov
add
int3
ret
add
addl
add
int
add
jb
js
movsl
add
leave
mov
xor
jmp
add
add
jmp
add
out
addb
add
out
adc
decl
mov
cwtl
mov
inc
add
dec
sbb
add
fs
add
sti
cltd
cmp
add
add
inc
add
add
xchg
dec
lret
jmp
push
inc
add
mov
nop
mov
jns
add
sbb
add
add
mov
add
addb
mov
in
rolb
add
fisubrs
int
fcomps
add
pop
ss
divl
call
imul
addl
push
dec
rolb
add
jl
stc
cwtl
adc
fisttpll
push
add
adc
lcall
lock
es
xor
ljmp
pushf
mov
sbb
add
push
add
dec
xor
stos
inc
add
sbb
mov
repnz
inc
add
adc
stc
fnsave
add
or
add
add
add
add
inc
add
stos
pop
jns
mov
adc
call
or
push
cmp
aam
add
jb
ljmp
ljmp
pop
nop
push
sub
add
jmp
add
pop
lods
pop
sti
addb
push
inc
add
call
add
inc
add
int3
jns
add
jl
xchg
inc
add
test
mov
call
push
outsl
js
and
ljmp
repnz
iret
adc
add
cmpsb
add
add
add
sub
stos
jl
push
insl
int3
push
add
xchg
movl
roll
add
decb
adc
imul
add
jmp
add
mov
add
ljmp
loop
in
and
add
add
outsb
fsubrl
or
roll
cmp
pusha
add
sub
add
xor
mov
add
aas
stos
sbb
add
or
add
out
dec
addr16
jle
add
or
aad
add
dec
xor
jnp
jle
add
add
push
add
lock
pushl
add
out
dec
fistps
add
mov
cmp
lcall
enter
mov
lcall
addl
cltd
dec
push
add
std
add
sarb
test
sbb
out
mov
add
cs
jmp
add
xor
push
mov
add
stos
jo
jmp
call
pop
dec
out
push
aas
jmp
mov
stos
sub
add
mov
adc
lcall
ljmp
xor
incl
iret
shl
add
add
jle
add
fcmovnu
push
add
out
push
push
add
jge
dec
sub
add
sbb
xchg
mov
add
mov
movsl
add
incl
not
push
cmp
incl
push
add
lret
add
jnp
add
add
ss
add
dec
jno
imull
add
add
adc
inc
add
inc
add
push
ds
mov
or
add
add
das
sbb
popf
dec
lret
or
add
repnz
add
hlt
out
jns
std
mov
add
in
push
push
push
or
xchg
jl
fnsave
shrb
adc
add
repz
add
add
adc
incl
add
into
or
add
aam
cld
popf
jae
incl
add
out
xchg
add
add
mov
lods
add
jmp
out
imul
adc
pushl
add
dec
addl
test
out
jge
inc
add
sub
add
cmp
add
sub
xlat
in
movsl
add
imul
cmp
popf
pop
movb
add
mov
loope
addb
dec
sub
or
es
inc
add
stos
addb
add
dec
inc
add
add
add
stos
roll
add
popa
add
sub
add
and
jmp
dec
xor
lcall
mov
adc
jmp
add
add
mov
fistl
add
jbe
roll
add
mov
je
addb
add
sub
test
mov
add
add
mov
leave
fisubl
push
test
addl
jl
pop
mov
sbb
lcall
decl
jmp
lods
inc
add
xor
mov
mov
testl
push
add
push
add
fsts
lcall
in
repnz
hlt
aaa
add
and
inc
add
lcall
sub
jno
jp
add
in
xchg
clc
ss
roll
jge
add
push
add
dec
enter
mov
dec
fwait
inc
add
add
rolb
fnstsw
add
int
setg
ret
jmp
add
sbb
push
icebp
rcrb
push
add
mov
add
ljmp
add
ficoml
add
test
test
add
leave
out
dec
testl
mov
push
add
sahf
mov
and
call
add
jecxz
insb
pop
add
add
dec
inc
add
jl
add
out
fimuls
hlt
adc
decl
add
js
mov
add
pushl
jnp
iret
in
xlat
fidivrl
sbb
fs
xchg
mov
out
adc
incl
jae
lcall
test
add
add
ss
add
pop
mov
cmc
dec
inc
add
lcall
xor
lcall
jle
xchg
out
shlb
aaa
push
add
test
mov
and
incl
add
mov
and
or
arpl
jmp
add
lcall
mov
cmpsb
add
add
add
lods
jno
ljmp
incl
in
jae
pushl
add
incl
add
add
sahf
jae
jmp
add
mov
mov
pop
into
outsb
sarl
add
mov
into
mov
lahf
pop
add
lods
sub
lcall
decl
repz
add
cwtl
pusha
add
loope
sub
xchg
jmp
inc
add
insl
scas
jecxz
js
add
cmp
xor
push
add
lcall
decl
push
add
jmp
add
jle
add
rolb
push
add
in
out
dec
dec
neg
mov
add
in
cmc
roll
jnp
pushf
mov
add
push
add
fbld
add
pop
addl
add
movq
add
loope
jl
push
ret
add
hlt
pop
jmp
pop
aas
mov
add
rcrb
add
add
into
xchg
sbb
add
addl
fcomps
jle
sbb
out
repnz
repz
inc
add
mov
push
add
sub
mov
push
jne
dec
jecxz
jg
push
mov
pop
jno
incl
ljmp
mov
add
add
dec
punpcklwd
call
scas
fisttpll
add
push
add
pop
xchg
mov
pushf
lods
out
inc
add
pop
add
add
mov
repz
add
sub
sbb
add
sbb
out
nop
into
pop
push
add
mov
jp
add
add
testb
incl
add
lds
adc
inc
add
add
add
loop
lahf
in
rolb
adc
ljmp
lret
jp
lret
decl
test
add
adc
lcall
mov
pushf
xchg
inc
add
neg
jno
jmp
dec
dec
inc
add
ja
push
insb
sub
add
add
sub
les
xchg
and
pushl
add
jno
pushl
addl
imul
add
jmp
pop
xchg
stos
leave
adc
add
dec
xchg
insb
pop
test
loop
dec
fcompl
add
jl
jne
pop
sbb
int3
dec
jl
jg
scas
inc
add
and
xlat
dec
jae
decl
pop
daa
add
outsl
fmuls
sbb
mov
mov
add
mov
ljmp
add
insl
inc
add
add
into
cmp
add
xchg
jns
js
mov
mov
add
decl
sahf
into
out
fidivs
lcall
dec
cmp
add
adc
out
pop
les
push
loopne
test
addl
leave
sub
repnz
mov
outsb
rolb
movb
ds
add
add
fcmove
adc
add
add
filds
cltd
dec
stos
mov
add
xor
add
ret
add
xor
jmp
add
add
xchg
aad
sbb
in
mov
dec
push
add
sub
out
iret
leave
sbb
ret
add
out
jl
add
and
das
pop
xor
pushl
mov
iret
adc
dec
xor
push
add
mov
leave
xchg
jno
fildl
add
add
fbstp
add
mov
movsb
add
and
ljmp
cmp
ja
fdivrl
mov
xor
mov
add
push
add
bound
pushl
add
xchg
push
or
add
test
out
clc
mov
arpl
lcall
out
xor
insb
xlat
pushf
mov
aas
cmp
aad
dec
cmp
push
jg
add
add
xor
ljmp
addl
mov
imul
call
add
fwait
lahf
push
in
inc
add
xchg
dec
loopne
movsb
add
add
ret
cmp
add
jb
jmp
add
add
adc
decb
jp
fwait
push
cltd
daa
add
add
mov
add
inc
add
jno
pushl
int
adc
lcall
dec
cmc
flds
jmp
in
fdivl
sub
inc
add
add
inc
add
repnz
add
dec
loope
movsb
add
mov
add
pop
mov
dec
cmp
add
or
add
jmp
cmp
push
add
pop
mov
add
add
clc
inc
add
into
sahf
lods
stos
xchg
adc
decl
mov
jp
shr
bswap
mov
fwait
addb
std
sub
add
cmp
add
sbb
add
xor
pushl
dec
dec
js
push
add
addb
jnp
add
add
fwait
xchg
cmp
jnp
xchg
in
nop
decl
adc
jmp
call
add
mov
rcrb
aaa
fdivr
sahf
mov
add
mov
add
not
xor
jmp
jmp
add
dec
movb
add
cmp
add
jecxz
jp
test
push
inc
add
push
dec
out
je
or
outsl
mov
pop
add
ret
mov
add
add
es
add
fcmovnu
ficoml
cmp
add
jmp
xchg
xchg
aad
sub
jge
jmp
sbb
mov
add
aas
roll
out
add
add
pushl
sbb
cmp
add
jecxz
xrelease
std
jmp
addb
addb
add
inc
add
jl
arpl
incl
add
cmp
mov
jmp
gs
add
adc
decl
or
jb
jnp
imull
add
push
in
out
aaa
push
fimuls
pusha
add
pop
nop
pop
jnp
add
add
mov
add
fdivl
lods
or
dec
mov
mov
incl
or
inc
add
pop
mov
add
add
cwtl
lcall
movsl
add
sub
fsubrl
arpl
call
add
xor
jmp
add
pop
jle
jecxz
pop
sahf
pop
pop
and
decl
cwtl
stos
add
push
push
add
aad
add
push
add
xchg
loop
push
add
pop
mov
scas
inc
add
mov
call
addl
add
pop
add
ds
push
insb
in
jo
ficoml
add
std
inc
add
xchg
add
push
ficomps
nop
enter
jle
add
jns
add
xchg
out
test
push
and
call
add
fistpl
add
add
jne
add
ds
mov
call
and
call
add
sub
add
aaa
out
addl
in
es
dec
insb
stos
pop
jno
jmp
lcall
sbb
xchg
lea
stos
or
pushl
mov
add
call
btc
dec
shll
mov
cs
mov
or
dec
testb
hlt
pop
and
mov
popf
pop
cmc
inc
add
inc
add
incl
les
pop
xlat
stos
pop
xchg
adc
dec
cli
cltd
jg
add
out
mov
scas
and
inc
add
cltd
nop
aaa
in
iret
jmp
ljmp
mov
out
adc
inc
add
incl
jmp
add
movsl
add
lahf
add
add
add
sbb
add
xor
sbb
add
add
cmp
pop
sbb
movsl
add
add
add
pushf
xor
arpl
pushl
push
cmpsb
add
add
aam
repz
add
add
inc
add
addb
dec
push
cltd
mov
outsl
pusha
add
jmp
cwtl
adc
inc
add
movsl
add
add
push
add
push
dec
add
push
add
addb
ret
add
call
iret
adc
movl
add
xlat
sbb
in
xor
decl
test
push
add
mov
add
pusha
add
cmc
push
add
push
xchg
dec
nop
roll
xor
lcall
outsb
add
decl
add
scas
rcr
mov
out
inc
add
outsl
push
pop
test
loop
insl
pop
adc
inc
add
clc
mov
pop
addl
cmp
call
and
sbb
lahf
or
roll
add
mov
add
add
add
cwtl
pop
add
add
add
sbb
or
add
in
lock
add
mov
push
into
jns
add
mov
addl
add
sub
cmc
shl
in
and
out
pop
or
outsl
leave
rclb
movl
ja
xor
jmp
add
pushl
fmul
sub
xchg
cmp
mov
lret
xchg
cmp
inc
add
pop
fsubs
add
add
bnd
jns
fcompl
sub
adc
push
lock
call
pop
lahf
add
pop
and
mov
dec
test
out
jb
call
xchg
icebp
sbb
pop
sbb
cmp
add
sbb
inc
add
cmovb
ja
add
add
and
decl
fsubrs
inc
add
sbb
lcall
jl
ror
dec
push
and
inc
add
stos
insl
lret
dec
popf
xchg
sahf
inc
add
add
incl
sub
shr
mov
add
incl
add
pop
adc
call
imul
insb
xor
jmp
cld
push
or
das
imul
add
clc
push
sbb
add
lret
and
cmpsl
add
jo
cmp
add
out
pop
jbe
add
add
jp
pop
cmp
leave
flds
inc
add
and
inc
add
loop
sbb
push
pop
roll
xchg
movsb
add
ret
add
test
push
add
in
dec
insb
scas
iret
out
cmp
push
adc
jmp
add
test
icebp
scas
int3
adc
call
mov
loopne
push
add
pop
mov
or
inc
add
inc
add
add
jge
lds
jns
jne
add
xor
add
jmp
pushl
mov
pop
mov
add
decl
sub
sub
add
xchg
leave
push
stos
ds
sti
pop
jmp
add
rcrl
cld
add
xor
call
les
enter
js
add
add
into
mov
push
add
iret
in
daa
add
out
mov
lret
push
mov
xor
fwait
sarl
mov
add
mov
adc
jmp
inc
add
add
add
add
les
rcrl
inc
add
ja
dec
aad
add
add
jp
mov
add
add
push
push
add
pop
addl
or
clc
les
inc
add
and
jmp
add
mov
sbb
dec
fcomps
add
test
push
add
pushl
add
insl
test
push
and
lcall
call
addl
add
jnp
add
sub
jmp
push
push
add
inc
add
popa
add
xor
decl
dec
sub
test
or
pop
aaa
les
jp
jecxz
ret
scas
push
push
add
fiadds
add
int3
je
add
in
push
fdivl
dec
movsl
add
xor
ds
add
push
add
js
add
lret
decl
lcall
add
add
add
test
in
mov
cmp
std
inc
add
add
jae
call
cmpsb
add
add
addb
add
add
add
fistpl
and
add
lods
shll
add
lcall
movl
jae
ljmp
push
add
shl
cmpsl
add
add
fcoml
cmp
add
push
add
ljmp
adc
add
movb
loop
testl
pop
add
cltd
jae
call
add
mov
xchg
pop
xor
fcmovnb
add
add
fisubrs
add
add
add
cmp
mov
pop
int
add
ljmp
xchg
inc
add
std
xchg
mov
push
out
jl
addb
add
call
add
data16
pusha
add
lds
divl
repnz
and
jmp
add
inc
add
sub
lea
inc
add
fidivrl
adc
inc
add
mov
dec
jmp
add
scas
pop
push
lods
lock
int3
sbb
mov
pop
add
dec
mov
in
mov
mov
or
pusha
add
mov
and
decl
movb
add
sbb
je
jl
into
inc
add
outsb
xor
ljmp
jp
add
xor
incl
add
mov
add
in
mov
cmp
bound
decl
mov
out
je
add
repz
add
ret
add
in
aaa
mov
mov
dec
jnp
xchg
rclb
addb
and
pushf
jbe
sub
in
addb
dec
push
add
inc
add
call
jmp
insb
sbb
rorl
pop
in
xchg
add
add
add
outsb
inc
add
adc
xor
incl
add
mov
adc
call
add
cli
mov
incl
lods
adc
pushl
dec
xlat
xor
add
ja
sbb
sub
xchg
pusha
add
iret
or
decl
add
ret
add
mull
add
mov
add
inc
add
mov
add
iret
mov
mov
mov
adc
add
add
push
add
data16
and
jmp
add
loopne
sub
adc
lcall
add
adc
dec
ds
movsl
add
stos
jo
pushl
fistl
incl
push
inc
add
cmp
push
add
outsb
xor
ljmp
jns
add
iret
inc
add
mov
add
xchg
addl
lret
mov
fstpl
movsl
add
inc
add
sbb
lds
jnp
add
dec
je
pop
stc
inc
add
incl
add
and
fsubrl
test
addl
dec
sbb
add
lds
data16
adc
decl
in
push
mov
sbb
jo
dec
movb
add
add
mov
add
addl
jbe
lahf
dec
jo
fisttpl
push
add
sahf
popf
jl
mov
jmp
add
xor
call
fcmove
incb
mov
sub
push
fldenv
add
call
sbb
loope
mov
inc
add
out
loopne
dec
sbb
inc
add
out
jnp
xchg
mov
out
rolb
push
ljmp
push
or
add
cmpsl
add
mov
push
add
loope
xor
lcall
addb
addr16
jg
stos
test
icebp
daa
add
test
insl
fbstp
call
loop
fidivrl
add
fistl
add
push
add
inc
add
dec
mov
repz
decl
mov
sarl
push
imul
addl
push
sub
add
pusha
add
and
jae
incl
xchg
jo
ljmp
jp
xor
lcall
dec
mov
sub
dec
fldpi
rolb
add
fisubrs
sub
iret
iret
xor
sbb
add
incl
push
in
shrl
je
add
cmpsl
add
jmp
call
sub
repz
add
add
push
add
sbb
pmuludq
inc
add
out
xor
mov
test
and
inc
add
jg
jl
jne
fwait
das
pop
add
push
or
xchg
push
insl
scas
mov
add
ja
add
push
incl
add
mov
add
xor
call
xchg
sbb
ss
add
push
add
lock
jnp
in
add
jmp
pop
xrelease
add
adc
fisubrl
mov
dec
test
aas
mov
cltd
cmpsb
add
add
ljmp
in
mov
in
fildl
add
ret
add
outsb
ror
outsl
insb
cmp
jle
push
test
add
fstl
lcall
aam
add
hlt
inc
add
jp
add
push
insb
sub
adc
incl
add
addb
add
push
and
ljmp
add
push
nop
inc
add
push
add
xchg
jg
pop
lock
add
movsb
add
add
sti
in
xor
lock
fsubrl
int
add
jmp
call
add
mov
sbb
add
movb
mov
pop
js
add
sbb
test
pushf
push
add
xor
addb
jno
call
movb
push
add
jb
jmp
xchg
inc
add
inc
add
xchg
or
inc
add
push
add
cmp
xor
jmp
sub
xor
lcall
repz
push
push
and
jmp
mov
add
pushl
flds
rolb
addl
add
data16
scas
outsb
xchg
imul
mov
scas
out
rolb
rorl
out
mov
sub
imul
mov
jmp
mov
or
jl
xchg
and
call
jmp
pop
bound
fimuls
add
nop
jne
sub
pop
cmp
sbb
add
add
add
or
movsl
add
out
mov
mov
push
add
mov
loop
inc
add
sysret
add
or
jmp
add
lods
popa
add
mov
shl
add
mov
fdivs
pushl
add
cmp
ret
add
inc
add
push
add
pop
repnz
xor
add
in
xor
add
stos
movb
or
test
call
pop
das
sbb
loope
sbb
push
add
mov
add
xlat
xchg
pop
pop
movl
add
shl
pop
push
lods
push
sub
fisttps
pop
add
add
inc
add
mov
add
bound
call
xor
jmp
jo
pushl
or
adc
dec
push
iret
fldl
add
xor
jl
clc
cmp
jne
jnp
add
add
call
mov
bound
pushl
cwtl
call
fsubs
roll
sti
in
jb
call
push
in
inc
add
adc
jle
add
stos
dec
and
pushl
add
lods
call
sti
inc
add
push
add
call
fcmovb
add
icebp
daa
add
or
out
aam
add
mov
std
push
mov
cmp
inc
add
jecxz
rcrl
mov
lret
inc
add
shl
add
test
or
repnz
pop
rcrl
add
mov
add
push
add
out
inc
add
loope
or
movb
add
jo
jmp
lcall
adc
and
add
inc
add
add
shr
notb
add
jo
inc
add
in
decb
mov
std
mov
stos
inc
add
imul
icebp
lcall
fidivl
jl
mov
iret
fldl
imul
mov
add
pop
add
clc
cli
stos
xchg
mov
mov
xor
incl
inc
add
jno
lcall
and
lcall
add
mov
imul
inc
add
scas
movl
in
roll
add
mov
loope
negb
sarl
pop
push
xchg
mov
add
fmulp
jbe
add
add
xchg
nop
dec
mov
adc
add
lock
mov
add
negl
test
scas
mov
add
mov
add
das
aas
or
rolb
and
lcall
add
xor
jecxz
mov
sbb
sub
incl
pushl
add
inc
add
add
pop
pushf
cli
cmpsb
add
add
add
or
add
insb
jno
dec
aaa
jge
add
add
add
imul
add
cmp
inc
add
add
inc
add
das
cmc
jl
add
rolb
clc
push
dec
ja
pop
ss
add
stc
addl
lods
ss
cli
setp
xchg
sub
lods
roll
mov
jmp
lret
mov
clc
mov
popf
mov
mov
jb
incl
add
sub
cltd
test
dec
cs
mov
mov
add
roll
add
mov
mov
int3
xor
call
add
scas
fdivrl
add
push
pop
cmpsl
add
ljmp
ja
bound
ljmp
add
or
stos
mov
add
cmp
je
mov
cld
test
add
mov
jmp
in
loope
xchg
add
add
div
jge
enter
add
incl
rolb
js
and
decl
mov
decl
jmp
xchg
xchg
les
out
and
ljmp
push
into
jecxz
fsubp
add
add
pop
iret
das
mov
jmp
add
mov
add
xchg
jb
call
pop
dec
roll
add
movsb
add
jmp
lret
and
jmp
add
and
call
lcall
pop
add
or
add
ljmp
sti
xor
call
add
sbb
add
lcall
xor
decl
add
dec
and
cmp
add
add
cld
and
pushl
movq
mov
rolb
test
add
mov
add
movsl
add
lcall
stc
ret
aas
popa
add
push
add
call
ljmp
sub
test
add
fcom
mov
test
lods
cwtl
xlat
add
lods
pop
jb
dec
and
mov
fisttps
cmp
sbb
cmp
roll
add
data16
add
jg
cmp
add
lahf
push
add
mov
or
mov
mov
lods
sub
repnz
call
lcall
inc
add
fstps
repnz
mov
adc
popf
xchg
pusha
add
xor
decl
push
push
in
ficoml
jg
add
flds
add
sahf
cltd
jmp
add
xchg
dec
decb
add
stos
fwait
dec
fdivrl
mov
lods
dec
jbe
movsb
add
mov
push
pop
movl
or
mov
add
add
push
jne
sbb
fadds
add
mov
out
leave
divl
dec
lret
or
stos
loopne
dec
lret
jl
bound
aas
lret
dec
mov
add
pushl
call
add
loop
adc
add
insl
xchg
and
mov
add
mov
fists
jle
add
sbb
add
mov
popf
mov
add
data16
out
je
test
out
cmp
mov
and
push
ljmp
xchg
sub
mov
and
decl
lods
dec
lods
stos
mov
add
test
jno
pushl
add
negb
pop
jmp
dec
pop
dec
rolb
add
cmp
in
push
add
mov
shl
add
clc
fwait
jbe
pop
pop
add
push
and
decl
push
add
shrb
mov
add
cltd
xchg
inc
add
mov
sub
pop
pushf
xchg
mov
push
add
push
leave
xchg
mov
or
pop
inc
add
int
add
cmp
test
les
aad
dec
pop
sahf
loop
sub
std
lods
add
push
mov
add
inc
add
call
lods
fwait
shll
and
push
idivb
call
incl
decl
dec
or
data16
mov
pushl
mov
and
lcall
adc
call
sub
add
mov
add
add
cmp
das
mov
fcmovnu
popa
add
icebp
cld
scas
mov
ljmp
push
add
dec
mov
imul
jle
add
add
push
jmp
loopne
sub
sbb
repz
add
pop
add
jmp
add
pushf
lods
cmp
push
loopne
pop
sbb
or
add
popf
pop
popf
dec
ljmp
push
loop
xchg
ret
add
push
add
in
pusha
add
adc
sbb
je
adc
add
inc
add
aad
sbb
bound
call
push
inc
add
mov
divl
ljmp
pop
aaa
push
mov
add
imul
dec
inc
add
pop
push
add
push
add
call
out
fsubs
nop
add
mov
jp
add
repz
add
add
fistl
fbstp
lea
push
mov
sbb
xchg
fsubrp
sbb
add
ret
add
cmp
add
add
stos
push
push
add
lahf
lods
repz
aaa
lock
inc
add
push
add
pop
xlat
in
ja
xor
cmp
add
jbe
popf
fcoms
ret
add
lcall
data16
add
fisubl
add
fisubrs
dec
mov
shlb
add
movsl
add
add
add
sbb
add
hlt
xor
add
add
fiaddl
inc
add
pusha
add
or
push
xor
jmp
add
out
sbb
push
push
and
jmp
add
xor
incl
or
add
jl
movsb
add
iret
mov
cmc
ds
setbe
add
adc
pushl
lcall
pop
and
jmp
ljmp
add
add
ret
add
lcall
add
fnstsw
and
pushl
data16
sub
mov
or
mov
push
iret
add
jge
lret
adc
cmp
and
incl
xlat
inc
add
xlat
jnp
pushl
add
cwtl
jmp
or
ljmp
add
dec
or
push
rolb
mov
ficoml
inc
add
and
call
int3
push
add
xor
lcall
dec
out
mov
add
addl
or
incl
addb
add
rcr
and
cmp
stos
iret
pop
sub
add
dec
xor
popf
xchg
jge
lret
mov
add
jecxz
dec
sub
lock
add
popa
add
out
and
jmp
pop
rolb
mov
mov
adc
add
sbb
add
enter
add
add
cs
add
or
in
xor
xchg
mov
and
incl
xor
out
imul
dec
jb
ljmp
push
add
mov
cmpsl
add
or
add
jmp
add
add
add
fnstenv
cmp
push
jmp
mov
cmp
mov
mov
fbld
movsl
add
add
ljmp
lods
cmp
mov
inc
add
ds
mov
add
push
hlt
loope
loopne
jae
decl
add
jnp
add
pushl
jbe
add
push
data16
call
add
mov
dec
in
mov
call
js
aaa
mov
cmc
cs
movb
add
decl
pop
pop
sub
add
push
dec
pushf
mov
jg
add
mov
ret
add
xchg
sbb
add
mov
add
das
pop
push
cs
add
push
push
add
pushl
add
daa
add
mov
add
sbb
repz
add
sub
add
jns
inc
add
or
call
add
mov
mov
cmp
ret
add
jae
dec
hlt
add
pushl
int3
aam
add
sub
movb
lahf
stc
xor
jns
add
imul
out
int3
test
into
fcompl
cmp
jecxz
jmp
popf
mov
push
imul
add
jnp
mov
xor
ljmp
sub
add
fcmovnbe
pushf
pushf
insb
int3
movsl
add
call
imul
test
xor
decl
push
fcmovu
outsl
pop
xor
call
pushl
push
mov
testb
adc
add
xor
call
les
inc
add
int
add
add
movl
popf
add
lcall
lds
dec
push
stc
aaa
test
test
outsb
xchg
loop
pop
adc
call
call
add
jno
ljmp
lods
inc
add
mov
lahf
add
add
xlat
dec
repnz
add
popa
add
pusha
add
pushf
sbb
sti
dec
and
cmp
div
out
xor
inc
add
call
add
push
add
fimull
mov
add
jmp
addl
or
and
rcr
arpl
lcall
stos
lret
lcall
add
pushl
lcall
loopne
and
int
dec
push
icebp
stc
shll
add
xchg
add
jmp
add
iret
mov
fists
add
and
incl
add
cli
repnz
mov
push
jb
lcall
icebp
mov
in
adc
lcall
add
add
sbb
push
add
mov
insl
das
fwait
jae
ljmp
lods
mov
push
lds
in
sub
loope
jne
add
rcrl
mov
xor
ljmp
insl
cmc
mov
faddl
loop
addb
cmpsb
add
add
into
int3
mov
mov
jp
sbb
xor
add
pop
or
ljmp
fiadds
cmpsl
add
insl
mov
add
mov
add
call
push
daa
add
mov
add
test
mov
inc
add
daa
add
call
mov
aam
aaa
mov
add
or
add
xlat
cmpsl
add
ja
add
pop
sub
add
or
cwtl
sbb
ds
lods
push
xchg
cld
xor
pushl
add
mov
call
lcall
jne
cmpsb
add
repnz
add
fsubs
add
repnz
xor
inc
add
decl
incl
add
pop
or
cmc
pop
sbb
add
add
aam
loope
fsubrs
add
addl
int
add
mov
add
push
ja
add
and
jle
aam
xchg
sbb
sti
int3
pop
xlat
jb
dec
scas
data16
push
add
xchg
inc
add
push
in
insb
xchg
aaa
rcrl
adc
add
cmpsb
add
pusha
add
mov
pushf
jae
call
int
add
lock
dec
data16
movsb
add
call
ljmp
add
mov
bound
push
arpl
decl
xchg
or
addb
or
scas
jge
add
cltd
adc
ljmp
add
rorb
add
add
call
xor
jp
scas
lcall
hlt
sub
add
add
in
push
add
sbb
jmp
add
add
loopne
mov
lcall
inc
add
inc
add
imul
es
add
add
lds
xlat
cmp
add
push
mov
push
push
add
mov
arpl
jg
ljmp
or
add
cmp
or
xchg
xchg
int3
fstpt
mov
mov
fwait
mov
jne
out
stc
push
add
mov
in
call
enter
mov
add
je
pop
add
add
lret
adc
jmp
aaa
out
xchg
jmp
add
add
imul
sbb
pushf
xchg
popf
scas
into
jg
clc
cmpsb
add
add
inc
add
outsb
ss
in
sahf
fdivrs
std
dec
cld
dec
cmpsl
add
push
clc
jp
clc
jmp
add
add
imul
pop
lods
xchg
hlt
ss
push
inc
add
addl
mov
insb
pop
add
add
imul
or
fsts
lea
xchg
clc
js
xchg
add
ljmp
aaa
negl
fwait
adc
pushl
add
push
inc
add
addb
add
add
ja
jno
decl
pop
jl
add
mov
add
mov
add
jmp
add
dec
inc
add
outsl
pmaxsw
add
xchg
loop
in
cmp
add
xlat
mov
in
dec
inc
add
xchg
ljmp
add
aam
jmp
data16
mov
mov
or
lock
movl
call
sahf
cmp
add
add
add
mov
pop
and
dec
jmp
ja
add
xchg
xor
lcall
data16
add
sub
into
mov
fnstcw
mov
add
xchg
pusha
add
cmp
xchg
push
leave
lock
push
rolb
add
add
lods
mov
decl
mov
add
mov
out
jle
aad
dec
pop
ficoms
call
mov
inc
add
fildll
sub
bound
pushl
mov
add
daa
add
ljmp
fsts
inc
add
sbb
add
inc
add
clc
push
xchg
inc
add
nop
sbb
xchg
add
push
shrl
jecxz
pop
add
pop
or
add
in
mov
add
inc
add
lods
mov
data16
insb
xchg
aas
test
std
lds
xor
call
adc
cli
pop
push
add
rolb
add
jg
fidivrs
inc
add
adc
or
add
pop
mov
push
lds
sub
movb
jge
inc
add
add
ljmp
loope
leave
mov
in
sub
add
fimull
popa
add
sbb
decl
dec
insl
insb
dec
or
lcall
pop
out
jno
decl
and
jmp
add
add
mov
int3
test
push
lret
addl
sbb
inc
add
cmc
stos
test
pop
lcall
push
test
adc
jmp
movl
dec
lret
mov
lea
add
ljmp
fadd
add
add
call
repz
test
mov
mov
add
gs
add
inc
add
mov
sub
clc
push
add
push
out
sbb
add
add
dec
jle
add
add
ljmp
add
push
nop
sbb
jmp
push
test
and
aad
add
ljmp
add
lcall
add
es
fnstcw
movsl
add
add
add
test
addl
add
jbe
add
faddl
call
add
mov
dec
je
mov
add
cltd
enter
mov
add
js
add
icebp
addl
mov
jmp
iret
sub
mov
push
inc
add
icebp
ja
cs
icebp
daa
add
mov
negl
out
scas
dec
mov
add
push
pop
sbb
cli
mov
mov
stos
imul
add
adc
mov
out
jbe
add
add
add
popf
fimull
repz
mov
jns
add
mov
inc
add
sub
add
cmp
pop
loope
mov
enter
push
add
push
daa
add
jnp
add
xchg
adc
inc
add
mov
test
mov
shlb
pushl
dec
dec
add
decl
ret
dec
sbb
add
push
add
ja
add
xchg
cmp
jns
add
add
add
push
add
add
out
mov
add
stos
adc
cwtl
ljmp
mov
add
ljmp
sti
insl
insl
std
loopne
mov
sub
jmp
sub
mov
cmc
rclb
dec
fwait
push
mov
stc
adc
lods
mov
mov
jb
incl
add
daa
add
add
xchg
cmp
inc
add
pop
popf
fistps
test
pop
or
ficoms
nop
xchg
xchg
std
xchg
mov
mov
lahf
fs
in
addb
addb
xchg
push
mov
add
addr16
add
jge
push
add
dec
inc
add
ss
pop
and
sbb
enter
push
add
stc
dec
les
repnz
xor
sbb
add
pop
imul
mov
lcall
ficompl
add
sub
cli
out
sahf
shrl
add
add
fmull
lret
jo
jnp
test
mov
daa
add
add
inc
add
sbb
in
push
add
call
and
lcall
mov
aam
int
rcrb
sub
jmp
add
xchg
jno
call
bound
incl
inc
add
insb
push
ljmp
clc
push
jg
repnz
push
add
adc
decl
popa
add
xchg
mov
dec
mov
iret
data16
add
and
fimull
add
and
mov
repnz
loop
and
addl
std
sbb
xchg
xchg
sbb
add
push
add
adc
add
add
sti
insl
cltd
aam
jge
lcall
addl
add
add
inc
add
iret
aam
movsb
add
decl
mov
pop
inc
add
xchg
into
cli
cmp
add
iret
data16
jmp
add
or
scas
pop
add
test
inc
add
push
add
xchg
into
movb
inc
add
into
out
jno
cmp
mov
mov
add
roll
mov
xacquire
jmp
xor
add
int3
ja
in
cmp
lcall
add
mov
mov
jge
mov
xchg
xchg
sub
ret
add
jl
add
jnp
dec
rcll
add
or
sub
adc
call
add
xchg
dec
mov
jmp
add
movb
sub
icebp
and
decl
xchg
lods
sub
lds
das
inc
add
roll
fidivrl
add
lock
imul
call
ljmp
xchg
and
decl
rcrl
add
mov
add
adc
ds
add
mov
add
sub
add
ljmp
xchg
fnstsw
cs
push
add
push
add
addb
fmulp
pusha
add
in
add
ljmp
add
add
mov
int3
sbb
adc
add
jne
add
insl
jecxz
daa
add
cmc
dec
cwtl
jmp
mov
add
add
add
inc
add
fmuls
inc
add
xlat
lods
mov
add
add
jmp
add
add
add
mov
ljmp
xor
call
cld
or
stos
adc
bound
out
dec
fldcw
add
pop
pusha
add
inc
add
addr16
add
lcall
mov
add
fbstp
add
mov
imul
add
mov
ficoms
jl
xor
add
add
aad
add
push
push
mov
sbb
stos
idivb
add
add
add
test
imul
add
into
call
lods
pop
clc
sub
add
popf
mov
adc
ds
frstor
add
dec
push
add
adc
decl
add
jl
mov
lock
cmc
cmp
jo
inc
add
cltd
adc
dec
xlat
mov
add
add
jl
fdivl
popf
cmp
decl
add
mov
push
cmp
rorl
add
cmpsb
add
push
pop
jnp
xchg
jg
add
cmpsl
add
in
icebp
mov
jo
mov
ret
add
xor
dec
jno
pushl
cmpsl
add
jle
pop
movl
add
cmp
push
addb
add
push
pop
fimull
inc
add
decl
jne,pt
xor
xor
lcall
mov
mov
lret
insl
dec
inc
add
push
mov
add
xor
call
add
outsb
je
add
adc
push
mov
add
jmp
xchg
mov
add
add
inc
add
jge
add
add
out
push
stc
insb
jmp
add
test
stos
or
cmc
scas
jge
mov
cmp
dec
jmp
push
fisubl
jnp
add
insb
xchg
ficomps
xchg
add
xor
mov
add
fdivrl
mov
add
add
add
dec
arpl
call
mov
jnp
int
sahf
or
add
mov
jg
pushf
jae
in
dec
mov
mov
add
add
adc
incl
add
clc
and
push
mov
fsub
add
add
movsb
add
xchg
push
add
mov
xchg
test
xlat
aaa
cmc
jle
add
decl
cwtl
sti
pop
sbb
add
fistpll
cs
outsl
sbb
push
movb
mov
mov
imul
sub
add
cmc
xor
jmp
add
add
mov
inc
add
add
sbb
lds
pop
pop
mov
mov
les
push
add
sbb
add
out
sarb
jp
add
sub
fsubrl
outsl
icebp
xor
dec
add
fndisi(8087
add
sahf
add
push
mov
and
push
add
push
add
pushf
cmp
rcll
addb
sub
cmp
add
in
nop
jae
lcall
add
jbe
add
int3
sub
dec
fildl
add
out
and
xchg
cs
sbb
add
add
sbb
add
in
insb
out
hlt
imul
addl
add
mov
mov
pop
jl
test
jp
add
add
mov
pushl
add
addr16
jne
jge
addb
add
ljmp
fisubl
pop
test
add
push
adc
cmp
cltd
cmpsl
add
xchg
xchg
aad
add
in
popa
add
pusha
add
pop
sub
add
mov
mov
fiadds
outsl
js
jae
call
add
jns
sbb
addl
add
lcall
cmp
pop
jge
xchg
jo
decl
add
decl
dec
mov
and
decl
mov
data16
sbb
push
mov
dec
push
add
pop
inc
add
jmp
xor
ljmp
add
add
pop
inc
add
cli
cmpsb
add
out
push
add
pop
push
add
mov
add
add
sub
add
pusha
add
push
add
mov
incl
incl
cmp
sbb
mov
dec
add
incl
leave
inc
add
ja
addb
pop
mov
bound
ljmp
push
add
xchg
mov
dec
pop
mov
add
dec
lods
jle
xor
scas
dec
cmc
push
inc
add
dec
add
addl
xchg
ss
lods
not
movsl
add
ss
jno
decl
test
add
movsb
add
jo
out
jl
aaa
and
call
push
add
ss
fisubl
cmc
or
add
add
add
fwait
lea
jnp
mov
pop
aas
jmp
add
push
add
xchg
les
int
mov
in
cmp
mov
icebp
and
ljmp
add
jnp
mov
add
add
mov
add
sti
mov
loope
adc
call
add
ja
incl
add
sbb
movsl
add
das
xor
fbld
add
lcall
inc
add
pop
rolb
add
push
add
addl
add
add
lcall
or
add
aam
add
xor
xchg
popf
inc
add
add
cmp
ljmp
add
pop
add
push
movb
inc
add
push
aam
rcll
sti
push
add
add
fwait
push
lret
outsl
addl
add
mov
add
int3
xchg
fildll
mov
decl
sub
clc
dec
mov
inc
add
aam
push
add
cmpsl
add
call
push
xchg
into
lret
add
add
call
int
out
icebp
cmp
mov
add
int3
xchg
add
iret
sti
xchg
sbb
call
add
xchg
daa
add
add
arpl
dec
adc
jmp
add
add
int3
in
cwtl
in
or
pushl
clc
aad
add
enter
add
add
add
add
addb
add
jg
add
setg
ljmp
add
mov
add
jecxz
mov
fnstsw
loopne
inc
add
faddl
add
stos
and
jns
add
or
ret
adc
scas
dec
dec
dec
push
cmp
cmpsl
add
mov
lret
push
clc
or
dec
push
xchg
icebp
mov
inc
add
mov
inc
add
dec
sub
sbb
ljmp
add
popf
inc
add
pop
add
pop
add
add
iret
mov
add
and
jmp
ljmp
add
in
mov
fidivs
clc
sub
movsb
add
inc
add
dec
xchg
dec
or
bound
ljmp
mov
and
jb
call
add
xor
jmp
jb,pn
jmp
add
dec
daa
add
add
cmp
sbb
add
test
add
or
fucompp
lods
addr16
pop
insl
sahf
in
aam
add
fistl
dec
add
call
or
pushl
xchg
adc
incl
add
test
add
aad
add
addl
sbb
cmp
adc
sti
or
pand
add
push
mov
call
adc
nop
js
sahf
add
add
add
mov
add
call
scas
adc
in
scas
push
add
addl
bound
ljmp
scas
or
add
loop
cmp
jge
add
pop
add
inc
add
call
push
cld
fistl
in
out
xor
lret
fnstsw
std
inc
add
sbb
mov
add
sub
out
or
hlt
lret
pop
pop
cmp
add
scas
test
add
mov
or
ljmp
push
add
ret
add
xlat
jns
add
data16
add
add
movb
dec
inc
add
add
add
pop
cmc
add
test
pop
iret
dec
or
lret
jo
incl
hlt
mov
add
dec
leave
clc
jns
add
cld
mov
dec
out
jne
add
adc
aas
mov
add
xor
pushl
pop
lods
sub
ror
test
cwtl
and
decl
inc
add
mov
add
daa
add
addr16
les
pop
test
jge
mov
add
pusha
add
xchg
addb
add
jae
pushl
add
pop
test
adc
lcall
xor
jge
inc
add
xor
add
insl
xchg
or
mov
lret
add
incl
add
call
add
push
ljmp
jmp
lcall
add
icebp
data16
incl
ljmp
cltd
mov
sbb
mov
push
outsb
and
cmp
cmp
jmp
jmp
add
add
xor
call
add
lcall
in
add
jg
addl
and
jle
add
add
dec
movl
cmp
jp
sub
incl
lcall
addl
stos
sbb
add
dec
mov
inc
add
pop
add
add
lods
or
in
push
add
add
lcall
add
ror
sbb
fistpll
add
inc
add
add
mov
rolb
cmpsl
add
mov
add
add
dec
imul
push
mov
add
decl
addl
add
mov
adc
addl
xchg
cltd
mull
pop
aam
lcall
std
mov
add
sahf
aas
int3
sahf
xchg
mov
repnz
daa
add
sub
add
cmpsl
add
add
out
jns
add
pop
sbb
sbb
pop
cmpsb
add
add
fnstsw
add
add
call
add
cmc
mov
xchg
push
add
les
pop
jbe
insl
mov
jbe
add
das
mov
test
add
lock
lret
inc
add
cld
cwtl
sbb
cmp
add
and
movsl
add
decl
xor
xor
incl
add
push
add
jg,pt
pop
aam
ja
add
sarb
add
insl
fsubs
sub
add
into
cmpsl
add
jle
xor
pushl
mov
inc
add
sti
cltd
nop
scas
adc
fidivrl
mov
adc
pushl
incl
dec
sub
mov
dec
aas
int3
jl
jne
adc
push
add
roll
test
cmp
inc
add
pop
add
xor
decl
aam
pushf
fs
cmc
outsl
cmc
rorl
add
cmp
arpl
decl
fs
dec
or
xlat
jne
add
push
add
loop
sub
lods
in
dec
xchg
push
addb
add
out
mov
mov
inc
add
inc
add
push
add
dec
lods
sub
add
bound
jnp
add
cmc
ljmp
adc
jg
stc
imul
lcall
add
add
sbb
add
stos
js
add
arpl
decl
and
ljmp
ljmp
add
add
add
sub
add
in
or
dec
jmp
add
add
addb
cwtl
cltd
jne
sbb
add
lahf
dec
mov
add
mov
mov
cmp
pop
add
les
call
lods
aas
xchg
xchg
loop
enter
outsb
addl
add
add
sbb
add
nop
popf
xrelease
pop
add
xor
add
add
pusha
add
movl
mov
xlat
bound
decl
add
incl
add
add
adc
add
rcrl
mov
or
adc
sub
sbb
push
lea
lods
sub
inc
add
mov
xor
in
nop
out
mov
xor
int
add
jmp
stos
sbb
sti
pop
movsb
add
ja
lcall
sbb
add
push
add
incl
repnz
stos
int
fdiv
pushf
sub
add
aad
add
cltd
mov
call
dec
sar
clc
js
test
add
or
jp
icebp
loope
push
out
testl
add
add
add
adc
cld
mov
adc
mov
incl
ljmp
add
add
decl
inc
add
push
add
pop
inc
add
add
add
push
cli
mov
add
sbb
movsl
add
inc
add
cmp
add
and
inc
add
roll
scas
fwait
adc
lcall
loope
mov
xor
jmp
add
sub
mov
into
call
add
js
lods
push
xor
ljmp
mulb
decl
add
bound
call
das
adc
pushl
add
jle
add
add
or
out
xchg
jne
pop
lahf
cld
hlt
mov
sbb
add
popf
mov
imulb
lods
mov
nop
adc
lcall
enter
pop
or
add
divb
inc
add
xor
enter
movsl
add
add
mov
add
imul
mov
in
mov
mov
add
or
mov
mov
mov
roll
lcall
aad
lret
pop
pop
xor
decl
inc
add
decl
push
out
adc
incl
cmp
mov
enter
ljmp
ja
test
ficomps
inc
add
std
add
fdivrl
outsl
mov
pushl
add
or
ja
add
pop
jge
hlt
js
cli
popf
xor
call
add
push
out
cmp
push
sub
out
imul
and
incl
ljmp
test
push
add
mov
imulb
jecxz
sbb
cmc
inc
add
add
lods
data16
movl
add
xor
inc
add
add
mov
popf
lahf
in
xor
pushl
add
add
add
inc
add
pop
add
add
inc
add
push
add
imul
sti
ret
add
decl
out
inc
add
sub
jge
add
inc
add
add
or
imul
push
ret
inc
add
rclb
ljmp
addr16
out
and
add
ret
jae
lcall
pop
pusha
add
pop
jge
loope
pop
or
or
jp
and
ljmp
jbe
add
imul
xor
call
cmp
add
std
sub
or
add
jmp
stos
leave
out
cmp
xchg
dec
mov
xchg
or
xchg
add
push
add
or
out
add
push
add
add
icebp
mov
add
xor
add
add
movsl
add
das
cmp
scas
xchg
jne
sbb
xchg
jne
in
test
decl
add
or
sbb
add
cli
loopne
cmp
lret
shr
jp
aad
add
and
ljmp
and
scas
hlt
movsb
add
xlat
or
clc
in
data16
ja
push
test
mov
inc
add
cmpsl
add
push
xor
incl
pop
ljmp
add
add
scas
flds
mov
mov
mov
add
addl
add
loopne
add
lcall
dec
addl
add
sar
cmc
test
fisubrs
sbb
ljmp
xlat
or
outsb
or
cld
insb
addb
mov
jmp
add
jns
mov
add
pop
jns
add
jae
pushl
mov
cmp
add
out
sbb
add
into
xor
shr
lods
leave
add
incl
add
mov
dec
add
rolb
call
mov
sbb
add
add
aad
mov
add
cltd
aad
sbb
pop
sub
add
and
icebp
xchg
fldt
test
push
loopne
pop
lahf
insl
xchg
je
add
add
mov
push
aam
fdivs
push
pop
or
lcall
addl
add
je
imul
cmp
pop
sub
add
push
adc
lcall
add
push
dec
in
dec
jg
add
mov
insb
xor
decl
sub
add
call
mov
adc
ljmp
lret
std
push
lahf
jmp
or
add
push
add
les
or
add
lcall
add
fcmove
jno
call
addb
dec
clc
sub
scas
clc
adc
dec
adc
ljmp
movsb
add
gs
cwtl
imul
fildl
sub
xchg
inc
add
add
add
jmp
jge
ret
add
jns
add
mov
jb
jmp
xor
jmp
pop
sbb
inc
add
sub
add
pop
ja
mov
add
add
mov
fwait
iret
lods
mov
mov
add
mov
loope
imull
stos
pop
xor
lock
add
cmp
pop
add
call
mov
add
fstpl
ficompl
add
add
add
push
mov
add
pushl
out
ret
cmp
pop
sub
push
add
idivb
pop
mov
bound
dec
push
add
sti
ja
icebp
pusha
add
fimull
jo
mov
test
lcall
mov
add
rorb
mov
mov
xor
pushl
cs
adc
les
lahf
inc
add
xchg
mov
adc
call
inc
add
in
movb
add
imul
push
add
mov
rorb
push
dec
adc
call
add
mov
xchg
push
add
mov
mov
movsb
add
stc
sbb
jle
add
or
or
call
mov
addl
movl
test
pop
sarb
scas
hlt
mov
out
xchg
scas
decl
or
out
add
incl
add
mov
mov
fsubrp
ds
in
inc
add
roll
push
addb
jne
add
cmp
push
add
inc
add
add
aam
add
add
and
jno
decl
dec
xor
lcall
sub
inc
add
add
lcall
addl
icebp
aaa
les
pop
adc
lcall
movsl
add
mov
iret
add
lcall
dec
lea
add
add
movsl
add
adc
jmp
dec
fildll
cmp
add
add
div
add
movsl
add
test
add
decl
fldcw
add
sbb
mov
lcall
test
lahf
bound
call
mov
add
jmp
sbb
cmp
add
popa
add
stc
aad
push
add
push
insl
add
decl
add
movl
add
jmp
frstor
push
xchg
fwait
call
outsb
addl
dec
test
sbb
and
jmp
aad
push
inc
add
push
mov
rolb
mov
ljmp
rcrl
shrb
mov
nop/reserved
js
add
bound
jmp
add
push
sbb
add
mov
push
add
xor
pushl
stos
push
idivb
rcrl
or
outsl
js
ret
inc
add
cld
lds
and
decl
add
add
incl
add
call
jmp
add
lret
ds
jg
fsubr
mov
cmpsb
add
xchg
inc
add
push
add
std
sbb
add
data16
cmpsl
add
add
add
test
out
push
daa
add
sahf
and
mov
add
push
add
mov
add
add
cmp
push
jo
ljmp
jnp
add
shll
add
add
pushl
js
adc
fistpll
jbe
mov
lcall
pop
xchg
sbb
add
adc
incl
repz
add
add
cmp
test
add
add
jbe
add
ds
sub
test
add
add
add
pusha
add
inc
add
xor
decl
int3
adc
add
ljmp
dec
mov
pushl
pushl
add
enter
xchg
roll
add
mov
add
decl
shll
fldenv
push
add
add
jmp
shll
xor
imul
mov
add
sub
mov
add
imul
add
xor
mov
mov
add
jns
xchg
fmull
lods
ret
xchg
or
call
add
pop
mov
imul
mov
add
lea
add
shll
enter
ds
lds
fidivrl
add
add
out
jmp
gs
dec
or
pop
mov
mov
and
jmp
lcall
add
push
add
lock
mov
inc
add
push
add
mulb
decl
cmpsl
add
add
or
and
inc
add
popa
add
and
xor
jge
pop
cmp
add
add
ljmp
js
add
or
add
imul
push
push
push
add
cmp
add
mov
out
addb
and
rcrl
cmp
add
add
loop
mov
add
add
jmp
jmp
test
inc
add
or
add
add
add
mov
bswap
ficompl
add
cmp
movsl
add
dec
fstl
pop
and
call
sbb
mov
stos
stc
js
add
incl
adc
call
sarl
mov
outsl
mov
add
pop
add
add
fdiv
mov
sbb
add
add
testl
nop
mov
aas
and
add
mov
pop
xlat
scas
lahf
xor
ljmp
add
in
pop
scas
pop
add
add
add
call
push
add
loopne
outsl
mov
push
add
lods
inc
add
mov
add
pushl
add
incb
add
in
imul
call
add
add
incl
pop
test
jbe
shll
add
lds
loop
fstpl
jmp
add
add
add
arpl
movl
fadds
add
decl
int3
jle
push
mov
fisttps
out
clc
nop
fdivrs
add
mov
jl
xor
add
add
cmp
add
pop
and
call
add
ficomps
shlb
add
rolb
lock
test
add
pop
add
add
cmpsl
add
je
jb
call
add
mov
jecxz
pop
ja
in
fcmove
mov
call
mov
inc
add
add
add
rclb
test
jmp
add
cmp
scas
dec
add
jmp
add
jmp
jno
call
inc
add
jp
add
cmp
add
push
add
cmp
or
add
pop
insl
adc
decl
add
lcall
add
mov
and
ljmp
imul
sbb
or
push
add
insb
jne
divb
and
add
lock
xor
mov
push
add
jp
add
add
cld
pop
mov
add
sub
add
xchg
mov
mov
int3
jg
std
xor
ljmp
sbb
js
ljmp
add
rolb
jmp
sbb
mov
incl
add
or
add
and
jmp
add
test
and
pushl
add
or
lods
cmpsl
add
std
mov
add
das
jno
push
roll
jecxz
dec
and
add
add
mov
sahf
imul
add
cltd
les
into
or
add
xchg
aad
les
xor
incl
or
or
clc
gs
xchg
jne
outsb
inc
add
cmp
cmp
add
nop
outsl
push
add
jne
cmp
add
add
shll
xchg
cmc
add
lods
cmp
add
je
xchg
divb
ljmp
add
ljmp
ljmp
add
inc
add
add
clc
ljmp
shlb
xchg
inc
add
addl
xchg
and
jmp
add
popf
test
xor
decl
jle
stos
pop
sbb
ffree
add
add
aaa
sub
ljmp
add
mov
stos
jno
ljmp
icebp
push
repz
jl
add
add
mov
jbe
leave
sub
jnp
add
movsl
add
adc
call
pop
jb
call
das
inc
add
cmc
jbe
in
pop
gs
cmp
adc
call
adc
add
aaa
js
push
add
inc
add
or
shr
cmp
outsl
in
insb
cmp
sub
daa
add
add
cwtl
mov
jp
add
incb
add
jne
cld
bound
decl
out
inc
add
stos
adc
ljmp
add
movsl
add
pushl
call
add
add
push
add
xor
call
add
test
push
push
flds
call
in
insl
js
dec
sub
xchg
loope
lahf
mov
mov
add
push
or
xor
push
add
popa
add
xchg
insl
popf
addb
add
and
jmp
jmp
sub
lcall
mov
mov
stc
push
add
outsl
in
push
xor
add
add
mov
mov
add
icebp
mov
sub
sahf
push
push
xchg
cmp
add
add
push
add
dec
lea
add
pop
cmpsb
add
add
push
add
std
add
cmp
and
sub
notl
add
nop
sub
add
add
addl
aaa
fbstp
clc
imul
add
cmpsl
add
decl
call
scas
inc
add
add
rclb
cmp
push
add
mov
lods
data16
add
repnz
jae
lcall
or
inc
add
call
push
add
push
add
xchg
xor
add
sub
and
cmp
add
cs
mov
add
or
add
call
add
test
add
ljmp
sub
add
rcrb
es
and
incl
lcall
out
outsb
push
scas
rolb
int3
inc
add
mov
add
dec
or
add
insb
mov
mov
add
sbb
das
ds
cmpsb
add
fnstcw
add
ret
add
rolb
mov
incl
pushl
mov
mov
add
jne
mov
add
add
test
xchg
xor
pop
add
or
aaa
xor
pushl
pushf
lret
int3
and
and
pushl
add
push
cs
int
add
addb
dec
clc
adc
decl
jnp
add
add
sbb
add
add
jg
add
sub
add
call
xchg
lods
sbb
mov
jge
add
outsl
sub
jne
sub
nop
mov
icebp
mov
mov
add
push
add
movsl
add
xchg
jnp
fimuls
add
fadds
add
add
lock
and
out
fdivrp
push
imul
insb
sarl
xor
add
pop
fdivrs
scas
cmovno
jmp
add
adc
call
ljmp
in
mov
add
dec
xor
cli
roll
mov
jnp
insb
std
add
inc
add
cmp
cltd
jnp
int3
lock
add
adc
add
and
push
imul
add
add
push
ret
add
std
pop
mov
je
mov
add
addl
mov
inc
add
cltd
pop
cmp
fcoml
ljmp
jmp
inc
add
inc
add
xor
call
xor
add
add
add
lcall
pop
cmp
add
or
ds
cld
sub
popa
add
sbb
mov
je
stc
dec
mov
jbe
aad
mov
add
test
repnz
incl
stc
sbb
lods
addl
fiadds
dec
inc
add
add
jne
add
add
test
fstps
jbe
incb
add
push
or
std
repnz
fisubs
mov
push
add
mov
mov
add
cmp
jmp
push
jbe
add
add
lahf
repz
jmp
add
ja
test
arpl
call
aas
pop
add
call
aam
add
call
mov
add
adc
mov
ud0
dec
jb
call
adc
mov
test
fiaddl
add
jne
add
cmpsl
add
add
add
and
push
pop
add
mov
movsb
add
les
in
or
pop
or
rol
add
mov
add
decl
add
pop
mov
or
xchg
sub
add
out
dec
fidivl
cmp
bound
pushl
ljmp
test
add
cmp
leave
jge
or
sub
add
lret
aaa
shlb
lcall
incl
add
cmp
cs
scas
cmp
dec
cltd
lock
cmc
dec
jno
inc
add
push
mov
dec
xor
lcall
adc
inc
add
add
ljmp
cmpsl
add
adc
call
lcall
lcall
lea
push
mov
addr16
lret
add
ss
jmp
push
mov
jge
add
push
add
pop
push
lret
dec
insb
repnz
rcl
xchg
push
pop
push
lret
clc
out
push
add
adc
call
movl
decl
pop
mov
arpl
decl
jmp
jg
cmp
add
sub
xchg
sbb
popa
add
sbb
add
cmpsb
add
arpl
cld
or
insl
addl
add
push
add
aas
cmpsb
add
add
popf
jmp
sub
add
movsb
add
jbe,pn
rolb
add
sti
pop
inc
add
loopne
sbb
call
add
cmpsb
add
and
jl
sub
add
out
ss
sub
add
adc
mov
in
pusha
add
movsb
add
add
xlat
pushf
mov
add
jbe
add
lcall
dec
mov
stc
jl
ret
add
mov
movsl
add
add
add
decl
loop
jl
pop
addl
and
imul
mov
movl
xor
add
mov
add
xchg
or
cli
je
add
add
cmp
add
cmpsl
add
add
pop
add
xchg
mov
add
mov
xchg
repnz
dec
or
stc
xor
incl
mov
and
popf
lahf
cmp
mov
popf
push
out
xchg
adc
add
mov
mov
add
sbb
mov
add
nop
in
push
call
jg
add
insb
sbb
inc
add
xchg
in
pop
sbb
push
mov
mov
in
enter
in
pop
fidivrl
decl
addl
int3
fisttpll
jp
inc
add
insb
cmpsl
add
lcall
pop
add
xchg
pop
add
dec
inc
add
pop
mov
lret
add
add
mov
add
dec
test
in
add
add
mov
add
aad
jo
mov
add
add
pop
jo
pushl
jno
sti
fwait
test
and
ljmp
pushf
mov
in
add
incl
add
push
add
fildl
lcall
dec
mov
mov
stos
or
add
jmp
fwait
fdivr
mov
call
addb
mov
fst
mov
cmc
push
add
fmuls
push
cmp
adc
decl
add
aas
jp
std
mov
and
add
pop
add
add
out
arpl
call
xor
jmp
xor
add
addl
aas
ret
add
add
and
call
lcall
dec
xor
call
pushl
add
cmp
add
push
jns
mov
xchg
push
cmc
sbb
cmp
lahf
or
add
fiadds
mov
dec
or
cwtl
enter
icebp
add
dec
adc
add
cmp
add
lea
add
mov
jb
decl
add
setb
add
jno
std
xor
decl
mov
add
add
mov
add
ss
nop
inc
add
add
into
xchg
addb
add
aas
pop
mov
iret
js
add
fldl
out
sbb
in
cmp
push
adc
incl
xchg
add
push
dec
xor
mov
add
call
add
dec
aad
add
cmc
or
mov
pusha
add
repnz
cmpsl
add
lods
push
and
inc
add
mov
mov
and
push
adc
jmp
add
add
mov
jnp
cmc
clc
and
fmull
cmp
divl
add
and
call
add
add
cmp
call
call
cmpsb
add
adc
ljmp
movsl
add
jmp
add
push
add
push
insb
inc
add
addb
xor
lcall
call
and
pushl
add
addl
loop
aas
inc
add
loope
mov
add
xor
cld
test
mov
add
add
cli
pop
jp
test
ds
sbb
add
or
add
and
jmp
mov
push
mov
in
adc
incl
call
ljmp
roll
in
fisubrl
mov
cmpsl
add
pop
add
mov
add
hlt
scas
pop
xor
add
inc
add
add
nop
fists
jno
call
cs
add
push
add
mov
enter
add
mov
add
add
ljmp
add
add
fistl
notl
cli
ss
std
cmp
add
cmp
mov
mov
add
add
add
pop
push
int
add
add
mov
pushl
negb
inc
add
add
lret
adc
pushl
sub
add
pushl
or
add
pop
add
push
add
push
decl
add
add
scas
movsl
add
movsb
add
mov
jne
add
xchg
leave
fmuls
jb
push
pop
test
shrl
mov
or
dec
mov
mov
push
dec
jmp
xor
dec
ficoms
daa
add
stos
movl
iret
push
add
pop
adc
ljmp
test
or
cmp
add
add
outsb
mov
add
fidivl
cmp
add
add
fsubrl
add
pop
int
stc
mov
aaa
mov
lcall
and
inc
add
sub
xlat
lods
inc
add
insl
lock
ret
add
call
je
mov
add
add
pop
push
add
sub
and
xchg
pop
fwait
imul
pop
add
ret
add
aam
add
test
or
add
mov
add
fsts
aad
sbb
mov
jae
decl
movsl
add
aad
cmp
stos
inc
add
mov
mov
add
mov
jo
call
decl
jnp
add
call
add
lds
mov
std
adc
out
rolb
add
iret
movsl
add
icebp
rcll
inc
add
jo
call
add
xchg
xchg
sub
ljmp
call
dec
enter
add
daa
add
sub
add
cs
and
pushl
movsl
add
ljmp
in
lea
fwait
cmp
add
popa
add
in
jmp
add
les
int3
movb
pop
jle
cmp
cmp
add
lods
xlat
sbb
add
add
addb
push
fnstcw
addb
add
int3
aad
nop
in
sbb
cmp
and
cmp
js
rorb
add
call
das
icebp
mov
add
repz
add
add
add
inc
add
add
rolb
movb
rolb
push
aaa
daa
add
add
mov
mov
mov
or
fcomi
add
ljmp
mov
add
lds
dec
pop
cmp
dec
ljmp
add
data16
sbb
in
jae
incl
add
jmp
mov
xchg
push
add
and
outsl
sub
ljmp
add
pushl
jmp
add
xchg
xchg
in
jnp
mov
fstps
popa
add
push
popf
add
push
mov
add
popl
add
sbb
add
add
add
add
pop
and
cmp
cltd
xor
or
pop
popf
sub
data16
call
in
in
push
add
adc
xchg
mov
imul
add
adc
jmp
icebp
dec
push
add
ja
addl
sbb
je
xor
adc
incl
push
mov
int
inc
add
mov
add
dec
jge
xchg
cli
xchg
dec
out
clc
xchg
add
ficomps
xor
push
lcall
sub
out
lcall
jne
mov
add
incl
jae
ljmp
add
psrld
add
add
decl
mov
lea
das
sub
pop
jge
ljmp
sti
test
sbb
add
push
notl
add
inc
add
popf
and
fcoms
incl
add
add
add
mov
add
add
sub
outsl
inc
add
shll
add
cmp
add
in
fisubl
mov
add
test
push
add
add
and
lcall
xchg
hlt
cwtl
or
add
in
jge,pn
aad
rolb
mov
out
lcall
mov
adc
decl
data16
sahf
jmp
add
dec
jne
add
mov
add
idivb
movsb
add
add
add
js
push
add
ljmp
push
add
and
arpl
call
and
decl
mov
icebp
mov
cld
int3
dec
xor
lcall
cmp
mov
adc
jmp
mov
dec
xchg
mov
dec
test
add
xchg
shl
mov
dec
cmp
xchg
inc
add
jp
jnp
add
in
add
push
rcrl
jmp
xchg
jae
decl
add
aam
mov
add
mov
mov
into
adc
call
add
scas
jmp
sub
arpl
ljmp
add
jae
fimull
roll
add
mov
lahf
jne
mov
rcll
decl
hlt
sti
push
add
sahf
mov
add
pushf
mov
add
jbe
add
lcall
xchg
push
mov
inc
add
test
fiadds
pop
jg
add
sub
movb
add
add
fdivs
pushf
mov
jmp
mov
add
xchg
addl
add
dec
mov
add
add
es
dec
fbld
add
fcomp
cwtl
roll
add
xchg
lods
clc
push
jnp
pop
out
mov
pop
and
fistpll
inc
add
jecxz
add
pusha
add
ret
dec
xchg
push
add
cltd
loop
jecxz
pop
in
mov
add
add
sbb
jns
jns
aas
adc
mov
mov
add
jno
decl
adc
jmp
add
xchg
add
add
cmp
add
pop
sub
add
add
cs
jmp
add
negl
call
add
enter
ljmp
push
add
add
push
les
or
lcall
inc
add
cltd
pop
jnp
add
dec
jmp
mov
xchg
popf
dec
cmc
jp
loop
cmpsb
add
add
lds
movl
fnsave
mov
add
add
push
add
jge
daa
add
mov
decl
movsl
add
jmp
add
in
mov
and
cmp
xor
pushl
pop
in
mov
add
adc
inc
add
movsl
add
aam
add
addb
mov
sub
lds
sti
adc
jmp
add
scas
daa
add
push
add
aaa
cmp
sbb
bound
ljmp
js
add
mov
jne
mov
add
cmp
cltd
sbb
add
decl
dec
enter
sbb
in
jns
add
out
insb
jb
pushl
cmp
add
add
add
lods
push
add
mov
add
add
inc
add
xor
jo
pushl
add
pusha
add
lcall
cwtl
xchg
popf
and
ljmp
and
mov
addl
xchg
add
call
mov
mov
add
mov
add
inc
add
jge
xchg
fcoml
pop
pop
sub
mov
jo
ljmp
bound
pushl
icebp
inc
add
stc
js
fwait
jp
add
dec
pusha
add
roll
movsl
add
add
loope,pn
cmp
add
jle
add
mov
jae
call
cmp
addb
mov
sahf
ret
bound
jns
mov
addb
add
add
dec
push
xchg
mov
decl
pop
inc
add
add
dec
rcrl
mov
jne
aad
cwtl
xchg
add
jmp
ljmp
fimull
mov
loopne
pop
push
add
ljmp
sub
add
lea
pusha
add
and
movsl
add
fwait
loopne,pn
mov
popa
add
jae
call
add
add
push
add
dec
mov
into
fsts
add
incl
add
add
mov
imul
enter
pop
cmp
add
fistpll
cwtl
negb
add
pusha
add
shr
cltd
adc
mov
sbb
std
ja
aam
add
pushf
add
add
cmpsb
add
add
sub
xchg
sti
pop
neg
insb
rcr
in
aas
shlb
add
outsl
mov
daa
add
add
nop
test
add
dec
mov
xor
push
int
loop
sub
add
or
rolb
call
add
mov
call
fdivs
push
add
gs
fdivrl
or
ficompl
inc
add
loop
outsb
cmp
fisttpl
cmp
lcall
fiaddl
sbb
fcoml
test
les
loopne
incb
fsubl
mov
les
outsl
aaa
icebp
std
data16
or
mov
jnp
mov
call
mov
push
add
jge
ss
add
ljmp
sbb
incl
add
decl
add
add
call
add
adc
pushl
add
fistpll
cwtl
inc
add
push
adc
add
mov
add
cmp
cs
jne
add
movsb
add
mov
arpl
pushl
mov
cmp
lcall
scas
ret
add
inc
add
add
pop
frstor
xor
movb
add
pop
outsb
mov
push
jge
add
xlat
add
add
fnstenv
incl
add
imul
js
mov
sbb
call
out
jg
add
add
into
sbb
sbb
clc
enter
inc
add
add
pop
jp
pop
jae
push
xchg
cmp
or
lods
mov
sub
ret
add
into
cmp
lods
jns
inc
add
dec
mov
insb
hlt
int
add
or
jae
incb
call
rorb
push
add
fstl
add
ja
add
scas
jl
lcall
fistps
lahf
loop
lock
fwait
xchg
les
cltd
push
mov
mov
ljmp
mov
movsl
add
int
xchg
mov
imull
sbb
js
rclb
pop
push
rolb
xor
decl
push
mov
pop
outsb
lret
xchg
sub
testl
insb
call
sub
and
ljmp
in
mov
insl
mov
fistps
cmpsb
add
frstor
mov
call
imul
roll
add
add
add
or
push
testl
add
add
add
sbb
sub
cmp
add
sbb
add
movl
les
loop
sub
add
mov
add
jns
push
das
hlt
aas
dec
or
test
adc
ss
int3
adc
mov
add
pop
mov
fisubl
jne
adc
aas
add
dec
movl
stc
fnsave
cmp
add
add
fmul
mov
jp
add
xchg
imul
inc
add
incl
push
decl
fidivl
add
mov
add
lods
jg
inc
add
add
pusha
add
pusha
add
cmp
lock
add
pop
sbb
pusha
add
shl
add
decl
leave
pop
sbb
jl
add
daa
add
scas
and
incl
add
decl
aam
xchg
adc
decl
aas
fnstsw
add
inc
add
adc
pushl
add
imul
pusha
add
jns
xchg
sbb
movsl
add
add
sbb
dec
scas
xor
mov
inc
add
cmp
add
inc
add
dec
jo
lcall
js
ret
add
or
mov
jmp
add
cld
addb
add
add
add
sti
mov
jl
insb
in
cld
add
dec
add
call
pushl
add
and
dec
or
imul
jle
hlt
sbb
out
xchg
push
add
add
call
inc
add
sbb
add
cld
mov
aaa
scas
jae
jmp
jle
push
add
jp
push
mov
add
incl
decl
add
insb
and
call
movl
lds
jl
sbb
mov
add
pop
or
adc
and
ljmp
or
xchg
inc
add
sbb
add
add
sub
fldcw
rolb
ljmp
pushf
dec
addl
add
scas
xor
js
add
jbe
add
inc
add
xlat
in
lret
cmp
xchg
stos
xchg
lahf
xor
call
test
and
lcall
jns
add
add
add
call
dec
jo
jmp
add
add
xor
dec
adc
lcall
fsubrl
jl
push
add
sub
add
adc
js
mov
add
pop
rolb
add
jnp
insl
and
push
inc
add
add
add
sti
ds
lds
js
jg
add
dec
aas
xor
lcall
add
cmpsl
add
push
push
add
pop
and
lcall
jmp
add
dec
rorl
add
sub
movntq
rcrl
sub
adc
decl
push
pop
jae
jmp
add
add
mov
add
call
ret
xchg
jbe
loope
jae
pushl
dec
xchg
pop
ljmp
addb
add
add
test
add
fisubl
into
mov
pop
inc
add
pushf
push
add
outsl
sahf
inc
add
add
sbb
mov
add
mov
mov
add
decl
scas
or
add
push
add
sub
negb
ja
add
mov
push
add
mov
add
add
adc
cmp
add
rolb
push
adc
incl
sahf
pop
add
jle
dec
xchg
repz
add
jl
add
inc
add
push
push
add
jecxz
mulb
incl
sub
xchg
frstor
add
inc
add
std
test
into
push
xchg
pop
aad
or
into
sbb
stc
dec
aas
cs
and
stc
cltd
addb
add
push
daa
add
add
add
push
or
add
adc
inc
add
out
push
add
aad
add
fdivs
add
aas
mov
mov
add
xchg
push
add
mov
add
lods
mov
add
xlat
mov
mov
in
inc
add
aaa
push
mov
add
inc
add
mov
add
roll
ja
js
add
xchg
stc
sub
test
jmp
xor
out
push
add
adc
jns
test
push
jg
int
add
mov
add
pushf
out
jp
and
decl
push
ss
inc
add
mov
add
adc
pushl
and
lcall
add
add
call
mov
ja
int
add
jnp
cltd
xor
mov
sub
mov
stos
or
pop
test
mov
mov
push
xchg
sub
inc
add
ss
add
es
sti
sti
outsb
or
add
add
mov
add
mov
fnstcw
imul
cmp
jge
add
test
outsb
push
add
fdivl
add
iret
lds
xor
incl
dec
shl
xchg
rclb
push
xor
jmp
jge
mov
lcall
sbb
add
mov
xchg
aad
shlb
add
add
add
decl
out
xchg
push
jmp
jle
add
jge
add
add
add
add
pop
sbb
in
movl
ljmp
xor
jmp
xchg
add
rolb
jmp
add
cwtl
scas
add
mov
push
adc
into
mov
add
add
sar
mov
add
add
mov
jmp
or
add
pop
es
mov
add
int3
push
add
add
cmc
push
inc
add
aad
add
pop
pushf
lods
stos
pop
bound
call
decl
arpl
lcall
daa
add
jae
jmp
shlb
mov
movl
sti
nop
mov
call
add
and
cmp
jl
xor
decl
mov
pop
sbb
stos
insl
popf
sub
push
add
sub
add
add
dec
cs
add
add
sti
add
jp
add
enter
jb
incl
add
nop
or
cmp
movl
add
add
add
sarl
add
fwait
push
add
in
cwtl
rolb
add
add
add
sbb
add
popf
and
incl
mov
mov
sub
lods
stos
jmp
in
cmp
cmp
add
clc
mov
push
dec
sahf
cwtl
pop
sub
repnz
nop
aam
add
mov
fwait
mov
add
sbb
ds
jg
mov
mov
mov
call
fs
mov
stos
pop
add
dec
cmpsb
add
add
fildl
add
push
add
das
mov
add
pop
cmp
ljmp
push
add
ljmp
add
incl
add
add
call
pushl
je
xor
pushl
add
mov
jae
decl
push
lcall
in
arpl
decl
enter
ljmp
add
add
push
mov
clc
aam
add
stos
jg
add
pop
add
add
xchg
inc
add
add
mov
cmp
add
mov
add
sbb
fwait
mov
add
data16
add
sbb
mov
mov
add
add
xchg
lods
and
jmp
add
bound
decl
sub
xor
pushf
jb
lcall
in
cmp
inc
add
sub
lcall
add
add
add
outsb
pusha
add
mov
arpl
incl
incl
es
ljmp
mov
add
rolb
add
add
out
repnz
loop
jno
lcall
add
add
lcall
mov
in
push
sbb
push
daa
add
fwait
xchg
or
adc
call
iret
jle
int3
shlb
lcall
add
std
in
lds
xchg
data16
mov
lea
lcall
add
cmpsb
add
out
sub
sub
add
add
adc
add
pushl
adc
addb
movsl
add
add
lahf
lahf
and
pushl
xchg
stos
movsb
add
cmc
add
jns
fiaddl
pushl
fldt
cmp
addr16
jp
pop
jbe,pt
add
imul
add
dec
add
or
add
mov
add
jno
incl
cmp
add
fsubrl
add
lcall
add
loop
xchg
add
push
or
push
jb
mov
xchg
push
ljmp
add
fwait
clc
or
add
mov
inc
add
or
add
mov
add
rolb
mov
or
add
mov
loope
iret
outsb
out
popf
jo
pushl
push
add
mov
ret
add
cmp
ljmp
add
inc
add
aad
add
ret
add
cwtl
or
shlb
pop
addl
jae
call
mov
add
fyl2x
pushf
push
lcall
add
jne
out
test
mov
in
pop
adc
call
ljmp
imul
cld
mov
lock
add
addb
add
push
add
dec
sbb
add
mov
in
adc
add
dec
icebp
clc
test
into
mov
pop
add
add
sub
xlat
cltd
and
fsubrl
add
insl
pop
add
add
pop
add
data16
add
addb
dec
pop
fwait
jns
add
lahf
rolb
xchg
int3
js
add
add
add
jmp
add
out
dec
jb
cmp
cmp
iret
ja
sub
and
call
pop
movsl
add
out
sbb
push
add
jns
add
pop
pop
js
mov
add
jmp
cmp
add
and
out
out
stos
addl
jo
call
add
xor
jmp
add
lods
xor
inc
add
dec
fistpl
add
xor
ljmp
ljmp
sbb
dec
dec
jmp
pusha
add
repnz
insl
jno
pushl
and
jmp
pop
lods
mov
add
js
xchg
mov
adc
cmp
add
add
sbb
ljmp
ljmp
call
pop
add
pushl
repz
cmp
add
jmp
cmp
dec
add
add
push
insb
adc
call
add
add
pusha
add
dec
loopne
jecxz
cwtl
scas
mov
bound
ljmp
or
add
add
add
cmp
nop
or
xchg
les
push
jo
lcall
add
pushl
add
add
mov
dec
std
decl
scas
cs
lock
call
lcall
push
and
jmp
outsb
sarb
add
ret
add
jmp
pop
in
add
jmp
add
add
stos
aaa
xlat
adc
incl
add
sbb
mov
adc
cmp
add
jns
repnz
call
mov
and
dec
inc
add
jge
cmc
mov
push
adc
mov
add
repnz
push
xchg
insl
dec
mov
jnp
popa
add
cmp
lcall
pop
jo
ljmp
test
add
js
cmc
lds
push
add
and
decl
cmp
pop
mov
repnz
add
lcall
add
add
decl
and
call
jb
jmp
add
fstps
mov
cli
ljmp
lcall
pop
add
mov
enter
lret
mov
pop
mov
add
jge
stc
mov
pop
mov
add
xor
decl
sbb
add
jle
mov
push
add
test
add
add
add
dec
daa
add
fsubrp
mov
fisttps
add
outsb
push
insl
cmp
add
lock
call
dec
cld
addb
mov
add
sub
add
movq
xchg
pop
inc
add
fcoms
add
out
and
jmp
jecxz
shlb
dec
repz
fldcw
pop
cmp
add
mov
xchg
mov
cmp
lea
add
dec
sub
add
jmp
inc
add
enter
add
add
notl
add
pop
sub
add
fdivrp
mov
add
and
inc
add
sub
add
pop
jge
jle
add
add
add
push
pop
jl
and
pushl
sub
xor
inc
add
adc
jmp
xchg
shrb
ror
rorl
inc
add
add
add
ja
add
mov
lock
aad
add
pushf
push
push
pop
shlb
add
xor
out
movsb
add
mov
add
enter
adc
add
clc
push
pusha
add
fisubs
add
sbb
jle
add
mov
jns
add
incl
call
outsl
add
decl
adc
cmp
pushf
sub
add
fmuls
mov
pop
les
adc
ljmp
sahf
aam
call
add
add
test
jp
pusha
add
push
add
add
ficoms
push
add
addl
push
cs
add
rolb
popl
add
xor
pushl
bound
incl
add
ja
lock
xor
fistps
jle
add
popf
pusha
add
and
jp
add
test
addb
cmp
pop
loop
add
xor
jmp
fwait
rcr
mov
movsb
add
add
add
add
add
add
add
adc
add
mov
push
add
mov
push
scas
out
dec
xor
lret
add
inc
add
sbb
inc
add
movsl
add
add
scas
cld
popf
bound
ljmp
sub
sub
push
aam
add
xchg
cmc
xchg
bound
decl
add
pusha
add
in
jge
jns
and
lcall
fwait
push
add
out
ja
js
add
sub
xchg
add
pushl
scas
mov
icebp
mov
pop
add
ljmp
dec
loope
mov
iret
xchg
scas
inc
add
push
rolb
insb
mov
add
add
dec
or
dec
jl
shll
decl
add
add
add
fimull
scas
mov
in
push
push
add
pop
sbb
test
jmp
add
add
add
mov
add
adc
jle
pop
aam
add
sub
lock
pop
inc
add
mov
add
add
pop
pop
aaa
pushf
xlat
mov
roll
jbe
or
call
xchg
negb
out
add
inc
add
add
mov
add
inc
add
push
add
jnp
sub
sub
add
add
pop
mov
jmp
add
add
fst
add
xor
push
imul
cltd
je
add
addb
shrb
adc
call
jns
add
mov
incl
jmp
add
cmp
rorl
out
int
add
add
adc
call
add
jge
push
inc
add
ljmp
loope
inc
add
js
add
add
pop
popf
rorb
xchg
out
inc
add
test
addl
add
add
pop
xor
jmp
add
jmp
ljmp
add
jmp
ficoms
xchg
cmp
or
jecxz
into
inc
add
pop
pop
dec
jbe
shl
mov
icebp
xor
call
pop
ds
xchg
rorb
jb
mov
movsb
add
add
fidivl
cmp
mov
mov
mov
ret
add
icebp
movl
mov
jg
jge
clc
jg
ret
add
fidivrl
add
pop
add
incl
pushl
add
adc
cltd
and
cmp
rcll
incl
pushf
push
stos
addb
rclb
ret
jns
cmp
add
pushf
fwait
mov
add
rolb
add
std
xor
decl
add
push
add
pop
add
addb
stc
std
arpl
lcall
push
mov
add
dec
and
jmp
add
imul
add
aam
push
fistpl
mov
test
push
pop
aas
inc
add
and
addl
cmp
lods
add
call
push
leave
inc
add
xchg
jne
add
jle
ds
add
sbb
call
cmp
add
stos
repz
or
push
inc
add
jmp
push
iret
jmp
add
mov
add
mov
incl
add
add
add
shlb
add
cmp
add
push
add
jle
add
in
sbb
mov
decl
add
inc
add
leave
movsl
add
call
pusha
add
xor
lcall
movl
add
out
pushf
addl
sahf
mov
add
in
dec
and
fmuls
dec
lock
add
add
add
popa
add
mov
jmp
mov
push
push
dec
or
add
add
dec
xchg
xchg
pop
sbb
xor
lcall
cmp
gs
xchg
xchg
arpl
ljmp
xor
std
test
cmp
add
ljmp
push
or
add
add
bound
ljmp
addl
repnz
add
jg
xchg
pusha
add
xchg
jae
ljmp
stos
movb
add
sti
xchg
decb
add
cld
aad
sarb
add
shl
sub
add
sti
sbb
push
sahf
jl
add
add
ljmp
fists
lcall
add
push
add
xchg
js
mov
add
fcoms
jmp
add
sbb
add
fbld
decl
mov
add
test
jo
lcall
add
aas
movl
add
add
add
inc
add
cs
lods
sbb
jne
adc
incl
call
add
sbb
add
in
popl
add
add
inc
add
mov
movb
shlb
pushl
mov
jbe
int
lds
mov
add
lcall
dec
sbb
pushl
call
add
push
xlat
add
inc
add
mov
cmp
jge
out
fbld
add
push
add
mov
fdiv
enter
inc
add
dec
xchg
aam
add
popa
add
add
cltd
xor
dec
fisubrl
add
cmp
add
enter
lods
adc
in
pop
and
call
loopne,pt
cmp
ds
jne
add
dec
movl
insl
add
sbb
add
test
leave
loop
sub
ret
xor
and
jmp
add
inc
add
jl
jae
lcall
je
incb
add
sbb
sbb
incl
je
mov
jno
incl
call
add
popa
add
sbb
pop
mov
add
lcall
jg
add
je
add
add
jmp
add
add
pop
cmc
addb
addl
sub
fdivs
jmp
add
shll
clc
lahf
dec
cmp
mov
pop
sub
push
ret
add
adc
sbb
add
fidivs
fsub
add
xchg
and
lcall
adc
jmp
add
cmp
cmp
push
add
lods
lcall
das
mov
or
add
mov
lock
jecxz
jmp
push
add
sub
sbb
inc
add
popa
add
fsts
inc
add
lcall
adc
into
add
inc
add
add
mov
and
jmp
mov
add
add
out
mov
add
bound
jmp
add
inc
add
ffreep
add
mov
xchg
hlt
xchg
xchg
popf
pushf
cli
jb
incl
add
aad
add
dec
pushf
loopne
movsb
add
decl
nop
add
incl
nop
mov
inc
add
xchg
push
add
mov
aad
out
iret
inc
add
sbb
add
in
dec
or
aam
pushf
insb
movsl
add
test
cmc
fidivrs
add
repnz
dec
ds
inc
add
stos
aam
adc
jmp
add
xchg
sahf
xor
mov
cmp
add
push
xchg
cmc
ud2
inc
add
mov
mov
add
js
jno
mov
add
je
add
inc
add
inc
add
and
jl
add
dec
mov
sahf
out
jo
jmp
in
xchg
mov
add
incl
jo
ljmp
cltd
cltd
lcall
pop
push
sbb
add
stos
pop
les
mov
call
fdivl
add
add
lahf
push
add
int
jmp
pusha
add
data16
add
add
add
cmp
dec
nop
sbb
add
add
add
movsl
add
cmp
or
sbb
addl
xor
incl
add
add
les
insl
inc
add
inc
add
mov
add
sub
lahf
je
add
cmpsl
add
push
add
xchg
into
mov
pusha
add
shrb
sarl
js
mov
add
add
add
add
pusha
add
jne
add
mov
imul
ljmp
cld
outsb
ds
ret
add
hlt
int
ljmp
jae
decl
sub
push
add
pop
jl
test
xchg
xlat
push
sbb
pusha
add
std
inc
add
inc
add
and
decl
add
push
dec
inc
add
cmpsb
add
add
fcomps
aad
mov
dec
push
add
add
call
jmp
add
sub
hlt
mov
add
add
mov
fs
add
mov
fwait
sbb
imul
pop
aad
aam
add
add
cld
and
incl
dec
sbb
dec
addl
pop
xor
lods
pop
roll
push
mov
push
add
mov
add
test
mov
xor
push
mov
mov
add
mov
add
add
rolb
add
sbb
add
data16
mov
adc
add
add
lods
pop
outsb
flds
add
lds
rol
add
lret
add
enter
ljmp
mov
repnz
add
add
add
mov
add
jecxz
push
add
mov
ss
add
jb
ljmp
add
dec
addb
add
add
sub
aas
xchg
mov
jp
jae
pushl
add
xor
hlt
inc
add
adc
aaa
and
data16
push
add
mov
stos
lret
or
lcall
add
add
loop
jnp
pop
inc
add
mov
mov
or
addb
or
add
and
cmp
pusha
add
insl
pop
mov
add
push
add
add
bound
jmp
add
xchg
pop
add
sbb
add
movsl
add
xchg
in
ds
sub
adc
add
ljmp
mov
fimuls
add
add
loopne
xchg
cli
movsb
add
out
pop
jmp
aaa
adc
mov
ffreep
add
jle
add
add
decl
mov
add
fwait
in
mov
mov
jl
add
rcl
xchg
lods
es
add
add
pop
out
test
aas
cltd
sti
scas
in
jae
decl
aam
aad
dec
fldcw
and
mov
push
lock
les
sub
out
sbb
xor
incl
add
mov
add
add
add
shl
add
decl
xchg
in
mov
jg
add
add
add
test
add
jmp
std
inc
add
cs
insl
add
repnz
call
add
incl
add
mov
js
sub
shll
mov
add
mov
call
add
movsl
add
add
test
jb
pushl
ljmp
repz
mov
jmp
pusha
add
xor
pushl
add
daa
add
int3
xchg
stos
mov
clc
jns
add
xchg
jmp
or
and
add
ja
add
in
jae
lcall
lret
inc
add
add
addb
mov
add
imul
movl
inc
add
shlb
fwait
ret
add
add
out
loope
data16
pop
push
jns
add
push
jbe
add
ss
sbb
pop
int3
dec
mov
pop
mov
add
jnp
aam
movsb
add
add
dec
ja
adc
std
push
add
or
mov
inc
add
inc
add
add
stc
lock
or
add
add
add
sub
cli
repz
add
leave
dec
test
or
stos
jl
rcrb
add
add
push
addl
add
pop
add
js
adc
pushl
fstpt
and
incl
in
data16
movb
add
sbb
data16
dec
scas
xor
add
shll
cli
rcl
add
add
data16
add
mov
jle
in
les
in
call
add
push
or
add
rolb
adc
incl
add
adc
ljmp
xchg
pop
cli
dec
imul
call
call
adc
addb
add
sbb
in
in
mov
decb
into
inc
add
xchg
outsb
imul
clc
aaa
cmp
movl
cwtl
ja
icebp
push
add
lea
scas
add
jmp
pop
add
add
and
jb
decl
roll
add
mov
je
add
jo
mov
std
adc
stos
add
into
add
stos
cmc
mov
ljmp
add
add
sub
add
inc
add
inc
add
movb
inc
add
add
push
popa
add
pop
sub
xchg
add
lcall
mov
push
inc
add
add
incl
ljmp
lret
dec
xchg
loopne
add
lcall
cli
mov
mov
je
add
movsb
add
cltd
imul
mov
xlat
dec
movsb
add
insl
sbb
xor
inc
add
int
add
pop
jmp
add
lcall
or
sbb
cmp
add
add
add
add
imul
add
add
cld
dec
pop
xor
incl
jmp
or
jg
add
jae
incl
incl
or
in
out
out
jno
ljmp
jae
incl
in
add
std
sbb
mov
add
lods
jb
pushl
imull
inc
add
mov
add
ljmp
cmp
xchg
out
enter
add
push
xchg
sbb
xor
call
sub
stc
cmp
dec
in
test
dec
xchg
sub
cmp
decl
add
sub
add
add
xlat
adc
ljmp
pop
call
add
int
and
dec
aas
push
loopne
je
inc
add
add
sub
push
add
aad
outsl
adc
call
ret
adc
xlat
mov
add
loopne
dec
inc
add
shlb
add
mov
add
mov
push
add
inc
add
add
add
pop
pop
je
add
or
add
add
jne
stos
or
in
sbb
push
add
test
sub
cmc
scas
inc
add
xor
add
ret
add
add
pop
hlt
xor
decl
sbb
or
add
std
push
imul
add
jns
cmp
mov
add
leave
mov
add
dec
aaa
cmp
ret
add
xchg
js
add
push
fwait
sub
xor
mov
mov
add
xchg
or
add
add
add
push
je
add
mov
add
int3
adc
mov
mov
pop
add
jns
add
popa
add
pop
ret
add
data16
pushf
arpl
call
dec
and
mov
add
add
add
lea
add
data16
dec
stos
outsl
adc
dec
adc
add
or
addl
add
inc
add
leave
mov
addl
jp
jmp
lcall
cs
mov
add
decl
ja
xchg
stos
addl
ja
mov
add
push
add
inc
add
add
add
cmp
sbb
incl
xor
push
jg
adc
jnp
lcall
mov
adc
xchg
bound
jmp
pushl
punpcklwd
in
add
call
lret
mov
xchg
xchg
jl
scas
or
push
jnp
add
add
jae
ljmp
jp
add
scas
or
test
enter
jecxz
dec
jnp
cwtl
inc
add
add
add
inc
add
jno
lcall
lcall
add
mov
pop
or
in
bound
ljmp
mov
rcl
jg
jae
dec
roll
inc
add
insb
pop
sub
into
imul
jmp
add
add
jns
mov
filds
inc
add
xchg
iret
pushf
add
pushl
pop
je
sbb
inc
add
lcall
scas
push
add
mov
in
bound
decl
mov
xor
call
jle
cli
jne
out
dec
xchg
out
dec
lods
jae
ljmp
decl
test
mov
iret
add
mov
add
mov
add
pushl
add
add
jmp
and
jmp
add
add
into
add
fsubp
add
decl
xor
fistl
ljmp
push
inc
add
add
stc
bound
inc
add
mov
imul
decl
jge
lret
add
movsb
add
lret
insb
les
imul
add
add
pop
out
and
ret
bound
cmp
xchg
out
cmp
adc
jns
sbb
add
push
inc
add
aas
dec
int3
xchg
pop
sbb
adc
add
xlat
push
dec
addr16
loop
iret
mov
sbb
clc
data16
or
mov
aas
in
add
incl
add
add
add
push
fwait
lds
pop
aas
jge
push
or
add
add
add
adc
call
mov
add
add
add
arpl
pushl
fcos
fisttps
mov
adc
mov
mov
add
shrb
add
mov
int
idivl
mov
call
add
pushl
call
add
lcall
add
test
mov
add
xor
incl
add
stc
dec
xor
add
or
out
movsl
add
add
add
hlt
cltd
and
out
ds
mov
cmp
repz
fisubrl
push
add
outsb
jmp
add
pop
mov
add
or
push
add
xchg
mov
push
xor
in
and
jmp
les
jmp
pushl
add
fstpt
stos
negb
movsb
add
jno
call
adc
call
or
add
insl
fwait
insb
sti
jno
lcall
addl
xchg
cmp
and
dec
push
lahf
cld
jne
add
fimuls
add
movb
ljmp
pushl
jmp
add
lcall
sub
ljmp
add
mov
int
pop
xor
jge
mov
jne
cmp
cltd
testl
xchg
popl
adc
mov
mov
add
add
cwtl
inc
add
js
add
add
loope
mov
jns
jecxz
pop
adc
pushl
in
lods
xchg
mov
jae
inc
add
inc
add
clc
jne
mov
add
mov
jg
pusha
add
outsl
push
push
add
das
cmp
mov
add
pusha
add
pop
push
add
add
mov
sub
ss
roll
add
mov
jae
push
popf
add
add
imull
addb
add
sub
adc
out
insb
jecxz
fidivrs
lahf
addl
add
add
popa
add
inc
add
push
cwtl
lea
pushl
ljmp
lcall
mov
pop
add
and
jmp
add
add
cli
jbe
add
iret
mov
test
jno
inc
add
or
aad
pop
add
icebp
xchg
test
scas
sti
pushf
js
add
add
rolb
mov
ficompl
xlat
jmp
out
push
cmpsb
add
stos
jg
push
push
add
xchg
mov
insb
insl
sahf
data16
mov
enter
add
add
jmp
dec
push
add
nop
lods
sub
jnp
or
fbld
add
popa
add
int
add
pop
add
add
insl
mov
pop
rolb
pop
mov
add
cwtl
mov
add
fisttps
add
leave
stc
out
rolb
add
pop
mov
add
add
lds
fsubr
adc
nop
dec
imul
add
addl
jbe
adc
pushl
addb
add
mov
add
cli
shlb
add
cld
xlat
add
add
lds
xchg
testb
add
mov
add
push
movsb
add
pop
xor
ljmp
jbe
rclb
add
add
push
add
movl
addb
lret
dec
inc
add
or
add
test
jae
lcall
stc
lcall
add
pop
rolb
add
pop
loope
xlat
int3
mov
cmc
fneni(8087
add
add
xor
pushf
mov
ret
add
push
add
test
mov
in
aad
add
ljmp
push
add
lods
jae
push
out
mov
add
adc
dec
out
outsb
imulb
test
and
call
scas
pop
sub
scas
lret
call
ja
add
add
adc
pushl
add
inc
add
add
lock
add
in
rolb
xchg
xchg
mov
add
lcall
add
test
and
incl
incl
jnp
add
decl
or
add
shrl
and
push
pusha
add
jge
mov
jnp
iret
push
add
test
add
cmp
mov
sbb
adc
jmp
add
add
dec
add
ljmp
rcl
jecxz
mov
js
roll
add
add
push
add
sub
add
add
add
pop
pusha
add
loopne
sbb
xchg
in
cmp
add
leave
icebp
cmc
and
movlps
push
push
movsb
add
jne
add
fcomps
cs
sti
cmp
incl
decl
adc
ja
je
pop
add
ljmp
sub
add
daa
add
das
into
mov
arpl
call
adc
push
add
roll
xor
dec
nop
and
call
add
popf
ror
push
inc
add
mov
or
add
movsb
add
out
pop
test
mov
push
add
sub
xlat
out
cmp
push
add
repnz
add
das
mov
fwait
inc
add
decl
pop
dec
jbe
sub
ret
add
test
adc
inc
add
jmp
mov
adc
call
xchg
jae,pt
decl
push
lret
xlat
ss
add
ffreep
add
test
sarl
int
aas
and
and
and
decl
add
inc
add
mov
add
clc
out
inc
add
aas
mov
adc
add
fsubrs
daa
add
pop
push
add
jo
call
fbld
add
add
inc
add
fisttps
imul
arpl
decl
rorl
add
jl
add
repnz
movb
pop
mov
add
ds
scas
popa
add
cltd
mov
add
ror
popa
add
call
out
imul
imul
jne
add
pop
cmc
decl
movl
inc
add
add
jnp
add
add
shl
add
push
add
mov
mov
add
xor
repnz
jno
call
jge
add
aad
add
add
add
out
test
test
xchg
or
test
ljmp
sbb
dec
push
xchg
jecxz
and
call
add
pop
stos
mov
insl
add
in
mov
add
add
out
movl
add
test
pop
mov
mov
add
inc
add
ljmp
roll
or
mov
jmp
push
mov
push
add
jmp
xor
jmp
add
inc
add
stc
popf
leave
dec
fwait
xor
lcall
adc
fistpll
lea
cmc
loopne
out
addb
clc
mov
ds
dec
bound
call
incl
pushl
jmp
mov
add
ljmp
sbb
add
add
sub
cld
std
cmp
dec
test
out
cmp
sahf
rcrb
cli
enter
add
add
adc
pushl
jmp
add
pop
or
sti
sbb
add
add
fidivs
leave
test
mov
add
or
jmp
push
add
add
pop
add
ljmp
jb
ljmp
add
jmp
sbb
movl
loopne
push
add
pop
sbb
daa
add
add
cmp
add
add
pushl
add
add
add
sbb
add
add
lret
adc
call
add
add
lds
scas
cmp
add
or
cmp
lods
movsl
add
add
inc
add
daa
add
add
ss
jge
adc
ljmp
add
or
add
mov
add
loopne
out
ret
add
add
lock
cld
fisubrl
out
cmp
xlat
inc
add
loopne
mov
aas
loopne
mov
incl
add
fwait
jae
jmp
add
int
add
dec
xor
incl
add
mov
hlt
mov
add
dec
add
incl
mov
add
inc
add
push
fstps
add
sti
sub
add
adc
mov
add
aas
sbb
lcall
in
mov
mull
call
lcall
decl
inc
add
mov
add
add
ss
mov
mov
aas
push
add
jne
add
mov
scas
dec
pop
sub
fwait
cmp
add
cmp
add
add
in
mov
add
das
rcrl
add
and
pushl
lcall
movsb
add
fldpi
mov
push
add
addl
add
cmp
stc
push
add
add
fstl
stos
cmp
add
xchg
push
add
push
xlat
jb
inc
add
add
add
adc
cmpsb
add
xor
lcall
add
add
add
ret
add
push
adc
mov
inc
add
test
mov
je
movl
push
add
lret
int3
add
jmp
jle
repz
call
or
add
lahf
ret
add
setae
and
lcall
adc
lcall
inc
add
add
movsl
add
insl
adc
pushl
shr
jb
decl
and
incl
dec
xchg
test
daa
add
add
pop
iret
add
pop
les
adc
jmp
nop
lds
nop
jmp
aas
hlt
cmp
adc
ljmp
add
shlb
add
fisubs
add
adc
call
sbb
jae
mov
push
sbb
mov
nop
enter
loop
dec
into
cmp
rorl
sbb
insb
pop
das
dec
inc
add
lret
sahf
mov
add
add
cmc
add
push
add
fists
add
or
add
xor
decl
add
data16
movsb
add
add
jbe
add
and
add
pushl
call
mov
insb
test
add
sub
in
stos
test
sbb
pop
int
rclb
push
icebp
ljmp
mov
add
add
add
mov
add
add
jmp
add
cli
dec
inc
add
cmp
sub
lods
dec
lds
jns
xchg
repz
add
or
xchg
sbb
add
inc
add
repnz
jg
pop
rcrb
idivl
loopne
cs
pusha
add
dec
ja
fdivs
ficoml
call
add
mov
ds
int
add
aad
add
and
mov
add
xchg
mov
add
add
inc
add
or
add
add
push
xor
jl
sub
or
decl
cmp
jbe
add
fstpl
push
test
jl
xchg
movl
add
icebp
loope
inc
add
mov
pop
insl
iret
adc
call
add
divb
jmp
add
outsb
jg
arpl
pushl
decl
nop
in
pop
xchg
mov
scas
cmp
das
add
stc
push
add
add
incl
xor
incl
sub
cmc
mov
add
sbb
add
fisttpll
jo
jmp
xchg
dec
bound
push
xlat
push
into
lds
sub
add
and
call
jno,pt
call
dec
cmpsl
add
decl
sbb
add
test
mov
pushl
inc
add
add
mov
push
add
mov
add
jmp
fwait
shrl
fcoml
mov
dec
or
push
inc
add
repnz
imul
fbld
addl
jmp
popa
add
cmp
cwtl
scas
sub
in
cltd
sbb
add
pusha
add
mov
add
pushf
loop
mov
into
call
test
add
in
xchg
jb
ljmp
add
jmp
push
add
fadds
incl
add
lahf
xchg
mov
xor
decl
add
or
out
sub
ljmp
test
add
incl
cltd
sysexit
mov
incl
cld
out
int
mov
repnz
lcall
adc
call
xor
lcall
adc
leave
sbb
lcall
add
decl
jo
decl
add
pop
inc
add
jne
imul
push
add
movsb
add
clc
imul
add
cmpsl
add
add
pop
jg
cs
clc
add
call
insl
push
call
add
xor
pushl
sub
add
push
or
mov
add
dec
lret
popf
dec
lds
stos
sbb
shl
add
add
jno
call
add
sub
das
mov
cmp
add
adc
pushl
sub
add
mov
aaa
sub
cmp
xchg
push
push
movsb
add
stos
xor
incl
add
inc
add
mov
pop
pop
pop
mov
add
dec
push
add
psrlq
pushl
ljmp
add
jnp
inc
add
sbb
add
fcmove
cmovns
jle
add
xor
cld
insl
out
lahf
call
push
add
dec
mov
ds
rolb
popf
sbb
add
adc
call
or
push
adc
les
clc
mov
add
add
add
adc
decl
mov
jmp
add
inc
add
add
dec
in
fnsave
out
add
pop
pop
xchg
mov
movl
adc
call
xor
call
aad
add
outsl
fldenv
ret
mov
adc
incl
add
mov
pop
sbb
mov
arpl
ljmp
fildl
inc
add
data16
fnstsw
push
adc
lcall
loope
in
iret
lods
xor
pushl
std
add
lcall
add
cmp
push
xchg
mov
cmp
loop
cmp
lcall
add
add
je
dec
hlt
movsb
add
test
cmp
call
js
add
lcall
pop
cmpsb
add
daa
add
mov
add
push
add
jle
mov
jo
call
mov
xor
ljmp
lahf
arpl
lcall
add
scas
adc
call
add
lret
les
aad
and
jge
sti
aaa
mov
inc
add
add
daa
add
add
xchg
jae
decl
xchg
out
aaa
sub
pushl
outsb
es
in
popf
push
popa
add
xchg
jg
xor
incl
pushl
jb
push
push
decl
sahf
jp
daa
add
lahf
xchg
arpl
pushl
dec
insb
jne
add
cltd
movb
add
cmp
stc
dec
out
push
fstps
mov
shr
pop
jno
call
inc
add
mov
add
stc
movsl
add
adc
jmp
decl
push
add
arpl
inc
add
out
insb
jne
add
call
fdivp
setns
xor
call
xchg
stos
xor
inc
add
dec
pop
addl
fwait
cmp
add
jne
movb
pusha
add
push
add
add
sahf
cli
into
iret
push
es
add
loope
mov
lods
repnz
testb
out
jge
add
addb
pusha
add
sbb
dec
or
rorl
mov
add
pop
mov
add
mov
jmp
lret
push
add
pushl
mov
jl
add
fbstp
add
mov
add
jge
scas
mov
lcall
pop
or
xor
decl
push
add
add
dec
test
add
clc
movsl
add
add
sub
pop
data16
jmp
add
loope
hlt
mov
xor
call
add
int3
push
push
fwait
xchg
mov
cmpsl
add
cwtl
xchg
sbb
add
adc
jmp
loope
clc
sub
add
lock
add
add
jmp
add
scas
test
movsb
add
mov
div
stos
sbb
add
mov
inc
add
jno
ljmp
add
insb
aas
ja
addl
jecxz
mov
mov
add
testb
pushl
decl
adc
cmp
data16
leave
jl
add
loope
insb
mov
popa
add
xor
lcall
jp
popa
add
adc
ljmp
mov
fisubl
add
adc
decl
add
add
add
mov
lods
jmp
add
dec
je
add
add
fmuls
mov
push
aad
add
ss
xor
dec
pop
xchg
clc
add
push
insb
push
add
jne
out
lret
mov
stos
xchg
add
decl
roll
inc
add
xor
sub
xlat
bound
cmp
mov
add
test
ret
divb
jb
push
sub
inc
add
mov
roll
add
mov
add
sldt
jmp
sbb
mov
and
cmp
add
insl
movb
add
sbb
aaa
sbb
xchg
mov
icebp
adc
call
aam
pop
add
inc
add
add
mov
add
and
lcall
add
add
rcl
nop
and
lock
add
dec
mov
incb
jl
add
mov
cli
and
lcall
sub
push
add
mov
add
push
xchg
into
movl
mov
xor
jmp
ljmp
or
decl
and
sahf
scas
ffree
add
jbe
flds
add
mov
add
inc
add
movsl
add
mov
xchg
add
lcall
add
mul
add
add
cmp
add
call
call
add
mov
pop
idiv
popa
add
flds
test
movb
sbb
lcall
mov
add
mov
add
add
push
dec
jmp
xchg
mov
add
add
dec
adc
fcmovb
add
lock
add
push
add
pmaxub
add
ds
lret
sub
or
mov
shrl
xchg
fadds
incl
ljmp
rcr
jp
add
aam
xor
add
add
les
cmp
add
decl
movsb
add
jge
test
cmp
jns
pop
add
xor
add
dec
roll
test
into
sub
mov
mov
dec
scas
cmp
adc
js
addb
repz
lods
pop
aam
xchg
ds
test
data16
fwait
jp
or
mov
bnd
cmc
fisubrs
inc
add
mov
mov
outsb
lock
adc
decl
add
push
pop
shrb
data16
stc
sub
iret
xor
popa
add
out
cwtl
stos
inc
add
sub
js
add
cmp
add
push
loope
ja
lcall
mov
iret
add
mov
pushl
pop
std
dec
out
inc
add
sub
jnp
mov
add
jmp
dec
push
adc
mov
cwtl
sub
add
test
sub
jle
push
mov
xchg
fistps
jae
pushl
add
cmp
add
adc
test
mov
add
jnp
mov
lret
int3
mov
or
data16
and
call
add
addb
adc
jmp
add
pop
fldcw
push
add
mov
jp
add
lahf
adc
lcall
iret
aad
add
rclb
incl
inc
add
data16
and
ljmp
adc
mov
add
movsb
add
aad
cmp
push
mov
inc
add
mov
movb
add
add
std
mov
sub
sbb
cltd
stos
dec
pop
sub
xchg
in
repnz
sub
dec
dec
cmc
int
popa
add
jl
push
add
movsb
add
decl
cld
xchg
push
jbe
ret
pop
mov
add
and
pushl
pusha
add
mov
mov
dec
ret
push
add
inc
add
fistpll
packuswb
sti
shll
lock
push
push
iret
and
mov
and
jmp
jle
loop
mov
test
call
mov
shrl
xchg
pop
push
addb
negl
stos
js
add
sbb
add
dec
fidivrl
push
add
add
add
sub
ljmp
jae
dec
xor
fdivs
lds
data16
add
nop
inc
add
add
mov
imul
jb
sti
xchg
repnz
adc
call
add
add
mov
push
add
push
add
bound
mov
aam
add
add
push
aam
add
les
pop
call
das
push
xchg
js
xchg
push
repnz
sbb
imul
and
and
call
das
test
add
ret
add
cmp
add
into
lock
and
decl
jne
add
sbb
loop
scas
jae
mov
add
loope
ljmp
sti
addl
je
mov
add
add
cmpsb
add
xchg
mov
mov
mov
mov
add
or
and
call
les
add
inc
add
ja
xchg
and
add
add
lret
mov
jne
or
add
cmp
filds
mov
fidivrs
add
test
inc
add
lock
add
push
and
ljmp
shlb
add
jb
lcall
lea
add
data16
add
rcl
pop
fmull
jmp
add
cmp
jmp
sbb
jbe
add
jg
mov
add
add
adc
lcall
bound
jmp
jmp
jae
ljmp
sub
movb
add
lods
repz
in
mov
or
dec
cmp
sbb
add
pushl
add
out
cmp
push
add
xchg
cltd
xchg
add
pushl
sarb
ljmp
jmp
add
lcall
adc
mov
mov
mov
add
fdivrs
push
or
bound
lcall
xchg
mov
shrl
addb
out
push
push
add
lcall
movsl
add
add
lds
loopne
out
pop
add
lcall
jmp
add
dec
rcl
je
add
pop
sbb
jecxz
cld
add
add
dec
das
xchg
mov
push
sar
movb
mov
sbb
add
add
lret
leave
mov
mov
add
xchg
jle
add
sti
cmp
test
add
hlt
xchg
add
out
jb
lcall
add
add
aam
add
stc
xchg
jne
incb
add
add
lcall
add
enter
xchg
mov
insl
int
xchg
jecxz
cmpsl
add
ja
add
add
fcoms
mov
cmp
jmp
xchg
sti
pop
loop
pop
insl
bound
lcall
add
add
add
add
mov
add
xchg
jne
lret
out
cmpsb
add
ret
add
les
ljmp
add
and
ljmp
add
fmull
mov
rolb
add
imul
add
mov
in
insl
imul
mov
add
jmp
cltd
jg
inc
add
inc
add
ljmp
jmp
add
jae
dec
push
add
xor
dec
out
push
je
add
add
dec
rclb
sbb
incl
mov
add
add
dec
and
jp
daa
add
fldt
int
sahf
jle
add
js
xor
jmp
add
lock
pushl
pushl
add
xchg
out
addr16
mov
push
push
add
push
pop
stos
jle
cmpsl
add
mov
add
add
icebp
jl
in
addr16
add
push
add
mov
add
les
pop
mov
lock
stos
xchg
rorb
call
ficompl
out
bound
jmp
add
sbb
addb
inc
add
lret
ljmp
movsb
add
add
mov
mov
add
add
adc
add
ljmp
stos
fsts
out
clc
xchg
jbe
jo
cmp
inc
add
mov
loopne
xor
clc
in
hlt
aaa
rolb
ficoms
ljmp
stc
mov
and
lahf
mov
add
ficompl
dec
dec
push
sub
sub
sbb
add
pop
pop
jo
call
shl
mov
add
pop
add
add
repnz
add
roll
pop
pop
add
add
pop
and
decl
xchg
xchg
xchg
ljmp
lahf
add
add
add
test
dec
ffree
add
adc
mov
push
add
cwtl
jl
in
clc
loopne
ftst
add
incl
mov
sbb
dec
dec
or
pop
addl
push
popa
add
sbb
dec
jnp
add
sub
add
clc
fdivl
decl
add
adc
call
add
outsb
cld
xor
incl
and
jmp
rclb
add
inc
add
add
sbb
fisubrl
outsl
addl
dec
in
jo
decl
sbb
and
out
movl
xchg
mov
add
mov
add
dec
clc
mov
lret
pushf
cmp
add
roll
cmp
mov
mov
dec
mov
add
call
leave
push
add
sub
adc
pushl
stos
cmp
mov
add
push
pop
icebp
dec
dec
idivb
and
push
add
jl
add
add
mov
out
loop
mov
pushl
cmp
add
pushf
inc
add
aaa
or
lahf
fcmovbe
xlat
emms
mov
jbe
pop
pusha
add
lock
sbb
add
inc
add
hlt
pop
out
lcall
std
outsl
addb
jo
fsubrl
add
std
bound
js
scas
push
das
xchg
cmpsb
add
loopne
inc
add
sub
in
js
jbe
xchg
or
add
dec
add
decl
add
mov
add
ds
and
jmp
cltd
mov
add
push
movsl
add
bound
decl
addb
test
add
add
pop
and
decl
sbb
add
add
mov
add
xlat
rol
add
or
add
sub
mov
inc
add
iret
mov
loop
mov
add
add
in
js
mov
mov
xchg
out
aam
add
iret
jmp
and
ljmp
and
ljmp
mov
add
sub
add
pusha
add
ds
dec
adc
call
clc
jle
add
call
add
cmp
iret
push
outsl
push
push
jbe
pop
sub
loope
push
add
in
mov
stos
lcall
add
dec
negl
inc
add
mov
add
mov
sbb
aad
enter
call
push
in
insl
fdivrp
add
inc
add
fisubl
lcall
add
push
xchg
or
mov
in
dec
push
roll
add
add
push
sbb
mov
sbb
add
xor
lcall
addl
call
add
loop
jbe
ljmp
add
sub
add
sti
cli
mov
jns
in
jbe
mov
mov
movsb
add
add
data16
dec
movsb
add
add
fwait
push
add
pop
dec
push
mov
mov
add
decl
adc
mov
push
add
je
add
test
jl
jo
call
incb
dec
jnp
add
popa
add
data16
adc
inc
add
shll
in
daa
add
aas
lods
hlt
bound
call
in
adc
dec
sub
mov
addl
std
xchg
mov
add
mov
ret
stos
mov
jecxz
mov
call
xor
xlat
adc
call
cmp
ret
cmc
std
mov
mov
fimuls
cmc
or
cmp
add
addb
insb
out
add
call
add
dec
mov
outsb
out
xchg
movl
add
dec
mul
add
add
out
cwtl
pusha
add
and
push
ss
add
inc
add
xor
cmp
add
cmp
inc
add
push
test
push
mov
add
sbb
push
add
mov
ffree
add
movsb
add
enter
add
decl
sub
roll
push
inc
add
mov
mov
add
jmp
and
or
lock
dec
xchg
add
pushl
ljmp
cmp
jae
mov
cld
les
ret
add
push
add
add
cltd
inc
add
inc
add
cmp
sbb
data16
xchg
or
or
mov
add
xor
dec
mov
add
jnp
xchg
mov
mov
add
cmpsb
add
hlt
pop
mov
jo
call
cwtl
add
add
das
push
add
cwtl
xchg
inc
add
inc
add
int
mov
mov
add
int3
cmp
add
mov
add
or
add
call
jg
fisttpl
xchg
sub
add
ds
add
add
addb
fwait
sub
add
call
jmp
in
mov
add
idiv
imul
add
add
mov
push
in
js
add
add
add
mov
push
xchg
nop
loop
push
mov
sahf
sti
pop
xor
inc
add
jmp
inc
add
addb
add
mov
stos
pop
adc
mov
jmp
jns
stc
xor
add
ja
add
xchg
loop
cwtl
fstp
jmp
add
imul
xchg
jecxz
and
pushl
addb
pop
lret
incl
add
fs
les
cmp
or
add
inc
add
push
enter
pushl
add
sub
push
and
dec
lahf
mov
add
add
sbb
add
push
add
add
jmp
add
add
pop
or
in
ljmp
fsubs
ljmp
jmp
add
xchg
je
add
and
decl
cmp
jmp
add
ret
jle
shrl
call
jmp
add
jp
es
cmp
insb
imul
add
add
jno
call
into
ljmp
add
add
out
es
arpl
mov
fcomps
add
les
jnp
push
fnstsw
aam
dec
outsb
push
add
mov
add
add
rcll
add
mov
jg
scas
mov
add
cmc
je
cmp
add
push
add
xlat
mov
scas
sub
add
add
add
pop
add
sub
mov
addl
add
pop
mov
mov
pop
add
add
add
add
add
scas
sbb
jae
jmp
add
ss
pop
mov
negb
push
xor
jmp
add
push
add
loop,pt
mov
add
add
sub
je
add
add
mov
add
and
add
jbe
roll
add
fwait
scas
icebp
xor
pushl
add
stos
sbb
mov
sub
aaa
fwait
stos
and
incl
punpcklwd
lcall
sub
cmp
ljmp
xchg
loopne
xchg
fidivs
add
add
in
mov
pop
in
xchg
push
add
repz
movl
pop
js
bound
decl
fsubrl
add
add
xor
incl
add
out
ds
xchg
or
fstpt
inc
add
stos
xchg
stc
sbb
iret
mov
add
add
sub
or
adc
call
lods
push
mov
imul
add
loop
lock
and
add
sti
add
fldt
cli
add
inc
add
add
add
add
dec
js
fisubs
aaa
mov
sub
sbb
add
ja
mov
add
popf
mov
call
cmp
add
pushl
add
jnp
push
bound
call
fildl
add
inc
add
mov
mov
mov
inc
add
ficompl
dec
ja
add
add
add
add
add
push
insb
xchg
push
xchg
jne
add
jmp
add
mov
add
add
mov
push
add
dec
pop
xchg
or
lcall
add
push
test
addl
pop
fdivrl
add
mov
movsb
add
push
test
iret
ja
add
add
imul
es
cmp
es
add
and
lcall
mov
add
in
or
in
or
sub
call
jo
push
adc
pushl
add
mov
sbb
add
addb
add
mov
pusha
add
sub
pusha
add
add
ljmp
insb
movl
insl
test
add
mov
jmp
insb
enter
cmp
insb
xor
mov
negl
and
decl
movsl
add
jp
loopne
sub
outsl
das
inc
add
push
add
sti
push
add
xchg
and
addb
add
add
cld
xchg
dec
rolb
nop
and
push
adc
mov
push
sti
xchg
or
add
lds
xchg
jp
in
and
call
decl
mov
mov
fstl
add
mov
and
pushl
decl
jmp
add
lcall
pop
movsb
add
push
xchg
ret
add
aaa
pop
pop
add
jns
xchg
mov
jp
js
add
cltd
sbb
filds
call
test
jmp
mov
or
jnp
hlt
mov
add
xchg
js
shrl
nop
jb
jmp
add
add
test
inc
add
in
cmp
add
cli
inc
add
das
xlat
push
add
pop
mov
nop
ret
add
mov
cli
sub
in
inc
add
cmc
sbb
fsubrl
dec
jecxz
pusha
add
popf
push
jns
add
inc
add
mov
jg
add
pusha
add
movsl
add
inc
add
mov
add
addb
push
aas
pusha
add
mov
jmp
add
add
sub
add
or
jp
dec
and
incl
push
add
sbb
shll
xor
incl
or
pushl
into
push
add
fcom
add
add
ds
add
xchg
bound
jmp
add
jmp
add
lods
scas
rolb
out
cwtl
lds
cld
mov
es
jmp
repnz
fldcw
int
int
jnp
mov
pop
jne
pop
inc
add
add
call
push
add
or
add
add
sbb
mov
adc
pushl
add
movl
das
jge
add
incl
add
popf
in
insb
into
add
in
and
inc
add
inc
add
xchg
mov
add
mov
add
add
outsb
cmc
jnp
add
cmp
dec
xor
add
pop
enter
add
dec
fists
add
lahf
mov
xchg
lahf
adc
call
mov
add
xchg
sbb
add
rolb
add
mov
arpl
decl
jecxz
adc
call
cmp
outsl
fstp
aas
jp
add
les
sbb
aaa
mulb
pop
addb
pushf
fimuls
mov
insb
in
jl
add
lret
xor
out
xor
push
jg
jne
xor
cmpsl
add
xor
call
add
call
test
call
iret
xlat
push
inc
add
mov
test
jb
call
push
adc
add
aam
outsl
in
xchg
add
lcall
xor
jle
fdivrs
adc
call
js
adc
sub
dec
dec
in
rolb
add
add
idivb
fs
xor
jmp
add
sbb
jmp
rolb
add
loop
adc
addb
add
ss
ss
inc
add
add
mov
sbb
jne
inc
add
or
add
add
jl
add
add
add
lcall
push
add
addl
lea
call
add
pop
add
loopne
out
test
dec
dec
cmp
xchg
mov
sub
mov
imul
mov
pop
xchg
pop
xchg
das
push
add
lret
inc
add
push
push
add
mov
add
push
pop
outsl
xor
inc
add
cmp
inc
add
add
sbb
add
cmp
ds
mov
fidivl
movl
adc
pushl
xlat
jae
pushl
jmp
roll
sarb
loop
mov
scas
add
jnp
jge
add
sub
or
cmp
or
cmp
bound
decl
add
adc
ljmp
jne
pop
fdivrl
in
stc
or
leave
lds
inc
add
scas
jae
cmpsl
add
cmc
mov
add
pushf
scas
inc
add
inc
add
add
push
sbb
add
out
cmp
add
sbb
add
sub
add
sbb
incl
cmp
cmp
pop
mov
call
push
add
pop
lock
xchg
movb
divl
fdivs
add
inc
add
mov
inc
add
loopne
movb
sub
outsl
movsb
add
sub
ljmp
add
cwtl
or
arpl
ljmp
insb
jle
leave
mov
xchg
iret
cmpsb
add
add
btc
adc
hlt
movsl
add
add
cmp
incl
decl
pop
add
adc
call
add
add
call
mov
add
imul
inc
add
out
popa
add
pop
add
add
imul
add
jp
add
call
jl
fisubl
popf
jge
lahf
inc
add
add
cmp
add
add
or
add
pop
jno
ljmp
outsl
or
add
repz
in
dec
lods
aam
loopne
jne
dec
xlat
xor
loopne
or
jl
add
decl
mov
add
add
fstl
stos
mov
leave
mov
int
add
push
mov
add
daa
add
fcoms
lahf
mov
add
aam
mov
aad
inc
add
ds
ljmp
pop
bound
decl
int3
nop
ret
std
ror
outsb
addb
ss
add
mov
fistpl
add
fisttpll
jecxz
jo
jmp
add
pop
test
lea
add
loope
push
adc
ljmp
dec
mov
mov
add
add
lods
sub
add
and
jmp
add
adc
add
xor
push
inc
add
fldl
xchg
aaa
add
jb,pt
pushl
rcll
add
ret
pand
pushl
inc
add
push
ljmp
aam
gs
aam
add
sbb
sub
dec
inc
add
sub
add
lods
sub
add
repnz
adc
out
xor
add
add
mov
add
aad
imul
js
test
jbe
test
push
popa
add
leave
cwtl
jae
incl
dec
mov
add
xor
jmp
lcall
add
pop
add
scas
neg
aam
addb
add
jmp
dec
jecxz
ljmp
add
pop
mov
add
push
add
repnz
add
cltd
xchg
ja
xor
jmp
sub
mov
mov
notl
mov
cltd
xchg
addl
call
decl
push
pop
sbb
or
nop
pop
arpl
call
mov
imul
push
add
addb
add
add
add
add
movl
add
mov
inc
add
add
incl
ljmp
fldenv
sahf
test
scas
add
jmp
add
add
push
add
cltd
dec
pop
movsb
add
aas
leave
jo
jge
add
xchg
ret
add
ljmp
jo
inc
add
lcall
movb
mov
sbb
add
cmpsl
add
mov
add
in
inc
add
mov
adc
aas
and
lcall
add
add
dec
into
mov
mov
shrb
bound
incl
jo
call
and
push
add
and
fcmovnb
add
add
call
fsts
add
incl
out
loop
pop
adc
ljmp
xchg
in
cmp
popf
inc
add
pop
add
add
cmp
addl
add
sahf
xchg
mov
inc
add
stos
push
add
or
add
dec
decb
movsl
add
add
add
sbb
movb
scas
jmp
lea
sub
fbld
dec
pop
add
lahf
xor
jmp
add
stc
jl
add
sbb
cmc
fdivs
mov
dec
xor
call
add
out
insl
pop
inc
add
divb
decl
mov
jns
xchg
scas
fstpt
adc
decl
mov
or
addl
add
ljmp
sub
cltd
insb
pop
mov
out
pop
mov
add
mov
sub
add
xchg
jmp
add
test
mov
push
cmp
xchg
xchg
adc
fistpll
add
sbb
add
lcall
add
pusha
add
mov
and
incl
add
jl
sub
leave
sbb
add
dec
cmp
arpl
lcall
xchg
xchg
sub
add
sbb
or
add
std
das
addl
add
or
sti
shlb
leave
mov
add
add
pushf
lahf
stos
xchg
addb
add
push
add
fs
rolb
add
add
mov
or
ret
add
xlat
and
push
add
push
out
divl
ljmp
leave
call
cs
jns
insb
and
incl
inc
add
cmp
in
dec
sbb
add
loop
aaa
xchg
icebp
rolb
popf
pop
sub
repnz
xor
add
aas
add
pushl
add
sub
jmp
movb
adc
dec
or
xchg
mov
in
inc
add
add
stos
sub
decl
ja
mov
jmp
add
lret
push
mov
and
repnz
add
mov
add
mov
ds
out
dec
testl
or
xchg
psubusb
add
adc
add
dec
cwtl
adc
lock
cmc
jmp
add
add
push
popa
add
imul
add
add
int3
aas
jnp
ljmp
and
call
mov
lds
ficoms
sub
sbb
add
push
add
pop
jne
in
lods
das
pop
addb
and
mov
hlt
push
add
test
sbb
mov
push
imul
push
stos
loope
mov
add
mov
mov
addl
add
je
lods
xchg
add
test
lcall
add
pusha
add
sub
add
or
add
jp
add
sub
imul
add
pop
add
or
add
std
aad
lock
movl
dec
xchg
pop
inc
add
pop
xor
add
ss
jmp
add
cmp
addb
adc
pushl
add
aaa
adc
cmp
add
jmp
add
addb
add
enter
add
scas
or
add
add
push
add
xchg
xor
call
jg
cs
add
test
mov
add
push
and
decl
add
jnp
popf
iret
adc
lcall
add
roll
add
or
add
push
mov
sbb
add
bound
ljmp
cltd
ficoml
or
mov
add
mov
sbb
dec
sub
push
incl
add
jl
adc
call
ljmp
mov
pushl
jbe
adc
sub
outsb
or
or
jno
lcall
cmp
add
add
cli
inc
add
xchg
jg
mov
jns
add
jo
inc
add
aas
dec
leave
addl
add
hlt
sbb
mov
push
add
clc
add
ljmp
add
ljmp
add
add
add
pushl
push
dec
jbe
add
sub
add
in
ret
cld
out
test
or
dec
xchg
add
test
jecxz
je
add
int
sbb
ret
adc
add
jg
add
add
add
mov
in
outsb
iret
mov
add
mov
mov
mov
add
notb
cmpsb
add
push
add
push
jb
ljmp
add
call
add
sbb
int3
aad
mov
fbld
cmp
stos
test
add
add
fnstsw
fsubr
data16
add
mov
in
and
decl
pop
ds
cmp
decl
xlat
or
push
and
jns
sbb
add
inc
add
repz
popf
cmp
stos
sbb
add
add
and
jb
lea
add
scas
pop
add
add
gs
and
popa
add
shll
add
sbb
mov
add
stos
jns
jb
fnstenv
add
mov
add
add
fcompl
call
imul
movb
in
jg
jge
cwtl
sub
cmp
incl
push
add
sub
sbb
repz
call
shrb
lods
or
add
mov
inc
add
out
sbb
jns
cli
ret
add
lfs
mov
and
jmp
add
mov
dec
lods
mov
sbb
jmp
pushl
add
adc
jmp
pop
add
je
xor
stc
popf
mov
loop
sub
jmp
add
add
nop
addb
mov
outsl
mov
or
pop
loopne
dec
pop
aad
sbb
fstpl
ljmp
jb
lcall
xchg
pop
movb
bnd
add
pushl
fidivs
decl
mov
lods
lock
lahf
mov
jb
ljmp
ret
add
add
add
add
out
mov
dec
inc
add
loopne
jbe
add
ljmp
adc
lcall
test
push
test
pusha
add
in
mov
add
jp
xchg
ss
add
cs
jmp
dec
mov
sarb
hlt
push
add
aas
mov
loope
mov
sub
inc
add
rolb
mov
loop
insb
jle
outsb
ljmp
sub
add
xor
ljmp
ljmp
mov
icebp
test
mov
dec
js
fists
out
ret
add
sub
push
in
data16
add
mulb
add
push
add
add
call
push
xchg
leave
and
ljmp
aas
add
lcall
mov
pop
inc
add
inc
add
or
dec
adc
call
add
rol
add
lock
inc
add
add
jge
adc
incl
xor
lcall
shll
inc
add
pop
mov
ja
mov
jmp
add
add
lea
add
mov
add
sub
roll
add
movb
mov
call
out
inc
add
xchg
add
std
neg
rorl
decl
sbb
push
add
add
add
jmp
sub
popf
and
ljmp
jb
lcall
jg
mov
add
ficomps
and
jmp
inc
add
xchg
add
jmp
push
xor
or
cmp
jmp
outsb
pop
push
inc
add
addl
in
aaa
mull
jp
lahf
and
ljmp
outsb
xchg
jbe
cmc
inc
add
jle
add
hlt
imul
jge
inc
add
pop
add
mov
push
in
jb
call
out
adc
cld
mov
add
add
jmp
add
dec
std
stc
dec
mov
mov
sub
and
pushl
add
push
add
cmp
add
and
jmp
gs
mov
add
cmp
xor
cmp
sahf
sub
add
arpl
pushl
add
pop
pop
mov
cmp
xor
call
das
test
movsb
add
call
add
jno
jmp
jmp
pop
xchg
xor
push
xchg
lcall
sbb
add
cmp
sbb
push
sahf
lock
inc
add
pop
addl
test
fdivp
je
daa
add
add
sbb
add
lret
add
mov
sbb
mov
in
add
lcall
xor
ljmp
out
fnstenv
push
sub
in
sub
jmp
in
mov
adc
decl
cs
sub
outsb
idivl
pop
std
xchg
xor
decl
iret
addr16
add
aam
add
popf
push
jmp
popa
add
les
adc
jmp
mov
fwait
add
ljmp
insb
pop
rcll
push
and
rep
sub
pop
lds
mov
cltd
fsubrl
add
ljmp
xor
decl
add
int3
daa
add
or
pop
outsl
dec
sub
decl
and
jmp
add
add
inc
add
daa
add
addl
add
pushl
mov
repnz
push
add
dec
into
cmp
push
add
dec
jle
add
js
aaa
nop
sarl
add
jns
add
pushl
mov
pusha
add
jmp
inc
add
and
fnsave
add
mov
or
jge
and
decl
sub
jmp
mov
push
add
repz
addb
add
in
in
je
add
andnps
aas
lock
add
add
add
repz
inc
add
jmp
add
sahf
fsubs
rcll
add
call
add
or
mov
outsb
dec
lds
sbb
cmpsl
add
add
ljmp
hlt
sbb
pop
inc
add
inc
add
mov
dec
mov
add
pop
sub
jmp
add
mov
add
pop
add
push
xchg
fbstp
pop
xchg
inc
add
pop
xchg
jmp
sub
push
add
