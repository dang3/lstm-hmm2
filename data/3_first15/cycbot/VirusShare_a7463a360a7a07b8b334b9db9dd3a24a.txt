or
or
or
or
filds
add
add
call
sub
sub
jb
sbb
sbb
add
add
nop
nop
add
mov
mov
add
push
inc
inc
inc
inc
mov
inc
push
push
push
push
push
push
enter
dec
dec
dec
mov
mov
mov
mov
mov
mov
and
and
loop
jp
add
add
add
jmp
jmp
mov
mov
mov
mov
mov
or
inc
rol
jmp
inc
inc
inc
inc
inc
inc
inc
inc
xor
xor
add
mov
add
add
sub
add
inc
adc
adc
add
add
popf
popf
popf
popf
popf
popf
ljmp
lea
lea
add
add
add
and
and
and
and
and
and
and
and
and
and
add
add
add
push
hlt
add
add
test
test
test
add
push
push
push
push
push
push
push
push
push
addl
addl
sbb
es
ja
ja
ja
ja
pop
pop
pop
pop
pop
pop
pop
data16
stos
stos
stos
stos
add
push
push
push
push
push
push
push
add
addb
add
add
sbb
add
add
xor
pop
xchg
xchg
xchg
jns
and
and
stos
cwtl
cwtl
xchg
enter
add
add
inc
inc
pop
pop
xchg
cmp
cmp
cmp
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
xchg
xchg
xchg
js
js
js
add
add
dec
data16
add
add
jmp
add
add
add
add
scas
scas
scas
scas
in
in
in
in
in
sub
sub
add
xlat
cmp
cmp
gs
jne
rol
rol
rol
add
add
add
rcl
rcl
icebp
icebp
loop
loop
add
add
dec
ds
add
arpl
arpl
add
add
add
lea
jno
jno
jno
jno
jno
add
add
add
mov
mov
mov
mov
rcl
rcl
add
add
add
or
lods
lods
lods
lret
add
gs
add
add
add
ds
cmp
cmp
cmp
add
push
pop
rcl
rcl
rcl
rcl
add
add
add
push
in
mov
mov
add
add
add
add
lahf
lahf
add
loopne
jbe
outsl
outsl
outsl
fcomp
fcomp
fadds
add
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
add
cli
cli
cli
movsb
add
add
add
pop
pop
pop
pop
pop
add
add
decb
mov
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fldt
mov
mov
mov
mov
add
sbb
sbb
sub
sub
add
add
in
in
and
add
add
add
push
push
je
add
add
xchg
xchg
xchg
xchg
fdivl
mov
mov
lea
lret
pop
mov
mov
add
add
add
arpl
test
test
ds
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
add
add
add
add
add
addl
addl
add
or
or
or
or
or
or
or
or
push
shlb
add
add
add
mov
icebp
icebp
icebp
icebp
icebp
out
out
jg
jg
jg
add
add
add
cld
cld
cld
cld
cld
not
rclb
adc
adc
adc
adc
adc
add
add
add
add
jb
push
push
add
add
add
push
push
push
push
add
add
add
add
in
sub
sub
daa
jo
jo
jo
jo
jo
jo
jo
jo
jo
or
or
or
or
add
add
add
add
add
add
mov
add
add
add
call
call
xchg
xchg
xchg
xchg
in
add
imul
add
add
add
out
out
out
test
fstp
sub
jecxz
jecxz
jecxz
jecxz
jecxz
pop
pop
pop
add
add
add
inc
cmc
cmc
cmc
cmc
cmc
cmc
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
insb
insb
insb
insb
add
add
pop
pop
pop
pop
add
xor
add
add
cld
cld
cld
cld
cld
cld
cld
push
push
add
sub
out
adc
add
icebp
icebp
icebp
icebp
or
or
or
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
and
and
add
test
div
cli
add
add
and
and
and
and
and
and
and
fldl
add
outsl
outsl
outsl
add
add
add
mov
mov
add
iret
iret
iret
iret
iret
iret
iret
add
add
fs
sub
sub
sub
sub
pusha
pusha
pusha
pusha
or
or
add
mov
and
and
add
and
gs
push
push
push
push
add
add
push
push
push
push
push
push
mov
push
push
push
push
push
push
push
push
push
push
xor
add
dec
add
add
add
mov
inc
inc
inc
inc
inc
gs
add
jecxz
jecxz
and
and
add
add
je
mov
loop
loop
loop
loop
loop
loop
push
push
inc
inc
inc
inc
inc
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
jp
add
inc
inc
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
in
in
in
add
add
add
add
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
add
add
add
add
repz
inc
inc
add
add
lea
lea
lea
add
out
ret
push
push
push
push
push
push
dec
pop
mov
add
add
ret
ret
ret
add
add
sub
add
insl
insl
insl
insl
insl
insl
insl
aam
rcl
rcl
rcl
rcl
rcl
rcl
shl
hlt
hlt
add
adc
add
add
sub
sub
sub
sub
data16
fs
add
mov
inc
add
add
add
mov
mov
mov
in
in
mov
push
push
push
inc
div
div
div
add
add
add
add
add
add
add
add
add
pushf
pushf
pushf
pushf
pushf
pushf
xor
xor
xor
xor
xor
rcl
rcl
rcl
rcl
roll
add
add
div
insl
insl
insl
insl
insl
insl
insl
jns
jns
jns
popa
popa
xor
xor
add
or
or
inc
inc
add
add
add
rcl
add
inc
inc
inc
inc
inc
add
insb
insb
insb
insb
insb
jns
add
add
mov
mov
sbb
mov
cmp
add
add
stc
stc
stc
stc
add
cmpsl
cmpsl
cmpsl
add
mov
add
add
inc
add
add
xor
xor
xor
xor
add
add
mov
xor
mov
es
icebp
icebp
icebp
icebp
icebp
icebp
fstp
out
add
add
add
add
dec
add
add
add
add
dec
dec
dec
dec
push
push
push
push
push
push
push
push
push
push
out
out
out
out
out
out
add
jle
jle
mov
add
add
in
in
in
in
in
in
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
fcmovnu
mov
add
add
adc
add
add
dec
dec
dec
js
or
or
or
or
pop
add
cs
pop
pop
pop
pop
pop
pop
add
pop
pop
lock
add
add
add
add
cmc
cmc
cmc
add
add
ret
ret
jge
xchg
adc
adc
adc
adc
adc
adc
add
add
pop
add
add
cmp
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
sahf
sahf
add
div
div
div
add
fs
mov
lret
lret
rcl
add
add
and
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
add
add
add
hlt
hlt
hlt
hlt
dec
dec
dec
add
add
jnp
jnp
jnp
cmpsb
cmpsb
cmpsb
js
js
js
js
js
js
imul
jnp
in
cmp
cmp
add
add
add
add
add
cs
add
sbb
sbb
sbb
sbb
sbb
add
add
xor
xor
xor
xor
xor
in
in
in
in
in
loope
push
push
push
push
push
push
push
push
push
push
adc
and
and
add
add
sub
sub
add
popa
popa
popa
popa
add
sahf
rol
rol
movsb
movsb
movsb
movsb
movsb
add
pusha
pusha
mov
mov
mov
add
add
push
mov
add
add
add
jge
add
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
xor
add
add
add
lds
or
or
or
xchg
ss
or
or
lock
out
out
cmpsb
add
add
add
int
int
int
int
int
les
add
inc
add
add
cmp
xchg
xchg
xchg
popa
popa
mov
dec
imul
and
and
insb
out
out
out
out
pop
pop
out
out
inc
inc
inc
dec
dec
dec
in
lret
lret
mov
add
add
hlt
hlt
mov
or
xor
xor
xor
add
xchg
xchg
xchg
addl
addl
addl
add
add
add
push
push
push
push
push
push
add
mov
gs
add
dec
gs
pop
pop
pop
pop
pop
pop
pop
movsl
inc
jp
jp
jp
jp
add
add
add
add
out
out
out
out
out
loop
add
add
aam
aam
aam
add
dec
dec
dec
dec
add
lods
dec
dec
dec
dec
pop
mov
pop
pop
out
add
add
add
add
pop
pop
filds
add
roll
add
inc
inc
mov
mov
add
add
xor
mov
pop
pop
mov
mov
mov
mov
movsb
movsb
movsb
movsb
movsb
pop
add
pop
pop
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
push
push
push
push
push
push
push
push
push
push
add
add
in
in
in
in
in
in
add
add
mov
mov
les
pop
push
push
push
push
push
push
push
or
or
add
add
add
rcl
rcl
add
mov
sbb
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
add
add
es
dec
dec
int
add
or
or
or
add
add
gs
add
inc
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
pop
pop
pop
pop
pop
add
add
add
add
cwtl
cwtl
add
add
add
add
int
int
int
popf
popf
add
add
ljmp
xor
add
add
add
jne
jp
add
add
jbe
add
cmp
cmp
add
shr
call
call
call
add
add
or
add
ss
xor
xor
xor
in
xchg
mov
mov
cmp
cmp
cmp
cmp
fdiv
test
scas
scas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
and
and
and
and
mov
jns
jns
add
xor
xor
add
add
dec
dec
dec
dec
dec
dec
addr16
out
out
out
out
out
out
out
out
out
out
add
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
lock
add
add
add
adc
adc
adc
adc
adc
adc
adc
add
dec
addl
add
add
repz
jg
addr16
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
mov
add
or
or
or
or
or
add
add
arpl
aas
aas
aas
aas
aas
aas
aas
aas
dec
dec
dec
adc
adc
adc
adc
test
test
pop
pop
pop
pop
add
add
sub
sub
sti
add
sbb
out
out
out
out
out
out
out
out
add
add
add
pop
pop
add
movsl
movsl
movsl
movsl
mov
mov
stc
stc
ss
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xchg
ljmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
sti
sti
sti
sti
sti
sti
sti
sti
int
add
add
add
add
out
out
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
aam
dec
dec
dec
dec
dec
and
out
out
out
out
out
out
add
add
add
add
in
in
in
in
fcmovu
fcmovu
fcmovu
fcmovu
add
movsl
movsl
movsl
movsl
movsl
pushf
pushf
pushf
rcl
rcl
rcl
rcl
roll
inc
inc
add
add
mov
mov
add
add
add
add
jne
jne
jne
jne
jne
or
cmc
cmc
gs
gs
add
lret
in
in
in
loopne
loopne
loopne
add
add
sub
sub
mov
add
add
add
add
jp
cld
cld
cld
mov
sbb
sbb
sbb
sbb
sbb
sbb
sbb
push
push
pop
lods
add
add
xchg
xchg
xchg
xchg
mov
nop
nop
nop
call
add
add
add
out
out
out
out
out
add
add
push
push
push
and
in
add
jge
insb
insb
insb
insb
insb
insb
insb
insb
insb
jge
jge
jge
jge
jge
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
sub
sub
sub
sub
cmp
cmp
add
add
push
push
push
jp
jp
jp
add
add
add
sub
add
add
in
in
in
in
aad
sub
sub
sub
sub
add
add
add
add
add
rol
rol
rol
rol
ljmp
add
add
mov
add
add
pop
pop
pop
pop
pop
pop
pop
sbb
sbb
sbb
add
add
add
add
add
or
or
or
or
or
add
xchg
xchg
xchg
add
in
in
add
in
in
in
add
xlat
hlt
hlt
add
push
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
dec
push
cmp
stc
stc
stc
stc
stc
push
rcl
roll
add
add
dec
dec
dec
dec
dec
dec
dec
dec
xor
xor
scas
les
add
add
pop
add
add
add
sti
sti
pop
pop
pop
pop
jl
jl
jl
cltd
cltd
cltd
cltd
cltd
cltd
cltd
sub
add
add
in
in
in
in
in
in
adc
sbbb
bound
bound
bound
cmp
cmp
cmp
and
and
sbb
repnz
add
add
push
push
push
push
push
push
push
in
in
add
add
xchg
xchg
mov
add
add
add
inc
inc
add
add
add
mov
add
add
add
loope
loope
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
jle
jle
mov
mov
mov
mov
mov
cltd
xlat
xlat
xlat
inc
inc
inc
cmp
nop
nop
nop
add
adc
ds
jae
jae
jae
jae
jae
jae
jae
jae
add
add
add
stc
stc
mov
mov
insl
insl
insl
mov
jne
jne
jne
jne
and
lea
add
add
add
jp
jp
add
jmp
add
add
add
push
add
loopne
loopne
lcall
lcall
add
in
in
in
in
in
in
in
in
in
in
in
add
xor
xor
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
adc
adc
adc
adc
adc
inc
inc
inc
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
push
add
add
push
push
sub
sub
add
ret
ret
ret
ret
jnp
add
addb
add
add
aam
jl
jl
jl
jl
jl
jl
push
push
push
add
inc
add
add
js
js
js
js
js
js
inc
inc
add
add
push
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
or
or
or
or
push
push
push
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
pop
pop
add
mov
add
add
fsubr
lret
lret
lret
rcl
add
add
add
fcmovnu
fcmovnu
fcmovnu
testl
or
or
or
sub
push
sub
sub
je
je
je
je
div
div
div
div
div
div
div
div
neg
add
add
xchg
xchg
sbb
sbb
add
jp
jp
jp
xchg
mov
mov
mov
inc
inc
add
add
inc
inc
jnp
add
add
sub
dec
dec
dec
dec
dec
dec
loope
loope
loope
adc
adc
adc
out
add
add
add
ss
add
add
add
add
add
add
mov
adc
adc
adc
adc
adc
das
das
das
or
add
push
addl
add
jne
jne
jne
jne
jne
jne
jne
jne
add
add
add
add
mov
lcall
lret
add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
rol
xor
xor
xor
xor
or
add
test
cmp
cmp
cmp
add
add
add
add
mov
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
add
adc
adc
add
rcl
rorb
movq
jg
jne
repz
lods
lcall
rol
mov
mov
mov
add
sahf
sahf
sahf
sahf
and
and
and
and
add
add
inc
inc
pop
pop
pop
add
add
add
add
jb
jb
jb
jb
out
out
out
out
out
movsb
les
add
add
add
adc
adc
adc
test
add
cmp
cmp
cmp
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
push
push
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
add
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
fcomp
fcomp
pop
pop
pop
pop
pop
pop
pop
out
out
out
out
out
bound
lock
rol
ror
int3
pop
pop
pop
xlat
xlat
xlat
xlat
xlat
or
or
or
or
or
add
add
jb
adc
mov
add
add
add
in
in
in
in
in
in
in
in
in
in
in
aaa
aaa
aaa
pop
pop
adc
cmc
cmc
cmc
add
mov
add
add
add
popa
popa
and
and
pop
pop
pop
pop
fwait
fwait
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
aad
jge
call
add
bound
xchg
xchg
xchg
add
dec
dec
dec
dec
dec
dec
dec
popa
popa
popa
popa
add
incb
dec
dec
dec
dec
dec
dec
dec
jl
ret
ret
ret
add
add
push
push
push
push
push
cld
cld
cld
cld
add
add
xor
xor
xor
or
or
and
and
and
and
jo
jo
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmp
cmp
cmp
cmp
je
je
add
pop
pop
add
inc
inc
inc
inc
inc
inc
inc
inc
bound
insb
insb
insb
insb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
test
add
or
or
or
add
add
iret
iret
iret
iret
iret
iret
iret
iret
add
add
mov
mov
in
in
add
xor
add
add
add
mov
mov
test
sub
cmp
pop
pop
pop
pop
cmp
and
and
lahf
add
add
add
add
push
push
push
add
pop
pop
add
add
dec
add
add
add
fstp
sub
sub
sub
push
push
push
push
push
add
lret
lret
lret
lret
lret
lret
lret
lret
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
mov
add
add
add
add
add
fiaddl
add
add
add
cmp
cmp
insb
add
iret
iret
iret
iret
add
inc
inc
inc
inc
inc
adc
adc
adc
add
fstp
fldl
add
mov
add
add
jns
jns
jns
jns
jns
add
jg
jg
add
add
pop
mov
adc
add
add
add
lea
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
add
adc
add
push
push
push
shl
lock
pop
pop
pop
pop
pushf
add
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
incl
add
mov
xchg
leave
leave
leave
leave
leave
leave
leave
sahf
push
stos
stos
add
ret
ret
ret
add
iret
add
add
add
add
add
xor
xor
sbb
sbb
sbb
sbb
sbb
sbb
add
int3
int3
add
add
sbb
sbb
sbb
fsin
cli
cli
cli
in
in
in
in
in
in
add
add
or
add
add
add
add
add
add
add
add
add
add
add
imul
or
in
in
in
in
mov
mov
insl
add
sub
sub
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
incb
pop
lret
add
add
add
or
lcall
add
test
test
test
mov
add
add
add
add
ret
ret
ret
ret
ret
add
leave
add
add
push
ljmp
inc
imul
add
add
add
jecxz
jecxz
jecxz
dec
dec
add
add
ret
ret
ret
ret
scas
scas
scas
add
add
add
jne
jne
add
aaa
aaa
aaa
aaa
dec
dec
dec
dec
sbb
inc
inc
inc
inc
inc
inc
inc
inc
mov
mov
mov
insb
insb
lock
add
repnz
add
add
add
add
add
arpl
add
or
add
add
push
push
push
push
add
add
add
add
add
sbb
and
cli
cli
cli
cli
cli
cli
cli
mov
add
jns
add
add
or
and
and
push
icebp
icebp
icebp
add
loop
loop
loop
loop
addb
rcl
rcl
add
add
add
aad
sub
add
test
fwait
fwait
fwait
add
dec
dec
dec
dec
dec
dec
scas
scas
scas
add
add
sbb
sbb
add
add
mov
jmp
adc
aas
aas
aas
popf
stc
add
lcall
pop
pop
mov
mov
mov
mov
add
mov
add
in
in
jns
jns
jns
add
ds
add
mov
mov
mov
mov
mov
jg
data16
add
add
add
jne
jne
jne
add
add
roll
add
jae
add
add
addb
sti
sti
mov
mov
add
add
push
push
push
add
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
cmp
cmp
cmp
cmp
cmp
cmp
adc
adc
adc
adc
add
add
add
lea
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
arpl
arpl
add
flds
add
cmp
add
add
add
jecxz
jecxz
jecxz
ja
ja
ja
ja
add
add
add
add
add
mov
mov
nop
nop
dec
outsb
add
mov
mov
add
lahf
lahf
lahf
add
add
add
add
pop
pop
pop
xchg
jae
jae
push
mov
mov
mov
mov
add
add
add
jnp
jnp
xchg
daa
daa
inc
inc
inc
cmp
insb
add
add
jne
jne
jne
jne
jne
jne
add
add
add
add
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
push
loopne
arpl
add
rcl
rcl
rcl
sarl
add
add
addb
addb
add
push
push
jbe
jbe
jbe
mov
add
sahf
sahf
sahf
sahf
sahf
sahf
add
int
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
loop
div
cmp
cmp
add
add
add
add
scas
add
add
fsubrp
add
add
in
add
xchg
xchg
xchg
xchg
jno
jno
jno
jno
jno
dec
dec
dec
dec
dec
add
add
add
add
add
loope
loope
loope
loope
loope
loope
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
adc
add
add
xchg
xchg
xchg
xchg
movsb
das
mov
inc
mov
mov
mov
mov
push
mov
mov
data16
insl
insl
insl
adc
add
push
push
push
movsb
pop
pop
pop
add
add
add
sub
add
add
add
mov
repnz
add
add
add
add
mov
mov
add
add
add
add
add
add
add
add
add
add
add
in
out
add
mov
pop
pop
pop
add
add
add
add
repz
and
add
add
jge
dec
add
add
add
fistpll
cmp
cmp
rol
and
and
and
and
and
add
add
popa
pop
pop
cwtl
cwtl
cwtl
cwtl
cwtl
mov
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
into
and
and
add
cld
cld
cld
cld
cld
cld
cld
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
mov
mov
mov
mov
mov
mov
mov
mov
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
cmp
cmp
push
push
push
push
push
push
rol
std
std
std
std
std
std
std
std
cmpsl
es
loope
out
add
xlat
sub
xchg
xchg
leave
and
inc
add
sti
mov
add
filds
sub
push
push
add
jmp
jmp
repz
movsb
cmp
cmp
int
int
int
icebp
jnp
jnp
jnp
jnp
jnp
push
push
push
push
add
add
mov
scas
add
add
stos
stos
stos
stos
stos
stos
pop
add
addr16
add
add
add
add
add
or
jns
add
add
add
add
and
and
add
push
push
push
dec
dec
dec
mov
add
or
or
or
or
bound
bound
and
int3
mov
mov
cs
add
sbb
sbb
add
sbb
sbb
add
add
insl
insl
insl
insl
je
enter
sub
sub
sub
mov
mov
add
add
add
ret
add
call
add
es
sub
sub
sub
add
add
sub
ret
push
popl
add
jno
jno
jno
jno
jno
jno
add
outsb
outsb
outsb
mov
mov
mov
ret
add
add
add
add
incb
add
pop
pop
pop
pop
add
add
add
sbb
sbb
add
aam
push
push
push
push
push
push
push
push
push
push
add
add
imul
pusha
pusha
pusha
add
add
adc
adc
adc
adc
add
jo
imul
test
rcll
push
stos
mov
repz
jo
iret
fldt
stos
mov
add
inc
sub
xor
pusha
jle
test
outsl
cmc
clc
mov
loopne
sbb
add
mov
sub
repz
push
cmp
in
push
or
inc
jp
pop
jo
add
pusha
mov
loopne
mov
stos
pop
cmp
mov
lgs
mov
and
mov
shrl
lcall
xchg
lahf
adc
nop
repz
add
dec
pop
ret
popf
aad
mov
pop
adc
push
int
push
scas
adc
pop
dec
adc
sahf
mov
cmpb
mov
and
cltd
ja
divb
ror
or
clc
jp
sbb
andb
das
stos
pusha
add
xor
fidivs
inc
adc
dec
sbb
mov
mov
in
sub
rcl
or
loopne
add
enter
fs
daa
jns
outsb
out
adcl
push
and
add
inc
mov
popa
inc
cs
and
mov
hlt
xlat
ret
or
shl
aad
ss
out
pop
repz
sbb
outsl
xchg
xchg
cmp
cli
aas
push
loopne
dec
and
add
addb
cmp
loope
adc
mov
pusha
je
mov
xchg
jae
inc
sti
sub
push
xchg
cmp
mov
cmp
mov
mov
inc
out
rolb
lcall
lcall
shl
test
ss
cli
test
sub
orb
je
pop
dec
mov
and
out
dec
jbe
test
pop
xlat
lahf
out
out
jl
addb
jno
adc
and
add
or
xchg
mov
rcrb
shl
int3
cmp
pop
xlat
js
add
popf
push
or
repnz
push
or
dec
mov
popa
mov
out
and
and
push
sbb
jmp
mov
aad
cmpsb
loopne
mov
mov
shl
mov
cld
leave
xor
cltd
xchg
mov
imul
mov
pop
aaa
repnz
fwait
js
sbb
mov
pop
mov
js
xchg
sahf
and
cmp
add
fsubp
ret
sbb
dec
sbb
pusha
xorb
clc
cmp
notl
mov
out
sub
shrb
inc
adc
adc
leave
xor
add
and
aaa
fxsave
and
cmp
pop
add
inc
enter
push
fcmovnbe
cmp
loopne
push
mov
inc
loopne
imul
andb
xchg
in
push
mov
lods
loopne
scas
add
mov
mov
adc
inc
aad
jge
rol
sbb
xchg
mov
sarb
jnp
adc
jb
out
clc
push
inc
int3
inc
dec
xor
mov
mov
rcrb
jno
leave
mov
sahf
out
sarb
push
lods
add
fisubrs
pusha
xor
adc
jno
sub
or
inc
clc
pushf
jge
addb
pop
jmp
sahf
xchg
pop
push
stos
pusha
rorb
rcl
mov
pusha
inc
addb
fnstenv
inc
jge
or
pop
ja
pop
inc
sbb
inc
mov
pop
push
nop
std
inc
andb
ljmp
xor
rclb
fcomps
aaa
out
jbe
jnp
push
jns
clc
lock
inc
pusha
push
imul
inc
cli
mov
rorb
addb
push
xchg
mov
stos
add
pop
daa
pop
out
fsub
and
loopne
mov
push
les
je
int
outsb
or
mov
fucomp
test
loopne
xlat
stos
loopne
xchg
shrb
cwtl
mov
inc
and
pop
in
dec
sub
fldcw
mov
sub
pusha
xchg
nop
xchg
imul
xchg
push
in
xchg
push
loop
pop
xor
lret
and
inc
xchg
sbb
mov
rol
and
jno
pop
sbb
pop
jae
or
subb
je
adc
filds
add
pusha
inc
enter
and
mov
cmp
gs
cmpsb
and
pop
pushl
cmc
std
inc
fdivs
sbb
ja
jge
pop
fldt
addb
and
add
addl
into
adc
bound
mov
pop
pop
push
push
cmp
enter
and
scas
dec
mov
jmp
dec
and
shrb
sar
dec
adc
push
xor
push
shl
pop
faddl
add
addl
lahf
rcrl
stc
xor
aas
jecxz
into
mov
push
push
cmpsb
add
mov
rorb
mov
xchg
or
inc
aam
clc
int3
mov
pusha
add
lea
rolb
adc
and
movsb
rol
frstor
rol
arpl
jecxz
fcompl
xchg
aad
mov
pop
jmp
mov
add
xchg
and
and
call
outsl
leave
mov
test
dec
add
add
sbbb
adc
xchg
call
mov
pushf
cmp
pop
fisubrl
lahf
xchg
push
jmp
mov
lds
arpl
xlat
test
loopne
ret
sbb
pusha
add
mov
dec
lret
iret
pop
ljmp
adc
dec
adc
push
insb
dec
add
shrb
pop
testb
inc
pusha
cmp
clc
mov
shlb
inc
pusha
int
inc
inc
mov
mov
loopne
pop
ss
sahf
mov
aad
inc
sub
pusha
or
in
cmp
mov
and
ja
pusha
add
adc
out
daa
call
push
sbb
icebp
mov
fidivrl
push
ljmp
mov
loopne
gs
pusha
sbb
lret
jns
pusha
add
xchg
shll
or
add
lock
inc
inc
mov
rolb
sbb
jo
mov
pop
leave
push
frstpm(287
cmp
add
loopne
xchg
loopne,pn
inc
adc
add
pop
mov
jecxz
mov
add
mov
jo
jns
fldcw
bound
and
daa
sarl
ret
jno
dec
or
sbbb
mov
pop
fcmovnb
pop
push
int3
dec
mov
mov
fidivrl
push
loopne
mov
pop
inc
out
pushf
push
push
fisubl
and
inc
add
xor
or
mov
fwait
add
or
movsb
inc
pusha
lods
inc
inc
and
mov
sbb
push
jle
lea
mov
shrl
int3
adc
insl
ret
pop
les
jle
or
mov
push
aam
out
out
or
push
inc
cmp
rol
out
loope
stc
cwtl
inc
dec
icebp
sub
lods
push
sub
cmpb
and
sbb
repz
pusha
add
add
pop
jle
nop
ljmp
pop
xchg
fsts
sub
mov
and
add
mov
jbe
inc
or
rol
add
shrb
loopne
out
movsl
jecxz
mov
mov
inc
ficoms
sub
shlb
loopne
xor
ret
repnz
cmpb
xor
jb
rorb
cmpsb
pusha
and
xchg
clc
mov
je
stos
lods
insb
nop
push
gs
ret
fadd
hlt
push
jg
jnp
cmpsb
rol
imul
push
inc
pusha
data16
ljmp
pushf
add
shl
mov
ja
mov
arpl
hlt
cld
hlt
aam
aas
fwait
push
repnz
loope
popf
jecxz
addb
rolb
addb
fcoml
sub
and
sbb
mov
mov
pop
das
aas
mov
and
and
sbb
or
loopne
in
cmp
jmp
fdivrs
rcll
pusha
xchg
xchg
addb
pop
add
arpl
xchg
cld
xchg
mov
mov
aas
mov
mov
mov
cmpsb
mov
mov
icebp
push
inc
loopne
out
decb
rolb
repz
std
jbe
je
or
inc
loopne
pusha
loopne
add
add
inc
adc
lock
xchg
jno
in
mov
shlb
and
add
sbb
jl
js
and
add
andb
xlat
mov
sbb
pop
mov
push
xor
dec
add
pusha
jno
iret
insl
mov
cli
inc
dec
sbb
sti
loop
mov
or
loopne
shlb
je
pop
loopne
mov
sub
push
inc
push
int3
hlt
clc
or
addb
or
insl
or
loopne
lahf
inc
xchg
pusha
scas
add
jns
cmp
mov
and
and
pop
fmul
jmp
std
jg
bound
rorb
pusha
cmpb
add
pusha
pop
xor
cmp
mov
ficomps
or
pop
inc
xor
xchg
xlat
mov
insl
sarb
push
push
jle
inc
inc
incl
addb
add
push
aaa
xchg
roll
dec
jae
addb
addr16
decb
adc
fwait
mov
and
idivb
or
sbb
pusha
add
pop
xchg
cmp
inc
rcrb
lods
shlb
or
pusha
movnti
and
and
shl
or
cmp
add
sub
js
js
shlb
add
out
lds
xchg
rorl
xchg
add
sarl
shll
inc
xor
add
pusha
cltd
nop
test
mov
inc
xchg
sub
and
out
push
inc
pusha
ljmp
or
mov
cltd
push
pop
add
and
mov
in
mov
push
jle
dec
movsl
sbb
inc
mov
int3
push
push
pop
scas
loopne
test
lods
add
or
cmc
fstpt
lea
add
sbb
mov
scas
pusha
inc
call
ljmp
inc
mov
dec
nop
inc
scas
loope
int
loopne
in
loopne
inc
hlt
or
test
addb
mov
andl
mov
nop
stos
and
testl
xor
movsl
hlt
cmc
jo
adc
xor
and
popa
add
and
addb
stos
add
ds
adc
xor
ja
addr16
ss
dec
movsb
mov
movsl
divb
out
push
and
repnz
and
and
and
inc
lret
xchg
stc
pop
dec
call
jns
inc
and
add
sub
mov
gs
call
dec
mov
pusha
inc
in
fildll
lret
adc
lods
and
cld
mov
mov
xor
mov
inc
test
jge
add
mov
std
insb
jns
lret
cmp
inc
cmp
mov
pusha
inc
repz
sti
jne
lds
add
and
into
addr16
pop
pop
lret
cmp
fcom
mov
test
mov
cmpsl
mov
add
inc
inc
sbb
inc
cmp
mov
hlt
data16
and
inc
mov
aaa
and
cmpsb
andb
loopne
mov
test
or
js
add
mov
push
mov
mov
daa
dec
push
scas
mov
pop
xchg
rcr
adc
and
das
mov
insl
fldl
enter
rcl
jb
xor
addb
pusha
out
jbe
in
mov
mov
hlt
jl
andb
dec
movsl
push
push
sub
inc
xor
or
arpl
aaa
loop
and
xor
cmp
incb
arpl
icebp
fidivrl
outsl
addb
inc
in
sti
cmp
push
mov
pop
push
cmc
lcall
mov
pop
jg
mov
sbb
mov
in
rorb
nop
popa
and
lods
ss
xchg
stc
fisubs
mov
xor
push
aad
sbbl
incl
xchg
cld
sbb
sbb
rorb
add
xchg
popf
or
loopne
cmp
push
and
rolb
inc
je
jno
mov
add
inc
out
cmpsb
add
in
adc
jae
add
pop
test
andb
jg
addb
sbb
xor
addr16
repz
shrb
jne
test
negb
lock
jmp
cmp
fs
cmp
pop
das
sti
mov
andb
xchg
dec
add
or
and
jns
mov
hlt
pushf
jns
lods
mov
int
adc
sub
lock
mov
push
push
pop
sbb
scas
pusha
mov
or
inc
loopne
inc
enter
mov
loopne
test
pusha
or
cmp
pop
and
jno
ss
notb
lret
rol
jl
clc
dec
cmp
mov
shlb
fcmovnb
loopne
sbb
movsl
test
jl
lods
roll
mov
pusha
js
xchg
pop
xchg
mov
xchg
insb
xor
shll
shlb
adc
leave
pop
lods
leave
add
adc
hlt
addb
jno
pushf
inc
enter
add
jb
shlb
mov
and
xchg
aas
inc
xchg
into
jecxz
mov
add
pop
mov
push
test
loopne
mov
cmp
xchg
mov
testb
adc
pop
mov
inc
loopne
out
adc
add
rolb
fsubrl
lods
loopne
orl
and
mov
ret
xchg
js
rolb
fadds
shrl
add
dec
mov
addb
shl
mov
xchg
push
cwtl
data16
outsb
in
mov
inc
sarb
and
rorb
xchg
movsb
inc
addb
ficomps
mov
fisubrs
lahf
sbb
xor
arpl
inc
fsub
rcrl
dec
ds
pop
outsb
pushf
cmpsl
jg
xchg
inc
cmpsb
inc
and
xor
test
adc
lds
ja
sub
and
lret
lret
pop
test
mov
lea
sbb
mov
mov
or
hlt
mov
add
dec
rcl
dec
jle
scas
loopne
mov
mov
cwtl
nop
inc
aad
divb
adc
aaa
hlt
clc
pop
scas
pop
and
push
ret
and
sarb
mov
int
cwtl
mov
mov
andb
ljmp
and
inc
fnstenv
pop
enter
rclb
pusha
orb
inc
mov
sub
es
add
xor
mov
rorb
nop
data16
xchg
and
pop
aad
adc
push
adc
mov
in
pop
repnz
xor
test
rclb
dec
add
mov
sarb
mov
lds
loope
das
lret
mov
rclb
mov
inc
pusha
pop
arpl
cmp
pop
ss
push
mov
add
cmp
or
out
lret
aad
inc
add
call
or
inc
cmpsb
mov
pop
or
and
inc
dec
jae
push
or
rorb
aas
xor
ds
sbb
add
mov
push
sbb
test
inc
into
cmp
xchg
pop
adc
xchg
fcompl
pop
inc
repz
subb
jp
mov
js
push
and
jl
int
pusha
pusha
jae
addb
flds
addb
and
sub
pusha
clc
ds
jp
push
sub
push
inc
fs
xchg
mov
add
mov
inc
cmp
pusha
mov
andb
mov
pusha
rcl
enter
and
pop
mov
movq
sbb
or
mov
outsb
ret
xchg
add
push
shlb
outsb
movl
daa
push
shll
rolb
cli
clc
sahf
mov
int3
sub
add
or
xor
or
add
mov
adc
xchg
aam
add
gs
pop
shlb
mov
lods
inc
xchg
arpl
test
or
and
cli
int3
loope
fwait
push
decb
in
test
and
cmpb
rolb
adc
cs
push
fnstenv
test
and
loopne
repnz
fistpl
in
fsubs
das
movsb
rolb
jnp
mov
push
rcl
ljmp
xchg
pushf
mov
movb
pusha
inc
inc
sarl
fstl
mov
jge
sub
add
cmovp
in
nop
xchg
mov
sub
or
add
push
push
inc
and
loope
sub
mov
push
mov
repz
add
loopne
addb
push
lods
dec
mov
pop
pop
push
leave
jmp
clc
mov
pusha
rolb
dec
ret
xchg
movsw
sub
je
mov
mov
inc
mov
in
insb
nop
clc
clc
push
cld
mov
add
lea
push
push
push
call
sub
add
imul
lea
mov
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
push
push
lret
lea
andl
push
push
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
imul
and
jne
call
rorb
notrack
cmp
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
shr
add
sub
and
jmp
push
mov
jmp
into
aad
inc
shrl
mov
loopne
test
xchg
fdiv
adc
int3
push
jg
pop
push
les
in
mov
push
in
fsubrl
idivl
push
xchg
enter
or
pop
imul
inc
roll
mov
jecxz
incl
mov
and
pusha
loop
test
adc
xchg
pop
sbb
dec
and
and
pusha
add
int3
aad
negl
pusha
pop
aam
cld
gs
movsb
add
je
shlb
adc
stc
mov
pop
inc
addr16
pusha
add
aaa
popw
test
add
cld
cmp
pop
nop
mov
or
xchg
push
inc
shr
sti
and
jmp
rcrl
xchg
sahf
mov
loop
fstl
push
jbe
scas
loopne
rcr
daa
mov
xor
cltd
sarl
and
imull
mov
into
inc
dec
dec
push
add
cmp
sub
adc
bound
add
pusha
aaa
mov
inc
daa
in
std
or
adc
pusha
lock
in
pop
lock
mov
lret
aas
mov
mov
orb
mov
stc
push
out
xchg
sub
movsb
andb
pop
lret
and
pop
cmp
and
and
xchg
inc
sub
inc
pop
jo
mov
add
jbe
in
mov
and
jg
in
loopne
add
loopne
lahf
pushl
mov
loopne
mov
inc
sub
loopne
not
pusha
jns
sbb
push
cwtl
jb
and
pop
sahf
sub
sti
and
add
lahf
ss
xchg
rorb
dec
xchg
pop
push
das
js
push
pop
push
ss
pusha
arpl
add
add
add
out
jl
sahf
lds
mov
pusha
mov
mov
andb
mulb
and
pop
pushf
jae
fcmovb
adc
nop
mov
sbb
orb
lock
fsubp
rcl
xor
lock
push
cwtl
leave
bound
jns
test
jae
adc
leave
js
or
mov
cs
loopne
loopne
and
xor
jnp
pusha
add
movsl
pop
push
loopne
sti
adc
jp
inc
jg
nop
cmpsb
add
pop
loopne
pushf
jne
and
adc
push
mov
add
add
mov
inc
add
addl
inc
mov
mov
jl
jns
inc
enter
mov
pop
dec
adc
arpl
mov
ss
test
add
mov
loopne
inc
shr
xchg
push
add
loopne
and
push
jne
adc
mov
cmp
push
pusha
inc
roll
hlt
xor
ljmp
inc
inc
xor
addb
imul
dec
cmp
inc
inc
cs
aad
insl
xor
repz
js
mov
loope
jb
clc
xchg
sub
pusha
loope
push
ret
xchg
test
mov
scas
mov
or
pusha
in
dec
pop
sbb
andl
sub
add
out
imull
and
inc
pop
pop
scas
xchg
or
sbb
pusha
sub
dec
xlat
imul
add
sub
mov
jb
and
dec
push
adc
lock
mov
mov
dec
fcompl
in
adc
out
ror
cmp
mov
lock
popa
push
call
and
add
subb
adc
adc
loopne
fisttps
xor
jecxz
push
popa
pushf
cld
mov
mov
pusha
pusha
add
ja
inc
xchg
mov
daa
rcrl
cmp
and
xchg
movsl
mov
mov
add
in
pop
andb
xchg
loopne
bound
push
pop
pop
jl
fwait
sub
push
xchg
add
les
and
adcl
lods
test
cmp
aad
and
je
and
scas
fs
mov
mov
and
or
loopne
sbb
dec
push
cmp
pusha
add
out
data16
aas
inc
xor
jb
pop
pop
ret
sarb
add
mov
adc
ja
aam
sahf
frstor
and
loop
loopne
dec
adc
and
rolb
mov
xlat
sub
inc
jp
jle
pushf
mov
adc
cld
ljmp
sbb
pop
lret
xor
sub
pusha
das
loop
scas
cmpsl
inc
mov
mov
nop
jl
imulb
addb
mov
cmpsb
pusha
mov
fisttpl
rolb
shrb
push
jns
lcall
pop
mov
insl
cmp
sbb
js
in
test
add
popa
fmull
js
inc
and
bound
sbb
shlb
enter
mov
push
add
xor
sbbl
mov
les
sbb
add
push
out
add
push
sar
sub
push
add
shl
cmp
mov
jge
xchg
pop
pop
mov
xor
pusha
loopne
lea
ret
adc
js
in
aad
loopne
mov
pusha
mov
sub
pop
je
das
test
dec
in
jl
mov
pusha
dec
gs
scas
pusha
and
iret
cmc
in
ret
pusha
in
sub
rcrl
iret
mov
xor
pop
jle
sub
fs
cwtl
leave
loopne
and
testl
mov
xlat
add
data16
push
rolb
andb
sub
inc
inc
pop
xlat
sub
out
jnp
enter
inc
sti
dec
daa
jno
jb
and
inc
dec
rclb
in
sub
adc
mov
fistps
jge
or
rcr
sbb
sub
adc
pop
mov
jnp
test
rolb
subb
cmc
and
loopne
in
sbb
ljmp
sub
push
pusha
mov
movsb
rolb
mov
popf
cltd
adc
jbe
mov
loopne
enter
cmp
jg
stos
loopne
insl
inc
xchg
cmpsl
mov
dec
repz
lret
test
push
mov
inc
inc
jecxz
outsl
movsb
inc
inc
xlat
push
or
loopne
in
popa
mov
subb
rolb
inc
add
and
add
dec
mov
arpl
add
dec
into
test
loopne
pushf
add
add
ror
add
and
sti
cmp
dec
outsl
jl
ja
mov
push
loopne
sbb
shll
aad
aad
ljmp
shlb
test
std
mov
loopne
mov
push
js
pop
or
daa
and
rolb
push
push
repnz
pusha
loope
jnp
rcrl
mov
mov
mov
shll
inc
shrb
and
adc
scas
rolb
push
xchg
xchg
xor
inc
test
add
stos
loopne
and
inc
dec
cmpsl
scas
rol
cltd
es
and
loope
cmp
mov
add
pop
and
mov
ss
pop
shrl
cmpsl
lea
loopne
lds
pusha
add
inc
sahf
test
pushf
pop
and
mov
ret
mov
insb
mov
ss
rcrb
add
sbb
push
mov
jne
pop
fisubrs
aad
sbb
xor
add
or
shlb
dec
mov
in
jle
movsb
and
les
dec
aad
rol
add
imul
add
mov
xor
mov
adc
ss
jno
cs
add
and
pusha
outsl
add
sbb
mov
aad
addb
lods
rolb
lahf
lds
sbb
rclb
adc
pusha
iret
fnstenv
xchg
sti
ret
imul
shl
rorl
loopne
arpl
fcompl
flds
out
nop
arpl
loopne
jnp
addb
xchg
push
add
mov
mov
test
and
jmp
cwtl
cmpl
sar
shl
jle
outsb
mov
loopne
push
in
mov
test
mov
jmp
jno
ljmpw
imul
rolb
mov
inc
add
jle
jge
sub
loopne
stos
loopne
xrelease
mov
and
xchg
cmp
nop
popf
inc
push
repz
movsb
pusha
inc
cmpsl
sbb
xor
cmp
insb
enter
pop
daa
push
loopne
outsl
push
addb
loopne
pop
inc
cld
and
test
imul
jl
imul
add
xor
mov
mov
push
push
enter
addb
and
and
and
and
cli
incl
and
sarl
jbe
int
addl
leave
sub
add
imul
js
pop
test
or
addb
ja
adc
xchg
xlat
roll
rolb
psrlq
push
inc
inc
add
add
sbb
cmp
aad
iret
lods
push
andb
and
xor
mov
or
dec
addl
add
lods
movsl
xor
not
inc
mov
enter
ret
dec
push
dec
mov
pusha
inc
xor
jae
in
addr16
pop
movsb
pusha
and
and
aad
mov
pusha
pop
stos
pusha
mov
and
loopne
andb
sbb
or
jae
stos
and
test
rclb
fisubs
out
roll
into
pop
daa
popl
loop
adc
mov
dec
add
pusha
sub
push
movsb
add
jl
mov
fwait
mov
add
pushf
xchg
xor
jge
outsl
sub
push
and
jbe
push
inc
push
sbb
and
andl
pop
imul
shrl
cmp
jl
sahf
cmpsb
mov
fdiv
mov
add
aas
push
adc
rolb
inc
gs
jmp
and
pop
push
sahf
lods
sub
mov
in
fbstp
arpl
fwait
pop
popf
xchg
add
add
mov
pop
pop
push
mov
out
inc
in
aam
mov
mov
and
notl
dec
xor
fwait
icebp
pop
stos
mov
lods
mov
mov
pop
cs
pusha
push
andb
into
cmpsl
mov
and
loopne
in
cli
dec
dec
mov
loopne
jl
cli
rcr
mov
mov
adc
and
movsl
jl
pusha
rcl
fs
cwtl
rcll
das
or
shlb
loope
int
test
sub
jb
pop
repz
pop
icebp
and
pusha
sbbb
icebp
int
test
or
push
movsb
mov
rol
in
loop
les
arpl
scas
and
daa
mov
and
xor
or
insb
loop
das
std
sub
pusha
fsubrl
mov
sahf
mull
adc
repnz
xor
lret
cmpsb
shlb
dec
mov
pop
jbe
sub
mov
mov
aad
inc
pop
movsl
aad
jns
mov
push
pusha
add
rclb
pop
cmp
repnz
dec
int
fs
sub
xchg
pop
push
xor
cmpsl
fisttps
cmp
rol
and
xor
in
add
push
inc
jb
shll
loopne
lcall
mov
jmp
out
jge
and
jge
loopne
das
daa
pushl
mov
into
xchg
fs
pusha
dec
loop
pusha
pusha
lods
pop
jl
inc
cli
adc
dec
add
addr16
pusha
cli
jne
mov
xchg
aad
das
js
mov
and
or
mov
fwait
cmp
inc
xor
cmp
and
pusha
sbb
dec
and
inc
fidivrs
cmp
push
push
shlb
mov
loopne
and
or
xchg
sub
shrb
rclb
rol
sti
test
jge
in
mov
push
add
dec
and
push
inc
loopne
test
push
mov
mov
sti
sbb
adc
cmovno
push
loopne
jnp
cmp
lret
daa
popf
mov
mov
xchg
pop
aad
test
fndisi(8087
xchg
in
andb
rcrb
jl
push
jo
and
fwait
mov
scas
pop
adc
mov
inc
rorl
pusha
rcll
sbb
jl
sbb
pusha
lcall
dec
jno
dec
inc
push
lock
ds
sub
and
pusha
in
add
sbb
jg
loope
pop
jg
movsb
loopne
in
loopne
test
in
ss
jmp
cli
arpl
push
mov
and
and
out
dec
inc
pop
mov
sub
loopne
mov
movsl
pusha
push
inc
in
dec
pop
sub
addb
and
sbb
pusha
repnz
loopne
add
fsubl
shlb
fwait
je
xor
xor
and
pusha
imul
pop
push
jl
pop
aad
es
mov
mov
and
dec
jmp
mov
mov
addb
jp
decb
adc
and
xor
mov
pop
daa
mov
inc
pop
pop
stc
int3
and
loopne
clc
adc
sub
ret
filds
dec
mov
jecxz
mov
or
shrb
jg
sub
sbbb
inc
loopne
enter
jae
enter
mov
and
jae
mov
pusha
loopne
movsl
loopne
fstps
push
cmpsl
inc
ss
popf
inc
sub
int3
or
addb
in
jbe
sub
sbb
arpl
stos
shlb
add
ret
push
and
cmp
into
adc
pop
add
ss
add
hlt
push
cmpsl
jb
gs
nop
adc
ret
inc
shll
and
mov
sbb
push
and
jb
out
icebp
push
loopne
adc
pusha
pusha
dec
ds
mov
xchg
stc
jg
mov
or
inc
dec
xor
fildll
mov
in
leave
nop
jmp
outsb
mov
add
or
clc
repnz
nop
nop
jae
mov
add
push
aad
mov
inc
add
loop
clc
repnz
nop
nop
jae
fsubrl
ljmp
and
push
mov
leave
nop
jmp
add
fsubrl
mov
scas
enter
nop
nop
jae
add
jae
push
adc
push
clc
repnz
nop
nop
jae
add
dec
mov
clc
repnz
nop
nop
jae
add
add
cmpsb
scas
lods
not
push
mov
xchg
ret
add
int3
add
outsb
add
sub
clc
repnz
nop
nop
jae
mov
repz
inc
push
add
add
fnstsw
add
add
add
mov
pusha
push
mov
xchg
ret
add
movsb
add
add
hlt
cmp
add
repnz
nop
nop
jae
add
add
loopne
out
rclb
mov
xchg
ret
rolb
scas
rorb
test
add
mov
leave
nop
jmp
fisubl
cmpsb
cmp
cld
nop
nop
jae
add
scas
add
in
daa
out
sti
clc
repnz
nop
nop
jae
es
add
jecxz
add
clc
repnz
nop
nop
jae
add
push
fsubl
or
shlb
inc
popa
jmp
jl
cmpsb
adc
add
mov
ljmp
clc
repnz
nop
nop
jae
sbb
add
xor
mov
add
clc
repnz
nop
nop
jae
fcompl
add
inc
inc
add
nop
jmp
stc
scas
add
cmp
nop
jmp
add
add
shlb
push
mov
leave
nop
jmp
hlt
rolb
add
sti
lea
clc
repnz
nop
nop
jae
pop
add
add
icebp
push
push
mov
xchg
ret
in
add
add
sahf
int3
xchg
mov
dec
push
mov
cld
nop
nop
jae
push
add
add
loopne
fld1
push
mov
xchg
ret
aad
es
push
add
lods
mov
clc
repnz
nop
nop
jae
fcoml
add
pushf
addb
cmp
ret
leave
addl
addl
add
inc
add
fiadds
add
add
add
sub
push
mov
leave
nop
jmp
add
imul
daa
inc
mov
nop
push
mov
leave
nop
jmp
rcl
add
shr
mov
clc
repnz
nop
nop
jae
sahf
add
mov
add
nop
push
mov
leave
nop
jmp
add
outsb
xor
add
push
mov
xchg
ret
adc
std
fldl
loop
lcall
nop
nop
jae
add
sahf
in
std
xorl
clc
repnz
nop
nop
jae
add
adc
sbb
nop
push
mov
leave
nop
jmp
aam
add
incb
adc
test
sub
add
repnz
nop
nop
jae
and
mov
push
mov
leave
nop
jmp
add
xchg
aam
adc
xor
push
mov
xchg
ret
jns
push
dec
add
push
add
and
add
repnz
nop
nop
jae
adc
push
shr
push
mov
xchg
ret
outsb
add
mov
xor
push
ret
jmp
add
push
add
add
ret
addl
cmpl
add
nop
push
mov
leave
nop
jmp
mov
pusha
dec
dec
aas
mov
clc
repnz
nop
nop
jae
add
hlt
push
loopne
inc
push
push
mov
xchg
ret
add
std
add
repz
add
nop
nop
jae
sahf
sub
add
add
add
cld
nop
nop
jae
ficoms
add
hlt
sub
sub
inc
or
add
cmpsb
push
add
stc
add
addl
dec
mov
and
add
andb
nop
jae
mov
add
jmp
push
hlt
add
xor
jns
stc
add
pop
add
clc
repnz
nop
nop
jae
add
dec
add
push
clc
repnz
nop
nop
jae
outsb
add
mov
add
ret
fld1
inc
pop
add
nop
push
mov
leave
nop
jmp
cmpsb
push
sub
mov
loopne
jb
add
nop
push
mov
leave
nop
jmp
add
add
add
leave
pop
aas
fistpl
push
mov
xchg
ret
ljmp
push
mov
insl
cmp
nop
push
mov
leave
nop
jmp
add
aam
add
mov
push
push
mov
xchg
ret
repz
add
add
push
push
jnp
les
repnz
nop
nop
jae
add
add
imul
mov
xchg
ret
dec
add
push
add
jne
clc
repnz
nop
nop
jae
add
aad
in
add
mov
push
push
mov
xchg
ret
add
sahf
add
aad
aam
mov
or
repnz
nop
nop
jae
add
es
add
add
add
clc
repnz
nop
nop
jae
scas
add
add
clc
repnz
nop
nop
jae
add
rcl
add
add
int
nop
push
mov
leave
nop
jmp
add
ret
ret
and
shlb
repnz
nop
nop
jae
add
add
fiadds
add
push
mov
leave
nop
jmp
add
add
fcmovu
add
push
clc
repnz
nop
nop
jae
add
push
scas
add
jl
adc
mov
clc
repnz
nop
nop
jae
adc
add
jl
inc
clc
repnz
nop
nop
jae
scas
loop
add
fmulp
add
repnz
nop
nop
jae
mov
add
out
scas
andb
add
nop
push
mov
leave
nop
jmp
add
adc
add
clc
repnz
nop
nop
jae
add
hlt
push
xchg
outsb
ja
clc
repnz
nop
nop
jae
add
ljmp
nop
push
mov
leave
nop
jmp
push
int3
sahf
adc
add
cmp
cld
nop
nop
jae
add
add
in
clc
addb
les
nop
push
mov
leave
nop
jmp
add
repz
cmp
add
push
mov
xchg
ret
add
add
adc
clc
repnz
nop
nop
jae
repnz
add
cli
fs
loop
push
mov
xchg
ret
cmpsb
add
add
int3
pop
or
and
in
leave
nop
jmp
add
movl
push
mov
push
mov
xchg
ret
xor
hlt
add
hlt
jl
rep
clc
repnz
nop
nop
jae
push
add
frstor
add
out
jne
nop
push
mov
leave
nop
jmp
fadd
add
xchg
xchg
mov
jmp
add
add
sub
add
pop
add
add
adc
repnz
nop
nop
jae
mov
aam
jae
nop
push
mov
leave
nop
jmp
add
ljmp
push
push
mov
xchg
ret
mov
add
dec
add
clc
repnz
nop
nop
jae
leave
sbb
jl
add
mov
fwait
clc
repnz
nop
nop
jae
sbb
add
loope
fstl
add
clc
repnz
nop
nop
jae
add
add
sahf
mul
out
testb
inc
jno
movsb
clc
repnz
nop
nop
jae
in
push
add
mov
cwtl
aaa
push
push
mov
xchg
ret
add
aam
aad
add
fimuls
clc
repnz
nop
nop
jae
add
add
add
push
and
call
nop
jae
push
add
push
flds
jne
clc
repnz
nop
nop
jae
push
in
pop
add
nop
push
mov
leave
nop
jmp
add
add
cs
jae
jne
push
mov
xchg
ret
add
add
push
add
add
les
repnz
nop
nop
jae
add
add
mov
repnz
nop
nop
jae
push
sub
and
adc
cmp
add
clc
repnz
nop
nop
jae
and
add
imul
clc
repnz
nop
nop
jae
add
and
add
or
clc
repnz
nop
nop
jae
add
add
pop
push
push
mov
xchg
ret
mov
movsb
add
sub
repnz
nop
nop
jae
add
andb
data16
add
clc
repnz
nop
nop
jae
add
aad
adc
rorl
nop
nop
jae
sub
imul
addb
nop
nop
jae
mov
add
imul
clc
repnz
nop
nop
jae
and
add
clc
repnz
nop
nop
jae
add
add
adc
jmp
nop
nop
jae
xor
add
rcr
loop
push
je
clc
repnz
nop
nop
jae
add
add
xchg
sbb
add
repnz
nop
nop
jae
std
dec
add
nop
push
mov
leave
nop
jmp
add
outsb
das
xor
clc
repnz
nop
nop
jae
add
add
add
jle
jno
test
add
nop
push
mov
leave
nop
jmp
add
cmpsb
andb
clc
repnz
nop
nop
jae
mov
movsb
add
repz
mov
clc
repnz
nop
nop
jae
rolb
add
addl
and
incl
stc
cmpsb
push
leave
pop
nop
push
mov
leave
nop
jmp
shrb
add
fs
xor
clc
repnz
nop
nop
jae
add
add
shlb
mov
leave
nop
jmp
hlt
add
dec
add
sbb
mov
clc
repnz
nop
nop
jae
add
push
add
add
seto
in
leave
nop
jmp
add
popl
in
leave
nop
jmp
add
push
mov
decl
cld
nop
nop
jae
add
mov
add
cmp
nop
nop
jae
mov
add
stc
shrb
mov
or
loopne
push
push
mov
xchg
ret
mov
add
adc
mov
xchg
ret
add
add
sarb
inc
sub
mov
xchg
ret
xor
add
push
andl
inc
push
clc
repnz
nop
nop
jae
stc
fcompl
add
scas
hlt
jns
push
mov
xchg
ret
dec
add
add
hlt
sbb
test
repnz
nop
nop
jae
add
push
mov
xchg
ret
sub
add
mov
nop
push
mov
leave
nop
jmp
add
sub
dec
add
in
push
nop
push
mov
leave
nop
jmp
add
push
repnz
ret
xor
mov
push
mov
xchg
ret
sahf
add
add
add
pop
dec
add
push
mov
xchg
ret
outsb
add
add
add
int3
test
loopne
and
clc
repnz
nop
nop
jae
push
pop
add
mov
nop
push
mov
leave
nop
jmp
jl
sbb
daa
gs
clc
repnz
nop
nop
jae
add
add
push
add
movl
jecxz
add
adc
in
add
add
xor
add
nop
push
mov
leave
nop
jmp
add
push
jns
daa
inc
mov
adcb
ja
call
nop
jmp
add
imul
nop
nop
jae
add
add
aad
stc
je
in
in
add
nop
push
mov
leave
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
imul
ljmp
add
add
add
add
add
xchg
aad
lret
and
inc
popl
clc
repnz
nop
nop
jae
mov
leave
mov
rclb
nop
nop
jae
add
add
or
mov
push
mov
xchg
ret
ret
in
add
fnstsw
nop
push
mov
leave
nop
jmp
add
add
push
add
adc
push
mov
leave
nop
jmp
add
leave
add
inc
loopne
push
clc
repnz
nop
nop
jae
add
add
addl
int
clc
repnz
nop
nop
jae
add
add
xchg
add
mov
leave
nop
jmp
add
adc
iret
or
inc
add
add
add
shrb
call
clc
repnz
nop
nop
jae
add
fucom
dec
xor
clc
repnz
nop
nop
jae
int3
push
add
xor
clc
repnz
nop
nop
jae
add
adc
add
lea
mov
xchg
ret
add
fnsave
add
in
mov
clc
repnz
nop
nop
jae
push
fdivrl
push
push
mov
xchg
ret
xchg
add
imul
outsb
and
fstl
repnz
nop
nop
jae
add
aam
mov
add
stos
cmpw
nop
push
mov
leave
nop
jmp
add
aam
loop
imul
and
repnz
nop
nop
jae
jl
imul
add
sub
clc
repnz
nop
nop
jae
add
aam
add
clc
repnz
nop
nop
jae
dec
in
scas
add
pop
clc
repnz
nop
nop
jae
add
ret
add
stc
scas
xchg
push
mov
xchg
ret
stc
and
mov
add
clc
repnz
nop
nop
jae
add
lret
nop
push
mov
leave
nop
jmp
loop
add
loop
add
and
repnz
nop
nop
jae
add
in
add
mov
nop
push
mov
leave
nop
jmp
add
fiaddl
dec
add
mov
nop
push
mov
leave
nop
jmp
mov
add
mov
nop
push
mov
leave
nop
jmp
add
repz
mov
mov
leave
nop
jmp
add
add
hlt
repz
pop
js
jne
clc
repnz
nop
nop
jae
mov
cs
mov
clc
repnz
nop
nop
jae
add
add
add
lcall
nop
jae
movl
int3
ror
jno
rorl
mov
xchg
ret
adc
daa
out
orl
add
push
add
mov
add
daa
shl
das
lods
push
mov
xchg
ret
add
pop
rolb
ficoms
add
mov
push
mov
xchg
ret
sbb
add
pusha
mov
add
clc
repnz
nop
nop
jae
rolb
push
push
add
push
sbb
repnz
nop
nop
jae
rolb
mov
mov
repnz
nop
nop
jae
add
int3
aad
jmp
nop
nop
jae
add
push
cs
add
clc
repnz
nop
nop
jae
push
xor
add
xor
push
clc
repnz
nop
nop
jae
cmpsb
jae
aad
mov
sub
jp
pop
mov
clc
repnz
nop
nop
jae
add
push
push
clc
repnz
nop
nop
jae
add
add
xor
scas
xchg
mov
leave
nop
jmp
adc
movsb
add
repnz
repz
clc
repnz
nop
nop
jae
add
imul
add
gs
nop
push
mov
leave
nop
jmp
add
add
sub
mov
xchg
ret
sahf
add
add
add
add
xor
mov
nop
nop
jae
add
cs
hlt
fiaddl
push
and
out
roll
push
mov
leave
nop
jmp
mov
dec
jl
add
cmpl
jae
add
push
mov
xchg
ret
stc
add
sbb
jle
add
nop
jmp
add
add
push
jl
add
push
mov
xchg
ret
add
push
int3
add
push
dec
out
clc
sbb
popa
clc
repnz
nop
nop
jae
add
add
xchg
add
repnz
nop
nop
jae
fiadds
add
add
in
mov
clc
repnz
nop
nop
jae
adc
xchg
push
add
js
inc
add
fisttpll
cld
nop
nop
jae
sbb
adc
std
add
push
clc
repnz
nop
nop
jae
add
sub
add
xor
daa
dec
clc
repnz
nop
nop
jae
rolb
add
insb
or
adcb
and
mov
xchg
ret
add
movsb
imul
iret
lea
push
mov
xchg
ret
cmpsb
add
mov
add
cmp
nop
nop
jae
add
ljmp
clc
imul
nop
jae
add
add
cmpsb
sahf
mov
cld
mov
repnz
nop
nop
jae
add
add
sbb
sbb
nop
mov
mov
sub
repnz
nop
nop
jae
add
pop
push
jae
mov
clc
repnz
nop
nop
jae
add
mov
loop
mov
add
clc
repnz
nop
nop
jae
jl
jns
pop
push
mov
xchg
ret
add
jl
add
add
call
clc
repnz
nop
nop
jae
int3
in
push
push
and
pop
clc
repnz
nop
nop
jae
add
movsb
movl
and
mov
clc
repnz
nop
nop
jae
stc
add
aam
sbb
nop
push
mov
leave
nop
jmp
in
add
ficoml
rorb
pop
lea
mov
test
clc
repnz
nop
nop
jae
fisubrl
rcll
repnz
nop
nop
jae
add
fisubs
repnz
nop
nop
jae
add
in
add
sub
jle
sbb
adc
pusha
inc
add
add
sahf
add
add
ljmp
loop
clc
repnz
nop
nop
jae
stc
add
add
fimull
adc
les
nop
push
mov
leave
nop
jmp
add
outsb
add
add
push
mov
xchg
ret
add
add
add
add
fistpl
clc
repnz
nop
nop
jae
add
adc
add
dec
mov
clc
repnz
nop
nop
jae
add
sbb
jl
and
repnz
nop
nop
jae
add
add
shrb
and
pop
cmc
sub
clc
repnz
nop
nop
jae
xchg
add
xchg
add
clc
repnz
nop
nop
jae
mov
push
push
mov
xchg
ret
add
add
aad
lea
jg
add
fldl
in
add
add
clc
repnz
nop
nop
jae
add
mov
mov
sbb
push
mov
xchg
ret
add
add
pop
add
lods
push
clc
repnz
nop
nop
jae
add
add
add
pop
jne
push
mov
xchg
ret
stc
outsb
add
fiadds
fiaddl
lea
dec
cmp
push
mov
leave
nop
jmp
outsb
add
movsb
add
sub
pop
sub
repnz
nop
nop
jae
add
mov
mov
clc
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
add
add
fiadds
and
add
mov
leave
nop
jmp
scas
leave
xor
mov
clc
repnz
nop
nop
jae
repnz
fstp
add
lret
and
inc
jle
dec
add
clc
repnz
nop
nop
jae
push
hlt
es
fldl
sub
loopne
fistpl
push
mov
xchg
ret
aam
add
mov
imul
xor
shlb
popa
inc
add
add
add
movsl
mov
clc
repnz
nop
nop
jae
es
sub
push
call
clc
repnz
nop
nop
jae
add
daa
push
mov
rcrl
add
mov
leave
add
xor
clc
repnz
nop
nop
jae
adc
movb
cld
nop
nop
jae
add
daa
add
add
mov
clc
repnz
nop
nop
jae
aam
add
sub
std
push
nop
push
mov
leave
nop
jmp
ret
jae
add
repnz
nop
nop
jae
andl
and
repnz
nop
nop
jae
add
add
push
pop
leave
nop
push
mov
leave
nop
jmp
add
in
add
aam
pop
rep
nop
push
mov
leave
nop
jmp
add
leave
add
add
stos
pusha
rorb
add
stc
aam
add
aad
add
mov
add
repnz
nop
nop
jae
add
add
push
push
lods
mov
clc
repnz
nop
nop
jae
add
xchg
sub
add
add
push
mov
xchg
ret
add
repz
add
sbb
inc
clc
repnz
nop
nop
jae
add
stc
mov
xor
add
repnz
nop
nop
jae
add
mov
cld
nop
nop
jae
add
add
add
test
adcb
call
nop
jae
leave
sbb
testl
mov
xchg
ret
fiaddl
stc
jae
mov
repnz
nop
nop
jae
dec
add
add
and
add
repnz
nop
nop
jae
xchg
add
ret
mov
rclb
rcrb
xchg
ret
in
add
add
adc
cmpsl
popa
push
mov
xchg
ret
fcoml
add
cs
add
add
pusha
loopne
mov
clc
repnz
nop
nop
jae
push
add
fld1
clc
repnz
nop
nop
jae
add
add
incb
add
and
or
push
mov
leave
nop
jmp
add
add
add
rep
push
mov
xchg
ret
jae
add
js
xchg
push
clc
repnz
nop
nop
jae
mov
add
xchg
mov
clc
repnz
nop
nop
jae
push
movl
shr
clc
repnz
nop
nop
jae
incb
jns
int3
add
mov
push
mov
xchg
ret
movl
add
push
mov
repnz
nop
nop
jae
mov
push
adc
push
add
add
clc
repnz
nop
nop
jae
mov
dec
jb
test
nop
push
mov
leave
nop
jmp
movsb
add
add
std
add
orl
repnz
fiaddl
leave
add
push
push
mov
xchg
ret
mov
add
jge
out
and
jecxz
repnz
nop
nop
jae
add
repz
aas
adc
nop
jmp
in
push
fiadds
jle
push
mov
xchg
ret
add
adc
cmpsb
adc
cld
nop
nop
jae
add
adc
adc
add
xor
clc
repnz
nop
nop
jae
fiaddl
add
jns
add
or
add
repnz
nop
nop
jae
add
push
fiadds
mov
clc
repnz
nop
nop
jae
fmull
add
movsb
pop
add
push
mov
xchg
ret
movl
hlt
imul
nop
jae
jns
adc
outsb
repnz
sbb
clc
repnz
nop
nop
jae
add
cs
fcoml
mov
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
xchg
push
adc
imul
cmp
clc
repnz
nop
nop
jae
jl
push
nop
loope
clc
clc
repnz
nop
nop
jae
movsb
add
add
outsb
xor
test
clc
repnz
nop
nop
jae
jae
ficoml
cmp
mov
xchg
ret
add
incb
add
add
clc
repnz
nop
nop
jae
add
pop
add
fisubs
add
clc
repnz
nop
nop
jae
add
add
push
daa
aad
push
mov
xchg
ret
add
add
cmpsb
repnz
add
inc
je
nop
push
mov
leave
nop
jmp
add
shrb
xor
inc
and
repnz
nop
nop
jae
adc
outsb
add
rcll
jmp
add
add
add
jb
lds
imul
nop
nop
jae
std
add
rol
sbb
clc
repnz
nop
nop
jae
cs
add
add
mov
xchg
ret
add
add
adc
hlt
add
movswl
clc
repnz
nop
nop
jae
add
cmpw
clc
repnz
nop
nop
jae
jae
jl
cmp
nop
push
mov
leave
nop
jmp
imul
std
daa
sub
sub
sbb
clc
repnz
nop
nop
jae
add
add
mov
fistpl
clc
repnz
nop
nop
jae
add
add
add
das
mov
clc
repnz
nop
nop
jae
leave
mov
add
jmp
clc
repnz
nop
nop
jae
add
add
clc
repnz
nop
nop
jae
incb
add
ljmp
push
mov
xchg
ret
add
add
mov
add
add
decl
push
mov
xchg
ret
sahf
add
add
rolb
loopne
mov
jbe
clc
repnz
nop
nop
jae
adc
add
add
add
jge
add
stc
fmulp
add
add
popa
cmp
nop
push
mov
leave
nop
jmp
add
leave
add
pop
xchg
pop
clc
repnz
nop
nop
jae
add
add
add
add
gs
repnz
nop
nop
jae
mov
add
and
clc
repnz
nop
nop
jae
int3
outsb
popa
mov
clc
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
mov
mov
cld
nop
nop
jae
add
fucomp
add
add
clc
repnz
nop
nop
jae
add
movl
and
repnz
nop
nop
jae
add
jae
cmp
rclb
nop
jmp
addl
add
repz
clc
repnz
nop
nop
jae
add
cli
out
clc
repnz
nop
nop
jae
add
push
jl
add
xor
push
mov
leave
nop
jmp
repz
dec
add
mov
enter
repnz
nop
nop
jae
hlt
es
add
faddl
loop
dec
sub
pop
inc
add
fisubs
in
fisttpll
mov
leave
nop
jmp
add
jae
in
jl
sub
inc
push
push
cmp
nop
nop
jae
imul
mov
lea
cld
nop
nop
jae
add
incb
add
repnz
nop
nop
jae
add
and
fld1
push
mov
xchg
ret
fidivl
add
loop
add
pop
xor
gs
nop
push
mov
leave
nop
jmp
in
add
add
jmp
nop
jae
ljmp
jmp
inc
adc
repnz
nop
nop
jae
xorl
xchg
pop
push
mov
xchg
ret
leave
rolb
int3
fldl
std
ficomps
dec
add
clc
repnz
nop
nop
jae
cmpsb
add
add
add
clc
repnz
nop
nop
jae
sbb
fcmovbe
shl
push
pushl
clc
repnz
nop
nop
jae
add
aam
fiadds
pop
sub
clc
repnz
nop
nop
jae
dec
add
faddl
aam
add
push
mov
xchg
ret
add
mov
in
pop
je
clc
repnz
nop
nop
jae
pop
scas
jge
leave
push
mov
xchg
ret
add
add
add
add
xor
clc
repnz
nop
nop
jae
sbb
subl
clc
clc
repnz
nop
nop
jae
repnz
hlt
add
add
in
leave
nop
jmp
int3
stc
add
push
scas
mov
sub
loop
add
clc
repnz
nop
nop
jae
push
fstp
cs
add
push
and
nop
nop
jae
add
repz
nop
push
mov
leave
nop
jmp
add
imul
pop
hlt
add
push
adc
push
mov
xchg
ret
add
add
add
add
pop
je
nop
push
mov
leave
nop
jmp
add
mov
cld
nop
nop
jae
add
push
dec
pop
imul
fwait
mov
clc
repnz
nop
nop
jae
aam
add
repz
loope
dec
push
clc
repnz
nop
nop
jae
faddl
repz
mov
add
clc
repnz
nop
nop
jae
add
sub
add
push
mov
xchg
ret
add
fiaddl
andb
loopne
pop
ret
clc
repnz
nop
nop
jae
imul
add
add
insl
pop
inc
add
xchg
mov
add
add
repnz
nop
nop
jae
add
in
in
push
pop
mov
call
inc
add
jl
add
add
jns
xchg
nop
push
mov
leave
nop
jmp
hlt
add
add
shl
je
nop
push
mov
leave
nop
jmp
scas
rolb
addb
mov
clc
repnz
nop
nop
jae
add
add
daa
leave
push
mov
push
mov
xchg
ret
sahf
scas
push
fsubrl
add
lods
loopne
addr16
clc
repnz
nop
nop
jae
imul
add
cmpsb
sub
xchg
js
add
nop
push
mov
leave
nop
jmp
add
mov
insb
inc
add
xchg
and
stc
ja
sar
mov
xchg
ret
loop
add
es
add
pusha
mov
cmc
mov
nop
push
mov
leave
nop
jmp
ficoms
sub
cld
nop
nop
jae
int3
mov
add
or
add
add
add
clc
repnz
nop
nop
jae
incb
add
sub
add
call
clc
repnz
nop
nop
jae
loop
adc
mov
clc
repnz
nop
nop
jae
mov
fisubrl
push
clc
repnz
nop
nop
jae
add
leave
outsb
in
dec
inc
stos
push
clc
repnz
nop
nop
jae
add
add
repz
fs
add
add
fiadds
addl
nop
push
mov
leave
nop
jmp
add
add
dec
jecxz
clc
repnz
nop
nop
jae
leave
add
add
repnz
nop
nop
jae
add
add
repz
shl
clc
repnz
nop
nop
jae
mov
loop
add
push
mov
xchg
ret
dec
cmpsb
add
pop
clc
repnz
nop
nop
jae
mov
add
frstor
push
clc
repnz
nop
nop
jae
add
adc
push
sub
clc
repnz
nop
nop
jae
repz
adc
mov
repnz
nop
nop
jae
add
loop
add
imul
jno
push
add
add
repnz
nop
nop
jae
add
in
imul
cld
nop
nop
jae
leave
push
add
jae
sbb
clc
repnz
nop
nop
jae
add
add
in
push
mov
sub
addr16
add
add
add
add
jae
add
nop
push
mov
leave
nop
jmp
hlt
add
add
add
out
adc
repnz
nop
nop
jae
push
aam
mov
addb
pop
lea
clc
repnz
nop
nop
jae
fdivr
jae
add
mov
adc
repnz
nop
nop
jae
add
scas
add
and
fistpl
repnz
nop
nop
jae
add
add
aam
add
push
mov
xchg
ret
xchg
aad
push
imul
add
mov
mov
clc
repnz
nop
nop
jae
movsb
jl
pop
jae
add
clc
repnz
nop
nop
jae
movsb
sahf
sbb
add
push
clc
repnz
nop
nop
jae
outsb
in
scas
add
add
jne
clc
repnz
nop
nop
jae
add
loop
push
mov
insl
mov
fistps
mov
push
add
add
mov
mov
xchg
ret
fstl
std
add
stc
adc
repnz
nop
nop
jae
add
and
add
jo
nop
push
mov
leave
nop
jmp
add
add
nop
push
mov
leave
nop
jmp
add
std
add
sub
dec
movb
push
inc
pusha
jmp
dec
adc
repnz
nop
nop
jae
faddl
add
mov
out
out
clc
call
nop
jmp
add
add
sbb
nop
nop
jae
adc
jl
add
add
pusha
sbbb
and
jl
pushl
clc
repnz
nop
nop
jae
add
mov
add
ss
push
clc
repnz
nop
nop
jae
in
ret
add
add
pusha
clc
repnz
nop
nop
jae
push
add
add
add
and
push
inc
add
add
add
inc
les
push
mov
xchg
ret
and
std
int3
add
adc
repnz
nop
nop
jae
jns
add
add
jae
pop
push
mov
xchg
ret
add
movsb
jns
add
mov
cld
nop
nop
jae
add
sahf
add
xor
add
shl
adc
ret
add
xchg
add
nop
push
mov
leave
nop
jmp
loop
add
hlt
add
add
add
clc
repnz
nop
nop
jae
add
add
scas
insl
dec
push
mov
xchg
ret
es
hlt
push
add
add
repnz
nop
nop
jae
push
add
add
cmp
repnz
nop
nop
jae
mov
and
and
repnz
nop
nop
jae
add
push
sub
add
rep
add
mov
nop
push
mov
leave
nop
jmp
add
adc
push
add
xor
clc
repnz
nop
nop
jae
add
shrb
push
clc
repnz
nop
nop
jae
add
push
xchg
sub
jecxz
push
loopne
mov
xchg
ret
add
in
sub
ret
xor
push
mov
xchg
ret
dec
add
add
add
hlt
sbb
inc
and
je
clc
repnz
nop
nop
jae
in
add
mov
mov
sub
add
repnz
nop
nop
jae
outsb
stc
add
adc
push
push
mov
xchg
ret
aam
frstor
incb
mov
clc
repnz
nop
nop
jae
cmpsb
add
dec
adc
and
and
push
clc
repnz
nop
nop
jae
add
daa
scas
imul
mov
cmp
ret
add
scas
add
outsl
arpl
add
repnz
nop
nop
jae
repnz
call
nop
push
mov
leave
nop
jmp
sub
stc
add
add
xor
dec
movswl
nop
push
mov
leave
nop
jmp
add
add
ljmp
nop
push
mov
leave
nop
jmp
add
add
scas
add
clc
repnz
nop
nop
jae
sahf
sbb
hlt
std
cs
clc
repnz
nop
nop
jae
fisubrs
push
adc
test
add
clc
repnz
nop
nop
jae
add
call
nop
jae
add
sbb
nop
push
mov
leave
nop
jmp
hlt
dec
mov
fisubrs
jae
stos
clc
repnz
nop
nop
jae
fldl
add
mov
scas
movsb
enter
sti
lcall
sub
add
add
add
add
rcrb
mov
std
xor
nop
push
mov
leave
nop
jmp
add
jae
pop
push
mov
xchg
ret
add
add
pop
fwait
clc
repnz
nop
nop
jae
add
push
add
push
add
inc
add
mov
nop
nop
jae
xor
push
sahf
add
movl
mov
xchg
ret
rcr
push
add
sahf
add
dec
pop
clc
repnz
nop
nop
jae
add
add
pop
push
push
mov
xchg
ret
add
add
pop
nop
push
mov
leave
nop
jmp
mov
add
mov
nop
push
mov
leave
nop
jmp
add
loop
jmp
jg
clc
repnz
nop
nop
jae
outsb
repnz
add
adc
mov
nop
nop
jae
leave
add
add
xor
clc
repnz
nop
nop
jae
faddl
add
add
es
and
cld
nop
nop
jae
adc
cmpsb
add
fnstsw
test
out
clc
repnz
nop
nop
jae
add
add
mov
clc
repnz
nop
nop
jae
std
sbb
add
jne
push
mov
xchg
ret
fiadds
add
add
leave
mov
clc
repnz
nop
nop
jae
repz
push
add
pop
push
clc
repnz
nop
nop
jae
add
add
incb
push
daa
dec
push
mov
cmp
aas
aad
add
add
add
add
repnz
nop
nop
jae
in
push
add
xor
clc
repnz
nop
nop
jae
mov
scas
or
in
leave
nop
jmp
loop
add
movsb
bnd
je
js
mov
xchg
ret
add
add
push
add
push
clc
repnz
nop
nop
jae
add
add
add
test
nop
nop
jae
add
sahf
rclb
add
cld
nop
nop
jae
mov
add
mov
push
clc
repnz
nop
nop
jae
add
ret
stc
jl
stos
pusha
and
xchg
push
push
mov
xchg
ret
jns
add
hlt
xchg
xor
push
clc
repnz
nop
nop
jae
scas
hlt
xchg
sar
sbb
add
add
add
clc
repnz
nop
nop
jae
mov
add
add
mov
clc
repnz
nop
nop
jae
adcl
clc
repnz
nop
nop
jae
loop
add
add
add
mov
cld
or
in
leave
nop
jmp
dec
add
mov
lea
cld
nop
nop
jae
add
add
int
pop
jae
push
mov
leave
nop
jmp
add
add
imul
lock
clc
repnz
nop
nop
jae
add
cs
ss
sbb
hlt
xor
nop
nop
jae
add
push
add
push
add
and
mov
adc
repnz
nop
nop
jae
sub
fiaddl
std
mov
rep
push
mov
xchg
ret
std
shrb
add
add
clc
repnz
nop
nop
jae
add
dec
xchg
add
loop
bound
add
inc
add
add
add
fiadds
push
jne
pop
clc
repnz
nop
nop
jae
faddl
add
add
clc
repnz
nop
nop
jae
add
sub
repnz
nop
nop
jae
leave
add
add
inc
pusha
mov
call
nop
jmp
add
sar
repnz
nop
nop
jae
add
outsb
add
mov
push
mov
xchg
ret
add
adc
mov
repnz
nop
nop
jae
add
add
mov
scas
adc
andb
fwait
mov
clc
repnz
nop
nop
jae
add
add
xor
outsb
and
repnz
nop
nop
jae
add
scas
jae
hlt
jbe
mov
clc
repnz
nop
nop
jae
mov
add
add
add
add
clc
repnz
nop
nop
jae
add
scas
push
ss
cmp
nop
jae
leave
ljmp
xchg
mov
add
clc
repnz
nop
nop
jae
add
add
add
iret
fistpl
push
mov
xchg
ret
shrb
push
out
cmp
mov
clc
repnz
nop
nop
jae
add
sub
clc
repnz
nop
nop
jae
add
add
add
adc
repnz
nop
nop
jae
dec
repnz
dec
push
ret
mov
clc
repnz
nop
nop
jae
add
add
sahf
add
es
clc
repnz
nop
nop
jae
add
add
mov
cld
nop
nop
jae
shl
add
push
sbbl
mov
xchg
ret
adc
fiaddl
movl
mov
xchg
ret
add
fldl
add
jns
add
test
hlt
clc
repnz
nop
nop
jae
scas
add
xchg
jbe
data16
shlb
mov
push
mov
xchg
ret
pop
sbb
mov
dec
nop
push
mov
leave
nop
jmp
add
add
movsb
repnz
iret
xchg
push
mov
xchg
ret
add
std
daa
mov
lret
pop
adc
dec
mov
xchg
ret
add
add
adc
push
push
shlb
movsb
add
bound
or
add
push
add
add
sbb
clc
repnz
nop
nop
jae
rolb
repnz
test
add
nop
push
mov
leave
nop
jmp
imul
push
push
and
incb
ret
adc
aam
push
push
nop
push
mov
leave
nop
jmp
incb
add
add
add
sbb
push
mov
xchg
ret
mov
leave
orl
jmp
sbb
leave
ror
mov
loopne
scas
cmp
push
mov
xchg
ret
jl
repz
add
dec
push
push
mov
xchg
ret
add
repnz
mov
pop
clc
repnz
nop
nop
jae
add
ret
add
scas
mov
push
mov
mov
xchg
ret
add
add
xor
add
mov
add
outsb
add
faddl
add
jbe
and
jg
loopne
clc
repnz
nop
nop
jae
jae
in
add
rcl
push
clc
repnz
nop
nop
jae
repnz
outsb
add
xor
pop
call
nop
jmp
add
and
mov
clc
repnz
nop
nop
jae
adc
cs
add
jae
push
es
jecxz
repnz
nop
nop
jae
repz
add
clc
repnz
nop
nop
jae
faddl
add
out
movzwl
clc
repnz
nop
nop
jae
mov
add
fistps
mov
xchg
ret
add
leave
add
add
std
add
push
push
mov
xchg
ret
add
add
fcoml
sub
add
sub
clc
repnz
nop
nop
jae
hlt
movl
add
clc
repnz
nop
nop
jae
add
daa
push
inc
mov
ret
mov
xchg
ret
ret
add
add
dec
pop
push
mov
xchg
ret
int3
add
daa
add
jb
loopne
cmc
add
clc
repnz
nop
nop
jae
and
lods
mov
mov
xchg
ret
sub
add
mov
int3
daa
cmp
repnz
nop
nop
jae
add
add
or
mov
leave
nop
jmp
and
imul
xbegin
jmp
imul
add
mov
sbb
stc
lock
nop
jae
add
add
add
aam
and
pusha
sbbb
xchg
xchg
ret
add
add
dec
adc
mov
repnz
nop
nop
jae
mov
add
add
mov
add
repnz
nop
nop
jae
hlt
add
add
in
or
pusha
cmpsb
mov
clc
jmp
add
sub
imul
dec
add
scas
push
add
add
add
adc
repnz
nop
nop
jae
sub
mov
jg
push
mov
xchg
ret
ljmp
add
fdivr
clc
repnz
nop
nop
jae
mov
ret
test
repnz
nop
nop
jae
mov
fld1
clc
repnz
nop
nop
jae
outsb
add
add
mov
add
push
mov
leave
nop
jmp
add
es
add
cld
nop
nop
jae
adc
dec
aam
int3
hlt
and
add
jmp
add
leave
add
outsb
add
std
add
add
mov
clc
repnz
nop
nop
jae
mov
add
rcr
loopne
rolb
clc
mov
call
nop
jmp
add
push
push
push
push
mov
xchg
ret
add
adc
add
push
mov
sbb
repnz
nop
nop
jae
push
add
aam
daa
add
push
mov
xchg
ret
add
add
jae
es
push
push
mov
xchg
ret
sahf
push
shrb
int3
add
call
clc
repnz
nop
nop
jae
xchg
ljmp
repnz
nop
nop
jae
add
pop
sub
add
mov
mov
xchg
ret
add
outsb
mov
in
leave
nop
jmp
ljmp
add
arpl
nop
push
mov
leave
nop
jmp
imul
cmpsb
sahf
dec
jb
pop
clc
repnz
nop
nop
jae
jae
sub
add
mov
push
clc
repnz
nop
nop
jae
ljmp
push
mov
xchg
ret
scas
adc
add
pop
add
frstor
pop
inc
add
add
addl
jle
inc
in
push
clc
repnz
nop
nop
jae
add
push
pop
jne
clc
repnz
nop
nop
jae
movl
jae
add
add
mov
add
inc
ds
push
push
mov
xchg
ret
add
sahf
add
std
add
add
add
clc
repnz
nop
nop
jae
jae
adc
rcr
jns
clc
repnz
nop
nop
jae
add
shr
add
mov
add
nop
jmp
fiaddl
pop
adc
add
cld
nop
nop
jae
imul
and
clc
repnz
nop
nop
jae
sub
xor
repnz
nop
nop
jae
daa
add
add
add
repnz
nop
nop
jae
rolb
add
adc
add
sbb
daa
sar
jmp
daa
add
mov
loop
add
push
mov
xchg
ret
outsb
repz
add
sub
xchg
scas
loopne
inc
repz
clc
repnz
nop
nop
jae
aam
add
in
pusha
push
mov
xchg
ret
add
ljmp
jecxz
icebp
inc
dec
es
repnz
nop
nop
jae
add
add
mov
cmp
push
mov
leave
nop
jmp
add
aam
add
inc
pusha
iret
push
push
mov
xchg
ret
aad
add
push
push
fsubl
add
add
repnz
nop
nop
jae
aad
stc
in
dec
fwait
clc
repnz
nop
nop
jae
scas
aam
in
xor
inc
loopne
add
pusha
cmpb
mov
xchg
ret
dec
cs
mov
imul
sub
cld
nop
nop
jae
add
add
add
daa
xchg
insl
cld
clc
repnz
nop
nop
jae
stc
add
add
adc
add
nop
push
mov
leave
nop
jmp
es
cmp
movzwl
clc
repnz
nop
nop
jae
add
add
inc
mov
clc
repnz
nop
nop
jae
add
add
xor
lahf
push
push
mov
xchg
ret
adc
jns
es
cmpsb
xor
inc
in
push
mov
leave
nop
jmp
push
dec
add
add
mov
in
leave
nop
jmp
xchg
repnz
std
add
mov
mov
clc
repnz
nop
nop
jae
push
push
cs
loop
int3
and
popf
test
nop
push
mov
leave
nop
jmp
add
fmul
xchg
ret
mov
clc
repnz
nop
nop
jae
scas
add
push
scas
add
adc
push
out
incl
ljmp
add
pop
add
xor
and
and
loopne
mov
nop
nop
jae
add
push
fiadds
add
pusha
jnp
clc
repnz
nop
nop
jae
add
add
add
lods
and
imul
cld
nop
nop
jae
scas
ret
inc
je
push
clc
repnz
nop
nop
jae
sub
add
add
inc
stos
nop
push
mov
leave
nop
jmp
dec
int3
mov
leave
add
subl
cld
nop
nop
jae
fisubrs
add
lods
jmp
add
cs
add
add
add
add
stc
add
jbe
roll
bound
xchg
ret
add
hlt
daa
xchg
push
inc
cwtl
ss
push
mov
xchg
ret
jns
bnd
int3
hlt
add
mov
clc
repnz
nop
nop
jae
fiadds
add
cmp
mov
xchg
ret
sbb
add
stc
imul
fmull
nop
nop
jae
movsb
repz
mov
popa
add
push
mov
xchg
ret
fldl
adc
add
add
push
mov
xchg
ret
imul
xchg
jno
push
mov
xchg
ret
cmpsb
add
add
xor
shr
clc
repnz
nop
nop
jae
dec
sub
es
sub
in
leave
nop
jmp
incb
add
fdivl
loopne
mov
xchg
ret
ljmp
mov
nop
push
mov
leave
nop
jmp
jae
in
jl
shlb
xor
clc
repnz
nop
nop
jae
add
inc
xor
clc
repnz
nop
nop
jae
hlt
add
hlt
repz
ja
lret
nop
push
mov
leave
nop
jmp
push
in
in
fiadds
sbb
in
add
add
std
add
pop
add
inc
dec
ja
adc
add
fcoml
mov
jne
cmpsl
lods
cmp
mov
dec
test
xchg
mov
xchg
jns
sub
adc
add
subb
jl
addb
add
sbb
jle
sbb
mov
fstps
jo
loopne
mov
inc
pop
imul
pop
test
mov
or
inc
data16
arpl
aaa
repz
or
loopne
sti
pushf
cmp
shlb
or
insb
rcll
test
mov
jnp
inc
pop
adc
or
ficomps
insb
xchg
add
adcb
push
repz
loopne
push
and
pop
jge
jmp
je
xlat
lea
push
xchg
lret
cltd
add
mov
movsb
shlb
and
push
and
add
dec
fwait
sbb
add
pop
xlat
ja
into
aad
cmp
arpl
lret
sarb
xchg
cmp
imulb
nop
sti
icebp
inc
jp
inc
and
xor
or
pusha
pop
or
mov
mov
inc
shrl
inc
and
setg
loopne
leave
xor
jp
cli
xor
sub
inc
nop
dec
ja
add
test
and
mov
cmp
or
and
int3
jae
sbb
fdivrs
jb
mov
roll
rorb
adc
dec
bound
stos
and
and
inc
add
clc
or
and
inc
imul
fs
pushf
mov
sbb
cmp
xor
inc
iret
scas
and
inc
lock
hlt
cli
ljmp
jb
sbb
shlb
jo
in
into
mov
inc
subl
fsubrs
shlb
pusha
fdivs
addb
jne
out
mov
xchg
movsl
sub
lods
and
dec
cmp
cmpsb
and
daa
movb
push
sbb
jl
and
and
addb
in
and
cmpb
push
shlb
mov
push
jg
rorl
pusha
inc
filds
in
lds
sub
adc
lock
stos
out
and
mov
inc
lret
push
jns
addb
adc
cmp
mov
and
addb
call
nop
adc
jg
inc
addb
scas
cmp
sbb
insb
xlat
inc
dec
in
stos
mov
push
rcrb
push
ror
scas
loopne
ret
int3
push
fiadds
adc
cmp
fstl
scas
mov
add
xchg
cmpsl
jae
fldenv
inc
in
insl
mov
xor
enter
dec
js
sub
dec
js
jns
and
out
fnstenv
push
je
cmpsl
ss
rol
divb
or
aad
or
xchg
out
test
in
into
adc
mov
and
adcb
pop
push
pop
cmp
and
mov
int
push
pop
bnd
mov
sbb
hlt
mov
jbe
mov
andb
mov
mov
adc
or
mov
cld
repnz
sbb
push
shlb
and
imul
mov
loopne
das
jle
sti
loop
push
imul
jns
cld
jb
cmp
fsubrs
mov
push
rcrb
xchg
outsl
imul
stc
aam
ret
loope
mov
pop
push
cmp
stos
loopne
daa
lahf
mov
test
adcb
mov
xor
andb
xchg
and
inc
sub
xchg
xchg
inc
inc
subl
jbe
jns
inc
jbe
push
shlb
mov
dec
jno
and
rolb
jle
mov
pop
stc
sub
loopne
mov
out
mov
rorl
adc
lahf
cmc
dec
sub
xchg
mov
std
or
lock
out
jle
sub
jge
mov
pop
pop
pushf
out
mov
mov
push
ss
sub
mov
jle
and
in
sub
loopne
fiadds
sub
lahf
push
stc
dec
xchg
push
pusha
pusha
dec
sbb
xor
dec
mov
loopne
pop
stos
rol
adc
das
ja
jo
in
adc
or
test
pusha
out
fldcw
push
aaa
lahf
push
mov
jno
mov
jnp
pop
outsb
xor
jns
adc
andb
pop
jge
dec
fldl
inc
rorb
pop
adc
dec
fs
mov
loopne
inc
inc
sbb
loope
mov
dec
pop
sbb
pusha
in
adc
ret
xchg
push
dec
out
in
pop
mov
mov
and
adc
add
pushf
pop
dec
das
sarb
adc
jno
dec
jbe
cmp
pop
adc
outsb
ljmp
loopne
mov
pop
gs
divb
mov
and
pusha
out
mov
loopne
ds
xchg
fistps
push
add
int
xchg
divl
ror
xchg
cltd
in
cmp
pop
fdiv
adc
and
mov
sbb
dec
xor
call
or
aaa
xchg
and
jle
push
jp
and
push
pop
dec
push
jp
add
idiv
cs
mov
xor
or
add
cmp
mov
loopne
jnp
mov
loopne
addb
jne
mov
add
pop
js
mov
test
and
push
nop
add
mov
lea
dec
or
mov
andb
mov
and
xchg
les
cli
mov
and
add
mov
mov
es
add
popf
mov
ja
div
sar
mov
sub
inc
and
fstl
enter
and
and
fucom
fwait
mov
add
xor
pop
daa
loopne,pt
sarl
cmp
mov
sbbb
orb
fnstenv
repnz
pop
cmpsl
or
mov
or
shl
xor
negb
out
pop
mov
jp
jne
aad
inc
into
test
orb
out
in
je
cwtl
stos
shlb
and
nop
insl
andb
cmpsb
add
adc
in
int
test
loopne
aam
mov
and
aas
ss
sbb
pusha
out
sbb
pusha
loopne
inc
repz
mov
jp
xor
push
leave
pop
sub
and
das
ret
ss
add
and
xchg
pop
loopne,pn
or
pusha
out
inc
sub
stc
cmp
test
inc
out
add
pusha
shr
mov
mov
cld
push
mov
mov
xchg
pusha
fcompl
dec
push
jbe
lret
mov
adc
mov
shr
test
and
dec
pop
jg
add
mov
fldcw
loopne
adc
push
pop
out
sahf
negl
xchg
lods
add
and
inc
into
mov
out
xchg
push
push
inc
mov
pushf
or
or
fxam
nop
ss
fs
ljmp
addb
sub
xorl
xchg
lret
mov
sbb
pop
andb
and
sbb
pop
pop
aas
jl
out
pop
jbe
or
add
mov
inc
cmc
aas
cmp
cmpsl
xchg
clc
pop
fnstenv
cmp
insl
pop
rorb
loopne
add
sub
rcrb
pusha
and
int3
push
xor
add
loopne
dec
lret
ret
outsl
xlat
xchg
fildl
sub
mov
fs
jo
push
clc
data16
mov
inc
pusha
push
andb
jae
jno
sbb
add
loop
lods
pusha
sbb
sbb
shrb
mov
mov
adc
add
lret
pop
cli
jmp
push
enter
fs
adc
sub
mov
jg
mull
inc
loopne
mov
add
inc
test
add
lret
add
shrb
xchg
xchg
scas
push
mov
insl
aas
lret
cmp
mov
ret
jno
inc
add
mov
add
mov
iret
and
pop
fcomp
add
jo
inc
mov
pusha
mov
mov
cwtl
pop
inc
dec
xor
sbb
xor
cmp
int3
movsl
xchg
nop
jo
add
add
or
cmpsl
jne
loopne
dec
ds
xor
and
iret
xor
mov
sub
sub
xor
add
out
push
jo
add
stc
int
add
inc
cmpb
loopne
sub
adcb
addb
std
ljmp
loopne
push
inc
xor
das
inc
inc
push
stc
fisubl
inc
inc
xchg
mov
rolb
fstpt
push
pop
sbb
xor
mov
stc
pop
mov
inc
and
sub
inc
push
lods
add
mov
hlt
int3
out
or
pop
pusha
inc
test
jnp
sti
mov
dec
out
xchg
icebp
stc
xor
mull
inc
int3
fisttpll
pop
shll
push
and
dec
or
sub
mov
jl
je
pusha
orb
imul
in
xor
mov
adc
mov
or
loopne
das
cltd
mov
push
cmpsb
pusha
rolb
xor
pushf
mov
xchg
aas
divb
xchg
andb
fldenv
add
inc
leave
outsb
andl
clc
stos
shlb
add
mov
loope
xor
scas
movsb
rolb
adc
shl
lock
jne
xlat
arpl
or
pop
pop
add
enter
outsl
pop
mov
mov
push
mov
cmp
mov
hlt
rolb
add
int3
cmp
cmpsl
stos
andb
dec
stos
testb
mov
loopne
shl
inc
scas
sbb
roll
in
pop
repz
les
adc
repnz
xor
mov
fmull
test
and
push
int
sub
and
in
add
sub
jb
sub
mov
jp
stos
loopne
jo
roll
inc
push
mov
inc
aaa
arpl
rcll
xlat
or
inc
ss
mov
pusha
jbe
gs
mov
rol
addb
and
addl
and
jle
mov
jns
iret
jno
out
pop
push
and
push
jnp
outsb
jl
mov
lock
dec
in
loope
movsl
neg
stos
pusha
inc
cmpsb
add
xlat
sub
inc
lock
imul
adc
jo
add
and
stc
ds
ret
bound
pusha
test
dec
fiadds
js
inc
call
psubusw
insl
push
mov
mov
adc
mov
loopne
std
mov
dec
sbb
dec
and
inc
popl
add
int3
jne
inc
sbb
mov
iret
neg
xor
or
loopne
shlb
push
fistps
and
imul
addb
out
dec
test
pusha
ret
inc
and
and
add
in
negl
mov
call
push
and
aas
shrl
das
call
jno
sub
daa
and
ret
add
js
loopne
andb
push
out
repz
add
stos
xchg
jle
in
sarl
out
rolb
mov
add
dec
cmpsl
test
sub
sub
or
adcb
loopne
flds
bound
addb
in
ja
addb
inc
fnstsw
cmpsl
dec
sbb
scas
add
je
sbb
cmp
shl
in
cltd
iret
popf
data16
sub
push
mov
jmp
and
idiv
in
dec
xor
and
inc
out
add
sbb
xchg
adc
scas
cli
or
in
and
and
mov
xor
add
pusha
and
fucomi
out
mov
rolb
pop
xor
push
pushf
mov
ret
lods
mov
inc
pop
add
loopne
cmp
ret
and
jmp
shll
shlb
shlb
daa
cli
jge
movsl
call
xchg
xchg
ret
icebp
loopne,pn
add
rolb
out
addb
leave
push
rolb
outsb
mov
adc
lcall
cltd
xchg
jnp
iret
mov
fdivrp
stc
dec
sub
xor
mov
loopne
loopne
das
out
inc
shl
popf
ljmp
and
mov
mov
out
outsl
lea
xlat
adc
pop
ficoml
and
mov
and
pusha
outsl
mov
xor
dec
fdiv
int
push
pop
cmc
cli
sub
xchg
ret
add
inc
inc
or
cmpb
mov
loopne
sub
outsb
leave
jle
int
es
push
or
jb
es
and
popa
inc
je
shr
notl
ja
pop
mov
cmp
mov
orb
push
xchg
not
mul
mov
dec
pop
dec
sbb
and
lret
cwtl
lods
shlb
push
shlb
xchg
loopne
mov
mov
sub
loopne
pusha
pusha
lods
rclb
sahf
ds
lock
mov
push
xchg
insb
inc
data16
cmp
je
ret
push
mov
add
mov
mov
or
xchg
and
fdivl
mov
sub
dec
mov
sbb
cmp
js
add
in
mov
sbb
test
and
test
dec
inc
sub
pusha
or
xor
inc
subl
mov
dec
cmp
jne
add
mov
and
fidivrl
push
pusha
in
outsl
shrb
and
fcmovnbe
cmc
jb
in
movsb
and
jns
sbb
sbb
cmp
loopne
test
cmp
rcrb
test
mov
adc
xchg
jae
in
jb
and
fwait
push
jp
and
adc
fs
insl
inc
xchg
add
xchg
repnz
mov
adc
cmc
adcl
mov
outsl
jecxz
aam
dec
or
add
xchg
sbb
fsubrl
dec
push
es
subb
sbb
add
adc
push
jmp
xor
jge
mov
movsl
mov
jmp
rcrb
mov
out
jnp
mov
adc
mov
cmp
mov
push
mov
sbb
mov
mov
mov
mov
push
negl
andb
shlb
and
inc
push
leave
adc
lea
jg
inc
loopne
mov
test
pop
sub
aaa
scas
ret
push
add
or
mov
dec
imul
sbb
push
mov
mov
data16
xchg
stc
hlt
out
push
test
loopne
popa
dec
dec
push
andb
add
mov
pop
sbb
mov
pusha
rcrb
outsl
adc
loope
jae
push
inc
pop
nop
cmp
sbb
jmp
cld
int
cld
gs
jg
push
pop
outsl
mov
js
cltd
add
xchg
adc
icebp
xchg
add
subb
scas
add
pop
cmp
inc
loopne
in
out
pop
ret
adc
and
pusha
inc
pusha
clc
roll
bound
mov
test
rol
dec
ret
ds
aaa
adc
shll
pushf
push
mov
push
add
and
rclb
arpl
dec
shrb
and
rolb
adc
or
es
cwtl
adc
stos
pusha
mov
decb
outsb
mov
ds
insl
enter
ja
shr
enter
popa
insb
arpl
mov
loope
ret
mov
xor
ljmp
fnstenv
xchg
shr
out
sbb
mov
mov
bound
push
mov
mov
popf
mov
push
inc
and
cmp
shlb
fists
or
pusha
cmpb
lahf
jns
pop
int3
sbb
mov
enter
in
add
or
mov
pop
sbb
dec
out
fstl
into
mov
out
fs
popf
pop
cmp
mov
das
mov
scas
cmpsl
andb
popa
mov
pop
sub
lds
and
test
inc
lock
lcall
fnstenv
and
adc
mov
pop
aaa
fcmovu
in
stos
pusha
loopne
imul
xchg
xchg
mov
inc
push
push
mov
dec
jne
ror
mov
inc
ja
fadds
xor
pop
push
fwait
stos
sarl
mov
add
and
inc
shlb
out
lahf
inc
or
test
das
and
add
adc
or
lods
shl
adc
addb
lret
loopne
sbb
pusha
and
popf
mov
mov
or
repnz
add
push
cmpsl
shr
jle
cld
mov
xor
pop
cwtl
jns
andb
lcall
mov
add
inc
mov
xchg
push
push
jg
les
add
cmc
push
or
and
pusha
pusha
push
repz
rorb
jo
mov
cmc
mov
inc
xchg
inc
mov
mov
push
sub
stos
inc
sarb
andb
and
lods
mov
mov
loopne
mov
mov
xchg
out
jbe
or
inc
or
mull
adc
addb
push
mov
add
loopne
jae
sub
add
add
loopne
xlat
popa
cmp
and
pop
mov
repz
mov
andb
xor
cwtl
repz
ficoms
outsb
aas
lods
loopne
inc
xor
lahf
cmc
out
adc
shrb
leave
adc
add
loopne
mov
xchg
fimull
movsl
enter
and
xchg
adc
push
inc
push
insl
inc
andb
push
andb
loopne
andb
xor
inc
insb
xor
xor
cmp
xchg
cmp
mov
add
and
sub
loopne
int
fadds
jp
push
jle
xlat
adc
mov
pusha
and
andb
xchg
subb
add
pop
scas
or
rolb
loopne
or
jmp
dec
xor
dec
popa
cmpsb
loopne
out
jne
stos
out
andb
inc
inc
cwtl
mov
inc
nop
jo
mov
and
mov
loopne
in
js
jge
pusha
add
popf
fisttpll
push
jmp
inc
xchg
pop
pop
push
lret
cmpsl
mov
and
aas
sub
sub
rolb
fwait
inc
xor
lret
lea
lahf
add
pusha
cld
ret
addb
js
dec
cmp
xchg
cwtl
fistps
mov
sub
and
test
insb
shll
jg
add
scas
rolb
or
loopne
lcall
pop
pop
mov
inc
adcl
cmp
rcl
cmc
sti
sbb
or
addb
add
xor
mov
xchg
mov
inc
idivl
jno
out
test
daa
popf
xchg
int
test
mov
call
loopne
out
mov
cwtl
pop
pop
push
jmp
repz
dec
ds
pop
mov
mov
loopne
mov
mov
cmp
pusha
mov
ljmpw
jle
andb
out
sarb
cmpsb
mov
mov
loopne
add
mov
inc
scas
mov
fistl
decb
cmpsb
mov
es
inc
pusha
int3
int
mov
mov
mov
mov
cs
add
orb
loopne
das
add
in
mov
jge
insl
leave
xchg
push
mov
add
cmp
xlat
cmc
jmp
loop
test
mov
pushf
jne
dec
push
or
xchg
gs
lahf
adc
add
and
inc
out
mov
mov
loopne
mov
loopne
xor
out
mov
jns
push
cmp
shr
add
mov
decl
dec
in
rolb
add
inc
and
stos
inc
loopne
add
gs
iret
addb
sub
mov
loopne
imulb
cmp
inc
shrb
scas
loop
shlb
rolb
scas
nop
cmp
ja
ja
insl
lods
adc
and
pop
fildl
outsl
outsb
sub
sub
orb
inc
lahf
push
mov
push
xchg
scas
pop
mov
ror
add
push
test
mov
paddusb
xlat
iret
cli
fmull
mov
mov
and
sub
jle
imul
add
mov
in
jecxz
adc
mov
mov
shll
lcall
nop
loop
loopne
pop
xchg
fadds
sub
into
inc
call
loopne
stos
cmpsl
bound
sbb
mov
or
inc
in
scas
jne
nop
or
jbe
add
lahf
cmp
test
mov
adc
out
push
test
add
mov
add
jae
ja
outsl
push
fucomip
movsl
or
add
mov
jecxz
ficomps
inc
outsl
add
dec
xor
inc
pusha
rcll
sbb
push
inc
and
inc
add
ja
cmp
sahf
mov
mov
mov
jle
jno
jbe
adc
or
rorl
or
shlb
loopne
jp
pop
xor
in
imul
andb
mov
sbb
sub
adc
dec
push
mov
inc
pusha
lret
mov
ret
add
mov
loopne
and
xchg
jg
ret
gs
inc
jnp
jne
stos
and
add
fs
mov
dec
inc
mov
mov
and
pop
mov
lds
loope
or
sub
mov
push
xlat
or
fucomip
aad
adc
mov
iret
xor
pusha
loopne
shlb
cmpb
cmpsl
push
das
pop
cmp
scas
sahf
dec
adc
fsubl
out
fldt
mull
in
insb
cld
jne
xchg
push
aaa
movsb
and
es
loopne
repnz
lods
mov
scas
shlb
out
imul
mov
std
pop
or
add
arpl
outsb
fwait
aad
mov
cmpb
shlb
and
or
inc
mov
addr16
cld
stos
inc
cmpsl
cmp
and
loopne
movsb
and
push
push
add
sub
insb
sub
rclb
loope
sub
inc
add
daa
jbe
lret
cli
aam
inc
inc
pusha
mov
cmovnp
rolb
decl
lcall
stc
mov
insb
add
loopne
mov
rol
mov
lea
xor
addb
add
addb
add
call
scas
inc
sbbb
inc
and
and
hlt
push
add
pusha
stos
cmpsl
sub
jge
inc
and
xlat
adc
int3
mov
fwait
jo
lea
add
hlt
lret
movb
mov
test
xor
stc
jle
xchg
fidivrs
push
cltd
cltd
addr16
loopne,pn
mov
fnstsw
mov
xor
pusha
sar
cwtl
aam
push
jmp
mov
lock
addl
jo
lds
mov
mov
addb
inc
pusha
add
das
jmp
mov
loopne
push
insb
in
stos
andb
sarb
jnp
lcall
movsb
rolb
push
outsb
add
sbb
sti
or
jg
outsb
test
shl
cmp
sub
arpl
push
adc
fists
xchg
lods
and
js
sbb
sbb
sbb
sbb
mov
inc
cs
shll
movsl
rcll
push
and
add
xchg
dec
and
shrb
pop
loope
add
pusha
scas
and
sub
mov
pusha
jnp
mov
dec
jge
xorl
mov
jnp
pushl
in
add
pop
stos
and
push
sar
gs
decb
loopne
add
and
rclb
decb
pusha
loopne
mov
mov
add
das
andb
loopne
jae
push
popf
adc
loope
cmovo
int
inc
insl
adc
cmpl
andb
lds
cmp
push
sbb
pop
inc
int
ret
dec
rclb
pop
sti
pop
push
sbb
sbb
and
and
xchg
shlb
pusha
loopne
inc
ss
enter
cmc
mov
loopne
lds
add
pusha
loopne
mov
icebp
cmp
stos
loopne
cli
or
add
inc
pusha
jmp
movsb
mov
add
and
and
or
loopne
push
mov
or
push
push
inc
add
rolb
mov
xor
in
or
shlb
inc
les
lret
pop
test
mov
hlt
mov
loopne
and
rolb
sbb
popa
push
add
sub
scas
inc
loopne
inc
loopne
lods
add
jge
mov
divl
sub
mov
sahf
lock
cli
fsts
in
pusha
inc
nop
incb
mov
mov
jne
cli
out
popa
insb
add
and
sbb
xorb
hlt
inc
jo
lds
incb
dec
lahf
call
xchg
xchg
in
shrl
fisttpl
add
jp
cwtl
popa
mov
add
addb
in
jecxz
lock
push
mov
add
pusha
inc
outsb
mov
or
mov
shlb
loopne
test
rorb
repz
frstor
frstor
adc
pop
adc
shlb
jno
and
loop
inc
inc
dec
ss
pusha
add
push
xchg
adc
sub
mov
sub
mov
out
scas
xor
test
aad
andb
cmp
mov
call
imul
shll
pop
mov
test
add
jle
aaa
scas
mov
pop
sbb
mov
addb
lcall
rolb
loop
aas
and
mov
mov
addb
lea
imul
mov
rcr
shlb
mov
sub
and
js
cltd
lods
inc
inc
push
mov
add
pop
xor
out
push
and
inc
pop
dec
pushf
idivl
jecxz
gs
fdivrl
add
je
lahf
fs
jmp
outsb
mov
loopne
or
andb
loopne
and
xor
divb
fcompl
in
jbe
js
mov
roll
les
inc
lock
inc
mov
pop
les
jnp
mov
pusha
pop
push
nop
loope
in
add
imul
jl
fildll
loope
pop
pop
mov
cmp
inc
ret
lcall
popf
movsl
cmp
cmp
arpl
mov
sub
inc
mov
sub
fnstsw
addr16
push
shlb
and
mov
cltd
pop
cmpsb
pusha
andb
mov
pop
mov
dec
jb
nop
inc
mov
sbb
ss
add
add
add
xor
lods
add
shlb
subb
cmp
fiaddl
xchg
cmp
loopne
pusha
stc
cmp
loopne
push
bound
popa
faddl
shr
inc
andb
mov
test
les
pusha
ss
cmp
or
andb
shl
inc
sbb
adc
cwtl
inc
aaa
push
inc
dec
rcll
mov
push
test
stos
loopne
hlt
xchg
push
lret
fcompp
xchg
sbb
and
outsl
sbb
hlt
lret
add
push
test
inc
pusha
sub
shl
pop
ja
pusha
ret
rolb
pusha
xor
mov
outsl
inc
cmpsl
je
push
xchg
mov
and
cmp
xor
pop
sbb
sti
cmp
inc
sub
in
add
and
or
sbb
out
scas
mov
push
rcrb
andb
std
pop
rcrl
mov
mov
and
shl
or
xchg
neg
inc
xor
dec
and
pusha
adc
jno
add
rcl
icebp
and
dec
sarb
in
mov
adc
or
sbb
and
or
js
cld
mov
jmp
inc
imull
push
lds
inc
call
into
xchg
jno
aaa
or
add
xor
in
dec
lock
scas
xor
es
pusha
movsl
sbbl
and
mov
add
cmp
addb
popa
jle
arpl
mov
adc
and
xchg
mov
sar
arpl
cwtl
add
inc
xchg
pusha
pop
testl
add
adc
pop
push
int3
sub
inc
testl
test
xchg
repz
andb
mov
in
inc
loopne
out
dec
xchg
test
add
push
rcrb
adc
loopne
loopne
test
sub
inc
out
pop
sbb
aas
sti
iret
inc
insl
mov
rcl
mov
lret
add
mov
sub
outsb
jo
call
and
mov
in
adc
pusha
inc
int
jg
loopne
xchg
add
mov
data16
inc
cwtl
xchg
fsubs
add
and
or
loopne
test
mov
inc
into
jmp
scas
lret
out
mov
loopne
xor
rolb
sbb
cmp
subl
shll
nopl
das
fsub
addb
andb
jnp
pop
aaa
cld
jno
sbbl
jbe
popf
xchg
sub
and
into
faddl
into
pop
jne
mov
sbb
dec
faddl
mov
fisubs
repz
arpl
pop
into
ret
mov
shrb
push
je
push
dec
lods
xchg
into
repz
pusha
and
mov
shl
ss
imul
loopne
add
and
xlat
outsb
mov
inc
lods
andps
pop
dec
das
leave
or
rolb
adc
push
push
sbb
lcall
mov
add
aad
inc
loopne
dec
lahf
in
inc
mov
repnz
or
mov
cmp
jne
cmp
inc
addr16
sbb
jo
ds
iret
aas
jge
xor
inc
xor
mov
sub
leave
and
and
mov
xchg
jmp
fiadds
mov
pusha
add
add
loopne
jne
jl
dec
jae
call
lret
shlb
repnz
inc
sbbb
pusha
pusha
sub
sbb
repnz
push
add
or
and
es
mov
sbb
into
mov
je
pop
xchg
adc
pop
add
imul
lahf
cli
pop
mov
andb
inc
or
movsb
addb
inc
cmp
inc
into
loop
jecxz
es
and
shufps
jmp
inc
add
jmp
rcl
cmp
inc
mov
xor
xchg
inc
add
dec
dec
pop
push
negl
aaa
ss
addb
repz
add
std
outsb
mov
sbb
cli
in
push
addr16
xchg
aas
jae
rolb
mov
adc
rolb
pop
ror
addb
rolb
pusha
loopne
sbb
jb
jnp
je
sahf
or
loopne
cld
mov
fldenv
mov
rolb
bound
jne
rolb
outsl
sbb
push
add
jg
mov
and
pop
xchg
dec
ss
inc
or
inc
add
pusha
pop
lahf
shll
and
inc
mov
add
pop
mov
pusha
orb
add
jge
dec
jp
add
add
push
or
and
mov
and
cmp
pusha
add
mov
cld
fistps
inc
sub
andb
mov
aad
dec
mov
add
dec
mov
rcrb
dec
mov
xor
mov
xor
pusha
shl
mov
ret
xchg
loop
jg
mov
cmp
mov
rolb
loope
leave
ret
pop
sarl
mov
ds
mov
and
loopne
xlat
cmpsb
inc
loopne
sbb
push
mov
sbb
mov
cmc
inc
xchg
fwait
or
mov
jge
pop
cltd
push
mov
xor
sbb
add
mov
mov
mov
mov
mov
jbe
adc
or
rorb
pusha
and
sarl
xchg
ret
pop
nop
scas
pusha
shr
roll
imul
and
push
ja
mov
push
mov
dec
sbb
aad
lock
xchg
and
inc
scas
add
and
movsl
dec
adc
in
andb
jns
mov
push
mov
pushf
in
sub
pusha
imul
inc
jne
cmp
cmp
fs
dec
pop
pop
out
mul
addr16
in
icebp
mov
xorl
xchg
movsb
loopne
dec
addb
ds
iret
jo
mov
negb
arpl
fisubrl
loopne
mov
insb
in
sub
sbb
icebp
lret
or
rolb
cmp
subl
push
cld
ret
cmpsl
jg
andb
xor
add
mov
mov
daa
stc
sub
or
aad
cmp
test
mul
inc
inc
jge
inc
aaa
scas
rclb
loopne
jge
test
loopne
fistpll
add
clc
test
loopne
push
sbb
add
inc
or
inc
rorl
xor
mov
mov
popf
or
and
cmc
enter
mov
inc
adc
jb
iret
rorl
mull
and
aas
push
shl
mov
lret
jge
arpl
lret
and
and
or
add
or
ror
inc
inc
inc
push
mov
and
or
or
andb
mov
insl
incl
xchg
fstpl
dec
xor
xor
mov
jnp
mov
imul
inc
les
add
mov
inc
loopne
mov
and
jb
cmp
adc
fwait
inc
inc
cmpsl
std
popa
ss
cmpsl
cli
iret
cmp
iret
push
lods
jl
lret
movsb
addb
pusha
inc
xor
push
in
leave
jmp
addb
in
xchg
orl
dec
push
jle
lds
pop
bound
andb
andb
inc
inc
ret
and
shl
rol
mov
add
rclb
xor
clc
iret
push
mov
pusha
inc
in
hlt
mov
sarb
insb
mov
popf
push
fchs
xor
loope
addb
lret
cli
jae
mov
rol
ret
mov
lock
inc
inc
mov
imulb
aas
or
xorb
enter
and
mov
out
or
pusha
add
pusha
dec
dec
mov
je
mov
cwtl
jmp
xchg
test
and
mov
dec
test
imul
fnstsw
repnz
cmp
sub
cmp
pop
mov
inc
and
lcall
mov
pusha
mov
stos
pusha
shl
loopne
ljmp
mov
pop
test
addb
push
out
and
pop
pop
jbe
xchg
jge
cld
dec
jo
clc
add
or
inc
imul
lods
mov
xchg
dec
icebp
out
add
scas
add
xlat
adc
fwait
enter
dec
jle
inc
inc
lds
and
push
rolb
movhps
in
mov
test
mov
jle
cs
inc
cmp
xor
loop
test
xor
outsb
sub
rorb
push
add
add
das
dec
clc
fdivs
dec
lds
loop
dec
enter
mov
push
sub
inc
andl
inc
pusha
lock
mov
jmp
aad
add
and
lret
out
pop
push
shlb
jb
add
mov
in
mov
or
loop
nop
sbb
fmuls
rolb
push
jle
iret
and
xchg
lret
lock
aaa
xchg
cli
pop
sub
subb
jns
add
test
sub
inc
mov
loopne
push
fsubrl
mov
xchg
jl
loop
fsubrl
inc
pusha
mov
pop
imul
insl
lgs
ficompl
or
subb
and
pushf
jmp
daa
mov
inc
add
xlat
addr16
sbb
and
inc
leave
test
rolb
shrb
add
jnp
cmpsb
mov
loopne
ret
sbb
out
shr
lods
mov
andb
pop
adc
faddl
and
bound
shlb
andb
push
roll
xor
cli
pop
mov
push
add
adc
loopne
inc
sub
rolb
not
xor
inc
mov
pusha
mov
sub
loopne
les
scas
loopne
mov
push
inc
fcom
mov
dec
pop
push
dec
jbe
out
adc
shlb
dec
pop
mov
jns
out
aam
loopne
negb
jp
adc
fistpl
ret
sbb
loop
cmc
xor
or
in
mov
push
shlb
fcmovne
sub
orb
in
ret
or
emms
fwait
outsb
dec
das
shlb
xor
inc
jp
mov
bound
imul
loopne
mov
and
xchg
add
pusha
xor
insb
xor
rclb
mov
ds
andb
adc
movsb
add
adcl
stos
add
jo
xor
pop
arpl
push
cmp
ljmp
xchg
aaa
mulb
sub
xchg
dec
mul
popa
pop
mov
outsl
rcll
and
and
outsl
jge
fs
xor
mov
int3
lea
inc
xorb
fcmovnu
stc
stc
into
mov
add
repnz
rorb
and
rcr
dec
xchg
and
jl
push
inc
sbbb
pop
popf
mov
and
add
or
add
mov
or
fwait
mov
mov
xchg
icebp
sub
hlt
test
and
dec
dec
stc
xor
xchg
pusha
push
es
add
mov
sarl
push
int
out
popf
lcall
icebp
mov
nop
fsub
inc
sub
dec
sub
addb
dec
int3
in
inc
mov
dec
xchg
cmpsl
xor
mov
loope
dec
jnp
add
add
push
in
mov
dec
sub
pusha
push
or
js
dec
mov
rcrb
mov
ljmp
out
daa
sbb
loope
push
inc
loopne
xor
mov
jp
inc
loopne
mov
and
add
shlb
pusha
xlat
adc
testl
push
jecxz
jle
cmc
std
inc
pop
fisubrl
inc
rcr
imul
in
adc
pusha
loopne
and
in
fldl
mov
sbb
and
jnp
int3
addb
pop
cwtl
mull
sub
and
loopne
cwtl
jecxz
lret
call
cmp
sbb
aad
dec
out
ja
and
and
mov
jno
ffree
inc
inc
pop
lret
sbb
mov
outsl
mov
test
add
rolb
xchg
mov
sbb
adc
rorl
sub
jl
pusha
shlb
sub
mov
push
sub
inc
pop
cmpsb
loopne
cmc
in
mov
mov
inc
jmp
daa
jb
xor
pop
push
ret
inc
jmp
test
outsb
lret
gs
jo
and
lods
mov
mov
fnstsw
xchg
fsubrp
cmp
loopne
xor
in
xor
xorb
sub
rolb
pusha
mov
sbb
sahf
cmp
sbb
mov
mov
out
das
mov
rcrb
movsb
shl
movsl
lods
addb
insl
and
pop
jo
cld
movsl
out
jb
shrl
orb
and
andb
inc
and
pusha
das
sub
stc
dec
andb
bound
mov
push
aam
mov
fwait
cmp
mov
xlat
or
sub
pushf
ss
push
add
jmp
xor
mov
and
pusha
loopne
pusha
shrb
out
daa
pushf
jmp
inc
add
shrb
pusha
in
mov
sahf
enter
call
and
addb
loopne
fwait
pop
call
fildll
and
int3
inc
adc
loop
shlb
ds
pusha
shlb
xchg
jge
leave
cmpsb
loopne
add
and
jmp
dec
loop
xlat
jb
ja
mov
xor
in
in
fildll
or
loope
pop
or
and
mov
mov
pop
js
jge
mov
shrb
sub
icebp
jmp
test
inc
sub
cld
inc
jns
inc
imul
stc
xchg
stos
arpl
movsl
test
aad
lock
loop
push
shlb
add
add
dec
jo
mov
pop
jo
mov
loopne
mov
int3
mov
leave
decb
mov
add
popf
popa
jl
shrl
andl
data16
dec
lea
inc
test
hlt
in
jg
rolb
adc
adc
scas
je
out
lds
int3
adc
loopne
jp
push
and
inc
inc
cmp
mov
xor
mov
in
rol
leave
not
mov
shrb
mov
cmp
mov
cli
mov
cwtl
aad
fwait
jmp
mov
lret
scas
inc
add
add
lcall
pusha
loopne
loopne
ret
nop
fisubs
shlb
mov
inc
aam
ljmp
sbb
or
rolb
pushl
test
or
push
xchg
mov
xchg
jns
outsb
cli
pop
in
push
cli
xor
mov
fidivl
jnp
mov
cmpsl
std
insl
sbb
sub
sub
fists
push
fwait
sbb
lods
xchg
mov
scas
add
call
lods
addb
and
adc
movsb
add
pop
jns
jns
jl
dec
fsts
ror
dec
jno
daa
or
gs
rcrb
inc
sbb
popl
lds
popa
push
mov
xchg
aas
cmc
daa
mov
gs
xchg
rcl
xchg
pusha
movsb
and
mov
or
mov
in
cltd
dec
int
mov
ror
aad
or
xorb
ljmp
andb
lret
sub
mov
add
repnz
int
repz
cmp
cmp
sub
call
push
mov
add
pop
dec
shlb
add
add
sahf
stc
imul
in
cs
and
rolb
mov
dec
or
fs
idivl
push
add
insb
out
lock
aaa
or
out
test
and
pop
push
outsl
cmp
sub
and
cmp
loopne
aaa
adc
loopne
add
sub
pusha
lret
pusha
arpl
iret
in
xor
inc
test
xorb
call
lret
rolb
fs
loopne
xchg
mov
pusha
pop
out
hlt
mov
dec
pop
cmc
fs
cmp
int
nop
sahf
mov
loopne
mov
xchg
popf
and
and
mov
add
fsubl
inc
lods
lahf
fildll
js
add
sub
rorb
add
push
pushf
add
xorps
cmpl
xor
mov
aas
dec
out
jmp
loopne
push
lcall
test
sub
mov
jmp
jb
cmp
std
addb
lock
das
out
adc
inc
pop
sahf
mov
sbb
aaa
adc
mov
out
jmp
dec
aas
hlt
fwait
mov
inc
mov
jmp
and
jg
lods
addb
mov
lods
inc
fisubl
scas
loopne
ret
dec
lcall
add
inc
ds
push
incl
arpl
sub
jbe
ret
sbb
stos
loopne
cmp
dec
dec
push
and
xor
pop
int3
sub
shrb
push
cmc
test
rclb
xor
test
addl
insb
int
loop
hlt
xchg
pop
or
fsubrl
or
xchg
adc
pop
or
jbe
xor
inc
cmp
and
cmc
das
js
mov
nop
je
addb
pop
aam
in
int3
popl
pusha
pop
mov
push
data16
push
jae
push
fwait
out
jg
ficoml
loopne
pop
in
pusha
loopne
loop
lods
mov
shlb
inc
call
dec
dec
adc
push
popa
rorl
andb
loopne
shrl
loopne
adc
leave
xor
dec
inc
repz
sarl
popa
lcall
xchg
dec
cwtl
ret
pusha
xorb
add
out
cmp
insb
call
add
mov
jno
pop
jg
arpl
es
icebp
loop
inc
rcrb
movsb
and
or
cli
mull
inc
ja
jle
fwait
mov
xchg
fstl
pushf
test
mov
shll
and
js
insb
rclb
add
out
inc
in
mov
push
ds
add
jle
popf
aad
mov
sbb
lcall
pop
ret
or
mov
cmpsb
andb
mov
mov
lcall
mov
mov
sub
ficoml
shlb
hlt
fchs
inc
pusha
lahf
repz
xchg
imulb
addr16
out
cmc
cmp
out
cmp
inc
les
mov
mov
fdivl
js
mov
loopne
loope
inc
cmp
jg
addb
faddl
dec
pop
mov
outsl
inc
push
cmp
fidivrl
mov
lret
and
push
aam
int
lea
and
mov
jl
adc
push
pop
out
popa
addb
movsl
jmp
call
test
and
mov
out
cmp
fcmovnbe
dec
inc
mov
jle
sub
mov
dec
gs
push
ja
mov
insl
cmpsl
cmp
xor
lds
inc
mov
andb
rcrb
rolb
fists
cmp
jg
cltd
fstp
mov
inc
insb
xor
repnz
repnz
xchg
push
mov
mov
pusha
inc
jns
sbb
mov
sbb
cmpsb
pusha
add
and
and
or
out
fwait
pop
jne
out
imul
pop
xchg
mov
push
and
fwait
shl
call
js
dec
icebp
sti
cld
negl
fsubrl
xchg
popf
xchg
fldl
dec
dec
push
iret
je
and
and
mov
push
popa
add
andb
add
out
andb
test
loopne
stos
andb
or
mov
and
xor
mov
dec
aaa
add
pusha
and
iret
dec
icebp
outsl
jbe
rcr
dec
test
mov
pusha
movsb
inc
rolb
inc
test
pusha
mov
loopne
lea
inc
and
adc
cmp
data16
loop
inc
inc
fistps
shl
icebp
popl
and
arpl
and
adc
in
push
pop
xchg
lods
mov
jns
mov
cmpsl
sahf
xchg
xchg
pop
mov
cmpsb
and
lahf
pop
iret
ljmp
and
ljmp
add
add
inc
cltd
push
inc
and
ret
pop
dec
jg
mov
shlb
xor
gs
xchg
mov
adc
add
cmp
daa
out
addr16
mov
loopne
mov
cmp
lea
out
push
cwtl
test
mov
iret
incl
inc
push
pusha
scas
adc
imul
je
scas
rolb
pop
pop
divl
bound
incl
pop
cs
sbbb
aas
xlat
lahf
imul
popa
and
push
rolb
repz
jnp
pop
loop
mov
xor
scas
add
enter
mov
mov
dec
int3
insl
and
add
lds
or
mov
mov
rclb
aad
leave
addl
dec
mov
insl
test
loopne
cmpsl
mov
mov
dec
stos
jno
pushf
xor
inc
adc
mov
stos
ds
pop
sub
cmp
pusha
and
mov
xor
pop
mov
inc
aam
add
add
pop
out
jmp
push
andb
and
mov
into
stos
andb
in
out
mov
adc
aas
enter
push
and
in
idivb
pop
mov
test
jecxz
lea
movsb
inc
and
mov
lds
loopne
jbe
test
add
insb
sub
cmpsb
loopne
stos
add
andb
loopne
mov
ret
sub
pusha
ds
mov
shlb
dec
int
inc
mov
inc
and
subb
outsl
xchg
lcall
inc
loopne
mov
adc
ljmp
mov
jmp
lods
pusha
mov
pusha
std
mov
daa
data16
les
add
ret
mov
loopne
xor
or
add
fwait
adc
mov
daa
loope
push
jb
xchg
pusha
pop
ds
shrl
xor
shrb
mov
or
push
addl
scas
shll
shlb
outsb
or
pusha
outsl
ds
jp
shlb
sub
mov
mov
call
les
loopne
mov
and
xor
loopne
mov
and
subb
and
cmpsb
mov
rorl
adc
sub
adcb
or
shrb
test
sbbb
push
add
adc
daa
fs
outsb
add
pop
cmp
mov
xchg
testl
cmp
dec
ret
jne
mov
ret
fsts
test
mov
pop
pop
mov
xchg
rolb
jl
scas
shlb
sarb
pushl
mov
mov
rcl
pusha
filds
pop
rcr
mov
shlb
shl
xor
rorl
pop
mov
loopne
inc
cmp
movsl
and
loopne
push
loopne
roll
jo
mov
mov
cli
stos
andb
out
pop
push
pop
popf
push
movsl
insl
jg
aam
fsubr
pop
jle
lds
mov
push
bnd
sbb
pop
sahf
lcall
pop
add
sarb
or
shlb
jb
fneni(8087
inc
xchg
sbb
add
push
scas
and
imul
add
mov
dec
xchg
lods
and
mov
and
sub
jl
inc
pusha
ss
jle
outsb
adc
add
stc
ret
inc
shl
cmp
vcvtdq2pd
std
push
loopne
aad
add
pusha
xor
add
and
mov
mov
push
pop
mov
mov
add
std
jg
pop
in
dec
clc
loop
and
mov
mov
out
aam
push
mov
das
and
add
mov
add
add
cmc
jns
xor
rcll
dec
nop
push
inc
push
jnp
or
shl
add
jb
sarl
xchg
js
stc
test
mov
push
pop
loope
push
inc
loopne
pusha
jnp
imul
call
sti
xor
inc
rolb
cmpb
add
mov
jb
pop
pop
js
jp
fwait
push
xchg
add
clc
mov
xor
jne
lds
inc
cmp
cmp
jp
mov
outsl
aaa
loop
push
pop
mov
xchg
pusha
or
fstps
andb
sub
mov
mov
pusha
pusha
aaa
jnp
push
inc
loopne
fiadds
rolb
and
stos
andb
cmp
test
loopne
mov
push
ret
mov
movq
mov
insl
dec
fdiv
insb
in
lods
addl
adc
inc
data16
fisttpl
lods
and
mov
add
loopne
cmp
shl
mov
and
ds
mov
and
loopne
insb
xchg
loopne
std
inc
rolb
dec
jecxz
or
add
es
sub
outsb
mov
jp
movsl
outsb
sub
shlb
subb
ret
je
and
add
into
lods
loopne
or
mov
dec
push
pop
mov
add
lock
loopne
pop
xor
add
xor
pop
aam
sahf
loopne
add
rolb
addl
test
mov
emms
scas
aaa
nop
mov
shlb
pusha
xor
pusha
and
mov
jne
out
fwait
notl
ss
cmp
cmp
data16
in
out
aas
sub
add
mov
lahf
or
incl
pusha
and
mov
inc
icebp
sbb
fwait
add
xchg
sub
and
push
sti
idivb
push
fistl
loop
add
jnp
push
and
repnz
jl
loopne
imul
test
fdivrl
loopne
into
jns
add
sarl
pusha
addb
shl
pop
sub
jne
mov
add
out
cmc
loopne
and
dec
imul
jb
jmp
push
imul
out
push
andb
test
and
xor
push
mov
shl
andb
or
pusha
ret
pop
mov
add
fcmovbe
lods
mov
push
lods
arpl
mov
sbbb
rolb
xor
inc
cmp
shlb
nop
push
pop
incl
pushf
jle
ret
aaa
out
sti
jmp
clc
stos
popa
push
cli
lret
and
inc
fists
call
pusha
insl
mov
aaa
xchg
andb
sarb
sti
test
add
outsl
leave
les
fidivrs
xor
dec
cwtl
in
sub
dec
mov
test
sar
shlb
mov
rcr
rolb
pushf
mov
pusha
adc
test
loopne
pop
cmp
cld
jmp
mov
aas
fsubrp
cmp
mov
fdivrs
xchg
loopne
pop
div
mov
test
add
sub
and
jae
jae
or
movsb
pusha
shlb
push
inc
push
add
dec
jnp
cmp
fdivs
pcmpeqb
mov
das
rorb
mov
adc
insb
fsubrs
leave
arpl
adc
add
sbb
push
out
pusha
clc
ljmp
mov
xlat
fwait
jecxz
push
loopne
loop
add
rolb
pusha
inc
push
mov
inc
push
inc
cmp
mov
xor
xchg
ja
xor
mov
mov
add
loopne
mov
adc
cmc
lcall
lahf
xchg
mov
xchg
sbb
loopne
and
loopne
lods
rcrb
aas
repz
sub
add
jecxz
jno
or
orb
sub
push
inc
bound
sub
mov
rolb
lcall
add
int
mov
or
je
pop
imul
mov
sbb
insb
mov
inc
cmp
xchg
movsl
xchg
mov
jp
and
shlb
ss
dec
add
andb
test
mov
mov
inc
movsb
inc
orb
push
or
pusha
pop
cmc
inc
sbb
shll
or
mov
jne
sahf
push
pusha
pusha
pop
xlat
movsl
je
js
mov
xchg
mov
cltd
add
outsl
stos
cwtl
fidivl
inc
xchg
inc
dec
out
push
inc
loopne
popl
in
stc
pop
inc
xor
sub
add
jge
jb
fidivrl
and
hlt
and
xchg
adc
push
adc
sub
pop
popa
pop
mov
jns
cltd
dec
mov
loopne
or
lret
rcrb
inc
jp
or
shlb
stos
push
mov
adc
shlb
movsb
mov
inc
imul
test
jle
sbb
adc
pushf
mov
and
mov
loopne
add
add
dec
dec
pop
cs
shrb
push
add
mov
lcall
cmc
adc
pop
pop
dec
aam
loope
push
xchg
sahf
mov
push
add
mov
and
push
push
int
adc
sub
loopne
cld
xor
rolb
xor
or
jmp
loopne
std
or
shlb
and
jge
stos
inc
enter
sub
mov
and
movsb
rolb
ss
xchg
push
loope
mov
lahf
push
jl
jns
mov
pusha
inc
lret
inc
insb
test
adc
mov
repnz
push
mov
mov
mov
shl
out
pop
addr16
aam
loope
push
pop
push
or
add
mov
rcrb
bound
pop
adc
fbld
mov
push
inc
inc
ljmp
mov
mov
mov
dec
mov
stos
pop
test
sbb
xor
lods
fstpt
cld
jecxz
pusha
mov
loopne
cmp
mov
pop
dec
aam
pop
dec
test
andb
hlt
mov
lcall
mov
and
outsl
xlat
repnz
mov
add
push
mov
fwait
sub
gs
add
imul
loopne
xor
call
sbb
data16
push
xchg
pop
lret
pusha
pusha
jecxz
inc
sbb
mov
cld
mov
sub
into
dec
cltd
add
loopne
inc
push
mov
cmp
xor
or
pusha
js
mov
xorl
nop
sbb
jge
push
inc
rolb
mov
rcl
lcall
ja
dec
jns
and
xchg
mov
das
cmp
add
daa
lods
pop
mov
pop
ror
or
sarb
popf
xor
xchg
mov
pusha
enter
pop
jae
and
xchg
repnz
mov
aad
xchg
xor
xchg
std
cmpsl
inc
fwait
mov
and
mov
jne
das
xlat
push
shll
addr16
mov
mov
add
ds
sbb
add
pop
or
outsl
xor
in
or
xchg
imul
xor
ds
mov
das
mov
and
rol
mov
or
addb
das
add
lods
sbb
shl
push
xor
fldl
loopne
add
in
jmp
sub
mov
cmp
add
and
mov
shlb
jne
jg
jg
mov
push
mov
xor
pusha
loopne
ljmp
mov
mov
dec
ja
xchg
add
jl
push
xchg
pop
aam
mov
xchg
cs
add
cld
inc
fldcw
jg
popa
mov
push
xlat
push
jbe
and
cli
push
sbb
add
loopne
xor
inc
pushf
dec
ret
mov
mov
ja
mul
sub
add
dec
fsubr
out
fmulp
xchg
shrl
sbb
cli
cmp
mov
cli
jp
nop
and
inc
pop
stos
dec
push
out
mov
into
loopne
mov
shlb
fsubrs
cmpsb
add
lods
mov
fs
pop
sbb
jno
adc
pop
jo
lret
jo
inc
shl
dec
mov
loopne
loopne
mov
sub
mov
adc
pop
cmp
mov
xchg
mov
dec
fdivp
xor
xor
inc
sub
addb
inc
das
mov
xchg
mov
notl
mov
mov
pusha
xorb
andb
lcall
inc
stc
in
jl
add
mov
jg
addb
mov
insb
mul
test
iret
jb
sar
jp
hlt
cltd
stos
andb
or
shlb
push
aas
mov
cmp
adc
popf
adc
ret
daa
leave
inc
push
pushf
pop
es
insb
xor
loopne
imul
pop
mov
pop
jmp
cs
xorb
cmp
and
dec
shlb
xchg
scas
and
subb
cmp
outsb
jmp
mul
jo
lret
mov
jmp
inc
lods
test
mov
inc
push
push
rol
jecxz
jmp
xchg
push
mov
jmp
mov
cmp
out
inc
and
inc
add
sarb
adc
pop
ja
ss
add
inc
xchg
rclb
pop
adc
add
jns
into
sbb
sbb
cwtl
sahf
or
inc
add
add
loop
and
sub
sar
out
xor
mov
and
call
adc
or
push
ret
inc
and
pusha
add
jp
mov
pusha
pusha
pushf
fwait
mov
xchg
cmp
test
xlat
pushf
lcall
adc
ja
mov
mov
xchg
and
xor
in
shlb
sbb
xchg
movsb
andb
inc
mov
divl
mov
insl
xchg
lock
shr
outsb
mov
lret
push
and
ja
and
out
popa
cwtl
js
dec
pop
ja
ljmp
out
out
bound
mov
mov
bound
fdiv
out
or
add
addb
fmull
push
inc
cmpb
loopne
sbb
pusha
stos
xchg
mov
subb
out
mov
test
rol
mov
std
lods
andb
xor
dec
and
sarb
ret
mov
xchg
push
pusha
shrb
xchg
sbb
nop
adc
in
mov
inc
mov
insb
push
dec
dec
dec
andb
shll
scas
add
cmp
inc
mov
push
cwtl
hlt
mov
rclb
add
arpl
stc
dec
cwtl
insb
inc
push
and
cmp
pusha
nop
ret
push
add
and
loopne
imull
test
loopne
adc
or
ss
pusha
inc
and
inc
insb
lock
push
jmp
mov
addb
sub
inc
pusha
mov
loopne
adc
dec
jbe
mov
fisubs
xchg
lcall
jmp
inc
and
aas
stc
int
loope
dec
add
add
loopne
or
outsb
pop
mov
shlb
in
mov
or
add
shrb
lcall
loopne
lods
adc
mov
sbb
dec
xor
adcb
ljmp
das
iret
fwait
mov
or
inc
xorb
or
loopne
addl
adc
imul
hlt
pop
jbe
nop
lods
das
test
loopne
xchg
sti
fxch
aam
dec
mov
rolb
jl
dec
lods
addb
and
outsl
lahf
sti
out
pusha
and
xchg
aam
test
sub
js
je
adc
dec
push
push
pop
pop
mov
cltd
jge
inc
or
jmp
xlat
and
loopne
add
es
sbb
pop
pop
pop
js
xor
sub
in
push
sub
mov
pusha
enter
mov
stos
mov
inc
out
jne
dec
jmp
cltd
sbb
in
mov
call
shlb
pop
mov
and
fcoml
ret
dec
insl
pop
lret
dec
sub
add
and
bswap
mov
pop
ret
mov
arpl
andb
pusha
hlt
cwtl
ds
mov
push
fdivl
mov
pusha
inc
and
arpl
push
inc
cld
add
inc
xchg
push
add
dec
push
in
aad
dec
jo
push
testb
rorb
inc
mov
xchg
pop
inc
push
cmpsb
pusha
inc
push
mov
enter
add
add
pop
gs
mov
cwtl
in
test
hlt
dec
icebp
sub
pop
gs
ret
fldenv
jg
ret
lods
mov
cmp
fidivrs
push
stc
pop
test
push
add
push
je
stos
mov
cmp
nop
int3
incb
jg
dec
cmc
cmp
cmpsl
inc
cwtl
cmp
out
pop
fildll
and
inc
pop
pop
or
xor
es
jo
shrb
lret
daa
add
subb
inc
cmc
cmp
add
push
lock
pop
and
inc
cmp
adc
repz
mov
cmp
shll
rcrb
push
movsb
and
xlat
mov
xchg
mov
inc
jae
mov
mov
insb
insb
add
fists
sbb
dec
shll
inc
ja
add
pusha
nop
inc
and
xorb
pusha
shlb
filds
ret
xchg
sbb
and
addb
int
sub
push
rol
clc
mov
push
daa
or
mov
and
cmc
mov
js
inc
mov
xlat
xchg
add
hlt
xor
and
in
push
pusha
and
and
inc
and
and
or
rcrb
jge
xchg
daa
inc
jle
xchg
jbe
push
mov
push
xchg
sti
pop
jne
insl
and
lret
and
aad
iret
insl
in
cmc
notl
sbb
push
dec
adc
jnp
fdivl
adc
scas
jecxz
mov
pusha
lahf
jno
mov
js
divb
cmp
lock
in
cmpsl
pop
mov
mov
cmpsb
add
xchg
in
pop
xchg
and
clc
and
je
rcr
and
xor
aas
xchg
xchg
push
loop
xor
dec
pop
xor
or
and
pop
mov
shr
sub
loopne
int3
je
es
adcb
and
divl
jmp
dec
sbb
repnz
cmp
and
jp
imul
aas
xor
ja
and
dec
ret
xacquire
lcall
cmc
in
clc
mov
inc
pusha
pop
ret
and
lea
cmp
jae
loopne
fldt
shlb
outsl
out
das
ret
loopne,pn
daa
insb
cmpsb
pusha
mov
fwait
cmc
sbb
dec
or
add
pusha
loopne
iret
add
loopne
push
mov
movb
sbb
and
icebp
fldcw
cmp
xchg
add
or
pusha
jmp
dec
divb
pusha
jp
mov
aad
mov
test
jecxz
mov
andb
shl
and
xchg
je
lcall
jne
add
shrb
inc
pop
mov
inc
fwait
dec
les
cwtl
stos
dec
sub
mov
inc
fmuls
and
xchg
int
push
das
pop
testl
add
ret
sub
jb
adc
scas
mov
push
fisubrs
jge
mov
add
jbe
add
inc
loopne
nopl
fdivs
daa
shrl
and
fnsave
mov
jb
pusha
and
outsb
mov
lea
push
inc
push
stos
push
shlb
and
orb
add
sbb
jecxz
and
lcall
hlt
mov
fs
bound
xor
and
fisttpll
insb
ds
add
mov
addr16
mov
lahf
fists
dec
fisubs
pushf
in
or
jp
loopne
add
adc
icebp
and
loop
jbe
push
or
addr16
mov
push
mov
lahf
fdivl
add
pusha
js
mov
mov
test
loopne
push
and
inc
push
add
xchg
mov
adc
dec
xor
dec
xchg
mov
add
mov
stc
enter
jecxz
loope
xor
add
andb
cli
dec
sbb
jl
fistpl
ljmp
lret
lret
mov
and
dec
sub
mov
inc
faddl
push
decb
add
jmp
cmpb
aam
test
cmpb
and
xor
fdivrs
fdivs
fnstcw
cmp
fidivrl
jae
add
andb
mov
xchg
bound
dec
or
addr16
mov
mov
mov
pop
leave
imul
pusha
je
cmp
mov
out
push
negb
inc
adc
mov
loopne
and
pop
cmp
mov
inc
add
pusha
add
popf
cld
inc
push
inc
loopne
aad
repz
lock
ljmp
xor
arpl
fidivl
pop
in
loop
xor
pop
push
aas
shlb
mov
add
lods
add
pusha
fldl
or
xor
imull
and
or
mov
int3
iret
aas
inc
shl
push
add
in
bound
cs
aad
mov
outsb
lret
aaa
mov
jg
popf
adc
pop
lock
inc
xor
repz
sbb
xchg
mov
stos
mov
pop
cmp
mov
jae
and
and
cmp
mov
inc
mov
nop
mov
mov
inc
inc
xchg
lcall
cld
sbb
lret
push
pop
into
insl
in
outsb
inc
mov
and
xchg
jmp
repnz
shlb
pop
lahf
cwtl
pop
cmp
out
push
pop
addr16
dec
add
aaa
push
repnz
mov
ror
test
mov
aad
xchg
jg
jg
mov
or
loopne
jae
mull
sbb
roll
int
inc
push
loopne
jp
pop
rcll
adc
call
xor
outsb
cld
clc
popf
jnp
mov
add
dec
fidivrs
push
and
popf
jecxz
and
pop
sti
pop
into
sahf
fiaddl
and
das
pushf
mov
xchg
jge
mov
xchg
cmc
rolb
andb
xchg
scas
mov
rol
mov
popf
jo
jmp
mov
cmpsb
pusha
mov
mov
inc
adc
rolb
mov
inc
adc
repnz
jae
xchg
xor
enter
jp
pop
shlb
cmp
in
scas
mov
jp
add
xchg
xchg
push
jmp
addb
shr
or
xlat
or
in
mov
shlb
pop
inc
in
xchg
in
jo
cmpsb
loopne
jmp
sti
or
lret
mov
addr16
shlb
push
dec
mov
sub
pop
aam
out
test
mov
inc
adc
fadds
pusha
lret
data16
insb
inc
mov
pusha
and
dec
lret
mov
add
mov
lods
or
cmpsb
loopne
mov
sbbb
add
inc
pop
pop
ja
jno
sahf
jo
and
inc
fisttpl
jp
mov
push
enter
mov
jno
add
fistl
frstor
pop
cmp
int3
sub
rcl
mov
lea
xchg
pusha
mov
rol
dec
adc
mov
and
add
stos
sbb
stos
add
jmp
pusha
rcr
push
jle
cmp
bound
inc
pusha
mov
insl
cmp
mov
popa
add
inc
repnz
mov
jmp
pop
xchg
or
popf
jbe
and
mov
loopne
xchg
stos
add
fdivrp
xor
push
outsl
shrb
inc
inc
jns
lcall
sbb
cmpsl
jnp
add
andb
stos
loopne
pop
in
in
repnz
loopne
cltd
jg
aad
sub
add
mov
mov
dec
xchg
scas
and
and
fisttps
inc
imul
mov
inc
push
pusha
inc
in
popa
les
pop
sub
inc
aad
rol
out
and
dec
daa
jl
out
mov
imul
sbb
lods
cmp
dec
cwtl
inc
adc
add
repnz
and
xchg
negl
ds
cwtl
and
xor
xchg
out
jp
lock
loopne
out
sbb
and
andb
add
mov
add
in
insl
xor
xlat
scas
add
ficomps
sbb
test
mov
cli
out
ss
mov
iret
adc
pusha
sbb
or
mov
or
mov
movsl
xor
cmpsl
pop
add
sub
pop
arpl
ds
sar
aaa
fildll
pop
dec
push
jmp
mov
mov
xchg
mov
pop
nop
into
fmull
and
sti
dec
mov
daa
cmp
mov
out
lcall
mov
roll
lahf
or
loopne
ss
cmc
movsb
addb
rolb
and
fs
or
subb
cmp
pusha
cmpsb
and
mov
or
add
movsl
push
or
pusha
aad
movsb
rol
hlt
jp
ret
mov
pop
jae
in
jnp
addb
sti
insb
mov
popa
lcall
adc
in
stos
add
data16
add
mov
pop
push
andb
jg
push
add
imul
and
int
imul
mov
mov
push
cmp
cmp
push
push
outsl
dec
xchg
jnp
mulb
test
mov
ficomps
pop
fwait
push
add
push
push
mov
aas
lea
jae
mov
mov
jl
push
fdivs
pop
mov
mov
pop
mov
push
shl
insb
je
and
jnp
mov
push
xor
movsl
jp
inc
shlb
and
cmp
or
movsb
mov
pusha
loope
stc
lahf
sti
clc
scas
xchg
pop
sarb
cmp
add
fildll
inc
inc
arpl
test
call
and
and
pop
mov
outsb
xchg
shlb
cmp
imul
mov
fcomps
xchg
and
adc
and
mov
mov
repz
int3
maxps
int
jl
dec
adc
aas
sbb
shll
inc
inc
outsl
xchg
nop
sbb
andb
fwait
mov
or
jp
mov
lea
cmc
jle
das
jnp
addr16
inc
inc
xor
push
lods
lock
lcall
pusha
out
xchg
insb
add
inc
pushl
out
xchg
jl
rolb
and
push
sbb
shll
xor
cmp
sbb
notl
jmp
jb
xor
dec
andb
xchg
ss
xchg
sbb
sub
add
jg
or
inc
clc
mov
loopne
cmovnp
push
icebp
mov
and
fldcw
orb
call
in
mov
and
cmc
or
mov
dec
adc
adc
mov
mov
adc
xchg
loope
mov
fsubp
jbe
test
mov
je
or
out
shrb
cwtl
aad
sub
nop
lods
add
rol
outsb
imul
add
rol
and
andl
push
sub
mov
fs
push
pushf
ss
outsb
ds
xchg
pop
orl
dec
fsubl
or
aad
cmpsl
jle
adc
and
xor
insl
xlat
jo
add
inc
jns
sub
loopne
nop
mov
pusha
adc
add
insb
sarb
and
inc
cmc
and
popa
fcmovne
jl
loop
mov
ljmp
fcoms
in
or
and
imul
and
sbb
sbb
and
shlb
mov
push
cmp
ds
fadds
sub
xchg
jmp
aas
into
lods
outsl
gs
andb
jo
mov
cmp
push
mov
pop
inc
dec
ljmp
mov
ss
sub
jmp
and
mov
orb
dec
repz
mov
jns
mov
mov
pop
and
orb
inc
ljmp
bound
repz
andb
repnz
xchg
fs
clc
shll
cmc
add
inc
iret
jbe
jo
mov
sbb
adcb
inc
adcb
addb
fildl
idivl
insb
frstor
mov
push
push
jno
push
outsb
stc
pop
mov
arpl
mov
mov
mov
add
xor
jb
shlb
loopne
inc
inc
cmp
pusha
je
adc
pop
test
xor
icebp
mov
and
mov
loopne
dec
ss
add
sbbb
jb
loopne
fildl
xchg
loop
shlb
mov
pop
add
mov
add
inc
sub
loop
mov
aad
push
inc
pushf
mov
frstor
add
dec
imul
and
push
xchg
and
shll
push
arpl
adc
dec
add
call
push
sbb
loop
xor
outsl
push
cmp
leave
pusha
inc
add
cmp
cmp
pop
dec
mov
fidivrl
je
pop
jl
mov
fistl
je
mov
ja
inc
loopne
and
loopne
dec
push
pop
mov
pop
jbe
mov
jle
mov
dec
scas
test
add
adc
or
ja
addb
out
fadds
mov
jb
xchg
add
stos
add
shrb
and
test
jge
dec
jl
add
inc
push
add
push
out
sub
pop
and
cmp
cli
leave
movsb
inc
add
dec
add
sbb
sbbl
imulb
addb
pusha
repnz
pusha
pushf
es
and
push
adc
xchg
xchg
cmp
pusha
and
push
or
icebp
nop
ficoms
pop
pop
lret
add
jle
push
insl
je
and
loopne
cmc
in
xchg
jp
loopne
add
jg
xchg
shll
pusha
les
mov
hlt
clc
and
vmwrite
add
nop
mov
cmp
lahf
popf
pop
iret
mov
and
inc
sub
pusha
daa
push
or
cmp
scas
rolb
sar
xchg
cmp
shlb
pusha
and
mov
xchg
movsb
pusha
and
pop
push
pusha
rol
push
loopne
dec
xor
adc
inc
sbb
cmp
cmc
mov
shlb
inc
xorb
cmpl
mov
pusha
in
or
cmpsb
and
or
cmp
mov
cwtl
pop
in
popl
inc
mov
movsb
add
stc
mulb
andb
xorl
call
xchg
nop
xor
rorb
add
inc
sarb
and
testl
pop
mov
pop
push
insb
addb
xchg
jge
xchg
scas
mov
jo
int
decb
xor
add
mov
je
mov
aam
notl
iret
in
sbb
inc
outsb
in
clc
xor
and
xchg
adc
jo
cmp
bound
xchg
add
mov
push
call
inc
lcall
into
add
andb
sahf
jmp
shlb
sub
and
rol
sarb
push
mov
mov
mov
jno
sbb
addb
pop
fildl
sarl
and
mov
inc
jge
push
lret
mov
lds
xchg
mov
loopne
sarb
mov
loopne
rorl
push
leave
pushf
test
loopne
and
fadds
sahf
mov
in
sub
mov
ds
push
hlt
add
aad
sbb
bound
add
mov
pushl
repz
push
fmuls
pusha
adc
push
jg
inc
pusha
mov
cmpsl
lahf
loopne
mov
push
andb
ret
adc
sub
hlt
mov
loopne
inc
divb
add
sbb
inc
clc
sti
dec
fistl
shlb
test
sbb
loopne
arpl
push
sub
and
sbb
inc
loopne
xor
addb
cmp
stos
shlb
inc
cmp
mov
xchg
push
mov
inc
add
and
rol
cmpsb
loopne
loope
mov
pusha
rclb
dec
test
sarb
xchg
push
or
mov
loopne
mov
shlb
pop
int
ret
pop
outsl
stos
inc
cmpl
popa
sbb
rorb
pop
sti
mov
in
mov
mov
mov
xor
mov
or
pop
cmp
mov
dec
in
div
repnz
mov
xor
shlb
inc
rorb
cmp
andb
in
lret
scas
adc
call
add
adcb
getsec
inc
shrb
fstpt
rorl
arpl
ljmp
mov
stos
shl
and
inc
add
in
add
mov
test
and
in
mov
sub
push
mov
repz
js
mov
adc
cmpsb
shlb
mov
je
int
fistl
mov
loope
repnz
ret
in
adc
out
pop
sbb
test
rolb
rolb
inc
fwait
je
nop
jno
xchg
cmp
cltd
std
or
mov
mov
pusha
lahf
mov
and
sub
shlb
pop
jno
notb
and
aad
call
mov
dec
and
test
loopne
test
inc
add
or
rol
enter
inc
int3
jae
inc
inc
je
cwtl
mov
loopne
mov
lea
arpl
stos
and
outsb
and
add
add
and
pop
pop
int
hlt
mov
mov
insb
popf
imul
pop
adc
inc
lock
shr
sub
adcb
and
and
lret
into
cwtl
lods
into
pop
sub
jp
aam
mov
push
loopne
adc
popf
dec
cltd
aaa
sbb
aaa
lock
dec
pmaddwd
adc
cmc
mov
stos
andb
ljmp
popa
imul
inc
lods
mov
std
push
lock
pop
movsl
xorl
into
mov
call
addb
mov
mov
and
pusha
adcb
add
inc
int
inc
sub
stc
je
add
jle
ds
loop
jg
leave
sub
sbb
cli
mov
jo
mov
cmp
cwtl
idivl
mov
inc
loopne
mov
lock
add
push
sbbl
cmp
or
aad
mov
ljmp
into
or
and
xor
out
call
push
shr
or
push
fcompl
pop
adc
dec
cmp
dec
scas
loopne
scas
shlb
or
pusha
fadds
xchg
fwait
mov
es
rclb
xchg
fidivrl
xor
andl
mov
arpl
adc
sub
rolb
loopne
inc
sub
inc
negl
int
and
jg
bound
mov
mov
lcall
repz
jnp
inc
je
xchg
and
fcoml
shll
inc
repz
aas
xor
jb
inc
loopne
and
inc
mov
add
inc
mov
adc
inc
add
cmpb
push
andb
and
push
aaa
bound
out
mov
mov
or
pusha
sbb
in
movsl
popa
sbb
push
and
addb
or
cmp
in
addb
xor
ljmp
and
inc
jbe
mov
test
and
and
out
repz
es
sbb
dec
fstps
cmpsb
add
add
shlb
sahf
repnz
sbb
call
les
insb
pop
mov
ficoms
mov
add
and
mov
add
lret
sbb
add
add
mov
sarb
xor
aad
xor
mov
loopne
mov
xorl
jle
mov
pusha
mov
pusha
jnp
js
insl
inc
adc
aaa
push
or
pusha
push
inc
mov
inc
inc
cmpsb
pusha
rclb
add
movsb
inc
loopne
add
inc
and
sub
mov
lods
fsubs
mov
mov
add
imul
rol
out
mov
push
mov
dec
fadd
movsb
add
cmp
inc
adc
out
andb
mov
pusha
push
sahf
sub
dec
sbb
rolb
movb
cmc
and
mov
and
xchg
or
mov
pop
and
outsl
orl
xchg
adc
rolb
or
push
inc
sar
subl
xor
lods
add
cld
mov
cmpsl
pop
jb
sahf
dec
and
loopne
pusha
add
add
int3
lods
out
inc
popf
lods
pusha
xorb
inc
jnp
adc
fwait
pavgb
pop
add
mov
outsb
and
pusha
sub
add
push
rol
jl
add
mov
addb
xchg
inc
pop
mov
out
push
lret
fdivrs
jo
sbb
push
jecxz
push
test
andb
mov
test
and
add
lret
pusha
sub
leave
mov
cld
mov
pusha
shl
mov
xchg
sahf
and
bound
add
jle
test
inc
outsb
dec
cs
enter
or
dec
add
add
loopne
dec
xor
xchg
mov
pusha
mov
pusha
shrb
fdivrs
pusha
pusha
jb
or
mov
loopne
mov
cmpsb
inc
cmpb
or
andb
icebp
int
or
test
and
sti
and
xchg
mov
cmp
addr16
repnz
xchg
xchg
pusha
out
xchg
das
andb
enter
shl
mov
sub
add
and
dec
popf
cmc
cmpsl
push
dec
xor
cmp
jo
xchg
enter
loopne
rcrl
mov
pusha
or
pusha
sub
and
jl
in
xchg
mov
scas
inc
sub
push
pop
mov
or
loop
and
mov
rcr
loopne
sub
pusha
out
jmp
sarb
idivb
add
ds
orb
dec
stos
andb
addb
addr16
pop
lods
stos
mov
pusha
sub
into
push
icebp
cmpsb
rolb
loopne
and
jge
inc
mov
adcb
adc
rclb
addb
cmpsb
pusha
shrb
rolb
adc
pop
xor
adc
shlb
addl
into
xchg
clc
lcall
mov
das
jns
in
cmp
ds
and
addb
xchg
xchg
ret
pop
js
aad
pusha
rolb
ror
movsl
popa
pop
or
push
popl
pop
xorl
cmpb
mov
and
insl
jmp
dec
mov
shlb
in
lret
and
mov
sub
adc
mov
int
push
sti
xchg
add
inc
sub
push
lahf
jmp
adc
jmp
sub
inc
sarl
lock
pusha
addb
and
lret
or
out
sub
jo
sub
movsl
cmp
jne
and
mov
and
inc
push
and
jne
inc
ret
lods
mov
jns
pusha
and
pop
stc
and
lds
icebp
and
sub
loopne
inc
sbb
aaa
cltd
imul
add
pop
ret
imul
out
sub
inc
and
push
addb
shl
push
push
add
and
outsb
incb
das
outsl
mov
sbbb
inc
and
add
add
xor
mulb
subb
cmpsb
shlb
das
shrb
fwait
xor
mov
int3
scas
inc
inc
add
pop
dec
popf
add
addb
incb
xchg
lods
outsl
or
inc
xorb
pop
shll
mov
cltd
xchg
pop
fsubs
pop
das
loopne
test
mov
aaa
movsb
and
add
sbb
cli
and
sub
rorb
inc
add
and
sub
sbb
adc
js
pusha
rclb
imull
inc
clc
dec
push
sub
add
jne
cmpsb
addb
test
pop
test
loopne
pop
cli
mov
jle
inc
inc
scas
shlb
dec
push
sbb
jae
mov
in
inc
inc
jecxz
or
pusha
out
inc
inc
cmp
mov
add
aaa
pop
xor
cmp
push
iret
fsubrl
add
mov
push
sbb
shlb
shlb
or
add
mov
cld
cli
add
loopne
popa
lret
and
inc
pusha
cli
ret
jbe
in
mov
inc
mov
pop
sarl
mov
cwtl
pushf
in
pop
pop
fldcw
gs
add
mov
das
cmc
outsl
add
mov
jne
mov
inc
pop
addr16
std
shlb
inc
dec
xchg
test
loopne
in
and
int
xchg
mov
jge
add
repz
push
sub
loopne
mov
rcl
cwtl
and
addb
stc
ja
loopne
sub
popa
mov
mov
out
gs
xorl
cmp
sbb
and
pop
mov
cmp
rolb
sbb
jne
scas
bound
loopne
or
mov
pop
mov
push
pop
int
pop
adc
jnp
dec
push
or
mov
int3
pcmpeqd
lds
or
inc
adc
stc
inc
xchg
pusha
loop
sbb
inc
xchg
xchg
mov
add
adc
inc
xor
clc
outsb
mov
icebp
pop
dec
pop
or
lcall
fstpt
and
mov
xlat
test
add
shlb
and
add
in
in
push
fadds
add
pop
cmp
daa
mov
cmp
outsb
imul
loope
aas
dec
adcw
inc
inc
or
repz
mov
addb
stc
xor
xor
out
dec
fstpl
mov
call
xor
or
inc
lods
out
ljmp
and
pop
sbb
mov
mov
mov
xchg
push
xor
addr16
mov
inc
xchg
psllq
cmp
mov
xchg
jle
sbb
fsubl
ret
cmp
rorb
mov
xchg
shl
sub
pusha
loopne
mov
fs
sub
and
rolb
sub
mov
lret
or
outsb
cmp
fisubl
adc
mov
shlb
andb
sub
and
jb
push
ss
mov
rcll
pusha
lret
les
shlb
and
adc
add
xchg
loopne
xchg
fs
and
repnz
sbb
add
cmp
xchg
daa
mov
add
pusha
movb
pop
pop
or
movsb
inc
mov
rol
xlat
jmp
sbb
rolb
and
add
mov
jl
repz
mov
pusha
clc
dec
cmp
iret
or
cltd
cmp
add
inc
lcall
addb
push
addb
les
xchg
mov
std
mov
xor
insl
outsl
std
cli
xlat
test
and
loopne
test
push
mov
addb
int3
add
inc
push
sub
mov
nop
mov
loopne
add
daa
adc
cmp
jecxz
flds
xchg
xor
in
inc
push
out
out
adc
andb
scas
inc
add
addb
addb
mov
andb
test
sbbb
sarb
shlb
sub
into
arpl
xchg
jle
divl
add
roll
mov
jbe
mov
test
cmpsl
pop
stos
imul
and
jo
push
cmp
cwtl
insl
outsb
dec
stos
sbb
and
movsl
dec
out
sub
orb
addb
fidivrs
sbb
cltd
xor
ljmp
add
sbb
sbb
push
mov
test
shll
xchg
jae
and
movsb
add
andb
pop
xchg
and
add
inc
iret
xor
mov
mov
notb
lds
sub
repnz
mov
and
mov
add
mov
sub
xor
push
shlb
loopne
cmp
gs
test
sarb
sbb
sbb
add
out
push
adc
out
mov
push
movsb
pusha
mov
xchg
push
pop
xor
lock
aaa
lea
sbb
push
popf
fcomp
pop
lods
mov
stos
addb
sub
loopne
xchg
cmp
pop
dec
loopne
adc
push
push
les
gs
inc
loopne
out
and
test
and
mov
pusha
push
shl
adc
and
jo
and
rolb
add
loope
cli
push
lret
add
sub
es
rclb
pop
rorb
pop
dec
fwait
inc
fcomps
loope
imul
jo
andb
and
pusha
sahf
rclb
mov
and
pusha
into
scas
fnstsw
pushl
test
out
dec
repz
and
ret
int
adc
mov
sub
push
xchg
pop
mov
clc
loopne
push
and
and
cltd
iret
pushf
sub
and
popf
push
addb
int
popa
ret
pop
sti
add
mov
add
shlb
sbb
insl
out
scas
pop
cmp
mov
dec
adc
xchg
push
xchg
icebp
mov
pusha
in
xorl
add
xchg
xor
scas
cmp
xchg
gs
imul
clc
int
fcoms
xchg
loopne
push
dec
stc
mov
add
cmp
scas
xor
mov
pop
cltd
add
insb
aaa
mov
inc
inc
cmpsl
lods
clc
stc
mov
lea
add
shl
jae
jno
mov
pop
mov
lods
inc
xor
das
fildl
add
sarb
mov
cmp
inc
adcb
inc
inc
lods
inc
inc
dec
and
mov
xor
fbld
insl
mov
push
xor
fsubrl
add
jge
mov
mov
and
mov
pop
sub
add
and
out
sub
dec
cltd
add
mov
inc
add
stc
sbbl
fidivl
andb
mov
inc
dec
out
dec
ja
add
insl
and
add
add
loopne
mov
shrb
inc
subb
push
fldenv
xchg
push
fwait
adc
add
xchg
push
loopw
and
fidivl
lret
mov
dec
mov
cmp
xchg
pop
sahf
mov
mov
jg
jecxz
adc
loopne
clc
dec
daa
pop
inc
fdivrl
icebp
push
lea
cmp
loopne
pusha
cmp
sbb
loopne
or
jae
jmp
lds
and
jge
mov
loopne
or
andb
das
xchg
sbb
addb
inc
mov
jl
mov
clc
push
cli
push
push
jno
sahf
push
push
inc
mov
in
xor
movsl
aaa
add
add
sarb
lahf
das
cmpsb
loopne
and
add
inc
push
jp
mov
into
rorb
ret
addb
adc
andb
and
sbb
xchg
push
mov
mov
outsb
jle
shlb
xchg
rcrl
sbb
push
adc
cmpl
inc
rcll
push
jns
pushf
jb
or
mov
rorb
ds
loopne
ljmp
in
cmp
mov
js
cmp
ljmp
inc
mov
imulb
loopne
jge
rol
adc
imul
addb
xor
notl
xchg
insb
mov
fcmove
pmulhuw
inc
dec
pop
jg
sbb
xchg
and
mov
fidivrs
add
mov
enter
and
mov
data16
pusha
add
icebp
mov
push
popa
test
andb
cmp
out
mov
inc
mov
xor
and
push
and
xchg
aad
add
inc
xchg
mov
bound
add
add
xchg
loopne
xor
ficomps
in
movsl
add
pusha
jo
mov
mov
xor
cmpsb
and
adc
dec
and
je
push
fisubrl
lret
and
xchg
add
mov
loopne
pushf
and
and
and
les
aas
lods
add
mov
inc
xchg
aad
fs
xchg
and
and
mov
inc
outsl
mov
mov
addb
inc
mov
adc
mov
mov
repnz
test
int3
xor
outsb
lcall
push
mov
mov
mov
inc
ljmp
dec
pop
sub
cmpsl
insl
inc
sbb
fcmovnu
or
pop
xor
or
add
mov
pop
arpl
adc
xor
push
shrl
and
in
lock
cmp
pop
sahf
loopne
lret
aas
push
inc
mov
push
adc
js
mov
outsl
xor
ret
adc
call
mov
add
pusha
add
push
and
xor
or
gs
push
dec
sbb
lret
push
inc
inc
push
push
pusha
shrb
jg
addb
daa
jg
xchg
imul
roll
cmp
xor
andb
fidivs
mov
orl
stos
shlb
xchg
mov
loope
scas
rolb
add
addb
int3
sbb
dec
sub
mov
mov
mov
sub
pusha
lea
xchg
sub
loopne
fnstsw
addb
lods
sub
iret
sbb
or
add
loopne
mov
daa
push
sbb
xor
push
rcrb
push
rol
inc
iret
jecxz
lret
sbb
inc
mov
fcmovnbe
addb
sbb
in
sbb
xor
data16
xchg
ficoml
fstpt
push
and
das
sti
jmp
mov
rolb
dec
xchg
or
mov
and
sub
pop
and
inc
xor
mov
scas
jecxz
gs
jns
push
push
and
jne
add
cltd
repz
jg
ret
addb
enter
jmp
add
and
out
xor
and
mov
roll
mov
add
dec
pop
int3
jnp
xchg
rol
inc
cmp
xor
inc
rol
adc
addb
pushf
push
rolb
je
jo
rolb
push
sbb
push
js
sarb
pop
sbb
int
mov
shlb
add
jg
int3
pushf
fdivl
pop
addr16
rolb
loope
and
fs
loopne
ja
jecxz
je
ror
sbb
clc
adc
jb
test
popf
pop
xor
xor
mov
xchg
push
inc
and
mov
nop
fwait
stos
loopne
lds
and
stc
into
repz
adc
mov
cs
inc
sbb
in
sarb
fildll
and
call
pusha
pop
arpl
repz
dec
lea
mov
pusha
inc
mov
fistps
sub
subb
inc
add
shlb
popf
rorl
or
pushf
add
cmp
xchg
sbb
pop
push
shlb
and
into
repz
and
call
add
das
outsl
jmp
sbbb
or
pusha
scas
sarl
xchg
je
pusha
mov
pusha
xchg
inc
pop
cmpsl
out
out
inc
mov
addb
sub
test
repnz
xchg
and
sbb
mov
enter
fs
fidivl
movsl
add
imul
add
mov
pop
inc
push
add
add
rolb
inc
loopne
or
mov
jg
mov
sub
movsb
add
cli
cmpsb
inc
loopne
sti
repnz
adcl
adc
jb
mov
loopne
dec
scas
or
shlb
jb
outsl
out
xchg
jge
mov
inc
push
fdivp
lcall
rolb
lods
shl
cmp
add
push
scas
js
mov
jo
push
inc
xor
sbb
rolb
out
mov
and
rcrb
and
adc
dec
push
insl
pop
pop
inc
mov
add
xchg
pop
jns
or
push
cmp
mov
add
call
in
cmc
sub
pop
and
pop
cmpsl
into
mov
add
mov
xchg
lahf
pop
inc
xchg
and
leave
loop
inc
add
movsb
loopne
sbb
cmp
mov
xchg
add
std
or
cmp
pop
mov
xchg
call
imulb
xchg
pop
enter
ret
add
std
sbb
dec
test
mov
mov
shll
int
loope
mov
shlb
push
stc
rorl
inc
out
push
sub
rolb
pusha
shlb
fistl
pop
addl
inc
aam
xor
lahf
mov
push
inc
stos
xchg
adc
pusha
add
xor
sahf
push
faddl
mov
loopne
push
dec
call
addr16
pusha
jo
push
and
icebp
addb
xor
lahf
cli
mov
push
xor
xor
jg
lret
out
push
cmp
rolb
loopne
mov
andb
hlt
shlb
or
inc
sub
into
cli
out
test
adc
shlb
loop
aas
xchg
popf
jmp
add
xchg
jecxz
push
out
jle
jne
push
jne
lret
inc
imul
mov
test
xorb
loopne
add
addb
je
xchg
add
loopne
inc
rorb
xchg
sub
xor
add
push
mov
adc
repz
and
and
mov
pop
jle
xor
add
dec
pusha
cmpsb
loopne
mov
loopne
out
loope
in
mov
pop
or
andb
xchg
jnp
mov
mov
inc
cwtl
push
add
adc
push
pushf
jae
movsb
addb
adc
ficoms
inc
sbb
add
rcl
addb
mov
add
xchg
fadds
jno
mov
dec
jle
dec
jae
out
repnz
rolb
pop
push
std
dec
sbb
popa
xor
loopne
jmp
imul
sahf
out
imul
inc
mov
clc
sub
loopne
cmpsb
inc
inc
aas
dec
mov
icebp
add
xchg
add
and
add
or
shlb
fbstp
call
sbb
fs
shl
outsl
xchg
and
shll
cmp
or
lods
ss
cs
add
xchg
adc
mov
sub
cmc
mov
and
loopne
outsl
mov
inc
shll
and
rolb
add
sub
jmp
daa
inc
rorl
inc
inc
out
scas
pusha
inc
mov
cmp
adcb
dec
xchg
inc
fstps
inc
jno
fadd
stos
add
int3
scas
mov
and
aas
mov
pop
push
shl
dec
stc
push
xor
adc
lods
mov
ret
popf
dec
sbb
jns
addr16
xor
inc
mov
in
jae
and
add
xorl
inc
cltd
xchg
mov
jno
mov
push
inc
add
mov
pusha
iret
mov
inc
jnp
cld
fwait
dec
popa
sbb
rolb
loopne
jl
andb
cmp
cmp
test
and
clc
push
filds
inc
and
sti
out
je
pusha
rclb
dec
jae
dec
add
add
lcall
pop
sub
lds
rorl
pop
cli
repnz
and
test
movsl
push
cltd
cmp
sub
cmp
sub
pusha
add
mov
mov
inc
rolb
mov
mov
xchg
andb
outsl
inc
pop
mov
pusha
and
cmp
inc
mov
pop
loop
xor
and
and
add
insl
shlb
dec
jbe
cmc
les
in
das
nopl
dec
outsl
outsb
jno
inc
addb
add
cld
pop
lret
stos
call
movsb
rolb
shll
enter
add
and
loope
test
cmp
add
pop
rorl
pop
cli
lds
rcrb
jo
push
pop
xor
sub
inc
andb
pusha
pop
add
and
pusha
rcrb
mov
stos
shlb
xchg
xor
pusha
add
jnp
sti
sub
mov
stc
jne
cmp
mov
add
pop
push
inc
mov
ljmp
shrb
hlt
lods
andb
test
pusha
dec
jbe
push
in
aaa
lods
dec
dec
out
mov
push
mov
sbbb
pusha
rolb
xor
inc
addb
jnp
jno
ljmp
andb
dec
lods
clc
out
out
mov
adc
mov
inc
ja
and
cld
jae
imul
pusha
add
xor
stos
loopne
push
hlt
mov
mov
add
mov
and
mov
ds
mov
dec
or
add
loopne
xor
fbld
stos
mov
outsb
and
leave
push
cmpsl
dec
shlb
sbb
sbb
cmp
aam
arpl
cli
jmp
addb
mov
mov
or
sbbb
lfs
xor
addr16
add
mov
pop
sahf
sub
popf
mov
mov
xor
test
xchg
int3
cmc
mov
and
and
in
loopne
dec
andb
sbb
or
fwait
iret
cmp
in
fists
pop
jp
mov
insl
pop
inc
push
jecxz
lcall
pusha
mov
inc
mov
jle
or
hlt
cld
std
clc
dec
xlat
mov
dec
and
adc
pop
and
pusha
mov
xchg
enter
dec
mov
add
sbb
movsl
loop
jg
or
rclb
sarb
xorb
out
push
les
dec
dec
in
data16
pushf
xor
lahf
shr
or
and
rcl
enter
int
and
mov
scas
loopne
jbe
inc
mov
addr16
or
mov
and
mov
or
mov
inc
mov
xor
in
mov
cwtl
xor
aad
pop
add
enter
shll
fs
out
repnz
or
je
sbb
push
les
sub
sti
js
mov
loopne
dec
sub
and
push
andb
and
loopne
jp
adc
push
subl
cmove
sub
push
sti
sbb
cmp
or
xor
sub
and
in
mov
fisubrs
mov
shlb
mov
adc
add
lods
test
push
push
hlt
mov
jmp
or
imul
or
cmp
add
dec
lods
and
pop
sub
jo
adc
dec
in
add
cltd
ljmp
andl
int
sub
and
inc
lods
and
sub
mov
cmpsl
adc
add
add
popa
mov
and
sti
adc
aad
out
in
out
inc
lahf
xchg
movsl
inc
add
sbb
pusha
addr16
add
xor
mov
mov
xchg
fucomi
lds
adc
mov
mov
jo
rolb
add
pop
and
sub
or
mov
xchg
cmp
inc
cld
mov
stos
and
xor
adc
imul
adc
xchg
pusha
idivl
and
imul
jmp
and
loopne
mov
pusha
mov
rorb
mov
pusha
and
test
jecxz
sbb
and
stos
add
mov
and
orb
fdivl
movsl
jecxz
mov
mov
daa
xor
xchg
popf
mov
shr
sbb
xchg
stos
push
loopne
std
shll
xor
jae
outsb
js
in
scas
xor
or
mov
loopne
fnstenv
push
scas
cmp
aas
pop
inc
add
loopne
add
pop
sub
jle
aas
push
adc
xchg
addl
inc
mov
pusha
pusha
aaa
dec
lods
push
imul
jb
or
inc
call
adc
fwait
inc
iret
divb
ja
jge
inc
add
scas
pusha
and
cs
sbbb
jae
aaa
lods
andb
cwtl
xchg
nop
and
loopne
sbb
add
xor
sub
loopne
pop
ror
sub
shlb
rcrl
adc
dec
pop
cmc
add
mov
dec
lea
mov
sbb
add
icebp
incl
ja
imul
scas
dec
xchg
imul
mov
and
rorb
ret
push
and
xlat
jle
add
inc
mov
pop
jle
jmp
shlb
xchg
inc
iret
insb
out
negb
mov
jp
mov
data16
and
mov
out
jbe
dec
lahf
push
sub
in
lock
or
fwait
pop
add
add
ficoml
in
bswap
mov
loope
jmp
stc
fldenv
in
push
rclb
loopne
mov
jno
cmc
or
sbbb
stos
push
push
mov
cli
push
dec
call
xchg
aad
xchg
pop
rorl
mov
cmp
aas
arpl
jne
lahf
bound
rclb
pusha
pusha
push
cmp
addb
test
cmpsb
andb
popl
stos
roll
andb
cld
repz
mov
loopne
rol
popa
mov
pop
pop
pop
stos
xchg
adc
or
and
pop
arpl
mov
stos
inc
pusha
fmull
pusha
andb
stos
pop
popl
fnstcw
pop
inc
xor
inc
mov
movsl
test
shrb
pop
loop
loopne
inc
rorb
dec
sub
inc
push
jae
dec
pop
lds
push
cmp
iret
ja
xor
imul
xor
lods
sbb
mov
mov
cmp
in
lret
loopne
mov
int
iret
shrb
mov
insb
xchg
mov
cmpl
shlb
loopne
mov
inc
xor
and
shl
push
cli
xlat
popf
mov
gs
rcr
jp
mov
stos
push
pusha
addb
xor
addb
sub
push
popf
dec
daa
call
and
xchg
sahf
or
mov
mov
int
and
js
imul
data16
push
fistpl
movsl
lret
inc
inc
sbb
loopne
sub
into
inc
or
sbb
and
stc
dec
and
and
lds
and
pusha
fisubs
ja
rolb
mov
aam
jl
mov
mov
addb
or
add
cmp
xchg
addb
fidivs
addb
imul
sbb
xchg
lret
xchg
xlat
or
mov
lret
ror
test
sarb
and
lcall
mov
test
fnstenv
mov
repz
mov
rorb
mov
sub
xorb
imul
add
insb
adc
shlb
or
add
aam
rep
pusha
mov
mov
test
xor
ss
add
pusha
int3
cmpsb
add
ret
shr
rolb
cwtl
aam
sub
add
arpl
testl
shlb
pop
movsl
lcall
inc
add
pusha
loopne
cmp
repz
cmp
pusha
sarb
cli
mov
lahf
jbe
and
push
mov
inc
mov
pusha
dec
sti
sub
xchg
jb
xor
aam
loopne,pn
dec
add
dec
jp
add
mov
xchg
mov
psrlq
cli
das
sbb
sbb
push
pop
enter
and
iret
bound
sbb
or
mov
frstor
shlb
inc
addb
in
and
pop
stos
icebp
cmp
in
movsb
inc
subb
cmp
movsl
cmpsl
icebp
mov
and
mov
repz
addb
mov
mov
push
push
inc
hlt
xchg
cmpsb
loopne
cmp
imul
leave
cwtl
scas
rolb
test
push
and
loopne
dec
jb
pop
mov
popf
push
lds
fldl
ss
js
rolb
in
fimuls
xchg
add
adc
mov
dec
lea
mov
jnp
xlat
sub
and
jb
xchg
mov
mov
out
xchg
leave
lock
ss
dec
repnz
fisttpl
and
mov
shl
lret
and
jp
lds
loopne
and
shlb
pop
xchg
out
aas
gs
inc
cli
push
inc
adc
or
xor
inc
or
cmp
or
mov
lock
fsts
add
jecxz
jl
and
mov
stos
dec
addr16
pop
leave
inc
inc
jo
xchg
mov
addb
pusha
loopne
nop
outsb
push
adc
add
mov
addr16
inc
scas
and
push
push
cmp
jmp
adc
inc
add
sub
loopne
out
mov
ret
mov
jp
or
test
sub
es
arpl
shl
mov
sti
ljmp
ljmp
pop
jmp
enter
je
adc
or
add
rol
dec
or
inc
in
sbb
cmp
andb
popa
cmpsb
andb
loopne
jnp
loopne
jecxz
adcl
ja
sti
mov
xor
aad
jecxz
loopne
insl
pop
inc
cmp
ret
rolb
mov
and
mov
loopne
sub
inc
or
andb
andb
mov
pop
stos
pusha
pusha
fsts
insb
mov
rcrb
scas
loop
insl
in
push
hlt
jbe
xor
cld
insl
lret
les
mov
cwtl
xchg
sahf
mov
inc
push
add
mov
mov
add
mov
rolb
xchg
loop
lret
jg
hlt
dec
mov
inc
add
mov
andb
ds
mov
mov
inc
push
loopne
add
orb
fsubrs
adc
mov
or
imul
and
sahf
addl
xchg
aaa
cmp
in
add
mov
loopne
push
mov
fisubrs
inc
inc
dec
test
loopne
loopne
cmpsb
andb
shll
jnp
outsb
into
fmulp
jns
or
xchg
into
popf
jmp
sbb
mov
sbb
movsb
add
ss
jns
jp
aam
int
push
add
loopne
loopne
lcall
scas
xchg
jne
andb
mov
mov
int
mov
loopne
mov
jmp
and
addr16
sbb
dec
xchg
aas
mov
pop
fs
arpl
inc
add
cli
pop
push
jmp
lahf
jecxz
lahf
mov
mov
pusha
dec
sub
mov
pusha
add
std
jnp
loope
mov
fildl
loope
test
jmp
jl
or
pop
daa
std
out
cmp
shr
shll
push
pop
jl
xchg
sbb
sub
das
sbb
scas
andb
loope
pop
and
out
xorl
shrb
pusha
xchg
pop
push
loopne
ds
cmp
sbb
mov
mov
sbb
loopne
gs
and
xbegin
loopne
push
dec
pop
inc
fstps
ret
mov
and
cmp
sbb
mov
std
mov
mov
jp
stos
or
loopne
mov
lea
hlt
int
add
addb
xchg
stos
add
test
pop
dec
add
lret
shr
add
or
and
jp
divl
pop
mov
insb
lret
out
pop
xchg
jne
cmp
adc
xchg
mov
dec
push
daa
notl
or
aas
jns
dec
mov
push
fidivs
sub
pop
cltd
into
imul
inc
leave
out
cli
sub
arpl
jge
icebp
cmp
fwait
iret
push
out
lds
jmp
stos
inc
loopne
mov
andb
lock
call
rorb
adc
xchg
lret
hlt
mov
aas
xor
cmp
add
xchg
lcall
mov
ret
lret
pusha
and
mov
sbbl
enter
jle
pop
mov
daa
fistps
pushf
test
and
mov
mov
push
scas
shll
cmc
jne
popa
push
ret
stc
fldl
addb
imul
push
sbb
push
stos
or
inc
ds
pop
or
je
cwtl
and
shll
addb
andb
or
loopne
or
cmp
jns
or
jecxz
mov
xor
cmp
lods
sbb
rep
fcmove
fists
inc
add
pop
fnstenv
mov
xchg
movsb
addb
xchg
lods
inc
pusha
fnstsw
pop
lock
cmpsl
dec
je
lret
lods
and
test
mov
mov
push
div
or
js
or
pop
cmp
xchg
imul
insb
xor
andb
flds
pop
lahf
and
or
sahf
insb
les
fistpll
loop
mov
mov
lods
dec
inc
pop
jl
inc
push
cld
out
add
add
frstor
shlb
lret
outsb
mov
mov
icebp
jg
icebp
cmp
add
pusha
loopne
xchg
js
shl
cmp
pop
dec
dec
test
and
add
mov
daa
jno
add
lahf
addr16
ret
popa
cmp
add
inc
mov
shrb
and
addb
pusha
add
notb
imul
or
ret
and
shrb
xor
rclb
pusha
loopne
scas
inc
pop
sbb
inc
pop
int3
push
loopne
mov
add
inc
negl
mov
pop
cli
jbe
pop
test
inc
lret
ficoms
mov
loopne
ret
adc
pusha
rcrb
mov
cmp
add
jecxz
fists
dec
into
pop
test
add
dec
sub
shll
push
push
and
inc
addb
mov
fsubs
pusha
lds
pop
inc
out
in
scas
pusha
mov
fadds
rolb
fwait
mov
sub
inc
jl
adc
fcmovb
aaa
loop
mov
mov
or
mov
shl
pop
cmpsl
js
or
cmp
ss
push
sarb
es
lea
jbe
lds
jae
dec
incb
and
add
mov
inc
add
cld
dec
adc
rclb
inc
add
subl
xor
inc
cli
lcall
dec
adc
push
cwtl
pavgw
mov
lods
and
adc
gs
sub
add
mov
jp
mov
loopne
push
pop
lret
dec
mov
or
rolb
mov
addb
dec
xor
pop
inc
js
dec
or
loopne
push
mov
insb
aad
insb
dec
jae
in
or
shrb
dec
mov
subb
fsts
mov
add
mov
popf
ret
xchg
dec
cmpsb
pusha
pusha
in
into
repz
inc
je
push
mov
sbbb
jg,pt
pusha
mov
cmc
loopne
add
hlt
dec
repnz
jbe
sbb
daa
inc
insl
stos
pusha
mov
jge
push
cld
lret
rolb
imul
mov
inc
pusha
insb
xor
sbb
pusha
lret
pop
int
outsl
xor
sbb
inc
dec
out
clc
pop
push
outsb
or
inc
in
push
in
in
dec
ds
and
dec
sti
clc
push
or
adcl
fwait
inc
mov
jle
pusha
mov
xchg
and
addb
cld
mull
loopne
pop
jmp
jb
scas
xor
lahf
lcall
into
xchg
out
loopne
jp
mov
sbb
or
aam
and
xor
loopne
movsb
inc
pusha
rol
or
mov
add
leave
es
add
mov
daa
insl
daa
adc
mov
mov
shl
pop
enter
mov
loopne
and
inc
push
movsl
mov
repnz
mov
nop
ljmp
ss
lret
fcmove
movsl
repnz
lds
loopne
lods
incb
loopne
lods
pusha
loopne
mov
and
addl
and
cmpb
mov
loopne
xchg
rcr
int
mov
pusha
add
cmp
ret
jns
mov
call
sub
inc
clc
cld
fcmovnb
or
cwtl
in
inc
popf
sahf
addb
pop
xor
repz
leave
mov
jge
and
pusha
dec
jbe
push
fidivrs
inc
mov
je
rorl
pop
or
jmp
add
shlb
xchg
push
movb
jmp
stos
inc
and
fistps
sti
sbb
cltd
das
scas
adc
test
ljmp
cmc
dec
icebp
pop
fs
mov
loopne
aad
or
subl
pusha
mov
ret
cmp
loopne
fldenv
pusha
pusha
fsubrs
shlb
imul
daa
push
scas
add
cltd
int3
cld
jns
rolb
jnp
shl
leave
add
push
rcl
xchg
mov
lods
loopne
and
cmc
jmp
jnp
repnz
pop
out
jecxz
pusha
rcrb
lods
and
lret
lea
cmpsl
test
gs
pop
xor
rcll
in
cld
mov
push
loopne
rcl
xchg
mov
inc
jnp
fisubl
and
dec
pop
andb
loopne
xchg
add
jg
mov
repnz
push
sbb
mov
mov
push
and
inc
rolb
xchg
stos
andb
ja
push
rcrl
mov
mov
cmpsb
add
or
ds
cmc
out
arpl
fbstp
cs
mov
or
popa
jp
sub
shlb
mov
jecxz
iret
cmpsb
and
lret
hlt
inc
jns
out
shlb
inc
cld
push
inc
mov
mov
dec
dec
call
imul
inc
push
mov
and
icebp
push
mov
stos
adc
addr16
outsl
fnstsw
ficoms
enter
xchg
sbb
andb
stos
mov
sahf
fwait
sarl
or
jp
pop
rclb
or
cmp
rolb
dec
push
mov
sbb
loope
filds
add
mov
dec
insb
xor
xor
xchg
int3
mov
loopne
lea
icebp
add
push
push
in
jecxz
mov
test
and
xor
jmp
dec
jmp
sbb
push
imul
and
icebp
popf
mov
or
pusha
andb
add
fistpll
cmp
in
js
pusha
add
inc
inc
leave
dec
test
pusha
lods
xchg
mov
sahf
pop
ds
mov
inc
and
daa
ret
xor
rolb
loopne
ss
or
push
repz
pushf
push
fldcw
pusha
inc
test
and
inc
pop
pop
dec
push
jae
fdivrl
fdivrs
sub
shlb
inc
jge
ja
or
mov
add
lds
int3
ds
and
mov
cmpb
and
adc
push
or
inc
addl
lods
add
icebp
popa
ss
fst
clc
jne
add
or
addb
ljmp
sub
loopne
addr16
sbb
mov
jb
push
add
sub
mov
loopne
mov
xchg
cltd
or
push
loopne
push
mov
loopne
add
in
cmp
mov
push
mov
test
mov
mov
gs
repz
dec
loopne
int3
jb
add
adc
out
movsb
inc
subb
and
jne
rolb
filds
mov
pusha
add
mov
gs
sub
xor
sub
mov
lock
sahf
cli
cmp
pop
pop
xor
mov
filds
mov
inc
and
pop
xchg
popa
add
addb
popa
mov
loopne
ret
jl
cmp
sti
frstor
inc
mov
inc
adc
lret
pop
repnz
lcall
sub
and
lret
sub
and
idivl
pop
stos
pusha
and
shlb
cmp
ret
insb
adc
pop
mov
jae
push
jle
or
jne
xor
outsb
mov
addb
lahf
mov
xorb
add
sub
adc
loopne
into
stc
dec
out
iret
jno
popa
sub
push
aam
mov
xchg
dec
iret
lret
data16
repz
sbb
jb
mov
shrb
adcb
bound
sub
xchg
daa
mov
stos
pusha
adcb
shrb
xor
lret
add
sub
pusha
rolb
loopne
fistpl
mov
jp
outsb
idiv
mov
cmp
gs
shll
add
push
xchg
fcoms
in
xchg
gs
mov
pusha
call
adc
dec
fdiv
pop
insb
shr
imul
jg
ljmp
outsb
ficompl
stos
inc
add
mov
add
inc
fmul
das
stc
imul
push
inc
arpl
jmp
xchg
ljmp
aad
daa
mov
mov
sbb
jb
jns
fisubl
shlb
stc
xor
ret
adc
and
pop
testl
xchg
ljmp
loopne
xchg
or
lret
mov
and
pusha
cvtps2pi
xor
jns
add
ljmp
inc
inc
xor
sbb
int3
data16
dec
or
and
xchg
jmp
std
data16
loopne
cwtl
fcmovbe
mov
jl
mov
andb
loopne
cwtl
clc
mov
shll
sub
cmp
push
add
xor
mov
cld
test
xchg
pop
or
inc
fnsave
test
cltd
ljmp
xor
pop
sub
and
out
cmpsl
nop
adc
inc
or
pusha
sub
dec
ja
clc
jbe
jge
pop
sub
xorb
mov
inc
sbb
xor
xor
in
std
pop
std
lea
andb
sub
fmul
inc
es
inc
stos
xchg
pusha
loopne
stc
xchg
int
cmp
pop
popa
inc
aad
adc
rorb
fabs
dec
insb
divb
dec
fisubs
testl
ljmp
mov
loopne
ret
dec
jae
rolb
fdivrl
inc
test
inc
pusha
cs
dec
fisubl
rcll
xor
or
push
mov
sub
sub
push
add
loopne
loopne
push
add
xchg
decb
call
dec
sbb
mov
mov
data16
lret
jle
xchg
lahf
push
aaa
add
mov
in
mov
rolb
add
pusha
xlat
mov
sub
mov
je
fimuls
loopne
cmp
and
inc
ud2
pop
mul
adc
add
loopne
cmpl
mov
pusha
loopne
movsl
repnz
lods
loopne
mov
sub
pusha
cli
lods
mov
int3
push
inc
add
xor
int3
sahf
inc
js
dec
xor
push
adc
sbb
mov
shll
mov
add
xchg
mov
fsub
leave
rcl
sahf
adc
sbb
int3
push
jnp
stc
out
mov
mov
std
sub
inc
pushf
in
jg
and
aad
xor
inc
or
mov
fs
pop
pop
mov
add
sti
jecxz
ja
rcrl
pop
adcl
xor
loopne
movsb
add
add
sbbb
cmp
lret
cwtl
lods
stc
xchg
mov
lods
loopne
or
movsb
add
xchg
movsl
hlt
jne
lods
imul
adc
mov
daa
scas
loopne
fistps
mov
xchg
es
loopne
cld
and
and
xchg
pop
add
cld
arpl
daa
cmp
mov
rolb
fwait
or
pop
sbb
leave
push
lcall
test
sbb
or
scas
loopne
data16
and
add
vpsubusb
and
pusha
add
xchg
bound
xchg
fldcw
pusha
and
aas
fsubl
cmp
cwtl
shrl
add
pop
jmp
rcll
mov
jnp
xor
sub
xor
out
incl
pusha
cmpb
ja
das
inc
mov
fldenv
inc
add
imul
mov
sbb
adc
sbb
push
in
push
or
add
push
xlat
cmp
add
pop
lahf
dec
mov
adc
jecxz
jo
xchg
sbb
mov
sarb
cli
jo
movsl
dec
pop
enter
cmp
lret
loopne
stos
popf
pop
mov
out
insb
cmp
adcl
or
cmp
sarb
repz
cs
add
pop
and
subb
pop
test
mov
and
jns
in
xchg
sub
push
jo
paddd
dec
shr
imul
pusha
popl
pop
mov
lret
mov
aaa
add
and
cmp
jecxz
ljmp
add
mov
xchg
mov
pushl
andb
or
and
inc
clc
scas
loopne
test
sub
inc
and
lahf
xor
fnstsw
je
mov
mov
sti
mov
push
je
mov
lods
push
fimull
add
aas
or
mov
rcrb
push
hlt
mov
cmp
and
mov
test
test
rcrb
stc
sub
ret
movsb
rolb
inc
notl
push
and
stos
add
rol
add
addb
and
adc
jl
and
mov
xchg
jge
add
push
andb
mov
insl
lret
fwait
jbe
imul
testl
aas
fcmovb
shl
jecxz
xchg
adc
sbb
push
test
inc
int3
lcall
cltd
loopne
adcl
mov
add
xor
push
adc
aaa
sbb
ds
mov
pusha
test
rcr
mov
dec
not
inc
mov
mov
in
or
xchg
mov
adc
xor
pop
pop
pop
aaa
icebp
ss
xchg
mov
jmp
mov
fcoml
xchg
cld
mov
xchg
mov
and
pop
scas
mull
jae
add
xchg
jl
mov
pop
and
push
push
push
push
add
inc
sbb
and
fcomps
sbb
adc
repnz
out
push
scas
pusha
cmp
insl
out
xlat
inc
stos
xchg
loopne
cmp
sub
pusha
out
xor
pusha
sti
mov
call
cmpsl
fsubs
out
test
out
clc
loopne
jp
sub
popf
and
push
loopne
push
add
subb
jge
shlb
jae
in
dec
sbb
movsb
andb
loopne
and
pusha
sbb
jae
pusha
and
jno
fiaddl
and
mov
jo
daa
pop
dec
and
enter
cmc
xchg
cmp
sbb
outsl
das
and
sbb
cld
sbb
mov
out
xlat
sub
adcb
bound
aam
jnp
mov
mov
popa
xchg
cmpsl
cmp
test
pusha
stc
imull
fcompl
fsts
addr16
test
andl
int
cli
sti
and
sbb
aam
and
stc
lahf
cmp
ja
std
cmpsb
pusha
inc
daa
or
mov
loopne
lcall
push
loopne
ficoms
and
xchg
mov
cmp
mov
dec
stos
loopne
subl
inc
cmp
push
loopne
mov
outsb
inc
js
aad
bound
icebp
inc
repnz
lods
pop
adc
fstpl
pop
adc
decl
jmp
pushf
decl
cltd
jnp
ret
dec
mov
add
xorb
lock
sub
and
icebp
pop
push
ja
jae
xchg
sub
cli
jge
add
mov
fisubrs
out
hlt
add
add
xor
into
sbb
add
mov
jo
xor
add
mov
xlat
xor
sub
and
cmp
jmp
cmp
insl
cmpsl
pop
mov
add
adc
addb
mov
sarb
dec
mov
inc
jo
adc
and
addb
dec
sbb
xchg
cmp
fsubrl
sarb
loop
pusha
mov
inc
enter
add
xor
daa
scas
add
sti
jno
inc
ret
les
and
pop
sbb
and
add
inc
adc
and
mov
mov
icebp
inc
repz
and
shrb
xchg
mov
and
inc
and
fistps
and
fimuls
mov
adc
sahf
adc
mov
xor
xor
fsts
gs
sbb
fldenv
mov
sub
shlb
fsub
outsb
les
repz
add
in
add
mov
sbb
in
and
or
inc
pop
das
mov
pusha
pop
std
mov
lea
or
loopne
shll
inc
jmp
adcb
dec
jne
push
and
mov
mov
xorb
and
mov
inc
loopne
lret
outsb
dec
aam
iret
xchg
bound
sti
in
dec
add
loopne
mov
xchg
jecxz
push
mov
mov
inc
lret
loopne
shl
adc
cmpsl
and
sbb
inc
insl
pop
testb
test
movsl
insb
cmpsb
inc
rclb
pusha
shlb
lea
in
or
repnz
xor
add
and
and
add
or
adcb
stos
mov
sahf
xor
cmp
mov
sbb
sbb
repnz
mov
fidivl
pushf
mov
arpl
test
aam
int3
fidivs
rolb
pusha
lods
pop
mov
and
int3
inc
andb
add
mov
cwtl
int
mov
loopne
mov
add
les
push
pushf
popf
insb
jno
cld
inc
xchg
outsl
lret
nop
cmp
lcall
repnz
lods
inc
sar
add
adc
test
inc
lea
jle
mov
into
pop
bound
cmpsb
mov
orl
loopne,pn
xor
lock
cs
lahf
xchg
push
pop
fsubr
popf
pop
push
pusha
dec
or
imul
dec
cmc
adc
xchg
lods
and
icebp
lret
fwait
jne
mov
loopne
push
out
loope
test
mov
sub
add
subb
fsubrp
mov
shlb
mov
pop
fnstsw
pop
icebp
mov
movsl
sti
cmp
loopne
mov
xchg
and
add
mov
add
pop
pop
fisubs
sub
rcrb
andb
mov
int3
test
push
scas
loopne
in
jmp
loopne
dec
stos
aam
repnz
lock
andb
pop
lea
cmpsb
loopne
or
xor
hlt
je
addb
test
or
cld
or
add
sti
and
pusha
cld
sti
mov
adc
cwtl
pop
add
mov
ds
adc
inc
das
jns
inc
dec
jbe
adc
xchg
shll
inc
lret
dec
sub
mov
js
inc
in
mov
repnz
push
mov
and
inc
adc
sbb
out
sub
loopne
or
mov
call
jg
fwait
xor
aas
fs
shr
xor
pushf
popf
xchg
stos
shlb
mul
andb
mov
div
cld
pop
hlt
add
inc
into
xor
dec
mov
cwtl
push
or
mov
clc
insb
in
jmp
inc
xor
pop
adc
pusha
loopne
mov
hlt
cmp
and
shlb
inc
rcl
push
imul
inc
lret
sub
dec
sbb
and
sbb
push
addr16
push
and
add
andb
andb
sbb
and
loopne
in
cld
add
mov
mov
jecxz
xchg
mov
cmpsb
rol
aad
jl
into
aaa
mov
jecxz
mov
mov
cmp
add
add
pusha
sbbb
mov
icebp
rol
movsl
mov
adc
mov
add
loopne
mov
add
jle
fadd
clc
xchg
loop
cmpl
xchg
inc
mov
mov
mov
pop
xor
and
movsl
and
orb
pop
cmp
push
mov
fidivs
jmp
mov
xchg
out
inc
or
ja
pusha
inc
aam
sub
and
loopne
test
inc
call
jnp
pusha
leave
mov
mov
and
xor
push
or
mov
xchg
mov
ja
fiadds
cmpsl
push
adc
clc
mov
sub
xorb
shl
jle
xchg
mov
mov
insb
test
pusha
push
mov
ret
jbe
jns
mov
sbb
pop
push
je
and
mov
pusha
mov
mov
test
out
fldenv
sub
or
or
pusha
push
and
insb
dec
cmp
imul
xor
in
sbb
inc
clc
ds
repz
and
mov
imul
cltd
dec
sbb
andb
sub
pusha
xchg
inc
test
outsb
lcall
add
addr16
or
aaa
insl
inc
cmovno
in
outsl
call
mov
mov
shl
xchg
fildll
mov
mov
add
out
ljmp
pusha
scas
and
movsl
data16
mov
lods
inc
cmpb
sbb
addb
fsubrl
inc
add
or
loopne
shrl
int3
mov
add
and
mov
adc
test
lahf
mov
jp
and
mov
push
jge
xor
and
rcll
xchg
pop
mov
add
or
pushl
xor
inc
sahf
shlb
cld
push
imul
pop
sbb
es
add
xor
icebp
outsl
and
mov
pusha
adc
and
imul
inc
cmp
push
push
mov
ljmp
hlt
fldl
push
movsl
mov
mov
clc
xchg
sbb
jae
aam
cmp
and
mov
lock
sub
inc
inc
dec
mov
loopne
andb
or
pushf
aam
mov
rorb
sub
mov
repz
popaw
jmp
lea
dec
cmp
pusha
and
mov
inc
mov
dec
nop
popa
mov
inc
js
lea
test
jbe
into
or
inc
sbb
jg
mov
aam
sub
outsl
andl
xchg
sahf
enter
pusha
lret
stos
repz
mov
mov
dec
mov
cmp
mov
lods
and
mov
jl
mov
or
jno
mov
add
lods
mov
inc
scas
andb
inc
ficompl
pop
adc
push
adc
add
fisubrl
mov
loopne
xchg
das
sub
outsb
fldenv
mov
add
and
add
xchg
dec
loop
push
push
data16
mov
cmp
adc
and
pusha
movsb
pusha
inc
hlt
and
mov
inc
push
jle
fisubl
insb
sbb
pop
mov
add
add
arpl
rol
jecxz
out
addb
mov
push
enter
cwtl
sbb
loopne
rolb
add
gs
push
jle
lods
shll
fs
shll
ficompl
testl
lds
pop
inc
outsl
bound
jo
adc
out
add
sub
add
inc
in
movsb
inc
and
pusha
and
add
mov
inc
sbb
fldl
js
aas
sahf
rcrb
out
dec
xchg
lds
loopne
and
addb
in
xchg
gs
inc
jne
loopne
ja
mov
outsb
dec
cmc
sbb
push
inc
dec
pushf
pop
add
and
imul
and
ja
mov
test
add
pop
mov
xchg
push
inc
addb
mov
mov
ljmp
movsb
inc
shrb
pusha
inc
mov
cmp
clc
lcall
mov
dec
mov
and
add
jae
movsb
mov
mov
sbb
pop
or
in
notl
pop
pop
push
movsb
addb
inc
pusha
inc
xchg
enter
push
test
pop
pop
pushf
cmp
icebp
mov
int3
daa
inc
and
inc
dec
stos
add
sbb
loopne
pop
dec
sub
pusha
add
jecxz
fsts
mov
or
mov
stos
call
inc
sbb
imul
dec
stos
shlb
sahf
xchg
add
addb
mov
or
and
add
out
cmp
sub
fiadds
sbb
push
mov
inc
add
mov
aam
sbb
outsl
fldcw
xchg
mov
mov
mov
rcrb
cmp
popf
sbb
xor
ss
mov
xchg
sub
and
fcoms
stc
inc
dec
lret
insb
movsb
inc
loopne
test
xorb
add
andb
repz
cli
pop
cmp
test
and
push
xor
movsb
add
cwtl
jno
rcrl
sbb
sub
add
cmpb
dec
shlb
lea
inc
add
arpl
and
mov
inc
int
dec
pushf
cmp
xor
out
mov
pusha
cmp
aad
idiv
mov
pop
lds
inc
and
lods
pusha
mov
test
cli
inc
mov
jecxz
xor
loope
xor
pop
lcall
bound
ja
lahf
inc
in
push
add
pusha
incl
sub
push
test
inc
or
andb
addb
rcll
insb
or
xchg
stos
add
inc
sbb
testl
xchg
add
loopne
xchg
pusha
add
jmp
fwait
or
sbb
dec
nop
dec
cmp
icebp
pop
scas
and
fwait
cmpsb
inc
xorb
jge
push
and
mov
push
and
inc
jle
pop
sbb
and
dec
jae
xchg
out
pop
in
dec
cmp
pop
jb
shll
in
push
xor
loope
loopne
das
and
mov
test
pusha
xor
addb
sub
shlb
and
add
xchg
hlt
inc
add
ja
adc
and
pop
fstl
out
dec
cmp
pop
repnz
in
mov
stos
and
add
lods
mov
add
fs
pop
std
xchg
pop
xchg
inc
loopne
push
ret
push
xlat
mov
idiv
sub
loopne
mov
or
add
jecxz
shlb
push
sbb
test
xchg
daa
mov
ret
ds
shr
jns
lds
mov
adc
pusha
and
xchg
mov
in
ljmp
jp
xchg
xor
test
or
lret
jb
test
rol
inc
and
arpl
shlb
xor
adc
loope
sub
inc
cmp
cmp
push
outsb
sub
loopne
mov
and
test
and
jg
test
dec
jb
sub
andb
pusha
popf
ret
out
mov
pusha
mov
aam
sub
xor
xor
jp
mov
das
cmp
mov
xchg
xchg
push
and
mov
cltd
add
cmpb
clc
xchg
ror
cli
mov
mov
jnp
in
fcmovnbe
sub
cmp
pop
push
out
or
and
pusha
pusha
pop
lret
cmp
add
andb
rcrb
mov
adc
fnstenv
xchg
icebp
sub
in
add
loopne
mov
and
lret
pop
cmc
cmp
push
sbb
mov
scas
addb
and
cwtl
and
mov
shlb
push
loopne
cwtl
dec
repz
cli
aaa
sbb
pusha
sbb
cs
pusha
bound
mov
mov
loope
push
sub
inc
iret
shlb
rolb
fadd
mov
dec
mov
pusha
cmpsb
inc
inc
movsl
pop
out
rolb
nop
loop
jns
mov
int
and
addb
add
mov
mov
fxch
jmp
icebp
int3
adc
in
out
sbb
xor
inc
pusha
or
or
std
sbb
cwtl
push
xchg
mov
addb
cld
and
cmp
mov
cmp
inc
add
xchg
or
ss
loopne
addb
and
pop
sub
lods
addb
imul
xchg
ljmp
js
in
in
pop
sti
lea
pusha
leave
or
sarb
sbb
outsl
les
jb
push
pusha
and
and
inc
loopne
cmpl
and
loopne
jnp
push
inc
imul
push
lea
lahf
add
pusha
popa
aaa
and
in
scas
inc
test
inc
xchg
push
mov
aaa
popa
sbb
sub
gs
add
aam
add
add
jp
insl
loope
mov
add
and
sti
or
xchg
pushf
out
hlt
lea
iret
mov
or
xchg
in
xchg
dec
in
sub
into
std
add
shrb
inc
and
xor
das
popf
test
and
cwtl
adc
loopne
pop
dec
enter
jns
retw
scas
inc
scas
pop
xlat
in
push
cld
aam
pusha
add
mov
loopne
notb
and
in
jae
add
cmc
add
jle
pop
push
loopne
mov
mov
test
sbb
bound
cmpsb
add
xor
aaa
scas
mov
shr
insb
or
mov
je
lock
jne
mov
rclb
loopne
push
je
mov
jbe
mov
and
pop
aas
aaa
xor
cld
call
jmp
push
add
add
mov
mov
loopne
jbe
gs
cwtl
mov
pop
mov
shrb
pop
dec
and
popa
pop
ret
sub
in
and
pusha
jo
test
lds
cmp
addb
lret
push
arpl
inc
jae
push
loopne
popl
aam
lods
shlb
or
xchg
outsb
jb
jae
mov
andb
mov
loope
nop
inc
add
orb
add
shlb
dec
cld
ss
xchg
mov
fwait
push
inc
inc
pop
add
and
or
cmp
dec
std
xchg
lahf
addb
ret
xchg
insb
je
xchg
call
push
and
mov
push
cmp
idivl
mov
rcr
and
add
jmp
cs
rorb
leave
push
imul
out
jns
cmp
push
test
dec
ljmp
aas
sahf
add
andb
adc
adc
sbb
adc
hlt
or
lock
jne
or
aaa
popl
hlt
aas
popf
push
jb
mov
and
test
pop
fsubrs
call
outsl
jae
out
js
mov
and
inc
sbb
imul
mov
pusha
pop
and
mov
push
imul
xor
adc
bound
test
loopne
mov
add
les
movsl
sub
shr
sub
or
xchg
fsubrs
and
inc
loopne
cmp
icebp
jge
mov
ds
arpl
push
inc
adcb
leave
je
adc
xchg
stos
xor
cmp
jg
int3
lret
dec
ficompl
loopne
cltd
popf
xor
loopne
rol
jns
out
mov
ror
je
add
rclb
jmp
mov
mov
sbb
push
movsl
lahf
pop
sub
inc
aad
add
pop
cmovno
stos
cmp
rol
loopne
out
and
add
mov
xlat
and
add
enter
cmp
stos
inc
mov
movsb
inc
mov
push
cwtl
push
inc
mov
sbb
inc
loopne
cmp
xor
cmp
into
pop
mov
pusha
push
dec
pusha
pop
repz
fwait
decl
add
pop
sub
mov
loopne
push
inc
enter
push
jbe
ficompl
andb
xor
mov
mov
emms
lcall
cmpsl
cli
xlat
repz
imul
loope
jne,pt
fcoml
mov
jge
mov
pop
leave
insl
mov
mov
out
xchg
out
movsb
add
dec
shlb
sti
inc
cmp
out
add
xor
jno
cmpsl
sub
scas
pusha
cmp
rolb
pop
mov
cmp
inc
add
fistpl
ret
loop
add
inc
ret
push
inc
and
nop
or
adc
dec
jl
flds
cmp
push
lods
inc
xchg
mov
fnstenv
mov
inc
mov
inc
gs
pusha
jno
jb
ljmp
push
ror
jns
mov
or
ja
sub
pop
push
inc
adc
or
xor
clc
repnz
rcrb
add
in
pusha
shlb
jg
and
push
sbb
dec
mov
hlt
scas
cwtl
aad
jns
popa
test
repnz
mov
cli
adc
mov
sbb
pop
fdiv
adc
arpl
cmpxchg
jg
lahf
pop
add
mov
xor
loope
dec
clc
xor
adc
lcall
mov
pop
addr16
jp
rol
lock
mov
mov
rcrb
adc
and
test
syscall
leave
es
inc
jnp
cmp
cmp
int
pop
enter
mov
aam
jo
jno
add
cmp
mov
das
add
and
lahf
jle
pushf
dec
imul
pusha
out
sub
imul
jg
jle
cmpsb
add
loopne
fcmovb
inc
imul
fcomp
xchg
inc
fmul
jmp
test
cmpb
dec
jb
cvtps2pi
pusha
add
inc
mov
cmp
inc
out
and
adc
sti
in
pop
repz
mov
mov
pop
add
rcl
and
mov
notl
add
jl
push
sbb
in
test
mov
les
loopne
sbb
and
aaa
and
inc
lds
xorb
data16
in
test
rcrl
movsb
mov
int
sbb
sub
mov
adc
mov
test
ds
cmp
mov
int3
sahf
test
cwtl
adc
add
and
sbb
or
and
push
cmc
sbb
dec
sbb
xor
inc
mov
leave
xchg
and
add
rolb
sub
mov
loopne
shll
xor
xchg
xchg
out
rcl
mov
xorb
xchg
lcall
fdivr
lret
mov
add
jb
push
xchg
int
dec
lods
pusha
loopne
out
add
mov
cli
or
inc
scas
and
cmpsb
inc
pusha
jae
std
mov
sbb
mov
xchg
loope
inc
mov
mov
lods
getsec
testl
jge
mov
add
and
lods
pusha
cmpb
fdivr
mov
push
ja
shll
cmpsb
shlb
add
cmp
lea
jno
int3
mov
repnz
jmp
inc
xchg
or
cmp
mov
loopne
mov
aam
or
jecxz
inc
xor
sbb
mov
pusha
loopne
push
push
add
jp
lds
loopne
cmp
xor
fdivs
clc
xchg
je
mov
ljmp
lock
and
inc
mov
rcr
xchg
shlb
pusha
movsl
out
push
insl
mov
leave
jg
cmp
inc
adcl
rolb
xor
mov
cmc
in
mov
and
mov
loope
mov
out
out
jnp
pop
mov
rolb
outsl
xchg
rolb
push
sbb
shlb
cmpsl
mov
mov
mov
fstpl
mov
nop
icebp
mov
pusha
inc
mov
inc
inc
pop
imulb
fcmovu
or
and
push
aad
sahf
jne
test
add
xor
outsl
mov
cmpsb
mov
mov
adcl
dec
int
add
cmp
loopne
loopne
addb
jp
cmpsb
and
xchg
aad
cmp
sarl
mov
rolb
inc
pusha
call
jge
rol
mov
mov
and
fiaddl
loopne,pn
xchg
pusha
mov
and
pushf
ljmp
jle
loopne
rorl
dec
add
out
mov
and
and
outsb
and
shlb
pop
cmp
sti
xchg
mov
mov
or
pusha
pop
mov
orb
lds
inc
rolb
lahf
xchg
push
mov
pusha
rcrb
jle
pop
inc
or
and
sbb
andb
add
add
cmpb
nop
pop
and
andb
pusha
mov
mov
movsl
inc
shr
fnsave
pusha
mov
into
addb
and
loopne
out
pop
lcall
mov
repnz
addb
inc
mov
mov
add
imul
rcll
cmc
xchg
ds
and
insl
cmp
dec
outsb
ljmp
pusha
add
pusha
shrb
mov
adc
inc
push
pusha
loopne
int
or
imul
and
mov
inc
and
pop
into
shl
mov
xchg
adc
jbe
fmull
inc
loopne
jp
pusha
sbb
aas
cmpsl
rorl
cmp
cmpsb
rolb
enter
cwtl
scas
add
xchg
or
and
jnp
aad
subl
add
pop
pop
pusha
cmp
out
mov
add
mov
jge
shlb
and
cs
pusha
adc
xor
mov
cmp
outsb
jb
add
inc
inc
sub
loopne
popa
xor
sub
subb
mov
iret
inc
sbb
mov
xor
push
pop
or
mov
outsb
out
pop
pop
repnz
pop
ja
or
add
or
mov
sub
repnz
cwtl
fld
sahf
sbb
mov
shr
cmp
inc
rclb
addb
add
inc
push
test
add
out
clc
jl
ja
add
fwait
jmp
into
dec
retw
jmp
mov
cli
mov
arpl
xchg
outsb
dec
in
mov
xchg
pop
enter
ret
sti
jbe
lods
mov
loopne
inc
and
adcb
cmp
dec
test
and
rolb
add
add
add
mov
cwtl
mov
pop
cmp
mov
inc
cmp
cltd
faddl
xlat
cwtl
scas
mov
popf
xchg
aam
push
xchg
pop
sbb
leave
js
push
in
enter
sarb
jb
mov
stos
mov
xor
fcom
lock
inc
cmp
ror
frstor
rolb
call
jae
clc
out
adc
add
add
jp
stc
fcmovne
int3
dec
clc
lods
and
jbe
inc
or
mov
clc
test
scas
cmpl
lods
and
pusha
dec
adc
leave
and
jb
shrl
inc
push
stos
inc
and
fs
pop
dec
cmp
loopne
mov
mov
inc
mov
or
roll
loopne
jae
or
add
push
pop
test
addb
imul
popa
push
loope
test
das
bound
xchg
xor
push
jne
pusha
inc
push
rolb
sbbl
jne
jo
pop
and
sbb
pop
xlat
hlt
aaa
dec
cli
mov
jecxz
and
xchg
out
test
xorb
push
rolb
xchg
loop
test
mov
or
xlat
sub
add
lea
jbe
imul
lcall
add
pusha
inc
mov
add
jp
rclb
add
scas
pusha
and
xor
pop
hlt
xchg
fsts
jae
inc
shll
das
xor
sarb
lods
pusha
add
sub
std
lods
add
xor
outsl
add
mov
leave
insl
add
and
pusha
mov
aam
sbb
outsl
jbe
ss
inc
jnp
mov
mov
test
shlb
jp
outsb
sub
add
mov
out
lods
les
mov
addb
das
adc
pusha
and
aaa
xlat
and
loop
or
out
and
loope
or
add
mov
in
jl
fs
out
sub
jmp
int
jne
mov
loopne
sahf
rcrl
mov
enter
imul
push
mov
loopne
repz
push
adc
dec
sbb
and
add
push
sub
mov
or
lcall
mov
or
and
sub
dec
pop
xor
jne
fwait
daa
xor
in
fdiv
loop
sbb
aas
cmpsb
add
xchg
or
loopne
or
add
repz
pop
addr16
xchg
jp
dec
lea
aas
sbb
adc
fadd
or
or
movsl
mov
iret
push
std
adc
sub
cltd
aad
mov
dec
push
inc
sarb
andl
jne
addb
dec
decl
sbbb
mov
mov
mov
shrb
leave
mov
shll
loopne
mull
add
ret
aam
in
rolb
inc
add
pushf
scas
shlb
nop
jae
pusha
pusha
cmp
mov
pusha
mov
addb
ljmp
push
scas
cmp
stos
add
aas
aam
pusha
pusha
lss
adc
inc
and
into
inc
xchg
mov
cmp
xchg
ljmp
ret
stos
loopne
js
jbe
sar
call
pusha
sbb
shrb
movb
shl
int
push
jnp
adc
roll
ja
nop
dec
stc
push
cmp
aam
addr16
mov
xor
data16
loopne
mov
push
and
mov
mov
add
aam
cld
jp
pop
add
mov
pusha
mov
ret
mov
and
ljmp
addb
mov
test
pop
adc
xchg
cwtl
mov
jecxz
sarb
add
jbe
out
loopne
or
pop
aam
xchg
xchg
in
jb
int3
mov
mov
ret
subb
hlt
subl
pushf
addr16
in
add
cmpsb
pusha
pusha
ljmp
mov
pop
jbe
mov
andb
jg
mov
push
cld
lods
and
shrb
cmp
add
lods
pusha
adcb
push
jno
mov
xchg
test
je
xchg
scas
int
add
fdivl
pusha
out
fildll
and
sahf
pop
movsb
and
call
dec
std
sub
mov
hlt
int
aaa
fwait
repz
sar
jg
andb
pop
cmp
xor
sub
dec
mov
pusha
jae
divb
scas
shlb
mov
in
xlat
adc
mov
add
scas
mov
loopne
or
xor
xor
mov
inc
aaa
dec
xlat
into
das
addr16
mov
sbb
jae
aas
repnz
add
imul
and
xchg
cmp
pusha
mov
shrb
push
cwtl
rorb
test
xchg
aaa
adcl
mov
and
shrl
pop
popf
outsb
jecxz
mov
loopne
inc
loop
fmull
bound
adc
out
adc
mov
xlat
cmp
and
mov
inc
pop
pop
aas
and
movsl
jno
dec
adc
or
mov
jmp
hlt
and
ja
sbb
loope
inc
mov
imul
leave
test
or
loopne
adc
jbe
ja
add
mov
mov
neg
aam
dec
pop
dec
insl
test
cli
xor
add
sbb
loopne
jge
cmp
mov
fimuls
addr16
jle
negl
ja
push
sbb
mull
iret
inc
imul
or
sub
lahf
imul
iret
mov
and
mov
push
add
hlt
ffreep
mov
add
mov
test
sbb
jp
jo
lcall
inc
loop
aad
loop
mov
shlb
les
and
sbb
mov
scas
loopne
negl
pop
loope
mov
add
test
and
ja
or
add
int3
and
enter
cmpsb
pusha
rclb
sbb
jge
adc
cmp
mov
hlt
in
test
sub
jge
sub
loopne
jne
add
sbb
adc
pop
into
xchg
sub
push
inc
and
addb
cmp
loopne
ss
out
repz
adc
mov
mov
cmp
loopne
xor
in
inc
pop
dec
out
addb
mov
push
loop
jg
in
push
pop
popf
out
dec
fs
mov
adc
mov
negl
es
inc
and
mov
sbb
sbb
int3
lret
rol
mov
pop
inc
xor
inc
loopne
dec
loopne
test
xor
hlt
ficoms
bound
loopne
mov
sti
inc
in
or
xor
jmp
test
pusha
loopne
ja
rolb
cmp
jb
ret
jmp
and
sub
inc
dec
mov
sbbb
inc
mov
and
push
mov
pusha
pusha
and
orb
inc
fidivrs
mov
adc
inc
sahf
mov
xor
aaa
cmpsb
inc
add
xchg
call
mov
idivb
fwait
lcall
pop
out
jge
pop
dec
mov
and
gs
mov
cmp
mov
rcl
loope
in
cmp
movsl
js
stc
scas
inc
sub
rolb
and
xorl
sti
inc
sub
inc
das
dec
mov
push
leave
xchg
int
mov
and
lcall
inc
neg
cs
inc
sub
dec
ret
movzbl
popa
out
jbe
scas
mov
loopne
pop
ss
es
arpl
insl
std
sub
je
bound
cmp
roll
inc
in
mov
pop
push
cmp
sbb
and
and
sarb
mov
hlt
pushf
popa
aam
push
imul
jnp
pusha
and
test
add
inc
and
push
mov
push
mov
inc
inc
and
imul
mov
loope
shrb
mov
inc
inc
cmp
gs
fistl
push
lea
lea
andb
pop
fistpl
mov
and
pop
addb
fs
inc
imul
enter
and
add
mov
je
gs
mov
ret
test
push
jb
test
and
mov
pusha
inc
fdivrl
inc
jbe
mov
notl
push
jg
adc
pusha
loopne
nop
mov
mov
add
push
add
jp
add
aam
inc
pusha
imul
mov
and
mov
mov
add
cmpsb
and
aad
cmp
mov
xor
cmp
nop
push
decb
add
arpl
and
shr
lock
pusha
mov
push
cmp
test
mov
fldt
inc
cmpb
mov
pusha
mov
pop
hlt
out
or
inc
in
test
push
pusha
loopne
inc
and
pop
aam
pusha
loopne
pop
jecxz
lahf
mov
jno
mov
jge
jmp
jns
adc
cwtl
pushw
inc
shlb
add
push
pop
sti
stos
loopne
test
test
loopne
mov
pop
hlt
mov
aam
int3
sub
pusha
rclb
mov
hlt
loope
repnz
cmp
mov
jg
add
xor
test
add
xor
inc
or
cmpsb
mov
addb
mov
sub
loopne
leave
push
adc
push
mov
adc
pop
js
mov
aam
sbb
cmp
push
pusha
and
push
pop
xor
loopne
enter
cmp
nop
xor
pop
or
and
sbbb
rcll
pusha
and
loope
dec
cmp
addr16
inc
dec
or
movsl
bound
ja
mov
xlat
lds
inc
and
mov
loopne
xchg
sub
sarb
cmpsb
andb
jne
lods
out
or
sbbb
and
or
int3
lods
inc
adcb
pop
cld
dec
les
pop
jno
icebp
xchg
lods
loopne
sbb
lcall
xlat
jl
sti
sub
adc
and
mov
int
mov
and
andb
and
pop
mov
pusha
push
addb
mov
shlb
outsl
jp
arpl
shl
icebp
pop
mov
pop
pop
scas
mov
stc
stos
add
jl
or
fsubs
ljmp
imulb
addb
jp
mov
addr16
gs
pop
mov
shlb
xchg
mov
xchg
mov
inc
xchg
sub
add
xchg
xor
shlb
loop
ja
aam
hlt
pop
jg
mov
icebp
iret
jl
fs
fstps
aas
imul
mov
lret
jb
mov
mov
loop
jbe
push
les
and
insl
xor
add
inc
imul
sub
mov
mov
jmp
out
popf
push
xor
pusha
add
test
aad
inc
sub
fwait
lds
hlt
jp
pusha
loopne
loope
mov
rcr
lahf
leave
cmp
movsl
pop
lret
mov
mov
adc
scas
add
inc
xor
xchg
inc
add
adc
mov
add
subb
inc
out
mov
scas
addb
push
push
adc
add
inc
mov
add
mov
mov
sahf
pusha
mov
inc
mov
mov
mov
andb
loop
mov
pop
loop
mov
js
adc
add
dec
push
add
hlt
xchg
fs
sbb
fwait
add
push
mov
and
nop
xchg
push
movsl
gs
mov
mov
jbe
sbb
xorb
mov
adc
mov
mov
add
mov
cli
scas
push
jne
inc
aad
and
mov
add
gs
xlat
cmp
jnp
pop
cmp
pop
imul
imul
inc
fsubrs
adc
fisubrs
aas
fs
in
leave
shlb
rolb
shll
cmpb
dec
sub
pushf
fsubp
mov
insb
out
dec
sub
xchg
gs
push
mov
pusha
inc
push
decl
cmpb
mov
add
jno
pusha
add
ss
jmp
dec
jecxz
and
push
add
inc
mov
andb
sbbl
scas
loopne
add
pop
add
pusha
outsb
aas
out
mov
lea
push
pop
push
outsb
lock
fstp
enter
mov
cmp
repz
das
push
xlat
lahf
xchg
jno
adc
sub
popa
adc
jnp
xlat
fildll
inc
xorb
imul
jns
jb
loopne
sbb
and
call
xor
aad
cltd
pop
stos
pusha
pusha
jb
pop
add
mov
cmc
pushf
mov
hlt
imul
dec
movsl
and
add
test
aam
xchg
in
push
xor
and
add
pusha
adc
mov
mov
jb
aas
cmp
xor
aad
xchg
xchg
into
loopne
out
jge
push
outsl
inc
jp
je
out
js
shlb
pop
jne
mov
push
fadd
sub
pop
push
mov
add
inc
adc
stos
mov
xor
and
add
cmpl
or
mov
loopne
pop
out
pop
btr
testb
insb
xchg
std
dec
test
inc
outsb
shll
mov
shl
xchg
fwait
push
sub
mov
mov
mov
test
inc
mov
je
call
jmp
add
cmp
inc
mov
push
mov
xor
xchg
push
and
je
aad
xchg
cltd
lds
add
enter
sub
and
cld
cmp
xchg
out
xchg
xor
sub
sarb
dec
lea
mov
sbb
sbb
inc
add
inc
pusha
push
inc
add
pop
test
subb
cmc
fstl
cmp
rorb
add
xchg
out
add
sarl
repz
adc
addr16
inc
mov
or
inc
icebp
pop
mov
lods
ljmp
sbb
add
dec
sub
cld
or
sub
mov
stos
loopne
in
inc
inc
adc
jmp
aas
push
add
add
and
in
mov
je
imul
and
push
mov
out
dec
fidivrl
add
pusha
sub
sub
iret
xlat
xlat
gs
adc
ljmp
or
xchg
mov
inc
loopne
add
aas
sub
scas
add
loop
pop
je
insl
push
imul
adc
and
icebp
adc
dec
push
inc
pusha
sub
pusha
pop
shrb
push
in
inc
mov
push
cmp
adc
rcrl
jle
pop
jecxz
mov
and
lahf
dec
mov
iret
dec
imul
dec
mov
in
sbb
enter
pop
lcall
pop
gs
mov
mov
pusha
push
imul
mov
iret
jo
sub
jno
add
add
jge
mov
lcall
inc
and
mov
int3
mov
fmul
jnp
outsl
aam
inc
inc
sbb
data16
rolb
mov
imul
daa
incl
sahf
mov
jp
mov
loope
cmp
mov
push
fisttpll
pusha
add
pop
mov
xorl
fidivrl
lret
jl
stos
cli
cltd
lock
incl
push
lahf
mov
jp
pop
pop
adc
pop
pop
cmc
push
xor
les
call
pushf
testb
and
enter
push
push
inc
add
icebp
add
adcl
pushf
adc
loopne
push
pusha
add
insl
and
cmp
fisubrs
pusha
inc
add
lahf
and
cmp
call
pusha
push
pop
enter
dec
xchg
pop
jge
movsl
push
and
cltd
fiadds
test
or
push
add
inc
xchg
and
ja
and
loopne
add
mov
ljmp
js
lret
pusha
mov
jg
push
pusha
pusha
dec
jp
stos
mov
sbb
repnz
xor
mulb
pop
adc
scas
cmp
dec
popf
pushf
mov
fwait
mov
les
fildl
cmp
add
cmp
inc
add
out
addb
fwait
dec
popa
mov
daa
jl
fdivrl
xchg
jno
aas
scas
inc
mov
push
jo
loopne
cmpsb
pusha
pusha
in
lahf
jns
add
jae
pusha
add
and
sarb
pop
pushf
mov
push
loopne
into
or
pusha
cmpsb
mov
adc
ss
jg
inc
or
add
add
xor
jno
je
pushl
pop
jne
pusha
shlb
loopne
add
cltd
imul
cmc
test
mov
out
gs
inc
ljmp
aaa
fdivl
arpl
insl
mov
loopne
lock
data16
out
pop
je
jae
cmpsl
sub
mov
add
xor
jg
int3
sub
inc
cmp
addb
sarb
rolb
add
or
decl
inc
mov
and
aaa
imul
getsec
or
push
mov
adc
pusha
sarb
nop
xchg
cs
rolb
sar
lret
sbb
xor
fbstp
and
add
mov
shrb
jnp
push
sbb
inc
inc
dec
cmc
lahf
cltd
push
in
adc
int
add
ret
test
in
cmp
xchg
mov
push
mov
lret
pop
lea
add
dec
and
sahf
mov
or
and
aad
xchg
loope
rcrb
inc
cs
inc
jo
inc
imul
xchg
mov
imul
fsts
cld
mov
ds
shrl
nop
aam
cmp
rolb
sbb
cld
je
mov
mov
sarl
aad
imul
mov
scas
mov
dec
push
adc
addb
push
and
dec
mov
push
mov
push
mov
lcall
ljmp
xchg
pushf
into
push
and
mov
ret
andb
sbb
rcl
sbb
or
addb
lret
push
inc
pusha
add
inc
jmp
shl
ljmp
test
and
jo
and
lahf
nop
movsl
sub
clc
mov
jecxz
shr
sbb
in
xor
stos
pusha
adc
jb
mov
pushf
and
loopne
and
jb
add
cli
push
jge
int3
movsl
roll
push
add
jnp,pt
fstps
add
push
cmp
cwtl
fistpl
loopne
int3
fisttpl
mov
shlb
push
mov
and
popf
stos
add
outsl
negb
lods
ds
addb
hlt
cmp
jle
inc
mov
and
sahf
arpl
pusha
add
and
cmpsb
inc
pusha
mov
sub
push
lret
inc
stos
mov
sbb
insb
mov
push
and
jle
mov
stos
pusha
loopne
adc
lcall
and
push
mov
xor
pop
cli
shr
cmp
xor
inc
inc
into
out
mov
rorb
xor
jne,pt
inc
pusha
mov
and
push
daa
aas
mov
push
adc
ds
test
rcr
sub
std
pop
sbb
std
push
daa
aas
and
pop
in
mov
dec
bnd
hlt
fwait
dec
loopne
pusha
sub
xrelease
mov
xchg
aad
hlt
popa
aad
imul
and
icebp
nop
sarb
repz
in
mov
xchg
addr16
mov
rol
fwait
mov
inc
dec
rorl
cmp
jmp
mov
xchg
int3
and
cmp
aam
shlb
mov
repnz
mov
and
or
fimuls
arpl
test
add
push
and
rol
test
push
push
in
add
inc
cmpb
jns
mov
cwtl
pop
push
repnz
and
call
out
and
jnp
inc
pop
mov
pusha
jl
testl
cltd
mov
loopne
mov
or
sub
movsb
andb
adcb
int
inc
inc
jl
xchg
and
mov
mov
mov
push
inc
loopne
insl
aam
repz
mov
icebp
or
nop
test
adc
mov
push
or
loopne
repnz
shrl
push
sub
and
push
mov
aas
outsl
mov
pusha
insl
out
xor
xchg
push
pusha
xorb
loopne
jle
add
jb
mov
and
repz
inc
sbb
cwtl
aam
push
jns
add
clc
negl
test
hlt
jo
xor
add
sbb
lcall
push
xchg
push
push
xchg
dec
sbb
xchg
sub
push
subl
mov
xor
or
pusha
addb
xchg
in
and
pusha
push
loope
push
loopne
dec
rolb
jmp
test
inc
in
sbb
mov
xchg
andb
and
scas
add
ljmp
clc
or
jl
arpl
adc
push
push
ficomps
ja
xchg
ficoml
pusha
rcl
or
mov
jge
outsl
cmp
xlat
inc
dec
add
movsb
add
xor
mov
or
xchg
sub
mov
mov
out
out
sti
pop
pop
xchg
or
in
dec
mov
jb
mov
sub
mov
add
pop
icebp
rolb
and
je
into
addl
mov
loopne
inc
cmp
movsb
loopne
sub
rolb
addb
shlb
jne
jne
mov
add
xchg
into
ret
js
xlat
loop
shl
xlat
pop
mov
lahf
sub
xchg
mov
movsl
push
lock
and
dec
inc
mov
mov
inc
cmp
cwtd
mov
mov
and
or
mov
inc
icebp
in
repnz
and
push
jnp
xchg
dec
out
cmpsb
add
mov
nop
pop
fdivs
sub
mov
outsl
push
idivb
sub
shlb
pop
or
inc
out
and
adc
add
push
add
lcall
add
andb
cmc
add
mov
mov
and
pusha
sarb
lcall
cwtl
add
shr
int
and
arpl
pop
mov
mov
rcr
add
loopne
ror
ret
divb
sar
scas
loopne
inc
xor
popa
lcall
or
push
lea
jnp
popf
sbbl
jg
add
addl
jo
idiv
cmp
jae
mov
pusha
int
divb
or
add
pusha
jg
rcll
mov
inc
scas
mov
and
loopne
xchg
iret
and
loopne
mov
inc
dec
jl
add
movsb
mov
ret
lret
adc
loopne
bnd
dec
dec
shlb
and
andb
and
xchg
mov
fistl
mov
pusha
andb
fsubrs
loope
rolb
pusha
inc
pop
loopne
dec
pusha
jg
push
outsl
dec
clc
xor
adc
mov
and
loopne
fldt
stc
push
adc
sbb
inc
jl
loopne
mov
mov
mov
mov
xor
mov
xchg
xchg
clc
ret
shlb
cmp
push
pop
sub
pop
jno
add
add
ret
imul
shll
mov
sub
cld
xchg
xchg
inc
shl
pusha
pusha
int
pusha
add
out
nop
dec
pop
dec
push
cmp
lret
loopne
repnz
cmc
std
fists
lds
loopne
pop
insl
adc
mov
sub
sahf
jge
lret
sbbb
inc
in
jns
rol
addb
inc
pop
jmp
shrd
mov
cld
sbb
andb
pop
mov
jp
ror
cwtl
pusha
inc
repz
icebp
test
sub
sbb
cmp
pop
stc
jnp
scas
loopne
fimuls
mov
mov
mov
mov
cltd
ror
repnz
loope
fiadds
faddl
jecxz
push
das
fcoml
jo
cmp
inc
adc
fnstcw
int
lcall
push
add
pop
mov
ljmp
add
shl
fdivrp
cmp
clc
aas
xchg
sbb
push
sbb
or
or
inc
dec
push
push
pop
inc
push
xor
jne
inc
xchg
jb
inc
loopne
sbb
mov
insb
pop
stc
push
xor
clc
sub
ror
mov
or
insl
pop
gs
jp
lret
aam
dec
add
clc
iret
dec
inc
jo
jae
and
stc
ljmp
or
orb
mov
mov
mov
das
rdtsc
into
inc
pop
xchg
xor
lds
cmpsl
and
jns
loopne
imul
lcall
and
loop
add
mov
inc
adc
mov
jle
dec
psraw
stos
loopne
push
lds
daa
jne
push
mov
rolb
xorb
cwtl
stos
pusha
pusha
int3
jne
sub
loopne
xchg
stos
or
inc
jmp
das
jmp
jecxz
popf
jp
inc
or
inc
mov
adc
aaa
or
push
inc
stos
ljmp
pop
push
and
mov
mov
mov
shrb
mov
aam
lahf
ret
rcrl
add
es
add
add
jno
ja
xchg
mov
clc
imul
push
fisubrl
ja
ret
xchg
mov
mov
les
out
sbb
fstl
pop
pop
movsb
loopne
jp
outsb
push
inc
pushl
pop
aam
and
jl
nop
cli
test
inc
pop
movsl
xchg
jb
lock
mov
mov
push
sub
inc
mov
dec
and
rclb
mov
rcr
ljmp
inc
dec
aam
ret
test
adc
jno
push
jno
scas
mov
int
ljmp
push
mov
jl
xchg
nop
ret
imul
pusha
inc
in
pop
lea
stc
nop
mov
mov
rolb
push
int3
shlb
mov
daa
sub
fldl
mov
cwtl
popf
arpl
push
inc
pusha
xor
adc
in
lock
loopne
cmp
push
fwait
xchg
xlat
sub
mov
fwait
pushf
inc
adc
add
mov
inc
mov
xlat
imul
or
pusha
add
push
xor
inc
mov
mov
mov
jnp
rolb
icebp
loopne
mov
rclw
add
add
test
sahf
sbb
inc
jg
mov
loopne
mov
imul
mov
add
popa
in
mov
add
mov
jae
mov
xchg
push
or
addb
loopne
cli
xchg
scas
insb
jnp
fnstcw
dec
sarl
cld
stos
pusha
add
jae
inc
rolb
add
mov
rcll
fcoms
cld
cli
push
sbb
lret
movsb
add
imul
pop
inc
adc
adc
adc
cli
xchg
leave
or
rcrb
inc
and
ret
add
pop
mov
sarb
dec
sbb
inc
push
pusha
subb
jns
clc
sahf
sub
and
pop
stos
movsl
pop
push
ficoml
popf
or
jb
cltd
jle
inc
das
jnp
or
push
andb
or
daa
jl
imul
or
xchg
fisubrl
js
add
ror
jb
cltd
pop
lea
mov
xchg
add
stos
inc
mov
rolb
shrl
scas
and
roll
int
loopne
mov
inc
sarb
mov
adc
fisubs
loop
xlat
dec
lods
rolb
shlb
mov
addr16
jecxz
ret
pop
xchg
scas
mov
xchg
hlt
pusha
cmp
and
mov
mov
and
addb
cmp
or
inc
pop
adc
sarl
pushw
and
mov
in
jl
mov
std
addb
add
fidivl
lock
std
mov
pusha
xchg
push
roll
xor
and
enter
repnz
pusha
sub
scas
loopne
cmp
and
jno
cltd
mov
cmc
pushf
sbb
adc
rolb
pop
mov
loopne
push
loopne
mov
jb
inc
rcl
outsl
xchg
lock
shll
mov
sbb
add
mov
addb
push
movsb
and
test
imul
lea
stos
dec
dec
out
rolb
in
dec
das
mov
fs
mov
lret
mov
sahf
test
add
lock
inc
shr
ja
fdivrp
xor
and
jbe
dec
and
add
lods
cmp
lcall
sub
add
inc
rorb
loopne
sub
mov
ss
pop
lcall
push
mov
inc
andl
push
or
and
and
fstp
jae
dec
sarl
inc
rclb
ret
cli
mov
bound
pusha
decb
test
add
inc
imul
pop
stc
sbb
mov
mov
push
gs
mov
stc
fildll
es
and
or
mov
add
repz
or
cmp
scas
push
repz
ret
loope
dec
scas
add
sub
neg
inc
dec
inc
push
inc
pushf
pusha
mov
xlat
jo
fidivs
xchg
mov
shlb
xchg
ret
test
jb
xor
popf
dec
add
and
sbb
add
loopne
shlb
repz
xor
ds
pop
jne
push
sbb
pop
popa
insl
movsb
rolb
jecxz
dec
es
andb
mov
mov
push
pusha
addb
or
inc
pushf
clc
ja
rcrl
add
add
dec
mov
lock
in
insb
aas
mov
fcmovne
movsl
outsl
in
adc
bound
inc
out
mov
mov
and
leave
add
pop
mov
ret
mov
scas
and
sub
jne
bound
cmc
stos
aas
sbb
inc
imul
stc
hlt
sarl
push
add
and
xor
xlat
or
inc
mov
inc
and
pusha
inc
xorl
or
adc
xor
lea
pusha
add
fcoms
adc
add
popf
jmp
sbb
and
mov
insb
test
and
and
outsl
pop
in
cli
mov
fisttpl
icebp
xchg
push
movb
mov
sbb
or
incb
jae
and
loop
pusha
and
andl
aaa
repz
inc
mov
add
inc
stos
push
mov
std
jp
jo
enter
orb
jmp
cmp
inc
pop
jg
dec
aas
pop
sbb
loop
and
jno
dec
inc
mov
bound
addb
and
stos
adc
cmp
out
leave
push
jl
scas
inc
inc
or
and
xor
shlb
loopne
pusha
rorl
mov
in
jle,pt
xor
push
and
rcrb
lcall
pushf
ss
js
push
push
add
inc
xchg
sub
jnp
jnp
je
jmp
in
push
fisttpll
jnp
inc
and
mov
sub
pusha
dec
test
pusha
pusha
sub
loopne
js
lock
icebp
movsb
pusha
inc
and
subl
shlb
sbb
inc
xchg
adc
add
in
repnz
mov
push
mov
mov
out
cmp
in
xor
repz
push
arpl
pusha
pushf
mov
mov
inc
adc
mov
xchg
pop
cmc
aad
enter
pop
les
pop
js
ss
out
mov
lea
rcrl
ds
pop
add
mov
mov
and
add
and
mov
enter
dec
pop
aad
ucomiss
shr
or
jecxz
cmp
scas
addb
or
rcr
loopne
divb
pusha
xorb
add
and
adc
mov
pusha
loop
out
out
adc
add
cmp
jne
addl
adc
cmp
mov
test
test
and
and
pusha
inc
fsubrp
push
insb
fistps
pusha
add
and
pop
cmp
fs
dec
outsl
sbb
daa
and
repz
push
jbe
push
inc
adcb
shl
pop
ss
nop
jle
addb
loope
decb
sbb
dec
je
xor
push
addb
jne
xchg
movsb
pusha
pusha
adc
faddl
leave
ja
stc
stos
addb
fstpl
mov
andl
call
repz
ja
rcl
jmp
incb
rolb
push
push
cmp
add
fisubrs
mov
dec
and
shrb
shlb
push
int
movsb
inc
pusha
clc
mov
rorl
cwtl
scas
shlb
jae
rorb
js
xchg
cmp
pop
sbb
sbb
sarb
add
jg
xchg
imul
loop
fs
int
int
lods
icebp
les
jmp
mov
mov
add
inc
pop
aam
nop
sti
out
lea
pop
fsubs
sti
test
push
in
insl
paddb
and
push
andb
dec
hlt
sub
add
out
lods
loopne
push
rcr
adc
mov
push
int3
enter
pop
jo
jns
je
fcomps
rcrl
sub
pusha
jg
fdivrl
std
sub
pusha
cmp
mov
movsl
shlb
addb
repnz
fs
adc
adcb
lds
xorb
dec
into
cmp
add
shlb
mov
mov
out
popf
sti
int3
jge
pop
mov
inc
cltd
imul
sarl
imul
push
outsb
inc
dec
mov
fcmovb
jmp
adc
dec
adc
mov
loopne
xabort
popf
aam
mov
shlb
loopne
push
andb
nop
out
cltd
test
loopne
add
mov
outsl
flds
shlb
cmc
and
and
inc
lods
popf
xchg
jno
test
andb
xchg
sarl
clc
add
jnp
mov
je
js
xchg
cmp
add
add
xor
inc
ss
cli
xor
sbb
xchg
mov
xchg
push
xchg
enter
cmpsb
andb
adc
in
pop
push
daa
es
rolb
add
pop
jae
dec
shrl
xor
xchg
adc
lock
addb
push
and
and
and
icebp
es
mov
jo
addl
push
dec
dec
mov
rol
mov
cltd
mov
orb
mov
jle
mov
dec
pop
outsb
mov
inc
adc
and
inc
push
sarb
xchg
cmp
adc
lea
add
cmc
lods
incl
pop
shr
cmp
mov
inc
stos
repnz
loopne
cmp
cmp
pushf
push
fdivs
jns
andb
cmp
std
push
loopne
mov
or
xchg
arpl
int
sub
loopne
add
adcb
push
leave
or
xchg
mov
mov
jb
fwait
mov
mov
xlat
push
pop
or
sbbb
mov
jae
aad
cli
adc
ret
into
fwait
mov
xchg
shr
andb
pusha
lods
add
xor
test
and
lret
rclb
add
bound
add
sbb
push
push
ret
jge
jno
inc
inc
add
add
mov
pop
cmc
sbb
orl
scas
mov
inc
stos
dec
xchg
pusha
mov
add
push
and
stc
push
cmp
scas
and
adc
sar
ljmp
adc
inc
inc
mov
mov
cs
sarb
cli
lea
xor
sub
pusha
icebp
mov
mov
or
inc
jbe
jmp
add
mov
loopne
inc
insb
push
jb
enter
fwait
xor
mov
ret
lret
int3
loopne
add
sbb
ss
mov
imul
loopne
loopne
out
push
jns
call
in
mov
ss
das
push
adc
sbb
stos
shlb
in
mov
divb
fisttps
cs
subb
jae
and
iret
fmuls
add
flds
mov
fsubrs
mov
andb
adc
lahf
add
lret
push
rolb
ljmp
dec
sbb
ret
pusha
icebp
test
push
stc
sub
mov
push
and
addb
pusha
stos
and
jnp
jmp
popa
jb
arpl
hlt
push
xchg
cs
loopne
or
inc
mov
mov
ficoms
and
ds
shlb
inc
pusha
and
pusha
stc
push
mov
int
loopne
test
inc
bound
fs
es
jo
cld
out
jo
xor
adc
inc
loopne
pop
lret
mov
mov
andb
mov
mov
push
sub
and
or
sbbb
push
jl
pusha
pusha
lock
jne
out
dec
jb
cmpl
pop
cld
out
jae
jnp
pop
mov
mov
ja
cmpl
push
pop
jne
sti
hlt
jns
xor
pusha
push
outsl
mov
sub
push
loopne
mov
ss
rclb
add
je
add
jae
loopne
in
cmc
inc
jbe
lret
in
dec
fiaddl
and
scas
pop
xchg
scas
add
lahf
lret
je
pusha
add
insl
andb
and
ja
lret
mov
dec
test
and
int
and
iret
sub
xchg
xchg
cld
cmp
cmp
inc
into
addb
adc
je
cmp
test
add
roll
dec
es
jno
jle
shll
xor
xor
pusha
loopne
xchg
sub
mov
rolb
sti
dec
inc
push
push
inc
shrb
lret
sub
imul
cwtl
enter
movsl
pop
add
rolb
shll
stos
and
int
jnp
and
mov
rol
and
nop
nop
ja
sub
shlb
pushf
sub
lods
shlb
inc
adc
repz
loopne
shlb
mov
jno
popf
lods
mov
push
or
pop
xchg
add
and
popa
inc
jp
andb
inc
pop
lods
mov
sbb
insl
pop
mov
push
sub
rclb
and
loopne
shll
iret
cmp
cwtl
repz
or
inc
addl
stc
lret
jns
mov
add
push
clc
ljmp
enter
pusha
enter
out
jg
lahf
test
iret
cmp
repz
mov
shlb
sbb
xorb
div
xor
jnp
ret
rcl
pop
mov
pusha
out
stos
mov
xchg
xchg
sbbb
std
mov
mov
ja
movsb
add
fsubl
xor
loopne
cmp
cld
sub
daa
or
andb
mov
jp
ret
mov
sub
andb
repz
fisubs
and
inc
xlat
jns
fcmovu
jne
ret
adc
sub
cmp
jno
push
leave
push
loopne
cmp
xlat
cmp
in
add
pusha
popl
andb
rcrl
and
sub
loopne
jge
addb
je
addr16
je
sub
adcb
aas
mov
add
subl
push
popa
int3
addr16
out
popa
mov
xorb
fnstcw
int
cli
ffree
int
stos
test
dec
dec
pop
and
shlb
shr
rcrb
mov
add
inc
divl
je
pop
adc
dec
lcall
jl
fsubs
mov
mov
cmpsb
add
outsl
dec
jno
inc
ficompl
jnp
out
mov
sti
lahf
jnp
addb
popa
pop
in
xchg
scas
inc
and
aaa
fiaddl
lock
dec
jne
loopne
scas
insl
fdivs
mov
pusha
mov
xor
mov
loopne
leave
mulb
lret
icebp
mov
mov
inc
negl
mov
mov
popf
sti
mov
and
jbe
stc
mov
fwait
in
dec
adc
mov
pop
pop
je
jmp
addb
lds
adc
push
xor
enter
pusha
into
cmp
xchg
hlt
mov
subl
fsincos
lcall
sub
int3
andb
ror
ja
and
dec
lret
or
shl
loopne
insl
lret
add
pusha
cwtl
sbb
adc
jb
out
pusha
orb
addb
jo
test
pop
out
and
and
inc
clc
and
jecxz
and
arpl
sub
cs
scas
mov
int
add
loopne
adc
mov
sub
and
dec
and
sbb
inc
and
sub
mov
cltd
sub
mov
adc
push
push
loope,pt
inc
lds
mov
pop
adc
int
push
or
mulb
addb
and
sbb
ljmp
inc
pusha
xchg
mov
das
ret
int
push
jp
repnz
mov
shl
out
daa
jo
mov
pop
cmp
fdivs
inc
and
loopne
mov
adc
sahf
in
into
ror
mov
cmp
push
pop
imul
mov
xchg
push
xor
adc
cmp
subl
test
mov
roll
mov
mov
cmpsl
add
mov
jl
cwtl
or
pusha
xchg
ror
movsl
xor
loopne
sbb
test
loopne
jb
clc
test
inc
stc
push
jl
nop
xchg
lods
lds
aaa
pop
imul
push
pusha
shrb
and
sbb
inc
add
in
or
add
mov
add
lret
out
sub
jno
xchg
jecxz
inc
pusha
lock
lds
daa
adc
mov
ret
dec
jmp
adc
sbb
cmp
mov
ret
mov
cmpl
rolb
jne
enter
pusha
and
xor
add
inc
fcmovb
aam
outsl
push
pop
jae
cltd
int3
jnp
mov
notb
in
jecxz
and
and
xchg
aad
jmp
lods
pusha
add
or
sar
mov
dec
test
add
mov
pop
and
xorb
inc
inc
xchg
mov
ror
xchg
sbb
lret
inc
inc
push
pusha
cwtl
dec
jae
inc
jbe
mov
icebp
or
mov
inc
inc
imul
fsubs
jecxz
bound
ja
arpl
adc
push
pusha
inc
xchg
leave
sub
aad
add
pop
push
dec
cmpsb
pusha
and
sbb
fwait
std
mov
mov
lcall
jo
add
mov
sub
insl
mov
sub
inc
jecxz
pop
push
and
rolb
or
mov
ja
xchg
rclb
imul
and
sar
mov
xchg
add
add
call
out
fmul
fsts
jne
in
aad
push
sub
andb
in
jp
xchg
push
jae
jnp
pusha
jb
rolb
mov
mov
mov
scas
and
in
jne
push
mov
add
in
fimull
roll
add
pusha
jmp
jae
fcomi
lcall
sti
fsubrs
cmpsb
inc
and
and
sub
pusha
dec
xor
add
rcrl
pop
mov
je
je
dec
mov
mov
push
xor
sub
popf
xchg
dec
pop
sahf
and
repz
pushf
out
out
pusha
loopne
mov
and
mov
add
mov
push
sub
mov
cmc
leave
push
mov
adc
shrb
icebp
nop
cltd
jnp
mov
iret
aas
inc
out
xchg
out
addb
out
ss
lock
cmc
push
rorb
cmpsl
out
inc
negb
mov
rolb
js
sar
pop
jae
in
xchg
movsl
les
and
mov
add
out
int
jecxz
sbb
inc
inc
iret
pusha
push
pusha
rcr
cmpsb
rolb
mov
inc
pusha
adc
or
loop
mov
fmul
add
or
loopne
and
mov
loope
jle
rol
fisttps
addb
cltd
loope
loope
outsl
inc
lods
mov
mov
shl
dec
aas
push
popa
dec
jne
pop
mov
add
aaa
test
and
pop
and
rolb
sarb
fildll
pusha
ljmp
testl
push
push
pusha
inc
out
jg
insb
ja
push
fsts
pop
mov
adc
cwtl
into
scas
lods
mov
shl
cmpsl
sbb
add
mov
lret
addb
xchg
nop
rolb
shlb
pop
out
stos
cmpsb
rolb
shrb
jns
andb
and
and
loopne
shlb
aas
xor
std
test
inc
or
out
aas
mov
aas
shll
shl
inc
pusha
lea
loope
push
dec
int3
ja
jnp
xchg
pushl
mov
pusha
inc
out
iret
fsubrl
xor
inc
xorb
sti
dec
lock
fucom
sahf
push
fidivl
jp
mov
rclb
add
adc
add
mov
adc
cmc
push
xor
in
jle
lahf
jbe
mov
scas
lcall
pusha
add
sbb
xchg
sbb
loopne
jae
inc
push
mov
mov
adc
test
mov
shll
pop
int3
push
pusha
std
adc
sub
pusha
dec
pop
movsl
cmp
jle
fistpl
scas
pusha
pusha
sahf
mov
add
adc
jecxz
add
jp
vpsubusw
push
pop
mov
jb
sub
and
addb
pop
jb
inc
mov
mov
cmp
jle
loopne
dec
push
push
sbb
add
mov
repnz
mov
sahf
mov
add
sbbl
mov
xor
fwait
in
jge
loopne
cmp
pusha
pusha
enter
dec
jmp
lret
sub
cltd
add
inc
outsb
cmp
test
lret
hlt
pop
aam
mov
adc
pop
lcallw
shl
sub
and
sbb
loopne
pminub
rclb
ror
or
mov
test
ss
mov
loopne
scas
pusha
and
mov
mov
daa
andb
sbb
mov
lahf
push
sub
and
mov
xor
and
enter
and
xor
aas
aam
jae
call
out
out
mov
cmpsl
pop
jns
arpl
inc
loopne
and
mov
pusha
mov
xlat
inc
std
sbb
xor
fwait
jns
loopne
int
lcall
xor
add
push
out
and
fistpl
movsw
xor
cltd
test
or
add
adc
shlb
dec
jno
mov
outsb
scas
inc
mov
mov
push
ret
jae
mov
loopne
pop
mov
pop
bound
mov
lahf
jno
fsubp
movsb
inc
loopne
and
fwait
shlb
xchg
cwtl
mov
add
movsb
add
inc
shrb
cwtl
lds
mov
fwait
scas
and
cmp
stos
pusha
pusha
clc
xor
scas
jnp
shlb
pusha
popa
sbb
push
mov
and
stc
mov
lods
imul
mov
lcall
jns
add
andb
sub
mov
or
inc
mov
push
les
lock
push
cmp
xchg
lret
sbb
leave
add
into
push
or
jmp
movsl
imul
sbb
fs
fs
push
shll
dec
andb
or
and
je
push
scas
andb
and
pop
sub
add
mov
ret
adc
mov
jo
popfw
adc
stos
shl
cmp
arpl
jno
loopne
xchg
mov
xor
mul
daa
imul
jp
test
aaa
mov
pop
nop
and
cmp
add
frstpm(287
stc
xchg
inc
pop
fidivrl
inc
mov
stos
rolb
sarb
dec
rol
sub
mov
shlb
nop
fldl
inc
pop
mov
fdivrp
les
pop
rcrb
loopne
mov
mov
dec
adc
dec
ds
nop
or
sbb
fwait
jecxz
push
jp
imul
mov
pop
adc
mov
and
rolb
xor
jae
loopne
add
pusha
fistpll
imul
addr16
aam
and
aam
rolb
in
cmp
test
mov
mov
popf
in
and
add
mov
stos
loopne
bound
out
or
popa
icebp
mov
jg
push
pop
or
push
lock
xor
scas
inc
loopne
hlt
cmpsl
add
andb
icebp
push
repnz
mov
scas
pusha
mov
andb
jg
icebp
mov
dec
fsubl
shl
andb
out
mov
adc
or
mov
test
mov
push
in
mov
dec
cmc
mov
loopne,pn
push
pop
jo
test
and
movsl
nop
ffree
jp
out
add
out
add
insb
and
pusha
push
ret
or
rorl
outsb
adc
sub
loopne
fsubrs
adc
sub
pusha
or
shlb
or
ja
js
cmp
adc
ret
mov
push
mov
loop
shll
shlb
sub
add
or
inc
and
sbb
push
mov
jl
call
andb
jp
and
inc
inc
lret
mov
lret
inc
sar
and
mov
enter
cs
mov
mul
stos
mov
mov
loopne
jg
jge
push
xchg
mov
sbb
mov
sbbl
mov
sub
pop
popa
dec
and
pusha
ret
xchg
pop
inc
jno
adc
push
gs
push
daa
and
fstp
in
insb
push
mov
mov
in
les
inc
xchg
leave
into
orl
addl
cmc
sub
pop
inc
incb
gs
mov
sahf
pop
dec
adc
addb
lret
mov
and
jbe
movsb
and
iret
in
mov
xor
pusha
add
cmp
inc
add
and
mov
inc
add
and
jl
sti
xor
add
shll
mov
mov
mov
rcrb
in
mov
adc
mov
int3
ret
mov
inc
dec
sbb
cmp
xor
lods
pop
push
in
mov
sbbb
sub
add
and
xchg
xchg
loopne
mov
xorb
into
fists
int
in
adc
movsb
pusha
mov
mov
xchg
inc
dec
inc
sub
ret
in
push
add
pusha
dec
jp
push
icebp
dec
aaa
std
cmp
ret
lds
ss
xchg
loop
and
mov
xchg
call
gs
shlb
xchg
push
xor
or
mov
rolb
fnstsw
mov
aam
cmpsl
mov
inc
sub
inc
imul
add
add
mov
cmpsb
addb
scas
mov
or
and
add
add
lret
mov
inc
insl
sti
jnp
imul
test
shr
popa
call
or
inc
and
pusha
lock
xor
inc
testb
mov
cmp
cmp
rolb
or
sbbb
addr16
and
mov
jmp
movsl
push
pop
in
and
stc
fwait
and
add
inc
pusha
pop
movsb
loopne
iret
fdivr
push
inc
jg
mov
sbb
and
lods
mov
gs
daa
sbb
loopne
popf
mov
and
ljmp
jp
test
mov
push
add
pop
fwait
dec
adc
xchg
imul
pop
mov
loopne
sbb
adc
add
loopne,pn
int3
dec
add
inc
dec
pop
test
inc
or
or
out
inc
mov
cmp
adc
dec
lds
mov
rolb
mov
mov
loopne
shrl
and
xlat
stc
dec
push
inc
andb
add
xchg
push
rolb
aad
sahf
jmp
fsubrl
cmc
adc
inc
add
dec
sub
mov
inc
and
xchg
pop
faddl
xchg
sbb
andb
add
jb
xor
shl
cld
lds
inc
orl
and
ss
dec
jae
aam
and
push
mov
ljmp
pop
xor
add
xchg
popa
cwtl
mov
stc
shll
loopne
cltd
cmpsl
fs
jmp
inc
jnp
add
push
aaa
cmp
mov
scas
pandn
pop
das
push
mov
mov
inc
add
shlb
ja
lock
add
fs
xchg
addb
arpl
xchg
mov
xchg
dec
rcll
mov
adc
outsl
xchg
pushl
xchg
rcrl
xor
in
xor
out
pop
mov
lods
andb
loopne
insb
push
sub
dec
dec
push
addb
xor
das
mov
cwtl
push
xchg
sub
and
xchg
stos
and
test
insb
xchg
scas
cmpsb
inc
sbbb
mov
in
iret
popf
pop
mov
and
lret
xor
pop
xchg
mov
adc
pop
bound
sub
mov
stos
rolb
dec
pop
enter
rol
leave
and
lcall
int3
aad
out
inc
clc
outsb
pop
adc
add
addr16
sbb
inc
loopne
add
cmp
push
sub
and
jo
decl
mov
nop
pop
mov
add
jbe
mov
rorb
cli
movsl
fnstenv
insb
jbe
fimull
or
pusha
mov
jne
push
pop
pop
sub
mov
andb
push
cmpl
cmp
nop
inc
sbb
or
inc
fdecstp
in
cmp
sub
movsl
ss
lahf
adc
pop
das
or
xlat
jle
fs
xchg
or
andb
stos
jns
push
add
and
jnp
sub
inc
faddl
mov
xor
or
movsl
jl
mov
inc
add
mov
das
decl
jno
sbbl
and
jmp
movsl
addr16
imul
xchg
sbb
mov
je
stc
repnz
mov
mov
xorl
jp
cli
jecxz
pusha
sub
int
addb
push
arpl
mov
andb
pop
jmp
andb
adc
mov
mov
inc
and
loopne
cmpsb
shlb
cmc
into
outsb
add
pusha
add
or
jbe
sub
in
jbe
shr
test
loopne
sub
xorb
sbb
call
add
ret
inc
mov
mov
pusha
pusha
add
and
or
inc
mov
fdivrl
bound
inc
add
jp
jno
nop
mov
pop
movsb
and
xchg
insb
push
xor
loopne
push
add
inc
imul
mov
cli
mov
imul
ret
and
ret
gs
mov
pusha
sbb
cmp
mov
ret
or
add
mov
sub
inc
enter
inc
cli
mov
addr16
or
shr
mov
inc
add
inc
popa
rcl
push
repz
pop
cmc
xchg
cmp
lret
pop
mov
addb
adc
push
rolb
mov
dec
mov
loopne
int
mov
mov
rolb
andb
adc
jbe
repnz
jl
shlb
js
lahf
les
addb
pusha
inc
test
nop
push
shll
push
andb
pop
call
inc
push
aaa
fimull
cli
fisubs
push
add
pop
mov
stos
loopne
into
addr16
pusha
inc
cltd
push
add
sbb
cmp
jns
fs
iret
movsl
fstpt
data16
ds
fadd
mov
mov
cmp
loopne
jg
xchg
cld
scas
loopne
xchg
jmp
popl
mov
pop
or
inc
cltd
cwtl
push
stos
jg
or
dec
rcll
ror
cwtl
jae
xchg
xchg
xchg
fstpt
dec
inc
jb
addb
rolb
lock
pusha
sbb
pusha
and
jp
jo
in
andb
and
adcb
add
stos
jmp
sbb
dec
or
and
mov
mov
rclb
sub
jecxz
mov
lock
sbb
push
and
std
push
xor
dec
sub
testl
clc
push
adc
shl
xchg
fsubl
pop
pop
jb
adc
adc
dec
jp
mov
adc
mov
hlt
rcl
ljmp
loopne
cmp
jns
cmp
fsts
sub
into
mov
fadd
lock
push
fwait
loopne
mov
adc
push
mov
adc
jecxz
out
cmp
pop
mov
sbb
dec
pop
std
insl
shll
xor
sub
addb
popf
insl
and
loope
mov
insb
fstl
ret
or
cmpl
xorl
popf
pop
movsl
test
and
int3
repnz
andb
inc
std
mov
push
test
ret
loopne
push
stos
loopne
jo
jge
jmp
mov
in
loopne
dec
add
scas
test
mov
orl
in
loopne
mov
aaa
or
mov
sbb
inc
add
adc
hlt
lret
push
movsb
inc
add
out
loop
push
mov
pusha
inc
or
xorb
jmp
push
mov
addb
sub
inc
loopne
mov
lock
lret
dec
xchg
pop
xor
xchg
test
pop
sub
loopne
rorl
add
xchg
xor
add
addb
dec
lods
sbb
sbb
inc
ret
cmp
in
icebp
imul
sbb
iret
lock
data16
cmp
pop
mov
mov
test
add
add
push
jecxz
jl
xor
shrb
pusha
ret
add
push
fwait
out
inc
shr
out
insl
push
push
and
rcll
jbe
push
or
inc
jne
cltd
aas
mov
andb
jmp
sub
or
loopne
outsb
cmpsb
loopne
xor
pusha
mov
dec
divb
and
and
bound
add
pop
mov
stos
mov
pop
pop
adc
int3
sbb
sub
inc
sahf
xchg
dec
out
pop
and
add
and
xor
cmp
inc
imulb
dec
pop
ds
loopne
aad
or
push
pop
xor
int3
and
mov
jo
popf
cmc
cltd
in
test
mov
mov
fildl
mov
or
sub
push
sbb
aad
pushw
fbld
cmc
sbb
pop
dec
jecxz
xchg
cmp
inc
sub
and
mov
dec
jnp
sub
shl
mov
and
out
pusha
in
mov
add
or
clc
mov
cmp
test
mov
je
add
lcall
add
outsl
pop
int3
cmpsb
shlb
jne
pop
iret
and
test
inc
scas
and
jns
xchg
push
aad
pop
roll
shlb
mov
and
icebp
dec
dec
stc
pop
mov
nop
add
xor
je
mov
cmp
pusha
in
les
and
cmpsl
fcompp
popf
lahf
std
in
cmp
mov
fdivrp
jae
adc
jb
ficompl
and
xchg
stc
mov
loope
in
jle
xor
lret
arpl
lods
in
mov
andb
mov
push
aam
mov
add
sahf
mov
inc
add
jecxz
aas
imul
shlb
xchg
sbb
pop
fimull
pop
fiadds
and
std
cmpsl
int
addr16
fwait
repnz
loopne
push
inc
rcl
xor
mov
icebp
push
push
aas
lock
shlb
addb
movsb
and
aaa
loop
lea
push
fwait
pop
push
pop
stos
and
fucom
add
mov
push
leave
movsl
sub
mov
fs
jo
jp
mov
sbb
pop
and
add
dec
data16
mov
sti
jmp
cmp
stc
inc
pusha
push
mov
hlt
jge
test
or
push
fwait
cvtps2pi
shl
loopne
push
xor
xchg
scas
loopne
fldl
add
pusha
mov
rolb
xorl
and
add
addb
int3
loopne
shlb
dec
dec
and
orb
lods
mov
loope
xor
pop
pushf
pop
in
andb
movsl
mov
cmp
xor
loopne
xor
ret
sub
lea
adc
addb
sbb
pusha
mov
divl
or
les
sbbb
inc
inc
sbb
sbb
or
notb
xor
nop
aam
sub
loopne
sbb
push
jo
popf
mov
cld
scas
loopne
mov
and
ljmp
ss
xor
pusha
mov
jb
ljmp
aad
sahf
sahf
enter
inc
jbe
mov
mov
dec
in
inc
imul
fsubs
mov
jb
add
in
xor
arpl
pop
fs
sub
jl
push
daa
mov
aas
insb
xchg
sbb
push
in
fistpll
pop
popa
and
and
xlat
mov
push
inc
mov
sahf
mov
push
inc
sbbb
outsb
or
pop
jmp
jmp
and
inc
adc
inc
test
loopne
xchg
fidivrl
inc
add
loopne
insb
mov
and
inc
testb
jle
sbb
add
loop
out
xchg
aad
call
mov
pop
dec
jl
or
rolb
pop
cmpsl
lock
and
and
sub
mov
cmpsl
xor
jle
pusha
inc
and
andb
pop
sub
cmpb
pusha
pop
mov
stos
movsl
mov
rclb
arpl
lock
sbb
call
pop
fisubs
cmp
sub
jbe
inc
mov
cmp
mov
popf
loope
xchg
cmpsb
and
sbb
in
mov
sar
int3
cmp
adc
leave
lods
pop
aas
adc
outsl
and
or
inc
loopne
mov
jo
and
sbb
push
push
pusha
shrb
inc
in
mov
sub
inc
sub
jnp
int3
cwtl
ret
push
js
adc
jl
jo
and
cmpsl
mov
insl
icebp
mov
sub
dec
mov
sbb
cmp
ds
or
jne
into
int
mov
inc
shr
sub
loopne
xchg
adc
dec
or
pusha
add
cmpsb
mov
lret
pushf
xchg
cmpb
pusha
rcrb
repz
inc
lock
andb
pop
cld
int
call
sub
pusha
out
addb
add
pusha
addb
push
and
add
inc
shrb
adc
out
or
addb
pop
and
and
int3
xor
cmc
or
popf
addb
jo
mov
cmp
sahf
inc
mov
jae
imul
js
pop
mov
mov
lcall
les
jmp
inc
sbb
das
loopne
aad
add
add
sbb
ljmp
sub
mov
cmp
xor
jo
xor
mov
rorb
loopne
imul
repnz
addr16
frstpm(287
add
jo
test
mov
mov
inc
sbb
aaa
sub
jl
ret
loop
xchg
push
inc
adc
or
dec
adc
jno
clc
cmpsl
or
inc
aas
cmp
ss
loop
stos
sbb
mov
push
jp
insl
incl
jne
nop
loope
negb
push
popa
popf
shl
jg
enter
adc
dec
push
mov
push
inc
loopne
lods
lods
addb
hlt
push
shll
cmc
cmc
popf
addb
lret
mov
push
loopne
loope
inc
pusha
movq
push
inc
es
and
add
adc
mov
mov
cmpsb
add
popf
in
inc
xchg
add
cmpsl
inc
fadds
pusha
sub
lods
mov
sub
call
int
cltd
inc
push
pushf
lock
movsb
mov
add
pusha
lods
push
add
sti
mov
inc
pop
pushf
cmc
cltd
push
enter
cmp
cld
jo
cwtl
pop
mov
lahf
pop
lods
imul
lds
inc
shlb
push
xchg
xorl
lea
push
jecxz
sub
xor
fists
rorb
sahf
insb
rorl
mov
mov
adc
loopne
jmp
dec
imul
mov
xor
test
or
and
call
leave
fcoml
std
loop
sarl
jbe
mov
loopne
mov
repz
xor
push
push
mov
push
inc
and
je
ror
mov
adc
scas
fcoml
mov
lods
movsb
add
and
addb
sti
ss
lea
ficoms
imul
fcmovbe
cmp
jmp
xor
nop
cwtl
pop
dec
add
je
add
add
