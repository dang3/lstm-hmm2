inc
call
out
ficomps
decl
movsl
ljmp
call
cmp
pop
and
sar
mov
push
cmp
mov
daa
inc
inc
inc
pushl
loopne
sbb
aam
call
dec
aad
mov
testl
lcall
daa
push
xor
pushl
pushl
or
jmp
inc
inc
push
push
lcall
rorl
jmp
out
scas
mov
roll
pushl
inc
decl
out
incl
decl
cmp
jl
frstor
xor
jmp
xchg
pop
mov
add
inc
decl
jle
dec
mov
xchg
cmp
xor
pushl
sarl
mov
incl
jmp
call
and
fsubr
and
cmpsl
incl
or
inc
dec
add
insb
fisubrs
inc
decl
lcall
adc
jle
xchg
out
dec
insl
out
shrb
cmp
fwait
and
dec
or
hlt
ljmp
or
cwtl
sbb
dec
push
jae
or
jns
sbb
inc
in
imul
ljmp
dec
inc
ljmp
cmc
cld
add
decl
mov
outsl
pop
jmp
mov
xchg
or
pushl
jns
test
cmp
div
aad
sub
call
scas
and
mov
incl
xor
mov
das
fcmovbe
jno
ljmp
movsb
decl
fldl
incl
mov
in
adc
push
push
dec
xchg
movsb
jmp
decl
inc
call
xchg
and
dec
imul
repnz
out
sbb
fldt
out
call
out
mov
cmp
pushl
add
lcall
pushl
cmp
push
cmp
out
call
rol
decl
arpl
incl
lcall
std
imul
outsb
ljmp
rcrb
inc
lcall
cmp
arpl
stc
std
adc
in
push
xchg
push
xor
cwtl
arpl
lret
xor
xchg
dec
xor
adc
xlat
sub
and
outsl
sarl
daa
sbb
mov
sub
xor
call
and
jne
dec
push
call
test
je
movzbl
jmp
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
mov
cld
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
adc
insl
ljmp
add
incl
insl
add
sbb
ljmp
mov
decl
lcall
cld
inc
incl
mov
adc
addr16
mov
jge
mov
xor
fisubrl
push
push
sti
mov
adc
lcall
jmp
xchg
add
int
daa
call
push
push
ret
add
ljmp
popf
mov
sub
push
sub
add
add
ljmp
loopne
test
adc
mov
popf
and
and
xchg
mov
push
sti
pushf
inc
add
add
add
cwtl
int3
jo
pushl
mov
push
jle
stc
adc
ljmp
pushl
lret
mov
jmp
pop
dec
xchg
inc
jl
jns
mov
add
dec
jl
add
incl
cmp
fsubrl
xchg
test
mov
jbe
mov
sbb
sbb
call
jle
aad
incl
jge
jmp
add
add
popa
decl
cmpsb
call
inc
incl
incl
pushl
call
or
fdivrs
inc
dec
and
jb
in
sbb
adc
decl
ljmp
or
lret
mov
ljmp
cmpsl
jmp
cwtl
fcmovnbe
adc
sti
loopne
into
and
or
or
lret
incl
dec
cmp
or
add
mov
jmp
test
aad
xchg
incb
sub
lcall
dec
push
ret
add
pop
add
cwtl
xchg
mov
out
adc
and
adc
or
mov
lods
ss
pushl
ljmp
pushl
rcpps
cmp
shrl
add
add
add
flds
jmp
int
mov
ljmp
sbb
pop
lcall
mov
add
int
dec
add
dec
sbb
push
adc
xor
pushl
sbb
imul
loope
xchg
push
insl
adc
mov
add
xchg
add
add
push
mov
incl
mov
decl
cli
mov
in
iret
pop
lods
dec
mov
movsl
jmp
mov
inc
add
add
push
pop
sar
pop
nop
jb
jmp
leave
push
dec
or
sbb
pushl
and
repnz
add
in
mov
movsl
ljmp
jmp
roll
jp
out
pop
push
in
int3
call
or
cmp
lcall
ret
jmp
dec
dec
add
add
pushl
mov
sbb
add
test
insl
mov
ljmp
jne
jbe
dec
lods
out
cmp
int
out
mov
fstpt
jmp
pushl
jge,pt
cmc
pop
or
jmp
mov
jne
add
jmp
test
add
add
call
mov
sahf
js
sahf
int
out
enter
lret
fsubl
imulb
inc
jnp
inc
jle
test
test
adc
mov
pushl
dec
repz
sahf
xchg
js
popa
jmp
push
popf
decl
add
je
add
jmp
pop
inc
call
adc
call
decl
push
ret
dec
ljmp
pop
xchg
incl
jmp
incl
add
add
xor
push
ret
add
cmp
pop
outsb
lock
test
fistl
lock
enter
jmp
jmp
insb
test
push
dec
adc
incl
mov
roll
mov
mov
stos
mov
ret
pushl
pop
push
push
cltd
test
add
decl
cmp
sar
push
das
popa
add
add
add
ds
dec
loope
jnp
call
incl
and
shl
in
pop
inc
jmp
jmp
incl
call
out
jns
inc
inc
decl
mov
add
mov
add
sub
in
push
jmp
push
ret
add
add
inc
imul
mov
jmp
add
add
pushf
xlat
jno
mov
call
pop
fstps
mov
out
addr16
and
sbb
call
push
aad
lcall
ljmp
add
incl
je
pop
jecxz
je
pushl
scas
push
decb
dec
push
or
jne
sub
jmp
sahf
mov
sub
pop
adc
in
and
lcall
jmp
dec
mov
dec
jbe
sbb
lcall
lcall
std
push
fiadds
decl
add
std
sahf
xchg
add
add
cltd
pandn
fbstp
outsb
outsb
out
loopne
push
shr
jmp
add
jnp
push
pop
jmp
xchg
add
cmp
jb
shr
inc
jmp
jg
jp
mov
ljmp
test
sub
add
add
add
pushf
out
push
sbb
push
ret
add
test
add
pushl
dec
push
jmp
incl
xchg
int
or
jne
jmp
add
out
ret
pop
xchg
cmp
or
jae
xor
add
ljmp
jge
adc
movsb
decl
push
xchg
mov
incl
loope
mov
lcall
sbb
sbb
add
pop
add
jmp
sbb
call
cli
cmp
mov
call
adc
aas
outsl
sub
loope
xor
jle,pt
add
add
dec
int
pop
vpshuflw
push
cmp
leave
xor
jge
or
cmc
jne
cwtl
ficoms
hlt
inc
incl
pushl
jl
ljmp
dec
add
ljmp
cmp
sbb
aam
mov
cmp
decl
cmpsb
decl
cmp
cs
repz
and
aas
xlat
adc
mov
push
pop
loop
add
inc
jmp
incl
pop
xlat
test
shll
pushl
dec
dec
in
mov
jnp
mov
inc
ljmp
cld
jo
outsl
lcall
ljmp
inc
incl
jmp
call
mov
movsl
jmp
mov
mov
hlt
jns
decl
add
jmp
jle
cmp
cmp
mov
loop
into
xchg
dec
jg
call
decl
push
push
jne
jmp
int
sub
mov
jmp
dec
cmp
jl
outsb
jmp
adc
jmp
lcall
push
push
ret
push
ret
mov
add
incl
pushl
lea
sar
mov
sub
mov
pop
jae
call
icebp
scas
pop
stos
fimuls
push
pop
jmp
call
xchg
mov
cmpsb
lcall
jg
clc
jmp
jge
ja
decl
and
rorb
adc
fstl
or
cmp
ljmp
scas
jge
add
jmp
add
add
push
lcall
pushl
and
or
pushl
incl
call
in
push
add
add
jl
dec
add
lcall
enter
or
out
mov
pmulhw
inc
ljmp
call
test
lret
jo
fsubrl
sub
hlt
sub
add
add
ljmp
call
call
sbb
jmp
add
add
xchg
add
cmp
clc
notb
pop
incl
imul
lcall
mov
mov
and
inc
jmp
lods
and
hlt
dec
push
add
incl
mov
call
xchg
and
call
out
cmp
mov
mov
mov
lcall
lcall
or
ret
incl
inc
incl
dec
or
pushf
jae
call
call
sar
lock
or
dec
lock
cltd
movsl
ljmp
jmp
add
and
mov
sub
add
decl
jmp
pushl
aam
dec
lods
pop
xchg
dec
daa
call
xor
add
or
shr
clc
decl
xchg
dec
add
inc
pushl
pop
aas
repnz
adc
incl
sub
outsb
lcall
jl
ljmp
add
iret
pop
add
add
push
add
cmpsl
lcall
aam
call
jnp
pop
or
or
jo
pushf
aam
call
mov
push
ret
add
add
movsl
jmp
lcall
push
pop
push
ret
pop
add
add
sar
adc
dec
jns
pushl
call
fwait
lcall
add
pushl
call
sub
cmp
gs
add
cld
cltd
sbb
mov
std
mulb
fistpll
jmp
mov
lcall
iret
adc
decl
fwait
pushf
movsl
pushl
divl
xchg
ljmp
and
sub
sbb
repnz
dec
and
sar
jmp
mov
ret
pop
lods
inc
fisubrs
and
sbb
call
adc
pop
cmp
pushl
pushl
inc
jmp
jmp
mov
decl
inc
dec
pop
mov
stc
dec
cmp
call
or
lret
ja
cmp
inc
dec
sar
incl
mov
popa
pushl
mov
call
ret
decl
lret
lret
push
fisubs
outsl
add
cld
xchg
and
sti
mov
jmp
imul
and
add
decl
sub
mov
and
jne
jmp
add
xor
pop
inc
call
lcall
pop
stc
add
and
mov
pop
mov
lcall
adc
pushl
jnp
jmp
shlb
call
aad
mov
mov
add
jmp
incl
mov
gs
inc
ljmp
shlb
fwait
cmp
divb
lcall
or
stos
das
jecxz
mov
cld
pop
lods
inc
pushl
incl
fmuls
aam
cltd
mov
sub
lcall
push
std
cmp
or
and
in
insb
mov
pop
jns
xchg
and
incl
sbb
mov
dec
test
mov
push
cld
pusha
call
shlb
incl
inc
ljmp
inc
incl
pushl
cs
scas
mov
jmp
adc
jle
ljmp
aaa
ljmp
fstl
adc
push
ret
push
test
pop
add
iret
adc
jno
pop
shll
jg
ljmp
mov
sbb
add
xchg
add
add
add
ljmp
dec
and
ljmp
cmp
incl
pop
or
mov
xchg
imul
mov
xlat
ljmp
fisttpll
add
aam
lret
pop
cmpsb
decl
flds
rcll
fmuls
clc
lahf
je
xchg
dec
cmp
fadds
jle
jp
sub
fwait
aaa
scas
mov
jmp
xchg
int3
pop
adc
pushl
lcall
sbb
inc
cmp
fcmovnbe
push
adc
sbb
jmp
inc
fidivs
lret
jns
incl
ljmp
push
sub
ret
add
add
cli
or
pushl
push
sub
repnz
in
dec
inc
incl
mov
std
rcrl
cmp
iret
lods
pop
decl
cwtl
push
cs
loop
jmp
inc
xchg
add
adc
lahf
push
xlat
and
inc
jmp
pushl
mov
add
add
jl
incl
jmp
call
sbb
decl
inc
incl
popa
lcall
xor
cmp
stos
adc
adc
in
aaa
sbb
lods
cmc
mov
lcall
xchg
inc
lcall
jo
dec
into
pushl
jbe
ficoml
movsl
jmp
in
cmp
sub
jmp
out
jle
call
pop
inc
incl
cmpsl
lcall
xor
jmp
push
add
add
ja
test
mov
push
push
lret
imul
int3
add
xchg
clc
inc
incl
fldl2t
sar
jb
in
mov
test
in
push
mov
pushl
and
dec
sbb
xchg
es
mov
inc
out
decw
push
pop
lcall
xchg
hlt
call
imul
xchg
test
jle
pusha
call
mov
jmp
inc
pushl
jmp
add
lcall
call
decl
lcall
xchg
sub
pusha
jmp
add
pop
sbb
stc
insb
sub
imul
test
inc
cmp
das
push
jno
sub
je
inc
inc
call
loop
ret
test
adc
pop
pop
dec
jo
mov
stos
dec
push
ds
xchg
lea
fmulp
leave
aad
cwtl
adc
push
jmp
add
add
add
and
pop
adc
mov
lret
cli
ret
push
mov
xchg
fdivl
fsts
cmp
call
cmp
jb
incl
add
inc
call
stos
cmp
pop
pop
sar
sar
daa
lcall
lahf
cmp
xor
xchg
jnp
mov
call
pushl
js
add
lcall
shrb
incl
jne
inc
incl
add
jl
add
lahf
mov
jmp
add
insl
pop
adc
push
push
ret
add
mov
incl
xchg
shlb
mov
mov
pushl
cli
add
call
xlat
mov
pushl
push
push
xchg
call
sti
call
clc
cwtl
out
jne
pushf
mov
xchg
add
inc
jmp
pushl
push
mov
mov
mov
jmp
repnz
decl
aam
sbb
ret
xchg
pusha
ljmp
ljmp
xchg
jecxz
push
xor
xor
pop
and
cmp
jne
sbb
xor
clc
ds
add
push
loope
lcall
mov
jg
lcall
hlt
and
dec
stos
dec
sub
xlat
adc
mov
nop
out
pop
fcomps
sahf
out
cmp
jmp
push
mov
mov
stc
fdivr
adc
scas
leave
pop
scas
cltd
loopne
xor
xchg
xchg
idivb
jns
sbb
adc
jae
incl
pushl
ljmp
ljmp
lcall
imul
and
pushl
loope
out
pop
in
fwait
stc
js
jne
jmp
add
xor
pop
pop
add
sar
out
or
push
add
ljmp
sti
mov
pop
enter
jle
pushl
push
cmp
out
xor
mov
mov
outsb
and
in
mov
inc
call
cmp
xchg
adc
push
call
sbb
xchg
pop
mov
xchg
fucomp
rcrl
lret
cmp
repnz
lcall
add
pushl
dec
xchg
das
enter
call
stos
jmp
add
add
add
aaa
sbb
jmp
dec
pop
push
std
ljmp
add
call
jnp
fstl
mull
jmp
out
in
test
mov
inc
ljmp
lcall
inc
lcall
mov
frstor
jge
or
pushl
popf
and
mov
call
cmp
rcl
mov
dec
stos
into
mov
add
cmpsl
repz
incl
inc
pop
mov
push
push
mov
mov
arpl
add
fiaddl
or
inc
lcall
js
cmpsb
pushl
ret
incl
push
ret
callw
cmp
call
jmp
add
add
js
xchg
jbe
pop
out
mov
incl
sub
decl
inc
mov
inc
pushl
inc
gs
jmp
add
aad
inc
ljmp
push
add
mov
push
inc
call
fcoms
inc
incl
sub
pop
pop
mov
incl
incl
incl
incl
push
pop
shrl
enter
inc
pushl
popf
cmp
jg
call
pop
xchg
dec
xchg
sub
loopne
cmp
loopne
sti
int
ja
or
lcall
pushf
mov
mov
call
cmpsl
bound
ret
incl
add
jo
call
mov
fcomps
js
mov
push
mov
jmp
add
add
vshufps
jmp
popf
cmp
aas
scas
mov
pushl
decl
xchg
jne
movsb
ljmp
aas
and
cmc
jl
adc
incl
pop
cs
fcoms
in
shrl
loop
cmp
lcall
test
jmp
xchg
mov
cmp
ljmp
mov
lahf
inc
pushl
push
add
jmp
add
ljmp
movsl
cmp
incl
ljmp
mov
out
popa
call
xchg
jo
fistpll
cli
enter
test
xor
repnz
call
cmp
or
test
push
sbb
add
add
lea
jmp
inc
add
add
pop
mov
cmp
fstpt
jno
call
mov
lcall
jg
das
inc
jmp
scas
test
data16
ljmp
icebp
cmp
roll
repz
sub
mov
lock
push
and
incl
popa
call
or
xor
decl
dec
mov
ret
jle
in
pop
out
stc
loope
sbb
lcall
mov
push
popf
sti
jle
mov
dec
or
lcall
lcall
shlb
fcmovu
cmp
lods
out
stc
dec
and
lcall
xchg
cmc
or
call
sar
fnstsw
cmc
xor
movsb
jmp
call
gs
push
adc
push
ret
add
add
lret
pop
jg
fldt
call
inc
fimuls
ja
xor
pop
push
leave
outsl
or
cmpsb
lcall
mov
sub
mov
xchg
mov
mov
add
xorb
add
add
decw
pop
das
adc
decl
daa
mov
cmp
call
push
ljmp
push
ret
add
dec
dec
inc
lcall
je
and
mov
pushl
jo
fmull
mov
push
push
enter
jns
jl
push
ljmp
pop
dec
ljmp
jnp
decl
sldt
pop
incl
add
lcall
ljmp
cmp
mov
inc
call
xchg
xchg
pop
push
or
pop
stc
hlt
hlt
xchg
dec
cmp
add
jmp
lods
jbe,pt
dec
mov
incl
loope
add
add
add
aad
aam
add
jmp
add
movsl
inc
lcall
mov
outsb
ds
jmp
cmp
cmp
xchg
or
adc
adc
cmp
jae
push
xlat
xor
jo
data16
cmp
iret
call
pop
jmp
add
push
add
add
movsl
incl
pop
push
mov
jl
add
inc
add
add
jmp
ljmp
loop
iret
mov
out
sbb
add
insl
add
xchg
popa
fst
cmp
decl
mov
test
pushl
cmp
test
mov
decl
mov
xor
decl
lcall
rcrl
outsl
mov
imul
mov
sub
lea
ret
pop
inc
ja
out
imul
mov
and
or
fistpll
ljmp
jnp
pusha
call
sbb
notb
js
add
incl
fsubrl
and
add
inc
jmp
mov
xchg
sbb
imul
and
popa
jmp
inc
pop
mov
pop
sbb
cmpsl
jmp
pushl
daa
ljmp
xor
cld
mov
incl
cmp
fistpll
cmp
jb
outsb
vpshuflw
pop
jne
xor
roll
roll
xchg
mov
sti
mov
mov
leave
jmp
sarb
sbb
testb
push
xchg
inc
incl
inc
incl
pushl
sub
jmp
add
jl
inc
fsts
add
jmp
mov
mov
jmp
fimull
cmp
nop
or
and
jmp
clc
pop
sti
ret
jmp
call
ljmp
shlb
inc
incl
add
jb
in
clc
xor
jecxz
add
incl
jmp
incl
sbb
mov
add
add
add
int
mov
push
push
add
push
add
insl
jmp
call
inc
lcall
push
cmp
ljmp
insl
add
decl
call
jmp
dec
mov
dec
pop
add
add
jl
xchg
jne
inc
jmp
mov
in
cmp
jecxz
cli
mov
jecxz
gs
inc
jmp
pop
pop
cmp
jmp
incl
test
mov
dec
fistpl
adc
fstl
stos
ljmp
mov
jmp
ljmp
test
cld
adc
add
es
jg
incl
pushl
dec
mov
outsb
stc
mov
cltd
sub
lcall
add
in
into
xchg
xchg
inc
ljmp
dec
das
pop
jecxz
push
fildl
push
xchg
mov
sbb
popf
mov
ja
cltd
dec
cmp
xor
cltd
and
inc
decl
mov
jge
stos
test
inc
lcall
push
jnp
push
fdecstp
and
movsb
decl
sub
sbb
popa
insb
push
jmp
pop
mov
cmp
mov
insl
pop
and
aaa
fsubs
incl
jmp
cmp
push
xor
ret
add
lcall
das
xlat
dec
stc
pop
out
pop
ret
lcall
dec
imul
and
and
inc
incl
call
ja
lahf
inc
decl
in
sti
jl
add
add
cmp
jae
call
inc
call
test
outsl
adc
call
and
outsl
and
test
test
lcall
jns
loop
push
cld
adc
dec
jge
ljmp
pushl
in
and
int
jno
fistps
jmp
sbb
add
add
add
cmp
and
dec
sub
out
cmovo
mov
jmp
add
add
pop
mov
push
sub
pushl
daa
lcall
add
jmp
add
add
cli
insb
mov
lock
dec
aas
aam
or
decl
test
repnz
ljmp
insb
inc
add
mov
loopne
dec
imul
mov
sbb
daa
add
incl
add
js
jne
call
and
or
push
ret
add
test
xchg
fildll
dec
cmp
fsubrs
inc
add
add
add
jmp
mov
in
divb
push
or
pop
push
inc
jmp
jnp
ljmp
or
jmp
call
test
cmp
jns
jmp
jmp
lods
decl
rolb
pop
dec
xor
imul
ret
in
and
repnz
ljmp
out
mov
dec
mov
out
out
into
fbld
inc
jg
adc
ret
jmp
flds
adc
ja
push
jb
jno
decb
cmp
scas
mov
dec
inc
ljmp
jb
push
idivl
mov
inc
jmp
adc
cmp
std
repz
loope
pop
std
cmpsl
cmp
jle
fnstenv
out
icebp
stos
mov
push
push
push
sar
lea
push
push
push
ret
add
add
repz
pop
inc
jmp
mov
fmull
adc
mov
lods
inc
pushl
je,pt
divb
dec
push
adc
and
movsl
jmp
mov
call
mov
push
sbb
incl
mov
mov
jb
je
inc
add
add
ficoms
je
lcall
cmpsb
incl
call
incl
daa
jmp
sub
pop
cmp
and
mov
shll
shrl
sti
pop
pushl
imul
inc
out
jle
shlb
dec
jo
jmp
ljmp
ret
jl
sub
rep
jmp
add
add
mov
xchg
xchg
xchg
decl
mov
enter
enter
fwait
sub
ljmp
push
lea
jmp
cmp
lcall
or
mov
pop
push
arpl
movsl
incl
incl
decl
pushf
shll
fidivrl
sahf
int3
jb
repnz
rolb
pinsrw
out
sbb
xor
add
add
idiv
js
callw
lret
cwtl
movsl
ljmp
outsb
inc
add
pop
xchg
mov
testb
outsb
or
decl
fisubl
incl
cmp
fidivrs
xchg
pop
in
aad
push
incw
xchg
loop
mov
pop
cwtl
jmp
push
pop
incl
inc
lcall
notb
cmp
xor
icebp
mov
push
rcll
call
or
jo
xchg
inc
cli
and
lcall
leave
mov
iret
ljmp
pop
push
ret
int
pop
pop
add
pop
ljmp
stos
inc
ljmp
hlt
lcall
lret
sarl
enter
lcall
les
daa
xor
add
add
pushl
push
cs
inc
jmp
fldl
movsb
incl
sub
out
addr16
pushl
pop
sbb
push
xor
push
ret
add
pop
frstor
or
pop
sub
xor
inc
jg
das
je
mov
in
test
xor
mov
lods
iret
mov
mov
mov
cmp
adc
xchg
push
and
push
ret
add
mov
jle
jl
jmp
popl
sbb
dec
out
cli
aad
push
decl
inc
add
pop
add
add
ret
incl
jmp
cmp
xor
ljmp
fincstp
test
push
xor
stc
lret
ljmp
mov
mov
adc
cmp
xchg
pushl
int
outsb
dec
dec
push
ljmp
in
jmp
add
add
add
mov
adc
and
add
add
jg
or
sub
ja
jo
scas
jo
ljmp
arpl
push
lcall
idiv
dec
add
int
add
stos
and
jb
incl
push
dec
cld
rcrb
add
dec
jbe
stc
insl
into
push
push
jmp
dec
add
add
mov
not
call
xchg
sti
inc
push
addr16
ds
imul
jmp
sbb
fisubrl
arpl
jno
not
cld
dec
enter
and
jb
pop
call
pop
stos
mov
imul
mov
fdivrs
mov
dec
leave
dec
mov
or
out
incl
add
int
lcall
jns
push
cmp
pushl
fwait
xchg
sub
or
jo
inc
ljmp
ljmp
decl
sbb
icebp
sar
out
inc
decl
cmp
pushl
cwtl
adc
jmp
jl
in
inc
decl
push
add
jmp
dec
test
add
xor
jmp
push
mov
cmp
test
lea
cmp
add
incl
cli
cmp
mov
jmp
mov
xlat
sub
xor
pop
jp
cmp
fstps
cli
das
pop
mov
in
xchg
push
add
or
add
in
pusha
call
pop
scas
incl
or
lahf
xchg
xchg
in
shr
or
mov
push
mov
aad
cld
icebp
pop
jmp
ljmp
movd
jge
test
lock
out
cmp
jmp
jbe
in
pop
incl
aas
sbb
shrb
sbb
ret
add
add
inc
fcoml
popa
lcall
call
push
cld
aam
sar
dec
dec
outsb
iret
xchg
sbb
out
mov
sbb
jbe
jmp
pop
add
add
stos
test
pextrw
cmp
inc
call
inc
jmp
add
jmp
xchg
xchg
adc
cmp
call
push
ljmp
pop
jmp
add
add
ljmp
sbb
xchg
lret
or
incl
sub
dec
and
inc
ljmp
popa
call
and
push
call
add
nop
out
and
je
pop
jp
mov
pop
pop
add
int
add
pop
cmpsb
lcall
mov
lcall
push
jmp
add
add
cmp
out
dec
out
sarl
push
ret
jl
add
incl
rep
jmp
add
add
inc
dec
out
inc
ljmp
ljmp
push
jnp
lcall
push
lcall
stc
push
jecxz
inc
ljmp
repz
sti
jmp
or
fisubrs
mov
xchg
or
ds
repz
stos
add
pushl
fdiv
sbb
xchg
jle
push
int
call
dec
sbb
pop
mov
push
sub
mov
push
jle
xor
call
xchg
adc
pop
mov
adc
adc
incl
jmp
call
add
jmp
pushl
in
sbb
aaa
xchg
sti
cmp
sub
adc
or
sarl
jo
sub
inc
ljmp
loope
cmp
cmp
out
cmp
pushl
xchg
cli
inc
incl
call
ljmp
sbb
add
pop
push
dec
fcmovu
cs
cmp
cltd
aad
aas
shrl
lods
xchg
ret
fstps
aaa
add
jno
mov
nop
push
js
sti
cltd
dec
dec
mov
jge
cmp
dec
push
jbe
insb
push
push
jno
inc
add
push
add
xchg
adc
aam
and
mov
jo
and
sar
pushl
inc
jnp
xor
fisubl
pop
add
jl
xchg
xchg
dec
int
dec
test
popa
call
ss
incl
xor
dec
cmp
inc
pushl
ljmp
jmp
incl
push
ret
push
add
inc
push
aas
adc
decl
sti
std
js
cmp
jbe
adc
nop
jo
inc
push
sub
cld
or
negb
out
add
call
sahf
das
mov
call
shr
push
add
add
xchg
fmul
fwait
push
je
fcoml
jg
cmpsl
jmp
push
mov
mov
in
push
or
mov
add
push
ret
jae
pop
mov
jp
or
xchg
jle
movsl
lcall
jns
ljmp
lods
jmp
push
add
add
add
rcrb
and
push
ljmp
push
test
cmp
and
cmc
dec
add
pop
add
pop
cmpsl
jmp
jmp
mov
call
ss
loop
sbb
mov
mov
add
add
add
add
mov
fidivl
push
or
pushl
cmp
mov
ljmp
jle
push
jmp
int
pop
push
pop
push
cmp
ljmp
inc
ljmp
aad
dec
cmp
cld
jmp
add
push
cli
mov
inc
call
add
in
adc
add
outsb
cmp
mov
imul
inc
sti
in
lods
jns
ljmp
incl
popa
pushl
xchg
loopne
jno
icebp
mov
jne
into
push
inc
add
add
dec
add
decl
cmp
xchg
xor
jmp
decl
sbb
test
add
add
or
add
mov
fnstenv
or
dec
imul
inc
decl
dec
out
incb
clc
hlt
xchg
decb
fsubl
call
cmp
ds
push
jmp
add
icebp
and
insl
adc
adc
ficompl
pop
divl
inc
jmp
mov
jne
enter
dec
pop
pop
mov
ljmp
xchg
push
cmp
push
ss
lahf
sub
repz
iret
cmp
add
ljmp
push
ljmp
xchg
xlat
test
jne
movsl
push
popf
lods
add
divl
into
sbb
jb
cmp
inc
jp
stos
pop
sbb
mov
fmull
adc
aas
nop
push
leave
or
and
pop
jmp
cld
add
pushl
sar
cmp
push
jmp
pushl
and
ds
mov
decl
xchg
jae
jecxz
pop
out
cmp
xchg
adc
mov
push
mov
in
and
ret
add
jmp
pushl
lcall
decl
call
outsb
or
jmp
ljmp
movsl
incl
out
sbb
cmp
aas
add
dec
addr16
jge
pop
rcrb
out
mov
fs
add
fwait
leave
mov
dec
pop
iret
pusha
fmulp
aas
sar
imul
dec
jno
fwait
hlt
push
movsl
ljmp
jmp
add
add
mov
outsb
loopne
pop
add
sub
mov
fdivs
jmp
dec
sub
sbb
adc
add
add
pop
jo
iret
std
icebp
cmp
push
cs
mov
roll
sbb
dec
enter
ljmp
sbb
aam
add
jmp
add
add
pushl
test
add
pushl
cmpsb
call
sbb
jmp
cmc
jg
inc
decl
loop
mov
jno
adc
ljmp
and
test
add
dec
scas
sbb
inc
lcall
jno
call
das
push
enter
adc
push
push
and
sbb
dec
add
pop
add
mov
dec
lods
arpl
mov
push
sub
imul
popf
dec
xor
ljmp
icebp
jmp
inc
dec
jl
pop
cmp
jno
push
shr
cmp
call
ljmp
test
jle
xor
fwait
pop
mov
pushl
xor
cmp
lret
sub
repnz
adc
push
sbb
mov
jge
cmp
mov
ficomps
pushl
sar
jne
jmp
or
pop
lcall
jge
mov
mov
lcall
lods
cli
js
outsb
fsubs
mov
lcall
add
ljmp
jmp
add
add
mov
insl
mov
dec
jecxz
and
or
call
inc
decl
aaa
xor
mov
aaa
push
and
jp
mov
pushl
lahf
mov
call
xchg
out
sub
ret
lcall
incl
inc
pushl
jmp
fidivs
out
xchg
loopne
iret
mov
mov
decl
add
pushl
inc
lcall
hlt
ret
cmp
jmp
add
add
add
ja
into
add
decl
fsubrl
cmp
shlb
pop
sub
pop
jge
inc
jmp
mov
add
cmp
decl
out
nop
cmpsl
inc
inc
lcall
int3
adc
adc
sub
jmp
xor
incl
test
ds
inc
dec
mov
jmp
add
inc
jmp
call
decl
call
jo
imul
fadd
pushl
sub
dec
pop
dec
jo
xor
cmc
inc
mov
xor
inc
call
in
ds
pushl
into
cmp
test
shr
mov
outsl
insl
cmc
or
cmp
ds
call
adc
inc
jmp
push
push
add
add
dec
add
ret
lcall
sub
pushl
cmc
aad
inc
call
cwtl
aas
pop
jmp
cmp
pushl
js
pop
push
ret
int
pop
add
xchg
mov
adc
mov
incl
popa
call
aas
hlt
jecxz
push
inc
add
add
pushl
imul
call
jmp
incl
jmp
mov
out
pop
xor
xlat
jnp
in
mov
mov
call
push
inc
add
add
mov
loopne
call
clc
mov
dec
sahf
pop
loop
stos
mov
popa
incl
cmpsb
cmp
decl
test
jmp
pop
push
jae
popf
or
lcall
incl
into
sub
fsubrs
jmp
call
movsb
aas
mov
sub
call
stc
mov
sar
lcall
mov
add
and
ljmp
add
cmp
clc
cmpsl
ljmp
pushf
sar
mov
jmp
int
add
jns
nop
pop
loope
in
arpl
mull
aad
xor
movsb
pushl
cmc
outsb
dec
adc
xchg
jmp
stos
mov
jns
mov
push
rorl
push
ret
pop
dec
dec
jl
lcall
mov
jmp
add
fsts
iret
scas
test
push
push
out
dec
ss
sbb
cld
fcoml
std
loope
cmp
imul
dec
adc
push
fucomp
pop
add
call
jmp
push
xchg
arpl
push
add
pushl
jg
inc
ljmp
inc
push
xchg
cli
lahf
mov
jmp
add
jmp
sahf
aaa
inc
dec
icebp
repnz
mov
inc
call
jge
xchg
das
rcr
cmp
enter
decl
pushl
mov
loopne
loop
mov
jmp
mov
cmp
js
mov
les
cwtl
sbb
add
dec
xchg
push
mov
push
or
mov
hlt
test
jmp
jmp
cmp
movsb
pushl
xor
jmp
xchg
data16
clc
or
sub
mov
mov
fists
push
ljmp
movsl
lcall
rclb
push
cmp
decl
mov
movsl
decl
incl
add
xchg
adc
or
mov
ret
data16
jmp
decl
lahf
xchg
add
jmp
lcall
push
xchg
cltd
movsl
incl
jmp
call
loopne
push
or
pop
add
add
loope
dec
jg
pushl
push
clc
in
mov
pushl
orps
pushl
cmp
mov
lcall
fmulp
imul
mov
inc
incl
cmpsb
pushl
push
ret
add
add
jmp
call
incl
push
dec
mov
decl
sub
call
das
mov
call
or
push
pop
lods
xchg
xchg
pop
incb
std
pushf
sub
jbe
mov
cmp
lcall
or
mov
mov
call
aad
mov
jne
lcall
cli
and
sahf
cmp
mov
cmp
fwait
xchg
pop
pop
dec
sub
sti
mov
ficoml
mov
popf
loopne
jae
xchg
ljmp
mov
fnsave
aas
into
sbb
decl
roll
rcll
mov
sar
decl
in
mov
aas
mov
and
and
or
stc
scas
sub
test
js
jmp
int3
pop
mov
stc
ja
sar
movd
xor
je
jmp
add
dec
mov
sbb
mov
call
jmp
jne
inc
incl
out
xlat
inc
fsubrs
mov
sbb
mov
sub
aas
sub
lcall
sbb
call
decl
call
in
imul
pop
add
pop
sbb
lcall
and
adc
xchg
push
incl
lea
aaa
adc
adc
decl
inc
dec
adc
mov
cwtl
imul
rol
incl
mov
xor
call
mov
negl
into
sub
add
cmpsb
incl
jge
lret
jb
lcall
xor
enter
dec
movsb
decl
ficompl
push
push
insl
js
jecxz
sahf
outsb
rorl
lods
lahf
incl
jnp
cld
cmp
add
ljmp
out
and
cmp
sbb
jge
incl
inc
cmp
incl
in
sub
test
test
jg
or
push
push
ret
add
test
jnp
lcall
call
ljmp
cmp
adc
out
jg
dec
cmc
icebp
push
push
jmp
int
add
decl
and
inc
lcall
repz
mov
lods
or
pop
loopne
repz
and
dec
xchg
movsb
push
adc
push
js
fidivl
lahf
xchg
adc
call
push
mov
jmp
add
add
popf
fildl
mov
inc
and
jmp
jl
add
jmp
ljmp
incb
dec
sub
sti
arpl
cmp
incl
jle
insb
cmp
mov
lcall
call
jmp
add
call
jnp
push
jp
jae
hlt
add
pushl
add
cs
push
je
mov
lcall
push
fwait
pop
add
lcall
dec
pop
pop
lock
add
call
inc
add
jecxz
dec
push
add
stc
mov
ret
xchg
in
ret
sbb
ror
sti
and
ljmp
cmp
mov
cmp
mov
incl
add
jle
inc
jmp
incl
or
sahf
rolb
xchg
sbb
icebp
jmp
add
decl
sar
test
xor
ds
mov
dec
mov
cmp
jmp
jae
leave
popf
enter
incl
lcall
jmp
ljmp
mov
sub
ljmp
push
xchg
add
ljmp
ficoml
aaa
dec
in
insl
cmp
mov
xchg
repz
mov
scas
iret
sbb
clc
decl
pop
pop
add
call
daa
incl
mov
cmp
aaa
or
adc
ja,pt
fnsave
cmp
pop
cld
out
inc
jmp
mov
lcall
dec
push
push
and
cmp
jmp
fistpll
repz
cmp
mov
jmp
add
add
jae
incl
mov
or
push
cmp
clc
cmpsb
jmp
ljmp
jl
inc
jmp
cli
xchg
push
push
xchg
iret
sar
decl
sub
incl
add
add
in
cmp
jno
aas
xchg
hlt
ds
sar
cli
lret
jmp
push
sub
aad
inc
jmp
add
add
add
and
mov
adc
movsb
call
in
pop
jo
sub
aas
aas
mov
xor
imul
incl
and
je
cmpsl
dec
sub
push
push
ds
inc
ljmp
or
dec
popf
xor
sub
sar
cld
mov
ss
ja
push
dec
mov
ds
push
mov
push
stc
dec
sbb
lcall
comiss
ljmp
jg
and
push
dec
ret
in
and
lahf
xor
xor
xchg
std
mov
mov
cwtl
and
add
dec
add
mov
decl
js
pop
mov
cmp
mov
incl
dec
loope
dec
push
sub
or
incl
add
decl
inc
jg
fmul
test
mov
into
push
push
mov
popf
jbe
ss
sub
sub
decl
mov
pushl
adc
mov
incl
add
mov
testl
loop
ja
std
insb
gs
jl
pushl
xchg
xor
mov
xor
jecxz
pop
mov
ljmp
incl
jmp
xchg
data16
ficoms
call
or
add
cmc
mov
jmp
repz
incl
add
lret
mov
inc
incl
xchg
pop
jbe
lea
jmp
add
jecxz
in
incl
mov
in
sub
cmpsb
decl
jmp
test
pop
add
stos
inc
ljmp
mov
dec
rcll
decl
push
jmp
add
push
add
dec
xchg
push
mov
out
pop
in
popa
pushl
enter
xlat
iret
or
sti
aad
stos
enter
fstpl
jbe
pop
push
push
add
decl
in
cmc
jp
jg
pushl
insb
sbb
xchg
jnp
inc
jmp
fld
pushl
or
stc
inc
pushl
jmp
sti
ret
xor
out
test
xchg
data16
jl
mov
out
jge
je
je
xchg
pop
pop
or
incl
xchg
ja
lcall
dec
jl
pop
jmp
pop
test
or
jmp
call
mov
jp
ja
dec
and
lock
jno
ret
incl
mov
jge
add
decl
jmp
out
adc
sub
ljmp
mov
cltd
adc
ljmp
lods
imul
mov
push
ret
jl
dec
data16
cmp
adc
cld
cld
arpl
int
icebp
enter
cmc
pushl
mov
call
cmp
jmp
add
add
add
test
jmp
arpl
mov
lcall
sub
setp
cmp
pop
fistpl
lods
cmp
cmp
xchg
dec
mov
iret
into
incl
in
movsl
stc
xchg
fs
fstpl
mov
inc
jmp
push
lea
add
add
add
leave
imul
inc
jmp
sar
rcrb
out
popa
incl
aam
insl
stos
pop
xor
ja
cmpsb
call
lahf
lret
rorb
inc
jmp
add
xchg
pop
dec
add
clc
js
test
inc
jmp
call
push
add
jmp
add
and
mov
lods
inc
call
je
lcall
cmp
enter
mov
xlat
jae
jg
incl
call
incl
adc
fisubrs
and
scas
stos
cmp
call
jmp
add
pushl
pusha
lcall
lcall
call
or
adc
mov
dec
jne
mov
mov
cmp
push
inc
ljmp
popf
jmp
sub
fistl
in
pop
sbb
jo
cmp
aas
into
push
cmpsl
ljmp
lods
lcall
xchg
imul
mov
sbb
jmp
add
pushl
mov
call
shlb
cmp
jmp
cmpsb
call
incl
inc
incl
jne
pushl
call
jmp
fstps
inc
push
xchg
sbb
pop
pushf
cmc
jmpw
fstpl
out
shl
incl
dec
outsb
lret
jo
call
jae
lcall
mov
aaa
mov
std
push
push
aas
in
test
jmp
dec
sub
inc
cmp
adc
stc
cmp
mov
lcall
incl
sbb
or
pushl
mov
in
out
mov
aaa
push
add
push
ret
mov
sbb
in
add
add
add
cmp
pushf
cmp
mov
ljmp
decl
call
insl
mov
decl
int3
push
mov
mov
insl
xor
stc
mov
xor
shr
cs
incl
pop
add
mov
jmp
out
jne
call
xchg
fisubrs
enter
in
mov
dec
dec
or
pop
mov
jl
push
jmp
insl
test
add
add
cmp
jecxz
push
scas
daa
call
dec
fldenv
out
adc
lea
repz
loop
aam
push
mov
jne
push
ret
cmp
dec
jecxz
ds
adc
xor
leave
lods
push
jl
lret
incl
repnz
call
ljmp
sar
ljmp
call
and
xor
jno
cmpsl
mov
or
sbb
shr
aas
out
call
arpl
cld
xchg
mov
arpl
inc
dec
into
pop
int
cmp
jp
int
cli
fstpt
in
je
outsl
cmp
jmp
jnp
xchg
shlb
lcall
dec
xchg
and
out
mov
out
into
scas
lahf
outsb
jge
call
or
ljmp
inc
ljmp
push
mov
jns
pop
in
cmpsl
jmp
jmp
es
aas
ror
mov
jmp
ljmp
sbb
call
mov
inc
add
add
jl
add
into
sti
lock
xchg
mov
xchg
call
sar
xchg
jle
incl
jmp
imul
call
jmp
add
add
add
push
adc
push
insl
in
adc
call
cwtl
xchg
push
je
int
pushl
sub
inc
lcall
aam
rcll
daa
ljmp
mov
add
add
xlat
add
cmp
fildl
pushl
sub
cld
out
fmuls
pushl
std
sub
inc
hlt
jmp
push
inc
add
jle
mov
decl
jae
jmp
fnstcw
lret
ss
decl
pop
or
popl
test
incl
lahf
cmp
xor
pop
pop
xchg
stc
fmuls
mov
popa
cld
incl
cmp
in
xchg
int3
jbe
jnp
stc
jecxz
cli
xchg
xlat
sub
cmp
jmp
clc
mov
jmp
test
fs
int
xchg
add
jmp
call
cli
jo
push
mov
lcall
mov
iret
push
mov
inc
jmp
push
divb
in
leave
test
mov
movsl
ljmp
cmp
push
sarb
inc
incl
mov
mov
lcall
cmp
decl
cli
dec
adc
mov
stc
repnz
lcall
sahf
mov
ret
call
mov
loopne
mov
ljmp
incl
sti
pop
stc
or
cmp
pushf
inc
das
lahf
stos
fistps
movsb
cmp
dec
adc
out
adc
jg
cmp
inc
jmp
ljmp
dec
jns
xchg
dec
data16
fisttpl
push
in
repnz
jmp
mov
in
xchg
dec
call
xchg
sbb
mov
jmp
pop
ljmp
mov
push
arpl
dec
call
fistpl
fdivr
pop
enter
xor
cmp
push
clc
inc
cmp
dec
jmp
add
pop
int
pushl
movsb
jmp
jmp
lcall
mov
es
decl
test
xor
add
xor
add
fmul
dec
mov
adc
lcall
inc
pushl
xlat
test
out
cmp
or
or
in
and
mov
stc
loopne
jmp
xchg
mov
call
pushl
pop
mov
pop
mov
pop
dec
pushl
cmp
cmp
pushl
pop
outsl
aad
popa
mov
cmp
mov
lock
js
incl
or
movsl
jmp
jmp
jmp
push
mov
mov
enter
dec
sbb
aas
test
fimuls
inc
lcall
push
pop
inc
ljmp
ljmp
cmp
mov
insb
pushl
dec
ret
pushl
inc
incl
push
xchg
jle
jb
dec
mov
incl
decl
and
rol
jmp
lret
mov
fbstp
loop
and
shld
sub
cli
daa
call
cmpl
push
ret
ret
jmp
jmp
jmp
ljmp
pushl
sarl
lret
mov
jle
sub
incl
jmp
dec
push
jnp
pushl
push
das
xor
pushl
incl
call
xor
inc
decl
clc
jl
add
and
pop
cmp
lcall
je
jmp
add
jb
call
out
js
jnp
decl
push
adc
sub
decl
adc
lock
call
add
int
pushl
xchg
call
rcl
jg
imul
jnp
mov
cmp
mov
and
pop
dec
and
jns
call
jns
lret
dec
fistpl
jmp
cld
and
sbb
push
cmp
shr
pusha
push
clc
inc
jp
xchg
test
ljmp
mov
jmp
dec
ficomps
adc
or
dec
insl
add
lcall
sti
dec
jne
hlt
incl
call
xchg
jne
aaa
test
int
and
leave
xchg
add
pop
fcoml
loop
dec
add
lcall
inc
jmp
add
add
mov
jnp
scas
sar
lcall
lods
inc
cmp
movsb
lcall
call
ret
lcall
sub
into
fimull
cmp
loopne
mul
pushl
test
lods
dec
aam
std
mov
lahf
enter
sbb
out
pop
jge
scas
xor
call
cmp
xchg
cmp
lcall
jno
mov
push
pusha
push
ret
add
insb
fwait
inc
jmp
jmp
add
push
add
push
pushl
jmp
add
add
setg
inc
ljmp
xor
imulb
sbb
dec
movsl
jmp
jmp
add
inc
lcall
ljmp
dec
adc
decl
cli
cwtl
mov
inc
push
add
jmp
dec
test
in
pop
ss
lret
aad
and
pusha
call
cmp
mov
cmp
gs
cmp
push
ret
daa
call
lret
cmp
pop
jle
push
mov
or
add
and
xor
pavgw
call
push
inc
decl
dec
sbb
call
ljmp
out
imul
inc
call
fisttpll
xchg
jp
incl
inc
lcall
in
or
xchg
fsub
incl
decl
or
xor
mov
sti
mov
xchg
jnp
in
sbb
test
jmp
add
in
mov
ljmp
cmpsb
call
sbb
popa
inc
mov
incl
dec
cmp
lock
add
test
add
int
jmp
xchg
cmp
jno
jnp
lcall
xor
jmp
call
cmp
sbb
cmp
pushl
add
ljmp
movsb
lcall
adc
sbb
or
mov
popl
add
add
cld
and
adc
aaa
lods
mov
insb
hlt
pop
fisubs
cltd
in
lock
das
adc
cmc
fsubr
pop
notb
out
dec
rcrl
adc
pop
inc
inc
call
dec
sub
ss
fistpl
shrl
add
jmp
add
add
jns
pop
add
mov
mov
out
call
ror
cltd
pop
dec
sub
jl
xchg
mov
xchg
pop
sbb
jmp
call
repnz
add
push
test
lret
ja
jmp
mov
pop
pushl
popf
inc
add
add
int
pop
mov
stc
call
push
ret
add
test
push
mov
jmp
add
add
add
mov
repnz
incl
cmp
hlt
adc
pushl
dec
into
jmp
mov
fdivr
jmp
pop
dec
add
jg
pushl
cmp
mov
mov
inc
add
add
jl
add
adc
dec
ret
ljmp
in
mov
dec
mov
stos
negl
cmp
fucom
incl
std
jmp
incl
sbb
add
test
add
adc
clc
mov
rep
jmp
add
pop
lcall
fwait
aaa
adc
scas
mov
lcall
fdivl
pushl
lods
cmpsb
dec
outsl
lahf
mov
adc
incl
inc
lcall
daa
fsts
lcall
pushl
push
clc
cli
and
xor
inc
incl
pushl
ljmp
inc
insb
insb
jmp
add
jo
dec
cmpsb
ljmp
pushl
add
rcrl
cmp
js
pop
aad
daa
decl
aas
cmpsb
pushl
loope
in
jo
adc
mov
mov
lcall
incl
lcall
or
pop
cmpsb
lcall
adc
jmp
js
decl
call
decl
inc
incl
mov
movsl
call
decb
xor
cmpsb
decl
xchg
jmp
xchg
mov
ficoml
decl
ficomps
mov
incl
xchg
add
pop
aaa
imul
decl
mov
push
ret
jmp
adc
cmp
push
push
rcrb
add
sahf
fcmovb
incl
incl
dec
mov
popa
call
popa
inc
jns
pop
movsb
jmp
lcall
stos
call
in
push
mov
jmp
add
add
and
or
js
pop
sub
call
xor
fwait
cmp
mov
or
pushl
dec
das
mov
cld
sbb
jb
xchg
in
fnstcw
adc
xor
das
inc
add
add
movsb
cmp
daa
decl
pushf
fistl
pushl
rolb
sbb
pusha
incl
jne
mov
jmp
add
pop
add
mov
rclb
icebp
int3
in
cli
add
decl
scas
icebp
sub
sub
inc
ljmp
shll
out
push
mov
add
add
xchg
push
add
inc
dec
inc
jmp
call
mov
scas
pop
popf
icebp
add
jmp
jl
ljmp
aad
push
jmp
add
pop
add
xchg
call
stos
aam
aas
pop
mov
add
loopne
add
dec
add
movsb
lcall
sub
imul
pop
jl
ljmp
inc
decl
jmp
cmp
out
lcall
in
mov
movsl
decl
mov
stos
aaa
pushf
or
xchg
adc
push
or
ljmp
jmp
jmp
cltd
fwait
insb
or
mov
fst
cmpsl
ljmp
in
mov
ja
sub
jmp
jmp
imull
decl
pop
incl
mov
mov
push
push
push
ret
dec
add
inc
pop
out
sub
flds
mov
jmp
pop
push
xchg
add
mov
clc
and
add
pushl
lcall
fs
stc
sahf
cmp
lods
jp
mov
pushl
mov
xor
inc
jmp
xchg
nop
int
fdivl
sub
mov
dec
cmp
jmp
pop
js
pop
pushl
or
incl
cltd
loopne
cmp
push
or
scas
add
fdivrp
push
jmp
pop
push
jne
ljmp
call
and
js
rep
push
ret
add
lods
mov
decl
imul
incl
cmp
fcomps
out
fdiv
cmp
add
or
es
mov
aas
mov
cmp
jmp
mov
lcall
dec
push
add
pushl
jmp
jmp
rcrb
sbb
push
in
das
nop
inc
add
test
add
scas
aad
cmp
jmp
add
pop
incl
testb
jmp
xchg
or
or
cmpsl
decl
mov
mov
mov
xchg
add
fisttps
jmp
mov
mov
jae
inc
jg
adc
cmc
roll
jg
fstps
jmp
cli
jnp
xor
mov
lock
ljmp
incl
insl
add
fisubrs
enter
or
in
sbb
sub
xchg
add
add
xchg
pop
cmp
call
mov
jmp
pushl
call
mov
jle
jmp
cmp
sbb
incl
jmp
call
ljmp
stos
mov
cmp
pop
sbb
push
cmp
dec
and
cmc
push
mov
mov
push
push
ret
add
aas
sbb
push
out
out
arpl
pop
fcomps
adc
out
pop
pop
imul
rcll
call
outsl
inc
call
pushl
mov
aam
lcall
incl
add
lcall
stos
mov
cmp
imul
call
ljmp
cmp
arpl
inc
ljmp
push
call
cmp
enter
std
rcll
add
jmp
pop
add
jmp
or
mov
add
pushl
stos
jp
cmp
incl
outsb
mov
idivl
lcall
cld
sar
lcall
cs
inc
call
lret
mov
mov
or
out
pop
push
sahf
iret
sbb
incl
decl
sub
add
add
add
inc
add
xchg
inc
ljmp
sbb
pop
xchg
test
sbb
sbb
and
enter
pop
dec
xchg
cmp
push
or
jge
inc
incl
out
pop
dec
xchg
push
call
jno
call
incl
vxorps
cwtl
test
sar
mov
jbe
cmp
dec
cmp
or
out
ljmpw
call
jge
aam
add
jmp
incl
jmp
xchg
into
cmp
dec
dec
push
jmp
jmp
dec
add
adc
ljmp
mov
cli
imul
stc
xchg
jg
push
jp
xchg
push
cld
add
ljmp
jmp
add
jmp
call
mov
mov
lahf
pusha
call
or
sub
push
dec
jecxz
jecxz
insl
repz
pushl
out
incl
mov
insl
sbb
jmp
add
fnop
fdiv
stc
dec
in
mov
jg
stos
mov
push
sbb
cli
cltd
inc
add
add
add
cmp
imul
scas
enter
ljmp
jno
movsb
call
incl
repz
push
fdivrp
incl
jl
add
pop
inc
lcall
and
mov
sahf
mulb
xor
call
mov
test
jl
stos
decl
idiv
pop
jmp
dec
inc
push
insl
add
pushf
mov
int
fidivs
cltd
scas
pop
cli
pop
xlat
int
out
mov
pushl
loopne
sbb
outsl
ret
push
add
add
fistpll
loope
sti
call
arpl
add
lcall
lahf
cmpsl
lcall
incl
daa
call
loope
ljmp
ret
incl
cmp
decl
fdivl
incl
sti
fdiv
aas
mov
aas
xor
jmp
jmp
cmp
jmp
add
out
fldenv
jo
ljmp
in
add
call
jne
stc
loop
push
cmp
je
cmc
push
incl
xchg
xchg
inc
jl
pop
sub
pushf
mov
clc
mov
jae
test
dec
xchg
fs
mov
imul
pop
repnz
ljmp
jmp
fs
ffree
pushl
xchg
adc
jns
mov
mov
stos
inc
pushl
and
cmp
inc
jmp
sbb
ljmp
adc
fisttps
or
ret
into
fwait
mov
jl
fstps
fistpll
jge
sub
xchg
stc
jp
frstor
test
mov
call
call
push
ret
mov
jmp
int
add
mov
jmp
out
sar
sub
iret
mov
jmp
test
jle
fs
jns
jne
jle
lss
out
jo
mov
adc
add
test
pop
xor
cli
pop
in
dec
jmp
adc
ljmp
dec
cmp
aaa
add
add
add
call
jecxz
pop
add
ds
jae
add
jmp
add
add
jnp
xor
inc
incl
insb
or
inc
push
jge
jmp
mov
xor
inc
add
add
add
xchg
jmp
sub
and
pop
in
or
lcall
mov
jnp
xchg
sbb
adc
call
cmp
pushl
popa
jmp
lcall
lcall
sbb
incl
add
xchg
push
mov
leave
jl
cmp
jmp
pushl
adc
sar
decl
inc
add
xchg
push
pop
add
mov
stos
adc
loope
lea
inc
inc
jmp
adc
pushl
cmp
inc
mov
inc
fisttps
call
sub
adc
mov
jmp
pushl
dec
xchg
sar
lcall
lcall
mov
jmp
add
decl
jl
adc
lcall
fdiv
mov
call
ret
inc
cmp
out
scas
enter
pushl
loopne
inc
incl
pushl
add
push
fdiv
je
repz
jmp
call
incl
sub
cmp
adc
call
inc
dec
mov
dec
mov
cmp
sar
push
decl
iret
div
call
push
call
cli
callw
sub
push
decl
psubw
push
popa
lcall
xchg
inc
decl
dec
scas
imul
xor
imul
add
mov
dec
adc
aaa
testl
pushl
aam
int3
call
cwtl
inc
add
add
xchg
add
sbb
xor
inc
incl
movsb
lcall
fwait
lods
jge
and
out
cmp
leave
jmp
add
jl
adc
push
cmp
inc
lcall
dec
lods
mov
push
fld
inc
call
pushf
mov
ljmp
mov
pop
xchg
icebp
mov
push
int3
lods
outsb
vaddsubps
jg
lahf
loope
idivb
jne
stos
jmp
push
nop
imul
pop
stc
sub
push
cmp
cmpsl
incl
sbb
dec
dec
ror
push
inc
jns
clc
xchg
sub
decl
pop
sub
popa
decl
pop
mov
pushl
cmp
in
mov
sahf
stc
mov
outsl
inc
incl
call
adc
aaa
push
jecxz
out
xor
incl
ficompl
mov
mov
lcall
jle
mov
fst
lahf
dec
int
mov
incl
pushl
call
sub
cmp
inc
lcall
inc
ljmp
and
pop
aas
or
jl
sbb
adcl
add
sahf
xchg
pop
lcall
call
cmp
pop
pop
ds
ljmp
adc
jmp
push
ret
xchg
movsb
push
stos
xchg
pop
cmpsl
inc
ljmp
int3
movsl
dec
stos
out
fdivr
mov
decl
dec
ret
sti
xor
fxch
dec
test
stos
stos
or
dec
repz
sub
int
imul
jmp
repnz
mov
adc
add
pop
dec
add
jo
int
aam
cmpsb
ljmp
push
add
jmp
add
lret
sbb
mov
imul
ficoml
jnp
js
test
xor
dec
inc
call
jmp
clc
cli
add
xlat
mov
jmp
call
repz
add
push
inc
dec
add
adc
mov
jmp
test
mov
pop
outsl
jnp
incl
xor
jle
sbb
ljmp
push
jg
cmp
jmp
pushw
mov
std
pop
mov
mov
pop
test
dec
xor
sbb
call
xchg
cmp
call
iret
int
insb
sub
pushl
jge
mov
jo
xchg
mov
pushf
cmc
pop
mov
jge
xor
decl
mov
jmp
add
popf
mov
jmp
sarl
add
inc
jl
add
decl
shrb
lret
pop
in
insl
and
cmpsb
cmp
mov
cld
movsl
decl
mov
loop
fdivrs
and
stc
push
jl
cltd
mov
in
cmp
cwtl
mov
sub
mov
ljmp
shr
cmp
add
incl
add
dec
sbb
jb
jmp
cmp
dec
or
mov
stos
jecxz
incl
add
push
out
and
cltd
lods
int
push
cmp
xchg
or
call
std
add
decl
or
jmp
insl
int
add
push
int
incl
lcall
incl
mov
cmc
negb
test
pushl
jmp
inc
decl
jle
ds
popa
decl
mov
xor
into
lods
iret
jbe
loop
add
gs
aas
mov
fists
imul
ljmp
ja
mov
incl
adc
lcall
decl
fbstp
out
fidivrl
movsl
ljmp
and
lcallw
xchg
pop
push
mov
ficoms
jg
jmp
decl
shl
mov
leave
push
add
sub
mov
mov
incl
pop
mov
icebp
fstpt
xchg
movsl
mov
xor
mov
incl
repz
arpl
jmp
jmp
lret
lcall
add
jmp
inc
ljmp
ret
jmp
add
add
decl
inc
jmp
fcomps
mov
xor
add
add
add
cld
in
adc
jmp
mov
cld
jnp
js
adc
mov
add
mov
xchg
dec
adc
or
decl
cmp
adc
decl
push
jmp
cmp
jg
jmp
push
add
lcall
pop
mov
xchg
push
jmp
cmp
cli
mov
sub
nop
dec
divb
inc
lcall
pop
ret
inc
fidivl
push
pop
cwtl
daa
call
sar
loopne
cmp
loope
negl
jle
cmp
icebp
imul
mov
decl
inc
call
dec
sbb
push
mov
mov
sahf
mov
jmp
pushl
stos
aaa
push
push
xor
icebp
lea
jg
cmp
incl
std
jge
pop
test
mov
mov
movsl
call
test
imul
incl
mov
xchg
stos
add
dec
add
ljmp
dec
js
call
pushl
stc
fmull
cmp
gs
inc
add
decl
lock
jmp
sub
aaa
push
lock
xor
decl
out
push
xchg
cmp
mov
incl
insb
repz
iret
lock
mov
add
incl
ljmp
incb
decl
push
mov
jmp
xchg
mov
cld
aaa
out
xor
jmp
jns
pop
inc
jmp
incl
call
fisubl
fisttpll
sar
cld
xchg
mov
xchg
push
xchg
movsl
incl
in
call
mov
aaa
jbe
push
out
mov
jmp
mov
stc
into
or
inc
jmp
decl
push
cmp
jmp
add
mov
inc
add
add
add
add
mov
add
jl
add
add
test
adc
ds
pushl
aad
decl
mov
ljmp
inc
pushl
out
sbb
mov
in
insl
sarl
ja
lcall
incl
leave
cs
sbb
lret
cmp
test
xor
mov
jg
lcall
xor
je
jmp
jl
pushl
jmp
js
ja
adc
and
cmpsb
mov
mov
incl
add
fistpll
lods
movsb
ljmp
decl
and
jnp
xchg
int3
fwait
ja
xchg
mov
dec
push
push
xor
xor
jmp
jl
xchg
dec
add
lret
or
lcall
mov
fdivl
sub
jmp
xchg
call
ss
add
add
add
push
cmp
das
pushl
sahf
in
cmp
push
mov
add
xchg
jnp
mov
fnstenv
xor
insl
inc
fldenv
jmp
or
inc
call
loopne
pop
add
jg
in
mov
ret
incl
mov
jbe
pop
inc
decl
jno
incl
ds
cmpsb
call
lcall
inc
jmp
pushl
adc
push
incl
decl
mov
incl
mov
cwtl
push
repnz
and
push
ret
add
add
imulb
add
dec
aad
negl
mov
lea
jmp
xor
pushl
inc
ljmp
call
inc
decl
inc
incl
xchg
lahf
dec
or
dec
and
pop
pop
popa
call
push
xchg
xor
cmpsl
lcall
pusha
jp
ds
cltd
mov
insl
push
push
push
enter
adc
scas
sarb
push
mov
aad
shrb
jbe
jle
lahf
fadds
pushl
jb
decl
fadds
mov
mov
cmp
in
adc
jmp
icebp
inc
pushl
xchg
add
jmp
jp
or
or
aas
xchg
insb
pushf
or
popf
lret
sti
int3
xor
jp
push
call
ffree
incl
jne
mov
call
inc
push
sbb
incl
dec
add
cmc
push
mov
jmp
add
add
ljmp
push
ret
add
incl
xor
decl
xor
int
ljmp
push
nop
ljmp
popa
sub
add
add
jmp
cmp
inc
out
enter
mov
mov
xor
mov
lcall
ljmp
decl
xchg
daa
pushl
pushf
testb
push
decl
jmp
add
sahf
dec
cmp
int3
lahf
or
incl
jge
jmp
inc
add
add
call
mov
jmp
shrl
aad
stos
cmp
ljmp
shrl
xor
mov
icebp
or
or
mov
cmp
cli
mov
je
lcall
cmpsl
incl
decl
cltd
sar
dec
pop
je
incl
jmp
call
jmp
decl
movsl
incl
js
imul
xchg
xor
push
inc
dec
js
jmp
cmp
mov
push
mov
mov
decl
testl
xor
sti
sub
jmp
mov
incl
fcomps
inc
push
stos
sarl
jbe
push
cld
jo
pop
popa
pushl
cmp
scas
inc
lcall
filds
decl
aam
ja
cmp
leave
or
lcall
movsl
call
incw
cmp
sbb
inc
call
jns
jmp
adc
imul
ljmp
and
mov
mov
aam
adc
pushl
pop
push
or
mov
cmp
call
outsl
and
ljmp
fsincos
push
in
sar
call
repz
xchg
mov
cmp
nop
js
das
enter
push
jns,pn
repz
add
decl
sub
mov
ret
ljmp
jecxz
jne
int3
inc
incl
mov
jo
call
jg
insb
outsb
or
sar
pusha
incl
in
or
std
pop
and
adc
psrld
push
popf
loopne
inc
incl
ret
loope
push
stos
and
and
xchg
movsb
jmp
inc
jmp
pushl
scas
sbb
into
jbe
shl
jl
pushl
ljmp
movb
add
jmp
jl
stc
jae
jmp
push
incl
push
jge
jge
mov
and
lods
mov
jmp
lcall
inc
lcall
leave
ret
call
lcall
adc
ja
sti
int3
stc
jmp
cli
jno
add
dec
add
int
lcall
lcall
lock
xchg
mov
nop
jl
mov
pushl
aam
incl
decb
dec
or
call
jmp
add
and
xor
call
fisubrs
arpl
cmpsl
lcall
add
jmp
inc
add
add
ljmp
call
lcall
stc
sbb
stos
cmp
lcall
cmc
jno
call
cmp
pop
mov
mov
pusha
jmp
add
dec
insl
add
call
pushf
sbb
add
insl
add
add
aad
lahf
mov
mov
push
cmp
fmuls
outsl
inc
lcall
xor
push
movsl
push
sbb
lcall
add
stos
xchg
xchg
lahf
jno
aaa
test
xchg
cmp
ret
jnp
pop
insb
cmp
test
rcll
jns
mov
hlt
mov
or
mov
imul
movsb
call
loope
add
pushl
ret
jmp
jmp
ss
mov
push
cmp
idivb
jmp
call
inc
decl
inc
incl
out
xchg
sub
test
cmp
pushl
lcall
jecxz
pop
lret
dec
mov
aas
or
insb
fldcw
nop
inc
jmp
neg
dec
sar
push
inc
call
push
ret
add
out
insb
int3
ret
jmp
push
or
xchg
out
ds
into
inc
push
je
loope
jmp
cld
outsl
inc
jmp
ss
jp
dec
decl
add
jl
icebp
fsts
xchg
and
shrb
jg
cmpsb
jmp
inc
cld
cmp
mull
lcall
call
and
mov
adc
fstps
imul
xchg
out
imul
lcall
das
rolb
jge
sub
xchg
sbb
js
dec
jmp
out
and
xor
mov
popl
mov
decl
or
jo
incl
fwait
loopne
sub
test
xor
sub
loope
adc
sbb
cli
stos
dec
mov
mov
jl
inc
jle
out
popa
jmp
incl
sti
jb
mov
dec
addr16
pushl
hlt
jmp
xchg
mov
adc
jl
mov
mov
jmp
add
add
mov
lods
je
scas
adc
std
mov
call
adc
and
fdivl
adc
mov
inc
lcall
mov
jmp
add
inc
jl
xor
and
xor
fmull
ljmp
jne
xor
push
sub
push
stos
call
inc
incl
cwtl
push
test
clc
push
cmp
and
pop
icebp
fildl
test
dec
xchg
jle
cmp
add
call
inc
jmp
pop
or
test
xor
notb
xchg
xchg
jl
sub
jnp
pop
ret
call
lahf
or
or
and
mov
push
mov
stc
out
push
decl
jmp
add
mov
add
incl
inc
lcall
incl
cmp
ss
push
repz
ja
aad
hlt
xor
jo
insb
popf
dec
in
pop
xchg
and
sub
je
hlt
scas
mov
pushl
jecxz
jns
mov
shr
add
dec
add
xor
incl
add
dec
add
dec
cmp
sbb
shr
sar
push
add
add
mov
ljmp
xchg
cmp
push
sbb
dec
jge
ja
decl
pop
lret
shll
decl
jnp
scas
xchg
enter
lcall
xchg
push
aam
mov
mov
xchg
lods
dec
movsl
pushl
int
xor
fidivrl
mov
lods
outsl
and
sub
mov
jmp
add
and
sbb
pushl
jge
pushl
pop
xor
or
jle
mov
decl
jb
unpckhps
clc
xchg
mov
mov
sbb
add
add
add
scas
cmp
cmp
jmp
movsl
dec
and
add
ljmp
fbstp
ret
jmp
add
jl
add
imul
dec
cmp
jae
inc
pushl
cmp
lock
mov
cld
inc
pushl
cwtl
decl
test
or
fsubrp
incl
nop
scas
cmp
rep
adc
stc
stos
xor
inc
ljmp
cli
lock
push
bnd
jp
test
cmp
incl
jmp
pushl
jge
sbb
decl
repz
incl
sti
adc
sub
fcoml
add
mov
add
sub
inc
out
dec
insb
popf
lahf
repnz
divl
mov
pushf
sub
add
incl
lcall
push
mov
dec
enter
call
push
pop
jae
ret
fwait
adc
imul
jmp
mov
adc
or
xor
jmp
pushl
cmp
into
mov
xor
incw
push
add
jmp
mov
mov
mov
fs
fmull
pushl
inc
pushl
sar
xchg
inc
incl
call
lret
std
nop
xchg
sbb
decl
cmp
cmp
push
mov
call
incl
cmp
lcall
push
cmp
inc
cmp
or
sbb
incl
sbb
xchg
lock
out
push
jl
add
dec
mov
call
adc
lret
sub
push
aam
lcall
mov
cmpsl
pushl
decl
insb
lea
lret
push
incl
incl
decl
bswap
outsl
inc
incl
ljmp
lcall
insb
stos
xor
mov
mov
stos
aas
lahf
mov
test
cmp
mov
fsub
lcall
sbb
call
fstl
push
aaa
int
push
mov
mov
rclb
sahf
dec
hlt
push
mov
pop
and
out
idivb
push
incl
jnp
xchg
mov
outsl
xor
cmpsl
call
push
data16
jp
mov
jne
pushl
cmp
loop
mov
and
inc
ljmp
add
out
decl
push
sar
outsl
stc
pusha
pushl
sbb
jnp
pop
mov
decl
jg
dec
push
ret
add
pushl
pop
cmp
lcall
mov
push
ret
jl
pop
add
mov
jmp
add
cmpsl
call
hlt
sbb
jmp
lcall
jnp
push
jmp
pop
mov
out
fildll
incl
mov
dec
pop
test
pop
je
fdivrs
sbb
jmp
xor
add
sub
insl
pop
add
and
xchg
ljmp
or
push
push
mov
push
ds
add
add
cmpsb
dec
mov
rcrl
push
test
sar
cmp
jmp
xchg
dec
add
xchg
dec
cmp
push
in
xchg
fdivr
incl
xchg
add
test
mov
sub
shl
ljmp
and
add
and
clc
fiaddl
out
cmpsb
jmp
adc
outsl
jg
out
mov
sbb
sbb
lret
enter
cmp
je
mov
decl
test
sub
jb
jns
jmp
add
adc
and
mov
iret
push
je
jmp
pop
movsb
jmp
lcall
push
jmp
pushl
cmpsl
jmp
jmp
mov
pop
lock
adc
mov
lock
incl
incl
pop
push
ret
add
push
push
ja
cmc
sar
out
repz
jl
dec
add
add
adc
pop
cmc
ljmp
inc
ffree
push
xchg
and
leave
mov
leave
fxch
lcall
add
mov
rcrl
add
test
inc
xchg
jmp
hlt
mov
mov
ljmp
insl
sub
xor
imul
sbb
ja
adc
in
dec
dec
insl
repnz
push
sub
pusha
push
idivl
je
xchg
nop
imul
popa
jmp
push
add
insl
add
call
mov
mov
icebp
pop
cwtl
mov
cmpsl
cld
xchg
dec
and
rorl
inc
call
push
push
decl
and
add
push
dec
adc
and
insb
outsb
scas
iret
fisttps
rorl
aad
andps
sahf
dec
add
add
fidivs
incl
out
rol
decl
cld
fldcw
leave
cmp
and
cmp
cmp
cmp
push
cmp
test
mov
push
dec
sbb
stos
jmp
add
xchg
add
pushl
ds
mulb
jmp
cli
pushl
inc
lcall
das
xchg
mov
call
pushl
xor
pop
jmp
pop
add
cmp
out
jns
lcall
lea
sub
xchg
add
xchg
xor
inc
call
dec
addr16
incl
fisubrl
lret
cmp
inc
pushl
insb
mov
sbb
daa
call
dec
decw
jmp
fsts
mov
jp
scas
xchg
fwait
call
jecxz
mov
call
xor
add
xchg
out
incl
repz
dec
add
pop
sarl
jnp
pop
ljmp
xchg
test
mov
call
push
cld
pop
mov
jb
je
jmp
add
ljmp
decl
call
jmp
add
insl
incl
clc
lods
popa
ljmp
jmp
inc
decl
inc
call
incl
xchg
jns
jp
out
mov
call
jne
and
jnp
inc
ljmp
enter
incl
jl
add
outsb
mov
push
ret
add
add
incl
xchg
jle
incl
lcall
sahf
icebp
inc
ljmp
lods
jnp
loop
jns
add
xor
adc
outsb
idivl
jmp
int3
push
lock
cmp
adc
or
incl
add
add
pop
sub
xchg
ret
mov
incl
ljmp
lcall
pop
lret
dec
lea
and
and
insb
sarb
pop
and
push
pushl
sbb
int
jge
ljmp
jbe
decl
lods
jl
pushf
xorps
add
incl
sti
sbb
pshufw
imul
lcall
jg
stos
enter
dec
imul
insb
mov
inc
inc
call
out
sbb
stos
and
cmp
adc
xor
stos
filds
push
cmpsl
incl
aad
push
mov
gs
call
dec
and
sub
cmp
xor
rorb
adc
aam
inc
incl
lcall
pop
push
in
pop
mov
sub
loop
cmp
jecxz
jmp
push
dec
xchg
repz
dec
aam
sar
call
sbb
xchg
and
ljmp
sub
or
vaddsubps
movsl
in
cs
test
cmp
xchg
sti
xor
test
mov
and
pushl
fnstsw
mov
add
push
ret
xor
jb
inc
decl
pop
mov
cmp
sbb
lcall
jmp
jmp
add
pop
dec
and
imul
sub
adc
push
pushf
incl
dec
add
addb
add
add
xor
call
call
push
cmpsb
ljmp
stc
adc
xor
jmp
nop
jae
das
add
incl
mov
aas
stos
xchg
sbb
ja
jb
xor
lahf
jmp
adc
xchg
test
outsl
imul
add
ljmp
cld
incl
cli
jge
push
pushl
mov
mov
aam
icebp
outsl
rcrb
jmp
ljmp
decl
cs
fisubrl
fisttps
popf
daa
lcall
test
ja
sarb
into
sbb
add
decl
jne
push
or
dec
sub
inc
jmp
call
call
ds
sub
out
lods
cs
fmul
in
fstpt
mov
sbb
sbb
dec
pop
int
add
inc
push
incb
cmp
movsl
dec
fstpt
lods
push
lret
pop
adc
jmp
call
pushl
popa
ljmp
decl
inc
pushl
lcall
mov
jmp
add
stos
ja
gs
or
pushl
pop
cmp
or
inc
add
int
add
test
pusha
jmp
add
add
call
jmp
add
mov
mov
jmp
mov
sar
xor
and
or
cld
xchg
leave
xor
add
sub
mov
add
push
lcall
ljmp
lcall
add
and
dec
sar
mov
jecxz
lock
xchg
fwait
lcall
in
mov
test
mov
push
in
aad
push
incl
push
pop
pop
scas
jmpw
call
push
loope
add
cmp
and
repnz
stos
inc
incl
lcall
push
fldt
mov
mov
ja
fisttpll
xchg
das
mov
dec
mov
call
jno
push
add
jmp
add
cmp
fidivrl
xchg
mov
push
call
sbb
sub
fcomip
jmp
and
and
jbe
movsb
cld
cmpsb
ljmp
jmp
inc
lcall
sub
sbb
incl
adc
imul
out
mov
cmc
cltd
mov
test
sbb
pop
add
add
add
jne
inc
ljmp
push
decl
decl
out
imul
incl
in
mov
dec
push
aaa
mov
decl
dec
jp
decl
mov
mov
call
xor
adc
enter
xor
lods
jmp
add
add
push
sti
stc
sar
and
jmp
sbb
testb
inc
jmp
fsubrs
mov
sar
pop
ljmp
fnsave
and
addr16
jg
call
jns
std
imul
call
cmp
decl
sar
fildl
mov
adc
push
jge
inc
incl
incl
inc
call
sbb
imul
incl
xchg
xor
cli
pop
int3
mov
cmpsb
std
xor
or
incl
xchg
int
pushf
xchg
mov
dec
test
int
call
cmp
sub
push
pushl
or
incl
out
lods
adc
inc
incl
out
imul
pushf
pop
scas
decl
pop
cmp
pop
cmp
jns
incl
cmp
jecxz
sub
or
outsb
jnp
dec
test
iret
addr16
mov
lcall
inc
call
fdivl
call
jo
incl
add
insl
test
xlat
mov
jmp
cmc
ret
xchg
pop
sbb
sub
jno
xchg
insl
mov
test
xchg
dec
push
sahf
hlt
in
stc
divl
iret
insl
add
pushl
xlat
push
push
jno
popa
lcall
and
and
cmp
mov
add
jmp
fnstcw
dec
negb
lcall
cmp
mov
movsl
dec
incl
lret
lods
sub
cmp
pop
jmp
add
call
shll
pushl
mov
das
sub
xchg
push
hlt
push
cmp
jb
sarb
jmp
jmp
movsl
ds
sahf
push
mov
flds
in
or
inc
dec
pushw
std
jo
ja
jae
jp
sbb
jg
insb
aaa
sub
sub
jmp
fldenv
jb
jo
fildll
dec
cmpsb
jg
test
adc
jo
push
loope
mov
call
out
popf
arpl
cmovp
pop
loopne
pop
inc
incl
icebp
fs
stc
pop
sub
jmp
sti
pop
dec
cli
testb
ret
lcall
mov
pop
ss
xlat
push
xor
jmp
inc
decl
add
ljmp
xlat
cmp
aam
add
ljmp
and
cmp
inc
decl
jmp
add
add
xor
daa
lcall
pop
jmp
add
fwait
adc
test
dec
push
mov
out
stos
insb
add
mov
cmp
cwtl
mov
insb
rorl
adc
ljmp
pop
inc
dec
lock
lods
mov
jbe
decl
js
fdivrp
push
mov
add
sbb
add
jl
jno
inc
decl
jns
xchg
dec
jns
sar
insb
scas
and
push
insl
and
sub
push
ret
jl
add
add
lcall
push
jmp
insl
int
add
push
jae
cmp
add
cli
lods
dec
lock
dec
add
mov
call
jmp
add
add
pop
and
lods
ret
xchg
jge
xchg
sub
call
xchg
cmp
lcall
mov
cltd
cli
fistpll
loop
pop
xchg
sub
push
jge
sbb
xor
xchg
int3
mov
packsswb
ljmp
insl
in
loopne
push
xor
push
mov
add
add
int
cld
adc
push
ret
add
pop
xchg
popa
inc
ljmp
sahf
xchg
rcll
cmp
push
pop
add
cld
xor
xchg
pop
mov
ljmp
adc
mov
icebp
testb
lcall
mov
add
add
dec
add
push
dec
loop
add
ljmp
sarb
ds
imul
loopne
insl
jl
push
ljmp
call
or
call
loopne
repnz
call
jnp
mov
xchg
aad
dec
push
add
pushl
shrb
inc
add
add
pop
cmc
adc
pop
and
xor
pushl
adc
pushf
push
mov
pushl
push
add
dec
cmpsb
stc
out
inc
ljmp
add
add
jmp
mov
dec
lods
lea
ja
jmp
out
and
aaa
imul
push
ret
pop
push
add
inc
jns
ljmp
lret
lock
out
inc
incl
decl
inc
jmp
decl
movsl
inc
jmp
call
mov
movsb
jmp
add
add
test
mov
jmp
dec
add
test
cmp
push
sar
xchg
int
add
lahf
repnz
call
jmp
dec
dec
mov
ret
lcall
xchg
sub
pushl
sub
mov
push
dec
lret
lcall
pushf
jmp
add
mov
movsb
fcmovnu
cli
stc
mov
test
scas
jmp
add
inc
lcall
icebp
jle
iret
sub
scas
jns
jmp
ljmp
jl
push
ds
aam
pop
add
incl
mov
sub
mov
call
xchg
add
pop
lcall
insl
xlat
insl
test
sbb
push
mov
and
cmpsl
lcall
sub
inc
jmp
pop
xchg
cltd
scas
or
ljmp
xlat
dec
jno
dec
push
in
mov
pushf
sub
xchg
dec
pop
pop
and
xchg
in
mov
pop
jecxz
dec
pushl
cld
cs
sub
and
call
in
lret
add
test
dec
add
decb
cmp
dec
pop
dec
and
sbb
mov
or
ret
decl
mov
sti
pop
adc
in
add
add
xchg
push
or
pop
cmp
iret
mov
cmp
hlt
popf
lret
ja
fwait
mov
jecxz
jl
fisttps
pop
sbb
sbb
add
add
insl
fidivrl
decl
jmp
cmp
shll
scas
out
jo
inc
call
test
call
push
and
pushf
jne
incl
lcall
popa
incl
incl
mov
cmp
cmp
jl
leave
ret
jl
jecxz
sti
cmp
mov
mov
jb
or
jmp
pop
add
mov
push
out
jl
mov
adc
ljmp
pop
jge
popf
sub
dec
into
sti
sub
sbb
roll
fisubrl
sub
out
pop
test
pop
dec
movmskps
xor
das
shlb
mov
decl
test
jmp
insl
pusha
push
incw
incl
dec
dec
call
jo
sar
pop
mov
pop
push
and
fisttpll
lods
jmp
pushl
and
mov
mov
into
jb
incl
jmp
jmp
lcall
mov
jmp
ljmp
mov
inc
decl
jle
cs
cmp
enter
cmp
cmp
lods
fdivrl
aas
cmc
pop
repz
or
ficoms
jmp
push
mov
adc
add
test
add
push
cmp
insb
pop
scas
cmp
outsl
leave
dec
push
inc
dec
sub
popa
lcall
test
push
call
lcall
test
stc
push
jmp
xchg
lahf
mov
cmp
jmp
incl
jmp
incl
or
ljmp
push
incl
jmp
dec
mov
sbb
sub
ljmp
outsl
dec
xchg
sbb
sub
fwait
mov
jge
decl
repz
cmp
pop
push
sahf
xchg
add
cmc
pop
mov
push
jmp
dec
add
add
gs
in
stos
cli
cli
sahf
lret
out
into
nop
ljmp
jmp
pushl
inc
decl
mov
push
xor
mov
add
pushl
mov
rol
decl
cmp
adc
rolb
mov
pop
int3
jl
lods
gs
decl
xor
mov
mov
lcall
incl
insl
fldl
incl
pushl
pop
inc
call
fadd
incl
nop
sbb
xor
pushl
dec
cmp
xchg
inc
pushl
dec
fidivs
jg
lcall
jge
add
jmp
add
add
ljmp
hlt
outsl
int3
mov
pop
jp
fisubl
in
cld
mov
decl
call
sbb
js
call
mulb
lret
sub
mov
jle
mov
inc
jmp
cmp
out
out
sbb
inc
lcall
cwtl
cmp
out
xlat
mov
pop
aam
mov
jl
arpl
enter
test
das
icebp
sbb
ret
jmp
add
add
add
fldln2
jno
push
idivl
rol
inc
decl
fsubrs
cmp
call
jb
inc
pushl
mov
ds
incl
add
ljmp
jmp
decl
push
scas
cmp
mov
sahf
jecxz
mov
call
jae
push
push
decl
jp
pop
aam
fadds
ljmp
pop
clc
insb
dec
popf
test
enter
mov
sar
mov
fnstsw
shrl
incl
inc
call
inc
jmp
or
decl
mov
incl
add
aas
push
ljmp
cmpsb
jmp
sbb
lods
in
lcall
add
ficoml
pop
out
ljmp
add
xchg
hlt
decl
jbe
call
aam
ljmp
xchg
loope
xchg
xchg
nop
pop
es
ljmp
test
mov
stos
incl
push
lahf
and
or
dec
dec
xor
call
inc
inc
jmp
call
xchg
jl
jmp
dec
hlt
pop
pop
popa
lcall
test
jae
fildl
mov
push
push
fiadds
outsl
xor
sub
xor
leave
mov
into
push
add
jl
add
push
int3
daa
jmp
adc
dec
mov
pushf
add
cmp
sbb
mov
dec
test
or
jmp
pop
mov
call
lods
mov
pushl
lret
and
cld
xchg
or
cmp
pushl
jmp
pop
lcall
popa
pushl
push
inc
ljmp
xor
jbe
xor
arpl
outsb
fwait
xchg
cmp
pushf
xchg
push
test
cmp
pushf
jnp
pushl
push
cmp
ljmp
sbb
cmpsb
or
add
jnp
ljmp
sub
sahf
pop
jl
hlt
cs
jmp
push
push
cmp
std
or
int3
cmpsl
pushl
in
inc
incl
in
cmpsl
ds
jmp
mov
cmp
xor
jae
adc
loopne
insl
ljmp
and
pop
cmc
inc
pushl
aaa
in
or
jns
xchg
dec
mov
jl
mov
lahf
fldt
nop
arpl
cmp
sbb
and
mov
iret
jge
push
jle
icebp
dec
movsb
pushl
cmc
call
push
ret
call
jae
in
cmp
and
aas
cmc
push
or
push
mov
sub
add
add
inc
add
push
ret
add
outsl
sbb
incl
pushl
push
dec
fst
lcall
xor
fldl
lcall
jns
jmp
push
pushl
out
fxch
stos
adc
testl
add
decl
pushl
rorl
dec
in
ljmp
das
lahf
cmp
sbb
mov
ljmp
in
and
rorl
adc
push
icebp
outsb
jmp
lcall
jmp
lcall
incl
outsb
out
mov
pushf
lea
loope
xlat
xchg
sub
jo
js
lret
call
inc
dec
jns
cmp
movsl
pushl
out
call
inc
pop
dec
push
enter
jmp
push
add
jmp
pop
add
pushl
sbb
pushl
call
jbe,pn
adc
push
pop
sub
push
jae
pop
out
inc
incl
mov
fdivl
out
adc
jp
cli
aas
cmc
popf
rcl
fucom
ljmp
fsubr
outsb
ljmp
mov
jmp
add
xor
loopne
jmp
inc
add
pushl
lods
test
sub
pop
nop
or
sbb
lods
pop
jns
cmp
add
decl
xor
xor
fsub
decl
cmp
cmp
fninit
cmp
push
jmp
dec
push
mov
xchg
jo
decl
sub
xchg
repz
rcll
or
lods
jmp
xor
insl
xchg
cmp
scas
arpl
movsl
jmp
lret
mov
decl
adc
popf
jno
decl
mov
jmp
add
add
add
popf
shlb
jmp
push
mov
cltd
push
pushl
ljmp
sbb
and
mov
lcall
jmp
dec
fcmovne
mov
lcall
push
jo
xchg
cmp
fadds
jmp
decl
call
jne
jmp
add
xchg
add
inc
decl
adc
lahf
imul
lcall
or
pushl
decl
test
add
jmp
add
xlat
enter
imul
mov
pop
jmp
mov
pushl
shrl
cli
push
ljmp
pop
popa
jmp
xor
lods
sahf
incl
add
insl
add
lcall
pushf
clc
push
inc
incl
push
fcoml
rol
in
addr16
lcall
testl
movsl
idiv
call
int
call
sbb
incl
add
aas
adc
int
jmp
decl
pushf
inc
ljmp
jmp
ljmp
pop
dec
dec
mov
and
cmpsl
jmp
pushl
scas
imul
call
pop
shld
repnz
sbb
and
jmp
add
test
dec
test
mov
outsl
jns
call
data16
incl
add
add
jae
mov
pushl
stos
dec
jle
call
daa
incl
adc
dec
sbb
fwait
pop
xchg
aaa
mov
call
inc
push
inc
pushl
jmp
jns
jns
scas
xchg
sbb
jnp
cmp
call
inc
jmp
jmp
call
mov
pop
cmp
and
xchg
and
dec
jnp
and
test
cmp
imul
decl
outsb
incl
js
xchg
lods
sbb
cmc
cmp
popa
jmp
cmp
negb
sub
jmp
jmp
and
in
mov
rorb
inc
decl
add
pushl
stc
pop
sar
sub
or
aad
enter
jmp
das
mov
add
jmp
add
add
negl
or
jmp
jo
fwait
aad
cmp
add
movsl
ljmp
loope
je
setne
ret
ljmp
ja
and
ja
call
or
push
fisubl
jmp
ljmp
jecxz
pop
fstl
mov
sub
jns
inc
decl
pushl
call
ljmp
sbb
adc
insb
cmp
mov
pop
cmp
incb
pop
call
or
jmp
push
hlt
xchg
inc
std
inc
call
int
insl
cmpsl
call
xor
std
push
pop
jmp
add
int
inc
add
call
jmp
mov
repnz
mov
mov
lcall
push
hlt
mov
jmp
xor
call
xor
fbstp
inc
call
adc
adc
add
mov
mov
pushl
repz
push
xor
jmp
xchg
add
xchg
add
mov
mov
push
ret
add
mov
iret
pop
out
jmp
sbb
jp
dec
pop
xchg
out
out
push
jmp
in
push
pop
ficomps
fcom
push
jno
sub
pushf
out
out
jne
jge
sti
test
icebp
mov
fcmovb
ljmp
add
ljmp
aaa
cwtl
test
mov
add
dec
mov
mov
add
call
push
test
inc
incl
mov
add
push
ret
add
add
sub
movsl
decl
fs
ds
inc
fstl
fucom
ljmp
mov
mov
push
ret
incl
add
sub
idivl
out
adc
test
dec
and
pushl
jle
stc
sub
ljmp
pop
jb
inc
jmp
jmp
pop
mov
dec
mov
mov
sub
cmp
adc
ljmp
xchg
test
push
xor
aas
inc
dec
lahf
jmp
pop
cmp
jno
divb
ss
gs
ret
pushl
js
ljmp
nop
mov
dec
insb
lods
dec
mov
mov
call
int
add
sbb
cmp
cmp
call
lods
cli
push
je
pop
add
add
ljmp
jmp
add
call
sbb
into
shll
sti
xchg
js
das
vpshuflw
clc
pop
xor
and
xor
mov
jmp
pop
incl
insl
rorl
push
inc
jmp
call
add
pushl
cmp
nop
ds
push
jmp
add
add
add
cmp
test
outsl
pop
cmpsb
dec
shl
or
jmp
out
lcall
lcall
lcall
xchg
xchg
xor
xor
scas
incl
xchg
sbb
incw
dec
xor
and
testl
nop
pop
decl
aam
ds
jg
decl
dec
mov
aas
enter
incl
mov
jo
push
add
push
ret
xchg
add
lcall
jmp
decl
mov
test
lcall
xchg
mov
lret
lock
cwtl
dec
jle
decl
push
sahf
xchg
sbb
ljmp
cmp
loopne
insb
add
jmp
incl
mov
incl
sbb
stos
fst
pop
hlt
mov
aaa
sar
sub
xchg
das
fisubrl
pop
jmp
add
jl
and
outsb
xchg
pushf
sbb
incl
jl
out
mov
pushf
lock
call
jg
decl
jg
mov
fstpt
lcall
mov
dec
xlat
push
test
scas
jl
dec
mov
jmp
repz
sbb
iret
cs
mov
dec
sub
mov
out
test
ds
std
pop
jmp
pop
das
pusha
pushl
incl
stc
movsb
jmp
imul
incl
jmp
decl
in
jge
push
jmp
add
in
and
sbb
jmp
insl
shll
pushl
rorb
decl
int
ss
and
mov
and
jne
pushl
lcall
adc
call
push
stc
enter
mov
xadd
mov
adc
add
push
cmp
ss
cld
fcmovnbe
mov
and
iret
popa
pushl
dec
movsl
jp
mov
test
mov
jg
cwtl
or
or
jmp
sar
cmc
cli
ficomps
push
mov
jae
test
incl
jp
sbb
pop
mov
outsb
incl
mov
cmp
shlb
dec
xor
mov
movsb
jmp
push
imul
push
push
popa
jmp
decl
mov
popa
pushl
sub
push
incl
xchg
add
add
cmpsb
inc
ljmp
jmp
add
push
add
add
aad
imul
jmp
test
insl
add
xchg
scas
cmp
incl
ret
loop
mov
test
jb
insl
xor
call
pop
fisubrl
inc
and
jmp
add
add
call
or
call
adc
pop
mov
cld
loop
sbb
sahf
cld
push
pushl
lcall
cmpsb
jp
mov
shrb
ja
ljmp
sbb
and
and
or
mov
pop
pop
dec
das
inc
decl
xchg
sub
sar
mov
lret
shlb
xchg
pop
fsub
jmp
insl
int3
ljmp
insb
add
jmp
add
mov
fdivr
incl
add
add
add
lea
mov
dec
clc
cmp
pop
xchg
icebp
ret
clc
cmp
xchg
mov
pop
xor
dec
dec
and
push
or
cmp
pushl
jecxz
xchg
fisttpl
xor
decl
inc
out
mov
sbb
mov
ljmp
xor
jmp
int
add
push
and
adc
in
xorps
inc
jmp
inc
decl
jmp
incl
dec
lods
adc
sbb
adc
cmp
jo
aas
pop
test
cmp
arpl
into
movsb
decl
jmp
cld
pop
jne
cmpsb
incl
call
lahf
rcl
cmpsb
jmp
jmp
clc
and
stos
and
push
sbb
xchg
call
cmp
std
mov
cmp
sub
lock
inc
ljmp
lcall
mov
jmp
add
or
adc
aaa
xor
incl
pushl
aam
pop
imul
xor
incl
sub
call
dec
mov
xor
xor
jbe
xchg
and
adc
enter
out
aam
xchg
in
xchg
icebp
loopne
scas
jo
mov
incl
mov
mov
clc
xor
negl
pop
push
cmpsb
jmp
out
out
xchg
push
or
pushl
adc
pusha
cmp
test
push
imul
push
mov
call
sub
sar
test
push
jne
cmp
iret
xor
mov
in
mov
pop
jmp
push
add
add
fldcw
mov
and
xor
test
ljmp
mov
push
add
shr
incl
add
add
cmpsb
jmp
pushl
dec
xlat
testb
push
daa
cmp
lahf
fs
jns
test
pop
pop
ljmp
mov
pushl
pushl
mov
mov
incl
add
add
adc
jmp
jnp
or
jns
into
add
push
cmpsl
decl
mov
push
inc
jmp
test
repz
jmp
add
imul
jmp
das
push
int
jmp
lcall
push
xchg
or
jle
incl
mov
nop
incl
add
test
add
test
jne
std
pop
inc
pushl
mov
or
push
mov
mov
repnz
pushl
xchg
mov
jmp
dec
mov
mov
cmp
popa
ljmp
in
leave
xor
pop
call
lods
sbb
in
dec
rep
out
mov
adc
stos
into
jmp
mov
scas
xchg
arpl
ljmp
mov
dec
idiv
incl
add
add
decl
jge
fmull
adc
mov
pop
insb
imul
decl
decl
std
rclb
inc
call
filds
call
jmp
ljmp
pop
int
pop
movsl
lcall
mov
addr16
std
inc
inc
mov
in
jo
add
lcall
jmp
call
ficoms
jne
pop
pop
inc
jmp
jmp
stos
jmp
add
add
and
aad
mov
inc
call
fld1
shlb
add
incl
cmp
lret
push
call
int
incl
add
add
movsb
lcall
push
cmpsb
dec
add
sub
imulb
daa
incl
xor
mov
decl
push
push
mov
callw
movsb
ljmp
push
in
mov
push
dec
idivl
popl
mov
or
jne
add
lcall
pop
jg
pushl
call
call
pop
jnp
call
mov
inc
jmp
decl
or
loope
inc
mov
out
cli
incl
xchg
int
jne
nop
cmp
mov
out
aam
pushl
adc
incl
in
call
insl
incl
cwtl
pop
inc
dec
xor
xchg
repnz
pushl
sahf
into
dec
jg
in
out
adc
fistl
add
jmp
push
jmp
push
add
stc
mov
loope
xor
lahf
dec
incl
sub
cmpsl
call
jmp
add
add
je
jmp
add
jmp
ljmp
decl
incl
add
add
mov
imul
sahf
ss
add
pop
push
xchg
add
or
js
pushf
call
mov
stos
or
lahf
lahf
mov
adc
push
inc
add
add
add
push
sahf
pop
stc
sub
call
loopne
sub
test
jnp
xor
out
inc
ljmp
std
paddusw
dec
scas
scas
cmp
pushl
adc
add
cmp
sti
cld
mov
lods
push
xchg
and
incb
jns
call
pusha
jns
add
int
add
insl
sbb
add
add
dec
add
lcall
sarl
inc
call
push
lcall
test
pop
jl
or
jmp
pushl
and
jne
mov
or
cmp
lcall
push
add
das
xchg
ret
pushl
and
jb
pop
jecxz
cmpsl
lcall
movsl
call
push
incl
mov
mov
lods
int3
jb
leave
shrl
cmp
dec
sbb
mov
das
dec
add
mov
scas
lcall
call
push
xchg
push
lcall
ljmp
sbb
decl
add
add
mov
mov
jbe
fistps
inc
jmp
push
cmpsl
call
push
mov
incl
push
incl
jmp
je
js
clc
lcall
xchg
push
sbb
inc
out
or
pushl
push
ret
xchg
add
lcall
and
scas
repz
out
cli
or
sbb
and
pop
mov
inc
add
add
add
ja
incl
idiv
mov
jmp
insl
add
xchg
and
ret
decl
xchg
push
jmp
ljmp
mov
push
lahf
sar
fadds
and
icebp
sub
call
mulb
mov
dec
xchg
std
sar
jp
mov
call
push
icebp
or
incl
push
dec
xlat
dec
or
sbb
fiaddl
fisttps
jg
in
push
rcr
push
mov
lcall
mov
lcall
decl
mov
je
clc
scas
incl
test
sub
jmp
jne
fdivp
divl
adc
push
filds
lcall
fists
lcall
add
push
dec
push
repnz
sbb
add
inc
mov
jmp
movsb
pushl
lret
jmp
pushl
adc
push
movsb
decl
sbb
incl
add
xchg
cmp
ljmp
push
repnz
ljmp
add
or
pusha
jmp
jmp
ljmp
sub
cld
add
ljmp
aad
in
inc
inc
ljmp
pushl
xor
dec
mov
jbe
dec
dec
clc
and
jp
incl
add
cli
sti
mov
mov
jmp
add
daa
pushl
pop
cmp
call
dec
repz
mov
mov
sbb
or
mov
jmp
decl
mov
incl
xchg
push
test
mov
push
mov
mov
je
imul
lcall
jmp
sar
call
test
or
sar
negl
pushl
and
fistpll
fdivl
mov
xor
decl
std
inc
cmp
ret
xor
sbb
sbb
incl
xchg
xchg
jg
pop
inc
lcall
jecxz
inc
clc
mov
in
insl
push
clc
call
add
cmp
or
xchg
int3
xor
lcall
inc
call
outsb
mov
icebp
sar
incl
add
mov
pusha
jmp
push
addr16
hlt
push
sahf
mov
call
add
popa
lcall
pop
pushl
lcall
dec
ss
sub
pushl
pusha
in
add
cmp
test
jb
or
js
call
dec
outsb
jmpw
shl
incl
push
pop
mov
decl
in
jns
loope
hlt
dec
fmul
decl
popa
ljmp
push
ret
add
add
aaa
ficompl
ljmp
imul
call
mov
pushl
pop
sbb
or
pushl
mov
ljmp
sub
in
pushl
fisubl
and
ror
shrb
stos
iret
push
jecxz
ljmp
lods
sub
mov
jmp
out
sbb
xchg
xlat
cmp
adc
inc
decl
cmp
dec
mov
or
ljmp
cmp
shll
dec
arpl
fmull
lods
xchg
xor
nop
sub
movsl
call
add
adc
pushw
xchg
icebp
fnstcw
decl
movsb
pushl
ss
lcall
push
mov
fwait
add
xlat
add
je
scas
jl
or
mov
scas
pop
ljmp
push
jmp
dec
dec
add
add
xor
jmp
jle
xor
push
sar
fbstp
incl
jns
jmp
jmp
add
mov
jmp
and
jmp
push
je
jmp
add
sar
mov
jmp
add
add
int
pusha
dec
cld
mov
fnstenv
pushl
jecxz
test
fimuls
xchg
push
sbb
pushl
ljmp
pushf
jbe
call
jns
jmp
jmp
mov
sub
sahf
and
inc
lcall
insl
and
fstl
add
pushl
sbb
aas
inc
lcall
mov
jl
call
cmpsl
lcall
incl
mov
inc
cmp
outsb
pop
loope
push
incl
pop
add
add
cli
clc
ret
out
and
inc
call
cmpl
jmp
push
add
dec
ja
jmp
sbb
incl
pushl
jmp
ljmp
lods
and
aas
cmp
jmp
jmp
fisubrl
test
hlt
pusha
jmp
sahf
sbb
scas
pop
adc
xchg
inc
lcall
or
cmp
lcall
sar
push
pop
mov
dec
push
mov
jmp
add
add
pop
or
loopne
imul
ret
inc
inc
jmp
jmp
jmp
inc
pushl
lcall
jo
inc
lcall
sub
lcall
lahf
add
pushl
frstor
sub
decl
ljmp
call
dec
dec
mov
incl
jo
lret
call
decl
xchg
pop
addr16
stc
dec
mov
mov
ljmp
aaa
inc
call
lods
mov
mov
sbb
inc
lcall
jmp
add
add
mov
jp
xchg
mov
add
ds
outsb
pop
lret
fisubs
nop
incb
call
cmp
fimuls
call
fcompl
lcall
ret
and
jecxz
imul
incl
incl
cmp
pop
lcall
imul
mov
push
push
pop
movsb
lcall
push
and
add
pushl
cmp
cmp
incl
ljmp
int
int
dec
sbb
jmp
fcoml
cmp
incl
decl
std
cmp
movsb
decl
test
in
dec
mov
call
inc
incl
dec
push
test
push
fldt
pushl
out
mov
push
sub
incl
mov
pushf
repnz
pop
sub
cwtl
mov
popa
pushl
pop
incl
inc
std
imul
mov
loop
sub
push
jmp
insl
add
add
in
dec
stc
pop
ljmp
dec
pop
xchg
std
sub
pushl
jl
xchg
lea
mov
dec
dec
std
popf
add
ds
aas
add
lcall
call
and
cmpsb
push
sub
decl
call
jo
push
jmp
add
jge
push
int
lcall
cmp
lods
mov
decl
jp
movsl
pushl
ljmp
fbstp
rorb
and
push
adc
scas
mov
fdivrs
lcall
fadds
scas
js
outsb
idiv
jnp
push
or
pop
icebp
cli
mov
lcall
push
aam
outsl
jb
mov
mov
sbb
test
ja
incl
icebp
pusha
lcall
inc
lcall
adc
mov
xchg
sub
add
mov
inc
add
lcall
jmp
dec
mov
test
mov
jnp
fiadds
ljmp
insb
outsl
scas
movsb
ljmp
in
push
add
in
dec
adc
sub
dec
dec
cwtl
mov
repz
incl
call
in
or
sub
fadd
dec
mov
int3
adc
jmp
jo
sub
lods
adc
call
mov
xchg
mov
popf
mov
lcall
or
loopne
xchg
mov
call
cwtl
loope
cmp
pushl
decl
dec
js
lcall
or
adc
das
fwait
scas
sub
lea
call
lahf
lods
fmull
cli
mov
lcall
call
dec
mov
add
das
sar
imul
scas
jo
aaa
jmp
push
enter
into
mov
pop
mov
ljmp
decl
dec
ficoms
push
cmpsb
lcall
inc
incl
xchg
adc
fwait
lret
js
jns
or
dec
adc
mov
test
xor
and
and
jmp
jmp
test
cmp
hlt
ljmp
out
xor
inc
incl
push
inc
incl
decl
lods
je
mov
and
mov
jae
jmp
pushl
sub
outsl
out
stos
push
enter
jl
or
push
in
pushf
and
negl
rcrl
xchg
cmp
sbb
xor
xchg
mov
mov
and
cmp
into
loopne
sub
or
dec
call
adc
ljmp
popa
cmp
decl
cmpsb
ljmp
add
jmp
jmpw
icebp
mov
sti
jnp
ret
pushl
or
ljmp
adc
popf
cmp
pushl
lcall
call
xchg
dec
fucom
cmp
jmp
and
mov
out
push
hlt
mov
mov
pop
incl
jmp
es
cld
pop
je
ds
mov
cld
lret
fs
mov
fists
cmp
add
nop
cmp
insb
xor
push
fdivrl
in
iret
push
mov
std
xchg
xor
fdivl
adc
xor
mov
lcall
incl
jno
decl
mov
incl
pop
adc
ljmp
mov
sarb
lods
gs
lcall
ljmp
lock
xchg
sub
push
pushl
lods
inc
dec
in
pop
adc
test
insb
mov
sti
ds
mov
mov
decw
test
or
cmp
pushf
mov
lcall
xor
jmp
into
lret
repnz
daa
lcall
mov
scas
pop
xlat
test
lcall
push
or
and
inc
pushl
ret
mov
adc
sub
js
dec
movsl
jge
fildll
test
clc
pushf
dec
je
mov
cld
loope
imul
inc
mov
jge
js
decl
jge
ljmp
add
decl
sbb
incl
inc
jmp
pushl
inc
lcall
cmp
jmp
jle
jmp
jmp
decl
jle
out
aad
sub
call
sub
clc
cltd
insb
xlat
and
sbb
xor
jo
add
jmp
inc
call
adc
push
pop
jmp
insb
inc
jmp
sbb
call
inc
aas
dec
add
lcall
shl
push
pushl
push
clc
test
mov
mov
mov
push
mov
pushl
std
and
mov
mov
dec
jg
mov
pop
and
or
cmp
add
jmp
sti
cmc
js
jl
mov
jle
cmp
decl
jmp
xor
cmp
decl
pop
scas
mov
cmp
ljmp
cmp
pushf
in
popa
push
pop
icebp
mov
call
push
cs
cmp
ljmp
hlt
sar
pop
pop
ret
popl
decl
mov
ss
out
ss
filds
js
and
jge
jp
cmpsl
cmp
or
or
add
and
and
mov
cmp
pop
xchg
imul
dec
inc
ljmp
dec
aaa
mov
dec
mov
lods
pop
mov
ljmp
jno
pusha
call
pop
and
stos
pop
push
and
mov
loopne
push
pop
mov
mov
lcall
stos
push
sbb
sbb
sub
jae
lcall
hlt
lods
or
pushl
mov
movsb
incl
bnd
pushl
jecxz
cmp
jmp
pop
sub
outsl
inc
decl
jmp
ljmp
scas
push
jl
push
or
jmp
dec
or
and
repz
jmp
adc
incl
jmp
or
push
ja
movsb
jmp
pop
mov
xor
jge
push
lcall
add
mov
mov
jns
cmc
add
incl
shlb
jmp
push
sub
sbb
ljmp
cmp
jmp
cmp
fdivl
and
inc
call
jmp
add
incl
insb
mov
pop
jmp
lcall
cwtl
incl
pop
test
insl
ret
pushl
sbb
inc
pushl
loopne
add
or
test
fs
fcoml
jmp
cmpsb
lcall
add
call
inc
decl
cmp
sbb
mov
push
mov
lea
popf
mov
dec
or
push
or
push
int
in
xchg
xor
ret
ljmp
in
push
jmp
push
test
pop
sahf
mov
pushl
jp
jbe
sbb
out
enter
jg
or
pushl
imul
stos
pop
nop
jnp
lcall
lcall
lcall
scas
mov
or
jbe
adc
or
xchg
testl
pop
dec
call
clc
pop
or
lcall
gs
decl
out
sti
int3
pushl
xchg
sar
lcall
xor
lret
fidivs
adc
fsts
xchg
decl
jne
pop
mov
add
pushl
movsl
cmp
lcall
sahf
repz
or
dec
jp
loop
dec
inc
inc
ds
mov
aaa
push
sub
in
mov
jmp
incl
or
pop
lea
jns
dec
repnz
pushl
fidivrl
add
jge
dec
dec
xor
push
pop
xchg
cli
push
xor
pushl
dec
mull
jmp
push
xor
loopne
filds
pop
into
call
mov
sbb
adc
dec
adc
cld
jmp
pop
adc
out
lcall
incl
cmp
call
add
lcall
sarl
xchg
imul
cmp
mov
pop
es
and
add
mov
and
jp
jmp
cmp
call
mov
sbb
add
cmp
pushl
fistl
lcall
insl
notl
or
jg
pop
lcall
jg
aam
call
int3
adc
sbb
jmp
sub
mov
mov
sub
lret
enter
decl
decl
dec
vmovaps
fwait
push
inc
lcall
ds
dec
aaa
add
test
sbb
jecxz
das
dec
mov
insl
xchg
test
popf
xchg
shl
jmp
and
adc
fdivl
mov
fstl
adc
add
decl
call
add
lcall
mov
mov
pop
cmpsb
out
add
mov
xchg
xchg
popa
lcall
cwtl
into
sbb
int
sub
jae
pushl
cmp
adc
push
xchg
dec
dec
dec
call
pop
lcall
mov
xor
test
ljmp
push
cmp
decl
lods
aaa
lcall
jno
int
stos
stc
pop
xchg
mov
and
inc
ljmp
insb
fwait
or
test
inc
mov
jle
mov
stc
push
push
aas
test
lock
sahf
ljmp
call
ret
pushl
cltd
push
pushl
aaa
jo
out
dec
jp
into
inc
ljmp
in
cmpsl
call
xchg
xchg
out
repnz
cmpsl
pushl
call
call
call
pushl
imul
popa
fbld
jno
xor
movsb
push
decw
rcl
xor
and
stos
xchg
pop
adc
lcall
push
lods
sub
adc
call
leave
push
addr16
fistl
dec
int3
sub
or
xchg
shrb
sbb
jb
mov
mov
inc
incl
pushl
ja
push
push
js
jbe
popl
std
jmp
inc
jns
int
arpl
push
in
pop
push
mov
pop
sti
out
pusha
incl
dec
imul
or
lcall
decl
popa
call
and
mov
xadd
cli
pop
incl
loop
jno
mov
iret
adc
sub
jmp
decl
sahf
stos
pop
out
inc
lcall
ljmp
fcomps
inc
incl
ljmp
and
cmp
lea
pop
mov
cs
xchg
add
shll
mov
xor
mov
fstpt
fs
out
dec
fstps
mov
in
add
lcall
xchg
adc
xor
incl
negl
clc
cmp
jmp
cld
dec
cs
insb
jp
call
std
jge
cmp
aas
fists
dec
arpl
pop
in
xchg
and
mov
fiadds
mov
adc
sbb
dec
ljmp
ljmp
lock
aad
in
jo
aas
mov
mov
add
decl
imul
inc
out
sub
xchg
mov
push
and
jb
pushl
js
and
call
js
mov
jo
call
roll
ljmp
or
mov
pushf
sbb
jmp
mov
add
imul
push
mov
jmp
call
ljmp
pushl
push
repnz
pop
stos
jmp
fwait
mov
mov
jmp
ljmp
or
in
sub
loopne
inc
lcall
jmp
test
stos
clc
cld
mov
decl
ljmp
stos
adc
lcall
and
xlat
inc
push
add
decl
sbb
cwtl
lret
mov
fdiv
repnz
jmp
incl
out
add
dec
mov
test
cmpsl
lcall
call
jmp
dec
ja
in
adc
mov
incl
pushl
pop
jp
out
fmull
push
push
sub
fucomp
iret
pop
pushw
and
repz
push
mov
pop
or
jno
jns
aaa
jg
lcall
movsb
incl
dec
fsubrs
push
mov
cmp
pushf
xchg
in
dec
cmc
sar
aas
xor
pushl
push
jne
pusha
ljmp
and
cmpsb
in
cmp
push
pop
dec
adc
or
call
ljmp
mov
inc
decl
lahf
aad
imul
test
sub
call
jmp
mov
popa
incl
lods
jnp
ret
pop
mov
pushl
test
decl
sar
sub
xor
jmp
push
adc
cmp
imul
jbe
decl
iret
pushf
mov
pop
jo
xchg
mov
mov
mov
mov
inc
stc
lods
pop
mov
cmp
call
jl
mov
jle
incl
incl
incl
lcall
dec
sti
jb
ss
cmp
pop
mov
ljmp
inc
lcall
arpl
mov
sbb
arpl
mov
in
dec
arpl
xchg
jbe
push
sbb
sub
dec
cmp
out
cmp
jbe
dec
cmp
ljmp
je
mov
outsb
insl
pushl
shl
pop
jle
xchg
pusha
ljmp
pop
add
lcall
dec
cmp
incl
in
ds
cmp
negl
add
mov
ljmp
fwait
arpl
sarl
cmp
cmp
mov
scas
adc
jbe
dec
jle
sub
ljmp
cmp
inc
incl
incl
mov
incl
mov
call
pop
dec
ret
jmp
jle
imul
or
jns
sbb
pushf
fistpl
fs
in
sub
cmp
mov
push
int
jbe
bnd
pushl
pushl
jmp
jbe
fistl
pop
jne
out
aam
xchg
ss
rcr
hlt
lahf
movsb
call
ret
ljmp
out
lret
pop
mov
cmc
fsubr
test
sub
push
cltd
sbb
pop
outsl
adc
and
jecxz
mov
pop
int3
jmp
and
mov
lahf
dec
fnstenv
xor
pop
push
mov
decl
mov
ljmp
call
jmp
fcomps
and
in
mov
sbb
cmc
push
xchg
arpl
jno
dec
jl
imul
cmpsl
jmp
sbb
adc
stc
pop
inc
ljmp
pop
jo
xchg
jb
jnp
sub
sub
in
add
pushl
out
cmp
mov
pushl
xchg
mov
movsl
lcall
xchg
xor
push
mov
add
call
xchg
cmpsl
jmp
incl
incl
mov
cmp
sbb
and
xchg
mov
arpl
sbb
mov
ljmp
cld
mov
lcall
sar
mov
sarb
mov
pop
popf
adc
shlb
out
leave
test
or
xchg
and
loope
adc
loopne
test
movsl
incl
incl
in
sbb
cmp
xchg
mov
inc
incl
out
push
pop
mov
cltd
std
out
or
push
jmp
incl
jnp
ljmp
call
lcall
sbb
pop
mov
xor
ljmp
pushl
mov
push
inc
dec
mov
cmp
inc
incl
sbb
push
ret
jmp
decl
or
popf
imul
lcall
insl
xchg
mov
decl
decl
repz
or
lcall
lcall
jmp
repnz
cwtl
repnz
pop
movsl
mov
in
jg
dec
or
push
cmp
clc
mov
pushl
mov
add
jb
js
sbb
add
ljmp
decl
push
rcrl
inc
lcall
pop
mov
mov
cld
clc
das
std
mov
mov
callw
psubb
adc
pop
adc
cmp
xlat
jnp
arpl
fildll
mov
xchg
into
repz
lcall
sub
cmp
cmpsl
jge
ljmp
frstor
ljmp
call
decl
sti
das
xchg
nop
sbb
mov
xlat
scas
in
test
mov
dec
popa
mov
push
pop
neg
pop
pop
pop
add
mov
sub
push
rcrl
inc
lcall
dec
cmp
lret
mov
dec
inc
inc
clc
aaa
and
mov
dec
fsubrs
push
mov
mov
je
mov
pop
or
leave
enter
sti
push
lret
in
mov
or
mov
enter
mov
loope
cmc
cmp
mov
sar
callw
inc
push
stc
outsb
dec
shrl
jae
jmp
fidivl
pop
in
popf
lret
movsb
decl
xor
cmp
inc
jmp
daa
mov
ljmp
jbe
push
jbe
and
cmp
popa
jmp
jns
aaa
mov
ss
lods
lret
dec
jnp
dec
jp
jg
aaa
push
pop
sbb
cmp
incl
xor
incl
sahf
arpl
testl
push
jo
leave
cmp
xor
sti
mov
xor
add
jns
ljmp
in
ljmp
dec
add
decl
push
jns
jp
fcomps
or
inc
pushl
in
xchg
psubusw
jp
mov
test
cmpsl
incl
lcall
jb
xchg
xchg
mov
mov
xlat
ds
test
mov
out
or
aam
call
pushl
test
decl
dec
jb
lcall
jmp
jmp
decl
ljmp
sub
in
or
xchg
stos
pushl
ljmp
divl
cwtl
push
dec
xchg
test
incl
pushl
add
lcall
lret
ljmp
mov
decl
push
xchg
test
xlat
testl
jmp
push
xor
sub
and
into
lods
cmp
pop
lods
jo
lcall
into
mov
incl
jmp
adc
leave
call
adc
sar
call
decl
movsb
jmp
sahf
and
fisubrl
lock
js
mov
clc
jp
in
mov
aad
pushl
pop
pop
aam
jmp
xchg
inc
incl
jecxz
jb
jle
cmp
mov
sbb
push
ljmp
pushf
pop
pop
xchg
push
out
shrl
mov
mov
arpl
daa
incl
incl
int
mov
incl
inc
ljmp
cmp
lcall
xchg
or
decl
xchg
mov
lcall
aaa
cld
xor
ss
stos
sti
out
xor
cmpsb
jmp
call
call
push
mov
or
lcall
mov
push
adc
scas
and
ljmp
aad
call
push
or
and
jb
call
jmp
mov
xchg
jmp
call
mov
incl
cmp
insl
dec
push
jmp
decl
mov
dec
pop
mov
ljmp
mov
and
in
rcr
pop
sarl
jmp
outsl
pushf
aas
xchg
fbld
aas
push
push
and
xor
daa
jle
inc
decl
ror
and
fistpll
xchg
scas
pop
push
pop
cmp
mov
cld
ja
incl
pushw
int3
mov
sbb
mov
fbld
test
adc
loope
xor
test
jne
jg
pushl
aam
incl
and
inc
jmp
jo
pop
lock
dec
jbe
dec
mov
je
sahf
in
mov
ljmp
pushl
jle
inc
jp
fucomp
adc
add
decl
pushf
hlt
out
pop
xchg
stos
cmp
lcall
xor
adc
adc
lcall
jae
pop
nop
ret
dec
rolb
adc
or
sub
test
mov
jbe
dec
inc
jmp
incl
mov
jmp
fsubrl
loope
pop
add
xor
jmp
icebp
enter
jns
mov
ljmp
jo
scas
sub
sarb
add
pushl
jmp
inc
decl
ds
cmp
ljmp
mov
loopne
cmp
xchg
cld
in
jns
xchg
pop
stos
insb
mov
mov
cmp
jo
sbb
mov
inc
jmp
fsubrs
aas
or
lahf
or
adc
dec
in
mov
decl
adc
decl
out
ljmp
ljmp
pop
and
or
xchg
pushl
push
pushf
enter
inc
jmp
jmp
lcall
sahf
jmp
incl
push
push
out
cltd
or
fnsave
nop
scas
pop
movsl
cmp
inc
decl
in
inc
call
rcll
pop
out
in
xor
incl
call
decl
data16
jg
jge
incl
dec
mov
call
sub
jmp
dec
dec
push
incl
call
inc
call
daa
jle
popa
ljmp
mov
add
in
push
incl
ljmp
mov
decl
push
lock
push
out
sbb
ja
fcmove
scas
hlt
adc
jno
decl
jmp
lcall
imul
clc
mov
cs
jmp
mov
call
sub
call
js
push
cmp
fidivrl
lcall
decl
push
enter
ljmp
ljmp
dec
aad
mov
pop
cmp
decl
jnp
ljmp
mov
push
out
cmp
mov
inc
ljmp
iret
fstpl
push
call
push
decl
loop
shr
or
xchg
sahf
aas
fcomp
push
jne
incl
call
sub
fldenv
lcall
fmuls
and
stos
filds
aaa
testl
xchg
stc
divb
or
jmp
mov
aad
pushl
scas
icebp
mov
loope
fcompl
jl
jmp
pushl
bnd
jecxz
loop
mov
and
in
jne
aad
call
mov
mov
pushl
fsts
decl
call
testb
jbe
jp
fcmovne
and
sbb
pop
cmp
sub
jmp
jle
push
xchg
test
pushl
out
jno
jmp
lea
mov
jnp
test
inc
decl
clc
fsts
clc
insl
aad
div
arpl
jb
xor
fisttps
outsl
push
add
mov
add
inc
pushl
call
fs
jg
and
inc
jmp
cmp
lcall
and
jnp
dec
stos
in
mov
jmp
ljmp
mov
mov
dec
mov
xlat
dec
mov
pusha
lcall
xchg
inc
incl
ljmp
out
mov
cmp
push
xchg
aaa
fiadds
enter
fdivrl
cmp
and
lcall
insb
sub
inc
jmp
aaa
mov
aas
mov
cmp
add
incl
inc
ljmp
inc
decl
repnz
push
and
inc
ljmp
mov
lcall
jle
decl
mov
jmp
jmp
ret
call
push
out
fmull
mov
incl
cmp
jmp
mov
mov
call
dec
repnz
mov
jmp
and
push
pop
cmpsl
lcall
xchg
pop
cmp
or
push
js
test
stos
js
test
call
dec
push
scas
xor
ljmpw
test
sub
decl
sbb
out
mov
fldcw
cs
inc
pushl
stos
push
sub
ret
jge
xchg
sahf
sbb
jge
test
imul
ljmp
mov
ljmp
sub
pushl
pop
decl
push
hlt
repnz
pop
cmp
lods
cltd
mov
pushl
jmp
and
and
fildl
decl
call
sti
out
ljmp
cmp
jne
lcall
sbb
decl
int
js
outsb
mov
jmp
popf
hlt
pop
sub
call
push
dec
pushl
jne
decl
mov
or
std
sub
and
test
mov
and
out
lahf
ja
inc
pushl
ljmp
ljmp
ret
lcall
lcall
pop
repz
mov
adc
mov
movsl
ljmp
icebp
cld
mov
mov
aad
mov
fs
push
dec
loop
mov
rcrb
fsubr
cmp
ljmp
mov
out
push
sti
cmp
jne
lcall
jbe
cmp
sub
pop
xor
mov
stos
out
in
decl
pop
in
xchg
add
incl
ljmp
call
pop
xor
mov
inc
ljmp
push
cli
mov
mov
cmp
cmp
mov
mov
adc
lret
or
fmul
in
push
je
mov
test
jmp
ret
call
int
pop
stos
mov
outsb
adc
sub
pop
inc
call
adc
xor
add
jmp
incl
cmpsl
cmp
aas
inc
incl
lcall
mov
das
cmp
cltd
in
int3
push
push
or
sub
mov
mov
push
aaa
jp
mov
jns
mov
out
ljmp
out
push
test
mov
decl
mov
popa
pushl
jmp
ror
jg
sar
lahf
fcomps
pop
sbb
clc
pop
xchg
loop
sbb
call
out
lret
dec
movsl
pushl
or
out
xchg
ss
jge
lcall
pop
imul
add
decl
jns
movsl
decl
jp
ljmp
cmp
xchg
push
xchg
sub
lcall
xchg
cmc
out
outsl
mov
aaa
lods
pop
pusha
jl
lods
add
ljmp
mov
decl
mov
fidivrl
je
mov
stos
insl
push
mov
iret
loope
sar
fwait
arpl
push
jle
jno
imul
push
xchg
mov
movsl
call
push
aam
sahf
cmp
or
jecxz
cmp
add
xor
jo
mov
ret
arpl
sbb
jb
push
dec
sbb
pushl
out
fimuls
loope
sbb
addr16
fdivp
adc
int3
jle
xor
and
mov
or
incl
rolb
call
in
mov
out
fwait
in
sub
lods
pop
mov
push
lahf
mov
cs
insb
and
mov
ljmp
inc
decl
mov
imul
cli
imul
imul
cs
dec
xchg
pusha
incl
lcall
insb
push
mov
stc
add
call
lcall
mov
sar
mov
dec
pop
movsl
jmp
lcall
mov
mov
ljmp
pushl
call
pushl
mov
mov
cmp
or
cmp
cmp
xor
cs
repz
out
jmp
xchg
jo
and
in
mov
sub
and
xor
mov
pushl
cmp
or
shlb
call
pop
lret
fwait
mov
inc
pushl
pop
gs
cmp
decl
lock
ss
mov
cs
roll
or
in
aad
test
outsl
arpl
out
mov
sbb
in
adc
adc
hlt
ja
inc
decl
cld
adc
pushf
ljmp
outsl
stos
stos
arpl
sti
jmp
mov
ret
xchg
mov
and
xor
sub
inc
aas
or
ljmp
movsl
jmp
call
in
popf
push
outsb
ja
aas
xchg
repz
rcl
sub
mov
movsl
mov
sbb
push
push
jmp
pushl
call
test
mov
jmp
inc
jmp
jno
mov
aad
xchg
cmp
pushl
call
jmp
cmp
int
std
mov
sub
pop
or
mov
call
push
and
test
jb
add
ljmp
rcll
xor
jle
data16
fidivs
aam
or
dec
flds
lcall
jno
ljmp
imul
incl
insb
mov
ror
xchg
nop
aam
fisttpl
cli
add
mov
mov
sub
pushl
mov
incl
std
repnz
decl
outsl
jp
call
pop
sub
sbb
pushl
call
add
decl
lods
out
xchg
frndint
push
xchg
outsb
cmp
mov
rorb
insl
aam
in
push
lcall
fdivrs
xchg
out
dec
mov
mov
adc
sbb
push
fcmovu
dec
mov
test
jp
or
adc
jmp
decl
das
xor
incl
lret
pop
cs
in
mov
jmp
pushl
and
ljmp
jb
push
roll
ud2
pop
xor
pushl
lret
mov
ret
int
push
jns
pushl
cli
pop
sti
mov
int
lcall
pushl
call
lcall
jmp
lcall
jo
ljmp
movsl
js
xchg
inc
call
xor
jmp
and
rorl
jmp
pop
sar
std
nop
dec
jg
dec
mov
icebp
test
pushl
and
leave
adc
xlat
sub
push
mov
call
pushl
cmp
decl
xor
sbb
imul
cs
lcall
scas
cltd
pop
mov
jmp
sbb
inc
incl
cmp
lahf
mov
int3
popf
ljmp
jmp
cmpsl
ljmp
adc
pop
dec
cmp
incl
or
dec
vandps
testl
xchg
cmp
dec
jns
mov
mov
enter
jmp
call
ror
or
or
decl
popa
call
sub
cwtl
adc
or
dec
ljmp
lock
decl
inc
pushl
dec
push
mov
adc
imul
addr16
ljmp
incl
push
push
mov
dec
xchg
sar
pushl
loop
fldcw
and
popf
movsb
flds
sub
dec
js
or
dec
add
inc
jmp
insb
ds
movsb
jnp
xchg
xchg
clc
lret
pushl
mov
test
sbb
sub
cmp
pushl
pushl
lock
mov
pushf
incl
cmp
imul
pop
in
mov
ljmp
dec
outsb
cmc
lea
lcall
push
mov
add
call
shr
xor
ljmp
decl
pop
fisubl
cltd
shll
repz
iret
shlb
sub
pushl
xor
mov
cld
mov
aaa
pushl
lods
adc
call
cmp
dec
rclb
xchg
aas
sbb
sar
push
rcrb
and
out
cli
jne
jmp
fidivl
mov
cli
xor
push
cs
jmp
lcall
jb
inc
jmp
cld
and
push
sbb
jle
jns
sub
sub
inc
jmp
sub
jmp
jl
pop
stos
add
dec
leave
jns
sub
decl
push
sar
inc
call
xlat
jns
cmp
cwtl
out
cld
xchg
in
mov
push
leave
dec
ljmp
jle
out
rcr
loope
into
and
setg
leave
jnp
push
and
xchg
cmp
pop
sbb
movsb
inc
ljmp
pop
incl
mov
adc
ret
mov
jmp
pusha
ljmp
pop
xchg
pop
jmp
ljmp
mov
pop
fwait
je
ljmp
dec
adc
ljmp
xor
aam
adc
mov
cmp
pusha
ljmp
push
cmp
decl
paddd
xchg
jo
mov
push
xor
call
push
clc
and
push
aaa
sarb
inc
call
call
push
mov
sub
aam
sbb
jns
adc
arpl
mov
jecxz
test
pop
and
cmpsb
pushl
mov
add
ljmp
negl
fisttpl
movsb
jmp
jmp
adc
jle
mov
ret
lcall
sub
cld
push
inc
inc
decl
mov
divb
call
xor
cli
fsubrp
in
inc
decl
cmp
lcall
pusha
decl
ja
and
icebp
popa
call
dec
hlt
xor
out
cmp
movsb
ljmp
ljmp
mov
xor
and
es
jmp
loopne
ja
xchg
movsl
decl
jmp
mov
imul
lea
fs
js
decl
cmp
dec
sub
decl
mov
push
pushl
lahf
test
lcall
xchg
mov
mov
ret
pushl
jmp
pop
icebp
adc
int3
out
pushf
cmp
pop
mov
or
dec
out
xchg
inc
call
fiaddl
pop
leave
cmp
sti
cmp
js
push
mov
inc
pushl
imul
jecxz
aam
pushf
mov
lret
fdiv
xchg
int3
sub
shlb
adc
mov
lock
sahf
lcall
mov
call
lock
incl
jmp
decl
in
fcmovu
test
clc
loope
pop
std
mov
ljmp
cmpsl
call
lea
add
ljmp
jle
jne
cmp
ljmp
ljmp
call
cmp
call
pushl
into
xor
jmp
insb
cltd
fadds
or
sbb
push
out
js
fs
in
sti
inc
call
loope
jecxz
shrl
fwait
jge
cmp
aam
cmp
lods
mov
jl
pushl
adc
decl
in
int3
lea
mov
enter
mov
jmp
mov
cwtl
jecxz
inc
jl
pushl
lcall
out
imul
int
decl
insb
scas
scas
xor
ret
mov
test
pop
dec
xlat
adc
incw
jae
dec
mov
mov
pushl
add
pop
add
into
stc
mov
push
dec
arpl
push
mov
push
sti
mov
push
pop
out
xchg
iret
inc
fxch
jge
sti
jecxz
jbe
dec
out
clc
in
push
test
pushl
loope
std
and
xor
dec
enter
inc
lcall
nop
mov
sbb
cltd
inc
ljmp
test
je
jbe
push
ret
ljmp
sar
sar
add
jmp
pushl
loopne
fnstsw
sahf
jge
dec
adc
push
jge
out
scas
ds
call
adc
decl
mov
sbb
jmp
jmp
jp
cmp
decl
dec
fldenv
jmp
fstpl
ds
push
aas
enter
jmp
jb
jmp
jmp
ret
lcall
pushf
dec
and
mov
push
call
cmp
lcall
out
mov
call
mov
pushf
cmp
call
sub
stc
out
mov
mov
lods
fnstcw
decl
call
mov
add
pushl
ret
inc
ljmp
inc
lcall
das
pop
inc
call
jns
outsb
inc
ljmp
stc
daa
incl
incb
jo
jmp
mov
adc
mov
ficomps
outsb
lcall
out
cmp
cwtl
and
out
dec
sub
inc
incl
decl
fmuls
cmpsl
fdivr
mov
outsl
lret
imul
and
jl
call
push
pushl
jbe
movsl
pushl
scas
stc
rclb
jae
in
cmpsl
jmp
cli
push
loope
cwtl
and
xlat
stos
int3
mov
stc
cmp
mov
dec
mov
mov
call
pusha
call
xor
cltd
lcall
arpl
mov
or
lock
sahf
stc
sbb
sbb
adc
loope
and
sub
sbb
ret
ljmp
push
adc
cmp
call
cmc
iret
push
lcall
mov
adc
sub
sub
call
dec
icebp
mov
xchg
add
jnp
pushf
adc
sub
cmpsb
call
pop
popa
ljmp
jnp
pushl
decl
or
jmp
push
loopne
pop
test
jl
dec
test
cmp
out
addr16
in
ljmp
cmp
sbb
mov
mov
in
inc
decl
sti
or
xchg
incl
mov
mov
iret
mov
lcall
ret
frstor
mov
pop
aam
ljmp
pop
or
inc
inc
faddp
dec
xchg
sbb
in
sbb
push
call
push
jmp
mov
clc
mov
jle
out
dec
push
or
jmp
add
aaa
or
push
inc
decl
decl
popf
lea
jns
jp
lock
cmp
and
lcall
push
inc
ljmp
cmp
fisubs
mov
das
sbb
into
cltd
sbb
mov
in
push
push
test
mov
pop
out
sbb
std
int3
push
test
das
xchg
push
mov
pop
lcall
mov
jl
jmp
shl
jmp
lcall
or
mov
ljmp
jbe
fucomi
push
sti
jge
movsl
cmp
dec
in
outsb
adc
mov
ljmp
jnp
lcall
adc
imul
fcmovnu
mov
push
jno
lcall
decl
stc
cmp
aam
cltd
xchg
in
aad
ret
repnz
jae
sbb
add
jle
lcall
pushf
mov
test
adc
push
xchg
jmp
incl
pusha
in
mov
je
jbe
xor
or
aas
ds
call
aad
lahf
mov
sarb
mov
add
push
dec
dec
in
jmp
ss
sbb
ficoml
mov
mov
jae
call
push
jmpw
call
js
jmp
adc
jo
xor
push
add
call
je
add
dec
movsb
lcall
dec
adc
mov
aaa
notb
mov
dec
daa
jns
test
decl
incl
incl
into
mov
mov
ljmp
pop
inc
call
dec
ljmp
jmp
dec
shrl
jmp
out
or
mov
sub
mov
inc
pushl
cmp
test
fs
mov
xchg
faddl
call
push
inc
pushl
fwait
dec
lcall
pushl
xor
sti
out
push
jne
inc
out
or
mov
aaa
in
jnp
icebp
xchg
and
enter
in
cmp
call
in
mov
or
adc
sti
or
test
xchg
mov
push
sbb
mov
jecxz
mov
cmp
addr16
fnstenv
daa
push
cmpsb
call
adc
lret
xchg
and
mov
call
leave
inc
ljmp
sbb
jg
sbb
sub
testb
jg
je
decb
lret
push
ljmp
push
imul
sub
cmp
stos
push
out
and
push
mov
lahf
notb
incl
shlb
cmp
out
mov
std
imul
push
ljmp
inc
lcall
mov
clc
test
lahf
cmp
dec
add
pushl
mov
into
js
jmp
decl
call
mov
inc
incl
pushl
jne
jmp
dec
cmp
hlt
dec
mov
loope
dec
jmp
fimuls
push
lods
fisubs
jo
cs
cmp
sahf
xor
mov
cmp
ljmp
mov
cwtl
fsub
inc
ljmp
cmp
insl
scas
and
mov
mov
jns
pop
aas
or
jno
out
cltd
mov
incl
decl
xchg
add
mov
out
nop
daa
jmp
dec
outsl
lea
iret
inc
mov
cmp
push
sbb
mov
pushl
adc
cmp
mov
sub
pop
jbe
lock
inc
dec
xor
incl
mov
or
incl
hlt
clc
repnz
jmp
cmp
ljmp
jp
leave
push
stc
aad
sub
mov
and
outsb
notb
mov
loop
lcall
xor
and
xor
decl
fld1
add
in
sbb
ljmp
leave
mov
mov
push
faddl
repz
cmp
pop
cmp
xchg
test
in
fdivs
jnp
popf
test
popf
pop
ljmp
sbb
ljmp
lock
fcomps
decl
jl
stc
push
add
incl
nop
shl
call
daa
dec
dec
dec
inc
out
or
push
push
call
push
fstps
inc
decl
jnp
pop
mov
jg
mov
incl
cmpsb
ljmp
jmp
push
int
mov
jmp
or
decl
sbb
call
decl
ss
dec
nop
sub
pusha
jmp
decl
leave
into
sar
push
dec
cmp
jmp
dec
fisubl
or
dec
sar
rcll
ret
lcall
push
jae
push
call
stos
sub
pushl
popf
dec
out
fwait
sbb
jmp
or
pop
fidivs
decl
ret
fldenv
jmp
fisttpll
mov
incl
incl
aaa
cmp
pop
xor
call
or
call
call
popf
inc
pushl
jmp
mov
adc
xchg
push
fiadds
dec
mov
incl
in
outsl
fidivrl
aad
sbb
jmp
incl
sbb
and
cli
lock
test
int
sti
rol
jmp
mov
std
inc
decl
cmp
stos
js
icebp
adc
jmp
int
jmp
loopne
sahf
pop
daa
jmp
pushl
repz
daa
decl
mov
xchg
jmp
lcall
int3
in
sbb
scas
cmp
or
incl
jne
arpl
jo
xlat
test
lods
lea
pop
inc
call
aas
push
fdivl
test
decl
lcall
call
xchg
or
push
incl
inc
call
and
jmp
jmp
jo
jl
xchg
add
pushl
push
shlb
xor
insl
divl
loop
movsb
decl
cld
fiadds
xchg
ja
sti
or
jmp
in
repnz
test
xchg
hlt
push
negb
ljmp
jno
shrb
inc
ljmp
inc
lcall
pushf
add
dec
dec
insb
sahf
vmaxsd
sbb
pop
jecxz
mov
ljmp
loop
stos
mov
clc
cmpsl
ljmp
cmp
mov
imul
icebp
pop
pop
sahf
mov
fisubs
ljmp
fmuls
jmp
mov
inc
jmp
lcall
cwtl
mov
out
mov
jp
into
xchg
in
cld
mov
dec
sbb
fidivrs
mov
test
loopne
inc
cmp
xor
into
jle
xlat
mov
add
call
int3
sub
lods
mov
call
hlt
add
jmp
loop
decl
sbb
jb
adc
jmp
jae
int3
outsl
or
call
mov
jmp
call
rorl
jge
insb
adc
insb
mov
leave
nop
adc
add
pushl
add
ja
loope
lods
in
mov
lret
repz
insb
notl
sbb
jg
popf
pop
dec
inc
pushl
aad
xor
jmp
sti
mov
cmp
push
inc
dec
rcrb
adc
push
dec
mov
out
dec
dec
sub
xor
xchg
sbb
or
cld
fwait
decb
in
inc
lcall
jmp
decl
idivl
xor
xor
cli
sbb
pop
dec
sub
mov
fsubs
notb
inc
jg
sti
sub
decl
adc
push
ret
sub
stc
fadd
lcall
inc
decl
cmp
scas
scas
and
imul
fstpt
jmp
div
pop
ret
decl
pushl
dec
xchg
scas
popf
mov
pop
icebp
rorb
scas
fimull
adc
inc
lcall
jl
dec
test
fists
and
hlt
cmp
decl
sar
lcall
dec
inc
pushl
xlat
adc
cmp
incl
dec
outsl
insl
jnp
call
sub
xchg
adc
xchg
lcall
pop
ljmp
push
pusha
incl
lcall
push
push
scas
jo
incl
jns
cmp
ljmp
fwait
mov
fcmovnu
or
lcall
lods
xor
push
cmp
leave
