jnp
in
dec
adc
mov
cmpsb
call
add
pushl
movsl
and
aaa
fwait
daa
ret
mov
cmp
sbb
and
mov
ficomps
add
add
add
cwtl
loope
xchg
inc
and
movsb
sub
jae
outsb
negl
mov
pusha
add
sbb
add
add
mov
mov
jl
add
inc
mov
add
jle
xor
mov
mov
hlt
call
aas
out
or
dec
fdivrp
jno
add
popa
les
call
pop
and
and
aam
imul
rolb
mov
and
int
test
call
mov
inc
ja
add
lods
into
sahf
outsl
repz
xchg
push
nop
add
loopne
mov
push
shll
fldenv
mov
pop
cmc
fcomps
jmp
jmp
int3
test
arpl
inc
pusha
add
stos
inc
dec
sub
xor
dec
xchg
add
cmpsl
sub
cwtl
data16
ret
cmp
add
mov
sub
add
data16
jmp
jle
add
aam
addr16
pop
sub
inc
hlt
test
add
mov
xchg
jae
add
add
add
loope
shrl
ss
rolb
cmpsl
scas
push
pop
ljmp
dec
cmpsb
cmpsb
iret
fldenv
inc
cmp
aam
mov
mov
mov
jno
cmp
dec
xor
lret
incb
loope
data16
mov
adc
mov
mov
xchg
add
and
mov
push
push
repnz
cmp
cmpsb
jnp
or
leave
sbb
add
inc
ljmp
jmp
adc
mov
incb
mov
xchg
fprem1
les
lret
or
popf
and
mov
loop
mov
outsb
inc
jne
cwtl
xor
mov
xor
mov
add
das
sbb
rolb
mov
add
xor
add
mov
cld
dec
cmc
cs
fwait
rolb
mov
add
lret
dec
push
add
out
pop
adc
mov
cmpsl
sub
and
mov
mov
cmp
mov
movsl
test
lret
test
mov
sbb
dec
xchg
sbb
jo
mov
jmp
aam
lods
test
cltd
cmp
xchg
bswap
xchg
or
ljmp
cmpsb
jno
xchg
cwtl
mov
fwait
or
sub
mov
add
inc
add
scas
inc
ret
inc
mov
in
sub
push
push
push
push
push
push
cld
call
add
es
movzbl
cmp
ss
push
push
call
mov
cmp
je
es
lea
cs
sub
mov
push
es
call
test
jne
jmp
leave
push
es
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
nop
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
xor
lea
aad
add
mov
mov
push
and
mov
jnp
pop
jmp
sti
or
fisubrl
pop
addb
inc
movsb
mov
dec
cmp
sbb
clc
movsb
dec
dec
jecxz
push
cmp
mov
adc
add
mov
dec
mov
xlat
push
daa
cmp
sbb
jo
mov
mov
jle
jbe
xchg
add
mov
mov
repz
lahf
out
sub
popf
inc
cmp
sub
add
inc
ret
rolb
mov
mov
mov
dec
mov
mov
xor
mov
add
les
xchg
xchg
pushf
nop
add
add
pop
cld
rolb
mov
mov
cld
mov
cltd
js
pop
fcmovnb
rolb
mov
mov
mul
pop
dec
push
js
pop
mov
call
mov
cmp
add
out
cwtl
in
push
push
bound
mov
xor
int3
mov
pop
mov
sub
add
mov
faddp
lods
lret
xor
imul
push
xchg
add
mov
cmp
add
sbb
insb
or
push
add
mov
and
add
dec
cltd
lret
maskmovq
notl
add
mov
mov
and
jns
add
in
fistl
mov
dec
sub
adc
pop
jbe
sub
or
aad
enter
lock
sub
jle
or
arpl
sbb
add
mov
sub
add
mov
mov
xor
mov
mov
repz
jno
jp
dec
sub
arpl
addb
into
cmp
add
test
mov
das
addr16
fsubrl
test
mov
mov
mov
mov
xchg
push
push
add
dec
jp
add
out
xlat
cld
lret
jmp
das
cmp
lcall
xor
jae
sbb
or
mov
add
cmp
out
fbstp
rolb
mov
scas
in
xchg
dec
jb
mov
scas
jbe
pushf
stos
es
jbe
and
mov
xor
push
imul
ret
mov
addb
xchg
jnp
std
mov
cmp
loop
mov
add
add
push
mov
add
add
mov
daa
xchg
filds
add
inc
out
popw
aam
push
pop
aaa
mov
mov
xchg
lcall
outsb
addl
mov
enter
pop
push
repnz
mov
add
xchg
or
inc
pusha
add
jb
mov
add
iret
or
dec
in
and
mov
add
pop
mov
mov
mov
add
add
mov
sbb
sbb
shll
lahf
test
or
mov
add
push
mov
mov
rolb
inc
shrl
xchg
iret
jno
push
adc
mov
cmp
add
push
add
das
or
pop
inc
add
sub
hlt
add
cli
call
movsb
pushf
mov
pop
icebp
imul
add
in
dec
leave
jle
mov
add
and
sti
jo
mov
mov
je
or
addb
add
mov
pop
xchg
addb
fnstenv
decl
mov
in
add
js
push
add
mov
aam
mov
iret
and
mov
add
mov
imul
pop
ljmp
cmc
jne
mov
repz
mov
add
scas
jl
mov
idivl
fsubrl
aas
loopne
mov
add
fwait
addb
push
add
pop
cmp
cmp
int3
test
mov
int3
jmp
sub
in
or
or
add
mov
add
mov
pushf
dec
sbb
add
and
jle
adc
mov
inc
add
cmc
cwtl
or
jmp
push
popf
lahf
pop
roll
add
cmovne
test
clc
mov
push
out
out
sarl
sub
add
lret
xor
jp
pop
pop
jle
loopne
mov
rolb
mov
add
idiv
xchg
xor
cltd
hlt
in
popl
push
in
stos
mov
add
addb
inc
lds
fimuls
add
std
push
into
in
mov
mov
mov
sub
pop
push
lahf
push
flds
cli
inc
fmuls
stc
cmpsl
lds
pop
jge
jge
sarl
sbb
fimull
cwtl
jb
mov
add
mov
add
xchg
jnp
add
or
add
pop
or
add
dec
lahf
pop
pop
int3
std
xor
mov
mov
add
mov
mov
stos
xchg
inc
add
add
ret
aad
cmp
sahf
dec
inc
add
adc
mov
xorl
add
mov
xchg
out
icebp
test
sbb
mov
add
movsl
js
mov
xchg
arpl
mov
mov
push
xchg
add
cli
pushf
xor
pusha
add
fdivr
icebp
sbb
add
mov
ficoms
popf
mov
mov
add
pushf
stc
push
testl
xor
fnstcw
jo
mov
xor
add
mov
inc
add
mov
mov
cmp
add
add
call
enter
mov
add
mov
cmpsl
les
mov
popa
test
mov
movsb
mov
loopne
mov
sub
add
mov
cmpsl
cmpsb
cltd
mov
jp
dec
stos
dec
mov
fcoml
add
mov
sbb
scas
jp
xor
mov
push
fwait
adc
or
dec
pop
outsb
adc
mov
loopne
mov
inc
ja
add
sbb
rolb
xchg
repnz
inc
xchg
add
add
mov
mov
mov
mov
arpl
lahf
cmc
jecxz
add
and
test
fisttpll
push
lahf
ror
and
add
and
mov
dec
mov
cli
imul
outsl
dec
rolb
divl
mov
mov
adc
mov
add
repnz
xchg
inc
das
or
scas
inc
rolb
mov
outsb
ret
ds
add
call
and
mov
movb
push
iret
add
mov
mov
mov
add
aaa
leave
movsb
add
mov
push
sbb
cltd
call
divb
in
cmp
or
add
insl
pop
nop
add
test
addr16
add
dec
ds
add
mov
lods
mov
mov
movsb
stc
rolb
and
add
add
cmp
add
pop
sbb
movsl
mov
lock
hlt
outsl
inc
jnp
cmp
imul
pusha
add
hlt
rolb
push
sti
jae
int3
and
loop
mov
int3
test
add
ficompl
lret
aam
lcall
add
mov
loope
pop
rcrl
dec
cmpsl
add
lcall
mov
icebp
leave
addb
aaa
or
int3
iret
mov
dec
add
mov
add
rolb
mov
add
add
lock
pop
mov
add
add
jnp
and
mov
nop
add
cwtl
icebp
xchg
test
inc
fldl
mov
add
rolb
jle
fwait
in
addb
ret
sbb
fs
popa
lock
sbb
pop
or
ja
aas
pop
jecxz
push
leave
sub
ja
jbe
sub
leave
mov
add
dec
push
cmpsb
cmpsb
fdivl
or
js
adc
mov
cmpsl
cmp
cmpsb
xor
mov
loope
fwait
subps
pushf
lock
jle
les
mov
movsb
popf
rolb
mov
jmp
mov
sub
xor
mov
adc
mov
add
mov
mov
call
aas
out
mov
fldl2e
pop
les
mov
cs
mov
jnp
je
fwait
cmpsb
sbb
add
ljmp
popa
hlt
dec
sbb
add
adc
cmpsb
hlt
cmp
mov
mov
jo
mov
push
mov
jmp
in
out
lcall
pop
mov
nop
add
sbb
mov
std
popf
fimull
movsb
aad
mov
lret
fimuls
add
push
mov
pop
call
or
pop
icebp
jb
mov
mov
std
mov
das
mov
imul
mov
xchg
sbbl
add
iret
cmp
mov
rcrl
xchg
in
adc
add
rolb
mov
cmc
dec
dec
hlt
push
aaa
xchg
cmp
test
insb
sub
shll
mov
adc
mov
loope
loop
mov
outsl
iret
inc
mov
mov
mov
in
push
orl
cltd
and
out
ss
mov
mov
fisubrl
sbb
notl
add
jae
add
mov
jb
mov
sti
push
add
add
test
lock
out
xlat
enter
add
add
sbb
int3
adc
mov
inc
sbb
stc
clc
push
dec
push
insl
insl
sti
or
inc
adc
fcmove
and
mov
mov
psrlq
fdiv
fucom
add
mov
xchg
les
movsb
arpl
rcrl
mov
and
add
sbb
jmp
and
mov
sbb
add
push
mov
mov
mov
pop
jg
jge
push
xchg
add
or
sub
sbb
out
loop
mov
mov
cmp
mov
addb
xlat
gs
movsl
test
push
sti
adc
mov
mov
and
dec
aam
sub
jo
mov
pop
sti
pop
push
add
mov
cmpsb
es
js
jmp
adc
mov
aad
jmp
int3
push
xor
mov
xchg
add
mov
lret
sti
int
add
jmp
stc
pusha
add
pop
adc
push
push
add
add
adc
jl
push
add
add
add
pop
rolb
push
mov
push
add
mov
add
push
xchg
jle
ss
es
rolb
mov
pop
mov
inc
jecxz
xor
pop
dec
add
mov
jns
aam
xor
mov
lcall
sbb
xor
mov
scas
sbb
mov
cwtl
or
mov
popa
lds
testb
test
fstpt
add
adc
mov
nop
add
lods
imul
fiadds
pop
call
pushf
jnp
jbe
adc
div
push
and
mov
xor
push
jecxz
aad
mov
xor
movsl
addb
frstor
aam
test
add
add
mov
test
sub
mov
or
cmpsb
xchg
push
test
add
push
movsl
out
xchg
inc
mov
mov
dec
jo
mov
xor
mov
add
mov
add
mov
pop
jmp
bound
mov
lahf
lret
scas
into
mov
cld
mov
push
outsb
inc
mov
add
jo
mov
jl
jp
adc
mov
jnp
stos
cmp
push
mov
add
sbb
test
in
sub
push
and
fidivl
mov
xlat
mov
add
repz
mov
add
popl
fcomps
and
mov
add
cmp
add
ret
iret
or
inc
pop
scas
fistps
adc
dec
push
jne
ljmp
rolb
mov
int
int
jae
and
add
pusha
add
repnz
add
mov
add
mov
add
lods
aaa
cmp
or
mov
test
jns
add
aad
cli
xor
pop
push
push
push
xor
sbb
wbinvd
sub
xchg
dec
xorl
cmpsl
mov
jb
mov
sub
mov
sub
sbb
add
gs
aas
jl
insb
loop
mov
addb
fcomi
add
add
jae
addb
neg
leave
jno
out
cmp
xchg
test
add
mov
push
test
add
shrl
mov
fs
aam
mov
mov
enter
movsb
mov
test
add
add
mov
add
mov
add
add
pushl
add
pop
scas
adcl
repz
or
pop
sub
pop
inc
lcall
fisubrl
shrl
ret
js
hlt
test
inc
xchg
pushf
pop
push
arpl
dec
lock
mov
mov
sbb
scas
inc
sub
je
add
mov
cmp
pop
mov
or
popa
mov
psubsw
add
inc
imul
mov
adc
add
cwtl
test
adc
pop
cmpsl
xchg
xor
mov
pop
mov
movsb
ret
stc
push
xlat
repnz
inc
lds
js
ror
pop
xor
mov
inc
adc
adc
jl
inc
add
mov
sub
pop
scas
ffreep
cli
push
jl
pop
or
cli
push
mov
loopne
mov
out
lods
mov
mov
sub
add
jns
test
pop
nop
add
pop
fwait
pop
pop
sub
out
es
mov
int
imul
mov
add
je
ja
fs
dec
mov
mov
insb
ds
fs
xchg
addr16
adc
mov
test
mov
insb
mov
rolb
mov
sbb
jae
add
add
addb
orl
mov
push
aam
cmp
add
mov
sahf
sti
lods
add
mov
pop
push
pop
jg
push
xchg
sbb
inc
out
negl
add
inc
dec
jns
cmpsb
dec
xor
out
insb
rolb
mov
add
add
cbtw
dec
sbb
int3
jae
mov
dec
psubq
mov
mov
mul
pop
addb
sbb
test
lods
adc
mov
mov
mov
add
jne
xchg
jecxz
pop
pusha
add
mov
clc
cmpsl
mov
fcompl
cld
nop
add
mov
jmp
rcll
mov
dec
leave
add
loope
in
mov
lds
jecxz
hlt
xchg
js
add
sbbl
ja
jno
sbb
fninit
lock
sub
movsl
jo
mov
in
xchg
mov
add
aas
sub
fsubr
cli
ret
fdivrs
pop
jns
add
add
push
call
mov
mov
dec
lods
pop
mov
add
dec
shl
adc
adc
push
push
push
mov
mov
mov
lcall
mov
fisttps
lods
filds
mov
mov
jl
lea
push
add
clc
ss
fstps
or
loope
add
pushf
adc
mov
add
add
push
xor
mov
or
mov
sahf
je
fbstp
jns
inc
cmp
out
sub
mov
sbb
inc
pop
bound
mov
xbegin
andl
mov
call
pop
inc
dec
or
inc
mov
mov
fsts
ja
pop
inc
fldenv
aam
rol
pushf
sbb
mov
mov
mov
xchg
icebp
icebp
xor
mov
mov
mov
popa
loop
mov
mov
adc
pop
movsl
mov
mov
test
imul
in
mov
scas
mov
sbb
add
add
mov
sbb
cmp
adc
cmp
mov
mov
movaps
mov
and
mov
add
xor
mov
jp
sub
mov
add
rolb
mov
xchg
push
fidivl
sarl
jmp
inc
add
and
mov
jbe
outsl
inc
jg
add
add
sub
std
fwait
push
add
add
cmp
dec
push
and
int3
rorl
addb
xor
mov
and
mov
sub
es
loopne
mov
push
jnp
cmp
mov
xor
mov
push
add
push
aaa
jo
mov
push
lea
pop
mov
add
push
push
xchg
cmpl
sub
add
jb
mov
push
xchg
inc
test
or
icebp
push
pop
mov
add
andl
mov
aam
scas
repnz
lea
mov
cmpsb
loope
mov
mov
xchg
imul
add
mov
mov
pop
outsl
ret
das
cmc
push
add
add
scas
daa
ljmp
outsl
andl
add
out
mov
mov
sbb
pop
cmpsb
xchg
inc
inc
add
adc
mov
negl
sbb
mov
and
xor
mov
movsb
insl
sub
add
push
rolb
cmpsb
mov
add
inc
movsl
das
lods
sbb
jg
fstpt
nop
add
mov
adc
lea
aaa
scas
hlt
sbb
add
lods
adc
or
xchg
pop
pop
loop
mov
in
adc
pop
add
add
add
mov
mov
add
push
aas
popf
pop
and
mov
repnz
out
jae
sub
jo
mov
add
sub
in
lret
adc
lahf
dec
ss
in
sti
add
mov
xchg
dec
mov
mov
add
mov
mov
jae
xchg
scas
xchg
dec
add
mov
fisttps
mov
lcall
xor
jl
dec
add
iret
cmc
jge
jle
mov
add
add
dec
add
xchg
add
sti
adc
fdiv
nop
add
pop
lret
pop
mov
mov
bound
mov
xchg
or
push
jecxz
lock
mov
add
add
mov
mov
adc
mov
iret
adc
push
jae
sahf
mov
cltd
les
xchg
enter
add
fisubrs
jle
add
mov
mov
add
xchg
mov
ret
bound
mov
mov
imul
mov
lods
clc
sti
fwait
cmp
mov
mov
push
int3
inc
popf
sub
jg
test
jnp
push
imul
mov
pop
sub
lahf
or
mov
push
fs
rolb
mov
mov
jb
mov
push
mov
iret
testl
push
gs
leave
or
fisubrl
mov
xlat
icebp
jmp
mov
sub
sbb
bound
mov
fs
lds
inc
or
jns
or
xchg
and
mov
add
inc
dec
pop
add
add
pop
stc
sub
rolb
mov
pop
mov
pop
testb
xchg
add
sub
mov
or
pop
test
adc
mov
xchg
push
add
add
hlt
push
add
add
lret
lock
dec
rolb
mov
jne
and
mov
bound
mov
xchg
pushf
adc
mov
je
imul
jb
mov
out
push
clc
insb
sbb
in
add
js
xlat
mov
add
shrl
fwait
push
jp
pop
les
in
mov
mov
mulb
pop
pop
jg
enter
mov
cs
lcall
pop
dec
or
and
cmp
inc
movsb
cld
jmp
jb
mov
xor
add
aas
jg
pop
cwtl
add
mov
and
fnsave
pop
or
or
adc
pusha
add
mov
add
inc
dec
sub
jns
add
bound
mov
sub
into
call
mov
inc
or
add
sbbl
fmulp
or
mov
xchg
mov
jne
rolb
jb
mov
push
movsl
sti
xchg
add
pushf
xlat
aad
add
push
imul
enter
pop
pop
fmull
in
jge
rolb
mov
rcrl
mov
mov
stos
pop
inc
add
jo
mov
add
sahf
dec
mov
pop
jecxz
test
hlt
inc
xor
xlat
inc
fcoml
mov
mov
popf
push
jecxz
pop
stos
push
xchg
sbb
jb
mov
add
mov
add
add
add
test
add
add
ljmp
mov
addb
xlat
out
nop
add
adc
dec
fisttps
sbb
cmp
dec
test
adc
mov
outsb
inc
cld
and
mov
sbb
add
fsubl
jg
mov
fidivl
add
add
push
pushf
subl
add
add
xlat
lahf
or
add
aas
push
push
lahf
adc
fadds
rcll
push
mov
fwait
inc
push
enter
inc
add
mov
add
add
into
je
add
add
lret
jge
dec
pop
pop
mov
add
mov
jl
xchg
sub
aam
aas
add
jecxz
daa
js
mov
lahf
ja
sbb
enter
enter
add
mov
and
pop
fldcw
mov
jmp
add
jle
xor
stos
jge
inc
add
add
xchg
in
or
mov
scas
rolb
mov
mov
nop
add
add
jmp
or
add
xchg
add
add
mov
das
and
ljmp
into
jno
in
dec
lds
fdivrl
mov
or
aam
add
into
and
test
adc
adc
mov
pusha
add
add
add
add
fidivrs
rolb
mov
add
mov
mov
pop
sbb
aam
add
cmpsl
and
push
dec
inc
push
add
xor
mov
sbb
mov
mov
fildll
cmc
movsb
sahf
cltd
or
mov
inc
lods
and
mov
push
inc
xchg
std
xor
das
pop
loopne
mov
lods
negb
arpl
add
stos
insl
sub
mov
nop
add
add
std
adc
addb
fbstp
mov
sub
add
jnp
add
gs
mov
stos
xor
mov
mov
lahf
popa
in
and
mov
cmp
aad
sbb
jg
add
inc
addb
pusha
add
jecxz
fmull
pusha
add
mov
add
mov
aaa
jo
mov
lock
ret
stos
loope
in
fstl
mov
fstl
cwtl
out
jl
add
rolb
mov
and
jnp
cmp
popa
add
mov
xchg
add
or
jne
js
pop
push
cli
push
rolb
sbbl
mov
cmpsb
je
loope
push
add
add
add
add
and
mov
jg
loope
pop
pop
sub
add
add
mov
or
int3
mov
jb
mov
add
mov
mov
stos
popf
into
jmp
add
sar
mov
cmc
nop
add
mov
std
push
add
mov
xor
inc
add
mov
mov
xlat
faddl
add
mov
mov
mov
add
mov
mov
pop
pop
fcomip
add
outsb
pop
cmp
lock
mov
xchg
sbb
pop
sub
jb
mov
jnp
and
mov
jnp
popf
push
test
mov
xlat
test
add
div
sub
mov
jg
add
dec
cmc
loopne
mov
mov
mov
frstor
xor
lds
imul
add
mov
add
cld
addr16
sbb
fisttpl
fsubrs
jle
add
xchg
mov
mov
push
pop
xor
mov
dec
ficoms
mov
mov
and
cmc
or
cld
jmp
jle
jmp
sub
and
mov
daa
pop
or
fnstsw
add
sbb
inc
jbe
ficoms
in
in
aam
add
lcall
jle
lods
sbb
adc
mov
pop
mov
cltd
jae
push
jle
bound
mov
add
push
add
add
mov
sub
cltd
in
addr16
add
push
test
add
std
push
stos
popf
enter
lods
loopne
mov
insb
jecxz
push
mov
pop
sbb
js
or
mov
adc
movsl
sbb
test
decl
dec
mov
lods
outsl
and
add
scas
sbb
add
mov
rolb
mov
pop
gs
mov
cmp
fwait
xchg
dec
rolb
mov
push
adc
insb
test
iret
icebp
outsl
xor
out
adc
mov
pop
pop
pushf
adc
and
insb
add
dec
inc
aaa
pop
add
jmp
mov
mov
pop
imul
xchg
dec
lcall
push
xchg
push
inc
int3
movsb
cwtl
mov
mov
lea
stc
or
rolb
mov
bound
mov
add
dec
ds
push
adc
sbb
jb
mov
mov
out
cmp
test
roll
sbb
in
or
mov
mov
cmp
adc
mov
stos
mov
mov
mov
xchg
mov
add
jle
ja
sub
pop
lahf
stc
xor
mov
add
and
mov
int3
sub
xchg
filds
add
mov
ja
mov
and
mov
mov
lahf
sti
pop
leave
adc
mov
add
test
mov
cmp
ret
mov
sbb
add
or
mov
xor
popf
leave
out
pop
or
mov
adc
mov
jnp
repz
inc
test
mov
xor
mov
add
mov
and
xchg
popa
in
scas
sbb
mov
inc
add
mov
and
mov
mov
sub
into
ret
movsb
pop
sbb
adc
mov
add
add
aad
xor
add
outsb
jmp
fdivrl
aad
out
jnp
repnz
fisubs
jb
mov
inc
inc
mov
pushf
lret
and
mov
jmp
push
inc
stos
fidivl
cltd
movsb
mov
mov
mov
sbb
movsl
mov
outsb
add
mov
and
inc
pop
pop
pushf
pop
mov
stos
push
add
inc
add
in
mov
dec
aad
lahf
ja
dec
movsb
inc
sub
test
pusha
add
in
and
add
sub
jl
movsl
or
pop
mov
mov
jb
mov
cmpsb
xor
mov
test
imull
inc
xor
inc
sub
jb
mov
or
add
cmpsl
fsubp
negl
or
test
sub
add
mov
jmp
mov
dec
mov
or
lds
xchg
ret
in
addr16
incb
push
jne
ds
gs
inc
add
sti
cmpsb
jo
mov
xor
or
jmp
dec
mov
mov
insb
test
mov
sahf
mov
add
mov
out
pop
je
sub
add
outsb
scas
jle
call
test
jnp
cld
adc
mov
xor
adc
out
xor
push
pusha
add
mov
add
add
test
into
jle
add
pusha
add
lock
mov
or
fs
lea
cmp
or
test
mov
sbb
cmp
daa
stos
cld
cmc
inc
pop
mov
in
lea
mov
jg
dec
inc
add
aam
loope,pt
pop
cmp
into
add
mov
add
xchg
lods
push
inc
add
jno
inc
aaa
les
pop
mov
add
scas
shrl
pop
shl
mov
loopne
mov
adc
mov
mov
add
add
fucomi
jl
ja
cmpsb
jnp
pop
mov
jge
aaa
jnp
xlat
dec
ret
xchg
jmp
int
sti
rolb
mov
add
mov
mov
add
mov
mov
bound
mov
mov
scas
addb
stos
repnz
add
push
sub
add
fs
imul
mov
push
sti
add
mov
mov
xor
je
out
add
jbe
sub
xchg
imul
mov
mov
outsb
fisubrs
xor
mov
or
mov
mov
hlt
lods
aad
mov
cwtl
dec
push
xchg
jnp
je
andl
test
fdiv
pop
out
xchg
add
mov
adc
mov
add
xchg
test
push
rolb
mov
add
jp
jl
aas
inc
test
gs
ljmp
fsts
mov
ret
adc
pop
in
clc
jmp
add
or
ficoms
cli
ret
dec
pop
mov
sub
in
in
xor
add
or
movl
inc
fsubr
inc
add
add
enter
add
fisttpll
orps
or
jno
xor
add
and
mov
out
adc
mov
jecxz
inc
lret
adc
dec
jae
shll
sub
mov
mov
add
dec
mov
mov
jnp
repnz
inc
cmpsl
jmp
mov
in
cmp
mov
add
mov
cmp
loop
mov
adc
aas
xor
mov
add
or
mov
daa
outsl
subl
adc
mov
add
loope
pop
push
scas
stos
dec
call
add
sub
sbb
or
or
mov
dec
add
mov
insl
jno
subl
add
jg
adc
jp
out
push
dec
ss
jg
cwtl
mov
mov
iret
xor
cmp
adc
mov
mov
imul
nop
add
or
mov
lret
not
add
faddl
scas
scas
push
jl
push
add
sub
xlat
dec
scas
inc
ljmp
add
and
je
repz
jmp
sub
gs
ljmp
mov
clc
xor
mov
inc
add
mov
lahf
div
or
hlt
jcxz
ja
pop
sub
add
jno
push
add
gs
push
das
gs
dec
aam
sub
mov
fisttpl
int3
nop
add
outsb
cld
imul
jo
mov
daa
adc
push
ja
addb
ja
add
arpl
fwait
xchg
add
xor
sahf
mov
mov
add
add
sub
xor
mov
fdivr
sar
jg
jl
jb
mov
add
aad
movb
xchg
lods
add
or
sbb
ss
leave
xor
mov
mov
mov
dec
iret
arpl
pop
sub
mov
jo
mov
dec
adc
xchg
popf
loopne
mov
xor
mov
cli
add
lcall
iret
cmpsb
or
cmp
mov
xor
pop
dec
inc
add
mov
dec
inc
popa
scas
push
loop
mov
inc
rolb
jnp
sub
mov
stos
mov
xor
imul
and
cltd
pop
mov
mov
mov
xchg
mov
mov
fldl
cltd
jmp
mov
mov
out
adc
add
add
adc
mov
push
popa
add
sbb
sub
icebp
mov
jae
pop
push
out
sbb
mov
mov
aam
add
jle
xchg
jbe
addb
push
sbb
rep
in
aas
cli
test
push
es
mov
mov
mov
daa
lds
adc
iret
jb
mov
add
imul
add
mov
mov
adc
add
shr
xor
mov
add
mov
jae
jns
inc
arpl
mov
jg
mov
mov
mov
iret
mov
ret
mov
mov
lahf
add
mov
je
xchg
test
lock
cmp
sbb
and
fsubrs
addb
mov
jae
add
sbb
aad
mov
mov
cli
pop
ljmp
add
mov
std
push
mov
les
mov
push
add
inc
cmpsl
push
mov
jg
sub
imul
pop
das
popa
jge
cwtl
test
aas
xor
mov
xor
and
add
outsb
add
mov
mov
and
mov
dec
inc
fs
ds
or
add
scas
negl
inc
cmpsb
add
mov
in
and
inc
jmp
cli
aas
pop
xor
sub
insl
or
pop
ja
add
mov
add
aas
ret
xor
mov
sub
clc
cmp
push
pop
cmp
pop
ret
and
mov
xorl
mov
sbb
sub
add
add
mov
aad
add
jg
cmp
mov
and
or
lcall
bound
mov
movsl
cmp
mov
call
push
gs
addb
clc
cltd
adc
add
aaa
lret
test
pop
lods
test
les
add
js
push
add
cmpsl
int
mov
je
popf
je
pop
imulb
fwait
and
sub
mov
add
lret
subl
mov
push
add
push
and
insb
mov
mov
jge
pop
stos
jns
or
mov
jmp
mov
mov
mov
add
iret
xchg
push
ss
xchg
mov
mov
add
rcrl
add
mov
mov
pusha
add
xchg
add
addb
sti
adc
mov
fdivl
fmuls
bound
mov
cmp
add
shr
pop
xor
lret
adc
xchg
inc
add
in
gs
scas
mov
popa
add
inc
jecxz
sbb
mov
sbb
movl
xchg
lock
addb
les
cmc
dec
loop
mov
and
adc
mov
cmp
dec
mov
mov
xchg
inc
add
adc
mov
mov
xor
mov
inc
orl
mov
push
add
int3
push
xor
mov
dec
cmp
adc
xchg
aad
adc
hlt
mov
add
and
adcl
iret
and
add
test
fistpll
popl
mov
loopne
mov
mov
pop
push
xor
inc
insl
gs
add
bound
mov
inc
or
and
mov
sbb
inc
pop
or
pushf
cmc
std
mov
sbb
in
xchg
add
push
xchg
test
add
xchg
cmp
adc
add
add
mov
mov
add
push
loop
mov
pop
into
scas
sbb
out
adc
daa
negb
add
add
xor
mov
shll
pushf
pop
and
mov
pop
fsub
dec
push
add
fs
rolb
mov
mov
add
mov
or
mov
inc
add
mov
inc
lea
addl
add
add
or
test
scas
inc
out
dec
jnp
pop
inc
dec
std
popf
test
das
dec
xchg
jecxz
xchg
mov
add
daa
jge
add
mov
out
es
push
pop
jp
dec
xor
inc
frstor
inc
popf
pop
xor
xchg
cmpsl
sbb
mov
jmp
loopne
mov
inc
popf
jecxz
pop
push
int
mov
mov
fs
fisubrs
lcall
jmp
add
addb
stc
mov
pop
mov
mov
stos
pop
fwait
sahf
add
mov
jno
mov
insb
dec
mov
mov
fdivrl
dec
xchg
aad
test
add
pusha
add
or
mov
add
pop
and
mov
bound
mov
iret
xchg
xchg
mov
xchg
int3
cmc
jns
xor
mov
leave
jns
sub
adc
test
add
add
pop
mov
test
or
add
add
test
jb
mov
dec
sbb
mov
adc
mov
or
pop
inc
add
add
push
cmp
pop
or
test
mov
fsubs
int3
movsb
xchg
test
test
add
jl
cmc
daa
pop
lcall
dec
push
loope
cltd
fstpt
movsl
repnz
lret
inc
xchg
dec
jl
add
cmp
stc
in
sub
out
arpl
mov
cmp
call
insl
jecxz
xor
out
mov
cs
add
add
xchg
jne
cmp
pusha
add
add
add
mov
dec
push
jmp
mov
xor
std
and
mov
outsb
push
mov
mov
mov
push
or
push
mov
add
push
add
or
push
jae
lcall
loope
dec
lahf
addb
lods
clc
push
inc
hlt
out
mov
add
add
ret
call
mov
add
aam
add
push
lea
xchg
add
mov
pushf
mov
ds
sar
add
clc
fcomps
xchg
add
mov
add
mov
adc
stos
insb
int
push
ret
and
adc
mov
scas
stos
loopne
mov
mov
int
lods
iret
and
inc
adc
sbb
add
mov
mov
test
dec
aad
and
mov
inc
leave
out
dec
dec
das
aad
sub
imul
add
mov
lds
add
push
push
and
jnp
ss
rolb
mov
mov
pop
or
and
mov
add
divl
lahf
adc
fistpl
or
adc
mov
jne
sbb
cli
mov
icebp
stos
pop
and
add
xor
mov
pop
sub
and
jne
psubsb
xchg
loope
push
xchg
add
add
and
ss
jae
jge
xor
mov
mov
add
into
dec
addl
std
divb
mov
mov
sub
test
rorl
mov
add
add
xchg
add
test
mov
mov
add
icebp
mov
cmpsl
into
out
sbb
add
add
leave
jae
push
cmp
and
cli
mov
scas
xor
pop
cli
ret
sub
jg
push
mov
push
xchg
add
pop
lods
lock
dec
mov
xor
in
inc
add
mov
test
sbb
add
je
das
mov
sub
xchg
gs
mov
std
cmp
or
in
lock
inc
add
lods
pop
rolb
mov
and
mov
adc
add
add
add
xor
mov
cmpsl
mov
pushf
sbb
jns
jo
mov
push
add
mov
mov
add
cld
hlt
movsb
mov
mov
xor
mov
and
mov
subl
in
pop
sub
push
sub
mov
mov
addb
push
mov
daa
sub
fnsave
pop
xor
or
mov
pushf
sarl
sub
fdivrl
push
xchg
out
in
push
add
mov
pop
pop
mov
xchg
insl
jbe
mov
enter
xchg
add
inc
add
and
mov
lret
pop
pop
cmpsl
ds
stos
xchg
adc
and
jp
or
cmp
pop
adc
and
mov
outsl
pop
imul
add
loop
mov
adc
mov
mov
add
add
addb
adc
test
in
pop
xor
mov
or
movsb
aam
or
leave
enter
sub
jg
add
test
cmpsb
pop
data16
mov
add
add
sub
rolb
das
or
pop
lock
xchg
mov
mov
ret
dec
and
mov
fistpll
mov
aaa
insb
scas
pop
in
sahf
mov
push
icebp
int
test
aam
mov
push
jnp
insl
xor
mov
loop
mov
xchg
add
mov
adc
mov
int3
sub
mov
add
mov
add
lods
je
cmp
xor
mov
add
inc
xor
fildll
cwtl
out
in
fisttpll
lods
daa
cmc
addb
push
jge
faddl
add
xor
push
pusha
add
lea
add
mov
add
push
and
mov
or
xchg
inc
add
fisubl
sbb
lods
dec
pop
fsubp
jno
rcrl
add
jns
shll
dec
out
mov
bound
mov
int
xchg
jae
mov
mov
adc
adc
aad
orl
jl
jns
inc
and
mov
pushf
lock
imul
mov
push
and
dec
stos
mov
add
pop
insb
dec
or
out
sub
inc
sub
xor
add
les
adc
mov
mov
in
sub
add
jl
jl
fwait
lret
jnp
lea
cli
or
or
shll
mov
push
push
xchg
call
and
mov
xchg
movb
fs
add
dec
fs
jmp
loop
mov
mov
test
in
nop
add
call
in
add
add
or
lea
popf
or
inc
popf
and
add
dec
sbb
pop
mov
jae
sarl
cmp
aaa
pushf
mov
addb
xor
mov
push
pop
mov
mov
inc
mov
aas
sbb
test
stos
test
into
jge
add
adc
stos
xor
cmp
cmp
and
xor
jl
out
jmp
cmpsl
push
add
scas
lea
cmp
mov
lock
mov
and
test
inc
add
cmp
or
mov
mov
add
dec
pop
sbb
mov
addb
lcall
add
loope
dec
and
in
xor
or
lcall
sbb
lds
add
mov
xor
mov
lea
xor
add
mov
add
push
dec
int
pusha
add
add
mov
pop
jns
jne
test
in
out
sub
mov
add
mov
mov
xor
jg
push
jb
mov
mov
inc
sub
mov
mov
js
add
add
lods
cld
jecxz
pop
xor
lds
icebp
dec
mov
lahf
enter
inc
add
ds
pop
std
cmp
add
cwtl
and
mov
decb
jae
mov
pop
aam
xor
jnp
push
add
adc
and
mov
enter
test
push
lahf
cmpsb
loope
jg
and
mov
jecxz
inc
adc
mov
or
cmp
add
gs
mov
xor
mov
xchg
inc
out
mov
mov
xchg
push
sbb
ret
dec
sahf
push
aam
jbe
xchg
outsl
pop
xchg
sti
stos
xor
fsubs
add
mov
cmp
push
inc
rorl
push
fimull
add
push
sbb
dec
subl
pusha
add
out
out
cs
mov
sub
pop
jae
push
rolb
mov
bound
mov
inc
bound
mov
mov
and
pop
pop
in
sahf
sub
xor
mov
inc
imul
sbb
add
xchg
inc
add
int3
cli
cmpsl
negl
mov
call
rolb
mov
mov
mov
add
rolb
repz
lret
repz
xlat
test
mov
sub
mov
mov
fldt
mov
test
push
and
xor
ss
sbb
mov
dec
rolb
mov
rolb
mov
xor
test
pop
lret
or
add
mov
mov
inc
stc
xchg
add
mov
pop
ret
loop
mov
loopne
mov
cli
andl
add
gs
add
jae
in
mov
jnp
mov
mov
mov
fildll
ret
in
sub
insl
cmp
das
push
das
push
push
js
cmpsl
push
push
dec
cmp
out
and
shll
xchg
adcl
idivl
shll
stos
push
add
ficomps
add
mov
mov
jp
rolb
jecxz
pop
push
pop
or
inc
and
mov
xchg
in
aas
fidivs
mov
mov
add
jo
mov
sub
mov
out
fnstenv
adc
cmp
dec
test
repnz
jno
scas
pushf
push
add
pop
hlt
mov
pop
jl
mov
test
xor
mov
inc
add
pop
pop
bswap
inc
jnp
mov
sbb
repz
clc
ficoml
call
std
push
add
loop
mov
or
mov
imul
sub
add
dec
push
add
add
sbb
ljmp
popa
test
jge
add
add
pop
push
add
mov
or
sub
add
mov
mov
push
ret
lods
mov
jnp
mov
mov
xchg
add
or
out
jg
adc
mov
add
addb
jno
jle
fcomip
mov
push
lcall
ja
inc
cmp
mov
xchg
sub
add
or
addl
mov
inc
add
ds
sti
cli
cmpsl
mov
mov
cwtl
xor
mov
add
ret
push
gs
fwait
dec
cmpsl
xchg
xchg
add
fs
mov
mov
mov
add
jp
inc
mov
mov
je
adc
pop
mov
add
mov
add
push
push
or
add
add
add
mov
inc
add
sub
push
add
dec
ljmp
int
incl
push
cmpsl
cmp
add
hlt
sbb
mov
jns
aam
shl
mov
add
pusha
add
ret
and
and
add
arpl
std
lods
xor
mov
cmp
add
std
dec
push
push
add
shl
sbb
pop
push
neg
dec
test
fildl
sbb
cmpsb
scas
mov
add
cmp
loop
mov
mov
push
add
js
clc
iret
jmp
add
jle
add
shll
add
mov
and
and
mov
aaa
aas
mov
push
into
in
aam
push
imul
aaa
jno
jbe
jg
sub
std
inc
and
roll
add
add
es
fcoml
mov
jge
out
sahf
mov
and
imul
add
pushf
add
add
sub
mov
jmp
jecxz
test
lods
js
int3
rolb
aam
addb
in
sbbl
add
imul
pop
popf
push
data16
xchg
std
cmp
adc
mov
aaa
nop
add
add
pop
add
gs
frstor
add
rolb
mov
rolb
mov
imul
add
mov
add
inc
add
mov
clc
mov
mov
rolb
mov
jbe
and
mov
in
stc
pop
mov
test
outsl
add
xor
add
mov
jge
add
mov
mov
add
and
js
sub
ret
pop
fcomp
inc
mov
and
insl
xchg
pop
scas
fwait
cmp
add
mov
out
push
rol
sbb
rcrl
adc
cmp
and
popl
add
add
shl
jae
nop
add
add
rolb
mov
mov
mov
add
mov
add
mov
jmp
xor
jns
adc
mov
add
inc
mov
or
xor
mov
jl
xor
popf
cmp
aad
add
cmp
and
jmp
int3
xchg
out
and
int3
or
in
loop
mov
mov
repnz
outsb
pop
shll
mov
and
adc
mov
popa
mov
add
mov
jne
cwtl
mov
mov
mov
add
aaa
jp
in
addb
mov
cmp
int3
dec
lahf
xchg
push
dec
push
cmpsb
bound
mov
repnz
or
inc
mov
push
add
outsl
daa
push
xor
xor
cs
mov
add
add
icebp
inc
add
ret
stos
adc
jle,pn
les
fistl
imul
enter
mov
xor
pop
jp
dec
add
mov
ds
xchg
popf
movsb
cwtl
inc
add
sbb
and
mov
dec
add
mov
mov
mov
into
mov
add
cli
pop
xchg
iret
fstps
ljmp
mov
je
adc
mov
ficompl
mov
fildl
imul
mov
es
sub
sti
cmp
sahf
pop
pop
push
pusha
add
les
iret
addb
sub
add
mov
xchg
inc
add
add
add
add
xchg
je,pn
leave
out
inc
or
add
aaa
fmul
mov
add
add
imul
sub
jg
outsb
outsl
sbb
jne
movl
sub
cmp
test
jge
add
out
pushl
je
addr16
and
xchg
out
lds
fcoml
loope
je
add
addb
addb
out
mov
fwait
or
repnz
add
mov
sahf
hlt
popf
mov
fdivr
decl
sahf
xchg
mov
mov
outsl
cmp
divl
js
xchg
std
adc
inc
add
add
lock
cmpsl
adc
xor
sbb
jno
add
lock
xor
mov
loopne
mov
mov
xor
add
sub
xor
mov
iret
mov
ret
je
add
in
mov
dec
fdivr
adc
mov
add
add
cmp
stos
sub
clc
fisubs
and
add
ret
cmp
std
lahf
xchg
fsubp
leave
pop
lahf
addb
mov
mov
popf
push
sub
jno
add
xchg
insl
jl
daa
xchg
push
mov
add
test
fldt
mov
mov
pop
stos
rcll
pop
stos
hlt
mov
lcall
xor
mov
inc
xchg
add
add
gs
out
push
rcr
ja
jne
xchg
add
push
or
es
dec
push
add
mov
add
rcll
dec
sbb
cmpsl
rcll
pop
cmc
loop
mov
bound
mov
pop
mov
mov
mov
ja
imul
sub
dec
jg
pop
js
or
add
pop
adc
mov
addb
add
add
add
frstor
cmpsl
loope
leave
jo
ret
push
adc
xchg
push
add
mov
js
xchg
int3
sahf
sub
cmpsb
loopne
mov
inc
ret
sbb
loope
add
sub
xchg
jg
mov
into
std
sub
imul
dec
cmp
add
or
jbe
mov
sahf
push
add
push
pop
das
mov
js
or
insl
push
lods
xchg
xlat
andl
mov
fsubrs
lock
inc
jle
mov
cs
bound
mov
fisttpl
xor
mov
xor
mov
sub
rol
adc
mov
lods
jecxz
add
jno
add
mov
push
push
adc
xchg
xchg
adc
mov
jmp
dec
mov
jge
rolb
jle
mov
and
mov
sahf
pop
xor
add
mov
pop
sahf
mov
lcall
insb
and
mov
sub
lret
add
mov
call
mov
jno
clc
les
or
adc
mov
and
mov
insb
jle
lcall
mov
and
test
add
pop
xchg
out
jns
jge
mov
add
mov
jle
gs
push
mov
add
mov
vmovq
sub
add
lds
rol
out
cmp
sahf
stc
cld
fildl
mov
hlt
mov
mov
add
std
or
test
sbb
cmc
jnp
jl
add
out
out
or
rolb
mov
out
into
out
xlat
and
cmp
pusha
add
adc
ffreep
add
mov
push
add
mov
mov
push
mov
sahf
lret
test
xor
mov
sahf
dec
inc
out
inc
mov
mov
into
imul
insb
jo
mov
sbb
gs
pop
das
daa
sti
xchg
mov
jbe
gs
mov
mov
addr16
fimuls
add
sbb
jns
sti
sub
int
les
andl
sbb
mov
fidivl
jg
addb
dec
xor
mov
add
fwait
sub
add
mov
add
clc
inc
add
stos
pop
push
mov
mov
xchg
pop
out
jne
add
rolb
lret
mov
lcall
or
lret
cltd
movsb
popf
mov
mov
cmp
xor
sbb
mov
mov
pop
inc
xchg
jecxz
sub
repnz
pop
lds
add
mov
fisttpll
ss
sub
xchg
ds
cwtl
mov
iret
das
dec
mov
add
push
aaa
jl
repz
add
mov
mov
dec
fisubrl
rorl
fldl
push
cmpsb
inc
int3
hlt
lods
lock
aas
or
lret
int3
adc
mov
clc
nop
add
mov
mov
pop
test
les
imull
mov
xor
mov
add
add
add
rcrl
or
mov
repz
push
mov
das
dec
dec
jle
add
bound
mov
fstps
test
add
dec
lds
cmp
add
fcmove
cmp
mov
ja
inc
loopne
mov
jl
add
jb
mov
and
mov
mov
dec
add
jg
mov
mov
outsl
and
mov
add
out
arpl
sbb
jge
mov
dec
inc
add
mov
push
adc
enter
adc
pop
out
mov
cltd
lds
mov
lcall
mov
mov
mov
lock
repz
dec
cltd
les
cs
mov
pop
into
stos
outsb
pop
and
mov
add
jne
cmpsl
or
fstl
or
push
add
pushf
test
movl
mov
std
sbb
xor
xlat
test
add
mov
add
pop
and
add
fists
mov
addb
addb
push
add
inc
mov
pop
rol
add
stos
movsb
jno
add
xchg
push
movsb
fimuls
out
mov
and
sti
into
dec
fwait
mov
mov
mov
add
mov
mov
jns
fidivrl
scas
ret
push
add
pop
aaa
arpl
cs
add
inc
scas
es
mov
mov
fisubs
mov
icebp
xchg
lds
add
pop
test
dec
mov
mov
mov
sbb
jns
adc
and
mov
out
or
gs
add
mov
add
cld
add
mov
out
imul
cmp
sbb
pop
nop
add
shll
and
adc
fstpt
add
mov
dec
cld
mov
fsub
push
inc
push
inc
push
mov
add
mov
addb
cld
rolb
mov
pop
lret
xor
mov
jge
sbb
add
das
pop
jle
mov
add
sub
fists
dec
out
test
stos
es
jno
add
mov
lret
orl
mov
push
and
cmpsl
push
add
add
lods
out
add
or
xorps
pushf
inc
or
inc
sbb
adc
mov
mov
sub
inc
movsl
data16
xor
mov
cmp
adc
shll
mov
add
les
add
mov
les
nop
add
add
add
mov
mov
mov
sub
inc
cmp
std
ljmp
test
and
mov
dec
test
and
in
cld
xlat
sahf
decb
add
mov
adc
repz
xor
mov
add
fsubrs
mov
mov
addb
add
pop
pushf
jmp
add
mov
iret
cmpsb
mov
mov
xor
mov
xlat
loopne
mov
aad
lds
and
mov
daa
icebp
and
push
je
xor
mov
add
stos
lea
fsubrs
sub
add
fmull
fucom
dec
add
jns
mov
hlt
push
xor
pop
out
and
mov
cs
xchg
dec
xchg
cld
int3
cmpl
push
sub
cmpsb
push
add
mov
inc
aas
pop
loopne
mov
rclw
xor
js
add
ljmp
stc
shll
xchg
and
loop
mov
jge
inc
lret
lahf
rolb
mov
dec
jne
out
xchg
xchg
addb
sbb
pop
jnp
mov
pop
sahf
iret
cltd
test
cld
das
enter
inc
nop
add
dec
add
mov
jne
pusha
add
add
mov
int3
call
jecxz
lds
mov
cltd
push
mov
mov
add
mov
adc
mov
mulb
mov
mov
mov
js
pop
sbb
add
pop
mov
loope
pop
loope
cmp
mov
push
add
lcall
mov
xchg
test
sbb
loop
mov
cmp
addb
and
mov
push
add
fcoml
add
jno
xchg
mov
out
mov
mov
add
lcall
push
mov
mov
mov
mov
lods
shll
lret
enter
insl
xchg
or
cld
jmp
mov
dec
in
bound
mov
test
mov
add
rolb
mov
sub
pop
mov
sub
add
loope
ror
es
add
mov
out
inc
mov
mov
lcall
fsubp
add
mov
mov
add
cmovg
mov
mov
xchg
mov
add
add
sub
add
scas
mov
loop
mov
cmp
insl
xor
mov
mov
neg
or
dec
clc
pusha
add
stc
jg
lods
insb
cmp
outsl
jge
ja
fimuls
mov
mov
addb
clc
mov
insl
insb
es
add
movsl
jl
dec
ja
rolb
mov
roll
in
add
lods
cli
push
addb
pop
mov
call
jo
mov
and
push
add
sahf
cmp
xchg
add
jnp
jmp
xlat
push
lods
sbb
loope
lahf
jmp
sbb
add
lret
sahf
imul
adc
addr16
add
mov
sbb
add
sbb
int3
lods
jecxz
jmp
inc
add
aas
cmp
add
into
sub
je
cmc
cs
xor
mov
xchg
das
in
imul
fwait
dec
icebp
in
inc
add
mov
int3
or
shrl
sahf
mov
cmp
mov
add
mov
mov
leave
and
mov
push
outsl
pxor
cmpsb
cli
daa
mov
jg
cltd
inc
cmp
mov
jno
fwait
cmpsl
repz
scas
adc
popa
push
xchg
int
out
imul
daa
stc
add
mov
addb
js
in
daa
in
sub
add
mov
mov
push
pop
push
add
mov
add
add
shrl
enter
mov
mov
mov
mov
xor
mov
out
pop
ljmp
mov
aam
xor
mov
add
icebp
mov
jnp
es
xor
mov
pop
jo
add
ret
mov
mov
pop
stos
mov
enter
das
mov
in
sbb
pushf
sar
mov
mov
dec
mov
push
add
push
add
mov
insb
pop
jmp
pop
test
idivb
sub
lods
ljmp
xchg
mov
pop
divb
mov
xor
mov
inc
add
mov
daa
stos
xchg
add
fcomps
hlt
mov
cmp
add
add
add
add
or
mov
push
lods
inc
push
out
pop
fwait
notb
jbe
add
mov
test
and
dec
mov
xchg
mov
push
add
dec
mov
imul
jmp
test
mov
add
insb
fists
cwtl
imul
xchg
add
mov
imul
mov
add
imul
push
push
sbb
loopne
mov
add
test
out
jl
jbe
add
or
fwait
or
add
mov
or
add
mov
mov
sbb
mov
cltd
lods
inc
xchg
mov
cmpsl
cli
pop
or
jbe
dec
sbb
add
test
sub
scas
cmp
add
add
and
mov
bound
mov
ficoms
cs
or
or
clc
jg
jle
sarl
stc
mov
jno
inc
add
mov
mov
add
nop
add
dec
mov
dec
sarl
rorl
lods
mov
jne
pop
test
push
lods
test
add
add
jnp
and
add
mov
into
enter
mov
jle
lea
lods
dec
lret
cmc
inc
xor
mov
sbb
pop
dec
mov
les
jmp
inc
add
divl
in
popa
arpl
lods
mov
push
and
mov
jns
jecxz
mov
mov
dec
movsb
sbb
or
add
mov
scas
pop
cvtps2pi
add
sbb
mul
add
xor
fs
xchg
ds
sti
mov
shll
data16
sub
mov
mov
mov
dec
in
sbb
addb
fadds
mov
outsb
icebp
cmp
gs
pop
stc
inc
add
mov
add
cmp
popl
les
xchg
adc
mov
xchg
hlt
inc
add
rolb
mov
mov
mov
mov
or
icebp
push
add
mov
movsb
int3
ljmp
mov
mov
clc
push
push
fcmovne
insb
out
xchg
notb
aaa
inc
cmp
rolb
mov
mov
adc
push
mov
mov
cld
mov
lret
loop
mov
xchg
add
add
and
pushf
test
aad
out
xorl
sbb
mov
mov
inc
sub
mov
push
rolb
cmpsl
and
add
sub
mov
and
mov
outsb
mov
add
sbb
add
xor
xchg
dec
mov
push
and
or
mov
fildl
mov
jmp
sub
pushf
jo
mov
pop
push
cmpsb
xchg
sub
out
xchg
push
int
mov
loope
add
or
mov
fwait
jno
and
sbb
mov
adc
fildl
leave
inc
add
clc
roll
add
add
jmp
adc
jge
and
jl
xchg
shll
outsb
sub
push
das
xchg
fcmovu
and
mov
xor
add
push
fistl
add
rolb
mov
add
roll
mov
ss
dec
or
jns
popf
fisubrs
mov
mov
in
fstpl
stc
inc
add
and
mov
inc
cli
xor
mov
out
inc
inc
cmpsl
sahf
push
adc
push
pop
test
add
jno
jno
movl
add
mov
stos
std
clc
sub
add
mov
add
iret
xchg
mov
mov
add
mov
add
pop
fwait
lret
mov
jge
jmp
add
ljmp
mov
fdivs
xor
gs
jnp
out
pop
adc
inc
dec
xchg
cmp
cld
jp
fbld
add
sub
lea
sbb
and
mov
add
add
add
je
pop
sub
add
mov
adc
mov
neg
scas
iret
mov
add
pop
ss
rolb
mov
movsb
mov
pop
xchg
fcmovbe
push
mov
mov
scas
xchg
add
add
rolb
mov
nop
add
call
and
xorl
pop
xchg
jbe
pop
xor
cli
loope
add
jno
xchg
rcr
pop
fucomp
movsl
pushf
sub
add
add
addr16
cmp
inc
int
ljmp
add
sub
add
js
mov
jo,pt
mov
xchg
test
or
mov
push
lret
fisubs
add
mov
jb,pt
mov
popf
outsb
sbb
test
push
lock
xchg
xchg
mov
push
adc
mov
mov
add
repz
repz
sbb
sbb
mov
add
mov
loop
mov
movsl
enter
dec
loope
xchg
sub
stc
and
into
and
loope
add
insl
out
add
mov
add
movsb
inc
add
add
cmp
cmp
adc
mov
fwait
push
sub
aam
incb
mov
test
dec
jbe
add
mov
cmp
mov
out
rolb
in
sbb
dec
and
mov
pop
inc
int3
xor
jg
and
mov
mov
xchg
or
mov
xlat
fldenv
push
add
lock
mov
inc
add
jmp
add
aaa
aam
loop
mov
add
push
loopne
mov
mov
fyl2x
cltd
lods
adc
sbb
add
add
mov
adc
mov
out
pop
out
add
or
dec
sbb
scas
push
push
fildll
xor
rolb
mov
xor
xchg
cmc
pushl
xor
dec
mov
add
jg
add
add
xor
and
add
jb
mov
add
icebp
sbb
rolb
mov
cli
xchg
dec
mov
fiadds
movsb
xchg
add
add
bound
mov
push
movsb
dec
inc
add
inc
add
test
add
add
sahf
mov
mov
or
cltd
in
pop
pop
out
mov
aam
add
mov
add
mov
gs
fcoml
js
mov
test
addb
pop
jns
xor
mov
cmpsl
jb
mov
mov
mov
xor
xchg
rolb
mov
dec
adc
mov
aaa
fs
mov
les
add
mov
mov
mov
rcrl
insl
adc
mov
sahf
int
sbb
sbb
mov
jl
movsl
pop
sub
add
inc
pop
pushf
sub
xor
and
mov
js
jle
daa
inc
adc
add
cld
pop
xor
mov
mov
mov
loop
mov
dec
fcompl
inc
test
jp
sti
sub
add
cmpsb
rcr
mov
pop
and
mov
and
sbb
in
test
movsl
pop
mov
mov
loope
ret
out
lahf
cli
add
mov
jg
adc
bound
mov
mov
and
sahf
jno,pt
pop
imul
mov
add
in
xchg
ss
fucomip
iret
icebp
clc
and
roll
mov
pop
fnstcw
add
add
adc
xor
mov
shl
add
repz
cmp
mov
and
sbb
sub
add
add
mov
daa
frndint
mov
sbb
jne
xchg
jnp
dec
mov
add
dec
jo
mov
cli
push
leave
arpl
fcomi
pop
pusha
add
in
add
pusha
add
std
rolb
sbb
add
xchg
cs
dec
test
add
pop
loopne
mov
or
mov
rolb
mov
insb
pop
sbb
add
jg
inc
add
mov
mov
add
mov
add
add
rorl
aam
aad
lea
mov
push
add
loope
jmp
jb
mov
pop
lcall
or
jp
sub
ja
mov
es
add
daa
ss
pop
loop
mov
mov
and
push
add
add
mov
xchg
je
add
mov
popa
add
mov
mov
add
cmp
sahf
and
and
jns
push
inc
jbe
xchg
xchg
add
sbb
mov
dec
pop
aad
jecxz
sti
dec
ja
popf
inc
pop
repz
neg
push
add
addr16
push
loope
inc
add
mov
or
popa
mulb
jp
jbe
lcall
add
dec
xlat
push
adc
mov
dec
mov
mov
out
repnz
add
add
push
sub
cmp
mov
rolb
mov
pop
xchg
adc
mov
inc
add
and
mov
inc
int
xchg
mov
data16
icebp
xor
mov
cmpl
push
lock
mov
inc
add
add
add
add
mov
aaa
mov
mov
push
lods
xor
jns
mov
push
xor
clc
lea
leave
push
stos
arpl
dec
mov
leave
cmp
cmp
out
rolb
fwait
jle
or
movsl
in
add
add
xchg
ja
lock
lea
daa
push
or
je
mov
hlt
push
xchg
fisubrl
outsl
mov
add
arpl
add
insb
dec
adc
mov
dec
flds
mov
mov
fs
rcr
inc
jg
add
mov
add
push
mov
adc
bound
mov
add
fldl
movl
push
sub
and
or
add
jg
pop
xchg
add
rcll
add
loop
mov
sbb
repnz
or
xchg
fs
ss
mov
mov
add
xchg
add
lock
add
mov
mov
xchg
mov
cltd
sbb
cmp
xor
mov
jle
add
in
daa
jmp
lds
sub
pop
mov
mov
popa
test
rolb
loope
into
cli
sub
mov
mov
pop
cld
pop
cld
fldt
in
sub
cmp
mov
xlat
test
add
insl
lds
add
std
call
inc
insb
ret
into
pop
push
dec
fs
jae
jl
rcr
mov
add
add
mov
mov
cmc
xchg
xor
addb
and
push
sub
mov
lcall
mov
ficomps
ljmp
jb
mov
add
mov
addb
addr16
cltd
mov
add
mov
xlat
ds
push
push
add
out
aaa
mov
enter
pop
stos
in
lahf
loop
mov
push
mov
cmc
icebp
int3
or
xor
jge
jmp
psrad
mov
ret
xlat
rolb
add
push
xor
or
je
xchg
pop
loopne
mov
inc
mov
jle
inc
and
mov
sbb
xchg
sub
jnp
xchg
inc
add
mov
lret
add
in
xlat
addb
popa
adc
iret
inc
roll
sub
pushf
mov
add
push
add
pushf
mov
mov
inc
mov
dec
xchg
push
and
add
mov
add
pop
scas
into
sbb
enter
cwtl
or
sbb
mov
cwtl
lcall
sbb
mov
add
push
imul
mov
add
adc
ds
or
in
sub
push
mov
mov
inc
add
inc
xchg
dec
movsl
lods
mov
and
mov
add
push
outsb
addr16
lds
dec
inc
jns
add
hlt
sub
jbe
sub
add
js
jae
fstpt
jge
test
add
mov
add
xlat
push
in
add
mov
or
jns
inc
aad
out
in
nop
add
cmp
push
add
mov
outsl
add
push
sub
lret
cmp
push
js
js
call
mov
notb
es
das
xor
sahf
movsb
dec
aaa
mov
add
mov
jns
and
cltd
push
jns
movsb
pop
jns
and
push
mov
mov
call
add
mov
sbb
push
jae
scas
bound
mov
test
mov
jnp
mov
sub
add
add
inc
inc
xchg
out
add
mov
mov
ret
push
add
popa
adc
mov
xchg
test
add
mov
add
mov
add
mov
enter
mov
add
das
push
or
in
pop
pop
sahf
pop
add
add
xor
popf
adc
mov
rolb
mov
add
sbb
shll
xor
popf
bound
mov
in
inc
movsl
inc
jle
mov
inc
push
ret
mov
fldcw
inc
movsl
out
inc
rolb
mov
mov
mov
mov
push
cmp
not
jns
dec
mov
lods
sub
cld
lcall
adc
add
add
movsb
push
mov
ret
test
add
xor
mov
jne
int3
sar
pavgb
mov
add
jo
mov
pushf
jle
or
lods
jecxz
add
bound
mov
mov
dec
xor
and
cmp
mov
inc
add
outsl
and
dec
ret
mov
mov
lods
mov
sub
lods
mov
add
add
pop
out
add
inc
add
dec
lds
add
and
mov
sub
mov
sub
cmc
imul
mov
mov
imul
add
rcl
add
mov
ret
ja
int
cmp
jge
add
xchg
stos
sbb
push
mov
lds
add
mov
rolb
inc
add
adc
or
ret
insl
jmp
inc
or
stos
jmp
add
xor
mov
inc
addb
shr
ss
popf
imul
mov
aas
enter
pusha
add
js
subl
dec
jge
mov
gs
inc
iret
pusha
add
add
jmp
loop
mov
mov
jp
popa
movsl
aaa
cmpl
add
addb
andl
std
stos
xchg
mov
sti
inc
add
inc
and
mov
add
push
or
mov
mov
add
xchg
push
and
mov
add
les
popa
inc
add
adc
jns
jb
mov
cmp
or
movb
popa
pop
icebp
push
xchg
das
dec
mov
dec
cmp
add
mov
inc
add
scas
stos
inc
add
dec
lock
outsb
cli
or
push
dec
mov
add
sub
popl
pop
out
mov
cmp
mov
mov
add
mov
mov
jmp
sbb
add
bound
mov
add
ss
sub
add
push
mov
nop
leave
jmp
add
push
clc
repnz
nop
cld
jae
add
xlat
xor
add
sbb
mov
push
push
mov
xchg
ret
add
inc
adc
xor
add
mov
push
push
mov
xchg
ret
pop
jecxz
add
cmp
nop
leave
jmp
add
ljmp
add
clc
repnz
nop
cld
jae
loope
add
add
mov
in
nop
leave
jmp
add
jbe
sbb
add
fwait
mov
clc
repnz
nop
cld
jae
cmpsb
cmp
add
adc
repnz
nop
cld
jae
cmp
add
add
repnz
nop
cld
jae
add
cmp
add
sub
test
add
push
mov
nop
leave
jmp
dec
cmpsb
mov
jbe
add
aas
movzwl
push
mov
nop
leave
jmp
enter
cmp
inc
jecxz
cmpl
push
mov
nop
leave
jmp
add
add
add
int3
add
push
mov
xchg
ret
or
mov
arpl
mov
xchg
ret
push
adc
add
add
clc
repnz
nop
cld
jae
cmp
add
call
clc
repnz
nop
cld
jae
add
add
shrl
repnz
nop
cld
jae
add
cmpsb
enter
pop
jmp
call
xor
in
pop
add
or
cmc
in
cmp
repnz
nop
cld
jae
pop
adc
add
cwtl
mov
pop
push
mov
xchg
ret
jecxz
adc
add
push
aad
in
cmpw
push
mov
nop
leave
jmp
ljmp
imul
subl
add
add
mov
mov
clc
repnz
nop
cld
jae
ljmp
jmp
mov
xchg
ret
in
or
dec
cmp
adc
popl
clc
repnz
nop
cld
jae
enter
add
add
push
mov
nop
leave
jmp
xor
add
jge
clc
repnz
nop
cld
jae
sub
xor
dec
shrl
hlt
inc
add
outsb
add
sub
add
in
scas
push
push
mov
nop
leave
jmp
add
cmp
add
xor
push
mov
xchg
ret
ljmp
mov
add
mov
xchg
ret
bound
add
lock
adc
in
nop
leave
jmp
add
adc
jecxz
enter
push
mov
nop
leave
jmp
and
jbe
bound
lods
mov
clc
repnz
nop
cld
jae
add
add
add
leave
clc
repnz
nop
cld
jae
add
sub
movsb
arpl
jae
push
push
mov
nop
leave
jmp
add
add
add
add
and
les
clc
repnz
nop
cld
jae
lret
lahf
add
add
out
mov
clc
repnz
nop
cld
jae
bound
add
cmpsb
xchg
insb
push
clc
repnz
nop
cld
jae
testb
add
add
add
add
jbe
add
add
in
mov
dec
mov
cmp
mov
repnz
nop
cld
jae
add
mov
sub
push
mov
xchg
ret
add
sub
frstor
arpl
mov
nop
leave
jmp
lret
add
add
es
arpl
mov
clc
repnz
nop
cld
jae
add
in
cmc
loope
add
clc
repnz
nop
cld
jae
add
add
cmp
je
clc
repnz
nop
cld
jae
sub
add
rclb
iret
inc
add
add
sbb
add
jbe
inc
add
add
xor
ljmp
or
repnz
nop
cld
jae
cmp
jbe
jge
cli
clc
repnz
nop
cld
jae
add
add
add
fidivrs
clc
repnz
nop
cld
jae
ljmp
pop
add
add
add
add
inc
add
inc
and
mov
sbb
sbb
nop
nop
cld
jae
bound
cli
cmc
add
in
cmp
mov
nop
leave
jmp
add
in
dec
push
sub
repz
repnz
nop
cld
jae
add
xor
mov
dec
dec
push
mov
nop
leave
jmp
cmc
sub
enter
test
mov
nop
leave
jmp
enter
movsl
inc
cmpsl
jae
sub
nop
cld
jae
aad
cmp
sub
cmp
dec
add
repnz
nop
cld
jae
mov
cmpsb
lods
sub
clc
repnz
nop
cld
jae
add
arpl
loopne
inc
add
push
sub
add
add
xor
inc
add
add
sub
xlat
addb
jnp
mull
repnz
nop
cld
jae
lret
lahf
sub
ja
fs
repnz
nop
cld
jae
enter
push
pop
shr
push
mov
xchg
ret
lea
add
add
lea
data16
add
lret
xor
add
push
mov
xchg
ret
add
aad
add
add
mov
imul
dec
push
clc
repnz
nop
cld
jae
sub
clc
enter
mov
xchg
ret
ljmp
cmp
xor
add
clc
repnz
nop
cld
jae
add
rolb
iret
and
push
mov
xchg
ret
mov
inc
in
cmp
push
clc
repnz
nop
cld
jae
lea
add
cmp
add
lret
lea
clc
repnz
nop
cld
jae
adc
cli
mov
push
mov
nop
leave
jmp
add
add
add
mov
xchg
ret
add
adc
add
add
jno
dec
push
mov
xchg
ret
dec
or
add
mov
add
push
jb,pn
test
daa
mov
and
mov
shr
clc
repnz
nop
cld
jae
add
add
add
pop
lea
clc
repnz
nop
cld
jae
cmp
mov
add
mov
mov
mov
pusha
clc
repnz
nop
cld
jae
mov
add
mov
add
repnz
nop
cld
jae
add
add
mov
movb
mov
outsl
cmp
dec
roll
adc
add
xor
add
clc
repnz
nop
cld
jae
adc
cmp
repnz
nop
cld
jae
or
add
sbb
nop
cld
jae
sbb
loope
add
add
and
push
mov
nop
leave
jmp
lea
add
enter
add
xor
add
push
mov
nop
leave
jmp
add
add
push
push
mov
nop
leave
jmp
add
aad
pop
scas
add
push
mov
nop
leave
jmp
cmp
mov
add
push
mov
xchg
ret
cmc
bound
clc
ljmp
repnz
nop
cld
jae
add
or
ljmp
push
mov
xchg
ret
inc
add
cmp
add
xor
clc
repnz
nop
cld
jae
cmp
add
gs
mov
clc
repnz
nop
cld
jae
lahf
add
add
add
nop
nop
cld
jae
dec
mov
sbb
gs
addr16
lahf
mov
clc
repnz
nop
cld
jae
add
lea
lods
cld
clc
repnz
nop
cld
jae
aad
xor
jae
add
mov
mov
clc
repnz
nop
cld
jae
or
add
clc
repnz
nop
cld
jae
jbe
add
mov
test
repnz
nop
cld
jae
add
gs
lret
sub
in
nop
leave
jmp
cmpsb
cmp
add
add
push
mov
xchg
ret
cmp
cli
sub
movsb
clc
repnz
nop
cld
jae
dec
add
outsb
mov
xor
push
add
clc
repnz
nop
cld
jae
sub
std
add
clc
repnz
nop
cld
jae
dec
add
or
add
clc
repnz
nop
cld
jae
add
add
add
lcall
mov
xchg
ret
add
add
bound
inc
add
mov
pushl
clc
repnz
nop
cld
jae
add
add
add
jns
clc
repnz
nop
cld
jae
add
add
mov
mov
push
mov
xchg
ret
cmp
daa
xor
push
mov
xchg
ret
add
cmp
sbb
mov
nop
leave
jmp
cmp
adc
add
push
mov
nop
leave
jmp
add
cmp
add
cli
add
clc
repnz
nop
cld
jae
cli
add
cmp
mov
nop
nop
cld
jae
add
xor
cmp
add
mov
xchg
ret
and
xor
add
xchg
add
in
add
std
add
test
testl
mov
je
clc
repnz
nop
cld
jae
add
bound
push
cmp
ret
xor
aad
add
mov
mov
push
mov
nop
leave
jmp
add
lahf
add
adc
cmp
mov
clc
repnz
nop
cld
jae
add
sti
push
mov
add
add
add
add
add
add
pop
clc
repnz
nop
cld
jae
add
cmc
add
adc
mov
sti
mov
push
mov
nop
leave
jmp
cmp
mov
inc
leave
pop
clc
repnz
nop
cld
jae
loope
add
inc
add
add
push
mov
nop
leave
jmp
mov
add
dec
enter
repnz
nop
cld
jae
into
lahf
add
into
add
cmp
mov
xchg
ret
sub
add
sub
jne
clc
repnz
nop
cld
jae
sub
add
lahf
add
repnz
nop
cld
jae
add
sub
scas
add
push
mov
nop
leave
jmp
mov
inc
add
mov
mov
mov
ficompl
repnz
nop
cld
jae
in
cmp
add
add
mov
xor
add
clc
repnz
nop
cld
jae
add
call
jae
repnz
nop
cld
jae
lahf
add
add
add
arpl
nop
cld
jae
add
add
add
add
pop
mov
clc
repnz
nop
cld
jae
add
add
test
clc
repnz
nop
cld
jae
add
add
add
lods
push
mov
xchg
ret
or
mov
add
push
inc
outsb
xchg
dec
je
clc
repnz
nop
cld
jae
sbb
add
add
push
mov
xchg
ret
add
jae
add
ja
push
mov
nop
leave
jmp
add
dec
add
push
push
mov
xchg
ret
mov
add
push
mov
xchg
ret
add
add
add
lahf
xor
mov
arpl
rep
clc
repnz
nop
cld
jae
add
add
add
xchg
add
mov
out
sub
push
mov
xchg
ret
ljmp
mov
mov
push
mov
xchg
ret
or
sub
loopne
mov
inc
add
clc
repnz
nop
cld
jae
or
add
add
cmp
or
inc
add
enter
cwtl
bound
nop
cld
jae
cwtl
into
add
add
push
dec
int3
mov
clc
repnz
nop
cld
jae
add
jbe
lret
outsb
cmp
repnz
nop
cld
jae
mov
xor
adc
clc
repnz
nop
cld
jae
add
add
add
add
in
nop
leave
jmp
add
add
repz
repnz
nop
cld
jae
enter
add
ljmp
repnz
nop
cld
jae
aad
or
add
and
add
push
mov
xchg
ret
cli
cmp
add
xlat
add
sub
add
jmp
push
lret
insb
adc
testl
bound
mov
add
push
mov
xchg
ret
inc
dec
mov
mov
xchg
rolb
mov
inc
add
cmp
jae
mov
nop
leave
jmp
dec
add
adc
mov
mov
push
push
mov
xchg
ret
push
add
add
add
cmp
pop
clc
repnz
nop
cld
jae
or
ljmp
push
push
mov
nop
leave
jmp
cwtl
inc
adc
add
dec
push
clc
repnz
nop
cld
jae
add
add
inc
jo
mov
dec
call
clc
repnz
nop
cld
jae
add
add
mov
enter
incl
jbe
push
inc
lret
mov
add
or
clc
sub
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
cmc
add
in
adc
add
in
nop
leave
jmp
mov
jecxz
add
adc
mov
xabort
nop
nop
cld
jae
loope
add
cmp
nop
nop
cld
jae
cmpsb
mov
add
dec
mov
clc
repnz
nop
cld
jae
add
add
mov
clc
repnz
nop
cld
jae
xor
add
pop
clc
repnz
nop
cld
jae
mov
add
sub
lea
inc
adc
clc
repnz
nop
cld
jae
into
xlat
add
inc
aad
mov
mov
nop
add
jne
clc
repnz
nop
cld
jae
add
pop
mov
clc
repnz
nop
cld
jae
or
sub
inc
push
mov
nop
leave
jmp
add
sub
add
cli
add
clc
repnz
nop
cld
jae
lahf
in
add
pop
mov
clc
repnz
nop
cld
jae
gs
testb
add
jmp
cmpsb
push
mov
xor
cmp
adc
mov
push
mov
nop
leave
jmp
dec
add
clc
add
and
jb
mov
test
repnz
nop
cld
jae
add
mov
mov
push
mov
nop
leave
jmp
or
dec
or
xor
push
mov
nop
leave
jmp
add
lahf
add
nop
nop
cld
jae
sub
add
add
add
add
clc
repnz
nop
cld
jae
add
adc
clc
repnz
nop
cld
jae
cwtl
add
jmp
clc
repnz
nop
cld
jae
add
sub
rolb
mov
nop
nop
cld
jae
add
aad
and
add
mov
xabort
nop
nop
cld
jae
add
inc
sbb
cmp
pop
push
push
mov
xchg
ret
mov
inc
add
add
mov
clc
repnz
nop
cld
jae
sub
dec
add
inc
add
mov
ljmp
movswl
clc
repnz
nop
cld
jae
add
ljmp
push
call
in
nop
leave
jmp
adc
cmp
push
push
push
mov
nop
leave
jmp
cmp
add
xlat
push
addb
gs
lea
mov
xchg
ret
dec
sub
push
add
xor
nop
nop
cld
jae
add
mov
add
clc
repnz
nop
cld
jae
add
adc
cmp
or
add
push
mov
nop
leave
jmp
add
add
add
mov
push
mov
xchg
ret
add
add
ljmp
mov
clc
repnz
nop
cld
jae
cmp
pop
sub
lods
mov
clc
repnz
nop
cld
jae
mov
add
add
add
mov
clc
repnz
nop
cld
jae
cmp
testb
mov
sub
inc
add
add
bound
add
loope
rep
clc
repnz
nop
cld
jae
cwtl
lahf
cmpsb
add
inc
add
clc
repnz
nop
cld
jae
add
outsb
add
push
mov
xchg
ret
or
lea
add
add
sub
clc
repnz
nop
cld
jae
mov
add
pop
mov
push
mov
nop
leave
jmp
add
add
adc
sub
div
clc
repnz
nop
cld
jae
aad
add
xor
mov
push
mov
nop
leave
jmp
push
outsb
cwtl
add
inc
and
push
mov
nop
leave
jmp
ljmp
mov
add
push
mov
xchg
ret
sub
add
add
push
pop
out
pop
push
mov
nop
leave
jmp
add
add
clc
repnz
nop
cld
jae
cmpsb
add
popa
push
mov
xchg
ret
and
add
cmc
test
dec
je
clc
repnz
nop
cld
jae
cmc
push
mov
clc
repnz
nop
cld
jae
add
add
mov
adc
mov
leave
jmp
add
add
mov
sti
sub
clc
repnz
nop
cld
jae
mov
test
add
clc
repnz
nop
cld
jae
cmp
add
pop
push
mov
xchg
ret
cmp
sbb
add
xlat
add
jno
ja
mov
clc
repnz
nop
cld
jae
cmp
lock
cmp
je
push
clc
repnz
nop
cld
jae
add
cmp
gs
xor
push
mov
nop
leave
jmp
add
mov
and
add
mov
xchg
ret
lret
mov
sbb
ljmp
fisttps
aaa
roll
xchg
ret
bound
add
lret
add
adc
out
mov
clc
repnz
nop
cld
jae
add
mov
mov
nop
leave
jmp
and
add
pop
add
repz
mov
xchg
ret
lret
dec
or
jbe
mov
ret
push
mov
xchg
ret
outsb
pop
add
cmp
repnz
nop
cld
jae
add
add
loope
dec
push
mov
nop
leave
jmp
add
add
lock
outsb
movzwl
clc
repnz
nop
cld
jae
add
inc
lock
jns
stos
push
mov
nop
leave
jmp
gs
aad
add
testb
call
jmp
add
add
gs
add
lea
repz
repnz
nop
cld
jae
cmp
lahf
cmp
add
push
inc
call
cld
jae
add
sub
xlat
add
jg
fs
clc
repnz
nop
cld
jae
inc
into
add
sub
in
nop
leave
jmp
lea
add
xor
add
clc
repnz
nop
cld
jae
cmp
loope
and
push
mov
mov
jecxz
jne
mov
push
mov
xchg
ret
xor
cmp
sub
lret
inc
add
add
sub
jmp
add
add
in
add
mov
add
mov
mov
clc
repnz
nop
cld
jae
add
add
sub
push
push
mov
nop
leave
jmp
or
outsb
add
add
cmp
push
mov
xchg
ret
add
add
or
in
nop
leave
jmp
jecxz
add
mov
add
inc
or
inc
out
add
add
adc
mov
in
nop
leave
jmp
clc
and
add
add
mov
inc
clc
clc
repnz
nop
cld
jae
inc
push
cmp
add
push
mov
xchg
ret
add
inc
mov
adc
dec
je
clc
repnz
nop
cld
jae
add
aad
lea
push
mov
xchg
ret
idivb
outsb
cmp
cli
add
or
repnz
nop
cld
jae
add
add
add
ret
fildl
nop
nop
cld
jae
bound
cli
add
rolb
mov
add
ficoms
in
add
add
add
leave
mov
jl
add
out
aam
mov
mov
adc
repnz
nop
cld
jae
add
add
adc
mov
mov
xor
add
clc
repnz
nop
cld
jae
bound
jecxz
dec
mov
clc
repnz
nop
cld
jae
add
jnp
mov
inc
add
add
bound
adc
sbb
add
repnz
nop
cld
jae
sub
sub
repnz
nop
cld
jae
inc
mov
lods
xor
clc
repnz
nop
cld
jae
cli
sub
dec
dec
xor
push
mov
xchg
ret
or
add
test
push
mov
nop
leave
jmp
mov
cmp
ret
push
mov
nop
leave
jmp
mov
add
mov
nop
leave
jmp
add
mov
cmp
add
add
call
clc
repnz
nop
cld
jae
cmpsb
outsb
add
push
outsb
add
push
mov
nop
leave
jmp
adc
add
rorl
jbe
clc
repnz
nop
cld
jae
add
aad
add
popf
shl
push
mov
nop
leave
jmp
clc
add
xor
fld
loop
clc
repnz
nop
cld
jae
into
cmp
sub
mov
jb
inc
add
add
cmp
gs
mov
rep
clc
repnz
nop
cld
jae
add
dec
cmpsb
add
cld
or
add
repnz
nop
cld
jae
dec
mov
clc
repnz
nop
cld
jae
add
add
add
clc
repnz
nop
cld
jae
in
add
ret
loopne
mov
dec
adc
repnz
nop
cld
jae
add
lea
or
push
mov
nop
leave
jmp
add
add
bound
mov
cmp
nop
nop
cld
jae
add
add
add
lea
pop
push
push
mov
nop
leave
jmp
enter
dec
pop
add
clc
repnz
nop
cld
jae
dec
add
add
mov
stc
call
clc
repnz
nop
cld
jae
add
mov
and
repnz
nop
cld
jae
outsb
enter
add
mov
push
mov
xchg
ret
add
add
add
add
outsl
lea
push
mov
xchg
ret
xor
xor
jbe
clc
repnz
nop
cld
jae
add
sub
xor
mov
stos
add
push
mov
xchg
ret
pop
add
aaa
jno
jne
clc
repnz
nop
cld
jae
and
repnz
nop
cld
jae
sbb
loope
xor
mov
inc
cltd
inc
add
add
inc
mov
add
cmp
push
mov
xchg
ret
bound
or
enter
mov
add
clc
repnz
nop
cld
jae
add
sbb
pop
push
mov
add
add
add
dec
add
addb
lret
add
cltd
stc
clc
push
push
mov
xchg
ret
sub
sbb
add
adcb
nop
leave
jmp
lahf
add
mov
push
clc
repnz
nop
cld
jae
mov
add
add
add
clc
repnz
nop
cld
jae
loope
ljmp
jmp
movb
cmp
ret
add
cmc
cmpsl
add
dec
add
clc
repnz
nop
cld
jae
sbb
add
add
rdpmc
sar
nop
nop
cld
jae
add
adc
leave
jmp
cmp
cmc
add
sbb
pushl
clc
repnz
nop
cld
jae
adc
bound
mov
clc
repnz
nop
cld
jae
add
adc
mov
clc
repnz
nop
cld
jae
sub
add
push
mov
nop
leave
jmp
add
add
inc
push
mov
nop
leave
jmp
add
and
push
repnz
nop
cld
jae
add
add
xor
push
xchg
add
push
push
mov
nop
leave
jmp
cli
pop
or
lea
add
adc
add
repnz
nop
cld
jae
aad
xor
xchg
mov
adc
mov
cmp
push
mov
nop
leave
jmp
add
aad
add
divb
push
push
mov
xchg
ret
add
lock
add
and
clc
repnz
nop
cld
jae
mov
add
or
clc
repnz
nop
cld
jae
ljmp
mov
clc
repnz
nop
cld
jae
cmc
adc
bound
rcll
inc
add
loope
add
jne
test
leave
sub
repnz
nop
cld
jae
cli
or
push
mov
add
add
add
insb
sbb
add
das
dec
fwait
repnz
or
clc
repnz
nop
cld
jae
ljmp
call
in
nop
leave
jmp
add
cmp
add
fwait
mov
push
mov
xchg
ret
cmp
add
add
adc
loop
mov
cli
mov
push
mov
xchg
ret
cmc
add
add
dec
and
or
mov
push
mov
nop
leave
jmp
add
mov
into
push
mov
push
xor
daa
jne
test
testl
xor
cs
clc
repnz
nop
cld
jae
adc
add
add
mov
clc
repnz
nop
cld
jae
dec
sbb
push
mov
xchg
ret
add
cmp
aad
jmp
or
or
add
sbb
add
add
add
data16
andl
nop
cld
jae
add
xor
push
mov
nop
leave
jmp
add
add
sub
outsb
xor
mov
mov
add
in
nop
leave
jmp
add
outsb
adc
jnp
inc
push
mov
xchg
ret
adc
add
dec
xchg
dec
not
clc
repnz
nop
cld
jae
dec
dec
jecxz
add
xchg
and
add
add
clc
repnz
nop
cld
jae
add
add
test
repnz
nop
cld
jae
sub
cmp
mov
imul
sbb
clc
repnz
nop
cld
jae
add
push
add
mov
clc
repnz
nop
cld
jae
add
into
and
add
repnz
nop
cld
jae
inc
add
sbb
cmc
cmc
add
mov
add
clc
repnz
nop
cld
jae
add
add
clc
cmp
dec
repnz
call
in
nop
leave
jmp
add
cmp
add
nop
cld
jae
add
add
cmc
cli
add
add
clc
repnz
nop
cld
jae
add
add
or
adc
jl
xor
and
inc
add
add
add
mov
xchg
ret
mov
jbe
adc
bound
add
add
repnz
nop
cld
jae
or
cmc
sbb
push
mov
xchg
ret
cmc
sbb
cwtl
add
mov
nop
leave
jmp
cmc
add
add
lret
pop
mov
push
mov
nop
leave
jmp
add
add
pop
add
fisttpll
in
nop
leave
jmp
add
adc
pop
repz
add
sub
dec
add
mull
xchg
popf
cmp
push
mov
nop
leave
jmp
add
xor
push
add
inc
add
test
nop
leave
jmp
add
test
mov
push
mov
nop
leave
jmp
lock
cwtl
add
clc
add
clc
add
add
add
bound
lock
mov
sbbl
add
add
add
or
inc
add
add
clc
repnz
nop
cld
jae
add
pop
add
add
repnz
nop
cld
jae
and
cmc
add
push
mov
nop
leave
jmp
add
cmp
or
nop
cld
jae
in
or
add
add
add
push
mov
nop
leave
jmp
bound
add
cli
testb
cmp
push
mov
nop
leave
jmp
adc
xor
clc
repnz
nop
cld
jae
cmpsb
add
add
mov
nop
leave
jmp
add
add
push
mov
nop
leave
jmp
add
mov
add
push
push
mov
xchg
ret
or
lahf
add
dec
xor
cli
xor
cmp
repnz
nop
cld
jae
pop
dec
cli
lea
add
mov
push
mov
xchg
ret
add
add
add
mov
xchg
ret
mov
add
cmc
mov
adc
mov
adc
repnz
nop
cld
jae
inc
in
outsb
ljmp
nop
cld
jae
add
into
add
cmc
dec
testl
jmp
add
inc
xchg
adc
mov
nop
leave
jmp
and
bound
rolb
mov
push
mov
xchg
ret
xor
add
loope
out
add
mov
nop
cld
jae
or
cmpsb
add
add
clc
repnz
nop
cld
jae
add
add
enter
push
ljmp
leave
jmp
add
cmc
clc
in
cli
add
clc
repnz
nop
cld
jae
add
in
inc
ljmp
nop
nop
cld
jae
add
add
inc
add
push
dec
push
push
mov
xchg
ret
add
add
dec
add
add
mov
mov
loope
inc
add
into
aad
add
in
add
push
mov
xchg
ret
add
or
add
push
mov
nop
leave
jmp
add
in
add
arpl
nop
cld
jae
lahf
add
cli
add
add
mov
pop
push
mov
nop
leave
jmp
and
in
cmp
xor
inc
in
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
in
sub
repnz
nop
cld
jae
mov
mov
sub
inc
push
mov
nop
leave
jmp
add
add
mov
clc
repnz
nop
cld
jae
add
adc
push
mov
add
test
add
lahf
add
xchg
or
std
add
clc
repnz
nop
cld
jae
inc
add
bound
push
mov
xchg
ret
sbb
sub
add
fldl
stc
clc
repnz
nop
cld
jae
aad
add
jns
adc
jl
inc
add
loope
xor
add
adc
test
in
jmp
push
add
xor
sbb
cmpl
mov
xchg
ret
lock
in
add
lahf
push
call
clc
repnz
nop
cld
jae
add
cwtl
push
mov
clc
repnz
nop
cld
jae
dec
mov
add
push
mov
adc
fnstsw
test
shr
lret
add
add
clc
repnz
nop
cld
jae
xor
add
clc
repnz
nop
cld
jae
inc
add
in
add
ret
clc
repnz
nop
cld
jae
jecxz
enter
gs
push
clc
repnz
nop
cld
jae
add
add
dec
clc
add
test
repnz
nop
cld
jae
cmp
xor
mov
in
add
push
mov
xchg
ret
sub
inc
mov
and
in
and
clc
repnz
nop
cld
jae
outsb
add
dec
gs
mov
clc
repnz
nop
cld
jae
cwtl
or
add
repnz
nop
cld
jae
cmc
xlat
add
add
add
test
push
mov
nop
leave
jmp
add
add
sub
add
incl
push
mov
nop
leave
jmp
add
add
and
mov
jbe
clc
repnz
nop
cld
jae
jbe
add
adc
adc
inc
add
loope
add
add
fidivrl
clc
repnz
nop
cld
jae
add
ljmp
in
nop
leave
jmp
dec
cmp
add
add
mov
movsb
int3
mov
clc
repnz
nop
cld
jae
add
adc
mov
xchg
ret
sbb
add
movsb
dec
add
clc
repnz
nop
cld
jae
add
into
into
aad
mov
mov
or
adc
add
cmc
loope
add
mov
clc
repnz
nop
cld
jae
sbb
cltd
push
clc
repnz
nop
cld
jae
ljmp
into
cmp
repnz
repnz
nop
cld
jae
add
add
cwtl
mov
sbb
in
nop
leave
jmp
mov
or
xor
add
push
clc
repnz
nop
cld
jae
add
add
or
add
repnz
nop
cld
jae
lret
sub
dec
xor
push
mov
nop
leave
jmp
cmpsb
add
add
add
sub
in
nop
leave
jmp
mov
jecxz
lahf
push
in
mov
push
mov
nop
leave
jmp
cmp
add
add
mov
add
mov
lret
inc
add
pop
cwtl
push
or
add
push
mov
nop
leave
jmp
in
add
jecxz
xchg
daa
outsb
jmp
lret
jbe
add
add
bound
clc
repnz
nop
cld
jae
add
add
xor
cmp
and
clc
repnz
nop
cld
jae
mov
lret
add
xor
repnz
nop
cld
jae
in
inc
jge
dec
or
repnz
nop
cld
jae
pop
sbb
dec
clc
clc
add
mov
nop
leave
jmp
dec
add
add
ljmp
dec
add
mov
xchg
ret
lahf
loope
in
add
and
repnz
add
clc
repnz
nop
cld
jae
adc
aaa
inc
add
repnz
nop
cld
jae
cmp
cli
mov
add
push
mov
nop
leave
jmp
add
add
add
add
and
repnz
nop
cld
jae
inc
mov
fmull
nop
nop
cld
jae
add
bound
add
xor
push
mov
nop
leave
jmp
ljmp
cmp
jge
clc
repnz
nop
cld
jae
lock
sbb
xbegin
jae
lret
add
fisttps
loop
add
inc
mov
add
add
pop
push
push
mov
xchg
ret
xor
add
add
fdivr
clc
repnz
nop
cld
jae
adc
mov
cmp
nop
nop
cld
jae
loope
add
push
add
out
call
clc
repnz
nop
cld
jae
add
push
add
fdivl
add
push
mov
xchg
ret
cmp
outsb
mov
add
mov
xchg
ret
jecxz
lock
add
add
out
clc
clc
repnz
nop
cld
jae
mov
sbb
outsb
and
mov
xchg
ret
add
add
push
mov
pop
add
add
add
add
and
clc
repnz
nop
cld
jae
adc
pop
add
xor
push
mov
nop
leave
jmp
lea
testb
icebp
lret
push
push
mov
nop
leave
jmp
add
cmc
testb
decl
push
mov
xchg
ret
add
lock
test
push
mov
nop
leave
jmp
lock
mov
sub
ljmp
add
ljmp
xor
xchg
clc
repnz
nop
cld
jae
dec
in
lea
cmp
and
pop
add
clc
repnz
nop
cld
jae
sbb
xor
fwait
pusha
clc
repnz
nop
cld
jae
ljmp
sub
les
mov
incl
lea
cmpsb
bound
add
aad
in
add
mov
xchg
ret
add
cmpsb
add
lret
testb
sub
repnz
nop
cld
jae
add
clc
add
xor
push
mov
nop
leave
jmp
add
add
add
add
in
nop
leave
jmp
push
add
add
sub
sub
inc
clc
repnz
nop
cld
jae
xlat
inc
add
add
test
add
jbe
repnz
nop
cld
jae
add
cmp
popa
add
mov
nop
leave
jmp
add
in
push
push
mov
nop
leave
jmp
cwtl
inc
or
sbb
add
or
clc
repnz
nop
cld
jae
sbb
into
pushl
push
mov
xchg
ret
bound
loope
mov
add
clc
repnz
nop
cld
jae
xor
pop
mov
clc
repnz
nop
cld
jae
ljmp
out
add
add
sbb
add
pop
sub
add
inc
push
add
adc
je
clc
repnz
nop
cld
jae
ljmp
pop
clc
repnz
nop
cld
jae
add
add
mov
clc
inc
add
adc
ljmp
lea
clc
repnz
nop
cld
jae
mov
mov
mov
nop
cld
jae
sub
add
xlat
push
add
fs
repnz
nop
cld
jae
add
clc
clc
repnz
nop
cld
jae
add
add
dec
add
sub
repnz
nop
cld
jae
or
pop
clc
repnz
nop
cld
jae
mov
add
and
shrb
add
add
adc
and
clc
repnz
nop
cld
jae
add
testb
push
aam
and
push
mov
xchg
ret
or
adc
in
nop
leave
jmp
dec
loope
add
mov
dec
mov
clc
repnz
nop
cld
jae
add
add
push
mov
nop
leave
jmp
sub
add
push
clc
repnz
nop
cld
jae
aad
add
adc
ror
clc
repnz
nop
cld
jae
mov
add
cmp
cmp
clc
repnz
nop
cld
jae
clc
add
mov
shr
clc
repnz
nop
cld
jae
add
push
add
sar
nop
nop
cld
jae
xor
aad
add
sbb
mov
nop
leave
jmp
cmp
sbb
mov
mov
clc
repnz
nop
cld
jae
div
or
clc
repnz
nop
cld
jae
add
add
mov
mov
clc
repnz
nop
cld
jae
bound
bound
adc
clc
repnz
nop
cld
jae
add
mov
add
add
clc
repnz
nop
cld
jae
sub
add
or
ret
clc
repnz
nop
cld
jae
mov
inc
add
or
mov
nop
leave
jmp
in
aad
test
add
mov
leave
clc
repnz
nop
cld
jae
add
adc
mov
push
mov
nop
leave
jmp
adc
jbe
add
add
repnz
nop
cld
jae
cmc
adc
xor
clc
repnz
nop
cld
jae
add
dec
add
or
inc
add
jbe
add
xlat
in
push
push
mov
xchg
ret
add
adc
lahf
cmp
push
mov
adc
repnz
nop
cld
jae
cmp
mov
repnz
nop
cld
jae
add
testb
cmp
mov
xchg
ret
add
jbe
push
push
cmp
push
clc
repnz
nop
cld
jae
lock
add
bound
add
jno
xlat
push
icebp
lea
scas
enter
nop
cld
jae
add
add
mov
or
clc
repnz
nop
cld
jae
or
std
incl
xor
aad
mov
add
add
lahf
mov
clc
repnz
nop
cld
jae
add
sub
push
mov
xchg
ret
add
add
add
clc
clc
repnz
nop
cld
jae
add
dec
aaa
push
push
mov
xchg
ret
add
xor
bound
xlat
ljmp
repnz
nop
cld
jae
dec
cwtl
add
add
pop
push
clc
repnz
nop
cld
jae
pop
add
aad
or
in
and
clc
repnz
nop
cld
jae
dec
mov
andl
pop
push
push
mov
xchg
ret
mov
add
mov
outsl
pop
push
mov
xchg
ret
add
add
add
ret
clc
repnz
nop
cld
jae
add
xor
add
add
in
mov
push
mov
nop
leave
jmp
sub
xlat
add
cmp
jne
je
repnz
nop
cld
jae
add
add
inc
mov
jmp
nop
cld
jae
add
inc
cwtl
add
negl
mov
clc
repnz
nop
cld
jae
add
in
nop
leave
jmp
add
cmc
sub
inc
add
gs
gs
add
add
inc
jecxz
add
lods
clc
repnz
nop
cld
jae
add
or
add
inc
add
rep
clc
repnz
nop
cld
jae
jbe
add
add
mov
push
clc
repnz
nop
cld
jae
dec
idivb
push
cmp
nop
nop
cld
jae
add
add
popa
add
repnz
nop
cld
jae
ljmp
add
clc
repnz
nop
cld
jae
in
into
add
adc
push
mov
xchg
ret
or
add
add
add
cmp
les
repnz
nop
cld
jae
add
sub
lret
clc
repnz
nop
cld
jae
bound
mov
sub
push
mov
nop
leave
jmp
xor
add
add
mov
clc
repnz
nop
cld
jae
adc
mov
clc
repnz
nop
cld
jae
or
jl
test
clc
repnz
nop
cld
jae
idivb
cmc
ljmp
aad
cmc
add
add
adc
add
add
sub
rclb
movl
adc
add
mul
sub
dec
and
clc
repnz
nop
cld
jae
or
cmpsb
ljmp
cld
jae
jecxz
add
add
mov
clc
repnz
nop
cld
jae
mov
int
dec
cmp
repnz
nop
cld
jae
add
mov
sub
cmp
test
out
clc
repnz
nop
cld
jae
mov
dec
clc
repnz
nop
cld
jae
add
add
add
lods
add
clc
repnz
nop
cld
jae
cmc
add
and
ret
add
repnz
nop
cld
jae
add
sbb
cmp
mov
nop
cld
jae
cmp
mov
add
sub
iret
push
mov
add
dec
out
shrb
add
int3
pop
movb
add
clc
repnz
nop
cld
jae
cmc
cmp
insb
mov
clc
repnz
nop
cld
jae
cmp
in
call
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
into
loope
add
add
mov
push
clc
repnz
nop
cld
jae
add
add
dec
cmp
cmp
repnz
nop
cld
jae
sub
add
repnz
nop
cld
jae
sbb
add
cli
cmc
in
movzwl
clc
repnz
nop
cld
jae
add
add
repnz
nop
cld
jae
add
cmc
add
inc
push
push
clc
repnz
nop
cld
jae
cmp
add
cld
call
jmp
add
jecxz
adc
add
dec
fisttpll
nop
cld
jae
lea
mov
ss
jl
dec
adc
in
nop
leave
jmp
add
add
add
loope
iret
lea
clc
repnz
nop
cld
jae
push
add
inc
add
xchg
push
mov
xchg
ret
add
clc
add
inc
add
enter
and
repnz
nop
cld
jae
aad
dec
in
sbb
sbb
inc
add
adc
imulb
add
clc
imul
cld
jae
cmp
or
clc
repnz
nop
cld
jae
add
outsb
add
push
push
mov
xchg
ret
add
add
add
add
xchg
gs
and
clc
repnz
nop
cld
jae
sub
add
ret
push
mov
nop
leave
jmp
add
add
lahf
inc
hlt
jle
clc
repnz
nop
cld
jae
mov
cmp
cmp
sub
cmpl
jae
add
add
add
mov
xchg
ret
inc
add
add
jb
clc
repnz
nop
cld
jae
xor
push
rep
clc
repnz
nop
cld
jae
cli
sub
inc
mov
lds
xchg
ret
sbb
lret
add
or
aam
jmp
adc
clc
add
xor
repnz
nop
cld
jae
ljmp
sub
in
cmp
push
incb
add
testb
cltd
add
lea
push
mov
nop
leave
jmp
mov
lahf
cs
clc
repnz
nop
cld
jae
add
loope
pushf
jne
clc
repnz
nop
cld
jae
sub
in
push
push
mov
nop
leave
jmp
sub
add
add
or
fistpll
push
mov
nop
leave
jmp
cwtl
add
sub
test
clc
repnz
nop
cld
jae
clc
cmp
loope
add
into
das
push
mov
add
pop
dec
mov
add
add
int3
cmp
xchg
js
cmp
add
jns
mov
popf
jb
mov
sub
add
mov
mov
sti
setbe
add
push
adc
call
push
add
inc
lods
sbb
imul
mov
and
jle
fsubs
cmp
jle
push
loop
mov
dec
pop
dec
mov
adc
mov
addb
loopne
mov
addb
int
cwtl
dec
sub
das
lds
rcll
push
mov
repz
mov
mov
jle
popf
add
mov
cmpsb
pop
dec
in
pop
push
pop
or
js
sub
imul
mov
and
mov
fildl
fldl
push
rcll
add
xor
imull
enter
mov
mov
mov
shrl
sub
mov
mov
rolb
mov
xlat
jne
rolb
mov
rolb
movsb
push
insl
adc
mov
add
mov
or
mov
and
dec
rolb
mov
test
enter
sbb
mov
mov
push
adc
test
sbb
int
loopne
mov
jo
mov
into
cmpsb
dec
mov
add
mov
and
adc
add
out
loope
add
add
dec
imul
scas
inc
sub
xchg
pusha
add
dec
iret
or
inc
pop
push
mov
lods
sbb
fisubrs
inc
shrl
sbb
cmp
mov
dec
mov
mov
insb
sbb
or
add
aaa
repz
dec
ja
je
jb
mov
aas
dec
jae
add
mov
sbb
cmp
sbb
adc
and
and
mov
jecxz
sub
add
or
pop
mov
leave
mov
add
or
lods
mov
stc
sbb
push
add
dec
or
repnz
mov
out
push
lcall
add
add
jnp
add
js
mov
inc
add
inc
dec
repnz
inc
add
or
add
imul
popf
bound
mov
mov
and
mov
inc
sahf
push
lods
and
mov
sbb
cwtl
bound
mov
fwait
jbe
mov
dec
aad
sarl
mov
ret
ffreep
gs
nop
add
out
or
hlt
outsb
test
sub
fdivl
mov
mov
cwtl
inc
add
xor
aas
cmpsl
icebp
mov
movsl
dec
loope
int3
divb
mov
shll
rolb
mov
mov
or
das
cltd
aaa
jg
inc
add
shll
addr16
inc
mov
mov
push
popf
shl
mov
imul
inc
add
mov
imul
mov
sti
cmpsb
mov
mov
out
dec
fwait
jg
pop
jo
mov
scas
push
movntq
test
xchg
cltd
mov
fistl
mov
sbb
scas
aaa
inc
es
bound
mov
cmp
out
lods
data16
test
sub
notl
int3
mov
mov
mov
xor
mov
cmp
and
es
std
mov
movsl
jno
mov
inc
cmp
movsb
dec
ss
pop
jb
mov
clc
push
xchg
xchg
loop
mov
mov
push
popa
mov
int3
cld
out
jb
mov
pusha
add
mov
mov
mulb
xor
mov
mov
mov
mov
and
sbb
mov
fidivrl
ja
inc
cmp
and
in
xchg
cs
cmp
xchg
stos
ljmp
outsl
jne
mov
add
push
movb
xor
mov
ljmp
mov
xor
push
cli
jnp
divl
dec
movsl
jae
movsl
push
cli
aas
test
mov
cs
aaa
cli
bound
mov
jp
mov
int
xlat
lcall
ljmp
mov
mov
sti
add
mov
add
sub
jae
add
add
dec
lock
mov
fildl
sub
cmc
dec
addb
dec
int
pop
mov
add
out
mov
mov
rcrl
add
jp
add
xor
add
arpl
stos
stos
addr16
adcl
popa
pop
cs
mov
mov
out
gs
loope
pop
shrl
ljmp
call
je
mov
adc
hlt
mov
les
add
mov
gs
or
add
cmp
and
mov
dec
das
in
inc
fisttps
mov
pop
out
pop
or
adc
mov
mov
add
les
mov
das
pop
movsb
std
addr16
adc
mov
mov
lock
pop
leave
pop
std
and
xor
jle
cmpsl
imul
fdivr
inc
add
fidivs
inc
movsb
xchg
push
xor
mov
aad
nop
add
cs
rcll
lea
inc
xor
mov
mov
add
mov
mov
mov
dec
xchg
lock
test
sub
mov
inc
add
inc
nop
add
mov
ret
jmp
inc
sub
dec
lahf
es
cmp
cmc
rolb
mov
fistps
insl
xor
add
sub
or
or
adc
mov
add
xchg
adc
xor
mov
add
mov
push
mov
dec
fcoms
mov
pop
mov
add
xchg
mov
mov
mov
mov
addb
mov
mov
add
add
je
dec
ss
add
add
push
jb
mov
add
add
jbe
jp
add
movsl
add
mov
mov
xchg
mov
add
icebp
stos
inc
add
pusha
add
mov
jo
mov
mov
add
pop
test
add
lret
cld
in
pop
lahf
jg
movsb
push
mov
mov
mov
mov
das
ret
mov
out
outsb
fwait
mulb
das
cmp
mov
insb
mov
in
jnp
jge
mov
or
add
or
xchg
rolb
mov
add
sbb
inc
sub
js
in
mov
adc
sbb
xchg
add
inc
insb
push
outsl
add
mov
pop
or
or
jecxz
mov
cwtl
lret
imul
mov
mov
xor
inc
test
jo
mov
add
add
int3
mov
mov
pop
fadds
sub
cmp
cwtl
xor
stos
leave
or
add
pop
loop
mov
pusha
add
xchg
mov
pop
mov
ret
push
in
data16
add
jae
mov
push
xchg
add
mov
fs
add
cs
sbb
jnp
das
clc
popa
inc
inc
add
add
negl
and
add
dec
icebp
xchg
and
mov
popf
cld
jne
mov
idivl
jbe
cmp
out
cld
sahf
sti
mov
add
fcompl
push
mov
inc
push
and
out
inc
xor
xor
push
push
imul
mov
xor
mov
stos
pop
dec
sahf
and
mov
es
dec
loop
mov
sbbl
out
out
jle
add
add
mov
add
ja
popa
mov
mov
aam
ds
mov
in
add
in
jmp
mov
or
jecxz
cli
cmp
add
les
shrl
incl
jns
push
ss
cmc
cmpsl
mov
int
rolb
mov
add
push
pop
iret
push
add
bound
mov
loopne
mov
add
xlat
out
jmp
pop
daa
addr16
mov
adc
or
dec
mov
add
dec
mov
add
mov
aad
imul
mov
add
jb
mov
adc
addb
lods
push
dec
mov
add
test
cltd
scas
lds
js
add
or
add
mov
stos
sbb
adc
sub
or
mov
pop
cmp
push
push
add
addb
mov
aaa
daa
push
add
mov
push
xlat
mov
mov
out
lods
fsubs
sbb
dec
into
inc
xchg
add
mov
bound
mov
mov
mov
push
inc
jp
and
cmpl
inc
lods
sbb
add
or
clc
xlat
das
cmp
cmp
push
icebp
push
add
mov
rcr
test
lahf
and
mov
in
fcompl
ljmp
add
sbb
add
lds
mov
jnp
and
dec
ds
jge
int3
ret
pop
in
les
push
outsl
stc
cmpsl
pop
fcomp
and
fiadds
imul
dec
hlt
adc
out
adc
dec
test
aam
add
add
add
mov
cmp
aaa
imul
jo
mov
sub
mov
daa
mov
add
dec
or
out
mov
sbb
mov
pop
pop
inc
add
push
and
add
lret
test
nop
add
mov
mov
xor
addb
test
push
dec
inc
push
enter
fdivr
popa
aaa
sbb
clc
call
lea
aas
dec
scas
mov
ljmp
rcrl
or
ret
testb
sub
mov
mov
addb
mov
icebp
aam
sbb
lret
ss
fstl
arpl
xor
push
loopne
mov
add
add
sbb
jnp
xor
mov
repnz
mov
or
mov
fisubs
sbb
xchg
xor
mov
mov
mov
cmp
aas
add
mov
lret
repnz
push
ds
jg
out
fisubrs
add
mov
jmp
add
scas
sbb
xchg
add
jge
jg
add
cmp
inc
jne
iret
mov
outsl
sti
jecxz
jno
repz
push
add
aaa
int3
in
mov
add
popf
pop
cmp
inc
lock
mov
fstpt
out
mov
push
js
or
xchg
push
mov
push
imul
gs
jb
mov
mov
add
out
add
mov
xor
gs
movl
xor
mov
mov
mov
add
xchg
clc
xor
hlt
cwtl
adc
mov
mov
mov
adc
in
outsb
jle
js
fwait
sahf
rolb
repz
inc
insb
and
mov
mov
mov
das
cld
insl
iret
push
outsl
lahf
in
sbb
mov
out
xlat
stc
movsb
mov
inc
jl
xchg
test
fnstenv
lret
push
addb
push
add
mov
mov
prefetchw
out
jmp
mov
mov
add
stc
lea
mov
xchg
add
insb
lret
out
push
push
add
add
mov
jp
iret
icebp
or
add
add
add
repz
inc
lods
xchg
mov
add
pop
xchg
add
lea
pushf
xchg
and
mov
lret
xchg
sub
sbb
add
stos
adc
jg
lahf
mov
xchg
dec
add
mov
nop
add
mov
jg
bound
mov
xor
nop
add
add
push
pop
mov
data16
loop
mov
jl
mov
rcr
xor
mov
add
popa
mov
rolb
mov
test
lret
mov
mov
cli
pushf
mov
gs
add
mov
xor
fsubrs
scas
sahf
inc
push
push
lret
add
mov
and
mov
cmp
add
xchg
xor
scas
cmc
scas
jmp
negl
pop
in
movb
mov
dec
lret
jns
out
jmp
lods
imul
mov
mov
rcrl
scas
dec
mov
adc
mov
iret
imul
in
xlat
insl
gs
mov
loope
and
mov
repz
add
mov
ret
iret
xlat
jns
add
mov
mov
xchg
sub
add
mov
or
dec
sahf
xchg
lea
mov
fadds
inc
divb
lret
addb
cld
movsb
sbb
ret
dec
gs
sub
sbb
cs
add
xchg
test
add
cmp
cs
cmp
add
inc
fstps
add
dec
cmc
pop
mov
pop
dec
ss
xchg
add
pop
push
jecxz
jge
add
testb
call
sbb
add
adc
mov
subl
out
incl
cwtl
loope
adc
adc
mov
inc
pop
sbb
inc
add
sub
mov
add
push
sbb
sbb
bound
mov
insb
hlt
jae
lock
xchg
add
mov
pushf
jne
mov
mov
ja
movsb
xchg
add
add
fcoms
mov
addr16
mov
jae
rolb
mov
cmp
mov
pop
dec
dec
mov
mov
push
sahf
push
pop
mov
xchg
mov
jnp
iret
inc
outsl
cmp
mov
loope
ds
or
lods
add
mov
mov
in
jno
dec
imul
clc
into
add
mov
bound
mov
popf
insb
iret
dec
jg
dec
dec
rcr
pushf
and
pop
mov
mov
scas
or
adc
icebp
data16
lods
xchg
fwait
push
lds
push
sbb
fists
push
add
bound
mov
pop
mov
mov
add
cltd
xchg
iret
aas
jns
out
aas
push
fdivs
ss
add
mov
add
mov
jmp
push
or
call
mov
bswap
stos
clc
addr16
cmpsl
mov
xor
mov
push
sub
add
addr16
add
push
sub
rolb
mov
ror
xchg
fsubrs
jg
lock
push
add
jg
jne
lahf
aam
popa
icebp
into
ror
scas
sbb
pop
jno
scas
jmp
and
jnp
rolb
mov
jmp
fld
push
nop
add
push
insb
push
add
sub
and
mov
pop
xchg
pop
outsl
test
cmp
mov
mov
repnz
hlt
aad
idiv
dec
popf
addb
push
dec
cld
mov
xchg
add
loope
inc
inc
pop
outsb
mov
dec
mov
mov
add
mov
mov
addb
add
mov
mov
lock
enter
int3
cmp
outsb
xor
mov
inc
outsl
stos
popa
out
frstor
pop
pop
fsubs
mov
in
xchg
cmc
frndint
lret
cs
loope
xchg
insb
rcrl
jae
iret
scas
ficompl
add
mov
add
jge
or
mov
mov
rolb
xor
bound
mov
sbb
add
imul
mov
add
dec
ja
add
add
mov
cmpsb
loope
push
lea
repnz
mulb
std
sub
jb
mov
sahf
rolb
mov
lock
stos
or
push
mov
shrl
inc
add
scas
das
add
xor
mov
movsl
sbb
pop
mov
add
sub
pop
nop
add
out
rolb
mov
xor
add
mov
pop
aam
loopne
mov
xchg
icebp
add
add
push
adc
mov
aam
fstpl
cmpsl
add
jmp
jns
add
dec
addb
pop
add
outsl
test
jno
add
mov
mov
sub
popa
rolb
mov
and
pop
push
out
or
subl
and
add
ret
cwtl
lea
add
add
cltd
shrl
mov
mov
mov
add
ficomps
outsl
movsb
out
insb
testb
aas
pop
cwtl
jae
ss
mov
test
clc
ja
sub
add
add
jmp
fsubrs
add
pop
dec
pop
ss
sbb
cwtl
pop
pusha
add
cmpsb
aas
hlt
jge
add
add
mov
sbb
jecxz
out
pop
xchg
lods
inc
push
add
push
add
addr16
inc
mov
bound
mov
add
mov
lods
mov
mov
add
mov
stos
dec
lret
mov
cmp
mov
mulb
add
jmp
lret
mov
cld
sub
lahf
adc
mov
jecxz
add
std
push
sahf
sbb
add
pusha
add
jno
push
mov
xchg
pushf
jle
iret
shrl
and
jbe
xor
pop
iret
jb
mov
add
in
jns
adc
leave
aas
test
mov
xlat
pop
and
mov
pop
int3
sahf
sarl
xchg
stos
inc
add
add
jae
push
stc
fldenv
jo
mov
and
mov
imul
mov
mov
jle
lods
notb
lret
or
mov
mov
fwait
jae
sbb
outsb
inc
add
testb
adc
mov
aas
push
add
mov
ds
insb
arpl
add
aad
jl
sub
xor
ljmp
pop
call
test
push
push
lahf
inc
fisttpll
ss
xor
pop
fnstsw
jb
mov
fdivrs
out
mov
mov
mov
pop
mov
fisubrl
dec
xchg
fdivrs
add
xchg
ja
lahf
mov
push
pop
in
push
push
add
xor
mov
push
leave
xchg
and
mov
sbb
xchg
fs
add
mov
mov
sbb
clc
push
dec
scas
cmp
cmp
ds
cld
ret
icebp
xchg
adc
gs
sbb
mov
add
mov
aaa
outsl
int3
outsb
xor
mov
lret
mov
addb
mov
cmp
pop
inc
dec
xlat
push
mov
push
sahf
mov
mov
mov
rolb
out
and
mov
xchg
jae
cmpsl
pop
rolb
mov
into
idivl
gs
xchg
add
pushf
mov
mov
push
mov
mov
jle
fsincos
fwait
jb
mov
mov
xchg
mov
inc
add
ror
daa
jnp
add
add
mov
xor
and
inc
add
dec
push
add
pop
addb
mov
not
push
pop
pop
push
adcl
mov
mov
push
popf
in
pop
add
mov
mov
mov
mov
in
scas
sbb
and
cmp
mov
mov
cmpsl
mov
loope
add
movsl
add
add
add
mov
adc
mov
xchg
add
cmp
shrl
int
sub
es
sbb
add
sbb
ret
pop
fistl
mov
jmp
cmp
mov
mov
mov
mov
out
cmp
pop
sbb
or
fnsave
mov
insl
mov
add
inc
imul
sub
add
lea
add
or
rolb
mov
push
xchg
gs
push
dec
xchg
jne
insl
fisttpl
je
push
inc
add
mov
mov
test
sub
ret
push
out
push
pop
mov
mov
ret
jmp
mov
dec
mov
xchg
es
adc
dec
sti
pop
xor
mov
sarl
lcall
fisubl
add
mov
jl
sub
mov
cmc
rolb
mov
xlat
popa
jp
cmp
in
pop
aaa
imul
scas
mov
add
mov
into
fnstcw
out
vpshaw
iret
mov
xchg
jbe
add
dec
or
and
outsb
out
aam
inc
add
idivb
rolb
mov
daa
jg
not
fs
sub
inc
and
movsl
cwtl
out
xor
or
pop
jns,pt
aas
dec
add
add
fucomi
adc
mov
adcl
and
out
mov
addr16
sbb
cmp
sbb
ret
hlt
cs
pop
imull
add
fs
call
pusha
add
rcr
pusha
add
dec
out
mov
aas
inc
add
ret
and
mov
iretw
sub
dec
cwtd
sahf
nop
add
add
add
lods
lcall
mov
test
ds
aas
cmpsb
enter
movsb
fs
push
nop
add
lock
inc
outsl
mov
jmp
cld
int3
adcl
or
leave
fxtract
adc
add
jmp
lret
xchg
add
xor
jmp
or
shll
mov
addb
rolb
mov
mov
xor
add
add
aas
sti
jb
mov
and
cwtl
fisttpl
std
adc
mov
add
fwait
xchg
mov
testl
add
scas
lock
aam
push
aaa
pop
cmp
add
in
pop
dec
sbb
mov
add
or
add
push
into
out
jl
or
aad
add
aam
inc
or
rolb
mov
orl
lahf
lahf
add
add
je
dec
push
adc
mov
fsts
pop
test
add
add
add
mov
movsl
mov
add
scas
loopne
mov
dec
popa
adc
add
add
pushf
fisttps
popa
out
and
mov
push
add
out
test
push
pop
pop
fwait
xor
stos
aaa
leave
push
enter
lods
stos
ret
or
jae
dec
outsl
cmp
js
out
enter
stos
es
add
int
outsl
mov
add
cmpsb
sbb
add
dec
jg
mov
add
dec
out
inc
mov
aam
add
std
inc
push
jg
fadds
ret
rolb
push
in
fbstp
jne
adc
jae
mov
mov
add
addl
sub
addr16
sbb
add
add
cmpsb
fwait
leave
out
aam
imul
mov
insl
fadds
add
mov
add
pushf
stos
or
mov
adc
jb
mov
iret
enter
and
inc
js
pop
push
test
xchg
jae
stos
push
icebp
sbbl
sbb
add
mov
rolb
mov
out
jnp
and
mov
add
mov
mov
add
add
pusha
add
jl
jecxz
out
dec
xlat
call
xor
mov
pushf
repnz
and
jb
mov
adc
dec
test
clc
mov
bound
mov
adc
hlt
cli
fcmovne
mov
xchg
test
test
dec
sub
stc
addl
lods
out
sub
popa
jns
cmpsb
bound
mov
inc
add
scas
nop
add
mov
mov
pop
jae
add
into
add
xchg
dec
jl
add
inc
enter
insb
xor
add
mov
add
repnz
dec
fisttps
or
cmc
imul
leave
mov
stos
les
cmp
loopne
mov
jns
or
dec
xchg
pop
dec
and
sub
jb
mov
jb
mov
pop
pop
mov
add
jb
mov
mov
cmp
aaa
inc
lods
dec
or
repnz
cmpsl
or
push
xlat
das
fs
mov
jecxz
fidivl
fmul
stos
adc
mov
dec
and
add
mov
mov
popl
pop
cmp
jo
mov
inc
add
out
adc
mov
add
ret
xor
mov
push
clc
mov
add
sbb
add
xchg
add
add
add
rolb
mov
add
add
ret
inc
call
out
cmpsb
xchg
dec
push
dec
and
pop
and
add
mov
xor
popf
les
dec
cmpsb
insl
dec
fs
fdivs
lds
add
fucomp
das
fisttps
dec
adc
mov
pxor
push
loopne
mov
ljmp
xchg
jl
push
repnz
add
movsb
movsb
and
frstor
add
lret
push
jnp
fildll
mov
sbbl
mov
mov
adc
mov
push
add
jae
jb
mov
loope
out
bt
xchg
mov
mov
pusha
add
cli
fdivs
adc
mov
mov
icebp
dec
sti
jge
cmp
dec
pop
fs
test
sub
mov
xlat
sbb
aad
xor
data16
add
rolb
xchg
add
out
rolb
test
sub
outsl
loop
mov
js
cs
aam
mov
and
mov
xlat
rolb
mov
adc
xor
dec
add
mov
jno
or
fisttps
cmp
mov
pushf
xor
xchg
loopne
mov
lea
int3
imul
mov
or
cmp
xor
add
xchg
mov
les
mov
addb
cmp
jo
mov
mov
das
inc
cmc
add
mov
xor
mov
add
imul
mov
add
push
mov
mov
sub
jne
fs
jmp
aas
sub
mov
cmp
ja
sbb
ds
test
xlat
test
sub
shrl
jo
mov
add
out
mov
dec
lea
fidivrs
adc
add
sub
mull
xor
mov
mov
daa
dec
or
cmp
out
sbb
gs
jo
mov
insl
clc
jle
adc
mov
inc
and
add
mov
jle
mov
push
mov
iret
sub
mov
xor
mov
sub
mov
pop
das
aaa
push
ret
and
mov
jns
add
daa
add
mov
mov
cs
sub
pushl
add
mov
lcall
fwait
insl
int3
cmp
rolb
mov
mov
lea
aas
sbb
push
mov
sub
jl
movsl
dec
lods
inc
js
negl
rolb
mov
mov
push
pusha
add
addb
xchg
push
inc
or
dec
push
add
ret
jbe
jns
stos
cwtl
push
stos
enter
stos
mov
jge
les
mov
sbb
outsb
and
jae
js
std
mov
mov
cmp
rcrl
dec
popa
cld
xchg
pop
xor
mov
mov
repz
mov
add
inc
sub
xor
das
lods
mov
sbb
adc
in
cmp
fcmovbe
or
add
mov
mov
pop
xchg
cli
decl
xchg
add
mov
sbb
rolb
mov
or
pop
jne
dec
adc
test
pop
push
scas
repz
push
jge
es
outsl
ret
call
scas
xor
ljmp
xchg
scas
sub
push
aam
add
fisubs
add
out
sbb
jo
mov
mov
push
cs
adc
add
inc
inc
clc
jnp
rorl
test
stos
pop
pop
mov
mov
mov
add
xchg
mov
dec
test
addr16
mov
lret
inc
add
mov
mov
add
add
clc
pop
jle
lahf
imul
pop
add
mov
xor
add
sub
aam
ja
sub
add
mov
add
mov
mov
push
push
jmp
adc
mov
add
and
movb
cmp
add
push
xor
add
add
jge
das
cmp
jle
pop
adc
mov
std
in
mov
movsl
hlt
mov
lods
cld
addb
inc
adc
out
pop
and
mov
mov
das
addl
and
add
mov
and
mov
fld
lods
out
aad
in
xchg
push
adc
mov
fbstp
add
mov
or
movsb
gs
in
add
lea
cmp
loopne
mov
mov
aam
mov
mov
cmpsl
jle
loop
mov
add
mov
xlat
adc
aas
repnz
mov
add
push
and
icebp
jmpw
pop
hlt
or
adcl
pop
enter
add
arpl
lret
mov
int
dec
ret
mov
mov
or
jo
mov
dec
mov
or
xchg
js
add
filds
add
xchg
in
std
mov
cmc
and
mov
xlat
scas
ret
xchg
add
add
outsb
xchg
mov
mov
mov
mov
add
mov
add
in
fcoms
pushf
lahf
test
addr16
mov
cmpsl
addb
lret
mov
xor
mov
add
mov
mov
push
pop
push
mov
or
out
call
into
mov
mov
insl
mov
adc
add
je
mov
insl
mov
sub
jbe
and
cmp
out
push
xchg
repnz
inc
addl
std
add
or
mov
bound
mov
mov
mov
jnp
ljmp
mov
mov
loopne
mov
data16
mov
inc
rolb
mov
mov
and
mov
add
mov
inc
mov
add
add
inc
adc
jle
inc
daa
push
add
xchg
add
es
es
mov
add
mov
adc
push
push
into
mov
add
pop
mov
fwait
cmp
mov
add
mov
insl
cld
push
add
ret
lcall
popf
xchg
jle
in
fmuls
fdivs
add
sbb
jns
jge
jl
or
pop
jb
mov
outsb
lret
xor
mov
shll
xchg
lret
push
add
addb
fcoms
mov
jo
mov
xchg
pop
pop
aas
mov
mov
stos
adc
icebp
shrl
pop
mov
insl
in
jbe
mov
add
lahf
aas
jne
add
or
mov
fsubrl
nop
add
bound
mov
arpl
into
aam
push
add
insl
aas
aas
cli
xchg
movsb
mov
mov
mov
mov
cmc
nop
add
push
or
dec
popa
jge
adc
mov
add
mov
mov
nop
add
not
xor
mov
or
mov
mov
push
repz
pushf
jl
ja
ret
jecxz
imul
xlat
mov
mov
add
ss
pop
jo
mov
or
add
cmp
fwait
pop
fcomps
aad
jle
pusha
add
mov
mov
jo
mov
add
addb
mov
and
jmp
addb
gs
daa
stos
push
test
add
leave
mov
fldl
or
roll
daa
cmpsl
das
addr16
mov
aam
add
test
mov
lcall
jns
cwtl
rolb
jecxz
jp
jae
fstl
js
sub
addb
stos
jmp
mov
lahf
sub
xor
mov
mov
mov
enter
fidivs
add
fistl
mov
or
mov
or
or
dec
jne
adc
mov
and
jne
ds
mov
add
imul
clc
dec
out
mov
push
stos
pop
mov
cmc
add
addb
add
mov
xor
xchg
int3
es
mov
mov
in
les
and
loope
hlt
xor
cmpl
repnz
insl
xchg
cmp
lret
add
mov
pop
cltd
pop
jmp
pop
mov
sub
stc
movsl
fisubrs
mov
mov
xchg
sbb
add
ret
and
mov
leave
sbb
push
add
cmp
call
add
and
inc
push
popa
fstp
push
add
mov
jg
testb
add
and
fwait
outsb
cltd
sbb
daa
xor
call
in
pusha
add
mov
push
lock
pusha
add
nop
add
lret
inc
pop
movsl
js
add
out
dec
xchg
cld
lock
fstp
push
add
rcrl
js
addb
push
test
and
mov
ret
sub
pop
sbb
js
stc
pusha
add
xchg
xor
dec
bound
mov
jae
out
mov
pop
mov
sbb
or
mov
jno
fsubrs
dec
sbb
mov
mov
jecxz
sub
add
pushf
cmpsb
addb
xchg
and
fisubrl
add
mov
mov
mov
and
mov
mov
add
pop
add
mov
mov
jo
mov
imul
dec
jmp
dec
in
int3
stc
mov
sub
sbb
andl
mov
inc
add
add
sub
add
imul
jecxz
add
movb
push
add
sub
adc
rolb
mov
add
add
add
outsl
cs
inc
in
push
out
movsb
dec
jno
cmpsb
push
add
push
push
lods
jp
leave
pop
cld
in
cmp
enter
inc
jnp
pop
push
aaa
clc
sti
outsb
es
mov
mov
add
icebp
dec
dec
pop
xor
sub
mov
leave
int3
dec
push
add
jbe
jp
insl
scas
mov
mov
add
jecxz
adcl
or
test
pop
ljmp
int
aad
ret
mov
pop
insb
pop
cmc
idivb
je
stos
insb
fmul
addb
sbb
mov
dec
ret
js
xlat
sub
cmpsb
addr16
int3
cmp
mov
dec
xchg
ret
push
jb
mov
add
mov
push
lods
fsubr
or
jge
sti
and
test
add
push
loope
sub
pushf
inc
imul
ret
cmp
add
mov
mov
mov
enter
fsubrs
pop
movsl
push
mov
call
call
add
mov
mov
and
add
xchg
pop
inc
repz
add
sub
jmp
sbb
outsb
outsb
inc
sbb
and
push
and
daa
ss
pusha
add
add
xchg
repz
jno
add
add
incb
push
add
pop
inc
add
cs
sub
xchg
lret
jmp
add
out
enter
cmpsb
daa
xor
mov
xorl
sbb
movsl
push
lods
das
bound
mov
push
adc
imul
sub
movb
mov
add
pop
lret
bound
mov
call
mov
inc
mov
mov
repz
int3
subl
clc
roll
lret
mull
rolb
mov
popf
adc
push
pop
inc
add
das
fistpll
fs
mov
fwait
or
das
adc
mov
adc
push
push
pop
lret
mov
or
push
mov
add
mov
add
das
pop
incb
push
xchg
imul
jns
sbb
add
add
fstpl
pop
into
mov
pop
mov
lock
mov
inc
repz
mov
addb
adc
mov
sti
cmpsb
dec
lds
hlt
mov
das
mov
lds
inc
add
mov
out
inc
lret
sbb
or
push
bound
mov
add
sbb
sub
add
mov
aaa
faddl
ficoml
mov
mov
dec
and
mov
push
jbe
add
add
mov
inc
pop
xlat
addb
cmp
shl
addb
jno
lods
aad
ret
cmovbe
push
inc
inc
dec
fwait
xchg
mov
sbb
pop
scas
lret
jl
mov
add
aaa
xor
enter
mov
push
mov
mov
loope
inc
mov
push
insb
jp
add
ljmp
loope
push
jbe
add
mov
cmp
out
lret
fcoms
lret
cltd
jbe
mov
xchg
out
mov
mov
jl
sti
repz
test
sbb
mov
mov
out
fists
jmp
xchg
or
hlt
cwtl
decb
lock
aaa
xor
mov
xor
sbb
add
pop
inc
int
jne
or
sub
inc
and
push
add
call
jl
xchg
mov
mov
add
jnp
je
lock
push
add
sti
enter
inc
test
loope
add
out
add
mov
push
push
pop
jae
stc
or
cld
call
add
pop
rolb
addb
in
and
mov
inc
mov
mov
mov
mov
mov
ja,pn
ficomps
jmp
data16
sbb
ljmp
add
mov
xor
push
mov
and
xor
mov
jnp
jo
mov
mov
mov
add
cmp
add
add
outsb
mov
add
mov
popf
sub
data16
add
mov
dec
adc
icebp
aam
test
cmp
add
jne
xorl
add
data16
cwtl
cmc
jnp
add
rolb
mov
lahf
sti
ret
clc
fcmovu
push
add
cs
mov
dec
pop
psrlq
insl
and
fcomps
add
mov
in
sti
or
inc
sub
dec
fisttpl
fildl
lcall
xchg
push
mov
xchg
andl
pop
add
xchg
mov
inc
add
vpmaddwd
add
arpl
pusha
add
jb
mov
ds
xor
mov
clc
mov
jb
mov
sub
lds
adc
jl
jl
sbb
add
jns
pop
fimuls
mov
mov
arpl
jge
test
cmp
shl
mov
add
add
les
cld
fmull
or
xchg
mov
lret
mov
pushl
mov
add
push
dec
mov
add
addb
fstl
adc
mov
fwait
hlt
inc
repz
push
rolb
mov
sub
es
lods
jmp
mov
add
fwait
or
mul
cwtl
ret
xchg
mov
mov
mov
add
inc
add
mov
jle
lea
inc
pushf
mov
mov
mov
dec
add
je
add
andl
adc
or
into
loop
mov
lret
cwtl
inc
jbe,pt
mov
mov
xor
mov
add
int3
pop
fs
in
jno
adc
mov
cmpsb
inc
add
xchg
test
pop
inc
add
aam
dec
fs
add
imul
loop
mov
add
mov
xchg
jg
repz
mov
add
pop
insb
jmp
jecxz
mov
cmc
movsb
xchg
jbe
add
push
add
xchg
lock
pop
add
and
pop
mov
mov
mov
xchg
test
add
add
mov
add
mov
adc
add
cmp
add
jns
je
cli
scas
inc
ja
es
jb
mov
add
add
popa
sbb
push
add
sub
mov
add
fisttpll
insb
jecxz
dec
add
jne
not
add
and
add
pusha
add
movsb
ret
inc
sub
mov
mov
pop
rcrl
idivl
mov
inc
js
lahf
mov
mov
add
jle
pop
push
jbe
stos
ret
dec
fidivl
adc
mov
push
data16
inc
add
sarl
shll
cmp
sub
adc
sub
hlt
cwtl
popf
push
add
sbb
sbb
mov
lcall
mov
jmp
ljmp
add
push
into
lods
imul
add
sti
cmp
pop
mov
add
mov
mov
xchg
jl
xchg
test
add
mov
and
in
shl
pop
fadd
pushf
out
mov
mov
mov
add
fiaddl
jne
imul
inc
add
mov
testl
cld
xchg
cld
cmp
or
xchg
call
inc
add
scas
insl
pusha
add
xchg
add
sbb
add
add
add
sub
jecxz
iret
push
add
mov
push
data16
xor
mov
xor
xchg
sbb
ja
inc
or
nop
add
das
les
jmp
in
insb
test
fs
mov
fdivl
add
inc
add
rcll
rolb
mov
idivl
sahf
inc
add
add
push
idivb
aas
into
mov
les
mov
add
jb
mov
add
add
inc
lret
dec
je
jno
adc
mov
in
add
mov
or
test
add
fsubs
fldcw
adc
mov
je
test
add
daa
or
subl
sub
hlt
jns
add
das
addb
outsl
std
movsl
inc
add
or
out
sub
mov
outsb
dec
pop
fisubl
aad
or
out
adc
insl
sbb
orl
mov
mov
leave
in
in
mov
enter
mov
cmp
dec
jp
mov
mov
mov
mov
jp
out
fcoms
addb
cltd
add
mov
js
mov
in
addb
add
mov
push
cmpsb
jg
fdivs
and
mov
xor
mov
mov
mov
xchg
xor
cmp
add
test
pop
pushf
notb
and
dec
mov
push
mov
xor
mov
test
add
insb
sahf
jb
mov
dec
fisttps
sub
cs
and
sbbl
jnp
stos
mov
sarl
cmpsb
jmp
mov
pop
std
sti
imul
pop
lcall
mov
add
jp
push
pop
ret
mov
add
mov
jp
add
fistpl
jae
add
inc
add
mov
test
dec
fisubrs
or
add
sub
push
test
inc
int3
push
mov
xchg
inc
mov
mov
ss
push
push
lcall
imul
mov
cmp
or
mov
pop
inc
add
int3
add
test
inc
sub
mov
mov
inc
dec
lahf
jle
add
mov
fucomi
xor
sub
dec
frstor
pop
mov
mov
inc
add
dec
push
inc
add
test
add
mov
cmpsl
jbe
mov
adc
mov
cli
and
mov
scas
mov
sub
adc
mov
arpl
jecxz
std
rolb
mov
negb
jle
pop
fbstp
jbe
mov
enter
mov
lds
aas
fwait
lea
jnp
loop
mov
sub
popf
or
fists
mov
cmp
mov
add
outsl
inc
xchg
pop
out
mov
mov
pop
sub
mov
dec
mov
or
test
or
cmp
xor
mov
push
push
push
stos
xchg
jno
adc
mov
repnz
add
les
in
aas
mov
pop
push
imul
adc
jo
mov
mov
inc
add
sub
mov
xor
add
adc
test
out
insb
adc
mov
xor
ss
mov
jnp
mov
pop
pusha
add
jge
mov
imul
mov
mov
sub
lcall
xchg
pop
xchg
cwtl
mov
popa
nop
add
mov
mov
jns
les
rol
popf
push
aad
cmp
xchg
add
mov
aam
jp
loopne
mov
jns
and
stos
aas
pop
push
sbb
dec
mov
lods
aaa
mov
adc
mov
add
mov
cmp
add
mov
stos
nop
add
pop
push
test
mov
cli
inc
sub
add
cwtl
test
popa
inc
add
cmpsb
xor
xchg
mov
jmp
add
jg
fstpt
sti
and
clc
movsb
imul
mov
sub
jo
mov
push
xchg
add
add
mov
adc
add
sbb
loope
add
mov
mov
push
test
and
add
adc
or
add
pop
mov
mov
add
test
test
mov
movsl
stos
or
rep
inc
xor
inc
sbb
add
add
mov
mov
movsb
out
dec
nop
add
repz
pop
in
outsb
into
data16
mov
mov
add
push
adc
mov
es
pop
dec
and
xor
add
mov
arpl
mov
add
int
ds
pop
push
sbb
cli
jb
mov
lea
mov
iret
ss
xor
mov
cmpsl
xchg
mov
mov
push
js
fmul
inc
mov
xor
mov
lods
or
xchg
pusha
add
or
aas
out
pop
lcall
je
add
mov
add
stos
loopne
mov
add
fldenv
dec
jbe
ja
add
xor
mov
push
jnp
mov
add
test
add
jno
bound
mov
fprem
sub
mov
add
bound
mov
add
xorl
lcall
xor
addr16
mov
adc
call
push
lods
das
sub
loopne
mov
mov
imull
fdiv
sahf
push
add
or
cmp
jnp
jmp
pushf
jo
mov
call
add
mov
jl
add
lods
leave
mov
add
sub
and
mov
sahf
or
push
add
and
xchg
lds
add
add
xchg
inc
add
add
add
cli
xchg
test
jg
jg
xor
and
mov
xor
in
add
pop
out
jg
xor
mov
repnz
rolb
jl
push
jp
add
push
lcall
mov
call
pusha
add
mov
aam
xor
add
add
fidivrl
cmp
lret
adc
mov
mov
push
jmp
push
add
out
int3
js
lcall
inc
loopne
mov
add
inc
lret
pop
pop
aam
mov
adc
mov
push
mov
das
lret
mov
rolb
mov
mov
add
pop
lret
push
add
notb
rolb
hlt
add
adc
mov
adc
mov
mov
push
out
inc
fcom
cwtl
cli
sub
inc
add
cltd
pop
sub
mov
addb
and
inc
cwtl
adc
les
iret
bound
mov
add
mov
das
sub
xor
cmp
add
cmp
aam
pop
and
cltd
in
xor
out
xor
and
int
fistpl
mov
mov
mov
insl
test
into
scas
shl
add
mov
mov
mov
mov
inc
xlat
clc
movsl
rolb
sbb
cmp
mov
bound
mov
mov
add
or
mov
std
frstor
push
std
cmp
cmpsb
sbb
jbe
popa
test
sbbl
mov
insl
pop
and
inc
fldcw
xchg
std
negl
push
sbb
idiv
int3
xor
mov
in
lret
pop
xchg
and
sub
add
loope
sub
mov
addb
sbb
mov
fcomps
adc
mov
repz
add
xchg
imul
int3
jbe
xchg
aaa
mov
les
push
add
mov
and
mov
and
pop
mov
lods
mov
stos
sub
dec
data16
mov
xchg
push
adc
dec
jns
nop
add
cmpsl
jg
cmp
xor
jb
mov
out
aam
jns
or
cmp
mov
adc
pop
push
cmovge
sahf
mov
sub
pop
imul
les
mov
mov
jp
mov
test
fs
jno
loope
sahf
mov
dec
loopne
mov
cmp
jb
mov
cmp
je
xchg
add
fbld
mov
les
inc
ljmp
bound
mov
jno
xchg
shrl
xchg
mov
add
add
mov
gs
rolb
mov
add
mov
sbb
sbb
sbb
add
cld
movsb
fwait
sbb
xor
mov
cli
leave
mov
mov
add
stos
mov
cmp
gs
addr16
add
xchg
loop
mov
cmp
inc
data16
clc
xchg
rolb
mov
push
mull
fbstp
sub
inc
fisttps
jge
mov
mov
mov
hlt
scas
iret
stos
mov
daa
jno
add
xor
mov
sbb
push
insl
icebp
rolb
adc
xchg
add
fidivrl
fdivrl
add
mov
lods
mov
mov
addb
ja
je
add
dec
out
sahf
pop
mov
inc
inc
mov
xchg
xchg
sbb
mov
out
test
mov
mov
and
mov
mov
mov
lret
enter
jg
add
in
out
leave
notb
dec
xlat
add
outsb
lret
lods
or
in
loopne
mov
pop
mov
scas
or
add
sub
aaa
test
add
repnz
je
add
xor
aas
sub
jne
cltd
loop
mov
insb
insl
mov
scas
sub
lods
pusha
add
rcll
mov
roll
xchg
sbb
lods
cmp
lods
inc
ss
and
mov
outsl
jb
mov
imul
cmpsl
fadds
adc
add
mov
mov
jge
in
add
mov
pop
push
in
push
add
adc
mov
xchg
aas
lea
addb
mov
or
pop
pop
mov
sbb
fs
idivl
add
sub
pusha
add
mov
dec
xor
lcall
push
add
cmpsl
push
dec
cs
movsl
outsb
pop
mov
mov
mov
add
dec
fcmovnbe
add
fbstp
mov
and
mov
mov
jae
cmpsl
mov
popa
dec
stc
xchg
movsl
mov
push
movsb
fisubrs
rorl
mov
pop
push
jbe
sub
pop
cmp
pop
fwait
mov
or
adc
add
add
cld
or
cmp
mov
jno
xchg
clc
lcall
cli
repnz
stc
mov
mov
xchg
mov
mov
jbe
push
add
add
ret
xchg
or
mov
mov
adc
mov
test
cli
nop
add
mov
ret
jg
xlat
movb
addl
mov
subl
add
sub
in
jecxz
cmc
and
mov
add
add
lahf
neg
je
fidivs
add
cltd
retw
fistpl
outsb
mov
jns
xchg
jecxz
rolb
jns
add
lods
jecxz
add
and
das
sbb
adc
int3
lahf
repz
push
jnp
add
jmp
push
xor
sub
enter
stc
fwait
into
jl
add
out
dec
dec
sbb
fsts
fdivl
pushl
add
dec
cmovle
cli
sub
xchg
or
cmp
fldenv
jle
jecxz
sub
mov
add
aaa
mov
inc
repnz
dec
loope
xchg
iret
rolb
call
sub
mov
dec
add
dec
test
adc
mov
add
add
jbe,pt
mov
bound
mov
sub
mov
mov
add
fs
fwait
add
mov
sub
jmp
in
and
cmp
mov
cmp
int3
jg
xchg
mov
add
mov
repz
rolb
mov
ss
or
add
xor
movsb
sub
lds
jo
mov
mov
fclex
add
add
cmc
scas
xor
mov
add
fistpll
nop
add
aaa
mov
addb
scas
mov
lock
add
dec
arpl
pop
xchg
pop
jb
mov
pop
cs
arpl
cmp
jae
popa
cwtl
mov
outsl
add
pusha
add
sbb
lods
test
out
int3
nop
add
divl
adc
pop
push
adc
mov
loopne
mov
inc
mov
add
cmpsb
int3
mov
add
icebp
inc
jmp
mov
es
inc
lock
mov
mov
aas
mov
add
pushf
push
lods
sbb
add
stos
cmp
add
jecxz
dec
jb
mov
xchg
push
cmpsl
insl
inc
add
sub
rcll
hlt
add
add
cmp
shll
popw
mov
cmp
add
arpl
jne
add
lods
push
and
mov
sbb
loopne
mov
lea
in
repnz
jnp
mov
add
test
and
xchg
outsb
orl
add
mov
cmc
addb
ret
cwtl
into
out
aas
mov
dec
adc
add
or
adc
mov
push
xor
add
inc
pop
push
add
add
pushl
sub
mov
push
mov
dec
bound
mov
xor
mov
fisttps
jo
mov
iret
xor
jne,pn
add
and
fsub
pop
lods
movsb
push
dec
xchg
prefetchwt1
xchg
lea
xchg
iret
sarl
cmp
cmp
mov
adc
add
xchg
leave
lcall
xor
sub
cld
loope
test
or
or
mov
mov
add
mov
movsb
clc
mov
mov
ss
cmpsl
adc
daa
movsl
xchg
pop
ss
inc
es
add
addr16
mov
push
into
lods
out
pop
dec
es
and
pop
pop
push
and
mov
xchg
ja
addb
jb
mov
inc
std
mov
mov
jmp
dec
inc
icebp
or
mov
mov
mov
sbb
add
inc
add
mov
add
dec
pop
das
xor
mov
xlat
insb
push
inc
and
icebp
jmp
add
pop
int
jb
mov
add
imul
add
push
add
mov
in
ds
sub
xorl
jge
add
mov
mov
mov
scas
jnp
ljmp
cmp
push
in
mov
mov
bound
mov
add
mov
pushf
cmp
in
cmp
add
fnop
add
inc
lret
ja
add
mov
push
leave
lret
dec
iret
add
inc
ret
cmp
mov
or
pop
scas
aas
ljmp
jb
mov
mov
and
xchg
fldl
into
movl
addr16
rolb
mov
fnstsw
repz
mov
cmp
add
or
sub
test
mov
dec
jne
xchg
add
jo
mov
dec
movsl
push
mov
int
sbb
out
add
sbb
and
mov
sub
addr16
add
mov
mov
mov
mov
sbb
lods
in
inc
xchg
fs
cmp
mov
dec
adc
into
lret
shll
ss
inc
push
pop
daa
mov
mov
push
xlat
hlt
push
cmpsl
jp
adc
jo
mov
lea
mov
push
dec
es
jl
add
mov
xor
xchg
lret
cmpsl
in
les
rolb
stos
xchg
jmp
add
mov
dec
jmp
mov
insb
lods
fdiv
icebp
push
mov
lds
sub
push
adc
inc
add
rolb
lods
dec
aad
add
pop
and
mov
jg
pushf
repnz
test
add
mov
dec
std
fsubs
cmpps
pop
sbb
or
std
and
xchg
adc
adc
out
scas
sti
scas
fdivrs
rolb
mov
add
jno
inc
xor
cmp
test
sub
inc
xor
cmpsb
and
mov
xchg
out
das
arpl
jbe
adc
mov
arpl
jo
mov
add
add
test
aam
icebp
xchg
outsl
cmc
rcrl
pop
or
mov
mov
fisubrs
std
js
mov
mov
rolb
mov
inc
aas
addb
inc
xor
fcmovnb
bound
mov
add
cmpsb
lret
mov
add
arpl
cwtl
pushl
cli
int3
dec
loopne
mov
insb
arpl
jp
sbb
add
mov
xorps
mov
sbb
cmp
sbb
repz
addb
and
mov
mov
in
jmp
fcoms
bound
mov
mov
add
pop
into
insb
out
leave
fnstenv
add
sub
mov
inc
add
int
sbb
test
dec
mov
inc
add
cmpsb
insb
mov
mov
fprem
mov
push
add
mov
jne
dec
dec
mov
mov
int3
inc
add
fsubrl
imul
mov
push
in
mov
add
add
mov
mov
mov
pop
aad
pop
lods
les
cld
lret
adc
enter
mov
add
adc
and
mov
popf
mov
popa
add
addb
and
lock
popf
subl
out
aad
add
jnp
inc
cli
sub
ljmp
add
scas
data16
sub
add
pop
and
mov
inc
mov
push
and
mov
aad
add
mov
xchg
inc
std
pop
aad
xor
mov
mov
mov
into
sahf
add
pop
jnp
adc
mov
mov
leave
add
mov
rolb
mov
adc
mov
mov
and
mov
fbstp
sub
push
lcall
into
push
repz
push
add
push
clc
xchg
cmc
xchg
shll
loope
mov
add
add
inc
inc
stos
rolb
mov
mov
fcom
cmp
pop
lret
pop
lret
add
xor
mov
add
scas
and
incb
cld
xchg
es
lret
mov
mov
popa
cmp
inc
push
mov
pop
mov
ret
xchg
jo
mov
hlt
inc
add
adcl
add
add
add
mov
add
hlt
mov
pushf
push
icebp
fsubrl
xor
mov
popf
xor
scas
imul
fbstp
add
jns
or
dec
lods
and
add
add
inc
pop
repz
divb
leave
push
sub
popa
cmpsl
jnp
lock
ja
testb
jne
push
loopne
mov
movsl
bound
mov
stos
mov
mov
dec
insb
loopne
mov
dec
daa
enter
aad
adc
cmp
xlat
dec
xor
call
pop
in
loop
mov
adc
add
repnz
sub
add
add
adc
mov
arpl
mov
cmp
pusha
add
cmpsl
or
adc
add
std
divb
add
arpl
add
cmp
lret
inc
xor
mov
lret
mov
mov
scas
outsb
mov
das
xlat
loopne
mov
add
mov
dec
outsl
idiv
icebp
jbe
mov
mov
dec
lret
repz
mov
add
lods
pop
lret
adc
add
call
sbb
movsl
outsb
xor
dec
push
mov
push
dec
icebp
mov
mov
aad
and
mov
push
mov
mov
cmc
pop
sub
add
mov
dec
adc
mov
mov
mov
push
test
dec
cmpsl
sub
dec
adc
mov
pushl
sbb
sbb
cs
cmp
jg
lahf
fnstsw
add
fidivl
push
adc
lods
lods
mov
cltd
call
jne
inc
loop
mov
loope
ja
out
ret
jle
or
lock
out
mov
in
add
mov
jnp
xor
mov
add
mov
sbb
mov
cmp
jne
dec
dec
clc
int
and
xlat
fbstp
xlat
adc
mov
cwtl
dec
lret
adc
mov
add
xchg
or
cmp
cmp
cmp
ret
xor
xor
mov
mov
mov
inc
and
mov
add
outsl
pop
push
shll
scas
in
and
push
lcall
ficomps
cmp
sbb
mov
cmp
test
jmp
sub
or
mov
inc
add
es
jnp
enter
jns,pn
popf
aaa
sbb
add
ret
cmp
ljmp
pop
aaa
and
mov
lret
cmp
jmp
pop
out
sbb
xor
mov
add
mov
adc
pop
cmpsl
push
inc
incl
jo
mov
push
popa
pushf
cmp
add
repnz
sbb
mov
je
lock
pop
enter
aas
cwtl
sub
jle
jmp
add
cltd
or
add
mov
pop
adc
mov
outsl
les
xchg
gs
add
addb
or
add
mov
push
jbe
outsb
xor
jp
leave
cmp
arpl
jb
mov
sub
push
scas
bound
mov
add
mov
jae
test
mov
dec
pop
pop
je
xor
lods
mov
aas
bound
mov
add
popa
bound
mov
xchg
adc
mov
jb
mov
add
add
adc
sbbl
jb
mov
ds
push
push
loopne
mov
mov
or
and
arpl
add
sub
sub
adc
add
mov
add
into
outsb
push
loop
mov
adc
cmpsl
add
dec
out
scas
dec
jae
ja
sahf
enter
cmp
iret
adc
cmp
add
das
sahf
and
adc
xor
mov
mov
mov
add
mov
loop
mov
mul
push
ret
hlt
mov
push
add
inc
and
mov
pop
les
sub
or
jbe
stc
adc
mov
leave
xchg
push
mov
lret
xchg
jmp
pop
or
cltd
fucompp
test
push
and
mov
add
push
stos
repnz
jmp
sti
push
add
insl
not
xor
add
gs
sbb
fldenv
mov
add
imul
mov
loope
mov
add
es
subl
push
std
out
xchg
xor
mov
push
push
pop
push
lods
lret
pop
fiadds
jae
in
lret
aas
mov
add
add
mov
add
divl
fidivs
frstor
pusha
add
lahf
xor
or
adc
add
out
stos
jbe
loope
je
inc
je
shrl
pop
pop
sahf
lahf
repnz
sub
xchg
adc
mov
add
sub
mov
push
jmp
stos
adc
fcompl
mov
jmp
repz
cmc
lret
jo
mov
add
sub
pusha
add
cld
sbb
mov
lock
mov
adc
jno
imul
lahf
sub
add
or
mov
sbb
outsl
xchg
push
pushf
adc
icebp
pop
adc
fisubl
add
gs
add
push
out
cmpsb
cmpsl
push
jle
mov
dec
pop
jl
shrl
bound
mov
add
mov
sbb
mov
add
in
aas
arpl
jle
add
pop
xchg
pop
inc
loopne
mov
popf
aam
insl
pop
pusha
add
push
scas
cltd
inc
add
cmp
scas
je
push
and
mov
and
lods
stos
sahf
sub
jae
movsl
jne
add
add
mov
dec
push
cwtl
fldcw
inc
roll
mov
inc
pop
leave
ficomps
xorl
add
call
add
cld
dec
out
xor
mov
xchg
stos
push
add
jp
jl
test
pop
push
jno
scas
mov
adc
mov
add
fsubs
add
cmp
fwait
push
ret
rolb
sbb
mov
pop
mov
sbb
mov
in
mov
jne
dec
sub
add
add
push
mov
pop
inc
inc
pop
xor
mov
and
mov
add
jns
adc
inc
mov
jmp
ds
adc
cmc
inc
add
gs
movsl
fmulp
cmp
mov
jp
add
and
and
add
add
mov
jg
fisttpll
movsl
lods
data16
std
xchg
divb
aas
and
mov
mov
mov
mov
mov
fdivl
mov
mov
fisubrl
fisubrs
fs
xchg
xchg
pop
xor
cli
mov
add
mov
add
add
test
bound
mov
ret
loop
mov
jge
add
lds
sahf
add
mov
mov
xlat
jecxz
add
mov
mov
addb
sbb
enter
notb
mov
add
push
rolb
in
pop
pop
mov
push
int3
jne
movsl
dec
repz
aad
add
add
jnp
mov
add
add
sbb
add
sub
add
mov
sbb
dec
inc
es
insl
and
mov
mov
cli
repnz
adc
xchg
add
lret
mov
das
push
movsb
pop
add
mov
jae
add
ret
int
mov
mov
add
mov
mov
mov
inc
pop
or
rorl
and
mov
orl
mov
xchg
cs
dec
enter
push
sbb
sbb
lcall
push
inc
ljmp
push
scas
fwait
notl
add
add
sbb
dec
imul
sbb
push
add
shll
sbb
jl
jo
mov
mov
jae
ja
mov
adc
mov
add
add
add
rcr
pop
mov
loope
inc
rolb
push
and
add
mov
jb
mov
ja
push
add
dec
jae
lds
fdivrl
icebp
and
mov
add
mov
arpl
mov
inc
shrl
mov
adcl
mov
xchg
push
mov
add
xor
iret
or
jnp
cli
sahf
jne
add
mov
les
mov
mov
xlat
inc
test
cmpsl
sub
pusha
add
jae
cmpsb
shll
mov
aas
push
add
add
add
int3
js
add
mov
fnstsw
mov
mov
mov
mov
out
add
inc
mov
dec
rolb
mov
js
lods
add
mov
add
sbbl
decb
sarl
add
movsb
sbb
jg
add
adc
mov
mov
lahf
sub
push
jno
sahf
fimuls
loope
js
pop
add
mov
daa
out
dec
jb
mov
addb
dec
jg
call
fstl
out
mov
jnp
fnsave
mov
mov
pop
jb
mov
mov
int
movsl
jne
int
mov
add
mov
dec
mov
outsb
je
add
add
push
adc
mov
fisttps
dec
push
mov
loop
mov
jbe
xor
lahf
push
mov
push
add
push
or
push
repnz
add
push
add
fneni(8087
add
dec
iret
lea
mov
mov
mov
add
cmp
fwait
sahf
cmp
lods
icebp
stos
pusha
add
pusha
add
add
xchg
je
out
mov
mov
mov
dec
push
out
jnp
add
mov
rolb
mov
and
mov
dec
into
add
jns
add
mov
mov
mov
inc
out
push
bound
mov
icebp
frstor
xor
mov
mov
push
mov
mov
mov
add
icebp
rolb
inc
add
push
inc
add
stos
lods
jne
add
add
and
add
xchg
add
in
xor
mov
test
mov
add
mov
xchg
ja
js
cmp
mov
in
mov
mov
add
emms
and
mov
adc
jo
mov
add
mov
stc
pop
cmp
add
popf
addr16
mov
sbb
add
adc
xlat
pop
in
mov
or
or
test
add
mov
in
mov
push
nop
add
xchg
add
mov
stos
jge
mov
mov
or
add
mov
inc
cli
test
loope
mov
mov
test
mov
inc
jo
mov
mov
inc
add
cmp
pushf
call
es
insl
or
lret
mov
rcl
add
rolb
mov
mov
add
add
pop
rolb
mov
cmpsb
fcoml
mov
sbb
mov
test
cld
mov
mov
mov
add
add
lods
daa
cmpsl
mov
adc
mov
stos
aad
push
xchg
mov
pushf
in
and
mov
sub
jmp
add
cmp
cmp
xlat
dec
mov
add
push
stos
sbb
jb
mov
add
inc
sbb
dec
lahf
cmpsb
dec
sub
das
into
rorl
sbb
cmp
arpl
push
jne
jo
mov
sahf
leave
daa
cld
jne
mov
mov
dec
decl
xchg
mov
fsub
je
add
add
push
fidivl
popa
insl
jb
mov
push
and
and
mov
jge
mov
pop
or
in
fcomps
xor
scas
inc
add
mov
xchg
mov
add
pop
fwait
mov
mov
data16
loopne
mov
mov
jle
push
jmp
or
add
add
and
inc
push
add
add
push
push
add
sub
add
add
out
xchg
out
mov
mov
pop
cmp
cld
ja
mov
pop
test
mov
sub
mov
fidivs
or
ficoml
add
test
mov
movsb
sbb
jae
mov
pop
add
cli
add
mov
pop
loop
mov
add
push
dec
mov
mov
das
push
and
movsb
nop
add
sub
stos
mov
jmp
push
jo
mov
addb
cmp
repz
hlt
repnz
or
aam
mov
ret
mov
mov
idiv
jb
mov
pop
fimull
mov
bound
mov
shrl
mov
mov
sbb
adc
add
xor
mov
jnp
pusha
add
addb
repnz
push
adc
dec
cld
and
dec
and
mov
add
jecxz
addb
aas
mov
rol
add
scas
jecxz
in
inc
imul
xor
jo
mov
hlt
popf
test
push
xchg
sub
add
repnz
ret
and
rolb
mov
pop
cli
enter
paddd
inc
sub
adc
mov
xchg
mov
rcll
in
xor
add
mov
jge
mov
add
cmp
mov
movsl
idivl
sbb
mov
adc
mov
and
mov
xlat
mov
mov
push
out
int
insl
add
mov
rolb
dec
js
add
fsubs
xor
mov
mov
cmp
lods
and
aas
push
movsl
xor
mov
xchg
cmc
mov
add
xchg
in
fisttpll
mov
add
or
xor
mov
adc
mov
mov
jmp
add
jge
and
mov
int
cmpsb
mov
push
jl
add
loopne,pn
mov
lret
mov
js
dec
pmulhw
jns
cmp
int3
addb
cmpsb
sub
add
push
xchg
daa
push
loopne
mov
add
mov
stos
mov
xchg
rcrl
sub
add
mov
shl
add
xchg
sub
add
int3
stos
addb
jns
mov
sub
sahf
pushf
iret
imul
bound
mov
push
cltd
cli
xor
jg
es
push
inc
test
xchg
jns
addr16
add
daa
lods
aad
mov
xchg
sub
mov
and
and
add
jne
nop
add
or
add
add
lret
jne
mov
daa
in
fisubs
js
jb
mov
add
sbb
cmp
pop
and
mov
add
add
add
or
add
add
mov
add
add
cmc
mov
leave
xchg
fildl
jmp
cs
xor
mov
movsl
dec
jl
addb
jb
mov
mov
mov
dec
pusha
add
dec
push
rolb
mov
fisttpll
and
add
aam
scas
not
add
pop
sar
mov
push
insb
int
add
into
daa
add
mov
add
mov
push
das
jg
bound
mov
in
add
lods
sub
add
lea
mov
jg
add
mov
outsb
or
add
imul
rolb
mov
xchg
call
loope
cltd
adc
mov
sub
mov
addb
add
mov
into
aaa
pop
push
sub
dec
lret
jmp
test
ret
call
jl
les
add
cwtl
inc
cmpsl
mov
add
pop
and
mov
adc
mov
jo
mov
add
jge
xchg
sbb
jnp
loop
mov
cmpsl
cmp
movl
loopne
mov
add
lea
jns
jb
mov
add
pop
xchg
mov
add
add
addb
dec
mov
or
inc
fmul
rolb
mov
xor
mov
testb
lret
jns
cwtl
mov
jmp
movsb
shrl
js
xchg
add
add
push
add
pop
adc
enter
and
xchg
add
int
dec
sbbl
loopne
mov
mov
lahf
fwait
ret
in
pop
or
mov
test
xchg
jle
outsl
shl
push
scas
inc
into
xchg
sbb
cmc
js
adc
addb
mov
pop
testb
sar
ss
dec
xchg
xlat
lock
int
filds
mov
addb
pop
sbb
add
xchg
sbb
je
mov
add
out
lcall
rolb
mov
rolb
mov
mov
out
xchg
inc
out
adc
push
pop
mov
mov
pop
cmpsl
cmp
aad
loopne
mov
sub
dec
xor
mov
jmp
in
lcall
gs
pop
dec
addr16
or
fucom
clc
mov
pop
out
dec
cmpsb
adc
add
mov
and
add
cs
mov
rolb
mov
jecxz
xchg
insl
ds
sub
dec
jmp
sbb
rolb
mov
cs
pop
rolb
jecxz
mov
imul
mov
sbb
cltd
fisttps
popf
sbb
nop
add
leave
or
pop
mov
xchg
push
mulb
jns
adc
add
shrl
inc
fcoms
pop
out
stc
xchg
ljmp
mov
mov
xor
mov
mov
dec
ljmp
dec
adc
mov
ja
pop
and
leave
mov
lock
xchg
das
test
dec
jle
lods
fwait
dec
addl
add
mov
dec
das
rolb
movsl
lret
test
add
nop
add
mov
in
lret
add
test
pop
adc
repz
sub
dec
and
iret
dec
popf
xlat
out
das
cs
xchg
cmc
xchg
sub
imul
icebp
sbb
and
mov
loope
imul
mov
insb
jg
arpl
mov
lret
cmpl
enter
jno
stc
adc
dec
cmp
add
mov
sbb
insl
test
mov
jle
jp
lcall
add
or
call
xor
mov
jno
cmpsb
add
mov
add
in
sbb
xor
add
daa
sub
mov
xor
push
mov
adc
insb
dec
sar
add
mov
jae
rolb
mov
cmp
ret
and
insl
call
add
movsl
ficoml
add
mov
xchg
sbb
mov
cmp
add
pop
inc
popf
outsl
jns
inc
pop
lahf
dec
int3
gs
or
sub
mov
mov
lret
jb
mov
inc
cmp
sub
leave
mov
or
sbbl
and
mov
aas
idivl
push
add
pop
sti
pop
push
xchg
insb
jmp
add
mov
rorl
jne
adc
add
cmp
inc
add
push
add
add
push
lods
movsb
or
add
insb
inc
rolb
mov
es
test
fsts
add
cli
jns
mov
mov
iret
push
loop
mov
lcall
js
out
bound
mov
add
push
pop
fidivs
test
xor
outsb
xlat
jns
pop
xchg
in
inc
add
fwait
or
add
mov
js
add
leave
imul
ret
aam
fsub
std
mov
pop
and
test
pop
sub
dec
dec
jp
stos
sub
xchg
lds
mov
rcr
sbb
es
jne
hlt
loop
mov
dec
cmpl
pop
rolb
mov
xchg
rolb
mov
add
mov
pop
repz
jae
in
stos
or
pop
stos
hlt
inc
add
add
pop
call
mov
cmp
add
mov
cmp
xlat
aam
dec
incl
mov
stos
addb
inc
es
cmpsl
jnp
lds
rolb
mov
add
mov
mov
cmc
stos
sub
lea
add
cmp
push
cmp
add
push
add
mov
ret
cmpsb
sub
push
add
cwtl
out
js
aam
dec
int3
mov
mov
cmp
cmp
fwait
xor
mov
jno
call
sar
push
aas
mov
ret
lret
mov
lahf
jae
mov
repnz
add
push
sbb
xchg
sbb
add
cmpsl
jecxz
xchg
in
mov
adc
aad
jecxz
mov
xor
or
mov
js
dec
and
lds
cmp
fldenv
mov
das
pop
inc
dec
mov
mov
repnz
xchg
stos
mov
mov
pop
pop
insl
pop
aam
inc
enter
mov
adc
mov
fisttps
sbb
add
aaa
movsl
xor
mov
push
add
mov
mov
add
std
sbb
add
jno
jmp
adc
addb
and
sub
loopne
mov
push
push
dec
adc
mov
cmp
rolb
mov
lcall
add
mov
push
daa
xor
hlt
js
xlat
outsl
mov
testl
mov
leave
leave
inc
add
int3
push
cmpsl
push
xorl
xchg
fdivs
stos
clc
jl
add
add
dec
add
add
xchg
cs
sub
and
and
mov
jns
imul
aas
sub
addb
popa
in
outsw
or
mov
jae
gs
sti
jb
mov
jge
cmp
inc
add
add
lods
imull
add
adc
mov
in
loope
dec
push
cmp
mov
aas
xlat
push
inc
xor
mov
add
shr
push
jge
arpl
lds
dec
in
outsb
mov
pop
icebp
mov
jo
mov
mov
sbb
add
outsl
jo
mov
out
sub
mov
scas
xchg
or
ret
mov
test
sub
pop
call
and
mov
adc
pop
xchg
test
mov
add
mov
pop
inc
pop
mov
pop
aam
push
test
sub
repnz
and
mov
add
inc
jne
sub
in
inc
leave
push
add
sbb
xor
mov
and
xchg
xchg
add
pop
pop
mov
jne
add
mov
inc
mov
mov
jmp
daa
xor
fstpl
jmp
lods
mov
add
mov
xchg
leave
mov
mov
inc
sub
pop
pop
sbb
rolb
mov
add
cld
and
mov
add
sub
inc
mov
icebp
cwtl
icebp
aas
call
mov
add
mov
aad
jae
pop
aas
push
pop
adc
fcomp
adc
mov
adc
mov
out
rolb
mov
push
ret
jns
dec
cmpsb
inc
addb
xlat
adc
int3
testl
pop
iret
adc
mov
fsub
adc
dec
lock
or
stos
loopne
mov
mov
mov
sub
mov
add
scas
jle
add
xlat
cmp
push
add
mov
inc
into
dec
out
rcll
jo
mov
pop
dec
xchg
add
and
leave
enter
jne
roll
mov
aam
shll
mov
rolb
mov
push
or
fstpl
stos
pop
xor
hlt
cltd
dec
xor
mov
scas
add
mov
xchg
jns
fmuls
fistps
push
push
cmp
dec
js
add
mov
inc
lods
sub
stos
push
or
sub
jae
add
cmpsl
jecxz
mov
outsl
lods
sbb
add
add
lea
add
fs
test
leave
pop
mov
or
mov
outsl
ds
in
flds
jo
mov
aad
mov
push
or
mov
add
aad
leave
sub
out
mov
or
cld
xchg
fcmove
xchg
div
popl
das
sbb
lock
xchg
aad
adc
mov
test
js
mov
add
mov
sbbl
jp
xor
jl
mov
mov
mov
pop
mov
cmpsl
call
xchg
mov
inc
cmc
sbb
xchg
sub
add
dec
xchg
mov
test
lods
xor
sub
push
cwtl
rolb
mov
xchg
pop
idivb
mov
into
ja
addb
jmp
lret
mov
inc
add
lcall
xchg
dec
sbb
fbstp
mov
jns
push
clc
or
add
fdivrp
inc
xchg
add
push
adc
jl
add
mov
pop
stc
rolb
jbe
rcl
pop
js
or
addb
loope
emms
and
pop
aaa
push
push
add
in
add
stos
mov
add
mov
mov
mov
jmp
sub
in
xchg
js
jae
lods
add
in
movl
cs
stos
add
jge
in
pop
add
mov
data16
cs
hlt
es
subl
jecxz
outsl
and
add
pop
inc
cmpsb
fcmove
fcmove
je
xchg
xor
mov
lods
adc
inc
dec
imulb
lret
ss
cmpsl
lea
ficoms
mov
arpl
mov
insb
int
mov
mov
mov
dec
add
repz
mov
ja
and
mov
outsl
or
push
es
rolb
mov
lods
pop
movsb
pop
sbb
add
rolb
sub
add
xlat
lahf
fildl
cmpsb
lret
dec
xchg
or
mov
sbb
test
mov
imul
addb
ja
sbb
jmp
lcall
mov
mov
fdivl
loope
jbe
add
push
aaa
xor
add
add
mov
mov
fdivrs
loop
mov
and
mov
out
jno
scas
add
sbb
loop
mov
std
js
xchg
add
jae
cmc
sbb
xchg
outsb
cld
dec
repnz
ret
pushl
add
mov
inc
add
call
dec
lods
inc
add
push
leave
dec
cli
insl
mov
add
mov
leave
pop
dec
aas
enter
cmpsl
shll
pop
jb
mov
mov
add
mov
mov
add
jbe
repz
adc
mov
cmp
lea
out
in
fidivrl
adc
and
mov
push
adc
push
ljmp
rolb
mov
jo
mov
rolb
mov
lea
xchg
adc
xchg
and
push
or
cld
stos
repnz
add
out
mov
add
xchg
xor
ljmp
outsl
rolb
mov
icebp
pop
sarl
mov
fs
mov
adc
pop
pop
inc
bound
mov
lods
and
and
dec
pop
sbb
nop
add
sarl
dec
mov
mov
lods
popf
add
add
cli
and
adc
mov
inc
fld
add
push
add
jne
call
xlat
and
mov
pushf
lahf
push
or
xchg
insl
insb
mov
mov
mov
jae
add
dec
xchg
inc
add
je
add
cmc
mov
dec
sub
popf
test
add
push
clc
out
mov
lahf
pop
sbb
mov
icebp
rorl
cmp
gs
and
mov
jecxz
mov
or
mov
hlt
loope
pop
jg
mov
push
arpl
rolb
mov
rcrl
test
aam
cmpsl
push
movsb
and
mov
rolb
mov
xor
mov
mov
mov
mov
mov
rolb
dec
dec
fldenv
fistpl
mov
mov
add
lds
int3
or
add
mov
lahf
xor
mov
fcompl
sbb
push
mov
add
add
les
in
pop
sbb
es
in
cld
cmpsl
in
push
cmp
insb
in
and
lcall
mov
imul
add
dec
int3
jecxz,pt
push
and
mov
es
xor
incb
mov
mov
adc
sti
push
mov
ret
inc
push
sbb
push
add
rolb
call
xor
mov
or
add
arpl
adc
mov
add
and
mov
fisttpl
add
shll
mov
mov
and
and
mov
imul
cmp
out
popa
push
mov
xchg
repnz
hlt
xor
mov
jge
lods
pop
cmc
insl
testl
mov
jae
add
sbb
cmp
dec
sub
mov
dec
jbe
jg
xchg
xchg
sbb
into
push
push
add
pop
into
pop
in
idivl
out
push
hlt
pop
sti
pop
in
cli
mov
mov
mov
lret
push
dec
jmp
jbe
add
scas
jo
mov
repz
mov
call
add
jecxz
cs
mov
scas
addb
outsb
pop
hlt
add
add
insb
jns
and
mov
iret
into
filds
gs
pop
pop
shll
mov
xor
mov
sbb
aas
cmovnp
sbb
xchg
xchg
xchg
mov
add
push
add
inc
cmp
data16
or
add
push
addb
sub
add
stc
popf
out
or
add
scas
xor
mov
jmp
xchg
xor
mov
sahf
lods
addr16
pop
loopne
mov
addb
pop
sbb
pusha
add
adc
mov
idivb
add
xchg
scas
cwtl
fs
dec
or
pusha
add
imul
fwait
add
add
js
cmpsb
mov
inc
cltd
hlt
inc
arpl
pop
push
shll
xor
xor
jle
mov
faddl
pushf
cs
fisubrl
cwtl
dec
xor
mov
sbb
xchg
add
in
adc
add
pop
adc
mov
sti
inc
sub
cmp
call
sbb
je
aad
dec
out
add
addb
es
mov
test
inc
add
add
popf
jb
mov
jle
scas
lea
mov
sbb
sub
cwtl
neg
rolb
cs
fcmovu
push
mov
pop
in
jbe
jp
pop
aas
aam
xor
insb
fcompl
mov
mov
adc
mov
fwait
xor
mov
shll
mov
fildl
add
negl
lods
pop
and
add
cmp
sub
cmp
add
mov
xchg
push
dec
ss
cmp
mov
add
neg
and
in
fs
push
into
cltd
loop
mov
cmp
cmc
and
mov
mov
imul
aaa
and
mov
inc
sbb
add
rolb
mov
icebp
mov
fiaddl
cmc
push
add
sarl
add
add
subl
bound
mov
add
jno
int
mov
or
mov
scas
and
pop
pop
insl
out
add
daa
fidivrl
cmp
and
cli
es
addr16
mov
cltd
movsb
loopne
mov
or
add
movntps
aam
pop
mov
mov
leave
lret
add
push
mov
mov
jp
outsl
add
mov
mov
loopne
mov
in
test
add
mov
push
xor
add
cmpsl
mov
pop
push
add
add
imul
xchg
cli
mov
roll
sbb
xchg
xor
pushf
les
push
sub
adc
mov
arpl
add
mov
add
mov
call
cmpsl
xlat
xchg
lds
rolb
sub
gs
jl
mov
test
repz
jo
mov
sbb
pop
popf
addb
test
xor
push
lret
mov
rolb
mov
movb
test
and
fsubr
push
rolb
mov
lds
inc
pop
mov
add
aad
fcmovnbe
leave
imulb
xchg
imul
push
iret
mov
je
in
lods
pop
inc
add
add
dec
dec
movsl
mov
in
gs
add
xchg
lock
push
add
mov
or
mov
add
out
addb
cmp
add
es
add
xchg
add
out
mov
add
mov
fmulp
dec
jl
add
mov
mov
stc
cwtl
ret
ljmp
push
inc
cwtl
push
loopne
mov
sahf
adc
add
mov
jmp
add
add
jo
mov
addb
sbb
inc
testl
add
sub
xor
jg
fwait
rolb
mov
xlat
cmp
mov
aad
xor
mov
xchg
add
incl
faddp
into
cmpsl
aam
mov
mov
add
stos
jnp
add
test
inc
outsl
les
mov
mov
add
sbb
adc
mov
xchg
cs
popa
aam
fisubl
ret
or
cmp
dec
int3
ret
and
les
jne
jg
call
repz
mov
add
mov
mov
add
jp
xlat
test
or
shl
mov
mov
add
inc
add
rcrl
pop
or
push
add
cmc
sbbl
es
sti
insb
leave
push
nop
add
lods
js
adc
add
pusha
add
inc
ja
inc
mov
xor
scas
mov
pop
xchg
jl
add
rolb
mov
mov
add
add
adc
stc
dec
int3
adc
mov
mov
cli
mov
xor
add
xchg
mov
lea
push
add
fs
mov
add
repnz
mov
addb
mov
jg
jne
dec
shll
mov
cmpsb
cs
dec
das
inc
jecxz
loop
mov
jmp
ss
mov
mov
add
push
jo
mov
xlat
push
addb
mov
repnz
add
mov
jnp
inc
or
clc
hlt
test
jle
inc
jg
adc
mov
inc
add
test
push
add
sub
cmp
scas
lret
add
jle
add
add
aaa
lahf
mov
mov
inc
add
push
std
xor
mov
push
iret
cs
lock
sbb
or
hlt
push
out
ret
mov
fstpt
mov
lods
or
cltd
lods
jecxz
pop
xor
in
mov
mov
int3
pop
jne
cltd
orl
add
cmc
xor
mov
outsb
adc
mov
sbb
jmp
mov
add
add
cmp
cwtl
sar
add
mov
aas
cli
arpl
daa
add
mov
into
adc
add
test
cli
and
fsincos
cmp
stc
lods
stc
push
mov
push
add
mov
loope
stos
jnp
pop
test
mov
add
sbb
pop
repz
ds
sub
dec
push
sbb
std
pushf
mov
call
add
mov
stc
lods
arpl
mov
mov
std
in
dec
mov
mov
scas
loope
inc
xor
test
add
inc
icebp
imul
mov
pop
xor
in
test
jge
mov
pop
pusha
add
dec
lea
add
sub
inc
add
data16
mov
rolb
mov
add
xchg
sbbl
adcl
add
ss
pop
stos
shrl
push
add
mov
or
mov
push
add
pop
jg
mov
push
add
xchg
push
jmp
add
adc
mov
daa
xchg
or
hlt
jne
fnstcw
addb
mov
dec
sahf
bound
mov
stc
outsl
or
sub
add
incl
mov
xor
iret
and
mov
push
add
add
fmulp
lret
imul
sbb
movsl
and
mov
xchg
lods
sti
or
lcall
push
xor
jnp
xchg
cli
movsb
add
dec
push
jmp
add
repnz
call
adc
push
pop
and
lret
test
add
or
lret
push
xorl
add
add
push
add
dec
inc
pop
lret
add
push
mov
out
mov
push
mov
add
pop
and
xchg
scas
ficoms
mov
mov
add
pop
out
out
xchg
ss
push
cmpsl
sbb
and
mov
mov
stos
cmp
jg
jb
mov
insl
outsb
outsl
rcll
add
xchg
cli
clc
lahf
xchg
mov
in
add
add
lahf
xchg
xchg
jns
test
jbe
add
into
add
mov
mov
mull
add
add
cmp
in
push
inc
add
addb
test
add
adc
mov
add
mov
mov
mov
addb
cld
pop
int
pop
incl
mov
mov
dec
aas
cmp
pop
addb
inc
mov
xchg
pop
mov
mov
arpl
add
mov
and
mov
in
cmpl
rolb
mov
test
stos
addr16
pop
pop
popa
addl
add
add
in
std
xchg
cmpsb
nop
add
mov
add
add
push
lret
sub
push
das
xchg
add
jo
mov
mov
pop
stc
cmp
cmp
cmp
add
ret
adc
movsb
or
sbb
movsl
add
mov
sbb
add
mov
dec
int
xchg
jnp
repnz
add
test
cmp
hlt
lahf
xchg
loope
jnp
push
cmc
xchg
inc
fisubs
lcall
sbb
or
add
sahf
inc
add
repnz
decl
add
adc
hlt
mov
inc
fisttpl
sti
lods
adc
mov
add
das
es
orl
sub
lds
mov
add
in
sbb
fcmovne
mov
or
pusha
add
add
or
bound
mov
mov
jns
mov
mov
inc
add
mov
push
sbb
inc
xchg
lock
cmpsb
add
lock
push
ljmp
cmp
lock
mov
addb
lds
mov
rolb
mov
stos
std
inc
lea
adc
mov
xor
mov
sbb
popf
jge
add
mov
add
leave
rolb
mov
enter
in
xor
loopne
mov
add
add
aam
out
in
adc
sub
insl
xor
adc
add
bound
mov
mov
hlt
into
jbe
mov
cmp
jmp
gs
sbb
std
push
mov
add
mov
mov
clc
pop
xchg
subl
mov
out
pop
ret
aaa
dec
xor
add
inc
add
out
aas
mov
fst
mov
mov
mov
mov
mov
add
negl
jge
rolb
mov
add
mov
add
add
psllw
add
mov
bound
mov
xlat
repnz
bound
mov
test
mov
fisttpll
rcll
push
push
or
add
jl
cmp
jno
mov
or
or
jae
cmp
movsl
ljmp
mov
lea
lea
add
out
mov
mov
mov
add
test
inc
mov
mov
rolb
mov
test
mov
mov
lahf
or
mov
ds
enter
in
dec
add
mov
ljmp
lret
xchg
inc
ss
sti
stc
shll
jge
jno
push
dec
mov
jo
mov
push
dec
mov
out
add
mov
push
adc
repz
bswap
xchg
sbb
sub
repz
mov
mov
addb
aam
inc
inc
movsl
inc
add
add
sub
sbb
dec
sbb
popa
pop
push
add
mov
in
cmp
arpl
idivl
add
pop
dec
imul
ret
rolb
insl
insl
das
in
inc
leave
test
sub
dec
fs
add
jae
fisubrl
inc
add
cwtl
pop
mov
insl
push
subl
mov
jne
repnz
fsubr
int3
subl
jp
cli
xchg
add
mov
movsb
stos
sub
xchg
cld
inc
add
scas
movsb
jbe
push
cmp
sbb
inc
dec
sub
add
push
shll
jmp
add
mov
jnp
icebp
adcl
mov
xor
mov
and
mov
dec
cmp
lret
rolb
mov
mov
mov
test
cmc
add
fidivrs
push
cmp
sbb
je
test
stos
addl
push
test
add
mov
cmp
cs
lea
popl
mov
dec
and
add
das
cmc
aas
and
add
jo
mov
test
pop
mov
add
cld
inc
add
mov
xchg
xchg
add
outsl
cmp
mov
add
add
mov
lock
add
xchg
decb
sbb
jno
mov
dec
clc
mov
lret
or
jmp
sub
push
mov
inc
or
add
fs
cwtl
pop
jno
or
xchg
mov
add
dec
je
ljmp
or
loope
add
inc
mov
or
add
insb
das
cmc
in
fisubrs
add
add
inc
test
lret
inc
mov
cld
lsl
ds
mov
mov
and
insl
pop
push
ja
xchg
out
mov
add
push
pop
jg
add
mov
movsb
out
jg
repz
sub
rcll
test
mov
mov
inc
dec
ret
lods
popf
push
cmp
outsb
in
xor
int
sub
mov
push
mov
jne
popa
xor
cltd
rolb
push
stos
xor
mov
divl
push
dec
xor
sti
lahf
cmp
sbb
add
push
test
aas
test
insb
mov
push
insl
mov
mov
test
jno
cmp
cmp
int3
lods
sbb
out
test
sahf
sub
dec
xchg
std
dec
cmpsb
mov
mov
enter
cli
outsb
inc
repnz
add
lret
out
jns
jns
sub
add
int
cmp
push
add
adc
mov
inc
xor
js
stc
lahf
sbb
pushf
imul
add
add
mov
mov
mov
mov
add
mov
outsb
into
stos
jmp
mov
mov
mov
sti
push
add
ret
mov
pop
mov
xchg
dec
add
inc
add
add
add
test
or
rolb
mov
fs
int
sbb
fwait
lods
sbb
mov
add
sti
lret
mov
xchg
decl
mov
add
push
or
add
mov
cmpsl
scas
dec
jne
data16
lret
pusha
add
mov
divb
aaa
pop
jne
lods
cmc
inc
fsubrl
das
insl
and
mov
sub
fisttpll
cmp
out
rolb
test
and
mov
mov
mov
lods
dec
call
popf
cmc
fistl
stc
in
je
iret
mov
lret
ljmp
mov
jne
rolb
dec
adc
mov
mov
adc
add
add
add
push
add
das
xor
mov
inc
add
jl
xchg
add
testl
pop
outsl
leave
add
mov
lret
jno
aad
cld
sub
lods
and
mov
add
daa
cmp
add
fcomps
dec
popf
int
add
xor
mov
mov
jae
outsb
out
add
mov
pop
insl
aad
add
add
mov
fwait
ror
lock
das
imul
and
sbb
test
add
mov
cmpl
mov
add
cld
xchg
lods
call
repz
mov
jle
jg
cwtl
lcall
pop
dec
movsl
daa
mov
inc
mov
shll
mov
addb
bound
mov
pop
lcall
int3
xor
lcall
lds
inc
adc
add
and
mov
lahf
and
aam
sti
mov
mov
sbb
adc
sub
mov
or
inc
add
add
mov
add
cmp
cwtl
nop
add
cmpl
add
fcomps
fld1
add
mov
sbb
push
add
subl
mov
xchg
stc
xor
mov
sbb
mov
dec
add
cwtl
push
mov
mov
mov
mov
movl
out
addb
pop
push
vpsrld
mov
sbb
mov
orl
mov
mov
data16
add
adc
adc
mov
mov
outsl
out
and
add
icebp
pop
out
add
mov
cmc
mov
mov
mov
lock
int3
pop
add
mov
cmp
sbb
add
nop
add
cmp
add
pop
cmpsl
loop
mov
js
add
push
adc
les
sbb
adcl
push
add
jmp
ret
repz
fsubrl
in
cmp
add
mov
scas
int
add
sbb
jl
and
mov
imul
ret
dec
or
ja
mov
and
sub
les
in
out
xor
mov
fidivl
mov
jb
mov
enter
mov
mov
mov
mov
test
pusha
add
or
iret
fnsave
xchg
add
inc
mov
xor
mov
add
mov
mov
add
jecxz
pop
pop
sub
add
mov
mov
mov
add
leave
test
addr16
test
and
addb
inc
aas
push
mov
add
mov
ds
adc
jae
push
jl
cmp
pushf
push
xor
and
mov
cmp
xchg
add
mov
mov
ja
es
adc
imul
mov
fwait
inc
add
jecxz
or
sti
jmp
mov
mov
pop
je
push
add
pusha
add
stc
jmp
add
lret
push
cmp
loope
les
rolb
pop
add
testb
mov
add
xchg
pop
arpl
mov
add
scas
stos
outsl
jmp
pop
iret
mov
mov
cmpsb
imul
jp
xchg
cmp
add
stos
shll
add
add
push
xchg
sti
mov
jmp
jno
ljmp
add
insl
jg
in
imul
pop
add
push
cmc
stos
mov
mov
imul
add
in
and
in
mov
add
rolb
sub
xchg
add
jne
jnp
sbb
mov
add
or
hlt
xchg
add
pop
cld
fnsave
fwait
pop
sti
and
xadd
mov
mov
mov
scas
dec
jno
add
inc
inc
fwait
lds
mov
insl
cli
push
add
dec
xchg
add
mov
add
test
repnz
inc
aaa
dec
xor
mov
int3
testl
mov
add
mov
xor
outsl
and
mov
fisubrl
pop
xchg
aam
imul
popa
sub
rolb
lds
add
scas
clc
push
dec
fnstcw
pop
xchg
xchg
add
xchg
mov
mov
leave
imul
inc
je
mov
cltd
aam
push
mov
mov
push
add
lret
imul
out
jmp
shl
inc
or
xor
lods
and
das
jne
jno
shll
rolb
fdivrl
shl
cld
xchg
pop
and
bound
mov
add
xchg
js
test
or
pop
push
jnp
stos
stc
lea
add
ss
vpshab
sbb
mov
movsl
fcompl
add
push
pop
mov
sub
sub
add
fisubrl
jo
mov
sti
rolb
mov
add
neg
ja
sbb
adc
rolb
mov
push
add
pop
negl
daa
xchg
test
jge
add
popa
pop
fistpl
or
nop
add
add
xor
mov
adcl
xchg
lret
or
push
jnp
or
fyl2x
mov
add
mov
mov
repnz
mov
mov
stos
xchg
jo
mov
imul
add
push
sub
mov
dec
negl
sub
cld
jp
cmpsl
dec
xlat
mov
mov
shrl
fcom
mov
sbb
push
xchg
stc
mov
add
add
push
and
mov
jp
test
pop
push
lahf
jnp
add
mov
in
cmp
pop
add
mov
mov
xchg
mov
int3
addb
and
mov
jae
pusha
add
add
rolb
mov
in
rolb
mov
push
dec
or
or
dec
cs
mov
mov
fistpl
pop
into
pop
xchg
add
add
mov
cmp
push
adc
js
add
mov
cmp
add
push
rolb
loopne
mov
inc
fs
repnz
mov
mov
dec
out
sahf
in
add
mov
xor
mov
add
movsl
inc
add
mov
in
mov
add
xchg
aaa
out
push
add
and
mov
ret
stc
imul
xchg
mul
add
cli
add
mov
inc
mov
aad
insb
movsb
xor
ret
sub
sti
mov
sub
adc
mov
add
js
movsb
sbb
dec
jno
inc
into
adc
mov
enter
mov
fmulp
cwtl
inc
add
movq
push
push
insl
out
push
jmp
out
dec
pop
aaa
das
jo
mov
add
add
push
gs
add
aam
push
or
mov
rolb
mov
test
data16
jne
add
add
mov
fs
gs
nop
add
aam
imull
and
mov
fimuls
imul
repz
mov
mov
arpl
jge
push
in
adc
inc
add
sbb
lock
in
into
push
test
inc
jae
aad
loop
mov
les
mov
lds
fdivrl
addb
mov
add
mov
mov
pusha
add
insb
lahf
xchg
xor
push
lret
sub
xchg
or
mov
xlat
pop
out
push
mov
sbb
dec
pop
loopne
mov
mov
mov
cmpsl
addb
fimuls
cld
xchg
add
mov
add
mov
mov
out
pop
pop
push
or
cs
stc
and
cmp
repnz
lahf
int
mov
test
dec
xchg
pop
sbbl
mov
out
inc
add
push
pop
mov
inc
sub
add
les
nop
add
shrl
jns
enter
jg
inc
cmp
pop
ja
or
cld
dec
lea
ss
test
sub
add
add
add
mov
add
mov
hlt
iret
lahf
sti
imul
dec
adc
mov
add
inc
insb
movsb
repz
add
addr16
xchg
loope
sbb
jle
das
ds
inc
mov
add
mov
add
dec
pushl
aaa
scas
xor
push
jecxz
int
idivl
loopne
mov
push
or
mov
xchg
cld
mov
neg
test
daa
push
xchg
jno
adc
cs
es
enter
ljmp
pushf
icebp
mov
test
push
add
fistpll
add
jo
mov
push
popl
add
mov
scas
cltd
mov
add
mov
mov
stos
adc
adc
cld
mov
mov
xlat
mov
pop
xor
add
add
mov
mov
lcall
add
xor
inc
xor
mov
std
inc
add
or
lcall
icebp
mov
mov
pop
mov
mov
pop
and
fnstsw
dec
pop
mov
adc
push
mov
movsl
inc
cmp
xor
test
and
mov
fildl
stc
outsl
aad
ffree
xor
pop
xor
insl
rolb
add
les
mov
lods
iret
or
add
cmp
rolb
mov
out
fmull
data16
scas
adc
cld
ffreep
add
and
inc
pop
push
fsubrl
add
scas
mov
add
adc
mov
cmp
sbb
add
addr16
xor
mov
mov
mov
rolb
mov
add
xor
test
lods
jns
inc
lock
push
add
add
xchg
cs
push
imul
mov
mov
mov
jmp
jnp
cmp
mov
ljmp
push
cmp
sub
mov
in
bound
mov
xchg
push
popf
daa
cltd
aas
fists
add
addb
push
sbbl
add
add
jnp
mov
xor
inc
add
add
mov
add
mov
adc
or
cmp
add
and
mov
add
dec
jge
inc
xor
mov
lock
mov
dec
dec
or
sub
ds
mov
mov
insb
cmp
mov
sub
inc
adc
mov
sbb
mov
shll
cmp
in
add
imul
push
add
add
push
add
cmp
cmp
dec
pop
scas
cmp
jl
fdiv
pop
xchg
add
test
adc
cli
jae
adc
mov
scas
lock
mov
inc
sti
addl
jnp
inc
add
and
mov
mov
pop
mov
mov
out
int3
ss
sub
pop
mov
add
movsb
xor
add
add
cmp
jo
mov
arpl
enter
pop
or
scas
push
arpl
mov
mov
icebp
ds
xor
mov
fs
cmpsl
push
push
xchg
cli
dec
mov
mov
mov
das
cmpsb
int
add
mov
add
pop
inc
and
icebp
xchg
mov
cmpsb
xor
sub
ds
int
pop
mov
mov
in
cmp
outsb
in
cld
and
adc
dec
js
inc
add
xorl
add
add
iret
fidivrs
sbb
dec
pop
lcall
xchg
mov
pop
adc
mov
or
add
shrl
lret
jle
add
add
fbld
mov
lcall
call
and
push
push
mov
cmp
cmp
cs
subl
ja
into
or
add
mov
jge
xorl
add
adc
ljmp
mov
sbb
add
lret
fisubrl
enter
push
add
setp
test
mov
mov
stos
inc
add
lret
mov
movsb
xchg
add
sbb
jmp
outsb
dec
sub
cwtl
pop
fdivr
ret
sbbl
gs
inc
mov
hlt
mov
add
insl
mov
push
add
rolb
mov
add
sbb
inc
mov
pushf
shll
add
adc
rcr
insl
test
sbb
add
add
mov
arpl
push
add
xor
mov
mov
cli
jmp
bound
mov
sub
add
add
push
test
fs
xor
add
jnp
cltd
jbe
pop
mov
add
dec
dec
push
fs
mov
inc
add
mov
xchg
fisttpll
or
iret
jl
scas
out
lea
aas
mov
lret
jnp
into
mov
inc
test
push
cli
cmc
add
add
mov
jno
mov
les
add
outsl
sbb
mov
cli
test
lock
ss
push
addb
lds
jecxz
inc
movsb
in
sub
insb
arpl
in
add
inc
lea
test
adc
mov
ss
cmpsb
jle
pop
rep
scas
mov
or
add
dec
negl
and
mov
dec
inc
in
dec
dec
jmp
cmpsb
fidivl
add
movsb
popa
add
fisttpll
add
pop
imul
dec
push
add
add
xor
add
stos
mov
int
leave
fwait
xorl
add
push
add
mov
ja
rolb
dec
push
mov
outsb
lret
rolb
mov
mov
xor
mov
xchg
mov
mov
xor
fisttpll
sbb
cmp
lock
adc
jl
push
add
inc
adc
add
subl
add
jmp
pop
adc
mov
movsb
inc
lcall
addr16
cmp
add
cmp
in
push
pop
push
add
add
out
cmp
fcmovnbe
add
add
lret
aas
aad
jnp
rcrl
inc
push
or
addb
xchg
aam
cmp
mov
mov
cmp
pop
sbb
xchg
adc
add
shrl
inc
fidivs
out
push
push
dec
clc
xchg
cltd
push
push
outsb
dec
and
inc
xor
in
add
jmp
add
add
fsubrl
add
add
mov
outsb
and
mov
sub
jne
add
add
add
or
jle
fildll
jne
add
add
add
mov
test
xchg
jl
push
ljmp
add
mov
cltd
fwait
call
pushf
and
pushf
mov
or
or
lret
xchg
pop
test
xchg
add
insb
stc
in
sti
sahf
in
adc
fcomps
int3
ret
xor
push
dec
pop
push
adcl
adc
jae
inc
sub
lahf
jmp
add
hlt
test
add
mov
add
jnp
in
cli
sbb
push
sbb
mov
jo
mov
xchg
imul
push
dec
stos
mov
loopne
mov
adc
mov
pop
int3
lcall
lods
inc
es
push
add
dec
jne
lods
leave
in
ret
sbbl
mov
add
adc
mov
push
scas
mov
mov
jg
mov
cmp
int
or
jmp
dec
xchg
movsb
fidivs
add
mov
int
add
adc
mov
xchg
add
insb
fnstenv
mov
mov
lds
add
aad
jecxz
ss
pop
pop
pop
scas
ljmp
sbb
iret
sti
adc
mov
addb
mov
mov
or
shrl
jne
xchg
in
popl
loopne
mov
lock
add
and
add
enter
in
push
insb
mov
mov
cmpsb
sbb
add
ljmp
xchg
in
pop
js
jb
mov
cmpsl
jmp
rolb
pop
stc
cmp
mov
mov
add
mov
xlat
mov
mov
das
lods
mov
jp
dec
lidtl
cmp
sub
add
mov
xchg
cwtl
push
xchg
aam
fisubrs
mov
divl
into
mov
mov
xor
mov
lahf
adc
push
xor
mov
xor
mov
mov
pop
xchg
popa
pop
in
sahf
adc
scas
ret
mov
mov
jb
mov
add
je
rolb
mov
add
xchg
pop
iret
scas
fisttpll
arpl
push
mov
xor
pusha
add
mov
mov
bound
mov
enter
test
cwtl
dec
aam
insb
in
sub
or
mov
dec
inc
cli
mov
xchg
add
js
inc
xchg
std
rolb
sub
lods
rolb
mov
mov
outsb
mov
add
repnz
add
mov
dec
mov
js
xchg
cmpsb
xor
jmp
insl
stos
push
xor
add
add
popf
inc
mov
mov
jmp
xor
mov
jae
jg
and
repz
fnsave
stc
in
inc
test
clc
mov
mov
mov
pop
jecxz,pt
inc
push
testb
mov
add
test
rolb
mov
add
cmp
and
mov
repz
bound
mov
add
push
xor
push
add
lods
scas
imul
out
mov
rolb
add
shll
add
add
pop
mov
aad
jne
mov
fimuls
fwait
sub
stos
cmpsb
cmc
in
aas
mov
mov
sub
pop
cmpsb
fdivl
add
mov
mov
and
mov
pop
es
inc
adc
add
push
aad
jne
dec
push
movsb
xchg
push
dec
rolb
mov
xlat
test
pop
cmp
or
lcall
jp
repnz
fs
add
mov
add
sbb
bound
mov
popa
nop
add
mov
cmp
icebp
mov
mov
dec
imul
add
dec
repnz
pop
frstor
xchg
mov
sbb
add
test
adc
mov
sti
inc
nop
add
call
negb
mov
add
fisubl
cmp
loopne
mov
cmc
lret
and
mov
inc
add
mov
scas
pop
das
ljmp
push
mov
xor
mov
call
jns
jmp
cld
loop
mov
cld
push
inc
neg
jl
add
std
adc
add
leave
lock
mov
pop
cmp
mov
lea
xchg
add
xor
push
pop
pop
stos
mov
mov
inc
adc
mov
sbb
scas
push
add
test
fistps
faddl
mov
xchg
jecxz
add
pop
or
pusha
add
add
sbb
or
push
das
loope
push
inc
movsb
adc
mov
das
xchg
add
and
fstpt
mov
das
xor
lcall
jg
bound
mov
push
add
pop
xor
add
sub
push
cmpsl
pushf
push
sub
jl
loop
mov
mov
rolb
mov
fdivrl
sbb
sub
fists
add
repz
xchg
jb
mov
ljmp
test
mov
mov
jmp
lret
in
cmp
inc
int3
push
sbb
add
lahf
shll
fstp
push
rolb
mov
dec
mov
cmc
in
movd
mov
add
in
fwait
in
out
ret
lcall
push
adc
fwait
outsb
mov
mov
incl
sub
add
fs
or
jle
add
sub
push
das
pop
nop
add
xchg
add
mov
stc
mov
and
xchg
outsl
fstpl
cmp
jle
add
add
mov
pop
xchg
xchg
dec
test
and
mov
xchg
xor
rcrl
mov
cltd
and
ror
jo
mov
cmp
mov
add
mov
jp
and
mov
cld
lock
mov
add
add
shl
add
es
dec
xchg
fmull
xor
push
ljmp
divb
pop
inc
pop
das
in
rcl
aam
adc
mov
leave
mov
add
stos
pop
sbb
cmp
rcrl
add
aaa
fisubrs
dec
out
insl
inc
inc
add
in
or
cmp
xchg
jbe
out
xor
push
push
pop
subl
jl
add
pop
or
add
jae
add
mov
add
cmp
sub
adc
mov
add
add
cmc
pop
or
imul
add
add
push
xlat
xor
inc
jb
mov
mov
mov
add
mov
push
add
mov
sub
inc
std
pop
inc
insl
xor
mov
sbb
add
pop
rcll
add
ret
arpl
pop
dec
shrl
cmp
aaa
lret
imul
aad
mov
jnp
push
pop
adc
mov
mov
lcall
jmp
outsb
clc
ret
dec
mov
out
jne
pop
in
leave
cltd
mov
push
add
push
add
mov
add
add
push
ficomps
in
adc
mov
inc
lds
sub
or
mov
test
aaa
mov
pop
daa
fsub
rcll
out
inc
xor
mov
adc
pop
and
add
rolb
mov
ljmp
add
sub
pop
lret
outsl
stos
lock
ja
repnz
sahf
add
xlat
in
cli
mov
inc
scas
test
loope
int3
test
add
push
adc
pop
sbb
mov
test
add
add
or
aam
int
addb
jb
mov
icebp
jmp
scas
inc
sti
scas
push
add
push
add
adc
add
lret
fstps
dec
scas
popf
enter
jbe
mov
add
inc
add
push
inc
add
outsl
inc
cmc
mov
mov
add
sti
imul
fadds
mov
aas
lock
lock
mov
clc
adc
sub
pushf
imul
adc
mov
xchg
popa
iret
nop
add
mov
adc
pop
rolb
mov
mov
test
mov
mov
xchg
ficompl
scas
les
mov
je
insb
out
pop
jne
push
idivl
inc
fildll
je
das
add
sbb
add
mov
adc
mov
xor
add
push
sahf
rolb
mov
loopne
mov
dec
into
push
sub
mov
ds
jle,pn
add
lret
and
and
mov
fwait
daa
jne
ret
mov
pop
into
inc
inc
cmp
sbbl
add
xchg
push
out
cltd
cmp
inc
rolb
mov
lods
push
add
mov
cld
mov
fstl
mov
mov
mov
xor
mov
lret
lea
pop
std
sbb
adc
stc
mov
jb
mov
add
cs
add
add
mov
pusha
add
dec
mov
jb
mov
leave
scas
jmp
inc
add
add
xor
fbstp
iret
cld
xchg
push
jp
dec
dec
gs
mov
jb
mov
es
adcl
add
cmp
add
mov
mov
sub
xlat
fs
add
mov
std
pop
mov
in
icebp
lods
mov
xor
pop
out
jbe
arpl
xor
mov
mov
fs
iret
in
shrl
test
je
cmpsl
inc
jmp
pop
cmpsl
mov
scas
dec
not
pop
xlat
pop
adcl
mov
aaa
xchg
and
add
dec
insb
jl
and
iret
sbb
jo
mov
data16
lret
insb
xchg
xchg
sbb
stos
pop
icebp
push
stos
and
and
mov
sbb
dec
cmp
movsb
push
mov
mov
aad
mov
clc
repnz
add
mov
mov
add
cltd
inc
or
imul
add
add
mov
mov
add
push
orl
dec
cmp
pop
cltd
mov
stos
cmp
mov
out
pop
scas
xchg
mov
adc
sbb
aas
popa
scas
xchg
jle
movsl
fwait
imul
push
popa
push
xchg
dec
sbb
jmp
cmc
mov
mov
rolb
inc
add
sbb
add
adc
jb
mov
sub
pop
scas
jno
push
add
mov
cmpsl
fwait
addb
es
out
lret
push
fldenv
icebp
cld
mov
jg
out
pop
imulb
mov
add
addb
xor
mov
lcall
add
in
sub
popl
add
mov
test
push
addb
aas
jg
mov
pop
adc
mov
add
pop
push
add
add
jnp
and
inc
mov
add
mov
sbb
push
inc
loop
mov
push
hlt
mov
cmp
imul
mov
mov
rolb
mov
mov
jmp
inc
add
lods
fdivs
xor
sub
mov
and
sub
add
add
aas
xchg
and
in
push
nop
add
test
mov
scas
cs
add
mov
cmovge
stos
push
mov
pop
gs
daa
xlat
or
or
and
sbbl
sahf
fadd
add
mov
push
inc
sbb
addr16
xor
mov
cmpsl
lret
mov
mov
dec
mov
out
sti
mov
pusha
add
pop
pusha
add
mov
pop
ds
mov
xchg
push
mov
xchg
cmp
cmc
mov
mov
mov
repz
mov
dec
dec
xchg
add
sti
jle
push
test
jne
scas
pushf
mov
push
fsubl
or
stc
sub
cmp
mov
lds
mov
mov
jl
adc
mov
add
rolb
pop
xchg
mov
sbb
addb
rolb
mov
insl
orl
dec
dec
cmpsb
mov
add
jge
jl
addb
xchg
add
jle
daa
test
mov
mov
pop
mov
mov
add
dec
cmc
push
jl
shll
mov
adc
cmpsb
jbe
mov
cmp
repz
xchg
sbb
mov
imul
push
add
daa
xchg
add
add
dec
cwtl
ds
cmp
dec
je
add
mov
jp
cmp
orl
mov
mov
ret
mov
xchg
dec
sbb
mov
mov
in
or
mov
add
sub
jmp
add
mov
mov
add
fistl
add
mov
inc
adc
lret
push
cmp
movb
mov
add
mov
sub
mov
loope
addb
and
ljmp
add
outsb
aas
push
add
jb
mov
mov
add
pop
les
add
add
mull
sahf
pop
xchg
xchg
pop
mov
add
shrl
push
out
cmp
inc
mov
mov
mov
add
add
fcmovbe
add
aas
jb
mov
es
fistl
and
cwtl
jb
mov
jae
ficoms
addw
call
xor
add
sbb
imul
lret
inc
add
mov
sahf
pop
push
aad
loopne
mov
add
push
addr16
loop
mov
push
scas
movl
or
mov
mov
dec
fistl
into
pushf
push
add
dec
leave
cmp
mov
adc
inc
and
mov
or
sti
sub
add
jl,pt
sahf
and
mov
add
or
add
sub
xchg
and
add
mov
add
and
psrlq
mov
add
cmp
xchg
add
push
test
repz
int
cltd
or
hlt
movsl
lods
inc
add
add
mov
test
test
aam
insb
mov
ds
popa
test
sub
repz
push
xchg
mov
mov
push
sarl
mov
fsts
cmp
pop
adc
cli
mov
in
fsts
mov
or
mov
cmp
add
pop
add
pcmpeqw
dec
push
jae
add
mov
add
ljmp
fwait
cmp
out
fistl
mov
pop
addb
sub
xchg
xchg
mov
hlt
daa
inc
jmp
jb
mov
mov
push
lret
mov
stos
mov
mov
pushl
add
sbb
or
add
mov
mov
fcomps
add
lock
xor
daa
lcall
mov
test
or
fdivrl
out
mov
mov
pop
cld
jb
mov
add
test
fsub
lcall
add
roll
or
lods
mov
test
add
xor
mov
jnp
add
push
mov
pop
mov
xlat
jecxz
icebp
sbb
jp
out
mov
add
mov
add
mov
in
idivb
je
icebp
sub
leave
sub
add
adc
popa
push
add
mov
das
sbb
out
cmpsb
in
push
mov
int3
cmp
add
daa
adc
xor
mov
sub
sub
xor
mov
outsb
lods
xchg
popf
std
xor
jb
mov
clc
push
dec
sub
add
addb
les
test
in
cmpsl
rcrl
rolb
add
mov
dec
out
add
dec
or
and
mov
mov
cld
dec
es
xor
mov
icebp
out
add
add
addb
pop
in
and
mov
cli
mov
cmp
mov
add
push
add
int
push
mov
notl
push
stos
jae
pop
aas
ret
ds
loope
ds
add
mov
popf
or
mov
test
aam
xchg
mov
and
mov
xchg
fndisi(8087
sbb
add
mov
add
callw
mov
xor
mov
adc
mov
jb
mov
mov
push
pop
pop
push
add
fbstp
rolb
mov
sbb
pushf
mov
js
stc
popa
cs
add
pop
sti
cltd
and
or
mov
mov
stos
repnz
and
and
mov
lcall
mov
pop
imul
add
mov
add
mov
aas
inc
add
mov
xchg
insl
sub
movsb
cmp
lds
dec
mov
lods
lea
loope
xchg
cmp
add
insb
les
push
xchg
fnsave
imul
jp
or
stos
or
jae
int3
cmpsl
pop
icebp
push
mov
xor
addb
sbb
outsb
cmp
in
dec
jb
mov
adc
imul
add
adc
inc
mov
add
hlt
lret
xlat
call
add
lds
jae
push
xchg
js
push
push
push
push
or
mov
aas
cmp
add
mov
inc
pusha
add
mov
adc
mov
add
mov
jo
mov
cmp
sarl
cmp
mov
fld
fcoms
mov
mov
sub
into
push
rolb
aad
add
mov
cmpsl
inc
stos
int3
fiaddl
mov
mov
add
add
jecxz
les
add
mov
fwait
cltd
imul
jne
cmc
inc
pop
add
loop
mov
pusha
add
mov
push
xchg
lret
inc
xchg
jl
xchg
adcl
sbb
adc
sahf
jnp
adc
in
jb
mov
mov
add
lret
add
mov
mov
push
sub
jno
adc
push
jne
push
sub
rolb
mov
rolb
mov
xchg
adc
in
sub
rolb
mov
mov
mov
xor
mov
sub
xchg
add
stc
gs
add
and
mov
mov
mov
add
or
mov
fstpt
rolb
mov
fbld
mov
add
push
sbb
pop
xchg
aaa
lods
icebp
insb
repnz
leave
lcall
in
into
dec
pushf
fs
testb
cltd
rorl
mov
lcall
add
xchg
pop
jae
jno
icebp
in
pusha
add
mov
stc
out
pop
test
in
sarl
mov
addb
dec
aas
or
push
hlt
push
mov
lret
or
or
cmp
int3
cmpsb
int
out
pop
push
xchg
je
imul
add
mov
or
ss
sub
ds
out
jbe
sub
xchg
push
pop
jne
jle
add
push
fwait
jmp
inc
add
aad
daa
push
jo
mov
add
cmp
out
cmpsl
mov
rolb
mov
ret
dec
loop
mov
push
inc
out
add
add
mov
ja
jns
out
add
mov
xchg
add
mov
inc
add
pop
inc
mov
dec
cwtl
arpl
mov
mov
scas
mov
loop
mov
test
shrl
jns
insb
mov
add
outsb
imul
dec
xlat
mov
cs
cmp
add
adc
add
pop
push
jo
mov
fbstp
mov
outsl
cli
shrl
mov
ret
push
add
neg
scas
enter
cltd
sbb
bound
mov
add
and
mov
add
add
add
mov
imul
pop
shll
mov
mov
test
add
jbe
adc
movsl
jmp
xor
mov
out
fmull
in
ret
mov
xchg
inc
add
mov
fistps
adc
adc
mov
sub
pop
cmp
fwait
mov
insb
adc
pop
js
sub
mov
imull
mov
mov
pop
in
stc
jo
mov
je
add
addr16
cwtl
movsl
cmp
ret
loop
mov
rcll
add
xchg
or
add
add
rolb
mov
push
fmuls
leave
ja
dec
jne
jne
pop
gs
addb
xchg
add
cli
push
xor
mov
sbbl
mov
add
mov
mov
add
int
add
mov
add
add
sub
sbb
popf
lods
mov
and
dec
fisttpl
fwait
xchg
jae
fisubl
push
add
mov
push
add
adc
mov
mov
mov
js
mov
aad
cmpsl
stc
loop,pn
mov
mov
iret
xor
mov
jne
xchg
push
pushf
cmp
add
push
dec
dec
bound
mov
add
int
xchg
jo
mov
mov
sbb
mov
rolb
mov
dec
call
rcll
adc
mov
add
fistps
and
xchg
jbe
add
stos
xchg
sub
inc
mov
mov
xor
mov
adc
roll
jg
cmp
imul
mov
add
mov
lods
ficoml
cld
inc
test
xchg
sub
mov
pop
test
xor
data16
call
lcallw
or
add
fwait
sahf
js
lcall
movsb
mov
mov
add
and
dec
cmpsl
mov
mov
mov
inc
aam
insl
test
insb
jge
xchg
and
mov
negb
push
xchg
add
mov
mov
add
rorl
scas
outsl
push
leave
hlt
ret
ret
in
inc
add
inc
loopne
mov
mov
sub
xchg
jae
clc
ds
sti
add
mov
icebp
cltd
into
jmp
xchg
pop
sub
lock
add
sbb
js
xchg
add
mov
out
xchg
pop
js
sar
mov
mov
cmp
insl
inc
addb
cwtl
mov
lock
imul
mov
adc
mov
mov
jb
mov
fisttpll
imul
mov
rcl
dec
test
mov
sti
dec
out
cmpsl
je
or
jmp
cmp
add
adc
fildl
inc
hlt
sub
mov
jns
sub
add
in
inc
inc
add
mov
mov
add
mov
push
sub
pop
cmc
sub
or
cmpsb
movsb
xor
fsubrs
out
or
sub
add
mov
mov
mov
sub
and
cltd
adc
push
push
xchg
adc
mov
mov
mov
shll
mov
mov
and
add
xchg
insb
inc
ret
push
push
inc
add
and
mov
jge
xor
mov
sub
fbstp
mov
jecxz
inc
mov
add
mov
fmuls
push
lds
add
adc
mov
add
cmpsl
xor
mov
call
gs
pusha
add
add
ret
jp
adc
add
mov
call
loop
mov
std
out
mov
sbb
add
adc
call
popf
sub
cmp
mov
mov
sbb
mov
mov
mov
cld
xchg
aaa
adc
mov
add
sub
jo
mov
add
xor
mov
fsubl
add
mov
in
push
mov
push
xchg
mov
push
sub
sub
es
rolb
mov
sbb
xor
mov
mov
notb
inc
add
mov
outsb
jne
xchg
fbld
mov
mov
add
mov
sub
mov
fdivs
add
push
xor
insb
sub
sbb
mov
repnz
inc
and
add
dec
int
and
addb
ss
xchg
lds
jb
mov
mov
test
loope
loopne
mov
test
idiv
popf
or
push
mov
cld
pop
cmp
pusha
add
add
cltd
mov
mov
iret
dec
sbb
out
add
mov
aam
popf
cld
dec
pop
je
mov
adc
dec
repz
mov
mov
lcall
add
cltd
or
cltd
fdivs
add
mov
mov
mov
add
sub
and
mov
mov
add
mov
pushw
fwait
cmp
inc
insb
push
ret
hlt
xchg
rorl
add
xor
add
aaa
dec
push
add
mov
sub
test
or
xchg
add
xchg
inc
or
xchg
add
mov
and
nop
add
xor
mov
jb
mov
mov
repnz
mov
adc
scas
pop
js
sub
add
add
add
bound
mov
add
cmp
test
insl
sub
mov
add
ss
movsb
mov
imul
mov
inc
add
add
mov
xor
mov
sub
sbb
insb
dec
cmp
add
lock
bound
mov
cld
or
mov
movsl
push
dec
sahf
mov
nop
add
push
cmpsb
sarl
sbb
stos
xchg
mov
lret
xchg
add
pop
push
inc
lahf
xchg
dec
stc
pop
cmp
lock
inc
addr16
lods
mov
or
add
jae
rcr
das
cwtl
sbb
jmp
clc
and
jecxz
inc
daa
mov
jmp
cwtl
stos
sahf
shll
mov
loop
mov
mov
or
lock
mov
loopne
mov
sub
pop
popf
addb
lds
mov
jmp
jne
xlat
jg
jb
mov
leave
int
out
push
push
add
dec
or
dec
clc
mov
jge
cmp
lahf
inc
add
shrl
push
stos
ret
mov
mov
dec
jmp
add
mov
jg
jg
out
jb
mov
jbe
scas
xchg
and
or
pop
adc
mov
mov
out
pushf
addb
fs
add
dec
jecxz
mul
mov
je
test
test
add
add
mov
inc
sub
loop
mov
fwait
mov
mov
sub
or
nop
add
cltd
iret
movsb
dec
lret
scas
rcrl
pop
mov
add
mov
sub
in
add
fmuls
add
mov
add
int3
adc
jp
pop
sbb
add
push
jbe
rorl
stos
in
mov
loopne
mov
add
add
xchg
sbb
pusha
add
wbinvd
push
jbe
data16
and
push
xchg
add
push
fnstenv
xchg
add
mov
mov
cltd
aad
mov
and
mov
scas
pop
mov
pop
imul
ffreep
push
add
mov
scas
cwtl
push
add
lea
inc
jno
or
jnp
test
cmp
ljmp
or
mov
mov
add
add
xchg
sbb
add
loopne
mov
int3
mov
mov
mov
add
jmp
mov
pop
mov
xor
and
mov
pop
add
add
