jnp
lds
imul
mov
add
cmp
push
adc
data16
adc
jg
in
xchg
jg
ss
pop
push
cmpb
mov
jg
inc
jg
xchg
mov
xchg
lock
sub
adc
lods
mov
ja
imul
loopne
mov
fisttpll
sarb
jmp
ja
fucom
adc
jg
mov
cmp
cmp
xchg
sarb
add
stos
es
add
lock
mov
imul
decl
sbb
mov
ja
nop
sbbb
inc
and
sbb
mov
js
add
addb
push
xchg
pop
push
jo
popf
in
icebp
and
mov
sbbb
jle
mov
pop
cmpsl
add
xor
jnp
inc
mov
push
cmp
and
pop
faddp
or
sbb
andb
or
push
push
xchg
push
adcb
imul
xorb
mov
and
bound
mov
jp
inc
push
lock
adc
pop
sbb
xchg
cmp
dec
dec
jl
sahf
mov
mov
fldenv
movsb
lock
setp
aam
sub
arpl
or
xlat
pop
dec
pushf
push
xorb
inc
xor
addr16
rcll
scas
sub
xor
idivb
adc
cmpsb
adc
leave
icebp
sub
addb
adcb
add
jmp
jno
xchg
cmpb
pop
sub
mov
rclb
sbb
aad
notl
repz
xchg
hlt
pop
xchg
xor
stos
out
mov
push
nop
adcb
insl
inc
das
les
mov
jmp
mov
xor
out
mov
pusha
lgs
dec
inc
jbe
test
push
mov
orl
dec
mov
hlt
movsl
mov
adc
sbbl
mov
fucomi
dec
add
xchg
mov
mov
or
sarb
iret
xchg
inc
andl
push
fdivrs
add
adcl
cmpsl
mov
into
ret
icebp
pop
mov
test
mov
dec
aaa
mov
js
ss
mov
xor
sahf
pusha
orl
push
cmpl
xor
pop
es
das
lret
lds
add
out
pushf
mov
ret
jge
repnz
fistl
push
adc
outsl
sbb
rorl
ror
jmp
push
cmpl
cmp
push
sub
addl
or
adcl
rolb
adc
into
cmp
add
xorl
sbb
js
jge
jp
int
push
push
andl
xchg
rolb
jmp
push
les
mov
aam
gs
popf
insl
fwait
sub
inc
cmp
sbb
shrl
and
mov
out
not
cmp
mov
jp
lcall
cmp
out
insl
std
cmpsl
fildl
mov
addb
sbb
pop
mov
lock
in
or
inc
insb
inc
hlt
leave
aam
fsubs
pmaxsw
std
scas
mov
push
orb
mov
jo
pop
pop
iret
ljmp
mov
jle
inc
andb
sbb
pushf
jo
inc
add
xchg
nop
addb
xorb
mov
sub
nop
sub
jne
popa
xor
mov
fcoml
jecxz
test
stc
adc
orb
aaa
inc
fwait
rol
cltd
xchg
repz
les
addb
pusha
or
mov
cwtl
adc
and
or
xorb
cmpsb
loopne
fnstcw
outsb
push
mov
mov
shrl
scas
testb
subb
int3
pop
adc
mov
arpl
cmpsb
and
or
fld
xchg
push
aad
ret
xor
lret
xor
add
test
fstps
and
ret
pop
test
andb
enter
add
out
je
and
fdivr
test
sbbb
mov
subb
fbstp
cmp
and
add
imul
daa
push
and
imul
lds
mov
imul
into
cmp
xorb
sbb
in
mov
cmpsl
pop
sbb
insb
dec
iret
add
popf
ret
adc
addl
les
adc
sbbl
shufps
add
jmp
mov
jbe
notb
or
lret
jg
cmp
fiaddl
inc
xorl
scas
pop
and
in
jge
xchg
xor
mov
sub
dec
jecxz
xchg
cmp
gs
xlat
andb
and
add
subl
push
icebp
xorb
sbb
push
push
loopne
or
in
sbb
cmpl
aaa
fisubrs
xor
lahf
push
pusha
sbb
int
inc
adcl
cmp
xor
orl
shlb
mov
fsubs
fs
inc
subl
adc
pop
add
xor
addb
cmp
dec
fdivrs
mov
imul
popf
int3
enter
pop
xchg
int3
test
out
pop
xchg
cmp
nop
adc
dec
and
rcrb
mov
sub
fadd
test
and
lock
push
ret
in
jae
rolb
pop
iret
or
ss
and
loope
xor
fisubs
mov
hlt
jo
xchg
loopne
pop
fsubrp
gs
pop
jmp
int
pop
jb
loopne
push
cli
repz
cld
mov
dec
pusha
pop
jno
xchg
xor
mov
adc
sub
pusha
push
ja
or
test
addb
cs
cs
cld
shll
and
mov
in
cld
jbe
out
xchg
aaa
cmp
std
std
jp
mov
xchg
push
test
xchg
lods
in
pop
xchg
push
and
mov
ficoms
add
test
mov
out
lret
outsl
shll
test
fcompl
dec
and
xor
test
addb
add
mov
fcom
pop
jmp
rolb
les
lods
aam
and
pop
pop
out
mov
test
addb
adc
test
adcb
aas
xor
inc
mov
push
rolb
dec
mov
add
test
pop
je
je
test
rolb
test
or
test
fs
test
test
fldenv
jnp
push
pusha
test
loope
popa
mov
movsb
enter
or
sti
xchg
and
mov
loopne
test
dec
pop
xor
push
fnstcw
mov
adc
xchg
nop
test
movsb
sahf
mov
call
xor
out
mov
inc
lahf
xchg
nop
test
test
jo
xchg
mov
mov
test
test
cld
mov
stos
fcomps
mov
imulb
pusha
test
dec
lds
inc
inc
mov
es
ret
loop
xor
mov
cmp
cmp
push
and
out
xor
push
test
js
test
test
mov
lahf
fwait
in
repnz
mov
xor
pop
ret
sahf
nop
test
mov
mov
les
js
push
pop
push
aaa
cld
dec
cmpsb
rclb
cld
jnp
sbb
test
jmp
test
ds
mov
test
ds
and
mov
adc
notl
rolb
push
addb
push
scas
adc
and
out
mov
rolb
push
je
pop
leave
xchg
push
test
mov
rclb
fdivrl
and
sahf
rolb
rolb
mulb
xchg
jo
add
test
mov
aaa
hlt
mov
test
imul
call
mov
mov
test
sub
fisubs
test
sbb
inc
sub
fsubl
test
outsb
push
sbb
sarl
ficomps
rolb
mov
mov
sub
inc
insl
jecxz
dec
and
mov
je
or
test
mov
popa
stc
push
or
xchg
jo
jge
insl
inc
hlt
dec
jmp
jge
fstl
xchg
sbb
jecxz
jae
fldt
mov
adc
pusha
call
cmp
adc
mov
push
or
xchg
into
push
adc
xor
int3
pop
test
mov
loopne
adc
fdivrp
or
pop
and
pop
inc
rcrl
xchg
dec
mov
cs
call
xchg
mov
mov
out
fldcw
cmpsl
imul
jle
loop
mov
fmul
push
push
xchg
test
dec
sbb
stos
sub
lds
je
adc
rolb
xchg
xor
addb
addb
xor
push
push
mov
nop
xchg
inc
xchg
add
cmp
pop
imul
ss
es
sahf
xor
mov
mov
fisubl
push
inc
mov
std
jno
mov
sub
aas
lret
movsl
and
pop
mov
mov
ss
mov
mov
inc
dec
sub
xchg
ljmp
push
outsl
jp
orl
xchg
mov
jne
popf
push
jbe
insl
jb
clc
sbb
xchg
sub
push
mov
lret
ret
adc
xchg
daa
sub
xor
fwait
clc
in
in
mov
add
inc
ret
lret
xchg
mov
cli
stos
sub
stos
fstpt
pop
adc
xchg
push
fwait
jnp
mov
or
xchg
xchg
push
xchg
sub
insb
cmp
aam
jo
hlt
pushf
mov
mov
call
adc
int3
jnp
mov
xchg
xchg
cs
add
xchg
jnp
adc
rcll
loopne
popf
dec
xchg
jbe
cmp
xor
sub
inc
cmc
jp
adc
xchg
push
lods
jge
scas
jmp
add
pop
inc
and
add
cmp
sbb
xchg
xor
dec
gs
xchg
test
jae
jmp
sub
inc
pushf
jo
lds
lds
push
dec
xchg
rolb
shll
and
std
cmp
jo
sub
mov
add
stos
aas
inc
sub
mov
xchg
cld
test
adc
xchg
addb
imul
es
or
sub
dec
lea
mov
pusha
repz
loopne
lea
dec
mov
lcall
jle
mov
xchg
mov
adc
rcl
jp
cmp
insl
les
lcall
xor
dec
daa
inc
push
mov
sub
sub
outsl
xchg
jge
xchg
pusha
xchg
mov
xlat
cmp
hlt
mov
rcl
gs
loopne
mov
lods
dec
and
loope
sahf
orb
xor
dec
mov
and
out
push
jo
inc
stos
and
push
negl
data16
sub
cmp
repnz
push
jno
inc
ja
mov
or
rorb
cld
or
mov
adc
sub
test
test
adc
rorb
mov
cs
lods
shll
mov
dec
ds
cmp
pop
inc
push
adc
out
iret
mov
imul
ficomps
lcall
jns
push
mov
mov
xlat
xchg
inc
mov
mov
add
mov
shl
mov
mov
fidivl
sub
mov
dec
mov
add
pop
and
push
dec
loope
inc
mov
stos
shrl
jbe
mov
dec
jp
aam
cwtl
xor
lcall
push
or
mov
jl
add
cli
mov
rorb
jo
or
or
loop
jmp
loope
mov
adcb
out
mov
mov
push
loopne
cltd
cmp
shrl
mov
push
push
mov
nop
mov
lahf
xchg
jo
inc
pop
mov
inc
inc
call
sahf
adc
and
mov
mov
mov
and
inc
imul
fistl
mov
xchg
mov
dec
cmp
sbb
cmp
mov
mov
scas
or
mov
adc
fiaddl
orb
mov
xor
repz
pushf
lock
cwtl
xor
repnz
out
stos
jno
mov
aad
jg
push
mov
and
ljmp
fcmovnbe
scas
int3
pop
cmp
ja
sub
or
mov
mov
es
arpl
insl
test
orb
loop
mov
jle
orb
xor
dec
adc
mov
mov
sbb
mov
cmpsl
and
dec
cmp
scas
das
not
dec
ds
cmpsl
sbb
mov
mov
and
dec
ja
nop
mov
xor
mov
push
pop
popa
xor
cld
cltd
mov
mov
adc
jge
leave
xor
pop
out
daa
pop
mov
mov
orb
xor
pop
ss
inc
das
cmpsl
or
les
stc
mov
mov
mov
insb
pop
and
in
jns
inc
ljmp
mov
inc
xchg
sbb
fs
movsl
andl
jo
or
mov
push
mov
rorb
xchg
icebp
push
fnstsw
mov
ret
mov
and
mov
data16
sub
movsb
lock
inc
lret
xchg
mov
push
add
add
push
push
mov
rorb
mov
stos
flds
dec
lret
aas
sahf
inc
mov
jge
pop
mov
rorb
mov
in
pop
dec
sti
mov
loopne
fwait
sbbl
xor
ljmp
mov
insl
ds
mov
jmp
mulb
or
mov
mov
jbe
inc
movsb
idivb
mov
xchg
and
outsb
pop
fstpt
mov
mov
retw
xchg
sub
rorb
insb
inc
add
sti
jmp
inc
enter
cmp
or
mov
dec
fldz
cltd
scas
test
mov
mov
mov
iret
jmp
loopne
arpl
repz
cltd
or
mov
mov
mov
mulb
mov
mov
mov
lahf
in
sub
outsb
fisubrl
imull
push
pop
frstor
mov
in
test
push
mov
mov
mov
inc
or
xchg
adc
dec
pop
mov
xor
adc
pop
add
lock
leave
adc
push
mov
mov
and
je
mov
inc
mov
iret
idivl
add
xor
jb
pop
cld
adc
pusha
test
push
pusha
mov
or
sbb
mov
imul
popa
cmp
mov
mov
mov
rorb
add
loop
inc
cmp
xchg
rorb
push
orb
xchg
jae
stos
jle
popa
jo
add
push
leave
imul
mov
dec
and
hlt
push
pusha
mov
cmp
add
jne
and
dec
repnz
push
pusha
mov
cmp
lds
fdivrs
gs
jo
pmaxub
add
and
pusha
mov
popa
shll
pop
adc
pop
fstp
divl
dec
arpl
iret
mov
adc
mov
movsb
or
adc
mov
int
cmp
push
call
loopne
mov
push
pusha
mov
rorb
push
mov
es
pusha
mov
inc
std
pushf
inc
mov
sbb
mov
popa
dec
mov
aaa
jle
and
jo
push
adcl
gs
or
negb
outsb
inc
insl
mov
pop
loope
fs
movaps
leave
stos
loop
lea
jo
insl
pop
cwtl
orb
mov
sbb
cmc
mov
mov
xchg
stos
scas
pushf
jo
fwait
xlat
out
loop
jp
fists
js
ret
repz
mov
mov
sub
and
mov
mov
jp
negl
xor
aaa
add
ljmp
mov
and
movsl
mov
jnp
stc
mov
sub
xor
mov
inc
mov
out
out
fmull
insl
cmpsb
sbb
addr16
jnp
daa
int3
in
cmp
or
test
add
mov
lock
push
mov
out
inc
imull
loop
test
in
cmp
push
mov
mov
add
mov
jmp
pop
pop
push
jo
ret
xchg
mov
or
mov
add
js
adc
loop
ret
sub
adc
mov
lods
ja
pop
arpl
lret
mov
in
inc
in
dec
mov
pushf
orb
out
mov
and
stos
in
sbb
mov
push
dec
push
adc
iret
ret
popa
push
or
mov
and
insb
dec
stos
mov
xchg
in
pusha
or
outsb
jl
xchg
sub
loope
jmp
jo
inc
mov
ss
lock
xor
popf
insl
jle
jmp
jbe
fiadds
insl
pushf
adc
and
xchg
cltd
mov
test
or
or
mov
dec
ss
jae
and
xorl
lahf
sbb
mov
es
jb
xor
jge
lock
loop
inc
lea
mov
xchg
and
jo
lods
in
push
push
stc
sarb
and
sahf
orb
xor
or
in
fildll
lea
and
adc
and
movsb
lea
mov
xchg
rorb
orl
dec
aam
fsts
jo
int
gs
and
jne
mov
addb
mov
add
jl
orb
jns
rorb
pop
test
cld
in
loop
pop
mov
jp
mov
jg
outsl
xor
pusha
aad
mov
xchg
into
xchg
fs
imul
push
push
push
test
fdivrs
pusha
mov
sub
and
in
jb
ds
in
ds
lret
test
scas
outsb
dec
stos
mov
jp
jo
mov
mov
lret
adc
cld
sub
push
dec
push
aam
movsb
xchg
adc
stos
xchg
orb
mov
mov
lea
inc
mov
call
lret
ret
dec
mul
xor
cmpsb
insl
cltd
mov
lea
loopne
iret
add
lea
lea
inc
fmul
add
xor
test
test
mov
jno
dec
dec
xor
mov
ljmp
jnp
repnz
icebp
jge
sbb
pop
sub
nop
mov
push
rorb
mov
push
mov
jl
scas
mov
pop
inc
pop
adc
call
scas
xor
inc
xchg
xorl
mov
mov
add
leave
push
mov
add
lea
push
push
push
push
and
push
push
mov
push
add
test
nop
je
mov
push
addb
les
clc
lea
mov
or
es
pop
lea
shr
add
push
push
push
call
or
sub
leave
ret
ret
sub
xchg
xchg
and
or
sub
add
add
lea
sub
shr
dec
not
xchg
sub
xchg
sub
mov
je
jne
push
pop
sub
add
lea
stc
pushl
es
push
mov
sub
push
push
push
push
push
mov
add
test
jne
ret
xor
inc
add
push
movl
and
jne
call
mov
addb
mov
lea
push
and
pop
je,pn
std
stc
sub
cli
dec
icebp
push
xor
dec
ljmp
jne
pop
cwtl
rorb
mov
inc
or
mov
hlt
mov
aam
cmc
shlb
adc
mov
adc
stos
mov
jmp
mov
nop
rorb
int3
outsl
sub
fidivrl
sbb
cltd
arpl
or
mov
mov
dec
xor
pop
xorb
ds
cmp
js
aad
inc
mov
mov
rorb
mov
and
nop
mov
sub
mov
xchg
inc
aam
mov
mov
stos
out
adcb
fdivs
xor
js
mov
and
mov
and
jo
clc
in
push
idivl
and
aaa
fistl
add
xchg
mov
js
or
mov
mov
fsub
jo
loopne
pushl
and
inc
mov
adc
jle
dec
jmp
jbe
pop
ffreep
xor
xchg
lods
xor
push
jge
addb
lods
loop
fsubl
cmp
push
add
jp
sub
cmp
mov
icebp
pop
outsl
adc
movsl
ja
jbe
jb
dec
and
dec
inc
loop
fldcw
mov
cmp
loopne
jno
ss
scas
fsubr
mov
jne
sbb
xchg
imul
inc
test
xor
dec
shlb
mov
out
cld
sbb
jo
mov
mov
cmc
andb
mov
fidivrl
jle
or
dec
aam
mov
xchg
orb
xor
jnp
js
xchg
rorb
cltd
mov
into
out
nop
insb
out
mov
lds
push
jecxz
xchg
dec
mov
loope
rorb
inc
shrl
das
jns
mov
inc
and
mov
rcll
xor
lds
inc
xchg
nop
popl
inc
push
pop
jecxz
cmpsl
jg
cmp
fistpll
xor
jnp
jmp
outsb
push
mov
jo
sahf
push
cmp
fneni(8087
mov
push
cmp
cli
push
dec
inc
sahf
add
push
pop
sbb
pop
jecxz
fwait
jecxz
cmpsl
cmpsl
xchg
xor
mov
mov
mov
out
pop
shll
push
xor
adc
lcall
sub
adc
int3
adc
sbb
lret
nop
push
adc
fimuls
push
dec
inc
push
push
nop
loopne
and
xor
mov
pop
testb
mov
data16
nop
les
add
nop
movsb
in
mov
mov
adc
lock
scas
push
add
fdivl
out
sub
gs
rclb
sub
xor
adcb
cmp
nop
mov
nop
out
jae
add
das
fsubl
jg
ret
lods
test
sarl
xchg
adcb
nop
mov
adc
nop
scas
fnstcw
sbb
nop
xchg
je
mov
inc
sti
ljmp
pop
fs
lahf
or
nop
dec
mov
lahf
sub
lods
jg
sub
mov
aas
out
push
push
mov
mov
mov
pusha
fcoml
and
addr16
lock
ja
lods
outsb
ljmp
gs
sbb
nop
clc
popa
adc
fldcw
insl
push
jno
xchg
out
mov
add
nop
std
fsubs
lds
clc
lock
mov
or
sub
cmp
inc
nop
jns
adcb
js
xchg
dec
push
loopne
fwait
lcall
aad
push
mov
mov
mov
cmpsb
jl
cmp
mov
nop
sbb
xorb
out
xor
aam
js
cltd
xor
mov
pop
testb
nop
mov
xor
pusha
xchg
in
das
pop
pop
push
pop
add
loope
mov
iret
add
fmull
mov
testl
mov
cmp
cmc
inc
cmc
add
into
mov
inc
xchg
xor
adc
xchg
fsubs
in
xorb
mov
pop
imul
mov
xchg
aas
and
xchg
nop
xchg
mov
rclb
test
adc
das
pushf
rclb
pushf
adcb
xor
popa
dec
pop
cmpsl
mov
jo
jb
jnp
mov
test
in
mov
daa
stos
ljmp
divl
imul
mov
xlat
pop
outsl
not
idiv
xor
xor
adc
mov
aaa
pop
outsb
mov
call
outsl
mov
xlat
adc
ljmp
lret
adcl
adc
xchg
je
and
jge
dec
mov
shlb
and
mov
fcos
jg
jns
sub
sub
dec
xlat
cwtl
loopne
cli
and
movsb
inc
fnstcw
adcb
outsb
mov
push
mov
xchg
ret
mov
test
xor
xchg
shlb
lretw
call
cmpsl
shrb
mov
dec
lahf
leave
push
mov
sbbl
je
sti
pop
mov
push
aad
adcb
mov
aam
mov
rorb
xchg
mov
xchg
aas
inc
or
xchg
lea
xchg
jge
xlat
add
jae
lcall
push
push
mov
xor
pop
loopne
pop
sahf
add
das
cs
and
in
stos
aas
js
add
mov
jne
and
adc
push
rclb
jo
icebp
scas
fiaddl
adc
xchg
xor
int
xchg
pop
push
fcoml
or
xchg
fs
xlat
push
testl
loopne
mov
ja
xchg
inc
xorb
add
xchg
pop
cld
lods
addr16
xor
pop
stos
jge
xchg
xchg
mov
xchg
push
call
mov
inc
ljmp
sub
adc
mov
gs
pop
adc
xchg
sub
int3
outsl
dec
add
mov
inc
pop
lock
xchg
lds
nop
adcb
enter
enter
cmpsb
pop
dec
mov
sub
jp
mov
ret
out
push
cmp
pusha
xchg
fwait
bound
lahf
vaddpd
inc
test
add
mov
jb
and
mov
sub
push
adc
lock
arpl
mov
jmp
sbb
adc
xchg
mov
mov
xor
adc
cmc
insb
mov
lret
jg
pop
mov
rclb
jnp
and
adc
push
rclb
cmp
add
xchg
dec
out
or
xchg
sub
cli
add
xor
lods
nop
mov
add
xchg
shrb
cwtl
mov
out
jg
leave
inc
ss
pusha
xchg
lods
sbb
jo
call
jecxz
data16
mov
push
leave
out
jle
bound
and
xchg
out
jb
sub
out
inc
pop
insl
hlt
shrl
jo
scas
mov
cmp
mov
cmp
mov
sub
pop
mov
xchg
ds
push
xor
cmc
aas
mov
dec
dec
mov
imul
jo
filds
mov
imul
sti
loop
sbb
insb
in
js
sub
in
dec
dec
pop
mov
cs
out
test
adc
fsubrl
fistpl
lret
mov
roll
add
xchg
mov
movsb
sub
in
fdivp
jbe
push
fcmovne
shrb
mov
push
jne
dec
mov
inc
loop
sub
into
cli
pop
rcrl
jo
or
xor
jnp
addr16
js
push
loopne
adcb
cli
jo
int
jge
push
inc
xchg
outsb
push
adcb
and
pop
mov
adcl
icebp
imul
xchg
mov
push
adc
or
xchg
jle
dec
cmpsl
fisubrl
xchg
imul
fistps
aad
mov
movsb
push
xlat
les
add
mov
stc
inc
xchg
in
mov
xchg
daa
cmpsl
sarb
mov
aas
pop
test
aam
lcall
stos
enter
pusha
xchg
mov
leave
movsl
cmp
mov
lret
sahf
inc
xchg
enter
inc
fisubs
xor
into
pop
sarb
push
and
jns
leave
sbb
and
test
mov
pop
pushf
mov
das
cld
jnp
stos
dec
pushf
add
inc
and
push
mov
sub
clc
mov
jg
ficoms
test
ret
sub
mov
lods
pushf
mov
xchg
ja
and
dec
mov
push
je
fdivl
into
or
idivb
lret
cmp
xchg
xchg
adc
jecxz
push
shll
or
out
in
es
imul
mov
movswl
fstl
mov
xchg
test
loope
repnz
je
xchg
xlat
into
in
sub
decb
xchg
rol
mov
arpl
mov
cmp
cmp
divl
pop
in
xor
mov
loopne
fdiv
mov
into
ljmp
ss
push
lock
push
adc
adc
xchg
sbb
xchg
bound
repnz
add
mov
mov
xchg
negb
jo
mov
xchg
cld
mov
xchg
les
xchg
sbb
lock
mov
sarl
fists
mov
lock
stos
out
test
pop
xchg
loopne
pushf
push
xchg
xchg
rclb
cmp
sub
dec
fbld
stc
xchg
add
push
fldt
nop
xchg
jle
xchg
mov
mov
rcll
jmp
xchg
add
mov
clc
or
xchg
ss
xchg
xchg
sub
add
xchg
cmc
jp
lock
xor
outsl
adc
xchg
pop
cmp
shlb
sbb
pop
mov
movl
mov
vmwrite
rclb
xor
rclb
rcr
add
xchg
lcall
jo
icebp
fs
insl
in
int3
ret
fstpt
stc
or
xchg
sub
pop
ja
xor
fs
add
inc
ljmp
add
xchg
dec
mov
test
add
fs
xchg
push
loopne
mov
rcrb
lds
sub
fbld
mov
xor
repnz
dec
xchg
mov
cmp
xchg
inc
scas
pop
inc
cmc
adc
mov
jno
sahf
mov
dec
cli
imul
out
test
test
ret
mov
xchg
sti
pusha
mov
cmp
rcll
shrl
setp
adc
fcom
pop
mov
fsubl
xor
sbb
add
adc
jg
insb
in
popf
enter
dec
scas
pop
cmc
push
cmc
inc
es
and
nop
pusha
xchg
push
rclb
ja
addr16
xchg
or
xchg
xlat
mov
test
dec
jb
pop
sti
xchg
lock
hlt
or
jg
imul
stos
lds
pusha
xchg
inc
dec
inc
mov
adcb
shrl
testb
and
lcall
lcall
popa
mov
les
jmp
xor
mov
sahf
nop
xchg
rorb
cmp
mov
push
xchg
adc
pop
sbb
or
xchg
repnz
roll
daa
push
inc
xchg
jne
pop
test
jnp
xchg
lds
push
xchg
fdivs
push
mov
addb
mov
mov
adcb
pusha
cmp
movsb
pop
add
mov
adc
cmpsl
movsl
jmp
rcrb
xchg
ss
mov
mov
push
cld
imul
bnd
xor
pop
sti
aam
das
iret
lret
scas
out
fs
xchg
fisubrl
inc
sbb
add
xchg
das
mov
in
jne
xor
add
cwtl
mov
movsl
jae
rclb
cmpsb
rolb
lock
div
nop
rclb
pop
outsl
clc
sbb
and
inc
xchg
shll
stos
cli
stc
push
ss
mov
mov
aas
stos
and
inc
ret
incl
xchg
inc
sbb
scas
shrl
inc
xchg
and
lock
popa
add
les
xchg
adc
or
mov
mov
addb
jl
scas
inc
in
push
fdivp
cltd
dec
scas
pop
xor
dec
out
sub
dec
jo
bound
leave
xor
hlt
fabs
sbb
mov
insb
dec
push
and
xchg
out
cli
insb
lahf
lea
xchg
xor
mov
xchg
rclb
pop
inc
lds
rclb
out
add
shlb
lods
neg
push
dec
aam
dec
xor
incl
push
jo
push
loopne
xor
sub
hlt
int
push
inc
xchg
sbb
xchg
cmp
cmpsl
scas
xor
adc
xchg
jb
add
xchg
mov
xor
dec
sti
cld
fbstp
adc
push
rclb
ret
jmp
aas
jg
dec
add
adc
repz
fiadds
inc
shlb
pop
sub
dec
add
mov
pop
and
ret
xchg
add
loopne
mov
adc
out
cmpsb
testl
test
pop
mov
mov
mov
shl
pushf
nop
cwtl
cltd
adc
push
lahf
mov
cwtl
cmp
nop
cwtl
and
adc
cwtl
in
adc
cwtl
mov
cwtl
xlat
sahf
push
cwtl
push
cli
xchg
cwtl
lods
and
adc
popa
mov
xchg
mov
mov
jp
inc
popa
dec
jne
jo
mov
cmp
push
cwtl
loop
dec
stos
call
push
adc
cmc
xchg
nop
cwtl
xor
mov
pop
xchg
adc
lock
aad
test
cwtl
dec
fidivrl
inc
das
icebp
rcrb
cwtl
jge
loopne
adcb
ja
push
call
cs
add
add
lret
out
clc
nop
nop
nop
nop
jae
mov
add
add
add
add
xor
nop
nop
nop
jae
add
mov
xorb
lcall
jmp
nop
nop
jae
mov
add
fisubs
add
clc
nop
nop
nop
nop
jae
add
add
push
mov
stos
mov
push
mov
leave
cs
fiadds
or
sti
add
add
mov
push
mov
xchg
ret
add
add
add
sub
inc
add
add
add
adc
sub
mov
xchg
ret
add
add
fidivrs
addl
and
nop
nop
jae
add
lahf
mov
fwait
add
cltd
xor
clc
nop
nop
nop
nop
jae
add
xchg
insl
push
clc
nop
nop
nop
nop
jae
lods
flds
sbb
movsl
dec
add
mov
jge
clc
nop
nop
nop
nop
jae
mulb
add
ja
push
cltd
shrb
add
nop
nop
nop
nop
jae
lds
pop
mov
cmp
add
cs
lds
add
pop
add
popf
fwait
push
mov
xchg
ret
cmpl
and
pusha
cmp
add
clc
nop
nop
nop
nop
jae
add
push
add
add
cld
flds
push
mov
nop
push
mov
leave
cs
cmp
add
addb
addl
cli
aam
fists
in
dec
cmp
int
inc
clc
xchg
aam
in
add
jmp
jbe
push
cltd
mov
mov
push
rcrb
clc
nop
nop
nop
nop
jae
push
jo
addb
sub
add
push
add
clc
nop
nop
nop
nop
jae
jne
mulb
add
add
push
add
nop
push
mov
leave
cs
lods
add
movsl
add
mov
nop
nop
nop
nop
jae
jp
pusha
push
add
add
loope
add
add
nop
nop
nop
nop
jae
pop
add
add
add
add
stos
nop
push
mov
leave
cs
xchg
add
pop
add
pop
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
jbe
push
or
lds
push
mov
leave
cs
push
add
add
xchg
add
inc
inc
mov
shr
nop
push
mov
leave
cs
add
and
sub
lock
nop
nop
jae
add
add
jp
add
xorb
mov
add
lcall
mov
or
ret
add
adc
jne
add
pusha
add
add
nop
push
mov
leave
cs
add
add
rclb
xchg
dec
inc
add
inc
adc
jno
add
movsl
add
add
add
nop
nop
nop
nop
jae
or
add
sbb
nop
nop
nop
jae
aam
or
add
aam
add
leave
push
mov
sub
stos
xchg
add
push
out
dec
fmuls
add
add
cli
fwait
push
nop
push
mov
leave
cs
lods
add
add
lods
sti
jne
jl
mov
aas
imul
clc
nop
nop
nop
nop
jae
jl
mov
arpl
xchg
lahf
push
add
mov
nop
nop
jae
cmp
aam
add
daa
fld1
push
mov
xchg
ret
add
add
add
sub
and
nop
fwait
inc
mov
clc
nop
nop
nop
nop
jae
xchg
xchg
add
add
add
add
repz
push
mov
xchg
ret
add
fwait
add
add
fwait
add
add
fidivrs
outsl
loopne
mov
xchg
ret
add
xlat
ljmp
scas
mov
nop
push
mov
leave
cs
add
movsl
mov
add
fwait
ja
pushl
clc
nop
nop
nop
nop
jae
inc
add
mov
add
sti
push
clc
nop
nop
nop
nop
jae
ljmp
scas
add
sbb
nop
nop
nop
nop
jae
add
add
add
shr
clc
nop
nop
nop
nop
jae
lahf
add
add
fwait
inc
lods
daa
lods
clc
nop
nop
nop
nop
jae
pop
mov
add
movsl
addl
add
nop
nop
nop
nop
jae
add
add
fiadds
add
sbb
add
add
add
add
inc
add
mov
nop
nop
nop
nop
jae
movsl
dec
add
arpl
add
adc
inc
xor
clc
nop
nop
nop
nop
jae
dec
mov
adcb
mov
nop
push
mov
leave
cs
add
push
add
sbb
clc
nop
nop
nop
nop
jae
ja
inc
add
mov
loopne
dec
push
clc
nop
nop
nop
nop
jae
pusha
push
inc
add
mov
shl
nop
push
mov
leave
cs
lods
add
add
out
and
push
mov
xchg
ret
mov
add
push
fwait
add
and
rcrb
nop
jae
add
andb
popf
add
push
pushf
add
dec
push
clc
nop
nop
nop
nop
jae
push
sub
cld
add
mov
xchg
ret
add
add
add
dec
cmpsl
add
clc
nop
nop
nop
nop
jae
lds
add
addb
xchg
clc
nop
nop
nop
nop
jae
sub
add
flds
pop
cmp
mov
xchg
ret
fstl
xorb
mov
loope
push
mov
xchg
ret
add
adc
mov
mov
popf
hlt
mulb
mov
clc
nop
nop
nop
nop
jae
cmc
ja
add
add
push
mov
inc
add
add
push
add
popf
add
out
cld
clc
nop
nop
nop
nop
jae
hlt
add
xchg
mov
clc
nop
nop
nop
nop
jae
add
and
lahf
inc
arpl
add
into
hlt
repnz
sti
nop
push
mov
leave
cs
add
add
je
jbe
add
push
mov
xchg
ret
xlat
add
add
add
imull
clc
nop
nop
nop
nop
jae
add
test
jl
add
fisttpll
mov
clc
nop
nop
nop
nop
jae
push
jno
xchg
pusha
fisubrs
cmp
sub
nop
nop
nop
nop
jae
xlat
add
push
add
mov
pop
nop
push
mov
leave
cs
add
add
add
add
js
push
clc
nop
nop
nop
nop
jae
add
pusha
xchg
add
add
add
push
inc
sbb
nop
nop
nop
nop
jae
aam
mov
add
popf
jne
repnz
add
adc
push
sbbl
add
add
add
add
nop
rcrb
jmp
incl
cmc
andb
add
jl
adc
mov
stos
clc
nop
nop
nop
nop
jae
add
mov
add
push
mov
leave
cs
mov
arpl
add
pop
fwait
call
clc
nop
nop
nop
nop
jae
add
lahf
xchg
lds
aam
popa
push
mov
xchg
ret
add
add
add
adcb
jno
mov
aad
add
icebp
mov
cli
add
call
mov
xor
nop
nop
jae
push
add
inc
pusha
testb
hlt
inc
arpl
adc
faddl
add
nop
nop
nop
nop
jae
add
add
add
mov
inc
dec
es
nop
nop
nop
nop
jae
xchg
mov
xchg
inc
push
add
mov
add
nop
nop
nop
nop
jae
pusha
and
lahf
mov
adc
push
clc
nop
nop
nop
nop
jae
add
push
out
dec
sti
andb
adc
inc
popa
inc
add
add
add
push
sub
sti
cmc
dec
add
stos
pop
inc
add
hlt
add
add
add
push
mov
xchg
ret
add
add
add
add
add
call
adc
nop
nop
nop
nop
jae
add
add
cmc
add
adcl
add
jl
jl
add
and
add
xor
mov
xchg
ret
cmpb
inc
add
fwait
add
sahf
jecxz
push
sub
sbb
add
adc
add
add
movsb
push
mov
clc
nop
nop
nop
nop
jae
add
add
add
nop
nop
jae
sbb
add
mov
dec
cmpsb
out
je
clc
nop
nop
nop
nop
jae
dec
pusha
mov
and
roll
mov
xchg
ret
add
add
add
inc
xchg
push
mov
xchg
lahf
mov
adc
nop
nop
nop
nop
jae
add
xorl
stos
clc
nop
nop
nop
nop
jae
sub
xlat
xlat
add
add
push
mov
xchg
ret
add
add
add
add
add
je
clc
nop
nop
nop
nop
jae
add
add
and
call
mov
nop
nop
jae
dec
add
sbb
push
scas
or
clc
nop
nop
nop
nop
jae
add
add
leave
push
mov
xchg
ret
addb
dec
add
sub
push
mov
pusha
mov
mov
add
add
add
sbb
push
mov
add
add
add
loop
sahf
add
mov
add
nop
nop
jae
jo
lahf
addl
add
add
add
cld
cmc
push
clc
nop
nop
nop
nop
jae
add
pusha
fldl
add
add
adc
clc
nop
nop
nop
nop
jae
pop
inc
jo
mov
jne
xchg
add
mov
nop
push
mov
leave
cs
xorb
fldl
mov
les
cmp
push
clc
nop
nop
nop
nop
jae
add
mov
add
addb
cmp
es
clc
nop
nop
nop
nop
jae
add
out
add
nop
push
mov
leave
cs
popl
pusha
add
sub
and
add
clc
nop
nop
nop
nop
jae
mov
add
lds
daa
inc
clc
nop
nop
nop
nop
jae
jo
add
push
add
lods
mov
nop
push
mov
leave
cs
sbb
addb
push
mov
jmp
adc
adc
fstpl
mov
add
add
push
mov
xchg
ret
fldl
add
add
ds
int
enter
nop
nop
jae
adc
add
push
add
ljmp
push
mov
xchg
ret
lds
add
mov
cld
jecxz
call
inc
add
and
fisttpll
jb
mov
clc
nop
nop
nop
nop
jae
add
addl
ljmp
push
mov
leave
cs
and
add
add
sub
jne
nop
push
mov
leave
cs
jp
add
add
arpl
arpl
mov
xchg
ret
add
jl
addl
and
mov
lret
ret
sbb
nop
jae
inc
and
mov
pop
push
push
mov
xchg
ret
mov
mov
add
fldl
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
xchg
or
cmp
xor
clc
nop
nop
nop
nop
jae
cmc
add
or
and
clc
nop
nop
nop
nop
jae
add
jno
add
mov
add
sbb
nop
nop
nop
jae
add
dec
xchg
add
jle
pop
clc
nop
nop
nop
nop
jae
inc
jl
je
add
add
mov
leave
cs
cmc
add
lahf
cmp
add
and
nop
nop
nop
nop
jae
push
add
mov
fwait
add
jl
cmp
inc
pop
nop
push
mov
leave
cs
pop
fnstenv
add
sub
add
or
inc
or
add
mov
fwait
inc
xchg
out
out
dec
add
xlat
and
nop
nop
jae
dec
aam
mov
add
ja
and
lss
jl
arpl
xchg
add
add
add
fiadds
jle
shlb
nop
nop
nop
jae
add
arpl
add
cld
testb
popf
and
nop
jae
add
jno
jne
and
add
sub
nop
nop
nop
nop
jae
lds
cmp
idivb
and
test
push
mov
leave
cs
add
testb
cs
add
clc
nop
nop
nop
nop
jae
add
addb
add
mov
sbb
mov
clc
nop
nop
nop
nop
jae
xchg
add
aam
add
dec
add
sub
test
pop
inc
add
push
mov
add
adcb
mov
cmp
nop
nop
nop
jae
add
add
jne
add
nop
nop
nop
nop
jae
add
xchg
inc
popf
add
mov
jbe
mov
clc
nop
nop
nop
nop
jae
adc
add
add
add
shlb
or
mov
xchg
ret
xlat
fstpl
jo
xchg
add
pusha
mov
clc
nop
nop
nop
nop
jae
add
push
add
add
push
clc
nop
nop
nop
nop
jae
add
inc
add
lahf
add
add
add
sub
add
add
xchg
or
jno
add
push
mov
xchg
ret
add
add
aam
pop
or
clc
nop
nop
nop
nop
jae
mov
mov
add
add
in
xor
clc
nop
nop
nop
nop
jae
add
push
add
add
add
out
inc
fcoms
movsb
clc
nop
nop
nop
nop
jae
xlat
add
popl
mov
and
mov
clc
nop
nop
nop
nop
jae
adc
pop
add
add
add
into
mov
nop
nop
nop
jae
add
add
add
and
push
jb
test
nop
push
mov
leave
cs
mov
xlat
add
add
jbe
ror
push
mov
xchg
ret
ljmp
arpl
scas
add
xor
clc
nop
nop
nop
nop
jae
add
mov
add
add
add
push
xor
ljmp
clc
pop
inc
add
lahf
flds
add
xchg
mov
mov
xor
xor
clc
nop
nop
nop
nop
jae
inc
mov
and
addr16
clc
nop
nop
nop
nop
jae
push
add
dec
and
mov
push
mov
xchg
ret
xchg
add
movsl
cld
add
add
and
xchg
sub
push
clc
nop
nop
nop
nop
jae
add
add
jno
mov
xor
gs
nop
nop
nop
nop
jae
mov
add
arpl
push
lds
mov
leave
cs
add
add
add
adc
add
mov
add
aam
xchg
add
add
mov
clc
nop
nop
nop
nop
jae
and
jo
push
add
scas
mov
clc
nop
nop
nop
nop
jae
add
jl
mov
cmp
das
push
clc
nop
nop
nop
nop
jae
sti
add
push
jne
jp
xchg
lds
mov
and
clc
nop
nop
nop
nop
jae
pop
orl
add
push
clc
nop
nop
nop
nop
jae
mov
add
sbbb
jg
inc
add
aam
add
add
out
jne
clc
nop
nop
nop
nop
jae
mov
add
inc
sbb
fsubrl
add
add
add
adc
push
inc
movsl
sbb
popa
clc
nop
nop
nop
nop
jae
add
addb
add
in
push
push
mov
xchg
ret
push
push
add
and
mov
add
clc
nop
nop
nop
nop
jae
ja
or
dec
add
icebp
nop
push
mov
leave
cs
add
dec
add
add
add
lods
or
add
nop
nop
nop
nop
jae
jp
mov
movsl
sub
push
push
sub
popl
push
into
add
testb
mov
add
jecxz
aad
pop
in
jg
nop
push
mov
leave
cs
adc
add
add
jmp
push
popl
inc
mov
jo
add
add
add
je
clc
nop
nop
nop
nop
jae
add
scas
add
mov
fwait
push
clc
nop
nop
nop
nop
jae
mov
mov
pusha
mov
add
ja
xchg
fistpl
clc
nop
nop
nop
nop
jae
testb
add
add
andb
add
dec
push
repnz
repz
xchg
add
push
mov
xchg
ret
push
pop
add
lods
aam
add
cmp
popa
push
mov
xchg
ret
add
pusha
scas
sti
add
ja
or
nop
nop
nop
nop
jae
and
add
and
fiadds
xlat
add
clc
nop
nop
nop
nop
jae
dec
add
add
add
bound
xor
nop
nop
nop
jae
add
mov
add
fwait
incb
mov
add
push
mov
leave
cs
mov
add
add
out
adcb
testl
call
cs
pusha
add
hlt
inc
add
lcall
cs
or
mov
movsl
xchg
jne
clc
nop
nop
nop
nop
jae
fldl
add
xchg
ja
ret
not
clc
nop
nop
nop
nop
jae
adcb
add
inc
addb
test
add
clc
nop
nop
nop
nop
jae
add
add
add
ret
push
push
mov
xchg
ret
popf
cmp
xchg
sbb
leave
mov
nop
push
mov
leave
cs
add
mov
add
jo
add
out
jle
je
nop
push
mov
leave
cs
add
dec
add
add
mov
push
mov
xchg
ret
add
mov
add
add
add
push
mov
xchg
ret
add
and
sti
dec
add
je
add
clc
nop
nop
nop
nop
jae
add
sti
ja
mov
clc
nop
nop
nop
nop
jae
add
mov
add
add
clc
nop
nop
nop
nop
jae
ja
xlat
sti
adc
fldl2e
adc
call
clc
nop
nop
nop
nop
jae
and
add
dec
push
push
mov
add
add
pop
sbb
outsb
pop
and
orl
fwait
push
mov
xchg
ret
push
fwait
popl
mov
add
pusha
add
adc
dec
aad
push
mov
xchg
ret
push
sbb
push
add
scas
add
adc
shrb
nop
nop
nop
jae
add
push
adc
cmpsb
pop
mov
nop
push
mov
leave
cs
add
lods
dec
add
or
push
push
mov
xchg
ret
push
add
adc
add
mov
add
stos
clc
nop
nop
nop
nop
jae
add
add
add
or
push
mov
xchg
ret
add
add
out
mov
add
mov
clc
nop
nop
nop
nop
jae
add
add
add
xor
nop
nop
nop
nop
jae
ja
and
add
add
clc
nop
nop
nop
nop
jae
scas
add
add
pusha
addb
add
das
jne
clc
nop
nop
nop
nop
jae
testb
push
add
and
mov
shrb
add
add
push
add
mov
clc
nop
nop
nop
nop
jae
inc
adcb
pop
sub
jle
add
nop
nop
nop
nop
jae
dec
cmc
ljmp
push
mov
xchg
ret
fucomp
add
pusha
flds
add
pop
clc
nop
nop
nop
nop
jae
inc
movsl
and
orb
and
nop
nop
nop
nop
jae
dec
mov
add
addb
aam
ja
xbegin
jae
popf
add
push
adc
add
je
sub
and
add
add
xchg
jne
add
lahf
add
nop
push
mov
leave
cs
add
adc
aas
add
imul
add
add
aam
fstl
sub
jb
add
add
add
ljmp
cmp
mov
dec
int
push
mov
xchg
ret
dec
pop
add
and
popl
add
add
mov
nop
nop
nop
nop
jae
add
add
add
fimuls
add
sti
jno
jl
mov
add
push
add
add
clc
nop
nop
nop
nop
jae
lds
addb
xchg
push
clc
nop
nop
nop
nop
jae
add
add
inc
mov
jo
fisubrs
pusha
clc
nop
nop
nop
nop
jae
pusha
scas
fnstsw
faddp
mov
push
lods
out
add
mov
nop
nop
nop
nop
jae
or
mov
add
js
cmp
nop
push
mov
leave
cs
out
add
add
andb
add
clc
nop
nop
nop
nop
jae
dec
arpl
mov
add
jno
pusha
test
mov
clc
nop
nop
nop
nop
jae
jl
lods
add
mov
clc
nop
nop
nop
nop
jae
lds
flds
add
jo
mov
fld1
nop
push
mov
leave
cs
add
add
hlt
mov
add
mov
push
clc
nop
nop
nop
nop
jae
mov
add
and
mov
pop
jae
push
mov
leave
cs
add
adc
add
inc
test
je
clc
nop
nop
nop
nop
jae
add
movsl
add
cmp
mov
xchg
ret
jp
lods
add
add
lahf
add
test
mov
push
mov
xchg
ret
movsl
lahf
inc
push
and
add
jp
jmp
and
add
add
xchg
jl
je
hlt
jp
add
nop
push
mov
leave
cs
add
push
mov
mov
mov
nop
push
mov
leave
cs
add
hlt
lds
ljmp
nop
nop
jae
sbb
fisubrs
subl
nop
nop
nop
nop
jae
ljmp
xchg
add
add
pop
clc
nop
nop
nop
nop
jae
inc
mov
frstor
adc
sub
add
inc
xchg
push
mov
add
add
jge
cs
in
inc
cmp
add
imul
outsl
lods
data16
add
nop
nop
nop
nop
jae
xlat
jno
or
add
test
sbb
clc
nop
nop
nop
nop
jae
add
mov
add
in
mov
clc
nop
nop
nop
nop
jae
add
dec
mov
arpl
add
shrb
mov
or
ret
jp
add
add
mov
adc
jmp
mov
fxtract
add
mov
add
sbb
lods
adc
nop
nop
nop
nop
jae
push
add
jne
pusha
add
add
pop
mov
test
test
nop
nop
nop
nop
jae
add
add
add
clc
nop
nop
nop
nop
jae
add
add
dec
add
or
call
inc
add
add
add
sti
add
add
and
push
push
mov
xchg
ret
add
lahf
or
imul
xchg
ret
cmp
add
add
cmp
add
add
outsl
pop
add
movsl
fsubl
aad
inc
and
pop
and
cmc
je
clc
nop
nop
nop
nop
jae
fwait
jno
add
jno
mov
push
loopne
mov
xchg
ret
add
add
mov
dec
pop
mov
push
mov
xchg
ret
mov
je
je
add
add
je
test
nop
push
mov
leave
cs
movsl
jl
add
dec
rcl
popa
clc
nop
nop
nop
nop
jae
and
add
add
add
mov
nop
nop
nop
jae
inc
je
xchg
add
add
xchg
inc
hlt
dec
push
clc
nop
nop
nop
nop
jae
jne
cld
add
mov
clc
nop
nop
nop
nop
jae
adc
push
add
add
and
and
push
mov
xchg
ret
cld
movsl
cld
add
mov
jp
fld1
nop
push
mov
leave
cs
cld
add
add
or
jno
jg
clc
nop
nop
nop
nop
jae
add
add
inc
add
and
sub
mov
js
nop
nop
nop
nop
jae
add
add
and
adcl
add
out
add
loope
adc
jne
add
add
adc
cmp
add
nop
push
mov
leave
cs
add
add
ljmp
loopne
mov
xchg
ret
sti
xchg
addb
fwait
ljmp
push
mov
xchg
ret
push
add
push
sbb
lahf
mov
clc
nop
nop
nop
nop
jae
mov
pusha
add
or
push
mov
xchg
ret
mov
add
add
jl
pop
push
mov
xchg
ret
jo
popf
hlt
add
add
xchg
add
add
in
es
fwait
nop
push
mov
leave
cs
lods
lahf
aam
cmp
inc
push
aam
dec
add
add
push
mov
xchg
ret
add
fstpl
mov
push
mov
xchg
ret
push
mov
dec
xor
inc
std
add
nop
push
mov
leave
cs
add
or
lcall
mov
xchg
ret
add
testb
add
add
dec
mov
aaa
push
mov
xchg
ret
add
add
add
loopne
push
je
clc
nop
nop
nop
nop
jae
and
inc
add
lcall
arpl
nop
nop
nop
nop
jae
add
mov
xchg
dec
dec
add
lods
fists
dec
addb
or
ret
add
xchg
xchg
add
jne
clc
nop
nop
nop
nop
jae
add
add
testb
push
mov
aam
add
mov
shl
add
aam
adc
push
jg
nop
push
mov
leave
cs
movsl
scas
add
scas
mov
pop
clc
nop
nop
nop
nop
jae
add
add
pop
add
aam
xchg
int3
adc
inc
data16
lods
pop
decl
clc
nop
nop
nop
nop
jae
add
aam
jl
lahf
push
clc
nop
nop
nop
nop
jae
add
mov
mov
popl
lcall
loop
clc
nop
nop
nop
nop
jae
push
je
and
scas
add
nop
nop
nop
nop
jae
and
push
scas
ja
lahf
lahf
dec
adc
insl
add
outsl
fidivs
and
out
ljmp
shrb
leave
cs
lds
or
dec
add
clc
nop
nop
nop
nop
jae
add
inc
lahf
mov
lahf
push
mov
mov
clc
nop
nop
nop
nop
jae
add
arpl
add
in
sarb
enter
nop
nop
nop
jae
mov
add
add
shr
clc
nop
nop
nop
nop
jae
cmp
or
lods
push
testl
nop
push
mov
leave
cs
add
cmc
rcr
push
mov
xchg
ret
addb
add
cld
sub
xchg
pusha
addl
shr
push
mov
xchg
ret
add
add
jp
add
add
enter
in
leave
cs
out
lahf
add
mov
pop
mov
dec
inc
add
dec
push
add
or
ja
ja
xor
clc
nop
nop
nop
nop
jae
jo
add
cmc
movsl
and
and
nop
nop
nop
nop
jae
pusha
add
sub
dec
cmp
mov
add
clc
nop
nop
nop
nop
jae
mov
ja
out
mov
push
in
sbb
nop
push
mov
leave
cs
add
scas
jp
add
cld
lods
add
clc
nop
nop
nop
nop
jae
add
fldl
jp
add
test
nop
nop
nop
nop
jae
and
and
dec
add
clc
nop
nop
nop
nop
jae
adc
inc
mov
push
push
mov
xchg
ret
add
lds
popf
cmpl
lahf
fiadds
clc
nop
nop
nop
nop
jae
push
xchg
add
lahf
add
addr16
push
mov
xchg
ret
add
orl
addb
sbb
nop
nop
nop
nop
jae
and
add
add
into
pop
inc
add
add
add
arpl
add
sub
lods
es
push
mov
xchg
ret
xchg
scas
cmpb
and
out
push
fidivs
nop
nop
nop
nop
jae
adc
cld
add
add
shrb
jb
nop
push
mov
leave
cs
out
aam
mov
xor
push
mov
xchg
ret
mov
add
sbbb
add
clc
nop
nop
nop
nop
jae
and
cmp
jg
test
nop
nop
nop
nop
jae
add
pusha
lds
push
mov
xchg
ret
adcl
inc
out
sub
clc
clc
nop
nop
nop
nop
jae
jne
cmp
add
xlat
add
adc
daa
mov
clc
nop
nop
nop
nop
jae
add
jno
add
mov
clc
nop
nop
nop
nop
jae
inc
dec
lods
jl
and
ja
mov
test
add
clc
nop
nop
nop
nop
jae
add
bnd
nop
nop
jae
xchg
add
add
add
push
xor
clc
nop
nop
nop
nop
jae
andb
fwait
lahf
add
mov
push
mov
xchg
ret
add
out
add
add
rcrb
nop
nop
nop
nop
jae
jp
ljmp
mov
push
mov
xchg
ret
add
add
mov
xchg
add
push
clc
nop
nop
nop
nop
jae
mov
add
add
add
jle
pop
push
mov
xchg
ret
sub
dec
hlt
or
jo
add
clc
nop
nop
nop
nop
jae
add
scas
lahf
add
xchg
xchg
out
ja
scas
lods
clc
nop
nop
nop
nop
jae
add
add
xlat
and
sbb
clc
nop
nop
nop
nop
jae
jne
push
mov
add
adc
nop
push
mov
leave
cs
push
testb
add
add
pop
clc
nop
nop
nop
nop
jae
xorb
adcb
sbb
adc
push
mov
leave
cs
lods
pusha
add
add
add
inc
leave
fistpl
push
mov
xchg
ret
push
lds
fldl
jl
add
lds
push
dec
add
clc
nop
nop
nop
nop
jae
movsl
add
dec
dec
add
push
jp
test
add
nop
nop
nop
nop
jae
movsl
add
add
xor
add
nop
push
mov
leave
cs
add
movsl
mov
add
add
push
imul
fsubs
add
add
add
mov
mov
add
mov
popa
int3
popa
mov
add
add
adc
add
ss
mov
clc
nop
nop
nop
nop
jae
and
add
mov
dec
test
aam
sti
call
clc
nop
nop
nop
nop
jae
pusha
push
add
add
out
push
mov
add
inc
pop
inc
inc
add
add
sub
push
add
mov
aas
cmp
loop
add
clc
nop
nop
nop
nop
jae
add
addb
mov
mov
clc
nop
nop
nop
nop
jae
add
sbb
add
ret
test
nop
push
mov
leave
cs
add
add
add
push
mov
xchg
ret
add
add
add
xlat
add
nop
push
mov
leave
cs
dec
add
add
add
add
testb
adc
nop
nop
nop
nop
jae
mov
lds
sti
adc
mov
nop
mov
mov
clc
nop
nop
nop
nop
jae
mov
add
jl
addb
add
pop
clc
nop
nop
nop
nop
jae
flds
add
popl
push
inc
pusha
je
fstps
mov
add
clc
nop
nop
nop
nop
jae
scas
add
fs
dec
push
mov
xchg
ret
sbb
add
push
add
and
nop
nop
nop
nop
jae
out
addb
cld
jo
jbe
subl
push
mov
xchg
ret
add
out
mov
add
lds
out
rclb
add
push
mov
xchg
ret
adc
add
mov
jne
mov
lods
mov
nop
nop
nop
jae
add
cld
cmc
lahf
add
add
clc
nop
nop
nop
nop
jae
add
dec
add
testb
js
jae
clc
nop
nop
nop
nop
jae
add
add
add
add
add
daa
add
clc
nop
nop
nop
nop
jae
xchg
je
add
add
add
add
sar
nop
nop
nop
nop
jae
jl
ja
xchg
add
mov
outsb
sub
mov
xchg
ret
xchg
or
push
add
jp
and
clc
nop
nop
nop
nop
jae
add
add
lds
and
and
mov
push
mov
xchg
ret
add
fwait
sub
mov
fstps
xorb
add
addb
adc
add
inc
hlt
add
add
mov
nop
push
mov
leave
cs
add
add
mov
mov
pop
add
clc
nop
nop
nop
nop
jae
jne
aam
add
hlt
out
pusha
pop
push
nop
push
mov
leave
cs
add
add
hlt
add
mov
lds
nop
jae
addb
add
add
pop
fld1
nop
push
mov
leave
cs
out
mov
mov
mov
stos
push
mov
pop
mov
and
add
push
add
mov
out
ja
push
add
add
add
cmc
mov
add
rclb
clc
clc
nop
nop
nop
nop
jae
mov
fwait
add
sbb
insl
je
clc
nop
nop
nop
nop
jae
xchg
add
dec
mov
push
mov
push
push
mov
xchg
ret
lods
add
ficomps
test
sbb
mov
shlb
jl
inc
add
jo
pop
cmc
sub
arpl
lds
mov
xchg
ret
movsl
and
push
add
adc
add
nop
nop
nop
nop
jae
dec
add
add
andb
movsl
sub
clc
nop
nop
nop
nop
jae
add
add
fimuls
lahf
je
ret
inc
clc
nop
nop
nop
nop
jae
add
add
mov
fstps
nop
nop
jae
add
add
add
clc
nop
nop
nop
nop
jae
inc
add
and
xchg
push
add
add
imul
clc
nop
nop
nop
nop
jae
add
sbb
add
nop
push
mov
leave
cs
xchg
push
add
mov
pusha
push
sti
cmc
add
sbb
add
clc
nop
nop
nop
nop
jae
inc
scas
add
add
dec
push
shlb
nop
nop
nop
jae
push
mov
push
out
pop
add
test
jne
push
mov
xchg
ret
push
add
add
sti
mov
cmp
nop
push
mov
leave
cs
out
add
push
add
pop
dec
push
mov
xchg
ret
add
ja
movsl
add
movsl
add
add
lock
push
shr
push
clc
nop
nop
nop
nop
jae
add
add
add
nop
push
mov
leave
cs
mov
xchg
mov
dec
sub
mov
pop
into
xchg
mov
loopne
and
pop
inc
add
add
flds
add
add
pop
clc
nop
nop
nop
nop
jae
add
fiadds
push
add
add
add
clc
nop
nop
nop
nop
jae
add
adc
add
add
add
push
clc
nop
nop
nop
nop
jae
ljmp
mov
mov
repz
nop
nop
nop
nop
jae
add
inc
add
testb
mov
sub
sub
nop
nop
nop
nop
jae
movsl
push
add
ja
pop
jne
clc
nop
nop
nop
nop
jae
aam
add
dec
nop
push
mov
leave
cs
notb
xchg
lods
mov
pusha
fldl
add
test
clc
nop
nop
nop
nop
jae
add
inc
addb
andb
clc
nop
nop
nop
nop
jae
scas
push
add
mov
xchg
clc
nop
nop
nop
nop
jae
fwait
lahf
sbb
jmp
inc
and
clc
nop
nop
nop
nop
jae
add
popf
inc
add
dec
push
clc
nop
nop
nop
nop
jae
sbb
add
lea
clc
nop
nop
nop
nop
jae
popl
addb
in
sti
rep
clc
nop
nop
nop
nop
jae
jo
pop
popl
add
shlb
mov
loopne
or
jne
clc
nop
nop
nop
nop
jae
arpl
pusha
add
je
mov
xchg
adc
adc
nop
nop
nop
nop
jae
idivb
xchg
inc
mov
jne
clc
nop
nop
nop
nop
jae
add
ja
jne
icebp
je
clc
nop
nop
nop
nop
jae
add
add
jo
mov
mov
clc
nop
nop
nop
nop
jae
add
add
add
pop
decl
test
jecxz
clc
nop
nop
nop
nop
jae
ja
add
or
test
add
add
cs
add
dec
sbbl
add
clc
nop
nop
nop
nop
jae
ljmp
pusha
in
add
clc
nop
nop
nop
nop
jae
andb
jp
adc
push
mov
shlb
sbb
push
mov
xchg
ret
xchg
add
sub
add
xchg
jl
faddp
xor
push
mov
xchg
ret
inc
add
hlt
xlat
flds
addb
add
push
mov
xchg
ret
cmpb
add
lea
nop
nop
nop
nop
jae
mov
add
fwait
clc
nop
nop
nop
nop
jae
lahf
add
ja
je
mov
sub
push
mov
leave
cs
push
add
add
add
push
add
roll
mov
xchg
ret
and
add
loopne
scas
aas
notl
push
mov
xchg
ret
add
dec
add
adc
rep
clc
nop
nop
nop
nop
jae
fiadds
mov
popf
add
add
rcll
push
mov
leave
cs
jne
xchg
cmp
add
arpl
out
jbe
loopne
movsb
les
lea
nop
push
mov
leave
cs
sbb
add
and
test
nop
push
mov
leave
cs
jne
jne
aam
add
xchg
add
sub
push
inc
add
or
add
add
push
mov
leave
cs
addb
and
add
arpl
loopne
les
rcll
jmp
mov
push
add
sub
clc
nop
nop
nop
nop
jae
add
add
add
jne
add
in
jge
mov
jno
push
add
add
add
pop
incl
mov
pop
pop
pop
push
pop
nop
push
mov
leave
cs
push
add
add
jne
cs
mov
push
es
jecxz
push
mov
leave
cs
add
xlat
mov
add
nop
push
mov
leave
cs
add
mov
mov
sbb
push
mov
xchg
ret
addl
fwait
lahf
mov
mov
je
mov
nop
nop
jae
mov
add
add
sti
cmc
stos
nop
push
mov
leave
cs
add
add
dec
inc
or
push
insb
pusha
and
sub
clc
nop
nop
nop
nop
jae
add
dec
je
add
movsl
add
push
mov
xchg
ret
sbb
add
jl
add
inc
inc
push
mov
xchg
ret
cmc
hlt
ljmp
fwait
mov
push
nop
push
mov
leave
cs
add
out
push
add
add
xchg
mov
push
mov
leave
cs
mov
ficoms
add
add
add
cmpl
nop
push
mov
leave
cs
add
add
jno
aam
xchg
mov
iret
movzwl
clc
nop
nop
nop
nop
jae
dec
je
add
push
add
add
and
mov
xchg
ret
out
aam
scas
flds
fwait
pop
popf
push
lods
sub
nop
nop
nop
nop
jae
sbb
popf
add
lods
push
mov
inc
adc
cs
ljmp
add
push
mov
xchg
ret
add
adc
add
add
add
nop
push
mov
leave
cs
add
fiadds
add
add
fld
add
push
push
mov
xchg
ret
jo
add
add
testb
jno
jno
cmp
push
clc
nop
nop
nop
nop
jae
or
add
mov
and
nop
nop
nop
nop
jae
add
add
sub
or
add
add
add
add
mov
clc
nop
nop
nop
nop
jae
out
add
push
add
xchg
add
and
nop
push
mov
leave
cs
add
push
movsl
add
les
jmp
add
jp
add
lods
inc
cld
jo
xchg
xor
add
add
push
mov
xchg
ret
dec
inc
lahf
add
add
inc
cmc
jne
nop
push
mov
leave
cs
fnstenv
sbb
test
call
cs
mov
add
clc
nop
push
mov
leave
cs
add
add
add
inc
push
clc
nop
nop
nop
nop
jae
mov
sub
lahf
push
xlat
add
push
mov
push
push
push
adc
daa
add
sbb
clc
cli
mov
nop
push
mov
leave
cs
add
hlt
inc
ljmp
add
mov
nop
nop
nop
jae
add
cmc
add
mov
add
sarb
in
loop
push
mov
xchg
ret
addl
pop
fimuls
iret
ret
nop
push
mov
leave
cs
inc
jo
add
hlt
add
idivl
lret
mov
leave
cs
jl
add
add
add
in
leave
cs
fldcw
add
je
push
mov
and
add
pop
add
push
add
add
add
xor
nop
push
mov
leave
cs
mov
add
and
xlat
push
clc
nop
nop
nop
nop
jae
add
add
add
and
nop
nop
nop
nop
jae
scas
jno
add
add
add
inc
call
leave
cs
add
inc
mov
mov
dec
mov
nop
push
mov
leave
cs
add
dec
add
mov
nop
nop
nop
jae
ljmp
add
and
roll
mov
xchg
ret
add
adc
add
addb
or
ljmp
ret
jp
add
dec
push
dec
sbb
mov
add
clc
nop
nop
nop
nop
jae
arpl
jl
mov
lock
fcmovnb
call
nop
nop
jae
cmc
push
xchg
addb
add
dec
ret
ret
nop
push
mov
leave
cs
xor
popf
add
mov
inc
ja
lahf
push
mov
lea
add
add
add
and
pop
mov
aas
ret
and
test
mov
nop
nop
jae
inc
mov
adc
sti
cmpb
cmp
ret
and
add
mov
and
inc
add
xchg
sub
add
inc
inc
add
orb
fcompp
adc
hlt
pop
add
pop
clc
nop
nop
nop
nop
jae
adc
add
inc
out
inc
add
fistl
pop
ja
add
or
cmp
ja
cmpb
nop
nop
nop
nop
jae
add
imul
adc
js,pt
call
push
mov
xchg
ret
add
jp
sti
cmp
les
mov
add
add
push
rol
dec
flds
add
jb
add
std
push
mov
jno
mov
movsb
add
add
pushf
add
addb
add
add
nop
jae
add
fwait
add
out
popf
pop
push
push
mov
xchg
ret
inc
and
add
mov
add
and
in
stos
fidivrl
mov
push
mov
xchg
ret
dec
addb
add
adc
dec
imul
mov
stc
xor
xchg
pop
add
add
jg
or
push
inc
clc
nop
nop
nop
nop
jae
jne
add
cmp
mov
nop
nop
nop
jae
jl
lds
push
adc
je
insl
push
clc
nop
nop
nop
nop
jae
out
pop
fisubrs
add
fnsave
mov
call
nop
jae
add
add
pusha
add
mov
clc
nop
nop
nop
nop
jae
je
mov
add
adc
mov
xchg
ret
add
mov
push
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
hlt
js
daa
fwait
clc
nop
nop
nop
nop
jae
or
mov
add
mov
nop
nop
nop
jae
xchg
add
testb
xchg
inc
or
loopne
push
lods
push
mov
xchg
ret
xchg
mov
mov
je
and
movsb
out
mov
push
mov
xchg
ret
xlat
aam
add
mov
movsl
ja
cld
insb
fimuls
clc
nop
nop
nop
nop
jae
mov
lods
je
popf
pusha
add
clc
nop
nop
nop
nop
jae
mov
add
add
mov
add
add
ss
nop
push
mov
leave
cs
popl
add
cmc
jp
inc
push
nop
push
mov
leave
cs
add
jne
xchg
add
movsl
movsl
add
lcall
jmp
nop
nop
nop
nop
jae
mov
add
mov
sub
nop
nop
jae
sti
sti
push
jno
and
cmpl
nop
nop
jae
add
add
add
jno
add
sbb
mov
xchg
ret
add
add
add
add
rep
clc
nop
nop
nop
nop
jae
add
adc
mov
push
mov
xchg
ret
add
testb
add
add
clc
nop
nop
nop
nop
jae
add
add
mov
jo
and
aad
loope
loope
nop
push
mov
leave
cs
fwait
xlat
scas
add
and
nop
nop
nop
nop
jae
dec
pop
add
inc
inc
jne
add
xor
nop
push
mov
leave
cs
jo
add
add
add
inc
add
nop
nop
nop
jae
add
adc
jne
cld
dec
ja
sub
add
clc
nop
nop
nop
nop
jae
push
mov
fiadds
mov
in
pop
pop
push
mov
xchg
ret
push
add
mov
add
insb
clc
nop
nop
nop
nop
jae
push
add
add
inc
add
jg
add
insb
nop
push
mov
leave
cs
add
mov
sti
add
xabort
nop
nop
nop
jae
pusha
fisubs
add
jp
pop
push
mov
xchg
ret
adc
jp
add
mov
dec
jl
clc
nop
nop
nop
nop
jae
add
sub
jmp
nop
nop
jae
dec
add
jne
ja
jp
add
shl
clc
nop
nop
nop
nop
jae
xchg
add
xchg
add
dec
sub
lods
push
jle
test
nop
push
mov
leave
cs
sti
add
or
nop
nop
nop
jae
add
scas
popf
add
add
push
add
push
mov
xchg
ret
add
add
fnstcw
fsts
mov
xchg
ret
add
andb
sti
popl
jp
scas
push
inc
mov
sbb
mov
in
add
fwait
add
sbb
add
xor
pop
xor
add
push
lock
fs
add
jp
sbb
add
add
add
mov
nop
nop
nop
jae
xchg
add
mov
add
sbb
inc
or
add
nop
nop
nop
nop
jae
add
add
add
aam
push
xor
adc
nop
nop
nop
nop
jae
sub
add
js
adc
clc
nop
nop
nop
nop
jae
add
add
xor
adc
add
add
add
jl
dec
nop
push
mov
leave
cs
add
add
add
add
add
mov
push
dec
inc
add
add
cld
inc
sti
and
xlat
push
xor
push
mov
leave
cs
adc
sti
mov
and
ret
clc
nop
nop
nop
nop
jae
add
fldcw
mov
xlat
mov
nop
nop
nop
nop
jae
push
push
hlt
add
je
add
call
clc
nop
nop
nop
nop
jae
add
dec
push
ja
mov
shlb
mov
mov
xchg
ret
fldl
fisttpll
sbb
jmp
jbe
inc
add
add
add
add
mov
push
add
or
cmp
jae
nop
nop
nop
nop
jae
inc
adc
add
pop
orb
inc
add
add
jno
add
scas
jp
xchg
sbb
cmp
nop
nop
nop
nop
jae
lds
add
and
sub
dec
inc
add
cld
dec
add
dec
and
add
nop
pusha
mov
clc
nop
nop
nop
nop
jae
add
add
xchg
add
mov
nop
push
mov
leave
cs
dec
dec
xchg
add
add
push
and
cmpsl
push
clc
nop
nop
nop
nop
jae
jno
and
sub
add
push
div
clc
nop
nop
nop
nop
jae
je
add
add
add
add
mov
clc
nop
nop
nop
nop
jae
inc
add
and
ljmp
push
mov
xchg
ret
add
add
mov
dec
je
cmp
clc
nop
nop
nop
nop
jae
lahf
or
add
add
in
adc
add
sub
xchg
and
jp
and
add
add
insb
dec
inc
add
mov
mov
inc
add
je
pop
mov
clc
nop
nop
nop
nop
jae
add
sti
add
popf
push
clc
nop
nop
nop
nop
jae
xchg
scas
add
movsl
add
add
push
pusha
mov
clc
nop
nop
nop
nop
jae
add
add
or
mov
leave
cs
addb
add
add
sub
clc
push
mov
xchg
ret
add
xchg
add
add
dec
in
pop
xchg
call
push
mov
xchg
ret
or
testb
mov
xor
int3
insb
inc
add
adcb
jl
inc
mov
mov
clc
nop
nop
nop
nop
jae
add
scas
add
popf
xlat
add
adcl
xchg
mov
push
add
inc
pusha
pusha
add
add
add
mov
nop
nop
nop
jae
add
xchg
add
addb
add
cs
add
dec
add
add
dec
rorl
nop
nop
nop
nop
jae
sbb
and
dec
push
mov
xchg
ret
jo
ja
jne
aam
push
out
xchg
mov
fdivrp
incl
push
mov
add
fwait
add
add
cld
addb
push
pusha
mov
push
imul
nop
nop
nop
jae
add
movsl
addb
add
add
mov
nop
nop
nop
jae
cmp
add
add
lds
push
xchg
lock
clc
nop
nop
nop
nop
jae
add
add
add
lods
push
mov
push
mov
xchg
ret
add
add
jl
add
lahf
add
pop
cmp
mov
leave
cs
lds
sub
lahf
add
and
mov
xchg
ret
inc
push
add
je
add
ja
pop
adc
mov
pop
lods
adc
shl
imul
orl
call
xlat
out
add
pop
clc
nop
nop
nop
nop
jae
add
add
add
add
inc
inc
hlt
inc
cld
clc
nop
nop
nop
nop
jae
sti
lods
scas
add
lds
add
jne
jns
push
mov
xchg
ret
inc
add
xchg
add
and
jl
iretw
push
push
mov
xchg
ret
add
hlt
add
or
cmp
insb
xor
push
mov
xchg
ret
sti
add
and
cmp
adc
push
mov
leave
cs
orb
add
pusha
inc
mov
mov
push
mov
xchg
ret
add
add
ja
add
add
push
inc
and
mov
shrl
nop
nop
nop
nop
jae
add
cmc
mov
add
mov
clc
nop
nop
nop
nop
jae
add
push
add
sbb
add
add
clc
nop
nop
nop
nop
jae
add
lds
nop
rcl
rol
mov
sti
clc
nop
nop
nop
nop
jae
add
lahf
add
add
clc
nop
nop
nop
nop
jae
mov
xchg
sbb
add
add
add
lock
nop
push
mov
leave
cs
add
add
jne
mov
fwait
mov
clc
nop
nop
nop
nop
jae
add
dec
add
mov
clc
nop
nop
nop
nop
jae
lds
add
push
add
fnstsw
rol
in
cld
push
mov
xchg
ret
add
addl
add
mov
add
in
clc
nop
nop
nop
nop
jae
xchg
lahf
ja
xchg
inc
arpl
sub
nop
nop
nop
jae
dec
add
add
mov
xchg
mov
sbb
rcll
imul
nop
nop
jae
xchg
inc
add
mov
add
mov
xchg
ret
mov
hlt
add
dec
mov
nop
nop
nop
nop
jae
add
add
mov
add
add
ja
subl
nop
push
mov
leave
cs
add
add
mov
fwait
add
ds
shll
call
xchg
jl
add
add
add
add
movb
cmp
nop
nop
nop
nop
jae
push
add
add
add
jne
mov
shll
push
clc
nop
nop
nop
nop
jae
movsl
mov
add
hlt
add
stos
nop
push
mov
leave
cs
and
add
add
ljmp
push
mov
leave
cs
add
arpl
add
inc
xchg
fiadds
and
pop
add
push
mov
xchg
ret
add
add
pusha
xchg
dec
neg
call
clc
nop
nop
nop
nop
jae
inc
fldl
addb
inc
add
fwait
push
clc
nop
nop
nop
nop
jae
mov
mov
clc
nop
nop
nop
nop
jae
add
push
mov
inc
add
in
testl
add
add
out
cmpsl
cltd
add
push
add
nop
nop
nop
nop
jae
push
add
add
adc
scas
lds
mov
xchg
ret
pusha
and
add
add
add
clc
nop
nop
nop
nop
jae
add
and
add
nop
nop
nop
nop
jae
jp
pop
hlt
and
and
sub
push
mov
xchg
ret
push
add
hlt
add
add
dec
add
notb
pusha
push
mov
xchg
ret
add
add
push
add
add
dec
stos
mov
in
leave
cs
add
add
mov
aas
mov
clc
nop
nop
nop
nop
jae
or
movsl
add
dec
sar
clc
nop
nop
nop
nop
jae
add
sti
add
cld
add
sahf
mov
mov
loope
inc
add
add
add
add
test
in
call
cs
add
addb
adc
or
nop
nop
nop
nop
jae
dec
jne
xchg
add
add
popf
jo
add
push
mov
xchg
ret
add
add
fwait
out
push
nop
push
mov
leave
cs
add
add
or
and
ja
add
in
inc
add
add
xchg
pop
add
and
mov
nop
push
mov
leave
cs
add
adc
fwait
adc
ret
mov
mov
nop
nop
nop
jae
push
or
dec
add
push
mov
xchg
ret
add
ljmp
add
add
clc
nop
nop
nop
nop
jae
add
jno
xlat
ja
push
mov
xchg
cmpl
nop
jae
add
ja
lahf
push
out
ret
mov
clc
nop
nop
nop
nop
jae
inc
add
add
add
ljmp
push
mov
leave
cs
sbb
mov
add
sar
nop
nop
nop
nop
jae
add
add
jne
ss
push
nop
push
mov
leave
cs
add
dec
dec
add
cmc
fistpl
clc
nop
nop
nop
nop
jae
push
dec
jne
out
add
lea
clc
nop
nop
nop
nop
jae
scas
add
mov
jno
xlat
add
nop
nop
nop
jae
ja
fwait
add
mov
jbe
push
push
mov
xchg
ret
add
lahf
add
add
mov
add
popl
insb
mov
clc
nop
nop
nop
nop
jae
out
push
je
adc
add
loopne
leave
xor
clc
nop
nop
nop
nop
jae
addb
mov
test
nop
push
mov
leave
cs
adc
xlat
add
out
ljmp
in
add
sub
add
leave
jae
jle
in
lret
add
or
test
nop
nop
nop
nop
jae
add
dec
testb
add
call
clc
nop
nop
nop
nop
jae
jp
sub
test
nop
nop
nop
nop
jae
add
ja
add
mov
ljmp
mov
xchg
add
and
push
mov
add
jae
xchg
sbb
mov
ds
lock
pusha
cmpsb
cmp
lret
add
jle
mov
testl
pop
iret
addb
dec
rorl
daa
in
or
out
sbb
test
inc
push
dec
fisubl
or
mov
test
scas
push
shr
sbb
scas
sbb
sbb
les
int3
sbb
jae
jae
jo
repz
mov
subl
rol
sbb
mov
mov
adc
or
or
in
xlat
xchg
jo
mov
lds
lds
imul
adc
lds
add
jbe
push
sub
leave
xchg
mov
jmp
mov
movsb
das
mov
nop
and
pusha
or
lds
inc
mov
jo
mov
lds
push
nop
lds
jp
jo
xlat
test
mov
sub
imul
mov
xchg
ret
inc
lcall
mov
mov
gs
or
adc
ja
into
in
jo
jg
lahf
icebp
cmpsl
rcl
xchg
add
lds
add
or
xchg
pop
sbb
cmp
add
mov
in
outsl
jg
ret
aad
push
addr16
notl
lock
and
jne
xchg
xor
push
mov
and
push
jns
sub
mov
mov
decb
xor
inc
sbb
and
push
stos
add
or
mull
jmp
ja
std
jmp
jmp
and
add
push
fadds
push
lock
mov
sahf
mov
lds
mov
mov
mov
mov
movb
std
push
sbb
cmpsl
mov
push
ljmp
testb
xor
xor
mov
mov
testb
xorb
xlat
testl
adc
inc
int3
ja
in
pop
pusha
jl
rol
iret
int3
xchg
loopne
dec
inc
lods
jae
in
jp
das
popl
xor
mov
out
test
lahf
sbb
enter
cmp
xchg
outsb
cli
stc
aaa
popa
mov
ss
cmp
adc
mov
dec
jns
xchg
rcrl
fwait
aas
mov
lret
sub
cmp
jne
imul
orl
adc
dec
xor
dec
pop
addr16
loopne
loope
cwtl
lock
mov
jp
push
mov
insl
out
adc
rol
jmp
or
add
shll
pop
mov
dec
xchg
lds
mull
std
test
mov
mov
pop
mov
add
mov
int
call
lock
jo
push
jo
push
jb
das
leave
int
iret
xor
addr16
cmp
xor
pusha
and
sub
in
jbe
lock
call
mov
sub
push
and
das
adc
movsl
jne
jnp
and
mov
pushf
and
mov
rol
into
jnp
mov
sub
inc
mov
xor
into
adc
mov
jne,pn
add
sub
xor
in
xchg
outsl
mov
xchg
mov
int3
add
and
xchg
xchg
lods
movsl
xchg
mov
dec
jg
fisttps
loopne
jmp
lcall
ljmp
cmp
xchg
fistps
in
fidivs
inc
inc
fneni(8087
jp
cmp
rol
ja
imul
sub
mov
cld
sub
aas
pop
push
push
adc
push
add
push
sub
xchg
rol
and
xor
and
dec
inc
imul
mov
fwait
jnp
loopne
add
xor
stos
rcrb
xchg
data16
cli
mov
mov
inc
out
sbb
data16
popa
dec
hlt
cmpsb
lds
jecxz
mov
mov
sub
add
lahf
mov
stos
loopne
test
inc
ret
cmp
dec
pop
xchg
sub
push
nop
rol
pop
jo
push
push
pop
addr16
nop
repnz
hlt
jb
in
mov
and
test
ds
shl
fstps
dec
cmpsb
or
mov
jl
pop
pushl
xlat
lods
shrl
cmp
jle
mov
xchg
push
nop
pop
inc
push
mov
push
or
sbb
daa
jne
sbb
sbb
cs
fsubl
push
pusha
dec
or
daa
jo
sahf
and
imul
mov
jo
and
gs
xorb
mov
fisubs
lretw
outsb
rorb
das
adc
push
adc
add
enter
je
test
push
ror
xor
fwait
psrlw
cwtl
lock
shrl
pusha
add
enter
enter
arpl
lcall
or
ror
pop
arpl
je
loope
loope
stos
fucomp
xchg
idivl
cmp
cmp
push
jecxz
aam
ror
add
sbb
rcl
pop
inc
fsubr
xor
and
insl
stos
fstps
push
adc
cmpsl
lcall
sub
fidivs
in
add
out
add
inc
fsubs
pop
mov
aas
add
out
cmp
sbb
enter
enter
inc
addl
jo
test
cld
jnp
xchg
cmc
mov
enter
push
add
repz
clc
cs
or
aad
or
push
push
mov
fs
mov
enter
dec
jb
xor
aaa
lahf
scas
xorb
sub
mov
sbb
jne
inc
imul
or
adc
enter
dec
lds
cmp
pop
jp
mov
fldl
loopne
or
hlt
insb
cmpsl
enter
cmp
pop
push
xchg
fwait
and
movsl
fwait
mov
mov
addb
bound
xor
jne
enter
mov
ss
sarb
mov
lds
cwtl
ror
nop
inc
leave
xchg
outsl
sub
jbe
or
sub
pop
pop
push
cli
aaa
das
out
inc
and
push
nop
leave
loopne
stos
out
jbe
mov
mov
faddp
dec
pop
ss
mov
pop
and
inc
adc
add
leave
fdivr
out
and
leave
mov
add
sbb
leave
jae
jge
push
sbbl
leave
jo
jb
jl
test
ror
pop
xor
push
ja
push
or
leave
shrb
test
std
pop
fdiv
jbe
cmc
push
push
test
mov
loopne
sbb
dec
loop
test
loopne
enter
push
jo
pop
popa
pop
les
jl
and
push
out
add
leave
das
jmp
mov
aaa
xlat
mov
lock
mov
add
leave
sbbl
ja
xor
and
lahf
pop
push
add
xor
dec
push
or
leave
rolb
test
testl
scas
scas
jl
insb
pushf
jo
adc
leave
push
xchg
add
jp
rorb
pop
in
ds
sbb
and
lea
sub
repz
dec
mov
xor
push
xchg
or
je
orl
cmpsl
sbb
leave
sub
inc
test
and
jno
in
mov
flds
sarl
out
movsb
fildl
lret
push
lret
aas
popa
pop
lahf
popa
jbe
push
int
rolb
or
inc
mov
lret
jmp
cli
xlat
push
lret
mov
dec
int3
rcr
mov
sub
push
add
lret
fs
faddp
cltd
sub
add
mov
jne
ficompl
xor
inc
xor
inc
fidivl
nop
lret
lret
pop
pop
pop
sbb
cmp
or
lret
mov
inc
xor
mov
adc
pusha
lret
movsb
xor
adc
jge
cmp
ror
movsl
jg
add
stos
loop
fdivrl
cmpsb
add
mov
ror
xor
shl
mov
rol
cltd
fwait
sbb
lret
lret
lcall
sbb
leave
sbb
adc
lret
fsubrl
lock
inc
fs
hlt
adc
push
aas
or
mov
mov
loopne
jo
nop
loopne
mov
imul
push
loopne
pushw
and
addr16
jecxz
add
cs
fsubrs
inc
iret
inc
out
mov
add
push
icebp
push
inc
lret
xor
dec
jo
xor
mov
in
loopne
lahf
jp
lock
in
ror
cmpsl
xchg
jno
inc
cmp
jecxz
or
sub
jbe
mov
inc
stos
filds
cmp
and
pushf
mov
popf
adc
ror
inc
test
cld
lcall
mov
in
jo
pop
mov
lret
xchg
adc
push
out
and
clc
xor
push
lret
outsl
dec
sub
pusha
push
mov
pop
xorb
fs
xchg
mov
sarb
adc
and
call
addr16
push
lret
sub
mov
adc
lret
cmpsl
rcr
and
ror
push
add
fldenv
add
lret
sub
push
lahf
lahf
aam
pop
dec
add
lret
int
adc
lret
stos
xor
in
pop
push
stos
xor
rorb
pushl
and
mov
xchg
push
lret
mov
scas
mov
testb
lret
outsl
pop
sub
xor
js
mov
adc
lods
add
mov
pop
dec
sub
push
xor
nop
lret
inc
push
ds
test
pop
inc
mov
aaa
dec
cmp
ljmp
cmp
cwtl
mov
pop
repnz
push
jbe
cmp
jns
jl
inc
repnz
fbld
shll
lret
cmpsl
cwtl
jo
mov
cmp
push
lret
mov
cs
lret
aad
cltd
jmp
sub
test
popf
xchg
in
push
mov
aaa
fistpl
shrb
mov
push
lahf
gs
in
add
and
nop
lret
mov
or
in
nop
lret
stos
adc
add
add
lock
mov
fsubr
into
push
adc
sbb
add
adc
rclb
push
ror
jmp
mov
das
jne
push
sbb
dec
inc
ljmp
aas
and
std
pop
cmp
mov
test
inc
and
orl
mov
bound
sbb
xchg
lock
mov
dec
js
add
int3
pop
mov
push
lret
cmp
rclb
roll
popf
lret
scas
aad
push
dec
lret
in
loopne
pop
sbb
add
int3
adc
fidivrs
rolb
add
call
jo
loope
lock
ja
gs
lods
repz
mov
xor
lock
sbb
int3
in
je
mov
fdivs
adc
int3
mov
jmp
mov
xor
jmp
divl
into
icebp
decb
push
or
lock
repnz
ror
dec
mov
and
out
fistl
xchg
add
test
out
outsl
mov
in
int
adc
cmp
mov
and
cltd
mov
repnz
sti
movsb
out
pop
mov
int3
stos
or
inc
xchg
int
fsubrs
push
fs
lods
cmpsb
movsl
sub
mov
nop
int3
js
ror
iret
push
mov
xor
dec
mov
lret
sbb
int
push
pop
xchg
lahf
adcb
push
sarl
int
xchg
pop
xchg
test
xor
mov
call
fcomps
mov
push
int
loope
xor
or
int
inc
mov
mov
int
mov
mov
loopne
push
or
inc
fs
fsts
stos
and
mov
insl
dec
and
inc
cli
aas
mov
add
pop
imul
enter
pop
stc
cmc
loopne
movsl
dec
mov
int
dec
dec
lret
or
lock
aam
test
jmp
rep
add
int
nop
int
add
stos
test
dec
mov
push
int
xchg
nop
int
loop
dec
cmp
ret
sub
pop
addl
dec
cmp
cltd
leave
xchg
icebp
push
movsb
mov
push
push
int
or
fnsave
push
jmp
xor
call
int
inc
int
aas
push
repnz
rcr
or
int
add
int
int3
fsts
push
int
movsb
dec
std
leave
jecxz
cli
aas
mov
mov
cli
jb
lods
adc
int
mov
push
int
jmp
jbe
test
sbb
sub
jbe
aas
xor
ror
xor
fldl
jo
mov
pop
add
int
outsb
popa
cmp
outsb
jmp
sub
in
and
push
xchg
js
sbb
int
je
sahf
mov
mov
xor
ds
into
imul
repz
jmp
ret
push
into
xor
sti
jmp
pushf
ror
push
inc
into
ljmp
stos
hlt
imul
into
sub
into
inc
xor
or
xchg
mov
jne
mov
arpl
pop
popf
ss
pop
in
mov
int3
push
inc
out
fsubrl
daa
js
xor
pop
push
sarl
aaa
sbb
stos
xor
into
cmp
aas
dec
push
int3
inc
dec
sbb
pop
repnz
mov
xlat
in
xchg
pusha
into
push
ror
fnsave
rclb
or
pop
leave
jnp
aam
mov
cltd
fadd
cmc
sub
inc
call
jle
pop
ss
cmp
xchg
lods
roll
add
into
jns
pop
pop
add
into
cld
inc
imul
outsl
out
mov
into
fcompl
in
adc
mov
rol
dec
jecxz
inc
ret
into
pop
les
out
sbb
jo
push
lahf
out
dec
jp
add
into
push
push
inc
into
ss
es
movsl
inc
enter
inc
into
pop
lods
mov
push
out
ret
pop
test
into
xor
pop
loop
leave
into
std
fstpt
mov
mov
into
mov
outsb
dec
pop
add
into
into
lods
std
dec
dec
fisubl
push
outsb
sbb
mov
sbb
mov
popa
les
ficoml
mov
loopne
mov
add
ror
shrb
iret
gs
lret
xchg
popa
add
insl
mov
jp
rolb
cmp
adc
nop
iret
faddl
ror
or
or
nop
push
iret
jnp
and
ret
iret
or
sahf
mov
mov
icebp
stc
movsb
gs
aad
sub
pop
and
mov
xor
ljmp
inc
mov
push
jo
jo
add
dec
jmp
inc
jecxz
nop
mov
and
xor
push
xor
lea
mov
pushf
loopne
ficomps
cmpsl
add
fidivrs
iret
cmp
jo
adcb
lds
adc
jl
dec
xchg
pop
sub
scas
je
mov
shrb
iret
add
xchg
ror
jb
dec
data16
and
jle
repz
aam
lock
xor
mov
aas
lods
scas
pop
imul
xchg
les
jns
mov
shll
push
and
shrb
rcll
lea
or
iret
dec
mov
ror
push
xchg
adc
mov
stc
and
loopne
mov
mov
ror
out
jle
fdiv
int3
push
and
or
in
ror
call
mov
ret
iret
mov
cli
sub
jo
inc
ljmp
loope
pop
scas
mov
iret
dec
cmp
inc
jae
shrb
mov
xchg
iret
cwtl
xor
out
aas
jl
push
xchg
xor
xor
and
inc
shl
xchg
adc
xchg
rcl
add
bound
lods
movsb
outsl
xchg
aam
movsl
popf
jb
push
lret
out
sub
cli
xchg
add
push
sub
cmc
mov
rcl
addr16
adc
pop
jae
xlat
cmpsl
das
test
repz
mov
sarb
fidivs
add
mov
pusha
test
inc
movsb
mov
roll
fwait
or
shl
dec
gs
lock
push
xor
fwait
adc
cmc
pop
xchg
es
rcl
jg
inc
xchg
fdiv
cmpsl
push
movsl
cmp
rclb
imul
jbe
mov
shlb
hlt
subps
add
sarb
mov
imul
push
xor
dec
fisubrs
ljmp
shl
ret
adc
sub
dec
dec
mov
neg
loope
xor
inc
xor
sbb
shrb
lea
loopne
jecxz
neg
jp
mov
adc
xlat
lods
outsb
xchg
mov
rcl
dec
cld
cmp
xchg
fbstp
and
jb
xor
inc
jl
sar
add
rorb
push
shlb
rcl
push
hlt
cli
neg
cltd
outsb
mov
shlb
shl
stos
and
mov
push
es
call
jo
fimuls
std
pop
int
lret
fs
hlt
and
lcall
adc
shlb
lahf
aad
icebp
lcall
repz
stos
adc
xchg
and
out
xchg
pusha
shl
adc
shll
mov
xor
lock
xor
pop
sub
rcl
scas
xchg
add
cmpsl
push
popf
add
dec
lahf
inc
fnstenv
mov
sar
xchg
mov
shl
ljmp
jne
int
scas
inc
shrl
lret
sbb
cmp
add
inc
sub
div
enter
popa
sarl
es
mov
add
insb
inc
shll
xor
inc
adc
push
sub
jo
jmp
mov
mov
call
cmp
and
divb
or
xchg
ret
fistpl
jbe
push
mov
aas
nop
lock
mov
sub
movsb
icebp
fistpll
add
shrl
mov
jg
cs
out
inc
inc
cmpsb
lock
lods
adc
inc
xor
push
sbb
cmpsl
xor
dec
pop
mov
pop
call
dec
adc
pop
lea
push
mov
or
rcrl
loopne
in
mov
addl
roll
adcb
test
mov
pop
mov
adc
shl
int3
out
mov
ror
test
lret
fisubrl
sub
dec
loop
lahf
jno
pop
adc
mulb
mov
sbb
roll
xor
movsl
repz
push
adc
push
cmpsl
mov
loopne
nop
rorl
rcrb
popf
fwait
movsb
mov
inc
add
rolb
pusha
shlb
rcrl
sarb
sbb
rorb
mov
mov
cmp
fldl
rclb
mov
sub
or
jp
rcl
mov
shlb
mov
dec
or
jb
int
push
rcl
cmp
shlb
nop
shlb
xchg
data16
xor
add
rolb
push
or
shrb
cld
fstp
dec
push
and
mov
pop
sbb
mov
ss
cmp
or
iret
int
adc
or
pop
ret
dec
sti
ja
add
sti
xchg
test
rclb
push
rcr
mov
xorb
inc
or
sbb
jo
outsb
inc
pusha
fisubs
inc
imul
mov
and
adc
mov
jecxz
lods
shlb
and
push
push
shrb
rcl
dec
nop
adc
pop
loopne
movsb
push
dec
enter
push
sub
push
add
shl
mov
rclb
xor
sarb
pusha
rclb
rcl
mov
repz
pop
outsb
mov
sbb
movsl
daa
cs
popa
das
and
idivl
fsubp
shlb
shlb
inc
add
cmp
xor
lock
mov
mov
sbb
nop
shrb
mov
pop
xchg
jle
imul
jno
and
cmp
mov
push
rcll
daa
sbb
lret
mov
xchg
adc
jp
push
pusha
shrl
shll
inc
xchg
and
insb
xchg
push
rcl
popa
jb
push
xchg
in
and
add
push
dec
leave
sub
adc
rcl
xor
je
jge
pop
ja
pop
inc
sub
out
mov
shll
rolb
and
notl
cmc
out
add
cmp
cld
mov
push
pusha
shr
mov
xchg
inc
sar
decl
or
rorl
jo
mov
adc
roll
roll
lahf
sti
int
xor
cmp
lods
lods
repnz
inc
outsl
rorl
and
imul
pushf
inc
shll
rcrl
iret
test
push
jno
iret
fmull
shl
xor
jo
pop
scas
mov
lock
in
mov
cmp
dec
jb
arpl
pop
dec
cmp
cmp
sub
rcr
pop
lret
rcrl
gs
pop
or
mov
icebp
mov
rcll
loopne
jge
adc
roll
shll
lock
popa
sbb
and
push
nop
roll
ret
cmpl
cwtl
rcl
hlt
enter
mov
and
xchg
and
icebp
push
and
add
leave
out
sahf
and
and
fadds
mov
dec
or
arpl
mov
movsb
sarb
xchg
rcl
xor
jnp
sub
sub
test
aam
lea
aam
xor
adc
aam
inc
aam
mov
aam
sub
es
pop
out
jno
test
aam
insl
flds
mov
mov
xor
cmovge
bound
mov
adc
inc
pop
add
aam
push
adc
lret
ja
and
fstpt
xorb
and
lret
out
cmp
add
out
xor
ds
sub
loopne
and
fisubs
sub
aaa
push
inc
mov
mov
test
aam
push
add
jle
ja
lock
dec
inc
and
aam
pusha
aam
pop
dec
add
xchg
mov
ja
fisttpl
add
test
dec
in
lock
lods
or
aam
enter
mov
outsl
jecxz
xchg
enter
inc
outsb
mov
push
adc
sti
or
sbb
aam
bound
aam
ret
jge
jnp
loopne
ret
je
push
inc
cltd
dec
ljmp
adc
adc
cwtl
pusha
aam
and
adc
jmp
pop
pop
inc
mov
inc
mov
push
rcl
and
loopne
mov
out
idiv
mov
rorl
pop
jno
std
hlt
outsl
das
test
mov
add
in
imul
aam
sub
sbb
aam
insb
inc
xchg
aam
jecxz
and
repnz
push
ss
outsb
mov
sbb
lret
xchg
push
aad
and
lock
mov
sub
stos
adc
cld
into
xor
arpl
push
lock
lea
mov
add
aad
mov
ljmp
xchg
adc
sub
xchg
sub
mov
adc
fisubrl
insl
in
insb
mov
arpl
inc
movsl
hlt
clc
pop
std
mov
jle
pop
shll
call
mov
push
xchg
nop
aad
add
mov
iret
mov
aad
xor
pop
aaa
jmp
ljmp
fmull
aas
xor
aad
mov
mov
jmp
pop
sbb
aad
enter
andl
aad
bound
aas
mov
sahf
pusha
aad
lods
pop
pop
roll
inc
leave
xchg
and
aad
loope
nop
push
aad
jmp
loopne
inc
fildll
dec
jnp
sarb
xor
out
xchg
aad
fsubs
outsl
pop
or
aad
push
mov
jmp
xchg
adc
aad
xor
pop
into
aas
mov
aad
mov
std
enter
push
jo
mov
cmp
aad
mov
jo
enter
leave
rcll
jae
mov
aad
add
aad
movsb
aad
gs
cld
pop
scas
pushf
adc
in
or
aaa
sub
punpckldq
inc
cmpsl
dec
out
in
lock
xor
push
test
stos
push
ljmp
pop
add
xor
inc
inc
aad
rcrb
inc
jo
adc
dec
imul
cld
sub
and
mov
inc
adc
xchg
pusha
push
cmp
xor
mov
jne
and
jo
push
add
outsl
scas
adcb
cmp
rcl
inc
int
ss
push
inc
or
andb
adc
pop
and
inc
jnp
int
jo
xchg
loopne
xlat
std
mov
xor
xchg
loopne
jns
jne
lret
ja
or
jp
add
outsb
faddl
sti
push
movsl
scas
cli
adc
or
cwtl
pusha
sarl
aam
aam
in
cmpsb
lahf
xor
repnz
repnz
jbe
xchg
lock
xchg
pusha
dec
fcmovnbe
stos
lds
pop
jno
cli
and
mov
jl
jo
cwtl
loopne
or
sbb
add
out
ljmp
jb
outsl
stos
in
dec
push
add
mov
dec
mov
dec
adc
je
xorb
mov
jp
push
xchg
std
fisttpl
cli
ljmp
jp
and
push
faddp
imul
fdivs
push
sub
mov
jns
xor
jl
pop
imul
xchg
pop
call
mov
cld
xchg
nop
xlat
rorb
xlat
ljmp
loopne
push
nop
xlat
jge
andb
insl
xchg
and
ret
push
add
jae
cmpsl
jg
addb
loop
fcompl
hlt
xchg
xlat
add
shll
and
xor
xlat
xor
dec
add
xlat
or
xlat
mov
push
lock
cmc
mov
test
ret
dec
or
out
cmp
pop
mov
mov
mov
xlat
dec
insl
insb
cmp
or
pusha
mov
xlat
andl
mov
and
or
mov
add
sahf
pusha
xlat
imull
loop
sub
and
sub
jne
cs
xchg
or
jl
pusha
pop
push
repnz
mov
or
gs
ljmp
mov
mov
xor
inc
xlat
ljmp
and
stos
jmp
cltd
mov
xlat
sbb
mov
leave
icebp
pushf
jo
xorl
mov
jle
call
push
or
xlat
stos
fisttpll
add
bound
js
arpl
xlat
sub
pushf
and
xor
pusha
xlat
or
xlat
sahf
inc
xlat
mov
and
mov
scas
xchg
mov
jae
cmp
addr16
push
fistl
test
mov
mov
rcr
pop
mov
in
adc
aaa
inc
test
lods
mov
fldl
and
cmp
addb
and
lods
loope
sbb
fcom
dec
cmp
test
subl
sub
pop
lahf
pusha
sbb
pop
push
xor
repnz
xchg
mov
fcoms
lock
mov
das
sbb
je
repnz
lock
neg
jle
sbb
and
addb
flds
and
push
addl
iret
lea
scas
addb
lret
pop
xorb
pop
sub
fadds
fadd
lods
shll
cmp
inc
or
fsubr
cld
vcvtdq2pd
and
push
inc
inc
mov
into
gs
or
fmul
out
inc
fadds
or
and
jge
dec
pop
add
fmuls
repnz
loopne
pop
mov
das
cltd
sbb
sub
mov
push
push
cmp
pop
jae
sbb
fsub
mov
and
push
xlat
mov
sti
fwait
js
mov
fs
and
pop
addr16
cmp
call
xor
pop
ds
out
jns
fsubs
xor
or
stos
mov
andps
pusha
adc
fcoms
xor
mov
mov
fcomps
sub
aam
mov
fdivrs
mov
inc
cmp
jnp
lock
and
rcr
adc
lock
pusha
fyl2xp1
fmull
xor
inc
aad
sbb
adc
fnstenv
add
adc
jecxz
je
je
cmpsl
jg
jge
and
pop
push
mov
fstps
xchg
mov
sbb
sbb
sub
jbe
and
ds
push
fstps
into
out
enter
xor
pop
pop
je
loop
push
mov
fsts
fisubl
loope
rcrb
fnstenv
imul
fincstp
inc
push
into
rolb
fstps
xchg
mov
es
ret
push
ss
or
aaa
cltd
test
testb
int3
pop
mov
cltd
jl
shl
fists
shll
or
mov
adc
jecxz
jge
stc
add
fnstcw
lods
inc
pop
sbb
push
cmpsb
andl
lea
ret
mov
loopne
or
push
rcr
repnz
mov
stc
aad
jp
cmp
xor
sub
mov
sbb
cmc
adc
mov
test
fldcw
xlat
repnz
fldpi
shr
push
dec
push
adc
mov
mov
push
inc
testl
mov
inc
xor
push
mov
sub
sbb
stos
add
inc
and
call
pusha
fstps
ficoml
jbe
adc
fcmovbe
out
cmpsb
sub
mov
fiaddl
sbb
push
fs
pusha
fiaddl
rcr
pop
aad
aad
scas
mov
and
loope
aad
fs
sub
mov
sbb
fcmovu
sbb
fidivrl
pusha
fidivl
lds
sbb
fisubl
bound
pusha
fimull
mov
loopne
dec
aas
add
out
insb
clc
icebp
mov
fisubrl
stc
sar
ss
fidivl
in
push
cmp
rcr
pop
test
adc
rcr
pop
jo
push
or
insb
inc
mov
fdivrs
adc
or
xorb
repz
xor
adc
and
std
and
or
sbb
push
sub
jo
mov
pop
imul
pusha
fnstenv
ret
xor
sub
or
fimull
jo
stos
jge
jmp
cwtl
lock
imul
sub
mov
and
les
div
lods
xchg
cli
push
inc
fidivl
leave
outsl
je
inc
jge
xor
adc
xchg
jle
popa
scas
sub
mov
pusha
fidivl
or
lahf
adcb
lcall
jo
lea
fldcw
cmp
mov
outsl
push
shlb
push
fisubl
pop
inc
xor
repnz
fiaddl
ret
adc
push
sbb
sub
arpl
or
mov
adc
mov
xchg
popf
mov
js
push
inc
mov
outsb
jno
daa
jge
pop
in
lods
dec
pop
aaa
aaa
ljmp
out
jp
in
cwtl
lock
adc
js
lock
sub
sti
xchg
out
rolb
jge
jbe
xor
insb
mov
aad
pusha
fucomi
stc
mov
iret
xor
xchg
jns
xchg
mov
mov
and
pop
push
nop
fistpl
fistpl
mov
daa
lret
es
in
and
and
stos
mov
push
in
movsl
rorl
ds
negl
sub
jns
jo
jnp
or
mov
push
and
jmp
xorb
push
shrl
ret
jp
xor
push
add
fildl
rcr
pop
nop
adc
outsb
sbb
nop
scas
popa
push
pop
mov
daa
pop
frstor
into
std
pop
loope
dec
push
int
xchg
nop
shlb
fcmovne
xor
sbb
lock
push
arpl
add
sbb
xchg
dec
dec
sbb
pusha
lods
pop
jns
and
mov
fistl
mov
push
pusha
fistpl
push
repz
cmp
aaa
adc
fnclex
mov
popa
aaa
test
imul
adc
in
pop
push
fstpt
into
in
xchg
mov
scas
mov
lret
xchg
pusha
cmc
inc
sbb
fmull
nop
fcompl
fsubl
insb
or
mov
fdivl
push
jo
outsl
dec
or
jmp
sub
test
and
jae
push
fdivr
mov
ljmp
lods
and
ret
aaa
sti
shrl
fidivrs
xor
pop
fwait
push
popf
push
xor
cmpsb
cmpsl
sbb
sbb
lret
inc
or
lahf
jle
nop
add
mov
dec
push
push
push
nop
fdiv
mov
shlb
add
fcompl
fsubrl
inc
fmull
jne
nop
rcrl
or
fsubrl
sbb
fcompl
cmp
pop
jns
ret
shll
push
inc
sbb
push
dec
dec
inc
cmpsl
test
cmp
cmp
and
movsb
or
scas
in
inc
stc
add
js
push
fsubrl
dec
fwait
aam
or
adc
test
fcompl
cltd
loope
dec
pop
popa
dec
pop
sbb
fcompl
xor
mov
ja
dec
sub
sbb
lock
xor
push
jl
sbb
faddl
push
push
fsubl
mov
mov
xor
cs
mov
aaa
xlat
adc
fdivl
jns
dec
xor
dec
xor
in
sub
sbb
lock
jle
lock
sub
out
sbb
dec
adc
fnsave
ljmp
cld
arpl
test
xchg
pop
xor
fst
imul
jmp
mov
dec
pop
mov
jns
mov
lret
movsl
aad
add
les
xor
or
dec
pop
lahf
pop
icebp
mov
jns
pop
fnstsw
mov
or
inc
fldl
in
and
xor
inc
lcall
aaa
jae
mov
pusha
fucomp
adc
inc
jl
dec
dec
and
push
jnp
pusha
add
adc
lds
push
xchg
nop
fstl
dec
mov
add
clc
ljmp
push
xchg
cld
sbb
pop
mov
imulb
jo
loopne
dec
std
xchg
push
movsb
xor
mov
fisttpll
mov
addr16
sbb
fstpl
in
or
fisttpll
and
testb
jb
mov
addb
lcall
ret
or
lret
and
xor
arpl
add
negb
push
fucom
das
repnz
stc
popa
xchg
mov
imul
pop
icebp
vandpd
lret
or
add
lcall
mov
arpl
mov
adc
xchg
ja
loopne
add
stos
push
adc
out
testl
cmc
mov
mulb
pusha
lahf
loop
jecxz
roll
mov
lock
pushf
add
clc
loop
lods
pop
aas
mov
pushf
lock
push
xor
push
lcall
xchg
lds
xchg
rcr
mov
fistps
xor
adc
in
int3
mov
and
ficoms
inc
test
fmulp
mov
out
xchg
sbb
fiadds
jno
outsb
push
inc
scas
dec
outsb
icebp
push
out
adc
int3
xchg
and
xchg
jae
pop
out
jmp
inc
fimuls
fsubrp
clc
push
xor
in
notl
loopne
or
test
fidivs
lcall
mov
sub
test
xor
stc
push
inc
outsb
sarl
add
in
nop
ficoms
add
cmp
out
loop
rcr
mov
fisubrs
not
xchg
loopne
stos
cmp
scas
lds
testl
rcr
adc
fimuls
jns
sub
pusha
pop
push
insb
loope
push
mov
fisubs
adc
xchg
xor
repnz
int3
add
fimuls
stos
push
pop
add
pmaddwd
in
mov
xchg
dec
mov
push
jnp
xor
std
cs
pop
fists
mov
inc
in
rcr
mov
lods
pusha
xchg
pop
fchs
xchg
and
push
sbb
fisubrs
adc
fdivrp
push
push
fdivrp
inc
rorl
dec
in
push
push
inc
ficoms
adcb
mov
add
add
fisubs
pop
imul
lahf
dec
in
sub
mov
rcr
jp
ficoms
jo
cmp
lods
std
push
and
xor
test
xor
ds
popf
mov
sub
lea
ret
fists
jle
add
stos
xchg
or
rcr
shlb
inc
sbb
or
add
fisttps
fistps
repz
repz
inc
faddl
jo
cmp
shll
pusha
fbstp
lea
jmp
pusha
fildll
push
repz
push
and
cli
xchg
pusha
fbstp
out
sarl
fdivs
push
push
mov
arpl
pop
clc
push
shl
sbb
stc
mov
push
arpl
je
jbe
sarb
bound
push
xor
lock
add
fistpll
test
mov
add
jle
lahf
inc
pop
jecxz
pushf
loopne
sbb
sarb
jle
add
dec
ret
iret
dec
pushf
pusha
fucomip
cwtl
jo
sub
mov
push
scas
cli
xchg
xor
inc
push
xor
xchg
mov
sbb
or
out
loope
aaa
fildll
cs
rcr
xor
cmp
pop
test
fistpll
out
add
out
call
sub
push
rcr
push
int3
shrl
dec
xchg
fisubrl
int3
inc
popa
scas
pop
fidivs
add
mov
ffreep
xor
or
push
push
rol
js
loope
and
loopne
xor
shl
inc
loope
inc
mov
gs
xchg
add
addl
push
mov
leave
lcall
sbb
loopne
lret
lret
pop
push
jmp
xor
lahf
icebp
xchg
loopne
ret
push
loopne
inc
mov
and
mov
inc
cmpsb
jb
pusha
cmp
add
loopne
in
xchg
sbbl
cli
or
loopne
push
loopne
push
xchg
mov
sub
xorl
xchg
xlat
mov
loopne
ja
jmp
rcrb
push
loopne
xchg
nop
loopne
lcall
mov
xor
mov
mov
lock
cs
jb
xorb
stos
lahf
out
and
and
mov
mov
icebp
mov
inc
mov
pusha
nop
shl
mov
jmp
loop
stos
stos
sbb
loopne
cmp
movsl
nop
mov
cmp
mov
shrb
push
sbb
shl
add
loopne
adc
xorb
or
loopne
loope
stc
add
loopne
push
push
loopne
add
shl
clc
push
sbbl
stos
fnsave
fildl
loopne
shl
mov
and
sahf
nop
loopne
adc
push
inc
loopne
fistps
push
loopne
xchg
nop
loopne
in
dec
lret
push
test
dec
jge
jno
push
push
dec
mov
stc
jmp
add
loopne
pop
sub
das
lock
nop
loopne
push
inc
mov
shl
jge
pop
xor
scas
cmpsl
sbb
mov
int
in
mov
loope
jno
mov
loope
adc
loope
scas
lret
adc
loope
push
iret
sub
push
loope
and
xor
adc
mov
push
or
sub
daa
and
xchg
enter
sbb
loope
mov
inc
loope
jb
jmp
fcoms
arpl
jno
pop
or
mov
dec
popf
loopne
jle
shl
icebp
imul
in
roll
mov
stos
clc
jnp
nop
loope
inc
aad
outsb
inc
push
aas
mov
mov
pusha
mov
je
inc
cmp
movl
aad
lock
inc
xchg
add
mov
pop
mov
sarb
adcl
popf
fistps
lcall
mov
imul
loope
insb
mov
and
sub
aam
aam
inc
inc
and
mov
inc
fldt
pavgb
mov
mov
loope
clc
icebp
popa
rcr
test
pop
or
lahf
jnp
mov
int
test
loope
push
mov
fists
es
mov
or
push
push
loope
data16
mov
loope
and
mov
out
jl
nop
loope
mov
cmp
jbe
roll
cmpsl
ljmp
fdivl
cmc
int3
addr16
dec
ja
into
leave
jl
push
and
xchg
aaa
mov
dec
stos
xor
pusha
cmpsl
jl
lcall
xor
mov
shl
xor
and
dec
test
sub
adc
pop
dec
inc
std
mov
shrb
cmp
dec
jmp
lock
out
inc
mov
loop
jo
aam
pop
mov
frstor
cld
push
loop
out
inc
push
out
jae
out
std
sti
in
pushf
push
loop
jecxz
add
loop
jbe
daa
ud1
and
lock
push
pop
mov
xchg
popa
and
and
sub
jmp
sub
loop
push
pop
lea
loop
cmp
push
adc
stos
movsb
jo
dec
mov
inc
inc
jb
push
dec
xchg
push
loop
mov
xchg
xor
and
imul
push
xchg
xor
or
out
insl
mov
nop
loop
in
mov
out
ss
loop
das
jmpw
loop
stos
pop
inc
daa
std
es
lcall
lods
pusha
lods
imul
loope
jle
or
loop
out
fs
loopne
adc
test
xchg
shl
adc
adc
in
shrl
ss
or
loop
cmpsl
fbstp
stc
push
sahf
and
ljmp
cwtl
inc
loop
orl
xchg
loop
xor
dec
fsubrl
xchg
loopne
add
loop
xlat
ficoml
ret
fs
push
xchg
mov
sbb
dec
jmp
cld
pop
int3
leave
pop
xor
ljmp
lods
cmp
add
cmp
daa
cs
pop
jb
xor
ljmp
push
or
jecxz
icebp
jne
sbb
adc
lods
push
xor
aaa
sub
scas
push
scas
sbb
jecxz
xor
leave
jne
outsl
call
mov
jno
andb
mov
pop
imul
cs
jecxz
pop
jmp
mov
push
and
cli
mov
jecxz
pop
sub
add
fldcw
icebp
xchg
aaa
and
enter
int
sbb
pop
mov
repnz
icebp
and
bound
adc
out
push
jecxz
cmp
xor
into
inc
mov
cmc
and
push
push
add
shrb
stos
pop
sarl
stos
sub
sub
sub
sbb
jecxz
jecxz
push
rcrl
jno
mov
xchg
xor
add
or
scas
test
jecxz
pop
pop
stc
cmp
sbbl
aad
shl
popf
test
shrl
jecxz
pop
ret
andb
xor
and
movsl
xchg
in
loopne
add
mov
lahf
mov
mov
jo
dec
out
xchg
and
lock
out
fcmove
xchg
and
pop
lret
aaa
and
cmp
jmp
push
jecxz
mov
jecxz
aaa
jbe
adc
jecxz
pop
inc
idivb
push
ljmp
in
negl
mov
shl
fmuls
mov
xchg
scas
jp
xchg
in
sub
out
clc
daa
jno
hlt
mov
jnp
lock
enter
push
inc
in
mov
inc
mov
mov
in
jo
sub
xchg
in
rorb
add
stos
push
data16
xor
xor
aad
jbe
inc
lds
int3
dec
and
leave
fstpl
ljmp
mov
aaa
lds
add
pop
push
sbb
in
cld
push
xchg
push
jae
jle
push
movsl
inc
inc
gs
orl
xchg
push
inc
in
fmuls
xor
inc
adc
lods
add
ret
std
inc
inc
data16
jge
sbb
outsb
mov
loopne
in
jae
fsubl
jp
scas
xchg
loopne
push
xor
insl
outsb
push
pop
nop
add
sub
inc
scas
call
in
xchg
mov
push
addr16
cwtl
lock
pusha
in
sub
ss
adc
js
inc
out
in
jmp
test
mov
mov
mov
in
inc
in
mov
push
mov
push
inc
cmpl
lock
pop
in
dec
lock
lock
pusha
in
push
pop
je
jno
mov
jo
push
daa
movsl
aaa
ja
jg
pop
cmp
in
push
cs
add
in
mov
js
imul
mov
adc
in
cmp
add
mov
lahf
rcrb
in
mov
sub
pusha
push
loopne
mov
xlat
pop
mov
in
lods
mov
in
test
push
pusha
in
je
js
adc
clc
stc
repz
jae
fisubl
in
lods
mov
push
sahf
pusha
in
push
clc
adcl
jmp
cmpsb
lods
dec
push
push
jecxz
add
adcb
ret
dec
adc
nop
in
push
shl
mov
jne
testl
neg
dec
cld
in
mov
or
in
jg
pop
loope
test
in
sub
gs
cmp
push
and
inc
mov
rep
jo
push
in
loop
mov
dec
jg
das
xchg
and
lods
movsl
in
cmp
jge
jge
call
nop
add
fdivs
mov
in
adc
xor
cmp
test
lret
push
push
mov
mov
cmp
and
push
adc
pusha
in
shl
in
mov
in
and
or
push
adc
out
push
in
loopne
enter
in
push
lahf
lcall
pusha
in
shl
adc
pop
pusha
or
or
in
data16
xchg
decl
roll
pop
pop
and
dec
popf
or
stc
mov
out
loopne
mov
nop
out
or
fwait
xor
inc
cld
loopne
fcomip
pop
or
dec
pop
add
mov
add
push
cmp
ljmp
xor
cmp
and
and
jp
jns
lcall
add
out
dec
add
push
sub
dec
lcall
out
mov
decb
add
aad
test
out
dec
lea
dec
jnp
mov
inc
mov
pop
das
inc
dec
dec
ja
pop
test
out
pop
or
xchg
pop
inc
mov
push
jnp
outsb
nop
add
dec
xor
pusha
xchg
out
add
out
jno
sub
aas
sub
imul
mov
jae
pop
mov
add
lds
push
mov
and
or
or
loopne
or
push
shl
loop
rol
xor
into
andl
adc
jb
dec
mov
repnz
pop
nop
add
lret
mov
out
sbb
xor
mov
push
vshufps
shl
xor
out
inc
out
mov
cmp
test
inc
out
icebp
or
out
inc
ret
pop
pop
addr16
jae
push
mov
out
push
push
out
dec
pop
test
out
aaa
jle
iret
fsts
and
aad
icebp
in
mov
rorb
dec
test
sti
xchg
out
mov
scas
aas
lahf
ret
dec
jg
shll
lahf
mov
ret
adc
loop
nop
out
add
ds
dec
xchg
loopne
cld
mov
fstpl
cld
jbe
dec
je
sarl
fs
pop
cld
sbb
enter
add
mov
mov
fdivs
inc
out
aas
adc
xchg
cmp
shl
and
loopne
bound
mov
xor
mov
mov
adc
out
nop
out
adcl
pop
dec
ficomps
pop
fcmovnb
or
out
mov
sbb
add
je
push
cmp
sub
cmp
xchg
and
lock
or
fbld
push
inc
sub
mov
mov
out
pop
jl
outsl
dec
mov
inc
pop
fs
jmp
jg
add
pop
dec
pop
das
loop
mov
mov
xor
repnz
movsb
push
cmp
mov
sbb
xor
movsl
jmp
or
out
and
lock
pusha
out
andb
jns,pt
scas
lds
sti
add
out
and
and
pop
popa
xchg
adc
dec
cmp
jmp
jle
dec
xchg
subl
imul
cmp
mov
shl
xor
jno
out
adc
movsb
add
jnp
sbb
xchg
mov
outsb
rcll
nop
out
mov
scas
jae
adcb
cmp
call
inc
daa
arpl
mov
jbe
ss
or
pop
cmc
adcl
mov
push
adc
pop
mov
mov
jp
push
jle
sbb
call
call
nop
call
call
sub
shll
push
and
pop
adc
clc
sbb
push
xor
adc
mov
mov
outsl
es
pusha
call
cmp
cmp
sbb
inc
xlat
push
loopne
lock
pushf
lock
and
leave
mov
sub
ret
cmp
call
das
or
call
mov
shlb
data16
cwtl
shr
sub
call
xchg
lock
in
insb
sub
sub
repz
pusha
call
call
call
stos
in
shr
adc
mov
iret
cmp
decb
shr
mov
pop
aas
outsl
leave
addr16
add
call
or
test
mov
jns
fnstcw
cld
int3
push
lock
cli
mov
call
pop
gs
ret
addr16
leavew
jmp
call
call
repz
lock
stc
js
nop
lock
cmp
adc
call
call
lds
call
cmp
jnp
inc
xor
mov
jp
pop
les
mov
fidivl
pushf
sub
insl
xchg
nop
jmp
jo
xchg
loopne
lret
dec
rcrl
movsl
iret
into
std
jns
add
or
jmp
imul
jmp
adc
jmp
imul
jmp
mov
or
scas
fucomip
enter
cmc
cmpsb
out
fmull
loopne
or
nop
shr
xor
xchg
fcom
popf
scas
add
jmp
clc
jae
movl
std
pop
int
mov
mov
jmp
imul
outsl
xchg
dec
or
jmp
std
add
ret
sbb
mov
pop
pop
fldln2
mov
inc
xchg
xchg
mov
adc
lock
sub
cmc
bound
cld
es
outsb
sahf
inc
jmp
pop
pop
adc
pusha
mov
insl
dec
aad
mov
sbb
jmp
dec
mov
je
sbb
jmp
mov
or
fisttpl
xor
sub
jmp
outsl
xchg
lock
mov
push
cmp
leave
mov
hlt
in
mov
inc
jmp
jmp
bound
sbb
push
lock
pop
mull
cmp
xchg
lock
push
mov
mov
insb
mov
shr
nopl
mov
cli
mov
cmp
jmp
out
bound
sub
insl
push
nop
ljmp
adc
ja
int3
cmc
loope
add
ljmp
and
push
mov
std
xchg
push
ljmp
dec
jns
insb
jmp
popf
xchg
sbb
jge
in
mov
ljmp
ljmp
cmc
in
pop
ss
loop
test
sub
mov
jo
cwtl
nop
ljmp
push
loopne
add
jb
inc
mov
add
or
ljmp
clc
mov
movsb
sub
mov
lret
mov
test
repnz
pop
mov
nop
ljmp
pop
jp
jno
or
jge
mov
mov
stos
dec
push
sub
lock
mov
mov
repnz
and
xor
and
test
loop
out
ret
or
cld
xchg
lret
mov
adc
cmp
xor
cmpsl
inc
jmp
in
dec
insl
ret
gs
cmp
les
mov
and
pop
mov
rcr
or
dec
adc
cmp
and
push
ljmp
shr
pop
jmp
inc
lret
stos
pop
sbbl
xor
loopne
movsb
xchg
test
ljmp
xlat
dec
pop
pop
pop
sub
push
shr
jge
shr
pop
lock
mov
push
insl
lret
pop
aaa
xchg
jmp
mov
jmp
sub
pop
es
sub
jge
fbstp
xor
es
sarl
ljmp
jmp
movsb
lcall
aaa
push
push
jmp
fsubrs
jno
pop
mov
ljmp
jg
adc
nop
sub
aaa
cmpsl
imul
inc
jmp
mov
mov
jmp
jae
mov
ret
xchg
inc
sub
test
ss
int3
inc
add
inc
mov
xchg
adc
leave
dec
shlb
aad
pusha
jmp
shr
push
cmpsl
in
call
or
jmp
stc
xchg
push
ja
inc
and
jmp
cmpsl
lcall
addb
fadds
inc
jb
shr
fstpl
mov
in
inc
push
and
mov
cld
int3
push
icebp
clc
imulb
in
nop
jmp
cmp
pop
pushf
inc
jmp
cmc
iret
cli
and
xchg
push
dec
push
dec
iret
or
jmp
pop
ja
pop
and
insb
cmp
or
cmp
inc
sbb
cli
cmp
inc
jmp
ss
mov
xor
or
mov
lds
sub
and
leave
loope
mov
in
push
push
jmp
adc
pop
icebp
cmp
jp
outsb
cmc
or
push
mov
adc
into
in
sbb
pop
pushf
mov
call
icebp
les
shr
es
cmpl
lock
scas
stos
sbb
in
adc
loop,pt
in
mov
movsl
nop
loopne
or
and
xor
pop
mov
cmp
pushf
push
in
lea
jl
jo
lret
and
and
mov
lret
adc
jo
adc
in
test
dec
dec
and
cmp
loope
or
std
ss
shrl
rcll
in
call
and
or
rolb
in
and
sbb
in
in
xchg
test
xor
js
push
in
aas
jbe
fnstcw
dec
andl
in
mov
test
ret
dec
adc
in
push
sub
hlt
mov
and
loop
cmpsb
scas
pop
pop
in
dec
inc
mov
jmp
lahf
lods
xchg
shr
add
in
add
rorl
mov
iret
rorl
cmc
repnz
mov
jno
mov
and
xor
in
sahf
xor
sub
add
in
lods
sti
xchg
stos
iret
clc
pop
cmp
cmp
mov
jo
stos
scas
lret
mov
in
mov
shrl
pop
push
cmpsl
rcr
and
adc
roll
nop
in
or
push
mov
jne
movsl
jb
adc
leave
fcmovbe
jne
or
in
pop
sahf
xor
mov
dec
gs
jbe,pn
xchg
push
jno
sbb
in
addb
inc
inc
cmp
mov
push
jl
sub
in
mov
dec
and
xchg
sub
lcall
cmpsl
sub
cmpsl
mov
push
pop
mov
mov
or
sbb
mov
and
stc
dec
pushf
adc
sub
dec
push
shr
mov
mov
jo
mov
dec
es
dec
je
nop
in
aam
mov
test
fldenv
gs
add
in
and
pop
fisttps
nop
in
testb
popa
je
push
push
dec
sarl
sbb
int
push
jo
or
in
inc
mov
dec
idivb
pop
cmp
jecxz
inc
xchg
in
jecxz
aad
pop
xchg
adc
push
push
and
sub
pusha
in
cmp
xchg
in
test
lock
in
rolb
xchg
aad
sub
cwtl
lock
jecxz
or
cld
jecxz
pop
cmc
int3
xchg
push
in
mov
in
popa
pop
lahf
loopne
adc
in
das
pop
and
dec
cmc
cmc
mov
leave
lret
jecxz
add
int
mov
push
mov
and
jo
in
cmp
jle
cmp
loopne
jo
in
shr
insl
jl
and
xchg
imul
inc
sbb
dec
repnz
mov
inc
in
add
mov
pusha
in
rcr
pop
out
stos
repnz
pop
std
in
into
lea
rorl
mov
out
mov
sub
cwtl
mov
xor
push
addr16
adc
out
lds
pushaw
xlat
cli
push
cmp
mov
iret
or
out
cmp
mov
xor
mov
shl
push
shr
inc
jl
cmp
push
sub
cld
xchg
movsl
push
aas
lds
scas
cmc
clc
pop
in
gs
xor
add
mov
outsb
cltd
repz
xlat
test
mov
out
arpl
nop
out
neg
push
adc
insb
xchg
lds
inc
inc
decl
nop
out
cmpsl
rclb
stc
cld
ljmp
xor
and
rcll
out
testb
jo
imul
pushl
out
outsb
popf
mov
jno
sub
out
mov
out
ss
mov
xchg
sub
and
movsl
push
shr
pop
lea
inc
inc
dec
mov
push
imul
lret
pop
mov
mov
xchg
xor
adc
jo
xchg
aam
enter
in
and
bound
gs
icebp
and
cmpsb
or
out
mov
fwait
pop
fldenv
and
adc
dec
sub
mov
out
push
xor
in
ret
clc
fsubrl
movsl
in
mov
sbb
fisubrl
jb
nop
lock
xlat
out
outsl
sbb
jnp
mov
cwtl
and
movsb
and
mov
movsl
iret
push
push
push
out
fwait
dec
cmpsl
xor
movsb
mov
and
cmp
sub
jo
add
out
outsl
data16
out
mov
jg
push
push
jo
xor
pusha
fisttps
push
into
jl,pn
pop
lcall
out
mov
test
fmull
test
xor
jl
jo
push
mov
out
mov
xor
imul
lods
fs
sbb
out
sbb
or
pop
lock
pop
or
xchg
out
inc
out
mov
iret
pop
or
push
sbb
ljmp
out
jge
lods
xor
in
add
out
mov
push
add
jno
daa
mov
mov
test
out
les
inc
out
mov
jne
xchg
pusha
out
cmp
incb
sub
or
jbe
mov
mov
enter
out
shlb
enter
push
das
in
inc
in
daa
pop
bnd
out
rcll
mov
out
xor
out
rcll
mov
out
sti
cs
sub
pop
sbb
jmp
rcrl
mov
push
mov
ds
fwait
mov
dec
rorl
nop
out
leave
outsb
repz
pop
mov
xchg
mov
sub
adc
movups
dec
divl
outsb
mov
fnstenv
testb
mov
mov
xchg
js
mulb
add
addr16
push
cli
arpl
bound
or
lock
lock
mov
sub
int3
cmp
addr16
and
push
and
dec
lret
sbb
pop
ja
pusha
out
inc
sub
and
clc
sbb
mov
mov
add
lock
outsl
ret
fstpt
shlb
fidivrs
dec
scas
inc
sub
test
addr16
imul
and
aad
xorb
sarl
lock
aam
popl
ret
cmp
mov
and
popw
je
dec
push
jno
lods
and
dec
xchg
nop
lock
adc
mov
sahf
pusha
lock
or
mov
nop
lock
mov
dec
push
movsl
push
add
and
sub
xor
mov
dec
leave
pop
cltd
repz
fs
aam
mov
mov
lock
daa
jno
call
mov
adc
popf
xor
shl
push
add
fstp
jns
xor
fistpll
jae
mov
sbb
lock
mov
lock
movsb
lock
das
inc
dec
mov
and
add
das
rclb
push
lock
inc
or
pop
adc
lock
inc
movzwl
repnz
inc
push
shlb
das
inc
rep
inc
mov
mov
xchg
lock
xchg
lock
and
xor
jne
sub
mov
insb
loopne
hlt
inc
or
inc
icebp
cmc
popf
icebp
dec
mov
cwtl
add
xchg
jo
imul
icebp
sbb
mov
dec
mov
lahf
pushf
mov
icebp
push
and
lods
cltd
clc
jo
lahf
jns
mov
icebp
out
mov
cmpsb
inc
andb
icebp
fistps
lock
xor
lea
test
sahf
lock
dec
stos
cmp
sbb
lea
mov
icebp
test
rcrb
icebp
jl
inc
stos
xchg
inc
mov
aad
lcall
bound
int3
push
jmp
in
jo
xchg
aaa
fucom
push
xchg
mov
icebp
scas
mov
cmpsl
cs
cmp
push
lods
pushf
lock
movsl
loop
add
and
into
aam
xor
icebp
stos
jb
shrl
pop
pop
pop
and
hlt
add
mov
cmp
pusha
icebp
xchg
xlat
in
inc
icebp
rcll
mov
addr16
pop
or
in
xor
clc
or
dec
sub
js
mov
push
icebp
pusha
jg
sbb
icebp
dec
jno
fisttps
mov
adc
icebp
sbb
cs
inc
pop
adc
loope
mov
adc
push
add
push
inc
jmp
icebp
lcall
sub
popa
andb
jp
cwtl
xor
pop
adc
sbb
repnz
aas
call
or
mov
mov
out
idivl
shlb
adc
pop
movl
xchg
repnz
repnz
inc
daa
fists
nop
bnd
xorb
push
lock
repnz
inc
repnz
jecxz
jmp
mov
push
xor
ja
jo
push
loopne
cmpsl
and
mov
push
xchg
popf
and
inc
loopne
ret
xor
je
sub
fsubrl
mov
shl
dec
fiadds
dec
fidivl
pop
sub
mov
fwait
dec
jne
xor
add
mov
sarl
rcr
dec
xchg
ret
sbb
repnz
and
or
ficompl
cs
and
arpl
push
jne
fs
in
sbb
xor
cmp
push
xor
xchg
jmp
adc
insl
sahf
pusha
repnz
stos
bound
mov
repnz
loopne
test
movsb
inc
mov
pusha
fcomp
sbb
dec
jb
jmp
jb
pop
push
lds
test
repnz
dec
fdivrp
push
jmp
aam
mov
sbb
mull
mov
pop
shrl
sub
xor
repnz
jbe
daa
sub
mov
js
lods
mov
movsb
popf
inc
mov
scas
or
repnz
mov
mov
iret
mov
repnz
fdivl
sti
cmp
sub
gs
aad
rcl
cmp
sbb
rcrl
movsb
cmp
rcr
movsl
mov
and
leave
xchg
push
adc
add
cmp
mov
jbe
push
inc
repz
mov
leave
in
cmc
pusha
push
shl
addb
stc
xchg
jae
inc
inc
fdivrp
xor
icebp
cmp
and
pop
dec
and
rep
jae
mov
popa
xor
scas
in
lret
leave
and
insb
aaa
imul
mov
pop
mov
sbb
mov
dec
jae
cmpsb
stc
xor
rcll
dec
push
fists
adc
pusha
ja
test
in
adc
xchg
aas
pop
cmovae
test
ja
push
les
push
repz
repz
cs
insl
dec
add
repz
mov
jl
dec
std
push
xor
stos
sar
std
sbb
repz
fwait
mov
inc
push
push
ljmp
add
add
imul
xor
addr16
ss
les
ss
outsb
push
lret
pushl
inc
shlb
js
mov
inc
repz
loop
pop
mov
repz
sti
xchg
adc
test
mov
repz
cmp
adc
rep
jnp
sub
mov
add
xor
int
inc
movsb
push
imul
mov
and
sbb
hlt
push
inc
sahf
lock
dec
xchg
xchg
hlt
mov
mov
loopne
push
push
hlt
shlb
sarb
testb
xor
or
sbb
sbb
mov
bound
stos
inc
pop
testb
loopne
xchg
and
xchg
nop
hlt
rcll
sub
and
lret
shl
dec
adc
hlt
call
mov
inc
outsl
xor
pop
cmp
loop
fs
pop
jge
call
dec
lahf
jle
mov
lock
lock
rcll
adc
scas
std
jp
xor
cmp
jns
imul
popa
fs
xlat
fildl
and
insb
push
mov
in
rcr
inc
xchg
xor
dec
push
rcrb
jno
cwtl
xor
lock
cmpsl
sbb
hlt
pop
push
in
push
lods
mov
push
shl
mov
pop
int3
popf
jg
xor
add
hlt
fcoms
arpl
add
test
push
lahf
cmp
push
mov
hlt
mov
add
hlt
int
adc
lock
shlb
out
insl
adc
repnz
repnz
mov
jno
xchg
leave
mov
jns
inc
pop
inc
ds
pop
pop
sahf
pusha
hlt
test
movsb
sbb
hlt
pop
mov
mov
add
hlt
and
inc
sbb
hlt
call
hlt
add
mov
pusha
push
imul
push
fs
mov
push
hlt
xchg
cmp
pusha
hlt
mov
cmc
imul
jbe
xor
dec
test
loop
cltd
xor
xchg
sub
push
add
cs
push
pop
sbb
ss
insl
pusha
hlt
pop
dec
sbb
jmp
sbb
out
pusha
mov
mov
fidivrl
pushf
xor
ret
insb
js
xor
cmc
imul
dec
adc
push
test
cmc
pop
cmp
lock
mov
xchg
xor
cwtl
shl
sbb
cmc
sub
ficompl
pop
push
loope
test
cmpsl
clc
lods
movsl
xchg
out
jae
cmc
loop
cmpl
fsubs
js
cli
dec
jge
das
sbbl
pop
jle
leave
insl
inc
daa
inc
inc
iret
ja
outsl
xor
inc
lds
clc
fistpll
add
cmc
jo
xor
or
inc
movsl
lret
dec
movsb
add
lock
mov
mov
enter
cltd
and
push
cs
in
sub
lock
outsb
jns
and
mov
and
pop
les
fnsave
sub
xchg
shl
shrb
mov
mov
pop
andb
shl
jbe
les
es
into
jae
inc
cmc
std
push
cmc
jne
add
cmc
push
leave
filds
loopne
sahf
push
cmc
sub
cmp
pushf
jo
out
mov
and
xor
data16
inc
jge
decl
aam
test
hlt
test
mov
ss
push
cmp
mov
enter
sbb
imulb
negb
cli
adcb
xchg
mov
pusha
imulb
mov
mov
xor
outsb
jecxz
cmc
movsl
xchg
pop
push
dec
rcrb
xor
push
sub
mov
testb
popa
dec
pop
dec
jns
sub
xor
mov
jno
xchg
mov
arpl
sti
push
xor
sbb
in
mov
jo
addl
jb
lock
jecxz
ficomps
shl
inc
imul
rolb
sti
inc
aaa
sbb
idivb
push
int3
inc
or
out
and
adc
pop
dec
pushl
sbb
add
imul
dec
cli
mov
sbb
divb
jmp
push
and
push
push
arpl
cmp
dec
repnz
sbb
idivb
stos
push
xor
ret
mov
loopne
popf
mov
pop
andl
mov
negl
mov
inc
in
out
dec
pop
jp
sbbl
dec
imul
test
jbe
int
sahf
pusha
negb
push
push
jo
arpl
pop
lret
inc
in
sti
xchg
pusha
test
xchg
out
dec
mov
xor
fisubrl
cmpsb
and
cli
out
jge
xchg
mulb
int
shll
adc
notb
es
in
mov
jl
and
rcl
dec
aaa
call
xor
lock
add
cmp
rcr
jmp
inc
mov
fcmovnb
scas
fsubl
jbe
in
nop
idivl
adc
push
xchg
xor
roll
arpl
imul
mov
fisubl
jl
popa
pop
dec
mov
inc
negl
scas
push
lods
xchg
shl
xor
mov
fisubrs
mov
cmp
lahf
in
xchg
and
testl
testl
mov
popa
cmp
or
push
testl
add
push
stos
cltd
rcl
push
popa
js
push
movsb
dec
mov
ljmp
stc
or
aas
inc
sti
scas
push
mov
mov
mov
notl
nop
not
ss
mov
add
testl
sbb
imull
pop
cmc
pop
jg
inc
loopne
pushf
shl
mov
xor
int3
rclb
pop
and
adc
mov
xchg
notl
jmp
fndisi(8087
inc
cmp
clc
adcl
jae
xor
test
imull
decb
mov
dec
pop
or
test
jo
push
mov
ljmp
jl
out
out
jge
xor
and
inc
cmp
inc
movsb
jbe
das
pop
inc
sbb
testl
push
push
mull
gs
dec
dec
mov
mov
sbb
idivl
add
loop
mov
out
leave
dec
xchg
sar
movsl
jecxz
mov
inc
push
cmp
adcb
add
clc
dec
mov
call
inc
pushf
jo
dec
xchg
sub
mov
clc
in
dec
xlat
mov
test
clc
jns
cmp
xor
dec
outsb
movsl
xchg
icebp
mov
rcll
clc
ss
clc
into
jb
jl
add
push
out
inc
pop
dec
xchg
and
push
push
into
jl
adc
push
ret
adc
clc
repnz
lods
inc
and
sbb
popl
cli
jmp
call
shr
shr
jb
lcall
jnp
mov
sub
push
clc
push
jge
adc
js
fldenv
mov
jmp
out
cwtl
sar
add
clc
lcall
sahf
loopne
or
push
lock
movsb
mov
nop
adc
xchg
dec
scas
scas
outsb
gs
sti
repz
ret
es
fidivl
mov
not
cwtl
and
cmpsl
out
push
int
mov
inc
pop
out
push
add
inc
mov
inc
testb
outsb
cltd
test
add
movl
pusha
clc
loope
add
adc
clc
test
clc
push
fwait
push
cwtl
loopne
sub
adc
pop
adc
clc
inc
nop
push
clc
lcall
mov
inc
mov
sbb
adc
clc
jecxz
loopne
in
mov
inc
stc
xchg
mov
jp
flds
push
or
movsl
jmp
cmp
and
in
pop
lea
sar
loopne
add
cmp
add
stc
sbb
stc
cwtl
mov
jns
fwait
js
dec
dec
xchg
add
es
ja
scas
push
sbb
stc
inc
or
stc
gs
stc
xor
dec
xor
in
xchg
mov
out
push
stc
mov
xchg
stc
pusha
out
add
push
je
sbb
xchg
sar
daa
xchg
stc
adc
xor
lret
mov
adc
icebp
cmpsl
in
xchg
cmc
push
sar
mov
sar
jp
adc
jle
cmp
adc
stc
sbb
and
dec
push
hlt
jo
sbb
stc
lea
push
in
daa
lret
fistpll
sbb
sub
mov
jp
xorb
popa
push
sub
dec
pop
iret
insl
mov
loopne
movsb
xchg
cwtl
inc
stc
cmp
sahf
push
stc
or
sbb
stc
sbb
insb
out
pushl
jno
jne
cmp
inc
stc
and
cmpsb
and
not
movsl
movsb
cmp
and
or
stc
dec
add
xor
stc
ljmp
cwtl
add
add
jge
or
stc
int
imul
stc
leave
push
mov
iret
mov
stc
loop
popa
int
shll
mov
stos
and
mov
mov
lds
nop
stc
sub
mov
add
jns
jno
mov
pop
and
ret
insb
jno
frstor
icebp
cmc
ret
fdiv
jp
mov
js
inc
mov
cli
sub
mov
mov
mov
out
mov
cli
mov
cmp
sub
push
ret
lret
outsb
lret
sar
cmpsl
jnp
lahf
or
cli
add
cli
cmpsl
ja
dec
dec
aaa
fs
ljmp
cli
popl
notl
pop
aam
popa
les
add
popf
push
and
cli
outsl
push
xor
jmp
mov
popf
jecxz
fisttps
rol
push
add
imul
lods
lret
add
sti
add
movsl
xchg
cwtl
and
adcb
jb
jecxz
jb
rorl
cli
neg
adc
cli
push
mov
loopne
cmp
and
inc
xor
push
sub
mov
or
cli
cmp
inc
pop
out
xorb
cli
xorb
xor
inc
cli
sub
add
mov
mov
sub
mov
nop
cli
inc
and
xor
dec
loop
and
lock
lods
adc
cli
add
sub
and
sar
or
cli
inc
adc
cmp
sbb
cli
outsb
mov
inc
test
cli
mov
pushf
push
cli
pop
orl
cli
popa
in
mov
imul
cld
shll
shll
and
or
cli
pop
call
ret
and
ljmp
sti
xor
adc
jns
inc
scas
inc
xchg
adc
xchg
jo
fcoml
mov
cwtl
and
push
nop
sti
push
add
jae
mov
sti
mov
lret
or
sti
cmp
ret
je
inc
dec
mov
push
inc
sti
sarl
pop
xorb
xchg
mov
mov
gs
jns
ret
dec
xlat
sub
cmp
inc
mov
js
jmp
sti
lret
nop
sti
push
cmp
jo
iret
sbb
sti
movsl
std
mov
sti
sbb
add
movsl
xor
push
and
mov
cmpl
fcmovnu
mov
cmp
push
sar
push
dec
sub
push
inc
lods
cwtl
lock
out
dec
pop
jnp
sahf
adc
push
mov
icebp
and
xlat
int
sbb
sub
dec
je
and
sar
or
outsl
pop
jmp
xor
fwait
pop
and
je
frstor
dec
lock
xor
sti
mov
aas
fwait
in
rclb
pusha
sti
push
das
push
inc
mov
pusha
jg
pop
in
dec
bound
in
adcb
fadds
lock
sti
pusha
adcl
outsl
or
sbb
sti
sbb
add
sti
jl
dec
in
mov
add
or
lcall
bound
inc
inc
inc
cmpsb
dec
add
sti
ret
insl
xor
sti
push
pop
mov
test
sti
mulb
sar
sub
aas
push
mov
stos
stc
dec
cmp
inc
mov
jle
loopne
fidivrs
cld
push
inc
cld
push
dec
inc
lret
enter
in
ret
mov
push
cmp
pusha
or
inc
and
mov
std
and
es
aad
pop
push
mov
mov
mov
or
add
cld
mov
lret
lret
in
mov
or
cld
sub
add
jg
and
sar
xor
pop
shr
ret
rorb
movsl
xchg
and
mov
cld
mov
daa
cmp
pop
lret
cld
shlb
addr16
xchg
adc
jmp
sub
mov
cld
pop
or
cmp
mov
add
or
in
and
in
mov
call
cld
pop
icebp
inc
aad
rcr
lcall
mov
inc
xchg
and
pop
jecxz
inc
loope
push
jo
mov
and
xor
push
mov
mov
lea
cld
ret
pop
adc
cld
lahf
loopne
lock
xor
ljmp
testl
nop
cld
push
add
mov
clc
stc
ret
add
lods
outsl
xchg
xor
cmp
incb
push
sbb
inc
xor
out
lock
cld
fstpl
xor
xchg
inc
pop
in
nop
mov
arpl
clc
aas
jecxz
xor
cmc
add
and
dec
mov
cld
cmc
xchg
or
xor
insb
adc
or
enter
jp
std
out
subl
push
pushf
loopne
lods
rorl
std
or
addr16
mov
ja
fcoms
add
add
push
inc
pop
aam
jno
push
into
out
sahf
mov
mov
std
in
lods
popa
and
adc
test
std
lea
dec
repnz
rolb
and
jle
idiv
and
outsb
push
and
mov
loop
stos
ss
cwtl
mov
std
jne
xchg
std
push
add
std
andb
push
push
std
pop
out
popf
repz
rol
cwtl
adc
sub
mov
in
adc
mov
negb
loopne
popf
mov
std
clc
pusha
xlat
cmp
std
sahf
xor
push
cmpsb
mov
sub
pushf
push
std
xor
cmp
int3
fcompl
mov
jg
and
pusha
pop
movsb
jge
loope
or
xor
ror
or
std
mov
std
push
jmp
into
push
and
jbe
xchg
or
std
sti
es
pop
jl
inc
sub
pop
daa
enter
aad
jle
aaa
push
stc
ljmp
std
leave
mov
jg
lds
in
cli
lods
into
jl
xchg
stc
lods
lcall
dec
lret
xlat
add
std
not
loope
ljmp
pop
mov
mov
dec
sub
push
pop
in
test
xchg
push
pusha
std
into
aam
loop
mov
lock
jne
stc
divl
arpl
call
negl
push
sar
jle
test
decb
push
imul
cmpsb
push
pop
sub
push
std
mov
mov
xorb
adc
decb
jl
inc
leave
mov
mov
icebp
xor
push
jno
inc
insb
jmp
cmp
fisttpll
call
movsl
testl
outsb
push
push
jp
mov
fdiv
pop
sbb
mov
inc
shll
cmp
icebp
mov
mov
or
mov
fldenv
sbb
cmpsb
lods
pop
iret
dec
dec
cmpsl
xlat
fcoms
cmp
xchg
dec
sarl
push
jne
les
pop
mov
dec
ret
pusha
fwait
xchg
out
push
jbe
in
nop
in
sub
and
loope
pop
out
lods
jl
pusha
call
mov
loopne
xor
mov
in
insb
pop
outsl
add
mov
pop
dec
xchg
add
add
mov
sbb
test
xchg
fwait
lods
sub
mov
clc
push
pop
mov
mov
in
sub
stos
push
jne
test
jne
sub
rcrl
add
jl
fistpll
aas
imul
inc
sti
bound
cli
gs
test
mov
iret
mov
ss
fcmove
xor
fxch
cmpsb
adc
lea
sbb
in
cmpsl
test
ret
sub
lea
js
nop
jmp
inc
ljmp
out
xlat
mov
pushf
sar
mov
incl
popf
loope
mov
icebp
out
sub
nop
decl
dec
dec
inc
sub
shrl
cmc
aaa
int3
xor
adc
ficomps
xor
vpaddsw
adc
fidivs
pusha
incl
push
cwtl
adc
mov
pop
out
lods
insl
pop
xchg
add
and
inc
imulb
pop
push
sar
jle
ud1
nop
adc
prefetch
dec
or
call
jmp
sbb
call
mov
lcall
sbb
sbb
dec
lret
pushf
and
ret
xor
add
pushl
jmp
ror
dec
cmp
xor
fsubs
int3
in
cmp
and
mov
xor
or
jl
scas
pcmpeqw
loopne
jae
cmp
imulb
popf
pop
jge
fsub
gs
fcoml
testb
mov
popf
jle
cmp
lock
bound
mov
ret
sbb
dec
add
sub
push
mov
xchg
repnz
mov
add
decl
in
mov
inc
lcall
mov
jno
xor
push
mov
clc
pop
sbb
mov
sar
inc
jbe
or
pushl
mov
and
jo
add
incl
outsl
mov
call
mov
inc
jmp
add
xor
mov
clc
fldcw
jmp
inc
jnp
jp
jo
cmp
add
fmull
inc
add
add
add
add
idivl
jmp
push
scas
aam
test
pop
arpl
cld
fisubl
push
xor
jmp
insb
dec
jecxz
push
add
jmp
pusha
add
rolb
mov
filds
cmp
xor
jle
dec
cmp
fwait
shll
add
scas
mov
outsb
aaa
int3
and
dec
lret
add
movsl
jo
rolb
not
cltd
sbb
add
or
add
in
and
sbb
mov
mov
add
jp
dec
sbb
pop
xor
nop
add
adc
incl
add
lods
dec
ss
xchg
sub
xchg
ret
les
xchg
push
add
adc
mov
pop
sub
dec
adc
popa
shll
test
ja
pusha
pop
mov
mov
pop
xchg
lock
fstl
rolb
jnp
enter
adc
add
ljmp
jo
pop
rcrl
add
loop
mov
ljmp
outsb
fldt
sbb
add
add
arpl
push
adc
aad
addb
fcoms
jmp
pop
lods
jnp
lock
dec
jae
push
mov
psubsb
inc
out
dec
enter
lret
arpl
push
push
sub
xchg
mov
cltd
ja
ja
out
ljmp
lds
lock
fsubrs
sarb
sub
sbb
add
add
pop
mov
aaa
pop
jmp
or
rolb
xor
cmp
push
fstpl
and
mov
aaa
rolb
adc
pop
shrb
pusha
add
or
call
lret
xchg
or
push
inc
jge
cld
push
out
add
add
inc
cwtl
inc
add
sbb
test
int
pusha
or
jno
mov
fdivp
push
xchg
mov
xchg
cmp
and
push
test
push
fucomp
loope
aas
inc
dec
fwait
push
in
xor
lods
mov
inc
add
in
pop
inc
test
add
xlat
ja
test
lock
xor
xchg
mov
add
movsb
adc
add
clc
push
sub
inc
add
or
mov
frstor
xchg
mov
pop
enter
rolb
pop
xor
and
sbb
add
leave
aad
push
add
cmp
pop
jle
and
dec
inc
lods
imul
popf
jg
loopne
icebp
cmp
rcll
ljmp
shlb
xor
jmp
push
mov
aad
push
popa
push
add
lds
in
push
pop
mov
ss
jno
cmpsb
cwtl
xor
lock
push
mov
sbb
add
movsl
inc
popa
lds
sub
or
add
cmc
or
add
nop
add
gs
and
add
jp
nop
add
add
xor
sbb
rolb
cmp
push
ror
out
mov
popw
insl
aam
fwait
push
adc
push
addb
xor
rcrb
jo
pushf
mov
xchg
lock
add
add
in
rolb
pusha
add
add
dec
loop
stos
mov
add
mov
add
adc
add
add
into
xor
ja
mov
dec
jo
adc
mov
mov
pop
jne
js
fxch
mov
sbb
sbb
imul
push
add
daa
pusha
lcall
mov
add
out
mov
xchg
loopne
jb
and
inc
popf
insl
mov
push
gs
movsl
jmp
int
xchg
adc
jno
pop
pop
add
mov
mov
sub
ret
add
push
add
rolb
scas
add
daa
jb
mov
ds
popf
push
or
ror
nop
add
cmp
inc
pop
or
inc
rcll
pusha
add
fistpl
mov
dec
jo
xor
cmp
jb
dec
sahf
and
out
pop
dec
push
mov
add
jo
es
mov
andl
sbb
xor
add
dec
xor
add
cmc
push
fmulp
rorl
add
leave
push
out
test
sbb
xchg
inc
add
movsb
inc
lods
sbb
add
cmpsl
and
cmc
inc
xchg
test
and
icebp
sbb
add
push
shrl
add
adcb
jno
pop
ret
sarb
pop
sbb
add
nop
add
stos
push
pop
jbe
cwtl
mov
inc
lret
add
mov
mov
add
add
add
mov
into
inc
sbb
jae
mov
dec
cld
std
or
push
xchg
jo
or
add
xor
xchg
mov
pop
popf
lock
push
jg
outsb
lds
jo
dec
sub
inc
xchg
loopne
jmp
daa
jmp
mov
push
add
nop
add
pop
mov
std
pushf
nop
add
and
sbb
in
sub
icebp
mov
cmp
imul
xchg
nop
add
push
mov
mov
pop
rol
fnstsw
fcompl
cmpsl
mov
and
aaa
stc
test
lods
mov
or
pop
in
xchg
and
sbb
rcrl
add
jg
sbb
ss
out
add
test
mov
lock
and
cmp
daa
pop
xor
aaa
cmp
sahf
rolb
rolb
mov
add
sbb
add
mov
add
aas
gs
cld
scas
ljmp
dec
pop
paddsb
inc
and
out
rcll
addb
add
fcmovb
xchg
and
jnp
mov
nop
addb
add
gs
inc
imul
fnsave
mov
sahf
adc
stos
push
aam
rolb
xchg
rolb
push
adc
add
sahf
and
hlt
xchg
add
iret
inc
cmp
mov
outsb
sbb
shl
pop
pop
shll
test
xchg
add
xchg
mov
loope
pop
jle
inc
cli
jbe
dec
sub
fwait
lods
mov
adc
pop
inc
sub
test
add
shll
push
sub
leave
or
cmpsb
cmp
or
jmp
sub
pop
aas
xor
or
nop
add
decb
lret
pop
add
test
add
or
mov
add
dec
or
imul
jne
jo
loopne
out
and
push
xchg
add
cld
inc
pop
mov
lock
sub
fnstenv
sbb
add
sbb
cmc
pop
popa
inc
int3
lea
pop
insb
pop
popf
popf
aaa
push
pusha
add
cmp
fst
push
rclb
pop
xchg
xorb
out
fisttpl
icebp
adc
add
les
push
pop
shll
mov
add
lcall
outsb
les
mov
rorl
ret
adc
pusha
mov
pushl
out
sbb
mov
ret
push
rorl
nop
add
mov
rcrl
pop
xor
push
ds
add
test
roll
mov
inc
push
pop
jo
dec
loop
shlb
mov
in
or
adc
imul
loopne
aad
rolb
ja
pop
stos
jne
ret
dec
inc
daa
mov
and
inc
out
mov
add
push
ja
icebp
ret
jbe
lock
rolb
pop
pop
inc
enter
add
and
xorl
or
add
fimull
je
dec
or
add
movsl
or
add
popl
icebp
out
repnz
push
add
lea
outsl
lret
push
mov
jcxz
or
ja
mov
mov
add
add
rolb
mov
int
imul
xor
fucomip
fdivl
dec
fists
jge
lods
std
xor
bnd
and
dec
mov
movsb
sub
add
rolb
mov
mov
aaa
mov
push
in
xor
loopne
pop
gs
jmp
adc
mov
inc
repnz
xlat
xchg
pop
pushf
lock
jl
and
push
mov
aad
lahf
jle
adc
stos
jb
repnz
loopne
cld
mov
mov
hlt
es
pop
cmc
sbb
push
inc
sahf
lock
jae
xor
fwait
loopne
ret
mov
mov
out
fsubrl
jb
and
jp
das
in
sub
pop
popa
fstps
mov
fidivrs
jg
dec
jno
push
sub
aam
repnz
pop
shlb
xor
leave
cmpsb
sub
sbb
xchg
nop
push
imul
push
movsb
sbb
push
and
out
mov
popf
xor
add
inc
mov
out
pop
sarl
fdivl
jnp
inc
push
cltd
xchg
dec
lds
xchg
xor
push
in
aas
enter
inc
mov
add
push
xchg
pusha
push
xchg
rolb
aam
jo
jg
pop
jne
or
fwait
cli
mov
lahf
mov
lock
addb
stos
nop
inc
push
cmpsb
loop
in
incb
mov
jo
lret
addb
loop
and
mov
push
jbe
adc
mov
rolb
arpl
repz
jl
fidivrs
int3
mov
xchg
push
sbb
jmp
and
fmull
or
cmp
stc
shrb
add
aaa
add
test
rcrl
adc
pop
mov
imul
adc
pop
xchg
mov
pop
ss
ds
lcall
pop
rorb
pop
ds
jno
sti
loopne
cmp
mov
adc
push
and
mov
push
sbb
pop
and
pop
pop
je
cli
aas
pcmpeqw
or
pop
add
inc
sbb
pusha
push
mov
iret
cmc
lds
inc
inc
mov
or
fwait
outsl
and
push
outsb
push
mov
sbb
enter
mov
scas
or
rclw
pusha
pop
adc
sub
es
xor
xor
xor
int3
repnz
movsb
add
sub
sti
inc
insb
jnp
rcr
push
cmp
pop
mov
movsl
lods
pop
xchg
adc
adc
cwtl
and
push
nop
pop
mov
pop
adcl
pop
repnz
test
add
pop
shll
rcrl
xchg
mov
sub
mov
repz
xorb
ja
mov
pop
push
mov
dec
fisubs
out
insl
cli
mov
sbb
pop
cmpl
jae
add
and
and
push
pop
add
pop
mov
add
shr
les
std
mov
lcall
movsl
cmpsb
cmp
and
cli
sub
adc
jl
mov
sbb
push
xor
lock
lahf
jg
inc
shl
xor
call
dec
and
idivb
sub
inc
cld
ret
arpl
inc
add
orb
lret
pop
call
lret
and
push
out
pop
pop
ret
mov
enter
iret
outsl
add
mov
add
out
or
in
cmp
gs
jmp
movsb
por
cli
jne
jl
xchg
loopne
outsl
push
sbb
jmp
lcall
movsb
push
mov
sub
inc
or
and
push
lock
jmp
imul
inc
arpl
sti
or
movsl
into
stos
lods
pushf
push
or
lods
pop
nop
jo
out
in
cld
mov
or
loop
cmpsb
cmc
lret
xchg
lock
faddp
mov
pop
mov
or
pop
push
mov
loopne
dec
xor
sub
cmpsb
dec
scas
xor
add
or
xor
mov
ret
fisubs
lahf
ds
push
mov
pop
rolb
mov
or
fldl
loopne
stos
sbb
or
or
sub
xchg
loopne
mov
loope
out
dec
adc
fcoml
dec
mov
pusha
or
mov
sbb
pop
aam
xor
or
mov
loopne
fs
in
xchg
cmp
or
or
or
out
lea
jo
xor
pusha
nop
and
mov
mov
sarb
sbbl
ljmp
aaa
pusha
cmp
cltd
decb
push
or
mov
add
notb
aad
sti
mov
or
hlt
stc
sahf
pusha
or
adc
add
push
or
nop
or
or
xor
or
xchg
nop
or
mov
jecxz
orb
lock
sbb
lock
clc
pop
dec
dec
fstpl
add
or
mov
je
and
xchg
bound
cltd
inc
outsb
lcall
in
pop
sti
add
jo
push
mov
jbe
sub
pop
dec
jl
mov
add
adc
add
or
cmp
xchg
or
aas
mov
jg
push
orb
cmc
xor
lret
push
out
dec
cmp
loopne
clc
mov
rorb
xor
movsl
jae
out
jae
daa
adc
and
adc
or
xchg
pop
insl
mov
and
adc
or
mov
orl
or
nop
or
mov
aad
insb
leave
cltd
insb
aas
dec
jp
shl
rcll
or
pop
outsb
and
std
inc
sbb
mov
mov
jge
push
adc
call
or
rcl
mov
or
mov
push
mov
or
xor
sub
js
pop
push
lock
ror
ss
mov
jmp
test
or
cmp
insl
out
and
adc
or
into
sbb
or
jecxz
inc
or
fwait
out
dec
xlat
shlb
and
jecxz
push
or
or
ret
jg
out
inc
add
ja
repnz
add
or
ret
sub
sbb
xchg
icebp
stos
les
inc
push
int3
rolb
das
dec
std
scas
mov
das
out
adc
scas
or
mov
push
ffree
mov
mov
jnp
add
pop
xlat
test
xor
stos
xchg
sub
xlat
inc
jb,pt
adc
imul
and
in
mov
loop
pop
xchg
mov
fcompl
adcl
push
mov
mov
push
popa
sub
imulb
or
loop
clc
lret
dec
test
xor
int3
arpl
and
nop
or
rorb
leave
movsb
ljmp
push
nop
or
push
mov
inc
jmp
jecxz
jb
jns
out
idivb
xor
or
fwait
shrb
int3
es
cli
and
inc
pop
mov
loopne
test
bound
or
or
adc
mov
shll
inc
in
out
stos
dec
dec
out
xor
inc
sub
insl
sub
cli
outsb
fidivs
adc
shll
out
popa
jno
add
mov
subl
pop
mov
jae
inc
sti
push
jle
aad
and
add
jge
inc
or
mov
iret
cltd
sub
inc
mov
or
cmpsl
xchg
test
sub
dec
popa
sbb
scas
and
jge
or
outsb
sbb
inc
shll
ss
pushf
rorb
push
add
scas
pop
dec
add
or
mov
or
mov
add
or
mov
mov
test
or
dec
fdivs
icebp
in
cmp
mov
dec
hlt
adc
leave
inc
xor
push
sub
fsub
insl
cmpsl
jbe
pop
pop
icebp
add
mov
xor
or
or
cs
loopne
insb
gs
inc
stos
jno
inc
addr16
pop
cmpsb
mov
mov
cmp
jb
test
test
orb
loope
nop
or
add
js
add
jg
mov
or
inc
adc
or
jae
test
mov
xchg
in
pusha
lods
scas
xchg
xor
je
sbb
sahf
mov
mov
sti
sbb
or
cmp
or
or
or
or
fstpt
insl
dec
xor
test
inc
lret
push
lds
pusha
js
rorl
imul
stos
cmp
scas
mov
or
mov
cs
sub
sub
jo
out
ja
minps
rorb
mov
cmp
loopne
mov
inc
int3
mov
inc
xchg
or
push
or
mov
mov
inc
sub
ljmp
jns
xor
out
mov
mov
mov
ret
mov
nopl
rorb
pop
pusha
arpl
cs
inc
or
jmp
adc
mov
in
pop
rcll
xlat
ds
out
jae
sbb
movb
into
fld
in
mov
int3
lret
fsubr
xchg
pusha
or
data16
push
cli
inc
aas
lahf
in
push
test
mov
je
mov
or
sbb
ljmp
sub
mov
movsl
out
daa
fcoml
adc
mov
push
aas
lret
nop
or
cmc
pop
adc
lahf
adc
mov
jecxz
scas
cmpsb
loop
and
mov
mov
mov
fcmovne
cmp
push
addl
enter
test
scas
jl
shrl
mov
lods
mov
mov
clc
repz
enter
cmp
sarb
or
test
ret
cmpsb
into
mov
pop
scas
bound
pop
nop
push
or
jno
mov
aad
int
jns
sahf
mov
in
or
pop
pop
fstpl
inc
jb
fstps
sub
lods
outsb
outsb
lahf
pop
inc
inc
out
cltd
mov
push
jge
add
test
jg
rorb
push
rorb
int
rol
fidivrl
jno
imul
jecxz
out
xchg
inc
roll
xchg
test
pusha
sub
jmp
xor
jne
or
test
or
or
pusha
add
or
and
inc
lret
xchg
cltd
idivl
outsl
fwait
jmp
mov
stos
punpckhbw
lock
btc
call
or
push
or
or
mov
adc
or
or
lret
sbb
or
or
sbb
les
mov
mov
lods
pop
shrb
jo
and
xor
mov
xchg
test
or
mov
mov
inc
cld
dec
push
jne
loopne
push
jnp
aad
xor
fisubrs
sar
adc
mov
dec
push
nop
or
xchg
enter
adc
jp
or
or
jb
and
arpl
stos
mov
push
or
or
push
push
push
or
dec
fs
imul
cmp
rorb
or
sbb
xor
mov
or
js
scas
push
mov
jo
fwait
and
add
push
jo
into
jns
ffreep
inc
sahf
rorb
sar
mov
xchg
lock
or
mov
pop
adc
sub
test
adc
push
or
dec
call
out
xchg
negl
lret
xor
adc
push
lock
sbb
push
and
ljmp
push
mov
cmp
cmpsl
ljmp
out
shrb
ds
jb
out
mov
in
mov
movsb
mov
outsl
xchg
loopne
mov
mov
push
jns
mov
adc
je
adc
mov
xchg
push
orb
xchg
ds
add
push
mov
stc
movsl
xchg
jmp
fwait
cmp
nop
push
sbb
push
scas
fwait
out
out
mov
and
loopne
inc
mov
push
add
push
into
push
add
lcall
add
inc
cs
andl
dec
push
mov
push
rorb
in
orb
mov
into
xorb
jmp
jb
add
push
imul
adc
push
mov
iret
addr16
add
add
push
ljmp
fsub
mov
inc
and
inc
sub
xor
inc
xchg
jo
nop
loopne
fstps
dec
push
mov
mov
push
mov
lret
les
jp
or
push
mov
jl
push
add
cmp
adc
push
stc
movsl
in
xor
inc
mov
rorb
mov
jle
sahf
push
push
js
loopne
jp
sub
xchg
inc
push
in
fsubrs
lret
pop
pop
hlt
jnp
adc
imulb
xchg
pusha
cmovns
mov
jo
movsb
and
sar
sub
lcall
push
out
mov
adc
insl
pop
mov
mov
movl
negl
add
add
lds
jo
or
orb
pop
cmp
pusha
popa
xor
aam
data16
push
jns
cmp
and
loopne
dec
xchg
inc
cmp
lock
cmp
add
mov
into
out
je
jne
and
incb
jmp
fisubrl
and
inc
pop
and
int
cli
cmc
stos
andl
adc
mov
data16
psllw
xchg
mov
mov
pop
mov
js
orb
insl
out
pusha
jle
jle
aaa
inc
ljmp
into
ja
loop
adc
mov
repnz
movsb
sbb
or
fmull
jbe
pop
loopne
js
fsubrl
sar
push
in
mov
push
loopne
mov
or
push
testb
mov
lret
mov
outsl
cmc
cltd
push
rorb
jmp
lds
lret
pusha
cvttps2pi
jo
bound
adc
pusha
inc
ljmp
insl
into
cmp
pushf
pusha
nop
pop
aad
aam
adc
lret
js
in
icebp
cmpl
inc
pop
sub
nop
pminsw
jmp
push
cmp
push
adc
rclb
dec
lds
mov
push
and
pushf
nop
adc
mov
div
jno
rclb
in
mov
or
adc
outsb
xor
movsb
pushf
adcb
fdivrs
jmp
jo
cmp
or
cmp
mov
adc
loop
test
pusha
adc
rclb
movsl
adc
adc
cld
enter
es
mov
mov
push
sbb
je
or
add
adcb
lock
or
or
adc
mov
dec
out
shl
lods
jns
mov
pop
pushf
and
cmp
imul
cmpsb
xchg
adcb
int
cld
dec
mov
decl
das
fildll
iret
mov
adc
mov
sbb
adc
push
into
das
mov
jns
pusha
adc
mov
adc
pusha
adc
or
pop
icebp
testb
arpl
mov
outsl
sti
fwait
repnz
rclb
jne
push
loopne
mov
clc
outsl
add
rep
or
js
les
leave
push
mov
adcb
inc
sbb
imul
fwait
mov
int
adc
cmp
adc
mov
dec
push
mov
test
sbb
insb
adc
adc
ret
mov
jae
orl
gs
push
xchg
and
cmp
je
insb
jmp
mov
icebp
push
adc
test
jge
les
dec
inc
mov
add
mov
dec
insl
ja
xchg
imul
mov
or
adc
mov
cltd
fisubrs
ret
in
mov
dec
lds
pop
dec
rorl
mov
sbb
inc
lds
mov
adcb
cmp
aas
xchg
xor
xor
push
inc
adc
adc
pop
pop
jl
stc
push
pop
shlb
mov
pop
ret
and
add
cmp
das
pop
gs
adc
jl
sub
scas
or
adc
insl
sbb
adc
mov
fimull
in
cmp
and
adc
mov
cmp
push
push
mov
out
cwtl
push
adc
xor
xchg
cmc
or
loopne
outsb
testl
cli
or
adc
cmp
push
lock
inc
out
push
rclb
mov
imul
fsubs
sti
lret
sub
jle
lret
mov
shr
mov
cmp
push
adc
shll
inc
sub
and
nop
adc
adc
cmp
mov
inc
lods
mov
push
cmp
fxch
clc
or
imul
int3
xchg
les
out
sbb
cli
fdivl
inc
clc
hlt
and
add
pusha
sub
out
jo
movsb
cmp
xor
stos
push
xor
ss
push
clc
mov
adc
int3
mov
arpl
mov
inc
adc
mov
pusha
repz
add
loopne
popa
mov
and
xchg
add
mov
and
jl
divb
cmc
inc
jb
sbb
adc
popf
movsl
or
sub
inc
enter
push
push
adc
jnp
inc
or
pop
and
repnz
movsb
xchg
jo
mov
popa
add
in
jno
mov
and
insl
and
loop
mov
lock
mov
lock
fdivrl
xor
add
jle
jg
inc
les
ret
cmp
mov
mov
in
inc
fsubrl
inc
sub
or
movsb
pop
imul
rclb
mov
subl
fstpl
fisubs
sbb
add
adc
cmp
push
add
or
lahf
lret
jae
lock
pusha
adc
es
in
cmpsb
and
push
pusha
adc
daa
dec
add
adc
into
xor
insb
stos
lods
or
cli
dec
and
push
pusha
adc
mov
int3
mov
adc
jae
faddp
mov
jecxz
sbb
mov
sbb
adc
iret
js
shl
or
and
mov
insl
fdivrp
or
mov
add
addr16
push
push
xor
inc
fwait
out
adc
add
jnp
imul
stc
cmp
out
call
cli
and
dec
aas
jg
inc
ret
xorl
cltd
jl
loopne
mov
daa
popf
pop
mov
inc
mov
imul
adc
adc
rolb
inc
shld
add
mov
cltd
inc
jl
lock
mov
jns
aam
out
mov
and
or
jecxz
mov
push
pusha
adc
add
cmpsb
scas
add
ror
lock
adc
in
sbb
mov
mov
cltd
ret
push
stos
ret
repnz
hlt
test
mov
adc
pushf
nop
adc
mov
pop
shrl
icebp
ret
xlat
sub
imul
jns
mov
addb
push
xor
iret
subl
jb
mov
movb
mov
mov
adc
adc
adc
xlat
in
pop
mov
adc
outsl
jnp
mov
sbb
sbb
dec
in
testl
mov
xchg
xor
and
sbb
les
adc
not
je
cmc
enter
rclb
inc
adc
lcall
cmp
in
sub
add
xor
outsb
and
cmp
adc
fsubl
inc
movsl
repz
sub
mov
nop
and
xor
rclb
adcb
push
nop
adc
sub
dec
rcrl
adc
xor
xchg
adc
movsb
cli
dec
in
mov
jo
lret
in
push
sbb
mov
mov
adc
adc
adc
mov
adc
repz
inc
ss
mov
int3
shr
fistl
fistps
mov
sub
adc
adc
mov
mov
adc
inc
push
lret
or
cmp
pop
push
repnz
negb
aas
inc
call
adc
pop
jp
mov
inc
add
mov
fsub
jno
insl
loope
dec
jns
add
cmpsb
xchg
addb
lahf
lods
inc
lahf
rcrl
push
adc
popa
rorb
mov
adc
pop
cmp
or
inc
mov
outsb
aad
mov
adc
popf
inc
mov
adc
js
add
adc
push
adc
mov
pop
push
jo
stc
xchg
push
mov
clc
lea
and
and
mov
add
and
nop
adc
xchg
rclb
dec
and
pop
fsubrl
movsb
pop
mov
push
loope
mov
data16
outsl
outsb
cmp
dec
xlat
mov
outsb
pushf
loopne
and
and
xchg
rclb
xor
hlt
call
sbb
adc
and
xor
and
aam
push
adc
push
push
or
adc
cld
xlat
jg
and
xchg
adc
fstpt
xor
popa
sbb
xor
mov
movl
inc
adc
sbb
adc
pop
xor
out
pop
addr16
adc
lret
pop
xor
pop
ja
push
sar
or
add
add
mov
outsl
hlt
xor
push
and
fwait
movsb
pop
leave
sbb
adc
cmc
je
test
mov
adc
sahf
adcb
decb
adc
movsl
popf
fsts
xor
sbb
adc
pop
or
adc
jp
imul
sub
sbb
adc
dec
mov
dec
movsb
ljmp
imul
lods
push
lock
iret
mov
adc
int3
je
sub
and
cmpsb
mov
bound
pop
push
sbb
adc
mov
inc
fs
out
clc
int3
pop
imul
mov
xor
nop
push
adc
pop
sbb
adc
adc
xor
pusha
adc
push
sahf
and
mov
pop
dec
or
mov
jg
test
loopne
cmc
xor
push
repz
sbb
adcb
lock
mov
push
ljmp
int3
cmp
adc
push
jl
mov
pop
cmp
mov
cmp
sarl
xor
lods
xchg
jmp
jg
loopne
or
imul
dec
push
je
rorb
mov
push
addr16
pop
inc
daa
cmp
inc
cwtl
rclb
xchg
or
push
mov
push
pop
out
xchg
push
xchg
dec
ret
fucompp
popf
add
pop
push
add
movsb
xlat
test
das
outsl
cs
inc
add
lea
xor
and
mov
in
push
xchg
das
js
inc
rcr
pushf
rclb
ja
insl
movsl
sub
sub
mov
inc
ret
test
adc
mov
nop
push
es
mov
ret
jle
cmpsb
lods
shll
adc
push
sbb
nop
push
ret
in
cmpsb
outsl
jle
push
push
test
pop
mov
fwait
sub
fisubrs
in
fbstp
mov
lds
das
xchg
outsl
jecxz
loop
mov
int
cwtl
inc
push
repnz
and
sbb
mov
movb
push
jae
rclb
cli
stc
sbb
stos
movsl
loopne
sbb
scas
cmpsb
je
jbe
mov
test
pop
or
pop
sub
lret
dec
pushf
add
popa
and
int
popf
sbb
and
and
out
mov
mov
nop
pop
xor
sbb
pop
mov
loopne
imul
pop
test
or
loopne
out
push
cmp
iret
sub
outsl
jge
iret
sbb
mov
inc
movb
call
inc
mov
rcr
imul
mov
lcall
in
mov
or
sbb
pop
int
jo
inc
fldenv
sub
nop
pop
sbb
fistl
or
push
jo
out
dec
cmc
addr16
dec
push
aaa
int
shrb
and
and
aaa
xchg
or
pop
clc
lcall
mov
rclb
stos
pop
dec
mov
inc
pop
lcall
aad
pop
sub
test
pop
lret
sarl
aas
stos
mov
sub
aam
fbstp
movsl
sahf
xor
cltd
or
sbb
jp
insb
insl
jmp
adcb
mov
cmp
push
push
cli
repz
cmp
cmc
jp
sahf
inc
pop
push
mov
pop
ja
cmpsb
sbbl
and
adc
push
mov
outsl
mov
jge
mov
ss
ret
pop
out
ja
nop
pop
fs
pop
addr16
mov
sbb
or
jmp
stc
jb
fildll
mov
mov
add
sbb
dec
lock
scas
inc
push
xchg
mov
lahf
jge
mov
push
jb
inc
call
and
fnstcw
sbb
inc
sbb
in
add
rcrb
cmpl
arpl
xchg
out
rcr
or
add
jnp
mov
hlt
in
mov
sbb
or
ja
jmp
jbe
adc
clc
andb
xchg
cmp
push
addb
mov
add
sbb
xor
rcll
mov
sbb
inc
mov
xor
andb
imul
fsubrs
or
xchg
rcrb
xchg
inc
sbb
addr16
and
mov
mov
test
jae
les
add
test
sbb
jae
xor
aaa
push
call
mov
push
in
insl
fs
aam
mov
jae
scas
jl
jns
mov
sbb
iret
fidivrl
in
jne
push
sbb
imul
fcoms
xor
push
mov
je
cmp
push
sbb
sbb
pop
popf
pop
jbe
sbbb
call
imul
loop
push
sarb
push
push
sbb
stos
js
inc
sub
imul
adc
fidivs
add
xchg
or
sbb
cmp
push
loopne
addr16
in
lea
pusha
xchg
xlat
mov
sub
loop
dec
mov
dec
cs
fs
fcmovnu
mov
out
aaa
es
dec
pop
and
inc
lret
sbb
rcl
cmp
dec
sub
pop
dec
push
inc
sbb
jne
mov
lock
shr
mov
mov
sbb
divl
sbb
jle
mov
xchg
lock
cmp
sbb
add
sbb
xchg
loopne
jae
rcl
push
nop
sbb
or
loop
sbb
clc
inc
dec
out
sbb
sbb
fcmovb
push
sbb
scas
sub
hlt
add
or
mov
out
shr
add
ret
insb
mov
je
jb
nop
sbb
inc
sbb
mov
mov
sbb
hlt
dec
sbb
in
or
movsl
adc
pop
and
call
push
je
rcrb
and
jo
cmc
xor
xor
loop
test
adcb
and
cmp
cmp
mov
loope
dec
enter
scas
push
mov
pop
push
mov
scas
into
movsb
xchg
push
xor
mov
jle
out
xor
and
and
mov
xchg
inc
sbb
mov
in
adc
nop
sbb
dec
jns
ja
push
sbb
pop
pop
dec
test
lock
adc
scas
sub
sub
setl
sbb
mov
cmc
mov
add
sbb
sbb
movb
sbb
or
sbb
jmp
and
test
loop
lea
and
jne
add
sbb
nop
sbb
xchg
inc
sbb
sbbb
int3
outsl
jge
outsl
or
test
jmp
jbe
rcrb
scas
or
sbb
push
pusha
bound
jne
and
jle
add
sbb
jo
lahf
dec
out
mov
jle
cld
push
lock
jl
or
dec
lock
rcrb
adc
sbb
out
or
sbbb
scas
scas
cmp
loopne
or
lods
or
loope
cmp
xchg
fdivr
inc
stos
out
repz
sbb
pop
mov
xchg
mov
pop
and
sub
cmp
lret
pop
or
sbb
jbe
iret
jno
pop
jnp
outsl
or
imul
nop
sbb
pop
jbe
xchg
inc
sbb
nop
push
sbb
insb
inc
fwait
mov
test
test
and
imul
cltd
pop
jmp
imul
movsl
sbb
sbb
mov
popf
mulb
jge
add
sbb
sbb
call
xchg
mov
sbb
or
in
out
jo
dec
ja
fisubrl
or
int3
adc
sbb
sbb
sbb
sbb
lock
push
xor
adc
test
cmc
addr16
xchg
cmp
mov
sbb
xor
cvtdq2ps
sbb
push
arpl
nop
pusha
sbb
out
jb
push
dec
pusha
outsl
mov
sbb
sbb
mov
shl
lds
pusha
sbb
jno
xor
pop
jmp
jge
mov
ja
inc
pop
adc
lock
xchg
xor
jp
push
sbb
roll
xor
fimull
mov
ffree
mov
dec
aad
pushf
jo
inc
in
fnstcw
pop
mov
loope
dec
mov
loope
add
sbb
mov
int
adc
adc
xlat
ret
sbb
mov
nop
sbb
mov
jmp
lcall
negb
sbb
repz
mov
ljmp
push
lds
pop
out
jns
sarb
pshufw
add
out
test
sbb
add
mov
pop
mov
repz
xor
adc
or
sbb
movsb
std
dec
jmp
mov
andb
mov
mov
iret
cmpsl
jae
cmpsb
popa
mov
mov
outsl
cli
push
sbbb
lock
test
inc
test
jo
push
loopne
mov
push
dec
mov
popa
js
jo
mov
dec
in
pminsw
dec
pusha
aaa
pop
ret
sbb
jae
out
or
jl
or
pop
pcmpeqd
outsl
xchg
rcrb
inc
sbb
lods
xor
push
nop
sbb
arpl
sub
pop
xchg
ret
pusha
mov
mov
mov
pop
adc
mov
je
mov
ret
lahf
push
pop
lcall
jbe
push
push
sbb
stc
cltd
cmp
add
and
rcrb
xlat
inc
mov
cmpsb
inc
inc
adc
sbb
pusha
sbb
rcrb
mov
pop
mov
xor
inc
mov
int
and
andb
or
ss
xchg
pusha
sbb
andb
sar
lret
fidivs
dec
xor
pop
idiv
add
rcrb
sahf
rcrb
aam
pop
mov
rcrb
call
lret
xlat
incb
mov
es
cmp
lds
cmp
and
js
inc
cmp
sbb
sbb
daa
xchg
or
sbb
roll
scas
push
push
mov
cmp
sbb
call
and
mov
xchg
jo
test
lock
enter
and
int
adc
aaa
pop
lret
rcr
adc
mov
xor
add
cmp
inc
sbb
outsl
imul
sbb
sub
sbb
sbb
icebp
adc
jecxz
dec
mov
sbb
test
sbbb
inc
push
addr16
mov
cwtl
sbbb
xor
lahf
or
jae
lea
push
pop
js
adc
shl
push
jecxz
cmp
arpl
stos
mov
mov
cs
test
sbb
sbb
lcall
jl
xor
sbb
sbb
xchg
jp
loope
call
and
and
popa
mov
push
xor
sub
je
daa
aas
adc
call
in
stos
and
cmp
call
sbb
fsubs
jo
pop
out
dec
xchg
push
sbb
jmp
movsl
out
mov
shl
lock
jg
ret
push
adc
fnstenv
xchg
das
in
jge
xchg
and
cld
adc
cwtl
mov
mov
jmp
add
or
dec
cli
inc
lea
in
movsb
pop
dec
cmp
pushf
nop
sbb
or
xor
aad
push
rorb
ss
pusha
mov
sbb
sbb
sbb
stos
add
dec
inc
xchg
lahf
sub
push
xor
sbb
leave
lea
push
sbb
mov
xchg
adc
lock
out
push
mov
sub
out
imul
into
add
push
in
mov
jns
or
adc
pop
pop
cli
aas
cs
push
fldenv
in
aam
mov
leave
jae
adc
push
std
lea
jecxz
fdivl
jno
out
mov
inc
push
inc
fstpl
mov
mov
sub
push
push
cld
call
insl
inc
jb
das
cli
cld
data16
call
jne
pop
fs
rorl
jae
xorps
jns
sahf
jo
and
mov
sub
xchg
or
and
mov
push
dec
jg
aam
add
inc
push
push
sarb
xor
mov
pop
push
xchg
insb
xlat
sub
push
mov
jge
fwait
mov
hlt
repnz
mov
cmp
lahf
xchg
mov
push
nop
inc
push
out
sbb
addl
outsb
js
lods
xor
lcall
mov
mov
cli
jno
cmpsl
enter
push
cltd
mov
push
push
push
push
or
aad
aas
out
insl
mov
adc
sbb
xchg
jo
xchg
push
mov
push
les
pop
aaa
cmp
xchg
call
push
xchg
cld
or
out
inc
jmp
jno
mov
adc
push
lods
cltd
or
pop
dec
and
nop
push
std
push
fdivrl
jnp
fidivl
xor
mov
les
cld
push
fisubrl
fcmovbe
mov
pushf
inc
pop
mov
sbbb
stc
inc
fs
add
pop
fldt
loopne
add
xchg
pop
popf
add
pop
cmpsb
inc
adc
and
out
andb
hlt
dec
mov
and
dec
sahf
nop
pop
movsl
jecxz
and
loopne
in
jg
ret
sub
add
in
aaa
outsb
push
loopne
or
pop
add
pop
push
xor
adc
cmp
pop
lret
pop
xchg
in
movsb
jg
pop
sbb
pop
jmp
pop
dec
loop
pop
decb
pop
in
mov
stos
lods
xchg
cmp
mov
pop
inc
out
shll
pusha
pop
lods
mov
inc
pop
stos
xchg
fistl
lret
lea
sub
rcrb
aad
dec
push
mov
aaa
int3
mov
movsb
iret
cmp
and
sbb
std
aam
xor
cwtl
rcrb
push
xor
inc
not
push
adc
pop
dec
sbb
sbb
push
mov
dec
inc
sarb
pop
into
addb
jmp
mov
pop
sub
dec
aam
nop
pop
push
test
mov
mov
mov
sbb
mov
lret
pop
repnz
sbb
pop
pop
lds
gs
shlb
stc
fucomi
fnstsw
fwait
les
loopne
lock
add
pop
xor
mov
jge
pusha
popa
cmp
adc
push
loopne
out
dec
jmp
rcrb
pop
cmc
push
xchg
mov
push
pop
xlat
mov
ret
jno
hlt
in
mov
sarl
movsb
dec
stos
mov
out
lahf
mov
popf
xor
jo
rolb
cwtl
lock
xorb
mov
mov
ret
lods
inc
jle
call
xchg
cwtl
inc
and
adcb
in
ss
daa
cwtl
shlb
popa
adcb
imul
push
loop
inc
and
lahf
adc
xor
jge
cmp
int
lock
shl
int
jle
cli
out
mov
bound
xchg
popw
pop
adc
rclb
lock
xor
cwtl
mov
adc
movsl
test
and
testl
cmp
push
mov
pusha
and
and
and
mov
adcl
push
and
nop
and
xchg
repz
jae
push
and
jo
mov
out
xor
sbb
loop
sub
mov
dec
int
pushf
inc
and
in
stos
out
out
push
xchg
xchg
mov
addb
scas
pop
jb
mov
xor
cmp
sti
add
and
push
nop
mov
mov
add
xor
push
mov
leave
cmp
into
xor
aam
sar
imul
dec
loopne
xor
mov
inc
inc
in
sbb
imul
icebp
jb
sti
in
push
and
lret
push
inc
and
push
dec
or
and
cltd
sarb
mov
mov
out
stos
xchg
push
test
push
shlb
gs
xchg
nop
and
imul
hlt
sub
daa
ret
lahf
adc
ss
cmc
ds
cld
lods
pushf
nop
and
leave
pop
pop
and
outsl
dec
int3
fcomi
cmp
outsb
dec
push
jo
xchg
mov
lock
pop
mov
stos
je
push
and
nop
and
xor
fiaddl
cmc
aad
movsl
arpl
ljmp
pop
aas
scas
and
sbb
and
sub
pusha
and
inc
inc
aas
dec
and
sbb
and
bound
mov
and
mov
and
xor
push
mov
imul
hlt
inc
jnp
dec
scas
addb
inc
call
movsl
add
and
in
adc
mov
aad
inc
xchg
int
jge
jno
xor
int3
loope
push
cs
jne
fimull
jge
int
pop
scas
mov
divb
xor
out
add
int
mov
test
aam
outsb
jnp
dec
xchg
dec
adc
jnp
jl
cmp
mov
mov
jbe
bound
add
and
or
and
js
shlb
mov
adc
cmp
and
por
and
popa
daa
jno
les
loop
lcall
adc
sbb
stos
jne
push
mov
je
adc
jl
in
mov
ljmp
out
pusha
shrl
push
stos
dec
or
xchg
push
stc
push
leave
fildl
nop
adc
in
dec
rcll
jo
shlb
add
push
mov
das
ljmp
jne
test
and
arpl
push
xor
sbb
mov
pop
jecxz
xchg
adc
and
rcll
inc
and
cmp
lods
mov
jo
jp
fidivrs
in
cmp
ret
clc
lock
jo
xor
mov
ret
adc
rcrb
andb
jp
xor
and
cwtl
and
in
push
lret
jle
jg
out
mov
stc
and
mov
and
imul
aam
push
nop
and
adc
jo
cwtl
loopne
stos
repnz
xor
sub
jo
sub
mov
dec
or
and
mov
and
hlt
das
daa
mov
andb
test
add
and
ret
and
and
sbb
xchg
sbb
js
idivb
aad
fucom
sarb
add
and
and
and
pop
and
push
pop
sub
fs
sbb
push
xlat
pop
mov
pusha
call
aaa
pop
adc
cld
rorb
call
cmp
dec
mov
mov
jne
jae
push
hlt
mov
icebp
out
xor
shll
inc
sub
fs
cmpsb
mov
in
inc
mov
mov
inc
je
mov
lcall
dec
lcall
bound
add
xchg
adc
inc
mov
lcall
pop
shll
insl
push
xor
dec
imul
push
and
scas
dec
movsl
sbb
and
adc
fists
cmp
test
or
mov
xchg
push
and
arpl
xchg
lcall
ds
les
loope
jmp
lock
ja
rorl
jo
inc
call
push
iret
mov
test
repz
and
lods
add
fsts
andb
pop
sbb
and
xor
inc
and
out
add
flds
shlb
inc
mov
and
and
or
and
hlt
sbb
adcl
and
adc
mov
jo
push
and
push
rcrb
xor
adc
gs
mov
and
xor
shll
es
cmpsb
pop
mov
and
lret
and
jl
scas
rcll
mov
ss
inc
popl
shlb
xchg
lea
jl
add
dec
mov
jl
or
push
or
and
pop
mov
add
and
or
push
xchg
push
pusha
and
lock
mov
cwtl
and
lods
int
jns
shlb
lods
popf
mov
fisubl
es
push
shlb
push
in
xchg
andb
shlb
cmpsb
jg
test
ror
and
push
xor
mov
jns
outsl
push
jnp
mov
shlb
and
nop
jo
mov
das
xchg
push
and
notl
xor
sbb
cld
pusha
add
mov
sub
std
xchg
ret
sbb
and
mov
fwait
movsb
clc
mov
andb
mov
push
pop
xchg
and
push
push
jo
jle
and
movsb
fidivrs
sub
xchg
push
cltd
and
inc
and
and
inc
pushf
lock
pusha
and
cli
ret
push
mov
push
and
xacquire
inc
jecxz
pop
pop
test
ret
sub
sbb
mov
mov
add
and
xchg
mov
gs
and
shll
pop
adc
and
filds
aas
mov
stos
pop
fdivrs
inc
orl
and
sahf
xor
and
push
loopne
fs
jge
or
outsl
and
aam
xchg
xchg
nop
and
inc
mov
jae
stos
add
and
or
and
jae
adc
and
andb
shlb
movsl
sub
test
fs
xor
shlb
insl
or
sub
lret
sub
mov
and
cmp
mov
mov
cmp
jbe,pt
out
mov
and
call
sarl
sub
negl
and
movsl
cli
or
add
imul
or
int3
mov
jbe
roll
and
fsubrp
push
or
icebp
out
pop
cmp
pusha
and
jae
xchg
aam
push
outsb
push
shlb
and
andb
lahf
xchg
xchg
fidivl
adc
and
cmp
leave
pop
int3
lods
test
imul
loop
pop
mov
mov
daa
xchg
loopne
xchg
push
and
clc
dec
sbb
insl
cmp
andb
repz
aas
sahf
loopne
out
out
add
and
mov
sub
dec
jge
fbstp
shlb
cmp
ljmp
xor
and
shlb
and
mov
fidivs
sub
fsub
cmp
ret
and
cmp
fistpl
lahf
adc
and
out
mov
into
pop
xor
or
and
cmp
mov
or
call
bound
lock
pop
into
fdivp
add
and
cmp
imul
lret
test
cmp
inc
das
xchg
stos
and
adc
and
in
and
shlb
sahf
inc
and
mov
mov
int
lds
daa
scas
xor
es
cs
xchg
shlb
lds
nop
mov
decb
stos
dec
incb
push
in
cmp
mov
cmp
fistpll
xor
ljmp
sub
sbb
es
add
add
es
fs
cld
test
out
repnz
or
cmp
popa
fiaddl
dec
mov
cmp
fistps
sbb
es
mov
inc
mov
dec
push
xchg
jno
rcrb
lret
push
mov
mov
out
pusha
es
mov
mov
xchg
pop
push
sub
xlat
adc
test
mov
inc
mov
xchg
inc
es
js
push
and
lcall
clc
stc
push
es
into
jo
roll
push
mov
xlat
pop
fsubrs
clc
out
mov
es
jae
adc
add
xor
mov
xchg
pusha
es
ds
pusha
and
pop
jecxz
lock
pop
into
movsl
sti
xchg
jo
inc
sub
xor
nop
es
add
push
mov
jg
into
inc
and
sbb
outsl
loop
inc
push
push
mov
push
nop
es
jnp
dec
loope
inc
imul
jno
mov
shlb
xchg
adc
imul
pusha
mov
ss
shr
and
xor
xor
mov
jmp
jbe
aam
push
sbb
test
mov
in
push
lds
adc
lds
popa
lret
inc
adc
and
jne
in
jp
inc
daa
aaa
xlat
dec
movsl
adc
js
adcb
cmpsl
iret
push
mov
cmp
repz
mov
xor
daa
js
loop
sbb
daa
aaa
js
lock
and
shlb
imul
in
sub
xchg
lock
sub
mov
xchg
mov
pop
mov
daa
and
xor
lods
xchg
pop
pop
jno
nop
daa
bound
in
mov
andb
lock
dec
xor
cmp
mov
and
lds
and
jae
test
jp
or
jo
sub
adc
mov
xlat
mov
and
test
shll
iret
mov
andb
push
xchg
loope
inc
call
adc
dec
sbb
cwtl
lock
mov
daa
xchg
shlb
adc
and
je
and
cmc
insl
adc
cmp
adc
or
xchg
nop
daa
int3
mov
loope
popf
mov
fisttpl
daa
cmpsl
fistpl
adc
lods
sub
scas
pop
lcall
mov
jp
jo
mov
out
xchg
shlb
test
sbb
add
roll
jo
dec
jle
cmp
movsl
sti
in
xchg
shlb
addb
aad
or
lock
cmp
js
sub
jo
out
pop
adc
cmpl
sub
mov
call
or
sub
inc
sub
cmp
in
shrb
neg
mov
sub
dec
fucomp
test
vmaxsd
inc
sub
data16
xlat
stc
out
sahf
adc
xchg
subb
adc
sub
dec
stos
sub
xchg
push
stc
xchg
pop
dec
inc
cli
mov
sub
inc
sub
out
inc
inc
sbb
sub
mov
ss
sub
in
pop
cmp
jne
es
xor
xor
and
ret
sbb
popa
adc
loopne
fstl
lock
outsl
mov
lods
rcrb
push
and
inc
xchg
pusha
sub
pushf
mov
mov
and
sub
xlat
adc
lret
jnp
call
pusha
sub
enter
pusha
and
lock
into
mov
jns
es
fwait
lcall
jo
lea
sub
jae
mov
adc
sub
stos
addr16
pop
ret
bound
lock
andl
sbb
sub
add
cmpsl
mov
enter
sub
js
jg
fwait
in
cmp
sub
subb
test
ret
nop
shrb
dec
jmp
dec
adc
sub
mov
aam
or
inc
notl
loopne
sbb
sub
xor
gs
insb
push
push
and
lock
fwait
idiv
repnz
pop
stos
jl
subb
popf
push
sub
xchg
adcb
jle
push
sub
jge
or
xchg
dec
push
push
push
add
sub
shrb
lods
and
loopne
mov
sbbl
sub
sbb
inc
lods
addr16
mov
addr16
mov
inc
sub
lock
pop
xor
pop
push
int
or
iret
test
push
mov
jo
xor
insb
xor
es
mov
ret
xchg
subb
lock
mov
sub
ret
mov
cmp
xor
or
sub
inc
imul
leave
sbb
mov
cmp
ror
insl
nop
add
pop
lds
popa
push
jmp
nop
sub
add
xchg
jo
ret
arpl
xor
cmp
ss
dec
aam
inc
sub
mov
adc
sub
cld
lahf
sbbl
mov
xchg
shrb
and
fadd
iret
xchg
pop
loopne
jo
ja
fildll
bound
pop
gs
xchg
mov
sub
xchg
ljmp
sub
andb
in
mov
out
into
out
lds
sub
sbb
add
adc
sub
inc
out
shll
cmp
addb
imul
sub
int3
jp
out
pop
enter
inc
inc
mov
rcll
jb
leave
dec
sbb
sub
push
and
add
popa
stos
or
mov
adc
nop
sub
jae
mov
mov
nop
sub
sub
push
pop
or
or
sub
mov
ds
jae
sub
hlt
sub
xor
mov
xor
push
aaa
dec
add
cmp
jmp
add
nop
subb
or
push
sbb
xchg
jo
xchg
mov
push
lock
add
mov
fimull
addr16
add
ds
and
mov
pushf
subb
lods
mov
addl
xchg
xchg
inc
movsb
in
aas
add
sub
inc
sub
adc
sub
pop
sbb
xor
mov
pusha
sub
aam
push
dec
movsb
mov
shrb
jo
mov
xchg
enter
adc
faddp
mov
and
pushf
pusha
sub
rorl
ret
push
loopne
stos
xchg
dec
jmp
mov
test
push
inc
push
inc
sub
or
sub
adc
lcall
push
sub
jg
mov
jae
sbb
pusha
scas
push
pop
das
dec
or
sub
sub
inc
xorb
push
xchg
xor
movsl
mov
sbb
sub
mov
stos
repnz
shlb
push
aas
imul
movsl
and
shrb
loope
pop
incl
les
cwtl
add
sub
arpl
mov
mov
dec
and
push
adc
and
pop
jbe
or
jne
nop
adc
inc
add
cmp
lret
fs
xchg
test
data16
cwtl
lock
repnz
loop
pusha
xor
mov
push
xchg
nop
sub
rcrb
push
popa
inc
ljmp
mov
jo
xor
push
das
fistpll
pop
cmp
aam
push
adc
adc
scas
mov
stos
xor
or
sub
adc
dec
fcoms
xor
xchg
mov
out
aam
mov
jle
sahf
adc
lock
sub
pop
mov
sahf
and
mov
xor
divb
mov
shrb
jmp
push
ret
xchg
push
lahf
lods
adc
sub
jp
adcb
dec
stos
lcall
lods
fwait
aas
mov
xor
adc
sub
jp
mov
stos
and
inc
sub
hlt
sbb
sub
inc
sbb
push
pop
push
dec
mov
js
nop
sub
sub
mov
popf
test
jge
dec
inc
das
out
sbb
sub
movl
inc
sarl
mov
push
dec
pop
dec
dec
mov
dec
jns
popf
jno
call
sub
subb
inc
adc
sub
inc
sub
das
add
xchg
adc
mov
call
sub
add
sub
imul
xchg
int3
gs
mov
rcrb
scas
leave
call
aam
sbb
sub
pop
addr16
test
sub
es
push
pop
xchg
adc
leave
leave
or
sub
mov
icebp
inc
xor
and
mov
sbb
mov
cmp
mov
fwait
lea
inc
jle
xchg
sub
in
andb
add
sub
or
sub
popf
popa
and
pop
lea
push
loopne
arpl
cwtl
lock
sub
lods
lret
sub
clc
pusha
fstps
scas
repz
pop
pop
dec
rorl
popa
out
xor
lret
movl
sbb
pop
pop
stos
lret
popf
sub
jae
ucomiss
mov
sub
jge
imul
sub
pop
inc
aaa
sbb
sub
ss
shrb
jo
movsb
outsl
xchg
mulb
sub
jne
xchg
stos
addr16
out
and
jecxz
shrl
mov
ret
fcompl
shl
mov
mov
pop
int3
in
rep
pop
xchg
call
loopne
das
sub
shrb
ss
loop
subb
mov
xchg
in
mov
sub
push
mov
add
cmp
pop
push
xor
ss
mov
stos
fmuls
loopne
jae
sbbl
out
inc
add
sub
popa
xchg
push
sub
push
lahf
out
xor
cmp
mov
sub
mov
sub
sub
sub
nop
lock
or
xor
test
push
add
sub
in
dec
mov
imul
cmp
sbb
in
push
cmc
nop
lock
shrb
movsb
xor
or
and
xor
add
fmull
pusha
sub
je
add
subb
inc
jbe
loopne
push
stc
mov
lock
js
add
add
sub
test
ret
sarb
std
inc
dec
xor
dec
shrl
cli
stc
inc
jle
divl
repnz
pop
cmp
push
xor
xchg
outsl
sti
cmpsb
mov
mov
or
sub
or
test
stos
lahf
mov
push
sahf
push
sub
xor
xor
sub
dec
fwait
out
enter
outsb
sahf
nop
sub
mov
shll
sbb
add
mov
mov
jmp
xor
in
xlat
ret
mov
mov
shrb
mov
faddl
adc
cmc
out
mov
ljmp
and
xor
cmp
jl
push
pusha
sub
sbb
out
sub
dec
test
pop
out
test
mov
adcb
sarl
xor
bound
stc
sub
fadds
inc
frstor
mov
cmp
dec
gs
jbe
enter
cs
xchg
sub
loop
pop
sbb
fcoms
shrb
bound
fadds
cs
jmp
jmp
dec
aaa
inc
repz
jno
pop
xchg
jp,pn
scas
xor
mov
call
mov
addr16
mov
decb
nop
cs
fadds
mov
gs
ret
or
inc
lret
cs
orl
lock
cvttps2pi
sti
inc
pop
xchg
mov
inc
cmpsl
gs
icebp
test
loop
cmp
add
mov
sub
jns
shrb
or
inc
cs
into
push
in
or
push
stos
cmp
mov
add
and
lock
and
shrb
push
push
fs
sbb
and
pusha
cs
mov
pop
movsl
pop
adc
ljmp
xorb
loopne
call
andb
shll
jmp
sub
sbb
shrb
popf
rcrb
loopne
test
mov
xor
mov
insl
enter
and
pusha
cs
lahf
mov
addb
nop
xor
addl
loopne
je
pusha
jl
mov
jp
hlt
pop
sbb
dec
mov
mov
mov
ja
pop
test
xlat
popa
mov
iret
bnd
sbb
gs
ljmp
outsl
daa
xchg
das
cld
xchg
jae
mov
add
sub
dec
pop
dec
adcb
stc
mov
dec
insl
fcmove
cmp
inc
xor
std
pop
dec
mov
mov
movsb
jbe
jns
icebp
xchg
jbe
hlt
xor
pop
jecxz
sbb
dec
cmpsb
dec
adc
xchg
das
outsb
mov
lcall
andb
xor
inc
das
xchg
mov
jb
mov
nop
das
add
das
xchg
mov
pop
dec
popf
daa
popf
or
xor
insb
fcmovnu
jno
fwait
sub
aas
mov
test
sahf
adc
test
jg
xor
jg
lods
iret
imul
adc
xor
or
fbstp
cwtl
push
das
add
das
imul
pop
pop
pop
sub
test
das
movsb
shrl
daa
aas
roll
jl
lock
xchg
jl
dec
pop
outsl
test
sub
mov
mov
xor
jns
sbb
leavew
clc
or
mov
mov
add
dec
sub
mov
popf
int
add
and
cmpsb
arpl
imul
filds
subb
popl
and
push
cmpsl
xchg
stos
sub
sbb
gs
data16
insl
cmp
and
xor
das
lock
lods
push
ss
sbb
mov
mov
mov
xor
or
clc
sahf
inc
xor
and
jb
loop
jg
es
mov
lock
bound
pop
mov
push
icebp
dec
shl
sub
xchg
lock
mov
dec
mov
xor
fcomip
or
fiadds
cld
orl
mov
iret
pusha
push
stos
sub
cltd
movsl
and
jb
mov
rcll
out
or
rorb
pop
testb
xor
dec
sbb
xor
lock
jecxz
test
aaa
xchg
mov
dec
mov
aad
xorb
out
push
mov
adc
int
jecxz
sbb
movl
push
mov
and
jle
sbb
sbb
or
xor
flds
mov
testl
xor
push
mov
cmp
inc
pop
sbb
xor
xor
pop
es
popf
movsb
cwtl
mov
sub
jge
xor
std
dec
lcall
add
xor
mov
out
adc
xor
dec
push
cs
addb
sbb
test
dec
dec
icebp
leave
andb
mov
mov
add
push
lds
bound
vminss
or
pop
and
dec
xor
lods
data16
mov
repz
push
push
movsl
and
cmp
in
inc
gs
mov
lahf
mov
mov
mov
fisubl
mov
xor
and
int3
daa
pop
out
inc
loop
popf
into
cld
pushf
adc
inc
sbb
xor
cmpsl
mov
test
mov
adc
call
mov
ficomps
out
cmp
xorb
or
or
mov
mov
or
enter
jne
xchg
loope
fstl
sub
fstl
fbld
enter
push
bound
xorb
adc
into
push
xor
lods
out
mov
sahf
loopne
pop
add
xorb
iret
add
adc
mov
or
xor
sub
and
mov
test
fildl
sub
jo
mov
aam
xor
iret
js
jge
mov
jge
push
cmpl
stos
jne
add
test
mov
arpl
adc
ljmp
inc
or
xor
pusha
test
mov
and
loopne
inc
rcrl
call
mov
add
jns
stc
sub
push
aam
inc
or
xor
inc
inc
xchg
mov
inc
inc
hlt
dec
mov
push
test
xor
lea
out
dec
push
pop
push
pop
loopne
push
notl
lds
das
xchg
xor
popa
out
sub
sbb
hlt
cmpsl
rclb
aaa
je
cli
xchg
test
test
pusha
loop
pop
xchg
and
dec
xor
fcoml
mov
mov
xor
and
pop
notl
mov
xor
xor
push
add
cmc
addr16
in
mov
xchg
sub
test
cmp
loopne
fs
inc
jo
mov
fwait
or
xor
push
or
ret
dec
adc
jp
lret
loopne
mov
xor
inc
sub
push
and
xchg
add
insb
cwtl
inc
xor
lds
nop
xor
mov
ja
arpl
jecxz
or
xor
xchg
mov
mov
rcl
icebp
xchg
push
stos
aam
les
shr
test
mov
pop
or
xor
call
adc
xor
push
dec
push
inc
test
shl
add
sbb
mov
dec
pop
pop
mov
xor
jns
add
push
push
movsl
push
loopne
insl
dec
pop
shr
in
adc
jl
outsl
mov
dec
jae
mov
lea
iret
adc
pop
mov
xlat
outsl
ds
mov
shrl
shlb
xor
xor
lods
rorl
mov
out
xchg
mov
mov
cwtl
xor
add
xor
loopne
jmp
dec
shlb
xor
or
stos
imul
xor
jno
add
xchg
das
mov
or
push
popf
test
mov
pop
nop
inc
xor
xorb
popw
movsl
sbb
xor
faddl
in
lock
xor
xchg
xor
mov
add
loopne
xchg
push
xor
push
les
ror
ret
loope
fmuls
mov
pop
decl
in
inc
mov
xor
inc
or
aas
mov
xor
inc
push
shlb
sub
sub
fldl
lock
pop
ffree
inc
sub
xor
xor
rcrl
jo
mov
push
aas
or
imul
mov
mov
pop
push
cmp
mov
sahf
push
xor
gs
dec
jns
pop
push
and
sub
and
rcl
cs
sub
and
mov
repnz
into
leave
jb
pop
jo
jg
cmpsl
int
or
aaa
movsb
push
sahf
loopne
or
bound
ja
inc
data16
repnz
ror
pop
rcrb
std
mov
push
test
sbb
add
xor
shlb
in
jae
mov
jnp
push
lock
pusha
xor
or
mov
dec
add
jo
das
shrb
inc
movsl
lret
les
jno
xorb
fdivr
dec
push
mov
cltd
push
dec
ss
push
xor
push
shlb
jns
adc
jbe
lahf
sub
jb
lds
shll
fisubrl
stos
mov
ficoml
fnsave
xchg
loopne
mov
dec
xor
push
aam
jnp
mov
andl
sub
dec
enter
inc
jbe
push
lret
iret
push
lock
adc
sub
inc
clc
xchg
and
push
pusha
xor
addl
xor
mov
and
shlb
xor
push
aam
dec
mov
xor
mov
xor
faddl
or
xor
std
mov
mov
inc
xor
adc
xor
into
popl
push
add
xor
jae
mov
in
inc
inc
sub
addb
adc
xor
or
xchg
xchg
popf
int3
mov
outsl
cmp
mov
std
adc
fbld
stc
jg
imul
je
jle
outsb
adc
fstps
pusha
xor
mov
mov
xor
gs
jnp
mov
aad
imulb
pop
mov
mov
aam
rorb
enter
mov
inc
cs
out
add
xor
out
push
out
inc
mov
dec
sahf
pusha
xor
shlb
daa
mov
xor
add
rcl
sbb
sbb
cmpsb
push
xchg
es
sub
mov
pop
loopne
inc
jae
stos
out
adc
xor
lods
push
mov
dec
dec
aaa
add
jp
nop
loopne
rorl
popa
push
sub
out
nop
inc
xor
jge
dec
fsubrs
cmpsl
pop
lea
xor
mov
mov
imul
xor
sub
jno
and
std
push
rcrl
je
test
jns
mov
cli
pop
sbb
jmp
fstpl
cmp
inc
int
fistpll
adcl
fdivrs
xor
mov
inc
imul
cmp
add
push
inc
xor
sbb
sahf
add
test
xor
popf
push
negb
xchg
addr16
fwait
sbb
xor
out
inc
xor
out
loopne
mov
mov
notb
dec
inc
and
add
fwait
enter
xchg
xor
lea
push
xor
xor
mov
mov
into
imul
cli
dec
pop
add
xor
cmp
jmp
cmp
arpl
mov
jge
mov
inc
icebp
jp
jne
push
rorl
int3
je
std
sub
push
dec
jge
call
rolb
add
rol
in
clc
vucomisd
add
fwait
pop
pop
xor
and
or
xor
and
xor
cmp
xor
pushf
shlb
notl
mov
push
fisubs
les
das
xor
pop
jmp
ss
outsl
shlb
push
push
xor
daa
mov
adc
xor
mov
in
cmp
push
cmp
xchg
ljmp
arpl
pop
cmovo
cltd
xorl
enter
or
and
and
xor
subl
adc
ss
xor
xor
jo
adc
ss
add
bound
or
ss
pop
stos
or
int3
and
sub
mov
lret
xchg
ss
inc
inc
sbb
fdivl
sbb
jo
inc
sub
lods
sub
mov
mov
ss
stos
sub
or
cmp
push
xor
dec
fidivrl
sbb
ss
ss
in
bound
adc
adc
ss
movsb
cmp
jo
and
out
insb
push
lock
fstl
cs
dec
xor
rcll
ss
ret
fsubs
xor
mov
push
cmc
das
rcl
mov
ss
into
pushf
add
leave
arpl
jne
xorb
lcall
out
icebp
rcrl
sbb
ret
out
adc
test
ja
ja
pop
mov
frstor
aaa
xorb
ss
nop
shlb
mov
ja
xchg
xorl
loope
addb
sub
mov
movsb
std
leave
cmp
dec
pop
inc
mov
push
push
push
dec
das
mov
ss
jno
mul
push
ss
outsb
data16
add
fsubr
repnz
mov
fdivr
cmp
jnp
adc
aaa
hlt
sbb
jmp
lock
jbe
shlb
cmpl
pop
jnp
adc
loopne
sti
aam
rcrb
sub
in
push
lock
dec
inc
xor
xor
insb
mov
jp
jge
clc
lar
stc
inc
pushl
fistpll
push
push
aaa
aas
cmpsl
sub
mov
inc
popf
lods
dec
mov
aaa
push
pop
test
mov
aaa
xor
jns
cmp
xor
icebp
xor
xchg
data16
mov
push
inc
aaa
sti
inc
imul
out
mov
fcoms
or
xchg
inc
dec
pop
sbb
pusha
aaa
jno
push
daa
push
repz
or
jbe
pop
push
mov
aaa
test
pop
mov
dec
cld
xchg
shlb
mov
dec
jnp
mov
cltd
test
lret
xchg
or
aaa
push
cwtl
pusha
aaa
mov
das
push
inc
aaa
and
das
lahf
pop
psadbw
push
cmpsl
es
fbld
aaa
mov
pop
fmul
into
or
aaa
push
add
aaa
popf
fidivrs
cmc
sbb
aaa
stos
es
xor
push
imul
push
add
mov
and
adc
sub
test
aam
in
adc
aaa
lcall
jbe
add
jbe
inc
les
aaa
mov
aad
adc
mov
scas
pop
push
rcrl
imul
xlat
std
cmp
popf
inc
lock
fnstcw
dec
test
and
cld
incb
lock
mov
shrl
lock
xor
pushf
adc
pusha
test
loopne
aas
dec
adc
out
filds
inc
sub
iret
sub
mov
nop
cmp
add
iret
fldenv
cmp
pop
inc
imul
xchg
push
dec
in
aam
mov
jle
jbe
mov
jns
pop
and
adc
cmp
cmp
fdivr
xchg
mov
lds
rorl
push
jo
stc
imul
and
cmp
or
outsb
jae
sub
or
cmp
imul
shlb
hlt
lock
lock
xlat
xor
pop
pop
dec
or
cmp
movsl
inc
leave
mov
rclb
xor
adc
test
popa
in
in
sbb
add
nop
cmp
mov
add
scas
daa
push
popa
lret
xchg
idivl
cltd
push
push
cmp
xor
lahf
dec
scas
ss
das
lret
mov
ja
xor
les
jae
xchg
jp
sarb
xor
inc
test
in
ret
mov
shl
mov
int
adc
add
jbe
int3
jmp
mov
xchg
cmp
xchg
cmp
lret
adcb
push
inc
cmp
mov
fisttpll
cmp
mov
add
cmp
jo
pop
cwtl
mov
ret
cmp
cmp
jp
out
dec
notl
lock
xor
mov
jle
push
cmp
mov
fwait
xchg
inc
cmp
sbb
cmp
pop
js
sbb
clc
mov
adc
cmp
push
cmp
xorb
jnp
pop
xchg
ljmp
cmp
cmp
adc
jecxz
push
cmp
mov
mov
mov
jp
outsb
cmp
lahf
mov
push
daa
push
pop
arpl
test
or
adc
in
jge
int3
in
cmp
leave
xchg
pusha
cmp
xchg
mov
ljmp
cmp
imul
cmp
inc
mov
es
xchg
jo
cmp
fnstenv
insb
jbe
adc
cmp
cmpb
bound
fiadds
jbe
hlt
std
push
and
fiaddl
inc
jae
js
mov
mov
push
push
lock
push
xor
mov
mov
mov
jbe
pop
mov
stc
fstpl
lock
xor
inc
cmp
aas
mov
cmp
sub
pushf
push
cmp
jns
pop
xchg
sarb
enter
sub
movsb
cwtl
lock
insl
jno
test
mov
movsl
xor
jo
xor
fnsave
mov
cmc
inc
addr16
mov
pop
pop
or
or
fsub
out
out
sahf
push
cmp
push
mov
lret
cwtl
mov
cmp
iret
adc
mov
xchg
push
dec
test
sbb
sub
loopne
imul
loop
xor
mov
cmp
inc
cmp
fildl
nop
cmp
cmp
in
push
loop
imul
cmp
cmp
and
add
loop
mov
and
jmp
paddusw
add
mov
mov
jb
fcmovnb
and
jg
sub
pop
pushf
and
aad
add
cmp
iret
sahf
inc
cmp
sbb
mov
outsb
cmp
cmp
and
jo
sub
imul
cmp
cmp
lret
in
leave
popa
adc
cmp
xor
sarb
xor
ja
sub
xor
lds
movsl
mov
pop
test
inc
rolb
lahf
out
fiadds
sbb
out
pusha
cmp
sarb
pop
test
cmp
lock
shrb
test
xor
xchg
clc
cwtl
cmpb
sub
jg
cmpsb
in
dec
ffreep
cmpsl
pop
dec
cmp
cmp
xchg
mov
cmp
sub
pusha
push
jmp
pusha
jl
bound
lock
loop
mov
adc
ss
pop
mov
cmp
lret
sarl
mov
cmpb
fwait
into
mov
in
sarb
push
adcb
cmpsl
push
cmp
jp
adc
push
loopne
daa
shlb
lret
es
mov
adc
pop
out
mov
cmp
dec
stos
or
fwait
aam
test
mov
cwtl
and
or
xor
cltd
mov
push
push
cmp
lret
fstl
push
adc
jns
fdecstp
inc
sbb
add
jmp
ja
test
cmp
pusha
cmp
mov
cmp
pop
xchg
nop
cmp
xor
sub
sarl
cmp
cmp
push
jo
popf
mov
xlat
xor
mov
ds
and
inc
in
stos
mov
xor
push
rorb
mov
and
imul
lods
aas
mov
push
cmp
faddl
in
pop
daa
jo
loope
sbb
cmp
mov
lret
fisubs
push
cmp
dec
jp
scas
add
clc
movsl
loope
cmpsb
xor
in
mov
push
adc
mov
cmp
jecxz
add
add
cmp
loop
je
sub
xor
dec
adc
mov
sub
mov
pop
cwtl
mov
scas
inc
outsl
fisttpl
nop
cmp
add
and
leave
out
mov
or
mov
push
pusha
cmp
fstps
dec
js
das
mov
ds
mov
in
and
in
xchg
sarb
mov
cmp
fdivp
out
stos
call
arpl
push
adc
mov
test
cmp
or
cmp
sub
lods
call
fchs
xchg
push
cmp
ss
sub
fldl
xor
pop
aad
cmp
cmp
jo
and
sub
int
fwait
push
decl
scas
cmp
cmp
lret
push
sarb
inc
cmp
mov
out
cmp
cmp
sti
mov
inc
mov
rorb
andl
sub
cmp
outsl
out
aam
insl
pop
mov
cmp
arpl
pop
push
xorb
cmpsb
int
fadd
dec
enter
jo
ljmp
loopne
je
sbb
sub
cmp
pop
addl
lret
out
mov
imul
jno
xchg
xchg
and
test
inc
sub
nop
sarb
add
pop
clc
sbb
nop
cmp
add
jp
call
iret
repnz
pusha
cmp
sarb
jmp
lods
xor
jns
arpl
fisttpl
xor
or
inc
leave
movsl
sub
xchg
jle
push
mov
cmp
mov
or
cmp
mov
rcl
xchg
xchg
nop
cmp
or
xchg
loopne
ficompl
and
mov
aam
lahf
gs
int3
jns
mov
inc
rol
pop
sub
ret
xor
xchg
std
sti
sub
pop
in
bound
ret
cmp
into
les
sub
popf
cld
cmp
cmp
mov
cmp
shl
sahf
sarb
in
imul
lret
dec
xor
daa
ror
fisttpll
and
rcll
adc
lock
sarb
adc
lds
add
cmp
loopne
push
addr16
lock
mov
adc
cmp
out
repz
fildl
popf
or
xbegin
mov
lock
push
shrb
out
push
arpl
lock
sarb
mov
adcb
dec
pop
xchg
daa
lahf
lcall
cmp
cmp
fildll
sarb
push
cmp
jo
hlt
mov
out
mov
cmp
cmp
push
pop
rolb
sbb
into
mov
push
lods
sbb
pop
pop
outsl
mov
sub
fidivrl
pop
fisubs
xchg
lock
mov
push
inc
cmp
ja
cli
fsubrl
pop
pop
mov
and
pop
enter
inc
mov
sarb
insb
iret
ljmp
out
xor
cld
xchg
or
cmp
dec
lds
in
cmp
xor
mov
cld
mov
je
xchg
pusha
cmp
or
cmp
fdivs
pop
push
inc
test
add
addr16
cmp
lcall
sub
lock
push
fs
lods
ror
dec
and
mov
ds
nop
ds
pop
int3
sbb
sbb
inc
scas
stc
out
loop
dec
pusha
mov
adc
ds
daa
or
sarb
iret
pop
dec
shlb
in
xor
xor
cmpb
lds
adc
inc
ds
or
ds
xor
push
sub
idivl
ds
popa
lcall
cmpb
fs
pushf
pusha
ds
jo
push
push
mov
repnz
cli
add
stc
outsb
addb
adc
ds
insl
lea
cmp
pop
jbe
roll
add
mov
push
adc
decb
aas
or
std
iret
imul
ja
cmp
pop
stos
push
lcall
clc
loopne
or
ds
sub
and
ds
jecxz
sti
inc
add
nop
cmpb
mov
ds
xor
les
add
xorb
sbb
fs
scas
int
push
sarb
mov
and
adc
inc
ret
call
cmp
push
pop
clc
or
jb
stc
dec
sub
mov
repz
cmp
adc
mov
inc
test
xchg
shrb
adc
adcb
popa
mov
adc
orl
out
out
pop
mov
add
aas
call
movsl
bnd
iret
ret
pop
std
popa
and
inc
xor
mov
adc
aas
shl
sarb
outsb
js
imul
jle
pop
repz
pop
sub
dec
jl
sahf
mov
push
and
sbb
clc
aas
pop
mov
dec
sbb
aas
sbb
les
xchg
pop
in
int3
and
mov
push
or
cmpb
aaa
push
pop
or
aas
or
aas
addr16
xchg
jl
inc
and
pop
pop
dec
xchg
mov
sub
add
arpl
repnz
mov
pop
jle
jo
or
aas
fwait
xchg
mov
cmp
xchg
leave
pop
jb
test
jo
fldcw
insb
adc
mov
jne
test
mov
inc
das
sbb
aas
adc
aaa
insb
stos
and
mov
mov
sbb
pop
clc
cld
xchg
and
iret
in
sarl
push
xchg
leave
icebp
sbb
fisubrs
xorb
dec
or
aas
adc
xchg
in
loopne
mov
and
cltd
aad
mov
insl
xchg
mov
cmpl
jp
sarb
sub
cmpb
add
aas
xor
lret
pop
dec
loope
mov
xchg
cwtl
nop
aas
mov
pop
jbe
mov
mov
xchg
xor
test
cli
cmp
jae
jge
and
arpl
sub
in
xchg
aas
aas
dec
pop
in
xor
pushf
adc
xchg
mov
inc
mov
js
lds
shll
xchg
xchg
xlat
loope
stc
ret
fdivs
jle
loopne
push
jo
ret
pusha
inc
mov
adc
addb
imul
dec
and
insb
rorb
insb
not
insb
lock
mov
sbb
rcll
mov
ss
jp
inc
inc
mov
lcall
mov
pop
ss
roll
mov
sub
lock
call
inc
test
test
push
and
es
imul
stos
xor
rorb
xchg
mov
inc
ljmp
add
lahf
xchg
nop
inc
addb
pop
movsb
adc
inc
stc
fidivrs
jno
jle
sbb
push
push
inc
out
cmp
xor
iret
sub
sbb
pop
sahf
lock
jecxz
test
or
inc
add
inc
cmpsb
test
test
inc
inc
cli
imul
mov
fwait
ss
pop
sub
shr
repz
lock
add
push
jle
adc
in
cmp
cld
fsubs
loope
fsub
cli
test
jl
jae
pop
loope
xchg
mov
jnp
dec
push
lcall
mov
sahf
rolb
jbe
scas
fdivrs
xor
cmp
lods
push
rcrb
inc
inc
sub
loope
mov
add
sub
loopne
add
test
inc
add
fmull
repz
xor
imul
jae
mov
cmp
jo
je
sbb
lahf
push
jb
sbb
xor
xchg
addb
fidivrs
push
add
jno
or
cltd
ud2
dec
out
inc
pop
jge
sti
push
enter
inc
sub
or
adcb
sub
xor
aad
push
rcl
dec
call
inc
xchg
lock
lret
insb
lods
gs
pop
test
gs
fdivrl
sbb
inc
dec
out
xor
dec
pop
es
cld
lret
sti
add
inc
adc
insl
je
sbb
inc
mov
jmp
jo
insl
imul
test
inc
push
xchg
lock
inc
lea
add
pop
xlat
stc
addr16
sub
out
push
pop
xor
cld
in
lods
xor
lahf
cmpsb
js
aam
mov
xor
fisubl
insb
loope
cmp
sbb
outsb
fistps
data16
cmpl
xor
pop
shrb
mov
sbb
shll
loopne
rcll
add
inc
adc
inc
jns
popf
popa
in
bound
movsb
rcrb
add
fdivl
pop
mov
mov
fists
mov
inc
pop
jno
idivl
inc
lcall
mov
dec
pop
push
jns
xlat
insb
push
pop
int3
xor
imul
mov
add
inc
iret
adc
ror
rolb
fldcw
js
mov
mov
mov
xorb
jns
in
in
mov
xchg
mov
jp
push
rolb
lock
mov
push
nop
inc
pop
sbb
inc
aam
add
inc
add
adc
inc
popa
add
mov
inc
or
inc
js
xchg
pusha
inc
ret
cmc
shrl
mov
dec
mov
adc
inc
and
jne
fs
daa
pop
cmpsb
or
cld
out
sub
cmc
and
dec
add
mov
adc
inc
push
nop
inc
adc
adc
pop
call
aaa
shrl
inc
out
jns
orl
rolb
sbb
inc
subl
outsb
mov
xchg
mov
pop
scas
lds
pusha
jb
mov
dec
jmp
jge
addr16
xor
mov
inc
pop
pop
jecxz
cmp
divl
mov
inc
xchg
mov
mov
lock
movsb
adc
movsb
pop
push
lret
push
inc
dec
or
inc
stos
mov
in
adc
inc
dec
sbb
cmp
push
je
mov
push
and
jmp
rolb
call
stos
inc
jmp
mov
jmp
addb
dec
aas
sahf
xor
xor
inc
xor
inc
jno
loop
fs
sbb
hlt
mov
xchg
pop
inc
cmpsb
pop
mov
xor
popf
add
shl
jbe
or
pop
fcmovnb
popl
inc
inc
inc
jg
sbb
inc
ds
nop
xor
dec
sub
cmp
pop
sbb
dec
adc
cmp
lock
in
or
inc
dec
mov
addb
fistpl
imul
and
add
inc
adc
xorb
sbbl
mov
iret
push
xor
and
leave
sub
push
in
std
sahf
nop
inc
cmc
loopne
cmp
inc
inc
pop
popf
fnstsw
std
shll
fwait
inc
pushl
pop
jno
insb
add
sbb
inc
inc
fildl
mov
mov
inc
shrb
mov
mov
adc
jmp
fisttps
int3
xchg
int
and
push
repz
cmp
sub
xorb
dec
xor
or
inc
jns
dec
mov
add
dec
jnp
or
cld
popa
cmp
out
mov
insb
mov
test
insl
jg
les
insl
cmp
push
pusha
inc
aam
mov
inc
dec
andb
into
xchg
in
and
call
les
xchg
add
jo
mov
pop
sbb
inc
hlt
fimuls
dec
cmp
xor
cltd
cs
xor
push
bound
adc
stos
push
sub
mov
inc
xchg
xchg
mov
mov
inc
shlb
dec
popf
fwait
or
mov
sub
sahf
lock
fwait
push
xor
mov
or
dec
pop
sub
inc
adc
mov
shl
jle
inc
inc
jo
sub
push
ret
pop
adc
inc
lcall
jne
mov
mov
ljmp
push
in
enter
xchg
add
inc
push
lock
cmpsl
xchg
imul
mov
pushf
addb
mov
pusha
ja
pop
xchg
inc
cmp
inc
xchg
inc
imul
inc
mov
add
or
inc
cmp
push
insb
sahf
rolb
push
mov
inc
cld
or
adcb
jmp
adc
fld
enter
das
adc
loopne
push
mov
inc
mov
sub
rolb
jmp
icebp
flds
insb
ds
mov
mov
xchg
dec
test
mov
js
sub
or
mov
dec
inc
rcrb
pusha
inc
int3
arpl
scas
nop
adc
test
pop
dec
outsl
test
rolb
inc
cmp
scas
es
mov
jne
orl
lods
bound
enter
dec
sbb
das
shl
mov
inc
addr16
mov
out
std
fs
aam
mov
aam
rcll
push
lods
sbb
mov
sbb
inc
lcall
mov
cmp
in
push
icebp
jmp
and
xchg
mov
push
and
nop
inc
lock
mov
inc
iret
sbb
out
stos
sti
fdivrl
ret
mov
xor
xor
xchg
inc
movsb
adcb
adc
nop
inc
adc
inc
and
mov
lret
js
in
add
inc
inc
aas
mov
pop
bound
nop
mov
inc
sbb
inc
mov
mov
clc
cmp
shl
sub
or
inc
lea
lock
enter
out
gs
cltd
lret
inc
add
insb
adc
push
inc
mov
nop
inc
and
pop
and
repz
and
scas
jbe
or
scas
sbb
lds
imul
cld
mov
inc
clc
mov
xchg
cld
adcl
or
inc
test
addl
cmp
int3
daa
jmp
cmp
sub
add
inc
out
iret
sbb
sub
mov
mov
cli
cmp
mov
movl
rolb
aas
aad
jle
cwtl
loopne
xrelease
inc
mov
push
pop
stc
hlt
jp
inc
js
stos
push
andb
lods
pop
jo
cltd
pop
das
ljmp
jae
rolb
inc
xchg
mov
lods
inc
jno
jne
mov
push
mov
xlat
or
pushf
lock
fnsave
sbb
inc
mov
mov
ficomps
sbb
inc
mov
mov
mov
sub
inc
dec
loopne
cld
fidivs
add
xchg
inc
inc
addr16
rolb
cmc
push
add
mov
inc
xchg
int3
jnp
mov
xor
lods
js
jae
sub
lahf
in
or
repz
add
ds
lea
add
nop
inc
out
pop
fwait
adc
das
das
sbb
inc
ja
ret
xorb
aaa
and
dec
mov
int
dec
dec
faddl
clc
in
xor
rolb
push
rolb
gs
mov
rolb
iret
rcrl
enter
push
inc
pop
aad
add
inc
aaa
dec
xchg
inc
inc
pop
dec
jmp
push
rolb
mov
jo
enter
inc
repz
mov
push
rolb
test
jbe
call
scas
test
inc
jle
push
pushf
mov
mov
out
mov
popa
dec
stos
lret
insb
scas
loop
xchg
stos
jb
data16
push
lcall
aaa
movsb
push
test
mov
idiv
js
incl
pop
iret
mov
jnp
cmp
and
pop
mov
sbb
fdivrl
addb
add
dec
stc
out
jge
mov
dec
dec
out
shlb
lds
cmp
arpl
adc
inc
xchg
addb
mov
jnp
add
in
lret
imul
int3
call
inc
scas
sbb
dec
out
bound
fdivs
jg
cmp
icebp
jo
mov
addr16
or
jae
mov
mov
pop
fwait
push
jo
sub
inc
inc
jmp
js
daa
xor
loopne
fcmovnbe
add
jmp
mov
dec
mov
inc
push
xchg
jl
pop
aaa
arpl
or
inc
cmp
mov
ja
push
inc
in
lods
cmc
mov
add
pop
cld
cmp
lds
inc
inc
bound
rolb
dec
ret
sbb
inc
dec
rcrl
lock
mov
push
pop
push
inc
inc
or
rolb
xor
dec
add
sbb
mov
mov
scas
scas
icebp
add
inc
mov
lock
push
pusha
inc
pop
mov
arpl
sub
lea
jns
imul
jmp
jns
push
inc
jp
repnz
mov
rolb
push
adc
addb
scas
aad
fildll
gs
aas
ja
xchg
xor
xchg
jo
cwtl
loopne
call
test
xor
xchg
mov
add
inc
aas
lret
push
inc
sub
andl
pusha
inc
fdivs
jle
in
in
incb
nop
inc
loope
jl
jo
pop
movsl
cmp
push
lock
dec
lock
adc
or
inc
mov
mov
sbb
inc
int
push
inc
int
jae
cltd
push
jo
in
pop
sub
xor
lcall
mov
mov
flds
aam
fiaddl
iret
fidivl
xchg
jb
orb
inc
lea
dec
dec
test
xchg
imul
pushfw
pusha
dec
mov
repz
rcl
xor
xor
cs
inc
jmp
push
xor
cmp
push
adc
sbb
dec
add
pop
jmp
dec
jae
xor
dec
in
jecxz
push
js
xchg
scas
push
adc
out
aad
dec
leave
test
jg
mov
mov
pop
clc
add
dec
insb
adc
insb
ret
push
cmp
adc
dec
cwtl
mov
stos
mov
lea
test
dec
xchg
loopne
inc
sub
mov
mov
lret
mov
and
lahf
sbb
and
out
out
imul
mov
jo
stos
insb
es
push
mov
dec
and
out
movsb
xor
cld
add
jp
sarb
pop
ja
fists
push
dec
push
mov
add
dec
mov
cmp
dec
out
cmp
outsl
out
lock
mov
xchg
rorb
or
dec
pop
add
and
mov
sub
in
mov
mov
dec
mov
jae
ss
sbbl
dec
mov
push
pushf
loopne
mov
nop
dec
rorb
sub
mov
dec
pop
inc
leave
add
mov
mov
dec
mov
clc
or
adc
sbb
dec
ljmp
mov
xchg
int
scas
pop
clc
sahf
lock
scas
xchg
dec
popa
std
push
push
adc
sbb
push
sbb
dec
mov
les
and
mov
dec
fcomps
clc
cmp
add
dec
xchg
arpl
pop
add
out
leave
jns
jl
rorb
add
sbb
push
jle
mov
mov
dec
pop
in
shlb
cmp
call
dec
xor
jo
inc
pop
out
loopne
inc
jmp
into
dec
adc
imul
xchg
lock
push
je
mov
dec
mov
pushf
push
dec
jmp
nop
dec
jne
push
mov
mov
int3
sbb
test
dec
xor
imul
test
rorb
mov
jge
mov
xor
mov
mov
rol
push
xchg
adc
mov
dec
push
push
and
les
jo
ja
xor
adc
test
mov
add
lock
loopne
mov
jle
stos
mov
sbb
dec
fsubrl
sub
push
lods
push
jecxz
jecxz
and
push
jle
add
dec
push
inc
dec
ret
lcall
pusha
dec
pop
mov
loopne
jns
mov
xor
mov
imul
xor
hlt
inc
div
sti
enter
mov
fldcw
adc
dec
jnp
jge
sti
int3
jle
pop
lcall
mov
in
sti
xor
pop
icebp
mov
or
adc
dec
fcompp
inc
jmp
jo
mov
dec
lahf
mov
xchg
rorb
mov
dec
fisubl
aam
mov
add
dec
push
sar
xor
dec
jnp
incl
fistps
adc
inc
loope
and
dec
mov
daa
cmp
mov
in
mov
add
dec
adc
dec
fsubrs
push
adc
dec
lods
fs
push
aad
sbb
or
dec
int3
xchg
mov
adc
dec
add
push
xor
cmp
dec
test
add
dec
sub
pop
ret
mull
dec
add
pushf
rorb
mov
push
dec
adc
insl
mov
imulb
jecxz
fs
dec
lahf
jbe
sbb
dec
popf
addb
sti
mov
xchg
mov
cmc
stos
mov
dec
stos
or
mov
ret
mov
cmpsl
lea
jecxz
scas
mov
gs
loop
ljmp
movsb
jb
or
dec
mov
push
dec
mov
adc
pop
cmp
sub
inc
jno
xor
cmpsb
je
xchg
mov
in
rorb
fildl
pop
pop
dec
cmp
xor
fcmovb
inc
push
mov
mov
stc
stc
xor
pusha
dec
push
pop
mov
dec
mov
les
rorb
add
dec
xor
or
jnp
and
fmuls
outsl
pusha
cwtl
and
jecxz
rolb
dec
out
adc
xchg
push
dec
stos
ret
pushf
pusha
dec
jge
dec
pop
inc
pop
push
lock
orl
sub
mov
xchg
pusha
dec
mov
loope
cmp
in
pusha
add
dec
test
push
mov
adc
dec
pop
adc
add
jge
cmp
and
or
arpl
xchg
dec
int
push
dec
jecxz
dec
pop
and
es
inc
dec
lods
lret
addl
dec
in
inc
in
pop
dec
sub
popf
ret
out
cmpsb
loopne
pusha
dec
call
adc
adc
mov
dec
mov
lods
fs
addr16
push
lock
mov
inc
xchg
dec
adcl
pop
sub
rorb
fisubrs
mov
dec
popf
mov
xchg
adc
dec
in
xor
or
dec
in
fcomps
xchg
inc
dec
popf
inc
imul
jb
stos
and
cli
xchg
dec
ret
xchg
lock
mov
imul
imul
lahf
mov
rorb
lds
or
pop
jnp
mov
jmp
jbe
mov
push
pusha
dec
cmp
cmp
add
jno
xor
jle
rorb
push
xor
fcom
insl
push
xor
loope
pusha
push
cli
push
orb
jp
add
dec
nop
mov
jg
dec
inc
adc
in
dec
jo
sahf
mov
popf
addr16
rorb
ret
hlt
jge
test
pusha
out
or
std
movsl
call
sbb
lahf
fs
and
shl
adc
push
dec
xor
cs
dec
mov
adc
push
pop
out
push
pusha
dec
mov
bound
cmc
xchg
push
dec
jle
xor
popf
fs
dec
xchg
ja
add
dec
rcll
mov
push
inc
xchg
xor
dec
push
mov
jo
mov
pop
fstp
xor
xchg
mov
fs
repz
dec
lods
cmpsb
xchg
hlt
dec
aam
daa
xor
and
mov
dec
cmp
add
es
data16
arpl
inc
rcrl
sti
popa
imul
rorb
rorb
fs
mov
rclb
test
ret
dec
inc
iret
pop
cwtl
orb
dec
jmp
icebp
int
iret
inc
popa
ja
mov
push
add
dec
leave
imul
loope
movsl
test
or
and
adc
orb
mov
jmp
mov
cmp
lret
btc
popf
mov
sbb
dec
leave
lret
and
pop
loopne
mov
loopne
cmpsb
fisubs
push
testb
rorb
dec
push
pop
ljmp
dec
popa
xchg
addr16
cltd
xor
pop
mov
dec
ret
fimull
repnz
ja
daa
dec
jp
fildl
dec
xchg
bound
sub
dec
in
adc
nop
dec
test
dec
aas
or
or
dec
push
out
adc
js
mov
jns
add
xor
or
and
pusha
mov
cmp
mov
pop
shll
inc
push
mov
sbb
into
add
dec
sahf
orb
mov
cmc
inc
dec
sub
iret
dec
addb
pusha
dec
add
dec
cld
insl
or
mov
or
es
mov
push
lock
mov
jl
mov
mov
cmp
cmovae
sbb
push
dec
sar
fwait
in
sbb
and
mov
xor
lock
aam
mov
movsl
pause
inc
dec
notl
adc
dec
inc
loope
fs
mov
and
mov
scas
inc
fnsave
bound
push
inc
xchg
mov
jg
clc
pop
mov
das
lret
nop
and
jmp
notl
test
mov
pop
icebp
neg
test
inc
cmpsb
or
mov
push
loop
rorb
mov
and
dec
idiv
std
ja
lock
mov
sarl
std
xchg
or
dec
pop
movsb
iret
cmpsl
or
rorb
push
rorb
repnz
mov
nop
dec
sbb
dec
ret
mov
jnp
mov
loope
out
fldl
arpl
pushf
nop
dec
lock
les
mov
dec
cwtl
orb
xor
imul
inc
dec
inc
inc
jp
jnp
movsl
ud0
cmpsl
jg
or
data16
dec
mov
xchg
dec
add
mov
pusha
dec
adc
fadds
inc
dec
repnz
or
lock
andb
rorb
push
mov
xchg
nop
dec
push
and
loopne
add
popa
cli
sbb
dec
inc
mov
lret
aas
test
dec
insb
loope
mov
data16
dec
add
lea
dec
jo
ljmp
dec
lret
data16
shrl
orb
out
dec
sbb
inc
mov
out
dec
dec
jo
pop
jne
pop
jb
sbb
dec
mov
rorb
dec
push
xchg
jo
outsb
xor
ds
lret
outsb
jmp
arpl
mov
inc
xchg
fistpll
dec
sub
jmp
nop
jo
adc
test
test
loope
push
nop
inc
dec
jnp
roll
dec
pop
and
mov
filds
ret
jge
cli
or
jle
ja
pop
adc
ret
in
and
loopne
and
mov
sub
cmpsb
xchg
inc
dec
inc
inc
mov
js
cs
push
mov
outsb
xchg
cmpsb
inc
lahf
sbb
and
out
outsl
out
xor
in
fsubs
rcrl
xchg
rorb
and
push
dec
push
rorb
add
mov
inc
out
dec
jmp
insl
dec
xchg
mov
cmp
cmp
dec
mov
jl
dec
cli
cmp
outsl
lock
test
rol
lcall
rorb
push
jo
add
dec
jnp
push
lock
or
dec
adc
fisubs
mov
cmp
in
and
jns
ds
pusha
dec
adc
mov
inc
dec
sub
pop
jle
fistps
mov
jle
fisttpll
mov
jbe
mov
pop
into
add
push
rorl
jns
adc
sbbl
roll
in
fdivs
punpckhdq
pop
clc
pop
mov
rorb
int
mov
cwtl
orb
fxch
inc
xchg
xor
xchg
mov
push
pop
sbb
inc
jbe
or
dec
lcall
arpl
push
outsb
ret
outsl
lds
and
pushl
pop
imul
dec
negl
mov
nop
and
lret
ffreep
push
rorb
cmp
loopne
loope
xchg
lock
add
stos
shll
ljmp
sti
sbb
dec
and
xchg
mov
ficompl
mov
and
mov
cmp
cmp
imul
jmp
push
loopne
pop
cmp
ret
stos
adc
lahf
and
nop
add
maxps
mov
lock
hlt
sbbl
jns
lock
push
sbb
xchg
ret
mov
loopne
sub
sub
adcb
rclb
sbb
jge
into
cs
and
iret
xor
mov
add
popf
ljmp
dec
inc
pusha
mov
lret
push
jge
mov
or
mov
and
lcall
mov
ret
movsb
xor
pushf
pusha
push
adc
push
xor
adc
fdivl
ja
cmpsl
adc
xchg
add
pop
dec
push
push
dec
add
stc
add
mov
and
mov
ret
loopne
sub
inc
push
mov
jno
loopne
rclb
nop
rclb
popf
mov
mov
mov
cmp
mov
push
push
or
cld
xchg
jo
xor
jo
pop
push
daa
push
cmpsl
fcmovu
or
adc
jno
pop
mov
inc
mov
das
je
jae
loope
push
mov
adc
xchg
lock
push
pop
pop
in
mov
sti
ficomps
adc
mov
ds
push
fwait
or
lock
das
mov
push
lods
popa
imul
push
and
ficoms
add
jo
test
xor
fucomi
bound
sub
loopne
adc
aaa
test
dec
push
mov
rolb
push
and
mov
shlb
cmpsl
ds
mov
push
lock
jmp
mov
sub
leave
push
jmp
cmpl
outsl
aaa
adc
push
push
out
push
cmpsl
or
inc
movsb
push
inc
divb
xor
and
add
inc
dec
and
xor
xchg
rclb
or
push
test
inc
test
and
enter
mov
outsb
inc
push
out
pop
cld
push
mov
loopne
cmpsb
fisubrl
or
push
mov
enter
adc
push
pop
mov
jo
pop
outsl
cmp
adcb
stos
push
pusha
push
movsl
fstps
pop
xchg
push
push
iret
inc
jmp
mov
jb
mov
push
and
dec
sahf
xor
cmp
sahf
adcb
jnp
adc
rclb
or
inc
mov
xorb
mov
push
ror
or
sub
hlt
add
popa
sbb
push
pusha
adc
push
dec
inc
cmp
daa
cld
jno
xchg
mov
adc
push
hlt
ret
mov
xchg
rclb
adc
jle
push
loopne
mov
or
push
cmp
push
sbb
push
jl
pop
dec
and
cltd
lock
aam
push
subl
nop
push
cs
add
sub
pop
insb
int
adc
push
sub
push
and
and
nop
push
inc
dec
mov
ficomps
adcb
rclb
cs
cld
or
cmp
bound
xor
jmp
inc
push
popa
lods
data16
insl
mov
sub
rcll
pop
aas
jns
sbb
scas
and
pusha
push
or
jae
jp
out
into
arpl
imul
mov
push
mov
push
push
xor
mov
iret
pop
jne
cmpsl
inc
cmp
xchg
frstor
push
rorl
nop
push
out
mov
clc
jge
sbb
insb
sbb
push
loopne
jns
push
loop
out
push
inc
push
pop
add
push
in
jae
movsb
dec
pop
dec
push
adc
jns
and
nop
push
jp
outsb
xchg
jo
dec
inc
bound
or
push
je
aas
cltd
pop
divl
and
fstps
loope
icebp
jg
pushf
rclb
imul
in
ss
imul
xor
push
test
push
xchg
int3
outsl
ficoms
imul
loope
fs
mov
loopne
push
push
cmp
lcall
cltd
inc
dec
bnd
nop
push
mov
xor
repz
test
call
push
inc
das
fists
add
nop
add
insl
push
ficoml
xor
fstps
rclb
jns
inc
mov
int
mov
jo
shlb
cmp
lods
lcall
loopne
mov
adcb
push
or
addr16
cld
pop
neg
xor
jg
test
push
icebp
fistl
add
lock
cwtl
pusha
push
dec
fiaddl
push
inc
pop
scas
lea
nop
push
jmp
mov
popa
mov
rclb
pushf
xor
push
inc
mov
push
cmpsb
out
adcb
pushf
inc
push
xchg
orl
mov
push
sbb
push
arpl
inc
sbb
push
clc
in
ljmp
inc
addl
add
movsb
pusha
cmp
add
push
fdiv
outsl
or
and
fbld
jo
jno
inc
sbb
mov
push
inc
std
cmp
adc
sbb
push
mov
push
inc
fsubrl
bnd
lods
jmp
sbb
hlt
loope
test
ja
xchg
nop
push
or
push
xlat
std
mov
stos
daa
out
dec
jb
xor
lret
popa
jmp
and
ret
jp
dec
cmp
lods
mov
icebp
popf
xor
movsl
or
jne
out
add
pop
push
loopne
sbb
push
mov
pop
push
adc
push
aas
fisubl
shrl
pop
xor
imul
mov
sbb
push
sub
add
and
loop
xor
int3
repz
xor
adcl
fdivl
adc
xor
push
scas
aam
push
mov
imul
out
or
push
jmp
mov
arpl
nop
push
sbb
push
lds
in
pop
add
push
imul
test
push
cmp
push
adc
push
insl
push
arpl
push
pmulhuw
das
shll
outsl
xorb
push
xchg
nop
add
mov
fildl
push
nop
push
xor
lret
jg
inc
push
push
mov
sbbl
sbb
push
repz
pop
loopne
or
into
or
push
test
adc
sbb
dec
stos
pop
push
adc
xor
lock
cli
in
jbe
jo
clc
fbld
aas
pop
push
mov
shll
stos
xchg
and
fisubl
mov
jo
jp
jecxz
cmp
push
adc
push
insl
leave
mov
addr16
stos
or
lock
in
xor
movsl
push
loope
sbb
push
xor
mov
push
mov
ja
sub
cmp
pusha
add
inc
jle
jne
jo
fstpl
mov
in
fstpt
mov
inc
mov
inc
pop
iret
jno
lea
sub
xor
adc
sbb
push
cmp
add
adc
sbb
sbb
push
xchg
je
loopne
popl
inc
xor
int3
add
push
in
add
cmp
lahf
in
mov
push
test
daa
pushf
add
jg
and
pusha
push
fcmove
adc
jo
inc
ds
jmp
aad
lcall
mov
push
sub
mov
fadd
jmp
loopne
fs
inc
mov
aaa
or
je
push
push
in
xchg
add
inc
push
xchg
imul
ret
xchg
jo
jecxz
dec
jo
cmpsb
xchg
push
pop
fidivl
adc
dec
inc
dec
inc
or
insb
loop
xchg
loopne
ja
push
lock
cli
mov
or
in
push
push
push
dec
jle
lods
cmpsl
push
jle
jg
loopne
cli
jle
and
pusha
push
mov
loopne
push
push
push
pop
cmp
bnd
push
adc
inc
cwtl
and
out
test
push
and
jg
out
outsl
bound
sbb
into
mov
sub
xchg
pusha
push
cli
adc
push
jle
pusha
push
sbb
lods
inc
jmp
imul
ss
push
adc
mov
xor
xorb
ret
push
std
add
and
mov
es
std
adc
push
pop
jne
sub
push
pop
xchg
aam
add
push
cmpsl
push
cmpsb
dec
seta
lock
xchg
outsl
mov
aad
aam
outsb
xchg
rclb
inc
push
or
push
fadds
and
sub
loope
stc
pop
cli
mov
ds
rclb
inc
pusha
clc
fstpt
and
mov
push
pop
mov
loopne
mov
in
dec
inc
push
push
dec
in
xor
fcoms
and
sub
mov
push
mov
sub
xchg
bound
adc
push
fdivl
stc
jae
mov
push
mov
push
decb
and
jle
insb
mov
and
stos
int3
lcall
mov
popa
or
test
push
pop
jb
mov
push
sbb
mov
push
add
sahf
inc
push
pop
push
outsl
je
mov
pop
fisubl
dec
lret
out
push
adcb
mov
sub
add
popa
dec
add
push
adc
hlt
hlt
ret
sub
mov
pop
dec
repnz
sbb
mov
shl
outsl
xchg
push
pusha
push
pop
sub
xchg
mov
xchg
insl
int
jmp
and
mov
push
clc
mov
push
dec
inc
fiadds
lcall
rclb
pop
jp
fs
testl
and
mov
push
push
lret
pop
loopne
sti
dec
scas
movsb
inc
test
leave
jb
sub
sbb
push
sahf
xor
out
jmp
push
sbb
out
push
jbe
cmc
imul
mov
jmp
lret
jno
sub
clc
pushf
mov
lcall
rclb
push
pop
arpl
movsl
lahf
mov
sbb
push
in
cmp
push
cwtl
adcb
adc
push
scas
push
gs
and
rclb
int3
or
push
std
xchg
dec
adc
push
movsb
inc
sbb
cli
testb
inc
push
xor
push
xchg
mov
push
rclb
or
lea
sbb
push
jo
stos
shll
push
fstpt
icebp
sbb
add
push
pop
xor
lock
dec
hlt
aas
out
inc
jmp
push
mov
push
sbb
arpl
lahf
sbb
push
push
push
out
jmp
std
push
rol
jno
fcoml
leave
cmp
stos
shlb
adcb
adc
mulb
xor
and
and
add
jo
xchg
xchg
mov
fistl
cli
sti
filds
mov
sbb
push
das
ss
mov
lds
mov
or
adc
xor
adcb
inc
xchg
push
xor
adc
testb
data16
and
adcb
push
rcl
and
add
push
enter
push
fdivp
xlat
mov
out
adc
xor
inc
dec
and
push
cs
xchg
rclb
test
xor
mov
pop
xchg
rclb
shl
jmp
inc
sub
cmp
ret
sub
add
xchg
pusha
push
inc
mov
adc
into
sbb
lret
scas
sahf
jo
cmp
hlt
cmp
mov
ds
xor
adc
push
inc
arpl
jb
icebp
out
dec
ja
push
push
popf
mov
rclb
adc
dec
inc
add
jb
xor
rclb
filds
and
pop
add
xchg
jns
adc
push
mov
leave
sti
mov
test
fs
or
lea
cmp
dec
insl
test
push
cli
jge
and
nop
push
lock
or
and
jle
adc
pop
jle
mov
rcrb
xor
and
in
jnp
subl
loopne
add
mov
push
xchg
test
dec
jle
sbb
push
mov
insb
jmp
dec
push
adc
sbbl
xor
cmpsl
and
sbb
pop
pop
cmp
cmp
add
inc
adc
aaa
or
or
sbb
xlat
lods
inc
popa
xor
popa
pop
loopne
ja
loop
sahf
rcrb
js
lret
stc
mov
dec
xor
movsb
movsl
mov
pop
cld
sbb
aad
cmp
and
in
push
sub
rcr
cmp
dec
test
in
or
pop
jb
in
in
lods
fs
push
push
pop
out
rclb
lret
xchg
gs
cmp
lock
inc
out
add
iret
les
pop
lea
xorb
movsb
or
and
imul
arpl
sbb
mul
dec
and
pop
ret
mov
cmp
push
mov
rcrb
cmp
mov
lahf
add
pop
imul
rcrb
pop
popa
pushf
add
and
jmp
cmp
dec
jmp
and
xlat
cmc
xchg
pop
daa
inc
push
adc
add
pop
xor
pop
xor
add
jo
scas
jns
push
dec
mov
mov
cmp
or
andnps
pop
or
pop
hlt
in
cmpsl
inc
iret
sahf
adc
dec
mov
xor
in
cmp
push
mov
pop
pushf
nop
pop
sbb
bound
or
push
pop
lods
jecxz
push
ficompl
cwtl
sbbb
push
sub
repz
movsb
mov
pop
les
rcrb
fcmovne
movsb
outsb
scas
in
jl
daa
push
loopne
jmp
adc
xchg
insl
out
dec
xor
lds
and
inc
cmp
rcrb
inc
pop
js
sti
stos
xchg
mov
nop
pop
mov
pop
xchg
jns
adc
dec
jecxz
lock
inc
stc
cwtl
add
movsl
adc
pop
ret
pusha
shlb
rcrb
popl
and
sahf
pusha
pop
popf
in
mov
pop
fistl
outsb
int
cmp
push
and
mov
and
mov
daa
xlat
clc
sub
mov
sbbl
int3
lea
iret
ljmp
pop
in
