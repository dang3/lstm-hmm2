scas
rorb
add
mov
cld
push
aad
jle
ljmp
or
mov
icebp
sbb
dec
push
add
ret
cmpsb
or
dec
clc
mov
pop
aas
add
into
negb
in
dec
jne
out
jns
dec
inc
add
xor
adc
jg
mov
cld
push
pop
iret
sbb
in
cmp
mov
into
js
rclw
add
mov
and
adc
scas
movsl
stos
xchg
imul
add
push
xchg
jo
aaa
cmp
mov
xchg
scas
mov
icebp
jge
jo
loopne
js
mov
cmp
sbb
adcl
repz
gs
mov
add
push
xor
jg
js
sbb
push
ret
dec
bound
cmpsl
ss
xchg
sub
or
cmp
xlat
or
movb
lock
and
add
cmp
lcall
cmp
lock
xchg
ret
jl
jle
lret
cmc
mov
add
das
imul
jl
mov
scas
dec
sti
xchg
icebp
jb
stos
add
jbe
ds
shl
pushf
cltd
das
or
test
push
adc
repz
movb
sti
dec
jo
cli
and
inc
add
pop
sahf
lods
inc
dec
mov
popa
lahf
xor
jo
je
scas
cwtl
push
loop
sub
pop
mov
cltd
jns
nop
push
movb
dec
lea
in
cmp
ss
mov
mov
xor
fwait
or
add
and
and
xchg
outsl
jmp
mov
in
mov
jle
sti
adc
mov
out
sbb
mov
add
rcr
mov
pop
add
mov
jne
add
insl
addb
std
pop
aam
mov
outsl
ja
rclb
add
push
inc
add
ss
icebp
in
xchg
push
rcrb
les
cmc
addr16
fmull
mov
pop
sbb
gs
inc
add
mov
add
rorb
out
xor
pop
out
push
outsb
add
sub
jmp
jmp
add
arpl
imul
cld
out
test
es
mov
int
add
adc
mov
add
jo
mov
cmpsb
fisttps
pop
mov
ficoml
cmp
jno
flds
add
xor
sbb
sub
movsb
mov
fwait
sub
jae
cmpl
arpl
add
addb
mov
std
mov
aad
push
dec
test
adc
add
add
dec
mov
mov
jnp
scas
add
or
add
jge
add
add
add
push
rolb
fwait
divb
insl
and
int3
mov
pop
out
jmp
and
and
sar
xchg
and
addr16
cli
popa
jo
pop
pop
or
add
push
xchg
inc
add
add
addb
inc
xor
push
jp
jnp
xchg
cmpsl
sbb
in
push
stc
fsts
pop
mov
clc
inc
xchg
and
inc
add
xchg
sub
cmp
add
fxch
aaa
test
imul
stos
sub
xchg
into
cmc
inc
mov
xchg
outsb
adc
pop
jle
test
mov
xchg
xlat
repnz
push
add
pusha
add
jg
outsb
xchg
sub
cmp
add
lcall
add
lods
and
xor
sbb
std
cli
hlt
or
lds
mov
sub
fisubl
mov
inc
aam
push
push
into
push
into
jno
mov
push
leave
mov
adc
add
pop
rclb
add
lcall
or
add
dec
fistpll
and
iret
lock
dec
out
and
stos
push
jge
js
scas
add
insb
xor
pop
cli
out
cli
movb
jbe
sbb
inc
add
ss
and
std
shll
jbe
push
addb
lret
mov
lock
out
push
mov
add
xchg
pop
insl
push
and
int3
mov
cli
xchg
mulb
add
jg
and
lahf
mov
ljmp
push
frstor
add
gs
mov
add
add
mov
push
mov
fcomps
addr16
sub
je
add
dec
xchg
inc
add
xor
mov
mov
mov
push
jecxz
jne
add
pop
mov
mov
mov
notl
xchg
mov
cmp
inc
add
and
push
repz
fsubl
sub
leave
and
sti
pop
in
add
push
xchg
mov
insl
imul
jle
loopne
loopne
sbb
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
lret
jmp
add
add
dec
jp
add
or
sbb
sbb
and
mov
or
ds
out
or
test
pop
repz
imul
into
xchg
pop
xchg
loopne
out
test
arpl
add
jge
popf
or
pop
sbb
or
fnstenv
sbb
add
fcmovne
sarb
cmp
adc
jne,pn
popf
cs
sahf
mov
lcall
leave
cvtpi2ps
add
cmpsl
addb
repnz
and
testb
aaa
inc
add
cs
or
dec
jecxz
cmp
pop
pop
jne
mov
iret
mov
inc
push
add
inc
add
enter
mov
add
jne
insb
mov
cmpsl
mov
add
mov
mov
xchg
xor
xchg
out
and
out
mulb
inc
add
test
or
out
test
add
repz
test
mov
sbb
mov
dec
dec
mov
sub
call
out
inc
add
mov
out
loope
add
subl
scas
jno
sub
add
shrl
cmp
xor
pop
sbb
xchg
add
std
inc
add
mov
fadds
add
lcall
js
or
mov
jnp
jo
add
mov
cmp
jp
xchg
pop
and
popf
test
dec
out
movsl
fbstp
jle
jmp
call
out
fimuls
addb
adc
mov
jg
push
and
sub
scas
fisubrs
mov
cld
pop
dec
mov
insl
mov
xor
mov
popa
data16
mov
stos
fcompl
addr16
insl
pop
jmp
stc
xor
add
mov
in
arpl
xor
in
adc
pop
mov
jecxz
cmp
jnp
movb
pop
in
pop
or
jp
jns
dec
pcmpeqb
loope
dec
push
add
je
pusha
add
pushf
insb
lahf
or
xchg
sarl
and
mov
and
in
loopne
ss
mov
je
pop
ficoml
test
aaa
jo
fldt
sti
fwait
cmc
repz
bound
sti
out
xor
cmp
sub
movb
jp
add
inc
add
and
gs
addr16
or
bound
call
ds
stos
jg
jne
add
sbb
add
cmp
out
mov
push
into
jb
adcl
int3
jb
addb
push
in
or
cs
icebp
enter
lock
mov
inc
stos
addl
addb
sub
inc
repnz
or
add
cmp
adc
shrl
repz
ljmp
orl
std
fcompl
pop
or
lods
mov
out
aaa
mov
out
shl
push
pop
aam
addr16
outsb
js
loopne
fstpt
add
cmp
mov
sbb
movd
idivl
cwtl
add
repnz
sub
jp
jns
mov
mov
dec
out
push
jb
jne
les
cld
out
gs
clc
push
xchg
jle
enter
js
fmuls
stc
or
jg
add
in
dec
sbb
repz
and
jl
mov
cld
stc
test
mov
add
imul
or
add
int
or
cli
loopne
lret
add
arpl
add
add
mov
cli
cmpsb
and
ljmp
mov
add
pop
push
and
aam
xchg
xchg
aas
fistpl
outsl
cmc
nop
adc
or
iret
and
or
test
mov
pop
loopne
cmp
scas
push
cs
add
mov
xchg
lods
cltd
into
in
jbe
imul
cmp
int
pop
mov
add
dec
push
jmp
xchg
adc
movsb
mov
and
iret
adc
lea
cmp
loope
xlat
xchg
mov
test
inc
add
out
fs
mov
cmp
clc
es
filds
push
cmc
lahf
fcomps
push
cs
fisttps
dec
pusha
add
int
pop
jmp
cld
aam
add
cmpsl
cmp
rclb
pop
or
cmp
mov
movb
add
cltd
in
pop
arpl
add
sahf
jno
pop
nop
loop
push
testb
jg
adc
fldcw
faddp
mov
xchg
mul
mov
stc
imull
mov
gs
shlb
add
int
add
dec
sub
add
inc
add
mov
xchg
push
aaa
push
repz
cmpsb
mov
das
push
mov
loopne
dec
addb
ret
lds
sbb
adc
push
and
lret
inc
fimuls
shll
nop
pop
fildll
add
sbb
pop
fcmovbe
or
add
sarw
xor
es
mov
dec
mov
cmp
imul
inc
inc
add
mov
push
test
mov
cmp
ss
scas
hlt
mov
push
ret
xor
mov
sbb
pop
mov
adc
add
mov
icebp
std
test
xchg
push
shll
add
mov
add
mov
ret
pusha
add
add
mov
imul
dec
hlt
repnz
pop
jmp
add
mov
cmp
ret
add
inc
dec
sbb
pop
pop
adc
lds
cmpsb
push
push
adc
xor
adc
lret
dec
mov
push
nop
cmpsl
data16
add
jns
or
or
push
mov
cmp
loop
loope
cli
push
xor
in
cmp
add
pushf
xor
fsts
lea
negl
or
and
adc
call
aam
fcomps
cli
push
out
mov
notl
xchg
test
fildl
mov
cmpsl
add
jg
jmp
pop
or
mov
jbe
rolb
outsl
test
add
xor
in
sub
add
ret
xor
ss
jno
add
or
dec
cli
sub
xchg
mov
movsl
fmull
jnp
inc
add
add
pop
cmp
cmp
test
sbb
dec
pop
sbb
jmp
insb
sbb
xchg
in
cmovbe
adc
sub
pop
push
pop
xchg
mov
cmp
adc
pushl
xchg
xor
mov
rolb
mov
das
pop
out
jo
scas
or
lods
bnd
jmp
pop
jb
repnz
popf
mov
mov
mov
adc
test
cmp
cmp
nop
mov
stc
pop
ret
adc
out
and
insb
dec
movsb
mov
mov
cmp
inc
icebp
xchg
jg
pop
ficomps
cmp
aas
sbb
outsb
xchg
imul
repnz
cmpl
add
aaa
mov
inc
out
ret
adc
and
dec
mov
popf
adc
dec
dec
sub
add
inc
push
or
fadd
add
add
cmp
repnz
xchg
mov
xchg
xor
in
jg
orl
adc
rcl
cltd
jno
push
dec
xor
in
mov
jne
push
cltd
movsl
sub
sbb
sarb
repnz
sti
dec
mov
add
add
lret
add
out
push
jl
and
mov
sub
mov
in
inc
scas
pusha
add
popf
dec
jbe
push
or
ret
call
add
push
mov
inc
bound
xchg
sub
add
and
les
imul
ret
xor
xlat
movb
inc
add
out
adc
add
dec
daa
ljmp
mov
mov
sbb
inc
fidivs
mov
fistpll
fdivrs
add
lods
pop
lock
sbb
pop
mov
pop
cmp
leave
cmp
lret
lea
xor
in
mov
push
xchg
pusha
add
addl
add
mov
or
add
jmp
adc
std
popf
gs
insl
pop
add
jge
pavgw
xchg
ja
into
xchg
push
ss
test
jno
into
stos
addl
xchg
rcr
dec
add
pop
add
xchg
in
inc
jle
iret
or
bound
dec
jge
add
fildll
push
leave
jne
scas
stc
inc
lret
test
and
jmp
mov
mov
lods
xlat
shlb
xchg
lcall
xor
xlat
leave
inc
add
xor
out
shlb
mov
xor
enter
adc
sbb
lods
add
data16
aad
pop
popf
enter
or
loop
les
lds
add
add
movsb
fnsave
addb
data16
push
ds
pushf
stc
and
icebp
mov
pushf
das
xor
add
fbld
outsb
sbb
mov
unpcklps
mov
imul
sbb
xor
fwait
aad
enter
shrl
jne
faddl
pop
mov
xor
int3
sar
loop
mov
add
sub
ret
pop
sub
mov
mov
and
lret
stc
push
and
clc
jmp
sbb
push
lds
jnp
fdivrs
in
add
cmpsl
je
add
sbb
fwait
push
enter
out
adc
xor
inc
add
sub
and
add
mov
arpl
mov
bound
les
hlt
loopne
aam
outsl
mov
sub
mov
sbb
add
push
jp
addb
mov
hlt
sbb
insb
js
cwtl
inc
iret
cltd
stos
shll
pslld
lret
mov
mov
add
pusha
add
in
andl
lock
fbld
mov
inc
add
das
cmp
movb
shrl
mov
and
push
daa
xor
loop
add
stos
scas
sbb
add
mov
pop
push
mov
insl
scas
ja
lea
mov
mov
aaa
hlt
jns
cmp
adc
mov
jnp
add
fisubs
xchg
negl
jbe
imul
rolb
mov
inc
add
dec
test
push
add
pop
pop
loope
add
cld
inc
add
sub
adc
lret
xor
jo
xor
out
ja
pushaw
add
enter
jmp
add
sbb
fsubrl
shlb
add
shll
push
sti
adc
outsb
mov
add
pop
movsb
dec
and
or
add
adc
pusha
add
or
bound
mov
push
stos
shrl
mov
mull
xchg
ret
dec
data16
push
dec
loop
ljmp
mov
ficompl
es
fmull
sbb
je
mov
sti
sub
add
aam
xorl
add
movb
or
and
and
sub
add
aas
xchg
adcl
test
sub
insb
xchg
pop
dec
es
repz
and
add
inc
mov
gs
cltd
cmp
shrl
outsl
push
mov
or
div
cld
aad
iret
mov
lret
shll
fs
mov
mov
push
jl
add
xchg
lret
mov
jp
test
add
outsb
xchg
xchg
negl
add
loopne
sub
pusha
add
cvtps2pd
test
add
test
in
cmp
dec
movb
out
bound
push
add
sarb
add
popf
mov
popa
inc
add
stos
scas
jg
ret
push
add
fnstenv
roll
cmp
cmpsl
jge
sbb
dec
mov
arpl
lcall
loope
nop
inc
jo
lods
ror
jns
bound
out
add
das
xchg
add
call
cmp
xchg
roll
xchg
lods
mov
cmpl
sbb
int3
rclb
mov
lods
add
cli
cmp
or
sub
sbb
pop
ret
add
clc
xchg
inc
aaa
xchg
fcom
jno
pop
mov
sarl
dec
jbe
adc
add
and
fsts
add
or
push
pop
cmpsb
push
popa
inc
sub
push
fs
sbb
call
pause
ret
sbb
add
xor
mov
mov
and
pop
imul
mov
fnstcw
lcall
mov
sbb
adc
lock
hlt
jmp
push
mov
cltd
xor
cwtl
scas
out
data16
daa
jl
repnz
dec
xchg
ljmp
loopne
outsb
inc
add
push
jmp
push
add
mov
movsb
jnp
addb
pop
nop
xchg
fs
add
hlt
daa
dec
xlat
mov
or
test
push
or
aad
dec
out
pop
jbe
add
xor
adcl
jo
dec
xlat
adc
jae
ret
int3
or
addb
stos
inc
add
and
add
adc
int
pop
or
insl
outsl
push
mov
adc
jecxz
add
push
sbb
push
push
mov
pop
or
cld
dec
sub
push
rorl
mov
icebp
or
ficompl
cltd
iret
adc
out
push
addr16
inc
add
lods
pushf
fwait
adc
clc
minps
or
jno
addb
lds
xor
movb
mov
jecxz
inc
cmpsl
dec
xor
inc
add
movb
mov
dec
mov
mov
aam
sbb
fsubp
or
push
jecxz
push
data16
xlat
sub
pop
hlt
cmp
xor
xlat
mov
jb
sub
pop
inc
std
lcall
push
push
add
lret
sbb
imul
arpl
mov
mov
add
aas
xor
mov
sbb
fwait
mov
mov
jo
or
mov
xchg
cmc
lods
out
call
rolb
and
fsubl
leave
imul
pop
xor
pop
in
ds
xchg
lods
fstps
lods
mov
lock
xor
enter
pop
movb
outsl
cmc
repnz
xchg
pop
scas
es
sbb
dec
fisubl
repnz
dec
inc
add
add
jmp
call
add
add
pop
jmp
add
mov
add
bts
call
and
fwait
mov
jbe
add
and
in
add
rolb
loop
mov
add
pop
mov
imul
sti
mov
out
inc
sub
xor
xor
xchg
pop
sbb
sbb
popa
les
inc
add
out
cwtl
cli
das
sbb
test
nop
push
add
loope
xor
xor
xor
jns
lea
cmp
das
cmp
mov
dec
pop
pminsw
cmp
add
sbb
mov
xlat
rcrl
cli
into
dec
or
movsl
and
push
or
or
add
sti
movsb
xor
jge
jnp
jns
add
push
test
xchg
dec
push
xlat
pop
inc
push
dec
push
cmp
pop
mov
out
rolb
sahf
data16
test
add
lock
in
movsb
fildl
nop
data16
in
test
ret
aas
loope
jp
inc
add
addb
movsl
sbb
mull
add
and
js
pop
lret
loop
cmpsl
pop
push
cmc
lock
xchg
inc
fdiv
or
inc
subl
pop
loopne
push
cmp
loop
movb
cmpsl
pop
mov
dec
jp
xor
adc
lret
jle
and
lods
rolb
inc
int
sub
fwait
xchg
scas
movsl
lret
mov
xchg
arpl
sbb
ds
test
push
push
in
mov
cmc
pop
jg
int
push
dec
sbb
push
out
adc
adc
mov
test
add
add
cmp
cmp
add
xor
pop
pop
mov
ret
pop
cmp
push
lahf
dec
lcall
iret
cmp
aaa
push
rolb
add
inc
add
adc
outsb
sub
ret
adc
mov
add
lahf
xchg
inc
stc
bound
aas
mov
xchg
test
jns
add
gs
hlt
mov
cmp
sub
in
add
xchg
xor
rcrb
adcl
add
push
scas
je
mov
pushf
lret
int
push
scas
sub
adc
cwtl
into
je
mov
fidivl
inc
mov
sub
ds
aaa
inc
push
mov
cmp
push
add
in
inc
add
popf
aad
aam
add
into
mov
addb
add
push
sub
fnstcw
jae
stc
push
xchg
jnp
gs
in
sbb
xor
mov
mov
or
or
cld
add
mov
inc
pop
shrb
addr16
dec
lods
mov
icebp
imul
dec
pop
dec
icebp
cs
add
push
je
pusha
add
js
xchg
loop
aas
test
jae
std
sub
pop
push
add
push
nop
pop
pop
rcl
loopne
adc
xor
popa
lret
sub
mov
xchg
mov
push
out
adc
bound
fistl
pushf
sbb
out
mov
andnps
and
pop
sahf
jb
add
les
dec
mov
mov
shlb
cmp
arpl
adc
xchg
filds
push
mov
or
cmp
addb
setp
mov
dec
les
flds
aad
movswl
nop
popf
rorb
sub
insl
arpl
fstpt
daa
aas
push
ss
jbe
lret
mov
or
add
in
aad
test
gs
pushf
push
pop
popa
aaa
push
loope
cmp
insl
sahf
xchg
mov
cwtl
pop
inc
add
aaa
jns
adc
push
adc
inc
add
fs
jge
fs
lret
xor
mov
loop
xchg
addb
fs
push
mov
out
les
xchg
mov
sti
daa
mov
add
addb
fisubl
into
xor
sbb
add
mov
add
jb
and
enter
add
cmpsb
or
fiadds
push
scas
mov
jle
or
add
xchg
mov
add
rcrl
push
ret
jnp
inc
mov
mov
jge
xchg
movsl
pop
pop
stc
mov
xor
sarb
xchg
mov
sbb
jp
out
add
sub
mov
add
add
lds
sub
cs
insl
mov
imul
shll
cmp
push
fwait
ret
int
aas
enter
sbb
hlt
inc
add
outsl
fsts
sbb
ja
les
rorb
mov
jne
cmp
mov
push
inc
jp
push
cmp
add
mov
loop
scas
mov
xchg
sbb
sub
jg
aas
repnz
add
xchg
add
test
sub
cmp
xchg
sub
es
adcl
xchg
ss
cmp
inc
push
adcl
mov
or
sub
dec
mov
and
push
lock
loop
cmp
add
add
andl
scas
push
rolb
std
pushf
movsl
rorl
ret
mov
cmpsb
push
jnp
stc
mov
movb
xchg
jg
imul
sbb
pop
and
fwait
aaa
in
jp
or
add
icebp
sbb
push
add
push
ss
das
sub
roll
lods
hlt
push
pushf
jns
jp,pt
and
jge
insl
inc
push
ret
mov
mov
js
inc
add
loopne
mov
add
aad
daa
fisubs
call
fcompl
push
add
rcl
inc
movsl
mov
add
lahf
in
mov
clc
mov
insb
xchg
sub
mov
out
out
sahf
jle
xor
aam
sbb
cmpsl
lret
cmpsb
in
dec
xlat
mov
cmpsl
xor
sbb
and
enter
cwtl
ss
sbb
push
cmp
cmpsb
dec
mov
mov
add
add
add
mov
loope
jns
movsl
cltd
popa
lahf
mov
or
or
add
cwtl
inc
fistpll
test
ret
in
fcmove
inc
add
cmp
fimuls
insl
ret
pop
sbb
pop
out
jo
sub
lcall
mov
lods
cs
rcrl
in
hlt
pop
pop
add
lds
push
fidivrl
adc
notb
inc
jmp
add
adc
cmp
xchg
xor
imul
xchg
fstps
xor
lret
xor
cs
lret
dec
pop
mov
inc
add
in
sub
cmp
stos
mov
mov
pop
jns
dec
jl
jbe
sbbl
push
lods
out
enter
xor
add
mov
xor
add
inc
pop
popf
jbe
add
or
outsl
or
add
mov
mov
add
mov
lret
ret
sub
fcomps
add
xchg
sbb
add
mov
xlat
cmp
pop
in
mov
xchg
pop
mov
int3
dec
jp
sti
dec
loop
lret
add
mov
shrb
ret
test
jp
xchg
mov
sub
scas
add
sub
pop
sbb
ret
repnz
div
push
jae
xchg
sub
and
lret
test
add
getsec
aaa
pop
jbe
sub
in
adc
pop
add
mov
test
mov
add
push
test
xor
divb
out
or
test
add
mov
push
clc
pop
dec
dec
je
cmc
sub
cmp
mov
inc
add
cmp
dec
and
hlt
sbb
jnp
push
js
add
pushf
push
add
cmp
test
fildll
test
adc
lods
aam
in
mov
add
add
pop
movl
sbb
and
call
loope
mov
pop
sub
les
mov
jle
int3
inc
fdivr
mov
fldt
in
mov
mov
jle
mov
rep
ds
scas
pop
iret
aas
lods
sub
or
scas
fstpl
mov
paddb
ja
sahf
dec
push
rolb
mov
test
lahf
test
pop
sbb
mov
test
paddq
loope
inc
add
das
leave
addl
dec
ljmp
loope
xor
scas
push
xchg
addb
mov
jle
or
popa
push
push
sub
imul
mov
sbb
out
xor
push
pop
and
imul
mov
jle
and
cmp
add
dec
xchg
or
add
cli
xchg
int3
clc
icebp
movb
shll
jle
dec
das
popa
rcll
jne
push
aad
shll
sbb
in
fstps
scas
loop
dec
mov
add
fcompl
mov
divl
in
rcr
xchg
xor
fs
inc
add
daa
adc
popf
and
push
rolb
mov
mov
call
pop
movsb
pop
adc
cmc
adc
daa
sbb
insb
inc
add
mov
daa
jae
out
push
bnd
mov
xlat
xor
aam
dec
xchg
push
fs
test
sbb
mov
cmp
data16
cli
and
mov
or
and
add
addb
inc
mov
test
jbe
add
pop
cmp
mov
sub
in
xor
stc
bound
movsb
inc
or
inc
fnsave
lret
sarb
pop
add
xchg
or
cmp
xor
lods
jb
das
mov
jno
xor
xor
push
je
leave
xor
loopne
inc
inc
add
neg
fwait
jge
outsb
cmpsl
xchg
lods
lret
xor
lahf
shll
leave
inc
mov
mov
pusha
add
lea
test
sbb
add
fistl
sub
gs
mov
sarl
add
sti
mov
scas
cwtl
ss
in
add
xchg
pop
sub
inc
test
dec
loop
cld
stos
mov
adc
push
imul
pop
mov
and
out
push
loop
daa
sub
inc
add
xchg
xlat
bound
out
inc
xor
jle
jne
in
xchg
ja
pop
jl
jecxz
adc
cwtl
pop
xchg
and
push
mov
sbb
sti
cmp
cwtl
test
sub
loope
out
sub
push
lret
test
sti
imul
xchg
mull
into
addb
jge
pop
gs
or
movb
push
add
and
cmpsl
jl
xor
sbb
mov
add
xor
insl
mov
movsl
ret
push
addr16
stos
leave
push
roll
or
xchg
sbb
cmpsl
imull
add
dec
pop
xchg
mov
add
dec
add
add
inc
add
into
stc
movb
pop
push
in
mov
shll
fs
push
je
mov
add
iret
xlat
out
and
shlb
sub
lcall
out
pop
xchg
les
sarl
mov
lcall
lret
push
sysret
jne
orl
data16
cmpsl
int
stc
aas
shlb
add
mov
mov
pop
out
cmp
cs
sbb
add
setl
pop
nop
xor
icebp
repnz
or
and
adc
stos
ja
lret
popa
push
stc
rolb
outsb
lds
lock
mov
push
call
ud2
mov
cmpsb
xchg
test
out
push
ss
cli
cmpsb
sbb
inc
add
push
jne
fdivs
adc
jne
xor
addb
mov
add
arpl
mov
out
cmp
xchg
adc
int3
lock
jae
push
jg
leave
add
pop
xchg
cmpsb
popf
loop
cmp
xlat
add
jb
mov
sarb
and
pop
cmpsb
cmp
xchg
int3
lods
cmp
pop
fsubrs
repz
or
add
pusha
add
out
inc
jg
dec
mov
jp
add
fisubrl
gs
js
xor
js
xchg
pop
mov
in
mov
rolb
scas
jecxz
inc
dec
es
cltd
icebp
stos
out
xor
out
fisttpl
pop
jns
int3
mov
or
xchg
jo
push
out
mov
mov
adc
sub
sbb
add
xchg
mov
and
sti
push
and
enter
mov
add
lds
int
aaa
xlat
jp
inc
and
aaa
mov
add
inc
pop
movb
jnp
test
xchg
ret
jmp
ja
cmp
inc
add
jmp
stos
jge
movb
add
jecxz
icebp
and
movb
adc
mov
jp
fldcw
lret
or
fisttpll
xchg
cmp
out
pop
mov
add
add
in
shll
scas
pusha
add
pop
jne
fiadds
xor
jmp
inc
add
adc
ret
jge
gs
fdivrs
push
jecxz
ret
addr16
sti
and
popa
mov
xor
aaa
je
imul
cmpsb
or
leave
xor
add
fiaddl
add
pop
insb
xchg
imull
dec
lds
add
loop
shrd
inc
add
lret
mov
out
cmpsb
in
fisttpl
mov
idivb
mov
and
addb
adc
ljmp
cmpsb
ds
clc
psadbw
cmp
testb
and
mov
jno
leave
test
pushf
call
fldl
cmp
xchg
rorb
inc
add
add
jae
notb
jmp
xchg
xchg
in
sub
xchg
rcrl
ret
mov
sbb
push
popf
jbe
out
xor
xchg
addl
xor
mov
imul
mov
ret
fcom
jecxz
xchg
lods
jp
add
out
lods
jmp
and
mov
push
aaa
orl
call
sub
out
aaa
mov
cmp
rorl
std
mov
cli
xchg
out
mov
push
jmp
mov
nop
hlt
sbb
call
pop
xchg
call
cld
in
mov
add
mov
lea
dec
ret
mulb
or
lods
rclb
pop
mov
cs
div
jae
cwtl
mov
lcall
lcall
test
sub
add
add
mov
mov
roll
jbe
lea
popa
pop
test
rolb
lcall
fldenv
add
data16
insb
fcoml
movsl
je
add
sbb
sarb
cmp
int3
cmp
add
inc
jmp
negl
lods
xchg
loop
call
add
aad
cmp
outsb
push
add
jae
shll
aad
cmp
adc
mov
pusha
add
scas
les
cwtl
inc
dec
cwtl
jl
insb
sbb
movsl
inc
add
pop
test
push
dec
je
ret
mov
and
xchg
cmpsl
dec
into
sbb
or
jmp
inc
mov
jge
mov
aas
cld
lock
adc
fadd
add
fwait
inc
mov
jno,pn
jecxz
cmp
add
or
addb
jp
pop
lret
xchg
lret
je
mov
movb
xlat
fdivr
lea
add
stc
jecxz
nop
push
adc
mov
pop
inc
add
xor
cli
addb
inc
popf
push
out
and
inc
lock
pop
cli
and
jg
or
call
pop
push
add
xor
ret
insb
jne
fiadds
add
pop
mov
push
mov
pop
cwtl
movl
push
movb
mov
mov
inc
add
xchg
cmp
inc
mov
dec
push
or
xor
imul
mov
test
or
push
imul
out
push
aad
pop
ljmp
push
jbe
in
sbb
cmp
dec
scas
jns
pop
je
addb
mov
cmp
jecxz
cltd
xor
and
push
cmp
arpl
movb
mov
in
psubw
aas
outsb
and
jnp
pop
ret
add
pop
test
xchg
lea
sub
std
inc
fcmovnb
ret
in
jp
add
ss
stos
jnp
add
xchg
test
add
mov
push
sub
pop
adc
add
sbb
add
inc
add
or
sub
mov
mov
daa
dec
addb
dec
cmpsb
icebp
loop
pusha
add
lods
mov
xchg
je
imul
push
mov
add
push
in
sub
sbb
lret
cmp
fstps
add
push
nop
mov
jp
mov
outsl
dec
push
cs
addr16
pop
pop
xchg
insl
clc
pusha
add
jp
or
das
mov
stc
fistps
call
or
push
cwtl
cltd
int3
adc
ret
xor
dec
les
ret
jno
jno
shr
lcall
jmp
das
or
test
mov
push
add
sbb
add
cmp
mov
iret
sbb
inc
add
lcall
add
leave
loope
add
jb
ss
sbb
sbb
jmp
mov
lret
jecxz
into
mov
add
movb
push
sub
aaa
cs
pop
mov
rcrb
mov
xor
sti
hlt
xor
ds
pop
mov
sub
rcr
and
or
push
pushf
push
imull
xor
push
imul
xor
rolb
cmp
sbb
adc
push
sbb
std
fisubrs
pop
cmc
xor
sub
add
fs
jmp
lret
fsubr
mov
push
cmp
add
in
cld
pop
mov
pop
push
lods
xor
sbb
mov
and
pop
fidivrl
dec
mov
pusha
add
add
lock
mov
jle
fimuls
test
cld
scas
fsubl
fdivrl
xchg
cli
jno
test
sbb
add
pop
fstps
fadds
add
xor
push
fstp
xchg
fwait
or
dec
mov
jno
add
jae
loop
mov
test
int
add
add
and
or
enter
cmpsb
cld
jno
mov
cmp
mov
sbb
cmp
sbb
ss
into
stos
ljmp
push
add
mov
add
in
adc
lret
mov
lahf
ret
lea
int
inc
add
mov
or
mov
daa
lds
adc
jb
jbe
jno
ja
jnp
test
movsb
xchg
hlt
jae
or
mov
test
pop
push
mov
mov
fadd
add
mov
imul
ret
cmp
push
std
mov
add
push
adc
add
ret
jp
pop
or
iret
pop
jge
jbe
xchg
scas
lods
repnz
mov
inc
add
add
sbb
mov
inc
add
xchg
addb
and
push
loope
sti
sti
sbb
test
shll
mov
jg
and
push
insb
jmp
inc
add
ret
jge
les
fdivrp
cmp
gs
icebp
push
scas
sbb
pop
lret
adc
repz
add
loop
addb
pop
mov
sbb
and
dec
addb
mov
outsb
vcvtss2si
js
add
outsl
test
bnd
mov
add
in
enter
lock
jbe
bound
scas
mov
pop
fwait
nop
dec
cld
jecxz
cmp
nop
loope
stos
jne
and
sub
adc
jl
insb
dec
mov
add
icebp
prefetchw
mov
lea
sub
xor
mov
test
mov
xor
sbb
sub
fsubl
cmp
lea
popf
push
cmp
inc
add
add
addb
pushf
cmpsb
xor
xor
or
mov
and
shll
xchg
popa
jne
mov
adc
adc
jge
xchg
les
fwait
push
stos
jne
insl
xchg
cmpsl
adc
jp
dec
cmc
or
pop
push
push
sub
inc
ds
cmp
faddl
ds
push
mov
je
mov
insb
es
pop
dec
mov
pop
nop
cwtl
iret
push
add
adc
je
mov
dec
push
insl
pop
movb
add
ss
sub
add
gs
or
sbb
addr16
xchg
lahf
xchg
loope
xchg
fwait
mov
lahf
mov
sbb
arpl
int3
jge
les
lcall
bound
jmp
adc
add
dec
mov
xchg
out
jge
test
jmp
add
das
xchg
pop
push
inc
push
add
scas
mov
mov
push
imul
xor
call
call
mov
add
jg
mov
je
push
cmp
mov
jg
repz
stos
mov
pop
cmpsb
shll
mov
inc
add
pop
bound
frstor
jno
mov
sti
ljmp
pop
mov
imul
jg
cmp
sub
add
jp
je
scas
mov
pushf
insl
mov
push
insb
mov
add
mov
xchg
enter
inc
add
push
inc
add
or
add
xchg
idivb
mov
out
popf
sub
mov
add
out
inc
add
mov
add
xlat
sub
rcrl
mov
cltd
fbld
out
xchg
sub
rolb
inc
xchg
sbb
push
xchg
rolb
xor
lods
mov
jno
ljmp
adc
outsb
dec
idiv
incb
add
mulb
outsl
push
sub
xchg
movsb
xchg
test
add
add
push
adc
and
and
add
int
ficompl
xor
scas
fmul
mov
jns
push
jbe
lods
and
inc
add
aam
pop
mov
cmp
movsb
aam
add
sbb
add
dec
mov
xorps
jge
add
outsl
xchg
sahf
cld
cli
push
add
out
sbb
testb
inc
xchg
push
hlt
push
leave
std
inc
add
movsl
mov
mov
xchg
pop
cmp
push
das
gs
mul
lcall
arpl
arpl
jnp
or
pop
push
or
mov
gs
pop
fnsave
push
aam
lock
ds
cld
aas
cmp
fsubrs
andl
add
sbbl
sub
jmp
push
imul
sbb
add
mov
daa
jo
testb
ret
out
lcall
imul
xor
repz
mov
lods
in
mov
cli
cmp
mov
fildl
addb
xor
jl
add
jo
xchg
call
into
mov
rorl
mov
push
inc
mov
sbb
out
xor
sbb
out
cmp
cmpsl
push
aad
out
rcrl
cwtl
int3
fdivs
jbe
mov
rolb
sub
icebp
pop
orl
imul
test
xor
jmp
shrl
ss
mov
dec
and
inc
add
and
add
adc
mov
add
add
ljmp
loop
jg
push
pop
or
mov
rorb
mov
lea
jl
xchg
lods
mov
add
add
add
cmp
xchg
sub
shll
fstl
push
cmp
ljmp
out
lahf
sub
fisubs
pop
pop
sub
sahf
push
aas
popa
push
and
dec
mov
or
iret
jle
add
daa
and
push
add
mov
add
jg
ds
fstp
ret
insl
leave
fildll
cmp
xchg
nop
in
cmp
fdivp
xchg
xor
push
add
ljmp
add
mov
adc
addr16
add
ja
inc
cmp
cld
pop
sbb
movsl
mov
sbb
dec
clc
pop
mov
mov
sub
rolb
add
cmp
adc
or
je
sub
push
xchg
mov
loope
sbb
pop
addb
adc
hlt
and
jno
cli
pushf
xchg
push
enter
mov
movsl
inc
add
cmp
rolb
lods
sarl
add
out
xor
fstpt
xchg
xlat
pop
vmwrite
dec
cmp
aas
pop
mov
inc
add
enter
add
or
cmp
notl
fistl
mov
fisubl
push
push
mov
inc
add
sbb
inc
add
jno
insb
icebp
out
add
mov
mov
cmp
dec
jae
stos
dec
mov
lock
outsl
mov
push
rolb
add
add
cmp
jmp
xchg
jo
xchg
pop
adc
jb
lret
fcmovnb
sbb
inc
add
mov
pop
cli
out
xor
pop
xchg
pop
xchg
adc
add
dec
pop
movsb
push
inc
into
mov
push
pop
mov
hlt
dec
jb
je
scas
je
lods
lahf
xchg
lahf
push
aad
stos
subps
add
movsb
stos
push
or
lods
xlat
repnz
out
pop
or
add
push
xor
sbb
xchg
adc
jle
or
jns
adc
add
adc
ss
jae
mov
js
add
inc
hlt
xchg
pop
mov
add
xchg
fcoms
mov
lahf
out
cmp
dec
inc
add
cmp
add
cmp
sahf
insb
ficompl
mov
lods
ja
jg
icebp
testl
pop
arpl
jnp
sahf
dec
imul
xor
cmp
lds
insb
add
aas
jmp
xor
and
pushl
mov
mov
dec
out
sbb
enter
loop
push
pop
imul
jne
xchg
pop
push
aad
add
xor
repnz
sti
xor
add
dec
stc
inc
addr16
jl
int
add
inc
add
pop
addb
xor
add
add
scas
inc
add
movsb
shll
mov
leave
cmpsl
add
mov
movb
mov
add
rolb
aaa
add
mov
or
out
xor
cmp
hlt
jp
pop
in
cs
negl
scas
mov
cmc
hlt
adc
jnp
sahf
mov
inc
add
xchg
xor
cmc
xor
stos
cmp
stos
sbb
jae
and
jbe
add
clc
sbbl
scas
fsubrp
cmpsl
dec
sbb
xchg
jbe
mov
fstpt
ret
or
jl
pop
jecxz
sbb
adc
lds
int
bound
push
mov
xchg
push
addr16
push
inc
add
rolb
fnstcw
stos
daa
sub
repnz
add
sbb
das
pop
cpuid
arpl
mov
nop
das
and
inc
js
aaa
and
in
aad
lcall
xor
add
cmpsb
ss
lods
cmpsl
or
cmp
mov
call
pop
hlt
or
imul
sub
and
xchg
mov
add
out
roll
loop
mov
scas
cltd
int
jo
xchg
cwtl
daa
orl
fldenv
pushf
lock
out
push
pop
idivl
movsl
cmc
add
jp
xchg
dec
test
cmp
negb
lds
add
dec
in
cmovae
push
add
les
stos
and
jmp
das
insb
sub
arpl
adc
add
add
in
fistpll
mov
add
cs
jnp
insb
es
mov
xchg
test
jle
mov
test
outsb
dec
jo
repz
add
inc
add
sbb
std
inc
out
loope
xor
jnp
fs
es
cmp
add
mov
cmp
mov
mov
pop
lcall
xchg
or
mov
clc
pop
insl
popa
les
or
jne
push
aam
nop
ljmp
xor
add
rolb
cmp
dec
adc
lahf
jge
adc
push
sub
mov
in
xchg
pop
ljmp
jp
stos
sbb
or
test
and
push
xchg
jp
cli
dec
cmp
pop
adc
jnp
push
ss
addr16
mov
push
push
ja
xor
into
or
add
add
movsl
es
xchg
test
pop
dec
icebp
dec
push
add
cltd
mov
push
in
add
int3
xor
mov
push
mov
ss
jmp
test
cmpsb
loopne
and
hlt
out
pop
leave
imul
jge
inc
fbld
cmpsb
dec
mov
and
jg
mov
add
add
leave
inc
ja
add
fisubrs
add
dec
test
jecxz
push
cmp
add
adc
aaa
scas
rorb
or
xor
pop
fwait
clc
repz
add
lods
je
dec
imul
insl
pop
not
imul
add
cmp
popa
lret
mov
fsubrl
push
sub
call
sub
rolb
dec
insl
adcl
shlb
add
int3
cmc
jle
arpl
sub
es
xchg
outsb
lods
sub
daa
adc
sbb
arpl
xchg
test
les
xor
add
xchg
cmp
push
les
pop
or
xchg
inc
fldt
in
mov
mov
add
dec
push
push
outsl
jle
shll
push
push
sbb
mov
mov
imul
call
mov
jmp
lret
mov
xchg
pop
cmp
xchg
std
mov
mov
in
cmp
push
and
dec
sub
add
jmp
jg
mov
xchg
mov
xchg
stos
call
mov
xchg
pop
cmp
fiaddl
sbb
add
daa
mov
stos
mov
and
sbb
add
mov
cmpsb
or
sub
pusha
add
xlat
adc
jno
xor
jne
dec
mov
out
cld
subl
ficomps
xor
add
cwtl
cld
int
inc
or
push
push
in
test
stc
mov
sahf
fstpl
xor
pop
arpl
add
daa
xchg
aas
and
pop
es
cmpsb
xor
adc
jb
push
mov
in
loopne
add
nop
fidivrl
pop
mov
sub
cmpsb
mov
lds
int3
out
inc
push
jb
or
pop
sub
sbb
add
outsl
bound
pop
out
popf
mov
or
mov
mov
dec
imul
cmpsb
aaa
push
into
ret
pop
mov
dec
aaa
imul
pop
outsl
mov
mov
adc
jp
add
push
mov
adc
lret
mov
setp
push
pop
xchg
push
ja
mov
gs
dec
les
sub
mov
inc
sub
test
push
fdivrl
js
add
jns
stos
push
jae
pop
xor
mov
je
fcoml
and
ljmp
or
xchg
pop
pop
adc
mov
jle
or
std
add
leave
insl
fdivrl
inc
int3
mov
sbb
push
add
jmp
add
ds
inc
add
mov
lcall
stos
push
sbb
xor
cmp
and
push
in
imul
inc
add
xlat
fwait
pop
dec
adc
pop
call
push
sub
fs
pushf
movsl
sub
push
stos
out
xor
xchg
xor
add
xchg
sub
cwtl
push
add
mov
add
or
addb
js
jmp
les
fs
ret
or
or
pop
push
add
add
js
xor
or
loope
lcall
mov
mov
jns
js
add
in
jb
inc
add
aad
add
stc
lock
outsb
and
mov
arpl
mov
add
aad
dec
int
jmp
movsl
cmpsb
addb
mov
xchg
loop
aad
mov
push
loop
cmp
in
mov
aaa
cmp
dec
xor
enter
pop
jno
dec
sbb
sub
fstpl
mov
test
movsb
out
sahf
xor
stc
es
cmp
xor
aad
jecxz
add
daa
inc
dec
cmp
daa
fwait
ret
std
rcl
sub
popf
inc
add
lds
cmc
dec
pop
cmp
sub
repz
or
add
or
jge
push
xchg
daa
push
adc
nop
mov
xchg
shl
cmp
push
sub
and
mov
sbb
adc
rolb
adc
push
mov
inc
rcll
leave
stc
fwait
adc
pop
jne
xor
roll
add
mov
iret
lret
adc
adc
push
addb
lcall
std
dec
loope
adc
rorl
insb
les
lds
jnp
sbb
xor
mov
pushf
mov
inc
add
fisubrs
add
and
fistl
cli
sar
xor
xor
mov
imulb
into
idivb
outsl
out
inc
add
mov
cmp
push
mov
cwtl
push
xchg
add
mov
add
and
push
in
test
mov
mov
rolb
add
cmpsb
and
add
xchg
aaa
adc
adc
adc
dec
lret
sub
lcall
dec
pop
dec
and
jecxz
movb
cs
dec
lret
lahf
xchg
dec
mov
imulb
fimull
aas
mov
mov
daa
gs
xlat
ret
cmpsl
adc
pop
cwtl
jmp
stos
dec
cmc
in
leave
iret
mov
add
xchg
and
add
jp
testl
out
sub
pop
add
mov
lods
push
push
push
enter
sub
shll
mov
adc
aaa
loop
xchg
sub
lods
in
lcallw
mov
push
or
ds
lret
and
into
testl
inc
dec
xchg
lds
mov
sti
sbb
hlt
jmp
or
mov
divb
addb
pop
je
lock
inc
add
xor
cwtl
addb
cmp
xchg
in
add
cmpsl
inc
add
xchg
xor
jl
inc
sub
mov
shll
add
sub
add
and
fs
mov
xchg
adc
dec
ret
jbe
daa
push
pop
stos
cmpsb
push
nop
aas
inc
add
cli
popa
or
loop
shrb
addb
add
add
aaa
fcompl
xor
adc
call
out
aaa
out
lea
lds
aad
movsl
stos
aad
addl
ljmp
js
add
addb
or
cmc
mov
repnz
ret
jge
jns
rcll
movsb
mov
cli
movswl
xor
add
xor
cmpsl
das
aas
std
push
adc
dec
add
xor
fisttps
testb
push
inc
add
lock
mov
icebp
test
jmp
cld
xchg
shrl
add
cmpsb
mov
daa
pop
jl
inc
jbe
mov
cli
lods
pop
ret
out
lds
dec
and
je
cmpl
dec
dec
dec
jle
and
jmp
insb
dec
push
call
dec
and
fidivrl
out
push
sbb
repnz
fstpl
sbb
jo
add
add
cmp
mov
mov
clc
jl
in
roll
add
add
inc
add
mov
dec
outsb
ss
add
add
insb
and
xchg
or
in
pop
repz
add
jbe
push
cmp
addr16
ret
cmpsb
jg
lds
xor
add
pusha
add
test
pop
mov
dec
gs
add
pop
shlb
add
xor
add
adc
pushf
xchg
lret
cmpsb
cs
aaa
jmp
cmpsl
or
stc
push
fdivr
leave
test
inc
add
enter
stos
iret
jecxz
fwait
cli
nop
sti
add
nop
call
sub
pop
inc
add
jle
dec
arpl
cld
add
add
xor
cld
outsl
mov
into
lds
add
movsb
repnz
shll
nop
push
cld
xchg
hlt
fwait
cmp
inc
add
lcall
addb
aad
decl
adc
movsl
mov
pop
sub
lret
insb
pop
lock
call
pop
jl
push
push
bound
loop
ds
mov
lcall
add
pop
jo
sub
popa
imul
or
inc
adc
or
mov
add
test
mov
add
adc
push
add
jbe
imul
push
add
push
sbb
lock
jge
push
mov
xchg
mov
mov
test
fsubl
xor
add
test
stc
inc
stos
push
or
add
shlb
and
loop
rcr
sti
hlt
inc
add
jo
fiaddl
jg
inc
xchg
fsts
movb
add
mov
dec
mov
sbb
sub
test
arpl
xlat
adc
push
mov
mov
add
and
push
lcall
or
inc
sbb
pop
adc
push
pop
mov
mov
add
sub
ds
pushl
repnz
cmp
bound
xlat
adc
test
add
xor
or
iret
xchg
lock
add
or
cmc
pop
push
pop
out
test
mov
mov
arpl
and
insb
jge
add
daa
push
push
mov
sbb
mov
inc
cld
rol
push
fistps
shl
add
xor
test
add
imul
jecxz
inc
add
push
push
data16
dec
gs
in
mov
sbb
inc
insl
popa
les
into
int
push
push
jl
addb
dec
rorb
jl
hlt
mull
imul
in
push
inc
add
lahf
xchg
mov
mov
xchg
xlat
or
gs
imul
sub
mov
sbb
outsb
lea
adc
mov
hlt
jns
out
add
aas
and
push
or
ja
adc
stc
adc
cmp
inc
add
jg
addb
xor
mov
xchg
loope
cltd
dec
fmull
jmp
lahf
mov
add
xchg
testb
pop
stos
jl
addb
pop
test
repnz
jp
mov
xor
xor
mov
fistl
and
pop
push
add
push
push
add
push
cs
mov
dec
pop
cwtl
xchg
in
push
mov
add
jb
and
rcrl
dec
ret
ficoms
test
int3
stc
js
add
loopne
xchg
jbe
mov
popa
dec
sub
jae
sub
loopne
cmpsb
or
add
mov
lds
mov
dec
pop
jo
add
pop
rolb
ret
out
mov
bound
and
dec
inc
mov
add
xchg
pop
adc
push
mov
sti
cmp
decb
mov
nop
sbb
mov
les
jle
add
add
in
or
cmpsl
jmp
ja
sbb
jmp
outsb
popa
push
sarb
or
scas
call
pop
adc
cmp
stos
pushf
pop
pop
outsl
call
addb
xchg
xor
jb
imul
mov
sbb
jae
in
dec
iret
sti
fstpt
inc
add
aas
in
and
add
push
stc
adc
inc
add
sbb
sub
add
outsl
sub
in
test
test
add
mov
add
sahf
adc
mov
add
es
push
mov
xlat
mov
imul
out
cmp
jno
pop
dec
pop
pop
pop
mov
add
pop
out
js
and
add
jmp
data16
dec
ror
sub
popa
in
fsubl
fiaddl
pop
es
pop
sub
and
add
inc
add
add
and
sub
outsb
out
imull
lret
add
xor
pop
in
add
mov
or
jne
pusha
add
sbb
adc
cmp
mov
add
xchg
adc
jl
add
les
clc
inc
add
inc
add
cmp
jge
add
xchg
fnstenv
ljmp
mov
xor
in
pop
xchg
js
test
add
add
loop
aaa
das
into
jno
clc
ljmp
add
int
lock
jns
mov
dec
test
dec
jno
jp
add
mov
es
jb
dec
int3
adc
hlt
mov
aaa
pop
imul
push
pop
les
fidivl
xchg
push
mov
cmp
outsb
ret
pop
xlat
mov
dec
ds
sub
jp
push
insl
int3
mov
rolb
shlb
adc
or
and
or
inc
add
cmp
pop
inc
cli
addb
mov
sub
add
add
les
push
fadds
push
sbb
add
cmp
jae
test
jbe
push
std
movsl
call
test
jge,pt
std
fadds
mov
jle
jle
out
ja
jae
jle
fbstp
shlb
xchg
inc
add
xchg
fistl
jns
xor
in
ret
and
sbb
cld
xchg
add
add
or
xchg
cltd
xchg
int3
adc
add
movsl
mov
shl
jnp
add
xor
mov
pop
movsb
jne
cmp
inc
add
je
test
aad
mov
and
icebp
mov
mov
aad
push
fs
aam
cmp
jmp
iret
inc
add
addb
adc
pop
xchg
xlat
imul
loopne
das
jecxz
ja
cmc
mov
pop
add
add
adc
int
aam
xor
mov
mov
add
idivl
add
int
jno
sub
cmp
icebp
mov
add
xor
lcall
mov
outsl
clc
sub
lea
sti
ds
or
into
dec
sbb
pop
add
jle
push
je,pt
lret
cmp
xor
pop
add
pop
or
xor
mov
hlt
push
int
out
add
jecxz
mov
iret
loop
mov
sbb
les
push
repnz
popa
jae
push
push
lahf
bound
pop
sbb
test
adc
insl
mov
ds
jp
cwtl
repnz
pop
daa
inc
add
sub
ja
inc
loopne
out
push
jno
xchg
in
aaa
and
clc
sub
add
ljmp
push
and
push
cwtl
sub
inc
add
imul
cmp
lods
repz
cmpsl
push
sbb
mov
jle
bound
add
mov
add
jmp
daa
insb
aam
pop
xlat
lret
es
les
loop
jb
adc
out
mov
mov
and
xor
add
or
push
pop
and
stc
inc
sbb
out
in
jo
push
add
push
push
jae
mov
mov
and
push
pusha
add
mov
push
xchg
cli
sub
iret
and
mov
iret
je
fxch
loopne
stos
repz
imul
stos
testb
stos
inc
add
sub
push
mov
icebp
sub
mov
loopne
movb
xchg
xor
jg
stos
push
lret
mov
jbe
out
insb
out
mov
mov
inc
add
mov
scas
aas
ds
add
xor
inc
sti
adc
mov
add
movb
shl
hlt
fstps
or
jno
out
sub
and
scas
outsb
mov
add
clc
xor
mov
sti
mov
jae
jbe
loopne
pop
cmc
leave
add
mov
ljmp
imul
sbb
je
or
add
sbb
adc
jge
pop
les
icebp
rorl
pop
xor
gs
add
push
imul
add
in
scas
adc
out
mov
mov
aaa
inc
add
mov
push
repz
push
out
fldl
das
in
and
xchg
mov
pop
nop
xchg
or
mov
add
outsb
in
adc
adc
sti
mov
add
scas
or
mov
xchg
xor
sbb
cltd
test
das
mov
jle
mov
xchg
shll
push
test
cmp
je
stos
xchg
ret
push
adc
inc
add
mov
shr
push
add
pop
cmpl
dec
pop
mov
testb
xchg
push
xchg
inc
int
and
popf
pop
mov
jg
adc
cmc
mov
dec
int3
insb
fstps
xlat
popa
aaa
push
rolb
sub
ss
out
or
add
lcall
ss
mov
gs
scas
ja
lods
idiv
sbb
pop
int3
je
add
lret
ret
arpl
jmp
ja
out
mov
xchg
mov
stc
xchg
cmp
push
mov
mov
and
xor
dec
imul
ds
and
bswap
pop
lock
in
cltd
inc
add
subl
add
call
jle
mov
jae
adcl
jmp
or
dec
in
mov
xchg
lcall
mov
sbb
cld
mov
add
daa
xor
add
cmp
dec
mov
shll
xor
cmp
sub
dec
xchg
inc
add
push
mov
inc
add
adc
sub
cltd
fsubrp
mov
cmp
mov
and
sub
test
lcall
sub
mov
insb
pop
sbb
add
out
clc
dec
jp
add
push
out
xor
fcmove
add
sti
loope
ds
pop
xchg
push
icebp
mov
jmp
stc
sbb
sahf
fadd
arpl
insl
push
add
mov
rep
inc
insl
movsl
stos
dec
or
lret
test
xchg
jecxz
inc
add
adc
xchg
inc
es
xchg
push
std
outsl
sub
data16
pop
repnz
out
jmp
sub
sub
mov
fsubr
stos
sar
lods
xor
inc
cmp
pop
jg
jl
mov
sub
inc
bound
pop
inc
cmpsl
stos
and
mov
mov
imul
mov
cmp
idivl
and
adc
out
in
xorl
xchg
xlat
mov
add
xchg
jecxz
iret
mov
jg
add
rolb
sar
fcmovbe
adc
push
add
xlat
imul
lahf
cli
les
cmp
ja
shl
rcll
pop
adc
insl
mov
push
and
sub
add
jbe
add
adc
xchg
push
rcll
sbbl
insl
int3
addb
repz
cmpsb
jns
inc
or
ss
add
jmp
bound
cmp
jne
out
jg
mov
xchg
int
add
pusha
add
cmp
xor
lcall
or
enter
je
out
inc
movsb
mov
dec
inc
call
add
push
pop
mov
jo
jge
add
sub
sbb
or
fdivs
add
xchg
aad
adc
push
push
add
adc
movsb
jecxz
sti
rolb
repnz
out
les
xchg
loop
icebp
shll
and
mov
loopne
shrb
jecxz
int3
nop
fs
push
nop
fsubl
push
mov
pusha
add
jns
movsb
arpl
movb
add
pop
dec
push
adc
mov
jg
xor
mov
mov
mov
sarl
cmp
test
lods
push
shlb
add
add
xor
add
pop
push
and
mov
mov
lock
fsubrl
arpl
adc
hlt
aad
add
lahf
add
into
jnp
jne
pusha
add
fcoms
push
arpl
test
mov
sbb
xchg
pop
dec
mov
nop
pop
inc
add
cmp
mov
xchg
ret
sub
or
jno
fmul
xchg
xchg
out
filds
fcompl
sub
pop
sbb
xchg
and
imull
mov
xor
int
adc
out
shrl
xor
add
icebp
sahf
mov
pop
lahf
dec
lret
add
add
mov
fs
in
aad
es
add
shll
push
add
decl
xchg
jnp
pop
push
mov
shrl
add
jg
jmp
in
in
int
call
jl
xchg
xor
pop
pop
or
lcall
mov
out
jmp
int3
addb
std
scas
hlt
arpl
xor
cltd
mov
jle
out
cmp
sahf
and
add
mulb
gs
int
add
pop
jg
aad
addb
les
xchg
cmp
jbe
stos
ffreep
adc
bnd
push
aas
aas
mov
stos
ds
push
mov
call
pop
push
and
sahf
pushl
sbb
fcos
fildl
cmp
inc
add
add
std
push
lods
sub
aam
mov
push
jmpw
cmp
sbb
scas
mov
jg
aad
inc
add
push
add
cmpsl
test
jb
pop
popf
fdiv
rolb
das
mov
push
decl
xor
pop
addb
add
mov
jmp
pusha
add
add
add
loopne
lock
stos
insl
imul
xchg
push
out
inc
fsubrp
addb
mov
mov
pop
inc
adc
sarl
rorl
es
jge
dec
sbb
pop
jmp
jnp
mov
mov
stos
sti
daa
jle
adc
sub
add
pop
and
jle
addb
mov
mov
add
add
sbb
out
jnp
fwait
cmp
or
cmp
jbe
adc
js
inc
add
adc
push
fdivl
fisubs
add
std
bound
movsl
cmp
sbb
mov
cmp
std
addr16
hlt
pop
sub
pop
rolb
push
add
int3
cwtl
dec
rcll
popf
insl
jle
ret
aad
shll
mov
add
addb
je
and
imul
add
push
enter
daa
or
cmp
pop
sbb
jne
stc
jne
add
test
dec
les
xchg
mov
mov
pop
or
sub
and
add
lcall
inc
cmp
add
add
jb
or
add
add
test
mov
aad
mov
mov
std
mov
mov
jge
movsw
lret
cmp
inc
add
fs
mov
es
add
mov
mov
dec
push
adc
int
adc
cs
xchg
imul
jg
xchg
add
fstpl
loopne
push
pop
scas
daa
jle
jns
push
xchg
into
cld
cmpsb
mov
lret
add
or
sahf
jg
iret
js
and
shl
ret
inc
add
outsb
push
inc
add
add
sub
mov
xchg
loopne
and
in
cmp
mov
jnp
jmp
jns
jg
in
adc
jl
xchg
mov
inc
cli
xor
test
push
insl
cld
insl
idivb
dec
xchg
add
fwait
mov
jge
adcl
push
das
push
xchg
stos
inc
add
movl
mov
xchg
sub
pop
adcl
roll
aam
fmull
popa
sbb
popa
pop
or
jecxz
jle
cmp
popf
dec
cmp
mov
push
je
fs
mov
int
out
mov
mov
gs
andl
add
cmc
cmc
mov
mov
push
aaa
cli
test
pop
mov
xor
pushf
inc
loope
data16
aad
adc
and
pop
cs
cltd
lcall
rcrl
scas
daa
loop
sub
or
stc
fadds
repz
ljmp
mov
adc
mov
lods
lea
jecxz
lea
fiaddl
add
sahf
mov
imul
cld
repnz
dec
add
add
inc
add
add
jns
sbb
fdivrs
inc
jo
add
cmp
xor
mov
jb
fs
add
add
and
out
add
scas
mov
and
add
repz
xor
test
and
sti
adc
fcomp
mov
fwait
rcrl
mov
int3
lret
es
fdivl
out
or
pop
inc
add
jle
or
push
add
mov
pusha
add
pop
sahf
jbe
mov
ret
arpl
mov
push
fistps
out
adc
xchg
jg
add
pop
sub
adc
in
cwtl
clc
pop
lods
ja
add
jne
mov
or
adc
adc
addb
addb
lcall
mov
and
scas
popf
pop
aad
dec
jg
mov
pop
mov
inc
add
xlat
cltd
cmp
push
add
push
stos
add
adc
push
lods
ffreep
jne
dec
sub
push
pop
addl
push
mov
xor
xlat
rolb
in
add
outsb
pop
roll
insl
dec
add
dec
inc
add
loope
hlt
test
add
fistpll
add
leave
in
popf
or
push
mov
imul
push
inc
add
outsl
movb
jns
movb
call
rolb
test
jne
or
mov
dec
imul
in
sti
pop
ret
out
out
xor
push
cmp
sbb
xor
pop
mov
xchg
sub
rcrb
jbe
cmp
jge
sbb
or
imul
cwtl
or
ret
mov
stc
repnz
cmp
repnz
out
js
dec
pusha
add
or
fldcw
mov
popl
aad
cmpsb
outsb
mov
add
cmp
dec
push
sbb
pop
mov
outsb
aad
in
pop
adc
inc
add
add
scas
iret
adc
pop
mov
add
sbb
sbb
jmp
addb
pop
popf
lea
and
jp
lods
mov
fdivrl
sahf
pop
mov
jmp
out
push
cmp
add
dec
add
aas
mov
adc
popl
ficoms
mov
jo
stos
inc
add
inc
add
fimull
out
or
jae
or
loopw
je
cmp
lock
sarb
and
xchg
mov
rolb
fwait
jnp
das
xchg
mov
js
mov
jecxz
negb
test
mov
scas
mov
pop
aam
test
xor
jb
pop
fdiv
pop
pop
xor
add
push
cmc
out
push
mov
sub
xchg
adc
pop
outsl
aaa
cmpsl
mov
push
sbb
aad
icebp
jne
pushf
cli
movsb
pusha
add
imul
out
in
fisubrs
out
test
sbb
jns
xlat
mov
add
inc
add
or
sbb
add
jle
push
push
aad
mov
or
test
div
xchg
in
popa
sub
insb
out
push
jge
scas
pop
data16
mov
cld
outsl
push
es
sub
test
add
add
and
js
dec
test
xor
add
roll
cmp
je
add
adc
push
shrl
repz
pop
sub
xor
mov
data16
outsb
push
xorl
movb
add
add
mov
jle
mov
add
jmp
ljmp
in
sbbl
add
or
pop
or
pop
and
hlt
cmp
fildll
movsb
jbe
add
ffreep
add
cltd
sbb
add
add
je
mov
leave
leave
insb
fsts
fists
mov
sbb
in
jge
or
pop
sub
jnp
add
jecxz
dec
add
sbb
add
add
mov
pushf
push
xchg
and
je
movsb
push
jg
xor
out
lahf
lahf
stos
xchg
aam
mov
out
std
fnstenv
add
and
rolb
cld
add
jno
add
add
pop
cltd
push
add
jl
add
push
inc
fs
cltd
mov
imul
add
pop
mov
add
jl
add
or
adc
or
ljmp
sbb
aaa
je
in
mov
cs
sti
gs
mov
in
fdivs
mov
push
sub
add
ret
cmp
dec
push
insl
mov
and
xchg
sarb
push
sti
in
into
mov
add
stc
jle
mov
fdiv
rolb
pop
psrad
lcall
sahf
jns
in
pop
adc
les
sub
out
xchg
mov
xchg
cli
fnsave
cmpsl
pop
mov
cmpsb
and
mov
add
clc
in
xor
mov
pop
sub
in
xor
pop
add
in
xchg
addr16
xchg
cmp
xor
pop
testl
les
xlat
pop
mov
cmp
cmp
add
jae
add
movl
int
push
lret
cld
std
cltd
cmp
aam
dec
hlt
mov
add
pop
pop
mov
cmpsb
and
popw
rorb
sahf
sub
cmc
pop
pop
xor
add
xor
mov
and
or
fdivrs
rolb
xchg
enter
aas
lds
xor
add
les
fbld
adc
xchg
inc
mov
cmpl
sub
xchg
inc
add
jb
and
aad
xor
imulb
sahf
jae
add
or
and
mov
stos
jno
push
cltd
popa
mov
add
movb
popf
sbb
adc
fs
pop
add
aas
lahf
and
pop
mov
xchg
jb
push
data16
stos
dec
adc
mov
ror
add
out
pop
sar
ret
sub
add
sub
xchg
add
fmull
in
fstpl
pushf
dec
das
roll
push
mov
push
test
xor
pop
pop
int
jo
in
lret
repnz
es
mov
jns
push
xchg
and
inc
add
cmp
fbstp
xchg
mov
xor
fidivl
int3
fsts
push
lods
test
hlt
mov
mov
pop
adc
or
sub
ljmp
inc
in
fldcw
add
pop
pop
push
sbb
mov
cmp
jmp
mov
dec
loope
mov
xchg
popa
push
sti
lods
test
fdivrl
cmp
lods
cs
pushf
jo
loope
cmp
bound
push
add
rolb
add
in
adc
dec
cltd
in
cli
fsubl
add
sbb
ss
sbb
cmpsl
push
or
xlat
push
dec
dec
sbbl
add
bound
jge
add
pop
sub
mov
cli
or
pushf
int
add
cld
push
push
mov
addr16
sbb
add
xlat
rcl
btrl
addb
add
add
add
cmp
add
push
cmp
add
dec
sub
add
movsb
out
imull
mov
aam
shr
rcrb
pop
and
add
pop
shll
mov
loope
xchg
inc
movb
lret
and
pop
cs
add
sti
std
cmp
data16
mov
aaa
cmpsb
adc
movsl
les
fildll
fwait
lods
add
xor
pop
xchg
stc
cltd
pop
adc
movsb
inc
sti
xchg
xor
int
xor
fwait
movsl
jbe
ja
shll
lret
sbb
xchg
mov
fcom
pop
movsl
cmp
jg
clc
add
out
mov
mov
mov
ja
out
push
jbe
adc
jnp
push
add
add
push
stos
lahf
mov
mov
push
test
inc
add
xchg
add
movsb
cmpsb
insb
xor
aam
add
stos
and
mov
shll
inc
jae
xor
add
add
add
xlat
sub
fcoml
cli
enter
sbb
test
cmpsl
or
cltd
lock
pop
icebp
cmp
hlt
loop
roll
lea
jmp
pusha
add
add
jbe
arpl
push
xchg
sbb
add
and
mov
test
sahf
insl
push
pop
xor
stos
mov
jns
mov
push
jmp
out
sub
stc
add
test
ds
cwtl
aaa
movsl
sub
shlb
xor
fcoml
xchg
in
or
jae
add
les
sarl
jbe
jge
add
xacquire
push
fucomp
arpl
push
ja
sub
enter
jecxz
add
loopne
xor
fsubr
pop
aas
lahf
div
stc
and
mov
or
pop
pop
loope
and
pushf
test
or
mov
jg
outsl
mov
arpl
push
and
add
cltd
cmp
mov
fsubs
mov
jno
push
mov
shlb
add
test
leave
enter
fdivrl
lret
push
cmpsb
bound
dec
mov
add
addb
add
cmp
push
js
mov
or
jae
sbb
cmc
push
dec
fldcw
sbb
push
cmp
xlat
nop
push
pop
sub
imul
leave
mov
mov
jle
icebp
mov
add
subl
fs
sbb
mov
cmp
fwait
in
loop
call
mov
adc
ds
or
scas
shr
out
inc
mov
ljmp
enter
dec
ret
cmp
out
jo
in
testl
jp
cmp
mov
push
inc
add
insb
arpl
cmc
das
das
inc
dec
jmp
add
push
mov
xchg
insb
cwtl
jb
lds
push
inc
sub
and
add
fdivs
inc
leave
mov
stc
jb
stos
xor
shll
into
les
adc
imul
sti
test
fadd
jp
mov
jbe
int3
mov
cmp
inc
sub
inc
outsl
mov
add
pop
jge
shrl
lods
in
push
push
fistpll
pop
sub
mov
sbb
pusha
add
movb
push
pop
lea
pop
push
test
jbe
xor
outsl
movsb
std
in
insb
lods
jmp
shll
pop
repnz
cmpsb
sbb
mov
add
mov
sub
ficomps
je
sahf
mov
leave
faddp
dec
pop
cmpsl
dec
aas
mov
fmull
push
mov
negb
pop
cmp
xlat
addb
add
repnz
stos
mov
lret
push
push
div
lods
dec
mov
inc
jbe
xchg
insl
cmp
push
cli
mov
xchg
mov
popf
hlt
stos
adc
add
add
les
into
xor
jmp
inc
add
push
cmp
fnstcw
icebp
mov
sbb
cld
xchg
fldl
popa
movnti
add
rcrl
add
cmpsb
arpl
jge
xor
lret
add
add
jo
sbb
inc
mov
mov
pop
pop
test
frstor
add
sbb
in
loopne
add
icebp
push
jp
jecxz
xor
mov
sub
jle
fstp
push
xchg
lret
clc
add
inc
fidivrl
pop
dec
daa
mov
xchg
push
pop
dec
out
dec
mov
imul
dec
mov
daa
addb
push
cmp
xchg
cmp
push
xchg
dec
cmpsb
cmpsl
bound
rolb
fstl
pop
stos
pop
inc
or
jae
adc
xchg
xchg
inc
add
mov
xchg
loope
rolb
loopne
rolb
add
xlat
into
xor
ret
dec
dec
mov
pushf
mov
push
xchg
popa
int3
lea
clc
ja
in
xor
sub
cwtl
xor
shlb
in
mov
insb
das
and
cmp
jnp
addb
popa
mov
xchg
ror
pop
add
push
pop
mov
xor
les
mov
je
adc
add
push
push
adc
mov
les
lahf
lret
xchg
sub
add
mov
addb
je
ret
mov
ret
dec
or
add
mov
shlb
jl
fstpt
fwait
xor
xchg
loope
addb
mov
push
stos
and
enter
xchg
inc
push
leave
sub
lcall
data16
mov
cmp
inc
adc
xchg
inc
add
nop
int
dec
divb
xchg
cmp
add
bound
mov
mov
adc
ss
adc
fdivl
push
sti
and
sbb
test
jno
movsb
sbb
pusha
add
and
add
xchg
xor
mov
and
test
divl
in
pop
jns
fiaddl
add
add
das
add
cmp
inc
add
outsl
xor
mov
add
filds
xor
divl
stos
das
sub
ret
push
add
xor
and
jmp
pop
negl
mov
push
bnd
push
push
test
scas
cwtl
cmp
loop
xchg
sub
mov
jns
dec
nop
pushf
cmpsl
popa
lods
and
fstps
hlt
sbb
or
adc
cmp
add
xchg
add
dec
add
lret
add
mov
fiadds
pop
fildl
and
movsb
lcall
push
std
xor
imul
scas
out
insl
fstps
jne
test
pop
adc
bound
cmc
das
fcoml
aaa
inc
push
add
xchg
dec
and
dec
sub
xchg
or
push
cmp
xor
cmp
ror
sbb
pushl
divl
xor
cltd
sub
sbbl
sbb
sbb
add
movsl
mov
les
rorb
adc
sub
dec
cmp
pop
and
push
pop
pop
xor
mov
adc
push
sub
xor
pushf
fcoms
xchg
xchg
push
add
cs
lahf
push
scas
push
popf
and
pop
mov
or
xchg
imul
pop
movsb
stos
push
add
sbb
dec
ljmp
pop
sbb
inc
add
pushf
fs
mov
imul
ret
repz
movsb
shl
jecxz
inc
cmp
mov
mov
sub
push
cmpsl
push
adc
inc
add
arpl
and
and
outsb
jge
je
sbb
sub
pop
das
aad
and
add
sub
popa
inc
popa
mov
imul
xor
push
inc
add
iret
subl
pop
loopne
rcrb
rolb
int3
lahf
test
clc
dec
movsb
dec
das
push
xor
add
test
jmp
pusha
add
das
jae
sbb
sub
andl
pop
xchg
mov
clc
cltd
xor
add
pop
mov
mov
mov
dec
ss
mov
call
pop
je
push
mov
loope
iret
addb
xchg
les
xlat
sti
pusha
add
fisubs
subl
in
dec
imull
dec
lret
add
insl
sarl
iret
xor
and
and
xlat
in
push
xchg
repnz
leave
ret
in
pop
sti
mov
addr16
inc
add
lods
pop
bound
xchg
inc
scas
pop
mov
add
rclb
push
int
add
jp
jge
dec
rolb
lret
hlt
ss
add
call
imul
outsb
mov
mov
imul
xchg
mov
mov
test
mov
jo
xor
test
iret
mov
test
test
cmp
rorl
and
pop
pop
cmp
js
lock
test
test
xor
inc
movb
mov
sub
outsb
jne
add
shrl
ja
push
sbb
inc
add
rcrb
shrl
add
add
add
xor
or
dec
stos
ret
adc
aaa
cmp
jae
out
mov
jne
sti
xchg
jmp
mov
xlat
int3
in
fcomps
and
pop
outsl
sub
cmp
pop
shlb
add
pushf
testb
sub
addb
insl
xor
add
add
sub
aaa
insb
xchg
xchg
in
imull
rorb
sub
sub
rorb
bnd
xor
flds
gs
add
lcall
or
mov
cwtl
movsl
rolb
add
fildl
mov
mov
arpl
add
mov
setb
sub
add
add
pop
ret
add
mov
dec
inc
add
inc
add
inc
out
or
fdivrs
lods
movsl
mov
cwtl
fidivl
in
jmp
fsubr
rcl
xchg
jge
fwait
nop
les
incb
xor
or
cmp
das
push
push
xchg
add
mov
ljmp
loopne
in
adc
daa
int3
xchg
sbb
xor
push
out
mov
stos
das
adc
jge
pop
popa
push
add
push
inc
sahf
movsl
and
imul
sub
pop
push
out
shll
dec
mov
bnd
push
mov
lahf
roll
jl
cmp
xor
add
cmpsl
xchg
jnp
jae
rcr
pop
addb
sub
in
jg
mov
mov
and
pop
mov
push
out
add
jmp
jnp
pop
push
mov
sub
add
scas
loop
adc
dec
imul
jbe
cmp
mov
movsb
push
mov
or
cmp
fwait
xor
push
in
mov
rolb
add
movsl
dec
mov
ret
daa
and
dec
mov
or
push
cmp
dec
xchg
fs
push
jl
outsl
push
xchg
mov
mov
icebp
stos
lods
sbb
cld
jp
jmp
shrb
mov
jns
add
and
mov
push
lock
mov
ret
dec
or
xchg
das
xor
rcrb
test
pop
test
shrb
pop
or
and
pop
sti
clc
jbe
scas
push
inc
add
cmp
les
sub
add
loop
sub
cmp
les
lret
es
or
add
rolb
mov
cmpl
lcall
mov
jge
sub
jecxz
out
addb
pop
sti
mov
add
pop
cwtl
repnz
add
popa
push
rcll
cmp
js
sbb
mov
pop
rolb
pop
jne
add
in
xor
hlt
adc
aad
cmp
fistpl
inc
add
sbb
scas
cmp
js
pop
push
pushf
sbb
rolb
cmp
inc
lret
xchg
add
cmp
addb
mov
fdivs
mov
nop
cld
nop
jmp
roll
dec
nop
inc
adc
add
xor
stc
nop
es
jo
add
fs
mov
stc
nop
es
sbb
add
sbb
push
mov
xchg
ret
test
sbb
push
mov
xchg
ret
cmp
add
add
cld
nop
jmp
test
mov
faddl
rcl
sbb
add
mov
es
xchg
jne
stc
nop
es
dec
push
add
mov
xchg
ret
js
add
mov
jb
js
xor
xor
jbe
stc
nop
es
or
and
add
nop
cld
nop
jmp
add
lret
jl
mov
push
mov
xchg
ret
sbb
add
add
add
nop
es
push
add
decl
nop
cld
nop
jmp
xor
or
pushl
stc
nop
es
add
pop
test
add
inc
and
nop
es
cmp
or
mov
pop
into
pusha
push
mov
xchg
ret
sub
pop
sar
stc
nop
es
or
inc
cmp
call
stc
nop
es
aas
les
pop
xchg
pop
sub
stc
nop
es
or
add
lods
mov
stc
nop
es
roll
pop
les
xchg
adc
nop
es
js
or
xor
ret
stc
nop
es
add
add
add
and
stc
nop
es
add
lret
sub
mov
xchg
ret
add
js
fadd
add
out
push
push
mov
xchg
ret
mov
add
faddl
movsb
movb
mov
stc
nop
es
or
add
stc
jmp
nop
cld
nop
jmp
xor
aad
aad
fucomi
rorl
es
add
add
mov
add
nop
cld
nop
jmp
add
xor
test
or
add
nop
es
add
lods
lods
push
stc
nop
es
add
roll
lock
cmp
and
add
cmpw
stc
nop
es
xor
add
cmp
nop
es
les
xor
inc
add
add
nop
cld
nop
jmp
add
addps
push
mov
xchg
ret
add
cmp
jl
pop
push
stc
nop
es
add
filds
xchg
add
stc
nop
es
add
cmp
test
mov
push
mov
xchg
ret
or
add
jbe
xor
fistl
in
add
add
add
repnz
fcomps
outsl
dec
mov
push
mov
xchg
ret
and
add
rcl
xor
add
nop
es
add
pop
fidivs
add
nop
es
int3
cmp
add
lock
test
push
mov
xchg
ret
dec
inc
lock
mov
es
add
mov
lret
js
in
dec
xchg
stc
nop
es
push
add
add
add
mov
stc
nop
es
lock
sub
nop
cld
nop
jmp
add
add
xchg
dec
jbe
mov
stc
nop
es
add
sub
add
stc
nop
es
faddl
les
popa
nop
cld
nop
jmp
and
add
add
dec
cmp
nop
es
mov
or
nop
es
add
pop
aad
push
stc
nop
es
add
add
add
jo
je
stc
nop
es
les
jbe
add
inc
add
and
pause
cld
nop
jmp
add
inc
push
dec
mov
stc
nop
es
add
add
lock
sbb
add
add
stc
nop
es
add
js
mov
cld
nop
jmp
lock
add
add
jmp
inc
or
nop
es
js
cmp
add
enter
mov
xchg
ret
xor
add
sbb
sub
push
mov
xchg
ret
add
lods
or
add
mov
ds
stc
nop
es
sub
cmp
nop
es
add
into
mov
stc
nop
es
xor
pop
push
mov
xchg
ret
xor
add
test
or
mov
stc
nop
es
jl
add
add
jg
nop
cld
nop
jmp
int3
add
test
lock
popl
stc
nop
es
fiadds
add
rcrl
xor
nop
cld
nop
jmp
jbe
add
add
filds
dec
pusha
stc
nop
es
xor
add
scas
test
nop
cld
nop
jmp
add
lret
aad
fisttpll
cld
nop
jmp
add
jo
inc
add
sbb
sub
xchg
in
add
add
roll
out
div
stc
nop
es
les
add
add
xor
or
incl
add
add
dec
nop
cld
nop
jmp
lret
xchg
lret
add
lock
add
nop
cld
nop
jmp
add
je
stc
nop
es
lock
mov
sub
stc
nop
es
mov
test
add
cs
stc
nop
es
lock
mov
bnd
push
mov
xchg
ret
add
js
add
nop
es
pop
pop
add
fdivl
xor
stc
nop
es
add
add
pusha
add
out
leave
stc
nop
es
jge
fidivs
or
test
stc
nop
es
add
fmuls
es
test
add
xchg
add
popa
stc
nop
es
or
add
or
add
mov
jb
sbb
xchg
mov
ffreep
roll
xor
stc
nop
es
add
add
fmulp
add
mov
stc
nop
es
add
shll
mov
nop
cld
nop
jmp
or
inc
or
lock
pushl
push
mov
xchg
ret
rcr
dec
cmp
adc
sldt
fdivl
add
adc
stc
nop
es
cmp
push
add
pop
cmp
stc
nop
es
xor
inc
add
jl
pop
push
mov
xchg
ret
jge
pop
xor
shl
stc
nop
es
push
add
pop
int3
adc
nop
es
lret
push
add
lock
es
add
sbb
pusha
add
nop
es
add
add
nop
cld
nop
jmp
lret
int3
les
push
xchg
add
mov
xchg
ret
xor
fidivrs
mov
sub
test
sbb
add
nop
es
jge
add
cmpl
nop
cld
nop
jmp
add
popa
dec
inc
stc
nop
es
add
lock
or
add
add
xchg
ret
add
js
push
stc
nop
es
add
xor
pop
mov
aad
sbb
push
stc
nop
es
add
fimuls
nop
cld
nop
jmp
sub
lret
add
mov
jmp
jb
cmp
jge
add
popf
add
stc
nop
es
add
add
and
push
mov
xchg
ret
jbe
xor
insb
je
stc
nop
es
int3
les
loope
add
pop
push
mov
xchg
ret
fiadds
add
call
jb
add
add
xor
mov
jmp
add
jge
add
loopne
push
push
mov
xchg
ret
int3
lret
pop
lret
int3
rorl
inc
cs
stc
nop
es
add
xor
out
nop
push
mov
xchg
ret
sbb
verr
xchg
mov
add
nop
cld
nop
jmp
add
verr
stc
nop
es
or
fdivrl
sub
stc
nop
es
fcompl
sub
push
stc
nop
es
add
add
mov
sarb
add
nop
cld
nop
jmp
add
arpl
stc
nop
es
jo
mov
add
push
nop
cld
nop
jmp
add
add
int
add
add
ret
enter
cmp
stc
nop
es
add
lods
add
push
push
mov
xchg
ret
add
add
add
push
push
mov
xchg
ret
add
xor
lock
add
decl
push
mov
xchg
ret
add
add
mov
stc
nop
es
lret
sbb
incb
nop
jmp
aas
lret
add
test
mov
stc
nop
es
inc
or
cmp
add
xchg
push
mov
xchg
ret
int
sbb
add
stc
nop
es
or
add
aad
ja
push
mov
add
stc
nop
es
add
pop
aad
add
stc
nop
es
int
xor
mov
xor
stc
nop
es
int3
xor
add
std
shr
stc
nop
es
add
int3
int3
add
scas
jl
stc
nop
es
fiadds
add
mov
stc
nop
es
cmp
or
mov
add
nop
es
add
mov
add
add
pop
jns
jno
stc
nop
es
xor
pop
add
mov
es
xchg
xor
or
add
stos
add
push
mov
xchg
ret
add
psubw
pop
mov
nop
cld
nop
jmp
fiadds
pop
mov
mov
add
nop
jmp
or
add
add
add
call
stc
nop
es
push
xor
roll
add
mov
stc
nop
es
fistpll
jge
fmull
scas
enter
jb
lods
xor
add
js
mov
stc
nop
es
cmp
add
stc
nop
es
xor
int3
lret
aad
add
lods
push
push
mov
xchg
ret
jbe
adc
js
add
nop
es
stc
les
add
add
push
stc
nop
es
xor
pop
xor
push
mov
xchg
ret
xchg
les
les
incb
stc
nop
es
push
xor
lock
loope
add
xor
scas
push
stc
nop
es
add
add
xor
mov
stc
nop
es
add
or
add
push
add
cld
nop
jmp
int3
xor
add
lret
and
sbb
jmp
add
lock
add
xor
ja
ret
mov
sub
jmp
xor
add
mov
es
lods
lock
lret
int3
les
addb
das
pop
stc
nop
es
roll
xor
sub
nop
es
test
faddl
cmp
rorl
stc
nop
es
pop
add
sbb
sbb
or
nop
es
add
pop
add
mov
stc
nop
es
add
aad
add
inc
stc
nop
es
add
adc
add
stc
nop
es
add
add
inc
add
mov
nop
jmp
cmp
stc
sbb
add
insl
push
nop
cld
nop
jmp
xchg
add
les
add
or
sbb
aam
inc
add
add
mov
addb
add
pop
add
jge
xor
xchg
mov
nop
es
add
es
adc
inc
dec
ret
nop
cld
nop
jmp
add
add
add
add
jge
mov
jb
add
pop
jge
add
push
mov
stc
nop
es
lret
mov
add
stc
nop
es
add
add
add
je
lea
stc
nop
es
add
sarl
lock
add
nop
es
xor
or
fdivl
hlt
std
push
mov
pop
xchg
add
lods
add
mov
push
stc
add
add
popa
add
cld
nop
jmp
lock
add
or
enter
jb
mov
js
add
pop
test
data16
test
nop
cld
nop
jmp
add
test
fmull
leave
sub
sldt
push
add
mov
stc
nop
es
add
add
mov
and
jl
pop
stc
nop
es
xor
mov
cmc
lea
mov
push
stc
nop
es
add
xor
dec
add
stc
nop
es
mov
add
add
push
mov
xchg
ret
lock
mov
int3
insb
add
push
mov
xchg
ret
add
cmp
add
pop
push
mov
xchg
ret
add
adc
add
mov
stc
nop
es
add
roll
add
add
es
lret
add
test
jb
cmp
add
lret
mov
xchg
ret
lret
add
add
sbb
pop
mov
stc
nop
es
les
add
jns
nop
jmp
rcll
add
add
add
loop
add
mov
stc
nop
es
add
add
add
stc
nop
es
jge
rorl
out
mov
stc
nop
es
add
add
add
nop
cld
pop
stc
nop
es
inc
add
sbb
add
mov
xchg
ret
add
add
add
subl
push
mov
xchg
ret
xchg
pop
les
nop
cld
nop
jmp
add
jl
xor
test
cld
nop
jmp
xor
stc
inc
or
add
nop
es
add
js
add
rcrl
mulps
xor
sbb
insl
je
stc
nop
es
add
lret
les
addb
pop
mov
nop
cld
nop
jmp
adc
pop
jge
mov
and
nop
es
jge
or
sbb
je
add
add
add
add
inc
xor
loope
mov
jb
jge
les
les
repz
add
push
mov
add
nop
es
add
add
add
imul
nop
cld
nop
jmp
add
add
daa
adc
test
stc
nop
es
js
add
nop
jmp
faddl
add
xor
movb
add
sti
incl
add
add
inc
add
filds
pop
jge
add
pop
stc
nop
es
add
int3
add
add
int3
xchg
in
call
nop
cld
nop
jmp
aad
add
cmp
shr
stc
nop
es
add
lock
call
stc
nop
es
jge
int3
int3
cld
pop
push
mov
xchg
ret
add
mov
movsb
inc
add
sahf
mov
stc
nop
es
jl
mov
lret
add
cld
nop
jmp
cmp
les
jge
daa
data16
mov
stc
nop
es
add
mov
jb
add
sub
adc
add
stc
nop
es
add
xor
outsb
and
nop
es
fadd
lock
out
sbb
loope
stc
nop
es
xor
mov
nop
es
roll
add
add
je
pushf
push
push
mov
xchg
ret
pop
add
add
idiv
nop
es
add
add
add
aas
dec
add
stc
nop
es
xor
sarl
and
nop
es
dec
lock
add
in
mov
nop
cld
nop
jmp
xchg
fadd
cmp
jge
push
push
mov
xchg
ret
add
adc
or
and
mov
stc
nop
es
add
mov
sbb
add
stc
nop
es
roll
les
nop
cld
nop
jmp
xchg
xor
test
add
inc
adc
add
nop
cld
nop
jmp
jbe
add
add
add
pop
push
mov
enter
add
insb
dec
sub
pop
add
xchg
jmp
js
nop
es
stc
add
int
call
nop
cld
nop
jmp
rcll
xchg
sbb
es
xchg
xor
add
add
dec
mov
nop
cld
nop
jmp
les
or
mov
add
cmp
nop
cld
nop
jmp
mov
ficomps
mov
push
mov
xchg
ret
test
aas
add
shrl
jmp
stc
nop
es
mov
inc
jne
jmp
stc
nop
es
or
movsb
stc
nop
es
test
add
inc
adc
mov
xchg
ret
add
jmp
stc
nop
es
int3
int3
add
insl
xor
stc
nop
es
fcoml
rorl
mov
stc
nop
es
int3
lret
xor
ret
and
cmp
stc
nop
es
add
add
stc
nop
es
add
xchg
mov
xchg
ret
add
add
jge
add
stc
nop
es
add
pop
lret
mov
es
roll
sub
cld
push
mov
xchg
ret
and
lret
add
fmul
jnp
stc
nop
es
add
xchg
add
add
pop
and
stc
nop
es
les
add
int
mov
push
push
mov
xchg
ret
stc
add
filds
add
cmp
nop
cld
nop
jmp
cmp
add
int
test
les
and
arpl
lea
mov
xchg
ret
jge
aad
fdivrl
xor
push
mov
add
hlt
add
add
add
add
sbb
add
stc
nop
es
add
add
mov
xchg
ret
xor
cmp
dec
cmp
nop
es
add
roll
xor
xor
nop
cld
nop
jmp
add
inc
add
xor
lock
jge
add
mov
es
jge
int
aad
test
add
stc
nop
es
jo
pop
sbb
mov
mov
nop
cld
nop
jmp
int3
pop
dec
push
lret
add
nop
es
or
test
add
mov
add
nop
es
add
add
dec
sbb
mov
stc
nop
es
js
aad
xchg
cld
nop
jmp
add
xor
hlt
push
mov
es
add
mov
add
add
ds
push
mov
xchg
ret
js
fdivl
pop
push
mov
xchg
ret
xor
rcr
add
loope
add
add
add
stos
pusha
stc
nop
es
cmp
aas
xor
add
stc
nop
es
cmp
stc
add
add
movsb
push
mov
xchg
ret
add
xor
xchg
rep
stc
nop
es
sbb
mov
test
sub
mov
add
stc
nop
es
add
add
add
nop
es
add
pushf
add
push
mov
xchg
ret
add
add
add
xchg
pop
test
nop
cld
nop
jmp
add
stc
add
fdivl
add
xchg
lds
mov
xchg
ret
pop
xor
mov
stc
nop
es
ltr
add
push
out
sbb
es
mov
push
add
call
stc
nop
es
jge
add
sarl
gs
nop
es
cmp
push
les
jmp
nop
cld
nop
jmp
add
xor
cmp
es
add
pop
or
add
stc
nop
es
jl
mov
rcrl
mov
stc
nop
es
test
add
cmp
or
add
nop
cld
nop
jmp
add
add
add
mov
xchg
stc
nop
es
add
js
add
stc
nop
es
pop
xor
add
dec
xchg
mov
add
xor
stc
nop
es
lock
push
jge
add
es
faddl
push
inc
int3
add
mov
cld
nop
jmp
jbe
roll
add
rcll
dec
mov
stc
nop
es
xor
lock
cld
nop
jmp
add
xor
add
pop
xor
push
mov
xchg
ret
xchg
add
faddl
pusha
add
add
call
repz
pushl
aas
add
adc
push
mov
xchg
ret
add
mov
add
pop
push
mov
xchg
ret
pop
lret
lock
lock
int
mov
stc
nop
es
mov
mov
inc
add
cmp
mov
sub
stc
nop
es
xor
add
push
add
mov
stc
nop
es
add
add
aas
add
xor
popf
push
nop
cld
nop
jmp
add
push
stc
nop
es
aas
lret
add
roll
add
push
push
mov
xchg
ret
jge
add
jge
add
inc
stc
nop
es
xor
int3
lock
sub
mov
cld
nop
jmp
pop
xor
cmp
ljmp
add
add
lock
jo
adc
jns
add
in
incl
mov
pop
add
dec
adc
cld
nop
jmp
xor
lock
add
out
jg
stc
nop
es
fcompl
add
int3
xchg
pop
dec
push
mov
xchg
ret
xchg
push
jge
xchg
addb
jg
inc
sbb
daa
fldl
xchg
ret
add
lods
inc
test
fdivr
nop
es
xchg
test
dec
add
dec
add
nop
es
add
mov
add
nop
cld
nop
jmp
add
push
and
or
add
add
nop
es
add
add
jne
nop
cld
nop
jmp
faddp
add
loope
nop
es
add
stc
add
xor
movsb
cmpl
xor
inc
add
add
adc
jl
sar
nop
es
add
add
jge
cmp
push
push
mov
xchg
ret
add
lock
les
movsb
inc
add
int3
je
stc
nop
es
lock
mov
movsb
in
add
add
add
loop
add
dec
cmp
nop
es
add
add
jge
test
add
test
stc
nop
es
xor
xor
jb
stc
nop
es
add
sub
push
push
mov
xchg
ret
mov
pop
xor
lret
fsubrl
testl
nop
cld
nop
jmp
xor
add
cmpsb
jnp
mov
int
jl
xchg
sub
insb
leave
add
jmp
jne
stc
nop
es
add
stc
nop
es
add
add
jle
jne
gs
cld
nop
jmp
rcll
add
dec
popa
xchg
je
loopne
movsl
lods
mov
push
mov
xchg
ret
sbb
test
lock
nop
es
add
cmp
sarl
jo
nop
cld
nop
jmp
add
add
dec
add
ret
push
mov
add
lahf
lods
add
add
xchg
add
call
add
sbb
movb
mov
inc
add
add
add
inc
pop
push
nop
cld
nop
jmp
jl
aas
add
add
add
pop
lods
stc
nop
es
mov
shll
mov
mov
stc
nop
es
lock
mov
stc
nop
es
or
sbb
cmpl
into
out
js
cmp
add
stc
nop
es
jo
add
mov
nop
cld
nop
jmp
push
test
pop
add
mov
stc
nop
es
stc
add
dec
add
in
pop
push
mov
xchg
ret
add
add
pop
add
add
stc
nop
es
add
push
add
iret
or
xorb
xor
js
jmp
es
jge
cmp
add
fst
inc
add
add
add
pop
fstps
nop
es
and
add
outsb
mov
nop
cld
nop
jmp
aad
jbe
add
call
cmc
call
xchg
lock
add
add
nop
es
add
lret
popa
stc
nop
es
lock
add
mov
add
jecxz
loope
dec
lods
nop
cld
nop
jmp
add
aad
add
fucomip
rep
push
mov
xchg
ret
add
pop
add
mov
add
stc
nop
es
les
lock
les
sub
in
dec
add
lods
xor
mov
add
nop
cld
nop
jmp
jge
cmp
add
add
mov
stc
nop
es
add
mov
stc
nop
es
xor
add
add
add
add
nop
es
inc
xchg
push
stc
nop
es
add
js
add
cmp
sub
stc
nop
es
add
loope
test
sub
add
nop
es
les
xor
nop
cld
nop
jmp
add
aad
mov
add
movsl
lods
add
stc
nop
es
add
int
test
jb
add
add
cmp
stc
nop
es
lret
cmp
add
add
add
stc
nop
es
add
add
add
xchg
or
cld
nop
jmp
lock
int3
shll
adc
repnz
push
mov
xchg
ret
lock
enter
cld
nop
jmp
jo
add
add
lock
rep
stc
nop
es
add
js
pop
add
ret
nop
es
faddl
add
lea
add
push
mov
xchg
ret
add
jbe
add
jne
stc
nop
es
add
sarl
xor
push
mov
xchg
ret
add
cmp
lret
movswl
stc
nop
es
add
add
inc
lock
mov
xchg
ret
mov
xor
push
nop
cld
nop
jmp
xor
lock
jge
add
test
push
mov
xchg
ret
add
lods
cmp
testl
stc
nop
es
add
jl
lds
push
je
stc
nop
es
add
add
mov
stc
nop
es
cmp
xchg
jge
or
movsl
stc
nop
es
int
xor
mov
cld
nop
jmp
sbb
test
add
xor
stc
nop
es
roll
inc
cmpsl
mov
push
mov
xchg
ret
jo
add
or
mov
scas
incb
xchg
ret
lret
adc
add
lret
nop
cld
nop
jmp
add
lret
mov
mov
push
mov
xchg
ret
add
add
out
clc
stc
nop
es
jbe
ror
je
stc
nop
es
and
sbb
add
or
fs
nop
es
xchg
stc
nop
es
inc
xor
lock
sub
pushl
stc
nop
es
add
cmovl
test
shr
stc
nop
es
add
add
add
adc
push
nop
cld
nop
jmp
inc
lock
faddl
add
in
pop
push
mov
xchg
ret
pop
cmp
add
add
imul
xorb
incl
add
add
nop
es
int3
mov
add
stc
nop
es
roll
add
sarl
loop
nop
cld
nop
jmp
lock
xor
jo
add
fildl
xchg
ret
add
int3
pop
mov
and
inc
push
pop
mov
stc
nop
es
push
int
add
cmp
es
add
les
add
insb
insb
stc
nop
es
test
add
adc
test
push
mov
xchg
ret
add
add
test
add
mov
nop
cld
nop
jmp
add
xor
pop
push
mov
xchg
ret
aas
add
cld
movswl
stc
nop
es
add
add
mov
xchg
ret
add
int3
mov
nop
es
xor
push
and
rcl
aad
dec
nop
cld
nop
jmp
add
add
lods
int3
add
popa
sub
es
xor
add
int3
fistpll
jne
push
mov
xchg
ret
cmp
addps
pusha
stc
nop
es
add
cmp
mov
xchg
adc
xor
stc
nop
es
fadd
add
call
pop
add
add
add
jb
xchg
loopne
jne
stc
nop
es
sbb
push
mov
xchg
ret
xor
xchg
or
jmp
pop
add
add
roll
add
stos
push
mov
xchg
ret
cmp
add
stc
nop
es
lret
int3
add
add
xchg
inc
add
jge
nop
cld
nop
jmp
faddl
add
lock
arpl
jb
aad
verw
imul
stc
nop
es
add
les
add
xor
stc
nop
es
les
sub
dec
and
nop
cld
nop
jmp
add
js
add
jecxz
aas
inc
stc
nop
es
add
add
test
sub
nop
cld
nop
jmp
jo
add
add
stc
les
and
nop
cld
nop
jmp
fiadds
add
xor
jbe
add
stc
nop
es
add
aad
aas
test
insb
and
push
mov
xchg
ret
cmp
roll
je
add
add
add
add
add
pop
and
stc
nop
es
jbe
ror
int3
movzwl
stc
nop
es
lret
xor
ret
or
jb
or
xor
test
add
jns
stc
nop
es
les
add
stc
nop
es
add
pop
sbb
add
rep
stc
nop
es
filds
add
mov
mov
nop
cld
nop
jmp
cmp
add
stc
nop
es
add
dec
xor
xor
test
nop
jmp
jbe
mov
or
stc
nop
es
add
roll
dec
push
nop
cld
nop
jmp
lret
pop
shrl
inc
add
lahf
jne
stc
nop
es
add
add
stc
nop
es
add
fidivrs
lea
push
mov
xchg
ret
test
stc
pop
add
out
sbb
xor
incl
add
mov
icebp
pop
add
push
mov
xchg
ret
add
mov
stc
nop
es
add
add
sub
nop
es
add
push
add
sbb
jb,pt
nop
cld
nop
jmp
xor
add
add
lahf
mov
push
mov
xchg
ret
jbe
adc
add
jae
add
add
out
stc
nop
es
add
add
push
push
mov
xchg
ret
sldt
int
les
stc
nop
es
jo
or
add
sbb
popa
add
mov
xchg
ret
adc
add
nop
cld
nop
jmp
sub
add
mov
movl
jb
lock
add
nop
jmp
aas
add
jge
add
jo
add
push
mov
xchg
ret
add
xor
mov
stc
nop
es
add
add
jbe
lcall
add
add
add
add
pop
sub
les
nop
es
add
add
sti
nop
cld
nop
jmp
test
jge
pop
je
stc
nop
es
add
add
mov
stc
nop
es
add
nop
sbb
jne
push
mov
xchg
ret
aas
js
add
inc
add
les
dec
mov
stc
nop
es
add
lret
add
lock
add
ss
nop
es
add
lods
add
xor
mov
add
nop
es
or
xor
add
mov
xchg
ret
or
add
roll
mov
stc
nop
es
xor
cmp
mov
push
nop
cld
nop
jmp
dec
pop
xor
add
push
xchg
std
mov
stc
nop
es
add
add
mov
std
inc
add
lret
xchg
mov
sub
stc
nop
es
mov
add
stc
mov
stc
nop
es
add
add
gs
nop
es
xor
lock
inc
stc
nop
es
rorl
addb
test
nop
cld
nop
jmp
add
mov
add
add
fucomi
mov
stc
nop
es
inc
jo
add
mov
mov
cli
add
mov
mov
inc
add
mov
stc
nop
es
mov
add
cmpl
push
mov
xchg
ret
sbb
int3
add
add
sbb
call
and
add
mov
add
nop
cld
nop
jmp
and
faddl
stc
roll
add
stc
nop
es
add
aad
push
add
jne
mov
nop
jmp
jo
stc
sbb
push
mov
es
add
lock
add
bound
fistl
nop
es
add
add
mov
lret
nop
jmp
mov
add
add
ror
sbb
jmp
nop
es
lret
lret
mov
js
add
and
sub
je
sub
push
inc
add
add
add
call
nop
cld
nop
jmp
add
addb
mov
stc
nop
es
add
add
jge
and
stc
nop
es
filds
cmp
int3
xor
es
pop
push
mov
xchg
ret
add
pop
add
add
cmpsb
xor
jb
add
aas
add
xchg
add
jbe
call
add
add
xchg
add
cmc
inc
add
mov
add
movl
push
push
mov
xchg
ret
add
add
mov
inc
add
jb
add
ror
add
nop
es
add
add
aas
add
push
mov
loope
call
out
pushl
mov
push
add
clc
nop
cld
nop
jmp
test
add
pop
add
imul
jb
add
cmp
add
adc
or
mov
xchg
ret
cmp
jge
adc
inc
add
pop
pop
xor
add
add
push
mov
xchg
ret
cmp
test
int3
push
mov
pop
cmpsb
and
add
gs
add
add
nop
es
jl
add
rol
adc
jno
xor
push
mov
xchg
ret
sbb
inc
sbb
nop
jmp
xchg
sbb
add
jge
add
stc
nop
es
test
lret
stos
xor
stc
nop
es
add
sbb
cltd
mov
push
mov
xchg
ret
int3
sub
pop
push
push
mov
xchg
ret
and
aad
lret
sldt
jg
stc
nop
es
jbe
add
add
nop
es
pop
add
add
add
repz
nop
es
add
int3
add
add
nop
es
pop
add
fiadds
cmp
mov
xchg
ret
roll
lock
adc
mov
stc
nop
es
xor
shll
jb
jbe
add
xor
jne
stc
nop
es
add
nop
cld
nop
jmp
pop
les
addb
and
int
pop
jae
nop
es
pop
les
lock
dec
xor
nop
cld
nop
jmp
add
xor
mov
stc
nop
es
add
cmp
add
adc
sub
nop
es
add
and
pop
mov
stc
nop
es
js
inc
pop
pinsrw
pop
or
nop
es
add
jl
add
mov
nop
es
js
add
and
pop
repnz
inc
stc
nop
es
add
int3
test
adc
sub
nop
es
add
int3
stc
add
movlps
es
jo
add
add
add
in
lcall
lret
lret
add
ffreep
fimuls
nop
es
lock
stos
pusha
stc
nop
es
jge
int3
jge
jo
stc
int
test
stc
nop
es
inc
add
add
nop
cld
nop
jmp
filds
xor
cmc
mov
stc
nop
es
or
add
int3
fsubrl
mov
add
nop
es
add
push
mov
in
stos
nop
sbb
mov
hlt
add
jo
insb
add
cwtl
xchg
stc
nop
es
add
add
lock
test
add
nop
cld
nop
jmp
sbb
add
les
fdivrl
stc
nop
es
lods
lret
add
xor
or
inc
call
jb
add
mov
aad
add
lock
nop
es
add
pop
insl
add
stc
nop
es
add
add
add
dec
push
stc
nop
es
xor
lock
add
cld
nop
jmp
lock
or
lock
test
out
add
sbb
add
lret
xchg
inc
add
push
nop
cld
nop
jmp
add
add
int
add
add
std
mov
push
mov
xchg
ret
lock
add
add
add
cld
nop
jmp
add
add
clc
add
push
mov
xchg
ret
add
xor
nop
cld
nop
jmp
add
xchg
xor
cmp
nop
es
add
add
roll
sub
cmp
nop
es
add
int3
jge
insb
and
stc
nop
es
xor
add
je
inc
add
add
lret
fiadds
test
lds
popa
add
nop
es
or
or
aad
js
dec
add
cld
nop
jmp
int3
add
adc
stc
nop
es
add
cmp
div
nop
cld
nop
jmp
mov
jl
xor
lret
or
add
jnp
add
cmp
add
popa
jbe
and
push
mov
xchg
ret
adc
add
pop
or
stc
nop
es
xchg
and
sbb
add
stc
nop
es
adc
add
mov
lds
push
push
mov
xchg
ret
add
add
add
mov
stc
nop
es
cmp
add
cltd
mov
stc
nop
es
js
fistpll
lock
push
mov
add
add
jle
add
xor
in
xchg
ret
das
jno
add
inc
inc
popf
dec
jle
ljmp
push
enter
arpl
pop
mov
xchg
and
icebp
xlat
dec
adc
mov
pop
pop
movsl
out
add
sub
sub
push
push
pop
dec
pop
lea
jae
into
pop
xchg
movb
xchg
pop
movb
mov
scas
fidivrs
ja
or
xchg
sbb
push
data16
inc
add
not
mov
fistpll
sbb
pop
add
sbb
lret
lock
nop
data16
rcrl
xchg
nop
add
test
xchg
fcmovu
and
dec
rolb
clc
cmpsb
xchg
adc
inc
mov
shll
addb
mov
shl
add
stos
pushf
dec
and
pushf
jno
movb
and
cli
lahf
mov
mov
addb
pop
xchg
pusha
add
das
xor
adc
in
xchg
xchg
mov
inc
add
pusha
add
add
jl
add
clc
mov
xchg
test
ret
popa
jp
add
idivb
mov
test
jl
lret
adc
add
into
pop
ficoml
ja
ja
out
mov
mov
mov
loop
and
add
add
add
jno
sahf
mov
add
jmp
popa
lea
nop
sbb
les
arpl
fcmovnb
xchg
push
jge
scas
jns
pop
addb
push
add
adc
xor
xor
dec
adc
fiadds
sub
add
movsl
add
fidivrs
and
pop
push
shlb
jne
mov
push
or
pop
mov
sbb
out
xchg
loopne
clc
or
cmp
loop
fimull
in
addb
cwtl
mov
les
mov
pop
sub
push
pop
cmc
sub
mov
xchg
inc
jo
add
sub
xchg
jl
adc
xchg
inc
add
and
pushf
movsb
mov
jl
and
aas
sbb
in
clc
mov
or
mov
add
iret
add
rolb
in
das
jae
lret
sub
pop
loope
scas
cmp
xlat
pop
daa
and
or
movb
and
fcompl
dec
jno
test
mov
mov
jg
lods
jp
add
loop
mulb
lods
leave
push
mov
dec
in
js
inc
adc
test
outsb
dec
out
add
push
sbb
addr16
sti
shl
adc
shlb
pushf
repz
xchg
cmp
clc
push
rolb
add
jns
outsb
mov
adc
movsb
out
add
push
pop
repz
frstor
xchg
xor
push
push
ret
cmp
cmp
xchg
or
lds
sahf
rcr
aam
or
icebp
mov
fnsave
sub
mov
sbb
inc
add
cmp
into
mov
jnp
sub
mov
jp
mov
adc
sti
push
add
add
xchg
mov
push
cwtl
icebp
idivl
jns
pop
seta
xor
mov
cld
test
inc
cs
mov
pop
pop
jb
mov
xor
adc
push
mov
fcmovbe
xchg
in
rolb
in
adc
xchg
xor
test
add
add
outsb
int3
push
lock
add
pop
and
fcomps
push
daa
xchg
call
stos
mov
ret
pop
addb
cmp
pop
cmpsb
cmp
sbb
fwait
mov
mov
js
lret
inc
inc
add
push
add
mov
cmp
xor
addb
aam
ret
jg
add
adc
xor
add
icebp
aas
popf
push
add
clc
aad
ja
adc
sbb
mov
icebp
in
add
pushf
sbb
icebp
in
lods
dec
ret
fs
sarb
cs
add
add
aas
data16
mov
int3
stos
mov
outsl
pop
fwait
lret
and
fwait
repz
shrb
add
add
sub
xlat
or
xchg
xor
fdivrl
xor
jge
cmpsb
jmp
xchg
in
out
testb
xor
dec
testb
add
ret
mov
add
repz
push
fisttpl
mov
mov
cmp
loop
mov
cmp
daa
or
nop
aam
ss
push
pop
out
add
push
inc
add
pop
sub
mov
inc
add
aam
test
jl
jno
sbb
jge
int3
mov
pop
lods
xchg
mov
das
bound
cmpsb
out
clc
ja
inc
add
cwtl
mov
pop
adc
lea
add
dec
loopne
gs
movb
ret
lea
addr16
mov
add
fisubrl
out
lock
in
mov
xor
push
fnstcw
mov
leave
adc
push
dec
jb
clc
dec
fisttps
ljmp
sbb
pop
ss
mov
out
gs
enter
addb
pop
pop
dec
movl
lods
jbe
add
fmull
xchg
cmp
mov
stc
repz
pushl
outsb
cld
xor
daa
arpl
sahf
nop
xchg
cmpsb
loopne
stos
mov
ret
cli
into
call
iret
push
xor
or
xorl
mov
test
add
add
pop
stos
mov
mov
inc
inc
xor
outsb
nop
adc
push
mov
add
add
test
mov
sbb
sbb
loopne
jle
mov
ja
sarb
ljmp
lock
lock
out
sbb
mov
jo
cmp
addb
add
adc
jae
xchg
in
inc
add
xor
or
inc
xchg
stos
and
xor
aas
mov
mov
sar
cmpsl
adc
test
shlb
in
push
sbb
dec
out
ss
xchg
aam
sub
ljmp
jns
cmp
ja
sldt
adc
pop
fs
mov
dec
adc
into
test
cmp
xchg
and
mov
mov
jno
mov
sub
add
push
or
mov
mov
int3
xchg
sbb
push
addb
sbb
push
xchg
cmp
push
inc
xchg
and
add
stos
jecxz
xchg
sahf
push
loope
cmp
outsl
ficompl
sub
or
and
push
lahf
arpl
fidivl
xchg
ret
in
insb
fldl
add
out
push
mov
movsl
call
and
push
insb
lcall
addb
cmpsb
nop
push
ret
push
pop
nop
fucomip
jle
addb
cmp
in
sub
lods
mull
jne
mov
mov
cmpsb
fdivs
mov
shl
int3
jnp
xrelease
rorl
addb
and
inc
add
adc
outsl
or
sbb
sbb
sbb
ret
mov
incb
add
mov
push
add
je
and
fildll
cmpsl
aam
and
adc
in
xor
push
jnp
and
and
movsb
das
es
out
push
and
rcll
cmpsb
ficoml
add
imul
es
dec
mov
sbb
push
lods
jns
mov
mov
scas
ret
mov
movsl
push
ja
pop
jno
lods
add
mov
add
xchg
mov
movsb
xchg
sub
lock
mov
add
out
fsubp
mov
fmul
aad
push
mov
inc
add
and
inc
cld
shl
mov
rclb
sub
sub
and
or
push
rcrl
fs
mov
out
xchg
cmpsb
pop
xchg
addb
mov
mov
cmpl
int
jmp
es
aam
xchg
xchg
mov
cmp
adc
mov
mov
pop
xlat
jb
add
add
push
scas
cld
int3
pop
sarb
cmp
or
hlt
je
mov
adc
loop
mov
sub
xor
stc
cmp
lea
xor
outsl
xchg
mov
jl
cmpsl
addb
sub
adc
dec
sub
mov
repnz
hlt
cltd
cmp
xor
decb
jae
jno
add
inc
add
jge
pop
aas
jae
xor
jge
adc
push
movsb
in
cmp
test
jae
in
ficompl
adc
or
mov
inc
lds
add
out
jnp
outsl
fadd
push
adc
inc
or
lock
dec
inc
mov
nop
pop
jl
adc
pop
insl
push
das
int
add
sub
out
inc
add
imul
push
rolb
out
cmp
add
mov
sub
mov
notb
cmpsl
adc
lcall
in
lods
sbb
inc
ss
pop
pop
mov
lea
add
xchg
or
bnd
mov
fstpl
in
repnz
add
mov
mov
add
call
adc
mov
lcall
popf
loope
inc
add
cli
fidivrs
sub
add
dec
sub
hlt
push
sbb
pop
das
sbb
push
cmp
rcrl
lea
mov
inc
jle
add
xchg
mull
add
out
add
add
test
addb
add
addb
loope
loopne
jno
ja
sbb
aam
scas
xor
sub
les
dec
dec
repz
pop
cvtps2pi
adc
jbe
in
adc
mov
or
push
sti
inc
add
adc
ljmp
in
std
inc
cmpsb
or
mov
push
imul
mov
add
mov
xchg
out
les
stos
aaa
add
test
and
imul
sbb
nop
mov
popa
popa
imul
add
jb
mov
addb
jl
test
lds
push
jno
xchg
xchg
cmp
add
jge
add
sub
sub
popa
cwtl
ja
add
push
push
add
add
and
insl
loop
push
notl
sub
cmpsl
and
into
xchg
pop
sti
mov
popa
je
mov
jbe
mov
dec
xlat
jbe
rorb
enter
addb
or
xchg
push
sbb
jno
adc
in
cmc
xchg
cmp
or
and
mov
mov
pop
out
cmc
or
xor
int
movb
sbb
inc
mov
test
add
in
clc
out
jns
add
pop
jae
ret
adc
mov
jae
pusha
add
outsb
sbb
or
sarl
add
xor
lods
ja
add
adc
test
push
cltd
pop
sbb
sub
movsb
adc
rclb
mov
push
filds
sub
das
dec
and
fwait
and
mov
or
rolb
add
cwtl
negb
mov
mov
xor
and
add
or
sbbl
inc
mov
jp
leave
pop
lretw
lods
sub
leave
out
pop
mov
mov
or
addr16
sbb
add
inc
add
lcall
add
add
cs
sub
and
xchg
fwait
cs
test
addb
cmc
mov
in
add
clc
aaa
cmp
loope
add
inc
jo
std
or
pop
mov
adc
cmp
add
add
ja
inc
add
xchg
add
and
cld
addb
clc
jns
add
outsb
pop
rorb
inc
add
lea
dec
cmp
jmp
in
fdivrl
mov
leave
or
or
mov
arpl
add
and
sbb
sbb
jge
fmull
add
cld
arpl
pop
jb
push
fists
lahf
mov
add
add
sbb
push
int3
jo
repz
test
dec
rolb
or
cli
mov
mov
sub
jae
dec
mov
jb
xchg
test
les
mov
out
mov
xor
scas
push
bound
xor
out
out
dec
aam
aaa
mov
in
stc
sahf
rcll
xchg
ret
cmp
daa
cmpsl
in
nop
fisttpl
scas
mov
and
pop
mov
xchg
sub
repz
add
or
or
mov
testb
enter
lret
loope
sub
cmc
movsb
imul
mov
pop
xor
inc
cmp
add
scas
cmp
popf
and
lock
jp
and
dec
insb
fldenv
add
add
leave
addb
lea
and
pop
sbb
insb
push
mov
mov
add
xchg
divl
loop
add
stos
icebp
popf
xor
enter
and
cli
pop
jae
loope
jp
mov
ljmp
add
sahf
xor
sahf
lea
inc
add
js
add
sub
add
bound
loope
cli
sub
push
dec
pop
sahf
mov
cli
faddl
add
jbe
std
mov
test
ljmp
jmp
xchg
xchg
cmp
sahf
jns
xchg
repnz
mov
xlat
or
xchg
cmpsl
cmpsb
cmc
dec
mov
int3
push
add
stos
ret
fisttpll
jae
sub
xchg
mov
scas
xchg
mov
jb
cli
mov
add
add
bnd
loop
add
xorl
hlt
mov
ds
add
daa
stos
loopne
pop
out
shrb
negb
xchg
loopne
adc
fstpl
sub
in
loope
add
add
nop
fildll
add
cs
sbb
add
je
mov
fcomp
in
and
movb
test
and
mov
stc
jbe
sub
add
notb
cmp
lods
push
repz
sbb
outsb
or
cmp
clc
dec
pusha
add
cmp
jae
stos
iret
aas
inc
add
add
outsl
je
add
mov
cmc
mov
push
dec
iret
mov
fsubrl
mov
adc
lret
fcomps
popa
mov
add
ljmp
cmp
jg
das
xor
leave
out
cmpsb
fists
in
inc
add
mov
pop
or
faddl
add
and
fcomp
dec
cmpsb
divb
je
mov
add
movb
adc
mov
fwait
push
add
mov
adc
add
fcom
cwtl
ljmp
loope
mov
lea
mov
mov
lock
and
or
mov
stc
sbb
inc
adc
push
out
icebp
push
push
mov
fidivl
ss
bound
fxch
in
push
leave
inc
add
cmpsl
inc
add
add
adc
and
xor
rcrl
mov
xor
fldlg2
fidivs
inc
add
add
jp
mov
shl
inc
add
push
mov
movsb
add
sub
adc
rolb
popa
loop
or
stc
loopne
add
inc
add
int3
aad
mov
scas
movsb
out
cmp
push
cmp
test
pop
call
or
test
shll
add
loop
jne
xchg
repnz
int
aad
imul
fsubp
cmp
lods
adc
adc
mov
mov
leave
aam
adc
lods
dec
aaa
imul
insl
fsubrl
daa
push
jecxz
imul
in
test
je
inc
add
jmp
ret
push
scas
or
xor
pop
xlat
xor
push
inc
add
pop
jmp
cmp
sbb
movsl
sbb
popa
into
pop
clc
lret
lcall
fimuls
int3
pop
dec
inc
pop
ret
dec
test
mov
push
je
jp
cmpsb
inc
add
xchg
fists
and
jno
sub
cmpsb
and
add
mov
pushf
dec
xor
mov
sbbl
or
push
in
adc
xchg
lock
mov
ret
insl
in
dec
sub
movsb
pusha
add
cmp
cmp
mov
addb
add
incb
add
jbe
fadds
add
and
cltd
pop
adc
mov
push
test
stos
sbb
or
pop
ss
dec
jne
add
add
cmp
cmp
leave
mov
or
in
inc
add
pusha
add
xchg
mov
push
add
add
sbb
test
stc
adc
sub
fsubr
sbb
xor
sub
add
or
mov
push
pop
in
mov
lcall
and
dec
mov
rcll
xor
push
inc
fucom
push
add
stc
adc
inc
add
add
ds
pop
inc
aam
inc
add
mov
mov
jns
or
lods
adc
xchg
fs
lret
aaa
xchg
jge
dec
xchg
adc
int
rolb
ljmp
insb
ficoml
testl
push
leave
pop
lds
cld
lret
add
out
mov
push
enter
adc
pop
or
int
sbb
inc
ss
addb
sub
push
and
movl
add
jmp
dec
les
faddl
ja
ljmp
sub
imul
js
dec
outsl
out
pushf
add
repnz
dec
mov
dec
fnstenv
add
nop
mov
cld
jmp
icebp
pop
int3
sti
dec
scas
sbb
dec
stos
rclb
das
and
cmpsb
fdivr
pop
adc
jno
jne
sbb
add
jns
inc
add
dec
sbb
add
stc
and
sbb
test
insl
orl
cmp
add
mov
daa
scas
add
dec
xchg
aam
mov
fnstenv
push
mov
pop
cmp
ljmp
call
je
inc
insl
sbb
or
repnz
test
mov
push
in
pop
or
add
add
into
pop
or
sub
pop
cmp
hlt
addb
push
movsb
and
add
xor
sub
xor
scas
stos
cmp
mov
jbe
ss
sti
roll
lds
stos
lods
push
add
addb
add
mov
xor
add
in
rcl
dec
sahf
mov
jge
stc
jg
lods
sbb
mov
push
add
inc
aaa
cltd
adc
jmp
fsubl
add
xlat
mov
les
mov
negl
jne
sub
insl
jecxz
add
out
lods
and
mov
sbb
aaa
cwtl
push
mov
in
dec
or
dec
add
xor
call
pop
enter
mov
lcall
cmc
xchg
jne
out
sti
pop
xchg
lret
add
push
aaa
push
add
outsb
jno
leave
rcll
lcall
js
test
clc
out
cwtl
dec
sbb
jecxz
push
jns
pop
lcall
ljmp
test
aaa
or
cmp
shrl
addb
in
repz
xor
int
les
test
inc
add
sbb
addb
push
pop
jle
lods
pushf
movb
loop
xlat
scas
ja
shll
ficoms
cmc
adc
push
outsl
sbb
lds
popl
das
cld
sbb
adc
and
bound
adc
es
out
xor
cmc
mov
pop
fs
test
ret
pop
sub
test
das
jo
push
lcall
lods
aaa
sub
rolb
mov
xlat
shlb
dec
addb
lret
out
mov
push
add
and
mov
mov
adc
sti
pop
mov
jne
jb
xor
add
leave
jb
adc
xchg
push
fimuls
fcoms
movsl
sub
rcr
mov
dec
jl
mov
fidivrl
inc
mull
jl
mov
xor
or
fnstcw
xor
sub
daa
insl
add
mov
push
lock
push
cmp
or
rolb
adc
jg
add
movsb
and
mov
jns
filds
push
sub
dec
push
ja
outsl
test
imul
mov
add
or
xchg
pop
cmp
inc
add
cmp
dec
loopne
lea
sahf
lea
and
scas
leave
jb
add
ret
or
add
xchg
adc
sarl
je
in
xor
call
lahf
pop
xchg
andl
dec
rcrl
or
cmp
xchg
xchg
mov
and
or
scas
aad
aaa
push
loopne
loopne
add
mov
add
iret
leave
adc
push
cltd
mov
in
or
mov
icebp
fsubrl
mov
sbb
jbe
mov
rolb
in
pop
loop
fistpll
add
fdivrl
outsl
mov
sub
dec
mov
cs
call
inc
ss
or
clc
mov
addb
dec
and
imul
dec
popf
xchg
pop
dec
sub
mov
add
add
mov
mov
idivl
imul
stc
add
in
pop
jns
add
dec
js
add
shll
fsubrp
bound
jp
mov
aad
or
sub
les
imul
scas
xchg
jno
jmp
pop
xchg
push
mov
push
push
inc
pop
mov
add
push
cmc
or
jne
outsl
mov
add
xchg
mov
add
sbb
pop
xchg
test
fwait
daa
mov
sbb
add
fadds
mov
cltd
notl
mov
sbb
and
jae
jp
mov
vmread
scas
jo
mov
aad
cmc
dec
sub
aam
cmpl
aaa
mov
mov
out
sbb
xchg
aaa
cmp
outsl
or
fdivl
fisttpl
sbb
call
inc
cwtl
and
dec
arpl
mov
add
push
add
jl
mov
xchg
cmp
mov
adc
add
sbb
sub
or
mov
jnp
sbb
push
in
popf
push
push
jge
add
pop
jecxz
enter
loop
loope
jge
xor
xor
sbb
int
xlat
rolb
mov
pop
inc
add
mov
cld
mov
rorl
inc
rcll
ror
insl
jno
test
jecxz
sub
xchg
add
in
cmp
add
int3
jno
into
imul
add
sub
and
sahf
fs
sbb
push
aaa
imul
outsl
jbe
add
movsb
shr
aas
mov
pop
gs
or
mov
pop
jp
call
je
mov
in
add
std
test
cmp
out
jbe
push
mov
xlat
in
cwtl
mov
add
jno
aam
sahf
xor
cli
inc
data16
or
add
flds
add
test
testl
movb
stos
or
xor
icebp
mov
xchg
xor
add
cmpsl
lret
mov
clc
xlat
imul
dec
pop
inc
add
add
jb
mov
pusha
add
fcmovb
add
mov
push
mov
xchg
pop
mov
mov
scas
stc
ds
aam
inc
add
test
dec
or
mov
sbb
arpl
dec
out
xchg
cmpl
rorb
sub
jo
fnstenv
daa
jp
pop
out
sahf
mov
orl
pop
imul
cmpsl
jb
add
shrb
rol
movb
imul
add
arpl
outsb
add
hlt
fstps
stos
cmc
ss
mov
aam
inc
mov
adc
pusha
add
jmp
add
inc
add
scas
adc
imul
lock
adc
shll
pop
or
clc
aam
leave
push
jl
sub
adc
andl
popa
es
xor
xlat
inc
leave
sarl
outsb
xchg
or
shl
inc
xchg
dec
ret
xchg
sti
or
jns
add
ret
pop
sbb
mov
or
mov
pop
ljmp
movsl
adcl
fcmovbe
or
daa
xchg
je
mull
mov
xchg
adc
fwait
mov
and
call
xor
mov
ret
xor
and
and
fstl
and
cwtl
movsl
cmpsb
imull
iret
mov
iret
shll
push
add
dec
jae
movsb
mov
sahf
scas
fs
sbb
aas
sub
shl
insb
pop
push
and
adc
add
cmpsb
addb
fs
dec
mov
int3
add
mov
fmul
adc
add
cmp
lret
iret
cmpsb
je
inc
add
adc
mov
or
lret
push
add
cli
bound
fildll
rolb
test
add
lret
fldl
add
push
and
mov
ja
test
cmp
mov
inc
add
adc
out
inc
add
mov
lods
and
inc
adc
add
int3
inc
hlt
enter
mov
hlt
addb
push
pop
and
inc
add
and
scas
in
jp
add
ljmp
mov
pop
test
out
lds
outsb
pusha
add
add
sub
in
int
add
add
outsb
fsts
pop
lods
loop
movb
pop
aam
icebp
xor
roll
xchg
jecxz
cld
std
mov
mov
popl
sub
or
cmp
add
mov
mov
pop
scas
mov
fucom
sub
add
push
test
xor
and
addr16
sbb
in
sub
sub
mov
addb
dec
movsl
xchg
movsb
ficoms
dec
xchg
fnop
xor
push
pop
mov
pop
rorl
dec
push
mov
cwtl
add
addb
jp
and
jg
roll
sbb
testl
add
js
pop
lcall
mov
mov
inc
and
cltd
fmull
sahf
pop
movsl
mov
add
add
cmp
fsubp
xor
add
aad
sahf
pop
pop
push
movsl
add
push
out
in
jbe
cmc
jnp
pushf
mov
mov
and
push
addb
nop
xor
pop
sti
mov
inc
add
imul
inc
add
or
add
mov
add
xor
adc
add
push
push
popa
rolb
inc
push
ds
es
jp
add
mov
addb
jno
daa
push
rolb
xrelease
jbe
xchg
add
rorl
inc
shll
lcall
call
fcoml
or
cwtl
ret
ja
lret
mov
adc
and
insl
push
loop
test
lcall
jle
dec
jae
dec
inc
mov
add
push
mov
scas
loopne
jmp
jo
ss
push
sbb
mov
mov
shufps
shl
mov
popa
scas
pop
mov
inc
int
jns
rolb
js
loopne
stc
repnz
enter
and
cmpl
repz
jg
xor
imul
les
or
pop
and
fidivs
or
xchg
cs
add
jmp
mov
and
in
and
stos
push
push
mov
inc
fdivs
push
fiaddl
cli
fstpl
mov
inc
fldenv
or
push
sub
outsb
cmc
cmpsb
icebp
nop
sub
int
add
jns
rorl
dec
aam
xchg
inc
cli
mov
aaa
jle
rolb
hlt
pop
dec
into
jbe
imul
mov
cli
cld
add
int3
ds
stos
sbbl
inc
add
xor
cmp
add
inc
add
scas
lahf
pop
test
mov
aaa
jecxz
inc
aaa
lahf
push
sub
xor
jbe
add
push
dec
sbb
cmc
into
into
add
shll
xor
add
lods
add
cld
stos
in
cmpsl
pusha
add
add
adc
add
in
ss
jl
insb
jle
lcall
xchg
into
mov
add
arpl
xchg
lea
dec
xchg
sub
jo
sbb
xchg
in
stos
lahf
sarl
inc
add
out
outsb
jnp
jno
leave
pop
shrb
ljmp
adc
pusha
add
dec
insb
fisubs
idiv
pop
lock
dec
ss
jo
addr16
lock
push
and
cs
insb
adc
and
xor
add
add
jl
hlt
sbb
mov
pushf
ret
pop
inc
add
cli
or
cmp
out
loop
sbb
addb
add
in
call
or
jmp
jae
lea
subl
dec
xchg
mov
loop
push
adcl
popa
mov
sbb
push
sub
dec
dec
xor
lcall
and
add
out
jo
shl
mov
call
add
pop
mov
pop
xchg
ret
call
loop
mov
inc
dec
jae
cld
add
cmp
cmp
cmp
nop
push
cltd
popa
push
add
mov
add
ret
jecxz
cs
loope
and
mov
stos
mov
xchg
leave
lcall
inc
add
loopne
addb
fadd
add
jno
repnz
inc
add
in
cmp
xor
cmp
add
test
mov
cmp
out
push
lahf
jl
jle
xchg
gs
repz
negb
jne
out
lret
adc
int
mov
addb
mov
stos
push
dec
adc
leave
movb
ljmp
insl
inc
mov
leave
icebp
lcall
out
or
push
shl
addl
pop
cmp
imul
jne
jl
jg
test
mov
int
cmpsl
les
xor
movsl
cmp
lret
and
sti
cmp
mov
dec
inc
pop
decl
mov
jne
or
jge
fmull
xor
push
fnstenv
mov
dec
mov
cli
jae
cli
mov
mov
imul
call
add
push
psrlq
add
test
and
xchg
xor
scas
mov
ja
pop
sbb
or
cli
mov
out
adc
or
add
repnz
pop
jecxz
xchg
and
pusha
add
popa
fwait
push
cli
push
inc
shll
add
test
jns
dec
ret
jmp
hlt
nop
mov
add
sub
and
icebp
jecxz
mov
inc
add
and
sbb
and
in
cmpsl
and
jmp
inc
push
divl
js
inc
or
mov
addb
mov
xchg
adc
dec
xchg
std
ret
xor
jne
pop
inc
add
out
shrb
cmp
lcall
push
sub
repnz
xchg
sub
add
cmpsl
inc
int
mov
dec
sbb
add
mov
std
add
idivl
add
add
hlt
dec
jae
mov
add
out
sarb
scas
pop
ds
ja
gs
loopne
stos
daa
jno
and
add
add
loop
push
mov
add
pop
insb
xchg
push
sbb
fimuls
inc
add
mov
push
rolb
daa
add
mov
and
ficompl
fnsave
jge
mov
sti
popa
aas
push
les
jnp
push
lahf
insb
aas
push
aad
mov
push
stc
out
xchg
jge
pop
js
and
push
mov
add
xchg
movb
push
adc
jae
inc
dec
pop
dec
fstpt
adc
push
pop
stos
xchg
out
test
pop
dec
jg
mov
mov
jbe
test
jno
stos
jae
add
mov
lret
xor
jle
push
pusha
add
add
mov
add
add
mov
aas
movsl
ret
mov
cs
add
and
and
jl
lods
mov
test
enter
add
mov
inc
addb
pop
sub
adc
inc
lea
xchg
jle
movb
lret
test
pop
adc
out
movntq
sub
sbb
adc
fsubl
adc
insl
mulb
rolb
lret
adc
add
sti
pop
push
jmp
sbb
call
jmp
adc
out
cmp
mov
test
addb
or
aam
je
jmp
sub
movsw
in
inc
add
push
out
mov
ret
in
ret
lods
rolb
cmc
pop
inc
fnstcw
fwait
rcll
add
add
adc
aad
les
lret
add
imul
jb
stos
mov
sub
cmp
jg
pop
and
fidivrs
cwtl
ret
pop
lea
cmp
cwtl
xor
xor
fldt
pop
stos
leave
loopne
push
add
leave
movsl
arpl
pop
lds
repnz
test
scas
mov
add
and
cmp
jg
outsl
fdivr
jmp
cmpsl
test
ss
dec
icebp
stos
arpl
bound
stc
push
cmc
fldenv
sub
xor
mov
movsl
inc
add
dec
or
mov
or
or
test
add
lcall
push
std
lret
pop
test
movsl
lahf
testl
adc
inc
add
and
mov
dec
pop
add
and
mov
ret
negb
mov
outsb
pop
ret
hlt
mov
cmp
leave
xor
call
mov
inc
scas
sub
aam
icebp
add
add
push
in
std
inc
add
flds
add
mov
add
rolb
push
and
inc
add
xor
adc
mov
adc
cs
inc
add
inc
add
repz
add
idiv
aas
lcallw
sub
add
jle
addb
mov
mov
add
and
jg
ss
mov
fidivs
inc
ret
test
or
fwait
jno
add
xor
les
test
xlat
fidivrl
mov
enter
loope
xchg
jmp
fldcw
les
addb
out
adc
popf
jnp
mov
dec
mov
add
add
aas
sahf
pop
jmp
jg
mov
mov
imul
clc
push
fs
lods
pushf
mov
cmp
or
push
jae
or
stos
sbb
lcall
hlt
sub
pop
dec
int
add
mov
pushf
mov
mov
add
mov
rcll
pop
cmp
hlt
mov
rcll
push
loopne
xchg
test
sub
clc
inc
push
daa
cltd
pop
sub
or
mov
das
insb
gs
jle
add
add
mov
or
popa
sub
das
pop
lahf
pop
and
clc
xlat
pop
nop
call
ds
adc
dec
dec
dec
rcll
dec
push
or
mov
add
insl
or
sbb
jmp
mov
push
and
pusha
add
shrl
aaa
insl
sub
jns
add
pusha
add
inc
cld
movsl
inc
push
push
mov
sub
add
clc
unpckhps
sbb
adc
xor
cmpsl
out
adcl
mov
jge
in
pop
out
cwtl
fnstsw
add
xchg
test
fwait
je
pop
dec
sbb
adc
xchg
jae
outsb
lcall
jl
add
nop
adc
cmp
incb
int3
movsl
jmp
push
mov
pop
nop
test
add
cmc
jecxz
and
push
ret
rolb
mov
imul
les
mov
or
pop
dec
add
call
jnp
xchg
addr16
fs
inc
jl
xchg
sub
push
in
mov
push
xchg
lcall
mov
ret
pop
movb
add
push
push
lret
out
xor
mov
xchg
outsl
push
ret
fldt
add
addb
jno
out
pop
fidivrl
adc
fisubl
add
sbb
xchg
mov
call
cmpl
lret
xchg
and
sahf
dec
test
mov
cmp
add
add
add
and
mov
fcompl
push
push
push
push
xchg
xchg
addb
out
loope
jns
mov
clc
jo
mov
xchg
and
sbb
pop
outsl
outsl
xlat
sbb
mov
add
push
xorl
in
add
add
jns
shrb
add
les
jle
push
xchg
aaa
cmp
jns
into
add
jns
or
add
push
in
ret
add
jg
sbb
pop
cwtl
sbb
adc
adc
shlb
pop
dec
lods
pop
rcll
repz
xchg
cwtl
jle
das
aam
shlb
fnstsw
xor
pop
pop
add
mov
sub
add
imul
jecxz
and
pop
jge
add
add
push
mov
int
pop
pop
hlt
sub
mov
xchg
addb
jae
push
pop
sahf
inc
add
mov
push
clc
fistpl
pop
inc
movsl
fnstsw
sub
or
inc
add
jno
mov
sbb
mov
aad
dec
pusha
add
push
shr
movsl
out
and
lds
and
mov
mov
sub
add
lock
pop
mov
sti
inc
add
lahf
fnsave
jnp
push
pushf
sub
aaa
mov
addb
popf
gs
add
dec
lods
or
dec
test
cmpsl
mov
cmp
cltd
movsl
in
std
adc
fimuls
xchg
fcomps
repz
jae
sub
cli
mov
iret
cltd
push
xchg
inc
adc
sbb
or
inc
add
das
xor
push
pop
sti
xor
loope
sbb
and
adc
negl
test
or
hlt
push
and
dec
cmp
rorb
addb
jp
lds
add
stc
in
dec
int
inc
cltd
xchg
mov
sub
addr16
aas
sbb
aaa
push
add
inc
fldenv
inc
add
dec
fstl
inc
pop
fimuls
ret
subl
inc
add
mov
mov
sarb
add
js
xchg
xchg
cmp
mov
or
addb
jg
pop
and
out
xchg
gs
pop
clc
movb
inc
je
cmp
mov
jae
bound
aam
cmpsl
orl
ja
dec
ja
mov
addb
add
or
mov
add
ljmp
and
add
pop
sub
addb
sub
aam
sarb
fwait
push
add
bound
lds
xchg
mov
xchg
push
mov
call
pop
insl
out
or
shlb
add
xchg
jg
imul
mov
add
cwtl
in
sahf
dec
scas
hlt
call
movb
scas
cs
xchg
sub
out
aad
mov
cmc
aad
add
dec
push
out
iret
jne
xchg
leave
lds
aad
mulb
cmc
rolb
sub
xor
add
pop
cwtl
xchg
mov
mov
scas
pop
adc
in
or
push
lret
add
sti
in
mov
xor
shl
xchg
sbb
push
ud2
mov
push
std
loop
push
inc
or
aas
mov
adc
stos
mov
in
push
mov
popf
fidivl
and
sbb
outsb
sbb
out
outsl
out
inc
insl
xor
add
leave
sub
das
adc
out
dec
sahf
add
scas
insl
push
pusha
add
clc
mov
mul
repz
out
enter
repnz
arpl
pop
fistl
dec
adc
and
and
or
push
sets
cmp
sub
inc
mov
jns
or
push
add
and
push
add
sti
and
std
pop
pop
mov
adc
data16
fxch
mov
add
cwtl
xor
pop
mov
addb
jno
out
insb
jnp
inc
add
lds
std
std
xor
pop
ret
sub
xor
enter
cwtl
out
mov
mov
add
jmp
add
aaa
xor
scas
jo
adc
aam
stos
scas
xor
shl
das
outsb
stos
mov
add
mov
cmp
add
dec
lock
jnp
pop
rolb
mov
or
sti
adc
data16
ljmp
jp,pn
pop
cmp
inc
add
cmp
jno
and
xchg
cmp
aad
rolb
hlt
lods
pushf
hlt
repnz
int3
add
cwtl
cmp
or
rcr
mov
divps
xchg
gs
and
cli
xchg
lret
mov
push
adc
add
xchg
add
imul
add
pop
xchg
jl,pn
movb
ds
add
and
insb
lahf
sub
pop
mov
mov
add
das
inc
jne
cmp
mov
nop
in
or
pushf
jne
std
adc
jg
addb
into
rolb
lea
movsb
mov
add
loopne
ljmp
cmpsb
adc
and
sbbl
jnp
and
scas
lods
inc
add
ds
xchg
aam
loope
in
xchg
pushf
mov
cli
lcall
or
xchg
clc
dec
xchg
imul
adc
add
addr16
add
push
xor
in
stos
pusha
add
push
shll
mov
inc
add
add
add
pusha
add
add
into
pop
test
inc
sub
mov
notb
xchg
in
add
pop
mov
and
in
or
add
adc
in
fsubrs
vaddsubps
adc
jmp
and
add
inc
imul
mov
mov
and
shrb
cmpsb
sti
sub
in
push
lock
dec
les
sbb
dec
or
mov
sbb
mov
scas
pusha
add
repz
sub
xor
jg
icebp
jae
mov
jp
add
or
and
or
jns
xchg
sbb
push
and
xchg
xor
mov
cmpsl
push
cmpsl
enter
pushf
sahf
xchg
mov
adc
mov
dec
stos
sub
push
mov
test
xchg
push
rorl
sbb
lock
loopne
inc
add
inc
add
add
scas
push
push
push
add
cmc
repz
xor
jae
and
xchg
inc
add
cmpsl
test
ret
jns
stos
ds
aaa
sbb
push
into
stos
push
ja
cmp
lahf
or
iret
das
gs
jno
add
fcom
inc
outsl
inc
add
mov
sbb
mov
sahf
xor
fcomi
call
and
add
add
cmpsl
addr16
inc
add
add
jle
push
dec
sti
repz
in
push
imulb
add
fsubrl
inc
add
sahf
or
add
je
lea
addr16
inc
add
cs
aad
stos
jge
push
mov
or
into
adc
pop
imul
ljmp
pop
shll
jb
add
xchg
xchg
adc
stos
sbb
push
add
xor
aaa
xor
mov
cmp
je
push
sub
mov
rorl
pusha
add
cld
cmpsb
and
repz
rorl
inc
sbb
mov
clc
test
mov
cltd
or
movsl
inc
add
or
push
test
inc
add
ss
shll
cs
rorl
xchg
mov
mov
pop
mov
pop
mov
es
mov
xchg
scas
xchg
addb
jo
adc
repnz
or
push
push
add
xchg
les
call
jae
fwait
jne
aam
mov
fwait
lret
loop
out
imul
int
mov
add
rorl
sbb
inc
add
aaa
push
push
cwtl
adc
sub
add
push
inc
and
fstps
rolb
dec
loop
in
ss
enter
std
insl
or
cwtl
in
mov
add
imul
inc
mov
incb
fwait
sbb
das
sti
call
aad
add
lcall
dec
xchg
push
xor
lods
daa
inc
add
pushf
fildll
bound
mov
push
adc
cwtl
xchg
lahf
cld
xor
movsl
push
icebp
cmpsb
loope
inc
add
cmp
out
cmp
mov
test
add
ss
add
push
loop
pop
push
out
and
addb
mov
test
enter
scas
mov
mov
add
xchg
add
add
sub
ret
and
mov
xor
xchg
div
push
sti
dec
in
vmovntdq
cwtl
push
lret
lret
xchg
es
out
lcall
add
mov
xchg
dec
jns
or
push
mov
out
incl
add
add
cmpsb
movb
add
push
inc
add
int3
out
clc
rcrl
jle
add
inc
add
sub
int3
push
mov
lock
mov
test
fwait
push
inc
add
inc
int
int3
je
iret
xlat
gs
cli
mov
xchg
dec
scas
bound
loope
jp
jae
mov
push
adc
mov
ss
addr16
push
loope
scas
jnp
rcrl
sub
inc
dec
pop
pop
in
je
push
pop
daa
sub
pop
scas
movsb
dec
rorb
jno
cmp
jns
mov
fists
pop
aam
adc
ficompl
lds
bound
ret
lahf
addl
adc
lock
iret
inc
data16
dec
outsl
mov
push
mov
dec
fisubs
scas
mov
ja
add
hlt
iret
xchg
cmc
sahf
fsub
jmp
or
fisubrl
ds
lock
xor
dec
fmul
jmp
shrl
inc
add
imul
imulb
je
stos
inc
sahf
outsl
lock
jmp
xor
jns
sbb
push
clc
in
cmpl
stc
clc
or
jp
pop
mov
push
sbb
add
xchg
add
add
pop
out
adc
xchg
sti
sbb
push
ljmp
lcall
mov
mov
mov
pushf
fisttps
inc
add
push
out
inc
add
xchg
and
fwait
adc
ja
and
mov
xchg
repnz
sbb
repz
adc
adc
or
shr
test
fildll
cltd
mov
int3
sti
pop
pop
loop
jg
rolb
ja
stos
test
or
add
xor
sti
scas
int3
add
in
ret
mov
insb
lcall
iret
das
dec
dec
call
mov
lods
sbb
int3
iret
addr16
mov
add
jno
add
cmpsb
mov
push
ljmp
mov
pop
dec
jne
mov
mov
cmpsl
orl
imul
clc
dec
add
pushf
fcoms
add
arpl
push
sub
pop
sbb
xor
push
inc
fs
push
push
cmc
mov
adc
ds
movb
jmp
xor
mov
mov
std
test
adc
jle
insb
sub
js
mov
cld
pop
dec
faddp
lods
or
es
dec
scas
hlt
or
dec
notl
jmp
add
xor
mov
push
jge
mov
cmpsl
into
into
int
cmc
shll
insl
les
xor
add
pushw
mov
mov
gs
push
add
pop
add
push
ljmp
add
in
mov
jmp
dec
jne
push
fcompl
sbb
insl
fcmovu
fdivp
andl
inc
add
add
pop
shrb
xor
data16
or
jb
xchg
jns
cmp
mov
movsl
inc
add
pop
cs
mov
mov
dec
pusha
add
std
and
or
std
sub
mov
inc
add
cwtl
push
add
xchg
mov
inc
sahf
test
fidivl
sbb
sti
dec
repnz
pop
pcmpgtw
add
shrl
sahf
pop
inc
add
dec
mov
cmpsl
pushf
jecxz
cld
ja
sahf
in
aaa
fwait
insl
sahf
mov
out
loopne
daa
hlt
mov
add
or
xchg
push
add
add
mov
xor
cli
or
in
cwtl
adc
loopne
add
popaw
fistpll
jecxz
push
loope
fildl
insb
cmp
dec
fldl
repz
adc
sbbl
pushf
lods
pusha
add
jle
push
push
push
add
push
jp
mov
dec
xor
xorl
fimull
loope
inc
movntq
out
imul
addb
push
jmp
out
mov
lcall
sbb
mov
repz
outsb
add
loop
sub
out
and
jnp
insl
ret
xchg
jne
popa
inc
shll
dec
add
push
xor
mov
outsl
xchg
xor
jo
xchg
mov
cmpsl
repnz
xchg
push
sahf
sarl
out
inc
add
xchg
nop
xchg
cmp
stos
mov
add
dec
mov
cmp
ret
xchg
repz
loopne
push
mov
sub
add
add
ljmp
push
mov
push
cmc
stos
imul
add
mov
pop
push
das
andl
into
and
xchg
je
adcl
pop
sahf
or
add
or
sbb
mov
mov
out
dec
sbb
inc
xor
aas
pop
sbb
leave
enter
push
icebp
cld
aaa
push
aad
subl
stos
or
mov
add
inc
roll
mov
fdivl
popf
lcall
nop
adc
ficoml
test
rolb
fcomip
inc
add
or
in
popa
ljmp
pop
cmpsl
mov
add
mov
jno
and
sub
pop
xchg
outsb
scas
fs
mov
pop
leave
inc
mov
sub
jo
and
call
arpl
adc
out
xor
sarl
scas
lods
imul
aaa
adc
xor
inc
add
imulb
sbb
pop
jo
mov
leave
in
insl
xor
mov
roll
test
or
push
adc
imul
into
inc
add
push
inc
cmp
xchg
push
les
out
clc
out
lahf
mov
add
insb
rcrl
imul
lock
inc
adc
adc
pop
cli
aam
ljmp
mov
adc
push
repnz
xchg
xor
xor
push
shl
cmp
fisttpll
sbb
or
repnz
ss
fmul
adc
mov
jo
or
inc
jecxz
shll
imul
scas
pusha
add
add
sbb
dec
iret
out
inc
fnsave
ret
fidivl
loopne
ret
dec
mov
sub
enter
add
es
xchg
mov
aam
int3
mov
nop
or
jl
es
mov
pushf
xorl
jno
aam
stc
sti
jno
lock
add
iret
dec
push
push
je
mov
clc
icebp
call
fs
jne
add
fcmovnbe
idiv
popf
and
daa
into
mov
adc
test
out
ret
rolb
mov
sbb
notl
movb
xchg
daa
add
inc
insl
loop
sub
lret
fisubs
xchg
addr16
jge
outsb
shll
add
lock
or
repz
pop
lds
xchg
cmp
pop
cmp
daa
xchg
push
mov
dec
mov
add
lcall
push
and
mov
insb
int3
push
and
in
and
fwait
divl
push
sub
and
jp
or
add
ja
popf
lock
jbe
fdivrl
addb
adc
outsl
inc
cld
out
mov
mov
pushf
push
xchg
mov
xchg
popa
add
enter
movb
outsb
out
js
outsb
dec
xor
xchg
das
mov
push
mov
jo
sbb
jo
jmp
jecxz
je
lods
cmc
jbe
sbb
int3
call
mov
sbb
in
jp
jnp
sub
inc
jne
loopne
aam
mov
xchg
push
into
sti
push
jne
mov
cwtl
pop
inc
add
popf
shrl
inc
pop
fistl
outsw
daa
roll
cmp
bound
js
add
sbb
scas
adc
pop
lret
mov
cmp
add
sbb
pop
psadbw
cld
mov
jl
mov
in
mov
sbb
mov
mov
ret
mov
int3
xchg
jg
or
and
xor
test
ret
rclb
adc
subl
cs
jne
inc
add
adc
in
or
lds
rcll
repz
add
dec
mov
jno
cs
arpl
dec
lcall
iret
inc
loop
inc
add
pop
stc
mov
roll
add
xchg
scas
or
rolb
inc
push
xor
jp
xor
pop
or
pop
imul
pop
mov
inc
lcall
pop
into
xchg
add
add
nop
test
sbb
mov
dec
jp
dec
jb
push
imul
pop
jg
lahf
and
cli
xchg
xor
enter
add
lret
test
xor
add
sub
cmp
inc
pop
fisttpl
pop
push
cli
repnz
or
xchg
push
xor
xchg
movb
pusha
add
xchg
xchg
pop
cmp
fstl
ret
pop
std
pushf
aaa
lds
and
loopne
cmc
lcallw
icebp
js
or
or
fnstenv
leave
and
stos
lret
lods
xchg
loope
jb
cmp
ss
mov
adc
push
cmp
xchg
adc
sub
sbb
mov
push
mov
fistps
add
and
fsts
mov
add
arpl
rolb
mov
add
enter
push
sub
mov
pushl
cs
ljmp
inc
mov
inc
add
std
cmp
rorl
xor
loop
ja
jge
lods
and
sub
decb
jp
sbb
iret
jmp
imul
add
add
mov
pop
daa
xlat
rolb
pop
inc
cli
std
test
in
movsb
test
jns
sbb
pusha
add
stos
sbb
mov
xor
pushf
xchg
xor
cmpsl
sbb
add
cmp
jmp
das
push
jl
add
mov
xchg
pop
jle
fidivs
adc
mov
aas
mov
ds
mov
mov
dec
pop
mov
das
push
push
jnp
in
mov
fcomi
sbb
xor
add
inc
sub
fsubrl
xchg
mov
cmp
movl
add
negl
in
inc
sbb
xchg
mov
pusha
add
stos
mov
jg
outsl
mov
mov
inc
add
pop
mov
adc
cmp
xchg
pop
cvtdq2ps
jae
scas
pop
mov
hlt
rolb
adc
ret
addb
mov
repz
xchg
shlb
adc
out
inc
xor
cmp
aam
mov
orl
addb
adc
add
jp
inc
stos
adc
adc
or
std
push
xchg
mov
and
and
lahf
pop
cli
loope
pop
mov
movb
xchg
stc
cmc
les
dec
testl
dec
sbb
inc
add
xor
adc
mov
xchg
push
xchg
fisubs
mov
int3
and
sub
enter
dec
es
ret
addb
pop
mov
pop
inc
add
cli
mov
ror
fwait
sub
dec
pop
sbb
add
fisubrl
sbbl
inc
je
add
jne
data16
add
cmc
mov
sub
jo
mov
mov
xchg
scas
mov
mov
rcr
adc
jp
out
rolb
shrl
jb
cwtl
add
mov
sub
adc
or
cmp
mov
rolb
or
xor
mov
dec
add
fsubrs
stos
add
cld
test
adc
cld
push
addb
call
in
mov
mov
cmp
pop
and
in
je
gs
pop
jne
inc
pop
pop
sbb
push
mov
xchg
sub
stc
push
mov
add
in
pop
push
push
cmpsb
aad
sahf
test
cwtl
in
mov
sub
outsb
jl
dec
and
jne
xchg
out
jae
je
mov
fiaddl
fists
mov
lcall
xchg
cli
mov
and
push
push
push
jmp
jmp
fbld
jno
add
mov
add
outsb
fadds
loopne
rolb
add
imul
push
mov
lock
rcll
xor
out
mov
add
fldt
xchg
cmc
jo
sbb
nop
push
adc
pop
mov
xchg
push
add
rolb
lock
xor
xchg
add
movsl
and
mov
and
xchg
outsl
sub
movsb
add
pop
jecxz
pop
push
aaa
jnp
loop
cmp
sbb
jno
cld
lock
add
fldenv
add
xor
fidivs
jo
mov
push
cmp
enter
negl
jae
mov
nop
cmpsl
dec
adc
mov
leave
out
xchg
jmp
mov
call
cmpsb
movl
roll
add
adc
xchg
or
dec
and
ffree
push
dec
push
push
jecxz
int3
outsl
loope
push
fs
pop
and
push
mov
cli
add
jno
jecxz
adc
xchg
xchg
sbb
lea
xor
mov
je
push
inc
add
add
jle,pt
pop
cmp
add
inc
add
test
sub
sub
mov
mov
adc
imul
lahf
jge
decl
pop
outsb
xor
add
add
add
test
out
mov
mov
jb
adc
mov
icebp
add
rorl
push
aam
mov
imul
enter
or
ret
in
movb
jo
add
xlat
jp
cmpsl
dec
pop
loop
sbb
inc
mov
aam
ja
xor
shrl
pop
mov
mov
lea
pop
inc
add
push
faddp
ja
or
pop
lods
insb
xchg
cmpsl
dec
mov
cmpsl
adc
dec
mov
xlat
xor
push
xor
cli
cs
popa
stc
mov
sub
mov
imul
or
or
div
and
cmp
lahf
pop
call
stos
fistpl
sub
mov
jmp
sub
adc
jbe
daa
add
clc
push
ficompl
flds
fwait
movb
add
sub
ljmp
pop
aas
mov
dec
xchg
in
sbb
in
adc
inc
mov
loop
lcall
mov
std
pop
adc
pop
mov
xchg
dec
sti
cwtl
mov
fnstcw
pusha
add
inc
add
add
std
loop
lds
pop
push
aas
outsl
fistpll
movb
cli
sbb
jg
mov
xor
arpl
push
test
dec
xchg
sbb
xlat
or
or
xchg
add
mov
ror
andl
loope
jmp
sbb
std
inc
cmp
in
lods
outsl
out
aad
add
and
addb
fbstp
mov
add
inc
jnp
movsl
push
xchg
add
data16
pop
test
decl
sbb
hlt
lret
and
ret
cltd
rolb
xlat
mov
hlt
mov
repnz
mov
mov
in
add
cmc
int3
mov
sub
xor
push
and
ret
or
adc
jne
daa
dec
sub
mov
inc
add
pop
test
sbb
sti
push
push
das
push
repnz
fisubrl
jae
repz
inc
add
and
inc
mov
dec
xor
aaa
add
das
adc
pop
adc
xor
imulb
adcl
fadd
pop
insb
lea
add
jle
sub
addb
sbb
jmp
je
lcall
imul
pop
pop
out
sbb
daa
mov
jecxz
lahf
idivl
jg
out
addb
xor
add
add
jg
ret
add
leave
enter
cltd
dec
imul
daa
pushf
jae
rcrb
push
loopne
mov
push
fadd
add
movsl
test
fbld
add
add
cltd
dec
push
mov
or
icebp
rcrl
pop
gs
sbb
popa
push
call
add
addb
cmp
incl
rolb
cmp
push
vmovaps
xchg
xor
mov
add
out
mov
jb
sbb
cmp
loopne
aam
pop
and
add
fsts
dec
mov
shlb
push
in
or
ja
nop
sub
cmp
sbb
out
stc
sti
and
je
sub
add
cmc
mov
add
ja
dec
jnp
dec
push
add
loop
cli
les
push
lret
mov
call
scas
sub
add
adc
sbb
push
pop
popl
out
addr16
add
pop
fs
xlat
addr16
adc
sbb
movb
push
pop
or
add
mov
jecxz
inc
movsb
xchg
mov
and
shl
nop
inc
xchg
addr16
push
pop
lea
sbb
loopne
sarl
add
xchg
cli
mov
add
push
inc
dec
popa
bound
pop
fmull
cmp
adc
imul
add
mov
mov
repz
cmp
cltd
push
and
push
out
mov
dec
daa
pop
and
imulb
testl
jecxz
push
push
pop
xor
fwait
mov
stc
pmulhuw
adc
sub
add
and
sbb
or
js
fiadds
adc
stc
jl
add
cmp
add
cld
lret
call
add
pop
sub
nop
pop
cltd
and
test
lret
dec
fsubrs
and
outsb
jae
push
mov
shll
mov
ljmp
pop
mov
cmp
inc
add
mov
aas
cs
shrl
add
ljmp
clc
iret
and
mov
jle
setno
lods
mov
xor
in
ja
add
hlt
xlat
iret
cmc
xor
hlt
lds
rorb
cmp
and
rolb
es
js
loop
adc
stos
outsb
xchg
xchg
or
cwtl
fsubrs
addb
inc
ss
dec
and
loop
addb
sbb
clc
cmp
pop
dec
leave
shrb
mov
and
xor
addb
movsl
mov
pop
sbb
mov
sbb
shll
cltd
or
adc
outsb
imul
hlt
push
mov
addr16
movsl
jo
add
xlat
mov
pop
xor
push
sbb
fcomps
insb
adc
int3
shl
stc
movl
and
sub
loope
mov
xor
cmp
add
nop
xchg
sbb
mov
cwtl
cwtl
insb
fsts
push
cmc
cmp
mov
cltd
cli
xchg
es
xchg
loopne
add
add
movb
push
xchg
add
lods
mov
add
mov
leave
cmpsb
addl
xchg
in
jmp
xchg
mov
enter
mov
arpl
int3
pop
add
sti
addb
adc
xor
lret
add
inc
mov
arpl
jmp
pushw
or
jmp
mov
into
or
cmp
repnz
add
and
cmp
cltd
mov
push
xchg
aad
pop
add
inc
shlb
jno
adc
sub
and
fs
add
dec
xorl
mov
or
adc
imul
repnz
sub
cwtl
out
push
mov
iret
lret
sbb
and
add
add
or
push
addb
repnz
mov
push
loopne
mov
pusha
add
and
fbld
mov
push
divb
jae
dec
mov
or
adc
pop
xchg
out
or
mov
add
ds
mov
lea
jg
add
xchg
add
xor
adc
mov
add
lds
adc
sub
xchg
xchg
dec
mov
add
les
loop
xor
sub
movsl
insl
pop
cltd
push
inc
ljmp
leave
or
or
cmp
jmpw
add
mov
pop
xor
test
inc
jmp
add
das
push
pusha
add
mov
les
cmp
rcll
add
push
bound
xor
adc
jg
int
push
incl
cmpsb
or
cwtl
mov
call
jne
inc
sub
mov
test
add
pop
jae
adc
repz
loopne
movsl
push
ljmp
repz
xchg
shrl
sub
dec
in
adc
ret
incl
testl
dec
iret
adc
test
push
dec
fildll
into
fbstp
stos
and
data16
loop
mov
cmp
jmp
hlt
push
inc
add
dec
xor
sub
les
mov
lods
push
cmp
aad
xor
pop
jecxz
mov
and
daa
mov
jmp
inc
mov
add
int3
inc
add
jg
lcall
xchg
jle
add
jmp
arpl
add
pusha
add
fsubl
xchg
pop
sbb
les
mov
outsl
and
ficoml
fucomp
rcll
or
sti
sub
mov
outsl
dec
stos
mov
je
and
add
popa
or
cli
dec
gs
sub
mov
push
cmp
xchg
sbb
fnstsw
mov
xchg
dec
pusha
add
fcmovnbe
mov
cmp
push
pop
out
fwait
std
lds
popa
xchg
mov
fcoms
les
aam
mov
xchg
push
jmp
mov
dec
into
add
adc
push
sti
sbb
cmpsb
xchg
push
movsl
jp
adc
sti
or
loop
push
add
push
les
enter
lcall
stos
in
mov
popa
jg
ret
jle
add
addb
dec
lods
int
lcall
jle
add
movb
push
fdiv
cmpsl
and
jmp
push
mov
lret
cmc
or
jg
add
repz
cmp
xchg
mov
jnp
les
popa
adc
test
mov
mov
ljmp
test
sub
cltd
mov
std
push
push
shrl
jns
mov
andl
roll
movsl
or
sbb
jns
add
loopne
jae
out
jae
testb
loop
inc
movb
ss
dec
addb
dec
xlat
mov
add
xchg
pop
or
out
addb
aad
into
push
add
add
in
loopne
ficoms
loop
leave
push
dec
jno
imul
xor
outsb
sbb
cs
add
mov
mov
add
push
push
jp
fdivs
push
jmp
pop
ss
jl
xchg
adc
lea
packuswb
stc
jae
sar
jnp
lock
aaa
idivb
mov
outsb
mov
movsl
int3
cmp
and
xchg
jecxz
add
bnd
popa
fcmovu
cli
sbb
mov
or
push
mov
xor
sub
push
arpl
popf
repnz
add
mov
add
cmp
xorl
cmp
aas
mov
dec
inc
add
adc
scas
push
inc
add
dec
inc
add
bound
adc
ljmp
dec
repnz
les
cmp
je
sub
add
add
enter
jecxz
popa
test
aad
cmp
pop
mov
add
movsl
ds
es
out
add
push
xchg
rcll
add
sbb
leave
inc
mov
inc
sbb
jae
sub
add
cmpsb
push
add
aad
add
xor
mov
gs
clc
xchg
leave
push
scas
mov
or
addb
shll
lcall
pop
xlat
test
call
repnz
lcall
and
pop
je
add
insl
iret
mov
mov
pop
dec
fists
rcl
loopne
xor
add
jne
test
ret
mov
loopne
lds
and
jl
xchg
pop
mov
das
push
mov
or
add
addb
jp
movsb
cmc
dec
jp
cmp
mov
scas
outsl
fldcw
and
mov
test
or
pop
mov
and
outsb
cwtd
iret
push
add
pop
dec
mov
lret
xorl
out
rorl
mov
jmp
cld
ficoms
add
ja
shlb
pushf
outsl
and
into
mov
xor
xchg
je
add
ja
cmp
rorl
and
mov
mov
push
ret
add
out
lock
nop
jecxz
add
cmp
lock
dec
xor
add
adc
xor
fimuls
gs
cmpsb
mov
outsl
sub
in
inc
cwtl
add
jns
stos
inc
add
xchg
fstpl
push
add
sahf
cli
subl
adc
add
enter
ret
inc
lods
jbe
daa
inc
add
push
in
or
imul
xor
out
pop
cmp
enter
cld
jns
jmp
and
fldenv
mov
scas
pop
hlt
cmp
les
fadd
cmp
add
les
adc
out
int
idivb
dec
push
lods
mov
xchg
xor
push
push
xlat
fdivl
pop
loop
add
shrl
mov
mov
pop
js
ficomps
push
push
enter
and
add
inc
pop
es
and
push
cmp
xor
adc
loope
xlat
ss
cmp
adc
mov
test
pusha
add
add
cmp
mov
dec
add
daa
mov
imul
mov
jecxz
add
sti
and
lods
adc
jne
nop
sbb
aaa
pop
jbe
cmpsb
ret
idivl
cmpsl
cs
mov
fs
in
mov
scas
lret
mov
mov
sbb
pop
in
movsl
and
xor
dec
jo
mov
add
mov
sbbl
insl
sub
dec
push
and
popa
sbb
add
lods
inc
push
lahf
into
into
dec
fstl
cmp
nop
int3
pusha
add
cwtl
bound
call
fcoms
mov
cmp
test
fldcw
imul
push
add
imul
push
out
sub
test
dec
dec
cmpsb
mov
mov
dec
add
inc
movsb
xor
and
or
fldenv
addb
or
int
insl
sub
push
push
xchg
mov
mov
or
daa
test
addb
sub
ss
add
inc
xchg
data16
movsb
jo
div
addr16
addl
push
jmp
jge
mov
xor
in
es
cwtl
xchg
cs
add
je
lret
push
in
add
add
inc
cmp
cmp
inc
add
fstpt
push
jecxz
stos
outsl
mov
call
dec
shll
or
dec
cmp
jbe
jne
pop
add
add
inc
iret
dec
jnp
mov
or
fwait
outsb
pop
dec
adc
or
out
popa
lcall
ljmp
xor
je
pop
dec
push
or
ja
daa
outsb
or
add
dec
mov
jnp
adc
jmp
mov
mov
cwtl
hlt
push
inc
and
add
sub
mov
adc
add
xlat
lcall
mov
lret
dec
scas
pusha
add
push
pop
sub
scas
add
in
add
cltd
inc
add
repz
loopne
push
cmpsb
ret
aaa
jmp
test
das
fwait
mov
mov
movsb
rol
or
adc
pop
jae
test
je
fdivl
jmp
dec
and
test
inc
add
cmc
mov
add
sbb
call
push
arpl
pushf
addr16
or
pop
adc
aas
push
or
mov
add
sub
add
clc
jns
add
jnp
cmc
push
xchg
in
mov
mov
int3
jno
aam
cmp
dec
or
insl
pop
xchg
sbb
test
mov
fs
add
mov
test
sub
sbb
addb
push
mov
cmp
sub
sahf
xchg
aam
dec
rolb
arpl
subl
and
data16
jg
xchg
sub
notl
xor
repnz
bound
push
adc
fbstp
cli
cs
add
push
rolb
daa
mov
jns
push
add
nop
push
idiv
inc
add
add
aaa
pop
inc
push
mov
cmp
cmp
fidivl
bound
mov
push
jmp
push
rcll
pop
adc
cmp
xchg
sbb
aaa
cs
add
or
cwtl
cwtl
push
loopne
sub
call
add
and
fsts
ret
shr
mov
add
mov
push
push
and
mov
pop
insb
mov
incb
add
xor
mov
loopne
jo
pop
fadds
clc
std
pop
cmp
fistpl
arpl
shr
xor
cmpsl
adc
lods
cmp
lods
arpl
ret
push
jnp
jmp
cli
scas
push
pop
sti
mov
add
into
mov
das
lcall
fimuls
pop
lds
pop
cmpsb
call
shll
fwait
mov
in
xor
xor
lods
nop
call
and
in
sarl
add
cld
jp
add
hlt
rol
add
xchg
scas
xor
pop
jmp
push
fimuls
dec
out
and
jle
mov
add
loop
je
inc
call
add
jo
test
xchg
rcr
adc
fwait
mov
and
pop
mov
inc
add
xchg
test
cmp
in
cmp
pop
jns
add
subl
cltd
mov
push
add
js
insb
fsubr
sub
and
std
enter
xchg
cwtl
es
jae
mov
push
add
jp
push
mov
sub
pop
inc
dec
inc
sub
stc
pop
les
or
xchg
or
mov
bound
sbb
clc
cld
jp
add
mov
cmp
dec
adc
cmp
xchg
lcall
xor
dec
jbe
scas
push
dec
movsb
mov
fs
in
les
nop
sub
push
inc
add
add
inc
int
add
in
js
inc
xchg
rcr
sub
cmp
test
mov
mov
add
inc
divl
or
mov
xchg
mov
fbstp
xchg
adc
jns
fdivl
mov
out
push
xchg
das
mov
pop
jg
bound
mov
mov
fcom
mov
bound
fadd
add
jl,pt
and
mov
mov
push
icebp
adc
xchg
gs
fimuls
xor
lea
fidivrl
pop
or
xchg
sub
jl
add
enter
mov
ds
aaa
dec
pop
mov
dec
fs
dec
sub
call
xor
jnp
popa
cmp
xor
test
add
or
in
insl
out
or
aad
mov
mov
mov
add
addb
or
test
mov
aaa
dec
rorb
sbb
inc
add
fdivs
addr16
add
sbb
mov
xchg
push
test
mov
das
or
add
addb
dec
jle
mov
dec
dec
je
add
sub
jb
add
int3
stos
cmp
add
addb
sbb
mov
inc
cltd
jno
in
cwtl
or
mov
add
cs
pop
lods
cs
inc
jg
loope
mov
loope
scas
fsubrl
inc
test
add
repz
push
in
jne
aam
cld
mov
cwtl
mov
jbe
and
sub
lahf
shlb
ss
push
dec
daa
dec
mov
movsb
jecxz
jmp
inc
add
outsb
arpl
lods
lds
pop
ret
pop
xor
dec
pop
sbb
jb
inc
add
adc
mov
repz
add
lds
jmp
shrb
cli
popf
ret
push
test
sti
sti
std
iret
repnz
inc
add
pop
adc
jp
rorb
add
add
gs
popa
push
out
jo
ret
repnz
push
add
js
or
shll
xchg
lds
add
ret
out
in
arpl
jmp
mov
popf
loope
add
or
dec
pop
push
rclb
in
ja
rep
daa
iret
mov
pop
jle
sub
nop
iret
adc
iret
fld
add
xor
aam
jns
or
add
shll
daa
mov
xchg
repnz
add
adc
push
pop
inc
out
dec
aaa
rcrb
add
neg
addl
mov
and
mov
and
mov
aad
nop
loope
test
test
adc
pop
push
add
lock
mov
or
rolb
adc
lock
ret
dec
std
movsl
sbb
mov
insl
dec
lret
sbb
dec
mov
sbb
inc
fistl
and
loopne
pop
and
cmp
rol
add
adc
add
insl
xor
movsb
jmp
jbe
sub
xlat
jp
mov
and
push
ds
aas
inc
cmc
test
in
lret
xor
push
add
add
push
incb
popf
cmp
sbb
or
add
sub
cmpsl
pushf
scas
sub
js
adc
mov
pop
orl
loope
cli
int3
pusha
add
insb
test
bound
enter
inc
jg
sub
addb
mov
jge
sti
rolb
addb
iret
jo
jnp
mov
pop
ja
imul
and
jo
add
mov
pop
mov
mov
test
adc
arpl
push
sub
adc
add
call
fsubs
jp
mov
adc
testl
cmp
nop
loop
add
test
sbb
pop
sbb
cld
mov
stos
scas
mov
xchg
int
xchg
insb
cmc
sbb
sub
lcall
rorl
scas
mov
into
ja
jp
jecxz
and
dec
dec
outsl
lcall
mov
sti
jne
sbb
xchg
cwtl
fdivrl
fldenv
xchg
inc
inc
daa
cmp
add
jecxz
xchg
add
pushf
mov
cwtl
xor
mov
jnp
cmpsb
dec
add
and
stc
xchg
stos
add
mov
mov
lea
cmp
add
push
ja
or
xchg
in
loopne
loop
roll
shl
ret
mov
mov
jecxz
add
push
repnz
imul
roll
sbb
add
jmp
inc
add
stc
mov
inc
add
das
and
dec
addr16
sbb
push
call
add
xchg
jge
or
xchg
jo
sub
xchg
dec
jo
cmp
jecxz
test
cmp
out
xor
fwait
int
add
imul
push
mov
pop
cwtl
xor
les
mov
xor
jmp
push
enter
addb
cmp
push
lret
add
add
clc
xchg
add
push
test
dec
xchg
inc
add
jmp
dec
jmp
mov
fwait
mov
dec
cld
jg
or
icebp
xor
jmp
jp
dec
dec
movb
das
push
add
jecxz
clc
popf
sub
and
cli
push
push
jmp
or
mov
movb
sub
fsubs
and
outsl
push
gs
mov
push
dec
not
inc
add
ret
enter
mov
jb
add
and
push
outsb
ret
jp
dec
scas
rsqrtps
fsubl
dec
pop
fstl
cmp
clc
jle
rolb
into
test
add
add
or
push
test
cmpsl
mov
pusha
add
sahf
rorb
and
int3
pop
sub
sahf
add
rolb
stos
loopne
add
adc
add
mov
lods
add
add
push
push
pop
jge
lahf
sbb
dec
mov
andl
into
push
push
call
dec
jb
inc
mov
cmpsb
cwtl
mov
add
inc
xor
cmove
fistpll
repz
imul
fstl
jne
adc
add
add
add
jmp
xchg
dec
xchg
arpl
dec
sub
or
add
push
lahf
test
stos
push
repz
test
les
addb
pop
mov
jnp
inc
add
sbb
add
into
inc
scas
sbb
fwait
hlt
cs
adc
push
add
fisttps
insb
push
sub
das
xchg
pop
mov
add
adcl
xor
sti
rcll
mov
out
mov
in
popf
jp
mov
sti
data16
dec
fistps
cli
lret
stc
jmp
add
out
lahf
call
xor
jns
add
sbb
mov
dec
sti
repnz
push
sbb
jg
cmp
dec
pusha
add
jl
sbb
xor
dec
sbb
test
cs
adc
dec
jle
dec
jns
xchg
mov
lret
and
dec
xor
call
lahf
mov
sbb
js
push
cltd
adc
call
or
nop
pop
test
loopne
mov
add
add
sub
out
scas
and
jb
and
loope
mov
hlt
fisubs
adc
mov
adc
add
fwait
call
jo
pmaddwd
sbb
mov
add
pop
aas
out
mov
add
add
cli
dec
jp
mov
fs
les
sub
stos
xchg
test
dec
pop
iret
cs
xchg
dec
repz
cmp
test
sbb
xchg
pop
fwait
lret
push
xor
fwait
inc
add
cmp
cmpsl
repnz
mov
iret
insl
dec
jle
adc
dec
aam
daa
test
jo
sub
sub
aam
in
loopne
push
insb
clc
hlt
lret
popf
cmpsb
mov
add
xor
add
add
xchg
lret
rolb
and
xor
pop
mov
mov
cmp
cvtdq2ps
out
jns
out
mov
cli
or
es
add
call
add
mov
push
fildl
stc
movb
add
insl
iret
rolb
jecxz
pop
adc
pop
push
dec
std
xor
jbe
add
das
lret
mov
lret
test
call
outsb
je
cld
jb
add
leave
add
stos
push
fisubrl
or
imul
dec
ret
mov
movsb
add
icebp
jb
push
or
mov
test
jno
faddl
xchg
in
jno
inc
cwtl
mov
add
negl
ds
je
add
dec
jg
mov
pop
stos
fadd
in
add
add
jge
inc
pop
mov
cmp
addb
data16
and
xchg
jle
dec
pop
jno
sbb
mov
sbb
push
lea
xchg
lods
popf
dec
xor
lret
or
sub
fsubr
sahf
adc
sahf
mov
ljmp
hlt
ret
jl
rcr
sub
aam
addb
add
xchg
out
mov
or
insl
jmp
push
mov
mov
cmc
sub
pop
daa
dec
scas
test
push
cmp
aaa
jecxz
in
xchg
popf
out
loope
dec
and
ss
data16
daa
bound
fstpt
leave
inc
mov
rolb
mov
jb
mov
repnz
les
into
lahf
in
inc
mov
std
ret
mov
add
push
mov
inc
inc
sarl
mov
inc
jg
pop
nop
push
and
imul
add
xchg
repnz
mov
shll
cmp
loop
xor
repnz
cmp
push
mov
xor
jp
adc
jno
fwait
mov
mov
xor
add
adc
adc
xchg
shrl
add
or
cwtl
mov
add
ljmp
cmpsl
aaa
jge
aaa
fsub
outsl
inc
add
sbb
and
iret
jecxz
sti
xor
add
add
add
mov
mov
divl
add
inc
and
lea
add
add
add
lods
cmp
add
cmc
and
insb
inc
pop
arpl
faddl
lret
mov
pop
jl
xor
incb
mov
stos
aam
inc
stc
js
movb
adc
xchg
ret
xchg
mov
sarl
enter
data16
push
jae
repz
push
ss
mov
dec
xor
mov
xchg
add
fimuls
or
add
add
push
or
adc
enter
lods
adc
jecxz
rolb
pusha
add
rclb
mov
ljmp
dec
repz
push
inc
add
push
push
outsl
push
fcompl
xor
xchg
out
jp
sahf
out
jp
lcall
pop
fisubs
add
jnp
insb
out
add
dec
mov
sahf
das
ror
add
xlat
pop
call
loop
dec
or
push
mov
in
or
dec
pause
push
xor
fstpl
popf
cmp
sbb
add
pop
or
add
mov
xor
ljmp
das
sbb
and
adc
add
xor
pop
jle
dec
jae
jecxz
incb
add
add
xchg
fsubr
lahf
fisubs
lret
fsubs
xchg
mov
mov
push
pop
addb
xor
mov
mov
jg
cmp
add
movb
add
test
lea
inc
add
sbb
mov
push
sbbl
add
test
mov
or
out
cwtl
in
das
es
lahf
int3
mov
inc
jnp
fdiv
les
outsb
test
sub
ret
fldenv
aaa
lret
jl
sub
repnz
mov
pop
cmp
add
lahf
maxps
in
int
addb
xlat
cli
repnz
inc
pop
push
fs
lahf
sub
xchg
lret
or
mov
pop
and
sbb
add
push
fldenv
push
jne
push
lods
xchg
iret
xor
sarb
fdivl
lods
cwtl
lods
ret
add
dec
sahf
sbb
ss
push
int3
cld
enter
add
ja
sub
ljmp
dec
mov
dec
xor
jle
pop
rcll
xchg
dec
push
shlb
add
sbb
dec
mov
out
jns
push
add
add
dec
mov
dec
push
movb
sbb
add
sub
stc
sub
push
mov
add
insb
repz
mov
imul
call
adc
stos
cmp
into
jecxz
jb
rolb
ret
xor
aas
subl
mov
xor
out
mov
xchg
icebp
ret
push
jmp
cmp
nop
mov
add
xchg
sub
jmp
sarl
repz
outsl
adc
sub
push
cmpsb
aad
out
mov
add
mov
add
push
add
cmp
jae
xchg
jb
loop
fstpl
jne
mov
cltd
jp
ljmp
testb
add
jno
je
sub
daa
fiadds
fs
mov
add
xchg
cmp
lcall
add
push
fsubs
dec
in
jno
movsb
jb
and
pop
cli
xchg
daa
sbb
sbb
cs
cmp
add
xor
push
lahf
and
jecxz
cmp
aad
add
jno
add
sbb
jae
loop
xor
out
out
test
mov
mov
enter
ficoml
aam
or
scas
fildll
mov
insl
mov
pop
movsb
inc
dec
and
movb
pop
andl
mov
jb
adc
aas
es
add
scas
test
cmpsl
inc
push
xor
cmc
mov
pop
mov
push
jb
lret
dec
adc
mov
fistl
inc
add
mov
std
pusha
add
jl
pop
pop
cmp
mov
fstps
pop
ja
jb
adc
add
frstor
add
cmpsl
inc
pushf
imul
jae
lret
sbb
cltd
data16
pusha
add
add
aaa
out
leave
cmpsl
add
ja
stc
push
lret
outsl
fldcw
mov
cmp
xchg
addb
mov
dec
mov
sbb
cmp
push
mov
add
leave
nop
mov
pushfw
cmp
repnz
and
push
mov
inc
add
in
or
popf
cltd
adc
loopne
add
or
in
loopne
ds
jecxz
jmp
inc
add
cmpsb
push
add
aaa
jmp
adc
mov
cmp
fwait
lcall
loope
cmp
dec
popf
es
add
add
mov
mov
inc
add
fstpl
dec
scas
jmp
add
mov
jnp
mov
or
jg
stos
push
in
jae
sbb
jp
mov
out
add
lods
adc
addb
cmp
add
fs
cmc
enter
in
inc
add
xchg
xchg
push
add
mov
or
dec
out
mov
idivb
add
repnz
jne
repnz
or
inc
add
push
stos
out
notl
imul
sbbl
xor
mov
pop
jg
mov
test
addr16
cld
xor
and
cmp
dec
cmpsl
mov
add
fdivp
dec
addb
xchg
mull
aam
push
mov
lret
or
cmc
outsl
jle
ljmp
sbb
cmp
mov
or
fs
popa
ret
stc
jle
loope
add
inc
add
jbe
cwtl
shld
out
sub
pop
push
loop
pop
scas
idivb
arpl
lea
cmpsl
sub
cmp
inc
add
and
sub
and
inc
jae
inc
add
dec
push
test
jne
add
test
pushf
fisubs
and
xor
push
sub
popf
adc
inc
adc
adc
fadds
xchg
stos
and
nop
xchg
dec
mov
jbe
add
in
push
bound
mov
int3
in
dec
test
mov
test
es
jle
inc
enter
sbb
xor
lahf
mov
mov
inc
jge
mov
movsl
lret
ds
ljmp
mov
aas
lds
push
mov
add
sub
cmp
imul
call
popf
pop
call
jmp
pop
addb
call
xchg
dec
shl
repz
and
mov
sbb
push
dec
aad
out
enter
add
ret
rolb
push
push
jb
add
sub
mov
sbb
inc
add
cmp
add
icebp
adc
pop
test
adc
mov
xchg
or
dec
in
aam
add
sarb
push
outsb
cmp
and
movsb
pop
mov
and
xchg
lods
out
or
add
add
sti
mov
adcl
add
add
jmp
ret
or
mov
jnp
sub
dec
popf
call
std
inc
add
in
jmp
rcrl
out
push
sub
mov
arpl
mov
out
lahf
xchg
mov
loop
pusha
add
xchg
mov
and
add
sub
insb
xor
jne
add
jnp
test
xorl
mov
adc
das
xlat
aad
or
mov
cmp
xor
in
xor
jecxz
bound
test
add
fwait
les
dec
in
and
out
or
xchg
das
mov
test
xchg
jae
out
cmp
repnz
ret
lods
mov
add
lcall
loope
pop
daa
adc
aad
adc
sbb
enter
jmp
sar
popf
rcll
aas
fsubrl
out
fnstcw
add
movb
or
adc
aam
jg
rcrl
int
sbb
push
add
fnstenv
jno
lock
ret
pushf
mov
adcl
pop
stos
jg
rolb
add
inc
or
mov
nop
stos
and
call
cmp
sub
fidivs
or
mov
or
loop
add
or
jo
pop
je
inc
add
dec
insl
out
cmpl
sbb
pusha
add
nop
cmpsl
dec
sbb
sub
add
adc
add
adc
mov
xchg
shll
rcrl
lock
cmp
adc
jge
addb
cmp
rorb
ficoms
jp,pn
dec
movsb
movsb
aam
push
lret
fsubl
pop
xchg
add
outsb
mov
mov
or
gs
sbb
add
jns
xsaves
mov
add
daa
jl
jl
mov
add
fs
mov
add
out
xchg
and
stc
pop
jae
subl
ret
add
cltd
add
pop
cli
out
sbb
mov
xor
jns
sbb
dec
call
lods
out
in
aas
scas
cmpsb
iret
mov
add
lret
pop
rolb
test
icebp
dec
push
pop
into
lahf
push
add
xchg
fmull
lds
mov
inc
pop
sub
mull
fmull
add
xchg
jne
mov
adc
lret
dec
gs
add
pop
out
lods
insl
lret
add
push
outsb
jle
cltd
xor
fcmovnu
and
inc
rcr
lods
shrd
adc
add
sub
push
outsb
daa
pop
add
dec
and
pop
movsb
ficompl
cmp
xchg
testb
mov
lock
sub
in
add
jg
imul
pop
push
cmp
scas
daa
add
ds
stos
mov
das
enter
sub
jnp
jg
add
cmp
add
jbe
xor
pop
ret
mov
or
xorl
popa
addb
popa
fstpl
and
jg
pop
addb
aaa
xchg
std
ja
call
inc
mov
push
addb
shll
pop
or
stos
add
xlat
in
or
xchg
ljmp
inc
add
push
int
fsubs
add
mov
cmp
fwait
call
aas
outsl
rolb
lock
std
inc
mov
jns
outsl
and
adc
mov
pop
addb
push
repnz
clc
fisubs
arpl
inc
sbb
in
push
push
int
add
xor
rolb
mov
daa
int
jp
add
and
xchg
dec
jae
cmp
cltd
movb
and
add
leave
daa
jne
sub
xor
xchg
shr
daa
adc
and
or
jns
scas
repnz
pusha
add
mov
enter
add
add
test
add
xor
les
sub
stc
lods
in
iret
out
sub
adc
mov
hlt
xchg
mov
push
cmpsl
sub
es
push
add
cmp
mov
filds
out
int3
outsb
hlt
mov
push
adc
inc
sbb
pop
pop
mov
xchg
cltd
mov
push
add
int3
stos
push
fstpl
xchg
xchg
leave
jns
add
mov
pop
jne
mov
pop
sahf
xchg
mul
cmpsl
xor
nop
dec
clc
scas
xor
mov
loop
es
addb
ja
call
fdiv
test
cmpsb
inc
add
xor
aam
mov
add
mov
adc
cli
addl
and
imul
repz
stos
jmp
movsl
jle
cmp
pop
push
fs
and
add
into
sti
xor
clc
or
out
pop
adc
add
and
lcall
xor
add
add
push
addb
or
outsb
mov
cwtl
cwtl
ja
stc
push
fstps
sub
xchg
push
fdivs
add
cmp
mov
jl
inc
add
mov
nop
out
pop
inc
and
frstor
fmull
clc
dec
mov
popf
test
scas
loope
int3
xor
sub
jno
adc
add
fbld
mov
jg
jge
or
je
jne
je,pt
outsl
shll
xchg
cmp
pushf
add
add
je
nop
arpl
stos
sahf
mov
arpl
add
push
mov
sub
fstl
push
mov
lret
in
inc
xchg
adc
push
lcall
fbstp
add
inc
shll
aad
xchg
mov
add
enter
cltd
mov
addr16
xor
imul
rcrl
and
nop
out
icebp
dec
mov
mov
dec
jnp
mov
mov
add
incl
out
aaa
adc
data16
add
aas
aaa
loope
ret
jecxz
adc
scas
mov
lods
out
adc
inc
add
xor
fincstp
or
pop
popf
sub
fs
loopne
scas
sub
lock
mov
mov
lods
add
sub
clc
dec
push
sbb
outsb
in
test
dec
lock
insl
pop
mov
insl
cmp
popf
xchg
das
movl
push
add
xchg
imul
jb
adc
loop
ss
xor
dec
sub
xchg
jle
stos
mov
call
int
pop
test
or
push
loop
fisttpl
in
mov
inc
addb
stos
loope
mov
dec
sbb
imul
icebp
mov
fisttpl
addb
sbb
lods
pop
push
scas
pop
pop
lea
fmul
xor
sub
dec
mov
stos
add
rcrb
jbe
jle
mov
add
add
addr16
ret
add
rcrl
fadd
push
fcmovb
add
add
lcall
cmp
cltd
mov
add
and
aam
mov
bound
imull
xchg
lret
dec
cltd
xor
sbb
inc
add
cmp
orl
jb
enter
rolb
add
add
push
xchg
xor
cs
jmp
hlt
lret
add
out
add
sahf
daa
dec
xor
dec
pop
jecxz
insb
push
outsl
cmp
push
leave
les
insl
addb
jnp
push
in
rolb
nop
decb
outsl
or
das
dec
data16
outsl
mov
cmp
sti
add
mov
aam
sbb
pop
sbb
cli
mov
jno
mov
add
add
aam
xlat
popf
jae
movl
movsb
shrl
mov
sub
add
scas
out
or
xlat
iret
cmpsl
idiv
or
add
js
addb
notl
jle
outsl
mov
repnz
repz
fists
cmp
cltd
adc
push
pop
or
addr16
mov
xlat
rcr
push
add
xor
add
mov
add
je
inc
mov
sub
shl
xor
addb
add
sub
inc
or
add
cmc
aaa
lds
dec
add
insb
das
decb
out
cmp
or
cwtl
and
ret
mov
xchg
mov
dec
jl
push
mov
mov
rclb
arpl
out
mov
nop
push
add
int3
xor
adc
test
mov
pop
cltd
or
test
aam
sahf
adc
and
mov
xchg
push
ljmp
pop
and
inc
lea
data16
ss
out
clc
aas
jne
mov
or
inc
add
inc
sub
cmp
in
xchg
hlt
pop
pop
push
jae
pop
rcrb
ret
cmp
xchg
rorl
add
mov
push
lds
sbb
fsubrs
arpl
xchg
fistps
jne
test
into
repnz
stos
cmpsl
push
dec
enter
add
mov
jno
rcrl
les
ret
mov
push
or
cwtl
lcall
daa
cmp
xor
pop
sub
xor
xor
pop
jne
xor
out
jbe
into
icebp
aam
adc
sub
repz
jns
and
movb
out
inc
jbe
fnstenv
sbbl
jae
inc
mov
push
movb
mov
aas
int3
inc
or
in
sub
rolb
fcoms
imul
mov
mov
dec
pushf
push
sub
bound
dec
and
pop
jno
fst
mov
fdivr
push
mov
shrl
pop
push
enter
xor
inc
push
lds
dec
or
inc
add
pop
push
addr16
addl
mov
into
imull
cmp
fsubs
xor
push
mov
icebp
shrl
movsl
cmpsl
rolb
arpl
push
lds
rorb
insl
and
xchg
mov
mov
das
sbb
sti
mov
in
adc
push
add
sbb
mov
bound
mov
inc
add
lock
push
mov
enter
pop
mov
cmpl
add
enter
push
lahf
les
push
rolb
dec
test
addl
jle
inc
dec
add
add
inc
add
cmc
dec
cmpsl
les
dec
pushf
jae
cwtl
mov
push
lahf
push
movsb
dec
out
insb
xor
mov
inc
insl
pop
mov
les
mov
mov
jns
dec
mov
mov
add
mov
xchg
push
mov
arpl
xchg
rolb
adc
aad
mov
out
nop
test
add
ja
inc
lret
lds
jo
in
jecxz
sbbl
pop
ret
cmp
lret
or
andl
sti
mov
insb
mov
ret
xchg
outsb
fcoms
push
lret
movsb
push
and
push
or
add
sub
mov
xor
adc
or
cmpsl
test
jb
das
dec
mov
and
aam
ljmp
js
popa
stos
and
dec
xchg
xchg
mov
xchg
negb
sub
adc
insb
cltd
mov
test
loope
daa
sub
loopne
outsb
in
mov
add
lret
sti
jbe
mov
add
jmp
movsb
enter
std
out
movhlps
push
inc
jle
loopne
push
xchg
jecxz
dec
mov
dec
pushf
cmp
add
sub
push
jmp
test
stos
or
addb
pop
loopne
add
aaa
sub
and
adc
test
or
test
mov
jb
adc
rolb
mov
test
test
aad
lahf
addb
and
sti
insb
test
pop
cmp
popf
test
ja
or
or
jge
add
add
jnp
aas
ljmp
inc
add
movb
fistpl
inc
add
inc
cld
inc
mov
adc
insl
fcmovne
rclb
xor
call
outsl
cmp
xlat
jl
in
hlt
mov
movsb
xchg
adc
dec
push
mov
testb
test
adc
test
add
mov
loopne
add
add
pop
out
mov
inc
add
mov
repz
and
bound
sbb
mov
jns
add
add
and
pop
mov
loop
add
mov
add
add
les
push
arpl
mul
fcoms
popa
fadd
add
andl
xor
cs
cmp
into
aam
add
jb
iret
pusha
add
loopne
push
cmp
add
ss
add
dec
xchg
jnp
inc
into
dec
mov
cmp
sub
pop
mov
push
jno
and
sahf
repz
dec
js
inc
add
cmp
or
pop
jae
add
jo
xchg
xor
push
testb
dec
idiv
fdivrp
pusha
add
ss
lock
ss
jne
dec
cmc
lcall
dec
insb
adc
in
xor
or
or
loope
dec
jbe
cmp
pop
pop
jb
xchg
inc
add
and
movsl
lahf
mov
fadds
outsl
stos
dec
fsubl
push
cmp
in
pop
dec
out
or
or
jb
mov
add
stos
push
add
sbb
lahf
in
cmc
push
rol
std
mov
int3
testb
test
dec
lock
leave
rclb
push
mov
dec
xchg
fimull
ret
pushf
adc
pop
sub
add
jne
in
sbb
push
sub
add
push
lea
dec
and
jnp
popa
fistps
xchg
bound
add
shll
add
jae
sub
ljmp
insl
or
inc
add
adc
pop
sti
movsb
xchg
sub
jp
fsubs
xlat
lds
mov
push
jmp
xor
out
cmp
xchg
notl
mov
dec
xor
add
add
add
push
out
adc
sub
stos
dec
inc
add
mov
call
xlat
mov
shll
fdivrs
testl
les
aas
xor
push
stos
mov
ja
push
out
push
call
jo
sbb
jb
add
dec
pop
cmp
cmpsb
ret
sbb
xorl
cmpsb
icebp
dec
xor
push
push
dec
jge
enter
add
cmc
scas
adc
ficompl
int3
lcall
dec
xlat
addr16
dec
xchg
mov
lahf
jno
lods
mov
fucom
out
sbb
arpl
xor
fs
and
js
in
add
mov
pusha
add
inc
add
out
mov
mov
ds
sub
adc
dec
xor
or
xlat
inc
rcrb
mov
dec
mov
test
and
data16
cmpsl
xchg
jp
dec
loope
add
aam
fs
ret
shrl
fcompl
inc
movsb
jbe
mov
dec
mov
push
cli
xchg
fistps
pop
fs
jge
rorl
stos
xchg
iret
clc
and
add
mov
or
lds
xor
popf
int
nop
sub
movsb
cmp
addb
ljmp
xchg
sub
push
dec
push
mov
push
jle
push
add
adc
inc
sub
add
mov
pop
adc
sub
xchg
clc
mov
dec
add
ret
sub
sbb
jge
pusha
add
pop
popa
loope
jbe
fs
out
popf
imulb
mov
lock
int
insl
adc
xor
jge
sbb
sbb
push
addr16
fidivs
outsl
sbb
xor
add
inc
mov
cmp
notl
mov
aaa
mov
std
jb,pn
add
or
divl
mov
insl
mov
xchg
cmp
sbb
inc
add
shlb
jmp
mov
add
imul
cmp
pop
das
push
xor
push
and
cmpsl
sti
test
add
mov
inc
frstor
addb
out
out
mov
add
push
add
add
inc
add
mov
push
imul
loope
xor
negb
dec
dec
lret
pop
sarl
xor
jb
dec
cmp
outsl
push
sbb
in
pop
mov
cmp
add
daa
xor
cs
add
scas
je
xchg
cs
mov
dec
stc
lahf
nop
pop
jbe
mov
push
mov
and
sub
pusha
add
dec
arpl
lods
dec
outsl
movsl
mov
add
addb
xlat
push
out
sub
out
sahf
in
cli
jns
cmp
mov
xorl
movsl
cmpsb
dec
mov
fcompl
or
inc
or
dec
into
mov
push
fisubl
jnp
cmp
pop
xor
daa
inc
add
xor
bound
or
add
setb
roll
add
imull
xor
xchg
aam
jbe
and
add
test
lcall
sbb
xchg
sub
leave
jl
pop
dec
dec
addb
mov
stc
mov
jmp
mov
loop
inc
push
daa
mov
add
mov
jnp
mov
xor
sub
add
pop
mov
xor
xchg
adc
add
mov
push
lock
cmp
push
lds
in
jns
jmp
fnstenv
jl
jle
xchg
cmpsl
icebp
rcl
cli
sub
pop
ja
push
sar
in
clc
fwait
jp
bndldx
lock
cwtl
out
clc
mov
hlt
loopne
add
imul
gs
sti
dec
xchg
pop
std
mov
mov
insl
test
mov
outsb
fwait
bswap
into
cmc
fwait
bnd
loopne
and
rolb
xor
jmp
xlat
out
les
imul
sbb
popa
fs
sbb
fbld
mov
add
xor
js
mov
add
mov
push
fstpl
ja
push
lcall
fists
push
mov
xchg
pop
lods
test
xor
loop
adc
and
push
loopne
lcall
dec
cmp
shll
fidivrl
push
and
je
cmc
mov
repz
sub
dec
jnp
jmp
dec
addb
movsl
divb
cmp
xchg
pushf
sbb
lcall
lret
add
pushw
mov
sbb
out
insl
cwtl
xor
pop
das
lods
sbb
es
push
add
xchg
push
add
add
add
or
mov
mov
ror
push
xchg
add
pop
mov
pop
stc
adc
loopne
xchg
das
mov
mov
mov
mov
dec
pop
xchg
xor
mov
cmp
addr16
pop
jecxz
adc
inc
inc
add
sub
sub
jae
add
lock
xor
mov
adc
cmpsb
cs
test
push
sarl
xor
sub
addl
cltd
sbb
cmpsb
adc
sbb
add
xor
jmp
sbb
xchg
sub
pop
mov
xchg
xchg
dec
add
outsl
push
add
cmpsl
mov
and
pop
cli
clc
iret
pop
cmc
das
jge
add
cld
loopne
in
jecxz
mov
lret
test
add
jle
test
add
add
sub
sub
lret
xor
xchg
fnclex
in
add
sub
add
add
mov
arpl
rolb
nop
pop
jp
jne
and
mov
aam
inc
movsb
es
xor
sbb
add
fwait
pop
lods
or
int3
mov
addr16
jmp
pushf
jb
rolb
add
cmp
lods
xor
dec
cwtl
mov
pop
mov
jge
out
inc
add
ret
test
pop
or
repnz
mulw
arpl
xchg
push
sub
pop
xchg
stc
cvtdq2ps
add
push
cmpsl
pop
inc
scas
xchg
bound
pop
lea
dec
lret
gs
shll
ret
leave
in
jle
faddp
imul
push
iret
mov
inc
outsb
adc
outsb
or
insb
rcr
adc
fsubp
jmp
pushf
or
and
xchg
xor
mov
push
sbb
cmp
mov
repz
sbb
add
shr
cs
cmp
movb
add
sbb
mov
push
repz
mov
push
add
adc
pop
cmpsb
out
add
push
test
inc
add
test
les
jae
cld
pop
or
add
je
mov
fisttpll
and
sub
mov
jo
add
or
ds
add
icebp
jnp
pop
gs
push
push
dec
clc
pop
sub
addb
xchg
rolb
pop
add
sbb
movb
jmp
lock
hlt
pop
sahf
xor
jbe
and
movb
flds
add
dec
cltd
xlat
inc
add
out
addl
mov
pop
mov
add
cmp
shrb
xchg
jp
addr16
mov
pushf
mov
add
addb
rolb
jle
xchg
dec
stc
mov
inc
adc
aas
sbb
rolb
add
test
add
fisubs
inc
add
mov
inc
add
lods
insb
jb
pushf
out
xchg
lock
pushf
and
jle
add
add
cmpsb
sub
add
sarl
inc
add
ret
mov
in
test
add
popf
ret
jb
rorl
add
xor
dec
pop
cmp
adc
xor
idivb
add
pop
cwtl
sahf
mov
push
dec
pushf
test
xor
into
xchg
addb
sbb
sub
mov
arpl
push
sahf
or
ds
sahf
xchg
ret
jmp
es
inc
add
jle
add
push
sbb
adc
scas
jno
push
fadds
mov
mov
lcall
lods
mov
in
mov
mov
or
mov
cmp
xor
ds
pop
fstpl
mov
pop
lahf
cmpsb
scas
scas
sub
push
mov
mov
data16
pop
je
push
call
mov
mov
add
sti
cli
lods
dec
mov
xor
sarl
xchg
test
sub
jne
fisubl
mov
add
ffree
in
rolb
mov
rolb
fwait
mov
lea
stc
js
add
pop
aas
inc
mov
negb
jmp
sbb
adc
in
pushf
push
mov
clc
mov
xchg
push
mov
xor
adc
jbe
mov
stc
jmp
xchg
lmsw
cltd
sbb
outsl
xchg
jle
cmpsl
xchg
sbb
cwtl
add
lahf
mov
mov
jo
jo
fidivl
mull
outsl
xchg
rolb
sete
in
xor
and
pop
std
outsb
icebp
mov
push
add
push
adc
dec
sub
sbb
pusha
add
add
out
jl
add
xchg
xchg
pop
cli
outsb
ror
gs
addb
add
push
jo
add
and
stos
cmp
lock
lret
movsb
aas
sbb
sti
jle
mov
lret
push
add
sbb
ffreep
add
insb
iret
add
cmpl
hlt
dec
gs
fstps
add
sub
aam
mov
stos
and
pop
xchg
pop
adc
movb
add
jnp
cmp
and
xchg
roll
push
cli
add
les
mov
mov
dec
xchg
cmc
sub
and
imul
add
xor
xchg
test
hlt
jle
stos
xchg
daa
jno
stos
fimuls
add
pusha
add
xlat
jp
int3
out
jg
loopne
sub
add
test
push
add
imul
mov
push
xor
add
jbe
addr16
cmp
cmp
hlt
cmp
lret
aas
loop
movsb
cmp
xchg
bound
jecxz
dec
scas
iret
xchg
inc
leave
cmp
mov
ret
xor
ja
dec
pop
push
imul
fdivl
cmpl
int
in
lds
push
out
inc
fmull
rolb
add
add
daa
es
inc
add
shlb
jns
dec
les
dec
dec
insb
insb
iret
out
sub
shr
add
ret
add
adc
inc
add
rcrb
mov
cli
fdivrs
stc
mov
xor
std
inc
gs
dec
outsb
and
fwait
pop
arpl
sbb
xorl
xchg
or
ljmp
jecxz
mov
in
add
push
je
mov
scas
in
xchg
cltd
out
xor
lret
mov
inc
add
int
and
cli
pusha
add
pushf
call
popa
jecxz
enter
sbb
mov
adc
cmp
push
sub
inc
pop
jbe
or
pop
sahf
push
xorl
or
sub
js
pop
and
sub
lods
bound
jno
pop
sub
scas
adc
popf
xor
jle
pop
addb
lds
xchg
add
les
movsl
pushf
mov
mov
addr16
add
pop
push
loope
push
arpl
inc
mov
jnp
cmpsb
cmp
jg
fidivs
mov
mov
stc
mov
ljmp
out
or
xchg
sub
cwtl
negb
inc
add
pop
lods
pop
stc
lret
jno
fsubrs
sarl
push
and
rcrb
test
adc
cld
clc
outsl
and
jnp
add
ljmp
mov
and
mov
sarb
push
sti
call
sbb
notb
cmpsl
rol
cli
out
adc
mov
je
push
xor
ret
pop
ja
test
inc
addb
fisubs
mov
ss
sub
pop
icebp
in
xlat
in
rolb
push
int
xchg
mov
add
icebp
fnsave
inc
add
addb
cmp
sbb
inc
aas
addb
mov
iret
psubsb
fst
jo
add
xchg
popf
lods
ret
jp
stos
loopne
js
jns
push
into
jb
insl
mov
out
lret
pop
xor
mov
into
test
xchg
in
lods
adc
fdivs
movb
jns
icebp
adc
loopne
dec
xchg
sbb
pusha
add
cmc
icebp
sbb
jno
sub
mov
aas
insl
xchg
insl
jne
xchg
stos
and
dec
fldt
cmp
in
xchg
mov
push
xor
ss
mov
push
pop
sbb
sti
into
jle
jge
mov
addb
adc
sbb
dec
dec
add
push
add
push
xchg
js
push
lods
xor
hlt
ret
out
je
jecxz
sbb
jg
and
das
stos
fcmovne
fbstp
loopne
xchg
and
pop
fs
std
in
pop
jmp
aas
pop
movsb
pop
mov
inc
dec
cltd
or
gs
jnp
add
adc
xchg
sbb
popf
imul
lret
addb
dec
mov
add
testb
inc
mul
mov
fnsave
xor
cmp
ja
mov
jae
cmc
mov
shlb
jmp
mov
stos
cwtl
loope
jle
mov
cmp
xor
clc
test
add
shll
add
in
inc
add
sbb
cmpsb
mov
mov
into
cmp
sbb
shrl
add
das
test
iret
dec
loop
xchg
shll
cmpsl
int
jb
in
out
add
sub
arpl
fs
shll
jl
fisttps
pop
mov
add
loope
inc
add
sub
add
add
addb
add
dec
ljmp
mov
push
jle
add
mov
movb
jl
xchg
add
sub
aaa
daa
push
push
dec
push
cltd
mov
aad
dec
jne
jge
loope
stos
or
aad
out
imul
cli
inc
xor
cmp
cmc
stos
imul
inc
add
jecxz
insb
je
push
fbld
lea
adc
jbe
and
or
pop
dec
mov
loopne
sbb
aas
or
jle
clc
add
jg
rolb
jp
xchg
aaa
pop
repz
sti
mov
jns
sbb
dec
dec
in
arpl
push
fistps
and
jno
scas
pusha
add
add
adc
add
int
gs
add
lods
or
add
imul
cmc
addb
mov
js
movsl
or
add
fnstsw
fstpt
add
sbb
pop
scas
mov
popa
push
sbb
addb
int
jecxz
cmpsl
fiaddl
mov
inc
add
test
loope
adc
inc
add
and
in
bound
inc
sbb
hlt
dec
std
gs
cmovp
jbe
push
mov
aad
or
loope
gs
add
xor
adc
outsl
lret
xchg
push
int3
sbb
add
cmp
inc
rorl
sub
adc
jnp
test
inc
lds
aaa
mov
xchg
movsb
push
jle
aad
loope
or
or
nop
sbb
dec
hlt
arpl
or
fs
add
dec
push
test
or
outsl
pop
ljmp
sbb
add
mov
and
lds
cmp
xor
add
inc
mov
mov
push
int3
push
sahf
fisubl
call
in
cmp
lcall
roll
jnp
mov
imul
cmp
add
sar
dec
pushw
pop
cmc
aam
jns
add
pop
pop
ljmp
mov
int
jae
pusha
add
fsubs
mov
stos
cmp
or
mov
sub
je
add
or
cmp
inc
add
ret
iret
sub
pop
movb
je
dec
jecxz
xor
mov
into
jge
daa
pushf
arpl
pop
mov
xor
clc
stc
jnp
lret
adc
lret
repz
pop
mov
lods
ucomiss
mov
jns
mov
sbb
or
jo
jl
add
in
out
addb
and
xchg
mov
add
ds
outsl
jle
test
add
aas
dec
loop
mov
lahf
cmp
dec
movb
pusha
add
outsb
in
xor
rolb
fsts
test
jno
pop
test
mov
jb
pop
ret
xor
push
lods
lgs
outsl
inc
add
shlb
lret
add
inc
add
add
add
pop
stos
addb
int
mov
pop
sbb
or
imul
mov
xor
sar
push
inc
xchg
jns
mov
mov
mov
add
cmc
jmp
mov
and
pushf
adc
jmp
xor
lcall
scas
push
lret
aam
sub
mov
xchg
or
test
clc
dec
shlb
add
mov
add
inc
add
cmp
push
add
add
pop
mov
or
mov
mov
scas
movsl
push
mov
or
xchg
stos
inc
add
test
dec
xor
and
xor
cmp
push
add
filds
cmc
inc
add
pop
and
fs
std
sub
flds
fxch
out
out
and
out
outsb
mov
or
test
add
adc
pop
adc
outsb
push
loopne
cltd
ja
or
add
call
push
dec
push
sbb
pop
js
mov
add
mov
add
push
push
sti
rolb
jmp
aas
dec
mov
mov
icebp
int3
jge
enter
mov
or
jg
xchg
push
cmp
aad
mov
add
icebp
addb
pop
mov
shll
fwait
dec
xchg
or
dec
aaa
rcrb
aas
pop
iret
push
pop
inc
add
sti
push
je
add
hlt
pop
xchg
pop
mov
add
push
mov
int3
lret
cli
dec
inc
add
cmp
sar
pusha
add
lods
adc
aaa
mov
in
out
xor
jp
jp
cmp
push
add
in
add
les
test
add
xor
adc
xor
shl
inc
xchg
pushf
insl
pop
shl
dec
out
push
enter
movsb
arpl
sub
inc
add
test
or
inc
js
out
and
pop
loop
add
inc
add
fistpl
push
mov
xchg
sbb
inc
add
outsl
hlt
jmp
pusha
add
and
les
das
popa
sub
out
leave
addr16
dec
fwait
call
out
and
sbb
add
in
push
add
clc
ficoml
sub
pop
add
inc
and
inc
add
add
cli
xor
movsl
adc
xchg
shrl
xchg
js
push
xor
or
jle
add
dec
xor
xchg
pusha
add
xchg
fnstenv
push
in
and
arpl
add
add
and
xchg
adc
mov
call
pop
xor
jne
jp
loop
and
push
into
sbb
pop
lea
cmp
in
shll
sbb
mov
jno
lods
cld
sbb
pop
in
cmp
notl
sbb
dec
int
rolb
ds
xchg
add
xor
add
or
lret
les
jnp
add
fimull
daa
pop
lock
inc
add
out
fidivrl
pop
insl
lock
mov
or
jecxz
xchg
aas
outsl
jb
xchg
jo
add
inc
bound
cmp
enter
cmp
enterw
icebp
mov
xlat
sub
out
mov
cmp
mov
sub
lahf
mov
sub
cmc
fstps
jno
sbb
call
cmp
add
lea
jp
les
jecxz
add
dec
fcompl
mov
pop
clc
insb
xor
lret
xchg
fcomi
mov
addr16
jl
loop
adc
into
call
or
aaa
stos
icebp
pushf
xchg
jo
xor
pusha
add
xchg
out
pushf
imul
fstps
stos
sub
iret
sti
fcmovnb
sub
mov
bound
sbb
add
add
shll
repnz
pushf
or
jmp
pop
mov
add
pop
or
add
mov
add
sub
aam
add
dec
in
push
xor
addb
divb
inc
xor
and
imul
je
dec
sbb
jbe
jae
or
mov
add
xor
cld
or
out
shlb
repnz
dec
xor
and
dec
inc
add
lea
add
or
push
add
rorl
sbb
add
dec
push
mov
gs
aas
fistpl
dec
mov
arpl
jns
imulb
add
aaa
fcomps
icebp
dec
jg
addb
mov
fstpt
add
repz
sti
adc
pop
xchg
arpl
movsb
lods
rcrb
lods
ja
scas
icebp
mov
mov
ret
mov
inc
add
enter
push
and
adc
mov
add
inc
add
or
lds
lods
sub
loope
sbb
jle
dec
mov
lahf
outsb
pop
scas
or
in
push
fists
add
nop
mov
jg
inc
pop
add
punpcklwd
movb
xchg
popf
fcmovnu
cmp
scas
test
cmp
push
js
jne
movb
cmpsl
push
xchg
ret
sub
repz
cmpsl
fistpll
iret
out
fstpt
mov
cmpsl
cld
in
jp
scas
add
aam
pop
stc
movsb
gs
add
pop
mov
out
push
mov
out
int
rolb
hlt
add
ds
xchg
xlat
ficomps
aam
jp
inc
add
dec
stos
scas
adc
fmull
xchg
sbb
pop
clc
shrl
push
inc
mov
xor
jg
xchg
lea
push
jb
pushf
fxch
pop
shll
cmp
shlb
das
popa
aad
mov
add
cs
cmp
lods
ficomps
sub
cmp
movb
push
cmpsl
repz
adc
mov
mov
lods
xor
in
shrl
stc
cmp
and
lea
jecxz
fimull
mov
dec
inc
sub
sti
jecxz
sub
daa
lea
js
jno
push
dec
adc
sbb
pop
popa
sub
nop
cmp
add
ja
mov
mov
add
sub
xor
add
mov
cltd
inc
add
sbb
push
mov
in
in
call
and
aad
push
lret
out
mov
xor
add
add
add
sub
add
mov
add
sahf
pop
mov
ds
jecxz
xchg
pop
xor
aam
sbb
xchg
or
mov
test
xor
fisubl
mov
es
lods
mov
add
push
imul
outsb
popf
pop
std
scas
outsl
jno
add
cmp
jae
cld
cmc
imul
or
mov
xor
nop
xchg
pop
fiaddl
mov
add
sub
add
pop
pop
es
push
adc
adc
repnz
loope
inc
xor
sbb
outsb
jnp
sbb
lahf
dec
mov
and
adc
add
xchg
mov
jno
jns
in
or
mov
jbe
inc
add
inc
add
add
into
aad
mov
or
jecxz
xor
addb
add
adc
hlt
ffreep
rolb
sbb
dec
or
mov
pop
xlat
cmp
cmc
add
inc
add
test
add
and
jno
movsb
cmpsb
pop
pop
in
add
push
pop
inc
push
add
add
jb
xlat
cmpsb
dec
pop
stc
adc
adc
inc
add
repz
stc
jne
loope
xorl
mov
outsl
jnp
popf
adc
mov
cltd
test
cli
aaa
mov
cmpsl
ljmp
xor
pop
inc
sahf
pop
es
movb
maxps
pushf
sbb
inc
outsb
lds
pop
cmp
sbbl
jo
dec
dec
mov
cmp
fimuls
add
sbb
outsl
sbbl
add
push
outsb
shll
es
imull
add
dec
leave
inc
test
adc
push
fwait
loope
xchg
cs
sahf
les
aam
int3
jns
sahf
jge
mov
into
push
push
push
xor
dec
inc
jp
popa
pop
mov
or
push
mov
lock
mov
xor
pushf
mov
ljmp
popa
icebp
pop
jnp
movb
std
out
jb
lret
in
mov
xor
pop
out
sub
divl
xor
mov
std
xor
and
push
clc
rcrb
pop
mov
sbb
shll
dec
mov
aad
pop
outsb
hlt
push
sub
stc
in
bound
lds
dec
xor
inc
add
mov
loop
insb
movsl
sub
mov
cwtl
mov
jmp
inc
add
inc
add
xchg
jmp
pop
push
sbb
dec
sub
leave
mov
pop
xor
lcall
add
ds
cmp
pop
nop
daa
mov
jae
imul
sbb
rolb
les
int
push
ss
loope
add
out
add
push
out
add
or
mov
popf
dec
in
xchg
clc
es
lds
add
cmp
xchg
aaa
out
rorb
decl
sub
inc
das
sbb
adc
pop
pop
testl
cltd
movb
or
cltd
cmp
jne
sub
scas
and
jne
dec
in
mov
xlat
icebp
mov
push
pop
nop
add
mulb
mov
dec
mov
stos
js
leave
sbb
repnz
add
push
lret
mov
mov
jb
sti
pop
inc
add
repnz
stos
mov
add
jo
xor
pop
ret
je
xchg
push
mov
mov
in
gs
add
jo
cli
rcll
stc
jo
les
repz
xchg
inc
ret
add
outsb
jle
jge
mov
aam
mov
rolb
addb
xor
mov
sar
push
pop
or
ljmp
jae
js
lahf
popa
pop
cmp
hlt
dec
mov
aad
push
mov
lahf
call
add
divb
jle
scas
sbb
pop
xor
add
mov
out
sub
add
rcll
fucomi
adc
adc
cmp
adc
movsl
outsl
adc
add
lea
aaa
or
dec
cmpsl
lea
js
dec
rsqrtps
fidivs
push
adc
push
flds
dec
mov
mov
add
add
add
and
mov
push
inc
add
mov
ret
les
push
xchg
pop
sbb
sub
cltd
enter
xchg
inc
add
push
mov
xor
cli
inc
cmp
mov
mov
mov
xlat
sti
pop
mov
call
rolb
das
addb
mov
lcall
js
cmp
jb
aaa
fcoms
into
sub
add
jg
mov
insb
push
fdecstp
out
push
lock
add
fsubl
jl
add
rolb
xor
add
repz
inc
mov
cwtl
sub
nop
fcoml
and
sub
or
add
xchg
dec
mov
pop
lcall
iret
xor
jp
inc
add
add
pop
rcrl
cltd
dec
inc
add
xchg
dec
and
sbb
inc
arpl
icebp
xchg
adc
push
movb
sub
rolb
add
mov
mov
add
pop
push
movb
add
loopne
mov
outsl
cli
std
adc
sub
lods
mov
add
or
pop
rorb
ljmp
cmpl
fdivrs
stos
push
cmc
lods
sbb
ret
ljmp
es
addr16
sti
mov
and
xor
add
cmp
addb
outsb
into
cmp
pop
cld
in
and
mov
call
sti
inc
add
sub
outsb
jb
cmpsb
mov
sub
neg
xchg
arpl
nop
dec
cmpsl
xor
add
fucomi
dec
xor
adc
out
sub
dec
and
push
jmp
xchg
dec
cld
mov
cmpsl
cltd
mov
cmpsl
push
cmc
inc
fidivs
andl
jnp
rcrb
add
add
mov
into
loop
or
add
dec
testb
inc
arpl
sbb
mov
les
fidivs
inc
les
sbb
rorb
mov
lcall
dec
mov
in
inc
cmpsb
mov
jle
test
pop
mov
pop
es
faddl
imul
lahf
inc
add
add
mov
add
insb
roll
movsb
ret
push
cmp
fneni(8087
sbb
jg
push
xchg
aaa
lret
sbb
lahf
out
mov
cmp
sub
adc
inc
add
dec
xchg
lcall
and
std
xor
jmp
dec
cld
cwtl
insb
sbbl
dec
jb
retw
xchg
sbb
cmp
pop
add
sti
fs
add
mov
enter
scas
sub
xor
xchg
movsb
ret
jmp
fstps
test
add
pop
into
mov
push
mov
mov
sub
js
in
roll
fadd
mov
outsl
int3
cmpsb
lods
pop
push
dec
dec
addb
int3
add
in
stos
in
sahf
mov
sub
sbb
dec
push
fisttps
xor
lahf
nop
popf
repz
into
loopne
aad
jns
mov
push
sub
and
mov
mov
mov
hlt
scas
cmc
rcr
cmp
sbb
lods
pusha
add
dec
outsb
adc
add
je
inc
add
xchg
xchg
ljmpw
xor
add
and
add
and
mov
and
push
pop
mov
ja
stc
mov
or
es
mov
mov
insb
movsl
jecxz
add
ret
mov
icebp
cltd
mov
push
int3
and
inc
adc
outsl
mov
xchg
add
jne
std
lods
mov
nop
repnz
pop
adc
arpl
int
ret
paddusb
push
add
push
add
fbld
sub
ret
aam
jns
enter
js
xchg
xlat
xorl
decb
sub
nop
aad
add
ss
mov
mov
filds
jmp
into
imul
sub
std
out
pop
iret
push
out
sbb
pop
add
popl
pop
push
jne
rcll
loopne
or
add
shll
icebp
insb
xchg
push
xchg
out
xor
add
mulw
adc
add
and
cmp
or
cltd
jo
fistl
or
outsl
cmp
push
mov
std
dec
sti
xor
and
jle
pop
int
and
push
push
jecxz
ljmp
hlt
into
and
xor
int
cwtl
fmulp
cli
dec
pop
insl
push
pop
pop
xorl
sahf
add
cld
inc
jns
add
and
mov
xchg
xchg
xchg
sbb
fidivrl
cmc
push
pop
cwtl
and
jge
push
out
outsl
in
hlt
mov
xchg
insl
cmpsb
mov
cltd
mov
in
pop
scas
shr
cli
pushf
mov
test
loopne
xchg
sbb
aam
mov
lock
out
shr
push
adc
clc
lds
mov
fidivrs
jmp
movb
pop
xchg
add
xchg
jle
xor
add
fdivrp
popf
cmp
sbb
add
icebp
out
mov
sbb
ljmp
dec
ror
in
popl
add
cmpsl
push
inc
add
out
daa
mov
cmc
out
cmp
rcll
push
add
in
fdivl
add
mov
popa
inc
add
mov
inc
add
dec
loope
inc
lcall
cmc
mov
and
out
push
push
add
sub
lds
fnsave
and
sbb
inc
inc
insl
shrb
mov
add
pop
lret
or
addr16
mov
add
xchg
jb
jns
add
jmp
inc
or
mov
mov
lods
push
add
push
add
mov
inc
add
jmp
add
cld
movsl
push
out
sbb
sub
jle
add
decb
add
scas
or
or
int
aaa
jecxz
ret
bound
js
cmp
test
test
mov
enter
lea
add
stos
or
mov
cmc
push
dec
jecxz
jle
mov
js
xlat
push
push
jle
add
out
aaa
fiadds
out
incl
add
dec
sbb
pusha
add
jp
pushf
imul
xchg
add
hlt
scas
inc
in
xor
jae
ljmp
mov
mov
add
add
or
add
add
mov
and
cli
lods
sbb
add
jmp
jmp
cli
mov
lods
pop
sahf
repz
mov
add
add
je
leave
sbb
lods
mov
enter
pusha
add
dec
fiaddl
or
incb
add
inc
adc
mov
inc
add
xor
repnz
cmpsb
scas
stos
call
test
ret
push
jns
addl
arpl
scas
jp
or
sbb
pop
push
inc
das
repnz
cltd
cmp
int
call
and
xchg
in
dec
or
addb
mov
add
in
mov
hlt
inc
add
inc
and
jmp
dec
mov
enter
adc
mov
add
xor
cld
fs
mov
push
adc
in
mov
add
aaa
in
inc
add
push
push
pop
adc
inc
add
stos
push
imul
repz
sub
inc
add
std
movsl
in
mov
sub
jge
loope
xor
push
jecxz
adc
stc
sbb
dec
daa
mov
cmc
xor
jbe
add
repz
pop
adc
sbb
mov
pop
push
add
jns
dec
mov
call
push
rcl
cli
mov
je
fucomi
push
mov
movsb
push
add
inc
lods
or
outsl
add
mov
jle,pt
mov
jecxz
mov
xchg
push
loope
cmp
orl
add
scas
sub
add
xchg
cmp
aas
sti
stos
stc
pop
add
pop
lret
add
sti
ret
mov
mov
repz
movsl
push
andl
add
xchg
cli
pop
sub
cmc
movsb
les
pop
mov
pop
cmp
sbb
test
pop
mov
cmp
pusha
add
or
xrelease
add
mov
scas
xchg
orl
push
out
dec
xchg
hlt
xor
sbb
cltd
aaa
loopne
addb
add
push
rolb
inc
add
jns
pop
push
idivl
lds
push
in
xchg
jo
dec
inc
ret
pop
jmp
mov
mov
lret
jmp
push
sarl
lock
iret
sub
int3
cmp
or
test
mov
pop
dec
cmp
push
scas
cmp
stos
arpl
push
rcrb
push
mov
push
add
shrb
inc
add
insb
lahf
sbb
jcxz
add
int3
mov
pop
push
dec
or
dec
dec
sahf
inc
add
in
cmp
inc
add
xchg
in
jge
push
pop
fwait
pop
or
and
pop
lods
adc
fwait
mov
inc
add
mov
inc
add
shrb
add
in
cmp
lock
les
push
xor
and
imul
rcrl
sub
jecxz
ss
dec
cmp
xor
int
in
scas
repnz
lock
add
scas
and
push
sahf
or
sub
mov
int
lods
mov
scas
mov
dec
cmp
fnstenv
mov
cmc
or
add
or
repnz
or
out
aad
add
mov
sarl
xlat
enter
adc
pop
test
xor
sub
jg
dec
and
dec
sbb
loop
es
add
inc
or
bnd
xor
mov
inc
add
mov
pop
test
jb
pushf
ljmp
jno
lahf
addb
jbe
addb
mov
dec
loopne
mov
mov
mov
push
clc
pushf
addr16
out
addr16
cltd
xchg
cmc
mov
xor
dec
mov
sahf
lahf
mov
push
insb
call
dec
xor
pop
dec
mov
add
pop
jnp
pop
add
xor
and
je
add
add
push
and
sub
xchg
jno
sbb
test
and
add
movb
or
cmp
test
mov
xchg
xlat
scas
mov
xchg
jg
pushf
movsb
mov
aam
popf
int
flds
fwait
jne
addb
lcall
in
incb
add
inc
test
or
mov
or
add
popl
add
jl
lods
push
test
cmp
push
sbb
xor
addl
lahf
fnsave
es
adc
mov
and
jbe
mov
mov
xor
pop
xchg
fists
push
repnz
insb
push
add
nop
cld
dec
jbe
push
xor
punpcklwd
mov
sbb
sbbl
jae
inc
sbb
mov
sbb
pushf
sub
movb
insl
outsb
cmpsl
cli
add
iret
mov
add
push
rol
add
cmp
loopne
fists
aam
push
mov
adc
int
xor
add
mov
inc
shl
ret
movsb
sbb
sbb
icebp
dec
into
adc
mov
inc
add
mov
hlt
pop
dec
mov
dec
push
nop
std
sub
outsb
imul
push
lret
inc
fisubrl
sbb
add
mov
movb
sahf
mov
add
pop
repnz
jns
test
mov
or
sub
jnp
jne
inc
jbe
add
cli
add
push
inc
add
sub
out
loopne
pop
shlb
jmp
jb
cs
adc
arpl
add
or
add
pop
fwait
mov
adc
out
shlb
xor
sbb
stc
dec
adc
inc
add
add
int3
ret
test
jo
xchg
stos
or
pop
cmc
dec
xor
pop
add
inc
add
das
dec
adc
mov
push
pop
pop
in
add
enter
add
xchg
inc
add
add
pop
add
cmp
dec
cmp
stc
sbb
jnp
mov
loop
mov
cli
outsl
iret
subl
imul
cmc
pop
inc
sahf
out
repz
sets
jo
loopne
sub
imul
fidivl
xchg
and
arpl
sub
cmp
fucomi
jo
cmp
lahf
lret
enter
xchg
fs
xchg
bound
das
and
lods
in
mov
push
mov
add
in
cmp
cmp
dec
das
insl
scas
fs
mov
push
pop
aaa
popa
outsb
sbb
iret
pusha
add
mov
repnz
lea
and
xchg
push
mov
add
push
push
cli
test
or
add
scas
repnz
xor
adc
add
popa
test
sub
test
add
inc
add
xchg
lods
sbb
or
ss
loopne
neg
aas
xor
addl
add
or
outsl
out
jle
jmp
mov
xchg
gs
lret
mov
imul
rcrl
pop
test
rorl
cmp
leave
leave
xchg
arpl
push
in
mulb
in
test
dec
adc
testb
xor
add
add
shrl
int3
sbb
les
fwait
imul
popa
sbb
test
dec
jno
jne
adc
add
mov
add
insl
mov
insl
xchg
stc
pop
rolb
xchg
int
int3
nop
in
sbb
hlt
and
xchg
lods
jle
jno
mov
xchg
rolb
xchg
sbb
push
add
sub
inc
add
jb
add
jmp
je
push
into
mov
or
mov
jg
fxch
jnp
add
out
sbb
lods
push
lcall
std
xor
adc
ret
dec
cmp
add
test
jmp
pop
push
sub
mov
jb
shrb
dec
pop
std
iret
or
cmp
fwait
movsl
add
mov
cwtl
ja
scas
push
sbb
sbb
mov
jne
push
add
ret
pop
jl
lds
jp
cmp
mov
inc
adc
arpl
xchg
scas
sub
call
scas
fisubl
cwtl
popa
in
sub
std
test
arpl
hlt
cmp
das
adc
mov
out
mov
pop
adc
sub
insl
pop
rolb
stos
mov
pop
pop
addr16
inc
loope
jnp
add
in
add
xchg
mov
lock
sub
les
mov
leave
inc
add
mov
sub
fs
dec
in
into
pusha
add
dec
cs
iret
in
movsl
cmpsb
mov
movsb
push
xchg
dec
inc
add
add
fdivr
test
add
jne
loope
test
fistpll
jecxz
add
jge
xor
add
loop
add
push
add
rolb
add
mov
mov
dec
xor
push
hlt
lods
test
add
test
mov
xor
add
test
jnp
clc
mov
aas
and
daa
out
push
imul
mov
and
jnp
bnd
xchg
inc
js
sub
xor
push
test
adc
mov
repnz
hlt
cwtl
cwtl
cld
loop
xor
push
push
addb
sub
mov
sti
out
test
inc
or
bound
nop
push
filds
push
push
pop
rcl
xchg
pop
test
in
pop
xchg
fdivr
xor
mov
in
popa
jl
jecxz
jp
pop
std
jecxz
orl
dec
ret
inc
mov
xchg
and
dec
in
or
frstor
mov
int
push
mov
pop
test
lock
mov
mov
fdivs
add
and
mov
add
inc
mov
fistl
movsb
jle
in
add
cmp
push
lcall
movsl
adc
pushf
or
inc
sbb
add
loop
and
stos
mov
mov
sbb
push
mov
cmp
add
cwtl
sub
stos
pand
sahf
sub
rorl
xchg
sbb
sbb
push
in
in
mov
scas
jl
ret
dec
add
movl
insl
into
stc
icebp
or
movsb
sbb
lds
add
inc
push
mov
jl
ret
mov
jo
cmp
or
in
xchg
xchg
shl
xchg
aam
xchg
mov
xchg
add
dec
jp
xchg
fcom
addb
stos
loopne
add
pop
jne
in
add
ja
dec
and
rcll
inc
push
std
add
push
mov
inc
add
outsb
xchg
pop
mov
mov
int
add
push
dec
mov
jl
mov
fcoms
xchg
pop
xor
mov
dec
add
fiadds
stos
arpl
or
jecxz
movsl
sti
jg
rol
add
out
adc
mov
or
and
push
or
jae
mov
xchg
mov
test
push
notl
sub
xchg
cmp
jae
cmp
pop
dec
jle
jnp
inc
fwait
gs
push
icebp
cmp
repnz
add
sbb
nop
movsl
shll
pop
adc
daa
adc
lcall
or
into
ja
pop
movb
or
or
or
in
lock
sbbl
add
mov
inc
mov
sub
in
aas
xchg
in
movb
cmp
dec
ret
or
cld
ret
mov
mov
adc
outsl
xor
in
insb
add
jl
add
fldcw
into
dec
js
aad
sub
mov
and
mov
add
jmp
mov
push
addr16
in
sar
fistl
add
shll
push
mov
pusha
add
daa
mov
cli
pop
ret
dec
lods
stc
mov
lret
mov
mov
xchg
addr16
dec
xor
add
arpl
add
add
es
mov
insb
xor
xchg
jb
dec
out
out
inc
xor
jge,pt
insl
jecxz
in
bound
cmp
xchg
mov
jne
or
jmp
dec
and
notb
add
cmpl
mov
rcll
add
mov
int3
jge
fs
imul
adc
mov
dec
jp
push
sub
mov
add
mov
mov
dec
jecxz
pop
gs
or
xor
test
and
mul
mul
bswap
std
push
jbe
adc
in
test
outsb
xor
test
inc
sahf
push
mov
inc
add
incl
loopne
movb
push
add
and
dec
xchg
push
and
aas
pop
pop
iret
mov
nop
xchg
sahf
xchg
mov
std
call
sbb
divl
mov
clc
aaa
out
adc
add
adc
inc
add
push
fistps
js
fs
in
jno
mov
js
cmpsl
clc
nop
pushf
jl
es
aaa
mulb
sahf
mov
ds
sbb
test
add
icebp
jle
bound
add
pop
push
jle
add
and
stos
jecxz
jno
mov
add
sub
pop
xchg
dec
dec
mov
add
inc
add
add
mov
inc
add
dec
xchg
sbb
add
mov
add
add
ficompl
dec
pop
imul
or
leave
movsb
dec
lcall
insb
cwtl
mov
mov
sub
xchg
into
hlt
das
adc
add
enter
popf
pop
pop
stos
adc
push
mov
mov
mov
inc
add
daa
xchg
mov
cmp
scas
jo
fcmovbe
inc
fcoms
mov
ret
mov
add
xor
fchs
aad
jp
imul
sub
pop
and
xor
add
adc
mov
adc
or
sub
or
fwait
lods
inc
mov
add
mov
jle
fs
jbe
dec
pushf
mov
test
stos
les
popa
cmp
js
dec
mov
lcall
syscall
sub
js
out
mov
pop
sar
and
mov
test
push
enter
add
ss
add
adc
inc
call
into
dec
and
ljmp
mov
add
fs
dec
dec
das
push
out
cwtl
stos
cmp
add
mov
and
xor
inc
cmpsb
mov
jns
and
jge
sub
and
pop
mov
jl
scas
sbb
jno
movsb
mov
adc
jns
mov
icebp
adc
xchg
lret
jne
dec
scas
rolb
add
pop
mov
ret
test
dec
push
mov
bsr
xor
add
out
imul
iret
insb
sbb
int3
xchg
dec
mov
cltd
mov
xor
sub
das
and
ss
jo
jns
mov
arpl
pusha
add
rolb
adc
pop
or
mov
mov
add
dec
dec
fldcw
add
aam
push
ljmp
pop
out
inc
lret
call
mov
stc
xor
es
sub
scas
je
pop
mov
lods
mov
mov
sub
gs
movsb
in
divb
mov
push
add
std
xor
fwait
sbb
stos
orl
adc
mov
decb
mov
xchg
lds
mov
out
and
into
sbb
cld
pop
into
popa
dec
bound
pop
mov
sub
add
pop
sbb
jg
ret
repnz
scas
addb
aaa
inc
call
cltd
mov
stos
rol
fbld
shlb
and
sbb
push
iret
daa
popf
loop
cmp
leave
addr16
mull
add
scas
mov
jge
inc
mov
mov
insl
stc
xor
stos
ja
add
sub
fistps
add
push
adc
add
inc
out
xor
mov
popf
sub
cs
pop
idiv
jb
sub
repz
scas
clc
sub
jmp
push
jns
inc
add
cltd
pushf
hlt
testb
push
inc
mov
das
jae
add
mov
add
js
cmp
popf
and
pop
fidivl
gs
jb
sub
cmpsb
movsb
lcall
or
lcall
dec
inc
add
sub
sbb
mov
add
outsl
scas
icebp
pop
sar
leave
jmp
jae
xchg
ret
add
add
ljmp
adc
mov
cld
or
sbb
lods
movb
add
cmpsl
int3
scas
push
cltd
movsb
cltd
jbe
test
rorl
push
pop
or
pop
leave
addb
int
xor
aaa
sbb
or
pop
and
movsl
cwtl
pushf
rcrb
sbb
rcll
repz
pusha
add
aaa
leave
jecxz
sub
adc
test
cs
add
cmp
movsb
out
in
add
mov
sub
pop
sbb
xor
xchg
push
imull
mov
push
xchg
jg
mov
add
loop
mov
cmp
fisttps
jg
push
pop
insl
test
cmovl
andl
and
insl
push
sub
scas
push
add
in
or
cltd
push
sbb
data16
mov
xor
movsb
sub
jbe
arpl
mov
movsb
adc
scas
adc
bound
addb
imul
add
add
scas
pop
call
das
jae
idiv
pushf
outsl
dec
divl
adc
inc
add
pop
pop
cmp
scas
addb
pmaxub
xrelease
mov
adc
or
lret
inc
add
add
dec
dec
enter
aaa
add
push
mov
fadds
push
and
lods
mov
xor
sub
pop
xor
pop
push
xchg
jecxz
and
push
sub
cld
nop
addr16
std
pop
and
ret
popa
popl
mov
addb
dec
das
jle
or
adc
pop
jb
cli
pop
scas
sub
add
dec
mov
xchg
push
out
andl
ds
add
ja
add
lret
stos
or
adc
add
mov
jbe
sti
jge
sbb
add
jecxz
fcomps
xchg
repnz
ja
or
xchg
cmpsb
pop
sbb
negb
mov
push
in
push
xchg
enter
cltd
and
mov
lret
push
mov
mov
cmpsl
fcompp
xor
popa
jns
shr
jl
fwait
dec
xchg
popf
mov
sahf
mov
adc
and
aad
lahf
neg
dec
jmp
jbe
cmp
dec
add
int3
pop
cmp
inc
add
xchg
mov
add
xchg
pop
jne
sbb
pop
dec
push
div
dec
outsl
les
sbb
ficoml
test
xor
les
mov
pop
mov
movb
icebp
dec
sbb
mov
mov
sti
lcall
inc
add
test
push
aad
pop
fldenv
add
jno
jle
stos
mov
inc
or
xor
jns
or
adc
cmpl
jp
je,pt
ja
scas
mov
dec
mov
movb
mov
cmp
and
push
cmp
mov
mov
repnz
sub
add
jne
repz
repnz
decb
xor
xor
fnstcw
scas
mov
mov
test
leave
jns
cmp
mov
popf
leave
test
rolb
pop
lods
fdivrs
add
jo
or
outsb
cmpsb
xchg
js
cwtl
cmp
jno
pop
call
dec
lahf
mov
in
push
and
push
jo
out
add
clc
xchg
xchg
add
jno
mov
push
push
lds
movsb
dec
mov
add
mov
xchg
dec
addb
pop
mov
add
xor
scas
cmpsl
lock
lret
xchg
test
stos
adc
mov
add
aas
mov
dec
fistpll
adc
add
mov
cmc
push
das
xor
int
test
stos
mov
jecxz
xchg
addb
lea
mov
inc
jae
pop
lcall
shr
lret
mov
xchg
add
jno
ret
add
jns
mov
pop
jle
push
xchg
add
push
repnz
bound
sub
popa
and
xor
call
add
add
test
push
arpl
push
lds
add
scas
pop
mov
add
sbb
stc
mov
pop
and
shlb
jmp
add
mov
push
dec
sub
divb
addb
add
mov
inc
add
outsb
lods
cmpsl
adc
mov
stc
dec
lret
stos
rolb
data16
cmp
adc
mov
dec
rolb
push
xor
and
imul
xor
cmp
pop
jle
jbe
popa
add
aaa
sbb
shlb
bnd
adc
pop
ljmp
mov
int3
je
cmp
adc
push
and
xchg
dec
and
dec
xlat
fwait
jno
add
in
xor
add
shrl
call
call
dec
adc
fdivs
and
mov
push
add
bound
movsl
js
sbb
add
adc
jecxz
sub
or
sbb
jnp
add
push
cmc
sub
add
dec
jb
out
aam
cmpsl
fidivrl
dec
xor
into
jp
imul
dec
mov
lahf
mov
push
test
pusha
add
push
les
xchg
out
enter
cwtl
xchg
mov
xchg
xor
fsts
add
aad
push
mov
add
jae
add
in
xchg
test
cmc
inc
add
cltd
cmp
pop
lret
stc
sub
xlat
sub
data16
std
xor
xchg
sub
add
fnsave
shlb
mov
mov
add
ja
inc
add
sub
push
lods
and
movb
shlb
push
es
cmpsl
dec
mov
in
mov
rcr
dec
and
ret
xchg
inc
add
aas
mov
iret
pop
cmp
push
lock
or
jo
mov
jmp
add
xor
inc
repnz
mov
mov
dec
mov
je
mov
and
mov
in
inc
add
mov
mov
or
xlat
int3
ret
adc
loope
outsb
and
insb
xor
lods
cmp
les
lds
nop
or
in
lods
lock
and
out
push
jmp
cmp
testl
mov
mov
xchg
mov
cwtl
rol
add
int3
rolb
xor
test
cli
pusha
add
sbb
jo
arpl
add
dec
sub
and
out
sub
popa
lods
ljmp
fstpl
int
mov
cmp
jnp
and
std
faddp
xor
shl
lods
and
cmp
adc
mov
mov
jno
movsb
cli
push
in
push
clc
or
test
in
aam
sub
movsb
aam
mov
add
bound
testl
mov
adc
repz
xchg
mov
fldt
mov
pop
test
in
je
xchg
nop
push
das
bound
inc
add
cld
mov
push
fbld
xor
rol
adc
sbb
pop
je
arpl
ret
mov
adc
dec
jno
fnstsw
lret
pop
xchg
jmp
xor
add
mov
jl
mov
mov
clc
pop
int
add
cmp
and
sub
subl
push
cwtl
nop
mov
cwtl
movl
repz
fildll
test
sub
dec
push
fisttpll
xchg
pop
cwtl
lock
pop
adc
out
inc
add
stos
adc
inc
add
cli
sub
cmp
inc
add
shr
mov
andl
arpl
in
jb
jne
add
aaa
add
jb
and
adc
mov
sub
pop
mov
sarb
rolb
out
test
xchg
in
push
loop
cmpsl
mov
lahf
push
add
mov
adc
mov
adc
popa
mov
xor
mov
mov
push
jns
pop
or
mov
or
sbb
or
xchg
mov
push
add
addb
int
call
test
repz
pop
mov
push
and
int
xor
mov
inc
add
add
inc
in
jb
icebp
popa
inc
add
jmp
out
inc
add
in
mov
hlt
pop
cmpsb
mov
push
dec
in
add
sbb
aas
pop
addb
stos
jmp
push
mov
ficompl
aad
dec
add
mov
mov
dec
sbb
xlat
push
add
jb
jecxz
les
dec
fs
mov
add
jge
pop
or
mov
mov
les
jge
loop
out
adc
and
aad
rolb
fsubp
mov
add
cwtl
pop
in
jl
sub
das
jno
jp
add
xor
add
pushf
pop
ljmp
xor
xlat
dec
and
mov
add
pop
cld
rorl
jge
mov
mov
xlat
push
push
add
inc
add
hlt
fsubr
add
pushf
outsb
dec
loope
sbb
mov
sbb
iret
test
addr16
movsl
lcall
cmp
stos
push
push
add
pop
dec
add
addr16
jg
add
xchg
loopne
rcl
hlt
push
rep
fstpt
or
add
push
mov
xchg
xor
das
js
push
stc
add
rolb
mov
mov
mov
lods
dec
cmp
gs
jecxz
addl
mov
cmpsl
out
add
sbb
lock
sub
xchg
mov
push
gs
pop
bound
out
les
addl
lods
add
stos
jae
add
adc
fdivrl
stc
pop
mov
scas
sub
jmp
cmc
push
imul
cmpsl
out
xchg
dec
sahf
push
mov
sub
data16
add
inc
sbb
fs
jne
fldl
jl
sbb
or
into
data16
mov
ds
xchg
dec
xor
push
add
les
call
loope
leave
call
fists
and
add
cmc
sub
fs
dec
sub
cmp
jle
dec
jno
jmp
pop
xchg
jmp
pop
sbb
dec
fs
lea
sub
lcall
idivl
les
sbb
pushf
lods
fisttpll
jns
add
and
push
and
loopne
add
push
mov
pop
out
out
mov
add
test
out
in
movsb
add
testb
fisttpl
ds
mov
mov
stos
pop
xchg
fistpl
in
adc
ds
dec
adc
scas
xchg
jne
addb
mov
pushf
mov
push
push
or
fsubrl
fisubs
stos
push
push
fidivrl
jge
sbb
add
sub
or
mov
or
or
add
add
loope
cltd
leave
fsubrl
js
cmp
outsb
shll
or
fmul
bound
cmp
add
out
or
xor
mov
mov
gs
les
push
ficomps
cmpsl
push
enter
.byte
