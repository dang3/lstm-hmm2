imul
add
add
imul
add
and
rorl
lret
cltd
sbb
dec
lret
jmp
adc
aam
adc
mov
cwtl
sbb
cmp
add
pop
or
add
pop
lods
pop
xor
pop
xchg
test
shrl
add
add
popa
mov
popf
mov
add
xchg
add
adc
popa
mov
push
add
jb
jp
inc
sub
dec
add
add
add
mov
movb
add
mov
std
mov
loopne
dec
cs
bound
mov
adc
mov
or
add
addb
pop
rolb
jecxz
lahf
pop
and
imul
std
rolb
jae
cli
mov
nopl
aas
jno
and
jg
sbb
movsl
jbe
leave
adc
rolb
adc
jbe
add
push
sub
add
add
push
testb
add
aas
add
mov
add
add
out
adc
add
jo
cltd
add
mov
fistpll
cld
pop
mov
xchg
or
xchg
mov
add
xor
sub
add
add
add
jbe
jne
test
icebp
or
repz
mov
dec
fldcw
pushf
and
test
add
mov
pop
cmp
add
mov
loope
sub
xchg
add
cmp
ja
lret
test
xchg
add
jne
leave
outsl
mov
add
add
addr16
xor
mov
fists
add
ret
cmp
cmp
test
fld
dec
mov
enter
stc
mov
fadds
data16
repnz
add
into
push
aad
loope
data16
add
push
add
xchg
faddp
mov
aad
cmc
insb
push
ljmp
add
clc
rolb
std
int
ret
sbb
lret
push
push
pop
aad
enter
mull
jg
cmp
add
pusha
add
jecxz
add
cli
pop
lcall
movb
add
enter
in
dec
movsb
add
lock
lcall
aas
lods
in
gs
out
pop
repz
aas
dec
adcl
xor
jb
sub
adc
dec
out
mov
pusha
add
add
add
inc
test
add
add
add
adc
lcall
pusha
add
stos
mov
iret
testb
and
pushf
mov
insl
inc
add
leave
outsl
aam
mov
sub
mov
roll
addb
add
add
add
test
jmp
add
insl
gs
es
loope
movsb
add
add
inc
add
arpl
add
aam
sahf
xor
mov
mov
xor
les
jmp
add
cmp
sbb
hlt
add
incl
add
sub
dec
xlat
pushf
lret
add
add
cld
lcall
and
out
push
add
lea
add
add
ds
fstl
add
add
add
push
jb
in
cmp
roll
rolb
mov
mov
shll
data16
add
rolb
std
std
push
add
add
mov
mov
cmpsl
push
add
int3
push
mov
pop
push
rol
add
add
ja
xchg
mov
test
mov
add
rolb
add
aam
pusha
add
add
push
add
xor
add
add
add
add
jno
rolb
xchg
sub
cmp
stos
and
add
adc
add
mov
mov
pop
fsts
pop
add
mov
sbb
lock
jnp
popa
cs
repz
dec
inc
add
fisubs
jmp
add
in
mov
add
jo
ljmp
xor
mov
lea
mov
arpl
add
int3
iret
cmp
lea
call
imul
push
xor
add
jl
add
mov
inc
push
add
cltd
adc
out
jmp
add
or
add
outsl
in
adc
mov
adc
adc
mov
addb
rcll
fisubl
jl
xor
into
in
popa
dec
sahf
adc
dec
mov
es
jmp
loop
xor
ds
lar
mov
fsubl
add
add
addb
pop
in
lret
test
jge
dec
aaa
xlat
sahf
stos
or
mov
add
add
add
or
mov
cmp
rolb
movsb
add
dec
ljmp
add
xchg
rolb
jne
inc
sahf
jae
add
pop
adc
jle
sbb
jbe
jecxz
add
in
sahf
insl
xor
addb
imul
arpl
js
add
mov
in
jmp
push
in
outsl
das
sub
jg
add
add
push
add
fdiv
lock
inc
icebp
jl
imul
cmp
imul
fs
mov
in
add
cltd
mov
add
and
pop
fsubrs
sbb
add
xchg
add
push
ja
outsl
push
add
xor
xchg
mov
mov
or
mov
push
add
and
mov
insb
fcoml
sahf
or
push
push
and
imul
add
out
adc
movb
lret
stos
jmp
clc
dec
and
sub
add
mov
mov
lods
add
mov
add
mov
movb
dec
pop
clc
xchg
out
mov
data16
mov
loope
bound
mov
jb
subl
testb
mov
xchg
add
push
movb
arpl
js
mov
xchg
rolb
add
pusha
add
push
add
pop
sbb
aaa
fstpl
sbb
lcall
push
mov
cli
mov
mov
pop
mov
xchg
add
les
test
out
vmread
lds
je
pop
hlt
add
dec
adc
ja
xor
sub
inc
add
push
pop
or
lods
xlat
fists
cmc
imul
hlt
add
or
mov
bound
mov
lock
icebp
mov
hlt
add
leave
and
fsubs
in
testb
imul
add
inc
aad
mov
pushf
rol
add
add
and
adc
rorl
pop
cmpsb
add
add
add
imul
add
add
add
jae
bound
mov
xchg
add
add
dec
mov
sub
adc
add
mov
add
mov
data16
cmp
mov
jp
mov
push
add
add
add
push
insl
aad
dec
add
mov
sbb
lods
das
lret
js
rcrl
movsb
add
add
add
add
add
fldenv
cmp
aas
adc
jne
fs
add
or
int
add
inc
add
add
mov
add
add
out
or
rolb
mov
mov
xchg
add
cmpsl
out
dec
loope
stc
js
out
adc
and
aas
add
mov
data16
outsl
push
add
pop
sbb
add
xor
or
add
add
lret
sub
add
add
add
pop
and
add
or
push
add
push
add
add
and
pop
mov
add
hlt
add
mov
jecxz
rcrl
bound
mov
add
int3
or
aam
xchg
cld
inc
add
cmpsl
jb
jbe
and
mov
add
mov
ffree
add
shr
sbb
mov
ljmp
inc
xchg
add
nop
add
rcll
stos
mov
jno
pop
adc
adc
jbe
jle
sub
add
orl
add
mov
lods
jnp
add
gs
lahf
cwtl
lock
cld
data16
lret
scas
imul
inc
jecxz
xor
xchg
add
mov
add
add
add
add
mov
add
icebp
loop
imul
mov
leave
out
pusha
add
and
mov
stos
flds
test
add
jbe
mov
add
es
xchg
mov
add
inc
cmp
out
sub
add
add
sbb
mov
fdivrs
pop
add
and
pop
jmp
inc
add
add
mov
js
cmp
add
call
in
mov
sub
add
leave
mov
aad
stos
pop
xchg
or
add
dec
dec
pop
nop
add
and
mov
stos
xchg
add
rcll
add
sbb
and
mov
sbb
xchg
pop
sub
loopne
sub
bound
mov
cmp
sbb
add
cmp
add
insb
repz
add
mov
dec
dec
stos
popa
inc
add
mov
add
sub
ret
std
add
add
fsubrs
add
fdivrs
and
inc
lcall
orl
mov
aaa
repz
add
std
or
dec
mov
jns
jl
rolb
jl
loop
mov
loopne
sbb
hlt
add
cmpl
mov
push
add
add
sub
xor
add
sub
mov
cwtl
sahf
cmp
call
mov
mov
rolb
mov
add
out
add
rcll
jge
js
or
sub
add
add
push
cmpsb
add
popa
cmp
and
add
jne
sahf
mov
imul
adc
in
pop
adc
pusha
add
int3
popf
jns
popf
iret
jb
pop
out
aad
mov
sub
js
mov
jae
add
add
inc
adc
pop
xchg
add
add
stc
inc
pushf
xchg
into
pop
popa
out
xor
push
js
pop
pop
pop
test
adc
lret
pop
fistl
lds
sub
pop
adc
aas
jg
mov
sarl
and
fs
popa
adc
addb
add
lods
jle
cmp
mov
add
add
mov
add
add
add
mov
daa
aam
loop
push
add
mov
pop
loop
pop
js
and
dec
cmp
add
jns
add
lret
or
and
mov
add
nop
add
add
pop
lock
and
mov
add
sbb
lahf
push
pop
or
inc
add
test
add
and
mov
add
mov
jne
movb
sub
mov
or
xchg
add
leave
jnp
sub
xchg
out
hlt
add
and
mov
pop
xchg
jge
adc
add
mov
imul
push
cltd
ret
mov
mov
dec
add
popa
loopne
repz
pop
mov
cmp
pusha
add
add
add
jne
jb
xchg
add
mov
test
sbb
add
lea
popf
jmp
leave
adc
add
incl
mov
dec
mov
pop
cmp
nop
add
jno
ret
dec
xchg
add
movb
mov
mov
push
add
add
and
add
lock
add
in
rolb
add
xchg
movsl
xchg
jmp
add
mov
cmp
dec
insb
rolb
jbe
hlt
add
inc
add
cs
sub
mov
sub
add
jmp
rolb
or
cmpsb
add
add
sar
ja
add
rolb
divps
cmp
xchg
adc
jae
cmp
popa
cmp
add
data16
mov
clc
lea
aad
add
pop
pop
lret
ficoms
lret
pop
adc
dec
repz
xchg
add
popa
push
add
adc
add
add
loopne
xchg
xor
test
pop
mov
mov
data16
ret
add
fwait
mov
xor
mov
sti
sub
cmp
in
scas
push
add
add
cld
pop
inc
add
in
add
add
lret
ljmp
addb
scas
inc
daa
mov
pop
dec
pushl
insl
clc
jo
test
add
push
add
add
add
mov
add
flds
cmp
add
xor
dec
mov
inc
add
fadd
or
dec
loopne
mov
push
pop
mov
dec
mov
nop
add
add
and
mov
lock
mov
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
leave
pop
sbb
movsl
js
xchg
add
pusha
add
add
mov
addb
push
push
or
mov
add
fildll
jae
out
icebp
add
xlat
pushf
std
ljmp
add
pop
and
adc
push
add
add
sub
inc
testl
cltd
sub
jge
rolb
push
jp
add
push
add
add
rolb
fdivrs
scas
rolb
jecxz
xchg
mov
push
push
xchg
push
add
pop
cmpsb
add
daa
out
movb
add
negl
cmp
movsb
add
lcall
sub
add
scas
sbb
adc
shrl
add
test
add
pop
sbb
daa
scas
dec
fsubl
mov
add
xlat
fwait
in
je
cmp
add
mov
jecxz
cmpsl
jl
inc
add
sbb
xchg
mov
jle
add
sub
hlt
add
add
dec
add
add
out
or
add
cli
cmp
add
data16
add
ljmp
iret
mov
mov
repz
add
cmp
add
add
add
push
add
dec
add
pushf
cwtl
dec
push
push
out
add
stc
or
add
add
xor
add
adc
pushl
lds
mov
pop
or
mov
xchg
add
add
imul
add
pop
data16
add
jp
dec
add
add
or
in
repz
add
add
addr16
inc
add
pop
pop
add
mov
scas
push
add
pop
pop
testl
pop
ljmp
sbb
call
sbbl
fwait
decb
jge
sub
add
push
les
push
add
test
and
test
divl
add
add
add
iret
push
add
in
add
ret
into
or
inc
rolb
test
xchg
sbb
push
add
mov
pop
pop
data16
mov
clc
cmp
sub
add
test
sub
sub
cwtl
cmp
fwait
rcll
jge
add
mov
push
add
push
add
add
dec
ficoms
fidivrl
mov
push
add
les
scas
test
pop
adc
add
sub
adc
repnz
add
lcall
aam
cs
add
enter
add
inc
stc
lahf
jo
inc
add
insl
mov
push
add
push
or
mov
sub
and
xor
jge
dec
adc
dec
mov
add
dec
aad
or
in
mov
jne
nop
add
mov
icebp
cmc
repz
add
jmp
inc
add
push
cs
lret
ret
add
add
repz
nop
add
add
add
daa
fdivs
add
repz
add
ret
inc
add
mov
lret
add
rolb
mov
push
aas
inc
add
aaa
lret
cmc
sub
add
out
jno
mov
loop
leave
adc
mov
leave
lods
add
sbb
testb
pop
mov
mov
pop
dec
xor
xchg
bound
mov
add
mov
aam
lods
aad
lods
jge
addb
out
xchg
and
inc
addr16
outsl
movb
sbb
bound
mov
cmp
add
arpl
out
scas
cmc
push
add
add
loope
add
mov
fs
cltd
adc
in
out
xor
frstor
imul
jg
add
call
or
sub
inc
mov
add
add
cmp
mov
pop
sti
push
add
add
push
add
mov
into
scas
js
add
cli
es
add
addr16
cmc
arpl
add
mov
mov
dec
fidivl
popl
add
testb
push
push
add
mov
cwtl
fdiv
add
leave
add
and
pop
sub
cwtl
and
mov
jb
hlt
add
mov
mov
cmp
cmp
mov
xlat
lcall
cmp
scas
sbb
aaa
sbb
cmp
add
pop
fwait
dec
leave
movb
jo
imul
popa
insb
xor
or
hlt
add
sbb
push
xchg
stc
add
das
fwait
adc
add
add
roll
aad
add
add
and
mov
add
add
sub
sbb
add
lds
pusha
add
or
outsb
lock
shrl
add
pusha
add
repz
inc
add
jbe
repnz
add
mov
jecxz
add
push
add
incb
sbb
pop
pop
outsb
xchg
jl
add
movsb
add
sahf
aaa
push
test
fdivrl
dec
lret
movsl
les
ss
sbb
add
test
rolb
xlat
aaa
sbb
shll
in
inc
add
add
add
and
mov
jb
addr16
adc
add
mov
push
jne
movsb
add
add
daa
hlt
add
and
xchg
test
adc
fiadds
imul
xchg
inc
push
add
push
add
add
loop
sub
xor
test
push
rcrl
clc
pop
pushf
pushl
movsl
push
mov
push
add
iret
sbb
mov
test
cmp
pusha
add
add
push
push
add
mov
aaa
add
arpl
add
add
fidivs
ds
sbb
outsl
dec
les
jb
and
loopne
push
add
pusha
add
add
sbb
leave
xor
pop
mov
push
add
add
int
cmpsb
add
lock
add
add
mov
add
int3
push
adc
adc
aaa
adc
sub
mov
ja
aam
mov
dec
insb
and
mov
add
add
sub
sub
cmc
pop
insl
and
push
add
sub
add
loop
or
les
add
mov
scas
pop
jg
mov
add
mov
xchg
mov
sbb
aam
mov
pop
mov
and
cld
inc
xchg
add
add
test
popf
add
mov
dec
fstps
add
add
jb
inc
xor
nop
add
fxch
sub
inc
add
and
mov
add
add
add
push
in
test
sahf
xor
icebp
clc
or
and
dec
or
stos
cs
out
adc
sub
add
rolb
imul
testl
xchg
add
cld
cltd
mov
pop
popf
add
xchg
sub
add
adc
push
add
movb
add
sti
mov
imul
adc
fucom
add
add
mov
mov
sti
int3
or
call
ljmp
add
xchg
add
ljmp
add
push
push
add
adc
push
mov
or
cmp
add
movb
mov
fisttpl
aas
sub
add
and
add
fwait
add
mov
and
mov
jnp
or
push
add
mov
rolb
data16
add
fists
add
cmp
repz
add
mov
ja
sti
pop
stos
lods
outsb
sbb
mov
sbb
push
lods
and
or
push
xchg
mov
in
xor
jecxz
inc
add
mov
adc
mov
jle
dec
loope
movsb
add
loope
xor
add
add
add
fstpl
jo
or
mov
xchg
push
sub
lret
fadds
push
loopne
jecxz
ja
add
add
jge
add
sub
add
mov
addr16
fcmove
push
add
add
add
mov
ret
xchg
mov
mov
mov
xlat
shl
add
rolb
adc
push
jp
add
add
add
scas
dec
xlat
movsl
push
add
add
inc
xchg
add
imul
int
sahf
dec
rolb
daa
pop
outsb
xor
adc
adc
push
dec
repnz
add
int
js
add
jb
xchg
ja
in
pop
repz
inc
add
mov
test
faddl
add
mov
mov
add
pusha
add
clc
ret
inc
add
add
xor
lods
cmp
shll
or
add
add
add
arpl
out
les
push
add
aas
loop
sbb
cltd
nop
add
loopne
jnp
scas
jmp
add
shl
and
cmpsb
add
popf
xor
add
out
add
add
add
into
xchg
stc
push
add
mov
add
add
push
add
mov
jne
xchg
add
aad
add
xchg
dec
mov
addr16
add
add
movsl
mov
add
mov
loope
lret
cmpsb
add
aaa
inc
pushf
shrl
jno
push
sbb
das
rcll
jae
imul
hlt
add
mov
stos
repz
add
fsubr
push
add
inc
add
add
fcmovnu
lahf
cld
sub
fdiv
add
enter
lods
leave
pop
sahf
xlat
pop
popf
jbe
xchg
jecxz
bound
mov
mov
xchg
imul
addb
or
cmp
mov
fistpll
add
pop
inc
in
lcall
add
xchg
dec
clc
out
jae
stc
xor
pop
scas
rcl
add
xchg
adc
cld
adc
shll
add
lock
inc
sub
pop
add
adc
scas
inc
add
pop
punpckhwd
add
add
add
lcall
add
add
and
mov
mov
ficomps
add
and
mov
mov
out
mov
xchg
and
mov
add
sahf
imul
stos
and
mov
add
add
lods
pcmpeqw
lock
sbb
add
jp
test
mov
xor
cltd
xor
xchg
ret
jmp
add
loopne
shl
add
test
jle
rolb
lret
aas
push
imul
add
sbb
add
add
or
fnstsw
or
add
add
add
dec
adc
into
fimull
jnp
enter
sub
mov
add
mov
inc
inc
add
sub
add
xchg
add
mov
sub
cltd
hlt
add
test
mov
js
dec
mov
and
mov
dec
mov
add
fdivrs
push
out
ret
inc
add
add
add
add
add
add
add
add
add
cld
insl
mov
add
add
add
cld
rolb
test
add
add
jbe
sub
dec
mov
pop
ficoml
add
push
add
pop
insl
cmpsb
add
sbb
cmp
int
decb
dec
repz
cwtl
js
add
pop
lcall
cmp
adc
add
adc
sub
shll
mov
lahf
sbb
mov
testb
add
dec
push
test
loope
imul
dec
cmc
and
sbb
and
cmp
lea
inc
scas
outsl
sub
add
ret
mov
rcll
add
ficoms
add
iret
enter
xor
sub
add
mov
jns
fistpll
push
cmp
fcoms
arpl
ss
push
add
in
mov
daa
lods
xchg
add
testb
mov
andl
add
add
lds
jle
mull
mov
add
mov
leave
mov
rep
push
mov
stc
sub
jo
das
mov
dec
fadd
add
outsl
aaa
cmpl
sub
pusha
add
add
mov
adc
mov
mov
push
add
or
out
add
out
repz
sbb
push
add
push
int3
icebp
or
add
popf
hlt
add
clc
lcall
add
mov
xor
std
rolb
out
les
call
loop
mov
add
add
add
add
stos
jno
repz
ljmp
add
inc
add
iret
xlat
fcos
adc
pop
jg
mov
add
nop
add
add
decb
cmp
add
mov
test
mov
mov
dec
pop
popa
movsb
add
xchg
movsl
sbb
add
add
stc
imul
icebp
repnz
add
cmp
add
add
faddp
aam
dec
cmp
xor
jno
lds
add
mov
pop
icebp
les
sub
add
fwait
cs
lret
iret
sub
mov
inc
add
mov
push
add
jns
insb
xchg
mov
sahf
add
mov
add
add
add
dec
jge
mov
std
ret
add
push
add
mov
and
add
aad
pop
mov
icebp
sbb
xor
pusha
add
add
mov
dec
loopne
add
or
dec
loopne
pushf
lea
sti
sbb
add
bound
mov
xchg
enter
add
push
addb
push
add
stos
jbe
xchg
fcoms
movsl
sub
sbb
adc
xor
mov
mov
ss
addr16
add
add
movsl
clc
out
imul
add
push
imul
fdivr
and
add
out
inc
push
add
add
sbb
xchg
add
add
fidivl
mov
xor
add
jle
add
mov
add
les
cmp
push
add
mov
addb
pop
sub
add
adc
outsl
daa
xor
push
out
sub
movb
add
add
imul
push
sbb
add
mov
into
xchg
add
add
mov
popf
push
dec
add
sbb
aas
lock
adc
add
sbb
cmpsl
mov
addr16
add
jae
cmpsl
addr16
add
sahf
jmp
add
in
out
insb
lcall
add
push
add
pop
or
push
add
repnz
add
fmul
test
fisttps
add
add
add
ficoms
pop
aaa
xchg
add
and
mov
scas
jmp
push
add
add
popa
mov
xchg
add
or
add
add
popl
inc
lea
xor
xchg
xchg
add
cmp
push
add
or
and
adc
cmp
lock
cmpsb
add
fimull
sbb
xchg
ljmp
sub
add
add
rolb
pop
and
mov
int
popf
addr16
add
lret
add
out
repnz
sbb
lods
xchg
add
mov
test
mov
cmp
add
scas
push
js
mov
lret
sbb
or
sbb
add
std
nop
add
sbb
dec
jecxz
and
mov
mov
push
orl
int
add
mov
add
inc
inc
lods
lds
mov
xchg
add
xchg
push
add
shl
add
add
insl
jb
test
add
xchg
gs
movl
add
add
add
je
js
jle
mov
or
mov
int
pop
das
inc
fnstcw
adc
dec
sbb
ret
push
jg
aam
lock
jle
cmp
addb
outsl
pop
add
mov
pop
sbbl
call
jg
or
loopne
mov
add
sbb
sub
into
mov
pop
mov
adc
mov
jmp
lret
icebp
push
add
xlat
adc
add
xor
lcall
es
loop
rolb
xchg
hlt
add
nop
add
aaa
add
mov
fildll
pop
out
aam
fs
push
cmp
cmp
out
add
das
pop
add
mov
iret
rolb
rolb
add
int3
scas
jl
xor
add
mov
xchg
jns
inc
add
jmp
gs
incl
movntps
leave
lock
add
ret
xor
push
loop
int3
repz
jl
jbe
fdivrp
inc
iret
aaa
fdivrs
imul
add
add
inc
add
aam
fwait
hlt
add
ljmp
inc
add
and
popf
adc
xchg
fcoml
out
cli
xchg
sub
add
lcall
loopne
mov
dec
pop
pop
inc
add
mov
add
sub
and
mov
xor
xor
je
loop
cltd
call
ret
inc
ljmp
fisubs
add
jmp
into
idivl
test
push
push
cmp
sub
xor
outsb
cwtl
jns
and
add
shrl
pop
aaa
jnp
add
rolb
inc
add
ret
sti
pop
mov
aad
cmp
or
jo
pop
jecxz
add
add
into
and
mov
add
sub
add
mov
testb
fs
lods
test
mov
cltd
hlt
add
cmc
lods
pop
dec
mov
xchg
std
add
xchg
mov
fldt
add
jg
dec
xor
adc
sarl
pop
int3
rolb
stc
xor
data16
int
inc
add
adc
cltd
mov
xchg
add
pop
ret
jmp
ret
stos
ret
jns
xchg
testb
lods
das
movb
lret
fdiv
add
pop
movsb
add
add
add
push
add
push
dec
adcl
mov
pusha
add
loope
sbb
dec
rolb
add
pop
mov
push
add
add
mov
lods
pop
dec
push
push
jns
mov
jo
popf
stos
lea
add
xor
in
and
add
mov
movsb
add
add
add
jae
add
or
jae
pop
rolb
fucomp
test
add
add
mov
call
mov
rolb
aam
sti
add
jae
repnz
mov
jno
sbbl
sub
xor
add
cmp
sbb
popl
add
add
add
push
sub
push
repz
aam
out
pop
bound
mov
lret
sub
mov
loope
mov
jmp
lahf
sub
add
repnz
xchg
rolb
dec
jl
add
std
shll
popa
dec
adc
repz
test
inc
push
arpl
add
xor
add
mov
jg
or
addb
rolb
inc
add
add
mov
jge
xchg
popl
mov
sbb
add
daa
dec
pushf
mov
adc
and
in
pop
out
push
inc
imul
in
data16
adc
cmp
pop
icebp
push
sbb
fistl
and
mov
add
add
cmp
or
sub
inc
add
add
add
inc
addr16
into
add
add
push
add
cmp
add
mov
mov
daa
add
or
mov
mov
mov
data16
jno
movsl
jge
stc
mov
add
mov
sub
add
fstpl
xor
lods
ds
push
add
add
add
add
fdivp
add
mov
add
add
cltd
or
ja
stos
decb
fnstcw
mov
add
add
stos
add
dec
mov
push
mov
in
lret
inc
lods
jae
divl
adc
cmp
rol
js
jnp
add
cmc
jge
mov
fisubl
pop
mov
cmp
ss
ret
sbbl
add
testb
mov
pop
std
sub
rolb
dec
xor
jno
jl
sub
add
add
clc
xor
fwait
jo
inc
imul
xor
add
add
xchg
push
mov
dec
popa
ficompl
add
je
jp
sbb
xchg
add
fnsave
add
xchg
add
loopne
sub
xchg
add
xchg
add
jno
mov
test
dec
fisubrs
gs
loopne
leave
pop
insb
sub
adc
adc
jmp
mov
sahf
fwait
dec
sti
inc
push
add
addb
mov
daa
add
add
add
dec
jb
jnp
add
fidivs
pop
dec
int3
jmp
add
push
add
mov
enter
jo
ja
cli
xchg
add
add
repz
adc
mov
in
mov
cltd
popa
mov
mov
jmp
cmp
cwtl
popf
push
insl
add
ret
leave
jne
nop
add
pop
mov
pop
push
jno
add
xchg
add
outsb
call
xor
mov
mov
jnp
mov
ja
imul
sub
xchg
enter
lcall
fidivrl
add
in
imul
jnp
mov
add
aam
imul
add
sysexit
lret
and
mov
call
dec
mov
push
add
mov
int
pop
jp
cld
adc
fisubrs
pop
aaa
jl
mov
mov
add
sub
cli
lods
scas
mov
add
add
push
push
add
std
cmpsb
add
mov
cs
popf
std
add
mov
insl
or
add
nop
add
xchg
add
or
out
jp
and
cmp
lret
adc
insl
jl
inc
add
inc
adc
add
xchg
add
adc
sbb
movsb
add
add
popa
fsubs
enter
add
add
les
rolb
fwait
add
cmp
mov
adc
mov
sbb
add
int3
out
pop
dec
inc
add
loop
push
add
add
pop
xchg
test
jl
fwait
and
into
test
insb
loope
mov
lcall
add
cmpsl
cmp
add
inc
add
add
dec
fldt
mov
cwtl
outsb
mov
add
jb
les
loope
and
daa
arpl
add
cwtl
shll
mov
dec
addb
cmp
add
repz
mov
cli
mov
inc
lcall
mov
sti
mov
add
add
add
into
sbb
add
mov
mov
mov
mov
pop
sub
adc
adc
xor
lea
add
lahf
lahf
inc
add
add
sbb
push
add
adc
add
add
jne
lret
mov
add
int
inc
add
add
cmp
push
add
stos
add
fdivrl
mov
mov
repnz
push
sbb
loopne
aaa
movb
cmp
add
add
mov
mov
jnp
mov
addb
sub
repnz
in
mov
aad
sbb
add
ds
add
rolb
pop
xchg
lods
out
andl
lods
nop
add
test
cmp
add
and
mov
mov
inc
add
push
add
add
inc
add
add
jbe
das
or
add
push
add
outsl
pop
xor
inc
fsub
dec
mov
inc
std
mov
fistpll
add
into
testb
imul
add
add
add
sbb
jns
add
pop
xlat
scas
inc
add
cli
push
xchg
inc
add
pop
xor
adc
add
add
xchg
add
loopne
mov
enter
add
adc
jns
inc
add
pop
push
add
add
push
shll
adc
xchg
mov
fdivrl
sub
cli
add
inc
add
ss
sbb
dec
aas
leave
lods
sbb
addb
out
add
scas
or
push
add
push
add
cmp
add
add
lret
leave
dec
fwait
icebp
add
mov
dec
fidivrs
lcall
push
and
dec
pop
add
add
mov
mov
aad
add
add
add
pop
dec
jl
push
jne
add
jle
pop
jo
jae
je
jecxz
xchg
add
add
jne
in
aaa
outsb
dec
enter
jb
or
or
inc
addl
inc
add
mov
out
fsubrp
adc
or
pop
mov
and
cld
mov
ret
jle
sbb
or
add
xchg
out
jo
lods
add
js
jmp
dec
dec
je
jl
add
add
add
jno
add
movsb
add
outsb
nop
add
popa
movsl
mov
add
xor
add
iret
mov
mov
outsl
and
jge
pop
aam
jo
or
nop
add
jno
add
add
pop
xor
add
in
xchg
add
inc
add
fwait
inc
add
add
mov
dec
addb
mov
les
pop
sub
cmpsl
xor
xor
adc
add
dec
sahf
cmp
inc
add
add
add
add
add
jnp
add
js
add
xchg
fisubs
mov
ficomps
xchg
cltd
and
mov
push
mov
mov
out
xchg
cmp
daa
mov
mov
fisttps
aaa
sub
outsb
add
add
mov
mov
add
aas
push
xchg
sub
add
add
repnz
add
add
jecxz
pop
arpl
lds
pop
adc
add
mov
add
add
cmc
outsl
sbb
add
xchg
movsl
out
jg
and
mov
sub
xor
cmp
movsb
add
fcoms
scas
cmpsl
pop
jno
add
lret
add
cmp
add
mov
sbb
rolb
das
cltd
scas
sahf
daa
sahf
movsl
outsb
xchg
sub
pop
inc
add
popa
sub
aam
sub
jo
addb
jg
add
add
mov
mov
xlat
mov
add
scas
xchg
and
xlat
ret
pop
mov
arpl
aad
imul
add
jbe
pop
ret
dec
inc
rolb
out
cmp
jp
sub
mov
add
jo
aaa
or
cli
mov
add
add
sbb
push
mov
out
xchg
add
sahf
inc
mov
fisttps
cmp
add
fldcw
test
lret
cwtl
test
add
mov
rep
lods
and
repnz
add
add
add
das
lahf
sti
cmp
add
cld
ja
mov
sub
fstp
cwtl
leave
cmp
mov
cmp
and
mov
fcomps
dec
sahf
data16
popa
add
add
aam
sub
aaa
lods
scas
push
mov
clc
addr16
add
push
xor
add
add
xchg
cmp
loop
movb
pop
addr16
inc
rolb
in
fists
insl
add
rolb
pop
fwait
jnp
stos
jno
add
add
rcrl
add
push
lahf
addr16
fidivrs
popa
push
fcomip
lods
addr16
add
mov
jo
inc
add
xchg
add
add
inc
add
jnp
stos
and
mov
adc
ror
pusha
add
test
sbb
in
in
add
insb
iret
add
mov
add
pop
lcall
jge
daa
or
add
rorl
xchg
inc
in
bound
mov
je
xor
js
pop
aam
lods
scas
test
dec
rorl
jge
outsl
sbb
or
jecxz
add
adc
out
leave
sub
add
testb
sahf
outsb
inc
push
rolb
xchg
xor
add
xor
xor
mov
sub
inc
or
rolb
add
add
mov
dec
rolb
nop
add
add
sbb
clc
bound
mov
adc
sbb
popf
leave
addb
jmp
dec
xor
dec
in
in
clc
xchg
int3
mov
add
addb
fbld
les
or
adc
lock
mov
ja
cs
add
add
pop
cmp
add
mov
in
cwtl
xchg
adc
and
mov
dec
xchg
mov
jo
mov
pop
scas
jecxz
inc
mov
ret
add
sbb
add
add
push
in
xchg
add
dec
int3
mov
add
cmpl
das
add
adc
ret
adc
mov
add
ss
hlt
add
add
jmp
add
add
push
add
add
int3
dec
movsb
add
nop
add
das
cmp
mov
aad
imul
int3
mov
add
je
and
adc
add
or
jb
ljmp
add
jg
adc
iret
xchg
js
int
cmp
mov
lcall
add
xchg
ja
add
jnp
lea
movsb
add
sarl
add
aaa
cli
add
mov
xchg
add
add
add
test
mov
xchg
mov
cmp
dec
cmc
push
add
xor
and
pop
cmp
xchg
add
andl
rolb
addb
xchg
add
dec
test
mov
ljmp
or
jns
add
cmpsl
movsb
add
rolb
push
add
ret
jle
subl
add
mov
rcll
jno
xor
mov
inc
daa
cmp
or
adc
push
cmp
add
testb
add
int
mov
jp
outsl
shll
aam
xor
pop
or
testl
add
add
shll
fmuls
mov
xchg
add
imul
mov
insb
outsl
pop
pop
mov
and
clc
pop
push
iret
test
jecxz
loop
mov
push
test
inc
mov
test
testl
and
mov
jo
loope
add
mov
xor
add
add
and
arpl
add
mov
add
out
inc
add
lock
add
stc
add
pop
testb
add
mov
stc
scas
por
mov
lea
pop
fistps
int3
lcall
popa
fisttps
push
add
stos
sbb
or
push
mov
cmpsb
add
pop
push
add
dec
movb
pop
pop
stos
shll
out
or
add
ret
in
fsubrl
ret
mov
add
add
add
cs
gs
inc
mov
jmp
in
cwtl
ds
add
dec
dec
cmp
add
cmp
mov
add
mov
dec
adc
loop
fstpt
add
add
lret
push
add
fcoml
mov
add
add
into
xor
sbb
sti
sbb
add
mov
add
jg
add
in
stos
cwtl
mov
aam
mov
add
fnstsw
cmpsb
add
lcall
sbb
add
pop
jg
or
add
mov
add
add
add
or
pusha
add
add
test
jne
add
mov
cmpsb
add
pop
or
add
add
jecxz
and
or
jbe
cmp
test
aad
add
sbb
jmp
mov
jl
add
add
add
add
pop
popf
mov
insl
popa
jmp
adc
xchg
add
pop
pop
mov
add
aaa
mov
cld
dec
dec
mov
rolb
mov
mov
aaa
and
or
rcrl
scas
or
mov
inc
aad
in
xchg
add
add
mov
js
cmp
cli
xor
repz
add
add
insl
lds
addb
add
xor
fimuls
mov
add
pushf
pop
pop
mov
imul
pop
aad
sahf
popa
popf
adc
add
fisubs
mov
inc
inc
repz
punpckhbw
add
pushf
jne
stos
mov
ret
loopne
add
out
jae
mov
cwtl
jp
stos
lods
mov
test
outsb
jne
add
dec
sbb
or
sub
add
mov
sbb
out
cmpsb
add
sub
add
pop
pop
das
fstp
cwtl
mov
outsb
pop
mov
cmp
lret
adc
je
mov
pop
xchg
push
mov
add
mov
mov
cmpl
inc
sub
sub
repnz
mov
push
ficomps
mov
xchg
pop
push
popf
sub
add
push
dec
frstor
add
fadds
xorl
stos
push
add
mov
cltd
inc
add
push
jno
lret
in
cld
shrl
add
mov
push
fwait
jle
sub
mov
sahf
sbb
sbb
and
sub
add
lds
fldt
adc
rolb
loope,pt
inc
add
add
add
outsl
sub
cmpsb
add
add
jge
rolb
dec
pop
mov
inc
add
ret
adc
inc
add
mov
xor
lret
lahf
add
mov
mov
add
inc
jbe
mov
add
xor
sbb
imul
and
xchg
js
cmp
mov
les
inc
sbb
add
orl
rolb
sub
fdivs
rcrl
push
sub
add
add
testb
js
imul
push
hlt
add
dec
mov
xchg
mov
rolb
or
test
ja
add
mov
sbb
add
call
add
popf
or
add
and
mov
pop
loop
ljmp
xor
fistl
or
dec
add
mov
jmp
inc
add
addr16
add
add
add
or
push
add
add
ret
dec
and
xchg
xchg
add
jnp
xchg
int3
dec
fcompl
add
mov
add
add
mov
add
lret
sahf
in
roll
call
add
stos
mov
mov
aam
pusha
add
push
add
popa
adc
cld
pop
mov
pop
xor
nop
add
add
mov
add
pop
mov
push
repz
push
add
imul
ljmp
addb
cmp
js
addb
mov
xchg
add
lock
add
jno
int3
insb
ficoms
and
mov
addr16
jge
cmp
pop
lret
in
test
xchg
cmp
add
ret
adc
addb
in
sbb
dec
rolb
lcall
add
mov
movb
add
add
jae
aam
jmp
stos
aaa
loopne
icebp
cltd
loopne
sub
nop
add
test
in
pop
push
add
in
fnstsw
outsb
xchg
cmpsb
add
add
arpl
mov
addr16
add
jno
pushf
fwait
dec
mov
add
mov
in
lea
sti
jcxz
jl
sbb
dec
sbb
cli
cmpsb
add
movsb
add
mov
add
fisubl
mov
int
pushf
inc
add
dec
repz
cmpsl
out
imul
pop
sahf
add
gs
add
sbb
cwtl
arpl
in
push
insl
dec
cmp
mov
aas
adc
sahf
add
or
cmp
cmp
outsb
dec
ficoms
mov
lea
sub
add
mov
or
cltd
xlat
push
stc
int
jle
mov
ljmp
add
add
loop
sahf
pushf
idivl
add
rolb
bound
mov
jo
rolb
cmp
pxor
inc
and
aaa
adc
add
icebp
jbe
imull
mov
inc
add
aam
mov
mov
xchg
lret
cmp
movsl
cmc
pop
pop
or
add
mull
add
fwait
pop
mov
add
xchg
push
aad
mov
insb
inc
add
add
adc
test
mov
sahf
jge
test
add
add
iret
sub
icebp
inc
addr16
sbb
jge
sub
xchg
xchg
push
adc
xchg
add
aas
data16
mov
add
addb
addb
scas
loopne
jecxz
adc
jae
add
mov
insl
push
push
add
mov
add
mov
mov
inc
add
out
mov
loope
add
mov
add
add
push
out
push
xchg
dec
out
pop
insl
test
add
pushf
cmp
inc
add
add
iret
js
add
loop
add
lock
add
pop
lea
dec
add
cmp
mov
add
test
add
das
rorl
jge
add
add
test
push
add
mov
add
mov
add
adc
add
mov
gs
lods
ret
xchg
add
mov
cmpsl
cmpsb
add
xor
push
add
call
sub
mov
jecxz
cwtl
inc
add
dec
adc
xchg
popf
xchg
add
or
clc
jo
xchg
and
mov
jmp
test
cmp
add
daa
xor
shl
dec
hlt
add
loopne,pn
rolb
outsb
imul
add
add
mov
adc
pop
outsb
mov
add
mov
mov
ja
lcall
cmpsl
loopne
xchg
add
add
add
les
mov
add
ds
loopne
test
pop
mov
mov
cmpsb
add
stc
scas
xchg
add
push
add
xor
add
aas
pop
rolb
ret
jl
jp
xchg
std
mov
lods
les
jo
xchg
inc
add
pop
mov
in
cwtl
jb
mov
loope
xchg
mov
scas
popf
cmp
popa
hlt
add
ljmp
and
inc
dec
in
test
add
add
add
add
test
xlat
and
mov
add
add
add
lea
add
push
mov
movsl
aam
and
mov
mov
add
add
add
push
add
lahf
popa
arpl
aas
in
and
hlt
add
pushf
loope
xchg
xchg
add
mov
dec
xchg
add
shrl
out
call
aas
and
leave
dec
mov
out
lret
mov
xchg
pop
andl
add
rolb
pushf
addb
testb
and
add
pop
mov
xor
sbb
mov
add
mov
mov
test
or
add
mov
mov
add
add
inc
les
add
pop
inc
fcomip
enter
out
pop
mov
mov
add
add
add
mov
scas
push
add
push
sbb
out
add
mov
add
test
or
sbbl
mov
xor
or
movsl
add
mov
add
xchg
out
data16
lea
dec
xchg
add
sub
add
mov
rcr
lret
rolb
xchg
ret
mov
add
lcall
in
out
mov
in
adc
cmp
in
lret
add
mov
add
add
push
icebp
aas
mov
xor
add
in
cmc
ja
negl
gs
divl
scas
arpl
add
adc
out
les
mov
mov
add
add
lret
and
cltd
mov
out
ss
add
fidivrs
add
fisttpl
push
add
int3
pop
cwtl
js
shrl
mull
mov
dec
call
addb
cmpsb
add
pusha
add
sti
inc
xchg
mov
pop
dec
loope
std
clc
adc
out
push
gs
push
lods
test
into
loop
push
add
mov
pop
jge
in
enter
xor
pop
push
rcrl
addb
rorl
or
mov
mov
add
popf
and
mov
hlt
add
add
sarl
mov
loope
jo
xchg
push
push
add
add
daa
pop
adc
xor
xor
cmc
sti
jne
repnz
adc
sahf
jecxz
inc
lcall
rol
pop
ret
inc
add
lods
decl
push
add
addb
add
hlt
add
adc
test
add
add
dec
mov
jge
gs
pop
popf
sbb
dec
cld
addr16
outsl
mov
testb
xchg
mov
mov
add
int
or
add
mov
incb
sub
addb
and
mov
es
pop
cmpsl
xlat
xchg
fcmovnbe
pop
jmp
add
xchg
addb
or
mov
stos
stc
pop
decl
fldenv
leave
cli
mov
jns
add
lcall
popf
inc
add
lods
addb
adc
insb
mov
mov
mov
jns
xchg
add
add
push
andl
mov
add
and
add
daa
sub
add
scas
jmp
inc
add
add
test
add
stos
jb
loope
lcall
dec
or
add
sbb
add
add
bound
mov
mov
jb
orl
in
sub
add
arpl
add
lods
pop
aam
int
lcall
push
add
int3
in
cmp
xor
jecxz
sbb
cmp
lcall
mov
lret
ret
cmpsb
add
gs
icebp
in
or
adcl
cmpsl
aad
cmp
repz
mov
lahf
adc
sar
bound
mov
int3
xchg
add
movb
xor
nop
add
dec
popa
add
jbe
lahf
push
add
sub
add
inc
add
lock
push
mov
inc
add
add
addl
mov
add
cld
std
cli
jne
or
add
jo
orl
fistpll
cltd
icebp
mul
shll
push
push
push
push
add
add
cmpsb
add
jno
add
xorl
fwait
clc
dec
jg
dec
mov
add
xlat
add
mov
xlat
daa
les
dec
add
push
add
outsb
jg
add
gs
adc
jl
xor
add
add
or
add
imul
pop
mov
add
inc
add
xchg
add
add
xchg
add
add
das
jmp
xor
aaa
cmpl
jns
and
mov
ret
int
sbb
repnz
popf
int3
and
or
js
sbb
pop
cmpsb
add
add
loopne
in
sahf
push
add
les
sub
pop
arpl
dec
lock
xchg
jmp
sub
add
xchg
add
mov
jbe
pop
jle,pt
dec
mov
or
fld
and
mov
mov
rcll
add
xchg
add
addb
push
add
sbb
loop
mov
shrl
push
jg
xchg
jg
out
cli
or
pop
sub
or
inc
cmp
mov
jp
movsl
mov
out
lret
lods
or
sub
mov
daa
jne
add
add
inc
add
or
add
xlat
push
push
add
sub
push
add
aad
add
inc
add
aaa
jb
cmc
gs
jno
add
mov
add
add
inc
add
cmp
in
dec
push
addb
icebp
adc
mov
dec
scas
rorl
xor
pop
cmp
sbb
add
rolb
jp
arpl
add
sbb
mov
mov
dec
pop
std
out
cmp
rcll
sub
add
pop
stos
inc
add
add
add
in
ret
sti
lods
xchg
add
mov
scas
push
mov
mov
add
inc
js
cltd
subl
push
add
imul
add
mov
in
sbb
inc
add
mov
or
pop
pop
call
fidivs
stos
push
js
pushl
cmpsb
add
and
add
adc
in
sarl
jg
add
push
ret
push
sbb
mov
dec
out
aas
je
push
lods
inc
pop
jnp
add
add
mov
pusha
add
into
fwait
xor
add
mov
aas
pop
push
add
mov
pop
ds
cld
mov
mov
and
mov
inc
add
add
mov
cmp
or
mov
pop
jmp
add
add
mov
insl
lret
dec
test
mov
add
cmp
add
insl
loopne
and
add
add
sub
add
add
adc
mov
testl
xor
movb
xor
fs
add
in
sub
push
add
or
xlat
sbb
sbb
mov
fimuls
pop
push
push
and
aam
cmp
cmpsl
push
jle
ds
mov
fcoms
push
ret
js
add
pop
movb
push
imul
fwait
mov
add
loope
jge
add
imul
pop
std
scas
js
cmp
inc
testb
dec
jne
daa
push
cmpsb
add
jp
addb
add
mov
sub
add
icebp
loop
testb
sti
mov
xchg
out
lock
add
lret
outsb
in
jo
sbb
xor
cwtl
xchg
add
addb
add
add
call
negl
mov
out
stos
mov
jnp
add
add
or
add
sbb
jnp
xlat
test
cmc
or
add
add
sti
ljmp
add
pop
cwtl
gs
pop
dec
mov
test
test
add
vmwrite
mov
mov
dec
movsb
add
sti
lds
cmp
add
add
fwait
ja
stos
sbb
les
cmc
mov
cmp
push
add
lret
cli
push
lahf
push
add
stos
pop
mov
jae
jbe
hlt
add
add
je
cmpsl
add
add
pop
test
add
mov
jns
add
add
out
sub
fdivs
rolb
test
cmp
add
add
sbb
sbb
dec
and
jecxz
add
jecxz
xchg
lods
outsl
add
jae
mull
add
jecxz
xor
mov
lret
in
ja
jbe
mov
mov
jae
mov
add
dec
push
add
add
mov
jbe
add
mov
sbb
add
ds
dec
mov
inc
add
ja
addb
add
cmp
push
add
ret
add
sarl
pop
std
mov
lods
and
scas
std
bound
mov
add
mov
lods
push
ret
mov
std
lds
adcl
stos
jo
jg
sbb
add
pop
pop
out
add
les
pop
push
add
add
jns
add
adc
pop
imul
add
loopne
xchg
add
jae
add
dec
add
mov
add
sahf
lcall
add
hlt
add
jno
add
pop
mov
mov
rolb
push
add
add
add
add
ret
out
and
sbb
mov
into
jo
push
mov
sub
adc
adc
and
mov
imul
sub
rolb
mov
adc
mov
lods
add
sub
je
movb
and
mov
add
call
inc
add
xchg
inc
add
add
add
add
dec
xchg
add
add
clc
and
mov
in
mov
rolb
jl
add
push
repz
or
jle
push
add
add
addb
push
cmp
out
jo
int3
imul
mov
popf
and
in
inc
add
cmc
xor
push
insl
stos
inc
add
jb
ja
aas
sub
add
stos
imul
add
rolb
scas
dec
fstpt
fwait
xchg
add
in
popf
in
jno
and
out
add
adc
popa
testb
add
jg
mov
jg
add
scas
mov
insb
out
add
add
mov
arpl
cmp
mov
jno
lahf
add
data16
add
xchg
xor
xor
mov
dec
and
stc
jmp
data16
mov
pop
sub
and
repz
add
add
mov
imul
inc
add
push
addb
add
xchg
xor
jmp
test
dec
rcll
popa
mov
cltd
push
add
fyl2xp1
outsl
add
movb
stc
push
ss
sub
sbb
mov
add
xorl
fidivl
and
xchg
fmul
dec
adc
push
ret
add
jo
data16
add
add
scas
daa
mov
mov
pop
mov
lea
add
imul
push
add
push
sbb
add
imul
add
dec
inc
add
sbb
loope
test
push
out
xor
fldenv
add
cmp
push
add
addb
mov
xchg
aas
addb
and
outsl
sub
mov
add
aaa
adc
mov
sbb
add
mov
add
int3
roll
fwait
mov
inc
add
pop
pop
push
push
mov
add
cmp
add
fdiv
cmp
mov
lea
lea
add
mov
repnz
jp
xchg
jg,pt
add
add
scas
inc
inc
add
add
pop
jg
repz
arpl
cmp
push
push
add
movsb
add
add
add
mov
out
xchg
int
rolb
fs
leave
fisubs
add
dec
and
xchg
add
add
mov
push
lods
bound
mov
stos
rolb
or
add
lret
inc
add
movsl
pop
aas
ret
addr16
rolb
stos
lcall
aad
mov
xor
cwtl
mov
sarl
enter
fnstcw
cs
or
adc
push
xor
outsl
or
add
jbe
dec
fnstenv
or
add
shrl
sqrtps
leave
fcomps
inc
in
aam
rolb
cmp
add
add
loop
sti
or
rolb
or
add
pmaxub
ds
pop
stos
in
xchg
and
mov
lret
pop
push
fnstsw
subl
dec
xor
pop
sbb
lret
jns
in
sbb
cmpsl
lock
add
add
jl
xchg
test
rolb
loop
jecxz
inc
add
add
add
in
fldcw
in
and
mov
aam
pop
xor
add
mov
leave
das
imul
fldl2e
dec
clc
sarl
out
jo
cmp
pop
scas
adc
mov
mov
add
dec
insb
sbb
mov
lock
loop
fisttpll
sbb
add
add
push
lods
scas
mov
add
dec
dec
lods
rcll
jnp
add
add
push
add
addb
jae
xor
cmpsb
add
test
xchg
add
add
out
aas
aaa
imul
xchg
test
xchg
mov
mov
push
mov
cli
jmp
repnz
jmp
add
add
sub
mov
add
add
push
add
popf
divl
repz
mov
cmp
in
outsl
adc
and
or
xchg
xchg
add
xchg
add
addb
data16
add
sub
sub
add
addr16
icebp
lods
fstps
imul
mov
add
dec
stos
xchg
mov
fwait
test
pusha
add
dec
jp,pn
add
mov
and
icebp
dec
push
testb
cltd
sub
and
fcomps
push
add
popa
pop
push
add
add
lea
add
add
mov
call
test
push
daa
cmp
mov
mov
test
add
add
add
movb
lock
rorl
gs
loopne
in
add
push
mov
push
add
popa
mov
lods
ss
imul
jp
add
ja
adc
clc
dec
loop
lods
in
sub
test
ja
add
mov
leave
inc
add
mov
lret
dec
into
add
rcrl
jge
lea
add
js
add
xchg
add
add
xchg
mov
mov
mov
movsb
add
xchg
dec
sub
mov
cmp
add
jle
add
mov
add
add
mov
out
push
jb
out
adc
add
loop
insb
aam
movsb
add
jl
add
inc
outsl
xchg
add
pop
cmc
or
add
add
add
int
fadds
mov
or
add
adc
out
repnz
addb
inc
add
cmpsb
add
mov
mov
jle
nop
add
jns
add
add
add
add
pop
leave
nop
add
jge
mov
inc
add
add
aas
test
mov
inc
add
into
push
cmpsb
add
aas
fwait
jl
dec
add
or
jo
sub
add
pop
out
addb
fwait
and
mov
movb
int3
sbb
jbe
lock
daa
jp
dec
arpl
sub
unpcklps
inc
in
gs
wbinvd
popf
ret
jns
push
add
inc
add
jmp
pop
test
and
jecxz
push
add
or
mov
rolb
add
inc
add
cwtl
loopne
icebp
add
mov
push
loop,pn
ret
xor
add
fisttpll
sub
test
imul
mov
mov
pop
or
iret
sbbl
add
fldcw
negl
and
mov
insl
add
mov
out
fndisi(8087
adc
add
add
clc
xchg
jns
mov
mov
jmp
mov
add
ret
hlt
add
repnz
pushf
arpl
add
add
lds
lock
jo
movl
cmp
adc
add
add
loope
mov
mov
or
jne
aaa
loope
add
add
xor
and
enter
add
cld
push
add
stos
clc
je
and
or
std
mov
mov
and
and
mov
add
dec
adc
add
mov
add
pop
xchg
add
cmc
inc
add
cwtl
into
xchg
push
add
xchg
add
pop
icebp
imul
add
pusha
add
add
add
lods
fisubl
fstpt
push
add
add
mov
add
dec
sbb
mov
jb
xchg
sbb
testb
frstor
sbb
add
add
add
add
enter
add
sarl
cwtl
cld
push
add
lods
add
jbe
jmp
adc
dec
addb
push
jecxz
add
xchg
cs
or
mov
add
leave
dec
cmpsb
add
inc
add
add
xchg
add
push
add
movsb
add
rcr
jno
dec
rolb
mov
mov
mov
hlt
add
add
add
mov
adc
mov
out
je
pop
and
mov
mov
add
xlat
lds
add
fst
add
add
gs
push
push
jl
hlt
add
add
mov
subl
int3
push
cmp
mov
or
mov
pop
push
add
bound
mov
add
cs
mov
or
add
add
rolb
pop
xchg
mov
jge
cmp
shr
in
and
enter
aad
add
add
mov
inc
push
jle
fsts
cli
add
mov
add
adc
insl
xchg
mov
xchg
xor
xor
mov
mov
add
std
push
add
add
add
dec
inc
ret
pop
push
mov
push
add
int3
add
mov
dec
lods
sbb
rolb
adcl
mov
lods
lea
add
add
mov
les
and
mov
pop
jl
xor
out
sub
xchg
add
xlat
mov
das
inc
dec
push
inc
sub
mov
adc
lahf
clc
or
lret
dec
mov
fcmove
inc
add
lcall
adc
push
add
cwtl
je
rolb
mov
add
ficomps
or
lahf
fcmovu
lret
rolb
mov
mov
rolb
loop
stos
pusha
add
add
int3
test
aam
popf
shl
ljmp
aad
add
add
sbb
lahf
mov
push
js
jl
sub
mov
sub
enter
add
add
stos
mov
add
sahf
lods
aas
mov
repnz
mov
push
add
mov
js
mov
mov
jl
mov
mov
mov
and
mov
lcall
jle
les
mov
add
scas
lock
mov
jg
dec
or
leave
push
or
addb
add
push
add
rolb
jl
mov
mov
xchg
pop
sub
add
add
add
icebp
fdivrl
inc
xchg
add
sbb
popf
xchg
out
rolb
cwtl
rolb
mov
or
jmp
pop
addr16
xchg
push
add
mov
add
ss
idivl
adc
add
add
pushf
lret
add
push
lcall
add
cmp
xchg
add
pop
xchg
xchg
add
add
xchg
add
add
fbstp
add
dec
and
je
imul
or
xor
mov
ret
fs
add
add
add
bound
mov
pop
xchg
add
add
add
loope
cmpsb
add
add
std
clc
lea
xchg
rolb
fisttps
insl
and
mov
addb
lods
inc
add
jb
loope
add
scas
sbb
jmp
add
mov
fnsave
jne
add
scas
push
add
add
add
mov
mov
loop
lds
mov
push
add
add
inc
pop
adc
jns
fstl
mov
jge
add
call
push
or
inc
add
pop
xor
jle
ljmp
mov
rolb
add
daa
xchg
add
cmpsl
ret
ljmp
fadd
add
add
mov
jecxz
add
add
or
mov
fidivl
mov
mov
add
xchg
add
mov
add
incl
add
add
fstl
push
add
mov
add
xchg
xchg
or
aaa
dec
add
and
lods
xor
lds
mov
xor
add
jmp
and
xor
leave
pop
adc
mov
or
add
push
fimull
test
add
add
cmp
add
add
sahf
lock
cmp
std
addb
jmp
xor
test
and
mov
jg
add
aam
inc
or
push
outsl
outsb
mov
push
int3
mov
std
fwait
inc
nop
add
add
pop
add
xor
xor
lds
test
loop
roll
mov
testb
xchg
add
add
add
cwtl
bound
mov
dec
popf
jnp
xchg
add
add
pop
add
add
mov
lods
cmp
cmc
rolb
les
sahf
lods
movsl
cwtl
repz
rolb
lods
pushf
push
add
sub
inc
jge
out
bsf
movsb
add
add
mov
push
add
jae
mov
cmp
add
adc
cmp
mov
add
lock
add
or
and
mov
mov
add
add
je
lret
cmp
fbstp
add
jne
inc
dec
mov
js
mov
add
mov
or
mov
push
lods
xor
mov
add
rolb
nop
add
add
cmp
or
add
rcr
lahf
jmp
dec
jnp
add
add
dec
push
add
mov
jno
iret
sbb
dec
insl
jmp
add
add
xor
dec
out
xchg
adc
lret
mov
inc
add
xchg
leave
xchg
add
add
add
pushf
pop
test
jmp
add
add
or
je
jge
cltd
jb
add
sti
sub
arpl
loope
mov
mov
or
inc
fwait
out
mov
sahf
xor
sbb
pop
mov
jbe
inc
shrl
cs
loopne
and
adc
int
adc
and
mov
dec
testb
les
cmp
inc
add
ds
add
mov
sub
hlt
add
pop
mov
sub
add
ljmp
adc
or
out
and
mov
ja
sbb
add
xchg
cmp
cld
jnp
addb
add
inc
dec
repz
adc
sub
inc
add
mov
or
add
add
add
mov
testb
fnstsw
scas
jns
jns
ret
imul
push
add
lock
rorl
data16
dec
pushf
sbb
xlat
sub
insl
push
xchg
add
int3
addb
inc
add
add
mov
and
arpl
add
add
mov
ret
cmc
mov
mov
add
add
lods
inc
add
mov
lcall
das
add
mov
cmp
mov
in
fsubl
jge
mov
insl
sti
cmp
jbe
adc
setne
add
shrl
add
mov
les
in
mov
add
jmp
xlat
mov
sti
divl
add
add
addr16
mov
lahf
test
sbb
add
ffreep
add
add
repnz
add
add
fwait
insb
int
add
add
mov
in
cmp
cld
mov
push
add
add
pop
aam
mov
add
stc
repnz
data16
fsin
push
leave
jo
mov
rolb
cli
jl
addb
enter
mov
push
add
jl
aas
aaa
sahf
mov
sbb
add
add
out
push
add
dec
int3
jp
push
add
ret
addb
xchg
int3
xor
ret
add
addb
aaa
push
add
xor
inc
pop
ret
mov
add
jbe
jecxz
aad
jb
sub
add
sbb
add
mov
cwtl
xor
shll
mov
repz
mov
adc
or
out
mov
into
mov
les
cli
dec
adc
cmp
dec
movsb
add
add
out
cmc
and
mov
inc
xor
popa
fadds
add
bound
mov
sub
jge
test
jmp
fmuls
push
dec
push
dec
sbb
or
push
add
stos
rolb
xchg
add
addb
add
mov
mov
pop
push
pop
and
mov
mov
push
jmp
add
add
add
add
ret
lods
sahf
pop
fbstp
add
and
mov
or
mov
add
add
mov
sarl
mov
dec
int3
jo
xor
add
ja
add
cmp
cltd
mov
add
add
cmp
add
sbb
mov
and
mov
inc
xor
push
add
mov
fisttps
or
popa
push
add
lock
xchg
add
add
mov
sbb
in
push
add
ret
dec
data16
lret
add
lea
jb
popa
pop
test
loope
push
add
add
mov
xor
call
add
and
mov
add
mov
pop
add
or
add
in
dec
in
ret
add
repnz
add
add
mov
aaa
lret
mov
push
add
xchg
add
sbb
cmp
add
add
addb
stos
sbb
add
push
add
add
or
movsb
add
push
in
pop
fimuls
addb
push
jb
stos
mov
pop
pop
dec
enter
cwtl
xor
out
adc
push
jecxz
push
fsubrp
out
and
ja
sub
add
sbb
add
lds
inc
add
fdivrs
add
mov
inc
stos
fldcw
add
mov
add
add
or
add
add
push
mov
filds
add
ret
mov
adc
cmp
sub
mov
daa
rolb
data16
addl
dec
enter
sub
or
data16
outsl
addb
cltd
xchg
add
addb
add
flds
in
or
aam
mov
or
inc
xlat
ljmp
xchg
dec
adc
sub
inc
nop
add
xor
inc
add
add
xor
repz
sub
add
add
add
add
cmpl
cmp
add
or
add
rolb
outsl
aaa
inc
add
clc
pop
adc
adc
mov
bound
mov
das
jo
pop
dec
loope
cmp
ret
nop
add
mov
add
xlat
addr16
pop
into
and
add
test
out
add
arpl
add
mov
loopne
push
add
add
inc
jp
add
add
je
push
add
add
lods
mov
ja
add
add
add
cmpsb
add
add
loopne
pop
xlat
inc
cmp
iret
cmp
add
add
jb
int3
inc
add
mov
inc
add
movsb
add
fidivrl
push
add
addb
add
and
idivl
lahf
stc
call
mov
dec
inc
mov
fwait
push
add
movsb
add
add
rolb
mov
cmp
inc
adc
jle
int
add
enter
push
add
jmp
lahf
cmp
testb
add
mov
mov
shrl
pop
xlat
pop
cmpsb
add
add
inc
add
cmp
mov
ljmp
enter
xlat
popa
sbb
sbb
add
xchg
add
scas
jl
add
push
and
adc
add
xchg
push
sbb
add
add
add
mov
xlat
dec
add
mov
iret
add
add
mov
cmp
mov
mov
das
jg
leave
push
test
dec
sub
adc
lret
out
stc
add
add
add
mov
sbb
dec
cmp
add
addr16
mov
add
pslld
mov
cmc
cld
jl
add
ja
mov
mov
add
or
aaa
push
add
loopne
rolb
addb
and
mov
push
jae
add
add
loop
dec
sahf
test
mov
add
add
inc
or
in
hlt
add
add
cmp
dec
adc
gs
xor
test
add
add
add
cmp
and
pop
push
add
dec
int3
outsl
add
in
shll
popf
push
rolb
push
add
push
add
aaa
mov
push
mov
add
add
pop
clc
rolb
inc
xor
mov
adc
adc
fisttpl
add
cmpsb
add
jne
add
pusha
add
push
sub
xor
add
jno
filds
scas
xchg
roll
mov
mov
hlt
add
punpcklbw
mov
scas
sbb
adc
jbe
loopne
mov
sbb
sbb
leave
outsl
push
add
add
cs
add
pop
mov
mov
add
rolb
add
add
pop
movsb
add
in
sbb
cs
mov
addb
add
mull
int3
std
pop
lret
add
add
ljmp
stos
outsl
pop
add
mov
clc
sbb
add
jge
out
imul
mov
lea
mov
movsb
add
add
dec
loopne
jns
mov
add
add
das
mov
xchg
lret
test
xor
or
add
add
mov
inc
add
add
gs
pop
or
lcall
fnstcw
add
dec
cli
fdivrl
mov
mov
add
pop
fwait
movsl
mov
lcall
outsl
mov
jns
in
pop
lods
mov
dec
lahf
in
pop
push
add
aam
bound
mov
mov
fists
and
mov
cli
xor
int
xor
add
pop
jecxz
out
add
bound
mov
add
xchg
add
imul
xchg
add
add
add
mov
loopne
dec
mov
add
cmp
ret
inc
add
xor
mov
add
or
dec
lock
rolb
add
add
aam
push
xchg
dec
lods
pop
mov
sub
loopne
pop
or
add
mov
jno
lret
mov
push
or
add
add
std
rolb
fwait
dec
cmp
inc
add
inc
add
out
test
add
xchg
cmp
add
lcall
add
add
or
insb
xor
ret
push
add
push
add
add
sub
cmp
xchg
cmc
jge
mov
fistl
mov
sbb
adc
sub
les
add
add
mov
out
dec
push
or
mov
or
cmpsl
cmpl
and
mov
out
xor
add
mov
add
mov
lods
and
mov
enter
out
ret
test
xchg
mov
dec
xchg
xor
idiv
int3
sub
lock
xchg
ljmp
dec
call
movsl
movb
das
movsb
add
les
xchg
add
sub
xor
mov
repz
jo
lcall
dec
pop
jb
out
movsl
mov
add
add
mov
add
push
add
pushf
pop
mov
add
push
ljmp
sub
add
add
or
add
inc
add
add
and
inc
add
add
sbb
faddp
jge
and
add
add
push
add
add
test
out
fld
mov
xchg
bound
mov
loope
add
sub
enter
pop
push
xor
sbb
add
mov
jno
adc
bound
mov
movb
scas
xor
mov
add
jge
add
add
test
jmp
int3
add
cmp
pop
xor
movb
add
cmp
sub
lods
in
lahf
enter
dec
sub
sub
mov
add
add
mov
cs
xchg
add
dec
xor
sbb
jge,pn
ret
sub
data16
dec
jno
add
lret
mov
xorl
push
add
add
and
push
out
cltd
mov
repnz
add
jbe
es
cwtl
outsl
xor
fidivl
nop
add
add
add
gs
fnsave
data16
push
pop
dec
pushf
xorl
loopne
xor
cmp
cmpsb
add
xchg
pop
cmpsb
add
sti
xor
dec
pop
add
mov
push
add
jmp
dec
xchg
test
add
add
mov
push
lcall
add
mov
out
pop
push
add
add
das
or
test
jno
add
mov
mov
rolb
jmp
push
add
pop
sbb
lods
cmp
jmp
adc
inc
add
push
add
add
jge
mov
lods
lock
movsl
mov
repnz
cmpl
arpl
sub
imul
add
xlat
rolb
add
outsb
adc
enter
call
in
rolb
add
pop
jnp
add
mov
rolb
sbb
ss
add
pop
xchg
aas
addr16
add
ret
fwait
xor
sub
fstps
pop
jae
add
add
push
roll
aam
xchg
inc
xor
add
mov
dec
cmp
insb
mov
pop
icebp
add
fcomps
xchg
add
jg
or
out
adc
aam
push
add
add
clc
adc
jne
add
mov
push
add
movsl
cwtl
in
pop
lock
mov
mov
or
add
mov
add
add
sub
add
mov
int
pop
mov
rcll
add
add
jp
add
mov
add
pop
add
fcoms
insl
xlat
fistpll
repnz
add
stc
cmp
add
mov
and
mov
repnz
add
add
add
mov
int
jbe
pop
pop
repz
loope
add
cwtl
or
pop
inc
add
ljmp
add
roll
add
out
mov
sbb
test
or
add
and
dec
inc
aam
cmp
add
inc
add
add
push
cmc
sub
scas
add
mov
ja
xchg
add
or
pop
sbb
add
decb
add
mov
inc
cmp
add
testb
cltd
xor
pop
test
xchg
leave
sahf
jno
repz
add
mov
pop
enter
add
mov
and
fisubl
outsl
movsl
lods
xchg
add
sbb
pop
or
pop
scas
or
roll
testl
out
lods
pushf
insl
pop
mov
and
add
add
outsb
dec
rolb
xchg
test
mov
add
add
add
add
add
movsb
add
loope
jne
clc
jno
test
sbb
loopne
mov
in
addb
loop
mov
sbb
ret
jmp
fwait
shrl
mov
jg
mov
add
add
mov
inc
add
or
outsb
dec
sarl
cmp
add
xchg
add
pop
rolb
mov
sbb
add
add
mov
add
add
loopne
add
mov
divl
inc
add
pop
std
mov
mov
xor
pop
push
stos
cli
jb
adc
clc
mov
pop
rolb
mov
loop
inc
sub
add
mov
lahf
sub
jb
ljmp
adc
push
daa
fmuls
add
add
enter
mov
mov
mov
cmp
push
pop
lods
out
adc
pop
test
and
sub
dec
push
in
xor
test
aas
jnp
pop
xchg
add
mov
stc
cmpsl
push
add
add
push
add
add
mov
mov
sti
push
add
add
stos
loope
pop
hlt
add
cmp
in
clc
mov
inc
add
movsl
inc
add
add
cli
fcmovne
rolb
xchg
adc
int3
mov
or
aam
ds
cmpsb
add
out
lret
pushf
inc
stos
sub
pop
sub
cli
jle
sarl
fisttps
or
lret
add
popa
outsb
fbld
add
add
int3
push
add
add
add
add
inc
or
ret
pop
call
push
out
sahf
push
add
add
jmp
add
or
aas
ds
jns
outsl
clc
leave
cli
xorl
fxch
mov
sub
add
or
add
add
mov
add
dec
or
out
pop
sbb
add
imul
mov
cmp
mov
aaa
xor
test
jp
add
add
pop
andl
add
in
mov
in
add
pop
pop
scas
test
jmp
mull
nop
add
mov
add
outsb
insb
in
xchg
add
mov
jl
inc
inc
add
mov
add
add
add
sub
xchg
add
ss
add
mov
add
add
cld
push
add
add
add
enter
stos
sti
scas
cld
testl
insl
out
jmp
pop
lods
sub
add
data16
add
test
add
lret
xchg
add
sbb
fbstp
add
adc
or
add
push
jmp
loopne
lahf
mov
add
and
sbb
scas
movb
jecxz
add
enter
sbb
sub
push
mov
out
add
add
push
add
sub
cmpsl
outsl
leave
jmp
sub
or
jl
lods
rolb
adc
cmp
xchg
push
adc
add
and
mov
add
mov
leave
js
add
cwtl
push
add
add
jmp
adcl
mov
xchg
mov
add
shrl
lock
add
in
push
rcr
lods
mov
add
test
repnz
jae
mov
dec
stos
mov
sbb
xchg
mov
enter
cmpsl
outsb
cmp
add
cmp
mov
std
mov
lret
ds
add
add
adc
adc
addb
pop
add
xchg
dec
in
pop
xchg
add
cli
sbb
xchg
add
mov
add
cs
add
shll
add
sbb
pop
add
mov
cwtl
mov
mov
add
ficoms
add
repz
cli
lahf
inc
mov
mov
cmp
add
inc
add
in
pop
fdivs
jne
add
add
sahf
push
xchg
add
stos
jg
adc
in
stos
lock
fnstsw
push
testb
inc
add
jmp
add
xchg
and
mov
cmp
sbb
adc
add
icebp
std
jbe
xchg
add
jmp
clc
repz
rorl
add
cmpl
lods
add
add
push
mov
add
pop
dec
in
cli
push
add
flds
add
fildl
arpl
and
and
fdivrs
sub
inc
mov
scas
loop
push
add
mov
jp
add
add
ret
lock
mov
jno
or
lahf
xchg
push
add
adc
or
test
sti
push
pop
inc
add
sub
add
jmp
cltd
mov
addb
cmpl
mov
push
add
mov
pop
inc
aas
or
mov
add
add
add
xor
add
mov
and
enter
xchg
dec
rcrl
add
dec
push
add
test
add
hlt
add
addb
sti
or
sbb
add
lcall
inc
add
add
pop
cmp
push
movsl
lods
ret
ja
add
xchg
data16
iret
scas
out
sub
add
add
mov
enter
scas
enter
and
mov
repz
ljmp
sub
out
jmp
outsb
push
add
fdivr
call
imul
dec
les
aam
xchg
or
mov
add
icebp
das
pop
adc
cmpsl
sub
mov
or
add
mov
dec
rolb
add
add
jge
aaa
pop
and
add
add
jmp
xor
sub
dec
insl
roll
mov
cmp
push
mov
imul
jae
jne
add
in
push
add
push
out
pop
shll
add
mov
xchg
jo
jne
rolb
fsubrl
outsl
sub
lret
std
mov
lods
push
imul
add
add
mov
add
cs
mov
dec
adc
ror
sarl
jbe
and
push
out
sbb
jns
popa
mov
outsl
dec
mov
mov
lret
adc
imul
filds
fildll
out
into
test
lods
sub
jle
add
pop
pop
adc
enter
add
rolb
aas
jmp
add
xchg
test
add
dec
sub
imul
add
xchg
add
add
add
aam
pop
add
add
scas
xchg
add
dec
cmp
sbb
pop
xchg
loop
jg
testb
add
sbb
mov
dec
aam
movsb
add
xor
xchg
mov
dec
jnp
push
push
fbstp
jmp
imul
push
jge
add
mov
adc
mov
pop
xchg
add
mov
add
xchg
scas
outsl
xor
add
mov
dec
cmp
fwait
xor
xchg
jle
add
movsl
inc
add
add
pop
jno
jbe
xor
mov
outsb
mov
sbb
xchg
nop
add
add
add
add
add
inc
add
repnz
jae
add
clc
repnz
jae
pop
add
xor
outsb
sahf
add
push
xor
fwait
cld
nop
jmp
add
cmp
mov
sub
std
testb
cmp
ret
push
add
mov
jae
xor
add
pop
add
clc
repnz
jae
mov
add
mov
add
aam
or
nop
jae
add
mov
pushl
clc
repnz
jae
add
push
add
cmp
mov
xchg
ret
add
ljmp
mov
clc
repnz
jae
add
add
push
movsl
addr16
add
add
clc
repnz
jae
int
add
mov
xchg
add
clc
repnz
jae
add
xor
mov
push
mov
xchg
ret
add
jno
add
add
mov
mov
xchg
inc
add
add
movsl
jno
jae
nop
jmp
pop
mov
pop
fists
repnz
jae
pop
add
push
popl
jno
sub
popf
clc
repnz
jae
mov
mov
fwait
cld
nop
jmp
add
add
jae
mov
add
inc
ljmp
or
add
repnz
jae
push
xor
pusha
add
pop
fldl
xchg
ret
mov
pop
sub
push
clc
repnz
jae
scas
push
add
add
cli
jmp
add
aas
push
mov
mov
mov
clc
repnz
jae
popl
inc
ja
pop
sub
add
adc
repnz
jae
mov
add
add
clc
repnz
jae
add
mov
jno
add
mov
mov
clc
repnz
jae
dec
ljmp
movb
add
push
mov
add
jp
add
add
and
sub
add
dec
adc
mov
cmp
ret
add
pop
movsb
cld
jne
clc
repnz
jae
push
add
mov
clc
repnz
jae
mov
add
push
mov
xchg
ret
add
int3
add
dec
pusha
add
nop
jae
cmp
add
sahf
mov
jl
or
clc
repnz
jae
add
add
xor
loope
xor
clc
repnz
jae
fldl2e
add
add
addb
mov
fwait
cld
nop
jmp
mov
ljmp
add
dec
aas
add
dec
add
add
add
insl
add
clc
repnz
jae
add
insl
mov
xor
mov
push
mov
xchg
ret
out
mov
sbb
or
repnz
jae
add
stos
add
and
push
mov
xchg
ret
push
add
and
push
clc
repnz
jae
add
movsl
fwait
cld
nop
jmp
mov
add
dec
add
clc
repnz
jae
add
add
add
add
nop
jae
stos
cld
add
add
mov
mov
inc
add
add
sahf
add
xchg
imul
add
pop
add
add
std
jne
clc
repnz
jae
aas
add
les
fwait
cld
nop
jmp
out
out
aas
add
mov
clc
repnz
jae
int
repz
rolb
mov
add
repnz
jae
aas
push
jo
dec
test
push
mov
xchg
ret
ljmp
pusha
fwait
cld
nop
jmp
add
push
add
jo
add
add
repnz
jae
outsb
add
pop
mov
clc
repnz
jae
mov
add
aas
add
add
clc
repnz
jae
outsb
add
add
scas
lahf
mov
clc
repnz
jae
add
jae
and
mov
cmp
pop
lcall
or
add
scas
add
lods
mov
add
popl
add
insl
mov
clc
repnz
jae
add
add
popl
repz
cld
nop
jmp
pop
add
mov
test
and
add
repnz
jae
push
add
das
jne
fwait
cld
nop
jmp
add
add
add
mov
add
mov
clc
repnz
jae
popl
add
shlb
jmp
jo
add
sub
jae
add
scas
add
repz
repnz
jae
lret
mov
add
mov
xchg
ret
lods
add
inc
sbb
mov
xchg
ret
xor
and
add
mov
xchg
ret
mov
jo
xchg
repnz
push
push
mov
xchg
ret
mov
pop
cmc
test
dec
or
mov
xchg
ret
add
repz
nop
jae
insl
add
pusha
add
add
clc
repnz
jae
stos
add
adc
repnz
jae
aas
int
add
push
jl
rolb
repnz
jae
add
mov
and
nop
jae
scas
add
mov
add
push
imul
sub
adc
add
add
add
add
in
dec
inc
pushf
dec
outsb
mov
mov
add
lods
call
clc
repnz
jae
add
xor
mov
clc
repnz
jae
flds
xor
add
jno
mov
clc
repnz
jae
add
add
in
jne
clc
repnz
jae
pop
mov
jo
xor
and
add
repnz
jae
out
push
movl
cld
nop
jmp
add
dec
mov
push
add
rolb
mov
push
mov
xchg
ret
add
add
add
push
fwait
cld
nop
jmp
inc
rcrl
movsl
add
clc
repnz
jae
mov
xor
add
out
push
push
mov
xchg
ret
cld
add
cmp
add
and
clc
repnz
jae
aas
add
stos
movsb
add
mov
and
add
repnz
jae
dec
pop
mov
add
sar
repnz
jae
add
movsl
add
jno
mov
clc
repnz
jae
movsl
roll
ds
clc
repnz
jae
add
pop
mov
clc
repnz
jae
push
add
add
ljmp
repnz
jae
mov
xchg
add
add
cmp
or
fwait
cld
nop
jmp
push
jno
add
outsb
add
les
repnz
jae
add
push
mov
aas
icebp
or
nop
jae
ljmp
mov
push
mov
xchg
ret
add
flds
or
nop
jmp
add
push
add
add
add
add
clc
repnz
jae
pop
add
add
jne
clc
repnz
jae
sahf
push
in
add
nop
jmp
sahf
popl
lods
pop
add
dec
movb
mov
fwait
cld
nop
jmp
mov
add
mov
lods
clc
repnz
jae
aas
rcll
icebp
add
cld
nop
jmp
add
add
add
push
je
or
popa
clc
repnz
jae
xor
add
add
jg
fwait
cld
nop
jmp
add
mov
adc
test
inc
add
add
push
add
add
jp
andl
jae
add
add
subl
jae
add
add
movsl
roll
fwait
cld
nop
jmp
mov
scas
dec
sub
clc
repnz
jae
add
icebp
stos
add
nop
jmp
dec
ja
lods
add
ja
cli
div
clc
repnz
jae
add
add
sub
subl
nop
jae
push
ljmp
add
nop
jae
add
clc
repnz
jae
mov
add
ljmp
push
mov
xchg
ret
add
add
inc
add
mov
cmp
ret
add
add
mov
sub
fwait
cld
nop
jmp
pop
ljmp
mov
fwait
cld
nop
jmp
mov
or
nop
jae
add
roll
add
aad
add
mov
movl
test
add
add
repnz
jae
add
push
pop
call
clc
repnz
jae
push
pop
add
or
nop
jae
outsb
mov
xchg
add
repnz
jae
jno
push
dec
icebp
add
pop
clc
repnz
jae
mov
xor
out
pop
fwait
cld
nop
jmp
lods
mov
movsb
dec
add
add
nop
jmp
movsl
add
add
add
add
nop
jmp
add
xchg
pop
pop
ja
mov
pushf
mov
clc
repnz
jae
add
pop
clc
repnz
jae
add
add
inc
mov
clc
repnz
jae
add
mov
mov
adc
cld
nop
jmp
add
outsb
jno
add
fistl
repnz
jae
add
dec
ljmp
jae
mov
push
in
fnstcw
fwait
add
clc
repnz
jae
add
add
add
add
nop
clc
repnz
jae
add
add
add
mov
int
clc
repnz
jae
ljmp
aas
xchg
add
clc
repnz
jae
ljmp
and
push
mov
xchg
ret
add
jmp
in
pop
pop
scas
add
add
add
repnz
jae
int
dec
add
ljmp
mov
clc
repnz
jae
push
add
add
nop
jae
mov
aas
xor
fisttpll
jmp
insl
add
jno
add
out
mov
clc
repnz
jae
movsl
add
repz
xchg
pop
push
clc
repnz
jae
add
add
aaa
mov
jmp
add
add
add
add
xchg
in
add
clc
repnz
jae
insl
jno
lret
add
rep
push
mov
xchg
ret
add
push
int3
ljmp
push
fwait
cld
nop
jmp
push
add
int
add
or
clc
repnz
jae
roll
add
add
add
push
int
movsb
add
add
push
mov
xchg
ret
pop
add
add
jmp
mov
or
add
add
add
aad
add
mov
nop
jae
movsl
insl
push
add
add
scas
scas
push
push
mov
xchg
ret
repz
add
and
add
clc
repnz
jae
push
add
add
movsl
in
push
lods
push
clc
repnz
jae
add
lods
xchg
cs
clc
repnz
jae
ljmp
dec
lods
push
mov
xchg
ret
add
and
xchg
add
add
repnz
jae
cmp
repz
xchg
cmpl
subl
add
inc
clc
repnz
jae
push
int3
mov
add
add
mov
mov
push
mov
xchg
ret
xor
add
add
sub
jae
add
add
test
fwait
cld
nop
jmp
jno
add
in
mov
cli
inc
add
push
add
and
clc
repnz
jae
add
out
xchg
fwait
cld
nop
jmp
add
add
add
add
mov
jmp
incl
xor
insl
cmp
jne
add
add
jae
dec
add
add
jo
add
push
clc
repnz
jae
ljmp
add
add
outsb
and
repnz
jae
jno
out
add
add
pop
clc
repnz
jae
movl
mov
addr16
jne
fwait
cld
nop
jmp
add
inc
xor
add
jae
xor
add
inc
add
add
clc
repnz
jae
xor
out
mov
ljmp
repnz
jae
pop
add
jno
fwait
mov
clc
repnz
jae
xor
add
add
pushf
add
push
mov
xchg
ret
pop
insl
in
mov
jmp
jae
add
popl
mov
mov
xchg
ret
xor
cmp
inc
jp
fwait
cld
nop
jmp
add
add
add
add
fwait
cld
nop
jmp
fldcw
idiv
repnz
jae
aas
pop
add
add
sbb
nop
jae
lods
add
pop
and
add
clc
repnz
jae
push
xor
push
add
clc
repnz
jae
mov
add
add
xor
inc
cmp
nop
jae
xor
mov
push
jno
add
test
clc
repnz
jae
ljmp
movzwl
fwait
cld
nop
jmp
add
imul
add
fwait
cld
nop
jmp
cld
add
movsl
mov
leave
push
add
clc
repnz
jae
mov
add
repnz
jae
add
ja
movsl
lock
nop
jae
add
add
pop
in
add
mov
xchg
ret
shr
add
lock
iret
or
inc
add
add
add
inc
and
mov
repnz
jae
repz
push
push
mov
xchg
ret
pop
ljmp
mov
clc
repnz
jae
cmp
mov
add
clc
repnz
jae
add
pop
dec
clc
repnz
jae
add
add
add
add
fwait
cld
nop
jmp
pop
ja
sahf
add
jns
xchg
cli
xor
push
mov
xchg
ret
roll
in
add
add
add
pop
sbb
add
repnz
jae
fldl2e
mov
cmpl
jmp
incl
add
add
mov
push
mov
xchg
ret
add
add
repnz
jae
repz
lods
shl
fwait
cld
nop
jmp
push
add
xor
add
repnz
jae
add
lret
add
nop
jae
jo
int
pop
dec
add
pop
cld
inc
add
push
sub
push
mov
add
nop
jae
add
xchg
outsb
or
clc
repnz
jae
movl
fwait
cld
nop
jmp
ljmp
xor
or
cli
inc
add
inc
add
push
push
sub
out
faddl
xchg
ret
add
mov
sti
cmpl
fwait
cld
nop
jmp
insl
int
adc
out
adc
mov
add
out
add
add
fwait
cld
nop
jmp
add
pop
dec
mov
sahf
sub
mov
xchg
ret
add
push
add
mov
xchg
ret
add
sub
add
repnz
jae
icebp
and
aas
mov
nop
jae
push
add
scas
mov
pusha
add
add
clc
repnz
jae
and
je
fwait
cld
nop
jmp
and
insl
mov
mov
clc
repnz
jae
add
sub
mov
xchg
ret
add
mov
mov
jmp
cmp
sub
in
sub
add
addl
add
clc
repnz
jae
dec
mov
add
add
push
push
mov
xchg
ret
pop
add
test
out
inc
push
mov
xchg
ret
add
add
gs
repnz
jae
pop
pop
and
nop
add
push
clc
repnz
jae
mov
add
add
aas
add
clc
sub
fwait
cld
nop
jmp
add
addb
movzwl
clc
repnz
jae
add
repz
mov
xchg
ret
pop
add
add
pop
je
clc
repnz
jae
dec
ljmp
lcall
add
mov
add
popa
add
mov
xchg
ret
mov
add
jo
mov
push
mov
xchg
ret
mov
add
dec
and
clc
repnz
jae
mov
add
cmp
mov
xchg
ret
outsb
movsl
add
clc
mov
clc
repnz
jae
out
push
xor
add
jecxz
push
mov
add
les
add
hlt
add
test
repnz
jae
aas
add
pop
movswl
fwait
cld
nop
jmp
pop
add
add
jmp
add
add
jno
add
add
add
fwait
cld
nop
jmp
icebp
mov
int
mov
add
fwait
cld
nop
jmp
and
mov
jns
jns
enter
jae
out
add
int3
pop
dec
add
outsl
fwait
cld
nop
jmp
mov
popf
add
push
mov
xchg
ret
add
add
ljmp
fwait
cld
nop
jmp
add
cld
pop
movsl
cmpsb
add
ss
repnz
jae
add
outsb
pop
push
mov
fdivrp
repnz
jae
cmp
add
imul
clc
repnz
jae
jo
icebp
roll
out
pusha
push
mov
xchg
ret
mov
add
stos
add
pop
clc
repnz
jae
icebp
xchg
add
mov
push
add
inc
add
add
clc
repnz
jae
out
stos
xchg
int3
xchg
insb
mov
clc
repnz
jae
xchg
add
add
push
mov
push
add
add
push
mov
xchg
ret
mov
add
cld
nop
jmp
add
sub
push
add
int3
sahf
testb
div
fwait
cld
nop
jmp
add
cld
add
cmp
decl
mov
nop
jmp
add
mov
push
push
mov
xchg
ret
mov
cmp
pop
popl
clc
repnz
jae
add
mov
dec
add
add
push
mov
xchg
ret
dec
add
fdivr
repnz
jae
add
add
mov
add
decl
add
add
add
int
insl
loop
jae
jb
clc
repnz
jae
cmp
mov
pushl
clc
repnz
jae
scas
add
add
dec
jmp
dec
add
add
aas
cmp
mov
lods
add
jl
cs
insb
clc
repnz
jae
xor
int3
in
mov
clc
repnz
jae
add
add
push
clc
repnz
jae
pop
add
int3
test
jne
push
mov
xchg
ret
xchg
in
mov
call
inc
add
add
add
add
jmp
mov
push
xor
mov
push
jae
xor
add
fwait
cld
nop
jmp
push
mov
test
or
nop
jae
aas
add
fimuls
repnz
jae
pop
and
scas
add
push
fwait
cld
nop
jmp
mov
add
mov
xchg
add
add
add
clc
repnz
jae
add
jns
sub
clc
repnz
jae
pop
add
mov
add
fmull
mov
adc
repnz
jae
and
rolb
mov
jae
movsb
add
int3
push
sahf
push
adc
mov
mov
push
mov
xchg
ret
dec
xor
dec
mov
xor
clc
repnz
jae
cmp
add
push
mov
xchg
ret
add
add
ja
and
push
mov
xchg
ret
push
add
add
imul
loop
add
mov
add
and
repnz
jae
add
add
jg
clc
repnz
jae
add
xor
add
dec
clc
dec
inc
clc
repnz
jae
mov
mov
mov
push
fwait
cld
nop
jmp
xor
pop
xor
int
add
push
clc
repnz
jae
ja
aas
push
popl
sahf
lret
add
clc
repnz
jae
push
add
add
cmpsb
add
add
fists
repnz
jae
add
flds
mov
add
mov
xor
dec
ss
fwait
cld
nop
jmp
add
add
add
cmc
inc
add
movsb
ljmp
mov
clc
repnz
jae
aas
mov
ljmp
cld
nop
jmp
add
add
inc
add
add
clc
repnz
jae
push
jno
pop
ret
mov
clc
repnz
jae
mov
add
adc
push
mov
xchg
ret
add
movsb
add
add
dec
adc
push
incb
xchg
ret
add
add
mov
push
push
mov
xchg
ret
add
scas
mov
push
mov
xchg
ret
add
add
stos
add
clc
repnz
jae
add
dec
jns
pop
ljmp
push
mov
xchg
ret
jno
movl
add
ljmpw
and
add
sub
add
fwait
cld
nop
jmp
add
pop
lret
adc
mov
jae
add
pop
add
addb
add
sbb
inc
adc
add
cld
mov
inc
add
sub
repnz
jae
pop
add
popa
add
cld
nop
jmp
movsl
add
pop
add
sbb
mov
push
clc
repnz
jae
add
add
mov
popa
add
repnz
jae
insl
add
add
mov
cld
mov
fwait
cld
nop
jmp
add
add
inc
add
add
add
fwait
cld
nop
jmp
mov
movsb
push
push
push
add
add
movsb
add
dec
fwait
cld
nop
jmp
ljmp
add
fadd
fwait
cld
nop
jmp
xor
add
add
popl
add
lea
clc
repnz
jae
jo
insl
add
xor
clc
repnz
jae
add
not
fwait
cld
nop
jmp
add
insl
mov
icebp
ja
addb
mov
fwait
cld
nop
jmp
add
shll
aam
push
add
test
dec
mov
clc
repnz
jae
push
add
lds
clc
repnz
jae
add
add
ljmp
add
clc
repnz
jae
add
add
add
cld
hlt
add
cld
nop
jmp
movsb
and
cmpsl
mov
clc
fwait
cld
nop
jmp
add
add
push
mov
sub
nop
jae
in
mov
add
mov
repnz
jae
icebp
cmp
ja
cmp
push
mov
xchg
ret
movsl
add
mov
clc
repnz
jae
repz
les
roll
mov
cld
push
mov
xchg
ret
dec
mov
add
add
sahf
lea
fwait
cld
nop
jmp
icebp
add
icebp
add
adc
ret
repz
shl
fwait
cld
nop
jmp
add
and
ljmp
jae
clc
repnz
jae
scas
add
or
addr16
add
mov
scas
movsb
add
cld
nop
jmp
pop
movsl
movsb
mov
push
add
mov
clc
repnz
jae
add
add
add
lea
push
mov
xchg
ret
add
ja
ljmp
jmp
sahf
sahf
fldcw
add
add
sub
clc
repnz
jae
add
int
clc
repnz
jae
sahf
movsl
add
add
sub
clc
repnz
jae
add
add
jne
clc
repnz
jae
ljmp
mov
clc
repnz
jae
add
add
add
inc
popa
xlat
loopne
sbb
mov
adc
repnz
jae
jno
aas
cld
add
cli
jne
clc
repnz
jae
ljmp
inc
sub
repnz
jae
add
add
int
dec
mov
clc
repnz
jae
push
popl
add
push
clc
repnz
jae
add
movsb
add
cmp
fwait
cld
nop
jmp
pop
add
popl
ljmp
push
mov
xchg
ret
push
add
add
add
repnz
jae
add
add
add
fimull
jmp
add
push
add
nop
jae
add
lret
flds
int3
addb
pusha
add
mov
nop
jae
dec
add
cmpsl
lods
call
fwait
cld
nop
jmp
sahf
ja
add
clc
repnz
jae
add
add
test
repnz
jae
aas
mov
mov
clc
repnz
jae
add
mov
je
clc
repnz
jae
add
jo
movzwl
clc
repnz
jae
add
mov
add
xabort
nop
jae
int3
add
dec
add
mov
pop
repnz
mov
mov
clc
repnz
jae
add
mov
ds
clc
repnz
jae
add
add
das
mov
clc
repnz
jae
add
mov
repnz
jae
add
add
add
rep
clc
repnz
jae
ljmp
in
es
lds
and
push
mov
xchg
ret
mov
add
pusha
clc
repnz
jae
xor
mov
add
add
hlt
add
add
add
cld
nop
jmp
add
pop
add
add
cmpl
pop
idiv
incl
and
fnstsw
clc
repnz
jae
jns
jno
or
jne
clc
repnz
jae
mov
add
roll
and
clc
repnz
jae
mov
xchg
add
repnz
jae
mov
add
add
mov
fwait
cld
nop
jmp
int
add
add
xor
add
clc
repnz
jae
add
adc
fwait
cld
nop
jmp
add
mov
inc
jno
and
mov
mov
clc
repnz
jae
dec
dec
cld
mov
pop
jo
sahf
add
clc
repnz
jae
add
push
add
and
mov
xchg
ret
mov
jno
add
mov
clc
repnz
jae
dec
add
add
nop
jae
add
add
add
and
popa
popa
addr16
jae
outsb
add
in
ja
dec
inc
cmp
jne
clc
repnz
jae
mov
int
add
cmp
fucomi
inc
add
add
add
lods
mov
clc
repnz
jae
add
sub
sti
clc
repnz
jae
add
add
roll
aas
xor
push
mov
xchg
ret
aas
add
add
xor
hlt
add
xor
push
clc
repnz
jae
push
mov
cld
and
mov
push
clc
repnz
jae
shll
add
mov
repnz
jae
add
cmp
add
clc
repnz
jae
add
inc
inc
add
add
adc
add
js
mov
add
cld
mov
clc
repnz
jae
add
add
sbb
clc
repnz
jae
add
shr
clc
repnz
jae
aas
push
mov
add
clc
repnz
jae
add
add
add
xor
add
clc
repnz
jae
scas
add
add
push
rolb
add
add
clc
repnz
jae
mov
and
xor
push
mov
xchg
ret
inc
jns
add
sub
cld
nop
jmp
scas
pop
add
add
push
mov
xchg
ret
add
mov
stos
mov
data16
inc
add
push
ja
pop
in
push
push
mov
xchg
ret
add
add
add
push
mov
xchg
ret
pop
pop
mov
hlt
add
or
repnz
jae
add
add
xor
repnz
jae
add
add
add
ss
popa
clc
repnz
jae
add
add
add
add
push
clc
repnz
jae
add
mov
icebp
cld
ja
clc
repnz
jae
add
int
add
mov
clc
repnz
jae
push
ljmp
sbb
jae
ljmp
xchg
movsl
pop
mov
clc
repnz
jae
push
mov
xchg
ret
add
add
add
inc
inc
pop
push
clc
repnz
jae
add
sub
pushl
dec
add
push
pop
outsb
xchg
cmp
add
repnz
jae
dec
pop
add
push
fwait
cld
nop
jmp
add
add
add
inc
clc
repnz
jae
add
add
lds
jae
push
sahf
int3
mov
mov
sar
repnz
jae
out
add
movsb
dec
orl
cmp
repnz
jae
ljmp
add
clc
repnz
jae
sahf
sub
push
mov
dec
mov
clc
repnz
jae
mov
test
clc
repnz
jae
add
add
mov
cmc
movsl
sub
mov
xchg
ret
push
mov
xor
adc
dec
add
fwait
cld
nop
jmp
out
sahf
mov
sub
mov
xchg
ret
mov
cld
out
and
mov
clc
repnz
jae
lret
push
sahf
add
stos
pop
push
mov
xchg
ret
mov
add
mov
clc
repnz
jae
roll
pop
aas
add
push
cmpsl
or
jae
add
add
mov
stos
clc
repnz
jae
push
jns
add
shll
out
test
add
adc
ret
mov
clc
repnz
jae
sub
pop
aas
add
fstl
mov
xchg
ret
pop
add
lret
outsb
dec
mov
clc
repnz
jae
ljmp
rep
fwait
cld
nop
jmp
add
mov
add
add
mov
push
mov
xchg
ret
add
add
pop
jne
add
andl
jae
add
mov
call
fwait
cld
nop
jmp
add
in
push
mov
add
jmp
add
push
mov
jmp
add
add
push
add
or
cld
nop
jmp
sahf
mov
jno
add
add
sbb
mov
xchg
ret
add
mov
xor
add
jae
add
add
adc
lods
mov
fwait
cld
nop
jmp
xor
popl
bextr
data16
repnz
jae
add
add
cld
decl
push
mov
xchg
ret
push
cmp
mov
and
rcrl
incl
mov
add
add
push
loopne
mov
xchg
ret
add
add
add
jmp
jmp
mov
inc
out
lahf
add
clc
repnz
jae
add
add
jp
test
lock
clc
repnz
jae
jno
add
push
mov
xchg
ret
mov
shll
ljmp
add
add
in
incl
jno
mov
add
fwait
cld
nop
jmp
scas
jno
sub
test
jecxz
clc
repnz
jae
push
add
pusha
add
sub
inc
add
int3
int
xor
loope
mov
clc
repnz
jae
add
push
add
sub
add
repnz
jae
ljmp
test
mov
xchg
ret
and
and
clc
repnz
jae
mov
mov
add
cmp
add
push
pop
pop
clc
repnz
jae
ljmp
add
clc
repnz
jae
flds
add
into
push
fwait
cld
nop
jmp
fnstenv
movl
clc
sti
xor
repnz
jae
push
sahf
add
xchg
in
es
clc
repnz
jae
add
add
add
jmp
add
add
add
add
mov
nop
jae
stos
outsb
add
dec
and
int3
pop
fwait
cld
nop
jmp
add
add
mov
test
repnz
jae
pop
inc
fsts
add
inc
dec
add
clc
repnz
jae
add
icebp
jns
cmp
add
and
clc
repnz
jae
add
push
add
jl
dec
or
repnz
jae
add
movsb
push
out
mov
fwait
cld
nop
jmp
dec
push
add
pop
pop
cmp
push
mov
xchg
ret
mov
lret
loopne
mov
add
lods
clc
repnz
jae
ja
push
add
rolb
add
clc
repnz
jae
cld
add
xchg
and
clc
repnz
jae
add
add
fdivs
sar
nop
jae
and
add
into
add
fwait
cld
nop
jmp
xor
mov
popf
fwait
cld
nop
jmp
push
inc
add
add
inc
sbb
cld
nop
jmp
add
add
mov
mov
push
mov
xchg
ret
out
add
dec
sub
add
jmp
call
mov
mov
dec
add
ljmp
lock
add
aas
add
add
and
repnz
jae
add
add
pop
add
sti
inc
add
sahf
add
mov
pop
clc
repnz
jae
add
cld
scas
xor
test
mov
xor
addr16
rolb
add
add
adc
cmp
repnz
jae
fldcw
add
add
push
mov
xchg
ret
add
add
pop
xor
mov
sub
std
inc
add
mov
dec
mov
clc
repnz
jae
add
add
lods
lret
or
xor
add
pop
scas
add
out
aas
add
or
repnz
jae
add
and
add
outsl
push
mov
add
add
add
dec
add
xor
add
add
add
repnz
jae
mov
out
movsl
jo
scas
push
push
mov
xchg
ret
add
push
push
mov
fisttpll
nop
jae
add
xor
add
clc
repnz
jae
push
add
pop
push
mov
xchg
ret
cmp
movsb
push
pop
int
pop
mov
push
mov
xchg
ret
add
add
add
add
fwait
cld
nop
jmp
mov
mov
add
add
jmp
incl
ljmp
dec
add
add
je
loopne
ds
clc
repnz
jae
push
xchg
mov
adc
bound
mov
clc
repnz
jae
outsb
add
cmc
icebp
leave
mov
clc
repnz
jae
cmp
add
mov
push
mov
xchg
ret
add
lret
push
add
mov
push
mov
xchg
ret
add
sahf
add
push
clc
repnz
jae
pop
mov
add
add
pop
mov
clc
repnz
jae
add
add
add
mov
push
push
mov
xchg
ret
push
dec
dec
add
push
mov
mov
clc
repnz
jae
add
popl
add
add
add
repnz
jae
sahf
pop
aas
xor
and
fwait
cld
nop
jmp
add
add
arpl
nop
jmp
ljmp
xor
mov
pushl
mov
stos
xchg
in
and
push
mov
xchg
ret
movsl
add
add
loope
repnz
jae
pop
push
icebp
add
pop
add
cs
push
mov
xchg
ret
roll
jns
and
inc
add
outsb
pusha
fwait
cld
nop
jmp
push
push
add
mov
mov
add
ja
outsb
je
repnz
jae
xchg
aas
aas
icebp
imul
add
mov
xchg
ret
pop
mov
add
add
add
mov
push
clc
repnz
jae
add
mov
add
repnz
jae
int3
add
inc
repz
loopne
add
mov
clc
repnz
jae
ljmp
mov
xchg
ret
lods
add
add
add
imul
nop
jmp
lods
add
mov
add
mov
fldl2t
addr16
dec
add
mov
add
add
jns
add
pop
sub
in
pushf
lods
add
mov
call
fisubl
ret
clc
repnz
jae
add
add
mov
xchg
ret
add
add
pop
add
sub
push
mov
xchg
ret
add
ljmp
repnz
jae
add
push
in
mov
adcl
cld
or
jmp
push
add
add
mov
je
clc
repnz
jae
add
mov
push
mov
xchg
ret
int3
sub
fisttps
nop
jae
mov
pop
fcoms
mov
xchg
ret
add
and
jno
add
jmp
pushl
mov
add
movsl
pop
push
mov
lcall
jno
popl
and
add
rcll
testb
cmp
ret
push
insl
add
outsb
icebp
enter
arpl
cld
nop
jmp
add
add
nop
jae
push
add
lahf
lea
clc
repnz
jae
add
pop
mov
int3
push
clc
repnz
jae
dec
aas
mov
int
and
sbb
push
mov
xchg
ret
add
dec
add
add
mov
add
cld
nop
jmp
add
jo
mov
xchg
add
mov
pop
je
clc
repnz
jae
cld
mov
cld
nop
jmp
add
push
repz
add
or
clc
repnz
jae
ja
inc
mov
add
add
repnz
jae
add
dec
xor
clc
repnz
jae
add
mov
clc
repnz
jae
cmp
repz
add
aas
pop
clc
repnz
jae
add
mov
push
mov
dec
or
mov
xchg
ret
add
push
fwait
cld
nop
jmp
add
pop
add
add
fwait
cld
nop
jmp
ljmp
aaa
push
add
add
repnz
jae
add
sub
jecxz
add
repz
and
repnz
jae
mov
cltd
mov
push
mov
xchg
ret
add
mov
psubsb
clc
repnz
jae
popl
movsb
clc
repnz
jae
push
add
add
clc
repnz
jae
add
pop
add
clc
imul
clc
repnz
jae
add
add
add
and
repnz
jae
mov
add
movsl
mov
jnp
test
repnz
jae
add
lret
xor
fwait
cld
nop
jmp
add
add
add
add
ds
clc
repnz
jae
add
add
mov
cmp
mov
inc
add
sahf
and
jl
and
clc
rolb
xchg
ret
movsl
xor
lret
rep
push
mov
xchg
ret
add
out
sub
lcall
add
pop
add
add
mov
call
clc
repnz
jae
mov
add
clc
repnz
jae
lods
add
add
add
jmp
call
pop
add
add
jo
stos
add
add
rcrl
lods
and
imul
decl
add
pop
lods
push
clc
repnz
jae
ja
pop
add
add
adc
and
or
inc
in
mov
xchg
ret
ljmp
mov
xchg
ret
add
roll
mov
add
lahf
mov
clc
repnz
jae
push
add
add
repz
add
clc
repnz
jae
xor
pop
jne
fwait
cld
nop
jmp
add
add
test
push
mov
popf
sbb
add
es
add
dec
add
add
js
add
add
test
add
push
mov
add
mov
add
pop
add
mov
popf
mov
add
xchg
add
mov
cmp
dec
push
int3
xchg
addb
push
aam
add
mov
in
inc
testb
add
mov
rolb
sahf
inc
add
add
mov
adc
pop
mov
add
add
xchg
add
sub
xorl
shll
jge
add
sbb
add
lret
sti
daa
lods
leave
test
inc
xchg
inc
add
out
inc
pop
pop
add
mov
add
adc
add
add
subl
cmc
cmp
loop
frstor
add
fisttps
add
add
mov
add
or
add
outsl
call
aam
fninit
nop
add
add
xlat
jg
aaa
mov
xchg
inc
mov
add
movsl
cld
and
add
into
jns
xchg
add
int
cwtl
scas
xchg
add
add
insb
add
xlat
sbb
ret
add
lea
ljmp
pop
xor
fwait
dec
xchg
mov
add
gs
lods
add
add
add
add
inc
xchg
cmp
sub
lods
test
mov
int
inc
xor
xchg
sarl
add
ljmp
fdivl
lods
fsubs
jmp
cli
and
movsl
adc
add
mov
pop
nop
add
mov
sub
aas
push
sbb
mov
ficoml
add
in
xor
loopne
jb
push
pop
sahf
or
loop
add
add
xor
aas
jb
dec
ret
out
iret
dec
fstpt
popf
fstpl
mov
dec
mov
add
push
lock
add
xor
je
inc
add
mov
add
add
add
mov
jp
aaa
mov
stc
test
sbb
sbb
mov
pop
out
add
add
add
fcomps
jmp
add
sbb
adc
adc
jp
add
lret
icebp
inc
add
add
add
sbb
das
dec
rolb
in
fcoms
inc
add
add
cmpsl
daa
push
add
test
and
add
add
cmp
sbb
add
imul
mov
dec
adc
pop
and
push
add
mov
jg
add
or
add
gs
mov
or
rolb
or
sahf
push
shll
cmp
in
jp
popa
lds
add
and
mov
fmuls
jne
sbb
mov
fidivrl
je
jp
fistl
add
mov
sub
mov
inc
add
and
mov
rolb
dec
sub
add
add
sbb
mov
jb
jg
add
or
cmpsb
add
add
add
rcrl
sub
add
call
add
and
pop
pop
mov
sub
mov
xchg
add
push
les
pop
loope
add
jecxz
sbb
jnp
add
sbb
mov
mov
add
jmp
adc
jo
pop
lahf
inc
add
jo
lret
push
stos
mov
lea
mov
mov
out
mov
andl
data16
add
add
stos
addb
add
mov
pop
xchg
arpl
insb
xchg
add
loopne
xor
fdivs
add
or
add
and
mov
add
jecxz
add
cmp
add
jno
add
add
loope
add
mov
add
add
inc
add
lods
mov
je
int3
call
add
pop
js
dec
incb
and
cmp
aaa
insb
inc
add
add
lds
add
add
in
lret
enter
and
jb
inc
add
xlat
jnp
xor
subl
pop
add
mov
pop
hlt
add
mov
insl
add
sub
inc
add
cltd
jg
or
fldt
mov
je
mov
into
and
nop
add
or
mov
out
call
sbb
add
add
inc
add
add
stos
out
les
mov
ret
insb
cmpsb
add
inc
add
incb
movsl
movsb
add
testl
loopne
push
add
and
push
add
or
shll
out
xor
adc
jge
xor
pop
pop
movl
add
adc
push
add
addb
add
add
scas
mov
sti
sti
mov
test
cli
push
jns
and
out
scas
cwtl
xlat
sub
dec
add
dec
mov
jge
add
mov
adc
stos
or
add
jnp
jecxz
lahf
add
sahf
fdivrs
out
sahf
push
and
popa
push
js
add
add
and
mov
cmpsb
add
outsl
push
sbb
inc
add
gs
cmpsb
add
add
sub
add
add
jl
jle
int3
imul
jo
sti
scas
mov
inc
add
adc
add
dec
lea
sub
mov
push
add
add
add
fimuls
adc
add
add
fs
mov
add
mov
inc
push
push
cs
add
push
jb
mov
cwtl
xchg
add
add
cmpsb
add
adc
mov
shrl
shll
enter
ret
repz
insb
cmp
fimull
clc
adc
jl
push
push
add
cmp
add
idiv
pop
imul
sbb
out
jecxz
add
push
insb
xor
popa
fbld
add
add
xchg
add
je
sbb
xor
test
xchg
add
jae
in
int
bound
mov
pop
jb
dec
or
add
inc
int3
mov
repz
pop
call
add
mov
jns
adc
test
clc
push
add
mov
and
daa
push
out
mov
stos
notl
andl
mov
cmc
mov
add
xchg
fdivs
pusha
add
or
add
add
adc
add
out
iret
and
mov
add
aam
pop
addb
add
pop
dec
jmp
add
push
rolb
push
sbb
cmpsb
add
add
dec
add
mov
add
mov
add
mov
imull
mov
inc
into
pop
pop
rolb
adc
pop
addb
jno
add
mov
dec
jge
fdivp
add
jp
movsl
cmp
jb
loop
push
add
jmp
clc
pop
shrl
and
mov
pop
xchg
add
add
out
jns
test
into
jbe
mov
add
leave
aad
mov
adc
std
push
xlat
sbb
add
dec
and
mov
add
pop
push
add
inc
add
add
mov
jmp
sub
pop
testb
pop
addb
leave
dec
dec
dec
in
add
in
jb
xorl
pop
lea
cmp
jo
repnz
mov
dec
rolb
add
mov
add
movb
adc
mov
out
popa
pop
js
daa
mov
add
sbb
lahf
and
mov
insl
mov
add
lcall
pop
iret
les
aas
mov
mov
lret
dec
dec
mov
movb
stos
add
cli
repnz
and
std
mov
daa
addb
popf
les
sbb
pushf
inc
add
mov
add
mov
in
pop
cltd
inc
add
add
add
pusha
add
mov
mov
add
sub
add
add
int
sub
pop
jl
pop
cs
lock
out
lea
add
repz
mov
pop
inc
add
add
shll
add
rolb
jmp
jno
inc
std
stos
dec
and
fisttps
add
pop
xor
add
fsubr
aad
pushf
push
add
jo
xor
inc
add
sub
xor
jl
add
rolb
std
js
hlt
add
pop
pop
or
cmp
add
add
mov
cmc
dec
and
enter
sub
add
hlt
add
mov
fwait
sub
jnp
adcl
ret
pop
sub
or
movb
push
iret
or
dec
xlat
xchg
add
cmp
xor
cwtl
inc
into
pop
clc
outsl
xchg
in
add
or
add
mov
ljmp
inc
testb
add
mov
xchg
add
pop
fcoms
mov
add
add
add
addb
addb
testb
js
ffree
xor
ds
sbb
jns
add
imul
cwtl
mov
add
push
add
jb
mov
icebp
pop
icebp
jne
pop
dec
mov
push
add
xchg
adc
inc
add
or
add
mov
add
pushf
cmp
out
jp
jne
adc
add
loop
inc
je
lahf
mov
test
dec
shll
add
in
sub
push
add
out
clc
cs
adc
dec
xlat
movsb
add
push
add
push
add
pop
insl
data16
add
lods
data16
shll
add
push
add
sbb
push
add
daa
inc
cli
xlat
repz
scas
add
add
ds
je
lock
sbb
jae
mov
add
add
xchg
loop
adc
mov
cmp
xor
cmp
aaa
push
add
mov
push
add
xchg
in
mov
lds
subl
sbb
add
inc
add
enter
adc
adc
jo
adc
xor
in
iret
out
mov
test
out
cwtl
clc
adc
je
test
mov
insl
in
insb
mov
add
rolb
adc
add
enter
add
cmpsl
js
xlat
addr16
imul
ja
add
mov
xchg
daa
jge
cmc
movsl
mov
out
aaa
jle
push
popf
mov
add
mov
jmp
adc
sbb
mov
xor
push
add
mov
in
in
out
jns
mov
adc
out
dec
mov
jae
mov
add
pop
inc
add
push
stc
ljmp
jecxz
pop
mov
add
cld
xor
and
in
sahf
rcrl
fcomps
adc
mov
add
adc
xchg
mov
mov
pop
loopne
sbb
inc
add
add
cmp
add
add
push
loope
iret
lret
jno
addb
add
insb
or
stos
andl
sbb
cmpsb
add
loop
xchg
cli
mov
and
mov
adcl
lock
add
add
add
jns
add
push
jl
add
loop
or
mov
inc
add
js
add
add
add
add
icebp
xor
testb
add
jmp
add
and
adc
jb
cmpsb
add
dec
outsb
cmp
add
add
adc
outsl
mov
mov
jge
jae
add
dec
push
add
movsl
popa
push
jnp
pop
mov
jl
add
daa
lahf
into
test
fnstsw
add
sbb
cltd
mov
data16
jp
movsb
add
leave
inc
add
inc
add
in
add
mov
incl
push
push
lock
in
push
flds
lcall
add
add
or
sub
dec
rolb
push
add
xchg
add
push
xchg
sbb
dec
jno
sbb
xlat
sti
jb
int
xchg
sbb
adcl
jecxz
dec
pop
call
xlat
fldl
mov
fcompl
repnz
mov
mov
mov
out
pop
sub
push
sahf
dec
or
in
scas
pop
loopne
and
into
rolb
push
xchg
add
into
mov
pusha
add
shrl
dec
pop
fwait
add
sub
cmpsl
int3
movsl
out
gs
and
mov
and
mov
sbb
outsb
addr16
add
cli
jo
xchg
add
jp
jo
jg
jbe
fistl
int3
rcrl
sub
add
gs
cmp
pusha
add
add
mov
mov
test
adc
sub
std
adc
or
add
shrl
add
mov
add
lds
test
or
mov
shl
add
add
xchg
mov
iret
inc
add
iret
out
inc
add
add
dec
bsr
mov
cmp
add
pop
nop
add
pop
sbb
xchg
add
movsb
add
lret
or
loope
pushf
sbb
add
add
jl
sti
jg
pop
push
add
adc
add
add
inc
jp
not
add
add
add
add
add
cmp
jb
sbb
psubsw
mov
roll
add
movsb
add
into
push
mov
dec
cs
add
sti
jb
loope
adc
mov
decl
pop
out
add
sbb
or
pop
add
stos
pop
test
pop
jecxz
stos
lock
xchg
adc
add
outsb
enter
mov
pop
inc
add
sub
mov
addb
out
outsb
shll
mov
jns
mov
dec
scas
mov
inc
add
pop
lret
and
add
mov
add
pop
jmp
xor
stos
cmc
cmp
daa
into
lret
sahf
add
add
insb
cmp
add
and
mov
mov
add
outsl
inc
jbe
dec
pushf
mov
or
cltd
mov
inc
inc
jbe
push
add
add
loop
adc
mov
mov
clc
push
in
mov
sbb
add
aas
inc
stc
imul
add
add
or
loop
mov
dec
popa
jns
add
test
xchg
mov
leave
jae
add
mov
xchg
xchg
add
or
sub
je
xlat
cmpsb
add
add
sbb
out
insb
leave
pop
lahf
inc
add
stos
sbb
add
sahf
sub
fbstp
mov
add
mov
pop
mov
add
add
iret
lds
jnp
add
lods
sub
add
mov
ja
adc
int
es
fidivl
cmpsb
add
je
adc
jmp
pop
xchg
inc
xchg
add
repnz
add
das
push
cmp
xor
fst
add
loop
jnp
add
or
add
dec
adc
sub
xchg
sub
push
pop
ja
mov
add
daa
sahf
cmp
aaa
adcl
sub
mov
dec
or
pop
dec
scas
push
data16
adc
cmpsl
notl
jmp
imul
jnp
scas
icebp
fisubl
adc
push
add
add
imul
out
mov
mov
xchg
pop
scas
mov
add
loopne
pop
shll
add
cmc
dec
mov
out
inc
aam
jmp
mov
mov
add
add
lock
movsb
add
clc
jae
or
pop
push
mov
or
add
mov
push
add
add
adc
mov
nop
add
xor
mov
leave
shr
mull
icebp
testl
xor
add
add
push
loope
outsb
popf
mov
stos
xlat
out
inc
or
add
add
jp
dec
xchg
xchg
add
aad
lods
repz
add
add
pop
mov
orl
imul
cmp
test
clc
das
pop
ljmp
adc
js
mov
or
add
addr16
lret
cmp
mov
dec
push
cmpsb
add
add
add
push
arpl
out
sbb
xorl
xchg
inc
enter
push
add
mov
add
add
add
or
inc
sub
add
outsb
inc
or
add
cmpsb
add
xchg
add
int3
jle
mov
stos
pop
cmc
hlt
add
cwtl
cmp
inc
add
push
pop
mov
dec
addb
sbb
xlat
lahf
ja
mov
mov
cmp
add
pop
xor
mov
xchg
fnstenv
xor
xlat
inc
sub
mov
clc
dec
rcll
sub
rolb
ficomps
jge
add
das
cmpsb
add
pop
add
adc
in
add
in
xor
jnp
add
push
adc
repnz
fildl
mov
mov
push
add
popf
stos
dec
cmp
mov
sbb
add
mov
cmp
add
lods
sbb
jno
aad
loop
adc
aam
mov
ret
jbe
repnz
add
mov
sahf
pushl
add
sub
addb
jle
jo
lods
cmp
fnstcw
lods
dec
xor
aaa
dec
cwtl
jle
js
sahf
test
cmpsl
push
jbe
in
loopne
sub
daa
cltd
xor
rolb
imul
les
ret
call
repz
add
aam
sbb
rolb
sub
add
cld
sub
xor
vandpd
jmp
add
leave
aad
mov
mov
jge
std
leave
push
add
dec
popf
xchg
add
mov
xchg
cmp
jo
data16
add
enter
add
cmp
cmp
dec
mov
mov
cmpsb
add
gs
mov
add
mov
dec
xchg
add
jbe
hlt
add
fidivrl
popa
bound
mov
push
add
add
xchg
dec
test
outsb
push
mov
dec
insb
pusha
add
clc
in
push
fwait
pop
jno
dec
xchg
mov
cwtl
out
mull
add
push
outsl
xchg
sete
and
and
sahf
xor
sub
add
mov
data16
jnp
add
mov
jno
add
add
add
cmp
mov
push
cmp
add
or
sub
add
or
push
aas
movsl
mov
jo
cmp
add
sbb
pop
jge
addb
or
cmpl
add
out
inc
loopne
data16
dec
jo
cltd
dec
cmc
pop
stc
dec
inc
int3
nop
add
testb
add
add
jmp
jge
push
add
xchg
into
aaa
test
mov
bound
mov
xchg
jne
add
ret
pusha
add
add
dec
fsubl
and
imul
add
repnz
xor
adc
aaa
fcompl
outsl
add
push
and
dec
pop
test
andl
mov
push
sbb
sbb
add
lock
ds
fistps
cmp
lret
inc
add
add
ss
mov
add
push
dec
je
mov
inc
add
add
cmc
pop
mov
add
xchg
add
hlt
add
les
ds
add
xor
add
adc
adc
inc
cmp
xchg
inc
loop
ja
sub
add
inc
add
inc
mov
jp
add
or
cli
mov
les
xchg
lahf
push
jnp
mov
repnz
add
jge
jns
sbb
add
out
push
add
mov
push
xchg
add
ficoml
pop
ret
rep
adcl
mov
mov
add
add
mov
xor
imul
add
ret
cmp
adc
mov
add
add
push
loopne
loopne
cwtl
jg
lret
not
xor
add
add
add
mov
faddl
add
inc
repz
repnz
add
and
adc
nop
add
sub
add
add
je
add
add
dec
ret
adc
pop
call
add
faddl
jecxz
and
test
push
add
mov
ljmp
aas
mov
dec
and
in
or
xchg
add
pop
sbb
nop
add
dec
mov
xor
ljmp
lea
add
mov
push
fimuls
aad
dec
push
add
sub
test
xchg
ljmp
dec
lret
les
jb
dec
and
mov
out
ret
adc
movb
repnz
mov
add
mov
add
add
dec
cmpl
add
jecxz
sub
jno
les
aam
or
mov
or
add
add
iret
push
add
rolb
adc
add
inc
adc
loope
add
add
hlt
add
mov
ss
add
add
mov
and
fisttpll
add
add
mov
dec
fstl
add
incb
dec
and
leave
xchg
add
add
xor
add
push
lret
testb
jae
test
cltd
pop
sub
xchg
push
mov
add
sarl
add
add
dec
scas
mov
sbb
xor
xchg
xor
js
dec
pop
mov
add
dec
cmp
test
xchg
pop
add
add
or
add
add
sbbl
mov
push
and
movsl
repz
add
fiadds
sub
icebp
and
and
sub
mov
cmp
dec
xchg
add
popf
cli
das
out
pop
xor
mov
adc
hlt
add
push
add
mov
test
movb
add
push
mov
add
inc
add
or
push
add
push
ds
jge
sbb
cmp
jge
add
in
pushf
out
outsb
mov
push
add
sbb
rorl
pop
mov
add
sbb
mov
icebp
mov
adc
push
add
lcall
std
ja
jp
push
add
fnstsw
lahf
jnp
dec
or
and
sahf
insl
xor
jae
sti
fwait
inc
add
scas
jne
addb
stos
les
inc
add
sub
adc
jg
mov
mov
in
insb
adc
stc
jg
mov
in
fnsave
add
mov
jo
sub
mov
mov
jecxz
mov
add
scas
adc
mov
jo
in
ss
add
addb
pop
fildl
adc
jbe
pushf
pushf
and
push
add
add
add
xor
or
add
dec
sub
add
add
push
add
nop
add
add
cmp
adc
cld
dec
jne
xbegin
add
addr16
add
add
add
adc
inc
add
dec
mov
aad
data16
insb
xchg
add
and
push
mov
inc
mov
add
add
and
in
add
mov
add
add
add
repz
add
pop
push
mov
fwait
rolb
rolb
inc
add
stos
and
mov
xor
or
push
add
mov
int
add
add
xchg
xor
popa
ror
mov
sub
mov
add
pop
cmp
push
in
fcoml
add
in
bound
mov
add
mov
push
out
call
ret
xchg
repz
in
out
stc
mov
iret
iret
jmp
sub
arpl
add
jb
out
into
mov
and
repnz
filds
repnz
bound
mov
add
pop
inc
add
mov
jno
add
jnp
or
lds
add
sbb
add
je
into
movsb
add
push
add
mov
lahf
dec
rolb
fsts
mov
add
push
adc
scas
addb
movsb
add
mov
and
mov
div
add
inc
jl
mov
adc
cwtl
sub
test
add
add
dec
or
push
mov
rolb
jp
jge
add
subl
xor
inc
add
cli
dec
jno
aam
cmp
in
mov
cmp
add
add
add
mov
adc
or
inc
add
cltd
mov
jl
add
add
dec
test
iret
xor
mov
add
pop
leave
inc
stos
cld
and
mov
scas
stos
mov
add
fisubrs
mov
pop
das
xor
xor
xchg
add
lcall
add
mov
cwtl
add
mov
add
lret
clc
test
imul
repz
pop
in
jmp
and
sahf
mov
mov
in
movsl
dec
add
adc
dec
push
add
mov
dec
xchg
add
pop
out
or
mov
push
or
in
fwait
jmp
xor
testb
mov
cmpsb
add
mov
prefetch
add
cmpsb
add
xchg
jle
cld
and
mov
imul
movsb
add
add
ljmp
std
jae
data16
pusha
add
and
mov
add
mov
jo
dec
inc
add
into
inc
add
and
mov
add
add
push
add
add
adc
loop
mov
sbb
jmp
icebp
outsb
sub
jno
add
mov
inc
add
add
mov
les
js
sbb
xor
test
jno
add
mov
sahf
adc
fcoml
add
mov
imul
jnp
lret
aad
dec
nop
add
add
test
mov
add
sbb
test
xchg
add
jge
mov
mov
add
add
pop
out
mov
addb
fimuls
push
loop
fnstenv
add
add
xor
daa
out
inc
add
mov
enter
mov
add
loop
out
sbb
add
sti
adc
cltd
dec
nop
add
push
les
enter
sub
push
add
pop
test
push
add
cmc
inc
add
mov
add
add
in
movb
add
mov
mov
js
add
std
push
add
mov
mov
jmp
pop
test
pop
je
ret
in
xchg
je
lds
ja
int3
imul
add
adc
sub
in
or
push
xchg
xchg
cmpsb
add
mov
scas
sti
sub
out
adc
dec
push
dec
sbb
aam
pop
pop
sbb
add
add
adc
xor
mov
addb
divl
sbb
xchg
add
mov
xor
add
or
xchg
sub
and
pop
addb
test
test
xchg
mov
in
add
fdivs
add
xor
xor
fdivs
dec
in
add
jb
outsl
not
add
das
data16
in
push
add
addb
test
xor
lods
rolb
scas
aas
mov
xchg
push
dec
mov
pop
mov
add
sub
mov
lods
icebp
xchg
add
lahf
xchg
mov
mov
addb
add
push
add
in
int3
push
add
mov
mov
icebp
jb
andl
add
add
popf
and
mov
add
loop
dec
or
add
add
jge
sbb
sbb
xchg
add
lods
pop
mov
add
add
mov
sahf
cli
push
ds
jne
loope
or
jns
mov
jnp
add
or
cmpsl
dec
fildl
push
add
add
cmpsl
mov
add
xchg
jl
gs
add
stos
push
movb
add
in
sbb
push
rolb
or
add
cmp
add
scas
xor
and
add
es
mov
pcmpgtd
outsb
xor
push
or
jl
imul
imul
mov
mov
iret
mov
into
testb
inc
cltd
rolb
lods
ret
jp
add
into
cmp
outsb
aaa
pop
pop
mov
add
test
jns
aas
call
add
push
add
fcompl
out
int
add
cmp
mov
mov
add
mov
adcl
add
je
outsl
cmpsb
add
jmp
add
add
addr16
add
add
add
in
xchg
fsts
ret
add
ftst
add
scas
push
add
and
testl
add
add
mov
pop
add
pop
jns
out
call
std
cmp
add
aaa
xlat
js
hlt
add
lret
sub
std
inc
into
out
push
leave
or
das
insl
insl
xor
hlt
add
inc
xchg
cli
jo
addb
cmpsl
mov
fidivrl
inc
add
jns
imul
adc
push
add
clc
loop
mov
mov
cmp
sub
add
cmp
sub
lods
pop
aas
lret
pop
push
add
cmpsb
add
lods
rolb
jne
cs
xchg
add
pushf
cs
mov
lahf
push
add
add
cmp
adc
add
roll
iret
xchg
add
add
movb
mov
imul
push
xor
pop
cs
push
add
or
add
pop
push
add
js
and
add
pop
dec
pop
mov
xlat
fwait
in
sbb
outsb
xchg
inc
pop
jl
add
addb
push
add
in
cwtl
add
mov
add
sbb
inc
add
add
add
cmp
mov
pop
add
jns
ds
popf
add
mov
add
add
add
push
add
rcrl
mov
add
xor
clc
test
add
cmc
ljmp
mov
add
sub
add
mov
add
add
cmp
sbb
add
xchg
mov
test
outsl
push
add
jbe
stos
push
test
add
cs
jg
xchg
add
add
add
xchg
inc
add
jp
imull
adc
cmpsb
add
sti
jae
mov
dec
testb
and
les
pushf
push
insb
sbb
push
and
mov
push
add
ficompl
add
add
aam
add
add
jmp
add
push
fsubs
leave
jno
jg
movsl
fcom
scas
fstps
add
add
mov
push
dec
lods
call
and
mov
stos
rol
rolb
mov
rolb
sbb
jno
insl
adc
xchg
rcrl
sub
jmp
into
jb
data16
add
adcl
bound
mov
imul
imul
lahf
jb
popf
out
and
mov
mov
movsb
add
dec
ljmp
add
sbb
mov
push
add
mov
scas
push
and
cmp
inc
add
std
dec
mov
insl
add
mov
add
jb
sub
add
cmp
inc
jmp
add
mov
mov
leave
ja
mov
loope
in
sub
mov
bound
mov
add
ficomps
mov
jmp
add
cmc
mov
inc
loopne
icebp
adc
mov
mov
sbb
add
add
mov
add
mov
mov
cmp
add
jmp
add
mov
add
int
popf
add
mov
jbe
mov
cmpsl
jae
lods
pop
rolb
mov
add
sub
add
repz
or
scas
jnp
ja
outsb
sbb
je
testb
push
xchg
sahf
jo,pn
hlt
add
testb
lea
add
lods
outsl
push
aaa
clc
inc
add
rolb
add
add
cmp
ds
mov
pop
or
mov
and
mov
sbb
je
lods
fcmovnu
pop
rcrl
pop
mov
movsb
add
add
dec
nop
add
pop
mov
cmp
add
aam
insb
pop
push
xor
lahf
xchg
sti
das
pop
lea
repz
push
lods
mov
sbb
js
fiadds
push
push
xchg
add
add
add
and
int3
mov
cmp
ds
or
add
mov
push
add
and
movsl
js
dec
js
outsb
mov
ljmp
add
pop
addb
add
pop
jae
add
xchg
jb
xchg
mov
add
ljmp
jg
add
sti
mov
jne
sarl
mov
loope
add
fwait
add
push
test
enter
fbld
sbb
adc
addb
lds
imul
iret
pop
lods
movsl
stos
lcall
mov
or
cmc
cli
jle
lds
or
jnp
add
push
sub
mov
add
or
bound
mov
inc
add
add
lods
cmc
pop
movsl
sbb
rolb
push
cltd
out
pusha
add
jp
fdivrl
mov
nop
add
and
mov
mov
mov
add
and
aaa
and
mov
mov
cmpsl
lods
addb
add
shll
xchg
add
std
int3
je
int3
push
add
clc
jg
das
ljmp
lcall
add
pop
aaa
mov
jg
fsub
add
fdivl
or
enter
dec
sub
roll
add
addr16
add
mov
pop
mov
mov
sub
xor
xlat
inc
add
into
int3
cli
fwait
xor
cmp
fld1
mov
add
sbb
add
jg
dec
je
push
inc
mov
cmp
in
add
sbb
jmp
ja
add
call
fidivrs
mov
add
push
sub
mov
add
adc
add
stc
add
int3
std
add
pop
jge
testb
adc
mov
sub
mov
add
dec
xor
sub
mov
add
hlt
add
arpl
sbb
add
or
add
sub
mov
xchg
jge
ljmp
jae
mov
add
cmp
sub
testb
cmp
arpl
fildll
pop
add
push
dec
pop
mov
pop
cmp
insl
bound
mov
add
mov
mov
cli
or
mov
mov
add
jge
jl
xor
add
inc
les
mov
jae
sbb
add
mov
mov
add
add
add
stc
xchg
addb
pop
pop
fwait
inc
add
pop
popf
xchg
in
adc
mov
cld
fildl
mov
mull
cmp
inc
add
movsl
iret
pop
ja
hlt
add
aas
scas
push
add
jecxz
xchg
add
add
add
add
frstor
fisubs
add
inc
add
add
mov
pop
pop
addb
shll
enter
mov
xchg
mov
mov
outsl
push
jo
sub
add
addb
fiaddl
nop
add
pop
insb
inc
pop
inc
into
push
add
in
notl
add
mov
add
jns
add
popf
fnstcw
push
out
jns
add
pusha
add
in
add
add
add
stos
mov
mov
das
push
push
add
sbb
pop
ss
add
add
push
add
adc
sbb
or
bound
mov
mov
push
jno
cwtl
xorl
cld
loopne
imull
add
ljmp
sbb
pop
mov
in
adc
lret
pop
imul
xchg
add
add
add
shll
add
addb
mov
add
fimull
mov
push
add
adc
or
add
sbb
out
pop
addb
data16
or
mov
adc
pop
mov
insb
addb
add
jb
mov
cld
cmp
pop
sub
hlt
add
cs
icebp
rolb
sbb
rolb
inc
add
out
test
adc
adc
out
mov
dec
cmpsl
lea
sahf
outsl
push
add
add
add
pop
and
push
add
jle
bound
mov
icebp
mov
xor
add
mov
lret
fnstcw
add
mov
mov
mov
mov
rolb
dec
mov
add
popf
jne
xchg
add
add
jo
mov
add
mov
fwait
test
lahf
cwtl
sbb
push
add
add
or
movb
add
add
add
push
mov
jmp
add
fists
stos
lret
ja
add
mov
mov
cltd
out
sahf
fwait
pop
dec
lds
sbb
add
inc
add
add
mov
or
add
mov
mov
out
adc
ret
add
fwait
push
scas
adc
movb
and
mov
rolb
add
mov
gs
dec
test
and
cwtl
dec
out
add
mov
nop
add
pop
stos
mov
add
add
rcrl
push
rolb
inc
add
jmp
xchg
add
lret
and
mov
icebp
mov
aad
or
adc
push
add
push
add
call
add
mov
and
mov
add
dec
in
add
cmc
arpl
xchg
fisubrs
push
add
jge
outsb
rolb
jl
xchg
adc
add
mov
add
mov
add
and
mov
enter
add
addb
shll
xor
add
mov
add
mov
mov
in
sahf
mov
xchg
sub
ds
add
dec
popa
fisttpl
add
add
jbe
outsb
mov
fmulp
cmp
mov
mov
sti
jno
lcall
aad
cmp
outsl
imul
or
jnp
call
cmp
add
add
in
ja
fwait
into
sub
mov
movsb
add
loop
loopne
push
dec
mov
add
loopne
push
pop
sub
popa
lret
mov
add
rol
scas
rolb
add
dec
xchg
ja
in
lods
jmp
testb
add
cmc
fmull
add
in
movb
push
les
push
add
clc
nop
add
add
nop
add
add
lds
shll
test
fistl
loope
data16
leave
mov
popf
inc
add
hlt
add
mov
in
jle
sub
push
add
dec
sbb
lret
add
add
add
movsb
add
ja
add
nop
add
push
in
or
add
and
mov
cmp
das
cmp
add
add
add
add
add
add
mov
mov
or
das
or
xor
ds
fistl
xchg
add
mov
push
add
add
into
and
fstl
dec
cmp
aas
jg
add
add
faddl
add
dec
sbb
inc
add
add
pop
dec
sbb
xchg
xchg
mov
jle
leave
xchg
scas
adc
in
push
dec
fldenv
mov
add
outsl
push
mov
mov
sub
cmp
sbb
mov
push
aam
ret
test
push
add
mov
pop
stc
notl
add
loop
mov
add
xor
inc
add
cmp
add
scas
xor
repnz
int3
cmp
add
out
rsm
xchg
loop
movsb
add
add
mov
pop
sti
or
cmpsb
add
add
addb
add
add
popa
jge
add
push
add
mov
dec
into
gs
stc
jmp
jge
aad
jg
mov
addb
insl
jae
cmpl
lea
add
repz
mov
js
icebp
daa
das
icebp
addb
add
subl
scas
xchg
add
pop
mov
sub
test
sbb
fwait
adc
add
jne
add
or
add
mov
in
gs
test
pop
pushf
push
push
add
add
xchg
add
add
add
aam
rep
adc
add
shrl
shll
push
sbb
out
sbb
cmpsb
add
loope
ljmp
out
add
add
arpl
add
add
das
mov
ret
mov
enter
jbe
ds
fildl
mov
sbb
add
mov
insl
pop
data16
push
xor
loop
jmp
add
fstpl
xor
inc
add
add
aas
nop
add
scas
dec
leave
pushf
fldcw
or
add
inc
add
lock
or
call
push
outsb
addr16
dec
scas
loope
push
leave
ret
push
add
loope
add
dec
loopne
aaa
mov
dec
pop
inc
mov
jg
mov
pusha
add
das
inc
add
jle
add
mov
push
add
add
jp
lea
dec
sti
lret
mov
add
add
add
cmp
fsubs
pop
popf
add
mov
mov
add
add
add
and
and
lock
clc
cmp
pop
push
push
movsb
add
add
ret
xchg
mov
stos
mov
mov
fst
add
cmpsl
mov
stos
in
add
cld
lcall
clc
mov
loopne
dec
push
add
mov
push
je,pt
sbb
adc
fcmovnb
add
push
add
add
sub
add
add
lret
add
lock
add
mov
outsl
cmpsl
xor
lret
filds
mov
lahf
fists
mov
xrelease
mov
addb
cltd
int
movsb
add
add
ljmp
out
pop
inc
dec
push
add
xchg
lock
add
leave
rolb
dec
push
add
sbb
mov
test
add
popa
loopne
arpl
add
sbb
pop
push
cwtl
mov
cmp
inc
add
into
insl
jmp
add
cmp
add
testb
add
lock
enter
sub
add
movb
jl
fninit
lea
mov
push
sbb
jne
xchg
add
movb
out
adc
testb
xor
add
inc
addb
inc
jo
adc
cmc
or
cltd
inc
lahf
repnz
push
out
ror
mov
mov
les
sahf
aas
dec
push
ljmp
in
jno
add
addb
add
addb
cmp
aaa
out
mov
scas
imul
mov
out
add
xlat
ss
add
and
mov
add
imul
daa
dec
lds
jp
lea
add
or
xchg
jns
cmp
add
rorl
push
add
mov
punpckldq
mov
or
jmp
add
add
mov
add
add
aam
loop
sub
jmp
xchg
add
xchg
add
das
mov
dec
insb
stos
cmp
ljmp
add
inc
add
call
push
add
ss
stos
jge
add
add
rorl
mov
enter
lret
add
add
add
lock
jnp
add
add
jle
insb
insl
inc
add
add
add
push
in
add
push
icebp
xor
or
sub
enter
xchg
add
add
test
xchg
add
add
lea
pop
fcoml
in
lock
jge
inc
add
sub
data16
add
in
ljmp
loope
mov
push
inc
inc
sbb
lods
leave
jge
sub
outsb
insb
jne
lcall
add
mov
je
data16
imul
or
cwtl
mov
aaa
daa
mov
xchg
add
pop
sbb
lret
addb
add
repnz
pop
mov
aad
ror
jno
add
adc
pop
imul
fcmovbe
lods
jl
xor
cmpsb
add
add
add
add
inc
call
sbb
loope
add
roll
push
sahf
fisttpl
and
mov
popa
mov
add
xchg
stc
pusha
add
sbb
jne
add
or
add
jnp
sub
add
imul
cmp
add
lds
mov
push
or
add
add
outsl
push
add
adc
out
sub
add
cmp
cmpsb
add
and
cmp
jb
aaa
rolb
pushf
call
add
stos
cmp
pcmpeqd
push
aad
lods
push
add
push
dec
testb
add
add
sub
jmp
in
add
add
add
push
testb
arpl
daa
aas
or
add
fwait
pop
lret
add
add
add
int
fsts
add
jns
add
stos
mov
stc
and
aas
dec
in
add
lret
add
add
jo
pop
mov
int3
out
jmp
js
cmpsl
dec
pop
mov
add
add
fdivp
xor
and
insl
call
add
rolb
scas
std
aam
lock
push
add
lock
rolb
imul
add
or
add
pop
mov
push
add
mov
cmp
pop
addb
and
add
adc
add
mov
add
adc
test
xor
inc
add
jecxz
add
addr16
adc
add
add
pop
sub
lods
lock
add
jns
add
add
inc
add
mov
data16
xchg
movsl
repz
mov
fucomi
stc
sbb
add
jnp
inc
add
add
xor
mov
popa
xchg
and
add
mov
add
or
add
int3
add
sbb
sub
add
cld
cmp
mov
mov
add
and
insl
inc
add
jl,pt
outsb
sbb
adc
sub
add
mov
add
add
adc
roll
aam
push
add
mov
add
xchg
add
pop
add
xchg
add
add
push
stos
sbb
movb
arpl
add
cmp
lods
jl
jmp
add
add
jno
cs
cmpsb
add
out
cmp
mov
rolb
shrl
add
add
iret
icebp
pop
aad
bound
mov
daa
rolb
std
test
jae
fdivs
add
arpl
sub
mov
cwtl
out
add
push
ljmp
or
test
loopne
or
jno
adc
out
jb
mov
bound
mov
pop
inc
add
das
fbld
cmpsb
add
add
add
add
sub
fmuls
pop
mov
jns
gs
add
pop
bound
mov
int
je
sbb
fldenv
dec
push
add
dec
les
lock
pop
cld
add
mov
add
add
lcall
fstpl
add
lret
mov
cmpl
fistps
xchg
rolb
xchg
add
xor
cmp
cmpsl
jle
jo
sub
add
add
outsl
std
push
add
add
inc
and
mov
aaa
sub
push
dec
push
xchg
add
mov
repz
mov
add
les
xchg
sub
or
add
in
rolb
mov
mov
pushf
add
mov
jecxz
inc
jno
add
dec
into
and
xor
push
sbb
add
mov
add
iret
and
mov
rolb
mov
push
add
push
aas
rolb
inc
add
sbb
mov
add
add
and
fistl
sbb
mov
stos
xchg
add
mov
jb
xchg
add
mov
add
cltd
and
mov
ja
scas
mov
add
scas
or
mov
mov
cld
add
mov
arpl
add
dec
xor
das
push
add
mov
add
inc
cmc
ds
into
adc
jo
jle
xchg
xchg
je
negl
pop
cmp
cmpsl
ljmp
inc
add
scas
xchg
pop
jns
add
sbb
add
test
add
add
icebp
add
add
bound
mov
movsl
mov
add
mov
add
mov
cli
and
adc
or
sbb
lods
mov
or
push
add
sti
sbb
pop
cmp
pop
pop
in
cmc
int
pushf
pop
cs
add
add
add
add
sbb
cmp
sti
mov
xor
xchg
and
mov
std
cmp
and
add
add
add
into
aad
sub
add
add
mov
add
add
add
cmp
cli
or
icebp
ja
add
mov
test
adc
or
mov
jmp
sbb
in
pop
sbb
or
or
add
addb
clc
jo
sbb
pop
int
push
aas
aaa
ds
mov
pop
sbb
cmc
aas
dec
mov
cmp
hlt
add
add
iret
dec
mov
push
add
aas
mov
jnp
psllw
dec
call
bound
mov
add
sbb
add
cmpsl
andl
add
push
xor
addb
push
shll
mov
mov
xchg
sti
mov
add
inc
add
add
xlat
push
add
jge
jno
add
push
add
sub
add
pop
adc
add
and
iret
jmp
cmp
or
cmp
les
or
mov
and
cmp
jl
and
in
mov
add
xchg
push
xchg
dec
mov
add
and
mov
sub
mov
push
sub
add
add
lea
test
js
data16
out
mov
add
fldl
add
add
xchg
lea
cmpsb
add
mov
push
cltd
adc
adc
hlt
add
dec
add
add
ret
shl
hlt
add
fidivl
fmul
hlt
add
push
add
push
add
add
stos
pop
iret
or
pop
jge
movsl
cmpsb
add
gs
add
add
jb
jle
jge
add
mov
enter
je
cmp
jg
dec
mov
add
pusha
add
dec
into
lds
mov
sahf
cmpsl
pop
xor
sub
aad
sbb
add
adc
sub
add
mov
add
int3
add
add
or
and
std
xchg
mov
add
inc
sbb
rolb
add
adc
add
add
repz
push
add
repnz
rolb
mov
add
repnz
add
mov
mov
xchg
in
add
xchg
test
jg
mov
or
lods
jae
stos
cmp
enter
add
nop
add
movsb
add
add
out
popf
je
clc
repnz
add
mov
inc
sub
xchg
leave
fnstsw
xor
mov
insl
popf
dec
mov
fwait
push
testl
add
xor
cmp
in
dec
xchg
add
mov
int
in
dec
mov
mov
addb
ret
push
movsb
add
adc
movsb
add
lea
xchg
add
push
xor
fwait
cmp
mov
into
stos
fldcw
adc
lret
pop
cmpl
lret
js
or
mov
stc
jne
add
imul
sbb
repz
movb
rolb
decb
repnz
enter
int
iret
adc
mov
lret
add
shll
add
add
das
hlt
add
add
mov
shll
and
add
movsb
add
add
or
add
adc
mov
cltd
ret
xor
inc
add
lret
data16
mov
sub
add
mov
dec
fisubrl
push
add
add
dec
pop
dec
inc
add
mov
addb
add
add
xchg
dec
les
cmp
icebp
push
add
and
ds
or
test
add
xchg
mov
les
cltd
fists
repnz
mov
add
add
mov
dec
out
imul
loopne
mov
mov
jecxz
in
dec
inc
add
add
add
dec
js
mov
add
push
add
ljmp
push
add
add
into
data16
sbb
int
lret
mov
push
add
add
and
mov
out
dec
push
stc
push
jecxz
add
add
in
in
stos
cmp
mov
stos
leave
cmp
in
dec
add
jmp
repnz
push
cmp
pusha
add
jns
cmp
pop
int
mov
mov
cmp
int
jae
pusha
add
dec
pop
inc
add
jl
fcoml
xchg
add
add
or
aad
push
add
addb
cmp
shrl
dec
lahf
xlat
dec
xor
push
add
cli
gs
add
xchg
pop
cmp
add
push
add
pop
fldcw
adc
mov
inc
add
mov
mov
add
or
and
xor
testl
sub
add
cltd
addr16
or
add
dec
pusha
add
add
add
add
mov
data16
ja
add
add
add
or
aam
jmp
add
jle
inc
add
rcl
and
dec
cld
sbb
data16
pusha
add
jmp
push
push
pusha
add
add
xor
icebp
insl
cmp
mov
lcall
lret
ret
sbb
data16
sub
lret
add
add
ja
cmpsb
add
mov
push
leave
jg
add
mov
xchg
pushf
jg
add
out
ja
add
or
add
add
add
inc
add
add
push
cmp
xchg
int
outsb
scas
mov
sbb
sub
sub
jp
push
jmp
add
add
xlat
sub
push
add
add
xchg
jne
adc
push
adc
cmp
add
add
add
add
pop
cmp
pop
fldt
jmp
mov
sbb
push
jo
hlt
add
add
daa
test
add
jmp
add
inc
cmpl
shll
mov
or
dec
add
jge
add
add
add
add
pop
mov
movsl
mov
mov
rolb
xor
or
sti
rolb
ljmp
shr
pop
iret
stc
sub
mov
out
stos
sbb
movsl
loop
mov
rolb
aam
addr16
add
in
jnp
add
inc
leave
loop
stos
pusha
add
movb
add
divl
xor
mov
jne
add
jp
insb
fcomp
js
rolb
insl
push
jns
xchg
loope
fsubl
cmp
push
xor
int
cwtl
push
jns
adc
jns
sub
ds
std
dec
lret
mov
aas
pop
push
dec
mov
add
mov
out
pop
jns
sar
sbbl
add
add
mov
outsb
inc
add
add
popa
pop
add
mov
mov
push
mov
jp
pusha
add
testb
imul
add
add
inc
add
sbb
push
add
add
adc
mov
sub
cmp
sub
add
add
dec
fdivs
or
clc
cmp
flds
mov
rolb
sbb
xchg
xor
movsl
xchg
add
addb
add
stos
lds
sub
add
orl
add
add
xor
pop
add
clc
ret
add
push
add
imul
repnz
add
jle
inc
lds
aas
insl
arpl
inc
add
add
xchg
insl
push
je
adc
loopne
jg
addb
pop
push
fcompl
sbb
adc
ret
stc
fsubl
loope
pop
jbe
lret
add
das
into
adc
cmc
adc
aad
jge
test
ja
jbe
sbb
pop
test
imul
add
sbb
dec
push
adc
add
jb
sbb
add
scas
rolb
adc
add
add
andl
push
add
add
mov
out
mov
add
jno
outsl
in
add
lods
dec
outsb
push
add
jnp
dec
push
add
aaa
cmp
data16
cmc
mov
dec
xchg
lea
add
repz
pop
inc
or
inc
mov
sub
add
or
pop
rolb
and
mov
mov
add
shll
sub
add
mov
mov
add
pop
adc
ss
ja
out
in
adc
add
mov
addb
inc
add
iret
testb
add
cmpsb
add
xchg
add
add
sub
add
pusha
add
testb
rolb
add
add
stos
add
mov
add
jl
xor
rcll
fistpll
movb
loope
popf
cld
adc
ja
jno
rolb
adc
in
and
mov
xor
aam
pop
inc
push
xchg
jns
push
and
jge
cmp
add
mov
add
addb
add
add
or
add
add
push
add
add
enter
add
add
push
cli
push
add
addb
add
add
push
add
or
push
pop
clc
scas
popf
inc
add
inc
mov
mov
push
add
add
add
mov
fbstp
cld
stos
hlt
add
sbbl
cmpsl
sti
je
ljmp
icebp
pop
xchg
pop
xchg
out
movsb
add
outsb
testb
mov
inc
add
mov
ret
shll
rol
add
sti
mov
add
xlat
fwait
lods
fcompl
add
sahf
xor
hlt
add
jbe
push
push
sahf
sbb
xlat
rorl
add
mov
add
mov
add
or
or
cmp
std
repnz
iret
dec
sub
add
insb
movb
addr16
adc
pop
xchg
add
cs
add
out
ljmp
add
lea
les
pop
mov
inc
cmp
add
add
add
add
loope
arpl
add
push
data16
sub
xchg
add
push
add
js
and
mov
add
addb
add
add
pop
popa
pop
mov
js
adc
lock
cltd
xor
lret
outsb
rolb
bound
mov
add
xlat
das
inc
add
add
mov
add
into
sbb
add
mov
outsl
fsub
jb
ds
rcrl
add
imul
lahf
je
pop
mov
mov
popf
push
add
lcall
push
add
lahf
push
xchg
imul
sbb
add
mov
or
add
add
clc
repnz
fcmovbe
loope
ficompl
jbe
push
add
add
pop
add
rolb
adc
adc
xlat
dec
mov
cmp
repz
add
imul
mov
js
movl
add
mov
mov
mov
loopne
xchg
add
stos
push
clc
mov
cltd
popf
dec
loop
testb
add
add
xorl
mov
adc
jle
push
sub
std
nop
add
add
push
add
add
add
sub
push
imul
and
mov
arpl
dec
sbb
xchg
add
insl
xor
mov
add
dec
add
jmp
push
add
dec
xlat
ss
xor
dec
scas
lea
repz
fs
inc
add
in
sbb
sub
add
sbb
loope
testb
add
and
mov
inc
add
in
hlt
add
add
adc
cmp
xchg
repz
or
dec
pushf
push
mov
add
sub
popa
jnp
add
test
add
std
sbb
add
fcomps
xor
mov
data16
pop
push
mov
pop
gs
mov
pop
aad
add
sahf
xlat
sub
and
jns
lods
adc
cmpsb
add
pop
inc
mov
jae
add
sub
add
mov
sbbl
jle
add
add
sub
jae
call
xlat
pop
cltd
lcall
fnstcw
lods
fcmovu
sbb
add
cld
xor
hlt
add
sbb
cmovns
add
mov
out
add
add
add
test
popa
fstl
add
add
xchg
dec
aas
int
into
sbb
dec
xor
lods
cltd
inc
movsb
add
mov
testb
add
punpckldq
mov
pop
testb
add
inc
add
and
mov
jp
addb
pop
leave
repnz
adc
inc
add
aas
mov
das
inc
jnp
das
pop
imul
sub
test
mov
add
ja
add
mov
add
add
mov
loop
adc
dec
aam
pushf
lea
fdiv
add
addb
push
add
add
add
add
repnz
add
sub
add
pop
mov
popf
mov
imul
out
push
add
cmpsb
add
add
add
daa
xlat
pop
lret
pop
sbb
add
jg
add
add
mov
sbb
cmp
add
lret
cmp
sahf
mov
dec
mov
sub
add
add
aaa
xchg
add
cli
lret
addb
stos
push
lret
loopne
pop
in
sbb
sti
inc
add
add
lods
inc
mov
sub
add
add
fmull
testl
add
repnz
mov
mov
sub
test
ret
mov
adc
imul
add
add
fwait
mov
add
iret
jmp
or
cmovo
mov
dec
int
and
push
add
pop
aas
jp
push
add
das
xchg
add
push
fldl
cmpsl
or
das
out
in
addb
mov
fstpt
add
xchg
add
jb
jge
xchg
add
push
add
sub
movsl
outsl
jle
shrl
mov
addb
add
push
dec
fldenv
mov
add
sub
pop
rolb
adc
xchg
std
int3
push
daa
in
fstpt
rolb
mov
add
test
insb
inc
pop
xor
jns
mov
test
out
cltd
mov
stos
jl
adc
imul
scas
in
sbb
sub
add
scas
or
insl
sub
mov
cltd
add
test
dec
mov
jbe
mov
jmp
inc
add
pop
pop
movsl
xchg
push
xchg
add
gs
mov
push
fisttps
push
add
pushf
js
add
add
add
xor
orl
aad
sub
lret
xlat
xchg
mov
jmp
addb
push
or
add
addb
add
add
fists
leave
cmc
add
mov
inc
add
mov
add
inc
adc
mov
repnz
and
mov
push
and
aas
mov
das
das
mov
fsubrl
sub
mov
mov
mov
adc
jbe
cmp
rorl
dec
addb
mov
jbe
leave
push
pop
jo
push
cmp
clc
cmp
lods
call
jae
dec
call
scas
js
mov
inc
add
push
icebp
push
lcall
sub
add
in
dec
xchg
add
inc
add
aam
lcall
lods
inc
add
ja
shll
sbb
pushf
add
mov
test
jp
pop
inc
xor
mov
add
add
pusha
add
test
mov
enter
add
lock
out
add
add
mov
js
jl
xor
leave
inc
out
call
xor
aaa
jl
add
ja
outsb
xchg
push
add
imul
mov
insl
or
add
outsb
add
add
iret
lret
inc
add
add
imul
lcall
mov
arpl
sarl
loope
insl
mov
add
lods
xlat
dec
adc
add
rcrl
add
mov
push
add
add
rcrl
movsl
pusha
add
and
int3
mov
arpl
fwait
xor
sbb
add
leave
push
add
notl
add
scas
jo
push
pushf
dec
add
das
mov
pusha
add
sbb
add
sbb
add
add
add
add
stos
cwtl
mov
add
cmp
sub
add
adcl
or
xchg
jb
xchg
add
ss
mov
add
add
lods
push
add
xor
push
add
fwait
outsl
bound
mov
addb
xchg
add
idiv
and
mov
mov
mov
add
int3
fsubrp
add
dec
and
mov
leave
inc
daa
mov
jb
mov
jg
repnz
add
mov
in
ret
add
inc
adc
sbbl
test
rep
lods
aad
movsb
add
in
sub
int
adc
push
cs
add
jg
xchg
cmp
add
arpl
fiaddl
add
outsl
xchg
xchg
or
pop
aad
pop
pop
fimull
lcall
aas
in
mov
pop
sbb
sahf
testl
out
add
add
testb
add
xchg
push
add
add
add
stos
xor
xchg
out
test
scas
cmp
hlt
add
rolb
mov
add
mov
mov
add
mov
cmc
push
add
mov
and
mov
add
repz
mov
add
mov
add
into
out
mov
in
adc
mov
call
loope
repnz
add
dec
pusha
add
cwtl
cwtl
push
add
dec
jg
add
add
add
xor
adc
add
add
icebp
cmp
stos
xchg
pop
out
mov
xchg
sub
sub
inc
fbstp
pop
add
pop
mov
xchg
les
cmc
pop
adc
lods
into
sahf
pop
mov
xchg
add
movsl
jne
pop
jb
ja
adc
push
popa
cld
mov
leave
sti
data16
push
xor
in
dec
mov
mov
adc
out
adc
fwait
push
cmp
cmp
push
scas
adc
cltd
cmp
add
add
dec
jecxz
push
in
jno
testl
cwtl
scas
icebp
push
add
adc
add
add
add
sub
cld
dec
ljmp
fsub
xchg
push
leave
pop
dec
lds
xchg
stos
scas
jae
bswap
mov
or
xchg
add
mov
addb
hlt
add
rolb
outsl
addb
push
add
cmp
push
add
add
or
mov
outsb
xchg
cmc
jmp
and
mov
add
dec
and
push
add
iret
add
sub
sub
add
hlt
add
call
add
jno
add
add
add
add
cltd
fidivs
add
add
jl
jns
add
and
ja
cld
add
mov
dec
mov
push
cwtl
movsl
stos
push
add
add
add
add
add
loope
loopne
jb
pop
cs
add
rolb
jns
push
je
mov
push
mov
lret
dec
and
out
nop
add
add
icebp
call
add
sub
or
jb
inc
add
xor
in
xorl
xchg
push
cli
mov
sub
add
cmc
lret
dec
lahf
in
lea
add
aas
cltd
sub
add
jle
add
mov
mov
sbb
or
out
sub
push
fs
xchg
jmp
push
mov
repz
xchg
add
or
mov
mov
ljmp
int3
or
add
push
lods
pop
imul
add
outsb
iret
jle
push
add
jl
add
add
add
pop
in
or
add
mov
add
add
add
nopl
insl
popa
inc
sahf
test
add
iret
mov
mov
push
sbb
push
add
add
xchg
pop
and
mov
hlt
add
mov
push
add
xor
adc
adc
add
and
repnz
testb
add
aam
mov
js
add
jle
js
mov
arpl
inc
add
add
inc
sbb
mov
jb
arpl
xchg
add
mov
and
movsl
aaa
cmp
add
mov
add
add
lea
add
mov
loop
stos
scas
adc
xchg
mov
add
add
adc
mov
loop
adc
sub
sbb
cli
sbb
or
sub
addb
inc
add
add
push
imul
rolb
pop
addr16
or
mov
add
inc
add
add
ret
add
inc
add
pop
pop
popf
mov
add
add
in
cmpsl
mov
nop
add
lods
add
cmp
or
mov
pusha
add
inc
iret
inc
add
add
aam
or
jo
sti
aam
pop
jmp
addb
mov
push
push
add
jne
add
add
mov
mov
dec
push
add
adc
scas
js
sub
lret
lods
cwtl
mov
add
add
mov
add
fdivl
push
add
cmp
add
dec
mov
add
mov
int
fiaddl
dec
and
pop
mov
inc
add
add
das
lds
dec
movsl
xor
add
add
add
clc
popa
inc
and
lock
jmp
ret
popf
and
mov
mov
dec
jp
add
scas
push
add
fmuls
adc
inc
pop
out
xchg
out
xor
mov
add
aaa
imul
push
fildll
jmp
mov
sub
push
add
in
cltd
fcompl
andl
mov
add
add
add
add
xlat
pop
mov
sbb
sbb
push
add
fs
iret
jnp
mov
add
fisubs
add
cmpsl
pop
movb
adc
push
popf
push
icebp
testb
jno
add
jp
inc
add
add
add
inc
aad
add
and
or
add
jno
imul
daa
rolb
sub
add
das
inc
mov
xchg
add
ror
inc
cmp
test
add
jae
add
scas
pop
stos
mov
test
xchg
add
add
cmp
mov
outsl
dec
mov
sub
jnp
pop
arpl
mov
or
js
inc
add
push
add
add
scas
fdivrl
fsts
rolb
movsl
inc
rcll
add
fisubrl
bound
mov
xlat
enter
xchg
sub
inc
add
rolb
iret
push
dec
push
add
nop
add
mov
addb
cmp
dec
out
mov
in
rcll
add
add
mov
add
add
mov
jle
add
push
add
ds
insb
mov
addb
add
dec
outsl
mov
lret
je
cmp
sbb
mov
fdivp
jmp
lahf
sahf
out
popf
pop
cmpsl
movsl
mov
int3
add
mov
add
cltd
jecxz
add
cmp
inc
mov
add
mov
add
add
dec
adcl
push
addb
dec
jp
add
idiv
dec
dec
push
add
inc
test
dec
fistl
add
push
add
add
add
jno
sbb
imul
idivl
int
movsl
xchg
mov
add
mull
add
mov
jae
add
test
outsb
jbe
fidivrl
add
add
lahf
jbe
cli
push
jge
xor
outsl
mov
add
cltd
in
fisttps
add
mov
add
add
roll
sahf
add
mov
shrl
imul
add
lea
enter
add
test
repnz
add
les
dec
sub
mov
or
iret
pop
in
jg
add
test
add
add
stos
sbb
sub
fimuls
pushf
test
sub
lahf
subl
or
mov
add
pop
ret
xlat
dec
movb
gs
aad
add
lret
in
mov
jno
into
mov
cs
js
mov
cmpsl
add
fcomp
mov
adc
sub
adc
mov
push
fiadds
xchg
add
cmpsb
add
add
ds
and
mov
outsb
addb
add
jg
add
ljmp
mov
or
add
scas
push
add
stc
cmp
add
or
mov
inc
add
add
pusha
add
jl
mov
sub
bound
mov
xchg
add
or
lret
cwtl
xor
das
sub
pop
jnp
add
add
adcl
add
lods
xchg
add
adc
leave
dec
jno
add
add
out
mov
mov
ffree
add
ljmp
mov
and
xor
jge
hlt
add
movlps
push
aaa
lods
push
add
mov
sbb
and
and
mov
dec
mov
int3
or
in
dec
mov
add
and
test
cmp
add
mov
add
out
cwtl
add
out
out
xchg
xchg
add
repnz
push
add
cmp
add
add
cwtl
dec
icebp
add
lods
mov
lahf
in
add
add
mov
dec
mov
leave
test
outsl
rolb
out
cmp
add
push
test
xchg
mov
scas
jb
fldenv
sub
add
add
mov
add
addb
repz
in
add
mov
mov
mov
sub
jb
shll
add
add
add
imul
add
jle
addb
jge
icebp
add
add
add
add
add
mov
movb
add
add
addb
aaa
popa
xor
sti
outsl
push
add
lret
jge
add
je
push
dec
pushf
push
movb
push
stos
cmp
xor
jns
and
push
or
fldl
add
sub
add
add
je
call
pop
in
daa
xor
add
inc
add
push
imul
adc
mov
pop
add
mov
add
add
inc
pop
and
cltd
inc
dec
insb
push
add
add
out
stos
bound
mov
jne
lds
add
fninit
imul
mov
repnz
and
mov
scas
push
add
in
pop
cmpsb
add
jbe
xor
jp
mov
jl
inc
add
stc
aaa
cmpsb
add
and
add
xor
jle
push
add
in
push
add
stos
mov
pop
loop
js
add
faddl
cmp
mov
lcall
mov
inc
pushf
cmp
pop
aad
clc
cwtl
sub
sbb
push
add
stc
sbb
add
les
aam
jge
jle
add
cld
inc
add
add
in
add
int3
mov
and
out
into
stc
and
iret
popa
in
jae
cmp
fwait
sub
mov
jb
lds
add
data16
inc
mov
pusha
add
dec
cmp
test
add
cmp
adc
loopne
loopne
rolb
push
in
pop
sub
loop
pop
xchg
imul
jae
out
fmull
add
add
xchg
adc
add
fisubrs
ficoms
test
inc
add
mov
aam
ja
cld
shr
das
and
hlt
add
add
loopne
jae
sti
fists
add
cmp
add
mov
push
dec
pop
jno
in
mov
fmull
les
sub
lret
mov
add
data16
mov
addb
add
cmp
lods
mov
mov
fucomp
or
push
add
jo
out
mov
enter
daa
cs
add
mov
add
outsb
stc
sub
sub
testb
jns
repnz
mov
les
leave
mov
add
add
jge
xor
xor
test
mov
mov
lods
mov
add
sbb
push
or
stc
or
pop
jle
add
xor
push
xchg
add
mov
pop
aad
je
inc
add
mov
icebp
push
add
and
mov
ja
add
push
jl
add
jo
or
fndisi(8087
jb
test
pop
arpl
add
aaa
js,pn
or
mov
dec
jo
cmp
add
popf
dec
sub
dec
pop
mov
jmp
fsubrs
push
mov
outsb
ljmp
add
pop
hlt
add
iret
pop
dec
arpl
les
sahf
repnz
add
dec
push
add
add
mov
jecxz
and
nop
add
sub
setl
inc
add
sub
jb
mov
std
xor
adc
mov
andl
add
sub
pushf
cmpsb
add
pusha
add
or
nop
add
mov
mov
dec
fstpl
or
sbb
inc
or
jno
int
cmp
push
inc
add
jns
add
and
mov
xchg
enter
in
icebp
xchg
add
mov
bound
mov
add
add
imul
popf
aas
aad
add
add
pop
lret
lret
out
pop
cld
leave
adcl
lods
ss
add
cmp
jp
sbb
icebp
fistl
xchg
mov
pop
pop
sbb
push
and
xchg
rolb
add
inc
in
test
jb
mov
test
add
ret
pop
fbstp
and
rolb
add
add
add
popf
daa
cmp
mov
add
cltd
dec
mov
int
mov
xor
mov
rorl
mov
mov
test
push
add
push
lea
add
addb
or
fdivrs
pop
push
das
jo
dec
hlt
add
cmp
ds
lahf
jae
add
push
aad
cmp
or
sbb
inc
ret
js
add
mov
push
mov
add
aad
xchg
add
mov
add
add
push
add
popf
lds
add
lock
mov
or
add
dec
adc
pop
fucomi
inc
stc
sub
adc
fmul
jl
dec
cmp
lock
in
adc
rolb
mov
push
add
add
sub
and
mov
inc
add
add
add
add
add
add
xlat
xor
jl
add
add
mov
mov
add
pop
jno
movsl
cmp
scas
mov
mov
jns
add
push
popa
jnp
pop
jecxz
outsb
dec
and
jb
add
mov
jecxz
add
add
xchg
add
sbb
pop
aas
rolb
mov
and
mov
cmp
arpl
add
jbe
pusha
add
inc
icebp
pop
add
mov
xchg
inc
bound
mov
xor
mov
add
xchg
jns
imul
add
add
xlat
pop
pop
sub
popa
push
xchg
or
rolb
and
jo
push
or
sbb
sub
ja
add
add
rolb
mov
mov
add
std
ja
movsb
add
add
add
in
call
imul
adc
movsl
inc
xor
lods
loop
jge
push
stos
sbb
dec
and
mov
loope
add
adc
adc
xor
adc
add
mov
lods
dec
mov
sbb
add
dec
xchg
add
add
add
add
add
add
add
aam
inc
adc
ljmp
jp
sahf
jns
lods
mov
nop
add
fildl
or
add
into
add
mov
add
or
addb
in
daa
xor
xchg
mov
sbb
add
add
movsb
add
add
push
add
add
nop
add
add
xor
fistpll
sub
add
int
jg
mov
add
add
mov
add
js
add
add
sbb
cmp
jmp
push
xor
jge
add
lock
loopne
rorl
add
add
xchg
adc
subl
out
imull
add
mov
int3
cwtl
movb
add
mov
mov
fs
push
xchg
sbb
roll
add
add
stos
inc
dec
in
jl
outsl
pop
repnz
mov
ja
sub
add
sbb
insl
fisttps
dec
mov
addb
inc
stos
cmp
add
test
add
mov
icebp
xor
fs
and
into
mov
inc
or
je
and
and
std
mov
adc
dec
pop
inc
sbb
fimuls
adc
add
and
mov
add
add
cmp
add
mov
pop
push
add
arpl
sahf
cs
lret
rolb
in
stos
dec
testl
add
hlt
add
sbb
cmpsb
add
push
ja
jecxz
fistpll
in
xchg
rolb
push
fcoml
add
pop
add
mov
add
mov
je
sbb
mov
ds
mov
inc
push
add
add
aas
loop
mov
adc
add
mov
fbld
mov
add
pop
sahf
xor
mov
data16
jb
icebp
push
jl
rolb
inc
add
pop
pusha
add
add
add
sub
jge
add
cltd
push
add
outsb
or
add
push
add
add
add
add
push
add
rolb
xchg
xchg
adc
in
cmp
jb
cmp
add
lahf
unpcklps
testl
pop
push
xor
lcall
int
enter
addb
dec
in
insb
es
cmp
sub
jge
add
cli
sub
aas
mov
add
les
xchg
add
ja
inc
add
add
mov
add
add
mov
or
test
dec
mov
add
xlat
jne
ljmp
jle
ret
add
add
repnz
xor
lret
mov
fiadds
xchg
ja
out
mov
addb
add
mov
add
add
jne
scas
fadds
add
add
cli
jmp
add
mov
or
jno
pop
inc
add
scas
mov
leave
push
add
add
and
dec
in
push
cmp
add
pop
mov
jb
and
add
add
hlt
add
xchg
std
test
inc
js
bound
mov
push
add
sbb
data16
add
lods
ficomps
sbbl
xor
test
aam
sub
add
mov
xor
sbb
inc
inc
add
cmp
add
cmp
in
sti
imul
cmp
lea
xlat
outsl
leave
inc
pusha
add
icebp
sub
fdivr
mov
add
mov
testb
loop
and
mov
xchg
add
sub
add
sbb
inc
sahf
cmp
push
add
out
sti
fidivs
ficomps
in
sbb
and
mov
add
fbstp
or
adc
xor
and
pop
inc
iret
or
add
jge
add
add
add
sbb
movsb
add
dec
mov
ljmp
int
cli
mov
js
cltd
mov
sub
jge
add
insl
sbb
and
add
sbb
dec
jmp
add
xlat
add
mov
test
add
lcall
inc
mov
xchg
push
add
mov
xchg
add
add
xchg
add
add
sub
add
and
mov
add
xor
mov
dec
leave
mov
sbb
aam
mov
mov
add
pop
sbb
add
movntq
out
add
mov
inc
jg
add
hlt
add
rolb
pop
or
add
mov
xchg
add
mov
in
add
jmp
or
mov
mov
jmp
sti
sbb
add
inc
add
add
pushf
lahf
xor
mov
add
add
cmp
mov
add
mov
mov
add
mov
xchg
add
in
aad
int
push
sub
add
dec
fwait
sbb
addb
jno
dec
lods
mov
loop
jl
outsb
and
push
pop
lods
jecxz
xor
xlat
mov
jbe
mov
add
ja
fimull
scas
in
jp
mov
pop
test
mov
repz
cltd
in
dec
std
call
fistpl
inc
add
hlt
add
int
add
shll
add
nop
add
mov
test
gs
scas
sbb
mov
add
add
mov
add
jno
and
add
add
add
sti
inc
add
mov
sbb
and
lock
add
inc
xchg
add
addb
add
add
jp
adc
loop
jbe
jge
lods
inc
pushf
movsl
fidivrl
pop
inc
ret
jle
loop
sahf
push
add
add
sbb
ret
dec
loope
addb
add
add
lock
jne
test
stos
push
add
add
add
in
jg
pop
hlt
add
jae
or
repz
or
sub
popf
mov
inc
jle
aam
xor
imul
mov
movsb
add
dec
mov
bound
mov
iret
mov
mov
aam
push
loopne
mov
in
fwait
addb
sub
lds
mov
cmc
sub
add
ljmp
stos
lret
add
push
add
add
or
ret
pusha
add
add
ret
iret
rcll
sub
add
movsb
add
add
add
add
mov
and
mov
mov
movb
repz
std
shll
and
sbb
or
xor
lahf
xchg
cmc
mov
push
add
aam
jno
cli
mov
pop
inc
add
lcall
fildll
add
repnz
stos
movsb
add
cmpsl
in
rolb
cmp
or
adc
xchg
int3
mov
push
das
sahf
les
add
cmp
loop
inc
cmp
hlt
add
and
dec
out
loop
mov
cmpsb
add
add
add
push
add
mov
add
add
and
inc
add
adc
xchg
div
add
jge
cmp
ret
mov
lods
call
add
pop
fldcw
add
fistpll
mov
add
mov
clc
lds
dec
mov
add
insl
cmp
aad
sub
add
push
pop
mov
mov
mov
and
add
in
dec
lds
mov
add
add
mov
add
adc
add
add
iret
pop
adc
xlat
jbe
adc
jne
add
lods
cmp
rorl
sbb
dec
inc
add
xchg
add
cmp
lahf
cmp
cld
aam
jge
out
pop
mov
mov
add
mov
add
add
and
fsubl
push
imul
add
sahf
dec
pusha
add
jne
add
add
add
add
mov
mov
aad
add
add
repnz
in
aaa
js
jnp
cs
jge
pushf
mov
xor
jmp
mov
add
xor
cmp
jg
mov
lahf
mov
xchg
pop
xchg
popa
les
mov
dec
repz
cmp
sarl
add
testb
xor
xchg
inc
pop
outsb
cld
insl
cmpsb
add
pop
or
add
mov
dec
lcall
xlat
push
comiss
mov
repnz
add
add
add
push
add
les
and
mov
arpl
ss
dec
mov
mov
add
pusha
add
xchg
mov
and
pop
push
sub
xchg
addr16
cltd
add
mov
pop
rolb
das
push
daa
sub
dec
sub
mov
add
add
sub
testb
add
in
add
add
cld
mov
add
and
mov
add
sub
mov
mov
mov
cmp
jb
das
sbb
add
and
add
push
add
add
add
push
add
pop
cwtl
insb
cs
lods
lock
dec
mov
repnz
add
and
xchg
add
mov
add
and
mov
add
jae
pop
in
xchg
add
and
push
add
add
mov
mov
insb
loop
jae
sbb
mov
in
ljmp
jb
je
data16
add
add
add
cmp
mov
popa
scas
push
xor
add
scas
mov
aad
imul
jp
insb
mov
mov
and
mov
divl
mov
popf
dec
push
add
inc
mov
aas
dec
jle
jle
sbb
cli
mov
jns
and
mov
divl
ret
imul
mov
lods
mov
sub
push
add
and
push
add
sub
mov
add
mov
jo
jmp
fwait
add
mov
rolb
repnz
mov
add
pop
push
sbb
add
jg
adc
add
dec
add
mov
xchg
mov
add
cmp
add
add
add
sub
enter
ds
fiaddl
sub
push
push
add
add
and
mov
dec
add
mov
add
mov
adc
pop
sbb
adc
movsb
add
add
sub
add
mov
add
mov
add
or
fistpll
add
sub
add
rolb
mov
sub
mov
add
xor
loope
outsl
cs
add
sub
mov
push
add
xchg
push
and
xor
ja
jno
sub
cmpsb
add
and
mov
lcall
out
popa
jecxz
dec
xchg
cmc
and
loope
xor
je
in
popf
add
mov
test
imul
jb
and
mov
push
add
imul
adc
xor
push
popa
call
cmp
add
jo
mov
xchg
push
add
das
fmull
sub
insb
mov
loopne
or
add
jl
or
and
rolb
add
lret
sub
mov
lcall
ja
lcall
lahf
imul
add
xor
pushf
scas
cld
aaa
jle
add
add
jbe
wbinvd
mov
xchg
add
mov
add
add
into
fisubl
mov
add
mov
add
add
ja
add
and
add
inc
add
cmp
cmp
test
adc
decb
add
xchg
add
jg
add
add
mov
xorl
jp
jb
inc
add
nop
add
inc
leave
aaa
dec
inc
add
ljmp
dec
jae
add
sub
dec
mov
xchg
add
add
mov
mov
addb
das
mov
cmp
outsb
cmp
adc
add
mov
push
add
std
nop
add
push
jp
add
out
iret
pop
rcll
js
out
cmp
add
jnp
add
add
fiaddl
add
out
sbb
add
or
xor
push
mov
mov
test
dec
or
add
pop
mov
push
xchg
lret
test
xor
or
add
lds
lcall
repz
clc
inc
add
pop
xchg
add
add
and
inc
xchg
decb
mov
jnp
rolb
or
iret
repnz
int
pop
adc
xchg
push
add
repz
mov
dec
lods
sbb
jge
add
sahf
ja
add
mov
testb
inc
add
nop
add
cmp
and
les
jne
adc
push
add
movsb
add
mov
insb
cwtl
push
test
add
add
sbb
add
dec
sysenter
add
int3
outsb
inc
add
jae
add
add
add
add
repz
add
add
add
je
lock
dec
jmp
mov
pop
push
add
cwtl
jle
push
cmp
add
xchg
out
xchg
add
sahf
popa
push
add
fcomip
pop
push
cmpsl
lahf
push
add
add
mov
test
mov
inc
cmc
adc
testb
out
aad
ljmp
add
mov
xor
add
mov
movsl
mov
add
or
add
add
rolb
dec
pushf
lods
mov
add
icebp
add
mov
fstpt
popf
popf
or
scas
popa
bound
mov
ja
mov
mov
add
popf
jmp
xor
add
add
add
pop
in
jo
popa
dec
aad
pusha
add
cmpsb
add
add
addr16
loopne
popa
jecxz
sub
add
rolb
push
add
xlat
jae
test
push
dec
scas
jmp
pop
mov
push
or
lds
adc
jp
outsb
fistps
hlt
add
xchg
ds
in
out
bound
mov
add
lret
in
xor
les
push
add
and
loope
add
mov
jp
add
add
add
push
add
pop
and
mov
jmp
das
into
fimull
les
rolb
sbb
je
add
mov
mov
add
add
push
add
add
fcoms
add
out
sbb
mov
add
push
push
sbb
cltd
pop
jl
add
test
sahf
fimuls
xlat
mov
xchg
add
add
add
stos
jge
test
inc
add
loope
or
mov
ret
or
in
dec
int3
adc
and
add
push
add
xor
inc
xchg
or
add
icebp
int
clc
lods
push
push
jg
jg
sti
rorl
dec
jp
pop
sub
add
in
sbb
mov
stos
test
bound
mov
imul
add
add
lods
adc
xchg
jmp
add
pop
pop
test
cmc
add
add
dec
cmp
jmp
add
pop
sahf
imul
out
add
push
xchg
xor
mov
shl
mov
rolb
or
push
add
add
or
add
je
pop
aaa
fcomp
adc
fwait
and
call
add
add
add
pop
dec
dec
inc
push
add
add
add
addb
mov
add
stos
push
mov
add
add
fdivp
stos
cmpsb
add
mov
add
lods
ljmp
mov
add
add
jae
jns
add
pop
ret
lods
test
add
add
add
sar
mov
clc
divl
sub
or
add
mov
popa
add
jno
and
mov
pop
push
add
add
inc
add
add
cmp
imul
rolb
daa
scas
outsb
cmpsb
add
or
in
cmp
mov
push
add
xor
pop
mov
mov
cmpsb
add
mov
mov
test
add
rolb
rcrl
call
dec
push
jae
lea
enter
mov
mov
add
dec
pop
outsl
and
inc
add
testb
pop
call
add
add
mov
xor
std
or
inc
add
add
xor
sti
gs
jbe
mov
clc
jns
sbb
and
mov
cmc
cmpsb
add
add
xlat
call
and
mov
add
cwtl
jne
add
mov
insb
pusha
add
add
mov
add
cmpsb
add
js
mov
loope
hlt
add
add
in
mov
addb
jecxz
mov
xchg
add
mov
aas
cltd
xchg
jg
lods
outsb
rol
add
mov
rcll
push
jle
adc
lods
scas
loopne
lods
in
inc
xor
xchg
push
add
pop
imul
int
add
xor
mov
adc
das
cmc
outsb
jo
or
and
and
add
and
mov
cmp
mov
or
xlat
sbb
adc
dec
jnp
xchg
add
or
add
pop
add
dec
mov
push
jo
cmp
xchg
fldcw
mov
sbb
data16
dec
add
pop
sahf
sti
add
scas
cmp
adc
sysexit
insb
sub
lahf
mov
test
imul
add
sti
rolb
aas
xchg
add
cmc
nop
add
jmp
lahf
sub
mov
sbb
or
std
xchg
sbb
ret
insb
out
stos
jge
sti
add
mov
push
aaa
xor
jg,pn
add
out
push
add
jmp
add
dec
xchg
add
xchg
add
add
add
or
push
add
pop
popa
push
clc
ret
add
cli
pop
inc
lods
jb
add
pop
out
rolb
shll
clc
sbb
insb
pop
pop
sbb
add
xor
popa
lock
sub
add
add
dec
loopne
icebp
dec
adc
or
cmpsb
add
add
data16
out
mov
pop
pop
mov
xchg
add
mov
testb
das
cli
filds
mov
in
mov
mov
std
cmp
xor
push
add
mov
dec
arpl
lea
add
adc
mov
jno
jo
inc
push
add
xchg
add
pushf
dec
das
test
xchg
add
xchg
lcall
fisubrs
add
add
add
xchg
cmp
stc
pop
into
xchg
add
sbb
jbe
mov
inc
add
mov
sbb
cmpsb
add
jmp
mov
add
and
movb
add
add
add
push
add
xchg
fsubrl
mov
sbb
add
ror
mov
test
jb
mov
test
jae
push
xchg
add
lds
mov
sub
scas
push
fistpl
add
fmuls
add
fwait
out
xlat
jle
jg
jnp
push
xor
jo
add
mov
dec
jge
xlat
imul
mov
movb
dec
inc
add
dec
lock
daa
sahf
rolb
rolb
sub
pop
jo
aas
sahf
sub
repz
ljmp
sub
add
repz
mov
mov
mov
add
sti
push
dec
lcall
dec
pop
or
sub
add
jge
mov
pop
sbb
faddl
add
xor
add
scas
lcall
mov
xchg
add
add
add
pop
repz
pop
lock
jb
nop
add
pop
and
mov
jle
dec
add
mov
add
add
ret
icebp
push
add
addr16
cmc
dec
movb
xchg
add
push
add
cmp
add
or
int
loop
mov
cmp
lea
add
jae
fisttpll
jle
inc
add
cli
imul
rcrl
push
testb
add
add
xchg
add
pop
pop
cli
pop
outsb
or
addr16
add
mov
aaa
cmp
rolb
mov
add
add
nop
add
pop
cmp
add
or
arpl
add
nop
add
xchg
add
cli
mov
addr16
add
scas
jp
adc
les
inc
mov
add
bound
mov
inc
add
mov
or
cli
xchg
add
add
adc
push
jae
inc
cmp
xchg
xor
sub
das
jl
xor
repnz
add
add
jo
push
add
cmc
fdivrs
push
add
mov
or
or
mov
mov
filds
add
add
add
sbb
lcall
pop
mov
loopne
in
into
sbb
cs
mov
inc
inc
test
add
movb
add
mov
add
mov
pop
jg
add
adc
imul
add
add
add
mov
push
or
add
and
ret
mov
mov
cmpl
push
xchg
in
sahf
add
mov
add
mov
int3
mov
shl
mov
jbe
pop
fnstsw
mov
mov
add
mov
loope
inc
add
mov
add
add
mov
adc
ret
decb
jo
lods
rorl
loopne
sub
xchg
add
or
add
jns
pop
cmp
add
add
call
push
adc
adc
pop
repz
cmp
xchg
add
pushl
aaa
mov
xor
and
pop
enter
lret
mov
lock
cmc
ret
leave
cmp
add
mov
cvtps2pi
xchg
add
add
add
in
add
inc
add
adc
add
inc
add
add
add
cmpsl
inc
add
or
push
add
jnp
add
insl
orl
pop
push
add
xchg
pop
fstpl
das
loope
mov
out
data16
lret
outsl
pop
repnz
call
add
and
iret
xor
push
add
in
popf
icebp
mov
pushf
insb
xchg
add
xbegin
push
sub
in
xchg
add
push
in
subl
add
push
testl
adc
repz
jae
je
add
rolb
and
out
enter
lds
add
mov
mov
out
movb
sub
movsb
add
pushf
inc
add
push
pop
fldl
addb
data16
add
mov
jmp
int3
addb
test
aas
mov
shl
out
inc
add
push
add
jp
test
aad
jo
cwtl
mov
ljmp
cmp
add
mov
or
loop
inc
add
add
pop
or
jb
mov
les
adc
push
roll
jb
adc
les
repz
jmp
lods
in
arpl
shrl
add
add
or
and
mov
mov
push
add
data16
inc
add
enter
cmp
jmp
lods
cmpsl
enter
add
mov
imul
loopne
orl
pusha
add
sahf
xchg
xchg
addb
dec
incb
mov
pop
iret
dec
pop
mov
lds
add
add
add
add
add
cltd
push
test
push
rolb
aad
ror
mov
pop
mov
push
add
add
and
mov
xchg
sbb
mov
add
pop
pop
xchg
add
add
out
in
pop
dec
cwtl
addr16
add
add
add
pop
call
add
add
add
lock
add
add
cmp
addb
cltd
mov
setge
in
sbb
sbb
out
dec
mov
jne
add
add
add
xchg
xor
dec
test
xor
stc
push
repnz
loop
gs
and
mov
add
and
mov
scas
bound
mov
loopne
or
add
jne
add
xchg
add
add
jbe
pop
pop
sbb
add
mov
mov
add
gs
add
cs
data16
into
jecxz
or
aas
roll
add
pop
in
in
movsb
add
lahf
jnp
pushf
mov
jmp
jmp
in
fcoms
push
add
fisubs
add
out
out
add
ret
adc
inc
add
stc
xchg
inc
xchg
mov
cmpsb
add
jecxz
movsb
add
mov
mov
repnz
clc
inc
add
add
dec
test
and
jbe
fs
addb
sub
jnp
add
dec
insb
sbb
js
add
and
in
mov
add
sbb
loope
decb
add
mov
insl
inc
mov
pop
push
mov
imul
inc
add
add
mov
add
add
icebp
loope
aam
add
push
add
add
add
add
imul
cmp
push
add
clc
cmc
xchg
mov
dec
xchg
add
mov
or
dec
xchg
and
outsb
shll
jb
dec
iret
test
aaa
in
mov
mov
add
xchg
call
and
test
push
add
add
add
dec
push
xchg
ret
or
jle
add
add
add
lea
lods
sub
add
pop
jb
insl
fldt
inc
mov
repz
dec
mov
add
add
lret
push
xlat
and
mov
popa
mov
and
mov
and
cmpsb
add
addb
leave
mov
sub
push
add
mov
add
add
cmp
push
stc
push
stos
aad
fisubs
add
in
add
fdivr
ret
loop
mov
stos
sbb
cwtl
add
add
add
adc
addr16
sbb
imull
add
cs
cmc
into
nop
add
jne
stos
sbb
fwait
add
mov
stos
or
add
adc
fildll
lods
into
insl
mov
lret
xor
push
sbb
add
dec
or
add
add
lock
jno
cmpsb
add
add
cmpsb
add
scas
mov
shll
add
add
add
jge
add
xchg
add
add
dec
mov
xor
xor
ljmp
add
mov
mov
out
js
add
jo
push
pop
mov
add
addr16
jno
add
jecxz
aas
add
mov
add
jbe
scas
das
test
sbb
mov
cmp
mov
fmuls
mov
add
test
rorl
arpl
xchg
add
cmpsl
and
arpl
in
bound
mov
mov
inc
lahf
push
add
push
pop
shll
out
add
mov
loop
sbb
inc
add
ds
add
add
scas
pop
stc
pop
ficompl
add
rolb
icebp
mov
adc
fisttpll
data16
jb
movb
add
xor
dec
rolb
push
add
xchg
mov
add
mov
aam
addb
add
add
adc
lds
add
pop
jae
add
add
jno
sti
mov
cld
mov
add
inc
imul
testl
add
add
mov
mov
add
push
js
add
shrl
les
pop
xor
cld
mov
mov
add
mov
add
and
mov
add
add
and
mov
shl
bound
mov
add
add
sahf
fnsave
add
xor
add
dec
stos
stc
cwtl
or
inc
add
movsb
add
pop
lods
cmp
dec
sbb
stos
sbb
add
add
movsl
scas
subps
in
xor
xchg
add
aaa
les
add
mov
mov
add
pop
mov
roll
dec
add
mov
add
add
fsts
cmp
lea
bound
mov
test
popa
dec
outsl
adc
inc
add
pop
lods
jp
push
sbb
repnz
stos
mul
cmp
mov
outsl
or
add
cltd
mov
add
add
test
in
jb
fnstsw
pop
test
push
add
and
add
inc
add
add
mov
sbb
lea
inc
fs
push
cmpsb
add
mov
lret
add
dec
cmpsb
add
ss
add
push
jne
add
add
sbb
stos
outsl
test
aaa
sbb
add
imul
cs
in
ret
aad
mov
lods
mov
mov
inc
add
add
out
les
in
pop
rorl
bound
mov
fisubl
or
pop
stos
fmull
add
add
enter
ret
insl
loope
mov
rorl
mov
add
scas
inc
roll
lds
dec
cmc
push
add
dec
mov
arpl
add
add
leave
cmp
mov
add
add
add
add
adc
mov
stos
mov
cltd
add
ds
fstl
loopne
shrl
xchg
pop
fmuls
add
mov
jae
sbb
xor
scas
lods
jle
mov
add
sbb
mov
mov
int3
and
add
cli
sbb
xor
hlt
add
add
and
fistpl
jne
pusha
add
sti
adc
pop
stos
into
out
addb
add
mov
aas
sub
cmc
push
add
dec
and
mov
mul
add
add
pop
and
xchg
das
dec
popf
repnz
add
cwtl
movsl
loop
inc
add
lea
icebp
sahf
pusha
add
add
les
inc
inc
xor
add
add
and
mov
mov
pop
in
inc
add
stos
dec
push
lret
rcr
cltd
call
clc
mov
cmp
jbe
push
add
push
ficoms
add
add
push
jecxz
loope
add
add
add
add
mov
inc
mov
add
xor
jl
mov
dec
int
jp
cmpsb
add
xlat
lods
imul
cmpsl
or
add
add
mov
add
fcomi
add
int3
dec
movb
xchg
cmp
add
add
mov
inc
aam
call
iret
test
test
cmc
cld
pop
mov
add
pop
dec
stos
lahf
jle
adc
pop
dec
setg
mov
add
mov
add
add
mov
add
cs
fdivl
add
les
aas
jp
dec
jne,pt
jle
jae
ficomps
add
add
lcall
sahf
mov
xchg
sti
mov
and
mov
push
push
or
add
mov
xor
imul
add
add
outsl
and
xchg
cs
jae
int
add
mov
mov
jns
add
add
add
add
and
mov
xor
sbb
lods
mov
add
sbb
add
cmp
add
popf
sarl
add
add
push
das
and
mov
mov
imul
mov
icebp
mov
aas
sarl
test
add
mov
aas
daa
leave
inc
add
aad
jmp
cmc
xchg
es
mov
push
add
add
add
ret
or
loop
pop
fidivs
arpl
rolb
inc
dec
xchg
mov
in
fsubrl
jno
stc
sbb
mov
add
sub
orl
loop
leave
or
fucomip
jecxz
or
inc
cwtl
mov
mov
ret
rolb
movsl
inc
push
add
or
mov
aaa
imul
dec
call
pop
addr16
lods
push
add
arpl
add
mov
cmp
push
stos
loope
xchg
add
add
pusha
add
adc
add
sahf
movsb
add
cmp
xchg
add
pop
stos
push
add
add
sbb
add
inc
add
rorl
stc
push
dec
in
push
pop
mov
jb
enter
dec
push
std
repnz
lea
adc
xor
jb
daa
inc
js
dec
xchg
gs
and
mov
shl
movb
xor
mov
jmp
addb
insl
xchg
add
mov
mov
dec
int
add
fimuls
add
push
and
xlat
push
sub
and
and
mov
cmp
sbb
xlat
or
or
inc
pop
mov
add
and
mov
add
jg
data16
loopne
popa
xrelease
push
jno
mov
add
je
sbb
or
add
ja
add
mov
movsl
pminub
movb
ret
jecxz
movb
scas
mov
popf
inc
add
pop
out
sbb
push
add
push
ret
dec
push
add
add
ret
add
add
inc
adc
or
rolb
clc
add
mov
add
xor
stos
icebp
iret
testb
add
add
ret
or
add
adc
pop
scas
sub
add
add
sbb
mov
fildl
cmp
lret
movntq
out
pop
cmp
and
in
clc
icebp
daa
lahf
enter
mov
add
inc
fdivs
add
arpl
sub
add
cmc
lock
jns
incl
add
inc
add
addb
add
mov
lea
dec
dec
out
fwait
add
mov
jno
outsb
pop
loopne
adc
loop
std
fbld
sub
and
add
mov
fisubrl
add
pusha
add
cmc
sub
aad
xor
and
mov
iret
inc
mull
jo
enter
pop
xchg
in
test
testb
inc
ja
lahf
pusha
add
push
loop
fs
mov
add
add
add
bound
mov
or
add
fldt
test
hlt
add
mov
addb
out
add
inc
into
in
jg
fadd
jnp
push
add
mov
rolb
ficoml
add
ljmp
rolb
cmpsb
add
add
dec
jns
push
mov
add
add
mov
pop
push
aas
sbb
dec
lahf
iret
in
addl
pop
and
add
or
and
mov
daa
or
mov
dec
or
bound
mov
fsubl
add
add
mov
xchg
add
add
jae
add
stos
jp
jl
repnz
aad
cld
sbb
mov
add
mov
cmc
sbb
sbb
push
add
test
add
sbb
jne
mov
ret
add
push
adc
in
std
sbb
movb
scas
xchg
cwtl
mov
movsl
aad
add
fidivrs
fucomip
test
pop
inc
inc
add
add
data16
cmp
movb
add
add
jb
add
inc
add
orl
sub
adc
outsl
rolb
or
je
dec
loope
je
clc
pop
inc
add
add
inc
add
nop
add
mov
add
flds
sub
add
repnz
stc
iret
xor
sbb
and
add
add
adc
mov
aam
pop
inc
add
push
and
hlt
add
add
push
add
enter
lds
outsl
xor
xchg
dec
mov
add
gs
test
push
add
mov
push
out
mov
add
shl
add
fcmove
or
or
mov
sar
and
mov
lcall
mov
repz
add
inc
add
push
add
xchg
mov
pop
int
adc
fcompl
mov
mov
add
add
nop
add
add
popa
test
popa
add
xchg
add
xor
out
xchg
add
pushf
push
push
daa
out
jne
xor
jbe
sbb
repnz
add
jns
mov
add
jle
add
std
fadds
push
add
js
sbb
addr16
in
mov
cmp
add
xchg
add
mov
inc
outsb
fsubrs
outsb
aas
cmc
jbe
xor
push
or
sub
add
xchg
sbb
and
sub
sub
push
cmp
add
xor
mov
add
mov
add
ds
push
frstor
cli
mov
sub
add
push
cmp
out
sbb
add
add
mov
mov
pop
leave
pop
inc
add
add
inc
add
jmp
inc
add
rolb
inc
add
push
mov
les
push
add
sub
add
pop
push
or
and
leave
scas
inc
add
and
mov
pop
scas
bound
mov
add
add
inc
add
sti
push
add
add
pop
lods
inc
add
add
add
jmp
cs
dec
add
xchg
and
lret
xchg
add
jle
mov
in
adc
add
mov
adc
fcmovbe
xchg
imul
add
add
rolb
push
add
enter
mov
fsubs
cmpsl
push
add
mov
into
fsts
daa
mov
adc
lret
add
jmp
std
sub
je
jbe
sub
int
mov
xlat
js
inc
iret
sar
push
jo
sub
sti
test
sub
dec
jl
lcall
ret
add
in
int3
or
push
or
mov
loop
add
mov
mov
jb
adc
add
mov
mov
cli
loopne
popa
rolb
jmp
inc
popf
fcomi
xor
push
rolb
stc
xor
add
cmpsl
mov
andl
jo
es
sub
in
add
add
jle
addb
add
js
jmp
push
add
dec
repz
add
mov
or
add
orl
loope
je
movb
arpl
pop
fiadds
mov
adc
fdivp
add
pop
inc
testb
sub
jge
add
cmc
push
imul
push
add
and
mov
or
jle
add
dec
data16
iret
std
lcall
hlt
add
add
xor
add
mov
imul
sbb
mov
cmp
enter
out
jnp
cmp
cmp
add
add
or
dec
jmp
addb
pusha
add
add
mov
and
add
add
or
jae
addb
add
adc
inc
add
sub
cmp
add
add
jbe
dec
cmpsb
add
add
fisttpl
xor
cmp
pop
inc
xor
xchg
xchg
add
sbb
mov
movntps
call
mov
rolb
adc
push
sub
add
jmp
test
sbb
mov
gs
and
add
repz
xor
xor
pop
and
sub
cld
or
add
add
add
rcl
jae
add
fsubl
inc
mov
and
mov
add
push
add
add
jo
call
add
add
sub
mov
add
testb
add
add
and
pop
pop
and
lahf
addr16
scas
arpl
pop
mov
je
adc
mov
in
add
inc
cmpsb
add
sbb
add
cli
ret
cmp
mov
add
outsl
push
jmp
add
aaa
sti
mov
imul
mov
cmpl
stos
mov
les
orl
jbe
repnz
jbe
in
mov
pushf
fistpl
mov
fnstsw
adc
icebp
xor
call
int
pusha
add
push
gs
add
add
sub
loopew
fucom
je
xor
mov
in
sub
and
mov
push
jmp
add
test
loope
xchg
sub
sub
add
dec
push
add
insl
and
add
add
in
xor
add
mov
fdivl
add
add
outsl
adc
addb
cmp
and
mov
sub
add
popf
rolb
add
int3
fisttpll
push
add
cltd
inc
add
movl
pop
dec
orl
push
add
add
paddq
and
lods
ficomps
dec
icebp
mov
mov
xchg
pop
cmp
nop
add
in
bound
mov
push
mov
out
cmp
jae
add
or
add
dec
fstp
bound
mov
dec
mov
stc
ljmp
out
pop
stos
cmpsb
add
outsl
jmp
inc
test
ljmp
insl
mov
dec
pop
imul
or
sbb
add
add
lock
mov
xor
fisttps
xchg
dec
je
adc
in
int
xchg
add
loope
stos
mov
jnp
inc
add
add
add
dec
in
js,pt
jns
add
fs
or
pop
xorl
and
frstpm(287
stos
in
push
add
add
arpl
add
add
push
jmp
decb
xchg
adc
adc
add
add
add
not
imul
add
dec
jbe
pop
pop
jmp
jle
inc
adc
orl
add
in
add
or
test
add
add
mov
push
ljmp
or
test
push
pop
push
add
loope
add
push
movsb
add
loop
xor
xor
add
add
mov
mov
subl
dec
mov
pop
jb
out
mov
add
adc
add
add
add
add
add
in
add
in
lods
inc
add
das
mov
cmp
cmp
mov
add
sub
inc
xor
sbb
mov
clc
adc
jnp
cs
mov
test
test
dec
jecxz
add
sbb
orl
xlat
jns
add
pop
inc
sub
dec
adc
cmp
mov
lods
or
rolb
or
dec
testl
push
add
add
mov
add
mov
xchg
mov
cld
ljmp
test
add
stos
mov
mov
js
je
and
mov
sub
add
add
mov
in
add
pop
cmc
add
mov
add
add
movsb
add
mov
xchg
enter
cmp
mov
add
mov
xor
ljmp
out
pop
pop
cmc
and
add
mov
fwait
sbb
add
sarl
gs
daa
dec
shll
movq
addb
sarl
jg
stc
push
add
jge
add
ja
les
inc
add
cmpsb
add
inc
add
cs
add
jae
inc
pop
icebp
jo
int
lret
mov
aas
test
add
popf
adc
popa
fwait
add
mov
add
mov
sub
xchg
xor
cltd
test
ret
addb
add
testl
clc
cmc
iret
dec
int3
mov
mov
ds
lahf
rcr
xchg
sub
add
inc
xchg
add
mov
pop
adc
push
addb
mov
lds
pop
xchg
test
mulps
add
add
cmp
ret
add
xchg
xor
mull
xor
aaa
mov
fcoms
add
xor
push
int3
xor
xlat
je
adc
sub
fwait
cli
out
dec
mov
add
sbb
add
add
lret
hlt
add
mov
dec
add
jmp
jns
lahf
into
push
mov
add
xchg
add
add
add
mov
cmp
pop
add
das
jecxz
mov
add
jp
adc
dec
jecxz
xchg
add
xchg
rolb
pop
stos
js
enter
test
stos
cli
ss
out
insl
aad
js
fildll
add
jbe
loop
aas
sbbl
adc
jne
pop
test
mov
jge
aas
mov
xchg
repz
add
imul
add
out
hlt
add
add
xchg
xchg
lahf
scas
lahf
add
lcall
insl
dec
insb
repnz
add
xor
xchg
add
addb
std
jnp
inc
add
jecxz
add
add
mov
xchg
mov
sbbl
xchg
adc
cmp
cwtl
divl
sbb
cmpsl
inc
imull
add
stos
ficompl
push
bound
mov
rol
ds
dec
xchg
mov
int
add
add
and
mov
dec
addr16
js
lret
mov
sahf
mov
adc
les
jecxz
add
pop
in
fbstp
add
xor
pop
loopne
or
jl
and
xchg
into
mov
bound
mov
add
add
or
xor
add
push
arpl
dec
xchg
add
sub
cltd
cmp
push
addb
aas
js
add
btc
add
jns
add
add
jge
add
mov
xlat
adc
addb
testb
fmul
lds
add
push
add
add
in
add
mov
add
pop
icebp
jo
cmpsb
add
pushl
add
add
add
dec
stos
mov
fwait
inc
imul
ljmp
add
call
add
cmc
xor
mov
and
mov
insb
add
adc
push
add
shll
xchg
sub
add
push
inc
add
mov
rolb
lahf
leave
js
add
xchg
add
sbb
add
rolb
add
add
mov
add
push
add
mov
sahf
mov
push
add
jb
xchg
mov
mov
add
aaa
data16
sub
add
cltd
xchg
lock
lret
into
lret
dec
lea
push
and
fistpl
aad
pushf
push
add
add
add
imul
ja
sub
test
mov
lret
mov
pop
lea
mov
cmp
mov
add
int3
int
xor
aad
xor
add
jmp
jg
jl
jbe
adc
mov
adc
add
add
jecxz
adc
cwtl
inc
mov
add
cmp
add
cld
cli
pushf
cwtl
push
add
jbe
ret
adc
test
lods
and
mov
leave
mov
add
je
dec
movsl
sbb
or
add
inc
add
scas
add
in
add
add
add
cs
cli
movb
inc
incl
mov
add
add
push
add
call
addb
sbb
rolb
cltd
stos
sub
add
fisubrl
add
into
dec
cmc
clc
sbb
sub
and
add
add
lcall
add
mov
subl
add
insl
out
dec
insl
push
add
mov
dec
rolb
mov
notl
mov
xor
and
sub
data16
inc
shll
pop
repnz
xchg
add
dec
push
mov
nop
add
jge
sub
imul
add
in
add
iret
int3
cmp
push
inc
cmp
add
dec
in
add
fisttpl
xor
add
mov
out
inc
add
inc
repnz
rolb
insb
xchg
dec
aas
mov
jne
leave
pushf
adc
cltd
and
in
jecxz
push
ja
test
add
adc
mov
add
xchg
add
cmc
xchg
lds
xchg
add
pusha
add
adc
inc
jp
lcall
add
adc
mov
movl
int
push
add
add
ret
or
cmc
inc
add
xor
inc
test
add
add
xor
inc
iret
xchg
add
addb
add
push
inc
add
out
js
xchg
arpl
add
add
insl
sub
les
insb
jo
pushf
or
mov
mov
movsb
add
data16
push
lret
test
add
cmc
cmp
out
fdivl
fwait
inc
add
mov
mov
outsl
scas
loop
mov
addb
xchg
add
ljmp
sti
xchg
mov
push
call
jnp
sahf
stos
mov
add
insb
in
mov
cmp
mov
jecxz
add
inc
add
jno
sbb
gs
inc
mov
push
add
add
add
mov
lods
addb
add
mov
add
sbb
add
mov
dec
mov
add
jmp
out
dec
xchg
addb
add
push
push
inc
add
mov
adc
sbb
jns
inc
or
insl
rolb
aas
jne
rol
add
mov
cmpsl
cmp
pop
mov
sub
loope
inc
add
add
repz
add
ljmp
addb
add
add
mov
add
inc
add
add
xchg
add
add
mov
add
add
leave
pop
lock
jne
in
mov
sbb
pop
mov
jo
lods
or
inc
add
xor
cmp
mov
add
adc
inc
cmp
add
imul
mov
xchg
add
and
xor
pop
sub
push
add
sub
inc
add
add
add
mov
movb
repnz
add
insl
xchg
push
inc
out
xor
add
add
out
scas
jb
inc
pop
jne
and
sbb
add
add
inc
jge
mov
add
add
mov
jmp
imul
aam
cmp
add
add
add
daa
lcall
loopne
add
add
push
add
and
rolb
mov
repnz
data16
add
lock
movb
les
pop
cwtl
ja
add
outsb
add
mov
add
add
add
pop
repnz
pop
stos
add
xlat
mov
sbb
fidivs
add
fwait
mov
add
out
sub
nop
add
add
xchg
add
lock
stos
and
adc
and
add
test
pop
dec
mov
scas
adcl
pop
cltd
mov
cmp
mov
addb
mov
add
pop
push
jb
in
repnz
pop
stos
mov
add
pop
push
pop
xor
fimuls
data16
scas
ret
sub
add
movb
add
add
xor
test
add
add
add
push
or
popf
mov
dec
testb
cmp
add
add
pop
stos
mov
push
paddusb
ret
fstl
adc
addr16
push
cmp
add
add
dec
cmp
data16
scas
mov
popa
les
jl
sbb
fidivrl
incl
add
add
js
jmp
add
ja
add
add
loope
ret
lods
lock
xor
mov
dec
dec
jge
js
add
gs
inc
add
add
cmp
xor
mov
fcmovnu
xor
gs
mov
dec
sub
xchg
sbb
add
repz
xlat
movsl
xchg
add
add
stos
cmpsb
add
jl
sub
add
inc
add
xor
xchg
out
sbb
mov
add
adc
dec
inc
sbb
push
inc
rolb
lahf
call
jae
mov
inc
adc
xor
notl
jg
add
cmp
test
add
mov
js
jecxz
lods
sub
add
sti
movsb
add
inc
add
sub
fildl
mov
dec
addb
arpl
add
add
test
sbb
add
add
mov
iret
xor
sbb
pop
inc
pushl
add
jmp
mov
push
insl
leave
inc
add
add
add
repz
dec
mov
add
iret
cmp
popf
jl
aad
jmp
adc
std
out
in
aam
jge
sbb
dec
push
add
push
add
aaa
popf
cmp
adc
int3
lods
push
add
add
in
xor
sub
gs
movsl
pop
add
inc
bound
mov
jmp
push
xchg
jo
loopne
jb
and
mov
xchg
add
mov
inc
add
scas
mov
sub
cld
in
add
pop
cmpsl
movsb
add
push
cmpsb
add
xchg
jnp
add
sbb
cmp
movsb
add
add
mov
mov
mov
in
shr
mov
xchg
push
add
and
mov
ja
lods
push
add
ljmp
sti
cmp
or
int
loop
bound
mov
filds
sahf
fwait
scas
cs
jge
ds
sar
inc
outsl
mov
mov
jno
add
mov
and
data16
add
mov
rolb
or
cld
mov
pushf
cmp
adc
or
gs
fdivp
add
add
inc
cli
rolb
stos
mov
mov
push
adc
mov
out
les
lret
xchg
ret
data16
sbb
adc
pop
loop
mov
add
pop
sbb
add
xor
leave
loop
ret
mov
lcall
pop
mov
inc
add
add
lcall
add
push
add
out
jno
add
add
pushf
ss
jno
in
mov
add
fildl
sbb
mov
xor
xchg
lods
mov
fstl
add
push
inc
cltd
cs
add
imul
push
add
fisubrl
scas
push
cwtl
popf
push
add
divl
add
inc
ljmp
out
mov
sbb
add
frstor
mov
sbb
xor
add
or
sti
push
xchg
cmpl
fnstcw
lock
or
inc
add
push
add
out
decl
add
mov
fistpll
test
mov
add
inc
push
mov
pop
mov
pop
inc
int3
adc
mov
xchg
cld
scas
lret
push
add
add
rcll
xor
adc
loope
add
pop
pop
lcall
ds
ficomps
add
add
add
and
add
ds
add
add
sahf
xchg
add
jb
xor
sbb
add
inc
add
ljmp
rolb
push
add
cmpsl
enter
icebp
mov
sub
cmp
pop
test
sahf
and
mov
add
pop
xor
dec
and
mov
movb
jns
xchg
stos
sbb
adc
add
add
and
add
add
call
popa
xchg
ds
pop
push
sub
add
pop
test
lods
push
add
je
icebp
pusha
add
jne
xchg
or
add
fdivrl
add
icebp
clc
pop
aam
and
mov
jecxz
sarl
mov
loop
jge
inc
add
add
mov
inc
lds
or
loopne
cmpsb
add
sub
add
add
add
imul
bound
mov
mov
pop
mov
mov
imul
inc
jno
repnz
jnp
add
pushf
movb
add
dec
xor
out
pop
outsl
popa
dec
dec
outsb
cmpsl
pop
xchg
inc
cmp
mov
add
add
cmpsb
add
xchg
add
xchg
adc
fnstenv
add
jnp
mov
lock
jb
ds
cld
xchg
imul
jnp
jb
daa
fwait
mov
inc
add
and
mov
das
imul
add
add
daa
mov
add
cmp
xchg
add
lods
cwtl
adc
jmp
xchg
add
fisubs
push
dec
sub
test
xchg
sbb
add
add
daa
xor
add
pop
cld
test
roll
mov
sub
mov
add
add
push
mov
add
cmc
fldt
sub
push
test
mov
sbb
add
sub
add
sahf
dec
cmp
ret
fldl
sti
xchg
rolb
adc
repnz
decb
mov
cmp
mov
add
add
mov
fdiv
add
add
add
movsb
add
mov
xchg
in
xor
lods
push
add
call
push
hlt
add
popf
mov
rolb
lahf
xlat
sub
fwait
pop
inc
add
sbb
or
mov
add
fisttpll
rolb
sub
clc
bound
mov
add
xchg
mov
add
mov
roll
ss
daa
sbb
inc
xchg
xchg
cld
push
inc
add
cmc
or
jns
testb
add
add
sub
inc
add
mov
in
add
add
xor
testb
mov
jns
add
mov
and
stc
pop
int
cmpsl
test
add
add
add
add
in
aad
addr16
add
jbe
in
add
cltd
repz
dec
out
inc
data16
add
dec
test
add
xor
stc
add
or
mov
add
add
aas
mov
add
mov
push
addb
sahf
push
add
inc
add
add
cmpsl
mov
aam
cmpsl
mov
enter
lahf
mov
sbb
add
xchg
add
add
push
jb
lret
cs
testb
mov
cmp
inc
add
popa
jb
xchg
sbb
jo
lods
dec
adc
pop
fsubrl
add
int
popa
rorl
pop
and
sbb
add
in
int3
mov
sbb
or
mov
jae
pop
mov
fisubs
stos
mov
or
add
dec
mov
or
xchg
add
push
addb
ret
mull
mov
test
imul
sahf
add
add
add
outsb
jno
or
imul
call
lahf
call
jo
arpl
add
pop
out
test
rolb
testl
or
add
decl
xchg
add
jecxz
add
imul
sbb
mov
add
rolb
ret
sbb
add
stos
ret
sub
add
and
out
mov
add
cmp
cld
insl
push
add
add
inc
add
inc
add
add
mov
add
inc
daa
adc
sbb
add
fnsave
imul
les
xor
jo
rorl
sahf
fisubrs
mov
roll
mov
xor
inc
stos
sub
out
movb
movb
push
add
out
in
fistpl
and
lock
add
add
out
xor
push
adc
mov
jno
push
or
shl
push
add
add
inc
pop
addb
add
ficompl
xchg
mov
mov
mov
cmp
movb
mov
add
fisubrs
xchg
add
jo
mov
add
mov
test
testb
int
outsl
call
sbb
dec
pop
jbe
cmpsb
add
add
repnz
loop
inc
cmp
adc
ss
loop
mov
sahf
pop
sbb
xchg
add
add
jmp
or
jno
outsl
arpl
push
add
cmp
mov
add
add
add
fcompl
aad
js
add
cmp
shl
add
add
insl
imul
pusha
add
fsubr
in
sahf
adc
mov
push
add
adc
outsb
cmc
cmpl
lods
loopne
mov
add
addr16
add
push
data16
add
hlt
add
jb
push
add
add
cvtps2pd
out
ljmp
fldenv
mov
pop
gs
decb
mov
js
add
jmp
push
add
push
add
fldl
mov
xchg
stos
or
add
movsb
add
xchg
out
sub
imul
mov
out
jle
bound
mov
add
sti
mov
mov
loop
xor
mov
sbb
or
test
add
mov
and
mov
xor
iret
repnz
js
pop
push
jecxz
aam
sti
cwtl
dec
outsl
inc
add
push
add
int
aaa
rcrl
sub
pop
add
mov
dec
add
test
add
lods
scas
aad
add
stc
fistl
add
clc
mov
jmp
and
add
out
stos
gs
add
add
add
fs
add
mov
fwait
addr16
out
pop
aad
icebp
xchg
add
loope
inc
mov
fimull
leave
lcall
and
mov
add
repnz
leave
imul
jbe
push
ljmp
or
out
mov
mov
out
loopne
cs
mov
lods
cli
jb
pop
and
cmp
cltd
mov
jmp
add
aaa
xchg
add
popf
sarl
mov
out
pop
fwait
out
mov
sbb
add
mov
dec
rol
int3
cmc
inc
add
xchg
add
mov
dec
pusha
add
lahf
fdivs
pop
mov
test
and
sti
mov
dec
movl
lds
insl
xor
int
push
mov
popa
ficoms
add
add
sbb
dec
xchg
add
pop
aam
sub
leave
cwtl
dec
push
or
add
outsl
and
popf
sub
add
imul
jge
add
jge
fdivp
add
movb
iret
je
sbb
lea
sub
imul
pushf
sub
movsb
add
cwtl
pushf
mov
cmp
aas
aad
cmpsl
scas
cmp
push
add
push
add
add
and
cltd
xor
rolb
sahf
outsl
xchg
mov
sub
add
jg
out
out
repnz
add
add
add
mov
add
mov
int3
divl
add
and
mov
mov
jbe
mov
or
jae
jle
mov
pusha
add
lods
mov
enter
test
add
jne
add
sbb
mov
mov
and
mov
sbb
add
add
mov
fiadds
dec
ret
scas
mov
xor
aad
jge
add
clc
or
scas
mov
jnp
fbld
add
or
add
add
dec
xchg
mov
add
xchg
add
sub
loope
xchg
arpl
sahf
mov
movsb
add
mov
pushf
decb
into
jmp
in
mov
mov
leave
push
add
add
adc
dec
cmp
add
push
adc
insl
mov
mov
add
outsl
sbb
pop
pop
ret
add
lods
xchg
add
test
fstpl
jp
mov
fcoms
xor
xor
testb
pop
test
sbb
add
outsb
jmp
xor
sub
add
jo
sbb
sub
add
lods
sbb
add
lea
mov
imul
inc
ljmp
outsl
xchg
add
pop
es
jp
xchg
pop
sub
add
add
bound
mov
jp
ljmp
jo
jge
mov
dec
loope
mov
xor
ror
push
add
mov
jmp
add
add
mov
mov
xchg
add
add
add
cs
lcall
add
pop
pop
dec
lock
lock
adc
sub
adc
fbld
dec
mov
stos
push
add
add
imul
add
add
mov
adc
aad
insl
ret
sbb
add
push
add
out
xor
xor
push
mov
adc
adc
lcall
add
and
mov
xor
adc
fistl
ficoms
jl
inc
insl
scas
inc
iret
call
and
add
mov
add
add
jge
add
mov
dec
in
not
add
sub
jge
xor
out
dec
and
or
popa
sub
add
je
mov
mov
filds
adc
cli
data16
xor
jns
add
dec
and
add
xor
shll
jmp
add
or
sbb
add
jb
and
mov
ja
mov
add
push
jnp
push
cld
movb
adc
or
loopne
js
enter
mov
loope
stc
movb
add
add
mov
xchg
add
inc
add
add
add
int
add
in
add
push
sti
jl
lcall
iret
sbb
add
add
scas
or
mov
and
mov
iret
add
adc
int
cli
fidivl
scas
xchg
ja
cltd
jl
add
lock
mov
add
clc
push
add
push
add
testb
ret
test
mov
in
inc
add
bound
mov
mov
and
pop
test
dec
sub
push
add
test
pop
mov
add
cmpsl
lock
pop
clc
mov
add
repz
add
add
fisttpll
out
sub
add
adc
push
add
and
dec
in
lret
jb
push
add
pop
and
mov
pop
xchg
add
rcll
add
mov
dec
in
call
repz
pop
aaa
mov
mov
add
add
mov
ficomps
mov
add
mov
xor
xor
test
xchg
dec
std
push
jns
mov
ret
jo
jno
add
mov
data16
gs
out
repz
fisubrl
scas
gs
cmp
add
add
inc
scas
fdivrl
cmc
in
and
mov
inc
test
push
push
or
cmp
data16
pop
add
lret
and
loopne
mov
add
add
outsb
test
mov
mov
out
cwtl
push
push
repnz
mov
and
mov
mov
hlt
add
aam
mov
add
add
mov
outsb
mov
test
cs
add
xchg
mov
xchg
jno
ss
sub
add
rcrl
pop
mov
sbb
lcall
add
ss
mov
sbb
mov
je
or
add
xor
pop
mov
mov
fwait
dec
aaa
add
mov
add
nop
add
xchg
lds
add
mov
add
add
push
add
int
inc
add
mov
pop
inc
add
in
fcompl
stc
and
mov
jg
jmp
mov
inc
jle
jnp
adc
pusha
add
xchg
add
sbb
add
lea
add
jecxz
sub
lods
sub
sub
add
jbe
sbb
ljmp
lcall
roll
fwait
jmp
add
sbb
jmp
add
add
rolb
call
movb
sbb
incl
cmp
nop
add
sbb
sbb
adc
add
add
add
lret
rolb
cltd
push
add
add
jp
push
add
test
mov
mov
mov
outsl
and
mov
std
pushf
inc
mov
jbe
and
lock
sub
mov
ja
pop
pop
sbb
movb
add
loop
idivl
add
push
add
or
add
add
pop
aaa
in
pop
outsl
mov
cs
and
mov
mov
push
add
cmp
sub
shll
mov
pop
jbe
pop
mov
pop
out
adc
mov
push
mov
mov
cmp
add
push
fwait
addr16
jl
dec
rolb
xor
dec
stc
lock
bound
mov
add
add
shll
add
add
mov
lods
push
add
push
add
aaa
sbb
addr16
out
iret
and
mov
add
add
fcom
add
mov
add
push
add
add
add
fadds
repnz
push
ja
sbb
test
mov
add
inc
add
add
add
inc
cmp
jne
mov
add
stc
mov
daa
or
add
aaa
mov
and
je
fwait
and
add
mov
loopne
push
lcall
into
xchg
rolb
push
add
xlat
and
sbb
jle
add
xchg
and
jae
dec
ja
xchg
jno
pop
jge
dec
ret
mov
sahf
dec
cli
xor
testb
rolb
dec
rcrl
lahf
sbb
mov
add
js
aad
add
dec
jg
add
jl
add
add
stos
fwait
std
cmp
add
daa
popa
add
mov
cmc
sti
xchg
pop
pop
pop
mov
mov
rcrl
add
add
jp
pop
and
pop
test
pop
insb
inc
add
mov
pop
add
xchg
mov
push
add
ret
cmp
add
adc
popa
dec
outsb
add
mov
push
lea
pop
mov
add
mov
add
or
movsb
add
fs
fsubrs
sbb
add
add
jb
sahf
movsb
add
in
int
add
movb
add
or
test
mov
mov
mov
cmp
push
push
or
add
add
lods
mov
into
lods
mov
add
scas
lods
xchg
pop
sub
add
xchg
add
scas
dec
pop
out
in
imul
push
or
add
add
cli
add
mov
mov
cmp
mov
mov
add
mov
jae
mov
inc
movsl
push
icebp
inc
incl
test
jb
jmp
stos
inc
add
add
mov
enter
sub
sub
data16
loope
fdivrl
add
jns
add
ficoms
and
inc
int3
cmp
out
aam
add
and
add
cmp
add
and
mov
add
cmp
hlt
add
add
jle
add
cmp
dec
adc
lods
test
push
mov
sbb
add
add
jg
testb
jns
add
cs
inc
xlat
push
add
sub
add
loop
js
jle
dec
pop
inc
add
scas
lret
dec
jle
pusha
add
jmp
add
jl
std
or
stos
add
je
adc
or
inc
add
add
push
add
hlt
add
or
inc
mov
add
add
rcr
ret
mov
xor
popa
aad
and
mov
cmp
add
scas
xlat
pop
sbb
jle
add
xor
add
xor
call
nop
add
add
lock
test
xchg
fmull
enter
inc
add
in
add
aad
xchg
xchg
mov
add
cmp
lods
lret
add
test
jnp
test
mov
sti
imul
sbb
push
add
inc
add
add
cmpl
cs
outsl
ds
icebp
xchg
cmp
adc
push
jo
adc
add
pop
scas
stc
pop
movsl
push
roll
add
push
into
pop
pushf
push
add
mov
jae
add
jb
cs
add
add
cs
cmc
push
add
add
jmp
cmpsl
mov
jne
add
push
push
in
cmp
mov
sbb
outsb
das
fisubrl
hlt
add
push
jl
rorl
add
scas
sbb
aaa
vmread
out
dec
xchg
xlat
inc
push
add
rolb
add
lods
pop
xor
in
add
add
add
icebp
int
std
clc
nop
add
add
imul
cmp
jmp
add
mov
lcall
add
mov
inc
add
movb
ja
add
add
add
jbe
xchg
add
scas
lcall
add
jecxz
aad
jnp
dec
rcll
xchg
add
mov
xor
jnp
int3
addb
add
add
xchg
xor
scas
aaa
inc
test
xchg
add
std
jns
inc
push
pop
pop
sbb
icebp
or
add
mov
fidivl
enter
add
adc
mov
lcall
cmp
add
inc
add
cld
inc
hlt
add
add
testb
dec
ljmp
ret
out
xor
paddb
cmp
push
fcmovne
dec
adc
add
sub
jns
pop
inc
add
add
mov
add
fadds
xchg
add
or
je
mov
push
add
sbb
js
xor
sbb
addb
adc
or
add
dec
rolb
lahf
fildl
stc
into
loop
je
mov
jnp
push
dec
mov
pop
lds
add
mov
mov
and
fsubrs
xor
push
add
mov
sti
sahf
mov
imul
xchg
mov
lock
mov
fwait
das
vcvtss2si
xor
push
enter
std
out
dec
arpl
push
scas
in
cmc
and
mov
fnstenv
add
cwtl
add
cmp
adc
clc
push
inc
add
fnstenv
push
xchg
add
jg
sub
pop
lahf
data16
das
cs
add
out
xor
andl
mov
fs
jne
add
sub
in
addr16
push
and
mov
ds
enter
add
mov
cmp
pusha
add
add
mov
lea
test
adc
cmpsl
mov
mov
add
cmp
xchg
lock
dec
xchg
test
ret
jne
addb
cvtps2pi
add
add
cli
push
cwtl
lods
aam
adc
cmc
adc
sub
aas
add
xchg
cmp
mov
cwtl
scas
xchg
add
add
add
add
mov
.byte
cmpsb
add
