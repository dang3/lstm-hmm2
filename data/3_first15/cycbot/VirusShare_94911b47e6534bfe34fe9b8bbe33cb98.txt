ds
loop
ds
in
jecxz
in
out
in
out
in
in
in
in
in
jecxz
in
out
in
loop
in
out
in
loop
in
jmp
loop
mov
loop
and
in
loope
in
in
in
loop
in
in
in
out
in
call
loop
lret
loope
in
call
loop
in
jecxz
in
loop
in
call
loop
std
out
in
call
loop
out
loope
in
jecxz
in
jmp
loop
jnp
loop
sbb
loop
cld
loope
in
in
in
in
in
out
in
jecxz
in
jecxz
in
in
in
out
in
call
loop
or
loop
pop
out
in
out
in
out
in
loop
in
in
in
in
in
loope
in
call
loop
and
loop
add
loop
mov
jecxz
in
in
in
in
in
out
in
in
in
out
in
in
in
out
in
in
in
in
in
in
in
in
in
out
in
out
in
out
in
in
in
out
in
in
in
call
loop
sub
loop
loopne
loop
xor
loop
dec
loop
in
in
in
out
in
jmp
loop
and
in
loope
in
in
in
loop
in
loop
in
jecxz
in
jecxz
in
out
in
jecxz
in
jecxz
in
in
in
loop
in
in
in
out
in
call
loop
ret
jecxz
in
in
in
loop
in
jecxz
in
in
in
jecxz
in
loope
in
out
in
call
loop
test
loop
test
loop
dec
jecxz
in
jecxz
in
in
in
in
in
out
in
out
in
out
in
in
in
in
in
jecxz
in
out
in
call
loop
push
in
in
out
in
call
loop
or
loop
mov
loop
and
loop
mov
call
loop
and
loop
pop
in
in
call
loop
dec
in
in
out
in
jecxz
in
jecxz
in
in
in
loope
in
jmp
loop
test
loop
out
in
loop
in
loop
in
in
in
call
loop
loop
loop
mov
loop
sub
in
out
in
out
in
loope
in
in
in
in
in
in
in
loope
in
in
in
loop
in
jecxz
in
in
in
call
loop
mov
loop
sub
loop
push
out
in
in
in
in
in
jmp
loop
jecxz
loop
and
loop
lret
in
in
in
in
call
loop
push
in
in
loope
in
call
loop
push
out
in
jecxz
in
out
in
jecxz
in
jecxz
in
call
loop
pop
in
in
jecxz
in
call
loop
lahf
in
in
out
in
jmp
loop
call
loop
in
in
in
out
in
jecxz
in
out
in
loope
in
loop
in
out
in
call
loop
jne
loop
add
loop
cmpsl
in
in
out
in
call
loop
push
out
in
out
in
call
loop
push
out
in
loop
in
out
in
in
in
in
in
out
in
call
loop
mov
loop
or
loop
int3
in
in
in
in
in
in
in
in
out
in
in
in
jecxz
in
in
in
call
loop
jmp
loop
sub
loop
inc
jmp
loop
pop
out
in
out
in
in
in
jmp
loop
shl
in
loope
in
call
loop
dec
jecxz
in
out
in
call
loop
loope
loop
jmp
loop
stc
loope
in
loop
in
jecxz
in
out
in
jecxz
in
jecxz
in
jecxz
in
out
in
call
loop
xor
loop
in
in
out
in
in
in
in
in
in
in
out
in
call
loop
mov
in
in
call
loop
xor
loop
jae
loop
out
out
in
out
in
out
in
loope
in
out
in
loop
in
out
in
jmp
loop
sbb
loop
xchg
loop
test
loop
jno
loop
cmp
loop
imul
in
call
loop
and
loop
adc
loope
in
in
in
in
in
out
in
call
loop
push
loop
in
loop
in
jecxz
in
jecxz
in
in
in
in
in
loop
in
jecxz
in
out
in
out
in
call
loop
shl
in
out
in
in
in
loope
in
jecxz
in
out
in
out
in
in
in
out
in
loope
in
jmp
loop
jno
loop
loop
in
loop
in
loop
in
in
in
jmp
loop
push
call
loop
sbb
loop
xor
loop
or
loop
aad
loop
push
out
in
loop
in
in
in
loope
in
out
in
loope
in
loop
in
in
in
in
in
call
loop
aaa
jecxz
in
in
in
call
loop
inc
in
in
loop
in
in
in
out
in
out
in
out
in
loop
in
in
in
in
in
loop
in
out
in
jecxz
in
in
in
in
in
in
in
loop
in
loope
in
in
in
out
in
call
loop
mov
loop
shl
in
loop
in
jecxz
in
out
in
out
in
jecxz
in
out
in
jmp
loop
mov
loop
xchg
loop
in
out
in
jmp
loop
enter
or
loop
shl
loop
cmp
loop
mov
loop
in
call
loop
inc
in
in
out
in
loope
in
loop
in
in
in
out
in
loope
in
loope
in
call
loop
cld
call
loop
dec
in
in
call
loop
lahf
out
in
call
loop
test
loop
jecxz
loop
fnsetpm(287
loop
stos
in
in
call
loop
xlat
loope
in
jecxz
in
in
in
out
in
jmp
loop
loop
push
in
in
in
in
in
in
out
in
call
loop
mov
loop
loop
cmp
loop
and
loop
ss
in
loope
in
loope
in
call
loop
adc
call
loop
mov
call
loop
loopne
loop
jmp
loop
pop
jecxz
in
out
in
out
in
jecxz
in
loope
in
in
in
loope
in
in
in
loope
in
in
in
out
in
out
in
loope
in
loope
in
loope
in
jmp
loop
sub
jmp
loop
mov
loop
insb
out
in
jmp
loop
adc
loop
sub
loop
cmp
loop
movsl
jecxz
in
jecxz
in
out
in
out
in
loop
in
loop
in
out
in
loope
in
in
in
out
in
loop
in
in
in
jmp
loop
fucom
loop
into
jecxz
in
jecxz
in
loope
in
out
in
jecxz
in
loop
in
loop
in
out
in
jmp
loop
cmp
loop
sbb
loop
stc
out
in
jecxz
in
in
in
loop
in
call
loop
xchg
out
in
in
in
in
in
in
in
out
in
out
in
call
loop
xor
loop
inc
call
loop
jnp
loop
dec
loop
in
loop
in
out
in
out
in
jecxz
in
call
loop
pop
in
in
jecxz
in
call
loop
xor
loop
loope
loop
sbb
loop
or
loop
in
call
loop
clc
call
loop
or
loop
out
in
call
loop
fsubp
loop
xchg
out
in
out
in
call
loop
mov
in
in
loop
in
out
in
loope
in
out
in
out
in
out
in
out
in
out
in
in
in
jecxz
in
loop
in
jecxz
in
out
in
loop
in
jecxz
in
loop
in
out
in
jecxz
in
jmp
loop
sub
call
loop
mov
loop
mov
out
in
in
in
in
in
in
in
jmp
loop
in
loop
je
loop
js
loop
and
in
jecxz
in
jmp
loop
out
in
loop
in
jecxz
in
out
in
loop
in
in
in
in
in
jecxz
in
in
in
in
in
in
in
in
in
in
in
out
in
out
in
in
in
jecxz
in
in
in
out
in
out
in
in
in
loop
in
out
in
out
in
out
in
in
in
out
in
out
in
loop
in
loope
in
in
in
loope
in
in
in
in
in
out
in
jecxz
in
in
in
jmp
loop
test
loop
popf
jecxz
in
call
loop
test
loop
xor
loop
jmp
loop
int
loop
mov
loop
cmp
loop
in
out
in
call
loop
aas
loop
in
out
in
loop
in
in
in
in
in
jecxz
in
loop
in
in
in
out
in
out
in
in
in
out
in
out
in
loop
in
in
in
jecxz
in
call
loop
jecxz
loop
js
loop
shl
loop
das
call
loop
add
out
in
jecxz
in
in
in
out
in
jmp
loop
or
loop
dec
out
in
in
in
out
in
out
in
loop
in
loop
in
in
in
jecxz
in
out
in
loope
in
out
in
in
in
loope
in
loope
in
call
loop
mov
loop
lods
call
loop
movsb
in
in
out
in
jecxz
in
loope
in
in
in
call
loop
pop
loope
in
out
in
loop
in
in
in
loope
in
jecxz
in
call
loop
test
loop
pop
in
in
loop
in
loope
in
out
in
out
in
out
in
out
in
call
loop
dec
jmp
loop
loop
ja
loop
inc
out
in
loop
in
in
in
in
in
loope
in
in
in
in
in
in
in
call
loop
inc
call
loop
xchg
out
in
jmp
loop
sbb
call
loop
xor
in
in
jmp
loop
shl
loop
clc
out
in
in
in
out
in
jecxz
in
call
loop
jo
loop
addr16
in
loop
in
jmp
loop
or
loop
imul
in
call
loop
lock
loop
mov
loop
ljmp
in
loop
in
in
in
out
in
out
in
out
in
in
in
out
in
loop
in
jmp
loop
mov
loop
imul
loop
sahf
loop
in
out
in
in
in
loop
in
call
loop
fucom
loop
mov
loop
cmc
jecxz
in
jecxz
in
loope
in
jecxz
in
out
in
out
in
in
in
out
in
loope
in
out
in
in
in
jecxz
in
jmp
loop
imul
loop
and
loop
jmp
call
loop
mov
loop
loop
fsubr
loop
push
loop
das
jmp
loop
mov
loop
add
jmp
loop
cmpsl
in
in
in
in
jecxz
in
call
loop
sbb
loop
outsb
out
in
jecxz
in
loop
in
out
in
call
loop
dec
loop
in
call
loop
leave
loop
in
in
in
out
in
call
loop
shl
loop
xchg
jecxz
in
out
in
out
in
in
in
out
in
out
in
in
in
call
loop
push
in
in
loop
in
out
in
loop
in
out
in
jecxz
in
out
in
jecxz
in
in
in
out
in
out
in
out
in
out
in
in
in
call
loop
mov
loop
xor
loop
xchg
call
loop
in
in
in
in
jmp
loop
arpl
loop
cli
out
in
out
in
out
in
call
loop
js
loop
out
in
out
in
loop
in
out
in
call
loop
stc
call
loop
out
call
loop
jle
loop
dec
loop
in
in
in
jecxz
in
loop
in
jmp
loop
sub
loop
shl
in
loop
in
loope
in
in
in
out
in
in
in
in
in
loop
in
in
in
jecxz
in
call
loop
loop
loop
jae
loop
xlat
in
in
out
in
in
in
in
in
call
loop
loop
in
loope
in
jmp
loop
in
in
jecxz
in
in
in
out
in
call
loop
xchg
loope
in
loop
in
loope
in
jmp
loop
adc
loop
pop
jecxz
in
call
loop
mov
loop
stos
call
loop
push
in
in
call
loop
pop
out
in
out
in
call
loop
inc
out
in
loope
in
loop
in
in
in
call
loop
xchg
in
in
in
in
jecxz
in
loope
in
jecxz
in
call
loop
sbb
loop
es
in
loope
in
out
in
out
in
call
loop
pop
jecxz
in
loope
in
jecxz
in
call
loop
shl
loop
std
call
loop
and
loop
outsl
jecxz
in
call
loop
iret
loope
in
out
in
loop
in
loope
in
jecxz
in
in
in
out
in
jmp
loop
mov
loop
int
loop
cmp
loope
in
jecxz
in
in
in
jecxz
in
call
loop
adc
loop
je
loop
mov
out
in
out
in
in
in
jecxz
in
in
in
out
in
loop
in
in
in
loope
in
out
in
call
loop
add
loop
mov
in
in
loop
in
out
in
out
in
jecxz
in
call
loop
sub
loop
add
loop
add
loop
jns
loop
shl
loop
ljmp
in
in
in
out
in
in
in
loop
in
loop
in
out
in
jecxz
in
loop
in
jmp
loop
sahf
out
in
in
in
out
in
in
in
out
in
loop
in
out
in
out
in
call
loop
xchg
loope
in
call
loop
dec
in
in
call
loop
and
out
in
call
loop
sbb
loop
loopew
in
out
in
call
loop
inc
call
loop
dec
out
in
in
in
call
loop
mov
loop
jbe
loop
loop
in
jmp
loop
and
loop
add
loop
xchg
in
in
call
loop
fsub
loop
jmp
loope
in
in
in
loop
in
jecxz
in
in
in
out
in
out
in
in
in
jecxz
in
jmp
loop
popa
loope
in
loope
in
loop
in
jmp
loop
es
in
call
loop
cltd
in
in
loop
in
out
in
out
in
loope
in
jecxz
in
loope
in
jecxz
in
in
in
out
in
out
in
jmp
loop
arpl
loop
pop
out
in
call
loop
mov
loop
cwtl
out
in
loop
in
loop
in
in
in
out
in
out
in
in
in
in
in
out
in
out
in
out
in
loope
in
loop
in
out
in
jmp
loop
push
in
in
out
in
jecxz
in
call
loop
sub
loop
or
loop
mov
out
in
in
in
in
in
loop
in
in
in
in
in
out
in
jecxz
in
call
loop
inc
out
in
loope
in
out
in
loop
in
loope
in
loop
in
loop
in
call
loop
int3
loop
in
loop
in
jmp
loop
scas
in
in
out
in
call
loop
shl
in
loop
in
in
in
in
in
out
in
in
in
out
in
out
in
in
in
loop
in
call
loop
and
loop
dec
loop
in
jecxz
in
call
loop
aas
out
in
out
in
call
loop
or
loop
mov
jecxz
in
in
in
out
in
in
in
call
loop
cmp
loop
inc
call
loop
shl
loop
lock
in
in
in
out
in
in
in
loope
in
loop
in
in
in
jecxz
in
loop
in
in
in
loop
in
out
in
in
in
loope
in
out
in
jecxz
in
out
in
in
in
out
in
call
loop
insb
jecxz
in
jecxz
in
out
in
jecxz
in
call
loop
aaa
out
in
jecxz
in
in
in
call
loop
add
loop
scas
out
in
loope
in
out
in
call
loop
add
in
in
jmp
loop
hlt
in
in
jecxz
in
call
loop
xor
loop
xchg
out
in
call
loop
shl
loop
test
loop
ret
in
out
in
in
in
loope
in
out
in
in
in
loop
in
in
in
loope
in
in
in
loope
in
loop
in
loop
in
jecxz
in
out
in
out
in
loop
in
in
in
loop
in
call
loop
mov
loop
scas
in
in
loop
in
in
in
jmp
loop
cs
in
in
in
loop
in
in
in
jecxz
in
out
in
jecxz
in
jecxz
in
in
in
out
in
loop
in
loop
in
loop
in
jecxz
in
in
in
in
in
in
in
in
in
in
in
jmp
loop
mov
loop
sahf
call
loop
jmp
loop
sbb
loop
popa
out
in
loop
in
loope
in
call
loop
js
loop
shl
loop
test
loop
insb
out
in
jecxz
in
jecxz
in
out
in
loope
in
in
in
in
in
out
in
out
in
in
in
out
in
loope
in
out
in
out
in
loop
in
loop
in
out
in
loope
in
in
in
loope
in
in
in
jmp
loop
mov
loop
mov
loop
in
jecxz
in
in
in
in
in
out
in
jecxz
in
loop
in
out
in
call
loop
inc
jecxz
in
loop
in
loop
in
out
in
out
in
in
in
loop
in
in
in
out
in
in
in
out
in
loop
in
out
in
out
in
call
loop
in
in
loop
in
jmp
loop
inc
out
in
jecxz
in
in
in
out
in
loope
in
out
in
in
in
out
in
in
in
jecxz
in
out
in
in
in
jmp
loop
or
loop
imul
loop
lock
in
in
in
call
loop
loope
in
loop
in
call
loop
and
loop
test
loop
dec
call
loop
and
loop
or
loop
and
loop
xor
loop
clc
out
in
call
loop
cld
out
in
call
loop
inc
jmp
loop
mov
loop
loopew
in
call
loop
popa
jecxz
in
call
loop
push
call
loop
clc
loop
in
loope
in
in
in
out
in
jecxz
in
jmp
loop
cli
out
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
in
in
out
in
in
in
loope
in
jecxz
in
loop
in
out
in
loope
in
in
in
call
loop
sub
loop
aaa
jecxz
in
out
in
loop
in
in
in
in
in
loop
in
out
in
loop
in
jmp
loop
je
loop
movsb
out
in
out
in
loope
in
in
in
jmp
loop
lcall
in
jmp
loop
cli
call
loop
shl
loop
dec
call
loop
add
loop
xor
loop
test
loop
fsubp
loop
pavgw
in
jecxz
in
jmp
loop
xchg
call
loop
jns
loop
xchg
in
in
call
loop
mov
in
in
call
loop
jge
loop
sbb
loop
in
jecxz
in
call
loop
push
in
in
jecxz
in
loope
in
jecxz
in
loop
in
jecxz
in
in
in
in
in
call
loop
cmp
loop
mul
loop
loope
loop
cmc
call
loop
dec
in
in
in
in
loop
in
out
in
call
loop
leave
loope
in
out
in
out
in
add
add
adc
das
repz
popf
pop
mov
add
lcall
add
incl
call
sti
roll
add
add
repnz
add
in
enter
add
aaa
inc
add
pushf
adc
call
jge
add
iret
pop
push
add
lahf
mov
or
rcll
in
idivl
add
add
add
xchg
icebp
push
add
jp
push
aad
neg
lea
jns
test
jecxz
mov
add
rolb
jg
push
add
pushf
pop
or
jbe
add
add
mov
cmpsl
add
add
xor
js
add
mov
int3
repnz
out
xchg
push
nop
mov
add
fwait
test
dec
pop
push
popf
jo
call
push
cltd
jnp
sbb
pop
movsl
add
add
xchg
popa
add
adc
fmuls
cmpsb
add
in
and
ljmp
ljmp
add
cmp
aam
add
aad
or
repz
xchg
stc
pushf
cltd
xor
dec
add
stos
add
decl
add
add
lea
mov
jbe
push
add
mov
jno
lcall
mov
and
popa
push
mov
sub
push
push
push
push
push
call
push
push
call
test
jne
mov
lea
push
push
push
push
call
push
call
xchg
cld
lea
sub
mov
lock
lea
lock
je
ret
aas
xor
pushl
add
add
sbb
rorl
les
pop
mov
pop
imulb
call
add
jmp
sbb
bound
call
and
fistl
add
sbb
xlat
cmp
movsb
add
xchg
das
jbe
add
add
add
and
dec
movsb
add
add
jne
add
push
add
pushl
lcall
add
add
add
push
add
fadds
addb
add
add
jle
add
add
push
add
add
cmpsb
add
add
test
xlat
insl
add
jb
lcall
mov
sbb
int3
loope
dec
sbb
dec
dec
push
add
mov
mov
add
xchg
mov
push
xor
sub
pop
lret
int
sti
unpcklps
lcall
bound
jmp
call
inc
add
fwait
sub
icebp
pop
mov
add
add
push
add
add
pop
push
lret
inc
add
fisttpl
add
sahf
mov
add
jne
add
add
jns
cltd
cmpsl
add
push
cmp
aaa
cltd
jge
add
mov
lcall
adc
jo
incl
add
in
adc
add
mov
std
addb
mov
pop
add
add
sub
mov
and
incl
add
gs
add
add
add
inc
add
jo
lcall
mov
add
movsb
add
or
add
ds
mov
cmc
mov
or
cmp
out
pop
addb
add
mov
fsts
pushf
xchg
jl
adc
call
jl
jbe
add
fcmovnbe
push
add
mov
add
je
inc
add
je
add
xchg
mov
fldl
jo
pushl
xor
jmp
add
xor
add
inc
add
mov
call
negb
cs
add
jns
add
movb
std
inc
add
cmpsl
add
pop
aas
mov
add
jno
decl
cwtl
test
pop
sub
pushl
test
or
movb
add
cwtl
roll
pop
cli
jae
incl
dec
rolb
push
in
in
in
dec
mov
add
sbb
add
xchg
sti
mov
cld
out
push
imul
ljmp
dec
je
mov
add
loope
add
decl
mov
fwait
sub
jmp
add
push
and
xchg
fdivrl
add
fsubrl
mov
add
stc
in
loop
insl
xor
call
add
addb
outsl
roll
inc
add
adc
pushl
fnstcw
pop
iret
jmp
xchg
lods
lcall
mov
add
das
js
mov
movsb
add
imul
nop
adc
dec
and
jmp
add
add
add
and
xchg
adc
arpl
call
add
mov
mov
cld
les
cltd
push
add
jnp
add
push
add
push
xchg
stos
xor
fistpl
inc
add
data16
fmuls
inc
add
pop
fists
add
sbb
add
add
jl
enter
add
test
mov
lds
jnp
ret
int3
xlat
mov
add
add
adc
jl
rorl
cmp
mov
mov
jnp
das
clc
sub
push
add
mov
jne
inc
add
test
push
add
jecxz
testl
add
incl
add
add
ret
add
add
sahf
out
aam
dec
addl
movsb
add
cmp
iret
loopne
adc
jmp
add
add
ljmp
xor
stc
sbb
js
mov
call
add
xchg
jo
stc
dec
aad
test
pop
xchg
int
jns
mov
imul
add
add
das
mov
pushl
add
std
jnp
push
add
popl
jmp
mov
dec
ret
add
inc
add
push
add
push
add
dec
data16
add
dec
dec
imul
pop
out
mov
dec
mov
shrl
and
push
leave
aam
lcall
add
ss
mov
jmp
in
push
movntq
addb
scas
fs
pop
adc
call
cli
sub
adc
ljmp
add
pop
decb
roll
aad
in
scas
pop
mov
sbb
add
mov
add
iret
cmp
les
xchg
push
add
test
mov
inc
add
push
add
adc
decb
int
add
fisttpl
es
xchg
pop
test
add
bound
incl
ljmp
push
pop
cmp
add
mov
sbb
jmp
add
and
jmp
cmp
bound
lcall
loope
push
mov
lea
xor
loop
dec
mov
add
lret
add
mov
or
movl
push
sbb
add
cmp
add
scas
push
add
aad
add
push
sub
add
xlat
mov
repnz
mov
jl
add
cli
adc
ds
add
push
add
imul
ljmp
mov
pop
cmp
add
xor
decl
sbb
xchg
sbb
sbb
add
dec
mov
insl
leave
and
jns
hlt
repnz
or
add
dec
mov
test
pop
add
xor
ljmp
insb
mov
lds
or
hlt
push
insb
stos
fsubs
add
add
sbb
pop
lods
ljmp
test
fstpl
jbe
sbb
mov
cs
aam
mov
addb
add
xor
call
pop
outsb
mov
fsubs
cmpsl
add
add
add
movsb
add
call
std
fldl
add
insl
dec
lret
ljmp
daa
add
popf
dec
cltd
jae
jmp
add
inc
add
into
xchg
scas
cld
inc
add
int
outsb
lea
add
mov
push
xor
add
and
call
stc
cmpsl
add
add
decl
push
xchg
cmp
inc
add
cmp
add
sub
pop
roll
in
cld
in
and
pushl
push
cs
inc
add
add
cs
movsl
add
add
jno
ljmp
add
pop
jnp
or
test
xor
jg
cltd
mov
add
dec
adc
call
movl
clc
lds
dec
sbb
push
add
fisubrl
enter
add
mov
sti
test
cmp
fadds
add
mov
add
or
inc
add
add
sbb
mov
aas
mov
sub
imul
fsubl
jnp
add
jbe
mov
js
mov
sbb
add
mov
lcall
jnp
add
cmp
sbb
add
jl
les
out
mov
add
jecxz
out
inc
add
roll
add
add
add
fistps
arpl
sti
pop
add
out
and
cld
inc
add
add
movb
add
jl
add
mov
out
adc
dec
stc
push
xor
inc
add
adc
mov
add
sti
push
add
std
or
inc
add
mov
add
mov
ret
add
jecxz
popa
add
rcrl
push
jnp
add
popf
add
inc
add
jo
call
dec
jle
insl
lret
mov
inc
add
mov
add
jno
incl
add
push
aas
sub
xor
add
add
out
mov
add
pop
push
xchg
cld
cmp
add
jno
pushl
js
sbb
lret
jno
decl
pop
cs
and
push
mov
incl
add
cwtl
enter
mov
pushl
int
add
outsl
mul
add
jp
pop
inc
add
ljmp
mov
add
add
push
addl
add
mov
xchg
push
add
push
jno
push
cmp
add
inc
add
mov
pop
dec
lcall
inc
add
or
fiadds
add
bound
cmp
add
insl
addb
je
add
or
movb
add
mov
add
add
and
lcall
jecxz
loope
push
add
mov
pushf
inc
add
out
addb
loope
pop
loope
xchg
int3
inc
add
loope
hlt
dec
scas
jl
fmuls
in
rcll
ljmp
add
add
mov
add
add
or
out
push
mov
add
add
call
lcall
add
enter
stos
mul
add
add
mov
add
push
sub
mov
add
lea
jbe,pn
push
pushf
mov
call
fistpll
int
adc
lcall
dec
pop
call
add
add
out
add
add
fisttpll
push
sti
sbb
add
rorb
add
rcll
add
movsl
add
movl
ds
je
lea
add
add
roll
test
fdiv
roll
or
add
add
ret
add
add
ds
pop
jge
into
sti
addl
add
mov
sub
addb
mov
add
inc
add
adc
test
in
jle
add
call
sbb
and
jg
mov
add
cmpsb
add
clc
out
push
pop
jle
jns
add
mov
scas
outsl
sbb
out
inc
add
fsub
add
fisttps
mov
xor
call
repz
sbb
cmp
shr
cmp
or
add
add
or
jae
incl
add
add
cmpsl
add
nop
cmp
pop
sbb
imul
add
outsl
xor
incl
roll
cmp
popf
notl
inc
add
dec
fsubs
add
loopne
or
test
std
js
mov
icebp
pop
out
cmp
dec
inc
add
xchg
xchg
adc
call
je
mov
or
aad
push
movl
lcall
sbb
in
int
sub
mov
sbb
shl
int3
aas
jecxz
out
ds
in
dec
pop
in
sub
lea
sahf
cld
push
mov
popf
fnstsw
mov
in
lea
mov
push
add
xlat
into
in
xchg
add
dec
test
mov
or
dec
insl
and
jmp
add
leave
push
add
dec
int3
or
push
push
insl
pop
enter
add
rorl
inc
add
push
add
jns
add
and
bound
decl
lods
lea
add
cmp
test
addl
pop
or
add
incb
xlat
test
das
js
add
inc
add
add
and
call
std
cmp
push
add
call
aaa
stos
cltd
test
inc
add
dec
dec
jns
add
add
or
lcall
sbb
add
fistps
add
and
mov
int
and
ljmp
roll
push
shlb
cmc
pop
add
add
add
adc
jmp
lcall
arpl
jmp
add
out
shll
pusha
add
mov
cwtl
push
jae
pushl
add
mov
jae
decl
fdivs
add
add
or
aad
add
mov
sub
dec
pushf
mov
ljmp
add
aam
mov
pop
add
add
xor
call
jecxz
sbb
add
fadds
ds
je
add
ret
add
push
add
pushl
jmp
add
loopne
cltd
nop
clc
imul
fimull
mov
iret
push
add
fs
daa
add
mov
incl
add
add
arpl
incl
jne
mov
mov
and
decl
mov
add
lock
aad
push
push
xchg
mov
mov
cmovb
lcall
hlt
xor
ljmp
out
mov
bound
call
add
clc
lods
cmc
cltd
sbb
fisubl
add
add
cli
aad
add
mov
push
icebp
movl
repnz
rolb
add
add
inc
add
jns
fistpl
pop
movsb
add
inc
add
add
ja
in
in
inc
add
xchg
mov
xor
incl
add
jbe
xchg
cmp
push
sahf
arpl
lcall
lcall
aas
aad
add
inc
add
data16
pop
lea
cwtl
sub
mov
cmp
add
add
movsl
add
ror
jb
aas
cmp
mov
jnp
pop
movsl
add
adc
lcall
sub
sahf
pop
cltd
addb
add
xchg
sbb
cmp
ljmp
dec
fsubr
fwait
sbb
xor
ljmp
add
push
xchg
inc
add
mov
rcrl
jg
inc
add
ret
xor
jmp
add
push
pop
test
ret
addl
add
movsl
add
cwtl
or
xchg
iret
nop
jnp
mov
mov
jmp
add
push
add
sub
push
sub
add
popl
add
cli
cmp
add
jo
pushl
insl
mov
inc
add
ret
add
add
jb
fisttps
add
dec
lods
push
add
repz
add
mov
push
sub
or
popf
mov
inc
add
inc
add
incl
add
add
sub
add
shrb
ret
add
ds
add
cmp
fimuls
add
or
loopne
bound
lcall
add
jnp
push
icebp
fidivs
add
jns
jo
jns
fs
push
rorl
cmp
mov
mov
call
fldenv
add
or
jns
jo
jmp
repnz
add
addb
add
add
jne
add
lods
and
test
xchg
sbb
call
ret
add
sub
nop
mov
lcall
cmp
add
mov
addb
add
stos
sbb
push
jp
add
xchg
cld
shll
add
scas
sub
add
les
inc
add
incl
shrb
frstor
add
loope
dec
push
add
add
and
popf
add
pop
fsubrs
sub
add
aas
scas
int3
push
add
leave
rolb
add
pushl
add
repnz
leave
dec
mov
xlat
jno
ljmp
mov
bound
incl
mov
add
arpl
std
dec
mov
into
push
add
mov
mov
cmp
movsb
add
sbb
push
add
jmp
add
add
out
xlat
test
xor
dec
loop
pop
xor
incl
mov
add
adc
incl
rolb
or
xchg
insb
adc
in
add
mov
sbb
inc
add
sub
movsb
add
add
and
inc
add
add
add
loopne
jnp
pop
mov
add
mov
scas
mov
mov
decl
lds
inc
add
mov
cli
cmc
dec
xor
add
cwtl
push
or
and
call
call
dec
or
mov
add
movsb
add
inc
add
lcall
loope
stc
jbe
addl
add
call
pushl
add
fmul
cmp
bound
lcall
add
jp
add
cmp
add
jae
incl
cld
nop
sub
add
ljmp
incl
and
into
into
push
add
add
xchg
xchg
jp
add
addr16
add
stos
xchg
adc
inc
add
add
fcoms
add
add
lahf
int
mov
add
std
cmp
jno
jmp
inc
add
inc
add
add
cs
cmp
add
xchg
add
jmp
add
sub
lcall
add
push
sub
movsl
add
add
arpl
incl
xchg
fwait
or
nop
lock
add
mov
pop
cmp
fisubrl
add
js
add
mov
add
incl
add
insb
cmp
push
adc
add
call
mov
out
pushf
jl
lods
push
jle
ds
xor
incl
ljmp
shlb
movsl
add
add
jo
lcall
add
arpl
call
outsl
loop
push
mov
jne
mov
and
pushl
les
outsl
in
iret
jo
inc
add
dec
sarl
and
jmp
add
add
add
push
adc
incl
lods
jns
add
add
mov
add
inc
add
cmpsb
add
push
add
jbe
add
out
nop
or
add
fcomps
leave
movsl
add
push
fwait
inc
add
sub
add
add
lock
xchg
push
mov
and
add
lcall
xor
jmp
add
add
add
xor
mov
lods
mov
popf
roll
lret
mov
mov
test
push
add
movsl
add
lcall
sbb
movl
add
jmp
fsub
add
add
pop
ret
add
add
idivb
push
cmc
int
add
jae
incl
pop
add
mov
or
add
xchg
dec
mov
add
add
jg
es
stos
mov
sbb
mov
adc
jmp
xor
jnp
mov
and
decl
pop
push
add
add
ror
push
or
cmp
pop
dec
and
add
pushl
add
out
xor
incl
push
fwait
or
add
xchg
cmp
lcall
add
sbb
ljmp
mov
pushl
add
xchg
cmpsl
add
and
add
pop
and
into
js
xor
sbb
add
fs
mov
add
cwtl
test
mov
adc
loop
ss
mov
fs
pop
aas
xor
decl
lods
adc
lcall
fwait
jne
movl
decl
incl
xchg
movsb
add
add
jne
or
decl
cmp
add
push
add
cmp
fsubrl
add
add
add
dec
sbb
incl
jmp
call
jnp
aaa
cwtl
iret
outsl
in
and
pushl
lcall
jp
add
add
dec
sbb
push
cld
mov
stos
pop
jno
jmp
add
add
pushl
lcall
cs
stos
or
cmpsb
add
add
fcompl
repnz
bound
jmp
add
xor
lcall
add
and
arpl
lcall
jbe
insl
cld
fstpt
sarb
jae
fidivs
push
add
push
add
test
jae
call
fcomps
imul
xor
addb
cmp
in
xchg
push
add
fstpl
adc
adc
mov
add
xchg
dec
sbb
jb
push
jbe
add
cli
cmp
pushl
xchg
or
add
repz
mov
add
insb
mov
add
sbb
add
add
xor
jmp
addb
mov
add
pusha
add
xchg
or
or
mov
test
addb
test
add
jmp
add
dec
push
add
mov
pop
push
icebp
dec
dec
dec
call
push
das
clc
add
dec
add
leave
fsts
dec
mov
test
clc
lock
cwtl
xchg
cmp
in
addl
sub
lock
cmp
jecxz
out
jg
push
repz
sub
leave
mov
jp
add
sub
xor
add
into
push
test
jmp
add
mov
inc
add
mov
arpl
lcall
sbb
add
ljmp
into
lods
and
fnstcw
out
pop
lcall
mov
add
shrl
lods
or
pop
stos
ja
cmp
add
mov
add
fucomp
pop
jg
iret
xor
fistpll
xchg
dec
mov
push
jp
or
rclb
add
and
in
jae
jmp
add
call
ss
jnp
add
push
dec
je
lret
mov
inc
add
fidivs
out
hlt
or
push
stos
out
sub
add
jmp
xchg
pop
mov
xchg
fbstp
clc
enter
add
fisubl
xor
pushl
sub
testl
add
and
rolb
adc
incl
mov
in
addl
inc
add
or
aaa
insl
jp
inc
add
int3
clc
push
roll
call
add
dec
lods
movb
add
mov
add
loopne
jg
add
dec
ret
add
js
add
or
in
cli
sbb
jmp
add
cmpsb
add
daa
add
add
add
add
mov
add
mov
jge
add
jbe
push
mov
add
iret
jmp
and
decl
jmp
jmp
add
rolb
add
add
aam
add
mov
fadd
add
jecxz
mov
lods
pop
outsl
xor
jmp
add
cld
nop
push
add
icebp
dec
and
inc
add
loop
xchg
mov
ljmp
movl
mov
add
push
out
push
add
dec
sbb
pop
dec
stos
int
jbe
add
and
inc
add
add
add
xor
decl
add
inc
add
insb
mov
repnz
jnp
and
call
add
jns
add
sub
fld
add
das
sub
add
xchg
jg
add
xor
xor
ljmp
lret
dec
insb
jmp
dec
inc
add
pop
add
add
add
cltd
std
int
mov
cmp
add
out
inc
add
add
clc
lods
daa
add
aam
jae
pushl
add
test
js
stc
ficoml
xor
mov
dec
adc
jg
add
movsb
add
jmp
incl
lcall
add
mov
lds
call
insl
add
pushl
icebp
outsb
out
int
int
add
pop
stos
xchg
cmp
cmp
ljmp
add
add
add
add
decl
pop
scas
xchg
outsl
stc
pop
mov
xlat
or
add
add
sub
aam
mov
add
fcmovnb
add
xchg
jmp
add
push
mov
add
jns
dec
add
lahf
int3
popa
add
lods
fimull
pushf
out
push
and
or
inc
add
sbb
add
add
ret
add
xor
call
adc
call
sbb
jecxz
sbb
add
adc
incl
mov
inc
add
cmpsb
add
mov
add
loope
addb
add
dec
or
add
jmp
add
add
addb
push
inc
add
jmp
loop
daa
add
inc
add
cwtl
xor
incl
bound
lcall
pushf
test
add
in
mov
xchg
repnz
out
or
add
pushl
mov
loope
cmc
inc
add
mov
add
pushl
or
xor
pop
add
mov
stos
add
sbb
sbb
ljmp
xor
or
inc
add
xchg
imul
add
mov
add
std
xchg
or
jmp
lcall
add
cmpsb
add
mov
xchg
insb
pop
and
out
push
add
rolb
outsl
lock
jmp
fwait
adc
pushl
rcrl
add
add
test
sbb
loop
cmc
je
jo
pushl
mov
into
ret
add
pop
cli
and
cmp
mov
add
ss
movl
sbb
icebp
mov
lods
aaa
pushl
add
pop
addl
cmp
push
adc
rolb
mov
pop
xor
dec
mov
in
test
and
decl
add
mov
add
lds
push
push
test
sti
roll
lods
addl
add
mov
add
add
push
xor
call
add
mov
or
enter
test
lret
scas
inc
add
and
decl
fisubrs
add
mov
or
dec
bound
jmp
js
add
fimuls
addr16
cmc
pusha
add
test
fmuls
or
loopne
add
insb
sbb
data16
sub
lret
mov
jbe
fdivr
pop
daa
add
jmp
add
add
add
mov
xchg
push
mov
jg
add
fisttps
add
pop
call
jmp
adc
mov
dec
pusha
add
js
add
jmp
add
insl
test
inc
add
sub
in
pusha
add
add
ljmp
xor
jmp
xchg
mov
add
jmp
fidivrs
xor
lcall
incl
loopne
clc
push
add
incl
bound
call
jno
incl
mov
add
and
pushl
jo
mov
add
add
push
dec
or
xlat
iret
push
clc
lock
add
pushl
mov
add
mov
add
add
add
decl
push
add
mov
sub
add
jbe
jnp
movb
push
add
push
mov
sub
add
fstpt
add
rolb
sub
add
call
inc
add
in
popf
lods
xchg
pop
stc
pop
sarb
lret
add
inc
add
push
add
jle
in
addl
mov
add
xchg
mov
add
call
lea
add
mov
jmp
dec
lahf
or
add
push
inc
add
add
pushl
add
movl
add
in
nop
jp
add
add
loope
mov
jl
add
add
fcomi
es
inc
add
movl
add
mov
xchg
add
jmp
incl
add
addb
int3
out
pcmpgtb
xlat
xchg
std
fmull
cmc
mov
xchg
repz
xchg
int
add
incl
call
push
add
dec
into
jle
jecxz
xlat
mov
or
int
add
add
mov
call
jnp
sbb
jl
addb
scas
mov
sti
sbb
and
ficoms
mov
movsb
add
push
add
add
jle
add
mov
rolb
addl
ljmp
push
ss
add
mov
lods
mov
cmp
lods
sbb
je
inc
add
ljmp
add
call
mov
add
sarb
pop
scas
add
mov
add
mov
add
ljmp
add
xchg
cmp
test
jbe
add
add
in
into
add
ljmp
mov
icebp
pop
cmp
push
test
mov
fs
test
sbb
lods
lahf
in
shl
and
ljmp
dec
jmp
mull
add
jp
mov
add
addb
xchg
out
sub
add
sub
add
cwtl
popa
add
ficoml
add
lea
ljmp
mov
pushl
lcall
pop
lds
out
xor
lcall
loop
mov
pop
xchg
mov
add
mov
sahf
roll
pop
add
addl
pop
xchg
pop
arpl
jmp
add
adc
or
add
mov
add
mov
jp
into
es
lcall
addb
xchg
mov
ret
add
add
lret
movsb
add
add
nop
cmp
test
mov
add
and
dec
and
incl
mov
inc
add
jmp
stc
scas
jg
inc
add
xor
jmp
add
add
ss
repz
call
add
fsubs
loop
push
add
daa
add
scas
mov
movb
add
add
leave
jp
or
add
add
into
mov
in
cltd
push
cmp
in
cld
stc
lret
clc
in
xchg
pop
lods
mov
dec
mov
jno
incl
add
dec
divb
dec
ja
jnp
add
ljmp
mov
add
xchg
push
xchg
push
dec
nop
pop
mov
add
movl
pop
mov
test
addb
or
dec
pop
in
add
ljmp
repnz
incl
add
add
inc
add
insl
mov
push
mov
add
push
add
aam
test
mov
out
jns
push
add
mov
icebp
mov
scas
jae
pushl
pop
pop
into
pop
cmpsb
add
cmp
add
add
mov
add
incl
lcall
add
push
add
scas
cmp
add
aas
push
mov
push
scas
addl
dec
adc
jmp
add
mov
sub
sub
incl
add
rorb
lret
decl
xchg
mov
bound
cmp
scas
jo
ljmp
push
sbb
add
stos
pop
add
jl
bound
push
fidivs
add
pushl
repnz
fisttpll
add
mov
fiadds
mov
add
insb
pop
xchg
adc
add
test
push
add
mov
add
add
lcall
inc
add
cmp
add
mov
rolb
int3
fcoms
mov
add
mov
arpl
mov
rcr
add
incl
add
mov
rolb
xor
rolb
outsl
daa
add
mov
push
add
xor
dec
enter
pop
mov
add
ljmp
outsl
outsb
into
inc
add
jmp
ljmp
or
add
rcll
add
addb
das
loope
cmp
incl
fwait
push
ja
cmp
or
jnp
jge,pn
daa
add
add
xchg
push
sub
cmpsl
add
jmp
cltd
xor
incl
ds
add
incl
add
mov
mov
hlt
call
ds
cmp
jecxz
arpl
call
shr
xchg
xor
incl
add
sub
jmp
add
and
lcall
push
sti
xchg
cs
add
jecxz
outsl
add
fmul
jbe
int3
test
jae
call
add
push
pop
pop
adc
jmp
scas
stc
stos
movb
jns
mov
fsubrp
pop
clc
inc
add
mov
add
sub
add
cli
in
shll
enter
call
pop
lods
rclb
add
push
add
out
fs
cmpsl
add
push
add
fcomps
sub
add
sbb
popf
jo
jmp
add
lret
icebp
insb
cli
daa
add
add
ret
add
add
icebp
cs
dec
lcall
add
mov
inc
add
ljmp
add
lret
leave
neg
test
add
incl
add
add
data16
loope
scas
addb
stos
int3
int3
mov
mov
jle
add
es
jns
push
imul
fisubrl
cltd
cwtl
xor
jecxz
int
inc
add
push
add
int
dec
shlb
add
addb
shll
ljmp
loopne
out
das
mov
xchg
pushf
xchg
jb
incl
add
mov
sbb
inc
add
test
outsb
and
pushl
std
xlat
in
and
incl
add
mov
repnz
mov
push
mov
inc
add
mov
cs
stos
add
cld
sahf
stos
pop
add
push
jge
loopne
fwait
test
add
add
in
and
adc
jmp
add
stos
jns
xchg
call
mulb
add
into
or
ljmp
add
jmp
add
add
dec
clc
and
add
sbb
in
cs
addl
add
adc
decl
inc
add
pop
jmp
xor
call
pop
sbb
add
mov
mov
add
ficoms
add
pop
add
int
xor
push
ds
ss
ja
cmpsb
add
xchg
arpl
call
cwtl
jge
add
push
xchg
mov
mov
int
add
xor
incl
call
mull
jmp
add
add
outsl
shl
add
xchg
arpl
call
mov
add
ljmp
movsl
add
dec
mov
fisttpl
popf
push
add
cmc
cmp
cwtl
mov
mov
das
add
movsl
add
into
insl
leave
sub
push
add
mov
dec
dec
loope
mov
and
imul
ret
add
push
mov
repnz
movsb
add
ljmp
and
jecxz
xor
or
loope
and
inc
add
add
pushl
sub
inc
add
adc
ljmp
add
call
push
add
mov
xchg
dec
fdivl
sbb
ljmp
add
add
add
add
jbe
add
and
cli
dec
adc
call
jnp
dec
lods
rcl
pop
rorb
mov
mov
add
add
mov
add
xchg
mov
mov
push
in
dec
dec
int3
inc
add
inc
add
jl
add
pop
and
push
aas
mov
fldl
push
push
mov
frstor
add
mov
in
push
xor
call
dec
push
in
pop
mov
roll
add
jmp
mull
stc
add
lcall
pushf
mov
add
mov
add
add
lcall
add
cld
cmp
add
add
add
lock
or
movb
pusha
add
jbe
imul
add
addl
inc
add
in
lods
xchg
fcomip
mov
xchg
push
and
jnp
adc
mov
add
jbe
call
inc
add
jle
add
fdivs
decl
add
inc
add
mov
xchg
dec
nop
mov
movsb
add
ljmp
in
ret
add
sub
stos
dec
mov
push
add
xor
jmp
addl
dec
ss
cmc
mov
add
push
add
test
add
dec
mov
addl
fcomi
shr
push
add
add
jb
pushl
lcall
inc
add
add
call
and
insl
mov
or
add
add
ljmp
je
add
fldl
std
mov
cs
cmp
add
jmp
add
popa
add
addl
sub
cmp
mov
add
mov
cmp
jnp
data16
add
jmp
add
inc
add
add
push
insb
xchg
mov
inc
add
outsb
sub
sar
std
push
add
or
push
add
ret
add
pop
sbb
inc
add
add
repnz
cmp
dec
adc
call
pushl
data16
pop
pop
mov
addl
dec
xchg
cmpsl
add
jmp
repz
popa
add
addb
add
ret
add
sub
jae
ljmp
pusha
add
inc
add
jmp
loopne
cmp
adc
jmp
add
sahf
pop
xor
incl
add
add
lcall
jnp
add
and
ljmp
xor
pushl
xor
decl
dec
adc
incl
add
ds
xchg
fisttps
rolb
add
movsl
add
insb
mov
aas
les
pop
xchg
loope
jne
fidivrl
stos
or
xchg
xlat
jg
add
pop
in
inc
add
ret
add
and
jmp
add
add
pop
int
add
pushl
mov
add
push
cmp
mov
add
sbb
jo
call
mov
add
jnp
lahf
cmp
call
cmpsl
add
jnp
add
add
clc
adc
ljmp
pushf
pop
test
dec
xlat
xlat
popl
imul
sub
imul
out
mov
cld
loop
and
call
mov
add
inc
add
aad
adc
pushl
add
sub
add
sbb
add
ljmp
and
mov
add
inc
add
add
popa
add
add
jmp
xchg
fisttps
add
decl
xor
jle
dec
aam
add
sar
add
jg
aas
jo
call
add
repz
incl
push
add
add
add
xchg
sbb
dec
mov
add
test
jecxz
test
jp
add
mov
iret
dec
ret
add
pop
sub
add
stos
sti
enter
add
dec
mov
push
add
jae
push
rolb
cwtl
cmp
add
jmp
add
lds
push
mov
add
add
movsb
add
lret
test
jl
pop
add
adc
ljmp
scas
mov
fbld
push
mov
add
arpl
jmp
add
rcll
ljmp
testl
xchg
mov
hlt
sub
add
cld
fucompp
pop
push
into
mov
cwtl
mov
add
add
mov
add
and
ds
pushf
add
out
cmpsl
add
add
push
add
addb
add
lret
imul
add
sub
add
mov
sub
mov
add
sahf
or
pop
xchg
or
lock
xchg
dec
push
sub
in
sti
cmpsl
add
xlat
push
add
cmp
mov
sub
add
cmp
lea
enter
or
in
scas
roll
add
jmp
repnz
pop
add
movsl
add
add
add
xor
pusha
add
pop
rcl
sbb
lods
lock
jl
nop
pusha
add
ret
add
call
add
xor
add
icebp
cmc
inc
add
ljmp
stc
add
add
std
les
mov
add
dec
adc
add
in
mov
push
sub
add
mov
mov
mov
add
xchg
push
jmp
mov
sub
int
add
clc
shll
add
ljmp
xor
inc
add
in
std
lods
cmp
dec
cmpsl
add
add
lret
lahf
or
cmp
add
aaa
or
add
das
push
add
add
add
sub
mov
aam
add
add
cwtl
addb
add
or
push
fsubrl
jno
ljmp
cmp
mov
out
adc
decl
and
call
add
into
movb
xor
add
pushl
jns
lods
in
mov
pushl
pushl
mov
add
pop
or
add
xor
add
pop
inc
add
fisttpll
push
mov
dec
mov
sub
outsl
test
sub
sub
sub
shlb
add
mov
sarl
fmull
loopne
les
inc
add
lahf
xchg
cld
sbb
pushf
mov
xchg
push
add
inc
add
xlat
addl
add
jnp
loope
or
xchg
mov
add
repz
mov
test
cmp
addl
add
addb
mov
dec
repnz
add
decl
pop
xor
ljmp
adc
jmp
inc
add
add
ljmp
add
mov
add
sahf
int3
lods
leave
out
push
xor
fildl
add
pop
add
js
dec
cmpsl
add
add
cwtl
fwait
mov
add
cmp
dec
xchg
stos
add
jno
ljmp
in
jecxz
add
pushl
incl
jmp
add
fisubs
pushf
cmpsb
add
add
add
or
add
add
pushl
cld
cli
mov
adc
pushl
lcall
sub
ss
cs
or
mov
add
add
test
add
lods
jecxz
popa
add
jge
or
adc
js
dec
sbb
mov
jle
add
jnp
sbb
add
or
rcl
sub
add
add
add
loope
scas
stos
ficoms
cmpsb
add
scas
out
mov
add
cmpsb
add
add
add
inc
add
sbb
pusha
add
mov
jns
pop
leave
mov
call
mov
add
add
repz
add
mov
and
decl
fisubrs
add
adc
decl
inc
add
mov
repnz
mov
pop
lcall
loop
and
pushl
dec
mov
movb
add
cmpsb
add
call
sbb
je
pop
push
add
pop
lods
clc
push
add
daa
add
add
add
decl
cli
mov
jmp
push
mov
add
mov
add
sbb
icebp
cmp
pop
mov
or
test
pop
and
std
je
sbb
add
xchg
adc
call
lret
movl
fnstenv
out
mov
push
sbb
add
addb
jae
incl
jge
add
add
aas
push
cmpsb
add
add
sbb
and
jb
dec
mov
add
add
outsb
fisttpl
mov
js
add
fwait
dec
fdivs
add
and
decl
hlt
mov
push
adc
lcall
add
xor
out
pop
sub
add
popf
mov
add
add
sub
add
call
add
jp
add
js
enter
add
add
decl
out
and
lcall
adc
ljmp
insb
mov
add
or
dec
xchg
xor
jmp
call
mov
mov
loopne
push
aam
xchg
lret
lods
add
cltd
or
pushl
add
mov
add
pop
mov
data16
int
dec
push
add
cmc
push
xchg
shl
push
add
push
add
jp
dec
xor
out
pop
into
cltd
ja
movsl
add
pop
mul
add
outsl
addl
add
imul
jecxz
jmp
aam
lock
cmp
das
sub
add
xlat
arpl
cmp
incl
adc
push
je
adc
inc
add
add
pusha
add
cmp
xchg
icebp
xchg
adc
dec
push
movb
jg
add
xchg
jg
jae
js
add
cmc
mov
and
cmp
and
jmp
add
add
add
mov
adc
fisttps
inc
add
push
xchg
mov
add
xor
xchg
cmc
adc
jmp
add
xchg
add
or
mov
xor
add
add
sub
incl
sub
add
pop
add
push
and
call
call
xchg
cmp
pushl
jmp
add
out
in
lcall
push
mov
cmp
add
mov
pushl
add
add
mov
pop
inc
add
add
add
and
call
pushl
add
mov
add
cmp
jg
sbb
mov
adc
mov
xor
decl
lahf
jno
cmp
add
mov
imul
call
jns
rolb
mov
add
dec
hlt
inc
add
xor
call
shrl
cmp
incl
les
lahf
xor
pushl
ficomps
add
pop
adc
inc
add
mov
pop
dec
jmp
scas
fwait
lods
mov
and
ljmp
mov
or
cmp
xchg
imul
add
sar
cli
jle
add
popf
sub
jge
add
inc
add
loopne
test
sti
mov
lcall
inc
add
repz
fbld
add
sub
xchg
fbld
pop
jmp
add
or
daa
add
xchg
pop
ja
xchg
data16
in
xchg
sub
mov
add
out
add
mov
add
call
jb
jmp
jmp
roll
gs
mull
add
mov
jge
icebp
test
jno
in
lahf
sbb
add
std
stc
xchg
ret
add
js
loop
xor
add
add
push
lret
dec
repz
mov
or
cltd
scas
xlat
sub
add
or
add
popf
insb
push
add
pop
jmp
add
inc
add
add
add
pushl
dec
rolb
out
lahf
mov
loope
notl
add
add
fcmovbe
xchg
fpatan
fdivr
pop
xchg
mov
call
enter
addb
add
sub
add
lcall
add
add
and
push
jg
xor
jmp
add
add
incl
add
rol
add
aas
imull
hlt
imul
insl
ret
add
add
lahf
fcmovnb
add
pushf
mov
add
sub
add
int3
bound
jmp
call
leave
xchg
mov
in
push
add
adc
decl
push
inc
add
sbb
sbb
addl
decl
adc
test
jmp
push
add
dec
lcall
cli
lea
sub
add
out
cli
testb
call
cvtdq2ps
add
add
add
add
jo
pushl
out
sub
aam
add
or
and
ljmp
jmp
add
jp
aaa
imul
xchg
add
pushl
jmp
add
cld
mov
jo
decl
or
add
xor
push
test
add
addl
xchg
xchg
lret
insl
sahf
shlb
mov
test
mov
dec
dec
clc
lea
add
int
stos
pop
adc
call
es
fidivs
mov
in
dec
pop
add
and
cmc
lods
add
jmp
call
adc
mov
mov
fstp
mov
add
cmpsb
add
add
adc
sub
lcall
add
fldt
inc
add
jge
mov
xchg
lods
aaa
jge
add
add
push
add
cltd
pop
into
shll
rolb
pop
call
add
jge
mov
add
incl
addb
hlt
loope
jecxz
inc
add
dec
fcmovnbe
inc
add
mov
add
lods
ja
add
mov
mov
pop
cmp
add
add
xor
add
ds
sbb
push
lret
mov
incl
ljmp
lcall
add
cmp
jmp
add
sbb
int3
sbb
cmpsb
add
test
das
xchg
insl
ljmp
add
push
add
sbb
add
inc
add
jecxz
dec
sbb
xchg
adc
jle
jnp,pn
add
add
out
fmuls
dec
fwait
jno
jge
add
jge
pop
pop
mov
scas
dec
notl
add
in
and
movl
repnz
mov
or
add
sub
cmc
inc
add
insl
addb
add
decl
xor
ljmp
scas
mov
sbb
add
inc
add
or
add
enter
jp
dec
pop
int
loope
cltd
jg
je
sti
and
xchg
sub
xchg
dec
jle
cwtl
mov
xchg
in
xchg
fsub
add
xchg
mov
and
loop
xchg
add
decl
lcall
imul
add
arpl
dec
xchg
xchg
xor
jmp
add
push
mov
add
sbb
js
sub
pushl
psubusb
daa
add
cmpsb
add
data16
stc
stos
jmp
ret
add
outsl
enter
decl
test
aaa
testb
add
add
add
mov
call
mov
call
pushl
add
push
outsl
imul
fdivl
addl
add
mov
adc
add
add
jmp
add
fcoms
jmp
add
call
int3
inc
add
icebp
mov
fisubrl
add
lahf
ds
sbb
add
add
ljmp
add
mov
add
fwait
lret
jmp
add
fnstsw
fsubs
js
ja
add
add
mov
ljmp
add
fcmovu
jg
push
add
add
int
sub
add
sub
add
jg
add
sbb
cltd
js
add
pop
das
xchg
xchg
inc
add
adc
cmp
stos
fcmovb
add
cmp
add
jle
add
outsl
hlt
outsb
lret
lcall
add
mov
xchg
enter
fisubl
jae
call
decl
cli
roll
add
add
pushl
sub
incl
add
gs
fildll
add
int
fdivl
enter
stos
popa
add
and
mov
sti
pusha
add
test
je
mov
out
lret
cmpsl
add
insl
sub
fdivs
ret
xchg
push
push
lahf
adc
decl
mov
add
add
aas
lods
cmc
cmp
add
mov
scas
ja
jne
cld
xor
push
jae
decl
inc
add
in
movsb
add
call
add
roll
xor
lcall
add
lcall
cmp
call
mov
cmp
inc
add
js
lock
add
add
push
stos
add
adc
fidivs
add
and
decl
push
add
add
push
add
arpl
ljmp
jae
incl
add
in
sbb
inc
add
in
fwait
inc
add
add
xlat
mov
imul
repz
mov
and
call
xchg
cli
es
add
jecxz
pop
inc
add
and
adc
dec
sbb
mov
jle
adc
call
add
mov
lcall
add
aaa
ss
lcall
enter
add
addb
adc
add
add
dec
das
sbb
lret
shrb
inc
add
in
insl
and
pushl
add
pop
mov
sbb
add
sti
imul
sti
dec
dec
out
fcomip
sub
jne
add
out
scas
addl
dec
add
daa
add
push
add
xor
decl
loop
das
mov
ja
scas
cmpsb
add
lods
sub
add
testl
push
clc
mull
add
or
add
and
mov
icebp
xor
inc
add
or
loop
inc
add
fildll
and
call
mov
movsl
add
dec
mov
add
call
inc
add
add
cmp
negb
jg
dec
adc
jmp
fstpt
add
push
sub
add
movb
add
decl
add
shrl
add
mov
dec
addb
lahf
rolb
fisttpll
jo
call
xchg
lcall
out
mov
add
test
add
xchg
data16
test
repz
push
jne,pn
add
adc
addb
ljmp
and
jmp
add
adc
push
repnz
lcall
lcall
jne
fbld
jmp
pop
fidivrl
and
jmp
aas
es
and
std
sub
icebp
movb
push
sub
mov
decl
cmp
fsubrs
xlat
jbe
sub
pop
mov
hlt
cltd
push
dec
jbe
enter
add
or
add
add
lds
cmpsl
add
jp
pop
das
mov
add
mov
xor
in
fdivs
stos
aad
int3
fcmovne
pop
push
adc
ljmp
mov
xchg
push
inc
add
add
incl
fiadds
addb
mov
add
rolb
add
aad
lea
decl
add
pushl
add
add
incl
test
push
xchg
sbb
mov
lcall
in
out
jb
mov
scas
add
sahf
lock
xor
lcall
mov
xor
jmp
push
xchg
insb
fimuls
mov
mov
sub
shll
xchg
xor
roll
add
lock
push
mov
insl
mov
sbb
sbb
mov
loope
inc
add
ret
add
leave
push
add
fimull
add
ret
out
pop
movsl
add
arpl
incl
dec
sub
repnz
sbb
lcall
sbb
int3
jge
xchg
cmpsb
add
shrl
jnp
cli
pop
and
xchg
dec
cmpsb
add
icebp
inc
add
rolb
add
inc
add
inc
add
jl
pop
jae
decl
add
addl
jo
decl
sub
add
cmp
je
mov
add
test
inc
add
lock
xchg
sbb
hlt
int3
dec
repnz
sub
add
push
add
int3
ss
popf
sub
push
mov
ret
add
fstps
cmc
je
xlat
idivl
add
add
popf
push
aad
xchg
fldt
aam
pop
lock
add
js
nop
daa
add
loope
movsl
add
add
arpl
jmp
add
mov
cmp
lret
xchg
hlt
roll
push
add
jmp
add
dec
or
je
mov
das
movl
xor
jmp
add
mov
push
jae
incl
incl
add
inc
add
pop
inc
add
scas
sahf
push
add
hlt
mov
add
mov
xchg
test
jne
xchg
add
adc
decl
inc
add
add
movb
inc
add
add
rolb
add
add
sub
add
or
add
xor
call
rolb
sbb
cmp
ret
add
rcrb
adc
int
mov
add
add
ds
icebp
int
sub
mov
add
icebp
cli
jne
add
and
call
jmp
xchg
ret
add
lcall
add
jb
jmp
roll
xchg
sub
negl
add
clc
mov
mov
sub
push
add
xchg
out
iret
dec
dec
sbb
add
cmp
add
inc
add
fs
cmp
fcmove
loopne
and
ret
add
add
add
jns
roll
loope
mov
pop
or
xchg
stc
imul
adc
dec
addl
scas
cmp
pushf
sub
push
add
outsb
mov
inc
add
adc
call
add
mov
jmp
add
mov
jnp
lods
addb
add
xor
daa
add
or
incl
rorb
push
add
mov
icebp
lea
pusha
add
cld
inc
add
pushf
jno
lcall
lret
cmp
add
add
add
ss
add
inc
add
jmp
lock
and
lret
xchg
ja
add
or
add
popa
add
inc
add
add
js
sbb
sub
das
mov
arpl
ljmp
jg
addb
add
lds
mov
jg
scas
data16
add
xchg
or
xor
jge
add
mov
scas
iret
sub
dec
jo
pushl
testl
outsl
fnsave
add
jmp
out
push
cmp
and
pushl
mov
jecxz
push
push
pop
add
jmp
pop
add
dec
out
pusha
add
repnz
add
add
and
test
mov
ds
add
dec
cld
insl
push
sbb
imul
lahf
and
pushl
mov
out
inc
add
add
addb
popf
std
aam
add
shl
add
lret
cmp
add
rcll
add
add
pushl
dec
addb
add
pusha
add
fcoml
jmp
add
pop
sub
add
sahf
mov
cli
inc
add
mov
popa
add
cmp
repnz
push
jns
sbb
mov
ljmp
sbb
shll
add
popa
add
das
dec
mov
mov
add
mov
pop
addr16
mov
add
dec
pop
clc
mov
adc
decl
sbb
pop
hlt
sar
jg
data16
lcall
and
lcall
je
addb
mov
fsubs
push
jle
add
hlt
mov
add
in
shll
decl
add
add
xlat
lret
mov
fwait
out
and
or
mov
push
mov
leave
lcall
pop
push
add
pop
dec
jl
mov
mov
add
popa
add
je
add
add
jle
push
add
add
mov
nop
push
push
xchg
shr
mov
xchg
mov
push
repnz
pop
js
sub
push
jns
fstl
call
jmp
mov
add
loopne
lcall
pushl
icebp
loope
aas
push
ljmp
sub
aam
add
in
add
incl
and
call
rcl
sub
mov
sub
push
add
repnz
jb
jl
les
push
mov
mov
add
sahf
adc
call
les
cmp
add
add
call
add
xchg
scas
adc
dec
push
add
lea
add
ja
xlat
xor
call
dec
fcomps
in
push
jl
inc
add
inc
add
add
arpl
jmp
dec
mov
insl
or
add
cmp
add
jle
add
cmp
add
add
jmp
pushf
mov
std
imul
or
mov
add
ljmp
sti
add
pushl
scas
into
imul
pop
std
imul
add
push
add
add
pop
aaa
rolb
cmc
out
jg
adc
decl
out
sbb
or
mov
pushf
sub
call
jns
add
cwtl
popa
add
mov
mov
lds
jecxz
dec
das
outsb
add
inc
add
stc
ret
add
add
jecxz
jne
addr16
outsl
xchg
add
inc
add
test
arpl
call
add
mov
add
leave
lods
pop
enter
add
sti
jecxz
sbb
add
add
sub
add
repnz
xchg
fisubs
add
jecxz
jns
mov
add
jecxz
out
outsl
cld
or
push
bound
ljmp
jge
push
cmp
add
add
sbb
add
lods
jbe
mov
out
xchg
or
repz
iret
nop
test
cmp
mov
cwtl
repnz
call
add
addl
loope
lret
jnp
popa
add
sub
xchg
jbe
jp
add
insb
je
add
les
sub
sub
add
jmp
add
mov
rolb
mov
mov
in
addb
add
inc
add
mov
add
jne
int3
loope
int3
mov
fwait
lods
inc
add
out
out
adc
cmp
shr
sti
cmp
add
mov
add
dec
roll
xchg
xlat
popf
jle
xor
out
fmul
add
and
jle
adc
add
dec
mov
add
add
sti
xor
call
add
mov
mov
mov
in
fildll
lods
addl
adc
push
movb
add
add
jo
call
lret
jbe
add
enter
add
push
in
sbb
dec
jp
cmc
pop
and
iret
pop
call
add
jo
jmp
add
mov
or
xchg
sub
add
add
pushl
jo
ficomps
cmc
add
add
xlat
pop
cmp
stc
out
push
add
call
sbb
push
das
shll
add
out
or
add
adc
add
add
ret
add
jbe
sub
movsl
add
and
sti
push
call
insl
add
incl
add
dec
sahf
filds
scas
inc
add
add
add
xchg
add
inc
add
stos
push
push
dec
les
popf
int
add
xchg
stc
xor
enter
in
add
in
jno
aas
into
bound
cld
ljmp
add
push
add
sahf
cltd
fidivs
add
inc
add
mov
add
pop
shl
add
roll
mov
and
fbstp
inc
add
mov
mov
xor
popf
cmp
add
cli
cmp
inc
add
sti
in
insb
daa
add
je
loope
or
add
push
push
out
roll
and
ljmp
push
add
mov
push
cmc
xor
cmp
in
cld
mov
cwtl
inc
add
test
or
push
cmpsb
add
adc
inc
add
add
add
sahf
add
fisttpl
mov
add
xor
lcall
icebp
add
daa
add
push
popf
and
ljmp
lds
or
add
std
js
mov
fnstenv
call
xchg
xlat
mov
fldcw
xor
call
inc
add
mov
add
ljmp
dec
mov
dec
roll
add
xchg
adc
dec
inc
add
addb
pop
pop
imul
in
mov
xor
jns
roll
call
aad
add
mov
int
add
and
mov
push
push
add
cmp
add
cmp
add
dec
inc
add
mov
add
cli
dec
dec
adc
aas
pop
cmp
add
add
jl
pushf
dec
sbb
mov
mov
sub
jno
decl
xchg
add
pushl
add
add
mov
xor
divl
call
cmpsb
add
pop
pop
add
arpl
jmp
add
cld
stos
test
jge
add
lods
cmp
add
jmp
add
ficomps
gs
fstl
incl
add
push
and
aas
std
jo
incl
push
add
loope
add
pushl
test
sub
add
add
add
pop
add
pushl
add
add
ljmp
push
add
jae
incl
cltd
cli
stc
pop
mov
adc
call
pop
add
xchg
dec
pop
xor
add
lcall
xchg
aam
and
ljmp
push
add
inc
add
xchg
dec
mov
call
add
inc
add
xor
push
add
pop
lods
stc
mov
mov
adc
incl
add
jecxz
or
call
lods
sbb
add
sbb
fld
add
add
js
popa
add
and
jmp
and
in
jp
add
add
or
add
xchg
mov
add
lcall
xchg
nop
les
push
je
and
mov
aas
popa
add
int3
out
cmp
mov
lret
ja
xlat
bound
call
add
iret
mov
add
in
mov
xchg
ds
mov
loop
jle
sbb
sub
add
jge
imul
jl
popa
add
pop
cs
add
add
call
jmp
mov
add
incl
add
jmp
mov
out
leave
sbb
addl
add
ds
test
cmp
mov
add
or
add
add
add
mov
adc
decl
adc
call
pushl
pop
pushf
in
imull
ja
lahf
jg
ficoms
add
add
loopne
stc
lret
test
mov
mov
mov
cld
sub
scas
pop
bound
fstpl
xor
ljmp
pushf
or
add
cmp
add
incl
lcall
push
int3
xor
jmp
add
adc
call
add
jmp
add
out
pop
in
fldt
pushl
ret
neg
lahf
int3
sahf
fistpll
in
std
push
add
pop
lds
addl
add
fimuls
test
decl
add
popa
add
adc
imul
int
add
mov
dec
sahf
rolb
sub
addl
adc
jmp
add
in
fbstp
add
call
push
out
or
add
dec
cmp
mov
test
js
test
out
in
xor
pushl
popa
add
js
add
push
add
addl
movsb
add
jae
incl
addl
movb
insb
testl
xchg
sahf
xlat
jmp
rcr
cmp
enter
iret
test
arpl
pushl
dec
stos
dec
dec
insl
outsl
inc
add
loopne
xor
lcall
xchg
movb
or
out
pop
pop
fnstcw
jmp
add
push
push
aas
or
mov
add
sbb
mov
in
lea
lret
xchg
aam
add
ret
add
add
add
adc
mov
add
pusha
add
mov
repnz
loopne
movl
add
decl
jne
mov
addr16
add
add
and
lcall
add
or
scas
adc
arpl
decl
jmp
movl
pop
add
inc
add
out
dec
int3
addl
and
cli
jle
add
lcall
add
jmp
add
gs
cltd
notl
add
ja
add
add
push
aaa
dec
jge
mov
pop
adc
incl
inc
add
add
add
add
decl
stos
cli
push
add
xor
mov
sub
pop
js
roll
out
push
sub
adc
call
dec
and
mov
jbe
add
arpl
jle
movb
or
push
add
lret
pop
dec
aaa
jg
shlb
xor
popa
add
add
ljmp
js
fistps
jg
fists
mov
add
scas
lea
jle
add
push
add
mov
or
add
add
jmp
add
sub
xor
lcall
add
xchg
enter
mov
pop
mov
inc
add
or
add
cmp
mov
aad
add
sahf
push
add
add
scas
cmp
add
je
ss
dec
jbe
add
add
and
pushl
sbb
inc
add
shlb
add
rolb
adc
clc
cmc
add
and
cmp
jnp
add
call
add
shlb
add
sbb
mov
push
ret
dec
je,pn
xchg
push
add
jo
ljmp
popf
xchg
mov
xor
push
mov
das
add
into
jecxz
mov
xchg
repz
add
sub
insl
cmp
addr16
stos
dec
movb
add
jbe
std
and
incl
add
sbb
icebp
ret
add
push
lret
loopne
sbb
add
cmpsl
add
jp
xor
add
nop
mov
add
add
ds
add
out
rol
add
mov
add
jne
out
je
mov
movsl
add
push
add
repnz
add
or
xchg
mov
add
lods
mov
adc
pushl
pop
add
add
out
cmp
ljmp
sbb
add
push
mov
cmp
in
enter
add
sub
add
cmp
mov
add
or
pusha
add
fwait
mov
dec
mov
push
cmp
add
mov
cs
int
add
add
add
fnsave
add
pop
mov
clc
nop
inc
add
mov
add
fsubrl
out
mov
xor
decl
cmp
daa
add
mov
addl
lods
mov
in
into
xchg
ret
add
int
add
jno
call
add
push
repnz
push
mov
adc
incl
add
add
add
loope
mov
add
add
testl
pop
mov
rolb
aaa
pop
push
push
add
pop
and
jmp
add
aam
inc
add
xchg
jne
xchg
inc
add
xchg
in
pop
add
adc
jl
mov
and
push
pop
fldl
mov
fsubrl
jmp
add
add
add
xchg
lock
xchg
push
add
pop
out
movsl
add
mov
dec
incb
add
add
jnp
inc
add
les
sbb
adc
ljmp
repnz
add
add
add
std
mov
add
scas
imul
jmp
add
push
add
mov
je
add
cmpsl
add
xor
jmp
add
int
add
sub
aas
fiadds
mov
xchg
pop
sub
cmp
popf
aad
xchg
movsl
add
fs
add
add
mov
out
outsl
lcall
in
add
pushl
add
jno
jmp
add
pop
xchg
int3
insb
mov
cmp
test
addl
adc
add
incl
add
fidivrl
add
xchg
xor
pushl
add
xchg
push
fmuls
aam
out
pop
mov
les
ss
sarl
out
xchg
add
fimuls
xor
lcall
cltd
ljmp
hlt
pop
in
add
add
add
inc
add
cmp
xchg
xor
jmp
hlt
mov
add
add
add
jmp
add
cs
in
lods
cmp
add
pop
movb
jmp
stos
mov
fldenv
pop
je
jb
ljmp
js
add
scas
jne
mov
jp
or
ja
add
call
add
sbb
sbb
add
insl
addr16
mov
out
fidivrl
jmp
add
aaa
push
fsubr
push
es
data16
add
ret
add
push
movsb
add
sbb
add
lahf
dec
inc
add
icebp
fisubl
add
scas
jbe
into
pop
push
add
dec
xchg
movups
call
hlt
and
jmp
add
dec
imul
js
add
es
add
sub
fisttps
add
cmp
mov
in
stc
fsubrs
and
jmp
adc
ljmp
inc
add
lds
addb
add
add
mov
incl
into
fistpll
cltd
and
int3
jp
add
lock
cmp
add
fs
daa
add
out
insb
sbb
mov
add
add
inc
add
fcomps
jb
incl
add
jb
ljmp
add
movb
add
decl
add
jge
lea
pop
add
scas
jo
jmp
add
add
push
in
roll
scas
das
enter
rolb
add
mov
add
push
add
pop
and
incl
push
cmp
and
mov
les
xchg
mov
add
cltd
fsts
add
add
jmp
sub
add
mov
cmp
add
push
aaa
lea
call
mov
jae
js
add
das
jno
lcall
adc
test
test
std
and
mov
mov
add
xchg
mov
or
mov
movb
adc
add
add
dec
data16
mov
add
dec
and
sub
add
xchg
cmpsb
add
add
incl
add
call
popa
add
jnp
inc
add
pop
jbe
adc
add
in
in
fstpt
fnstenv
decl
dec
inc
add
lea
outsl
mov
cwtl
fsub
add
outsb
in
lock
add
inc
add
icebp
sarb
add
pop
cmpsl
add
add
cld
hlt
adc
stos
test
imul
inc
add
iret
icebp
push
add
aaa
mov
jns
data16
pusha
add
lock
inc
add
adc
sub
jmp
push
ss
mov
ljmp
mov
or
add
test
in
dec
mov
jno
dec
push
out
fdivs
add
cmp
dec
mov
lahf
addr16
call
ffreep
add
xchg
movl
icebp
repz
mov
sub
add
push
adc
scas
addb
add
shrl
outsb
in
fisubl
jl
add
add
rolb
add
or
add
sub
jo
jmp
dec
sti
inc
add
daa
add
push
add
sbb
adc
mov
pop
les
push
add
nop
fwait
dec
call
add
pushl
testb
sub
ljmp
ljmp
add
mov
push
pop
xor
fidivrl
aad
push
mov
icebp
sbb
add
int3
xchg
pop
push
add
push
sub
mov
ljmp
decl
sub
pop
lods
out
mov
cmp
sahf
jns
add
add
incl
add
xchg
stos
mov
xchg
inc
add
sub
cli
adc
jmp
add
xchg
test
insl
stos
hlt
in
add
pushl
stc
out
and
jae
decl
add
add
xor
jmp
add
add
add
dec
out
xor
decl
mov
dec
pop
cmp
fsubs
push
aad
add
add
push
add
aad
addb
add
fsubl
push
adc
incl
jns
add
mov
inc
add
xor
lcall
lcall
adc
call
xor
add
xor
dec
mov
in
mov
xor
jmp
decl
add
add
add
pop
addl
cmp
add
movb
in
enter
cwtl
cmp
add
and
jmp
rolb
cmp
sbb
add
lret
xchg
mov
out
mov
loope
data16
add
clc
loope
or
js
adc
ljmp
fildl
add
inc
add
out
sbb
inc
add
dec
das
cli
jle
add
sbb
cmp
xchg
cmpsb
add
enter
fsubrs
add
dec
sbb
pop
push
inc
add
add
shll
push
popf
stos
push
mov
into
jp
add
sahf
in
pop
ret
add
or
xor
decl
lods
lods
out
add
ljmp
add
cmp
add
enter
add
and
jge
add
cmp
add
rolb
jo
jmp
add
add
cmp
push
and
dec
inc
add
lret
sub
into
popf
mov
push
jne
add
push
add
add
incl
fmull
lods
mov
jge
ret
add
scas
pop
jl
add
loope
sbb
incl
add
sbb
add
sub
adc
pushl
movl
add
pop
jl
push
in
xchg
into
ja
mov
add
add
push
add
movb
out
adc
cmp
xor
jmp
add
add
add
daa
add
xor
jmp
add
bound
in
ds
dec
psubw
cmc
mov
add
add
out
sahf
in
sub
add
mov
stos
das
push
xor
dec
sbb
rcrl
mov
sti
les
stos
out
fsubp
add
repnz
sti
adc
push
add
mov
sbb
add
push
add
int3
sahf
cs
and
push
and
cmp
add
es
into
hlt
mov
add
call
insb
lds
inc
add
aas
sub
push
add
movl
mov
inc
add
add
call
cwtl
xchg
xchg
pop
add
jnp
addb
out
lret
imul
add
add
or
js
add
mov
lret
add
jmp
pop
movl
add
add
pop
mov
or
call
mov
aas
outsl
push
into
rclb
sbb
add
inc
add
loopne
addl
xchg
dec
or
xor
add
out
adc
or
jg
or
pop
pop
pop
push
add
js
adc
incl
sti
push
rolb
push
js
dec
daa
add
add
jo
ljmp
add
mov
jge
imulb
sub
add
fistl
add
xchg
jnp
pop
and
lcall
sbb
dec
ljmp
xchg
das
out
pop
mov
add
dec
ret
inc
add
sub
add
adc
decl
adc
dec
sbb
add
test
outsl
insb
mov
add
push
mov
imul
loope,pt
inc
add
div
mov
lret
decl
xchg
roll
inc
add
push
and
decl
clc
dec
cmp
mov
outsl
addl
pop
push
xor
mov
outsb
mov
cmpsb
add
add
or
add
fisubs
add
adc
fnstsw
out
stos
jle
pop
movsb
add
push
sti
ret
add
inc
add
cmpsb
add
add
or
add
stos
xlat
add
decl
mov
addl
and
incl
mov
sahf
movsl
add
add
rolb
dec
sbb
cli
sbb
pop
push
aam
xor
incl
icebp
push
lock
mov
das
insl
and
lcall
sub
add
add
xor
pushl
call
add
movq
add
insb
add
or
add
je
movl
or
and
mov
add
add
mov
pop
es
fsincos
pop
mov
pushl
add
adc
lcall
rcll
std
out
stos
and
jle
mov
aaa
xor
ljmp
inc
add
pop
movl
add
xor
test
ret
add
push
ret
add
sahf
clc
arpl
call
inc
add
cmpsl
add
and
call
pushl
and
decl
add
xchg
iret
ljmp
pop
inc
add
sub
add
mov
scas
loop
int3
roll
decl
add
shrd
mov
add
add
rolb
mov
add
inc
add
xchg
aam
pop
add
insb
push
add
xlat
ret
dec
rclb
je
xchg
hlt
push
add
cmp
adc
jmp
add
lret
pushl
imul
cmp
add
scas
aas
into
xor
scas
push
add
ss
add
add
lods
push
add
jmp
pushl
ret
add
lcall
mov
cvtps2pi
scas
jecxz
loopne
lret
add
pushl
adc
decl
dec
push
add
xchg
xlat
aas
adc
cld
mov
loopne
adc
lcall
lret
cmp
mov
mov
lret
pushl
add
xor
pushl
pop
clc
inc
add
sub
mov
or
inc
add
mov
xchg
xchg
mov
add
push
add
jle
aam
add
dec
sbb
add
add
add
cli
lock
mov
add
pop
dec
pop
lret
sti
rclb
decl
push
decl
inc
add
add
pop
outsl
mov
add
in
enter
mov
popf
mov
jmp
push
xchg
cli
std
cmc
sub
addl
add
jmp
add
leave
sub
aas
adc
ljmp
fadds
add
outsb
call
ljmp
cmp
pop
sbb
dec
jl
mov
add
call
add
and
fcoml
pushl
jp
xchg
jmp
xor
cmp
rcll
jbe
pop
jle
insb
scas
scas
and
push
cmc
pop
test
add
lcall
push
lea
add
adc
jmp
add
mov
pop
pop
arpl
cld
dec
and
call
add
pusha
add
lcall
mov
call
sbb
in
inc
add
jne
cmp
addl
cld
ja
movl
inc
add
lods
lea
dec
int
xlat
fcmovne
sub
add
cs
add
or
jmp
add
add
repnz
ljmp
add
dec
int3
jmp
das
lods
add
pushl
dec
pop
cmp
add
fbld
outsl
lcall
add
ljmp
mov
daa
add
add
pushl
incl
mov
pop
jp
stos
lock
add
out
cmp
rcll
add
repnz
add
mov
test
inc
add
outsb
test
dec
add
jne
movsb
add
call
inc
add
mov
sub
test
add
rclb
add
add
mov
dec
and
mov
push
add
pusha
add
mov
add
add
and
decl
jne
add
outsl
ss
add
add
lcall
add
call
inc
add
inc
add
push
add
xchg
sbb
sub
data16
addl
in
add
decl
in
or
stos
call
xor
incl
mov
push
and
incl
incl
xchg
push
nop
icebp
cs
or
add
lea
add
adc
jl
push
shrb
stos
nop
lods
roll
inc
add
jmp
jmp
roll
in
cmpsl
add
enter
dec
pushf
jl
scas
jno
pushl
lcall
lock
pop
and
sbb
xor
incl
mov
neg
out
popf
adc
lds
ret
add
roll
add
jbe
call
add
lcall
mov
out
or
out
add
ljmp
add
lds
sub
faddl
jge
aam
add
jmp
add
cmc
dec
mov
add
add
mov
out
push
pop
jecxz
sbb
lea
mov
mov
mov
negb
or
add
add
cmp
in
push
gs
pop
inc
add
adc
call
cmp
add
add
xor
decl
out
lahf
sti
and
arpl
lcall
cmpsl
add
add
in
int
mov
add
add
dec
mov
add
add
cs
inc
add
lods
mov
add
lds
and
mov
cmp
mov
or
jmp
add
adc
inc
add
addb
cmpsb
add
mov
outsb
das
popf
stc
mov
dec
mov
push
add
cs
xchg
xor
jmp
add
stc
xchg
dec
icebp
clc
cmp
sti
jle
add
or
xchg
stos
fistpll
add
cmpsb
add
lea
loopne
lahf
mov
ret
aaa
jp
mov
movsl
add
add
adc
jmp
or
lds
pushf
clc
ja
adc
fdivrs
add
test
and
ljmp
cmp
imul
add
dec
mov
insb
dec
pop
inc
add
lret
aad
or
inc
add
add
mov
cmp
mov
add
inc
add
pop
cmp
cmp
lds
lods
inc
add
push
add
rol
add
push
imul
add
das
mov
leave
mov
cmp
add
sbb
jo
pushl
pusha
add
icebp
lahf
sbb
cmp
add
fcomip
lds
mov
xchg
ljmp
add
ljmp
test
mov
add
fisttps
sub
add
add
add
ds
leave
jno
lcall
addl
mov
add
add
cs
add
in
inc
add
add
mov
add
addl
add
cmp
add
and
push
inc
add
ljmp
add
push
ret
add
add
add
xchg
inc
add
loopne
add
add
sub
add
add
fimuls
loop
test
inc
add
int
mov
add
test
call
cld
cmp
adc
dec
inc
add
add
sbb
add
mov
std
sahf
and
add
add
add
add
out
sbb
jle
sub
add
mov
xchg
inc
add
add
mov
add
jbe
push
add
or
add
jnp
add
pop
push
dec
xchg
and
push
add
cmp
add
imul
incl
arpl
decl
add
or
add
addl
sbb
mov
push
push
add
lods
movsb
add
inc
add
addr16
xor
decl
and
inc
add
cmpsl
add
stos
lds
aaa
dec
lods
mov
ljmp
rolb
std
add
pop
loope
bound
jl
add
push
add
sbb
out
ret
add
add
jmp
add
inc
add
lods
add
ljmp
lods
sbb
imul
mov
add
leave
in
xchg
sbb
add
xchg
scas
jecxz
lds
mov
add
add
xchg
sti
popa
add
adc
xor
sbb
fwait
jns
mov
add
sahf
pop
fdivs
add
scas
adc
lcall
xchg
movb
add
notl
bound
pushl
add
decl
in
and
stos
stc
cs
jge
out
push
mov
and
decl
add
mov
mov
ret
out
sub
push
cmp
jnp
enter
daa
add
decl
out
daa
add
add
add
add
incl
add
aad
add
mov
incl
in
inc
add
fimull
inc
add
add
add
jmp
add
jmp
cmp
icebp
in
icebp
in
mov
adc
lcall
inc
add
iret
jg
add
jmp
add
add
into
rcrb
dec
xchg
xchg
jnp
or
test
adc
pushl
add
adc
call
cmpsl
add
inc
add
mov
add
clc
movb
roll
add
imul
movsb
add
add
mov
add
test
add
mov
add
repnz
popa
add
int3
addb
add
jecxz
addl
push
add
popa
add
pop
mov
add
push
add
jns
add
stos
mov
add
clc
or
imul
xchg
jle
notb
je
add
movl
ss
std
lret
add
lcall
sbb
add
data16
add
inc
add
add
sub
push
mov
nop
jmp
add
add
mov
popf
fistl
in
add
inc
adc
lods
repnz
mov
arpl
nop
jmp
or
add
fcompl
jl
adc
add
nop
jmp
add
out
add
push
mov
xchg
ret
dec
add
add
sbb
jmp
dec
incb
fwait
add
out
fwait
jne
nop
jmp
add
pusha
test
add
addb
cmpsb
add
add
ljmp
icebp
adc
add
dec
add
add
nop
jmp
dec
add
scas
scas
clc
fwait
xor
add
nop
jmp
in
add
add
adc
mov
mov
jbe
add
add
nop
jmp
add
call
add
push
adc
add
nop
jmp
shr
xchg
roll
add
add
mov
mov
add
add
push
movb
add
add
inc
nop
jmp
in
pop
call
add
xor
push
mov
xchg
ret
pop
rolb
jg
inc
in
mov
xchg
ret
repnz
test
and
add
add
int3
push
mov
add
add
or
cmp
xor
push
mov
xchg
ret
scas
add
pop
add
add
stos
add
nop
jmp
add
add
mov
nop
jmp
lcall
add
push
mov
xchg
ret
je
mov
mov
xchg
ret
shrl
pop
and
jmp
repnz
out
imul
nop
jmp
push
add
add
arpl
add
mov
add
into
pop
nop
jmp
dec
add
rol
adc
add
adc
add
incl
push
add
mov
push
mov
xchg
ret
adc
nop
jmp
repnz
add
add
add
mov
nop
jmp
add
testl
push
inc
add
xchg
cmpsl
add
andl
add
add
add
add
and
fdivrs
ss
pop
add
ficoms
add
add
push
add
add
add
or
add
add
xor
add
add
add
add
push
scas
add
add
xchg
sbb
fstps
and
add
arpl
push
roll
repz
addl
test
nop
jmp
add
add
add
lods
add
push
mov
xchg
ret
roll
and
jmp
roll
notl
add
add
nop
jmp
xor
adc
rolb
pop
nop
jmp
add
add
add
movsb
add
add
inc
add
push
mov
xchg
ret
nop
add
nop
jmp
add
add
xchg
add
cmp
push
mov
xchg
ret
mov
rclb
add
add
fcoms
add
lea
rclb
add
and
push
sbb
add
nop
jmp
add
das
mov
nop
jmp
lcall
fwait
mov
nop
jmp
adc
add
mov
nop
jmp
les
add
add
inc
add
add
nop
jmp
add
add
xor
push
mov
xchg
ret
or
mov
add
nop
jmp
dec
mov
stos
add
push
mov
xchg
ret
add
or
push
pop
add
nop
jmp
into
sub
jae
jmp
add
pusha
add
loopne
sub
adc
add
nop
jmp
add
out
inc
add
jbe
nop
jmp
and
push
mov
xor
add
stos
push
mov
xchg
ret
popf
add
add
mov
xchg
ret
xchg
out
add
push
add
pop
movzwl
nop
jmp
xor
add
add
ljmp
roll
add
add
cmp
pop
add
add
add
cmp
add
nop
jmp
push
ror
add
outsb
mov
lahf
add
add
inc
add
xchg
in
add
nop
jmp
shl
dec
lret
xchg
dec
xchg
movl
add
nop
jmp
xor
mov
out
scas
mov
nop
jmp
lret
push
scas
add
jmp
faddl
nop
fs
add
icebp
fiaddl
and
add
and
add
adc
ljmp
nop
jmp
les
add
lret
out
inc
add
mov
nop
jmp
add
out
add
and
nop
jmp
sub
test
jmp
in
out
and
clc
nop
jmp
arpl
add
jp
push
mov
xchg
ret
add
and
decl
adc
add
add
add
add
xor
adc
cli
cmp
add
xchg
push
add
mov
mov
nop
jmp
add
add
sar
into
mov
nop
jmp
faddl
add
mov
jmp
nop
testl
call
nop
jmp
lret
add
xchg
add
mov
jne
nop
jmp
rcrb
mov
nop
jmp
add
jge
out
or
add
add
add
rclb
js
jmp
pusha
fwait
xchg
add
mov
nop
jmp
add
add
add
add
add
pop
add
push
mov
xchg
ret
dec
mov
nop
jmp
lret
or
add
mov
pop
outsb
add
add
jo
cli
push
push
mov
xchg
ret
add
xchg
aas
shr
nop
jmp
add
movsb
dec
xor
mov
jmp
mov
out
adc
jmp
push
add
add
push
mov
xchg
ret
popf
out
cmp
adc
nop
jmp
add
pop
sbb
mov
xchg
ret
call
inc
push
mov
xchg
ret
add
add
add
add
or
mov
or
loopne
jmp
add
sub
xor
nop
jmp
scas
out
mov
jb
nop
jmp
pop
add
loop
mov
sbb
and
add
add
add
sbb
add
decl
nop
jmp
repnz
add
jmp
arpl
add
add
add
xor
in
popf
push
push
mov
xchg
ret
or
add
add
nop
jmp
add
add
add
or
pop
add
je
movsb
add
dec
add
nop
jmp
add
add
add
nop
jmp
fadds
adc
nop
jmp
add
out
add
add
movl
nop
jmp
add
repnz
add
add
nop
jmp
add
mov
add
add
call
mov
nop
jmp
adc
add
clc
mov
nop
jmp
add
add
add
add
dec
add
push
mov
add
add
cwtl
lret
repnz
std
mov
nop
jmp
mov
add
lea
nop
jmp
mov
or
movsb
inc
add
popf
add
xor
decl
leave
nop
jmp
add
lahf
jne
nop
jmp
add
add
push
nop
jmp
repnz
fistps
mov
xchg
ret
mov
mov
nop
jmp
add
add
clc
add
call
nop
jmp
add
mov
jmp
add
add
inc
call
fiadds
incl
add
nop
pusha
add
stc
add
pop
push
mov
mov
add
pop
out
fildl
cmc
add
in
mov
jmp
fcoms
stc
dec
movsl
add
inc
add
lcall
jmp
add
push
adc
ljmp
mov
push
mov
xchg
ret
repnz
jl
and
mov
sub
ret
xchg
add
nop
jmp
mov
add
jnp
xor
nop
jmp
add
rcrb
jmp
dec
fmuls
add
outsb
pusha
nop
jmp
add
mov
mov
lods
push
mov
xchg
ret
loop
fwait
int3
pop
nop
jmp
add
lret
mov
movsb
add
aam
mov
jmp
loop
shr
add
xor
sti
movzwl
nop
jmp
call
xlat
add
add
jns
nop
jmp
add
aad
scas
repnz
std
add
nop
jmp
add
dec
lret
add
push
mov
xchg
ret
clc
popf
push
rolb
jb,pt
nop
jmp
fiadds
xchg
jb
dec
je
nop
jmp
call
mov
adc
jmp
lret
add
ljmp
add
add
jbe
dec
push
mov
xchg
ret
add
add
test
sbb
add
add
ret
add
mov
mov
push
add
add
add
inc
dec
scas
add
ljmp
jmp
add
add
add
test
test
xchg
inc
add
xchg
add
imulb
mov
nop
jmp
add
add
or
jmp
add
add
and
add
popa
add
ja
cmp
nop
jmp
les
add
add
inc
add
mov
push
nop
jmp
dec
add
fimuls
add
nop
jmp
dec
add
xchg
add
jb
jmp
mov
jmp
mov
add
mov
nop
jmp
pop
dec
lcall
cli
nop
jmp
add
adc
cmp
inc
xor
nop
jmp
or
add
hlt
lahf
push
nop
jmp
add
xchg
arpl
adc
push
add
nop
jmp
mov
add
add
ja
inc
add
out
push
add
mov
mov
xchg
ret
mov
mov
nop
jmp
arpl
add
xchg
aad
add
add
add
xchg
inc
add
dec
je
es
add
or
jmp
push
add
add
or
and
nop
jmp
add
imul
nop
jmp
adc
or
lods
mov
nop
jmp
lcall
mov
nop
jmp
in
sub
shr
nop
jmp
add
loop
movsl
add
jg
xor
nop
jmp
add
loopne
hlt
sbb
test
call
add
sub
iret
or
inc
add
add
nop
jmp
clc
roll
add
out
into
and
stc
call
add
push
add
add
call
nop
jmp
rorb
repnz
mov
dec
adc
add
scas
lcall
xor
pushl
add
loop
adc
jmp
add
add
incl
add
stc
jge
nop
jmp
push
repnz
add
not
xor
nop
jmp
lret
add
add
add
add
jnp
nop
jmp
into
add
xchg
add
dec
nop
jmp
add
repnz
add
push
push
nop
jmp
sub
testl
jmp
add
xor
call
push
pushf
pop
push
mov
xchg
ret
in
add
decl
nop
jmp
add
add
call
jle
add
incl
dec
scas
scas
fdivrs
mov
in
aad
add
dec
add
add
add
sbb
add
add
inc
add
aad
pop
nop
jmp
fcoms
add
rolb
dec
test
mov
jmp
add
repnz
les
nop
jmp
add
mov
push
fiadds
unpckhps
add
add
mov
aas
xor
nop
jmp
add
mov
and
fisubl
mov
nop
jmp
add
push
nop
jmp
add
repnz
dec
shll
jns
add
add
add
sub
add
nop
jmp
add
add
rcll
mov
jmp
or
push
push
add
sar
call
nop
jmp
out
dec
inc
call
fwait
inc
add
dec
add
or
rclb
xchg
inc
add
pusha
in
inc
add
icebp
inc
add
xor
incl
push
mov
add
decb
push
loop
xor
add
nop
jmp
pusha
into
faddl
cld
jmp
nop
jmp
dec
add
out
inc
add
pushl
nop
jmp
add
rcrb
cmpl
add
fs
sub
inc
add
jg
push
add
add
add
scas
add
jp
push
mov
xchg
ret
popf
and
push
nop
jmp
testl
add
inc
add
mov
idiv
call
add
mov
nop
jmp
call
xor
nop
jmp
add
pop
add
add
jns
add
nop
jmp
roll
add
test
adc
add
add
pop
xchg
add
adc
xor
nop
jmp
push
mov
shrl
push
nop
jmp
add
mov
fidivs
cmp
mov
xchg
ret
add
aas
adc
add
push
rorl
add
mov
lcall
add
jmp
add
sub
jb
ljmp
push
nop
jmp
add
fmul
push
add
sub
push
mov
xchg
ret
fcoms
add
cmp
add
cld
mov
cmp
stos
nop
jmp
add
clc
inc
rolb
push
or
adc
add
repnz
add
call
nop
jmp
pusha
push
add
add
int3
push
mov
roll
dec
stos
push
mov
mov
fisttpll
test
jmp
in
add
out
mov
add
mov
nop
jmp
add
add
add
data16
nop
jmp
add
add
add
fiadds
inc
add
ljmp
jmp
add
xor
inc
add
push
nop
jmp
and
out
and
and
add
add
aam
inc
add
and
xchg
outsb
test
nop
jmp
add
add
sar
inc
movl
add
nop
jmp
add
loop
inc
add
jl
nop
jmp
xchg
je
testl
stos
nop
jmp
add
fdivs
les
add
nop
jmp
fsubl
add
pop
nop
jmp
out
mov
xchg
add
push
mov
outsb
inc
sub
add
outsl
add
lds
mov
push
push
mov
xchg
ret
jmp
scas
or
test
call
add
rorb
add
aas
call
nop
jmp
push
add
rcl
add
push
add
push
repz
int3
add
add
add
clc
mov
nop
jmp
push
add
nop
jmp
lret
fwait
add
nop
add
outsb
and
mov
xchg
ret
rclb
or
nop
jmp
rolb
push
add
xor
add
or
add
and
out
xchg
nop
jmp
mov
popf
sub
nop
jmp
add
add
fidivrs
test
add
nop
jmp
arpl
rclb
xchg
fiadds
incb
add
icebp
add
std
shl
nop
jmp
lcall
push
push
mov
xchg
ret
add
lcall
mov
nop
jmp
add
add
pop
stos
nop
jmp
xchg
roll
push
add
lock
push
nop
jmp
arpl
mov
add
rorb
sbb
xchg
add
test
add
dec
scas
add
mov
nop
jmp
fwait
popf
add
cltd
push
nop
jmp
add
add
cmpsl
add
lods
push
mov
xchg
ret
push
pop
add
movsl
add
dec
nop
jmp
mov
xor
add
add
push
sub
nop
jmp
add
decl
sub
nop
jmp
aad
scas
les
scas
call
add
add
mov
je
nop
jmp
add
xchg
push
add
add
mov
nop
jmp
add
shl
add
add
adc
ljmp
mov
xchg
ret
add
xchg
sub
notl
add
ror
xchg
addr16
loop
mov
jne
nop
jmp
add
arpl
cmp
pop
cld
call
add
cmp
mov
xchg
ret
add
mov
call
add
fcoml
scas
xchg
std
rep
nop
jmp
add
add
roll
incb
push
nop
jmp
fwait
add
je
add
pop
mov
nop
jmp
add
add
aad
call
push
mov
xchg
ret
dec
or
pop
call
add
add
mov
nop
jmp
add
add
push
fwait
jne
nop
jmp
repnz
mov
mov
xchg
ret
add
and
push
add
sub
jne
nop
jmp
add
sub
call
add
and
ljmp
call
add
push
add
pop
nop
jmp
into
add
fmuls
push
add
lahf
push
nop
jmp
add
and
repnz
addb
mov
nop
jmp
add
add
push
add
mov
xchg
ret
add
xchg
sbb
add
incl
in
add
call
rcll
add
rclb
movsl
inc
add
add
mov
in
call
add
add
rcrl
pop
nop
jmp
add
add
loop
dec
rep
nop
jmp
add
add
out
sbb
call
pusha
nop
jmp
add
add
push
nop
jmp
sarb
inc
repnz
mov
lea
nop
jmp
add
add
add
inc
add
sub
test
out
call
incl
aad
dec
stos
push
mov
xchg
ret
mov
mov
call
nop
jmp
add
mov
nop
jmp
xchg
add
add
ljmp
movsl
xchg
inc
add
add
in
call
call
scas
pop
dec
add
nop
jmp
xchg
add
lcall
jmp
add
xchg
idivl
lods
push
nop
jmp
add
add
dec
add
push
push
call
add
mov
in
decl
jmp
add
fwait
push
add
add
or
nop
jmp
add
adc
jb
incl
add
bnd
add
in
push
nop
jmp
mov
or
and
nop
jmp
xchg
or
fs
nop
jmp
and
xor
inc
add
nop
jmp
rcrb
push
add
sbb
nop
jmp
add
fs
imul
xchg
ret
into
add
rep
nop
jmp
or
rolb
dec
mov
add
rep
nop
jmp
je
add
push
mov
add
fadds
incl
add
jns
lock
mov
nop
jmp
add
add
sbb
or
add
nop
jmp
arpl
push
mov
movl
roll
push
ds
xchg
mov
nop
jmp
add
add
out
push
mov
mov
add
jmp
nop
jmp
add
add
sbb
mov
xchg
ret
add
nop
push
rorl
xor
nop
jmp
add
repnz
add
push
loopne
mov
add
xor
pushl
sbb
jne
nop
jmp
add
jl
dec
cmp
jmp
add
xchg
fsubl
and
jmp
xchg
add
mov
push
mov
xchg
ret
add
xchg
fimuls
in
incl
add
mov
nop
jmp
rolb
xchg
add
xor
nop
jmp
add
add
jg
inc
nop
jmp
add
add
add
nop
data16
in
jmp
pop
mov
push
nop
jmp
add
xchg
add
fmull
mov
in
push
add
add
jnp
add
pop
xchg
test
mov
dec
inc
ret
dec
push
nop
jmp
add
add
stc
je
jp
jne
nop
jmp
add
incb
add
mov
nop
jmp
add
pop
in
in
inc
add
aam
mov
nop
jmp
shlb
xchg
fwait
shll
nop
jmp
add
add
add
fwait
add
nop
jmp
add
add
add
loopne
jae
decl
pop
nop
jmp
add
add
mov
jmp
loop
mov
out
sahf
push
nop
jmp
rolb
scas
add
add
add
mov
nop
jmp
add
cltd
decl
push
mov
xchg
ret
xchg
add
imul
nop
jmp
add
fiadds
popf
add
add
cmpsl
add
and
mov
ret
add
add
nop
jmp
repnz
add
mov
add
adc
mov
push
push
mov
xchg
ret
movsb
add
je
pusha
push
mov
xchg
ret
in
add
add
add
nop
jmp
call
lcall
nop
jmp
add
add
leave
add
nop
jmp
add
rolb
popf
or
and
and
into
into
add
ss
add
nop
jmp
rclb
fdivrs
clc
nop
jmp
stc
faddl
add
add
jmp
nop
jmp
add
cmp
mov
xchg
ret
dec
into
lret
add
les
add
add
ljmp
adc
lcall
add
popa
fs
jmp
add
mov
pop
add
nop
jmp
add
aad
push
push
nop
xchg
pop
pop
nop
jmp
add
shr
dec
dec
aad
push
nop
jmp
add
sub
push
mov
xchg
ret
pop
call
jle
mov
add
add
adc
pop
hlt
and
add
add
push
shr
nop
jmp
add
int3
jne
nop
jmp
add
clc
out
mov
nop
jmp
arpl
or
jbe
fbstp
cwtl
push
add
add
mov
xchg
ret
dec
sub
decl
adc
jmp
add
sbb
or
add
add
sub
add
punpcklbw
incl
xchg
repnz
add
jmp
add
mov
loop
lret
add
add
add
inc
adc
incl
into
loop
add
push
push
mov
xchg
ret
add
faddl
ljmp
add
add
cld
test
nop
jmp
add
add
inc
adc
jmp
rcrb
fiadds
out
add
add
inc
push
mov
xchg
ret
add
add
and
jmp
add
sti
jne
nop
jmp
add
mov
add
nop
jmp
inc
push
movsb
inc
mov
and
push
mov
xchg
ret
xor
xor
nop
jmp
xchg
add
cs
dec
add
xor
add
add
push
mov
xchg
ret
add
stc
dec
ret
push
mov
xchg
ret
add
add
aas
add
nop
jmp
push
fwait
add
add
insb
and
push
mov
xchg
ret
add
nop
jmp
mov
add
nop
push
popa
add
nop
addb
inc
add
add
nop
jmp
add
fadds
faddl
sub
inc
and
jmp
add
add
dec
add
pop
push
mov
xchg
ret
add
add
adc
inc
add
jmp
add
clc
loop
jmp
faddl
aad
movsb
add
daa
add
xor
nop
jmp
mov
add
in
push
enter
add
add
add
dec
add
dec
cmp
jmp
scas
xchg
out
xchg
sbb
test
repz
call
add
add
nop
jmp
add
add
add
nop
jmp
lcall
add
rolb
add
mov
nop
jmp
out
add
add
add
nop
jmp
in
sub
xchg
dec
mov
nop
jmp
fwait
push
into
scas
add
add
cmp
jb
push
mov
xchg
ret
fmuls
pushf
mov
nop
jmp
mov
add
sbb
push
repnz
incl
lcall
call
mov
xchg
ret
loop
add
jl
in
call
incl
add
les
nop
jmp
add
mov
or
incl
rolb
xchg
pop
out
push
nop
jmp
add
mov
add
add
add
nop
jmp
movsb
into
add
mov
adc
jmp
aad
or
shlb
add
or
jmp
add
add
addb
add
nop
jmp
add
add
lods
cmp
nop
jmp
shr
add
mov
add
incl
call
jne
nop
jmp
add
add
fwait
pusha
nop
jmp
mov
add
dec
and
stos
add
nop
jmp
add
add
add
pop
add
decl
rclb
add
arpl
pusha
dec
inc
add
ret
nop
jmp
add
repnz
push
add
add
add
add
and
jmp
nop
jmp
add
popf
fiadds
add
add
nop
jmp
add
je
and
add
add
shr
jmp
or
push
int
push
mov
xchg
ret
scas
add
add
negb
and
fwait
push
xchg
xchg
dec
mov
nop
jmp
xchg
add
in
test
nop
jmp
nop
push
add
and
mov
nop
jmp
les
incb
mov
xchg
ret
push
fwait
pop
repnz
add
adc
call
jmp
fcoml
mov
nop
jmp
add
xchg
cmp
rclb
add
movsb
add
cmp
push
mov
xchg
ret
add
jmp
add
add
fwait
xchg
and
nop
jmp
add
call
je
inc
add
pop
ret
nop
jmp
pop
add
call
seta
incl
xchg
add
aaa
pop
mov
nop
jmp
add
mov
add
add
addb
add
adc
decl
mov
push
nop
jmp
add
push
push
mov
xchg
ret
push
rol
add
pushl
add
mov
add
adc
jmp
add
add
repnz
nop
jmp
push
add
add
add
fisttpl
add
add
add
add
add
mov
add
add
add
add
add
add
mov
and
inc
add
add
ljmp
add
aad
addl
add
add
icebp
call
stc
fiadds
mov
jmp
add
fs
add
pop
cs
nop
jmp
scas
arpl
scas
add
add
nop
jmp
xchg
push
pop
xchg
call
jmp
loop
repnz
lcall
in
incl
add
loop
add
decl
movzwl
nop
jmp
call
sbb
hlt
incl
out
add
testl
mov
sti
incl
inc
add
add
and
nop
jmp
movsb
add
add
inc
add
nop
aaa
sbb
shl
dec
xor
add
rorb
or
stc
add
scas
dec
les
inc
push
mov
xchg
ret
loop
mov
lea
nop
jmp
mov
add
xchg
add
mov
nop
jmp
add
add
insb
inc
insb
insb
nop
jmp
push
roll
add
add
nop
jmp
add
lcall
jmp
xor
out
add
xchg
add
test
call
incl
push
add
adc
lcall
test
jmp
add
or
mov
jmp
scas
add
call
dec
nop
jmp
xchg
lcall
and
out
push
push
mov
xchg
ret
rcl
loop
inc
add
adc
cmpsb
or
add
movl
add
pop
push
nop
jmp
loop
sub
push
mov
xchg
ret
in
clc
or
push
std
add
push
mov
xchg
ret
xchg
dec
mov
add
jmp
xor
into
dec
add
push
add
nop
jmp
fwait
fs
call
cmp
mov
xchg
ret
lcall
imul
nop
jmp
into
popf
add
popf
add
mov
nop
jmp
add
dec
repnz
mov
jmp
add
add
add
add
inc
add
or
jmp
add
nop
add
ret
add
pop
xchg
nop
jmp
xor
add
mov
nop
jmp
add
add
movb
add
mov
xchg
ret
rcr
aas
add
nop
jmp
mov
into
add
add
dec
cmpw
nop
jmp
push
add
add
add
incl
add
decl
call
incl
nop
fwait
fs
lea
nop
jmp
add
dec
push
push
mov
xchg
ret
add
test
mov
nop
jmp
and
adc
mov
xchg
ret
and
pop
les
nop
jmp
popf
add
add
sub
movsb
nop
jmp
je
add
add
add
add
mov
jmp
sub
fs
aam
lds
mov
add
movsb
add
jne
nop
jmp
push
add
int
test
call
pushl
decb
test
dec
repz
out
add
cmc
add
inc
add
inc
and
nop
jmp
mov
add
add
inc
add
xchg
test
movsb
add
incl
call
flds
mov
inc
add
add
cmpsl
add
lock
call
incl
add
add
add
adcb
add
add
inc
add
mov
xchg
ret
add
daa
add
add
nop
jmp
aad
add
pop
mov
nop
jmp
mov
adc
decl
dec
js
add
mov
out
cmp
dec
cmp
jmp
add
in
add
mov
nop
jmp
mov
add
ljmp
jmp
add
add
ficoms
add
pop
push
push
mov
xchg
ret
clc
add
repz
jge
pop
or
jmp
aad
popf
add
out
adc
in
mov
nop
jmp
add
add
add
add
add
imul
inc
push
les
scas
add
mov
jmp
mov
add
mov
dec
std
incl
lcall
dec
cmp
jmp
add
mov
nop
jmp
out
mov
add
or
call
mov
jmp
rolb
scas
pop
jmp
into
mov
test
and
add
add
mov
nop
jmp
into
sub
fwait
out
push
nop
jmp
inc
aad
or
mov
in
add
nop
jmp
inc
clc
add
add
mov
add
add
dec
lods
inc
add
ror
enter
sub
repnz
add
test
jmp
push
and
out
movb
mov
push
mov
xchg
ret
add
dec
ret
nop
jmp
movsb
mov
add
clc
pop
push
mov
xchg
ret
sub
jbe
add
mov
xchg
ret
add
dec
add
add
jmp
add
lcall
aam
inc
dec
mov
dec
add
mov
mov
nop
jmp
dec
pop
fadds
push
add
nop
jmp
add
shrb
mov
mov
nop
jmp
pop
rolb
push
movsb
push
adc
decl
cmpsb
hlt
call
call
xchg
nop
jmp
popf
add
jmp
add
mov
push
mov
xchg
ret
idivl
add
call
add
sub
jmp
or
add
cmp
cwtl
inc
add
dec
push
mov
jmp
add
repnz
add
add
lcall
repnz
fwait
je
nop
jmp
incb
add
add
add
add
incl
rorl
adc
nop
jmp
arpl
add
into
mov
call
nop
jmp
xor
mov
adc
lcall
rolb
mov
nop
jmp
add
sbb
add
incl
add
add
add
add
add
add
add
jmp
add
adc
jmp
imul
inc
add
and
jmp
add
mov
xor
decl
fstl
add
cmp
testl
adc
decl
decl
scas
jnp
mov
xchg
addl
add
xchg
pop
add
add
push
test
dec
test
add
jmp
add
push
add
inc
add
mov
add
scas
dec
sub
call
add
and
push
add
cltd
loop
pop
int
adc
add
mov
clc
pop
movsl
add
aad
add
stos
repz
add
mov
in
test
add
jge
imul
js
add
jnp
cmpsb
add
add
jmp
imull
adc
push
js
xor
fmull
add
aam
add
add
sub
scas
jmp
inc
add
sbb
add
lock
stos
mov
jmp
push
int
mov
lock
lcall
test
lea
add
dec
dec
lahf
and
ljmp
xchg
lock
add
dec
adc
sbb
ds
push
add
cmp
jg
add
add
lcall
cmp
xchg
dec
sub
add
ror
sti
cmp
add
cli
fidivl
add
lds
xchg
push
add
js
add
pop
out
xchg
aam
je
add
ja
jae
inc
add
add
addl
push
add
cmp
add
aad
cmpsl
add
inc
add
jns
aaa
mov
sti
inc
add
xchg
call
add
sbb
sahf
mov
sub
inc
add
call
add
in
sahf
inc
add
dec
mov
pop
jne
repz
add
outsb
fistpl
pushl
add
sbb
lds
jne
cld
jmp
add
mov
addl
mov
jge
push
add
sub
add
or
sub
lcall
add
add
add
add
xor
sbb
add
add
pop
mov
imul
inc
add
lea
fldenv
add
xor
fs
scas
add
addl
add
lds
mov
fisttpll
ds
jb,pn
call
test
push
ficompl
add
xchg
std
mov
rolb
inc
add
mov
ljmp
mov
mov
pop
mov
jbe
xchg
inc
add
inc
add
add
add
add
push
or
roll
add
adc
inc
add
add
js
add
add
addl
dec
push
inc
add
scas
mov
jb
mov
cmpsb
add
add
pop
scas
mov
add
incl
xor
push
or
imul
dec
jnp
add
cmp
add
pushl
call
addl
rcrl
rolb
out
xlat
addl
mov
xor
pushl
incl
cmpsl
add
add
inc
add
gs
add
add
sbb
fs
pushf
xor
arpl
call
add
pop
movsl
add
add
add
cmpsl
add
adc
add
decl
add
add
sbb
pop
mov
ljmp
add
add
add
sub
cmpsb
add
xchg
jno
dec
in
inc
add
icebp
pop
add
lcall
cs
lcall
jmp
add
icebp
xlat
cmpsb
add
xchg
roll
test
rorl
scas
cs
push
push
add
enter
lcall
mov
icebp
repnz
mov
add
stos
data16
ljmp
mov
add
add
mov
incl
sbb
leave
addb
bound
fstpt
dec
push
add
push
add
shrb
cld
pop
add
push
and
cmp
loope
add
xor
jmp
add
addb
add
div
xor
call
add
rolb
sub
mov
add
ss
movzbl
add
shlb
call
sub
add
add
decl
adc
ljmp
mov
add
add
xor
decl
rolb
icebp
loop
popa
add
pop
add
add
insb
sbb
cwtl
stos
paddsw
add
incl
mov
inc
add
sahf
movaps
scas
addb
outsb
ss
decl
pop
in
addb
add
jae
decl
and
inc
add
jg
in
ja
cmp
mov
cltd
xchg
mov
sub
jns
add
push
dec
fcomps
stc
dec
fmul
test
add
add
decl
add
add
jmp
add
mov
movb
dec
fsubl
or
clc
rolb
add
sub
add
add
decl
add
ljmp
add
idiv
or
aam
inc
add
add
dec
gs
xor
incl
popa
add
inc
add
into
lret
jae
lcall
push
adc
sub
daa
add
scas
into
addl
push
mov
push
xor
ljmp
xor
push
call
bound
decl
insb
leave
arpl
jmp
add
jns
xlat
data16
popf
dec
mov
sbb
add
addb
add
mov
in
roll
add
cmp
aam
shrb
cmp
sub
xchg
push
jns
icebp
cltd
mov
outsb
or
jnp
add
add
std
and
jl
xor
decl
cmc
loop
cltd
stos
addb
aas
xchg
rolb
add
mov
ljmp
enter
mov
int
pop
mov
push
add
jl
outsb
jo
in
jmp
xchg
xchg
push
add
icebp
js
push
add
mov
add
pushl
test
or
lock
xchg
mov
mov
jmp
add
cmp
add
ljmp
jno
incl
mov
add
dec
test
dec
imull
cmp
movsl
add
or
xlat
or
push
ss
mov
dec
fs
add
mov
and
call
roll
adc
jnp
inc
add
icebp
cmp
jo
dec
inc
add
and
lea
add
popf
mov
add
outsb
insb
loop
pop
outsl
das
mov
add
roll
add
das
pop
pop
ss
data16
add
xor
jmp
add
pop
jns
add
push
xchg
scas
stos
test
shlb
or
add
std
scas
inc
add
in
movl
add
rorb
adc
decl
fcomi
sub
inc
add
call
pop
xchg
pop
mov
add
lret
xchg
xor
lret
dec
dec
mov
mov
repz
add
cld
or
int3
ja
add
addr16
jle
add
add
add
mov
in
rcl
arpl
decl
in
imul
mull
jnp
add
add
add
cmp
in
cmp
add
out
fcmovbe
jns
aad
aam
loopne
icebp
inc
add
hlt
mov
xchg
cwtl
pop
cltd
pop
loop
xchg
jns
hlt
ret
xchg
and
jmp
jmp
add
add
jae
lcall
add
sub
scas
mov
and
decl
sub
addb
add
fldz
mov
add
mov
fcomps
xchg
ljmp
lret
jp
add
and
mov
imul
add
repz
add
inc
add
rcrl
sbb
pop
fimull
push
add
aas
stos
and
incl
add
popa
add
test
xchg
mov
call
push
add
adc
add
inc
add
mov
jno
jmp
pushl
jmp
cmp
add
jecxz
sub
in
popa
add
dec
and
incl
mov
test
jo
call
xchg
ljmp
out
les
imul
pushl
inc
add
mov
jbe
add
add
add
das
jmp
add
push
add
scas
mov
add
call
add
test
mov
fiadds
add
inc
add
add
pushl
in
cmp
add
test
mov
add
xlat
add
call
lods
addl
push
sbb
test
sahf
sbb
push
ss
rolb
mov
add
mov
add
and
mov
int3
add
jmp
add
adc
pop
call
add
cmpsl
add
push
push
add
cmp
je
iret
lds
xor
incl
inc
add
add
pushl
stos
cld
xor
incl
or
into
jecxz
xor
ljmp
scas
cwtl
and
decl
sbb
jl
jb
ljmp
cmp
add
in
xchg
jbe
push
in
cltd
sub
add
dec
mov
add
ljmp
add
ficompl
stos
push
xchg
mov
mov
and
ljmp
add
pop
cltd
xchg
mov
or
add
loopne
jmp
inc
add
add
out
jbe
add
add
jae
pushl
mov
push
mov
add
decl
lahf
sub
addb
pop
inc
add
mov
js
aam
jmp
add
lret
add
addl
add
add
jbe
hlt
mov
ss
movsl
add
xor
in
sbb
add
add
int3
add
dec
adc
push
xchg
in
push
enter
sub
popf
cmp
add
add
cmp
mov
nop
cmp
cwtl
pushf
sbb
add
mov
jo
call
addl
inc
add
add
add
dec
mov
add
add
decl
inc
add
xchg
out
lock
pushl
mov
mov
add
mov
cs
add
in
repz
or
sbb
add
cmp
mov
push
add
aas
add
and
or
add
adc
add
sub
push
lret
push
add
data16
aas
mov
add
repnz
jbe
add
jo
jmp
ret
add
movsb
add
loope
push
and
fstl
int3
inc
add
jge
add
add
aas
lcall
xor
mov
aad
add
mulb
xrelease
inc
add
add
xchg
mov
call
add
test
jmp
push
sbb
add
int
add
imul
push
add
outsb
imul
add
fimull
mov
add
sbb
xchg
addl
add
add
ja
jg
xor
incl
mov
mov
add
pop
rorl
add
add
add
pushl
pusha
add
push
lock
jecxz
jno
call
jb
call
add
addb
adc
call
dec
rolb
dec
or
jno
incl
add
push
movsb
add
add
mov
mov
jl
add
loope
lock
add
rolb
add
lcall
stos
aam
or
adc
pushl
pop
xlat
jne
cmpsl
add
addl
loop
stos
pop
stos
mov
pop
in
les
decl
movb
add
add
add
add
adc
cmp
push
scas
scas
addb
add
incl
or
incl
add
lret
pop
out
fadd
add
mov
movb
add
loopne
mov
add
push
out
lahf
aas
xchg
repz
pop
jl
scas
imul
stos
int
outsl
cli
ss
mov
inc
add
movb
addl
movl
add
adc
lcall
jmp
add
adc
mov
inc
add
jns
add
add
decl
jo
decl
fwait
dec
mov
pop
sub
sti
pop
daa
add
mov
dec
add
add
or
sbb
mov
push
push
add
mov
add
ss
test
call
add
fimull
mov
pop
cmp
xchg
das
mov
mov
add
add
or
add
cli
jle
xchg
test
testb
add
xchg
jnp
add
mov
insb
ljmp
rcrl
add
sbb
jns
aas
push
add
lods
mov
cmp
dec
test
jbe
add
fidivl
cli
mov
add
add
mov
enter
jle
add
and
jmp
ljmp
add
pushl
lcall
add
jge
je
add
add
mov
mov
call
stc
sub
inc
add
fistl
jbe
add
call
aas
addl
cmp
or
add
mov
pop
xor
add
aam
and
add
call
pop
cmpsl
add
push
addl
ds
in
enter
push
jne
rolb
push
sbb
mov
add
jl
push
push
inc
add
out
add
xlat
mov
sbb
dec
nop
jl
lods
add
and
test
add
incl
call
repnz
pop
xlat
fstpl
call
roll
add
hlt
add
ljmp
add
and
pushl
lods
sub
movb
jp
out
dec
or
push
add
test
js
sbb
sbb
ds
add
fwait
mov
or
cmp
push
inc
add
es
mov
movsb
add
jbe
pop
jno
call
cwtl
les
data16
pop
push
sti
mov
jo,pn
ljmp
dec
mov
int
pop
mov
mov
jnp
add
add
add
repz
pop
dec
fmuls
mov
dec
mov
out
ret
add
cwtl
mov
sub
popa
add
rolb
add
dec
leave
mov
loopne
lods
mov
add
les
push
xchg
addb
scas
xchg
jecxz
iret
sbb
mov
add
cmpsb
add
add
add
jnp
aaa
sub
es
add
xchg
imull
sbb
add
aad
rolb
add
mov
add
mov
cs
insl
addl
add
call
cmpsl
add
add
decl
sbb
dec
xor
call
jns
pop
dec
sahf
movsb
add
notb
push
cld
cmp
inc
add
add
loop
jmp
or
cmp
jmp
in
ss
add
in
cli
dec
inc
add
mov
push
and
lcall
repz
xchg
outsl
xor
incl
jo
jmp
dec
stos
cltd
stc
add
add
jnp
xchg
das
jg
cmp
mov
int3
imul
push
and
and
jmp
add
add
dec
addb
add
add
call
ss
and
cmp
adc
pushl
insl
sti
pop
int
add
out
mov
jmp
add
pop
xchg
mov
addb
add
jp
rolb
add
je
addb
add
jno
call
data16
add
cmp
outsb
pop
jg
nop
pop
insl
add
insb
mov
dec
cwtl
cmp
repnz
add
add
or
mov
arpl
jmp
add
stc
add
cmp
jb
call
add
xor
incl
add
ret
std
stos
out
addb
add
out
push
cmpsb
add
add
and
lods
fnstcw
or
fld
add
inc
add
add
jns
lds
dec
mov
jbe
mov
pop
addb
xchg
push
negl
loop
std
addl
imull
decl
jae
pushl
add
pushf
mov
test
rolb
and
inc
add
cld
pop
add
xchg
pop
and
cmp
or
decl
jae
call
cmp
outsb
xor
lcall
lock
adc
incl
movsb
add
push
add
pusha
add
xchg
fisubl
add
jg
add
add
pushl
decl
push
stos
mov
mov
mov
adc
ljmp
jno
decl
mov
ds
stos
jb
pushl
add
add
inc
add
clc
pop
idivb
scas
push
lret
add
xor
and
lds
or
add
popa
add
add
jns
dec
roll
xchg
sbb
add
and
jmp
add
add
jb
pushl
push
add
cwtl
and
jle
sub
fcompl
fistps
cli
data16
inc
add
test
inc
add
jno
incl
fdivl
decl
ljmp
add
addl
add
add
inc
add
push
add
es
add
xchg
xchg
loope
dec
inc
add
ret
add
decl
jecxz
aam
in
pop
lea
mov
xchg
ret
dec
stc
cmp
add
out
and
call
iret
lahf
xor
cmp
add
mov
xchg
dec
sub
mov
enter
add
pop
push
add
incl
add
inc
add
sbb
mov
jge
rolb
add
add
mov
push
js
imul
repz
add
jno
push
in
xlat
cmp
jecxz
cmpsb
add
cwtl
nop
clc
jl
add
add
inc
add
add
js
add
sahf
add
decl
or
aaa
data16
add
movb
xchg
lds
and
fisubs
incl
aad
jne
pop
mov
shlb
scas
test
mov
adc
add
cmpsl
add
addl
add
add
nop
dec
jb
pushl
inc
add
test
mov
sub
add
adc
frstor
frstor
push
aam
xchg
add
jp
addl
mov
pop
add
and
push
cmp
addl
jb
incl
add
mov
jl
pop
ret
sbb
outsl
mov
decl
or
add
or
ja
pop
inc
add
mov
add
xchg
inc
add
dec
rolb
add
xchg
bound
push
jnp
push
test
add
mov
addl
add
add
lcall
dec
ss
xor
add
mov
add
lahf
movl
jmp
dec
leave
pop
cmp
add
add
jle
add
jb
lcall
or
push
icebp
icebp
test
add
add
lcall
rcrb
mov
push
and
incl
movsl
add
incl
add
push
into
lods
mov
addl
lock
xchg
lret
xor
sbb
inc
add
lcall
mov
loop
add
pop
bound
ljmp
pop
push
add
popf
add
call
out
divl
decl
adc
call
decl
add
jp
enter
icebp
push
jmp
decl
add
add
mov
add
int
xchg
arpl
call
add
add
sub
cs
add
mov
add
lods
mov
sbb
pop
pop
mov
jg
add
add
cmp
xchg
insb
movsb
add
jb
incl
add
adc
inc
add
add
idiv
inc
add
aas
xchg
les
push
int3
dec
xchg
fiaddl
add
loope
xor
jmp
add
lcall
addr16
roll
mulb
add
sbb
jge
add
arpl
call
leave
pushf
jae
lcall
add
roll
add
rdpmc
add
cmp
add
push
test
cltd
xor
inc
add
mov
pandn
add
mov
js
inc
add
mov
jge
cmp
xchg
adc
mov
mov
outsl
xchg
fwait
mov
jb
pushl
xor
call
adc
jmp
add
add
mov
in
js
jp
movsl
add
lods
loope
insl
pop
movl
pop
mov
decl
add
dec
fwait
rolb
and
incl
add
jo
ljmp
mov
add
hlt
repnz
lods
add
fldl
fisttpl
in
sub
add
mov
addb
stc
in
sbb
add
add
jmp
add
push
add
cmpsl
add
add
jae
jmp
xor
cmp
add
cmpsl
add
nop
mov
add
jbe
add
stc
imul
push
add
push
add
jno
call
test
add
dec
jl
je
fcmovnbe
dec
cmpsb
add
inc
add
ret
sub
add
inc
add
aas
mov
rolb
pushl
cld
add
inc
add
addb
add
add
jnp
jo
incl
and
decl
scas
xchg
push
bound
lcall
xor
pushl
and
fstpl
add
mov
add
not
jmp
addr16
cmp
add
jmp
add
stos
sub
cmp
dec
add
addl
adc
jmp
or
add
inc
add
loope
ja
fbstp
movsl
add
add
out
cwtl
dec
loopne
cmpsl
add
lea
add
mov
dec
mov
add
sub
int3
inc
add
and
out
addl
test
sarl
mov
outsl
mov
mov
add
push
push
in
jne
dec
pop
js
add
pop
push
mov
loope
adc
jmp
mov
and
ljmp
and
call
mov
lahf
xchg
inc
add
aas
out
cmp
ljmp
lds
data16
cmp
inc
add
ja
les
pusha
add
jno
pushl
bound
ljmp
dec
js
jge
rolb
cld
mov
add
add
add
out
jb
incl
aas
les
loop
push
add
scas
sbb
push
shl
add
push
add
mov
leave
or
cli
mov
test
jmp
add
cmp
jmp
mov
incl
fdiv
pop
inc
add
sbb
mov
add
fdivs
jnp
add
pop
test
out
or
iret
leave
adc
jg
add
int3
xchg
and
incl
mov
add
mov
inc
add
in
add
decl
or
dec
cmpsl
add
mov
sbb
add
xchg
and
jmp
add
mov
fnstenv
add
adc
decl
mov
jmp
outsb
xchg
pcmpeqb
leave
inc
add
out
xor
sti
shl
push
movsb
add
repz
ret
mov
xlat
and
mov
decl
jmp
add
mov
or
jbe
jp
sub
add
testb
or
movsl
add
add
lods
popa
add
push
fldcw
xchg
stc
or
add
add
test
test
add
add
mov
jl
in
mov
mov
mov
add
jns
add
add
pop
ds
ret
add
add
in
pop
inc
add
ret
add
add
xor
call
ret
add
add
jno
call
push
mov
repnz
ljmp
out
ja
add
add
neg
mov
call
or
jne
popf
int3
xchg
and
call
add
out
aas
aad
fimuls
daa
add
add
sbb
movsl
add
push
add
pop
inc
add
adc
fists
push
pusha
add
fsubr
add
ljmp
jmp
add
jmp
add
jecxz
cmp
add
jmp
incl
fcoms
clc
mov
fildll
pop
and
lcall
cs
test
and
pushl
fldl
stos
test
push
dec
iret
repnz
jmp
add
add
and
call
std
outsb
bound
call
add
sbb
movd
mov
add
xchg
addl
add
lock
push
add
xor
loopne
rcl
cmp
add
cmpsl
add
xchg
roll
add
xchg
mov
ljmp
movb
mov
ret
add
lcall
mov
les
or
add
incl
decl
inc
add
inc
add
pusha
add
mov
add
pop
add
mov
push
jle
add
add
and
and
add
call
pop
fidivrl
add
and
pushl
add
and
call
pushl
pushl
add
sbb
decb
lret
and
ljmp
out
xchg
add
popf
or
dec
pushf
bound
incl
movb
pop
add
jnp
inc
add
or
ljmp
into
addb
add
clc
and
pushl
call
add
mov
add
mov
decl
in
dec
bound
jmp
jl
add
les
push
mov
pop
addb
or
add
add
jo
decl
jb
jmp
add
ficompl
roll
add
mov
add
add
ljmp
dec
add
jl
add
add
jge
bound
dec
addb
mov
into
ss
test
mov
mov
push
add
push
add
ljmp
lcall
jmp
add
pop
maskmovq
notl
dec
imul
or
add
add
push
add
fwait
inc
add
add
decl
mov
and
decl
add
add
pop
fistl
add
std
popf
cmpsl
add
add
dec
mov
add
roll
dec
outsl
lods
add
jge
les
adc
incl
add
cmp
xchg
inc
add
add
jb
jmp
fldt
mov
add
sbb
sbb
add
mov
cli
mov
cmovb
ljmp
or
lcall
adc
incl
push
add
call
jns
fbld
or
fidivrs
add
cmp
or
cli
mov
mov
call
add
loop
mov
or
add
and
call
hlt
fisubl
add
outsl
mov
ljmp
inc
add
dec
lock
lcall
ret
push
add
fmuls
pop
addr16
lods
sub
xor
call
lcall
loop
lret
movsl
add
add
inc
add
test
shlb
dec
push
add
jbe
and
mov
add
out
pop
jp
pusha
add
fists
push
call
rorl
decl
mov
add
ds
sbb
inc
add
ljmp
hlt
movb
pop
imul
stos
out
push
pcmpgtb
stos
jl
add
xchg
jp
ja
add
jp
xchg
add
and
jmp
add
add
xchg
and
in
jmp
rolb
sub
add
push
add
cmp
push
add
sub
add
mov
push
add
pushl
cwtl
mov
call
add
jno
pushl
shl
add
add
pop
add
sub
jl
popa
add
xor
ljmp
mov
call
mov
sub
out
outsb
xchg
fdivp
fwait
mov
adc
ljmp
cmc
ficoms
add
add
mov
mov
rolb
shll
add
out
loopne
in
out
xor
ljmp
adc
stc
xor
mov
movl
outsb
aam
add
in
mov
mov
outsl
xor
incl
call
or
ret
add
add
jnp
add
in
icebp
pop
addb
add
add
or
rolb
add
pop
and
ljmp
sub
inc
add
add
pop
sti
sar
fwait
and
lcall
add
arpl
inc
add
add
fsts
add
add
fmuls
mov
rorl
cmp
mov
mov
popf
inc
add
jmp
mov
add
call
test
mov
popf
mov
add
lret
xor
incl
decl
jae
ljmp
jge
add
inc
add
cmp
cli
lcall
cmp
divl
add
inc
add
cmp
sub
adc
add
std
mov
bt
pop
push
out
adc
add
add
dec
add
mov
dec
sahf
xchg
lods
lea
sub
add
int
mov
jle
outsb
rolb
insl
mul
add
add
mov
aam
mov
jg
push
xchg
sbb
pop
ret
add
mov
add
inc
add
add
add
adc
jmp
call
js
adc
add
dec
sub
add
in
out
dec
cmp
lcall
mov
push
int
cli
je
js
add
inc
add
iret
ss
jl
icebp
push
pop
mov
add
into
ljmp
add
add
inc
add
add
add
add
add
out
out
push
loop
jg
aam
add
lods
pop
popa
add
daa
add
dec
mov
addl
add
ret
add
add
jl
mov
add
or
fists
pop
stc
mov
add
xchg
test
pop
cmp
test
mov
mov
ljmp
jne
add
jb
ljmp
add
shl
addl
add
and
rcrb
push
lods
inc
add
ss
add
add
and
pushl
jl
add
add
push
sbb
xor
ljmp
push
push
lds
nop
into
ret
add
popf
bound
jmp
add
flds
jnp
add
add
mov
add
or
in
ret
icebp
fsubrs
hlt
mov
mov
sbb
add
test
mov
pop
jo
ljmp
jl
addl
pop
push
cmp
add
test
push
stos
movl
jmp
bound
lcall
addl
add
pop
and
lcall
xor
push
ficompl
cmp
inc
add
movl
jl
add
call
call
sbb
add
add
aaa
adc
inc
add
add
scas
xchg
jb
incl
add
dec
or
pushl
outsl
jp
jmp
add
or
into
mov
aad
xor
add
push
icebp
and
pushl
jge
add
add
movsl
add
add
call
add
add
call
jg
add
roll
mov
mov
sbb
incl
jmp
xor
cmp
add
ficoml
call
adc
pushl
jmp
sbb
out
inc
add
mov
pop
mov
dec
jge
sbb
mov
cwtl
and
inc
add
xchg
das
mov
add
inc
add
xor
fcomp
sbb
pushf
lods
repnz
popa
add
cli
cltd
scas
ret
add
lcall
cmp
mov
movsl
add
incl
std
sub
add
jecxz
inc
add
mov
add
sti
mov
inc
add
call
add
and
mov
xchg
pushf
pop
dec
mov
clc
pop
mov
lea
add
enter
mov
aas
jmp
add
cmp
adc
jl
add
xor
jmp
add
or
add
add
add
cltd
fwait
loop
mov
and
sbb
jmp
add
add
add
addb
add
aad
int
push
add
fsubl
push
arpl
decl
data16
add
or
push
fistpll
mov
add
pop
pop
add
call
add
jmp
sar
std
mov
xor
dec
xchg
dec
stos
mov
push
jae
lcall
sbb
add
cmp
mov
add
add
xchg
ret
add
dec
lea
add
decl
sbb
xchg
inc
add
mov
add
std
adc
pushl
add
dec
and
lcall
add
scas
out
mov
rcll
add
movb
in
fsubs
add
cmp
pop
add
cmp
mov
jno
pushl
xor
jle
xor
cmp
addb
add
icebp
adc
dec
pop
nop
lock
xchg
push
data16
add
add
mov
ds
cmp
add
lock
cmp
in
inc
add
pop
inc
add
jbe
add
pushl
movsb
add
sbb
add
add
pop
xor
incl
mov
mov
add
xchg
mov
lcall
add
incl
pop
fcmove
push
adc
pushl
add
xor
decl
aaa
aas
cmp
aas
lahf
xor
nop
outsb
lret
push
add
addb
lock
lret
add
cmc
ret
add
jb
call
jmp
inc
add
and
call
repnz
add
lcall
push
inc
add
decl
add
addb
jecxz
mov
rorl
dec
xor
incl
add
add
add
pop
roll
mov
jb
call
add
movsb
add
incl
sbb
ljmp
add
lcall
or
add
add
add
in
xor
incl
add
clc
in
hlt
rorl
rcll
jmp
mov
push
add
add
add
add
inc
add
imul
mov
cli
xchg
jno
call
add
xchg
lds
dec
dec
xor
pushl
jno
decl
arpl
call
call
add
scas
dec
addb
add
jno
jmp
push
dec
test
pushf
or
int3
sub
add
sub
add
push
mov
daa
add
jle
jmp
push
add
cmp
test
inc
add
add
cmp
clc
sub
test
xor
jmp
add
cmp
add
pop
cmpsl
add
repnz
push
addb
xchg
js
add
nop
mov
leave
cmp
fldcw
mov
add
push
pop
and
leave
jo
incl
jmp
add
add
mov
addb
test
ret
fists
add
dec
outsb
ficoml
or
sub
mov
aaa
jne
mov
cmp
mov
add
mov
ret
add
cmc
das
or
push
roll
out
insb
lods
adc
jb
clc
pop
dec
xor
mov
add
or
lock
fiaddl
jnp
add
or
incl
add
push
add
jecxz
cltd
sub
inc
add
aas
adc
call
push
add
nop
shl
add
add
sbb
sub
add
imul
fdivrl
icebp
imul
out
incb
add
mov
lcall
push
sub
cmp
cmp
fstpl
add
test
jle
add
mov
jo
call
add
movb
add
add
pushf
rolb
aas
dec
cmp
inc
add
mov
add
cmp
or
inc
add
sbb
dec
mov
mov
add
fcoml
imul
xchg
rolb
add
in
or
sahf
mov
rolb
adc
pop
loope
push
lcall
cmp
faddl
jmp
add
movb
cmp
movsb
add
repz
push
addb
lret
or
daa
add
pushl
jp
add
cmpsl
add
repz
add
add
sub
out
pop
xlat
and
call
ljmp
sbb
add
and
ljmp
pop
movl
jne
push
jb
push
jp
test
in
addl
inc
add
sbb
add
inc
add
mov
movq
addl
add
fimull
add
cmp
adc
lcall
jbe
push
add
cs
mov
das
add
call
fidivrs
fcmovu
push
std
lret
clc
mov
adc
mov
xchg
pushl
add
decl
mov
lcall
xor
lcall
in
mov
pop
pushf
add
or
push
cli
int3
add
ljmp
xor
ljmp
cwtl
add
cld
pop
cmpsb
add
lcall
push
cmpsb
add
cmp
sub
pop
add
rolb
stc
push
mov
add
sub
add
mov
mov
and
lcall
xchg
push
popa
add
ds
and
dec
test
xchg
and
pushl
xchg
pop
adc
add
fildll
add
add
pop
xchg
jbe
mov
add
and
mov
push
add
dec
jnp
mov
add
add
ljmp
cmpsb
add
shl
add
insb
or
xchg
dec
popf
cmp
mov
dec
in
adc
push
mov
add
add
fnsave
push
adc
pushl
add
lahf
icebp
mov
aas
mov
add
incl
lcall
add
add
int3
xor
pushl
add
pop
lret
addb
sub
adc
fisubrs
add
mov
push
mov
pop
dec
push
fistpl
jno
incl
aas
dec
test
push
push
add
jne
dec
and
aaa
jle
dec
shll
jns
inc
add
push
dec
clc
lock
xchg
addl
in
xchg
mov
push
mov
arpl
jmp
add
sub
add
es
ljmp
add
adc
mov
lods
addl
pushf
inc
add
fsts
cltd
sbb
or
adc
jmp
add
xchg
jae
decl
add
aas
push
notb
es
insb
and
mov
xor
push
push
add
jo
decl
add
add
pop
call
add
cltd
lea
push
stc
test
sub
lods
stos
sub
add
in
push
les
cmp
push
cmp
aad
add
repz
inc
add
jmp
add
decl
rcll
call
add
in
daa
add
add
fdivs
xor
call
add
mull
add
add
add
cld
jo
lcall
add
lcall
clc
jmp
incl
mov
push
leave
or
dec
jnp
inc
add
sbb
add
add
sti
ljmp
sbb
xchg
mov
add
add
pop
mov
add
fiadds
iret
iret
pop
fcmovu
sub
add
xchg
jle
add
outsb
bound
pushl
add
mov
stos
clc
pop
les
loop
add
jmp
imul
lea
incl
call
cmpxchg
and
sti
sub
hlt
insl
jge
add
add
cmp
das
outsl
movb
jp
test
add
fbstp
dec
clc
repz
test
jb
dec
pop
add
add
mov
add
and
fstpl
loop
ret
add
idivl
incl
add
roll
mov
add
add
loope
pop
push
add
pop
pop
popa
add
add
decl
dec
imul
add
add
scas
xchg
push
jg
add
push
out
dec
mov
shr
push
add
test
xor
push
addr16
add
shr
ror
push
shlb
add
add
pusha
add
ds
mov
add
decl
push
add
pushf
pusha
add
mov
add
cs
nop
sti
jp
add
pushl
in
xchg
push
loope
fidivl
add
push
add
outsb
push
in
outsl
movl
add
mov
addb
add
add
test
mov
add
call
call
add
mov
jmp
add
js
jg
add
inc
add
jecxz
dec
jnp
add
pop
pop
add
xchg
stos
cmp
mov
mov
inc
add
inc
add
inc
add
dec
fstl
xor
jmp
add
sbb
add
jne
jo
call
mov
sarl
xor
incl
add
scas
in
xchg
enter
out
leave
xchg
mov
scas
jg
add
or
push
add
les
in
cmpsb
add
popf
fidivl
add
inc
add
mov
inc
add
aad
add
add
arpl
lcall
add
add
int3
cmp
mov
popf
push
aaa
mov
int3
mov
add
cmp
aad
add
decb
clc
addl
dec
roll
popl
add
in
testb
lods
pop
push
add
xor
call
add
add
ret
cs
add
dec
addb
add
jle
add
mov
add
add
dec
jmp
mov
add
cmp
add
aaa
pop
dec
movl
fidivrs
idivl
adc
incl
add
mov
cmp
ds
pop
in
bound
incl
add
push
add
xchg
pop
mov
add
adc
pushl
xchg
lds
mov
add
call
ror
mov
pushf
dec
add
lcall
add
add
mov
cld
mov
add
jae
jmp
add
jmp
cmpsl
add
or
add
or
add
decl
dec
and
decl
or
push
les
sub
shl
add
addb
add
inc
add
insb
iret
les
ljmp
jmp
add
das
jmp
repz
lods
lret
add
ljmp
es
addl
add
mov
es
in
ficoms
sub
add
or
cld
or
add
hlt
jns
inc
add
add
add
sahf
xchg
jo
inc
add
insl
out
push
sub
aam
je
add
sub
mov
add
jecxz
mov
ljmp
mov
push
add
mov
add
add
incl
add
ja
mov
xor
outsb
les
xchg
out
mov
jmp
add
dec
push
add
cmp
add
add
jl
add
call
js
flds
add
inc
add
and
sahf
aam
or
inc
add
lds
cs
add
xchg
lods
fisttpll
scas
mov
add
mov
movsl
add
or
sar
adc
dec
sub
mov
add
roll
add
leave
repnz
sbb
add
ds
out
dec
lea
and
jge
lret
add
add
les
enter
popf
jno
cmp
add
xchg
push
add
addl
dec
movl
sbb
pusha
add
ss
push
add
and
fildll
dec
clc
jmp
adc
test
mov
add
pushl
mov
ffree
add
add
ljmp
add
or
arpl
decl
jg
add
add
jns
movl
lcall
add
xor
jmp
dec
addl
add
imul
adc
add
jp
add
sbb
add
or
add
mov
cmp
add
aaa
movb
add
pop
mov
test
fsub
add
dec
jp
inc
add
adc
jmp
add
roll
add
leave
rclb
add
mov
add
repz
lcall
fidivl
add
movsl
add
xchg
clc
sbb
sub
add
pop
inc
add
cli
cltd
hlt
mov
dec
xor
dec
inc
add
add
jne
jecxz
jl
add
jb
pushl
add
out
cmp
mov
imull
add
hlt
and
incl
jmp
add
and
lcall
std
jp
insl
mov
add
add
incl
incl
jmp
pushl
add
ja
add
push
movl
ljmp
add
push
add
dec
pop
iret
insl
lock
add
stos
fsubr
pop
push
inc
add
int3
inc
add
add
jmp
add
add
rcll
add
mov
pop
into
int
add
ljmp
add
out
in
stos
icebp
addb
add
add
bound
pushl
aam
add
mov
add
and
call
ljmp
add
add
icebp
jmp
sub
add
and
lcall
add
add
pushl
lcall
add
out
mov
lahf
xor
call
lahf
lods
mov
jne
mov
add
movsb
add
add
push
add
cli
xchg
cmc
arpl
pushl
add
sub
add
jbe
add
stos
dec
inc
add
mov
pop
outsb
in
xor
ljmp
add
add
out
mov
inc
add
add
mov
shlb
add
add
mov
and
mov
movsb
add
or
cmp
xchg
cmc
xor
decl
cmp
fildl
pop
and
incl
add
pop
jno
lcall
add
push
jnp
add
push
mov
add
xor
add
outsb
cmp
pop
lret
and
incl
call
dec
test
jle
add
dec
lret
mov
lcall
adc
jmp
decl
sub
je
lds
jns
lret
add
adc
jmp
add
add
fwait
mov
mov
add
cwtl
sbb
add
pushf
jmp
sub
mov
addr16
add
mov
mov
add
movl
sbb
sub
ret
ds
ljmp
add
sbb
inc
add
push
add
or
mov
dec
movsb
add
and
call
add
mov
add
or
addl
decl
movsb
add
ss
faddl
add
test
lds
les
lret
cmp
movsl
add
lea
decl
lahf
dec
mov
ljmp
add
leave
add
jnp
mov
jmp
out
insl
add
pushl
add
lods
dec
mov
dec
arpl
inc
add
pusha
add
shlb
add
jmp
add
shlb
test
xor
xchg
js
add
push
mov
add
dec
push
loope
jmp
repz
sbb
iret
ljmp
mov
inc
add
je
add
rolb
add
call
xor
cli
mov
scas
sbb
add
dec
repz
mov
imul
arpl
call
dec
push
aas
inc
add
add
repz
sbb
addl
imul
jns
add
adc
call
lret
xchg
jmp
in
out
neg
dec
int3
lds
pop
aas
cltd
movsb
add
push
cmp
cmp
fnstenv
mov
fcomps
insb
addl
cmp
add
cmp
add
add
jnp
mov
call
add
pop
pop
sti
xchg
pop
xchg
cmovle
xor
add
ljmp
mov
add
std
mov
add
add
add
mov
xchg
jnp
xlat
inc
add
mov
ss
add
lcall
add
ret
add
out
inc
add
icebp
add
jmp
fcmovbe
addb
das
ja
add
or
add
jnp
add
add
dec
cmc
fsub
add
add
dec
addb
xlat
push
add
lods
fbld
call
and
inc
add
call
mov
add
call
lea
mov
add
aam
lcall
jp
fistps
add
jmp
shll
jnp
add
fistps
push
sarl
addl
add
add
fidivrl
outsb
and
cmp
fdiv
lret
sub
lods
pushl
jmp
add
adc
call
adc
decl
pushf
decb
add
inc
add
add
fucom
add
cmpsl
add
add
mov
decl
add
add
add
movl
pop
add
add
mov
pushf
jae
pushl
ljmp
pusha
add
push
add
sti
stos
sub
add
movb
push
add
add
fmull
pusha
add
mov
addb
sub
push
add
sbb
add
mov
jb
jnp
jnp
jo
decl
shll
jbe
add
sahf
sub
add
or
imulb
sub
lods
lret
mov
pushl
add
xor
lcall
add
mov
int3
lahf
fcmovb
add
fisttpl
mull
clc
inc
add
add
decl
in
fadds
sti
mov
add
and
push
aas
pop
nop
pushf
test
and
in
icebp
in
dec
lret
and
call
out
mov
stos
sub
add
add
out
mov
add
pop
mov
stos
stos
xor
cmp
add
test
xchg
fdivl
add
je
add
loope
sub
fsubr
clc
mov
insb
pop
push
les
sub
fdivs
decl
add
roll
add
add
add
mov
push
cmc
or
lcall
icebp
push
add
lcall
jmp
cli
mov
iret
pop
add
add
decl
add
inc
add
xchg
shrb
jmp
in
rolb
add
push
add
lcall
jg
add
aam
hlt
xor
ljmp
jmp
psubd
sub
cmp
jmp
jg
add
inc
add
insb
out
addl
pop
js
add
jo
call
inc
add
add
cmp
pushl
dec
xchg
in
mov
add
jns
cwtl
push
mov
lds
sub
mov
roll
pop
not
addl
jmp
loope
and
push
add
add
stos
inc
add
xchg
and
call
inc
add
pushf
jo
call
add
fstpt
add
mov
push
add
clc
cmp
movswl
jbe
out
rcll
add
mov
add
decl
xchg
and
leave
insl
adc
decl
data16
pop
pop
add
xor
cwtl
fadds
add
sbb
stos
cmpsb
add
pop
je
add
lods
outsb
cwtl
bound
lcall
pusha
add
mov
add
sbb
add
dec
loope
adc
ljmp
or
cmpsb
add
jmp
add
jnp
loopne
adc
jmp
add
add
jbe
add
rolb
shrl
push
add
rolb
add
add
add
leave
xchg
mov
inc
add
mov
jb
call
mov
add
call
inc
add
jg
cmc
icebp
icebp
push
add
dec
jmp
arpl
jmp
add
fcomi
arpl
decl
push
add
jne
mov
add
lods
sub
push
add
xchg
inc
add
push
add
inc
add
pop
cmpsb
add
add
add
insb
in
dec
scas
sbb
adc
jmp
add
aad
pusha
add
sarl
jg
sub
add
add
add
lock
addb
xchg
daa
add
add
ret
add
cmp
add
repz
jo
jl
imulb
in
inc
add
decl
cmpsb
add
ljmp
out
pop
sbb
sub
add
jmp
adc
add
scas
sub
add
mov
stos
xchg
cmp
inc
add
decl
sub
cwtl
inc
add
sub
movsb
add
add
pop
sub
popf
add
inc
add
sbb
push
jo
pushl
or
fldt
add
xchg
popl
pop
adc
imul
mov
add
adc
inc
add
push
adc
lcall
test
pop
addb
add
add
jns
add
add
add
mov
addb
cmp
add
xor
and
sub
cs
lahf
add
add
std
icebp
pop
data16
inc
add
ficomps
add
cli
fdivl
push
add
loop
sub
add
ljmp
push
add
mov
push
inc
add
sahf
imul
movsl
add
rcr
aas
aas
mov
add
mov
push
push
lahf
xor
jg
nop
test
xchg
mov
add
inc
add
rolb
add
mov
add
lcall
rorb
mov
add
cmc
outsb
arpl
ljmp
repz
cmpsl
add
out
cmp
add
dec
negb
dec
test
add
mov
pop
addr16
add
add
cs
mov
leave
arpl
mov
mov
cmp
add
ret
pmulhw
js
imul
pop
jno
decl
dec
lea
add
mov
fsubrs
add
movl
in
lock
leave
jbe
jecxz
push
add
mov
or
mov
incl
loope
call
or
add
aam
jge
xchg
mov
jne
add
xchg
jns
addb
out
cld
add
or
sti
dec
mov
ds
mov
cmp
sti
stos
add
enter
or
pop
xchg
xor
call
sub
pop
int3
cmovns
cmp
cmpsb
add
je
movl
or
xchg
addb
add
lret
push
movsb
add
sub
jecxz
repnz
jmp
add
pop
xchg
pop
add
sbb
add
decl
je
inc
add
mov
add
ljmp
add
lods
jbe
mov
pushf
sbb
adc
decl
jbe
fisttpll
add
add
aas
pushf
xchg
sbb
inc
add
pushf
push
enter
aam
mov
jnp
mov
aaa
int3
adc
pushl
sub
add
jmp
mov
adc
call
add
cmp
push
xchg
inc
add
pop
js
hlt
lret
hlt
fidivrl
xor
inc
add
push
jmp
add
add
loope
mov
add
sbb
add
jle
add
add
mov
cmp
ret
lock
or
jecxz
cld
bound
lcall
add
xchg
lret
in
sub
push
xor
lcall
pushl
pop
movl
or
add
pop
add
xchg
cs
aas
call
push
das
call
push
popa
add
fld
add
addl
push
pusha
add
ja
addb
imul
popa
add
push
lea
bound
pushl
add
push
add
ret
and
inc
add
pop
adc
jmp
call
add
addl
fdivl
out
dec
loop
movsb
add
data16
push
add
sti
mov
pop
add
cmp
in
and
lcall
inc
add
enter
mov
jle
push
add
dec
fidivs
add
sub
push
add
mov
add
push
add
pusha
add
repz
sub
add
add
add
sbb
call
out
ret
add
push
add
sbb
lret
shrl
cmp
fsqrt
ret
add
mov
decl
add
icebp
test
aas
xchg
inc
add
fldln2
test
xor
jae
jmp
inc
add
inc
add
loope
push
add
jl
add
pop
mov
add
jnp
jae
aas
popf
cmp
xchg
cmp
add
push
mov
das
arpl
cmp
add
or
pop
push
mov
add
or
mov
mov
jbe
addb
jle
loop
jg
add
mov
pushf
fs
push
add
or
test
jl
xchg
insb
add
ljmp
dec
cltd
and
decl
add
add
add
add
add
pop
jne
pop
push
adc
add
sbb
add
add
outsb
idivl
movb
add
add
dec
add
insl
mov
add
add
mov
scas
dec
scas
dec
mov
add
jnp
sub
add
add
cmpsl
add
cs
sbb
enter
lcall
pop
xor
decl
add
add
call
add
push
add
cmc
pop
mov
lahf
mov
dec
cmc
movl
add
jmp
add
stc
sti
pop
fsubrs
fnstcw
inc
add
ret
psubb
add
aad
test
cs
addb
rcll
cmp
roll
movl
leave
lods
add
dec
push
int
add
das
jno
incl
jg
mov
add
add
or
push
add
sbb
push
add
jns
add
movl
dec
xchg
jl
mov
std
js
add
fwait
push
add
movl
mov
addl
ja
in
xchg
aas
movsl
add
add
jmp
add
and
mov
add
add
or
xchg
imul
lcall
add
push
pop
leave
adc
jmp
add
xchg
push
mov
add
add
inc
add
add
addl
add
jb
inc
add
add
xchg
leave
xor
pushf
jl
add
jmp
add
add
add
jo
decl
out
inc
add
outsl
pop
std
or
add
mov
sub
shll
addb
pop
add
push
xchg
in
and
ljmp
xchg
cmp
loope
int
sti
das
jae
incl
xchg
xchg
mov
add
mov
sub
and
push
cltd
push
or
dec
loop
sbb
sar
lea
add
jb
jmp
add
call
pop
imul
xor
jmp
add
or
push
test
add
mov
incl
add
or
repnz
mov
pop
add
and
ss
add
into
cmp
jmp
jmp
add
pop
jae
fldenv
add
ror
or
inc
add
dec
les
fscale
inc
add
jg
outsl
aam
lods
mov
add
aam
cmp
jle
push
add
or
add
lahf
add
mov
add
clc
outsb
rolb
cli
fxch
or
sbb
fldz
addb
add
ret
xor
call
mov
pop
loope
sub
add
add
call
sbb
rcrb
add
push
add
mov
add
dec
xchg
cmc
mov
push
add
xor
incl
mov
aaa
adc
pop
icebp
xchg
xchg
ja
add
add
cli
jle
fsts
jmp
inc
add
cmc
cmpsl
add
dec
aaa
push
add
outsl
push
movsl
add
dec
iret
push
add
mov
out
sbb
inc
add
call
mov
mov
dec
inc
add
add
add
call
icebp
leave
in
push
xor
call
cmovne
mov
nop
push
mov
testl
inc
add
test
push
add
loope
aas
fbstp
add
add
mov
adc
call
lret
out
loopne
mov
lcall
add
push
add
jge
add
std
pmaxub
inc
add
inc
add
push
xor
fsubl
inc
add
mov
out
lds
pushf
out
cmp
arpl
pushl
add
pushf
loopne
cmp
jbe
ss
cmp
add
mov
jp
add
add
cli
iret
enter
xchg
sarl
mov
xchg
lods
lock
insb
in
lods
enter
adc
movsb
add
add
add
or
dec
aam
scas
inc
add
push
mov
outsl
sub
insl
test
add
add
add
popa
add
jmp
adc
decl
xlat
mov
loope
scas
push
dec
fistl
aad
xchg
movb
add
leave
pop
jno
call
jmp
add
mov
add
pop
mov
cmp
add
dec
hlt
ljmp
sti
and
add
xchg
leave
xor
adc
pop
pop
sub
add
push
jmp
inc
add
jbe,pt
add
mov
sahf
outsl
xchg
testb
add
push
add
dec
pushf
sub
mov
add
or
jmp
add
test
xchg
cmp
mov
cli
mov
aaa
rcll
cld
pushf
push
add
rorl
or
lahf
in
addr16
jmp
dec
int
push
add
out
lods
enter
push
add
fsubp
add
mov
add
incl
roll
sbb
nop
mov
mov
shr
sub
add
mov
in
push
iret
adc
ljmp
adc
lcall
mov
add
sub
add
and
incl
decl
add
rol
add
sub
add
sbb
mov
mov
xor
pushl
stc
mov
or
add
add
sbb
incl
add
pop
outsb
stos
xor
incl
jns
add
mov
add
jo
cld
lcall
add
outsl
ret
xadd
jmp
sub
or
add
xchg
sbb
add
or
leave
rolb
imul
mov
test
paddb
push
add
decl
bound
decl
add
push
test
inc
add
stos
xchg
pop
lahf
inc
add
dec
rorb
add
rcl
movsb
add
xor
pop
xchg
sub
jb
jmp
add
add
xor
cli
mov
add
add
add
pop
add
or
adc
jmp
add
mov
jae
jmp
fcom
sub
test
push
add
dec
adc
dec
arpl
decl
icebp
jl
add
sub
dec
loope
rcrb
add
inc
add
repz
jmp
sbb
inc
add
mov
add
mov
add
jmp
pusha
add
bound
call
lcall
and
jmp
jns
add
stc
fwait
pop
xchg
pop
mov
push
xchg
or
jnp
cmp
pop
fistps
push
jno
ljmp
insl
mov
sbb
lahf
jnp
push
jge
addl
add
add
pushl
sbb
pop
xor
cmp
add
add
pushl
pushl
add
pop
inc
add
cmp
add
add
push
lret
adc
add
ljmp
ds
sbb
scas
ret
adc
pushl
mov
add
fisubl
add
add
loopne
jl
addb
int3
clc
leave
mov
test
push
dec
lcall
loope
mov
dec
pop
out
lcall
in
scas
add
lds
outsl
lahf
mov
mov
fnstsw
mov
jmp
rcrl
push
insl
icebp
jne
cli
icebp
les
insl
pusha
add
pop
xchg
mov
sub
mov
or
sub
roll
cmp
testl
lcall
add
add
push
mov
clc
cltd
adc
lcall
cwtl
lds
mov
cs
add
cmp
popf
jl
cmc
data16
add
adc
push
sarl
add
cmp
addl
fldl
out
ljmp
add
pop
add
push
in
lret
mov
add
and
pushl
push
xchg
sbb
inc
add
push
mov
and
lcall
inc
add
scas
ljmp
sahf
cmovle
lret
mov
jle
push
inc
add
add
call
lcall
mov
cmpsb
add
inc
add
scas
xchg
push
fnsave
add
mov
push
add
addl
add
mov
add
xor
incl
cmp
lock
movl
jae
push
pop
add
mov
add
pop
dec
jnp
das
mov
mov
add
inc
add
lock
fwait
xor
decb
fs
xor
pushl
lcall
add
dec
push
xor
lcall
mov
jns
add
mov
movsb
add
jbe
add
in
call
jnp
add
add
push
add
xor
push
sti
pop
jle
stos
movl
xor
dec
mov
xchg
scas
sbb
add
or
lea
jnp
xchg
xchg
out
mov
incl
test
xchg
add
and
dec
cmc
cmp
add
push
aad
push
add
pop
sahf
pop
loop
mov
pop
push
or
push
mov
mov
test
adc
add
xor
jmp
add
xchg
fcoms
pushf
flds
add
insl
iret
cli
dec
in
sbb
dec
mov
je
and
pop
daa
add
pop
cwtl
add
mov
mov
add
fnstsw
mov
pop
std
add
jmp
sldt
jmp
add
sahf
jge
add
add
bound
incl
mov
mull
add
jp
xor
sti
adc
sbb
clc
movsl
add
into
mov
data16
add
loopne
xchg
add
incl
add
add
jmp
add
add
or
push
add
aam
ljmp
mov
jmp
add
mov
rorl
rcr
push
nop
cmpsb
add
mov
push
aam
sub
ficoms
add
fcompl
pop
or
add
add
add
mov
add
roll
add
jecxz
push
adc
call
dec
pop
add
add
add
jns
add
jmp
add
lcall
and
call
add
jle
fisubl
fcoml
push
jo
dec
xchg
push
add
xlat
repz
add
push
add
scas
xor
fsubs
jnp
fistpll
xlat
iret
or
add
loopne
mov
add
cmpsl
add
pushf
dec
scas
aas
dec
ljmp
lcall
add
and
ljmp
pop
fisubs
jo
decl
sbb
iret
xor
decl
cmp
les
mov
ret
add
nop
mov
lods
jnp
pop
pop
xlat
add
leave
movsl
add
jmp
ljmp
push
insb
pop
add
xlat
sub
je
add
add
push
add
add
or
bound
ljmp
cmc
lcall
pushl
add
push
add
pushl
decl
out
imul
add
inc
add
sub
push
add
add
incl
add
add
jmp
add
add
add
addb
add
inc
add
mov
pop
push
mov
push
add
incl
add
and
ljmp
xchg
out
lea
out
fldl
pushl
add
jb
ljmp
add
push
add
cmc
mov
jmp
lcall
cltd
stos
mov
ss
sbb
jecxz
jns
hlt
inc
add
cmp
insl
fistpl
scas
mov
call
sahf
or
push
add
sub
movsl
add
add
jmp
lret
add
push
divb
dec
xor
call
jae
ljmp
mov
movsl
add
or
out
mov
push
add
xchg
popa
add
addl
mov
mov
add
scas
push
popf
rolb
dec
or
add
jle
push
add
add
loope
inc
add
add
add
movl
mov
iret
jmp
mov
addl
mov
stos
or
add
push
loopne
add
aas
test
lret
shl
inc
add
aam
stc
repz
ret
add
pop
mov
arpl
dec
sbb
incl
lcall
in
cmp
add
stos
mov
add
add
add
lahf
mov
add
push
add
pop
stc
das
sub
nop
pop
dec
iret
dec
dec
pop
jne
jmp
aam
xchg
divb
lahf
mov
xor
in
out
jecxz
sbb
pop
sti
lret
or
movb
add
lds
mov
imul
add
xchg
sub
mov
jg
mov
add
inc
add
jp
cltd
inc
add
pop
divl
add
dec
cld
addl
repz
add
push
shr
je
or
pop
pushf
or
add
addb
add
dec
dec
jo
cmp
incl
add
jo
pushl
outsb
sbb
xchg
mov
add
add
call
outsl
out
and
inc
add
roll
dec
jno
cmp
dec
add
dec
xor
pushl
decl
addb
sub
mov
jns
mov
add
out
mov
add
dec
ja
test
jae
js
add
aad
cmp
loop
pop
call
add
mov
push
imul
add
mov
add
add
and
lcall
sbb
and
incl
call
dec
pop
add
ljmp
or
push
cli
aaa
movb
add
sbb
cmp
add
in
fstl
add
outsb
add
lcall
add
dec
notb
aad
stos
xchg
xchg
mov
add
jl
add
je
sbb
aas
jns
add
addl
mov
add
add
mov
add
mov
push
add
movb
xor
decl
or
les
jmp
sub
add
incl
pop
icebp
mov
cmpsl
add
cmp
adc
faddl
add
iret
pushl
add
out
daa
add
pushf
loop
mov
add
xchg
dec
mov
add
std
add
pushl
add
jns
and
jmp
jp
lcall
int3
jge
ja
add
sahf
mov
jecxz
fucomip
into
in
inc
add
inc
add
add
or
xor
decl
mov
aaa
scas
daa
add
leave
jno
call
sbb
cwtl
notb
add
test
xchg
push
fwait
in
repnz
hlt
stos
das
mov
leave
or
add
nop
inc
add
mov
fidivrs
stos
push
add
xor
jmp
mov
add
loope
clc
test
cmc
ljmp
xchg
cmpsl
add
pushf
xchg
shl
in
add
icebp
xchg
mov
mov
add
out
pop
mov
int3
jnp
add
call
addb
pop
jge
pop
divb
add
xor
out
fwait
sub
mov
add
add
xchg
lods
add
and
lcall
xchg
loop
aam
mov
jae
jp
add
add
in
xchg
in
outsb
movb
add
mov
push
add
add
add
add
jo
mov
push
mov
sbb
inc
add
mov
stos
je
mov
lret
add
mov
jecxz
mov
pop
pop
loope
lock
inc
add
add
rolb
and
jmp
mov
cmp
push
add
fcom
popf
jne
mov
inc
add
push
add
mov
fdivr
in
loop
shll
jle
add
add
ret
add
add
xchg
mov
loope
insl
jmp
pop
faddl
sbb
add
inc
add
rcrb
jecxz
test
add
popl
push
or
movsb
add
add
enter
pop
lcall
adc
push
add
xchg
sbb
add
push
in
and
fcmovnu
mov
xchg
mov
sub
test
stos
push
add
incb
add
mov
add
inc
add
add
bound
fsubl
add
loop
add
incl
clc
push
add
nop
inc
add
movsb
add
add
or
cltd
adc
decl
and
ljmp
mov
add
ljmp
xchg
lods
push
mov
jnp
mov
in
push
cmpsb
add
incl
add
je
xchg
and
decl
cld
mov
decl
jae
ljmp
or
decl
lcall
add
add
inc
add
add
loope
lahf
addl
and
dec
stos
in
out
insl
data16
sbb
cmp
imul
add
and
clc
ret
ficoml
add
pusha
add
mov
stos
jnp
add
add
rolb
insb
lock
cmp
add
shl
adc
incl
add
sbb
add
add
mov
sbb
add
das
lret
mov
adc
incl
jmp
push
add
imulb
add
or
repnz
sbb
add
cltd
dec
pop
daa
add
mov
mov
popf
addb
add
and
mov
cltd
and
inc
add
lods
roll
stc
imul
add
dec
repnz
add
add
pop
imul
adc
push
mov
jb
lcall
outsb
enter
mov
add
sbb
add
int3
xor
pushl
add
add
jmp
add
pusha
add
loope
movl
add
cmp
pusha
add
shrl
dec
addb
add
jnp
push
add
sarb
and
call
adc
incl
add
pusha
add
sub
add
mov
or
xchg
add
lds
les
and
insb
ja
lcall
add
test
aad
bound
cmp
add
mov
pop
movl
sahf
loopne
cmpsl
add
add
sbb
in
xor
stc
add
lcall
pop
or
repnz
les
lcall
sub
dec
add
std
inc
add
and
pushl
test
mov
add
push
add
es
add
aaa
scas
outsb
bound
decl
das
add
jmp
loop
jo
ljmp
js
push
sbb
add
jmp
pop
outsb
repnz
add
daa
add
add
lcall
cli
or
add
add
ljmp
lea
ret
add
aad
or
add
cltd
inc
add
or
in
icebp
cmpsl
add
cwtl
add
push
dec
dec
mov
push
lret
ret
add
add
add
and
jmp
add
lret
loope
push
add
mov
movsl
add
inc
add
push
add
ljmp
fwait
idivb
mov
add
lcall
outsl
add
push
iret
jge
add
aad
out
out
iret
cmp
add
add
add
cli
inc
add
xchg
mov
in
pop
sbb
hlt
cmp
add
jb
decl
adc
decl
mov
add
add
xchg
enter
dec
bound
incl
add
add
in
rcrb
mov
pop
add
mov
push
add
mov
and
dec
sub
int3
cmp
add
add
jae
ljmp
add
add
call
add
notb
incl
push
cmp
add
mov
jmp
xchg
pop
mov
icebp
xor
jno
lcall
add
ja
add
inc
add
mov
adc
add
mov
add
sbb
add
dec
daa
add
decl
mov
add
fisttpl
mov
mov
addb
cmpsl
add
mov
rolb
add
and
lcall
jne
add
push
fistps
pusha
add
cmc
push
nop
nop
in
mov
add
mov
in
dec
jo
jns
in
lods
jo
js
add
shlb
add
in
ljmp
jle
add
add
dec
aad
mov
add
call
xor
addb
add
sahf
pop
dec
xchg
outsl
cltd
leave
sub
ret
add
add
adc
mov
lcall
adc
imul
fcomps
and
dec
mov
add
adc
jmp
or
add
cltd
or
pop
scas
lret
or
aas
leave
inc
add
dec
xchg
ret
add
mov
movsb
add
jmp
add
add
lret
add
jge
mov
leave
cltd
in
addl
pop
jnp
add
add
add
pop
and
push
scas
push
add
clc
xor
decl
add
adc
jmp
add
cmc
jp
add
dec
ljmp
dec
mov
sbb
hlt
scas
jne
sbb
jg
pop
jbe
mov
xor
cmp
add
lock
ss
loop
loopne
movsb
add
fidivrl
add
in
xor
xchg
dec
lret
jb
decl
add
pushl
repnz
enter
add
xchg
add
jmp
mov
add
push
add
mov
add
adc
incl
mov
popa
add
lods
jmp
add
inc
add
mov
cmp
incl
sub
add
sti
lea
add
addb
pop
mov
add
pop
sub
scas
adc
dec
pushf
mov
adc
add
or
add
adc
shl
add
adc
iret
mov
add
inc
add
and
fsubrl
add
insl
bound
pushl
dec
out
in
pop
inc
add
and
pop
jecxz
cld
cmc
mov
add
in
add
xchg
in
inc
add
xchg
out
jae
call
lcall
jle
imul
xchg
cli
dec
or
add
mov
xchg
ss
jle
add
in
xchg
sbb
jo
call
call
sbb
cmp
bound
pushl
jmp
push
add
ljmp
nop
nop
test
add
fstpl
popa
add
push
add
nop
daa
add
add
add
incl
mov
mov
pop
clc
jge
add
fidivrl
push
cld
mov
add
jns
add
popa
add
pusha
add
mov
add
incl
sbb
pop
sbb
data16
push
xchg
push
push
add
inc
add
decl
test
or
cmc
mov
add
addl
dec
in
imul
scas
pop
pushf
rorl
sbb
jecxz
std
dec
xchg
dec
add
dec
add
leave
push
mov
jl
add
je
add
insl
test
mov
lret
hlt
nop
mov
inc
add
scas
inc
add
cltd
xor
add
jmp
sub
fimull
add
stc
cmpsb
add
add
enter
and
sbb
dec
pop
add
add
mov
loope
cmp
mov
icebp
popa
add
out
mov
loope
cmp
call
push
lcall
cmp
repz
addl
push
add
add
push
outsb
lahf
sub
mov
sub
jns
add
addl
pusha
add
cli
jns
add
aaa
jnp
add
lret
add
inc
add
add
pushl
incl
add
add
add
decl
sbb
add
rolb
push
arpl
inc
add
add
xchg
in
mov
jno
pushl
xlat
sub
popf
out
inc
add
incl
add
sti
shll
jae
fimull
nop
fistps
int
shll
add
or
lahf
inc
add
lahf
sbb
add
fsubrl
nop
inc
add
pop
mov
add
cmp
add
aad
add
sbb
fnstsw
mov
jmp
pushl
inc
add
cwtl
aad
stos
nop
xchg
adc
jmp
add
mov
add
test
sub
movsl
add
repz
add
cli
icebp
add
mov
add
jge
add
or
jmp
cmp
or
dec
push
add
xchg
adc
sub
xchg
out
pop
jge
mov
add
movl
jb
pushl
decl
cltd
and
incl
call
imul
pushl
hlt
lea
out
in
lahf
mov
cmp
add
add
les
cmp
xchg
cmp
jae
incl
add
or
pop
ja
adc
add
adc
ljmp
es
add
push
pop
out
or
call
add
bound
call
dec
add
inc
add
adc
js
add
add
ja
add
xchg
jb
pushl
call
push
lods
fnstcw
pop
sub
mov
lods
js
inc
add
clc
dec
repnz
sbb
add
iret
int
dec
imul
inc
add
fidivrs
add
lods
test
xor
call
outsl
data16
add
or
add
add
lcall
dec
loope
sbb
add
cld
fiadds
cli
jns
or
jo
mov
add
out
jb
pushl
add
or
sbb
sbb
add
test
rclb
pop
adc
lcall
outsl
jp
negb
stos
push
fildl
add
add
lcall
dec
inc
add
add
inc
add
nop
neg
mov
pushl
dec
push
add
neg
push
push
xchg
imul
fs
aas
pop
call
add
div
int
adc
pushl
incl
incl
incl
dec
lret
jmp
outsb
addb
mov
push
cmc
out
movsl
add
mov
ljmp
mov
add
add
add
pop
jo
incl
in
lds
sarb
inc
add
lahf
and
jmp
add
loopne
shr
lcall
jmp
add
aas
sub
movsb
add
sub
stos
lret
in
outsb
jmp
add
lret
add
shl
add
jle
jnp
rcll
add
test
xlat
sub
add
in
pop
loopne
and
jmp
add
xor
decl
loope
and
xchg
roll
cmc
and
lcall
sub
add
sub
imul
call
cs
and
push
daa
add
jmp
add
cmp
add
leave
cmpsb
add
add
xchg
fwait
iret
pusha
add
lods
cmp
imul
jmp
mulb
add
and
call
dec
inc
add
sub
xor
inc
add
les
out
push
xor
ljmp
dec
inc
add
jg
add
or
sbb
repz
cmp
jg
add
add
roll
das
data16
jecxz
jl
imul
dec
roll
inc
add
sti
mov
cmp
sub
add
mov
add
roll
scas
addb
add
int3
push
leave
nop
scas
je
out
adc
incl
mulb
jmp
lock
or
icebp
jmp
add
lods
sub
test
out
hlt
rolb
xchg
bound
jmp
add
jne
add
aad
add
std
cld
out
xchg
shrl
mov
lret
add
or
outsb
mov
out
add
adc
mov
xor
decl
add
and
loope
or
add
cs
addl
adc
stos
pop
mov
add
mov
pop
pop
adc
lock
ljmp
add
cmpsl
add
jl
movlps
pop
sbb
jge
mov
fidivrs
bound
decl
out
jb
jmp
incl
add
int3
or
mov
cltd
adc
inc
add
add
push
jecxz
scas
fwait
or
ret
add
inc
add
mov
push
les
sub
add
push
call
or
add
add
push
adc
out
test
mov
in
adc
cmp
add
movb
dec
mov
add
lret
rcrb
jbe
add
insb
mov
mov
movsb
add
incl
outsb
das
pop
cmp
lcall
popf
loopne
sub
pop
ficomps
fwait
ljmp
jbe
jmp
jae
call
ljmp
sub
jnp
sub
add
lcall
pop
xor
and
fidivs
pusha
add
dec
inc
add
add
ljmp
out
add
dec
incl
add
or
add
in
xchg
data16
pop
cmpsb
add
add
or
je
add
cmpsl
add
ret
add
add
fs
imul
add
mov
add
add
inc
add
add
jo
lcall
add
mov
ljmp
add
pop
pop
xlat
push
add
or
repnz
lcall
cli
sbb
add
repnz
add
or
pushl
popa
add
fidivs
lds
repz
cli
js
shlb
mov
rol
add
add
mov
in
jne
add
add
and
decl
add
fwait
aas
xchg
push
mov
add
cmp
decl
cmp
add
fwait
or
add
add
fcoml
add
mov
inc
add
or
xor
dec
jns
sbb
add
negl
repz
inc
add
pushf
mov
and
add
and
popa
add
movb
xor
lcall
fisubl
jge
data16
dec
insl
mov
ret
add
inc
add
jle
add
lods
mov
scas
and
jmp
add
sub
pushl
add
dec
arpl
inc
add
xchg
data16
out
hlt
loop
push
cmp
add
jmp
sbb
cmc
jg
ret
add
loop
sub
mov
add
mov
add
outsl
and
lcall
incb
add
and
ljmp
les
in
addl
adc
ljmp
lahf
inc
add
mov
cltd
das
push
mov
add
dec
repnz
in
mov
push
mov
mov
add
cmp
xchg
fldl
add
jge
add
add
call
add
pop
add
xchg
data16
add
lret
mov
sti
push
sub
mov
cmp
incl
add
mov
add
xor
fdivrs
or
call
add
in
sub
cs
xchg
mov
add
add
add
dec
add
imul
incl
pusha
add
in
mov
cmpsl
add
add
add
outsl
pop
int
inc
add
into
mov
sahf
or
repnz
pop
outsl
ja
add
xor
lcall
push
xor
int3
fidivl
add
cltd
pop
dec
outsl
dec
xchg
xor
call
add
add
push
pop
cli
pop
stos
pop
add
call
pop
scas
mov
push
sahf
cmc
sub
add
mov
add
aam
inc
add
xchg
xchg
outsl
addb
add
inc
add
dec
in
sbb
add
daa
add
pushl
xchg
cmp
dec
mov
rcrl
jnp
test
lret
add
mov
add
dec
adc
decl
jg
xchg
cmp
testb
mov
lcall
add
ss
fisttpll
xor
gs
xchg
mov
outsb
cmp
aaa
push
add
push
bnd
sbb
pop
mov
add
lret
js
mov
cs
sarl
and
push
xor
incl
add
jg
add
test
cmpsl
add
add
add
jmp
incl
mov
cmc
lret
mov
cmp
inc
add
sub
cmpsb
add
fs
add
lds
or
add
add
loopne
sbb
pushl
add
rorl
add
adc
sub
jecxz
xchg
stos
xor
decl
pushf
sarl
fcoms
lods
push
pop
xchg
dec
or
test
mov
jg
ss
mov
data16
add
add
cltd
and
test
addb
and
cmp
xchg
lods
xor
decl
inc
add
in
inc
add
add
imul
xlat
loopne
add
add
pop
stos
pop
movl
movsb
add
add
call
xlat
test
add
xchg
div
movsb
add
lahf
mov
sub
int
addl
mov
mov
pushl
pushl
dec
aam
add
or
add
out
mov
cmp
bound
pushl
add
or
adc
in
in
in
xchg
data16
push
inc
add
pop
jp
sub
jle
lock
add
iret
pop
dec
xchg
inc
add
outsb
jns
add
add
fisubs
fiadds
add
xchg
pop
add
bound
ljmp
fistpll
jl
jns
add
add
add
dec
movsb
add
jmp
addl
add
add
mov
dec
sub
add
add
js
mov
cmp
add
mov
add
roll
out
enter
mov
fcoml
cld
xchg
insl
js
xor
add
jb
sti
dec
cld
cmpsl
add
jmp
mov
add
add
data16
jns
push
cmc
addl
mov
dec
arpl
incl
movl
cmp
data16
xchg
test
inc
add
fcomps
dec
add
call
mov
add
cs
ds
data16
sbb
push
add
mov
add
dec
int3
insb
xchg
not
adc
jmp
add
add
nop
push
sarl
sub
jmp
je
pop
jle
mov
lret
pop
jno
jns
add
bound
jmp
add
in
mov
cmpsb
add
dec
adc
add
xor
fnsave
mov
addl
mov
aas
in
sbb
call
add
add
sahf
outsl
xor
sub
inc
add
insb
adc
in
lock
add
add
call
sbb
cmp
icebp
and
dec
out
add
stc
mov
jb
jmp
add
in
mov
mov
mov
lcall
jbe
add
add
loope
cli
add
xor
js
add
ljmp
cld
bound
call
jge
lds
dec
iret
data16
add
and
inc
add
jle
das
imul
ljmp
mov
dec
push
push
add
inc
add
mov
mov
fnstsw
popl
xor
test
jmp
add
jno
dec
test
add
pop
xor
xlat
dec
stc
sbb
lcall
stos
push
add
lcall
add
mov
pop
add
inc
add
call
test
xchg
and
or
outsb
xor
add
cmp
repz
jno
call
add
cmpsb
add
add
outsb
hlt
mov
jo
lcall
add
add
mov
add
jbe
mov
add
jge
add
data16
cmp
or
call
push
lret
push
add
push
adc
cmp
inc
add
jno
cmp
call
incl
add
addl
sub
int3
mov
inc
add
sub
mov
ret
add
test
fmul
aaa
inc
add
shll
imul
cmp
jmp
adc
decl
mov
add
xchg
or
aaa
push
add
mov
js
lods
int3
lds
std
or
add
mov
std
stos
ljmp
dec
dec
inc
add
mov
add
add
decl
mov
negb
into
xchg
mov
jmp
add
adc
jmp
ds
bound
decl
add
cmpsl
add
sub
cmp
add
lea
fidivrl
ret
out
sbb
add
sub
add
cmp
add
sti
jg
nop
mov
imulb
add
add
cmp
xchg
lret
and
pushl
add
push
add
pop
mov
add
xchg
imul
arpl
pushl
das
xchg
repnz
pusha
add
jle
mov
add
sbb
cmp
mov
add
sbb
push
mov
das
xor
jmp
add
cmp
cmp
and
dec
jnp
add
inc
add
aam
inc
add
in
and
and
das
les
addl
add
bnd
ds
bound
incl
add
in
pop
add
push
jge
js
insl
clc
cmp
xor
cld
and
outsb
mov
mov
sahf
sbb
add
add
add
imul
shl
add
pop
scas
cmp
int
sub
out
addl
or
add
repnz
add
shrl
fcmovb
add
add
add
je
mov
add
out
out
adc
add
xchg
or
add
and
call
call
iret
stos
mov
add
add
call
add
mov
add
and
out
out
jb
lcall
jo
pushl
mov
into
sub
sub
xchg
enter
call
xor
ljmp
push
add
jmp
lcall
cmc
sub
dec
fcos
pop
out
push
add
jmp
cli
js
add
pop
add
dec
fldl
ljmp
fsubrp
sbb
sub
mov
js
ja
cmp
add
pushl
add
lcall
add
xor
inc
add
add
call
pop
mov
xchg
add
call
add
into
push
jl
add
mov
stos
xor
add
xor
ljmp
add
sbb
out
push
mov
add
decl
mov
push
add
popf
and
call
fcompl
jbe
aam
add
pushl
add
cli
sub
dec
jno
lcall
push
inc
add
sub
fcoms
ljmp
add
pushl
add
movb
add
or
or
clc
in
xchg
das
dec
test
addb
inc
add
leave
add
add
jb
decl
add
mov
inc
add
jne
lods
push
add
and
incl
insl
fwait
adc
faddl
call
add
ljmp
xchg
mov
add
add
jmp
ljmp
xchg
inc
add
pop
push
mov
repnz
roll
outsl
sub
loope
add
jmp
jmp
cmc
fisubs
sub
ljmp
xor
add
in
adc
incl
addb
add
or
mov
aam
add
add
decl
push
add
xchg
popa
add
cmp
dec
rorl
les
or
add
jnp
pop
sub
lock
stos
inc
add
cmp
stos
imul
data16
add
ljmp
stc
mov
dec
lahf
loop
or
add
mov
scas
and
push
aam
jae
pushl
add
or
inc
add
clc
cmp
add
add
add
sti
stos
xor
decl
adc
call
add
je
pushf
sbb
xor
push
add
arpl
pushl
or
rcr
popa
add
loop
imulb
aas
xor
lcall
add
bound
call
incl
mov
jg
dec
and
ds
add
adc
cld
pop
mov
ljmp
add
mov
xchg
mov
push
add
call
pop
add
add
add
lea
lods
popa
add
add
incl
lcall
xchg
cmpsb
add
add
xchg
sbb
add
addl
add
add
pushf
fwait
arpl
decl
add
incl
add
add
add
sbb
decl
cmc
out
movsl
add
add
add
add
insl
lods
ja
dec
xor
add
adc
imul
and
call
mov
adc
fdivrs
lahf
or
int3
xor
enter
lods
push
add
pop
insb
bound
jmp
adc
jle
add
sbb
cmp
jo
out
in
decl
int3
sub
jno
call
fldenv
lcall
imul
sub
int
lret
xchg
outsl
xchg
ja
mov
and
popa
add
je
addr16
xchg
or
movsbl
mov
lcall
mov
sbb
sti
add
incl
addl
incl
aad
add
sbb
dec
nop
mov
push
pop
add
add
add
pop
adc
decl
add
leave
mov
add
loope
xchg
dec
fwait
mov
call
mov
clc
shl
xchg
push
and
ljmp
add
and
fists
shrl
dec
xor
addl
add
fldln2
test
mov
add
cmp
dec
jle
add
add
hlt
xchg
nop
jg
or
lret
imul
add
add
pop
cwtl
add
incl
add
incl
jmp
add
jo
call
sbb
ret
xchg
hlt
push
add
daa
add
add
ljmp
hlt
or
add
fbstp
jno
call
call
incl
pushl
add
arpl
call
and
clc
xchg
push
add
mov
jle
mov
fwait
push
xor
sbb
add
icebp
inc
add
lret
add
lret
or
and
cli
add
push
movsl
add
push
nop
pop
add
lods
mov
add
stos
mov
add
repnz
dec
ss
mov
mov
add
jg
add
pop
dec
adc
call
cmp
add
sub
lret
pop
and
fildll
shll
mov
add
decl
cwtl
or
aaa
cmp
mov
add
out
sub
add
xchg
inc
add
loop
repnz
cmp
or
jmp
adc
call
call
add
mov
add
js
jno
cmp
and
lcall
inc
add
add
push
test
js
mov
in
add
add
mov
mov
mov
jg
data16
aad
fiadds
add
pop
inc
add
sbb
add
add
decl
xlat
jl
idivb
add
adc
or
sub
xchg
hlt
jl
arpl
ljmp
aas
xchg
iret
stos
pop
cwtl
pop
sub
add
jmp
sub
xor
decl
icebp
addb
and
incl
add
adc
decl
add
decl
add
decl
ds
shl
add
add
add
cmpsb
add
push
add
mov
add
icebp
dec
sbb
mov
pushf
jmp
add
mov
jle
imul
mov
push
stc
fcoml
add
sbb
xor
add
ss
add
add
xchg
mov
ret
pop
fstps
mov
addb
mov
test
stc
mov
sbb
jmp
add
add
incl
add
inc
add
lcall
add
push
add
cmp
repnz
js
mov
scas
int3
imul
pop
xchg
and
stos
push
add
pushl
cmc
repz
dec
cmp
push
mov
add
add
xor
jmp
mov
popa
add
fdivs
aad
add
sub
mov
and
decl
add
incl
dec
mulb
add
add
or
add
lcall
mov
mov
jne
aaa
int3
mov
fadds
jmp
add
and
jmp
push
in
mov
fmuls
out
fstl
je
add
or
addb
sahf
cmp
addl
mov
les
dec
add
ljmp
or
sbb
dec
mov
push
add
stos
xchg
out
sti
fistl
call
adc
mov
stos
pushl
ljmp
data16
sbb
cltd
pop
jmp
add
lret
or
jl
push
and
dec
dec
mov
add
pusha
add
shll
fwait
mov
das
rcrb
inc
add
xchg
sarb
roll
jns
add
lds
pop
aad
test
cmp
aaa
add
movl
add
decl
add
call
add
add
jnp
add
jns
aaa
sbb
stc
sbb
add
add
mov
add
cmpsl
add
icebp
cmp
add
jmp
xchg
adc
mov
in
inc
add
dec
cli
push
clc
xor
call
js
int
adc
jb
jmp
add
cmc
loop
repz
ret
inc
add
aam
mov
call
add
iret
add
call
sub
mov
out
mov
add
pop
xchg
lds
out
pop
add
add
add
ljmp
fisubrs
cmpsl
add
in
mov
add
dec
fldl
add
addb
loop
push
incl
decl
add
add
pop
mov
xlat
dec
push
mov
movsb
add
add
cmp
or
add
mov
add
cmp
sub
jecxz
out
decl
xor
decl
cmp
dec
out
dec
add
mov
jl
add
scas
mov
sarl
mov
fidivrl
cltd
addb
aaa
ret
add
pcmpeqd
int
mov
mov
xor
aas
mov
loop
int3
dec
cmp
addl
pushl
lods
or
or
add
add
jbe
mov
push
jecxz
test
lds
sub
inc
add
outsb
fdivl
inc
add
add
add
push
add
push
add
inc
add
xchg
sub
add
xor
ljmp
push
pop
movsb
add
rol
add
add
jb
lcall
pop
sbb
mov
add
and
jl
cmp
cmp
aad
bound
fists
mov
jns
add
add
cld
pop
sub
or
pop
add
add
jmp
dec
shrl
cli
outsl
stos
out
pop
fdivl
dec
inc
add
add
push
aaa
rcr
stc
aad
mov
daa
add
xor
pushl
add
mov
jno
out
cld
jb
call
mov
add
rep
or
add
or
pop
jmp
or
xchg
sub
lcall
mov
test
jg
add
popf
sbb
add
testl
shlb
pop
sub
add
fwait
push
add
mov
rolb
add
movsl
add
adc
xlat
mov
popf
lds
mov
cltd
mov
dec
fisubrs
or
in
cli
sti
stos
mov
add
addb
sub
add
lcall
adc
pushl
add
fidivrs
add
ljmp
addl
add
pop
and
pushl
aas
adc
decl
pushf
pop
sub
incl
mov
add
cmp
sub
add
dec
loop
test
push
add
or
rclb
add
add
call
push
add
add
decl
xchg
pop
cmp
push
add
and
adc
dec
sti
or
xor
call
jge
roll
add
mov
cmp
add
addl
scas
cld
mov
pushl
cmp
xchg
inc
add
call
rolb
add
or
in
stc
mov
jle
jb
jmp
stc
jnp
add
jp
pushf
push
add
shl
add
add
call
add
scas
or
imul
fnsave
mov
and
call
cmp
add
cmp
add
ret
add
sbb
sbb
inc
add
mov
add
mov
adc
les
adc
scas
iret
and
roll
add
addl
lret
std
mov
add
cltd
loopne
jge
mov
pop
sub
aas
and
pushf
jmp
add
test
push
push
arpl
decl
add
jecxz
inc
add
push
sub
add
mov
add
cmc
xchg
cmp
add
mov
add
ja
cmc
addl
jbe
test
pop
int
add
and
leave
je
add
xchg
sbb
test
jg
arpl
incl
add
addl
add
xchg
xor
decl
cmp
xchg
xor
incl
xor
pushl
call
dec
lahf
enter
pop
dec
mov
fwait
int
jp
add
mov
jge
xlat
sbb
add
fcmove
stc
aad
add
inc
add
add
add
add
sbb
add
jne
add
ja
mov
mov
loope
push
into
inc
add
test
sti
popf
pusha
add
add
mov
add
ret
in
inc
add
into
repz
add
call
add
inc
add
jne
add
rep
sahf
push
add
jb
jge
xchg
mov
cmc
jb
mov
jmp
add
mov
lock
imul
xor
mov
add
xor
pushl
add
add
jp
add
mov
cld
xchg
push
frstor
mov
and
mov
js
push
in
xor
mov
out
or
les
xor
ja
in
inc
add
addb
aam
add
call
cmp
mov
movb
inc
add
push
add
decl
sahf
xchg
pop
lret
lcall
enter
add
add
add
call
or
jle
add
sbb
add
dec
loop
js
add
xchg
cmpsl
add
pop
fldl
add
das
dec
pop
cmpsl
add
add
pop
inc
add
add
sti
gs
int3
stc
test
fwait
mov
push
add
js
jnp
data16
mov
add
mov
pop
pushl
add
add
std
xlat
cmpsb
add
sub
pop
push
add
add
mov
movsl
add
inc
add
push
add
add
lcall
out
cld
xlat
lret
test
test
mov
push
mov
cmp
add
sub
call
repnz
fbstp
jno
pushl
addb
sbb
jo
jmp
cmp
sub
adc
jmp
pop
lds
loopne
mov
test
notb
decl
aad
add
push
add
adc
add
pushf
or
jmp
je
add
mov
mov
sub
sbb
add
lret
addb
add
mov
adc
add
into
testb
mov
cmp
cmp
add
pop
mov
inc
add
clc
inc
add
push
fldenv
dec
loopne
sahf
ret
add
ljmp
in
movl
pop
hlt
mov
add
addb
cmc
movhps
mov
ja
mov
lods
jb
push
scas
and
call
xor
ljmp
mov
aas
mov
jae
call
ljmp
add
xor
lcall
hlt
inc
add
fdiv
dec
inc
add
lods
inc
add
pop
sub
add
jns
add
add
flds
pushl
pusha
add
or
add
cmp
cmp
add
call
xlat
jp
add
fdivrl
xor
ljmp
lret
add
or
add
xor
decl
pop
push
inc
add
add
mov
mov
addb
xchg
and
add
add
popf
push
add
repz
lds
mov
add
dec
lods
mov
faddl
jge
add
aad
xor
pushl
cmp
xor
fadd
add
add
jno
lcall
addl
pushl
pushl
add
mov
faddl
gs
push
xchg
sub
popa
add
add
scas
jno
add
dec
jnp
add
outsb
inc
add
pop
and
xor
jmp
add
jb
inc
add
mov
add
cld
push
add
dec
mov
mov
pushl
add
sbb
decl
adc
jmp
adc
sbb
call
jle
xor
incl
lret
add
mov
jbe
inc
add
xor
add
jmp
add
jl
mov
insb
movsb
add
add
push
mov
lret
pop
mov
mov
fwait
add
jmp
dec
or
in
push
add
add
ljmp
add
sub
xchg
sub
inc
add
ss
inc
add
inc
add
dec
cltd
clc
push
add
dec
push
push
adc
pushl
add
aam
jae
incl
cmp
icebp
cmpsl
add
leave
sbb
nop
cld
or
and
lcall
ljmp
sahf
xor
call
stos
add
fmull
cmc
adc
cmp
pop
xchg
aas
xchg
jns
lahf
movsb
add
push
add
jmp
jae
jns
cmpsb
add
adc
incl
or
add
cltd
cmpsl
add
push
mov
mov
aam
add
incl
add
add
popa
add
inc
add
dec
dec
int3
dec
cmp
out
insl
push
cmp
jmp
cltd
add
incl
add
xchg
sahf
fwait
test
add
add
fdivrl
or
call
cmp
add
mov
and
jmp
jmp
inc
add
mov
push
add
movl
lahf
sbb
add
cmp
add
movsl
add
mov
dec
fcompl
mov
pop
test
scas
data16
xchg
cmp
cmp
roll
add
or
add
ds
add
add
in
mov
and
dec
test
add
mov
add
shl
dec
test
enter
add
jne
movl
xchg
cmpsb
add
outsb
movb
shlb
xor
add
jg
add
cmp
dec
movsl
add
loop
add
add
adc
out
jne
sbb
data16
add
std
xor
call
dec
in
imul
cmpsl
add
add
decl
xchg
cmp
xor
fistl
add
ljmp
aad
sub
pushf
adc
decb
add
stos
cmpsl
add
in
jno
inc
add
aas
in
sub
les
mov
cmp
mov
add
xor
incl
call
add
call
pusha
add
scas
addb
cmpsl
add
in
xchg
movsb
add
push
fisttpl
loop
mov
inc
add
loopne
push
xchg
sub
cmpsb
add
add
pushf
and
mov
addl
inc
add
and
call
hlt
pop
xlat
out
fnstsw
adc
jo
jmp
rcrb
push
or
add
scas
in
pop
adc
fstl
jge
data16
inc
add
pushl
mov
add
add
ljmp
std
jno
pushl
in
mov
add
out
inc
add
insb
and
push
jae
decl
push
add
aaa
pop
dec
enter
data16
add
mov
lcall
sub
add
add
push
add
lcall
and
std
jg
jns
and
incl
lcall
dec
inc
add
loopne
mov
or
add
add
lcall
add
push
sar
sub
dec
push
sbb
jns
test
add
cmp
xchg
xor
ljmp
fistpl
lods
call
lret
mulb
incl
add
leave
cmpsl
add
jmp
add
mov
pushl
add
jmp
cmp
and
inc
add
imul
push
inc
add
mov
pop
mov
and
repz
adc
incl
xchg
push
mov
in
mov
and
ljmp
lea
jmp
add
add
add
add
mov
iret
ljmp
lcall
jmp
or
popf
mov
cwtl
xchg
fcomi
out
push
cltd
jl
dec
sbb
add
add
decl
insl
xlat
addb
add
cmp
test
test
jge
movb
add
fistpl
lods
imul
add
ret
pop
push
sub
xor
ret
add
jmp
mov
jge
imul
add
cmc
dec
ret
add
add
cs
out
push
add
in
insb
in
mov
adc
ljmp
fcomps
dec
aas
outsl
sub
mov
cmp
dec
mov
push
add
adc
incl
aad
mov
mov
or
fstps
insl
adc
fisttpll
outsb
mov
scas
and
incl
add
cmc
outsl
outsl
icebp
xchg
mov
shrl
add
int
inc
add
inc
add
cmp
cmp
jecxz
leave
popa
add
leave
dec
insl
sbb
dec
fdivr
xchg
push
divb
ljmp
add
jns
add
lcall
add
out
fistl
call
inc
add
add
and
pusha
add
push
mov
mov
mov
js
shl
add
rol
add
loopne
mov
add
inc
add
addl
push
mov
xor
add
xor
incl
add
mov
add
fwait
jns
xchg
data16
out
and
lcall
incl
jbe
pop
clc
pop
fldcw
pop
add
add
add
ss
dec
test
add
fwait
scas
adc
ljmp
mov
movl
push
inc
add
pushl
data16
jns
add
test
pop
jecxz
lds
cli
adc
jle
xlat
fdiv
inc
add
add
call
daa
add
add
mov
mov
or
sub
loope
or
decl
mov
je
add
rolb
add
inc
add
xor
decl
cmc
out
idivl
lods
outsb
fdivrs
fdivrs
add
hlt
mov
pusha
add
push
scas
mov
xor
pop
jns
adc
ljmp
lahf
fdivrl
insb
xor
dec
hlt
adc
sub
je
and
add
mov
sub
addl
add
add
add
inc
add
or
clc
cs
jmp
add
xlat
call
pushl
stos
xchg
lret
add
add
aas
push
xor
mov
imul
fidivrs
xchg
loop
addb
fwait
adc
pushl
ljmp
out
test
xlat
lds
inc
add
cmp
je
mov
dec
sbb
add
add
call
dec
xor
lcall
rolb
add
sub
add
jle
add
add
hlt
stos
xchg
js
imul
sbb
add
sbb
pop
add
mov
insb
dec
dec
pop
or
jno
cli
inc
add
roll
add
lea
add
mov
xor
jmp
mov
add
add
mov
jg
test
push
bound
incl
data16
incl
pushl
add
lds
test
push
adc
lcall
fldt
dec
inc
add
ret
aam
add
add
pusha
add
xor
lcall
mov
xor
call
popa
add
int
cmpsl
add
call
add
add
jmp
add
lock
add
add
push
ljmp
add
sbb
pop
inc
add
and
decl
mov
mov
inc
add
mov
cmp
jmp
add
pop
pop
lret
leave
insb
cwtl
scas
les
popa
add
mov
mov
add
dec
mov
jns
cwtl
int3
rcrl
pop
push
pop
lock
adc
in
test
xchg
jl
push
add
call
jmp
add
bound
decl
add
add
incl
pop
lahf
mov
push
sbb
add
hlt
mov
add
add
and
pushl
cmp
sbb
hlt
push
roll
add
add
decl
adc
ljmp
dec
icebp
adc
incl
jmp
mov
in
insb
mov
jmp
pop
cmp
sbb
add
pushl
add
addl
add
roll
repnz
sbb
cmpsl
add
pop
ss
dec
jecxz
pop
jl
mul
add
push
add
loope
mov
jne
scas
add
add
or
add
call
mov
stc
and
jo
jmp
call
dec
jge
gs
and
decl
outsb
sbb
add
int3
cmpsl
add
mov
or
insl
movsl
add
lcall
add
incl
sbb
add
adc
mov
add
mov
mov
add
add
cmp
sarb
out
hlt
test
inc
add
rcr
shrl
lock
add
cmpsb
add
mov
aaa
data16
data16
stos
bound
jle
cltd
or
add
push
or
add
add
lcall
ficoml
inc
add
add
arpl
inc
add
les
or
jb
call
add
mov
add
mov
sbb
push
add
out
jne
cmp
decl
add
loopne
and
decl
lret
clc
push
addl
and
add
jmp
incl
jmp
mov
cmp
fldt
stc
mov
sbb
add
add
call
add
jne
and
jmp
add
push
movl
hlt
fwait
cmp
cmp
xor
call
sbb
cmpsl
add
inc
add
mov
popa
add
outsl
cmpsb
add
inc
add
addr16
add
cli
push
mov
cltd
popa
add
lahf
dec
rcll
adc
incl
sbb
cmp
mov
loop
add
or
jne,pn
add
enter
outsb
fs
push
add
add
push
xchg
xlat
jecxz
fists
and
movsb
add
inc
add
cmc
ficoms
mov
add
pop
inc
add
cmpsb
add
add
add
jbe
add
mov
add
fists
in
outsl
pop
sahf
xor
setle
adc
lcall
add
lret
js
mov
fisubrs
add
mov
add
mov
pop
cmp
test
gs
mov
addl
mov
jp
add
push
add
pop
dec
ljmp
stc
addb
fwait
aad
dec
cmpsb
add
sub
add
pop
cmpsl
add
add
add
ja
xchg
imul
add
insb
addl
mov
lock
lcall
stos
loopne
out
divb
incl
add
pxor
sub
xchg
stos
add
jnp
sub
cmp
add
movsb
add
cmp
aas
mov
add
add
mov
call
daa
add
repnz
lahf
and
push
out
leave
dec
sbb
xchg
stos
mov
pop
out
in
les
mov
mov
ss
add
add
call
add
ds
aad
ss
add
mov
inc
add
add
cmc
movsl
add
ss
jns
lods
dec
sub
fistps
add
add
pop
outsl
push
add
lahf
mov
jl
xchg
scas
cmp
bound
call
int
rolb
gs
add
out
lods
add
add
pop
push
leave
xchg
ss
inc
add
mov
cmp
stc
xchg
rorb
movsb
add
and
decl
jmp
add
mov
movl
push
outsb
adc
add
in
ds
add
cs
dec
sbb
fcomip
cwtl
pop
mov
mov
lds
lock
fcoms
add
push
mov
insl
clc
sub
repnz
add
push
test
add
add
add
add
add
rolb
xchg
lock
or
out
inc
add
dec
lods
repnz
stos
rolb
add
add
roll
add
repz
pushf
and
add
daa
add
hlt
push
add
lods
or
add
add
add
arpl
call
xchg
mov
add
add
mov
imul
mov
sarb
ja
add
incl
mov
decl
std
iret
sahf
test
add
stos
sub
jbe
es
inc
add
pop
lcall
adc
push
xchg
out
out
adc
in
jnp
repz
add
lcall
add
add
pushl
jmp
add
rorb
out
mov
or
push
and
ljmp
loopne
addr16
lret
add
dec
test
sub
add
dec
sub
sbb
or
lea
jle
add
aam
and
xor
add
cltd
sub
mov
add
shlb
ljmp
sbb
int3
pop
mov
add
fmull
add
add
mov
movb
add
ljmp
add
add
mov
add
mov
add
jbe
xor
decl
testb
cmp
aaa
cs
ss
repz
aad
add
mov
rolb
cmp
add
add
aad
add
test
jmp
add
mov
add
add
xchg
jl
cwtl
jae
mov
add
sub
xchg
stos
pop
scas
dec
mov
add
jno
ljmp
loopne
mov
out
inc
add
frstor
add
jb
call
and
incl
or
mov
pop
push
add
adc
decl
add
call
add
mov
add
mov
dec
fnsave
add
repz
and
add
or
push
cmp
pop
cs
and
lcall
add
addb
hlt
das
push
add
jne
sub
ret
add
popf
lock
and
ds
jb
call
ja
mov
jnp
add
js
add
or
sbb
add
aas
loopne
mov
add
movsl
add
add
fiadds
xchg
popl
add
jns
jge
add
mov
in
aas
adc
pushl
add
jmp
xchg
push
dec
fnstsw
add
arpl
call
add
pushl
xchg
mov
pop
loopne
dec
inc
add
adc
incl
mov
movsb
add
aaa
and
jmp
fistpll
add
lods
and
decl
faddl
cs
pop
add
std
add
call
inc
add
aam
add
push
mov
shlb
mov
add
xor
cmc
push
icebp
pop
popa
add
push
add
push
jle
fsubs
mov
add
clc
rclb
cmc
push
add
rclb
mov
out
xor
pushl
add
or
pop
mov
pop
xchg
mov
ret
mov
cmp
sbb
mov
sbb
mov
mov
xor
ljmp
add
xchg
dec
jge
add
cwtl
xor
lcall
xchg
dec
lret
add
in
out
loop
int
and
lcall
add
cmp
mov
add
mov
add
cmp
push
aas
stos
inc
add
xor
cmp
jmp
inc
add
movl
fimull
and
inc
add
fadd
add
pushl
cmp
lcall
dec
or
in
sbb
jno
lcall
flds
add
in
mov
sbb
hlt
inc
add
mov
popf
arpl
incl
popf
rorb
inc
add
lahf
mov
add
int3
cmpsb
add
cmp
mov
dec
cs
iret
fwait
xlat
inc
add
sub
add
incl
sbb
add
add
add
add
add
decl
or
mov
add
iret
jmp
add
add
add
or
pop
pop
add
call
inc
add
add
lcall
push
add
mov
add
push
cld
int
jno
mov
movsb
add
jne
fisubrs
outsb
cmpsb
add
xchg
cmp
int
add
pop
lock
addr16
add
call
cmp
mov
add
mov
ficoml
jle,pn
dec
sub
add
fidivrs
pop
pop
int
add
inc
add
add
mov
lock
add
add
cmp
dec
mov
add
add
lods
adc
call
pushl
or
frstor
movsb
add
push
jnp
ja
test
mov
dec
stc
lds
push
add
add
outsb
js
movl
sbb
out
dec
adc
ljmp
add
fstpt
xchg
das
cmp
pop
ss
and
imul
add
ds
or
add
call
cs
push
dec
inc
add
add
in
mov
add
hlt
aas
push
add
js
pop
xchg
or
add
test
xor
lcall
test
add
aam
icebp
sti
jge
add
jmp
mov
sbb
call
add
int
cmp
out
inc
add
add
mov
int
mov
idivl
cld
aam
jbe
loope
ds
push
add
jle
cs
add
decl
jg
outsb
push
jns
sahf
in
clc
mov
scas
and
bound
ljmp
push
lods
idivb
push
data16
es
sbb
add
dec
sub
mov
add
add
mov
iret
call
ljmp
add
add
adc
sub
fsts
add
ja
add
sub
into
mov
jne
cmp
sub
shlb
std
mov
mov
int3
adc
incl
push
mov
stc
push
ret
add
sbb
fucom
add
mov
inc
add
jmp
rolb
xor
add
mov
decl
add
add
push
or
data16
cmpsl
add
add
or
xchg
cmp
incl
mov
add
movsl
add
add
add
mov
add
pushl
adc
call
push
add
test
dec
cmpsl
add
add
pushf
jle
or
push
add
add
cmp
daa
add
sub
add
out
jb
decl
ljmp
incl
and
fidivrs
inc
add
test
add
jle
add
bound
incl
pushl
decl
addb
and
call
ret
add
mov
mov
pushf
testl
add
xor
call
ret
add
add
add
aas
pusha
add
pop
das
push
add
in
int
rolb
pop
enter
in
in
pop
lods
xchg
fnsetpm(287
add
dec
addl
dec
imul
add
pop
sub
call
push
je
add
mov
xchg
arpl
call
push
push
add
add
sbb
xor
incl
add
add
mov
roll
add
outsl
or
rolb
fwait
sub
das
sbb
add
add
sbb
rol
add
stos
jge
fstps
into
adc
xchg
fcompl
jnp
ja
sub
call
add
dec
mov
iret
in
push
mov
add
addb
bound
pushl
add
lret
add
lret
incl
add
add
push
add
idivb
lahf
xchg
mov
add
movsl
add
push
aaa
ror
mov
jmp
add
lret
adc
pushl
fdivs
in
ja
cmp
inc
add
add
jno
ljmp
dec
mov
add
sub
add
inc
add
js
add
add
outsb
daa
add
test
stos
or
add
loop
out
lea
add
in
add
push
aad
std
stos
ret
add
add
mov
movb
enter
xchg
imul
jmp
cmp
add
inc
add
mov
jge
add
into
call
mov
add
sbb
stos
clc
roll
add
add
aas
loopne,pt
out
ret
addl
mov
push
add
inc
add
lret
cmp
incl
push
add
cmpsb
add
push
add
sub
in
mov
add
add
push
or
pop
adc
decl
popa
add
cmp
push
sarl
test
dec
jnp
add
add
xchg
lret
js
xchg
adc
push
add
out
bound
pushl
xlat
mov
call
imul
xchg
sbb
fsts
dec
stos
mov
add
jg
add
xchg
xor
jmp
add
add
or
lea
stos
pop
mov
mov
add
pushl
add
lret
lock
aam
cld
mov
in
movsl
add
add
dec
pushf
les
add
decl
add
into
in
push
mov
cmp
add
mov
cs
lcall
add
add
add
mov
sbb
push
iret
stos
add
add
dec
clc
adc
je
add
test
or
add
dec
movsl
add
decl
lret
jae
dec
push
bound
jmp
add
add
jo
jge
add
dec
push
add
xchg
imul
call
add
add
xor
jmp
add
cmp
jne
insb
popl
pushl
pop
mov
lds
xchg
inc
add
xor
push
add
pop
dec
addb
mov
icebp
xor
in
mov
repz
push
cmpsb
add
add
jge
dec
ss
add
xor
lcall
xor
push
add
decl
or
add
dec
nop
outsb
movsl
add
add
movsl
add
push
dec
xchg
mov
addb
add
mov
loope
inc
add
jg
shlb
add
jge
add
add
inc
add
inc
add
add
add
or
and
shlb
add
xchg
sbb
add
lret
cmp
sbb
add
jl
pop
mov
add
lret
sub
xchg
popf
push
lods
cli
add
cld
inc
add
stc
push
mov
or
movb
sbb
movsb
add
pop
icebp
push
dec
stos
push
je
ljmp
fisttps
add
add
out
icebp
insl
inc
add
fsubrs
add
push
mov
jne
add
aas
inc
add
sub
fdivrl
jne
sbb
dec
cmp
pop
lret
add
jno
sahf
ss
aam
xor
lods
mov
add
mov
fwait
jb
ljmp
arpl
lcall
add
enter
adc
incl
decl
lock
add
pushl
mov
add
mov
xchg
xchg
mov
add
movsl
add
add
xor
lcall
pushl
and
incl
sub
pop
add
cmp
pop
ret
add
int
cmc
roll
adc
jmp
add
add
enter
inc
add
lods
insl
add
incl
in
dec
hlt
xchg
movl
adc
lcall
jno
call
sub
add
movl
add
imul
add
xor
inc
add
xor
call
stc
clc
addl
ja
pushf
xchg
cwtl
xchg
dec
ja
push
dec
pop
mov
mov
fnstsw
add
cmc
mov
mov
pop
roll
sti
mov
sub
jnp
add
add
jmp
add
das
mov
mov
add
sub
add
add
add
clc
add
inc
add
xchg
js
add
xchg
int
ljmp
lcall
sahf
push
mov
add
pop
dec
imulb
inc
add
jno
pushl
mov
pop
add
idivl
inc
add
out
mov
js
sahf
addb
jno
jmp
add
mov
addl
out
into
lods
sub
mov
add
xchg
and
dec
jnp
add
add
jae
dec
popa
add
fucom
add
add
dec
iret
pop
pop
pusha
add
xchg
test
push
add
pop
dec
adc
add
pop
insl
lock
sbb
adc
add
add
hlt
aad
lcall
fnsave
mov
add
test
sti
xchg
or
outsb
fstl
incl
add
popa
add
mov
add
add
add
insl
jmp
add
imul
sbb
pushl
decl
jecxz
or
add
add
xchg
ret
adc
lcall
sbb
stos
daa
add
xchg
or
add
lds
inc
add
lcall
imulb
xchg
push
test
inc
add
insb
cmp
add
sbb
adc
and
jmp
inc
add
pop
add
push
add
xchg
push
add
aaa
jno
pushl
movb
sbb
fwait
hlt
inc
add
push
add
xchg
mov
add
div
roll
add
mov
cs
xchg
jne
mov
add
cmpsb
add
lahf
push
mov
add
jmp
incl
cld
sbb
ss
call
adc
ljmp
decl
add
add
ja
add
call
movsl
add
adc
ljmp
sbb
lret
data16
mov
lahf
inc
add
rorb
incl
add
add
pop
les
les
or
xchg
jno
ljmp
add
int
add
add
add
add
ljmp
aam
pushf
cmp
add
enter
sbb
add
add
incl
add
add
dec
movsl
add
add
add
js
add
xor
ljmp
add
add
addl
adc
add
add
adc
jle
mov
jb
ljmp
add
lods
or
mov
add
fidivs
pushf
add
and
add
out
add
jmp
add
mov
decl
repnz
jmp
popf
jge
add
xchg
mov
add
clc
aam
mov
mov
xchg
repz
jecxz
or
flds
pushl
add
loopne
aam
mov
jo
lcall
mov
add
addl
jg
ds
add
add
or
sbb
add
sahf
sahf
sbb
add
cwtl
cs
ja
sbb
dec
test
xor
lcall
testl
add
and
pop
in
pop
sahf
dec
lock
stc
scas
jp
push
add
test
addb
enter
lcall
into
pushf
dec
hlt
test
xor
cmp
ss
push
add
mov
add
ljmp
or
stc
push
pop
xor
push
add
cmp
xor
jmp
decl
fisttps
roll
orps
int
add
ss
add
iret
movb
in
mov
add
sbb
add
jecxz
int3
enter
xchg
sub
pop
movl
xchg
add
pop
and
pushl
add
das
repnz
jmp
rep
xor
pushl
js
add
cld
mov
arpl
sti
cmp
add
jb
pushl
fcoms
ret
daa
add
add
add
repz
add
add
imul
stc
dec
jl,pn
add
sbb
mov
ret
add
addl
icebp
icebp
lcall
mov
call
repnz
decl
int3
popa
add
push
push
in
adc
lcall
add
add
dec
lods
and
xchg
hlt
repz
int
ret
jl
pushf
add
add
ret
add
inc
add
incl
mov
cmp
in
sahf
adc
jmp
add
call
arpl
clc
int
add
mov
push
dec
addr16
add
movsl
add
add
sub
call
add
pushf
adc
lcall
xchg
dec
sahf
cli
repnz
add
imul
nop
mov
add
mov
enter
add
add
dec
mov
dec
adc
jmp
add
std
add
cmc
or
add
mov
add
push
add
sbb
add
ffreep
add
test
and
jmp
add
outsl
leave
scas
jbe
rolb
imul
or
aas
out
jg
rolb
add
fildll
push
add
add
je
add
add
sbb
mov
mov
cld
mov
mov
add
or
cmp
mov
add
mov
add
incl
add
loop
in
cmp
or
add
outsb
sbb
inc
add
shll
incl
add
add
dec
adc
out
test
jno
pushl
incl
add
adc
ljmp
add
add
inc
add
add
or
add
sub
add
mov
jmp
add
xchg
addb
aad
pop
roll
mov
in
aam
add
add
call
add
sbb
call
filds
ljmp
sub
jp
rcrb
aad
popa
add
pop
or
mov
add
jmp
incl
pop
add
add
add
dec
clc
mov
xchg
mov
daa
add
imul
popa
add
sahf
push
add
mov
ljmp
add
xor
js
xor
mov
add
add
cmp
add
jb
jmp
add
push
sbb
ret
add
lcall
mov
jecxz
notl
fisttps
and
fisubl
jg
add
jb
jmp
add
ficoms
add
adc
inc
add
cmp
inc
add
push
ljmp
addl
add
flds
add
pop
lea
rcrb
or
incl
call
roll
cli
data16
add
dec
lods
pop
ja
mov
sbb
call
pushl
add
cmpsl
add
add
add
js
out
xor
imul
in
cmc
pop
iret
dec
stos
scas
push
xchg
divl
xchg
sbb
push
push
in
mov
cmp
add
xor
ljmp
mov
add
rorb
add
push
fmuls
add
nop
jecxz
stos
pop
loope
dec
pushf
in
ja
mov
sbb
std
pop
add
adc
incl
add
insl
ds
bound
cmp
pop
inc
add
jno
decl
adc
add
rcll
sbb
pop
sbb
inc
add
add
mov
add
adc
enter
add
cmp
rcl
out
fnstenv
pushl
cmp
add
add
xor
js
add
mov
pusha
add
mov
call
add
int3
sbb
add
data16
test
cmp
add
addl
xor
add
enter
cli
inc
add
sub
add
xor
lcall
add
jns
add
push
add
faddl
call
pusha
add
sbb
cmpsl
add
add
call
outsb
cmp
cld
pushf
push
in
cltd
dec
add
jmp
jae
call
pop
add
mov
add
add
mov
inc
add
jmp
or
repz
add
push
add
test
cmp
fdiv
sub
xchg
mov
add
cltd
movsb
add
add
mov
aad
incb
add
add
iret
stos
cs
add
pop
add
add
fs
mov
push
pop
loopne
shrb
add
sahf
daa
add
call
xor
call
leave
add
call
add
xchg
push
add
call
dec
imul
or
mov
cmc
or
ds
add
sub
sahf
pop
aaa
movl
sbb
add
addb
add
loope
cmpsl
add
add
les
inc
add
roll
mov
pop
add
add
test
sbb
add
arpl
call
mov
xchg
sub
inc
add
add
ret
movb
add
rcll
add
popf
jns
add
fsubs
add
rcr
push
add
xor
ljmp
dec
xlat
fimuls
bound
dec
jne
xchg
fistl
add
mov
and
incl
add
xchg
xor
add
pop
add
or
jmp
inc
add
jle
sub
mov
mov
pop
addb
fdivs
add
mov
lods
lea
cmp
add
ljmp
add
inc
add
pop
ljmp
icebp
lds
loopne
dec
shll
call
add
jle
js
add
out
pushf
inc
add
xchg
lods
addb
add
ret
add
push
mov
jb
pushl
sub
pop
xchg
xchg
jbe
add
dec
divl
in
pop
inc
add
add
add
decb
add
fisubrl
add
pop
or
jmp
test
add
push
inc
add
add
and
cmp
push
lods
inc
add
js
pop
cmc
pop
in
inc
add
lahf
xor
jmp
add
add
dec
jns
lock
mov
stc
aas
mov
add
jo
std
in
mov
add
add
fnstenv
dec
and
incl
inc
add
cmp
ljmp
push
adc
add
ljmp
add
cmp
xchg
xchg
add
call
jmp
mov
dec
popf
and
lcall
add
xchg
aaa
mov
pusha
add
fwait
sbb
add
xor
add
icebp
test
cld
in
movsb
add
jecxz
test
rorl
add
add
imul
add
fistpl
cli
xchg
or
mov
dec
add
add
sbb
ret
add
xor
dec
mov
sub
add
mov
add
xor
add
addl
movb
mov
add
jno
lcall
call
xor
jmp
test
xchg
std
jne
add
sub
lock
inc
add
fcoml
lcall
sti
ffree
add
mov
ljmp
roll
add
xchg
roll
add
mov
mov
das
mov
add
xchg
push
popf
in
insb
stc
ds
lods
mov
add
ljmp
fsubs
add
add
sarl
push
add
nop
pop
add
add
add
ret
add
pushl
dec
pop
addb
add
add
decl
dec
xchg
fcoml
add
jecxz
movsl
add
dec
jns
and
jmp
add
jne
lret
cs
lods
les
lds
pushf
cld
add
fcomip
fwait
mov
push
jns
xor
jmp
add
pushf
inc
add
lods
mov
cmpsb
add
jmp
mov
adc
jmp
add
pushf
fucomi
mov
inc
add
adc
inc
add
pop
roll
and
call
mov
fcomps
add
cltd
imul
add
cmp
add
arpl
jnp
cmp
add
xchg
dec
pop
cli
jecxz
mov
lods
inc
add
and
jg
ret
add
add
jecxz
adc
ljmp
btr
into
ljmp
lds
cmp
add
add
or
push
add
pushl
sub
cld
aad
add
add
jge
cmp
adc
ljmp
inc
add
cmpsl
add
add
stos
out
lret
aas
mov
xchg
push
jno
incl
decl
add
sti
adc
pushl
add
add
incl
call
add
add
lds
aas
add
ljmp
push
add
mov
xchg
hlt
lret
mov
rdmsr
add
icebp
lds
dec
lret
add
call
add
leave
addl
and
incl
add
ja
dec
and
jmp
lret
jmp
add
std
fxch
jne
inc
add
dec
ret
add
out
mov
push
jae
push
jae
jmp
add
stos
sysret
add
mov
repz
into
aad
jnp
ret
or
pop
test
pop
pop
mov
push
add
test
add
pushl
add
pushl
add
fmul
mov
add
sub
lahf
aad
add
inc
add
bound
push
mov
lea
add
je
add
incl
roll
mov
xchg
cmp
pop
sbb
add
or
add
dec
aad
adc
rolb
add
ja
punpcklwd
call
out
hlt
loope
cmp
addb
push
enter
and
dec
pushf
dec
aaa
inc
add
ret
add
cmp
mov
je
jg
add
mov
add
out
or
add
dec
mov
add
add
dec
lahf
jb
decl
add
clc
popf
and
jmp
add
rolb
out
sbb
mov
add
add
call
add
loopne
ret
add
add
lret
dec
cld
bound
dec
mov
sbb
and
mov
add
dec
cmpsl
add
xor
push
call
add
add
movsl
add
arpl
call
add
dec
xchg
movl
pushl
sub
loop
repz
jmp
push
testl
add
rolb
add
add
pop
add
add
push
pop
fiadds
xchg
add
lock
fnstcw
pop
xor
pushl
call
dec
movsb
add
lcall
xor
add
rorb
add
add
jecxz
jmp
mov
add
add
add
fidivrs
push
adc
call
mov
ljmp
xor
mov
aaa
bound
lcall
add
stos
push
sbb
add
cmp
inc
add
dec
inc
add
pop
or
out
xchg
jmp
add
add
pop
stc
inc
add
repz
ficomps
pop
add
inc
add
add
fyl2xp1
cwtl
pop
das
aad
outsb
mov
ljmp
test
aad
add
add
jmp
add
mov
movsb
add
scas
pusha
add
xchg
xchg
xchg
dec
push
add
mov
call
sbb
addb
test
mov
add
jecxz
addl
and
push
jae
call
add
lahf
stos
xchg
cmp
xor
decl
mov
sbb
mov
sbb
mov
out
dec
cltd
data16
add
in
stos
call
mulb
pop
loope
psraw
push
add
rolb
add
add
lcall
add
bound
jns
push
dec
pop
add
add
add
mov
mov
xor
pushl
xchg
adc
leave
and
jle
push
add
sbb
mov
add
add
int
mov
ljmp
add
pushf
into
add
mov
push
test
int3
cld
mov
adc
incl
add
add
ficompl
mov
mov
push
cmp
arpl
pushl
add
fwait
addb
mov
add
add
cld
lds
inc
add
dec
addb
add
sti
pop
sbb
push
add
stc
dec
outsl
mov
cmp
push
add
or
sbb
add
ljmp
fisttps
add
inc
add
add
add
addl
sbb
add
cmp
in
mov
add
mov
xor
jmp
adc
ljmp
addl
adc
add
and
inc
add
add
add
js
and
jmp
add
mov
xchg
addl
add
lods
xor
xchg
mov
add
jnp
add
mov
mov
add
cltd
or
xlat
sbb
cmp
add
inc
add
repz
lods
jge
movb
imul
int3
jmp
sar
repnz
add
out
movl
add
add
add
imul
add
jmp
fwait
or
push
add
cld
jg
mov
mov
mov
pop
push
in
pop
mov
clc
aaa
mov
mov
dec
cmp
add
sbb
int
push
popa
add
stc
cmp
or
into
out
push
popa
add
push
lret
add
add
jns
imul
push
jo
jmp
add
push
add
je
add
cld
insb
movl
add
adc
cmp
add
fstpt
add
mov
dec
cmp
xchg
add
and
call
dec
or
sub
pop
clc
fadds
add
xchg
sub
mov
add
pushl
decl
xchg
push
out
mov
in
aaa
add
xchg
push
add
pop
je
nop
out
test
add
cltd
mov
cmp
add
mov
pushf
fsubs
rcr
loopne
sub
addl
xchg
inc
add
fsts
add
lea
add
mov
xchg
loopne
ret
add
in
adc
decl
testl
add
les
aam
bound
decl
es
jnp
push
lods
add
add
nop
out
mov
add
clc
repnz
jae
decl
push
add
add
sbb
add
cmp
pop
out
push
add
cs
int3
lcall
xchg
pop
rolb
add
add
clc
je
fucompp
cmpsl
add
pop
daa
add
add
or
ljmp
in
mov
add
add
add
iret
cmc
mov
add
add
add
decl
ljmp
inc
add
pop
addb
addb
add
push
mov
add
xlat
sbb
push
mov
test
jno
dec
pop
sub
out
dec
cmpsb
add
lea
push
add
sub
push
mov
mov
jb
faddl
cmp
jmp
decl
add
add
out
bound
lcall
incl
add
std
mov
add
ret
add
add
cmp
add
ret
jecxz
dec
sbb
add
les
loope
addb
enter
fxam
add
aad
addl
push
mov
add
xchg
out
hlt
dec
add
das
fbld
dec
xor
decl
add
jnp
mov
lea
incl
call
xor
call
add
jmp
or
cmp
xchg
and
decl
pushf
ja
insl
nop
xchg
jno
jmp
add
pop
loop
or
jo
call
add
movsl
add
xor
call
iret
and
incl
dec
xchg
lock
xchg
or
pop
jp
dec
jb
lcall
in
dec
arpl
lcall
sub
adc
decl
call
lcall
add
in
inc
add
rcll
lcall
add
xor
fcompl
faddp
add
add
push
mov
addl
add
ret
dec
push
mov
add
adc
jle
add
cmp
cli
insl
pop
xchg
daa
add
sbb
add
adc
add
pop
mov
fwait
cmp
icebp
out
add
aad
fwait
push
pop
add
jbe
add
add
ljmp
stc
pop
std
clc
add
inc
add
sbb
adc
call
adc
ljmp
arpl
lcall
out
aaa
mov
push
mov
aas
addb
mov
out
pop
xchg
xchg
movsl
add
add
call
and
jae
decl
stos
fsubl
add
jg
add
cmp
sbb
pop
cld
rolb
sbb
in
sub
dec
out
jl
iret
xor
inc
add
ljmp
scas
int
push
add
add
or
add
pop
add
incl
test
dec
aam
add
push
lock
push
add
adc
test
lods
jo
ljmp
int
pop
sub
lods
push
xorps
add
add
in
in
int3
inc
add
nop
and
and
pushl
sub
ljmp
add
xchg
push
add
sahf
push
sbb
jg
pop
fnstenv
or
push
idiv
popf
pushf
outsb
sub
jp
and
jmp
add
movl
imul
push
repz
cmp
add
adc
add
bound
lcall
ret
add
lcall
add
ljmp
jp
add
mov
add
push
add
lret
xchg
pusha
add
call
call
and
ljmp
or
push
add
decl
inc
add
bound
ficoml
and
decl
add
sti
sbb
dec
mov
pop
or
mov
sbb
pop
call
and
decl
push
add
xor
call
add
add
pop
xchg
sub
dec
cli
mov
and
lcall
icebp
adc
call
mov
add
scas
movsb
add
mov
mov
add
pop
xor
decl
cmp
sbb
add
cmpsb
add
cmp
add
gs
inc
add
mov
xor
call
add
add
cld
sar
pop
add
popa
add
stos
push
add
mov
enter
call
cs
ret
add
add
cmp
add
roll
mov
cmpsb
add
add
pop
add
jmp
add
dec
cmp
fsubl
int3
ds
sbb
mov
les
add
jmp
inc
add
roll
pop
pop
out
and
pop
sbb
add
add
loop
xchg
in
insb
and
incl
push
inc
add
hlt
cs
add
add
pusha
add
adc
add
shlb
aas
jmp
scas
loopne
mov
les
ficompl
gs
add
pushf
scas
fsubs
add
jecxz
aad
add
decl
fwait
push
xor
and
jnp
push
push
sbb
add
lcall
inc
add
hlt
and
call
xor
add
imul
mov
mov
push
add
jg
add
jo
decl
inc
add
push
ljmp
jmp
add
add
push
add
daa
add
sbb
mov
add
lahf
xchg
inc
add
add
test
jle
aas
lahf
xrelease
test
mov
cld
and
pushl
add
test
sbb
add
es
mov
add
out
sub
dec
xor
mov
add
xchg
clc
jb
ljmp
xlat
lds
mov
mov
aad
add
aad
cmpsb
add
add
into
lea
add
mov
and
inc
add
ljmp
call
add
incl
pushf
push
mov
lods
cmp
xor
decl
push
add
mov
add
lret
movsb
add
add
add
xchg
adc
test
pop
add
aam
mov
mov
add
push
idiv
xor
add
add
pushl
cmp
xchg
xor
add
add
cwtl
pop
paddw
pop
jae
decl
inc
add
cmp
xlat
cmp
add
mov
add
or
add
adc
into
mov
lcall
cmp
pop
lret
cmp
xchg
lods
std
imul
push
add
adc
ljmp
pop
fsubr
push
push
stos
jno
ljmp
xor
decl
cmp
aas
adc
call
fistps
cmpsl
add
and
cmp
or
mov
aam
add
inc
add
nop
ret
add
push
aad
cli
bound
decl
movb
add
jmp
add
jmp
adc
decl
xor
call
mov
push
add
cmp
out
dec
out
push
add
lret
add
mov
arpl
lcall
bnd
repnz
add
push
add
inc
add
mov
data16
add
add
lret
sub
add
enter
add
test
mov
jnp
mov
sbb
pop
add
ljmp
mov
add
clc
std
inc
add
cs
cmp
incl
add
jmp
addl
out
dec
or
mov
sbb
add
add
cwtl
in
xor
sahf
fidivrs
add
xchg
xor
sbb
add
adc
lcall
add
iret
add
jns
add
lahf
xlat
dec
int
add
or
inc
add
adc
lahf
mov
mov
jle
add
aaa
es
jmp
push
add
push
test
in
or
add
xchg
pop
sub
add
cld
lahf
xor
pushl
add
mov
mov
add
sbb
fistps
addb
ret
stos
rcll
add
jmp
lock
add
add
out
dec
cwtl
and
lcall
mov
add
sub
movsl
add
call
add
sbb
rcrb
lret
add
lods
mov
lcall
lds
mov
out
xor
dec
xchg
mov
mov
pop
iret
add
ljmp
pop
inc
add
dec
mov
lock
call
addb
xchg
mov
xor
add
and
call
lcall
add
outsl
cmp
pop
adc
add
mov
push
filds
add
add
mov
mov
add
outsb
dec
imul
inc
add
xchg
jno
lcall
pop
push
movb
mov
push
add
daa
add
add
dec
or
jmp
incl
add
ss
lods
mov
cmp
scas
xor
call
mov
add
mov
mov
int
jns
add
jmp
dec
test
xor
inc
add
inc
add
sbb
add
out
add
jge
pop
mov
sub
out
push
push
add
dec
sbb
rolb
lcall
ss
add
add
push
movb
add
add
addl
xchg
fldl
add
jl
jecxz
mov
add
add
mov
add
lods
roll
leave
pop
cmpsb
add
jmp
pusha
add
cmpsl
add
add
add
call
cli
xor
jmp
add
aaa
addb
rcl
out
push
adc
test
inc
add
push
lahf
pop
dec
ret
add
ljmp
addb
sub
add
mov
lret
add
add
aam
hlt
xor
in
cld
cmp
or
add
xor
decl
fndisi(8087
add
ljmp
enter
repnz
add
call
dec
nop
push
in
outsb
ret
add
add
arpl
pushl
aam
dec
mulb
add
mov
add
xor
decl
add
lcall
pop
push
arpl
jmp
add
add
mov
add
pop
or
add
sahf
je
cmp
jmp
add
mov
dec
xor
pushl
mov
fcomp
lcall
add
repnz
jmp
addl
lock
addl
addb
add
add
add
sbb
add
fists
jmp
add
pop
sub
mov
outsl
ret
add
inc
add
mov
jmp
push
sbb
icebp
dec
divb
add
push
lds
scas
jmp
inc
add
push
movb
int3
aaa
sbb
add
loop
fmuls
add
aas
iret
mov
jmp
add
add
outsl
pusha
add
mov
add
add
add
lcall
add
or
mov
pop
push
add
repnz
ficoms
incl
push
scas
lods
sbb
mov
nop
into
pushf
push
data16
mov
std
xchg
mov
add
add
incl
add
add
push
mov
movsb
add
stos
sahf
mov
add
add
out
jmp
cs
sbb
add
or
fsubrp
cmp
aad
add
add
push
jge
or
add
lcall
mov
daa
add
loope
mov
bound
mov
add
add
cmp
jg
add
call
add
pop
lret
add
mov
and
push
sbb
push
cs
mov
lcall
xchg
test
add
call
xor
ljmp
leave
fdivr
mov
sub
add
cmpsb
add
bound
cmp
dec
addb
lds
xlat
test
add
xchg
insl
cmp
test
cmp
fldt
push
add
push
jmp
add
js
add
xchg
mov
insb
fwait
out
xchg
mov
stos
shlb
ljmp
jno
ljmp
sahf
imulb
scas
mov
add
icebp
add
lcall
inc
add
push
jp
add
loop
cmp
fwait
bound
incl
imul
jbe
add
das
addl
add
jmp
add
jo
cld
jo
jmp
pop
test
daa
add
add
roll
add
adc
incl
add
fwait
pop
loop
loop
pop
insl
test
outsb
mov
mov
xchg
divb
add
lock
fdivrs
mov
dec
pop
test
xor
add
push
dec
cwtl
xor
jmp
add
jmp
fldenv
add
jle
and
fstps
push
call
push
add
out
push
je
add
pop
fcmove
sub
pop
add
ljmp
add
add
bound
pushl
jno
cli
scas
push
out
insb
std
fldenv
mov
mov
jg
jge
add
ljmp
mov
dec
sub
aam
nop
add
push
push
addl
sub
mov
mov
loop
jg
movsl
add
fistpl
add
mov
das
sub
iret
mov
add
or
inc
add
stos
fiaddl
add
stc
or
cwtl
fsts
fidivrl
add
push
mov
in
jae
call
dec
fcmovb
add
add
add
inc
add
xor
stc
test
mov
add
int3
out
add
dec
lock
div
repz
pushl
add
std
lahf
int
cs
dec
sub
add
mov
add
pop
add
add
add
mov
push
add
add
call
or
pusha
add
xchg
ficoml
add
dec
sbb
cmp
stos
jg
add
dec
jmp
cmp
push
mov
mov
fdivl
jecxz
aas
ret
add
jno
ljmp
sbb
mov
add
xchg
jecxz
mov
add
push
mov
and
jmp
xchg
cmp
dec
add
pop
mov
outsb
imul
add
loop
adc
call
pushl
dec
adc
std
inc
add
mov
mov
mov
out
roll
add
add
push
add
cmp
add
movb
push
add
ret
add
add
cld
stos
inc
add
jno
inc
add
add
lahf
and
jmp
add
inc
add
addr16
xor
decl
pusha
add
push
add
ficoml
add
inc
add
push
add
adc
incl
jmp
add
add
add
mov
push
add
add
add
sub
call
mov
add
add
aas
push
mov
push
add
jns
imul
fucomi
push
stc
lea
sbb
insb
ljmp
add
imul
pop
out
mov
cmp
loop
fdivrp
cmp
add
cmpsl
add
add
mov
add
addb
inc
add
add
inc
add
lea
add
out
inc
add
add
jmp
push
jmp
lahf
add
and
xchg
mov
add
add
add
jl
add
arpl
ljmp
xchg
sub
push
stos
push
add
icebp
pop
add
add
mov
stc
loopne
mov
mov
add
imul
lcall
add
sbb
decl
test
ss
add
in
std
mov
iret
fwait
add
decl
push
add
add
jmp
xchg
push
pop
fidivrl
call
push
adc
iret
push
ret
add
shrb
add
jno
incl
cmp
dec
pushf
sub
dec
into
mov
and
inc
add
add
decl
out
in
dec
jno
mov
fiaddl
or
outsb
push
mov
cmc
adc
mov
lcall
int
icebp
addb
xor
ljmp
jmp
xchg
dec
fimull
mov
jg
lret
in
sub
daa
add
pushl
xchg
cmp
add
pusha
add
insl
pmaxub
add
inc
add
mov
add
into
mov
pushl
xor
incl
dec
pushf
daa
add
aad
add
roll
add
pop
jae
ljmp
ret
add
lods
gs
lods
add
mov
ja
push
dec
jmp
add
pop
jnp
dec
mov
dec
mov
je
xchg
pop
lock
cmp
fdivs
add
pop
lret
mov
add
sub
dec
mov
mov
mov
lret
mov
cmp
incl
mov
lcall
xchg
out
mov
stos
mov
xor
dec
outsl
rolb
addb
add
xchg
out
ret
add
add
add
lds
pop
pop
adc
movsl
add
call
add
lcall
jnp
add
loop
mov
jle
das
lock
lods
in
add
jmp
xor
xchg
out
sub
add
jns
push
add
in
push
add
add
adc
pushl
lds
aad
cmp
inc
add
xor
add
insl
mov
cs
shrl
mov
add
add
movb
mov
out
and
fnsave
loop
mov
add
aaa
xor
push
in
pop
pop
lahf
sub
data16
add
sub
cmp
aam
push
add
fcmovb
add
lret
push
add
fldt
aam
mov
stos
loopne
lcall
decl
stos
cmp
add
fwait
and
decl
ret
add
cltd
push
add
add
cmp
add
ret
add
punpcklwd
call
mov
jns
movl
iret
mov
stos
xchg
pop
add
add
jns
cmp
roll
add
or
std
jnp
cmp
add
add
add
mov
pop
mov
rolb
add
add
add
push
in
pop
int
pop
lcall
or
popa
add
mov
shl
add
add
call
mov
mov
fadd
add
lahf
dec
xchg
pop
jno
fistl
aaa
mov
call
das
imul
add
pop
add
add
add
stc
mov
add
add
mov
lcall
mov
hlt
push
mov
add
movl
pop
xchg
ds
aaa
sbb
add
popa
add
mov
jecxz
call
add
lcall
inc
add
add
push
loope
adc
lcall
jmp
ljmp
push
add
sbb
mov
jno
inc
add
jmp
ljmp
jne
add
cmc
xlat
push
add
jl
dec
xchg
xchg
mov
mov
movsl
add
jne
jnp
adc
cmp
adc
jns
add
sub
add
cltd
adc
xlat
add
jmp
add
add
add
jb
call
jmp
xchg
jo
incl
cmc
add
jmp
dec
pop
adc
jmp
add
add
mov
xchg
sub
add
idivb
movl
add
push
jnp
add
fwait
rcr
adc
dec
arpl
lcall
test
pop
pop
outsl
or
mov
pop
movsb
add
pop
add
add
clc
mov
dec
xchg
jmp
lret
sbb
push
add
test
add
shlb
call
test
inc
add
pushl
rcrb
inc
add
add
insl
movl
iret
add
jmp
xor
call
xchg
push
loope
sbb
add
jle
shll
add
adc
inc
add
insl
add
jmp
add
pop
movsb
add
cli
lret
sbb
je
pop
rorl
add
incl
add
imul
stc
dec
das
in
sub
adc
decl
mov
lcall
add
add
adc
ljmp
imul
pop
add
mov
in
mov
sub
cld
push
add
add
add
fbld
inc
add
daa
add
mov
add
lret
dec
in
cwtl
cmp
add
mov
jecxz
ds
inc
add
mov
je
adc
push
adc
call
jae
lcall
clc
rcll
addl
add
stos
cs
pop
addb
add
out
cli
push
jns
mov
cltd
icebp
sbb
jnp
movb
aas
faddl
arpl
pushl
push
jo
lcall
jecxz
xchg
scas
cs
add
jge
add
lcall
add
add
loop
cltd
mov
add
and
inc
add
stos
sbb
sbb
sub
jmp
cmp
aam
add
dec
sub
sarb
add
mov
mov
roll
add
ljmp
jmp
repnz
decl
imul
dec
repnz
sbb
cwtl
mov
scas
sarb
les
nop
js
mov
pop
data16
add
add
add
dec
dec
data16
jmp
add
roll
ret
add
cmpsl
add
add
add
dec
test
lret
cld
movb
arpl
incl
jmp
add
xor
jnp
add
add
push
mov
push
cmp
or
sbb
lret
aam
add
add
out
sti
pop
inc
add
push
add
mov
add
in
ds
xor
lcall
sub
outsb
mov
aas
lret
addb
xor
repnz
addb
adc
mov
in
dec
sbb
es
add
loope
into
js
cmp
into
in
inc
add
and
incl
add
add
js
add
add
cwtl
add
dec
mov
adc
lcall
loop
je
jnp
ficoms
add
clc
xor
jb
incl
sub
mov
fildl
insb
pop
pop
dec
sti
fcmovne
jge
mov
movl
scas
mov
cmp
movb
inc
add
xor
incl
pop
cmc
in
movb
inc
add
xchg
movsl
add
cli
pop
ljmp
movsb
add
add
fiaddl
add
imul
nop
into
inc
add
add
bound
ljmp
cli
addb
add
mov
hlt
cmp
addl
add
daa
add
lahf
sbb
lret
scas
aaa
in
sti
push
add
pop
shrl
shr
jbe
pop
mov
jmp
call
fldcw
add
data16
addl
add
add
sbb
mov
add
dec
pop
dec
jae
decl
add
call
mov
add
mov
xchg
addl
cli
insb
out
jnp
sbb
daa
add
call
xchg
je
stc
or
decl
mov
jae
call
loope
bound
jmp
in
xchg
lret
loope
sbb
iret
jb
jmp
in
xor
ljmp
add
push
cmp
push
addb
add
pop
mov
cltd
clc
cmp
add
fiaddl
dec
or
cld
mov
add
jge
cwtl
loop
xor
movl
decl
push
add
insb
sub
sbb
dec
and
push
pop
frstpm(287
add
xor
add
add
add
xchg
add
and
incl
lcall
push
fisubrl
jnp
mov
pop
popa
add
mov
bound
lcall
add
mov
dec
pop
add
add
push
in
imul
js
add
add
je
js
xchg
into
aaa
cmc
into
les
int
iret
mov
pop
lods
outsb
lret
ret
add
movl
popa
add
sti
mov
jnp
cli
inc
add
add
mov
stc
xor
shl
or
out
mov
or
ljmp
dec
pusha
add
jae
jmp
add
lcall
aaa
xor
sub
test
lds
and
in
stos
push
add
lds
adc
call
loope
push
mov
ljmp
inc
add
push
fsubrs
add
cmp
xchg
ljmp
inc
add
scas
push
ret
add
pushf
push
add
daa
add
in
pop
mov
sbb
arpl
call
add
popf
jge
add
repnz
and
pushl
lods
addb
add
xor
push
sbb
adc
pushl
dec
movl
sub
loopne
cmp
shrb
mov
and
addl
add
sbb
pop
pop
js
add
sub
add
jmp
add
movsl
add
add
addl
add
lcall
outsb
cmp
mov
dec
cld
test
add
add
and
ljmp
pop
pop
xor
lcall
jge
mov
inc
add
jp
je
inc
add
add
and
call
xchg
cmp
xor
in
pop
pop
dec
inc
add
mov
add
pop
sbb
sub
add
add
fisubs
xor
cmp
add
add
inc
add
fcmove
lahf
mov
ljmp
insl
mov
arpl
jmp
inc
add
cmp
cli
mov
xchg
mov
push
add
sbb
adc
jmp
add
idiv
roll
add
mov
add
and
jmp
pushl
inc
add
cmpsl
add
adc
jmp
repz
call
lcall
fs
into
aaa
aad
adc
call
add
in
lahf
sub
or
push
add
sbb
add
icebp
lret
jl
pop
and
call
sbb
add
sub
add
add
sub
add
lea
std
fdiv
jecxz
adc
add
xor
ljmp
xchg
fisubs
mov
clc
sbb
pushl
add
fisttpll
add
fdivs
push
add
push
mov
jbe
add
sub
mov
frstor
add
stc
repnz
jg
mov
call
inc
add
lret
push
dec
mov
jne
push
add
sbb
sbb
fwait
in
fwait
or
loopne
out
mov
mov
add
loop
cld
shll
jle
jp
mov
ljmp
dec
imul
in
imul
add
adc
lcall
mov
sub
and
jle
add
jp
add
out
cmp
movb
add
and
and
in
scas
add
decl
mov
lret
mov
add
xlat
popa
add
fwait
mov
add
pop
adc
jmp
ficomps
add
cmp
out
mov
dec
popa
add
jmp
push
pusha
add
push
inc
add
pushl
decl
push
add
or
ljmp
add
sbb
add
mov
cmp
add
call
sub
clc
fsubl
movb
jmp
or
inc
add
xor
push
mov
push
xchg
imul
ljmp
movsb
add
mov
test
jb,pt
jmp
push
add
sbb
fisubs
add
sti
out
sbb
add
pushl
outsl
divl
add
fcmovnbe
jae
pushl
add
or
hlt
xchg
lods
mov
jbe
mov
testl
add
das
sub
add
movb
xchg
dec
jmp
add
add
addb
pop
data16
add
add
ljmp
jo
jmp
add
stc
inc
add
sub
sub
shrb
add
inc
add
mov
add
incl
ljmp
fnstenv
ret
push
out
test
nop
cmp
scas
mov
add
aad
add
push
stos
lock
lcall
scas
lcall
add
add
clc
and
ljmp
fnstcw
add
shll
add
add
lret
out
mov
add
ljmp
add
cmp
add
and
fldl
popa
add
stos
xchg
mov
repnz
movb
add
loop
dec
mov
add
push
xchg
scas
push
and
inc
add
into
cwtl
lcall
add
xor
mov
push
add
call
sub
add
mov
scas
cmp
add
dec
pop
roll
adc
inc
add
call
je
push
jg
outsb
sub
add
out
cmp
push
add
nop
xchg
fiadds
jecxz
addr16
repz
ljmp
sub
or
jmp
mov
add
sbb
add
xor
incl
sub
enter
add
xchg
fucomi
add
fnstenv
ljmp
cmp
inc
add
add
dec
jne
add
call
mov
add
add
cmpsl
add
add
rcrb
mov
jg
add
xchg
adc
jge
mov
add
add
cmp
add
pop
sub
mov
mov
add
and
incl
mov
push
add
mov
jns
psubsw
int
add
xor
mov
add
dec
mov
xchg
xor
ljmp
add
mov
add
mov
inc
add
add
iret
pushf
push
add
cli
lods
lods
movl
cli
mov
inc
add
call
xor
incl
add
outsl
pop
jg
dec
inc
add
adc
aas
loop
loope
jg
add
fwait
push
lret
out
pop
nop
outsl
aas
pop
cmpsl
add
icebp
push
pop
jmp
ja
icebp
and
call
lcall
imul
jmp
pusha
add
lcall
pop
adc
lock
add
mov
aam
add
mov
mov
add
push
adc
insl
hlt
out
dec
mov
insl
xchg
pop
rcll
add
rcrb
push
add
xchg
inc
add
mov
cli
jo
inc
add
add
push
sub
add
mov
dec
sbb
add
jns
add
lcall
add
inc
add
jp
pop
test
add
dec
sub
lods
addl
fstps
mov
dec
add
lcall
add
pop
movb
dec
dec
sub
pusha
add
jecxz
add
pushf
and
add
pop
add
add
test
lcall
xchg
dec
jg
add
test
xchg
jl
add
add
ljmp
or
ljmp
or
add
add
decl
sbb
jmp
add
pop
add
jg
add
dec
jmp
push
jmp
pusha
add
mov
les
fnsave
add
mov
add
and
fidivs
decl
push
add
lds
inc
add
sub
adc
jmp
dec
std
mov
frstor
incl
fbstp
add
bound
inc
add
lock
xchg
mov
mov
mov
inc
add
adc
push
dec
xchg
mov
lcall
iret
mov
add
inc
add
mov
daa
add
add
add
je
add
add
xor
sarl
add
jmp
add
lea
cli
dec
push
in
cmpsl
add
add
or
add
rcrl
test
unpckhps
push
std
mov
add
add
ret
add
add
add
add
addr16
and
nop
dec
insl
push
pop
int
push
sbb
and
jnp
dec
jo
incl
add
push
mov
sbb
add
das
mov
add
call
bound
decl
out
in
mov
pop
pop
jbe
add
and
cmp
faddl
inc
add
out
in
shrl
add
cmp
incl
lcall
pop
addb
add
fwait
in
scas
cmp
shrl
add
or
and
fcomps
fistps
mov
sub
movl
xor
call
cmp
call
jge
stos
jmp
add
mov
add
jmp
mov
xchg
pop
lret
add
pop
lods
or
add
addl
and
test
sti
add
std
jnp
mov
movl
and
decl
iret
stc
cmp
sbb
mov
add
cmp
mov
shlb
mov
add
push
add
popa
add
mov
add
dec
push
add
lcall
ss
pushf
pop
jb
decl
jp
add
add
rorl
add
leave
xor
call
add
add
mov
movsb
add
pop
lods
addb
ss
add
loop
push
add
setnp
pop
push
add
dec
sbb
jae
pushl
lcall
add
add
fstp
cmp
add
mov
add
inc
add
pop
hlt
ja
and
clc
pop
aas
pushf
je
jge
jo
lcall
add
ficompl
add
add
xchg
push
add
inc
add
mov
mov
fcmovbe
mov
jmp
icebp
fcompl
sahf
add
loop
adc
call
cmp
scas
test
mov
addl
and
call
add
push
add
mov
or
mov
sbb
mov
add
sub
add
inc
add
and
inc
add
add
das
jo
ljmp
add
icebp
out
fists
data16
add
movsb
add
out
xor
fwait
lret
mov
pushl
add
push
add
pop
cltd
daa
add
jmp
fidivrs
xchg
push
add
ljmp
xchg
pop
je
add
add
lcall
out
xchg
push
add
xlat
jae
jmp
jmp
add
imul
add
pushl
ljmp
jmp
mov
loope
pushf
cmp
pop
ss
add
mov
add
adc
call
inc
add
xchg
push
add
cmp
add
dec
iret
pop
and
jmp
add
cmp
pop
into
adc
test
arpl
out
out
xchg
fcmovne
xchg
daa
add
jmp
adc
or
cld
cltd
pop
add
jmp
add
sub
inc
add
or
mov
mov
add
add
lods
jo
decl
stos
inc
add
gs
repz
repz
mov
nop
scas
rolb
out
addb
add
mov
jmp
push
jg
add
and
sub
inc
add
pop
push
xor
add
enter
add
test
cmp
int
add
add
push
cld
aad
add
inc
add
jmp
dec
lods
xchg
push
movsl
add
add
jmp
aam
add
xchg
dec
filds
push
int3
sbb
mov
jl
add
add
jl
aam
mov
add
add
add
mov
add
call
mov
adc
cmp
xor
dec
imul
add
call
call
fildl
push
add
adc
jl
add
lcall
add
adc
jmp
add
insl
scas
sahf
mov
sub
movl
push
or
cmp
pop
shlb
lcall
add
incl
mov
jl
dec
push
add
jle
add
cmp
dec
xchg
ret
sub
add
add
cwtl
xchg
in
cmp
jmp
add
and
decl
test
adc
add
hlt
addl
add
dec
ja
add
add
addb
add
jnp
rorl
shll
sbb
dec
jnp
add
aaa
jmp
add
pushf
pop
and
pushl
add
roll
loopne
aas
add
ljmp
pop
mov
add
call
add
push
add
out
cwtl
roll
pusha
add
xor
pushl
les
test
mov
pushl
add
mov
jmp
add
add
dec
add
and
sti
or
mov
add
add
jmp
cmp
out
mov
fwait
inc
add
xchg
xlat
filds
add
sbb
add
push
lcall
movsl
add
add
mov
imul
cmp
loopne
cmpsl
add
aaa
add
decl
mov
inc
add
add
cli
leave
mov
add
ss
xor
call
jge
and
rcl
jbe
jno
ljmp
adc
pushl
add
mov
mov
mov
rolb
lcall
add
bound
pushl
push
addb
push
add
sarl
xchg
movsb
add
incl
add
jnp
cmp
inc
add
call
xchg
imul
xor
decl
mov
inc
add
sbb
pushf
sub
decl
add
into
push
scas
xlat
loop
jge
add
stos
fnstsw
mov
lods
push
add
sub
aad
dec
inc
add
dec
scas
cmp
mov
add
int3
or
inc
add
pop
push
js
xchg
fistl
push
add
mov
sbb
jbe
fucom
add
std
lret
fwait
int3
hlt
dec
xor
inc
add
rolb
add
add
movl
cmpsl
add
dec
int
jnp
aam
lahf
and
push
jmp
jle
add
lret
lret
add
ja
fcmovb
add
adc
jmp
add
jno
lcall
add
negb
push
pop
sbb
int
sbb
add
movsl
add
mov
xchg
pop
pop
nop
lahf
out
inc
add
push
add
dec
xchg
xor
lcall
sbb
inc
add
enter
ljmp
out
movsl
add
call
dec
lods
ret
jo
dec
int3
sbb
mov
nop
mov
sub
leave
fs
in
jp
push
leave
aam
and
pushl
add
or
add
add
aas
aam
stos
movl
rcrl
lcall
sub
add
jmp
add
dec
in
inc
add
cs
add
add
xchg
jge
cmp
dec
xor
incl
and
ljmp
pusha
add
movsl
add
incl
and
jmp
in
call
dec
pop
je
mov
push
pop
int3
and
test
add
lret
inc
add
add
imul
stc
sbb
add
cs
fsubrp
add
call
add
mov
xchg
mov
addb
add
xchg
push
or
push
add
mov
cmp
call
sbb
out
fmul
fcmovnbe
and
in
cli
insb
and
jmp
add
setl
xlat
addl
addb
cwtl
add
nop
add
test
addl
add
aad
movsl
add
mov
pushl
ds
jne
add
decl
add
fnstsw
mov
add
add
lock
mov
jo
call
adc
pushl
lahf
lods
stos
sub
imul
loop
insb
daa
add
pushf
mov
add
ljmp
mov
clc
xor
pushl
add
popf
mulb
enter
mov
mov
clc
sbb
lcall
mov
and
scas
jmp
pop
mov
pushl
add
cmpsb
add
add
aad
lock
jmp
out
cmp
jge
daa
add
add
add
mov
sti
dec
rcrb
aas
out
inc
add
add
ficompl
out
loope
call
jbe
adc
out
xchg
ret
movsb
add
rorb
ss
add
pop
add
add
pushf
je
add
add
mov
cmp
clc
cld
add
mov
add
lods
rorb
add
hlt
adc
add
jo
jmp
xor
lcall
lret
dec
aas
mov
dec
pop
inc
add
add
insl
cltd
mov
popa
add
xor
decl
lods
pop
aas
pop
push
call
mov
lods
stc
popf
add
push
xchg
out
cwtl
scas
movb
add
add
add
or
mov
arpl
decl
adc
sbb
in
enter
in
movsl
add
ljmp
sbb
jge
fstpt
sub
mov
mov
ret
inc
add
fdivrl
repnz
add
add
add
pushl
adc
dec
xor
ljmp
ljmp
in
cli
mov
inc
add
mov
jb
pushl
sub
add
enter
pop
or
in
add
cmpsl
add
pop
sub
add
addb
mov
push
addl
add
sub
ds
inc
add
jmp
add
sub
mov
nop
mov
add
inc
add
mov
ja
add
nop
in
xchg
xor
jmp
or
ss
popa
add
xlat
pop
outsl
sub
adc
call
lcall
add
js
inc
add
or
add
xor
pushl
mov
decl
in
pop
mov
push
add
aam
push
cmp
imul
outsb
shll
decl
add
lods
jmp
xor
ljmp
add
js
jge
in
mov
test
xchg
rcrl
jo
mov
sbb
add
add
movsb
add
add
call
mov
jmp
add
shrl
stc
xchg
xor
pushl
push
add
incl
js
test
dec
dec
push
pop
nop
out
pop
xchg
dec
out
fmull
pop
add
xchg
clc
outsl
popa
add
repz
incl
add
movl
mov
mov
add
add
pushl
add
lcall
push
jl
mov
in
sarb
inc
add
xor
call
js
adc
cmpsl
add
pop
test
sub
ljmp
cmp
mov
test
add
fldcw
or
jns
aad
add
addr16
add
int3
out
push
aad
xchg
mov
mov
pop
out
int3
rcl
mov
mov
call
xor
add
movl
pusha
add
popa
add
bnd
cmp
sbb
push
jbe
lock
mov
addb
aam
mov
add
xchg
jg
add
in
mov
pushl
jle
cmp
jae
mov
clc
movl
inc
add
repnz
adc
jmp
add
dec
jp
sub
dec
mov
loopne
addl
jno
jmp
insl
and
decl
xchg
sti
movb
add
call
ljmp
add
in
jo
call
inc
add
add
mov
es
rcrb
repz
outsl
pop
int
add
test
jmp
add
jecxz
pop
cmp
push
add
fcomip
add
cltd
scas
enter
stc
lock
dec
push
daa
add
adc
incl
inc
add
movsb
add
and
add
add
add
incl
add
mov
xchg
pop
mov
sahf
inc
add
out
jmp
add
stc
mov
add
push
mov
mov
push
mov
add
rcrl
jl
sub
cmp
std
scas
dec
push
add
bsr
frstor
fisttpl
das
arpl
call
pushl
inc
add
push
fbld
jmp
add
mov
icebp
xor
add
popf
dec
lret
lock
mov
lahf
push
cmc
xchg
fstps
add
sbb
jb
mov
push
add
jl
add
cmp
add
jb
ljmp
xlat
pop
in
xchg
leave
rorb
or
rolb
and
jmp
arpl
dec
fistps
sbb
adc
cmp
add
scas
push
and
ljmp
fldenv
add
fcoms
xchg
test
or
mov
add
popa
add
pop
jo
cmp
pusha
add
mov
je
add
fdivl
cwtl
rcrl
testb
push
jp
enter
add
inc
add
inc
add
fcomps
add
cmp
add
jmp
jnp
jl
add
int
dec
xor
decl
std
setae
imul
xor
roll
sub
add
or
stos
add
jmp
add
push
mov
dec
sbb
lds
jecxz
shrl
loope
xor
incl
add
sbb
dec
dec
cmp
sub
push
jl
add
add
add
or
add
push
sti
cmp
add
insb
push
aas
sub
add
xor
incl
jmp
add
test
pop
add
imul
jmp
out
popa
add
dec
adc
add
or
les
mov
inc
add
mov
das
xchg
sbb
add
mov
pop
add
rolb
loopne
sahf
xchg
mov
push
aas
jb
jmp
add
jmp
add
iret
pop
xlat
mov
mov
jbe
add
inc
add
pop
add
ss
in
lcall
dec
test
ds
jl
add
lods
loope
hlt
sub
ja
in
dec
sub
sbb
lcall
cmp
add
push
add
imul
leave
mov
or
mov
push
add
push
inc
add
add
mov
sbb
into
aas
aam
add
rcrl
add
lcall
add
cmp
push
popa
add
bound
lcall
add
push
add
inc
add
scas
sbb
add
pushl
decl
rcrb
loope
adc
pushl
add
hlt
dec
aam
and
inc
add
aad
test
add
add
repz
jge
add
add
decl
jb
fstpl
dec
mov
add
add
inc
add
add
dec
insl
jnp
dec
add
push
stos
rclb
add
test
add
jmp
add
lcall
mov
pushl
add
xchg
mov
stos
lods
push
addl
add
aas
aas
inc
add
stos
dec
divb
add
in
das
repz
xchg
fstl
lods
push
add
add
add
incl
add
add
pushl
add
push
add
inc
add
movsb
add
bnd
addr16
add
add
cli
mov
paddb
add
in
addl
lods
and
fsubl
add
xlat
addl
daa
add
out
loopne
mov
stc
divl
add
xchg
ret
add
ljmp
add
jnp
add
mov
push
add
mov
es
pop
push
inc
add
add
inc
add
fcompl
dec
push
add
inc
add
mov
mov
pop
mov
add
sub
jb
jmp
incl
jns
and
mov
add
add
aad
mov
add
pop
test
push
add
pop
add
push
lock
and
lea
add
and
call
add
add
test
add
cltd
imul
loopne
add
call
jne
push
push
add
dec
scas
dec
jb
incl
arpl
ljmp
push
add
into
imul
add
insb
dec
jge
bound
ljmp
inc
add
add
add
adc
decl
add
push
cmp
add
adc
jle
add
inc
add
sahf
out
xor
jmp
decl
jo
mov
pop
lahf
loopne
sbb
add
and
xor
jmp
lods
mov
mov
pop
test
add
scas
nop
sub
sar
lret
dec
fsubp
add
add
dec
push
add
sub
fdivrl
sub
call
add
call
mov
or
add
dec
jecxz
adc
push
sub
add
push
xor
inc
add
cld
les
std
cltd
pop
add
sti
jb
jns
cmpsb
add
lds
lds
shl
out
inc
add
or
and
jns
pop
dec
or
add
jmp
test
je
hlt
ja
addl
std
xor
call
aaa
sbb
xchg
jl
jno
incl
ljmp
cmp
test
addb
jo
call
pushl
lcall
pop
stc
mov
lds
aam
add
loop
enter
jg
sbb
add
ljmp
movl
mov
in
clc
lcall
dec
lcall
imul
data16
cmp
in
popa
add
lods
ljmp
xor
mov
add
rcrb
add
add
fnstenv
add
mov
ds
lcall
cmp
mov
add
roll
mov
add
imul
out
stos
xlat
outsb
sbb
add
incl
add
fnstsw
scas
lds
icebp
jmp
push
pop
movl
add
mov
add
leave
inc
add
jnp
and
ljmp
aas
sbb
push
add
jne
lret
loop
adc
jmp
ljmp
add
add
in
push
cli
lret
int3
mov
jo
call
lcall
sbb
cmp
add
into
push
js
adc
decl
pop
add
lcall
add
daa
add
add
sub
lcall
add
inc
add
bsf
add
decl
mov
adc
clc
ds
scas
xor
mov
xchg
enter
add
mov
add
mov
add
lds
push
xchg
lock
add
add
inc
add
lock
call
cmp
add
add
add
sbb
add
int
bound
inc
add
mov
add
inc
add
cwtl
jo
incl
add
addb
add
mov
push
add
mulb
shll
add
lods
into
mov
stos
movsl
add
mov
xchg
mov
jne
mov
add
or
add
aas
scas
jne
add
add
mov
std
add
pop
loope
inc
add
add
and
call
leave
hlt
data16
int3
push
movl
dec
jg
add
psrld
inc
add
repz
jne
add
daa
add
add
lcall
add
xor
call
xchg
and
call
lret
jmp
in
bound
incl
add
pop
and
int
addb
fistps
icebp
sub
jne
loope
and
call
in
mov
in
dec
mov
ljmp
sbb
insl
cmpsl
add
add
adc
decl
aas
xchg
cmc
mov
call
int
je
cmp
push
add
pop
seta
mov
sbb
les
aad
xchg
test
cmp
add
cmpsb
add
add
rolb
repz
inc
add
incl
lcall
insl
inc
add
sti
push
das
sbb
decl
add
icebp
fistpl
add
ljmp
cmpsl
add
cltd
sahf
xor
add
call
add
cmp
add
decl
jae
lcall
add
mov
add
adc
ljmp
push
add
push
mov
adc
add
mov
lret
jle
fimuls
xor
pushl
scas
or
inc
add
addl
pop
jb
decl
add
dec
push
add
adc
decl
les
push
add
dec
lcall
add
adc
fcmovbe
mov
cmp
fiaddl
jo
cmp
add
pushl
cld
mov
add
in
addb
icebp
or
add
add
adc
mov
imul
cmp
and
sti
or
add
push
add
jmp
sub
call
dec
imul
ss
push
lahf
mov
pop
ret
jecxz
lods
add
lcall
in
push
inc
add
std
test
pop
inc
add
pop
test
add
add
test
cmpsl
add
add
add
push
aad
fsts
mov
fstpt
add
std
cli
add
decl
push
xchg
bound
sti
inc
add
add
repz
add
enter
add
xchg
mov
out
pop
mov
cmp
mov
mov
add
cltd
cmp
addb
add
or
jmp
add
in
sbb
add
pushl
pushl
dec
je
add
ss
cld
push
add
add
add
add
pop
pop
or
cli
adc
call
pusha
add
or
add
add
in
add
popa
add
mov
mov
xchg
add
jmp
add
push
or
add
add
idivl
xchg
int
leave
rolb
pushl
add
dec
arpl
jmp
add
jnp
xor
ljmp
lcall
add
or
addb
enter
faddp
add
add
inc
add
cmpsb
add
fstl
call
es
cs
sbb
mov
or
add
add
jle
mov
dec
rcll
incl
inc
add
cld
jmp
add
lcall
mov
call
movb
add
jmp
rol
add
in
sbb
jae
pushl
cmp
push
add
cld
je
adc
leave
inc
add
pop
out
pop
mov
add
enter
decl
sub
pop
add
rcll
add
mov
sub
fisubrl
aad
add
and
jmp
add
leave
mov
add
adc
fnstcw
test
inc
add
data16
push
shr
pop
xor
lcall
jge
add
jge
pop
sbb
add
pop
xor
call
dec
js
sbb
add
aam
mov
in
cltd
fistpll
sub
add
out
popa
add
push
add
add
add
add
cmp
outsl
loop
pop
dec
cwtl
dec
sbb
iret
sbb
add
add
decl
dec
icebp
insl
lret
xchg
call
add
add
push
sti
mov
in
enter
add
cmp
imul
add
hlt
movb
and
aas
lds
loop
pop
stos
aaa
lret
pusha
add
dec
sbb
jmp
movsl
add
add
add
lcall
lea
add
xor
call
aas
sbb
add
sbb
ljmp
jp
sub
xor
push
lret
add
jg
in
mov
add
dec
or
cmc
jl
jg
add
dec
jns
bound
cmp
call
testl
jb
incl
fdivrl
rolb
xor
pushl
add
repz
dec
adc
pushl
add
das
push
add
xor
add
movl
sub
dec
addb
or
xchg
lea
nop
cmp
jno
inc
add
dec
scas
push
cmp
and
decl
push
mov
mov
loope
insb
xchg
jmp
or
xchg
sbb
add
lock
std
and
ljmp
add
ljmp
insb
xchg
add
call
sub
add
lahf
cmp
insl
cmp
add
fs
jl
add
out
push
loope
rorb
loop
mov
lcall
add
mov
ret
fs
add
sub
in
push
add
jmp
fsubrs
sbb
cmp
add
aaa
sarl
cmp
rolb
in
sti
mov
push
icebp
aad
mov
mov
mov
pushl
js
loope
cmpsb
add
jbe
add
mov
data16
add
incl
fdivl
and
inc
add
je
sub
dec
les
jmp
pushl
add
push
add
add
shlb
add
push
jae
inc
add
fwait
and
dec
pop
js
add
pop
sbb
fstpl
add
jne
sub
add
add
addb
pop
adc
dec
push
mov
add
lods
icebp
xor
pushl
call
add
call
add
cld
add
lcall
jbe
sbb
add
add
negl
imul
and
scas
cmp
xchg
ja
jbe
jae
call
call
jns
dec
hlt
dec
ss
pusha
add
mov
xor
jmp
decl
mov
jmp
mov
pop
adc
pushl
adc
jmp
add
add
addr16
add
data16
add
mov
xor
jmp
add
pushl
and
push
in
imul
pop
jp
add
add
add
dec
mov
jge
add
lcall
cmp
pop
add
sbb
addl
xor
decl
scas
stos
lods
sub
add
add
and
decl
xchg
add
jmp
add
cmc
jge
cmp
add
dec
shll
into
pop
addb
add
inc
add
adc
ljmp
insb
mov
notl
inc
add
inc
add
out
out
cs
add
add
inc
add
fwait
iret
push
add
out
push
add
add
daa
add
or
inc
add
cmp
arpl
cmp
add
in
sub
add
or
test
push
mov
add
add
ret
add
mov
sti
sub
add
popa
add
fcompl
add
and
fidivs
add
jp
scas
jp
add
mov
inc
add
leave
jmp
cmp
add
add
add
dec
jge
outsl
and
call
or
into
aaa
xchg
pop
je
or
inc
add
es
cmp
mov
and
incl
jmp
pop
ljmp
xor
call
inc
add
insb
mov
add
add
jnp
out
and
decl
aaa
bound
call
mov
repz
pushl
out
call
sbb
add
xchg
mov
pop
add
mov
add
mov
pusha
add
flds
incl
add
dec
sarb
push
add
fimull
add
lcall
hlt
cwtl
es
pop
mov
negb
add
test
pop
pop
jb
jmp
call
frstor
inc
add
loope
xchg
leave
ljmp
pushf
xchg
xchg
movb
add
test
or
lea
add
ds
mov
jae
push
cmp
dec
stos
xchg
into
xor
jmp
incl
test
js
add
incl
pop
add
xchg
jb
incl
add
or
add
push
add
cmp
icebp
pop
test
or
mov
cmpsb
add
add
leave
hlt
leave
sbb
cmp
out
popf
cmpsl
add
cmp
in
lahf
fsubs
xor
lcall
addb
data16
out
popf
rcr
push
add
adc
pushl
add
les
fidivrs
push
adc
ljmp
add
scas
out
pop
jge
add
pushf
xchg
stc
mov
or
add
add
addb
xchg
and
call
sub
clc
push
add
sbb
add
cli
in
jl
sahf
add
inc
add
bound
mov
mov
add
jmp
sub
jns
mov
fistl
add
shl
mov
xor
idivb
add
push
add
test
add
jns
mov
inc
add
fsub
add
add
in
jge
sbb
add
add
mov
xor
imul
decl
add
call
js
clc
inc
add
push
pop
mov
loop,pn
mov
jo
jmp
xor
test
rorl
add
mov
int
out
pshufw
lahf
into
or
add
jnp
adc
fsub
add
jmp
add
jnp
push
or
and
ljmp
mov
add
adc
incl
call
pop
and
decl
cmp
mov
sbb
add
js
add
lds
nopl
add
aaa
das
xchg
jb
decl
add
inc
add
add
iret
hlt
push
add
je
add
pop
imul
lret
decl
add
and
movsl
add
cmc
dec
fcmovnu
ret
add
xlat
mov
push
add
lea
add
mov
hlt
ret
add
mov
sbb
add
mov
pusha
add
test
lcall
mov
mul
add
jmp
pop
xchg
and
pushl
incl
je
add
cltd
rolb
add
clc
cmp
ss
add
into
adc
lock
insl
dec
mulb
call
add
mov
das
or
inc
add
or
clc
js
mov
push
add
add
xchg
loop
push
sbb
pop
cmp
aam
repnz
pop
stc
test
pop
enter
jecxz
xchg
sbb
add
pop
xchg
roll
incl
add
and
call
cltd
mov
aam
add
cmp
roll
into
xchg
jns
sub
add
adc
lcall
ljmp
add
sbb
cmpsl
add
mov
sub
and
jmp
rolb
xchg
call
cmp
mov
xchg
mov
mov
push
sbb
xchg
ja
xchg
cli
cmp
jb
pushl
sbb
jne
jbe
add
movsb
add
test
enter
ds
sbb
jmp
add
add
test
add
sub
aam
adc
ds
addl
cmp
data16
addl
mov
adc
ljmp
stc
mov
mov
fwait
cltd
fsincos
dec
mov
lcall
inc
add
add
movl
out
mov
decl
add
add
cld
push
add
jge
add
jl
jno
incl
add
loopne
hlt
scas
pop
jp
add
stc
ret
sub
call
push
add
lahf
mov
mov
push
std
xchg
addb
add
jmp
lcall
add
out
add
cmp
jl
add
je
push
add
ret
add
dec
push
jbe
add
dec
jg
mov
add
and
lcall
add
push
jl
mov
imull
je
xchg
push
add
lahf
or
add
mov
jmp
add
adc
and
call
add
and
cmp
add
xchg
sub
mov
add
dec
repz
into
xor
dec
inc
add
decl
mov
add
pushl
xchg
imul
inc
add
rolb
adc
call
dec
add
cmp
sti
add
add
push
jecxz
jae
ljmp
add
popf
lret
mov
mov
jmp
pop
sbb
add
add
xchg
mov
fnstsw
dec
pop
add
add
add
lahf
inc
add
jp
pop
cmp
add
cmpsl
add
lock
push
call
add
xor
cmp
sub
enter
aad
add
call
push
mov
into
rcrl
ljmp
mov
lcall
push
pop
push
add
and
call
inc
add
push
add
xchg
ljmp
pop
mov
add
xchg
mov
mov
mov
or
add
cmp
add
inc
add
add
aam
add
popa
add
mov
cltd
jecxz
bound
call
add
imul
push
test
adc
jmp
add
stc
dec
lret
jmp
push
add
xor
decl
add
push
loopne
push
add
and
call
lcall
mov
mov
stos
adc
ljmp
incl
add
rolb
add
mov
push
push
add
mov
and
lcall
add
sub
fisubrl
add
in
lods
mov
lea
add
mov
cmp
mov
add
push
mov
cwtl
jle
scas
int
sahf
fisubrs
ja
decb
cmp
cwtl
sbb
add
call
inc
add
fisttpl
xor
jmp
add
in
mov
aas
mov
call
decl
addl
lods
mov
add
mov
add
pop
add
in
cmpsb
add
mov
imul
add
incl
sub
daa
add
call
movb
add
sbb
mov
add
jle
pusha
add
addb
js
movsb
add
rolb
push
add
or
cmp
add
out
pop
in
pop
mov
add
jge
and
push
add
inc
add
cmp
add
add
inc
add
mov
add
enter
sub
fcmove
movsb
add
xor
pushl
add
adc
incl
jmp
add
xchg
push
loop
xor
pushl
ffreep
add
add
cmp
add
mov
pushl
add
fwait
mov
pop
mov
out
push
add
mov
add
sub
aad
mov
jno
lcall
fsubrp
add
push
add
test
lcall
sub
jmp
test
push
add
add
xor
ljmp
jmp
add
ret
add
incl
loope
test
cld
pop
add
add
mov
or
add
jae
js
add
jae
decl
cmp
inc
add
add
jae
incl
add
jb
pushl
ljmp
add
ja
pop
push
iret
ds
jo
jmp
add
mov
cmpsb
add
add
mov
stos
nop
movb
add
pop
mov
add
pop
add
add
mov
sbb
lret
int
add
fidivl
add
popa
add
and
inc
add
ljmp
loopne
xor
call
add
or
add
mov
loop
or
push
rcr
lods
xor
xor
push
add
add
jge
leave
icebp
jmp
add
xchg
inc
add
jl
icebp
mov
xchg
lahf
jl
cmpsl
add
mov
add
addr16
add
incl
int
addb
add
mov
fidivrs
xchg
cmp
std
addl
out
jo
pushl
push
loope
inc
add
out
outsb
add
int
ja
add
sub
add
pop
add
sub
pop
rcr
int3
dec
in
sub
add
incl
add
stos
movl
mov
clc
scas
sub
sbb
mov
mov
inc
add
lea
add
dec
adc
lcall
sbb
add
scas
inc
add
in
std
pop
dec
xchg
add
xchg
inc
add
jmp
add
sbb
mov
add
jno
jmp
push
pop
add
dec
stos
cld
mov
incl
fstpt
pop
addb
add
aad
dec
popa
add
bound
jmp
add
add
les
xor
lcall
add
cld
add
decl
add
jno
incl
inc
add
mov
or
pop
sbb
jnp
inc
add
add
add
sbb
add
push
les
jne
cmp
cmp
nop
lock
fisttpll
lds
mov
add
icebp
lret
sbb
pop
cld
dec
sub
add
pop
pop
add
add
pop
mov
sbb
decl
out
add
call
pop
inc
add
xchg
push
scas
adc
pushl
jmp
lcall
aam
pop
pop
pop
mov
xor
inc
add
add
pop
lods
insl
cmp
pop
xor
cmp
enter
outsb
testb
add
cmp
push
fidivrl
add
cmp
iret
addl
add
sbb
add
jecxz
mov
fcompl
or
jnp
push
add
lea
dec
je
add
out
xchg
das
add
mov
mov
ds
add
add
rolb
pop
push
movb
and
incl
je
cmp
lods
add
add
pushf
xor
call
test
add
push
add
xor
jg
and
ljmp
fcoml
add
mov
fmuls
dec
and
call
dec
sbb
mov
dec
and
ss
call
mov
push
add
loope
mov
data16
stc
pop
negl
bound
jmp
jl
add
mov
aaa
mov
add
jmp
data16
aas
fdivs
mov
out
sysexit
mov
testb
out
sub
outsl
jne
les
add
add
cmp
add
xor
ljmp
lea
add
int3
inc
add
mov
push
add
inc
add
in
push
add
cs
test
cmp
pop
mov
add
ds
inc
add
popf
inc
add
add
mov
adc
decl
lret
jp
push
add
dec
sub
pop
jo
pushl
add
xor
decl
jl
add
lcall
dec
sbb
add
xchg
cmp
jl
icebp
je
add
add
sbb
rol
add
imul
daa
add
dec
sbb
pusha
add
iret
mov
add
add
es
and
push
pop
add
push
div
inc
add
adc
jmp
add
jmp
mov
mov
jmp
or
cwtl
dec
mov
add
mov
lods
pop
sbb
and
ljmp
sub
pusha
add
jae
call
pop
sbb
add
sbb
add
xchg
or
enter
add
lods
sbb
sbb
data16
inc
add
mov
jns
add
popf
push
les
in
cmp
dec
leave
mov
mov
lret
or
add
out
sub
add
shll
in
arpl
call
mov
add
incl
lcall
roll
jbe
mov
ljmp
mov
cltd
rolb
mov
jmp
add
sbb
mov
in
test
sti
pop
loopne
pop
jbe
add
insl
int3
scas
jmp
sbb
addl
decl
add
xor
mov
lahf
outsb
and
add
addl
fstpt
add
pop
add
add
shrb
mov
lcall
mov
arpl
lcall
cmpsb
add
push
ret
add
daa
add
add
dec
scas
add
mov
fcmovne
inc
add
add
sbb
add
nop
jl
add
add
cmc
stos
add
inc
add
mov
add
fisubs
jmp
sbb
js
std
enter
jne
lahf
lcall
dec
add
jmp
add
xchg
xlat
push
stos
sub
xchg
stc
xlat
sub
icebp
outsb
cld
dec
sub
add
lock
cmpsb
add
js
add
js
mov
incl
pusha
add
mov
sub
es
pop
mov
dec
addl
add
and
decl
cltd
dec
inc
add
sbb
repnz
outsb
xchg
mov
lods
arpl
call
es
cmc
sahf
sbb
loopne
dec
scas
add
add
nop
fstpt
incl
add
mov
fldenv
dec
fcomps
bound
decl
lock
sub
jge
cmp
add
imul
xchg
fistpll
movb
and
pushl
sbb
mov
jge
pop
pop
pop
les
xchg
xor
in
jge
lahf
push
push
push
add
les
lods
repnz
add
push
test
add
sahf
out
fmull
add
out
addb
rolb
jle
imul
xor
enter
sub
call
add
cmc
pop
or
add
repnz
mov
add
lret
movb
lock
nop
pop
push
add
dec
test
xchg
or
or
insl
dec
shrl
jg
xchg
dec
xchg
jp
jae
push
add
jmp
insb
addb
scas
xchg
add
jmp
add
and
imul
xchg
adc
jmp
mov
js
jge
jb
js
stos
jl
add
stc
lret
add
leave
outsl
mov
add
dec
es
jns
push
add
mov
add
add
inc
add
jb
push
pushf
mov
nop
inc
add
mov
mov
imulb
jae
incl
pushl
adc
jmp
shl
xor
jmp
mov
call
ljmp
sub
in
xor
incl
add
add
push
add
and
stos
sub
add
fsubs
xor
ljmp
scas
mov
and
call
mov
ds
addl
ret
mov
jl
fisubl
decl
sbb
dec
pop
add
adc
decl
lock
add
cli
cmp
es
add
mov
sbb
rolb
add
test
ficomps
movsb
add
jno
decl
rolb
test
add
add
inc
add
adc
cmp
cs
inc
add
rolb
add
jns
jne
add
and
add
pushf
lcall
add
sub
cmp
jecxz
jle
mov
call
scas
roll
mov
leave
int
xchg
mov
add
neg
sbb
add
cmc
cltd
cld
sbb
pop
or
lret
inc
add
add
dec
pop
mov
add
xchg
mov
xor
add
popf
jge,pt
mov
jbe
add
loopne
dec
and
cmp
lret
add
xor
push
add
push
add
fisttpl
movb
add
outsb
lret
adc
call
test
addb
in
mov
and
mov
icebp
cmp
push
add
stos
pop
in
ja
call
cs
or
adc
jmp
mov
daa
add
add
dec
jecxz
daa
add
sub
xchg
dec
jecxz
int3
lods
cmp
add
dec
roll
mov
mov
add
in
inc
add
jno
call
ljmp
push
add
dec
nop
mov
add
sar
adc
stc
jbe
lods
or
add
cmpsb
add
ljmp
ss
dec
push
add
stos
pop
fscale
pusha
add
inc
add
inc
add
push
in
mov
add
ljmp
add
aam
add
js
push
int3
dec
insb
jl
add
mov
rolb
add
test
sbb
mov
add
add
jmp
xor
add
add
add
arpl
ljmp
repnz
xor
out
jecxz
or
add
sbb
fld
add
mov
lret
mov
add
ljmp
lds
mov
add
sbb
jb
cld
fnsave
lcall
pop
or
fistpll
jnp
pushf
fldt
add
aam
dec
ss
push
rol
add
incl
add
shll
sbb
cmc
jecxz
test
jg
add
xchg
sbb
jmp
xchg
sub
push
cltd
loop
mov
add
ljmp
add
out
cld
mov
int3
jle
call
inc
add
in
fsubl
add
daa
add
outsl
imulb
jmp
jne
movb
jb
call
push
les
push
add
xor
pushl
dec
jg
jns
rorb
ljmp
lcall
add
movsl
add
jmp
push
divl
add
add
inc
add
pushl
inc
add
push
xlat
movl
add
sub
movl
inc
add
cs
repnz
nop
add
lcall
and
pushl
jecxz
and
jmp
pusha
add
mov
mov
cmp
out
push
pop
xchg
mov
or
sub
cwtl
mov
lret
push
add
out
dec
xchg
addl
sbb
add
mov
pop
cmp
and
jae
call
inc
add
xchg
notl
push
pop
je,pn
adc
incl
mov
mov
xor
cmp
sbb
cltd
sbb
add
and
jmp
call
add
cmp
fidivl
dec
loop
fdivrs
fucomi
dec
and
jmp
mov
sti
addl
ljmp
add
in
sahf
mov
add
addb
add
xchg
mov
add
stc
ret
add
ljmp
add
stos
cs
data16
inc
add
ljmp
pop
in
fadds
shlb
add
add
add
add
add
imulb
pop
es
sub
add
sahf
and
rcl
jae
incl
jns
aas
ds
dec
int3
push
fidivrs
pushl
into
mov
test
pop
into
mov
xchg
aas
and
incl
push
add
fistpl
add
mov
out
adc
jmp
or
add
or
mov
pushf
pop
ljmp
add
adc
sti
stos
and
ljmp
add
movl
dec
rcr
push
adc
jmp
ljmp
aaa
lods
xchg
data16
cmp
add
add
xor
call
dec
fs
add
xor
add
push
add
call
add
push
add
push
mov
add
lret
aaa
outsb
mov
out
mov
sub
les
xor
inc
add
add
in
cltd
popf
xor
pushl
ja
fdivl
and
addb
jp
dec
sti
dec
mov
roll
stos
std
aas
push
cwtl
jp
xchg
mov
movb
cli
mov
addr16
mov
hlt
xor
addb
push
call
sub
add
divb
pushl
add
cmpsl
add
add
xchg
fmuls
call
xchg
push
add
add
decl
pop
pushf
and
cli
daa
add
mov
mov
inc
add
loope
jb
jmp
add
cmp
cltd
or
xchg
jmp
ficoms
shrl
call
add
add
outsl
add
jmp
ljmp
dec
fldt
xchg
pop
lods
mov
dec
cmp
outsl
movsb
add
cmpsb
add
add
scas
mov
movl
add
stc
mov
inc
add
dec
stos
sub
pop
fidivl
xchg
mov
add
int
add
notb
add
fcoml
push
add
sub
push
test
add
add
aam
add
add
pop
xchg
mov
je
add
dec
aas
ds
cmp
xor
lcall
ljmp
imul
cmp
xor
daa
add
pop
adc
ljmp
pop
mov
imul
movsl
add
or
add
mov
jmp
push
add
mov
cs
mov
inc
add
std
xor
ljmp
mov
nop
fwait
push
add
testb
jbe
add
dec
xchg
adc
inc
add
mov
add
movl
ret
dec
push
stos
ret
add
add
add
pushf
in
enter
add
mov
add
adc
ljmp
jne
add
add
mov
add
jb
incl
pushl
call
jle
jne
add
add
in
arpl
call
push
js
push
add
inc
add
push
insb
dec
out
stos
into
sbb
adc
fdivrs
mov
add
xor
adc
call
shl
add
add
pop
adc
jle
pop
dec
mov
jmp
add
add
pop
js
push
cmpsb
add
dec
fldenv
add
xchg
add
fstpt
ret
add
add
pushl
xor
ljmp
decl
lcall
js
add
jmp
add
ds
adc
add
hlt
sub
add
mov
pop
push
push
xchg
push
add
dec
adc
xchg
shl
add
add
inc
add
add
movsb
add
fistps
aad
add
lret
xchg
jne
add
add
dec
stos
add
jmp
call
aas
cmpsb
add
add
sub
xchg
lret
adc
pop
add
std
sbb
cmp
addl
add
idivl
push
add
imull
lcall
xchg
ljmp
addl
jle
add
sbb
cmc
add
add
pushl
add
fwait
jne
add
dec
mov
jne
add
out
movsb
add
mov
imul
add
sahf
mov
push
hlt
and
inc
add
add
leave
push
add
ljmp
add
stos
xchg
push
add
jmp
adc
incl
mov
stos
sti
addb
bound
incl
push
popa
add
ret
add
dec
xor
inc
add
add
pop
push
in
adc
jmp
mov
shll
add
movb
add
loope
push
add
sar
and
sbb
mov
inc
add
add
or
add
out
jmp
das
lret
call
out
ret
add
nop
or
call
je
sub
dec
addl
nop
xor
lcall
and
ljmp
push
pop
in
add
push
cld
mov
push
add
popa
add
jp
add
mov
call
jmp
add
int
cmc
mov
in
stos
jmp
ja
add
call
add
addb
loope
pop
xlat
mov
push
add
or
or
ds
add
popa
add
add
adc
add
call
aas
cmp
add
lret
xchg
add
jae
lcall
cwtl
aad
add
xchg
xchg
out
and
lcall
daa
add
lret
push
add
and
call
ss
adc
lcall
loop
pusha
add
push
add
pop
push
add
xchg
hlt
inc
add
stos
insl
js
jnp,pt
xchg
jno
decl
pop
int
add
dec
outsl
and
lock
call
test
fbld
mov
call
mov
jp
daa
add
add
or
or
dec
sbb
cmp
dec
ret
add
fistps
sub
stc
insb
xor
decl
mov
jmp
adc
incl
sbb
mov
add
xchg
cmpsl
add
jmp
call
aas
lods
es
adc
faddl
add
ds
scas
test
add
dec
jmp
pop
xor
decl
adc
decl
cld
add
cmpsb
add
mov
xor
cmp
jecxz
push
add
aam
xlat
cmc
or
shll
add
aam
add
and
inc
add
add
xchg
mov
lods
and
jmp
add
daa
add
movsb
add
addl
inc
add
aaa
xchg
ds
mov
xor
mov
sub
stos
push
into
jl
adc
add
push
add
lods
mull
test
add
mov
add
mov
pop
cmpsl
add
pop
insl
ja
mov
jecxz
push
add
pop
bnd
call
pop
stos
test
lds
jo
dec
jno
call
mov
mov
addb
add
daa
add
cli
sub
stos
mov
pop
les
mov
addb
mov
lods
in
pop
lock
xor
ficoms
add
xchg
dec
mov
push
dec
push
sub
decl
mov
jl
inc
add
lds
out
mov
leave
movsl
add
mov
insl
cld
loope
mov
movsl
add
movb
add
repnz
add
mov
out
add
dec
mov
push
dec
arpl
pushl
jmp
cs
jne
out
insb
lock
add
lret
inc
add
fsubrp
arpl
ds
and
call
fcompl
daa
add
je
rolb
add
pop
xor
decl
add
mov
fisubs
add
inc
add
mov
mov
inc
add
add
sbb
add
or
inc
add
add
jge
jne
call
shll
mov
and
decl
add
add
pusha
add
cmpsb
add
les
lret
or
rolb
scas
jl
add
addb
jno
call
inc
add
add
int3
divl
jmp
add
cli
xchg
cmp
aad
lock
cli
bound
jmp
sbb
dec
mov
pop
push
repnz
or
call
push
loop
cmp
sbb
sub
jmp
mov
add
addb
xlat
xchg
cmp
scas
xor
mov
add
decl
add
in
out
fdivrs
sbb
ljmp
loope
pop
adc
lcall
je
and
call
add
cltd
inc
add
jne
add
ret
add
add
sti
push
add
pop
mov
xor
dec
pop
aaa
jl
stc
movsl
add
hlt
ret
add
add
add
or
pop
lds
mov
mov
test
sarl
pop
fs
or
shl
ljmp
xchg
aas
and
pop
movb
pop
add
adc
cmp
add
in
movl
xor
pushl
jge
pushf
push
icebp
inc
add
leave
popf
or
movsl
add
stos
pop
cmp
ljmp
mov
add
sub
lret
add
popa
add
and
dec
into
add
ljmp
mov
sbb
mov
or
pop
cmp
in
cs
add
or
pop
or
movsb
add
in
jbe
sbb
push
cmpsl
add
add
xchg
push
js
xor
ljmp
mov
xor
pushl
add
sahf
rcl
add
call
add
jge
popf
xchg
push
into
ds
xchg
mov
add
add
mov
push
and
fsts
call
add
or
jmp
dec
scas
fs
inc
add
pusha
add
add
add
iret
test
jno
jmp
lcall
jmp
add
sbb
rorb
cli
enter
pop
test
data16
dec
addb
or
add
inc
add
push
add
fdivl
in
ja
sub
roll
xchg
dec
add
jmp
add
outsb
fsubr
iret
lcall
fcmovnb
add
add
add
pop
xchg
test
outsl
add
add
lea
xor
jmp
ljmp
pop
lods
push
add
sbb
stc
jmp
addl
jmp
pushl
add
pop
rcl
add
pop
mov
dec
stc
adc
mov
jmp
push
add
fldt
bound
push
push
add
out
mov
cmp
outsb
addl
pop
xor
pop
add
addl
add
enter
into
sti
jl
add
dec
outsl
pop
lret
xchg
fiaddl
add
mov
adc
lcall
pop
je
and
jmp
add
pushf
xchg
jg
jge
mov
call
add
add
iret
cmpsb
add
add
rolb
add
xchg
dec
daa
add
add
int
add
dec
xchg
or
add
adc
rcrb
xchg
addb
dec
adc
pop
dec
xor
incl
pusha
add
inc
add
mov
add
add
xor
add
sahf
roll
xchg
sti
mov
sbb
mov
push
fistps
movl
sbb
mov
testb
aas
sbb
adc
jmp
sbb
inc
add
xor
fdivl
scas
test
pusha
add
movb
scas
int3
enter
mov
add
xor
movsb
add
push
xchg
adc
aas
pop
shr
imul
dec
mov
repnz
ljmp
add
call
cmpsb
add
add
scas
std
xchg
hlt
mov
push
jecxz
repz
aam
test
test
add
lcall
sbb
loop
cmp
ljmp
jle
add
jnp
test
add
pop
push
popa
add
or
add
jmp
pushl
adc
xchg
sti
fistl
add
das
or
sub
stc
xchg
jnp
jb
mov
js
add
fadds
movsl
add
incl
add
in
xlat
mov
push
xchg
push
adc
cmp
add
imul
add
fnstcw
pop
ds
jo
incl
jo
jmp
add
push
push
add
jle
ficoms
add
push
rcrl
xor
pushl
add
mov
add
add
add
int
jo
jmp
add
leave
fst
addb
inc
add
stos
sarb
mov
ret
push
add
pop
xor
add
push
add
out
mov
decl
inc
add
and
dec
mov
std
pop
fdivl
and
call
inc
add
popa
add
dec
addl
xchg
pop
xor
cmp
pop
sti
cld
sub
jbe
in
mov
add
add
and
fstps
sbb
xor
add
jmp
add
adc
jmp
add
mov
xor
lock
push
jae
dec
movl
add
psraw
sub
and
jmp
sti
addl
jbe
pop
pop
inc
add
dec
jle
movlhps
add
mov
loope
decb
and
pushl
mov
add
add
int
add
add
inc
add
movsb
add
pop
sub
add
jb
decl
sbb
add
xchg
pushf
ds
aam
outsl
sub
add
xor
mov
xchg
je
mov
add
xchg
loopne
lret
xor
sbb
ljmp
in
cltd
sbb
pop
inc
add
imul
inc
add
arpl
jmp
add
mov
fisubrl
in
loopne
cmpsl
add
jns
nop
aas
fstpt
or
add
sub
js
and
add
mov
sub
or
jmp
jo
jl
fstpt
dec
test
sbb
pop
add
pushl
mov
lcall
add
jne
ljmp
dec
dec
stos
pop
and
dec
sbb
rcr
mov
pop
jne
add
add
dec
jmp
add
add
out
mull
cmp
add
cmpsl
add
push
xchg
jge
add
sbb
mov
aaa
idiv
mov
add
dec
fwait
cld
into
or
call
sub
jmp
sbb
decl
lret
lahf
pop
imul
test
repnz
stos
cli
test
cmc
prefetcht1
ds
loop
cli
jge
pop
jecxz
fs
or
aam
add
fimull
dec
into
jns
mov
sub
or
icebp
adc
add
insb
sbb
insb
push
movsb
add
add
aaa
xchg
stos
pop
mov
mov
add
dec
push
add
jmp
push
jle
mov
mov
add
add
add
add
push
pop
sbb
add
or
mov
add
pusha
add
divb
or
mov
inc
add
add
jnp
add
sub
add
out
aas
repnz
lods
addr16
cli
sbb
incl
add
add
sahf
sbb
mov
add
sub
add
test
call
jnp
mov
add
add
mov
inc
add
push
add
lea
cld
jle
add
nop
sbb
add
inc
add
stos
jmp
add
jne
add
pushl
movb
add
push
or
mov
and
cmp
push
dec
adc
pushl
push
hlt
nop
addb
add
push
scas
mov
add
in
mov
test
jg
or
add
pushf
fisubrs
add
push
add
push
add
pusha
add
sub
adc
pushl
add
add
add
call
add
or
add
sbb
and
mov
sub
add
inc
add
mov
add
pop
sub
stos
dec
push
fisubl
incl
add
jp
repnz
mov
outsb
pop
in
ret
add
mov
adc
cld
mov
std
scas
push
jl
dec
ljmp
in
xchg
xor
call
or
add
push
jo
jmp
add
cs
mov
add
add
mov
pop
stos
and
jmp
add
adc
mov
aam
push
xor
jmp
jecxz
jg
dec
sub
add
mov
add
xchg
les
mov
packuswb
sbb
xlat
dec
sub
pop
rolb
pop
mov
add
das
sub
xchg
insb
arpl
ljmp
add
add
mull
out
cmpsb
add
sub
stc
add
inc
add
in
cmp
add
roll
add
mov
add
jne
cmp
lahf
pushf
mov
add
pop
inc
add
enter
dec
or
add
shll
add
mov
call
add
pop
movb
add
add
cli
jg
add
lods
cmp
lcall
rolb
mov
add
call
test
daa
add
xchg
push
icebp
xor
jmp
add
out
and
call
loop
xchg
mov
add
ljmp
ja
mov
sub
ljmp
addr16
xchg
popl
fwait
jo
decl
cmp
add
push
add
ja
sub
dec
sbb
lods
movl
inc
add
sbb
frstor
add
sub
lahf
leave
mov
and
lcall
mov
sbb
add
pushf
xchg
cmpsl
add
sub
adc
fwait
out
sbb
arpl
pushl
lcall
add
add
sub
add
inc
add
into
add
std
cmp
aas
mov
cmp
add
cmp
nop
lds
lds
bound
jmp
std
xchg
imulb
and
in
xchg
sub
jns
inc
add
add
add
cwtl
pop
cmp
incl
ljmp
fisttpl
outsb
inc
add
lret
jnp
addb
add
jmp
add
mov
add
loop
mov
add
fdivs
rcl
aad
aam
add
decl
or
add
test
mov
push
fsubr
lds
pusha
add
lds
out
mov
add
rcll
pushl
and
pushl
add
std
jne
mov
call
add
test
xor
lcall
adc
incl
push
jb
lcall
dec
mov
add
add
mov
sbb
rorb
pop
fldcw
add
add
adc
incl
mov
add
jnp
aad
ljmp
add
call
xchg
hlt
inc
add
mov
xchg
push
mov
push
inc
add
in
outsb
out
cwtl
fucomp
aam
add
in
cmp
and
pushl
add
add
decl
cmp
xchg
negl
lret
roll
ss
add
mov
mov
test
xor
jmp
add
sahf
test
mov
inc
add
jae
mov
add
mov
cmp
call
movb
jecxz
sub
jns
pop
cmp
addb
mov
jne
adc
pushl
add
or
shll
into
jl
add
add
rclb
xor
add
cli
mov
mov
push
dec
inc
add
xchg
lret
pushl
add
push
enter
hlt
faddl
aad
add
add
incl
jmp
add
sbb
add
jp
jle
jns
iret
adc
call
mov
add
das
ficoml
mov
sbb
jae
js
add
fdivs
gs
or
cwtl
inc
add
mull
add
addl
cmp
stos
pop
jmp
in
inc
add
lods
pop
hlt
mov
jg
add
sub
mov
xchg
xor
jnp
add
inc
add
int3
adc
lcall
add
xchg
jmp
stc
add
decl
push
add
popf
mov
pusha
add
call
insl
cs
cmp
insb
stc
push
add
sbb
add
adc
cmp
xchg
fidivs
incl
jmp
add
add
xchg
fiaddl
insl
push
insb
stos
hlt
mov
inc
add
and
call
mov
add
jge
pushf
int
lret
sahf
loop
xlat
nop
lret
mov
add
xlat
ja
inc
add
add
xchg
mov
cli
sbb
add
fiadds
ljmp
loopne
addl
call
fsubs
add
data16
add
sbb
add
addl
jmp
sbb
lret
lods
mov
imul
sbb
add
sti
pop
push
push
shrb
add
push
aam
pop
add
xchg
lds
push
add
push
mov
rclb
xchg
test
mov
in
movl
jmp
in
adc
jmp
inc
add
pop
inc
add
movl
div
stos
inc
add
rolb
mov
pop
pop
sti
lea
add
jmp
add
add
call
add
ss
incl
inc
add
add
push
pop
mov
add
push
add
jmp
lret
dec
lds
mov
sub
jmp
dec
nop
mov
sbb
add
sub
add
xchg
lcall
loope
add
pushl
test
xchg
jp
jle
add
test
sbb
add
xchg
push
add
psubsw
lcall
and
call
add
mov
rorl
mov
xor
jns
pushf
or
add
pop
fnstsw
add
mov
pop
fidivs
add
mov
add
ljmp
test
int3
add
popf
das
shrb
xchg
or
xor
jmp
dec
inc
add
cmp
bound
lcall
scas
movl
push
cld
shr
cli
lcall
addl
add
mov
test
pop
lock
adc
call
add
mov
push
and
call
mov
mov
adc
dec
out
ja
add
mov
add
mov
decl
add
add
lret
add
fmuls
jg
pop
in
shlb
addb
add
test
or
add
or
flds
add
dec
cmp
jb
incl
add
std
mov
inc
add
scas
push
ja
enter
add
add
in
dec
mov
hlt
pop
lods
cwtl
call
addb
push
add
jo
call
mov
mov
add
mov
push
add
cwtl
mov
adc
jmp
cmp
add
xchg
and
push
lock
inc
add
cmc
push
pushf
add
push
stc
mov
add
add
jnp
add
mov
jns
add
push
add
ret
add
pushf
mov
push
js
pusha
add
sub
mov
pop
push
add
call
ss
test
fucom
add
add
and
cli
rcl
add
mov
int3
and
jg
add
adc
jmp
jmp
pop
int
jno
incl
decl
add
mov
loop
push
and
pop
dec
xor
incl
add
cmp
sub
cmp
lcall
jl
xchg
and
incl
add
aas
jecxz
sub
add
xor
push
js
imul
cmpsl
add
cmpsb
add
add
aas
add
incl
mov
add
add
sbb
add
xor
add
outsl
xchg
sub
call
jl
add
add
decl
add
out
sbb
pop
mov
sub
popa
add
and
ljmp
fimull
mov
add
lcall
sub
int3
jge
add
es
add
enter
in
cmp
add
test
mov
lea
mov
outsl
mov
push
add
jno
jmp
test
ret
movsl
add
push
jbe,pt
jge
pop
outsl
push
add
jne
out
popa
add
inc
add
rcrl
dec
adc
stos
cmp
adc
mov
aam
add
dec
repnz
dec
fisubs
mov
add
cmc
dec
add
ljmp
lds
movl
add
push
add
xchg
jecxz
decl
lcall
insl
cli
cltd
mov
dec
daa
add
addb
test
inc
add
pop
sbb
add
add
add
mov
add
add
mov
pop
mov
add
mov
mov
add
add
add
add
add
push
add
inc
add
mov
xor
ljmp
and
call
repz
add
xor
pushl
add
add
mov
test
mov
dec
addl
ljmp
add
push
add
mov
xor
jmp
add
ret
add
ret
in
dec
call
lcall
lret
nop
jp
insl
and
push
inc
add
add
add
lcall
cmpsb
add
mov
adc
decl
add
add
insl
cmp
add
lcall
xor
pushl
incl
add
or
sub
add
cwtl
fdivs
call
add
add
sub
push
add
push
in
rcrl
leave
mov
aam
add
hlt
sbb
pop
mov
sahf
add
movl
popa
add
mov
lea
add
int3
sub
sbb
aas
ss
jmp
add
add
addb
movsb
add
mov
add
add
sub
shrb
int
add
call
fs
add
jg
stos
mov
add
xor
jmp
int
add
inc
add
jmp
add
clc
std
pop
mov
xchg
or
shl
fistpl
add
add
add
aas
scas
sbb
add
bound
lcall
inc
add
add
loopne
btl
lcall
pushl
add
fsubs
call
mov
dec
rolb
inc
add
addb
aas
jmp
add
into
mov
mov
add
and
ror
pop
movsb
add
inc
add
and
pushl
mov
mov
test
test
popa
add
mov
mov
mov
add
push
clc
xchg
movl
xchg
or
add
add
dec
lock
add
out
addl
les
test
add
mov
add
testl
inc
add
sub
add
jmp
fdivrs
decl
or
jl
mov
add
pop
adc
iret
sbb
dec
addb
add
idiv
data16
mov
jg
jne
add
sub
pop
jno
in
sub
sub
add
stc
mov
mov
add
mov
push
add
xlat
int
push
pop
and
incl
add
popa
add
addb
aas
or
jns
mov
and
decl
add
ds
les
scas
mov
mov
add
aam
push
mov
or
inc
add
add
out
and
pop
ljmp
add
jge
xor
add
stos
movsb
add
fisubl
jmp
add
lock
add
fimull
jae
lcall
xchg
in
mov
in
inc
add
inc
add
sahf
dec
paddb
push
add
aad
add
inc
add
add
xchg
ss
add
jle
sti
or
mov
int
jecxz
popa
add
push
dec
dec
mov
jmp
jge
dec
lret
out
stc
dec
xchg
dec
mov
mov
dec
test
out
call
jg
add
leave
lods
xor
lcall
xchg
nop
adc
push
aam
jmp
scas
sub
int
xor
jmp
add
movsl
add
add
leave
sub
add
js
leave
push
das
sahf
dec
xchg
sub
pop
add
and
ljmp
mov
jnp
sbb
sbb
xchg
xchg
aaa
xchg
push
add
mov
or
stc
jnp
add
dec
or
add
jns
arpl
jmp
add
hlt
scas
xchg
dec
out
aad
and
ljmp
cmp
out
push
sub
add
jmp
add
imulb
mov
fsubs
sub
dec
in
out
push
das
fs
lock
inc
add
addr16
outsb
jle
add
xchg
dec
add
pushl
pushl
push
sub
aad
inc
add
add
stc
mov
add
xor
lcall
adc
jmp
add
push
push
add
out
fstpt
xor
jno
decl
add
xchg
fistps
or
and
and
jmp
add
mov
add
sbb
add
add
or
jne
and
les
xchg
imul
cmpsb
add
add
call
add
dec
mov
add
stc
mov
add
push
add
test
or
add
or
add
adc
add
js
test
xchg
xor
into
fdivr
add
inc
add
mov
dec
movsl
add
das
rorb
add
cld
mov
dec
fidivl
add
sub
mov
adc
mov
pop
add
call
add
add
ja
add
lcall
add
push
in
fcomi
mov
into
addl
add
xor
lcall
dec
fiaddl
incl
inc
add
add
shr
decb
aas
jae
fidivl
dec
and
jmp
add
add
in
inc
add
test
add
lret
fstpl
sbb
clc
in
movsb
add
push
lcall
lea
shll
call
add
inc
add
jecxz
add
sbb
inc
add
jecxz
sub
popf
pop
ret
add
fdivrl
adc
ja
add
ljmp
dec
inc
add
inc
add
push
add
lds
test
xchg
or
add
lcall
or
inc
add
in
std
sbb
out
cmp
add
pop
test
or
ficomps
jae
decl
add
add
push
sbb
jnp
jl
add
push
in
shrl
idiv
cs
jne
add
cmp
add
lods
adc
decl
rorb
add
ljmp
add
jo
jmp
decl
mov
stc
adc
push
add
and
lcall
add
clc
je
push
add
dec
daa
add
test
add
mov
ja
adc
decl
add
rolb
call
add
jns
test
add
dec
adc
call
add
mov
les
lods
sbb
insb
ret
inc
add
add
dec
mov
add
add
testb
test
addl
inc
add
mov
fwait
xor
push
cmp
add
push
add
nop
sbb
repnz
jae
incl
das
xor
call
add
sub
add
mov
add
push
out
outsb
add
incl
ljmp
adc
pushl
add
xor
cmp
add
cltd
scas
pop
adc
ljmp
shrb
add
incl
hlt
mov
addb
xchg
xor
add
aam
add
add
mov
das
mov
xchg
add
call
jne
jecxz
scas
stos
stos
icebp
out
cmp
insb
addr16
add
decl
fistl
cli
xchg
addl
xor
jmp
sti
sbb
and
decl
add
adc
lcall
leave
insb
cmp
add
mov
lcall
mov
mov
add
xor
decl
aam
iret
out
adc
lcall
add
mov
inc
add
add
push
pop
mov
incl
lcall
add
add
push
movsl
add
decl
in
fsubs
add
mov
push
pusha
add
mov
dec
mov
adc
push
cltd
xchg
ss
call
ficomps
rorl
ljmp
mov
push
pop
cltd
stos
dec
pushf
inc
add
add
adc
add
adc
add
mov
aaa
jne
dec
data16
add
rcl
inc
add
add
lcall
scas
sbb
add
decl
sub
jmp
lcall
mov
add
add
leave
test
mov
add
inc
add
ret
add
pop
jb
jmp
add
incl
ficompl
and
add
add
add
add
add
or
std
jae
inc
add
cmp
shll
fdivl
add
sub
int
jae
push
and
ljmp
xor
decl
add
ljmp
incl
decl
pop
mov
dec
xchg
jle
adc
jmp
lcall
jg
std
ret
jo
fucomip
xchg
cmp
jb
jmp
add
ret
jp
mov
add
add
mov
adc
in
fcomps
pop
lock
push
out
mov
add
mov
lock
sbb
mov
mov
add
incb
call
push
xchg
dec
cmp
repz
push
das
mov
mov
add
std
or
add
dec
test
pop
test
pushf
xchg
cmp
shll
ljmp
add
pop
clc
lcall
lds
pop
mov
sbb
lds
stos
movsb
add
push
out
push
xchg
mov
adc
incl
call
dec
fiadds
add
jae
inc
add
add
add
icebp
jno
jmp
add
and
inc
add
add
mov
hlt
call
add
flds
add
xchg
add
dec
ljmp
in
sub
add
addl
lret
aaa
pop
dec
lahf
xor
decl
mov
adc
sahf
xchg
xchg
mov
hlt
add
call
add
test
test
pushl
shr
dec
notb
incl
das
out
addl
shlb
add
xchg
scas
and
pushl
add
insl
jp
cmp
add
pop
mov
add
ljmp
cmp
add
add
or
jp
add
add
or
cmp
or
add
insb
jl
jecxz
imulb
and
pushl
sti
jnp
mov
fmulp
popf
push
xor
ljmp
mov
add
xor
incl
jmp
pop
repnz
and
imul
inc
add
push
add
out
in
dec
lea
add
add
jb
jmp
lahf
divl
imul
sti
jecxz
cmp
dec
add
decl
mov
fisubs
call
add
xor
ljmp
xor
jp
push
add
test
sub
jl
mov
add
sbb
push
add
popf
in
out
mov
jmp
jmp
add
ljmp
push
scas
xchg
xor
je
add
pop
out
dec
insb
pop
sbb
add
add
or
add
in
cs
add
add
fcomi
mov
cld
adc
add
cmp
xor
or
pop
dec
in
or
fmull
cmp
addl
mov
cmp
incl
pop
cmc
xor
push
imul
push
fnsave
add
fists
mov
add
xchg
repnz
movups
call
ljmp
addl
add
add
add
add
mov
add
addl
sub
add
add
push
insl
xor
jmp
add
faddl
stc
jo
decl
pop
int
movl
and
incl
add
and
call
call
ljmp
jecxz
inc
add
decl
mov
insl
es
inc
add
xor
add
sbb
addb
enter
add
pop
mov
lods
inc
add
push
sub
ljmp
jb
pushl
arpl
lcall
xor
mov
cmpsl
add
add
imul
add
adc
add
jmp
loopne
cmc
in
jo
decl
pushl
jg
add
mov
incl
add
and
dec
in
outsb
mov
jns
add
jae
incl
xor
jmp
add
pushl
add
lods
push
add
add
and
stc
test
mov
jo
decl
sti
test
and
decl
inc
add
inc
add
add
pop
bound
decl
add
pop
test
fistps
mov
mov
adc
decl
dec
cltd
mov
add
inc
add
addb
movb
bound
call
incl
ja
add
cmpsl
add
add
jmp
add
add
xor
pushl
jmp
add
sbb
fbld
pusha
add
jg
mov
pop
icebp
push
mov
add
push
add
aas
inc
add
xor
pop
ja
mov
decl
imul
sbb
add
add
decl
dec
add
jmp
add
add
push
or
cmp
mov
inc
add
out
push
inc
add
test
icebp
imulb
mov
adc
xor
call
add
es
add
cmpsl
add
add
ljmp
out
mov
add
push
jns
push
add
pop
add
or
jne
cmp
add
add
into
aam
push
add
cmp
add
shrb
out
les
fdiv
sub
push
add
push
add
bound
ljmp
add
add
call
or
add
addb
jmp
lds
cltd
and
push
sbb
loop
jns
inc
add
jo
mov
insl
pop
push
add
sub
add
add
ljmp
sbb
jmp
mov
add
mov
cmpsl
add
sub
decl
repz
ret
push
sbb
inc
add
cmp
add
ss
add
inc
add
sahf
ja
add
push
cmp
mov
add
fildll
inc
add
adc
add
add
jnp
add
call
call
sbb
add
mov
add
add
movsb
add
pushl
ljmp
stc
loop
xlat
outsl
call
mov
loop
cmpps
sbb
or
dec
in
xchg
ja
xor
jmp
mov
inc
add
add
cmp
add
jns
in
sti
pop
pop
or
xchg
call
and
call
insb
jo
ljmp
out
xchg
les
lods
xchg
inc
add
push
add
data16
add
cmp
movsl
add
add
xchg
jmp
and
bound
jmp
or
fsub
add
call
mov
ja
iret
lds
pop
hlt
cmp
inc
add
cltd
or
addl
sub
lcall
pusha
add
jle
push
add
repnz
add
jns
idivl
add
jmp
mov
add
jecxz
fstl
add
repnz
pop
push
add
dec
inc
add
lret
aas
ljmp
push
xchg
lcall
add
mov
aam
mov
adc
jmp
add
fstpt
data16
movsl
add
notb
add
add
add
das
mov
movl
in
adc
lcall
ret
add
sarb
fcomp
movsb
add
add
std
jp
jae
inc
add
add
inc
add
stc
mov
jge
add
aam
or
loop
cli
and
mov
scas
sbb
jle
cmp
jmp
cltd
cmp
add
add
inc
add
repnz
xor
decl
add
add
add
add
add
rcrb
dec
xor
pushl
add
lcall
loope
int3
scas
dec
add
add
inc
add
dec
add
sbb
xchg
jecxz
pusha
add
lahf
std
ficompl
add
movl
add
add
xor
pushl
mov
add
adc
fs
mov
lods
mov
jl
pop
sub
add
or
jmp
add
cld
cmp
mov
add
in
push
or
fstpl
jmp
lock
fldcw
add
inc
add
ficompl
sbb
add
cli
ret
loopne
loopne
push
add
mov
adc
incl
call
lret
push
add
add
cmp
mov
or
add
cmp
mov
jl
add
push
push
add
add
mov
ja
int
imul
fsubl
xor
lcall
add
xchg
pop
jmp
cld
int3
call
mov
decl
add
jmp
mov
rorl
adc
jmp
in
sbb
inc
add
pop
jecxz
into
addb
add
jns
mov
daa
add
lcall
add
pop
mov
in
aaa
pop
jne
loopne
pop
mov
inc
add
fldcw
add
add
adc
lcall
aad
addl
loope
xor
lcall
lcall
add
add
xchg
xor
dec
jbe
add
dec
sar
sub
ds
aaa
mov
call
xor
decl
bound
incl
incb
add
jnp
lock
add
add
loop
js
xor
jle
push
xchg
mov
leave
adc
in
cmc
fiadds
movl
add
push
add
mov
push
ficoms
ljmp
pop
es
add
add
fbld
lcall
mov
call
ds
adc
add
add
sub
das
js
sbb
pop
pop
add
call
and
add
pop
stos
xchg
hlt
jno
jns
add
add
add
sbb
out
or
test
jnp
add
lcall
pop
add
dec
fisubl
add
sub
test
sti
push
push
add
xor
mov
add
add
sbb
in
dec
sahf
adc
ljmp
insl
inc
add
add
addb
into
jmp
aas
xchg
xor
call
xchg
data16
add
add
xchg
mov
push
add
nop
sbb
inc
add
xchg
mov
add
or
add
xchg
iret
aad
loop
std
mov
aaa
addl
lcall
fiadds
aam
sub
or
jne
outsb
test
div
pop
inc
add
dec
aaa
sub
scas
cmpsl
add
aam
add
fisubrs
jae
jmp
repnz
ljmp
lods
xchg
xchg
push
sti
push
pop
add
into
jl
add
scas
outsb
push
les
emms
adc
push
xchg
test
jmp
faddl
dec
cwtl
cmpsl
add
lcall
ret
pushf
dec
jp
sbb
push
add
push
xor
decl
loopne
popa
add
in
or
dec
inc
add
call
push
ret
xor
call
mov
add
call
add
jo
mov
cli
nop
xchg
xchg
insl
push
sub
add
aas
add
call
daa
add
fiadds
add
push
int3
roll
dec
lcall
lcall
add
xor
add
mov
lahf
movsb
add
add
pop
ret
pop
xor
push
add
add
inc
add
cltd
mov
add
and
push
add
jno
fstpl
pushl
add
pop
push
mov
jmp
mov
and
jg
scas
mov
add
jns
jge
repz
add
add
sub
sub
lret
jne
add
and
and
lcall
jecxz
jecxz
fstpt
push
mov
xchg
add
lcall
and
das
cmp
add
add
jne
nop
inc
add
addb
mov
xor
jmp
decl
inc
add
or
add
repnz
add
pushf
pop
push
add
pop
addl
cmpsb
add
ss
fdivs
or
pusha
add
cmp
add
mov
movsb
add
inc
add
mov
test
fmull
jae,pt
incl
push
notl
in
sti
movl
xchg
loop,pt
dec
fldl
add
add
add
add
incl
add
cld
lds
sub
add
add
add
in
imul
and
roll
add
call
incl
mov
push
add
outsl
inc
add
data16
push
add
dec
movb
push
add
add
in
dec
nop
fistps
add
fwait
jno
pushl
xor
jmp
add
or
into
pop
in
mov
mov
addl
mov
jp
add
mov
add
aam
mov
add
add
mov
add
dec
cmp
add
sbb
add
fwait
scas
and
ljmp
ljmp
lahf
sub
scas
cmp
add
dec
int3
sbb
sti
pop
outsb
aad
or
icebp
and
fadds
push
add
xchg
lea
outsl
mov
fcom
fildll
popa
add
roll
outsb
sub
lods
and
call
call
xlat
into
dec
jmp
add
xor
decl
sarl
scas
sahf
addb
add
nop
adc
sbb
inc
add
push
lock
les
inc
add
sub
das
ljmp
negl
xor
add
test
add
repnz
loopne
cli
les
lods
dec
lds
daa
add
fdivrl
repz
incl
xor
pushl
inc
add
dec
lcall
les
addr16
add
arpl
incl
pop
std
scas
push
mov
frstor
fsubp
add
daa
add
mov
imul
push
add
add
sub
add
add
icebp
ds
add
add
and
decl
dec
test
int
bound
incl
add
and
pushl
add
inc
add
push
add
inc
add
lods
aad
aaa
je
inc
add
dec
idivb
add
insb
sub
sahf
push
add
call
lcall
add
ret
lea
sti
adc
decl
mov
incl
outsl
ret
add
cmp
dec
mov
add
add
jne
mov
dec
xlat
imul
fadd
add
add
mov
idivl
mov
add
bound
ljmp
addb
add
outsb
testb
sbb
and
ret
mov
add
add
aas
imul
aad
test
int
add
aas
ljmp
rcr
popa
add
or
addl
add
inc
add
incl
pushl
and
decl
inc
add
jecxz
dec
push
add
cmp
mov
xchg
inc
add
and
lcall
xchg
mov
or
inc
add
inc
add
add
add
cmp
add
add
add
or
mov
out
inc
add
repnz
gs
add
enter
jp
add
sbb
ljmp
add
push
add
mov
mov
aas
das
pop
ret
add
and
cmp
roll
jmp
add
or
push
cmc
movsb
add
add
data16
add
mov
bound
inc
add
out
jb
ljmp
add
push
add
jbe
xchg
mov
push
fimuls
add
add
cmc
add
add
sbb
insb
fs
and
pushl
incl
dec
add
call
pushf
je
add
ret
lea
mov
dec
push
add
jno
jmp
xchg
push
add
inc
add
mov
mov
dec
mov
roll
sti
es
inc
add
mov
add
mov
add
les
dec
mov
xchg
imul
mov
inc
add
cwtl
push
decb
xchg
xchg
push
ret
add
cld
mov
add
add
jbe
roll
std
outsl
lods
add
fdivl
add
decl
add
sub
add
stos
jo
in
sbb
add
pop
add
xchg
paddusb
add
ficomps
add
add
das
addl
cwtl
mov
inc
add
cld
jno
ljmp
ret
add
pop
cli
mov
addl
notl
decl
add
mov
add
fidivrs
sub
add
xchg
jae
pushl
jnp
lds
xor
decl
inc
add
icebp
out
xchg
cmpsb
add
mov
or
js
imul
add
movb
bound
decl
add
add
decl
or
add
addl
add
inc
add
push
add
push
fs
rolb
fbld
add
jmp
dec
and
lcall
fdivrl
mov
add
in
xor
jmp
add
sbb
add
ret
ret
add
shr
and
incl
add
sti
cmpsl
add
add
rcl
addl
add
push
out
or
add
ss
push
mov
add
bound
ljmp
inc
add
push
ds
add
adc
jle
std
jae
inc
add
cli
pop
add
add
pop
add
add
lcall
hlt
inc
add
add
sti
addb
test
and
mov
add
add
les
push
test
push
add
fldl
add
mov
out
or
cltd
lcall
add
outsb
outsb
roll
mov
lock
fstpt
daa
add
inc
add
add
addl
push
add
xchg
pusha
add
cmp
mov
jno
lcall
int3
lods
inc
add
cs
mov
test
mov
xchg
mov
sub
mov
add
cli
out
fcomps
iret
jl
add
jl
add
pop
lahf
jg
xor
pushl
fwait
popa
add
adc
call
add
adc
lcall
out
ljmp
std
sbb
iret
cs
loopne
out
idivb
add
add
jae
ljmp
pop
in
ja
add
sbb
jo
push
mov
add
aam
add
mov
insb
or
add
fdivp
mov
add
jmp
add
pushl
add
call
add
cmp
add
roll
decl
mov
jnp
jecxz
or
cmp
add
das
mov
inc
add
int
dec
movl
add
jmp
add
jmp
add
push
ss
add
add
jns
add
mov
call
lcall
dec
push
push
add
faddl
add
addb
add
nop
lods
addl
add
push
jecxz
movb
add
xor
lcall
add
add
add
stos
push
add
scas
mov
into
stos
lea
mov
add
cmp
lcall
jge
enter
and
pushl
mov
stos
repnz
nop
dec
addl
fcoms
add
stc
mov
jmp
movb
inc
add
leave
adc
xor
decl
add
int3
shrl
sub
add
add
pop
add
add
sub
mov
add
mov
int3
jbe
add
jle
lea
pushf
ldmxcsr
add
and
jmp
mov
add
testl
outsb
inc
add
xor
test
fidivs
mov
add
js
add
int
push
add
stos
mov
add
stc
leave
xor
decl
jl
add
add
add
add
xchg
mov
xchg
pop
out
pushf
popf
cli
fldt
add
cmpsb
add
adc
decl
jle
int3
test
add
call
lcall
xor
jle
add
add
rorb
sub
divb
pushf
mov
mov
add
mov
movb
inc
add
out
mov
cmpsb
add
cmp
jg
add
mov
outsb
hlt
jnp
add
add
jns
add
add
jmp
fsubp
add
lds
push
cmp
add
add
add
mov
cld
mov
rorl
icebp
mov
add
rolb
in
push
fnsave
incl
add
inc
add
addl
add
and
fcoml
xchg
sub
xor
incl
int
pop
daa
add
inc
add
inc
add
out
xlat
sub
test
jb
jmp
jno
push
and
jmp
lret
pushl
mov
cli
sbb
add
add
data16
inc
add
pop
sarl
nop
aaa
movsb
add
add
addl
cmp
pushl
push
hlt
xor
add
lcall
sub
inc
add
fisubrs
les
add
incl
or
add
add
add
stc
jne
dec
out
nop
push
cwtl
and
ljmp
xchg
pop
lods
mov
sub
add
and
dec
mov
xor
ret
add
enter
jmp
add
mov
into
addb
xchg
adc
cmp
add
incl
add
movb
addb
mov
push
xchg
lods
lods
dec
jecxz
jge
add
shrb
adc
lcall
lcall
sbb
mov
add
add
add
add
pop
push
add
stos
addb
in
xor
decl
dec
rorl
xlat
insl
fldcw
out
sbb
add
jmp
and
out
add
add
mov
call
add
sbb
cmpsb
add
sub
scas
adc
pushl
cld
lds
ror
pop
xlat
mov
add
push
add
movl
mov
sub
sub
mov
mov
add
decl
rol
add
add
mov
out
inc
add
mov
imul
mov
stos
mov
xchg
leave
inc
add
jp
xor
lcall
in
cmp
add
mov
incb
test
xor
lcall
aaa
mov
add
mov
add
ja
add
lds
es
xchg
xor
incl
decl
xchg
enter
fisttpl
sbb
cmp
hlt
and
add
pushl
add
xchg
adc
incl
sub
mov
push
jge
add
in
mov
cmp
addr16
add
cmp
gs
cmp
add
and
push
sbb
add
popf
scas
push
add
fldenv
ss
sbb
jmp
inc
add
mov
xchg
mov
ret
flds
add
xchg
dec
rorb
js
mov
addl
mov
add
xchg
push
mov
add
add
enter
add
ret
add
out
fistps
mov
add
add
std
xor
decl
clc
mov
sbb
add
in
push
sub
inc
add
sub
mov
jl
add
jle
pusha
add
jl
xchg
dec
addl
pop
pop
xlat
inc
add
sbb
and
xlat
xchg
pop
sbb
add
addl
inc
add
test
add
in
cmp
loop
movsb
add
add
or
mov
jmp
add
or
xor
mov
gs
ss
mov
add
add
inc
add
and
xchg
pop
rolb
add
sahf
stos
lods
roll
pushl
xor
xchg
cmp
movl
lcall
addl
jno
ljmp
add
mov
ret
add
fstl
add
mov
adc
pushl
add
fadds
jl
jmp
xchg
sbb
add
dec
in
jmp
dec
stos
or
add
insb
repz
rclb
in
ret
add
jne
add
out
jmp
add
inc
add
sti
lock
pop
xchg
jb
pushl
popf
jnp
xchg
roll
add
jge
dec
rolb
add
aad
lahf
dec
xor
test
add
movb
add
adc
mov
pop
jnp
add
jmp
in
pop
add
add
xor
add
addl
hlt
jno
ljmp
addb
add
add
xor
call
test
out
inc
add
popa
add
xchg
stos
lret
jg
js
roll
add
push
add
inc
add
add
call
pop
outsl
stos
sub
sub
add
inc
add
or
nop
icebp
iret
imul
pop
xchg
jnp
add
add
adc
pushl
cwtl
jne
or
fwait
push
xchg
pop
pop
push
add
les
dec
out
call
and
movb
add
cmp
add
add
divl
cmp
add
testl
sbb
jmp
fiadds
add
xor
push
out
xstore-rng
cmpsl
add
add
insl
mov
leave
cmp
rorb
push
iret
idiv
mov
inc
add
mov
add
out
ret
mov
add
je
int
add
adc
out
repz
add
ficoms
add
mov
mov
add
ret
add
ljmp
or
jle
leave
cmp
or
jg
push
pop
or
lret
in
in
fisubl
push
jp
add
fdivr
ss
insl
out
pushl
or
add
je
mov
cmpsb
add
daa
add
aam
nop
cwtl
int
jns
pop
inc
add
cmpsb
add
call
mov
jl
add
out
cmpsb
add
cli
add
add
xchg
sbb
or
decl
xchg
jno
incl
jmp
add
cmp
addl
out
mov
add
cmp
sbb
add
movsl
add
jge
sti
sub
addb
dec
cmpsl
add
out
fwait
and
inc
add
pop
je
leave
loopne
sub
pop
mov
add
mov
sbb
add
das
xchg
mov
mov
add
mov
mov
add
ljmp
sub
add
add
nop
push
add
and
cmp
push
mov
or
dec
lcall
sub
xchg
out
out
xchg
ret
movsb
add
cmpsl
add
add
fwait
jo
jmp
add
xchg
add
sbb
cmp
aam
or
add
jp
sub
movsl
add
and
decl
rolb
add
sub
xchg
pop
xchg
sbb
lahf
imul
mov
roll
out
ror
jbe
add
scas
push
add
push
jmp
add
add
icebp
roll
add
push
add
dec
pop
popl
dec
cli
add
pusha
add
mov
mov
sub
add
cmp
adc
call
scas
xor
jmp
sbb
xor
jmp
addl
addl
pop
stc
mov
inc
add
jnp
mov
add
add
add
add
sbb
sbb
add
pop
jg
add
popa
add
lcall
pop
pop
push
and
ljmp
cli
adc
jg
popa
add
jne
xor
add
roll
test
pop
rcll
decl
shll
dec
cli
mov
jnp
pusha
add
pop
roll
add
mov
lcall
and
decl
add
loop
ret
add
cltd
ljmp
call
push
add
inc
add
aam
add
adc
add
lcall
dec
daa
add
xor
add
fcmovb
add
add
cmc
add
cmpsb
add
add
add
xor
add
push
or
add
icebp
push
add
fadd
add
or
mul
add
xchg
cmpsl
add
outsb
mov
pop
std
arpl
jmp
add
add
stos
pusha
add
movb
stos
imull
jb
incl
ja
std
shlb
jo
ljmp
add
add
xchg
or
jne
data16
adc
mov
lods
push
ljmp
add
call
jmp
popf
ss
add
mov
add
aaa
rorl
fldenv
add
movsb
add
mov
pop
clc
addl
repz
add
int
add
rcll
add
mov
sbb
add
inc
add
fiaddl
jge
in
lcall
or
imul
pushl
decl
sahf
loopne
into
sti
mov
call
add
jae
jmp
add
fisubs
pushl
ljmp
add
jg
pop
das
xor
decl
scas
mov
data16
add
mov
add
sbb
lret
sti
jae
incl
jmp
add
sahf
or
add
xor
dec
sahf
add
add
xor
scas
jae
push
sbb
jne
test
aad
add
add
ljmp
cmc
push
add
sahf
movsb
add
add
lea
cld
test
lods
addb
jae
jmp
add
sub
add
mov
cmpsb
add
mov
push
add
call
sbb
jns
cmp
add
rorl
std
add
cmp
fildl
lahf
xor
incl
xchg
imulb
add
add
add
dec
cwtl
sbb
mov
mov
outsb
push
leave
sub
mov
add
dec
mov
push
add
ja
and
call
loop
cs
cltd
fcmovne
jno
decl
add
inc
add
add
call
incl
insl
jns
add
call
addl
mov
xchg
xchg
dec
in
xchg
add
cmp
movsl
add
mov
ds
into
pop
jg
or
call
cli
adc
ljmp
mov
add
hlt
neg
pop
insl
mov
cmp
add
add
out
sub
call
add
add
fdivrl
add
bound
call
call
push
ficoms
add
mov
adc
push
popa
add
dec
insb
adc
fincstp
lods
jecxz
push
jecxz
ljmp
inc
add
and
pushl
popf
sbb
jmp
jnp
add
add
xchg
inc
add
out
cmp
test
mov
adc
incl
add
pop
cmp
or
xor
add
xchg
sub
loop
out
inc
add
aaa
jo
incl
or
sbb
add
mov
ds
add
ljmp
add
xchg
add
pushl
leave
adc
lahf
xor
ljmp
push
xor
incl
add
addb
add
call
jmp
add
add
lcall
fmull
imul
add
sahf
addb
dec
in
call
jmp
add
add
call
mov
stc
mov
add
js
dec
or
ret
popa
add
sbb
add
jno
push
or
out
nop
mov
pop
mov
xchg
jp
mull
add
mov
loope
dec
fidivrl
pop
fmull
mov
and
incl
add
mov
sbb
loope
push
outsb
scas
aaa
mov
add
inc
add
sub
and
decl
add
inc
add
stos
xchg
je
es
ret
add
pop
arpl
decl
mov
add
lcall
lcall
inc
add
add
add
insl
arpl
decl
and
or
add
loopne
enter
cmp
icebp
mov
stos
inc
add
fdivrs
jne
inc
add
jl
add
dec
xchg
lods
pop
sbb
pop
les
ds
in
into
imulb
dec
jp
rolb
add
xchg
xor
lcall
push
mov
add
push
add
pop
add
add
sbb
stos
sub
add
stos
adc
not
inc
add
mov
inc
add
aas
pop
adc
rolb
dec
scas
adc
mov
sbb
scas
mov
addl
mov
and
add
addl
jle
xchg
inc
add
scas
xchg
jb
pushl
pop
mov
add
add
xchg
pop
cli
pop
in
jmp
sub
add
cmp
sub
add
add
sbb
push
add
inc
add
in
sub
dec
dec
out
jg
add
xlat
mov
push
add
in
jae
call
mov
mov
movsl
add
ljmp
decl
xor
decl
cmc
mov
lcall
add
out
xor
mov
fwait
inc
add
stos
push
xor
lcall
mov
lods
mov
addl
sbb
sub
hlt
mov
add
daa
add
sbb
pop
add
add
filds
add
enter
cmc
sub
add
add
call
add
out
mov
mov
add
push
add
or
add
and
call
mov
cwtl
sbb
add
js
add
lret
lahf
xchg
inc
add
mov
add
add
loop
iret
add
ljmp
push
xor
jecxz
jl
add
dec
xor
inc
add
add
bound
jg
dec
hlt
addl
add
int
jmp
ja
cltd
mov
lcall
test
mov
test
les
roll
add
add
lcall
add
add
add
nop
xchg
or
dec
push
add
add
sarb
add
inc
add
jp
add
ss
call
int
in
pushl
decl
add
add
popf
imul
ss
push
add
out
inc
add
xchg
pusha
add
sbb
xor
ljmp
jb
jle
add
call
xchg
in
add
pushf
pop
add
jns
add
add
loop
cmp
add
sbb
pushf
adc
mov
addb
add
add
push
mov
add
movsl
add
add
sbb
call
push
add
and
push
cmc
enter
xchg
mov
faddl
ret
add
add
test
clc
or
jg
add
add
sti
or
lea
cli
out
mov
add
addb
leave
adc
lcall
add
out
xor
cmp
add
sti
imul
add
xchg
pushf
mov
lcall
fmuls
add
cmc
prefetch
add
jmp
add
mov
add
and
dec
mov
add
add
add
xchg
push
push
or
push
call
aas
mov
jnp
add
sub
std
shrl
cmp
mov
pop
addl
inc
add
mov
les
pushf
or
add
cmp
add
inc
add
jp
adc
pushl
push
in
jb
test
movb
shld
add
add
cld
aad
xor
jmp
addb
add
add
add
pop
mov
add
mov
adc
ljmp
mov
sarb
cli
cmp
push
add
mov
cld
movsb
add
cmpsb
add
dec
and
add
lcall
bound
push
mov
add
add
rolb
add
in
addl
pop
addl
iret
or
jg
pop
xchg
fsubl
das
lods
or
add
int3
hlt
stos
mov
add
mov
add
das
pop
inc
add
cmp
mov
add
jns
repnz
fimull
std
popa
add
mov
pushf
test
jle
add
jnp
or
xchg
sbb
jl
pop
pop
xchg
pop
mov
or
lcall
add
add
addb
add
lods
shl
movb
sahf
popf
aas
fs
aad
xor
fisubs
inc
add
add
rcl
xchg
enter
ljmp
mov
inc
add
push
jl
add
aam
lds
or
mov
imul
and
jae
ljmp
ret
add
add
jne
dec
mov
mov
xchg
or
dec
addr16
loopne
mov
test
push
cmp
mov
or
adc
incl
lcall
cmp
into
cmp
std
pop
int3
jp
add
inc
add
repnz
add
enter
decl
out
pop
rcr
aas
inc
add
adc
add
sbb
add
rclb
jmp
add
add
adc
jmp
call
aam
pop
enter
add
cld
and
out
mov
bound
jle
add
sub
lea
inc
add
sti
sbb
bound
decl
call
adc
decl
inc
add
and
pushl
add
mov
add
stc
pop
add
mov
mov
dec
dec
in
scas
mov
push
add
inc
add
add
aad
sub
call
ror
mov
aad
add
jmp
stos
push
lock
mov
js
add
dec
test
cld
add
add
ja
fsubrl
mov
test
and
call
incl
mov
add
inc
add
add
add
inc
add
stc
mov
lods
test
rolb
imul
add
add
inc
add
xlat
in
jnp
mov
add
cmp
call
add
adc
fiaddl
int3
mov
add
cmpsb
add
popa
add
jno
mov
add
add
add
mov
inc
add
add
add
add
pop
sahf
daa
add
lcall
aas
fstps
jmp
pushl
ljmp
push
push
mov
add
mov
mov
add
fstpt
fbld
pushl
loope
xchg
pop
in
sbb
jg
nop
dec
cmpsb
add
add
pushl
add
addb
ss
shll
xlat
pushf
sbb
add
fs
aad
push
add
sub
add
push
repz
mov
pop
add
dec
dec
pop
mov
add
movsb
add
cs
add
add
test
js
sbb
add
das
xchg
pop
jmp
lahf
mulb
or
jp
fisubrl
fidivrl
inc
add
ret
add
add
add
xchg
mov
hlt
addb
add
ret
add
add
add
das
xor
add
and
movsl
add
cltd
leave
cli
jg
lods
mov
jnp
addb
jne
add
cmp
incl
add
add
cmp
incl
imul
push
aas
pop
call
pushl
xchg
clc
scas
mov
addl
add
not
fwait
pop
ljmp
pop
adc
decl
xchg
popa
add
in
inc
add
push
add
pop
les
test
xchg
std
push
je
addl
add
sbb
add
mov
inc
add
call
clc
data16
add
inc
add
shll
mov
add
call
and
pushl
adc
call
and
jmp
add
inc
add
cmp
ja
mov
test
add
nop
aas
jns
jnp
add
fnstcw
add
sti
jmp
add
add
adc
decl
int3
leave
lds
xchg
lods
aad
add
mov
test
add
cld
jl
dec
sti
outsl
sbb
scas
aas
mov
inc
add
arpl
decl
add
add
lret
add
inc
add
cli
ficomps
xor
ljmp
dec
fadds
push
or
push
rcll
aad
sbb
jg
pop
add
add
loop
xor
lcall
adc
mov
push
data16
out
add
pushl
lock
push
inc
add
ret
or
add
push
or
push
dec
lcall
add
xor
leave
in
out
les
cld
decb
dec
rolb
jns
sbb
mov
jmp
add
stos
popa
add
mov
mov
out
stos
data16
or
jb
cld
test
sub
add
out
push
add
sbb
xchg
lea
gs
mov
pusha
add
enter
cwtl
outsb
icebp
xor
add
loope
dec
cmp
add
in
pop
popa
add
mov
stos
movsb
add
out
sbb
add
sub
pop
aad
add
add
stos
out
jb
lcall
cmc
mov
add
call
xor
fnstenv
ljmp
jmp
add
xchg
sbb
add
push
push
test
and
add
add
add
test
lds
pusha
add
call
imul
int
add
pop
jg
xchg
pop
mov
push
add
rolb
add
nop
mov
add
data16
lds
mov
imul
call
fld
add
add
add
lret
movb
or
sarl
insb
das
int
add
add
daa
add
xchg
sti
push
add
sub
push
data16
jge
add
add
xchg
dec
add
jmp
add
movb
add
jo
ljmp
les
and
lret
loop
ds
daa
add
ljmp
cmp
fdivrs
movl
fisubrl
push
add
sub
addb
add
and
decl
ret
add
mov
stc
xor
decl
mov
add
add
fsubrs
add
jg
adc
ljmp
jne
lods
add
je
out
pop
push
sti
scas
out
ljmp
loop
jmp
in
inc
add
outsl
pop
add
add
outsl
outsl
dec
aad
add
imul
nop
sbb
in
ret
add
inc
add
fcmovb
add
xrelease
add
or
mov
sbb
mov
add
dec
sub
add
insl
push
rolb
je
inc
add
jge
test
mov
push
push
xchg
arpl
jmp
enter
sbb
add
lcall
add
test
ret
push
xor
ljmp
push
add
into
jb
jp
pop
add
call
xor
mov
jo
ljmp
add
xchg
add
decl
je
addr16
ljmp
mov
mov
in
push
cmp
add
sub
lcall
adc
jmp
add
in
outsb
addb
mov
lea
jmp
jle
add
loop
loope
mov
add
jle
add
add
sbb
rorb
in
nop
jg
aad
data16
cwtl
pop
inc
add
xchg
cwtl
in
hlt
add
inc
add
adc
lcall
add
push
incl
add
cwtl
push
mov
xchg
sub
add
xor
fbstp
decl
sub
add
pop
ja
sub
mov
add
inc
add
jmp
xor
add
in
mov
outsb
popf
jno
ljmp
out
lods
xor
call
adc
lcall
popf
jp
add
icebp
sub
stc
xlat
xor
cmc
scas
inc
add
add
xor
ljmp
pop
mov
add
cmp
push
out
les
ds
add
or
add
loop
adc
add
sbb
addl
add
pop
jge
addl
add
xchg
mov
divl
add
fsub
add
xchg
repz
cs
mov
add
cmp
test
jg
js
add
addl
add
repz
xor
pushl
rorb
inc
add
scas
insb
inc
add
mov
and
rcrb
add
insb
dec
mov
add
insb
imul
dec
bnd
add
sti
rolb
shrb
add
sarb
jg
cltd
loop
es
out
push
push
mov
pop
add
ljmp
add
into
nop
pop
xor
sub
add
cmpsl
add
pushf
shlb
add
jp
add
addl
push
xchg
mov
inc
add
clc
fmuls
pushf
cmp
shlb
call
inc
add
add
or
jecxz
pop
stc
pop
lret
cmpsb
add
cmpsb
add
jl
add
jge
movsb
add
decl
add
push
pop
jmp
inc
add
aas
pop
out
addl
add
test
push
imul
movb
hlt
roll
xor
add
loopne
dec
fldcw
pushf
fwait
lock
add
in
aaa
and
cmp
sub
dec
rcrb
pop
add
jmp
add
fst
sahf
hlt
adc
add
lods
je
add
add
fisubrl
movb
jp,pt
lds
mov
push
cmp
mov
test
add
sbb
addb
loopne
sub
push
popa
add
sahf
dec
fcomps
cs
test
sti
xchg
test
push
cs
add
push
add
and
ret
add
inc
add
dec
xlat
jne
mov
inc
add
add
pusha
add
add
decl
in
dec
shl
lds
xor
incl
scas
pop
out
mov
jne
add
push
mov
jle
add
das
mov
bound
dec
mov
test
cmp
mov
add
mov
std
fbld
add
fnstsw
pushl
mov
add
out
rolb
insb
iret
rcll
lcall
out
pop
pop
lock
add
ljmp
dec
addb
clc
sub
call
add
movsb
add
inc
add
gs
mov
xchg
aad
or
lock
mov
fcoms
mov
enter
jnp
movl
mov
mov
aas
add
jmp
inc
add
loopne
and
mov
popa
add
stc
mov
sbb
sub
add
xchg
fucom
add
ljmp
add
cmpsl
add
add
lods
add
decl
xor
pushl
outsb
add
js
xchg
adc
call
and
nop
shll
incl
add
stos
stos
je
js
add
add
jmp
ss
pop
int3
jae
sti
or
std
jg
loop
add
lcall
add
testl
std
sbb
ljmp
cmpsb
add
add
mov
mov
movsl
add
add
int
xchg
repz
lcall
mov
add
and
pushl
mov
pop
iret
movl
lret
add
jno
jmp
mov
lret
lods
and
jle
movsl
add
fincstp
jne
ss
stc
adc
incl
incl
add
push
rolb
add
cmp
add
das
jge
add
add
addl
inc
add
fst
inc
add
add
sbb
jbe
addr16
lock
insb
cmp
add
ja
shll
fnstsw
addl
inc
add
jne
add
xor
out
mov
inc
add
mov
clc
or
add
lods
test
jnp
and
cwtl
xchg
add
add
cmc
imul
mov
add
aas
jbe
mov
shlb
call
or
xchg
sub
sbb
add
add
popa
add
adc
call
add
add
jns
lcall
fimuls
je
add
scas
sbb
add
jle
add
cltd
stos
and
incl
call
call
bound
jnp
shlb
add
sub
add
shr
addl
add
add
jmp
pushl
add
xchg
fldcw
add
stc
cmpsb
add
incl
shrb
add
ljmp
xchg
cmp
imul
add
into
push
iret
addb
add
cmp
add
enter
sub
add
inc
add
add
sbb
setnp
test
mov
stc
add
call
jmp
add
fistl
push
jb
jmp
decl
add
hlt
imul
adc
fsts
mov
lret
mov
xchg
enter
call
add
adc
scas
cld
fstpt
or
roll
lock
enter
fstpl
or
add
test
movb
jns
cli
add
lahf
mov
add
dec
xchg
fwait
mov
fadds
add
clc
push
push
and
movb
add
add
push
and
cltd
or
pop
mov
inc
add
mov
loope
push
add
pop
jno
incl
sahf
std
push
into
sbb
das
cli
das
nop
jno
incl
fisttps
ljmp
insb
cmpsl
add
push
and
call
add
outsl
push
add
dec
jnp,pn
jno
js
add
cli
add
add
iret
stos
cli
cmp
roll
add
sub
iret
mov
adc
decl
add
loopne
mov
sub
add
sbb
std
add
fldt
or
mov
jp
jno
inc
add
push
add
scas
xchg
ljmp
jge,pt
out
aam
pop
add
add
jecxz
mov
daa
add
add
ficompl
test
in
jmp
lahf
out
jne
and
call
call
decl
adc
ljmp
add
mov
dec
in
push
add
dec
push
icebp
pop
push
and
xlat
mov
push
fidivs
add
sub
nop
xor
sbb
add
and
pushl
call
add
mov
dec
or
inc
add
or
ljmp
add
pop
xor
push
and
cmpsl
add
int3
scas
mov
decl
addb
cs
sub
add
add
sahf
rcl
lcall
aad
add
inc
add
add
mov
cmpsl
add
pop
insl
cmp
jb
ljmp
push
add
into
addl
add
add
sbb
add
jmp
or
mov
je
arpl
mov
jno
incl
jmp
jmp
add
sbb
ljmp
add
je
les
ret
add
inc
add
lods
push
add
cmpsb
add
add
test
mov
mov
add
push
popa
add
sbb
push
loop
loop
pop
cmpsl
add
or
decl
mov
sbb
push
push
roll
add
sbb
add
jecxz
pop
sub
int3
nop
loope
mov
shlb
lods
xchg
add
and
decl
popf
push
popf
jno
pushl
js
mov
xor
call
sbb
data16
incl
add
adc
sub
addl
sbb
mov
add
dec
stos
mov
shr
cld
out
jne
and
stc
push
add
outsl
pusha
add
jb
decl
ret
pop
sub
add
or
add
dec
lea
mov
mov
addb
add
push
sbb
add
push
iret
rolb
aas
sbb
sbb
adc
ljmp
adc
pushl
loope
jnp
add
add
add
mov
lock
add
add
lods
ds
add
inc
add
xlat
inc
add
enter
or
pop
add
fidivs
call
pop
nop
clc
test
int3
jnp
mov
test
push
lcall
add
cmp
lds
test
dec
icebp
xchg
into
adc
out
mov
sbb
add
sub
ret
stos
mov
outsb
mov
add
mov
lret
sbb
sub
movb
add
add
jp
jmp
psraw
not
pushf
int3
xor
add
lret
xor
popf
nop
push
add
incb
incl
sti
mov
lcall
mov
jno
stc
addb
insl
into
lods
adc
decl
pop
test
add
add
jo
mov
add
xor
lods
or
add
std
cmp
jmp
push
adc
inc
add
xchg
inc
add
and
jmp
jl
or
inc
add
jne,pn
add
stos
add
pushl
add
add
incl
les
mov
jbe
add
xor
mov
fstps
sbb
fdivs
add
rorb
lcall
bound
loopne
ficoms
add
mov
push
roll
and
incl
lcall
pusha
add
push
aaa
mov
sahf
popf
sub
fcomip
call
jo
incl
sub
add
js
sub
das
inc
add
dec
mov
add
dec
add
add
mov
pop
xor
call
jg
jae
incl
add
add
addl
add
xor
call
sti
adc
add
enter
add
adc
incl
pushl
sbb
fst
mov
jp
or
xchg
cli
xchg
mov
lods
add
mov
add
fmul
jns
add
ret
add
add
fldl
ljmp
xchg
cmp
add
xor
incl
mov
jmp
add
jge
add
add
out
xor
call
add
fwait
scas
pop
add
add
add
add
add
leave
add
push
roll
add
data16
sahf
popf
loope
outsl
xor
lcall
add
ss
test
push
mov
push
push
pop
sub
test
lods
pop
mulb
add
mov
add
ljmp
add
add
stos
cli
cmc
cmc
jno
ljmp
mov
loopne
add
inc
add
add
add
scas
sbb
imul
pop
lea
stos
int3
xlat
mov
daa
add
movl
inc
add
xchg
add
pushl
add
push
ds
mov
icebp
rorb
add
jecxz
insl
dec
inc
add
add
fnstenv
mov
in
add
lds
xor
push
cmp
xor
pushl
mov
or
fisubl
add
and
lcall
loope
addl
std
daa
add
aas
add
les
iret
loopne
test
mov
add
add
pushl
push
add
xchg
outsb
movsb
add
icebp
sbb
or
hlt
cmp
loop
jp
dec
out
pop
fsubp
add
ljmp
lret
xor
pushl
pushl
pop
push
test
jae
jmp
add
inc
add
add
aaa
and
cmp
lret
loopne
cmp
test
aad
mov
pushl
out
mov
in
dec
cmp
lret
add
lcall
add
ds
lahf
movb
jnp
jo
lcall
xchg
push
fucomp
xchg
outsb
add
add
add
mov
inc
add
aam
xor
ljmp
add
add
adc
add
cmp
jno
lcall
push
add
loope
sbb
mov
add
sbb
xor
fsubrp
pop
loopne
cli
and
mov
fsub
add
push
add
sbb
and
push
inc
add
add
xchg
mov
jmp
movsb
add
mov
sbb
mov
add
xor
fwait
dec
int3
or
add
add
xor
pushl
cmp
add
and
mov
in
inc
add
rclb
test
lcall
mov
push
movsb
add
add
stc
add
lcall
cs
add
add
cmp
mov
test
add
add
scas
cli
jno
out
rolb
dec
cmc
push
sbb
add
add
inc
add
stc
loope
cmp
lea
movsl
add
mov
ljmp
add
add
insl
popa
add
les
out
dec
jle
add
adc
ljmp
sbb
inc
add
ret
add
les
push
rolb
add
sub
add
imul
lea
cmpsl
add
jno
jmp
pop
mov
pop
add
add
xor
incl
add
add
ljmp
dec
imul
push
dec
jmp
add
jp
rolb
jns
add
in
stc
xchg
dec
and
jmp
sub
iret
addb
aaa
or
addb
add
or
mov
add
add
mov
cmpsl
add
add
fists
add
jo
call
fsubl
int3
scas
mov
jmp
mov
and
xor
ljmp
test
add
mov
stos
movb
nop
ret
add
call
add
dec
jb
call
push
adc
incl
add
shl
add
pop
sbb
fisubrs
push
and
mov
mov
loopne
mov
dec
fcmovne
rcrl
enter
mov
aad
add
cld
hlt
add
add
add
in
and
incl
add
push
add
cmpsl
add
adc
lcall
sbb
add
test
addb
add
jo
jmp
jbe
push
jne
mov
aad
mov
test
add
add
push
lahf
mov
add
dec
movl
loop
jbe
add
pop
insl
decl
bound
clc
jns
add
fwait
ja
add
add
mov
mov
sbb
dec
mov
add
pop
jmp
add
incl
add
jmp
lret
movsb
add
test
lea
clc
cmp
jle,pn
add
xor
add
add
xchg
xchg
xchg
in
fists
mov
bound
pushl
and
cmp
add
push
xlat
lahf
inc
add
jg
add
sbb
cmc
mov
cmp
addl
add
repz
outsl
popf
nop
cs
add
adc
loopne
add
or
into
cld
in
test
fimuls
lods
addl
in
xchg
out
cmp
mov
push
add
addl
in
mov
add
add
das
iret
mov
ss
add
sbb
roll
add
or
inc
add
fxsave
add
jmp
ljmp
inc
add
or
cmc
repz
icebp
fdivs
sti
dec
imull
movb
in
out
in
push
add
lods
cld
push
add
add
xchg
repnz
add
incl
call
mov
add
scas
xchg
stos
pop
mov
add
add
mov
call
jmp
inc
add
inc
add
ficoms
push
add
add
add
push
cmp
add
addb
add
add
pop
pop
jo
jmp
dec
inc
add
or
std
lahf
inc
add
add
xor
ljmp
lds
addl
add
sub
inc
add
cmc
in
out
les
xor
incl
add
add
add
xor
lcall
cli
lahf
mov
xchg
and
call
mov
or
add
push
add
inc
add
add
lods
jno
dec
add
push
pop
jge
xchg
scas
mov
mov
add
dec
push
sbb
add
dec
jne
outsl
mov
add
jle
dec
repnz
add
daa
add
add
add
and
cmp
adc
push
push
add
xor
mov
add
shlb
lcall
addb
in
mov
xchg
mov
lahf
addl
sbb
loop
sub
inc
add
je
lcall
push
add
fcoms
incl
call
inc
add
inc
add
int3
mov
sbb
add
cmp
test
xchg
sti
mov
sahf
dec
and
cs
and
lcall
dec
aas
out
dec
mov
add
decl
cmp
add
lahf
and
incl
add
jecxz
push
add
rorl
jle
stos
ds
jns
and
pushl
add
in
nop
loop
lds
daa
add
aam
or
ret
adc
call
cmp
call
call
add
dec
fidivs
int3
push
fisubrs
test
mov
mov
ljmp
pop
sub
cmc
push
sarl
push
add
mov
add
xor
call
xor
ljmp
jmp
add
sub
add
mov
js
std
mov
add
jb
ljmp
rolb
cmp
push
loop
adc
jmp
decl
in
roll
pop
mov
ret
add
xchg
adc
call
cld
sbb
stos
addl
cmp
add
pop
xchg
push
add
imul
ljmp
push
add
data16
add
add
cmp
mov
jo
incl
add
adc
pushl
add
mov
add
mov
dec
lret
dec
sbb
hlt
mov
add
xor
pushl
incl
out
and
call
stos
push
add
jecxz
shlb
int
add
mov
inc
add
xor
lea
pop
xlat
mov
mov
add
decl
add
add
call
cmp
mov
add
incl
pushl
lcall
add
stc
jo
out
jmp
bnd
jp
add
mov
pop
and
decl
jno
lcall
test
push
sbb
add
add
lea
jmp
add
xchg
mov
and
cmp
pop
and
decl
aam
ja
add
jle
and
incl
cmp
add
xchg
cmp
add
jl,pn
adc
ljmp
je
sbb
add
jl
add
popa
add
jnp
int3
jae
pushl
aaa
lret
flds
frstor
dec
idivl
decb
cmp
cs
sbb
mov
add
pop
pusha
add
ret
inc
add
pusha
add
sbb
add
pushl
add
incl
pushl
call
add
mov
inc
add
sub
pushl
add
divl
test
js
aad
lret
xchg
nop
fisubs
xchg
dec
iret
adc
decl
add
clc
inc
add
mov
notb
add
add
jmp
add
mov
and
add
popa
add
push
add
daa
add
inc
add
iret
jae
call
add
insl
jo
stc
jmp
add
add
cmpsb
add
add
dec
dec
enter
pop
push
dec
cld
mov
add
ja
cltd
mov
test
pop
mov
and
decl
sub
jmp
add
std
or
xchg
jo
ljmp
lcall
cld
dec
imul
inc
add
decl
add
or
addb
xor
pushl
insb
push
xor
dec
sbb
popf
imul
add
or
add
fnsave
push
add
fstpl
addb
ficompl
movsl
add
add
jns
insb
inc
add
add
pop
aam
dec
mov
dec
fcmovu
mov
add
pushf
scas
lods
adc
lcall
sbb
add
popa
add
aas
lods
sub
add
ljmp
add
fidivl
add
les
popa
add
mov
insb
loop
mov
xor
dec
xchg
inc
add
add
and
fnsetpm(287
add
das
sbb
stos
cmpsb
add
add
push
add
insb
in
push
add
dec
pop
dec
sahf
out
mov
add
int3
pusha
add
mov
add
cld
in
pop
fbld
jecxz
add
add
add
shr
push
add
addl
inc
add
rolb
roll
fiadds
xor
call
add
dec
test
int3
push
negb
les
pop
lcall
sbb
add
add
add
enter
dec
dec
insb
add
jmp
add
stos
adc
jp
fsubrs
push
jo
lcall
pop
sub
lds
mov
add
movsb
add
push
push
pop
sahf
jns
dec
into
mov
mov
mov
idiv
or
addl
add
mov
mov
call
add
out
mov
adc
pusha
add
pop
jmp
add
pop
lods
sub
push
jle
jle
fwait
mov
jnp
inc
add
mov
inc
add
add
cmc
cmp
add
push
add
pop
scas
add
pushl
fisttpll
add
push
add
jecxz
dec
fdivs
add
push
mov
add
push
movl
mov
rcl
mov
sbb
add
add
ffreep
add
or
daa
add
lea
fwait
and
incl
jne
add
push
jae
inc
add
add
mov
add
add
inc
add
add
cmp
add
add
fdivl
add
add
add
mov
add
xor
inc
add
mov
xor
jmp
icebp
sub
add
jp
add
fisubs
pushl
pushf
into
pop
adc
pushl
decl
sub
cmp
cmp
jns
adc
add
jmp
add
jae
decl
add
add
shrl
cmp
rolb
incl
lret
xrelease
ljmp
add
add
cld
jnp
jp
add
cmpsl
add
add
add
mov
add
xor
jmp
add
and
jmp
loopne
mov
pop
mov
mov
xor
ljmp
mov
add
mov
clc
pop
push
add
cld
push
dec
fisttpl
out
push
inc
add
sub
mov
mov
pop
int3
in
out
mov
call
in
in
sbb
scas
inc
add
add
jmp
aad
mov
xchg
jle
loop
and
out
fsubrs
dec
jno
ljmp
add
mov
add
repnz
incl
decl
jnp
sub
mov
pop
or
add
addb
ds
je
add
add
jge
iret
or
decl
popa
add
push
addb
add
and
push
fildll
add
ret
add
add
dec
add
mov
add
or
add
inc
add
fst
in
in
testb
add
pushf
adc
lcall
stc
sarl
mov
call
ljmp
pop
mov
pushl
add
add
mov
add
fcomps
out
sti
fisubrl
dec
push
adc
lcall
mov
mov
sbb
lcall
imul
stos
mov
sub
add
adc
lcall
stos
and
lcall
push
add
icebp
push
pop
mov
mov
add
add
lcall
sbb
add
ljmp
imul
mov
mov
add
ljmp
add
jl
add
sub
add
outsb
pop
add
add
data16
mov
inc
add
loopne
imul
add
decl
add
or
bnd
add
xor
decl
and
test
nop
sbb
and
clc
sbb
add
jg
add
add
add
dec
or
or
xchg
or
add
add
push
pushf
pop
inc
add
sub
inc
add
and
add
add
add
push
add
and
xor
ljmp
xor
lcall
aas
stos
mov
add
inc
add
pushl
cmpsl
add
clc
sbb
call
push
outsl
xchg
imulb
dec
imul
add
jecxz
xchg
aaa
cmpsb
add
add
addb
add
pop
add
test
lea
add
adc
call
scas
jae
pushl
add
nop
int
add
push
leave
call
push
fcmovnu
fdivr
lret
fadd
add
lcall
add
into
je
inc
add
addb
xchg
inc
add
pop
and
pop
nop
rolb
nop
jp
out
filds
add
pusha
add
pop
inc
add
shrl
jne
pop
jnp,pt
jb
call
sub
out
inc
add
add
dec
mov
sub
cmovnp
jecxz
cmpsl
add
add
enter
pushl
lcall
dec
jnp
or
inc
add
xchg
inc
add
aam
add
inc
add
add
call
out
push
cli
repnz
pop
jne
jp
add
data16
pop
jnp
pop
lea
add
mov
inc
add
shlb
bswap
jmp
fsubs
add
push
add
addl
sbb
add
dec
icebp
inc
add
lret
mov
sub
add
and
add
add
cmp
mov
add
sti
fisttpll
movb
add
decb
push
inc
add
roll
xchg
in
mov
add
add
adc
ljmp
mov
aad
ret
add
movsb
add
ljmp
push
add
pop
add
lea
xlat
and
notb
add
jo
lcall
pop
scas
fstps
add
add
lods
daa
add
push
adc
push
lods
pop
fdivr
lock
cld
fdivs
xor
out
fsubrs
lods
testl
add
int
movzwl
sti
loop
mov
adc
call
rcrb
add
aam
push
lods
sti
cmp
out
fnstcw
mov
jno
dec
outsb
cmp
loop
stc
add
pushl
fcmove
dec
cltd
test
add
dec
add
add
icebp
das
mov
add
stos
cmpsb
add
mov
add
or
sbb
adc
jmp
mov
mov
pushf
xchg
xor
add
jg
mov
add
mov
lods
add
add
das
hlt
mov
add
pop
insl
mov
jle
pop
add
sti
sub
aad
add
add
pop
aad
jge
add
add
decl
xchg
push
bound
ljmp
add
add
add
add
stos
mov
pop
xchg
sub
mov
add
add
cmp
add
add
call
out
mov
enter
in
inc
add
fldt
jmp
add
add
lock
and
ljmp
dec
mov
add
cmc
jae
jmp
or
add
sti
mov
rolb
add
insb
out
arpl
jge
fdivr
popa
add
jge
aas
cld
add
sbb
add
adc
hlt
sqrtps
pushl
push
cmp
jg
add
mov
xchg
dec
xchg
adc
call
add
push
add
push
in
mov
add
add
mov
add
xor
jmp
jmp
jg
add
stos
pushf
mov
add
decl
mov
mov
mov
push
add
imul
leave
pop
rorl
jne
mov
imul
and
stos
in
mov
push
cltd
cmp
mov
mov
lret
shrl
add
add
daa
add
test
lods
inc
add
add
incl
cwtl
roll
lock
jl
aaa
xchg
push
lock
add
mov
repnz
add
push
lock
movsl
add
add
sbb
add
inc
add
jno
call
pop
fdivrl
add
fadd
add
add
outsb
pop
dec
outsb
xchg
cmp
pushl
cmp
inc
add
add
dec
xchg
test
xor
jmp
add
add
call
out
lret
out
js
and
incl
jne
push
add
pop
push
add
push
and
jmp
add
enter
loop
or
ficomps
inc
add
popa
add
hlt
push
add
adc
cmp
lcall
mov
ljmp
mov
add
ret
add
add
mov
mov
add
adc
insb
jl
dec
dec
cltd
or
add
xlat
pop
imul
and
push
test
leave
mov
insb
out
and
call
sub
add
xor
fdivr
jns
xor
mov
cli
mov
jns
add
sbb
jns
push
cwtl
iret
inc
add
push
sub
decl
or
arpl
incl
jns
icebp
cmp
add
pop
sub
add
out
add
dec
sub
add
les
inc
add
outsb
inc
add
ret
pop
stc
jmp
bound
decl
jns
push
add
iret
and
pushf
testb
lret
sbb
test
jle
inc
add
push
in
and
fdivrl
inc
add
call
push
add
mov
inc
add
mov
cmp
sub
add
add
pushf
cmpsb
add
add
mov
les
push
ja
rolb
add
sub
and
add
imulb
xchg
push
movsl
add
jo
fnstenv
decl
lret
inc
add
adc
pop
add
ss
roll
fimull
add
and
pushl
add
ret
add
add
in
stos
dec
jl
pop
mov
ljmp
mov
cld
mov
xor
incl
push
xchg
loopne
lcall
jecxz
fisubs
add
inc
add
add
mov
jmp
pop
xlat
addb
test
mov
push
aaa
roll
push
sub
add
inc
add
jnp
cmp
lea
sbb
mov
sbb
inc
add
add
sub
add
clc
lods
dec
add
jmp
add
ja
add
fistpl
mov
adc
cmp
mov
cld
push
add
push
insb
bound
incl
scas
mov
add
test
jns
add
cmc
repz
iret
adc
pushl
mov
push
add
or
les
out
repz
add
arpl
decl
les
roll
dec
push
loop
fimuls
add
add
add
sbb
lcall
xchg
enter
sub
mov
daa
add
add
mov
xlat
clc
lret
inc
add
imul
ss
lret
arpl
jmp
add
mov
sub
fcmovne
bound
incl
js
add
add
insl
xor
call
lea
icebp
es
jb,pt
mov
daa
add
stos
jbe
ss
out
xchg
aam
cmp
add
jge
addb
fdivrp
add
ljmp
xor
decl
fisttpl
add
add
jae
std
xor
pushl
add
add
xor
dec
xor
ljmp
and
jmp
jns
add
cmp
add
add
jb
clc
aad
or
xchg
cmp
ljmp
aam
mov
add
xchg
pop
jbe
sbb
or
add
sub
dec
pop
jmp
push
add
insb
mov
ljmp
xchg
inc
add
and
in
movsb
add
add
push
add
repz
nop
addl
add
fwait
push
add
mov
add
sti
lods
jg
jnp
add
dec
sub
add
add
je
rcrl
movsl
add
les
imul
enter
add
dec
or
ljmp
imul
clc
loop
pop
add
mov
mov
call
lods
lahf
jl
lret
shr
xchg
xchg
fdivrs
repnz
decl
cltd
jecxz
add
ljmp
add
int3
inc
add
xor
incl
decl
add
and
call
add
test
add
inc
add
ret
add
incl
add
lahf
pop
jns
call
inc
add
cmpsl
add
add
cmp
pop
shr
pop
arpl
ljmp
xchg
mov
out
push
insb
or
xor
add
jp
and
decl
cld
dec
aam
push
popf
cmp
adc
mov
mov
incl
call
mov
pushl
add
mov
addl
add
add
lock
rorl
mov
nop
imul
add
pop
mov
add
add
add
mov
mov
add
mov
add
dec
shl
and
cli
push
or
int
add
cmp
scas
xchg
test
sbb
add
pop
pusha
add
js
add
xchg
jne
xchg
outsl
dec
stos
scas
pop
add
pop
add
add
outsb
add
mov
add
mov
pop
shl
add
cmpsl
add
nop
push
add
fdivs
add
movb
add
call
jne
add
loopne
xchg
movsl
add
add
test
pop
or
and
loopne
fucom
add
add
pop
add
jmp
lahf
fnstsw
push
push
add
sbb
mov
add
addb
data16
xchg
jnp
xchg
and
clc
or
add
add
dec
adc
ljmp
scas
int3
or
add
out
xchg
in
pushf
mov
cmpsb
add
add
ret
add
add
lahf
hlt
mov
add
xchg
aas
cmp
pop
add
into
and
jge
add
adc
add
add
push
sbb
add
roll
repnz
out
ja
add
add
out
in
mov
jg
add
dec
push
nop
sub
add
add
daa
add
dec
ret
fsubr
jo
call
and
call
jmp
cmc
les
hlt
mov
mov
add
sahf
addb
out
jle
inc
add
loop
mov
aad
add
jmp
test
sbb
mov
sub
ljmp
test
adc
jmp
add
test
xchg
ficoms
lcall
mov
add
adc
jmp
add
or
xchg
fcmovne
lcall
add
lock
add
xchg
xlat
addr16
mov
lock
dec
mul
add
jl
and
ljmp
addb
test
add
cmpsb
add
pop
mov
sub
in
and
lcall
pushl
and
jmp
or
lcall
push
add
add
incl
add
push
xor
inc
add
pushl
ljmp
add
add
pop
mov
push
add
mov
mov
fwait
cmp
or
lods
jp
imul
jge
xchg
mov
or
mov
add
test
hlt
data16
sahf
or
mov
mov
loop
in
mov
add
dec
sbb
sbb
add
adc
cmp
incb
jmp
add
add
js
add
add
in
adc
and
lods
cmp
ds
outsb
add
call
lcall
addb
iret
mov
add
inc
add
leave
fimull
in
sub
dec
push
jmp
add
movl
sbb
push
add
data16
sbb
incl
addl
inc
add
add
rol
add
pop
test
add
decl
add
xor
add
fildll
add
xor
call
xchg
jnp
add
push
mov
lret
daa
add
xchg
call
add
incl
mov
mov
inc
add
cmp
or
mov
cltd
add
add
cltd
lahf
lahf
cmp
mov
mov
add
ljmp
dec
or
xchg
pop
sub
cmp
xchg
imul
mov
outsb
jnp
aam
add
stos
dec
push
add
mov
add
call
hlt
jb
incl
add
inc
add
addl
rolb
inc
add
mov
add
lds
ja
loopne
add
decl
or
add
ds
lds
mov
add
add
sbb
add
or
adc
decl
call
add
xchg
nop
bound
cmp
cltd
popa
add
nop
outsl
flds
mov
pop
or
movsl
add
push
add
pop
out
cmp
add
push
jle
push
cld
push
add
jmp
mov
mov
sti
call
in
add
add
add
fists
add
jo
std
addl
add
rorb
cmp
rolb
lea
add
lcall
inc
add
addb
add
pop
aas
add
add
pop
int
inc
add
lea
in
dec
or
pushl
add
jle
xor
push
jbe
add
call
add
adc
ljmp
jmp
mov
ret
sub
leave
inc
add
jo
lcall
ss
movsl
add
lods
sahf
test
outsb
bound
incl
add
incl
or
xchg
sahf
mov
test
std
jl
fldenv
lret
push
mov
jecxz
lahf
cmc
cmp
es
in
sub
sbb
pop
lret
addb
add
and
ljmp
dec
mov
xor
add
add
aam
jns
into
dec
idivb
push
mov
sbb
add
dec
mov
mov
fisubrs
pop
jp
mov
dec
adc
pushl
add
pop
inc
add
rolb
roll
add
adc
jg
faddl
add
test
sbb
add
xlat
xor
lcall
fldt
in
xor
dec
jbe
jbe
rolb
add
ja
add
cmp
cmp
rcl
cld
sub
and
call
mov
add
arpl
dec
in
pop
movb
add
add
lods
ds
test
mov
mov
add
addb
lcall
or
xlat
addb
enter
out
sub
call
add
cmp
mov
call
inc
add
pop
jbe
add
jmp
das
or
pop
sub
add
pushl
ljmp
adc
sti
xchg
lret
addb
ja
or
sub
in
jecxz
lods
mov
push
inc
add
cmc
hlt
jp
add
lcall
add
push
das
dec
xchg
mov
mov
lret
sti
popf
js
add
pushl
add
mov
dec
jb
call
lcall
mov
icebp
pop
add
faddl
cmp
test
add
and
jmp
cli
gs
push
jg
add
ret
add
scas
pop
sub
ljmp
ret
xor
in
stos
pop
dec
aas
xchg
mov
add
add
inc
add
call
js
pushf
pop
aad
push
inc
add
mov
pop
dec
fadds
add
addl
or
xchg
aad
push
add
add
dec
das
and
ljmp
mov
pop
fsubp
add
add
pushl
incl
in
imul
test
mov
shl
push
adc
jmp
xchg
mov
fwait
mov
cmp
mov
add
xor
decl
jae
jmp
jns
add
cmp
add
add
jbe
add
incl
sbb
dec
movsb
add
loopne
fmuls
std
pop
shll
add
add
mov
fstps
out
into
roll
or
mov
add
xor
pushl
add
cmp
or
xchg
outsb
cmp
inc
add
ljmp
sti
push
add
add
add
pushl
add
movb
idiv
cli
lea
in
adc
call
mov
add
add
add
inc
add
mov
add
jbe
mov
decl
add
cmp
fnstenv
jnp
leave
pop
add
int
das
push
add
adc
mov
add
addl
sahf
pop
mov
test
test
cmp
pushl
dec
add
jmp
add
add
push
jae
dec
add
jmp
add
cld
stos
mov
push
fdivs
add
sub
mov
add
inc
add
lcall
cli
dec
jp
mov
out
jno
jmp
add
add
dec
jb
jmp
add
jb
fldenv
ljmp
aam
cmpsb
add
stos
fisubrs
test
in
mov
cmp
add
add
addl
es
add
lcall
xchg
inc
add
add
jmp
mov
shll
add
mov
rcrb
add
xchg
xchg
push
lcall
add
lock
inc
add
stos
imul
jmp
inc
add
or
inc
add
cmp
adc
iret
stc
add
fistpl
mov
movsl
add
add
incl
decl
loopne
or
out
cli
hlt
or
jns
jbe
add
xchg
inc
add
movl
test
inc
add
inc
add
lods
cmp
add
and
cmp
add
add
add
jns
fmull
push
add
add
mov
add
dec
ja
push
add
cmpsl
add
mov
outsl
dec
dec
dec
les
int3
jnp
add
ficompl
ret
add
pushl
push
xor
ljmp
jns
add
out
cli
cmc
jle
add
data16
aam
mov
mov
add
lcall
lods
mov
xor
call
stos
and
sub
jmp
roll
decb
or
add
mov
add
pop
mov
add
mov
add
ficoml
add
fstl
mov
in
jecxz
mov
loopne
xlat
mov
rorl
add
scas
pop
stos
mov
add
sbb
jae
push
mov
add
inc
add
xchg
or
icebp
insl
inc
add
add
das
sub
add
ds
add
mov
add
xchg
addb
add
sbb
scas
sbb
add
mov
cmp
hlt
jge
add
xlat
scas
int3
and
cmp
add
push
add
mov
dec
enter
pop
addl
add
add
or
xchg
scas
xchg
out
mov
add
dec
jae
call
pop
mov
add
dec
xchg
aaa
mov
adc
push
insb
pop
adc
cwtl
mov
pushf
mov
fildl
cmp
mov
add
sbb
add
pop
popa
add
jp
adc
jmp
add
iret
push
add
adc
call
add
lds
stos
addb
lea
fs
sarb
xchg
dec
ja
pop
add
sbb
pushf
and
lcall
out
addb
jnp
add
aas
in
jo
call
ljmp
iret
mov
add
lods
pusha
add
popf
inc
add
xchg
inc
add
mov
call
adc
ljmp
jne
xor
sbb
add
mov
jmp
adc
pushl
or
rcrb
js
add
add
call
call
fbstp
pushl
call
push
dec
and
js
push
cltd
pop
sub
add
loope
mov
add
aas
push
push
mov
std
stc
loopne
scas
sbb
jle
add
fisttpll
mov
inc
add
add
call
xchg
mov
add
mov
add
je
add
jp
dec
lods
lret
mov
std
push
add
cmp
or
add
dec
outsb
ss
pop
mov
jmp
jecxz
mov
mov
lcall
pop
mov
add
xchg
cltd
dec
sti
dec
shll
pop
xchg
mov
sub
add
push
and
lcall
out
test
jae
ljmp
faddp
add
or
les
testl
movl
add
stos
insl
jns
inc
add
arpl
incl
lcall
add
outsl
dec
push
add
pop
add
add
cmpsb
add
add
divb
lcall
add
lahf
ret
xor
pushl
adc
pushl
mov
jb
call
nop
roll
add
mov
add
dec
stos
int
add
add
mov
mov
sub
daa
add
out
scas
popa
add
add
mov
push
das
movb
xchg
push
add
add
ljmp
ret
add
and
incl
add
test
inc
add
add
add
insb
loopne,pt
push
movl
add
out
sbb
test
iret
data16
aad
add
repz
mov
xlat
or
add
add
out
push
add
cmpsb
add
xchg
sti
data16
fisttpll
dec
or
aad
add
cmp
lea
negl
lds
add
fnsave
pushl
add
push
test
ret
add
cmp
xchg
push
call
or
push
cmp
and
incl
cld
mov
loopne
push
add
pushf
xor
call
lea
movl
add
call
ljmp
pop
ljmp
sbb
imul
insl
rcll
add
insl
jp
add
add
sbb
aas
xchg
call
push
pushf
mov
mov
add
adc
incl
std
shrb
rolb
push
add
pop
icebp
mov
jmp
add
jnp
mov
dec
popf
aaa
push
add
insb
push
add
in
ficomps
add
add
push
repnz
icebp
shll
jb
ljmp
jmp
mov
xchg
leave
mov
jmp
add
add
push
ljmp
std
insl
jmp
xchg
fcoml
add
mov
add
clc
cmp
test
add
call
add
pushl
add
ficomps
cmp
add
dec
cltd
cld
mov
test
sbb
loop
and
call
add
add
sub
sub
add
dec
sbb
add
cmp
pusha
add
sub
add
jmp
add
mov
roll
pushf
jns
add
jo
jp
stos
pop
add
add
daa
add
insl
dec
jne
add
pusha
add
pop
jb
cmp
push
sarl
addb
pop
push
mov
dec
pop
dec
nop
push
push
add
fdivs
jp
cli
push
fxch
ljmp
imul
or
frstor
roll
add
adc
add
add
inc
add
cmpsl
add
push
add
ljmp
js
xchg
std
xor
decl
add
xor
pushl
jmp
lcall
test
out
popa
add
imulb
xchg
ja
call
add
or
stos
or
lods
xchg
mov
mov
cmp
push
add
jecxz
rolb
add
and
int3
mov
jmp
pushf
mov
dec
xlat
ljmp
add
push
add
sub
lcall
cmp
nop
push
mov
push
adc
pushl
pop
xchg
cmc
pop
or
aad
push
add
sbb
add
add
out
out
roll
add
rcrl
movsb
add
pop
xlat
sbb
adc
decl
mov
lret
addl
xchg
out
push
add
test
jmp
xchg
and
lcall
xchg
aas
icebp
imul
sub
add
fwait
sub
mov
add
mov
addl
icebp
cli
inc
add
fucomip
sub
add
scas
test
jmp
call
ljmp
daa
add
add
ljmp
imulb
cmp
jecxz
push
add
jle
js
add
xchg
mov
je
movb
jge
add
add
cmp
or
sahf
and
jmp
add
int
push
stc
fcoml
add
in
inc
add
inc
add
enter
call
dec
push
add
add
pop
add
pop
fcmove
add
jnp
push
add
cmc
sbb
add
decl
add
inc
add
and
jmp
add
insb
cmp
jl
add
aas
cmpsb
add
add
cmpsb
add
test
mov
rolb
pop
add
frstor
push
testl
add
add
cmp
aam
mov
add
push
dec
sub
je
jns
inc
add
sti
popf
call
seto
lods
addl
add
dec
int3
cmp
add
or
mov
rcrl
adc
push
sub
lods
imul
cld
sbb
xor
incl
pop
xchg
dec
sbb
imul
add
inc
add
shll
jmp
jns
dec
sbb
add
aaa
test
pop
js
sbb
aas
or
add
adc
lcall
shll
add
or
jbe
push
add
add
mov
movsl
add
fstps
xor
ljmp
in
out
jbe
clc
adc
out
push
add
add
cmc
hlt
fidivl
jmp
imul
cmp
add
pop
inc
add
add
add
sbb
add
push
sbb
add
loop
or
pop
sbb
mov
pushf
je
loope
iret
int
cmc
fnstsw
mov
in
movb
dec
mov
sub
add
or
mov
or
add
ja
popa
add
aam
pop
mov
add
aas
fildll
push
add
add
mov
or
mov
nop
in
pushl
add
pusha
add
int3
icebp
add
stc
push
sbb
jmp
cmp
and
lcall
xor
add
call
jg
add
out
ret
add
lcall
rolb
inc
add
add
mov
xlat
mov
add
xchg
rcll
add
fs
cmp
add
fadds
xor
decl
ljmp
and
call
add
ja
sbb
add
add
pop
dec
stos
and
loop
imul
and
add
jle
add
add
mov
add
add
add
add
dec
inc
add
insb
pop
push
add
in
in
mov
xor
decl
pop
add
add
cmp
add
bound
call
inc
add
add
call
add
jo
push
xor
ljmp
sub
dec
cld
cmc
int
add
idivl
xchg
xor
ljmp
add
xchg
mov
add
adc
popa
add
cwtl
xchg
and
ljmp
or
add
xor
add
not
adc
dec
mov
add
add
dec
outsb
dec
push
pop
sti
bound
jle
add
xor
incl
call
add
imul
mov
mov
popa
add
shll
or
add
add
dec
lret
xchg
sub
pop
stos
inc
add
or
pop
or
add
cli
jl
in
and
dec
cld
loopne
loopne
fidivrs
test
std
aad
add
test
and
jmp
scas
scas
movsb
add
loope
out
adc
decl
mov
xor
cld
sub
add
into
add
add
mov
outsl
mov
icebp
sbb
addb
add
call
add
add
stc
movb
add
xchg
notl
jmp
movsb
add
fldt
add
mov
fiaddl
inc
add
dec
insb
push
clc
hlt
fcoms
dec
call
push
add
mov
lahf
lret
roll
aam
je
jmp
inc
add
add
lcall
add
aas
push
fistpll
pop
test
sbb
ret
les
push
add
data16
add
push
test
add
push
add
xor
mov
fcmovbe
cmpsb
add
enter
add
fbld
jmp
add
jno
call
add
stos
in
mov
add
push
popa
add
call
js
add
sub
add
incl
add
add
aaa
adc
ljmp
jae
ljmp
fsubrp
lret
cltd
xor
pushl
cmp
test
mov
aaa
lock
add
add
add
mov
inc
add
out
jns
mov
enter
jb
ljmp
add
xchg
dec
xchg
dec
shl
das
sub
or
dec
fcomps
sub
mov
inc
add
mov
add
movsl
add
inc
add
outsb
fsubp
add
inc
add
mov
jecxz
loopne
sahf
adc
xor
mov
push
add
pop
add
mov
lods
pop
cmp
in
xchg
jp
inc
add
scas
stc
mov
ds
test
ret
loope
call
xor
mov
add
incl
incl
add
push
add
inc
add
jle
jo
pushl
cmp
add
jbe
add
in
out
add
add
push
fbld
cmpsb
add
mov
xlat
call
dec
cmp
incl
idivl
mov
lret
add
addl
cmpsb
add
out
pop
int3
jmp
lret
in
cmp
std
iret
cmp
stos
aas
sub
add
ljmp
jle
hlt
insl
into
xor
and
decl
xor
jmp
add
ljmp
dec
outsl
addl
xchg
mov
rcll
add
repnz
add
sbb
adc
cld
insb
negl
call
and
popa
add
pop
cli
adc
sub
push
test
xchg
js
loope
repz
popa
add
jnp
clc
mov
jle
push
loope
and
jg
loopne
and
call
pop
fsubr
sub
mov
cmc
jbe
dec
lahf
hlt
movl
add
xchg
add
pop
mov
jnp
adc
inc
add
and
mov
add
add
sarb
cmp
add
lcall
dec
mov
stc
nop
mov
outsb
jmp
sub
pop
addl
inc
add
jns
add
loop
in
repnz
mov
add
jp
or
add
ret
mov
add
ficoms
add
test
xor
lcall
lcall
add
pop
add
loope
add
dec
add
push
add
or
cmpsl
add
add
lock
sub
add
push
incl
add
add
pop
addl
dec
add
fdiv
push
mov
mov
jae
call
jnp
sub
add
push
fimull
xlat
push
add
adc
call
mov
add
incl
add
pop
or
add
add
pop
cmpsb
add
aam
cli
push
add
mov
xor
jmp
add
notl
cmpsb
add
fdiv
mov
add
imul
push
jb
decl
push
mov
and
pushl
data16
incl
das
stos
fimull
add
push
cmpsl
add
out
out
add
inc
add
mov
cmc
jnp
fstpt
add
pushl
pushl
inc
add
mov
add
js
sahf
pop
add
add
jmp
add
jbe
jle
mov
bound
fst
jno
incl
aam
add
imul
dec
cmp
fisttps
std
pop
xchg
divl
in
mov
add
fadd
add
add
mov
movb
popa
add
repnz
add
dec
shlb
xchg
mov
aam
arpl
jmp
add
in
lcall
repnz
or
add
ljmp
pop
xchg
add
add
decl
les
imul
ljmp
dec
xchg
negb
sub
int3
movsl
add
shll
jmp
dec
cmp
xchg
outsb
pop
pop
adc
jmp
dec
mov
cmp
test
scas
push
add
add
inc
add
adc
imul
add
add
scas
jbe
cmp
mov
cmc
mov
add
inc
add
and
cwtl
fistps
add
imul
in
cmp
call
movl
movl
adc
lcall
xchg
pop
push
rolb
ds
sbb
icebp
adc
fdivrs
adc
incl
add
gs
aam
add
xchg
cwtl
insb
mov
add
dec
cmc
jle
push
add
scas
mov
movb
add
sbb
add
into
xchg
int3
or
out
mov
bound
call
jg
add
test
mov
ds
iret
sti
out
aaa
stos
lock
sbb
stc
mov
imul
nop
jg
addl
add
loope
ficomps
cmp
add
xchg
pop
pushf
fwait
xchg
fisttpl
mov
dec
sub
mov
xor
adc
ljmp
add
decl
or
and
jmp
sti
outsl
push
jg
add
add
add
add
cld
add
out
fsts
std
mov
add
add
lcall
sbb
cmp
dec
inc
add
adc
ljmp
pop
iret
das
jno
dec
sbb
dec
sbb
data16
in
shld
add
insl
xchg
repz
call
fbld
incl
add
jmp
cmc
popa
add
fildl
mov
push
add
les
mov
add
add
add
js
movb
add
fucomp
data16
jbe
add
adc
mov
lods
or
and
lcall
add
add
add
add
iret
dec
addb
outsb
dec
sub
out
dec
push
jns
inc
add
dec
mov
or
inc
add
and
ror
dec
rcr
and
push
lcall
clc
imul
insl
addl
or
xor
decl
mov
add
mov
add
add
into
or
pop
mov
add
out
popa
add
add
insb
cmpsb
add
je
jmp
lcall
add
inc
add
add
mov
ja
add
add
push
push
or
add
movsb
add
add
xlat
push
mov
sbb
jl
sbb
add
xchg
ja
adc
ljmp
add
xor
jno
jmp
jmp
add
sbb
jns
dec
or
sahf
int
movsl
add
cmpsb
add
je
and
call
mov
addb
test
out
pop
outsb
pop
and
decl
loopne
xlat
and
lcall
call
mov
fisttpll
outsl
cltd
imul
pop
jo
dec
mov
add
cmp
les
mov
lcall
add
add
add
out
mov
add
ror
xchg
dec
dec
testb
add
bound
cmp
addb
mov
incl
push
mov
stos
lods
mov
mov
add
add
push
jno
lcall
mov
add
add
pushl
add
cmp
imul
cltd
xor
incl
add
and
mov
adc
dec
mov
lods
dec
jns
add
call
add
decl
xchg
dec
add
pcmpeqd
fldl
mov
add
out
xchg
dec
xchg
xchg
imul
adc
pushl
add
cmp
testl
mov
test
add
mov
pop
ljmp
mov
add
mov
into
sbb
add
jmp
push
mov
xor
jmp
add
lcall
add
ljmp
dec
addl
insb
or
add
dec
bound
jmp
ds
and
incl
fidivrl
add
mov
outsb
sub
fldt
mov
add
xor
ljmp
addr16
imul
push
lcall
addb
push
test
aad
add
jmp
add
loop
out
pop
rolb
jne
xlat
fs
pop
push
lock
sti
out
xlat
lds
fistps
adc
sub
add
cmc
scas
test
add
mov
dec
xchg
roll
xchg
idivl
lea
dec
cmc
jns
jge
push
add
pushl
xchg
pushf
lods
dec
inc
add
hlt
and
imul
add
dec
test
inc
add
push
arpl
in
sbb
aas
addl
sbb
jmp
mov
call
fsubp
add
add
ljmp
add
and
fisubs
mov
xchg
mov
incl
jmp
add
adc
lcall
add
shll
xchg
insb
and
push
mov
add
scas
xchg
mov
test
psubd
jns
adc
xchg
nop
jnp
push
add
sub
ljmp
in
fwait
cmp
xor
fidivs
pop
mov
mov
lods
jle
add
inc
add
xor
mov
add
imul
ret
add
add
cld
or
stc
cli
mov
aaa
test
inc
add
out
ljmp
push
cmp
ljmp
test
cltd
pop
pop
jb
lcall
add
jp
add
sbb
add
dec
xchg
ficoms
add
stos
or
add
rclb
inc
add
std
push
pop
add
pusha
add
stos
cmp
mov
addb
insl
dec
sub
jp
add
inc
add
cmpsb
add
add
lret
gs
add
mov
add
lods
scas
imulb
lds
mov
add
add
jnp
sbb
into
lods
dec
xchg
loop
push
add
lret
roll
add
push
add
sub
add
mov
add
push
add
rolb
mov
rcl
out
bound
push
fidivrs
add
gs
in
adc
jmp
xchg
loop
mov
add
ds
add
out
cmp
add
add
rolb
push
jg
add
sbb
dec
jnp
jae
ljmp
add
xchg
xor
xchg
addl
cmp
add
add
add
jmp
add
jecxz
arpl
pushl
pop
and
movsl
add
pop
dec
lds
xchg
and
jle
push
in
js
add
add
int3
or
add
out
lock
ljmp
ljmp
cmp
cmc
mov
add
add
fidivl
add
push
add
decl
les
inc
add
clc
aas
cltd
sbb
dec
addb
mov
mov
leave
addl
mov
mov
push
add
push
add
or
adc
out
and
sbb
addb
shlb
add
dec
or
add
lcall
add
neg
or
add
or
and
call
lods
lret
xor
pushl
decl
popa
add
fldenv
sbb
add
movsl
add
inc
add
out
gs
loope
push
movl
mov
ficomps
add
cmp
add
scas
out
or
das
incb
fimull
enter
mov
add
jmp
movsl
add
nop
mov
lcall
roll
sub
add
jmp
push
popa
add
clc
mov
add
cli
movsl
add
add
add
stc
jae
decl
pop
push
xchg
mov
test
jg
mov
pop
jae
cmp
add
sbb
or
cwtl
or
test
add
fsubl
dec
cmp
les
adc
push
add
std
out
xchg
mov
xchg
sarl
ss
aas
lock
dec
lret
call
lock
call
stc
mov
loope
add
xor
pushl
add
dec
push
mov
mov
into
add
push
bound
pushl
incl
call
addl
fwait
push
add
add
add
fabs
add
add
xchg
out
xor
decl
add
add
jmp
add
call
add
sub
lods
lock
add
push
add
xor
decb
add
xchg
mov
add
add
dec
cmp
movb
add
add
testb
les
sbb
dec
out
xor
clc
mov
xchg
jno
decl
imulb
add
add
add
jmp
mov
add
add
pushf
test
lea
add
inc
add
outsl
arpl
dec
in
and
aas
or
pop
mov
add
cmpsb
add
ret
inc
add
movsb
add
std
mov
aaa
pop
mov
push
add
stos
sub
add
dec
addb
push
stos
addb
push
sbb
scas
addl
lahf
jno
fdivl
pushl
jp
add
inc
add
mov
add
adc
incl
inc
add
sahf
mov
sub
adc
pushl
add
popa
add
or
add
push
mov
testb
ljmp
pop
into
add
lcall
sahf
mov
cmp
or
add
fisubl
add
dec
aam
mov
xchg
add
add
add
xchg
pusha
add
cld
xlat
fbstp
add
mov
pop
add
pop
and
ljmp
add
test
cmp
mulb
call
inc
add
dec
push
add
hlt
adc
incl
add
rclb
add
add
add
lock
sub
push
add
jg
lcall
push
xchg
sbb
jns
adc
popf
daa
add
sbb
mov
aad
add
ljmp
sub
cmp
sub
fwait
data16
pop
inc
add
daa
add
lret
sahf
les
mov
xchg
je
add
add
leave
sbb
dec
sbb
leave
je
lods
push
pop
fnstenv
iret
push
add
addl
mov
pop
add
sti
sbb
call
add
add
jg
lcall
loop
in
xlat
movsb
add
fcoml
addb
add
and
test
sbb
call
lcall
ret
add
add
dec
in
movb
add
pop
incl
call
scas
neg
or
mov
add
cmp
fildll
or
jecxz
xor
add
loope
les
add
push
add
roll
cmpsb
add
jne
add
incl
sti
add
add
dec
pop
add
dec
xor
decl
std
mov
lcall
scas
iret
lods
jecxz
or
add
jg
ret
add
add
push
xchg
push
xor
call
mov
add
rcll
adc
ljmp
xor
dec
mov
add
add
data16
add
sbb
add
addb
pushf
mov
add
jecxz
inc
add
add
sbb
add
add
add
call
dec
repz
add
into
stc
and
decl
add
mov
inc
add
dec
stos
inc
add
addb
add
lds
pop
enter
or
stos
inc
add
mov
aaa
jb,pt
jmp
sub
mov
add
mov
add
push
mov
add
sub
cmp
nop
push
out
cwtl
aad
add
int
into
je
ljmp
push
stos
int
pop
cmp
rorb
jmp
popa
add
ja
pop
add
pushl
add
or
cs
aam
add
xchg
jns
fimull
add
add
pop
push
add
cwtl
jno
decl
add
call
add
push
mov
jnp
cmpsb
add
sub
add
add
cli
inc
add
xchg
out
cmp
xor
ljmp
add
sahf
xchg
push
jno
mov
add
dec
test
mov
and
cmp
rolb
movb
in
pusha
add
addb
mov
in
and
imul
cmp
popa
add
or
cmp
stos
add
rolb
jmp
incl
add
jno
imul
push
add
adc
jmp
add
xchg
mov
xchg
pop
in
cmp
add
stos
dec
pusha
add
dec
xor
jno
ljmp
lcall
mov
out
push
push
add
inc
add
add
jp
add
push
xchg
pop
add
imul
and
lcall
push
ficomps
shlb
add
mov
inc
add
mov
jl
xor
add
jmp
arpl
call
add
ljmp
dec
movsl
add
stos
addb
add
jnp,pn
add
push
add
sbb
xchg
lock
incl
addr16
and
decl
fiadds
add
loopne
nop
addl
push
add
sbb
add
stc
fwait
add
add
add
xchg
pop
cld
out
add
cli
push
pop
cmpsl
add
xchg
cli
dec
inc
add
movsl
add
and
cmp
lret
cld
fdivrs
lea
pushl
add
inc
add
cwtl
lea
add
xchg
addl
add
bound
ljmp
add
mov
add
ljmp
scas
popa
add
mov
ja
add
dec
mov
xor
ljmp
mov
pop
out
daa
add
incl
jmp
ss
out
out
jg
fldenv
cwtl
jb
ljmp
aad
add
stos
jg
add
aad
mov
shll
cmp
jmp
in
and
call
lret
test
in
mov
cwtl
xchg
movsl
add
call
jge
cmp
data16
cs
push
add
sub
mov
xchg
popf
jnp
add
add
mov
and
jg
enter
add
adc
incl
incl
and
incl
insl
lock
mov
add
jg
dec
ret
add
addl
call
incl
call
repnz
push
enter
cmpsl
add
popf
mov
cs
cmpsl
add
dec
bound
call
mov
js
rolb
mov
cmp
dec
mov
fnstcw
loope,pt
add
mul
add
adc
addb
dec
mov
jne
jbe
inc
add
in
movsl
add
not
test
sbb
add
jnp
jecxz
aad
inc
add
mov
adc
add
add
dec
addl
in
mov
add
test
adc
lcall
mov
lahf
in
push
add
inc
add
push
decb
out
cltd
cmc
add
jmp
jle
add
add
jl
add
jg
addl
push
lds
loope
in
fadd
add
push
add
or
ljmp
or
add
add
push
push
loopne
call
cmp
sarl
mov
ds
mov
inc
add
into
adc
lcall
xor
push
add
decl
add
mov
cmp
add
fwait
add
jmp
add
call
push
cmp
xchg
push
add
insl
xor
jmp
add
jg
add
or
add
loop
and
sub
cli
test
cmpsl
add
cmp
into
mov
insb
inc
add
add
rolb
mov
add
mov
push
inc
add
scas
cmp
mov
int
stos
addl
lcall
add
arpl
decl
xchg
jne
int
out
add
inc
add
push
add
faddp
add
fisubl
jmp
add
add
mov
mov
add
mov
mov
add
cld
in
mov
aad
sbb
cltd
cmp
add
pushl
jmp
xchg
scas
sub
in
js
rcr
dec
data16
mov
imul
push
jo
incl
sub
add
add
dec
gs
and
cmp
sti
sbb
add
ret
dec
inc
add
adc
ljmp
cmpsb
add
add
mov
dec
repz
pushl
add
call
das
cmp
add
pop
add
divl
cmc
push
add
out
inc
add
add
add
mov
mov
add
mov
sub
xor
call
dec
and
mov
jnp
add
addb
insb
jp
jo
lcall
call
rcrl
add
mov
call
arpl
inc
add
add
ljmp
xor
decl
add
inc
add
add
cmc
adc
pushl
sti
lcall
add
repnz
add
aaa
and
jbe
movsl
add
add
sbb
add
movb
add
and
add
popl
add
add
and
incl
pushl
add
xchg
stos
repz
call
pop
mov
xchg
or
xchg
out
add
add
add
add
aas
sarl
stc
addb
fildl
and
addr16
inc
add
xor
mov
dec
push
add
pop
pop
lahf
call
inc
add
pop
mov
dec
imul
jno
decl
cmp
test
adc
push
ret
add
decl
lcall
cmp
pop
jl
add
out
cmpsb
add
idivb
cmp
sbb
out
std
sub
dec
inc
add
add
xor
add
add
mov
add
xlat
js
pop
lahf
add
inc
add
pop
wrmsr
add
pop
iret
or
add
jb
mov
nop
add
stc
in
mov
lea
leave
sub
add
add
arpl
stc
loopne
mov
add
repnz
add
cmp
clc
movl
add
outsb
mov
inc
add
das
in
iret
pop
dec
mov
jo
lcall
imul
inc
add
insb
fistpl
inc
add
sbb
inc
add
xor
ljmp
add
addr16
add
add
add
add
scas
lcall
dec
push
jmp
jne
xchg
inc
add
popf
lea
incl
fcmovbe
pop
or
imul
cltd
in
out
rcll
popl
scas
xchg
pushf
pushf
movsl
add
lods
push
repz
add
sbb
lahf
jecxz
jp
roll
sbb
ret
lea
mov
add
movl
and
push
jae
decl
fdivs
or
add
pushl
movsb
add
into
jp
lcall
js
add
pop
xchg
mov
jl
add
in
inc
add
dec
jg
pop
push
add
add
sti
sahf
clc
mov
add
mov
incl
jmp
add
fadds
ljmp
addb
ret
imul
cmpsl
add
add
jns
add
mov
add
add
jnp
repnz
call
decl
add
push
add
add
add
push
xchg
movsb
add
call
aad
addl
mov
aas
jns
add
push
add
xchg
inc
add
repnz
add
in
shll
dec
inc
add
les
xor
jl
cld
and
movb
loop,pn
pop
dec
dec
lahf
jne
add
incl
jb
pushl
add
or
sbb
add
ret
jg
in
jg
add
ret
shlb
jmp
ljmp
add
cltd
insl
lret
add
adc
call
dec
fmull
add
pushl
sub
add
test
add
addl
repnz
jle
insb
add
cli
adc
cld
ret
add
dec
push
add
cmc
jnp
mov
jle
ljmp
in
stc
jo
ljmp
movsl
add
movsb
add
jno
jmp
scas
jno
lcall
push
addb
add
inc
add
leave
add
sub
addb
add
inc
add
xchg
lcall
ljmp
pop
adc
jmp
jg
lahf
das
outsl
dec
or
add
jmp
add
shlb
mov
lret
inc
add
inc
add
sub
add
outsb
add
ljmp
lcall
jmp
add
in
leave
xor
fisttpl
lods
xchg
fcom
add
pop
testl
loop
int3
stc
jae
ljmp
push
pop
aaa
mov
add
inc
add
je
data16
decl
jmp
sub
xor
jmp
add
mov
adc
add
jecxz
jo
incl
lods
xchg
imul
add
aas
and
lcall
nop
incb
ret
add
pop
dec
out
cltd
jg
repz
adc
jmp
dec
cmp
add
add
or
movl
add
add
cli
inc
add
jge
or
stos
lds
push
add
push
scas
ret
add
add
add
movb
xchg
xor
out
bound
call
pop
dec
cmp
add
scas
test
leave
sti
adc
pushl
lcall
std
popf
mov
push
add
cli
jno
jmp
add
lcall
shr
ja
add
pushl
sbb
add
push
cli
sub
lods
xor
ljmp
add
add
cmp
test
cmp
imulb
out
sbb
cmp
cltd
imul
jne
cld
push
add
inc
add
fwait
adc
decl
cmovl
fsubs
add
adc
scas
out
dec
pop
fwait
mov
testl
pop
mov
add
ljmp
pop
pop
lahf
lds
sbb
and
add
add
add
call
dec
push
rcrb
call
add
push
shll
add
push
add
inc
add
repz
cwtl
cli
movl
rolb
push
add
in
pop
fildll
xlat
mov
add
pop
add
out
shrb
pop
pop
fwait
mov
add
add
mov
add
pop
js
movl
cmp
xor
out
dec
lods
xchg
mov
push
out
cmp
pushl
testl
dec
jmp
mov
add
dec
test
not
mov
stos
sbb
add
out
jo
jl
add
lahf
xchg
inc
add
loop
pop
or
jbe
add
dec
push
add
jns
add
addb
rolb
add
jle
sbb
repz
inc
add
mov
call
add
sub
cwtl
stc
cmc
pop
pushf
rolb
add
ret
add
movsl
add
jmp
cli
inc
add
out
fstpl
add
movb
add
mov
test
or
mov
int3
add
jle
test
pop
lock
incl
add
mov
push
aam
jae
incl
add
dec
addb
jmp
aad
jno
lcall
mov
and
sarl
repz
fsubl
cwtl
jmp
stos
fldt
adc
mov
add
jle
cmc
ljmp
in
out
lds
pusha
add
cltd
and
incl
stos
clc
jmp
xor
lds
mov
add
decl
into
mov
test
fldl
dec
lods
fdivs
add
addb
cmp
jmp
cmp
push
push
jb
lcall
add
addl
add
addl
test
push
mov
icebp
pop
xor
jge
leave
jbe
test
bound
call
and
movsb
add
add
mov
pop
sbb
mov
addb
add
mov
in
ljmp
jnp
daa
add
push
add
mov
jmp
push
add
pcmpeqd
out
movl
mov
add
cmp
add
or
and
lcall
insl
xor
sub
add
dec
addl
jge
add
adc
ljmp
add
loope
sbb
add
add
jge
add
incl
mov
clc
popa
add
inc
add
das
arpl
jmp
add
xchg
mov
add
add
ja
add
sbb
mov
jle
sbb
xchg
add
add
fs
fidivrs
wrmsr
add
out
stc
jl
sbb
call
and
in
ret
add
stc
dec
out
std
xchg
pushf
cmp
inc
add
call
xchg
mov
dec
adc
dec
hlt
arpl
jmp
add
mov
enter
sub
insb
push
add
add
je
lahf
popa
add
xor
add
ljmp
mov
add
inc
add
xchg
and
dec
cmp
pop
add
add
out
pusha
add
lds
cmp
add
add
jmp
fiadds
dec
xor
inc
add
add
popf
dec
addl
push
das
pusha
add
and
lods
push
js
add
fildl
fs
sbb
inc
add
mov
icebp
sbb
data16
add
jno
jmp
jg
shlb
add
in
jle
adc
call
lcall
icebp
imul
test
cld
in
jecxz
ja
pop
ljmp
paddsw
add
sbb
cwtl
outsl
inc
add
aaa
loope
mov
mov
add
test
lock
cmp
add
icebp
out
mov
ror
out
and
ljmp
dec
jo
pushl
lcall
pop
mov
out
arpl
jmp
notb
lods
mov
dec
sub
out
xchg
loopne
mov
aas
xchg
test
xor
ds
mov
add
fadd
add
lcall
add
pop
add
add
pushf
repz
bound
pushl
and
pushl
cmpsl
add
call
pop
nop
stos
sub
aad
add
call
add
lods
push
and
fidivs
dec
xlat
xor
cmp
add
arpl
push
out
or
daa
add
pop
inc
add
add
add
lret
pop
scas
xor
jmp
add
add
add
mov
test
sti
mov
add
pop
stos
push
add
imul
daa
add
mov
popf
repnz
movb
test
aas
xchg
mov
jbe
add
aas
or
xchg
pop
add
pushl
incl
add
movsl
add
add
mov
add
add
psrad
jge
fiaddl
add
jmp
in
lock
push
and
mov
test
inc
add
dec
test
data16
add
ds
add
add
daa
add
add
pushl
add
repz
add
inc
add
add
mov
add
dec
dec
sub
jmp
sbb
add
xor
pushl
add
aas
test
push
add
dec
testl
scas
and
fcmove
xor
sub
add
add
decl
add
icebp
mov
add
loope
and
incl
jecxz
add
ljmp
jo
decl
and
mov
jo
call
jne
arpl
call
repz
ljmp
pusha
add
fwait
mov
imul
sti
xchg
dec
push
cmc
pop
rcr
and
lcall
fcomip
dec
sbb
add
je
cmc
inc
add
inc
add
xchg
test
roll
add
xchg
lock
lcall
add
jns
sub
jg
add
imul
add
pop
fisttpll
add
roll
add
xchg
jmp
pop
adc
incl
stos
mov
sub
jmp
add
insb
lds
add
call
incl
jmp
add
in
mov
lods
aad
shr
xchg
xchg
xor
push
mov
push
movl
xor
shll
jne
fdivl
adc
push
sbb
mov
lds
mov
mov
stos
call
push
add
jo
call
shll
sub
add
push
pop
push
pop
mov
lcall
mov
mov
pop
xchg
out
nop
mov
xor
incl
bound
decl
in
in
or
add
cmp
loopne
xchg
leave
imul
add
movsl
add
push
add
xchg
pop
lret
xchg
inc
add
outsl
mov
lret
xor
pushl
mov
sub
or
push
add
xor
add
dec
sbb
dec
lds
and
inc
add
mov
add
sbb
je
add
call
roll
dec
adc
incl
pushl
scas
sub
mov
add
add
jmp
and
push
popl
pop
ret
pusha
add
fcomps
add
xor
call
add
push
cld
xor
jns
add
dec
xor
incl
add
std
imul
jno
clc
mov
add
add
call
dec
movsl
add
ftst
add
enter
stc
icebp
clc
jnp
add
add
and
ljmp
jmp
add
adc
mov
sbb
jno
incl
add
iret
push
add
add
add
cltd
rorl
lcall
push
or
mov
add
and
inc
add
add
inc
add
adc
push
test
dec
inc
add
add
ljmp
out
imul
in
imul
add
pop
mov
jnp
sub
add
ficoms
adc
ljmp
subps
add
push
adc
lcall
test
lods
repnz
mov
add
cmp
dec
and
fildll
into
dec
rolb
ret
add
and
dec
fiadds
test
mov
dec
inc
add
sbb
or
incl
clc
test
int
aaa
hlt
cltd
push
leave
adc
jmp
add
dec
addr16
add
lcall
cmc
pop
cld
data16
mov
jp
add
pop
add
dec
movb
add
mov
aaa
pop
call
sub
add
outsb
testb
lods
bound
ljmp
cmp
add
jb
inc
add
jnp
out
sub
roll
pushf
push
add
decl
mov
add
inc
add
add
mov
sub
mov
jg
add
lahf
push
add
or
mov
incl
add
mov
cmpsb
add
xor
negl
and
add
movb
mov
lret
sbb
inc
add
stos
add
dec
fsubrs
outsb
fcomi
lret
inc
add
add
add
fsts
add
push
lods
mov
add
mov
add
outsl
pop
add
push
insl
add
push
fiaddl
add
lcall
adc
jg
gs
ds
fst
fisubs
sbb
xor
cld
les
daa
add
add
nop
test
xchg
mov
push
arpl
fsubl
incl
pop
testb
adc
ljmp
add
fs
add
testl
pop
lret
inc
add
add
pop
pop
mov
cmp
jo
jmp
add
mov
test
add
jmp
pop
push
jb
dec
lret
cmp
lret
xchg
add
insb
arpl
ljmp
mov
add
mov
outsb
dec
cli
push
add
add
std
mov
scas
movb
add
mov
fdivr
movl
adc
int3
movsb
add
and
pushl
add
adc
insb
mov
call
bound
pushl
lock
nop
call
dec
movl
lcall
daa
add
adc
dec
clc
and
call
and
decl
mov
lahf
fimuls
call
add
ljmp
adc
test
xchg
test
add
adc
call
test
adc
fisubs
ljmp
add
cs
adc
add
mov
add
add
iret
mov
add
add
add
inc
add
fs
mov
add
sahf
enter
ret
add
in
addb
xchg
xlat
daa
add
xchg
dec
adc
decl
dec
roll
lock
xor
ljmp
pushl
decl
jnp
add
lret
add
and
incl
cmp
mov
mov
add
pushl
add
dec
insl
push
sbb
testl
inc
add
adc
inc
add
add
sti
jb
push
out
bound
call
jp
enter
jne
stos
insl
ret
lods
insb
or
add
pop
xchg
cmp
inc
add
and
das
pop
cs
in
add
add
add
add
add
dec
mov
push
ds
je
add
frstor
add
mov
out
mov
push
loop
ja
ss
add
inc
add
decl
add
stos
ffreep
add
call
dec
pop
repz
add
lret
idivl
pop
mov
daa
add
mov
mov
sub
cltd
jge
pop
jge
adc
call
jbe
add
mov
fwait
mov
or
call
add
lret
push
cmp
pop
lret
outsl
test
xor
pushl
addl
add
sarb
les
jge
add
add
fmulp
fld
add
mov
pop
jns
push
add
fnstenv
decl
mov
add
jl
aas
out
push
add
enter
add
add
add
inc
add
jecxz
cmp
cltd
addl
add
shl
add
add
ror
push
pop
lcall
xchg
mov
jmp
add
dec
iret
addl
inc
add
mov
adc
incl
mov
pop
iret
cmp
add
addl
push
mov
pushf
les
inc
add
pop
mov
mov
jmp
jp
call
add
mov
fidivl
inc
add
pushf
roll
mov
adc
incl
add
addl
sbb
adc
decl
icebp
into
mov
fwait
pop
negb
loop
jo
jmp
stos
pop
add
loopne
int
add
daa
add
sbb
pop
add
das
outsb
mov
mov
fdivrl
jg
pop
dec
mov
add
mov
pop
add
call
ret
add
sub
or
cmpsl
add
ljmp
add
lcall
sub
add
xor
decl
incl
cmp
add
mov
lcall
add
sbb
add
jae
ljmp
add
jmp
or
inc
add
pop
add
add
mov
xchg
and
cltd
ds
data16
add
fwait
xchg
negl
xchg
outsl
out
ret
lea
out
cmp
pop
popa
add
test
adc
je
mov
cwtl
push
and
pushl
notl
add
loop
or
out
lret
push
psubusw
sbb
add
and
ljmp
xchg
mov
addr16
add
data16
add
inc
add
ret
add
sahf
sub
pop
cmp
add
jmp
add
mov
insb
sti
out
mov
add
js
inc
add
jmp
and
add
add
add
enter
cmpsb
add
add
incl
inc
add
xchg
insl
loop
jae
dec
loopne
jge
daa
add
add
addb
add
decl
enter
decl
sub
add
add
sahf
push
dec
call
mov
or
cmc
pop
scas
jge
add
add
lret
adc
jmp
add
lret
mov
mov
pop
stos
shr
into
in
ret
add
push
add
in
lret
xchg
out
xchg
cld
jmp
in
cmpsl
add
add
lds
add
lcall
mov
inc
add
popf
les
cmp
sar
mov
lcall
sub
add
cmp
add
lret
and
ljmp
push
add
add
push
add
les
out
sub
add
xor
add
mov
aaa
aas
stos
xchg
jne
mov
lret
mov
cmp
xor
mov
dec
dec
xchg
lcall
xchg
push
shl
mov
lods
lock
in
or
mov
xor
ljmp
fcomp
inc
add
movb
mov
and
push
icebp
jne
add
mov
clc
movb
add
inc
add
pop
movb
add
mov
add
cmp
add
adc
push
test
rorl
sysenter
pop
xchg
xor
pushl
add
data16
test
pusha
add
cmp
pushl
sbb
add
cli
push
test
icebp
ds
jl
push
sub
jmp
out
dec
addb
add
incl
or
add
add
mov
or
add
jmp
add
ja
add
cld
adc
jmp
add
data16
add
adc
push
mov
sub
push
jb
call
add
mov
out
js
ljmp
mov
enter
cmp
std
adc
ljmp
add
mov
mov
cmp
add
inc
add
imul
add
mov
jmp
and
popf
or
incl
jmp
add
flds
stos
lock
add
push
stos
mov
inc
add
cmp
push
std
mov
cmp
jle
mov
add
mov
pop
fcompl
add
add
incb
add
or
add
call
mov
aad
jmp
add
in
les
mov
mov
jg
mov
mov
jg
imul
jno
jmp
add
ss
sub
lock
into
loope
bound
pushl
add
ds
scas
imul
add
lret
mov
cmp
push
cli
leave
jbe
int3
adc
and
aas
add
jmp
add
jne
add
cld
jo
fstpl
sahf
xchg
adc
add
dec
in
out
cmp
addb
in
xor
fbld
add
out
adc
mov
add
dec
add
xor
call
add
lods
adc
lcall
mov
loope
inc
add
roll
add
or
add
add
mov
cmp
jno
jmp
nop
lret
add
and
rolb
clc
mov
mov
std
int
pop
dec
sbb
out
inc
add
dec
ficompl
inc
add
add
cmp
stc
inc
add
ror
inc
add
add
pop
adc
ljmp
xchg
xchg
lret
add
add
enter
sub
pop
mov
ss
pop
adc
lcall
jp
stos
sarb
addb
push
adc
jecxz
and
call
decl
add
push
and
call
cmp
aaa
movb
add
jmp
jmp
add
push
mov
add
sub
add
pushl
nop
stos
bound
ljmp
inc
add
dec
hlt
cld
mov
test
mov
fstps
add
sub
pop
cmc
add
ljmp
add
add
sbb
mov
inc
add
pop
std
push
add
in
xor
jmp
add
frstor
jmp
add
in
sbb
nop
adc
add
dec
pushf
scas
inc
add
add
push
sbb
push
cwtl
pop
adc
pushl
add
and
inc
add
add
les
inc
add
mov
sub
add
or
push
nop
cmpsb
add
add
call
pop
dec
add
jae
cmp
repz
and
pop
jns
mov
popa
add
xchg
mov
xor
pushl
ficoms
jmp
add
xchg
sub
add
jae
jmp
add
bound
incl
push
add
psubd
add
add
incl
add
jg
movsl
add
call
decl
push
inc
add
lods
sarl
add
jae
fsubrl
add
sti
out
decb
sub
jae
cld
mov
mov
lcall
cli
push
add
shr
jge
add
cmpsb
add
int3
inc
add
dec
add
incl
xor
ljmp
into
ret
add
bound
ljmp
push
add
push
sub
ret
add
jns
add
fucomp
add
jmp
adc
call
rolb
cmp
enter
jge
add
aas
lods
ljmp
add
dec
add
add
aaa
inc
add
add
incl
add
add
rolb
mov
add
fwait
lods
and
lods
and
ljmp
mov
dec
and
mov
ja
sti
add
lcall
loop
ljmp
loopne
fsts
add
cmp
jnp
add
aaa
rolb
ror
ljmp
lcall
sbb
call
add
jns
aas
xor
incl
pop
ljmp
add
cmpsl
add
inc
add
cmp
add
add
add
inc
add
mov
sbb
add
jmp
call
add
lcall
add
xlat
lcall
aam
movl
add
jge
jb
decl
movsb
add
inc
add
add
sub
fcomps
mov
decl
adc
pushl
add
cmp
add
repnz
add
mov
add
arpl
jmp
decl
inc
add
xchg
mov
xor
pop
sbb
loop
xchg
sub
add
add
cld
xor
stc
adc
add
push
scas
outsl
in
dec
test
fsubl
dec
or
add
incl
add
gs
add
and
jmp
das
push
cwtl
adc
call
add
imul
push
add
adc
frstor
lcall
add
xchg
shll
mov
add
cmpsl
add
mov
xor
xchg
pop
jno
decl
add
pop
xchg
pop
outsb
jnp
call
and
mov
sbb
add
es
insb
push
add
addb
stos
jp
jno
decl
mov
inc
add
xchg
cmpsl
add
jo
mov
add
add
cmpsl
add
cs
mov
add
push
jo
mov
add
add
cmc
addl
add
jmp
jg
add
popa
add
fists
clc
call
mov
add
cmpsb
add
mov
fwait
dec
and
incl
pusha
add
addl
add
out
ret
add
add
les
lock
mov
fcoml
add
inc
add
clc
or
call
xchg
sub
add
rcrl
fcmovnb
add
mov
pop
insb
lret
push
lods
cmp
add
add
add
add
lcall
add
jns
add
ljmp
ret
add
js
repz
mov
cmp
add
push
cli
or
add
outsb
loopne
push
add
add
rolb
add
mov
push
add
add
adc
decl
and
mov
ljmp
sbb
add
decl
filds
mov
xor
or
ljmp
cmp
add
and
call
pushl
add
decl
lcall
add
hlt
out
and
das
sub
daa
add
jecxz
cli
sbb
in
add
ljmp
mov
arpl
incl
jg
jnp
hlt
pop
std
aam
and
daa
add
add
xchg
inc
add
adc
incl
ljmp
clc
mov
fmulp
cwtl
jge
lahf
push
mov
cld
push
dec
mov
std
into
bound
call
add
ret
add
add
nop
stos
mov
stos
mov
out
call
push
fistpl
lcall
addb
dec
xor
lcall
scas
jbe
push
add
mov
insl
les
addl
add
add
jbe
mov
inc
add
std
dec
outsl
push
add
popa
add
ficompl
xchg
ljmp
decl
outsl
loopne
cmpsb
add
add
incl
lds
lcall
pusha
add
ret
or
cmp
cltd
cmp
add
mov
lret
addl
add
add
jae
jmp
push
add
pushl
add
or
nop
cmp
add
imul
add
xor
incl
jmp
add
incl
das
movsl
add
cli
push
mov
add
cmpsl
add
dec
ds
add
mov
in
test
add
push
aad
cli
insb
add
pushl
call
sarl
mov
in
lcall
dec
mov
mov
add
add
fsubl
add
iret
mov
mov
add
out
repnz
jmp
jmp
dec
push
aas
jae
lcall
in
ja
adc
call
adc
sub
call
lods
test
iret
icebp
mov
int3
sbb
sub
insl
jecxz
hlt
cltd
data16
call
in
out
push
mov
add
push
add
movb
addb
add
dec
sbb
add
jns
movb
jle
mov
push
xchg
sub
sbb
add
sbb
add
jne
movb
fisubs
mov
pushf
dec
cmc
mov
lahf
out
in
push
cmovns
add
add
push
testb
arpl
call
pop
pop
int3
in
js
aad
add
pushl
push
loopne
in
inc
add
jns
add
addb
mov
inc
add
add
ja
negb
add
add
add
xchg
imul
add
push
or
ljmp
pop
jno
lcall
insb
repz
mov
push
addl
lret
pushf
xchg
jae
std
cwtl
mov
add
pushl
and
nop
mov
cwtl
pop
xor
call
lods
mov
in
cltd
movb
mov
and
decl
lcall
addl
cmp
xchg
xchg
lock
fcmovbe
repz
sbb
incl
jns
cli
cmpsl
add
dec
mov
mov
cli
pop
cwtl
cmpsb
add
mov
add
ja
pusha
add
iret
cvtpi2ps
add
dec
movb
add
mov
add
stos
out
jmp
xchg
mov
add
movl
in
stc
sbb
inc
add
jb
ljmp
leave
jo
decl
cmp
sbb
out
jne
add
test
add
inc
add
test
into
and
imul
decl
vmwrite
fwait
scas
sub
mov
mov
jl
jbe
add
sahf
push
add
sbb
or
add
rcrl
fmul
add
or
pop
movsb
add
add
pop
and
rolb
mov
mov
cld
loop
mov
movsl
add
aam
sub
add
add
movsl
add
jne
or
shrl
in
testl
pop
mov
mov
call
ljmp
add
hlt
sahf
cmp
add
pushl
add
and
outsb
mov
add
add
push
add
inc
add
adc
call
add
rcl
sub
lcall
jle
aam
mov
stos
je
dec
out
add
inc
add
stc
loop
lock
add
test
adc
pushl
or
inc
add
addl
add
inc
add
add
notl
add
fdivr
call
adc
pushl
add
or
incl
pushl
je
push
adc
ljmp
mov
insl
scas
jae
clc
cltd
sub
sti
cmp
add
and
cld
xchg
push
les
cmpsl
add
add
dec
call
xchg
pop
insb
mov
jo
call
std
inc
add
leave
and
out
jmp
mov
fcmovnb
add
add
call
sub
jmp
sub
add
ja
add
pusha
add
into
sbb
cmpsb
add
sbb
stos
mov
shlb
add
fmul
adc
lcall
test
add
dec
rcrb
add
pushl
add
pop
sub
data16
xchg
jns
add
mov
mov
push
add
movl
pop
add
mov
decl
popa
add
gs
add
mov
mov
pop
ret
add
mov
mov
hlt
pop
xchg
out
js
aaa
fistps
push
aaa
push
add
roll
in
adc
jmp
add
jne
add
mov
les
ljmp
add
ret
add
xchg
pop
ret
add
inc
add
push
add
jmp
xor
inc
add
sbb
add
pop
push
cmc
addr16
cltd
test
lahf
sbb
add
repz
add
ss
sbb
add
push
pushf
lds
bound
ljmp
add
add
sbb
nop
push
jns
mov
mov
xor
call
incl
add
btc
add
leave
and
add
cs
add
incl
add
popf
and
lcall
add
inc
add
jp
stc
icebp
jbe
add
add
add
std
pusha
add
cmp
fcmovb
add
les
mov
mov
fstpl
add
add
add
out
sub
add
dec
test
sahf
ja
add
add
jbe
lea
add
dec
lea
push
add
mov
add
push
cmc
adc
incl
and
jmp
stos
pop
sahf
je
add
adc
jmp
add
add
add
mov
and
decl
call
push
add
push
in
sbb
mov
decl
xchg
jmp
sub
add
mov
in
dec
loop
roll
add
stc
jno
call
lea
loopne
js
sar
pop
push
clc
dec
lret
decl
add
movsl
add
add
or
add
shrl
std
lret
movsb
add
xor
decl
add
push
push
add
scas
dec
mov
repz
jg
scas
inc
add
xchg
cli
loope
in
fcmove
mov
cmp
xor
pushl
add
inc
add
add
jmp
xchg
adc
mov
add
add
lods
movsl
add
adc
call
dec
js
add
cmc
push
add
sub
jecxz
lea
mov
jle
cmp
call
lcall
fld
add
repz
call
mov
add
ljmp
repz
or
add
loop
movb
aad
mov
jmp
sub
lods
pop
mov
cld
mov
sub
push
or
test
popf
js
cmp
clc
inc
add
or
add
imul
xor
in
pop
sahf
dec
sub
mov
lea
lock
inc
add
mov
dec
test
pop
mov
jnp
xor
lcall
imul
mov
xchg
xchg
mov
add
data16
out
roll
adc
lcall
mov
incl
sub
adc
add
dec
sub
add
nop
call
push
add
add
xchg
jmp
add
pop
or
sbb
add
cmp
jge
notb
add
mov
add
add
mov
push
add
inc
add
sbb
cmp
dec
xor
mov
push
add
pavgb
xlat
pop
cltd
pop
mov
mov
add
pushl
mov
push
add
inc
add
adc
lcall
xchg
nop
xlat
adc
test
pop
enter
add
shll
add
add
mov
mov
cltd
sub
add
popf
jle
add
imul
lahf
sbb
push
add
or
cmp
cmp
add
add
add
rcrl
cwtl
dec
cmp
faddp
add
cmp
add
xor
ljmp
add
add
std
data16
shlb
add
push
and
ljmp
sbb
add
aaa
nop
scas
push
ss
ja
and
decl
pop
add
add
call
add
xor
call
pop
aam
sbb
sbb
scas
aam
add
lcall
scas
outsl
inc
add
add
movsb
add
jmp
add
add
jmp
pushl
push
add
out
mov
dec
or
jle
add
call
inc
add
leave
pop
pop
mov
fidivrl
push
add
push
add
xchg
push
add
adc
add
jb
mov
jmp
jge
cmp
mov
xchg
ret
add
lea
add
stos
notl
add
aas
in
add
add
fsubp
add
mov
inc
add
repnz
pop
inc
add
pushf
and
incl
add
xor
xchg
test
call
add
lahf
pop
jnp
add
test
add
jmp
xchg
mov
repz
xor
rclb
movb
push
sbb
repnz
add
popa
add
ret
add
and
inc
add
sbb
xor
or
add
sbb
push
xor
faddl
add
xor
fnstsw
pop
call
push
movsl
add
aad
add
in
cmp
ljmp
js
add
mov
mov
scas
push
cwtl
aam
fldenv
add
cmp
loope
scas
mov
add
rcll
mov
add
cmc
inc
add
into
xor
decl
add
add
pop
cli
or
arpl
jmp
cmp
test
lret
dec
dec
inc
add
add
mov
mov
pop
lret
or
loopne
jecxz
inc
add
negl
das
cld
adc
lcall
jl
and
pushl
add
fidivs
roll
pop
pop
push
jge
push
add
into
rorb
leave
mov
lcall
xor
pushl
das
lods
data16
push
cmp
add
ljmp
add
out
in
repnz
sub
add
xor
cmp
pushl
les
push
add
addl
fsincos
dec
mov
stos
mov
add
xchg
or
push
inc
add
adc
repnz
add
scas
and
push
inc
add
adc
incl
aad
add
or
add
add
cmp
lahf
sub
xor
incl
add
push
add
inc
add
jae
push
jb
dec
int
xor
fcmovne
lret
sbb
pop
out
xor
ljmp
jbe
add
add
jae
call
pushl
or
add
and
decl
iret
mov
add
sub
add
pushl
pushl
add
xchg
std
test
xchg
ds
jle
add
sbb
add
xrelease
and
call
inc
add
add
popf
addl
jae
call
add
cwtl
add
jmp
add
js
add
mov
nop
push
repz
rcrl
cmp
add
fsubrl
add
and
pop
mov
test
lods
addb
inc
add
aam
add
add
stos
leave
inc
add
dec
xor
incl
add
sbb
data16
pop
push
and
call
mov
lcall
roll
or
xor
incl
addb
mull
adc
ljmp
mov
gs
mov
dec
lods
fmuls
dec
sbb
fdivr
add
shl
into
sub
add
jno
incl
add
add
aas
push
add
push
sub
add
add
push
dec
mov
fisttps
xor
ljmp
mov
jns
cld
das
inc
add
mov
add
mov
add
mov
adc
icebp
test
fiaddl
add
dec
aas
and
ljmp
fisubrl
mov
inc
add
add
xchg
ret
add
add
lcall
mov
incl
mov
add
add
mov
addb
add
int3
cmp
add
adc
call
rcll
bound
dec
push
add
addl
add
or
pusha
add
cmp
in
sahf
divl
jne
add
add
std
dec
or
pushl
icebp
adc
pushl
lret
dec
push
add
add
aad
pop
xchg
dec
xchg
roll
test
push
test
in
ss
jl
add
dec
mov
add
sub
cmp
mov
add
decl
test
jb
jmp
add
fildll
icebp
loope
cld
cmp
ljmp
pushl
aaa
inc
add
stc
dec
sahf
movsl
add
into
sub
add
sub
add
in
pusha
add
bound
jmp
add
push
in
aam
adc
add
inc
add
cli
out
add
ds
insl
stos
mov
out
mov
mov
decl
pop
or
ljmp
bound
ljmp
jmp
push
lds
mov
jbe
add
add
inc
add
fcoms
pop
xor
call
js
sbb
ljmp
cmc
mov
add
dec
jo
out
or
mov
or
jmp
sahf
adc
decl
pop
mov
out
cmp
sub
hlt
je
add
add
mov
add
pushl
mov
cmpsl
add
add
out
dec
sbb
wrmsr
add
mov
mov
add
add
cmpsb
add
fisubrs
add
push
add
xchg
addl
jge
mov
inc
add
xchg
pop
xor
dec
add
addl
xchg
sub
stos
loop
add
fidivrl
dec
xor
decl
xchg
sub
pop
insl
or
add
mov
add
adc
decl
ss
inc
add
scas
jmp
mov
add
bound
decl
mov
stos
into
into
jne
icebp
movsl
add
add
ljmp
cwtl
push
xchg
push
movl
decl
jecxz
dec
add
decl
call
call
lret
sub
imul
incl
add
jo
jmp
cmp
aas
xchg
ss
add
cli
aas
jno
js
add
imulb
dec
sti
dec
and
lcall
pop
mov
mov
sbb
add
mov
mov
add
rcrb
out
adc
mov
shrb
add
sub
add
add
in
and
div
imul
add
in
ja
add
movsl
add
add
jl
add
xchg
lea
decl
add
xor
add
stos
add
mov
add
dec
scas
lods
push
mov
mov
sarl
add
gs
jmp
push
outsl
repz
add
mov
out
xchg
mov
nop
mov
add
aaa
lock
add
loope
addb
shlb
movl
add
and
ljmp
jmp
push
add
mov
add
test
shrb
std
nop
push
add
jp
aad
jo
jmp
add
add
ljmp
addl
jg
jp
add
aaa
call
enter
fwait
xor
xchg
pop
movl
clc
dec
add
inc
add
push
dec
pop
ss
ja
add
mov
setnp
jl
add
xor
call
shlb
outsl
mov
pop
rcl
add
add
bound
pushl
adc
jmp
jbe
add
sub
add
repz
add
lcall
test
push
dec
mov
push
add
enter
inc
add
and
add
jecxz
addb
insb
in
adc
inc
add
loop
scas
mov
or
stos
data16
data16
ss
loope
sub
xor
ljmp
add
sbb
sbb
popf
cmp
add
lds
push
add
cltd
outsl
xchg
add
jmp
add
cmpsl
add
mov
sub
arpl
call
ds
add
ljmp
insl
or
mov
add
fdivrs
add
aam
add
jmp
in
addl
sbb
mov
movsb
add
lds
loopne
data16
decl
insl
push
cmp
add
movsl
add
sub
add
lods
clc
sahf
jge
rcrl
adc
add
dec
lea
outsl
add
pushl
add
ljmp
mov
cltd
adc
incl
lds
mov
dec
mov
add
lds
cmp
add
lret
add
into
push
fisttps
dec
mov
adc
jmp
add
add
cmp
aam
imulb
mov
add
rcrb
repz
mov
add
push
add
test
jmp
pop
cmc
or
inc
add
scas
fcompl
jge
push
repz
add
jmp
add
jl
cmp
lea
cltd
je
pop
ds
add
add
dec
shl
dec
ret
add
jmp
add
add
add
scas
imul
or
add
rcr
add
lcall
jmp
lcall
xor
dec
pop
ucomiss
add
inc
add
add
add
inc
add
enter
add
inc
add
cltd
scas
ja
push
add
mov
push
lcall
add
jge
add
and
sub
hlt
dec
repz
jmp
add
dec
in
add
lds
in
jg
push
xor
incl
pop
mov
fmull
imul
pushl
sub
addl
add
add
lcall
and
call
pop
xchg
leave
lret
sub
sti
sti
movb
add
add
add
divb
out
jbe
add
mov
add
fdivrl
jecxz
movb
push
dec
add
decl
add
int3
clc
dec
sbb
imul
in
sub
add
lds
stos
cmpsl
add
cmp
call
test
aam
add
add
pusha
add
movsb
add
incb
ds
push
add
ljmp
incl
jle
lods
mov
das
les
mov
add
and
dec
lret
push
pop
sbb
incl
and
add
xlat
pushf
ljmp
pusha
add
aad
add
fcoms
add
dec
in
out
out
pop
scas
xor
jmp
inc
add
shl
add
add
add
std
cmp
add
mov
incb
incl
cmp
arpl
jmp
xchg
add
inc
add
sbb
add
addb
lods
loopne
mov
popf
lret
lods
test
sbb
jns
add
jno
call
or
cld
adc
fdivp
xchg
push
fidivrl
lea
add
daa
add
or
cwtl
push
je
in
outsb
mov
loop
leave
out
roll
add
sub
cmp
je
add
insl
addb
add
jbe
scas
jecxz
sbb
jmp
add
jg
pusha
add
xchg
js
add
test
pop
dec
mov
add
mov
fisttps
xor
add
mov
add
inc
add
aas
popf
sub
add
cmp
add
cvttps2pi
mov
into
clc
cld
add
add
mov
notl
cli
shll
aam
inc
add
dec
inc
add
inc
add
mov
arpl
lcall
lea
add
fwait
jae
pushl
adc
decl
add
pop
pop
add
add
add
add
dec
fdivrs
jns
addb
cmpsl
add
add
cli
inc
add
add
jb
jmp
pushl
add
add
incl
add
movl
addb
loop
cltd
push
aaa
xor
testb
lret
cmp
add
push
add
dec
xchg
lahf
out
test
add
mov
rcll
ljmp
sub
add
das
int
xchg
mov
dec
clc
insl
jns
popf
testl
iret
mov
sub
mov
add
out
dec
pusha
add
sub
lret
mov
inc
add
add
std
dec
dec
adc
mov
lcall
mov
jns
push
add
movsb
add
mov
push
fistl
rolb
add
fidivrl
roll
inc
add
shll
pushl
cmp
aas
mov
dec
mov
insb
jmp
aaa
mov
add
pop
cs
sbb
add
add
cltd
lods
inc
add
in
les
adc
jmp
add
add
add
or
add
daa
add
inc
add
out
insl
addl
add
repnz
lds
push
add
xchg
movsl
add
add
fnclex
add
push
adc
mov
adc
pushl
mov
add
add
or
jge
add
loop
cmc
add
pushl
jne
and
xchg
popf
sub
das
push
and
add
sbb
ljmp
dec
or
add
add
repz
add
pop
add
xchg
pop
faddl
std
sbb
add
push
add
sub
xor
ljmp
add
rolb
add
sahf
pop
jmp
jae
in
test
dec
dec
stos
loopne
xchg
and
mov
add
mov
lods
scas
jl
xchg
add
les
lret
add
cmp
jmp
dec
xchg
push
xor
jmp
mov
js
add
call
loop
frstor
and
in
mov
xchg
xor
mov
mov
add
mov
add
lods
xor
jp
push
fimull
outsb
sbb
pop
add
adc
jmp
add
ss
xor
pop
sub
add
jae
inc
add
test
pop
jb
incl
in
jge
add
mov
cmp
out
ror
jmp
decl
add
addb
add
or
test
in
xchg
jns
xchg
mov
jg
pop
add
fistl
inc
add
add
or
add
addl
push
mov
call
mov
scas
mov
push
add
scas
cmp
out
ss
aam
cmp
leave
ja
add
rolb
add
sbb
add
dec
mov
add
das
addl
add
add
fnsetpm(287
add
out
movb
cmc
and
decl
inc
add
daa
add
sub
add
add
movb
pop
inc
add
jbe
pop
add
lock
add
add
movb
add
jg
outsl
add
incl
pop
push
roll
adc
jp
mov
cwtl
mov
add
rsqrtps
jmp
add
fcompl
out
cmp
inc
add
add
push
mov
pushl
cmp
add
adc
call
test
sub
xor
add
stos
xor
push
sbb
loop
popa
add
movsl
add
or
adc
add
xchg
inc
add
mov
add
add
cmp
add
dec
int
cmp
push
add
inc
add
cmp
add
add
push
push
push
add
mov
pop
inc
add
sbb
data16
cmp
outsb
add
lcall
add
call
dec
inc
add
and
mov
add
or
loop
add
add
pop
cmp
add
or
xor
dec
jmp
add
xchg
loope
dec
mov
imul
inc
add
pop
xchg
inc
add
and
ljmp
pop
sahf
fsubrs
notl
roll
add
mov
sarb
mov
das
inc
add
decl
or
mull
aaa
jns
add
mov
popa
add
mov
add
mov
lcall
cld
add
call
mov
sub
mov
add
mov
std
aad
add
add
push
addb
xchg
jnp
add
lcall
ss
add
add
mov
pop
aad
add
std
lods
cmp
add
xor
cld
mov
xchg
push
sbb
lcall
xor
call
add
push
cmpsb
add
add
stc
push
add
sbb
xchg
cmp
add
js
add
daa
add
add
addl
mov
add
push
lods
rolb
add
add
test
mov
data16
jne
sbb
add
add
cmp
add
jne
loope
pop
add
decl
addl
jmp
es
mov
add
cltd
inc
add
dec
lcall
add
add
add
add
or
add
jnp
push
test
sbb
mov
add
stc
lret
pop
add
dec
and
mov
add
add
cmpsb
add
add
insb
out
aad
xlat
scas
dec
in
jbe
add
dec
inc
add
xchg
and
dec
dec
mov
add
cmpsb
add
imul
add
add
push
roll
add
add
pop
pop
xchg
bound
decl
mov
add
addr16
roll
cmp
xchg
add
in
xor
inc
add
add
xor
jle
add
ret
add
add
add
movsl
add
ret
push
push
add
addl
add
incl
inc
add
lcall
add
add
and
outsb
jne
add
in
movsl
add
add
mov
cmove
sahf
out
fcomi
xchg
shlb
adc
rcll
fmuls
push
add
dec
xor
dec
mov
push
dec
pop
jbe
add
add
cmp
pop
xchg
sub
mov
or
jg
mov
loope
hlt
cmp
lods
loop
out
rcr
dec
daa
add
decl
pop
jae
jmp
ret
add
add
jb
pushl
jmp
add
sbb
mov
mov
rolb
add
call
xlat
jo
jmp
decl
in
pop
shrb
add
jle
lret
lahf
cmp
lea
xor
mov
adc
incl
add
fldt
add
jmp
in
mov
add
add
ucomiss
add
add
iret
addb
add
jmp
push
sub
cld
jne
push
add
mov
add
pusha
add
pop
mov
fidivrl
ret
loop
rcl
into
and
jecxz
add
add
ret
lahf
les
addl
fidivrs
add
cmp
xchg
jnp
jmp
or
add
bound
lcall
and
mov
cmp
sub
add
sbb
jge
sub
flds
add
add
jbe
or
bound
push
test
inc
add
adc
pushl
aaa
mov
mov
out
jmp
jl
xchg
dec
into
in
mov
jne
push
cwtl
sub
stos
sahf
insl
add
mov
dec
shll
add
cmp
popf
fwait
cld
sbb
push
add
sahf
decl
lahf
popf
dec
or
in
fldl
add
add
xchg
test
push
add
pop
lret
sbb
mov
xlat
fwait
xchg
sbb
add
out
cmp
add
inc
add
ds
add
call
call
incl
add
enter
push
add
mov
call
inc
add
fdivrs
xor
call
mov
lock
jmp
inc
add
out
icebp
outsb
pop
cwtl
in
cmc
xchg
mov
addb
push
call
pusha
add
add
jmp
int3
popf
pop
xchg
dec
fincstp
fsubrl
cmp
fmull
sbb
push
add
push
popa
add
mov
dec
add
lcall
push
mov
add
cld
test
add
add
xor
jmp
add
in
les
cmp
jmp
add
pop
and
decl
pop
push
dec
test
pop
mov
add
ljmp
fldcw
adc
ljmp
jne
sbb
add
add
add
call
cmpsl
add
push
fidivl
clc
mov
ror
lcall
xchg
inc
add
add
jmp
dec
fdivl
add
mov
add
mov
dec
lods
xor
decl
leave
mov
mov
rcll
add
cmp
cmp
lahf
add
inc
add
xor
call
xor
call
ljmp
sbb
notl
add
cli
mov
arpl
ljmp
test
adc
push
xor
dec
data16
xor
mov
insb
sahf
mov
push
add
add
dec
and
aas
cld
mov
and
add
xchg
pushf
and
lcall
fdivrp
movb
cmovg
push
add
jmp
sti
or
in
mov
loop
and
call
ffreep
add
xchg
mov
movb
bound
call
and
ljmp
mov
xchg
mov
ud0
sub
and
lcall
roll
mov
push
pop
ret
nop
out
std
mov
test
rorl
jno
jmp
add
call
inc
add
adc
addl
cld
repz
mov
add
add
mov
add
scas
pop
push
and
pushl
add
inc
add
add
icebp
scas
xchg
mov
movsb
add
push
loop
or
jns
outsb
adc
incl
add
mov
arpl
lcall
out
pop
fdivl
incl
add
into
add
add
push
add
add
popf
and
test
ret
add
das
movsl
add
add
add
call
bnd
jge
lea
push
adc
cmp
add
add
mov
jge
add
decl
push
outsl
inc
add
and
call
push
cld
pop
das
add
inc
add
je
add
add
mov
xor
call
xor
jmp
add
add
sbb
cmp
add
jecxz
xchg
mov
add
xor
pushl
add
aam
push
xchg
and
cmp
insl
cmp
push
add
add
aas
dec
sub
add
nop
pop
push
add
roll
add
cmc
sbb
add
lcall
repz
push
addb
xor
scas
inc
add
add
incl
add
xchg
inc
add
add
push
add
or
push
adc
lcall
or
add
add
dec
decb
shl
add
add
icebp
loope
dec
inc
add
enter
add
stc
jmp
std
jo
out
xor
lcall
jmp
push
add
call
nop
xor
incl
lods
int3
arpl
jmp
add
js
fwait
adc
ljmp
jmp
movl
popl
inc
add
mov
std
mov
dec
fisubrl
and
incl
aas
mov
adc
dec
mov
movb
addl
mov
pop
xor
push
and
sub
mov
add
fidivrs
push
add
rolb
add
add
insb
outsb
addl
cmp
add
in
lods
sbb
lcall
pop
adc
loop
neg
addl
lcall
nop
lcall
jmp
add
pusha
add
fpatan
in
out
xlat
js,pn
add
sbb
add
add
jge
xchg
inc
add
mov
roll
mov
dec
neg
in
int
push
add
leave
jae
jmp
add
decl
mov
call
push
sub
add
call
ret
add
loope
xor
xor
push
add
cs
hlt
movb
add
int3
movsb
add
add
aaa
enter
add
jne
int
aam
add
out
add
pop
into
xchg
lea
fnstenv
add
ficoms
add
data16
or
jne
repz
test
sub
add
add
lods
enter
add
out
cmp
add
repnz
adc
clc
imulb
clc
icebp
std
rolb
arpl
push
shr
add
ljmp
inc
add
cmp
mov
add
add
data16
js
add
in
fcompl
push
fmull
int
out
pop
fists
fisttpll
ljmp
cmp
dec
cmp
ljmp
xor
lcall
sub
out
push
add
add
add
incl
outsb
int3
cmpsl
add
add
mov
mov
add
add
daa
add
add
nop
inc
add
inc
add
lret
jecxz
xchg
sub
push
add
pop
cmp
and
incl
add
pop
push
add
add
addl
add
lret
in
addl
dec
cltd
sub
add
arpl
jmp
add
push
add
push
add
in
stos
push
add
pop
cmpsl
add
add
add
in
lods
pop
test
int
add
add
add
jmp
loopne
adc
decl
add
add
jbe
sub
xor
incl
movb
push
mov
mov
add
add
pop
jg
add
add
inc
add
incl
dec
sbb
std
pop
lods
and
stos
inc
add
dec
lds
and
cmpsb
add
push
add
mov
pop
icebp
pop
mov
out
dec
mov
inc
add
das
jbe
imul
stc
mov
daa
add
jnp
fwait
popa
add
push
movl
call
nop
iret
in
pop
mov
add
lahf
sti
pop
fiaddl
add
add
add
pushf
xor
jmp
movsb
add
sbb
add
stc
out
ret
add
xor
xor
or
mov
push
pop
hlt
insb
mov
sbb
dec
les
sbb
mov
std
push
scas
icebp
fwait
inc
add
pop
sub
in
daa
add
ficomps
inc
add
add
aad
enter
inc
add
decl
push
mov
cmpsl
add
rolb
xor
add
clc
add
clc
sbb
add
mov
add
fisttps
add
sbb
insb
fs
xchg
xor
ljmp
add
in
cwtl
hlt
and
call
add
out
adc
test
add
popf
adc
call
pushf
imulb
pop
add
xchg
jg
add
add
js
push
sbb
add
lds
roll
add
sub
mov
add
lret
mov
pop
and
movups
ds
rolb
add
add
mov
add
popa
add
add
push
add
jl
add
add
xchg
xor
add
push
push
add
incb
sub
pop
xchg
cmp
add
adc
jmp
add
enter
fnstenv
add
xor
jmp
add
cld
mov
pushf
mov
in
stos
mov
sub
add
addl
xchg
ljmp
cmp
push
add
push
add
push
fwait
popa
add
lcall
xchg
inc
add
add
leave
jb
inc
add
aas
stc
push
lret
call
movsl
add
add
das
cwtl
push
and
xor
add
add
arpl
call
call
leave
pop
mov
dec
sub
lods
inc
add
ljmp
jmp
add
sbb
add
jmp
ljmp
leave
enter
loopne
test
add
pause
push
daa
add
jnp
add
mov
add
sub
add
dec
adc
add
dec
popf
fstps
insb
lock
mov
jne
sbb
adc
jmp
add
jmp
or
xchg
cmp
call
pushl
call
icebp
scas
mov
jmp
adc
lcall
and
incl
add
repnz
add
adc
incl
or
add
cmp
mov
dec
adc
decl
pop
addb
add
ja
inc
add
add
repnz
mov
add
xlat
insb
data16
add
add
lcall
or
add
insl
out
lahf
fidivrs
repnz
scas
popa
add
xchg
jbe
add
add
pushl
add
add
mov
movsl
add
pop
cltd
and
jmp
mov
add
jno
call
movsb
add
push
add
xor
dec
push
dec
mov
add
ret
cmp
add
jno
decl
and
int3
rolb
push
daa
add
jg
nop
ja
add
add
roll
or
lcall
mov
mov
add
cld
push
add
repnz
add
lret
pushl
add
mov
add
sbb
pop
nop
lahf
adc
pop
xor
movsb
add
add
data16
add
jo
call
pop
lock
add
addb
add
add
loop
jnp
addl
decl
or
addb
add
pushl
add
sub
lods
insl
fsubrl
rolb
sbb
call
pop
add
mov
pusha
add
inc
add
lcall
mov
jno
fidivl
pop
addl
dec
pop
push
movb
xchg
jo
decl
mov
dec
push
add
in
hlt
dec
xchg
loop
bound
call
fucomp
or
mov
pop
ret
add
mov
push
sub
dec
push
add
mov
add
add
add
pop
movl
mov
add
jns
add
int3
mov
or
pop
add
xor
push
movb
lahf
mov
add
clc
gs
add
add
jp
add
out
fbld
aam
js
pushf
dec
xchg
shll
add
add
push
add
add
jmp
add
out
pop
fmulp
arpl
ljmp
lahf
ret
jne
add
pop
adc
add
mov
lahf
scas
movsb
add
jno,pn
lcall
cmpsl
add
jne
adc
dec
aad
add
addl
add
into
mov
add
add
pushf
arpl
inc
add
pop
pushf
add
ljmp
mov
hlt
addl
and
call
lcall
mov
push
test
add
addr16
add
add
add
cwtl
mov
add
incl
cli
ret
add
dec
xchg
out
add
call
pop
sbb
xchg
das
mov
ljmp
add
add
lods
rcll
add
sub
sbb
aaa
dec
push
add
jp
ret
int
mov
add
lcall
add
ss
add
sti
inc
add
push
movb
adc
test
or
cltd
add
incl
add
add
add
and
jmp
movsl
add
add
add
add
inc
add
and
inc
add
fnstcw
add
std
jle
add
mov
sahf
std
es
push
add
lret
pop
decb
lods
pop
jmp
test
add
add
test
add
add
loope
push
add
adc
lcall
add
incl
add
data16
mov
push
pop
add
push
cmpsb
add
ljmp
in
mov
ret
add
push
mov
into
rolb
mov
movb
add
sahf
mov
inc
add
cmp
incl
cltd
roll
sub
pop
inc
add
xor
mov
mov
mov
add
and
test
add
push
clc
inc
add
mov
dec
mov
add
or
inc
add
and
decl
mov
out
sub
lcall
jno
call
mov
addl
inc
add
pushl
inc
add
aad
mov
dec
cmpsl
add
lcall
inc
add
add
push
addl
add
aad
call
add
add
add
push
into
lea
adc
call
push
add
addl
mov
dec
test
lahf
popf
and
lcall
pop
pop
nop
iret
sbb
mov
add
mov
in
ljmp
add
nop
pusha
add
xchg
lea
cld
test
push
add
adc
out
sar
dec
mov
adc
incl
lcall
add
add
call
lcall
mov
cmc
adc
push
xor
incl
cltd
and
inc
add
jmp
jmp
dec
test
out
js
mov
add
shlb
in
shl
lret
or
bound
pushl
jmp
add
icebp
mov
push
cmc
pop
push
outsb
push
mov
jl
add
add
ljmp
pop
add
fisttpl
jecxz
dec
hlt
lahf
fiadds
loopne
mov
call
call
dec
mov
add
lcall
pop
addb
jo
mov
mov
add
push
les
iret
mov
insl
and
jne
add
clts
add
scas
cmc
push
loope
sbb
add
lods
js
add
add
pop
xchg
in
sub
and
in
mov
add
rclb
xchg
jnp
sub
mov
and
mov
add
add
testb
lods
adc
popa
add
movl
add
jb
call
aad
movsb
add
add
adc
pushl
add
data16
add
xchg
data16
movb
pop
pop
dec
adc
add
lcall
lcall
push
call
lds
adc
dec
leave
push
mov
lahf
ljmp
int
push
add
mov
call
fdivrs
jbe
cmc
js
popa
add
inc
add
call
rcrb
call
decl
in
jbe
adc
lcall
stc
cmp
mov
mov
push
xchg
movb
add
push
add
push
push
add
add
imul
mov
add
add
sub
fisubrs
adc
call
mov
jmp
add
push
lret
pop
les
dec
push
add
movsb
add
lock
push
add
outsb
inc
add
ss
add
jp
fisttps
pop
push
ljmp
push
jno
incl
testb
ljmp
add
sub
ret
add
add
sbb
jmp
aas
mov
dec
mov
add
stc
sbb
adc
ljmp
rolb
add
das
inc
add
out
inc
add
imul
ret
add
std
arpl
inc
add
jg
add
jmp
cmp
add
jl
add
pop
add
inc
add
and
incl
ljmp
cmp
add
dec
pushf
mov
pushl
jmp
js
imul
xor
incl
add
add
imulb
addb
ljmp
incl
add
imul
lcall
in
fisubrl
aas
xchg
jae
ljmp
add
add
pop
xor
jmp
into
sub
ljmp
cs
clc
pop
add
mov
sub
add
add
add
jl
fwait
jg
stos
or
dec
fidivrs
or
incl
push
add
fisubl
add
or
add
add
adc
ret
add
add
xchg
mov
imul
pop
emms
pushf
ja
mov
pop
mov
mov
pop
mov
add
rol
add
fdivp
mov
or
add
push
mov
call
add
fsubrs
jmp
cmc
sbb
or
and
cmp
add
imul
movsl
add
or
add
pop
test
push
add
cmpsl
add
sub
ret
cmp
dec
mov
add
push
add
out
addl
mov
push
dec
sti
adc
decl
lds
dec
vmread
lahf
das
add
cmp
add
dec
dec
divb
cmp
add
add
add
mov
jnp
add
add
mov
repnz
add
pop
aaa
lret
jmp
in
sbb
jmp
add
xor
jle
push
add
add
movsb
add
into
mov
xor
lcall
add
loopne
fcmove
or
add
add
jmp
jecxz
or
add
repz
add
add
add
imul
add
add
fildll
mov
cltd
lcall
add
fildl
or
sub
rolb
cmp
xchg
lret
dec
pusha
add
lds
adc
in
jmp
add
pop
add
add
lcall
mov
mov
or
or
xchg
cmpsb
add
fcmovnu
rcrl
dec
xor
decl
mov
adc
ljmp
mov
add
pushl
decl
pop
mov
leave
loope
in
sub
sbb
shll
ljmp
or
add
fldcw
add
jmp
add
jge
mov
enter
decl
add
add
fwait
repz
add
and
inc
add
add
lods
das
push
add
outsb
sbb
mov
and
jne
in
xor
dec
mov
pushf
les
add
add
add
cltd
pop
xor
ljmp
dec
movsb
add
pushl
fdivr
data16
add
xchg
or
mov
add
add
data16
cmp
dec
je
add
and
stc
movsl
add
ljmp
aaa
jmp
add
pop
cli
dec
loope
dec
mov
mov
decl
sub
push
add
xor
add
movl
dec
arpl
incl
add
jno
dec
and
lcall
fdivs
ljmp
xor
or
add
pusha
add
fwait
sub
jo
decl
add
add
mov
imul
psubusb
jp
add
add
add
mov
pop
mov
test
jmp
add
test
jno
decl
scas
mov
add
inc
add
insb
sbb
sub
dec
push
add
fs
movb
add
jg
lcall
add
pop
outsl
adc
mov
idivb
rolb
dec
addl
stos
stos
imul
cmp
out
inc
add
dec
pop
fsubr
push
mov
js
cmpsl
add
call
decl
jle
add
loop
mul
add
add
xchg
mov
shrl
aaa
push
inc
add
lret
in
ret
add
sarl
hlt
int
add
push
add
in
adc
out
mov
loope
lock
mov
add
add
xchg
lahf
fst
sbb
add
add
fadds
add
add
dec
jp
add
cmp
add
int3
aas
push
push
cmpsb
add
add
decl
sbb
jno
jmp
add
add
cmp
ljmp
fldt
nop
push
add
adc
pushl
fstpt
add
and
call
add
nop
pop
lret
mov
dec
loop
fsubl
mov
hlt
outsl
sbb
add
outsl
pop
mov
lret
or
add
dec
mov
mov
and
cmp
sub
iret
inc
add
and
decl
loope
cmp
insb
in
cmpsb
add
pop
add
stc
ret
ret
push
add
sbb
add
pushf
or
or
sbb
call
decl
aaa
add
decl
push
mov
loop
jae
cmp
iret
rclb
mov
sbb
add
popf
imul
decl
add
pushl
add
std
insb
movsl
add
mov
push
mov
or
add
addb
push
pop
mov
pop
loopne
mov
cmp
xlat
fildll
cmp
add
xchg
sbb
movsb
add
call
xor
scas
mov
gs
xchg
xor
ljmp
mov
cli
das
mov
data16
inc
add
add
pop
add
fnstenv
jg
add
dec
xor
xchg
add
adc
add
mov
call
mov
call
mov
test
in
xor
jmp
inc
add
je
add
mov
add
cwtl
xor
pushl
add
lds
jecxz
rolb
add
add
je
out
pop
sahf
jns
repz
push
mov
mov
lds
cmp
data16
insb
push
addl
add
push
mov
or
test
pop
sbb
add
add
dec
mov
add
pop
dec
push
add
lds
mov
add
mov
fstpt
add
cmp
out
pushf
push
add
dec
push
roll
add
clc
stc
inc
add
inc
add
add
add
adc
call
mov
sbb
filds
decl
scas
inc
add
jnp
mov
jno
incl
nop
lret
adc
pop
scas
cmp
xlat
mov
cmc
cltd
xchg
mov
jmp
cmp
add
cmp
lods
roll
jne
add
add
mov
add
add
cwtl
test
add
loop
sarl
scas
inc
add
sarb
loopne
fimull
bound
incl
xor
fisubl
test
pop
pusha
add
xchg
ljmp
in
push
add
imul
sti
push
lahf
jmp
pop
icebp
cmc
pop
or
cmp
adc
lcall
shlb
add
mov
add
daa
add
or
jae
std
sbb
add
incl
add
loop
leave
xor
mov
addb
movsl
add
roll
jb
pushl
cmc
add
add
testl
movsl
add
add
lcall
js
idivl
lock
decl
add
call
mov
add
mov
lret
sub
push
lds
inc
add
mov
int
cwtl
scas
inc
add
cmp
add
dec
and
lcall
lcall
in
sbb
add
mov
nop
dec
push
add
cmp
push
xchg
loop
xor
add
jmp
pop
inc
add
add
rolb
add
xchg
mov
add
add
cmpsb
add
addb
jno
out
and
incl
pushl
inc
add
add
inc
add
dec
lea
xor
add
hlt
lea
jb
call
pop
popa
add
xchg
jbe
mov
mov
add
ds
add
jmp
adc
add
jl
sbb
add
lcall
data16
inc
add
mov
ljmp
in
cltd
jmp
add
ljmp
rolb
add
dec
push
mov
add
jmp
jge
add
adc
push
ljmp
xchg
enter
xchg
xchg
xchg
push
sub
adc
jmp
ljmp
pop
add
jmp
clc
lods
fwait
imull
clc
punpckldq
in
cwtl
xlat
cltd
insl
cmp
add
icebp
push
sahf
bound
call
add
xchg
mov
adc
incl
adc
jmp
sbb
sbb
cmpsl
add
stos
mull
mov
cmpsb
add
call
add
scas
mov
adc
mov
add
and
pop
adc
incl
jmp
add
movsb
add
add
adc
push
pusha
add
pop
icebp
sub
add
sbb
decl
add
add
sbb
add
aas
xchg
sub
mov
add
in
mov
push
add
data16
mov
movl
sbb
or
aaa
mov
lret
adc
pushl
dec
lcall
and
jmp
add
add
add
jnp
xchg
cmp
or
outsb
or
nop
leave
lret
add
or
add
add
cld
sub
in
mov
nop
iret
mov
outsl
shlb
add
cmp
add
mov
push
add
clc
adc
call
add
xchg
pop
jmp
ljmp
aaa
movb
addb
add
movsl
add
pop
int
inc
add
push
add
pushf
mov
add
add
jno
lcall
add
add
xchg
jmp
add
add
xchg
mov
ficoms
add
idivl
add
add
add
xchg
sub
out
mov
add
add
add
sbb
mov
mov
add
or
add
aam
add
mov
inc
add
inc
add
push
add
fwait
insl
adc
lcall
push
sbb
out
enter
fisubrl
fcmovnb
add
insb
cmp
jno
mov
cmpsl
add
mov
or
lahf
xlat
pop
leave
outsl
ss
add
add
xchg
xor
decl
add
fisttpl
movb
push
add
jecxz
pop
mov
add
imul
in
cltd
cmp
shlb
jmp
fwait
stos
nop
iret
leave
pusha
add
adc
decl
push
mov
bound
mov
movsb
add
sbb
jo
mov
es
add
push
aam
enter
mov
add
add
mov
stc
mov
mov
adc
cmp
add
xchg
lods
mov
mov
sbb
add
imul
push
fucomi
ret
loope
in
and
loop
jo
dec
sahf
repnz
xchg
mov
mov
xchg
aam
lret
mov
add
add
mov
out
addl
xchg
testl
mov
add
pop
inc
add
call
cmp
pop
or
add
out
pop
jne
adc
ljmp
xor
jecxz
dec
jns
addl
movb
movsb
add
add
shll
push
jne
and
xchg
push
add
imul
rolb
add
incl
decl
nop
sbb
or
pop
sbb
push
lcall
je
add
data16
jmp
add
inc
add
xor
add
lea
add
movsl
add
or
bound
pushl
pushf
insb
pop
stos
xor
call
add
insb
pop
int
outsl
pop
xor
fmull
in
jae
decl
add
jge
add
dec
int
add
add
mov
ror
ret
add
jle
add
jmp
mov
out
into
dec
pop
xchg
mov
mov
in
aad
aas
and
lcall
bound
call
mov
cmp
ja
ja
nop
lods
fistpl
jns
and
decl
hlt
mov
pop
mov
out
jo
ljmp
addb
add
std
call
add
or
scas
cmp
add
movsb
add
add
roll
addb
add
xchg
jmp
test
out
dec
xor
incl
add
and
sbb
add
mov
decl
jecxz
enter
add
leave
pop
jg
push
add
jl
sub
mov
add
aad
jmp
sbb
add
cld
dec
inc
add
push
and
add
pop
aas
cmc
scas
std
mov
add
je
push
lds
mov
mov
ljmp
in
pop
dec
add
sbb
add
lcall
mov
jae
call
push
add
das
dec
lret
dec
test
adc
xchg
sbb
leave
xchg
test
pop
frstor
cwtl
sub
cli
shlb
test
jb
call
add
stos
inc
add
ret
add
push
or
fwait
sbb
add
inc
add
add
inc
add
addb
iret
cwtl
sbb
add
xchg
jns
add
hlt
xchg
fistpll
data16
movups
incl
jge
mov
jnp
add
push
pushf
sahf
push
add
lods
dec
lret
mov
inc
add
fsubrs
cmpsl
add
test
jmp
mov
add
add
add
test
icebp
xor
add
cmp
inc
add
inc
add
add
dec
cmpsb
add
addb
jo
incl
xchg
sub
pushl
add
sarl
xor
ljmp
mov
aam
mov
add
add
pop
jne
pusha
add
adc
jmp
add
dec
and
sahf
cmp
daa
add
add
sub
or
or
les
incl
xchg
out
clc
adc
ljmp
decb
lods
inc
add
sbb
pop
outsb
jecxz
into
movsl
add
sbb
data16
cmp
add
cmc
mov
lods
ficomps
add
scas
sub
add
inc
add
outsl
jbe
test
push
add
add
out
dec
popa
add
sbb
sbb
inc
add
addl
bound
ljmp
jl
add
add
into
scas
inc
add
inc
add
mov
lret
loop
push
add
cltd
pop
add
xchg
sbb
imul
filds
add
js
jmp
add
add
sub
dec
cltd
xor
decl
pushl
imul
jbe
add
pop
mov
stos
cltd
lahf
cmp
popf
enter
jecxz
sarl
dec
int3
mov
dec
cmp
scas
lahf
into
push
lret
add
sbb
call
sbb
lahf
in
ret
add
cmp
add
mov
inc
add
add
add
jo
incl
jmp
jmp
add
add
ljmp
in
call
add
jmp
mov
das
push
mov
inc
add
add
scas
mov
call
cmp
cmc
aad
mov
in
mov
or
ja
pop
inc
add
add
decl
inc
add
sub
add
out
cmc
pop
add
xchg
in
lock
addl
add
in
push
lahf
push
add
popf
xchg
and
decl
inc
add
hlt
mov
out
push
pop
out
mov
xchg
dec
and
incl
lods
dec
jecxz
dec
sets
push
inc
add
fildl
adc
ljmp
mov
add
pop
mov
sahf
addl
add
outsb
cld
movb
mov
push
add
mov
jl
xor
call
popa
add
or
repz
add
bound
dec
xchg
inc
add
and
mov
add
mov
sti
inc
add
jae
decl
movb
dec
cmpsb
add
jle
inc
add
stc
xor
ljmp
add
add
rolb
adc
decl
pop
mov
jmp
data16
add
push
add
sub
pushf
aad
inc
add
jmp
lds
mov
cli
stos
pop
mov
inc
add
add
add
jmp
add
jle
aaa
or
mov
decl
inc
add
add
mov
add
add
in
sti
xor
roll
jmp
add
jmp
add
fwait
sbb
add
pop
pop
sbb
addb
add
mov
divl
add
sbb
popa
add
lret
add
add
std
lret
mov
lods
nop
xor
add
adc
ljmp
add
inc
add
mov
sbb
imul
ja
mov
xchg
in
and
imul
pop
add
into
jne
add
loop
push
imul
je
das
in
int3
add
jg
xor
add
clc
into
mov
insb
iret
sbb
add
add
jmp
dec
mov
add
add
jno
call
add
or
and
call
jmp
add
fildll
cwtl
add
jmp
push
notb
scas
pop
push
outsl
sbb
dec
fxch
and
pop
fst
int
add
sub
add
es
in
sub
addr16
add
add
adc
ljmp
add
add
ljmp
rcll
cmp
add
add
imul
add
add
decl
mov
pop
cwtl
iret
dec
sub
fsubl
cld
test
stos
xor
incl
add
jle
mov
add
sub
add
adc
decl
pop
inc
add
jno
ljmp
mov
in
sti
hlt
and
decb
add
add
ss
into
inc
add
add
lcall
sahf
mov
rcrb
add
jmp
ljmp
addl
addl
call
add
repnz
sbb
sbb
xlat
mov
cwtl
popf
addb
add
xor
cli
lods
and
pushl
add
imul
add
insl
ljmp
add
cmp
lock
add
sar
les
mov
ds
add
leave
jmp
push
add
ret
add
sub
jns
push
add
add
popa
add
test
mov
das
rolb
add
or
or
mov
lret
push
add
dec
sbb
dec
pop
pop
add
add
jae
dec
hlt
je
add
push
xlat
xchg
clc
or
jecxz
cs
ja
add
mov
popa
add
push
sub
mov
add
int3
or
scas
inc
add
adc
and
adc
lcall
add
inc
add
lcall
call
mov
add
and
push
sbb
jmp
push
add
or
adc
or
incl
mov
lds
mov
mov
cli
push
add
pop
adc
push
mov
add
or
pop
push
dec
mov
clc
fstpl
popa
add
pcmpeqd
adc
incl
pushl
add
pop
jno
pushl
dec
cmp
add
add
pop
mov
cmpsb
add
inc
add
test
iret
je
outsl
add
push
fildll
sub
adc
add
add
loope
mov
call
popa
add
pop
sub
add
sbb
push
mov
add
add
push
and
call
decl
sub
decl
pop
fistps
add
add
mov
adc
push
aaa
clc
test
cltd
xchg
movsl
add
add
pop
jne
push
fwait
inc
add
cmp
movsb
add
jo
incl
add
add
std
sbb
mov
add
mov
inc
add
adc
call
add
and
decl
or
mov
mov
lods
and
ljmp
push
add
aad
dec
mov
jmp
add
pop
cmp
add
add
popf
loopne
mov
add
out
pop
push
add
sbb
pushl
xchg
sub
std
lods
movsb
add
shl
fistpl
fstpt
add
add
aas
arpl
decl
add
pop
cmpsb
add
fsubrs
addb
repnz
add
rolb
add
pop
or
inc
add
add
incl
fidivrl
add
jecxz
jmp
lret
in
int
xor
mov
add
inc
add
ljmp
add
ret
cmc
sar
stos
sti
inc
add
dec
jae
sbb
add
decl
pop
push
mov
add
sub
call
cmc
insb
iret
xor
ljmp
or
jnp
cmp
add
adc
jbe
add
rcll
xor
jmp
add
in
dec
lods
outsb
pop
adc
call
xchg
insl
and
incl
add
push
addl
push
add
hlt
das
icebp
xchg
movb
fwait
test
movl
push
add
jmp
add
je
inc
add
add
sbb
movb
mov
pop
pop
add
ljmp
outsb
fists
pop
jl
cmp
add
cmp
fnstenv
mov
inc
add
lret
out
aas
sbb
add
ja
xchg
test
xchg
mov
add
jmp
add
add
pushf
mov
add
push
add
cltd
mov
decl
add
ret
add
incl
push
add
add
testl
jbe
add
addb
sysret
add
cs
cli
mov
or
push
xor
jae
decl
ss
sti
pop
out
sbb
push
sub
out
adc
jmp
pushl
dec
add
call
jecxz
int
inc
add
mov
out
and
dec
mov
out
daa
add
call
incl
inc
add
out
ret
add
adc
jmp
add
add
incl
sbb
add
decl
out
xor
call
mov
mov
hlt
popa
add
and
jmp
add
or
xor
sbb
push
add
jp
enter
xor
call
or
cmpsb
add
add
pop
inc
add
cmp
cs
add
daa
add
add
push
add
mov
add
xchg
jo
lcall
add
mov
outsb
pop
adc
incl
icebp
mov
push
add
addl
fisttps
pushl
lret
addl
add
jno
lcall
dec
jne
add
in
lcall
sbb
add
jnp
add
add
sub
add
hlt
adc
lcall
cmp
in
adc
add
and
ljmp
je
sbb
add
sti
jb
pushl
add
and
and
decl
aaa
test
xor
push
xor
ja
add
fpatan
mov
jnp
add
xchg
insl
sbb
mov
addl
add
add
cmp
hlt
pop
push
add
sbb
cli
push
xchg
lock
arpl
jmp
add
add
sbb
adc
ljmp
fiaddl
add
aad
mov
bound
fnstcw
add
jae
ljmp
test
mov
pop
mov
mov
mov
mov
push
lahf
mov
dec
xor
decl
push
add
adc
cmc
add
clc
enter
add
mov
add
movl
add
sti
add
out
enter
pushl
add
add
test
aaa
pop
add
loop
push
add
clc
and
fldl
mov
add
or
add
jo
lcall
push
cld
nop
popl
add
and
ljmp
add
nop
std
scas
movsl
add
jnp
push
add
cmp
add
sarl
add
dec
cld
fidivrl
mov
ret
ret
lret
pop
cmpsl
add
imul
sub
add
sub
int
dec
dec
loope
or
add
cltd
loopne
mov
add
push
inc
add
add
nop
push
add
add
lods
jle
ficoml
jg
mov
add
movsb
add
in
and
mov
lcall
add
rcll
ljmp
xor
mov
push
add
mov
sub
inc
add
inc
add
pushl
mov
mov
pmuludq
add
adc
lcall
mov
push
add
push
add
push
add
adc
decl
jo
fildll
add
mov
push
loop
dec
add
add
sub
aaa
sub
add
jg
and
decl
mov
add
movl
adc
add
sub
aaa
inc
add
dec
dec
jns
jbe
cmc
mov
lea
decl
add
data16
add
or
cmp
mov
jecxz
xchg
mov
and
or
push
add
add
adc
ds
push
sbb
pushl
decl
lods
sbb
aaa
je
push
push
add
add
add
mov
repz
lcall
out
cli
lcall
jmp
add
lret
outsb
das
scas
sbb
add
pop
xor
jmp
or
jmp
addb
mov
daa
add
push
add
add
incl
add
add
lahf
sub
dec
lea
jmp
add
out
in
arpl
lcall
lds
lret
jmp
cmp
in
jnp
add
mov
inc
add
addl
or
sbb
add
add
sub
fnstcw
lret
add
adc
add
sldt
lcall
ljmp
add
mov
add
add
add
jg
add
push
add
nop
out
mull
add
and
ljmp
lcall
add
mov
mov
jbe
push
adc
sub
add
out
xchg
cmp
fisttpl
sub
and
jmp
lcall
add
cmpsl
add
dec
inc
add
xchg
lock
push
add
das
mov
mov
or
movb
push
scas
pop
dec
js
add
clc
aam
cltd
lret
push
add
aaa
sub
int
test
nop
faddl
add
sbb
jg
cmp
adc
add
mov
lock
or
mov
xchg
rolb
xchg
xchg
mov
pop
mov
lea
add
cltd
test
arpl
dec
add
lcall
add
add
jmp
jne
add
xchg
adc
call
cmp
lret
loopne
das
dec
pop
xchg
mov
movb
add
pop
adc
cmp
add
mov
out
xchg
leave
mov
add
jp
fildl
ljmp
out
insl
js
pop
outsb
cmc
and
incl
dec
scas
xor
pushl
add
xor
add
daa
add
cmp
mov
pushl
add
popa
add
roll
dec
lock
adc
decl
cli
pop
lds
insl
push
sbb
pop
jne
add
mov
shrb
mov
lods
jne
fisttpll
add
pushl
aad
jne
add
bound
ljmp
jne
test
test
stos
int3
lahf
inc
add
mov
int3
setge
add
push
add
pop
movb
push
add
lret
test
add
or
leave
mov
mov
add
pushl
or
popl
test
add
pushl
jl
popa
add
js
addb
fisubrl
shl
add
jmp
cmp
push
xchg
pop
xchg
inc
add
lret
insb
xchg
imul
dec
out
add
pop
and
mov
xchg
pop
pop
dec
mov
int
add
je
ds
addb
add
cmc
stos
in
jmp
scas
dec
or
jo
call
test
aas
pop
in
mov
dec
cmp
inc
add
add
icebp
xchg
push
add
mov
lock
test
int3
pop
inc
add
fisubrs
jnp
sbb
add
outsb
sti
fldcw
dec
push
add
xchg
and
cmp
nop
sub
mov
add
cmp
add
fidivs
push
sub
cmpsb
add
aad
insl
jno
decl
mov
fmuls
sub
jb
pushl
add
inc
add
add
idivb
xchg
lods
aaa
addl
arpl
pushl
mov
stos
clc
pop
outsl
dec
mov
add
add
xor
jl
scas
xor
jmp
add
outsb
and
in
sbb
add
scas
xlat
jo
decl
push
add
jle
mov
add
or
jge
add
push
or
add
inc
add
pop
push
add
and
jmp
add
add
sub
bound
incl
add
addr16
test
push
add
add
inc
add
xchg
dec
xchg
or
jns
jmp
sub
adc
push
ja
pop
inc
add
mov
dec
fistpll
push
add
add
loop
loope
mov
or
in
fistpl
out
cli
sahf
addl
add
or
and
or
aad
add
push
add
pushl
call
add
je
mov
add
js
lret
in
lods
pop
push
add
out
jle
loop
xlat
and
incl
js
add
xor
call
int3
dec
jg
xor
pushl
add
shlb
cmp
and
adc
dec
adc
decl
mov
add
adc
in
aam
enter
xor
mov
add
sbb
pushl
add
ret
sbb
push
ljmp
add
mov
iret
mov
lea
cmp
mov
inc
add
add
add
mov
jp
in
aam
add
push
int
add
cli
mov
xor
call
call
mov
and
jl
add
pushl
push
add
xchg
xchg
xchg
xchg
fcmove
xchg
rolb
add
inc
add
arpl
js
add
xchg
mov
pushf
mov
addb
add
xchg
inc
add
and
push
icebp
cltd
xchg
iret
cmp
pushf
jbe
int3
inc
add
int3
adc
lcall
lcall
jbe
clc
xor
jmp
mov
add
add
lcall
adc
call
iret
sub
and
add
repnz
int3
jg
test
pop
ret
dec
lret
add
call
inc
add
dec
sub
add
loop
out
add
decl
add
incl
push
add
push
test
jle
xor
in
mov
add
pushl
incl
adc
lcall
sti
xor
lcall
add
int
add
add
daa
add
push
sahf
cmpsl
add
mov
outsl
std
movsl
add
lds
mov
add
addl
or
imull
pop
roll
add
call
fstl
add
add
pushl
cli
cltd
push
stc
js
mov
add
testb
dec
dec
mov
add
stos
ja
or
add
lcall
dec
sub
add
sbb
add
add
ret
add
mov
faddl
mov
add
test
cmpsl
add
pop
xchg
call
in
out
outsb
leave
inc
add
ficoml
insl
dec
mov
jg
add
seta
ljmp
add
ja
xchg
mov
xchg
lods
inc
add
mov
inc
add
fbld
inc
add
add
mov
mov
addb
add
mov
lret
add
jmp
add
inc
add
cmp
cmpsl
add
ss
pusha
add
jecxz
leave
xchg
sub
add
imul
cli
push
cmpsl
add
push
add
pop
addr16
dec
dec
stos
add
incl
pop
add
insl
mov
add
add
loope
cmpsl
add
add
nop
xor
ljmp
add
jbe
push
movsl
add
mov
jns
add
add
add
roll
pop
into
lea
add
pop
mov
adc
ljmp
divl
incl
std
mov
add
push
add
movl
push
add
test
add
shl
add
std
dec
ljmp
fnstcw
aam
imul
inc
add
mov
stc
mov
fidivrs
repz
addb
outsb
in
outsb
xchg
cmp
fcoms
add
xor
lcall
pop
and
call
mov
or
or
int3
cmpsl
add
pushl
add
loopne
roll
lock
mov
scas
jmp
lahf
dec
je
add
push
mov
and
out
ret
add
add
les
cmp
and
jmp
sbb
in
push
push
add
pop
xchg
repz
pop
movl
sub
add
addl
pop
rcrb
aas
frstor
dec
inc
add
mov
insb
int
mov
comiss
stos
adc
pushl
dec
movb
cmp
jmp
call
sub
add
and
dec
sub
add
push
and
call
fistpll
or
add
addl
dec
cld
sub
pushf
faddp
add
add
add
add
outsb
add
jmp
xchg
mov
inc
add
add
jp
push
add
or
pop
cmp
add
lcall
mov
push
add
aas
test
les
add
imul
xchg
hlt
in
in
xchg
or
dec
jo
lcall
add
aaa
sbb
inc
add
push
add
ficoml
fisttps
arpl
jle
add
push
loopne
lcall
add
pop
add
out
sbb
add
lds
mov
int3
mov
add
mov
add
into
inc
add
push
add
lret
xlat
roll
mov
push
add
mov
sbb
add
cli
push
add
int
push
add
inc
add
mov
mov
add
add
pop
div
xor
lcall
add
xlat
in
aam
inc
add
add
in
stos
inc
add
dec
xor
call
popa
add
jb
mov
add
add
int3
pop
sbb
int3
add
ljmp
shlb
cmpsb
add
ljmp
mov
cmpsb
add
iret
jb
pushl
or
add
ljmp
push
add
jae
call
lcall
add
jne
add
jo
jmp
leave
call
jne
in
test
into
add
dec
add
fidivrs
jne
add
sahf
fucomip
ss
aas
sub
add
add
sahf
lods
fwait
nop
mov
mov
clc
cmp
add
add
sbb
adc
xchg
jo
jmp
add
sub
jle
xchg
test
pop
cltd
les
push
jg
adc
pushl
fbld
add
inc
add
add
xchg
je
mov
adc
lds
scas
aaa
lret
add
mov
dec
or
push
inc
add
dec
enter
movb
add
jp
add
cmp
add
pop
movl
add
std
jne
lea
aam
mov
aaa
or
push
dec
mov
mov
adc
lcall
lcall
pop
push
add
push
or
mov
add
xor
push
test
add
movl
add
call
out
ljmp
adc
decl
dec
cmc
ljmp
movb
fcmovnb
add
add
roll
add
sub
add
inc
add
sub
add
call
es
push
ja
add
mov
jmp
add
roll
add
pushl
jmp
jg
ret
add
lcall
pushf
pop
add
dec
ret
dec
mov
xlat
dec
aas
lret
cmp
mov
leave
mov
add
addb
pusha
add
sub
jnp
lea
sbb
lea
call
add
incl
jmp
jp
aaa
mov
aad
dec
jmp
add
ds
sub
faddl
add
push
add
lea
add
pop
adc
add
adc
add
mov
das
dec
mov
add
jmp
rorl
jbe
cmp
add
add
rorl
add
lods
xchg
xor
cmp
addb
jl
cmp
fwait
push
add
or
mov
cmp
add
movb
jle
fnsave
loope
mov
adc
inc
add
pusha
add
push
add
push
fbld
add
or
mov
mov
or
xor
cmp
add
out
dec
sahf
cmp
fs
jae
incl
add
in
push
loop
add
shrb
add
add
jmp
add
mov
adc
aas
pop
inc
add
pop
popf
sbb
sbb
decl
add
movb
add
jbe
add
call
add
fwait
add
ficoms
lcall
lods
xchg
addl
dec
test
incl
cli
pop
aaa
inc
add
pop
ffreep
add
xlat
daa
add
nop
mov
add
incb
add
pop
ljmp
add
mov
scas
lret
inc
add
pop
pop
roll
incl
jmp
jmp
add
push
cmpsb
add
addl
add
clc
rolb
insl
jae
add
xchg
xchg
jmp
sbb
jg
add
test
cmc
sahf
and
pusha
add
loopne
pushf
pop
add
imul
inc
add
dec
dec
pushf
sub
lahf
add
push
add
ret
mov
movsl
add
jae
jmp
add
push
add
test
or
nop
push
add
and
jmp
xchg
mov
add
call
dec
aad
sub
movl
or
jns
add
mov
inc
add
add
inc
add
rcll
lcall
lret
add
lds
roll
add
inc
add
inc
add
xchg
in
push
je
dec
cld
movsb
add
lods
mov
push
add
adc
inc
add
fadd
add
push
sahf
push
add
jmp
add
sbb
inc
add
mov
je
sub
test
dec
push
aam
aas
jp
add
imul
cmp
jmp
push
gs
or
push
add
inc
add
in
addb
add
push
add
pop
imul
mov
dec
mov
add
roll
into
adc
pushl
add
xor
incl
ljmp
xchg
mov
jo
jmp
add
repnz
pusha
add
jno
jg
add
add
push
inc
add
mov
add
jns
add
ljmp
clc
setp
add
lods
push
aad
adc
add
add
mov
mov
aaa
push
push
xlat
neg
imull
cs
rcr
pop
or
push
add
into
mov
test
fidivl
pop
add
in
lds
mov
mov
decl
mov
pop
into
ja
mov
lcall
cmp
add
mov
add
add
out
sbb
add
add
add
pop
mov
lds
cmpsl
add
add
mov
adc
push
lahf
fs
add
xlat
mov
fldenv
inc
add
add
roll
data16
sbb
xchg
mov
add
jmp
imul
ja
and
pop
cld
cmp
ficompl
lcall
out
add
call
incl
pop
pop
add
aas
xor
lcall
jmp
add
adc
jmp
adc
in
in
jge
out
adc
rolb
add
cmp
movsl
add
add
pusha
add
je
inc
add
imul
lds
push
push
int3
jg
add
jae
ds
add
sahf
les
xchg
push
repz
pop
clc
outsl
cmp
add
sti
xchg
addl
or
or
inc
add
das
jmp
ss
cmp
add
add
pop
popf
shlb
js
movsb
add
add
sub
out
outsb
adc
sub
pop
mov
mov
pop
mov
ljmp
cmp
cmpsl
add
clc
inc
add
call
add
push
xchg
mov
push
add
add
decl
pop
pop
ss
push
add
add
cmpsb
add
movsb
add
jb
call
ret
push
inc
add
add
add
incl
ss
enter
pop
cmpsb
add
add
pushf
divl
decl
mov
imul
add
dec
lret
les
addl
cmpsl
add
add
cmpsb
add
jae
pushl
mov
inc
add
jmp
add
add
add
sbb
add
call
add
sbb
add
jmp
incl
add
inc
add
pop
dec
lock
pop
test
fwait
mov
ds
add
cwtl
sbb
push
add
addb
bound
jmp
add
mov
jmp
int
push
add
adc
jmp
add
in
int
repnz
aad
sbb
incl
fsubrs
add
ljmp
dec
xor
decl
mov
mov
scas
fsubl
add
repnz
jp
add
incl
repz
xor
call
push
lea
add
lock
test
adc
jmp
fcmovnb
add
call
jge
sbb
pop
or
lock
lods
outsb
addb
ret
add
xor
add
cmpsb
add
push
repz
sti
mov
add
sub
pop
add
scas
push
xchg
push
add
call
jmp
add
pusha
add
xchg
aam
sbb
roll
add
int3
mov
add
add
ja
jo
jmp
add
loopne
les
sub
add
mov
arpl
cli
clc
pushf
dec
in
jmp
add
outsb
fisttpll
clc
push
add
addb
add
cli
in
jbe
add
popa
add
mov
jb
ljmp
fisubl
add
mov
mov
jbe
add
imul
pop
js
add
jbe
or
pop
gs
add
std
mov
aas
jae
call
dec
mov
push
mov
jno
push
push
push
add
les
pop
pop
add
add
lods
cmp
add
xchg
jp
cmp
jle
xchg
int
mov
add
jle
mov
jl
adc
mov
push
add
outsl
push
xchg
push
mov
lcall
push
cmp
add
testb
add
jp
test
into
out
addb
mov
add
add
add
xchg
test
add
add
pop
lods
sbb
add
add
dec
shll
or
add
add
add
data16
movsb
add
call
ljmp
pop
jle
icebp
aam
add
push
add
pop
jp
stc
dec
push
and
incl
xor
decl
add
add
and
jle
dec
jne
out
and
jnp
add
inc
add
dec
adc
pushl
lahf
pop
dec
dec
les
sub
mov
add
roll
sub
add
add
call
decl
test
inc
add
lcall
sarl
inc
add
add
add
mov
cmp
add
xchg
push
add
lods
add
jmp
add
xchg
imul
cmc
inc
add
rolb
pusha
add
stos
dec
popa
add
add
test
loopne
mov
mov
add
add
test
mov
add
call
ljmp
inc
add
in
ds
mov
fdivrl
mov
add
cwtl
ja
adc
jle
cmp
loope
push
add
lods
xor
fiaddl
xor
mov
addb
add
das
les
popf
ret
add
add
icebp
mov
int3
cltd
mov
decl
push
in
jno
call
add
mov
sbb
data16
push
add
addl
xchg
mov
imul
or
add
dec
cmc
mull
fucomip
jl
mov
xchg
adc
decl
cli
movsb
add
add
popa
add
rolb
scas
mulb
call
xchg
jns
push
add
adc
call
add
and
call
sti
scas
mov
or
sahf
call
shlb
add
mov
add
sbb
sahf
addb
add
mov
call
add
cmc
or
call
mov
add
addb
add
decl
xrelease
imul
movsb
add
add
add
add
fstpl
call
push
mov
jno
jmp
incl
pushl
ja
std
pop
xchg
cld
xchg
out
fcmovu
or
dec
cmpsl
add
roll
lahf
pusha
add
mov
add
in
movsb
add
mov
and
sbb
into
sub
add
negb
push
sbb
add
aas
sub
fsubs
add
cltd
mov
sbb
or
add
add
repz
call
stc
and
ljmp
sbb
dec
adc
jmp
add
ljmp
pop
sti
in
std
xor
incl
cmp
loopne
pop
xchg
lods
mov
add
mov
inc
add
loopne
in
push
data16
add
add
jae
pushl
jae
decl
aas
mov
jge
add
fdivp
js
add
dec
shrb
and
out
loopne
pop
pop
cmc
sub
add
scas
and
aaa
test
sar
lahf
push
add
cmpsb
add
cmpsl
add
mov
add
cmp
cwtl
xor
push
fistpl
add
repnz
add
in
dec
jle
add
jmp
dec
add
ljmp
or
add
fwait
lret
iret
jne
jo
ljmp
xor
ljmp
xor
add
addb
aad
add
inc
add
inc
add
jl
movl
xchg
testl
add
add
dec
lret
rolb
sbb
inc
add
movsl
add
negb
add
insb
adc
xchg
mov
incl
mov
add
incl
xchg
lret
ret
mov
push
add
or
cli
and
pushl
jns
xchg
mulb
popa
add
sti
xor
jmp
add
mov
mov
add
leave
les
pop
or
adc
call
and
ljmp
loopne
repz
add
pushl
inc
add
add
add
add
ret
add
jns
out
cmpsb
add
add
add
xchg
lods
pop
inc
add
jbe
lret
imul
add
add
add
call
add
mov
mov
mov
jmp
add
fidivrs
add
xchg
jecxz
mov
sbb
add
lcall
decl
cmp
cltd
add
decl
add
sbb
arpl
jmp
icebp
xchg
and
jo
pushl
jmp
dec
out
push
inc
add
jne
add
les
setl
add
incl
roll
add
push
sub
out
add
cmp
add
lds
xchg
cltd
xor
out
cwtl
ss
add
and
pop
jo
call
add
add
add
xchg
dec
int3
je
add
sti
in
adc
inc
add
add
push
and
call
into
and
pushl
push
pop
in
push
add
in
insl
lret
jno
call
pop
add
dec
add
pushl
add
cwtl
stc
fwait
mov
or
pop
sarl
mov
xchg
xchg
xor
rorl
push
out
jae
lcall
mov
add
add
mov
add
int3
xchg
das
pop
cmp
add
test
sti
mov
add
in
addb
inc
add
cmp
call
push
hlt
sbb
add
pop
aaa
repnz
mov
adc
mov
jmp
outsl
adc
lret
add
add
mov
and
push
add
push
add
mov
add
add
add
mov
mov
add
addl
add
inc
add
arpl
incl
aam
sti
cld
imul
mov
pushf
loop
inc
add
imul
push
sar
xchg
outsl
pop
nop
imul
scas
gs
jne
xchg
mov
pop
out
jp
addl
add
cmp
xchg
sbb
lret
add
inc
add
add
in
sbb
fstps
cmpsl
add
add
or
mov
xchg
or
sbb
pop
add
hlt
inc
add
dec
cs
add
or
xchg
cmp
add
imul
add
loope
sti
outsb
cmpsb
add
call
addb
mov
or
add
ja
jp
dec
pushf
sub
adc
lcall
add
push
add
mov
cmp
or
insl
or
add
je
int
add
mov
imul
xchg
pushf
fists
add
arpl
incl
pushl
add
xchg
xor
incl
jmp
cltd
and
inc
add
jmp
dec
jg
mov
mov
add
add
mulb
add
aaa
dec
int
or
jo
call
jmp
push
cmp
jmp
add
imul
ret
add
inc
add
add
in
inc
add
push
add
jo
lcall
and
jmp
add
push
mov
icebp
iret
or
add
add
jecxz
lea
lret
aam
xchg
mov
lods
aas
cmp
inc
add
jecxz
jle
add
sub
popa
add
and
dec
lret
movl
inc
add
add
incl
push
mov
pushl
decl
add
add
add
add
sbb
es
movsb
add
add
fs
lret
fdiv
sub
ljmp
sub
push
jecxz
add
lcall
dec
jne
dec
data16
add
mov
inc
add
lcall
push
add
dec
sub
add
decl
add
lds
test
mov
add
mov
xor
ds
popl
and
xchg
pushf
sti
and
ds
add
call
add
jg
sub
shll
call
add
movl
add
aaa
iret
rorb
fldl
fdivs
push
add
add
xor
out
lods
add
lods
cmp
add
add
ljmp
jmp
aas
cmpsl
add
cwtl
divb
add
test
mov
test
int
add
add
push
add
dec
imul
xlat
push
add
add
out
mov
adc
push
pop
xchg
adc
ljmp
push
jae
decl
stc
mov
into
jb
decl
push
xor
add
add
lods
test
fcom
or
cltd
or
addl
fs
fwait
mov
jnp
add
adc
incl
pop
pop
loopne
pop
cmp
mov
pop
or
test
xchg
dec
or
cmp
xor
dec
das
stos
ja
cmc
xor
jb
jmp
adc
call
jge
test
mov
in
fnstenv
dec
add
mov
pop
jb
push
sbb
add
push
add
test
addb
add
add
pushf
clc
es
push
add
out
add
ljmp
cmp
fwait
nop
int3
dec
add
jmp
add
cmp
outsb
cmp
add
adc
call
out
jo
ljmp
jo
dec
ja
std
movl
add
decl
jecxz
test
insl
lahf
sbb
decl
add
jmp
std
sub
add
leave
lahf
add
push
add
loop
push
leave
inc
add
jg
mov
add
inc
add
iret
push
xchg
jmp
ret
add
xor
inc
add
cltd
shrl
push
add
push
add
or
add
mov
addl
push
mov
gs
add
mov
dec
popa
add
dec
lods
push
push
adc
ja
push
add
or
in
or
lret
push
lea
add
and
pushl
push
push
addb
add
sub
scas
xchg
aad
movsb
add
lcall
pusha
add
fistl
add
mov
add
leave
mov
sub
mov
aad
add
aam
push
dec
and
ds
or
add
jle
push
add
idiv
adc
fidivs
add
divb
sbb
add
or
add
add
ljmp
rclb
add
mov
add
ss
add
add
lcall
sbb
xor
call
add
dec
adc
mov
add
les
mov
enter
leave
or
neg
lods
jnp
fbld
add
into
mov
add
add
addb
sti
sub
cmp
inc
add
fsub
add
test
pop
mov
xchg
add
jmp
sub
mov
movb
push
pop
add
mov
add
movsl
add
mov
mov
add
jmp
add
mov
add
mov
addb
rcrb
xchg
leave
les
mov
sbb
sub
inc
add
add
add
dec
and
add
pushl
sbb
outsl
mov
push
add
insb
cmp
in
mov
and
add
fdivs
lock
adc
push
push
add
inc
add
rcll
hlt
roll
add
push
add
fildll
and
mov
mov
fwait
jle
add
and
lcall
mov
push
add
aad
jge
add
incl
mov
pop
cli
pop
cld
daa
add
push
add
shrb
lock
popf
shll
rcll
push
mov
cmp
jl
lds
nop
dec
lret
sub
mov
addb
add
scas
js
insl
mov
outsl
sbb
add
mov
xor
add
sbb
mov
ds
inc
add
fimuls
push
add
imul
add
popf
adc
jmp
add
and
push
or
add
pushl
iret
push
pushf
scas
adc
addl
jecxz
ds
mov
inc
add
ljmp
dec
lret
ret
add
pushl
mov
pop
xchg
and
adc
call
fdivs
das
shll
inc
add
add
pop
push
pop
add
lcall
add
insb
ja
pop
into
leave
insl
test
and
push
push
add
xchg
in
scas
iret
dec
adc
jns
mov
dec
xchg
iret
lahf
pop
pop
mov
jmp
dec
inc
add
and
call
mov
add
mov
jg
psrlw
pop
xchg
repz
add
movsl
add
add
pop
add
ljmp
add
push
add
out
loopne
jge
clc
push
add
or
ljmp
test
xchg
addl
addl
aas
lods
cli
inc
add
xchg
cmp
aad
add
add
jp
inc
add
add
jae
call
movnti
das
pop
add
hlt
fstps
or
or
add
add
ljmp
pop
push
icebp
xchg
pop
mov
stos
clc
addb
dec
cmp
decl
cmp
cmpsb
add
jae
fmuls
inc
add
mov
xor
incl
cmpsb
add
scas
pop
xor
pushl
add
adc
ljmp
arpl
ljmp
or
mov
mov
aam
add
movl
push
mov
add
dec
ret
add
push
push
out
out
push
mov
inc
add
add
add
xchg
aas
sub
pop
enter
repz
inc
add
xchg
aas
jg
fists
ljmp
cs
add
xchg
xlat
mov
add
add
out
sub
add
mov
insb
jno
call
adc
add
jae
decl
push
add
stc
daa
add
add
in
imul
pop
push
mov
out
movsl
add
and
pushl
add
cwtl
mov
jns
fucomip
inc
add
pushl
mov
lock
add
js
xor
call
lods
xor
call
jmp
add
popa
add
loope
popa
add
std
popa
add
pop
pushf
add
xor
sub
imul
or
or
cli
repz
test
pop
clc
and
lret
inc
add
cli
dec
jecxz
mov
loope
jnp
daa
add
mov
cli
cli
jmp
add
out
inc
add
mov
int3
fcom
cltd
pop
or
add
pop
jne
jno
inc
add
frstor
out
inc
add
aad
add
rorb
mov
movl
fwait
inc
add
sub
add
adc
jmp
decl
xchg
xor
jne
jmp
incl
adc
incl
add
add
add
push
sahf
push
add
push
add
insb
sub
push
and
ljmp
add
nop
daa
add
decl
add
fsubrs
mov
add
je
test
sbb
add
mov
xchg
arpl
decl
add
sub
sbb
add
xchg
sub
sub
pop
add
add
push
sub
loope
ss
jns
fsubrl
aaa
outsb
pop
mov
les
push
in
dec
xor
xchg
std
lea
add
inc
add
add
xchg
add
jmp
dec
inc
add
lret
decl
add
lods
sti
fistpll
add
rolb
add
add
cltd
inc
add
bound
jmp
add
adc
incl
add
in
mov
or
cwtl
mov
add
arpl
decl
jae
jmp
add
decl
add
cld
mov
clc
lea
out
popa
add
bound
call
pop
xchg
mov
add
sahf
lcall
push
add
fistl
loop
mov
addl
out
add
ljmp
rolb
add
add
ljmp
out
je
add
imul
ljmp
jmp
cmpsb
add
js
and
and
ljmp
sbb
add
dec
test
ljmp
mov
add
scas
movsb
add
sti
loop
movb
addl
add
add
mov
je
push
mov
sbb
mov
lret
data16
or
iret
jg
push
popf
jae
sti
or
ljmp
ret
inc
add
xchg
test
fiadds
mov
inc
add
adc
jns
ret
add
inc
add
test
arpl
call
mov
add
fidivl
add
jno
incl
sbb
jae
jmp
lcall
add
icebp
push
dec
iret
xchg
es
addb
add
pop
paddsw
add
mov
mov
add
addl
xlat
loope
pop
mov
cld
cmp
or
add
fmul
cli
fcmove
roll
mov
add
lahf
xor
call
addl
loope
cmp
pop
mov
add
push
add
jmp
xor
ljmp
fisttpl
cwtl
xlat
daa
add
test
inc
add
rolb
sahf
mov
adc
dec
stos
push
mov
pop
push
and
dec
jne
out
pop
mov
add
fidivrs
mov
cltd
inc
add
or
jne
add
mov
add
add
add
enter
or
add
and
pushl
add
daa
add
add
repz
xchg
push
clc
arpl
call
adc
jmp
add
mov
mov
push
rolb
icebp
pop
or
shrb
inc
add
add
stc
lods
psubd
test
mov
out
cmpsl
add
add
cmp
xor
divl
jmp
add
add
into
push
add
and
dec
js
pop
add
call
add
aaa
add
lock
lcall
mov
sahf
lods
imul
add
addl
add
xor
lcall
sysret
add
leave
adc
call
addl
pop
push
rcl
bound
stc
fiaddl
repnz
xchg
popa
add
sub
in
faddl
mov
add
add
cmp
xor
shlb
ds
add
add
movb
add
xchg
scas
push
in
and
lcall
cmpsl
add
adc
lcall
jnp
mov
jmp
add
or
stos
aam
pop
test
cmp
loop
and
dec
lock
xchg
push
imul
jne
sbb
fadds
jmp
add
rolb
ds
add
aas
jg
pop
nop
aad
sub
add
mov
out
jb
pushl
in
roll
mov
xor
cmc
add
add
inc
add
and
fsubrl
mov
incl
imul
pop
cld
rorb
add
out
push
add
mov
fstpt
add
add
out
push
fidivl
add
lcall
push
sahf
stos
out
mov
jnp
dec
dec
xchg
cmp
add
das
adc
mov
push
add
outsl
mov
add
xor
add
ljmp
add
inc
add
mov
dec
jo
jp
out
jmp
cmp
add
sub
xor
cmp
add
add
lcall
cmp
add
or
jne
sub
add
pop
add
incl
mov
add
stc
jmp
out
mov
and
incl
std
ljmp
adc
mov
add
pushl
sub
xor
ljmp
les
add
jo
jnp
cmpsb
add
add
pushf
inc
add
ljmp
mov
add
fidivrl
movsl
add
dec
imul
nop
mov
mov
mov
mov
add
xor
outsb
test
xchg
push
add
sub
sbb
imul
sub
add
add
add
sub
sbb
xor
inc
add
jnp
push
sbb
inc
add
jp
add
sarl
push
add
mov
add
lcall
add
stos
bound
call
inc
add
pop
pause
add
rcll
shl
add
adc
add
incl
decl
xchg
xchg
out
mov
and
addb
roll
push
stos
jbe
or
push
xor
pushl
lcall
lods
movl
add
pop
pop
dec
pop
outsl
inc
add
les
and
ljmp
add
data16
inc
add
or
push
rcrl
push
adc
mov
add
sti
mov
or
dec
std
xchg
scas
loope
xor
dec
icebp
out
mov
out
fiaddl
xchg
push
jne
adc
imul
call
add
add
pushl
jmp
arpl
pushl
mov
testb
dec
fsubrs
fstpt
fcoms
sti
cmp
push
fwait
add
add
cs
add
add
ja
add
add
adc
cmp
pop
push
add
cmp
inc
add
or
or
ret
add
lds
call
mov
mov
add
out
add
jmp
add
cmpsl
add
push
add
ret
add
jle
add
hlt
inc
add
xor
or
add
push
push
xchg
sbb
stc
mov
xor
decl
push
add
scas
mov
dec
cmpsl
add
add
test
pop
lea
movb
add
fldt
add
fdivrl
add
mov
insl
into
adc
push
push
push
add
cltd
add
fadd
add
add
lcall
add
lcall
scas
inc
add
addb
jnp
dec
mov
add
add
mov
fildl
dec
lds
push
add
add
add
add
cwtl
dec
or
or
ss
jmp
call
sub
data16
add
add
ljmp
loop
movsl
add
fwait
shlb
add
xor
enter
pushl
add
mov
call
insb
inc
add
dec
inc
add
test
mov
add
jns
add
scas
cld
inc
add
aam
pop
or
add
into
sbb
add
push
jne
add
test
pop
cwtl
loopne
sub
popf
pushf
cmp
scas
test
stos
or
dec
xchg
movl
add
mov
icebp
les
mov
add
add
fidivl
push
loopne
cmp
test
mov
dec
test
sub
mov
rcll
in
lods
dec
outsl
mov
dec
fstps
lcall
mov
sbb
add
add
add
inc
add
rcr
ds
push
in
add
jmp
add
xor
jmp
mov
cwtl
xchg
ficoml
addl
add
jmp
add
mov
lea
movsb
add
add
fistl
decl
into
jo
decl
mov
push
test
std
or
or
xchg
sub
jmp
mov
add
dec
addb
add
outsb
shr
hlt
mov
in
rol
add
add
lods
cli
cmpsb
add
add
add
mov
add
dec
push
jb
incl
add
dec
mov
add
out
outsl
mov
and
dec
addl
push
loopne
les
in
movl
and
ljmp
jb
lcall
add
add
push
add
add
push
or
pushl
push
xor
lcall
leave
out
popl
lea
inc
add
decl
xor
dec
call
fildl
add
movsb
add
std
outsb
mov
add
imul
mov
dec
adc
add
sbb
jno
pushl
pushl
jmp
daa
add
les
daa
add
adc
call
decl
in
stos
scas
cwtl
xchg
xchg
sub
les
inc
add
cmp
cmc
xchg
and
ljmp
add
loop
xor
call
add
xor
jl
bound
ljmp
xchg
in
and
pushl
add
mov
movsl
add
outsl
xlat
addb
pusha
add
scas
insl
sub
loop
sub
add
or
inc
add
in
add
jmp
jmp
lods
push
xor
incl
jae
cmp
decl
xchg
sub
test
in
jmp
adc
call
add
push
add
lods
into
lock
decl
add
add
test
mov
lcall
add
add
test
add
add
sbb
test
add
inc
add
jae
decl
pop
adc
add
lcall
add
add
push
std
or
add
push
nop
mov
mov
add
enter
shll
add
testb
adc
jmp
add
push
add
mov
push
add
push
add
insb
push
add
xchg
negb
inc
add
scas
icebp
sti
bnd
add
add
je
pushf
dec
lds
shll
fidivrs
lods
xchg
movsb
add
add
lods
cltd
out
rol
add
shll
aas
push
add
call
cltd
in
hlt
in
sarb
cld
adc
jmp
add
repnz
into
sbb
add
jp
aad
pop
movl
cltd
das
and
jg
add
mov
aam
add
sarb
sbb
add
rclb
add
pop
or
add
push
add
pop
add
jmp
jmp
jae
pushl
call
add
add
test
lock
lret
pushf
adc
fistps
pop
cs
push
cmpsb
add
jno
pushl
cmp
add
cmpsb
add
adc
pushl
pushl
or
add
les
arpl
jnp
sbb
fisubrs
call
add
outsb
xor
js
testb
add
mov
mov
add
inc
add
scas
jg
into
fidivs
mov
inc
add
add
jae
decl
add
inc
add
jns
jns
inc
add
inc
add
adc
jmp
into
addb
roll
add
sahf
sahf
inc
add
movsl
add
test
push
aam
int
lahf
and
stc
dec
pop
mov
in
scas
adc
pushl
decl
shrb
cmp
add
inc
add
add
dec
rolb
add
pop
push
pop
jg
in
xor
incl
ljmp
push
jb
call
mov
rcrl
testl
or
iret
lahf
out
out
pop
dec
mov
add
decl
es
cmp
lahf
sbb
int
add
hlt
pop
sbb
jne
into
mov
jp
xor
jmp
add
add
fwait
sbb
inc
add
add
mov
add
sbb
dec
dec
ja
sbb
fldl
add
stos
xor
push
add
dec
xor
lcall
push
add
and
dec
push
add
cmp
add
mov
jg
pop
lock
ljmp
xchg
pusha
add
mov
add
repnz
lcall
xor
jl
imul
jne
add
and
push
dec
loope
push
add
add
add
fs
movl
pop
lret
pop
popf
jecxz
loope
icebp
addb
adc
add
add
sbb
dec
ds
mov
push
add
nop
xor
pushl
add
xlat
inc
add
push
inc
add
add
mov
sti
jp
xchg
push
testl
std
shll
mov
add
loopne
ret
add
add
jb
stc
dec
pop
adc
stc
push
add
daa
add
fldt
loop
sub
mov
loopne
pop
pop
jno
decl
add
popf
mov
add
add
call
cmc
decl
psadbw
dec
imul
mov
push
iret
pop
push
daa
add
add
shl
into
adc
push
push
add
aaa
stc
lahf
test
lcall
add
cmp
outsb
adc
decl
mov
add
flds
add
and
adc
jmp
add
add
loopne
xor
cli
std
sahf
test
add
add
pop
sub
gs
sub
shrl
addl
add
dec
movsl
add
call
add
push
add
cmp
push
add
inc
add
sti
out
inc
add
in
push
xor
or
negb
ljmp
movsb
add
lds
sti
mov
add
ss
in
jmp
xor
call
icebp
faddp
add
add
xor
incl
xchg
add
scas
and
pushl
xor
call
add
jp
fistl
mov
jae
jmp
jmp
or
jo
jnp
leave
xchg
ja
pop
pop
rclb
add
shl
fisubl
dec
xor
dec
std
dec
aad
pop
ds
jl
add
jge
add
mov
dec
negl
incl
add
mov
mov
add
addl
mov
add
add
insb
hlt
inc
add
jp
addb
test
jmp
add
push
add
push
add
mov
mov
and
incl
or
roll
add
mov
add
ficomps
push
test
add
and
add
es
mov
int3
aam
add
aam
add
inc
add
idiv
xor
and
jmp
fimull
xchg
xchg
mov
decl
popf
loope
lock
add
xchg
or
add
arpl
lcall
out
mov
or
add
cli
lahf
jno
decl
ljmp
out
out
scas
clc
xor
std
jnp
ret
cmp
add
ret
add
jmp
repnz
lret
jmp
je
xchg
int
cmp
push
jnp
lock
test
test
ljmp
cmpsb
add
popf
in
std
lods
aaa
ret
add
add
cwtl
mov
decl
add
addl
lcall
and
incl
hlt
daa
add
pop
add
lret
xchg
jns
das
lahf
mov
js
xchg
xchg
ret
add
jmp
pop
jbe
push
add
fwait
jmp
or
lcall
inc
add
mov
negl
xor
incl
test
add
add
cltd
pop
add
jge
xor
dec
pop
or
sbb
lcall
cmp
jb
dec
sub
xchg
int3
or
incl
call
add
lcall
inc
add
roll
xchg
dec
sahf
cld
stos
stc
dec
pusha
add
cmp
aad
add
popf
pop
sbb
pop
push
adc
fistpl
in
aad
push
add
jge
test
push
inc
add
std
fucom
add
jmp
add
cmp
out
jl
out
jl
mov
sbb
clc
popl
or
call
add
pusha
add
add
mov
jmp
cmp
sahf
or
fidivrs
in
test
cli
outsl
mov
mov
arpl
ljmp
inc
add
fld1
inc
add
adc
call
imul
dec
inc
add
add
or
add
data16
add
lea
sbb
and
mov
add
cmp
data16
pop
movsb
add
add
add
add
add
jl
add
roll
cmp
rolb
add
scas
fadds
jmp
add
idivb
xchg
data16
test
mov
in
cli
movsl
add
add
and
pushl
decl
cld
cmp
or
sub
decl
jne
add
or
pop
add
add
add
inc
add
filds
add
ja
mov
add
dec
popa
add
pop
adc
ljmp
or
lret
sti
test
decl
inc
add
insl
sbb
add
push
add
mov
add
add
int3
mov
xchg
data16
decl
or
mov
add
pop
lret
mov
add
inc
add
add
faddp
add
add
xor
incl
add
lret
xor
div
into
cmp
push
dec
enter
mov
ss
add
push
add
or
pop
mov
jmp
ljmp
test
scas
test
aad
cmpsl
add
addb
movl
add
jmp
xor
ljmp
decl
scas
std
pop
pop
addl
mov
js
xor
lcall
add
mov
adc
add
xchg
call
lcall
add
inc
add
inc
add
jnp
das
mov
mov
pushl
call
cmpsb
add
mov
mov
push
fcmovu
or
sub
jae
lcall
pop
fscale
lret
and
clc
inc
add
xor
dec
sbb
add
sti
notl
add
popa
add
cmc
pop
inc
add
add
pop
lods
inc
add
insb
sti
and
std
adc
pushl
call
mov
inc
add
push
add
and
xchg
or
add
out
jo
jmp
add
add
add
jbe
mov
mov
push
add
enter
add
add
jo
lcall
add
and
dec
inc
add
push
add
inc
add
xor
ljmp
bound
decl
add
mov
lods
sbb
ds
fisubrs
cmp
mov
loop
push
push
add
pop
stos
aad
and
cmp
add
lcall
sbb
add
in
test
mov
fadds
add
in
cmp
pop
xlat
push
loopne
mov
jo
inc
add
or
push
add
jg
push
sbb
shlb
add
add
jb
lcall
mov
setb
lods
sbb
lcall
fcmovnb
add
push
das
and
movb
add
inc
add
ljmp
mov
ret
add
push
loop
pop
je
inc
add
incl
add
filds
xchg
xor
inc
add
pop
and
dec
cmp
test
mov
dec
insb
dec
and
incl
add
lods
cmp
aam
adc
dec
inc
add
add
sbb
out
loope
and
pushl
jecxz
jne
mov
std
sbb
inc
add
mov
add
pop
cvttps2pi
push
add
push
fistl
xchg
adc
push
push
ljmp
add
add
add
test
mov
add
roll
add
sub
fcomip
negl
mov
aad
add
add
push
sub
sub
lcall
push
mov
push
add
mov
add
test
jp
popf
insb
fdiv
or
add
ret
add
lea
repz
decl
sub
shlb
add
pop
add
xor
jmp
cmp
ljmp
and
pushl
add
and
lcall
sub
add
xchg
push
dec
jo
jmp
add
jge
das
xor
jmp
add
add
icebp
out
mov
hlt
movb
add
add
jl
add
jle
std
mov
add
mov
xchg
aas
rcrb
mov
pop
add
fucomi
sub
add
add
call
jmp
call
into
fisubs
aad
nop
mov
stc
cwtl
sub
scas
lea
fcmovb
add
and
mov
add
call
test
popa
add
xor
decl
movsb
add
outsb
cs
add
cmpps
add
sub
aam
add
add
clc
aad
add
call
add
pop
xchg
push
lea
cmp
push
add
out
out
mov
fwait
add
pushl
or
mov
cmp
add
sub
sub
add
mov
or
xchg
add
fisubrs
pavgw
je
add
nop
and
call
add
add
dec
mov
add
mov
js
test
push
add
pushf
sbb
addl
add
xor
imul
mov
jmp
or
sbb
xor
call
movsb
add
add
addl
add
push
int3
pusha
add
addb
add
ss
cmp
add
test
add
add
sbb
pop
or
add
push
xchg
movb
xor
pop
and
scas
shrl
add
mov
cmp
inc
add
push
xor
decl
jg
add
cltd
sub
push
add
xor
decl
mov
add
add
lcall
loope
jg
add
loop
sub
call
or
pushf
movb
add
std
cmp
jnp
jno
incl
add
nop
aas
mov
popa
add
lret
push
add
push
add
inc
add
les
fstpt
das
adc
lcall
add
fcos
icebp
xchg
lea
lea
xchg
loop
push
add
sub
add
mov
and
pushl
add
mov
mov
call
add
pop
add
jmp
mov
int
add
add
add
add
sub
lret
add
lds
mov
sub
lcall
add
jnp
inc
add
cmp
fsubp
add
test
roll
add
inc
add
rorl
mov
mov
sti
cltd
lods
mov
das
adc
call
add
mov
dec
mov
inc
add
pushf
cwtl
mov
add
jmp
add
add
in
dec
pop
adc
jmp
jle
push
push
add
ljmp
lock
mov
add
cmc
lahf
push
cmp
pop
cwtl
xor
lcall
imul
jb
decl
xchg
mov
add
add
fistpl
or
repz
add
jae
cmp
mov
add
outsb
ljmp
pop
or
mov
lds
push
add
inc
add
ljmp
sub
sbb
add
mov
addl
and
xchg
aas
lock
rolb
les
add
mov
movl
xor
mov
mov
addb
add
addl
add
lds
addl
bound
dec
fnstenv
pop
jp
test
loopne
sbb
lea
lods
push
push
iret
cwtl
js
filds
pushl
add
adc
lcall
incl
add
push
add
and
cmp
xchg
adc
add
add
sub
mov
push
hlt
pop
add
jae
incl
add
loope
data16
add
add
add
and
mov
jg
std
movsl
add
mov
xchg
les
addb
movsl
add
testb
lcall
add
dec
or
test
cmp
cmp
add
pop
dec
inc
add
negl
cmp
in
and
mov
ror
mov
push
enter
push
or
or
xchg
out
lods
pop
cli
outsb
pop
mov
add
test
inc
add
shll
add
popf
push
insb
pop
lret
cmp
add
sub
addb
cmp
add
lcall
clc
mov
add
xchg
jnp
sbb
jp
inc
add
mov
xchg
shrl
int3
inc
add
xor
lcall
sub
add
jae
incl
decl
in
out
push
add
jo
call
in
sub
inc
add
dec
nop
std
cltd
lock
lcall
fwait
add
jmp
add
jo
mov
pushf
mov
sbb
dec
test
lea
add
decl
dec
nop
bound
jmp
add
or
add
outsb
ss
sub
xchg
fdivrs
or
mov
add
jns
scas
movsl
add
insl
movb
add
mov
cmp
mov
and
incl
adc
call
dec
test
imul
inc
add
xchg
fldcw
mov
add
insb
cmp
pop
inc
add
rcr
ret
mov
add
movb
fnstenv
add
jnp
add
and
pushf
int
add
adc
cli
mov
jge
sbb
lods
add
call
push
add
cmp
cld
scas
gs
xchg
in
cwtl
mov
add
lahf
xor
call
fs
add
rolb
pop
cmpsl
add
mov
add
mov
xchg
int3
mov
add
popa
add
add
adc
dec
aaa
mov
cmp
movl
fildll
icebp
aas
mov
aas
test
out
mov
mov
roll
add
les
lods
add
inc
add
and
lret
cld
pushf
out
mov
fistpl
jae
incl
add
into
aas
dec
adc
lcall
dec
push
lret
add
adc
cmpsb
add
jle
add
jp
add
sbb
sub
jp
and
add
add
mov
sarl
lds
add
inc
add
mov
pop
pop
sbb
xchg
je
pop
jecxz
adc
add
lcall
out
mov
xchg
pop
cs
add
and
stos
jl
add
add
jmp
jmp
add
fisubl
incl
mov
roll
xchg
movb
dec
mov
cmp
in
adc
pushl
cld
lcall
shl
add
enter
sub
js
inc
add
add
dec
daa
add
add
dec
aaa
negb
and
lcall
repnz
add
add
mov
in
fisubrs
jbe
add
xchg
pop
cmp
mov
add
sub
push
addl
and
dec
loop
push
xchg
sarb
sub
sub
lcall
jle
pushf
call
sbb
xor
pushl
loop
scas
outsl
mov
incl
xchg
pop
ja
add
icebp
or
jge
xor
pushl
mov
cld
test
push
or
movl
ret
add
insl
in
in
fistpll
test
xchg
out
push
add
decl
add
mov
insb
flds
add
inc
add
cwtl
and
incl
jmp
ljmp
dec
dec
paddusb
lcall
add
insl
pop
mov
in
mov
xor
fucomp
pop
in
sub
push
and
decl
xchg
cli
jne
add
clc
dec
rolb
inc
add
ret
add
xchg
pop
movl
inc
add
xchg
mov
add
mov
mov
fcmovb
add
out
and
pushl
call
jnp
mov
add
lcall
cld
mov
add
push
cmpsl
add
movzbl
inc
add
call
lcall
add
sbb
int
add
in
mov
jecxz
sarb
lret
add
add
adc
mov
add
add
decl
add
mov
aam
mov
add
xchg
addb
inc
add
repnz
xchg
addb
lds
mov
sbb
add
jmp
add
sbb
add
repnz
cmp
ret
add
add
or
jmp
add
lds
ss
cmp
add
add
mov
inc
add
add
lcall
inc
add
add
add
cmpsl
add
add
clc
add
add
das
xchg
cmp
pop
gs
inc
add
inc
add
aas
mov
sbb
inc
add
add
add
mov
mov
addl
add
lods
arpl
pushl
add
ja
sahf
pop
out
out
mov
add
xchg
adc
js
add
and
roll
add
push
jle,pn
ss
add
daa
add
add
xchg
jg
mov
movl
stos
or
add
add
jl
add
add
mov
mov
add
add
and
incl
add
xor
jb
aas
out
into
lret
add
jle
add
loop
jecxz
sbb
inc
add
cmp
dec
adc
cmp
incl
add
xor
call
pusha
add
pushf
inc
add
mov
mov
add
jno
inc
add
add
pop
sbb
sbb
stos
js
fldt
icebp
sbb
push
dec
loop
xchg
psubsw
add
pop
rclb
add
inc
add
jecxz
fidivrl
add
add
fldl
add
es
add
add
xor
inc
add
pop
mov
mov
add
add
mov
add
push
push
in
and
mov
decl
xchg
push
fnstsw
movl
push
add
mov
lcall
pushl
nop
roll
add
push
in
mov
add
lea
add
addb
daa
add
add
add
sbb
dec
cmp
mov
add
xor
sti
daa
add
jecxz
jle
add
jmp
add
ljmp
pop
sahf
or
int
add
test
es
ds
or
cli
add
repnz
mov
decl
xchg
pop
cmp
movl
add
jg
out
pop
imul
add
adc
jnp
xor
jmp
push
add
inc
add
push
add
test
add
jmp
sbb
pop
push
shrb
lret
stos
push
mov
out
push
jmp
xchg
not
cld
push
jle
xchg
jno
pushl
push
add
lods
mov
daa
add
add
or
mov
jge
add
aam
and
call
incl
add
add
jmp
add
inc
add
add
pushl
add
rolb
sub
icebp
add
pushl
fstl
cmpsb
add
xchg
pushf
mov
cs
ljmp
psrld
add
rorb
jae
lcall
inc
add
fwait
outsl
cs
jecxz
mov
sbb
sysret
add
lods
dec
push
cwtl
adc
fildl
add
int3
sbb
cwtl
mov
or
decl
add
push
mov
aas
sub
sbb
add
loop
into
pop
inc
add
adc
jmp
pushl
xchg
movq
add
stc
dec
jae
jl
loopne
lds
loop
jge
out
jnp
addb
sbb
mov
push
add
jp
lret
lret
inc
add
add
pushl
fsubp
add
add
addl
popf
imul
lcall
add
add
sub
or
pushf
aam
fistpl
adc
cmpsl
add
negl
lds
add
mov
add
call
add
pushl
or
pop
movsb
add
repnz
add
add
daa
add
pop
fildl
addl
mov
sbb
mov
daa
add
jp
add
loope
pop
add
ds
loop
cmp
aad
es
cmp
scas
xchg
xchg
mov
dec
ret
addb
add
mov
add
xor
decl
add
add
cmp
dec
stos
mov
add
loop
call
daa
add
xchg
and
aam
rolb
add
xchg
in
sbb
add
shl
jb
pushl
stos
jecxz
add
