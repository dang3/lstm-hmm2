stos
std
loope
push
add
sahf
roll
rol
add
roll
shll
cmpsb
add
xor
xchg
inc
add
push
inc
xor
add
add
inc
mov
xchg
add
mov
xor
and
testb
xchg
jle
add
mov
mov
add
push
sub
add
adc
jno
dec
add
xchg
lds
jge
out
jmp
hlt
add
add
add
add
mov
js
add
repz
cmc
enter
int3
mov
sbb
dec
fcoms
lcall
pusha
add
adc
add
stc
and
test
data16
pushf
aam
jmp
out
add
pop
int
add
jg
add
insb
test
or
add
ja
cmp
xor
mov
jl
jmp
add
loope
mov
call
lret
jb
mov
add
mov
sub
or
add
add
add
ret
jmp
add
icebp
in
out
pop
sub
jmp
push
sub
cmp
imul
cmp
xor
fidivs
dec
notl
push
add
rorl
std
cmp
add
add
movsl
inc
cli
pop
dec
loop
dec
sub
mov
out
lds
dec
rcll
scas
fisubl
add
push
add
inc
add
stos
test
add
sti
popa
stos
insb
sub
sbb
bound
mov
add
add
aaa
aam
or
int3
cmp
inc
inc
add
cmp
rcll
aam
hlt
add
filds
mov
add
add
lods
jo
xchg
add
cmp
add
add
pop
sti
dec
rol
arpl
fwait
cltd
mov
fwait
inc
xor
xor
add
mov
cmc
outsb
frstor
jbe
je
mov
lods
stc
mov
or
stos
fcoms
jl
ljmp
les
adc
add
push
add
add
mov
pop
in
add
sbb
inc
add
push
movsb
add
add
mov
hlt
add
add
add
add
xor
pop
dec
in
into
xchg
add
mov
adc
mov
testb
adc
add
add
add
add
scas
or
loope
add
jmp
or
int3
cmpsl
rolb
idivl
dec
dec
cmp
and
dec
mov
jmp
popa
cmc
addl
loop
xchg
lahf
add
mov
xor
insl
push
add
mov
cmp
mov
testb
and
mov
stc
lea
sub
inc
out
add
fsubrl
add
call
mov
mov
push
add
add
aam
mov
lahf
nop
add
jp
mov
push
add
cs
jecxz
add
or
add
jmp
data16
movsl
inc
add
popf
xorl
loop
mov
lcall
sub
pop
dec
dec
jp
inc
lods
lock
push
bound
mov
push
sub
add
mov
lds
clc
data16
sub
add
add
stos
data16
mov
stc
adc
ret
xchg
icebp
and
jnp
add
aaa
add
in
jl
test
push
add
rolb
aam
sbb
mov
leave
xchg
xchg
cltd
mov
mov
add
test
mov
add
popf
sbb
popf
push
add
mov
movsb
add
fildll
mov
push
add
add
jle
fbld
xor
fwait
dec
mov
movsl
adc
mov
scas
mov
add
add
cmp
clc
das
addb
dec
cli
arpl
sub
insl
mov
add
out
jae
cwtl
inc
add
cmp
add
cmpsb
add
aad
add
jb
outsb
sbb
add
jns
add
dec
in
daa
loope
add
hlt
add
fisubrs
or
push
add
test
out
insl
and
add
jle
fcmovb
add
add
testl
sub
dec
mov
fisubl
mov
add
cmp
test
mov
fdivr
fsubs
addr16
mov
imul
mov
pop
pop
in
popf
paddsb
mov
inc
add
loopne
sub
mov
mov
dec
or
add
nop
add
jg
addb
add
mov
das
lret
jp
ret
jb
arpl
add
mov
jnp
stos
push
ljmp
sub
dec
sub
cmp
add
mov
add
fildll
sub
add
mov
push
jle
add
mov
sub
jecxz
rolb
xor
sahf
rolb
mov
jns
add
xor
int3
or
mov
or
addb
add
sbb
shll
call
add
jp
dec
test
inc
add
xchg
testb
add
in
cs
or
ret
add
cli
and
lock
add
add
ds
aas
mov
in
aaa
cs
int3
pop
pop
xchg
push
add
out
fwait
psrld
xor
pop
xor
xchg
test
data16
add
add
loopne
repz
and
mov
adc
xchg
push
dec
sub
lods
xchg
add
hlt
add
js
and
mov
stc
pop
stc
insl
and
mov
push
inc
add
cmp
add
add
bound
mov
push
cmp
add
add
adc
les
jge
outsb
lahf
inc
add
or
or
hlt
add
mov
mov
jge
rolb
pand
mov
mov
and
add
adc
test
mov
adc
into
test
js
fsubl
add
daa
pop
xchg
jp
add
jecxz
test
mov
jl
adc
out
dec
sbb
call
add
xchg
rolb
in
lret
sbb
test
bound
mov
orl
mov
jge
or
mov
inc
test
add
enter
add
pop
and
xor
inc
data16
shrl
xor
sub
pop
jge
add
into
sti
test
out
push
add
add
push
add
xor
dec
xchg
add
add
test
cwtl
xor
or
jb
or
add
lret
loope
nop
add
pop
jno
jle
fldcw
cmp
dec
push
daa
rcll
or
mov
in
outsl
fsubrl
movb
cmpsl
push
or
bound
mov
out
int3
loop
mov
add
sub
mov
mov
pshufw
add
lods
pop
xchg
add
add
mov
add
add
pop
jne
adc
push
add
push
dec
out
scas
fistps
mov
imul
fwait
aad
add
xchg
in
dec
mov
mov
add
add
mov
outsl
and
mov
add
add
jo
dec
das
push
test
mov
jae
jno
inc
add
add
add
add
add
iret
jle
fcmove
pop
mov
js
movsb
add
xchg
add
xchg
jmp
cmp
and
mov
std
xchg
xchg
cmp
int3
jge
cmc
xlat
stos
imul
addr16
cmp
xor
ja
and
mov
cmp
cmp
dec
clc
hlt
add
pop
pop
aad
add
nop
add
jnp
jmp
add
inc
add
sub
push
jg
add
pop
cmpsb
add
pop
push
aaa
mov
xor
push
mov
mov
sti
xchg
cmpsl
insl
data16
jmp
sub
addb
in
add
les
or
add
lahf
fisubrs
add
dec
xor
add
mov
ja
test
add
lahf
mov
pandn
bound
mov
add
lahf
cltd
loopne
mov
push
loope
movsb
add
cli
mov
fmul
addr16
push
nop
add
jne
pop
jnp
mov
loop
or
in
add
jg
rolb
pop
fld
add
mov
aaa
jae
outsl
fstpt
add
add
scas
push
add
inc
call
in
gs
add
dec
movb
stos
ss
jbe
rolb
xchg
cmp
inc
add
jl
movb
les
test
inc
add
add
daa
adc
xor
add
jno
cli
xor
lret
add
add
sub
add
ja
mov
push
lea
out
fadds
pop
adc
fdivrl
and
mov
ljmp
add
rolb
daa
ljmp
lds
data16
xor
pop
push
rolb
testb
push
cmp
sub
lea
into
add
lods
bound
mov
add
int
jmp
add
popf
xchg
add
add
add
mov
jb
mov
cwtl
daa
sbb
add
add
inc
pop
int
xlat
bound
mov
addb
in
in
popa
in
mov
jle
add
cmpsb
add
or
ret
xlat
xor
int3
push
test
pop
ret
or
jecxz
mov
push
add
add
or
inc
mov
add
cmpsb
add
jecxz
sbb
xchg
scas
cmp
push
cli
mov
add
aam
xchg
insb
mov
add
jl
cmp
add
add
test
cmp
inc
ret
add
mov
bound
mov
test
movb
daa
xchg
scas
add
mov
add
add
sub
push
enter
push
add
add
add
mov
popf
imul
add
push
add
add
out
aad
inc
fsubl
jae
das
sub
enter
lods
sahf
push
add
mov
mov
add
add
mov
or
pop
cld
mov
mov
add
and
mov
xchg
les
in
xor
push
cmp
cmp
jo
scas
jae
mov
fsubl
mov
add
cmp
add
pop
test
xchg
subl
stos
int
movb
rolb
jne
adc
add
add
push
movsb
add
out
mov
outsl
cmp
pop
mov
cld
add
in
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
cs
es
call
test
jne
jmp
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
add
mov
add
test
xchg
cmp
das
dec
fs
xchg
add
mov
jae
dec
cmpsl
inc
in
sub
movb
dec
inc
or
cmp
add
je
mov
add
pop
sbb
scas
xor
and
mov
and
mov
inc
add
mov
add
xchg
add
push
mov
mov
add
mov
push
add
pop
test
addb
add
add
mov
rol
add
sub
lret
mov
aaa
pop
shr
mov
add
addr16
leave
and
stos
mov
jo
push
inc
add
cmpsl
jbe
addb
add
add
jb
mov
lea
cmp
xchg
add
sbb
pop
dec
cmc
pop
jae
jb
decb
movsl
js
mov
cmpsb
add
inc
shl
rcll
daa
addb
jmp
into
jne
add
sub
jne
in
adc
xchg
add
mov
add
cmc
je
xor
xor
pushf
fwait
xchg
cmpsb
add
add
pop
imul
mov
in
dec
addr16
sub
add
add
shll
mov
xchg
lahf
test
aas
aas
sub
lret
mov
and
bound
mov
cmp
xchg
add
sbb
mov
add
push
add
sub
xor
xchg
add
jns
add
add
cwtl
movsl
loope
sti
aaa
push
pop
xor
fstl
add
pop
mov
jb
arpl
imul
out
mov
add
femms
xchg
test
pop
nop
add
cmp
pop
iret
cmp
add
adc
rolb
fildl
or
add
mov
cmpsb
add
add
incl
jle
rolb
daa
lret
lret
dec
jb
cmp
push
add
ljmp
mov
mov
inc
movb
jp
aad
add
aaa
fistpl
testb
xor
push
or
inc
repnz
movsb
add
sub
add
adc
mov
dec
xchg
add
mov
scas
insl
push
push
xor
jo
lock
xchg
add
data16
test
cmp
out
jmp
jns
ret
add
pop
xor
rcl
add
loopne
lods
adc
and
jl
jg
mov
pop
xor
fisttpl
lret
dec
add
mov
out
mov
mov
stos
dec
sahf
data16
gs
fstpt
jnp
or
add
das
or
add
add
daa
mov
pop
xchg
hlt
add
stc
ja
push
sub
push
scas
bswap
in
icebp
repnz
shl
add
lret
and
lahf
inc
aaa
add
mov
add
popf
mov
dec
out
add
jbe
js
addb
add
xchg
daa
std
pop
fstp
xor
mov
add
pop
pop
and
mov
or
add
and
or
pop
int
add
fsubrs
test
mov
add
push
add
gs
out
dec
mov
adc
pop
out
adc
add
cmp
mov
and
pop
pop
and
mov
cmc
out
adc
fs
add
xchg
mov
mov
add
mov
loopne
repz
and
mov
roll
insl
sbb
mov
mov
or
mov
add
or
addl
pop
pop
xor
add
out
fdiv
add
jae
add
xchg
aaa
and
jns
add
cmp
frstor
lret
push
add
mov
push
mov
sbb
add
mov
mov
add
add
add
add
pop
push
data16
jle
data16
add
cltd
imul
push
sbb
mov
add
mov
push
rcll
or
add
mov
add
adc
js
cld
jle
dec
test
cmc
mov
pop
pop
pop
repnz
add
xchg
dec
ret
rolb
out
xor
or
push
add
and
mov
add
flds
jg
cmp
sub
add
add
test
add
add
xchg
jns
pushf
aad
add
dec
clc
jne
add
dec
dec
adc
adc
push
add
sbb
xor
fwait
pop
cwtl
ret
add
aam
bound
mov
fiaddl
pop
mov
pop
mov
xchg
add
mov
add
sbb
add
inc
push
add
mov
add
pop
mov
xchg
add
xor
pop
cmp
add
fisttps
aaa
mov
fwait
pop
jne
les
outsb
pop
test
popf
xor
add
outsb
lea
lods
adc
pusha
add
adc
add
add
add
ret
and
xor
pop
mov
and
cmp
fsubl
data16
loopne
mov
ljmp
or
addr16
data16
jne
sbb
add
add
mov
push
add
out
sbb
out
bound
mov
add
cmp
add
mov
add
es
cmpsl
in
cmp
add
xor
sahf
mov
add
add
push
add
mov
cmpsl
xchg
cli
frstor
inc
add
lret
movsl
sahf
daa
and
jge
insl
jecxz
rcrl
movb
add
add
add
and
mov
fisubl
testb
dec
mov
pop
mov
sbb
add
xchg
pop
mov
stos
pop
dec
xor
sti
jp
add
add
mov
mov
out
fcompl
pop
sbb
lods
mov
add
lret
push
add
incl
xlat
loop
lock
push
pop
inc
add
out
sub
cs
movsb
add
add
rolb
inc
lods
cltd
xchg
mov
aad
add
sbb
add
std
mov
cmc
or
or
mov
add
jb
pop
in
aad
cmp
add
cmp
or
add
xlat
out
add
adc
add
dec
jo
scas
frstor
cmp
and
add
call
pusha
add
test
add
mov
aas
inc
data16
xor
xor
mov
add
cmp
mov
out
das
push
ret
add
add
lcall
in
cmc
cli
sub
add
jecxz
add
fisttpll
bound
mov
insb
aaa
stc
adc
jle
add
pushf
mull
mov
mov
mov
sbb
aas
dec
and
jae
add
add
push
imul
add
add
int3
insl
stc
dec
or
popa
sbb
add
sbb
add
mov
std
hlt
add
xor
leave
inc
add
out
add
rolb
cli
add
add
dec
dec
add
mov
je
lods
nop
add
jnp
repz
loop
pop
sbb
add
rorl
add
push
add
add
add
pop
jge
clc
adc
fisubrl
and
cli
mov
add
add
add
jno
into
add
cmp
outsb
insb
stos
inc
add
enter
push
add
add
push
jge
jbe
inc
outsb
inc
rolb
and
mov
add
loope
or
dec
push
mov
add
and
call
mov
leave
mov
jmp
aas
jb
adc
and
xor
push
int
sti
xchg
testb
jne
fists
or
add
add
lods
je
icebp
cmc
sahf
and
mov
in
mov
mov
rolb
mov
xchg
push
add
add
lret
jnp
inc
add
movsb
add
mov
cmp
ficomps
add
insb
xlat
pop
popf
mov
lds
add
ss
cmpsb
add
and
add
mov
add
add
ret
add
lahf
dec
or
cmp
push
xchg
adc
push
xor
jb
movsb
add
xchg
dec
push
cs
addb
rolb
add
and
mov
add
addb
xchg
cltd
cmp
jmp
mov
call
add
add
mov
addb
jae
clc
cwtl
jp
add
aas
mov
mov
enter
testb
dec
or
inc
and
mov
lods
jns
add
mov
and
pop
jge
popa
lret
cwtl
ret
dec
mov
and
mov
add
cs
in
sbb
add
sub
inc
cmp
loop
in
pop
add
add
cmp
jecxz
add
cli
call
pop
jg
add
inc
add
add
lea
ja
add
scas
mov
cwtl
jge
stc
mov
mov
add
inc
add
add
inc
add
les
pushf
sub
jecxz
testb
sti
mov
jle
lods
jecxz
addb
add
add
rorl
xchg
mov
jne
cmp
add
add
jnp
ret
test
andl
rcrl
and
mov
loop
mov
add
adc
mov
cmp
add
mov
lret
mov
mov
lcall
push
add
add
aas
cmp
rolb
mov
and
add
dec
imul
sbb
mov
add
faddl
add
jl
sub
sub
adc
add
add
and
mov
lds
inc
add
mov
add
push
add
push
lea
into
mov
mov
les
insl
enter
add
in
testb
cmp
ficomps
xchg
imul
sti
pop
stos
outsb
mov
leave
cltd
pop
mov
pop
cld
add
dec
cli
outsl
push
out
ret
outsl
sub
jge
dec
adc
in
mov
loop
ja
mov
inc
add
and
pop
mov
push
add
mov
lahf
sub
cmc
pop
push
add
add
dec
enter
and
push
add
jne
ret
adcl
testb
scas
ljmp
testb
add
imul
mov
sub
leave
push
push
add
lods
sbb
xchg
sub
in
or
add
mov
fld
add
pop
fbld
mov
mov
sbb
add
jp
add
dec
adc
xor
push
or
mov
mov
cmpsl
out
cmpl
cmc
lock
sbb
jle
jmp
in
sti
in
or
add
add
in
clc
adc
cmpsb
add
loope
pop
pushl
rorl
cmp
add
jno
jb
outsl
mov
cmp
pop
pop
dec
mov
cmp
adc
inc
mov
add
inc
pop
sub
mov
jno
mov
movsb
add
inc
mov
add
dec
xor
orl
add
push
pushf
jge
lock
or
add
mov
scas
cs
into
stos
pop
js
jp
add
divl
clc
insb
rolb
loop
sbb
mov
push
pop
pop
sbb
dec
movl
pop
bound
mov
popf
push
xchg
jo
cmpsl
arpl
inc
add
nop
mov
mov
mov
adc
jns
ret
pop
and
mov
add
mov
pop
jl
scas
sub
mov
xchg
xchg
or
fsubs
push
jp
lret
lods
icebp
pop
push
add
or
shll
sar
testl
push
rolb
sahf
loope
lea
adc
add
inc
add
add
dec
sarl
in
sahf
xor
add
xchg
add
add
data16
and
sbb
addr16
sub
mov
jbe
les
xchg
test
movsl
in
inc
xchg
mov
mov
add
cwtl
and
mov
pop
mov
fldenv
cmpsl
fistpll
call
add
xchg
fdivl
mov
add
pop
scas
imul
shll
mov
add
add
mov
mov
mov
pavgb
adc
rcrl
mov
add
adc
clc
push
add
jmp
fcom
inc
into
pop
addb
add
pushf
pop
mov
mov
dec
mov
mov
call
data16
popa
test
adc
sbb
ret
jno
add
pop
movb
cmp
repz
cld
dec
mov
mov
testb
dec
push
add
cmp
add
das
ret
adc
mov
cmp
mov
xchg
add
scas
adc
dec
and
mov
sbb
pop
xchg
in
or
add
test
add
push
and
mov
mov
xor
add
jne
mov
mov
xor
pop
push
add
enter
push
sbb
adc
std
hlt
add
mov
lods
cmp
add
xor
cmc
and
mov
add
sbb
pop
sbb
pusha
add
cld
outsb
nop
add
lds
xchg
sbb
add
push
add
xor
enter
popa
xchg
add
sarl
mov
pusha
add
or
das
mov
rolb
fxch
cmc
mov
into
mov
push
add
data16
jmp
fs
xor
call
add
xchg
test
xchg
add
sbb
add
and
mov
push
add
repz
mov
rolb
enter
dec
jb
das
push
and
add
add
outsl
das
pop
stc
lock
add
add
daa
mov
xchg
add
in
mov
add
add
add
out
xlat
cs
sub
add
je
mov
inc
add
and
add
mov
add
add
repnz
add
fimull
insl
sbb
sub
ret
lahf
lock
outsb
pop
jp
in
dec
mov
add
adc
push
nopl
rolb
adc
add
rcrl
imul
cmp
cmpsb
add
daa
or
test
cmpsl
adc
test
add
add
add
aam
mov
loope
add
add
jmp
mov
adc
dec
ss
dec
leave
push
add
mov
add
add
add
add
aaa
call
xor
add
add
xchg
add
mov
arpl
dec
jb
rolb
sbb
mov
leave
lock
xor
inc
mov
add
mov
add
mov
add
inc
add
dec
pop
add
mov
outsb
fsubr
rorl
add
or
mov
dec
fdivl
ret
add
mov
add
cwtl
testb
roll
add
call
cmp
add
add
add
add
add
add
push
add
add
cmpsl
ja
push
add
dec
xchg
notl
add
dec
jnp
mov
pop
gs
pop
adc
adc
add
or
jne
xor
popa
stos
xchg
enter
add
pushf
dec
add
adc
call
les
pop
in
lcall
cltd
je
xlat
je
xor
add
jnp
arpl
into
push
adc
lret
cmp
mov
fwait
inc
add
mov
mov
fimuls
pcmpeqb
pop
sbb
add
mov
mov
mov
lcall
cmpsb
add
daa
sbb
shrl
push
jb
or
dec
xor
call
add
pavgw
dec
add
lock
popa
out
xlat
sbb
cmp
repnz
call
add
add
mov
cld
ret
add
add
addb
mov
cmp
jns
aas
daa
mov
and
fs
data16
enter
sti
rcrl
mov
icebp
jno
add
fnstenv
add
push
daa
xor
add
lret
add
mov
pop
test
add
lea
movsb
add
add
cwtl
test
mov
push
cld
and
mov
ret
add
add
add
xchg
int
addb
cmpsb
add
popa
and
repz
add
dec
out
outsb
bound
mov
jl
cltd
out
lods
shl
add
xor
iret
jo
ficomps
cs
add
add
inc
add
add
add
add
mov
jl
clc
xor
mov
mov
push
cmp
lods
mov
stos
xor
and
stc
xchg
repz
sub
leave
iret
bound
mov
add
xor
dec
scas
mov
in
dec
lock
pop
jo
mov
add
mov
leave
push
mov
mov
add
repz
int
dec
sbb
jp
add
mov
std
in
push
in
xchg
mov
add
hlt
add
cltd
int
pop
mov
mov
je
roll
xor
mov
jno
add
mov
jo
or
xchg
rolb
cmp
add
inc
or
add
mov
popf
jns
ficoms
out
add
inc
add
movsl
dec
or
scas
adc
cs
pop
xor
mov
jp
add
cmp
cmpsl
cwtl
dec
jae
pop
push
add
add
les
mov
inc
rolb
and
jg
rolb
add
sbb
cli
add
test
jl
pop
push
dec
xchg
xchg
repnz
push
add
add
mov
fsubs
add
mov
add
xor
lea
mov
cld
fs
push
push
fildl
fimuls
fisubl
add
dec
mov
jmp
pop
mov
or
add
mov
and
mov
pop
mov
movsb
add
aaa
aam
arpl
repz
fdiv
add
add
sbb
subl
dec
jmp
add
and
pop
in
pop
rep
out
mov
add
push
add
aaa
lret
dec
xchg
pop
hlt
add
xchg
jns
repnz
sbb
add
gs
mov
add
gs
lret
sub
add
cmpsb
add
cmp
test
add
in
loop
cltd
xchg
lock
jo
testb
jp
cmpsl
sub
add
cltd
jmp
ds
sub
add
add
sub
jb
add
mov
clc
test
das
pushf
xor
daa
mov
mov
or
sbb
fldcw
addb
mov
add
movsb
add
add
xchg
mov
add
push
add
sbb
int
mov
sbb
pop
addb
icebp
add
mov
push
pop
and
out
pop
fiaddl
je
iret
mov
push
test
sbb
and
enter
jle
push
add
jecxz
add
nop
add
mov
xor
or
add
test
sub
add
add
call
mov
add
ret
add
mov
test
outsl
repnz
xchg
add
std
icebp
lods
in
loopne
pop
les
leave
cwtl
or
or
add
in
add
xor
add
xor
jns
and
jne
in
dec
inc
add
xchg
rolb
repz
insl
roll
and
add
or
arpl
cmpsl
rolb
add
arpl
popl
cmp
adc
inc
clc
push
add
add
testb
mov
add
into
mov
dec
cwtl
push
mov
testb
sbb
push
clc
and
mov
or
add
mov
aam
aam
rolb
hlt
add
add
or
test
mov
ljmp
jp
iret
pusha
add
add
add
sahf
sbb
cmp
pop
push
sub
in
mov
adc
add
pop
aam
add
add
add
movb
lret
or
add
add
stos
dec
mov
add
jmp
jg
leave
push
dec
arpl
ja
movb
dec
and
add
push
or
or
add
push
and
add
int3
addb
movsb
add
xchg
sub
add
or
out
add
imul
xlat
push
add
lods
pop
ljmp
clc
enter
add
popa
mov
add
mov
add
sub
dec
stc
rolb
and
jl
inc
add
add
mov
add
fsts
sbb
add
sbb
pop
xchg
add
add
or
add
add
adc
sub
add
repnz
stc
xor
sbb
add
mov
add
scas
lea
inc
pop
dec
xchg
scas
lahf
and
mov
rolb
jmp
mov
loope
cmp
cmp
sbb
mov
and
mov
jns
add
mov
ja
add
inc
push
add
xor
cmp
lods
mov
push
pusha
add
add
jb
cmc
testb
ret
lods
jl
pop
adc
mov
cmpsb
add
add
add
pop
rolb
hlt
add
cmp
enter
pop
push
add
ds
fdivr
xchg
ja
outsb
push
dec
test
sti
add
adc
mov
lock
fnstcw
lods
xlat
rolb
xchg
out
je
sbb
add
out
lea
mov
leave
pop
or
xor
push
add
cmp
mov
dec
out
movb
sbb
push
add
outsb
add
xchg
fstps
in
sub
data16
rep
icebp
add
mov
inc
das
xchg
sub
add
add
add
mov
in
lea
or
add
frndint
pop
xchg
add
repnz
add
add
add
rcr
cltd
repnz
sbb
rolb
popa
sub
cmp
add
add
iret
repz
into
mov
adc
je
testb
stos
inc
pop
push
add
jmp
ret
filds
adc
sbb
adc
mov
repnz
adc
rolb
insl
xchg
jbe
xchg
dec
lock
bound
mov
inc
add
mov
add
or
int3
jl
add
or
push
icebp
lahf
ret
add
lds
adc
lcall
cmc
add
add
add
inc
add
or
mov
fcoml
jmp
enter
add
push
rolb
adc
pop
xchg
add
stos
sbb
add
test
arpl
add
inc
add
add
sbb
pop
lods
repnz
enter
add
adc
pop
movb
inc
inc
ret
std
inc
scas
cmpl
stc
lock
add
add
add
les
das
pop
push
add
add
add
pop
sbb
bound
mov
adc
jnp
xchg
inc
into
jns
mov
sub
ret
inc
mov
xchg
pop
sbb
into
sub
xor
and
mov
add
xor
imul
push
pushf
icebp
test
aas
das
rcll
ret
xor
out
lcall
dec
test
add
cmc
adc
mov
bound
mov
test
test
xor
xchg
add
mov
add
je
xchg
pushf
popf
xlat
sti
mov
xor
pop
loopne
in
pop
pop
pop
or
add
add
pop
int3
mov
jno
add
or
testb
mov
add
cmp
lcall
test
cmpsb
add
sub
popf
mov
aas
stos
loope
add
mov
add
xchg
add
xchg
inc
addr16
add
in
je
data16
leave
scas
clc
data16
cmp
addr16
mov
or
das
jle
add
jno
add
inc
add
mov
je
iret
xchg
jns
add
xchg
add
dec
add
mov
popa
cltd
mov
incb
pusha
add
imul
test
mov
pushf
cmpsl
jle
add
cmp
inc
and
push
and
mov
cmpsl
clc
dec
bound
mov
xchg
add
jp
add
add
pop
and
outsl
or
add
lahf
inc
add
mov
add
add
jmp
xor
mov
stc
dec
popf
int3
mov
or
je
clc
imul
inc
pop
sahf
xchg
and
mov
add
add
mov
insl
out
sahf
ror
mov
cs
mov
add
sbb
adc
xor
jp
mov
out
movsl
aam
mov
or
out
add
push
add
enter
xlat
daa
mov
add
fisttps
push
add
lahf
test
cmpl
mov
call
pop
push
sahf
cltd
je
add
and
mov
sarl
sub
cmp
cltd
jp
iret
sti
in
mov
add
test
push
cli
rolb
movb
xchg
sub
add
mov
enter
add
clc
ljmp
cltd
cmp
add
fistl
add
cmp
add
aas
pop
add
and
inc
test
outsb
lret
xchg
push
xchg
add
add
add
add
scas
push
xor
push
mov
jb
sbb
add
add
add
insb
stos
dec
addl
mov
push
add
lods
cltd
xor
addb
aad
addl
add
add
add
pop
cld
cld
xor
insl
cmp
loop
xor
jns
add
lcall
xor
mov
add
add
sarl
add
mov
and
mov
into
add
cmp
mov
xor
xchg
add
push
xchg
add
mov
loopne
hlt
add
mov
mov
popf
sbb
cmpsb
add
add
mov
into
or
cli
mov
add
xchg
add
add
xchg
clc
enter
xor
dec
cmp
movsl
lret
repnz
add
pop
les
adc
rolb
add
add
les
movsb
add
test
loope
add
mov
and
fwait
data16
fwait
mov
pop
les
add
in
jnp
test
clc
lret
add
add
aaa
js
popf
dec
jns
jl
int
mov
add
in
add
cmpps
xor
push
xor
pop
movsb
add
push
add
cmp
adc
add
pop
fincstp
sub
add
add
add
cvtdq2ps
xor
movsb
add
mov
cmc
outsb
and
std
sti
std
xchg
xor
inc
add
and
mov
fwait
mov
fcomps
cmp
add
pop
mov
and
or
push
jae
pop
and
mov
add
mov
addb
das
mov
aas
inc
add
out
data16
add
add
lea
les
and
mov
int
pop
data16
fisttps
xor
ss
pop
mov
dec
jno
add
add
icebp
rolb
out
and
addb
iret
xchg
dec
iret
lods
insb
scas
daa
mov
add
ret
sbb
lret
push
xchg
test
out
addb
add
fisubs
add
out
aaa
adc
std
aaa
cmp
sub
inc
lcall
daa
pop
fnsave
push
push
add
cmp
addb
xor
add
cmc
std
mov
push
add
or
xchg
mov
cmp
mov
add
xchg
pop
enter
les
movb
loope
xlat
loope
push
sbb
data16
loope
addb
adc
mov
adc
add
add
add
add
push
cli
test
add
subl
mov
mov
xor
add
jb
mov
aaa
ficomps
mov
or
xor
decb
nop
add
add
add
cmc
sbb
push
add
cmp
pop
jne
outsl
jmp
add
add
mov
fiaddl
pop
fsubrs
pushf
rolb
fsubrs
add
mov
add
cmp
mov
inc
and
imul
add
leave
mov
jae
and
mov
add
add
pop
cmc
lahf
out
or
add
add
or
add
mov
add
ljmp
mov
mov
pushf
pusha
add
or
test
pop
call
add
add
add
mov
clc
pop
jae
adc
out
rolb
aad
jle
jge
mov
xor
ret
add
cltd
out
sbb
lods
mov
pop
and
xor
jnp
lahf
jns
mov
cli
or
add
adc
sub
mov
inc
inc
add
ljmp
add
xchg
and
add
sub
jecxz
lcall
movsl
add
jnp
adc
es
pushf
xchg
add
repz
add
dec
and
or
iret
add
inc
out
imul
jnp
push
loop
lock
addb
xor
add
add
fnsave
jp
movsb
add
sahf
dec
arpl
test
test
pop
lea
mov
mov
lods
hlt
add
cld
jecxz
add
or
sub
add
jge
enter
jne
add
add
mov
dec
or
push
add
add
mov
adc
in
cmc
iret
int3
mov
pop
adc
jp
add
mov
mov
mov
test
cltd
aam
adc
add
dec
jb
outsl
push
add
test
add
xor
add
mov
jne
inc
push
addr16
mov
into
mov
add
mov
add
enter
repz
mov
add
ss
pop
cli
loop
addb
fsubr
fstps
jb
fcmovbe
out
out
ds
out
jmp
sti
lock
mov
pop
das
push
add
add
add
inc
shr
insb
dec
fdiv
add
dec
cmp
add
mov
jle
or
push
add
add
jp
les
mov
test
aas
aaa
push
sub
jb
fadds
in
mov
js
lahf
out
pminsw
add
add
or
add
push
mov
adc
loopne
cmp
notl
add
fisttps
cmc
and
xchg
sbb
add
mov
cmpl
je
mov
add
add
dec
or
add
stos
loope
mov
add
push
add
ja
add
pop
adc
mov
xchg
add
jmp
pop
mov
rcr
bound
mov
cmp
stc
gs
pop
xor
inc
add
cltd
imul
cmp
and
pusha
add
mov
mov
add
xchg
aad
lods
pop
jae
inc
add
imul
stc
and
shl
cmp
push
add
jl
add
add
mov
testb
dec
mov
mov
mov
add
add
jg
popf
push
mov
add
lahf
fisttpll
fidivl
adc
test
or
cmp
add
out
mov
sub
add
mov
mov
cmp
daa
scas
pop
out
push
add
int
flds
mov
mov
pop
lods
push
add
mov
mov
inc
add
add
add
addb
xor
xor
sbb
dec
push
add
add
and
xchg
add
add
add
add
mov
sub
add
decb
push
add
movb
add
fisubs
add
mov
add
xchg
pop
mov
out
and
pop
mov
add
mov
in
cmp
js
gs
hlt
add
add
cltd
mov
sbb
xlat
arpl
add
add
add
outsl
notl
add
pop
outsb
clc
mov
jnp
add
add
dec
mov
mov
in
stc
fwait
push
add
inc
or
add
add
xchg
add
sub
inc
dec
test
add
movsl
stc
jecxz
add
add
add
cmp
adc
pop
iret
imul
jle
fadds
add
add
aaa
cmp
and
mov
cmc
add
out
imul
jp
add
aad
mov
dec
jbe
pushf
cld
push
add
out
mov
add
add
add
add
add
loop
adc
sub
sbb
cmp
pushf
data16
pushf
xor
mov
rolb
jns
xchg
add
jp
xchg
or
addb
add
cld
in
add
add
or
dec
nop
add
add
fdivs
les
lods
test
add
add
movsb
add
add
mov
outsb
adc
xor
movb
aam
enter
fs
add
add
mov
add
add
loop
or
add
add
adc
push
add
cli
push
out
add
mov
add
mov
repz
mov
rcl
push
mov
add
dec
nop
add
add
add
mov
cmpsb
add
mov
and
mov
mov
xchg
add
call
test
sti
cmp
add
mov
add
pop
pop
mov
xchg
imul
jbe
dec
divl
mov
mov
lret
pop
fidivs
inc
cmp
cmc
into
xchg
mov
mov
adc
add
sub
cmpsl
xchg
add
mov
movb
xchg
out
ror
sbb
adc
pushf
fiaddl
sub
add
push
addl
mov
push
add
sbb
and
mov
dec
sbb
cmp
mov
jg
add
mov
and
mov
add
fcmovnu
dec
fsubl
xor
imul
lret
jl
pop
and
mov
lahf
lea
out
adc
push
add
dec
jp
add
popf
cmp
jne
lret
xor
clc
out
add
mov
nop
add
add
push
add
addb
ret
inc
add
add
pop
mov
repz
sub
addb
aad
add
loope
add
add
pop
rcrl
mov
int
call
loopne
jb
push
add
hlt
add
inc
jne
loopne
enter
add
push
add
mov
add
cli
jmp
add
mov
cmpsb
add
inc
add
mull
pop
add
testb
add
inc
add
mov
add
jne
cmp
adc
add
mov
clc
loope
dec
xor
popa
jge
xchg
arpl
addb
sahf
mov
mov
gs
add
test
les
fwait
movsb
add
movsb
add
mov
mov
add
fldt
mov
or
add
mov
add
jecxz
add
push
add
cmp
dec
int3
cmpsb
add
add
cmp
in
or
add
xchg
mov
fcomip
aas
xor
icebp
inc
add
jg
xor
dec
mov
xchg
inc
add
add
jno
sbb
mov
mov
or
ds
jno
mov
add
mov
addb
cmp
inc
add
daa
stos
fimull
pop
push
add
mov
addb
pop
sub
loopne
call
add
add
inc
add
add
sbb
test
enter
sbb
mov
arpl
inc
add
push
add
push
rolb
hlt
add
push
adc
xor
jae
push
add
imul
filds
cmp
leave
and
pop
daa
bound
mov
cltd
inc
xchg
shll
add
dec
cmp
add
inc
and
hlt
add
ds
repnz
push
add
add
insl
jbe
xchg
int3
xchg
add
mov
fstp
psadbw
mov
xchg
mov
jl
add
aam
ss
test
and
mov
jnp
hlt
add
jbe
push
add
pop
loop
add
add
jmp
add
fwait
push
add
add
pop
insb
xor
sbb
add
inc
add
mov
inc
sub
cmp
add
add
into
pop
mov
mov
dec
in
add
mov
push
add
add
bound
mov
add
add
add
test
imul
and
mov
stos
push
adc
xchg
add
and
push
cmp
icebp
rolb
int
lret
std
and
inc
add
in
cmp
push
add
lcall
popa
mov
push
lock
mov
and
add
rolb
call
xor
pop
imul
push
popa
jmp
cmp
cmpsl
test
jp
addb
inc
call
lods
cmp
cmp
mov
enter
dec
and
mov
add
mov
add
jb
mov
cmpsb
add
add
adc
cmp
add
mov
add
add
stos
sub
std
mov
add
rolb
xor
mov
add
add
inc
add
add
xchg
mov
cmc
push
jnp
sbb
xor
jae
and
icebp
mov
gs
cmpsl
fisttpl
add
mov
pop
mov
pusha
add
xchg
add
das
lods
or
mov
aam
pop
lret
mov
push
js
jnp
or
jae
add
icebp
xchg
lock
rolb
out
rol
add
xor
xchg
ret
rolb
ja
add
push
push
jns
lret
mov
dec
cs
add
mov
add
xlat
pop
rcll
jge
cli
addb
lds
inc
jg
add
mov
aam
dec
add
mov
add
mov
push
add
popf
insl
arpl
rolb
ret
jp
mov
mov
mov
inc
add
mov
add
add
mov
add
leave
add
add
test
addr16
sbb
add
addb
loope
add
add
add
in
lds
add
add
fwait
movsl
jns
or
sbb
js
repz
add
inc
xor
sbb
lods
lds
mov
cltd
xchg
lds
add
jl
add
mov
movb
add
xchg
and
out
filds
mov
add
pusha
add
and
push
leave
jmp
or
xchg
lahf
faddp
add
xor
mov
in
fcmovnbe
mov
add
xchg
mov
or
add
int
add
add
add
mov
fwait
sub
push
add
mov
cs
dec
add
or
push
add
mov
ret
add
dec
lret
sti
les
sbb
lds
cmp
mov
jb
out
sub
test
add
pushl
dec
mov
and
mov
sbb
es
add
dec
test
stc
dec
dec
add
cltd
xor
inc
add
pop
fisubs
mov
cmpsb
add
and
mov
add
ja
mov
fdivr
mov
add
xchg
ja
add
add
mov
out
add
int3
bound
mov
add
pusha
add
add
loope
add
push
add
adc
push
jl
out
xchg
sti
push
push
add
add
jmp
fxch
mov
adc
add
scas
in
push
mov
jle
scas
in
out
add
ret
mov
into
sub
add
jecxz
adc
add
cmc
adc
aam
in
fidivrs
lods
rcll
or
int
out
clc
jb
in
jo
insb
mov
xchg
add
jp
add
mov
stos
mov
add
add
daa
lock
xor
add
rolb
adc
pop
ljmp
add
sbb
mov
mov
stos
and
inc
add
mov
cmp
out
push
pop
and
add
popf
sub
add
rolb
mov
mov
add
sarl
fcmovnbe
add
stc
jne
cmp
aaa
lock
cmp
jbe
fadds
add
psubusb
adc
fdivrp
mov
xchg
dec
pushf
cs
push
add
fbld
orl
pop
adc
cltd
xor
mov
rolb
add
int
add
pop
outsb
sbb
pop
movsl
jg
add
add
xchg
data16
dec
pop
scas
imul
mov
addb
push
add
mov
add
outsl
imul
add
mov
push
xchg
sarl
sub
test
pop
add
mov
das
jb
xor
stc
lcall
fidivl
fcmovbe
add
add
add
test
leave
mov
pusha
add
push
add
mov
jecxz
sbb
add
pop
sub
add
push
data16
pop
dec
sbb
xor
add
mov
pusha
add
dec
jp
popf
jecxz
lret
jecxz
add
sahf
sub
add
int3
lods
ja,pt
add
add
lret
cltd
movsb
add
ficomps
das
mov
sahf
mov
or
and
sbb
les
sbb
add
popf
pop
or
enter
push
add
loopne
mov
lahf
inc
add
sub
mov
mov
add
adc
mov
add
data16
fdivr
rolb
pushf
mov
mov
lock
cmpsb
add
xchg
add
iret
gs
add
adc
mov
lret
lret
pusha
add
add
adc
add
add
add
mov
mov
or
add
enter
cmp
add
mov
add
mov
insl
popf
xlat
daa
addr16
addr16
add
lea
or
lea
repnz
pop
je
clc
or
lds
rolb
and
mov
add
jnp
add
arpl
adc
add
add
addr16
add
jmp
or
xor
addl
iret
xchg
sub
xor
and
mov
aas
pop
movsb
add
mov
add
inc
add
loop
mov
fsubrp
cli
lahf
xor
push
add
stc
sti
repz
add
inc
add
sbb
add
jae
sub
lret
dec
ds
pop
add
sbb
nop
add
out
addl
inc
push
add
or
adc
jle
add
fidivl
rcll
or
stos
ljmp
and
add
scas
test
jbe
jg
test
add
add
test
mov
cli
rolb
add
out
xor
xchg
jb
mov
in
cmpsb
add
lods
shrl
jle
les
dec
inc
add
mov
or
lea
xor
ret
data16
sub
push
add
jo
inc
xor
sbb
dec
push
sub
add
jo
rolb
roll
add
in
xor
xor
test
dec
push
jnp
or
jbe
addr16
test
add
subl
mov
mov
roll
inc
add
cld
mov
xchg
imul
add
repz
pop
lret
mov
add
cmp
ret
xor
ljmp
inc
lret
test
add
mov
add
adc
jo
bound
mov
add
lods
adc
outsl
xchg
adc
jp
int
add
out
push
xchg
dec
fs
add
lds
cld
sahf
ret
outsb
loopne
inc
add
add
movsb
add
or
fidivrl
jl
add
pop
testb
inc
add
dec
repnz
mov
sub
mov
add
bound
mov
cmp
add
stc
test
dec
repnz
cwtl
clc
dec
inc
add
or
pop
mov
add
jbe
fdivrs
pop
ja
xor
mov
mov
in
mov
mov
std
mov
adc
add
sbb
add
add
add
add
ret
sti
stos
lahf
adc
sbb
add
in
in
jp
add
cmp
lahf
dec
scas
popa
push
add
lret
popa
add
mov
dec
inc
testb
add
jg
push
add
inc
add
mov
scas
fdivrl
mov
pop
inc
add
jecxz
fistl
sbb
pop
and
jge
add
add
fs
add
test
add
sub
jg
or
jp
push
mov
sbb
add
add
roll
jno
sbb
xchg
ret
movb
jmp
adc
popl
xchg
aaa
lret
mov
add
pop
add
jge
add
ja
jl
out
repnz
and
mov
outsb
mov
insl
fcompl
pop
jo
adc
stc
lret
inc
add
outsl
movsb
add
add
pop
nop
add
data16
add
add
add
sub
test
add
repnz
add
add
addb
add
add
movsl
mov
mov
das
les
push
add
sbb
mov
out
or
add
add
add
adc
enter
add
sbb
stos
pop
cli
pop
dec
addb
stc
roll
hlt
add
dec
mov
add
add
add
add
dec
sub
xor
add
add
xchg
pop
sub
in
add
add
and
xor
adc
pop
inc
xchg
add
mov
mov
push
cmp
loop
dec
cmp
or
mov
add
inc
xor
or
mov
sbb
outsb
mov
add
pop
movb
mov
add
mov
add
and
adc
mov
mov
mov
je
mov
xor
add
add
pusha
add
adc
mov
jecxz
add
popf
xchg
test
sbb
mov
in
and
jo
test
movb
filds
mov
lea
mov
add
addb
mov
addb
test
mov
add
aas
clc
push
add
adc
mov
je
pop
testb
jns
ja
test
push
pop
movb
or
pop
add
add
add
mov
or
outsl
je
pop
mov
call
add
mov
add
xor
jle
add
add
sub
and
inc
add
add
loope
addl
add
pop
std
xchg
add
iret
mov
cmp
xchg
mov
sub
add
add
xchg
jp
mov
rolb
cltd
outsl
int
iret
push
add
add
test
lahf
sbb
icebp
addb
add
or
push
adc
add
mov
add
add
add
add
pop
jle
mov
sbb
jg
add
add
dec
mov
xor
xor
jnp
lock
out
enter
push
aad
sub
add
movsb
add
xchg
jge
lcall
fstpl
and
out
sbb
stos
push
and
inc
add
add
add
outsl
jg
test
push
dec
sub
xor
testb
cmp
xchg
add
jbe
jmp
push
add
rorl
lret
ds
fadds
inc
add
icebp
or
fmuls
mov
add
mov
popf
pop
jnp
mov
out
or
add
add
in
nop
add
outsl
dec
sub
add
pop
xor
add
xor
enter
xchg
cmp
add
or
adc
push
addb
inc
sub
xor
add
cmp
sub
hlt
add
dec
insb
int3
lahf
dec
aad
add
add
and
gs
imul
pop
std
pop
jmp
or
mov
xchg
add
lods
push
mov
in
cmp
push
add
insl
mov
rolb
push
xchg
mov
out
mov
add
inc
add
xlat
loop
pop
das
rcll
add
sub
add
dec
fnstenv
inc
add
fsubrs
das
rolb
inc
add
aad
jne
jg
outsl
xor
sbb
add
mov
xlat
add
xor
pushl
sub
xor
testb
push
add
add
adc
inc
inc
add
add
add
mov
add
popl
loop
daa
popf
inc
aad
add
jae
lret
nop
add
add
add
mov
add
add
add
fnstenv
add
jb
sub
add
mov
popa
and
mov
mov
adc
add
hlt
add
add
add
cltd
jo
jo
mov
add
jne
jmp
xlat
xchg
jne
add
xchg
or
push
add
add
ljmp
sbb
les
mov
cmp
add
pop
sub
jbe
jae
add
gs
add
icebp
roll
add
lahf
rorl
add
add
adc
mov
or
jle
add
add
jne
add
lea
lret
imul
sti
lret
dec
outsb
sub
sbb
add
pop
mov
pushf
int3
mov
jae
add
call
int
sbb
incl
pop
test
rolb
fadds
add
addb
shll
jnp
add
mov
pop
mov
add
push
add
add
add
notl
add
mov
inc
xchg
add
addr16
add
add
mov
clc
test
cltd
push
add
add
ret
sub
add
adc
add
gs
add
imul
loop
outsb
push
jecxz
xor
pop
push
iret
mov
scas
push
add
jo
data16
dec
xor
xor
add
mov
mull
add
rolb
or
cwtl
xor
mov
test
out
cmp
test
in
ret
add
sbb
data16
mov
add
add
stos
lods
cmpsl
mov
push
add
adcl
xor
addr16
jne
add
cwtl
and
mov
pop
repnz
loopne
push
add
call
ret
mov
or
add
mov
add
add
pop
inc
add
sub
aaa
cwtl
or
add
mov
dec
lret
popa
sbb
add
insb
fisubl
add
add
leave
sti
and
lods
sahf
aaa
out
aas
add
mov
leave
pushf
add
add
lods
shrl
add
mov
add
jbe
push
lret
repnz
mov
testb
xchg
add
lea
add
notl
addb
jno
add
pop
xchg
add
insl
testb
push
add
xchg
add
dec
xchg
add
mov
cltd
sub
jae
xchg
and
loop
call
add
add
outsb
shll
cmp
rolb
in
in
push
add
sahf
out
add
adc
pop
dec
push
ja
repnz
push
cmpsb
add
call
add
nop
add
add
add
sub
and
dec
mov
js
add
add
add
add
add
add
mov
jns
fadds
xchg
add
lcall
pop
je
adc
jp
add
or
add
mov
mov
mov
jle
int3
mov
add
add
es
movlps
push
sti
add
and
and
mov
cmp
xchg
add
add
xchg
push
mov
adc
adcl
nop
add
add
ja
pop
jae
add
and
add
repnz
arpl
pop
scas
test
iret
jo
vaddps
add
push
add
or
add
bound
mov
and
sahf
clc
pop
ss
xor
mov
fistl
fadds
add
out
addb
fcompl
add
pop
cmp
add
add
outsl
rcrl
ret
adc
cmc
or
bound
mov
cltd
stos
lea
adc
add
dec
lea
mov
add
rolb
pop
inc
lret
mov
repz
jno
add
jnp
jb
in
inc
add
xor
stos
daa
fs
xchg
and
lahf
push
add
add
mov
add
fmull
popf
lea
xor
sbb
arpl
out
cmc
adc
ljmp
push
add
push
add
roll
xor
xchg
dec
push
pop
add
mov
add
add
int3
add
mov
jmp
icebp
enter
stos
pop
lods
push
lods
in
into
mov
xchg
cmc
sbb
jb
mov
data16
rolb
add
add
inc
add
add
stos
mov
out
divl
push
add
xor
pop
jbe
push
pop
pop
popf
in
ret
add
pop
jno
dec
pop
daa
les
movsb
add
inc
add
xchg
jne
add
add
add
add
sbb
lods
push
xchg
add
je
jle
add
sbbl
jle
push
cli
push
add
ret
xchg
mov
pop
ret
add
add
mov
lock
add
mov
dec
ret
jo
lcall
jnp
jmp
add
in
je
xor
cmp
add
out
lea
js
add
add
add
sub
stc
cmpsl
cmp
insl
xchg
add
lret
and
push
add
mov
jp
add
je
or
mov
sub
add
push
add
add
push
mov
mov
aad
add
imul
in
fdiv
add
xor
daa
add
mov
cmp
mov
add
xchg
mov
daa
pop
jl
pop
dec
sub
add
ret
cmp
fadds
mov
sub
je
pushf
pushf
cmpsl
int3
and
or
add
add
pop
cltd
aaa
jns
sbb
pop
add
aaa
inc
mov
inc
add
iret
rolb
add
add
mov
adc
stos
and
mov
aas
inc
add
leave
cmp
out
mov
jecxz
jge
pop
and
stc
inc
in
gs
aas
xlat
xchg
add
lcall
push
add
insl
cmp
cmpsb
add
add
add
pop
sbb
inc
add
jge
add
loopne
ret
xor
mov
cmc
mov
add
add
add
push
add
daa
daa
daa
popa
pop
mov
jl
add
mov
ljmp
cmpsl
inc
add
test
xchg
mov
push
add
divl
xor
fdivr
push
jecxz
mov
jne
jno
js
rorl
sti
add
jns
pop
in
ret
jne
add
add
stos
dec
scas
dec
jae
mov
lret
lods
jl
dec
stc
or
sub
popa
ret
and
pop
popf
xchg
add
jns
sub
sbb
add
pop
mov
stos
les
pop
popf
mov
add
or
loope
add
lret
jbe
outsl
test
sub
push
add
imul
inc
push
add
ljmp
pop
and
mov
ret
out
mov
jl
add
dec
arpl
in
dec
loope
mov
inc
push
add
cmp
xor
test
mov
xchg
add
and
and
rolb
push
lds
add
addb
cmpsb
add
mov
jnp
mov
in
xchg
add
jmp
rolb
pop
mov
jb
pop
add
xor
ret
xor
cmp
or
adc
in
push
mov
pop
or
out
jbe
cmpsl
lret
add
das
data16
jp
add
mov
sub
push
mov
testl
dec
pop
mov
mov
cmpsb
add
je
mov
dec
aad
jb
test
sub
cmpl
add
sub
jg
cmpsl
leave
cld
push
cmpsl
movsl
aaa
subl
mov
add
add
pop
aam
out
inc
add
add
int
push
ss
aam
cltd
xchg
add
xchg
iret
pop
test
dec
sbb
dec
or
lds
pop
add
jp
ljmp
pushf
ds
cmp
mov
jo
aaa
popf
sbb
push
add
dec
pushf
jmp
cli
xor
sub
add
add
add
and
cmc
in
sbb
loop
lcall
call
add
add
repz
add
or
xor
mov
mov
mov
insl
xchg
scas
add
addb
lahf
ss
pop
mov
add
les
sbb
clc
cwtl
inc
add
dec
dec
xchg
add
or
add
mov
sub
pop
icebp
xchg
add
add
pop
out
mov
insl
testb
jbe
repz
sbb
aad
les
rolb
cmpsl
dec
jle
and
mov
stc
mov
fnstcw
adc
addl
nop
add
sbb
adc
xchg
pop
mov
xchg
xor
push
add
sub
add
adc
das
imul
mov
add
sarl
dec
bound
mov
add
add
fstps
fsubl
cmpsl
pop
xadd
pop
test
or
in
push
cmp
add
mov
add
add
mov
adc
fidivrs
mov
imul
lret
mov
jp
xor
or
js
add
xor
add
jns
dec
push
add
mov
add
mov
xchg
add
lret
xlat
pop
cmp
cmp
dec
mov
cmp
add
add
push
movsl
ret
cwtl
inc
add
mov
add
mov
sbb
add
sbb
lock
out
aam
js
add
add
jle
sub
lods
adc
inc
mov
testl
add
add
dec
addr16
add
fidivl
add
add
add
add
repnz
sub
add
add
mov
pushf
jl
mov
dec
repz
xchg
rcll
add
ficoms
lret
mov
add
add
jae
sub
jge
adc
or
adc
scas
jmp
fcoml
bound
mov
stc
xor
aam
addr16
dec
push
add
addb
add
add
add
add
lret
imul
add
xor
sahf
test
add
add
add
add
add
xchg
daa
mov
add
xchg
outsl
and
xchg
out
rolb
xor
add
mov
insl
mov
pop
and
sahf
sti
push
adc
add
rcl
pop
jp
jmp
add
cmc
push
add
outsb
pop
sti
mov
mov
push
add
ja
add
hlt
add
dec
mov
mov
xor
mov
pop
hlt
add
sbb
push
add
stos
dec
in
dec
fcmovne
mov
add
mov
jmp
lahf
jns
add
add
cmpsb
add
add
popf
push
cmp
mov
mov
imul
jbe
and
mov
mov
in
push
add
add
call
js
cmpsb
add
pavgw
add
add
add
mov
pushf
aam
pop
mov
xchg
stc
push
add
inc
bound
mov
push
add
out
movsb
add
adc
aas
push
xchg
add
inc
and
mov
and
add
add
or
add
repnz
push
je
arpl
xor
xchg
add
add
xchg
dec
hlt
add
inc
les
jecxz
push
add
push
int
add
pop
sbb
fldl
pop
sbb
add
test
int
and
dec
jp
add
popa
into
and
add
std
rorl
stos
jp
mov
sub
add
add
add
mov
add
imul
dec
fwait
leave
or
pop
cmp
mov
push
add
or
add
add
mov
add
add
scas
fisttpl
pushf
addb
jbe
push
pop
les
xor
add
lds
add
add
add
adc
adc
add
add
xchg
test
incl
adc
enter
push
mov
decl
push
imul
add
popa
call
in
test
bound
mov
push
jne
cmc
iret
addb
rolb
pop
sbb
cwtl
and
ret
lcall
inc
loop
and
add
repz
add
cmpsl
aaa
test
xchg
stc
in
sbb
or
inc
add
add
add
add
inc
add
mov
add
xor
jmp
fs
lods
ficoml
add
add
dec
xor
sub
adc
out
jmp
cwtl
into
or
add
aad
outsb
lds
add
add
nop
add
add
add
push
add
rolb
adc
pop
mov
pop
add
jno
add
pop
das
loope
add
xchg
jo
push
add
out
arpl
push
add
test
add
add
sahf
addb
ja
or
add
dec
aaa
cwtl
cmp
add
inc
cmpsb
add
add
push
add
or
add
push
add
flds
mov
fiaddl
rcll
ljmp
nop
add
aad
inc
xchg
add
aad
add
add
gs
fisubrs
sub
mov
mov
add
test
jb
leave
pop
cmp
insl
mov
or
jbe
and
push
lea
add
int3
mov
test
ret
dec
pop
lret
cld
ds
pop
sub
clc
test
xlat
stc
rcr
mov
pop
inc
add
mov
loop
sub
add
add
call
add
xchg
lods
loopne
xor
rolb
or
xor
les
je
jge
sarl
mov
add
mov
rcll
hlt
add
add
cmp
imul
adc
jp
add
pop
in
push
add
add
mov
jns
add
add
mov
inc
add
sub
inc
add
test
movb
add
leave
inc
add
jne
inc
add
add
add
stos
enter
sub
ljmp
jmp
roll
out
push
add
add
add
add
add
and
add
jno
test
jae
lcall
fldenv
add
out
mov
add
mov
push
cmp
inc
in
negl
mov
add
add
adc
push
stc
cmp
xlat
jo
or
jno
add
xchg
add
add
dec
mov
add
add
fldcw
stos
ds
push
fistps
adc
push
add
mov
add
jo
mov
imul
add
mov
and
insl
add
jmp
jecxz
loope
test
in
dec
aas
inc
add
and
sbb
add
imul
loope
lods
repnz
out
les
adc
cmpsb
add
pop
and
add
mov
jbe
and
add
inc
stc
mov
pop
sbb
mov
and
popf
outsb
mov
xor
mov
cmp
test
lret
jbe
push
push
add
add
mov
add
add
add
mov
mov
out
int
rorl
fstl
lea
jg
or
pop
rcrl
add
mov
sub
lock
add
inc
add
push
add
add
add
mov
add
mov
es
popf
rolb
enter
out
add
add
add
mov
ds
add
add
sbb
mov
mov
mov
add
clc
pop
sbb
in
add
sbb
mov
mov
mov
add
sbb
inc
add
add
add
shl
add
add
add
add
add
add
dec
or
addb
add
imul
mov
add
adc
loope
lock
add
stos
sbb
cmc
dec
add
ret
hlt
add
mov
incb
repnz
enter
les
mov
adc
lret
lea
push
cmp
add
in
mov
inc
dec
add
jnp
add
enter
dec
cmp
outsl
mov
push
add
lods
cmp
cmpsb
add
sbb
test
cmp
sub
mov
add
fsubrl
add
test
lods
inc
add
adc
push
xchg
pop
lods
imul
fimuls
dec
push
add
lock
sub
cs
lret
mov
aad
add
mov
call
pop
inc
add
fcmovb
aaa
je
stos
cli
call
mov
jle
inc
jge
adc
mov
in
scas
arpl
add
add
add
cmp
jge
add
sbb
aas
add
add
std
cmp
mov
jmp
jae
sbb
outsb
sbb
out
fwait
out
xor
or
cmp
push
cmp
jne
xchg
mov
add
dec
xchg
sbb
out
sbb
jno
pop
addb
outsb
call
add
loope
sbb
aam
xchg
jo
mov
pop
push
mov
rolb
or
stos
or
add
add
pushl
add
add
add
mov
sbb
add
add
add
mov
add
mov
add
leave
sub
add
fwait
jp
add
imul
add
push
add
push
cmc
xlat
or
in
test
stc
add
mov
add
jae
lret
sbb
add
and
xchg
mov
push
add
xor
add
jle
add
mov
inc
add
jp
push
stos
lcall
mov
lahf
inc
add
mov
js
scas
adc
movsl
jecxz
add
lret
adc
mov
jb
les
std
dec
adc
pushf
stos
test
test
xchg
fsubl
cmp
push
loop
pushf
or
out
cld
vmread
ja
cwtl
dec
js
dec
sub
cs
jle
add
xchg
sub
addb
add
in
jo
pop
push
add
xchg
ret
arpl
add
data16
cmc
xor
nop
add
pop
jmp
leave
std
mov
loop
add
or
add
push
add
mov
add
dec
xor
adcl
aad
push
and
add
div
mov
add
add
out
pushl
add
into
sarl
fists
push
inc
add
mov
add
mov
add
sbb
orl
and
cmp
jl
loop
punpckhdq
je
cmp
add
add
add
outsl
add
sub
add
outsb
testb
test
cmp
sub
outsb
testb
add
add
mov
add
dec
in
movsb
add
adc
mov
add
add
add
inc
dec
jns
in
jno
out
push
adc
test
cs
inc
ret
push
scas
movsb
add
add
mov
xor
cmpsl
push
cs
enter
arpl
in
addr16
add
sbb
bound
mov
jno
jae
add
dec
lock
add
daa
add
dec
mov
arpl
mov
add
movb
xlat
sti
inc
das
xor
and
add
add
mov
mov
movb
xor
inc
movb
xchg
mov
dec
push
movsb
add
push
add
dec
les
adc
outsb
std
je
push
add
xchg
stos
pop
insl
pushf
cwtl
mov
push
sbb
lods
fwait
jno
adc
int
add
addb
add
cwtl
jnp
add
jp
jns
add
fisubl
add
in
sub
add
fcmovne
pop
gs
inc
mov
lcall
mov
and
mov
xchg
add
cmp
rolb
sub
mov
dec
pusha
add
addr16
sub
add
stos
cli
cmpsl
jge
pop
ja
add
xchg
add
push
call
mov
dec
pop
cmp
add
cmp
pop
test
add
jns
add
sbb
pop
cld
add
add
add
jo
nop
add
aam
jbe
jg
add
add
add
add
shrl
mov
add
mov
add
add
add
test
add
add
test
rolb
out
push
add
cmpsl
and
pusha
add
test
adc
pop
addr16
ljmp
add
inc
add
fidivrs
push
add
push
add
addb
add
mov
fxch
pop
cs
cmpsb
add
lods
sti
jae
or
and
mov
mov
addr16
fnstcw
bound
mov
loope
cmc
inc
add
sub
arpl
add
add
mov
cld
or
cmpsb
add
dec
pop
fbld
mov
insl
test
aam
pusha
add
sbb
add
mov
ret
add
add
xor
add
nop
add
data16
pop
popa
int
mov
scas
sti
popf
cmp
imul
imul
jle
mov
mov
jecxz
add
add
cmp
mov
xchg
out
addb
add
add
sub
add
lret
xor
mov
mov
add
add
inc
mov
rolb
mov
jg
mov
mov
add
adcl
xor
shll
add
dec
imul
add
add
sbb
add
mov
cmp
or
cmp
and
mov
add
cmp
xor
loopne
data16
sub
sub
or
add
adc
mov
movsb
add
sbb
xchg
add
imull
add
push
fwait
push
add
idivl
push
xchg
mov
nop
add
add
add
push
add
mov
fstps
jecxz
add
or
in
jo
mov
fistpll
add
lea
mov
push
cld
fwait
jnp
mov
sbb
add
mov
mov
nop
add
push
add
sbb
data16
add
lods
arpl
call
cli
cltd
addb
add
addb
add
dec
testb
ja
pop
lret
xor
rolb
rolb
cwtl
or
rolb
jl
pop
push
add
add
jne
iret
cmpsb
add
pop
ret
or
add
sbb
or
rolb
outsl
int3
jo
lock
sub
bndldx
add
jbe
add
das
pop
shrl
cmpsl
hlt
add
insb
faddp
add
lock
cmp
or
push
mov
cmpl
out
xlat
xchg
ja
jns
rolb
xor
clc
xchg
lahf
lods
icebp
sahf
push
and
mov
lahf
cmpsb
add
add
das
xchg
add
adc
sbb
push
add
add
scas
addb
imul
add
xchg
xchg
fisttps
add
or
add
add
cmp
jl
mov
sbb
adc
sbb
add
add
xor
pop
or
imul
movsb
add
mov
scas
dec
mov
lret
add
add
dec
popa
mov
cld
mov
dec
dec
pop
xor
aas
mov
data16
lret
jne
mov
add
push
push
add
inc
mov
ud2
lret
scas
lcall
lcall
inc
add
jl
popf
push
add
int
add
mov
je
int3
les
daa
mov
jbe
scas
mov
out
out
sub
xchg
int
rolb
mov
outsl
les
push
pop
push
add
fsts
inc
add
add
mov
add
test
mov
cld
cmpsl
xchg
add
addl
xchg
add
in
cli
test
lods
add
pushf
pop
arpl
pop
ficompl
add
xor
inc
lcall
pop
aaa
aas
mov
ret
add
lds
or
jne
aad
sub
add
add
fdiv
adc
call
addl
aam
adc
add
inc
jo
pop
xor
add
sub
js
add
in
sub
xchg
or
push
mov
jo
inc
shll
cld
pop
dec
imul
int3
sahf
clc
lock
xchg
ret
clc
ret
inc
adc
pop
stos
inc
jmp
lcall
movsl
cld
add
popa
inc
add
cmpsl
adc
add
addb
jnp
add
xchg
and
and
and
scas
repnz
add
mov
testb
or
arpl
add
cli
xor
and
in
popa
add
push
add
clc
dec
cmp
add
add
cmc
addr16
mov
int3
jns
mov
sub
and
imul
rcrl
mov
mov
je
cltd
pop
push
or
jmp
add
push
add
add
pop
adc
add
lods
mov
daa
push
jl
ja
sub
add
ret
test
add
add
jl
addr16
out
lea
dec
xchg
add
add
call
add
imul
into
addl
insl
and
mov
push
add
movsb
add
adc
add
jmp
insl
and
sbb
nop
add
movsb
add
jb
or
loope
add
out
sbb
addb
xchg
inc
add
add
sbb
add
and
mov
jbe
insb
lret
and
dec
addb
leave
mov
dec
jae
add
out
adc
addb
jns
add
mov
aad
adc
divl
cmp
mov
mov
mov
cmp
movb
addr16
imul
push
add
mov
loopne
push
test
add
mov
rcll
dec
jmp
rol
add
xchg
add
add
mov
pop
loopne
rcr
xor
or
mov
and
pop
les
mov
bound
mov
add
imul
xor
andl
testb
add
xchg
cwtl
push
add
add
test
data16
mov
mov
pop
inc
add
sbbl
ret
inc
add
add
cmpsb
add
mov
mov
add
jne
add
pushf
push
add
add
and
add
mov
pop
mov
jge
xor
mov
cmpsb
add
loop
imul
add
aam
mov
in
and
mov
add
mov
add
mov
add
outsb
jnp
mov
xlat
or
mov
fidivs
jne
cmp
xchg
stc
mov
mov
lret
movb
adc
pop
xchg
add
rolb
add
add
jbe
out
movsb
add
pushf
test
lahf
dec
imul
add
in
mov
lcall
out
sti
adc
icebp
divl
hlt
add
mov
add
iret
sub
jmp
ret
push
add
aaa
fwait
jecxz
dec
sahf
loopne
icebp
jne
add
dec
rolb
pop
movb
push
mov
pop
faddl
daa
push
add
in
in
and
lock
pop
adc
cltd
pop
or
push
add
lcall
shl
dec
or
add
add
adc
ret
pop
pop
jns
xchg
das
or
xor
xor
add
push
dec
sbb
dec
jg
cwtl
and
ljmp
ljmp
das
xlat
outsb
fisubrl
sub
int
dec
sar
adc
inc
sub
insl
movb
cmpl
jns
mov
aaa
fsqrt
aad
pop
data16
insb
mov
add
add
nop
add
add
and
or
add
add
icebp
lods
pop
adc
scas
or
add
jecxz
add
js
daa
test
in
lods
nop
add
inc
push
add
fbld
add
insl
jne
sbb
inc
cmp
sbb
cmpsl
sbb
addb
clc
adc
dec
xchg
add
adc
popf
jb
cmp
mov
mov
ljmp
sbb
add
mov
dec
gs
add
data16
stc
inc
add
jl
arpl
in
lcall
inc
scas
pop
cmp
mov
add
dec
cwtl
dec
mov
jmp
add
rolb
rcll
add
add
sub
hlt
add
mov
jae
and
mov
dec
jl
add
add
clc
fwait
lods
push
jns
cli
sbb
add
jno
jp
add
sahf
cltd
andl
xchg
sbb
add
pop
repz
dec
pusha
add
add
xor
adc
lret
inc
scas
bound
mov
jo
mov
aaa
inc
add
xlat
sahf
incl
mov
push
xchg
add
add
ss
clc
mov
pop
xchg
pop
inc
add
jg
add
in
push
push
add
cmp
mov
cmp
mov
add
mov
pusha
add
mov
add
push
add
add
add
xchg
add
gs
add
add
mov
jle
icebp
test
lcall
xor
pop
out
icebp
mov
inc
jle
fadds
add
mov
xchg
add
cli
add
push
inc
insl
popf
pop
movb
add
lea
mov
lahf
cmp
adc
fcoms
xlat
jmp
dec
repnz
cld
sub
inc
js
in
xor
sub
push
add
add
mov
addb
pop
rcrl
mov
jg
mov
sbb
mov
push
add
add
add
add
add
mov
add
push
xchg
inc
add
add
add
inc
ljmp
add
clc
push
add
sub
ljmp
popf
aaa
cmp
lret
shrl
jo
test
shrl
sub
add
add
dec
aad
out
mov
add
add
ficoml
push
add
adc
mov
add
add
add
mov
push
add
js
xchg
add
in
push
inc
cmp
add
cli
fcmove
inc
in
jmp
cmp
xchg
add
adc
data16
pop
cld
mov
out
fidivs
add
iret
push
add
add
add
inc
stos
movsl
pop
pop
mov
add
cs
dec
jb
xchg
pushf
cltd
add
mov
jb
cmp
fildl
add
sbb
xor
jno
repnz
add
imul
mov
push
add
stos
jg
int
cmpsl
test
adc
ret
mov
loopne
dec
adc
add
xor
divl
adc
inc
add
enter
push
add
sbb
xor
dec
inc
cld
xlat
cli
mov
add
mov
mov
add
imul
inc
add
dec
stos
push
add
mov
outsb
pop
cmpsb
add
popf
stc
or
add
rolb
sub
call
nop
add
add
rolb
mov
addr16
add
add
test
repz
loopne
dec
lods
loopne
pop
or
addb
data16
nop
add
adc
cmpsb
add
add
push
dec
jnp
add
mov
add
add
mov
add
jmp
mov
xchg
sbb
push
add
scas
filds
xchg
jp
ja
add
pop
cmovp
and
add
add
add
loop,pt
inc
lock
mov
jns
xorl
or
mov
or
lret
nop
add
scas
jp
add
or
cwtl
lret
fisubl
or
or
loop
jo
int
adc
fstps
pop
xlat
jmp
add
and
mov
and
mov
xchg
add
add
add
repnz
push
gs
add
cmp
into
jnp
add
add
cmp
inc
imul
daa
sub
dec
add
popa
inc
add
mov
dec
cmp
add
add
aas
mov
fcos
mov
push
push
add
push
add
and
mov
dec
xchg
lea
add
rolb
mov
leave
movl
add
repnz
jae
add
hlt
sbb
add
add
and
fwait
cld
nop
jmp
xchg
add
lahf
popa
clc
repnz
jae
stc
add
or
jo
add
mov
push
mov
xchg
ret
add
test
cmp
sti
fwait
cld
nop
jmp
inc
push
lock
add
sbbl
add
add
add
dec
cmpw
fwait
cld
nop
jmp
add
jge
add
add
shrl
cld
nop
jmp
add
sub
add
dec
lods
push
mov
xchg
ret
jo
push
jge
shll
pop
pop
jmp
add
xor
cld
add
pop
fwait
cld
nop
jmp
cld
cmp
add
add
add
add
repnz
jae
ss
add
pop
clc
repnz
jae
faddl
faddl
jge
loopne
fmull
nop
jae
add
add
xchg
or
add
scas
enter
jae
outsl
jge
add
loop
push
fwait
cld
nop
jmp
add
add
cld
add
inc
add
pop
xor
clc
repnz
jae
add
push
add
nop
jmp
add
add
dec
stc
rep
clc
repnz
jae
addb
xchg
add
into
add
clc
repnz
jae
add
add
mov
movsl
clc
repnz
jae
add
add
or
add
add
adc
cld
nop
jmp
xor
call
push
mov
dec
leave
cmpsb
push
pop
add
add
add
adc
sldt
jge
xchg
cmp
cmp
fwait
cld
nop
jmp
push
lock
inc
xchg
add
add
xor
push
mov
xchg
ret
roll
scas
add
je
inc
push
mov
xchg
ret
test
mov
pushf
pushl
push
mov
xchg
ret
xchg
in
or
add
add
fwait
cld
nop
jmp
cld
jge
jge
sub
fwait
cld
nop
jmp
add
add
add
or
add
sbbb
add
push
sbb
add
mov
push
mov
clc
repnz
jae
xchg
in
add
push
mov
xor
imul
popf
add
sbbb
add
add
pop
push
mov
add
mov
add
add
adc
call
clc
repnz
jae
dec
dec
add
pop
mov
clc
repnz
jae
jge
out
jg
jl
xor
repnz
jae
je
add
insl
mov
push
mov
xchg
ret
bndldx
add
jae
dec
stc
add
add
call
add
add
add
add
add
mov
mov
xchg
ret
add
scas
add
rolb
pop
mov
clc
repnz
jae
stc
push
add
add
xchg
add
push
call
nop
jae
xchg
add
cmp
add
and
mov
push
clc
repnz
jae
add
push
hlt
add
popl
test
inc
add
in
faddl
add
cld
nop
jmp
push
xchg
add
outsl
add
repnz
jae
add
add
add
cld
dec
aam
out
shl
clc
repnz
jae
add
and
cld
nop
jmp
seta
ss
add
jae
movb
add
add
test
add
clc
repnz
jae
push
dec
movb
dec
mov
clc
repnz
jae
xor
add
dec
xor
pop
jb
mov
add
repnz
jae
add
add
sub
test
nop
jae
xchg
cmp
add
clc
repnz
jae
xchg
add
outsl
out
mov
clc
repnz
jae
add
dec
rorl
dec
je
xor
clc
repnz
jae
je
inc
add
add
jmp
incl
push
jge
xchg
add
add
add
repnz
jae
fisubrl
xchg
adc
out
xor
clc
repnz
jae
lock
mov
jl
jne
clc
repnz
jae
add
inc
xchg
pusha
add
outsl
loopne
cld
nop
jmp
cld
inc
xchg
add
add
mov
cld
nop
jmp
out
add
je
mov
pusha
clc
repnz
jae
divb
add
or
mov
clc
repnz
jae
out
jge
clc
xchg
mov
push
mov
xchg
ret
add
adc
add
add
push
add
psubw
inc
movb
mov
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
add
ficomps
add
clc
repnz
jae
cld
add
add
mov
push
mov
xchg
ret
sub
add
roll
adc
icebp
push
cmpsl
dec
pop
clc
repnz
jae
movsbl
add
add
add
cmp
cld
nop
jmp
addl
adc
push
clc
repnz
jae
jge
add
lock
clc
repnz
jae
mov
adc
mov
mov
clc
repnz
jae
cld
add
in
in
add
mov
clc
repnz
jae
add
mov
xor
add
fwait
cld
nop
jmp
test
repz
repnz
jae
xor
add
add
and
mov
push
mov
xchg
ret
sbb
call
jno
ret
clc
repnz
jae
xor
xchg
mov
add
rolb
add
mov
clc
repnz
jae
xchg
add
pop
clc
repnz
jae
hlt
test
add
cli
mov
clc
repnz
jae
add
add
clc
repnz
jae
add
dec
pop
jne
clc
repnz
jae
add
icebp
cmp
cld
nop
jmp
hlt
sbb
push
hlt
add
add
repz
incl
xor
add
cmc
add
adc
push
add
das
push
clc
repnz
jae
add
neg
in
add
adc
repnz
jae
add
mov
repnz
jae
addb
add
add
push
add
push
mov
xchg
ret
addl
jl
sbb
repnz
jae
insl
cld
add
add
jmp
add
mov
inc
add
call
xor
push
push
mov
xchg
ret
out
insl
add
xchg
in
xor
push
lea
clc
repnz
jae
addl
add
mov
fwait
cld
nop
jmp
hlt
cld
add
scas
cmp
mov
sub
repnz
jae
add
ds
add
add
andl
repnz
jae
push
add
add
testb
add
inc
add
cwtl
add
testb
iret
je
clc
repnz
jae
add
gs
jne
fwait
cld
nop
jmp
add
add
mov
xchg
ret
cmp
add
popf
call
clc
repnz
jae
push
add
add
fimull
repnz
jae
inc
cld
mov
dec
inc
add
filds
xchg
ret
cld
add
cld
stc
add
dec
push
mov
xchg
ret
add
or
add
fwait
cld
nop
jmp
insl
add
addb
add
jae
hlt
add
add
mov
inc
rcrl
repnz
jae
add
add
dec
add
mov
ret
clc
repnz
jae
xor
add
add
pop
xor
fwait
cld
nop
jmp
outsl
sbb
mov
rep
cmpl
fwait
cld
nop
jmp
add
add
mov
xchg
ret
push
testb
hlt
add
add
clc
repnz
jae
add
bound
mov
shl
clc
repnz
jae
inc
add
add
xchg
loop
clc
repnz
jae
add
add
mov
clc
repnz
jae
stc
addl
sbb
popa
add
mov
xchg
ret
add
push
call
add
mov
xchg
ret
movl
or
rcll
add
fwait
cld
nop
jmp
cld
or
je
es
loope
jne
clc
repnz
jae
dec
out
test
mov
xchg
ret
jge
stc
add
decl
push
mov
xchg
ret
add
add
xchg
mov
repnz
jae
movb
sbb
lret
fwait
cld
nop
jmp
add
inc
add
add
and
cld
nop
jmp
xchg
xchg
add
and
add
rol
clc
repnz
jae
add
inc
add
inc
adc
test
fmuls
mov
nop
jmp
insl
cld
cmc
cmc
add
mov
nop
add
xbegin
lret
sbb
add
add
outsl
outsl
add
jge
fwait
cld
nop
jmp
sub
add
mov
mov
repnz
jae
add
add
clc
repnz
jae
or
je
pusha
fwait
cld
nop
jmp
movb
jo
add
add
repnz
jae
add
out
push
add
jecxz
cmp
nop
jmp
mov
hlt
add
mov
clc
repnz
jae
add
scas
movl
and
fwait
cld
nop
jmp
add
cwtl
add
test
adc
jge
xor
xchg
add
add
stos
clc
repnz
jae
add
add
add
shll
ja
inc
clc
repnz
jae
add
xchg
out
add
mov
xchg
ret
ds
jge
add
push
mov
xchg
ret
or
adc
add
adc
repnz
jae
add
test
add
clc
repnz
jae
outsl
in
cld
enter
fwait
cld
nop
jmp
add
add
add
ss
imul
clc
repnz
jae
sbb
lds
nop
jae
push
fiaddl
xor
add
mov
clc
repnz
jae
cmc
add
xor
add
inc
mov
stos
add
fwait
cld
nop
jmp
add
add
add
add
loope
xor
clc
repnz
jae
xchg
add
test
fwait
cld
nop
jmp
xor
clc
jge
cld
or
decl
mov
adc
repnz
jae
cmp
hlt
dec
jnp
dec
or
mov
xchg
ret
add
push
ds
clc
repnz
jae
call
add
imul
clc
repnz
jae
mov
add
add
add
mov
fwait
cld
nop
jmp
add
dec
dec
add
inc
and
cld
nop
jmp
movl
jge
add
mov
clc
repnz
jae
dec
add
rorl
nop
jae
add
inc
add
add
adc
push
cltd
mov
fwait
cld
nop
jmp
add
add
clc
repnz
jae
mov
je
add
add
push
mov
xchg
ret
fidivl
mov
insl
mov
add
add
or
add
ret
jne
je
pop
dec
fwait
cld
nop
jmp
jge
add
add
add
test
pop
add
add
repnz
jae
add
test
push
mov
xchg
ret
add
xchg
add
pusha
add
pop
jae
repnz
jae
dec
add
cwtl
sldt
clc
repnz
jae
imulb
jmp
jmp
jmp
ss
add
add
add
in
add
push
mov
xchg
ret
push
add
add
mov
fwait
cld
nop
jmp
add
xchg
add
inc
mov
add
cld
nop
jmp
inc
outsl
cmc
cld
add
push
push
mov
xchg
ret
mov
add
push
fwait
cld
nop
jmp
stc
add
xchg
add
add
jmp
add
inc
sub
add
add
xchg
inc
xchg
push
call
clc
repnz
jae
add
popa
add
addb
add
lret
jne
clc
repnz
jae
add
add
push
clc
repnz
jae
push
push
add
xor
clc
repnz
jae
push
add
or
div
fwait
cld
nop
jmp
cld
scas
sbb
cwtl
mov
and
mov
mov
clc
repnz
jae
call
xchg
je
clc
repnz
jae
add
add
add
push
testl
fwait
cld
nop
jmp
xchg
mov
add
sub
clc
repnz
jae
add
lock
mov
sub
add
jge
outsl
lock
in
add
push
fwait
cld
nop
jmp
add
add
push
add
ja
dec
push
mov
xchg
ret
fiaddl
xor
movzwl
clc
repnz
jae
add
xor
movsb
jmp
add
stc
xchg
xor
fiaddl
je
popa
clc
repnz
jae
dec
inc
movb
add
inc
jno
add
movsb
clc
repnz
jae
add
add
dec
dec
add
repz
repnz
jae
add
outsb
and
push
mov
xchg
ret
add
xor
clc
repnz
jae
add
add
sldt
add
add
fmull
add
repnz
jae
sbb
jbe,pt
jns
add
jecxz
inc
add
add
add
inc
cmp
cld
nop
jmp
cmp
or
add
clc
repnz
jae
dec
add
xchg
jmp
add
dec
out
stc
or
cld
data16
lea
fwait
cld
nop
jmp
je
add
cwtl
xchg
add
clc
repnz
jae
add
cld
add
jo
popl
add
repnz
jae
add
add
add
push
mov
xchg
ret
add
add
faddl
mov
clc
repnz
jae
add
push
add
scas
pop
decb
jae
sldt
add
dec
xchg
and
pop
mov
clc
repnz
jae
cwtl
add
andl
add
clc
repnz
jae
add
add
add
jg
clc
repnz
jae
ss
paddsw
push
fwait
cld
nop
jmp
add
add
nop
jae
add
add
jp
jo
fwait
cld
nop
jmp
jo
add
out
add
clc
repnz
jae
add
cwtl
add
sbb
clc
repnz
jae
add
add
add
fwait
cld
nop
jmp
add
add
add
clc
sub
inc
add
xchg
in
clc
add
cld
add
add
rorl
arpl
add
repnz
jae
dec
add
dec
mov
addb
mov
add
clc
repnz
jae
inc
movl
xlat
and
mov
clc
repnz
jae
xchg
add
add
les
cmpsl
inc
add
mov
sub
clc
repnz
jae
mov
rolb
in
je
clc
repnz
jae
add
scas
push
add
pop
or
cld
nop
jmp
add
add
add
clc
repnz
jae
dec
push
outsl
test
mov
jae
testb
dec
outsl
movl
sti
shr
clc
repnz
jae
fiaddl
add
push
push
add
jae
add
adcl
jge
dec
cmp
repnz
jae
xchg
add
cld
pop
push
mov
xchg
ret
out
dec
add
add
add
add
or
nop
jae
inc
add
mov
clc
repnz
jae
add
add
repnz
jae
in
add
add
add
mov
xchg
ret
add
outsl
cmp
add
cld
push
fwait
cld
nop
jmp
je
add
sbb
mov
xchg
ret
dec
call
add
sbb
jae
add
add
add
add
add
mov
xchg
ret
jge
dec
jge
add
repnz
jae
add
mov
mov
xchg
ret
add
movl
add
mov
mov
or
add
repnz
jae
add
add
add
jmp
add
add
add
add
jns
xchg
add
fwait
cld
nop
jmp
out
call
mov
clc
repnz
jae
xchg
add
add
je
sub
repnz
jae
inc
add
push
xchg
cmp
mov
adc
repnz
jae
cld
insl
add
in
rolb
rolb
rcr
pop
clc
repnz
jae
xchg
inc
add
addl
jmp
dec
add
add
inc
add
hlt
add
mov
clc
repnz
jae
add
add
dec
add
push
clc
repnz
jae
or
push
scas
add
add
push
mov
xchg
ret
add
dec
add
add
fwait
cld
nop
jmp
insl
je
add
add
adc
repnz
jae
inc
add
mov
das
and
push
mov
xchg
ret
add
add
sub
inc
add
add
ds
lret
and
clc
repnz
jae
mov
push
inc
add
pop
clc
repnz
jae
dec
add
lock
add
xor
clc
repnz
jae
ss
jo
add
mov
add
repnz
jae
adc
add
add
mov
clc
repnz
jae
fisubrl
ss
test
repnz
jae
add
sub
nop
jae
add
or
add
push
mov
xchg
ret
add
cld
xchg
add
and
repnz
jae
add
out
add
mov
clc
repnz
jae
out
add
add
push
mov
xchg
ret
add
outsl
add
rolb
mov
add
scas
mov
clc
repnz
jae
je
stc
add
mov
clc
repnz
jae
xor
inc
add
mov
clc
repnz
jae
add
add
jae
inc
xchg
add
popa
add
add
nop
jmp
outsl
roll
addl
mov
clc
repnz
jae
sub
add
add
movb
mov
clc
repnz
jae
add
or
and
add
mov
push
mov
xchg
ret
add
call
add
push
mov
xchg
ret
add
cmp
add
mov
push
clc
repnz
jae
add
mov
sub
jge
or
mov
add
lock
xor
add
in
icebp
inc
add
insl
sbb
push
add
stc
mov
fwait
cld
nop
jmp
add
add
jbe
imul
nop
jae
cmp
out
jg
rcrb
repnz
jae
push
sbb
cwtl
mov
pop
imul
clc
repnz
jae
add
or
cld
add
idiv
call
rorl
leave
fwait
cld
nop
jmp
add
add
add
outsl
je
add
add
add
add
add
repnz
jae
je
add
jp
clc
repnz
jae
add
add
mov
clc
repnz
jae
xchg
jge
cld
insl
popa
xchg
push
mov
clc
repnz
jae
mov
popa
xchg
add
mov
fwait
cld
nop
jmp
mov
call
xor
clc
repnz
jae
xchg
je
add
xchg
dec
loop
cltd
imul
clc
repnz
jae
add
sldt
add
pop
lahf
add
clc
repnz
jae
add
add
jge
mov
push
clc
repnz
jae
mov
xor
add
xor
clc
repnz
jae
add
add
add
add
mov
xchg
ret
add
cwtl
add
add
repnz
jae
clc
add
add
cld
nop
jmp
cld
add
add
scas
mov
push
mov
xchg
ret
add
addb
shrl
mov
sbb
add
sub
add
stos
add
lock
int3
add
clc
repnz
jae
add
add
add
movb
repnz
jae
popa
imul
in
fdivl
clc
repnz
jae
add
repz
jmp
add
mov
or
jae
sbb
dec
xchg
leave
ror
fwait
cld
nop
jmp
add
ss
xor
xor
push
mov
xchg
ret
add
inc
pop
mov
clc
repnz
jae
add
je
and
mov
clc
repnz
jae
dec
lock
add
push
mov
xchg
ret
cwtl
clc
add
cmp
clc
repnz
jae
dec
outsl
add
add
add
aam
fwait
add
clc
repnz
jae
test
add
inc
clc
repnz
jae
cwtl
or
and
clc
repnz
jae
add
test
dec
add
mov
xchg
ret
xchg
add
add
xorl
add
add
repnz
jae
or
add
jge
shrl
clc
repnz
jae
xor
add
add
add
pop
push
mov
xchg
ret
add
xor
xlat
test
jae
add
or
jno
jo
or
rolb
xchg
ret
cld
str
xor
pop
clc
repnz
jae
add
add
add
lock
adc
add
bound
repnz
jae
subb
rolb
cld
mov
push
mov
xchg
ret
add
add
add
clc
repnz
jae
add
add
add
add
clc
repnz
jae
lock
add
mov
clc
repnz
jae
mov
add
popa
dec
rcr
add
clc
repnz
jae
movl
and
clc
repnz
jae
add
cmp
sub
adcb
clc
repnz
jae
ss
or
adc
add
add
aad
add
add
fwait
cld
nop
jmp
add
add
hlt
cwtl
add
clc
repnz
jae
add
jge,pt
adc
push
push
mov
xchg
ret
cld
mov
add
add
add
fwait
cld
nop
jmp
scas
add
cwtl
add
sub
clc
repnz
jae
inc
cmc
lock
add
push
push
mov
xchg
ret
add
dec
outsl
cld
stc
add
filds
xchg
ret
mov
sub
stc
xchg
add
mov
fwait
cld
nop
jmp
add
add
dec
jge
add
xor
clc
repnz
jae
add
add
add
dec
cmp
repnz
jae
add
add
add
arpl
nop
jae
test
add
inc
testb
push
clc
repnz
jae
je
popa
dec
add
add
sti
cmpl
fwait
cld
nop
jmp
add
out
adc
add
and
clc
repnz
jae
add
add
and
jnp
popa
add
mov
xchg
ret
add
movb
sbb
pop
sldt
add
add
add
add
add
push
fcompl
xor
iret
push
clc
repnz
jae
insl
mov
or
adc
add
clc
repnz
jae
dec
add
add
add
nop
jae
cld
jge
add
add
iret
mov
push
mov
xchg
ret
add
popa
addb
push
add
push
push
mov
xchg
ret
add
add
je
cld
xchg
stc
mov
clc
repnz
jae
jge
sub
nop
jae
dec
add
xchg
inc
loopne
jnp
add
adc
add
xbegin
add
cld
nop
jmp
call
ds
frstor
xor
add
clc
repnz
jae
roll
jl
rcrb
stc
call
add
dec
cmp
repnz
jae
add
insl
ss
add
pusha
add
push
mov
xchg
ret
add
add
stos
lods
push
mov
xchg
ret
xchg
add
push
add
xchg
inc
scas
mov
clc
repnz
jae
xchg
add
jge
add
add
lcall
add
add
add
add
add
pushl
clc
repnz
jae
add
jne
mov
fwait
cld
nop
jmp
movl
add
mov
inc
add
add
repnz
jae
add
popa
add
leave
push
fwait
cld
nop
jmp
add
stc
lock
xchg
jge
not
push
mov
xchg
ret
idivb
add
add
inc
or
mov
xchg
ret
cmc
add
outsl
add
nop
jae
cwtl
add
add
int
add
lock
out
add
popa
clc
repnz
jae
scas
jge
add
add
xor
inc
jle
mov
add
clc
repnz
jae
inc
add
add
add
repz
mov
xchg
ret
add
push
add
faddl
push
clc
repnz
jae
cmp
push
sbb
hlt
sub
pop
clc
repnz
jae
add
xchg
inc
add
scas
adc
and
mov
ret
add
push
add
add
insl
add
stc
movl
mov
xchg
ret
jo
add
push
mov
xchg
ret
add
add
add
pop
push
mov
xchg
ret
add
out
add
pushf
inc
push
mov
xchg
ret
add
add
add
mov
add
add
repnz
jae
add
jl
loop
push
mov
xchg
ret
jge
dec
add
std
push
push
mov
xchg
ret
push
add
add
dec
cwtl
push
push
fwait
cld
nop
jmp
inc
inc
fdivr
add
jo
add
jae
outsl
add
add
repz
repnz
jae
add
dec
add
fidivrl
and
clc
repnz
jae
cmp
add
fdivr
jne
clc
repnz
jae
add
add
subl
pushf
pop
add
add
push
mov
xchg
ret
inc
push
add
out
mov
fwait
cld
nop
jmp
inc
insl
add
cld
or
cmpsl
rolb
xchg
ret
stc
add
add
add
testb
cs
push
mov
xchg
ret
push
jge
fiaddl
add
pushl
clc
repnz
jae
add
stc
dec
add
popf
pop
clc
repnz
jae
sbb
bndldx
xchg
or
repnz
add
xchg
sub
popa
add
repnz
jae
add
xchg
add
or
add
lock
stc
inc
add
add
clc
repnz
jae
jo
movl
in
cmp
test
repnz
jae
add
add
add
nop
jmp
hlt
add
dec
add
xchg
mov
mov
clc
repnz
jae
out
dec
divb
add
clc
repnz
jae
add
xor
and
add
repnz
jae
jge
je
add
jae
sub
push
mov
xchg
ret
clc
add
add
and
repnz
jae
add
push
add
xchg
bound
mov
jmp
clc
repnz
jae
dec
in
add
insl
xchg
incl
cwtl
add
add
add
push
scas
movzwl
clc
repnz
jae
add
shll
push
clc
repnz
jae
add
add
subl
push
mov
xchg
ret
add
mov
or
fwait
cld
nop
jmp
add
add
lock
scas
rolb
iret
xor
push
mov
xchg
ret
add
lahf
push
clc
repnz
jae
add
movb
call
test
repnz
jae
add
xchg
add
jae
add
add
add
inc
decl
nop
jae
push
outsl
xchg
clc
repnz
jae
xor
add
clc
cld
popa
add
jle
clc
repnz
jae
inc
add
add
cld
popa
fistpll
fwait
cld
nop
jmp
hlt
add
add
fwait
cld
nop
jmp
dec
cwtl
cmc
outsl
jo
add
add
pushl
push
mov
xchg
ret
add
add
pop
dec
fwait
cld
nop
jmp
rorl
add
lock
add
cmp
fwait
cld
nop
jmp
lock
je
xor
clc
repnz
jae
add
hlt
ss
add
add
jns
clc
repnz
jae
add
dec
add
cmpw
fwait
cld
nop
jmp
add
add
add
fisubs
xor
add
clc
repnz
jae
add
test
fwait
cld
nop
jmp
add
movb
add
ss
add
pop
push
mov
xchg
ret
add
je
add
movsb
add
and
mov
mov
push
mov
xchg
ret
hlt
stc
or
push
sub
fwait
cld
nop
jmp
push
cmp
dec
outsb
add
clc
repnz
jae
inc
addb
push
add
add
ficomps
cld
nop
jmp
push
roll
add
outsl
in
add
iret
add
clc
repnz
jae
xor
addl
rolb
sarl
clc
repnz
jae
add
add
clc
repnz
jae
xchg
xchg
add
xor
sbb
movb
repnz
jae
paddb
push
add
mov
fwait
cld
nop
jmp
add
popl
clc
repnz
jae
add
add
add
mov
repnz
jae
jge
add
arpl
jmp
add
lock
jo
imulb
push
jl
fwait
cld
nop
jmp
push
add
add
push
mov
xchg
ret
roll
add
movl
or
repnz
jae
dec
add
or
add
rolb
xchg
ret
mov
xchg
jg
hlt
add
add
repnz
jae
ds
add
add
clc
repnz
jae
dec
faddl
add
subl
xor
add
clc
repnz
jae
add
shr
clc
repnz
jae
push
add
je
push
mov
xchg
ret
add
mov
mov
cmc
cltd
shl
push
mov
xchg
ret
add
add
fwait
cld
nop
jmp
inc
jge
dec
add
dec
add
adc
repnz
jae
push
add
add
dec
fbld
xor
add
clc
repnz
jae
scas
stc
in
out
inc
push
mov
xchg
ret
fisubrl
xchg
xchg
pushf
push
clc
repnz
jae
add
jge
add
add
add
mov
xchg
ret
jo
insl
add
sub
sub
add
add
add
xchg
add
add
add
jae
add
add
jo
add
adc
leave
mov
push
mov
xchg
ret
sbb
jne
clc
repnz
jae
push
lock
push
mov
add
add
test
adc
sti
push
clc
repnz
jae
adcl
and
cld
nop
jmp
call
add
sbb
rclb
rcl
add
popa
stc
insl
mov
add
fwait
cld
nop
jmp
cld
add
push
inc
push
add
cld
nop
jmp
sbb
add
nop
jae
movb
sub
test
mov
pushf
mov
xchg
popf
testl
push
clc
repnz
jae
add
add
add
add
es
pop
push
mov
xchg
ret
add
mov
fwait
mov
clc
repnz
jae
cld
stc
xor
clc
add
call
clc
repnz
jae
add
push
push
add
loope
inc
add
stc
scas
dec
add
xor
jne
je
repnz
jae
jge
add
test
pop
mov
clc
repnz
jae
add
out
cmp
inc
int3
push
push
mov
xchg
ret
stc
cld
je
mulb
and
popa
sar
add
clc
repnz
jae
add
test
shr
fwait
cld
nop
jmp
add
lock
cld
add
add
clc
repnz
jae
add
test
test
out
clc
repnz
jae
add
sbb
mov
push
mov
xchg
ret
add
push
clc
repnz
jae
dec
push
scas
je
or
push
cs
clc
repnz
jae
cld
add
xor
jb
add
insl
xor
clc
repnz
jae
add
add
mov
clc
repnz
jae
add
add
add
add
mov
push
push
mov
xchg
ret
push
jge
movl
jmp
add
xrstors
cmpeqps
clc
repnz
jae
add
add
out
add
test
fwait
cld
nop
jmp
inc
add
xor
mov
xchg
ret
add
cmovs
push
repnz
jae
add
movb
add
fwait
cld
nop
jmp
add
add
jge
call
push
mov
xchg
ret
jge
add
add
xlat
sub
jge
clc
repnz
jae
inc
add
add
cld
mov
xchg
clc
repnz
jae
add
outsl
mov
adc
test
clc
repnz
jae
mov
jmp
repnz
jae
add
addb
inc
fwait
cld
nop
jmp
inc
add
add
sub
in
add
add
clc
repnz
jae
add
add
xchg
scas
adc
add
ja
inc
add
lock
sti
push
fwait
cld
nop
jmp
add
ss
add
clc
repnz
jae
xchg
add
inc
mov
nop
jmp
add
add
add
scas
adc
sub
repnz
jae
mov
push
add
add
or
les
add
add
fcos
incl
pop
clc
repnz
jae
add
add
add
add
fdivr
repnz
jae
xor
inc
add
cwtl
add
jb
mov
repnz
jae
outsl
add
xchg
outsl
xchg
add
cld
nop
jmp
xchg
adc
cmp
mov
clc
repnz
jae
add
rcrb
jecxz
inc
addb
sub
add
add
fwait
cld
nop
jmp
add
sub
mov
xchg
ret
je
xchg
push
cmp
jbe
clc
repnz
jae
addl
cltd
mov
clc
repnz
jae
add
add
add
fisubrs
andl
incl
popa
faddl
lock
shr
add
xchg
add
xchg
xor
pop
xchg
fwait
cld
nop
jmp
cld
xchg
mov
jo
add
add
add
out
mov
push
mov
xchg
ret
or
add
lahf
xchg
push
mov
xchg
ret
add
sbb
clc
repnz
jae
inc
add
sldt
add
xor
add
clc
repnz
jae
add
add
jmp
add
xor
mov
flds
xchg
ret
or
cld
add
add
add
clc
repnz
jae
xchg
addb
test
mov
adc
adc
nop
adc
jecxz
add
push
clc
repnz
jae
jo
add
add
fldl
sbb
inc
add
add
add
push
add
shr
fwait
cld
nop
jmp
add
add
add
nop
jae
add
add
push
dec
sub
jae
cld
testb
add
test
repnz
jae
add
xchg
cmc
out
shrl
nop
jae
add
cld
add
pop
pusha
clc
repnz
jae
add
add
mov
jo
lea
push
mov
xchg
ret
add
add
and
clc
repnz
jae
cwtl
addl
and
mov
cld
pop
push
mov
xchg
ret
xchg
add
add
sbbl
int
call
jne
ret
clc
repnz
jae
ds
add
pop
push
mov
xchg
ret
outsl
dec
fiaddl
add
jge
mov
clc
repnz
jae
cld
add
orb
nop
add
rolb
jnp
popa
push
mov
xchg
ret
cmc
add
add
hlt
push
cmp
push
mov
xchg
ret
add
addb
fisttpll
cld
nop
jmp
add
scas
add
jge
inc
and
clc
repnz
jae
popa
dec
add
je
add
xor
clc
repnz
jae
mov
cmp
int3
mov
clc
repnz
jae
add
xchg
add
dec
adc
mov
xchg
ret
cvttps2pi
push
sbb
fwait
cld
nop
jmp
add
add
add
add
or
clc
repnz
jae
add
mov
clc
repnz
jae
sub
scas
test
popa
add
repnz
jae
xorl
xchg
sbb
in
clc
repnz
jae
lock
add
xor
cmpl
cmp
cld
nop
jmp
dec
add
add
add
mov
repnz
jae
add
add
add
jmp
nop
jae
add
clc
ja
push
mov
add
out
add
jmp
xor
repnz
jae
inc
add
or
rcrl
jb
clc
repnz
jae
push
add
add
add
adc
fwait
cld
nop
jmp
add
out
push
jne
clc
repnz
jae
cld
push
stc
bound
mov
cld
nop
jmp
add
add
cmp
mov
clc
repnz
jae
or
movb
mov
fwait
cld
nop
jmp
cld
cmp
add
mulb
add
iret
je
clc
repnz
jae
test
rolb
jb
add
mov
add
mov
clc
repnz
jae
push
xchg
faddl
jge
jne
clc
repnz
jae
xchg
jge
imul
nop
jae
add
add
add
add
clc
repnz
jae
add
add
insb
lods
clc
repnz
jae
add
add
push
add
fwait
cld
nop
jmp
add
add
repnz
jae
add
dec
add
add
pusha
clc
repnz
jae
push
add
shl
xor
push
sbb
push
mov
xchg
ret
mov
add
testb
xor
push
mov
xchg
ret
add
add
pusha
add
cld
nop
jmp
add
cmc
add
add
add
xchg
cmpl
cmpsb
jmp
jge
popa
popa
add
and
fwait
cld
nop
jmp
add
test
loopne
lahf
call
push
mov
xchg
ret
rorl
add
aaa
incb
xbegin
and
incl
add
add
push
mov
xchg
ret
inc
inc
xchg
xor
mov
repnz
jae
xchg
add
pop
mov
fwait
cld
nop
jmp
add
add
add
push
mov
xchg
ret
scas
add
clc
add
dec
push
mov
xchg
ret
dec
fdivr
add
add
push
clc
repnz
jae
fiaddl
add
pop
mov
clc
repnz
jae
testb
add
add
lcall
out
ljmp
andps
jecxz
incl
add
add
jge
add
movsb
add
pushf
pop
clc
repnz
jae
add
push
call
push
int
pop
jae
repnz
jae
adc
push
mov
cmp
jmp
movl
add
mov
test
lcall
std
incl
add
or
jmp
verw
sub
jo
mov
lods
mov
clc
repnz
jae
add
loop
or
xchg
inc
add
xor
add
push
mov
xchg
ret
add
add
inc
or
negl
out
incl
or
mov
clc
repnz
jae
add
add
cmc
insl
stos
je
clc
repnz
jae
cld
dec
add
mov
inc
add
xor
das
add
mov
lds
mov
sbb
jae
inc
mov
xchg
xchg
push
add
cmp
in
jmp
sahf
lahf
int3
loop
je
lahf
arpl
jecxz
add
mov
push
testb
push
push
fbld
cmp
stc
or
mov
add
or
add
add
ds
mov
loop
cmp
add
or
add
aaa
add
xor
je
mov
mov
add
nop
add
mov
int3
xchg
add
sbb
push
add
insl
mov
add
rcll
movsb
add
mov
ret
dec
sub
ds
mov
add
add
mov
sub
add
movb
dec
jno
jmp
add
push
mov
aaa
out
ficoms
pushf
adc
or
sbb
into
sti
ret
sub
and
lahf
outsl
subl
test
add
pusha
add
add
addb
test
cmc
xchg
into
add
test
or
add
pop
mov
in
mov
dec
add
add
adc
sub
add
and
call
mov
lock
jecxz
xlat
push
mov
mov
add
push
add
pop
fadds
and
mov
mov
mov
mov
jae
add
inc
add
dec
xor
jge
add
lret
pushf
outsl
hlt
add
jno
add
add
mov
mov
fcomip
fwait
daa
cmpsl
or
push
add
mov
mov
add
add
das
sub
arpl
add
add
inc
add
dec
mov
je
aaa
addr16
push
scas
dec
push
add
jns
data16
jns
add
add
add
std
or
bound
mov
or
add
pop
inc
add
mov
rolb
adc
pop
xchg
pop
adc
adc
push
mov
pop
ja
rolb
cld
testl
add
add
add
fldt
pop
scas
mov
push
nop
add
or
add
add
sbb
movsb
add
xor
iret
cmp
and
dec
inc
add
xchg
jecxz
cltd
adc
xor
push
add
xlat
adc
pop
bound
mov
adc
add
ret
jmp
stc
mov
add
sub
add
and
add
popf
push
add
mov
cmc
ret
jne
test
mov
add
mov
sub
pop
out
cmpsl
mov
add
add
cmp
mov
imul
pop
or
nop
add
cwtl
add
outsb
pop
fsubrs
add
nop
add
stos
mov
add
xchg
add
pop
mov
add
in
jg
add
mov
add
add
mov
or
and
add
push
add
add
inc
add
add
add
dec
inc
ljmp
add
adc
mov
and
adc
call
mov
push
loope
xchg
mov
push
add
movsl
push
ljmp
cmp
add
jp
outsl
or
xchg
sbb
add
jae
xchg
add
mov
cmp
and
inc
mov
sbb
push
test
out
add
cmp
imul
add
add
cmp
pop
or
insb
fwait
subl
xor
sbb
andl
out
sbb
loopne
jb
push
add
add
xor
pop
cltd
sbb
add
xchg
cwtl
pop
mov
jg
nop/reserved
mov
add
add
mov
and
mov
mov
fnstcw
add
or
add
add
lahf
pop
add
push
add
in
add
add
add
mov
daa
inc
out
add
sbb
jle
inc
xor
mov
jne
out
cmp
pusha
add
sahf
adc
dec
pop
inc
add
or
jmp
add
add
outsb
in
add
dec
adc
lahf
add
mov
add
in
add
mov
fdivrs
push
add
leave
adc
add
pop
movsb
add
inc
add
add
mov
push
add
add
sbb
add
add
or
xor
push
addb
add
aam
cmp
add
add
loopne
add
or
mov
mov
fdivrs
add
out
add
sbb
sbb
add
cmpl
xchg
add
ja
mov
mov
mov
add
xchg
inc
in
mov
loop
call
add
movsb
add
add
std
lret
xchg
inc
dec
mov
and
dec
cmp
add
sbb
add
stos
lcall
and
jns
scas
cs
add
fimuls
pop
and
scas
mov
pop
mov
add
fsubs
cmpsl
jns
or
add
add
jns
push
mov
jp
jns
add
push
rcll
add
mov
sub
mov
stos
mov
mov
add
clc
ret
add
add
imul
add
mov
in
jl
inc
add
add
and
and
push
mov
add
mov
and
mov
lahf
sub
add
aas
adc
out
ljmp
xor
lret
add
cltd
or
add
stc
ret
add
and
out
lcall
mov
mov
or
push
pop
imul
shrl
call
xchg
add
inc
add
add
jg
jge
add
sub
mov
push
jo
aas
loope
testb
add
mov
xchg
mov
sbb
add
add
jne
ret
push
add
push
add
pop
movsb
add
sub
sbb
inc
add
sub
and
add
lcall
inc
cmpsb
add
es
or
add
shl
int3
addps
je
decb
jno
add
or
loope
add
sbb
js
aam
outsl
or
push
add
movl
sahf
mov
out
vpmacsswd
add
add
add
add
in
ret
add
mov
out
xorl
rolb
jae
xor
dec
sub
add
mov
add
lods
or
or
pusha
add
pop
in
dec
fadds
add
add
jmp
in
lahf
pop
mov
into
mov
dec
sbb
arpl
add
push
add
mov
jne
je
or
push
push
add
xchg
mov
movsl
outsb
pop
pop
push
jno
pop
push
imul
add
mov
xor
sbb
addb
add
add
mov
xchg
mov
pop
mov
in
pop
add
mov
add
lds
fmulp
rolb
icebp
nop
add
inc
add
mov
mov
fst
add
add
cmpsl
repz
sbb
pusha
add
add
add
ja
add
mov
add
add
popf
out
call
rolb
xchg
mov
or
adc
or
add
add
sti
or
adc
cltd
push
int3
inc
jl
add
lret
mov
adc
repnz
add
adc
icebp
pop
pop
mov
adc
and
mov
and
int
inc
add
add
int
add
int
lcall
add
lds
xchg
in
mov
mov
add
push
mov
adc
daa
loopne
addb
movsb
add
add
add
add
enter
mov
add
add
add
add
adc
cmp
pop
addb
mov
and
mov
lock
mov
adc
add
mov
add
subl
add
mov
cwtl
push
add
sti
xor
pop
pop
sub
jp
add
les
sub
pop
ljmp
pop
in
push
add
add
ja
fnstcw
sub
sbb
push
add
push
movb
add
add
cmpsl
loop
iret
jge
add
add
xor
jecxz
cmp
aaa
cmp
pop
pop
das
std
sbb
add
dec
add
and
xchg
jmp
jae
or
lret
sub
add
in
xchg
ljmp
mov
mov
xchg
add
testb
inc
add
in
loop
xchg
js
add
xlat
mov
jle
jo
jg
adc
roll
lahf
xor
aam
cmp
std
adc
je
dec
data16
add
shrl
stc
xor
leave
out
adc
mov
mov
mov
pusha
add
xor
add
adc
push
out
out
push
sub
jns
add
out
add
fistps
xor
sbb
leave
mov
das
in
mov
and
jmp
add
add
pop
mov
aam
lret
out
mov
xor
xor
and
in
mov
mov
xchg
add
mov
leave
jnp
xor
inc
xchg
js
cmpsb
add
add
clc
test
es
mov
ds
mov
xchg
add
lods
mov
add
xor
jp
add
and
mov
add
in
cmc
add
movb
add
call
in
je
in
popa
and
lcall
adc
inc
daa
in
pop
pushf
in
mov
inc
add
pop
mov
sbb
mov
fnstenv
add
std
sbb
xor
add
int
or
add
pop
jle
dec
pusha
add
jge
add
out
mov
hlt
add
xchg
add
add
insl
aas
movb
add
cmp
test
jge
jp
sbb
mov
mov
xor
xchg
mov
push
add
lcall
jnp
add
add
add
xor
push
add
add
mov
addb
decl
jnp
add
mov
mov
add
jns
mov
mov
dec
mov
mov
adc
mov
jnp
loope
xor
data16
xchg
mov
mov
add
mov
xchg
ljmp
movsb
add
sahf
cli
stos
inc
pop
stos
fiadds
push
and
mov
add
fisttps
xchg
add
mov
or
sbb
add
add
add
jo
sub
lahf
dec
addb
adc
and
arpl
jo
sbb
sub
stc
imul
jnp
add
add
add
add
repnz
jmp
popa
test
and
add
sub
inc
add
xchg
mov
add
shll
mov
add
sar
lods
testb
sbb
mov
add
pop
es
lret
rcrl
dec
lahf
jmp
add
dec
lahf
insb
lods
dec
testb
fnstsw
jae
add
sbb
add
aam
cli
adc
add
test
mov
add
add
add
in
xchg
add
repz
cmp
pop
dec
movsl
pushf
les
add
mov
test
data16
add
push
mov
mov
mov
gs
insb
jmp
jns
insb
xchg
loop
adc
ja
add
add
add
pusha
add
ss
inc
add
sbb
out
repz
sub
add
jmp
repz
add
ss
insb
repnz
add
test
xchg
add
add
dec
jno
xor
inc
push
add
js
fisubs
mov
sbb
push
enter
add
into
sub
shll
push
add
pop
sub
movb
imul
std
cli
mov
add
xor
fdivrs
icebp
xchg
mov
add
add
add
sbb
movsb
add
sbb
addb
or
movsb
add
jns
rolb
xor
cmp
add
add
cmp
push
jl
or
pop
dec
add
add
dec
adc
enter
jnp
ret
add
jp
sarl
add
pop
addb
push
mov
cmp
sbb
scas
mov
lods
add
add
add
ret
mov
stos
push
call
add
jecxz
add
add
rolb
bound
mov
movsl
bound
mov
add
jecxz
in
adc
sbb
xlat
pop
loop
ret
cmp
xchg
cli
jmp
cld
cmpsl
inc
cmp
sbb
add
mov
push
add
addr16
sub
ja
push
xor
out
inc
add
mov
ljmp
xor
pop
rolb
sub
ficoms
add
add
add
add
cmp
sub
addl
adc
xor
ja
stos
inc
aam
call
jge
add
cld
sarl
push
bound
mov
sub
mov
xchg
sbb
pop
xchg
enter
push
outsl
mov
nop
add
out
outsb
pop
add
pop
sbb
and
outsb
adc
lret
out
push
ja
add
mov
jg
and
mov
mov
push
adc
add
cld
movb
add
sbb
lea
push
add
mov
sub
movsb
add
add
push
add
add
add
add
add
sbb
mov
add
lret
hlt
add
cld
mov
xchg
add
addb
add
adcl
fdivr
fdivrp
jl
lret
scas
push
add
add
scas
lock
dec
iret
push
add
out
gs
dec
loop
mov
xor
pop
pop
aaa
add
mov
mov
lret
jge
testb
fdivl
lret
sahf
fdivl
pop
jae
push
das
lea
daa
roll
mov
jmp
pusha
add
inc
jnp
sti
mov
mov
movsl
or
pop
jle
dec
mov
cmp
jg
jecxz
add
filds
mov
add
jle
fistl
inc
push
add
rcrl
sbb
inc
add
push
fxch
jnp
je
pop
ja
or
add
lock
enter
rolb
loop
mov
pop
mov
dec
dec
mov
pop
dec
daa
or
mov
insb
mov
sbb
push
cmp
push
add
cmp
push
into
outsl
push
jl
xchg
sbb
rolb
add
jge
add
mov
pop
arpl
add
mov
test
outsb
leave
pop
mov
add
jmp
push
add
cmp
and
sbb
add
add
mov
add
lret
pop
fs
icebp
jge
ljmp
dec
mov
inc
add
lcall
sar
repnz
add
add
xor
jmp
repz
add
sbb
inc
add
dec
jnp
adc
push
add
add
addr16
mov
add
pushf
ljmp
add
add
xor
add
daa
cltd
icebp
movsb
add
add
mov
add
fisttps
addb
add
add
add
add
add
adc
add
mov
mov
scas
lret
sbb
arpl
movsb
add
fxch
xchg
inc
add
or
pop
out
lahf
mov
adc
xor
cmp
filds
addb
mov
inc
add
jo
stos
pushf
xchg
cmpsl
add
rolb
addb
cmp
jmp
add
les
pop
push
add
add
lock
movsb
add
add
mov
cmp
push
add
push
mov
add
add
movsb
add
push
cmp
cmp
mull
repnz
and
push
fsub
add
call
in
xchg
mov
cmp
cltd
adc
push
add
jae
insl
mov
push
add
sub
insb
mov
mov
inc
add
in
mov
rolb
add
pop
mov
or
and
addr16
mov
dec
push
xchg
lret
mov
mov
jmp
mov
in
cmpsl
addb
jmp
out
mov
or
out
mov
xchg
add
aas
adc
add
rolb
mov
add
xchg
add
or
sub
xor
je
sub
lock
sbb
push
add
add
jl
lret
rcr
fisttpll
fucom
mov
js
mov
dec
add
add
sub
test
outsb
nop
add
cmp
add
aad
add
ret
cmp
adc
test
mov
popf
inc
out
sbb
test
je
pop
push
push
add
lods
jle
dec
push
add
jecxz
lods
pop
mov
iret
lcall
add
add
add
add
dec
xchg
jle
add
or
and
add
fpatan
sahf
push
cli
jmp
jg
out
ret
add
cmp
testb
mov
inc
in
data16
lcall
rolb
push
add
or
lock
bound
mov
jbe
mov
add
add
add
or
dec
dec
fwait
lcall
sbb
mov
les
sub
stos
jp
rorl
iret
rolb
mov
add
rorl
fsubs
bswap
push
addb
loope
pop
add
add
ret
inc
fldl
hlt
add
add
mov
and
inc
sbb
fldenv
fwait
sub
test
add
mov
add
cld
in
add
mov
addl
mov
pop
mov
add
aam
and
mov
loop
insl
std
pop
add
fsubl
inc
add
popa
lods
add
mov
cmp
scas
insb
rolb
mov
add
mov
mull
jle
add
jnp
out
inc
ljmp
add
jmp
add
mov
xchg
pop
add
xchg
addb
scas
call
mov
scas
decb
lahf
add
and
push
add
dec
pop
push
mov
add
push
lret
add
fwait
push
add
add
test
add
rolb
xor
mov
mov
jp
testb
mov
add
mov
aam
adc
out
and
mov
loopne
cmp
nop
add
add
fmull
add
add
sub
in
cmpsb
add
add
mov
fildl
shll
mov
push
sub
push
add
pushf
in
aam
pop
decb
movsb
add
aaa
sub
rolb
push
lret
movsb
add
add
cmp
add
in
lcall
and
add
and
add
adc
sahf
mov
sbb
add
lods
push
add
and
inc
add
add
ret
pop
sub
mov
add
mov
mov
or
incb
add
xchg
add
push
addr16
popa
sbb
add
data16
movb
add
jae
enter
dec
imul
add
mov
sub
add
dec
inc
add
add
cmp
push
stc
mov
dec
xchg
add
and
outsl
mov
out
rcl
cs
cmpsb
add
nop
add
push
add
mov
inc
jbe
inc
add
fisttps
pop
adc
add
sub
xchg
add
sbb
add
pop
or
outsb
and
mov
mov
mov
inc
sbb
pop
cli
pop
add
mov
add
lods
in
ds
pop
add
mov
in
pop
popa
mov
inc
out
mov
cmpsl
in
shl
pop
aaa
push
mov
mov
add
and
mov
add
push
add
add
sbb
adc
lahf
sub
scas
stos
daa
pushf
popf
pop
testb
add
aad
adc
mov
add
ss
lret
daa
in
hlt
add
add
iret
addb
iret
repnz
add
in
add
jns,pn
and
push
push
add
add
mov
pop
lds
js
shll
repz
loopne
dec
push
pop
mov
adc
test
add
xor
add
cmp
add
jecxz
cmp
add
mov
cltd
or
and
addb
and
mov
ret
roll
add
sbb
call
sahf
push
je
xchg
add
jno
mov
push
lock
push
push
add
add
ljmp
orl
pop
or
add
add
add
or
add
add
out
ret
xor
in
popa
in
repz
add
stos
adc
xor
mov
add
dec
add
push
add
add
mov
add
mov
rcll
add
in
outsb
popa
sub
inc
adc
icebp
jns
xor
push
rorl
icebp
lahf
adc
sbb
add
cld
xlat
repz
mov
ja
icebp
adc
mov
iret
xchg
loope
lock
in
pop
into
out
and
lcall
add
pop
sub
in
cmp
jo
aaa
cmpsl
push
mov
movsl
psubq
mov
sbb
add
test
mov
inc
add
add
inc
mov
mov
insl
xorl
push
add
add
add
add
adc
shll
repz
add
scas
rolb
popf
and
mov
lret
mov
addb
add
sub
xchg
dec
jne
xorl
or
mov
mov
data16
add
sub
sti
pop
lret
jbe
mov
add
add
jge
scas
push
add
mov
add
mov
fstps
sti
xchg
add
addb
jno
adc
pop
hlt
add
addb
mov
addb
jp
push
add
add
jo
xor
mov
fmul
jns
add
adc
out
pop
mov
sub
data16
ja
cmp
add
cmp
lods
inc
push
mov
cmp
js
cmc
gs
cmp
add
rolb
push
or
testl
add
mov
add
int3
loop
mov
push
popf
sub
mov
adc
cmpsl
std
mov
lahf
dec
movsb
add
or
push
add
repz
cmp
push
add
pop
lds
lret
lea
push
lea
je
daa
in
je
into
mov
mov
mov
pop
cli
lock
mov
out
aaa
sub
cmpsl
aam
mov
cwtl
sbb
add
xor
add
or
push
dec
inc
add
sub
aam
aaa
bound
mov
sahf
mov
add
add
xchg
add
ljmp
add
mov
mov
ret
push
je
ret
ljmp
hlt
add
popa
je
jb
mov
add
aad
mov
and
mov
add
add
add
insb
scas
cld
adc
addb
js
mov
push
inc
aam
into
mov
dec
xor
add
iret
addb
add
add
add
cltd
or
add
dec
pop
out
movb
add
xor
movsb
add
xchg
test
dec
out
and
mov
pop
insb
test
add
add
add
sbb
add
push
add
scas
push
sti
in
rorl
inc
add
inc
xor
mov
cmp
and
jp
xchg
add
xor
and
mov
imul
dec
jnp
sbb
leave
out
movb
test
push
jns
pop
mov
sti
mov
out
std
jecxz
add
or
adc
aad
add
rcll
nop
add
add
std
adc
pop
mov
sub
incl
push
add
add
mov
les
sbb
add
sub
roll
test
leave
xchg
pop
xchg
dec
jno
adc
cmpsb
add
add
scas
addb
inc
repz
cmp
add
sbb
fldl
add
push
add
add
add
iret
pop
and
pop
adc
push
dec
mov
add
add
daa
or
hlt
add
add
loope
add
push
or
add
mov
jno
add
add
add
mov
add
les
pop
jle
sub
scas
push
adc
loopne
xor
cli
jecxz
inc
add
incb
sti
cmovs
call
int
aam
sti
insb
and
jecxz
add
mov
popa
push
add
jnp
add
lcall
lret
add
sub
cmp
imul
repz
out
add
push
add
cmpsb
add
pop
nop
add
add
aas
addb
test
cmp
xor
push
inc
add
xchg
arpl
add
sbb
imul
fdivl
add
mov
xchg
or
mov
cli
lods
in
mov
pop
jecxz
add
cmp
lods
add
mov
add
mov
add
mov
repz
lahf
scas
push
adc
cwtl
in
ds
outsb
jp
insl
movsl
lret
arpl
mov
jmp
xchg
cmp
jae
add
add
add
ja
mov
mov
stos
mov
sbb
out
call
insl
inc
add
push
add
add
cmp
xchg
add
add
std
push
add
cmp
in
adc
fsub
add
add
push
rolb
jecxz
add
push
add
add
add
mov
add
inc
inc
add
jnp
inc
lods
inc
add
adc
jb
jmp
shrl
test
push
add
in
movb
and
flds
mov
mov
in
mov
pop
in
pop
jmp
add
add
add
sub
inc
add
xchg
add
fdivrp
outsb
xchg
add
mov
hlt
add
xchg
sbb
add
pop
mov
popf
xchg
add
addr16
rolb
loope,pt
gs
pop
loopne
movsb
add
adc
les
jle
ljmp
std
sub
mov
movsb
add
and
add
pop
sub
insl
mov
cmpsb
add
xchg
add
imul
pop
sub
lahf
repnz
cmpsl
aad
inc
xchg
pushf
scas
push
pop
pop
sub
sub
out
add
push
add
aad
add
data16
push
add
xchg
mov
inc
cmp
jecxz
add
inc
add
fst
mull
mov
loope
nop
add
cs
ret
lods
iret
fwait
sub
adc
inc
clc
jecxz
add
in
icebp
int
je
xor
loop
xor
add
add
or
sub
mov
mov
stos
loope
dec
into
dec
dec
lods
testb
inc
js
xor
jl
inc
mov
dec
sti
adc
sbb
ds
add
or
out
ret
xchg
inc
sbb
pop
aaa
push
add
dec
stos
add
enter
add
push
add
fwait
sbb
cmp
sub
add
pop
add
lods
mov
cmp
or
addl
add
addb
mov
lahf
movb
mov
jno
sbb
aad
jecxz
or
mov
push
gs
xchg
add
add
ljmp
lcall
xchg
dec
scas
lcall
imul
inc
add
sarl
out
jp
ror
pop
xor
sarl
lea
inc
push
lea
mov
jns
xchg
insb
movsb
add
add
int
cmpsl
ljmp
je
jno
ds
add
mov
add
fincstp
fwait
mov
fsts
xor
sub
int3
xor
stc
mov
xchg
mov
xchg
mov
add
lret
mov
add
add
negl
xor
ret
mov
mov
mov
add
add
add
xchg
add
add
and
mov
jo
push
add
add
sbb
insl
mov
mov
fsts
adc
les
mov
ljmp
dec
inc
mov
add
mov
lods
adc
add
push
ret
popa
mov
and
cmp
test
add
jp
out
cmc
std
cli
insl
push
add
out
rolb
lcall
dec
or
std
push
add
xchg
add
mov
dec
mov
add
add
mov
push
movsb
add
xchg
popl
pop
jg
add
icebp
add
mov
xchg
push
add
add
outsb
add
mov
push
add
cltd
sub
jmp
fs
cs
call
test
push
rolb
int
lds
add
lock
add
pop
sbb
add
add
add
cmpsb
add
add
add
pop
es
add
jne
add
insb
pop
lret
adc
fsubrl
add
nop
add
or
add
addb
orl
add
ret
pop
aad
inc
outsb
pop
cmc
xlat
add
mov
add
out
sahf
add
ds
mov
enter
pop
leave
jle
add
lock
jp
call
in
and
mov
mov
inc
add
lea
add
mov
cltd
or
mov
push
push
clc
xlat
xor
push
nop
add
xor
add
ljmp
add
or
add
lret
mov
sub
mov
xor
add
adc
sbbl
pop
shll
pusha
add
add
mov
test
add
mov
add
add
pop
je
fdivrl
and
mov
leave
sbb
add
add
shll
add
lds
push
mov
inc
insb
adc
jge,pt
cmp
insl
nop
add
add
pop
push
add
xlat
mov
add
add
add
xor
add
jbe
mov
xchg
or
insl
subl
rcrl
sbb
add
add
cmpsb
add
mov
sbb
ljmp
aaa
enter
cld
adc
hlt
add
mov
jmp
cld
pop
les
dec
and
shll
sub
jbe
lahf
inc
and
dec
out
sub
sub
cmp
dec
inc
addl
mov
iret
sarl
mov
scas
test
or
xchg
pop
pusha
add
inc
push
add
mov
sub
mov
in
add
mov
cmp
add
mov
add
cli
imul
add
adc
addr16
scas
das
repz
shr
push
add
mov
pop
or
add
testb
cmp
add
mov
rolb
mov
dec
and
sbb
jle
add
loopne
testb
or
push
add
mov
jbe
pop
pushf
movb
pop
rolb
jb
pop
cmp
xor
add
pop
sub
add
sbb
inc
dec
cs
fldl
les
testb
sbb
dec
mov
adc
adc
add
clc
inc
add
mov
xchg
lds
cld
pop
das
out
cmp
data16
jne
mov
insl
adc
sbb
int3
test
lret
push
add
mov
add
divl
stos
fistl
push
hlt
add
ja
add
adc
mov
inc
xlat
repnz
inc
in
inc
fnstsw
out
inc
add
imul
popa
cmp
cmp
push
mov
sahf
cmc
fwait
out
dec
mov
sti
cmc
in
outsl
mov
jne
add
iret
inc
add
popf
insl
dec
addb
sbb
outsb
scas
mov
leave
mov
add
cs
mov
add
cltd
jo
arpl
cmpsl
movsb
add
and
call
pusha
add
push
fmulp
mov
shll
push
call
mov
mov
add
std
cs
rolb
dec
aad
scas
inc
inc
add
add
pop
mov
add
xor
insl
out
jecxz
outsb
push
add
add
daa
jo
pop
hlt
add
cltd
dec
je
adc
add
add
cld
push
adc
xchg
repnz
outsl
push
add
clc
jo
dec
in
add
xchg
arpl
add
sub
cmc
enter
fs
mov
jle
xchg
int3
out
cmp
ret
lods
add
pop
jmp
add
cmp
enter
xor
add
add
add
jbe
out
in
or
out
add
jne
or
imul
iret
add
add
xchg
add
xchg
js
or
movsb
add
add
push
add
add
sub
mov
lret
or
rolb
jae
adc
xlat
out
in
push
inc
sbb
add
movsb
add
add
add
in
sbb
add
or
sub
mov
add
xor
inc
mov
call
xchg
add
pop
fcomi
clc
int
in
fisubrl
add
jbe
jp
popa
mov
add
movb
add
jbe
out
add
mov
mov
xor
loop
lret
add
mov
popl
outsb
cltd
mov
int
add
mov
sbb
pop
arpl
fwait
cld
ljmp
sbb
popa
mov
rolb
add
add
dec
lea
sbb
sub
and
mov
push
add
insl
pop
and
mov
mov
lods
xchg
mov
add
inc
pop
mov
cmp
ret
testb
add
sub
add
push
add
scas
rolb
add
lds
mov
addr16
les
inc
add
push
addb
or
add
pop
xchg
scas
dec
pop
cmp
in
add
sbb
add
and
inc
add
xor
add
add
add
jae
mov
cltd
mov
sub
aas
lods
cmp
enter
add
hlt
add
push
add
add
inc
add
pop
sbbl
dec
mov
nop
add
add
in
push
pop
xchg
daa
lret
push
push
add
add
add
negl
add
cmc
add
mov
add
dec
xchg
test
mov
xor
and
testb
and
sbb
add
rolb
rolb
outsb
cmp
jbe
hlt
add
add
stc
sbb
in
add
xchg
add
mov
aad
imul
das
loopne
sbb
xorl
fcomps
fiadds
sahf
push
icebp
out
rcrl
sub
inc
add
mov
das
leave
and
mov
or
mov
inc
add
cli
pop
adc
loop
jge
lcall
add
sub
scas
orl
add
add
lock
movsb
add
mov
shll
out
fstl
add
add
add
into
lea
outsb
dec
insl
push
add
inc
add
jge
pop
rolb
test
add
and
add
xchg
pop
daa
xor
lds
dec
out
or
add
push
add
mov
adc
jb
ficoms
ret
sahf
add
ret
lcall
add
popa
and
mov
fwait
xchg
add
mov
xchg
sub
push
in
addb
loope
repnz
pop
push
add
add
add
jle
negl
inc
add
add
add
mov
testb
add
pushf
jnp
inc
cmp
scas
jmp
xor
je
cmpsb
add
popa
in
mov
notl
hlt
add
add
add
std
mov
ja
and
mov
mov
add
add
mov
iret
pop
add
xor
popa
outsl
add
xor
pop
roll
add
daa
pusha
add
mov
lock
pop
pop
addr16
out
sbb
push
add
mov
push
add
adc
iret
add
in
adc
inc
and
imul
int3
pop
jbe
arpl
dec
repnz
add
loopne
mov
inc
js
popa
add
cmp
insl
dec
das
lock
push
and
mov
push
add
cmp
jnp
add
insb
lds
mov
add
cld
add
lcall
add
add
ret
movb
ljmp
add
mov
add
add
inc
and
push
push
add
add
sbb
add
out
int
cmp
mov
arpl
lret
add
add
pop
mov
or
mov
add
add
add
push
dec
xchg
add
adc
in
lods
add
shrl
pushl
fstpt
add
cli
mov
pop
adc
movsl
jmp
sbb
test
push
out
mov
add
push
leave
or
sti
mov
stos
je
movsl
cmc
pusha
add
out
push
shll
push
or
add
flds
mov
add
xchg
pop
sub
pop
rolb
add
and
add
pop
jle
adc
sub
add
xchg
cmpsb
add
push
add
sbb
movsl
add
mov
rolb
stc
imul
add
cmpsl
scas
pusha
add
loope
add
leave
pushf
sub
sbb
inc
rolb
movsb
add
add
mov
add
sub
mov
shrl
incb
add
out
addr16
lods
sub
dec
stos
insb
leave
mov
xchg
out
sbb
outsl
mov
mov
cli
loop
je
jo
adc
ret
add
stos
push
insl
dec
add
in
fcmove
fsubs
addb
sbb
push
jne
int3
dec
mov
add
jl
add
add
das
je
dec
arpl
cmc
cmp
add
dec
xchg
add
mov
popf
movsl
push
add
sbb
add
mov
push
add
sub
rorl
in
addb
rcrl
xchg
bound
mov
sub
aaa
inc
ret
add
add
add
add
mov
xor
inc
or
sub
push
cmc
aam
mov
jnp
add
fcmovb
aaa
dec
in
jecxz
add
mov
add
or
cmpsl
icebp
cs
cmp
add
or
imul
mov
pop
adc
add
jmp
pop
xchg
add
jae
add
dec
xchg
lea
push
add
jg
stc
cmc
lods
mov
add
adc
adc
outsl
leave
xlat
sar
mov
lock
dec
adc
in
mov
add
add
mov
popa
mov
jae
and
mov
stc
cmpsl
ret
mov
icebp
push
jge
imul
sarl
repnz
add
xchg
cmp
aam
lret
inc
or
pop
or
aad
add
and
mov
adc
nop
add
jae
add
cmp
push
add
cmc
inc
add
add
adc
out
sub
add
dec
iret
mov
add
cwtl
test
add
sbb
std
nop
add
cmc
loop
lcall
icebp
lds
arpl
mov
sbb
cwtl
fisubl
add
mov
add
jno
add
rolb
out
xlat
add
mov
adc
add
sub
add
add
stos
add
mov
sbb
repnz
cli
push
add
lea
add
mov
in
and
dec
push
aas
ret
add
dec
xchg
add
mov
add
pop
jb
out
lcall
cmp
les
loopne
out
mov
inc
clc
cmp
xchg
aam
jge
mov
je
or
xchg
addb
add
xor
add
cwtl
inc
add
add
das
mov
mov
add
call
add
jg
push
add
fidivl
mov
scas
jo
test
out
data16
sbb
push
addl
ja
pop
fisttpll
insl
cs
jb
sbb
add
movsl
dec
xchg
in
jl
and
lret
or
mov
add
add
movsl
mov
dec
jae
mov
fstl
stos
mov
add
mov
pop
pop
ds
pop
pop
aad
add
xor
jb
ret
add
dec
aaa
lock
pushf
int
mov
sub
test
add
add
add
mov
jmp
je
xchg
lcall
pop
into
xor
movb
clc
jnp
add
push
mov
paddq
pop
inc
test
pop
lods
pusha
add
data16
mov
add
aad
les
cmp
sub
call
lds
and
mov
add
cmp
add
add
insl
stc
jbe
jae
pop
lret
sbb
add
lcall
movb
ljmp
out
mov
or
js
not
adc
add
insl
xor
jo
mov
add
add
sub
dec
xchg
sub
add
out
add
mov
add
hlt
add
add
mov
mov
add
mov
popa
inc
ljmp
mov
or
add
iret
in
xor
sbb
negl
jl
loopne
pop
popf
icebp
addr16
xlat
movsl
ljmp
add
push
add
add
add
addb
add
inc
or
add
mov
add
inc
jo
je
out
add
dec
adc
sub
inc
into
push
dec
inc
sub
out
pop
daa
into
pop
sbb
add
add
jmp
subl
mov
push
add
test
int3
lret
into
push
imul
mov
add
xorl
add
adc
aaa
addb
add
add
adc
cltd
cmp
mov
mov
rolb
stc
xchg
imul
add
add
pop
testb
lods
xchg
and
scas
xchg
jbe
push
add
add
add
add
adc
mov
push
add
xchg
pop
imul
dec
ds
add
scas
mov
imul
int3
mov
add
pop
std
fldcw
add
add
cmpl
mov
bound
mov
jmp
sbbl
add
aaa
pop
in
push
add
add
push
add
mov
aas
scas
mov
dec
and
and
add
imull
lret
rorl
push
add
add
jb
pop
mov
bswap
flds
xchg
add
ja
sub
xor
int3
jmp
adc
xchg
cmpsl
xor
out
and
mov
loope
add
push
iret
pop
addb
jp
jae
add
dec
inc
add
enter
cmp
dec
rcrl
ret
xor
test
testb
add
lds
pop
sbb
pusha
add
pusha
add
cmpl
mov
pushf
aas
xchg
dec
inc
add
add
and
mov
add
add
xchg
test
or
imul
js
add
sub
dec
gs
addr16
pop
cmp
jp
mov
and
stc
rolb
cld
pushf
loope
add
add
sahf
mov
sbb
add
add
pop
fldenv
mov
sub
pop
stos
movsb
add
clc
popa
jp
push
add
sbb
fstpl
imul
lahf
into
rolb
subl
fsts
xor
test
rorl
mov
add
xor
jno
add
leave
adc
sub
add
in
scas
cwtl
daa
push
xor
jmp
add
adc
pushf
xchg
dec
xor
add
mov
pop
clc
leave
and
xor
aad
add
test
in
pop
adc
lahf
lret
loopne
out
dec
and
jmp
sbb
lea
pop
pop
movb
mov
iret
add
push
and
pop
push
add
mov
scas
jno
lret
xchg
fadd
add
pcmpgtb
mov
out
test
adc
jb
and
pop
shll
add
fs
add
add
add
xchg
jae
out
pushf
xchg
add
pop
and
push
test
jge
clc
push
add
addb
testb
add
dec
sub
test
add
sbb
in
test
addr16
test
add
and
std
cmpsb
add
shll
scas
insb
sti
in
popl
out
or
add
add
in
cmp
and
add
insl
push
add
fcoms
jp
push
cld
and
je
enter
jecxz
std
lsl
enter
jne
mov
popf
bound
mov
addb
add
jns
out
test
and
mov
jno
mov
push
mov
push
fwait
shrl
jl,pt
add
icebp
or
scas
xor
sbb
sar
shll
xchg
or
outsb
mov
mov
jo
jo
push
push
adc
sub
fcmovbe
add
scas
adc
cmp
adc
in
loopne
xor
mov
add
mov
add
loope
add
mov
jo
jae
cmpsb
add
cmpsl
dec
fisttpll
jns
add
mov
mov
pop
mov
jns
ficoml
add
mov
insb
rolb
or
es
add
xor
std
mov
and
mov
adc
jle
outsl
mov
pop
addb
ja
stc
mov
cmpsb
add
jl
adc
push
arpl
lea
add
mov
add
add
out
mov
enter
cmpl
scas
jle
add
sti
arpl
dec
mov
sbb
sub
add
sbb
js
mov
sub
test
bound
mov
add
stc
or
mov
and
sti
leave
cld
mov
test
sti
mov
cli
data16
out
jae
das
jbe
mov
pop
pop
inc
dec
into
xchg
add
scas
add
add
jmp
pop
inc
cmp
add
push
add
xchg
or
lods
into
cmp
cmc
xchg
add
cli
jae
loopne
jbe
cmp
cli
les
out
test
lahf
or
fwait
mov
adc
add
mov
pop
out
sahf
out
dec
cltd
in
inc
scas
or
add
adc
sti
call
js
call
push
add
push
std
pusha
add
cmp
nop
add
adc
nop
add
fcmovnu
hlt
add
add
add
repnz
add
and
dec
stos
mov
add
or
add
mov
popf
cmp
fstpl
push
test
cmp
and
add
cmp
pop
stos
or
ficoms
lahf
addb
add
add
inc
shll
add
in
ja
mov
fidivl
mov
js
daa
out
aaa
sbb
mov
clc
cmp
add
mov
adc
gs
in
xor
inc
je
lret
add
cmp
add
sub
lods
pusha
add
cmp
jns
add
mov
clc
mov
pop
data16
add
mov
mov
add
fmul
data16
pop
daa
or
outsb
cmpsb
add
xor
cmp
jns
mov
sbb
gs
or
enter
add
pop
pop
lods
or
pop
pop
inc
cmp
add
sbb
mov
adc
lods
xchg
add
add
add
add
add
cli
out
jno
add
xor
test
add
inc
add
mov
and
lock
mov
mov
add
js
fisubs
int
mov
add
ret
inc
add
arpl
add
fistl
mov
rol
add
sub
add
fwait
loop
jg
test
std
jns
push
add
mov
add
mov
jo
stos
lods
jmp
add
add
xlat
adc
and
pop
aas
ss
adc
pop
inc
push
sbb
sub
inc
jmp
sbb
mov
outsb
mov
add
add
sub
pop
jb
insb
pop
or
add
add
add
les
mov
repnz
popa
adc
jmp
add
addb
xchg
mov
xchg
cltd
inc
add
aaa
adc
add
and
mov
dec
mov
add
mov
movb
sbb
cltd
dec
clc
lods
cli
xchg
add
fists
bound
mov
add
or
add
push
add
mov
inc
add
push
sahf
push
add
int3
or
mov
mov
fwait
andl
dec
das
jnp
sbb
push
add
jg
inc
mov
cmpsb
add
fsubl
add
add
cli
push
add
test
push
stc
add
sub
add
add
test
inc
les
push
add
add
es
roll
out
inc
add
mov
add
inc
jecxz
add
daa
imul
and
add
testb
ljmp
dec
addb
add
inc
add
dec
adc
sti
ja
decb
or
inc
add
loop
xchg
add
leave
push
add
cmpsl
push
add
add
add
jo
enter
addb
adc
mov
lret
and
add
lds
xchg
loopne
es
add
sbb
movsb
add
lods
outsl
sub
daa
dec
xor
xchg
pop
xchg
add
stc
mov
enter
jmp
and
mov
mov
sub
add
add
mov
js
add
cwtl
mov
cld
inc
add
fnstcw
clc
adc
leave
sub
and
sub
add
out
daa
popl
add
arpl
mov
jbe
in
insl
jp
fisubl
add
add
out
add
mov
cmpl
dec
shl
xchg
mull
scas
push
fldl
add
add
popa
fisubrs
test
aad
add
add
add
xchg
popa
mov
out
out
push
sti
and
add
add
mov
lds
add
add
fwait
nop
add
or
mov
addr16
fidivs
mov
add
cmpxchg
add
pop
mov
add
mov
add
jg
into
into
push
fsts
push
add
bound
mov
mov
adc
add
mov
add
fisubl
push
add
or
or
add
adc
mov
push
add
pop
lods
push
add
inc
add
movb
std
ret
cmc
fldl
mov
xchg
add
or
ficoml
mov
mull
cwtl
jmp
test
sbb
test
mov
cmp
add
add
ret
scas
push
add
arpl
add
mov
add
adc
mov
iret
jns
adc
sbb
add
sbb
mov
add
sbb
sub
add
data16
add
push
add
xchg
cmp
mov
xchg
jle
add
inc
leave
adc
mov
xchg
into
or
dec
mov
cwtl
mov
xor
data16
mov
subl
add
dec
push
add
mov
das
and
sahf
gs
cmpsl
lods
movsb
add
repz
lahf
gs
pop
jl
movsl
dec
dec
and
fs
lds
add
add
add
push
add
add
add
add
add
mov
inc
add
mov
add
mov
hlt
add
negl
test
push
add
aas
cs
or
add
add
sub
or
mulps
add
mov
add
cmp
and
mov
add
dec
insl
cmp
lods
lods
or
adcl
add
add
add
jp,pn
rcr
add
or
mov
stos
adc
xor
push
mov
xchg
add
mov
rolb
add
dec
add
add
jbe
xchg
sbb
pop
or
xchg
push
loop
enter
push
in
push
add
push
stos
push
out
and
add
adcl
pop
jbe
mov
mov
scas
fidivl
mov
xor
out
call
gs
push
add
pop
mov
data16
or
add
add
jbe
and
dec
ds
jge
push
lret
clc
mov
xchg
lahf
clc
sub
jo
xor
fs
lds
add
leave
rolb
rorl
cmp
les
push
sub
add
xchg
add
loopne
jb
je
lret
xchg
cmpsl
pop
ret
adc
pop
lcall
add
fsubs
mov
add
add
xchg
pop
push
add
cmp
cmp
mov
xor
in
testb
add
xor
pop
into
iret
inc
ret
addr16
shll
mov
sbb
pop
and
mov
loop
dec
in
dec
inc
add
into
cmp
rolb
add
mov
aam
icebp
sbb
sub
pushf
inc
cmp
mov
sub
ret
jl
dec
jae
add
add
push
mov
add
add
xchg
stos
fisubrl
aam
in
loope
roll
xchg
scas
lahf
mov
lret
je
push
add
push
push
add
clc
and
scas
xor
inc
add
dec
lahf
fldcw
sub
fdivs
add
xchg
cmp
pop
inc
cmpsb
add
stc
fcmovbe
adc
jo
sti
in
mov
mov
jmp
fldenv
add
mov
dec
aad
xor
lea
ja
cli
in
outsb
hlt
add
test
jge
add
fs
add
les
hlt
add
add
mov
xchg
add
adc
pop
mov
lea
add
test
add
add
add
add
jb
sarl
adc
addb
stos
hlt
add
iret
outsl
mov
push
fisubl
mov
add
add
push
add
mov
dec
adc
dec
cltd
fsubs
mov
add
adc
jbe
inc
or
push
add
add
add
inc
data16
adc
or
or
push
push
loop
add
mov
fstl
sbb
sub
mov
insl
nop
add
pop
testb
ds
sub
add
add
mov
scas
ljmp
int
add
inc
out
push
add
rolb
xor
mov
incb
testb
add
mov
add
mov
fcompl
lret
sahf
sub
std
gs
shll
push
add
mov
add
pop
std
lods
pop
inc
add
push
add
pop
iret
call
daa
jns
add
clc
out
pop
movb
sub
add
jae
mov
push
push
xchg
cmp
aaa
push
aam
addb
mov
add
and
mov
sub
add
cld
mov
test
push
add
add
call
add
add
dec
and
clc
les
in
nop
add
add
mov
dec
roll
xchg
pop
adc
lods
adc
add
push
add
scas
aaa
mov
xchg
call
cmp
mov
add
cmpsl
shll
icebp
addb
adc
in
into
dec
aas
pop
jg
jecxz
dec
mov
xor
in
xchg
add
jns
add
fildl
or
dec
iret
aas
xor
mov
popa
mov
jp
in
jns
jbe
pop
int3
or
pop
imul
jnp
add
push
mov
shrl
cmp
pop
sbb
daa
lret
lcall
sub
and
push
add
add
into
leave
mov
das
int
dec
rcrl
fwait
stc
mov
xor
scas
lret
cld
sahf
jo
push
add
add
ror
push
add
add
add
test
add
push
add
cld
jp
jle
fnop
add
pop
ja
int
add
cs
add
mov
add
add
jcxz
test
cmpsb
add
and
mov
jnp
xchg
inc
push
mov
fwait
nop
add
fisubl
adc
add
sti
cmp
xor
xor
out
jg
jle
rolb
sahf
pop
jg
les
rolb
mov
pushf
movb
add
add
arpl
cwtl
ret
jle
test
cmc
lahf
jbe
popf
icebp
ret
dec
out
push
add
add
add
aad
inc
add
add
sbb
xlat
push
add
xor
mov
mov
ficompl
add
loope
jbe
xchg
add
or
pop
out
loopne
inc
add
add
add
add
add
add
sbb
int
add
xchg
add
xchg
and
mov
add
add
mov
enter
add
testl
add
push
and
mov
xlat
fcomp
jae
in
add
mov
rolb
js
add
dec
fcmovnb
add
popa
xor
mov
outsb
movsb
add
add
add
add
in
jo
and
mov
push
add
mov
and
jmp
inc
add
les
push
add
mov
inc
add
xchg
add
jb
sub
pushf
shll
push
add
les
in
xchg
sub
mov
ljmp
bound
mov
add
mov
cltd
mov
icebp
push
add
add
mov
add
mov
ljmp
mov
add
mov
and
out
into
scas
inc
add
cmp
add
pusha
add
add
movnti
push
add
add
add
fsubrl
fimull
mov
or
adc
pusha
add
mov
add
add
rcll
add
add
sub
hlt
add
add
sbb
add
push
add
add
cltd
pop
fwait
mov
mov
add
add
add
sub
pop
out
add
add
sbb
cmc
sub
add
add
xor
add
mov
push
jg
dec
and
mov
add
add
xchg
add
add
cmc
mov
loopne
lcall
xor
fistpl
jmp
dec
lret
out
xlat
mov
mov
add
push
adc
inc
addb
inc
pop
ds
add
add
out
mov
jne
and
add
adc
and
push
add
add
add
pop
iret
in
add
add
add
cmp
cli
ja
mov
push
add
pop
outsl
xchg
sub
cmp
add
add
add
add
add
mov
mov
jbe
jg
jg
mull
movb
and
xchg
add
jp
mov
push
outsl
rolb
in
or
add
stos
repz
fnsave
add
pop
mov
add
dec
inc
cmp
add
repz
add
mov
insb
pop
aas
ja
popa
testb
pop
xor
cmp
xor
sub
mov
test
rolb
pop
pop
icebp
mov
adc
movsl
sbb
loop
jne
xchg
jae
inc
add
add
mov
xor
clc
adc
add
add
lea
data16
add
add
add
cltd
cmp
mov
shll
xchg
loop
xor
shrl
jp
fldl
mov
ja
test
mov
mov
mov
int
popl
sbb
add
add
movsl
jns
popf
in
sub
mov
sbb
icebp
les
pop
xor
add
pop
and
stos
cmp
xchg
pop
or
add
fldcw
pushf
stc
mov
add
and
mov
add
or
xlat
push
add
or
call
add
add
add
or
mov
inc
mov
movsb
add
stos
add
xor
fnstcw
push
add
xor
out
add
xchg
sti
into
inc
dec
test
cmp
xchg
add
add
add
rolb
aam
mov
add
push
popa
mov
mov
mov
add
mov
xchg
jnp
add
mov
add
scas
and
mov
test
cmp
jns
or
push
mov
add
out
mov
and
mov
push
add
mov
xchg
add
and
mov
rolb
mov
cmp
add
add
in
or
out
cltd
xchg
add
lret
subl
jo
icebp
lret
aam
jle
aam
dec
jae
xor
xor
and
mov
cli
xchg
add
add
dec
mov
add
sbbl
int3
aaa
shll
gs
loopew
xor
fcomi
add
jno
cmpsb
add
or
sbb
add
add
mov
cli
pop
fstpl
or
mov
push
les
add
arpl
mov
loope,pt
pusha
add
add
add
testl
jg
xchg
add
add
cmp
testb
mov
iret
mov
xor
addb
aad
push
test
jne
add
testb
aad
push
push
add
add
mov
sbb
cmp
add
add
add
aam
test
lahf
add
push
daa
lcall
xchg
add
push
dec
cmp
add
mov
int3
andl
inc
lcall
add
xchg
add
add
adc
imul
mov
mov
mov
add
add
ret
aas
add
mov
add
jae
daa
mov
lods
imul
add
add
add
dec
mov
add
loop
xchg
add
ror
jno
add
xlat
aad
mov
xorl
addb
add
adc
add
test
movb
push
jae
adc
mov
int3
xor
sbb
flds
outsl
rolb
shll
jg
add
add
pusha
add
cmpsl
mov
movq
jge
mov
add
adc
push
xchg
add
rolb
add
push
je
inc
push
add
add
mov
inc
add
lcall
fdivr
xchg
add
add
pusha
add
je
push
sbb
sub
fstp
mov
sti
jmp
movzwl
dec
sub
adc
xchg
adc
jns
adc
push
add
add
add
add
mov
add
dec
inc
push
add
push
lret
push
add
js
insl
fsubr
mov
gs
jmp
inc
lds
add
jl
fstpl
or
jb
ss
ja
aas
inc
imul
inc
aad
sbb
add
add
xor
ljmp
add
cmpsb
add
pop
mov
mov
enter
add
push
add
add
adc
jl
add
pop
xor
add
add
in
push
add
mov
loopne
pop
into
loope
add
xlat
ret
rolb
xchg
aam
jne
cmp
movsl
lea
bound
mov
add
mov
mov
frstor
dec
or
or
sbb
dec
pop
push
push
add
jmp
add
add
aam
cmpsb
add
mov
testl
out
out
inc
add
js
add
ljmp
pop
and
mov
xor
scas
jge
add
or
push
les
mov
add
pop
pop
fwait
clc
push
add
fstl
xchg
call
xlat
fwait
or
add
sub
add
xchg
mov
lods
mov
dec
and
daa
mov
sbb
push
xchg
xchg
out
add
mov
test
into
mov
mov
add
xchg
adc
mov
pop
sub
add
add
cmpsl
push
add
add
rcll
sbb
dec
lahf
lock
icebp
addb
add
add
pop
gs
into
pop
xor
add
add
rolb
mov
pop
mov
insl
adc
push
jno
mov
add
add
mov
sub
add
fdivrl
popf
add
mov
push
mov
add
pop
xchg
add
add
add
test
loopne
sub
add
pop
xchg
or
add
add
mov
add
mov
hlt
add
push
jbe
out
mov
add
push
inc
add
testb
add
xchg
and
mov
push
in
push
cmp
lea
aaa
sbb
add
add
add
add
imul
or
pop
scas
add
mov
add
xor
addb
test
add
add
inc
add
bound
mov
push
or
mov
mov
add
jge
add
mov
sti
mov
dec
xchg
jl
add
mov
jg
xor
push
add
pop
jb
in
rolb
fisttpll
hlt
add
mov
cmp
inc
add
add
andl
add
shll
add
add
movsl
xor
add
inc
fisubl
mov
add
clc
mov
push
add
push
add
adc
movsb
add
add
add
add
mov
adc
mov
add
add
push
add
cmp
mov
add
sub
add
into
jnp
leave
imul
add
jne
add
push
fisttps
xchg
add
add
fisubl
add
aaa
xor
testb
pop
inc
out
ret
add
nop
add
mov
jge
add
add
add
movsb
add
pop
inc
add
add
inc
add
mov
shll
xor
fwait
repnz
or
adc
testb
add
xchg
imul
xchg
test
sbbl
cld
sub
pop
out
popa
sub
mov
loopne
dec
outsl
mov
mov
add
mov
inc
js
hlt
add
incb
add
add
pop
in
cmpsb
add
test
add
lahf
lahf
das
scas
lods
and
mov
add
pmulhuw
dec
push
add
aas
sarl
addb
nop
add
add
mov
repnz
ficoml
add
aas
dec
rcll
into
mov
ss
lock
lock
mov
jnp
add
push
repz
pop
push
add
add
adc
hlt
add
pop
sti
and
loope
add
add
fwait
aaa
aas
ja
xor
jle
add
add
decl
movsb
add
out
jo
stc
lods
xlat
rolb
xor
fbld
cmp
jmp
rolb
idiv
adc
popl
xlat
lret
adc
cld
jle
in
pop
pop
xor
pop
cmp
add
mov
pop
jns
addb
mov
mov
movsb
add
jg
cmp
add
stc
push
add
push
dec
dec
mov
add
mov
push
sub
data16
loopne
test
dec
push
ja
lret
add
imul
mov
popf
inc
cmp
cs
xlat
lds
lret
and
mov
daa
loop
popa
jbe
insl
xchg
cmp
mov
add
push
std
clc
cltd
dec
adc
pop
dec
pop
sbb
movb
cmpsb
add
add
ret
icebp
mov
sub
add
add
add
js
add
dec
pop
int3
nop
add
dec
mov
add
add
mov
outsl
and
push
inc
add
add
xor
ficompl
insl
mov
mov
sbb
sbb
mov
add
mov
or
mov
lock
lcall
or
add
pop
cld
data16
add
das
test
insl
mov
into
and
pop
out
loop
push
jae
fldl
or
lahf
mov
gs
and
mov
sub
ret
add
mov
push
xchg
jmp
pop
sub
pop
fadds
dec
cmp
add
add
add
add
cmp
cmpsb
add
sub
outsb
daa
fisubs
add
mov
dec
adc
je
outsl
faddl
cmc
xchg
add
mov
jecxz
jg
push
xor
pop
jecxz
add
iret
ret
fisttpl
add
add
or
aad
inc
das
mov
cs
cmp
pusha
add
std
mov
mov
mov
jmp
dec
xchg
add
add
mov
add
mov
add
insb
and
scas
pop
fwait
xchg
xchg
add
stos
sbb
xor
ficoml
movsb
add
add
lea
fistpl
cs
cmp
cmp
add
jns
add
mov
add
add
fistps
jns,pt
int3
outsl
imul
loop
cmp
enter
jle
add
and
mov
sub
mov
cmp
clc
rolb
add
jmp
mov
push
add
add
data16
add
es
add
dec
and
mov
add
dec
pop
jp
cmp
add
movb
or
add
int3
pop
mov
add
aas
std
mov
iret
mov
xor
add
or
add
add
lds
inc
add
stos
inc
mov
mov
adc
mov
add
movb
sbb
push
fisubl
cltd
addb
add
add
add
mov
push
add
cmpl
mov
mov
add
rolb
push
add
mov
push
add
movsb
add
add
sbb
mov
adc
add
push
add
mov
loopne
stos
fdivl
jl
loop
adc
or
dec
aaa
rolb
cld
xchg
inc
push
in
xor
cmp
add
add
mov
mov
test
add
or
add
and
jmp
add
lock
mov
lcall
add
addb
les
xchg
rorl
sbb
inc
add
jp
mov
in
insl
rolb
cmp
jge
in
mov
fs
add
iret
jle
mov
in
loope
add
sub
sub
sahf
scas
test
icebp
mov
sbb
pop
jne
pop
je
cmp
ja
add
addl
and
pop
in
ja
xor
cmc
sub
mov
push
aas
cmp
outsb
imull
push
add
mov
lods
loope
rol
cmp
sbb
xor
ret
cli
jns
inc
jmp
add
mov
add
add
add
int
add
pop
mov
test
add
lcall
lret
rolb
cltd
push
add
add
add
test
add
add
push
add
dec
fidivl
mov
xchg
add
or
add
add
add
ret
add
ja
mov
add
pop
dec
adc
mov
mov
jle
out
add
xchg
add
inc
mov
dec
sub
or
add
mov
xor
inc
cmp
mov
add
pop
jns
add
popa
pushf
xchg
add
push
add
ljmp
mov
and
arpl
pop
pop
mov
xor
add
add
std
mov
aaa
sub
test
mov
fdivl
aad
add
mov
ja
add
inc
fsubs
add
gs
add
add
dec
or
push
add
repz
movsl
xchg
pop
jbe
sbb
push
cltd
sahf
testb
jb
and
cmp
xchg
add
sahf
out
cmpsb
add
push
daa
testb
mov
jns
ds
and
iret
mov
pop
loop
cld
aam
insb
or
mov
lret
or
repnz
sbb
or
mov
aam
mov
xor
add
movb
add
ret
xchg
mov
aas
lea
jnp
add
add
add
ja
sti
lret
mov
cmp
add
or
cmp
add
add
dec
testb
sbb
xchg
add
ljmp
das
setg
sub
add
dec
aad
add
inc
add
movsb
add
add
sub
cmp
mov
scas
das
mov
scas
enter
arpl
mov
sub
xor
add
cmp
js
sbb
in
mov
aas
int3
or
add
add
out
in
data16
lds
leave
lds
xchg
add
or
loope
jno
add
and
xlat
cmpsl
outsb
mov
mov
imul
test
call
xchg
js
add
lds
movsb
add
or
popa
jo
gs
cmp
popf
mov
cmp
mov
out
jle
xor
pandn
add
add
mov
add
into
das
jnp
aad
jmp
mov
lock
fwait
imul
in
mov
inc
and
cld
jnp
add
add
add
add
sub
in
lea
popf
out
adc
add
hlt
add
loopne
mov
mov
and
loopne
scas
xor
pop
icebp
cltd
pusha
add
rolb
dec
pop
les
div
adc
add
mov
add
sahf
loopne
xor
pop
into
jp
insb
out
cmp
pop
mov
repz
movsb
add
or
add
outsl
sbb
add
jae,pn
add
mov
addb
push
add
add
std
sahf
add
out
call
inc
add
out
and
mov
stos
mov
and
inc
pushf
movl
add
sub
add
xor
sbb
stos
xchg
test
pusha
add
ret
xchg
add
aad
lcall
or
out
std
mov
hlt
add
adc
scas
push
mov
ss
loop
addb
roll
add
cld
pop
cwtl
scas
aaa
cmpsl
pusha
add
add
add
mov
out
pop
int3
mov
ja
xor
mov
and
lret
popa
insb
mov
pop
iret
movb
inc
add
add
jg
inc
add
pop
sub
add
fidivl
add
add
jns
lods
jge
testb
sbbl
jmp
cmpsb
add
enter
add
add
add
add
mov
add
add
add
xorl
lock
imul
loop
dec
push
add
add
xchg
add
cmp
jo
outsl
test
add
cmpsl
pop
pause
add
adc
jge
test
add
add
mov
insl
xchg
js
enter
pop
ficompl
add
add
and
in
into
int3
mov
movb
cmp
pop
jp
add
xchg
cli
leave
mov
call
push
fsubl
dec
loop
cmpsb
add
or
add
mov
sub
lret
lock
popf
pop
outsl
push
add
add
add
push
add
test
sub
jb
inc
add
add
sbb
adc
popf
lret
lret
scas
dec
mov
adc
or
cmp
mov
add
xchg
add
mov
adc
das
out
mov
leave
movsb
add
add
sbb
lea
lock
push
add
or
xor
popl
add
add
push
cmpsb
add
mov
pushf
nop
add
add
push
lcall
stos
push
loop
lret
add
pop
test
psraw
pop
push
add
sbbl
add
cltd
jge
add
add
add
jle
or
add
xchg
sbb
insb
sub
fldln2
pop
inc
mov
xorl
push
add
push
add
daa
nop
add
pop
xor
lret
sub
xor
shll
pop
bound
mov
add
ficompl
lret
ljmp
add
mov
add
push
add
add
mov
and
mov
mov
xor
add
rolb
rcll
mov
or
dec
xchg
add
add
sub
stos
jno
cli
xlat
sbb
and
or
fstps
dec
in
sbb
adc
cmp
jne
push
add
iret
pop
xchg
cli
or
fimuls
addr16
stos
hlt
add
push
mov
das
xchg
add
mov
mov
add
add
add
je
sti
test
mov
cwtl
pop
xchg
add
and
mov
out
add
in
add
scas
lds
fsub
add
popf
xor
xchg
enter
insl
sbb
adc
gs
add
cs
test
loop
xor
roll
fstps
pop
add
jge
pop
dec
nop
add
add
inc
ret
ficompl
add
cmp
mov
data16
aam
jp
mov
cmp
add
stc
push
montmul
cmpsb
add
mov
ds
add
add
fistps
testb
add
sub
add
xchg
xchg
add
iret
movsl
jl
xor
rolb
incl
add
int
pop
aas
sub
movsl
sub
loopne
popf
aad
mov
or
add
add
jge
addb
cld
ss
xchg
inc
outsl
daa
repnz
inc
xchg
mov
sbb
lock
mov
add
pushf
dec
mov
inc
add
xor
mov
jle
sub
fcom
add
insl
xor
fisubrl
dec
push
fisttps
lret
js
aam
in
nop
add
mov
add
add
adc
insl
or
rcrl
loopne
inc
add
out
loopne
xchg
aad
sbb
add
add
add
sbb
cmp
clc
fwait
lods
jle
push
mov
add
dec
in
add
aad
daa
pop
add
add
mov
jb
roll
mov
pop
addb
testb
pop
movb
xor
push
cld
sti
je
add
popa
jns
add
add
stc
xchg
add
cmp
jne
aad
in
push
lock
les
in
sub
inc
out
std
or
add
cmpsb
add
add
inc
add
popf
ret
add
std
xor
push
add
sahf
dec
lcall
cmp
out
push
mov
cmp
ds
add
int
stos
push
add
fdivs
fstpt
adc
sub
enter
outsb
cmp
add
mov
mov
movsb
add
popf
mov
mov
das
leave
jns
adc
add
cmp
bound
mov
xor
les
jbe
and
add
and
mov
repz
and
jbe
jmp
dec
icebp
stc
lods
out
mov
xchg
movsb
add
mov
cwtl
test
add
aas
cld
jg
mov
add
dec
ds
add
clc
dec
mov
lret
mov
xchg
add
pop
daa
jg
dec
loop
mov
sbb
xor
cmpsb
add
add
enter
add
cwtl
ficompl
push
add
add
add
add
add
ds
xchg
xlat
cmpsb
add
imul
out
push
add
mov
sbb
add
sbb
adc
add
sahf
data16
xor
or
mov
cmp
jle
data16
jns
cmp
add
dec
addb
push
add
or
lods
into
xchg
add
mov
and
mov
xchg
rolb
xchg
jo
inc
add
data16
add
add
add
test
and
push
fstp
pop
mov
mov
or
lret
add
or
iret
mov
loop
aas
mov
or
push
int
cltd
sbb
add
add
rolb
push
mov
lahf
adc
lret
mov
xchg
out
aaa
dec
dec
mov
add
add
pushf
jmp
adc
xchg
add
push
add
js
add
cmpsl
addb
sub
rolb
add
mov
out
adc
mov
dec
popa
push
imul
addr16
xor
cmp
mov
ss
add
mov
jae
xor
pop
mov
pop
mov
adc
add
fildll
das
xor
inc
lea
jle
add
add
inc
add
add
clc
fidivs
test
xchg
jmp
add
in
repnz
adc
or
mov
pop
loope
cli
xor
mov
into
xchg
add
push
jle
out
mov
sbb
dec
shll
fnstsw
add
mov
sub
mov
or
and
mov
lods
push
insl
out
push
outsl
sub
out
out
fnstcw
aad
inc
mov
push
add
add
mov
test
mov
cld
js
push
or
out
movsb
add
cmp
mov
add
mov
ja
enter
test
cli
aas
xchg
add
adc
pusha
add
sbb
loopne
cmpsb
add
add
mov
xor
xchg
mov
add
mov
add
std
cmp
mov
scas
or
rolb
imul
add
mov
sub
add
add
sub
add
mov
add
aas
sbb
add
mov
add
ffree
popf
xchg
add
mov
add
add
add
adc
js
test
add
ret
leave
les
js
add
add
mov
pop
and
mov
ja
shr
push
je
inc
inc
jne
out
and
mov
add
pop
mov
sarl
popa
pusha
add
add
add
dec
rcl
add
hlt
add
add
add
lret
or
repnz
sub
or
xor
push
je
mov
and
repz
add
xchg
lods
adc
jne
addb
data16
pop
inc
add
or
add
mov
lret
iret
adc
std
push
rolb
or
cmp
sahf
ror
add
scas
stos
addr16
cmpsl
out
je
sub
addb
addb
xchg
jo
mov
add
add
out
inc
mov
stc
dec
movsl
xchg
add
movsl
in
mov
adc
cmp
add
xor
rolb
clc
dec
testb
add
mov
pop
mov
stos
ljmp
jg
aam
push
jg
push
xor
add
mov
mov
jnp
add
add
mov
xor
push
push
rolb
mov
add
int3
pop
aas
and
mov
clc
sbb
add
repz
add
add
xlat
pop
fisubs
data16
je
and
mov
xlat
scas
push
mov
add
xchg
jp
inc
add
cmp
mov
test
push
add
or
int3
sbbl
add
out
push
add
testl
add
adc
inc
in
or
push
pop
or
add
cltd
add
mov
pop
fcom
add
ds
rolb
push
data16
loope
add
fmul
outsl
add
jmp
push
jmp
aas
daa
popa
arpl
push
out
pop
ficoml
add
add
lret
lahf
cmp
add
in
mov
dec
rolb
add
xchg
add
roll
mov
repnz
mov
xchg
add
jb
pop
jge
pushl
int3
push
add
add
push
mov
rolb
add
add
iret
or
rolb
scas
dec
jl
jbe
enter
add
add
sub
jp
add
xchg
add
ret
add
pop
push
mov
cs
mov
add
mov
xlat
cs
mov
inc
mov
stos
push
add
lea
add
sub
mov
add
jne
add
add
xor
sub
add
add
mov
add
add
sub
lds
push
inc
mov
xor
adc
xchg
rorl
pop
push
nop
add
inc
add
mov
fsubp
rolb
add
out
fs
outsl
dec
loop
and
or
push
dec
mov
mov
loope
sbb
ret
ljmp
mov
add
daa
sarl
iret
cmc
call
add
add
pop
xchg
mov
cwtl
jg
add
mov
add
or
or
insl
lret
add
mov
and
add
dec
xchg
dec
or
add
jns
push
add
nop
add
test
repz
mov
add
dec
pushf
into
cmp
add
add
add
add
xchg
popf
jns
add
inc
pop
jp
lods
or
add
adc
sub
or
mov
add
mov
jbe
nop
add
lds
enter
loope
add
add
sahf
fldt
insb
mov
add
aam
jmp
les
or
sbb
add
and
cmpsb
add
jmp
lret
add
negl
add
add
mov
inc
add
fnsave
loop
imul
add
ljmp
sub
iret
test
add
add
add
jns
lret
and
add
int
das
bound
mov
and
sbb
add
sbb
in
mov
add
add
mov
repnz
xlat
cmp
cmp
data16
aas
mov
add
les
arpl
sub
add
loope
out
daa
mov
push
dec
xlat
out
dec
xor
xchg
add
add
pop
sbb
cwtl
cltd
cltd
shll
xor
cmp
xchg
mov
test
add
rolb
subl
add
rolb
dec
lock
data16
jle
add
das
lahf
and
mov
data16
js
or
add
jnp
jno
leave
dec
testb
add
pop
push
add
add
mov
sub
cs
ret
stos
mov
cli
lds
les
nop
add
add
daa
and
push
or
xchg
add
ljmp
add
sbb
enter
mov
push
jae
in
inc
sti
bound
mov
inc
popf
mov
add
push
add
push
add
push
dec
or
sub
out
add
add
or
cmc
hlt
add
rolb
add
scas
mov
out
add
cmp
jmp
and
mov
cmp
mov
add
push
add
and
mov
test
jne
xor
rcrl
orl
rorl
sidtl
jle
popa
hlt
add
scas
lea
test
add
scas
mov
dec
ror
sbb
mov
mov
fisubrs
fwait
imul
adc
inc
add
add
mov
xchg
mov
add
add
lods
shr
dec
incl
pop
aaa
mov
repnz
adc
sahf
sbb
ror
loopne
ret
jl
and
add
mov
pop
cmp
mov
pop
add
add
rolb
movb
add
test
add
jo
rolb
out
std
das
fcompl
pop
stos
cld
sub
add
aam
adc
scas
push
rolb
fcomps
pop
daa
push
add
sub
test
ret
ds
mov
pusha
add
mov
gs
adc
imul
or
lods
ja
cmp
jle
add
mov
lcall
incl
sti
xchg
add
xchg
rolb
popf
ss
or
add
add
add
xchg
iret
xchg
mov
mov
lods
loope
add
daa
add
mov
pop
mov
xchg
outsb
mov
and
add
add
mov
mov
mov
mov
jmp
jmp
mov
mov
add
loopne
cmp
xor
adc
add
push
repz
addr16
rolb
imul
cli
nop
add
add
gs
sub
loope
add
jg
rep
or
les
cli
loop
aas
js
xchg
jl
add
or
pop
data16
adc
and
dec
and
mov
aas
loopne
and
mov
imul
xchg
mov
add
dec
xor
cmp
sub
mov
cmp
add
jbe
push
add
in
pushf
aad
pop
push
and
mov
sub
mov
mov
adc
add
fiaddl
add
fisubrs
add
lret
mov
dec
rolb
or
mov
pop
hlt
add
lds
test
cwtl
jge
rolb
andl
out
inc
jnp
shll
add
mov
aam
enter
fwait
out
incl
ds
lods
pop
add
icebp
dec
lret
test
scas
iret
call
int3
adc
adc
iret
add
cmp
add
add
sub
xchg
add
add
test
cmp
aad
add
cs
push
add
add
rcll
inc
nop
add
sbb
int3
xchg
arpl
add
xchg
add
add
push
insb
xchg
stos
sbb
add
xor
add
sbb
mov
pop
mov
jb
mov
jge
add
adc
mov
mov
push
call
or
test
fld
xor
push
lods
dec
inc
add
or
daa
movsl
or
jb
xor
int
add
add
add
mov
test
dec
xchg
push
jmp
or
adc
aas
ret
cmp
add
inc
add
mov
test
mov
std
xor
out
add
jne
data16
insl
pop
jnp
inc
cmp
cmc
gs
add
test
mov
mov
mov
lret
movb
add
push
xchg
add
daa
pop
ficoms
add
clc
in
aas
push
add
push
dec
fistl
add
mov
xchg
clc
mov
add
push
add
lods
push
movb
in
mov
inc
add
neg
xchg
sbb
dec
lret
aam
sti
adc
push
mov
add
icebp
mov
add
add
dec
repnz
jae
push
and
mov
scas
movsl
scas
pop
mov
mov
movb
lds
shrl
mov
mov
loop
xchg
add
add
repz
aad
fbstp
leave
sahf
rolb
or
add
jge
pop
std
jne
subl
xchg
fwait
jne
mov
inc
add
jl
mov
movsb
add
add
add
cmpsb
add
cmp
add
add
xchg
push
mov
mov
xchg
add
rolb
add
mov
dec
jne
jle
mov
add
outsl
imul
or
push
add
dec
wrmsr
add
xor
ds
or
add
add
outsl
cmc
ljmp
call
test
add
std
jle
add
add
add
jo
xchg
sub
mov
push
add
sti
mov
daa
daa
push
mov
add
loopne
bound
mov
sub
imull
je
scas
ja
add
ljmp
or
add
mov
add
sbb
bound
mov
and
jb
test
scas
cmp
ret
add
roll
push
add
lcall
add
mov
jns
add
pop
mov
xor
aaa
mov
lret
xchg
mov
test
add
add
push
cmp
mov
adc
push
add
int3
and
pop
push
and
mov
mov
push
dec
push
add
add
sub
mov
inc
pusha
add
add
jmp
lds
fldcw
jecxz
test
add
xor
loope
add
add
pop
mov
sub
sub
add
add
mov
adc
add
mov
rcll
mov
add
scas
and
imul
icebp
xor
popf
xchg
push
add
adc
pusha
add
in
push
jle
add
mov
add
inc
jecxz
adc
jns
add
add
jl
ja
add
into
addb
sbb
lock
add
xchg
repnz
mov
add
add
imul
cwtl
sub
add
push
testb
dec
cmp
pop
xchg
fwait
push
add
mov
mov
add
sbb
inc
add
test
movnti
mov
ljmp
dec
add
loop
lds
cmpsb
add
mov
movb
mov
add
add
add
shll
add
mov
mov
add
mov
in
out
sbb
pop
ret
mov
mov
leave
les
mov
jae
mov
jg
mov
add
mov
push
mov
sub
pusha
add
push
add
sub
add
cmpsl
ljmp
fcmovb
xchg
add
add
add
insl
lods
sub
mov
dec
and
sbb
mov
repz
repnz
add
pushf
enter
pop
rolb
fcmovu
out
cmp
pop
cmp
fcmovnb
add
mov
mov
imul
mov
inc
inc
arpl
add
cmp
pop
loope
and
arpl
add
xchg
add
add
fisttpll
dec
mov
add
and
inc
add
push
add
mov
iret
cwtl
stc
push
add
mov
cmc
lcall
add
add
nop
add
cli
xor
std
mov
aas
cmc
fidivl
rolb
xlat
dec
mov
test
add
insl
lock
or
add
dec
sub
inc
xchg
mov
add
inc
add
in
arpl
add
add
insb
or
movsl
and
add
addb
mov
push
repz
outsb
adc
adc
or
fisubrs
mov
add
cmp
add
jb
dec
add
pop
jg
loop
mov
out
cmp
add
add
add
std
outsl
mov
inc
and
mov
add
jns
add
jg
stos
cwtl
scas
scas
inc
add
pop
insl
inc
add
jg
xchg
xchg
add
add
mov
loope
add
push
and
add
add
add
jge
add
add
mov
mov
add
mov
add
add
inc
pop
xor
icebp
xchg
outsb
inc
fmulp
les
lods
out
and
jbe
mov
dec
xchg
add
add
mov
rolb
and
mov
mov
inc
add
lcall
mov
and
mov
dec
pop
rolb
dec
lock
shll
mov
inc
xor
mov
add
data16
mov
add
xchg
mov
add
inc
add
dec
jb
mov
mov
addb
add
jmp
mov
addb
jae
push
sbb
add
dec
inc
add
xchg
add
jns
add
add
push
loop
leave
pop
dec
mov
xor
push
mov
xor
push
aam
add
or
or
popa
push
add
arpl
nop
add
out
cli
iret
xor
add
add
and
mov
push
jge
adc
add
mov
push
add
add
arpl
mov
add
jmp
test
push
add
add
inc
and
mov
add
mov
lret
add
add
enter
jge
fcom
add
xchg
add
jg
lcall
add
rolb
jmp
mov
aam
xchg
add
add
add
jge
push
sbb
add
mov
test
movb
xchg
add
add
add
jg
sub
jne
add
popa
rcrl
pop
arpl
pop
jbe
addb
add
mov
jle
das
jmp
pop
jecxz
jl
add
xchg
and
mov
ret
xor
je
int3
pop
xor
add
add
cmp
or
add
add
and
add
add
add
push
add
ljmp
nop
add
cld
fstpl
push
add
xlat
add
add
push
add
jl
mov
test
add
lods
fwait
sbb
cmc
push
rolb
daa
leave
repnz
das
aaa
and
roll
dec
outsb
in
jnp
int
mov
mov
adc
dec
je
popf
push
add
fcmovbe
add
rolb
or
xor
aaa
dec
outsl
push
rcr
xor
xor
jbe
das
pusha
add
mov
add
stc
jnp
pop
lret
xchg
add
popf
aaa
xchg
add
mov
adc
mov
shl
mov
in
movsl
inc
xchg
stos
aam
inc
add
add
cmc
mov
push
scas
lods
lea
xchg
add
sub
mov
add
push
jo
push
add
sub
popa
adc
in
add
ficompl
inc
cmp
add
cmc
ss
add
dec
ljmp
or
dec
pusha
add
popf
movsl
xchg
add
add
cltd
leave
adc
stc
add
and
popf
test
int3
fdiv
add
in
scas
lret
movsb
add
mov
push
add
push
add
outsl
arpl
push
add
stos
xorl
xchg
dec
push
add
add
add
add
add
add
add
rcll
inc
leave
adc
mov
add
push
in
push
add
decb
xchg
inc
and
mov
add
add
lret
sbb
add
xor
ret
scas
unpckhps
push
or
les
pop
mov
add
hlt
add
std
in
rolb
jns
push
add
add
test
addb
pop
scas
jns
mov
add
add
mov
mov
bound
mov
mov
xchg
add
push
sub
sbb
test
fiaddl
add
sub
add
lea
jl
mov
xchg
push
call
cmpsb
add
xchg
movsl
insl
aas
dec
xchg
mov
add
cld
mov
jne
add
aam
push
xor
inc
imul
or
and
movb
cli
xchg
inc
add
lret
or
add
cli
test
push
test
add
loopne
rolb
leave
in
mov
scas
insb
or
pop
sub
inc
add
cltd
je
push
add
sub
inc
add
jne
cmp
xchg
add
addb
add
leave
cld
sub
add
push
rolb
jl
add
pop
xchg
add
ljmp
xchg
add
mov
pop
sbb
sub
add
add
sub
sub
testb
mov
stc
mov
mov
aam
inc
fildl
jne
pop
dec
out
pushf
popa
dec
movsl
dec
add
mov
testl
stos
bound
mov
stc
xchg
scas
mov
xor
jecxz
xor
add
inc
mov
add
add
add
lea
daa
add
mov
sbb
sub
js
jns
add
das
xchg
pop
and
mov
sbb
add
or
rcl
inc
cmp
add
mov
lahf
adc
rcl
add
pop
push
xor
and
push
add
add
and
mov
mov
js
sub
jle
add
add
add
outsl
push
add
add
or
push
add
insb
notl
mov
dec
ljmp
enter
add
stos
shl
jg
shl
cmp
or
push
push
pop
fists
add
or
add
dec
jmp
add
xchg
add
dec
adc
popf
or
ljmp
call
sti
enter
aaa
xor
add
stos
adc
pop
add
mov
push
dec
out
push
loopne
sub
mov
gs
iret
sbb
add
mov
add
or
movsl
xor
mov
add
fbld
pop
mov
add
jno
cmp
lahf
imul
ja
cmp
lods
in
add
add
lcall
sbb
or
faddl
pop
and
inc
add
mov
dec
repz
jecxz
xchg
sbb
add
sbb
lret
add
mov
fwait
test
out
push
add
jmp
add
pop
sahf
repz
xchg
add
add
add
sahf
jno
add
xor
xchg
add
mov
popf
sbb
add
pop
test
les
dec
loop
pop
jmp
into
inc
add
add
cmp
cmp
popa
js
in
mov
dec
push
add
and
lea
fistl
sub
xchg
pop
js
mov
mov
cmp
movsl
mov
cld
je
mov
cltd
mov
leave
sbb
add
rolb
xor
out
addl
or
add
fstpl
xlat
lahf
cmp
pushl
mov
fcom
dec
aad
add
add
add
add
add
call
cld
test
or
and
add
daa
sti
add
fadds
into
add
add
mov
add
mov
fcompl
add
mov
jmp
cmp
pop
jb
lods
ja
fdecstp
add
adc
or
add
add
aaa
aas
jle
mov
dec
popa
int
mov
in
dec
js
add
data16
call
add
movb
add
iret
in
jno
xor
fldl
add
pop
jge
mov
mov
add
dec
push
cmc
jns
shrd
or
add
add
aad
cmp
add
add
jge
pop
or
add
jg
sub
sub
aam
jo
push
add
pop
std
push
enter
dec
aad
add
inc
add
ss
add
aad
mov
testl
mov
outsl
test
jg
ret
push
add
cmpsb
add
add
jne
cmp
jae
add
add
lret
insl
push
xchg
sub
cmp
mov
add
inc
add
push
add
repnz
mov
mov
into
cmpsb
add
add
add
lock
push
add
push
stc
jmp
add
arpl
add
aam
pushf
rolb
cwtl
sub
orl
movsl
mov
lret
lret
and
insl
mov
mov
add
add
mov
ljmp
pop
out
lcall
sbb
add
dec
sub
xorl
add
or
inc
cmp
add
mov
push
pushf
inc
add
or
pop
sub
mov
dec
add
pop
push
add
repnz
rolb
sbb
mov
sub
cmc
or
icebp
xor
mov
add
add
sbb
lahf
addb
or
add
dec
sbb
pmullw
add
sbb
add
test
out
xchg
add
shr
add
add
dec
mov
int
fwait
mov
inc
add
cmp
and
mov
roll
inc
add
add
cmpsl
xor
pop
jge
ja
add
sub
add
sahf
js
add
fsts
lea
sahf
ret
cld
out
add
das
pop
jno
add
add
add
movsl
mov
xchg
add
sbb
add
add
xor
mov
adcl
add
mov
add
add
fidivl
icebp
and
das
add
imul
in
push
mov
ficoms
imul
jmp
mov
testl
inc
cmp
gs
lods
in
or
cltd
jle
push
add
mov
mov
add
adc
addl
mov
lahf
xlat
ficompl
adc
std
pop
or
lods
jmp
add
add
add
pushf
arpl
add
push
lahf
sbb
adc
adc
jp
test
insl
cmp
mov
add
js
imul
pop
mov
or
mov
arpl
sti
xchg
inc
add
add
adc
in
adc
cwtl
test
add
xchg
add
in
loope
ret
pusha
add
jns
insb
push
add
mov
sub
mov
out
add
mov
test
add
add
jns
iret
aad
repz
mov
sbb
xor
mov
or
jmp
inc
add
jle
enter
ret
xchg
add
out
push
add
subl
js
lret
mov
pop
cli
data16
sub
decb
aaa
and
mov
add
add
mov
mov
int3
lret
jg
add
add
cmpsb
add
xadd
mov
xchg
add
rolb
cmpsl
lret
add
inc
add
mov
add
or
test
add
xchg
cmp
data16
add
scas
fwait
leave
in
pop
imull
repz
pop
outsb
loop
repz
add
add
sti
repz
rcr
out
in
jmp
shl
add
shrl
sbb
mov
mov
add
movb
lods
repnz
gs
lock
sbb
add
add
std
fists
data16
mov
das
xchg
pop
lahf
in
and
mov
add
cmp
mov
add
add
add
jae
add
add
pop
cmpsb
add
stos
xchg
mov
scas
sbb
add
jmp
or
dec
icebp
mov
xchg
pop
mov
scas
shrl
add
add
add
js
nop
add
mov
or
scas
jle
add
rolb
pop
add
add
add
xchg
shl
mov
sti
mov
cmpsb
add
idiv
inc
add
add
mov
pop
and
mov
daa
out
inc
push
add
add
jle
jo
cmc
test
add
add
pusha
add
sbb
add
xchg
xor
jmp
cmp
leave
mov
loopne
dec
jmp
jmp
add
add
jnp
xor
xchg
add
andl
add
repz
roll
cld
or
cmp
add
bswap
jbe
and
mov
add
jnp
add
testb
int
add
add
mov
add
cmp
mov
test
pushf
jbe
scas
adc
push
add
adc
or
jg
add
add
mov
add
lea
cmp
mov
bound
mov
or
faddl
add
call
les
jecxz
test
pop
cmp
add
add
repz
push
add
add
xor
jno
rolb
cwtl
and
add
out
jae
mov
mov
data16
cmp
data16
add
fucomi
xchg
mov
ja
pusha
add
add
add
mov
inc
testb
mov
int3
jp
in
jecxz
and
mov
add
inc
add
push
add
icebp
cmp
mov
fwait
add
mov
outsb
mov
ret
adc
test
mov
nop
add
xlat
popf
icebp
inc
add
xlat
adc
push
pop
pop
sbb
mov
nop
add
lcall
ret
sbb
push
add
int
mov
add
add
add
mov
add
jl
sarl
or
add
cmp
das
clc
cwtl
sub
cmp
rep
pushf
jo
xor
dec
mov
add
cs
add
dec
sarl
ja
jp
stos
push
add
pop
stos
les
pop
mov
xor
push
add
push
add
jl
add
xor
add
pushf
sub
push
sbb
push
inc
or
add
xlat
ja
dec
push
add
lahf
ljmp
cmp
out
test
pop
dec
mov
xchg
jecxz
add
add
stc
push
popa
pop
imul
xchg
add
call
adc
pop
imul
mov
repz
sub
enter
inc
push
popf
pushf
add
mov
add
add
mov
add
jle
mov
cmovle
and
call
mov
add
pop
cltd
enter
lods
sub
xchg
add
pop
cmpsl
test
iret
loopne
xlat
out
and
or
mov
pop
loop
cmp
cli
gs
add
and
mov
ja
mov
data16
or
push
add
mov
mov
adc
pop
xchg
pop
cwtl
jl
jnp
xchg
inc
add
mov
cltd
and
inc
or
mov
mov
pop
scas
add
xchg
add
dec
add
cltd
rolb
jge
hlt
add
add
mov
mov
lds
in
adc
in
xor
call
mov
add
leave
jl
dec
ret
xchg
add
lahf
push
insb
movl
inc
add
xchg
fnstsw
sub
add
pop
enter
push
inc
add
mov
test
into
scas
and
cli
jg
and
mov
std
pop
xchg
mov
addb
cs
rcrl
inc
arpl
pop
les
mov
loopne
mov
stc
in
mov
cmpsb
add
pop
in
xchg
sbb
js
out
inc
mov
add
and
mov
rolb
cmp
add
add
add
mov
cwtl
leave
bound
mov
mov
add
add
cli
je
add
sbb
popf
andl
add
int
add
add
cmp
adc
sti
sub
rolb
jl
sub
add
and
mov
cltd
mov
pusha
add
sbb
mov
add
pop
rcrl
mov
lds
testb
jns
mov
or
add
add
jle
add
jbe
inc
test
pop
mov
add
add
clc
imul
lods
lds
mov
shr
push
add
add
cmp
sub
jb
and
or
adc
add
lcall
add
fdivrl
adc
stos
dec
xchg
add
inc
sub
aas
xchg
jo
xchg
mov
jp
call
sti
adc
jge
mov
xlat
js
mov
mov
mov
lods
mov
out
jns
rorl
pop
cmp
nop
add
fmull
imul
pop
add
add
icebp
or
test
add
add
mov
mov
repz
popa
mov
call
add
daa
into
fs
xor
push
add
add
push
add
sub
add
sub
add
add
mov
add
adc
stos
stos
xor
outsb
pop
lds
add
add
test
sbb
insb
scas
add
mov
push
pop
daa
inc
add
mov
add
test
popf
add
mov
addr16
add
popa
mov
push
add
ficomps
xchg
loope
add
nop
add
data16
add
adc
mov
into
testl
test
bound
mov
add
sbb
daa
and
sub
jb
pop
xor
mov
enter
test
add
mov
add
addb
jne
add
jle
add
xchg
data16
pop
mov
add
lret
addb
add
add
add
add
inc
add
mov
sahf
shl
inc
mov
add
add
add
mov
add
add
inc
or
aad
sbb
lock
mov
xor
add
mov
dec
pop
mov
xchg
add
jmp
add
flds
add
repz
out
add
cwtl
jnp
add
mov
jae
pushf
nop
add
lock
std
sub
pusha
add
arpl
mov
add
add
mov
add
lds
rolb
add
add
sub
mov
rolb
add
pusha
add
pop
mov
scas
dec
pop
in
push
add
jg
and
addb
pop
cmp
mov
jmp
shll
gs
cmpsl
cmp
pop
dec
pop
push
add
ss
jg
dec
hlt
add
pop
addl
lahf
test
outsb
mov
fdivr
stc
shll
mov
push
add
inc
vpsubq
inc
add
and
call
push
jle
sbb
add
fisttpl
ret
out
jmp
addr16
jecxz
add
add
pop
aad
ja
idivl
xlat
fdivs
inc
add
pop
jns
movb
in
dec
mov
in
dec
nop
add
jo
dec
stc
iret
xchg
push
testb
lcall
lret
les
gs
cltd
inc
add
add
add
jo
mov
icebp
xchg
add
jb
xlat
clc
dec
lahf
movsl
addb
add
int
int
xor
imul
cmp
add
lds
ds
cwtl
push
insb
ds
arpl
xchg
add
add
ret
mov
lods
xlat
mov
add
sub
inc
inc
add
js
pusha
add
add
sahf
add
in
pop
xchg
add
movsl
stos
rolb
push
add
ds
mov
cmc
rolb
or
fstps
pand
mov
and
mov
ret
nop
add
jns
mov
or
add
add
add
pop
mov
add
fldcw
mov
outsb
pushf
xor
lret
loope
add
inc
cwtl
cli
inc
js
add
pop
and
mov
mov
adc
push
push
add
mov
leave
sub
mov
add
cmp
add
or
out
jle
gs
add
pop
mov
add
mov
add
mov
ja
mov
pop
sub
add
cmp
into
jl
pop
dec
addb
sbb
add
outsl
out
xchg
add
jae
add
add
testb
mov
dec
addb
jnp
add
mov
push
add
cmp
add
add
jmp
add
push
add
add
jl
mov
in
hlt
add
sbb
add
mov
sbb
lods
or
lds
add
ret
lcall
rolb
fwait
test
cs
fdivl
sahf
inc
add
add
add
mov
push
cmp
lock
and
lret
dec
mov
jns
add
push
add
add
push
dec
enter
mov
add
mov
inc
add
add
pop
add
out
add
roll
sbb
ja
add
outsb
mov
pop
jge
xor
xor
xor
cs
iret
rolb
stos
lea
push
add
scas
jno
lods
pushf
insl
popf
sti
push
add
xchg
add
add
add
mov
idiv
mov
out
xor
nop
add
addb
stos
add
les
addr16
sahf
mov
icebp
jno
xor
sub
mov
xchg
rolb
mov
add
dec
rol
mov
out
add
popf
inc
add
add
mov
in
mov
js
add
xor
xchg
or
mov
sub
rolb
nop
add
lcall
aaa
xor
movsb
add
repnz
inc
add
mov
add
jecxz
add
add
sbb
jle
add
sbb
rorl
dec
sahf
adc
or
dec
add
inc
daa
icebp
jmp
fcmovnu
loopne
jg
add
dec
outsl
out
idiv
test
popa
pop
ds
add
mov
pop
or
sbb
leave
push
or
rol
add
mov
xchg
add
cmp
mov
mov
cmp
sub
jl
sbb
add
fdiv
jbe
leave
movsl
outsb
pop
out
repnz
bound
mov
icebp
ljmp
push
add
pop
dec
pop
cmp
cwtl
xorl
jne
mov
add
add
add
sub
add
inc
je
cmc
rolb
xor
adc
testb
inc
add
out
in
xchg
std
push
add
add
add
add
add
addb
and
mov
dec
cmc
arpl
add
cld
mov
loopne
mov
insb
ds
mov
out
std
and
mov
fcomp
add
add
pop
jp
insl
add
fmull
jne
addb
and
push
mov
cmc
jb
fsts
inc
mov
js
or
ja
dec
xchg
adc
test
and
push
mov
testb
bound
mov
fsubrl
iret
std
sbb
add
adc
in
pop
cmp
xlat
scas
dec
mov
add
lods
repnz
pop
fnstsw
add
add
imul
adc
add
push
mov
add
add
xor
xor
in
pop
sbb
jge
lret
out
aam
xor
mov
sub
sub
subl
dec
jle
push
sti
scas
in
sub
add
movsb
add
sub
out
lret
add
or
cltd
fcomps
add
pop
aas
aam
mov
add
sub
add
jo
sarl
movb
adc
je
or
sub
add
add
add
add
add
stos
dec
ret
pusha
add
testb
add
add
add
and
pop
sub
or
in
adc
jg
add
addb
push
mov
add
add
popa
sub
fs
test
adc
loop
enter
out
icebp
clc
in
push
xchg
add
dec
mov
cmp
dec
cmc
js
stos
mov
add
adc
add
loope
xchg
jmp
add
mov
in
sub
aaa
aaa
mov
mov
push
rolb
addb
jns
cmc
cmc
aam
add
dec
imul
add
add
add
cmp
stc
lods
push
adc
inc
shrl
xchg
movb
cmp
push
add
aam
pusha
add
push
jae
cmp
imul
push
ds
addb
add
mov
enter
mov
push
xorl
repz
add
xchg
add
add
stc
lock
add
add
mov
pushf
enter
cmpsl
jns
mov
add
cpuid
add
add
addb
add
add
arpl
jg
mov
testb
addb
adc
lret
add
dec
xor
jae
add
or
cmp
sahf
xor
out
in
jo
ljmp
cmp
or
stos
dec
out
sbb
lock
aaa
cmp
pop
and
imul
adc
adc
cmp
add
add
mov
fisttps
fisubs
add
push
fwait
call
mov
push
add
or
jl
movb
dec
rolb
jb
aam
ret
push
add
add
push
xor
add
rolb
pop
lds
pop
pusha
add
pop
leave
push
and
add
or
clc
jno
add
hlt
add
add
mov
mov
add
addb
imul
ret
jb
insb
pop
mov
add
mov
add
add
add
xchg
add
add
fistpl
add
in
out
dec
leave
sbb
cmpsl
pop
adc
xchg
shrl
add
push
aas
rolb
movsl
add
lret
mov
add
mov
js
add
add
add
sub
addb
sarl
add
mov
mov
popa
mov
cli
fcomip
data16
arpl
lods
pop
movsl
xorl
add
add
push
lock
add
mov
movb
jb
popa
out
jg
xchg
pop
xorl
add
mov
add
jb
mov
js
imul
add
add
lret
stos
cmp
mov
inc
add
in
aas
dec
xchg
jle
add
add
add
fwait
dec
popl
add
das
xchg
xchg
add
pop
clc
jl
test
add
stos
add
dec
xor
pop
xchg
add
add
mov
in
mov
testb
add
mov
add
add
pop
movb
add
cltd
aam
mov
std
lock
sarl
inc
push
add
pop
lock
push
sbb
add
xchg
add
sub
loop
decb
add
repnz
dec
out
movsl
and
add
adc
jnp
add
mov
or
nop
add
std
mov
mov
xchg
add
pop
fcoms
jp
fwait
add
add
cs
xchg
fcompl
add
test
dec
ds
jle
lret
insl
xchg
add
int3
sub
out
enter
mov
stos
test
add
and
mov
dec
int3
adc
in
pop
fisubl
add
add
mov
add
dec
cmpl
mov
pop
xor
nop
add
jp
pop
lds
sbb
clc
add
loope
add
jge
xchg
add
les
loope
scas
ljmp
pop
inc
cmp
mov
add
jae
test
mov
push
add
add
cs
add
mov
pminub
pop
inc
adc
xchg
add
mov
loop
mov
mov
add
xchg
test
add
movsl
adc
add
add
add
rolb
lds
adc
das
je
xor
clc
mov
push
add
jp
sub
push
out
insl
test
sub
inc
outsb
repnz
mov
lds
inc
add
add
cld
rcll
pop
jno
push
add
mov
xchg
add
mov
mov
mov
jg
add
add
cmp
mov
test
xor
clc
mov
add
out
rolb
fcmovnbe
add
fisttpll
add
add
sub
lcall
bound
mov
mov
mov
add
add
in
add
mov
add
jnp
add
jno
add
fisubs
mov
add
daa
push
add
aad
add
add
xchg
add
add
mov
sbb
add
mov
add
mov
add
jbe
mov
addb
add
sub
mov
sbb
add
inc
add
add
rorl
lds
rolb
jnp
mov
sub
push
popa
xor
xor
push
lahf
movsb
add
add
ficompl
mov
cmp
data16
cmpl
clc
pushf
sbb
mov
sahf
int3
clc
or
or
ja
add
pop
into
dec
or
add
lret
xchg
add
out
rorl
scas
clc
inc
add
mov
add
dec
and
mov
add
aad
lret
adc
add
mov
push
add
mov
add
insb
push
jl
in
fadds
add
fsubrs
mov
add
in
mull
push
adc
filds
mov
ret
jae
or
jo
stc
movsl
popa
inc
test
inc
clc
mov
add
push
add
xor
push
xchg
cmc
dec
aaa
pushf
lahf
bound
mov
cmp
add
add
mov
pusha
add
or
add
add
add
popf
jl
add
add
mov
add
das
or
jno
add
add
add
add
add
jo
inc
stos
and
add
add
jns
outsl
mov
add
or
icebp
push
pusha
add
push
movsl
pop
pop
ret
jg
ret
add
add
sbb
sbb
add
pop
sub
es
add
and
enter
mov
jbe
and
pop
add
pop
pop
lcall
daa
add
add
in
add
popf
js
xchg
call
fsub
add
test
lret
popa
push
lret
mov
in
add
mov
pushf
testb
aaa
outsb
js
mov
cmp
mov
shll
aas
push
add
add
rolb
jge
add
jmp
lea
mov
adc
inc
pusha
add
mov
dec
mov
add
sub
pop
or
fsqrt
sbb
inc
movsl
outsb
jno
test
mov
add
jae
mov
in
jne
jle
mov
jno
test
mov
mov
jno
outsb
jb
jae
and
mov
mov
lods
gs
fdivr
xchg
in
push
add
mov
add
outsl
dec
mov
out
icebp
data16
add
jl
lahf
in
mov
ret
add
stos
push
add
dec
out
xchg
add
pushf
sub
add
mov
add
add
scas
ja
add
stos
add
mov
lds
add
aaa
outsb
cmp
mov
inc
add
dec
int
call
test
add
cmp
daa
sub
loop
data16
add
add
and
add
insl
ljmp
addb
lret
xor
pop
push
add
jns
cmp
add
imul
add
add
inc
inc
xchg
add
add
add
cmp
add
sub
add
mull
pusha
add
or
pop
mov
stc
add
push
add
insl
cmpsb
add
enter
jo
addr16
cmpsl
nop
add
adc
push
add
jo
mov
icebp
mov
or
add
insb
push
add
fucom
add
mov
and
mov
add
cmp
mov
test
imul
jl
mov
push
add
add
je
aaa
inc
add
test
and
in
adcl
repz
adc
push
pop
stos
fistpl
add
xor
aas
cmpsl
shl
add
hlt
add
push
rolb
fyl2xp1
in
scas
xchg
add
push
add
mov
or
inc
outsb
mov
add
in
xchg
sub
add
scas
pop
or
outsb
sub
hlt
add
mov
add
add
or
mov
aad
add
mov
add
push
test
add
bound
mov
stc
push
mov
in
cmpsl
mov
add
sbb
sbb
push
push
sub
pop
push
add
movsl
fwait
leave
mov
add
mov
ficoms
cmp
add
add
lret
inc
add
and
mov
movsl
rolb
stos
shrl
inc
add
aas
pop
sub
jnp
add
add
cmpsl
add
aaa
js
add
adc
add
addb
or
fistpl
cs
scas
xor
cmp
mov
scas
adc
nop
add
loope
pop
insb
sbb
mov
add
add
add
add
fstl
jo
sub
add
cmpsl
outsl
push
add
inc
push
add
out
mov
mov
ss
jnp
loopne
out
out
xorl
dec
mov
mov
cld
imul
sti
arpl
stos
cli
add
sbb
aad
arpl
in
fisttps
xor
jl
test
dec
sbb
mov
add
mov
push
cld
push
add
add
jne
and
enter
addl
out
sti
outsl
sbb
cs
add
jecxz
lcall
mov
and
mov
and
pop
test
dec
mov
out
cmp
add
sub
testl
add
inc
gs
fstl
in
ljmp
mov
add
pop
shrl
cmp
add
fld1
add
mov
dec
push
add
add
cs
add
outsb
add
mov
ficompl
and
add
in
push
add
add
mov
and
mov
add
add
mov
clc
popf
ret
inc
add
add
add
add
leave
call
addb
aam
push
add
mov
mov
rolb
add
repz
push
aas
sub
jnp
add
add
loop
mov
sub
push
add
mov
and
mov
add
add
add
add
xor
push
and
mov
inc
add
pop
dec
repz
movb
filds
ret
mov
push
add
cmp
push
add
cmpsb
add
mov
push
add
add
sbb
andl
mov
scas
add
mov
xchg
add
pop
xor
mov
jl
hlt
add
aam
mov
cld
out
lret
addb
jecxz
fisubrs
lcall
and
cltd
mov
sti
adc
push
add
dec
std
into
data16
add
add
push
add
addb
das
jle
sbb
add
push
pop
lea
sub
add
pop
addb
inc
add
add
loope
add
add
pop
pushf
popa
add
inc
cmp
add
add
pop
cmpsl
repz
dec
testb
pushf
add
add
mov
xor
out
out
xor
push
mov
jb
daa
dec
mov
testl
jne
add
and
mov
mov
add
and
mov
add
insl
shr
imul
dec
push
add
add
rolb
imul
add
mov
test
xor
cmpsl
js
jb
ja
add
in
and
mov
mov
add
push
or
jl
aam
adc
adc
stos
arpl
inc
add
mov
mov
add
or
xlat
mov
add
add
das
sbb
pop
fiadds
xor
cwtl
or
add
adc
cmp
add
adc
xchg
add
add
add
mov
out
push
sub
jp
and
and
test
add
add
data16
arpl
add
or
push
and
mov
out
aam
or
iret
inc
add
push
pushf
dec
push
add
scas
enter
mov
jmp
push
push
cmpsb
add
sbb
test
out
pop
pop
out
lods
pop
fs
mov
dec
or
add
add
icebp
push
add
jns
adc
in
addb
push
add
mov
mov
iret
and
mov
fwait
pop
and
mov
pop
mull
add
sahf
xor
cmp
arpl
sub
add
xchg
data16
jge
mov
pusha
add
outsl
repz
push
gs
fcomps
lods
fdecstp
add
add
repnz
mov
cmp
cmp
and
dec
int3
jno
cmp
lods
fcomps
cmp
out
or
mov
add
in
inc
mov
shr
out
aam
pop
add
mov
das
mov
add
xor
push
push
add
add
add
ja
jge
iret
pop
sbb
add
add
mov
sub
push
add
sub
add
add
sub
xchg
xchg
mov
bound
mov
jp
dec
push
or
pop
xor
roll
add
jl
cmp
mov
add
add
mov
ret
rolb
mov
lcall
cmp
sbb
sub
fisubl
jae
stos
dec
fsubl
push
in
into
loopne
inc
mov
lcall
outsl
icebp
jmp
add
mov
jg
in
mov
jb
cmp
mov
add
add
add
add
