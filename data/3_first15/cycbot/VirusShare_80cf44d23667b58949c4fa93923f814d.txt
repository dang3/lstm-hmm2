sub
rorl
lcall
ret
push
add
sbb
daa
cmpsl
xor
jae
shrl
pop
and
fwait
out
sbb
int
add
add
hlt
add
ffree
rolb
push
add
mov
add
lret
and
sbb
cli
adc
out
add
add
data16
enter
sbb
add
cmp
cmpsl
or
xor
pop
outsl
push
add
push
add
add
jbe
adc
add
add
call
xchg
add
pop
fwait
xchg
add
data16
lods
xchg
add
add
nop
add
add
mov
les
xor
addb
sti
sub
xor
scas
dec
mov
push
pop
adc
mov
add
pop
pusha
add
ret
add
test
dec
jp
add
add
ljmp
xor
loopne
mov
sbb
mov
dec
mov
and
mov
add
jne
mov
inc
sub
sti
pop
sti
jg
clc
inc
mov
mov
ja
mov
mov
push
add
xchg
pop
imul
add
out
push
jmp
add
push
add
and
inc
add
xchg
add
add
xor
jp
add
out
or
add
add
cmp
and
iret
dec
imul
sti
push
add
add
add
dec
std
lods
adc
mov
push
add
push
add
and
add
add
mov
add
lret
add
fcompl
dec
jae
fstl
mov
add
add
sub
add
inc
add
xor
add
add
data16
or
and
mov
scas
fcoms
jo
push
add
in
inc
add
add
cmp
pushf
xchg
les
pop
bound
mov
mov
add
pop
insb
aam
fcoms
add
arpl
arpl
movsl
push
leave
in
cmp
inc
add
add
inc
fidivrs
add
xlat
addb
inc
add
mov
addr16
pop
mov
rolb
cli
push
add
je
mov
add
add
add
psubd
mov
rolb
mov
add
jl
add
and
fisubrl
mov
cmpsb
add
je
mov
loop
test
pop
push
add
and
mov
add
lret
int3
jmp
mov
sbb
dec
cld
fldt
stos
dec
test
add
jge
add
sub
mov
cmp
sbb
fcompl
cmpsb
add
js
and
ss
shrl
sahf
leave
popa
jnp
inc
push
xchg
movsl
push
add
add
lret
add
out
xor
fwait
sbb
cmp
mov
in
mov
inc
insb
push
mov
sub
push
push
push
cld
call
sub
mov
cs
es
ss
lea
push
push
push
call
cmp
je
es
lea
push
push
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
repnz
mov
sub
mov
cs
push
push
jmp
jmp
add
add
dec
daa
ret
mov
adc
nop
add
or
jo
insb
clc
imul
add
cmc
and
mov
add
mov
lods
xchg
and
mov
add
fucomp
lahf
and
mov
cmp
movb
add
add
cmp
add
add
mov
add
pop
movsb
add
mov
ret
imul
fwait
sbb
addb
adc
or
pop
rolb
and
mov
out
pop
or
pop
aad
add
gs
push
sub
add
frstor
mov
cmp
add
stos
pop
push
add
add
dec
mov
dec
daa
ds
jns
add
xchg
add
and
mov
mov
out
out
out
sbb
or
test
mov
add
ljmp
add
aaa
sbb
jle
das
xor
clc
dec
jmp
add
add
mov
add
inc
add
inc
adc
aam
fwait
icebp
gs
stos
std
mov
sahf
pop
jno
xor
push
sbb
add
mov
add
pushf
fisubrl
adc
mov
jp
mov
mov
outsb
cmp
ficompl
pop
mov
repnz
sbb
mov
cmp
add
stos
movsb
add
inc
bswap
mov
cwtl
stos
ljmp
cld
cli
nop
add
add
add
add
push
sar
in
cmp
add
cmp
es
sub
pop
mov
pop
in
dec
lahf
xchg
add
mov
scas
arpl
add
add
add
ljmp
mov
pop
push
fistpll
add
sbb
test
xchg
add
add
xchg
add
sub
std
nop
add
push
pop
movsl
arpl
lock
rolb
rep
pop
or
add
fwait
loope
wrmsr
add
add
add
mov
fs
xchg
insb
pop
push
add
xor
int3
inc
lock
add
jo
aas
arpl
adc
out
nop
add
adc
push
sbbl
mov
add
add
imul
lea
add
rolb
cmpsb
add
add
pop
or
mov
xor
mov
push
dec
sbb
stc
lea
mov
mov
cmpsl
addb
insl
stos
or
xchg
lcall
inc
aaa
or
jg
push
add
or
jbe
ds
jbe
adc
mov
add
add
push
add
jecxz
fcoms
add
add
add
inc
fs
sub
cmp
add
add
add
in
js
movsl
lds
outsb
ret
sti
sbb
add
add
pop
sub
pop
gs
add
hlt
add
mov
negl
add
push
xlat
les
push
add
repz
insl
cmpsb
add
add
imull
bound
mov
cmp
add
repnz
adc
add
repz
mov
lcall
add
add
push
ljmp
imul
adc
mov
mov
add
push
movsl
adc
sub
call
testb
les
shll
add
add
aam
sub
dec
lods
rorl
pop
outsb
dec
mov
pop
loope
int3
pop
mov
jnp
cs
xchg
enter
xchg
call
xchg
push
fcmovne
lea
ds
mov
testb
mov
xor
rolb
call
pop
mov
mov
add
fisubrs
xchg
cwtl
push
add
call
add
test
popf
xor
cmc
fimuls
jmp
inc
add
mov
shl
add
adc
test
movb
cmp
add
ljmp
add
mov
repnz
mov
mov
xchg
add
add
cld
cmp
add
pop
popl
mov
jp
mov
mov
add
dec
adc
xor
cwtl
leave
dec
pop
outsl
gs
fcoms
mov
imul
add
scas
aas
pop
inc
cwtl
test
add
mov
aad
sbb
adc
mov
ja
add
es
les
jg
push
add
aad
dec
lret
add
sub
add
test
xchg
inc
add
ret
jbe
loope
push
add
enter
add
mov
sldt
mov
pop
and
and
add
cmpsl
rolb
jbe
sub
repnz
mov
mov
add
add
jl
cmc
mov
int
inc
add
add
sahf
pop
add
add
push
mov
out
jecxz
add
add
push
inc
add
adc
add
add
addb
aad
lcall
add
fucomi
pushf
adc
add
lock
rorl
push
lea
add
movb
xchg
test
add
mov
push
add
add
mov
pop
test
cmp
clc
and
jg
add
mov
sbb
test
cmpsl
in
add
mov
cld
addr16
sub
add
xchg
cld
loope
or
push
add
sbb
int3
mov
fists
push
mov
jle
sti
push
add
inc
mov
gs
mov
add
add
nop
add
mov
add
pop
add
data16
les
xor
insb
and
add
add
idiv
jno
push
lret
pop
or
int3
jbe
std
xchg
das
mov
add
add
stos
push
xchg
add
fildl
loop
fimuls
ret
inc
add
inc
add
pusha
add
jl
inc
add
add
cmp
xor
mov
xor
cwtl
cmc
imul
xchg
insb
mov
add
pop
dec
pcmpeqw
sbb
add
inc
add
loope
add
in
push
push
imul
cli
pop
cltd
mov
push
mov
arpl
push
sbb
add
or
cmp
inc
add
add
sub
add
les
imul
add
add
mov
push
add
add
addb
sub
leave
sub
out
icebp
adc
jmp
add
add
push
add
add
add
fiadds
in
out
mov
add
pop
jecxz
sarl
push
sub
xchg
cmc
add
loopne
in
push
add
add
add
mov
addb
add
sub
mov
scas
xchg
add
sub
mov
fnstsw
enter
add
lea
decl
out
repz
or
push
add
add
lcall
add
sbb
cmpsb
add
mov
scas
test
xchg
add
lods
xchg
add
rolb
add
add
pop
cmp
jbe
imul
add
add
add
lods
xchg
add
add
add
pop
sbb
fistl
add
cmp
add
in
mov
or
loop
popf
daa
sub
add
mov
add
dec
dec
push
mov
les
add
add
fdivrs
add
cwtl
jb
sbb
test
jae
cmp
mov
mov
in
and
mov
xchg
repnz
add
movsl
push
add
lock
add
cld
imul
and
mov
rcl
add
movsl
cmp
mov
inc
repz
or
jns
add
dec
mov
cld
cwtl
imul
add
add
adcl
fidivs
dec
insl
les
add
cmc
add
cmpsb
add
cli
and
mov
in
dec
sub
sar
lcall
lret
jno
cmpl
mov
add
add
stc
push
push
jp
and
mov
push
add
add
pop
arpl
aam
add
mov
pusha
add
ljmp
mov
add
lods
mov
js
push
add
in
add
mov
add
mov
add
mov
dec
jg
mov
dec
xor
add
add
roll
push
insb
lds
mov
sbb
fmull
add
inc
add
cmpsl
add
push
cmpsb
add
xlat
fcompl
xchg
scas
pop
ja
add
add
add
mov
add
add
int
aad
cmp
outsl
movsl
fld
mov
incl
add
push
add
adc
data16
push
add
inc
movsl
mov
add
and
add
rolb
adc
inc
add
loopne
push
add
stc
outsb
scas
sub
cld
movsb
add
push
int
loop
subl
add
mov
add
and
pop
roll
add
xorl
or
add
jae
add
in
ret
bound
mov
hlt
add
add
mov
mov
sbb
sbb
rolb
push
xchg
xlat
xor
daa
mov
jecxz
pop
and
sub
fnstenv
loopne
jo
lcall
imul
out
or
push
add
addl
add
pop
and
mov
mov
cwtl
pushl
ficoml
pop
and
rolb
outsb
std
lock
add
add
or
push
jp
sti
pop
xor
in
out
and
jmp
add
out
sbb
mov
and
sub
sarl
mov
mov
add
add
scas
popf
ja
add
dec
cmp
jne
inc
loope
pop
int
add
adc
in
lret
bound
mov
aas
stos
jnp
add
scas
bound
mov
add
inc
lods
js
inc
add
mov
add
movsb
add
inc
dec
add
stc
stos
cmp
mov
push
add
push
mov
mov
add
add
cmpsb
add
mov
inc
pop
cltd
and
jae
add
add
add
add
mov
mov
insl
int3
cmp
dec
je
lea
fdivrs
repz
mov
int
add
adc
popf
xor
dec
add
mov
add
xchg
and
mov
mov
mov
ret
add
and
pop
popa
clc
nop
add
add
sahf
and
imul
je
out
add
mov
jns
jo
push
add
nop
add
add
add
mov
test
outsb
ljmp
mov
nop
add
add
ljmp
xchg
add
add
cli
repnz
add
add
mov
add
or
lahf
dec
and
mov
mov
and
mov
testb
add
jae
hlt
add
rcrl
cltd
pop
fstpl
pop
and
mov
add
pop
movb
xchg
and
add
cltd
sub
stos
xchg
add
aaa
mov
jbe
dec
mov
addr16
sbbl
xlat
lret
add
sub
add
clc
mov
add
push
add
mov
movb
or
jae
add
mov
jp
dec
inc
add
cmp
aas
rolb
loop
sbb
cli
js
adc
mov
dec
jns
ret
cld
arpl
add
xchg
sub
xchg
mov
jl
mov
add
cmp
fiadds
push
lds
add
add
dec
mov
push
add
out
add
fwait
inc
cmp
adc
mov
xor
in
aaa
test
fildl
les
addb
pop
and
movsb
add
stos
pop
ret
imul
clc
aam
in
cmp
push
add
pusha
add
inc
add
inc
mov
stc
out
sbb
out
pop
movl
inc
add
sbb
add
pop
inc
add
add
jae
sub
add
adc
inc
int
mov
lock
testb
iret
jmp
and
mov
add
sbb
jle
add
add
dec
cmc
sbb
js
jns
stos
xor
sbb
jle
outsb
sbb
into
push
jg
add
add
xchg
pop
jnp
ss
popf
jecxz
mov
xlat
dec
sbb
imul
push
pop
pop
mov
jg
push
lret
rcll
mov
add
add
mov
inc
add
mov
add
sahf
sbb
jge
push
add
sub
stc
xor
jnp
in
cmp
xor
and
mov
rolb
int
fwait
sahf
scas
xlat
xlat
loopne
mov
pop
stos
cmp
shl
jmp
push
mov
and
mov
jo
incl
add
mov
add
add
jbe
outsb
add
mov
mov
add
add
enter
out
test
dec
dec
cld
fldl
mov
add
mov
pop
out
cmc
gs
aad
add
popa
mov
aas
addl
jmp
add
add
add
out
push
in
bound
mov
jnp
add
popf
mov
lahf
cmpsl
mov
add
aam
rolb
push
add
cmp
test
mov
lret
aad
inc
add
cli
imul
add
cmc
lahf
scas
scas
icebp
sbb
in
add
cmp
sub
out
imul
push
add
movsl
into
lcall
cld
mov
add
lods
subl
push
test
cmp
xlat
pop
mov
inc
loopne
roll
add
loopne
and
mov
push
std
ds
add
push
pop
rolb
lahf
jb
add
add
sbb
loop
jne
inc
add
movb
dec
dec
xchg
add
add
mov
mov
add
sub
add
push
inc
add
jg
stos
imul
add
add
mov
add
mov
add
add
cmpsl
fcoml
push
add
xchg
insb
lock
rolb
sub
cwtl
push
add
sub
inc
add
movb
adc
fsubp
add
js
or
std
inc
mov
sub
add
or
and
sahf
cmc
in
add
add
lahf
scas
mov
aad
add
adc
dec
aam
test
add
pop
sub
clc
or
popa
mov
add
add
lret
std
mov
inc
repnz
push
ret
cmp
sti
jne
add
sbb
add
decb
add
stc
jb
lods
jge
fiadds
add
nop
add
test
lds
out
mov
mov
jbe
and
mov
pushf
dec
adc
shl
add
add
mov
sbb
test
sbb
inc
add
add
sub
add
movsb
add
push
fnstcw
mov
xchg
insb
icebp
xchg
add
push
repnz
add
fidivrs
fldl
mov
add
mov
mov
dec
popf
cld
push
add
add
das
js
pop
add
mov
cmpsl
push
add
icebp
lret
xchg
xchg
add
add
jg
adc
add
scas
test
pop
mov
std
rorl
mov
jmp
add
or
ljmp
add
jns
les
dec
sub
add
les
jg
jbe
fimull
cmp
sti
iret
jne
mov
add
add
insl
mov
pop
pop
mov
pop
jae
add
sti
into
pop
inc
add
add
dec
push
and
mov
push
jnp
test
cli
enter
and
out
dec
cmp
add
add
add
lods
or
jmp
sbb
out
lods
xchg
add
or
add
xor
mov
jne
add
mov
pop
ds
adc
mov
jl
call
add
add
mov
fsubrp
pop
jge
enter
add
add
add
out
iret
aam
lods
sarl
sbb
pop
adc
add
or
int
add
inc
add
testl
add
add
ret
ret
outsl
das
and
inc
add
add
mov
push
add
lcall
jnp
cwtl
mov
popf
dec
jb
fisttps
pop
jae
push
jns
sbb
data16
add
mov
add
add
hlt
add
fistpl
mov
mov
mov
add
sbb
and
test
jl
add
mov
add
mov
lret
inc
add
adc
jp
add
cltd
imul
add
repz
bound
mov
add
pop
addb
out
add
and
add
in
clc
bound
mov
call
add
push
xchg
lds
jge
add
push
xchg
add
mov
pushf
dec
sub
jns
hlt
add
add
mov
xchg
jno
add
lcall
les
add
mov
add
aad
add
add
cmp
add
add
add
cs
ret
add
mov
push
add
pop
sti
cli
add
mov
addb
movsl
leave
into
cwtl
jl
xchg
cmp
push
add
add
aam
subl
add
and
mov
mov
mov
add
loope
sub
mov
mov
add
mov
stc
adc
adc
dec
sti
add
mov
and
mov
pushf
addb
add
mov
xchg
add
and
nop
add
jae
xchg
add
jmp
xor
nop
add
arpl
mov
or
add
rcrl
xchg
in
test
int
dec
mov
push
fwait
pop
xor
addb
add
push
loop
jl
rolb
mov
inc
add
add
add
iret
idivl
fdivs
jb
ljmp
sbbl
xor
repnz
mov
adc
loopne
js
push
mov
mov
add
pop
xor
das
enter
shll
xor
push
add
out
cwtl
xchg
mov
cmp
sahf
inc
add
add
xlat
mov
add
sub
mov
push
scas
xchg
std
or
sub
jns
mov
adc
shll
xor
push
add
aas
cltd
dec
cmc
inc
hlt
add
add
pop
in
or
add
push
add
data16
pop
sub
mov
lods
or
or
dec
cld
lahf
adc
and
fimuls
add
sbb
add
push
jge
add
sub
fucomp
rolb
movb
in
jno
or
push
add
inc
adc
jnp
add
add
add
and
sbb
add
fldcw
add
pop
push
add
imul
add
add
mov
sbb
mov
add
jmp
ficompl
add
pop
ret
loopne
jp
add
add
add
add
add
inc
add
cmp
push
add
pop
or
cmp
ja
sub
add
add
das
push
add
add
pushf
out
inc
sbb
loope
inc
add
push
push
pop
cmp
nop
add
outsl
and
add
add
add
ficoms
in
mov
add
sbb
gs
cmp
adc
bound
mov
sti
aas
add
test
daa
lods
sti
mov
adc
pop
cmp
inc
gs
sub
fcom
add
add
bound
mov
cmp
add
cmc
sbb
jnp
add
into
mov
add
or
add
add
iret
xchg
add
repz
add
sbb
push
cltd
int
add
jns
xchg
push
add
mov
cmp
push
mov
inc
mov
or
add
inc
add
add
add
arpl
rcrl
jp
ja
jo
pushf
in
and
das
in
mov
jb
mov
test
mov
dec
int
aas
add
mov
mov
mov
aad
xlat
sub
decl
mov
movb
add
add
inc
sbb
push
mov
mov
sub
mov
mov
fwait
rolb
repz
jle
jae
pop
loope
push
sbb
add
inc
out
add
add
xor
add
add
jg
mov
add
and
mov
add
xchg
adc
add
xchg
add
or
jl
shll
lds
add
rolb
mov
dec
scas
jno
mov
mov
mov
mov
add
add
adc
into
mov
push
pop
adcl
ret
out
leave
sub
add
and
sbb
hlt
add
addb
jo
subl
orl
mov
stos
pop
or
cmp
and
jg
xchg
dec
in
cmp
xchg
sub
lret
repz
push
sub
add
mov
sbb
push
mov
fimuls
daa
inc
add
inc
lret
add
movl
icebp
xlat
mov
add
movsb
add
mov
into
and
gs
aam
bound
mov
cmpsl
or
add
shl
sbb
sbb
and
fcoms
out
fcomps
xor
insb
adc
dec
xlat
jp
int3
xor
jl
gs
xor
daa
push
add
add
xchg
add
jbe
mov
mov
sbb
xor
push
dec
push
add
add
in
cs
add
cmp
lock
push
push
add
inc
pop
hlt
add
push
mov
decb
cli
sbb
jl
imul
iret
iret
test
xor
or
push
add
idivl
add
ja
les
dec
mov
into
insb
or
push
add
add
aad
add
inc
add
push
test
mov
add
inc
mov
cld
pop
add
mov
arpl
push
add
ror
xchg
inc
add
add
dec
cmpsl
add
fldenv
pop
push
loopne
roll
mov
and
repz
add
les
int
enter
sbb
add
inc
add
addr16
add
xor
sbb
sbb
movsl
push
outsl
rolb
and
mov
xor
ret
cmp
add
loopne
adc
add
mov
adc
cmpsl
xchg
inc
jne
paddb
cltd
pop
mov
rolb
inc
jae
stc
test
add
mov
mov
shrl
and
xchg
add
int
add
add
add
ret
or
ljmp
data16
xlat
mov
nop
add
movsb
add
mov
jmp
cmpsb
add
add
add
add
rcll
add
or
lea
add
add
mov
call
sar
and
cmp
outsl
sbb
fwait
mov
sbb
jb
fisttpll
imul
xchg
or
add
add
addb
aas
jmp
in
push
add
add
ret
add
mov
add
rolb
inc
add
adc
or
aas
sub
dec
jbe
inc
add
cmp
add
les
and
test
pop
cmp
stos
push
push
mov
ljmp
add
pushl
stos
xchg
add
mov
mov
cmp
std
insl
pop
lock
call
jp
add
mov
mov
mov
hlt
add
mov
movb
add
int3
xchg
add
jb
lret
xchg
add
or
mov
leave
sbb
xchg
add
mov
push
pop
fisubl
imul
jl
add
mov
add
inc
sbb
ror
add
adc
jp
add
add
add
add
dec
cli
sub
mov
cmp
mov
sbb
addb
sti
push
add
imul
add
lcall
add
mov
mov
dec
jl
outsb
jge
inc
jno
add
add
popf
dec
into
mov
add
add
fdivp
jl
add
jns
inc
add
push
and
mov
xor
shll
push
pop
dec
mov
pop
sub
dec
mov
adc
or
mov
sub
add
pop
test
add
add
lds
add
popa
scas
add
repnz
stos
arpl
loop
movsl
push
add
test
out
test
xlat
aas
mov
mov
xor
repz
mov
xor
push
add
mov
scas
hlt
add
inc
fld
xchg
sbb
lahf
pop
add
mov
mov
pop
call
ds
addb
add
add
and
mov
push
lds
add
lahf
inc
scas
adc
rolb
je
sarl
out
xor
mov
test
negl
cmp
popa
mov
dec
mov
fwait
push
push
leave
mov
mov
stos
daa
lcall
fsubrl
jmp
in
jns
push
int3
add
add
add
mov
mov
pop
ljmp
add
leave
frstor
ds
pusha
add
adc
pushl
add
adc
cmp
pusha
add
add
inc
add
les
addb
add
cmp
fdivr
inc
sti
pop
add
push
add
pop
das
or
add
inc
or
add
pop
push
xchg
add
add
cmp
pop
data16
add
xchg
add
lds
sub
add
mov
sub
add
add
xchg
mov
mov
xchg
and
mov
jae
lcall
pop
push
add
mov
out
inc
add
add
xchg
jne
add
sbb
mov
leave
inc
inc
lock
jno
xchg
mov
add
mov
add
add
add
jge
add
or
add
scas
xor
loopne
xlat
add
mov
cld
pop
or
mov
jnp
mov
pop
sub
xchg
loop
dec
inc
lods
rorl
addb
aam
mov
mov
add
sbb
cmp
inc
add
mov
jns
jo
ljmp
sbb
push
add
rolb
add
cmpsl
add
rorl
ljmp
gs
cmp
loopew
fisubl
xor
xcrypt-cfb
cmpsl
mov
gs
scas
rolb
add
mov
mov
loop
push
jne
cs
mov
mov
xor
pop
push
dec
call
fldcw
pop
pop
dec
lcall
add
add
loope
adc
add
xchg
mov
add
add
movsl
push
add
push
outsl
data16
cli
jmp
xor
cmp
add
pop
jb
test
add
cld
mov
add
add
add
add
add
mov
ret
inc
add
adcl
les
jmp
add
add
add
test
sub
mov
push
add
add
cs
add
mov
xor
sbb
add
mov
add
cld
jbe
dec
shll
mov
add
add
and
add
mov
clc
sbb
dec
ds
cmp
xor
jp
add
bound
mov
pop
pop
cmp
mov
add
add
outsl
push
inc
sub
mov
add
hlt
add
fiadds
cmp
sbb
mov
scas
push
in
lds
add
popf
addb
inc
add
push
add
push
add
push
clc
out
mov
push
mov
dec
sbb
jbe
xchg
and
mov
add
int3
stos
inc
dec
add
aad
add
jle
mov
test
lea
stc
rolb
xchg
stc
mov
add
aad
ljmp
bound
mov
fisubrl
add
xchg
lret
int
pusha
add
add
and
dec
stos
jg
lahf
add
mov
movb
out
push
add
add
add
add
add
jmp
xor
cmp
test
cltd
mov
mov
add
add
lea
mov
fdivp
dec
mov
clc
or
xlat
or
jle
pop
pop
pop
xchg
add
add
add
popa
or
mov
pop
loope
mov
and
mov
outsb
movsb
add
mov
add
scas
xchg
add
add
jl
loopne
xchg
mov
std
mov
in
jb
push
add
add
mov
insb
push
ja
add
test
add
xor
jae
add
add
gs
mov
dec
xlat
pusha
add
add
lds
add
movb
add
mov
cmp
add
push
adc
addb
clc
dec
pop
testb
add
addb
popf
cmc
cmp
inc
add
add
mov
add
add
test
test
pop
xlat
dec
addb
ds
movb
dec
ljmp
add
mov
sub
push
mov
lahf
popa
xor
test
cmp
dec
dec
dec
inc
add
cmc
mov
repz
call
sub
cmp
mov
add
pop
add
ret
or
and
adc
xor
push
out
jl
pop
inc
add
sbb
inc
cli
add
add
add
in
popa
cmc
repz
mov
add
mov
mov
add
add
mov
in
icebp
arpl
add
pushf
xor
xchg
xlat
movsl
mov
hlt
add
test
popf
sub
scas
cmpsl
mov
fsts
add
cld
push
rolb
insb
nop
add
mov
pop
xchg
addb
xor
add
stos
pop
ret
nop
add
sbb
push
add
or
pop
sub
repz
nop
add
stos
pop
les
ret
mov
out
pop
scas
out
cltd
loop
popf
adc
add
sub
dec
rolb
loope
addb
sbb
add
pop
lods
fnsave
outsl
sub
add
add
sub
repnz
jg
add
js
pushf
jmp
aam
int3
in
pop
inc
adc
outsb
dec
push
add
adc
dec
dec
ljmp
bound
mov
xor
test
push
add
push
add
bound
mov
fidivs
add
mov
pop
jmp
mov
add
add
add
add
pop
sub
or
push
dec
xchg
mov
xchg
repnz
jle
daa
jbe
xchg
jo
fidivrs
add
add
mov
call
insl
mov
mov
bound
mov
testb
add
les
imul
test
adc
mov
add
rolb
loop
cwtl
mov
sbb
add
dec
and
mov
insb
cmp
pop
jge
add
add
jae
bound
mov
lcall
dec
in
int
and
add
add
test
in
addr16
add
mov
fildl
add
add
out
xchg
testb
add
add
sbb
scas
lahf
arpl
inc
rcrl
ret
mov
add
movsl
test
bound
mov
lcall
fsubs
cmc
cmp
cmp
rcll
add
sbb
arpl
add
lret
add
ljmp
imul
scas
pop
testb
jbe
in
xchg
jae
xchg
add
jl
daa
jle
rorl
pop
adc
repz
jle
scas
bound
mov
add
jbe
push
cmp
pop
jmp
add
imul
daa
testb
add
xor
cs
add
ficomps
stos
push
add
add
cvtpi2ps
psubq
ret
sar
pslld
aad
xchg
add
mov
repnz
lds
add
sbb
pop
cmp
cmp
gs
cmpsb
add
mov
mov
pop
js
int
add
xor
dec
push
pop
imul
fldenv
std
jae
cli
mov
dec
xchg
test
add
int
xor
outsl
xlat
in
hlt
add
mov
sbb
into
lods
cmpl
add
out
add
push
or
cli
adc
xchg
rcll
mov
add
add
mov
cmc
aad
je
cld
add
mov
xor
add
mov
mov
add
nop
add
lahf
les
or
mov
aam
movsl
mov
sbb
icebp
pop
test
inc
adc
xchg
testb
sahf
jnp
hlt
add
xor
hlt
add
add
jmp
add
push
inc
xchg
add
out
inc
add
outsl
jnp
add
out
or
mov
add
fcompl
push
push
hlt
add
int3
addb
and
jns
jnp
add
add
xor
lret
mov
mov
add
aaa
fwait
ljmp
adc
xor
insb
outsb
cmp
popf
leave
aam
xchg
xor
daa
sub
outsb
sub
add
or
add
add
add
add
es
adc
cmp
rolb
jge
cwtl
xchg
lea
mov
scas
addr16
add
add
xchg
add
xchg
lea
add
popa
pop
push
add
cmp
je
pop
mov
add
and
aad
loop
lret
jp
fwait
add
dec
or
add
lods
and
and
mov
sub
cs
sbb
decb
add
add
xchg
add
sti
ds
add
sbb
fcompl
nopl
cmp
add
repnz
cmp
jecxz
jnp
in
and
add
xor
lret
mov
add
add
loopne
and
mov
push
xchg
lahf
push
xchg
aad
aad
cwtl
or
xchg
and
add
jae
add
xchg
add
cmpsb
add
iret
mov
lds
mov
cwtl
add
das
or
push
add
mov
jns
xor
xor
sub
push
add
leave
cmpsb
add
out
scas
ljmp
add
pop
lods
lds
je
jbe
or
add
cmp
sbb
rolb
xor
pop
lock
add
dec
xor
mov
std
sbb
add
push
rolb
xor
dec
cmpl
cmp
or
addr16
mov
pop
mov
sbb
inc
lds
ret
cli
lret
hlt
add
adc
and
fstl
add
insl
rolb
sub
add
mov
add
pop
or
add
add
add
add
pop
pusha
add
mov
testb
xchg
or
add
cwtl
sub
inc
add
push
add
adc
mov
cmpsb
add
add
mov
add
pop
nop
add
add
mov
jle
or
pop
add
movsb
add
arpl
inc
push
aaa
add
mov
pop
int3
mov
dec
inc
aas
int
push
sbb
int3
decl
add
mov
mov
test
add
xor
sub
add
mov
aas
in
out
cmp
add
add
xchg
lds
add
lods
insb
fldt
lods
jge
jle
mov
outsl
rcr
add
aaa
jns
add
pop
sub
test
das
pop
mov
and
add
mov
nop
add
mov
stos
push
stos
xor
movb
add
mov
add
pop
pop
mov
out
add
jge
or
push
mov
xchg
sbb
jae
repnz
adc
mov
cwtl
sti
mull
mov
add
and
add
sbb
add
into
sbb
shrl
ret
je
pop
cmp
out
dec
push
lods
lods
sbb
ret
mov
push
add
ja
popa
dec
and
mov
imul
mov
xlat
dec
xchg
add
add
dec
mov
cmc
mov
xchg
add
ljmp
addb
cmp
cmovnp
add
add
popl
test
cvttps2pi
mov
mov
mov
add
mov
add
es
int3
add
ret
jae
sbb
inc
add
mov
ds
mov
insl
add
add
shrl
daa
cmpsb
add
mov
sub
int
andl
dec
clc
push
js
add
adc
and
stc
xlat
dec
sbb
xlat
or
or
sbb
add
add
in
ljmp
jno
add
add
mov
cmpsb
add
add
xor
loop
or
add
out
xlat
jl
icebp
xor
xchg
popf
scas
jmp
add
add
add
mov
add
add
lock
mov
add
jne
add
rolb
inc
add
outsl
pop
lock
add
shrl
add
or
out
adc
xchg
add
popf
add
testl
cltd
pop
sbb
add
add
or
add
int3
in
dec
pop
imul
add
add
mov
inc
add
mov
mov
mov
cmpsl
lcall
add
pop
stos
or
jbe
push
jmp
ret
loope
subl
xchg
add
add
add
push
add
fdiv
add
pcmpgtw
add
xchg
add
add
sbb
add
add
aam
fisubl
cs
repz
add
add
mov
and
in
mov
lock
jge
adc
data16
repz
popf
icebp
add
rorl
jae
inc
inc
xchg
inc
and
mov
sti
lock
out
sub
add
pop
adc
pop
stos
bound
mov
out
mov
cmp
or
out
pushf
dec
jp
test
add
adc
sub
call
mov
movsl
lods
xor
push
mov
cld
xor
daa
js
add
add
lods
addr16
mov
mov
cmp
das
lret
std
and
mov
add
data16
pop
call
xchg
xchg
push
add
add
add
imul
repnz
sub
dec
arpl
add
jg
pop
add
addr16
add
mov
into
jge
mov
xchg
lahf
or
add
add
pop
roll
xchg
call
add
jnp
cmp
add
les
xchg
add
popa
rcll
add
add
jae
mov
je
inc
test
add
add
or
sbb
add
jbe
inc
add
pop
ja
push
add
add
test
sub
add
adc
fbstp
lods
in
adc
ret
loopne
and
pop
data16
adc
mov
mov
jnp
add
add
add
add
mov
push
mov
imul
addb
cmp
add
add
pop
pop
test
add
fidivs
jmp
repnz
inc
fcomp
jo
push
xor
bound
mov
mov
push
stos
inc
add
repnz
or
add
xor
pop
out
push
xchg
add
mov
add
incb
add
int
add
add
ljmp
sub
add
dec
hlt
add
inc
add
add
and
cmpsl
inc
mov
sub
cmp
mov
adc
jge
adc
pop
adc
mov
std
cs
dec
sahf
add
and
add
data16
push
jno
out
cltd
addb
jp
jae
add
mov
jp
add
add
jp
add
mov
jnp
jbe
xlat
add
add
add
add
leave
in
add
and
scas
push
popf
pop
movb
out
adc
pop
jmp
in
rolb
lret
cmc
lods
adc
mov
cli
cmp
add
stos
enter
mov
pop
insl
cmc
xlat
adc
testb
sbb
cld
push
jb
dec
inc
xchg
xlat
shl
add
add
add
mov
add
add
inc
pop
inc
mov
nop
add
ja
or
outsl
lahf
testb
cmp
add
sti
ds
add
add
add
xchg
add
arpl
sbb
sub
incl
out
push
xchg
jno
arpl
cmpl
add
jg
leave
das
scas
xchg
and
movsb
add
add
xchg
mov
mov
icebp
mov
aas
xchg
add
mov
jb
sub
add
add
movb
mov
mov
add
add
in
push
cmp
xorl
and
mov
push
add
pop
movsb
add
and
add
cmpsl
out
cmc
jg
cmp
push
push
add
xchg
add
jecxz
mov
pushf
ds
cmp
add
pop
xlat
add
jg
sbb
addb
insl
ds
dec
add
lret
pop
flds
test
cmp
fldt
xlat
loopne
js
push
mov
jle
pop
jb
mov
jp
mov
add
add
add
push
add
add
push
mov
sbb
pushf
scas
repnz
add
dec
xchg
leave
cmp
cltd
mov
mov
adc
push
cs
sahf
testb
enter
repnz
ret
add
add
pop
pop
and
jle
adc
in
addb
add
add
add
add
jo
push
add
repnz
addb
adc
sbb
push
add
or
add
add
fistpll
popa
xchg
bound
mov
popf
mov
jbe
add
scas
jb
lret
rolb
jl
mov
test
xchg
mov
dec
adc
in
jle
sbb
add
sub
dec
hlt
add
sub
adc
jno
sub
aam
push
add
jg
add
mov
mov
add
mov
add
add
add
lahf
outsb
das
sbb
fists
fcmovu
cmp
fsubrp
lahf
flds
add
inc
add
add
bound
mov
fnsave
lock
lds
mov
add
and
mov
jbe
rcll
adc
data16
add
call
add
mov
ret
and
lahf
mov
in
fadds
gs
pop
mov
pop
sub
add
add
add
add
pusha
add
fwait
mov
pop
pop
mov
sbb
movsb
add
add
rolb
jne
call
dec
or
jge
les
mov
sub
popf
ja
jl
push
into
pop
jne
fcoms
pop
leave
testb
mov
addb
stos
sub
lcall
scas
addr16
lcall
aas
push
add
add
aaa
je
in
popf
popf
inc
add
imul
add
mov
call
push
add
push
jl
mov
mov
inc
add
lret
ss
inc
add
pop
add
mov
int
xor
add
add
movsl
fidivl
data16
popa
mov
std
iret
inc
add
mov
add
rolb
js
into
pop
xor
push
add
fstpt
jno
enter
add
mov
inc
add
popa
adc
lods
int3
push
add
add
add
dec
cmpsb
add
hlt
add
add
add
stos
pop
in
dec
cmpsb
add
pop
or
fyl2xp1
sub
add
jl
add
lcall
lret
pop
bound
mov
test
add
mov
add
outsl
ds
lea
adc
dec
push
pop
jle
add
xchg
test
subl
add
add
add
mov
jns
pop
pop
push
add
add
xchg
add
add
jnp
jg
in
cmp
add
mov
int
test
stos
sub
nop
add
and
adc
add
add
add
mov
cmpsl
call
les
lret
rolb
cmp
add
sbb
testb
sbb
in
sbb
rcl
enter
push
add
add
inc
add
sbb
shrl
dec
and
sub
add
insl
mov
add
addb
add
imul
add
adc
sbb
orl
cld
fldl
inc
add
and
pop
iret
adc
fidivrl
movb
ret
outsl
ds
add
dec
adc
addb
add
mov
adc
iret
imul
and
cmp
add
jp
add
add
pushf
cs
repz
jb
rolb
repnz
loop,pt
enter
cmp
stos
sbb
sarl
mov
dec
lock
jns
sbb
add
xor
or
push
ja
cwtl
xchg
xchg
adc
lret
pop
add
jns
fdivr
mov
std
xchg
or
dec
lret
aas
add
lea
sbb
add
movsl
mov
insb
xor
lcall
mov
rolb
jg
sti
mov
add
add
inc
add
inc
add
pop
femms
scas
pop
loopne
jle
hlt
add
add
sbb
fmuls
aaa
push
mov
testb
add
jp
mov
add
jbe
in
mov
add
das
scas
addb
pop
inc
add
leave
cmp
xchg
shll
add
dec
sub
pop
ss
jg
add
rorl
add
push
add
in
rdmsr
add
adc
fidivrs
sbb
jp
out
push
add
in
div
jnp
mov
fmul
pop
mov
cmpsb
add
add
add
xor
lds
mov
mov
sbbl
arpl
rolb
into
call
clc
push
add
inc
cltd
shl
add
jns
mov
test
or
add
unpcklps
in
mov
xlat
and
or
add
call
push
add
inc
xchg
add
cld
rolb
fnop
add
mov
popf
jge
lcall
sub
icebp
hlt
add
add
mov
add
dec
data16
add
add
jmp
add
leave
and
imul
mov
cmp
shrl
cmp
jb
xchg
xchg
add
mov
cmpsb
add
mov
pop
addb
loop
cltd
in
imul
add
loop
repnz
pop
mov
out
roll
xchg
loopne
dec
push
aad
mov
mov
sub
cwtl
add
add
and
mov
pop
or
orl
rolb
push
cwtl
test
mov
lcall
cmp
arpl
outsb
adc
mov
scas
sub
xchg
add
es
add
mov
sbb
add
add
mov
sbb
and
test
arpl
sbb
add
add
sbb
arpl
xor
xchg
xchg
add
mov
add
outsb
pop
cmp
add
add
add
aaa
sub
ret
pop
lcall
cmc
call
xor
push
add
jge
add
inc
add
sbb
jg
mov
add
pop
insl
mov
add
jmp
jb
insb
outsl
subl
add
cmp
and
arpl
add
add
add
movl
loop
mov
test
jbe
dec
scas
sbb
sub
in
push
xor
jl
lret
mov
dec
mov
ljmp
daa
repz
add
add
add
out
icebp
in
adc
repz
mov
dec
addb
pop
mov
mov
test
mov
in
push
add
cli
and
loop
jg
add
jl
xchg
adc
cmp
mov
sahf
cmp
divl
jae
int3
rol
add
pop
jmp
inc
fisttpl
movsb
add
les
movsb
add
add
add
add
pushf
rep
je
aaa
pop
push
cltd
mov
mov
add
push
add
shr
and
xor
sbb
adc
pop
stc
pop
push
add
add
aaa
xchg
sub
mov
in
inc
add
and
add
add
in
xchg
add
sub
sub
and
add
mov
fbld
nop
add
mov
xor
push
sbb
mov
jg
jb
imul
scas
xor
push
sbb
mov
add
out
ret
mov
std
mov
ret
arpl
add
add
mov
cltd
clc
cwtl
cmp
inc
add
imul
add
add
mov
sub
aaa
movsb
add
xchg
add
rolb
and
leave
adc
nop
add
add
dec
pop
xor
test
popa
adc
sahf
mov
adc
in
pop
add
add
add
add
jp
inc
add
int
inc
jno
mov
add
add
add
lahf
fbstp
xchg
add
testb
sbb
mov
inc
add
rorl
xchg
fistl
push
and
mov
sbb
inc
add
xchg
add
and
push
addr16
insl
mov
mov
fcompl
int
add
sbb
lods
enter
das
push
add
test
aas
push
add
mov
js
pusha
add
add
pop
jmp
hlt
add
xchg
add
and
mov
mov
add
jns
add
inc
add
add
into
rolb
pop
or
cli
mov
pop
dec
iret
nop
add
mov
cltd
incl
mov
add
add
adc
add
addb
add
stc
jae
push
add
jae
lods
jmp
add
addr16
jbe
sub
jb
icebp
gs
insl
cmp
add
arpl
xchg
mov
and
pop
or
push
add
xchg
adc
inc
sbb
aas
sub
dec
jns
aam
add
ret
add
js
pop
lahf
lcall
jns
ds
mov
xchg
add
push
repnz
add
jbe
dec
xor
push
add
pop
addb
cmp
or
das
push
add
push
inc
add
mov
bound
mov
ret
cmpsb
add
mov
add
mov
jl
xchg
add
pop
xor
xchg
add
add
add
add
jle
sub
and
test
ds
sbb
lret
fnsave
mov
sub
lea
stos
cli
cmp
mov
addb
jb
pop
jl
sub
cld
fmul
add
mov
sbb
jbe
push
jb
sub
je
incb
push
add
jg
cmp
cmc
mov
mov
mov
cwtl
stos
cmp
lods
inc
push
lods
lret
jecxz
ficompl
add
mov
add
add
dec
mov
pop
int
mov
mov
adc
mov
pop
call
sbb
add
add
add
fwait
sub
sbb
outsl
xchg
add
or
fld
stos
mov
test
inc
mov
add
pop
add
xchg
add
xchg
add
add
test
add
add
add
add
add
mov
push
add
es
imul
and
mov
mov
push
add
cmp
and
cli
adc
data16
mov
inc
scas
mov
loop
push
pop
or
in
std
out
add
add
outsl
clc
xlat
and
hlt
add
ds
add
add
cmp
int3
jl
add
mov
cli
add
clc
mov
mov
inc
add
iret
inc
add
dec
mov
nop
add
sbb
add
fistpl
xchg
add
add
add
pop
mov
sub
stc
fwait
aad
jnp
pushf
pop
fsubl
add
shll
add
popa
hlt
add
sub
sub
pop
repnz
inc
add
fcomi
jge
adc
add
add
lods
xchg
add
fwait
iret
lods
loope
mov
and
add
push
xchg
outsl
rolb
fptan
add
add
orl
add
test
pop
ret
in
jae
cmpsl
adc
gs
add
stos
icebp
pop
sub
lds
add
js
add
in
out
add
addb
add
mov
add
and
mov
lret
out
dec
xor
xor
fcomps
stos
push
jns
loope
or
ficoms
fimuls
add
addb
imul
jne
xor
push
pop
or
inc
add
add
jmp
out
pusha
add
out
fisttpll
add
fists
add
push
add
shl
add
test
xchg
add
add
cli
ret
add
add
ljmp
pusha
add
pop
add
add
sub
add
add
add
das
jl
jp
add
dec
push
add
icebp
scas
js
mov
xor
add
out
adc
shld
mov
insb
sahf
adc
addb
add
cwtl
stc
dec
xchg
add
fsts
test
xor
ret
icebp
mov
pop
pop
xchg
inc
add
mov
rolb
add
mov
sbb
push
add
loope
movsb
add
add
mov
and
mov
add
cmp
mov
add
mov
insb
fisubrl
insl
and
mov
pusha
add
pop
adc
and
mov
add
mov
ja
add
xchg
inc
and
adc
dec
pop
dec
sahf
xlat
jecxz
sub
pushf
dec
out
jo
add
mov
mov
and
testb
xchg
add
add
mov
xchg
add
mov
push
mov
dec
and
sub
dec
push
dec
push
mov
xor
aaa
sub
xor
or
add
fucomp
sub
add
divl
add
add
inc
enter
push
add
aaa
sti
shrl
jmp
add
cmp
add
leave
sbb
add
push
add
add
add
ret
dec
sbb
out
jecxz
int
jmp
iret
xchg
add
test
loope
adc
hlt
add
shrl
add
push
scas
jmp
xor
pop
jmp
jle
add
add
jmp
int
add
outsl
loop
mov
cwtl
add
push
add
add
add
add
add
adc
mov
push
add
add
sub
and
mov
add
mov
mov
out
add
add
add
pop
add
mov
mov
add
add
cmp
add
outsb
add
sarl
popf
xor
rolb
je
cmp
lods
imul
fcomps
das
cltd
add
mov
nop
add
and
mov
dec
pop
jle
inc
add
add
add
xchg
add
push
xlat
pusha
add
stc
sub
inc
xchg
addr16
mov
jnp
add
pop
sahf
sbb
dec
jg
out
cmp
xor
pop
lods
mov
repz
xor
sti
rolb
cmpsb
add
add
add
mov
xor
cmc
xor
loope
add
add
clc
fisttps
jmp
insl
or
das
fs
mov
jp
add
adc
xor
add
or
lahf
jg
stos
pop
fwait
pop
test
jno
push
add
sub
jae
and
dec
lahf
js
add
add
inc
push
add
or
lods
add
mov
movb
lods
adc
pop
loope
repnz
adc
and
movsb
add
enter
add
mov
aaa
enter
and
mov
stc
sub
add
std
lret
sub
filds
add
add
inc
add
xor
aam
push
add
data16
dec
add
mov
mov
into
mov
stc
test
and
add
cld
mov
mov
add
hlt
add
in
mov
imul
jge
add
mov
add
mov
js
add
add
inc
adc
lahf
stos
je
xchg
insb
mov
arpl
cmp
mov
cmp
add
jo
adc
add
add
and
mov
cltd
xchg
movsl
cmp
add
add
mov
mov
mov
pop
out
or
add
add
add
add
loope
and
mov
testb
cwtl
pop
adc
dec
xchg
loop
fcmovnbe
addb
movsl
aaa
mov
sbb
popf
enter
fwait
mov
push
jno
out
xor
inc
add
insl
jecxz
dec
add
ret
pop
jmp
add
testb
add
lahf
lret
popa
mov
sub
sub
or
lods
iret
or
mov
ds
sbb
add
add
mov
add
mov
mov
add
mov
mov
add
add
push
add
ror
sub
scas
movsb
add
in
push
add
fmull
test
out
add
sbb
adc
lods
sub
testb
jne
rolb
sub
push
add
cmp
pop
xchg
add
stos
nop
add
rcrl
ljmp
push
add
pop
jmp
and
mov
movsl
jmp
add
add
cmp
addb
add
add
xor
cmp
mov
add
and
mov
add
cmpsb
add
movsl
mov
insb
and
mov
clc
push
cmp
inc
ja
bound
mov
and
lahf
in
repz
and
test
stos
fidivrl
xchg
les
xlat
aad
adc
or
push
add
mov
add
xor
repz
inc
sahf
insb
mov
sub
cs
add
jae
pop
movb
jecxz
jno
lock
das
adc
add
out
xlat
lret
in
in
add
lock
add
pushf
add
lods
adc
push
cmp
pusha
add
roll
lds
add
jge
jmp
or
add
jns
lret
sbb
mov
xlat
inc
in
cmp
imul
data16
cmp
addr16
int
ret
or
sub
add
add
add
xchg
add
mov
mov
clc
les
ret
mov
adc
je
int
add
lea
jbe
in
add
mov
mov
add
dec
decb
loopne
imul
add
outsb
dec
js
jno
add
mov
sub
pop
wrmsr
add
inc
add
add
pop
pusha
add
addb
stos
and
jle
data16
mov
inc
add
fwait
aam
inc
add
sbb
pop
dec
and
flds
add
test
pop
mov
es
sbb
bswap
sub
add
les
mov
push
add
mov
in
jo
jle
insb
jnp
mov
xor
sbb
movb
cwtl
pop
dec
ficoms
int
adc
push
add
add
add
lea
shll
add
add
repz
divl
add
mov
je
mov
add
mov
jbe
repnz
push
add
addr16
add
imul
add
and
inc
add
gs
add
cmp
pop
mov
cmp
xor
add
repz
jmp
add
roll
add
mov
pop
pop
pusha
add
repnz
test
sub
add
add
add
popa
or
xchg
sbb
add
push
add
add
xor
lret
add
cmp
pop
sbb
aad
add
jmp
mov
stos
jl
dec
les
je
pop
jb
adc
and
mov
out
add
sbb
jne
xchg
add
push
add
aam
sarl
das
je
inc
add
add
jo
fsubl
iret
and
cs
add
add
or
push
jmp
into
sbb
in
mov
roll
test
incl
and
hlt
add
and
dec
lcall
mov
sbb
sub
shll
cmp
add
add
mov
jne
add
int
pusha
add
lret
pop
incb
fwait
add
bound
mov
jnp
test
repnz
je
enter
mov
or
in
add
add
lods
jecxz
add
jmp
add
pop
add
movsb
add
pop
fistpl
mov
sbb
addb
je
aas
arpl
or
add
add
add
test
je
xor
mov
dec
ja
movsb
add
mov
addb
cmp
pusha
add
imul
jae
add
add
out
push
rolb
popf
stc
out
fisubs
add
test
clc
jg
fcmovbe
add
xchg
repnz
pop
testb
add
add
add
pusha
add
inc
js
clc
fidivrs
xchg
add
sub
lea
pop
in
lods
mov
add
pop
lahf
sbb
cmpsl
xchg
add
xchg
cli
das
add
lea
sub
mov
or
rol
add
add
add
adc
add
ds
lahf
aam
jo
inc
pop
mov
add
mov
lods
popf
ret
pop
add
cmp
cltd
enter
int3
xchg
add
loopne
shrl
cs
mov
scas
or
sub
jecxz
cmp
getsec
push
add
add
and
push
add
adc
ds
pop
add
mov
sub
jmp
fisubl
add
add
lods
pop
testb
add
fnstenv
add
mov
mov
arpl
add
jmp
add
or
add
mov
cmpsl
popa
roll
js
push
jmp
pusha
add
cs
pusha
add
sti
add
mov
out
testb
add
mov
cwtl
pop
xchg
add
add
add
out
xchg
addb
sbbl
jmp
add
add
and
das
aas
dec
jecxz
add
int
out
sub
add
cmp
xchg
add
add
dec
cmp
mov
or
scas
scas
cmp
cmpsl
add
add
jns
add
add
insl
lret
xchg
mov
add
ret
dec
mov
aad
add
in
add
lcall
sub
push
add
dec
lods
dec
add
dec
std
xchg
in
int3
sub
dec
aas
mov
mov
jb
cwtl
and
mov
push
add
add
add
adc
fdivl
addr16
rolb
mov
fwait
push
adc
in
pop
add
or
out
jecxz
add
add
add
ja
mov
loope
adc
add
add
add
fsubs
add
add
mov
add
mov
mov
jae
add
adc
mov
mov
add
add
mov
sbb
in
xchg
push
add
add
mov
push
add
mov
push
add
movsb
add
add
movsb
add
lret
fimuls
mov
jno
xor
fdivs
pop
cmc
mov
aas
jecxz
dec
pop
test
mov
xchg
mov
add
add
add
add
loop
xchg
dec
jnp
pushf
jecxz
cmp
ret
xor
lea
addb
lods
mov
xchg
add
add
push
add
call
rolb
cmp
loopne
repz
cs
add
fstps
push
fldl
and
sub
lcall
jecxz
xchg
jns
pop
fst
add
add
xchg
add
add
jno
push
inc
add
cmp
inc
add
add
stos
mov
mov
xchg
add
in
xchg
add
add
xor
fistpl
add
jae
adc
cmp
add
inc
cmpsb
add
lret
dec
enter
add
mov
outsl
lret
dec
or
add
cmpsb
add
add
pushf
repnz
sbb
add
add
repz
sbb
xlat
test
bound
mov
pop
loopne
pop
push
add
add
aam
rolb
dec
mov
xchg
js
add
push
or
add
add
movsb
add
inc
add
imul
xchg
push
add
rol
jne
stos
jae
add
addb
pusha
add
sub
and
ljmp
sub
add
out
push
nop
add
push
jmp
dec
pop
or
adc
cmc
or
adc
or
add
pop
fldenv
mov
add
fsubs
fstpt
cmp
ja
rolb
inc
add
mov
push
gs
lods
pop
push
add
mov
cmp
add
adc
mov
adc
sti
mov
loop
push
repnz
xchg
add
mov
mov
dec
push
stc
movsl
xchg
cmp
pop
push
jae
clc
jnp
fidivrs
and
cltd
mov
add
sub
add
mov
sub
cld
addb
push
add
repnz
data16
fistpll
popf
mov
add
data16
add
add
iret
dec
cmp
add
mov
int3
fists
lret
lds
add
cmp
enter
add
add
fiaddl
dec
cltd
mov
adc
jmp
add
add
ror
add
cmpsb
add
add
mov
sbb
mov
aam
sbb
add
mov
add
dec
enter
push
add
test
add
inc
or
mov
push
add
movsb
add
stos
mov
mov
xor
add
lret
dec
push
mov
mov
outsl
stos
cmpl
cmc
das
sti
mov
push
adc
in
in
fadd
add
xchg
push
jge
sahf
ds
cmp
xchg
leave
inc
add
in
or
or
add
jecxz
lock
add
push
add
jecxz
dec
addb
add
push
add
cmp
add
ja
add
cmc
cs
ret
add
and
loop
mov
aam
add
mov
in
pop
jmp
mov
roll
xchg
add
bound
mov
add
out
aaa
dec
orl
sbb
cmpsl
stc
test
mov
pop
int3
sbb
add
flds
mov
xor
add
add
cmpsb
add
jmp
cmp
add
mov
aaa
jno
dec
stc
jmp
push
jne
push
add
rolb
xor
shr
add
fsubr
dec
xor
sub
mov
popa
cmc
sub
mov
inc
add
mov
lea
inc
cs
or
push
add
add
test
or
add
add
pop
jmp
cmp
xchg
add
lods
lahf
arpl
add
test
inc
cmpsb
add
dec
out
sub
lahf
mov
add
mov
call
mov
adc
call
movsb
add
daa
xchg
xor
mov
fdivl
int
sub
add
pop
sbb
mov
push
shrl
out
repz
add
dec
xchg
mov
add
mov
cmp
aam
mov
inc
cmp
imul
imull
dec
rolb
add
scas
scas
rolb
add
sbb
or
add
add
fstps
mov
mov
add
pusha
add
add
mov
add
push
int
add
js
add
lock
add
add
add
and
arpl
andl
jp
lret
inc
loopne
outsb
xchg
add
sbb
adcl
cmc
hlt
add
add
add
mov
or
jp
add
pop
adc
popa
or
add
int3
adc
pushl
mov
cmpsl
stc
pop
xchg
or
test
out
pop
xchg
lods
out
ficoml
xor
and
inc
add
insl
loop
into
cmc
xchg
call
mov
lahf
lods
js
jg
loope
out
pop
pop
test
popf
scas
mov
add
inc
in
mov
test
mov
cmp
out
pop
jb
sub
add
mov
add
mov
or
sub
imul
or
mov
lods
pop
addb
fsubrl
add
add
add
mov
mov
add
sbb
push
add
mov
add
into
ret
scas
enter
lds
insl
jno
outsl
clc
mov
jo
jns
add
pop
mov
push
add
add
movb
mov
leave
scas
jmp
loope
test
aaa
mov
add
xchg
xor
push
add
add
add
in
pusha
add
stos
js
testb
add
pop
orl
inc
fcoms
test
add
mov
add
sub
testl
int
add
out
test
lcall
add
add
or
imul
add
into
mov
xlat
push
add
lret
add
cmp
sti
push
add
aad
add
fmull
or
add
and
pop
xchg
add
add
stos
push
popa
ret
pop
sahf
mov
push
add
addl
data16
push
pop
iret
dec
rcll
sbb
add
add
movb
mov
xchg
mov
dec
mov
adc
mov
lods
mov
sarl
fists
cmp
in
aaa
movb
in
pusha
add
add
dec
in
mov
push
cmpsl
hlt
add
add
jae
add
xchg
add
test
add
aam
in
xor
insb
mov
jae
push
sub
cli
push
imul
add
mov
push
add
xlat
ja
scas
xchg
add
add
add
cmp
add
and
add
arpl
and
mov
push
nop
add
add
les
pop
adc
inc
add
add
sub
add
sub
add
inc
add
mov
aaa
sbb
adc
insl
aaa
arpl
ss
add
mov
jge
add
push
mov
xor
pop
in
mov
mov
jmp
mov
add
nop
add
push
shll
add
xor
mov
add
mov
push
aaa
ljmp
mov
mov
xchg
cs
imul
pop
lcall
hlt
add
out
add
add
inc
mov
mov
aad
fwait
add
mov
add
gs
cmp
jp
push
add
and
out
lcall
mov
mov
adc
lock
mov
mov
jge
les
add
mov
loope
add
and
pop
test
add
add
mov
cli
ljmp
jne
outsl
addr16
int3
add
add
fisttps
cmp
inc
jl
add
scas
sub
add
add
gs
mov
icebp
clc
sbb
insb
adc
insb
inc
add
or
push
pop
insb
popa
data16
add
lods
cmp
cmpsl
ficompl
jbe
or
add
mov
xor
jge
movb
inc
add
bound
mov
add
add
inc
cmp
jnp
cmp
cmpsb
add
insl
je
mov
sub
mov
xor
xor
rolb
jne
push
out
mov
pop
mov
in
adcl
sbb
popf
out
std
cmpsl
xlat
loopne
test
add
push
sub
jb
rolb
add
xchg
add
outsb
inc
add
jo
jns
add
test
add
leave
adc
rolb
test
bound
mov
add
fisubrl
inc
xchg
add
push
add
push
les
popa
movsl
in
add
cmp
push
add
pop
adc
test
inc
fsub
add
cmp
pop
jns
cli
mov
cmp
gs
sbb
add
mov
xor
fcmove
cmp
push
adc
inc
add
in
add
mov
add
cmpsl
inc
and
push
add
add
pop
push
add
and
mov
mov
test
add
mov
and
add
mov
loope
add
mov
push
into
mov
cmp
cmpsb
add
adc
int3
and
loope
mov
cmp
push
jge
add
add
sbb
sbb
mov
add
data16
adc
dec
outsl
outsl
or
sbb
or
fdivl
sub
xlat
out
je
loop
adc
mov
add
fst
cltd
orl
fcmovne
inc
int
add
add
add
add
lock
mov
call
add
add
mov
mov
push
dec
incb
fnstsw
or
fsubl
sub
jecxz
mov
mov
add
repz
mov
push
add
cs
mov
pop
mov
jne
lods
xor
lds
inc
add
xchg
sbb
add
imul
sub
sub
adc
jmp
xlat
nop
add
cmp
push
add
add
ret
add
fnstcw
stc
and
out
push
add
insb
add
jp
jmp
ds
iret
xchg
add
add
sub
cmp
pop
mov
and
mov
fistl
jae
lret
insb
and
add
add
cltd
push
add
in
add
push
xchg
cmpsl
inc
add
push
mov
ffree
pop
int
jne
add
mov
in
int
add
gs
xor
in
ljmp
mov
mov
add
sbb
pop
push
add
in
adc
in
out
sbb
in
xchg
add
xchg
jecxz
dec
push
or
insl
fwait
lcall
add
addb
mov
dec
in
mov
add
add
xor
ret
int
push
add
add
sub
xor
loop
inc
add
jnp
jmp
mov
loopne
enter
add
push
add
leave
mov
mov
xchg
mov
lret
and
jae
xor
pop
mov
add
xor
pop
dec
or
insl
add
ja
and
mov
mov
add
dec
out
test
mov
adc
shll
outsb
popa
scas
fimuls
mov
aam
push
icebp
jp
mov
xchg
sbb
cmp
into
testb
add
ds
pop
pop
or
lods
mov
mov
sbbl
push
loopne
outsb
jmp
add
add
rolb
xor
xor
xor
add
add
je
xchg
fcoml
add
data16
test
jne
push
out
out
into
or
add
add
mov
and
mov
xor
ret
lret
mov
jae
mov
push
add
add
inc
or
cltd
lods
inc
add
add
cmpsl
xor
mov
inc
add
mov
add
out
jnp
ret
cld
and
push
cmp
add
ja
or
jne
ds
imul
lret
rolb
fwait
sbb
sub
xchg
add
add
mov
ud0
pop
iret
mov
cmp
lret
inc
adc
push
add
add
mov
push
pop
jge
repnz
add
cmp
add
adc
mov
cltd
test
out
mov
xchg
add
add
add
loop
inc
add
add
inc
fwait
sub
add
mov
popf
pop
xchg
dec
inc
adc
arpl
movsb
add
jb
inc
pop
fdiv
push
cmc
cwtl
push
add
add
fistl
push
test
sbb
add
add
add
mov
fisttpl
xchg
das
bound
mov
fisttpll
pop
lcall
xor
out
stos
xchg
sbb
push
add
mov
sbb
inc
popf
loope
cli
enter
mov
jns
add
add
dec
pop
pusha
add
pop
cwtl
add
sbb
outsl
out
aad
lahf
scas
dec
in
arpl
ljmp
add
mov
mov
cwtl
repz
add
mov
add
add
test
sub
or
fwait
scas
or
mov
in
loope
jno
add
mull
mov
mov
rolb
push
fistps
mov
cmp
add
add
add
pusha
add
xor
insl
aas
testb
popl
add
add
add
das
daa
ret
stos
add
sbb
adc
mov
add
sbb
sub
mov
add
add
or
movb
push
xchg
add
jge
mov
adc
add
leave
fwait
popf
inc
rolb
add
xor
cltd
orl
add
add
lret
insb
mov
cmc
dec
mov
jae
jmp
mov
push
add
inc
fstl
stos
cmp
cmc
mov
add
clc
test
xchg
add
add
lods
push
test
mov
add
mov
add
pop
cld
sti
jne
adc
add
mov
cld
mov
add
add
mov
sbb
jb
das
push
add
mov
jge
add
jns
mov
stos
nop
add
add
jmp
mov
mov
adc
mov
fimuls
or
add
aas
mull
add
insb
std
xchg
add
add
clc
dec
jmp
jp
imul
jecxz
add
gs
add
inc
add
out
jo
or
fcmovb
adc
leave
testb
add
mov
add
orl
adc
add
cwtl
sbb
add
add
mov
movb
addb
add
mov
add
mov
in
dec
orl
push
add
add
add
mov
add
push
add
or
add
cmc
mov
fnstcw
imul
sahf
push
add
addr16
fdivs
add
leave
add
adc
inc
add
add
sbb
add
outsl
mov
call
das
loop
leave
xchg
xor
inc
leave
imul
pop
sbb
push
add
dec
pop
add
xchg
push
add
cmp
xor
xchg
push
add
mov
add
adc
insb
mov
stos
test
inc
subl
adc
add
shrl
jg
add
add
pop
fldln2
std
push
pusha
add
sbb
add
fsubrs
fistpll
push
dec
sbb
imul
xor
fwait
or
add
rcll
push
and
mov
adc
mov
push
add
cmp
add
jo
insl
rolb
inc
add
mov
mov
add
xchg
add
outsb
add
xchg
mov
jmp
aas
sahf
push
xor
cmp
add
mov
mov
add
cmp
xor
adc
sbb
mov
rolb
ljmp
fldenv
mov
mov
aam
pusha
add
xchg
sti
mov
add
aam
fcoms
add
add
inc
add
nop
es
mov
add
nop
cld
nop
jmp
add
loopne
adc
pause
cld
nop
jmp
add
add
add
add
es
cmp
mov
ret
add
mov
add
stc
nop
es
out
dec
add
add
adc
pop
stc
nop
es
mov
add
mov
add
or
stc
nop
es
add
add
pop
push
mov
add
loopne
data16
add
sub
xor
loope
test
cmpsb
add
pushl
stc
nop
es
movsb
arpl
out
das
cmp
ret
nop
cld
nop
jmp
test
filds
xor
add
ret
add
nop
es
add
push
cwtl
jne
nop
cld
nop
jmp
add
add
xor
mov
stc
nop
es
xchg
add
in
add
in
inc
add
xchg
sub
icebp
pop
push
nop
cld
nop
jmp
add
add
cmp
nop
es
xor
or
and
xchg
push
add
add
push
mov
xchg
ret
add
mov
test
add
stc
nop
es
dec
add
inc
repz
push
add
dec
nop
cld
nop
jmp
fistps
add
dec
gs
mov
stc
nop
es
xchg
add
stos
mov
nop
cld
nop
jmp
add
xchg
lods
lods
add
outsl
arpl
mov
or
inc
push
add
es
add
pop
imul
xchg
pop
add
add
out
add
add
adc
push
add
nop
cld
nop
jmp
push
add
arpl
je
push
nop
cld
nop
jmp
das
inc
in
jp
out
mov
xor
push
push
mov
xchg
ret
adc
cmp
push
mov
xchg
ret
add
divb
dec
or
mov
xchg
ret
add
xor
loop
out
lea
stc
nop
es
sbb
xchg
add
or
mov
xchg
ret
adc
addb
mov
stc
nop
es
jno
mov
add
add
mov
stc
nop
es
add
leave
call
stc
nop
es
add
mov
push
mov
xchg
ret
add
add
add
mov
stc
nop
es
testb
add
push
mov
cld
nop
jmp
mov
notb
stc
nop
es
add
ljmp
nop
es
dec
add
add
jmp
mov
cmp
push
push
mov
xchg
ret
add
add
add
xchg
inc
adc
push
push
mov
xchg
ret
add
sahf
filds
mov
fucomi
adc
nop
es
add
add
aas
mov
push
mov
xchg
ret
add
out
xor
xor
jnp
jl
xor
inc
repnz
add
add
add
push
mov
add
out
sub
imul
add
add
mov
xchg
ret
add
sahf
lds
mov
mull
add
nop
es
out
sub
lds
pushl
stc
nop
es
mov
add
rolb
add
push
mov
xchg
ret
loopne
xor
push
mov
mov
stc
nop
es
sub
es
add
add
xchg
adc
add
stc
nop
es
outsl
xchg
fsubs
sub
nop
cld
nop
jmp
xchg
inc
add
add
add
bound
mov
add
insl
movzwl
stc
nop
es
out
xor
mov
sbb
nop
es
add
mov
add
cmp
cld
nop
jmp
push
jge
in
add
gs
push
mov
nop
cld
nop
jmp
jge
add
add
es
add
test
jae
add
add
xor
add
stc
nop
es
and
rolb
add
stc
nop
es
je
xchg
mov
stc
nop
es
aas
add
add
pop
stc
nop
es
mov
mov
je
push
stc
nop
es
push
loopne
fsubrs
add
and
nop
es
add
add
jno
add
push
stc
nop
es
add
add
push
add
clc
stc
nop
es
add
add
mov
stc
nop
es
xchg
add
add
nop
es
mov
mov
add
jo
lahf
je
stc
nop
es
sub
movb
nop
es
add
add
in
sahf
mov
stc
nop
es
add
das
cmp
add
push
mov
xchg
ret
fildl
add
notb
es
testb
dec
add
pavgb
mov
nop
cld
nop
jmp
add
xchg
add
sahf
mov
mov
xchg
ret
add
out
movsb
add
mov
or
nop
jmp
je
mov
xor
add
and
mov
lret
mov
nop
cld
nop
jmp
test
add
nop
es
movsb
je
mov
mov
add
add
stc
nop
es
mov
imulb
add
add
add
add
in
call
stc
nop
es
add
stos
mov
stc
nop
es
add
add
add
xor
add
add
lea
jmp
fcoms
add
sub
jb
add
add
fildll
add
mov
add
mov
xchg
ret
xor
add
jo
push
mov
stc
nop
es
add
add
scas
pop
push
mov
xchg
ret
add
jae
repnz
test
adc
add
nop
es
add
ljmp
orb
cmp
jae
mov
add
add
nop
es
jge
scas
jne
nop
cld
nop
jmp
add
push
add
stc
nop
es
add
push
jg
jns
stc
nop
es
mov
add
das
rep
stc
nop
es
jge
cmp
sub
sar
es
add
add
inc
xchg
or
cld
nop
jmp
add
cmp
out
scas
push
stc
nop
es
lds
out
outsl
sub
nop
es
jp
add
das
xchg
stos
mov
push
mov
xchg
ret
out
dec
je
add
add
add
xor
repz
mov
stc
nop
es
lds
cmp
pushf
mov
stc
nop
es
xchg
add
add
mulb
stc
nop
es
sub
add
rolb
int
stc
nop
es
add
add
add
add
pop
push
mov
dec
loopne
mov
push
add
add
add
push
pop
mov
stc
nop
es
add
add
stc
nop
es
add
mov
add
bound
mov
mov
stc
nop
es
adc
pop
pop
nop
cld
nop
jmp
mov
mov
add
add
add
decb
test
nop
es
add
xor
ror
push
mov
xchg
ret
add
in
test
add
push
mov
xchg
ret
add
add
or
mov
xchg
ret
add
or
mov
inc
add
popa
add
nop
es
jae
test
add
push
mov
xchg
ret
sub
cmp
popl
nop
cld
nop
jmp
cmp
cmp
mov
jb
fildl
add
xchg
xchg
push
xor
popf
ja
nop
cld
nop
jmp
add
push
add
jne
stc
nop
es
out
add
mov
popf
nop
cld
nop
jmp
jae
add
add
stc
nop
es
xchg
jae
xor
xchg
add
add
add
push
add
sub
xor
xor
add
stc
nop
es
add
add
mov
stc
nop
es
in
lock
mov
call
stc
nop
es
divb
push
mov
xchg
ret
mov
and
add
mov
nop
cld
nop
jmp
add
add
add
nop
es
add
jb
js
stc
nop
es
add
mov
fildl
test
stos
cmp
nop
cld
nop
jmp
cmp
sahf
add
stc
nop
es
lds
dec
lock
push
mov
add
add
add
jge
loope
ja
and
nop
cld
nop
jmp
add
inc
add
add
ds
nop
cld
nop
jmp
add
push
add
aam
jge
add
stc
nop
es
lock
inc
xchg
add
jle
stc
nop
es
xor
in
add
or
mov
cmp
ret
add
add
test
mov
dec
je
nop
cld
nop
jmp
add
jmp
test
nop
es
test
mov
pop
cmpb
nop
cld
nop
jmp
outsl
add
inc
mov
add
xor
stc
nop
es
mov
adc
loop
add
mov
add
add
or
push
mov
xchg
ret
or
sub
cmp
stc
nop
es
add
mov
stc
nop
es
add
add
add
iret
call
stc
nop
es
mov
add
push
mov
xchg
ret
add
cmpsl
pop
add
stc
nop
es
xchg
add
outsl
add
fiaddl
add
cmp
ret
xchg
add
xor
push
mov
xchg
ret
add
mov
add
mov
jmp
xchg
push
cmp
lock
add
push
mov
xchg
ret
add
add
mov
push
mov
xchg
ret
add
cmp
popa
stc
nop
es
mov
add
pop
push
mov
xchg
ret
add
fcom
mov
nop
es
push
add
add
add
add
es
add
testb
out
jne
stc
nop
es
add
push
add
jmp
add
mov
test
cmp
adc
adc
add
add
add
cmp
ror
add
sahf
add
testb
nop
jmp
sub
add
in
adc
inc
add
nop
es
testb
jno
xor
mov
mov
xchg
ret
add
cmp
cmp
nop
jmp
add
add
lock
stc
nop
es
push
add
push
mov
stc
nop
es
xchg
add
nop
jmp
sub
add
add
shl
inc
add
sub
jge
add
and
stc
nop
es
add
pop
mov
stc
nop
es
add
add
add
add
mov
xchg
ret
add
xchg
stc
nop
es
filds
add
mov
stc
nop
es
aas
mov
negb
dec
cmp
nop
es
add
mov
add
into
mov
stc
nop
es
test
lds
loope
dec
addb
add
stc
nop
es
add
mov
fcomip
movsb
add
mov
es
mov
jae
add
add
cld
nop
jmp
mov
add
mov
nop
es
sub
xchg
out
out
jnp
insl
fldl
xchg
ret
add
jmp
dec
sub
nop
es
xchg
jge
add
xor
mov
stc
nop
es
add
and
add
xorl
stc
nop
es
add
movb
add
nop
es
das
sahf
add
add
xchg
scas
mov
stc
nop
es
adc
loopne
mov
nop
jmp
mov
sub
add
mov
xchg
ret
cmp
inc
add
adc
jb
add
add
add
mulb
add
mov
cld
nop
jmp
aas
mov
add
add
add
dec
nop
cld
nop
jmp
jae
mov
add
add
dec
mov
call
push
add
add
mov
stc
nop
es
add
xchg
add
add
cmp
add
stc
nop
es
add
adc
mov
jb
sbb
add
negb
cmp
nop
jmp
jp
mov
dec
add
add
and
mov
jb
das
out
add
cmp
and
imul
sbb
add
das
fadds
addb
push
push
mov
xchg
ret
add
jge
add
add
jb
outsl
add
push
movsb
repnz
push
rep
push
mov
xchg
ret
test
ljmp
stc
nop
es
xchg
add
or
add
nop
es
add
mov
push
mov
xchg
ret
in
or
add
inc
stc
nop
es
test
aas
cmp
stc
nop
es
test
add
popa
push
mov
xchg
ret
add
add
add
stc
nop
es
add
add
pusha
stc
nop
es
shld
fwait
push
stc
nop
es
das
add
stos
push
stc
nop
es
add
decl
test
nop
es
mov
add
leave
mov
stc
nop
es
je
mov
add
rep
stc
nop
es
mov
add
add
add
sbb
nop
es
add
aas
outsl
add
dec
or
sbb
add
mov
and
cmp
nop
cld
nop
jmp
filds
add
push
add
rolb
mov
imul
push
mov
xchg
ret
cmp
add
cmp
nop
es
mov
mov
call
nop
cld
nop
jmp
das
xor
inc
add
in
push
push
mov
xchg
ret
add
push
lock
arpl
jne
stc
nop
es
sub
push
mov
xchg
ret
out
xchg
add
dec
add
fadds
xchg
ret
add
lds
add
sbb
xchg
inc
add
pop
xor
stc
nop
es
sub
cs
push
mov
xchg
ret
loope
mov
add
add
call
stc
nop
es
xor
add
jb,pt
nop
cld
nop
jmp
add
add
out
addb
inc
add
add
inc
add
loop
inc
add
add
mov
stc
nop
es
add
fbstp
insl
add
stc
nop
es
add
mov
cmp
push
mov
xchg
ret
add
outsb
push
push
mov
xchg
ret
add
add
jb
xchg
int
inc
adc
nop
es
sub
and
sbbl
es
add
add
push
push
mov
xchg
ret
add
loopne
add
adc
jae
es
add
jno
adc
add
nop
jmp
xchg
xchg
add
add
add
add
add
nop
es
jae
push
xor
push
mov
xchg
ret
mov
or
cltd
shr
stc
nop
es
sub
sub
push
push
mov
xchg
ret
adc
add
test
nop
es
and
mov
add
cmp
nop
cld
nop
jmp
add
add
add
mov
stc
nop
es
add
jge
ficoms
cld
nop
jmp
add
add
add
nop
es
add
movntq
nop
add
or
inc
cmp
mov
xchg
ret
add
cmp
or
in
incl
xchg
mov
push
add
jb
in
add
add
aas
inc
cmp
add
nop
es
loopne
test
mov
and
push
mov
xchg
ret
add
aas
add
rolb
or
mov
xchg
ret
adc
lds
stc
nop
es
repnz
stc
nop
es
lock
jge
xchg
sub
lock
nop
es
add
push
add
add
es
repnz
testb
add
push
mov
stc
nop
es
and
add
add
and
nop
es
inc
add
jge
lock
nop
es
cmp
sub
movzwl
stc
nop
es
sub
sahf
add
inc
stc
nop
es
btr
fildl
mov
mov
stc
nop
es
xchg
add
nop
es
add
das
add
mov
out
mov
push
mov
xchg
ret
idivb
mov
adc
cld
nop
jmp
cmp
cmp
add
cld
nop
jmp
loopne
fbstp
add
dec
add
stc
nop
es
loope
xor
xchg
mov
mov
nop
cld
nop
jmp
fisttps
mov
mov
stc
nop
es
lds
xchg
nop
cld
nop
jmp
add
arpl
sbb
jb
test
add
xchg
or
jb
mov
add
add
test
add
nop
es
add
add
add
call
nop
cld
nop
jmp
or
add
add
push
mov
xchg
ret
add
add
mov
add
roll
inc
fldl
sti
stc
nop
es
add
mov
mov
fsubs
popa
add
nop
es
inc
cmp
lock
xlat
dec
movzwl
push
mov
xchg
ret
add
add
mov
add
add
nop
es
add
add
add
nop
cld
nop
jmp
add
add
jp
stc
nop
es
testb
add
push
push
mov
xchg
ret
cmp
inc
add
jmp
stc
nop
es
xor
push
mov
xor
add
stc
nop
es
add
nop
es
inc
arpl
test
testl
nop
cld
nop
jmp
loope
add
sbb
mov
xchg
ret
fadds
inc
arpl
add
xchg
stc
nop
es
add
mov
xchg
push
add
mov
nop
es
add
sub
xor
fcmovnb
ficoml
nop
es
or
out
jae
add
cltd
subl
nop
cld
nop
jmp
je
dec
add
loope
add
add
nop
es
add
out
les
loopne
push
add
lahf
pop
push
mov
xchg
ret
psadbw
add
add
cmp
stc
nop
es
add
outsl
add
mov
stc
nop
es
add
add
xor
lock
popa
stc
nop
es
add
add
add
stc
nop
es
divb
loope
add
mov
leave
add
stc
nop
es
add
add
jae
mov
xor
add
nop
cld
nop
jmp
xchg
sbb
out
add
dec
cmp
nop
es
add
jno
add
in
sub
jmp
jb
cmp
out
add
in
inc
add
add
add
jne
stc
nop
es
add
or
add
nop
es
add
movzwl
nop
cld
nop
jmp
add
add
out
dec
or
nop
es
cmp
testb
je
je
add
stc
nop
es
cmp
fistl
fisubs
xor
add
stc
nop
es
add
test
cld
nop
jmp
cmp
add
mov
rep
nop
cld
nop
jmp
test
outsl
add
aas
out
xchg
test
add
adcb
add
adc
jecxz
mov
stc
nop
es
mov
test
add
sahf
push
mov
xchg
int3
mov
stc
nop
es
divb
xchg
add
sbb
cwtl
pop
add
stc
nop
es
test
add
add
mov
xchg
ret
sbb
out
lds
add
mov
arpl
nop
es
test
add
flds
je
sub
nop
es
test
add
movsb
add
fiadds
xchg
ret
xchg
add
cmp
push
mov
xchg
ret
mul
add
add
lea
push
mov
xchg
ret
mov
fbld
das
cmp
nop
jmp
mov
cmp
cmp
stc
nop
es
mov
xchg
cmp
packssdw
sub
nop
es
or
sbbl
nop
cld
nop
jmp
loope
add
dec
mov
push
out
pop
push
nop
cld
nop
jmp
add
xchg
add
mov
stc
nop
es
sub
add
outsb
dec
push
mov
xchg
ret
add
sldt
add
shl
stc
nop
es
das
out
inc
add
test
add
stc
nop
es
jge
add
mov
stc
nop
es
add
add
add
push
mov
mov
and
add
add
add
push
aas
push
stc
nop
es
add
cmp
add
movswl
nop
cld
nop
jmp
push
xchg
stc
add
es
mov
mov
jb
add
add
add
in
cmp
es
movsb
cmp
add
lds
aas
jl
push
loopne
nop
es
add
arpl
push
mov
xchg
ret
add
mov
add
test
inc
add
add
add
fildl
popa
add
sbb
add
nop
cld
nop
jmp
dec
lock
movsb
cli
xor
stc
nop
es
cmp
sub
pop
pop
stc
nop
es
push
loopne
aas
loope
add
xor
push
mov
xchg
ret
add
dec
aas
lock
lcall
jmp
add
add
sbb
add
es
add
mov
pop
jne
stc
nop
es
add
add
stc
nop
es
xor
je
inc
add
xchg
push
add
jmp
popa
add
nop
es
add
add
add
cld
nop
jmp
testb
arpl
in
out
clc
lods
nop
cld
nop
jmp
adc
dec
add
add
add
push
stc
nop
es
add
add
mov
inc
stc
nop
es
or
in
mov
add
stc
nop
es
mov
add
add
add
nop
es
dec
add
jb
add
add
outsl
mov
add
dec
mov
nop
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
push
dec
add
imul
idiv
incl
add
test
add
nop
es
add
test
cld
nop
jmp
mov
lock
add
adc
lcall
sbb
incl
and
add
add
in
adc
add
stc
nop
es
out
inc
loop
bound
mov
mov
mov
xchg
ret
mov
mov
wrmsr
add
pop
stc
nop
es
das
movsb
add
adc
loope
add
subl
jb
add
jp
add
in
jmp
cmpsb
les
xchg
ret
add
add
jae
push
mov
xchg
ret
fadds
add
nop
cld
nop
jmp
add
sub
sbb
nop
es
add
xchg
add
push
cmp
add
add
nop
es
loope
and
nop
cld
nop
jmp
add
add
dec
cmp
jne
stc
nop
es
test
jge
stc
nop
es
loope
add
and
mov
test
add
es
neg
add
add
nop
es
mov
mov
add
add
ss
nop
es
imulb
add
xchg
stc
nop
es
xchg
mov
mov
fs
jo
lahf
push
stc
nop
es
add
test
loope
fildl
nop
es
mov
and
add
mov
shl
stc
nop
es
xchg
dec
divb
je
add
stc
nop
es
add
add
js
stc
nop
es
mov
repnz
add
not
stc
nop
es
cmp
add
inc
add
stc
nop
es
test
stc
nop
es
mov
add
add
mov
inc
add
nop
cld
nop
jmp
jge
add
sub
test
cld
nop
jmp
add
nop
cld
nop
jmp
add
add
add
cld
nop
jmp
cmp
mov
add
dec
stc
nop
es
jae
add
movsb
add
lock
es
xchg
add
add
loop
mov
xor
nop
jmp
add
sahf
add
add
les
pop
mov
stc
nop
es
add
pop
ret
stc
nop
es
out
cmp
xor
mov
stc
nop
es
add
add
test
push
inc
add
stc
nop
es
add
mov
jge
mov
ss
add
sub
stc
nop
es
cmp
scas
jne
stc
nop
es
dec
add
push
push
mov
xchg
ret
add
inc
add
loopne
lcall
int
call
lock
cld
mov
stc
nop
es
movsb
add
xchg
fadds
in
xor
nop
cld
nop
jmp
xor
mov
and
add
cmp
mov
xchg
ret
add
push
in
sbb
mov
lcall
jmp
add
mov
add
out
call
sti
incl
xchg
fildl
pop
push
push
mov
xchg
ret
add
dec
add
push
mov
xchg
ret
add
mov
rep
stc
nop
es
add
sub
mov
add
add
mov
es
xchg
add
jmp
nop
cld
nop
jmp
inc
add
add
ret
nop
es
add
out
add
cmp
nop
es
das
jp
add
aas
imul
stc
nop
es
add
jae
testb
pop
jne
stc
nop
es
test
xchg
xchg
sub
in
add
add
popf
cltd
add
and
push
mov
xchg
ret
dec
sub
decl
stc
nop
es
je
add
xchg
popa
sahf
mov
nop
cld
nop
jmp
add
dec
filds
lock
pusha
push
mov
xchg
ret
add
xchg
xchg
sub
jmp
jb
add
fsts
in
test
dec
sub
sahf
add
xor
sbb
mov
es
xchg
imulb
add
push
mov
add
nop
es
lds
add
add
stc
nop
es
mov
add
push
stc
nop
es
add
mov
add
xchg
add
push
mov
sbb
mull
add
out
push
push
inc
add
nop
es
lock
add
and
or
nop
es
add
mov
add
add
mov
pop
stc
nop
es
add
add
mov
xchg
ret
xchg
add
add
push
mov
xchg
ret
test
dec
mov
push
mov
xchg
ret
xchg
dec
add
add
mov
xchg
ret
mov
add
repnz
jb
movsb
sub
add
stc
nop
es
add
add
inc
test
es
sbb
push
add
rolb
popa
nop
cld
nop
jmp
add
filds
mov
inc
add
sbb
nop
cld
nop
jmp
testb
mov
add
aad
add
pop
stc
nop
es
add
add
add
push
stc
nop
es
add
add
add
add
and
nop
es
sub
xchg
dec
mov
mov
stc
nop
es
add
test
push
add
es
add
add
add
mov
jb
add
out
negb
test
nop
es
add
in
mov
stc
nop
es
cmp
mov
stc
nop
es
add
and
add
nop
es
add
add
add
cmp
add
add
nop
cld
nop
jmp
je
add
add
add
add
add
add
nop
es
das
fildl
add
mov
and
stc
nop
es
jp
add
add
nop
es
add
cmp
imul
nop
cld
nop
jmp
add
lods
cmpl
nop
cld
nop
jmp
das
loopne
add
push
push
nop
cld
nop
jmp
mov
fildll
je
out
repnz
mov
push
mov
xchg
ret
xor
loopne
cmp
sub
test
nop
es
fistl
inc
stc
nop
es
inc
add
or
nop
es
das
mov
add
fistps
nop
es
add
xor
xchg
ret
aaa
adc
cld
nop
jmp
add
mov
xchg
add
je
nop
cld
nop
jmp
add
test
jns
push
mov
xchg
ret
mov
mov
fdivrs
repnz
stc
nop
es
add
add
add
stc
nop
es
out
notb
and
nop
es
add
mov
pushf
jne
stc
nop
es
fbstp
add
add
stc
nop
es
push
add
add
or
push
mov
xchg
ret
fildl
cmp
mov
stc
nop
es
mov
sahf
add
mov
stc
nop
es
adc
dec
mov
pop
push
mov
xchg
ret
in
add
inc
add
adc
mov
xchg
ret
add
push
mov
xchg
ret
mov
cmp
push
add
stc
nop
es
mov
add
stc
nop
es
add
mov
add
add
not
add
inc
stc
nop
es
cmp
add
in
stc
nop
es
add
add
xchg
add
movzwl
stc
nop
es
add
rolb
les
nop
cld
nop
jmp
testb
dec
add
popl
es
xchg
push
outsl
jno
or
nop
es
add
repnz
mov
add
mov
stc
nop
es
mov
add
add
mov
push
mov
xchg
ret
idivb
das
add
nop
jmp
jp
jno
add
add
xor
stos
nop
cld
nop
jmp
add
add
add
push
movswl
stc
nop
es
sahf
add
mov
and
push
mov
xchg
ret
divb
mov
nop
cld
nop
jmp
add
add
repnz
pmaxsw
mov
nop
es
test
bswap
je
stc
nop
es
add
jno
xor
stc
nop
es
add
add
add
nop
es
fildl
add
add
sub
add
stc
nop
es
cmp
add
rep
stc
nop
es
aas
out
add
push
mov
xchg
ret
test
jp
and
nop
es
cmp
add
sub
jl
sbb
nop
es
mov
out
add
nop
jmp
pslld
mov
jp
cmp
nop
cld
nop
jmp
add
push
out
jp
dec
lahf
and
nop
cld
nop
jmp
lock
add
mov
add
jb
loope
repnz
add
xor
jmp
push
mov
xchg
ret
mov
sub
add
add
inc
sub
nop
es
filds
add
fsubr
pop
push
push
mov
xchg
ret
add
add
add
repz
mov
xchg
ret
xchg
add
aas
adc
repz
add
add
nop
es
add
gs
nop
es
movsb
notb
pop
clc
stc
nop
es
cmp
pop
push
mov
xchg
ret
push
jno
add
add
sbb
cmc
aas
add
add
add
mov
xchg
ret
add
out
mov
add
leave
nop
cld
nop
jmp
arpl
outsl
add
mov
stc
nop
es
testb
xor
sbb
nop
es
repnz
mov
fdiv
mov
je
in
jne
stc
nop
es
jae
add
nop
es
add
add
call
stc
nop
es
xchg
divb
add
faddl
xchg
ret
jno
lock
add
popa
add
mov
xchg
ret
add
mov
loope
push
nop
cld
nop
jmp
add
add
push
mov
xchg
ret
add
mov
mov
nop
cld
nop
jmp
xor
sbb
mov
xchg
ret
sahf
add
cmp
sub
jbe
stc
nop
es
divb
jne
nop
cld
nop
jmp
dec
xchg
test
movsb
mov
in
mov
nop
cld
nop
jmp
xchg
fildl
in
outsl
jno
push
push
mov
xchg
ret
add
div
add
or
jmp
add
loopne
add
push
mov
test
add
cmp
xor
add
aam
testb
mov
stc
nop
es
inc
cmp
adc
mov
xchg
ret
xchg
add
cmp
nop
cld
nop
jmp
repnz
lds
outsl
movzwl
stc
nop
es
testb
add
leave
pop
stc
nop
es
add
push
add
inc
sub
push
mov
xchg
ret
and
add
nop
cld
nop
jmp
sub
add
nop
jmp
add
add
negb
insb
insb
add
stc
nop
es
cmp
add
nop
cld
nop
jmp
add
xchg
cmp
repnz
pop
stc
nop
es
add
add
out
mov
add
cld
nop
jmp
sub
add
cmp
adc
nop
es
jae
sub
jmp
stc
nop
es
mov
add
inc
loopne
nop
es
add
add
add
es
inc
add
inc
push
mov
nop
jmp
add
add
add
mulb
in
add
sub
pop
add
add
add
add
sahf
mov
stc
nop
es
add
arpl
fsubrs
nop
cld
nop
jmp
outsl
jae
mov
fistl
mov
xchg
ret
sub
test
cmc
and
mov
dec
adc
cld
nop
jmp
and
in
add
mov
xor
stc
nop
es
testb
xchg
fsubr
fnstenv
stc
nop
es
in
sbb
lea
iret
add
add
mov
sti
nop
cld
nop
jmp
push
mov
mov
jb
cmp
cld
nop
jmp
sahf
test
add
add
mov
outsl
push
stc
nop
es
add
lds
loope
jecxz
add
sub
nop
cld
nop
jmp
bnd
add
pop
mov
stc
nop
es
add
or
test
stc
nop
es
sbb
aam
ljmp
xorb
incl
aas
add
add
sub
inc
in
stc
nop
es
add
adc
add
push
mov
xchg
ret
add
add
add
scas
enter
jb
sbb
arpl
nop
jmp
loopne
filds
fnstsw
outsl
test
stc
nop
es
cmp
das
add
daa
mov
es
fldt
and
add
add
add
stc
nop
es
testb
test
es
jno
add
sbb
aas
hlt
add
nop
jmp
add
and
ds
push
mov
xchg
ret
push
add
popa
stc
nop
es
add
add
mov
add
sbb
int3
iret
inc
add
add
je
jno
inc
add
add
add
out
add
add
dec
mov
push
mov
xchg
ret
mov
mov
jno
mov
stc
nop
es
lds
test
nop
cld
nop
jmp
je
cmp
and
clc
stc
nop
es
out
mov
or
jb
dec
mov
add
dec
add
stc
nop
es
mov
xor
mov
es
fsubs
cmp
lock
loop
and
cmp
stc
nop
es
jp
add
sub
mov
xchg
ret
add
add
inc
sub
dec
sub
nop
es
add
mov
mov
stc
nop
es
repnz
or
stc
nop
es
mov
cmp
stc
nop
es
add
mov
sbb
fmuls
jbe
stc
nop
es
fildl
add
add
mov
nop
cld
nop
jmp
mov
mov
sub
mov
int
stc
nop
es
add
add
lock
les
shll
nop
cld
nop
jmp
xchg
cmp
xchg
fbstp
and
stc
nop
es
add
lea
nop
cld
nop
jmp
add
add
add
stc
nop
es
mov
add
in
push
add
nop
es
jge
add
add
add
into
add
push
mov
xchg
ret
and
jge
add
pop
inc
stc
nop
es
or
add
add
mov
add
cmp
push
pop
add
movl
add
insl
in
add
stc
pusha
add
add
nop
add
popa
push
add
mov
movb
stos
sbb
push
sub
inc
add
or
xor
push
add
add
std
bound
mov
lock
mov
add
dec
enter
daa
mov
js
xchg
xchg
add
add
add
add
cwtl
add
imul
loope
xor
jne
add
dec
jl
mov
enter
shrl
lcall
test
movsb
add
add
mov
add
repz
aaa
push
add
mov
pop
pop
add
mov
sbb
jnp
les
jecxz
cmp
mov
xchg
add
mov
inc
add
ds
add
into
iret
aas
pop
mov
enter
pop
lods
pop
and
cmp
add
add
add
mov
or
jp
add
add
or
or
lods
mov
mov
fwait
cwtl
dec
add
add
add
dec
popa
sti
test
addb
mov
pusha
add
iret
add
or
addb
scas
pop
pusha
add
add
add
popf
inc
add
add
add
inc
add
mov
pop
aam
hlt
add
xlat
nop
add
adc
mov
add
inc
jmp
add
fsts
scas
test
add
or
push
ret
push
add
lcall
outsb
cmp
mov
jno
jnp
mov
cmp
xor
add
inc
add
push
add
add
jmp
call
outsl
test
ret
idiv
cs
pop
and
push
add
add
add
mov
add
add
int3
bound
mov
add
fistpll
xlat
popa
xlat
outsl
rolb
sub
mov
cmpsb
add
test
into
ret
or
xchg
add
xchg
or
mov
lods
pop
lods
push
add
and
mov
add
frstor
add
cwtl
xlat
stc
fistpl
jns
fistpll
or
adc
movsl
pushf
xchg
pop
and
fisubs
jge
inc
push
add
std
cmpsb
add
popf
out
sbb
add
sub
add
add
mov
pop
mov
add
add
mov
mov
adc
add
add
rolb
and
mov
pop
addb
ljmp
ret
cmp
add
add
add
sub
pop
fcmovnb
add
out
loope
add
push
add
ds
loopne
popf
out
add
mov
addl
add
jl
stos
aas
add
mov
push
add
imul
xchg
add
add
icebp
mov
adc
add
outsb
pop
and
aaa
in
push
or
std
push
add
std
clc
lea
push
add
fisubrl
sub
imul
mov
int3
out
mov
pop
pop
or
ljmp
mov
mov
call
xchg
popf
outsl
mov
add
jge
xchg
add
filds
mov
adc
pop
dec
out
mov
scas
loop
mov
push
add
add
push
add
movsb
add
add
mov
and
mov
sbb
xchg
xchg
loope
add
add
mov
ja
jmp
cmp
mov
add
scas
scas
adc
and
mov
add
insb
cmp
repz
test
xor
clc
cld
test
mov
add
add
mov
sbbl
arpl
jmp
add
in
mov
sbb
add
add
jo
out
dec
call
lock
jg
add
sub
add
inc
into
popl
add
cmpsl
in
cld
fadds
or
push
mov
cli
movb
scas
popf
add
je
ret
add
test
addl
sbb
iret
sbb
out
sbb
movsl
stos
movb
add
add
add
adc
jbe
or
mov
push
push
fbstp
cmpsl
jp
rcll
add
mov
mov
xchg
mov
add
add
add
mov
loopne
cmp
test
add
loope
loope
int
addl
add
add
iret
adc
mov
into
insb
clc
dec
call
cmp
add
pop
aaa
loope
add
add
jmp
add
add
ret
jns
add
vpmadcsswd
mov
adc
nop
add
arpl
mov
add
iret
fadds
into
add
mov
add
iret
jp
add
mov
add
inc
jmp
pop
xlat
hlt
add
dec
into
into
mov
or
add
leave
add
jno
jp
add
enter
imul
sbb
lcall
into
adc
mov
ret
inc
add
mov
pop
xor
add
dec
test
ret
das
dec
loope
add
mov
or
scas
pop
add
add
add
out
std
and
mov
xor
cld
in
pop
sahf
cmp
add
add
add
sub
jmp
add
xor
nop
add
add
xor
pushf
xchg
add
add
jmp
cmp
add
shl
or
xchg
add
ja
add
sub
push
jmp
mov
xchg
iret
fwait
rolb
jo
iret
adc
add
repnz
rolb
add
push
add
call
mov
add
add
test
scas
icebp
std
or
jecxz
add
out
in
arpl
stos
lcall
add
add
ds
cmp
inc
add
pop
xchg
add
clc
imul
lahf
push
xchg
outsb
mov
mov
add
inc
push
ljmp
jp
jbe
xchg
inc
xor
subl
add
sahf
jbe
iret
mov
lods
add
fsubl
add
out
xchg
add
push
mov
push
add
xor
dec
enter
mov
add
add
mov
add
add
add
mov
bound
mov
ret
jns
icebp
pop
mov
rolb
call
jge
ds
inc
add
js
lcall
pop
sub
jg
mov
das
stc
cltd
adc
xchg
aam
ss
cmpsl
dec
movsl
ljmp
xchg
adcl
add
je
mov
call
cmc
clc
cld
pop
mov
data16
int3
bound
mov
daa
std
inc
add
inc
add
xor
add
arpl
out
xlat
push
repnz
cmpps
sbb
xchg
push
inc
mov
loopne
jae
popf
pop
mov
mov
hlt
add
mov
std
js
sbb
inc
in
add
daa
adc
add
cwtl
mov
push
xchg
lret
pop
sub
dec
and
xor
and
cmpsb
add
inc
mov
xor
cmp
dec
xlat
and
aaa
xor
add
add
adc
mov
cwtl
in
dec
clc
mov
cmp
add
add
push
add
add
les
jecxz
add
mov
shll
mov
add
mov
add
inc
cmc
fstpl
pop
mov
push
add
pop
push
xor
mov
ds
pop
inc
add
push
add
loope
ret
daa
scas
lods
movsb
add
inc
cmp
mov
xchg
add
addb
push
add
xchg
insb
into
pop
xor
mov
adc
jne
out
adc
sbb
in
add
arpl
loope
or
add
jmp
jl
rorl
rolb
fcmovnb
add
add
fistpl
pop
std
jge
jle
lea
mov
psrad
pop
dec
jmp
jp
add
lahf
stos
lahf
add
pop
addb
sub
add
add
ret
sbbl
pop
push
add
leave
sbb
enter
aad
add
lcall
add
push
add
cltd
jecxz
jge
add
sahf
lcall
stc
out
pop
mov
push
add
jecxz
sbb
jns
add
jmp
cmp
sub
popf
mov
cmp
add
movb
add
insl
rolb
add
inc
add
cltd
in
cmp
add
cmp
das
and
mov
mov
add
add
xchg
fldcw
mov
add
add
mov
cmp
add
adc
and
and
mov
add
push
add
add
or
or
xor
int
push
or
jbe
jmp
xchg
xchg
xchg
cmp
shll
test
mov
loopne
imul
pop
xor
mov
out
adc
xchg
cmp
jmp
jmp
add
jo
sarl
mov
cld
pop
sbb
mov
das
data16
add
lret
stos
dec
mov
cmp
add
mov
mov
mov
add
ret
add
add
fstpt
push
jl
add
mov
dec
push
add
add
cmp
call
adc
push
add
aas
ret
or
arpl
mov
popf
adc
or
mov
insb
jle
data16
add
testb
inc
loop
inc
add
push
add
add
imul
dec
jle
in
push
add
or
xor
push
cmp
out
xlat
add
mov
adc
mov
pop
cmp
lods
jno
add
jle,pn
add
cmpsb
add
fbstp
add
mov
add
insb
lahf
xlat
and
mov
add
add
add
sbb
stc
pop
push
add
add
add
add
and
gs
ja
lods
sbb
jl
add
mov
pop
push
in
add
in
mov
in
mov
out
inc
add
sbb
cmpl
pop
adc
in
ljmp
lcall
lods
xor
aad
add
mov
add
std
loope
or
push
add
add
and
mov
cmp
pop
lcall
sbbl
sbb
dec
adc
jecxz
inc
add
jne
add
xor
aas
jae
mov
xchg
mov
add
jbe
push
add
jle
dec
mov
jecxz
mov
fistps
pop
mov
xchg
add
and
mov
in
lods
xchg
pmuludq
movb
gs
pop
xor
add
lcall
inc
mov
in
movsl
cmc
jg
std
imul
pusha
add
popf
inc
add
dec
mov
loope
dec
mov
into
adc
push
add
adcl
push
add
add
fiaddl
add
cmc
inc
add
addr16
bound
mov
add
aas
xor
dec
ss
jl
sahf
add
add
inc
das
in
dec
pop
in
mov
mov
add
cs
add
push
and
das
jp
mov
mov
add
xor
add
pop
sub
test
ljmp
pop
sub
or
fucomp
outsl
cmp
cmp
add
add
movsb
add
cmp
jmp
xchg
sbb
movsb
add
xlat
data16
add
add
add
add
aad
pusha
add
xchg
add
add
and
mov
inc
into
rolb
add
add
inc
mov
add
insl
jp
mov
pusha
add
loopne,pt
icebp
mov
dec
push
add
mov
add
xor
mov
out
popa
or
jb
jnp
testb
add
std
cmp
scas
clc
stos
test
mov
mov
add
mov
dec
inc
scas
mov
insb
sub
add
rolb
ret
adc
mov
mov
add
add
push
xchg
lahf
add
fs
add
add
mov
out
mov
aas
shll
aam
push
add
notl
stc
stc
call
mov
in
imul
add
mov
rolb
add
rolb
int3
xchg
add
add
and
xchg
or
jle
pop
jnp
loop
into
ds
and
mov
sbb
add
mov
or
data16
mov
add
dec
int3
cmp
or
test
call
jmp
sub
add
mov
loopne
in
add
jge
add
mov
add
add
lods
xchg
push
or
dec
push
add
aaa
or
cmp
das
sahf
or
xor
stc
cld
stc
movsl
icebp
mov
orl
cld
xchg
sbb
add
push
add
cmp
push
add
and
scas
cld
inc
add
nop
add
xor
add
mov
add
xchg
add
jl
push
dec
data16
pusha
add
mov
loope
lds
daa
imul
dec
or
add
push
cmpsl
jne
dec
xor
pop
inc
add
fmul
hlt
add
sbb
add
dec
insl
in
sbb
mov
sbb
iret
loope
ds
stc
lret
inc
add
sub
pusha
add
mov
mov
pop
xchg
xchg
add
test
add
fadds
sbb
sbb
roll
push
add
jmp
repnz
add
in
sub
inc
add
mov
mov
add
sub
and
adc
in
lock
outsb
xor
dec
jg
data16
rep
xor
add
xor
lret
or
adc
popa
testb
imul
lds
add
pusha
add
add
mov
add
bound
mov
sbb
add
mov
sub
jns
or
add
cmp
mov
or
add
mov
sub
inc
cmpsb
add
xor
push
push
mov
mov
add
or
adc
push
dec
scas
adc
add
add
mov
mov
add
jbe
jnp
xchg
test
movsb
add
add
xchg
pop
addb
mov
fwait
mov
jae
add
add
dec
aaa
dec
icebp
mov
mov
data16
add
add
and
mov
add
test
add
add
jb
fdivr
enter
in
int
pushf
data16
aad
add
add
add
add
pop
push
dec
orl
dec
adc
dec
xchg
jns
cli
rolb
mov
add
sub
cmp
fldl
add
add
loope
add
add
cmp
js
add
push
add
mov
add
adc
cmp
add
add
imull
addb
rolb
or
add
mov
mov
cld
inc
add
in
xchg
add
fwait
adc
in
fwait
aad
push
sub
jmp
push
bound
mov
add
add
add
mov
mov
mov
or
lret
xchg
pop
mov
sub
add
test
repz
mov
dec
adc
xchg
xchg
add
or
adc
fstps
cli
out
add
add
add
int3
arpl
or
add
pusha
add
pusha
add
inc
mov
inc
xor
pop
nop
add
pusha
add
push
jle
xorl
add
add
mov
mov
inc
add
data16
mov
outsb
dec
sahf
pop
pop
loop
popa
out
xchg
mov
lock
add
test
push
add
iret
or
dec
fisttpll
aas
sti
xchg
add
add
xor
mov
mov
push
mov
add
xor
add
mov
lret
inc
add
or
mov
mov
rolb
outsl
adc
add
cmp
hlt
add
iret
or
adc
lret
dec
movb
add
push
movhps
or
mov
lods
push
pop
push
inc
pop
pop
jecxz
add
add
mov
push
inc
add
add
push
add
loopne
push
cmpsb
add
mov
je
lret
in
or
sbb
sub
pop
fisttpll
add
ds
sbb
aaa
mov
cmpsb
add
aas
bound
mov
pop
aaa
addb
ljmp
mov
mov
rcr
sti
sub
mov
mov
sbb
sub
nop
add
lahf
mov
add
ficompl
pop
sub
add
adc
mov
add
mov
or
push
jno
adc
out
xchg
dec
popf
jae
cld
push
sarl
add
aam
sbb
add
sbb
lret
add
jp
repz
xchg
push
mov
add
pop
cs
inc
add
add
mov
int3
push
add
mov
sbb
mov
stos
mov
add
add
inc
add
addb
dec
cmpsb
add
add
repz
add
add
add
or
add
lret
push
mov
movb
into
pushf
mov
add
mov
data16
adc
fsubrs
stc
fwait
inc
pop
pop
add
mov
mov
aas
daa
int
rolb
fstl
add
add
adc
jae
xchg
out
lods
ss
xlat
loopne
mov
add
ja
sti
addb
jmp
pop
fsub
add
aad
add
push
add
push
and
cltd
test
add
scas
leave
and
loopne
mov
adc
add
test
repnz
xchg
add
jge
add
add
cmpsl
fisubrs
pop
push
add
add
leave
fbstp
lds
add
add
divl
adc
xchg
and
stc
mov
fldcw
lea
jg
add
enter
mov
lea
add
add
nop
add
add
add
add
add
mov
mov
xor
fwait
mov
pop
xchg
dec
xor
out
mov
popa
mov
xchg
push
mov
fcoms
pop
pop
xchg
outsl
jmp
sbbl
fidivl
and
out
jne
imul
push
outsb
popl
mov
push
add
rorl
ljmp
cmp
int3
iret
pusha
add
add
out
pusha
add
xor
add
jmp
add
mov
lcall
leave
scas
insl
add
popa
sbb
add
or
add
pop
cmp
jne
add
cmp
fsts
xlat
rolb
add
jl
decb
add
sbb
dec
push
add
mov
and
fwait
mov
push
add
add
pop
mov
std
adc
ret
add
add
adc
call
adcl
mov
add
mov
add
pusha
add
add
jmp
xchg
ljmp
fistpl
cld
xchg
add
pop
pusha
add
mov
mov
adc
mov
lret
gs
sti
sub
lock
aaa
int
inc
int3
testb
xor
out
leave
xchg
add
add
mov
add
test
lock
cmpsl
inc
or
add
add
addr16
and
mov
add
sub
mov
jo
scas
cwtl
and
mov
addb
test
pop
jns
lods
and
add
add
mov
push
xor
hlt
add
add
jns
add
add
sbb
add
out
push
adc
outsl
add
mov
pop
dec
lret
loop
rolb
sbb
rolb
sbb
add
add
add
loopne
dec
rolb
fnstsw
orl
in
xor
and
xchg
aaa
sbb
mov
add
add
icebp
pop
cld
mov
in
outsl
fimull
dec
cli
inc
add
loopne
mov
sub
icebp
xchg
add
mov
add
iret
sbb
cld
arpl
inc
sbbl
jo
mov
rolb
cmp
add
and
js
xor
add
pusha
add
mov
and
mov
shr
sbb
inc
add
dec
add
icebp
adc
dec
mov
xor
add
jo
lds
add
jg
adc
imull
add
dec
ds
in
sbb
pop
addl
cmp
mov
add
add
add
mov
or
xor
outsl
or
inc
pop
xchg
push
add
mov
add
dec
ret
in
mov
push
add
push
add
out
aaa
cli
addr16
add
xlat
stos
mov
add
add
out
stc
push
or
add
jno
clc
and
int
mov
pop
sbb
adc
lock
add
in
add
sub
cs
cmp
inc
or
add
imul
sbb
add
add
add
adc
push
sbb
rolb
iret
je
movsl
mov
push
add
je,pt
jo,pt
mov
pop
jnp
xchg
add
add
add
cli
mov
int
xor
fists
hlt
add
popa
stc
or
incl
jl
mov
add
pushl
add
add
pushf
fmuls
add
mov
in
sbb
xchg
push
cmp
add
aam
xlat
mov
mov
add
push
mov
pop
loop
mov
mov
add
mov
dec
popa
rolb
or
mov
mov
and
pop
mov
cmpsl
push
add
add
pop
fdivp
add
add
add
or
add
jns
sbb
and
mov
and
mov
filds
dec
das
jl
add
jmp
pushf
add
push
mov
lock
std
in
sbb
rcr
or
inc
movsb
add
jnp
sbb
add
ret
mov
add
js
add
add
add
add
or
xlat
movsb
add
add
dec
fsubrs
dec
int
loope
xchg
add
dec
out
add
dec
mov
adc
lods
icebp
jb
stos
xchg
add
mov
dec
scas
fucomp
sub
add
mov
xchg
add
ret
aaa
xor
test
add
add
sbbl
add
or
cmp
mov
mov
add
add
iret
mov
inc
add
clc
jmp
jno
outsb
fildll
setb
add
push
add
and
mov
push
sub
add
mov
divl
mov
add
add
add
mov
push
xor
ret
add
mov
mov
inc
dec
pop
inc
add
add
mov
jg
jo
mov
add
out
mov
or
add
test
add
and
je
mov
dec
jne
push
add
jge
cmp
add
xor
int
cmp
add
sub
add
mov
out
sub
sbb
add
add
or
add
add
jno
sub
mov
mov
add
add
add
add
add
mov
add
push
add
or
mov
aam
addb
jmp
fcoms
inc
sub
lret
add
and
mov
sbb
pop
lret
das
inc
ret
pop
sti
lods
xor
push
lahf
int
mov
leave
jne
jecxz
in
cmp
fadd
add
add
test
out
xchg
add
ljmp
xor
testb
mov
ret
lcall
mov
dec
jecxz
mov
jno
push
inc
je
sti
sub
aas
xchg
add
inc
dec
out
shrl
dec
xlat
pop
jns
aaa
frstor
xor
add
add
push
lret
add
scas
fldcw
xchg
add
mov
sbb
ret
xchg
dec
mov
push
aaa
scas
dec
lahf
std
in
cmp
inc
add
out
jnp
pop
aaa
xor
mov
mov
imul
add
fistpl
add
cmp
sub
pop
push
mov
add
into
cs
add
jne
add
add
add
add
add
out
imul
stc
testb
xorl
mov
in
clc
cmc
jno
add
jne
fisubs
push
aam
rcll
add
adc
movb
sub
add
add
popf
lods
lock
add
push
add
sbbl
fstps
cwtl
xchg
add
mov
add
add
xchg
xor
add
pusha
add
fildl
sub
ret
data16
add
test
add
sbb
fsubs
fadds
test
stos
and
mov
popf
pop
shl
push
add
lahf
add
mov
add
mov
fisttpl
adc
dec
rolb
push
std
mov
push
add
and
jle
rolb
cld
jl
jle
mov
add
mov
and
scas
ja
lods
adc
aam
stc
cmc
mov
in
fisttpll
fistpl
xlat
icebp
cwtl
addb
add
add
mov
mov
add
xchg
test
add
add
lock
and
add
add
sbb
mov
xchg
push
add
add
mov
add
rolb
loope
add
loope
push
add
pushf
sti
mov
add
pop
xor
pop
jnp
xchg
pop
jecxz
test
add
sbb
add
rorl
imul
add
add
rcl
add
mov
inc
add
xchg
stos
inc
add
adc
xchg
ljmp
stos
sub
xor
jle
add
xchg
add
xlat
daa
sub
push
sub
lods
pop
imul
mov
and
mov
les
cld
pop
add
add
add
int
mov
add
testb
aam
popa
push
add
cli
ds
add
jmp
and
mov
adc
mov
add
push
fisttpl
test
inc
add
loope
loopne
adc
or
add
ret
xchg
add
or
add
xchg
popf
and
mov
sub
add
pop
idivl
dec
jnp
lret
mov
mov
mov
shll
sbb
add
test
movsl
pop
and
and
pop
movsb
add
cmpsl
jle
add
add
add
mov
ja
adc
push
jns
and
leave
stc
jae
jnp
jns
add
add
mov
iret
data16
xor
stos
mov
test
add
jp
sub
add
add
add
add
add
testb
mov
add
xchg
cltd
imul
jno
xchg
clc
je
push
popa
std
test
add
add
and
sub
add
add
mov
mov
stos
mov
outsl
adc
cmp
dec
or
add
std
and
mov
add
add
jmp
xor
aam
cs
iret
dec
mov
mov
add
repnz
mov
add
add
lods
sbb
add
push
shrl
add
outsl
push
and
mov
sbb
xor
mov
lods
inc
add
add
insb
into
or
add
push
lea
add
pusha
add
pop
jmp
fcmove
call
dec
xchg
mov
daa
mov
add
and
mov
pop
bound
mov
add
add
add
add
fs
mov
add
inc
add
add
int3
popf
nop
add
popa
orl
ja
ficoms
cmp
icebp
dec
mov
mov
inc
xchg
add
imul
mov
stos
movb
add
sub
lret
int
pop
pop
popa
sub
mov
add
add
add
mov
add
mov
inc
add
mov
mov
add
in
and
mov
add
pop
push
cmpsb
add
pop
mov
mov
pop
insl
sub
pop
mov
and
or
sbb
dec
jbe
and
nop
add
in
lds
mov
pop
ja
movb
push
pop
or
or
daa
xor
mov
fisttpl
nop
add
sub
push
sub
pop
and
fsubrs
data16
pusha
add
add
mov
mov
push
repnz
add
add
je
cmp
xchg
add
stos
mov
adc
add
inc
add
out
and
mov
mov
movsb
add
faddp
add
lods
xchg
xor
add
jecxz
jecxz
mov
pop
jo
push
dec
je
dec
inc
jge
mov
dec
clc
xor
cltd
stos
test
addb
pop
rolb
cld
inc
or
xor
add
add
push
dec
in
lds
mov
add
mov
jecxz
push
mov
dec
jo
adc
cmc
bound
mov
pop
mov
add
jmp
fidivrs
pop
aam
gs
xor
inc
add
add
mov
push
sub
pop
add
pushf
aam
rcr
jp
add
movb
shl
add
lcall
repnz
add
add
pop
mov
cmc
mov
add
and
push
or
out
lret
xchg
add
inc
ret
add
insb
xor
out
inc
add
mov
mov
dec
mov
sbb
je
pop
cmpsb
add
popf
xchg
clc
scas
ja
add
out
xchg
xchg
cmp
add
dec
mov
add
sbb
rolb
add
adc
jp
clc
push
add
add
add
xor
mov
adc
vfrczps
icebp
pusha
add
add
mov
jo
push
and
in
scas
lcall
add
add
add
rorl
add
lcall
add
sbbl
pop
and
mov
xchg
ret
inc
iret
std
imul
lret
cmp
test
add
add
pusha
add
fldt
scas
pop
inc
arpl
jbe
add
ret
imul
add
sub
mov
or
xchg
loopne
mov
dec
inc
add
adc
out
pusha
add
fimuls
out
jnp
sub
push
cltd
popf
scas
inc
mov
mov
add
cmp
rolb
adc
add
jg
add
jno
cmpsb
add
add
xchg
add
or
add
lea
add
push
add
xchg
add
sbb
add
jns
add
mov
out
inc
add
loopne
adc
cwtl
pop
push
add
xor
add
and
mov
add
ret
mov
jmp
lods
xchg
insb
ljmp
add
or
insb
cwtl
mov
pop
push
add
adc
movsl
pop
imul
add
imul
bound
mov
pop
lret
add
push
loope
dec
or
fcomip
add
repz
pop
xchg
jbe
std
xchg
add
pop
and
mov
push
cmp
std
ret
sub
add
sti
push
and
mov
rolb
loopne
nop
add
sbb
inc
insl
rcll
add
mov
call
dec
iret
jne
iret
outsl
xor
aad
dec
sahf
xor
jecxz
cmc
mov
lds
add
mov
sti
loop
into
or
adc
bound
mov
mov
add
das
or
add
sub
add
add
fistl
mov
add
ret
call
add
add
mov
sbb
sahf
stc
flds
add
lods
inc
add
imul
rcll
addb
push
add
push
mov
jecxz
incb
mov
mov
iret
add
adc
pusha
add
lret
inc
add
inc
add
add
addr16
xor
into
stos
pushf
dec
test
add
add
add
inc
add
cmp
dec
arpl
lock
bound
mov
out
fimull
popa
dec
sub
movsl
and
add
xor
xchg
add
lret
fiadds
add
push
add
addb
xchg
or
cmp
daa
lods
adc
cmp
pop
adc
add
shl
dec
cld
add
popa
add
sbb
das
imul
add
add
repz
sub
push
sub
scas
cs
add
mov
push
add
jbe
test
jge
rolb
ds
jo
and
dec
xchg
js
xor
shll
add
pop
xchg
adc
jg
sub
add
lods
add
outsb
sbb
add
dec
push
add
and
ret
fadd
add
add
add
lods
out
lcall
mov
cmp
jns
cli
ja
and
add
inc
add
push
test
dec
cld
inc
out
or
ret
rolb
and
pop
pop
rorl
cli
cmpsl
les
pop
xchg
movl
mov
mov
sbb
jl
fnstsw
data16
add
mov
add
add
int
loop
xchg
cmp
add
mov
popl
repnz
pop
inc
sbb
add
popf
imul
dec
push
add
addb
je
dec
mov
cld
enter
inc
add
add
sahf
fsubp
add
enter
mov
or
scas
push
sub
add
add
in
mov
or
sarl
mov
outsl
pusha
add
lcall
rolb
fldt
in
xchg
add
add
cmp
cmp
xor
pop
mov
popf
mov
sbb
add
ficoml
push
add
ljmp
and
xchg
and
cltd
sub
add
mov
adc
les
stc
addb
aas
sub
add
push
add
push
sahf
mov
mov
cmp
dec
pop
test
add
mov
xchg
mov
add
sbb
addr16
pop
lds
cmp
add
add
add
lcall
addb
addb
dec
movb
add
add
jae
jl
into
sbb
loope
inc
add
loopne
mov
add
add
mov
fwait
xor
mov
jmp
mov
jmp
mov
cmp
mov
inc
add
mov
inc
add
xor
int3
out
inc
mov
add
mov
inc
int3
adc
add
add
arpl
add
xchg
jg
data16
add
add
add
add
xor
mov
mov
lock
or
add
add
and
mov
out
add
dec
jmp
add
das
cltd
insl
xor
add
pop
les
add
and
push
add
add
or
push
add
sub
out
add
add
cmpsb
add
mov
divl
adc
jne
add
into
aam
add
ljmp
add
ds
add
mov
add
add
inc
add
jmp
add
xchg
add
jnp
add
mov
cmpsl
adc
inc
add
sbb
add
add
add
icebp
or
inc
scas
movsb
add
scas
ds
jo
jg
add
add
push
outsb
aaa
adc
popl
pop
and
test
pop
das
adc
push
jno
insl
rolb
add
add
dec
dec
inc
add
mov
or
das
cmp
add
add
ret
int
add
adc
or
add
adc
xchg
idivl
jge
add
loop
das
test
jecxz
mov
push
insl
int
add
adc
mov
mov
add
add
sbb
call
add
jnp
jbe
add
aam
sub
fsubl
mov
repz
lods
mov
fldlg2
aad
lret
in
outsb
sub
add
enter
add
add
add
adc
mov
std
test
add
add
testb
add
outsb
or
add
rolb
pushf
inc
imul
or
lods
push
add
arpl
add
les
sub
add
int3
ror
add
xchg
push
add
mov
or
mov
add
add
jg
in
lret
mov
dec
movsl
fistpl
repnz
mov
add
imul
jge
data16
xor
add
into
fldt
loope
bound
mov
popa
je
xchg
and
xchg
add
mov
insb
outsb
jbe
push
add
add
pop
push
cld
mov
pop
add
push
add
dec
aam
js
or
mov
add
test
jne
cltd
or
movsb
add
sub
add
add
inc
add
rolb
jnp
add
add
lock
sub
mov
stos
icebp
testb
dec
je
and
add
add
jo
test
push
sbb
loop
js
pop
add
mov
add
xchg
dec
xor
add
cmpsb
add
add
sub
daa
jne
adc
add
add
mov
dec
icebp
inc
add
inc
loope
jmp
jge
add
dec
add
mov
add
add
loope
sub
sub
jle
push
add
scas
popa
pusha
add
and
mov
mov
jbe
arpl
add
pop
adc
push
add
insb
dec
movsb
add
mov
and
mov
insl
jo
scas
mov
mov
gs
test
ret
inc
cmc
cmpsl
data16
add
add
daa
jo
into
rolb
repz
movsb
add
fcoms
mov
add
add
and
mov
pslld
mov
lcall
fisubrl
add
sub
orl
xor
outsl
mov
scas
mov
data16
test
pushf
sub
dec
sub
cmc
xor
in
pop
add
testl
cmc
xchg
insl
sub
add
lea
add
scas
loope
in
add
addb
imul
add
je
scas
dec
es
insb
mov
mov
mov
sbb
add
inc
mov
dec
popa
lods
sub
nop
add
icebp
sti
sarl
add
stos
pop
mov
sarl
push
sbb
add
gs
add
enter
add
pop
pushf
mov
jl
push
arpl
add
push
add
adc
add
add
push
mov
add
add
add
add
add
add
add
sub
adc
mov
sbb
imul
mov
pusha
add
mov
sbb
add
xchg
insl
xchg
cmp
fsubl
add
add
out
mov
cmp
add
pushf
sub
add
add
add
cld
cld
cmp
add
insb
mov
movsl
addb
sub
or
lret
sti
jecxz
imul
dec
subl
iret
inc
add
add
add
xor
vmovq
and
cwtl
cmpsl
rcrl
add
je
jmp
sti
jbe
lods
pop
pusha
add
xchg
push
add
faddl
lock
add
pop
xchg
add
push
dec
mov
lea
add
push
aam
aaa
addr16
sbb
add
add
aas
icebp
mov
add
mov
xchg
movsl
aad
add
js
xchg
inc
enter
add
mov
in
dec
cli
std
mov
jne
ret
add
xor
mov
movsb
add
testb
fwait
aam
clc
aaa
loopne
dec
mov
add
int3
mov
jge
pop
pop
add
mov
adc
push
add
adc
add
mov
add
inc
or
add
lds
add
sub
cmp
add
scas
xor
lcall
pop
cmpsl
pop
jo
cmp
ret
jp
add
es
rolb
and
add
mov
sbb
add
add
aaa
inc
pushf
aas
add
mov
add
xor
add
jnp
mov
push
and
add
add
push
add
outsb
xor
and
int
stc
pop
rorl
ds
aam
jae
jp
mov
adc
out
sbb
fildl
add
add
and
lret
lods
adc
scas
mov
xor
sub
jb
cld
mov
out
add
add
xchg
push
add
add
fisubrl
out
scas
fwait
push
leave
and
ds
lcall
adc
loopne
movsl
cmp
xor
mov
xchg
rorl
inc
add
xchg
or
add
mov
add
add
or
dec
cmpsb
add
add
add
or
imul
add
and
test
iret
in
je
push
fwait
sub
rolb
sub
add
add
stc
lret
sarl
je,pt
jns
dec
or
loope
add
sbb
jo
scas
jmp
add
mov
insb
adc
lods
rolb
mov
addb
add
and
mov
fwait
or
adc
in
push
jb
aad
add
push
add
adc
imul
pop
stc
xorl
adc
mov
mov
mov
add
and
aas
ret
xor
mov
mov
outsb
pop
add
adc
movsb
add
or
add
pop
fcomip
add
mov
pushf
mov
sub
hlt
add
add
xor
pusha
add
insl
popf
or
add
dec
cmp
add
rorl
xchg
xchg
and
mov
std
jecxz
add
jl
cwtl
dec
adc
stos
adc
inc
add
insl
xlat
dec
sub
aas
cmc
les
faddl
dec
rcll
or
roll
add
push
pop
inc
add
ret
in
add
add
pop
out
xor
add
cmp
mov
incb
sti
ret
add
xchg
pushf
in
faddl
add
adc
mull
mov
and
inc
add
sbb
xchg
add
stc
xchg
add
mov
inc
add
mov
add
pslld
sub
cld
stos
cmp
add
ljmp
add
xor
dec
sbb
add
sbbl
cltd
or
add
mov
sub
ljmp
fldenv
je
add
inc
clc
mov
aam
aam
jg
xchg
cmc
mov
mov
and
add
rolb
inc
add
in
add
add
and
mov
add
xchg
add
xor
dec
into
std
rcl
add
mov
jp
xchg
cvtps2pi
add
add
add
sahf
cmp
mov
dec
push
dec
xor
adc
in
and
fs
mov
iret
dec
mov
add
test
dec
dec
repnz
or
jb
testl
sbb
add
and
add
adc
add
add
add
and
into
xor
insl
loope
mov
add
jno
add
push
add
dec
sub
lods
jg
push
fwait
test
mov
ja
jge
cmp
add
push
add
cmc
cli
movsb
add
fisubl
inc
int3
testb
add
adc
in
cmp
push
imul
mov
push
add
add
add
add
pop
fwait
add
xchg
mov
push
out
gs
add
fcoml
pop
mov
push
add
add
mov
daa
ljmp
and
add
mov
imul
add
adc
push
test
add
mov
sub
add
mov
add
add
add
addb
pop
repnz
mov
xchg
dec
and
add
add
add
fcomi
mov
test
lret
int3
lahf
mov
add
push
add
adc
mov
out
mov
add
add
movsl
jo
fdivr
xchg
add
xor
mov
cld
jbe
lret
outsl
cli
jmp
std
aas
les
pop
lock
push
add
sub
add
jbe
fisubl
stos
pop
outsl
aas
mov
cs
xchg
pop
mov
sub
mov
rolb
adc
pop
popf
lods
sub
pop
and
jmp
push
add
add
add
rolb
add
js
sub
add
fimuls
int3
int3
setg
add
scas
or
gs
add
push
and
mov
push
pop
mov
aas
xchg
add
mov
aas
clc
ret
fistl
dec
cmp
mov
add
mov
js
add
add
adc
add
cmp
mov
add
sbb
std
mov
add
sub
dec
arpl
add
cli
mov
das
mov
cmp
shll
insl
xor
add
jno
add
mov
js
ljmp
and
sbb
push
inc
add
adc
sbb
cltd
mov
sbb
add
addb
mov
add
adc
dec
pop
sbbl
iret
rolb
mov
lcall
jae
les
sti
pop
sahf
lods
push
add
dec
test
add
cmpsb
add
pop
pop
sbb
and
mov
add
or
jl
sti
jo
mov
dec
aam
sti
ds
int
das
push
mov
addb
in
push
add
cmp
aam
push
popf
push
mov
xor
lret
aam
dec
scas
call
out
jae
add
std
and
add
push
add
loopne
js
add
mov
jmp
in
cld
scas
sbb
loope
add
lods
push
add
adc
mov
mov
xor
cmp
or
test
scas
ljmp
pop
jecxz,pn
add
add
les
cmp
outsb
cltd
jge
add
add
add
mov
ds
or
subl
add
mov
mulps
inc
add
dec
rolb
stos
inc
test
jno,pn
sub
addb
push
loop
cmp
add
add
jmp
mov
cli
add
add
ret
inc
xchg
add
in
jecxz
add
add
testb
add
fsetpm(287
add
rolb
xchg
sub
out
lcall
icebp
fs
add
add
push
add
cmp
xor
insb
icebp
mov
add
loop
add
mov
add
mov
add
sub
mov
in
stc
add
add
add
inc
add
jle
xlat
dec
ds
mov
jns
les
or
mov
push
add
cli
lcall
ds
add
adc
test
int
inc
insl
sub
stc
lods
addb
dec
rolb
outsl
mov
add
mov
imul
mull
sub
add
rolb
out
push
add
add
scas
in
xchg
enter
int3
sti
out
mov
sub
jge
sbb
cmp
mov
add
add
aad
addr16
add
add
loopne
adc
shr
dec
add
push
add
cmpsb
add
add
xor
leave
enter
jo
fdivrp
dec
xchg
xchg
pop
shl
pop
dec
cmp
arpl
mov
mov
or
add
add
add
movb
mov
mov
jb
clc
cltd
add
mov
lcall
add
rcll
xor
add
mov
in
cwtl
sbb
mov
enter
add
mov
pop
popa
jo
cmp
mov
add
lahf
push
add
insl
push
cwtl
stc
push
add
add
add
std
jbe
outsl
lock
inc
add
pusha
add
adc
ret
mov
push
add
hlt
add
in
push
add
popa
mov
add
out
imul
and
push
cmp
add
sub
add
inc
outsb
and
mov
test
mov
push
sbb
add
jns
add
test
cmpl
mov
add
mov
sub
outsb
and
lret
mov
add
add
mov
je
jp
and
mov
cld
or
push
dec
ljmp
add
adc
inc
add
add
push
jo
lret
scas
call
xchg
add
add
mov
add
mov
pop
fldenv
jno
fsubrs
ljmp
ds
sub
adc
add
add
mov
cmpsb
add
add
test
or
add
mov
rolb
inc
pop
jns
add
or
int3
stc
fwait
mov
pop
sbb
dec
mov
mov
cmp
dec
adc
mov
mov
jecxz
into
data16
add
enter
xor
add
out
add
add
scas
cmc
pop
mov
add
jg
cwtl
inc
cli
ss
cli
adc
movsb
add
cld
testb
push
add
das
add
rolb
push
adc
in
lods
mov
icebp
jbe
flds
add
fcompl
hlt
add
add
jle
add
add
pop
mov
add
stos
sub
push
mov
inc
add
add
jl
in
testb
mov
jle
sbb
sbb
push
mov
push
jne
loopne
loop
fwait
jo
pop
lea
out
les
pop
pop
fcom
and
mov
mov
and
cmp
in
jl
sub
ror
nop
add
test
jae
add
push
rolb
lods
pop
jg
cmpsb
add
or
add
ret
adc
and
cmp
mov
int
movsb
add
arpl
add
ljmp
cmp
add
mov
les
cmp
into
sbb
and
mov
mov
xchg
add
lret
sbb
add
add
add
out
mov
add
add
cmp
xchg
add
add
fidivl
data16
add
data16
jno
pop
icebp
shll
cli
jmp
jo
inc
add
je
sub
add
dec
pop
ds
dec
pop
mov
les
sub
sub
or
inc
add
add
iret
pop
popf
aaa
inc
jns
inc
add
shll
add
fisttpl
jae
addb
test
sbb
pop
and
inc
add
mov
add
aad
push
negl
ds
add
push
pop
fldz
push
xor
pop
hlt
add
leave
insl
push
xlat
mov
fidivl
pusha
add
rolb
out
add
xchg
add
mov
add
cmp
mov
loopne
mov
xor
lods
or
repz
add
jmp
add
arpl
add
sbb
out
xchg
sbb
cmp
push
mov
cmp
add
rcrl
rcl
add
mov
aaa
cld
sbb
mov
add
mov
xor
mov
pop
or
out
cltd
or
ret
pop
xchg
push
push
add
lods
dec
adc
movsl
lods
jnp
fstl
add
popf
sub
testb
or
or
add
in
and
mov
mov
add
mov
add
in
iret
mov
sbb
sub
cmpsb
add
add
mov
mov
push
ret
lock
jge
out
dec
test
mov
lahf
jae
jae
movsl
loopne
rolb
mov
mov
jno
cmpsl
jb
fisttpl
cmpsb
add
addb
adc
lods
mov
sub
xchg
fwait
cmc
cmpsl
cmp
add
sub
cmpsb
add
adc
xchg
cmc
xchg
jbe
daa
addr16
mov
add
add
mov
movsl
cltd
lret
icebp
and
xchg
sahf
sbb
mov
add
push
xor
inc
add
add
scas
add
mov
fistl
add
add
adc
push
add
hlt
add
in
push
add
add
add
xor
pop
cs
gs
xchg
adc
jo
ds
test
inc
add
jbe
lret
mov
xchg
pop
aas
adc
adcl
add
add
movsb
add
or
clc
rolb
sbb
sub
bound
mov
pop
cltd
xchg
stos
pop
xchg
call
add
add
mov
and
mov
fidivs
add
add
add
sub
hlt
add
mov
add
push
mov
incb
sbb
sbb
add
mov
scas
dec
int
xchg
sti
jge
add
push
jo
push
add
lock
push
adc
pop
xchg
add
dec
dec
push
mov
inc
add
add
cmpsb
add
jp
add
add
add
add
add
and
scas
mov
jl
add
sbb
dec
inc
add
sbb
aad
in
stc
enter
push
add
add
push
add
mov
mov
or
mov
xor
push
cmp
push
lea
sbb
daa
fidivl
mov
xchg
add
lret
flds
add
in
lret
cmp
add
mov
or
xor
add
imul
add
aaa
add
and
nop
add
imul
aam
dec
arpl
outsl
pop
mov
add
add
imul
sub
mov
dec
jle
mov
imul
jbe
divl
xchg
xor
imul
fsubs
add
push
cli
mov
add
outsb
out
dec
ds
and
mov
push
add
inc
add
mov
movsl
dec
rcr
mov
dec
pop
gs
add
addb
cld
cmp
add
add
add
cmp
addr16
pop
testb
xchg
add
add
jbe
add
fidivrl
mov
bound
mov
pusha
add
push
dec
sub
out
mov
popa
gs
add
dec
pop
mov
mov
stos
adc
mov
add
add
or
idivl
lea
jecxz
sbb
mov
push
clc
addb
add
add
add
and
mov
sub
add
sub
add
cmp
mov
in
and
cmpsb
add
subl
arpl
pop
pop
daa
pop
clc
sub
mov
push
rolb
cmp
inc
add
shufps
push
add
add
mov
xchg
hlt
add
sarl
rolb
jo
popf
or
int3
jecxz
outsl
pop
bound
mov
add
xchg
add
mov
call
adc
gs
add
sti
repnz
filds
push
enter
rcl
mov
add
mov
pop
addb
pop
mov
int
fdecstp
add
outsl
cmp
or
add
add
pop
add
jno
mov
cmc
int3
jns
add
add
std
cltd
into
dec
aam
add
fstl
into
nop
movb
add
icebp
or
cmc
inc
repnz
stos
loopne
add
mov
add
pop
xor
fisttpl
pop
gs
add
add
add
leave
pop
mov
js
add
or
add
add
mov
in
mov
scas
push
xor
cmp
lcall
sub
scas
or
add
sbb
add
int
pop
in
sub
mov
add
ds
insb
call
bound
mov
in
jecxz
mov
jns
xchg
movsl
xor
lret
or
add
stos
sbb
mov
add
add
test
add
mov
add
les
aam
jle
add
sahf
negl
daa
ret
add
push
jne
popa
pop
mov
testl
add
mov
std
pop
sub
cmp
sbb
movsl
adc
mov
outsl
iret
scas
xor
mov
mov
js
mov
popa
pop
pop
mov
or
iret
test
mul
aaa
fldcw
stos
dec
adc
add
cmp
mov
add
mov
add
mov
cmp
xchg
add
pop
inc
lods
xchg
add
xor
jg
insl
mov
mov
sub
sub
add
adc
stc
into
aad
mov
notl
dec
insb
sbb
in
and
mov
add
imul
data16
clc
cmp
pop
mov
sahf
in
add
test
jge
add
add
les
cmc
pop
js
std
testb
sbb
std
scas
and
add
mov
fnstcw
rorl
addb
xchg
add
movb
jle
pushf
and
mov
mov
cld
mov
sti
fistpl
mov
lea
jns
jge
jmp
sub
loope
add
add
adc
mov
add
test
movsb
add
pusha
add
hlt
add
mov
or
or
add
add
mov
add
fnstcw
add
mov
jno
icebp
out
or
call
js
cmp
add
add
into
test
or
mov
mov
pusha
add
bound
mov
clc
pop
leave
rolb
out
rolb
inc
add
ret
stos
add
add
mov
fisttpl
xor
jns
stos
aaa
jae
rolb
or
out
sub
sub
add
mov
fldt
std
fcmovne
fdivrp
xor
jnp
push
sarl
inc
add
and
mov
add
add
inc
cmpsl
push
stc
cmpsl
mov
testb
add
pop
push
add
add
testb
push
add
and
add
jnp
sub
and
sbb
xlat
and
jl
add
pop
fldt
pop
insl
aaa
addb
pop
push
add
add
xchg
shll
cli
addb
lods
mov
push
inc
arpl
nop
add
add
add
xor
mov
add
xchg
add
jno
pushf
out
pop
stos
pop
xchg
add
mov
add
aas
in
jae
mov
int
jl
insl
jnp
in
stc
pushf
sub
jp
fnstsw
add
inc
add
cmp
add
mov
lret
add
mov
add
add
add
mov
imul
add
xor
add
fsub
sbb
jb
lahf
pop
roll
and
mov
ljmp
sub
add
fwait
sub
idivl
nop
add
mov
in
add
aas
and
sahf
ret
mov
lcall
testb
inc
sub
xchg
add
add
mov
add
mov
out
pcmpeqb
jae
add
push
add
rcrl
imull
mov
mov
mov
add
lcall
add
add
pop
dec
mov
and
mov
mov
sub
add
dec
stos
inc
das
cmp
daa
push
ret
pop
ja
add
mov
mov
test
add
testb
outsl
pop
sub
jge
xor
pop
xor
mov
pop
push
add
xchg
inc
test
mov
push
push
add
push
fiaddl
add
push
and
mov
mov
dec
xchg
and
push
add
mov
cli
pop
test
xor
lahf
movsl
push
rolb
dec
jecxz
add
and
jnp
xor
std
or
add
mov
jne
add
inc
add
cli
mov
mov
add
push
mov
ret
inc
add
popa
loop
mov
xor
add
sub
add
add
add
lcall
add
stos
addr16
mov
xchg
sub
or
adc
cmp
ret
faddl
bound
mov
lret
inc
idivl
add
add
add
mov
mov
adc
out
mov
aas
mov
mov
add
jns
add
movsb
add
addr16
dec
fimull
addb
add
mov
cmpsb
add
sbb
stc
add
insb
xor
xchg
add
xchg
add
mov
int3
mov
cmpsb
add
add
dec
test
pop
cmp
call
sbb
lcall
or
cmpsb
add
add
mov
test
pop
loopne
inc
outsl
fcomp
fxch
pop
ljmp
add
icebp
or
pop
in
les
dec
lea
in
rorl
nop
add
pop
add
mov
sbb
sbb
add
add
mov
add
jmp
subl
ds
dec
add
mov
add
nop
add
loope
adc
addb
sub
lods
jge
aas
inc
add
sbb
les
xchg
mov
add
add
lret
cmp
cmp
add
or
pop
insl
dec
rolb
int
add
add
inc
jno
cmpl
lock
repnz
outsl
cmp
push
rolb
xor
and
fptan
add
out
add
add
push
repnz
dec
pop
xor
add
loopne
rolb
popf
je
pop
movb
xchg
pop
add
rcrl
add
pop
jae
and
mov
fcmovnb
inc
pop
enter
mov
dec
push
cmpsl
and
mov
aam
pop
rcl
xor
or
jb
or
adc
mov
out
jl
repz
sbb
adc
lods
ja
xchg
pop
jge
les
jg
xor
add
add
movsl
xor
outsb
mov
add
icebp
push
push
add
add
fucom
rolb
push
out
pushf
cmp
add
add
adc
addl
add
add
mov
xchg
inc
xlat
fsubr
jae
add
add
push
adc
add
pop
scas
bound
mov
fldenv
jg
loop
or
aam
rolb
pop
and
xchg
add
push
add
or
add
mov
sub
adc
dec
push
add
add
repnz
pop
pop
xor
roll
adc
mov
mov
add
aam
push
ja
lret
jae
add
add
mov
pop
das
mov
jg
add
add
in
movsl
cmp
in
xchg
rolb
sbb
cmp
add
jae
jnp
add
cmp
sbb
mov
out
mov
mov
add
std
mov
repnz
and
mov
jns
mov
mov
insl
icebp
push
cwtl
or
add
add
jecxz
push
add
movsb
add
add
and
add
rolb
cld
xor
add
inc
outsb
les
in
fidivl
add
mov
imul
imul
jmp
xchg
add
adc
xchg
repnz
add
inc
add
lret
lds
add
sahf
mov
sub
xor
dec
jle
add
add
incl
sbb
cmp
aaa
addb
test
and
mov
mov
ja
out
or
cltd
jl
add
add
cwtl
insb
into
repnz
in
rolb
icebp
jg
mov
aas
out
jmp
sub
push
add
add
push
aaa
scas
les
jmp
stos
mov
add
arpl
add
std
cmp
add
jno
push
sub
push
aad
add
jae
adc
dec
das
movl
fwait
push
add
add
scas
data16
mov
lret
xor
testb
ffreep
pop
outsl
mov
add
int3
sti
sti
and
mov
or
inc
inc
loopne
adc
cmp
pop
fbld
add
push
add
add
mov
add
xor
sbb
test
add
insl
mov
data16
or
das
sbb
testb
dec
jg
sub
mov
testb
add
popf
mov
xchg
add
mov
adc
xor
and
into
xchg
add
aas
out
iret
movsl
jmp
aas
dec
pop
and
mov
add
xor
xchg
lret
cmp
add
add
xchg
cld
int
or
add
out
and
mov
movsl
imul
rolb
pushf
cmc
adc
jp
add
add
icebp
ds
rolb
push
add
jo
testb
add
add
dec
dec
or
lcall
push
add
sub
jmp
mov
lea
pop
sbb
add
cmp
add
nop
add
add
fsubrl
xchg
mov
pop
pop
add
out
dec
mov
daa
in
test
mov
add
mov
inc
add
add
call
cwtl
push
add
add
test
pop
pop
mov
add
fdivs
repz
add
in
pop
pusha
add
sub
mov
add
add
push
cmp
les
inc
add
push
add
hlt
add
shll
std
cwtl
cwtl
imul
xchg
out
adc
add
cmp
mov
ds
add
add
pop
pop
jnp
imul
pop
testb
add
add
add
push
xlat
and
sbb
std
clc
push
in
pop
sbbl
fstpt
dec
fistl
add
jle
add
inc
add
scas
push
add
add
sub
xchg
push
add
add
fwait
xchg
add
icebp
fdivrs
add
in
loop
push
lds
ljmp
or
add
sahf
les
cmp
fwait
ret
fwait
adc
add
xor
add
mov
mov
lods
pop
out
enter
lds
add
js
add
mov
add
pop
out
mov
inc
add
jae
add
aam
xchg
and
mov
andl
xchg
in
out
cmp
add
add
add
scas
popa
sbb
add
ret
adc
sbb
les
inc
add
and
add
inc
movsl
inc
mov
jns
add
add
jmp
insb
mov
xchg
add
cwtl
out
cli
sbb
add
add
add
sbb
mov
mov
fs
or
les
cltd
sbb
add
add
dec
dec
adc
and
mov
sub
xchg
add
xchg
adc
add
outsb
in
and
add
bound
mov
add
sub
pop
and
stc
mov
aaa
scas
es
data16
add
movb
ds
in
inc
or
mov
dec
xlat
add
insb
les
pusha
add
lea
inc
lock
xchg
pushf
xchg
add
loop
int
sahf
dec
fisubs
xor
inc
cmp
push
add
mov
mov
mov
xchg
pop
and
aas
and
mov
rolb
push
xchg
and
mov
jg
imul
jns
cwtl
mov
add
add
bound
mov
add
xor
adc
loope
mov
sahf
pop
jecxz
pop
dec
mov
and
mov
or
pusha
add
xor
sbb
push
add
add
add
xor
call
testb
mov
cs
imul
mov
mov
movb
stc
cmp
inc
add
addr16
add
outsl
push
sbb
add
jbe
jecxz
xchg
add
add
ja
add
test
add
xchg
add
xor
scas
inc
add
add
fstp
dec
mov
js
push
jmp
mov
mov
sbb
add
add
loope
add
gs
add
sbb
add
jl
scas
test
fdivl
rcll
add
inc
adc
loope
aaa
dec
in
sti
add
repz
scas
sub
cmp
add
outsb
mov
add
add
adc
push
cwtl
je
pop
push
add
xchg
add
cmc
in
push
add
cmpsb
add
xchg
lock
mov
add
fiaddl
add
lds
cmp
or
push
add
add
add
add
jmp
push
popa
dec
sbb
ret
adc
xor
mov
outsb
cs
ret
sbb
repnz
xor
scas
sti
pop
jle
hlt
add
mov
rolb
popf
ljmp
int
stos
xchg
add
add
pop
rolb
icebp
ffree
add
push
add
test
add
pop
ds
fstl
add
fcmovnu
mov
rcrl
and
xchg
xchg
cmc
test
add
pop
insl
loopne
jecxz
add
add
add
ret
add
bound
mov
add
imul
xchg
add
pop
add
mov
add
lods
clc
and
mov
je
and
add
repnz
sbb
sbb
add
adc
mov
inc
lret
cltd
arpl
addr16
fiaddl
scas
sbb
sbb
data16
jge
pop
pop
repz
mov
mov
dec
push
add
push
es
add
add
dec
leave
xchg
add
xor
add
loop
pusha
add
add
and
mov
push
add
dec
movsl
push
jg
xchg
rolb
add
jecxz
pop
mov
push
add
add
mov
sub
xchg
add
mov
and
add
mov
add
pusha
add
add
add
add
mov
inc
add
add
or
add
inc
cmp
imul
mov
insb
jns
out
loopne
outsb
repz
jae
sbb
add
mov
bound
mov
jmp
add
popa
movsl
mov
int
push
add
push
add
into
sti
fadd
push
add
addb
add
mov
pop
setbe
pop
push
add
mov
loopne,pn
das
imul
jnp
add
add
add
and
push
jmp
mov
xor
ret
add
add
test
sub
or
in
xor
inc
cs
inc
add
stc
xchg
jle
jno
sub
add
dec
mov
loop
push
add
popf
jb
test
add
cmp
sub
mov
jg
add
js
add
mov
mov
addr16
test
add
add
insb
adc
xadd
rolb
cltd
xlat
leave
leave
push
sub
xchg
ret
push
dec
pushf
imul
add
add
stc
push
sub
aaa
mov
clc
push
add
mov
mov
ja
add
and
dec
gs
dec
in
push
add
pop
jle
shll
adc
add
mov
lret
outsb
cmc
pop
imul
or
ret
test
subl
into
mov
imul
push
jnp
rolb
pop
mov
push
addb
mov
mov
add
add
cmpsl
xchg
ljmp
cld
xchg
add
addb
mov
test
cmp
add
add
cmp
dec
adc
jb
jecxz
decl
addb
pop
xchg
add
shll
add
adc
icebp
ljmp
pop
scas
jmp
push
add
cmp
xor
ficomps
jle
add
mov
add
add
mov
add
sbb
jg
add
add
cmp
stc
rolb
leave
fidivs
addb
std
sbb
scas
movsl
lret
push
add
push
add
and
push
add
push
add
pop
push
add
out
shl
add
or
add
mov
arpl
mov
add
lods
call
add
lock
add
cmp
loope
ss
out
pusha
add
icebp
sbb
daa
fbstp
add
roll
ljmp
pop
xchg
sub
arpl
add
xchg
add
inc
adc
mov
xlat
movsb
add
mov
add
add
imul
add
fcmovu
data16
inc
sti
mov
cli
nop
add
into
dec
sti
cmp
sbb
fstp
sbb
stos
xlat
mov
mov
lods
add
ds
add
jo
jp
add
mov
pop
clc
sub
add
mov
fsubrp
stc
lret
sub
adc
add
hlt
add
add
aaa
push
sub
lea
xchg
add
call
cmp
mov
cld
stos
sbb
stos
jae
add
aas
push
out
enter
push
add
add
testb
xchg
push
ret
fcmovnb
add
xor
sahf
cmp
add
add
pop
adc
xchg
dec
mov
add
loopne
sbb
dec
cmpsl
das
test
leave
jne
mov
pop
gs
movsb
add
jp
mov
mov
add
add
mov
dec
pop
inc
add
cli
mov
into
lock
mov
rorl
add
add
add
xchg
call
add
rcl
sbb
add
nop
add
push
add
hlt
add
repz
lods
push
lahf
jl
aad
adc
and
mov
add
in
adc
hlt
add
add
add
add
add
add
aam
mov
aaa
sbb
into
sub
mov
out
add
add
add
lock
in
sub
add
add
jge
add
rolb
pusha
add
add
movsl
dec
je
inc
add
ret
mov
add
daa
sub
fstpt
add
add
add
sbb
add
in
push
add
scas
leave
push
inc
add
adc
push
sbb
test
add
lahf
inc
jb
loopne,pn
pusha
add
out
in
xchg
adc
mov
add
std
adc
or
mov
sub
movsl
aaa
inc
add
dec
mov
or
mov
add
lahf
mov
testb
mov
xchg
add
add
mov
xor
jp
and
adc
dec
add
mov
cmc
pop
pop
xchg
push
and
mov
sbb
mov
jne
loop
push
jmp
add
xor
dec
xchg
pop
or
leave
out
mov
nop
add
push
or
test
add
add
sbb
add
push
mov
push
add
orl
inc
add
add
bound
mov
pop
test
pop
loopne
call
add
aad
or
das
mov
ficoml
mov
call
fs
or
mov
int3
inc
pop
mov
sarl
aas
lret
gs
sub
dec
incb
aas
sbb
test
inc
dec
fdivl
sub
add
mov
movb
push
add
add
jo
inc
add
jno
add
stos
icebp
adc
arpl
and
imul
mov
mov
gs
add
lods
pop
pop
dec
add
ljmp
dec
out
mov
push
add
add
js
mov
mov
or
out
mov
mov
jno
ds
inc
add
add
add
xor
lahf
xchg
sti
pop
push
sbbl
dec
sbb
call
push
or
add
stc
call
pop
aaa
and
mov
add
xchg
add
scas
ja
add
add
adc
push
add
in
loop
add
out
insl
pop
lods
mov
add
pop
or
inc
add
pop
sbb
imul
movsb
add
add
jno
pushf
inc
sbb
mov
adc
in
call
subl
fcmovbe
add
pop
pop
lret
sarl
and
lods
pop
or
add
xchg
mov
xor
test
enter
icebp
pop
mov
aam
mov
cmpsb
add
adc
adc
repnz
add
sbb
push
mov
call
sbb
mov
push
or
add
mov
in
lcall
or
out
mov
jne
push
push
int
push
push
and
mov
cwtl
mov
pop
int3
lret
jl
inc
adc
push
mov
mov
add
push
add
js
jge
and
mov
add
cmp
mov
popf
add
mov
stos
hlt
add
iret
adc
jmp
stc
imul
popa
int
movb
aad
inc
enter
xor
add
mov
mov
pop
push
ss
jl
scas
pushf
push
dec
sahf
pop
rorl
sub
sub
sbb
add
rorl
daa
push
rolb
jp
sbb
cli
arpl
add
movsl
pop
movsb
add
out
daa
int
and
mov
inc
add
add
adc
cltd
in
pusha
add
add
add
rcll
inc
add
adc
add
cltd
mov
xlat
mov
jo
or
dec
sbb
add
mov
test
outsl
xchg
add
mov
xlat
sub
lcall
add
push
fistpll
pushf
push
add
xor
scas
pop
push
add
inc
insb
mov
add
shll
loop
jae
adc
popf
and
mov
cmp
hlt
add
pop
hlt
add
push
dec
or
ret
add
popa
in
data16
push
add
and
mov
add
add
jne
pop
bound
mov
mov
and
mov
lods
jmp
add
pop
xor
add
lods
inc
adc
mov
rep
xchg
and
adc
mov
cli
mov
popf
adc
cmp
add
mov
dec
lock
xchg
icebp
mov
add
xor
filds
mov
pop
add
mov
inc
add
outsl
lock
add
add
xlat
xchg
sub
add
mov
add
sub
sub
lret
or
mov
xchg
std
xor
dec
div
add
insl
shrl
sbb
jae
mov
add
lret
mov
sbb
testb
aad
push
add
icebp
mov
divps
add
mov
add
adc
lods
movsl
test
out
dec
lock
dec
xor
arpl
out
cmp
and
add
add
add
pop
cmp
testb
ds
add
add
adc
negl
insl
push
push
enter
add
dec
add
mov
imul
pop
data16
mov
jnp
add
decl
add
jns
enter
je
enter
int3
rolb
mov
jle
add
jnp
push
add
push
cmpsb
add
mov
pop
clc
xor
and
mov
push
add
or
xor
push
aam
loopne
fdivrl
lds
jbe
jnp
inc
xchg
movb
cwtl
rsqrtps
inc
or
add
push
add
add
add
lds
addb
hlt
add
and
add
insb
jbe
out
xchg
insb
testb
add
ret
test
adc
mov
mov
jle
mov
stos
cwtl
xor
cld
out
add
data16
inc
xor
pushf
fidivrl
push
add
add
clc
mov
jl
loop
repnz
loop
inc
add
add
add
add
add
or
scas
push
add
iret
add
add
lds
out
rolb
inc
add
jns
imul
push
sub
test
lods
nop
add
cmp
das
mov
mov
push
add
and
mov
add
out
popf
lods
sbb
jns
outsb
les
mov
add
imul
sbb
repnz
loopne
adc
mov
pop
dec
jns
mov
add
add
add
add
inc
add
ss
adc
add
mov
dec
imul
pop
cmp
add
movsb
add
add
insl
mov
rolb
adc
add
nop
add
add
mov
add
add
add
add
jge
iret
or
rorl
push
shll
rolb
rolb
add
cmp
add
imul
add
cmp
pop
or
addr16
fimull
jle
add
and
leave
inc
add
clc
je
movsb
add
pop
filds
and
add
imul
lods
rcl
pop
je
or
iret
ljmp
add
add
test
int3
cmpsl
add
mov
add
fidivs
xor
inc
and
cmc
int
add
push
insl
lock
add
in
sub
into
lahf
push
add
adc
add
test
add
jmp
add
xlat
adc
add
js
adc
sbb
add
repnz
and
mov
cmp
dec
cmp
test
fcomip
pushf
out
icebp
xchg
add
add
add
mov
mov
inc
add
xor
add
add
add
pop
aaa
movb
mov
add
mov
xchg
add
add
add
sub
add
add
pop
mov
test
cmp
add
add
enter
add
jmp
fistpll
or
fmul
cmpsb
add
cwtl
jae
sub
add
cmp
xor
sbb
addl
jp
add
mov
sub
jecxz
sbb
lret
push
clc
scas
jp
push
les
inc
add
addb
ficomps
add
iret
push
add
add
cli
and
jns
add
mov
mov
add
xor
lcall
adc
sub
aam
fwait
jb
pop
test
cld
and
mov
pop
int3
inc
add
adc
or
rolb
add
xchg
cmp
cmpsb
add
add
addr16
add
add
add
xchg
adc
add
add
xchg
jge
add
test
dec
cmp
je
push
cmp
add
shl
pop
mov
dec
stos
add
sub
outsb
adc
lods
fwait
ljmp
mov
mov
and
mov
imul
add
call
add
add
add
add
xchg
add
dec
repnz
daa
cmp
fcoml
jno
dec
mov
sub
mov
cmpsb
add
das
add
mov
add
mov
add
int3
inc
add
add
mov
mov
add
addr16
add
das
xor
or
adc
rep
lea
add
rcll
mov
les
fstps
xchg
add
mov
add
lods
jo
xor
les
xchg
add
sbb
add
add
push
data16
pop
shl
add
add
inc
icebp
jnp
in
jecxz
pop
aad
add
cmpsb
add
add
mov
jno
ret
iret
cmpsb
add
jbe
imul
add
add
adc
add
mov
push
inc
add
add
mov
dec
jle
stos
sbb
out
sub
aaa
and
mov
add
mov
subl
cltd
or
inc
outsb
shrl
add
xchg
add
outsl
xor
push
add
rcll
sub
test
xchg
xchg
dec
repz
add
xchg
icebp
ljmp
add
add
mov
push
add
mov
add
sbb
add
cmpsl
push
add
add
inc
add
fldenv
ds
shll
push
adc
add
imul
add
jle
add
icebp
icebp
movsb
add
xor
xor
stos
lret
push
add
lea
add
adc
mov
outsl
rolb
xchg
add
add
pop
sub
pop
mull
or
leave
pop
mov
add
or
add
cmp
std
enter
pop
mov
fstpl
mov
fstps
pusha
add
add
mov
add
xor
popf
sbb
data16
lock
mov
add
add
mov
inc
or
xchg
add
mov
rorl
mov
add
in
sub
push
add
test
mov
pop
mov
jb
repz
cmp
add
add
iret
mov
xchg
add
shl
mov
pushf
adc
nop
add
jmp
add
lret
addb
add
add
mov
mov
ja
sub
fmuls
into
sbb
mov
sub
enter
nop
add
mov
outsb
mov
inc
add
into
inc
nop
add
pop
outsb
sub
clc
std
into
dec
mov
add
add
rolb
pop
push
icebp
cmp
mov
add
adc
das
jle
jnp
test
add
xchg
lods
ftst
add
add
sti
movb
fdivs
ljmp
fbstp
mov
add
cmp
addr16
sbb
add
jmp
add
push
mov
sbb
add
xor
add
add
add
add
and
mov
mov
add
push
cs
pop
cltd
lret
addb
rolb
mov
dec
popl
mov
push
cmp
add
inc
scas
mov
pop
out
push
adc
mov
dec
insb
cmc
mov
fists
add
mov
sbb
mov
add
add
test
test
inc
push
add
jne
push
sub
add
add
in
shrl
inc
add
jle
and
mov
sub
fcmove
push
add
data16
mov
push
add
add
leave
cmp
mov
mov
sub
test
movsl
imul
scas
loopne
repz
repz
fnstsw
add
add
inc
add
add
scas
aaa
stos
jge
mov
insl
and
mov
icebp
pop
adc
xchg
stos
iret
xchg
pop
jp
add
xchg
push
in
in
add
or
cld
pop
pusha
add
sbb
mov
lcall
jb
fistpll
shll
add
jle
repz
out
xor
cltd
data16
mov
or
hlt
add
cmpsl
mov
sbb
pop
mov
and
add
xchg
cmp
mov
add
fndisi(8087
add
test
jno
sbb
mov
add
add
adc
inc
add
dec
xor
and
jecxz
xchg
add
add
add
add
rolb
aam
rolb
sbb
ret
sbb
xchg
dec
xchg
xchg
add
add
mov
push
add
add
add
fwait
lds
mov
outsl
push
add
mov
loop,pn
outsl
out
jl
dec
cltd
out
cmp
and
mov
aam
fwait
push
call
add
int3
enter
jns
jb
jge
add
insb
pop
mov
add
push
add
add
rolb
cli
mov
enter
add
add
add
push
int3
loopne
imul
in
add
or
cmp
and
mov
daa
dec
mov
add
popf
jno
arpl
or
add
jb
fdiv
add
add
add
mov
rolb
mov
pop
in
pop
sub
sbb
jge
add
xchg
add
dec
xchg
add
daa
xchg
inc
pusha
add
add
pop
sub
xor
mov
in
add
jae
lds
repnz
xor
push
add
add
xlat
inc
add
lds
test
add
add
add
adc
sbb
loopne
inc
add
in
sub
add
lock
scas
cli
ret
testb
fisubrl
adc
movsb
add
add
add
add
or
pop
pop
call
hlt
add
jne
insl
mov
add
sub
and
outsb
adc
mov
add
bound
mov
leave
mov
les
pop
inc
sbb
push
add
arpl
je
movsl
cltd
mov
repz
mov
add
adc
add
sahf
pop
push
add
xor
test
ljmp
add
or
xchg
leave
lods
cmp
fmuls
outsb
adc
mov
add
pop
call
pop
pop
movsl
jns
jno
mov
dec
gs
sub
sbb
aas
testb
sub
data16
add
mov
jp
add
add
mov
xchg
imul
sub
stc
jb
outsl
push
pop
insl
sahf
pop
daa
adc
mov
add
inc
add
in
jne
fistpl
jg
pop
cwtl
stos
mov
js
xor
xor
push
add
into
fdivrp
scas
lods
xor
add
ja
dec
lret
mov
add
test
pop
loop
mov
add
aaa
std
pushl
int
add
xor
and
add
dec
mov
mov
mov
pop
mov
push
add
jns
add
or
add
movb
fistpl
add
lahf
pop
or
daa
test
add
mov
rolb
add
add
xor
gs
add
pop
in
mov
and
mov
addr16
adc
add
xchg
lret
add
mov
imul
adc
decb
pop
and
mov
ret
hlt
add
cwtl
data16
add
mov
push
add
mov
jb
test
push
lods
ret
test
mov
popf
ret
addl
stc
in
mov
add
mov
sub
mov
cmp
dec
or
jmp
lcall
ret
pushf
add
push
lret
cmp
jg
jle
add
pop
cs
xor
icebp
icebp
loopne
or
movsb
add
sub
add
sub
test
add
add
cmp
add
je
mov
mov
xchg
add
out
add
add
adc
jge
add
cmp
add
add
mov
push
xchg
aam
or
or
dec
std
dec
stc
rcrl
adc
jae
push
test
push
add
add
test
sub
add
sub
mov
in
test
add
and
fiaddl
mov
pop
sarl
pop
xor
inc
add
imul
jmp
xor
es
pcmpgtw
jmp
sub
nop
add
add
popa
lahf
test
das
dec
mov
ret
cs
fisubs
mov
inc
add
mov
movb
xchg
aas
lock
mov
fincstp
lds
add
bound
mov
arpl
movsl
cmpxchg
scas
sbbl
add
add
add
mov
add
incl
mov
icebp
cltd
mov
add
add
mov
ljmp
or
lcall
push
add
fistps
add
xchg
mov
add
mov
mov
mov
mov
add
mov
ret
lds
ljmp
mov
add
mov
xor
xchg
xor
addb
jmp
pushf
movb
cmp
dec
lahf
testb
or
cld
push
js
into
add
cmp
dec
sahf
scas
or
bound
mov
call
dec
call
adc
xchg
fcmovne
sahf
jmp
add
add
aaa
mov
sahf
pop
add
mov
pop
in
or
add
mov
hlt
add
jl
mov
jecxz
bound
mov
inc
in
fisubl
xchg
mov
mov
aas
jo
aas
sub
add
mov
pop
jbe
pop
addb
mov
add
mov
mov
ret
xchg
push
lcall
lods
pop
aaa
fidivrs
add
add
add
add
cli
xchg
mov
lret
add
add
lods
cli
mov
push
pusha
add
add
lds
sub
mov
sub
testb
add
fcoms
jae
add
fimuls
mov
add
out
jo
outsb
jl
addr16
jle
cltd
xchg
mov
push
add
pop
and
mov
scas
mov
add
or
js
mov
inc
dec
lahf
je
dec
inc
push
lods
cmc
insl
test
add
pop
jb
mov
aad
add
add
add
add
xor
js
gs
add
xchg
lds
rolb
sbb
dec
push
add
or
add
loop
testl
add
sbb
popf
ljmp
scas
mov
push
inc
add
mov
loopne
cmp
fisubrl
mov
fisttpll
int3
out
ss
fwait
test
and
mov
out
in
pusha
add
fsts
repz
je
dec
push
sub
push
add
dec
cmp
imull
push
add
add
fisttpl
enter
test
adc
add
add
or
data16
add
or
sti
xchg
add
mov
xchg
cmp
ss
add
add
jb
pushf
jo
lods
xor
add
mov
jg
int
add
jl
daa
syscall
mull
fistl
add
pusha
add
mov
add
dec
jnp
add
add
lods
xor
daa
sbb
add
mov
sti
bndldx
rolb
pusha
add
mov
test
add
add
add
out
mov
fidivl
xchg
add
sub
add
aas
sbb
cmpsb
add
add
loopne
mov
rolb
aad
mov
int
inc
xchg
pop
add
add
add
add
add
xchg
das
xchg
aam
add
aam
sub
popa
and
pop
jns
add
add
add
incb
push
add
push
adc
sbb
and
cmp
mov
jb
insb
lods
mov
mov
imul
mov
mov
std
add
add
add
adc
mov
popf
push
arpl
bound
mov
add
pop
daa
xchg
hlt
add
add
mov
test
jmp
rolb
add
push
rolb
stc
xchg
cmpsl
movb
jno
add
pop
lret
mov
lds
add
push
add
out
scas
mov
aad
dec
je
sub
add
inc
add
icebp
pop
jg
add
add
fisttps
jge
add
lods
call
ss
add
pop
bound
mov
cmp
add
daa
bound
mov
add
lahf
out
cmpsl
sbb
jno
dec
adc
adc
adc
lds
pop
or
add
mov
int
jae
or
add
js
xor
add
rolb
nop
add
xor
or
testb
mov
pop
pushf
out
insb
daa
ret
sub
out
scas
jmp
add
add
in
loope
jmp
add
add
push
mov
add
out
test
push
add
add
push
add
add
add
add
inc
push
jge
sahf
ja
jbe
insl
pop
and
test
mov
push
add
nop
add
cwtl
dec
mov
add
loopne
push
add
mov
sbb
or
add
xorl
mov
imul
add
sarl
mov
outsl
mov
push
push
clc
imul
cmp
addb
sub
add
add
add
add
xor
pusha
add
add
ret
mov
jns
imul
add
cmc
aaa
movsb
add
push
push
add
jae
jne
int
test
jne
in
inc
add
or
add
mov
test
lret
repnz
out
mov
fldcw
add
repnz
cmc
dec
sub
inc
mov
add
mov
sub
mov
bound
mov
add
push
aam
test
add
dec
in
fcmovnb
jns
jo
icebp
outsb
xchg
push
insl
test
rolb
mov
repz
sub
mov
scas
jl
add
add
add
dec
mov
add
and
rolb
push
add
mov
inc
cmpsb
add
sbb
pop
cmp
mov
cmc
imul
mov
add
sbb
add
stc
nop
add
jp
out
add
add
mov
gs
sbb
lock
push
add
in
insb
sub
lods
xor
pushf
sbb
pusha
add
add
fsubl
add
mov
mov
sbb
xor
sbb
pusha
add
mov
jo
repz
adc
loope
cmp
pushf
inc
in
mov
mov
inc
jmp
pop
sar
adc
movsb
add
add
call
xchg
aad
add
mov
add
mov
cmp
pushf
in
rolb
fldt
cmpsl
jmp
hlt
add
es
xchg
add
add
add
add
loopne
rorl
push
add
add
sar
dec
mov
bound
mov
mov
ds
addb
add
or
inc
add
mov
mov
add
mov
lea
pop
pushf
lahf
add
add
repz
std
lods
int
les
repnz
xchg
add
xchg
add
out
scas
aaa
jecxz
add
add
mov
scas
inc
in
dec
scas
jmp
les
lahf
int3
mov
add
scas
fcoms
in
xchg
or
adc
cmpsl
nop
add
addb
cli
sbb
sbb
xor
dec
sub
sbb
xchg
jb
addps
in
add
cwtl
mov
push
add
imul
add
xchg
add
inc
pop
ljmp
and
push
loop
bound
mov
adcl
dec
loop
jle
mov
in
addr16
lods
sub
push
inc
aaa
push
add
rolb
arpl
xchg
and
mov
add
add
ja
push
add
xchg
add
out
sub
xchg
add
jno
out
lock
incb
mov
cwtl
xchg
jg
mov
pusha
add
ficompl
and
adc
repnz
and
lret
loopne
int3
pop
mov
add
cmp
add
fnstsw
xchg
add
mov
andl
js
push
add
inc
cmc
pop
sbb
popf
sbb
nop
add
inc
jg
bound
mov
xchg
push
pop
aas
sbb
add
add
add
mov
pop
jbe
xchg
add
int3
or
add
sbb
add
mov
dec
stos
andl
adc
call
pop
or
addb
add
test
je
push
test
push
mov
add
push
lds
data16
add
add
aaa
pop
add
add
push
ds
sahf
sub
test
in
gs
add
daa
jno
popf
cmp
add
dec
push
dec
pushf
popa
repnz
mov
add
iret
add
mov
ficomps
push
sub
dec
mov
add
add
add
add
mov
mov
mov
add
add
add
cmpl
ret
cld
dec
xchg
in
jg
add
mov
xor
mov
mov
jge
add
xor
add
addb
mov
add
add
add
add
das
inc
add
sub
addr16
in
sub
xor
mov
add
add
add
aad
pusha
add
jbe
test
push
popl
jmp
testb
add
add
push
rolb
dec
jmp
add
add
add
add
add
and
add
add
adc
cli
jge
cmp
add
inc
add
in
testb
adc
in
loop
leave
or
push
or
pop
dec
mov
push
add
add
jl
mov
fcomps
cmp
adc
pop
or
add
add
lds
add
js
add
cmp
sub
dec
mov
add
call
dec
sti
out
adc
iret
mov
pop
xchg
fcoms
jl
add
add
add
das
addr16
add
add
clc
xor
movl
outsl
mov
add
data16
incl
mov
and
dec
out
fdivrp
push
add
mov
pop
sbb
cmpl
fsubrp
pop
fnstenv
push
mov
pop
mov
cmpsb
add
add
cwtl
cmc
int
add
jg
mov
and
mov
xor
cmp
icebp
popa
in
cmc
jno
push
xchg
add
mov
mov
jecxz
add
in
gs
jo
push
inc
pusha
add
mov
add
into
xor
inc
add
sub
in
pop
sub
inc
mov
pop
repnz
pop
dec
adc
xchg
mov
jle
scas
push
and
mov
cmp
add
pop
fsubl
add
imul
arpl
add
mov
add
or
stos
push
inc
add
mov
roll
add
mov
add
add
and
push
add
add
xor
add
jnp
rolb
js
insl
mov
or
js
adc
push
add
addb
add
push
add
or
or
add
add
bound
mov
add
insb
jle
xchg
aam
loopne
jle
out
movb
xchg
mov
and
xchg
mov
inc
add
out
movsl
add
add
ret
add
add
add
mov
lahf
push
xchg
iret
je
mov
xchg
leave
aad
mov
scas
cmpsl
or
rep
inc
add
mov
or
add
add
mov
sub
add
or
pop
inc
adc
out
unpckhps
add
add
add
in
adc
aaa
sbb
jecxz
in
hlt
add
mov
popl
mov
and
add
call
mov
icebp
mov
add
mov
test
enter
scas
inc
add
add
jle
fdivr
adc
pop
cli
jmp
inc
add
push
add
mov
sub
and
mov
gs
gs
jg
add
adc
add
sub
add
cmpsb
add
add
mov
and
mov
sbb
out
pop
inc
add
mov
shrl
and
mov
int
sbbl
add
push
pop
nop
add
push
ja
add
push
add
sbb
add
adc
std
mov
and
xchg
add
add
sbb
mov
movups
cld
jno
daa
gs
add
mov
xor
mov
jg
jp
add
add
add
and
adc
push
add
xchg
push
dec
xchg
ljmp
in
popf
push
add
in
push
jge
push
push
add
push
push
add
in
adc
int
sbb
ja
mov
lods
mov
ret
push
add
add
testl
add
jno
add
add
cmp
aas
adc
xor
jmp
mov
add
mov
mov
push
scas
cmp
fnstenv
add
cmp
inc
add
aaa
pop
insb
and
outsb
loop
inc
inc
mov
mov
add
add
xchg
add
jl
add
sbb
popf
cmpsl
dec
shll
ret
jb
push
dec
mov
xchg
mov
cmp
ret
into
cmpsl
pop
sub
fimull
in
packuswb
jbe
inc
jl
sbb
lret
add
add
xchg
add
std
imul
sahf
mov
add
ljmp
ret
in
scas
and
mov
lcall
add
add
testb
lcall
mov
add
add
add
add
dec
cs
hlt
add
adc
cmp
lea
add
fildll
push
add
dec
pop
jg
sub
mov
lods
mov
sub
inc
fistl
out
cwtl
jmp
subl
pop
cmpsb
add
jb
in
and
mov
xor
cmp
add
jecxz
sub
jge
add
arpl
fisubl
xchg
add
outsl
mov
nop
add
outsb
inc
add
jo
and
push
add
add
gs
add
mov
adc
fst
add
sub
scas
xchg
gs
add
jecxz
rolb
dec
adc
out
data16
jae
dec
dec
cwtl
sbb
jge
add
pop
gs
add
cmp
pop
outsb
mov
mov
jae
testb
push
adc
push
cs
test
leave
arpl
and
ljmp
jbe
fcoml
dec
sti
xor
add
popf
cmp
mov
enter
rolb
xchg
add
loopne
pop
ret
add
add
outsb
stos
xchg
add
jae
in
mov
and
jb
iret
dec
popa
fistps
add
jns
add
stos
xchg
add
mov
and
mov
sub
add
lea
mov
inc
aad
rcll
add
cld
sti
adc
inc
add
int
lret
add
cs
aad
jb
cmp
push
mov
push
pop
adc
mov
xor
push
loopne
outsl
mov
rolb
add
mov
mov
add
mov
lahf
repz
pusha
add
cmpsb
add
add
push
mov
fsubs
call
call
sub
data16
or
add
ds
ss
xchg
add
jns
add
add
cli
stos
fbld
sub
add
icebp
scas
or
add
inc
add
mov
dec
xor
sbb
xchg
int3
mov
add
aaa
xchg
add
sbb
push
add
add
add
sbb
rolb
adc
aas
lods
fisttps
pop
push
jecxz
jnp
loopne
ds
in
cli
icebp
loopne
sbbl
add
testb
jecxz
add
add
or
add
jno
jl
stc
lret
push
jge
insb
push
inc
add
into
ret
add
addb
or
gs
ret
push
add
jo
mov
mov
xchg
add
add
add
mov
cmp
frstor
adc
mov
add
push
jecxz
jae
push
add
popa
movl
add
addb
add
addb
fwait
xchg
hlt
add
lds
pop
pop
xchg
lret
push
add
add
add
add
add
ficoms
mov
dec
adc
lahf
push
add
mov
add
add
add
shl
dec
out
je
clc
lcall
add
pushf
and
inc
mov
sbb
add
std
fstps
xchg
xchg
js
add
add
jp
loope
add
add
int3
push
pusha
add
ljmp
dec
pop
dec
movsb
add
call
and
aas
sysexit
sub
add
bound
mov
ret
mov
pusha
add
enter
nop
add
add
add
add
out
loopne
pusha
add
mul
add
sarl
xchg
fdivrs
iret
fwait
movsl
lock
mov
cli
fnstcw
inc
add
fsubs
mov
add
imul
int3
aad
add
add
cwtl
rolb
add
test
add
add
into
or
ficomps
sub
xchg
sbb
mov
push
lret
xchg
add
add
push
js
cmpsb
add
icebp
stos
xor
mov
jns
in
jns
pop
stos
das
inc
add
movsl
lret
je
sub
add
or
sub
add
and
test
stc
push
add
push
add
mov
bound
mov
std
push
add
jle
out
add
lret
fistl
add
add
add
mov
daa
mov
in
sbb
leave
dec
mov
add
lahf
and
add
fmull
inc
add
pop
ja
jmp
adc
add
add
push
leave
sub
add
xchg
aas
rolb
push
add
pop
popa
mov
mov
jo
cmpsb
add
cmpl
mov
cmp
mov
and
mov
mov
add
pop
or
cmp
bound
mov
aas
test
leave
mov
fs
addr16
aas
das
mov
add
xor
js
adc
add
dec
mov
pop
rolb
pop
pop
adc
and
mov
jne
mov
push
add
xor
dec
mov
nop
add
jecxz
in
pop
pop
inc
rolb
cmp
add
add
add
pop
ret
jae
adc
add
add
popf
adc
imul
sub
add
stc
mov
arpl
add
xchg
push
cmp
repnz
rolb
cwtl
imul
inc
add
sti
jae
leave
push
into
inc
outsl
fimull
cmp
add
mov
ficoml
add
movsl
cmp
ret
adc
sub
dec
mov
jl
add
jp
add
add
push
add
pop
xchg
mov
jg
mov
inc
addb
mov
add
sub
add
mov
add
xor
stos
mov
push
add
mov
pushf
fnsave
icebp
and
mov
sub
imul
mov
add
jbe
adc
mov
mov
stos
dec
lahf
sub
int3
push
add
jb
ja
add
push
iret
xchg
add
add
mov
add
add
add
out
sbb
mov
mov
dec
sbb
sub
lds
fisubrl
js
mov
xor
add
push
shll
add
or
aad
add
rolb
push
add
mov
xchg
add
add
aad
sbb
add
adc
out
cmp
xchg
addb
sbb
pushf
sub
xchg
lret
hlt
add
jg
mov
xor
add
subl
rolb
lahf
ror
mov
mov
daa
mov
mov
mov
add
mov
dec
mov
call
fistps
out
int
lods
hlt
add
addb
nop
add
stos
stos
mov
lock
orl
push
push
add
add
add
jnp
lret
mov
lock
push
add
or
mov
add
add
add
addl
outsb
push
sahf
out
push
lret
jp
xchg
icebp
pop
sub
popf
push
add
test
call
add
pop
xchg
mov
sbb
add
push
add
add
or
sub
lcall
dec
xchg
xor
pop
xor
add
cmpsb
add
add
mov
xchg
stos
adc
imul
mov
add
add
add
lcall
cmp
add
lea
fadds
sub
jmp
add
mov
add
and
sub
push
cmpsb
add
shl
jo
pop
lret
sbb
mov
sub
clc
add
add
fmuls
push
push
fstl
mov
sub
stos
addb
scas
lcall
sub
aam
cmp
xor
xor
mov
adc
jp
mov
add
bound
mov
in
test
jnp
das
mov
jg
movsl
jmp
or
add
cmp
imul
call
xor
adc
mov
add
add
mov
cmpsl
add
add
imul
mov
add
add
scas
jge
repnz
cmp
xchg
sub
mov
loopne
ljmp
cmpsl
xchg
add
mov
pushf
sub
test
iret
jp
sti
jp
xchg
ret
in
pop
xchg
cli
sbb
add
and
mov
fiadds
mov
add
in
add
sbbl
mov
dec
addb
xchg
out
add
aaa
cmp
add
add
add
jle,pt
add
data16
lcall
ds
stos
std
push
int
xor
add
pop
pop
lds
add
add
adc
cmp
into
sbb
addb
cmp
call
ja
add
test
mov
add
mov
add
add
and
rcrl
cmp
add
add
add
mov
sbb
jae
icebp
test
or
out
pop
sub
sub
add
push
add
ret
add
mov
cmc
aaa
pop
mov
jg
sub
inc
push
add
sbb
clc
jbe
add
mov
rolb
push
dec
xchg
add
dec
pop
inc
add
lock
inc
add
add
fisubrs
cmp
xor
pop
int3
stc
pop
add
in
test
push
mov
inc
add
imul
mov
loopne
push
in
add
add
mov
aam
mov
icebp
mov
add
add
mov
push
add
movsb
add
add
add
sti
adcl
sub
popa
out
mov
nop
add
lahf
pop
pop
sbb
clc
mov
add
cmp
sub
jge
sarl
add
data16
pop
add
mov
add
mov
jo
mov
add
add
sub
add
add
inc
and
fstpl
mov
icebp
mov
repnz
pusha
add
test
xchg
pop
jp
add
jae
clc
xchg
jo
testb
and
fidivs
pop
inc
add
push
add
add
push
inc
add
mov
mov
add
dec
stos
push
fildll
xchg
add
pop
dec
test
sti
aad
add
loopne
sbb
test
jo
insb
jno
popf
js
lret
jns
add
ret
rolb
pop
xchg
add
add
dec
add
addb
sub
add
and
mov
add
inc
and
scas
out
ror
add
pushf
es
add
cmp
add
add
inc
pop
in
ja
fcoml
das
test
imul
adc
outsl
clc
and
mov
leave
lds
add
xor
dec
xchg
insb
and
cmp
xchg
add
xor
bound
mov
add
aad
add
dec
scas
outsb
xchg
push
pop
int
push
xchg
in
mov
dec
xor
mov
fimuls
inc
inc
scas
jnp
add
jg
jmp
add
add
add
adc
inc
add
mov
cmpsb
add
xor
arpl
inc
mov
sub
imul
dec
mov
push
mov
or
jno
add
add
cld
dec
mov
add
insb
rolb
rcrl
add
in
and
mov
test
call
mov
push
pop
cwtl
addr16
adc
pop
pop
jnp
insb
inc
mov
dec
cmpl
add
aas
mov
rolb
leave
dec
aaa
xor
cmp
cmpsb
add
orl
out
mov
les
mov
add
insb
shll
cwtl
mov
inc
add
pop
pop
xchg
add
xor
movb
add
out
mov
add
hlt
add
add
xchg
xor
add
add
inc
mov
mov
and
add
mov
add
and
scas
xchg
sub
icebp
jno
add
aaa
add
lea
addb
cmp
inc
add
xchg
add
add
xchg
add
add
add
mov
xor
jl
ja
testb
add
lds
add
add
add
sahf
loope
aas
mov
ret
loope
and
mov
mov
push
add
stos
hlt
add
xchg
pop
pushf
dec
jg
aam
adc
cmp
test
xchg
add
or
fsts
add
push
add
mov
mov
adc
fidivs
add
xchg
add
push
jmp
je
rolb
out
data16
inc
add
addb
sbb
mov
push
add
jno
pushf
out
push
xor
nop
add
out
shll
xchg
loopne
decl
shl
add
add
add
mov
mov
ret
aas
leave
int
xchg
add
push
je
xlat
inc
add
fmull
add
add
add
add
fwait
or
mov
test
push
add
test
add
add
add
mov
sbb
xchg
cmp
sti
jl
add
test
mov
into
nop
add
f2xm1
add
imul
mov
aaa
add
ljmp
add
iret
bound
mov
pop
iret
orl
addb
add
add
add
add
cmp
add
mov
push
fiadds
push
add
add
mov
add
add
mov
add
dec
sub
mov
jg
fwait
es
add
addl
inc
mov
and
daa
pushl
push
add
add
int3
push
add
cltd
push
add
push
add
popl
add
or
and
lock
add
test
add
fists
mov
sub
stos
sub
loopnew
mov
sbb
setnp
add
cmc
jnp
pusha
add
jnp
lds
push
push
add
leave
or
inc
js
or
add
add
lcall
add
xchg
push
lcall
mov
out
sbb
dec
xor
fucom
mov
inc
xchg
cld
fimuls
add
rolb
add
push
add
ljmp
add
add
add
movsl
in
or
leave
pop
jno
push
pop
sbb
out
repnz
inc
xchg
xor
inc
sahf
rolb
test
arpl
stc
rolb
push
add
or
movsb
add
add
add
mov
add
iret
jb
mov
mov
jae
mov
and
mov
in
jg
add
add
add
or
push
cli
jnp
adc
add
add
bound
mov
add
ja
add
jle
mov
add
int
dec
xor
or
add
lds
inc
cpuid
add
add
add
sub
sbb
fildll
int
xchg
jg
cli
lods
in
xchg
pop
cmp
sbb
add
jge
mov
pop
mov
dec
mov
addb
leave
movb
add
rolb
sbb
add
int
add
push
test
imull
or
mov
daa
add
inc
add
repnz
shll
nop
add
mov
adc
int
bound
mov
mov
add
add
add
imul
mov
mov
add
loopne
pop
or
repz
xor
popa
shll
sub
loope
stc
sbb
add
lods
and
sbb
aaa
or
and
jno
sbb
pop
bound
mov
jp
add
in
xlat
inc
add
add
enter
xchg
add
adc
cld
xor
inc
add
add
bound
mov
in
iret
jge
add
mov
or
gs
dec
scas
adc
hlt
add
jecxz
lcall
jmp
mov
add
dec
cmpsb
add
add
incb
and
pop
xlat
pop
mov
sub
add
pop
push
in
adc
dec
icebp
add
inc
add
jmp
scas
nop
add
hlt
add
sub
std
mov
rorl
fsub
add
std
fnstenv
enter
movsl
adc
int
dec
jnp
jno
movsb
add
mov
push
inc
mov
add
push
add
sti
mov
mov
add
add
rol
cli
jge
add
fisubrl
icebp
int
mov
add
add
aad
mov
add
lret
add
mov
jae
add
stos
jecxz
movsl
das
insb
mov
add
pop
rolb
imul
mov
add
addb
add
lods
push
data16
data16
add
add
add
dec
or
jl
xor
or
imul
mov
icebp
mov
and
mov
add
lds
push
push
dec
pop
fdivr
adc
addb
test
aad
repnz
int
movsl
ret
push
or
add
insl
loopne
gs
stc
dec
lock
add
mov
dec
xor
adc
jp
dec
rdpmc
les
shll
jecxz
aaa
movsb
add
movsl
xor
sbb
out
xchg
add
stc
add
fdivrs
les
mov
cwtl
xchg
push
gs
iret
mov
cmpsb
add
mov
mov
mov
stc
pshufw
add
push
in
xor
add
add
and
add
add
test
cmpsl
int3
iret
movsl
mov
push
ja
mov
add
mov
mov
test
imul
dec
fsubrl
dec
test
rolb
sbb
pushf
les
xchg
jp
aaa
cltd
addb
add
adc
sbb
add
adc
add
adc
sbb
dec
daa
nop
add
sbb
add
or
jnp
sahf
out
sbb
int
xor
data16
mov
lret
add
rolb
jl
xchg
add
ds
add
jbe
movl
aam
mov
cmp
jl
rolb
or
lcall
pop
ljmp
add
std
push
movsb
add
push
add
add
addb
add
pop
inc
add
adc
jne
push
add
nop
add
movb
inc
dec
js
loopne
inc
add
test
adc
adc
jge
cwtl
lcall
sub
add
aas
xor
test
pop
mov
sub
pop
mov
xor
add
mov
add
inc
call
jg
push
imul
js,pt
gs
or
sbb
nop
add
pop
ret
or
inc
add
mov
add
mov
sub
jo
bound
mov
push
das
add
mov
add
add
dec
data16
add
loop
pop
mov
add
cmp
mov
daa
testl
add
mov
xor
adc
adc
push
lods
lret
loopne
ljmp
bound
mov
loopne
ja
xchg
add
xor
xor
test
cmpsl
push
sub
cmc
xor
repnz
pop
xchg
add
add
pop
fwait
stos
lds
cmp
add
pop
rcr
sbb
push
and
mov
lret
xchg
add
xchg
sub
mov
sbb
push
add
add
les
lret
decl
dec
mov
add
out
out
xchg
iret
aas
and
mov
inc
add
mov
out
mov
add
cmpsl
ds
outsl
lret
mov
lahf
movsl
xor
jle
push
add
add
das
pop
les
movsb
add
add
add
outsb
xchg
pop
mov
xchg
lea
clc
imul
mov
jno
add
mov
add
xchg
mov
and
add
xor
data16
lds
sbb
push
imul
push
add
cmpsl
jnp
add
add
hlt
add
aam
es
inc
add
sti
mov
add
add
leave
dec
sub
mov
mov
rcll
add
test
aas
movb
mov
jecxz
mov
loop
mov
and
cli
loop
sahf
xchg
add
outsb
ficompl
cld
sbb
test
mov
in
push
xorl
jg
add
add
mov
push
testb
stos
mov
mov
clc
ficomps
dec
in
cmpsl
aam
and
stos
inc
add
lcall
mov
add
adc
stos
psubusb
repz
movsb
add
andl
mov
jl
leave
jecxz
add
add
push
add
add
add
jle
mov
add
lods
test
add
das
lahf
cmp
add
movsl
adc
cltd
in
add
mov
adc
mov
jbe
aaa
mov
maxps
xchg
cmpsl
pop
aad
dec
pop
movb
xchg
add
leave
aad
call
test
sub
out
into
sbb
fcomp
lahf
mov
add
cwtl
rolb
adc
xchg
mov
ret
sbb
mov
outsb
cld
arpl
add
pop
insl
outsb
ret
jbe
adc
in
cmc
lods
aaa
call
add
push
out
add
mov
stc
dec
mull
scas
rcrl
mov
jne
enter
cmp
and
nop
add
fiadds
add
jo
testb
add
mov
cmpsb
add
pop
ds
nop
add
jb
test
movsl
jae
jnp
add
add
add
cmpsl
dec
pop
ret
ljmp
movsl
add
push
add
or
jp
add
mov
add
mov
cli
clc
push
ja
pop
xchg
add
inc
stc
out
mov
add
add
insl
gs
add
add
push
add
nop
add
add
rolb
orl
into
daa
hlt
add
pop
inc
add
sbb
add
cltd
scas
popa
roll
add
pop
rolb
jecxz
inc
add
sbb
lds
pop
pusha
add
sbb
add
add
or
add
xor
pop
xchg
mov
rolb
xor
hlt
add
mov
xchg
dec
adc
mov
mov
cmp
mov
sbb
and
add
add
and
xlat
sbb
push
lods
addb
and
mov
dec
cwtl
test
xchg
add
addb
push
add
inc
cmp
jge
add
add
les
push
or
mov
add
mov
sbb
add
mov
icebp
cltd
sbb
push
add
add
add
add
add
add
add
sub
pop
aam
addr16
hlt
add
pop
pop
pop
bound
mov
shrl
add
pop
inc
mov
add
gs
sub
test
mov
jmp
add
or
iret
ja
xchg
add
add
cmc
and
push
add
sbb
add
cmpl
mov
inc
in
add
enter
xchg
add
or
add
jae
fidivs
cmp
cli
jne
add
mov
sub
add
add
dec
or
add
inc
add
imul
bound
mov
push
add
cmp
push
add
data16
pusha
add
ljmp
mov
das
lock
movsl
loopne
add
mov
outsl
aaa
je
mov
push
pop
fdiv
or
out
out
or
adc
popa
jl
push
add
lds
je
push
js
add
mov
addb
add
cli
icebp
sub
lods
and
mov
add
pop
sbb
add
add
inc
out
and
inc
mov
adc
cmp
dec
pushf
cmp
insl
xchg
faddl
add
add
xchg
add
add
and
mov
pop
xchg
fwait
scas
pop
jg
add
add
or
fisubs
mov
adc
add
cmp
or
add
mov
movb
push
aaa
arpl
add
push
add
mov
sahf
mov
insb
inc
add
add
add
add
mov
add
add
add
dec
mov
cs
pop
jmp
adc
jnp
add
jne
adc
xlat
adc
add
add
xchg
add
enter
cmc
pop
flds
add
popa
jp
pop
loop
inc
add
cwtl
rolb
vaddsubpd
pop
inc
add
add
cmp
xor
add
ja
add
cmp
movsb
add
add
in
sbb
mov
loopne
mov
ss
in
push
add
mov
pop
push
js
in
addb
add
or
mov
sti
dec
dec
inc
add
jne
mov
xlat
adc
jge
dec
aad
movsb
add
add
lret
xchg
dec
cmp
mov
cld
imull
jb
fsubrp
sbb
fnsave
out
xchg
mov
add
fwait
xor
mov
and
mov
mov
mov
push
mov
repz
add
stc
int
sub
add
mov
add
add
add
add
push
add
push
add
add
pop
int3
dec
add
mov
add
mov
add
mov
dec
movsb
add
add
mov
add
add
push
add
pop
pop
ret
inc
add
add
bound
mov
popf
test
adc
push
ret
in
mov
jle
inc
ss
adc
dec
and
mov
mov
add
test
out
xor
enter
int
mov
push
add
in
flds
xchg
testb
add
push
add
sbb
add
loopne
mov
out
pop
push
add
mov
or
loop
repz
add
xor
sbb
add
add
jl
out
lea
decb
mov
add
add
out
adc
and
xchg
inc
mov
xchg
cmp
jmp
enter
add
add
add
arpl
add
xor
out
cmp
cmpsb
add
fsubl
lods
add
dec
jge
push
push
add
add
test
ret
add
add
repnz
add
xor
cltd
add
stc
pop
iret
insb
or
add
add
scas
dec
rorl
enter
add
jb
jecxz
and
cli
add
xchg
std
sub
addl
jne
xchg
data16
rolb
lret
xchg
and
xchg
or
add
popa
out
inc
add
push
lahf
test
pop
dec
out
jne
mov
add
arpl
add
cmp
push
sti
mov
push
add
mov
mov
sbb
loopne
icebp
lea
add
add
add
adc
add
add
call
xchg
or
add
mov
cs
push
add
loop
int
add
add
stc
cltd
pop
in
repz
and
mov
roll
stos
aas
jp
dec
push
mov
icebp
daa
lods
sub
pop
adc
add
mov
nop
add
xchg
jns
add
cmpl
pop
xor
xchg
or
jl
xor
pop
into
ss
add
hlt
add
inc
add
mov
add
add
adc
scas
rcr
sub
ds
add
push
add
jae
add
sbb
lcall
lahf
in
mov
and
pop
inc
add
xchg
insl
or
add
mov
add
rolb
ret
mov
add
mov
mov
cmpl
stos
adc
jle
mov
ret
clc
inc
add
add
sbb
in
sub
xlat
add
out
xlat
cmp
jnp
imul
es
xor
jae
lret
add
push
add
hlt
add
jb
mov
sub
lods
fistpll
dec
mov
xor
sar
jno
add
outsl
and
mov
sub
test
mov
add
rolb
mov
add
add
mov
pop
shrl
add
add
add
mov
pop
sti
add
add
cmp
fsubl
daa
out
sub
outsl
test
test
xor
and
mov
cli
jp
mov
add
nop
add
sbb
add
mov
outsl
in
or
add
add
mov
sub
adc
or
add
mov
pop
outsl
sub
push
adc
arpl
xor
add
adc
add
add
leave
sub
rolb
xor
jne
das
sub
add
lcall
mov
add
or
add
testb
add
xchg
add
and
add
cmp
add
aaa
jecxz
inc
add
add
data16
sub
mov
cwtl
ljmp
iret
loopne
mov
pusha
add
inc
xor
mov
ds
loopne
je
cmp
add
pop
mov
testb
mov
pop
pop
mov
jo
or
call
mov
hlt
add
dec
and
push
fcmovne
rcrl
in
dec
testb
iret
enter
add
mov
adc
int3
out
and
mov
xor
out
lahf
div
add
or
out
fs
adc
cld
pop
xor
stos
xchg
add
xchg
out
adc
xor
scas
das
mov
outsl
hlt
add
push
add
add
add
mov
xor
fnsave
add
aad
add
add
xchg
add
repz
mov
rolb
add
fistpll
aaa
mov
sub
add
add
ds
add
inc
add
sti
push
add
outsb
push
xchg
add
cmp
inc
add
cmp
inc
fucom
cmc
adc
arpl
push
add
pop
jl
bound
mov
add
add
sub
add
add
into
xlat
flds
test
mov
aam
add
out
mov
push
add
mov
add
aam
mov
add
add
in
mov
and
push
add
mov
insl
pop
mov
outsl
add
lret
fiaddl
ja
xor
mov
add
add
nop
add
flds
pusha
add
push
add
jp
add
add
mov
mov
into
in
sbb
add
xchg
add
xchg
add
and
mov
add
ljmp
jp
xlat
movsl
movsl
jmp
xlat
insb
fwait
sti
cmp
cli
mov
add
testb
pop
outsl
clc
cmp
sub
sub
addr16
dec
in
sbb
add
xchg
fiadds
movsl
and
pusha
add
push
flds
or
add
add
mov
add
xor
xor
fstpt
jg
dec
mov
add
inc
add
jmp
add
lahf
jg
add
xchg
cmp
xchg
adc
jno
xchg
add
add
add
clc
mov
mov
add
xchg
dec
rolb
push
out
mov
mov
daa
sbb
jae
add
stos
subl
or
add
je
mov
enter
mov
mov
add
add
add
stos
jo
jns
push
cmp
aam
sub
out
inc
add
ljmp
add
add
fnstsw
add
xchg
xchg
fstpt
das
outsb
dec
sbb
mov
xchg
add
cmp
push
add
xchg
push
rolb
sub
adc
nop
add
push
add
mov
push
pop
push
xchg
lea
arpl
call
add
add
xchg
pop
int3
sub
mov
enter
not
dec
movb
add
add
add
jmp
inc
add
add
enter
add
pop
jo
out
enter
xchg
out
or
sbb
add
dec
dec
scas
addb
cmovnp
test
push
sub
das
fcmovnb
fnsave
jg
add
add
xor
push
movsl
inc
movsb
add
push
cmp
add
das
mov
call
cmp
leave
subl
loop
outsl
jle
pop
cmpsb
add
lock
fisubrl
aas
fistpll
dec
testb
inc
incb
mov
sti
out
rcrl
add
mov
xchg
stos
mov
add
jae
pop
mov
or
xor
cmpsl
jo
xchg
arpl
cmpsl
sbb
mov
lret
mov
add
mov
adc
mov
call
and
mov
rolb
push
add
fldln2
sti
sbb
mov
ficoms
add
or
ret
popa
cli
test
mov
add
add
fcoml
mov
in
loope
add
sbb
sbb
icebp
loopne
in
add
popa
ja
xchg
sahf
xchg
loope
lret
mov
enter
cmp
sbb
lahf
imul
add
popa
push
jae
xchg
jbe
out
repnz
mov
jmp
mov
add
add
add
fdivrl
cld
arpl
add
and
loop
sbb
sub
add
cld
add
pop
rolb
or
add
gs
add
xor
xchg
add
stc
sub
add
add
add
add
add
outsb
lods
addb
push
arpl
int
add
dec
mov
push
sbb
lahf
sbb
pop
ret
add
clc
sti
ja
inc
jge
or
xchg
sbb
add
ret
add
addb
add
and
add
in
repz
sti
jnp
push
add
mov
outsl
dec
jns
add
add
mov
and
jne
enter
push
shrl
cs
add
aas
sbb
mov
jae
outsb
inc
add
scas
sbb
xor
outsb
loopne
xchg
sbb
push
add
xchg
cltd
pop
xchg
add
imul
addb
test
xchg
nop
add
out
lods
outsb
or
add
pop
jns
enter
lea
cmpsb
add
add
add
jl
and
mov
mov
test
fwait
repnz
add
mov
cs
fwait
aam
dec
jmp
push
add
add
fcmovu
sti
je
out
shrl
add
shr
dec
xchg
scas
inc
add
stos
fistpl
subl
push
add
add
push
push
test
dec
xchg
scas
daa
inc
xchg
js
arpl
add
loopne
lods
cli
add
jp
add
add
add
add
or
cmpsb
add
add
mov
add
mov
pop
cmp
ret
jns
add
rolb
call
jmp
add
cmp
push
test
jge
int3
insb
or
jmp
and
movsl
out
inc
add
outsl
mov
cmc
fnsave
aam
movb
add
mov
xchg
jge
mov
jge
cmp
nop
add
bound
mov
and
mov
fcmovne
lea
add
movb
add
add
cmp
scas
lock
inc
add
fdiv
mov
aam
test
rolb
add
cmp
sub
adc
out
addl
mov
pop
add
mov
jp
push
mov
dec
int3
fnstsw
mov
add
in
into
fucom
sahf
jo
mov
aad
ret
add
add
add
daa
pop
push
imul
add
test
xchg
pop
pop
push
add
add
cmp
add
shl
add
jp
add
add
and
mov
test
in
add
dec
test
ja
sbb
daa
fldl2t
sub
movsl
js
add
mov
xchg
add
add
push
sbb
popf
and
mov
js
ljmp
test
jle
cmp
pop
mov
sbb
add
add
mov
adc
sahf
pop
int3
repz
repz
add
sub
jno
rcrl
add
nop
add
cli
rolb
add
adc
sub
jl
sub
add
scas
fldcw
aam
pop
in
or
add
sbb
jl
inc
mov
movb
inc
dec
orl
add
xchg
dec
pop
or
outsb
repz
add
jb
add
sbb
add
mov
iret
rorl
mov
lds
rolb
mov
in
push
add
add
mov
sub
adc
add
sbb
rolb
testb
push
add
lods
inc
fmull
add
add
cmp
add
fldl
add
add
fisubrs
add
mov
add
loop
jo
inc
fsubrp
aam
pop
and
lret
add
ds
roll
add
pop
ret
mov
inc
add
pop
mull
inc
add
imul
test
dec
test
sub
xchg
mov
mov
test
popa
bound
mov
jmp
loop
xchg
movb
out
in
cmp
lods
ljmp
add
add
movsb
add
or
or
add
add
add
add
add
inc
add
xchg
and
sub
pop
into
adc
je
imull
jl
add
push
add
cs
add
and
mov
mov
insl
jge
fsubrl
xlat
push
add
in
mov
cwtl
mov
addb
add
add
outsl
ret
scas
xchg
bound
mov
sub
xchg
add
add
xor
push
inc
add
lods
pusha
add
movl
sbb
dec
inc
pop
dec
sbb
mov
add
add
inc
add
push
add
add
xchg
rolb
out
jp
mov
adc
cmc
add
repnz
jle
inc
add
jo
cmp
inc
add
xor
or
and
movsb
add
les
or
iret
mov
cld
pop
cltd
mov
stos
xor
enter
or
les
sahf
mov
pop
repz
push
loop
or
add
movsb
add
xchg
mov
push
mov
lock
and
ja
add
push
add
add
jns
add
pop
jb
fcoml
adc
or
iret
nop
add
push
inc
push
add
add
cmp
fsubs
add
add
sbb
bound
mov
add
testb
jo
mov
adcl
mov
jmp
pushl
aaa
sbb
sub
ret
cli
scas
pop
fs
into
inc
push
add
adcl
add
fldcw
mov
add
pop
mov
pop
jno
gs
add
add
xor
iret
xchg
mov
add
add
add
test
add
add
loopne
adc
cmp
add
inc
add
faddl
add
add
add
stos
inc
push
jno
adc
mov
jle
sub
add
add
rolb
out
adc
pop
dec
pop
jb
shll
mov
or
jae
into
xchg
jle
add
nop
add
add
sub
pop
cmp
inc
push
add
pop
mov
xor
jmp
and
mov
dec
mov
push
jnp
loop
mov
lods
pop
jno
stc
inc
add
in
add
add
add
dec
dec
push
hlt
add
add
leave
aas
dec
les
cmpsb
add
add
add
mov
add
dec
xchg
add
and
dec
out
jp
mov
rolb
scas
xchg
mov
loopne
call
add
mov
pop
dec
jle
outsl
lcall
mov
stos
jb
gs
cmp
rcr
mov
rolb
xor
inc
add
testb
les
push
adc
dec
fsubrs
add
mov
push
add
add
and
mov
add
pop
daa
mov
ficoms
xchg
call
add
push
add
add
pop
scas
test
dec
fs
add
fdivrs
add
add
test
jnp
and
mov
adc
je
ljmp
xor
cmp
mov
jbe
jl
imul
push
add
pusha
add
call
addb
call
mov
jecxz
pop
cs
mov
mov
rcr
inc
add
inc
cmp
mov
outsl
scas
movsb
add
mov
pop
rolb
loope
add
loopne
pop
rolb
int
lock
lret
cli
stc
rolb
aas
and
mov
icebp
add
data16
outsb
jb
adc
loop
cmp
fstps
add
lcall
inc
add
add
sti
lret
ja
mov
push
add
mov
cmpsb
add
add
lahf
icebp
fisubs
and
mov
mov
ffree
add
add
add
add
mov
mov
add
mov
dec
icebp
inc
add
rolb
push
add
ret
addb
mov
add
aaa
cmp
pop
sbb
gs
add
jle
add
daa
or
add
sti
mov
mov
jne
add
add
pop
pop
xchg
mov
js
mov
jmp
daa
nop
add
sbb
inc
mov
int
add
pop
inc
hlt
add
lret
lds
xchg
add
push
xchg
fmul
xchg
add
bound
mov
sbb
cs
cmpsb
add
add
mov
insl
les
icebp
jnp
jae
sahf
nop
add
add
fsubs
dec
xor
mov
dec
fdivrl
dec
mov
jecxz
add
add
add
sub
popa
sub
pop
call
cmp
push
inc
daa
add
mov
pop
inc
sarl
hlt
add
scas
xchg
sahf
repz
pop
imul
mov
jnp
dec
and
adc
repz
ret
jmp
add
xchg
add
add
xor
xchg
add
xor
je
add
add
shll
push
add
dec
sub
imul
dec
sub
cs
fdivs
pop
dec
dec
mov
add
mov
add
xchg
cld
clc
fwait
mov
mov
pop
insb
ret
add
add
andl
cmpsb
add
mov
jno
movsb
add
add
add
leave
pop
icebp
jae
imul
jnp
lods
jbe
mov
jne
add
popa
sbb
mov
adcl
add
add
sub
into
imul
push
int3
aas
xlat
add
and
pop
inc
add
jns
sbb
loopne
scas
dec
cmp
or
mov
jbe
jge
lock
mov
push
pop
and
cmp
popa
mov
add
jecxz
mov
inc
add
mov
add
mov
add
dec
imul
mov
rolb
adc
stos
fildll
int3
sbb
add
add
insl
xor
loop
sbb
add
loopne
sbb
add
cld
pop
xchg
aaa
movntq
ret
add
clc
lret
repz
into
sbb
mov
add
fldcw
mov
push
js
test
adc
imul
sahf
pop
jne
fisubs
insl
jg
add
mov
in
addb
pop
ret
xor
or
xchg
jno
jmp
push
test
mov
add
addb
add
jns
add
stc
ds
popl
inc
add
aad
jns
cltd
dec
jecxz
cwtl
jo
imul
dec
cld
movb
mov
add
add
mov
add
lods
sub
push
add
add
sub
and
inc
add
add
loope
insb
js
add
add
sub
add
jne
xor
addb
push
add
outsb
mov
mov
dec
faddl
nop
add
or
and
add
int3
jge
repnz
mov
xchg
add
mov
add
add
std
addl
out
fsubp
cmp
add
lahf
jne
sub
scas
mov
add
push
add
mov
add
add
add
add
mov
cmc
enter
insb
addb
pop
cmp
mov
dec
cltd
movsl
scas
pop
lret
add
xlat
ret
add
mov
push
and
addb
xor
add
add
add
in
xor
cmp
xchg
add
dec
xchg
add
push
xchg
ret
mov
fsubrl
xchg
mov
rolb
dec
sbb
mov
sub
add
or
push
add
jl
dec
inc
sub
pop
sub
add
fdiv
add
add
mov
fiadds
testb
mov
push
fnstsw
or
push
mov
sub
adc
shll
add
xor
add
insb
das
jp
js
cmp
mov
push
add
add
add
push
add
jnp
pop
in
add
jmp
push
or
das
in
movb
add
or
pop
inc
add
xchg
.byte
add
