icebp
xlat
out
mov
xor
mul
cmp
pop
mov
negb
mov
aas
jo
and
push
cmp
lcall
daa
push
mov
pushf
pop
out
lods
scas
insl
mov
adc
jle
pop
xor
and
xor
out
icebp
mov
push
add
fucomp
push
out
lret
lock
arpl
ja
shr
je
mov
mov
jp
pop
das
lods
cmpsb
mov
mov
mov
jae
and
ret
stc
and
add
pop
jmp
mov
pop
je
sbb
push
xor
inc
inc
add
daa
mov
popl
add
jle
add
or
xchg
mov
fldcw
or
mov
jo
insl
clc
pusha
add
enter
lods
lds
movb
jecxz
mov
xchg
leave
fcompp
mov
ret
cmp
std
jp
jae
jbe
sub
aas
push
mov
or
add
add
bound
out
je
mov
dec
xlat
xchg
xor
aas
cs
jle
in
arpl
btr
sbb
shrl
fiaddl
stos
add
mov
loope
divb
add
ljmp
out
mov
cmp
je
test
jo
outsl
add
mov
test
mov
and
mov
fsubr
push
and
nop
mov
xchg
mov
jge
mov
ds
add
dec
jno
mov
ret
inc
add
sahf
loopne
xchg
popa
aas
jo
mov
jb
outsl
rclb
push
js
orl
sahf
mov
in
bound
lods
popa
aas
adc
xchg
sbb
mov
sbb
inc
add
hlt
cmp
enter
enter
rolb
sbb
or
mov
cs
enter
add
enter
test
dec
dec
or
cmp
in
push
dec
sbb
fs
dec
dec
cmp
testb
mov
ja
leave
in
out
mov
dec
dec
inc
add
xchg
or
stc
test
cmp
enter
jnp
cmp
cmp
cmp
sarl
jle
mov
sub
fmull
clc
push
cmp
pushf
push
push
ret
ret
sti
push
add
out
and
xor
leave
dec
mov
or
int
add
add
sbb
cmp
add
clc
cmp
pop
sub
loope
and
jbe
fbld
jo
pop
mov
shrl
les
mov
leave
in
push
ret
scas
pop
cmp
inc
add
out
enter
enter
sub
xor
aas
cmp
sbb
call
sbb
hlt
cmp
enter
rcrl
inc
cld
or
mov
cs
enter
enter
enter
enter
ret
enter
add
dec
and
cmp
in
push
dec
sbb
fs
ds
add
testb
cmp
xor
enter
out
inc
add
leave
push
cmp
enter
loope
dec
gs
cmp
mov
adc
adc
das
pushf
or
clc
push
cmp
pop
repz
hlt
pop
lock
out
and
je
xor
or
rolb
dec
int
add
xor
add
pop
fistpll
in
push
sbb
adc
mov
push
popf
cmp
sbb
ja
xchg
jecxz
hlt
js
out
cld
dec
inc
add
std
scas
pop
cmp
inc
add
out
enter
arpl
test
inc
add
or
or
or
adc
enter
enter
pop
ja
into
rolb
pop
int3
jl
in
imul
ret
movsb
addb
in
inc
add
int
mov
faddp
pop
or
das
add
mov
pop
mov
mov
enter
push
cmp
jmp
jecxz
add
mov
and
arpl
aad
adc
fwait
pop
and
mov
adc
popf
and
clc
bound
xchg
mov
ret
cmpsb
nop
xor
fcoms
jae
xor
xchg
repnz
mov
and
or
in
pop
xchg
jnp
add
push
xchg
inc
add
inc
add
mov
roll
pop
add
insl
dec
mov
adc
and
addr16
mov
jecxz
push
lea
scas
fwait
xchg
pushf
inc
cli
cmp
mov
pop
gs
cmpsl
add
or
mov
sbb
jo
fwait
xor
les
add
mov
roll
add
sbb
mov
jns
sub
shl
movsl
fildll
pushf
popa
inc
add
loopne
adc
insb
cmc
arpl
add
xor
add
or
adc
int3
cli
insl
adc
and
pushf
and
adc
inc
add
sub
mov
mov
push
out
insl
jg
stos
bound
mov
jp
cmp
fisttpl
addr16
into
mov
cltd
add
stc
rclb
and
cmp
lds
je
addb
rolb
ret
fwait
lcall
add
lock
pop
in
scas
sub
push
dec
mov
jbe
add
and
fsts
or
movsb
jnp
push
xor
mov
push
inc
add
add
xor
mov
sbb
mov
jp
or
push
sbb
nop
or
lea
arpl
lods
xor
lret
sub
xchg
mov
ds
pop
xor
loop
cltd
shll
pop
dec
fsub
sub
pop
insl
pop
pusha
add
mov
add
aas
add
lea
jmp
repnz
aas
leave
ret
dec
in
dec
pop
adc
cmp
sbb
jg
lret
add
mov
mov
sbb
lods
push
cmp
ret
fldl
aad
cld
nop
and
cmp
vpunpckhqdq
add
addb
mov
xchg
adc
repz
inc
add
add
sbb
test
ds
into
aad
cs
mov
mov
std
push
fildll
enter
mov
stos
rorb
cmp
adc
xor
adc
add
and
pop
lds
iret
fsubrs
and
jmp
lds
lret
jg
out
add
mov
in
sbb
dec
lret
sub
xor
bound
push
add
dec
leave
cmp
push
loop
add
idivb
addb
fmull
sbb
ss
adc
fdivl
pushf
pop
sti
or
daa
outsl
or
jne
aaa
stc
ret
push
push
fdivl
stc
roll
movsl
cmpsl
bound
sbb
imul
addb
lcall
mov
add
sub
lahf
lahf
in
or
jge
cmp
mulb
xchg
addb
bound
jecxz
add
cmp
mov
jo
add
jno
loopne
aas
ret
mov
xchg
add
out
jecxz
test
mov
scas
dec
pop
mov
inc
add
loope
mov
lea
ds
loopne
sti
inc
imul
or
cmpsb
push
push
xchg
fisttpl
jns
int
xor
shrb
loopne
dec
mov
addb
mov
dec
inc
add
out
inc
add
xchg
shl
push
xor
sub
jo
xchg
addr16
dec
push
sbb
sub
sub
fnstcw
dec
in
ljmp
cs
imul
cmc
js
addr16
add
dec
adc
inc
mov
outsl
xchg
ds
xchg
aam
addb
cs
xor
test
ret
jmp
adc
flds
call
xor
out
jno
dec
cwtl
pop
dec
sub
mov
jbe
cmp
mov
xchg
jo
out
sub
lret
inc
add
rorl
and
ljmp
sbb
dec
jns
cmp
insl
adc
adc
mov
jmp
and
sarl
add
mov
add
addb
xchg
in
sbb
adc
add
push
xor
icebp
loopne
pop
jmp
jge
dec
leave
xchg
push
xchg
mov
pop
or
lret
pop
mov
dec
mov
mov
adc
icebp
in
movsl
jb
and
in
add
addb
loope
aam
mov
ja
rolb
xchg
and
pop
and
dec
mov
cmpsb
add
mov
sarb
xor
addb
mov
mov
nop
mov
pop
ja
sbb
pcmpgtd
mov
add
mov
dec
dec
nop
pop
push
test
test
fisttpl
dec
call
mov
add
test
jns
repz
scas
add
jp
jb
push
inc
add
loopne
int
sarb
push
vsubpd
sub
iret
mov
notb
test
jmp
lcall
sub
add
adc
fcompl
mov
in
popf
lock
pop
popf
pop
adc
dec
and
int3
push
jne
jnp
mov
sub
push
mov
push
push
push
push
push
push
push
push
bnd
mov
pop
dec
imul
cmp
ss
push
call
cmp
je
mov
lea
push
push
es
call
push
jmp
icebp
mov
nop
cs
lea
xchg
or
lock
lea
repnz
pop
add
ss
cs
push
lret
add
add
and
in
mov
inc
add
adc
and
insl
iret
ja
pop
jmp
fnstenv
inc
adc
dec
jg
mov
mov
or
sub
scas
mov
add
adc
movsl
sbb
movsl
or
aaa
fidivl
movb
add
and
inc
add
sub
aaa
mov
mov
inc
add
add
dec
fwait
in
dec
ficomps
adc
pop
call
xchg
mov
dec
es
add
add
mov
scas
out
out
dec
shll
mov
adc
and
xchg
loope
inc
add
js
mov
std
xor
cmpl
mov
loopne
add
add
lods
sbb
sbb
int3
sbb
test
fsubl
add
aam
sbb
sbb
rorb
stos
and
mov
xor
mov
adc
repnz
bound
icebp
push
fcoml
cmpsb
cld
mov
fcomi
in
inc
mulb
add
sahf
or
bound
and
jp
add
je
ret
adc
sub
rclb
iret
mov
mov
xlat
sarl
mov
mov
jecxz
ja
lods
jp
add
popf
insb
jmp
pop
scas
ret
jg
mov
add
movl
mov
add
es
les
out
mov
mov
leave
sub
imul
cmpsl
xor
aam
push
and
scas
push
push
fistpll
lret
sbb
jo
or
sub
add
js
add
add
mov
mov
xchg
mov
add
js
adc
sbb
cmp
add
add
jle
cmp
lcall
xchg
cltd
lods
mov
mov
jmp
stc
pusha
add
sarl
ret
iret
push
ds
dec
cmp
and
loop
xchg
fs
clc
js
sbb
mov
add
mov
pop
sbb
test
xor
addb
adc
mov
fxch
xchg
imul
ret
shrb
push
add
mov
mov
push
sahf
pushf
adc
push
das
fsubrl
outsb
sbb
insb
int
pop
jl
xchg
jge
inc
call
imul
add
in
out
jb
ds
mov
adc
adc
and
cld
sahf
push
lret
scas
repz
sbb
stc
pop
adc
aaa
jge
pop
cwtl
push
dec
or
and
push
pop
jle
fs
ret
and
fisttps
adc
inc
add
stos
adc
fwait
in
and
cmp
mov
jge
jge
js
into
sti
das
cmp
testl
ret
dec
insl
pop
fwait
or
xchg
lret
pop
outsb
jg
stc
cwtl
outsb
sbb
test
lcall
mov
xor
cmc
jg
call
in
inc
hlt
xor
ret
gs
jb
ret
lds
jp
shrb
leave
jge
mov
fadd
es
xor
or
add
mov
mov
es
xchg
sbb
outsl
in
sbb
add
movb
stos
movsb
add
xchg
cltd
in
movsb
mov
jl
filds
fistps
add
add
add
and
imul
fstps
inc
add
add
xor
add
stos
sbb
cmp
push
push
and
or
es
lods
add
cmc
pop
mov
pop
pop
xchg
push
repnz
addb
add
add
lea
dec
sub
push
mov
hlt
add
loope
jge
test
or
es
gs
aas
idiv
mov
or
pop
xchg
sbb
jecxz
and
daa
jmp
dec
cmp
pop
cli
mov
pop
fucomi
mov
repnz
dec
mov
pop
jge
mov
iret
ds
int3
push
movsl
sub
mov
cmp
stc
cmp
add
fwait
jmp
pop
xchg
sub
lahf
enter
lods
inc
add
add
jbe
stos
popf
push
sbb
jg
repnz
xchg
jnp
or
add
lahf
popa
or
fldlg2
push
pop
adc
add
add
cmpsb
cmpsb
int3
ret
arpl
jl
jo
xchg
addb
andl
add
cltd
jmp
add
push
adc
jmp
pop
out
arpl
sub
lods
fucom
jns
fidivrs
scas
sub
test
decb
xor
and
pushf
xchg
inc
add
sub
push
cmp
or
add
enter
cwtl
fidivs
arpl
and
mov
imull
jmp
push
in
push
xor
pop
mov
pushf
fistl
cmp
add
cmp
or
sub
add
ds
jp
loope
jle
or
mov
jg
pusha
add
push
mov
fadd
sbb
add
fwait
add
inc
add
js
mov
mov
loop
jp
xchg
push
mov
add
movb
add
ret
dec
add
mov
add
mov
mov
jbe
add
out
aaa
fildl
in
out
pop
das
xor
mov
pop
dec
fimull
adc
out
sar
pusha
add
cltd
pop
adcl
dec
iret
mov
stos
clc
cmpsb
pop
and
cwtl
xor
inc
add
add
fdivrs
pop
test
and
mov
icebp
fcomps
adc
jl
addr16
mov
mov
add
aad
mov
push
lods
addb
fadd
pop
push
repz
cs
inc
je
cmp
popa
mov
out
cmpsb
mov
mov
ret
lret
mov
outsl
sbb
shl
push
mov
mov
dec
sub
leave
scas
shl
in
add
in
adcl
jge
inc
add
insb
pop
aaa
pop
in
insb
fs
popa
push
add
in
outsl
stos
into
jp
push
and
add
dec
ret
add
out
pop
rcrl
cwtl
cmp
in
ret
movsb
jmp
lods
and
or
add
add
pop
test
jns
push
or
cmp
sbb
idivb
inc
leave
sarl
push
cld
cmp
mov
dec
pop
rcrl
dec
stos
pop
adc
dec
fsubrs
jbe
cmp
pop
lods
adc
fcmovb
pop
jmp
gs
dec
pop
dec
sub
bound
jg
fldcw
in
push
xor
fsubl
and
popa
bound
add
dec
insb
mov
sbb
add
repnz
inc
insl
xchg
int
rorb
inc
nop
xchg
bound
imul
and
mov
out
fbld
out
mov
pop
push
mov
sbb
loope
les
mov
and
in
xor
in
pop
jns
adc
std
jge
cli
adc
add
xor
add
xchg
pop
sub
sbb
ret
pop
bound
movsl
cmp
fsubrl
sbb
pop
lods
pop
leave
mov
or
ret
and
popf
daa
xchg
pop
ret
loopne
inc
ret
push
jmp
lea
pushw
pop
xchg
mov
cmp
xchg
int
inc
pop
adc
and
es
movsl
xchg
adc
test
dec
push
arpl
arpl
add
fs
ret
lahf
out
in
aaa
das
adc
out
leave
ret
pushf
pop
repz
cli
es
adcl
add
xchg
pop
aaa
add
pop
nop
out
addb
fdivrl
and
add
cmp
lods
jnp
lcall
aad
and
adc
pop
loop
sbb
add
popf
jl
add
pop
jp
or
sbb
cwtl
xor
push
xchg
adc
add
cld
jbe
data16
push
add
inc
sub
call
das
dec
fs
aam
repnz
out
addb
sub
lods
mov
add
out
add
xchg
stos
push
jb
or
add
rcrb
adc
cltd
addr16
icebp
push
lods
push
adcl
mov
aad
std
shl
adc
xlat
iret
subl
lahf
dec
adc
aaa
mov
rolb
fcompl
jecxz
lahf
sub
jbe
mov
fldcw
add
jp
mov
jl
push
jnp
push
dec
faddl
add
lahf
mov
std
lcall
add
psrlq
pop
lea
xor
jbe
aad
mov
and
mov
add
jmp
les
push
lds
ret
rcrb
mov
addb
mov
imul
sbb
jge
js
or
test
push
daa
jbe
repnz
lahf
jo
sub
popa
jbe
pop
sub
push
mov
or
add
mov
stos
mov
popf
enter
lcall
pop
cli
xchg
and
xor
inc
add
lcall
xor
test
dec
fld
add
movsl
mov
cs
add
pop
push
rclb
pop
pop
dec
fstpl
cmc
icebp
stc
sub
xor
adc
add
and
mov
rolb
mov
shr
fwait
mov
or
mov
sub
xchg
pop
mov
mov
inc
insb
jmp
pop
sub
sbb
movsb
fimull
xchg
sub
dec
filds
mov
shl
jmp
adc
insl
pop
movl
xchg
cmp
cmp
add
push
ss
loope
ljmp
or
addb
lods
or
nop
sti
pop
inc
jbe
out
out
sub
mov
and
mov
jo
scas
scas
rolb
jo
pop
mov
cltd
roll
leave
pop
mov
sub
mov
int
gs
push
pop
gs
enter
xchg
push
and
outsl
inc
mov
mov
push
outsb
js
pop
imul
jns
jge
into
add
cld
test
in
call
add
dec
cmpsl
loopne
inc
mov
add
outsl
out
std
xor
lret
addr16
lods
sbb
call
add
pusha
add
add
arpl
cmp
lret
pushf
adc
add
mov
dec
pop
inc
push
repz
pop
dec
xchg
mov
iret
mov
sbb
and
arpl
add
lret
or
cmp
aaa
pop
push
or
je
sbb
aaa
mulb
pop
inc
out
add
scas
lcall
stc
push
cld
sbb
cs
or
int
lahf
cmp
inc
add
mov
xor
add
pushf
decl
or
aad
mov
daa
cmpl
test
lock
add
xchg
inc
lea
repz
addb
aad
in
add
mov
mov
inc
add
imul
jo,pt
adc
add
cwtl
pushf
mov
out
pop
call
popf
in
jb
xchg
mov
in
cmp
and
movsl
aaa
int3
mov
loopne
dec
addb
add
psubd
jne
pop
cltd
push
pushf
shll
cmp
or
pop
pop
cmpsb
inc
add
add
add
test
aas
in
ret
stc
adc
add
dec
fiaddl
jle
add
add
test
mov
mov
add
jle
cmp
cmp
jmp
into
cltd
sbb
add
pop
push
lcall
jns
push
into
and
dec
mov
dec
js
mov
push
sbb
mov
mov
mov
add
leave
xchg
leave
mov
mov
bound
in
fildl
lret
dec
and
es
mov
lcall
cmc
loopne
jne
xor
pop
inc
add
pop
movb
and
sbb
cmp
popa
outsb
adc
xchg
adc
add
mov
scas
or
mov
aad
lea
add
pop
inc
add
loop
int3
fwait
sub
outsb
sub
add
jae
mov
int3
push
add
or
mov
and
addb
mov
push
test
push
loop
mov
adc
or
xor
mov
add
sbb
push
push
mov
stos
add
cmp
andl
pushf
aaa
je
jnp
adc
xor
mov
icebp
mov
in
popa
and
push
pop
or
sub
sub
das
sbb
pusha
add
dec
or
pushf
jbe
mov
xchg
dec
inc
add
add
dec
dec
arpl
imul
mov
rcrb
or
movsb
loopne
fldenv
and
es
and
adc
fwait
inc
add
inc
add
cli
call
hlt
imul
pop
cmp
xchg
lods
xchg
sbb
cmpsl
xchg
pushf
xchg
jno
push
pop
adc
jge
mov
testl
xor
addr16
lcall
add
add
adc
add
stos
stos
sub
mov
add
pcmpgtw
sahf
xchg
adc
mov
fsubrp
push
cmp
dec
mov
xchg
xor
mov
je
ret
dec
aaa
imul
out
sbb
cmp
add
movb
pusha
add
push
push
jae
ret
mov
scas
movb
jl
fwait
not
inc
fidivrs
mov
into
dec
insl
jecxz
and
dec
sub
mov
add
or
and
cmp
imul
fsubs
stc
scas
js
jle
push
cmp
xchg
push
sbb
pop
cmp
icebp
adc
aaa
inc
mov
stos
jmp
mov
stos
fidivrs
dec
push
or
push
jo
repz
repz
jle
mov
aas
ds
popf
cmp
jl
lods
jbe
das
inc
add
push
pop
repz
ror
mov
add
addr16
add
add
loope
add
push
and
mov
add
sahf
aam
mov
in
out
mov
mov
sub
outsl
jo
mov
fs
cltd
push
sbb
xchg
cmp
xlat
fidivrl
aad
inc
add
pop
out
lock
add
xor
jne
in
out
jae
cmp
dec
jg
faddl
add
adc
popf
mov
push
imul
aaa
lods
push
adc
inc
add
addb
fs
sbb
cmp
aad
dec
jecxz
pop
pop
adc
imul
sub
adc
mov
sub
lods
scas
out
fs
dec
aad
add
aam
jge
or
or
mov
loope
call
mov
ret
repnz
aad
jp
and
pop
sbb
lods
mov
mov
out
in
mov
adc
repz
pop
sub
leave
jg
xor
pop
addr16
out
jne
fistps
lret
cs
addr16
sub
mov
mov
xchg
lret
sub
xchg
push
stc
loopne
je
xchg
pop
ficomps
add
inc
add
pop
popa
push
add
popl
mov
pop
out
xchg
push
xchg
adc
push
push
xor
add
mov
rcrb
lds
add
add
rcrb
xor
mov
mul
ljmp
inc
fidivs
inc
pop
inc
add
adc
add
sub
lcall
sbb
push
xor
add
push
cmc
je
dec
cwtl
cs
ljmp
xchg
xor
mov
add
pop
cmp
add
jne
inc
nopl
jo
out
push
xchg
sub
jge
fyl2xp1
sbb
scas
in
mov
mov
lcall
sti
pop
arpl
test
add
jle
adcl
popa
in
push
movsl
xchg
or
dec
pop
xor
adc
or
inc
add
and
rolb
fsts
add
fldl
jae
add
cmp
enter
jl
sub
add
push
or
inc
xchg
and
add
ret
add
xchg
push
popa
mov
stc
addb
adc
fwait
or
mov
mov
int3
addl
imul
pop
pop
pop
pop
mov
dec
dec
cmp
int
cmp
add
xchg
pushf
aam
lcall
cmpsl
sbb
push
or
mulb
sub
loop,pn
addb
leave
push
push
in
rcr
das
fisubrs
aam
xor
jb
cs
xor
mov
xor
pmaxub
aad
inc
xor
xor
inc
add
pop
pusha
add
sub
in
inc
add
jne
shrb
inc
add
push
and
sbb
sbb
add
add
xchg
mov
cmpsb
jo
dec
sub
into
push
clc
out
cltd
mov
xchg
push
lods
lea
shlb
jo
dec
arpl
data16
add
jge
push
add
dec
push
aaa
cmp
push
jge
mov
rcrb
int3
dec
jns
cli
inc
xchg
fcomps
or
add
lcall
dec
iret
push
pop
push
mov
lahf
ret
jg
sbb
xchg
cltd
pop
sub
test
mov
rolb
std
js
test
xchg
xor
shl
and
xor
lods
bound
jmp
fistpll
pop
ljmp
divw
jnp
jge
add
mov
shll
add
in
adc
jns
adc
lods
rolb
sbb
or
add
ljmp
xor
add
mov
dec
popa
std
and
mov
icebp
lods
scas
mov
leave
fsubl
xchg
adc
addb
mov
pop
push
xor
les
in
idivb
cltd
test
hlt
pop
ljmp
push
add
add
xlat
imul
adc
cmc
ret
sub
inc
sahf
rorb
jmp
jle
in
push
or
pop
int3
pop
jg
stos
gs
add
rcl
push
xchg
jno
notl
out
fdivl
push
xor
aas
adc
adc
cli
xor
loope
push
jmp
mov
and
scas
test
imulb
jne
xchg
jg
pop
fdivrl
sub
adc
mov
lret
clc
icebp
push
push
in
sbbl
jmp
lahf
and
mov
inc
sbb
insl
fstpl
pop
cli
inc
add
loop
jo
pop
and
inc
fists
sbb
pushf
sub
andl
aam
mov
pop
xor
mov
xchg
clc
in
jne
lret
repz
out
not
xor
in
pop
test
xchg
add
or
mov
mov
add
test
add
lock
mov
xor
xor
rcrb
mov
sub
xchg
jg
push
jmp
mov
mov
adc
mov
pusha
add
sub
xor
xchg
xlat
cmpl
ds
ret
aam
xor
shrl
cmc
leave
push
jmp
rcll
outsl
sub
add
ret
push
mov
and
int3
test
out
ss
mov
pushf
sbb
add
ljmp
sbb
arpl
imul
add
adc
pop
addb
push
jecxz
sub
addb
jecxz
mov
in
adc
add
dec
xchg
outsb
loopne
add
jno
data16
push
add
xor
mov
out
jp
xlat
cltd
rorw
leave
and
addr16
push
lahf
cmp
xchg
mov
and
fcoms
cmp
or
dec
xor
xchg
test
pop
dec
push
repz
push
in
inc
add
out
movb
xlat
inc
mov
cld
repz
add
xchg
pushl
mov
add
int
add
xor
add
jmp
jne
repz
push
sub
js
add
mov
add
inc
add
add
inc
add
ja
inc
jmp
jge
fildl
and
clc
adc
imul
pop
stc
fisubs
jns
test
xrelease
out
mov
mov
ljmp
fcompl
test
popa
inc
in
arpl
call
lcall
rolb
push
sub
mov
xchg
cmp
mov
push
bound
mov
adc
jae
fcompl
aas
fiaddl
call
and
sbb
inc
add
imul
jmp
push
rolb
mov
popf
aad
pop
test
dec
push
add
xor
xor
lahf
stc
insl
add
adc
cmp
add
lods
sub
into
aaa
idivb
dec
fwait
ret
divl
rcll
mov
lahf
hlt
sub
or
and
mov
mov
xchg
ret
cmp
mov
sbb
shll
dec
notb
inc
add
inc
add
aad
add
add
inc
add
pop
adc
leave
sbb
out
and
add
jmp
in
push
call
and
das
adc
inc
out
and
fisttpl
sub
in
mov
dec
dec
pop
inc
cmp
loopne
cmc
incb
stos
pop
sbb
test
pop
imul
jge
inc
ss
inc
add
cltd
daa
testl
add
or
inc
mov
repnz
push
and
scas
les
xor
inc
add
lcall
xchg
popf
test
pop
repnz
jns
jnp
pusha
add
ret
inc
add
into
add
scas
repnz
add
rolb
les
clc
jp
jp
add
dec
out
adc
nop
fdivp
fnstenv
sub
into
mov
push
pop
pusha
add
out
es
push
xor
leave
jmp
and
mov
and
insl
outsl
data16
int
out
imul
test
and
enter
mov
popa
lea
push
jp
mov
mov
pop
xor
test
imul
insl
mov
sub
sti
daa
jle
mov
cmp
and
xchg
das
mov
mov
jle
add
outsl
add
sar
je
cmpsl
pop
loop
jne
fisubs
xchg
xchg
sub
pop
or
jnp
test
pop
in
inc
sbb
ret
ljmp
cmpsl
adc
mov
pop
jl
add
repz
sbb
mov
lcall
xlat
push
pop
bound
lahf
add
stc
bound
movsb
and
jp
add
dec
cwtl
loopne
add
in
xchg
clc
mov
jmp
lock
pop
cld
sub
and
js
pushf
add
add
hlt
mov
mov
sarb
sub
add
inc
jno
xor
bound
sub
add
add
dec
jecxz
lret
ss
jmp
inc
add
inc
add
cmp
popf
jl
add
jp
pop
mov
ficoml
popf
js
std
lods
fs
sub
iret
mov
xor
dec
xor
loopne
sbb
test
push
test
mov
rclb
jae
scas
cs
push
push
push
addb
dec
loop
shrl
mov
add
xor
test
shrl
inc
mov
hlt
aas
jmp
bound
and
int
loopne
in
inc
movsl
hlt
fwait
bound
movb
push
shlb
push
mov
cld
pop
iret
gs
incb
sbb
adc
and
insl
add
add
sbb
or
jle
mov
xchg
popa
push
repz
inc
roll
les
outsl
in
jg
push
and
mov
and
fiadds
sub
mov
jo
pop
popf
es
out
jne
cld
pop
adc
mov
inc
add
ja
xchg
test
xor
dec
xchg
addr16
in
jnp
cld
cmp
adc
mov
add
pop
test
or
in
roll
add
arpl
shrb
leave
in
xchg
and
stc
xchg
lds
test
mov
rcr
addr16
adc
or
pop
adc
hlt
mov
sbb
jp
not
shrb
pop
mov
sub
xchg
or
mov
mov
jnp
aad
rol
cmp
ss
xchg
lret
scas
pushf
call
fsub
mov
cmp
jl
lret
inc
rolb
repnz
and
daa
lcall
mov
xchg
ret
into
jae
repz
addb
pop
popa
mov
fsubrs
enter
pop
addb
pushf
inc
adc
fnstenv
pop
mov
faddl
mov
cltd
movsb
xchg
popf
pusha
add
mov
lcall
pushf
addb
js
movsb
imul
addb
nop
pop
test
add
inc
add
mov
rclb
xchg
out
cli
out
mov
movsb
add
or
iret
pop
pop
push
xor
loop
test
repnz
fdivr
sbb
test
rorl
adc
sarl
or
aas
pop
push
inc
add
push
add
ja
jmp
data16
lahf
jb
adc
inc
jp
lret
inc
jae
in
dec
andl
mov
scas
cmp
sbb
in
inc
xor
in
push
iret
push
add
pop
and
popa
mov
push
mov
ret
and
push
lods
adc
addr16
xchg
sti
mov
xor
xor
pop
jg
pop
xchg
fstpl
adc
cmp
gs
lahf
scas
clc
call
pop
ror
out
js
and
and
lret
jecxz
push
sub
jmp
jne
loop
test
add
push
sub
inc
sub
pop
cmp
dec
inc
mov
mov
sbb
add
fadds
jmp
iret
or
imull
rolb
add
inc
add
mov
xor
imul
jno
aad
out
scas
jae
ss
vpshuflw
xchg
loop
outsb
mov
mov
mov
dec
inc
add
adc
insl
out
push
aas
or
xlat
es
fxch
andl
in
mov
cmp
push
ret
mov
add
mov
or
fistl
push
ret
pop
bound
ret
mov
add
mov
add
packuswb
arpl
clc
pand
pop
push
add
dec
mov
into
fucomip
and
inc
add
push
loope
rolb
aaa
jnp
test
ret
out
in
outsb
enter
xchg
addb
cs
inc
add
push
xchg
jge
orl
mov
sbb
fsub
mov
adc
in
sub
js
sub
add
add
jl
or
sub
pop
cltd
mov
arpl
adc
push
repnz
test
movsl
mov
lahf
aaa
lods
or
int3
insb
sub
adc
stos
add
call
pop
movsb
inc
add
jnp
add
and
dec
xchg
xacquire
or
ret
sbb
test
xlat
ret
das
pop
call
bound
cmpsl
or
or
add
pushl
jb
xor
mov
or
lods
jbe
add
inc
add
or
cmp
add
and
ja,pn
mov
mov
push
lods
or
sub
sbb
lea
add
pop
sbb
dec
push
iret
lcall
sbb
inc
add
shrl
mov
xor
imul
addb
xor
or
in
sti
pushf
popl
jmp
add
and
mov
int
push
in
push
push
pusha
add
into
dec
sub
stc
jl
sti
push
sub
lret
pminsw
shrl
jge
add
xchg
rolb
add
jns
add
add
or
pop
and
pop
movb
shll
add
lods
es
xor
add
iret
scas
add
dec
push
and
add
or
fnstenv
jmp
je
out
adc
push
mov
in
mov
lea
adc
pop
sub
jb
in
cmc
push
push
fcoml
and
data16
test
jmp
aaa
push
sub
loop
lea
ficompl
xchg
add
gs
dec
mov
jb
es
stos
std
inc
lods
bound
out
add
and
lea
ret
addb
cltd
in
scas
pop
push
lds
mov
add
cld
and
add
xchg
test
int
add
jae
dec
addl
repz
fiadds
lock
push
jbe
pop
mov
xor
ja
jo
push
xor
dec
xchg
test
push
xor
inc
les
inc
icebp
orl
cmp
out
in
ds
fnsave
xchg
imul
int3
pop
ficoms
fcmovnb
add
fcompl
repnz
pop
lea
pop
call
or
jo
jnp
mov
mov
outsb
push
inc
add
arpl
lea
jo
jle
lock
push
cmp
jae
mov
scas
or
mov
mov
xchg
sbb
mov
lea
adc
mov
dec
aad
insb
popa
ds
mov
lds
inc
inc
add
add
mov
sub
movsl
sbb
jbe
fisttps
in
fimuls
add
add
sub
loop
jg
aaa
mov
bnd
loopne
test
out
js
sbb
or
cmp
int
ja
out
and
add
jge
filds
add
je
les
push
fdivs
pop
loop
fisubl
mov
mov
push
dec
std
dec
adc
and
inc
inc
add
cltd
inc
addb
add
je
mov
xchg
fnstcw
push
mov
jle
insb
xlat
clc
pop
mov
push
add
aam
sti
fistpl
aad
adc
dec
push
jb
mov
repnz
popf
mov
xchg
aad
outsb
shll
std
daa
imul
divl
add
xlat
adc
add
jmp
aas
mov
data16
sbb
xor
out
in
hlt
test
div
sahf
je
adc
cmp
add
mov
xchg
sbb
lret
inc
add
cltd
gs
arpl
enter
jnp
xchg
cmp
pop
icebp
aas
mov
cmp
mov
bound
push
mov
pop
pushf
fs
dec
sbb
add
std
dec
pusha
add
je
fists
mov
fldt
aam
lret
imul
cmpsb
lret
and
je
mov
mov
outsb
xchg
jnp
mov
xor
test
jno
std
dec
inc
jb,pn
pop
shll
rolb
or
sbb
mov
addb
add
aaa
jle
add
je
add
repz
test
mov
mov
add
mov
xchg
testl
inc
popf
push
adc
cmc
rcrl
sub
lea
cmp
lods
icebp
mov
jnp
sbb
mov
stos
add
idivl
fisubrl
push
mov
jnp
outsl
adc
ss
add
jecxz
jbe
xchg
sbb
or
jno
cmpsb
push
sbb
ja
nop
cmp
mov
rorl
add
test
push
add
enter
enter
push
sbb
in
ret
shr
std
xlat
movb
jns
sbb
dec
adc
cld
xor
ljmp
jmp
cltd
lcall
testb
pusha
add
inc
jne
xor
addb
mov
addr16
movsb
mov
jmp
lea
imul
and
push
scas
cmc
lahf
js
and
inc
add
cmp
sub
mov
add
clc
inc
shll
std
notl
mov
add
adc
pop
insb
jge
mov
stos
inc
lret
dec
dec
fs
add
xor
mov
data16
inc
add
lods
fdivrl
xchg
sub
cwtl
mov
mov
dec
cmpsb
loope
in
push
inc
add
push
fidivs
iret
fdivp
jecxz
in
xlat
mov
dec
xchg
mov
cmp
mov
outsl
dec
adc
stc
mov
dec
fs
ret
inc
mov
ds
addr16
inc
popa
mov
add
insb
popf
sub
sbb
cmp
add
push
shlb
inc
ret
sahf
mov
ja
test
addr16
dec
inc
add
xchg
roll
sub
popa
arpl
dec
push
cmc
jne
sub
cmpl
sbb
int
fwait
push
jo
sub
movsl
or
add
pop
xor
fcomps
int3
sub
int3
pusha
add
and
dec
xchg
adc
rolb
add
sbb
mov
xchg
daa
add
mov
loop
pop
out
bound
dec
rolb
jne
jbe
add
cmpsl
repz
jle
add
ficompl
fiaddl
mov
mov
add
cmp
mov
cmp
in
sahf
fnstsw
fucom
lret
int
sbb
or
xor
inc
inc
add
ljmp
push
lret
inc
mov
mov
add
add
xchg
shlb
sub
sub
sbb
mov
popa
in
jle
test
cmp
mov
xchg
add
scas
xchg
addl
movl
repz
mov
mov
pop
arpl
add
inc
add
cs
jl
add
inc
add
xchg
test
cmp
test
pop
xchg
in
pop
xor
int
add
call
fmuls
or
push
leave
jl
adc
xorl
push
dec
les
ret
test
jo
movsb
and
pop
aaa
stos
mov
add
inc
mov
add
clc
cmp
inc
add
ds
xchg
pop
mov
or
sub
inc
push
mov
add
mov
mov
test
leave
jae,pn
loopne
push
aam
mov
pop
push
xchg
xchg
jp
mov
pusha
add
addb
shrb
adc
ljmp
fisttpll
stc
sbb
pop
mov
xor
pop
push
clc
mov
frstor
mov
arpl
mov
ret
shlb
add
leave
xchg
dec
jne
addb
or
inc
add
add
push
or
cmp
push
sbb
popaw
jmp
jge
addb
or
cwtl
out
std
imull
push
xchg
popa
dec
add
xchg
repnz
aam
xchg
dec
icebp
xor
mov
vprotd
push
inc
inc
add
test
movb
xchg
jmp
add
imull
sub
sub
push
mov
xchg
xor
popa
pop
repnz
mov
sbb
into
mov
bound
push
loope
jg
xlat
jno
imul
jne
add
inc
ret
inc
test
repz
jmp
add
mov
lahf
pop
jno
adc
call
decb
sbb
fdivs
adc
addr16
sub
jo
xchg
xchg
popa
pop
add
aas
cmp
add
mov
cld
adc
jnp
addb
sbb
repnz
in
sbb
sbb
sub
lret
hlt
test
push
sub
xor
into
xchg
mov
sub
cs
sbb
push
in
xor
add
sbb
add
jp
inc
ret
or
and
push
mov
pop
into
mov
xor
testl
movsb
inc
fstps
loop
ja
repnz
sbb
fcomp
fistpl
sub
jecxz
add
sarl
movsb
addr16
add
leave
les
xchg
pop
into
sti
or
sbb
xchg
leave
cwtl
xlat
push
das
mov
imul
movsl
nop
les
imul
push
add
pop
popa
ja
cmc
leave
stc
mov
mov
lods
mov
add
xchg
in
add
xchg
mov
add
int
idivl
add
mov
dec
push
sbb
xchg
cltd
popa
sar
jo
subl
clc
in
adc
xor
sti
pop
ljmp
in
sub
ret
add
mov
cmpsl
xor
inc
add
push
mov
icebp
iret
xchg
mov
movsb
ja
pop
mov
push
dec
xchg
xor
cmp
jb
popa
das
jns
cli
mov
addb
mov
mov
sbb
pop
mov
es
pushf
mov
sub
dec
add
adc
aas
bound
push
add
in
add
in
xlat
add
add
outsb
push
adc
add
cli
out
jle
or
add
inc
add
add
jmp
rolb
mov
add
test
mov
mov
gs
push
cmc
orl
cwtl
fs
jne
mov
add
stos
adc
stos
mov
sbb
xor
test
pop
sbb
or
mov
cld
fsin
sub
sahf
jne
clc
jp
pop
jbe
fdiv
xchg
icebp
mov
insb
cmpsb
jo
imul
mov
add
and
push
ja
add
addb
sbb
stos
dec
adc
ficoms
rol
add
sub
mov
sbb
push
ljmp
lret
pop
pop
inc
add
cltd
xlat
mov
cltd
testl
fs
bnd
mov
add
aas
xor
mov
push
js
mov
fldt
pop
or
and
dec
cld
xor
sbb
mov
das
lret
push
imul
sub
lcall
mov
les
shlb
xchg
hlt
lods
mov
scas
cmp
out
push
ror
inc
add
lods
hlt
addr16
adc
add
add
lret
gs
icebp
movsl
arpl
xchg
push
mov
jnp
add
add
and
pop
in
mov
mov
sbb
add
iret
aas
lock
ficompl
adc
out
nop
stc
mov
icebp
xchg
frstor
adc
fisubrl
add
gs
call
cmp
pop
idiv
push
sti
jecxz
add
call
fisubs
mov
int
mov
daa
ret
and
sbb
mov
int
sbb
push
mov
movsl
test
add
sub
insl
cld
popf
mov
adc
shl
mov
pop
push
inc
xlat
lret
loop
cld
hlt
addb
xchg
add
scas
out
scas
push
ja
push
add
sub
pop
inc
test
inc
ljmp
enter
lcall
add
inc
add
stos
int
cmp
mov
fpatan
jg
xchg
jno
aad
sbb
sbbl
inc
add
ljmp
pop
enter
out
mov
fcoml
inc
add
xor
std
push
xchg
cmp
rolb
pop
mov
inc
add
pusha
add
popa
dec
adc
add
loop
lahf
or
adc
pop
mov
adc
cmp
push
mov
ficompl
inc
add
mul
cmpsb
fwait
dec
inc
add
cwtl
jecxz
cwtl
mulb
in
xchg
dec
fdivrs
and
dec
leave
mov
push
add
add
sub
mov
pop
stos
lret
bts
mov
jae
xchg
orl
icebp
and
mov
pop
push
and
mov
ljmp
ss
cmc
ror
pop
jmp
iret
adc
or
test
jns
xorl
add
add
cmpsl
aam
ds
and
ret
cs
jno
sbb
in
mov
cmpsl
mov
test
fdivrs
das
mov
xchg
ljmp
cmp
and
sbb
add
out
dec
icebp
push
xchg
adc
push
xchg
push
xchg
fisttps
ds
pop
mov
in
nop
loope
and
dec
test
test
into
dec
fcoms
ror
fsubs
adc
pop
inc
add
mov
cmc
adc
add
testb
mov
outsb
test
repz
loope
fnsave
mov
clc
dec
pop
and
inc
add
leave
stos
movsb
add
inc
lcall
stos
push
dec
pop
cmp
mov
add
scas
or
add
dec
push
orl
stos
pop
sbb
xchg
inc
add
xlat
idivb
mov
mov
rorb
pop
and
and
addb
insb
cmp
test
ljmp
addr16
add
je
int3
and
cwtl
inc
add
lcall
stc
in
cwtl
lret
adc
pop
jle
add
push
push
pop
ret
xor
inc
add
in
lds
shl
out
lds
dec
inc
aaa
pop
mov
outsb
in
sub
mov
dec
lret
xchg
lcall
aas
aam
add
pop
ljmp
lea
add
fisttpll
push
rolb
mov
pop
add
dec
aam
dec
cmp
push
movsb
imul
pop
test
les
das
insb
push
call
dec
mov
ret
jo
mov
dec
movsl
cli
push
fidivrs
stc
scas
lea
in
rol
lock
jnp
mov
or
adc
push
and
sahf
mov
and
add
bound
add
adc
jmp
push
push
cwtl
nop
loop
imul
fadds
mov
xor
and
add
inc
aaa
pop
xor
jo
jmp
popa
je
jae
add
ljmp
add
addr16
or
add
cmp
dec
addb
cld
int
mov
in
and
dec
push
out
xchg
dec
xchg
jne
dec
xchg
lock
mov
lods
pop
add
pop
les
inc
cmp
pop
and
add
outsl
inc
xor
sbb
push
add
mov
cs
xchg
fimull
cli
inc
inc
cmp
mov
ret
push
mov
cld
push
sub
out
fstps
stos
inc
add
not
jge
sub
shll
faddl
stos
clc
ja
nop
sub
cmp
xchg
and
push
and
and
popa
ljmp
add
add
shlb
jno
loopne
scas
push
addl
push
xchg
mov
mov
or
aaa
int3
loop
pop
jnp
mov
in
xlat
add
clc
pop
pop
aas
ds
lds
adc
add
cmpsl
push
fdivl
fcmovne
push
pop
fwait
jl
jno
jecxz
add
mov
push
inc
add
pop
loopne
add
pop
xchg
jp
add
and
cli
lret
jo
pop
add
cmp
out
rorl
outsb
arpl
xor
ja
jp
and
xchg
inc
add
popf
cmp
add
ficompl
add
fisubrs
add
rolb
pop
out
pop
repz
xchg
imul
js
lret
push
sub
xchg
insb
xchg
data16
sahf
fsubrl
insl
ja
mov
add
test
dec
jae
xchg
in
shl
sahf
sbb
ja
xor
insb
xchg
gs
xor
lods
adc
rolb
lahf
movb
lods
or
test
inc
add
xor
rolb
cld
idivl
adc
sub
mov
bswap
jecxz
and
out
xchg
jp
int
cs
popf
outsb
addr16
mov
addr16
fisubrl
out
sub
scas
cmpsl
jnp
jbe
add
add
jnp
iret
adc
cmp
scas
mov
enter
insb
xchg
addb
mov
xor
add
jbe
test
dec
dec
push
je
push
mov
dec
shrl
call
sar
movsb
rcl
pop
adc
addb
bnd
incb
xchg
aam
les
bound
or
fnsave
out
cmpsw
ficoms
xchg
shrb
dec
add
mov
hlt
lds
incb
dec
cmp
xchg
cld
repz
loopne
pop
inc
add
mov
jae
sub
pop
fmuls
pop
out
cli
inc
inc
enter
rolb
in
add
and
sub
ja
add
dec
icebp
std
call
pop
negl
inc
jne
lret
popf
cmp
test
mov
add
clc
std
push
mov
addb
popf
jl
add
pop
je
cwtl
movsb
or
pop
scas
pop
in
add
dec
pop
lock
xor
sbb
mov
out
ret
sub
xchg
ja
fdiv
adc
hlt
mov
jge
dec
cmpsb
ret
flds
add
cmp
int
sbb
subl
cltd
je
or
adc
jns
inc
add
mov
mov
jecxz
lods
xor
insb
hlt
pop
lret
stos
sbb
out
movsl
loope
fwait
sbbl
pusha
add
dec
jecxz
js
cmp
push
call
add
dec
pop
out
sbb
mov
fisttpl
pop
and
fs
mov
inc
add
loopne,pt
imul
mov
gs
adc
pushf
stos
ret
mov
outsl
shr
jmp
xlat
cli
out
jb
pop
jb
mov
mov
test
or
dec
mov
lret
loopne
adc
add
ja
roll
sub
addb
lret
test
fdivs
push
sbb
sahf
jno
pushf
adc
pop
cltd
push
decl
stos
cmp
movb
add
aas
cld
mov
jb
xor
jp
sub
push
and
lahf
and
data16
stos
jno
xor
push
in
pop
cmp
xchg
add
mov
cld
out
xchg
mov
add
sbb
orl
sub
enter
imul
push
jp
int
inc
add
push
push
add
adc
stos
imul
mov
mov
or
mov
mov
int3
or
cmp
sub
ljmp
cmpsb
inc
add
popa
test
cmc
test
aaa
lret
xor
dec
mov
insl
popa
sub
add
aad
push
mov
or
cmpsl
sub
movsl
mov
jle
jecxz
xor
aad
mov
ljmp
int3
mov
push
push
jbe
add
jl
add
jmp
mov
mov
inc
cltd
insl
add
mov
outsb
sub
add
xchg
mov
jl
add
add
imul
add
scas
sub
xchg
loop
push
xchg
sbb
shrl
mov
add
xchg
jmp
fstpt
push
cmp
out
ja
ds
add
jl
xchg
pop
fistps
imul
jecxz
lds
fmuls
jg
lods
popf
mov
ljmp
and
aam
inc
add
fcoms
js
addb
fists
add
xor
shlb
clc
inc
add
xor
mov
scas
lahf
push
inc
inc
das
adc
adc
mov
or
imulb
imul
dec
sub
hlt
xchg
adc
iret
scas
cmpsb
jl
aaa
test
inc
mov
mov
dec
int3
mov
out
out
push
xor
in
jmp
insl
and
inc
add
maxps
mov
add
jmp
aas
sub
and
movb
adc
into
imulb
jg
add
addb
sbb
lea
jl
out
add
and
or
pusha
add
or
sub
sbb
xor
mov
cltd
jmp
add
int
add
jle
jl
jl
mov
or
mov
adc
push
stos
cli
xor
loopne
push
lods
lock
cmp
daa
sbb
push
shrl
or
pop
push
lcall
inc
fs
sarl
pushf
cltd
fisubl
repnz
lods
pop
ret
enter
les
into
inc
add
insb
pop
adc
scas
mov
dec
stos
add
add
sti
add
mov
movsb
and
lcall
inc
add
push
cmp
iret
inc
add
repnz
or
push
xor
pop
or
inc
add
jns
add
dec
icebp
pandn
adc
push
jle
loopne
jl
lods
in
jno
ret
cli
shll
add
jbe
mov
into
mov
dec
rolb
imul
adc
popf
sarb
movsb
mov
stos
in
or
jle
bound
mov
add
mov
inc
dec
dec
ret
into
testl
push
jl
xchg
js
fimull
dec
daa
clc
ret
push
pusha
add
push
pop
xor
ds
add
stos
push
and
add
call
sbb
push
sbb
aam
mov
push
je
and
and
icebp
sbb
cmp
sub
adc
push
lret
popf
adc
mov
arpl
push
mov
pusha
add
es
icebp
in
shl
mov
or
add
lods
aam
push
cli
push
out
cmpsl
sti
shrl
adc
mov
sub
fisubs
jno
jne
push
data16
pop
inc
inc
add
out
cmp
sub
into
loopne
pop
xor
xchg
in
push
inc
cmp
sub
push
int
add
andl
add
enter
fmull
test
adc
clc
arpl
fldcw
xchg
imul
add
xor
xor
sti
cmpsl
jo
lret
inc
add
negl
inc
add
fimull
scas
sbb
sbb
jg
add
inc
and
cs
outsl
mov
xchg
pop
mov
mov
test
jmp
dec
xor
push
ret
lret
cmp
out
jl
push
add
movsl
mov
xchg
inc
add
pop
xchg
cmp
jne
add
vsqrtps
mov
add
add
data16
add
add
sbb
and
inc
inc
add
xchg
push
sub
orl
or
sub
cmp
add
mov
rolb
jecxz
pop
pop
hlt
pushf
dec
cmp
lock
cli
pop
sub
mov
std
fstpt
jne
sub
cltd
sbb
icebp
push
push
sti
add
and
ss
stc
fldcw
add
mov
push
cmp
add
popa
ret
mov
call
mov
outsl
lds
xor
out
imul
aam
repz
xor
outsb
or
inc
outsl
cld
sbb
pop
mov
movsl
js
fcmovnb
add
push
mov
addr16
mov
das
and
sub
push
or
imul
jge
xor
add
into
sti
xchg
cmpsb
xlat
icebp
mov
and
cmp
mov
outsl
fs
add
pushf
dec
jo
lahf
jae
mov
lahf
bound
jo
cmp
pushf
dec
sub
out
cmp
mov
mov
in
sbb
add
je
xlat
roll
mov
sub
add
mov
sbb
adc
imul
mov
inc
xchg
int
xchg
inc
add
das
data16
into
aad
push
xor
add
lods
mov
dec
cmp
test
inc
add
std
xor
dec
pushf
loope
je
test
cmpsb
outsl
and
pop
incb
daa
dec
or
add
hlt
inc
test
lods
cmp
add
or
push
add
addb
add
repz
ficomps
xor
adc
mov
enter
cmp
inc
add
jo
push
mov
cmpsb
xlat
shr
stos
or
mov
and
sti
or
loop
sbb
daa
enter
lcall
fcmovnb
add
xor
mov
lods
ljmp
add
push
lret
outsl
cmpsl
cmp
fsubr
addr16
jno
adc
jbe
cli
inc
add
mov
add
sti
jmp
dec
cmpsb
cli
imul
pop
adc
repz
mov
ret
testl
aaa
mov
mov
insb
mov
mull
xor
jge
out
push
add
fs
xchg
jae
cmp
mov
jne
add
popa
and
cmp
add
lods
xchg
mov
hlt
inc
push
dec
xchg
xor
enter
je
repnz
leave
xor
mov
pop
subl
popf
repz
jl
adc
sbb
lds
shrb
outsl
ret
push
xlat
pushf
ja
jne
fs
mov
es
push
fstpt
iret
xor
push
adc
cmpsb
xor
filds
add
bound
pop
and
imul
dec
out
js
lock
pop
and
mov
fisubrl
sub
loopne
or
cltd
jb
jecxz
sbb
repz
sub
add
jge
rcrl
stos
sbb
mov
jno
rcrl
add
lret
jae
test
pop
stos
mov
lret
cmp
andl
scas
pop
movsl
repz
cmc
sub
lea
pop
imul
adc
cs
lea
jnp
addb
cmp
repz
push
test
mov
add
sbb
outsl
xchg
fbstp
pop
ret
jb
cwtl
jg
and
cmpsb
pop
pusha
add
xchg
add
inc
add
int3
dec
addb
imul
les
xchg
sti
and
stos
mov
popf
mov
aaa
xchg
ljmp
shll
cmp
dec
aas
fwait
push
rorl
mov
and
hlt
mov
sbb
movsb
aad
xchg
pushf
xchg
mov
cltd
pop
popf
jae
int3
inc
fiaddl
push
rolb
xor
sbb
ja
aam
inc
add
add
inc
add
pop
rolb
mov
xchg
mov
push
out
dec
jge
clc
jecxz
je
mov
mov
popf
mov
addb
sub
inc
jle
add
or
add
insl
data16
mov
push
add
mov
pushw
sbb
pop
aas
pop
push
cmp
pop
sbb
xor
mov
dec
std
mov
outsb
movsl
stos
mov
daa
insb
add
sbb
and
test
add
test
movsl
xor
roll
je
ds
in
pop
and
enter
fs
add
nop
xor
loop
sti
shlb
stos
dec
lahf
mov
js
pop
xchg
outsl
call
scas
das
ljmp
cld
test
xchg
cmc
jp
fldt
je
adc
nop
sbb
mov
pushf
pop
xchg
fildl
retw
lcall
lret
mov
lret
pop
sub
add
push
add
test
add
nop
mov
push
mov
gs
pop
adc
mov
xor
in
add
add
cmp
cld
mov
lret
add
into
in
cmp
add
in
enter
addr16
sub
mov
jp
cmp
enter
jg
pop
iret
cwtl
or
movsb
push
or
mov
imul
ss
pop
mov
bnd
mov
shrb
les
in
jecxz
add
adc
mov
adc
idiv
cmc
mov
jae
stc
js
add
inc
dec
and
popa
inc
pop
fstps
lret
lret
mov
scas
sbb
cwtl
push
adcl
in
mov
mov
inc
add
fwait
dec
sti
adc
scas
shrb
xchg
cmp
addb
movzbl
les
js
call
test
jno
lods
and
dec
sub
daa
jnp
dec
imul
pop
repz
adc
aam
rorl
jno
add
push
or
pop
xor
dec
test
adc
sbb
stos
loope
add
sbb
mov
test
xor
cwtl
test
mov
stos
xor
mov
loopne
adc
arpl
cmp
je
xchg
lods
xchg
rcrb
pop
imul
add
shrl
sbb
xor
cmc
sub
incl
lret
push
pop
ret
fwait
xlat
jnp
jo,pn
movsl
popf
jecxz
pcmpeqb
or
add
add
xor
dec
setb
mov
add
dec
add
and
xchg
sub
add
out
mov
loopne
xchg
cwtl
mov
mov
add
jl
repz
stos
dec
push
jno
ss
ljmp
dec
xchg
mov
leave
addr16
pop
mov
movsl
sti
push
push
rolb
xchg
mov
loope
jns
sbb
fstps
push
movsl
call
xor
jo
into
cltd
lds
scas
mov
leave
out
jae,pn
pop
pop
rolb
mov
or
fisubrs
lret
popa
bound
xor
nop
mov
mov
pop
push
je
add
adc
scas
mov
movsl
xor
inc
dec
out
push
nop
clc
cs
fistl
or
mov
addr16
sar
add
fxch
popa
addr16
add
or
jg
stc
andl
sub
iret
mov
xor
jae
loopne
add
cmpl
add
add
xchg
inc
add
add
add
mov
sub
xchg
push
aaa
inc
add
cmp
das
out
movsl
insl
dec
lds
add
jle
addb
mov
int
jae
imul
dec
or
pushf
ret
lahf
in
std
mov
xor
fisubl
or
in
pop
in
iret
sub
mov
fadds
cmc
mov
jmp
xchg
mov
js
add
popa
and
pushf
cmc
pop
mov
subl
test
rcl
hlt
mov
push
mov
mov
rcrl
je
rorb
pop
or
xchg
test
negl
jnp
test
addb
pop
cmp
dec
cmp
out
lret
sub
mov
sbb
inc
dec
mov
add
mov
les
stc
add
lods
push
or
ss
add
add
iret
push
fstp
xchg
fs
sub
add
outsb
inc
add
cmpsl
out
adc
mov
pop
jmp
push
add
ljmp
subl
imul
and
cmp
int3
xchg
stc
mov
out
jns
js
repz
ja
movb
jbe
adc
insb
and
bnd
xchg
lahf
push
pop
cltd
idivl
or
jge
data16
cmp
xchg
and
add
pop
in
fidivl
or
fstpt
cmp
jp
sub
xchg
pop
gs
add
pop
in
addb
sahf
aad
in
data16
jmp
xchg
xlat
mov
add
dec
popa
aas
aad
cmpl
addb
addb
mov
push
scas
xchg
pusha
add
sub
push
outsl
icebp
push
dec
shlb
sbb
jp
push
add
inc
js
add
mov
nop
mov
add
or
pop
xchg
pop
rcrb
xor
in
repnz
pushf
dec
sahf
fsubrp
adc
les
push
ret
lods
pusha
add
adc
and
arpl
sub
inc
add
mov
mov
mov
add
les
mov
fnsave
jno
test
adc
insb
mov
add
test
jo
xor
in
adc
scas
ljmp
or
addr16
mov
je
add
jp
sarb
xchg
dec
push
push
cmp
jle
pop
sub
lret
daa
cmp
mov
in
push
cmp
push
xchg
xchg
xchg
dec
addb
icebp
ja
cmc
mov
add
call
loope
addl
stos
addb
add
cmp
mov
cmpsb
mov
add
add
mov
pop
fucomip
subl
in
dec
inc
xor
xchg
inc
in
aam
xchg
or
cmp
add
add
push
add
mov
dec
ret
fstpt
add
jae
mov
xor
xchg
and
loopne
jnp
inc
xchg
loope
hlt
les
addr16
push
dec
sub
stos
sub
jecxz
push
lcall
add
hlt
dec
inc
add
leave
add
leave
in
movsb
paddd
in
add
test
mov
sahf
dec
cmp
and
es
and
jmp
ret
addb
xchg
pop
push
cld
in
mov
addb
mov
hlt
out
addb
aad
out
pminub
ss
dec
cmp
enter
cmpsb
adc
add
jae
loope
jl
sbb
mov
mov
into
out
jl
add
fwait
sub
add
std
mov
loopne
jns
nop
xlat
rolb
add
mov
push
xor
mov
cmp
sahf
mov
mov
lret
mov
idivl
push
jnp
mov
cmp
hlt
inc
push
mov
pop
movb
add
aas
cmc
rolb
fmull
lds
add
dec
ret
lret
ret
aas
jle
inc
xor
mov
adc
jae
mov
test
cmp
pop
icebp
arpl
mov
jmp
in
push
outsl
pop
rclb
and
ss
and
pusha
add
adc
pop
push
sbb
clc
jecxz
mov
inc
inc
add
jno
inc
jnp
loope
pop
lret
addb
mov
loope
addr16
insb
adc
mov
aam
mov
cmpsb
jae
stos
fwait
data16
mov
lock
sbb
adc
pop
adc
add
lock
ja
fwait
jno
enter
andl
pop
aaa
adc
pop
cli
xor
addr16
mov
movsl
add
jmp
or
testb
outsl
inc
sub
add
adc
das
mov
or
push
mov
addb
shlb
xchg
cmp
cltd
sub
pop
or
xchg
enter
sbb
sahf
cld
loopne
test
call
in
pop
xchg
dec
add
stc
mov
xlat
xor
dec
inc
add
in
mov
push
or
sbb
mov
leave
push
cmp
ret
bound
xor
fisubrl
mov
jno
adc
inc
add
dec
add
ficoms
adc
add
dec
enter
mov
aaa
aaa
adc
stc
jp
add
imul
mov
arpl
fldcw
adc
cwtl
movsl
or
inc
xor
jmp
inc
nop
pop
adc
repnz
fs
loopne
and
push
or
add
jmp
jbe
insl
ret
frstor
add
xchg
mov
pop
pop
scas
mov
dec
xchg
jno
add
jb
add
jg
dec
jnp
push
xor
lret
lods
jl
cmp
je
jno
sub
daa
scas
sub
ds
mov
push
hlt
jbe
mov
test
in
je
jb
cmp
inc
mov
and
filds
or
push
jl
dec
jb
push
mov
incl
mov
cmp
stos
ss
jge
daa
mov
notb
xchg
adc
add
hlt
into
and
cmc
ficompl
push
jae
in
xlat
clc
movsb
inc
add
add
shll
inc
add
out
fimull
cmpsb
insl
dec
pop
lds
inc
add
daa
shlb
and
add
and
xchg
in
mov
xlat
imul
scas
imul
ljmp
js
jmp
add
cs
ret
xchg
idiv
jb
dec
cmp
add
lret
add
stos
pusha
add
xchg
cmpsl
mov
imul
dec
lret
dec
dec
cmp
xchg
sub
popa
scas
jae
pusha
add
jnp
pop
pop
lds
idivb
jecxz
arpl
negb
ret
movsl
cmp
add
or
mov
xchg
mov
jb
mov
add
imul
mov
loop
mov
xor
mov
loop
scas
dec
ljmp
cmpsb
mov
mov
inc
add
add
mov
lock
or
xchg
mov
insb
cli
imul
lcall
lds
jno
jl
jb
add
rol
add
xor
sti
test
clc
xchg
popa
mov
add
fxch
or
cwtl
jg
inc
add
mov
and
inc
movb
dec
xchg
in
nop
jecxz
out
hlt
fdivrs
cmc
addr16
cli
xor
jae
popa
jge
sub
push
mov
add
push
or
inc
add
inc
or
addr16
test
popf
daa
sbb
sub
add
addb
cmp
ljmp
xchg
jnp
or
xlat
bound
aas
xchg
jo
hlt
push
xchg
or
pop
outsb
push
aam
pop
and
xchg
fdivs
dec
push
aas
add
popf
mov
ret
mov
xor
fmuls
dec
add
dec
mov
shlb
add
xor
jg
aad
sub
sti
adc
add
add
adc
inc
cmc
xor
adcl
and
aam
mov
cmp
cmp
shrl
push
mov
call
lods
cmpsb
mov
cmp
test
ret
lea
or
lds
ljmp
fists
mov
adc
lahf
pop
jnp
fsubs
pop
aam
test
cmp
in
adc
stc
ss
les
addb
inc
sbb
lret
rep
push
jp
mov
mov
imul
push
dec
std
pop
xchg
xchg
push
add
sub
add
mov
mov
xchg
outsl
int3
cmp
jae
jbe
inc
add
imul
jb
jb
sbb
add
cmp
or
mov
flds
int3
lods
fstps
xchg
inc
add
mov
jo
add
xchg
lcall
lret
cmp
push
or
repz
cmp
jg
ss
sbb
cli
testb
cmp
or
ss
loopne
pop
imul
popf
rolb
add
mov
pop
cmpsl
push
or
fildll
dec
xchg
outsl
add
cmp
adc
hlt
jae
adcl
sbb
mov
fstpl
aas
sbb
mov
add
call
jo
lea
filds
sahf
into
lods
sub
jbe
jns
sbb
arpl
decl
imul
sub
jge
addb
popa
js
xchg
mov
outsb
mov
and
dec
and
jo
dec
xchg
es
divb
bound
arpl
popa
mov
jbe,pn
pop
ja
xchg
decb
aad
add
mov
in
and
outsb
data16
and
outsl
movb
push
inc
jno
mov
jo
movq
mov
sbb
mov
add
rcl
std
jne
jns
push
cltd
sbb
loopne
jnp
icebp
imul
gs
add
in
xor
in
clc
dec
xchg
fldt
lods
dec
sbb
ficomps
jmp
pop
popa
sar
sbb
in
ds
xor
and
inc
js
jmp
mov
mov
pop
add
xchg
dec
movb
lret
add
jb
imull
add
jg
inc
pop
rolb
mov
scas
in
aaa
jg
ds
pop
mov
push
int
int
nop
sbb
pmaddwd
stos
cmpsl
movb
ljmp
or
sti
pushl
add
ret
xchg
sbb
pop
mov
je
nop
xchg
dec
dec
mov
xchg
mov
add
pop
and
ret
add
push
inc
add
mov
arpl
ror
in
int3
and
outsl
push
shlb
leave
sub
mov
loopne
sahf
pop
xchg
and
cmc
xchg
sub
into
cmp
add
mov
insl
scas
push
ficomps
add
add
aas
sbb
inc
bound
lds
out
pushf
lret
decb
out
js
sub
or
pop
orl
shll
add
sub
xor
mov
sub
inc
add
add
and
rorb
add
push
shl
sahf
roll
aad
cmc
jbe
outsb
jo
adc
orl
mov
movb
popa
ja
xchg
and
mov
sbb
out
or
xor
mov
aam
and
or
dec
inc
add
repz
push
stc
jns
mov
sbb
int3
insl
push
nop
cld
js
jae
test
jbe
insl
add
add
insl
scas
xor
sub
jecxz
popa
stc
movb
cmc
pop
jmp
mov
movb
mov
bound
pop
add
push
add
or
arpl
mov
jmp
cld
jecxz
add
mov
adc
sub
add
add
mov
dec
ja
inc
add
push
push
jb
fistps
shrl
dec
pusha
add
jecxz
outsb
push
sbb
stc
pop
and
scas
sub
jl
or
xorl
sbb
popf
mov
add
adc
mov
sbb
xor
bound
arpl
add
int3
mov
fsubrs
inc
add
stc
idiv
inc
add
and
inc
add
sbb
nop
mov
call
add
enter
sub
jno
sub
sahf
xor
and
mov
add
inc
add
xor
jecxz
add
inc
add
lcall
cmp
scas
and
ja
add
adc
xor
fmuls
fwait
stos
mov
push
xchg
test
fldenv
fisubs
imul
je
insb
cwtl
mov
add
inc
add
mov
leave
imul
pop
mov
ss
mov
jge
pop
in
sub
jns
scas
push
or
es
iret
mov
jnp
int3
loopne
dec
xchg
and
jbe
inc
push
fstl
outsb
lock
mov
in
add
xchg
mov
jnp
xor
sub
or
pop
mov
jmp
inc
into
je
dec
sub
sbb
xor
ljmp
test
lock
cmp
jge
push
daa
dec
outsl
add
cmpsl
test
sub
and
dec
mov
and
mov
test
inc
add
add
addr16
std
arpl
mov
xchg
pop
nop
xor
sahf
mov
pop
mov
adc
dec
sbb
pop
adc
dec
push
cmp
mov
cmp
add
jle
add
out
cmp
scas
loop
rcll
add
mov
add
adc
jae
xchg
xor
add
xchg
subl
or
jo
in
out
inc
inc
add
outsl
int3
or
add
and
sarb
jg
scas
cs
sub
sbb
addb
jecxz
rolb
mov
add
pop
je
inc
add
sbb
add
xor
mov
push
js
aam
shrl
jns
dec
test
sbb
push
call
add
repz
iret
andl
rolb
lret
das
pop
adc
or
xor
std
fisttpll
in
cmp
adc
mov
push
sub
add
leave
in
xchg
sbb
out
fcomp
int
push
scas
out
in
pop
sub
pop
add
aas
inc
add
jne
inc
add
icebp
les
les
movsb
sub
out
push
imul
add
push
dec
lahf
mov
addb
pop
imul
rorb
arpl
sahf
sbb
mov
fdivl
mov
jo
add
arpl
inc
cmp
sub
cmp
mov
hlt
mov
dec
ret
cmc
xor
in
mov
jecxz
insl
dec
add
pminub
outsl
add
lock
pop
popa
jmp
sub
sub
div
lds
add
addr16
mov
mov
mov
push
sbb
addb
push
pop
loopne
rcll
je
popf
loop
jle
leave
imul
fdivr
jbe
clc
fldcw
cmp
add
add
ficomps
mov
adc
inc
notl
add
shll
cld
dec
add
add
add
stos
movb
inc
add
add
add
cmp
mov
and
jns
movl
mov
sahf
movsb
pop
mov
addb
push
cwtl
lret
sbb
js
mov
stc
loop
in
inc
lcall
mov
insl
mov
or
adc
fnstsw
rclb
shlb
fsubs
cmp
popf
outsb
popf
jle
mov
add
adc
mov
outsb
dec
stos
xchg
sub
adc
rcrl
std
test
cmp
push
clc
pop
imul
mov
cltd
mov
mov
jo
jmp
push
mov
jns
add
push
cmp
icebp
lods
rclb
enter
lds
in
insb
in
fmuls
dec
mov
xor
pusha
add
fcompl
push
daa
mov
outsl
adc
sbb
out
add
gs
das
or
in
push
xor
mov
jnp
sbb
adc
xchg
sahf
xchg
xchg
pop
mov
shrb
sbb
xchg
movsb
jnp
call
add
or
je
fsubr
and
imul
and
sub
je
xor
jecxz
insb
lret
mov
dec
xlat
out
int3
mov
icebp
fmuls
add
mov
inc
add
push
push
in
or
call
leave
cmp
jnp
pushf
ficoml
fists
xchg
cli
and
xchg
shrl
add
stos
movsl
cmp
std
in
jg
xchg
mov
adc
lcall
add
mov
inc
pop
in
fs
jae
rorl
arpl
push
cmp
data16
push
js
add
test
andl
add
push
and
imul
inc
add
pop
xchg
pop
dec
jp
lret
fldln2
jle
in
rol
stc
jns
pop
pop
clc
shl
mov
fmuls
cwtl
ljmp
inc
int
shl
rolb
das
jge
push
cmp
decb
lret
jp
movsl
clc
jno
cmc
mov
jb
sbb
add
xlat
data16
out
rcrb
fwait
int3
mov
mov
repz
pop
pop
jmp
fs
cmp
xor
and
fisubl
add
push
loopne
fildll
dec
mov
mov
xor
add
adc
add
xchg
addb
dec
stc
jp
xchg
xchg
cmc
add
cmpsb
pusha
add
rcll
push
cld
adc
outsl
rolb
sahf
mov
push
insb
pop
dec
out
mov
inc
add
jns
testb
add
jecxz
pop
in
fmull
imul
sbb
cmp
add
loope
pop
aad
bnd
into
dec
fldenv
adc
mov
jns
mov
sub
and
int3
ljmp
add
lahf
xor
cwtl
sub
fstl
bound
sti
outsb
push
in
into
adc
inc
shrl
aam
push
adc
dec
add
popa
sar
mov
push
adc
add
das
adc
xor
push
loopew
push
sub
push
xchg
or
out
sub
jne
jbe
add
out
xchg
das
jl
jecxz
dec
inc
arpl
out
mov
out
add
shrl
shrb
aas
insl
cmp
sbb
jp
fwait
test
daa
aam
leave
in
imul
in
cli
dec
xchg
js
sarb
lock
add
or
lret
ss
adc
mov
pop
and
xlat
scas
cli
movsb
push
fcmovu
dec
mov
mov
or
aam
testl
jmp
jl
data16
in
andl
outsb
rol
or
sar
push
lret
gs
pop
jmp
leave
add
push
or
dec
adc
in
pushf
scas
jl
popf
fst
loopne
js
sub
xlat
clc
add
hlt
dec
pop
xchg
adc
and
dec
test
loop
xor
jns
pop
dec
mov
fdivr
fiadds
leave
add
fdivrs
loope
in
inc
add
push
movb
dec
jge
out
and
loop
jecxz
cmp
pop
mov
sub
int
and
jmp
gs
jb
push
daa
out
lock
jne
adc
adc
mov
add
push
add
jp
sub
mov
xor
fisubl
mov
cmp
test
orl
cmp
cld
xchg
lods
pop
in
jns
dec
sub
imul
push
or
xor
popl
sbb
sub
xor
clc
dec
dec
les
mov
mov
jno
jnp
aas
adc
lret
popa
jnp
sub
in
scas
adc
mov
pusha
add
dec
xchg
jne
in
rcll
mov
cwtl
dec
push
push
jle
and
loope
int3
jae
sbb
jg
rolb
xchg
push
adc
mov
popf
inc
inc
repnz
or
sub
pop
je
out
loop
jp
mov
ja
je
pop
inc
add
cld
iret
jg
xlat
pop
lods
ss
ljmp
xchg
pop
jnp
addr16
pop
mov
fiaddl
jmp
shll
inc
ret
add
pop
xchg
jae
inc
mov
xchg
mov
push
inc
int3
sub
inc
mov
loopne
dec
add
push
roll
adc
sbb
ss
mov
or
or
add
mov
adc
out
insb
and
add
jp
mov
add
xchg
cmpsb
fwait
test
xor
outsl
cwtl
mov
cmp
mov
inc
add
inc
inc
add
je
mov
jl
or
loopne
in
mov
xchg
das
fsts
and
sbb
push
lret
gs
gs
icebp
push
shlb
mov
mov
add
inc
sbb
push
xchg
xchg
xchg
loopne
fdivrp
loope
test
nop
lods
daa
sub
mov
mov
loopne
and
jo
add
dec
iret
clc
lea
arpl
sbb
fwait
xchg
jg
push
sahf
js
or
ds
jne
in
xchg
push
pop
and
push
add
jno
pop
ret
pop
in
fcoml
in
lds
movb
pop
push
add
dec
jno
jge
lods
ds
inc
add
in
loopne
or
hlt
scas
xor
or
lods
xchg
add
jbe
aad
sub
ffreep
lcall
cmp
add
shlb
xchg
and
outsb
inc
and
testl
mov
adc
rolb
push
test
and
loope
xor
add
lds
add
jmp
and
ja
rcl
in
sbb
loopne
pop
shll
adc
add
sbb
push
add
mov
fstl
aad
add
mov
addb
add
jns
push
sahf
and
add
mov
jmp
xchg
fstcw
cmp
add
ja
jne
add
stos
adc
sbb
lret
imul
test
ja
add
inc
mov
out
les
adc
sahf
and
dec
xchg
js
clc
movsb
sbb
vpunpckldq
jge
sbb
stc
ds
ficoml
outsl
testb
dec
xor
shll
pop
imul
rolb
mov
enter
idivl
pop
enter
add
and
data16
mov
scas
and
push
push
adc
lahf
gs
pop
orl
pop
rorb
lock
jp
xor
cmp
add
or
decl
sti
add
jmp
fidivs
int
add
mov
xchg
sub
stos
push
cmpsl
jnp
in
inc
pop
notl
and
and
fwait
pop
adc
data16
cltd
ja
pop
das
mov
pusha
add
jnp
out
sbb
add
loop
add
std
sbb
dec
pop
addb
lods
clc
ljmp
paddsb
fdivr
xlat
les
add
and
icebp
jo
jne
repz
pop
movswl
jne
push
testl
cltd
sbb
sub
jl
push
aam
add
les
out
iret
outsb
dec
fisttps
mov
mov
cld
inc
or
mov
cli
add
cmp
jl
adc
ret
aas
repz
dec
call
pushf
sbb
js
mov
imul
mov
add
bound
or
cmpsl
xlat
xchg
and
mov
test
pop
push
xchg
andl
adc
pop
daa
scas
cmpl
push
lock
sbb
out
dec
repnz
add
sbb
mov
mov
imul
cld
cmp
fwait
addb
lea
xchg
jp
mov
dec
push
jmp
jns
push
adc
sub
pop
lcall
fcomps
sbb
into
push
testl
mov
push
rorl
sbb
sub
add
push
cmpsb
jge
rclb
mov
fwait
dec
loopne
sbb
pop
ds
add
lcall
add
sub
cmp
add
adc
fisubl
mov
outsl
mov
xchg
lcall
pusha
add
insb
xchg
sub
add
lock
mov
add
idivl
into
or
adc
int
aas
iret
mov
popa
addr16
sti
call
lods
popa
sub
push
sahf
loopne
add
rolb
jbe
ret
mov
pop
jp
ret
les
frstor
call
sub
hlt
pop
mov
xchg
and
push
add
push
aas
repnz
add
xlat
xor
insl
pop
pop
pop
shrl
ret
cmp
jb
cli
repnz
push
sbb
lods
cmp
inc
add
inc
mov
lock
aas
sub
mov
pop
bound
out
pop
mov
push
outsl
inc
add
xchg
loopne
data16
xchg
xchg
test
lahf
sub
mull
dec
jge
ficompl
cmp
adc
jge
rcl
lods
addb
add
nop
sub
push
dec
inc
adc
xchg
jle
negl
aad
inc
add
xor
int
stos
jne
sbb
mov
aas
nop
adc
xchg
mov
ret
push
pop
xchg
sub
adc
outsl
test
roll
dec
pop
icebp
rcrl
stos
ja
cmpsl
clc
out
movb
push
pop
loop
int3
fiaddl
mov
lahf
lea
pushf
lods
movsl
hlt
ret
lock
mov
cwtl
xor
add
pop
or
jne
inc
add
xor
les
jne
scas
in
imul
cmp
addb
push
and
jne
out
pusha
add
popf
inc
pop
ss
jmp
and
mov
ret
mov
addb
lds
bound
fldcw
pop
popa
pop
ss
sub
es
fisubrs
cmp
dec
rcrb
pop
dec
loope
add
add
mov
scas
mov
mov
add
add
inc
add
aad
cmp
add
or
or
push
lods
jns
pop
dec
push
xor
out
into
fs
push
jge
add
pop
sbb
xlat
fsubrl
frstor
popf
push
jns
sub
push
and
call
rorl
fcmovnbe
sub
xor
in
cmp
jne
repnz
mov
hlt
das
lret
cli
ficomps
scas
xor
pop
push
std
push
int3
jl
mov
in
pop
mov
add
adc
into
aas
add
cmc
dec
fidivrl
movsl
icebp
xchg
insb
inc
pop
jmp
inc
add
mov
mov
sub
fs
or
ljmp
xor
insl
popf
mov
adc
popf
mov
adc
and
add
fcmovb
add
or
loopne
push
dec
xchg
add
mov
cmpsb
xor
jae
scas
pop
inc
lahf
mov
test
aam
xchg
dec
test
imul
call
add
add
push
outsl
mov
or
repnz
jp
stos
and
mov
loope
cli
call
in
test
xor
jmp
cmpsb
pop
daa
insb
lahf
aas
cltd
aad
xor
jae
add
jge
pop
inc
add
stc
popa
jl
adc
adc
addb
jg
into
out
lahf
adc
pop
xchg
cwtl
sub
pop
int
sbb
fdivs
add
fwait
imul
sub
xor
xchg
loopne
add
popf
aam
mov
mov
mov
mov
pop
repnz
scas
mov
adc
in
xchg
movsb
fldcw
mov
mov
mov
xchg
loope
das
pop
adc
js
xchg
add
das
push
popl
repz
js
push
lods
jge
pop
dec
mov
adc
add
mov
add
jb
xor
add
push
stc
jb
cmp
add
add
add
in
sbb
add
xchg
add
cmp
add
push
stc
jb
rcll
add
add
pop
nop
jmp
add
adcl
popf
mov
stc
jb
mov
add
add
jmp
inc
add
add
popf
add
stc
jb
add
rcr
add
adc
mov
stc
jb
add
jne
push
push
mov
xchg
ret
add
add
movb
pushl
stc
jb
pop
inc
add
adc
je
stc
jb
add
nop
jmp
add
xchg
add
stc
jb
xchg
jl
mov
add
adc
mov
stc
jb
add
add
mov
stc
jb
jnp
push
pushf
je
stc
jb
xor
add
add
nop
jmp
roll
sub
inc
fcomps
push
stc
jb
add
insl
add
cmc
push
inc
lds
add
stc
jb
add
add
stc
jb
insl
add
je
cwtl
add
push
mov
xchg
ret
and
add
jmp
xchg
mov
and
iret
mov
xor
add
stc
jb
iret
add
add
mov
xchg
ret
add
xor
test
add
nop
jmp
add
dec
xchg
popf
mov
stc
jb
add
add
and
imul
stc
jb
sub
xchg
add
jecxz
cmp
jmp
add
mov
stc
jb
fsub
add
sti
add
or
adc
add
add
add
mov
mov
xchg
add
add
jnp
xor
ljmp
addb
stc
jb
insl
add
or
jne
nop
jmp
jne
fcmovnb
sti
push
adc
add
push
sbb
adc
jmp
add
xor
rclb
cld
inc
add
fildl
add
add
cmpsl
pop
pop
stc
jb
or
dec
mov
jb
add
and
add
add
or
add
stc
jb
add
out
adc
and
push
mov
xchg
ret
add
add
stc
jb
jecxz
add
mov
dec
nop
jmp
call
fwait
fwait
mov
push
push
mov
xchg
ret
into
fadds
sti
add
stc
jb
add
sub
add
jb
add
test
xor
lods
lods
push
mov
xchg
ret
dec
add
add
es
adc
add
push
push
mov
xchg
ret
roll
add
fsts
mov
xchg
ret
and
mov
daa
in
dec
push
mov
xchg
ret
mov
add
mov
outsb
adc
add
adc
xor
push
mov
xchg
ret
testb
pop
call
stc
jb
and
movsb
add
xchg
xchg
pop
add
stc
jb
add
inc
add
mov
nop
jmp
add
add
add
mov
mov
xchg
ret
and
fmuls
add
jb
sub
add
ja
jl
inc
and
stc
jb
iret
pop
add
roll
mov
sbb
add
xor
sti
pop
and
dec
decl
push
mov
xchg
ret
adc
add
pop
stc
jb
inc
dec
add
shr
inc
stc
jb
jecxz
pop
dec
dec
adc
add
inc
stc
jb
inc
add
test
push
mov
xchg
ret
xchg
add
add
jb
xchg
add
xchg
add
mov
lea
push
mov
xchg
ret
fwait
mov
stc
jb
add
xchg
incl
add
mov
xchg
ret
fwait
add
xchg
test
xchg
orl
mov
push
nop
jmp
add
rorl
ljmp
add
dec
add
push
push
mov
xchg
ret
inc
add
stc
jb
xor
add
add
add
sbb
mov
xchg
ret
add
add
subl
inc
jne
ds
mov
add
or
add
add
stc
jb
add
rolb
jl
jne
nop
jmp
add
add
jge
sbb
incl
mov
xchg
pop
pop
jg
popa
add
mov
xchg
ret
cmp
mov
add
add
add
jb
dec
movsb
hlt
sbb
push
mov
xchg
ret
fdivs
test
jb
inc
incl
add
add
mov
mov
stc
jb
add
add
mov
xchg
ret
add
xor
leave
jne
stc
jb
sub
jno
stc
jb
add
add
cmp
mov
add
nop
jmp
incl
adc
xchg
sbb
popa
add
mov
xchg
ret
add
add
add
jb
and
dec
aaa
cmp
stc
jb
leave
cmc
test
xchg
add
xor
pop
sbb
add
add
dec
jno
jl
pushl
push
mov
xchg
ret
add
and
mov
stc
jb
pop
adc
mov
iret
pusha
stc
jb
add
mov
ja
cmp
sbb
add
stc
jb
xor
inc
xchg
mov
mov
stc
jb
out
add
add
mov
stc
jb
add
add
fwait
shll
int3
pop
push
mov
xchg
ret
add
das
je
stc
jb
pusha
add
incl
xchg
add
xchg
adc
add
fsubrs
nop
jmp
pop
xor
and
push
movb
push
pop
test
nop
jmp
add
fadds
add
sarl
jo
nop
jmp
movsb
add
inc
inc
add
pushl
push
mov
xchg
ret
add
add
stc
jb
adc
fwait
sub
jnp
push
sbb
popa
stc
jb
add
jmp
add
add
jb
add
pop
stc
jb
movl
jnp
sub
and
push
hlt
inc
add
aaa
add
add
lcall
adc
add
add
add
mov
stc
jb
rolb
cmc
lret
push
xchg
loopne
mov
stc
jb
jecxz
roll
add
mov
sub
call
add
push
add
ret
cmp
mov
stc
jb
add
nop
jmp
testb
add
add
jb
add
add
jl
xor
cmc
fildl
xchg
ret
and
push
mov
sahf
add
pop
add
jecxz
add
movsl
jl
jmp
stc
jb
sti
testb
mov
cmpb
add
inc
aaa
xchg
add
dec
lods
rep
stc
jb
add
roll
add
orb
ljmp
sub
add
pop
and
psubsw
jb
testb
mov
mov
push
mov
xchg
ret
dec
add
out
mov
stc
jb
add
push
stc
jb
aaa
add
add
fwait
movsb
add
ljmp
add
add
add
add
movsb
mov
add
nop
jmp
add
rcrb
mov
xchg
ret
jl
fs
leave
mov
nop
jmp
cmc
roll
add
add
push
es
mov
push
mov
xchg
ret
add
xchg
lods
xchg
stc
jb
add
add
adc
mov
fisttpll
subb
add
and
mov
fs
push
incl
stc
jb
sub
and
sub
iret
jmp
nop
jmp
pusha
add
fstpt
mov
xchg
ret
into
rolb
push
loope
je
stc
jb
sti
xchg
movsb
or
add
jb
mov
sub
sbb
add
fcomi
test
mov
nop
jmp
add
inc
scas
add
stc
jb
add
inc
push
sub
sar
addb
add
xchg
adc
push
mov
xchg
ret
push
pop
add
add
mov
jge
inc
or
mov
xchg
ret
pop
mov
and
jb
out
and
lret
add
scas
enter
dec
add
add
stos
mov
push
mov
xchg
ret
roll
adc
adc
sar
xor
add
jnp
leave
add
mov
xchg
js
rclb
add
add
popa
nop
jmp
pop
add
add
add
add
dec
stc
jb
movl
add
lcall
lcall
pusha
fistl
and
stc
jb
add
addl
jne
stc
jb
incl
mov
cmp
jae
jb
add
push
inc
bound
call
out
inc
add
mov
add
mov
stc
jb
inc
and
add
test
nop
jmp
add
add
add
xor
dec
push
stc
jb
add
add
lret
add
stc
jb
dec
inc
xchg
cmc
lret
add
add
stc
jb
add
xor
stc
jb
add
add
rcr
outsl
arpl
stc
jb
add
mov
xor
push
mov
xchg
ret
add
inc
decb
mov
add
jb
jecxz
test
or
movsb
stc
jb
add
add
add
stc
jb
and
movsb
xchg
les
xchg
xchg
rcrb
pause
jmp
sub
pop
sub
jl
cmpsl
sbb
sti
stc
jb
rcrb
daa
jmp
push
mov
xchg
ret
add
adc
add
sub
add
sub
add
xor
stc
jb
add
add
inc
add
inc
stos
cmp
nop
jmp
cmc
add
and
stc
stc
jb
xor
inc
add
sbb
mov
xchg
ret
into
add
cmp
arpl
cmp
nop
jmp
add
add
push
stc
jb
add
inc
rorl
ret
stc
jb
cmp
testb
and
shlb
stc
jb
inc
add
jl
xor
and
push
mov
xchg
ret
add
lcall
jmp
sbb
add
add
fiaddl
add
jb
fistl
fisttpl
andb
push
rcrb
sar
jb
inc
lea
xchg
aaa
cmp
mov
nop
jmp
add
add
and
add
jb
add
and
call
stc
jb
add
iret
add
not
push
mov
xchg
ret
jecxz
cmc
fs
stc
jb
mov
add
xor
sbb
mov
xchg
ret
dec
add
add
pop
xor
add
movsl
push
inc
push
mov
xchg
ret
add
fildl
and
xchg
fisttpll
cmpb
add
xor
fwait
mov
stc
jb
sub
add
inc
idiv
add
nop
jmp
mulb
add
into
dec
movsl
inc
add
pop
nop
jmp
add
jne
add
lea
out
les
stc
jb
test
fs
jecxz
xchg
js
popa
add
mov
xchg
ret
mov
dec
cmp
jb
xchg
xchg
jecxz
add
mov
sub
add
add
add
mov
stc
jb
inc
inc
add
fdivs
lea
push
mov
xchg
ret
and
xor
stc
jb
testb
lods
add
stc
jb
add
cmp
subb
add
add
add
add
add
push
mov
xchg
ret
add
sti
add
mov
stc
jb
pusha
add
inc
test
nop
jmp
add
add
add
cmc
out
push
in
pusha
nop
jmp
add
xor
lret
xchg
add
push
push
mov
xchg
ret
adc
movsb
insl
add
push
stc
jb
add
mov
xchg
out
mov
stc
jb
add
xchg
add
mov
stc
jb
test
add
add
jb
insl
inc
mov
addl
and
nop
jmp
jne
add
add
nop
jmp
insl
add
cmp
xchg
sbb
mov
stc
jb
inc
add
add
add
dec
jne
stc
jb
pop
add
mov
xorb
add
add
add
xor
add
stc
jb
sub
out
ror
xchg
mov
add
add
jb
fwait
xor
push
mov
movsb
adc
mov
xchg
xor
mov
stc
jb
shr
inc
call
push
mov
xchg
ret
dec
adc
mov
stc
jb
add
out
fwait
xor
stc
jb
add
add
fdivrs
ret
add
add
ljmp
xchg
nop
jmp
add
sti
xchg
addl
push
mov
xchg
ret
shlb
add
mov
nop
jmp
add
xlat
sbb
icebp
dec
insl
jno
jl
add
stc
dec
nop
jmp
xchg
shl
imull
cmp
add
add
add
add
xchg
mov
add
push
mov
xchg
ret
inc
add
and
and
stc
jb
cmp
fcmovnbe
add
call
stc
jb
xchg
add
rcl
clc
mov
stc
jb
fwait
add
add
add
add
add
push
ficoms
jb
dec
add
add
add
add
test
add
stc
jb
add
and
add
push
mov
xchg
ret
pusha
cmc
add
mov
stc
jb
add
fwait
add
leave
addb
testb
cmp
stc
jb
add
add
mov
mov
movsb
dec
je
stc
jb
iret
add
pop
stc
jb
out
add
add
add
mov
stc
jb
out
add
mov
or
add
jb
jl
add
sbb
cmp
jb
mov
sbb
xor
add
mov
xor
mov
stc
jb
out
sti
rclw
or
jmp
add
xchg
add
add
pusha
stc
jb
insl
dec
lret
add
or
lock
ljmp
add
rclb
and
jb
add
dec
mov
stc
jb
add
adc
out
add
mov
stc
jb
add
xchg
into
add
add
clc
or
add
jb
add
xor
push
push
cmp
nop
jmp
add
add
inc
xchg
mov
push
mov
xchg
ret
sbbl
add
stc
jb
cmp
add
add
shr
stc
jb
inc
lea
add
inc
add
out
mov
stc
jb
add
iret
aaa
jo
call
stc
jb
add
mov
adc
jb
rcrl
add
cmp
bound
add
and
xchg
add
push
add
jb
add
shlb
out
lods
stc
jb
add
add
and
xor
rep
stc
jb
add
lea
add
insl
mov
nop
jmp
add
and
jb
add
add
aaa
mov
mov
add
stc
jb
add
add
adc
out
ror
inc
push
mov
xchg
ret
add
add
adc
movsb
cs
stc
jb
cmp
pop
sub
push
push
mov
xchg
ret
and
add
stc
jb
add
xchg
add
push
mov
xchg
ret
pop
pop
xchg
shll
push
nop
jmp
add
add
add
mov
stc
jb
adc
jl
adc
add
jg
dec
cmp
mov
xchg
ret
inc
jno
lret
div
nop
jmp
lea
add
jl
lret
stc
jb
mov
add
push
push
mov
xchg
ret
add
call
inc
add
dec
add
jmp
mov
add
mov
jecxz
add
sub
add
stc
jb
pusha
push
add
pop
stc
jb
xchg
add
leave
test
add
pusha
clc
inc
add
iret
lret
add
mov
push
mov
xchg
ret
add
push
push
mov
xchg
ret
lret
add
mov
sub
jmp
adc
out
out
add
add
call
decl
test
sbb
add
stc
jb
add
sub
jb
mov
pop
xor
lret
add
push
and
add
jb
add
incl
adc
jb
add
mov
mov
stc
jb
and
outsb
push
mov
xchg
ret
add
jno
jae
sub
mov
xchg
ret
fwait
push
movl
jb
mov
jno
xchg
add
add
push
push
mov
xchg
ret
out
out
iret
and
add
stc
jb
jno
fs
fwait
xor
mov
mov
push
mov
xchg
ret
add
popa
movb
popa
stc
jb
add
inc
add
pop
call
add
imul
stc
jb
fildl
add
mov
xchg
ret
fwait
add
add
stos
xor
push
mov
xchg
ret
add
out
fmuls
subb
add
add
sub
cld
incl
add
mov
mov
mov
xchg
ret
add
inc
mov
stc
jb
jno
rolb
and
subb
incl
jl
add
lea
add
dec
outsl
popa
fs
jb
fcoms
add
mul
xor
cmp
jb
add
adc
add
cltd
push
push
mov
xchg
ret
into
sub
test
jbe
cmpl
nop
jmp
add
add
mov
sldt
add
divb
push
add
pop
mov
stc
jb
add
add
add
adc
add
add
jb
roll
mov
add
stc
jb
xchg
pusha
add
cmp
push
mov
fs
add
add
sub
adc
push
jb
and
inc
and
cmp
xorb
add
jl
add
push
push
mov
xchg
ret
insl
add
push
xchg
push
stc
jb
and
pop
out
movzwl
stc
jb
add
sub
add
les
xchg
popf
add
stc
jb
inc
add
push
inc
stc
jb
out
add
ss
in
inc
add
jecxz
add
in
cmp
adc
add
inc
add
add
nop
jmp
mov
iret
xchg
add
outsb
xor
nop
jmp
inc
adc
add
pop
add
movb
mov
nop
jmp
dec
add
ret
mov
push
mov
xchg
ret
adc
add
sub
jb
pop
adc
and
dec
push
stc
jb
into
add
xchg
rcll
mov
mov
jmp
fsubs
out
add
add
and
mov
stc
jb
testb
add
add
leave
add
push
mov
xchg
ret
add
add
jns
lret
inc
sldt
add
add
mov
stc
jb
add
jbe
mov
push
mov
xchg
ret
add
add
sbb
call
mov
pop
push
mov
xchg
ret
xor
fdivs
jne
pop
nop
jmp
jnp
add
add
xchg
inc
jl
test
push
mov
xchg
ret
mov
inc
test
adc
add
stc
jb
add
add
pop
jnp
lea
mov
inc
add
mov
add
add
incl
test
movsb
orl
nop
jmp
add
add
ret
stc
xor
stc
jb
add
jno
mulb
xor
and
xor
sub
stc
jb
lret
add
xchg
mov
jb
and
add
add
subl
push
mov
xchg
ret
add
inc
cmc
jno
add
rol
ljmp
jmp
leave
sub
adc
jne
nop
jmp
add
xor
mov
nop
jmp
jl
lret
test
pop
mov
stc
jb
add
addl
ret
incl
movsb
add
add
mov
adc
add
into
das
add
in
fwait
ror
stc
jb
add
rcrb
mov
adc
jb
add
cmp
push
test
sbb
add
xorb
sarl
push
nop
jmp
add
dec
mov
out
push
call
stc
jb
add
add
sub
sti
stc
jb
fwait
xor
add
leave
add
lock
jb
add
iret
inc
movsb
add
stc
jb
leave
xor
add
mov
push
push
mov
xchg
ret
leave
fdivs
add
push
mov
xchg
ret
out
add
sub
je
add
push
mov
xchg
ret
add
dec
jae
jb
jb
add
mov
stc
jb
jnp
add
cmp
jb
adc
xor
inc
add
xchg
data16
jne
stc
jb
add
out
and
stc
jb
add
dec
add
dec
test
mov
sub
xchg
cmc
inc
add
add
add
nop
jmp
add
movl
add
jmp
pop
adc
dec
jl
add
inc
and
jb
inc
cmp
inc
incl
popl
nop
jmp
add
add
ret
push
mov
mov
stc
jb
xor
add
xchg
inc
int
out
add
stc
jb
cmp
add
mov
add
mov
mov
stc
jb
add
xor
stc
jb
add
inc
jl
add
stc
jb
xor
add
xchg
add
stc
jb
mov
aaa
aaa
lods
push
nop
jmp
add
and
lea
jp
fcoms
add
add
incl
dec
add
je
lea
inc
cli
inc
add
mov
lods
and
stc
jb
inc
add
mov
adc
add
jb
out
add
jnp
sar
jb
iret
inc
add
add
mov
mov
xchg
ret
add
add
adc
stos
mov
stc
jb
inc
mov
pop
stos
mov
stc
jb
add
andl
mov
stc
jb
cmp
add
jle
jle
add
add
dec
xor
jecxz
sbb
popa
add
jb
rolb
iret
jnp
add
lret
stc
jb
add
mov
or
dec
adc
jb
add
add
sti
add
mov
cmp
call
add
popa
push
mov
xchg
ret
and
stc
jb
sub
add
lret
jb
xchg
add
mov
add
jl
push
mov
xchg
ret
jne
lea
and
pusha
stc
jb
xchg
sarb
ret
call
stc
jb
iret
add
add
jmp
stc
jb
add
xor
pop
add
insl
mov
stc
jb
add
add
inc
lret
mov
movb
into
call
add
add
ror
mov
push
mov
xchg
ret
inc
inc
inc
jne
cmpl
nop
jmp
adc
subl
add
insl
add
add
sbb
mov
inc
add
add
idiv
push
mov
jnp
je
add
xor
iret
add
xchg
cli
jne
stc
jb
pusha
pusha
fistl
mov
stc
jb
add
sti
fadd
hlt
xor
mov
stc
jb
add
fsubrs
mov
stc
jb
xchg
leave
dec
out
push
stc
jb
iret
xor
in
call
stc
jb
inc
push
add
jg
add
add
add
dec
mov
xor
mov
push
mov
xchg
ret
adc
clc
dec
inc
stc
jb
add
adc
cli
sub
stc
jb
jecxz
add
add
add
push
push
mov
xchg
ret
add
add
add
add
nop
jmp
add
sti
fwait
add
andl
in
incl
adc
mov
add
stc
jb
add
dec
add
and
pop
nop
jmp
adc
add
scas
push
stc
jb
push
and
add
mov
stc
jb
add
add
mov
stc
jb
roll
and
xchg
out
sub
stc
jb
add
fs
mov
xchg
push
mov
xchg
ret
add
add
xchg
stos
je
stc
jb
add
and
test
or
add
jb
mov
add
stc
jb
pop
add
ljmp
nop
jmp
ror
mov
add
cltd
xor
nop
jmp
fs
jl
notb
push
jno
pusha
stc
jb
add
add
fwait
add
imul
insl
add
push
fwait
jmp
arpl
jb
jecxz
pop
push
add
stc
jb
into
add
shl
dec
mov
push
mov
xchg
ret
lea
inc
add
push
mov
xchg
ret
xor
and
nop
jmp
and
aaa
add
test
stc
stc
jb
add
fldt
incl
test
add
jecxz
xchg
mov
xor
sub
ret
sti
add
pusha
pop
mov
stc
jb
dec
inc
into
adc
add
test
pusha
arpl
or
add
add
add
stc
jb
jl
add
jl
lret
in
dec
nop
jmp
add
rolb
cmc
dec
add
stc
jb
mov
xor
inc
cmpl
bound
add
stc
jb
add
add
jb
movsb
mov
xor
push
nop
jmp
add
adc
mov
in
outsl
add
lods
mov
mov
aas
adc
jnp
lret
dec
push
sub
dec
mov
nop
jmp
insl
mov
add
jno
mov
sbbb
ljmp
xchg
mov
fldt
out
stc
jb
add
add
mov
jmp
add
cmp
add
fsubrs
jne
stc
jb
jl
xchg
sti
shl
stc
jb
xchg
xor
xor
dec
adc
mov
stc
jb
add
xor
push
push
mov
xchg
ret
adc
add
and
mov
stc
jb
add
push
push
mov
xchg
ret
add
add
mov
xor
add
stc
jb
add
pop
add
stc
jb
sub
lea
add
movswl
stc
jb
add
add
adc
incl
mov
jl
fwait
add
jmp
lret
jnp
add
add
shr
push
mov
xchg
ret
pop
add
and
add
add
stc
jb
lret
add
add
xor
sub
stc
jb
and
inc
jmp
jmp
stc
jb
add
insl
and
xchg
pop
and
test
push
mov
xchg
ret
fdivrs
fs
adcb
incl
test
jno
movsb
mov
neg
movzwl
stc
jb
insl
inc
add
add
stc
jb
add
testb
add
enter
and
jnp
add
and
nop
jmp
add
inc
fwait
add
pop
mov
shrb
stc
jb
add
add
add
push
std
dec
nop
jmp
add
dec
xor
adc
pop
push
and
stc
jb
sub
incl
add
xor
jmp
mov
xchg
ret
out
leave
mov
push
push
mov
xchg
ret
and
fs
out
add
nop
jmp
add
leave
inc
movl
sbbb
inc
add
add
jno
mov
mov
xchg
ret
mov
jecxz
mov
stc
jb
out
mov
stc
jb
add
jl
popa
icebp
adc
pop
nop
jmp
add
jecxz
jl
add
jg
stc
jb
pop
out
adc
add
jl
push
sub
mov
xchg
ret
add
sub
lea
stc
jb
pop
xor
cmc
add
incl
jge
stc
jb
mov
dec
add
ss
add
nop
jmp
xchg
mov
adc
mov
sub
ret
roll
add
loope
add
add
add
nop
jmp
addl
out
addb
push
in
mov
push
mov
xchg
ret
and
jge
push
mov
xchg
ret
add
sub
nop
jmp
add
add
aas
call
nop
jmp
sti
jl
sub
adc
pop
nop
jmp
jne
adc
add
iret
mov
addb
add
nop
jmp
addl
push
nop
jmp
movl
sub
add
add
nop
jmp
add
add
add
adc
je
add
lahf
cmp
nop
jmp
xchg
cmc
jno
mov
jb
add
pusha
add
imul
xchg
ret
sti
add
out
dec
push
mov
xchg
ret
add
and
sub
jb
jl
dec
and
adc
jb
shlb
push
stc
jb
lret
inc
xor
add
rcll
mov
stos
push
mov
xchg
ret
sti
add
add
mov
jnp
repz
jb
sub
cmpl
sub
jb
insl
jecxz
mov
pop
inc
push
mov
xchg
ret
add
stos
stc
jb
add
add
out
sub
test
jmp
add
jno
and
and
add
add
incl
and
insl
mov
add
stc
jb
jecxz
add
adc
into
add
stc
jb
sub
mov
jle
push
mov
xchg
ret
add
add
fs
addl
nop
jmp
add
jnp
add
add
mov
jb
dec
adc
xchg
add
inc
add
lods
push
mov
xchg
ret
add
add
cmp
jne
stc
jb
pop
jecxz
mov
and
push
mov
xchg
ret
add
mov
push
mov
xchg
ret
leave
adc
add
adc
jb
jnp
mov
pop
fimull
cmp
xchg
xchg
add
mov
push
mov
xchg
ret
aaa
add
push
jmp
rcll
incl
xor
roll
add
movsl
stc
jb
add
mov
push
stc
jb
adc
fistpl
fcos
stc
jb
add
add
orb
inc
add
push
mov
mov
fisttpl
and
inc
add
add
ja
mov
stc
jb
mov
inc
adc
cmpw
nop
jmp
adc
test
jb
cmc
out
xor
push
stc
jb
add
jl
jnp
push
or
jb
sarb
add
mov
stc
jb
xor
add
push
test
stc
jb
push
jecxz
sbb
lret
stc
jb
xchg
and
cmpl
add
stc
jb
adc
sub
test
stc
jb
add
add
adc
test
fdivrp
stc
jb
add
add
cmc
sub
push
add
add
jb
add
adc
and
stc
call
stc
jb
lret
lret
aaa
insl
adc
mov
stc
jb
add
pop
insl
int3
add
push
mov
xchg
ret
add
jno
add
lea
nop
jmp
sub
adc
jl
sub
loope
jb
add
divb
sub
stc
jb
sub
cmc
xor
rclb
shr
stc
jb
add
add
add
loope
pushl
push
mov
xchg
ret
add
mov
xchg
ret
add
adc
add
popf
jne
stc
jb
add
cmpsb
pop
sub
movsl
stc
inc
add
xchg
add
jns
test
stc
jb
pop
fistl
add
push
mov
xchg
ret
out
fadds
int3
call
nop
jmp
add
fcmovnbe
add
mov
nop
jmp
inc
into
xchg
movsb
add
add
inc
and
nop
jmp
roll
lret
xchg
add
pushl
stc
jb
add
mov
fildl
inc
lods
mov
stc
jb
add
add
add
std
call
stc
jb
mov
push
push
mov
xchg
ret
add
rclb
jbe
inc
add
mov
ror
push
mov
xchg
ret
push
add
push
stc
jb
jl
insl
lcall
cmc
stos
push
push
mov
xchg
ret
idivb
roll
jne
stc
mov
stc
jb
leave
mov
xor
stc
jb
aaa
add
push
scas
push
stc
jb
iret
cmp
inc
out
xor
nop
jmp
dec
add
nop
jmp
add
add
add
mov
stc
jb
fadds
fs
loopne
stc
jb
and
jno
test
nop
jmp
fs
add
xlat
repnz
jmp
add
cmp
push
push
mov
xchg
ret
add
add
fs
pop
xor
push
mov
xchg
ret
adc
add
mov
sti
inc
add
and
jl
ds
stc
jb
ror
mov
adc
add
lock
stc
jb
roll
add
insb
push
stc
jb
add
add
add
stc
jb
add
add
add
movsb
push
and
push
mov
xchg
ret
jecxz
add
push
mov
xchg
ret
add
sti
add
add
stc
jb
add
add
mov
repz
jb
cmp
adc
fwait
jno
in
push
mov
pop
data16
in
add
arpl
imul
mov
push
lods
cmpsl
test
add
movb
push
mov
gs
add
imul
inc
cmp
fwait
imul
add
mov
es
xlat
test
gs
or
add
jo
sbb
ljmp
xchg
aas
mov
adc
mov
jle
sbb
pusha
add
rcll
xor
ja
outsl
dec
cmp
gs
sbb
loope
fdivrl
insl
sub
xchg
mov
hlt
test
pop
nop
dec
mov
jno
mov
xor
out
cmp
sub
cmp
lahf
jl
and
sbb
sub
add
and
cmp
push
xchg
mov
push
or
nop
lock
mov
mov
xchg
out
dec
aad
add
mov
out
sbb
xchg
hlt
lods
addl
or
push
arpl
mov
jo
add
daa
ds
inc
xchg
out
xor
loope,pn
jge
test
jbe
in
cld
adcl
jl
adc
scas
lret
test
js
pop
mov
out
test
dec
mov
add
in
inc
add
into
popl
add
sti
inc
mov
inc
jbe
push
popa
and
outsl
jmp
out
in
xor
ss
push
xor
aad
enter
add
mov
scas
sub
nop
pop
out
mov
aas
add
push
sti
insb
and
jnp
jbe
in
in
sarl
bnd
es
push
test
mov
mov
jmp
or
pop
addr16
mov
or
xlat
xor
inc
add
pop
jge
lods
and
pop
loope
out
cmp
insb
pop
lock
bound
orl
jecxz
or
add
add
sub
loopne
add
dec
test
lds
imul
cmp
ja
adc
je
jae
dec
dec
cmp
adc
cmp
addb
test
sub
sub
in
adc
cltd
jecxz
xchg
subl
loop
add
and
mov
push
push
add
scas
xchg
xchg
jbe
js
int
adc
add
add
push
out
stos
xchg
repz
sub
nop
sub
add
adc
sbbl
xchg
push
mov
lock
fisttpl
shrl
cmp
mov
addb
lods
mov
inc
out
mov
sbb
test
iret
dec
bound
leave
xlat
loop
in
aaa
push
frstor
lea
es
gs
jmp
cs
add
nop
xor
xchg
xchg
jge
addb
pop
and
lret
enter
scas
lods
mov
and
add
add
add
lods
mov
xor
movsl
sarl
sbb
inc
add
push
pushf
fisubrl
mov
pusha
add
adc
xlat
mov
cmp
std
jns
add
sub
and
pop
pop
shll
test
cld
sub
insb
jl
or
sbb
cmpsb
pop
ja
repnz
pop
les
shl
mov
push
mov
cmpsb
shll
add
mull
popf
or
add
je
cltd
mov
add
add
stc
bound
lods
std
cld
and
pop
loop
jnp
or
dec
aas
push
mov
sub
lret
mov
out
imul
std
fwait
scas
sub
add
jns
jp
sub
rorl
adc
std
mov
add
out
sbb
add
clc
std
fistpl
aam
xchg
leave
adc
lods
mov
ret
imul
pop
xchg
outsb
addb
aaa
mov
les
daa
pop
es
add
cmpsl
push
inc
add
out
insb
lret
mov
xor
and
jg
xchg
jne
sti
in
and
mov
xchg
enter
dec
pushf
std
push
lock
add
or
add
xchg
dec
cmp
add
sub
push
jle
imul
cmp
pop
int3
loop
adc
cmp
add
add
stos
fsubs
add
mov
sbb
mov
mov
sbb
pop
jae
cmp
fcomip
inc
add
arpl
loope
mov
sti
repnz
in
add
iret
pop
mov
jge
sbb
pop
ss
jge
mov
fmull
adc
loopne
imul
cli
adc
add
cs
cld
xchg
pop
addb
pop
repz
repnz
in
cmp
fsubs
mov
jmp
dec
push
add
add
pop
pop
stc
insb
cmp
insb
or
decb
sub
adc
add
xor
outsl
lret
test
je
sbb
push
xor
fcompl
add
xorl
jge
test
mov
addb
sbb
je
lods
sub
outsl
or
clc
lods
int3
or
pop
stc
or
add
call
mov
push
outsl
popa
aad
mov
rolb
stos
xor
pop
insb
scas
aaa
loope
mov
mov
mov
jns
jecxz
add
xchg
xor
out
add
push
aad
pop
enter
addr16
pop
out
jno
jns
and
ss
cmpl
je
add
jp
aas
fisttpll
movlps
jl
jbe
add
and
repnz
stc
daa
shrl
das
stc
hlt
es
mov
mov
ds
xor
rolb
gs
inc
add
scas
loop
je
rorl
add
repnz
pop
andl
mov
sahf
or
xor
pusha
add
idiv
pop
rcrl
push
lret
xor
aam
cmp
jecxz
and
jl
jns
sti
sarb
inc
mov
clc
mov
or
loope
les
repnz
xchg
pusha
add
popa
xchg
mov
or
into
shll
fscale
pop
sbb
lahf
nop
push
cmp
mov
stos
mov
push
fwait
insl
push
ljmp
stos
mov
sub
dec
mov
add
ja
and
and
in
jmp
les
lock
or
or
mov
mov
int3
rcrl
sbb
jbe
push
jg
add
imul
lcall
add
pop
pop
push
movb
add
jno
adc
xor
fdivl
jecxz
jns
adc
dec
and
clc
data16
jae
ds
lret
pop
test
sbb
add
leave
push
cmp
aam
mov
pop
and
imul
es
int
push
pop
push
cld
push
cwtl
sbb
les
sub
dec
push
mov
shl
mov
mov
rolb
stc
pop
testb
leave
mov
or
add
dec
icebp
call
push
outsb
xor
or
pop
bound
sub
add
sub
sahf
lahf
out
mov
jns
add
adc
pop
stos
push
or
hlt
test
cmp
jge
add
popf
jmp
out
mov
xor
mov
add
mov
dec
push
cmp
mov
icebp
scas
cmp
sub
push
loope
sub
inc
add
mov
cli
jg
inc
mov
mov
cwtl
ja
sub
mov
lahf
add
xor
add
mov
leave
inc
add
pcmpeqd
ss
and
ret
lret
roll
popf
movsb
dec
iret
mov
add
sub
arpl
add
sbb
add
rolb
add
xor
repnz
pop
mov
inc
jp
cwtl
fbstp
pusha
add
push
cwtl
xor
inc
add
add
add
or
add
shr
sub
sbb
loop
xchg
or
fdivs
adc
test
sub
add
push
into
cwtl
mov
add
or
sub
adc
lea
cmp
clc
rolb
sub
out
add
add
dec
mov
mov
scas
aas
jmp
add
outsb
xchg
pop
adc
xor
pcmpeqb
dec
in
mov
or
inc
inc
add
cmp
adc
xor
jne
adc
aam
shrl
mov
shrb
pop
ljmp
jp
mov
repnz
mov
sub
push
jle
xchg
jp
jle
mov
sub
gs
add
pushf
inc
mov
dec
sti
call
jl
cld
js
add
add
movsl
jnp
mov
add
mov
popa
lret
dec
pop
insb
pop
xor
movsl
aaa
sbb
ret
aad
rolb
push
sub
push
add
add
sbb
sub
inc
add
cmpsl
fs
js
test
jg
fwait
or
cld
or
add
inc
movsb
mov
push
add
mov
adc
xor
pop
test
cmp
pop
pop
es
mov
mov
xor
add
enter
sbb
push
xchg
fwait
mov
hlt
xor
inc
add
sahf
repz
cmp
daa
cmp
jnp
rcl
nop
xor
js
nop
aaa
cmp
mov
fadd
add
fstpl
addb
xor
jns
add
add
cld
pop
push
xor
push
dec
rolb
add
rolb
mov
cmp
cmp
sbb
ret
push
or
andl
enter
jl
mov
dec
sub
call
pop
in
sahf
stc
les
aas
jb
dec
fisttpll
divb
std
and
cld
jnp
shll
xor
sub
xchg
adc
sbb
mov
mov
das
xor
outsl
test
dec
or
xchg
push
or
push
call
add
add
mov
xchg
sbb
dec
xchg
xor
add
int3
dec
popf
and
mov
add
mov
push
push
call
jnp
add
or
adc
inc
push
rol
xchg
iret
inc
add
imul
or
xor
icebp
xor
ror
mov
sub
test
int
adc
inc
pop
adc
aas
xchg
sub
das
popa
xchg
cwtl
mov
nop
ljmp
subl
add
imul
sub
iret
fbstp
mov
mov
cmp
fsqrt
pop
jne
pop
call
sbb
lock
movsl
inc
add
sub
loop
insl
clc
adc
xchg
pop
or
xchg
repnz
xchg
lods
adc
add
int3
pop
dec
cmp
in
jp
dec
mov
mov
scas
lods
rcll
data16
ds
cmp
cmp
je
insl
insb
in
xor
test
pop
rolb
stos
or
sub
pop
loopne
xor
or
cltd
push
fucom
xor
mov
push
pop
mov
aam
dec
jge
test
inc
add
add
mov
into
cli
xor
idivb
add
fisubs
jmp
mov
inc
add
enter
mov
mov
fnsave
in
dec
testb
int3
in
popf
push
mov
je
push
ja
test
bound
insb
mov
jae
push
mov
stc
xchg
movsb
fs
push
fisttpl
rcl
imul
push
mov
or
scas
and
inc
push
pop
es
add
lret
add
or
fcmovnb
pusha
add
dec
cltd
pop
inc
add
rcll
mov
mov
add
xor
push
mov
dec
adc
bound
push
or
rolb
iret
add
add
cld
xor
pop
fidivrs
aas
idiv
pusha
add
in
in
leave
das
arpl
int
leave
filds
cmp
dec
sub
or
movsb
call
pop
in
fisubrl
inc
rolb
les
dec
cmp
icebp
pop
popf
pop
sbb
pop
outsl
sbb
add
es
mov
popa
hlt
iret
push
add
add
out
pop
lods
jnp
add
mov
jne
imul
jmp
rolb
mov
in
push
pop
aaa
jle
test
insl
pushf
jns
sub
jecxz
jg
cwtl
les
adc
inc
add
xor
add
jecxz
cwtl
daa
bswap
pop
repz
mov
pop
xchg
nop
push
and
and
jae
hlt
dec
cmpsb
sub
add
leave
imul
loop
aad
scas
lea
push
lods
mov
ds
inc
mov
or
xor
sbb
add
dec
push
inc
gs
in
popa
xchg
les
adc
inc
cld
stc
sub
mov
adc
push
ret
cmp
sbb
add
push
push
jmp
pop
jg
dec
daa
push
cmc
push
repnz
dec
pop
mov
xchg
and
ss
fcoml
stos
and
jle
adc
ds
fisubs
shlb
and
lds
or
add
jne
lahf
mov
mov
add
xor
adc
fildll
sbb
push
sbb
add
cltd
mov
inc
pop
loopne
rcll
mov
popa
push
cmpsb
push
push
add
adc
mov
mov
popf
iret
sub
xchg
test
dec
inc
adc
out
push
and
and
inc
add
out
bound
fs
fwait
jmp
aas
adc
rclb
inc
add
and
adc
pop
push
and
leave
fimuls
dec
dec
leave
pop
les
pop
leave
scas
bound
push
mov
loop
pop
mov
rol
add
cmpl
xchg
lods
jb
fsubl
out
out
dec
addb
or
out
add
int3
jl
add
addb
enter
sbb
mov
sbb
add
and
fs
sub
lock
add
scas
sub
popa
and
mov
ljmp
lea
ret
add
loop
ds
popa
xchg
add
cmp
cmp
aas
jle
jno
rcrl
cmp
movb
imul
mov
add
lea
add
mov
movsl
daa
xor
wbinvd
xchg
mov
xor
adc
add
add
cmp
aad
add
call
push
push
pusha
add
les
mov
mov
pop
lds
mov
push
mov
xor
mov
inc
loope
mov
add
add
icebp
xor
add
ror
orl
push
add
cmp
stos
mov
mov
add
mov
mov
ja
add
call
push
leave
cltd
push
sub
mov
dec
loopne
add
ja
lcall
cld
mov
addr16
add
dec
cwtl
dec
scas
mov
mov
fnstsw
xchg
xchg
add
arpl
ss
xchg
adc
loope
add
add
jae
xchg
sbb
add
idivb
xchg
mov
stc
xchg
ffreep
jg
add
push
push
cmp
leave
rorl
add
mov
cs
testl
cmp
lahf
lods
dec
scas
xchg
inc
dec
scas
or
fistl
push
sbbl
add
enter
ret
repz
lret
adc
xchg
cmp
add
xor
fucomi
dec
xor
inc
xchg
inc
add
fnstenv
push
daa
mov
and
xchg
jcxz
in
add
mov
nop
lcall
pop
stc
push
mov
or
ret
and
adc
movsb
dec
mov
imull
fisttpll
call
ficompl
and
ja
add
in
add
mov
mov
add
or
mov
xchg
sbb
fsubrl
cwtl
scas
data16
or
fisttpl
mov
adc
xchg
fxch
add
push
add
in
lret
cmp
add
push
sbb
call
mov
inc
add
xchg
xchg
cmpsb
scas
aaa
and
mov
aad
call
and
loopne
mov
sbb
xchg
jno
adc
loopne
sbb
adc
out
into
psrlw
roll
add
incl
fst
test
push
pushl
rorb
ret
dec
pop
add
lds
add
jno
add
add
daa
add
call
add
mov
int3
loop
in
push
dec
cmp
add
movsb
xor
sbb
add
mov
cmp
loopne
mov
xchg
mov
cltd
into
sbb
dec
out
negl
fistl
test
sti
mov
sbb
inc
add
ja
jg
add
and
adc
pop
lret
add
xchg
out
cmp
subl
adc
or
movsl
pop
roll
push
jle
add
dec
popa
enter
add
dec
nop
mov
mov
add
cmp
xchg
les
xchg
lret
add
pop
dec
mov
push
add
mov
popa
pop
aas
jle
add
pop
sub
and
out
sub
pop
dec
mov
stc
les
and
jo
lds
or
add
movsb
inc
popf
pop
sbb
pop
outsl
aad
pop
pop
outsl
cmp
aad
add
add
xor
inc
add
sub
xor
aad
addb
repz
aam
mov
mov
loop
mov
mov
rolb
js
mov
fsts
jnp
pop
movsl
inc
lahf
mov
pop
out
xor
dec
add
cmp
lret
loopne
inc
jne
mov
dec
xor
jne
xchg
push
jb
or
sub
mov
ljmp
pop
jne
cs
iret
scas
and
nop
out
xchg
or
sbb
cwtl
divl
add
and
and
pop
call
pop
lods
insb
punpckldq
mov
pop
aaa
mov
add
test
mov
xor
data16
out
mov
ljmp
out
fcmovnbe
push
pusha
add
inc
jp
push
jnp
inc
addr16
cltd
sbb
ficompl
aaa
test
and
insb
sub
stc
lahf
scas
jmp
decl
add
mov
xchg
jnp
add
jae
jnp
mov
dec
pop
popa
add
cmp
jg
popa
stos
sub
pop
sub
adc
imul
add
sbb
or
push
fcomip
sub
mov
adc
cmp
add
ret
mov
inc
add
sbb
mov
xchg
je
mov
adc
mov
jbe
movsl
int3
mov
add
xchg
add
outsb
decb
push
pop
and
push
jae
mov
mov
ficoml
sub
sub
xchg
popa
jb
or
pop
add
andl
dec
sar
repz
xorl
mov
mov
stos
mov
inc
add
adc
mov
test
scas
cmpsl
int3
pop
sub
sbb
jge
and
pop
movsb
notb
lods
inc
add
mov
cld
leave
insb
xor
out
movsb
sbb
sbb
push
scas
insl
xlat
cs
add
ss
movb
and
clc
inc
add
sub
stos
mov
or
jmp
sub
or
out
fiadds
js
daa
cwtl
push
cmp
dec
cld
sbb
push
js
sbb
mov
test
mov
addl
mov
xchg
pop
in
push
adc
mov
enter
add
dec
daa
jno
fsubrp
icebp
fwait
xor
lahf
out
rolb
jne
icebp
adc
lcall
scas
xor
xchg
andl
dec
ss
lcall
jo
dec
push
test
loope
leave
rolb
add
or
or
rorl
shrb
cmc
and
nop
cli
pop
stc
js
sub
enter
pop
xor
rcr
adc
add
in
les
fildl
adc
daa
xchg
adc
mulb
add
add
hlt
and
jo
mov
daa
pop
add
jae
cmp
add
add
push
dec
inc
in
out
jb
add
icebp
push
pop
shlb
loop
stos
test
inc
add
clc
dec
dec
mov
sbb
repz
dec
int
add
add
lods
test
cwtl
mov
push
repnz
insl
add
orl
xor
push
mov
mov
ss
jns
mov
js
lahf
sbb
jns
add
daa
or
stos
xor
add
dec
ret
loopne
shlb
add
xchg
loop
push
push
cld
adc
push
fdivl
xor
inc
js
sbb
adc
add
addb
sub
adc
add
push
xor
add
inc
cbtw
pop
jo
shrl
inc
add
inc
cmp
sub
jecxz
fisubrl
cmp
cli
fcmovnu
mov
fcmovnbe
inc
add
mov
pop
mov
hlt
dec
push
addr16
stos
inc
add
pushf
scas
stos
adc
add
movsb
push
sub
lea
sarl
rolb
dec
rorl
lock
out
lock
jmp
add
in
xchg
fs
dec
ret
push
add
inc
add
add
scas
mov
fcomps
mov
cld
rcll
call
daa
inc
mov
mov
hlt
sbb
xchg
rcl
ds
add
cmp
iret
mov
dec
enter
ljmp
sub
add
inc
add
inc
addb
jecxz
push
call
push
jl
jae
inc
add
xchg
mov
xchg
xor
sub
add
dec
or
sub
cmp
jns
mov
sti
cmp
stc
cltd
jmp
cmc
inc
add
push
clc
je,pn
stos
or
rolb
cli
mov
iret
sub
imul
sbb
aas
movb
test
dec
jb
sub
cmpsb
sbb
sbb
clc
and
in
push
cmp
pop
jg
dec
lods
cltd
dec
lods
sbb
cmpsb
jg
pop
mov
add
pop
inc
cwtl
es
aad
mov
aas
xor
add
loop
hlt
imul
push
lock
jne
push
add
ss
mov
dec
in
inc
add
in
mov
xor
jmp
rol
add
stc
mov
adc
add
add
inc
push
sub
add
sbb
xor
add
xchg
pop
mov
add
rcrl
sbb
jnp
gs
rcll
sbb
push
sbb
jne
inc
add
cld
pop
loop
insl
inc
movsl
xor
mov
loope
add
orl
pushf
repz
sbb
add
rorl
sbb
xchg
xor
jge
lahf
sbb
cmp
ret
cmp
and
int
sarl
in
addb
int
fstl
loopne
fsub
sub
repz
xchg
sub
enter
adc
push
sub
sbb
and
sbb
pop
inc
add
das
dec
push
fistpl
pusha
add
sbb
aad
daa
mov
int
add
pop
insl
test
sub
and
adc
inc
add
addr16
pop
fcmove
mov
mov
jno
push
out
hlt
inc
inc
add
and
jns
pop
popf
fistpll
lahf
ja
movups
pop
pop
dec
add
ss
enter
dec
sti
inc
enter
arpl
push
pusha
add
jae
lret
push
pop
lods
and
adc
jle
and
cmp
jecxz
inc
add
lods
arpl
test
dec
adc
sbb
inc
xlat
mov
jmp
arpl
pop
faddl
add
pop
add
lods
push
push
std
into
adc
ret
scas
mov
insl
jae
enter
packssdw
sub
inc
xor
sub
pop
dec
pop
iret
mov
outsl
dec
pusha
add
sub
cmp
mov
insl
or
inc
outsb
xchg
jnp
movsb
xchg
stos
inc
inc
arpl
mov
and
neg
lods
mov
dec
and
les
inc
into
jo
lods
jge
inc
data16
jns
add
fldt
movsl
push
rolb
push
lds
jne
ljmp
and
pop
testl
fildl
dec
pop
sbb
xchg
enter
adc
jb
and
scas
pusha
add
sarb
gs
jl
xchg
cmp
in
icebp
sbb
adc
cli
or
xchg
push
test
stos
or
pop
push
dec
sub
pop
pusha
add
addb
fs
lods
popa
sti
call
add
fisttps
dec
mov
sub
mov
fdivr
sbb
in
mov
mov
add
add
enter
cli
dec
inc
in
add
mov
sub
scas
pushl
dec
movsl
mov
or
clc
lcall
fcoml
pop
shr
adc
les
aas
adc
push
and
xchg
das
push
ret
mov
mov
xchg
or
inc
fmull
loope
bound
iret
mov
push
fldl
ret
mov
add
pop
leave
fwait
jle
add
cmp
out
add
aas
data16
lret
mov
roll
adc
cmc
loope
repz
and
data16
out
addb
sbb
add
add
xor
adc
sub
push
lods
outsb
aam
mov
cmp
stc
pop
fsubr
jno
mov
or
fbstp
add
ret
dec
aad
rcll
mov
daa
shrb
and
jo
add
psubusw
cmp
flds
xor
mov
movb
lods
xor
adc
fs
add
test
shlb
in
jg
pop
iret
dec
xor
dec
lods
jns
adc
sbb
xchg
pop
shll
and
cmp
dec
sub
test
mov
enter
add
in
add
push
xchg
jno
fwait
pop
mov
add
into
outsl
or
add
or
sbb
les
jno
lods
ficoms
loop
mov
ss
xchg
inc
xor
pop
scas
aas
hlt
mov
pop
mov
pushf
icebp
pop
test
loopne
push
jmp
test
adc
fcmovnu
add
ja
pop
jne
adc
mov
lahf
stc
addb
push
cld
mov
add
test
pop
sarb
lea
jnp
adc
push
pop
xor
push
in
adc
dec
insl
lock
nop
inc
les
enter
or
xchg
imul
out
jecxz
movsb
cmp
xchg
cmp
lret
pop
hlt
faddl
xchg
nop
sbb
push
sarl
jle
repz
adc
adc
sbb
sub
aad
mov
push
ret
jl
add
push
in
arpl
rcll
sub
and
rorb
cmp
sub
and
mov
xor
push
out
jae
rolb
add
add
or
inc
inc
out
das
push
mov
dec
sbb
lea
test
jno
mov
fwait
outsb
cmp
mov
pop
and
sahf
imul
mov
jmp
push
jp
dec
scas
xchg
rolb
inc
add
sub
sub
xor
call
in
int3
cmp
enter
fisttpl
mov
imul
out
adc
adc
sbb
in
in
sbb
cwtl
js
inc
add
rorb
push
add
stos
out
imull
rcrl
add
sti
imul
mov
ss
mov
add
sub
loop
cmc
jl
fwait
mov
mov
add
incb
mov
inc
add
mov
push
pop
jp
and
cmpsl
or
add
add
icebp
mov
jnp
out
xchg
push
push
sub
cmpsl
in
insl
mov
xchg
ss
adc
dec
cmp
sti
mov
and
sbb
jp
jl
mov
sub
xor
pop
dec
jno
dec
ret
inc
or
push
push
mov
nop
dec
pop
add
and
arpl
mov
add
sbb
add
arpl
jbe
mov
jle
add
add
fcmovbe
scas
adc
aaa
xchg
xchg
inc
add
push
test
xchg
push
push
fs
imul
cs
in
cmp
add
add
or
pop
movsl
xchg
cmp
lcall
addb
push
xor
add
enter
stos
pop
outsl
ljmp
or
mov
cmpsl
cmc
sbb
fucom
jecxz
mov
ljmp
adc
test
add
repz
xlat
and
mov
inc
push
xor
mov
pushf
or
lcall
inc
add
jge
mov
aam
mov
stos
xchg
in
fcomi
mov
sbb
add
cmpl
mov
fistps
and
mov
add
push
pushf
pop
push
rorb
jecxz
cmp
and
adc
add
popf
xchg
dec
mov
popf
and
outsb
pmaddwd
adc
jecxz
loop
lods
xchg
pop
divb
lods
push
icebp
lret
push
fldcw
mov
push
scas
cmpsb
xor
cs
add
xchg
mov
adc
push
add
cli
add
rcll
jo
in
outsb
mov
shlb
push
in
pop
in
sub
add
in
lods
mov
cmp
lods
ror
xchg
fldl
cmc
dec
pop
movsl
into
sub
les
cmp
add
xor
push
push
es
fldcw
ret
add
jle
xchg
push
in
and
hlt
aad
lods
and
cmpsb
out
pop
mov
cwtl
sub
call
pop
addb
add
push
mov
loope
add
jnp
xchg
aas
sti
loopne
sub
mov
adc
iret
xor
filds
test
ds
dec
mov
imul
mov
jge
or
cltd
repnz
shll
mov
cli
push
lcall
scas
mov
dec
cs
or
cmp
push
sbb
incb
scas
mov
xor
sbb
pop
mov
adc
lcall
sbb
jb
pusha
add
fisubs
cs
cmpsl
adc
sbb
xor
or
or
mov
mov
push
popa
dec
enter
sti
iret
out
pop
push
sahf
maxps
add
jg
rorl
add
lods
ja
pop
movb
jge
cltd
sbb
pop
clc
dec
sbb
or
clc
pushf
or
add
cli
lahf
add
jb
push
mov
enter
test
or
cmp
sbb
fisttps
test
cmp
and
repnz
movsb
popf
xchg
nop
mov
jno
gs
jge
push
fsubr
sbb
push
roll
imul
add
push
add
mov
popa
lock
add
pop
sub
mov
cltd
inc
add
div
scas
andl
enter
dec
loope
mov
or
or
and
insb
sbb
ja
inc
pop
adc
sbb
mov
lds
mov
lcall
jg
mov
push
ror
sbb
cmp
or
sbb
xor
loop
jno
cmp
add
lret
mov
sub
add
mov
or
arpl
ret
or
push
hlt
push
dec
pop
lea
dec
mov
sahf
inc
out
xchg
and
movsb
mov
sbb
lods
js
adc
mov
xchg
mov
add
rolb
push
scas
mov
pop
insl
sub
add
dec
add
fchs
sub
add
les
mov
mov
inc
cmp
test
cmpsb
pop
and
daa
outsl
and
mov
push
imul
arpl
rclb
pop
add
frstor
sub
inc
ja
sub
add
aad
xchg
int
xor
ja
push
nop
test
addb
pop
pushf
cltd
stos
sbb
push
mov
in
xor
add
cltd
xor
fmuls
push
mov
fwait
ljmp
push
sbb
dec
xchg
jbe
aam
push
stc
nop
mov
cmp
jae
aam
fucomp
or
mov
pusha
add
loopne
mov
adc
testb
repz
jl
test
fstl
pop
adc
sub
or
ret
ret
and
sti
inc
add
add
and
loop
push
js
aad
or
outsb
pop
sub
push
sub
sbb
insb
arpl
nop
fcompl
mov
imul
inc
mov
pop
dec
bound
sahf
test
pop
or
stc
mov
push
addr16
je
sbb
in
add
sub
scas
cmp
ret
aaa
stc
jle
aad
sub
mov
push
push
jb
push
test
outsb
mov
fs
movsb
repnz
rolb
pmullw
and
sbb
aam
mov
addb
cwtl
xchg
jecxz
mov
mov
nop
push
mov
mov
pusha
add
or
ret
push
jp
add
add
cmp
mov
mulb
cli
sbb
test
inc
add
adc
dec
es
aad
pop
mov
ret
arpl
xchg
lods
sahf
data16
addb
add
adc
dec
fcmovne
in
lahf
clc
bound
sbb
dec
mov
mov
mov
push
jbe
sbbl
dec
push
push
fmul
and
add
pand
rolb
mov
incl
lret
xchg
aas
std
cmpl
cmp
jbe
mov
repnz
mov
mov
jbe
hlt
jns
rolb
addb
cs
test
aad
mov
add
in
les
xor
push
leave
or
xorl
add
dec
cmp
push
mov
mov
push
xchg
adc
cmp
sub
les
addb
xchg
arpl
loopne
into
stos
aam
notb
jbe
ljmp
hlt
notl
adc
stos
in
xor
inc
add
dec
dec
mov
hlt
dec
jnp
shlb
push
iret
dec
addb
ret
cmpl
jp
cltd
mov
xchg
adc
inc
add
or
dec
mov
pop
sub
xchg
bound
xchg
and
test
add
xor
dec
roll
pop
jl
push
mov
add
and
je
adcl
jp
adc
add
dec
mov
insb
fs
add
push
addr16
ja
inc
add
loop
mov
pop
pop
sbb
int
xchg
jmp
mov
imul
mov
add
add
pop
or
fldenv
jb
inc
test
push
pop
cmp
stos
outsl
xchg
rolb
jmp
mov
shll
cltd
pop
lods
or
into
ljmp
repnz
mov
repz
add
xchg
popf
cmpsb
xchg
jo
in
addr16
hlt
in
sub
aaa
popa
movsl
idivb
sbb
rcr
repnz
or
sti
mov
mov
mov
shlb
jns
jmp
insb
loop
into
rorb
sbb
or
adc
icebp
xor
loope
aas
scas
scas
cld
push
imulb
push
iret
nop
pop
aas
lret
fsts
test
mov
dec
lods
test
add
sbb
xchg
xchg
cld
jmp
sbb
pop
imul
mov
iret
push
movb
mov
push
hlt
jmp
jnp
pusha
add
insl
cmc
movsl
inc
add
mov
xor
xor
in
and
js
pusha
add
push
xchg
sub
aas
das
js
cmc
jae
rolb
dec
out
mov
and
mov
add
test
add
jb
add
pop
inc
dec
aad
out
xchg
inc
add
push
or
mov
dec
nop
mov
clc
leave
cmp
aad
cwtl
aam
pop
insb
mov
or
or
sub
roll
add
sub
add
mov
jnp
je
dec
mov
loopne
mov
ljmp
pop
pop
or
inc
adc
fldenv
lcall
add
sbb
push
or
adc
in
add
inc
jo
jae
test
inc
daa
xchg
popa
lods
or
les
inc
hlt
shr
inc
add
dec
shlb
cmp
add
add
mov
ljmp
add
adc
jbe
int3
or
out
ds
jp
test
lock
popa
cmp
clc
push
jne
imul
push
popa
add
ds
push
add
xchg
jmp
xchg
adc
push
ja
fistpl
fwait
push
js
or
stc
and
je
add
mov
push
mov
mov
xchg
mov
mov
mov
add
aam
dec
adc
xor
movsl
out
popf
and
shr
mov
inc
add
fsubs
push
ja
sbb
add
fadd
add
or
lock
or
lock
aam
add
insb
imul
add
popa
fstpt
stos
mov
mov
insl
enter
fcoms
enter
mov
xor
add
lret
dec
mov
sub
sti
stos
mov
js
add
out
loop
fwait
mov
sbb
clc
in
jmp
inc
adc
pop
xchg
or
call
cmp
sbb
stos
es
cmp
jae
fistpll
xor
mov
test
mov
pop
push
lret
pop
fiaddl
out
sbb
add
pushf
mov
bound
js
das
inc
add
sub
add
icebp
addb
repnz
das
xchg
mov
pop
push
outsb
mov
xchg
add
loope
xchg
dec
scas
add
xor
or
loopne
scas
out
adc
jg
add
andl
xchg
add
push
sub
aaa
test
push
popa
dec
add
mov
cmp
lcall
loop
les
xchg
rolb
insl
push
push
add
lret
and
dec
push
sub
add
cmc
and
cmp
fistpll
adc
jno
fadds
mov
push
mov
xor
add
loopne
and
jnp
jl
dec
insl
dec
call
lcall
mov
pop
jae
jp
pushf
jecxz
push
jge
movsl
repnz
mov
cmp
insl
and
insl
in
xor
xchg
jo,pt
sahf
imul
mov
test
dec
fwait
ljmp
add
imulb
cmpsb
lods
and
stc
repz
dec
cmp
pop
rolb
adc
addb
jnp
jge
xchg
sbb
pop
outsb
pop
int3
cmpl
lcall
push
hlt
mov
lahf
sub
sarl
push
bound
loop
sub
cld
or
bound
xor
les
push
aam
jne
mov
cmpsb
mov
add
pusha
add
pop
add
ljmp
sub
add
test
jl
and
dec
xor
stos
test
int3
jns
or
push
add
dec
mov
and
movsb
scas
mov
out
scas
or
jecxz
add
mov
adc
xlat
ret
loopne
ret
xor
movsl
insl
mov
pop
xchg
sbb
add
into
cmp
jb
lods
push
repnz
lods
mov
add
pop
push
cmpsb
adc
mov
push
add
test
add
mov
add
negb
cmp
aas
movsb
inc
add
add
add
repnz
add
push
xor
mov
insl
fstpt
aad
aam
inc
add
dec
add
adc
hlt
les
cmp
xlat
jb
inc
andl
lods
in
adc
sbb
pop
hlt
fistl
bound
or
mov
xchg
in
jno
mov
push
xchg
add
shrb
or
push
fwait
movsb
push
add
push
push
add
addb
mov
mov
fcmovu
pop
test
outsb
test
pop
data16
nop
imul
and
lock
inc
add
std
sbb
les
outsb
ret
es
and
cmp
mov
imul
addb
xor
add
push
fadd
mov
mov
rolb
sub
scas
ret
mul
add
cmpsb
cli
inc
daa
mov
jmp
jbe
test
mov
add
stos
scas
je
mov
dec
loope
aam
pop
mov
pop
xor
add
add
jg
and
sbb
imul
push
outsl
pop
daa
inc
add
sbb
or
xchg
and
movsb
movb
add
xor
cmp
add
xor
bound
mov
sbb
les
call
mov
add
addr16
jl
jecxz
and
scas
push
add
sbb
adcl
mov
rcl
outsl
fcompl
pop
adc
add
bound
and
and
stos
jns
jne
push
jnp
test
jns
pop
insl
orl
add
xor
aam
lahf
cmp
ds
clc
das
not
out
arpl
stos
in
sbb
add
cli
inc
and
std
jae
inc
fsubrl
pop
mov
push
jno
push
sub
cmpsl
mov
mov
xchg
nop
mov
adc
test
jae
mov
xor
add
push
push
movb
xchg
pop
jns
mov
out
jge
cmpsb
addl
ret
addb
adc
add
mov
int3
roll
in
out
lods
je
mov
pop
pop
xchg
jb
insl
ss
mov
lea
pop
push
nop
cmp
add
pop
rolb
inc
add
sbb
mov
cmc
xor
hlt
and
jb
sbb
inc
popf
imul
jo
xchg
ret
gs
incl
in
test
jo
movsb
add
addr16
jmp
pop
add
out
xchg
aam
add
and
mov
cmp
xchg
inc
add
add
sbb
cmp
xor
call
sbb
mov
sbb
aaa
aam
mov
inc
adc
bound
pop
mov
pop
pop
push
subl
call
add
xor
inc
mov
add
cwtl
pop
cmp
pop
insl
dec
outsb
sbb
adc
adc
aad
add
xor
das
ljmp
cmp
and
push
lahf
sub
xchg
addl
mov
cli
push
stos
mov
push
adc
push
test
sbb
xor
lret
or
add
das
les
sbb
sahf
rolb
add
sbb
mov
mov
gs
int3
xor
call
jp
xchg
cli
inc
add
cltd
int3
lahf
test
sbb
call
push
push
xor
jo
fdivr
sbb
or
ja
ljmp
nop
push
popf
cwtl
aas
test
dec
sub
loopne
lods
imul
xchg
addb
pusha
add
add
add
not
cmp
rcrb
mov
inc
add
pop
dec
cmpsb
cmp
add
jne
mov
addb
jnp
insl
iret
pusha
add
rep
cld
sub
icebp
js
rolb
pop
pusha
add
popf
or
ret
mov
inc
mov
in
xor
lcall
add
cmp
mov
in
in
xor
in
or
cmpsl
fcmovnu
pusha
add
mov
dec
loop
inc
fs
hlt
xchg
insl
sub
repz
mov
dec
push
push
inc
test
orl
jne
shr
je
jae
jg
imul
or
pop
lods
and
testl
addb
cmpsl
call
inc
mov
aaa
pop
fcoml
je
push
dec
hlt
iret
mov
lahf
stos
xor
push
sbb
ljmp
pushf
lea
repnz
rcll
outsb
repz
sbb
arpl
iret
xor
ljmp
mov
adc
adc
inc
jbe
fsubl
xor
add
fwait
ss
xchg
ss
aas
push
inc
add
icebp
imull
lods
inc
add
sar
mov
add
stos
test
add
push
sbb
cmp
sub
cmp
rclb
mov
fiaddl
hlt
pop
scas
cltd
rolb
add
in
sub
enter
movb
inc
add
jg
mov
fiadds
or
push
aad
inc
add
cwtl
mov
sbb
mov
bound
leave
adc
fimull
popa
and
repz
inc
popa
or
or
add
add
and
push
loopne
out
das
rorb
add
mov
outsl
sbb
loop
sbb
mov
push
cli
ja
lahf
jae
cmp
mov
add
push
addb
dec
dec
mov
iret
dec
dec
fdiv
addr16
sbbl
pop
cld
cwtl
mov
addb
std
mov
lods
dec
push
dec
or
in
mov
shlb
add
jns
ljmp
mov
pop
mov
out
int
add
push
add
cmp
es
pop
je
mov
mov
lods
addb
test
aas
push
insl
add
add
mov
shl
mov
add
sub
bound
in
add
addl
jne
jb
add
dec
call
add
fwait
scas
adc
cmp
push
push
jo
pushf
aad
ret
in
mov
insl
xorl
adc
pushf
aad
arpl
add
or
mov
stc
xchg
int3
push
scas
push
fsts
or
mov
jnp
mov
push
pusha
add
cmp
jp
mov
xchg
and
ljmp
pop
sub
push
loop
std
lds
xor
add
xor
mov
stos
mov
fstl
or
mov
mov
iret
jg
push
and
and
addb
fsubs
std
mov
xchg
xchg
jp
jmp
pop
jmp
mov
pop
pop
les
icebp
sub
in
movsb
lods
fcmovu
push
ret
add
cli
mov
stos
repnz
dec
xchg
test
fwait
aad
jbe
add
push
sti
xchg
into
test
rclb
adc
jecxz
add
fcmovb
add
cmc
push
add
movb
dec
loop
pop
mov
push
jp
orl
mov
add
add
scas
fsubrl
add
add
sbb
sub
dec
or
add
mov
std
test
das
jg
ret
jle
cld
cli
or
pop
cltd
push
addb
add
ds
cmp
jecxz
lret
and
loopne
push
ror
and
and
pop
test
add
mov
pushf
cmpsb
pop
pop
fs
rolb
mov
add
fsubrl
addb
jge
std
lea
dec
mov
push
push
fstpl
daa
in
push
push
add
lret
jp
mov
scas
hlt
adc
dec
or
inc
push
inc
add
adc
inc
mov
push
test
je
inc
iret
mov
fimuls
int3
jge
add
cmc
adc
test
in
aaa
adc
xchg
adc
inc
stos
lock
xor
xor
clc
jle
cmp
add
shr
cmc
int
jl
xor
inc
add
lahf
mov
add
mov
aam
rolb
add
push
stc
jge
leave
outsl
gs
out
mov
push
test
cmpsb
imulb
mov
test
sbb
mov
fmull
mov
dec
pop
hlt
xor
adc
sbb
and
imul
add
aaa
jae
sub
ds
add
int3
addb
pop
fwait
push
xchg
rcl
addb
pusha
add
cmpsb
shrl
scas
sub
mov
sub
dec
jle
arpl
add
gs
fnsave
cmp
adc
add
sub
mov
fdivs
mov
jl
inc
add
or
hlt
jl
cmc
mov
rcll
sbb
mov
negb
pop
pop
out
aaa
pop
lahf
xchg
subl
mov
jl
loopne
push
sub
bound
and
arpl
insb
fists
inc
stos
pop
add
and
add
pop
mov
lods
call
mov
test
subl
push
ds
mov
rorb
add
add
or
loope
sbb
fidivrl
jo
xorl
mov
lcall
inc
dec
imul
sti
dec
inc
inc
stc
leave
or
fwait
xor
lahf
data16
dec
jo
flds
add
hlt
mov
or
cltd
mov
loopne
mov
jg
outsl
mov
sbb
cld
out
scas
inc
add
adc
movsb
aas
dec
sbb
fs
cmp
add
lea
stos
mov
mov
cmp
lcall
cli
clc
sub
icebp
mov
mov
cltd
divl
fisubs
push
push
call
movsl
mov
lcall
leave
mov
addr16
adc
imul
ret
sti
fsubrl
pusha
add
mov
mov
ljmp
push
or
add
fwait
mov
push
test
aam
adc
jno
addb
lods
ret
inc
add
fucomp
sahf
out
movsl
xchg
and
std
jmp
dec
push
add
mov
lcall
nop
jl
push
adc
rolb
adc
add
ja
xor
rclb
sub
stc
sbb
out
mov
popf
imul
push
sahf
loopne
and
aas
into
adc
inc
add
stos
gs
pop
lds
movsb
xchg
mov
mov
mov
pusha
add
xor
stc
push
push
cwtl
and
inc
or
loopne
mov
in
mov
inc
add
cs
imul
mov
add
fiadds
faddl
add
cmp
clc
sahf
mov
mov
xchg
dec
call
mov
fstl
xor
nop
fidivs
jns
mov
add
clc
rorb
test
or
andl
and
enter
push
outsb
fldl
adc
in
mov
push
pop
in
stc
adc
push
fs
dec
in
jbe
xchg
push
std
jo
inc
add
aad
jae
std
testl
inc
cmp
in
mov
xchg
imul
add
mov
sti
mov
mov
out
inc
arpl
aam
in
popf
ss
movb
pop
mov
add
cmpl
andl
ljmp
cmp
sti
push
sbb
pushf
mov
mov
into
jp
loopne
mov
mov
xor
inc
mov
mov
push
bound
mov
mov
ja
fcoml
xchg
popf
cmp
bound
in
movsl
mov
mov
lcall
mov
push
stos
adc
cmp
cmpsb
adc
cmc
cmp
pop
lret
sub
and
rcll
add
fwait
int
loop
insb
xor
rol
pop
or
cmp
sbb
test
stc
ror
fsubrl
loopne
lock
lods
arpl
mov
pop
jbe
push
sub
sub
icebp
lock
or
add
into
inc
mov
xor
lcall
sbb
xchg
jae
lea
das
addr16
xchg
int3
repnz
jae
add
jg
decl
cli
fnstsw
es
rcll
mov
cmp
jo
add
sbb
cmp
in
mov
add
mov
mov
add
fwait
add
mov
add
mov
cmp
popa
mov
hlt
fsubs
mov
push
shlb
pop
jns
stc
je
stos
xchg
rolb
add
pop
push
jmp
enter
add
cmpsl
iret
jno
mov
test
push
out
add
loopne
dec
enter
adc
sbb
mov
fs
lds
xor
mov
adc
out
mov
cmp
lahf
loop
mov
in
add
xchg
xor
cmp
and
add
pusha
add
adc
test
dec
test
hlt
mov
cmp
out
cmp
mov
jae
jg
and
lods
cmp
repz
adc
pop
xor
test
enter
test
mul
sahf
int3
int
es
rol
loop
cmp
sbb
push
gs
mov
imul
ljmp
and
dec
xchg
aam
movsb
lods
cmpsb
loop
ret
mov
or
addb
inc
add
bound
fsubrl
add
loop
push
add
cmpsl
insl
push
and
fnstenv
lods
scas
rolb
or
sbbl
cwtl
dec
push
jne
aas
sub
pop
mov
in
cmpl
xchg
sti
iret
movb
test
mov
pop
mov
lea
and
dec
mov
enter
pop
mov
stos
shl
jle
pop
dec
mov
xchg
and
push
scas
sarb
add
dec
sub
repnz
int3
push
fwait
mov
dec
jmp
pop
sbb
mov
mov
xchg
subl
add
jns
mov
aad
sub
adc
fistpll
sbb
cmp
push
mov
mov
add
scas
dec
xchg
loop
test
xor
lea
sahf
and
leave
outsl
lahf
int
and
test
mov
dec
mov
xchg
xchg
xor
xlat
mov
dec
sbb
aaa
or
loop
mov
mov
mov
cwtl
std
aaa
jmp
dec
mov
lret
add
cmpsb
lahf
sahf
push
dec
insl
cwtl
sub
mov
test
sub
notb
cmp
jmp
add
das
fdivr
adc
aaa
stos
xchg
or
pop
xor
sbb
jmpw
cmpsb
pop
jg
or
scas
push
xchg
outsl
pop
push
mov
lret
mov
lock
pop
data16
xchg
ret
dec
in
test
rcrl
push
mov
scas
add
sub
mov
loopne
mov
adc
rolb
add
es
add
mov
aas
movb
jnp
test
inc
add
xchg
pop
bound
fsubr
cmpsl
push
mov
add
test
pop
inc
adcl
mov
jge
mov
outsb
aas
fsub
push
xor
stc
insl
mov
int
dec
out
mov
movsl
lea
mov
add
sbb
cmp
sbb
sub
mov
jge
dec
xlat
lods
pop
fildl
sbb
inc
dec
in
add
push
shll
add
or
add
mov
ret
push
dec
push
sbb
add
push
xchg
aas
dec
jg
xchg
stos
sahf
stos
mov
test
ja
sahf
mov
out
inc
add
sub
dec
addb
clc
xchg
fstl
les
jmp
add
aam
mov
mov
add
push
test
xor
les
add
into
cmp
insb
inc
add
pop
mov
sbb
cmp
aad
cmp
movsb
icebp
pop
and
aam
add
popa
in
imul
insl
or
pop
mov
addb
and
call
mov
pusha
add
ficoml
pop
addb
ljmp
outsl
push
cmpl
mov
lock
or
nop
daa
es
rorb
mov
rcll
or
inc
or
xchg
int
inc
add
loope
rolb
lock
repz
add
fwait
or
push
fwait
insb
xchg
scas
jp
push
cmp
mov
je
add
add
lds
add
shll
cltd
push
push
mov
add
mov
adc
add
xor
addb
sub
stos
bound
add
or
hlt
push
imul
dec
mov
aas
imul
jecxz
dec
adc
mov
mov
and
aaa
sbb
adc
mov
inc
cmp
add
push
clc
stc
inc
mov
push
xchg
mov
push
add
cli
mov
sub
sahf
add
add
push
lock
in
push
lea
test
aad
mov
add
or
jl
adc
scas
loope
xchg
xchg
rolb
daa
sbb
dec
mov
add
cmc
fidivrs
and
fsubp
pop
sbb
movsl
call
stos
dec
lods
cmp
add
repz
adc
jb
data16
add
jecxz
add
fs
rolb
sahf
lea
jns
pop
lds
add
add
es
ds
loop
aaa
dec
sub
dec
adc
cmp
ret
adc
jne
adc
push
pop
adc
aam
cmpsb
xor
les
les
inc
add
mov
mov
add
das
mov
lock
sbb
fisttps
mov
sbb
mov
mov
int
clc
cmp
mov
add
adc
in
movsb
mov
lcall
xor
mov
cmp
rolb
in
cmp
loope
push
add
lds
cld
sbb
pop
jne
test
das
loope
and
ret
movb
mov
add
stos
dec
ljmp
pushf
jnp
into
or
fdivl
sbbl
mov
push
in
jp
xrelease
into
std
inc
fidivrl
pusha
add
lret
mov
xor
cwtl
push
stc
mov
dec
or
lret
dec
pushf
pusha
add
lret
and
scas
int
mov
pop
loope
or
dec
push
pop
js
push
aam
mov
xorl
push
xor
fs
in
sarb
add
mov
push
pop
add
pop
push
repz
pop
mov
sub
sbb
test
add
cpuid
pop
sbb
icebp
dec
jns
add
and
imul
movb
add
lods
add
popa
insb
xchg
daa
jp
nop
adc
xor
add
sahf
les
sbb
call
scas
sub
pop
outsl
or
lea
inc
add
or
and
jle
or
push
add
add
push
out
push
dec
mov
push
mov
add
mov
and
insb
lds
dec
add
dec
out
inc
add
adc
push
mov
leave
pop
inc
jge
cmp
mov
fiaddl
add
mov
lahf
mov
cli
cmp
sub
mov
sub
div
repnz
mov
pandn
add
add
mov
inc
cmp
movsl
xor
pop
xor
imul
aaa
dec
fsubs
das
xor
push
jl
jb
or
bound
xchg
jo
add
lea
sub
add
adc
aaa
fadds
add
pop
lahf
les
in
inc
add
dec
pop
ret
imul
popa
add
cmp
sbb
ljmp
cmpsl
mov
mov
ret
sbb
sub
xor
and
outsl
add
mov
lds
add
add
movsb
push
inc
pop
mov
xchg
mov
xchg
outsl
popa
xor
push
sbb
lcall
out
dec
mov
imul
stos
js
dec
push
out
cwtl
outsb
in
daa
pop
bnd
imul
dec
mov
add
inc
add
loop
iret
fisubrl
cli
scas
in
je
cmpsl
add
out
repnz
popa
cmp
rcl
inc
add
dec
daa
fstl
test
je
jle
xor
sub
pop
int3
sbb
pushf
movb
add
mov
nop
xchg
fwait
addb
cmp
cmp
jg
pop
fldenv
pop
mov
sub
inc
add
mov
dec
cmpsb
ljmp
push
add
stos
push
jne
cwtl
inc
push
rclb
in
sbb
inc
add
push
cmp
call
vpsubw
addb
jne
inc
add
cmp
iret
loop
add
cmp
xchg
push
xor
repz
cmc
pop
shll
mov
fldl
movb
jb
mov
jg
bound
loopne
fsubl
test
stos
jmp
call
xchg
bound
mov
outsb
outsl
adc
cwtl
insb
or
faddl
add
addb
sub
cmpsl
inc
shll
divb
mov
inc
add
scas
ja
push
add
sbb
pop
cltd
mov
xchg
data16
das
fadd
add
int3
jnp
std
cmpsl
pop
daa
jb
add
insb
test
add
mov
or
out
and
loop
xchg
jl
rep
ljmp
mov
push
push
add
int3
jae
add
mov
mov
data16
jns
add
xchg
lods
pop
mov
jg
mov
and
insl
cmpsl
cli
stc
repz
sub
incl
int
and
daa
push
xchg
shlb
fstps
mov
mov
jl
xchg
ja
add
bound
adc
push
mov
adc
popf
dec
int
mov
sbb
push
push
mov
add
ret
fsubrl
shl
mov
rolb
imul
add
sub
out
movb
icebp
adc
xor
out
add
push
shlb
lds
dec
cmp
jp
cmp
cmp
rdrand
mov
add
add
push
sub
xchg
jae
xchg
in
push
mov
xchg
dec
mov
lods
mov
movb
cltd
ficoml
mov
dec
inc
add
aad
pop
notl
jg
push
add
jge
sub
neg
inc
mov
sub
sub
mov
rorb
test
mov
loope
repz
and
cmc
andl
iret
push
mov
mov
adc
add
mov
or
jmp
imul
add
inc
add
jb
adc
loope
fcmovu
ja
push
shlb
cmp
cwtl
aad
aad
repz
mov
adc
clc
inc
adc
jno
cli
dec
inc
add
sbb
adc
fstpl
out
pop
leave
cmpsb
into
jae
out
fldcw
cld
les
gs
lods
inc
add
insb
dec
idivb
pop
add
sbb
inc
add
addr16
inc
add
add
and
mov
add
sub
mov
ret
imul
add
add
xchg
cs
inc
xor
push
repnz
movb
xlat
movb
iret
jg
sbb
out
cmp
xchg
inc
lret
int
popa
xchg
lret
inc
mov
add
das
fmul
xchg
inc
mov
lret
ds
add
cmpsb
ljmp
jmp
mov
pop
jmp
adc
add
scas
hlt
dec
ss
sub
mov
add
bound
xlat
mov
xor
xchg
push
test
test
lret
add
add
fstpt
sub
and
inc
add
push
bound
or
add
aaa
fwait
pop
ds
pop
fcomps
into
psrlw
adc
pushl
jae
jb
rep
clc
inc
add
push
xor
dec
stos
push
cld
sbb
es
add
and
inc
xor
cli
mov
mov
ret
push
std
adc
jb
nop
movb
jge
add
add
fs
stc
mov
sbb
sub
setbe
daa
push
add
out
fcoms
repz
scas
lds
xor
js
sti
aaa
jle
call
pop
aad
push
addb
mov
cld
inc
shrb
or
jb
add
nop
jns
pop
popa
sub
mov
movsl
out
add
stos
lahf
imul
jbe
fadd
xor
hlt
xchg
dec
push
and
push
ror
repnz
or
nop
push
arpl
cmp
ret
lods
testl
adc
pushf
or
pop
dec
popa
loop
mov
add
mov
inc
inc
add
sbb
sbb
dec
repz
xchg
out
test
and
icebp
mov
cmp
or
mov
bound
xchg
push
or
xor
sbb
daa
push
aas
daa
sub
xor
cmc
out
sub
movb
ljmp
pusha
add
add
add
fimuls
cmpsl
or
add
add
pop
movsb
mov
pop
ret
mov
add
aaa
dec
loope
jg
pop
and
add
push
in
mov
fwait
enter
dec
outsl
xor
add
testb
dec
lcall
jmp
rolb
bound
lods
je
cs
and
push
repz
mov
cltd
cli
jb
mov
cmp
fmull
inc
jmp
adc
call
outsl
les
les
ror
mov
and
ds
loop
and
jl
test
adc
mov
add
push
sti
mov
sar
dec
jmp
out
xchg
sub
aas
pop
pushl
pop
lahf
scas
mov
mov
jmp
mov
sub
inc
add
movb
mov
xchg
cmp
sarl
mov
in
adc
les
cmp
cmp
dec
mov
dec
mov
stos
jns
rclb
inc
mov
cld
cld
mov
mov
mov
arpl
flds
add
insb
jle
sub
mov
xor
xchg
mov
aam
dec
pop
cmpsl
sub
test
test
dec
xorl
jne
jb
incl
add
pop
mov
fcompl
add
inc
add
lods
addr16
mov
repnz
add
fsubr
dec
dec
scas
jecxz
jl
outsb
pop
mov
dec
xchg
mov
push
add
add
mov
cmp
push
cmpsl
scas
jle
add
shll
dec
mov
dec
push
lock
dec
jns
lods
cli
mov
fimuls
mov
xchg
fmull
add
sarb
dec
stos
js
mov
int
into
inc
add
pop
mov
cltd
xor
js
into
or
mov
int
popf
loope
add
jl
cmp
pop
xor
xchg
and
jge
xchg
add
cmp
xor
xlat
xchg
pop
icebp
dec
pop
test
xor
xlat
clc
lret
push
add
xor
xor
and
pop
push
add
add
and
inc
add
dec
arpl
inc
add
out
or
adc
pop
or
pop
enter
movsb
mov
ja
call
ret
fstps
lods
scas
mov
ror
dec
ret
out
sahf
rolb
sysret
fidivrl
dec
xor
lea
inc
add
shl
cld
test
adc
add
cwtl
test
xchg
sub
cmp
gs
mov
inc
add
mov
push
lock
push
add
add
incb
jae
or
add
cltd
mov
push
dec
inc
add
push
test
add
pushf
lahf
push
out
test
add
push
push
adc
testb
mov
int
ret
addr16
jecxz
je
sub
mov
or
adc
imul
xchg
and
or
inc
shlb
add
popf
lds
shr
mov
mov
into
push
pop
push
add
out
lea
sbb
sub
leave
gs
adc
sbbl
jne
int3
dec
cmp
popa
es
xchg
fsubrl
sbb
nop
icebp
cli
out
pop
movsl
cmp
jne
mov
das
mov
test
cmp
xor
repz
aaa
insl
aam
xorl
shlb
xor
lods
js
in
aad
sti
push
and
add
or
and
insb
or
shlb
call
in
add
add
out
adcl
add
add
or
add
fimuls
sub
or
arpl
iret
stos
fldcw
mov
add
xchg
mov
out
xor
mov
add
lock
mov
and
out
jecxz
and
adc
jns
add
add
cltd
push
mov
aad
ja
pop
push
add
mov
loope
pop
shlb
add
inc
add
cmpsl
adc
mov
aaa
inc
add
xchg
loop
fldt
mov
mov
pop
std
cmp
pop
push
stos
inc
add
lds
out
adc
addr16
pop
pop
hlt
imul
and
mov
lret
mov
pop
push
xchg
movsb
adc
add
add
xchg
mov
int3
and
imul
and
push
fst
ret
aas
fstpl
sbb
cltd
bound
push
add
add
mov
addb
rcl
or
mov
add
pop
test
lcall
addr16
mull
insb
imul
jb,pn
andl
rolb
add
mov
imul
mov
out
xlat
add
in
add
and
and
and
pushf
call
fbstp
fsubrl
push
mov
iret
stos
in
scas
jne
movsl
lods
pop
ret
add
in
xchg
aaa
nop
xchg
lods
mov
jp
cli
mov
add
push
sub
sti
cmpsb
divb
stos
pop
int3
lret
aam
jle
add
rolb
insb
pop
xor
fcomps
movb
addb
add
cwtl
test
dec
stc
shlb
add
repnz
adc
stos
xorl
in
pop
clc
pushf
rcrl
or
sbb
aaa
cwtl
insb
js
jmp
jle
fldl
in
mov
push
xor
and
pop
nop
test
fistpll
add
testb
insb
or
inc
add
xor
je
lods
pop
sbb
mov
push
push
pop
fstps
outsl
cmp
add
add
mov
jp
xchg
cwtl
sti
mov
and
outsl
fldenv
pop
outsl
roll
sub
clc
jp
fnstsw
imul
filds
leave
fld
cli
rcrb
dec
out
fstl
lock
insb
xchg
lcall
adc
mov
stc
popa
dec
test
addb
xchg
jmp
xchg
rolb
cs
clc
ficoms
mov
sti
lret
iret
jmp
dec
jns
jge
pop
je
jecxz
loope
dec
in
dec
lret
lret
mov
add
int3
and
call
lods
orl
shlb
ret
dec
in
nop
sub
pop
xor
add
pusha
add
jnp
or
aad
jo
fistpll
dec
lods
fs
je
add
jmp
inc
loop
lods
fidivrl
in
mov
test
popa
outsl
xchg
or
sbb
inc
insb
gs
icebp
sti
and
icebp
jbe
mov
in
ja
sti
push
add
pop
xor
add
xor
mov
cmp
adc
inc
add
pop
ret
mov
addb
add
in
and
rolb
xor
jo
dec
mov
xor
push
sarb
jo
add
and
add
lret
push
jmp
cwtl
inc
cmp
and
aas
dec
add
and
popf
addr16
lret
xor
adc
push
sti
pushf
fadd
ds
add
add
add
in
les
xor
int
repnz
sub
fcomip
or
mov
push
sahf
fmul
pushf
imul
fwait
ss
xchg
cld
jl
loopne
add
mov
out
arpl
sbb
fadds
add
xchg
test
pop
sar
mov
mov
nop
sbb
fwait
inc
add
jo
arpl
nop
movsl
repz
cmp
mov
bnd
jne
and
sub
inc
jae
rolb
fstl
sti
mov
push
fcompl
out
push
adc
jb
jp
and
xchg
and
dec
popf
push
and
addb
dec
and
pop
push
jle
push
das
les
pop
pushf
mov
js
and
add
je
adc
add
pop
adc
add
xor
iret
and
add
addb
mov
jbe
call
and
cwtl
movb
adc
push
add
jnp
add
dec
fistl
loope
jnp
mov
je
addr16
push
push
sub
adc
push
ds
pop
push
fiadds
add
sub
cmp
xchg
xchg
cmp
or
inc
add
add
shrl
sbb
cmc
pop
xchg
jge
in
addr16
xchg
repnz
push
shll
xor
add
popf
repnz
sub
pop
mov
add
test
xchg
xchg
imul
xor
fistl
das
inc
lods
cmpsb
push
in
pop
jl
or
arpl
sbb
mov
inc
add
loopne
mov
imul
jbe
test
test
mov
frstor
add
or
add
dec
movsl
xchg
enter
outsb
les
negl
jle
arpl
xor
in
cmp
jl
sub
out
call
xor
add
das
lret
mov
aad
jg
leave
pushf
dec
mov
dec
cmp
xchg
jmp
in
clc
dec
test
sub
push
xchg
lods
cmp
mov
scas
adc
add
sbb
call
mov
cmc
dec
or
xor
int
fwait
cmp
add
addb
lods
mov
xchg
sysexit
fwait
jle
jae
pop
js
sbb
xlat
cmp
out
mov
mov
xchg
dec
cmp
sbb
push
add
lret
xchg
push
mov
add
int
fstl
add
jmp
mov
pop
fdivl
add
add
mov
pusha
add
lcall
add
sbb
iret
insb
aam
sbb
jbe
fmulp
adc
add
mov
mov
in
mov
ret
inc
add
and
dec
jp
test
lods
jb
das
addb
rolb
icebp
les
ret
cltd
out
lea
push
and
xor
mov
and
jae
lods
xor
push
push
out
ss
push
push
mov
cld
loop
addb
sahf
jne
mov
cmp
sub
lea
lock
leave
cmp
movsl
jae
repz
pop
push
xor
hlt
lods
pushf
adc
or
sbbl
add
ss
leave
sub
lods
ret
mov
mov
call
cmp
sub
inc
pushf
sahf
and
adc
enter
fistps
sahf
mov
push
fisubrs
mov
push
add
stos
in
and
mov
mov
aam
rolb
inc
sbb
add
and
cmp
jl
mov
jg
push
adc
sub
sbb
mov
fnstcw
xor
jg
stc
lock
add
mov
push
add
lds
sbb
xchg
fdivl
add
cmp
add
fdivs
jne
out
push
xor
mov
push
in
mov
add
pop
cmp
and
fildl
loopne
push
sub
pushf
aaa
ds
xchg
or
rorl
add
pop
cmp
pop
xor
pop
sbb
add
imul
and
leave
mulb
inc
add
cmp
jno
shll
xchg
jecxz
add
push
test
cmp
sbb
test
add
shrl
lds
repz
xor
xchg
leave
jp
jmp
lret
mov
sub
aaa
inc
add
inc
add
add
loopne
add
enter
add
dec
out
xchg
or
lods
inc
xchg
or
inc
add
jmp
test
fisubrs
jge
roll
and
out
mov
mov
in
add
dec
jne
data16
mov
test
rolb
add
movsb
push
push
xchg
add
aam
inc
push
sub
xor
imul
int3
pop
mov
xchg
add
adc
and
in
adc
add
js
add
pop
ja
cli
jns
sbb
or
cmpl
hlt
pop
pop
pop
cli
push
icebp
js
push
sub
or
mov
pop
lret
cmp
sub
push
in
mov
rolb
fstp
int
rcl
adc
adc
out
rorl
sbb
stos
cmp
push
stc
into
nop
stc
movsb
cld
inc
add
dec
dec
pop
mov
add
jb
lret
sub
push
mov
add
xor
mov
insb
jbe
clc
xor
jne
mov
mov
addr16
jns
cmp
scas
sub
xor
mov
mov
sbb
mov
scas
mov
or
imul
sbb
pushf
adc
enter
cld
aaa
xchg
mov
shrb
lods
add
xorl
and
xlat
dec
or
cmpsl
divb
repnz
push
int3
in
or
xchg
add
loope
movsl
mov
pop
ss
cltd
cmc
or
or
cmp
in
lock
mov
pop
ljmp
add
arpl
test
add
mov
cmp
lock
aaa
out
aam
dec
imul
push
sbb
imul
lods
push
inc
add
xchg
jg
addb
add
ja
lret
push
aam
jbe
fdivs
bt
in
clc
adc
cmp
sbb
fsubrl
insl
dec
xor
movb
mov
fldt
jg
xor
and
mov
in
push
add
shlb
lahf
sub
bound
jnp,pn
addb
pop
ret
hlt
sub
int
pop
sub
add
lahf
mov
adc
les
pop
gs
fists
add
in
jns
xor
push
jnp
or
xlat
add
aad
pop
pusha
add
test
dec
mov
aas
dec
sub
movb
push
mov
sbb
xchg
push
sar
call
daa
ljmp
cmp
adc
cs
cwtl
cmp
jle
shr
dec
aaa
cltd
ret
sahf
shll
or
in
add
pop
xchg
and
add
inc
add
sbb
dec
and
stos
pop
xor
movb
cmc
push
fistpl
out
stc
xchg
movsl
mov
dec
and
mov
or
cmp
sbb
dec
xchg
stc
push
aam
pop
mov
push
add
fs
aam
pop
add
data16
aam
xchg
pusha
add
xlat
xchg
mov
xlat
fildll
dec
xor
insb
or
movb
xor
jbe
add
repnz
add
dec
int
and
mov
jg
push
std
jne
out
inc
sub
sti
jne
xor
inc
out
pop
cld
jnp
jno
mov
pop
pop
adc
lret
xor
add
jg
lret
ds
insb
loopne
fimull
push
mov
outsb
lods
sbb
int
xor
push
dec
addr16
mov
and
daa
movb
hlt
and
das
dec
sub
pop
addb
mov
xor
stos
sti
pop
jb
in
fwait
xor
add
es
pop
test
mov
and
fdivl
jp
or
insb
push
lahf
leave
push
xchg
addl
push
pop
lea
aas
cmp
cmp
mov
xchg
add
xchg
ss
add
daa
popa
xor
rcl
aaa
mov
add
and
adc
pop
mov
rorl
bound
push
push
jb
push
in
mov
inc
das
lcall
pop
out
int3
xchg
leave
xchg
jno
sub
loopne
add
icebp
jle
sub
mov
jbe
stos
lea
addb
add
and
jl
add
aad
pop
test
sub
sub
push
xchg
and
scas
js
or
xchg
cmp
ja
push
mov
mov
cld
fisubl
add
pop
mov
sti
test
inc
add
subl
add
or
mov
sbb
mov
cmp
jo
add
sarl
inc
pop
test
jae
sbb
cmp
mov
mov
lret
add
add
cld
jge
pushf
or
mov
jns
in
sub
add
cwtl
cmpsl
in
add
jg
ss
pop
cltd
mov
je
daa
dec
mov
sub
dec
or
xchg
fisttpll
mov
in
les
jecxz
aas
jge
loope
adc
loope
subl
mov
addr16
stc
rorb
rolb
add
test
mov
adc
pop
popa
mov
loopne
dec
add
add
xor
add
xor
enter
addb
cld
inc
add
mov
adc
pushf
sub
loop
mov
xchg
push
add
les
leave
outsl
aam
xor
js
mov
add
adc
sbb
shll
mov
addb
jns
outsb
xchg
mov
out
xchg
sub
cmp
mov
pusha
add
push
sbb
loopne
insl
sbb
add
lods
sbb
mov
sbb
and
add
in
pop
cmc
mov
sti
dec
inc
add
sarl
outsl
rolb
xchg
sub
jmp
addr16
pop
mov
add
adc
add
stos
arpl
xchg
frstor
mov
or
sub
ds
pop
daa
dec
xchg
jnp
rorl
push
imull
sahf
insb
fiaddl
cmc
mov
fs
repz
mov
fiadds
icebp
testl
ljmp
mov
cmovb
push
dec
rcll
add
pop
test
ja
lods
fisubrl
xor
adc
ds
pushf
in
push
pushf
mov
or
sbb
cld
iret
mov
hlt
rorb
push
sbb
outsb
lods
loop
jns
aaa
je
mov
pop
in
add
add
mov
pop
aam
imul
cld
out
mov
jl
adc
lock
add
in
icebp
add
sti
stos
pop
addb
pop
cmp
add
sbb
movsbl
test
xor
add
push
inc
das
xor
add
mov
jle
bound
insb
out
loope
pop
push
mov
cmp
sbb
stos
jmp
les
int
xchg
test
jno
jle
xlat
mov
or
js
push
dec
mov
push
arpl
add
add
adc
out
add
mov
les
mov
xchg
and
scas
aam
dec
popf
push
imul
or
mov
adc
and
or
scas
loop
cwtl
shrl
mov
mov
mov
jg
repz
or
jmp
sub
mov
mov
jmp
add
dec
bound
loope
stos
addb
lock
jne
mov
loopne
int
loopne
movsl
popa
sub
bound
xchg
iret
sub
aad
popf
filds
jg
lods
loop
loope
js
repnz
xchg
mov
out
mov
int3
push
int
jp
sub
xor
fnstenv
add
inc
add
xchg
mov
add
test
movb
xchg
loop
stos
dec
int
xor
js
ds
arpl
mov
mov
pop
movsl
lock
cltd
lds
mov
xchg
mov
mov
cli
sub
add
add
add
imull
lods
jmp
and
addl
mov
push
inc
add
int
je
fsubrl
stos
push
cmpsl
mov
cmp
int
xchg
sti
mov
adc
push
movsb
lahf
push
add
roll
xchg
jg
out
sbb
sti
cli
inc
int
add
xchg
pushf
subl
iret
lock
leave
mov
xlat
mov
aaa
cwtl
enter
dec
punpckhdq
movsl
test
mov
mov
insb
xor
mov
add
jge
dec
push
xchg
cwtl
inc
mov
dec
mov
ja
outsb
jge
sbb
mov
stc
cmpsb
dec
iret
outsl
cmpsl
mov
sub
and
adc
sub
xlat
lods
xor
jno
and
push
int
shrb
lahf
mov
call
pop
mov
mov
mov
pop
fs
add
test
sub
pop
in
add
and
insl
add
pop
rorl
mov
adc
clc
es
jmp
addb
insb
adc
mov
push
sar
fsubr
test
add
xchg
jmp
push
in
fcomip
xor
add
div
jmp
lret
jg
add
xorl
je
mov
int3
jge
jl
add
andl
pop
lcall
push
jno
repnz
xchg
lahf
leave
or
xchg
xchg
addb
mov
xor
cmp
dec
shll
pushf
or
pop
movsl
jae
enter
sbb
inc
xchg
xchg
adc
pusha
add
xchg
jo
and
test
or
and
arpl
push
fwait
add
loope
cmc
push
add
dec
pop
lods
jmp
mov
cmp
add
add
testb
outsl
mov
fsubrs
dec
mov
gs
xor
add
pop
mov
adc
mov
add
and
pop
add
cli
int3
xchg
shrb
xchg
cmp
lcall
fnstcw
mov
jne
ja
xor
mov
add
and
xor
cmp
dec
inc
sbb
js
add
add
push
mov
pop
and
push
imul
mov
inc
fsubrp
ja
mov
jl
mov
out
cld
mov
dec
and
push
add
push
mov
push
add
subl
add
dec
jo
add
xchg
cld
or
sti
dec
hlt
jo
call
cltd
xor
sub
jmp
sub
leave
ss
inc
mov
add
pop
xlat
jmp
and
add
insl
sub
inc
rolb
add
push
mov
add
jmp
pop
testb
mov
lds
inc
add
jne
addb
in
out
xchg
test
dec
add
add
mov
pop
pop
enter
fnstenv
enter
sbb
adc
adc
inc
add
jo
adc
mov
jae
lret
add
dec
and
inc
jns
hlt
push
jl
xchg
fnstsw
out
daa
jecxz
sub
sahf
inc
xor
jecxz
inc
pop
add
cmp
sub
shrl
mov
mov
sub
mov
das
push
xor
test
int
in
push
movsl
aaa
pop
lret
wrmsr
stos
popf
fildl
lock
add
inc
add
and
out
and
call
roll
jecxz
sub
adc
insb
inc
sahf
mov
outsl
mov
xor
sub
fdivr
into
enter
jmp
pop
push
lods
je
add
inc
stc
sub
sub
xor
ljmp
sahf
inc
addb
popa
scas
sbb
mov
pop
sbb
mov
xor
add
dec
jbe
es
outsl
pop
push
out
pop
nop
scas
pop
jecxz
or
push
int3
inc
add
aas
pop
push
mov
in
enter
nop
cmc
out
jno
sub
lahf
xchg
enter
js
lret
mov
ret
stos
push
cmpsl
loop
add
in
sub
cmp
mov
les
inc
inc
add
cli
pop
stos
movb
mov
mov
cmp
sub
mov
mov
pop
shll
add
in
inc
movsl
addb
pop
adc
imul
xor
and
std
mov
add
pop
xchg
loope
fmuls
daa
or
lea
pop
pop
idivl
add
scas
rcrl
sbb
jns
dec
movsb
mov
pop
enter
add
mov
xor
push
pop
sub
add
into
push
loope
insl
or
into
mov
fwait
not
adc
mov
push
mov
pop
cmp
movb
cld
mov
imul
aad
mov
lret
aad
add
xchg
movsb
jle
pop
jg
inc
add
xchg
dec
add
fiaddl
mov
sub
mov
add
adc
je
add
fsubrl
add
stos
rolb
fstpl
cmp
into
clc
cmp
pusha
add
push
loopne
adc
cmc
mov
add
sub
jnp
std
test
sub
cmpsl
mov
in
sbb
rcrl
adc
jmp
dec
inc
add
fwait
das
sub
adc
inc
add
sbb
ret
add
sbb
cli
test
sahf
xchg
clc
les
test
pop
sub
xchg
fists
mov
out
xor
std
mov
sbb
push
cld
pop
sbb
roll
rorl
rcll
bound
ljmp
pop
sub
rclb
fadds
dec
sbb
or
inc
add
pop
repnz
sbbl
outsl
and
xchg
scas
pop
das
cwtl
rolb
inc
out
ja
pop
jns
sub
lcall
mov
mov
push
adc
lea
ja
test
js
rclb
mov
dec
sti
fwait
cmc
leave
mov
repz
mov
cltd
loopne
mov
lcall
cmp
xchg
dec
sub
loopne
idivl
add
and
lahf
push
push
pop
jno
testl
cmp
imul
insl
inc
add
bound
out
jb
jmp
fistps
int3
jne
das
push
mov
movb
in
in
dec
mov
incb
add
add
and
push
add
mull
add
fwait
push
add
imul
movb
cwtl
hlt
sti
push
imul
jmp
addb
or
mov
and
sbb
nop
mov
add
xor
int
lret
out
movb
xor
add
mov
sbb
jns
in
or
push
add
mov
pop
xchg
std
shrl
jno
push
mov
fistpl
xor
sub
jl
and
pop
lea
pop
sub
push
dec
and
push
xor
jecxz
and
aaa
rolb
mov
or
out
negl
pop
shlb
inc
add
mov
add
sub
add
addr16
addb
rorl
daa
faddl
jp
cmp
sbb
sbb
sar
call
adc
mov
stos
pushf
mov
xchg
mov
faddl
add
push
dec
das
aam
sbb
stos
jmp
ljmp
xchg
sub
inc
dec
mov
jle
cmp
movsb
xchg
adc
imul
inc
mov
add
adc
ds
sarl
inc
add
dec
push
mov
int3
cltd
rorb
arpl
fwait
addb
cmc
cmp
and
add
addr16
test
sbb
mov
rcll
mov
add
insb
inc
pop
imul
pop
mov
pop
sbb
inc
push
adc
ret
int
add
shll
add
sub
cmp
adc
inc
sub
mov
inc
push
xor
sub
dec
movsl
stc
aas
sbb
xor
inc
add
and
int
push
xchg
lcall
ror
adc
adc
jne
adc
lret
push
sbb
fstps
addb
jl
sbbl
or
pop
aas
and
gs
xchg
lahf
and
jne
add
int
add
test
sarl
sarb
addl
and
dec
xchg
cmp
pushf
call
movsb
xor
fs
push
xchg
notb
add
lcall
cmpsb
sar
pusha
add
mov
mov
les
pop
call
xor
wrmsr
pop
out
mov
inc
mov
js
les
cmp
jge
add
int3
xor
fwait
dec
sbb
add
add
or
mov
mov
add
mov
inc
push
rorl
and
add
dec
mov
xor
ja
inc
rolb
out
mov
add
cmp
mov
add
movsl
jg
or
mov
mov
enter
lret
push
fstpt
pushf
das
sbb
icebp
mov
out
stos
and
scas
nop
cmpsl
inc
add
xor
xchg
add
add
add
or
sub
sbb
mov
jb
add
xchg
arpl
dec
push
sub
sub
mov
and
add
mov
and
fistl
add
add
addl
cs
and
adc
or
cmp
cmp
dec
sbb
lock
mov
add
clc
add
push
push
insb
mov
cltd
cmc
arpl
imul
add
test
stos
fsubrs
add
lret
xchg
sbb
xchg
rorb
inc
adc
dec
movb
pop
mov
add
dec
mov
jns
pop
jne
lret
xchg
xchg
ss
mov
sbb
es
add
add
xlat
inc
push
aad
add
movsb
or
mov
jp
mov
in
jno
fidivs
notl
shlb
cmp
pop
jl
sbb
daa
and
mov
dec
sbb
xchg
ficompl
mov
inc
scas
mov
lock
clc
xchg
test
sbb
loop
xchg
sub
std
jno
pop
arpl
mov
add
xor
aaa
dec
or
je
movb
mov
mov
aaa
insl
arpl
das
mov
mov
cmp
and
jns
cmp
push
ja
cmp
ja
xor
or
in
dec
fsubl
push
jno
sub
lds
repz
call
int3
sbb
add
movsl
std
fcomip
rorl
sbb
push
out
fnstcw
insl
adc
data16
mov
cli
and
mov
mov
dec
add
pusha
add
fisubl
add
push
dec
mov
xor
lea
add
cs
cmc
ret
add
mov
jecxz
and
mov
sbb
adc
push
sti
add
mov
push
fcoms
add
adc
lea
repz
ja
stos
sarb
add
xchg
jbe
sub
and
jmp
dec
fwait
pop
fwait
or
pop
inc
push
sbb
fs
xchg
mov
sbb
mov
fadds
cs
loope
loop
fstl
mov
das
out
imul
xor
add
mov
pop
xor
xlat
insb
shlb
cmc
dec
and
pusha
add
pop
dec
outsl
popf
add
sarb
out
rcrl
out
aas
daa
and
jbe
in
dec
pusha
add
jmp
scas
dec
fldcw
lret
xchg
xchg
add
xor
in
repz
mov
fcoms
stc
popf
adc
lods
dec
adc
add
lret
mov
sti
es
test
xchg
fisubs
ss
cwtl
mov
movsl
dec
mov
cmc
cld
or
les
sub
adc
sub
xor
mov
in
or
jns
mov
add
sub
adc
pop
dec
outsl
addb
ss
daa
imul
jle
in
xchg
insb
testb
push
xchg
outsl
cli
cld
jnp
test
sahf
sub
imul
loopne
xor
out
popa
cmp
inc
add
push
stos
mov
pop
loope
add
jle
add
sub
lea
jae
fwait
icebp
gs
bound
mov
mov
mov
inc
fs
push
sar
and
push
sarl
sub
lahf
sub
enter
jo
in
inc
jmp
jp
push
outsl
jg
sbb
popf
adc
sub
push
sbb
pop
cmp
jnp
lret
scas
daa
lret
rolb
xchg
lret
mov
addb
lret
sub
std
dec
mov
add
and
divl
mov
mov
xor
rolb
sub
adc
cltd
rclb
enter
imul
xlat
add
mov
mov
ret
std
xchg
jnp
jmp
outsb
imul
jg
xchg
fistps
lods
inc
out
movsb
lock
push
cwtl
xchg
jns
push
jle
fwait
pop
mov
add
nop
clc
push
mov
mov
cmpsb
int
ficompl
mov
and
je
outsb
xor
add
and
push
les
scas
cmpsl
and
cli
leave
dec
sub
lret
fnstsw
test
add
lock
xor
mov
lahf
add
add
pop
ljmp
add
aaa
test
push
scas
fadd
add
adc
js
inc
add
shlb
rcr
scas
adc
add
jbe
scas
arpl
test
cmp
nop
dec
ss
out
xor
out
add
add
and
bound
ret
dec
jl
repz
add
movsb
pop
int
lock
out
xchg
popa
pop
and
cmpsb
lcall
cli
cmpsb
insb
pop
add
mov
ss
xor
dec
xchg
inc
add
icebp
mov
frstor
add
mov
ja
push
lods
fs
inc
add
push
xor
fistl
addb
adc
sub
fdivs
add
test
mov
addb
xlat
movsb
es
add
cmp
cmp
imul
je
out
ja
adc
add
xor
in
sub
pop
pop
outsb
mov
fiadds
inc
add
cld
xor
in
loop
movsl
int3
lods
sbb
call
dec
lods
repz
adc
xlat
leave
ficompl
int
fnstsw
add
cmpsb
inc
inc
outsl
rolb
add
fidivs
jmp
pusha
add
jmp
outsb
sbb
sub
inc
add
jno
mov
push
bound
testb
xor
lret
aaa
dec
or
mov
lea
add
pop
adc
push
subl
add
addr16
aas
or
cltd
mov
lret
or
push
lods
mov
jecxz
xor
jae
pop
lahf
cmp
add
jnp
imul
stos
dec
push
movsl
xchg
add
stos
jg
stos
jne
mov
pop
add
loopne
push
mov
nop
and
fs
rolb
cmp
inc
add
xor
add
adc
imul
dec
jns
leave
repz
or
xchg
adc
nop
popf
in
stos
or
sarl
add
ljmp
jge
add
out
jle
or
add
xchg
roll
add
arpl
push
lea
inc
ret
out
in
sub
std
pop
fstps
mov
adc
imul
lahf
dec
cmc
hlt
out
imul
test
push
test
scas
lds
mov
mov
push
dec
push
and
clc
xchg
ljmp
sub
fwait
divb
jns
add
fists
outsb
repnz
test
xchg
fcomip
popa
into
push
sub
shlb
xor
mov
and
jecxz
repz
lcall
mov
add
mov
aaa
or
jo
addr16
mov
mov
jns
popf
int3
lcall
lods
std
shlb
pop
mov
fisubrl
and
pop
mov
outsb
dec
inc
xchg
inc
add
test
add
jb
adc
adc
xchg
jecxz
movb
mov
movsb
add
out
sub
mov
mov
jp
add
or
xor
rcr
adc
enter
popf
xchg
mov
add
cmp
mov
pop
push
push
sub
xchg
mov
fwait
fs
call
pop
movsl
cmpsb
fcmovbe
xor
addb
test
test
nop
mov
pop
xchg
rclb
mov
xchg
add
and
cld
sar
into
mov
leave
xchg
pop
aaa
fwait
push
repz
cwtl
pushf
movsl
push
sub
mov
popf
xor
in
rolb
je
dec
es
bound
es
movb
xor
cmp
cmpsb
pop
arpl
sub
sub
xchg
aas
insl
push
cmpsl
arpl
add
or
adc
inc
mov
rolb
xchg
ret
and
daa
out
cmpsb
xor
cmp
xor
add
ret
jle
jge
jle
xchg
mov
jp
cmp
inc
inc
test
ss
push
jmp
add
repnz
cmp
pop
ja
fwait
mov
adc
push
xchg
mov
and
push
cvttps2pi
xlat
sbb
add
sbb
xor
cmp
data16
inc
and
mov
out
dec
jne
ljmp
dec
mov
stos
mov
mov
push
xchg
cmp
add
sbb
pop
fsub
or
xor
idiv
out
orl
pop
mov
addb
push
data16
add
icebp
jle
add
cmp
addl
mov
data16
mov
movsb
cmc
ja
aas
xchg
cli
rol
add
add
incb
add
push
sub
stc
jbe
cmp
fwait
bound
dec
rclb
mov
cmpsl
pop
ret
add
add
jae
je
loope
cmp
inc
add
mov
and
xor
sbb
add
mov
xor
sbb
or
add
cmp
iret
xchg
and
movb
imul
sbb
push
lcall
leave
mov
pop
sbb
bound
shll
xchg
add
dec
mov
mov
pop
and
je
mov
std
leave
push
cli
sub
lods
xchg
les
push
stos
mov
dec
cmp
sbb
pop
xchg
faddp
add
mov
pop
int
addb
incb
cld
inc
add
les
lea
ret
fs
mov
lahf
dec
jp
or
addb
mov
push
sarb
call
cmp
ficompl
add
insl
xor
hlt
add
pop
outsl
roll
lea
loop
sarl
push
shll
dec
call
add
popl
add
push
outsb
jae
add
repz
mov
jae
push
fs
test
out
jl
jle
mov
fdivr
cmp
cmp
adc
add
or
mov
in
xchg
fidivs
sbb
insl
addb
rcrl
outsl
scas
push
stos
test
xor
scas
cmp
add
call
ljmp
mov
sbb
add
ss
ja
jmp
dec
imul
stos
rolb
add
mov
lock
dec
adc
insl
xchg
dec
mov
daa
out
sahf
cmp
add
mov
jg
xor
sub
mov
in
dec
mov
scas
pop
push
sub
add
fidivl
jl
das
push
and
add
mov
cwtl
bound
sbb
in
icebp
dec
dec
aad
mov
add
add
dec
gs
push
sub
mov
cs
sbb
aas
loop
and
jmp
xlat
loope
add
out
js
mov
add
sub
lret
push
cmp
sti
aas
jle
xor
mov
ljmp
cmp
loopne
add
mov
add
add
fdivl
movsl
pop
cmp
add
inc
add
add
addl
add
and
cwtl
leave
xor
xchg
daa
xchg
mov
jae
fs
sub
insl
imul
pop
sbb
push
insl
jg
add
push
add
mov
add
add
imull
dec
in
imul
lret
cmp
int3
mov
pop
imulb
mov
add
testl
outsb
xor
andl
lock
stos
mov
push
je
pop
mov
test
add
test
sti
incb
lret
inc
add
lock
adc
add
jns
xor
out
imul
es
xor
imul
add
add
inc
add
iret
jmp
sbbl
add
xchg
ljmp
push
pusha
add
into
pop
push
jg
rcl
inc
add
add
ds
add
dec
xchg
cwtl
sub
cmp
add
fidivrs
adc
dec
iret
mov
int3
push
push
iret
addb
mov
daa
jl
cld
mov
xchg
xlat
jns
dec
shlb
add
and
inc
ds
xchg
hlt
test
lret
rolb
inc
aad
xor
cmp
loop
xchg
pop
test
imul
jo
jmp
leave
sti
fsubl
mov
add
xor
cmp
outsl
pop
sub
or
loopne
loop
int
inc
call
div
std
inc
movb
in
jg
call
fildl
add
aas
push
push
or
add
push
dec
or
inc
add
adc
fsubl
add
fldenv
push
mov
in
mov
inc
add
jne
jl
pop
out
lcall
xchg
cmp
add
xchg
pop
neg
xor
add
mov
hlt
cmpl
mov
xchg
xchg
cwtl
aaa
mov
aaa
fs
jle
mov
je
pop
sub
ja
cmp
mov
inc
jg
pushfw
push
divl
stc
leave
daa
mov
xor
cmp
and
int
xchg
xchg
repz
ljmp
clc
gs
aad
incl
add
mov
adc
dec
xchg
outsb
dec
mov
jbe
sbb
jmp
les
pop
mov
test
pop
addb
push
cmp
je
inc
add
add
add
dec
cwtl
mov
fsubl
cmp
inc
add
pop
cmp
mov
mov
sub
in
iret
mov
int
std
cld
sarb
icebp
addb
add
xor
add
adc
aad
cmp
js
jne
ret
mov
inc
push
pop
in
insb
cli
jmp
push
dec
int
cmc
mov
pop
push
sbb
xchg
shll
sub
adc
das
cmp
dec
sar
cmp
paddb
add
and
add
flds
jns
or
sbbl
mov
xchg
int
and
pop
and
xlat
jge
icebp
add
mov
dec
jo
jle
pop
imul
rcr
andl
add
das
mov
mov
fnstenv
mov
add
sbb
add
lock
ja
test
jae
call
add
lret
adc
daa
cs
addb
movsl
xchg
push
lods
jbe
enter
test
das
add
dec
notl
outsl
in
xchg
dec
push
mov
add
mov
and
loopne
inc
mov
adc
fsubrl
and
je
dec
fs
ret
test
addb
pop
jl
ret
clc
xchg
mov
inc
add
xor
push
es
xchg
outsb
repnz
int
loope
test
mov
lahf
or
mov
ljmp
pusha
add
adc
mov
aas
jge
orl
xlat
mov
adc
addl
adc
movsl
in
outsl
gs
xchg
sbb
mov
rcl
addr16
imul
sub
add
pop
or
sbb
ja
lahf
sti
in
xchg
pop
and
fistpl
cmpsl
insl
in
test
ret
stc
mov
pop
fcos
xchg
mov
out
dec
cs
shlb
cmp
lods
mov
and
add
test
xor
xchg
inc
cmc
add
out
jl
add
negl
sub
push
ds
ret
movsb
cmp
or
in
and
mov
add
sbb
inc
xchg
sbb
add
xor
adc
call
push
clc
repz
inc
test
leave
lcall
mov
fsub
in
cwtl
lods
repnz
cmp
sbb
adc
pushf
push
lods
mov
inc
data16
cwtl
mov
shrb
jbe
adc
mov
fbld
xor
add
mov
sbb
cmp
das
cmp
lds
sbb
adc
push
push
js
jo
test
rcll
inc
add
dec
in
xchg
xor
ljmp
add
push
btr
sbb
adc
sahf
sarb
sub
loopne
jecxz
add
ja
add
pop
ja
enter
sbb
sbb
ja
and
stos
sti
cmp
insl
cmp
cmp
jae
xchg
and
xchg
outsb
pop
sahf
adc
imul
aad
mov
jo
outsl
add
jp
inc
shlb
jno
mov
pop
mov
lcall
cld
inc
mov
sbb
cltd
stos
push
daa
shlb
aas
bound
scas
or
rolb
xor
jg
sub
loope
data16
add
sbb
jl
add
sub
imul
sub
pop
xchg
jl
mov
xor
pop
popl
pop
das
and
addr16
add
add
sbb
add
pop
jecxz
cmp
lahf
or
xor
loope
cltd
ljmp
cmp
inc
jp
xchg
push
xlat
xor
fsubl
xchg
cmp
dec
inc
setp
add
xchg
les
push
shlb
sub
pop
in
xor
ds
stos
sub
aas
ljmp
mov
inc
add
es
add
cwtl
adc
pushf
push
push
xor
push
push
testb
mov
das
lds
fbstp
inc
add
add
xor
mov
xchg
sbb
pop
inc
cmp
xchg
xchg
addb
mov
inc
sbb
jl
xor
cmp
adc
mov
aam
jae
out
push
add
lea
pusha
add
insl
stc
clc
push
out
add
dec
aas
pop
andl
xor
add
cwtl
fldl
adc
inc
add
xchg
mov
sub
in
push
pop
test
mov
call
jl
adc
and
fcmove
mov
jns
jmp
jge
inc
xchg
or
icebp
and
rolb
add
daa
cli
ret
insl
into
ljmp
pop
sbb
pop
out
pop
sbb
repnz
push
cli
xchg
scas
icebp
sbb
mov
das
jmp
out
inc
out
push
jb
outsl
xchg
dec
fs
add
ss
add
lret
add
mov
rorl
xor
inc
add
bound
add
jge
lret
add
sbb
lds
cmp
or
adc
push
rcr
xor
mov
mov
test
mov
inc
add
add
push
jmp
out
roll
out
jns
gs
movsb
std
dec
adc
fwait
and
cmp
sub
call
gs
jl
dec
adcl
push
ret
sahf
iret
xchg
add
add
add
add
