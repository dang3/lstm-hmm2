mov
sub
add
mov
sub
add
test
shrl
add
gs
add
cmpsb
add
xchg
fdivrl
pop
mov
in
in
mov
out
sbb
jne
sub
push
add
mov
imul
and
gs
push
movb
add
es
mov
pop
je
stos
pop
jle
push
outsl
sub
mov
pop
push
cmpsl
mov
push
add
xor
in
add
lret
clc
dec
clc
add
sti
or
sbb
sbb
aas
int3
jle
lods
sub
dec
iret
inc
sbb
pop
mov
add
out
sbb
imul
mov
movb
add
je
or
mov
jmp
lds
add
add
and
add
jp
add
push
add
or
inc
add
add
adc
rorl
in
addb
add
mov
add
mov
push
add
dec
rolb
dec
lahf
push
add
mov
pusha
add
mov
scas
adc
shl
add
mov
xchg
sbb
and
fsubr
jle
adc
and
mov
cltd
rcrl
and
hlt
add
xor
pop
out
lods
pop
xchg
in
mov
fwait
and
add
mov
xor
add
scas
sti
xchg
rolb
in
in
roll
inc
add
repnz
mov
xor
add
inc
push
add
sahf
push
add
add
pop
bound
mov
mov
sbb
add
jb
inc
xchg
mov
push
add
outsl
push
inc
add
add
add
sub
or
add
mov
into
mov
jmp
add
pop
xor
mul
or
push
add
add
push
jmp
ret
repnz
dec
aas
mov
mov
stos
addb
mov
sub
xchg
inc
add
daa
aam
data16
add
xchg
je
cmp
add
cmpsb
add
or
mov
mov
sub
dec
pop
das
mov
add
add
addb
add
and
add
outsl
adc
es
mov
mov
add
fsubrs
inc
in
rolb
xchg
add
test
add
push
adc
sbb
add
add
pop
lds
lcall
add
bound
mov
add
add
jmp
xor
and
cmp
mov
inc
jge
fldt
cmp
cmp
inc
add
push
pop
pop
lret
mov
movsl
push
jge
iret
addr16
dec
push
mov
add
add
lods
push
add
test
testb
xor
dec
lea
gs
add
nop
add
add
xor
or
hlt
add
jno
rolb
add
add
jg
cmp
clc
idivl
add
add
or
xor
rolb
push
add
xchg
fistpl
cmp
dec
xchg
insb
xor
add
push
add
add
jmp
pop
js
movsl
mov
cmpsl
cmp
adcl
loop
stc
jnp
cs
xchg
jecxz
jecxz
out
add
aam
repnz
add
and
mov
xchg
fnsave
mov
jae
mov
mov
addb
out
add
mov
add
shr
shll
sub
mov
mov
icebp
push
add
and
mov
mov
jl
mov
adc
add
mov
pushf
loope
lock
sbb
mov
fwait
inc
add
aas
aad
ljmp
lret
lret
testb
lea
add
mov
mov
movsb
add
add
fstpl
push
add
in
and
mov
mov
add
mov
add
and
mov
xor
lods
repz
push
pop
les
imul
or
sub
sbb
std
cmp
rolb
ja
hlt
add
lret
mov
jg
pop
rcrl
mov
mov
lcall
xchg
mov
loop
movsb
add
fcomps
add
sbb
add
fwait
fwait
mov
add
add
add
minps
dec
add
mov
jle
add
inc
add
lock
mov
add
xorl
push
add
push
in
dec
cmp
sti
shll
outsl
push
add
adc
mov
or
pushf
sahf
xchg
add
add
aaa
movb
sahf
pop
aaa
pop
xchg
push
add
xchg
add
xchg
stc
jecxz
jg
pop
rolb
add
add
add
and
or
sahf
xchg
cmp
inc
mov
add
sub
mov
jae
jno
pop
pop
popa
pushf
sahf
into
in
xor
sub
xchg
add
sub
add
sbb
add
and
add
iret
fcmovu
stos
jle
add
add
jmp
loopne
mov
add
pop
je
lds
pop
jae
int
add
push
add
sbb
fcmovu
push
xchg
add
xor
add
mov
into
scas
push
jmp
add
scas
inc
or
add
lock
xchg
fwait
dec
ss
cmc
rolb
lret
rolb
mov
xor
jo
cwtl
mov
inc
jo
add
mov
add
inc
addb
outsb
nop
add
mov
push
int
aas
cmpsb
add
jne
testb
ss
fimull
mov
add
mov
jl
add
rol
add
outsb
xchg
add
pop
jg
sub
lea
rolb
xlat
and
aaa
mov
test
add
xchg
cmp
add
add
ret
add
push
add
scas
mov
lods
or
add
add
cmpsb
add
add
xor
or
mov
push
adc
sub
add
sbb
bound
mov
add
xchg
mov
or
addb
dec
lds
fbstp
das
popa
stos
sahf
imull
imul
mov
or
pusha
pop
push
cmpsl
das
jo
sub
call
sub
push
push
push
cld
call
sub
mov
cs
movzbl
cmp
ss
lea
push
lea
push
lea
push
lea
push
push
call
cmp
je
es
lea
es
cs
es
call
test
jne
jmp
push
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
push
add
cltd
inc
inc
add
add
add
mov
mov
lds
jp
or
adc
add
rolb
jecxz
add
cmp
inc
int
loopne
cmc
das
addr16
add
gs
addb
cmpsl
add
mov
dec
les
jg
add
add
outsl
push
aas
and
mov
cmp
cwtl
dec
aam
mov
test
stc
les
mov
jl
jne
pop
pop
lods
addb
cmp
or
inc
add
mov
mov
insl
pop
adc
dec
adc
xor
inc
add
lods
sbb
add
add
rolb
fistps
add
ljmp
and
test
push
cld
inc
push
jmp
add
cmp
sbb
in
and
add
pop
rolb
fcmovnbe
add
shrl
add
jne
jecxz
mov
movsb
add
or
xchg
lds
adc
cmpl
pop
sbb
add
add
xchg
add
mov
psubd
xor
xchg
add
addb
std
xchg
adc
add
add
xchg
lods
insl
xchg
dec
fdivrs
clc
jo
pushf
out
mov
lret
add
mov
sub
add
mov
nop
add
add
add
cmp
add
aad
add
mov
inc
add
cmp
dec
scas
shl
add
add
repz
push
lcall
mov
add
adc
add
add
test
mov
scas
push
add
mov
sbb
mov
movsl
cmp
xchg
popf
lret
pop
lods
incl
cwtl
or
add
decb
cmp
lods
fmull
mov
add
inc
in
cmp
test
add
das
push
and
pop
arpl
std
fwait
outsb
jecxz
jns
lahf
icebp
cmpsb
add
gs
add
add
out
imul
and
mov
add
in
xor
ror
jne
mov
test
mov
cmp
push
fwait
decb
xor
insb
decb
iret
adc
add
lcall
add
add
dec
xchg
push
or
mov
mov
cld
lea
add
add
movhps
push
add
xchg
add
xor
mov
pop
pop
cmp
push
add
add
inc
testb
add
add
pop
int
add
add
mov
in
dec
push
add
lods
addb
and
fstps
repnz
mov
sbb
testb
mov
pop
sub
cmp
iret
mov
pop
int3
inc
add
xchg
out
sbb
fstps
add
inc
jb
push
add
andl
jns
les
and
mov
scas
filds
add
and
mov
cwtl
pop
add
add
jp
addb
add
add
clc
mov
mov
add
add
mov
pop
inc
add
add
push
add
sbb
adc
xchg
bound
mov
mov
out
loope
js
add
push
add
rolb
jle
popf
mov
jb
xor
add
fsubr
add
add
adc
mov
add
div
add
scas
jmp
jae
nopl
outsb
dec
sarl
add
add
fdiv
mov
add
add
add
push
add
add
lret
mov
add
add
add
sub
imul
call
mov
or
pop
data16
lock
add
in
xor
sub
rcl
stc
dec
jo
popf
cmpsb
add
xchg
int
add
lds
adcl
add
fisttps
aas
bound
mov
pop
pushf
sbb
add
mov
push
add
popf
cmc
movb
fistl
sub
and
rcl
add
mov
pushf
mov
call
mov
mov
xor
loope
add
add
sub
jae
es
add
add
fdiv
add
das
mov
and
add
add
sub
xchg
mov
jmp
add
xchg
add
push
call
add
icebp
scas
push
add
add
add
sub
cmp
out
and
mov
sub
repnz
mov
add
lods
popa
add
push
add
lock
inc
testb
mov
mov
pop
lock
push
add
scas
sar
jmp
cmp
add
xor
lods
pop
mov
or
add
mov
xchg
xor
popf
xchg
add
xchg
jmp
fdivp
and
ret
cmp
add
dec
gs
mov
mov
sub
add
add
add
add
dec
sub
fs
add
add
mov
ret
lea
add
jns
add
insl
movsb
add
inc
push
scas
jnp
push
cmp
jge
add
or
int3
pusha
add
add
mov
into
repz
add
icebp
push
add
enter
add
add
out
int3
outsl
aad
lods
adc
adc
aaa
xor
in
add
mov
js
daa
xchg
push
add
dec
test
or
adc
inc
into
dec
inc
add
mov
mov
jmp
mov
add
stos
jnp
frstor
les
mov
pop
mov
shrl
add
pop
xchg
testb
mov
pop
jno
insl
jns
shr
shrl
loope
pop
ljmp
xchg
cmp
sbb
pop
pop
lret
mov
mov
xchg
stc
je
xchg
add
or
ds
push
lock
or
add
xor
xor
mov
andl
ret
nop
add
gs
leave
xlat
jecxz
pop
and
add
mov
add
test
xor
popf
out
lahf
push
jbe
lods
loopne
insl
popa
fidivl
add
add
cs
in
add
sbb
adc
lods
or
imul
insl
cmp
cld
out
fnstsw
add
mov
fwait
gs
pop
pusha
add
push
sub
add
hlt
add
cli
test
popl
iret
aad
sbb
add
mov
out
aaa
inc
aad
in
addb
add
add
xor
add
mov
dec
pop
gs
xor
cmp
rolb
push
mov
add
add
pop
push
add
mov
repz
leave
fnsave
xchg
in
pop
lods
xor
dec
mov
jb
adc
jmp
int
das
pop
add
add
sahf
ret
mov
dec
pop
nop
add
inc
hlt
add
or
push
add
arpl
xchg
add
inc
data16
add
add
test
mov
imul
roll
add
je
or
inc
in
lds
xchg
cmc
fiadds
add
je
pushl
ja
add
popf
jns
add
mov
add
jne
sahf
repnz
iret
dec
in
aam
push
add
add
add
add
mov
test
outsl
or
xchg
data16
inc
add
or
mov
jmp
add
jno
add
add
ja
add
in
test
int
inc
xchg
add
mov
sub
loope
in
icebp
cwtl
push
add
mov
add
add
jmp
push
aam
scas
inc
add
mov
out
sbb
xchg
jns
add
pop
addb
add
mov
add
sub
dec
push
sub
push
add
mov
add
and
add
add
add
scas
rolb
out
imul
cwtl
cltd
mov
xchg
add
jp
add
sbb
dec
dec
in
or
into
push
addb
adc
std
mov
mov
bound
mov
jne
xchg
add
ret
hlt
add
outsb
iret
fistps
sbb
lods
pop
lods
jae
aas
sub
dec
pop
and
pop
push
shl
inc
or
add
add
add
sub
mov
or
arpl
stc
jle
add
jbe
or
imul
xor
fcomps
adc
sti
add
je
stos
pop
scas
ja
add
mov
add
cmp
add
ret
mov
add
push
add
adc
insl
mov
stos
sahf
and
imul
add
cld
push
xchg
add
push
xchg
mov
daa
jns
testb
jp
ljmp
xor
rcrl
inc
add
cs
cmp
add
inc
add
add
jne
mov
movsl
fwait
out
fstl
faddl
add
addb
add
mov
mov
jmp
mov
lods
into
mov
dec
inc
xor
inc
add
add
mov
les
je
fstpl
adc
sbb
cmp
jle
add
daa
ds
add
jg
fcmovb
inc
jp
adc
clc
xor
add
add
push
add
mov
and
push
add
scas
scas
add
jp
add
inc
jmp
add
cmpsl
jg
movb
add
call
sahf
jns
add
out
les
sub
mov
lahf
pop
mov
add
xor
add
push
rolb
insl
sbb
add
xchg
cmp
add
ja
nop
add
and
sub
fmull
dec
xchg
repz
xchg
add
fcompl
pop
and
mov
ret
mov
das
pop
mov
sbb
jbe
or
mov
js
cmp
pop
movntq
mov
jecxz
xor
adc
mov
add
call
sub
das
dec
push
add
inc
cld
data16
lea
dec
js
arpl
add
cmpsb
add
and
sbb
add
xor
rolb
pop
jle
add
inc
add
xor
leave
icebp
push
cli
add
into
loop
out
push
aam
sub
add
andl
jl
xor
pop
jo
cmp
cmp
xor
push
add
sub
add
add
pop
add
imul
pop
out
jg
movsl
push
cmp
in
fstl
lcall
and
int
push
add
dec
mov
xchg
add
push
mov
ss
add
sbb
cmc
outsl
cwtl
push
lret
xchg
popf
mov
inc
push
mov
or
mov
sub
test
lahf
pop
or
xor
sbb
mov
mov
addb
add
add
jmp
sbb
les
mov
mov
jae
add
inc
add
jp
add
push
pop
push
add
pop
jl
add
add
les
sbb
add
push
add
xor
sub
aas
scas
fwait
sbb
push
adc
imul
push
add
in
cmp
add
cmp
mov
gs
faddl
mov
js
loop
in
outsb
adc
enter
cmp
insl
sub
in
mov
add
test
and
int3
xchg
add
insb
scas
in
decl
testl
mov
fwait
cli
and
add
mov
scas
mov
pop
adc
add
xchg
jge,pt
add
out
std
fsts
dec
rolb
add
xchg
add
jb
in
lcall
incl
add
mov
cmp
insl
cli
loope
mov
add
and
mov
add
add
add
out
or
ljmp
add
mov
or
xchg
add
mov
insl
pop
roll
mov
mov
clc
inc
std
mov
jae
mov
rolb
mov
add
add
outsb
roll
movsb
add
addb
in
call
call
push
ja
mov
pop
sti
jl
sub
addr16
movb
jp
jbe
inc
mov
sahf
cwtl
inc
add
outsb
dec
sub
imul
sub
sbb
add
add
pusha
add
add
inc
add
sub
pop
sub
out
xchg
add
cwtl
and
sbb
push
add
jmp
jnp
cmp
faddl
in
pusha
add
in
lcall
jns
mov
outsb
out
xchg
or
jb
sahf
in
mov
gs
add
add
xchg
in
jle
add
add
mov
jno
dec
or
add
sub
addr16
mov
bound
mov
add
jns
add
mov
ljmp
adc
pop
movsb
add
cmc
jg
xor
add
nop
add
mov
add
fisubl
cmp
icebp
fdivrl
fidivrs
mov
inc
fstpt
add
fists
add
add
sbb
faddl
add
add
jecxz
enter
mov
add
test
lahf
ss
add
fwait
out
add
pop
dec
pop
fwait
out
test
mov
mov
xorl
mov
sub
xchg
mov
jnp
add
add
mov
addr16
xor
jmp
add
jne
push
jns
fwait
add
push
add
mov
add
add
sub
lret
std
mov
into
add
add
bound
mov
cltd
sbb
add
add
aam
sub
mov
add
adc
inc
fisubrl
les
movsl
jecxz
add
dec
xor
flds
cmp
sbb
mov
sbb
add
ret
xchg
rolb
out
sub
jmp
or
cmpsb
add
pop
fstps
inc
add
add
fcomps
mov
push
add
jnp
outsl
mov
testb
addr16
cmc
ficoms
xchg
push
sub
add
xchg
cmpsb
add
jle
inc
or
mov
add
stc
push
push
mov
mov
mov
test
in
jmp
filds
add
sub
jl
out
sub
cmp
dec
cltd
xchg
inc
add
add
cmpsb
add
pop
add
push
cld
roll
add
sbb
add
lret
cmp
xchg
push
add
popa
jb
cltd
inc
xchg
sbb
dec
repz
out
dec
ds
popa
loopne
testb
add
mov
mov
push
push
jle
dec
mov
pushf
cltd
rolb
cli
pop
or
iret
cmp
add
jmp
add
mov
xchg
jo
scas
fmuls
out
push
or
add
mov
ljmp
out
add
dec
mov
inc
sbbl
aad
cmpsb
add
add
push
add
movsb
add
addl
xlat
sahf
pop
adc
add
jp
add
or
sbb
inc
add
in
cmp
insl
rolb
mov
add
rolb
out
add
inc
add
orl
add
add
push
add
lock
lahf
or
jg
add
and
add
ja
pop
or
add
xchg
adc
add
push
add
sub
add
add
add
fstpl
imul
js
fwait
aam
xchg
add
in
test
lods
add
sbb
and
mov
sbb
fmulp
push
add
roll
mov
clc
push
leave
ljmp
adc
add
addb
push
bound
mov
ldmxcsr
movsl
mov
mov
mov
jnp
nop
add
cltd
add
data16
mov
out
lcall
dec
pop
add
mov
adc
push
mov
into
loop
rolb
pop
jne
sahf
xor
cwtl
out
movsl
sbb
add
lret
fsubs
aam
sub
ja
dec
jge
fmull
out
fmuls
lods
dec
push
add
jns
add
sbb
add
fwait
adc
push
add
imul
push
stos
shll
mov
testb
fistpll
out
dec
sub
inc
add
add
mov
push
std
or
xor
add
xchg
int
add
dec
sbb
adc
pop
jo
hlt
add
add
lea
cmpsb
add
add
dec
aam
sub
or
adc
pop
ret
shrl
pop
rcr
mov
into
xorl
jecxz
mov
jp
jno
xchg
mov
pop
lds
push
add
pop
or
sbb
sbb
cmpsb
add
int3
daa
mov
pop
mov
jge
jp
jmp
in
pop
cwtl
ror
rcrl
adc
mov
inc
add
jmp
in
add
ds
loop
push
cmpsb
add
add
add
add
mov
mov
pushf
rcl
add
mov
je
rolb
add
mov
js
outsl
movb
add
xor
add
pop
xchg
add
adc
lods
not
jmp
jg
add
xlat
rorl
test
xor
add
movsl
fdivrl
add
cmp
mov
and
ficompl
cmp
jae
jae
xor
sub
xlat
pop
cld
pop
insb
push
int3
divl
pop
pop
sbb
xchg
clc
adc
pusha
add
cmp
gs
fadd
add
push
add
sahf
sbb
add
add
ret
sahf
cmp
ret
add
decb
inc
add
mov
add
aas
cmp
xor
push
add
inc
add
ds
inc
add
dec
cli
js
xchg
xor
lods
movsb
add
mov
add
es
fiadds
xor
jae
lods
out
pop
notl
add
je
les
dec
out
mov
push
addb
int
cs
je
lcall
pop
js
scas
in
dec
mov
inc
add
pop
ret
in
jae
movb
add
cmp
inc
add
push
add
sub
pop
dec
mov
scas
cwtl
xor
dec
push
das
iret
hlt
add
add
repz
cmp
mov
test
add
jmp
sub
clc
decl
add
das
lods
andl
dec
mov
arpl
jle
add
add
add
or
sub
sub
sbb
add
enter
and
mov
in
push
add
add
add
add
int3
jne
aaa
mov
dec
outsb
push
ret
adc
add
jmp
or
add
push
add
adc
rolb
movb
test
xor
sub
add
cmp
movb
push
scas
or
pushf
xchg
xchg
add
jecxz
add
testb
add
call
push
add
rcr
data16
mov
add
ficompl
aaa
and
add
mov
out
dec
movb
cmpsl
lea
adc
pop
push
fs
mov
mov
or
and
pusha
add
add
or
push
ret
jno
cmp
lds
rcll
inc
add
mov
add
push
add
add
pop
mov
xor
addr16
xchg
jb
rcll
movb
mov
jmp
add
adc
xchg
add
mov
decl
call
push
add
mov
add
push
add
scas
xchg
jg
add
add
testb
xchg
pusha
add
test
scas
and
pop
test
mov
cmc
test
and
add
gs
add
push
add
dec
movb
add
mov
mov
int3
in
lods
addb
add
imul
pushf
cwtl
mov
lds
mov
sbb
or
add
dec
sbb
xor
mov
lock
inc
movsb
add
mov
aas
xor
push
into
int3
add
add
rolb
cmpsl
push
add
andl
add
add
jno
adc
cmpsl
fldt
idivl
add
jecxz,pn
mov
pop
xchg
add
sbb
stos
jmp
add
add
sub
dec
outsb
mov
sbb
inc
add
mov
test
add
testb
add
std
mov
add
movb
leave
xchg
jl
lods
adc
outsl
dec
addb
outsb
test
sbb
jle
add
jl
jle
add
lret
jb
jae
and
xor
xchg
test
add
cmp
mov
push
add
and
mov
mov
mov
xchg
add
pop
leave
pop
stos
lock
add
pushf
pop
push
test
add
push
add
add
mov
add
add
pop
lahf
jae
out
xchg
out
test
js
add
les
sbb
outsl
into
adc
sub
push
call
std
inc
add
lods
movb
jne
add
cmp
rolb
fsubrl
sahf
cwtl
mov
fimull
aam
movb
add
add
dec
push
add
add
bound
mov
loope
xchg
add
mov
std
int
push
xor
lret
or
testb
add
rolb
test
hlt
add
pushf
push
sbb
loop
je
in
cmp
mov
mov
add
mov
lcall
rorl
enter
mov
lret
dec
push
mov
cmpl
sub
add
add
test
add
mov
add
mov
add
mov
lock
add
add
stos
ret
test
mov
sub
sub
add
gs
pop
jo
jns
add
push
add
add
add
add
mov
aaa
cmpsb
add
insb
add
in
and
add
xchg
or
jmp
cmp
cli
fwait
pop
lcall
mov
jne
popa
adc
mov
mov
cmp
xchg
add
lahf
shll
and
pop
xor
scas
fnstenv
add
mov
aam
mov
jmp
add
and
lods
add
add
cmpsb
add
int3
loop
cs
add
scas
add
les
movsl
sbb
sbb
fnstenv
add
clc
add
cmp
in
pop
ljmp
add
loopne
ret
cmp
mov
add
add
lret
mov
arpl
jmp
mov
int3
inc
add
rolb
mov
stc
xor
mov
inc
jns
arpl
in
cmp
pop
inc
adc
outsl
sub
jae
or
dec
add
lods
aaa
inc
add
sub
add
into
adc
loope
add
xchg
adc
push
ja
add
cld
pop
jge
add
push
add
dec
les
bound
mov
incl
gs
in
idiv
push
data16
outsb
pop
leave
lock
jmp
cwtl
js
mov
add
aam
xor
rolb
jl
add
add
add
mov
cmp
add
test
adc
test
sbb
sbbl
and
imul
mov
mov
add
outsb
pop
cmp
adc
ret
js
add
outsb
and
mov
sbb
les
add
and
addb
cmp
cli
jl
sti
and
stos
jp
mov
mov
jno
or
dec
or
push
xor
xchg
aad
dec
arpl
mov
sub
lods
sub
inc
add
int3
adc
fiadds
imul
add
mov
mov
stos
xchg
jmp
in
ja
repz
xor
and
add
push
je
addb
add
add
testb
sub
add
mov
ljmp
lcall
sahf
popf
fisttpll
xchg
add
pop
or
lret
dec
ret
out
movsb
add
icebp
imul
aad
add
add
pop
out
popf
xchg
add
movsb
add
out
pop
mov
mov
xor
lea
pop
adc
add
dec
fisubs
repnz
add
sbb
ds
mov
or
add
xchg
cmc
loop
or
or
mov
js
popa
push
ds
lods
sbb
jae
inc
daa
pusha
add
mov
cwtl
rolb
sub
add
xlat
in
mov
add
adc
add
cmp
call
bound
mov
btr
mov
add
add
les
ret
out
cmpsl
xchg
add
call
dec
add
mov
add
mov
sbb
add
add
add
and
mov
nop
add
decb
in
inc
add
add
mov
and
mov
rolb
popf
outsl
xor
test
data16
lods
sahf
push
add
movsb
add
out
jecxz
pop
adcl
fildll
add
movsl
and
sbb
add
ss
imul
add
bound
mov
inc
add
add
pop
stc
jg
push
add
and
cmp
js
mov
adc
dec
rol
add
add
movb
add
add
xchg
fmuls
movsb
add
and
adc
jg
sbb
icebp
push
add
add
lea
add
sbb
cli
fs
cltd
iret
imul
mov
data16
loopne
xor
mov
add
repz
push
in
daa
daa
mov
or
pop
or
loop
mov
add
into
mov
lahf
jae
nop
add
lret
rolb
sbb
dec
inc
add
jp
and
mov
mov
cmp
and
mov
pop
pop
sahf
enter
add
rolb
test
xchg
add
add
mov
add
pop
adc
lds
jo
lea
push
pop
mov
lods
pop
hlt
add
xor
jnp
lahf
pop
lahf
cli
shrl
pushf
push
add
add
iret
add
data16
add
or
gs
aas
mov
daa
aad
mov
inc
in
into
adc
loope
jecxz
adc
adc
sub
mov
jp
xchg
add
clc
addr16
test
lea
mov
inc
add
add
cmpsb
add
dec
inc
add
sbb
in
fwait
notl
sub
clc
in
and
xor
add
aaa
jbe
popa
jg
add
dec
dec
mov
mov
xchg
cmp
add
add
fidivs
rolb
add
cwtl
movsb
add
mov
push
sub
sub
inc
sub
rolb
sbb
stos
xchg
pusha
add
outsl
hlt
add
lods
test
add
dec
jo
jb
mov
mov
mov
jl
sbb
mov
in
jb
inc
add
in
fwait
cld
out
add
push
add
shrl
scas
jg
add
cli
xchg
sbb
add
add
movsl
xchg
add
jl
mov
add
les
push
add
arpl
add
cmpsl
mov
push
add
pop
outsb
xor
sub
add
push
add
add
mov
rolb
jne
bound
mov
fwait
ljmp
add
or
vpaddusw
xchg
in
and
in
mov
dec
hlt
add
add
pop
jo
rolb
stos
inc
add
sub
add
loopne
xchg
add
movsl
cmp
test
pop
sti
mov
roll
fldl
pop
ljmp
xchg
add
lods
orl
movb
jmp
pop
inc
fidivl
sbb
add
loop
add
and
add
test
dec
and
mov
aam
adc
fsts
add
icebp
stos
out
imul
adc
mov
or
add
in
rolb
push
add
push
dec
and
mov
in
aam
jo
addb
add
pop
sbb
add
lcall
and
cltd
dec
imul
pop
dec
pushf
ud1
int3
add
xchg
jne
popa
roll
test
rolb
cmp
jl
aam
out
mov
mov
je
add
sarl
addr16
jecxz
add
xchg
add
addb
cmp
lock
icebp
and
mov
mov
mov
add
pushl
loopne
xchg
cmove
aad
add
stos
xor
push
dec
bound
mov
add
adc
sti
xchg
add
push
pop
push
jb
xor
add
add
dec
stos
out
xchg
lock
sbb
push
or
and
add
arpl
add
add
in
add
mov
cmovne
insl
push
add
add
add
xchg
add
add
push
add
mov
gs
movb
add
add
add
mov
into
and
cmp
inc
icebp
or
ss
xchg
add
add
dec
movsb
add
xchg
or
popa
add
xchg
add
dec
xchg
xchg
sbb
xchg
cs
push
add
test
sub
mov
repnz
mov
add
add
cmp
imul
dec
cli
mov
add
sub
dec
out
pop
lea
stos
aad
jbe
xor
jns
add
add
rolb
call
push
dec
popf
xchg
std
jge
mov
pop
dec
pop
sub
inc
add
jb
fcomp
sub
mov
bound
mov
xchg
add
mov
add
dec
clc
mov
mov
add
sahf
mov
add
ds
push
add
das
movsl
inc
add
dec
mov
add
jecxz
addb
add
add
add
add
daa
in
dec
clc
arpl
xor
dec
xlat
xor
jae
gs
add
cmp
stc
cmp
add
psubsb
daa
mov
cmpsl
push
sar
add
jnp
jg
add
nop
add
mov
cmc
test
push
iret
push
add
test
add
inc
add
icebp
and
mov
rolb
xor
sub
add
fnstsw
sti
scas
into
testb
mov
addb
add
mov
mov
add
jb
test
xor
add
sbb
scas
cli
movb
aaa
dec
push
add
push
xchg
cli
pop
testb
cmpsb
add
add
pusha
add
dec
fisubrs
mov
pop
xlat
repnz
add
pop
sbb
fistl
add
mov
add
stos
rcrl
jbe
adc
sbbl
jge
or
sub
add
fildl
add
int3
inc
dec
push
aad
mov
outsl
pop
add
cmp
aad
add
add
xor
mov
in
fisttpl
add
fwait
dec
jl
leave
pusha
add
insb
or
add
cmp
ja
mov
sub
add
add
add
mov
sub
add
inc
add
fdivrl
add
add
sti
add
fiadds
movsb
add
addb
add
fwait
ja
add
imul
add
aaa
xchg
xor
or
add
leave
jno
rolb
inc
add
mov
add
add
jmp
xor
out
cmp
jge
dec
aas
lods
push
dec
mov
add
xlat
push
leave
pop
rolb
add
add
add
jne
nop
add
adc
dec
mov
add
mov
mov
fmull
cmp
add
add
and
mov
mov
add
out
out
loope,pn
rolb
jne
add
add
mov
popf
cmpsb
add
mov
xlat
push
add
add
mov
nop
add
add
addr16
add
add
popf
loop
movsb
add
cwtl
fwait
sbbl
mov
lret
pop
and
mov
leave
in
dec
mov
loope
rolb
add
push
add
jg
add
sbb
mov
hlt
add
gs
addr16
test
add
mov
scas
sarl
pop
movsb
add
push
add
xchg
add
add
add
push
add
pop
sbb
add
add
add
out
mov
mov
repz
adcl
sbb
add
add
adc
push
lret
xchg
mov
pop
xchg
sub
add
seto
les
cltd
pop
lahf
xchg
add
sub
dec
jne
test
add
popa
and
sbb
pop
inc
add
faddp
add
or
add
add
add
sahf
test
jno
stos
stos
and
push
jmp
add
rolb
add
or
data16
add
mov
sub
mov
add
jnp
add
gs
aaa
rolb
cmc
xchg
add
je
adc
adc
add
and
mov
jne
pop
aaa
repz
add
push
idiv
and
adc
mov
jbe
xchg
aad
cmp
push
add
add
dec
push
stc
cmpsl
popa
movsl
or
jbe
addr16
push
add
add
das
mov
lret
testb
data16
inc
xor
leave
addr16
addr16
push
sbb
add
mov
mov
and
mov
inc
pop
pop
ret
xchg
jnp
mov
add
add
add
fucomp
push
mov
sub
cmp
mov
add
jb
xor
in
push
add
sahf
repnz
add
cld
ficomps
push
add
mov
nop
add
jno
ss
add
add
repz
sbb
setle
xlat
push
add
mov
popf
inc
test
out
or
add
loop
push
add
or
or
sub
add
call
add
xchg
add
loop
xchg
add
add
aad
add
mov
or
and
mov
outsb
sti
aas
ljmp
ss
imul
cs
in
add
add
aas
loopne
sbb
add
pusha
add
lea
adc
add
inc
add
mul
add
ficompl
dec
xchg
add
lahf
leave
scas
mov
pop
lods
stos
push
add
or
loopne
dec
fnstenv
jb
addb
xchg
add
add
icebp
movb
add
ds
add
add
pop
cwtl
push
scas
push
add
mov
add
rcr
roll
add
lret
jne
add
add
addb
add
jge
add
add
je
bound
mov
add
or
add
add
sub
aas
aam
out
mov
xchg
add
lds
add
int
sbb
fisttpll
mov
out
in
pop
mov
xor
cmp
mov
rorl
rorl
jne
sti
data16
mov
push
jb
cmp
jb
pop
add
rolb
adc
aaa
add
mov
add
stos
sbb
mov
rolb
scas
fwait
imul
adc
cmpsl
rolb
jmp
add
frstor
adc
mov
mov
mov
sbb
insl
xchg
mov
add
hlt
add
add
add
ja
loopne
add
cmp
sub
js
es
add
add
mov
lret
sbb
popf
outsl
fiaddl
inc
add
mov
jg
add
add
in
mov
add
test
fisubs
add
ret
sbb
loope
daa
cld
cmp
add
add
xor
add
add
adc
mov
mov
fwait
push
sbb
movups
adc
or
sub
push
add
add
repnz
add
pusha
add
cwtl
xor
stos
add
lods
mov
add
je
dec
stos
into
test
push
add
cmp
add
add
xchg
iret
xor
cmp
jns
add
add
jmp
push
rcrl
cmpsb
add
dec
push
dec
jp
fwait
scas
push
mov
dec
jno
xchg
test
fsubr
sub
add
jb
test
pop
jmp
enter
std
xor
es
and
mov
cmpsl
test
out
cmpsb
add
mov
sbb
add
test
push
add
or
add
pop
jns
and
mov
cs
repz
add
scas
adc
add
mov
shll
insb
addb
add
sbb
add
lea
inc
sub
aas
push
mov
push
xlat
bound
mov
add
inc
add
add
adc
popf
imull
mov
sbb
mov
les
lret
out
in
push
inc
push
mov
leave
popf
int3
dec
daa
in
push
add
mov
jle
add
lret
jno
lods
inc
sbb
cmpsb
add
add
xchg
push
inc
icebp
mov
add
or
cmp
js
add
cltd
mov
fcmovu
pop
sbb
add
js
add
fnstcw
jbe
mov
sub
add
addb
inc
mov
dec
fidivrl
es
js
jno
je
inc
and
mov
add
add
std
pop
cltd
and
push
bound
mov
cmp
ljmp
rolb
mov
add
add
addb
lds
sub
add
and
ja
mov
add
outsl
cmp
xchg
add
mov
cmpsb
add
in
dec
lahf
jnp
add
xor
xchg
add
add
jnp
inc
add
add
and
mov
je
popa
fcomi
fwait
push
sbb
in
pop
jbe
xor
dec
popa
jmp
mov
sbb
inc
add
mov
add
inc
add
cli
mov
in
pop
adc
movsb
add
adc
cli
push
lahf
in
push
rolb
fnsave
add
and
bound
mov
adc
arpl
jle
fwait
cmp
push
add
add
add
push
add
mov
xor
mov
insl
fdivrl
mov
pop
add
add
pop
push
add
cmp
add
cli
xor
jl
jbe
sub
add
add
mov
jge
add
mov
xlat
rolb
fnstsw
add
pushf
imul
in
imul
xchg
add
add
inc
add
cwtl
jmp
sub
pop
jmp
insb
test
pop
scas
fsubrp
lcall
cmp
push
add
leave
mov
ljmp
popa
test
pop
mov
cmp
stos
add
fimuls
add
loopne
das
addb
mov
add
addb
add
sbb
jmp
ljmp
fimuls
stc
sbb
push
gs
xchg
into
test
fmuls
mov
test
or
add
mov
loopne
lret
call
add
mov
jg
inc
add
add
outsb
pusha
add
pop
movsl
add
incb
mov
add
add
push
add
mov
pop
mov
push
add
aas
lock
add
add
cmpsl
add
and
mov
mov
stc
xchg
stc
lea
or
add
pushf
outsl
xchg
sarl
lcall
jg
add
mov
or
xchg
add
stos
sbb
sub
test
mov
insb
ret
add
imul
rolb
add
mov
aaa
mov
fwait
pushf
hlt
add
sbb
cmp
add
mov
adc
cwtl
inc
aas
push
pop
repz
add
rolb
dec
xchg
add
pop
cltd
xor
insb
dec
xchg
add
int
xchg
or
subl
xchg
add
cmp
add
add
fnstsw
subl
add
outsl
mov
rolb
add
pop
add
sub
xchg
mov
xchg
add
add
dec
adc
lret
cltd
or
cmp
lods
mov
in
and
jb
push
add
add
add
ffree
add
push
add
xor
lea
push
add
movsb
add
ret
dec
push
add
dec
sahf
lahf
call
jge
je
test
pusha
add
sbb
cmp
int3
push
pop
clc
cld
aaa
test
inc
dec
faddl
add
jmp
xor
mov
add
mov
jg
add
out
sbb
rolb
cmp
add
aam
rorl
outsb
int3
dec
lahf
mov
add
mov
add
add
mov
add
cmp
add
pop
or
jmp
add
push
add
add
jle
mov
add
pusha
add
fidivl
jmp
add
add
call
jae
add
or
idivl
cmc
jl
mov
add
pop
jl
lret
and
pushf
mov
test
xor
add
add
or
add
inc
add
js
inc
add
add
enter
ss
jmp
inc
add
add
mov
inc
insl
xchg
fisttpll
stc
testb
push
lods
add
add
lret
andl
addb
mov
jae
add
add
out
push
sbb
rorl
add
add
outsl
add
mov
cmp
cmp
ljmp
pop
loopne
js
add
jp
add
add
pop
cmp
add
push
add
xor
mov
sub
add
btr
out
enter
add
jno
add
pop
xlat
sbb
mov
xlat
test
mov
shl
add
scas
mov
add
pop
imul
mov
dec
sahf
jno
ds
add
push
mov
add
xor
test
add
mov
movsb
add
add
ds
inc
add
pop
loopne
stos
testb
jns
pop
enter
xchg
jecxz
add
jb
push
add
add
add
lahf
pop
in
dec
fsubp
add
fcompp
fwait
test
push
add
call
xor
xor
icebp
into
dec
rolb
aad
pop
push
add
add
mov
jg
jb
sbb
outsl
mov
pop
scas
in
outsb
scas
rolb
mov
mov
push
add
add
push
pusha
add
add
mov
add
fsubrs
dec
jg
scas
jne
mov
xchg
jl
lods
fisttps
out
jno
leave
call
movsb
add
das
cmp
add
lea
test
add
and
push
add
stos
sub
inc
add
adc
lods
push
add
add
add
fidivs
or
add
mov
adc
hlt
add
rcll
loopne
mov
add
cmp
inc
sub
adc
add
mov
add
dec
mov
push
cli
testl
push
add
jne
add
test
add
mov
mov
and
pushf
inc
add
fildl
mov
pop
pop
sub
into
aaa
or
jbe
add
mov
sbb
andl
jmp
aad
mov
addb
mov
repz
dec
push
add
add
scas
adc
add
scas
fistpll
pop
or
shll
sbb
add
add
add
sub
add
ret
cmp
loop
push
add
add
add
mov
enter
dec
les
aad
fwait
out
or
mov
add
addb
jnp
cmpsl
xchg
aad
cmc
xor
arpl
fiadds
fprem1
cltd
stc
addb
push
cmpsb
add
add
sbb
lahf
out
sbb
mov
add
add
lcall
pop
sti
mov
jns
dec
mov
add
movsl
jnp
xchg
add
test
push
add
add
xchg
add
push
add
jo
or
sub
add
cltd
push
and
add
or
jge
cmp
jo
sbb
xor
sbbl
fbld
add
rolb
outsb
scas
adc
cmp
add
mov
xchg
add
add
push
add
inc
add
jecxz
jg
add
daa
or
xchg
dec
push
add
xchg
mov
dec
cwtl
jno
aam
mov
lahf
rolb
xchg
push
push
adc
mov
add
add
sub
add
lret
add
testl
cmp
add
mov
lock
mov
daa
or
mov
scas
jle
scas
adc
sti
cmp
add
jne
lahf
jb
jno
add
xor
mov
jne
ret
adc
cmpl
addb
adc
mov
pop
fisubl
add
pop
jne
sub
inc
add
add
xlat
sbb
cmc
push
aad
add
push
add
add
pop
mov
add
add
add
fnstsw
ds
jb
mov
std
aad
add
xor
sub
ljmp
xchg
sbb
xor
scas
ja
in
sub
add
adc
adc
sub
add
add
add
pop
adc
mov
shl
xlat
add
ficoml
push
add
mov
add
push
add
add
sub
mov
into
mov
sub
adc
add
stos
aad
adc
jp
andl
or
repnz
push
inc
rolb
jle
pop
push
and
test
add
xor
imul
mov
inc
add
daa
scas
imull
mov
test
bound
mov
lds
add
add
add
cmp
sub
add
popf
add
add
or
mov
add
add
mov
xchg
add
add
jp
add
adc
add
add
movsl
add
stos
xor
outsl
frstor
mov
adc
push
add
stos
xchg
outsb
mov
pop
adc
add
sub
stos
xchg
add
call
sbb
and
add
jle
adc
cmp
mov
fnstsw
cmp
sub
add
std
popa
mov
in
pop
stos
ljmp
inc
add
insl
testb
jbe
sub
and
add
or
and
mov
inc
add
lds
add
push
or
and
mov
ret
fcmovb
outsl
xchg
push
fmul
jle
jmp
mov
dec
inc
add
mov
sub
add
push
add
mov
add
add
add
add
jne
add
xchg
push
add
jb
in
jb
or
add
push
push
add
xor
in
jmp
cmp
mov
xorl
cmpsl
test
gs
add
add
pop
dec
in
out
sbb
sub
sbb
insl
adc
lret
add
add
pop
pop
out
add
add
aas
cmp
xor
fxsave
add
add
jp
nop
add
add
add
push
sbb
add
adc
pop
sub
inc
rolb
ret
xchg
mov
ds
lret
add
pmovmskb
add
add
pop
fnstcw
push
add
add
mov
jbe
in
xchg
lcall
mov
adc
pop
adc
dec
loopne
xlat
jae
scas
or
add
add
add
or
scas
and
mov
xor
add
je
in
out
cmpsb
add
loope
add
stc
mov
or
mov
in
dec
ret
pop
lret
fcoml
mov
mov
dec
sbb
add
fcmovnb
add
pusha
add
jb
ja
add
int3
add
add
mov
and
mov
fstl
or
cmc
enter
or
add
rolb
aaa
xlat
pusha
add
aas
aad
mov
sub
sahf
pop
test
je
inc
add
divl
add
aaa
pop
lods
xchg
pop
setb
stc
outsl
adc
mov
adc
dec
ja
test
fsubs
dec
ds
cmp
or
dec
ret
leave
fisttpll
stos
adc
adc
and
mov
push
xor
add
push
push
add
pop
mov
cli
pop
add
mov
adc
pop
pop
jbe
cwtl
out
lea
add
insl
sub
push
add
daa
je
idivl
adc
arpl
xor
addb
dec
enter
add
pop
adcl
mov
jns
and
mov
fidivrl
jp
mov
inc
add
call
out
mov
add
stos
rolb
xor
outsl
cmc
inc
push
add
mov
into
mov
leave
jg
add
sub
add
add
mov
mov
add
add
add
cmp
lods
popf
add
mov
inc
add
int3
add
mov
cmp
lahf
xchg
in
add
mov
std
into
add
das
movsl
mov
into
pop
aad
xchg
add
add
add
or
mov
add
xor
data16
mov
sbb
cli
enter
leave
fisttps
add
lret
ds
out
add
pop
jmp
pusha
add
dec
sbb
sbb
add
xor
testb
dec
movsb
add
jg
add
add
mov
loop
loopne
mov
add
or
mov
xor
sub
rolb
xchg
add
lcall
hlt
add
add
inc
add
daa
es
add
in
add
loope
sbb
add
cltd
mov
push
clc
sub
and
lods
imul
imul
mov
push
adc
nop
add
movb
add
testb
in
xchg
add
insl
cmp
pop
cmp
sub
loop
cltd
aaa
sbb
lds
add
mov
js
xor
xor
jg
mov
les
ljmp
pop
mov
add
icebp
sahf
bound
mov
add
sbb
test
pop
in
xchg
and
mov
fisubs
add
mov
mov
add
or
stc
aaa
and
sub
sbb
mov
aas
pop
mov
xor
jns
hlt
add
add
add
inc
pop
xor
fcmovnb
add
sti
pushf
test
push
add
mov
add
and
fcmovbe
mov
add
sbb
call
add
dec
fwait
test
push
add
dec
and
lock
cmc
fimuls
daa
cwtl
ljmp
mov
es
inc
rolb
add
add
add
adc
iret
fmuls
std
sbb
add
inc
add
cmc
lcall
jne
push
jge
sub
pop
loope
icebp
lods
inc
add
rcrl
orl
ret
mov
sub
test
lret
sbb
push
add
pop
call
and
add
fsubrs
leave
pop
jno
addb
xor
pop
inc
add
add
push
add
and
mov
add
jno
push
add
sub
mov
outsb
rcll
add
push
jae
add
pusha
add
lock
mov
xlat
fdiv
add
fbld
jno
negl
and
repnz
dec
movsb
add
mov
add
test
push
pop
mov
push
mov
test
mov
icebp
iret
sub
add
add
add
dec
cmp
add
inc
cmpsl
jmp
movb
sub
mov
add
pop
pop
push
add
and
mov
add
sub
pop
adc
mov
loop
fmul
addb
and
and
mov
add
mov
jnp
stc
mov
add
add
add
xor
arpl
in
lret
int
cld
xchg
add
mov
out
std
sarl
add
xchg
push
mov
cwtl
cmp
fnstenv
add
lea
pop
mov
imul
pop
pop
roll
mov
sub
shrl
add
mov
mov
pop
jno
imul
test
rolb
sbb
inc
add
stc
jg
inc
add
inc
pop
sbb
jne
and
rcll
dec
enter
arpl
add
add
push
dec
adc
jecxz
rolb
lahf
fwait
addb
ljmp
dec
adc
je
test
inc
add
sub
mov
inc
add
xchg
mov
xor
lahf
add
lods
insb
adc
testb
gs
add
in
add
inc
call
arpl
fsubl
xor
testb
add
cli
pop
or
lods
xor
add
add
add
push
add
add
ret
aaa
jae
into
subl
cld
mov
add
lock
sbb
scas
xchg
cmp
add
add
mov
xchg
ja
or
add
and
add
mov
and
xor
pushl
add
jae
xchg
add
cli
out
xchg
add
xchg
add
inc
popa
xchg
add
mov
lahf
sbb
add
add
add
dec
cld
test
add
add
and
mov
imul
sub
stos
testb
cwtl
inc
imul
mov
stos
loopne
push
add
add
fwait
jb
loopne
and
inc
mov
sub
aas
jp
push
rcl
icebp
cmpsb
add
outsl
shll
call
add
mov
mov
add
push
add
and
mov
add
in
outsl
clc
jp
in
inc
add
add
adc
add
push
add
add
mov
ljmp
dec
sub
iret
mov
xchg
add
add
inc
add
lret
mov
rolb
lret
outsb
xor
mov
jnp
xchg
popl
mov
inc
add
add
fldenv
out
and
lret
testl
xchg
lea
adc
cli
mov
sbb
mov
xchg
add
push
jecxz
mov
decl
push
pop
mov
adc
pop
cmc
out
push
add
push
int
add
xchg
add
addb
add
add
or
popa
mov
push
add
add
scas
dec
and
int3
ret
jnp
add
push
add
xor
xchg
add
inc
add
movsl
add
mov
xchg
add
inc
jle
add
into
enter
cmp
jno
jbe
pop
loope
jne,pn
and
xchg
fadds
mov
imul
leave
sub
add
sahf
inc
sub
add
js
mov
add
add
test
xchg
add
in
cltd
inc
add
data16
add
hlt
add
addb
in
mov
or
movsb
add
fldl
outsl
mov
add
test
cmpsl
jle
cld
add
inc
add
mov
mov
add
add
repnz
pushf
stos
mov
adc
repz
add
stos
mov
inc
insl
iret
xchg
mov
sti
repz
sub
or
fmul
inc
add
ret
add
clc
jne
sbb
mov
add
rcl
add
add
mov
adc
addb
mov
cmpsb
add
test
xchg
pop
loop
mov
add
out
xor
popf
add
test
test
and
mov
cmpsb
add
xchg
out
lahf
xchg
add
add
add
add
dec
rolb
loope
add
imul
adc
repz
add
pop
dec
inc
add
add
add
add
daa
mov
fldl
sbb
mov
pop
jnp
ret
movsb
add
mov
int3
and
mov
add
adc
pop
filds
sti
stc
outsl
in
pop
xchg
add
push
pop
add
adc
jp
mov
add
add
dec
fsts
or
push
mov
mov
add
add
cmp
enter
popa
stos
mov
push
add
add
xchg
add
add
add
movb
add
mov
inc
add
add
add
fimuls
fsubl
pop
out
sbb
adc
xchg
iret
stos
pop
xorl
or
push
cmpsb
add
ffreep
xor
mov
add
scas
lea
loopne
lcall
dec
mov
xchg
inc
add
and
js
or
lret
or
dec
cmc
inc
add
jns
insb
mov
xlat
push
add
les
jp
ret
cmp
stos
shll
lcall
jo
lret
jecxz
xorl
mov
dec
fistl
add
mov
cmpsb
add
mov
sub
fistpl
mov
add
xor
and
mov
pop
jb
push
push
mov
mov
jmp
add
add
add
add
rolb
pop
jne
push
jg
sbb
add
sti
pushf
icebp
xchg
lcall
xchg
add
cmp
adc
mov
add
add
rolb
cmc
daa
cld
loope
mov
add
jmp
add
mov
sub
stos
fiadds
inc
mov
test
into
jnp
add
out
add
addr16
xor
add
add
jae
add
add
sahf
mov
mov
jne
add
fbstp
push
add
mov
add
add
jno
sti
jp
add
add
add
mov
mov
sub
jnp
int3
mov
mov
add
sub
mov
sub
testl
mov
add
add
xchg
add
cmp
pop
addb
mov
mov
rolb
mov
outsb
cwtl
dec
dec
lods
pop
pop
lcall
add
and
mov
mov
test
sti
lea
mov
xchg
sbb
cmp
xchg
add
add
mov
jne
scas
lahf
and
fstl
mov
add
add
arpl
dec
leave
xchg
pop
test
cltd
pop
jge
add
cmc
lea
add
arpl
mov
or
add
pop
add
lds
add
push
cmpsb
add
mov
inc
add
lds
call
pushf
mov
addb
add
adcl
int
xor
jp
jnp
add
ret
js
cmpsl
mov
ret
dec
dec
and
or
add
add
inc
or
xchg
add
xor
dec
and
add
add
cltd
lret
dec
fcmovnb
add
rolb
jns
add
xchg
fisttps
gs
rolb
adc
testb
mov
fcmovbe
add
mov
xor
jmp
adc
cmp
pop
in
adc
jecxz
add
adc
sbb
addb
add
imul
addr16
call
add
and
rolb
movb
add
aam
lock
inc
ljmp
movsb
add
and
mov
add
xchg
in
cmp
jmp
add
lods
repnz
add
fadds
mov
xchg
add
inc
add
inc
inc
add
or
xlat
mov
and
lea
cld
pop
xor
xor
xor
xchg
add
push
add
addb
int
rolb
ret
nop
add
sub
out
push
xlat
pop
dec
loopne
push
pop
mov
jne
add
add
rolb
cs
sbb
dec
pop
dec
aam
jae
pop
push
add
or
out
sub
or
add
sbb
push
add
add
add
push
xor
push
add
movsl
cmp
fmul
or
outsb
mov
push
orl
das
xchg
movb
sbb
out
xchg
dec
fwait
je
push
add
mov
pop
and
add
test
or
add
push
add
adc
incl
mov
hlt
add
add
addr16
dec
clc
push
imul
add
loope
push
dec
push
and
push
add
add
shll
mov
scas
push
push
or
add
add
add
mov
in
sub
add
push
subl
repz
jecxz
add
add
add
pop
and
dec
ss
add
fldt
mov
ds
nop
add
jg
out
or
testl
movb
sbb
dec
les
inc
cltd
mov
dec
pushf
dec
jb
mov
or
lods
aad
add
cmp
adc
lods
pop
and
mov
or
add
add
mov
add
mov
sbb
cmp
or
add
dec
adc
addb
enter
scas
inc
add
add
ss
rep
adc
add
stos
pop
adc
add
add
int
add
dec
scas
cltd
dec
les
fisttps
add
andl
add
mov
das
popa
inc
lcall
mov
add
pop
adc
cmp
add
shrl
fildl
add
mov
push
loopne
test
xchg
rolb
add
inc
add
bound
mov
add
sub
mov
push
xchg
sbb
ud2
test
add
pop
cs
jp
out
mov
add
mov
mov
std
and
mov
jne
aas
sbb
push
mov
lret
add
shll
sbb
repnz
lcall
mov
outsb
xchg
add
int3
mov
add
mov
out
sub
lahf
inc
add
stc
cmpsl
jecxz
daa
xor
rorl
shll
addr16
imul
insl
xchg
add
add
mov
pop
fidivrs
xchg
popl
adc
testb
imul
dec
sub
add
test
jecxz
jmp
add
testb
cmp
cmpsl
rolb
iret
sbb
mov
call
add
adc
sbb
imul
stos
push
add
cmp
aaa
fiadds
popf
lods
add
test
pop
addb
mov
decb
scas
sub
loopne
bound
mov
add
in
stos
cmp
lds
mov
add
push
js
add
pop
pop
addb
cmp
add
mov
adc
into
inc
add
and
mov
pushf
out
xor
mov
call
inc
sbb
dec
mov
xchg
add
add
cwtl
dec
sbb
xchg
dec
sarl
add
inc
add
pop
ret
inc
daa
jmp
and
mov
sbb
add
add
or
jbe
mov
xchg
fwait
pusha
add
add
push
add
in
dec
xchg
add
xchg
sbb
out
add
imul
push
add
inc
add
add
int
add
add
push
adcl
add
cli
in
sub
add
pusha
add
inc
aam
cmp
ret
jbe
sub
addb
cwtl
cs
dec
cmp
push
outsb
das
jg
add
shrl
mov
pop
scas
rolb
mov
add
lret
jg
pop
pop
scas
cli
pop
fimuls
add
mov
push
repz
mov
lds
add
dec
insl
inc
imul
push
add
add
cltd
addl
add
add
add
add
add
add
dec
mov
add
add
out
mov
out
mov
inc
add
or
add
loope
arpl
fisttpl
iret
lcall
cmc
stos
xchg
add
and
dec
lods
cmpsl
push
add
add
call
hlt
add
add
add
adc
sbb
scas
ja
pusha
add
xor
dec
push
lds
jns
add
mov
stos
lret
aas
or
loop
mov
add
mov
les
xor
mov
adc
movb
cwtl
rcll
adc
add
xlat
and
mov
add
fsubrs
mov
add
pusha
add
mov
or
aaa
fs
dec
or
add
xor
pop
mov
incl
stos
frstor
add
cmpsb
add
add
ret
push
dec
pop
pop
movsl
mov
std
lds
xor
jno
lea
push
add
add
mov
cwtl
mov
pop
lcall
repnz
or
pop
mov
les
cmp
mov
mov
mov
int
clc
add
mov
and
mov
add
push
adc
inc
add
test
mov
shr
int3
jg
aad
add
add
add
add
mov
add
repnz
mov
mov
xor
das
pop
ret
add
pop
pop
js
jnp
cmpsl
bound
mov
lret
xor
add
add
mov
mov
data16
push
add
rolb
mov
push
dec
cwtl
rolb
addb
stos
mov
stos
add
addb
cmpsb
add
jo
mov
mov
or
add
jg
mov
popa
xchg
add
add
jp
add
test
dec
sub
mov
leave
dec
scas
mov
mov
or
shll
mov
cmp
rolb
push
add
or
lahf
test
xchg
mov
jo
dec
cmpsl
cli
xor
data16
pop
mov
ret
add
mov
ficompl
add
and
add
test
fimull
sbb
add
jbe
mov
mov
xchg
push
add
mull
pop
jbe
push
add
icebp
pushf
and
push
pop
les
add
sub
jg
data16
mov
add
mov
lret
and
pop
movsb
add
mov
sbb
mov
into
mov
pop
push
pop
xchg
test
inc
lods
cmc
addr16
lea
cmp
cmp
push
add
adc
sbb
add
add
mov
add
add
lock
lret
aad
inc
add
adc
lret
fcmovbe
jne
add
insl
cmpsl
mov
test
mov
mov
xchg
cli
cltd
icebp
inc
add
jg
xchg
add
test
add
stc
bound
mov
in
sbb
add
std
test
into
cmp
int
mov
into
push
add
add
xchg
add
adc
adc
jns
and
mov
add
push
add
adc
sahf
je
add
mov
xchg
loope
dec
pop
mov
mov
add
and
add
adc
testl
sub
sbb
add
mov
fcmove
repz
add
xor
adcl
or
testl
mov
mov
add
int
add
int3
loopne
jb
xor
aad
cmp
add
jmp
push
add
add
add
push
cmp
add
add
add
enter
and
add
dec
aam
sbb
add
cmp
dec
mov
and
jl
add
and
outsb
jbe
xchg
dec
adc
adc
mov
insl
push
jo
out
inc
add
mov
mov
add
add
mov
cmpsb
add
add
and
popf
nop
add
mov
add
add
sub
add
mov
test
add
adc
xchg
inc
lock
mov
jge
and
mov
pop
mov
dec
xlat
add
clc
mov
add
nop
add
mov
mov
in
pop
push
add
and
pusha
add
call
adc
out
sub
add
add
fwait
push
add
adc
add
repnz
mov
ja
add
fidivs
push
add
cmp
mov
jp
data16
jmp
sub
jecxz
add
testl
add
inc
sahf
insl
sti
in
aaa
sbb
add
mov
add
inc
add
lods
mov
xchg
mov
jne
int3
aad
add
cld
jo
cmp
add
mov
sub
jbe
lea
mov
push
add
int
sbb
lret
xor
sahf
rolb
clc
dec
into
xor
cmp
xor
pop
popf
scas
loopne
iret
xchg
add
sub
and
mov
popf
fcom
cwtl
xchg
mov
add
mov
push
add
stc
push
add
mov
mov
xor
adcl
cmpsl
int
sub
add
cmp
add
jmp
add
pusha
add
cmp
sub
add
mov
sbb
add
leave
jo
mov
rolb
fidivs
add
add
fstpl
add
ret
xor
testl
jl
or
or
les
test
cmp
les
repz
mov
test
add
loopne
add
and
add
add
rolb
out
push
in
fsubrs
fwait
sub
cltd
test
dec
and
stos
ret
rolb
xlat
add
add
add
add
dec
clc
mov
jae
pop
cmp
movsl
mov
mov
fstpl
jl
push
or
mov
add
out
pop
lea
repz
imul
in
subl
lahf
jg
add
addb
or
add
bound
mov
add
xchg
add
add
add
add
shll
rolb
out
into
movb
loope
stc
and
add
add
sub
add
add
mov
add
add
rolb
jns
sbbl
cmp
add
pop
push
pushf
inc
shl
fcomps
scas
sbb
cwtl
ja
jl
add
aas
dec
movsl
movb
loop
outsb
scas
sub
xor
dec
cmpsl
call
mov
push
pop
fbstp
sti
nop
add
pusha
add
imul
testb
add
xchg
mov
mov
mov
inc
add
and
add
inc
add
add
add
xlat
into
lds
cs
mov
add
dec
mov
hlt
add
add
sbb
xchg
add
add
add
mov
xor
dec
lret
xchg
add
or
test
or
push
add
add
mov
cltd
jge
shrl
add
loop
test
in
adc
aas
cmpsl
lods
test
or
frstor
pusha
add
cmpsb
add
add
add
loope
or
and
mov
mov
js
cmp
cmp
rolb
out
adc
xor
jmp
sub
mov
add
add
fiaddl
pop
dec
dec
in
movb
mov
mov
push
add
iret
inc
add
jnp
sub
repz
imul
add
add
add
mov
add
cmp
adc
test
add
add
test
xchg
dec
add
inc
add
add
sbb
add
cmp
adc
and
mov
imul
add
insb
add
movsl
dec
jne
or
cltd
xchg
add
and
mov
sti
xchg
add
cmpsl
out
movsl
adc
incl
aas
add
sbb
dec
popf
mov
add
in
pop
mov
stos
addr16
mov
mov
dec
add
add
lcall
xchg
mov
fistpll
add
xor
dec
mov
movsl
mov
adc
imull
inc
mov
add
repz
add
push
add
data16
mov
pop
sub
add
fbld
pop
lret
fisubrs
pop
movsl
lock
add
add
cwtl
je
sbb
ucomiss
jge
xor
mov
add
add
dec
test
lcall
mov
stos
lcall
movsb
add
add
mov
push
fcompl
cmpsb
add
sbb
jb
xchg
ret
push
add
or
cmp
mov
and
out
add
mov
lea
out
push
add
out
mov
stos
cmp
enter
and
mov
mov
add
mov
add
add
push
cmp
push
add
out
testb
roll
fidivs
add
add
cmp
out
add
add
pop
movb
rolb
imul
mov
add
add
xchg
and
mov
cmp
add
les
cltd
inc
add
push
add
inc
add
mov
xchg
jnp
add
jbe
and
sub
add
lret
rolb
push
add
imul
add
add
push
add
or
add
nop
add
xchg
repnz
xchg
add
pop
mov
enter
add
jmp
daa
movsl
cmc
xchg
push
in
adc
xor
xor
imul
add
add
or
add
add
sub
adc
pop
fisubrs
fimull
or
fs
add
dec
dec
xchg
outsb
out
ror
add
ret
or
pop
cmpsb
add
aam
or
nop
add
xchg
scas
test
loope
and
pop
fcmovb
pop
mov
add
in
add
add
jns
push
add
add
aam
ja
mov
add
push
test
xchg
and
mov
cmpsb
add
int
add
ja
add
cld
inc
out
add
pop
movb
inc
add
dec
sub
push
ret
cwtl
and
mov
mov
or
pop
insl
pop
pop
test
scas
testl
xor
add
icebp
mov
mov
add
test
dec
push
mov
add
stos
mov
add
or
add
sub
imul
cld
pop
fstl
jg
add
adc
imul
out
or
bound
mov
jae
add
mov
mov
and
hlt
add
sub
add
mov
out
in
mov
pop
in
add
mov
pop
cltd
js
add
aam
and
mov
add
mov
mov
add
call
pop
sub
push
add
add
imul
push
add
cmc
or
sub
jg
add
xchg
jo
mov
ret
add
cli
aad
cmc
imul
clc
rorl
rcrl
jl
add
add
or
das
lods
adc
or
out
push
jg
add
add
add
in
dec
inc
add
addb
push
in
push
or
sbb
fildl
add
sarl
loopne
fadd
add
imul
cmp
data16
rolb
rolb
xchg
add
jbe
rolb
addb
pop
ficomps
in
or
test
cs
add
add
pushf
jp
orl
sbb
cmp
mov
push
pop
mov
xchg
add
adc
rolb
fnstcw
mov
orl
or
dec
push
in
xor
lcall
adc
mov
sbb
jo
add
lahf
lret
lea
or
xlat
pop
daa
sub
add
mov
add
mov
add
mov
and
mov
jno
dec
add
mov
add
and
mov
pop
aad
outsl
bound
mov
push
add
mov
pop
push
dec
les
sub
sub
xor
add
push
stos
pop
lret
inc
push
push
inc
add
cmp
cld
adc
cmpsb
add
adc
mov
lods
cmp
cmpsl
out
xor
add
add
add
pop
or
dec
imul
add
xchg
jnp
rcrl
add
add
out
les
jbe
push
xlat
aam
mov
add
and
add
add
jp
add
add
clc
cs
xlat
fnstenv
cli
gs
cwtl
mov
out
sti
mov
lahf
ljmp
mov
mov
ja
mov
data16
lcall
push
shld
xor
test
test
sbb
subl
mov
and
mov
add
mov
mov
adc
cmc
mov
sbb
add
out
add
mov
mov
pop
mov
lods
hlt
add
add
push
mov
add
add
loop
mov
jne
mov
sub
add
mov
pusha
add
test
mov
pop
add
mov
sub
aad
add
data16
adc
xor
add
rorl
add
xchg
cld
loope
adc
push
jae
bound
mov
add
dec
je
and
ss
lock
pop
jnp
or
add
and
mov
pop
les
cmpsl
std
xor
add
xchg
mov
push
add
mov
repz
push
repnz
sbb
push
mov
lret
loope
jns
gs
add
aas
popa
adc
push
mov
pop
or
int
add
popa
pop
lea
mov
clc
dec
in
jo
add
mov
mov
nop
add
add
add
xchg
add
popf
into
rorl
add
out
test
sbbl
xchg
rolb
cmp
push
add
add
imul
add
add
cmp
inc
xchg
add
pop
lcall
mov
in
lods
cwtl
and
rolb
mov
add
repnz
sub
mov
popf
add
cmp
add
or
add
add
cmpsb
add
stos
cmp
add
add
and
add
and
mov
add
inc
add
add
add
add
andl
add
add
lahf
dec
dec
addr16
iret
jl
xchg
add
dec
xor
add
loope
aas
fidivl
push
addb
xor
mov
imul
jg
enter
andl
add
bound
mov
sbb
add
add
scas
movsl
add
out
adc
les
sbb
out
nop
add
add
bound
mov
add
syscall
ja
cmpsb
add
add
mov
add
add
lcall
inc
add
add
add
xor
xchg
add
jle
lahf
sub
mov
xor
mov
add
cmp
push
add
add
mov
add
leave
roll
add
add
add
jb
add
add
sub
fwait
cmpsl
xor
sub
mov
inc
add
mov
cmp
push
add
add
rolb
or
cld
ret
cmpsl
lcall
add
dec
call
add
pop
jmp
mov
sub
lods
fidivrl
cltd
repz
aaa
leave
iret
xchg
das
insb
push
ficompl
scas
inc
add
add
add
ret
fsubp
lret
xor
xor
rolb
jle
insl
dec
jl
and
mov
jb
mov
inc
sarl
popf
cmp
in
testl
add
aaa
testb
add
add
imul
pop
ja
pop
popa
popf
or
aaa
or
test
leave
pandn
mov
sub
std
inc
add
add
add
test
cltd
push
xor
push
add
add
fbstp
add
out
add
add
and
shl
movsl
fidivs
cmp
addb
iret
pop
out
jne
and
push
add
xor
rolb
jg
or
dec
loopne
mov
movsb
add
adc
data16
arpl
mov
jo
add
les
sbb
xor
add
mov
xchg
add
add
mov
xchg
lret
cmpsl
data16
movsb
add
notl
inc
add
neg
fsubrs
add
mov
pop
mov
add
push
arpl
xor
pushf
jb
movsl
xor
pop
push
add
push
add
int
pop
xor
xor
dec
stos
int3
std
jo
cwtl
lock
add
add
sub
or
fsubrs
fbstp
out
fchs
add
bound
mov
adc
cmp
push
add
add
add
add
fstpl
mov
data16
inc
add
lcall
add
xlat
adc
fmull
in
test
add
sub
fisubl
lds
iret
pop
adc
jg
dec
and
mov
call
mov
nop
add
add
repnz
sbb
mov
add
inc
add
repnz
jae
cmp
jle
mov
stos
clc
repnz
jae
add
out
mov
mov
nop
jae
mov
mov
gs
repnz
jae
add
popa
add
mov
xchg
ret
stos
add
or
mov
clc
repnz
jae
ljmp
shrl
mov
xchg
ret
hlt
add
std
lea
push
mov
xchg
ret
add
add
sub
push
mov
xchg
ret
out
add
fs
dec
add
clc
repnz
jae
ret
push
mov
push
mov
xchg
ret
and
sub
repnz
jae
hlt
add
movsb
add
push
mov
xchg
ret
add
sub
clc
repnz
jae
add
mov
repnz
jae
add
add
add
add
jne
push
mov
xchg
ret
add
les
add
pushl
fwait
cld
nop
jmp
cmp
cwtl
add
movsb
insl
push
je
sub
subl
xor
add
mov
xchg
ret
icebp
ret
add
add
xor
push
mov
xchg
ret
add
add
aad
cmp
jae
movl
add
pop
push
mov
xchg
ret
add
stos
xlat
out
mov
push
mov
xchg
ret
add
add
jb
clc
repnz
jae
add
ret
fwait
cld
nop
jmp
les
pop
inc
add
mov
push
mov
xchg
ret
movsb
and
inc
sub
repnz
jae
movsb
pop
add
pop
hlt
and
mov
clc
repnz
jae
add
icebp
add
sbb
push
add
pop
fiaddl
xchg
ret
cmp
sbb
and
call
push
mov
xchg
ret
hlt
nop
add
xlat
jle
mov
add
mov
clc
repnz
jae
mov
add
nop
jae
add
cmp
push
add
xor
add
clc
repnz
jae
or
lea
add
jae
lcall
add
nop
xlat
inc
add
add
aas
ret
fwait
cld
nop
jmp
add
lea
add
add
add
add
add
and
add
clc
repnz
jae
hlt
add
add
mov
add
fadds
nop
jmp
inc
add
inc
add
repnz
jae
add
icebp
add
add
arpl
outsb
add
clc
repnz
jae
sbb
add
js
dec
push
fwait
cld
nop
jmp
add
add
add
leave
mov
fwait
cld
nop
jmp
pop
push
mov
movsb
add
jb
rolb
jmp
cmp
repnz
jae
add
hlt
add
add
clc
repnz
jae
div
pop
pop
sbb
mov
adc
repnz
jae
movl
add
clc
repnz
jae
add
and
add
jb
lea
mov
xchg
ret
addl
add
xor
add
clc
repnz
jae
add
shrl
mov
clc
repnz
jae
add
cwtl
push
add
call
clc
repnz
jae
add
add
loope
push
mov
pop
and
cld
nop
jmp
jge
ljmp
xor
cwtl
stos
clc
repnz
jae
pop
add
cmpsb
mov
ret
pop
mov
fwait
cld
nop
jmp
dec
call
push
mov
mov
pop
lcall
dec
mov
jmp
iret
and
add
add
and
add
push
mov
xchg
ret
test
testb
sub
repnz
jae
xor
call
mov
add
clc
repnz
jae
add
out
add
xchg
lock
repnz
jae
add
add
sbb
cs
insb
clc
repnz
jae
add
daa
jl
enter
jae
add
add
push
mov
rclb
cli
nop
and
add
add
xchg
mov
loopne
sbb
repnz
jae
hlt
pop
dec
add
icebp
cmp
add
cltd
je
clc
repnz
jae
add
mov
push
add
dec
push
mov
xchg
ret
ret
add
pop
jnp
nop
jae
lcall
lods
je
fwait
cld
nop
jmp
sbb
mov
add
xor
repnz
jae
add
add
add
add
add
sub
add
add
pop
clc
repnz
jae
and
or
pop
lea
add
cmpl
add
add
sub
add
add
push
add
nop
jae
daa
into
add
add
add
push
clc
repnz
jae
xor
add
stos
mov
clc
repnz
jae
add
mov
mov
jae
add
add
mov
movb
mov
xchg
ret
testb
add
xchg
mov
clc
repnz
jae
ficoml
into
or
add
push
mov
xchg
ret
add
cmp
xlat
push
add
add
jnp
cmpl
ja
add
lea
add
sub
clc
repnz
jae
add
mov
imul
and
add
clc
repnz
jae
add
cmpsb
mov
fwait
cld
nop
jmp
lcall
mov
fwait
cld
nop
jmp
add
add
and
mov
loopne
mov
jg
clc
repnz
jae
into
add
sahf
xchg
add
js
outsb
and
mov
xchg
ret
add
negb
inc
popf
inc
push
mov
xchg
ret
push
add
mov
daa
subl
sbb
add
clc
repnz
jae
add
or
or
add
fwait
cld
nop
jmp
add
add
add
add
add
repnz
jae
ret
add
fwait
cld
nop
jmp
add
add
add
add
mov
cmp
adc
shll
jbe
add
mov
decb
nop
jae
add
sub
inc
and
repnz
jae
pop
add
or
push
add
xchg
clc
repnz
jae
testb
xor
push
push
mov
xchg
ret
add
push
std
shr
clc
repnz
jae
push
add
pop
add
cmp
xor
add
clc
repnz
jae
add
inc
nop
add
add
add
clc
repnz
jae
daa
add
lea
add
fwait
cld
nop
jmp
add
add
call
clc
repnz
jae
add
lcall
push
push
mov
xchg
ret
add
pop
add
into
pop
clc
repnz
jae
add
add
add
add
add
clc
repnz
jae
and
add
and
add
inc
inc
sub
test
add
add
repnz
jae
add
add
push
mov
xchg
ret
and
add
xor
cld
nop
jmp
daa
add
pop
add
jns
push
mov
xchg
ret
add
add
push
clc
repnz
jae
movl
push
fs
add
repnz
jae
add
pop
push
clc
repnz
jae
add
add
out
lcall
repnz
jae
add
add
push
dec
mov
clc
repnz
jae
out
add
je
clc
repnz
jae
add
add
push
mov
xchg
ret
add
sahf
xor
add
cwtl
mov
clc
repnz
jae
into
add
cmp
test
sbb
add
repnz
jae
or
add
add
pop
clc
repnz
jae
daa
add
add
add
dec
imul
addl
cwtl
ljmp
and
add
cmpsb
mov
add
insl
add
cmp
fwait
cld
nop
jmp
add
movl
add
add
fwait
cld
nop
jmp
and
mov
dec
sub
repnz
jae
scas
cmp
and
add
repnz
jae
add
dec
stos
sbb
ret
pop
lea
clc
repnz
jae
cwtl
add
and
into
sub
xor
fwait
cld
nop
jmp
add
movsb
out
out
pop
fwait
cld
nop
jmp
pop
add
add
or
sbb
cs
push
mov
xchg
ret
jge
add
add
add
add
add
push
add
lcall
add
cld
nop
jmp
add
ljmp
lods
push
clc
repnz
jae
add
add
add
or
sar
nop
jae
add
add
mov
add
nop
jae
mov
add
add
int
les
repnz
jae
add
inc
pop
add
and
testl
fwait
cld
nop
jmp
pop
pop
add
xor
add
mov
pop
clc
repnz
jae
inc
mov
add
add
jne
clc
repnz
jae
add
add
sar
nop
jae
dec
mov
ljmp
and
nop
jmp
ss
add
add
adc
repnz
jae
inc
ret
test
mov
sbb
fildl
xchg
ret
movl
add
mov
push
mov
xchg
ret
sbb
pop
rolb
dec
cmp
repnz
jae
pop
lcall
mov
repnz
jae
hlt
cmp
add
ljmp
nop
jae
add
add
jmp
hlt
hlt
pop
push
add
push
add
daa
sahf
ljmp
repnz
jae
add
add
addl
lret
nop
jmp
add
add
add
add
push
pop
clc
repnz
jae
sbb
daa
icebp
xchg
popa
sti
call
clc
repnz
jae
add
nop
lea
clc
repnz
jae
add
add
pop
push
mov
xchg
ret
nop
add
add
in
sub
clc
repnz
jae
jle
div
mov
push
clc
repnz
jae
jle
cmpsb
add
fisttps
nop
jae
add
add
add
add
enter
add
fwait
cld
nop
jmp
or
add
add
loop
fwait
cld
nop
jmp
xlat
add
stos
out
add
nop
jae
add
scas
les
inc
movsb
add
rep
clc
repnz
jae
lcall
add
mov
jmp
hlt
and
les
mov
add
fwait
cld
nop
jmp
add
add
mov
clc
repnz
jae
and
add
dec
mov
clc
repnz
jae
add
add
stos
push
mov
xchg
ret
sahf
lea
sbbl
jae
ss
pop
add
add
add
mov
add
fwait
cld
nop
jmp
addl
dec
add
mov
cmp
ret
and
bound
mov
aam
movb
add
mov
clc
repnz
jae
add
nop
add
add
jbe
cmpsb
add
sub
inc
add
nop
add
add
movsb
clc
repnz
jae
insl
icebp
add
jge
mov
clc
repnz
jae
cmp
mov
add
adc
mov
fwait
cld
nop
jmp
pop
addl
test
repnz
jae
add
mov
scas
addl
div
clc
repnz
jae
add
cmp
mov
inc
jb
xchg
dec
push
clc
repnz
jae
add
pop
or
add
repnz
jae
mov
add
add
and
fwait
cld
nop
jmp
add
addl
mov
clc
repnz
jae
hlt
cmpl
xor
inc
add
add
orl
jge
cmp
nop
jae
add
add
stc
mov
clc
repnz
jae
add
hlt
add
addl
clc
repnz
jae
ret
add
mov
clc
repnz
jae
add
or
push
mov
clc
inc
add
add
popf
jnp
mov
call
clc
repnz
jae
add
add
imul
clc
repnz
jae
subl
mov
xchg
ret
lcall
pushf
xchg
clc
repnz
jae
popl
hlt
add
ret
push
loop
and
rep
clc
repnz
jae
add
add
add
dec
rep
clc
repnz
jae
add
jge
sbb
mov
mov
fwait
cld
nop
jmp
xor
hlt
add
add
add
add
clc
repnz
jae
fs
or
dec
mov
je
clc
repnz
jae
mov
clc
repnz
jae
add
imul
add
lea
sub
repnz
jae
or
push
add
cld
nop
jmp
pop
add
adcl
cld
or
add
fwait
cld
nop
jmp
add
clc
repnz
jae
mov
add
push
sbb
mov
clc
repnz
jae
add
add
test
push
add
clc
repnz
jae
or
pop
push
clc
repnz
jae
adcl
lahf
adc
add
add
add
add
insl
adc
xor
mov
pop
add
clc
repnz
jae
mov
and
add
clc
repnz
jae
add
pop
mov
add
push
push
mov
xchg
ret
inc
mov
add
add
push
push
mov
xchg
ret
and
nop
rcrl
lock
nop
jae
add
mov
imul
clc
repnz
jae
hlt
icebp
call
rolb
rolb
fwait
and
clc
repnz
jae
les
iret
cmp
add
sub
mov
xchg
ret
stos
out
daa
add
sbb
pop
clc
repnz
jae
add
add
repnz
cmc
pusha
add
add
clc
repnz
jae
dec
scas
add
subl
nop
jae
scas
add
add
or
data16
stc
add
clc
repnz
jae
or
add
sbb
lods
push
clc
repnz
jae
les
add
cmpsb
add
out
icebp
lcall
sldt
add
repnz
jae
add
or
and
mov
fwait
cld
nop
jmp
add
dec
hlt
and
jle
add
call
addl
int
inc
adc
repnz
jae
pop
hlt
add
add
add
add
add
ret
add
cmpsl
loope
add
ss
ljmp
fwait
cld
nop
jmp
addl
push
push
mov
xchg
ret
dec
stos
daa
add
sbb
outsl
add
fwait
cld
nop
jmp
add
hlt
add
mov
add
fwait
cld
nop
jmp
test
sbb
and
mov
push
push
mov
xchg
ret
add
add
pop
clc
repnz
jae
les
cmpsb
add
add
cmp
fwait
cld
nop
jmp
mov
add
mov
adc
cmp
ret
call
push
pusha
add
add
mov
clc
repnz
jae
xlat
daa
add
ss
repnz
jae
or
dec
add
add
adc
push
push
mov
xchg
ret
mov
add
nop
add
add
clc
repnz
jae
add
add
jb
inc
add
and
add
adc
xchg
imul
mov
inc
add
lcall
push
fwait
cld
nop
jmp
add
add
into
and
cwtl
add
add
mov
fwait
cld
nop
jmp
add
add
add
stos
xor
add
clc
repnz
jae
add
add
xor
add
das
mov
push
mov
xchg
ret
out
add
movsb
sub
cmpsl
repz
incl
add
add
icebp
stos
push
testb
orl
add
add
mov
insb
mov
clc
repnz
jae
cwtl
add
movl
fwait
cld
nop
jmp
add
xlat
add
sahf
push
pop
pop
mov
clc
repnz
jae
or
add
add
mov
xchg
ret
iret
insl
hlt
pop
or
ficompl
mov
xchg
ret
cwtl
daa
add
add
xchg
addb
dec
mov
add
jmp
iret
xor
clc
repnz
jae
insl
add
daa
flds
fwait
cld
nop
jmp
add
lcall
jo
test
push
dec
push
fwait
cld
nop
jmp
add
and
add
jp
lret
clc
repnz
jae
test
mov
and
mov
cld
push
mov
xchg
ret
ljmp
adc
push
mov
xchg
ret
add
insl
add
nop
jmp
call
lea
add
mov
je
clc
repnz
jae
add
addl
clc
repnz
jae
add
ljmp
mov
mov
clc
repnz
jae
add
mov
fwait
cld
nop
jmp
call
push
sbb
add
fwait
cld
nop
jmp
hlt
xor
les
test
add
inc
add
sub
clc
repnz
jae
hlt
add
negl
nop
jae
mov
insl
add
add
clc
repnz
jae
lea
add
cmp
mov
adc
repnz
jae
sbb
dec
add
add
stos
clc
repnz
jae
fiaddl
add
add
pop
dec
add
push
mov
xchg
ret
add
lea
mov
xchg
ret
icebp
add
iret
add
add
lods
push
mov
xchg
ret
hlt
or
add
inc
add
ret
mov
clc
repnz
jae
mov
add
add
push
mov
xchg
ret
mov
and
cwtl
out
je
fwait
cld
nop
jmp
movsb
add
sbb
repnz
jae
add
add
fs
add
clc
repnz
jae
add
add
add
repz
shr
clc
repnz
jae
daa
add
and
stos
rep
clc
repnz
jae
scas
hlt
add
nop
inc
add
inc
push
mov
xchg
ret
cmp
pop
add
jge
adc
mov
jae
add
add
pop
mov
add
jne
fwait
cld
nop
jmp
or
icebp
add
stos
and
clc
repnz
jae
and
hlt
add
add
div
fwait
cld
nop
jmp
jge
add
cmp
add
aas
clc
repnz
jae
and
add
and
add
nop
jmp
add
and
add
outsl
loopne
repnz
jae
add
sbb
pop
adc
repnz
jae
add
and
in
rolb
push
push
mov
xchg
ret
add
iret
hlt
add
adc
add
add
fwait
cld
nop
jmp
lea
jge
add
push
push
mov
xchg
ret
add
dec
cmpsb
add
lret
push
push
mov
xchg
ret
pop
mov
add
scas
pop
aaa
lea
popa
add
mov
xchg
ret
add
dec
add
clc
repnz
jae
jle
ljmp
insb
rolb
xchg
ret
add
nop
stos
cwtl
sbb
loope
jne
clc
repnz
jae
sbb
dec
test
nop
jae
stos
lea
pusha
push
mov
xchg
ret
dec
add
aam
aam
les
cmc
mov
fwait
cld
nop
jmp
add
ret
add
addb
add
nop
jae
push
add
pop
ljmp
add
or
add
add
hlt
inc
cwtl
or
add
mov
clc
repnz
jae
sahf
mov
iret
insl
sbb
call
clc
repnz
jae
add
ljmp
and
cld
nop
jmp
add
stos
add
ret
inc
clc
repnz
jae
add
ret
lcall
cs
fwait
cld
nop
jmp
add
add
sti
ret
add
add
dec
add
sbb
stos
add
add
push
fwait
cld
nop
jmp
scas
and
and
add
call
clc
repnz
jae
add
add
sub
loop
inc
add
dec
addl
mov
mov
xchg
ret
jle
test
add
rolb
push
clc
repnz
jae
call
add
and
imul
nop
jae
lcall
sbb
cld
nop
jmp
add
push
add
or
jmp
nop
jmp
mov
les
icebp
hlt
hlt
add
adc
out
incl
movsb
scas
cwtl
pop
cmp
popf
xor
clc
repnz
jae
jge
mov
in
adc
cltd
mov
clc
repnz
jae
cmp
dec
cmp
repnz
jae
or
hlt
pop
pop
xor
mov
xchg
ret
add
add
mov
add
ja
fs
repnz
jae
sbb
add
push
mov
xchg
ret
add
sbb
mul
add
rep
clc
repnz
jae
add
les
push
add
push
add
fwait
cld
nop
jmp
and
add
add
push
mov
xchg
ret
add
ljmp
push
clc
repnz
jae
add
push
test
add
repnz
jae
add
add
stos
mov
or
fwait
cld
nop
jmp
add
add
add
push
push
mov
xchg
ret
add
add
addl
add
add
sbb
xor
add
add
add
shr
inc
push
mov
xchg
ret
dec
sbb
sahf
and
add
add
repnz
jae
add
add
and
push
mov
xchg
ret
add
ret
movb
add
xchg
push
add
jmp
sbb
add
add
inc
ret
add
add
cmpb
add
repnz
jae
testb
push
int
fwait
cld
nop
jmp
cmpsb
cwtl
cmp
icebp
add
and
jle
push
mov
xchg
ret
add
ljmp
inc
adc
mov
xchg
ret
mov
xchg
add
push
clc
repnz
jae
or
iret
cwtl
and
scas
enter
jae
lcall
add
add
and
repnz
jae
fidivrl
add
rcrb
pop
add
iret
ret
add
add
sub
ljmp
add
mov
shll
nop
jae
add
or
iret
add
or
push
mov
test
jp
add
shlb
add
mov
clc
repnz
jae
add
lret
fwait
cld
nop
jmp
add
add
in
mov
push
mov
xchg
ret
add
push
int
test
cld
nop
jmp
push
pop
add
lcall
jmp
and
add
clc
repnz
jae
mov
add
add
jl
or
mov
inc
add
sbb
scas
add
lds
repnz
jae
cmpsb
iret
add
inc
pop
mov
fwait
cld
nop
jmp
fiaddl
add
call
movsb
add
cld
nop
jmp
into
cmpsb
pop
pop
mov
lods
push
mov
xchg
ret
or
cmp
add
add
mov
clc
repnz
jae
add
add
lea
clc
repnz
jae
add
add
faddl
repnz
jae
cmp
add
inc
fistl
in
add
add
cmpsb
add
mov
pop
sbb
pop
and
fwait
cld
nop
jmp
nop
add
mov
add
repnz
jae
insl
mov
push
add
mov
and
repnz
jae
lcall
add
sar
repnz
jae
movsb
add
add
mov
repz
cld
nop
jmp
nop
mov
add
stos
pop
add
add
repnz
jae
insl
and
add
mov
clc
repnz
jae
add
add
scas
adc
loope
adc
and
mov
aam
dec
mov
clc
repnz
jae
jge
add
xor
push
mov
xchg
ret
add
add
add
popa
add
cld
nop
jmp
fs
jge
add
add
add
out
call
clc
repnz
jae
add
add
clc
repnz
jae
cmp
add
shrl
push
mov
xchg
ret
add
add
daa
add
pushf
push
clc
repnz
jae
add
add
add
fs
dec
add
clc
repnz
jae
add
sbb
add
inc
pop
push
clc
repnz
jae
add
add
pop
add
xchg
test
jno
mov
clc
repnz
jae
ret
xor
push
clc
repnz
jae
dec
add
add
add
andl
mov
adc
repnz
jae
into
jle
add
push
push
mov
xchg
ret
mov
inc
add
mov
push
mov
xchg
ret
add
test
mov
test
add
repnz
jae
dec
add
add
add
fwait
cld
nop
jmp
cmpsb
add
or
push
add
add
clc
repnz
jae
add
push
inc
add
jne
clc
repnz
jae
add
add
js
repnz
jae
dec
call
popa
add
mov
xchg
ret
add
mov
add
add
or
nop
jae
add
dec
or
jge
add
test
clc
repnz
jae
and
add
push
fwait
cld
nop
jmp
add
add
insl
add
inc
hlt
add
add
sub
in
outsb
adc
xor
cs
add
add
mov
clc
repnz
jae
insl
fs
add
add
add
mov
xchg
ret
add
xor
clc
repnz
jae
hlt
hlt
insl
dec
sbbl
lcall
out
incl
sbb
repnz
jae
pop
idivb
mov
add
out
out
clc
clc
repnz
jae
add
mov
decb
nop
jae
cmp
andl
jno
lock
pop
out
inc
add
dec
add
add
clc
repnz
jae
push
call
lods
mov
clc
repnz
jae
mov
jge
mov
in
add
jg
add
add
out
dec
add
ss
mov
push
mov
xchg
ret
sahf
lcall
add
jo
sti
push
mov
mov
add
rcrb
addr16
mov
xor
clc
repnz
jae
add
xor
subl
push
mov
xchg
ret
movsb
pop
out
dec
push
push
mov
xchg
ret
daa
add
mov
nop
jae
add
add
add
stos
push
push
mov
xchg
ret
mov
pop
nop
dec
cmpl
fwait
cld
nop
jmp
add
add
stos
iret
mov
clc
repnz
jae
add
cli
dec
fwait
cld
nop
jmp
add
cwtl
scas
pop
hlt
add
mov
clc
repnz
jae
add
mov
pop
clc
repnz
jae
add
add
sub
add
add
repnz
jae
add
mov
fwait
cld
nop
jmp
movl
movsb
lahf
xor
clc
repnz
jae
idivb
sbb
add
out
push
push
mov
xchg
ret
dec
hlt
insl
add
addl
cltd
push
push
mov
xchg
ret
add
and
cmp
scas
in
push
clc
repnz
jae
mov
add
lret
mov
clc
repnz
jae
mov
test
add
lea
xor
add
clc
repnz
jae
cmpsb
lcall
gs
inc
add
daa
sbb
add
repnz
jae
inc
add
adc
aam
xor
insl
mov
fwait
cld
nop
jmp
and
add
add
repnz
jae
add
add
add
pop
mull
mov
xchg
ret
add
ret
add
add
add
mov
clc
repnz
jae
mov
lcall
loop
clc
repnz
jae
icebp
icebp
and
dec
push
clc
repnz
jae
nop
add
cmp
add
add
loopne
loope
mov
fwait
cld
nop
jmp
add
or
xor
clc
repnz
jae
insl
inc
xor
add
add
adc
push
mov
xchg
ret
dec
inc
mov
sub
xor
add
fwait
cld
nop
jmp
add
add
add
mov
clc
repnz
jae
and
add
add
nop
jae
mov
icebp
addb
push
clc
repnz
jae
mov
pop
into
outsl
jmp
addl
add
add
fisubl
pop
faddl
nop
jmp
hlt
sbb
add
clc
repnz
jae
movsb
icebp
add
add
cmpl
repz
incl
add
add
addl
sbb
popa
add
repnz
jae
add
add
and
sub
inc
in
add
add
not
add
je
clc
repnz
jae
sbb
add
repnz
jae
add
dec
popa
clc
repnz
jae
ljmp
pop
xchg
add
test
fwait
cld
nop
jmp
add
add
mov
into
add
mov
xor
clc
repnz
jae
pop
add
add
lcall
mov
add
add
into
adc
clc
repnz
jae
lea
jge
loop
cmp
test
add
nop
jae
add
and
lea
cld
nop
jmp
mov
pop
add
arpl
inc
add
add
or
loopne
clc
repnz
jae
add
stos
add
and
sbb
popa
add
mov
xchg
ret
add
or
movsb
fisttpll
jae
add
add
ljmp
jae
ljmp
scas
les
jae
nop
jmp
cwtl
add
and
and
add
call
clc
repnz
jae
fiaddl
fiaddl
clc
repnz
jae
xor
pop
add
mov
call
nop
jmp
add
add
add
clc
repnz
jae
or
add
pushl
push
mov
xchg
ret
add
add
nop
jae
lcall
addl
cld
nop
jmp
xlat
add
dec
popl
lea
out
push
clc
repnz
jae
cwtl
test
add
add
rep
clc
repnz
jae
sbb
add
sbb
add
jg
jbe
clc
repnz
jae
add
and
xor
add
pop
clc
repnz
jae
cmp
add
add
add
and
mov
rclb
in
add
movsb
lcall
clc
add
decl
add
add
mov
push
mov
xchg
ret
add
add
sbb
mov
repnz
jae
mov
iret
call
mov
clc
repnz
jae
add
sbb
dec
and
add
add
mov
aad
sbb
jmp
icebp
add
add
scas
add
popa
clc
repnz
jae
add
iret
int
dec
add
repnz
jae
daa
orl
mov
clc
repnz
jae
mov
mov
sub
clc
repnz
jae
and
and
incl
lea
sbb
hlt
dec
add
ret
mov
nop
jae
add
add
add
jg
movb
mov
xchg
ret
add
add
pop
mov
movsb
add
mov
adc
repnz
jae
iret
mov
add
adc
repnz
mov
test
clc
repnz
jae
add
call
std
clc
repnz
jae
add
add
jg
sbb
repnz
jae
scas
add
add
mov
shl
fwait
cld
nop
jmp
movsb
mov
hlt
sbb
add
repnz
jae
add
add
add
nop
jae
add
ret
add
test
fwait
cld
nop
jmp
hlt
lea
pop
add
inc
cmp
mov
xchg
ret
ljmp
into
push
fwait
cld
nop
jmp
add
xor
stos
out
or
clc
repnz
jae
add
daa
add
add
lret
clc
repnz
jae
add
les
pop
loop
jl
jl
xor
repnz
jae
add
jne
add
mov
xchg
ret
icebp
push
popl
cmp
and
mov
mov
xchg
ret
add
iret
add
sub
clc
repnz
jae
hlt
add
lcall
loop
add
pop
add
testb
mov
xchg
ret
into
add
ret
cmpsb
addb
dec
push
mov
xchg
ret
call
daa
ficompl
xor
fwait
cld
nop
jmp
scas
fisubl
pop
xor
fwait
cld
nop
jmp
mov
pop
daa
add
lods
add
fwait
cld
nop
jmp
add
add
fwait
cld
nop
jmp
or
cmp
and
rorl
rolb
xchg
ret
into
sbb
decl
add
repnz
jae
scas
insl
add
jne
clc
repnz
jae
add
add
repnz
jae
insl
add
add
icebp
sub
mov
xchg
ret
add
add
sahf
and
nop
jae
scas
add
pop
push
push
dec
fwait
cld
nop
jmp
add
cmp
add
add
jne
je
repnz
jae
popl
scas
mov
add
cmp
add
repnz
jae
xorl
lcall
mov
add
mov
mov
cmp
ret
insl
and
add
or
repnz
jae
add
push
lret
clc
repnz
jae
sbb
stos
pop
add
clc
repnz
jae
stos
dec
add
pop
sub
clc
repnz
jae
add
add
push
idiv
lcall
clc
incl
neg
insl
add
repnz
jae
mov
dec
mov
nop
jae
add
add
or
add
fwait
cld
nop
jmp
jge
add
jge
add
mov
repnz
jae
add
add
cmp
add
mov
clc
repnz
jae
test
add
lret
mov
xchg
ret
and
add
add
inc
sub
sub
cmp
ret
add
dec
out
out
push
add
stc
mov
push
mov
xchg
ret
push
into
add
loopne
nop
add
imul
fwait
cld
nop
jmp
dec
add
test
out
pop
fwait
cld
nop
jmp
add
mov
iret
add
jge
or
dec
cmp
cld
nop
jmp
icebp
xor
stc
push
push
mov
xchg
ret
icebp
add
cmp
add
jae
pop
add
mov
repz
repnz
jae
add
add
popa
add
mov
xchg
ret
sbb
sbb
sbb
inc
add
nop
jae
add
repz
repnz
jae
add
add
mov
clc
repnz
jae
fiaddl
daa
insl
sub
mov
inc
add
add
daa
add
add
cld
nop
jmp
add
or
xor
push
mov
xchg
ret
cmp
stc
mov
clc
repnz
jae
push
add
add
add
repnz
jae
add
add
nop
lret
add
push
mov
xchg
ret
add
dec
add
add
add
repnz
jae
add
pop
sbb
add
clc
repnz
jae
add
add
jecxz
mov
clc
repnz
jae
add
daa
lea
clc
repnz
jae
add
add
mov
and
push
mov
xchg
ret
add
add
das
cmpw
fwait
cld
nop
jmp
and
mov
mov
adc
push
push
mov
xchg
ret
add
add
add
add
fwait
cld
nop
jmp
and
add
imul
add
repnz
jae
pop
add
add
mov
repnz
jae
add
ret
mov
add
pop
addr16
in
push
clc
repnz
jae
xor
pop
add
testb
add
cmp
je
js
cld
nop
jmp
add
movsb
add
fisubrl
clc
repnz
jae
add
add
sahf
add
add
adc
and
cmp
clc
repnz
jae
add
add
sar
repnz
jae
jle
jle
add
dec
add
add
repnz
jae
add
or
mov
jmp
hlt
movsb
add
add
test
push
mov
xchg
ret
and
dec
jne
clc
repnz
jae
mov
jge
clc
repnz
jae
push
add
add
add
mov
outsl
fwait
cld
nop
jmp
add
add
clc
clc
repnz
jae
add
sbb
cmp
popl
clc
repnz
jae
add
add
sbb
inc
imull
popa
fwait
cld
nop
jmp
push
sbb
les
call
clc
repnz
jae
push
sbb
cmp
clc
repnz
jae
add
iret
cwtl
loopne
add
mov
clc
repnz
jae
ret
sahf
push
xchg
add
sub
nop
jae
add
jle
add
mov
clc
repnz
jae
fcmovb
les
nop
jae
add
rolb
popf
lea
clc
repnz
jae
or
pop
addl
repnz
jae
scas
add
test
hlt
add
add
clc
repnz
jae
sbbl
nop
jae
add
add
add
daa
lea
nop
jae
or
add
mov
pushl
push
mov
xchg
ret
jle
add
sub
fsubr
inc
add
hlt
jge
movb
mov
repz
repnz
jae
add
add
add
mov
mov
xchg
ret
pop
out
add
add
loopne
insb
pusha
clc
repnz
jae
add
les
rolb
loop
mov
mov
add
sbb
incl
ret
or
cld
nop
jmp
pop
hlt
sbb
add
add
repnz
jae
pop
add
ret
xchg
add
add
jne
clc
repnz
jae
cmpsb
jle
xchg
add
sub
xlat
inc
add
add
clc
repnz
jae
mov
mov
mov
clc
repnz
jae
call
daa
cmp
pop
cmc
incl
mov
add
add
add
add
dec
clc
repnz
jae
add
mov
ret
push
clc
repnz
jae
movl
push
or
push
add
clc
repnz
jae
mov
mov
repnz
jae
add
add
add
mov
push
mov
xchg
ret
add
dec
cmp
repnz
jae
movsb
dec
add
mov
lcall
sbb
add
les
ss
add
hlt
add
clc
repnz
jae
sahf
xor
add
aad
add
push
fwait
cld
nop
jmp
pop
insl
xor
lcall
loope
cld
nop
jmp
fiaddl
add
add
cmp
push
mov
xchg
ret
nop
add
jg
mov
add
incl
add
add
pushf
mov
xor
jne
add
push
xchg
add
scas
lock
mov
rcll
or
jl
add
rolb
jle
add
ret
in
sbb
sbb
add
sbb
add
into
mov
out
add
ds
add
add
sub
dec
xchg
sbb
add
mov
mov
jbe
push
xchg
add
add
jmp
add
add
mov
addr16
pop
add
mov
xor
jnp
add
jmp
and
iret
cmp
test
adc
jge
inc
xchg
add
dec
inc
add
mov
clc
dec
rolb
and
push
add
add
js
add
jo
adc
jmp
pop
icebp
imul
sub
test
call
add
pop
add
xchg
fwait
push
jbe
stos
sbb
aad
add
jmp
add
in
sub
stos
jecxz
jne
xchg
add
cmpsb
add
add
add
or
add
xchg
add
js
add
add
pop
push
add
das
movsb
add
add
add
mov
test
fwait
and
mov
loop
xchg
shll
out
dec
cmp
add
add
add
mov
mov
add
leave
lods
out
loopne
xchg
add
add
add
mov
subl
mov
add
aas
out
les
push
add
add
cmp
add
mov
pop
jno
popf
testb
pop
lea
mov
add
add
add
pop
dec
test
add
xchg
push
jns
add
shrl
add
pusha
add
xor
lods
cmp
or
ja
pop
test
add
cld
fisttps
cwtl
cmpsb
add
add
add
pop
pop
cmpsl
movsb
add
dec
push
jnp
pop
fstl
add
push
inc
xlat
cmpsl
adc
frstor
lds
xor
dec
lock
insb
loopne
rolb
inc
push
add
pop
dec
inc
add
add
or
cmpl
repnz
add
inc
add
add
mov
je
jp
addb
add
jns
add
mov
mov
xor
xor
adc
mov
stos
mov
inc
add
cli
mov
mov
add
add
nop
add
add
gs
insl
pop
cmc
mov
mov
cmp
addb
scas
sti
test
add
mov
pop
xchg
mov
sub
add
rcrl
mov
lods
mov
in
out
mov
add
dec
clc
aam
lahf
daa
jge
add
pop
in
fxch
ja
add
clc
je
rolb
add
add
or
pop
mov
xchg
add
mov
adc
and
mov
or
add
mov
mov
addb
add
mov
jp
add
flds
frstor
in
jo
mov
cld
mov
push
add
add
imul
adc
repnz
mov
adc
mov
add
adc
jp
jbe
pop
and
mov
add
add
add
mov
add
inc
add
add
lcall
add
int
fucomi
add
cld
mov
push
add
mov
xchg
add
dec
jl
xchg
add
add
hlt
add
add
jno
add
mov
jge
sbb
jg
mov
js
xchg
pop
rolb
imul
jge
add
scas
push
cmp
mov
add
add
cmp
test
push
adc
cmpsl
xor
add
int3
sub
add
add
rolb
inc
add
add
icebp
or
add
mov
into
lret
xor
dec
adc
pop
daa
daa
pusha
add
cld
call
add
gs
pushf
add
mov
aaa
xor
dec
xchg
add
mov
pop
jb
jns
add
mov
dec
xchg
out
jbe
and
mov
dec
push
add
inc
add
add
inc
xchg
rolb
sbb
jae
out
addb
fdivs
roll
add
add
int3
inc
add
pusha
add
or
mov
bound
mov
scas
and
mov
imul
add
addl
ja
add
bound
mov
xchg
movsb
add
add
push
mov
mov
cwtl
sbb
dec
and
mov
xor
int3
cmp
xchg
jno
repnz
int
lret
push
add
ja
mov
jns
add
and
push
mov
es
test
sbb
dec
mov
lock
push
add
add
rolb
sbb
dec
mov
lds
gs
add
add
and
shr
jmp
jbe
out
fiadds
add
out
dec
rolb
mov
add
movsl
push
cld
inc
inc
ret
mov
add
add
leave
sbb
fidivs
mov
pop
sub
add
lds
movb
and
mov
add
aam
dec
loopne
movb
icebp
jbe
sub
mov
popa
ljmp
add
add
in
xor
dec
in
subl
inc
add
add
sub
push
add
fwait
and
add
addr16
add
inc
add
add
push
int3
leave
and
jmp
cld
mov
add
ret
dec
imul
cwtl
inc
pop
push
jns
decb
dec
testb
add
imul
mov
pop
push
add
pop
das
add
pop
mov
scas
je
lods
add
add
das
addb
add
sbb
add
pop
outsb
cltd
inc
jne
add
add
push
add
or
ret
add
mov
aas
pop
test
xchg
addb
rolb
add
add
fidivl
sub
adc
add
adc
add
add
andps
or
mov
add
sti
xor
fstl
std
mov
add
rolb
test
loop
sub
bound
mov
imul
lock
add
add
cli
xchg
insl
dec
movsb
add
mov
and
and
das
mov
cmp
sbb
movsl
popa
gs
lock
add
mov
add
rorl
add
mov
adc
popa
jbe
push
sti
jne
in
add
sbb
push
add
add
mov
ja
add
daa
xor
das
mov
rolb
in
mov
cmpsb
add
phaddsw
mov
jae
add
cs
inc
movsl
daa
sbb
jnp
adc
xchg
jne
movb
dec
in
push
dec
xchg
cld
out
rolb
outsb
sub
mov
jp
mov
imul
add
stc
out
sbb
xor
call
mov
data16
scas
pusha
add
adc
add
lods
add
add
repnz
cmp
scas
xchg
push
fnop
add
add
push
ret
add
jge
add
cmp
add
dec
pop
out
cltd
loope
add
mov
pop
imul
mov
shll
std
jg
test
pusha
add
icebp
shrl
rolb
sbb
jmp
data16
rolb
push
aas
mov
xor
mov
add
rolb
add
add
add
out
jecxz
xlat
jp
add
out
add
mov
rep
stos
inc
add
add
ds
repnz
lcall
inc
adc
mov
jle
add
sub
fisttpl
add
cmp
repnz
add
add
dec
data16
test
negl
add
dec
xor
adc
sub
add
jns
outsl
xlat
pushf
add
and
insb
outsb
push
add
add
adc
fldenv
pusha
add
xlat
movsb
add
add
and
mov
scas
scas
pusha
add
cwtl
jnp
stos
ljmp
add
add
std
repz
push
push
das
pusha
add
fdivl
add
mov
add
push
jmp
pop
jle
add
rolb
mov
mov
add
ret
popf
mov
lret
ja
and
mov
add
jle
jno
iret
add
mov
sti
jno
in
ret
cltd
scas
adc
loopne
adc
add
lds
ds
pop
js
inc
add
and
lea
loopne
and
mov
imul
rolb
add
mov
out
rcll
rolb
jnp
clc
rolb
mov
xor
aaa
daa
jg
lret
leave
mov
xchg
mov
fwait
push
add
add
add
add
fisubrl
push
mov
xor
add
fwait
jb
jl
or
movb
add
add
sub
inc
add
adc
rcrl
inc
add
aam
aas
sahf
sub
mov
scas
cli
jno
mull
jge
xchg
add
insb
fistpll
mov
inc
popf
and
mov
ficomps
sub
fcoml
add
mov
add
cli
hlt
add
add
add
add
lea
add
mov
mov
add
and
mov
mov
into
mov
imul
add
loop
rolb
xchg
pop
mov
add
dec
sar
and
mov
nop
add
add
xor
aaa
ss
ss
ret
add
leave
mov
mov
add
bound
mov
add
and
push
test
inc
add
mov
test
nop
add
add
add
add
ja
xchg
cmp
add
mov
mov
test
add
add
add
dec
repz
push
add
xor
add
add
pop
dec
pop
test
rcll
in
mov
add
test
sbb
test
ret
add
pop
scas
data16
add
jcxz
xor
mov
add
es
sbb
popa
and
mov
subl
mov
test
fsubl
mov
aas
or
xor
int
add
fwait
mov
sub
jb
push
stc
cmc
movsb
add
pop
mov
and
mov
popf
out
jmp
add
rolb
nop
add
pop
cmpsl
aad
mov
jnp,pt
add
inc
jp
repz
ljmp
inc
add
data16
add
sbb
add
mov
or
cmpsl
and
mov
das
lcall
popa
mov
push
and
mov
fcmovnb
add
add
sub
add
or
iret
testb
or
add
add
fmuls
lods
inc
sub
pop
jo
cmc
icebp
cld
or
add
je
adc
add
icebp
sbb
test
movsb
add
rcl
add
pop
dec
pop
or
mov
mov
stc
jo
jp
dec
adc
jb
jbe
sub
add
mov
mov
pop
xchg
rcll
scas
jb
stos
cmp
add
std
mov
enter
lods
sbb
add
sarl
addr16
cmp
ds
cli
vmovq
cmp
push
pop
mov
ret
or
cmp
add
add
les
mov
pop
stos
mov
add
outsl
xor
sbb
cwtl
push
ds
loop
fidivrs
add
mov
sub
add
mov
pop
mov
test
add
add
nop
add
addb
stc
and
mov
push
jb
jo
fs
jle
in
xor
int
mov
add
jns
rolb
jbe
popf
pop
sti
inc
add
and
add
outsb
cli
mov
add
add
mov
push
add
add
jp
pop
lret
mov
add
sti
rolb
cmp
aad
loope
add
rolb
push
pusha
add
in
add
push
arpl
add
add
add
addb
xchg
xchg
and
lahf
fcomps
add
xor
sbb
fimull
add
add
add
add
jp
gs
add
push
outsl
data16
jecxz
add
aaa
sbb
add
outsb
pop
or
cmp
adc
imul
int
add
and
mov
jg
mov
lds
sub
add
add
add
add
inc
add
pop
lods
cmp
add
sub
add
test
adc
scas
gs
mov
mov
ds
inc
add
pop
test
mov
mov
and
sti
xchg
mov
mov
mov
add
jp
jge
and
mov
dec
fneni(8087
add
add
xchg
add
add
rolb
roll
cmc
pop
add
mov
inc
add
jno
and
mov
add
fcoml
leave
lea
test
loop
xor
xor
sub
fs
mov
fs
add
add
push
add
jnp
add
jno
bound
mov
xor
xchg
out
add
and
add
add
dec
mov
add
add
add
mov
sahf
sti
sti
or
mov
mov
inc
add
mov
lods
lret
cmpxchg
out
pop
jge
add
jns
movsb
add
or
dec
mov
cmp
add
xchg
add
inc
add
mov
pop
lods
into
insb
inc
sbb
addr16
or
dec
andl
add
push
outsl
hlt
add
push
mov
add
mov
jne
and
add
rolb
in
mov
addb
je
jbe
inc
add
dec
cmpsb
add
enter
add
addb
push
cmp
popa
mov
enter
scas
outsb
cs
mov
cmpl
ffree
add
adc
add
gs
jbe
add
cmp
and
mov
add
push
add
add
fsubp
add
jno
mov
insb
jle
js
adc
xchg
and
mov
add
pop
inc
xchg
add
fcmovnb
add
out
incl
pusha
add
jns
cmp
or
add
push
add
in
movsl
test
inc
add
add
push
add
out
push
aaa
jmp
aam
pop
fbld
ret
sub
adc
lods
or
mov
or
push
add
cmp
add
adc
lahf
jo
jnp
out
sti
xchg
add
add
sub
pop
xchg
add
cld
mov
add
pop
add
push
out
mov
mov
imul
add
add
rolb
mov
addb
add
add
mov
in
out
cmp
add
outsl
xchg
add
push
add
add
sub
inc
add
add
jl
inc
mov
movsb
add
mov
add
sbb
sub
dec
xchg
xchg
add
add
add
add
add
and
sub
add
jbe
adc
cmpl
mov
add
cmp
adc
add
push
sti
fmuls
add
loope
xor
add
add
sbb
arpl
add
add
nop
add
std
cmp
add
cmp
jbe
pop
mov
icebp
mov
push
add
fsubrl
add
fdivrs
or
sbb
popl
add
add
xchg
je
jge
fsubl
jmp
or
icebp
rolb
xchg
mov
or
add
sub
add
add
jae
add
nop
add
add
mov
mov
add
mov
add
popf
mov
add
add
adc
sub
fistps
jae
pop
hlt
add
cmp
sub
adc
pushf
mov
mov
inc
add
add
mov
mov
push
add
rcrl
add
add
add
add
add
mov
adc
stc
inc
lret
dec
jno
add
add
xchg
add
iret
ljmp
and
loop
jno
xchg
mov
add
and
mov
add
lea
add
ja
add
lcall
xchg
add
mov
mov
ds
add
jbe
inc
add
mov
pusha
add
cmpsl
sub
mov
xor
cmp
cmpsb
add
enter
addb
add
mov
dec
adcl
pusha
add
rolb
movb
insl
pop
stos
icebp
inc
pop
out
mov
mov
ja
inc
add
mov
and
hlt
add
add
sahf
push
add
xchg
add
and
xchg
cwtl
push
add
inc
add
mov
add
add
movsb
add
pop
aaa
setns
inc
cli
inc
add
cmpsl
call
adc
add
das
test
addr16
sbb
loope
xlat
lcall
mov
mov
add
jmp
popf
dec
jnp
sub
adc
sbb
add
add
aam
adc
les
test
pop
cmp
lods
mov
sub
add
cmp
negl
add
mov
scas
stos
push
mov
push
add
push
lods
mov
out
lret
adc
lahf
pop
or
cmp
mov
add
mov
push
sar
add
test
movb
pop
cmc
movb
sti
cltd
mov
call
xchg
add
and
enter
mov
add
fstpt
sub
testb
add
cwtl
jo,pn
lods
pop
add
in
int3
test
enter
lcall
cmp
lcall
pop
dec
pop
std
in
mov
add
inc
add
and
mov
add
inc
add
fisubrl
or
or
rolb
fldl
add
add
mov
loopw
test
add
mov
addb
ja
add
add
add
adc
dec
repnz
sbb
xchg
rolb
daa
dec
pop
mov
and
push
add
je
push
or
add
add
jle
add
adc
fsubl
add
add
jb
pop
je
inc
add
sbb
add
push
add
mov
je
rolb
sarl
push
cmovs
adcl
mov
pop
loop
jno
jbe
mov
dec
push
add
add
int
xor
push
adc
jnp
add
jbe
sti
out
xor
mov
add
mov
pop
push
add
jnp
add
loop
push
in
shrl
int3
js
add
add
mov
cmp
ficompl
add
pusha
add
and
mov
add
cld
rolb
add
add
dec
cs
cli
mov
je
fucomip
and
add
insl
xor
jo
xor
repnz
sti
lock
dec
jl
dec
imul
cmc
scas
shll
fisttpl
sub
sahf
push
add
or
mov
cmc
mov
mov
or
int3
mov
dec
nop
add
testb
les
mov
add
std
add
mov
in
jmp
mov
lcall
addb
lods
mov
movsl
movsb
add
ljmp
scas
add
leave
mov
mov
mov
in
dec
stos
int3
ljmp
pop
inc
add
add
pop
repz
add
add
or
dec
lret
popl
push
add
add
shrl
and
scas
sbbl
fstps
adcl
mov
aam
aaa
inc
pop
adc
imul
push
repnz
and
lahf
and
mov
add
jo
out
jae
add
adc
xchg
pusha
add
mov
add
adc
add
mov
lret
add
out
sbb
mov
add
push
add
dec
pop
pop
mov
jb
pop
sub
lea
pop
out
movb
sub
out
add
push
add
add
outsl
je
dec
cmp
add
and
jnp
addb
add
add
jbe
mov
add
add
mov
mov
jecxz
ret
jbe
mov
add
add
add
cmp
std
push
add
lds
addr16
out
inc
scas
cmp
scas
or
mov
dec
xor
iret
push
pop
fneni(8087
add
mov
or
push
add
push
loope
std
dec
daa
movsb
add
add
add
push
add
test
xor
data16
dec
and
mov
add
jae
mov
cltd
shll
daa
out
outsb
xchg
mov
xchg
add
add
stos
cltd
ja
push
add
add
or
jecxz
add
in
add
cmc
push
jo
jg
sbb
lahf
xrstors
push
add
mov
cltd
loope
sti
jne
add
fistpll
add
mov
mov
add
in
mov
and
push
movb
pop
push
aaa
or
add
push
mov
add
loopne
jl
stc
pusha
add
add
ljmp
inc
add
add
add
test
scas
out
push
add
mov
push
add
cmc
stos
xor
cmc
sbb
cmove
cs
add
add
sub
mov
cmpsb
add
hlt
add
add
bound
mov
cltd
in
arpl
mov
adc
xchg
add
add
dec
aaa
jge
gs
dec
push
add
cmp
adc
lahf
jge
jo
out
test
in
jns
add
mov
pop
jno
adc
ret
mov
xor
test
or
popf
daa
sti
pushf
fsubs
add
leave
xor
dec
sahf
lcall
jp
lods
in
pop
adc
lret
add
aaa
push
imul
jmp
or
xchg
mov
std
and
sti
repnz
cmpsb
add
fcoms
adc
cmpsb
add
or
mov
and
dec
cmc
cld
jmp
xchg
mov
add
xchg
sbb
add
gs
sbb
add
sti
leave
in
inc
add
cmp
icebp
xchg
and
mov
adc
push
add
add
add
add
add
mov
add
add
into
daa
icebp
lea
scas
ja
addb
push
add
cmpsb
add
adc
xor
add
mov
les
push
add
aad
sbb
and
bound
mov
sahf
leave
test
jns
mov
jp
add
jne
add
jo
scas
std
cli
mov
pop
lods
sti
xchg
xor
in
pushf
pop
int
add
add
add
and
dec
fsubrl
add
add
lret
add
testl
mov
add
cmp
cmp
mov
ret
aaa
rolb
hlt
add
bound
mov
cmp
fdivs
and
add
add
add
in
cwtl
xchg
mull
enter
add
dec
add
add
rcrl
add
dec
in
lds
add
add
dec
dec
cmpsl
xor
rorl
imul
and
add
in
jnp
xchg
adc
mov
rcr
loop
pop
add
sub
mov
ret
popa
les
rcll
loope
add
sbb
sbb
mov
lret
int
cmp
add
add
add
std
cmp
push
lods
jns
add
mov
add
add
adc
test
sbb
add
fdivrp
inc
add
lret
jae
pusha
add
sbb
out
jmp
pop
pushf
lock
jns
add
fldl
mov
mov
jecxz
and
mov
in
out
sbb
add
ret
add
or
idivl
cld
jge
pop
jns
sub
add
sbb
add
test
out
mov
xchg
add
add
imul
jg
clc
out
call
jbe
rolb
jnp
ret
or
jmp
rolb
adc
inc
add
icebp
sub
add
and
lods
mov
repz
outsb
cwtl
addb
add
add
add
popf
fcomi
mov
push
add
add
addb
add
add
add
add
add
fisubrl
add
call
xchg
add
rolb
dec
testb
jbe
push
add
adc
popa
pop
pop
mov
cmp
lds
mov
xor
stc
int3
lcall
pop
push
add
mov
outsb
icebp
add
mov
ljmp
ffreep
mov
xchg
add
add
stos
test
hlt
add
add
scas
ret
or
lock
out
mov
xchg
mov
add
add
jno
mov
mov
adc
aad
pop
sbb
stos
scas
mov
popa
and
add
add
xor
and
mov
and
mov
test
mov
imul
cmp
add
movsb
add
add
add
add
lods
ljmp
pop
push
test
add
mov
imul
add
xor
addb
add
mov
add
shrl
sahf
fsubr
test
jae
sbb
fucom
dec
cmc
dec
inc
push
add
add
add
sbb
rolb
lret
insl
push
mov
and
iret
lahf
add
add
add
jb
rolb
je
jge
jl
pop
jle
pop
fsub
add
add
mov
add
sti
mov
inc
add
add
mov
popf
dec
jb
test
add
add
clc
inc
fwait
inc
hlt
add
add
xchg
or
lds
jne
movb
add
mov
add
ljmp
icebp
sbb
das
pop
jle
or
add
ret
aas
nop
add
add
or
test
movsl
adc
inc
pop
add
add
movb
lods
mov
ret
test
mov
cmpsb
add
push
les
jmp
outsl
xlat
cwtl
mov
dec
xor
or
add
pop
leave
sub
repnz
dec
xor
sbb
add
test
jmp
cwtl
out
data16
add
inc
or
pop
inc
add
add
dec
cmc
xor
testb
sub
call
mov
aam
xor
or
insb
icebp
inc
je
dec
sbb
stc
mov
add
xor
xchg
add
sti
or
add
mov
pop
jno
inc
cmc
jbe
jb
jae
adc
push
add
popa
adc
imul
mov
add
ljmp
movsl
pop
lds
dec
jbe
cmp
jecxz
xlat
add
add
jp
leave
sbb
les
or
add
add
push
add
push
add
aas
and
mov
xchg
add
popa
lahf
imul
mov
imul
mov
add
mov
sub
push
add
xor
outsb
sahf
mov
add
and
add
rolb
push
repz
mov
cwtl
test
xor
mov
add
push
add
push
add
call
add
pop
pop
sub
int3
testb
add
xchg
ja
mov
add
ret
fcmovnu
mov
je
pop
je
or
add
fstpl
leave
pop
or
dec
repz
hlt
add
movsl
cmc
ss
sbb
add
inc
add
movb
add
std
outsl
ret
mov
fisubrs
add
outsl
push
push
jg
shll
ljmp
sbb
add
subl
lret
mov
lods
in
cmp
in
je
cmpsb
add
add
jno
adc
jo
and
mov
popl
add
arpl
jne
add
cwtl
ljmp
insb
sbb
cltd
das
inc
add
mov
inc
dec
pop
iret
mov
lea
sti
adc
cmp
add
pop
push
add
dec
adc
mov
ret
add
das
and
add
push
add
add
add
inc
add
mov
xor
mov
add
add
repnz
add
add
pusha
add
imul
dec
pop
leave
sahf
addb
rolb
jno
add
mov
jne
cli
xchg
rolb
jge
mov
iret
inc
add
out
pop
mov
rolb
testl
add
or
add
stos
scas
je
pop
sbb
and
mov
or
add
push
add
add
adc
dec
jecxz
push
add
jns
jle
xor
repnz
rolb
out
add
cwtl
addb
add
pop
jmp
xchg
ja
ljmp
add
adc
add
pop
sahf
scas
cwtl
cmp
cmp
sub
push
add
fildll
mov
lsl
movb
shl
push
add
inc
jae
add
add
rol
add
in
testb
sbb
add
lea
inc
add
mov
add
lock
jb
xchg
add
sub
add
push
cmp
add
add
add
mov
add
jge
int3
cwtl
add
add
fildll
add
add
sbb
mov
add
mov
add
repz
sub
and
jmp
xorl
jge
mov
add
fistl
add
das
fdivl
or
xor
adc
push
add
shr
enter
mov
ret
dec
lock
test
adc
add
roll
repz
sub
mov
push
add
cmpsb
add
aam
push
add
push
and
mov
add
mov
enter
push
xchg
pop
insl
popa
xchg
testb
inc
add
add
lods
mov
mov
leave
xor
xchg
add
lret
loope
add
out
push
pop
or
push
add
stos
es
jg
add
and
mov
dec
xchg
add
add
mov
add
aad
add
jg
dec
loopne
addr16
test
dec
sbb
mov
fidivrs
add
lea
sbb
movsl
jecxz
or
add
bound
mov
add
mov
mov
insb
outsb
iret
lret
pop
jle
jge
add
pop
or
clc
xchg
repz
add
sahf
pop
popa
adc
mov
xchg
sbb
xor
jmp
xchg
stc
dec
lret
xor
push
add
outsl
mov
mov
sbb
add
int3
adc
dec
xchg
jmp
push
add
repz
xor
xor
inc
add
jae
fmuls
pop
push
jbe
and
mov
mov
sti
and
and
jmp
adc
sbb
in
add
jnp
adc
mov
xchg
imul
add
or
loop
xor
aam
in
cli
in
std
cmpsl
hlt
add
js
fidivrl
jae
add
add
mov
push
add
add
cmp
out
rolb
lods
push
arpl
mov
add
dec
fwait
test
add
pop
mov
in
in
jbe
jl
add
push
add
in
ljmp
pushf
fwait
lea
mov
insb
push
add
outsb
xor
dec
push
mov
add
add
jg
add
rolb
mov
sbb
pop
xor
insl
adc
imul
add
sarl
arpl
outsl
adc
dec
insl
mov
or
add
jns
add
push
sub
inc
add
iret
outsl
fnstcw
push
add
insb
into
xchg
mov
lods
cmp
dec
ficoml
adc
cmp
or
gs
add
add
aas
dec
lds
in
push
pop
xor
pop
mov
mov
out
in
add
xlat
cmpsb
add
xchg
ja
jae
enter
mov
outsb
movb
pop
out
lcall
add
sub
add
add
add
add
out
xor
sub
jle
out
jbe,pt
and
mov
je
hlt
add
add
mov
in
lahf
push
std
inc
add
mov
add
dec
jge
jo
add
jae
add
add
and
leave
inc
add
outsb
adc
mov
sub
je
inc
sbb
mov
mov
lods
test
push
imul
xlat
int3
jo
fs
add
mov
lret
lds
inc
add
pop
andl
xchg
das
int
xor
add
outsb
mov
xchg
add
dec
lret
add
add
out
data16
enter
sbb
cwtl
test
dec
mov
add
mov
addr16
push
adc
out
jne
add
scas
pop
fstps
rolb
fwait
pop
add
mov
dec
sub
dec
cltd
fnstenv
loopne
push
rolb
add
mov
mov
adc
mov
add
rolb
jecxz
lods
icebp
mov
movsb
add
mov
or
fld
inc
add
mov
cmpsb
add
push
xchg
push
rolb
jg
and
mov
add
cltd
lds
repz
filds
add
mov
stos
or
xchg
inc
add
dec
push
test
mov
sub
and
xor
out
cmc
push
add
pop
sbb
js
push
add
jae
push
sbb
add
addb
stc
test
mov
dec
cmp
lds
into
and
add
cmc
out
add
mov
stc
or
rolb
add
or
addr16
aas
mov
add
rolb
lods
fwait
loopne
sbb
cmp
push
sbb
scas
rolb
add
dec
lcall
mov
jmp
add
lret
inc
push
add
and
nop
add
scas
or
int
add
arpl
pop
cmpsb
add
add
test
movsb
add
add
lods
sub
rcl
push
add
xchg
movb
add
in
nop
add
add
popf
cmc
adc
movsb
add
lret
cmpsl
aad
or
mov
add
scas
mov
add
mov
pop
jmp
inc
add
add
adc
and
and
add
jns
fldl
mov
add
add
add
add
add
lret
jo
pushf
mov
test
stos
add
fldenv
inc
add
mov
xchg
jle
add
sbb
cs
mov
xchg
sbb
nop
add
fdivl
add
add
inc
xchg
xor
aam
inc
jns
ud0
add
adc
add
leave
add
mov
pop
xlat
push
decb
jmp
add
add
add
shll
cmp
add
add
fadds
call
xchg
dec
in
or
ja
add
movsb
add
xlat
sbb
in
push
dec
movb
sub
clts
add
addb
repz
call
mov
pop
mov
and
mov
xchg
rolb
rolb
xchg
mov
ss
dec
pop
xchg
movsb
add
add
lds
pop
cld
mov
push
pop
push
add
cld
or
add
ja
loope
mov
xor
loop
or
pop
xlat
shrl
fstpl
add
cmp
addb
xchg
add
add
xchg
add
mov
add
add
push
inc
add
mov
test
add
jb
fidivrl
cmp
or
mov
xchg
call
cmpsb
add
aam
hlt
add
or
jnp
jg
addb
add
imul
rolb
dec
enter
add
add
inc
mov
es
add
jg
repz
xor
lock
add
lahf
jge
add
insb
push
pop
mov
cmp
pop
ret
test
xchg
aaa
push
push
add
imul
pusha
add
sti
insb
jp
call
je
push
add
sbb
add
inc
lea
add
push
add
movsb
add
xchg
repz
lods
push
add
clc
mov
popf
adc
int3
cmp
adc
push
add
xchg
add
jns
cwtl
inc
add
jno
add
mov
clc
inc
add
sub
inc
out
jne
jb
lahf
aad
add
add
add
add
add
mov
add
fldenv
inc
add
push
add
jecxz
pop
sti
jmp
add
sbb
cmp
pop
enter
add
aad
add
xor
stos
push
mov
sbb
iret
jge
imul
scas
mov
jae
insl
pop
test
or
sub
jo
sarl
test
mov
aas
imul
and
mov
mov
scas
xor
and
mov
jge
sub
push
pop
mov
mov
cmp
add
add
add
int
or
push
sahf
push
aam
sti
push
std
fwait
fwait
repnz
jle
adc
add
cmpsl
xchg
cmp
hlt
add
dec
push
mov
out
dec
pop
add
mov
roll
std
cld
lahf
data16
add
rolb
sbb
xor
jbe
fprem1
fsubrp
sti
pop
mov
and
add
fcompl
faddl
sub
add
stos
lea
add
mov
add
mov
repnz
repnz
add
movb
subl
inc
add
sahf
into
and
or
lret
add
fsts
or
sbb
xor
xchg
aad
xlat
fisubrs
dec
cwtl
pushf
xor
add
add
xor
fimull
adc
add
mov
pushf
cmp
jp
popa
mov
mov
pop
mov
enter
push
or
jb
inc
add
add
add
pop
jmp
in
mov
in
sbb
test
add
and
mov
loope
bound
mov
ret
push
jnp
movb
lret
push
popf
lea
cmp
mov
into
cwtl
pop
or
push
add
dec
and
bound
mov
pop
mov
jl
popa
movb
cmp
nop
add
add
pusha
add
addr16
add
in
rolb
add
lods
and
xor
add
sub
add
add
or
mov
add
aad
dec
sbb
add
lret
add
xor
add
pushf
jno
cmp
mov
mov
ja
mov
jne
test
push
add
mov
add
mov
xchg
push
add
add
add
ds
pop
sbb
testb
pop
imul
mov
outsb
fbstp
jle
or
mov
les
arpl
mov
sbb
pop
rolb
cld
movsl
adcl
imul
loope
add
add
out
add
xor
sarl
call
adc
aam
mov
add
add
dec
jmp
xchg
es
rolb
movsb
add
lea
push
cmpsl
push
lret
imul
cmp
cmp
outsl
mov
test
add
mov
add
mov
add
hlt
add
add
and
mov
test
inc
add
inc
xor
subl
add
add
fisttpll
inc
add
xor
ds
daa
jnp
add
out
pop
add
add
add
mov
outsl
insl
sbb
and
mov
xchg
add
rolb
addr16
mov
mov
sub
add
fdivrp
add
insl
nop
add
add
lcall
and
mov
lea
jbe
sbb
xor
pop
xor
pop
rolb
dec
sbb
fcomip
add
hlt
add
add
add
incb
push
clc
push
mov
add
add
sub
fisttpll
jae
cmp
add
push
add
ret
js
adcl
sbb
or
daa
mov
in
mov
xor
loope
pop
in
pop
push
test
add
jns
xor
mov
push
add
jo
jge
add
push
int3
mov
dec
adc
leave
popf
aas
dec
mov
add
mov
and
mov
jbe
out
cmp
cmp
mov
mov
or
daa
xchg
add
leave
ljmp
mov
in
mov
add
push
add
lret
cmp
and
mov
inc
rcrl
cmpsb
add
mov
add
dec
stos
push
add
add
add
loop
cmpsb
add
add
sbb
cmp
sub
and
xchg
fsubr
sbb
push
add
push
into
add
add
add
xlat
jne
enter
enter
aam
out
inc
fmuls
add
out
mov
mov
or
mov
fnstcw
leave
or
fimuls
out
cmpsl
loopne
jge
sti
xor
mov
cmp
inc
mov
in
popf
sbb
mov
lds
add
inc
add
data16
add
mov
add
cmp
test
add
stos
sub
add
pop
mov
add
mov
fdivs
repz
dec
sub
mov
adc
mov
insl
or
add
mov
add
add
xchg
add
add
add
lahf
data16
test
fisubl
add
add
popf
xlat
repnz
mov
add
mov
dec
jge
stos
adc
mov
add
movb
mov
add
add
ret
add
test
mov
mov
out
test
add
testb
sub
ja
jno
in
arpl
pusha
add
and
mov
add
rolb
jle
push
ds
mov
add
add
add
jp
mov
call
jnp
push
cmc
std
mov
cmp
addb
add
add
and
in
xchg
movb
and
mov
data16
aaa
add
cmovno
int3
mov
xor
les
inc
jo
and
adc
inc
jnp
out
pop
cmp
push
add
add
enter
mov
inc
lods
inc
add
into
push
add
dec
dec
icebp
mov
loope
cmpsb
add
and
mov
mov
dec
addb
add
outsb
inc
add
add
cmp
jmp
push
mov
les
push
dec
sub
mov
jge
add
pushl
out
loope
add
lret
cwtl
xchg
add
and
mov
add
mov
pusha
add
lock
lds
add
loopne
pop
insl
imul
hlt
add
add
push
push
add
inc
add
les
or
lcall
jp
cmp
rolb
add
jl
push
jbe
cld
lret
mov
lret
mov
into
mov
mov
ret
add
adc
mov
mull
into
nop
add
add
add
jp
push
xor
add
mov
add
cmc
push
test
aas
inc
add
pushf
xchg
rolb
mov
add
add
xchg
clc
mov
pusha
add
movsb
add
mov
lcall
add
cmp
bound
mov
pop
xchg
or
add
push
add
sub
leave
xor
add
add
add
mov
adc
or
aad
add
cli
enter
add
sub
xchg
add
in
add
push
or
add
scas
pop
pop
insb
push
push
add
mov
mov
add
add
inc
add
scas
pop
inc
sbb
je
inc
sub
mov
jecxz
xlat
sahf
dec
mov
add
testb
addr16
cltd
rsqrtps
push
add
add
push
out
insb
inc
in
add
adc
push
add
add
bound
mov
mov
fstl
jmp
bound
mov
add
cwtl
and
mov
cltd
popf
add
lds
add
add
jecxz
jle
sub
sarl
idiv
aam
das
cli
cs
aam
mov
and
mov
adc
ds
push
out
out
hlt
add
jne
pop
mov
cmp
testl
add
mov
pop
xor
dec
mov
addb
add
jle
aad
pop
add
add
lahf
mov
mov
mov
scas
push
add
add
lret
cmp
dec
sub
fidivrl
sahf
sbb
pop
jbe
dec
jecxz
add
mov
add
ds
add
out
jbe
bound
mov
push
mov
push
and
out
outsb
mov
add
add
add
daa
sahf
mov
sbb
mov
or
add
add
loop
in
dec
imul
div
add
std
movsl
push
add
pop
fcompl
popl
mov
mov
inc
rorl
ljmp
sub
out
call
xor
add
pop
gs
add
add
mov
add
lock
in
shrl
repnz
rcll
orl
ret
add
gs
mov
addb
or
add
add
call
sti
xchg
xor
movsl
ja
popf
sbb
adc
lods
adc
aam
inc
add
lcall
mov
popa
addb
pop
jmp
icebp
adc
fstl
add
cmp
mov
cmc
cmp
sub
lds
xor
add
add
mov
mov
add
sbb
add
add
test
add
mov
lods
pop
sbb
add
ds
mov
sbb
sahf
push
hlt
add
add
fcomp
cli
mov
add
and
jno
cmp
rolb
lcall
insb
and
mov
xor
cmp
and
int
sbb
repz
inc
mov
fidivrl
fsubrs
xor
adc
sub
call
add
call
adc
dec
push
arpl
pop
sbb
add
mov
into
jno
repz
add
pop
cld
insl
imul
mov
cmpsb
add
mov
add
mov
lods
mov
clc
ffreep
in
ja
add
add
add
ficoml
stc
adc
xor
ljmp
adc
add
xor
adc
add
mov
add
mov
mov
xchg
sub
mov
sub
add
aad
or
and
mov
add
and
mov
adc
lret
mov
bound
mov
add
add
lock
int3
stos
outsb
mov
pop
jne
dec
jg
jo
insb
fwait
lds
je
enter
repz
sbb
rcr
fiaddl
or
aad
movsb
add
pop
cmc
jbe
subl
adc
scas
sarl
and
fwait
cmp
xor
xchg
add
mov
pop
fldt
xchg
add
pop
push
add
lea
add
lods
cmp
rcrl
mov
and
mov
jp
add
popa
test
iret
pop
push
imull
loope
push
fwait
add
add
imul
inc
cltd
dec
xchg
jb
mov
sbb
pop
testb
or
jb
int
fisubrs
add
testb
cs
aad
clc
cmp
outsl
repz
jg
in
sbb
mov
cs
inc
add
lret
and
add
add
fstpt
rolb
rolb
outsb
mov
ficoms
test
or
test
leave
jne
adc
popa
jmp
fistpll
add
xchg
add
sub
je
adc
and
add
cmp
add
add
xchg
add
inc
add
inc
add
jg
mov
add
add
daa
xchg
adc
inc
add
add
pop
xchg
add
dec
push
cmp
or
test
jnp
add
insb
loope
inc
add
mov
add
loope
scas
rcll
int3
push
mov
mov
add
inc
add
add
addr16
in
dec
jne
ljmp
add
add
add
cmp
daa
push
sbb
sub
mov
mov
inc
add
add
fst
adc
and
mov
push
add
xlat
cmp
add
mov
add
dec
mov
sub
pop
mov
mov
add
mov
add
repz
mov
fisubrl
mov
xchg
add
add
fsubs
mov
popf
inc
push
jae
fidivrl
fildl
dec
outsl
inc
add
adc
pop
jne
fs
loope
out
out
out
sarl
mov
cltd
insb
jo
and
mov
mov
cmpsb
add
add
add
ljmp
push
jle
pop
arpl
in
icebp
and
add
and
movsl
gs
out
pop
fiadds
rcr
sbb
jbe
lods
xor
enter
repz
jmp
add
clc
arpl
pop
mov
dec
inc
add
mov
dec
cmp
add
add
jmp
into
aas
cmp
std
loope
add
jmp
mov
pop
jmp
xchg
sub
jge
jo
jecxz
sti
jnp
add
jns
and
mov
jne
add
push
dec
add
add
add
out
add
mov
sahf
out
lock
in
sub
add
mov
cmp
push
into
sti
sbb
add
inc
bound
mov
popf
dec
add
leave
mov
mov
cli
lea
add
lds
aam
enter
add
ss
repnz
mov
add
int3
pop
lret
push
add
pop
data16
add
mov
push
xor
push
scas
mov
dec
cwtl
rcrl
add
aas
test
mov
sbb
add
out
lock
sti
hlt
add
test
add
mov
dec
add
mov
add
mov
dec
imul
push
add
add
dec
loopne
add
test
pop
out
pop
pop
push
add
add
add
mov
scas
aas
add
add
cmp
mov
mov
mov
mov
mov
xchg
out
out
addr16
push
add
push
add
mov
sub
add
fidivl
add
mov
and
mov
adc
outsl
and
dec
sti
add
mov
xchg
add
ds
add
add
add
jo
pop
pusha
add
js
jo
cmpsb
add
into
add
dec
adc
rolb
add
sbb
add
jmp
cwtl
ja
inc
sub
jecxz
popa
or
add
add
mov
mov
fsts
add
jl
fcoms
add
add
jl
add
dec
sbb
imul
mov
rolb
add
add
xor
movb
movb
mov
dec
pop
cmpsl
add
add
add
add
add
mov
add
add
add
dec
cmp
pop
fldcw
jb
fildl
add
mov
icebp
int
cwtl
xor
add
add
sub
les
scas
pop
out
add
mov
out
cmp
xchg
jg
ret
repz
add
inc
int
add
js
mov
mov
popa
jae
add
imul
roll
mov
xor
pusha
add
pusha
add
inc
add
push
add
push
add
dec
lahf
mov
sbb
test
xchg
movsb
add
add
add
inc
jmp
and
mov
dec
xchg
add
out
mov
jbe
rolb
mov
testb
add
div
add
add
aam
fsubrs
mov
mov
inc
add
xchg
mov
mov
sub
add
shrl
add
add
add
mov
mov
add
push
add
insb
mov
fisubs
int
xorl
clc
mov
xor
lods
fnstsw
in
add
cmpsb
add
add
add
ret
mov
add
sub
icebp
pop
les
rolb
push
jno
popf
inc
add
add
add
add
xchg
cld
in
xchg
lcall
or
and
test
lds
mov
add
add
add
xchg
jne
dec
cli
aas
scas
movsl
out
push
add
aaa
dec
mov
bound
mov
lea
mov
cmc
aaa
xor
push
xchg
inc
add
add
add
add
loop
xor
sub
addb
gs
add
mov
add
mov
out
fists
jno
arpl
add
add
push
in
lods
and
data16
das
push
stos
scas
loopne
mov
ljmp
mov
stos
push
pusha
add
pop
movb
movsb
add
mov
loop
testb
ljmp
add
aad
xchg
cwtl
clc
sbb
xor
mov
ja
fucomp
notl
add
dec
dec
cmc
xor
add
mov
leave
mov
call
sahf
sbb
mov
push
add
add
rolb
subl
test
insb
xchg
mov
add
add
ds
js
inc
movsb
add
mov
cmp
addr16
add
add
fstl
xor
daa
and
ds
sub
add
dec
mov
add
add
pushf
outsb
cld
and
mov
add
add
mov
fstpl
cmp
imul
add
rcll
add
add
mov
or
xlat
xchg
xlat
movsbl
mov
insl
mov
add
push
idivl
in
add
add
pushf
rolb
ja
je
aaa
sub
push
mov
dec
add
mov
mov
jmp
test
sub
jmp
aam
cmc
inc
add
xchg
add
push
jecxz
dec
push
add
add
pop
mov
mov
aad
in
add
inc
mov
fstpl
xchg
add
add
jnp
add
sub
pop
pop
jp
add
mov
add
xchg
add
arpl
repnz
mov
fwait
jb
pop
jl
mov
clc
testb
add
daa
hlt
add
je
sti
push
fucomip
hlt
add
xlat
xor
add
add
dec
pop
sbb
or
sahf
sbb
jnp
push
add
pushf
mov
lret
mov
mov
stc
add
mov
hlt
add
add
pop
inc
add
add
mov
push
add
pop
incb
bound
mov
in
cmp
mov
mov
add
add
ljmp
push
add
dec
jb
nop
add
arpl
scas
jmp
mov
stos
hlt
add
cmp
mov
add
add
add
sbb
xchg
add
push
add
sbb
xchg
in
loope
cltd
mov
in
add
mov
dec
lock
push
inc
add
mov
sub
mov
mov
mov
jbe
outsb
xchg
popf
ljmp
jbe
sahf
cmp
dec
sub
imul
add
add
xchg
ficompl
add
add
xchg
add
add
dec
outsl
dec
sbb
add
adc
out
gs
xor
js
inc
add
hlt
add
add
js
test
dec
mov
add
jge
mov
adc
call
testb
andl
jns
inc
add
lret
das
add
hlt
add
add
stos
outsb
repz
adc
add
int
add
pop
pop
pop
jp
add
add
add
mov
inc
add
xchg
add
add
fistpl
addr16
add
loop
leave
jb
inc
xor
inc
add
push
add
dec
or
mov
mov
das
sbb
add
mov
add
add
jns
jnp
add
add
add
bound
mov
sbb
adc
inc
add
add
ficomps
dec
andl
add
sub
pop
dec
fucomi
jle
add
insl
add
pop
push
add
push
mov
mov
movb
xor
add
cltd
sbb
pop
repnz
pushf
sahf
loopne
jl
add
add
jg
mov
add
sbb
and
add
pop
inc
add
jnp
insl
lock
cld
and
mov
add
adc
xchg
xchg
jbe
rolb
bound
mov
add
mov
mov
pop
fwait
cmpsb
add
ss
sub
and
mov
test
add
add
sub
add
push
sbb
je
sarl
add
add
ljmp
mov
cmc
cmpsb
add
add
push
add
fnsetpm(287
add
sahf
xor
add
add
sub
ds
adc
jo
pop
cmp
xor
push
cmp
out
add
or
fwait
loope
and
mov
dec
dec
dec
repnz
sbb
into
cmpsl
cs
push
rcpps
add
add
pushl
dec
dec
es
adc
add
inc
faddp
testb
pop
sbb
add
clc
add
push
add
repnz
mov
dec
sahf
mov
hlt
add
adc
sahf
cs
add
fidivrs
imul
add
or
xor
into
loop
add
js
pop
rolb
addb
xor
inc
xchg
sahf
adc
jmp
je
fistps
xchg
pop
test
add
fisttps
mov
fs
fildl
add
add
add
pop
hlt
add
aad
cmp
xlat
je
add
test
mov
mov
xorl
jo
inc
jbe
sbb
cmp
mov
jge
add
add
repnz
sub
imul
cmp
push
add
test
cmpsb
add
push
test
fbstp
and
mov
add
mov
mov
push
outsl
dec
outsb
lret
jb
aam
adc
pop
and
mov
add
add
je
cmc
and
push
add
insl
xor
xchg
add
mov
stos
fxch
jae
add
mov
mov
sbb
in
enter
add
sbb
jmp
push
sbb
add
js
insb
insl
dec
cmp
xor
mov
add
into
test
and
ret
sbb
ljmp
cwtl
and
pop
fiaddl
add
inc
pop
loope
add
add
add
sub
insl
outsl
push
mull
add
push
dec
dec
movsl
stos
push
add
add
mov
mov
cli
out
cmpsl
frstor
push
pop
add
jbe
jne
test
jbe
mov
or
movb
and
das
insb
pop
decb
dec
cmp
add
addb
cs
sti
test
pop
cwtl
and
jbe
imul
adc
inc
in
icebp
jge
mov
add
mov
dec
xor
xchg
add
dec
aad
and
mov
jmp
insb
pop
add
mov
je
out
dec
sub
push
nop
add
xor
bound
mov
fildl
mov
cmp
fimull
and
inc
lcall
in
pop
ss
fisttpl
pusha
add
xlat
mov
mov
add
add
aas
fbld
in
out
das
dec
test
orl
add
cmp
mov
sahf
sub
xchg
add
add
add
mov
push
call
scas
aas
xor
lret
add
add
mov
xchg
mov
adc
sub
add
dec
cmp
jnp
les
pop
in
pusha
add
inc
add
cmpsl
sub
adc
jae
mov
stc
in
mov
hlt
add
mov
lea
add
push
add
jb
mov
pop
push
add
add
add
mov
mov
add
add
pop
in
fdivrl
inc
int3
cltd
sahf
enter
mov
add
les
cltd
or
pop
dec
mov
add
and
lea
add
sub
add
pop
xchg
and
add
movb
add
pop
mov
rolb
faddp
add
hlt
add
inc
add
test
negl
stos
mov
cmp
xchg
movl
lret
les
sub
add
add
ret
cmp
in
xor
mov
cs
jmp
sub
jp
or
imul
bound
mov
sbb
mov
add
add
daa
sub
xor
cmpsb
add
mov
add
cmp
inc
pushf
ja
jb
std
jae
mov
jge
or
add
add
xchg
add
mov
add
insb
sbb
add
add
int
stc
xchg
add
pop
sub
fmuls
add
add
imul
mov
outsl
and
mov
ja
inc
jmp
pop
fmull
dec
pusha
add
sahf
inc
add
inc
sub
add
add
data16
dec
popf
cmp
add
jecxz
add
push
add
add
mov
mov
gs
add
add
scas
xor
sub
mov
add
mov
push
add
mov
fstpt
stc
mov
jns
add
add
add
pop
and
mov
add
add
dec
fcmove
cltd
xchg
xor
popf
rolb
or
mov
or
add
xor
add
jle
push
cmp
add
fistl
in
mov
jg
pusha
add
cmp
cmp
iret
int3
sbb
int3
xchg
mov
jno
add
repz
add
add
cld
incl
cli
std
jne
add
or
add
push
add
sbb
sbb
jg
add
and
out
outsl
lret
iret
or
fadd
add
push
add
add
cli
mov
adc
and
mov
adc
movsl
and
mov
test
lcall
add
lcall
mov
out
bound
mov
add
add
lret
sub
mov
aaa
clc
es
jb
cmc
repnz
and
out
push
xor
ds
or
mov
add
stc
mov
mov
mov
iret
add
mov
xchg
ds
icebp
test
insl
ja,pt
ds
data16
mov
add
pop
push
add
dec
aas
movsl
inc
add
cmp
add
push
add
call
in
hlt
add
add
stos
aam
adc
shl
jge
add
mov
pushf
or
pop
jno
add
push
or
inc
add
add
bound
mov
add
adc
inc
mov
add
adc
add
arpl
mov
add
add
or
add
pop
push
repnz
add
aad
mov
add
mov
fwait
xlat
jne
mov
add
push
imul
jg
mov
addb
stos
sub
mov
jge
adc
jnp
lods
movb
jle
into
cmpsb
add
add
add
pop
sub
mov
or
pop
sub
rorl
movsb
add
sub
pusha
add
pop
data16
add
cs
add
mov
pop
incl
add
add
jns
mov
outsl
jmp
inc
dec
in
jne
cwtl
cwtl
xchg
loop
out
sbb
add
das
stos
sbb
in
out
add
add
add
add
adc
add
iret
sbb
add
add
jne
push
rcrl
sbb
adc
or
mov
add
mov
leave
xchg
and
mov
add
add
mov
add
add
xchg
int
out
add
jmp
add
add
sub
add
arpl
add
pushl
out
dec
xchg
lea
add
mov
fdivrl
cmpsb
add
pop
jl
add
add
add
cli
add
jno
mov
pop
or
adc
cmp
add
add
jecxz
add
add
add
data16
mov
xor
mov
cwtl
sbb
or
hlt
add
cmp
aad
jns
punpckldq
mov
or
stos
jge
or
or
mov
nop
add
pop
dec
loopne
iret
out
dec
pusha
add
and
repz
dec
rolb
add
js
add
push
pop
cmp
jno
flds
cmp
add
add
icebp
fisubrl
aam
jb
dec
jno
add
add
jnp
add
into
xchg
bound
mov
incl
cmc
pop
xchg
add
or
pop
and
iret
sahf
jmp
jbe
mov
das
fidivrs
xchg
cmp
sub
daa
pop
mov
das
add
iret
pop
push
ret
fstpt
rolb
shrl
scas
push
add
sbb
add
mov
rcrl
imul
insl
cmp
push
add
push
add
inc
push
add
lahf
jne
rolb
out
sti
pusha
add
js
xchg
fisttpll
push
dec
aad
cltd
je
std
psubusb
mov
pop
movsl
js
or
test
pop
push
jecxz
pop
and
addb
rolb
hlt
add
adc
jmp
add
push
add
std
xchg
add
add
mul
jnp
rolb
jp
adc
add
sbb
add
add
test
mov
add
data16
rolb
test
push
pop
adc
aad
add
add
or
ficoms
mov
mov
mov
add
push
outsl
and
mov
jl
call
add
adc
fldl
mov
add
mov
jecxz
sbb
fs
repnz
add
inc
add
int
add
add
cwtl
mov
sahf
pop
sub
add
or
add
add
mov
out
arpl
add
movb
scas
mov
add
add
mov
add
add
les
pop
les
int
add
popl
add
mov
icebp
sbbl
and
add
test
add
add
jge
push
pop
lahf
inc
add
push
add
add
in
cmp
in
pop
jno
cmp
arpl
mov
jecxz
lret
cmp
add
iret
pop
push
add
add
fisttps
aaa
jle
mov
add
inc
add
mov
add
setg
add
scas
int3
and
cmp
in
mov
je
adc
ret
xlat
loop
movsb
add
mov
mov
testb
rorl
mov
push
mov
and
mov
add
dec
sahf
lret
sub
mov
add
add
jbe
jno
mov
mov
push
add
add
and
stc
imul
sub
add
mov
pop
jmp
aas
jns
add
mov
sbb
mov
shld
add
cwtl
fists
je
dec
xchg
add
clc
add
mov
jo
fsubl
jb
std
lods
sahf
fstps
add
int3
xchg
enter
xorl
add
add
addb
add
pop
lods
pop
push
sub
pop
mov
add
add
and
mov
shl
add
leave
jecxz
add
mov
fistpl
pop
pusha
add
jns
pop
jbe
outsb
jmp
xchg
loopne
sahf
stos
adc
adc
inc
mov
adc
adc
clc
dec
mov
data16
sarl
pusha
add
movsb
add
add
add
add
mov
add
outsb
inc
add
add
je
rolb
rolb
data16
sbb
pop
aaa
aas
or
mov
pop
in
ljmp
xchg
insb
mov
rolb
add
add
add
repnz
repnz
fdivrp
jl
sub
insb
mov
mov
add
add
mov
adc
mov
rol
pop
jecxz
or
push
push
add
cli
xor
in
cmp
rolb
cmp
jb
stc
psubw
jno
sbb
sub
add
add
pop
repnz
jl
int3
ficoms
cmp
dec
repnz
out
jbe
inc
xchg
add
das
out
cmpsb
add
add
mov
test
cmp
dec
add
mov
add
jns
pushf
pop
in
lock
jnp
xchg
add
inc
push
add
add
mov
jns
add
insb
filds
add
hlt
add
lcall
add
push
add
xchg
lods
movsl
outsb
cmp
cltd
sbbl
add
dec
xor
push
add
dec
ret
rolb
pop
mov
jp
outsl
scas
js
cmc
pop
xchg
sub
mov
jl
sub
add
test
add
adc
inc
add
add
and
sbb
push
fildl
add
add
add
add
mov
add
add
data16
rolb
lock
test
stos
addr16
scas
or
add
add
mov
mov
nop
add
add
add
xchg
clc
xchg
xorl
xchg
add
insl
ljmp
dec
pop
xor
stos
sub
add
push
pop
out
sbbl
mov
iret
pop
test
dec
xchg
add
add
add
outsb
ja
add
jne
sbb
add
cmp
ja
mov
add
das
push
fsub
add
jecxz
add
push
add
add
pushf
pop
mov
jno
adc
add
nop
add
js
add
adc
lahf
and
mov
scas
js
mov
ljmp
add
mov
out
and
mov
add
mov
xchg
mov
sbb
jbe
ret
lock
hlt
add
repz
sub
add
push
add
sub
in
iret
fmuls
add
add
rcrl
mov
jl
mov
jle
subl
xchg
arpl
addb
in
jl
fidivrl
loope
fiaddl
push
add
cmp
std
xchg
data16
std
lahf
dec
or
loopne
cwtl
mov
movb
add
mov
cmc
fwait
or
sbb
xor
push
nop
add
add
sub
loopne
daa
xor
mov
push
add
sti
inc
fnsave
sub
gs
les
leave
test
add
inc
fsubl
add
rolb
add
loop
sbb
decb
sarl
add
popa
lea
lret
adc
outsl
jns
fmull
add
scas
inc
add
test
movsb
add
add
add
in
int3
and
mov
std
push
dec
bound
mov
xorl
cld
fisubrs
jl
or
aas
popf
sbb
add
xor
repnz
or
add
imul
loopne
mov
push
xchg
mov
dec
sarl
jl
out
jbe
xor
add
ds
cmp
std
sub
stos
dec
fnstcw
add
add
sub
push
jb
shr
sti
fadds
sub
pop
pop
cmpsb
add
faddl
int
decl
mov
mov
mov
inc
add
iret
and
insb
adc
xor
jns
pop
bound
mov
add
inc
push
add
adc
lods
mov
outsb
cmp
clc
mov
stc
repz
and
sti
call
jb
push
or
xor
in
add
jmp
xor
mov
add
rolb
es
add
push
add
inc
jno
adc
push
jns
cli
lock
mov
in
jecxz
add
and
or
repz
in
xchg
or
ficoml
ljmp
mov
add
call
xor
jbe
rolb
pop
lock
rolb
fldcw
sub
xchg
pop
inc
add
add
mov
repz
add
or
add
xlat
pop
jecxz
inc
inc
add
add
insl
rolb
mov
xchg
push
dec
jns
add
aad
add
leave
popf
pop
push
push
dec
call
inc
scas
lock
mov
subl
inc
mov
jl
lds
add
add
icebp
adc
dec
loopne
hlt
add
add
sub
sub
ds
fldt
jg
add
out
int
pop
push
add
add
incl
mov
push
enter
sub
and
mov
add
dec
xchg
or
jb
std
scas
xchg
push
add
into
movsb
add
cmp
add
mov
inc
add
add
mov
add
rolb
add
jmp
add
mov
add
add
je
jae
xchg
add
ljmp
mov
icebp
ret
add
sahf
dec
add
addb
add
mov
add
pop
mov
cmp
sbbl
js
mov
xchg
add
add
dec
inc
mov
rolb
add
icebp
inc
inc
add
test
push
mov
add
sub
loop
jp
add
or
add
sbbl
mov
jle
les
imul
xor
and
add
mov
mov
int3
xor
sub
addb
int
push
add
add
push
add
cmp
add
add
ficoms
stos
fisttpl
push
mov
leave
adc
data16
add
add
jb
jge
sbb
nop
add
inc
add
cmp
repz
mov
jmp
mov
add
aam
push
scas
sbb
xor
stc
push
dec
push
pusha
add
mov
rolb
enter
mov
sbb
jbe
loope
add
add
add
outsb
mov
fwait
pop
jno
daa
and
cmp
inc
add
std
out
fs
cmp
push
xchg
aas
mov
movsl
arpl
push
add
test
cmp
add
add
fdivs
and
sbb
pushf
pop
rolb
add
jbe
out
rolb
mov
sub
rolb
push
add
dec
mov
xor
sub
outsl
mov
add
mov
lahf
aam
jae
xchg
add
ljmp
scas
mov
fs
pop
add
dec
or
das
jmp
add
add
cmp
mov
mov
add
dec
loope
test
add
movb
mov
fnsave
add
add
inc
stc
arpl
push
add
sbb
push
fmull
test
test
out
and
mov
mov
sbb
inc
dec
mov
push
es
jb
std
clc
lret
add
rolb
add
adc
nop
add
adc
rolb
neg
clc
jne
ljmp
add
add
inc
mov
mov
sbb
add
xchg
pop
and
push
rcrl
pop
add
hlt
add
xor
pop
jle
inc
add
add
add
gs
aaa
mov
adc
mov
xor
mov
add
add
fsubs
gs
pop
pop
mov
add
add
add
and
push
aam
dec
inc
pop
pop
std
mov
jg
scas
test
mov
add
add
sbb
xchg
outsl
addb
sub
jmp
or
popa
mov
jno
add
sbb
add
cmp
add
int
cmp
lods
pop
or
add
push
add
movntq
add
and
add
dec
or
sbb
add
xor
scas
jae
mov
les
mov
mov
adc
mov
add
add
stos
dec
mov
dec
addb
mov
test
in
ljmp
add
stc
ret
enter
pop
ror
lock
nop
add
loope
or
icebp
imul
add
pop
sub
in
mov
pop
dec
fbstp
push
add
iret
aam
xchg
arpl
xor
imul
or
inc
add
add
ficomps
call
push
add
sahf
xor
xor
outsb
inc
add
stos
pop
mov
and
push
add
dec
addb
outsl
xlat
imul
mov
popf
pop
cmpsb
add
xchg
add
push
add
mov
or
push
add
mov
lahf
mov
sbb
mov
push
test
lock
xor
stos
add
enter
and
cmp
pop
mov
cwtl
inc
add
shll
inc
add
add
add
stc
cmc
jae
gs
ret
in
nop
add
adc
jb
fsubs
jle
add
add
add
sbb
rolb
in
add
add
ja
add
jge
pop
xor
inc
add
cwtl
jl
add
push
jnp
fmull
push
and
mov
loope
add
mov
leave
xor
je
sub
add
out
pop
mov
or
test
sbb
add
add
add
add
add
mov
cs
add
sbb
jge
mov
inc
ds
xlat
pop
push
faddl
loop
jb
xchg
add
test
jmp
push
les
jb
dec
int3
addb
mov
ret
cmp
mov
cmc
lret
xchg
jle
add
add
mov
leave
mov
sub
add
add
and
add
dec
adc
jae
ljmp
dec
pop
or
fwait
das
adc
sbb
add
add
movsl
pop
mov
xor
rolb
cmpsb
add
add
cmp
add
idivl
repz
xchg
bound
mov
mov
and
add
jp
mov
xor
jbe
arpl
stos
jnp
adc
scas
push
add
clc
dec
test
xor
xchg
iret
dec
int
test
inc
add
mov
imul
add
add
dec
iret
loop
pusha
add
add
fidivl
xchg
xor
add
mov
and
movsb
add
add
add
jbe
jnp
add
add
add
adc
mov
add
add
add
out
mov
insb
xor
jne
add
les
sbb
xor
add
adc
mov
mov
les
jbe
mov
insl
mov
addr16
xchg
jns
mov
lcall
sbb
testb
mov
mov
iret
mov
add
xlat
cmc
and
fildl
mov
mov
cmpsb
add
add
mov
mov
sbb
imul
add
add
js
add
pop
fnstcw
cltd
testb
std
xchg
add
add
mov
ficomps
add
mov
in
add
add
repnz
test
mov
lea
mov
test
xchg
add
mov
add
or
scas
aaa
pushf
aaa
sbb
add
adc
sbb
mov
ficompl
cmp
mov
lcall
scas
push
add
mov
mov
add
enter
add
jns
fbstp
cmp
add
cmp
mov
aas
or
add
xchg
add
cld
adc
mov
loopne
icebp
addb
lock
pop
sbb
std
into
xlat
in
push
add
shl
add
out
cmp
das
adc
xchg
inc
add
add
dec
sbb
add
fcomip
add
add
insb
mov
lcall
repz
add
ds
add
push
mov
add
fcomp
cltd
popa
and
mov
and
jo
inc
add
add
data16
addb
clc
dec
pop
pop
jp
push
add
jmp
scas
int3
adc
jecxz
test
lea
mov
rolb
adc
xchg
pop
mov
and
mov
add
lahf
cmp
add
lcall
add
cmp
add
push
dec
lea
add
maxps
iret
jp
xor
testb
aam
inc
ds
outsl
adc
fwait
or
add
pop
sub
dec
roll
dec
mov
add
out
jne
mov
pop
xor
pop
loope
add
mov
mov
lahf
xchg
clc
pop
fcmovne
jae
or
loopne
xchg
arpl
add
pop
add
ja
add
loopne
insb
cmpsb
add
add
xchg
out
ds
add
mov
add
add
xchg
sbb
xchg
cmp
mov
gs
add
dec
push
add
push
add
inc
add
add
call
adc
add
adc
push
inc
add
addr16
add
sbb
push
fisttpl
add
add
pop
cld
daa
pushf
mov
add
add
push
mov
sub
add
rcl
cmc
inc
les
sub
sbb
xchg
add
add
montmul
cmpsb
add
push
push
sbb
add
cmpl
dec
cs
jp
testb
ja
subl
lret
inc
add
rolb
sub
xchg
add
add
mov
cmp
lock
add
add
incl
add
sahf
jne
push
add
add
out
cmpsl
jl
add
push
and
mov
add
add
mov
movb
rolb
inc
add
pop
adc
mov
out
add
add
add
add
add
mov
bswap
lock
xor
lea
bound
mov
clc
fwait
add
mov
add
loop
lods
xor
imul
sbb
cmp
or
add
add
js
sbb
push
add
addb
mov
mov
testb
pusha
add
aas
xor
das
pop
xor
and
iret
cld
mov
pop
mov
sub
add
out
mov
inc
and
add
mov
xlat
insl
fidivs
add
popa
in
loopne
mov
inc
jmp
repnz
add
scas
in
addl
mov
mov
dec
fnstsw
mov
add
mov
iret
hlt
add
enter
add
add
aad
adc
dec
out
cmpl
add
add
ret
testb
add
test
add
int3
xor
pop
fstl
ret
shrl
sbb
add
imul
mov
push
add
sub
add
add
sub
inc
lods
pop
fdivs
add
mov
test
mov
mov
mov
ljmp
or
bound
mov
sahf
in
aas
push
hlt
add
add
inc
dec
and
mov
adc
mov
das
rcll
and
xchg
cmc
lods
add
ljmp
mov
dec
lret
mov
and
rolb
sub
stos
test
js
jecxz
add
clc
jmp
jl
xor
sbb
add
test
cld
cmpsl
mov
jle
aaa
enter
jecxz
add
loopne
movb
jecxz
add
inc
sub
add
add
into
push
dec
lds
pop
popa
mov
mov
cmp
jg
cmc
xlat
and
adc
xchg
dec
xor
cmp
sub
imul
cmp
outsb
fs
add
loope
imul
dec
xchg
cmc
and
call
add
add
scas
fmul
xchg
add
popa
inc
fcomi
add
add
cmp
iret
sbb
or
add
inc
add
ficoms
stos
xchg
add
popl
add
push
addb
add
inc
add
outsl
addb
add
jl
mov
add
add
imul
call
and
lock
xchg
push
push
add
inc
add
cmpsl
lods
inc
mov
das
insb
mov
popf
outsb
push
lds
and
mov
jb
jecxz
add
mov
iret
mov
cmp
push
add
loop
add
test
add
mov
iret
jmp
mov
jae
mov
ret
lcall
icebp
mov
xchg
sbb
sub
xor
imul
adc
or
adc
and
pop
and
inc
add
test
inc
jo
pop
mov
cld
xchg
add
mov
inc
add
add
mov
jl
add
mov
sub
add
add
mov
cmp
add
je
inc
rolb
inc
and
sub
add
adc
mov
add
add
add
bound
mov
xchg
add
jb
lods
jne
adc
sub
outsb
adc
fwait
rolb
dec
fists
rdmsr
add
leave
cmpsb
add
movsl
add
aaa
xor
das
fmuls
fstpt
sbb
mov
loopne
mov
in
lods
or
add
aaa
or
add
xchg
sahf
jnp
sti
add
mov
mov
out
pop
sbb
test
jae
jnp
add
add
les
adc
or
add
ja
sub
mov
adc
mov
add
inc
add
sbb
push
lea
movsl
xchg
and
enter
add
cs
js
je
repnz
js
inc
fsubl
pusha
add
aad
push
popf
repz
add
add
add
add
lret
repnz
add
insl
mov
cmp
in
fcmovb
add
add
out
xchg
add
add
add
add
xor
imul
add
mov
add
add
sahf
sbb
mov
mov
mov
movb
repnz
add
lcall
jp
add
std
rol
add
aas
dec
mov
inc
add
inc
add
adc
je
ja
add
add
shrl
add
add
jnp
push
add
jne
add
incb
add
mov
jne
xchg
stos
ficoml
add
inc
xor
mov
mov
rcl
push
add
call
cmp
or
arpl
out
stos
out
aaa
dec
fbstp
ror
add
pop
mov
add
inc
add
add
rcll
push
inc
push
loop
and
mov
add
pop
sbb
ds
xchg
add
add
add
outsl
loopne
scas
cwtl
mov
mov
mov
jne
jg
bound
mov
add
add
addr16
push
rolb
xchg
adc
inc
sbb
add
inc
aam
data16
add
les
fsubr
imul
out
add
jecxz
add
movsl
sub
call
and
sbb
jl
add
nop
add
add
js
add
bound
mov
das
sub
add
mov
mov
jg
stos
xchg
jne
adc
jl
dec
cmc
icebp
dec
jecxz
add
dec
add
mov
bound
mov
fwait
jo
xchg
cmp
sbb
push
add
add
ficompl
sub
stc
inc
add
add
or
mov
mov
data16
out
or
pusha
add
hlt
add
mov
push
int
push
add
repz
dec
in
adc
mov
sub
jne
push
sub
inc
and
add
add
add
add
loop
cwtl
bswap
or
fwait
xor
mov
inc
add
add
add
add
cmp
rolb
incl
hlt
add
dec
jecxz
outsl
mov
adc
daa
insb
out
xchg
add
pop
and
jg
movsb
add
jmp
add
and
inc
add
xor
add
add
mov
jge
sbb
pop
dec
add
mov
or
mov
xlat
outsl
pushf
movb
add
sub
sbb
and
pop
cmp
cli
xchg
add
add
imul
out
xor
daa
lea
sub
icebp
xchg
add
add
pop
cmpsl
fildll
inc
sti
pop
or
add
add
testb
data16
jb
stos
jp
add
in
mov
stos
into
lret
movups
icebp
rolb
adc
dec
add
mov
mov
pushf
mov
subl
cld
push
sub
into
mov
mov
mov
mov
mov
pop
data16
popa
adc
movsl
and
inc
jmp
jns
dec
mov
jle
mov
stos
data16
sub
add
lods
loopne
sbb
js
popf
add
add
testb
push
add
mov
int
and
xor
push
loop
aas
imul
jo
add
mov
push
iret
xor
xchg
pop
mov
hlt
add
jle
add
add
addl
mov
xor
pop
adc
push
adc
add
add
jb
test
cmp
add
sub
dec
dec
addb
jns
add
sar
xor
xor
add
add
add
mov
data16
pop
mov
mov
mov
in
pop
bound
mov
add
out
test
imul
roll
into
lret
jle
cli
bound
mov
add
sti
mov
add
inc
add
bndstx
add
mov
daa
iret
dec
push
add
jecxz
sbb
add
sahf
add
cmp
cmp
add
cltd
inc
add
mov
imul
mov
xchg
add
add
sub
icebp
fwait
sti
bound
mov
ljmp
popf
or
aad
xchg
add
jae
in
outsl
movsl
stos
ja
mov
add
add
mov
xor
mov
sbb
push
add
gs
add
add
into
pop
inc
add
pop
mov
add
mov
mov
loope
cmpsl
in
pop
mov
add
testb
cmp
add
jmp
push
fsubrs
fldcw
jno
clc
jle
add
lea
push
add
lcall
jge
push
inc
add
add
add
call
cmp
dec
mov
xchg
enter
add
ret
xor
add
xor
mov
add
ss
ret
dec
push
add
add
rorl
pop
dec
mov
mov
sbb
fidivs
add
add
sbb
sub
xchg
add
add
lds
icebp
lahf
out
and
mov
mov
mov
add
in
push
mov
fisubs
jmp
out
push
pushf
lock
add
test
rcll
add
outsb
sti
into
outsb
pop
les
arpl
mov
cli
inc
add
testb
mov
sbb
add
xlat
icebp
cltd
dec
and
mov
pusha
add
jg
jnp
and
sub
push
jg
roll
jge
dec
sbb
add
add
adc
repz
push
add
mov
xchg
add
add
mov
xor
add
add
xor
mov
add
cli
or
add
stos
dec
loopne
pop
stos
popa
mull
add
push
add
jbe
cld
xchg
add
xor
rcll
add
add
out
mov
mov
add
mov
add
pop
xlat
mov
cmp
push
rorl
add
cmpsl
mov
sub
mov
push
add
imull
add
add
lods
adc
clc
out
mov
and
adc
add
mov
add
dec
and
movsb
add
nop
add
testb
cmp
add
es
pop
dec
and
iret
mov
jl
add
iret
pushf
repz
add
mov
mov
fwait
popa
mov
cmp
hlt
add
add
push
sti
push
lret
and
mov
std
rolb
fisttpl
mov
add
mov
inc
iret
xchg
insb
call
add
jecxz
mov
pop
sub
xchg
cmpsl
lea
mov
mov
add
loope
addb
lahf
and
mov
lods
mov
dec
cmp
fmul
xchg
scas
and
mov
pop
sbb
scas
add
int3
lock
das
hlt
add
mov
mov
add
add
mov
add
add
je
dec
nop
add
add
sti
jp
testb
add
in
in
jo
push
fdivrl
add
in
addb
add
mov
xor
movsb
add
rolb
rolb
cmpsb
add
pop
xor
imul
imul
push
fdivrl
sub
sti
and
adc
pop
and
mov
mov
mov
inc
pop
ljmp
mov
add
cmc
daa
test
mov
add
push
sub
sub
pop
loop
in
push
add
fcmovb
add
int3
fldcw
int
inc
addb
xor
push
addb
outsl
push
fwait
adc
xor
mov
and
mov
add
xchg
movsl
daa
xor
jg
mov
icebp
mov
jp
test
mov
mov
rcrl
fimuls
dec
cwtl
repz
push
add
lahf
ja
jbe
pop
fnstenv
les
adc
add
jmp
imul
push
push
add
mov
in
add
add
arpl
rsqrtps
aas
add
leave
and
fsubrs
sbb
clc
pop
push
add
add
sbb
loope
loop
cmp
cmp
add
in
jg
or
add
add
xchg
add
repz
lahf
adc
mov
inc
push
mov
add
or
dec
stos
scas
leave
stc
xchg
std
out
push
std
in
mov
push
add
mov
icebp
and
addps
add
and
add
mov
adc
fidivl
pop
rcll
pop
add
sub
push
push
dec
mov
shll
xor
data16
sub
fisttpll
lcall
fwait
arpl
nop
add
mov
push
mov
out
testb
aaa
push
sahf
popf
cld
out
pop
nop
add
push
and
ljmp
subl
add
mov
inc
add
add
dec
add
sub
add
push
cmc
das
pushf
je
mov
data16
xor
nop
add
pop
xor
sbb
nop
add
cmp
xchg
rolb
daa
lret
incb
mov
inc
into
rolb
xchg
add
in
adc
or
adc
inc
sti
subl
push
lods
sub
pop
data16
mov
sub
sbb
jmp
add
add
and
in
inc
xchg
add
aaa
movsl
or
in
rolb
add
leave
lcall
icebp
hlt
add
leave
lds
add
add
mov
sub
jbe
and
call
push
fiadds
add
jb
add
sbb
mov
mov
add
xchg
add
out
sbb
add
add
dec
push
push
add
add
xlat
cmp
test
jmp
add
add
or
xchg
sub
rolb
and
jbe
or
jns
arpl
add
push
add
xchg
movsb
add
out
outsb
xchg
add
lret
fs
add
mov
ds
sbb
xchg
xchg
add
addb
add
data16
je
inc
add
pop
std
inc
xlat
cwtl
mov
mov
push
add
add
fsubs
lock
lcall
adc
add
mov
test
arpl
mov
nop
add
add
xchg
call
mov
pop
cli
in
add
setae
loopne
das
in
add
add
add
ret
addb
mov
mov
mov
add
xchg
add
add
das
fdivp
pop
sbb
rolb
push
add
aad
and
mov
fnsave
mov
adc
in
mov
scas
mov
jns
add
mov
je
xchg
add
sbb
add
das
cmpsl
mov
add
mov
das
mov
subl
and
push
push
xor
addr16
xchg
in
popa
fwait
push
mov
cmp
cmp
add
jnp
add
outsl
sbb
rolb
aas
sub
add
and
fadd
add
addr16
cmp
pop
lods
sarl
stos
std
into
add
inc
add
pop
push
sub
add
add
pushf
nop
add
add
sbb
add
inc
add
xchg
test
jmp
leave
mov
addr16
push
add
add
mov
add
lods
mov
add
mov
pop
xchg
add
out
dec
mov
mull
pop
mov
rcr
pop
pop
nop
add
add
add
add
cltd
xor
add
popa
sbb
cld
in
pop
sahf
loope
add
sub
daa
lds
aam
and
mov
lcall
jmp
or
adc
dec
insb
insb
mov
shll
rcr
mov
test
outsb
lret
mov
pop
testl
jmp
pop
shrl
popf
and
mov
mov
or
sti
dec
enter
icebp
and
imul
add
sub
add
cmpsb
add
in
movsb
add
cld
push
add
test
test
cwtl
scas
imul
fistl
add
mov
ja
test
xchg
adc
pusha
add
and
mov
xchg
push
add
add
mov
add
add
jns
inc
add
pushf
xchg
mov
add
add
mov
pop
adc
sub
lret
test
add
mov
sub
xchg
add
add
jne
lock
add
mov
neg
cmp
sub
inc
mov
and
add
xchg
mov
cmp
pop
scas
xchg
add
add
mov
into
mov
add
add
add
mov
stos
xor
xchg
add
jbe
push
add
add
test
cltd
sbb
cmpsl
std
into
cmp
aam
pop
popf
addr16
outsl
jge
nop
add
add
mov
jo
das
push
add
dec
fstpt
add
push
mov
je
cmp
rolb
mov
add
xchg
addb
sub
pop
jns
add
mov
jns
cmp
movsl
adc
mov
mov
mov
add
add
inc
add
mov
add
fwait
icebp
and
mov
push
add
mov
mov
sub
add
push
add
rolb
inc
shrl
add
aas
lcall
mov
add
pop
push
add
or
add
inc
roll
add
add
ret
aaa
pop
or
add
nop
add
add
lahf
movb
mov
sub
gs
add
les
out
xor
addr16
mov
out
clc
pop
and
bound
mov
ret
dec
lcall
sub
cmpl
roll
and
mov
mov
lock
pop
adc
dec
or
rolb
sti
iret
dec
pusha
add
inc
add
mov
add
inc
mov
pop
das
or
inc
pop
sub
hlt
add
lahf
adc
cmovp
lds
into
loope
loope
add
stos
pop
stos
jmp
loop
mov
sbb
sub
push
leave
sbb
add
adc
xlat
and
mov
cmpsb
add
add
jle
inc
add
adc
movb
pop
pop
dec
cmpsl
cmp
cli
call
jo
insl
mov
and
cmp
mov
adc
daa
ret
data16
sub
add
pop
addb
sbb
dec
xchg
xchg
fucomip
pop
call
add
fnsave
add
push
add
std
pop
add
mov
popa
xchg
mov
pop
cmp
add
add
out
or
add
mov
je
add
lcall
add
mov
or
mov
xlat
mov
and
cmp
cmpsl
jge
out
rcrl
jmp
testb
jbe
call
cli
mov
add
pop
scas
sbb
add
add
add
jo
or
testb
insb
mov
pop
sub
add
xchg
ret
cmp
int
add
scas
sahf
lods
xor
xor
or
add
jo
jle
add
enter
repz
mov
xchg
xlat
pop
popa
cmp
adc
mov
call
call
add
movsb
add
rolb
add
add
out
cmpsb
add
lds
jb
add
mov
add
sahf
imul
jmp
sbb
inc
add
add
add
test
mov
test
sbb
and
add
cli
stos
aas
push
add
mov
jg
loop
mov
mov
jge
add
gs
pusha
add
inc
add
add
add
add
add
and
mov
sbb
add
pop
jne
add
add
add
push
add
cwtl
cmp
inc
add
test
fsincos
mov
inc
xlat
test
dec
push
mov
add
jno
andl
mov
imul
addb
add
pop
loop
dec
sbb
sti
and
mov
push
adc
dec
sbb
sub
dec
add
add
add
in
das
xchg
mov
jae
sub
add
mov
cmp
int
cmpsl
jno
add
dec
sbb
scas
cmp
rcrl
aad
add
or
mov
add
decl
jae
jg
sbb
cmp
test
add
dec
pop
cmc
sbb
add
add
add
mov
fdivrl
punpckldq
mov
nop
add
add
fsubrl
jecxz
push
add
add
push
add
scas
mov
cs
mov
add
add
mov
out
cmpsb
add
or
dec
cli
cmp
xchg
push
add
add
add
mov
add
call
mov
or
or
nop
add
stos
mov
test
test
imul
dec
cmp
int3
data16
jne
pop
addb
xor
mov
stc
cmp
add
adc
fcoms
ficoms
add
or
add
sbb
add
adc
shll
dec
pop
ja
mov
insl
mov
sub
sbb
add
xor
push
add
call
add
call
xchg
stc
ret
sbb
inc
add
add
jns
imul
mov
cmp
inc
or
add
sbbl
mov
scas
xchg
add
mov
add
add
add
add
or
add
add
insl
jbe
mov
mov
lock
loopne
into
movsb
add
add
add
add
cli
pop
movb
lods
lret
jnp
movsb
add
ja
jnp
add
jle
arpl
dec
xor
aas
mov
or
pop
jnp,pn
pusha
add
inc
lods
or
ljmp
add
add
outsl
arpl
add
stc
mov
add
add
daa
adc
fimuls
fbstp
mov
rolb
add
add
sbb
mov
add
hlt
add
enter
mov
mov
sbb
rolb
std
lret
mov
mov
push
lock
add
push
add
add
ret
add
inc
add
pop
popf
sbb
and
mov
or
xor
push
xchg
cli
call
add
cmc
testb
add
repnz
push
inc
add
cmpsb
add
pop
test
imul
or
sbb
pop
outsl
and
mov
xor
lea
ror
and
cltd
xchg
pop
mov
jnp
add
jmp
stc
daa
cmp
add
stc
mov
pusha
add
add
lods
aas
insl
enter
or
xchg
and
mov
movsb
add
cld
pop
insb
scas
addl
mov
outsb
cmp
add
mov
inc
lret
jne
add
outsl
push
add
mov
xor
int
add
jmp
shrl
mov
imul
pushf
fnsave
add
push
add
mov
cmp
fcoms
mov
mov
mov
add
mov
sbb
adc
push
cmp
add
or
add
xorl
pop
imul
xchg
inc
add
add
jmp
rcll
out
add
add
ret
aas
xor
jno
lcall
lea
add
jle
loopne
les
fdiv
jne
aam
push
add
add
in
movsl
movsb
add
fmuls
adc
pop
ret
cmp
add
mov
sub
push
stos
das
xchg
data16
popa
loop
fsts
outsb
int
rolb
add
inc
add
dec
in
or
add
add
add
imul
jecxz
add
mov
mov
es
mov
scas
in
jb
push
sar
int3
addb
add
xor
mov
testb
pop
jae
push
fisttpl
data16
aas
mov
fcmovnu
daa
jmp
add
mov
test
mov
mov
add
mov
jnp
dec
imul
in
add
push
push
hlt
add
add
add
rolb
add
add
or
add
add
test
addl
mov
add
add
out
repnz
lea
loop
das
mov
mov
add
aam
cwtl
add
mov
add
add
lret
movsl
adc
mov
xchg
lcall
das
adc
imul
sbb
add
iret
xchg
arpl
mov
imul
mov
sub
push
call
mov
add
add
xor
ja
cmp
fnsave
mov
and
mov
pop
sub
jae
out
mov
mov
add
rolb
lret
leave
xlat
push
call
mov
mov
ja
xor
popf
mov
jge
dec
in
add
add
data16
popf
stc
push
add
dec
xchg
add
add
add
les
sbb
movb
sbb
push
add
add
aas
addb
add
test
add
jmp
adc
jnp
add
mov
add
xchg
add
clc
add
inc
xchg
add
test
add
xchg
enter
dec
lods
pop
stos
lret
push
add
into
jae
add
out
incb
and
inc
add
add
add
aad
dec
test
jmp
mov
inc
jp
add
add
sub
fwait
dec
lahf
dec
not
add
lret
fwait
inc
add
nop
add
movsl
adc
jns
test
loope
pop
aas
or
ljmp
add
add
adcl
push
add
dec
pushf
adcl
mov
mov
loope
lret
icebp
mov
and
add
inc
adc
mov
in
test
add
fucom
inc
cltd
and
xor
rolb
pusha
add
cmc
mov
adcl
dec
push
add
outsl
push
add
inc
sti
add
mov
and
dec
inc
add
shrl
pop
push
cwtl
pop
aas
add
pushl
cmp
pusha
add
dec
mov
sbb
test
add
test
add
fiadds
add
in
sbb
jecxz
push
add
add
inc
add
add
inc
add
push
inc
jns
test
clc
enter
add
add
xchg
add
pop
jecxz
cld
sbb
enter
sbb
add
jle
sbb
aam
in
push
add
std
addb
mov
test
pop
cmp
adc
push
xchg
mov
add
mov
jae
xor
movsb
add
mov
pushf
and
mov
stos
popf
dec
repz
xor
mov
test
xchg
add
cmp
inc
nop
add
jg
add
rcr
xchg
and
jo
pop
xlat
mov
add
inc
rolb
sub
add
add
sbb
jb
pushf
outsl
mov
stc
mov
mov
mov
add
jle
add
mov
sub
lds
xchg
add
das
xchg
mov
stos
mov
mov
mov
in
popa
push
add
enter
ds
add
push
pop
iret
sbb
dec
mov
jae
imul
cmp
lret
jns
hlt
add
pop
mov
mov
mov
add
inc
push
jne
ret
jge
add
add
addb
jle
add
outsl
loope
add
fwait
or
add
push
cmc
pop
mov
sti
aam
jg
sahf
test
add
adc
push
add
jmp
es
stos
je
cmc
flds
adc
mov
add
xor
stos
dec
push
add
add
fsts
aaa
and
mov
imul
mov
add
xor
into
sbb
testb
add
iret
push
add
mov
push
in
mov
add
addl
add
ret
push
lcall
mov
test
add
push
sub
dec
mov
and
add
inc
add
cwtl
outsb
jg
popa
dec
add
add
dec
sub
in
cmp
sub
add
aaa
sti
adc
xor
nop
add
add
fcoms
add
and
mov
or
call
add
shll
adc
mov
jnp,pn
cmp
lea
jo
test
push
jae
lea
cmpsb
add
shll
inc
dec
xor
xchg
popf
fimuls
cmc
cmp
aad
addb
push
mov
cmp
pop
dec
lret
mov
add
aas
mov
add
fucomip
mov
jp
popa
cld
sahf
jb
fisubrs
adc
arpl
dec
and
aaa
fsub
add
out
mov
add
and
push
add
xor
je
cmc
movsl
cmp
pushf
inc
add
sbb
pushl
test
pop
push
orl
add
pop
out
pushf
in
repnz
xor
stos
jmp
cld
cmp
push
add
sub
pushf
adc
lds
xor
add
fmuls
movsl
fcoms
add
shrl
add
mov
enter
popf
push
lods
inc
jnp
sarl
mov
ficoms
adc
xlat
sbb
push
out
sub
add
popf
push
pop
add
mov
add
add
bound
mov
adc
add
add
push
lret
add
dec
mov
add
mov
add
push
sbb
mov
jbe
sub
das
xchg
imul
iret
or
mov
cwtl
jp
jnp
push
add
and
ret
fnstsw
ret
shll
imul
inc
add
add
add
fiaddl
add
addb
add
loopne
add
xchg
add
in
loope
and
call
repnz
add
test
and
add
pusha
add
xchg
dec
ja
pop
cmp
add
sub
cltd
mov
inc
add
xor
hlt
add
xchg
jne
add
add
out
in
pop
sub
add
lds
orl
leave
adc
mov
jle
push
add
movsb
add
add
mov
push
add
add
mov
pop
sahf
pop
outsb
faddp
xchg
add
in
jne
add
add
inc
add
hlt
add
xchg
add
outsl
out
das
pushf
xchg
add
xor
jmp
mov
xor
add
data16
pusha
add
js
jmp
stos
pop
mov
xor
rorl
push
add
push
push
scas
pop
add
add
mov
dec
dec
xchg
add
das
mov
ficompl
fisubl
and
mov
sub
mov
pop
aaa
cmpl
repz
and
mov
int3
add
or
dec
xchg
clc
mov
inc
add
cmp
add
mov
add
dec
jl
mov
push
xor
fldt
adc
out
and
add
mov
movb
jp
xchg
add
add
dec
ret
imul
hlt
add
jns
fcoms
add
out
dec
leave
aam
cmp
int3
jbe
sti
cmc
das
mov
mov
int3
sbb
mov
cmp
add
out
add
data16
cmp
dec
mov
rolb
or
ret
jo
inc
add
roll
in
in
std
clc
into
gs
add
add
mov
fildll
imul
add
add
jge
push
in
lret
cmpsl
cli
test
cmc
adc
mov
add
adc
test
gs
in
push
pop
addr16
mov
mov
cmp
sub
pop
push
add
aas
xchg
jb
insl
dec
shll
popa
push
movsb
add
push
add
jb
pop
in
mov
pop
inc
add
rolb
out
out
adc
add
hlt
add
add
pop
sub
add
repz
mov
xor
loop
jge
push
add
rolb
fs
test
add
mov
add
mov
push
cmc
jb
inc
xchg
mov
add
sub
add
dec
xor
pop
xchg
jne
aaa
repnz
addr16
insb
insb
push
ss
add
js
loop
or
mov
sarl
mov
add
jg
cld
lea
mov
add
pop
add
add
fwait
lcall
loope
and
pavgw
jl
lret
sub
push
mov
daa
mov
data16
add
sbb
imul
dec
and
mov
jnp
add
enter
or
cmp
cs
dec
nop
add
add
mov
fldenv
dec
sub
push
xchg
add
add
lds
mov
lods
fcmovnu
add
add
movb
push
add
add
fmull
cltd
sbb
je
push
pop
push
add
add
fwait
int
add
mov
add
xchg
add
add
xchg
inc
cwtl
or
xchg
add
add
xchg
add
negl
popf
mov
aaa
push
add
mov
iret
mov
add
xor
inc
mov
or
testb
mov
mov
add
icebp
repnz
add
add
push
add
mov
sbb
add
repz
push
add
mov
nop
add
push
enter
add
lret
push
add
popa
call
mov
ljmp
ljmp
inc
in
loopne
push
xor
rorl
xor
inc
jecxz
jo
sub
int3
mov
leave
sbb
jae
sub
cli
mov
mov
add
add
data16
add
and
mov
mov
call
add
xchg
pop
mov
cmp
lods
jg
add
insl
or
adc
adc
push
add
mov
or
scas
movsl
call
imul
mov
mov
add
jmp
popf
push
add
add
add
xchg
fwait
cmc
lret
or
call
sbb
add
out
cltd
cld
dec
mov
lods
test
and
xchg
and
add
add
stos
nop
add
loope
add
shl
add
je
cmp
enter
pop
pop
dec
adc
add
adc
adc
in
add
add
addb
pop
xor
mov
push
add
inc
jne
pusha
add
cmp
add
cmp
push
add
shll
add
repz
push
je
outsl
cmp
add
dec
pushf
in
xchg
adc
out
xchg
add
mov
xchg
cmp
add
add
cwtl
bound
mov
add
stos
int3
movsl
daa
push
add
rolb
push
add
add
scas
or
and
mov
and
mov
std
pop
mov
dec
jmp
jg
add
add
mov
je
adc
inc
fs
repz
add
add
mov
push
cmp
add
ljmp
testb
cmp
add
add
add
jg
sahf
sbb
add
adc
cmpsb
add
add
enter
mov
add
add
mov
in
xchg
add
ret
lret
mov
push
mov
rolb
push
add
jmp
add
rolb
inc
jecxz
inc
add
adc
add
data16
cli
or
add
mov
insb
pop
movsb
add
mov
add
mov
add
jo
inc
scas
sub
adc
jns
stos
xor
add
xlat
or
sub
insb
cmpsb
add
add
add
mov
add
shl
add
add
rolb
arpl
loop
mov
sahf
xor
and
mov
cmpsb
add
dec
shl
mov
mov
fidivrl
mov
lahf
push
add
add
add
push
add
les
pop
repz
add
add
mov
mov
cmp
nop
add
add
jns
add
ret
jno
xor
fnstenv
jmp
add
icebp
fidivl
add
enter
lahf
stos
pop
in
inc
shll
add
mov
cmp
loope
out
xor
popa
xchg
add
and
loop
or
add
jmp
pushf
fdivrl
xchg
icebp
xor
addb
sub
add
inc
add
adc
inc
add
enter
xor
add
inc
rolb
lds
pushf
mov
xchg
add
push
mov
and
mov
movsb
add
in
test
aas
dec
inc
cmp
mov
add
and
add
mov
test
pushf
leave
mov
sahf
or
addb
add
add
pop
nop
add
add
add
add
add
andl
das
lds
push
or
sbb
xor
push
add
inc
add
fstps
cmpsb
add
push
stc
leave
push
add
mov
xchg
adc
sub
add
mov
add
mov
rolb
loop
data16
in
jmp
icebp
inc
fmuls
add
leave
test
rolb
std
add
sub
add
sti
testb
add
jp
ds
add
das
mov
add
mov
mov
std
lahf
lret
pusha
add
repnz
sub
and
add
xlat
dec
push
addr16
push
mov
jb
xchg
std
mov
add
lea
sbbl
xor
or
call
sub
add
rolb
lds
ds
ficomps
push
add
add
push
add
add
pop
ret
add
jle
adc
mov
add
add
hlt
add
add
cmp
add
mov
jae
add
xlat
fcmovu
xor
push
add
sbb
adc
cmpsb
add
jp
add
fbstp
fistpll
inc
negl
sub
sbb
add
add
add
test
mov
cwtl
in
stos
jmp
add
icebp
push
add
mov
mov
add
mov
addr16
or
clc
mov
std
pop
lret
popf
jne
add
inc
add
nop
add
add
add
mov
add
mov
and
add
movb
or
add
xor
mov
fstpt
add
iret
leave
cmp
addb
xchg
xor
xchg
sub
subl
add
mov
in
aam
add
add
add
mov
push
cs
add
add
sub
addb
data16
pop
movb
add
jmp
out
dec
and
add
icebp
sti
add
rolb
add
mov
add
jae
aam
std
push
xlat
lret
mov
aas
inc
add
aad
sbb
cmp
and
rolb
xchg
loopne
mov
add
add
cmp
add
sbb
mov
add
xlat
jne
or
into
rcll
in
lahf
or
mov
add
test
mov
aas
xor
add
inc
fwait
repnz
mov
add
fdivs
add
fwait
or
add
outsb
clc
cwtl
push
fldenv
loope
inc
das
stc
sbb
stos
sub
xor
fcos
cmp
aad
je
pop
jo
xchg
add
xchg
insl
insl
dec
aam
mov
add
add
data16
sti
cmp
add
mov
and
mov
add
add
movsl
mov
cltd
and
addb
add
test
add
jbe
les
cmp
xor
rolb
push
add
in
into
mov
outsl
xchg
pop
int
add
bound
mov
xor
in
cli
jp
add
add
mov
mov
xchg
add
add
mov
mov
xchg
sub
cmpsb
add
push
add
xor
adc
inc
jbe
pop
mov
out
test
mov
outsb
ret
xchg
add
mov
mov
jmp
sub
aas
daa
out
sbb
repnz
add
add
aaa
aas
sahf
aad
test
or
xor
cs
push
out
sub
push
add
sub
mov
add
ret
and
mov
add
lahf
add
addr16
dec
sbb
add
sahf
addb
stos
push
add
jnp
cld
mov
add
inc
xorl
push
xchg
add
cmpsb
add
add
add
add
int
add
mov
cs
popa
jg
xchg
adc
mov
add
aam
mov
add
add
add
mov
dec
movsb
add
xchg
add
cmp
fcmove
cwtl
outsl
das
mov
add
add
mov
jbe
lret
mov
sbb
add
cmc
sub
jmp
add
add
add
bound
mov
adc
fincstp
movl
leave
popa
add
out
xor
das
aad
fistpll
repnz
shll
cmp
or
sub
jp
scas
lret
stos
dec
mov
fwait
mov
inc
add
hlt
add
pushf
gs
lret
mov
mov
xchg
add
mov
or
xor
and
add
xor
add
add
dec
sbb
inc
or
add
movsl
add
mov
arpl
daa
pop
flds
add
mov
add
mov
add
pop
mov
pop
push
push
add
add
aas
inc
icebp
addl
add
xchg
inc
jle
pop
fsubp
add
imul
mov
leave
xchg
add
mov
xor
push
cmp
dec
add
mov
sbb
add
add
addb
sbb
sbb
cmp
ret
jb
inc
add
iret
xor
loopne
adc
xchg
mov
inc
clc
flds
add
dec
ror
add
lret
jp
add
xor
in
inc
inc
add
add
add
pusha
add
xchg
pop
add
insl
xor
xor
idivl
jnp
pop
pushf
insb
sbb
add
add
ljmp
mov
xchg
add
add
test
inc
add
mov
mov
sbb
testb
and
sub
arpl
clc
inc
pushf
add
mov
mov
add
mov
push
add
add
add
popa
push
inc
add
mov
mov
add
add
cltd
gs
fwait
jl
sub
mov
arpl
into
jg
xor
add
mov
mov
outsl
dec
sbb
xchg
add
sub
add
inc
add
mov
push
add
jp
jnp
pop
rol
sub
clc
mov
movsl
pop
ret
stc
cmc
push
or
pushf
insb
ljmp
add
add
add
mov
imul
sub
int3
lahf
cmp
push
add
aad
mov
add
add
add
add
ja
je
ret
test
add
jp
aaa
je
jp
outsb
inc
add
add
mul
add
or
add
add
outsl
jmp
xor
lcall
fisttpl
add
daa
cwtl
cltd
or
cltd
stos
adc
mov
cmp
and
mov
dec
xor
icebp
xor
jae
add
add
add
add
jmp
mov
or
stos
cs
sub
fwait
jns,pt
rolb
and
mov
call
sub
mov
add
movsl
adc
push
subl
sbb
add
adc
mov
addb
add
add
mov
dec
pop
adc
repnz
out
pop
ds
stos
rolb
cmp
add
gs
mov
stos
sub
adc
lcall
test
add
mov
sub
iret
repz
add
aas
loope
xchg
add
xchg
add
test
add
mov
fwait
out
lods
fisubl
dec
mov
dec
sti
push
scas
pusha
add
adc
aam
jb
xchg
jmp
xor
mov
sbb
mov
mov
out
stc
pusha
add
popf
mov
push
add
lcall
mov
stos
push
add
lods
movsl
cli
add
jle
xor
lcall
mov
int3
pop
sarl
out
jno
bound
mov
add
cmpsl
adc
cmp
xchg
add
aas
ret
mov
mov
mov
into
inc
add
add
lods
cltd
cltd
pop
daa
push
add
lahf
je
stc
aam
mov
test
shrl
dec
les
lahf
psrad
mov
mov
lret
aam
dec
xor
push
cltd
out
mov
mov
mov
xchg
jbe
cli
bound
mov
testl
add
dec
add
mov
sub
sub
scas
or
ficomps
add
mov
lods
stos
ss
add
add
add
mov
adc
inc
jae
mov
xchg
add
fsts
mov
sti
jecxz
int
pop
std
into
mov
pusha
add
pusha
add
jo
sub
daa
out
popa
push
add
add
push
add
cmp
xchg
add
scas
add
int3
out
ljmp
add
mov
ja
add
pop
jle
mov
mov
xor
and
inc
add
add
add
jg
add
pop
cmp
sbb
xchg
cmpl
add
in
mov
push
add
addb
int
add
or
pop
add
mov
xchg
pusha
add
jo
stos
test
iret
mov
add
mov
faddl
mov
mov
cli
jmp
in
fstl
xlat
lahf
push
add
pop
jp
fs
dec
fstps
push
sbb
mov
push
add
add
add
add
add
xchg
mov
hlt
add
faddl
add
outsl
cmovb
mov
leave
ret
inc
add
add
add
add
sti
cmp
push
add
pop
into
dec
add
mov
add
and
cmpsl
pop
call
cmpsb
add
mov
mov
add
dec
add
mov
add
mov
add
lret
cmovle
add
outsb
cmpsb
add
pop
push
mov
ds
cmp
inc
add
sub
ja
mov
add
adc
add
add
mov
mov
addb
mov
mov
add
dec
and
mov
mov
add
xor
lahf
mov
cmp
test
add
movsb
add
fadds
add
add
add
or
mov
insb
out
xchg
add
inc
add
pop
inc
add
xor
pop
pusha
add
mov
out
lret
and
testb
nop
add
add
in
loop
mov
add
add
cmp
jmp
add
int3
jb
push
add
jne
ljmp
jns
dec
lcall
repz
mov
mov
jl
mov
dec
in
push
add
add
add
add
add
loope
lea
add
add
push
rolb
mov
cltd
inc
popf
sbb
outsb
inc
add
adc
xchg
push
add
mov
cltd
stc
cmp
test
rolb
jle
xlat
lods
add
loop
out
mov
jmp
loope
mov
mov
cmp
mov
fs
testb
ja
lods
hlt
add
push
in
inc
add
ljmp
fnstsw
jno
add
int
add
add
jmp
dec
mov
dec
inc
add
testb
stos
mov
hlt
add
mov
fwait
mov
add
add
sbb
jecxz
test
mov
je
arpl
fs
ret
lods
daa
jo
adc
push
into
jb
sub
pop
addr16
add
fnstcw
arpl
jbe
not
outsb
push
mov
sbb
add
xor
or
mov
arpl
and
mov
add
add
sbb
icebp
cmp
dec
xchg
pop
inc
add
rorl
fstps
or
add
sbb
rolb
jno
add
aaa
aam
sbb
push
call
xchg
cmp
stos
adc
popf
push
test
add
sbb
clc
xor
jmp
mov
mov
push
add
mov
sahf
push
add
add
add
bound
mov
test
mov
scas
daa
adc
add
add
push
pop
out
loop
lods
jg
cwtl
aam
and
int3
jl
mov
add
add
jns
or
das
insl
rcrl
xchg
push
add
add
add
jae
in
add
test
lods
xchg
add
mov
push
addr16
lds
sub
add
mov
cmp
into
aaa
mov
add
test
mov
das
jmp
shll
in
aam
sbb
mov
mov
xchg
cli
in
loop
sahf
or
jb
pop
sub
inc
add
sti
mov
sbb
das
fmul
scas
test
xchg
xchg
mov
add
add
bound
mov
sub
jnp
mov
add
add
xchg
add
jecxz
jle
add
push
sbbl
sahf
mov
fstl
inc
add
add
add
xchg
dec
mov
adc
std
xor
and
mov
lahf
jbe
sar
mov
addb
cs
and
mov
jge
scas
in
nop/reserved
fs
add
push
add
add
stc
dec
cmp
popf
rolb
cmp
mov
mov
mov
xchg
cmp
mov
mov
pop
leave
add
add
imul
mov
add
mov
inc
add
fdiv
daa
rolb
aaa
push
les
scas
sbb
adc
outsl
push
push
add
lock
popf
daa
mov
jle
repnz
dec
data16
xor
xor
fstl
xchg
add
and
aam
into
adc
add
mov
mov
dec
jno
cltd
jns
add
mov
dec
add
mov
rolb
sbb
dec
out
dec
mov
add
dec
add
mov
add
pop
in
ret
add
push
add
mov
out
cld
push
add
add
mov
divl
int3
mov
jge
pop
pop
push
add
or
orl
add
add
int3
mov
jae
mov
mov
dec
sub
arpl
lret
jns
add
push
add
jbe
push
add
inc
add
add
mov
rolb
fidivl
add
popf
add
ficoml
jae
in
rolb
push
add
stc
push
sbb
adc
xchg
enter
sbb
add
xchg
add
sub
fldt
add
push
jb
aaa
push
jo
push
popf
insl
js
fdivs
jmp
aam
dec
rolb
inc
add
loopne
pop
out
popf
and
movb
lea
adc
sub
int3
sbb
add
mov
add
add
scas
or
stc
sahf
pop
sub
movsb
add
add
add
push
in
sub
jp
inc
lcall
jnp
xchg
cltd
in
add
add
add
hlt
add
outsl
mov
add
ds
sbb
leave
addb
dec
pop
xchg
lds
mov
lea
push
adc
jno
xor
add
pop
fnstenv
out
sub
sbb
fnsave
rolb
insb
sti
push
add
add
add
xchg
add
outsl
repnz
add
sbb
notl
add
inc
add
xchg
mov
data16
add
add
inc
add
cmp
adc
push
add
out
mov
add
add
nop
add
push
add
in
add
adc
mov
jl
push
add
lea
mov
and
mov
add
test
popl
add
add
fadds
mov
iret
xor
lret
sub
inc
scas
scas
and
mov
inc
add
add
add
mov
bound
mov
sti
jg
xor
aam
pop
outsb
push
add
add
add
add
inc
clc
mov
add
clc
rcl
insb
punpckhwd
sub
sbb
popa
push
xchg
add
mov
add
mov
cmp
scas
loope
xchg
push
jnp
jecxz
js
add
and
inc
ljmp
add
outsb
jne
add
icebp
jg
pop
adc
add
add
sub
xchg
push
add
rolb
adc
inc
mov
add
add
add
push
add
push
xor
push
add
add
sbb
fnstsw
cmpl
or
testb
xchg
add
add
cmc
repnz
cwtl
adc
sbb
into
adc
or
pop
bound
mov
das
sti
mov
cmp
push
cmpsl
pop
iret
negl
xchg
stc
data16
arpl
adc
aam
jns
add
outsl
mov
add
mov
mov
adc
test
stc
push
jno
mov
add
add
dec
sbb
and
jae
addb
test
mov
mov
and
inc
imul
mov
addl
adc
pop
inc
add
pop
pop
jns
xchg
add
sbb
sub
sbb
jne
xor
ljmp
add
add
test
cmp
cmp
cmpsb
add
xlat
cld
xchg
add
xchg
add
pop
cmp
add
std
jp
add
add
dec
mov
add
add
pusha
add
lahf
pop
mov
aad
add
sahf
xchg
lds
mov
add
stc
fistpll
add
jmp
add
mov
inc
xchg
add
cltd
push
push
add
xor
icebp
int3
lock
dec
sbb
add
add
call
pop
xor
jl
fwait
jne
or
adc
pop
sub
mov
xor
add
scas
clc
fcmovne
sub
adc
dec
clc
push
add
add
out
test
pop
pop
imul
inc
add
add
dec
add
mov
loopne
mov
fwait
pushf
mov
add
push
add
add
das
addr16
or
ja
push
out
xchg
jne
add
fmul
loopne
cld
icebp
xchg
add
push
add
je
pop
mov
and
add
add
fcoms
pop
sbb
mov
std
sti
xchg
rolb
mov
xchg
add
data16
loopne
push
pop
lds
negl
stos
call
cmpsl
xor
bound
mov
mov
mov
scas
int
or
add
sti
or
scas
jmp
inc
adc
adc
icebp
push
add
mov
pusha
add
iret
inc
add
int
add
add
popf
adc
jge
pusha
add
add
rolb
ret
add
add
or
add
gs
scas
cmp
jecxz
lret
outsb
mov
cli
out
ret
inc
xchg
xchg
dec
xchg
mov
add
lods
lret
daa
dec
cmc
les
adc
add
add
jo
sub
mov
or
push
int
add
mov
xlat
test
mov
sbb
mov
fistpl
daa
or
ficompl
add
add
das
cmp
xor
push
jb
mov
mov
int3
cmp
addb
add
sub
fsts
add
xlat
insb
mov
add
ret
push
add
mov
movsb
add
add
mov
add
or
xlat
push
add
add
add
add
add
pop
in
sbb
mov
sbb
xchg
std
lahf
dec
push
sub
cmc
pop
outsl
or
sti
scas
dec
cltd
jb
or
pusha
add
cmp
add
pop
dec
adc
pop
repnz
js
add
adc
jmp
movsl
mov
add
cmpsl
sbb
cmp
sbb
das
cmp
cmp
adc
push
jge
add
pop
mov
popa
mov
cmpsb
add
add
divl
jp
push
add
adc
and
jne
pop
testb
add
add
icebp
ds
out
push
and
mov
fadds
add
ja
add
cmpsl
inc
add
rolb
cltd
js
add
jp
loopne
scas
or
mov
lods
data16
mov
rolb
xlat
jb
xchg
xor
mov
add
add
add
out
dec
clc
test
jnp
sub
add
pusha
add
ffreep
repz
dec
inc
push
mov
or
add
add
add
add
and
inc
sahf
jecxz
sbb
push
imul
int3
push
add
mov
fstps
in
mov
add
dec
xchg
mov
sbb
and
out
adc
addr16
cmp
dec
mov
add
lret
add
mov
mov
sub
add
sub
cli
mov
fadds
lea
xchg
insl
fisttpll
add
xor
cmp
cmp
or
and
mov
pusha
add
iret
push
xchg
add
adc
add
mov
sbb
jecxz
clc
data16
nop
add
icebp
dec
addb
lcall
fdivrl
fnstsw
add
add
fcomps
pusha
add
in
pop
out
unpckhps
ret
das
in
mov
xchg
add
pop
sti
inc
add
popl
add
adc
aaa
sbb
add
add
add
push
add
mov
adc
add
les
aas
pop
xchg
fisubrs
add
sbb
add
iret
jb
mov
sub
inc
add
stc
adc
jge
pop
push
add
or
add
mov
adc
pop
cmovne
adc
jne
add
jge
inc
add
xchg
add
mov
rolb
enter
add
into
mov
add
add
inc
lret
push
rolb
pop
push
outsb
mov
test
pop
jmp
add
add
add
scas
imul
add
add
inc
fwait
insl
mov
add
jns
dec
dec
cmp
add
mov
add
popa
test
add
dec
mov
mov
inc
add
loope
pop
fistps
pushf
jno
clc
gs
.byte
.byte
