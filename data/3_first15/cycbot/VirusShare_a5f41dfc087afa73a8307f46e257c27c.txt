add
xor
xor
mov
inc
inc
inc
inc
inc
inc
inc
adc
adc
adc
adc
adc
stc
inc
inc
inc
inc
inc
das
das
das
lcall
add
add
xchg
add
add
xor
add
add
sub
sub
sub
cmp
add
add
stos
stos
stos
stos
stos
stos
stos
add
add
add
ds
add
add
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
adc
adc
adc
adc
adc
adc
loopne
loopne
fs
pop
pop
pop
pop
mov
push
push
push
push
push
push
push
push
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
test
test
test
test
test
test
test
test
mov
add
add
add
pop
pop
pop
pop
pop
pop
pop
add
and
in
in
in
in
in
in
in
in
in
in
lahf
cli
cli
cli
cli
cli
cmp
mov
mov
sub
sub
sub
sub
add
add
add
add
push
push
push
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
add
add
add
add
int
int
int
int
pop
pop
pop
pop
push
push
push
push
or
or
mov
xor
xor
xor
xor
xor
xor
xor
push
push
push
mov
mov
test
test
test
test
add
add
add
add
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
in
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
add
mov
mov
jge
jge
jge
mov
mov
popf
popf
popf
popf
popf
incb
inc
inc
inc
inc
inc
inc
inc
inc
inc
popf
popf
popf
popf
popf
popf
cmp
xor
xor
xor
add
dec
dec
dec
dec
dec
es
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
sub
add
add
out
out
div
div
imull
dec
dec
dec
addr16
add
jb
jb
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
add
xor
xor
xor
xchg
xchg
push
push
pop
pop
pop
pop
pop
pop
add
add
add
add
cmp
cmp
cmp
cmp
xchg
insb
insb
insb
insb
add
and
and
and
and
and
add
add
xchg
xchg
xchg
test
test
test
add
add
add
lods
lods
lods
lods
lods
jae
jae
jae
ret
ret
ret
ret
sub
sub
sub
sub
cmp
cmp
dec
dec
dec
dec
mov
mov
aaa
aaa
outsl
outsl
outsl
sub
lea
pop
pop
pop
pop
cmp
cmp
cmp
cmp
cmp
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
sti
mov
mov
adc
adc
adc
adc
adc
adc
adc
xchg
cmp
cmp
rcl
mov
mov
lock
filds
add
add
add
inc
inc
inc
and
add
add
outsb
outsb
outsb
outsb
add
add
add
inc
inc
inc
inc
adc
adc
mov
test
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
sbb
sbb
mov
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
in
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
and
add
add
test
test
test
test
test
push
ds
stos
stos
stos
stos
stos
stos
stos
stos
stos
mov
mov
mov
mov
mov
mov
mov
add
add
add
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
jl
jl
jl
jl
jl
jl
add
mov
mov
les
add
add
add
add
imul
and
inc
inc
inc
inc
inc
inc
inc
cmp
sbb
sbb
add
mov
or
or
lcall
int3
int3
int3
cmp
cmp
cmp
cmp
into
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
test
fcmovu
fcmovu
fcmovu
fiaddl
add
add
add
add
mov
add
add
inc
inc
xor
xor
xor
jae
jae
inc
inc
inc
inc
add
add
jns
and
dec
dec
add
mov
addl
mov
mov
mov
mov
mov
mov
add
add
xor
xor
xor
xor
xor
fs
and
and
and
and
and
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
adc
adc
addr16
cld
cld
cld
cld
cld
add
add
cmpsb
cmpsb
aad
aad
test
add
cmp
cmp
imul
imul
es
push
push
push
push
push
sti
sti
sti
sti
sti
sti
sti
add
add
inc
inc
inc
stos
stos
stos
cs
std
adc
adc
adc
adc
ret
ret
add
add
add
dec
dec
add
add
add
add
popa
popa
popa
add
add
add
and
add
in
in
in
in
in
in
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
rol
rol
rol
fstp
fstp
fstp
fstp
fldl
add
cmp
sub
sub
sub
adc
push
push
push
push
push
push
rol
rol
rol
rol
rol
rcrb
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmpsb
cmpsb
mov
mov
xor
xor
xor
lods
lods
lods
lods
jge
add
jg
jg
ds
mov
add
jg
jg
jg
jg
loopne
loopne
inc
inc
inc
inc
add
jae
jae
mov
inc
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
and
and
mov
mov
or
or
add
int
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
or
or
or
or
or
or
rcl
rcl
rcl
push
push
push
push
push
push
push
push
push
push
push
push
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
or
or
or
or
or
out
out
out
sub
sub
add
add
xor
xor
xor
xor
int3
add
add
ja
add
mov
mov
out
ljmp
ljmp
or
xor
xor
xor
loop
loop
loop
loop
loop
loop
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
or
or
add
iret
iret
iret
add
add
pop
pop
pop
pop
aas
aas
aas
aas
aas
aas
div
divl
mov
mov
mov
mov
mov
mov
mov
aaa
aaa
aaa
aaa
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
stos
or
or
or
call
call
mov
sub
sub
add
in
in
in
in
in
in
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
cli
cli
cli
cli
loopne
loopne
loopne
lock
push
and
mov
mov
mov
mov
mov
push
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
pop
pop
pop
pop
pop
pop
ss
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
aad
add
add
add
add
jb
jb
add
add
add
add
add
and
and
push
push
push
push
push
push
push
push
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
ljmp
mov
xor
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xchg
cmp
push
lahf
fbld
and
and
and
and
and
sbb
sbb
add
add
push
push
push
push
push
push
cmc
cmc
cmc
cmc
xor
mov
mov
cmp
iret
popf
popf
popf
popf
popf
jns
xchg
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
mov
lcall
add
add
add
dec
dec
dec
add
jg
in
in
inc
inc
inc
rclb
or
or
or
xor
cmp
cmp
addb
lock
popa
popa
jbe
jbe
jbe
jbe
lret
lret
lret
xchg
sbb
sbb
add
pop
rcl
rcl
rcl
rcl
rclb
loopne
lcall
adc
sbb
sbb
sbb
sbb
add
push
push
push
push
push
push
sbb
sbb
sbb
sbb
sbb
sbb
jno
jno
adc
stc
stc
stc
stc
stc
stc
stc
cmp
cmp
cmp
cmp
cmp
out
push
push
push
fwait
adc
adc
out
out
mov
mov
mov
mov
mov
add
add
add
add
add
add
add
cmp
cmp
cmp
cmp
dec
sub
xchg
xchg
add
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
fwait
fwait
fwait
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
add
add
add
pushf
pushf
pop
pop
pop
pop
pop
pop
pop
pop
pop
ret
ret
ret
ret
ret
adc
icebp
icebp
icebp
icebp
jge
jge
jge
jge
jge
jge
lret
lret
lret
lret
lret
lret
pop
pop
pop
pop
hlt
hlt
hlt
hlt
hlt
hlt
hlt
hlt
mov
ss
cmp
cmp
cmp
cmp
stos
stos
aad
push
push
aad
aad
in
in
in
in
in
in
in
mov
fstp
fnsave
xor
xor
push
push
push
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
add
add
das
das
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
or
sbb
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
xor
and
and
mov
fsubs
and
clc
clc
clc
clc
clc
clc
clc
clc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
and
and
inc
inc
inc
aas
aas
aas
aas
aas
aas
adc
add
add
add
add
sbb
div
add
add
add
jmp
add
movsl
movsl
movsl
daa
jge
jge
jge
jge
jge
add
push
push
push
push
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
add
add
xchg
xchg
xchg
jno
push
push
add
fnstcw
adc
adc
adc
in
in
in
in
push
push
push
push
push
inc
inc
inc
add
add
adc
adc
add
add
out
out
out
leave
leave
leave
cmc
cmc
cmc
imul
jnp
jnp
jnp
jnp
jnp
jnp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
out
out
out
out
out
out
out
shlb
jae
jae
jae
jae
jae
jae
jae
jae
jae
mov
inc
inc
bound
cmp
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
ret
ret
ret
ret
ret
ret
ret
rcl
rcr
fimuls
or
fstp
fstp
mov
mov
mov
mov
inc
inc
inc
inc
add
add
sbb
sbb
sbb
loop
loop
loop
add
add
inc
inc
inc
sub
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
mov
mov
sti
sti
sti
sti
sti
sti
ss
add
pusha
push
add
add
add
add
add
dec
adc
cs
stc
stc
jmp
add
lock
lock
ret
ret
ret
add
add
add
add
add
add
add
add
add
add
add
icebp
out
out
out
out
out
je
or
or
or
scas
mov
mov
add
add
nop
add
add
add
rcl
rcl
rcl
rcl
rcl
rcl
shlb
es
pushf
pushf
pushf
ljmp
ljmp
ljmp
outsb
cmp
cmp
cmp
cmp
pop
pop
pop
pop
add
add
add
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
fildl
add
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
js
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
add
add
add
push
push
push
push
push
push
dec
dec
dec
dec
dec
dec
dec
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
movsb
stc
stc
stc
stc
stc
stc
stc
stc
stc
lock
jmp
jmp
add
add
addl
push
push
push
push
push
push
xor
xor
xor
movsb
es
jbe
jbe
gs
outsl
outsl
outsl
outsl
outsl
outsl
into
into
into
into
into
into
into
into
into
into
into
into
into
xchg
xchg
xchg
pop
pop
pop
pop
aam
lret
lret
lret
lret
imul
add
les
jle
jle
jle
jle
jle
loopne
loopne
loopne
loopne
into
into
into
into
into
mov
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xor
xor
xor
aad
aad
aad
fcmovnu
fcmovnu
fcmovnu
add
add
mov
mov
mov
hlt
fwait
fwait
fwait
fwait
fwait
add
add
add
push
push
dec
dec
dec
dec
fcomp
fmuls
xor
and
and
push
push
push
push
add
add
add
add
dec
dec
dec
dec
dec
push
push
push
push
push
push
jge
in
in
in
in
jle
jle
jle
jle
jle
jle
jle
jle
jle
jle
mov
jg
jg
jg
jg
mov
mov
out
add
add
cmp
fcomp
fcomp
fcomps
es
dec
dec
dec
dec
dec
dec
dec
dec
rcl
rcl
rcl
rcl
rcl
rcl
rcl
push
push
push
push
push
push
push
push
push
pop
pop
fs
sbb
sbb
sbb
sbb
jp
jp
jp
add
ja
ja
ja
ja
ja
into
into
into
into
into
into
into
into
into
into
inc
inc
inc
mov
mov
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
cld
add
add
mov
mov
add
add
add
repnz
pop
add
add
add
add
inc
lea
lea
lea
out
out
fisttps
std
std
std
std
std
std
std
std
scas
add
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
jl
add
add
add
enter
enter
xchg
and
and
das
das
das
mov
lret
and
xchg
xchg
xchg
xchg
mov
add
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
into
into
into
add
add
jle
test
mov
div
div
div
div
div
imul
or
or
push
aaa
aaa
aaa
aaa
aaa
add
add
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
xchg
xchg
leave
leave
leave
add
add
in
out
mov
mov
sbb
addl
inc
inc
inc
inc
inc
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
cmp
cmp
data16
cmp
add
add
jmp
mov
rcl
rcl
rcl
rcl
rcrb
add
add
xor
xor
mov
mov
mov
add
push
push
push
out
lcall
lret
scas
scas
mov
aaa
aaa
aaa
test
movsl
movsl
movsl
movsl
movsl
movsl
lods
lods
lods
lods
lods
lods
lods
lods
lods
aaa
aaa
aaa
aaa
aaa
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
pop
pop
pop
pop
pop
pop
pop
pop
addb
add
add
add
add
jmp
cmp
aam
les
rcl
rcl
rcl
fstp
fstp
dec
dec
dec
dec
insl
bound
ds
incb
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
jno
jno
or
or
or
test
test
jge
jge
jge
inc
inc
inc
inc
inc
inc
sub
add
add
into
into
into
in
in
jns
adc
adc
adc
sbb
adc
add
sahf
icebp
mov
mov
mov
add
add
fwait
fwait
fwait
fwait
dec
push
push
push
push
push
push
push
push
add
add
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
ljmp
sub
pop
aaa
add
add
addr16
mov
add
add
add
add
ljmp
ljmp
pusha
pusha
pusha
pusha
pusha
pusha
std
std
adc
adc
adc
adc
adc
in
in
mov
repz
aam
aam
aam
aam
hlt
hlt
pop
pop
pop
mov
mov
mov
inc
inc
inc
inc
inc
fildl
sbb
sbb
cmp
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
fsts
pop
pop
pop
pop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
and
and
and
and
ljmp
ljmp
jecxz
jecxz
inc
popa
popa
popa
mov
mov
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcr
jns
jns
jns
div
div
div
divl
jae
jae
jae
jae
jae
jae
aam
aam
add
add
add
add
push
push
push
cli
cli
cli
cli
inc
inc
ds
in
in
in
in
push
push
rcl
rclb
xchg
xchg
xchg
in
in
in
data16
daa
daa
daa
daa
daa
cmp
cmp
cmp
movsb
movsb
movsb
movsb
movsb
movsb
movsb
bound
bound
bound
bound
bound
bound
bound
push
push
push
push
push
push
push
push
push
push
push
add
inc
inc
inc
inc
inc
mov
mov
add
add
mov
mov
mov
mov
xchg
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
add
das
das
mov
ljmp
fwait
pop
pop
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
mov
mov
mov
mov
mov
hlt
hlt
hlt
hlt
hlt
hlt
in
mov
mov
pop
pop
pop
pop
pop
pop
pop
addl
add
addb
aam
mov
add
add
sti
sti
sti
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
mov
mov
lds
push
push
push
push
add
add
add
or
or
or
mov
add
ret
ret
ret
add
add
xor
xor
imul
outsl
outsl
outsl
lahf
ja
ja
ja
ja
ja
add
add
loope
loope
loope
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
popf
popf
int
int
cld
cld
cld
cld
sub
sub
lods
pop
pop
jns
ds
ds
dec
xor
xor
insl
insl
insl
add
add
add
add
add
in
in
in
in
in
in
add
add
add
mov
mov
bound
bound
and
push
push
push
push
push
fs
stc
add
push
insb
insb
insb
insb
insb
insb
insb
into
into
into
rol
rol
rol
rol
rolb
and
and
and
sbb
leave
leave
leave
push
push
push
push
push
push
push
push
push
push
add
mov
mov
mov
mov
stos
stos
stos
xor
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
lret
lret
xchg
xchg
xchg
xchg
xchg
imul
addl
jmp
sub
and
mov
insb
gs
xchg
xchg
xchg
xchg
xchg
xchg
fwait
mov
mov
mov
mov
mov
fstp
js
add
ss
mov
jl
leave
cmp
add
add
add
add
cwtl
cwtl
imul
imul
imul
imul
imul
dec
dec
dec
add
ljmp
ljmp
ljmp
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
xchg
xchg
rcl
shl
cmc
cmc
cmc
cmc
les
push
push
push
push
push
push
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
mov
addb
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
arpl
add
add
icebp
icebp
icebp
icebp
adc
adc
push
bound
bound
bound
bound
pop
pop
fmulp
int
int
int
int
int
int
int
int
int
int
int
adc
adc
adc
adc
lahf
lahf
add
aas
aas
aas
add
dec
dec
push
push
push
push
push
push
push
add
add
jno
jno
jno
jno
cmp
addl
out
out
out
out
out
out
out
out
out
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
mov
mov
jmp
aaa
aaa
aaa
aaa
stos
stos
stos
stos
stos
stos
xchg
xchg
xchg
loop
mov
mov
mov
mov
int3
int3
int3
dec
dec
dec
dec
dec
dec
dec
dec
dec
push
add
add
sub
adc
cmc
cmc
cmc
cmc
cmc
sbb
les
lods
lods
je
je
je
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
and
and
and
and
cmp
flds
add
mov
mov
mov
ss
xchg
cltd
cltd
cltd
cltd
cltd
loopne
loopne
loopne
add
add
mov
push
push
push
push
cmp
cmp
cmp
add
add
push
push
push
push
push
push
push
push
push
mov
mov
mov
jg
jg
jg
das
das
add
add
add
div
div
div
div
div
div
inc
inc
inc
inc
inc
inc
dec
dec
dec
dec
addl
mov
addr16
add
add
aaa
in
scas
scas
scas
scas
scas
scas
scas
scas
scas
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
cmp
outsb
mov
mov
mov
mov
mov
mov
fcomp
fcomp
fcomp
fadds
add
aas
inc
inc
inc
inc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
sbb
sbb
sbb
and
push
push
push
sub
lods
lods
lods
lods
lods
lods
out
out
out
out
out
out
out
out
out
leave
xchg
mov
mov
jo
jo
jo
jo
add
fstp
int
int
mov
mov
add
addb
add
add
add
mov
jge
jge
jge
jge
jge
jge
jge
jge
add
jl
jl
js
cmpsb
loop
loop
loop
loopne
loopne
imul
sbb
sbb
mov
pushf
rcl
rcl
rcl
rcrl
dec
dec
dec
dec
dec
cmp
add
add
add
xor
xor
xor
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
add
adc
adc
adc
adc
adc
adc
adc
adc
adc
lahf
mov
mov
mov
add
rcl
rcl
rcl
rcl
rcl
rolb
xchg
add
add
add
xchg
xchg
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
inc
leave
leave
leave
leave
leave
leave
ja
mov
mov
add
add
ds
cld
cld
cld
cld
cld
cld
cld
fiadds
andl
and
and
and
gs
fcmovnu
jl
int
clc
mov
inc
jo
cs
dec
dec
dec
dec
dec
dec
xchg
xchg
mov
mov
mov
test
test
push
push
jno
jno
jno
jno
lock
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
int3
int3
add
add
add
add
out
adc
adc
add
add
adc
adc
adc
add
jne
jne
jne
jne
mov
push
push
sbb
sbb
sbb
ss
div
div
div
div
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
arpl
push
push
push
pop
or
or
or
or
add
add
add
fwait
fwait
fwait
addb
div
notl
jbe
jbe
mov
loop
loop
dec
dec
dec
dec
dec
add
dec
dec
dec
jb
jb
jb
jb
jb
jb
dec
dec
testl
add
add
in
sbb
jns
rcl
rcl
rcl
rcrb
pushf
jp
add
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
mov
sub
sub
sub
sub
sub
inc
inc
inc
inc
inc
inc
add
fcmovnu
fcmovnu
fcmovnu
fucomi
add
add
push
push
push
push
push
push
jl
jl
add
add
or
hlt
hlt
hlt
adc
adc
adc
mov
mov
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
popa
pop
pop
pop
pop
pop
pop
pop
push
push
push
popa
popa
popa
popa
popa
or
or
jg
jg
jg
jg
add
fcmovnu
fildl
add
add
add
add
cmp
int3
int3
int3
int3
int3
int3
int3
int3
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
add
insb
insb
insb
insb
insb
add
jl
and
and
add
test
test
gs
pop
pop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
sbb
add
mov
add
rcl
testl
mov
xor
xor
sub
sub
fstp
fstp
fstp
or
or
ja
ja
or
or
mov
mov
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
fcmovu
fcmovu
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
or
or
or
or
or
or
add
or
fcmovu
fcmovu
fcmovu
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lea
lea
aam
aam
push
push
push
push
push
add
add
add
out
out
out
out
out
and
and
and
xor
bound
bound
xchg
rcl
rcl
add
add
loop
loop
loop
xchg
xchg
xchg
xchg
xchg
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jns
into
into
into
into
into
into
add
add
rol
rol
fcmovnu
ret
clc
clc
clc
clc
clc
clc
clc
clc
clc
dec
dec
dec
dec
dec
jle
jle
adc
adc
adc
enter
insl
add
add
div
test
ret
ret
mov
rcl
mov
test
add
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
scas
scas
scas
scas
scas
scas
scas
addb
hlt
hlt
hlt
hlt
hlt
hlt
add
add
add
addb
cmp
push
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
cmpsl
sbb
add
push
push
push
roll
add
add
add
insl
add
add
adc
adc
jb
jb
jb
add
add
add
mov
mov
mov
das
das
das
das
pop
pop
movsl
movsl
movsl
movsl
movsl
movsl
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
dec
dec
dec
popf
popf
popf
popf
popf
popf
fisttpll
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
sub
sub
sub
xchg
gs
outsb
outsb
outsb
outsb
outsb
adc
adc
adc
adc
adc
je
cld
cld
cld
cld
call
mov
addr16
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
js
js
js
js
js
add
add
add
clc
clc
clc
clc
add
or
or
or
lret
div
div
div
notb
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
cmpsl
cmpsl
addl
or
or
or
or
or
or
or
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
push
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
nop
nop
nop
cmp
movsl
movsl
movsl
gs
push
push
push
push
push
push
push
inc
inc
inc
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
add
and
and
and
std
push
push
push
push
push
push
pop
pop
pop
pop
aas
aas
aas
aas
aas
aas
aas
aas
add
add
add
cmc
cmc
cmc
test
test
test
mov
popf
popf
popf
sub
fnstenv
jb
jb
jo
add
lods
lods
lods
lods
push
push
add
jle
mov
inc
add
int
int
int
int
add
push
push
push
push
add
cmp
cmp
xchg
add
add
add
lods
lods
fstp
fstp
fstp
ffree
rol
add
jb
jb
jb
jb
xor
xor
xor
insb
insb
insb
insb
insb
insb
insb
insb
sub
inc
inc
inc
inc
inc
iret
iret
iret
iret
iret
iret
iret
out
out
out
sbb
sbb
jp
jp
jp
lret
lret
push
push
push
cmpsl
cmpsl
cmpsl
cmpsl
add
add
add
add
imul
mov
mov
mov
out
out
punpckhdq
sub
insb
insb
insb
insb
insb
insb
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
movq
outsl
outsl
outsl
outsl
out
out
out
out
out
out
out
out
out
out
out
out
add
iret
iret
iret
mov
add
add
add
jge
jge
jge
jge
jge
jge
jge
ds
pushl
and
and
and
cmp
cmp
add
add
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
daa
daa
daa
and
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
rcl
rcl
rcl
rcl
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
cli
mov
add
add
add
rcl
add
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
daa
daa
jb
jb
jb
jb
jb
jb
jb
sub
sub
sub
rolb
add
add
add
add
xor
lret
lret
lret
lret
lret
lret
lret
lret
pusha
inc
inc
add
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
cs
sti
sti
sti
sti
sti
sti
mov
js
js
add
add
lock
add
add
add
test
add
cli
cli
cli
mov
lcall
lcall
jnp
fidivrl
add
add
dec
dec
sbb
sbb
add
add
add
gs
add
add
lock
sbb
fisubs
add
cmpsb
or
or
or
out
out
mov
jge
push
push
push
push
push
push
cmpsb
cmpsb
cmpsb
add
pop
pop
pop
pop
pop
pop
mov
mov
add
fwait
fwait
fwait
fwait
fwait
jbe
andl
daa
daa
mov
idivl
push
adc
gs
loopne
mov
pop
nop
adc
fstpt
xchg
leave
outsb
and
inc
shlb
pusha
sbb
pusha
jmp
inc
or
repz
lret
push
ja
mov
xor
mov
xor
faddl
addb
dec
add
and
js
and
call
xchg
mov
adc
jg
movsl
shl
inc
push
sahf
jecxz
iret
arpl
xor
and
pop
mov
pusha
and
jo
xchg
int
cld
pop
jecxz
addb
sbb
push
and
scas
mov
andb
ljmp
pop
out
push
shll
mov
adc
pop
cmp
or
out
xchg
fs
ret
xchg
mov
dec
les
pop
jg
mov
xchg
jmp
xchg
outsl
xchg
cmpsl
dec
jns
lcall
rorl
out
xlat
jno
mov
dec
mov
shlb
sub
mov
xchg
cmp
sti
rorb
sbb
xor
ljmp
loopne
mov
rcrb
inc
jnp
stos
sub
pop
mov
cld
and
dec
or
ret
push
push
jno
mov
lcall
loopne
stc
seto
sub
sub
mov
ljmp
pop
fsubl
dec
adc
pop
xor
sbb
notb
scas
mov
xchg
subb
mov
xchg
pusha
add
inc
mov
sub
stos
loopne
sahf
push
add
andb
icebp
fwait
sub
push
leave
imul
jns
repz
push
mov
clc
outsb
fadds
mov
lret
out
rorl
sti
andl
loopne
push
pop
movsl
insb
push
dec
xor
mov
inc
repnz
mov
pop
or
inc
jno
xor
clc
push
rolb
mov
xchg
mov
pop
pop
in
add
cmp
jo
enter
andb
lods
std
and
add
pusha
aaa
aad
sti
mov
mov
mov
fsubs
sahf
jno
sbb
lock
cmp
inc
std
imul
push
inc
mov
aam
lea
jbe
pop
mov
add
xchg
add
and
jg
iret
bound
clc
lcall
rolb
ret
call
dec
mov
inc
pusha
aaa
jbe
pop
data16
push
add
and
mov
mov
out
or
adc
cmp
dec
jecxz
mov
popa
ret
ja
pusha
and
jno
push
pusha
rolb
rolb
and
jo
rol
ficomps
and
add
aam
and
pminsw
dec
mov
outsl
ja
pusha
or
adc
outsl
lahf
lcall
je
loope
int
in
xchg
loopne
sub
xchg
mov
mov
sub
sbb
out
dec
adc
testl
loopne
aas
lret
pop
or
ljmp
and
lock
jmp
iret
jne
scas
daa
jb
fistpl
sub
pop
aaa
cmp
add
rclb
pusha
or
notl
mov
dec
or
sub
add
rorb
fcos
lods
pop
dec
mov
rcr
fcoml
ja
idivb
add
loopne
pop
dec
inc
push
jno
xor
cmp
pushf
push
inc
fnsave
fdivrs
or
repz
loopne
xchg
icebp
xor
sti
ret
ret
jecxz
mov
add
fdivrs
pushw
stc
mov
lret
test
add
dec
and
adc
or
inc
and
or
cmp
inc
loopne
imul
dec
cltd
negb
lds
and
ret
scas
pusha
and
ja
add
in
inc
inc
xchg
mov
pusha
pusha
and
ss
xchg
xchg
gs
jnp
mov
sti
or
pusha
fcoms
hlt
inc
cmp
xchg
mov
ret
lret
rclb
inc
or
pusha
cmc
loopne
fdecstp
fildl
loopne
outsl
jg
inc
cmp
scas
mov
xlat
add
addb
dec
sub
and
jg
ret
stos
xchg
push
rol
cmp
xchg
das
fistpll
rol
outsl
jbe
cmp
outsl
xor
iret
lahf
scas
add
add
loope
mull
pop
mov
push
pusha
mov
bound
add
shrb
out
add
push
iret
add
cmpb
in
dec
mov
add
scas
scas
mov
pusha
mov
loopne
aaa
dec
movsb
add
mov
cmp
out
push
xchg
push
sub
pop
cmc
dec
jge
xchg
lret
fstl
loopne
repnz
sbb
andb
xchg
lret
add
add
insb
cwtl
shll
subb
pushf
push
jb
je
pop
cmove
fidivrl
out
hlt
jns
daa
inc
loop
xchg
cmp
or
xor
mov
push
dec
push
pop
insb
insb
mov
pop
or
cmpsl
inc
popf
jg
out
add
push
mov
sbbl
sahf
push
rol
jp
pop
ja
daa
adc
jno
shl
ret
mov
sahf
jb
xor
pop
scas
cld
and
test
inc
loopne
pusha
je
lods
loopne
fdivrl
pusha
inc
aaa
or
pop
pop
jns
mov
outsl
dec
xchg
ret
xchg
mov
andb
jbe
jg
mov
addb
rcrb
add
pusha
jg
add
jp
add
jge
add
and
outsl
orl
pop
or
rorb
call
pusha
addb
shrb
mov
mov
fisubrl
pusha
loopne
pop
pop
aad
mov
andb
cwtl
add
sbbb
xchg
pop
xor
outsl
int3
lret
mov
fstpl
xor
test
add
xchg
shrb
and
fnstenv
add
adc
add
sbb
add
shlb
cmpsb
pusha
loopne
add
inc
mov
in
mov
and
dec
ficompl
inc
cld
xchg
jg
loopne
daa
and
insl
cli
movsl
data16
sub
imul
add
add
push
xor
jl
push
mov
pushf
insl
jecxz
mov
mov
lret
nop
cmpsl
stos
stos
inc
inc
xor
cmp
dec
sub
and
jmp
addb
out
js
and
inc
ds
mov
mov
jle
cmp
or
add
orb
mov
into
cmc
xchg
cmp
sub
jbe
jl
pop
pop
imul
xchg
mov
xor
and
rolb
dec
lret
shl
push
mov
and
jno
sub
loopne
aad
hlt
dec
cwtl
dec
jp
and
notl
mov
insl
fldt
fcmovnbe
das
sbb
cmp
adc
sbbl
and
push
add
cmp
add
loopne
mov
sbb
imul
je
inc
add
pusha
add
push
repz
cmp
and
loopne
mov
adc
and
sub
in
les
push
add
dec
add
inc
adc
add
and
enter
sub
xor
xor
pop
in
cmp
cltd
es
and
je
out
mov
push
mov
loop
jmp
out
dec
sbb
mov
gs
cmpsl
cmp
push
mov
pusha
incb
push
cltd
out
stc
inc
jl
cltd
inc
and
mov
push
and
sbb
pusha
subb
pop
push
andb
cmp
adc
int
div
mov
adc
inc
shrb
sub
add
cli
mov
mov
xchg
dec
mov
repnz
xchg
repnz
lds
push
cltd
sbb
rol
sarb
inc
xor
add
leave
pop
call
addr16
xor
call
mov
mov
mov
iret
inc
test
adcl
out
pop
push
aaa
daa
bndldx
xchg
leave
testb
sub
aas
dec
fbld
inc
pusha
xchg
add
addb
test
subb
fidivl
xor
cmp
xchg
jo
xor
rcrb
out
iret
mov
add
xor
lret
test
shlb
inc
inc
push
into
mov
int3
sti
or
xor
outsb
jmp
pop
adcl
and
add
dec
imul
push
and
addr16
cmp
xchg
push
add
inc
test
js
adc
jbe
andb
jecxz
sbb
addb
and
ret
scas
andb
imul
jae
mov
sub
lods
sbb
ror
jne
insl
xor
imul
mov
inc
shlb
sub
mov
pop
cld
xor
jno
iret
add
mov
adcb
lods
and
mov
cmpl
adc
and
jb
add
loopne
sbb
dec
add
pusha
fwait
in
jo
inc
and
movsl
test
and
andb
pusha
mov
dec
fistpll
call
and
xchg
je
andb
pop
outsl
cwtl
add
mov
out
mov
pop
or
and
fwait
pushf
pushf
push
push
iret
ret
mov
loopne
stc
movsl
cli
dec
fucomp
inc
push
loopne
push
push
pop
add
add
add
adc
rolb
mov
mov
addb
inc
rorb
adc
shl
xor
mov
mov
sbbb
or
mov
fs
cld
dec
sub
rclb
iret
adc
and
mov
and
mov
or
push
int
cmpsl
push
int3
cmpsl
repz
add
jp
or
pop
pop
mov
pop
roll
inc
adc
inc
daa
addb
daa
pop
fldenv
mov
add
mov
stos
rorb
pop
int3
fstpt
push
mov
sbb
gs
push
xchg
adc
push
adc
into
xchg
xchg
pop
sbb
lret
das
and
ja
ret
xchg
and
inc
iret
popa
arpl
rolb
lock
aad
enter
addb
push
and
das
and
and
mov
ret
ss
iret
decl
stos
shlb
and
rolb
ja
inc
inc
xchg
add
add
roll
mov
push
pusha
xor
pop
mov
add
iret
scas
mov
dec
and
shll
lahf
mov
xlat
stc
pop
xchg
pop
dec
divb
cltd
cwtl
jae
push
dec
shlb
add
adcb
sti
ja
xor
jp
sbb
add
push
and
sbb
shr
dec
mov
lret
and
mov
outsb
shrl
jns
pop
push
add
jae
inc
loopne
imul
inc
and
rcrl
and
rcrb
das
push
and
cmp
cwtl
cld
pop
lds
xor
adc
push
aas
mov
fstpt
dec
gs
lret
dec
movsb
loopne
fldt
mov
sbb
pop
push
inc
push
sbb
out
xchg
mov
and
test
inc
shrl
jns
sti
or
mov
ret
fildl
addb
ret
inc
pop
dec
lahf
mov
fcmovbe
mov
inc
andb
mov
adc
mov
pusha
and
pusha
orb
bound
xchg
xor
mov
cli
mov
pop
dec
adc
lahf
cld
jbe
ja
sub
inc
addb
inc
fcmovnb
adc
jg
call
and
rcrl
ret
std
mov
inc
scas
shll
mov
cmp
daa
jne
jge
fnstenv
mov
pusha
jno
mov
or
push
mov
testl
add
test
inc
push
stos
lods
mov
lock
push
xchg
jg
sbb
cltd
fmull
inc
inc
clc
cltd
or
inc
xchg
iret
adc
and
dec
sbb
popa
ret
push
in
sub
pop
push
cmp
xchg
add
shlb
inc
inc
adc
adc
andb
or
and
lcall
out
icebp
sbb
das
lea
mov
mov
leave
rcll
nop
pusha
jg
and
fisttps
dec
loop
mov
rclb
mov
mov
sbb
insl
sbb
sub
pusha
jae
push
dec
push
xor
aas
pop
repz
adc
test
inc
push
add
pop
cmp
mov
add
adc
ljmp
loopne
mov
andb
imul
and
stos
andb
and
jg
push
mov
hlt
sbb
or
rclb
subb
sbb
inc
pusha
pop
fisttpl
loopne
aaa
std
sbb
andb
add
mov
xchg
lret
mov
or
sarb
mov
pusha
into
fildl
cmpsl
add
vmwrite
popf
add
and
push
adc
cmp
and
add
and
xchg
mov
mov
fwait
add
mov
add
cmp
adc
sahf
mov
xor
pop
cld
loopne
dec
jl
add
je
stos
pusha
rolb
or
add
add
stc
mov
jmp
mov
sbb
sarl
xor
int
cmc
ret
negl
and
jnp
shlb
push
int
sahf
les
cmp
push
mov
in
nop
out
mov
movsb
add
add
add
push
inc
pop
nop
pop
pop
cmp
loopne
push
int3
enter
add
dec
add
rolb
shr
and
jmp
sbb
inc
loopne
les
and
mov
and
push
shl
lahf
inc
call
xor
push
mov
add
pop
xchg
mov
lcall
jns
or
cmp
fwait
out
xchg
clc
xchg
insl
scas
mov
or
xor
inc
fldcw
repz
pop
out
scas
mov
mov
shrb
je
jnp
inc
cmp
sub
xchg
inc
inc
sub
pusha
mov
outsb
mov
mov
loopne
mov
test
sub
addb
loopne
fwait
adc
jl
mov
cwtl
movsl
lret
sub
call
shl
ds
and
push
stos
in
push
in
and
mov
mov
test
and
inc
sub
jno
lret
je
loopne
mov
dec
and
push
xor
add
cltd
inc
push
push
mov
add
or
loopne
xor
mov
push
mov
adc
mov
sti
popa
and
pusha
fisubl
movsb
add
xchg
hlt
lahf
je
filds
xor
dec
imul
and
mov
add
loopne
push
mov
int3
push
std
lods
pusha
loopne
addr16
inc
mov
test
sub
and
test
sub
mov
sub
or
mov
xor
jbe
or
add
sbbl
cmc
mov
gs
inc
mov
popa
jnp
and
adc
les
cmp
in
fimull
inc
mov
add
push
jo
loopne
shlb
and
shlb
dec
dec
xchg
loope
shlb
popa
iret
call
or
pusha
xor
mov
inc
mov
or
movsb
and
icebp
jl
aam
scas
and
adc
scas
rol
dec
stos
loopne
jno
mov
loopne
ror
cld
in
jno
pop
jne
clc
out
addb
jp
and
arpl
mov
ljmp
fidivrl
inc
mov
fucom
dec
sbb
inc
xchg
push
pusha
loopne
cmp
movsl
adc
jmp
loopne
push
dec
push
inc
lahf
xchg
scas
add
and
data16
inc
or
mov
xor
insb
hlt
mov
inc
push
add
mov
les
leave
push
add
and
les
push
fcomp
inc
gs
cmp
cmp
lahf
arpl
fdivrp
sub
xchg
loopne
ret
jle
popf
and
inc
cmp
imul
mov
jno
mov
mov
loopne
push
or
inc
mov
mov
rorb
mov
jp
inc
shll
call
test
and
fs
imul
inc
mov
cli
adc
pop
pusha
mov
fistpl
pop
stos
cli
cmpsb
loopne
mov
iret
fadds
and
pop
inc
insb
js
jns
out
insb
ss
jae
jbe
cld
cmc
sub
pusha
lcall
subb
mov
addb
loopne
xor
repnz
add
leave
les
cmp
into
pop
inc
das
stos
andb
fcomp
ss
jg
dec
std
xchg
int
inc
mov
addb
ret
mov
inc
sbb
add
stos
imul
rep
inc
mov
and
jecxz
lods
js
dec
leave
cld
pop
xchg
and
fdivl
jae
pop
push
inc
cmp
sub
sbb
or
cmp
push
push
cmpsl
jno
call
inc
outsb
fmuls
shlb
sub
loope
mov
push
daa
aad
adc
ret
insb
test
xchg
in
aaa
jmp
insl
divl
sbb
or
mov
ret
insb
test
loopne
out
pop
push
andb
and
mov
cmc
jp
and
repz
nop
xor
out
sti
popf
icebp
pop
mov
inc
icebp
popfw
xor
pushf
stc
sti
mov
aam
mov
xor
pop
scas
xor
rcl
and
inc
push
push
or
xchg
mov
shlb
inc
xchg
cmpsl
add
inc
pop
cmpsl
inc
inc
jbe
mov
mov
push
or
loopne
test
pusha
inc
sbb
loopne
movsb
mov
xchg
xchg
cmp
xchg
arpl
mov
shlb
call
ret
lds
ret
pop
pop
jmp
adc
mov
sbb
and
pop
addl
pop
out
shlb
aam
or
andb
inc
jp
shlb
inc
dec
xchg
mov
shlb
fwait
cld
adc
pusha
pusha
fwait
addb
dec
cmp
int3
aam
mov
pusha
shrb
xor
xor
gs
push
hlt
ficoms
out
or
mov
jge
xor
sbb
in
sub
push
lea
push
pushl
xor
pushl
mov
call
test
je
push
lea
push
push
call
add
lea
push
pushl
movl
pushl
pushl
pushl
call
cmp
jge
push
call
mov
pop
leave
ret
cmpw
jne
cmp
je
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
lea
push
pushl
pushl
pushl
call
test
je
mov
pop
ret
or
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
sub
jne
xor
push
push
pushl
pushl
call
pop
ret
dec
jne
xor
inc
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
pushl
pushl
pushl
call
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
dec
jne
call
mov
cmp
je
jmp
cmp
je
push
call
jmp
xor
jmp
nop
nop
nop
nop
nop
mov
movzwl
shr
and
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
mov
cmp
je
jmp
nop
add
xor
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
xor
push
mov
call
mov
mov
call
mov
mov
mov
mov
cmp
je
movzwl
test
jne
cmp
je
cmp
jne
cmp
jne
movzwl
cmp
jne
cmp
jne
mov
mov
cmp
jbe
add
mov
cmp
je
cmp
je
cmp
je
cmp
jne
cmp
jne
mov
andl
jne
mov
cmp
jne
pushl
mov
pushl
pushl
push
push
pushl
call
mov
mov
cmp
mov
jne
call
testb
jne
pushl
call
pop
pop
pop
leave
ret
nop
nop
nop
nop
nop
push
push
call
xor
mov
mov
mov
call
mov
mov
mov
cmp
push
push
call
mov
jmp
lea
push
mov
call
mov
jmp
lea
push
mov
call
mov
jmp
lea
push
mov
call
mov
jmp
lea
push
mov
call
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
lea
push
push
pushl
call
test
jl
lea
push
call
mov
mov
mov
mov
neg
sbb
and
mov
xor
inc
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
lea
add
cmp
ja
mov
mov
testb
jne
testb
pop
jne
xor
inc
pop
ret
nop
nop
test
cwtl
jbe
scas
jbe
and
jbe
and
jbe
lcall
jbe
lcall
jbe
cmc
cwtl
jbe
scas
jbe
lcall
jbe
cmc
cwtl
jbe
scas
jbe
sbb
jbe
and
jbe
repz
jbe
scas
jbe
sbb
jbe
sbb
jbe
sbb
jbe
cmc
cwtl
jbe
lods
jbe
sbb
jbe
or
jbe
lcall
jbe
cmc
cwtl
jbe
lods
jbe
sbb
jbe
sbb
jbe
lcall
jbe
lcall
jbe
push
cltd
jbe
lods
jbe
sbb
jbe
sbb
jbe
sbb
jbe
sbb
jbe
lcall
jbe
push
cltd
jbe
lods
jbe
pop
cltd
jbe
lods
jbe
sbb
jbe
sbb
jbe
sbb
jbe
push
cltd
jbe
stos
jbe
sbb
jbe
push
cltd
jbe
stos
jbe
or
jbe
stos
jbe
sbb
jbe
push
cltd
jbe
stos
jbe
and
jbe
and
jbe
sbb
jbe
or
jbe
stos
jbe
adc
jbe
sbb
jbe
lcall
jbe
and
jbe
lcall
jbe
lret
push
push
pop
dec
push
push
push
xor
dec
dec
push
dec
inc
dec
pop
inc
dec
dec
dec
inc
inc
push
dec
dec
dec
pop
pop
outsb
gs
nop
nop
nop
push
push
pop
dec
push
push
push
xor
dec
dec
dec
inc
inc
push
dec
dec
dec
pop
pop
dec
outsb
imul
add
push
jo
push
jb
outsb
jae
gs
je
jo
jb
fs
je
popa
insb
jae
nop
nop
nop
dec
pop
push
jo
push
jb
outsb
jae
jb
gs
je
jo
jb
fs
je
popa
insb
jae
nop
nop
dec
pop
push
jo
push
gs
jns
outsl
inc
insb
imul
push
jne
add
push
jo
push
jb
js
dec
gs
outsl
outsb
outsb
arpl
outsb
add
push
jo
inc
gs
jo
push
jb
js
add
je
push
outsb
fs
fs
je
data16
gs
outsl
outsb
jae
add
push
push
pop
push
jne
outsb
dec
outsb
dec
data16
gs
insb
imul
nop
dec
push
push
push
pop
push
jns
arpl
outsb
add
push
pop
push
jns
arpl
arpl
nop
nop
dec
push
push
push
pop
push
gs
popa
jae
inc
jne
data16
outsl
inc
jb
add
inc
add
call
ret
in
incl
add
add
add
add
incl
add
add
sub
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
sub
push
push
lea
push
push
push
call
test
jl
cmpl
je
mov
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
pushl
lea
push
call
test
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
mov
lea
push
call
mov
pop
leave
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
xor
testl
jne
testb
jne
pushl
push
call
xor
inc
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
cmpl
je
pushl
pushl
push
call
test
jl
xor
inc
pop
ret
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
pushl
push
call
jmp
movl
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
push
push
cmpl
jne
andl
push
push
pushl
pushl
pushl
pushl
pushl
pushl
call
cmpl
mov
jne
mov
pop
leave
ret
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
mov
test
jne
pop
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
cmp
je
cmp
je
cmp
je
cmp
je
cmp
jne
jmp
mov
jmp
mov
jmp
lea
lea
cmp
ja
or
jmp
lea
lea
cmp
ja
or
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
mov
mov
mov
and
or
shl
mov
mov
jmp
nop
nop
nop
nop
nop
mov
push
mov
pop
jmp
nop
nop
nop
nop
nop
jmp
mov
jmp
mov
mov
jmp
nop
nop
nop
nop
nop
jmp
mov
lea
jmp
cmp
jne
jmp
push
jmp
testb
jmp
call
jmp
mov
mov
cmp
je
mov
mov
mov
pushl
push
mov
pushl
call
mov
mov
cmp
je
mov
mov
test
jne
addw
lea
push
lea
push
push
lea
push
lea
push
push
call
mov
cmp
jne
cmpl
adc
out
push
stc
std
insb
scas
pusha
mov
mov
sbb
int3
movsl
dec
add
lret
imull
sub
mov
rcrb
cli
not
push
sbb
ljmp
add
loopne
and
jg
add
xor
shlb
and
jmp
mov
lds
shlb
add
dec
pop
scas
inc
shlb
inc
scas
addb
or
cmp
mov
lret
testl
stos
testb
and
scas
nop
mov
sar
cld
sub
incb
icebp
mov
mov
dec
inc
jbe
pushf
sub
xchg
dec
inc
in
or
add
add
negl
int
dec
loope
jns
or
shlb
or
pusha
into
xchg
outsb
and
sub
push
jg
dec
outsb
addr16
push
and
mov
sarb
js
xor
iret
xchg
cltd
fwait
es
add
pusha
xchg
lret
rclb
hlt
mov
scas
movsl
pop
lcall
xor
mov
cwtl
mov
jp
adc
mov
rcrl
sbb
int3
and
and
jnp
fdivrs
pop
push
inc
inc
xor
cld
jl
adc
jo
or
fisubl
push
fs
pusha
ficoms
stos
cmp
loope
sbb
fisttpll
jnp
xor
in
mov
addr16
movsl
movb
fistpll
std
fdivrp
ret
lret
sbb
inc
push
pusha
and
mov
ds
fsubl
js
or
inc
iret
pop
xchg
sbb
loopne
iret
sbb
adcl
lcall
dec
dec
ret
push
sbb
arpl
xchg
jp
inc
xchg
mov
adc
xchg
push
addb
loopne
add
inc
stc
jl
mov
or
test
loopne
and
inc
add
andb
xchg
ljmp
movl
pop
test
pusha
sub
int3
dec
cmp
pusha
lret
and
out
lret
pop
les
xchg
and
xchg
arpl
add
dec
out
pusha
mov
mov
inc
jecxz
sub
cmpsb
pusha
inc
mov
pop
dec
hlt
popa
je
repnz
or
mov
jne
push
mov
pop
in
jbe
out
sahf
mov
add
and
shlb
cmc
scas
and
shl
daa
push
lods
loopne
sahf
sbb
mov
addb
insl
mov
rcrb
int3
loopne,pn
mov
and
inc
out
cld
xchg
mov
dec
rorl
ret
test
insb
sbb
loopne
iret
cmc
cmp
dec
push
movsb
loopne
je
adc
sub
add
outsl
mov
shl
ja
pop
cmp
sub
orb
iret
xor
and
or
and
pop
daa
and
loopne
inc
fsubrl
rol
mov
stc
popf
inc
scas
mov
and
and
pusha
mov
mov
inc
and
mov
cmp
loope
fwait
mov
mov
inc
and
dec
ffree
sub
push
rolb
fnstenv
mov
testb
pop
or
xorb
jmp
shlb
mov
pusha
loopne
lret
aaa
add
pop
in
xor
mov
addb
rol
testl
mov
mov
jmp
pop
jno
mov
and
ret
jmp
popf
addr16
insb
fisubrs
shlb
cmpsb
mov
and
mov
in
cwtl
imul
jg
imul
push
iret
mov
or
sbbl
cld
mov
fists
push
mov
loopne
inc
lea
jns
fwait
insb
xchg
inc
test
addb
jge
sub
in
stos
andb
pusha
or
movsb
inc
pusha
mov
sbbl
mov
in
lea
andb
scas
pusha
shlb
add
fldl
adc
inc
ficoms
xchg
jecxz
pop
mov
adc
jmp
inc
adc
cmp
mov
mov
mov
mov
pusha
xor
addb
js
xchg
stc
gs
leave
in
ds
ljmp
adc
push
lahf
int3
xlat
fstpt
movsb
pusha
pusha
add
loopne
or
and
int
mov
add
daa
lods
loop
out
sbb
cmp
in
rcrb
add
stos
lret
inc
fcoms
je
test
push
fdivrl
add
jnp
inc
pop
test
sarb
jmp
mov
sti
mov
lret
jl
or
fcmovnbe
lock
cmc
mov
sbb
test
push
mov
and
fst
enter
pusha
outsb
rorl
push
pusha
mov
sub
mov
inc
test
lock
and
and
popa
aas
sti
xor
push
pop
push
pop
jne
xchg
push
lret
mov
das
inc
jp
cmc
push
lods
add
insl
shlb
inc
pusha
lods
and
iret
psrad
and
mov
mov
repnz
inc
sbb
dec
dec
fucomip
in
mov
mov
hlt
pop
inc
addb
fwait
divl
das
or
and
sbb
stc
and
inc
sbbb
fdivl
std
add
pusha
xor
jmp
push
stc
sbb
and
jmp
mov
jns
scas
mov
mov
cld
inc
or
arpl
pop
addr16
pop
outsl
popa
aad
xchg
and
add
add
inc
rclb
adc
or
sub
fwait
inc
fisttpll
inc
pusha
lds
add
dec
popf
loopne
sbb
dec
addb
pop
xchg
jns
fdivs
jnp
mov
dec
mov
xchg
sbb
dec
popf
cmp
shl
xor
mov
adc
inc
loopne
sarb
aas
add
aas
adc
rol
shlb
pusha
pop
pop
rolb
sbb
cltd
pop
imul
pop
repnz
dec
mov
pusha
add
pop
mov
pushf
dec
fisubrs
lods
pusha
andb
jbe
mov
mov
cmc
icebp
aaa
dec
nop
rcr
push
and
cmp
fldt
inc
popa
ret
add
mov
cmpsl
mov
nop
jle
aas
andl
sbb
rcl
mov
lock
pusha
das
push
or
pusha
loope
jmp
mov
sub
jbe
imul
rclb
in
cmp
pop
cmp
and
xchg
fisubs
push
xchg
jae
movsb
pusha
add
dec
aas
clc
hlt
cmc
mov
lock
or
sbb
sub
fcmovne
xchg
fsubr
xchg
pop
push
lock
xlat
repz
test
and
inc
mov
push
shl
push
or
cmp
xor
inc
add
popf
stc
frstor
inc
sub
loopne
inc
gs
fbld
cmp
loopne
sahf
adc
add
pusha
cmp
push
add
es
mov
subb
inc
subl
movl
loopne
roll
sub
roll
mov
inc
cwtl
cld
pop
sub
incl
sub
cmpsb
pusha
mov
rolb
add
loopne
test
pushf
scas
addb
dec
add
inc
jl
and
add
cmp
or
fildll
and
test
adc
lea
inc
pop
cmc
cs
rclb
inc
mov
andb
or
addb
xchg
adc
pushf
mov
push
addb
decl
int
pop
or
pusha
sarb
jmp
add
ret
add
insb
das
cwtl
jmp
shrl
mov
pop
dec
and
xchg
jbe
inc
add
das
out
into
xor
js
xor
xlat
out
lahf
mov
aas
inc
dec
les
andb
fidivrl
inc
int3
lret
mov
loopne
mov
mov
or
loopne
repz
movl
jp
dec
movsb
rol
lret
gs
lahf
sbb
cli
out
add
pusha
das
push
loope
fstp
jo
addb
mov
cmp
or
repnz
out
test
lret
or
loopne
decb
loopne
jo
mov
sub
cmpsb
addb
mov
ss
aam
aaa
leave
push
mov
pop
fsubrp
jl
cli
push
and
adc
mov
and
mov
arpl
pop
push
jge
loop
cmpsb
inc
mov
daa
add
xchg
outsb
out
mov
adc
packsswb
adc
sbb
imul
lea
pop
dec
jecxz
pop
je
in
xor
jno
das
pusha
jmp
mov
mov
jns
sub
mov
inc
repnz
mov
lods
in
sbb
and
lret
dec
mov
in
cmp
fisttpll
cmpsb
and
adc
inc
sbb
jle
popf
mov
sti
xlat
push
pusha
and
inc
frstor
mov
aad
and
addl
push
jecxz
aam
out
pop
addr16
mov
and
out
sahf
mov
fidivl
icebp
lahf
ret
lret
hlt
out
adc
das
and
negb
mov
sub
loopne
xor
loope
repnz
out
push
sbb
in
sahf
xchg
outsb
fsubl
pusha
push
and
pop
and
shlb
mov
inc
nop
das
stos
fstpl
pop
or
xchg
pusha
or
dec
dec
xchg
or
mov
mov
outsb
daa
push
das
mov
loopne
loopne
jl
cltd
adc
push
stc
cmp
scas
out
mov
mov
inc
and
sub
and
je
pop
in
add
and
fwait
cld
test
out
xlat
cmp
add
shr
inc
mov
mov
cmp
fstpl
pop
pop
shll
inc
loopne
or
cmpsl
stos
push
mov
out
mov
loop
loop
pusha
loopne
xchg
add
add
xor
jno
add
add
mov
sub
inc
jns
mov
scas
pusha
andb
scas
jb
leave
lret
movb
dec
fnsave
mov
stos
inc
test
add
imul
and
add
dec
sub
dec
subl
add
outsl
inc
pushf
sbb
add
push
lock
and
pop
inc
jno
out
addb
sub
push
pop
out
gs
push
sub
subb
lret
mov
push
push
lea
adc
sbb
sbb
jle
mov
and
shr
or
andb
into
inc
adc
pusha
xorb
xchg
push
sti
adc
or
loopne
pop
xor
fdivr
pop
and
and
in
dec
in
mov
mov
add
into
xor
xchg
sarb
fisttps
mov
and
cmp
clc
sahf
rcrb
push
popa
fcmovnb
dec
daa
lds
mov
aas
gs
insb
hlt
rcrl
jbe
sbb
sar
mov
shlb
inc
call
inc
stc
mov
jbe
stos
add
loope
pushf
jo
fcoms
andb
lock
mov
mov
sub
add
pop
enter
sub
cltd
mov
loopne
in
rcrl
shl
ret
xor
sub
inc
fisttps
inc
sarb
les
push
fsts
rol
xchg
dec
pop
in
aas
rorl
idivl
addl
in
sub
pusha
inc
cmpsb
and
push
pop
add
mov
inc
rcll
in
pop
loop
repz
icebp
fisttpll
bound
insb
xchg
xchg
xorl
and
sahf
loopne
insl
bound
push
push
cmpl
pop
sarb
rolb
push
pusha
pusha
addb
push
and
test
rcr
fistl
enter
add
out
sub
and
bound
loopne
adc
or
adc
push
mov
sub
xchg
fstps
clc
jmp
add
rorb
push
adc
iret
xchg
aad
cli
pop
js
pusha
orb
out
xor
out
mov
cmp
cwtl
testb
int
sti
in
imul
stos
fucomp
mov
lret
xor
pop
in
inc
enter
scas
loopne
std
jae
cli
push
inc
rcll
mov
js
mov
mov
dec
push
jb
jecxz
outsl
ret
xlat
cmp
mov
setle
ja
xor
and
mov
cmc
push
inc
int3
jae
mov
daa
mov
jo
mov
mov
jge
add
mov
inc
push
shlb
cmpsb
addb
lret
push
cmp
ja
fsincos
xor
jae
adc
mov
hlt
mov
lret
push
and
aaa
adc
addb
inc
andb
push
dec
movsl
and
add
mov
push
addr16
and
ja
adc
ja
cmpsb
add
ret
insb
mov
cli
ret
shll
mov
addb
dec
push
imul
aad
in
xor
xchg
js
push
inc
pusha
das
aam
movl
pop
pusha
cmp
cmp
pop
push
mov
aas
rclb
ljmp
xlat
lret
les
mov
aad
mov
dec
push
pop
inc
pop
lahf
add
clc
outsb
movsb
loopne
add
int
push
pop
adc
jae
add
cwtl
mov
push
cmp
mov
rol
nop
xchg
loop
call
lock
loopne
rorl
add
aad
clc
sub
push
mov
addb
loope
jl
or
pop
ret
xchg
or
pop
and
and
int3
addb
int
scas
pusha
inc
push
fdivs
nop
push
mov
mov
dec
pop
adc
push
xchg
andb
add
shr
je
andb
dec
jo
and
inc
dec
push
shlb
loopne
loopne
push
roll
add
mov
nop
cld
jae
add
cld
inc
outsb
lea
in
leave
nop
jmp
add
xchg
add
repnz
mov
mov
xchg
ret
add
add
or
rorb
ficompl
adc
andb
mov
push
mov
xchg
ret
xchg
add
clc
add
add
mov
nop
push
mov
leave
nop
jmp
clc
loop
mov
add
nop
clc
repnz
cld
jae
add
lret
leave
add
adc
repnz
cld
jae
add
inc
mov
mov
jae
inc
add
mov
leave
roll
add
dec
sub
push
mov
xchg
ret
inc
push
add
add
jbe
ret
add
nop
clc
repnz
cld
jae
dec
sub
add
inc
add
mov
leave
nop
jmp
add
add
les
add
add
nop
jmp
loope
sub
ret
nop
clc
repnz
cld
jae
xlat
xchg
sub
lods
xorl
es
nop
clc
repnz
cld
jae
add
add
xchg
inc
jbe
in
mov
nop
clc
repnz
cld
jae
add
add
je
inc
add
add
imul
push
nop
clc
repnz
cld
jae
repnz
hlt
call
add
repnz
cld
jae
add
mov
clc
repnz
cld
jae
dec
add
add
repnz
icebp
add
push
mov
xchg
ret
leave
add
add
add
jle
div
nop
push
mov
leave
nop
jmp
or
add
dec
add
add
xlat
xor
nop
push
mov
leave
nop
jmp
imul
mov
ret
jmp
add
add
add
cmp
add
int3
hlt
add
add
xchg
pushl
push
mov
xchg
ret
loope
dec
sub
add
pusha
mov
repnz
cld
jae
das
repnz
loope
leave
inc
fimuls
movswl
nop
clc
repnz
cld
jae
dec
add
inc
dec
imulb
push
mov
leave
nop
jmp
loope
cld
jmp
push
xlat
popl
nop
clc
repnz
cld
jae
nop
add
add
add
mov
nop
clc
repnz
cld
jae
sub
add
push
mov
push
mov
xchg
ret
mov
shr
mov
jbe
push
push
mov
xchg
ret
xchg
repz
int3
or
xlat
add
and
or
nop
cld
jae
jmp
inc
push
or
xchg
cmpl
nop
push
mov
leave
nop
jmp
add
add
dec
stc
pop
nop
clc
repnz
cld
jae
add
int3
add
leave
cld
nop
xor
clc
repnz
cld
jae
add
inc
add
sub
fldpi
push
mov
xchg
ret
add
sub
inc
add
jo
mov
mov
xchg
ret
repz
add
int3
addl
jb
sbb
nop
cld
jae
add
leave
xchg
add
rolb
call
inc
add
loop
int3
les
xor
add
jae
loope
mov
lret
inc
or
clc
repnz
cld
jae
add
popl
loop
ja
nop
clc
repnz
cld
jae
roll
add
mov
fwait
inc
add
jbe
cld
add
insl
lea
nop
push
mov
leave
nop
jmp
xchg
add
add
lret
mov
nop
clc
repnz
cld
jae
mov
add
xlat
leave
add
push
push
mov
xchg
ret
xchg
add
add
mov
mov
push
nop
clc
repnz
cld
jae
roll
cld
add
jmp
clc
fldl
imul
add
test
nop
push
mov
leave
nop
jmp
nop
add
add
das
das
adc
out
clc
nop
clc
repnz
cld
jae
repz
add
add
stos
push
mov
xchg
ret
add
mov
mov
xchg
imul
fld1
nop
clc
repnz
cld
jae
add
leave
push
loop
cld
and
add
clc
repnz
cld
jae
add
sub
leave
add
in
leave
nop
jmp
mov
xchg
sub
mov
divb
add
add
jbe
inc
xchg
add
push
push
stos
movzwl
nop
clc
repnz
cld
jae
xchg
rcl
dec
rcr
jne
nop
clc
repnz
cld
jae
dec
jmp
add
int3
add
pusha
and
call
jae
add
push
mov
xchg
ret
add
add
fldl
push
inc
scas
fwait
nop
clc
repnz
cld
jae
inc
add
add
add
dec
popf
popa
nop
push
mov
leave
nop
jmp
push
add
add
nop
clc
repnz
cld
jae
add
loope
aam
inc
inc
ds
nop
clc
repnz
cld
jae
add
inc
add
inc
and
clc
repnz
cld
jae
add
lds
add
inc
mov
nop
clc
repnz
cld
jae
add
add
add
add
nop
clc
repnz
cld
jae
add
add
imul
add
add
add
pop
std
movzwl
nop
clc
repnz
cld
jae
add
mov
fcoms
jae
das
add
inc
nop
add
push
mov
xchg
ret
jbe
add
add
add
push
mov
xchg
ret
jmp
add
add
popf
and
push
mov
xchg
ret
lret
sub
popf
add
nop
clc
repnz
cld
jae
xchg
add
aam
sub
nop
cld
jae
add
xchg
addl
or
adc
inc
add
add
add
nop
cld
jae
push
xchg
inc
add
xchg
add
dec
rep
nop
clc
repnz
cld
jae
dec
imul
push
nop
clc
repnz
cld
jae
gs
add
leave
add
add
mov
adc
clc
repnz
cld
jae
add
add
bound
push
push
mov
xchg
ret
add
aam
push
roll
push
push
mov
xchg
ret
add
add
push
mov
xchg
ret
mov
add
add
mov
push
mov
xchg
ret
loop
repz
mov
nop
push
mov
leave
nop
jmp
mov
repz
rcrb
jp
pop
subl
push
mov
xchg
ret
add
aad
dec
clc
dec
inc
nop
clc
repnz
cld
jae
add
mov
nop
clc
repnz
cld
jae
add
add
mov
sub
nop
clc
repnz
cld
jae
add
push
mov
xchg
ret
loope
add
lds
add
xchg
dec
nop
clc
repnz
cld
jae
add
add
add
hlt
and
push
mov
xchg
ret
mov
mov
xchg
add
xor
clc
repnz
cld
jae
leave
xchg
or
add
les
sub
push
mov
xchg
ret
add
imul
nop
jmp
add
add
add
sbb
arpl
clc
repnz
cld
jae
loop
add
pop
add
nop
clc
repnz
cld
jae
add
cld
pop
adc
mov
nop
push
mov
leave
nop
jmp
xchg
add
add
add
sub
push
add
nop
clc
repnz
cld
jae
add
cld
sub
inc
or
and
clc
repnz
cld
jae
add
push
add
mov
nop
clc
repnz
cld
jae
add
inc
mov
popf
je
nop
push
mov
leave
nop
jmp
cld
add
arpl
mov
xchg
ret
add
dec
add
incl
add
or
movsb
nop
push
mov
leave
nop
jmp
mov
xchg
loope
movsl
push
nop
clc
repnz
cld
jae
add
add
add
push
nop
clc
repnz
cld
jae
inc
xchg
add
dec
add
jle
lea
nop
clc
repnz
cld
jae
clc
add
add
insl
mov
nop
push
mov
leave
nop
jmp
or
mov
add
clc
repnz
cld
jae
mov
push
add
add
push
nop
clc
repnz
cld
jae
add
push
push
leave
add
add
je
nop
clc
repnz
cld
jae
inc
adc
notl
clc
repnz
cld
jae
inc
add
add
add
add
add
nop
push
mov
leave
nop
jmp
add
inc
xchg
fst
adc
ret
push
mov
xchg
ret
add
add
pop
add
nop
clc
repnz
cld
jae
mov
add
lock
nop
clc
repnz
cld
jae
add
add
addb
cmp
pop
nop
clc
repnz
cld
jae
inc
add
add
pop
push
mov
xchg
ret
add
lret
dec
gs
add
mov
nop
clc
repnz
cld
jae
sub
xchg
repnz
push
push
mov
xchg
ret
add
mov
mov
adc
xor
nop
clc
repnz
cld
jae
das
inc
nop
add
inc
cld
pop
call
nop
clc
repnz
cld
jae
inc
adcl
xchg
loopne
mov
add
nop
push
mov
leave
nop
jmp
incl
push
mov
rcll
fwait
push
mov
xchg
ret
add
add
add
aam
inc
add
nop
clc
repnz
cld
jae
add
loop
add
dec
repnz
nop
clc
repnz
cld
jae
les
push
add
cmc
add
nop
clc
repnz
cld
jae
inc
leave
add
xor
add
nop
push
mov
leave
nop
jmp
add
dec
daa
mov
nop
clc
repnz
cld
jae
push
add
add
xchg
add
movswl
nop
clc
repnz
cld
jae
adc
add
sub
nop
clc
repnz
cld
jae
add
push
ja
add
add
add
shlb
repnz
cld
jae
adc
add
add
int3
add
call
cld
jae
aam
repnz
dec
inc
sti
lea
nop
push
mov
leave
nop
jmp
add
add
add
jne
nop
clc
repnz
cld
jae
mov
loop
pop
nop
clc
repnz
cld
jae
int3
add
inc
das
add
add
insb
nop
push
mov
leave
nop
jmp
mov
add
xchg
mov
loopne
mov
nop
clc
repnz
cld
jae
imul
add
scas
mov
xchg
ret
sub
aam
roll
jbe
add
push
jmp
incl
add
add
dec
dec
xchg
inc
mov
gs
mov
cmp
ret
add
xchg
add
loope
add
nop
cld
jae
add
lds
sub
hlt
add
nop
clc
repnz
cld
jae
add
clc
add
xchg
outsb
imul
cmp
ret
nop
lds
shr
ss
mov
xchg
ret
add
add
add
adc
pop
push
mov
xchg
ret
add
add
nop
add
add
mov
nop
clc
repnz
cld
jae
clc
add
enter
add
nop
clc
repnz
cld
jae
les
cmp
lods
loopne
sti
add
push
mov
xchg
ret
add
push
add
add
lret
clc
push
mov
xchg
ret
jbe
cld
add
pusha
nop
clc
repnz
cld
jae
rorl
imul
mov
push
mov
xchg
ret
add
add
xchg
add
add
push
nop
clc
repnz
cld
jae
add
call
push
add
clc
mov
clc
repnz
cld
jae
add
cld
inc
add
inc
sub
add
jae
repz
push
push
push
mov
xchg
ret
add
popl
dec
add
jmp
adc
repnz
cld
jae
dec
add
add
das
push
iret
rep
nop
clc
repnz
cld
jae
add
add
daa
add
jl
loope
dec
sub
mov
cmp
ret
add
lods
or
and
stos
nop
clc
repnz
cld
jae
inc
add
xlat
orl
xchg
lss
nop
clc
repnz
cld
jae
add
je
nop
push
mov
leave
nop
jmp
add
fldl
rclb
sarb
add
aam
dec
xchg
add
clc
dec
rcrb
nop
clc
repnz
cld
jae
mov
add
push
mov
xchg
ret
add
dec
push
add
add
enter
popa
nop
push
mov
leave
nop
jmp
leave
sub
xchg
add
cmp
clc
repnz
cld
jae
hlt
roll
add
add
sti
fwait
nop
clc
repnz
cld
jae
add
add
mov
sahf
into
or
pusha
and
clc
repnz
cld
jae
clc
add
popl
xlat
stos
not
push
mov
xchg
ret
mov
dec
add
call
mov
xchg
ret
hlt
inc
adcl
add
clc
repnz
cld
jae
add
push
add
xlat
push
repz
nop
clc
repnz
cld
jae
add
xlat
ror
aam
mov
dec
sub
jle
inc
add
add
xlat
imul
push
mov
xchg
ret
loop
add
add
nop
clc
repnz
cld
jae
xchg
adc
add
jmp
mov
nop
clc
repnz
cld
jae
cld
mov
add
repnz
cld
jae
add
inc
or
nop
cld
jae
add
add
imul
add
add
nop
clc
repnz
cld
jae
xchg
add
nop
jle
push
nop
push
mov
leave
nop
jmp
ror
xchg
adc
pop
push
push
mov
xchg
ret
int3
jmp
mov
loope
add
loopne
fisttpl
cltd
inc
add
cld
add
int3
add
daa
fstpl
mov
xchg
ret
add
inc
decl
nop
add
cltd
mov
nop
push
mov
leave
nop
jmp
add
mov
xchg
ret
add
add
gs
leave
add
cwtl
pop
pop
push
mov
xchg
ret
inc
xchg
repnz
imul
icebp
jne
nop
clc
repnz
cld
jae
imul
nop
clc
repnz
cld
jae
add
leave
roll
hlt
adcl
inc
and
add
jae
jbe
pop
inc
add
pusha
js
sub
nop
clc
repnz
cld
jae
roll
inc
mov
and
add
nop
clc
repnz
cld
jae
add
add
inc
add
loopne
push
nop
clc
repnz
cld
jae
imul
push
xchg
cmp
jns
cmpl
mov
leave
nop
jmp
lds
inc
xor
mov
leave
nop
jmp
add
addl
inc
add
sbb
nop
cld
jae
add
inc
inc
inc
lods
add
dec
push
nop
clc
repnz
cld
jae
add
add
pop
add
nop
clc
repnz
cld
jae
sub
push
nop
push
mov
leave
nop
jmp
les
loop
mov
nop
push
mov
leave
nop
jmp
add
mov
cmp
mov
xchg
ret
leave
pop
add
das
add
add
lods
inc
shl
and
and
add
test
nop
push
mov
leave
nop
jmp
add
loope
fsub
fistpl
nop
push
mov
leave
nop
jmp
add
add
inc
push
mov
xchg
ret
add
mov
push
add
ret
clc
repnz
cld
jae
or
add
push
mov
xchg
ret
add
add
roll
lods
repnz
cld
jae
add
sub
add
fmul
mov
nop
push
mov
leave
nop
jmp
add
add
add
out
jmp
add
add
xchg
add
cld
nop
loope
add
add
adc
add
nop
clc
repnz
cld
jae
add
add
add
xchg
mov
nop
clc
repnz
cld
jae
incl
jl
add
nop
push
mov
leave
nop
jmp
addl
pop
jl
and
clc
repnz
cld
jae
cld
add
xchg
add
mov
push
loopne
inc
lea
push
mov
xchg
ret
add
add
add
push
nop
clc
repnz
cld
jae
lret
dec
dec
xchg
add
add
imul
leave
nop
jmp
add
dec
push
add
cld
or
clc
repnz
cld
jae
add
dec
roll
mov
jno
jmp
nop
cld
jae
add
call
add
dec
add
imul
add
add
das
add
fisubrs
inc
inc
add
inc
xor
and
nop
clc
repnz
cld
jae
sub
add
pop
xor
call
nop
clc
repnz
cld
jae
add
and
xchg
push
nop
clc
repnz
cld
jae
push
add
dec
add
or
push
mov
xchg
ret
add
aam
add
loop
lods
imul
nop
clc
repnz
cld
jae
xchg
add
mov
andl
nop
cld
jae
mov
add
and
loopne
je
nop
clc
repnz
cld
jae
jae
nop
clc
repnz
cld
jae
inc
add
inc
das
add
inc
inc
int
inc
push
adc
nop
clc
repnz
cld
jae
dec
add
xchg
lea
xchg
ret
add
add
mov
add
fstpl
and
mov
xchg
ret
add
add
outsl
xor
nop
clc
repnz
cld
jae
sub
repz
xchg
inc
add
clc
repz
das
cld
aam
test
and
jge
nop
clc
repnz
cld
jae
imul
imul
mov
leave
nop
jmp
add
leave
repz
sub
inc
aaa
push
nop
push
mov
leave
nop
jmp
add
add
inc
popl
fisttpll
mov
xchg
ret
inc
mov
cld
xor
fwait
push
mov
xchg
ret
inc
lret
add
inc
add
add
nop
cld
jae
sub
inc
add
add
out
or
add
jge
add
push
mov
xchg
ret
mov
repz
sarl
mov
pop
mov
add
bound
jns
add
pop
add
js
add
add
nop
clc
repnz
cld
jae
add
daa
push
mov
nop
push
mov
leave
nop
jmp
repz
aam
inc
mov
adc
push
nop
push
mov
leave
nop
jmp
inc
add
nop
add
add
dec
sub
jae
mov
nop
addl
dec
lea
nop
clc
repnz
cld
jae
mov
inc
cld
push
fld1
nop
clc
repnz
cld
jae
add
popl
add
push
nop
clc
repnz
cld
jae
inc
push
mov
sbb
repnz
cld
jae
lret
add
loope
add
adc
add
nop
push
mov
leave
nop
jmp
imul
cmp
add
add
imul
add
cmp
mov
xchg
ret
add
mov
add
add
mov
push
mov
xchg
ret
mov
loope
pop
nop
clc
repnz
cld
jae
inc
fldl
add
clc
xchg
lds
mov
nop
clc
repnz
cld
jae
add
add
add
jbe
nop
clc
repnz
cld
jae
fisttpll
add
and
nop
clc
repnz
cld
jae
les
add
add
repnz
push
in
jmp
add
das
add
xorl
xchg
adc
mov
push
mov
xchg
ret
xchg
loop
add
sub
fldl
repnz
cld
jae
add
lret
add
out
nop
push
mov
leave
nop
jmp
leave
sub
add
sub
sbb
add
jae
popl
push
mov
imul
nop
push
mov
leave
nop
jmp
xchg
popl
int3
leave
inc
cmp
pop
push
mov
xchg
ret
add
mov
xchg
sub
add
jae
inc
add
aam
cmp
pause
push
mov
leave
nop
jmp
daa
leave
add
xchg
loope
mov
rclb
data16
mov
nop
clc
repnz
cld
jae
add
add
lds
pop
nop
push
mov
leave
nop
jmp
add
add
add
push
mov
xchg
ret
add
add
add
push
sub
pop
and
clc
repnz
cld
jae
inc
shll
and
mov
xchg
ret
add
add
sub
and
push
mov
xchg
ret
incl
pop
add
add
clc
push
mov
xchg
ret
add
lret
add
inc
add
int3
xchg
push
mov
leave
nop
jmp
add
add
push
jmp
nop
clc
repnz
cld
jae
add
roll
rol
pop
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
imul
push
nop
push
mov
leave
nop
jmp
add
add
movsl
fwait
nop
push
mov
leave
nop
jmp
dec
add
pop
lods
add
add
repnz
cld
jae
add
loope
add
xchg
jno
push
mov
xchg
ret
or
lds
mov
inc
add
stc
decl
add
add
inc
cld
sub
add
add
stc
push
push
mov
xchg
ret
add
sub
add
dec
mov
or
repnz
cld
jae
adc
imul
mov
mov
clc
repnz
cld
jae
add
push
lret
add
add
xchg
je
nop
clc
repnz
cld
jae
add
cmp
mov
leave
nop
jmp
add
add
jbe
push
mov
xchg
ret
add
lods
nop
xlat
das
add
mov
jmp
push
mov
xchg
ret
hlt
add
clc
add
mov
sbb
cmpsl
fistpl
push
mov
xchg
ret
imul
dec
pop
jmp
xchg
int3
lds
dec
inc
add
loop
add
add
nop
clc
repnz
cld
jae
add
add
nop
push
mov
leave
nop
jmp
popl
rol
add
inc
mov
rep
nop
clc
repnz
cld
jae
daa
sub
int3
xchg
gs
mov
nop
clc
repnz
cld
jae
add
adc
jae
inc
add
inc
add
add
nop
clc
repnz
cld
jae
xchg
cld
add
add
jne
nop
clc
repnz
cld
jae
add
scas
inc
mov
push
push
mov
xchg
ret
add
jmp
add
push
nop
push
mov
leave
nop
jmp
add
lret
test
add
mov
cmp
mov
xchg
ret
add
dec
aaa
test
nop
push
mov
leave
nop
jmp
inc
add
int3
sbb
and
repnz
cld
jae
add
add
mov
add
andb
push
mov
xchg
ret
loope
leave
pop
inc
add
add
nop
clc
repnz
cld
jae
add
add
add
xorl
nop
clc
repnz
cld
jae
add
lea
or
inc
add
xchg
cld
add
clc
nop
clc
repnz
cld
jae
add
loope
mov
loop
je
nop
push
mov
leave
nop
jmp
add
repz
repnz
cld
jae
add
add
mov
pop
add
nop
clc
repnz
cld
jae
inc
inc
add
add
lahf
xor
nop
clc
repnz
cld
jae
add
add
add
repz
nop
clc
repnz
cld
jae
add
add
rcrb
cld
jae
les
hlt
add
loop
push
int3
mov
xchg
ret
pop
jmp
add
add
sti
add
nop
clc
repnz
cld
jae
add
push
push
push
mov
xchg
ret
inc
add
xchg
aam
dec
add
add
pusha
call
or
and
dec
inc
mov
add
add
nop
clc
repnz
cld
jae
add
jmp
add
rcrb
repnz
cld
jae
add
mov
xlat
add
push
mov
leave
nop
jmp
add
add
imul
nop
clc
repnz
cld
jae
mov
add
add
jge
mov
sldt
nop
clc
repnz
cld
jae
dec
add
into
popa
add
push
mov
xchg
ret
add
add
add
nop
clc
repnz
cld
jae
xchg
repz
mov
inc
jle
jne
nop
clc
repnz
cld
jae
pop
add
add
pusha
and
pusha
xchg
movzwl
nop
clc
repnz
cld
jae
add
nop
mov
add
repnz
cld
jae
inc
aam
or
add
sub
push
mov
leave
nop
jmp
xchg
mov
add
jmp
add
leave
add
or
add
loope
shlb
xor
add
nop
clc
repnz
cld
jae
sub
push
mov
add
add
jae
mov
inc
nop
push
mov
leave
nop
jmp
repnz
add
inc
into
arpl
repnz
cld
jae
jmp
adc
roll
pop
nop
push
mov
leave
nop
jmp
add
add
call
nop
clc
repnz
cld
jae
inc
add
das
ss
add
nop
push
mov
leave
nop
jmp
add
dec
fldl
inc
add
in
jno
or
jae
add
cld
das
add
xchg
xchg
ret
add
add
shl
inc
pop
pop
nop
clc
repnz
cld
jae
daa
add
add
add
and
clc
repnz
cld
jae
add
add
nop
cld
jae
imul
add
iret
push
push
mov
xchg
ret
add
roll
fnsave
fdivr
div
nop
push
mov
leave
nop
jmp
rorl
aaa
pop
push
mov
xchg
ret
add
xchg
daa
jmp
int3
leave
add
std
shl
nop
clc
repnz
cld
jae
or
pop
js
cmpsb
inc
inc
jmp
nop
clc
repnz
cld
jae
add
add
push
inc
rclb
repnz
cld
jae
xchg
popl
jg
subl
jae
shll
push
nop
clc
repnz
cld
jae
cld
add
add
das
add
pop
nop
clc
repnz
cld
jae
dec
jmp
add
add
add
pop
push
mov
xchg
ret
add
push
xchg
adc
add
jp
jbe
push
nop
clc
repnz
cld
jae
cld
les
repnz
cld
jae
add
das
add
pop
jmp
incl
add
clc
lods
xchg
add
add
add
clc
repnz
cld
jae
add
loope
add
dec
push
nop
clc
repnz
cld
jae
mov
add
mov
push
add
add
xchg
add
add
lret
mov
push
mov
xchg
ret
mov
add
repz
clc
repnz
cld
jae
cld
add
jbe
nop
add
cmp
cld
jae
aam
add
add
add
loopne
add
push
mov
xchg
ret
inc
inc
add
add
and
clc
repnz
cld
jae
cld
inc
add
repz
add
repnz
cld
jae
add
imul
push
nop
clc
repnz
cld
jae
lods
add
int3
add
add
jmp
add
add
add
nop
add
add
das
mov
add
jbe
xchg
mov
nop
clc
repnz
cld
jae
inc
inc
add
mov
xchg
ret
add
push
add
add
mov
nop
clc
repnz
cld
jae
add
add
add
ja
nop
clc
repnz
cld
jae
cld
add
add
xor
nop
clc
repnz
cld
jae
add
dec
jbe
mov
repz
nop
clc
repnz
cld
jae
mov
add
sub
xor
test
out
call
jae
mov
add
or
nop
jmp
add
das
add
push
outsl
add
push
mov
xchg
ret
dec
hlt
add
add
insl
pop
nop
clc
repnz
cld
jae
add
add
add
loope
movsb
and
clc
repnz
cld
jae
hlt
repnz
add
add
jle
cmp
rcll
subl
add
cld
rcrl
or
add
daa
add
inc
fs
in
inc
add
loop
orl
dec
movsl
xchg
nop
clc
repnz
cld
jae
daa
int3
addl
add
add
nop
clc
repnz
cld
jae
add
leave
add
add
loope
nop
clc
repnz
cld
jae
aam
add
dec
mov
inc
xchg
push
nop
clc
repnz
cld
jae
aam
add
add
inc
scas
mov
nop
push
mov
leave
nop
jmp
add
imul
insb
inc
jb
nop
clc
repnz
cld
jae
add
sub
shr
nop
clc
repnz
cld
jae
add
or
leave
add
pushl
nop
clc
repnz
cld
jae
add
add
add
add
push
mov
xchg
ret
inc
das
add
leave
inc
add
add
push
push
mov
xchg
ret
mov
leave
int3
clc
add
add
jae
xlat
jbe
add
xchg
ret
inc
xlat
add
add
add
leave
mov
rcll
jmp
cld
das
add
ds
add
push
mov
xchg
ret
nop
add
or
mov
jne
nop
push
mov
leave
nop
jmp
add
mov
push
mov
leave
nop
jmp
jmp
repnz
push
inc
add
nop
clc
repnz
cld
jae
add
repnz
add
add
add
nop
push
mov
leave
nop
jmp
mov
lods
add
dec
push
mov
xchg
ret
dec
add
xchg
add
vmovddup
lahf
xor
nop
clc
repnz
cld
jae
imul
pusha
cld
mov
call
nop
clc
repnz
cld
jae
add
clc
inc
cs
nop
clc
repnz
cld
jae
or
mov
add
add
mov
nop
clc
repnz
cld
jae
addl
add
xchg
and
nop
push
mov
leave
nop
jmp
add
xchg
add
add
cmpl
nop
push
mov
leave
nop
jmp
repz
push
roll
jle
add
push
mov
xchg
ret
adc
add
dec
add
jb
sbb
mov
nop
push
mov
leave
nop
jmp
add
gs
add
xchg
call
nop
clc
repnz
cld
jae
lods
mov
push
mov
xchg
ret
xlat
lods
add
nop
popl
inc
icebp
push
nop
clc
repnz
cld
jae
inc
add
add
gs
adc
adc
mov
leave
nop
jmp
clc
mov
add
xor
adcl
clc
repnz
cld
jae
mov
mov
nop
clc
repnz
cld
jae
add
add
lods
das
add
sbb
clc
repnz
cld
jae
imul
add
push
push
mov
xchg
ret
mov
inc
or
inc
add
sbb
nop
clc
repnz
cld
jae
add
bnd
dec
mov
mov
clc
repnz
cld
jae
add
mov
add
add
ret
je
nop
push
mov
leave
nop
jmp
xchg
loop
pushf
scas
and
push
nop
clc
repnz
cld
jae
add
clc
roll
fwait
mov
nop
clc
repnz
cld
jae
clc
add
repnz
cld
jae
add
xlat
add
add
je
fistpl
push
mov
xchg
ret
inc
add
add
add
addr16
nop
clc
repnz
cld
jae
add
or
mov
push
mov
xchg
ret
add
dec
add
stos
nop
clc
repnz
cld
jae
jbe
add
add
add
xor
nop
push
mov
leave
nop
jmp
add
pop
lods
push
xlat
inc
popa
nop
clc
repnz
cld
jae
add
inc
add
add
nop
add
nop
cld
jae
mov
mov
inc
daa
mov
nop
push
mov
leave
nop
jmp
add
incl
inc
cmpl
nop
push
mov
leave
nop
jmp
add
push
mov
xchg
ret
repz
add
xchg
int3
dec
mov
push
shr
nop
clc
repnz
cld
jae
aam
add
add
or
cld
clc
incl
push
clc
inc
jbe
inc
hlt
mov
ror
push
nop
clc
repnz
cld
jae
add
add
clc
roll
pop
pusha
push
mov
xchg
ret
xchg
das
inc
jmp
add
add
pop
pop
nop
clc
repnz
cld
jae
add
add
add
imul
repnz
cld
jae
add
add
push
mov
xchg
ret
adc
add
sub
repnz
cld
jae
lods
add
add
add
pusha
and
nop
cld
jae
add
xlat
add
add
cmp
sti
nop
clc
repnz
cld
jae
lds
sub
repz
pop
fld1
nop
clc
repnz
cld
jae
rcll
add
enter
push
mov
leave
nop
jmp
add
add
andb
rolb
push
mov
leave
nop
jmp
leave
inc
vandnpd
and
repnz
cld
jae
add
dec
add
rclb
jae
int3
add
sub
add
inc
aad
leave
nop
push
mov
leave
nop
jmp
add
pop
mov
add
cmp
repnz
cld
jae
add
mov
mov
nop
clc
repnz
cld
jae
lods
sub
pushf
imul
inc
nop
add
mov
rclb
nop
clc
repnz
cld
jae
add
clc
add
fistpl
push
mov
xchg
ret
mov
add
dec
popf
popa
nop
clc
repnz
cld
jae
mov
add
pop
jne
nop
clc
repnz
cld
jae
sar
jmp
mov
xchg
ret
repz
int3
mov
xlat
sbb
mov
push
mov
xchg
ret
add
add
add
mov
shl
mov
nop
clc
repnz
cld
jae
add
push
test
sbb
nop
push
mov
leave
nop
jmp
inc
inc
xlat
add
add
dec
push
mov
xchg
ret
add
add
pop
inc
mov
sbb
add
fistpl
nop
clc
repnz
cld
jae
add
add
add
insb
pop
pop
nop
push
mov
leave
nop
jmp
cld
add
cld
hlt
xchg
add
xchg
repnz
cld
jae
add
add
add
dec
or
pusha
addr16
nop
clc
repnz
cld
jae
add
add
scas
mov
fistpll
nop
push
mov
leave
nop
jmp
add
fisttpll
rorb
or
nop
jmp
add
push
lds
dec
sti
cmp
nop
push
mov
leave
nop
jmp
les
lret
mov
cld
add
add
nop
clc
repnz
cld
jae
cld
xlat
add
inc
inc
lods
out
pusha
push
mov
xchg
ret
pop
add
add
xor
add
push
mov
xchg
ret
hlt
hlt
add
imul
imul
cld
jae
add
add
insb
jno
roll
push
mov
leave
nop
jmp
inc
add
sub
push
mov
clc
repnz
cld
jae
inc
add
add
out
inc
test
nop
push
mov
leave
nop
jmp
add
add
add
dec
inc
add
nop
clc
repnz
cld
jae
add
add
and
push
mov
xchg
ret
add
add
mov
nop
clc
repnz
cld
jae
add
inc
inc
inc
les
clc
repnz
cld
jae
add
jmp
add
or
mov
adc
clc
repnz
cld
jae
xchg
leave
das
add
inc
incl
sbb
add
cld
cld
inc
add
add
scas
addb
clc
repnz
cld
jae
leave
add
loope
mov
inc
mov
nop
clc
repnz
cld
jae
add
add
daa
add
rorb
inc
subb
push
mov
xchg
ret
add
add
inc
add
orl
cld
jae
daa
add
add
repz
test
jg
inc
add
leave
nop
add
addl
repnz
cld
jae
gs
add
mov
idivb
mov
nop
clc
repnz
cld
jae
add
add
add
inc
not
push
mov
xchg
ret
xchg
fldl
leave
add
nop
push
mov
leave
nop
jmp
imul
add
jae
add
add
lret
xor
push
es
jecxz
push
mov
leave
nop
jmp
add
jbe
pop
je
call
mov
nop
clc
repnz
cld
jae
add
add
push
ret
push
mov
xchg
ret
add
jbe
inc
add
gs
test
adc
push
push
mov
xchg
ret
inc
push
add
xchg
add
add
loopne
rclb
je
nop
clc
repnz
cld
jae
sub
inc
jge
icebp
inc
dec
xchg
nop
jmp
dec
add
sbb
nop
cld
jae
add
das
add
add
movsl
mov
nop
clc
repnz
cld
jae
add
add
sbb
fistl
nop
jmp
das
repnz
cld
roll
nop
cld
jae
popl
or
add
xor
nop
clc
repnz
cld
jae
add
add
lds
imul
add
jmp
das
leave
repz
repz
cld
mov
mov
xchg
nop
clc
repnz
cld
jae
add
add
dec
xchg
lods
out
add
nop
clc
repnz
cld
jae
xlat
add
jne
nop
clc
repnz
cld
jae
inc
add
add
and
incl
stc
nop
clc
repnz
cld
jae
nop
add
pop
cld
inc
daa
ret
cli
add
adcb
inc
addl
add
clc
inc
add
add
pusha
negb
repnz
cld
jae
repz
incl
add
mov
ret
push
lea
nop
push
mov
leave
nop
jmp
xchg
dec
inc
imul
mov
xchg
ret
shll
inc
add
call
nop
clc
repnz
cld
jae
add
add
push
push
mov
xchg
ret
add
or
jbe
mov
nop
clc
repnz
cld
jae
add
inc
push
rorb
and
test
inc
add
repnz
cld
jae
add
test
decl
das
add
dec
add
add
add
push
nop
clc
repnz
cld
jae
add
add
add
leave
loope
fstps
cld
jae
push
dec
nop
sub
pop
add
movsb
nop
clc
repnz
cld
jae
add
inc
add
add
pusha
mov
adc
call
jae
add
sub
lock
in
cwtl
sbb
cwtl
adc
push
mov
push
mov
xchg
ret
add
add
add
add
call
nop
jmp
add
cmp
clc
repnz
cld
jae
add
ljmp
ja
add
add
inc
add
add
popa
pushl
nop
clc
repnz
cld
jae
mov
add
add
roll
nop
cld
jae
jbe
add
add
rorl
test
clc
repnz
cld
jae
add
push
test
pusha
fstpt
nop
clc
repnz
cld
jae
add
les
fcmovb
xchg
and
nop
push
mov
leave
nop
jmp
add
add
rcll
jae
add
push
inc
aam
in
mov
add
jae
add
imulb
pusha
nop
clc
repnz
cld
jae
inc
add
add
leave
mov
adcb
add
pop
push
mov
xchg
ret
mov
add
daa
sbb
jb
add
xchg
xchg
mov
add
mov
aam
call
nop
jmp
dec
add
fsub
call
nop
clc
repnz
cld
jae
add
xlat
add
clc
repnz
cld
jae
das
cld
sar
push
repz
push
mov
xchg
ret
mov
inc
add
les
add
dec
pop
push
mov
xchg
ret
jmp
jbe
aam
pop
fstp
ljmp
add
fdivrs
in
leave
nop
jmp
add
imul
jb
nop
clc
repnz
cld
jae
add
lea
mov
xchg
ret
mov
inc
cld
add
mov
call
nop
clc
repnz
cld
jae
or
les
loopne,pn
mov
call
cld
jae
rcl
inc
xchg
dec
add
push
push
mov
xchg
ret
inc
add
add
je
nop
push
mov
leave
nop
jmp
leave
add
jae
jmp
clc
repnz
cld
jae
add
add
jmp
add
jb
push
mov
xchg
ret
add
repnz
test
call
jae
int3
repnz
test
nop
push
mov
leave
nop
jmp
push
dec
mov
pushf
outsb
mov
push
mov
xchg
ret
add
or
add
add
and
shrb
add
nop
clc
repnz
cld
jae
daa
cld
add
add
inc
mov
mov
xchg
ret
add
add
inc
ficoms
clc
repnz
cld
jae
sub
cld
mov
pop
inc
test
nop
push
mov
leave
nop
jmp
xchg
add
add
add
lcall
imul
cmp
ret
daa
loope
xlat
push
add
lods
psllq
cld
jae
inc
mov
cld
mov
scas
enter
nop
cld
jae
jbe
jmp
add
std
fistpl
push
mov
xchg
ret
cld
jbe
add
pop
aam
add
nop
clc
repnz
cld
jae
add
add
add
popa
pop
nop
clc
repnz
cld
jae
fldl
inc
int3
add
add
enter
mov
xchg
ret
add
add
or
lock
clc
repnz
cld
jae
add
add
add
and
repnz
cld
jae
pop
inc
lods
lds
dec
leave
mov
nop
clc
repnz
cld
jae
add
mov
push
sub
lcall
ret
add
dec
gs
push
mov
xchg
ret
add
xor
roll
add
and
mov
nop
clc
repnz
cld
jae
add
idivb
nop
cld
jae
adc
rol
add
mov
add
nop
clc
repnz
cld
jae
das
push
dec
jmp
add
repnz
cld
jae
repz
xlat
daa
inc
inc
rcl
jns
inc
loopne
clc
repnz
cld
jae
mov
inc
add
add
faddl
add
nop
clc
repnz
cld
jae
inc
pop
mov
xor
nop
push
mov
leave
nop
jmp
popl
add
cmp
mov
xchg
ret
aam
inc
add
xchg
repz
xchg
or
test
clc
repnz
cld
jae
imul
jae
lods
add
add
push
nop
push
mov
leave
nop
jmp
lds
add
push
pop
adc
andb
loope
rcll
clc
repnz
cld
jae
xlat
inc
inc
inc
roll
xor
nop
clc
repnz
cld
jae
nop
xchg
add
add
mov
push
and
shll
jge
add
add
add
shlb
nop
clc
repnz
cld
jae
adc
inc
xchg
add
add
loopne
xor
nop
push
mov
leave
nop
jmp
add
les
inc
add
lret
add
add
add
vaddpd
mov
cmp
ret
adc
imul
add
inc
inc
xor
fistpl
nop
clc
repnz
cld
jae
xchg
dec
inc
add
loope
cwtl
icebp
fwait
push
mov
xchg
ret
add
hlt
dec
add
clc
jmp
nop
clc
repnz
cld
jae
add
add
add
sbb
add
nop
clc
repnz
cld
jae
add
add
add
mov
push
mov
xchg
ret
add
add
add
and
inc
add
add
nop
jmp
add
lods
clc
mov
fildl
repnz
cld
jae
loop
leave
xchg
add
and
mov
leave
nop
jmp
add
imul
inc
xor
and
nop
clc
repnz
cld
jae
add
dec
add
add
jle
push
mov
xchg
ret
add
cld
add
aam
iret
fwait
push
mov
xchg
ret
daa
sar
add
add
aam
sub
and
repnz
cld
jae
add
add
adc
mov
rclb
jae
add
inc
add
repnz
repnz
cld
jae
add
xchg
ds
xor
push
push
mov
xchg
ret
jbe
mov
add
call
nop
clc
repnz
cld
jae
incl
add
loope
inc
add
xchg
inc
add
add
add
nop
clc
repnz
cld
jae
aam
add
add
mov
fsts
mov
xchg
ret
leave
mov
daa
imul
ret
nop
clc
repnz
cld
jae
mov
add
mov
ja
pop
or
clc
repnz
cld
jae
add
popl
roll
test
jge
inc
add
repz
add
xchg
add
xchg
cltd
add
nop
push
mov
leave
nop
jmp
jmp
incl
loope
inc
rcrb
cld
or
in
leave
nop
jmp
add
test
call
jae
add
sub
jmp
dec
les
repnz
inc
add
sub
cld
xchg
cld
add
push
and
clc
repnz
cld
jae
pop
add
mov
or
nop
clc
repnz
cld
jae
add
dec
leave
or
adc
add
add
add
roll
cld
dec
sahf
and
lea
ret
mov
mov
daa
int3
mov
add
push
mov
xchg
ret
inc
add
add
cmp
nop
jmp
sub
mov
add
nop
clc
repnz
cld
jae
dec
xlat
add
add
dec
mov
push
mov
xchg
ret
add
inc
imul
xor
clc
repnz
cld
jae
add
add
or
sbb
nop
clc
repnz
cld
jae
addl
repz
fwait
mov
push
mov
xchg
ret
add
leave
add
xchg
nop
clc
repnz
cld
jae
mov
roll
cmp
pop
nop
clc
repnz
cld
jae
inc
add
jmp
add
dec
shr
nop
clc
repnz
cld
jae
add
pop
inc
add
or
mov
mov
xchg
ret
add
xchg
add
add
push
rorl
cld
jae
adc
add
das
add
dec
push
push
mov
xchg
ret
add
add
sub
add
add
jmp
add
cld
jmp
adcl
cld
add
out
rclb
xchg
inc
add
adc
jbe
xchg
ljmp
pop
pop
nop
clc
repnz
cld
jae
add
mov
rcrb
dec
je
add
add
add
inc
add
add
nop
clc
repnz
cld
jae
dec
add
dec
imul
nop
clc
repnz
cld
jae
push
repnz
repz
popl
and
pop
fwait
push
mov
xchg
ret
add
add
xchg
inc
inc
add
cmc
push
push
mov
xchg
ret
inc
imul
add
aas
nop
clc
repnz
cld
jae
repnz
add
add
out
call
jae
add
loop
push
nop
clc
repnz
cld
jae
jbe
sub
loop
nop
clc
repnz
cld
jae
add
adc
mov
divl
fistl
and
and
imul
inc
mov
call
jae
sub
add
pop
nop
clc
repnz
cld
jae
pop
inc
jbe
lds
push
mov
pop
roll
push
add
or
lcall
rep
addb
pusha
add
mov
leave
movsb
pusha
cmpb
sbbb
mov
push
jl
addb
pusha
push
sub
pusha
stos
loopne
mov
add
stos
mov
stc
call
in
inc
andb
push
rorl
movsl
cmpsb
addb
sahf
daa
scas
jne
hlt
stos
testl
loop
sti
mov
andb
xor
ss
and
and
inc
pop
int
sub
inc
movsb
loopne
pop
mov
aaa
nop
outsl
push
ret
jp
test
inc
add
pusha
loopne
aad
into
inc
cld
mov
push
jp
clc
addr16
hlt
xchg
push
pop
mov
shrl
pusha
mul
inc
loope
push
dec
xchg
jbe
or
mov
xor
mov
lret
sbb
or
in
mov
shl
mov
push
mov
push
mov
add
jno
inc
pop
sbb
inc
push
xchg
inc
cmpsl
and
scas
aam
and
lcall
sbb
into
xchg
mov
fstpt
cmp
xor
sub
loopne
ficoml
sbb
jno
push
test
rclb
mov
xchg
push
and
jp
shlb
out
lods
inc
mov
jo
shl
mov
inc
imul
and
xchg
dec
push
and
fnsave
xlat
mov
in
sbb
addb
shlb
lea
xchg
data16
xor
and
pop
cmp
jno
sbb
int3
jae
mull
mov
insl
jecxz
dec
test
pusha
push
into
and
push
jmp
inc
add
popa
std
push
notb
and
int
stos
andb
mov
dec
ljmp
loopne
roll
pusha
xor
repz
inc
push
mov
loopne
sti
fidivs
cmp
pop
add
push
shl
push
js
mov
and
mov
jl
in
or
movsb
and
gs
std
movsb
pusha
add
or
loopne
jecxz
jecxz
fildll
pop
and
jecxz
out
xor
adcb
inc
sub
addb
clc
jle
call
and
mov
stc
xchg
stc
xchg
jecxz
loopne
sbb
andb
jae
bound
adc
xchg
xchg
loopne
mov
inc
adc
dec
push
mov
aad
loop
sub
xor
mov
xchg
inc
and
pusha
out
movsl
lret
lods
shlb
test
subb
inc
shr
test
js
or
test
data16
and
and
pop
enter
mov
loop
nop
fcompl
cmpsb
inc
rclb
cld
push
jbe
mov
loope
mov
inc
repnz
xchg
out
add
fsts
xlat
dec
pop
dec
mov
out
jo
ret
iret
sub
pop
inc
je
add
addb
sub
mov
int3
aam
mov
orb
pop
cmpsl
clc
cmp
and
sbb
push
movb
rclb
into
jno
shld
les
sbb
loopne
push
loopne
and
or
dec
js
mov
pop
sub
adc
and
out
test
loopne
ljmp
outsl
xchg
out
ret
sub
pop
xor
cmp
adc
add
out
aam
xchg
mov
jmp
sti
adc
movl
sbb
pusha
lds
dec
pop
aas
mov
test
sar
adc
xchg
clc
pop
lods
dec
iret
stos
or
sub
push
add
sbbb
jp
sarl
lods
inc
mov
fstl
dec
mov
test
stos
loopne
and
lea
popf
and
cmp
out
jl
adc
das
or
jns
insl
std
add
rorb
add
loopne
addr16
jnp
xchg
or
add
in
out
mov
and
test
inc
dec
mov
xchg
loopne
out
push
adc
movsb
and
imul
insb
or
add
pop
inc
mov
iret
mov
sbbb
mov
pusha
push
adc
and
call
sub
stc
shrl
cmpsb
shlb
shl
dec
pop
cmp
jmp
fwait
js
xchg
or
pusha
mov
in
leave
adc
jb
mov
sbb
clc
js
fadd
shll
loopne
aas
mov
das
cli
pop
cmp
pushf
inc
and
shlb
mov
insb
mov
clc
dec
lcall
xchg
dec
cld
rep
loopne
jo
bound
je
lods
mov
pusha
and
outsl
cli
pop
ror
nop
movsl
rcr
std
fisubrl
xor
rolb
and
sbb
mov
out
mov
xchg
frstor
inc
mov
lods
pop
sti
inc
ret
jmp
addr16
inc
andb
mov
mov
stos
mov
das
or
inc
test
pusha
shlb
mov
pusha
dec
push
mov
call
and
sbb
fimuls
inc
rcr
ret
or
pusha
hlt
stos
packsswb
mov
test
scas
sbb
xor
mov
pop
xchg
mov
cwtl
jecxz
sub
sbb
sbb
push
das
aam
adc
cmp
add
add
cltd
xchg
stos
add
lea
stc
das
loope
test
add
and
lahf
jle
scas
push
jmp
inc
andb
imull
inc
loopne
dec
stos
rolb
fisubl
and
icebp
cmp
addb
push
inc
andb
add
add
push
mov
sbb
cmpsl
push
cmp
sub
and
idivb
test
and
mov
loope
sahf
add
inc
pop
aaa
int
adc
loopne
xchg
inc
push
sbb
addb
ljmp
push
andb
mov
rcrb
or
adc
ljmp
mov
inc
inc
mulb
and
std
andb
jmp
add
add
cmp
sbb
and
dec
in
and
clc
std
dec
movsb
mov
add
sarb
iret
popf
or
xchg
xchg
or
es
and
sub
dec
dec
aas
fbld
addb
shlb
inc
dec
cltd
and
imul
shlb
jp
shrl
dec
stc
test
add
pusha
fsubrl
inc
pusha
mov
mov
ds
fbstp
xor
cmpsb
inc
add
rolb
sbb
xchg
fs
in
fwait
iret
jns
cli
pop
inc
inc
and
mov
loopne
fadds
loopne
push
jae
movsb
pusha
inc
push
in
mov
sub
js
loopne
sbb
cwtl
stos
andb
mov
loopne
jnp
jne
adc
mov
insl
push
enter
dec
loop
nop
sub
add
inc
sub
mov
mov
loopne
mov
pusha
mov
loopne
xchg
cmpsb
inc
add
mov
push
mov
add
add
and
stos
mov
in
xchg
mov
cmp
push
xor
inc
push
cmp
popa
inc
pushf
mov
mov
ret
or
loopne
and
mov
aas
mov
mov
jp
xchg
mov
rolb
or
rcrl
adc
nop
icebp
cli
dec
pop
sbb
dec
dec
insl
and
popa
pushf
jno
mov
and
or
adc
mov
shlb
andb
xlat
daa
xor
or
andb
add
jae
lret
loop
sti
mov
pop
in
sub
jl
adc
xchg
lock
imul
jmp
std
xchg
sub
inc
inc
icebp
shrl
and
int
jo,pt
push
push
lret
sub
rol
ss
or
push
prefetch
movsb
add
in
push
jp
lods
and
and
lods
shlb
imul
clc
jne
sysexit
xor
or
out
jne
je
mov
fwait
adc
mov
rcl
aad
loopne,pn
pop
xchg
or
cmp
fdivr
inc
in
shll
into
push
leave
clc
sarb
rol
push
cmp
lock
mov
add
rcrl
sub
stc
sahf
xor
sub
xchg
imul
inc
sub
sarl
ret
push
mov
sbb
mov
pop
jp
inc
add
and
aad
xchg
pusha
shlb
imul
xor
or
and
divl
cmp
push
shrl
cwtl
mov
lret
mov
inc
jb
lock
cmc
cwtl
popf
sbb
lret
cmp
inc
jb
in
jbe
repnz
mov
pop
mov
loopne
arpl
iret
das
sub
test
or
fsubrl
pop
fsubr
out
push
inc
xor
mov
sub
add
test
loopne
fldt
sbb
lret
arpl
das
pop
lret
push
ljmp
mov
lods
loopne
insb
pop
aad
mov
imul
sbbb
lret
pop
mul
and
and
xchg
jmp
mov
scas
add
push
loopne
test
dec
nop
stos
shlb
imul
mov
cmpsb
and
push
leave
push
pusha
add
mov
or
xlat
and
mov
mov
inc
arpl
loopne
divb
dec
xor
clc
cmp
stos
shlb
cmp
lock
rol
je
xor
xlat
dec
jp
sub
pusha
push
aad
pop
and
and
addb
shlb
adc
mov
mov
cwtl
mov
rcr
pusha
loopne
and
and
insl
push
push
jmp
sti
mov
pusha
cmp
sbb
loope
movsb
andb
mov
inc
test
push
sbbl
cmp
inc
test
push
js
addb
adc
dec
or
xlat
rclb
test
pusha
or
dec
pop
popf
xorl
cwtl
cwtl
inc
mov
sahf
neg
xor
cld
roll
mov
jb
shrl
mov
loopne
mov
inc
inc
roll
fsubl
pop
cmp
push
inc
loopne
shlb
mov
inc
mov
pop
sub
dec
mov
inc
pop
outsb
and
and
pusha
repz
or
inc
inc
andl
pusha
lods
lods
loopne
nop
jne
mov
add
mov
rclb
inc
ja
je
jae
loopne
and
sbb
mov
and
movsl
and
loopne
inc
int3
mov
sarl
mov
push
ret
adc
and
sub
lods
mov
adc
lret
int3
repnz
xlat
stc
sbb
adc
pop
dec
int
push
push
ljmp
mov
int
pusha
add
push
push
pop
iret
addb
rcr
add
and
add
add
mov
int
pusha
rorb
lds
jg
mov
cmp
andb
and
mov
sub
push
add
addb
inc
add
ds
shl
fdivs
or
cmpb
xchg
pop
pop
in
mov
stos
jge
and
mov
imul
clc
lods
inc
and
add
mov
push
mov
mov
cmp
inc
push
xor
leave
stos
add
outsl
shr
mov
inc
xchg
lret
xchg
inc
lods
add
xor
jbe
mov
iret
xchg
sarl
outsb
jge
mov
stos
jmp
pop
or
or
loopne
ret
mov
jmp
or
sbb
pusha
push
addb
sub
mov
addb
jge
rcrb
iret
loop
mov
fnclex
jmp
jmp
add
and
xlat
in
js
inc
pusha
mov
pusha
xorl
push
mov
mov
pop
in
mov
mov
xor
test
andb
xor
lcall
les
pusha
mov
mov
shl
ficompl
or
inc
loopne
popa
adc
mov
inc
and
jmp
push
cmp
sub
mov
daa
cld
lahf
lods
loopne
jl
xchg
dec
xor
mov
in
pop
mov
xor
pop
jle
fdivl
pop
add
mov
enter
scas
mov
and
out
add
ss
and
out
mov
cltd
scas
mov
add
mov
fwait
pop
push
cld
mov
rclb
or
mov
inc
daa
add
loopne
ss
outsl
xchg
pop
enter
add
pop
pop
inc
mov
test
add
insl
mov
sub
mov
ficoms
loopne
mov
add
mov
and
push
lea
int
fidivs
inc
call
loop
jnp
hlt
lods
adc
pop
movsb
loopne
xor
rolb
add
das
mov
mull
clc
jg
jne
scas
out
and
xchg
inc
adc
loopne
xchg
pop
dec
outsl
out
mov
js
stos
inc
and
dec
gs
add
xchg
test
lods
push
shr
add
hlt
stc
add
dec
frstor
andb
mov
mov
xor
or
loopne
out
mov
in
mov
scas
loopne
add
outsb
rep
mov
xchg
nopl
mov
xchg
loope
xor
pusha
and
and
add
rolb
xchg
sub
and
inc
rcr
sbb
loope
movsb
and
pop
push
lds
mov
inc
xlat
adc
dec
add
mov
clc
rclb
popf
leave
in
jb
scas
cmp
mov
js
or
pusha
shrb
addb
xor
stos
pusha
and
cmp
test
push
pusha
shlb
add
push
mov
cmp
lcall
add
arpl
test
lds
pusha
loopne
andb
add
popf
int
add
pop
jne
mov
add
mov
in
repnz
inc
pop
dec
mov
rcrb
adcl
add
test
pusha
cmp
cmpl
cmp
add
push
dec
ljmp
xor
addb
rolb
pusha
shlb
out
sub
xchg
push
cli
pop
mull
ss
movsl
out
loopne
bswap
sbb
cwtl
push
lea
inc
pop
iret
insb
popf
mov
mov
xchg
mov
mov
imul
and
mov
stos
call
aaa
mov
leave
data16
mov
test
loopne
fs
ss
sub
pusha
sub
mov
push
aam
or
xor
jb
push
pushl
clc
inc
imul
push
repz
loopne
push
push
mov
jo
dec
xlat
mov
ljmp
push
add
pusha
xchg
push
lret
jne
mov
cld
cmc
dec
out
mov
sbb
loopne
aaa
popa
sub
int
add
shl
xchg
pop
xor
and
sbb
not
xor
cmp
test
inc
leave
jle
add
cmc
outsl
ret
pop
sub
and
sti
into
clc
scas
bound
adc
icebp
std
xchg
pusha
xchg
popf
cmp
pusha
mov
inc
pop
addb
push
jl
and
add
dec
insb
push
adcl
pusha
jecxz
mov
push
shlb
push
clc
lds
xor
mov
sub
adc
mov
bound
pusha
loopne
sarb
inc
ret
push
daa
jno
clc
mov
and
jmp
loopne
shll
cmpsb
addb
inc
cwtl
mov
jl
xor
xchg
sub
mov
inc
add
outsb
out
loope
sbb
popf
pop
dec
push
push
add
adc
imul
or
pusha
and
pusha
and
lods
jl
iret
xor
fistps
out
add
or
cmp
fisttps
ljmp
shr
jae
inc
pop
sbb
in
pushf
test
and
jno
movsl
pop
test
mov
insb
and
dec
lret
inc
add
add
fsincos
xchg
xchg
jmp
test
and
popa
addb
stos
inc
add
mov
dec
sbb
adc
and
outsl
inc
mov
pop
in
lret
icebp
pop
ficoms
dec
mov
in
js
inc
ret
aad
add
jp
xchg
push
lahf
into
setae
adc
inc
pop
jmp
cmp
fldenv
in
int3
xchg
hlt
fdiv
cmp
mov
mov
ficoms
dec
fcmovu
in
and
push
inc
ds
test
loopne
dec
xor
sub
add
xor
sub
add
dec
out
xor
sub
loopne
xor
ljmp
sbb
shlb
pop
ja
push
pop
xchg
setns
inc
and
fwait
xchg
into
dec
in
sbbl
addr16
testl
dec
nop
mov
mov
and
les
dec
mov
lods
addb
inc
loopne
pop
push
xchg
testb
mov
xchg
fld
loope
repnz
or
out
sub
and
mov
jge
jle
aam
call
push
cld
std
cmpsl
movsl
jl
mov
andb
xchg
adc
mov
dec
in
loopne
pop
cli
adc
mov
inc
inc
jp
jmp
mov
lods
sbb
cmpsb
inc
mov
push
mov
and
pop
jp
dec
mov
and
daa
fisttpll
int3
push
js
inc
loopne
xchg
test
loopne
ficompl
jl
leave
out
inc
lahf
imul
sub
loopne
and
lahf
cmovg
xchg
divb
rcll
fisubrl
loop
sub
scas
dec
add
mov
rol
add
add
loopne
pop
xlat
mov
mov
pusha
out
add
add
repnz
cli
test
loopne
stos
xchg
popa
inc
movsl
rcrl
icebp
fwait
iret
jb
daa
shl
ss
loopne
xlat
sbb
dec
sbb
cmp
sti
push
cltd
fs
loopne
pushf
insb
push
add
pusha
xchg
in
inc
or
loopne
push
pop
inc
aam
lahf
in
push
dec
push
mov
mov
andb
andb
push
aaa
and
xorb
loopne
sbb
aas
mov
dec
push
adc
mov
inc
mov
and
adc
ret
mov
fstp
cmc
pop
cld
mov
inc
add
lret
int3
add
frstor
and
sbb
adc
inc
push
clc
test
popa
out
jb
icebp
iret
scas
inc
inc
push
lods
push
jne
add
inc
cmp
mov
andl
pusha
pusha
pop
mov
add
cltd
sbb
lock
lret
jmp
popa
and
loopne
or
xchg
dec
sbbl
inc
inc
out
jno
mov
hlt
push
add
add
inc
out
out
xor
cmpsl
fucomip
in
sbb
sub
and
cmpsb
loopne
stos
sarb
ja
mov
imul
push
push
pop
sub
xor
push
arpl
mov
arpl
loopne,pn
dec
out
in
ret
lcall
clc
enter
mov
movntq
loopne
or
cmp
inc
xor
ljmp
enter
sub
loopne
and
lods
add
stc
and
je
and
xchg
test
cli
cmp
xor
fsts
data16
rorb
fwait
cmp
add
inc
inc
fcompl
cltd
sub
test
pusha
jmp
insl
push
dec
mov
fisubrl
dec
inc
inc
or
fisttps
cmova
loope
jge
inc
and
mov
imul
sahf
mov
add
mov
testb
pop
jns
push
enter
in
pop
adc
pop
jl
mov
sub
shl
pop
leave
jne
and
sub
pusha
pop
inc
and
cwtl
imul
pop
ss
sub
loopne
loopne
adc
xlat
push
add
popa
in
imul
mov
xor
pusha
adcb
xor
int
push
jbe
mov
and
pop
lds
loopne
out
call
in
mov
cs
ror
loopne
cmp
sbb
enter
mov
repnz
aam
inc
mov
sub
in
push
jle
xorl
pop
cmp
or
xor
pop
xchg
sbb
sub
jo
loopne
dec
and
and
push
push
fwait
sbb
bound
jae
scas
pusha
loopne
clc
xor
inc
nop
sahf
pop
jno
mov
pop
add
and
sbbb
out
rolb
stos
fcmovnu
and
and
xchg
es
add
inc
mov
inc
ret
add
inc
mov
pop
sahf
fwait
push
das
out
or
ret
and
mov
add
mov
inc
sbbb
mov
inc
xchg
bound
negl
sbb
cmpsl
and
inc
add
loopne
cmp
rolb
cmp
add
orb
orb
loopne
fimull
sbb
fwait
adc
fidivrs
insl
lret
clc
fisubs
rorb
dec
push
mov
mov
cmp
dec
xor
loopne
pop
push
loope
gs
sarb
daa
lret
inc
adc
add
ss
sbb
cmp
jns
jl
or
and
sbb
sahf
mov
inc
and
mov
xor
push
pmuludq
loopne
and
inc
fisubs
shlb
imul
xchg
clc
fucom
mov
add
mov
imul
lods
mov
mov
pusha
scas
movsl
loope
adc
push
lret
pusha
shrl
andb
xchg
pusha
jle
lcall
testb
hlt
push
push
jmp
inc
inc
add
pusha
aad
lea
adc
sub
in
repz
loopne
in
hlt
sbb
outsb
pusha
jne
std
mov
mov
mov
jo
int
fiadds
jo
insl
pop
xchg
movsb
and
add
icebp
or
ret
fadds
ja
rolb
xor
lods
xor
sbb
pop
lds
js
push
jg
pop
xchg
sub
pusha
mov
int
pop
fcoml
sahf
addb
mov
xor
imul
adc
add
enter
lock
shlb
dec
popa
mov
inc
xor
lods
cs
pusha
lods
test
mov
shlb
scas
add
lods
cld
and
sahf
shrl
das
pop
push
movb
add
mov
pop
scas
xor
jle
js
push
push
and
jnp
out
imul
add
cld
pop
xor
pop
xchg
jg
dec
pop
mov
insl
outsl
pusha
sub
pop
push
push
cmp
xlat
test
pusha
inc
test
sarb
jmp
mov
adc
push
inc
push
mov
inc
rclb
cs
push
jns
lea
and
mov
in
sbb
clc
lds
in
test
jns
addr16
mov
loopne
sub
incb
inc
and
cmp
mov
sub
fistpl
jns
ret
or
addb
add
js,pt
sar
add
into
push
rolb
jecxz
fistpll
adcb
stc
push
or
and
and
shrb
cltd
adc
mov
jge
ja
fistpl
int3
push
or
mov
jns
and
mov
comiss
pusha
pusha
les
push
pop
or
data16
sub
or
loopne
repnz
lods
in
scas
fwait
cmp
add
xor
xchg
dec
xchg
lcall
pop
lret
aas
mov
or
cmpb
or
sub
imul
add
bound
fs
sub
int
hlt
cmpsl
mov
and
mov
loopne
adc
inc
pusha
idiv
mov
test
inc
xchg
jle
inc
lods
int3
push
pusha
add
les
sbb
dec
xchg
xchg
in
rol
add
hlt
jae
adc
loopne
mov
imul
in
inc
inc
sub
add
xchg
aad
ficompl
inc
push
add
push
out
inc
shrb
and
mov
in
adc
xchg
das
xchg
inc
pushf
fistl
mov
aaa
out
adc
shlb
add
iret
int
inc
inc
jge
out
test
inc
jb
jbe
pop
adc
pusha
addb
iret
ds
insl
shr
lds
mov
ljmpw
je
out
lea
fsubl
cmp
data16
jbe
inc
rol
call
orb
inc
rcrb
inc
loopne
pop
jecxz
cmp
and
inc
rcr
mov
push
fs
out
and
jbe
sbb
loopne
sub
add
clc
scas
int3
cltd
aad
andb
hlt
cld
jno
mov
sbb
add
andb
lea
lock
dec
stos
mov
or
loopne
les
outsb
xlat
xor
cmp
into
je
ret
outsb
ret
rclb
popf
mov
inc
ja
cmc
xchg
ds
sbb
pusha
mulb
out
fdivrl
mov
pusha
pushf
movb
xor
cmp
shll
pusha
rolb
xor
sbb
outsl
cmp
mov
ret
out
xchg
xorb
cmp
xchg
push
test
mov
or
shrb
xchg
dec
push
addb
jg
mov
mov
sbb
cmpsb
inc
pusha
cmpl
js
push
cli
add
inc
pusha
pop
aad
xchg
mov
mov
aaa
xchg
lods
or
das
imul
popa
push
loopne
stos
cmpsb
loopne
jno
sbb
jns
call
xchg
lahf
mov
mov
mov
adc
xchg
hlt
rorb
inc
sti
xchg
pusha
cmp
add
add
sbb
push
add
jmp
and
ja
add
pop
insb
call
loop
in
and
bound
loopne
jbe
not
xchg
adc
lret
les
shlb
cmpsb
mov
mov
jp
push
add
xor
cwtl
mov
inc
mov
push
xor
pushf
ficomps
mov
add
outsl
mov
loope
repz
setae
jo
test
mov
inc
mov
out
daa
ss
in
js
data16
sti
insb
js
cmpsl
mov
in
and
jb
xchg
xchg
stc
imul
mov
pusha
push
insl
icebp
push
andb
es
shrb
xchg
push
and
shlb
mov
push
aas
lahf
lds
jbe
fdivrs
inc
or
pusha
loopne
mov
jp
test
mov
ret
add
push
lock
jne
or
add
out
outsb
add
mov
and
xchg
clc
incb
lret
lock
es
rcrb
and
cmp
out
aas
data16
lret
inc
sbb
ds
insb
jne
pop
les
shrb
sbbb
and
outsb
roll
inc
pop
xchg
mov
add
sti
sbb
push
addr16
test
pusha
jo
mov
loopne
cmp
pusha
loopne
out
pop
sub
pushf
adc
sub
pusha
cld
rorb
cmp
add
and
mov
mov
stc
add
imul
mov
in
mov
mov
mov
imulb
punpckhbw
test
pusha
shlb
add
cmp
and
pusha
add
cmc
mov
lret
sbb
sub
loopne
lods
mov
mov
aam
pusha
and
mov
popa
pop
dec
out
mov
or
xorb
andb
rcrb
lods
add
add
loopne,pn
mov
add
pop
addb
fs
aad
popa
xchg
or
ja
mov
int3
imul
sbb
add
xor
mov
andb
idivb
stos
and
push
pop
test
adc
mov
shlb
lods
add
cltd
pushf
pop
fstpt
sub
clc
mov
out
je
mov
add
outsl
std
ljmp
icebp
mov
xchg
adc
addl
mov
hlt
lret
push
cmp
jne
jge
stos
pusha
loopne
ret
mov
leave
jle
mov
add
push
imul
mov
and
mov
mov
inc
ret
push
lds
lds
test
mov
loope
push
mov
call
mov
movsb
add
push
add
cmp
sbbb
adc
sbb
test
inc
addr16
and
cld
in
push
dec
out
mov
popl
jge
or
mov
mov
mov
int
lds
ret
xchg
imul
mov
mov
lret
insb
repz
inc
in
adc
sbb
jecxz
jbe
and
mov
mov
adc
or
dec
shrb
loopne
push
aam
bound
cld
xor
mov
add
out
xchg
mov
je
or
loopne
addb
lea
pop
nop
lods
inc
mov
ret
and
mov
inc
jg
jp
push
and
mov
loop
imull
and
add
xor
add
ret
xor
loopne
mov
and
gs
rcrb
out
mul
daa
mov
pop
mov
jge
gs
pusha
cmp
and
outsl
ja
hlt
mov
push
lret
xor
loopne
out
jb
sub
sbbb
mov
lret
es
rcll
pop
andl
push
inc
xchg
test
mov
inc
push
inc
mov
inc
inc
mov
gs
inc
jae
icebp
mov
pusha
pusha
push
mov
stc
in
or
loopne
fcmovnb
out
aad
call
adc
hlt
push
es
shrb
jo
inc
mov
add
movsb
rol
fcomps
mov
or
xchg
mov
fsubs
push
inc
mov
add
push
jge
add
pusha
mov
shlb
mov
push
out
loop
dec
pop
idivb
loopne
fisttps
inc
and
nop
loop
xchg
call
mov
mov
mov
fidivs
add
mov
lcall
add
or
ljmp
inc
inc
mov
add
sti
sub
movsb
shlb
pusha
and
mov
and
out
jmp
psrlq
gs
sbb
stos
sub
movsl
jle
fidivl
pusha
xor
aas
and
pop
insl
lahf
add
dec
or
cmpb
and
pusha
sbb
imul
dec
add
mov
dec
push
lcall
xchg
int3
push
mov
pusha
cmpsb
and
mov
bound
mov
pop
ret
pusha
js
lea
icebp
cmp
lock
mov
mov
cmpsb
mov
sub
adcb
xchg
pop
lods
push
xchg
and
pop
shlb
loopne
mov
mov
pusha
pop
and
jo
fistpll
mov
into
pop
fcomps
mov
shl
lea
lods
rol
or
int
add
addb
push
push
or
in
xor
inc
je
dec
jne
pop
mov
cli
nopl
jno
push
cli
nop
pop
jl
add
and
add
in
mov
mov
insl
imul
jle
stos
pusha
pop
movsb
addb
loope
roll
mov
std
mov
andb
add
aam
and
mov
insl
into
and
inc
and
or
mov
ret
sbb
push
adc
adc
int3
cmpsl
int3
cmp
aam
and
inc
loopne
mov
inc
and
mov
or
subb
into
fidivl
mov
cltd
movsl
sbb
push
loope
fadds
test
lea
pop
mov
sub
mov
jge
mov
dec
ror
sub
push
shlb
pusha
or
jp
mov
jmp
mov
add
pusha
stc
xor
imul
dec
repz
push
shrl
shlb
mov
sub
sub
sbb
lret
fidivl
or
xchg
pushf
xchg
jbe
addr16
test
jo
clc
test
sbb
int
ds
mov
pusha
sub
aas
sbb
lods
jne
jecxz
mov
ja
iret
pop
mov
sub
pusha
dec
mov
add
xchg
xchg
xchg
orl
loop
jno
mov
pop
xchg
popa
and
mov
add
mov
xor
mov
loopne
inc
lahf
popf
inc
sbb
pop
mov
not
call
add
pusha
rolb
loopne
and
loopne
addb
pop
testb
pusha
cli
shl
mov
lahf
sti
fidivrs
rorl
call
jb
push
jns
stos
mov
add
push
idiv
lock
push
and
cwtl
and
leave
mov
inc
pop
ret
inc
aaa
ljmp
and
loopne
dec
push
sbb
mov
andb
jmp
lea
shlb
inc
jae
add
mov
loopne
add
loope
lea
das
mov
negb
and
mov
shll
fs
cmp
mov
and
insb
adc
addl
or
js
or
loop
stos
mov
std
ljmp
loopne
cmpsl
jmp
insl
fwait
aas
cmp
pusha
pusha
jmp
lret
cmp
mov
and
inc
sbb
loopne
jne
and
iret
adc
into
push
mov
andb
inc
in
negb
add
xchg
mov
andb
addb
push
andb
pop
rcll
add
loopne
movsl
sti
test
testl
and
loopne
fbld
cmpsb
andb
and
adcb
and
xchg
or
pusha
loop
xor
push
cmp
push
lea
sub
shrb
and
push
add
les
out
mov
jno
popa
inc
jno
mov
adc
shlb
xor
movsb
andb
add
sbb
insl
test
inc
repnz
loopne
loopne,pn
xor
ffree
mov
mov
pop
out
inc
sbb
pop
add
push
icebp
popa
ss
roll
addb
clc
pop
mov
loopne
fcmovu
pop
pusha
test
jbe
dec
or
scas
and
and
arpl
xchg
add
subb
loopne
out
sbb
lahf
clc
int
out
mov
imul
add
mov
loopne
jne
mov
push
pop
in
int3
and
add
mov
call
and
inc
xchg
jg
lcall
inc
enter
xchg
dec
sahf
mov
xor
ror
ljmp
add
shrb
insb
push
stos
xlat
fiaddl
sbb
inc
pop
bound
and
cltd
fstpt
loopne
cmpsb
inc
add
rcr
hlt
mov
into
or
rolb
insl
inc
aas
out
enter
pusha
loopne
cmc
cmp
mov
inc
in
sbb
aas
sbb
or
mov
inc
or
shrb
and
pop
push
push
js
int
aam
and
add
ret
hlt
loope
addb
dec
inc
mov
rcrl
mov
add
idivb
mov
loopne
incb
loopne
lds
loopne
ds
cmp
adc
sbb
xor
cmp
inc
sarb
pop
push
mov
insb
lea
add
add
call
mov
pusha
xor
mov
push
pop
mov
mov
lret
inc
cwtl
enter
loopne
movsb
pusha
inc
cli
les
loopne
ficoml
in
mov
scas
dec
xor
push
sti
or
dec
dec
setne
mov
xchg
add
inc
xor
int3
jl
loope
les
nop
mov
popa
aam
pusha
loopne
repnz
xchg
arpl
loopne
std
add
andb
jp
fistpl
adc
jp
flds
and
lods
cwtl
icebp
or
add
adc
xchg
sub
loopne
push
test
mov
inc
dec
sbb
cmpsb
shlb
scas
mov
push
sti
and
mov
jmp
into
pop
and
es
pop
xchg
in
and
jns
sbb
mov
andb
xor
lea
mov
jae
fs
add
push
push
or
rorb
mov
rol
das
pop
shlb
popa
js
xor
loopne
ficoms
cld
insl
fisttpll
inc
mov
addb
mov
fisttpl
cli
daa
bound
lods
and
jae
inc
xor
cld
jb
mov
jle
inc
out
sub
inc
adc
pop
pop
and
jb
lock
xor
cwtl
ret
add
pop
pop
icebp
cmc
mov
pusha
cmpb
je
xor
loop
jnp
rolb
loopne
sbb
add
pop
mov
mov
imul
sbb
inc
mov
addr16
popa
push
xchg
cmp
nop
sub
add
mov
repz
xchg
adc
cmpsl
fs
imul
inc
xchg
aad
dec
push
adc
sub
and
test
aam
xor
test
pusha
xor
mov
mov
notl
leavew
xor
nop
add
mov
mov
movsl
lahf
pop
repz
xor
push
jp
cmp
pusha
adcb
xchg
sti
shll
cli
data16
fsincos
lds
call
mov
and
mulb
or
lock
stos
mov
fnstcw
mov
push
inc
cmp
pop
add
push
andb
or
inc
les
addb
pop
clc
dec
inc
mov
pop
pop
xchg
add
ror
add
cmp
mov
push
inc
push
pusha
and
pop
push
jns
hlt
mov
push
aaa
gs
inc
nop
lock
sub
sti
xor
add
and
sbb
test
icebp
mov
add
and
lret
loopne
mov
inc
mov
inc
inc
test
mov
inc
mov
test
add
es
mov
and
ds
repz
mulb
imulb
push
movsb
add
aaa
cmpsb
mov
scas
mov
shl
fidivrs
bound
add
mov
inc
xchg
xor
adc
shlb
mov
loopne
jle
jmp
cltd
clc
hlt
push
jb
inc
loopne
xlat
xor
xor
jge
test
pusha
adc
rclb
adc
clc
into
fs
jae
scas
andb
shlb
jno
cmp
mov
xchg
sub
or
shlb
cmpsb
inc
inc
dec
int
fs
cmp
mov
rolb
and
mov
sbb
lahf
xor
mov
add
dec
cmc
inc
sahf
push
push
adc
mov
aas
mov
inc
andb
xor
xor
mov
cmp
xchg
call
imul
dec
mov
loop
or
mov
rorb
pusha
addb
fcmovu
cmpsb
shlb
icebp
movsl
lock
lahf
das
shl
push
ret
pusha
push
fildl
mov
sbb
mov
or
pop
mov
gs
inc
imul
insb
adc
mov
adc
sub
pusha
xor
sub
pusha
iret
mov
inc
popf
into
mov
fnstsw
rclb
fs
mov
mov
sbbb
addb
push
cmpsb
mov
mov
mov
xor
rolb
add
cmp
scas
loop
shlb
imul
sbb
inc
add
cmpsb
inc
pusha
or
jno
sub
cmp
aas
mov
rolb
stc
iret
rcrb
xchg
mov
add
ss
sub
add
insb
cld
inc
dec
loope
sub
mov
cmp
cmc
xchg
mov
mov
inc
xchg
shrb
loopne
jl
jmp
cmp
inc
and
loopne
jg
push
jp
jbe
pusha
mov
add
xchg
xor
and
add
fisubrs
inc
rcll
sarb
xchg
cld
jbe
mov
inc
ficompl
sub
xorb
inc
push
mov
jl
xchg
xchg
mov
mov
loopne
in
das
add
cmp
je
mov
dec
xchg
push
loopne
js
push
scas
and
push
sub
mov
addb
inc
scas
andb
cmp
jecxz
ffree
fsubs
ja
push
into
in
xor
cmp
pusha
loopne
mov
mov
xor
push
shlb
mov
mov
stos
sti
pushf
cmpsl
xchg
pop
pop
push
jae
mov
rcll
sub
pop
add
inc
cmp
ja
into
cmp
test
cmp
add
sbb
pop
push
adc
or
cmp
inc
pop
sub
mov
pop
and
shlb
or
xchg
in
or
ja
hlt
fisubrs
outsb
inc
jmp
inc
iret
and
xchg
out
inc
lahf
xchg
and
sub
inc
dec
jp
xchg
or
cmp
jecxz
mov
insb
js
add
pop
mov
sahf
dec
lods
pop
fcmovb
sahf
gs
cmp
das
scas
add
xor
out
dec
jmp
jmp
jmp
inc
cmp
add
loopne
scas
pusha
and
or
add
pop
jle
in
icebp
pop
push
fldcw
sbb
addr16
dec
test
or
lods
jb
scas
shlb
mov
loopne
sbb
cmpsb
loopne
push
pop
or
jge
mov
imul
cmp
and
shlb
xchg
pop
mov
push
add
mov
mov
pop
out
pop
pop
jnp
fsubrl
loopne
bound
int3
mov
mov
cld
mov
inc
jge
shll
rcrl
and
fisttpl
roll
mov
mov
pop
xor
pop
mov
adcb
std
cmp
std
andb
add
rolb
xor
push
adc
sar
cmp
lods
pop
stos
mov
repz
movsl
sub
mov
std
jbe
dec
iret
xor
inc
cmp
xlat
push
xor
insb
movsb
pusha
add
inc
rolb
pop
jmp
xor
push
aaa
adc
imul
add
and
and
sub
loopne
fstps
sbbb
jb
add
pop
stos
cs
add
cltd
or
cld
jno
hlt
aad
add
jle
cmp
scas
mov
hlt
outsb
cld
sub
cmp
push
and
addr16
xchg
leave
ss
dec
cld
repnz
mov
cwtl
mov
cwtl
insb
pop
cmpsb
pusha
mov
ret
sub
mov
mov
mov
mov
mov
cmpsb
and
push
add
loopne
pop
fidivrs
cmpsl
sub
mov
stos
mov
add
push
add
loopne
mov
pop
nop
pop
arpl
add
pop
std
dec
call
loopne
fwait
aaa
aaa
jne
pusha
mov
test
lret
dec
test
mov
movsl
push
cli
xchg
inc
sar
sub
rolb
and
loopne
movl
inc
std
dec
xchg
mov
push
jge
movsl
vpmaddwd
mov
jle
rol
shlb
xchg
into
sub
mov
pusha
and
xor
add
loopne
imul
sub
push
add
popl
pushf
sub
add
into
adcl
lock
pop
shrb
ljmp
push
fxam
lret
xchg
xchg
pop
sub
cmpb
inc
leave
into
cmp
mov
ficoms
add
adc
aam
add
rcll
stos
mov
rcll
jle
loopne
push
mov
loopne
lahf
out
cmp
cmpsb
pusha
add
mov
xor
jmp
nop
xchg
add
js
cmp
sub
sbb
daa
inc
neg
es
nop
in
fdivrs
sti
sub
adc
add
mov
and
sbb
mov
mov
andb
cmp
mov
loopne
xchg
sarb
mov
int3
mov
and
roll
pop
xor
cmpsl
movsl
sub
pusha
aam
dec
insb
sub
iret
sti
shll
dec
dec
inc
xchg
ja
xchg
and
xor
enter
inc
int
mov
push
loopne
ds
mov
dec
sti
test
fsubp
pop
data16
movsb
shlb
sub
loopne
jns
je
pop
rcrl
into
lods
mov
shr
lods
and
add
sbb
sbbl
int
and
dec
cld
testl
loopne
cld
push
add
mov
push
jp
push
shlb
dec
in
lcall
inc
dec
out
or
and
xchg
cltd
inc
lods
aaa
and
in
or
out
lods
lcall
movsb
loopne
shlb
orl
push
shlb
mov
loope
and
mov
jmp
pusha
or
add
sbb
inc
hlt
cmp
les
shlb
mov
sbb
or
add
out
ljmp
dec
and
out
pop
sub
idivb
jmp
sbb
push
sti
sub
sbb
call
in
popa
sahf
mov
icebp
int
sub
popl
and
dec
fmuls
add
dec
add
inc
mov
add
fwait
in
lds
rcrb
jbe
call
push
in
fisttpll
adc
pop
shl
sub
push
cmc
hlt
ja
push
orl
jb
xorl
dec
mov
filds
pop
inc
inc
inc
sbb
cmpsl
xor
push
mov
xchg
outsb
paddsb
inc
mov
hlt
push
add
xlat
and
iret
push
out
inc
cmp
and
mov
divl
icebp
pop
or
loope
popa
aam
fsubp
add
mov
les
mov
sahf
pop
xchg
fbstp
loopne
mov
fistps
adc
xchg
add
or
es
inc
into
nop
dec
xchg
push
test
inc
lds
jnp
add
add
and
addl
sbb
push
mov
push
insl
movl
into
cmp
sbb
add
add
rorl
inc
mov
cmpsb
and
adc
xor
stos
ret
jg
inc
adcl
fwait
inc
mov
addb
repz
not
push
jmp
mov
xor
cwtl
jmp
and
bound
add
lcall
xchg
add
fistpl
cmp
and
jno
mov
ret
orb
pop
loope
lods
inc
xlat
mov
add
xchg
push
mov
stos
pusha
mov
xor
inc
jp
sbb
mov
cmp
lahf
daa
call
cmpb
pusha
xorb
cwtl
out
in
mov
movl
jecxz
mov
inc
popa
push
add
mov
mov
mov
pusha
xorb
sbb
jecxz
mov
xchg
mov
xchg
jmp
out
scas
cmp
jae
or
sbb
out
std
adc
or
or
or
in
cmpsl
mov
add
jp
mov
add
test
outsl
push
sub
rorb
les
mov
cmp
lods
add
mov
pop
addr16
fisttpl
js
loopne
cmp
add
mov
les
pop
inc
ja
add
loopne
test
pusha
scas
shlb
mov
and
test
pusha
out
mov
or
movb
pusha
pusha
mov
into
call
jle
push
add
jne
mov
out
addr16
xlat
test
rclb
icebp
or
add
jp
lods
cmc
out
mov
outsl
xchg
inc
cmp
and
mov
cltd
shrl
push
and
and
icebp
test
mov
pop
pop
lahf
mov
mov
cmpsb
and
sub
pusha
mov
sbb
loop
jne
shll
test
cmpsl
insb
xchg
or
mov
pusha
sarb
movsl
mov
add
leave
push
push
aad
xchg
out
adc
or
push
or
inc
stos
inc
mov
lods
test
enter
mov
xor
pop
sbb
insb
fsts
mov
and
mov
xchg
cmpsb
add
aad
push
mov
shl
adc
int
jg
push
jp
xchg
arpl
outsl
ljmp
sbb
lret
in
dec
jne
jp
das
sbb
loope
cltd
ljmp
subl
sbb
std
adc
inc
pop
mov
xchg
pushf
add
sub
pusha
clc
or
popa
ret
loopne,pn
push
mov
dec
dec
cmc
pop
or
nop
in
outsb
mov
movsb
loopne
push
and
jns
ret
popf
stc
mov
in
aas
pop
sub
and
rcrl
aas
cli
ss
ret
test
sarb
adc
int3
xchg
mov
mov
adc
out
test
and
add
shll
ljmp
pop
sub
loopne
dec
or
fistl
pop
push
mov
mov
ja
mov
or
or
dec
mov
shrb
sahf
inc
xchg
add
cmc
cli
mov
mov
and
movsl
pop
xor
aam
lock
add
inc
add
and
or
pusha
adc
add
xchg
mov
jns
pop
loopne,pn
xchg
push
scas
enter
mov
orb
out
loop
orl
pusha
add
jp
loope
out
dec
pop
dec
in
add
lahf
push
mov
cmp
and
push
xor
mov
add
dec
jp
test
and
out
lcall
in
mov
xchg
scas
rolb
add
mov
andb
xchg
es
push
leave
or
jne
inc
mov
inc
mov
test
loopne
mov
xchg
sbb
insl
andb
test
mov
outsb
ljmp
mov
and
loopne
shl
xor
cltd
jno
sbb
loopne
int3
dec
pop
insb
mov
add
and
ficompl
out
pop
scas
jae
test
dec
mov
mov
adc
loopne
lahf
cmp
out
mov
sbb
lcall
mov
pop
mov
inc
outsb
loopne
je
pusha
add
rolb
hlt
xchg
lods
shlb
rolb
repz
and
add
int3
cmp
add
loopne
test
jnp
and
arpl
pop
push
xchg
ljmp
jbe
mov
in
pusha
add
mov
cmpsl
ljmp
popf
fisubrl
or
lds
push
add
loopne
jne
xchg
movsb
loopne
jo
addr16
mov
insl
xchg
xchg
and
repz
andl
in
js
sbb
je
add
and
addb
hlt
stos
adc
jb
pusha
mov
mov
cmp
adc
add
inc
iret
stos
ss
ror
pushf
mov
or
das
jp
pusha
and
into
and
int3
ss
pop
jbe
fst
imul
mov
ror
ja
test
shrb
fsubs
dec
push
or
out
cmpsl
pop
jne
lcall
sub
and
and
pop
cmp
xchg
pop
mov
mov
cmp
adc
xchg
jecxz
loopne
push
xchg
or
xchg
push
rol
in
out
sti
mov
mov
andb
rcrb
andb
add
xchg
outsb
call
adc
addb
dec
jnp
pop
out
push
outsl
repz
jge
lea
sbb
and
xchg
pushf
pusha
sub
mov
push
bound
in
lahf
dec
jbe
std
fbld
pop
dec
test
sbb
testb
sarb
shlb
ss
push
and
pop
adc
add
jae
xlat
leave
cld
push
adc
sti
addb
add
or
xchg
fwait
xor
cld
add
movsb
mov
lret
add
inc
imul
mov
jbe
cwtl
jp
lds
pop
mov
xor
xchg
into
lods
lods
inc
and
fcoml
mov
pop
shl
lods
mov
adc
andb
pusha
shlb
and
xor
sbb
cmp
mov
and
jae
jns
xchg
rolb
pusha
in
loop
mov
icebp
mov
xor
jo
shl
mov
mov
mov
test
xor
add
insl
cmpsl
test
loopne
mov
es
inc
cwtl
jle
out
ljmp
andb
dec
aam
std
xor
fistps
add
adc
jo
enter
sarb
and
std
aas
mov
or
loope
pop
lret
jg
mov
iret
es
test
mov
flds
loopne
mov
adc
pusha
jae
fwait
shrl
xchg
xlat
adc
add
pop
push
aad
outsl
mov
push
out
add
add
and
test
in
xchg
inc
push
loopne
imull
mov
ret
jb
rolb
enter
ret
dec
add
loopne
add
test
dec
pop
or
pusha
pop
enter
loopne
movsb
loopne
testb
add
cmc
fistpl
mov
push
lahf
pop
pop
and
mov
inc
push
sub
mov
fdivp
inc
xor
mov
daa
mov
push
cmc
jmp
push
add
push
pop
into
in
dec
cwtl
pop
add
sub
movnti
mov
mov
shrb
and
divl
xchg
rcll
cmp
cmp
adc
nop
int
xor
sbb
nop
pushf
daa
in
add
shlb
and
push
rcll
test
loopne
add
fcmovnbe
std
and
rcr
inc
rclb
addr16
add
add
movsb
shlb
sbb
rcrb
pop
lret
inc
add
jo
test
lods
inc
loopne
daa
mov
shlb
fnstsw
and
into
push
xor
andb
pop
lds
xchg
paddq
rolb
sahf
cmpsl
cmp
sti
or
int3
testl
lahf
xchg
mov
mov
add
push
dec
mov
test
pusha
insb
sahf
fistl
lret
mov
inc
lcall
shlb
ret
cmpl
ret
mov
shlb
and
pop
push
jnp
fldenv
xchg
or
push
popf
cli
add
mov
leave
cmp
xor
pusha
inc
lock
fmull
shl
push
pusha
mov
inc
loopne
mov
clc
test
or
loopne
addb
lahf
andb
dec
mov
loope
mov
inc
inc
sub
outsl
mov
add
aad
mov
and
push
clc
int3
dec
ds
cmp
inc
pusha
mov
push
imul
dec
arpl
lods
cwtl
jg
fcompl
sbb
aam
mov
inc
xor
push
pusha
shl
adc
inc
xor
daa
push
in
imul
sbbb
push
mov
sahf
xchg
and
inc
les
xor
mov
and
fsubr
test
add
sbb
arpl
icebp
mov
das
outsb
pop
mov
int3
scas
out
insb
shrb
iret
imul
mov
mov
in
ror
fiadds
adc
mov
xlat
xor
cmp
add
xor
popf
jne
roll
or
or
jg
ucomiss
dec
jp
fistps
xor
lahf
scas
ljmp
jns
and
loopne
and
jo
andb
andb
and
jge
xor
xor
jnp
stos
push
pusha
pusha
jl
pusha
and
cmp
dec
imul
cmc
jmp
and
test
and
mov
into
ja
lea
jne
pusha
and
mov
or
ljmp
mov
rcr
mov
and
loopne
ds
sub
mov
sub
xrelease
loopne
std
cmpsl
mov
loopne
iret
or
rolb
add
clc
ret
scas
leave
add
loopne
popf
jg
mov
adc
dec
aaa
cmp
test
adc
xchg
mov
pusha
in
jle
pusha
mov
mov
loopne
jb
xor
mov
jle
lods
lock
fiaddl
cmp
in
aas
mov
add
in
enter
fs
in
sub
inc
xchg
sub
and
adc
fmuls
in
int
jmp
fdiv
in
xchg
push
je
insb
pop
in
jo
dec
aaa
addr16
fstpl
andb
mov
inc
fildll
push
inc
mov
xor
lahf
mov
dec
cmp
inc
cmp
or
mov
xchg
iret
xchg
add
lret
data16
int
mov
rolb
movsl
jge
push
pop
push
and
dec
mov
pushf
adc
imul
xchg
inc
xchg
popl
jnp
mov
sarb
dec
in
sbb
xor
push
mov
jmp
push
mov
pop
stc
scas
inc
loopne
xchg
or
inc
loop
dec
pushf
mov
lahf
adc
scas
mov
add
iret
dec
test
lock
adc
ss
pusha
fs
pop
xchg
mov
and
mov
test
repnz
mov
insb
test
add
insb
aaa
cmc
outsb
xor
xor
fisttpll
mov
adcl
add
test
loopne
mov
pusha
push
cwtl
cmpsb
addb
outsl
mov
ror
and
pusha
adc
popa
or
mov
hlt
in
mov
add
dec
add
mov
lock
mov
aad
dec
or
shrb
arpl
incb
addb
cmp
std
sarb
pushf
imul
push
or
adc
jg
adc
into
cmp
xorl
rolb
shl
mov
hlt
and
inc
pusha
sub
xchg
add
hlt
imul
pop
cmpsb
mov
dec
lcall
pop
push
jbe
aad
int3
sub
out
cli
adc
and
test
jp
push
les
pop
bound
mov
and
push
push
or
mov
xor
loopne
dec
popa
repnz
or
out
pusha
rclb
adc
ss
add
xor
dec
into
and
shl
inc
mov
pop
push
pusha
adcb
adc
and
adc
cmp
mov
lods
andb
lahf
cld
stc
pop
arpl
xor
push
fsubrl
fwait
lret
imul
sti
lret
dec
cwtl
push
sbb
mov
or
fsts
daa
or
push
mov
add
xchg
pusha
scas
and
and
and
adc
push
pusha
mov
and
mov
shlb
pop
dec
les
push
mov
add
aam
xor
lcall
fcompl
dec
rcr
add
call
sub
pusha
sbb
pop
fbstp
ljmp
popf
inc
mov
pop
lahf
push
sti
popf
loope
cmp
test
xlat
dec
push
jbe
dec
jmp
pusha
lret
hlt
sbb
mov
loopne
out
push
cmpsl
mov
inc
dec
es
inc
jo
mov
xor
or
mov
jl
gs
outsb
insb
xor
cltd
add
insl
fsubs
pop
movsb
and
les
pop
stos
cli
jmp
cmp
adc
ja
mov
sti
rorl
adc
gs
mov
andb
xlat
arpl
in
mov
mov
inc
and
loopne
mov
test
add
loopne
sbb
xchg
sahf
jbe
andb
fcmovnb
and
pop
cld
lret
addb
sbb
mov
push
shlb
leave
inc
in
jnp
aam
adc
xorb
mov
and
mov
push
pusha
mov
cwtl
push
mov
mov
pusha
jmp
xchg
jmp
popa
movsl
adc
lahf
out
add
loopne
inc
rcrb
and
cmc
xchg
lods
loopne
cmpsl
jo
mov
inc
sbbb
insb
and
xor
sbb
jecxz
rcll
xchg
push
xor
add
mov
dec
gs
out
ljmp
sbb
cli
lahf
outsl
mov
adc
sub
inc
cmpsb
rolb
sbb
sub
pusha
lods
jae
sarl
shl
and
orb
inc
push
std
shl
outsb
iret
pop
out
in
call
clc
cli
or
fdivl
mov
fwait
cmpl
add
mov
mov
fs
call
repz
cmp
jp
call
ja
jg
jmp
mov
pop
faddl
mov
cltd
jecxz
xchg
subl
dec
out
add
addb
and
ret
dec
jnp
sub
in
xchg
xchg
data16
add
add
je
lock
inc
insl
push
test
dec
mov
lahf
inc
cmp
insb
lahf
mov
add
loope
mov
sbb
xchg
mull
shlb
cmp
cmp
hlt
test
das
push
jno
or
add
push
pusha
mov
add
in
fildl
inc
adcb
scas
xchg
sahf
mov
pusha
into
loopne
fiaddl
cwtl
or
cmp
fdiv
xchg
cmpl
cmpsl
sub
das
mov
lea
lret
bound
push
mov
js
andb
push
dec
and
jb
sahf
mov
add
mov
dec
fcmovbe
push
adc
jo
in
cli
and
mov
pop
hlt
dec
push
and
inc
cltd
jle
dec
mov
loopne
ds
andb
repz
stos
popa
pop
push
cmp
add
mov
xor
imul
hlt
sbb
jge
and
sbb
add
inc
leave
aam
iret
jmp
aas
sub
shlb
push
divl
cli
scas
cmp
and
fcmovb
decl
rclb
cmp
add
sbbb
pop
int
jmp
xchg
data16
shl
andb
sub
cmp
mov
lods
rolb
xor
and
pop
rorb
rolb
adc
arpl
das
pop
ret
pusha
mov
addb
enter
rolb
sbb
test
inc
push
jno
inc
mov
pusha
jne
loopne
in
lahf
aas
mov
add
xorb
addr16
out
inc
cmc
mov
icebp
push
mov
movsl
cs
sbb
shl
jae
sbb
or
rolb
jmp
sub
cltd
sarl
push
jb
push
mov
push
movsl
out
dec
into
sbb
out
jg
push
pusha
rorb
xlat
mov
mov
cmpsb
inc
mov
pop
sbb
inc
ja
sub
popa
xor
cmp
insl
icebp
in
addr16
shlb
loopne
fwait
repz
inc
and
pusha
sub
sub
push
inc
mov
in
andb
mov
syscall
test
fs
loopne
cmpsb
inc
rcrb
or
ret
or
outsl
cmp
cmpsl
cld
jns
jge
mov
dec
lock
cltd
push
dec
mov
pop
stos
mov
push
lock
roll
ja
inc
movsb
mov
pusha
mov
and
pop
leave
push
fdivrs
testl
dec
dec
xchg
sub
add
mov
pop
sti
lcall
into
cmp
inc
pop
icebp
sahf
scas
add
mov
xor
pusha
and
xor
stc
xchg
add
fimuls
inc
fldenv
cmp
scas
inc
and
jmp
inc
pop
inc
xor
lahf
push
mov
add
hlt
lcall
add
je
in
inc
and
idivl
mov
aas
sub
je
push
fnsave
and
inc
cmpsb
inc
inc
adc
cmp
dec
stc
rorl
push
pusha
inc
les
loopne
fs
inc
mov
sbbb
out
add
jl
loopne
sbb
cmpsl
popa
xor
mov
pop
shll
rolb
and
mov
lea
dec
cltd
pop
mov
scas
pusha
mov
add
push
and
dec
movsl
lods
push
data16
aam
mov
jp
iret
fs
and
add
addb
addb
adc
jne
pop
lock
and
sbb
cmc
leave
pop
cmp
push
aam
jecxz
loopne
cmp
out
and
add
das
cli
daa
cmc
push
and
mov
xor
and
rorb
out
push
rolb
mov
ljmp
sbb
and
in
popa
ret
cmpsb
inc
sar
add
lahf
int
shlb
add
sbb
fldenv
and
cmc
subl
in
sub
fisubs
inc
jl
and
ss
sbb
pop
lcall
outsl
add
sub
aaa
cwtl
lahf
mov
pusha
sub
lods
mov
mov
sarb
mov
sub
xor
dec
loopne
pusha
iret
lea
mov
rolb
and
test
lds
shlb
call
fimuls
lds
and
pusha
js
in
fstps
pop
pushf
repz
pop
inc
push
jmp
pop
or
in
fmul
fsub
fwait
daa
add
inc
rcrl
pusha
loopne
inc
loopne
shl
shlb
outsb
loope
popf
negb
leave
popa
push
addb
addr16
not
mov
in
jo,pt
insl
xchg
xlat
xlat
jge
xchg
shll
mov
pop
mov
cmpsl
mov
loopne
adc
dec
loopne
xorl
popa
rcll
test
popf
mov
mov
pop
mov
mov
push
jp
push
xchg
add
pusha
invd
rolb
loopne
and
sub
mov
int3
rolb
cld
fstl
mov
inc
lcall
rolb
push
out
test
add
sub
xchg
sub
shl
mov
fimuls
xor
add
inc
adc
popf
imul
push
xchg
lds
dec
pop
loop
inc
pop
xchg
push
mov
call
dec
jns
loop
pop
imul
stos
inc
add
clc
into
or
adc
pop
stos
shlb
pusha
cmp
add
jmp
ret
popf
mov
mov
and
rclb
aad
andb
push
dec
cmpsb
inc
add
push
lods
mov
addb
shlb
pushf
sahf
aaa
test
cmpb
pusha
bswap
add
stos
je
cmpsb
loopne
mov
negl
daa
out
inc
mov
rcrl
add
loopne
xchg
sub
inc
and
lret
jmp
add
call
jne
mov
mov
addr16
add
and
addb
aad
popf
dec
jmp
fisubs
jne
lds
inc
inc
ret
lret
popf
loopne
mov
inc
sbb
mov
aad
mov
fnsave
lea
pusha
inc
mov
sub
rolb
rcrl
adc
out
aas
lret
mov
inc
xchg
jge
fs
jp
lock
or
mov
jbe
mov
shr
insl
pop
iretw
dec
pop
movsl
pop
nop
call
or
out
jmp
jo
ja
movsl
sub
jns
and
rorl
outsb
stos
shlb
iret
add
sbb
shlb
mov
xor
inc
or
inc
and
sbb
sub
popf
add
push
pop
jns
in
jo
push
xor
xor
pop
add
xorb
fs
push
shl
add
jge
sub
cmc
lcall
cmp
dec
xchg
dec
sarb
jp
or
and
mov
add
subb
mov
xchg
cmp
xchg
pop
jbe
add
mov
cmp
fistpl
and
movsw
loop
pushf
out
andb
in
inc
mov
push
nop
je
lods
or
in
lret
push
lds
mov
push
ror
in
inc
out
lret
and
inc
push
cmp
dec
sbbl
lods
jb
mov
lock
and
and
mov
loopne
lds
and
nop
lcall
xchg
xchg
aad
repnz
xchg
insb
rcrl
rolb
jg
add
test
xchg
add
push
inc
inc
xchg
int
neg
add
xchg
pop
sbb
fcomps
dec
push
ret
push
pop
ds
pop
stos
inc
pusha
je
add
cmp
inc
sbb
das
xchg
mov
xor
inc
add
pop
ljmp
mov
push
jnp
pop
jecxz
decb
popa
mov
pop
fdivrs
add
outsl
adc
inc
sub
mov
addb
outsl
scas
add
sub
adc
mov
lcall
shlb
shlb
cmpsb
inc
rcr
sub
cmpps
mov
inc
inc
shrl
loopne
cmp
adc
add
push
sahf
scas
andb
test
inc
shl
scas
das
add
or
jl
cmp
cltd
add
and
or
add
daa
stc
xchg
dec
dec
addb
jns
xor
rolb
mov
out
mov
data16
addb
inc
lahf
cmp
push
jo
cmp
xor
add
call
lahf
test
andb
ret
cmp
and
or
fldt
iret
or
pop
pop
jmp
jne
out
and
push
and
dec
cmp
and
push
popl
dec
fisubrl
jae
or
xchg
lds
add
in
out
aas
and
and
mov
xchg
lret
dec
lods
xchg
add
std
sar
or
pusha
inc
jmp
xchg
fsubs
loopne
xchg
addr16
mov
sarb
inc
sub
mov
fsubl
call
jae
test
xor
daa
jmp
rolb
fcmovbe
cmc
adc
jno
jbe
jno
mov
mov
in
mov
adc
mov
inc
sysret
adc
and
arpl
push
mov
icebp
lret
add
lock
push
andb
enter
add
dec
cmp
popa
lods
add
add
add
xor
cmp
pop
adc
imul
and
fwait
mov
jecxz
aad
mov
xchg
mov
inc
or
in
je
rclb
push
add
jb
scas
rolb
xchg
jp
adcl
rol
mov
jg
clc
push
hlt
pop
mov
push
sub
pop
scas
lock
dec
add
mov
adcl
lods
mov
shll
andb
leave
pop
xchg
jge
mov
loopne
pop
roll
mov
ljmp
lods
and
mov
jmp
sbb
sbb
addb
xor
and
je
in
pop
dec
push
push
jmp
cmpsl
push
inc
cli
testl
fwait
jge
gs
jle
jecxz
sbb
in
lock
dec
jne
cmc
decl
inc
ficomps
dec
push
js
pusha
mov
jns
mov
add
jnp
shll
xor
loopne
in
and
repz
push
fmull
add
test
std
pop
js
imull
fsub
lods
inc
pusha
sbb
pop
mov
rcrb
pop
nop
adc
xchg
cwtl
and
enter
mov
cmp
fs
scas
add
mov
enter
dec
pop
loopne,pn
pushf
sar
mov
add
push
inc
test
fs
mov
add
push
and
cmp
int3
jmp
mov
xchg
mov
mov
mov
stc
movsb
andb
cmp
into
sub
in
inc
jnp
rolb
jbe
push
inc
mov
fwait
dec
ret
jecxz
xor
sbb
adc
dec
sti
jp
sub
mov
mov
pusha
inc
push
push
lds
adc
std
mov
pusha
dec
sbb
sarb
xchg
sbb
inc
mov
jmp
and
insb
sbb
addb
sti
testl
inc
add
xchg
add
mov
and
sub
lahf
ret
mov
pop
rorb
push
or
xor
insb
inc
sbb
gs
and
jp
jp
scas
das
in
hlt
lds
add
addb
fcomps
lahf
pop
test
pusha
and
mov
push
popa
je
in
pop
dec
and
int3
leave
dec
mov
ret
mov
iret
incl
test
icebp
jbe
cmp
addb
es
add
sbbb
dec
jp
arpl
addb
test
fsubs
and
pop
andl
pusha
stc
lret
and
es
and
pusha
mov
loopne
fadd
inc
add
shl
mov
inc
jl
lods
loope
lods
push
flds
jo
jae
xor
fsubs
jno
dec
sbb
push
popf
mov
add
ja
decl
orl
push
popf
call
repz
adc
cmp
adc
icebp
pop
loop
mov
adc
pusha
mov
in
inc
in
push
and
or
add
sub
mov
push
loopne
call
call
mov
push
push
jo
nop
pop
mov
add
push
addb
add
cmp
pop
mov
test
pusha
push
mov
adcb
cmp
andb
jnp
shlb
roll
mov
jge
shl
jge
add
or
inc
add
adc
lock
add
cmp
xchg
shlb
mov
and
insb
mov
shlb
and
shl
add
pop
insb
out
xchg
sarb
inc
and
pop
imul
ljmp
subl
and
dec
in
jns
pop
cmp
divl
add
and
and
nop
mov
sbb
push
mov
aaa
and
mov
andb
jns
jno
mov
push
rolb
dec
addb
loopne,pn
fnstcw
pop
in
arpl
jl
or
add
rolb
enter
add
dec
xor
inc
or
hlt
xchg
add
add
mov
mov
add
cwtl
arpl
dec
jnp
jnp
movsl
pop
xor
mov
adc
jecxz
scas
mov
pop
mov
aaa
fiaddl
loopne
sub
loopne
sub
loopne
xchg
lods
jp
imul
fs
xchg
shll
aad
fstpt
pop
xor
das
mov
mov
inc
scas
inc
pusha
pusha
call
call
addb
xor
data16
and
out
or
add
xor
pusha
out
scas
aad
test
mov
dec
stc
insl
mov
add
mov
ret
icebp
fucomp
testl
dec
cmp
pop
imul
loopne
and
mov
add
shrl
and
jbe
pop
push
daa
mov
pop
push
and
sub
and
mov
fnsave
cmp
hlt
inc
dec
cld
or
jge
lret
jne
pop
push
les
loop
scas
dec
mov
sub
pusha
and
add
faddl
and
push
mov
pop
adc
rol
xchg
or
ret
add
mov
jg
pusha
cmp
add
lock
or
add
add
mov
insb
and
jge
and
inc
mov
xor
ja
xlat
call
jl
or
inc
nop
sub
in
sub
andb
mov
movsl
xchg
leave
out
loope
and
loopne
addl
in
sarl
ret
add
mov
and
lret
fdiv
jl
sarl
loopne
imul
add
stos
inc
repnz
iret
icebp
sbb
cmp
or
addr16
xor
adc
add
lods
loopne
imul
clc
mov
je
in
dec
sti
ret
cmp
in
inc
mov
loop
lods
andb
shlb
xor
addb
or
loopne
lahf
add
pusha
pop
add
div
cmc
shll
mov
add
mov
and
sbb
add
inc
pop
andb
test
enter
xlat
inc
cld
inc
cmpsb
shlb
xorb
mov
fsubs
add
xchg
pop
adc
sub
loopne
scas
mov
pusha
sbb
pop
jp
hlt
mov
rolb
and
sbb
cmp
leave
movsl
push
andb
pop
ret
push
push
rol
insb
shll
push
loopne
je
mov
or
rolb
loopne
and
push
js
jge
inc
incb
jecxz
pusha
jo
jo
divps
cmpsl
addl
mov
lcall
or
and
mov
fs
inc
mov
pusha
mov
imul
andb
mov
or
insb
in
insb
push
dec
mov
addb
mov
stc
xchg
jle
cli
sub
add
in
repnz
pop
pop
popa
hlt
outsl
lcall
sub
and
dec
jno
in
jnp
mov
mov
xchg
mov
lock
lods
sub
movsb
shlb
inc
xchg
mov
popf
add
add
and
cmc
out
lods
add
and
pop
mov
clc
dec
jnp
pop
mov
insl
movb
mov
daa
aad
pop
push
iret
sti
xchg
push
lret
add
push
jns
mov
in
jnp
imul
ja
loopne
sbb
repnz
imul
pop
in
shl
lods
mov
pusha
inc
out
inc
ljmp
inc
cli
jmp
mov
mov
rorb
out
pop
addb
mov
add
lods
add
push
aad
fnstenv
pmaxub
in
xchg
fisubl
sub
add
mov
ss
add
mov
or
cmp
add
cltd
sarb
pusha
add
mov
adc
mov
xor
mov
and
nop
dec
cli
add
loopne
push
andb
mov
dec
or
cwtl
shl
out
pop
scas
shrl
sbb
lds
add
pop
and
inc
imul
add
push
and
pop
and
jmp
dec
imul
mov
add
bound
stos
add
inc
int
push
mov
and
add
jo
shll
mov
mov
inc
or
sbbb
stos
addr16
es
inc
imul
xchg
mov
pop
mov
and
mov
push
inc
xor
adc
nop
pop
aad
shrb
aam
loopne
dec
ret
imul
mov
inc
dec
shrl
push
or
add
add
jp
int
int3
insl
push
mov
inc
and
loopne
je
adc
aad
out
lahf
movsb
add
mov
mov
add
popa
mov
aad
loopne
push
mov
xchg
sub
push
int
iret
push
jae
adc
insl
mov
lds
push
pop
push
mov
or
xor
stos
mov
shlb
and
pusha
add
push
push
mov
addb
inc
insl
addb
fists
fisubrl
cmp
out
adc
addb
rolb
es
dec
testl
mov
xchg
loopne
cmc
pop
add
rolb
jecxz
call
jle
and
jno
add
or
into
pop
inc
test
pop
lret
stos
dec
sbb
lahf
push
mov
cmc
mov
int3
add
shr
loopne
lret
loopne
test
in
inc
rcr
jns
cmpsl
js
jle
add
movsl
pop
cwtl
lcall
stos
and
xor
xchg
test
dec
enter
orl
adcb
sbb
call
icebp
sub
daa
fnstsw
outsb
mov
aam
adc
xor
push
cmp
ror
rolb
insb
or
shl
add
adc
loopne
outsb
and
call
sbb
add
xchg
inc
xchg
bnd
dec
sarl
aaa
loope
fimull
mov
addr16
sbbl
lods
mov
xchg
mov
and
sub
jbe
mov
and
fsubs
cmpb
cld
leave
adc
jb
or
rol
cli
mov
mov
add
push
pusha
sarb
pop
add
insb
push
inc
sub
stc
sbb
mov
mov
fimull
insb
push
fistl
xlat
inc
cwtl
cld
mov
loopne
and
mov
mov
sub
cld
jmp
and
inc
push
pushf
jecxz
xor
hlt
xchg
loopne
in
adc
dec
test
xor
pop
ljmp
in
in
test
and
gs
sub
add
js
test
pusha
pop
adc
jns
xchg
xor
inc
incl
sub
std
and
andb
cld
gs
xor
cs
pusha
push
addb
scas
xchg
lods
shl
in
jle
loopne
dec
loopne
add
sub
or
loopne
mov
and
popa
nop
jne
enter
fldl
inc
mov
push
push
push
add
inc
add
pusha
mov
int3
push
xchg
enter
stc
lods
mov
inc
mov
and
add
mov
adc
mov
int
je
jo
sbb
dec
cmpsb
andb
les
jmp
add
aam
fdivl
sub
fdiv
mov
and
shlb
pusha
and
clc
jo
and
xchg
pusha
inc
sbb
jmp
mov
les
mov
jp
andb
add
push
xlat
mov
test
pop
js
and
jge
call
xchg
in
aaa
aam
loopne
mov
ret
xor
adc
rorb
icebp
push
pop
in
and
loopne
popa
xchg
adc
add
movsb
pusha
pusha
inc
pop
iret
arpl
daa
loopne
jb
inc
mov
stc
fidivrs
xor
fwait
scas
not
repz
inc
sbb
insb
xor
push
cwtl
jle
rclb
xchg
add
mov
add
sub
sub
and
pop
out
out
mov
sbb
cmp
nop
repz
clc
adc
test
sbb
in
or
pop
cmp
mov
nop
pop
int
gs
std
out
out
sbb
movsl
das
inc
aaa
out
dec
iret
adc
jecxz
inc
rcrb
cmpsb
shlb
adc
add
test
jl
xor
rcrl
inc
scas
mov
insb
mov
dec
cld
jge
and
rolb
shlb
addb
dec
data16
inc
sub
mov
inc
xchg
negl
ret
sub
insl
inc
cmp
mov
mov
jns
pusha
xorb
cmpsb
inc
pusha
cmpsb
mov
sub
inc
leave
adc
mov
loopne
ficoml
or
inc
lods
scas
enter
shlb
and
mov
xchg
mov
out
push
and
jae
into
sbb
push
loopne
jmp
gs
mov
loopne
cmp
stos
inc
mov
jns
ss
shll
and
loopne
loopne
in
mov
jmp
sub
inc
movsb
inc
adcb
mov
add
mov
mov
push
dec
cld
cmpsl
sbb
loopne
push
rolb
mov
sbbl
sbb
inc
jae
jno
jbe
dec
and
jle
push
aam
pop
adc
mov
shlb
xor
rorb
and
mov
jge
mov
push
rorb
pusha
call
mov
inc
add
pusha
inc
out
std
cmp
inc
pusha
and
fsin
pushf
adc
pop
mov
cmpsl
sub
xor
das
mov
lods
dec
jp
out
xchg
push
push
pusha
pusha
jl
mov
insl
and
shl
push
xchg
mov
fs
rcll
sbb
dec
std
fwait
lcall
pusha
insb
sub
inc
adcb
adc
lret
sub
pusha
jae
jp
hlt
adc
movsb
loopne
push
pop
and
stos
add
mov
sbb
cld
mov
or
inc
aad
lcall
decb
push
lret
and
or
lahf
push
and
fcoml
push
add
pop
iret
cmp
push
mov
mov
mov
movzwl
shlb
jb
sub
addb
pop
jne
xor
pusha
pusha
mov
fmull
loopne
sub
test
jecxz
loopne
sub
loopne
pop
aad
mov
jbe
mov
mov
outsl
inc
ja
pop
sbb
pop
and
loopne
into
repz
add
push
xor
out
push
in
mov
adc
loop
xchg
cmp
mov
pusha
pusha
daa
mov
sbb
andb
xchg
dec
xor
addb
cltd
dec
xchg
les
dec
pop
jmp
cmp
pop
xchg
sbb
mov
add
or
mov
repnz
fldpi
das
ret
dec
lds
add
daa
loope
loopne
mov
lcall
aas
xor
call
mov
pusha
add
scas
add
stos
pusha
mov
incl
push
int
ja
cltd
stos
mov
test
out
out
dec
or
inc
aad
repz
nop
push
pusha
inc
rcrb
ljmp
stc
lahf
loopne
push
loopne
test
aad
sbb
inc
popf
mov
test
addb
inc
aas
mov
daa
and
and
pusha
loopne
jecxz
popa
inc
sbb
sti
arpl
lea
sbb
filds
stos
iret
das
push
pop
imull
mov
dec
mov
mov
mov
inc
loopne
add
push
cmp
add
leave
xchg
sub
pusha
pusha
xchg
mov
icebp
sbb
mov
les
lret
add
inc
mov
and
and
inc
cmpsb
rolb
push
lahf
add
loopne
mov
mov
mov
add
pop
inc
testl
inc
les
enter
inc
xor
mov
dec
mov
aaa
jnp
mov
sahf
mov
pop
out
push
lds
daa
ljmp
and
callw
cmp
mov
shl
inc
sbb
xchg
ror
cltd
js
inc
add
add
pop
aas
iret
xchg
inc
mov
dec
xchg
ret
mov
xchg
fisubl
pop
jge
lds
loopne
xchg
dec
push
sub
pushf
add
andb
mov
fsubl
testb
adc
and
pop
sub
shrb
pop
ja
pop
pop
aam
lock
in
jmp
adc
rcll
and
add
cwtl
pop
lds
mov
pop
sbb
push
inc
shlb
and
cmp
mov
fbstp
pop
jecxz
fcoms
mov
jno
loopne
clc
dec
xchg
imul
in
xor
jle
iret
push
sbb
cmp
sar
fildll
incl
jns
fstpl
inc
leave
jne
pusha
mov
mov
cmp
cmp
add
add
and
in
push
lds
add
andb
xor
mov
mov
sbb
ret
sbb
xlat
cmpsl
xchg
sbb
pop
jne
add
pop
jmp
cwtl
imul
shlb
loopne
mov
or
sub
inc
test
and
mov
mov
and
add
cmp
push
inc
test
and
or
sub
mov
and
inc
cmp
sbb
cmc
lods
mov
inc
pusha
fucom
shlb
movsl
bound
loopne
inc
mov
add
xor
loopne
pusha
push
and
add
adc
out
jns
xor
js
xor
xchg
fisttps
aad
fcoms
mov
hlt
repnz
xchg
and
sub
xlat
pop
mov
loopne
xchg
icebp
xor
mov
mov
in
loopne
aad
push
ljmp
test
stos
into
ja
push
rolb
add
sub
cld
notb
movsl
nop
lret
cli
cmp
aaa
xor
add
mov
aas
mov
add
mov
shl
repnz
cmp
pop
xor
mov
mov
adc
lods
sbb
clc
mov
cld
mov
ljmp
sbbb
or
pusha
or
mov
iret
rol
or
fldl
rolb
lds
jle
cs
adc
sbb
je
push
sub
push
push
fcoms
inc
push
cmc
int3
xchg
in
shrb
inc
incl
rolb
daa
xchg
insb
imul
enter
scas
xor
ret
jbe
add
pop
dec
mov
xor
imul
sub
pop
pop
xchg
cli
data16
rcrb
add
dec
mov
inc
or
add
sbb
out
push
cld
jmp
jmp
scas
fiadds
xchg
and
lahf
enter
xchg
add
mov
loopne
mov
loopne
filds
cltd
sbb
mov
insl
add
xlat
mov
dec
mov
mov
aam
rcr
and
fwait
in
ficoms
insl
add
add
mov
cwtl
loop
add
loopne
addb
and
and
push
andb
pop
mov
xchg
cmp
lret
mov
pusha
subb
mov
mov
out
ret
jge
jg
jp
popa
popa
loop
ret
shrb
rcrb
pusha
movsl
mov
je
mov
sbb
cmp
add
in
loopne,pn
in
int3
push
sbb
scas
andb
inc
loope
mov
add
jne
and
mov
sbb
in
push
movsl
fnstsw
sbb
fdivr
aaa
jns
adc
fsubs
addr16
mov
rol
cmp
hlt
or
lcall
xchg
aaa
sbb
cltd
imul
pusha
in
and
jbe
outsl
pop
out
mov
mov
in
pop
pop
dec
cmp
cli
ret
xchg
sarb
les
push
mov
and
imul
mov
pop
xchg
sbb
leave
neg
inc
dec
test
or
fldt
test
pop
arpl
movsl
or
mov
xor
jnp
xchg
cmp
cld
push
xchg
push
negl
dec
add
xchg
xchg
shll
lods
sub
shrb
mov
mov
andb
inc
rorb
xor
push
add
sarb
cmp
addr16
jp
pushf
mov
mov
inc
xchg
mov
cmpb
adc
pusha
xchg
lret
inc
mov
push
mov
inc
aas
mov
cmpsb
shlb
pusha
rcrb
and
call
xor
imul
mov
addr16
lret
adc
aam
mov
jae
jle
sub
xor
js
cli
sqrtps
insb
in
and
icebp
adc
sahf
fnsave
aaa
jne
ret
sahf
push
andb
bound
mov
or
jge
add
or
stc
pop
sbb
loopne
jl
pop
rcll
add
xchg
add
inc
cmc
push
jb
les
inc
cwtl
adc
xor
jge
xchg
outsl
test
mov
int3
add
jp
cmc
sbb
addb
subl
fdivrl
fsubrs
clc
and
inc
mov
popf
out
mov
loopne
dec
mov
loopne
cmp
and
loopne
ds
shr
andl
pusha
mov
loopne
or
jne
xchg
out
cmp
scas
and
or
rclb
or
shl
add
in
icebp
xchg
and
add
or
imul
testl
shl
lcall
pop
fs
dec
jno
stc
sbb
divb
loopne
cmp
xchg
loopne
add
adc
push
dec
in
loope
hlt
stos
fs
popf
cld
mov
roll
loop
shll
cld
mov
enter
sbb
icebp
inc
pop
loopne
js
loopne
out
in
adc
iret
xlat
popa
outsb
inc
or
pusha
imul
in
push
mov
add
andb
fmull
sbb
in
aas
xchg
dec
clc
add
add
or
and
inc
sbb
cmc
popl
loopne
mov
aad
sti
xor
add
stos
pusha
add
push
mov
add
sbb
outsl
or
mov
and
dec
push
icebp
lret
push
loopne
nop
pusha
mov
bound
jb
pusha
mov
imul
push
shlb
ret
fwait
pop
pop
pop
loopne
movsb
inc
and
jecxz
adc
cmp
mov
movsl
push
pop
mov
inc
mov
pusha
stos
loop
xor
ljmp
mov
fadds
popa
push
shlb
int3
testb
adcb
call
mov
mov
loopne
pop
lret
loopne
lods
and
fnstcw
cmp
std
stos
mov
or
loopne
orl
add
and
mov
cmpsb
inc
add
lods
jle
movsl
pop
dec
call
mov
js
xor
jns
xchg
jb
pop
cmp
daa
mov
jge
lods
into
xchg
inc
imul
xchg
add
sub
jbe
mov
and
pop
inc
and
shlb
mov
adc
inc
mov
pop
sub
loopne
addb
add
push
js
xchg
mov
pop
enter
mov
shrb
xchg
js
jno
and
pop
loope
or
shlb
and
jne
push
sbb
out
aaa
outsl
stc
xchg
cmp
lea
cmc
sub
inc
decb
addb
js
add
dec
dec
outsb
sti
aad
ret
mov
dec
xchg
mov
xor
pusha
int
mov
subb
loopne
cmp
add
js
pop
lcall
or
jle
movsb
and
rorl
cmpsl
mov
jge
push
xchg
sub
and
dec
and
or
inc
sub
fidivrl
jmp
inc
add
cmp
test
addr16
cli
and
pusha
inc
enter
sbb
ljmp
shl
or
or
pusha
clc
add
add
hlt
mov
movsl
std
sub
out
jl
and
arpl
shrl
fisubrl
ror
sub
ja
mov
and
pusha
push
cmp
adc
mov
sbb
push
pop
push
in
stos
outsl
shll
shlb
sbb
imul
mov
out
lahf
or
add
add
inc
jnp
inc
pusha
ljmp
cwtl
and
loopne
imul
pop
scas
pusha
sarb
js
mov
push
add
lock
test
xorb
inc
fwait
mov
and
inc
movsl
fwait
cmp
inc
add
inc
fwait
jle
andb
jmp
mov
outsb
jmp
cltd
mov
test
aam
fmuls
loopne
sti
mov
pusha
je
cwtl
stos
jle
clc
cmp
rep
stos
addb
mov
mov
sarb
unpckhps
pop
mov
hlt
xlat
push
fisubs
and
cli
push
fnsave
enter
pop
aam
push
in
test
adc
testb
inc
add
fwait
ds
jmp
or
nop
lret
or
xchg
sbb
and
sarb
add
outsl
jae
out
or
inc
pusha
popa
cmp
mov
mov
subl
mov
and
out
inc
outsb
sbb
insl
sbb
mov
mov
xchg
rolb
pop
jp
in
xchg
fldcw
or
mov
sbb
addr16
mov
in
push
lret
xchg
stc
mov
iret
add
add
inc
sbbb
stos
shl
sbb
out
cmp
loopne
push
pusha
sbb
mov
xchg
aam
mov
shlb
sbb
pop
cmovg
fisttpl
push
mov
arpl
fdiv
push
pop
sub
mov
or
inc
and
inc
iret
adcl
rcrb
mov
push
pop
jno
ds
add
mov
and
lcall
repnz
jo
dec
mov
xor
lea
mov
push
outsb
or
xor
rol
push
bound
lret
out
shll
inc
mov
loop
sbb
arpl
sarb
loopne
or
loopne
cld
dec
mov
mov
div
jnp
pop
insb
loop
fsubrp
test
mov
jae
cmp
and
sbb
adc
push
jne
sbb
bound
imul
cmp
inc
add
testl
cmp
push
add
inc
imul
pusha
and
jmp
mov
add
mov
andb
shrb
in
ljmp
xchg
sub
aas
mov
imulb
pop
insl
inc
sub
addb
pop
adc
pusha
aad
iret
std
popf
xor
dec
or
ret
ljmp
inc
mov
cmpl
lret
adc
je
daa
adcl
mov
jo
mov
xchg
dec
roll
cmp
es
mov
out
popa
jecxz
ss
pop
pop
out
and
sti
loopne
mulb
dec
ja
sub
arpl
and
jl
ror
inc
inc
out
jecxz
fisubrl
pop
or
jns
int3
push
addb
insl
and
mov
in
mov
es
inc
repz
pushf
ret
mov
xchg
ret
out
mov
jmp
loope
dec
inc
mov
xchg
sbb
add
mov
mov
fstl
in
insl
xor
sbb
pop
fists
add
rcrb
insl
les
inc
and
std
sbb
in
inc
adc
out
cmp
dec
addb
ficoms
inc
add
iret
or
test
loopne
and
orl
and
inc
addb
lcall
popf
jno
and
jp
inc
mov
in
cmp
push
js
negl
ja
sahf
cmp
cmc
xchg
addb
ljmp
je
pop
jge
mov
andb
testl
movsb
pusha
and
dec
sub
shl
mov
jne
and
inc
rorl
mov
lcall
loopne
ljmp
cmp
mov
inc
add
inc
cli
sbb
fsubl
jne
sbb
inc
js
outsb
pop
jg
test
sub
stos
and
pusha
addr16
adc
dec
sbb
xchg
mov
push
mov
leave
iret
outsl
inc
mov
dec
dec
sbb
or
inc
in
icebp
repz
lret
out
xchg
inc
iret
push
nop
clc
cmp
rcr
pop
lahf
ror
les
movsb
loopne
xchg
cwtl
clc
xchg
popf
jl
inc
andb
and
mov
inc
test
inc
and
and
inc
mov
test
mov
jecxz
and
imull
xchg
test
cs
and
jns
les
xor
jg
andb
rcl
xor
adc
xor
inc
push
loop
rolb
inc
frstor
pusha
repnz
ss
sub
pusha
xor
jle
add
push
sbb
sbb
mov
xchg
cltd
loope
popa
jnp
pop
sti
shrl
loopne
sub
mov
or
pop
sbb
sub
rcrb
andb
cmc
jecxz
loopne
fildl
inc
daa
push
cmpsl
pop
adc
sbb
sub
dec
cli
cmpsb
inc
mov
and
push
loop
push
loopne
and
mov
and
aaa
dec
pop
rolb
and
jbe
or
or
loop
stos
out
cmpsb
addb
pusha
add
pusha
ret
add
and
sbb
push
addb
lcall
and
ret
cmp
aaa
cmp
test
jno
dec
jmp
jle
add
fisubrs
loopne
clc
push
add
pusha
orb
jns
cmp
xlat
push
in
pop
xor
and
jno
out
and
ret
mov
fldl2e
movsb
inc
and
lea
inc
add
mov
and
sub
jp
xlat
xchg
mov
mov
es
shl
or
xchg
fimull
mov
dec
dec
push
and
iret
jge
loopne
xor
add
add
and
shlb
pop
push
les
inc
int
mov
loopne
and
inc
and
mov
sbb
js
icebp
mov
mov
mov
and
pusha
rorb
mov
pop
cmp
push
inc
addb
loope
loopne
out
inc
fsts
lret
aam
jg
push
mov
mov
rol
mov
sbb
andb
xorl
loopne
or
or
pusha
inc
sub
add
mov
cmp
xchg
mov
dec
dec
inc
andb
arpl
mov
pop
movsl
les
and
jecxz
xchg
xchg
adc
lods
pusha
pusha
loope
or
inc
lcall
mov
and
add
sub
fnstcw
push
add
jp
roll
xchg
inc
push
or
mov
sub
mov
adc
push
xchg
push
shlb
jns
icebp
dec
ljmp
es
andb
cwtl
fs
fstps
mov
xor
aam
loopne
inc
cmp
fistpll
out
test
and
add
add
test
cmp
sbb
cmp
ss
imul
rol
iret
cld
jle
xchg
inc
dec
mov
add
and
cmp
jae
js
mov
and
sbb
fld
add
xor
mov
push
cmp
pushf
xchg
bound
add
cmpsl
mov
mov
rcll
mov
js
lcall
inc
mov
add
cmp
xor
iret
jae
mov
loopne
call
jb
loopne
lods
imul
jmp
add
ret
and
pusha
loopne
imul
cmp
jg
out
xchg
inc
int3
lahf
cwtl
xchg
leave
xor
lods
push
lods
inc
inc
in
mov
aaa
push
mov
pop
addr16
daa
ljmp
push
mov
inc
or
and
dec
dec
or
inc
sub
adc
mov
loopne
sbb
add
and
in
dec
add
add
add
inc
push
xor
pusha
mov
jmp
add
and
pop
aad
lds
rolb
mov
add
sub
or
mov
test
mov
sarb
rolb
mov
in
cmp
loopne
scas
and
sbbb
add
aam
cmpsb
mov
mov
and
mov
push
daa
cwtd
ja
sub
test
rclb
sub
andb
imul
loopne
jge
outsb
push
scas
lret
mov
pusha
rol
jecxz
mov
jmp
and
shlb
sbb
sbb
fcoms
ret
jecxz
dec
jecxz
adc
fnsave
sub
and
inc
movd
pop
data16
in
bound
jle
addb
pusha
andb
xchg
push
add
jbe
add
mov
add
aas
out
xchg
int
mov
xor
jbe
pusha
sbbb
into
mov
std
cmpsb
loopne
loopne
outsb
adc
cltd
fnstcw
cwtl
punpckhbw
repnz
and
cmp
and
stc
mov
outsl
and
shlb
popa
hlt
aaa
das
mov
hlt
call
xor
xchg
fs
in
repnz
popa
pusha
inc
pop
scas
loop
push
stos
and
mov
sub
dec
iret
ror
sbb
and
add
mov
adc
stos
leave
cli
test
ljmp
sti
fstpl
rcrl
jns
pop
icebp
xchg
push
push
popa
xchg
xchg
xor
rolb
xor
and
rolb
orb
mov
and
cli
add
mov
gs
push
pusha
dec
addb
and
push
push
jg
push
fs
pop
leave
sarl
pusha
add
lea
cwtl
xor
mov
and
movd
push
jo
dec
add
add
inc
shll
addr16
cmp
push
in
push
pop
add
add
pusha
fistps
jp
sahf
into
add
loopne
sbb
pusha
mov
loopne
aaa
fucom
mov
stc
cmp
mov
mov
mov
lcall
stos
shlb
bnd
xchg
inc
mov
pusha
lods
pusha
inc
xlat
rcl
in
sbb
iret
adc
shll
in
idivb
enter
inc
xor
lcall
rolb
sbb
inc
in
daa
daa
sbb
sub
loop
mov
sbb
inc
daa
sbbl
dec
pop
add
adc
test
rorb
pop
pop
movsl
jnp
lret
addb
push
dec
mov
stos
mov
mov
in
mov
shrb
mov
je
cmp
js
jge
add
pop
xchg
push
roll
sub
lcall
aad
sub
inc
mov
loopne
maxps
or
add
mov
bound
sbb
rolb
jo
imul
sbb
inc
test
add
or
jns
mov
dec
clc
push
add
adc
cld
jge
mov
add
sbb
loopne
xor
mov
repnz
aas
pop
leave
pop
mov
pusha
inc
jp
loope
jb
pop
sahf
pavgb
daa
pop
cwtl
adc
lret
lret
inc
nop
xlat
cmpsl
push
mov
rclb
push
mov
addr16
outsl
repz
add
pop
adc
pusha
mov
add
xor
out
push
pop
mov
data16
inc
mov
sbb
mov
int
orl
add
pusha
push
mov
in
pushf
pusha
iret
push
mov
and
rolb
rol
movsl
je
popa
add
inc
ret
push
aas
ds
jg
pop
es
pusha
pop
or
and
add
cmp
jl
pusha
adcb
mov
inc
sbb
sbb
or
lods
rolb
cmpb
jmp
gs
cmp
xchg
sbb
adc
pusha
sbbb
addb
add
loopne
loopne
mov
and
loopne
inc
pusha
jecxz
xor
and
and
ss
sahf
fistpll
fwait
sub
faddl
loopne
ss
mov
stc
mov
into
pop
adc
add
mov
bound
push
clc
int
lcall
lock
add
mov
loopne
xlat
cmpsl
pop
scas
add
add
clc
sarl
cli
xor
loopne
pop
idivl
adc
xchg
loop
andb
sti
nop
pop
jns
ret
in
jl
xor
mov
int
movsl
out
push
push
adc
loopne
add
mov
cmp
adc
movsb
loopne
dec
rorb
jae
movsb
inc
and
les
inc
jle
pusha
orb
repz
push
popf
pop
leave
jl
jb
sbb
test
add
fwait
clc
sti
push
decb
mov
cmp
shll
testb
sti
sub
in
jge
or
fisubrl
inc
shlb
jne
push
dec
pusha
call
mov
mov
lods
rolb
repnz
jno
dec
bound
push
pop
push
iret
cmpsb
loopne
shl
addb
rcl
add
ror
call
push
add
loopne
scas
addr16
mov
imul
add
aam
add
pusha
lods
lret
push
rcll
ljmp
lock
nop
cmp
mov
loopne
dec
mov
mov
in
cs
pusha
pop
mov
mov
insb
fldenv
add
inc
mov
mov
add
pop
fwait
mov
out
loopne
jecxz
dec
push
lret
rolb
cli
outsb
xor
ljmp
stc
sbb
xor
notl
out
call
std
xchg
mov
pusha
or
loopne
xchg
je
shl
xchg
ret
pop
pop
fsubs
negl
pop
push
jbe
mov
xchg
inc
xchg
adc
pushf
andps
loopne
cmp
bnd
cmp
loopne
insb
enter
mov
adcl
lret
mov
inc
out
scas
mov
jae
fwait
cmp
inc
sbb
leave
pop
out
imul
rcl
dec
pop
in
cmp
and
roll
mov
scas
sub
mov
push
mov
inc
loopne
shlb
loopne
rorb
int3
in
test
sbb
pop
cmp
xor
decl
jne
loopne
outsb
dec
es
sub
mov
push
loopne
sbb
push
lds
hlt
insb
rolb
mov
pusha
loop
shlb
adc
cmp
add
pusha
jge
mov
lcall
and
xor
sub
push
out
push
dec
mov
jo
mov
adcb
and
mov
loopne
clc
push
mov
and
lcall
leave
inc
lret
iret
cmc
xchg
cmpsl
stc
pop
cli
fiadds
jecxz
aas
int3
dec
enter
and
outsb
jge
xor
test
mov
push
in
loopne
test
push
aad
add
add
stc
out
pusha
mov
mov
mov
jnp
roll
lea
test
rcr
addr16
and
sub
scas
mov
add
adc
in
xor
aas
jae
sbb
das
gs
cmc
out
int3
jle
jmp
jb
and
jle
mov
mov
dec
bound
and
repz
push
xchg
dec
inc
xchg
cmc
fsts
shlb
add
in
xor
pop
vmovaps
xchg
ja
mov
pusha
pusha
mov
jl
jo
add
mov
lds
fisubrs
add
pusha
sbbb
fisubl
imul
inc
inc
mov
xchg
sbb
shrb
dec
jle
cmpsl
xor
sti
xchg
inc
in
sub
pusha
daa
sarl
mov
or
shlb
add
xor
dec
or
pusha
jge
and
push
aam
in
cli
add
jecxz
imulb
mov
and
mov
sbb
adc
cwtl
mov
enter
push
jl
gs
loopne
dec
jmp
jns
hlt
nop
pop
sbb
mov
jns
lods
add
add
pushf
aam
pop
add
and
push
addb
jmp
dec
shr
out
arpl
xchg
dec
fsubs
mov
push
scas
addb
sbb
pusha
pusha
xchg
mov
mov
andb
loope
mov
dec
ds
mov
cmp
enter
add
mov
insl
outsl
test
push
cmp
mov
pop
and
out
js
shrl
fdivrl
add
fcompl
fnstenv
cwtl
push
insl
cltd
push
fistpll
xlat
adc
aaa
inc
adc
fbstp
mov
pop
in
in
in
inc
movsl
mov
fadd
inc
ss
inc
and
or
rcrb
inc
leave
sbb
dec
stos
inc
add
pop
aam
add
push
subl
subb
mov
mov
and
mov
dec
leave
sub
push
in
addb
sub
sub
add
jbe
into
inc
lock
jp
out
mov
pop
inc
fsubr
fdivrl
lret
mov
frstor
hlt
in
aas
adc
out
lret
cmp
out
andb
lods
fisttpll
dec
mov
xchg
mov
ljmp
cmp
data16
popa
dec
cmpsl
dec
or
jle
and
shrb
leave
sbb
mov
xchg
push
inc
test
pusha
jo
mov
hlt
mov
mov
js
loopne
roll
and
mov
jmp
loopne
repnz
dec
jmp
cmpsl
fwait
push
xchg
das
or
loopne
push
stos
int
movsl
mov
cmp
xchg
inc
pop
push
loope
and
mov
pusha
mov
pop
rcr
loopne
andb
sub
sbb
cmp
pusha
test
addb
arpl
sbb
mov
dec
add
and
imul
inc
adc
or
add
xchg
xchg
je
stos
loopne
addb
add
cmp
shl
add
sub
fs
sbb
mov
cltd
push
pusha
xchg
mov
push
cmpsl
insb
loope
pusha
cwtl
jecxz
sbb
loopne
scas
loopne
inc
sarb
inc
enter
or
adc
push
popa
pusha
mov
sahf
jnp
aas
dec
pop
out
dec
gs
mov
jle
lahf
or
mov
pusha
mov
ja
dec
xor
les
scas
mov
out
shlb
push
inc
fdivrp
add
xor
inc
loope
and
pop
sbb
and
loopne
ds
xchg
inc
and
cli
mov
push
sub
mov
mov
jmp
pop
sbb
and
mov
cwtl
cmc
inc
subl
icebp
std
adcl
scas
loopne
shll
xor
insl
stc
fcmovb
sbb
pop
das
aad
repz
mov
add
and
dec
mov
insb
shrl
rolb
dec
ja
inc
pop
pop
test
sbb
shlb
xchg
lods
pusha
and
or
add
loopne
inc
mov
and
or
and
lret
imul
gs
xchg
insb
sub
loopne
inc
mov
add
inc
sbbb
in
pop
out
fiadds
mov
xor
jo
loopne
mov
fmull
add
popa
cmp
jmp
add
push
xchg
cld
jae
and
mov
xor
mov
and
mov
cmp
mov
mov
loopne
dec
lcall
mov
orl
shll
loopne
adc
mov
inc
or
in
xchg
repnz
leave
sub
add
out
fmulp
push
pop
cmp
adc
mov
cli
push
and
arpl
ret
or
mov
movsb
inc
pusha
ffree
pop
nopl
fwait
arpl
inc
cmp
mov
scas
and
or
aam
in
cltd
cli
cli
sbb
ja
insl
sub
sbb
int
shlb
pusha
inc
push
jl
out
mov
inc
inc
push
mov
shlb
popa
xchg
pxor
mov
aas
in
flds
aaa
sbb
or
loopne
nop
fsubrl
jle
nop
lret
outsb
insb
xchg
or
inc
enter
inc
pop
pop
inc
mov
rclb
inc
loopne
std
out
lret
sti
sbb
mov
push
mov
inc
jecxz
aad
add
rcr
scas
and
cmp
mov
shlb
sub
and
and
cmc
cmpsb
add
pusha
and
xor
in
sti
xchg
sub
andb
mov
mov
mov
scas
push
inc
nop
ss
mov
mov
iret
xchg
ret
lret
add
daa
mov
jle
sbb
xchg
cltd
and
pop
lock
xchg
jns
ja
and
adc
pop
fistl
shl
in
push
int
in
lahf
rolb
mov
inc
stos
mov
cli
adc
inc
adc
jp
add
fstpl
dec
fldlg2
jnp
jl
sbb
dec
in
inc
ds
loope
mov
mov
add
rclb
sub
pusha
cltd
notb
add
andb
sarb
jmp
fidivs
ljmp
inc
jno
xor
adc
jne
add
mov
jo
mov
add
or
mov
imul
loopne
jecxz
xchg
addr16
je
and
fdivrp
inc
bound
push
inc
rolb
hlt
xchg
and
and
fst
repz
aas
jo
push
add
push
shlb
in
sbb
fidivrl
xchg
rcl
loopne
mov
loopne
xchg
and
xor
mov
addr16
or
rolb
fists
test
stos
loopne
push
mov
enter
fiadds
loopne
lods
mov
ret
or
loopne
mov
add
into
ja
pushf
mov
stos
mov
cmp
pop
mov
mov
andb
shlb
andl
mov
and
inc
adc
inc
xor
mov
daa
dec
fcmovnbe
imul
mov
stos
jnp
or
xorb
jmp
inc
xor
loopne
mov
ljmp
xchg
xchg
pop
movsb
and
and
mov
addb
adc
push
sbb
xchg
inc
fs
mov
and
loopne
imul
dec
push
mov
rol
test
or
rol
addb
inc
push
push
dec
les
out
jb
pusha
rcrb
lods
lods
loopne
push
jp
adc
cmc
xor
insb
loope
add
mov
xchg
rclb
push
rolb
and
push
fwait
sub
sbb
jp
andb
gs
orb
loopne
pop
iret
inc
xchg
arpl
imul
add
sbb
pusha
ror
pop
pusha
add
dec
addb
fnstsw
jo
mov
aad
shlb
mov
or
mov
jae
pushf
loop
inc
xlat
lret
sub
add
mov
aaa
cmp
or
ss
mov
out
mov
cmpsb
add
out
add
add
mov
xorb
add
push
sbb
mov
inc
pop
enter
mov
fwait
inc
sub
add
cmc
andb
testb
in
mov
mov
cmpb
xchg
add
roll
fucomi
sbb
and
add
pop
push
rolb
xchg
rol
push
xor
out
add
inc
or
orl
adc
mov
adc
push
fistpll
pusha
orb
mov
sahf
jnp
loopne
xchg
testl
mov
clc
leave
inc
fcmovnu
jno
push
add
mov
sbbl
dec
das
pop
sub
pop
aas
out
dec
ja
mov
inc
and
loop
addr16
dec
popa
in
pusha
cwtl
cmp
mov
sbb
mov
loopne
xor
icebp
mov
cmpsl
cli
xchg
mov
inc
js
add
jno
dec
jns
sub
test
cmc
lahf
jle
mov
cld
les
and
adc
jbe
inc
push
and
cmp
xor
inc
inc
into
inc
add
ja
cmp
pop
xchg
pusha
clc
xor
test
rclb
rclb
add
xchg
or
mov
jno
inc
mov
jle
insb
mov
add
and
push
dec
cli
adc
mov
cmpsb
addb
stc
ret
outsb
daa
adc
and
js
or
loopne
add
rorb
and
pop
nop
inc
jne
push
add
negl
xchg
lds
jle
sub
shlb
lret
leave
lahf
or
in
dec
scas
inc
rcr
pop
jo
mov
and
adc
sub
jg
add
or
jg
daa
idivb
in
outsl
and
add
jmp
stc
mov
pushf
test
add
inc
add
and
mov
addb
ja
testb
sbb
pop
call
push
inc
and
jnp
jle
lcall
jne
ret
aam
xor
add
cli
push
cmp
xchg
ret
es
mov
into
leave
shlb
cmpsl
js
pusha
add
sbb
out
cmpsb
loopne
jns
push
loopne
mov
mov
mov
lahf
movsb
inc
add
add
pop
repz
andb
xor
mov
andb
inc
mov
pop
mov
xchg
rcll
shlb
je
mov
in
xchg
mov
loopne
and
fiadds
stc
jns
push
inc
ss
and
stc
pop
addr16
jg
ret
fistpl
dec
cwtl
test
andb
call
mov
add
out
dec
push
shl
cmp
sbb
cmp
insl
xlat
adc
andb
nop
jle
call
and
leave
aam
and
cmpb
cmp
mov
adc
or
rolb
cmpsb
inc
add
mov
push
cmp
mov
and
cmc
xor
int
push
and
rorb
movsb
inc
pusha
lcall
jns
sbb
mov
jae
call
int3
xchg
movsl
push
sbb
movsl
and
fisttpll
and
and
test
pusha
push
push
push
movsb
pusha
shlb
dec
pushf
sub
hlt
jge
nop
setns
and
dec
test
aam
loopne
ret
mov
add
stos
and
decb
je
add
shr
movsb
rol
loopne
sbb
sub
test
mov
rolb
lret
mov
and
aaa
sti
in
pop
data16
call
sbb
dec
cmc
pop
stos
loopne
sbb
and
pusha
cli
or
loopne
xor
adc
and
aaa
xor
pop
adc
icebp
out
and
call
outsb
test
jbe
sbb
sbb
pusha
insb
jns
iret
push
mov
add
mov
adc
mov
mov
loopne
sbb
xor
aas
mov
loopne
add
loopne
cld
aam
xor
std
into
loop
incl
clc
mov
sahf
pop
mov
add
xlat
stos
ret
jge
inc
jp
xchg
xor
clc
jg
xchg
enter
and
shlb
jb
or
inc
divl
dec
sbb
xor
sbb
inc
cmp
xlat
mov
jno
jns
xor
ret
xor
sbb
mov
inc
and
mov
add
and
pusha
add
fs
lret
pop
pop
ret
shl
push
push
rol
iretw
ret
aad
pop
outsl
mov
add
sub
std
out
out
mov
aam
es
fistpl
fwait
aam
pusha
rolb
push
js
push
jne
inc
loopne
ljmp
int3
and
cwtl
sbb
rcrb
mov
add
pop
push
push
filds
mov
adc
adcb
adc
scas
inc
inc
and
and
push
or
or
shll
mov
loopne
or
cmc
subl
shrb
jns
sbb
loopne
mov
inc
rolb
fstps
sar
js
or
mov
wbinvd
jo
loopne
cli
insb
mov
add
pop
test
jle
cmp
mov
jne
inc
xchg
lret
add
mov
loop
pinsrw
addr16
and
andb
adc
mov
es
mov
loopne
sbb
inc
push
mov
xor
sbb
mov
add
cmpsb
pusha
and
inc
subb
shlb
inc
nop
imul
loope
stos
rolb
push
js
and
fistpl
and
push
pop
mov
jge
xor
and
stc
inc
clc
mov
imul
lods
inc
orb
scas
add
testl
enter
outsl
push
adc
and
xchg
leave
mov
jmp
loopne
js
outsl
and
rolb
insb
je
adc
mov
imul
sub
and
add
pop
mov
loopne
js
insl
cltd
les
pop
aad
adc
sbb
daa
jne
fdivrp
inc
push
pop
into
jmp
mov
es
test
mov
es
mov
loopne
pop
push
out
add
into
push
fs
mov
daa
sub
loop
mov
mov
pop
mov
int3
pop
cwtl
and
rclb
dec
shl
ror
and
xor
lods
and
pop
sbb
lods
shl
shr
push
inc
shrb
pop
fimuls
pop
cmp
decl
fwait
mov
and
adc
pusha
inc
mov
xchg
and
mov
mov
mov
fnstcw
leave
sbb
mov
loopne
mov
dec
neg
aaa
xchg
popf
and
addr16
pop
addps
into
or
insl
mov
pop
fidivrs
jae
rolw
inc
sub
xchg
or
dec
inc
hlt
sub
xor
inc
or
fcmovnbe
sahf
pushf
xchg
ja
jae
mov
pop
xchg
push
sub
cmp
jg
cltd
repz
loope
mov
inc
mov
les
int
pop
leave
stos
shlb
lret
hlt
adc
inc
push
lret
into
testb
loopne
shlb
out
push
rol
xchg
ud1
dec
xchg
test
int3
mov
inc
divl
mov
iret
inc
xor
cmp
add
movsb
add
fst
jmp
repz
mov
hlt
incl
cmpsb
add
repz
loopne
shlb
ret
iret
mov
roll
push
mov
push
inc
pusha
aaa
mov
and
rol
cmpsw
cmpsb
rol
jle
mov
shr
add
not
ljmp
pop
xor
loopne
adc
mov
data16
inc
add
inc
rclb
mov
ljmp
adc
loopne
mov
andb
pop
or
jo
mov
and
mov
push
pop
or
pusha
fcmovnu
pop
jbe
mov
dec
inc
push
xchg
stc
sub
xchg
aaa
jb
lock
fnstcw
sbb
pop
mov
shll
shlb
shrb
inc
and
arpl
add
or
mov
andb
outsb
and
and
mov
dec
xor
jo
xor
and
add
sbb
mov
sbb
aaa
xchg
fsts
sarl
pop
out
xchg
fstpt
je
andb
jo
sbb
inc
pusha
mov
cmp
sub
imul
dec
clc
call
pop
push
and
dec
mov
fmul
jo
jbe
mov
addb
sbb
add
inc
pusha
xor
dec
xchg
inc
popf
push
mov
push
shlb
jg
je
push
gs
inc
or
pop
fmull
xchg
xchg
repz
mov
cmp
outsl
adc
push
inc
and
andb
or
mov
cmp
push
push
lcall
sbb
sbb
shlb
repnz
test
mov
dec
sbb
jmp
pop
adc
dec
sub
mov
push
push
mov
fidivs
lea
loopne
loopne
cmp
enter
into
int3
mov
pop
add
shrb
in
push
pop
sbb
andps
mov
xchg
gs
ret
ja
push
stc
jp
adc
dec
push
dec
cmp
add
inc
push
mov
and
push
jnp
push
loop
rolb
add
loopne
movq
movsb
loopne
xchg
sahf
inc
shll
cwtl
pop
sub
rolb
fsubs
push
jge
aam
loopne
inc
hlt
fidivs
dec
int
pop
dec
in
and
mov
add
inc
sbbl
addb
adc
xchg
jns
push
mov
gs
movsb
addb
dec
push
and
scas
jne
andb
adc
idivb
and
xchg
mov
movsb
inc
and
mov
cld
dec
test
or
ret
cmpsl
fdivl
pushf
jns
loope
jp
xlat
in
inc
inc
mov
mov
arpl
sbb
mov
out
or
loopne
bound
sub
dec
dec
mov
loopne
push
mov
aaa
dec
jg
ja
dec
adc
adc
jge
cmp
mov
and
mov
sub
xchg
movsb
loopne
cmp
cmpsb
and
iret
mov
sub
and
sbbb
xlat
scas
stc
lods
jecxz
xchg
or
pusha
mov
mov
add
cmp
jno
push
sub
add
mov
fstpl
andb
pusha
push
inc
cmp
addb
subb
ljmp
push
jb
mov
mov
dec
mov
xor
and
ds
ficompl
and
rorb
xor
outsb
jmp
icebp
outsl
pop
in
loopne
insl
fs
les
xchg
int
lods
loopne
stos
pusha
pusha
adc
xchg
popa
mov
adc
add
dec
leave
cmp
mov
xlat
cmp
negl
inc
lret
inc
mov
mov
mov
stc
add
fimull
pushf
int
pop
sbb
mov
loopne
fdivp
sbb
jl
add
xor
add
adc
and
and
add
mov
cs
cmpb
sahf
xchg
pushf
lds
inc
inc
lods
loopne
hlt
cmpsl
sub
pop
sub
popf
jbe
adc
in
push
mov
dec
sub
scas
inc
loop
inc
fsts
inc
cltd
or
pop
mov
push
mov
sub
cmp
shlb
push
daa
fsubr
pop
in
jnp
daa
sub
dec
addr16
aam
sub
movsl
stos
sub
xor
les
movl
add
aas
rorl
mov
xchg
xor
xchg
add
lods
and
sbbb
xchg
lahf
sub
xchg
negl
pusha
and
jne
sbb
loopne
cmc
nop
mov
xchg
and
divb
pop
mov
xor
mov
test
sarb
and
adc
inc
add
aad
lods
jbe
xor
in
adc
shl
in
sti
imul
addr16
pop
nop
sub
andb
jne
mov
xor
sbb
jmp
mov
ljmp
mov
stos
mov
in
pushf
into
int
jecxz
pop
mov
add
cmpsb
shlb
ljmp
andb
and
fdivrl
jecxz
cli
push
addb
adc
mov
pop
adc
outsb
mov
dec
aaa
shrb
mov
dec
xchg
imul
add
mov
xor
addb
outsl
push
xchg
or
xchg
jno
or
rol
push
loopne
push
lcall
aad
stc
js
out
rcrl
lret
testb
addb
add
rcl
jbe
aas
dec
xchg
imul
das
outsl
std
pop
add
loop
pop
enter
and
jae
pusha
jge
lretw
fidivl
mov
ret
mov
sub
imul
mov
pusha
pusha
daa
in
test
and
loopne
fwait
cmp
fcmovnbe
jp
push
pop
int
lret
mov
dec
inc
outsb
sti
inc
hlt
nop
mov
mov
stos
inc
mov
out
push
mov
loopne
sar
jp
push
mov
xor
lea
loopne
sbb
add
mov
ficoml
ljmp
mov
test
pusha
mov
lea
mov
daa
push
xchg
inc
pop
xchg
inc
aaa
pop
push
mov
stos
inc
pusha
push
mov
xlat
and
fidivrs
addb
cmp
ds
mov
repz
xchg
add
xchg
push
ret
mov
xchg
nop
adc
mov
jns
sbb
movsb
inc
pusha
mov
xor
lret
rorl
and
inc
push
pusha
pusha
int3
sub
mov
fwait
inc
rcll
xlat
aam
or
and
das
int3
mov
push
jg
in
inc
adc
data16
add
mov
pop
inc
and
mov
roll
adc
shlb
mov
dec
push
dec
push
fidivrl
mov
inc
movsb
andb
dec
mov
aad
iret
mov
les
lods
lea
add
fistpll
loopne
icebp
js
jl
movsb
and
xor
xor
pusha
shlb
clc
lock
push
pusha
add
mov
adc
fcmovnu
leave
int
mov
popa
mov
add
aam
popa
pop
jo
inc
mov
dec
push
pop
mov
data16
push
fistpl
test
add
mov
lret
mov
inc
pop
clc
cld
and
xchg
fistpl
sub
shlb
lock
cwtl
out
xor
mov
or
mov
and
mov
xor
rolb
jne
push
lock
add
sbb
add
adc
push
pop
mov
and
mov
mov
addb
mov
in
fidivl
icebp
dec
pop
int3
enter
add
sbb
in
daa
test
mov
or
add
push
jnp
cmpl
lret
std
jmp
jo
pusha
inc
xchg
cmpl
bound
inc
xchg
rep
pusha
mov
inc
jbe
sbb
cmp
into
data16
mov
loop
lcall
push
sbb
mov
and
addb
insb
pop
icebp
jp
xor
add
mov
loopne
push
push
daa
shrl
mov
lds
push
push
sub
and
cmp
daa
notl
loopne
int
xor
pop
xor
int3
or
cli
dec
inc
lods
cmpsb
loopne
icebp
iret
add
outsl
stos
mov
scas
and
push
adc
adc
adc
sub
xlat
sbb
shlb
mov
push
mov
rcrb
cld
aaa
dec
ds
adc
push
dec
insl
stos
add
mov
mov
iret
dec
mov
movl
jmp
and
inc
mov
push
pusha
loopne
in
sbb
inc
and
in
test
enter
push
std
imulb
loopne
xlat
mov
push
fsts
imul
add
jo
roll
loopne
pop
fldenv
mov
jge
andb
rolb
dec
popf
rclb
pop
loope
inc
add
aaa
mov
mov
rclb
push
lcall
mov
loopne
xor
inc
jge
inc
inc
ja
mov
inc
loope
ret
aam
dec
lods
loopne
test
xchg
inc
fs
jns
xchg
jb
stc
cmp
mov
enter
xchg
dec
sbb
and
adc
adc
add
rorb
shrb
and
add
pop
dec
movsl
jge
mov
cmp
gs
lret
jo
sub
out
inc
addb
testb
jae
inc
ja
inc
add
xor
aam
jne
push
repz
rolb
or
hlt
fs
add
push
mov
out
and
loopne
mov
fiadds
mov
iret
mov
ss
lods
pop
out
lods
and
mov
fs
aas
rolb
lahf
lret
and
ret
fcom
ja
mov
addr16
aas
mov
outsl
xchg
aaa
push
scas
addb
and
mov
inc
hlt
rcrl
xor
nop
lock
dec
hlt
dec
jo
aam
jns
fists
or
add
dec
pop
lcall
cmp
test
pusha
call
cmpsl
test
sbb
insb
sub
mov
stos
mov
add
inc
or
adc
and
mov
add
and
aaa
cmp
add
lods
loopne
mov
cs
or
add
andb
rcrb
xchg
mov
sahf
pop
xor
loop
aad
pop
jmp
cmp
jnp
or
jl
inc
xchg
repz
and
stos
pusha
pusha
adc
add
andb
loopne
hlt
out
xchg
inc
add
addb
jp
lods
mov
pusha
inc
and
adc
cmp
pop
jb
dec
inc
insb
xor
add
xchg
sbb
mov
mov
lret
sub
inc
pop
inc
in
mov
rol
push
pusha
outsl
aaa
pop
jmp
add
int
lea
mov
add
ljmp
add
inc
bound
mov
sbb
cmp
add
pusha
loopne
push
mov
call
push
dec
sub
jg
aad
lea
inc
and
mov
cmc
xlat
xor
sbb
aam
sbb
mov
lahf
inc
pop
push
fsubr
popf
mov
xchg
push
inc
add
adc
daa
push
outsb
jg
dec
jno
rol
and
jae
mov
popf
jp
jns
mov
aad
dec
ficoms
mov
jns
and
add
fldt
movsb
mov
adc
cli
cmp
mov
pusha
loopne
ret
pop
jnp
lock
jno
int3
dec
dec
and
sbb
xchg
cmpb
mov
inc
xchg
and
mov
dec
push
aaa
bound
cwtl
sbb
call
stos
mov
sub
and
insl
pushf
inc
cmp
roll
add
sahf
test
add
mov
sub
test
ss
cmc
push
out
out
xchg
push
jle
sbb
bswap
std
insl
arpl
push
add
jmp
and
add
add
mov
mov
mov
adc
enter
and
mov
cmp
lods
add
mov
lods
and
mov
ss
arpl
ljmp
and
and
sarb
xchg
lretw
push
gs
lcall
jnp
movsb
loopne
inc
iret
push
xlat
andl
mov
sti
sbb
mov
jb
popf
stc
out
adc
leave
lea
loopne
stc
push
add
loopne
mov
loopne
or
subb
and
mov
fildl
mov
fs
mov
aam
insl
arpl
mov
inc
sub
push
stc
sahf
sub
dec
add
pusha
push
daa
pusha
sub
pusha
adc
iret
out
jne
xor
addb
pop
sbb
imul
dec
push
xchg
aad
imul
lds
not
sbb
ljmp
and
mov
pop
std
adc
push
lea
pop
nop
and
fmuls
or
jp
in
pop
xchg
ror
cmpsl
mov
jle
mov
adc
pop
inc
jns
idivl
into
pop
insb
roll
enter
mov
add
pusha
sbb
and
in
cmp
cs
loopne
push
mov
rorl
in
jg
out
shlb
add
insl
jge
andl
inc
loopne
sub
mov
jg
adc
outsb
jmp
cmp
dec
bound
lahf
addb
inc
and
inc
fs
out
jbe
lcall
pop
insb
xor
ret
cmp
out
fisubrl
shl
and
mov
fisttpll
and
mov
or
sbb
jno
andb
test
loopne
add
or
into
mov
addl
mov
pop
and
and
mov
cli
aas
dec
in
int
imulb
and
lcall
aas
xlat
mov
mov
cmpsb
add
jb
inc
ficoms
fildll
add
sub
pusha
cwtl
cmpsb
add
pop
movsl
xor
lcall
fdivr
mov
and
jge
mov
cmp
xor
hlt
push
dec
gs
call
mov
pop
es
fldt
mov
pusha
test
data16
cli
jbe
enter
push
inc
inc
les
es
mov
inc
push
sub
add
rorb
push
ds
gs
inc
and
mov
and
in
and
add
sub
add
aad
mov
and
loopne
pop
xchg
adc
mov
lcall
clc
push
mov
mov
mov
xor
fisttps
cmp
pusha
icebp
loope
inc
inc
mov
inc
repz
add
sub
andb
xor
mov
lods
add
lret
adc
shl
aam
orl
adc
sub
shlb
and
gs
cs
nop
in
lods
andb
in
cmp
mov
dec
push
pop
adc
insb
sub
mov
add
loopne
gs
mov
int3
xchg
sub
add
imul
add
or
loop
mov
inc
xor
inc
inc
lds
cmp
sub
push
pusha
loopne
mov
test
pusha
mov
pusha
fs
add
inc
or
and
loopne
mov
add
dec
sar
mov
fs
inc
xchg
sbb
jmp
mov
adc
xor
push
out
jle
jb
push
jp
adc
inc
scas
push
dec
sub
add
out
insb
cmpb
andb
loopne
inc
cmp
sti
es
rcrl
xor
in
xchg
lret
out
fisubl
add
das
push
pop
in
filds
jle
loopne
ja
dec
mov
out
adc
lds
js
fisttps
movsl
dec
mov
test
push
cmc
pop
add
stc
data16
loopne
les
mov
fbld
andb
pusha
pusha
pop
xor
loopne
repz
mov
lret
mov
pusha
repz
or
jne
loop
and
push
push
rclb
icebp
cltd
sbb
in
lret
xlat
push
cli
mov
or
pusha
cmpb
dec
mov
pop
dec
cltd
sahf
divb
mov
popf
jnp
stos
jle
adc
outsl
inc
xchg
push
and
fisubs
push
sbbl
add
bound
adc
rol
mov
test
and
rclb
sub
cmc
rcr
sahf
push
xor
loop
push
push
rolb
sbb
push
mov
add
andb
out
add
push
das
cmp
inc
fsubl
clc
cmp
and
inc
pusha
push
pusha
mov
hlt
sub
adc
mov
addr16
dec
scas
xlat
scas
mov
hlt
and
ds
into
lds
mov
out
loop
shll
cld
in
mov
divb
xchg
jo
movsbl
inc
out
and
add
and
add
add
xor
rcrb
adc
inc
cmp
adc
push
and
adc
lret
xlat
sbb
add
xor
xchg
int
rolb
mov
andb
xor
xor
jecxz
fmuls
sbb
js
out
loopne
stc
cmpsb
addb
sbb
and
inc
loopne
repnz
outsl
sbb
mov
add
inc
xor
push
ret
xchg
sarl
inc
pop
mov
popf
test
cmp
sar
call
and
pop
push
inc
and
push
and
iret
outsb
push
mov
jge
mov
sub
mov
cmpsb
addb
sahf
negl
inc
pusha
inc
dec
enter
jmp
daa
rolb
mov
sub
push
or
lods
andb
scas
dec
das
stos
inc
inc
pop
mov
dec
imul
mov
rcrb
jmp
addb
and
pusha
add
inc
and
and
fsub
in
mov
jae
add
jge
ss
scas
cmp
and
or
sub
xchg
add
jmp
ret
sarb
jmp
cmp
jge
in
sub
and
jns
pushf
insb
xchg
mov
in
pop
mov
inc
sub
outsb
gs
loopne
jle
inc
sbb
mov
dec
and
and
pop
inc
movl
mov
jo
add
sbb
jle
dec
loope
fdivr
stos
and
add
cli
add
subb
and
jecxz
mov
sub
subb
jno
jnp
test
pop
pop
sub
rorb
test
rolb
cmp
mov
pushf
sub
sbb
dec
lret
mov
aas
xlat
pop
mov
fwait
jge
mov
rolb
mov
cmp
inc
ss
push
lret
cli
cmp
and
jecxz
fs
mov
dec
imul
mov
clc
lcall
xor
mov
mov
xchg
adc
and
lods
loopne
divb
ljmp
fmuls
push
ret
or
jbe
shl
in
dec
nop
and
dec
repz
repz
jno
call
pusha
inc
dec
js
xchg
fstpl
loopne
pop
mov
ret
pushf
cltd
mov
mov
into
inc
dec
pushf
cmp
lcall
mov
mov
rolb
mov
hlt
add
loopne
xchg
sbb
sti
xchg
pusha
add
push
mov
popf
les
std
pop
je
pusha
xorb
rolb
and
and
inc
lock
loopne
or
out
or
jg
rolb
lods
xchg
xlat
cwtl
push
mov
inc
pusha
pusha
imul
cmpsb
inc
subb
inc
rcrb
pusha
inc
pop
xchg
rcrl
xchg
cmp
mov
mov
lcall
xor
aad
xchg
jb
rolb
pop
adc
inc
mov
lcall
mov
sbb
and
je
mov
sbb
dec
dec
das
fidivs
cmp
addr16
inc
fdivrl
lahf
mov
stos
lret
add
sarl
xchg
scas
pop
fisubl
mov
xchg
loop
fbld
int3
dec
xchg
sub
leave
in
mov
add
or
xorb
fstps
dec
movsl
xor
inc
loopne
lock
jo
or
sub
loopne
jae
jns
and
in
pop
cmp
fcomip
push
jg
xor
push
call
xchg
or
fidivs
test
mov
inc
and
push
andb
fwait
ds
dec
or
pusha
pushf
add
pop
cltd
enter
xchg
jbe
lea
jns
shr
push
add
in
mov
push
cmp
int3
inc
inc
sahf
and
decl
loopne
rol
fimuls
mov
xorl
lcall
pop
scas
and
pop
and
push
shl
push
pop
dec
adc
cmp
mov
flds
add
lock
cmp
cmp
pusha
add
push
rorl
pusha
sub
mov
xor
add
xchg
mov
add
inc
daa
dec
jl
mov
aad
sbb
fbld
and
jl
inc
and
leave
ror
cmp
cld
pop
dec
jno
mov
pop
jg
sub
inc
scas
and
xor
loopne
xlat
or
cmp
dec
and
subb
inc
add
mov
cli
loop
pop
cmp
sbb
pop
inc
xor
jb
mov
and
xor
and
bound
rclb
adc
popf
rcl
lret
test
and
sarl
andb
add
cmp
jns
andb
loopne
loop
mov
lcall
jmp
and
loopne
addb
popa
cld
ret
adc
push
xor
fldl
jns
xor
cmp
jle
and
xor
add
pusha
std
push
xchg
aaa
jle
test
mov
adc
mov
or
and
icebp
scas
and
shlb
andb
xchg
mov
leave
mov
mov
les
pop
sbbl
in
scas
rolb
jnp
and
lret
jp
loopne
xor
repz
cmpsl
jp
outsb
push
cmc
push
jecxz
mov
fstps
jo
repz
or
int3
iret
fwait
cmp
les
jle
push
mov
mov
cmp
mov
in
aam
icebp
aad
and
xor
ljmp
and
lret
cmp
xchg
jp
mov
or
popf
pop
scas
push
sahf
inc
adc
add
xchg
fwait
repz
rolb
ret
add
stos
clc
xor
jmp
popa
sbb
cmp
mov
shlb
addb
add
lea
pop
xor
add
in
scas
and
mov
rclb
xchg
cmp
dec
sub
loopne
addb
or
shlb
adc
jle
js
in
mov
mov
adc
scas
rolb
clc
cmpsb
addb
push
inc
and
int
sbb
enter
xor
das
mov
in
call
or
pop
pop
imul
cmp
mov
adc
lahf
fnstenv
rol
inc
loope
cwtl
bound
cmp
cmc
cmp
add
sbb
add
xchg
daa
imul
xor
loop
call
leave
sbb
gs
pop
cwtl
pop
push
in
add
jno
sub
out
nop
adc
js
mov
mov
loopne
xor
add
pusha
inc
sbb
push
jp
mov
iret
cmp
add
and
add
pop
sarb
adc
pop
sbb
sub
mov
cmpl
jp
loope
pop
iret
imul
repnz
and
in
jb
mov
mov
out
cmpsl
xchg
mov
test
or
dec
adc
inc
push
jmp
inc
or
shrl
xchg
icebp
imul
shlb
addb
jmp
shl
and
shlb
loopne
mov
loopne
cld
and
add
popa
pop
outsb
rcl
jno
je
push
fisttpll
in
cmpsl
push
xlat
insl
lahf
ja
sbb
inc
push
in
outsl
es
and
cmp
movsb
inc
and
fmull
mov
xchg
imul
mov
jns
jmp
ret
sbb
jmp
movsl
jge
jmp
rclb
loopne
insl
cltd
lea
sahf
sbb
test
mov
xchg
ljmp
cld
shll
pop
inc
ja
fistl
mov
xchg
xchg
inc
pop
gs
mov
pusha
movsl
and
inc
enter
popf
dec
dec
inc
and
cmp
sub
pusha
pop
jne
and
add
je
push
test
loopne
xor
add
add
cmpsl
add
fwait
mov
pusha
pusha
inc
sub
shlb
xor
pop
mov
or
pop
jo
dec
cmp
push
lock
add
fdivrs
mov
rcl
jl
push
push
mov
dec
roll
and
testb
pop
icebp
scas
andb
daa
fidivl
rolb
pop
iret
in
jmp
movsl
scas
pusha
inc
std
jno
mov
dec
arpl
cmp
push
add
and
sti
push
test
pusha
xchg
out
and
inc
sub
inc
push
shlb
fiaddl
and
pusha
pop
int
filds
mov
fyl2xp1
out
popf
testb
movsl
xlat
popa
dec
sahf
mov
cwtl
test
fdivl
sbb
fdiv
jge
xchg
subb
cwtl
imul
andb
mov
xchg
xchg
pusha
les
das
pop
mov
pop
test
or
hlt
pop
scas
add
jle
insb
sbb
loopne
push
pop
jne
loope
cmp
inc
iret
or
push
and
loopne,pn
gs
test
xorb
xchg
enter
cmp
mov
es
mov
hlt
xor
pop
add
loopne
xchg
adc
mov
sbb
inc
subb
rorb
mov
and
mov
add
and
scas
outsb
insb
rorl
mov
loopne
popa
mov
and
and
inc
push
repz
call
fildll
mov
and
and
sarb
inc
inc
test
add
jnp
insb
jmp
lcall
xor
mov
mov
loopne
add
add
test
jge
cmp
mov
scas
and
roll
sub
addb
lods
add
cltd
add
inc
stc
mov
jno
push
pusha
and
ret
inc
adc
loopne
stc
stos
fidivrl
test
loopne
push
aaa
adc
dec
insl
cld
mov
add
push
and
shlb
sti
fs
sarb
imull
mov
mov
jno
sbb
nop
dec
mov
jp
clc
cwtl
arpl
ss
aad
ror
jle
mov
mov
ret
pop
adc
add
mov
and
loopne
lcall
pop
popl
into
pop
jae
mov
dec
mov
pop
xor
shrl
shlb
lret
or
movsb
rolb
and
or
push
loopne
scas
loop
cmp
mulps
and
mov
cs
loopne
clc
insb
outsl
popw
lock
subb
and
xchg
xchg
mov
xchg
inc
aad
cmp
mov
sub
add
fs
lea
orb
outsb
loopne
jg
icebp
stc
sub
and
pop
push
mov
sub
les
adcl
sbb
mov
add
shlb
roll
mov
cmpsl
sub
addb
and
push
scas
stos
inc
pusha
int
mov
sbb
push
popf
mov
testl
mov
push
sub
shlb
inc
jnp
add
jae
rorb
int
xchg
scas
sbb
shll
adc
sbb
dec
xor
inc
loopne
iret
sbb
fmuls
xchg
mov
adc
or
loopne
ret
and
jl
rorb
and
dec
fsubp
pop
clc
daa
cmc
fs
dec
jle
test
sub
jae
andb
js
and
mov
and
das
xchg
adc
mov
rorl
inc
sbb
shlb
ss
cmpsl
mov
shl
sti
cmp
les
addr16
inc
sbb
inc
pushf
jnp
inc
mov
adc
jp
fstpl
add
or
xor
pusha
add
xchg
ds
pop
das
cld
pop
ret
pop
data16
pusha
push
jmp
jg
add
fisubs
push
test
xor
adc
shrb
push
mov
icebp
shlb
push
mov
loopne
std
cld
adc
xor
shr
cltd
mov
int3
in
repnz
je
jb
popa
dec
jo
cmpsl
repnz
inc
xchg
sti
push
mov
adc
push
call
icebp
in
stos
hlt
fcmovnu
xor
stc
sbb
aam
inc
test
daa
cmp
inc
adcb
test
xorb
mov
and
inc
out
lahf
xchg
adc
jp
mov
mov
xchg
int
js
mov
std
mov
xchg
mov
and
je
aas
mov
mov
test
jge
insl
insl
cmp
aad
jmp
push
mov
add
inc
loopne
sbb
shrl
movsl
jl
mov
imul
xor
and
imul
insl
stos
dec
pop
jmp
sbb
lret
rolb
rcrb
mov
stos
mov
jmp
pushf
cmp
add
loopne
pusha
loopne
dec
fdivs
inc
sti
aaa
lcall
jnp,pt
push
add
jg
fldenv
ret
nop
mov
rorb
dec
shrb
js
jle
pop
or
sub
add
add
mov
cmpb
rolb
divl
sbb
and
lcall
pop
mov
inc
dec
xlat
data16
into
mov
adc
add
addb
mov
aad
idivl
push
sub
in
cwtl
enter
movsl
pop
dec
jge
add
dec
into
dec
push
aas
push
shl
scas
loopne
ficoml
lods
pusha
mov
loopne
iret
negb
in
aad
and
inc
sub
adc
loopne
jmp
sbb
jbe
sub
adc
dec
pop
mov
xor
movsb
and
xchg
add
mov
mov
in
rcrl
or
fcoms
leave
xlat
lea
pusha
add
and
mov
jbe
stc
imul
leave
mov
xchg
jl
sub
inc
add
inc
jge
mov
or
xchg
push
pop
mov
data16
inc
or
xchg
scas
jge
out
andb
xchg
inc
lock
and
mov
int3
push
mov
into
or
hlt
outsl
rorl
addb
mov
outsb
xchg
gs
add
jecxz
stos
xor
xchg
fs
mov
add
sarb
in
cmp
test
out
mov
jb
mov
addb
mov
out
fcomip
shl
jp
andb
outsb
mov
push
lds
sub
pusha
pop
xchg
cld
lds
mov
loopne
daa
lahf
lods
cmpsb
rolb
mov
push
and
and
outsl
and
dec
jecxz
jle
test
cmp
pop
popa
ljmp
pop
jb
andb
hlt
and
and
mov
inc
jle
loopne
push
xchg
loopne
inc
pusha
xchg
mov
and
adc
add
pop
out
push
insb
push
lods
mov
roll
xchg
and
jb
jg
in
ror
add
rolb
shl
and
mov
sbb
dec
xchg
test
mov
inc
aaa
ljmp
inc
int3
fsubrl
js
mov
movsb
loopne
add
or
and
cwtl
mov
bnd
hlt
mov
jge
xor
cmpsl
xchg
pusha
fcomps
mov
cs
mov
pusha
mov
loop
xor
ret
shlb
and
mov
sub
mov
arpl
sbb
add
mov
cwtl
shl
add
pop
fsubrp
cmpsl
lret
and
test
sbb
daa
fs
leave
push
repz
and
pusha
push
insl
hlt
sbb
dec
mov
inc
in
mov
loope
andb
jmp
and
lock
jno
out
cmpl
es
mov
rclb
and
outsb
mov
jecxz,pt
shl
jge
cmp
add
and
repnz
inc
jge
shlb
test
dec
push
push
cmovnp
sbbb
cmc
andb
xlat
stc
add
jbe
mov
icebp
mov
fsubrs
mov
inc
mov
cmp
lahf
test
lcall
xor
pusha
and
in
push
and
adc
inc
repnz
xchg
int
pop
jmp
sbb
bound
mov
test
jle
loopne
push
cld
fdivrs
scas
imul
adc
out
loopne
stos
pop
pop
loopne
jbe
push
jmp
adc
xchg
movsb
mov
ljmp
add
fs
nop
out
rcll
jns
pop
cmc
les
dec
inc
add
jno
pusha
pusha
iret
xchg
dec
pop
sub
addb
inc
insb
mov
pop
pop
cmc
push
lock
pop
adc
or
mov
shll
jne
stc
in
rorl
pop
repz
lret
dec
leave
mov
subb
mov
movsl
fnstsw
addr16
sahf
outsb
ror
inc
and
mov
nop
and
inc
or
pop
xor
ss
in
add
loopne
jg
push
add
add
subb
addb
loopne
pop
xchg
inc
and
xlat
repz
pop
sbb
or
add
mov
pusha
and
add
dec
mov
popf
shlb
addb
pusha
mov
sub
insl
fisubl
and
mov
push
cmovo
pop
xor
ja,pt
push
arpl
inc
inc
negl
out
sahf
jp
cs
pusha
stos
and
mov
xor
adc
pusha
and
inc
imul
push
in
fldl
stos
sbb
or
jl
add
inc
inc
sub
sbb
and
cmp
aas
jmp
mov
xchg
pusha
add
int3
out
push
mov
add
pop
popa
adc
out
cltd
push
inc
mov
and
xorb
mov
cmp
inc
lret
cmp
sahf
pop
addb
xchg
push
rcll
jb
addr16
inc
icebp
sbb
push
sbb
je
lret
arpl
jae
pop
fdivs
xor
mov
cmp
jbe
mov
out
cld
out
add
mov
pusha
pop
pop
and
fldenv
jnp
stc
pop
test
push
fsubs
inc
and
loopne
sub
jno
cmpsl
xor
mov
aad
and
xor
pop
das
leave
xor
addr16
pusha
subb
scas
add
jl
leave
cmpsb
mov
and
jge
cmp
in
sub
orb
jmp
pop
stos
and
inc
enter
xor
mov
imul
icebp
fmull
cmc
lcall
andb
push
leave
lret
and
cli
pusha
mov
sub
lcall
lock
lret
cmp
addb
nop
jns
pop
or
outsb
jae
out
cli
es
pop
xor
dec
je
jno
mov
xlat
dec
out
ds
adc
outsb
iret
pop
xchg
scas
arpl
test
and
testb
inc
mov
imul
mov
jns
les
mov
push
push
vcmpss
rcrb
push
dec
push
ja
pop
enter
add
push
add
mov
sbb
decb
testb
jbe
mov
mov
subb
stos
bound
pusha
sarb
roll
rolb
and
add
or
and
pop
pop
sahf
outsb
mov
arpl
hlt
and
mov
andb
lret
inc
hlt
enter
push
adc
xchg
jle
pop
fwait
popa
repz
lea
xchg
sahf
fwait
scas
add
pushf
mov
or
cmpsl
sub
add
js
les
inc
ja
addr16
push
xchg
mov
fistps
mov
test
add
mov
rol
push
loopne
outsl
add
test
cmp
in
push
addb
push
xchg
or
add
sti
push
mov
loopne
xor
sti
scas
adc
jmp
xor
mov
sbb
xchg
lock
xor
rclb
and
shlb
fsubrl
loope
jns
pop
out
inc
aad
sbb
loopne
mov
sub
or
pop
shrb
sub
sarb
pusha
inc
dec
repz
dec
mov
push
sbb
mov
and
loopne
lahf
dec
sub
sti
mov
or
inc
js
ljmp
mov
push
mov
dec
cmp
roll
ror
adc
call
inc
mov
sub
xor
mov
jl
xchg
push
enter
mov
dec
jb
lahf
outsb
pushf
fsubrl
inc
adcb
dec
test
inc
and
pusha
in
or
mov
inc
aaa
sahf
dec
enter
fildll
dec
mov
cmp
cmp
add
rol
ljmp
imul
aaa
jge
pop
repnz
add
adc
out
adc
jg
push
out
test
rcl
jne
pop
aaa
insb
andb
mov
adc
insb
sbb
cltd
xchg
dec
push
mov
fistps
stos
and
lock
and
sarl
popf
mov
sbb
or
cmpb
add
pop
lds
pusha
add
loopne
push
push
add
dec
test
pusha
xchg
flds
int3
insl
mov
mov
inc
cltd
mov
inc
rolb
ja
mov
pop
mov
adc
mov
push
lods
daa
idivb
dec
cmpsb
mov
pusha
sarb
add
inc
mov
add
vandps
inc
jmp
xlat
lock
xor
mov
and
hlt
stc
push
loopne
in
repnz
pop
pop
xor
decb
inc
stc
push
inc
ljmp
ljmp
xchg
sub
sub
fwait
pop
pop
pop
inc
daa
rcll
push
movsb
addb
and
mov
insb
sub
inc
pop
into
sbb
pusha
and
arpl
pop
roll
pop
ljmp
pop
aad
pop
test
ds
mov
mov
stos
add
movl
xlat
out
in
inc
rolb
add
dec
popf
adc
test
mov
ret
cmpsl
adc
mov
ror
decl
mov
mov
les
cltd
push
sub
inc
lahf
xchg
jns
lcall
outsl
inc
and
and
pop
cmp
arpl
pop
in
pop
out
shrl
scas
and
add
movsl
in
sti
xor
addb
sbb
dec
imul
out
cmp
rolb
xor
pusha
andnps
and
xlat
cmpsb
addb
loopne
andl
xchg
into
scas
mov
cmpb
stc
push
cmp
cwtl
dec
repz
movsb
addb
addb
xchg
xorb
pusha
inc
push
pusha
andb
jmp
loope
loopne
cmpsb
and
jb
push
push
jge
jns
in
jae
sbbl
cmp
fnstenv
sub
mov
pusha
mov
xchg
aam
mov
push
xor
sub
and
loopne
shll
cli
jl
rol
out
push
into
lcall
cmp
sbb
cmp
inc
push
stc
int
xchg
add
xlat
sub
dec
arpl
jmp
in
pusha
icebp
and
addb
pop
xchg
clc
cmc
xorl
mov
loopne
push
andb
adc
pusha
and
test
xchg
enter
and
and
and
lea
mov
fisubl
push
cmp
mov
push
lahf
gs
and
sahf
test
rcr
inc
jle
cmpsl
add
fists
movsb
shl
add
sub
out
aad
pop
pop
andb
fcoms
dec
dec
pusha
je
icebp
and
gs
orl
mov
mov
inc
frstor
lods
loopne
push
mov
mov
outsb
mov
pusha
inc
ret
mov
push
cwtl
daa
pop
mov
mov
mov
push
iret
fwait
or
lds
loope
and
stos
jbe
mov
scas
add
sbb
outsl
rorl
sbb
in
mov
pusha
mov
pop
jae
mov
and
andb
jae
jecxz
outsb
sbb
cmp
rcrb
pusha
add
lahf
gs
sub
jne
andb
adc
and
push
mov
shrl
subb
rolb
mov
fimull
pop
mov
mov
cltd
hlt
add
lcall
loope
incb
addl
pop
std
dec
in
test
fildll
shlb
addr16
mov
and
in
ret
in
pushf
adc
fldenv
inc
mov
add
imul
xchg
pusha
and
scas
inc
pusha
aaa
das
mov
cmp
pusha
sbbb
mov
in
divb
scas
jnp
aaa
or
pop
pop
out
imul
repz
pop
arpl
mov
xchg
xchg
add
xchg
pop
scas
push
xlat
fwait
outsl
jne
cmpsl
xlat
push
cmp
fildll
mov
mov
mov
lods
and
shl
add
loopne
jp
int
cmpsb
andb
jns
push
btl
repnz
shll
jb
jno
dec
out
loopne
insl
xor
and
push
in
cmp
in
shrl
loop
push
jp
imul
rolb
pop
mov
mov
or
rcl
mov
mov
in
cmp
scas
mov
shlb
pusha
jmp
imul
fldcw
xchg
iret
sub
test
int3
xchg
test
pusha
mov
jg
sbb
push
sub
push
jno
pop
inc
in
mov
leave
lret
pop
mov
and
je
icebp
mov
add
push
rolb
das
sbb
mov
mov
pop
pop
scas
repnz
and
inc
sbb
mov
fwait
sbb
inc
dec
enter
sahf
int
rcr
mov
and
or
rclb
cmp
push
add
jmp
cmp
ljmp
lods
pusha
and
mov
sbb
dec
out
adc
dec
imul
pop
iret
stos
mov
mov
loopne
popf
push
cmpsl
mov
mov
mov
add
pusha
and
inc
inc
push
addb
push
out
push
mov
loopne
jecxz
pop
ret
fsts
push
sbb
pop
mov
pusha
dec
xchg
lret
sbb
rcrl
mulb
pop
mov
test
mov
paddusb
cmp
pusha
and
and
jns
lret
xchg
xchg
jge
dec
push
sub
and
add
push
inc
sbbb
test
cmp
leave
icebp
jns
xor
jbe
xor
and
pop
add
mov
rolb
jb
add
loop
cmpsl
std
int
dec
je
fisubs
adc
sbb
mov
pop
inc
loop
addr16
aad
jo
test
rorb
or
mov
insb
mov
lods
loopne
in
mov
pop
inc
leave
jg
xchg
lahf
push
sti
fsubrs
dec
adc
lds
add
inc
dec
xchg
ret
mov
test
pop
jns
cmp
xchg
iret
test
cmp
jg
mov
sti
add
sub
mov
loopne
dec
push
int
test
bound
into
sub
add
sbb
mov
adc
test
loopne
movsl
inc
mov
mov
pusha
cmpsl
mov
in
ljmp
jg
jne
sbb
ret
gs
sub
mov
arpl
dec
or
and
mov
xchg
jmp
test
and
add
dec
test
push
and
mov
sbb
mov
dec
sbb
mov
jp
out
xchg
bound
rolb
loopne
insl
mov
pushf
xor
mov
and
bound
movsl
adc
stos
loopne
jns
scas
sbb
pop
nop
enter
push
fsubp
shlb
mov
mov
pop
mov
mov
pusha
adcb
xor
mov
sbb
iret
cld
inc
xlat
sbb
add
adc
rolb
in
pop
int
shlb
inc
loopne
cld
mov
addb
jmp
cmpsl
lret
cmp
jecxz
test
repnz
int
cld
xchg
bound
dec
lret
test
cwtl
or
and
rolb
mov
xor
cmp
shrb
pop
aad
andb
into
sub
fistpll
not
dec
aaa
fwait
es
xorb
inc
fidivl
rcll
xlat
fwait
mov
push
jle
jle
fs
repnz
imul
pop
stos
add
inc
shrl
jb
rolb
cmp
push
mov
mov
addr16
fdiv
aas
inc
punpckhwd
add
mov
cld
call
sub
outsl
jbe
movsb
add
orb
pusha
pusha
cmpsl
fsubl
adc
testl
push
shlb
repnz
das
fisubs
fisubrl
rorb
xlat
lahf
mov
loopne
dec
bound
xchg
lcall
shlb
mov
in
sub
loop
stos
pusha
pusha
cwtl
mov
adc
jno
data16
cs
xor
adc
jl
hlt
pop
les
pusha
xor
mov
popa
pop
jp
dec
in
cmp
rclb
ss
mov
xor
cmp
mov
push
vpsrld
push
mov
add
pop
cmpsl
shlb
mov
inc
dec
test
add
sub
add
lods
mov
push
int3
adcl
mov
mov
dec
fucomp
and
lret
call
jecxz
cld
mov
cmp
adc
aad
jns
leave
mov
adc
loop
aad
inc
lret
mov
ret
rcrl
adc
xlat
mov
pop
faddl
sbb
push
inc
mov
fwait
les
test
dec
xchg
dec
lds
sbb
insl
ficompl
ss
bnd
repz
std
pop
mov
add
ss
loop
pushf
ss
outsl
fnstcw
fwait
and
es
and
movsb
shlb
mov
jecxz
fsts
pop
adc
mov
shrl
inc
je
andb
mov
cmpsb
shlb
and
pop
mov
xchg
or
jecxz
xor
mov
addb
xor
sbb
or
test
mov
inc
or
in
movsl
and
add
jae
and
ss
jmp
repz
stos
mov
inc
jb
jnp
cmc
rolb
mov
jnp
jl
outsl
mov
lods
fmuls
mov
mov
jge
dec
jbe
nop
ret
jo
test
mov
addb
xor
rcl
andb
iret
or
pusha
xchg
adc
in
cmpsb
add
in
jl,pt
adc
add
sbb
lahf
mov
adc
loopne
mov
imul
pusha
ret
shl
test
and
in
pop
je
test
mov
pusha
das
push
aad
or
xchg
addb
scas
pusha
mov
ja
mov
lds
xchg
idiv
push
cmp
sti
outsl
in
mov
add
push
shl
lock
adc
loopne
ljmp
add
pusha
shlb
out
out
pmuludq
mov
dec
rolb
bound
mov
xchg
sub
rclb
mov
push
add
dec
ret
adc
jae
add
pop
pop
ljmp
pop
mov
and
jmp
mov
inc
cmp
inc
mov
xchg
xchg
addr16
add
jle
xchg
loope
outsb
ss
rol
add
loopne
clc
mov
push
push
addb
xor
sbb
outsb
fucomi
mov
in
std
ja
sbb
add
jbe
std
insb
xchg
mov
addb
mov
inc
xor
je
push
inc
inc
pushf
jo
cmp
outsl
xchg
out
sub
pushf
loope
jae
imul
fidivl
add
and
mov
imul
lds
inc
and
cmp
mov
sbb
stos
cmpsl
adcl
jbe
shl
xor
test
sbb
sub
outsl
subl
xchg
inc
nop
scas
pop
movl
ret
leave
daa
or
in
or
andb
cmpsl
rolb
rorb
mov
mov
and
scas
int
int
and
cmp
sti
xchg
xchg
and
pusha
imulb
inc
inc
mov
test
pusha
and
pusha
mov
mov
dec
push
adc
adc
xchg
sar
sub
xor
cwtl
and
lods
and
data16
lods
xlat
out
add
inc
cmpsb
and
jne
pop
adc
and
pinsrw
shlb
mov
lret
jp
add
dec
or
lock
or
loop
sbb
mov
pop
sahf
sbb
add
inc
inc
pop
mov
and
movsb
inc
inc
addr16
icebp
inc
test
loopne
movsb
pusha
inc
rcrl
sub
jo
loope
filds
fidivl
nopl
mov
adc
mov
jge
rolb
xchg
adc
adc
sbb
xor
pop
jae
fimull
fistps
pop
into
repz
fistpll
loope
sbb
xor
pusha
and
icebp
bound
je
sbb
shrb
or
xor
lods
mov
ret
inc
mov
insb
popa
dec
mov
jle
push
sar
stos
xchg
dec
aas
mov
jno
or
add
cmp
mov
leave
sub
sarb
movups
repz
testl
mov
adc
lahf
xchg
loopne
push
jns
les
add
daa
loope
xchg
jp
push
andb
cmp
add
adc
shlb
rorb
ja
or
mov
mov
mov
or
cmp
andb
ret
cmpsb
and
les
rolb
mov
in
lea
popf
xchg
insl
dec
sub
nop
sbb
jl
loopne
mov
mov
push
jle
addr16
outsl
outsl
add
mov
or
lcall
add
int
outsb
cld
call
fsubl
rclb
mov
cli
nop
js
sub
mov
fildl
add
mov
adc
pusha
fsubr
push
addr16
loopne
sti
dec
test
jmp
mov
xchg
xchg
dec
movsl
test
push
popa
add
fcoms
movsb
mov
dec
mov
repnz
cmp
fistpl
or
inc
sub
mov
int
lock
loopne
add
lcall
fwait
xchg
jne
mull
push
cltd
lcall
call
in
test
iret
push
xchg
encls
xchg
cmp
cmp
push
jne
xchg
rcrb
sub
jecxz
loopne
mov
xor
mov
jecxz
or
pop
inc
push
and
fisubrs
cmp
ljmp
in
test
inc
xchg
mov
sbb
loop
into
notl
mov
call
imul
stos
cmp
mov
out
or
shlb
push
jecxz
mov
jne
or
rolb
ja
cmpsb
mov
iret
mov
int3
mov
loop
mov
push
sub
adc
call
pop
mov
aaa
pop
pop
or
loopne
push
inc
dec
push
add
mov
push
stos
mov
stos
pusha
mov
rolb
jns
test
inc
aaa
fadds
sahf
nop
jae
inc
subb
addb
mov
loopne
fwait
mov
adc
arpl
mov
sar
lahf
les
pusha
pusha
shlb
iret
fbstp
imul
cli
stc
pusha
pop
js
leave
jbe
lret
dec
mov
jmp
or
xor
shlb
add
aam
inc
inc
cmp
or
add
loopne
stc
pop
cmpsb
rolb
repnz
ss
arpl
lret
mov
daa
mov
or
cmp
add
lea
mov
loopne
shrl
rol
fcompl
lods
sub
loopne
push
and
push
push
andl
inc
inc
fbld
or
loopne
jmp
out
push
fwait
sub
pusha
rolb
or
and
add
sub
and
mov
dec
fcoml
push
or
xchg
and
mov
or
mov
imul
xchg
adc
nop
and
nop
aad
rorb
mov
mov
das
repnz
inc
mov
addb
pop
inc
xor
aam
rcll
mov
shlb
and
fwait
out
lods
scas
loopne
ja
sar
xchg
int
enter
mov
out
pop
jge
clc
xchg
inc
and
xor
mov
and
out
aad
adc
mov
clc
xchg
pusha
addb
pusha
pusha
jbe
loopne
push
jp
loopne
inc
push
sbb
and
pop
push
jns
call
xchg
movsl
nop
push
pop
mov
sub
enter
jne
push
push
aaa
call
cltd
sbb
mov
push
mov
ljmp
loopne
sbb
inc
or
add
or
rcl
loopne
pop
adc
mov
sub
add
push
add
dec
inc
dec
sbb
mov
cmp
push
out
clc
mov
dec
jmp
lods
cli
adc
aas
dec
cli
insb
lock
jo
add
adc
rorb
dec
loope
xor
xchg
mov
ret
popa
out
sbb
fstl
int
call
ds
mov
mov
icebp
pop
pop
mov
mov
mov
loopne
imul
adc
ja
loopne
mov
push
inc
rcrb
negl
push
sarb
ja
in
ja
in
mov
shrb
outsl
fistps
cs
rclb
call
ret
sahf
pop
scas
rol
hlt
andb
xor
mull
add
loopne
mov
sahf
frstor
lods
aaa
sbb
and
inc
in
xchg
repnz
mov
sub
jp
push
xor
xor
lock
and
mov
mov
cmp
js
mov
jb
cmp
add
aam
and
into
scas
pop
inc
or
and
rcrl
and
pusha
lret
fwait
addb
out
mov
movsl
imulb
cltd
shrd
and
mov
add
push
inc
pusha
push
push
or
fisubs
push
xor
or
mov
mov
cmp
jno
cmp
and
loopne
mov
sbb
and
mov
aad
cmp
push
xor
mov
mov
jle
and
out
in
inc
mov
mov
xor
pop
jle
addl
stc
jne
ret
rorb
inc
xor
divb
btr
iret
mov
pusha
andb
addb
in
and
adcb
andb
inc
movsl
push
add
cld
mov
aas
daa
xor
and
lret
and
imul
into
lds
int
outsl
out
xchg
and
push
add
andb
adc
outsl
jns
movsl
adc
pusha
mov
rcrb
pushf
or
andb
loopne
add
sbbb
popf
in
add
inc
insb
ja
jne
mov
pop
jae
das
mov
push
mov
inc
popa
jge
imul
and
inc
psraw
jle
inc
loopne
add
sbb
in
test
loopne
pop
jecxz
mov
add
lret
inc
add
sar
and
mov
mov
cld
inc
into
cltd
sub
add
inc
mov
testl
cmpsl
cmp
sahf
add
pusha
movsb
shlb
pusha
imul
add
sbb
add
xor
les
repz
add
cmp
subl
bswap
mov
test
loopne
ja
lods
inc
add
iret
loope
outsb
out
ljmp
adc
aad
in
les
andb
andb
adcb
add
inc
shrb
mov
cmp
arpl
loopne
and
dec
push
in
movsb
inc
orb
sbb
dec
mov
ljmp
in
push
add
shl
lcall
cmp
dec
mov
nop
inc
jmp
aam
xchg
repnz
int3
aam
repnz
adc
test
push
mov
and
mov
pushf
lods
push
add
iret
test
loopne
xor
aad
sub
pusha
inc
sub
mov
shll
mov
push
testb
and
mov
and
shrb
loopne
shll
add
and
rolb
sbb
gs
add
loopne
xchg
mov
mov
sbb
dec
loope
pushf
xchg
pusha
fwait
jp
push
cmp
ret
mov
mov
mov
std
xchg
daa
ficomps
xchg
xor
jle
xor
in
xchg
in
cmp
sub
lcall
rclb
push
mov
fimull
dec
mov
and
or
mov
jo
lahf
push
pushf
mov
xor
pop
sub
pusha
pusha
xchg
loop
xor
shlb
repz
jo
enter
push
add
inc
loop
and
mov
in
cmp
and
jno
sub
inc
test
shlb
insb
push
outsl
bound
mov
adc
je
mov
add
push
movsl
jmp
add
inc
or
pusha
jmp
pop
sub
aad
cld
cwtl
andb
mov
dec
xchg
les
lcall
scas
loopne
lahf
dec
jns
in
sub
push
loopne
jnp
mov
xor
iret
iret
jnp
jo
add
cmp
lods
fxch
cmp
insl
stos
inc
inc
int
pop
outsl
xchg
jecxz
cs
xchg
addb
jnp
lock
shlb
and
sbb
movsb
inc
pusha
sub
push
or
and
shrb
inc
pusha
dec
cwtl
ret
lahf
mov
nop
mov
inc
ret
negl
mov
int
loopne
dec
repnz
cmpsb
mov
mov
inc
call
jp
add
loopne
rol
xor
insb
mov
addb
mov
ret
outsl
ja
cmc
push
mov
rolb
rcl
loopne
ljmp
adc
push
pop
lret
js
out
push
mov
shlb
inc
pusha
jns
push
je
pusha
and
adc
loopne
ret
pushf
fstl
rcll
aad
stos
add
jmp
in
ret
inc
data16
notb
sbb
js
enter
add
shlb
shlb
add
push
pusha
mov
adc
inc
sbb
mov
or
andb
pop
loop
outsl
divb
loopne
inc
insb
aaa
cmpsb
and
icebp
xor
mov
xchg
outsl
and
sti
pop
aaa
stc
sbb
jo
fcomip
mov
repz
push
jmp
jae
aas
and
add
mov
jno
cmp
lret
cmpsb
shlb
leave
sbb
lods
add
mov
pop
shrl
dec
pop
and
pusha
jecxz
jb
loop
loopne
xor
mov
xchg
call
or
mov
shl
and
xchg
lret
std
jae
or
dec
mov
ss
cld
rorb
and
ljmp
in
test
jbe
lahf
pop
jb
xchg
cmp
pop
fmuls
rclb
loopne
dec
jns
xor
imul
cmpsb
mov
adc
inc
pusha
adc
jo
pop
cmp
mov
jae
and
inc
push
sbb
jns
adc
sub
pop
ss
nop
inc
jns
iret
ljmp
inc
mov
push
add
xor
loopne
andb
add
mov
inc
imul
lods
and
lock
jmp
or
inc
iret
lods
inc
mov
call
sahf
inc
jg
movsl
fcom
cli
cld
inc
xor
add
mov
mov
les
lret
int
jnp
fsubl
cltd
test
cmpsl
and
fiadds
addb
dec
stc
je
mov
outsb
loopne
sbb
add
hlt
adc
in
popa
jno
pop
pop
xor
xor
inc
int3
add
xchg
mov
orb
out
lcall
in
xor
push
test
xchg
dec
push
loopne
sub
inc
nop
push
loopne,pn
lahf
sahf
xor
cmp
inc
scas
add
iret
cmp
and
addl
mov
cmp
push
lds
lea
dec
sub
lods
loopne
mov
mov
inc
and
xchg
loop
mov
sub
sarb
xchg
test
and
rolb
rcl
mov
add
xchg
das
repnz
pusha
jns
sbb
fst
aad
xchg
in
and
pusha
sub
inc
ss
or
sub
rolb
xchg
mov
add
or
sub
rolb
cli
loopne
enter
and
inc
popf
and
xlat
imul
pusha
mov
iret
mov
mov
xchg
daa
stc
int3
mov
or
add
sub
popa
out
adcl
add
push
push
out
int
les
test
add
add
jns
rolb
push
and
in
imul
or
addb
sbb
mov
xchg
adc
imul
lds
das
int3
sbb
ret
int
mov
lret
mov
in
dec
xchg
fidivrs
pushf
or
mov
sti
xchg
jb
rol
and
adc
mov
cmp
pop
xchg
xchg
push
push
mov
mov
mov
xlat
add
mov
outsb
call
sub
sbb
cmp
shrl
mov
pop
mov
leave
xchg
in
clc
xchg
mov
pusha
inc
cmp
pop
dec
sbb
pusha
add
int
cmp
stc
addr16
push
add
pusha
roll
shlb
mov
hlt
jb
cmp
lea
subl
jecxz
cltd
push
les
mov
add
pusha
cmpsb
add
lods
aam
cmp
insl
aas
das
mov
stc
fdivr
and
dec
dec
out
push
cmp
loopne
stos
add
gs
dec
repnz
cld
mov
fwait
jl
addb
leave
popf
rcrl
lret
loopne
hlt
adc
jl
add
ja
fdivl
sub
push
sub
add
add
or
aaa
outsb
movsl
inc
mov
ret
push
and
cmpsl
rolb
and
mov
lds
push
and
inc
and
pusha
sub
cmpsl
push
jle
in
sbb
xor
push
inc
jb
adc
push
mov
loopne
sub
inc
into
adc
sbb
shll
fnstsw
xor
xchg
out
ret
dec
adc
ds
push
dec
outsb
imul
or
loopne
xor
loopne
aad
mov
add
pop
test
inc
fwait
call
bound
rolb
push
adc
adc
inc
add
addr16
push
loopne
mov
xlat
add
sub
rol
xor
cmp
push
push
inc
mov
and
add
and
shl
dec
mov
inc
dec
xlat
lcall
adc
mov
outsl
out
and
and
add
addb
iret
add
pop
jp
insl
push
dec
lret
pop
cmp
and
add
inc
mov
inc
jno
lock
cmp
inc
test
loopne
jnp
icebp
adcl
rolb
mov
add
xchg
aam
movsl
dec
lret
dec
roll
fcomps
shlb
jp
stos
pop
in
cmp
inc
pusha
imul
jecxz
addb
inc
inc
pusha
inc
adc
add
shlb
add
negl
push
add
andb
dec
push
adc
or
andb
and
and
pusha
rclb
jae
add
lods
pop
ds
push
and
fwait
dec
aad
sbb
mov
xor
stc
fistpll
fsubrl
loope
mov
pusha
subb
mov
fcompl
mov
xchg
cmp
add
cmp
inc
and
inc
push
ficomps
aam
mov
xor
push
mov
jg
inc
mov
and
and
shlb
ficomps
mov
xchg
fistpll
pop
dec
pop
pusha
mov
imul
js
loopne
hlt
iret
dec
sbb
outsb
mov
pusha
aam
mov
test
pusha
cmpsl
xchg
inc
aad
mov
pusha
sub
test
or
fimuls
add
imul
cltd
iret
das
dec
push
inc
loopne
dec
sbb
daa
sub
inc
adc
repz
xor
daa
and
and
pusha
and
arpl
sub
mov
ljmp
dec
xchg
xor
pusha
xlat
add
icebp
push
mov
stos
fisubs
inc
sbb
push
ss
das
add
and
pusha
xchg
rcrb
cmp
loopne
and
aam
inc
loopne
xor
ret
push
pop
xor
repz
push
loopne
stc
jmp
daa
dec
imul
mov
in
fmul
and
inc
fdivrl
mov
or
inc
push
mov
pop
and
loopne
jg
push
push
ljmp
cwtl
in
xchg
pop
testl
leave
into
jno
addb
add
xchg
arpl
inc
jmp
std
fadd
pop
push
jne
sub
add
xchg
mov
popa
xchg
mov
pusha
add
and
add
sbbb
shrb
ljmp
addb
bound
mov
aam
adc
or
mov
frstor
outsl
push
addb
inc
and
int
pushf
push
mov
mov
inc
jbe
jl
icebp
shll
loope
inc
sbb
lret
mov
addr16
pop
adc
xor
out
ret
into
adc
mov
dec
rclb
ja
inc
jo
ret
lahf
add
and
into
sub
call
pushf
stc
int
pushf
sub
inc
mov
mov
sarb
add
mov
mov
mov
mov
ja
popf
sbb
add
push
shlb
int
mov
cmp
addb
insl
xlat
push
movsb
inc
inc
jg
test
insb
push
sub
mov
cmp
loopne
xor
mov
lahf
ret
lahf
fisubrl
xchg
xchg
and
fmulp
stc
lds
loop
rolb
add
mov
aas
negb
ja
test
add
inc
loop
jg
fwait
or
xor
dec
and
and
andb
jns
mov
sti
or
loopne
add
cmpsb
addb
pop
push
sbb
in
push
mov
push
and
and
adc
inc
inc
shll
fistps
jo
push
pusha
pusha
js
loop
cmpsb
pusha
mov
shlb
pusha
loopne
pushf
fsts
scas
mov
lds
movsl
add
mov
jno
sarl
shlb
pop
jge
dec
sbb
sub
pusha
inc
xor
add
cli
jbe
adc
push
imulb
mov
lcall
push
pop
mov
pusha
hlt
repz
xor
mov
mov
add
jle
jns
scas
rol
jl
or
addb
test
or
loopne
cmp
and
cltd
xor
pop
sbb
sub
lock
jns
add
int
xor
shlb
lret
divb
sar
cmp
hlt
mov
rclb
jae
sub
dec
pusha
insb
out
mov
outsl
xor
aam
dec
in
ret
ds
popa
movb
sbb
pusha
inc
ja
sarb
and
subb
mov
cltd
in
std
mov
sbb
add
insb
mov
inc
hlt
fistps
and
add
mov
repz
jecxz
mov
dec
call
shlb
jo
pop
pop
cmc
out
fmuls
loopne
fstl
imul
popa
imul
mov
out
sbb
push
je
imul
pusha
addb
neg
fimull
loopne
jecxz
arpl
cs
subb
jp
pusha
pusha
cmp
sbb
sub
loopne
fucomip
stc
stc
sbb
stos
and
adc
in
jecxz
mov
or
into
lret
movsl
cmc
jl
sub
loopne
lret
adc
and
scas
addb
sar
add
add
sbb
mov
mov
jp
in
in
hlt
jp
lahf
pop
mov
imul
in
sub
or
add
pusha
sub
loopne
loop
insl
adc
call
mov
and
mov
andb
lahf
or
scas
shlb
inc
add
in
inc
dec
push
and
or
loopne
inc
lret
js
ljmp
sub
mov
or
loopne
fiadds
lret
sbb
syscall
popa
add
shrb
dec
push
xor
loopne
xchg
pop
mov
dec
out
addr16
shlb
loopne
mov
xchg
clc
mov
xlat
or
andb
xchg
xor
jecxz
or
and
xor
inc
loopne
xor
outsl
add
sub
xor
and
pop
aaa
jmp
icebp
pushf
adc
orb
mov
mov
inc
mov
mov
sbb
mov
test
dec
mov
nop
int
jo
cli
xchg
jmp
cmp
cld
xchg
push
in
mov
dec
pop
dec
mov
test
into
loopne
pusha
inc
fdivr
pop
or
fidivl
or
inc
or
mov
adc
pop
pop
ds
andb
mov
lret
sub
and
jns
dec
add
in
rep
inc
insl
xchg
inc
jb
xchg
jp
adc
xchg
sub
icebp
mov
add
xchg
and
loopne
out
mov
jb
xchg
xchg
out
mov
andb
mov
adc
sbb
or
mov
jmp
jnp
addb
aad
bound
rol
sub
mov
shrd
out
mov
lea
in
andb
cmp
or
add
add
push
mov
fs
ficompl
sbb
loop
push
mov
mov
pusha
rcrb
loopne
rol
out
and
int
pusha
mov
ret
add
mov
pop
xor
pop
mov
or
inc
shll
decl
aas
andb
icebp
lret
mov
outsb
mov
loopne
shl
js
lods
mov
aaa
pop
pop
jae
fstps
xchg
fisubrs
pop
stc
pop
ljmp
mov
shlb
hlt
loope
scas
data16
shr
arpl
xchg
je
xchg
clc
hlt
ret
movsb
pusha
xorb
popa
addb
fsubrs
mov
xor
popf
jae
sub
out
fistl
mov
jecxz
out
test
pusha
lea
xchg
mov
fld
xor
negb
xorl
mov
xchg
popa
loope
andb
xchg
incb
imul
lds
insb
shrb
add
fcompl
repz
cmc
out
and
loopne
add
mov
fidivl
insb
xor
mov
sbb
dec
or
mov
dec
int
sahf
outsb
shlb
mov
or
jo
sub
leave
or
imul
js
lahf
je
cli
das
mov
rcrl
xchg
add
add
int
sbb
pop
jl
testb
jmp
shlb
push
fsts
push
rcrl
pop
xor
shlb
pusha
rclb
xchg
lock
cmpsb
mov
ficomps
push
movsl
lret
pushf
add
and
shlb
insl
add
pusha
in
fmul
xor
andb
and
addr16
rcrb
dec
test
stc
imul
loopne
jnp
leave
andb
cld
shl
jnp
mov
push
mov
sarb
dec
arpl
xor
call
pushf
mov
jecxz
and
push
or
in
jo
cli
sub
loopne
and
sub
or
add
push
and
pusha
adc
inc
sub
and
cmpb
bound
aas
xchg
sbb
mov
jne
mov
scas
rolb
xor
cmp
mov
add
pusha
or
stc
movsb
add
das
out
mov
pusha
inc
add
and
dec
popa
cmc
mov
inc
jecxz
adc
push
lret
xchg
or
add
pusha
dec
mov
and
mov
inc
mov
loope
cmp
mov
aam
xor
sub
ds
nop
and
pusha
xor
push
ret
pop
jmp
rcrb
in
pushf
dec
hlt
stos
mov
jo
jns
inc
in
js
dec
popa
outsl
icebp
pusha
lods
pusha
loopne
add
shr
push
add
and
cmp
adcl
inc
aad
sbbl
or
sbb
mov
push
outsb
je
rolb
xchg
adc
pop
call
jnp
addb
add
lds
iret
flds
adc
or
add
shll
xchg
add
inc
push
add
fistpll
test
popa
rclb
xor
xchg
push
push
cmp
or
xchg
loope
pop
inc
or
mov
jne
mov
inc
sub
popw
sub
xchg
in
and
into
nop
mov
sbbb
andb
movb
dec
and
int
bound
inc
push
cmp
into
fstpl
out
xchg
mov
scas
pusha
add
ds
mov
pusha
and
pop
cmpsb
loopne
cwtl
lret
and
fldcw
inc
and
andb
cmpsl
rclb
xor
cld
out
test
dec
dec
shlb
ret
or
cs
xorb
in
outsb
pop
adc
insb
push
stos
andb
je
lret
mov
xchg
cli
lock
push
and
or
and
inc
cmpsl
jo
lock
cs
sarb
andb
sahf
into
nop
loopne
movsb
loopne
pop
push
fwait
xchg
xchg
dec
repnz
inc
mov
pop
xor
aas
add
movl
stos
push
in
pop
mov
imul
adc
mov
add
rsm
pusha
add
mov
add
cs
xor
add
and
add
arpl
cli
cmp
lods
add
inc
lds
push
jle
pushf
sbb
iret
sbb
pop
xor
push
arpl
dec
daa
mov
pushf
push
in
pop
fadds
dec
xchg
mov
mov
mov
jge
ljmp
shl
mov
and
lock
xorl
pusha
rolb
lea
mov
mov
push
pop
mov
and
std
xchg
mov
rcl
push
das
adc
sub
inc
push
lret
movsb
addb
jecxz
mov
ret
incb
pusha
shl
leave
mov
stos
add
fwait
sti
rcl
stos
rol
push
jmp
sbb
push
add
aaa
mov
push
add
mov
sti
jno
sub
mov
inc
data16
icebp
push
das
jnp
loopne
jnp,pt
adc
mov
mov
je
icebp
push
nop
and
icebp
fwait
adcl
jo
lea
inc
test
pusha
mov
fldt
and
and
add
xor
rcrb
mov
fsubrs
xchg
push
push
cmp
and
dec
shll
inc
test
sahf
movsl
shlb
scas
fcmovu
mov
push
jmp
mov
jbe
xchg
shl
shl
inc
pop
jno
and
loopne
andb
inc
das
cmp
add
sarb
mov
or
mov
popf
in
popa
pop
jo
outsb
cmpsb
add
nop
adc
and
pop
stos
inc
and
add
cli
in
inc
sbb
fdivs
dec
test
and
mov
in
lds
mov
sahf
scas
and
mov
add
push
je
mov
adc
jecxz
or
fiadds
xchg
sarb
shl
add
pop
cmpsb
loopne
lret
es
add
cmpsw
into
call
mov
popf
push
popa
pop
lds
test
loopne
cmp
dec
and
loopne
mov
js
arpl
push
push
xchg
push
scas
pusha
add
scas
inc
rcr
jle
pusha
and
iret
leave
cmp
mov
sub
loopne
addr16
inc
out
adc
push
jno
bound
insb
mov
jne
rol
xor
add
jb
cmp
es
xor
or
adc
lret
lahf
xor
push
shrb
inc
cmp
add
add
pop
loope
lret
sahf
stos
and
sbbb
loop
clc
mov
cs
add
mov
imul
loope
inc
add
mov
aas
lods
pusha
add
mov
std
hlt
xchg
movsb
mov
pop
sar
and
adc
repnz
and
xor
sbb
fsubp
dec
xor
fadd
scas
mov
pop
iret
adc
pusha
sbbb
mov
cmp
mov
jno
pop
fldenv
push
and
add
cld
sbb
mov
and
rolb
subps
clc
mov
sbbb
inc
imul
icebp
das
fs
xchg
jmp
lret
std
adc
loopne
inc
stos
addb
into
sub
loopne
jo
and
add
rcrl
pop
lcall
hlt
sbb
sub
pusha
cwtl
add
and
jmp
and
aad
aad
test
loop
adc
loopne
sbb
jb
inc
pusha
jno
mov
push
and
pop
adc
and
cmp
aas
stos
pusha
inc
adc
fstpl
divb
dec
xor
inc
xor
popf
mov
add
cltd
mov
or
adc
inc
ror
movsb
rol
je
mov
jb
sbb
dec
pop
call
mov
mov
xlat
cld
daa
dec
in
sarl
push
jbe
sti
push
mov
xor
and
pusha
adc
mov
gs
lcall
rol
pop
rcrl
push
loopne
push
shl
fcoml
push
push
ftst
lods
mov
loopne
cmpsb
loopne
xor
bound
in
pop
outsb
mov
loopne
and
jg
add
jl
divb
dec
mov
loopne
lahf
test
add
clc
jnp
mov
cwtl
jnp
inc
xor
cmpsl
push
daa
sub
mov
sbb
push
cld
outsl
jle
shlb
loope
insl
pop
mov
pop
cmp
orl
xchg
in
xchg
inc
jle
call
loop
sarl
xchg
das
mov
mov
xchg
es
xorb
int
jle
sub
push
flds
inc
out
mulb
push
pop
cmp
pop
jno
mov
add
xor
xchg
sbb
adc
lock
bound
and
add
pusha
inc
std
push
xchg
jb
aas
jmp
sbb
jecxz
fsts
sbbl
mov
push
dec
add
arpl
xchg
arpl
loopne
xchg
loopne
dec
cltd
scas
xor
pop
out
mov
frstors
mov
shll
cmp
jge
mov
push
and
loopne
xor
mov
rcrb
loopne,pn
mov
mov
push
adc
cmpsl
es
push
jle
in
arpl
or
dec
adc
mov
int3
repnz
cmpsl
popa
mov
sarb
imul
sbb
gs
mov
int3
dec
imul
and
and
mov
mov
andl
pop
cmpsb
add
adc
push
jge
add
and
add
jo
push
cmc
mov
push
mov
or
and
jae
das
cmc
scas
and
movsb
loopne
into
xchg
sub
stos
and
and
popa
test
inc
fdivrl
je
push
or
add
popf
fidivrl
loop
pop
mov
pusha
daa
popf
nop
add
jecxz
dec
cmp
andb
mov
push
lahf
mov
pushf
in
out
inc
lea
sbb
inc
add
mov
addr16
xchg
idivb
sahf
das
jno
cpuid
pusha
and
push
je
rolb
push
mov
ret
in
mov
dec
out
jnp
in
xchg
and
add
mov
xor
ja
or
pusha
mov
add
loopne
push
inc
and
mov
push
dec
mov
sub
xor
or
push
sahf
mov
dec
dec
and
inc
push
imul
imul
add
rcl
rolb
lret
andb
inc
mov
pusha
add
jbe
jge
stos
pop
dec
into
cmp
push
mov
sub
fwait
test
movsl
xchg
cmp
adc
setb
repnz
inc
add
fsts
data16
lock
fwait
xor
push
andb
jbe
popa
xor
mov
repz
sbb
jmp
pushf
and
xorb
arpl
loopne
dec
outsl
mov
lds
add
add
scas
addb
and
mov
jo
aad
pusha
out
outsb
mov
jg
fisttpl
mov
out
insb
aas
out
pop
mov
sub
lods
and
mov
or
add
rclb
inc
mov
pushf
sti
lret
mov
pusha
lea
es
mov
dec
mov
cld
add
add
dec
sbb
rorb
fldl
add
cmp
shll
jo
xlat
fstp
je
scas
jo
cmpsl
scas
loopne
mov
mov
repnz
add
adc
and
shll
pop
movsb
loopne
pop
aad
aam
pop
cmp
clc
sub
fcompl
outsl
dec
in
inc
fnstenv
xor
repnz
xor
movsl
push
shll
push
sbb
loopne
fstl
pusha
lock
xor
inc
jp
es
gs
test
shlb
stc
out
hlt
fimuls
stos
andb
mov
int
dec
cmp
gs
cmp
iret
in
mov
loopne
or
adc
push
pop
jo
loopne
jne
cmp
push
push
pusha
loopne
addb
and
andb
push
xchg
push
inc
inc
mov
addb
in
jle
xchg
cmp
rcr
and
stos
addb
lcall
and
loop
sub
and
rol
and
push
jl
and
inc
movsb
and
adc
pop
pop
mov
jnp
outsb
inc
push
jb
mov
inc
adc
lock
or
and
pop
lock
jne
cwtl
ja
pusha
add
push
pop
push
fsubs
das
cmpsb
mov
adc
lret
mov
sbb
mov
call
cld
cltd
dec
movsl
or
imul
popa
pop
mov
sub
mov
and
inc
std
push
rolb
inc
lret
dec
insb
rorb
add
into
mov
je
dec
inc
cltd
rcr
loopne
xchg
add
sub
inc
jae
add
nop
repz
cmpb
dec
mov
push
push
mov
xor
pusha
pusha
fwait
repz
in
dec
xor
and
inc
pusha
sub
nop
jne
nop
or
xchg
xchg
mov
cmp
cmp
or
subl
fidivrs
shl
add
add
and
andl
ror
nop
pop
popf
shll
add
xchg
xchg
push
shlb
into
fiadds
out
and
je
add
sbbb
in
inc
dec
lret
cmpsb
mov
add
lea
xor
pop
pop
or
jg
sub
andb
outsb
sub
push
rolb
inc
mov
pop
cmp
ficomps
pop
dec
stc
das
int3
neg
pop
sbb
pusha
mov
dec
cld
pushf
xlat
add
sbbb
cs
inc
lods
push
or
loopne
or
pop
cmp
cltd
ss
scas
or
sub
sbb
int
rol
xchg
adc
ret
mov
adc
jg
and
pop
dec
js
mov
in
test
inc
jne
pop
mov
add
mov
div
loope
loopne
shlb
inc
addb
push
scas
stos
jg
mov
mov
daa
mov
xchg
aad
mov
lods
pusha
add
add
dec
les
loope
sarl
ret
cmp
lods
pusha
add
out
call
loopne
addr16
loop
pusha
rorb
adc
dec
mov
rolb
jmp
aaa
sbb
mov
inc
add
lods
inc
loopne
dec
pop
jne
pusha
mov
cltd
testb
cmp
shlb
mov
testl
push
xchg
jno
fmuls
xor
xchg
ljmp
sti
pop
mov
dec
imul
pop
out
inc
add
shlb
jne
dec
scas
xor
daa
imul
hlt
sbb
std
movsl
adc
xchg
shl
xor
rolb
rol
mov
loopne
inc
and
loopne
push
or
and
add
sarb
icebp
mov
mov
cmovge
ss
cmp
and
addr16
rcll
add
ja
mov
out
shrb
stos
lds
pop
loop
lea
mov
pusha
das
push
cmp
rorl
andb
cmpsl
xor
dec
sub
add
lret
fs
mov
scas
jo
in
add
and
and
daa
adc
sbb
xchg
xor
dec
cltd
rorl
jb
iret
dec
aas
clc
cli
cmp
mov
shlb
rol
pusha
add
xor
add
cmp
add
push
or
cwtl
imul
push
outsl
sub
pusha
add
xorb
rolb
pop
fwait
mov
pusha
fnstcw
stos
add
movsb
add
pop
push
add
mov
pusha
loopne
das
arpl
pop
aaa
mull
aaa
cmp
lods
mov
adc
sysexit
sub
aas
and
and
dec
cmc
jae
inc
push
mov
sahf
jg
cmp
cld
xchg
ffree
loop
pusha
shl
je
xchg
pop
fdivrl
dec
cmp
insl
push
loopne
sbb
ljmp
decl
xchg
add
push
xchg
dec
sahf
add
rol
ss
out
mov
xor
insb
aam
rcrl
inc
sub
cmpsb
pusha
inc
fsubrp
dec
ss
cmpsl
in
mov
rolb
les
call
pusha
xor
push
ret
pusha
sub
pusha
push
add
in
das
aaa
icebp
and
add
ficompl
test
pusha
pop
stc
gs
xor
dec
mov
pusha
add
shr
jmp
add
add
loop
cmp
movsl
test
mov
xchg
mov
push
std
pop
stos
push
stc
push
push
adc
rcrb
movsl
rcr
mov
cwtl
lahf
stos
sub
ja
scas
rolb
push
loopne
mov
pop
andb
adc
jge
push
stos
xor
inc
and
orb
inc
xor
add
test
sarb
pop
data16
pop
dec
adc
shrl
leave
dec
iret
push
inc
inc
push
in
sbb
into
cmp
sub
sbb
icebp
sti
xchg
mov
mov
daa
inc
add
insb
jg
ja
push
push
out
mov
out
xor
out
pop
xchg
mov
jp
inc
add
add
or
push
sbb
add
es
and
push
andb
pusha
pusha
mov
xchg
and
mov
add
jns
or
pusha
iret
iret
dec
fiaddl
sbb
subl
jmp
fcomps
mov
loope
in
jae
xor
and
add
push
or
pop
popa
pushf
js
push
and
call
push
push
fimuls
ret
leave
lcall
add
imul
push
xchg
mov
xchg
xlat
fwait
push
loopne
jecxz
inc
cld
push
mov
loopne
inc
sbb
mov
cmp
and
pop
lahf
iret
inc
pop
mov
inc
mov
add
iret
adc
xchg
inc
arpl
pushf
enter
mov
ljmp
mov
jno
xchg
push
jp
adc
loopne
popf
aas
jecxz
loopne
push
sub
fwait
push
xor
inc
dec
xor
stos
popa
gs
int3
xchg
outsl
imul
sbb
add
pusha
iret
enter
adc
mov
add
pusha
jg
xchg
movq
insl
and
jae
inc
pop
mov
jge
in
add
ja
addb
and
imul
mov
fmul
jbe
adc
pusha
inc
xor
inc
loopne
xor
add
rep
insb
xchg
sub
and
pusha
pusha
stc
movsb
add
shr
loope
inc
loopne
outsb
lea
loope
dec
push
and
loopne
xchg
mov
add
hlt
jmp
loopne
in
inc
rol
std
jns
push
cmp
addr16
cmp
mov
mull
dec
das
mov
inc
sbbb
mov
cmp
shlb
mov
xor
jmp
jb
xchg
mov
mov
std
push
pop
stos
xor
xor
loopne
scas
andb
mov
ret
arpl
add
in
inc
xor
inc
mov
inc
adc
dec
push
jg
movsb
loopne
shrb
pop
out
push
mov
and
subb
ficoml
sbb
fnstenv
fnsave
jg
cmp
pop
or
stc
das
loop
outsb
xchg
push
push
dec
sbbl
and
xor
iret
iret
and
jmp
pop
xchg
aaa
in
sarb
rclb
dec
ret
mov
je
test
add
xchg
or
aam
sub
jae
pop
sti
pusha
adc
arpl
mov
jg
shlb
xchg
dec
cmp
add
xchg
lahf
sub
inc
push
fidivrl
mov
inc
mov
push
adc
jnp
push
cwtl
inc
divl
mov
stos
and
fwait
sbb
cmp
or
xchg
notl
and
shlb
push
push
dec
xchg
push
push
pop
cwtl
or
and
inc
mov
in
xor
mov
loopne
imul
jae
scas
add
outsb
adc
lods
add
jge
pmaxsw
pusha
rorb
pusha
inc
pop
rclb
mov
mov
jle
mov
xor
imul
pusha
adc
push
inc
ret
jnp
mov
mov
andb
int
enter
addb
jle
jp
mov
in
dec
xor
sbb
adc
pusha
xor
out
inc
inc
lahf
jl
mov
add
jb
aaa
sbb
aam
sub
sbb
leave
mov
mov
and
and
fdiv
cwtl
test
fwait
lds
add
pop
or
add
cmpsl
mov
or
lods
and
pop
inc
mov
mov
aas
in
dec
popa
pop
ret
shl
sbb
sbb
imul
fnsave
icebp
scas
mov
or
mov
stos
mov
je
dec
cmpsb
mov
sbb
into
sbb
js
xor
iret
addb
cli
in
ret
shrl
ljmp
xor
xchg
mov
rolb
pop
div
shrl
jmp
repz
into
popa
cmp
sbb
sub
loopne
pusha
orb
push
xchg
push
push
cmc
fstpt
hlt
xor
adc
mov
mov
or
inc
dec
arpl
mov
mov
test
and
jge
mov
insb
shr
push
xor
push
mov
add
pusha
xor
and
mov
cmc
imul
xchg
xchg
loopne
andb
in
clc
loope
lods
and
inc
clc
dec
mov
mov
push
nop
xchg
pusha
cmp
sub
and
mov
mov
inc
adc
push
in
push
into
add
rcrb
pop
repnz
sbb
shrb
pop
subl
jo
inc
lret
loopne,pn
adc
jecxz
dec
ret
in
adc
outsl
sahf
inc
sub
adc
sarb
xor
test
iret
pushw
loopne
rorl
push
and
subl
pusha
ss
mov
outsl
inc
js
jo
outsb
sbb
dec
sub
andb
dec
mov
shl
xchg
push
inc
pop
daa
push
inc
inc
sbb
mov
insl
sbb
lcall
push
shlb
mov
cmp
aaa
rolb
hlt
aam
pop
mov
orl
loop
sbb
leave
out
sub
add
add
and
mov
xor
hlt
shl
push
fwait
ja
in
mov
and
and
in
rolb
scas
mov
in
and
cmpb
and
mov
ud1
inc
xchg
cli
sbb
and
ds
daa
mov
dec
cmc
add
dec
jle
in
push
xchg
pop
call
and
mov
mov
jno
sub
cmpb
mov
add
mov
xchg
fimull
scas
shlb
in
jb
inc
mov
inc
add
in
xor
sbb
in
sbb
mov
lods
cmp
ljmp
iret
sbb
cli
mov
push
leave
dec
sub
sub
fisttpl
add
pusha
mov
std
xchg
cmpsl
ds
cmp
movsl
adc
sub
fcompl
addb
std
xor
inc
xor
aas
inc
jbe
and
je
sbb
dec
sahf
jecxz
sbb
loope
out
xor
push
scas
mov
push
fdivl
aas
or
lock
jge
in
mov
test
pusha
loopne
imul
out
out
xor
or
jbe
adc
pop
pop
xchg
pop
dec
mov
cld
mov
addb
mov
shl
je
jnp
add
enter
inc
add
movsb
rol
mov
cmp
pusha
adc
icebp
es
mov
cmpsl
fsubl
rolb
inc
push
push
loopne
repz
mov
leave
sarb
pop
cmpsl
sbb
fisubrs
cmp
icebp
cltd
sbb
sbb
divb
shlb
sarb
fidivrs
rclb
adc
fs
insl
and
or
fisubrl
jp
mov
mov
mov
ret
adc
imul
xor
popa
leave
mov
xchg
xlat
or
push
add
mov
sbb
out
pusha
rcrb
pusha
shlb
sbbb
adc
and
and
and
je
and
ror
enter
push
mov
loope
or
add
shlb
addl
stos
and
xchg
out
dec
in
inc
pop
test
std
addb
mov
insb
sbb
mulps
int3
fcmovnb
push
lahf
ja
jp
loop
aam
loope
adc
fstpt
mov
andb
je
jae
clc
cmp
mov
and
fldenv
cmp
pusha
mov
sarl
or
push
loop
push
add
xchg
call
lahf
pusha
lret
mov
aam
bound
sahf
inc
frstor
push
mov
jno
les
iret
lret
mov
cltd
lods
loopne
fstps
or
push
add
and
and
pusha
xchg
push
mov
inc
xor
fimuls
pop
mov
dec
andl
int
jb
xchg
push
xchg
inc
fadds
mov
mov
mov
outsl
popf
xchg
cld
fidivrl
inc
mov
add
out
dec
and
mov
add
and
or
loopne
cmp
mov
outsl
and
mov
pusha
and
cli
je
cmp
mov
daa
sub
pusha
js
mov
fwait
scas
add
xchg
addb
mov
pusha
rclb
add
add
and
pusha
pop
std
call
adcl
pusha
inc
and
pusha
push
js
add
and
daa
add
pusha
clc
inc
sbb
inc
mov
and
add
outsb
jnp
out
jle
push
ds
adc
rolb
test
and
call
mov
mov
and
adc
inc
add
faddl
repz
push
clc
gs
pop
hlt
push
xchg
int
decb
loopne
test
cmp
les
add
mov
xor
and
jp
lea
mov
adc
jne
mov
mov
jns
cmp
add
movsb
rol
push
adc
pop
sub
pusha
jmp
loopne
adc
loopne
mov
loopne
xchg
dec
shrb
mov
push
adc
aaa
imul
pop
cmpsl
xchg
cmp
mov
fdiv
loop
lea
rclb
pushf
sbb
sub
adc
or
and
xor
pop
ss
fwait
push
push
shlb
mov
mov
pop
aam
movl
mov
dec
xsave
orb
mov
popa
xchg
push
mov
add
subb
add
sahf
js
inc
add
shrl
and
sti
mov
mov
push
testb
push
dec
add
and
loopne
dec
pop
mov
pusha
lcall
sub
shlb
and
and
add
shlb
cld
push
push
scas
rep
into
sub
loopne
add
loopne
add
and
add
cmp
js
mov
scas
rolb
test
xchg
cmp
hlt
scas
add
jmp
aam
outsb
lcall
rolb
sbb
nop
lret
jl
and
sbb
out
xchg
fcoml
fcompl
cwtl
in
push
pop
incl
andb
xor
int3
cmpl
arpl
hlt
adcl
test
das
sbb
sbb
inc
push
rolb
mov
cmp
andb
inc
sbb
xor
je
cmpsb
loopne
dec
aas
into
gs
add
add
sahf
fcmovu
es
loopne
pop
je
inc
iret
sub
jno
clc
mov
addb
aaa
inc
pop
and
aad
test
dec
cmpsl
pusha
add
adc
pop
out
mov
lcall
add
add
jae
jb
xchg
jno
xchg
mov
mov
inc
add
sbb
jbe
and
xor
loop
inc
mov
add
push
lahf
je
and
aas
xchg
adc
lods
mov
mov
jnp
lahf
and
inc
popa
repnz
das
dec
fnsave
push
cmpsl
mov
sbb
jmp
out
mov
inc
and
ret
andl
stos
ficoms
sbb
mov
out
repnz
ficomps
jno
push
mov
mov
mov
cli
fidivs
and
add
shl
xchg
divb
cwtl
out
sub
testl
cld
adc
movsl
dec
fimull
xchg
dec
in
mov
add
loopne
inc
mov
dec
addb
add
jns
ds
maxps
jle
lds
mov
dec
and
add
in
inc
shrb
mov
sarl
and
xchg
cltd
mov
mov
and
ror
fs
inc
mov
mov
inc
pop
dec
adc
pop
adc
out
inc
pusha
mov
sar
add
add
pop
jge
shlb
push
addb
into
mov
mov
movsb
pusha
rcl
mov
push
cmp
mov
ret
pop
loope
dec
push
inc
loopne
cmc
bound
loopne
add
and
les
pop
adc
clc
fucomi
add
xlat
js
stc
aas
iret
imul
cmpsb
pusha
inc
sub
dec
stos
mov
mov
cmpsl
sub
xchg
or
rolb
fldl2t
roll
and
sub
inc
sub
and
sub
add
andb
pusha
push
aas
mov
rol
out
lock
pop
loope
aas
adc
jo
adc
mov
test
adc
or
test
stc
neg
mov
inc
negb
add
add
cwtl
push
bound
cmpsb
mov
lret
dec
pop
lretw
dec
push
mov
push
andb
push
dec
insl
out
lods
push
mov
inc
sbb
inc
inc
push
leave
add
rcl
inc
ljmp
rol
mov
aam
and
cmc
push
jmp
add
xor
dec
jp
in
int
les
add
xchg
push
int
outsb
pop
cmp
popa
fldl
add
pop
jecxz
aad
mov
sub
stos
fs
loopne
pop
sbb
jp
leave
rdpmc
xchg
pushf
or
add
mov
add
fstpt
add
pusha
add
and
pusha
mov
aaa
push
test
pusha
loope
addb
and
dec
dec
inc
xor
jns
in
out
out
cmp
cwtl
add
pop
xor
mov
mov
mov
cmc
out
cmp
sbb
mov
push
je
inc
mov
mov
nop
jecxz
jp
rcll
cmp
inc
sub
cmpb
call
popf
gs
shlb
outsl
frstor
icebp
sbb
ds
and
mov
jecxz
dec
cmp
sahf
loop
hlt
call
pusha
cmp
push
lds
test
inc
mov
add
rclb
add
stos
sarl
and
addb
and
inc
loopne
flds
xchg
push
adc
lret
rolb
es
aad
into
xchg
inc
loopne
jle
xlat
add
mov
movsb
loopne
dec
lahf
jg
rclb
gs
sbb
leave
adc
iret
push
in
mov
fnsave
das
xor
add
mov
mov
cld
add
out
setnp
jg
gs
add
jb
ss
mov
xchg
rorb
shlb
add
mov
fwait
push
or
pusha
jnp
fisubl
dec
into
lret
shlb
sbb
push
xor
andb
nop
les
lds
jge
int
sbb
pusha
rolb
addr16
mov
fiadds
and
jge
loopne
xchg
or
pop
dec
or
and
mov
and
loopne
js
jl
scas
das
xlat
imul
jecxz
mov
push
call
fldenv
rolb
scas
mov
dec
insl
sub
add
adc
push
addb
inc
jmp
add
and
jmp
ja
mov
sub
inc
sub
shr
and
add
push
sti
mov
xchg
inc
pop
bound
inc
rclb
pop
shr
loope
mov
shrb
mov
in
mov
lcall
pusha
mov
ret
sbbl
out
int
out
add
add
mov
mov
pusha
mov
outsb
adcl
xchg
data16
adc
dec
cli
jbe
loopne
dec
inc
movsl
jne
inc
pop
cmp
and
sarb
rol
sub
stos
rol
mov
pusha
out
dec
xchg
loopne
incb
and
mov
or
xorb
dec
popf
bound
pop
outsl
shll
and
inc
jecxz
leave
inc
mov
pushf
add
daa
pinsrw
pop
fmul
pop
sbb
cmp
xchg
mov
xor
and
test
pusha
mov
daa
shll
mov
push
cmc
mov
xlat
imul
cld
gs
andb
sub
sub
xor
sahf
addr16
addb
pop
imul
movsb
and
rol
inc
hlt
add
mov
call
cmp
add
mov
sbb
lods
and
imul
push
mov
mov
adc
push
mov
mov
das
push
push
inc
sub
cmpl
ret
add
xchg
dec
cmpsl
scas
dec
jp
ds
ljmp
aaa
cmp
mov
add
dec
aad
idivl
fsubr
loope
ficomps
jg
fnsave
xor
mov
stc
sbb
jle
in
decl
andb
out
sub
mov
sti
sbb
sub
shrl
pusha
add
mov
xchg
pusha
es
lea
add
xor
cmp
addb
xchg
push
pusha
cli
inc
rcr
xor
jecxz
pusha
repnz
inc
mov
fnstcw
mov
add
cmp
jb
push
fwait
mov
jbe
in
and
mov
and
jns
andb
das
mov
outsb
xor
inc
movsl
add
out
push
mov
mov
or
rcrl
stc
pop
xor
cmp
add
sarb
mov
mov
and
mov
push
or
clc
sbb
ja
cwtl
push
pop
mov
pop
mov
mov
cli
jnp
xchg
enter
daa
mov
iret
out
pop
push
pusha
add
pusha
mov
ss
das
sbb
or
andb
and
out
inc
loopne
pop
jmp
lods
shlb
lret
scas
add
lahf
js
mov
icebp
jno
jae
cmp
xchg
decl
xor
in
add
xor
add
mov
sahf
pop
movb
add
mov
xor
pusha
push
inc
pop
movsb
pusha
loopne
add
jl
bnd
push
mov
pusha
xchg
out
push
mov
push
mov
fcompl
pusha
add
addr16
popa
mov
adc
mov
add
pusha
push
pusha
mov
loope
loopne
xchg
pusha
inc
out
sub
in
mov
insl
call
mov
jp
popa
and
inc
arpl
das
dec
fmuls
mov
cmp
cmp
stos
insl
repnz
stc
pop
sbb
push
pusha
inc
sbb
dec
cmp
push
mov
add
or
inc
test
and
mov
inc
or
and
int3
aad
jge
sarl
dec
jmp
scas
mov
adc
cmp
rol
xchg
xchg
jb
popf
push
shlb
and
bound
and
and
xchg
and
test
xchg
sti
push
hlt
cmp
addr16
shlb
insb
sub
mov
jnp
or
stos
les
inc
add
and
sbb
mov
rol
roll
push
out
rorb
and
sbb
add
push
xchg
imulb
sub
out
add
fstps
test
mov
jae
inc
adc
std
jp
rep
fsubp
xchg
pop
sbb
push
mov
lcall
xrelease
dec
xchg
sbb
rorb
ficomps
lahf
insl
push
shrb
mov
daa
mov
repz
daa
push
movsb
loopne
and
sarb
outsl
mov
icebp
sub
dec
push
repz
lret
shl
mov
push
mov
andl
imul
jnp
outsl
push
ds
or
insl
loop
jno
out
popf
lds
fnsaves
nop
std
xlat
mov
vpaddusb
jl
loopne
jg
xchg
cmp
and
add
in
mov
xchg
mov
loopne
jae
mov
pop
pop
jmp
mov
mov
and
das
hlt
mov
movsl
jbe
lahf
pop
jle
test
inc
ljmp
aad
repnz
addb
imul
iret
add
inc
jb
xchg
push
loopne
xor
and
icebp
ds
pop
pop
cmp
adc
add
leave
cli
cs
pop
pusha
inc
inc
repnz
popf
movsl
mov
rolb
clc
repnz
pushf
add
add
and
pop
adc
or
loopne
bswap
xor
add
or
inc
push
sub
and
jbe
test
mov
inc
addl
pusha
inc
lret
adc
mov
stos
insl
push
xorl
subb
mov
sarb
inc
mov
dec
mov
pusha
and
les
sbb
jns
inc
and
out
inc
mov
push
xlat
mov
xlat
arpl
push
dec
fsts
xchg
or
mov
xchg
je
add
add
pusha
pusha
in
test
rcll
mov
push
les
lcall
sti
or
insl
add
arpl
fnstenv
fldl
cmpb
xor
test
pusha
rorb
loopne
sub
xchg
pusha
adc
rcpps
rolb
shlb
jbe
xor
cmpsb
and
sub
loopne
loopne
cmpsb
inc
and
std
sub
mov
inc
enter
jne
fisttpll
xchg
ja
dec
lock
aad
xor
rclb
ljmp
fldlg2
nop
aaa
scas
jo
cmp
int3
mov
add
js
fs
xchg
pop
test
add
loopne
fucomi
add
inc
ja
fsts
or
dec
frstor
mov
mov
cmpb
jl
mov
fdivrl
test
sbbb
loopne
and
mov
notb
shrl
into
call
out
push
shl
aam
mov
fmull
loopne
ss
in
adc
inc
push
iret
jecxz
ds
shlb
inc
or
add
fs
dec
mov
cmc
push
andb
sahf
pop
pop
cmpsl
pop
jnp
and
mov
loopne
mov
pop
xchg
mov
add
rcrb
mov
iret
dec
call
and
cmp
add
loope
mov
cwtl
adc
xchg
enter
inc
add
jp
fucomi
xchg
cmc
mov
call
out
sbb
xor
mull
in
lahf
mov
push
stos
aas
sub
nop
pop
xchg
push
sbb
shl
faddl
repnz
loopne
movsl
mov
mov
sub
insb
cli
pop
mov
sti
push
fstpl
lcall
ret
adc
aad
xchg
xchg
or
dec
in
pop
test
dec
mov
int
fnsave
aas
xchg
lods
and
xchg
xchg
mov
jb
and
cmp
mov
mov
adc
outsb
je
scas
sub
movsb
and
in
cld
sub
insb
sbb
into
cmpsl
xchg
not
int3
mov
pop
std
mov
mov
arpl
das
cmp
and
sbb
imul
push
ss
mov
in
mov
add
or
inc
mov
and
pushf
sti
scas
pop
sub
fldt
mov
mov
sbb
mov
jo
out
fld
xor
or
loopne
inc
mov
loopne
jle
mov
xchg
push
imul
stc
mov
fisttpll
out
mov
out
xchg
andb
pusha
shrb
shrb
aaa
ja
push
cmp
pop
xor
pop
push
ljmp
push
andb
stos
push
cmpsl
lcall
lods
loopne
cmpsb
addb
pop
jg
push
add
inc
jne
dec
push
mov
dec
jno
inc
push
cmc
pop
popa
data16
mov
or
xchg
and
and
sbb
add
mov
hlt
mov
xchg
sub
mov
rcrb
cmp
push
shrb
pusha
sarb
inc
inc
shrl
mov
add
lret
inc
mov
sbbl
jp
pop
pop
aam
aaa
push
add
ret
out
pop
xor
loopne
xchg
cmp
jne
scas
pusha
mov
mov
rcrb
sarl
adc
add
adc
cmpsb
rolb
adcl
cmp
clc
popa
cld
in
out
iret
aad
sub
jmpw
jmp
xor
mov
jo
xlat
aam
pushf
jmp
add
pop
lea
rolb
ja
add
lcall
sbb
test
aad
fcoms
fstl
lret
pop
jl
test
inc
ret
add
sub
cwtl
xor
push
push
mov
aaa
cmovo
and
fwait
mov
and
and
rcrb
rol
mov
add
add
pusha
popa
loop
and
call
mov
inc
roll
push
jb
mov
testl
repnz
imul
and
iret
or
add
cs
mov
add
mov
mov
enter
cmp
dec
js
adc
shlb
xor
jne
ljmp
dec
mov
push
mov
fnsave
sbb
rolb
shl
andb
mov
xor
mov
loopne
icebp
dec
push
pop
les
out
out
imulb
fmul
pusha
xchg
sbb
cmp
cmp
or
je
add
pusha
or
fwait
decl
fistl
iret
fwait
test
nop
jge
add
dec
test
cmpsl
js
std
popf
mov
xor
mul
jns
push
push
and
fnsave
and
mov
pop
stos
andb
inc
subb
sbb
mov
fsubs
dec
rcrl
mov
lcall
repz
jns
in
in
mov
mov
ficomps
shlb
loopne
sbb
add
pusha
rorb
idivl
out
andb
or
addb
mov
mov
loopne
shlb
sbb
inc
xor
xor
jle
sbb
sub
fisubl
mov
add
fistpll
sbb
adcb
jl
insb
add
pusha
fiadds
pusha
add
or
mov
mov
shll
sbb
mov
fwait
push
and
cwtl
fnstcw
decl
inc
out
jae
push
shl
cmp
xlat
rorb
shlb
jmp
addb
jecxz
fwait
mov
sti
repz
fsubrs
or
addl
dec
mov
or
mov
sar
icebp
xchg
xchg
pop
xchg
push
xchg
push
loopne
dec
mov
aas
nop
push
pop
push
push
add
mov
sbb
daa
cmc
jecxz
mov
cld
outsb
mov
push
add
inc
push
or
add
in
mov
mov
addb
jae
adc
fcomps
push
sub
xlat
sbb
pop
push
and
je
jae
pop
xchg
push
add
sbb
push
xchg
stos
lcall
add
sbb
push
jle
popf
xchg
and
rcll
adc
rcl
xchg
cmp
mov
mov
jge
mov
xor
inc
sti
mov
pusha
xchg
lods
push
mov
cld
sarl
jb
inc
lods
xor
call
dec
pop
jb
cmp
ljmp
adc
mov
ss
icebp
push
sbb
daa
sbb
int3
adc
mov
inc
mov
fwait
xchg
adc
mov
in
mov
xchg
cmp
xchg
and
cwtl
pushf
rcl
pop
rcr
bound
cmp
mov
mov
shl
or
adcb
push
mov
pusha
inc
jmp
cmpsl
push
ljmp
add
mov
pop
mov
cmpsl
push
inc
pusha
cmp
movsl
jecxz
and
xor
cmp
pop
jmp
rcrl
jge
loopne
push
or
adcb
pop
mov
xor
xor
xchg
mov
add
xchg
xchg
pop
cmp
lock
cmp
mov
sarb
cmp
pop
pushf
inc
xchg
cmp
addb
add
pop
sub
cmpb
das
xor
jecxz
push
xor
sbb
shrb
add
in
cltd
dec
xchg
aas
mov
pusha
and
push
pusha
pop
lods
add
pop
adc
gs
out
cmp
scas
inc
orb
inc
cld
and
xor
loopne
lret
sbb
cmpsl
mov
dec
repz
mov
in
jecxz
and
out
out
pushf
push
aaa
outsb
add
mov
sahf
aam
pusha
and
andb
mov
pop
fnstsw
outsl
in
xchg
push
out
mov
rorb
outsb
mov
aaa
mov
outsb
hlt
aad
aas
subl
out
lock
dec
loope
repz
ret
aad
and
inc
or
daa
xor
mov
fisubl
jge
jo
cmp
fcmovne
and
mov
inc
push
gs
mov
daa
mov
dec
in
pop
lcall
cld
aas
pop
or
sbbb
push
and
mov
addb
loopne
sbb
dec
push
outsb
scas
cmp
aam
popa
fimull
xchg
test
addb
xlat
aam
add
mov
out
outsb
in
inc
pop
dec
push
mov
push
test
xchg
shrl
mov
add
push
shll
mov
add
mov
pop
xor
jecxz
stos
inc
loopne
pusha
xchg
repnz
inc
push
pusha
add
sub
pusha
rcrb
leave
jae
shlb
sub
loopne
and
and
and
das
cmpsb
mov
mull
inc
sbb
rolb
xchg
andb
shll
addr16
rolb
dec
jnp
ljmp
mov
packsswb
popf
push
xchg
pop
sub
mov
addb
sbb
clc
and
inc
inc
cltd
add
repnz
cmp
andb
jns
pop
aas
add
xchg
pop
add
shlb
std
push
shlb
add
lahf
xchg
test
dec
push
mov
loop
and
pusha
mov
jecxz
sbb
and
lret
or
add
lcall
or
add
repnz
adc
sub
test
sarb
xor
and
andb
lock
sbb
test
in
pop
je
lds
mov
sahf
mov
lret
xor
xchg
xor
ja
ficoml
stos
nop
arpl
mov
or
loopne
rcll
xorl
pop
dec
mov
push
mov
aam
andb
push
push
fstpt
stos
jl
std
xchg
int3
pop
out
dec
cld
jmp
mull
mov
ret
and
push
add
hlt
and
adcb
jle
loopne
in
jno
inc
stos
mov
test
rol
jp
cmp
or
loopne
add
jne
inc
inc
mov
rolb
sbb
fstpt
sub
loopne
pop
jge
aaa
mov
adc
fbstp
jmp
add
xchg
jno
test
add
shrb
cmp
in
in
pop
jg
dec
jbe
mov
shlb
cwtl
enter
mov
dec
pop
arpl
popa
xchg
dec
jmp
cmpsb
pusha
add
cld
fsubl
add
and
mov
mov
pop
testb
and
inc
and
shlb
fldl
mov
daa
aaa
jns
ret
loopne
add
adc
enter
in
inc
je
mov
adc
outsb
adc
jg
fwait
testb
and
repz
mov
pop
leave
dec
push
sbb
mov
jns
ficompl
loopne
mov
daa
mov
and
adc
sub
and
das
and
lds
ret
and
cltd
popf
cli
sti
sti
in
jge
rolb
or
rol
stos
and
outsb
movsl
adc
andb
push
into
data16
push
pop
xchg
out
xchg
cmp
outsl
sahf
xor
cmp
dec
divb
xor
lock
loopne
ljmp
rorl
imul
ficoml
mov
enter
mov
mov
add
mov
xor
fisubrs
pop
pushf
fistpll
insb
inc
adc
shll
loopne
stc
enter
and
shl
cmpsb
pusha
pusha
sbb
jmp
mov
pop
shll
adc
jle
sub
clc
jge
sbb
repnz
js
cmp
insl
scas
add
and
mov
dec
dec
in
or
sarb
adc
add
pop
jbe
push
jno
rolb
std
in
popa
pop
xchg
dec
fdiv
out
mov
inc
dec
test
add
aas
pop
out
mov
cmp
leave
repnz
scas
mov
orb
or
pusha
cmp
sub
nop
jp
es
shl
push
mov
mov
mov
and
push
sub
xchg
das
lahf
or
and
test
mov
add
frstor
fnstsw
shr
pop
sbb
pop
dec
dec
rclb
xor
push
cmp
xchg
nop
add
adc
rcl
pusha
dec
sysenter
jns
loopne
jmp
sub
jb
imul
jmp
jns
loopne
repz
sub
xchg
scas
xchg
mov
sti
push
jle
mov
loopne
int
enter
mov
push
scas
and
pop
aam
push
inc
cld
xchg
pop
xchg
xchg
cltd
sahf
mov
mov
xorl
inc
sbb
test
pusha
sbb
and
pop
pusha
jmp
jno
add
out
pop
mov
push
inc
popf
cmp
std
lods
inc
insb
inc
mov
nop
mov
cmpb
mov
mov
xchg
andb
shll
dec
andb
repnz
jl
loop
addb
cmpsl
adc
lret
xor
and
adc
loope
add
testb
mov
jg
add
lea
xchg
in
dec
les
push
and
mov
add
xor
pusha
jne
jae
push
pop
inc
cmp
jae
cmc
ljmp
mov
pop
movsl
rcrl
add
dec
out
sub
and
xchg
sbb
sbbl
jo
add
in
cwtl
lahf
cmp
cmp
faddp
jns
mov
mov
addr16
pop
mov
fucomp
inc
pop
jnp
mov
push
mov
dec
inc
push
loopne
cmc
add
xorb
and
dec
test
pusha
pushf
add
pusha
mov
adc
insb
sarb
outsb
filds
loopne
arpl
rolb
add
loopne
rorb
add
addb
mov
mov
sub
pause
jbe
or
test
loopne
imul
or
in
mov
loop
iret
mov
rolb
mov
loope
inc
in
loopne
mov
mov
push
loopne
mov
pusha
loopne
jno
lret
pop
fists
and
cmpb
dec
add
inc
inc
in
add
ror
and
pop
aam
out
dec
pushf
andb
xor
sub
mov
lods
shlb
mov
inc
orl
ljmpw
fdivrp
fstps
add
inc
icebp
jns
adc
push
imul
sbb
fstpl
pusha
shrb
imul
loop
xchg
push
addb
sbb
dec
push
aas
out
je
sub
hlt
out
adc
push
shl
xchg
stos
clc
into
hlt
sub
mov
pusha
loopne
cwtl
shlb
xchg
clc
adc
in
adc
pop
xlat
adc
pop
pop
mov
leave
cmp
sahf
dec
dec
in
negb
xor
addr16
andb
fstp
pop
jae
jnp
sub
xlat
fdivl
xchg
sub
rclb
inc
add
loop
cmpsb
add
sbb
lods
or
dec
lea
mov
pop
sahf
jg
addr16
push
loopne
lds
and
insl
fnsave
shlb
hlt
mov
xor
mov
popa
pop
test
addb
cmp
pusha
cltd
aaa
sub
loopne
aad
dec
adc
mov
cmp
mov
fdivrl
cmp
andb
push
nop
call
adc
mov
fmull
movsl
xchg
out
pop
xchg
dec
outsl
jno
sub
pusha
inc
icebp
push
imulb
je
inc
aas
andnps
xchg
cwtl
push
lret
add
mov
jl
in
lods
cmc
pop
mov
pusha
call
movsl
jmp
test
add
andb
repz
xchg
loope
sahf
push
rolb
pop
cs
pusha
sbb
out
loopne
cli
push
sub
adc
mov
andb
out
push
in
andb
add
inc
sbb
clc
inc
cmp
ret
testb
rol
push
inc
loopne
xor
mov
xchg
pop
lods
ficomps
fdivr
loopne
stos
inc
cli
mov
out
repnz
push
push
add
mov
pop
xchg
xor
dec
inc
push
or
add
andb
jmp
loopne
nop
out
lret
or
inc
test
negb
dec
jl
push
cmp
ljmpw
loopne
rolb
xchg
ljmp
daa
cmp
cli
xchg
les
mov
xorb
paddsw
inc
add
add
pop
mov
inc
jne
mov
mov
mov
jge
mov
add
fldenv
and
dec
jge
and
imul
xor
loopne
cmpsl
pusha
jnp
outsl
xchg
in
shl
aaa
inc
xor
and
mov
add
mov
pusha
jl
std
cmp
ljmp
sbb
push
dec
sub
xchg
loopne
xchg
cltd
cmpsl
lret
add
and
rcrb
or
rolb
sbb
inc
sar
cmp
inc
push
rcrb
rolb
jae
mov
loopne
mov
fldt
jb
jp,pt
icebp
sbb
andb
and
loopne
and
dec
mov
fdivl
addr16
popa
jg
hlt
push
fnsave
cmp
fs
movsl
fdivl
dec
or
and
and
and
cs
loopne
lret
xchg
and
pusha
mov
ror
mov
cmp
pop
jp
inc
mov
into
mov
leave
stos
rolb
add
mov
pop
and
pusha
mov
xor
push
adc
jb
xchg
sar
jbe
outsb
add
bound
dec
fiaddl
inc
rorb
pusha
mov
int
adc
rolb
pusha
rorb
add
mov
or
shlb
inc
pusha
mov
aad
or
in
add
mov
or
loopne
xchg
ss
push
subl
mov
mov
and
cmc
js
pop
aas
sti
loop
and
and
add
pusha
and
jecxz
in
insl
sahf
sub
push
cs
add
ljmp
pop
mov
or
pusha
and
xor
jp
add
jnp
mov
push
pop
jmp
gs
jp
add
stos
add
in
int
or
ret
fmull
cmp
push
icebp
or
mov
out
pop
aas
testb
and
jno
add
fiadds
stos
dec
das
out
das
lods
mov
push
xchg
dec
stos
sub
pusha
loope
sahf
popf
roll
add
scas
loopne
outsl
push
loopne
or
add
mov
pusha
subb
loopne
mov
repz
loope
das
fstpt
dec
popa
mov
test
pop
cmp
jmp
adc
loopne
xchg
rolb
pusha
aad
sahf
or
xor
cmpsb
rolb
shlb
mov
int3
scas
addb
addb
fildl
mov
and
pusha
push
xchg
mov
imul
sub
inc
inc
mov
cmp
add
mov
and
shll
inc
fwait
mov
and
sbb
inc
cmpsl
add
pusha
mov
pop
adc
pop
pop
aam
popa
insb
aas
int
andb
sub
cmp
pop
mov
cmp
rolb
mov
or
fucom
mov
cmc
leave
mov
add
outsb
movsb
mov
and
lret
jne
or
and
and
add
sbb
and
xor
and
out
pushf
mov
nop
jle
sarb
loop
inc
cmp
mov
push
aas
dec
fimull
push
pop
cmpl
pop
bswap
mov
mov
and
mov
inc
xchg
pop
std
ret
aaa
aas
adc
je
test
xor
add
add
mov
mov
pusha
cltd
xchg
or
add
shrb
shlb
jmp
sub
loope
scas
decb
or
or
cmp
pop
push
sub
in
dec
call
dec
je
adc
inc
mov
inc
xchg
aaa
cmp
addb
jp
pop
mov
aam
std
jb
push
hlt
pop
jbe
shll
push
in
repnz
bnd
add
adc
lret
aam
and
and
aaa
dec
cmp
sbb
lahf
das
ret
pop
jb
add
inc
arpl
add
mov
shlb
add
je
aad
cmp
jl
or
loopne
pop
aas
mov
std
test
adc
aaa
dec
sub
rorb
or
test
jne
mov
and
sar
into
or
cmp
andb
jecxz
mov
pusha
loopne
inc
dec
cmp
adc
xchg
loopne
in
mov
pusha
loopne
fistpl
rol
scas
sbb
sbb
jmp
pushl
int
mov
addr16
in
popa
aad
pusha
shlb
daa
xor
pop
int3
imul
das
push
pop
fimuls
loopne
mov
enter
outsb
mov
mov
push
cld
lock
lock
inc
add
das
popa
xlat
cmp
outsl
jge
sub
sub
push
sbb
pop
pop
ret
aad
cmpsb
loopne
push
mov
add
mov
out
imul
add
call
shlb
inc
lods
icebp
enter
loopne
xor
push
sbb
push
pop
ficoml
sbb
add
andb
test
shrb
pop
mov
testl
sbb
pusha
int3
pop
mov
mov
adc
cmp
mov
adc
cwtl
dec
or
rolb
and
mov
sahf
dec
or
bnd
xchg
dec
insb
pop
push
addb
mov
xchg
stos
aaa
adc
mov
fistps
stc
in
jae
mov
std
sub
xorb
push
and
mov
cmpsl
mov
andb
pusha
pushf
sbb
rolb
std
ret
pushf
mov
push
inc
inc
std
mov
jns
out
leave
int
jb
out
int
loop
dec
inc
popa
sub
pusha
mov
fmull
addb
jl
test
pop
fisttpl
ss
daa
scas
push
movsb
andb
lcall
pop
sbb
pusha
mov
xchg
bound
rol
pop
xor
mov
push
addr16
out
bound
inc
cmp
push
ds
inc
in
or
fwait
xor
and
lds
lret
mov
jb
cli
out
sbb
add
mov
addb
movsl
or
mov
inc
inc
and
shrl
in
and
add
xchg
fucomip
mov
loopne
loope
jo
adc
pop
xor
rorb
loopne
rcr
inc
xchg
shl
cmp
int
stos
jp
pop
dec
jg
adc
test
movsl
int3
roll
outsl
mov
rclb
pusha
iret
aaa
scas
and
icebp
xchg
inc
push
sub
lahf
add
push
pushw
mov
mov
add
jb
pop
clc
ror
adc
rol
adc
mov
xchg
jbe
jnp
xor
fs
jb
pminsw
pop
lea
mov
addr16
js
cld
cmpsw
adc
cmp
or
mov
iret
cmp
pusha
test
dec
sbb
inc
pop
or
shlb
mov
inc
mov
insb
sbb
movsb
and
mov
pop
loope
fsubrl
add
rcr
xchg
sub
pcmpeqb
pusha
rcrb
test
out
aam
add
dec
cmp
push
cs
or
inc
mov
adc
pusha
mov
add
leave
push
je
mov
inc
inc
xchg
cld
cli
cmp
insb
out
setp
out
jae
cmp
push
loopne
push
sub
push
ljmp
cmp
add
stos
jl
scas
pusha
mov
scas
outsl
push
call
xchg
outsl
cwtl
pop
test
dec
and
adc
in
or
shll
pusha
xor
add
in
mov
cmp
addr16
fimull
rol
mov
xor
sub
add
mov
ficoml
and
popf
es
into
cmp
sbb
cld
cwtl
mov
loopne
adc
dec
leave
sbb
fldt
pop
and
cmpsl
mov
add
push
out
jge
sahf
mov
mov
sbb
dec
push
xor
add
xchg
mov
mov
cmpsb
add
pusha
cld
pusha
fidivrs
cmc
add
sub
add
das
jns
mov
pop
cltd
xchg
add
xor
jnp
mov
in
fsts
sbbl
and
shl
and
jmp
cmp
andb
out
je
jb
shl
mov
add
rorb
outsb
lahf
int3
lock
dec
fsubrp
add
fmulp
test
xorb
and
aad
lods
xchg
ds
loopne
xchg
rorl
mov
mov
dec
sti
inc
cs
add
fcompl
dec
dec
xchg
addb
mov
mov
add
das
sub
and
pusha
je
mov
bound
aad
std
jmp
and
insb
mov
fiaddl
nop
mov
fisubs
dec
push
xchg
ja
ss
inc
loope
push
insb
xchg
jle
inc
sti
ret
shlb
jle
fcmovnb
fwait
mov
push
scas
inc
pop
mov
daa
mov
mov
divb
sbb
sub
clc
out
dec
push
cmp
mov
lcall
inc
push
mov
xchg
and
test
and
pop
jge
push
xchg
fmull
loopne
mov
imul
arpl
or
pop
int
sub
jp
jns
pop
js
cmpxchg
andb
jg
push
mov
jp
pop
mov
fs
add
pop
pop
in
in
andb
scas
loopne
mov
inc
and
push
fsubl
mov
sub
or
xchg
ret
bound
inc
adcb
pusha
mov
call
or
das
xchg
inc
adc
push
es
cmp
sub
sar
fidivl
shl
aad
dec
inc
lods
pop
xchg
nop
xadd
imulb
frstor
inc
cmp
mov
std
scas
or
xchg
push
mov
fdivr
mov
stc
jp
mov
add
addb
and
icebp
cmp
and
adc
xchg
pusha
ret
cmp
and
pop
ss
lods
pusha
and
inc
insl
or
lds
add
pop
cli
inc
jo
mov
and
inc
mov
push
cmp
fnstenv
inc
pusha
push
test
inc
out
cmc
sub
rcrb
int
push
andb
test
popa
imul
xchg
dec
jae
or
pusha
cmpsb
rolb
lret
inc
outsb
sbb
js,pt
jmp
xorb
cmp
fsubr
in
jbe
mov
out
in
sbb
rolb
loopne
push
sbb
repnz
shrb
loopne
push
subl
and
mov
pop
es
loopne
dec
sahf
jl
jg
inc
push
add
rcrb
aaa
jmp
xchg
out
sbb
sarb
fcomi
inc
cmp
mov
inc
andb
pop
fildl
adc
popf
mov
testb
inc
fnstsw
andb
push
sub
and
addr16
and
dec
pop
sbb
ds
jmp
arpl
ret
scas
fidivs
iret
icebp
sub
jnp
pop
mov
pop
insl
in
pop
pop
repz
jb
shlb
and
xor
repz
test
movsb
shl
cmp
mov
nop
sub
adcb
aas
fwait
lods
inc
pusha
or
pop
dec
sbb
mov
cmp
push
add
cld
decl
andb
orl
shlb
dec
sub
adcb
jecxz
add
mov
sahf
jo
loop
jnp
and
add
in
out
lea
addb
outsl
push
push
imul
add
je
lret
inc
inc
mov
stos
cmpl
mov
add
and
inc
cmp
movsb
mov
inc
sbb
xor
andl
inc
xchg
push
rolb
les
insl
jne
sbb
mov
aad
xor
inc
push
scas
mull
cmp
leave
fnsave
xchg
in
rcrl
loopne
andb
jb
push
dec
xor
or
inc
dec
sbb
jp
daa
adc
xor
aad
rol
dec
in
aaa
push
adc
sbb
scas
mov
fdivs
adc
add
pusha
xchg
mov
cmp
inc
pushf
pop
mov
addb
popa
and
cmpsl
pop
mov
sbb
andb
lods
pusha
mov
das
sub
popl
in
shll
jo
mov
mov
pushf
mov
ljmp
and
in
loopne
cmp
cmpsl
and
mov
add
mov
pop
out
pop
xlat
cwtl
outsb
dec
js
push
popa
push
mov
fs
popf
mov
add
cmc
jl
rolb
push
icebp
push
lret
adc
test
loopne
mov
jbe
stos
fdivrl
fbstp
lcall
add
add
loopne
pop
lret
dec
ret
and
loopne
ljmp
fwait
fdivl
cmpl
jo
in
dec
scas
repnz
cmp
sbb
or
xchg
mov
sub
xor
and
ja
imul
les
and
and
movsl
das
sbb
shlb
loopne
mov
idiv
cmp
les
xor
loopne
cwtl
fisubs
rcrb
inc
outsb
pop
xchg
fisttps
mov
pushf
iret
lahf
int3
inc
jg
rol
lock
and
xor
movsb
shlb
mov
xchg
jg
mov
mov
add
insl
xor
pusha
cmp
mov
xor
addb
and
int3
clts
pusha
mov
inc
icebp
xor
mov
subl
mov
ds
leave
push
mov
and
pop
std
mov
stos
inc
pusha
jg
xchg
sbb
icebp
pop
into
dec
pop
iret
cmpl
fdivr
and
sahf
inc
pop
xor
inc
push
notb
cmp
daa
insb
sbb
andb
xchg
leave
incb
das
mov
dec
and
inc
jg
aam
in
std
rolb
in
addb
mov
nop
jge
sub
push
insb
push
mov
add
inc
xor
daa
xlat
jmp
andb
mov
pusha
ljmp
iret
je
mov
xor
and
mov
and
cmp
mov
jae
pusha
and
sbb
pusha
inc
mov
addb
mov
jns
adc
mov
pop
xor
add
stos
stos
add
out
popf
lahf
daa
iret
dec
mov
fwait
inc
mov
aas
sbb
and
adc
in
cmpsb
mov
iret
adc
mov
loopne
mov
loopne
mov
cmp
mov
lods
loopne
sub
ret
add
inc
mov
xor
out
stos
mov
sub
inc
sub
add
add
and
movsl
inc
push
fs
mov
push
xchg
xchg
loop
cltd
out
push
sub
out
inc
pop
pop
roll
and
cmp
fsubrs
and
das
cld
fcomi
ds
pop
sbb
adc
lods
pusha
rolb
rcl
jecxz
dec
fcomi
jae
push
mov
dec
stos
push
cmp
mov
and
pop
push
pusha
pusha
fsubl
insl
push
cmp
iret
fcomi
push
pusha
and
gs
mov
subb
xor
imul
add
add
popa
cmp
push
dec
mov
pusha
and
push
lret
sub
inc
pusha
je
fdivs
jmp
rolb
mov
mov
cli
xchg
push
adc
aad
add
std
stos
mov
mov
sub
jl
mov
dec
faddl
dec
pop
into
scas
mov
sbb
and
push
sahf
cmp
xchg
pop
pop
and
push
inc
fwait
mov
loope
daa
in
insl
or
movsl
push
fcmovnbe
lret
jle
add
repnz
pusha
pusha
lret
cmp
jl
jno
adc
pusha
fsubrs
pusha
mov
mov
scas
and
add
and
data16
add
jmp
and
pusha
fcomps
push
xor
mov
cmp
jno
and
inc
xlat
loop
and
mov
lahf
xorl
mov
push
xor
mov
movsb
shlb
inc
rol
repnz
sbb
in
sbb
xchg
in
nop
in
pop
movsl
and
inc
rep
push
call
cmc
mov
add
sbb
or
fistl
sbb
fsubrl
in
xchg
inc
adc
shlb
sahf
xchg
test
in
cmp
push
jl
inc
inc
ds
rolb
jl
mov
inc
cmc
popf
cli
pop
stc
mov
add
