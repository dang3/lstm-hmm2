cld
or
dec
xor
shl
add
lock
xor
pop
ljmp
daa
mov
xchg
mov
mov
sbb
jno
add
rolb
movsb
add
mov
add
lcall
add
mov
cwtl
out
stos
jnp
mov
jb
jno
add
add
add
add
in
filds
rcrl
mov
int
mov
mov
add
sub
add
push
add
add
sti
add
cmc
cmc
xchg
add
mov
adc
jno
mov
xchg
or
insl
add
add
in
xchg
jmp
add
add
jecxz
add
cmp
add
or
ds
cmpsb
add
add
cltd
jmp
sbb
xchg
pop
cmp
add
fwait
aam
push
dec
cli
mov
insb
cmc
and
inc
add
loopne
push
dec
push
enter
mov
mov
hlt
add
adc
aam
add
pop
test
adc
add
add
jo
addb
jo
lods
add
hlt
add
add
add
add
js
aam
sub
xor
jae
adc
inc
add
add
inc
add
mov
jnp
jns
add
lock
pop
xchg
add
test
sub
add
icebp
or
dec
fstpl
fadd
add
mov
add
xor
lcall
testl
add
mov
aaa
popf
out
imul
inc
pushf
popf
sbb
add
inc
out
or
mov
xchg
adc
cli
scas
lret
std
shrl
sahf
sbb
and
mov
add
add
cmp
mov
add
cli
mov
aad
sub
adc
mov
or
mov
add
mov
mov
mov
pop
push
add
add
repnz
lea
add
or
add
mov
insl
nop
add
add
add
int
lahf
xor
pop
xchg
add
cmp
addr16
jo
xchg
mov
les
fbld
add
mov
jecxz
jp
add
add
fadds
add
bound
mov
add
add
popa
out
push
ret
pop
xlat
clc
outsb
lods
ljmp
sub
test
and
add
mov
outsl
xchg
mov
add
jecxz
jae
std
push
scas
sbb
rcrl
lea
add
cmp
add
add
fldenv
or
mov
sbbl
add
or
mov
add
mov
add
add
add
sbb
in
gs
add
sub
mov
test
xor
add
out
xor
add
ja
ret
aas
fwait
jns
jle
add
add
out
sbb
cmp
add
add
jnp
add
sahf
pushf
and
inc
add
add
hlt
add
mov
stos
pop
imul
pushf
into
or
add
jns
jmp
push
xchg
xor
jle
cmp
mov
inc
mov
inc
or
mov
in
sub
push
push
push
cld
call
sub
mov
cs
movzbw
cmp
ss
lea
push
push
call
cmp
je
es
lea
push
cs
es
call
test
jne
jmp
lret
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
add
repnz
mov
sub
sub
push
pop
push
push
jmp
jmp
add
add
mov
add
add
popf
inc
pop
out
jl
add
test
pop
in
sub
add
xlat
testb
nop
add
add
push
scas
jns
add
push
pop
je
cs
dec
or
lds
add
add
add
outsl
insl
add
gs
addr16
cmpsb
add
fidivs
add
mov
mov
loope
sub
add
les
push
rolb
xor
xchg
repz
xor
jl
xchg
add
push
or
mov
jmp
add
push
ret
pop
push
pop
or
rcrl
daa
daa
inc
add
ja
or
cmp
add
mov
stos
dec
mov
xor
mov
sbbl
push
nop
add
inc
pop
add
loopne
mov
hlt
add
push
cli
add
push
add
mov
add
inc
hlt
add
mov
arpl
and
sub
add
add
fsubrl
mov
call
sarl
pop
push
lea
xchg
int
add
pop
push
add
mov
add
add
hlt
add
js
aad
add
rolb
xor
mov
xchg
cmp
xchg
fidivrs
or
mov
pusha
add
pop
xchg
add
rolb
dec
iret
ss
pop
sub
add
sbb
cwtl
inc
sub
push
mov
ficoml
ljmp
or
mov
testb
ljmp
aam
cmp
out
daa
cmp
dec
and
push
add
mov
fucom
and
add
loop
hlt
add
add
xchg
jbe
in
ret
pop
imul
xchg
add
add
xlat
addb
sbb
xor
cltd
aaa
test
mov
movb
sbb
add
jo
int
sbb
add
sbb
xlat
mov
add
stc
rolb
sbb
add
inc
addb
xor
mov
mov
test
out
inc
add
ret
icebp
gs
push
add
and
jge
pop
rolb
cld
mov
add
xchg
data16
add
cltd
int
into
push
movb
jge
xlat
adc
or
loope
fsub
sub
pushf
shll
lea
je
or
ret
push
add
lret
xor
add
scas
icebp
rcr
inc
add
repnz
fidivl
mov
and
dec
inc
add
jmp
add
xor
ljmp
ja
add
in
inc
xor
test
call
popa
inc
add
cld
sbb
lock
sbb
aaa
or
pop
out
pop
mov
ret
mov
das
popa
or
add
jb
push
lods
adc
sub
call
mov
fstpt
repz
xor
in
xor
and
ja
outsb
ds
add
pop
ds
icebp
loope
dec
js
add
loopne
mov
add
jb
adc
add
add
imul
cwtl
push
add
pop
mov
mov
mov
mov
sub
xchg
dec
scas
push
add
add
pop
pop
loope
push
sbb
out
dec
jb
es
test
jmp
add
std
adc
mov
dec
aam
adc
xor
add
or
mov
jecxz
add
dec
in
adc
sub
ljmp
fdivrl
add
cli
inc
add
add
mov
add
rolb
xor
rolb
loopne
into
inc
push
addl
cs
adc
push
fwait
mov
dec
mov
mov
adc
add
data16
xor
add
add
pop
loopne
cli
popf
sub
insl
je
sub
pop
ja
mov
test
xlat
pusha
add
out
pop
xchg
data16
add
add
cwtl
mov
cmp
mov
in
mov
stos
and
mov
daa
testb
in
addb
mov
fdivl
repnz
add
xchg
push
mov
jo
mov
or
add
cmp
add
jns
les
jge
add
add
imul
adc
int3
outsl
pusha
add
or
add
jl
or
frstor
imul
add
cmp
mov
je
and
cwtl
mov
add
lcall
inc
add
cmp
push
add
pusha
add
fst
add
sub
xchg
rolb
cld
pop
mov
pop
sub
pop
jmp
inc
add
fcoms
pusha
add
jmp
and
mov
add
jp
pusha
add
stos
sub
cmp
add
add
sbb
xchg
arpl
add
mov
add
ret
pushf
rolb
push
add
add
mov
into
scas
inc
std
fisubl
add
add
stc
and
mov
jge
ljmp
add
mov
inc
add
jb
stos
in
mov
in
mov
xor
jne
movsl
js
add
sub
jne
scas
sub
add
add
dec
int3
add
mov
js
data16
fnstenv
imul
xlat
dec
xor
add
mov
loope
add
add
jp
icebp
fidivs
add
das
movb
add
shll
add
in
and
jp
mov
add
mov
add
imul
jne
push
xchg
add
add
mov
pop
aad
cmp
lret
arpl
or
adc
cs
out
icebp
push
add
push
lds
add
add
ljmp
mov
fadd
ret
push
cmc
fsub
add
mov
leave
lcall
mov
addb
add
inc
add
aad
cmpsb
add
fmuls
test
mov
mov
repz
add
std
jg
or
mov
xor
jo
push
add
cs
add
popa
xchg
rolb
xor
dec
lds
push
push
sub
add
inc
lret
add
adc
into
arpl
add
test
add
add
lea
sbbl
add
add
push
mov
cmpsb
add
mov
movsl
pop
sbb
add
repz
aad
add
add
pop
js
pop
rolb
imul
jg
cld
mov
addb
daa
out
cmpsl
int3
lret
push
jbe
pop
icebp
lock
call
add
mov
dec
and
mov
sub
inc
lea
mov
gs
lods
mov
cmp
fisttps
mov
xchg
add
push
ret
dec
dec
jne
mull
mov
add
mov
bound
mov
push
subl
clc
add
mov
out
test
insl
sbb
add
std
mov
add
add
pop
bound
mov
cmpsl
data16
sub
and
cmp
add
xchg
add
inc
add
pop
mov
rcll
inc
inc
aas
xor
add
movsb
add
xor
cmp
or
xor
add
sub
dec
pop
adc
add
das
mov
push
add
adc
adcl
push
out
lea
in
jns
outsb
xchg
dec
and
mov
mov
cmp
rolb
cld
jbe
test
mov
scas
adc
mov
repnz
daa
inc
pop
imul
aad
into
xchg
add
xor
xchg
add
stos
adc
inc
cltd
test
mov
mov
add
push
xchg
dec
lea
mov
stc
mov
sbb
lock
call
add
aas
aad
add
fsubrs
in
jbe
push
add
add
cltd
dec
pop
add
mov
ds
add
sub
xchg
push
add
mov
add
hlt
add
or
mov
nop
add
add
push
add
add
mov
cld
in
hlt
add
add
add
push
xor
fldt
in
in
adc
ja
out
jp
add
mov
add
and
or
mov
mov
and
sbb
shl
dec
mov
in
sbb
jmp
inc
ficomps
test
add
incb
add
or
mov
add
push
add
add
lcall
dec
or
add
mov
lret
cwtl
scas
ficoms
mov
cwtl
test
mov
dec
push
add
push
jle
mov
add
mov
loopne
lea
popa
data16
add
fs
fiadds
jl
mov
cmp
jbe
mov
lahf
nop
add
or
lcall
add
pusha
add
loop
push
and
xor
add
out
cwtl
inc
dec
rolb
add
js
add
jno
into
push
add
cld
and
leave
jo
frstor
add
jns
lret
rol
ja
add
add
in
and
mov
add
mov
dec
mov
add
cmp
add
out
xchg
add
add
inc
lcall
insl
jecxz
add
mov
sbb
cmp
js
fdivrs
mov
pop
push
add
cmp
pop
jns
xchg
add
add
xchg
scas
xchg
repnz
pop
mov
inc
and
mov
add
mov
add
rolb
add
dec
popa
cmp
or
jle
add
adc
add
add
loope
add
add
cmpsl
xchg
jno
cld
test
fdivr
fisubs
lock
lret
xchg
inc
add
sbb
push
add
add
lea
andl
add
add
orl
add
dec
inc
add
mov
das
sub
add
add
ja
or
rolb
addr16
cli
or
jo
xor
add
mov
inc
dec
pop
lods
mov
or
imul
mov
pop
pop
sub
mov
sub
js
bound
mov
int3
dec
mov
push
add
addr16
add
and
mov
fcomi
cmp
cmpl
clc
cmp
pop
mov
mov
in
mov
mov
test
lods
push
add
aad
iret
mov
dec
mov
lods
popa
leave
push
add
dec
rolb
push
add
add
cwtl
int
mov
mov
push
add
in
stos
lds
lea
sti
mov
cmp
out
jle
in
loopne
out
mov
insl
dec
popa
out
gs
or
pop
jbe
or
mov
add
shll
add
leave
jo
lock
or
add
add
jno
pop
js
xor
add
cmp
insl
lahf
movsl
and
jne
add
stos
xchg
movsl
dec
push
add
jns
cmp
push
xchg
aaa
cmp
push
pushf
and
add
add
mov
pop
lods
fdivs
add
push
ds
pop
push
sub
add
out
add
insl
cli
add
stos
add
mov
add
mov
mov
or
lcall
lock
mov
or
fs
in
cld
stc
jae
filds
mov
sbbl
xchg
add
mov
add
add
das
sub
dec
mov
lret
or
cld
popa
add
cmpsb
add
insl
xchg
daa
mov
loope
adc
add
sbb
mov
pop
xor
sub
adc
add
sub
add
add
cmc
fnsetpm(287
add
add
jmp
inc
xor
push
sub
add
aad
push
add
lcall
shr
aam
ja
mov
gs
add
call
scas
lret
xor
mov
add
test
add
mov
pusha
add
cmp
ret
out
insl
xchg
jle
jb
cmc
or
jb
fmulp
testb
pop
sbb
add
add
push
scas
and
mov
mov
fs
das
test
jbe
movb
add
cmp
dec
stc
jp
add
sbb
lahf
sub
add
cvttps2pi
inc
add
add
sbb
or
add
js
jo
sti
lods
stos
rcll
inc
sbb
jne
add
lock
add
add
add
push
idiv
ror
jge
mov
jle
cwtl
xor
jbe
push
add
cmp
add
add
lret
imul
add
jmp
add
add
ja
xchg
add
cltd
mov
push
xchg
xor
cmp
jg
jecxz
fmuls
negl
shll
jecxz
push
and
xor
cmp
add
clc
cmp
pop
je
shrl
sbb
xor
add
xchg
xchg
pop
xor
mov
add
jle
xlat
pop
pop
in
and
mov
sbb
mov
xor
js
add
iret
sahf
xor
sbb
mov
adc
push
mov
mov
lahf
addb
arpl
xchg
fldcw
call
xor
mov
lods
mov
out
add
add
add
shl
push
add
rcl
add
xchg
add
xor
xchg
add
and
mov
add
mov
xchg
add
inc
sbb
in
lods
jge
jecxz
jno
mov
add
mov
fiadds
out
imul
je
rcr
add
xchg
leave
xchg
add
push
or
sub
add
and
mov
icebp
lcall
test
pop
xchg
push
add
std
cs
push
rolb
ret
cmp
mov
add
adc
sti
addb
add
nop
add
cmc
clts
add
inc
pop
lds
out
add
rolb
or
add
add
pop
shll
adc
mov
js
and
mov
ljmp
inc
add
add
adc
add
add
cmpsl
jae
add
adc
mov
add
test
rolb
les
cmp
sub
xor
mov
add
jno
shll
or
jle
cwtl
or
and
mov
jp
addb
out
aad
out
dec
scas
xchg
scas
nop
add
cmpsl
nop
add
add
in
push
add
sarl
mov
xchg
mov
addb
add
add
mov
add
inc
mov
sbb
xor
inc
add
add
imul
jmp
addb
addb
add
aad
dec
add
adc
mov
and
dec
movsl
adc
add
add
add
add
jnp
gs
pop
lock
aad
cwtl
loope
pop
adc
inc
add
mov
add
add
mov
test
inc
add
sbb
add
sbb
cmp
rcll
push
add
add
test
add
cld
repz
les
mov
call
jmp
cmp
gs
jg
pop
fmull
adc
dec
outsl
adc
into
orl
add
sbb
lret
add
mov
jl
movsl
in
jae
test
jg
add
nop
add
cmp
ja
add
push
outsl
jno
inc
movb
push
movb
add
rorl
jle
and
sbb
adc
inc
add
add
mov
inc
add
add
add
add
add
pushf
fcompl
imul
add
int
dec
arpl
jecxz
fmull
add
mov
sbb
aam
imul
popf
dec
rolb
xor
pop
shl
fucom
add
in
pop
push
adc
lahf
test
popa
mov
push
scas
sbb
lods
rolb
jns
cli
sub
daa
stc
mov
fcmove
sti
cmp
std
xchg
add
jnp
add
ret
sbb
xor
aad
add
mov
sahf
inc
add
add
add
adc
inc
pop
incl
add
cmp
dec
iret
gs
add
sub
jb
mov
lock
add
popf
loop
dec
inc
add
ss
add
mov
mov
mov
or
add
testb
add
add
add
out
mov
lods
mov
jnp
in
pop
dec
xor
push
add
add
mov
repnz
add
xor
mov
adc
and
sbb
add
mov
add
iret
xchg
test
outsl
mov
add
cmp
mov
sbb
in
and
inc
add
adc
fimuls
cmp
dec
or
icebp
xchg
jmp
in
mov
outsb
inc
fnstsw
add
add
add
cs
jae
add
orl
add
xchg
add
add
fdivrs
cmpsl
adc
add
add
insb
fimull
add
das
ljmp
insl
insl
mov
add
add
mov
das
xchg
add
mov
jne
aas
mov
dec
dec
mov
mov
sbb
aam
fnstenv
icebp
in
mov
popa
jns
pop
addl
loopne
pop
test
stos
les
adc
ja
inc
add
mov
sub
arpl
cmp
mov
in
mov
add
cmp
or
stc
faddl
movsl
xchg
add
lret
das
sbb
sub
cld
pusha
add
push
jnp
mov
or
frstor
jne
pushf
cwtl
rcrl
in
push
nop
add
add
xor
jecxz
add
pop
jne
adc
and
daa
lcall
add
add
arpl
in
pusha
add
lods
jo
adc
and
rorl
incl
add
jno
xor
push
or
add
stos
mov
add
cmc
push
add
in
mov
scas
mov
in
aad
mov
ss
inc
add
dec
inc
add
push
rcr
fcoml
jnp
in
out
cld
pop
mov
add
movsb
add
jae
add
or
jnp
add
sub
add
mov
add
sbb
movsb
add
into
push
add
cmpsl
push
adc
add
cmpsb
add
jle
mov
xchg
clc
and
xchg
mov
imull
or
ja
lds
jne
and
add
loopne
repnz
xor
scas
xchg
add
dec
xor
das
sub
add
test
push
rorl
mov
orl
add
fisttpll
adc
popf
mov
test
or
aam
mov
add
sub
add
hlt
add
test
mov
add
mov
das
lahf
jecxz
add
add
add
or
inc
or
sub
cmp
pop
jno,pt
mov
add
inc
or
jno
stos
imul
add
add
clc
js
add
jae
add
data16
jb
clc
enter
clc
jg
push
or
cmp
out
or
add
xchg
jmp
scas
shll
adc
mov
adc
add
cli
movb
add
add
dec
ja
add
add
jmp
fisttpll
add
jno
addr16
jg
add
pop
addb
insb
js
or
push
mov
adc
mov
and
lods
mov
pmulhw
xor
sub
addr16
add
sub
in
push
les
ja
pop
hlt
add
je
pop
gs
inc
aad
loopne
pop
add
cmpl
add
and
popa
mov
testb
push
int
sahf
dec
inc
add
mov
dec
bound
mov
int3
add
mov
sub
in
or
test
mov
das
pop
out
inc
add
cwtl
jbe
nop
add
stos
adc
and
testb
mov
jmp
add
lret
pusha
add
fisttpl
fnsave
fsubs
add
mov
inc
popl
adc
aaa
cmc
or
cwtl
outsl
outsb
rolb
ret
sbb
add
add
lahf
dec
popa
mov
add
add
ficoms
nop
add
mov
and
add
or
add
push
add
add
inc
fildll
das
adc
je
or
out
dec
or
add
add
add
mov
sbb
push
sbb
add
mov
add
mov
inc
dec
in
add
jae
cltd
inc
les
push
add
std
fdivrs
mov
jle
pop
bound
mov
add
and
hlt
add
lds
add
xor
xor
lods
dec
mov
ljmp
jg
lcall
inc
or
fsubrs
add
mov
mov
add
test
jge
inc
xor
frstor
mov
add
add
add
dec
jecxz
imul
rolb
add
lea
add
add
add
lret
sbb
adc
lahf
push
add
xchg
rolb
rolb
add
xor
mov
mov
and
lds
mov
push
mov
mov
inc
sbb
add
pop
sub
add
add
dec
iret
test
dec
and
add
call
mov
jb
pop
outsl
dec
sbb
add
add
das
in
movb
icebp
aam
jmp
js
cmp
nop
add
imul
test
test
cmc
ljmp
add
jno
mov
scas
dec
in
adc
lahf
mov
mov
mov
iret
rcr
cwtl
xor
cmp
addb
sub
add
into
adc
mov
clc
test
xor
and
xchg
enter
push
out
ucomiss
jo
pop
les
insl
rolb
sbb
stos
out
jne
lea
decb
data16
xor
add
jo
push
sbb
add
add
mov
jne
xor
popa
xchg
hlt
add
mov
add
add
bound
mov
add
stos
jle
add
add
insb
push
fdivr
aaa
lcall
pop
xor
mov
mov
add
lahf
xor
pop
dec
daa
xchg
add
add
add
inc
add
add
add
xor
insl
icebp
adc
mov
pop
xchg
add
or
decl
add
sarl
stos
adc
inc
add
stos
insb
inc
cmp
cmp
lds
add
xor
inc
add
gs
bound
mov
jle
add
mov
add
loopne
imul
cwtl
shr
or
add
cmp
in
sbb
ja
loop
ja
imul
add
test
fnstenv
repz
mov
add
je
movsl
dec
cli
xor
in
test
pop
cli
xchg
inc
add
xchg
xor
gs
or
xchg
cmp
push
stc
popf
fbstp
or
incl
hlt
add
add
add
add
adc
call
cmp
and
aaa
inc
ljmp
and
xchg
rolb
cltd
into
iret
pop
mov
cwtl
lret
push
push
add
popf
hlt
add
sar
aam
dec
mov
sub
or
cmp
xlat
ljmp
add
add
inc
add
and
mov
xor
push
add
mov
add
call
jle
sbb
add
and
mov
in
jle
add
je
movsb
add
out
add
add
add
add
rolb
pushf
adc
sbb
mov
xor
out
rolb
add
sub
iret
mov
cmp
out
jne
hlt
add
add
fistpl
pushf
xor
outsl
test
inc
add
addb
or
cmp
ja
test
in
xlat
test
pop
les
push
add
push
add
adc
sbb
push
add
add
cs
sbb
jge
add
pop
addb
int
lods
cmp
inc
add
fists
cmpsl
testb
ja
mov
fidivrl
push
add
repnz
scas
insl
add
icebp
fstl
or
adc
add
inc
sub
loope
add
mov
rolb
mov
mov
sub
jnp
lea
daa
xchg
add
add
add
ret
iret
sahf
ja
popf
and
add
xor
add
xor
or
mov
jl
xor
xchg
add
mov
push
add
cmpsb
add
test
test
jp
aas
cmp
out
dec
stc
imul
fisubl
insb
mov
add
mov
cmp
push
loope
jbe
out
jg
add
sub
add
pop
addb
ds
add
or
in
js
add
jne
test
jns
bound
mov
add
add
cmp
mov
out
sbb
xchg
push
sbb
lcall
sbb
jl
lcall
sub
xchg
enter
add
sarl
jns
jo
and
mov
andl
test
out
sub
add
cltd
test
sub
push
add
mov
add
rcr
mov
inc
add
pop
mov
loopne
inc
mov
push
out
sub
xchg
add
add
add
testl
out
sub
lret
and
mov
test
dec
rolb
pop
cmpsl
pop
xchg
xchg
inc
add
add
fsubl
adc
jecxz
mov
cmpsl
mov
mov
ret
into
or
arpl
insb
loope
sarl
or
jl
mov
enter
add
and
mov
jne
add
test
stos
inc
add
in
dec
jne
add
mov
sub
je
inc
add
mov
cmpsb
add
add
mov
enter
nop
add
rolb
jne
add
daa
jl
add
pop
mov
mov
add
cmpl
add
add
sub
add
and
add
pop
iret
stos
into
daa
movsb
add
mov
lds
add
push
add
push
add
add
add
mov
clc
into
inc
add
push
inc
xchg
out
mov
fiadds
mov
push
mov
mov
jl
pop
icebp
sbb
add
dec
popf
jmp
jp
idivl
loopne
push
add
add
out
cmp
add
mov
add
mov
add
mov
add
xchg
testl
sbb
push
in
cmc
pushf
arpl
dec
jl
add
or
outsb
mov
cmpsl
mov
dec
mov
adc
sti
xor
packuswb
push
add
xchg
add
mov
add
adc
inc
leave
out
push
add
sub
js
bound
mov
repnz
lcall
push
add
das
push
add
pusha
add
hlt
add
dec
mov
mov
je
cld
out
mov
cmpsl
ret
mov
add
jmp
xchg
sub
xchg
add
rcll
leave
fnsave
fcompl
sbb
add
add
xchg
push
cmp
fldcw
jae
add
outsl
adc
add
loopne
stos
pop
sti
std
cmp
add
sub
jbe
rcrl
mov
xchg
jno
xor
daa
test
mov
pop
xchg
add
add
mov
or
or
pop
mov
mov
adc
stos
shrl
mov
sahf
xchg
push
add
dec
imul
dec
iret
cmp
sub
mov
movsb
add
mov
out
rcll
and
in
jge
add
fnstenv
sar
cmp
cmp
mov
xlat
scas
and
mov
sbb
add
and
insb
lods
dec
rolb
bound
mov
add
add
cs
std
xor
dec
jno
rcl
jmp
add
leave
stc
adc
sub
add
mov
das
lds
add
xchg
jp
lods
pop
popf
mov
add
dec
mov
add
xor
in
insl
jg
add
js
lods
imul
xchg
js
sbb
mov
push
imul
inc
xchg
mov
mov
add
mov
add
stc
jbe
jns
add
add
popa
lods
cli
xchg
add
int3
mov
mov
mov
add
in
add
cmp
push
add
movb
testb
mov
outsb
stos
inc
add
jge
add
add
mov
lret
add
insl
pop
cld
mov
xor
loop
inc
add
add
sbb
jo
pop
inc
pop
dec
mov
push
add
addb
add
adc
addr16
add
add
add
mov
add
mov
mov
je
test
ret
fbld
cmpsl
jns
pop
imul
push
add
iret
lahf
das
jb
stos
pop
hlt
add
mov
jle
add
and
pusha
add
test
add
jl
jmp
cld
je
lahf
popf
stos
insl
add
add
scas
xor
jne
push
mov
pop
movsl
daa
sub
jb
loopne
fsubrl
xlat
test
add
add
add
add
xchg
add
push
mov
xchg
add
sub
add
mov
cmp
sbb
ret
push
mov
ret
sti
rorl
scas
pusha
add
outsl
jno
add
flds
out
adc
push
pop
paddsb
and
mov
test
add
add
inc
push
in
pop
inc
and
mov
add
movb
mov
push
lods
adc
xor
inc
add
and
mov
scas
push
jg
add
iret
pop
add
xor
fdivrs
add
outsl
cmp
xor
aam
rolb
sbb
dec
rolb
and
hlt
add
mov
mov
lea
add
rolb
xor
mov
aam
ja
cmp
sbb
leave
jle
scas
fbld
testb
fmul
bound
mov
add
add
testb
mov
insl
inc
add
inc
add
lods
push
add
add
inc
das
inc
pop
in
ds
aas
scas
or
aam
inc
add
add
cmpsl
lret
mov
dec
movsl
enter
add
outsb
loope
es
add
mov
add
stc
sub
mov
arpl
mov
xchg
add
jne
dec
sarl
sbb
cltd
lret
cs
add
sub
push
add
sub
add
jmp
mov
add
popa
hlt
add
push
add
add
add
test
push
add
inc
cwtl
test
jns
aas
sbb
repz
add
sub
add
inc
jae
mov
push
dec
and
mov
add
inc
add
push
stc
cwtl
addb
add
in
insb
stc
aam
lahf
in
push
add
add
rol
lahf
ljmp
cmp
addb
test
in
ja
add
dec
loopne
das
push
or
insb
or
stos
lahf
xchg
sbb
in
pusha
add
insl
int
add
and
imul
xor
movb
jecxz
andl
add
mov
and
xor
jmp
push
add
inc
add
add
out
cs
mov
mov
mov
adc
enter
inc
test
add
cltd
scas
sbb
fnstsw
xchg
popa
mov
cmp
jns
shll
add
xor
inc
sbb
add
and
cmp
push
lea
addr16
jne
add
ret
dec
xchg
jno
lahf
lahf
mov
jno
mov
push
add
jo
mov
push
add
and
mov
rcrl
add
jb
pop
in
mov
add
jo
cmp
mov
dec
xor
je
loop
adc
add
and
mov
ja
add
push
add
in
jmp
add
or
clc
clc
data16
add
mov
add
mov
leave
aaa
or
icebp
jle
add
mov
cmpsl
xor
ljmp
add
inc
add
repz
jp
add
add
pusha
add
add
frstor
test
addb
imul
add
add
add
add
sub
jbe
insb
mov
and
add
add
sbb
insl
pop
pop
push
add
loop
fdivrl
daa
mov
add
aaa
pop
std
daa
pushf
addb
add
xor
push
add
mov
bound
mov
or
push
add
mov
add
cs
pushf
xchg
add
lahf
mov
fwait
imul
repz
loope
inc
pusha
add
pushf
xor
pop
std
andl
sub
addb
push
aas
mov
pop
insl
xor
out
ds
stos
lahf
lahf
mov
or
mov
bound
mov
testb
add
cli
das
ljmp
pop
out
popa
mov
ds
ret
mov
add
sbb
iret
mov
sti
repnz
in
aaa
mov
ds
inc
pushf
test
add
add
or
and
add
sub
cmp
sti
xchg
mov
add
cmovg
xor
test
add
add
sub
mov
add
rolb
loopne
je
xor
adc
sbb
add
xchg
and
jno
mov
inc
add
add
out
xor
add
add
repnz
je
mov
and
mov
idiv
in
jge
mov
insb
push
jae
insl
mov
ror
mov
movsl
scas
add
scas
mov
ds
add
pop
sti
add
mov
mov
add
add
add
push
add
add
fiaddl
add
push
mov
add
mov
mov
add
sbb
add
jle
pop
and
mov
in
push
add
lret
pop
mov
lcall
push
repnz
xchg
add
insb
cmp
cld
scas
lea
mov
add
add
lea
pop
movsb
add
cmp
subl
dec
and
pop
ja
or
add
add
dec
adcl
xor
lcall
daa
movsb
add
jne
and
mov
push
stos
in
inc
ret
add
add
mov
push
add
into
inc
add
es
movb
add
add
loope
cmp
push
jo
inc
add
xlat
push
mov
in
loope
out
insb
test
jmp
sub
or
and
mov
and
nop
add
dec
cmp
push
add
jb
stos
push
pop
adc
inc
mov
repz
mov
add
add
ficomps
pop
pop
push
add
mov
mov
add
add
add
and
nop
add
mull
call
iret
outsl
pop
in
add
sub
ds
add
mov
jnp
jno
add
add
add
adc
add
mov
and
xor
in
scas
adc
outsb
in
ds
insl
sub
ja
add
lret
mov
inc
add
dec
pop
cmp
pop
mov
xorl
dec
or
pop
repz
pop
jecxz
sbb
adcl
pop
xor
sti
in
popf
fldcw
out
imul
jp
add
mov
iret
xor
iret
out
xlat
lret
cmp
xor
add
add
mov
and
add
add
sub
add
jne
mov
sahf
call
cmc
ret
shll
enter
xchg
add
xchg
add
icebp
fadd
add
rolb
add
repnz
xchg
lret
pop
push
jo
mov
sub
test
mov
clc
imul
add
mov
sub
mov
cmp
addr16
ljmp
push
add
cltd
addb
scas
jge
sub
add
xchg
pop
push
aad
add
mov
xchg
add
add
add
dec
add
mov
dec
fwait
mov
jl
add
mov
insl
lahf
aaa
push
jp
add
mov
add
jo
clc
in
dec
sub
add
push
add
add
sub
and
jg
outsl
xor
pop
cmp
insl
sub
cmp
mov
add
add
pop
sub
inc
xchg
add
hlt
add
add
add
push
add
leave
addb
and
ret
movsb
add
mov
nop
add
dec
idivl
add
rorl
rolb
cld
mov
fwait
iret
fucomip
outsl
aam
add
add
getsec
mov
mov
mov
cmc
jmp
stos
add
cmpsl
dec
push
or
mov
add
sti
pop
push
add
mov
mov
gs
adc
add
cmp
adc
jp
add
dec
jbe
lds
mov
imul
outsl
mov
lock
add
add
jnp
pop
outsl
inc
add
lret
out
daa
data16
mov
aad
jo
arpl
insl
lea
mov
outsb
mov
add
hlt
add
jecxz
add
inc
add
dec
inc
add
cmp
add
mov
mov
mov
add
add
push
add
jp
add
arpl
testb
push
add
mov
add
ds
add
and
mov
popf
rcrl
lea
adc
mov
and
jb
icebp
push
add
ljmp
add
add
add
dec
add
mov
add
sbb
mov
add
and
mov
jno
lret
add
add
test
cmpsb
add
insl
fisubrl
add
add
add
mov
aaa
mov
add
add
dec
xchg
mov
daa
sahf
arpl
add
lods
insb
je
and
outsb
sub
mov
outsl
jmp
add
mov
movsb
add
add
adc
jno
dec
stos
inc
add
in
mov
add
add
jne
decl
mov
pop
mov
fwait
je
jp
add
rolb
dec
jge
xor
xor
daa
or
lods
and
jl
xor
repz
mov
pop
ret
xchg
adc
fwait
adc
jae
add
into
mov
add
mov
jae
stc
pop
push
add
add
add
mov
add
push
add
aam
cmp
sub
jae
adc
mov
cwtl
in
nop
add
outsb
mov
xor
mov
inc
cmc
xor
std
adc
sub
add
mov
mov
inc
add
push
lock
mov
xor
loopne
push
data16
mov
pushf
mov
xchg
xor
add
repz
add
cmp
sbb
and
mov
add
add
add
add
addb
add
add
jmp
xchg
sti
ja
movb
sbb
add
add
push
add
push
arpl
add
add
pushf
lds
pop
cmp
test
sub
add
push
lcall
xor
add
mov
ja
cmc
into
add
fsin
rcll
icebp
fsubrs
cmp
add
enter
mov
test
add
add
pop
and
push
jne
packssdw
pop
stos
jb
jne
add
add
dec
adc
ja
mov
pop
sbb
mov
add
insb
and
mov
outsb
jo
lcall
pushf
sti
or
pop
xchg
cmpsl
lods
xor
add
push
subl
pusha
add
push
pmovmskb
data16
add
jb
or
sbb
repz
imul
cmc
movb
into
ret
add
add
rolb
clc
loopw
imul
inc
add
dec
mov
test
mov
push
add
push
fnstsw
repnz
aas
pushf
inc
movsb
add
add
cmp
inc
add
rolb
out
jae
xchg
add
add
mov
jmp
mov
add
out
mov
addl
inc
add
pushf
movsl
fidivrs
mov
and
lds
les
xchg
add
test
xchg
sbb
add
inc
add
in
sub
into
lret
sbb
push
add
xchg
faddp
loop
in
loop
cld
jbe
in
push
add
add
rolb
pusha
add
sub
push
add
add
cltd
mov
cmpsl
add
pop
popa
add
fadds
mov
add
mov
mov
movsb
add
fst
cs
inc
mov
add
add
mov
cltd
ss
lds
mov
inc
add
add
dec
push
add
jmp
dec
sarl
add
mov
dec
addb
pop
je
filds
mov
repz
test
sub
inc
add
pop
jge
add
das
nop
add
repz
add
mov
insb
pop
add
add
mov
pusha
add
lret
push
push
add
clc
push
repz
add
mov
fwait
addb
jg
add
adc
mov
sbb
gs
stos
popf
mov
mov
add
mov
cld
outsl
adc
sbb
dec
adc
lcall
mov
ds
in
dec
mov
add
movsb
add
pushf
insb
mov
mov
push
sub
jg
bound
mov
push
add
add
add
mov
mov
add
mov
add
add
fistpll
mov
pop
outsl
and
imul
outsb
push
add
add
add
addb
add
popl
ljmp
sbb
out
xchg
add
or
xor
add
add
add
add
cli
push
add
add
mov
std
pop
cmp
push
add
add
jl
sbb
int3
pop
fcomps
add
add
cmp
xor
add
test
add
aad
gs
loope
mov
jecxz
and
add
ds
fidivrl
jge
push
add
add
mov
add
add
add
or
jnp
ds
add
push
add
and
mov
cmpsl
divl
lods
rolb
nop
add
jp
sub
add
add
mov
add
les
sbb
scas
jle
add
mov
jb
mov
add
add
mov
movsb
add
jp
rcll
add
rol
add
jbe
outsl
arpl
insb
add
xlat
arpl
ficoms
add
mov
pop
lcall
iret
sbb
add
lahf
pushf
inc
add
dec
mov
lret
cmc
adcl
ss
add
xchg
lcall
add
mov
jo
test
mov
imul
jmp
add
fs
dec
mov
sub
add
lea
mov
out
xor
mov
add
mov
aad
out
in
fists
or
mov
mov
add
imul
repnz
inc
add
jmp
add
add
sbb
ret
lahf
push
aas
jbe
movb
add
add
mov
lret
fstl
add
pmaxsw
jae
out
mov
add
or
nop
add
jmp
es
inc
add
mov
inc
add
and
mov
inc
add
add
test
lcall
add
dec
dec
dec
mov
xlat
mov
mov
movsl
cmp
mov
pusha
add
cltd
cld
std
push
daa
andl
push
add
add
mov
jmp
xor
add
add
add
lds
add
jbe
jmp
gs
pop
int
negl
pop
jbe
out
mov
or
cli
icebp
jl
add
add
rolb
aad
dec
in
pop
and
mov
add
mov
movsl
fcomip
les
movsl
or
fidivl
add
sti
mov
mov
fisttpll
push
add
call
mov
add
movsb
add
add
inc
add
out
jbe
push
add
mov
add
add
lods
insb
push
add
jge
add
dec
push
add
add
jns
push
add
xor
ss
add
inc
xchg
add
adc
jns
xchg
jne
and
mov
lods
cltd
test
aas
jg
sbb
xor
dec
addb
repz
mov
mov
insl
out
add
add
jp
mov
popa
mov
add
pusha
add
add
mov
add
inc
decl
xor
aaa
seta
imul
addb
lock
sbb
jmp
mov
test
or
sbb
pop
out
test
jmp
mov
pop
inc
add
mov
sbb
addb
iret
cwtl
or
bound
mov
mov
mov
cld
mov
test
xor
add
mov
sbb
aad
sbb
out
stos
jge
mov
adcl
lea
xchg
das
mov
mov
mov
jne
dec
scas
add
add
add
ds
add
xchg
add
mov
push
test
test
lahf
adc
jle
add
icebp
cmp
mov
adc
fucom
and
mov
cwtl
xor
mov
add
jb
push
push
add
add
cmc
xchg
add
icebp
cmp
add
add
insl
or
rorl
add
add
add
cwtl
imul
xchg
add
mov
loopne
mov
add
cmp
and
movb
sub
mov
add
mov
pop
jmp
in
jnp
lock
push
add
jle
add
bound
mov
dec
das
sahf
adc
in
jae
add
add
mov
add
push
add
fwait
stos
addb
negl
leave
dec
stos
rolb
loopne
loope
arpl
jle
add
decb
movsl
push
imul
mov
xchg
mov
lds
fstpt
pop
imul
cmc
dec
js
fwait
cld
jecxz
xor
add
push
add
iret
pop
mov
dec
out
lea
data16
enter
push
add
adc
xchg
add
or
jb
jg
jo
mov
mov
push
add
imul
sahf
xlat
sub
std
pop
fsub
lds
push
pop
cmp
inc
icebp
imul
iret
mov
outsl
cwtl
fsubl
inc
cmp
add
push
jno
add
xchg
stos
test
repz
dec
mov
cmp
nop
add
add
sub
add
pusha
add
add
sub
add
test
cmpsl
loope
add
add
cld
sti
rolb
repz
add
or
add
movsb
add
xor
add
add
int
add
add
xor
mov
out
cli
jp
push
add
add
add
add
mov
jle
add
mov
push
add
in
out
mov
add
imul
add
sti
pop
mov
add
or
add
cmp
or
sahf
test
stos
add
mov
sub
inc
mov
xchg
pusha
add
dec
popa
gs
mov
inc
add
mov
mov
movb
scas
sbb
mov
cld
push
add
add
movsb
add
sub
jnp
iret
dec
aaa
xlat
inc
add
mov
mov
andl
lcall
fwait
test
rolb
xor
cmp
add
xchg
sbb
imul
add
jle
xchg
cmp
lods
xchg
sub
add
mov
add
mov
jg
pop
mov
add
jnp
add
ja
push
and
mov
xor
aas
sub
pop
ret
add
imul
add
test
push
add
in
cmp
pushf
and
adc
add
add
xor
or
sarl
mov
add
scas
cmpsb
add
inc
add
repnz
dec
cmp
out
clc
fidivrs
cmp
shr
pushf
inc
add
stos
bound
mov
adc
add
xlat
pop
dec
rolb
repz
and
add
aam
jl
add
movsl
sahf
mov
stc
rolb
add
in
sbb
add
adc
add
add
scas
xor
popa
js
mov
or
add
add
push
fisttpl
out
pop
and
mov
mov
cmp
add
arpl
fcmovnbe
add
addb
inc
add
inc
add
pop
add
pop
fidivs
add
and
aam
insl
sbb
jge
mov
push
add
add
add
add
add
popf
inc
rolb
dec
fwait
push
add
mov
add
add
pop
fsubl
add
mov
xor
pop
push
cmp
and
fwait
mov
ljmp
add
add
loope
repnz
test
mov
pop
fldt
add
stc
mov
out
test
cmc
xor
push
add
repz
push
add
jl
add
addr16
jne
add
stos
orl
js
sbb
add
add
add
add
push
loop
cmp
lret
push
pop
decl
stc
jle
add
add
ficoml
insl
mov
xor
dec
jmp
dec
xlat
out
movsb
add
insl
mov
and
mov
addb
push
add
filds
xor
adc
fiaddl
and
mov
or
cmp
push
add
add
sub
add
add
mov
movsl
test
mov
push
add
lods
jnp
lret
cmp
add
pusha
add
sbb
xor
dec
in
add
mov
mov
dec
mov
add
sub
push
fisubs
add
push
add
pop
xor
stc
mov
or
les
or
pop
pop
push
repz
add
mov
xor
insl
xor
movsb
add
sbb
add
jg
enter
loop
and
dec
cmc
out
jl
jle
adc
or
mov
push
pop
cmp
lcall
dec
pop
xchg
add
cmp
movsl
or
popa
adc
inc
stos
rolb
cwtl
out
mov
sub
sub
scas
pop
xchg
sbb
pop
dec
sub
add
pop
lcall
mov
ja
insb
add
mov
add
mov
add
inc
add
jno
je
sub
pop
mov
and
push
add
mov
add
push
std
jp
popa
dec
sub
add
xchg
pop
sbb
add
add
or
jno
shll
cwtl
pop
mov
adc
xor
lret
in
addb
or
adc
xor
mov
adc
rorl
pop
and
jl
mov
mov
test
in
mov
jo
sahf
lahf
dec
imul
add
outsb
push
add
and
mov
add
fwait
call
add
add
int
xchg
jl
and
fldcw
add
mov
mov
mov
les
fstl
out
insl
mov
loope
cmp
xor
leave
in
and
xor
notl
movb
sahf
loope
jge
add
pop
outsb
cltd
mov
fcomip
ret
cmpl
xchg
add
addr16
push
add
xor
iret
test
mov
add
add
loope
or
lret
call
add
pop
or
add
pushf
add
add
dec
test
mov
pop
xchg
add
add
xlat
mull
rcll
adc
mov
lcall
xchg
and
sbb
cmp
rolb
popa
cmp
lds
cmp
or
xor
cmp
scas
loope
adc
push
xchg
add
sbb
add
lret
sbb
xchg
and
mov
mov
rolb
movsl
dec
inc
and
mov
adc
cmp
add
xchg
daa
jl
mov
shll
push
pop
sbb
add
add
mov
scas
mov
lret
adc
cmpsl
jno
and
add
daa
pusha
add
fsubrp
xlat
cmpsb
add
mov
outsb
push
mov
inc
add
add
add
movb
mov
cwtl
add
lea
imul
dec
or
add
add
test
addr16
add
adc
add
loopne
or
rcll
add
mov
vcvtss2si
push
or
add
xor
add
pusha
add
test
jp
mov
dec
or
add
adc
mov
insl
or
cmp
add
add
movsl
jo
nop
add
in
addb
and
add
add
add
lods
movsb
add
add
cmp
cmp
lock
cmc
pop
adc
xor
sbb
add
add
ficoml
add
ljmp
push
add
fcompl
outsb
inc
add
ret
pop
ret
ret
sbb
adc
pop
loop
out
mov
cwtl
int
cli
or
add
mov
test
jbe
pop
ja
cmp
loop
hlt
add
add
orl
add
add
dec
mov
jb
xchg
add
popf
push
add
scas
clc
test
add
add
add
test
mov
add
pop
inc
ds
sbb
repz
push
add
in
fsubl
stc
xor
xor
pminub
iret
mov
adc
jle
cmp
addb
addb
add
jg
mov
add
rcrl
or
and
shl
les
xchg
add
inc
add
add
add
call
into
mov
aam
mov
addb
add
repz
pop
mov
jae
loopne
push
cmp
add
adc
data16
add
stos
or
add
jecxz
stos
inc
fists
add
add
add
add
mov
mov
out
xor
jmp
add
mov
pop
add
mov
add
xor
sub
push
xlat
mov
loope
sub
add
add
mov
and
xchg
add
add
add
and
mov
push
add
and
mov
xchg
jmp
and
mov
loope
sahf
xchg
add
adc
add
inc
ret
add
jecxz
enter
nop
add
add
lods
mov
add
fxch
mov
add
mov
cmp
pop
rolb
sub
cmc
cmp
daa
xor
add
add
push
mov
lret
xor
cli
test
add
mov
inc
dec
or
jmp
dec
jmp
cmp
enter
add
test
add
or
mov
mov
ds
push
add
add
push
test
jae
dec
ret
xchg
xchg
dec
aad
mov
add
pushf
mov
add
jl
arpl
add
push
inc
add
leave
sahf
pop
inc
cld
addb
mov
push
movl
xor
rcr
ret
push
cmp
movsb
add
add
repnz
sbb
add
add
mov
fistl
je
push
mov
in
cmp
rolb
xchg
add
mov
add
mov
add
mov
inc
add
mov
std
mov
mov
add
and
and
mov
add
add
inc
jne
and
enter
ja
and
in
mov
fsubrs
nop
add
sbb
ja
cltd
mov
daa
out
push
add
fwait
cmp
cli
data16
mov
cld
xchg
add
add
mov
dec
dec
movb
jg
push
loop
pop
xor
push
add
mov
out
out
stos
pop
inc
add
addb
lods
aaa
or
sbb
pop
nop
add
pop
or
add
fdivl
jg
cltd
insl
mov
jno
into
pushf
arpl
gs
lahf
sub
mov
or
jne
mov
add
mov
bound
mov
add
jnp
add
fdivs
add
mov
push
add
and
mov
mov
add
stos
out
mov
out
aam
pop
das
outsl
jmp
add
add
sbb
or
add
inc
add
mov
int3
dec
cmp
movsb
add
add
lcall
mov
pop
push
add
add
mov
sub
inc
add
jmp
pop
push
add
fisttps
lret
and
mov
cld
xor
pop
jecxz
inc
add
sbb
add
mov
enter
cmp
xor
add
in
jge
add
sti
cltd
sub
movsb
add
add
stos
or
add
lods
inc
in
add
lret
fnsave
push
or
push
add
adc
dec
loop
cmp
add
mov
into
clc
adc
rolb
xor
pop
fnstenv
mov
sti
or
push
mov
and
pop
add
mov
add
mov
aad
add
dec
mov
stc
jle
ja
add
add
movsl
iret
cmp
pop
jae
outsl
stos
testb
add
and
mov
pop
pushf
ret
add
loopne
xor
stos
push
add
add
inc
add
rcll
scas
paddusb
dec
mov
add
mov
daa
or
pop
sub
fidivrs
add
repnz
rolb
xchg
out
push
mov
and
orl
push
add
scas
fistpl
adc
and
fdivr
int
add
mov
enter
rolb
aaa
fucomip
movsb
add
mov
inc
add
sbb
xor
rolb
pusha
add
push
loop
push
add
pop
dec
inc
jecxz
inc
sbb
add
test
sub
inc
add
cwtl
pop
faddl
add
sbb
mov
clc
imul
jbe
std
mov
shll
in
cltd
push
xchg
lock
aas
inc
or
add
test
ret
in
stos
int
add
dec
aad
mov
cmp
aas
movsb
add
repnz
loop
out
jecxz
addb
call
add
xchg
pop
movb
add
js
mov
or
rolb
je
rolb
dec
addr16
push
sahf
jp
add
add
jl
add
push
cli
or
sub
or
add
stc
dec
imul
sub
add
repnz
mov
inc
lds
mov
xchg
xor
xor
push
lods
jne
or
insl
repz
adc
ret
add
add
add
mov
sbb
lods
dec
xchg
add
add
int3
gs
bound
mov
push
add
bound
mov
push
add
jbe
aam
jmp
mov
sub
loop
push
outsb
decb
aad
xlat
mov
add
imul
mov
cmp
into
xchg
mov
cmp
clc
pop
push
add
add
in
cmp
jmp
inc
add
add
pop
addb
add
cld
inc
add
data16
movsb
add
sbb
mov
add
push
movb
add
sti
ret
add
in
cmpsb
add
outsl
mov
xor
test
outsb
push
dec
and
addl
stos
add
mov
nop
add
mov
cmp
add
int
in
dec
sub
xchg
add
out
gs
mov
lcall
cltd
movsl
lcall
or
add
push
sbb
and
mov
cmpxchg
inc
add
adc
jns
xchg
xor
mov
fimull
mov
ljmp
pop
neg
call
addb
mov
outsl
call
add
andl
hlt
add
add
add
leave
filds
add
mov
movl
addb
mov
xchg
in
ds
add
popf
cs
sub
add
or
add
gs
inc
adc
adcl
inc
xchg
add
add
add
and
mov
iret
xchg
add
mov
jo
jo
std
cld
sub
out
dec
cmpsl
pop
sub
add
push
addr16
dec
mov
fdiv
add
cwtl
lods
cmp
add
jns
sub
fistps
in
add
add
hlt
add
add
and
imul
daa
jb
add
add
and
dec
push
add
les
or
sbb
mov
mov
mov
add
dec
cmp
adc
adc
push
xlat
mov
or
dec
inc
add
pop
xor
xchg
inc
add
push
add
mov
sbb
dec
mov
add
and
mov
push
add
push
add
movb
mov
mov
fdivrp
pushf
jo
or
addb
add
ljmp
add
loop
mov
in
dec
mov
out
rcr
add
test
nop
add
jle
xor
add
add
add
pop
inc
mov
mov
rolb
in
scas
jecxz
add
fsubr
mov
mov
fcmovu
loope
add
push
add
out
ss
add
mov
add
xchg
add
add
add
add
fisubrl
mov
jmp
cmp
add
jae
add
pop
jl
add
add
xchg
xlat
add
mov
aas
mov
add
add
add
test
sub
jmp
fnstenv
loop
daa
mov
mov
mov
dec
data16
sbb
sub
adc
fdivrl
add
mov
add
rolb
in
ror
pushl
sbb
add
add
push
add
xchg
test
xor
in
test
add
out
mov
out
rcll
sbb
stc
pop
aaa
lea
jno
addr16
shl
xor
mov
cmpsl
pushf
imul
sbb
sub
and
add
hlt
add
add
ja
add
cmp
add
lock
ficoml
add
loopne
adc
mov
dec
add
mov
aam
jp
add
add
add
inc
jmp
push
add
jns
aas
mul
add
xchg
add
aas
dec
jnp
add
ret
mov
sub
imul
add
subl
add
add
add
mov
add
filds
fisttpl
or
inc
add
mov
movl
add
dec
repz
add
mov
add
add
add
push
les
scas
xchg
add
cltd
mov
add
fsubs
add
add
imul
out
pop
cmpsb
add
or
cmp
xchg
add
add
mov
push
add
cwtl
xchg
in
jl
je
pop
ljmp
add
add
mov
pop
pop
mov
ret
mov
add
cli
cli
repnz
stos
stos
ret
call
xchg
add
icebp
int
mov
add
repz
add
outsl
sbb
add
and
jnp
add
outsl
addb
push
add
das
loope
ds
add
xchg
add
add
mov
inc
cltd
mov
jns
popf
push
add
and
fsub
in
xor
sarl
sub
add
or
inc
jno
sbb
push
pusha
add
or
test
adc
std
das
cmpsl
fcompl
scas
js
adc
movsl
dec
cmp
add
jge
add
sbb
iret
add
mov
jno
push
lcall
add
add
dec
pop
cwtl
push
add
add
add
cld
js
mov
xchg
add
add
add
add
add
xlat
add
fnstcw
mov
rolb
jae
add
mov
fidivl
cmp
mov
add
popa
data16
add
decb
mov
mov
iret
loope
sbb
pop
pop
js
pop
cmp
add
int
roll
ds
add
ret
pop
lods
hlt
add
add
int
add
push
add
push
add
fwait
dec
bound
mov
add
add
pop
jnp
sub
xor
inc
add
add
aam
xchg
outsb
mov
sub
add
movsb
add
add
add
mov
add
add
subl
add
cmp
add
cmpsl
pop
mov
mov
dec
fdivr
repz
mov
mov
imul
jmp
inc
mov
pop
cmp
sub
arpl
push
adc
popf
inc
add
add
movb
movsl
inc
inc
add
fsts
sub
jp
push
mov
sub
jge
add
adc
mov
add
out
jmp
mov
inc
push
add
jb
fdivs
add
inc
add
add
into
push
add
add
inc
out
jp
jp
fcoms
pop
rolb
add
add
jmp
add
mov
add
add
add
test
pop
insl
xor
cli
add
push
add
sbb
imul
loopne
xor
xor
call
gs
cli
xchg
arpl
jmp
jge
and
sub
mov
add
add
or
or
xchg
or
sbb
jne
or
or
add
lock
add
stc
out
aaa
testb
mull
push
add
addb
dec
or
les
pop
add
jbe
in
les
cmp
cmpl
pushf
add
mov
jecxz
push
jae
and
sahf
sub
xchg
add
mov
mov
add
xchg
xchg
adc
nop
add
popf
fdivr
dec
inc
out
popf
aad
aam
dec
lcall
out
lahf
cld
mov
js
mov
or
add
mov
pop
pop
adc
jmp
or
push
add
cltd
jae
repnz
in
imul
or
std
mov
das
iret
add
mov
jmp
mov
std
pop
dec
inc
add
addr16
xor
imul
push
adc
sub
pop
das
cmc
cs
push
movsb
add
cmp
add
mov
and
cmp
push
xor
popa
cmp
and
jnp
mov
add
adc
inc
ja
cmpsb
add
add
mov
movsl
int3
popf
push
add
frstor
add
add
jo
addb
add
mov
rcll
iret
notl
shll
js
add
cmp
xchg
pop
stos
cli
or
data16
add
push
add
mov
rolb
lret
stos
imul
jbe
ss
pop
pop
pushf
mov
add
add
lock
add
xchg
inc
add
lret
add
add
imul
in
add
es
add
cltd
jg
pop
push
das
sbb
es
add
ficompl
dec
pop
xchg
add
add
add
add
adc
jmp
inc
inc
add
xor
mov
out
dec
xlat
mov
or
xlat
inc
addr16
pop
push
sbb
add
ret
pushf
cmp
mov
jl
xor
cltd
scas
push
add
stos
dec
add
mov
ja
add
add
pop
jbe
aas
nop
add
jmp
fcompl
fidivs
add
testl
lret
pusha
add
jnp
mov
in
lcall
addb
sub
pop
sbb
add
push
jge
dec
jl
pop
and
scas
rcl
bound
mov
repnz
add
ret
cmp
mov
add
add
add
and
mov
ret
sbb
out
cmpsb
add
add
sbb
add
mov
jmp
add
mov
cltd
inc
push
jae
jmp
add
test
sub
inc
add
in
out
nop
add
insl
cmp
cs
into
dec
mov
add
pop
out
push
in
cmpsb
add
movb
add
dec
mov
add
or
in
outsb
fldenv
loope
add
sbb
mov
addb
add
mov
jne
inc
clc
rolb
jp
add
mov
sub
mov
add
lds
mov
add
pop
lret
jg
ss
inc
add
mov
mov
cld
pushf
pop
lret
mov
push
add
test
lods
movb
sbb
sbb
add
sbb
scas
fmulp
dec
sbb
sub
add
int
add
mov
add
add
xor
mov
add
pushf
mov
pop
pop
dec
icebp
call
das
outsl
xor
add
add
pop
loopne
bound
mov
cmc
push
add
xor
xor
sub
out
mov
add
mov
std
push
fisubrs
mov
add
add
xchg
rcl
add
add
mov
lcall
fnsave
addr16
jbe
push
out
inc
testb
ds
sbb
movsb
add
add
in
add
push
fadds
rcll
xchg
mov
add
into
sbb
testb
outsb
push
leave
sahf
pop
and
lea
daa
cmp
mov
outsl
test
add
xchg
add
dec
enter
aad
cs
add
inc
add
add
add
scas
adc
sbb
adc
add
int3
movsl
adc
stos
mov
inc
lahf
push
pop
pop
out
jno
rolb
xlat
or
or
add
inc
add
push
jns
fstps
mov
add
adc
inc
inc
xchg
int
pop
out
dec
icebp
rolb
xor
mov
push
add
iret
std
lcall
sahf
cltd
inc
add
push
cld
addr16
add
add
push
add
add
add
mov
int
add
xchg
ds
imul
add
cmp
stos
loope
mov
mov
and
mov
jg
add
loopne
and
outsb
push
add
jb
pop
xor
push
add
into
out
add
fdiv
inc
add
add
mov
add
pop
repz
or
cli
jecxz
lahf
popa
popf
sbb
and
fxch
push
sbb
lahf
jge
add
xor
icebp
xchg
add
clc
sbbl
add
cli
xchg
icebp
les
mov
sub
lock
add
cld
scas
push
cmp
add
add
mov
add
mov
push
cmp
sub
loope
xchg
mov
shr
pop
xchg
addb
cmp
in
xchg
add
inc
popf
sbb
or
stos
xor
fildll
add
inc
inc
add
mov
add
add
int
push
jnp
add
adc
out
gs
hlt
add
inc
sahf
sahf
addb
xlat
out
imul
add
rcl
add
int3
mov
les
dec
call
fistpl
inc
and
mov
adc
mov
jl
or
mov
dec
add
mov
add
add
add
ffreep
add
sub
lcall
mov
mov
pop
mov
push
or
mov
sbb
stos
push
js
aas
add
in
add
mov
xor
aam
jnp
in
push
add
movb
dec
je
fsubl
adc
dec
xor
cltd
jo
push
add
adc
add
cwtl
add
test
sub
mov
cld
cmp
push
add
add
aam
scas
imul
cmp
dec
mov
insl
fnstcw
fcoml
sbb
adc
jnp
add
cmp
jle
and
arpl
mov
jmp
mov
add
out
add
imul
xchg
add
adc
addr16
xchg
add
mov
jb
push
add
int
std
stos
mov
ja
and
pop
xchg
and
pop
test
in
mov
dec
inc
add
add
arpl
add
mov
add
imul
and
mov
cmp
mov
cltd
hlt
add
stos
push
add
lods
arpl
in
push
add
xchg
add
ja
sub
repz
add
xorl
xor
aas
sbb
lds
jo
js
mov
add
add
add
sti
inc
mov
push
mov
add
lds
or
pop
xchg
call
add
mov
std
ja
data16
sub
movsb
add
lock
mov
add
jmp
xchg
add
rolb
dec
mov
add
mov
mov
dec
jp
add
lock
and
mov
stos
insl
mov
fists
add
xchg
add
mov
push
and
in
mov
mov
sbb
mov
mov
add
data16
sbb
push
xchg
add
testb
mov
add
xchg
add
pop
mov
jae
rolb
xlat
testb
mov
mov
add
add
add
pushf
xlat
sub
cltd
push
rcl
sub
add
add
jp
sbb
mov
ret
add
movsl
shl
add
add
add
jnp
lock
add
addb
add
mov
cmp
or
adc
stos
jmp
cmpsl
lea
cli
lds
mov
aas
mov
push
into
and
mov
in
inc
add
aas
cmp
add
loopne
cmpsl
xchg
add
add
dec
fistpll
jno
inc
add
lock
call
mov
out
add
adc
cli
sub
mov
add
in
add
mov
xchg
gs
stc
xchg
add
aad
popa
jnp
sahf
neg
fwait
jmp
dec
inc
mov
add
pop
push
jb
fmull
setl
add
add
xchg
adc
mov
sub
rolb
fcmovne
aas
std
popl
leave
loopne
sub
and
popf
inc
add
adc
add
add
add
jbe
dec
adc
add
mov
repz
add
add
scas
shll
push
outsl
xlat
stos
push
add
hlt
add
int
add
add
mov
add
push
push
add
dec
xchg
stos
fs
ret
outsb
testb
dec
stos
jle
push
push
xor
dec
outsl
popf
mov
inc
add
xchg
sub
mov
movsb
add
dec
hlt
add
inc
add
add
add
popf
imul
test
lret
or
mov
loopne
cmpsl
mov
and
insl
push
mov
or
pop
pop
cmc
push
add
fdivs
ja
push
add
cmp
mov
stos
lret
ljmp
mov
add
add
adc
mov
add
add
ds
add
fimull
les
or
out
jns
sbb
lock
add
mov
inc
insb
inc
add
mov
fbld
adc
sbb
aam
js
mov
pushf
nop
add
adc
mov
std
mov
aam
pushf
cmp
add
add
call
pushf
mov
data16
sbbl
inc
and
test
cmc
adcl
mov
fisttpll
stos
mov
and
cmp
push
add
sbb
movsl
icebp
fucom
add
add
sub
mov
mov
loop
xchg
jns
push
jecxz
add
sub
cld
push
rolb
push
mov
ja
ret
dec
daa
mov
imul
out
sbb
add
lret
sub
dec
sahf
movsb
add
cmc
mov
add
push
loop
push
inc
add
xor
jo
cmc
faddl
sub
add
and
mov
ljmp
aas
dec
shl
cmp
add
in
mov
cltd
xchg
into
jnp
adc
pop
loope
push
sub
cmp
add
jno
dec
dec
xchg
push
add
ret
add
data16
mov
sub
add
ret
addb
or
or
test
xchg
add
pop
outsl
xor
jmp
add
add
jne
cli
mov
out
cmp
add
lods
pop
ficomps
pop
sub
movsb
add
add
add
ljmp
push
add
pop
adc
jecxz
fcomp
sub
add
add
addb
inc
add
sti
data16
add
into
and
ret
mov
lahf
pop
pop
into
ret
lcall
push
add
mov
mov
push
add
fs
add
add
cs
into
test
outsb
enter
add
add
add
push
add
ret
dec
cmpl
xchg
ljmp
add
mov
outsl
xchg
insb
scas
pop
push
pop
push
add
sti
idivl
into
stc
inc
add
mov
addr16
xchg
add
xchg
mov
dec
mov
jp
fidivl
sbb
add
add
pusha
add
cld
loop
add
dec
ds
add
out
xchg
cld
pop
pop
fcompp
xchg
icebp
cmpsl
mov
mov
cmp
push
add
push
add
sbb
jmp
sbb
dec
add
sar
int3
cs
inc
add
add
subl
dec
xor
adc
add
mov
add
add
das
pop
pop
or
jge
add
push
jecxz
daa
pop
fdivs
dec
popa
xchg
add
lds
add
add
add
add
jns
add
loopne
sub
rcll
mov
cmp
add
insb
jae
sti
ja
jle
add
or
push
sbb
mov
mov
popf
cmpsl
daa
dec
out
push
xor
test
movsb
add
inc
add
iret
inc
add
add
push
dec
shll
aaa
clc
hlt
add
inc
fmull
adc
xchg
cld
movsl
adc
dec
or
scas
repnz
add
add
add
xor
outsl
in
dec
rolb
movd
in
adc
scas
inc
add
add
add
jg
cmpsb
add
pop
cli
out
xor
rcrl
cmc
lods
mov
dec
pusha
add
repnz
push
mov
loopne
add
jp
bound
mov
addb
fdivs
cmp
imul
mov
sbb
dec
xor
pop
mov
dec
repz
xchg
xor
loope
push
add
les
repnz
dec
jnp
add
rorl
add
add
sub
cmpsb
add
xchg
jmp
lcall
imul
add
xchg
push
add
int
add
cltd
mov
inc
dec
je
out
add
jp
test
movb
sub
and
iret
in
pusha
add
imul
add
scas
rorl
add
clc
inc
add
adc
sbb
add
add
addb
add
js
jb
xchg
add
push
add
xor
test
nop
add
add
jbe
inc
movsb
add
out
dec
data16
out
cmc
test
mov
mov
add
add
pop
xor
add
cmp
xor
rolb
test
clc
stos
in
rolb
cmp
ds
aaa
and
mov
fsubrs
sbb
imul
xor
loop
ret
mov
in
push
add
push
cmpsl
and
mov
jle
sarl
dec
pusha
add
add
add
add
pop
pushf
incb
inc
rolb
jecxz
add
sub
bound
mov
mov
clc
repnz
jae
or
aam
xor
xor
push
decl
push
mov
xchg
ret
movb
inc
add
ror
fwait
cld
nop
jmp
pusha
mov
sub
add
jge
fwait
cld
nop
jmp
add
add
add
mov
loope
mov
clc
repnz
jae
dec
push
aaa
add
clc
repnz
jae
cmp
add
add
push
mov
xchg
ret
and
mov
add
add
rcrb
add
cld
nop
jmp
dec
add
push
add
add
add
clc
repnz
jae
rolb
xchg
add
fwait
cld
nop
jmp
add
sub
mov
xchg
ret
add
add
shrb
outsb
add
push
mov
xchg
ret
cmp
pop
call
clc
repnz
jae
mov
ret
push
fwait
cld
nop
jmp
lods
add
add
popa
aaa
add
add
clc
repnz
jae
mov
jne
xchg
add
rcrb
repnz
jae
add
add
mov
jno
clc
repnz
jae
pusha
add
push
jne
shll
jge
test
add
clc
repnz
jae
dec
sub
jmp
mov
xchg
ret
add
sti
imul
iret
pop
clc
repnz
jae
or
dec
add
mov
call
clc
repnz
jae
add
add
repnz
jae
movsl
lods
add
add
jmp
clc
repnz
jae
add
addr16
lods
add
enter
jae
sub
mov
xor
cmc
sbb
cld
nop
jmp
lock
cmp
movsl
testb
xor
fwait
cld
nop
jmp
add
add
aaa
fildl
pop
cmp
fwait
cld
nop
jmp
add
add
add
xchg
sub
xor
add
fwait
cld
nop
jmp
inc
movb
sar
nop
jae
pusha
data16
add
das
add
fwait
cld
nop
jmp
aas
add
dec
gs
jne
mov
push
mov
xchg
ret
data16
xchg
and
add
mov
push
mov
xchg
ret
mov
add
add
add
and
add
repnz
jae
jne
add
mov
clc
repnz
jae
add
fistl
xor
fistl
mov
xchg
ret
mov
add
insb
cmpl
fwait
cld
nop
jmp
mov
add
add
repnz
jae
add
jp,pn
test
add
nop
jae
sub
lods
inc
out
out
add
jmp
add
add
sub
add
add
ret
add
clc
repnz
jae
sub
add
mov
fwait
cld
nop
jmp
sti
xor
add
push
add
lock
and
fwait
cld
nop
jmp
shrb
pop
inc
mov
nop
jae
lods
mov
push
cltd
insb
lea
clc
repnz
jae
movsl
add
rolb
xchg
ss
add
iret
sub
fwait
cld
nop
jmp
sub
sub
aas
or
clc
repnz
jae
pop
dec
fs
and
push
clc
repnz
jae
add
pop
sub
sub
sub
jmp
add
addr16
add
cmp
push
clc
repnz
jae
add
repnz
add
add
jae
testb
pop
jne
push
add
cmpl
dec
sub
add
mov
jns
push
mov
xchg
ret
add
add
int
clc
repnz
jae
and
add
add
add
jp
clc
repnz
jae
mov
cltd
add
xchg
enter
sldt
clc
repnz
jae
add
adc
int
inc
add
cs
add
mov
cmp
push
mov
xchg
ret
lods
pop
add
xchg
dec
stos
push
mov
xchg
ret
sbb
add
dec
lea
push
mov
xchg
ret
add
pop
pusha
add
mov
mov
clc
repnz
jae
movsl
add
and
add
loope
add
nop
jae
mov
mov
add
mov
clc
repnz
jae
push
add
pop
das
lods
daa
daa
or
mov
xchg
ret
jp
add
sub
repnz
jae
add
out
add
inc
mov
jmp
add
cmp
add
add
add
adc
pushl
add
add
add
mov
add
cld
nop
jmp
dec
add
sbb
mov
add
mov
add
sub
push
mov
xchg
ret
xor
add
add
jnp
movsb
fwait
cld
nop
jmp
add
add
pop
add
add
add
add
repnz
jae
mov
rolb
sub
clc
repnz
jae
add
shl
add
xchg
clc
repnz
jae
push
cmp
add
nop
jae
add
popa
add
add
mov
push
mov
xchg
ret
add
rolb
add
xor
clc
repnz
jae
add
aas
add
out
popa
clc
repnz
jae
add
and
add
xchg
xor
test
repnz
jae
idivb
add
jp
add
fimull
jae
xor
xchg
add
add
cmp
in
loop
pushf
lds
xlat
add
and
or
repnz
jae
add
sub
out
movb
mov
xchg
ret
rolb
sub
popf
cmpl
fwait
cld
nop
jmp
inc
outsb
add
pop
lock
add
sar
repnz
jae
add
pusha
add
push
mov
xchg
ret
add
pop
out
mov
sbb
repnz
jae
add
inc
add
xor
fwait
cld
nop
jmp
xor
das
add
clc
repnz
jae
fldt
cltd
sub
repnz
jae
xchg
testb
add
js
clc
repnz
jae
add
add
jl
sahf
push
push
mov
xchg
ret
xchg
cltd
add
out
add
sub
repnz
jae
das
push
xor
add
add
repnz
jae
pusha
add
xor
add
lods
jmp
jg
clc
repnz
jae
add
rclb
in
add
sbb
add
pop
add
mov
clc
repnz
jae
add
jns
push
mov
xchg
ret
add
cmp
mov
ret
xor
add
push
mov
xchg
ret
xor
outsb
add
jo
push
add
loop
cld
nop
jmp
add
add
jl
shlb
add
clc
repnz
jae
add
inc
add
add
add
clc
repnz
jae
add
xor
lods
add
fwait
cld
nop
jmp
sbb
add
aas
add
add
cld
nop
jmp
aaa
cltd
xchg
dec
push
push
sti
add
movzwl
clc
repnz
jae
add
add
add
mov
clc
repnz
jae
add
repnz
jae
add
movsl
add
and
movsb
add
mov
xchg
ret
repnz
clc
sub
jle
adc
repnz
jae
jne
cs
add
pop
pop
push
mov
xchg
ret
add
clc
imul
or
add
sub
add
cltd
jne
clc
repnz
jae
add
add
add
shll
or
push
loopne
mov
xchg
ret
add
out
add
and
mov
mov
fwait
cld
nop
jmp
lods
sub
sub
mov
hlt
mov
add
outsb
cmc
cmp
add
testb
push
push
mov
xchg
ret
pop
add
xor
and
clc
repnz
jae
add
add
xchg
addr16
jne
fwait
cld
nop
jmp
xor
mov
fwait
cld
nop
jmp
outsb
outsb
pop
add
add
push
fwait
cld
nop
jmp
add
add
imul
lcall
stc
incl
add
xor
and
add
clc
clc
repnz
jae
sti
dec
add
pop
pop
push
mov
xchg
ret
add
push
add
popa
outsb
rolb
decl
nop
jmp
out
cltd
add
push
mov
xchg
ret
add
aas
add
add
fisttpl
nop
jae
add
sub
add
push
add
xor
fwait
cld
nop
jmp
add
and
jp
sub
repnz
jae
dec
rolb
add
das
mov
mov
push
mov
xchg
ret
outsb
out
cmp
add
add
push
mov
xchg
ret
push
add
add
mov
push
mov
xchg
ret
add
and
add
mov
clc
repnz
jae
dec
out
add
add
jnp
test
sbb
add
repnz
jae
add
add
jmp
add
out
sub
outsb
pusha
mov
push
clc
repnz
jae
sub
repnz
add
add
add
mov
dec
outsl
popa
fs
repnz
jae
add
mov
fs
repnz
jae
aaa
dec
add
fsubrs
push
mov
xchg
ret
movb
add
add
add
add
cs
add
add
inc
push
mov
xchg
ret
pop
add
out
lods
push
clc
repnz
jae
inc
out
add
dec
mov
fwait
cld
nop
jmp
add
add
pop
cmpl
fwait
cld
nop
jmp
add
xchg
rolb
das
fisttps
lds
xchg
ret
inc
sub
add
add
jae
nop
jae
add
add
add
nop
jae
rolb
add
add
fistpl
repnz
jae
cltd
add
xor
push
add
imul
nop
jae
add
add
cmp
push
clc
repnz
jae
add
add
xor
push
add
clc
repnz
jae
add
add
and
push
pop
popl
clc
repnz
jae
pusha
cltd
add
mov
out
mov
push
mov
xchg
ret
not
clc
imul
add
repnz
jae
test
sub
mov
jmp
sub
movsl
aas
imul
mov
xchg
ret
add
pop
pop
add
push
hlt
add
mov
fwait
cld
nop
jmp
pop
add
movsl
add
jns
clc
repnz
jae
sub
shrb
clc
repnz
jae
add
scas
mov
push
mov
xchg
ret
add
xchg
sub
mov
jmp
out
push
pop
pop
add
out
cmp
fwait
cld
nop
jmp
push
add
aam
xchg
add
add
inc
add
aad
dec
mov
clc
repnz
jae
sti
add
nop
jae
add
dec
sbb
add
add
mov
clc
repnz
jae
add
clc
repnz
jae
sub
movb
add
cmp
jmp
aaa
push
out
cltd
add
cmp
clc
repnz
jae
sub
or
mov
repnz
jae
fildl
add
mov
cld
stos
clc
repnz
jae
fcomi
add
cltd
jp
aas
mov
push
mov
xchg
ret
add
sub
les
push
mov
xchg
ret
add
add
mov
add
add
jmp
add
add
add
add
push
add
nop
jae
sti
add
rorb
fs
ljmp
add
push
add
div
dec
icebp
repnz
add
rcll
into
inc
add
pusha
sub
add
loop
clc
repnz
jae
cltd
add
add
je
clc
repnz
jae
pusha
add
push
nop
jmp
add
add
add
add
out
push
add
fwait
cld
nop
jmp
push
rorb
add
mov
fwait
cld
nop
jmp
xor
sub
shrb
clc
repnz
jae
add
jl
adc
movsb
add
add
arpl
cld
nop
jmp
sti
add
add
pop
mov
clc
repnz
jae
add
sub
add
push
add
cmp
jge
clc
repnz
jae
lock
sbb
outsb
pop
push
clc
repnz
jae
add
imul
add
sub
inc
add
imulb
pop
push
add
je
fwait
cld
nop
jmp
mov
push
fwait
cld
nop
jmp
inc
add
aas
aas
add
add
push
mov
xchg
ret
add
sti
push
add
enter
sub
repnz
jae
add
xor
add
dec
clc
dec
inc
clc
repnz
jae
rclb
mov
clc
repnz
jae
aas
pop
jp
mov
imul
jae
add
jp
inc
cmp
repnz
jae
add
add
bnd
clc
repnz
jae
test
mov
dec
movzwl
clc
repnz
jae
add
test
lock
push
clc
repnz
jae
sbb
jl
dec
inc
lock
adc
clc
repnz
jae
dec
add
add
inc
leave
add
clc
repnz
jae
add
out
mov
clc
repnz
jae
aas
mov
cltd
data16
sub
inc
jmp
add
jl
popa
xor
aas
mov
push
mov
xchg
ret
add
add
add
xchg
in
add
add
xor
push
jnp
movsb
clc
repnz
jae
add
sbb
pop
mov
cmp
clc
repnz
jae
dec
add
sub
or
repnz
jae
sti
add
add
add
clc
repnz
jae
add
sub
add
sub
cld
nop
jmp
lods
movb
add
mov
add
add
add
add
aaa
and
push
pop
fwait
cld
nop
jmp
inc
dec
popa
add
sti
add
loop
push
in
mov
push
mov
xchg
ret
add
push
sub
dec
roll
xchg
ret
lock
sbb
push
mov
aam
ficomps
pop
orl
orl
mov
testb
add
add
add
mov
add
repnz
jae
add
testl
jmp
outsb
add
add
enter
sub
repnz
jae
cmp
add
je
imul
jae
add
add
jecxz
add
push
mov
xchg
ret
and
add
mov
add
push
mov
xchg
ret
rcrb
xchg
jae
movsb
add
add
add
jne
push
mov
xchg
ret
add
dec
add
cmc
cs
clc
repnz
jae
add
add
sub
mov
inc
add
fs
lods
add
mov
test
cld
nop
jmp
jl
cltd
dec
mov
clc
repnz
jae
add
test
xchg
jbe
decl
cld
nop
jmp
add
popa
rolb
mov
pop
clc
repnz
jae
sub
add
add
clc
xchg
hlt
add
and
clc
repnz
jae
cltd
add
xor
inc
adc
push
mov
xchg
ret
add
popa
lods
sub
test
mov
add
adc
add
pop
jp
mov
clc
repnz
jae
add
xchg
add
pop
clc
repnz
jae
test
aaa
add
add
add
mov
repnz
jae
and
add
repz
mov
cmp
ret
add
test
add
clc
repnz
jae
aaa
push
add
sbb
xabort
nop
jae
inc
xor
add
aas
add
mov
repnz
jae
add
pop
add
push
add
add
repnz
jae
repnz
test
push
clc
repnz
jae
xchg
fs
add
add
repnz
jae
add
add
add
test
call
clc
repnz
jae
xor
fs
cmc
and
fwait
push
clc
repnz
jae
add
inc
sub
add
nop
jae
pusha
add
imul
mov
test
add
fadds
xchg
xchg
lods
sbb
add
adc
clc
push
push
mov
xchg
ret
add
mov
sub
pusha
mov
repnz
jae
testb
pop
dec
dec
fistpl
repnz
jae
add
xchg
fildl
add
mov
repnz
jae
add
add
add
aaa
push
clc
repnz
jae
add
xor
out
add
mov
std
testl
fwait
cld
nop
jmp
xor
add
mov
add
push
mov
xchg
ret
add
add
dec
insb
sub
clc
repnz
jae
add
outsl
mov
clc
repnz
jae
movb
add
add
add
xor
inc
add
push
add
add
sub
add
add
clc
repnz
jae
jp
add
add
add
push
fwait
cld
nop
jmp
xchg
add
inc
out
sti
add
nop
jae
inc
add
push
clc
repnz
jae
mov
inc
mov
jg
clc
repnz
jae
add
and
push
fimull
mov
adc
repnz
jae
pop
add
add
movzwl
clc
repnz
jae
add
add
add
inc
add
add
clc
repnz
jae
popa
xor
outsb
inc
mov
jne
clc
repnz
jae
add
adc
add
clc
repnz
jae
xchg
add
add
add
popa
add
repnz
jae
pop
add
push
mov
cmp
repnz
jae
aas
add
add
add
and
mov
cld
nop
jmp
inc
mov
divb
jp
jbe
clc
repnz
jae
xor
dec
xor
mov
clc
repnz
jae
add
xor
add
into
roll
xchg
ret
inc
mov
add
cmp
mov
clc
repnz
jae
add
test
xchg
sbb
jmp
pop
add
sub
sub
cmc
incl
add
xor
add
dec
pop
mov
clc
repnz
jae
imul
test
fwait
cld
nop
jmp
add
lods
add
sti
add
loop
sub
nop
jae
or
add
adc
repnz
jae
add
xor
loope
add
or
mov
xchg
ret
push
add
inc
addr16
icebp
mov
add
mov
clc
repnz
jae
pop
add
add
inc
pop
cmpsb
add
cld
nop
jmp
add
add
jl
jne
add
mov
clc
repnz
jae
add
cmpsl
out
movzwl
clc
repnz
jae
dec
and
mov
add
in
inc
add
data16
xor
mov
xor
cmpl
addl
incl
add
dec
mov
fwait
cld
nop
jmp
pop
add
or
lahf
jne
clc
repnz
jae
add
add
nop
jae
sti
imul
addr16
add
add
fwait
cld
nop
jmp
add
lods
dec
push
add
mov
add
cmc
incl
add
negb
pop
repz
clc
repnz
jae
add
sbb
add
clc
repnz
jae
xor
add
rolb
jmp
ljmp
das
add
add
rolb
enter
nop
jmp
add
add
sub
add
add
inc
stc
clc
repnz
jae
popa
mov
mov
jno
mov
push
mov
xchg
ret
imul
mov
fwait
cld
nop
jmp
data16
add
add
and
add
repnz
jae
imul
clc
repnz
jae
add
add
out
pop
add
cmp
test
repnz
jae
sub
out
add
repnz
jae
add
cltd
sub
in
push
mov
xchg
ret
imul
add
push
clc
repnz
jae
add
add
sub
das
mov
clc
repnz
jae
add
push
sub
lea
clc
repnz
jae
data16
add
test
inc
add
clc
jp
add
lea
fwait
cld
nop
jmp
cs
add
data16
add
mov
clc
repnz
jae
add
sbb
or
push
add
pop
imul
add
nop
jae
add
add
dec
cmp
repnz
jae
sti
add
add
dec
push
push
mov
xchg
ret
aaa
add
xchg
dec
add
shll
fadds
xchg
ret
xchg
add
push
add
add
mov
repnz
jae
clc
out
sub
test
add
clc
repnz
jae
movsl
outsb
jp
add
xchg
call
nop
jae
add
mov
inc
bound
mov
pop
or
repnz
jae
add
movsl
add
test
add
fwait
cld
nop
jmp
add
xchg
xor
dec
and
clc
repnz
jae
add
sub
add
add
push
mov
xchg
ret
add
dec
push
aas
dec
add
push
mov
xchg
ret
fs
mov
add
and
repnz
jae
popa
xchg
add
inc
sub
sbb
add
clc
repnz
jae
add
add
ret
mov
clc
repnz
jae
out
pop
push
push
mov
xchg
ret
data16
add
movsl
xchg
jg
push
mov
xchg
ret
xchg
add
add
jl
ja
push
clc
repnz
jae
xchg
jl
jl
mov
dec
mov
add
dec
sub
cwtl
out
inc
add
add
das
clc
or
or
clc
repnz
jae
add
add
arpl
add
popa
clc
repnz
jae
add
dec
pusha
mov
loopne
pop
shr
push
mov
xchg
ret
sub
sub
fwait
cld
nop
jmp
test
aaa
add
sub
shlb
add
add
nop
jae
add
lock
xor
mov
push
mov
xchg
ret
or
out
add
movsb
fwait
cld
nop
jmp
fs
add
sub
clc
repnz
jae
add
add
push
add
dec
inc
push
mov
xchg
ret
pop
mov
mulb
ret
clc
repnz
jae
add
lods
movsl
push
pop
jl
pop
push
clc
repnz
jae
sbb
popa
sarb
cmp
roll
add
mov
clc
repnz
jae
enter
add
mov
repnz
jae
cltd
inc
sub
sti
add
stc
mov
fwait
cld
nop
jmp
dec
add
cmp
mov
nop
jae
add
add
add
repnz
jae
add
add
mov
push
push
mov
xchg
ret
mov
add
add
lret
mov
xchg
ret
pusha
out
pop
add
dec
lahf
mov
clc
repnz
jae
pop
add
add
push
or
repnz
jae
add
sub
add
clc
repnz
jae
movb
pusha
add
push
clc
repnz
jae
mov
add
add
add
xor
add
clc
repnz
jae
sub
adc
repnz
jae
add
xchg
inc
testb
ret
fcoms
mov
xchg
ret
mov
clc
out
sub
mov
xchg
ret
add
add
imul
nop
jmp
add
add
add
add
pushl
push
mov
xchg
ret
mov
jl
add
out
inc
add
add
jne
xor
pop
push
push
mov
xchg
ret
xor
add
add
add
add
dec
and
clc
repnz
jae
or
push
sbb
repnz
clc
repnz
jae
testb
xor
ret
mov
xchg
ret
add
out
dec
add
fwait
cld
nop
jmp
dec
mov
add
push
push
mov
xchg
ret
xor
jp
add
daa
push
shr
fwait
cld
nop
jmp
jl
add
loopne
clc
repnz
jae
testb
add
mov
stos
lock
add
add
add
sub
lods
clc
repnz
jae
aaa
add
xor
pusha
inc
add
movsb
add
std
clc
repnz
jae
add
sub
sbb
add
repnz
jae
data16
mov
push
clc
repnz
jae
add
das
add
add
repnz
jae
add
dec
add
call
repnz
jae
add
add
das
dec
inc
frstor
xor
add
clc
repnz
jae
out
sarl
cmpl
fwait
cld
nop
jmp
jl
and
je
clc
repnz
jae
sub
dec
imul
subl
inc
cmp
nop
jae
add
imul
fwait
cld
nop
jmp
testb
and
add
pop
mov
clc
repnz
jae
add
xor
add
out
add
push
mov
xchg
ret
cmp
test
fwait
cld
nop
jmp
add
push
rcl
add
daa
push
add
repnz
jae
add
add
sub
clc
repnz
jae
add
add
xor
add
mov
mov
clc
repnz
jae
add
test
jl
clc
repnz
jae
sub
jl
aas
add
rcrl
movb
mov
xchg
ret
add
mov
push
mov
xchg
ret
jp
cltd
add
loop
push
mov
xchg
ret
out
add
add
add
jae
jl
lock
and
in
call
clc
repnz
jae
testb
xor
push
clc
repnz
jae
push
das
dec
inc
add
add
sbb
in
arpl
mov
add
xchg
sub
cmpsl
mov
popf
fwait
cld
nop
jmp
add
dec
dec
dec
jne
clc
repnz
jae
add
add
sub
push
mov
xchg
ret
add
add
add
pop
and
fwait
cld
nop
jmp
mov
cmp
dec
add
push
mov
xchg
ret
add
add
add
add
add
sar
nop
jae
add
sbb
aas
add
push
mov
clc
repnz
jae
add
add
js
push
mov
xchg
ret
add
addr16
sub
ds
clc
repnz
jae
aas
clc
pop
xchg
popa
xor
cld
push
mov
xchg
ret
inc
add
add
mov
clc
repnz
jae
add
add
pop
fwait
cld
nop
jmp
sti
dec
add
movb
add
out
mov
push
mov
xchg
ret
add
clc
xor
or
jmp
repnz
jae
mov
add
and
mov
add
push
mov
xchg
ret
add
sub
add
inc
inc
add
clc
repnz
jae
add
add
out
pop
add
jmp
mov
add
add
enter
jmp
data16
cltd
test
add
stc
call
clc
repnz
jae
add
xor
dec
ss
clc
repnz
jae
aas
idivb
add
clc
repnz
jae
xor
add
add
push
clc
repnz
jae
add
test
ret
add
mov
clc
repnz
jae
inc
dec
sub
sub
mov
clc
repnz
jae
add
add
test
add
fwait
cld
nop
jmp
mov
add
mov
push
mov
xchg
ret
jp
out
dec
add
clc
repnz
jae
mov
and
mov
cmp
aaa
loopne
clc
repnz
jae
add
aas
in
rol
push
mov
xchg
ret
xor
add
inc
sub
repnz
jae
add
dec
add
fistl
mov
xchg
ret
add
add
push
out
cmpsb
add
clc
repnz
jae
add
or
test
mov
clc
repnz
jae
xor
and
stc
mov
clc
repnz
jae
add
add
outsb
stos
pop
push
mov
xchg
ret
add
add
fstpt
pop
clc
repnz
jae
add
sarb
cmp
fwait
cld
nop
jmp
movsl
outsb
testb
imul
incl
dec
pop
pusha
dec
add
cmp
rolb
repnz
jae
add
add
add
xchg
add
enter
nop
jae
mov
lock
mov
fwait
cld
nop
jmp
add
sub
add
and
clc
repnz
jae
add
mov
nop
jmp
aas
sub
add
sbb
jo
fwait
cld
nop
jmp
add
popa
push
add
add
iret
cmp
fwait
cld
nop
jmp
dec
add
xchg
mov
mov
add
clc
repnz
jae
mov
sarb
or
fwait
cld
nop
jmp
dec
addr16
dec
clc
repnz
jae
xchg
or
inc
add
add
mov
clc
repnz
jae
das
inc
add
and
inc
add
in
clc
repnz
jae
and
pusha
dec
push
mov
push
inc
add
add
add
add
adc
sub
clc
repnz
jae
inc
xor
aas
inc
add
add
imul
clc
repnz
jae
pop
fs
xchg
add
add
push
mov
xchg
ret
push
jl
add
add
mov
add
mov
clc
repnz
jae
imul
push
mov
xchg
ret
lods
out
add
sub
aam
insl
push
push
mov
xchg
ret
sub
add
fwait
cld
nop
jmp
add
dec
nop
add
ret
inc
cs
add
add
add
add
add
jl
clc
repnz
jae
xor
add
mov
xchg
ret
add
add
movb
mov
clc
repnz
jae
add
das
sub
and
add
shrb
shrb
add
add
cmpsb
in
add
add
add
sti
or
fwait
cld
nop
jmp
add
add
lods
add
xchg
inc
dec
movswl
clc
repnz
jae
mov
repnz
leave
add
clc
repnz
jae
clc
clc
out
add
dec
push
push
mov
xchg
ret
mov
add
insl
mov
push
mov
xchg
ret
add
add
add
jne
clc
repnz
jae
add
jne
xor
test
jmp
cmp
aas
add
xor
add
jae
imulb
add
jmp
fdivr
clc
repnz
jae
sub
add
add
mov
clc
repnz
jae
add
ljmp
jae
add
mov
xabort
movzwl
clc
repnz
jae
add
aas
dec
add
clc
repnz
jae
xor
add
repnz
fiadds
xchg
ret
sti
jp
imul
repnz
jae
add
sub
add
nop
jmp
add
sub
xor
test
clc
repnz
jae
add
add
push
clc
repnz
jae
repnz
add
add
ljmp
enter
add
repnz
add
rcrb
fdivrp
incl
add
jp
mov
lods
add
clc
repnz
jae
sub
add
add
sub
repnz
jae
pop
inc
lods
add
pop
adc
pushl
push
mov
xchg
ret
mov
add
add
outsl
loopne
mov
xchg
ret
add
popa
xchg
xchg
lds
add
lock
mov
xchg
ret
jp
add
and
test
add
add
decl
jmp
dec
add
cmp
add
pop
xor
mov
clc
repnz
jae
pop
add
add
clc
clc
repnz
jae
add
xor
mov
clc
repnz
jae
cs
dec
add
or
les
clc
repnz
jae
jne
add
or
nop
jae
test
add
add
dec
and
mov
add
clc
repnz
jae
add
pusha
add
std
movzwl
clc
repnz
jae
add
add
nop
jae
clc
add
add
add
and
jle
push
mov
xchg
ret
add
push
mov
mov
clc
repnz
jae
imul
add
pusha
clc
repnz
jae
add
mov
das
inc
add
sbb
test
cld
clc
repnz
jae
sub
dec
add
push
mov
xchg
ret
add
add
cs
push
push
mov
xchg
ret
movb
lock
add
repnz
jae
addr16
sub
add
repnz
push
test
mov
clc
repnz
jae
mov
dec
inc
push
add
push
clc
repnz
jae
push
add
outsl
push
push
mov
xchg
ret
add
add
add
push
mov
cs
clc
repnz
jae
mov
add
pushf
mov
fwait
cld
nop
jmp
add
add
add
or
mov
xchg
ret
lock
inc
jb
fwait
cld
nop
jmp
add
jp
add
popa
clc
repnz
jae
xor
das
jl
add
fs
cmp
fwait
cld
nop
jmp
add
add
outsb
aam
sub
xor
inc
add
sti
add
shrb
add
movb
mov
clc
repnz
jae
xchg
add
add
in
mov
push
mov
xchg
ret
aas
add
inc
aas
fdiv
stos
clc
repnz
jae
add
add
les
jmp
jne
clc
repnz
jae
lods
add
aas
imul
clc
repnz
jae
inc
aas
add
push
xor
mov
add
push
mov
xchg
ret
xchg
xor
and
push
mov
xchg
ret
pusha
add
pop
aas
test
test
clc
repnz
jae
imulb
dec
push
push
mov
xchg
ret
sub
pop
enter
mov
clc
repnz
jae
repnz
data16
jge
clc
repnz
jae
add
add
out
add
clc
repnz
jae
cmp
add
add
fdivrp
pushl
add
add
lock
mov
add
fwait
cld
nop
jmp
pop
add
add
push
add
or
jmp
clc
repnz
jae
enter
dec
es
clc
repnz
jae
loopne
fldenv
xor
add
clc
repnz
jae
pop
sti
mov
stc
lock
incl
push
add
pop
out
add
cmp
repnz
jae
add
add
out
xor
das
mov
clc
repnz
jae
cmp
add
enter
nop
jae
sti
fs
rolb
jp
sbb
nop
jae
xchg
add
cs
and
mov
clc
repnz
jae
add
lods
pusha
fistpl
inc
ficoml
mov
xchg
ret
add
add
add
push
mov
xchg
ret
xchg
add
add
xchg
cmp
add
repnz
jae
add
mov
xchg
sbb
incb
dec
add
add
inc
jge
cmpsb
add
add
mov
dec
fwait
cld
nop
jmp
push
and
dec
movb
cmp
mov
clc
repnz
jae
repnz
jl
test
mov
sar
nop
jae
pop
test
add
add
add
push
mov
xchg
ret
add
add
add
inc
clc
repnz
jae
add
and
push
xor
lcall
aam
incl
add
add
and
push
mov
xchg
ret
shrb
add
aam
in
in
mov
fwait
cld
nop
jmp
add
data16
aam
add
inc
add
stos
inc
push
mov
xchg
ret
add
add
add
daa
aas
mov
clc
repnz
jae
popa
pusha
out
xchg
clc
repnz
jae
out
add
out
add
or
sbb
lcall
call
sahf
pushl
push
mov
xchg
ret
mov
add
popa
add
adc
out
out
clc
clc
repnz
jae
add
rorb
fs
je
clc
repnz
jae
push
jl
int
inc
adc
repnz
jae
add
sub
add
cmpb
add
repnz
jae
add
rolb
mov
mov
clc
repnz
jae
add
add
or
repnz
jae
add
aas
das
fimull
test
lcall
add
add
mov
clc
repnz
jae
add
add
pop
out
jne
clc
repnz
jae
popa
add
insl
jmp
add
add
aaa
xchg
add
dec
xor
and
clc
repnz
jae
lock
add
inc
dec
mov
clc
repnz
jae
jl
add
shlb
addr16
test
das
add
clc
repnz
jae
repnz
daa
mov
mov
add
sub
add
repnz
jae
add
add
add
nop
jmp
aaa
add
aaa
xor
lock
stos
mov
clc
repnz
jae
add
add
into
add
push
mov
xchg
ret
aas
add
sub
popa
add
mov
xchg
ret
fildl
add
mov
add
clc
repnz
jae
add
lods
scas
mov
push
mov
xchg
ret
mov
add
push
clc
repnz
jae
outsb
add
je
lods
push
fwait
cld
nop
jmp
shlb
sub
lock
clc
repnz
jae
add
sub
mov
xor
clc
repnz
jae
dec
add
movsl
or
mov
clc
repnz
jae
mov
clc
repnz
jae
sub
add
enter
mov
clc
repnz
jae
pop
add
add
add
clc
repnz
jae
add
add
pop
out
call
clc
repnz
jae
dec
sub
stos
clc
repnz
jae
xor
add
mov
add
push
mov
xchg
ret
dec
add
add
xchg
add
jae
lods
cltd
add
lods
add
add
test
clc
repnz
jae
add
add
repnz
jae
add
add
inc
add
imul
clc
repnz
jae
enter
and
add
sub
fwait
cld
nop
jmp
sti
lods
mov
mov
mov
xchg
ret
inc
add
add
test
add
add
cli
ljmp
fdiv
rclb
jle
inc
add
add
add
add
xchg
sar
clc
repnz
jae
sub
add
inc
add
decl
add
sub
add
aas
mov
mov
lods
imul
clc
repnz
jae
add
lock
push
clc
repnz
jae
add
mov
add
and
mov
add
jl
fwait
cld
nop
jmp
xor
mov
sub
in
mov
clc
repnz
jae
cltd
add
add
fidivs
add
clc
repnz
jae
add
test
add
inc
add
popa
add
repnz
jae
add
and
rolb
pushf
div
clc
repnz
jae
dec
addr16
repnz
jb,pt
fwait
cld
nop
jmp
out
push
imul
mov
xchg
ret
add
aas
data16
dec
adc
mov
xchg
ret
lock
clc
repnz
jae
mov
add
add
aaa
add
add
clc
repnz
jae
das
add
push
mov
in
fiaddl
cltd
push
cltd
add
or
sbb
mov
repnz
addb
into
and
jl
add
sarl
aam
jge
add
inc
sub
imul
test
xorl
add
lahf
frstor
cmp
pop
mov
lret
out
int
mov
sti
test
cmp
mov
xor
outsl
mov
add
mov
and
mov
add
scas
insl
mov
xor
dec
data16
add
xchg
add
sbb
add
leave
cwtl
fisttps
sub
filds
xchg
mov
sub
add
fwait
test
and
adcl
pop
and
nop
add
cs
or
inc
add
add
int3
cmp
movb
add
cltd
mov
stos
jno
or
outsl
sub
incl
mov
addl
lea
mov
add
aam
cld
les
fwait
push
sub
xor
add
fisubs
repz
mov
push
add
pop
dec
icebp
in
add
cwtl
add
cwtl
xchg
add
add
add
add
imul
mov
add
add
jb
pop
mov
cmp
pushf
push
std
lret
or
fdivrs
add
adc
scas
cmp
mov
mov
mov
add
mov
inc
movb
or
add
mov
mov
push
add
add
add
add
fwait
jno
test
xchg
add
sub
adc
mov
add
cmp
ljmp
add
sbb
and
fildll
add
add
cmp
xchg
cmp
xchg
cs
js
dec
aad
add
add
add
sti
addb
add
add
sub
add
add
add
test
jne
call
mov
movsb
add
scas
sbb
leave
cli
xchg
leave
in
xchg
add
add
aaa
pop
into
movsb
add
xchg
addb
dec
add
mov
and
add
add
add
je
add
mov
lods
inc
add
push
sbb
add
add
mov
adc
shll
add
add
cmpsb
add
aam
bndldx
sahf
fdivrl
mov
sub
cltd
addr16
add
test
add
add
sbb
add
je
aad
rolb
push
jbe
insl
lods
hlt
add
imul
sub
add
loop
sub
push
lods
xlat
and
jl
shr
lds
stc
dec
inc
outsb
imul
xchg
add
jle
add
test
dec
call
mov
mov
mov
rcrl
adc
roll
fists
cli
rolb
cmc
in
and
out
in
xor
mov
or
sub
cmp
or
loope
add
inc
add
incl
add
mov
mov
add
cmc
ja
add
mov
scas
xor
rolb
movb
add
jge
ljmp
nop
add
ret
addr16
add
lcall
mov
add
xor
cltd
inc
lods
mov
adc
fistpl
sbb
add
add
pop
inc
add
add
mov
mov
cmpsl
nop
add
cld
aam
xchg
mov
xchg
cmc
fucomp
rolb
add
add
add
in
adc
add
sub
imul
add
xor
add
mov
stos
in
mov
xor
notl
mov
pusha
add
imul
xor
out
jg
add
jl
add
fisubs
jecxz
shll
mov
les
mov
add
add
mov
mov
xchg
fisubrs
and
adc
rcll
scas
cwtl
cmp
adc
add
ret
add
add
add
jmp
add
xchg
add
add
in
push
add
add
add
pushl
sbb
gs
lret
jno
add
cmpsl
fdiv
add
outsb
stos
add
sbb
popa
push
add
fwait
jae
mov
dec
add
jne
sbb
fwait
push
xor
pop
xchg
aad
stos
mov
mov
add
add
paddusb
stc
push
add
add
mov
testb
into
rcll
jg
or
cmp
inc
add
pop
scas
mov
je
jbe
xlat
dec
imul
bound
mov
lods
adc
adc
sub
or
lea
cmc
dec
insb
adc
push
add
add
add
lock
mov
jne
mov
and
mov
mov
mov
or
add
push
add
add
pusha
add
add
sub
in
sbb
add
sbb
cmp
std
add
jmp
aad
inc
add
shll
dec
loopne
int3
cmpsl
daa
arpl
dec
test
mov
aad
jmp
cmp
sub
hlt
add
addr16
add
inc
add
jg
add
test
into
lcall
in
xchg
cmp
jmp
xor
sti
fisubl
inc
mov
xchg
mov
sbb
xorl
mov
scas
xlat
add
stos
dec
pop
cmp
cmc
add
ja
adc
fstpt
add
mov
sbb
or
sub
inc
add
add
jmp
nop
add
jle
add
loope
add
add
aam
xchg
xchg
cmp
ret
cmc
inc
add
mov
and
mov
data16
add
mov
fcompl
add
fcmove
push
add
add
add
pop
lds
movsl
or
add
int3
add
and
push
cwtl
jnp
jg
adc
aas
xchg
mov
mov
clc
jmp
mov
mov
addb
addb
mov
add
mov
inc
or
sbb
pop
sbb
gs
add
push
in
push
into
lret
outsb
pop
inc
add
int3
pop
mov
ret
add
add
add
add
aad
daa
cmp
ret
add
adc
push
add
pusha
add
icebp
sbb
lret
loop
mov
pop
lahf
xchg
cmpsl
jo
cltd
mov
xlat
xlat
into
gs
call
add
add
jns
add
out
and
cld
pop
popa
sub
xchg
push
xchg
movb
dec
mov
pop
inc
jmp
add
stos
pop
mov
mov
js
bound
mov
add
mov
adc
add
add
inc
mov
jmp
cmpsb
add
mov
pop
insb
lock
inc
add
jno
rolb
ret
test
rcrl
addr16
add
testb
fldcw
sub
or
out
jg
add
add
dec
add
scas
jg
adc
aad
add
dec
adc
movsl
mov
add
add
cmpsb
add
enter
add
les
and
mov
rolb
out
pop
sbb
lods
mov
push
fcom
add
test
pop
cmp
add
xchg
mov
dec
sub
lods
lock
bound
mov
add
add
sbb
pop
xor
dec
add
mov
mov
sti
sbb
push
add
mov
mov
xchg
add
pop
and
add
mov
add
imul
add
add
add
mov
add
cltd
push
add
int
add
mov
test
out
cmpsb
add
add
and
mov
imul
jmp
add
test
fimuls
loopne
mov
rolb
mov
and
push
add
add
addb
pop
add
cmpsb
add
add
or
jns
add
insl
sub
adc
add
outsb
loope
add
or
add
jns
sub
add
add
add
pusha
add
mov
add
test
adc
add
mov
mov
add
out
ss
add
inc
add
add
mov
add
mov
add
add
sahf
aam
jb
cmc
arpl
cmp
fcoml
mov
xor
movb
mov
jg
add
into
shrl
mov
add
mov
add
movb
in
push
jl
movb
add
add
add
in
sti
addb
mov
movb
dec
push
add
inc
inc
add
pop
adc
add
mov
add
add
add
pop
mov
adc
adc
add
add
mov
inc
dec
dec
add
insl
sub
push
adc
xor
scas
add
xchg
mov
add
testb
adc
fadd
sbb
lcall
xor
fcomi
add
add
movsb
add
movsl
js
test
pop
jecxz
add
add
ret
sarl
sub
in
test
mov
add
lea
mov
push
hlt
add
mov
enter
pusha
add
add
std
mov
jno
xchg
jno
shl
add
out
mov
ja
shll
repnz
add
cmp
add
addb
push
add
dec
xchg
sbb
jle
mov
add
xchg
pop
push
add
add
sub
les
rolb
mov
scas
lock
cmp
mov
and
pushf
clc
mov
mov
mov
in
hlt
add
mov
add
and
mov
iret
out
loopne
aas
testb
add
add
add
mov
mov
xchg
add
add
loopne
ljmp
mov
testb
sarl
sbb
xor
test
add
adc
xor
sbb
add
movb
mov
dec
rcll
add
jno
jb
sub
sub
add
xor
sub
jle
mov
add
inc
add
test
add
add
add
add
clc
dec
repnz
add
in
popa
sub
mov
add
outsl
jo
rolb
add
mov
xchg
pop
testb
stos
fldenv
add
cmp
movb
add
add
jl
or
mov
add
dec
cld
and
mov
ret
add
nop
add
ret
mov
test
ficoml
cmp
mov
shll
push
add
ret
leave
mov
aad
aad
push
add
inc
add
stc
inc
add
cmc
push
add
add
xor
mov
mov
icebp
fisttpll
sbb
inc
jbe
mov
add
add
mov
popa
mov
int3
ja
and
mov
insb
aas
in
sbb
push
add
xor
jge
pop
out
sbb
add
cmc
sbb
mov
xchg
add
sbb
das
stos
xchg
nop
add
xchg
jge
outsb
jns
jg
out
and
mov
add
insl
insl
mov
add
lds
pushf
cmpsl
and
mov
push
add
and
add
add
add
xchg
popf
imul
lahf
lret
in
lods
xlat
sti
adc
cmpl
mov
in
icebp
loopne
mov
aad
add
cmp
add
jae
scas
cmp
lret
lret
fs
mov
mov
js
lret
std
test
shll
loope
pop
jl
jge
pop
lret
addb
test
add
add
inc
add
mov
add
add
sbb
add
pushf
or
xchg
add
or
and
imul
mov
xchg
lret
call
add
xor
mov
pop
leave
sarl
mov
out
add
xchg
add
nop
add
and
add
js
xchg
add
lgdtl
add
pushf
inc
cmp
add
or
jno
jmp
faddl
add
or
add
xor
addr16
pop
push
scas
lcall
fwait
pop
ficoms
add
pop
mov
testb
je
mov
sub
xor
push
mov
mov
mov
sub
sbb
jbe
cmp
sbb
cmpsb
add
jp
sbb
xor
stos
mov
add
fdivs
lods
movsl
fidivs
add
add
add
test
mov
data16
add
imul
add
add
dec
inc
add
and
mov
push
mov
add
loopne
lods
inc
add
addb
cld
xchg
xchg
pop
push
and
mov
dec
adc
sbb
add
xchg
add
inc
inc
add
pop
mov
stc
xor
push
inc
add
inc
push
add
pop
push
add
add
dec
lfs
into
movsb
add
pop
and
mov
or
add
in
aad
add
add
pushf
mov
add
jle
add
and
lds
jmp
lods
xlat
mov
add
add
jle
rolb
stos
test
call
cltd
mov
jne
and
pop
mov
add
cld
jmp
xor
dec
test
adc
xchg
lea
mov
jmp
into
sahf
jo
mov
jbe
push
mov
nop
add
pop
inc
add
out
add
sbb
ret
fwait
xor
or
add
or
aam
icebp
adc
xchg
adc
mov
sbb
add
pop
dec
les
cmp
jbe
or
add
ljmp
mov
add
lcall
aad
add
mov
inc
add
mov
mov
sub
popf
fidivrl
mov
jo
into
int
mov
add
add
mov
test
xchg
xor
popa
in
push
in
add
add
add
pop
pushf
sti
and
aad
add
jnp
loopne
insb
pushf
mov
inc
mov
in
pop
mov
jp
cs
pop
xchg
add
imul
aam
mov
add
add
mov
add
dec
addb
mov
gs
out
xchg
xchg
add
add
mov
mov
fdivl
jo
aas
and
mov
mov
add
mov
mov
jmp
xchg
lods
movb
add
cmp
xchg
cwtl
jns
rolb
fistl
add
add
pop
imul
aas
rcll
add
add
mov
add
inc
add
pop
add
mov
or
test
in
xor
cli
cmp
push
add
mov
add
add
xor
mov
insl
mov
pop
out
xchg
stc
mov
add
add
lock
loop
sub
add
add
sub
push
add
or
and
jno
enter
sarl
lock
outsl
push
lods
mov
sarl
lods
rolb
call
inc
add
sub
add
mov
movsl
push
add
jbe
mov
insb
jae
add
add
jp
jno
std
sbb
add
lock
jecxz
add
cli
mov
and
mov
lea
addb
test
or
cmpsb
add
add
push
loope
stos
pop
or
mov
cli
mov
xchg
xor
add
add
add
add
dec
imul
add
daa
aam
xchg
jecxz,pn
jae
add
sub
mov
pop
mov
fldl
add
inc
dec
xchg
mov
mov
mov
xor
addr16
jnp
iret
into
ret
aaa
sbb
outsl
and
mov
xor
rcr
add
ret
push
add
xor
and
xchg
add
mov
dec
lds
inc
dec
jnp
add
add
aad
dec
or
add
and
mov
lea
pop
cmp
add
xchg
lret
mov
add
xchg
cmc
adc
add
sbb
add
add
mov
inc
add
jl
movb
clc
js
add
add
mov
test
pop
out
cmp
mov
dec
push
add
hlt
add
jo
icebp
adc
imul
fmulp
push
add
ret
add
add
add
mov
clc
jp
lcall
lea
add
clc
test
add
add
and
mov
jecxz
cmp
pop
pop
lds
add
mov
call
add
add
mov
and
mov
add
add
add
mov
and
mov
add
sbb
lret
add
gs
stos
cs
xchg
add
add
imul
fisttpll
add
mov
lret
jae
notl
mov
hlt
add
loopne
mov
cmp
repnz
fnstsw
push
jns
add
dec
outsl
dec
ficoms
rolb
fstpl
cmpsb
add
add
xchg
add
jnp
outsb
cmp
add
jnp
int
add
add
push
mov
outsl
aam
cmp
or
mov
decl
sbb
sahf
sub
mov
jmp
sub
mov
add
add
or
push
add
jae
add
test
jo
xchg
add
outsl
dec
push
push
add
lds
add
add
loope
add
test
jg
cmp
add
and
test
push
add
push
add
fcmovnu
jb
aad
add
icebp
xlat
xor
rolb
jmp
movsl
test
test
add
adc
shll
add
mov
mov
nop
add
add
add
add
mov
add
add
mov
icebp
insl
psubb
sbb
cli
imul
add
add
nop
add
jns
mov
fidivl
add
add
add
jne
push
sub
lods
hlt
add
dec
xchg
add
int3
mov
add
add
mov
cld
xchg
jae
push
and
mov
fsubrl
adcl
js
inc
cwtl
icebp
sub
movsb
add
int
xchg
pop
pop
sbb
inc
add
add
call
add
add
mov
push
into
fisubl
add
rolb
test
push
dec
dec
lcall
imul
movb
ret
js
jge
fldenv
aaa
cmp
bound
mov
xchg
and
mov
mov
fisubl
sub
push
inc
dec
int
add
add
loope
lahf
pop
sbb
add
iret
fistl
insl
xor
fsubl
arpl
sub
add
adc
nop
add
fdivp
jmp
jg
das
call
ljmp
jns
push
je
sbb
mov
xor
in
add
push
mov
in
mov
add
add
add
cwtl
push
add
insl
push
add
jge
inc
jmp
add
pop
inc
xor
mov
hlt
add
cmp
sbb
cmpsl
jo
insb
inc
add
mov
jge
add
rolb
roll
pop
lcall
and
mov
insl
adc
add
das
je
mov
aad
xchg
add
mov
dec
ret
push
mov
jne
loope
xor
pop
mov
push
cmpsl
call
call
add
adc
dec
loop
lcall
hlt
add
adc
fld
fnstcw
add
mov
mov
cld
and
stc
pop
insl
and
insl
xchg
add
jge
add
add
int3
jnp
das
push
add
dec
mov
out
add
adc
mov
sbbl
add
cltd
adc
adc
push
add
hlt
add
out
sbb
add
add
add
daa
cmp
js
add
aas
xlat
frndint
popf
mov
lea
pop
push
fmuls
pop
xchg
push
pop
test
add
add
adc
add
sar
push
add
xchg
lcall
sahf
or
or
xchg
add
fmuls
das
inc
fiadds
imul
dec
dec
fsubp
in
clc
loope
and
stos
je
jne
add
stos
fwait
mov
fdivrs
add
fucomip
jecxz
cltd
jmp
mov
add
add
sti
daa
pop
jns
xor
pop
add
pop
xchg
add
mov
add
rolb
push
or
jae
xchg
add
cmc
scas
hlt
add
test
or
add
popa
pop
or
xchg
add
out
and
pushf
mov
mov
addb
push
add
cmp
cmp
idivl
lret
or
dec
loop
insb
arpl
add
add
and
add
mov
pop
add
mov
add
imul
cld
jae
shl
ffreep
adc
add
fists
data16
pop
push
jle
or
push
cmp
jge
mov
add
jns
mov
notl
mov
add
dec
cmp
rolb
repnz
cmp
imul
xchg
loopne
cmp
mov
push
add
cmc
mov
push
sub
enter
test
xchg
jns
add
add
mov
push
add
sbb
mov
stos
ficoml
pop
mov
jno
aad
addr16
aam
test
add
cmp
ficoml
add
add
fadd
add
pop
cwtl
mov
inc
in
add
mov
imul
jne
and
mov
mov
and
mov
add
sarl
add
mov
add
add
and
push
add
add
add
sbb
mov
inc
add
add
sbb
mov
push
add
sbb
cmp
xchg
mov
add
leave
inc
dec
sbb
add
mov
nop
add
add
in
jmp
jne
andl
in
add
in
addr16
push
push
jecxz
mov
inc
xorl
or
add
mov
enter
dec
mov
xchg
in
add
add
add
icebp
jne
or
adc
dec
fmuls
fsts
push
adc
shll
rcr
jle
leave
or
push
sbb
aad
lds
add
add
lret
cmpsb
add
in
push
mov
mov
add
xor
push
sub
ret
xor
stos
rolb
add
cli
sub
add
mov
add
push
test
add
mov
bound
mov
cmp
ss
add
sbb
mov
sbbl
sahf
sbb
add
add
add
mov
pop
aas
shll
add
adc
inc
add
inc
add
hlt
add
dec
sbb
pop
pop
jecxz
dec
pusha
add
adc
ficompl
xor
add
cli
into
and
mov
add
add
adc
outsb
ljmp
jg
xchg
dec
mov
add
add
add
int3
push
hlt
add
pop
cmc
loope
cmp
mov
add
or
lret
mov
iret
loope
add
test
push
add
sub
into
mov
and
mov
inc
add
add
test
arpl
add
das
mov
or
cmp
add
jns
sti
fcomps
add
inc
add
sbb
dec
int3
pop
push
unpcklps
ds
add
adc
dec
sbb
push
push
test
cmpsb
add
lahf
xchg
fimull
add
inc
add
mov
xchg
mov
dec
and
push
add
mov
add
add
mov
popl
int3
xor
iret
out
ljmp
add
ss
addb
add
inc
mov
in
dec
adc
add
mov
add
mov
aam
push
out
sbb
or
add
aas
xchg
roll
sub
fnstsw
add
add
dec
mov
add
roll
xchg
push
add
mov
sbb
mov
add
dec
xor
cmp
or
push
add
jnp
mov
call
call
mov
daa
and
fbstp
adc
mov
in
cmpsl
data16
sbb
stc
or
rcr
add
inc
faddl
mov
fidivrs
ret
clc
testb
add
pop
add
fidivrl
mov
adc
aas
adc
add
add
sahf
sub
add
push
add
fldcw
mov
inc
fisubs
push
xor
inc
add
stc
inc
add
lock
or
push
mov
add
add
mov
fnstcw
jle
add
jmp
sbb
sbbl
andl
or
outsb
xchg
div
pop
push
add
lds
add
add
or
fwait
xchg
jne
mov
pusha
add
mov
out
pop
jo
pop
mov
mov
cmc
cmpl
pop
aas
call
jmp
pushf
cld
mov
add
or
sbb
jnp
imul
push
add
scas
out
mov
leave
inc
add
mov
xchg
fs
sub
test
add
jne
decl
insb
cld
fnstenv
mov
cmpsl
or
inc
add
add
add
cmp
inc
add
lret
add
jns
std
clc
lahf
pop
fsubrl
mov
fildll
jle
add
dec
fldcw
pop
shrl
scas
push
add
inc
add
add
xchg
pop
in
and
jne
clc
movsb
add
add
dec
out
and
mov
movsl
mov
je
bound
mov
xor
js
ds
add
mov
cmpsl
cmpsb
add
mov
xor
mov
add
cmp
lahf
mov
std
stos
add
mov
add
add
inc
add
add
jo
call
add
in
add
jno
cmc
adc
add
push
add
paddusb
add
or
aam
inc
daa
and
mov
mov
dec
sbb
mov
add
jge
mov
add
decb
xchg
add
lahf
and
mov
add
add
add
cmp
push
es
sub
add
push
add
add
add
cmp
inc
add
adc
cmpsl
into
cmc
hlt
add
and
pusha
add
pop
xchg
add
pop
pop
lret
data16
out
xor
push
jb
ljmp
and
mov
add
add
mov
sub
cmp
inc
add
xchg
add
push
add
add
in
cmp
add
xadd
pusha
add
add
adc
lret
into
faddl
subl
xchg
sti
and
mov
rorl
outsl
push
add
fwait
scas
nop
add
push
cmc
rcrl
jg
add
mov
mov
add
xor
dec
addb
mov
filds
lret
add
lock
push
push
jbe
ret
data16
add
pop
in
data16
xchg
add
fmull
pop
out
movb
inc
add
add
push
add
cmp
or
stos
cmc
jg
sub
mov
pop
out
sub
pop
movsb
add
or
jle
add
cmp
add
icebp
pushf
dec
add
lret
testb
pusha
add
pop
fwait
or
xor
mov
push
mov
adc
mov
add
sbb
or
sbb
add
jae
add
add
out
mov
in
mov
or
scas
iret
nop
add
jbe
push
sbb
lret
sub
addb
imul
mov
mov
gs
add
mov
add
add
movl
mov
aam
out
cmp
add
fstpt
aas
data16
jno
add
push
add
je
loope
outsb
jne
xor
call
cli
or
test
int
xchg
push
jge
test
lds
add
inc
and
fisubrs
add
cld
or
pop
mov
scas
jmp
dec
fld
xchg
add
add
add
inc
add
mov
movsb
add
lcall
mov
jle
add
add
adc
cltd
mov
jp
mov
lods
jl
dec
lock
adc
data16
lock
add
inc
sbb
pop
aad
add
mov
add
mov
add
in
loopne
pop
sarl
add
mov
jns
loop
out
mov
add
leave
in
cmp
mov
icebp
xor
cmp
jl
push
not
adc
push
add
mov
arpl
push
imul
daa
insl
jge
add
out
add
outsb
push
hlt
add
add
outsl
gs
sbb
add
add
ljmp
inc
add
inc
add
pusha
add
sbb
jno
mov
push
add
ja
sub
add
add
cmp
add
out
shll
add
lret
xchg
add
jp
add
push
lds
xor
push
add
mov
add
scas
inc
add
xor
aas
cltd
dec
jnp
or
aas
mov
add
repz
mov
sbb
mov
and
mov
dec
sub
fcoms
js
loop
ja
pop
xchg
ret
add
add
add
mov
insl
sub
add
inc
add
mov
jg
jmp
add
iret
lea
add
test
add
add
mov
add
push
xchg
add
addr16
js
add
iret
jmp
popf
je
mov
jmp
add
dec
stos
loope
jle
xchg
aas
fistpl
add
push
add
cwtl
gs
ret
pop
sbb
sub
out
mov
add
xchg
add
mov
lret
je
call
add
add
add
fcomi
add
cltd
and
add
xchg
add
add
ds
inc
add
rolb
add
cmp
dec
arpl
sub
add
testb
add
fsubl
lea
xchg
add
add
pop
mov
mov
or
js
repnz
mov
add
jg
add
jmp
add
mov
add
add
lea
dec
ljmp
add
pusha
add
push
out
rolb
sbb
jno
dec
lahf
push
outsb
ffreep
xchg
add
sub
add
ljmp
add
xchg
add
push
cmpsl
stos
sbb
push
add
test
mov
gs
mov
testb
jecxz
push
pop
jnp
lods
gs
or
xor
popf
shll
jg
add
sbb
mov
cmc
cmpsb
add
add
push
add
ljmp
lods
inc
add
add
cmp
shr
fldenv
ljmp
add
add
xor
cmp
add
xchg
add
xchg
scas
and
sbb
lods
and
pop
icebp
cmc
filds
add
mov
add
inc
add
cmpsb
add
add
mov
or
jle
add
mov
xchg
push
add
add
cmpsl
nop
add
add
jbe
popf
test
call
lret
lock
loopne
dec
stos
in
add
lods
in
xchg
push
add
add
mov
sbb
inc
add
dec
mov
shrl
scas
fmuls
fdivrp
mov
cmp
movb
ljmp
movsb
add
push
add
inc
xor
pshufw
gs
outsl
ficompl
lds
repz
jg
jnp
add
mov
dec
loope
pop
xchg
add
mov
pop
sbb
push
stos
xchg
aaa
add
dec
cli
stos
pop
lahf
icebp
adc
ds
add
sbb
mov
cmp
mov
sub
add
mov
stos
cmpsl
cmp
inc
add
movsb
add
push
add
add
in
idivl
and
ljmp
mov
cmp
add
add
cmpl
sarl
stos
push
enter
push
add
lret
test
xchg
xchg
mov
push
dec
or
xchg
add
xchg
add
add
and
mov
arpl
push
add
xrelease
add
xor
inc
add
push
add
add
add
add
add
add
add
add
mull
add
loopne
call
add
inc
add
push
rolb
mov
add
mov
fwait
cltd
and
xor
jo
and
fisttpl
xor
das
inc
add
sarl
add
push
add
cmp
sub
lahf
in
push
mov
or
mov
rolb
shll
add
ja
jl
call
xchg
add
add
add
mov
add
lret
stos
mov
inc
add
push
add
ret
and
data16
dec
sbb
dec
les
xchg
jnp
push
add
jne
je
sahf
or
dec
jae
add
add
ljmp
xchg
add
pop
inc
fidivrl
jmp
dec
mov
xor
mov
adc
and
mov
mov
jnp
sbb
jo
sbb
xchg
xchg
add
mov
mov
add
add
into
pop
inc
add
add
add
addb
sbb
mov
insl
pop
outsb
pop
stos
js
test
add
push
cmp
dec
xchg
pop
cli
fiaddl
arpl
sub
add
rolb
cmc
sub
loop
jge
jae
add
dec
push
add
mov
jbe
add
ret
push
dec
push
lea
imul
out
adc
rolb
loop
xor
add
addr16
or
out
rolb
out
xchg
lret
add
add
lds
pop
push
add
sbb
dec
loopne
inc
add
add
add
ss
add
jmp
outsb
xor
push
mov
loop
xor
and
les
dec
dec
sub
out
int
push
add
add
mov
add
add
add
jle
mov
mov
add
add
inc
add
add
push
movsl
pop
xchg
add
mov
and
pop
insb
sbb
out
mov
add
add
sub
add
xchg
add
bound
mov
cwtl
orl
gs
or
add
xchg
add
add
add
imul
inc
pop
cmp
add
add
add
imul
xchg
addr16
inc
mov
lret
mov
cli
pop
jl
add
push
add
cmp
add
add
or
loop
ficompl
add
mov
or
bound
mov
mov
jp
push
add
add
add
push
cmpsl
mov
dec
stc
push
add
sub
mov
add
cmp
movsb
add
mov
sbb
icebp
imul
cli
pop
jmp
add
and
mov
mov
fldenv
jb
jb
fcoms
inc
add
mov
add
jecxz
push
addb
arpl
and
cwtl
rolb
sub
insl
pop
into
rcll
pop
cmp
std
push
add
icebp
pop
pop
test
push
mov
test
movb
icebp
scas
sahf
or
cmp
jg
cmp
test
cmp
cmp
xchg
add
dec
repz
in
add
jmp
lods
out
aad
popa
cs
dec
out
jae
sub
xor
add
aad
add
add
inc
cmp
add
sbb
push
jo
dec
in
xchg
stc
lcall
add
add
add
cmc
push
fistpl
and
jns
add
lcall
add
add
sub
mov
add
shrl
outsb
scas
pop
dec
push
repz
push
into
add
mov
add
idiv
sbb
inc
add
mov
aam
dec
jbe
ljmp
mov
das
loopne
iret
cmp
add
imul
adc
inc
pop
subl
cmp
scas
jb
inc
add
push
sti
data16
cmp
div
popa
sub
pop
aaa
out
stos
cltd
call
or
jmp
inc
add
add
xchg
pop
push
add
repz
add
push
add
nop
add
jb
or
cmp
mov
add
into
inc
iret
imul
add
lock
addb
mov
pop
rolb
and
adc
dec
sub
inc
add
mov
lret
jno
sbb
cld
pusha
add
adc
add
add
addb
pop
movq
dec
dec
imul
out
inc
add
and
xchg
add
push
add
push
mov
add
add
jle
jnp
hlt
add
test
push
dec
outsl
lods
lret
sarl
xor
sbb
dec
jle
and
into
pushf
daa
lea
xor
push
add
pop
movsb
add
add
rolb
gs
adcl
xor
jle
jbe
repz
je
jno
in
mov
and
lahf
jns
imul
add
hlt
add
mov
rolb
andl
add
xor
iret
mov
gs
sbb
push
popf
pop
sbb
scas
push
mov
insb
test
inc
add
fists
xlat
pop
push
add
add
fadd
add
add
cmp
add
ret
and
jl
add
cmpl
stc
add
lods
xor
data16
rolb
jmp
pusha
add
add
push
int
outsb
pushf
sbb
pusha
add
push
addr16
inc
add
adc
mov
pop
dec
leave
insl
in
stos
pusha
add
rcrl
mov
cltd
js
add
add
add
pop
push
lret
pop
jne
add
arpl
inc
add
add
or
xchg
add
add
mov
mov
data16
dec
adc
lcall
add
jg
inc
popf
jnp
stc
sbb
pusha
add
mov
xor
pop
jbe
cmp
pop
sbb
flds
or
add
add
add
adc
adc
xor
sub
sbb
mov
pop
dec
rcrl
loop
pop
aas
xor
jle
xchg
add
addb
or
xchg
add
add
mov
out
ljmp
push
push
inc
add
cmp
shll
testl
nop
add
negl
in
xchg
add
add
pop
popa
and
xchg
xchg
add
sti
addb
mov
add
mov
iret
mov
inc
jbe
and
mov
add
jecxz
out
sub
add
jb
addb
mov
lret
push
add
mov
push
insb
or
frstor
mull
lds
add
mov
add
add
add
mov
cmpsl
jns
add
add
add
test
dec
repnz
adc
cs
add
add
stc
mov
daa
add
mov
add
add
add
add
mov
int3
out
push
ljmp
and
mov
mov
inc
add
inc
add
fwait
insl
push
add
adc
movsl
sub
mov
outsl
test
adc
cmp
mov
repz
mov
add
adc
enter
stos
sbb
loope
jne
sar
inc
pop
pop
lahf
testb
push
inc
cmpsl
js
out
out
and
mov
add
inc
add
imul
sub
orl
mov
ds
add
cmc
out
testb
add
push
add
add
mov
sub
fstpt
mov
rolb
cmp
add
add
fwait
ds
imul
inc
mov
scas
enter
jae
mov
add
mov
les
lahf
cmc
or
add
push
add
daa
pop
dec
jae
adc
sbb
mov
loopne
xchg
add
xchg
add
mov
cmp
scas
cmovge
sti
push
in
aad
fistps
and
movl
enter
jg
add
lcall
mov
scas
lds
les
sub
dec
dec
push
add
push
add
mov
adc
inc
add
stos
sub
dec
mov
jnp
pop
inc
lods
push
enter
cmc
pop
test
movl
pshufw
xor
or
das
sub
lret
fistpll
or
mov
cmp
xor
and
js
lock
add
inc
sub
add
cmp
iret
adc
sar
lods
lea
fidivrs
inc
add
add
or
add
rolb
mov
repnz
push
jl
movsb
add
push
add
mov
mov
into
leave
leave
pop
je
sbb
leave
push
inc
add
jmp
add
mov
or
jmp
pop
rolb
push
add
call
add
addb
add
push
mov
outsb
je
jae
shr
mov
dec
inc
add
out
mov
repnz
mov
and
mov
jns
pop
jns
and
jae
add
js
cmp
jmp
push
and
mov
add
add
addb
or
das
sbb
sub
add
mov
les
imul
mov
ljmp
leave
adc
jne
add
add
push
pop
nop
add
add
lods
and
sbb
lret
fbld
mov
inc
jg
imul
add
ljmp
jnp
xor
mov
add
cmpsb
add
lea
add
dec
aas
add
push
add
add
movsb
add
add
mov
sbb
sub
out
jmp
add
call
loop
inc
fstl
int
adc
cmp
mov
add
add
das
rolb
mov
loopne
lahf
test
mov
mov
lea
xchg
and
pusha
add
testb
sahf
adc
stc
hlt
add
jle,pn
pusha
add
push
add
dec
insl
movb
outsl
sti
movsl
jne
cs
adc
lret
lock
aas
adc
add
add
je
xchg
dec
movsl
sub
dec
xor
mov
xor
dec
xor
push
cltd
xchg
jo
in
sbb
add
enter
hlt
add
mov
cmp
jnp
mov
push
roll
jb
data16
add
add
movsl
pop
repz
rolb
xchg
add
scas
xor
push
xchg
add
in
mov
cmp
pop
rolb
push
add
lret
data16
add
add
ja
add
and
mov
dec
adc
pop
pop
mov
mov
xchg
dec
push
add
xchg
fisttpl
add
dec
iret
fwait
pop
movsl
xor
add
fidivrs
cmc
out
movb
ljmp
add
aas
mov
mov
xor
xor
in
and
add
xchg
add
add
jecxz
sti
add
mov
in
cld
cmp
adc
popa
jbe
adc
roll
lods
jecxz
add
insb
sahf
mov
inc
enter
lods
fisttpll
add
test
repnz
adc
add
add
flds
add
fadds
add
ljmp
pusha
add
lods
push
add
add
add
bound
mov
in
mov
add
ljmp
xchg
scas
inc
add
daa
mov
test
mov
aaa
cmp
outsb
jge
push
or
mov
add
fimuls
inc
add
cld
js
mov
sbb
add
mov
sub
lea
sub
inc
push
cld
pop
cmp
test
push
rolb
push
xor
pop
loop
cmpsl
or
add
mov
adc
cli
adc
aad
add
add
add
cmp
fdivr
popf
gs
fdecstp
add
xor
aaa
jne
pop
xor
add
add
xchg
inc
dec
pop
dec
add
ret
test
cmp
std
xchg
ret
ret
pop
fcmovnbe
add
mov
add
pop
adc
outsl
fbstp
mov
add
and
sbb
pushf
mov
inc
add
xchg
add
cli
pop
push
jecxz
jae
sbb
popf
adc
fsubrs
arpl
nop
add
push
add
xchg
lock
xor
notl
inc
add
add
mov
jl
pushf
push
and
adc
dec
ljmp
out
mov
xor
loopne
jb
repz
enter
popa
mov
test
add
dec
movb
jno
sub
add
lahf
out
add
hlt
add
jl
add
add
sbb
xor
mov
rolb
and
add
add
imul
leave
jecxz
cmc
mov
aam
cmp
cmp
or
cltd
rolb
cmc
inc
add
add
add
inc
add
fisubl
pop
xchg
sub
mov
lea
add
add
mov
lods
nop
add
fdivp
add
aam
ret
out
cmpsb
add
adc
mov
lods
cmpsb
add
xorl
xchg
sub
rolb
popa
enter
pop
stc
repz
fstl
pop
mov
bound
mov
rolb
fistpl
and
inc
adc
xchg
mov
mov
inc
add
bound
mov
lret
js
push
add
mull
out
les
adc
in
dec
adc
sub
rolb
inc
add
add
mov
lret
sub
xor
sbbl
add
into
xchg
popa
icebp
movb
and
bound
mov
sub
lods
jecxz
cmp
pushf
stos
nop
add
mov
clc
pop
xchg
pop
dec
adc
mov
sbb
add
mov
popa
pushf
leave
dec
and
stc
mov
push
add
add
out
int3
inc
add
shl
or
int
jb
outsl
push
in
push
jbe
ret
mov
mov
out
pop
xor
in
and
add
push
add
lods
jns
addr16
add
mov
gs
sub
add
ret
or
add
or
sbb
dec
sbb
movb
add
loope
add
out
sub
lahf
jg
add
add
mov
add
add
jmp
and
sub
add
or
add
sub
add
pop
xchg
or
mov
dec
and
mov
mov
add
les
jecxz
rorl
pop
cmpsb
add
pop
jge
xor
mov
iret
push
add
xchg
push
jbe
sbb
add
lret
cs
inc
xchg
jmp
pop
mov
setl
or
xor
jg
add
mov
jp
add
pop
push
clc
movsb
add
popa
enter
std
lds
add
jb
xor
or
das
pushf
push
add
aam
mov
aas
fs
jne
arpl
fxch
add
add
add
add
add
add
add
std
cltd
push
lds
fisubs
icebp
and
mov
pop
dec
lret
pmulhw
aam
cmc
and
mov
add
add
lea
jl
insl
out
std
dec
cld
mov
mov
add
xchg
filds
aaa
adc
ljmp
pop
fs
cmp
pop
xchg
dec
je
repnz
sub
cmp
add
xor
and
mov
add
mov
inc
pop
movsl
bound
mov
cmpsl
jne
or
cs
scas
insb
mov
mov
fsts
xchg
movsl
jmp
dec
mov
mov
add
add
rcl
pop
mov
lock
cmp
add
mov
add
add
inc
push
add
mov
dec
or
scas
test
add
inc
add
jmp
fcom
subl
add
add
and
sahf
inc
add
repz
enter
loop
mov
rolb
adc
cmpsl
bound
mov
add
rorl
cwtl
jae
pusha
add
mov
dec
add
xchg
dec
xchg
fidivrs
add
mov
adc
sbb
add
mov
mov
movsb
add
fisttps
sub
or
shr
iret
insb
lcall
out
push
lret
mov
imul
addb
xchg
jg
mov
push
add
add
add
mov
add
mov
xlat
push
push
das
xor
lods
cmp
or
movsl
inc
cmp
mov
xchg
mov
pop
and
ficoms
add
add
pop
testb
ret
lock
add
mov
mov
test
mov
add
add
add
mov
cmp
sbb
add
bound
mov
insb
outsb
ja
imul
ret
repnz
testb
pop
cmpl
add
push
mov
add
push
icebp
mov
test
jne
and
add
push
add
add
lods
sub
jns
add
add
or
add
pop
mov
jns
icebp
add
inc
add
mov
nop
add
add
xchg
fimuls
mov
dec
fcmovbe
add
xchg
add
mov
lret
sahf
in
mov
addb
add
sub
adc
rolb
add
out
and
mov
shll
push
pop
inc
test
and
mov
add
mov
push
mov
inc
lret
mov
add
mov
repz
inc
add
inc
aaa
dec
pop
in
pop
lock
mov
jo
fldcw
rolb
push
add
addb
dec
andl
xor
add
add
add
insb
dec
add
data16
add
ds
popf
or
scas
movb
push
push
push
std
int3
mov
sbb
push
add
add
add
sub
popf
insl
dec
pushf
pop
bound
mov
addb
jo
xor
in
xchg
add
xchg
add
arpl
nop
add
mov
lea
cmp
jecxz
add
popa
addb
add
addb
add
and
repz
insb
out
push
add
aam
push
icebp
sti
sbb
xchg
orl
jmp
outsb
and
mov
dec
pop
addr16
xchg
cmc
mov
lods
test
add
cmp
and
inc
add
xchg
cmc
adc
int
stos
arpl
add
add
or
or
out
repz
xchg
jbe
mov
jbe
xchg
add
jp
out
and
mov
imul
add
add
add
loopne
push
jge
dec
mov
xchg
bound
mov
mov
pop
and
add
stos
push
add
rolb
scas
mov
movsl
mov
jp
sbb
add
mov
int
push
outsl
sub
mov
cmp
rolb
cmpsb
add
int3
cmpsl
pop
sahf
xor
push
mov
add
addb
add
out
add
testl
sub
pop
addr16
add
leave
mov
gs
add
add
fldenv
aad
fsubrl
add
add
add
loope
xchg
cmpsb
add
push
mov
mov
add
sub
into
and
ret
out
lcall
mov
imul
sub
xchg
in
push
addb
xchg
dec
movsb
add
add
sbb
aam
data16
adcl
add
add
lahf
popa
jle
jl
push
inc
add
jle
jbe
pushf
in
arpl
add
mov
das
into
sub
mov
addb
in
add
xchg
add
sub
push
fisttpl
mov
aad
imul
adc
cmp
add
inc
fldcw
fistps
add
je
sub
xor
jecxz
add
in
pop
xchg
add
mov
ljmp
sub
add
rolb
pop
pop
in
add
repnz
dec
cmc
out
mov
rolb
sub
add
add
sahf
das
jb
cmp
mov
mov
jp
cmp
iret
add
jns
js
lcall
enter
mov
pop
cwtl
ds
in
pop
push
add
mov
add
sub
mov
add
addb
mov
addb
movsl
sbb
and
fucomi
dec
jns
pushf
scas
pop
mov
mov
add
rolb
and
mov
or
mov
lret
mov
movzbl
sub
lock
add
lcall
or
mov
sti
dec
mov
or
add
jno
add
jne
push
and
add
dec
push
add
add
xchg
inc
add
or
pusha
add
add
lret
ljmp
clc
lods
shrl
mov
push
addb
add
pop
dec
loopne
mov
add
jb,pn
add
mov
movsb
add
cwtl
add
adc
add
mov
mov
add
mov
fwait
and
mov
push
cli
pop
std
xchg
jecxz
out
mov
or
cmp
xor
test
mov
add
cmpsl
hlt
add
movsl
push
add
mov
pusha
add
add
push
add
gs
add
mov
bound
mov
jle
add
mov
push
xor
arpl
add
stos
adc
add
test
inc
loop
imul
pop
inc
add
mov
movb
rolb
aaa
je
fisubs
mov
add
lahf
dec
ret
pop
hlt
add
scas
mov
pushf
jle
xchg
xor
add
mov
bound
mov
add
inc
pusha
add
mov
sahf
test
arpl
enter
add
xchg
add
add
push
add
in
mov
pop
push
push
add
pop
pop
mov
dec
out
adc
mov
mov
add
mov
popl
mov
cmp
test
aaa
faddp
cmp
mov
addl
enter
add
lods
add
mov
add
add
mov
jne
insb
xor
lret
sbb
push
add
pop
nop
add
add
add
cs
or
lret
sar
mov
mov
test
add
push
mov
add
mov
inc
dec
sahf
push
add
mov
bound
mov
mov
xor
fs
add
mov
out
mov
stos
sbb
aaa
movsb
add
pop
pop
cmp
add
jne
leave
push
add
jle
and
or
add
jg
add
add
aad
shl
jmp
add
aaa
icebp
fldcw
movsb
add
loop
mov
sub
add
adc
or
pusha
add
add
mov
subl
add
repnz
xchg
add
mov
and
add
mov
fadd
add
push
decb
hlt
add
mov
xorl
jae
loope
inc
sbb
ja
aas
add
mov
cmp
push
add
push
add
out
dec
dec
push
jb
push
add
xchg
cli
call
add
mov
mov
add
fiaddl
add
add
xchg
addb
add
add
mov
sti
repz
aas
jnp
add
lret
pop
dec
jbe
data16
iret
add
jnp
add
pushf
stc
and
mov
mov
or
mov
aas
pop
pop
fisubs
add
inc
jg
cmp
xchg
sbb
add
repz
push
add
rolb
test
stc
mov
push
add
add
rcrl
add
jns
sbb
xor
jg
std
push
out
aas
stos
int
add
arpl
in
push
mov
mov
xchg
add
xor
lods
mov
add
pushf
mov
ret
mov
sbb
in
dec
and
mov
jnp
sarl
add
mov
add
mov
stc
and
add
jl
xchg
pop
or
mov
add
and
mov
into
mov
rolb
aam
in
cwtl
lock
cmpsl
add
mov
inc
icebp
mov
mov
xor
cwtl
incb
add
add
add
adc
xor
test
ret
pop
inc
add
cmp
rolb
movsb
add
mov
pop
mov
add
std
sub
xchg
push
add
or
loop
data16
add
mov
fucom
cmp
mov
mov
and
mov
mov
insb
jne
cmpsb
add
lods
hlt
add
add
sub
add
jno
add
cmp
lods
add
push
cmpsb
add
add
or
inc
outsl
inc
cli
cltd
into
cmp
inc
loope
lahf
les
pop
jmp
add
add
mov
sub
add
mov
add
dec
jmp
lods
adc
loop
iret
pushl
jae
add
pop
div
lea
stc
pop
std
dec
xor
fdivs
pushf
jae
clc
jp
rolb
in
insl
jae
aaa
lods
mov
add
mov
add
add
add
pop
lcall
add
scas
test
push
push
add
imul
xlat
xchg
test
testb
add
xor
jbe
push
ljmp
test
add
lds
add
leave
paddsw
xchg
cli
cmp
mov
cmp
pop
jmp
xchg
add
dec
les
int
fcmovb
add
rcrl
add
add
mov
and
popf
push
add
inc
add
mov
add
adc
repnz
fcmovne
xlat
insb
fldcw
push
add
mov
or
mov
mov
in
add
repz
add
add
and
add
xchg
aad
inc
hlt
add
sub
sar
addb
fisubs
mov
mov
xor
movsb
add
sti
jmp
mov
add
add
add
add
add
add
mov
aaa
inc
lret
cmp
mov
dec
add
mov
dec
and
je
sub
add
inc
add
je
or
mov
lods
je
push
add
adc
imul
pushf
push
add
cld
push
add
add
cmpsl
lods
and
sub
xchg
add
sub
fisttpl
add
pop
loop
mov
jbe
xchg
jae
adc
lcall
outsb
aas
mov
out
rcrl
mov
xor
and
out
and
add
lea
pusha
add
inc
add
stos
add
mov
sub
bound
mov
in
data16
adc
and
mov
cltd
cmp
mov
repnz
xlat
idiv
into
cmp
std
out
add
lods
fs
test
dec
jbe
mov
add
lods
cmp
xlat
int3
cmpsl
mov
add
insb
add
testl
jb
lcall
jle
daa
xchg
das
sbb
add
pop
loope
sbb
push
cmp
sbb
add
add
test
addb
cmp
icebp
cmc
scas
add
push
out
addb
add
xchg
mov
mov
xchg
xchg
add
add
pop
icebp
daa
sbb
add
xor
sahf
xchg
lret
mov
ficomps
add
push
shrl
or
cwtl
clc
enter
add
add
and
add
mov
jb
sub
jb
std
dec
sub
add
nop
add
mov
hlt
add
add
add
add
in
jno
cli
pushf
jbe
mov
lahf
repnz
jno
dec
jge
dec
std
xchg
movsb
add
mov
push
add
add
inc
add
cld
pusha
add
add
fldl
lea
add
clc
mov
pop
sbb
add
push
mov
push
mov
sub
cmp
jno
jmp
add
cmp
or
sub
mov
jecxz
push
add
sahf
je
push
add
js
add
data16
sbb
mov
add
cld
xchg
add
addl
add
sbb
add
mov
add
cmpsb
add
into
cmp
and
mov
aas
fiaddl
mov
je
cmp
and
cli
cmpsl
setbe
icebp
dec
clc
cs
sub
jmp
xor
ret
out
add
mov
add
cmp
sbb
fcoms
adc
sub
add
scas
popl
add
add
cld
loopne
adc
push
jg
add
iret
int
add
inc
add
mov
outsb
xchg
dec
mov
xor
movb
cli
jbe
mov
lahf
rolb
stos
or
call
jno
push
rolb
and
sbb
mov
add
dec
xchg
add
rolb
movsl
or
pop
testb
notl
gs
shr
mov
add
push
add
push
add
out
sub
inc
add
push
lods
pusha
add
add
lea
inc
data16
loopne
cwtl
mov
addr16
cs
add
cli
push
or
add
push
std
cmp
les
xchg
scas
hlt
add
add
push
aam
enter
pusha
add
loop
pop
les
rolb
mov
add
mov
cltd
movsb
add
lods
rolb
cmp
addb
les
mov
add
aas
mov
add
loopne
push
add
pop
jle
add
add
add
add
inc
add
les
test
push
push
mov
fcoml
mov
push
inc
testb
and
add
mov
lret
add
pop
inc
add
loope
add
add
mov
test
inc
ss
lcall
sbb
add
mov
incb
xchg
addl
mov
dec
scas
imul
add
add
inc
push
add
add
adc
add
add
dec
and
xchg
add
sti
neg
dec
sahf
jno
test
sub
fsubs
sub
mov
mov
jbe
scas
addb
addb
cli
aad
popf
mov
sub
add
shrl
add
add
add
jle
add
mov
add
jne
add
add
add
mov
jmp
sbb
xor
mov
int3
iret
imul
fwait
fs
stc
inc
adc
add
add
mov
sbb
push
add
outsb
bound
mov
mov
adc
add
inc
sbb
push
add
add
pop
pushf
sarl
or
stos
push
and
jp
add
aam
sbb
mov
add
mov
les
inc
add
lods
stos
movb
cs
add
add
add
xchg
adc
xor
nop
add
mov
mov
bound
mov
xchg
ljmp
ljmp
out
fildl
add
add
call
add
add
add
mov
add
push
in
jg
iret
push
push
add
imul
cli
add
fstps
iret
adc
dec
cld
dec
aaa
mov
lret
into
es
add
and
test
sub
add
je
mov
xchg
fisubrs
jecxz
loope
mov
adc
mov
out
cli
inc
jno
add
add
cmp
fbld
decb
lock
sbb
and
les
sub
iret
cmp
mov
adc
repz
aaa
and
das
aaa
lods
or
add
add
rolb
mov
cmpsb
add
mov
icebp
inc
ljmp
rcrl
adc
addl
ret
scas
and
push
rolb
sbb
mov
xor
mov
xchg
push
push
cli
into
sub
add
call
add
add
pusha
add
fistps
cli
insl
sbb
jge
jnp
add
insb
sbb
lahf
mov
inc
add
mov
add
cld
add
lcall
rdpmc
xlat
xor
dec
lret
mov
movsb
add
sub
add
mov
daa
pop
dec
xor
add
mov
sbb
lds
add
mov
add
pop
xlat
mov
mov
lods
inc
movb
mov
mov
fnclex
add
into
lds
sbbl
mov
pop
lds
add
add
mov
ja
pop
mov
arpl
aam
out
xchg
xor
lods
push
jo
test
add
stc
dec
movsb
add
add
sbb
sbbl
xor
clc
mov
or
cltd
pop
dec
aas
sarl
lret
aas
pop
inc
xor
les
sbb
movb
fnsave
add
inc
add
arpl
dec
adc
xchg
repnz
cld
add
rolb
add
sbb
rolb
cmp
mov
xlat
mov
pop
sbb
daa
adc
add
adc
fs
add
push
add
andl
mov
jns
add
jg
add
sub
fwait
sbb
add
add
out
push
add
add
and
jae
adc
add
sbb
add
xor
sub
xlat
mov
pop
addb
leave
adc
fsubp
les
movsl
sahf
out
cmc
dec
testb
dec
iret
loop
movsb
add
add
add
add
jno
jbe
lock
mov
ret
pop
push
xlat
test
stos
sub
testb
push
int
fsubrs
ljmp
add
xchg
das
std
dec
scas
out
sbb
lods
jae
and
sbb
lock
cmp
add
mov
mov
outsb
inc
add
add
mov
cld
xchg
add
out
sti
aam
or
add
aas
sti
lods
ret
scas
mov
mov
cmp
and
cmp
lcall
or
mov
add
inc
les
add
jmp
sub
lret
cmp
fwait
push
cltd
out
jo
lock
pop
js
ljmp
add
inc
add
outsb
lods
stc
add
mov
in
sbb
add
repnz
iret
or
add
mov
sub
xchg
add
dec
add
mov
push
int3
or
inc
out
pop
into
pop
mov
mov
data16
add
lods
das
testb
add
inc
insb
adc
adc
xlat
add
add
sbbl
or
cmp
jb
or
int
mov
or
push
add
add
scas
mov
ja
mov
loopne
mov
sub
mov
jne
mov
sbb
push
add
icebp
andl
add
daa
rolb
gs
les
mov
bound
mov
add
rolb
add
fcoml
imul
mov
loop
ljmp
add
push
add
je
sbb
test
add
ret
int
lret
add
pop
lahf
xor
pop
push
dec
in
mov
leave
pop
fmull
add
pop
or
jl
mov
inc
add
mov
add
xchg
sbb
das
stos
mov
xlat
and
sti
add
dec
add
inc
jp
out
rorl
inc
and
jbe
stc
aaa
js,pn
adc
cli
add
fidivrl
lods
and
mov
sbb
icebp
addb
ret
add
mov
inc
daa
fcos
imul
icebp
in
cmp
add
add
pop
enter
add
add
add
add
jno
mov
call
imul
mov
inc
add
jns
add
andl
mov
mov
rolb
daa
pushf
jle
push
add
hlt
add
add
les
push
xchg
sub
add
push
add
cli
data16
out
xor
mov
fnstsw
jecxz
loopne
add
xchg
add
shrl
add
add
pop
push
inc
pusha
add
sub
add
or
add
roll
add
add
sbb
cmpsl
sbb
clc
add
push
mov
movsl
mov
fstpl
add
jcxz
leave
pop
fst
add
cli
xor
add
or
xchg
add
dec
mov
cld
leave
mov
hlt
add
jb
outsb
pop
push
add
add
mov
inc
gs
mov
jmp
add
add
leave
mov
xchg
jp
aaa
in
add
test
ja
cmpsl
test
xchg
pop
pop
outsl
push
sub
and
mov
add
jbe
loop
mov
add
add
xor
and
add
hlt
add
pop
inc
add
xchg
add
add
mov
xor
sub
rcl
add
add
insl
jl
int
inc
jmp
jge,pt
add
repnz
add
dec
pop
mov
scas
call
sub
sbb
mov
stos
mov
add
mov
out
inc
add
add
pusha
add
sbbl
add
pop
sbb
add
and
ret
pop
pop
add
mov
call
xor
shll
jecxz
adc
and
rolb
cli
inc
add
mov
add
in
jg
loopne
inc
add
push
repnz
or
cld
inc
add
xchg
aad
push
in
push
aam
xor
or
imul
mov
cmc
lock
add
add
add
adc
testl
add
lret
or
mov
cmc
xchg
add
jge
push
add
sub
cwtl
and
stc
adc
int
mov
and
mov
adc
add
mov
repnz
in
outsb
inc
add
add
adc
jno
pop
out
jo
cmpsb
add
add
mov
xchg
add
add
cwtl
rolb
add
cmc
les
das
pop
std
pop
dec
in
push
pop
shll
add
cld
and
mov
lea
add
js
pop
xchg
cwtl
mov
xchg
push
dec
rolb
inc
add
add
ljmp
pop
cmp
add
lods
add
add
or
pop
shl
add
cmc
imul
or
sub
xlat
out
data16
gs
outsb
test
cmp
add
dec
lock
and
mov
and
xor
aaa
js
rcrl
jecxz
xchg
jno
add
bswap
jnp
pop
or
add
pop
push
sbb
lods
pop
arpl
loopne
mov
dec
pop
mov
add
addb
jns
add
testb
add
in
mov
xchg
add
nop
add
sbb
add
mov
adc
add
popa
ljmp
jno
lahf
jae
add
insb
enter
cmpsb
add
mov
ret
loopne
std
push
add
and
mov
add
cmp
add
addr16
daa
pop
clc
stos
or
add
inc
add
test
out
mov
dec
jg
mov
test
mov
test
add
add
repz
add
dec
push
mov
out
lret
xchg
add
dec
mov
jle
dec
aaa
arpl
leave
jmp
aam
add
and
gs
mov
cltd
into
aas
ljmp
xor
jbe
or
je
add
add
dec
outsl
dec
mov
hlt
add
jp
cmp
add
in
mov
xlat
mov
add
mov
jle
add
push
push
cli
cmp
mov
add
xor
in
sbb
sub
insb
push
add
add
add
and
add
nop
add
into
push
add
fwait
pop
out
dec
popa
outsl
xchg
add
dec
push
jge
mov
add
push
add
mov
pop
aaa
scas
cmp
adc
repz
in
xchg
lcall
push
pop
addr16
add
adc
repz
ja
lcall
test
daa
cmp
mov
xchg
add
and
xchg
insb
test
add
cmpsl
sub
add
fmul
fs
jecxz
add
mov
add
adc
neg
push
add
js
add
ret
cmp
gs
gs
sbb
cmc
xor
inc
out
mov
cmp
add
test
inc
add
fcomp
inc
add
dec
rolb
push
add
loop
aaa
movb
add
mov
jne
add
fcompl
add
add
pop
int3
lcall
orl
add
pop
nop
add
pushf
adc
das
jb
iret
adc
add
mov
push
add
addb
xchg
push
add
mov
mov
lock
add
jo
mov
xor
and
sbb
call
adc
adc
and
add
pushf
addb
out
add
mov
add
add
aas
jle
add
and
add
rolb
fxch
rolb
or
mov
int
leave
xor
sub
pop
mov
push
mov
and
pop
loopne
shll
lcall
push
add
add
mov
test
sbbl
add
cmp
cld
addb
cs
xor
add
sbb
mov
test
jg
add
sub
add
pop
divl
ljmp
xor
imul
bound
mov
add
mov
add
xor
or
add
sbb
and
jns
rolb
dec
and
adc
add
mov
mov
jo
dec
test
pop
lock
jne
add
add
std
je
mov
add
mov
add
mov
outsl
outsl
add
ret
mov
cmp
add
mov
jne
add
add
jns
mov
pop
sub
adc
add
dec
mov
dec
xor
mov
test
sbb
push
add
sub
leave
jae
add
cld
cwtl
rolb
loopne
gs
push
add
test
add
jg
pop
pop
jne
roll
jle
dec
or
or
dec
push
add
ds
jns
mov
out
inc
add
add
lahf
or
push
mov
sub
arpl
leave
mov
mov
in
sub
stos
and
mov
aad
add
cmp
add
mov
ficomps
inc
add
push
add
push
fwait
cmpsl
and
repnz
add
imul
ja
xor
dec
lcall
mov
lcall
jo
push
out
add
cmp
cld
aam
rolb
movb
pop
loope
jg
pop
sub
mov
add
mov
leave
xchg
add
in
test
shll
jb
into
clc
rolb
jo
sub
cmp
push
add
gs
decl
xchg
add
add
ds
ja
add
lcall
sub
jnp
add
add
cmpsl
jp
add
inc
leave
and
xlat
cld
fsubp
add
add
jnp
int3
sbb
movsb
add
mov
cmpsl
fistps
add
add
pop
lock
loopne
or
in
mov
pop
imul
test
inc
add
jbe
loope
pusha
add
add
push
pop
nop
add
add
aas
cmp
sub
add
sub
lret
mov
test
cmp
lret
pop
cmp
leave
mov
xchg
mov
add
imul
add
mov
dec
inc
inc
sbb
add
sbb
mov
jns
ds
jl
add
add
xor
mov
jne
cs
add
mov
inc
or
add
movsb
add
jno
add
push
sahf
xchg
add
sbb
xchg
data16
dec
mov
ja
add
add
or
adc
xchg
xchg
sub
dec
fisubrs
add
aaa
inc
and
add
push
sti
add
iret
lods
cmp
push
dec
or
out
and
mov
add
pop
sub
mov
int
sub
sbb
jg
push
xor
roll
aam
jle
and
mov
jne
out
add
sbb
out
iret
xor
push
add
lea
push
imul
xchg
mov
das
std
jp
or
jmp
or
fists
or
out
pop
stos
icebp
push
add
mov
fwait
lret
add
mov
xchg
mov
aas
jno
xchg
pusha
add
add
jp
add
addb
mov
out
lret
xchg
add
add
fsubr
mov
add
std
ja
add
mov
leave
lods
lock
mov
xchg
add
movb
lahf
adc
add
cli
cld
sub
out
fiadds
add
push
add
add
pop
mov
dec
or
inc
lods
repnz
xlat
in
push
or
cmp
lret
mov
add
add
adc
xchg
inc
cltd
sbb
jne
jns
in
inc
adc
arpl
inc
add
int
cmp
mov
fsubl
jb
addb
stc
mov
add
movb
push
popa
mov
sub
add
add
pop
ret
aaa
pop
cltd
adc
jge
add
popf
insl
and
mov
iret
call
mov
fcmovbe
sahf
sub
aas
dec
sbb
scas
cltd
mov
add
add
mov
adc
stc
push
add
leave
ds
add
mov
add
cmpsl
in
push
xor
fmul
sbb
mov
add
pop
push
das
loop
addb
add
pop
xchg
add
jo
sub
loopne
and
mov
pop
mov
xchg
add
test
imul
cs
mov
mov
pop
movsb
add
test
sbb
inc
add
call
add
add
fistps
add
mov
and
mov
xor
dec
cmp
add
aaa
xchg
pop
aam
std
test
insl
xorl
add
in
jmp
rolb
bound
mov
or
add
cmp
inc
dec
dec
add
stos
arpl
ret
stos
rolb
cld
xor
test
test
in
sbb
pop
scas
mov
add
add
popf
xchg
add
stc
mov
cmp
xor
add
dec
jnp
dec
dec
mov
dec
add
mov
push
shll
push
dec
lret
movsb
add
add
out
cmpsl
inc
mov
mov
ds
mov
loop
dec
xor
cli
xchg
mov
movb
add
je
test
add
pop
aaa
stc
jg
out
loope
xor
rolb
mov
xchg
movsb
add
mov
enter
add
jmp
push
add
sub
sub
test
cli
xchg
pop
enter
in
rcll
add
add
cli
insb
mov
push
add
xor
xlat
pop
shll
mov
lcall
test
cmp
add
addb
pop
xchg
pop
sub
ja
mov
inc
rolb
sarl
sub
jl
add
xchg
add
add
inc
add
out
jae
add
add
cld
daa
sahf
xor
push
sub
add
jp
mov
add
mov
inc
add
cmp
int3
testb
aad
jg
push
ret
lret
lods
cli
outsb
adc
and
push
sti
jg
add
add
inc
repnz
add
mov
les
js
cmp
add
and
mov
push
add
arpl
add
add
xorl
mov
les
push
add
add
data16
cmc
xchg
outsb
sarl
jbe
add
xor
das
or
add
cli
mov
jo
sub
jecxz
mov
mov
add
add
cmp
add
push
add
mov
add
mov
add
data16
add
lods
inc
add
cmp
cltd
insb
hlt
add
add
add
test
sti
sub
mov
jmp
xor
mov
iret
inc
sahf
sahf
les
icebp
pop
push
add
into
xchg
cmp
add
push
ljmp
add
jne
xor
push
ds
or
add
add
lea
adc
in
lret
sbb
imull
add
add
jo
or
mov
and
out
xchg
mov
add
scas
push
add
push
add
les
mov
cld
lcall
add
push
lcall
insl
dec
jb
inc
push
daa
mov
add
testb
add
in
dec
pop
decl
xor
lcall
add
mov
mov
add
add
add
add
add
cmpsb
add
inc
add
add
das
xchg
add
pop
inc
push
test
cmpsl
rolb
test
stc
repnz
or
add
inc
add
add
mov
data16
or
add
add
add
lahf
inc
add
lcall
pop
push
mov
sarl
push
add
or
add
mov
mov
ja
add
xchg
add
repnz
aam
mov
jle
loopne
fsubr
je
in
mov
pop
push
movb
add
leave
notl
ffreep
add
add
add
mov
add
add
rolb
pop
ret
movb
add
mov
xchg
test
pop
dec
xchg
mov
or
repnz
add
and
jecxz
dec
xchg
dec
jae
dec
mov
fidivl
pop
popf
testb
xchg
push
add
add
out
pusha
add
xchg
rolb
mov
insb
std
inc
push
adc
add
mov
push
insb
cmp
out
add
pop
loopne
jno
add
add
add
push
into
test
nop
add
imul
ret
sbb
add
xchg
call
jno
sti
outsl
pop
cmp
jo
lea
bound
mov
add
lret
mov
mov
lods
lret
add
or
stos
dec
or
adc
add
mov
add
inc
rolb
add
mov
add
xlat
xor
cmp
jge
push
xchg
push
push
mov
and
loope
sub
sti
pop
sub
sub
add
sbb
push
inc
add
fdivrs
leave
push
and
mov
fidivrl
aam
mov
jae
testb
scas
testb
add
mov
repnz
mov
lods
jp
add
jb
clc
and
lcall
and
mov
les
lret
pop
mov
adc
xchg
das
andl
imul
add
mov
mov
lock
add
add
mov
cmpsl
inc
add
add
pop
cld
mov
das
sti
lds
mov
inc
shll
add
pusha
add
movsb
add
add
lret
add
popf
add
cmpsb
add
xor
sub
pop
pop
mov
sub
add
cs
mov
sbb
dec
pop
je
outsl
lret
mov
adc
jne
in
inc
add
in
mov
std
dec
push
push
add
nop
add
inc
add
add
add
add
aam
aaa
cmpsl
inc
add
jbe
out
movsl
jl
mov
lds
or
arpl
add
inc
adc
add
add
mov
mov
add
fldt
add
adc
lock
add
addb
pusha
add
push
mov
lock
out
add
mov
std
jbe
in
test
mov
bound
mov
sub
add
xchg
jp
int
lret
xchg
das
scas
mov
add
mov
add
jle
je
cmp
fisubs
sbb
scas
jp
incl
mov
pusha
add
movsb
add
push
add
dec
jecxz
je
lret
pop
mov
xchg
add
jl
movsl
add
mov
test
mov
ret
lock
xchg
mov
add
ss
adc
rolb
mov
jne
iret
jmp
add
test
aas
jge
rolb
xor
setbe
inc
add
fdivl
leave
enter
data16
in
movsl
aaa
sub
pop
sbb
add
mov
push
add
stos
xor
fs
mov
cwtl
scas
xchg
aam
jo
sbb
loop
faddp
add
cmpsb
add
ret
mov
add
mov
add
mov
lea
sbb
or
cld
fadd
add
add
test
sub
push
add
leave
jns
add
mov
inc
add
jns
add
lahf
fbstp
mov
hlt
add
add
cli
jnp
lret
push
rolb
into
or
ret
jp
ret
mov
mov
cmp
xor
or
addl
je
push
add
add
cs
and
fildll
stos
cltd
push
mov
add
mov
imul
push
add
imul
fisubrs
cli
mov
lcall
dec
jns
xor
add
add
in
adc
add
es
add
add
jbe
mov
lret
jo
xor
imul
lods
cmp
in
adc
jp
inc
add
into
out
movsb
add
loope
repz
call
inc
add
test
rolb
testb
inc
add
jns
add
cld
loope
inc
add
or
inc
add
sti
dec
jnp
dec
movb
push
xchg
int3
cmp
stc
jno
lret
stos
push
add
aam
adc
dec
les
or
add
mov
add
mov
popf
cltd
xlat
insb
movsb
add
xchg
add
or
popf
sahf
rolb
addb
mov
sbb
push
push
add
notl
add
in
push
add
cmp
mov
lret
and
push
add
mov
addl
push
jge
jb
adc
add
insb
sti
mov
adc
lret
mov
add
lcall
outsl
lret
sub
and
mov
dec
mov
cmp
mov
add
add
jle
ds
out
repz
ja
rolb
add
arpl
lds
push
inc
add
push
test
sti
sub
ficoml
add
add
add
mov
call
and
add
dec
addb
add
dec
cwtl
lea
lods
add
mov
cmp
xchg
adc
pusha
add
xor
add
mov
push
test
xchg
fiaddl
out
xchg
sti
inc
add
rolb
inc
in
addb
lods
iret
je
mov
xor
cli
movsb
add
dec
inc
inc
add
mov
xchg
loope
add
mov
cmp
add
add
jmp
mov
sub
rorl
out
inc
sub
dec
sbb
test
add
aam
dec
xchg
mov
dec
push
add
jmp
insb
out
in
mov
lret
rolb
in
inc
add
add
cmp
add
ret
pop
test
jl
add
mov
test
cmpsl
ret
jo
pop
cmpsb
add
adc
clc
mov
jge
add
mov
mov
test
pop
hlt
add
in
mov
das
rolb
in
jbe
mov
in
scas
test
sbb
insl
movsl
dec
dec
cmp
add
add
cmp
orl
out
stc
adc
push
inc
lahf
ret
add
jg
fcmovb
ret
mov
add
pop
or
lods
mov
jae
arpl
fcompl
add
adc
push
ljmp
movb
add
pop
inc
repz
mov
testb
jo
xlat
add
into
repz
stos
stc
adc
je
or
push
dec
and
movsb
add
add
mov
add
cltd
pop
jl
xor
mov
loop
add
add
movsb
add
jbe
xor
shrl
js
scas
hlt
add
add
push
fsubrl
sbb
add
adc
popa
inc
mov
jbe
xor
add
mov
add
fidivrl
and
mov
mov
test
add
jbe
add
jl
jne
cmp
add
data16
add
rolb
fsubrl
cwtl
sbb
aad
js
cmp
jno
add
dec
jae
orps
pop
hlt
add
add
mov
mov
add
cmpsl
fwait
repnz
popf
xchg
int
mov
sarl
pop
ficoml
pushf
insl
and
lret
sbb
jbe
cld
inc
testb
xchg
fisubrl
fdivrl
add
movsb
add
adc
aad
xor
lahf
test
movsb
add
jns
mov
fcoms
pop
sub
pop
mov
and
mov
or
mov
lret
out
add
add
inc
add
add
and
ret
int3
push
push
add
sub
or
add
ljmp
test
mov
add
fdivrs
add
mov
fadds
add
add
push
add
add
add
popf
push
add
pop
inc
loopne
and
mov
in
mov
in
add
lret
lret
loope
xor
sbb
mov
out
fistl
add
add
cld
movsl
inc
add
inc
inc
add
ret
xchg
aam
orl
fucom
scas
adc
cltd
dec
dec
xor
sub
pop
test
ljmp
sub
jae
pop
mov
stc
int3
inc
add
add
push
add
cmc
imul
test
jp
add
in
push
bound
mov
sbb
add
xlat
fsubrs
int
and
mov
roll
add
repnz
jne
ds
into
pop
jmp
lods
mov
add
add
mov
jle
lods
mov
adc
js
add
es
add
outsb
sub
mov
xchg
add
dec
cmpsb
add
and
jp
pop
std
adc
aas
repnz
add
xor
add
xchg
add
inc
orl
xchg
add
jge
cmp
or
add
or
add
pop
imul
push
add
push
xchg
add
mov
cmp
sbb
add
add
test
aas
sbbl
add
enter
mov
xor
addl
add
out
xor
add
mov
mov
mov
loopne
inc
push
add
add
cwtl
mov
add
jnp
add
xor
push
add
out
pop
out
popa
mov
das
jge
jmp
icebp
sbbl
add
in
sub
mov
imul
rcrl
add
mov
and
in
dec
dec
fdivl
pop
fsubp
add
movb
cmpsl
aam
popa
in
test
push
scas
inc
add
add
fsubrs
mov
cmp
push
cmc
xchg
mov
jle
movsb
add
sbb
cmp
mov
add
ret
add
rcrl
cwtl
dec
adc
add
xchg
aaa
lahf
jmp
add
ljmp
add
mov
add
cwtl
xchg
mov
add
add
xchg
mov
add
rolb
mov
inc
add
jb
lret
repz
push
add
fldt
cmp
add
mov
add
pushf
movsb
add
fwait
xor
addl
add
push
add
push
pop
into
je
adc
add
add
test
adc
outsb
jb
adc
add
mov
push
enter
inc
add
add
sub
add
scas
or
testl
adc
lock
add
cltd
or
xor
lcall
add
add
rcll
ljmp
fistps
cmp
add
push
mov
mov
xchg
adc
add
adc
add
mov
stos
mov
ret
add
add
out
xlat
jnp
xor
xor
in
dec
rcrl
sub
add
rcll
jno
add
inc
lds
in
mov
testb
outsl
sbb
sbb
xchg
popl
test
and
add
mov
cs
add
movsl
into
outsb
test
out
je
mov
stos
ret
push
add
lret
stc
clc
xor
adc
je
scas
lea
repnz
in
and
pop
xchg
xchg
cli
stos
arpl
add
add
rolb
mov
push
add
add
mov
dec
lds
sbb
add
int
test
or
addb
sbb
adc
ja
push
decb
add
aaa
test
mov
mov
int
ret
add
mov
nop
add
fmuls
add
or
scas
int
mov
cwtl
dec
dec
inc
sub
push
test
mov
sbb
es
add
ret
xor
add
mov
cmc
jecxz
sub
pop
xchg
add
add
xchg
add
stos
and
cmp
loope
je
rolb
cmp
add
add
cmp
add
les
flds
add
xchg
push
add
add
imul
lahf
xchg
add
push
push
ret
out
js
add
movb
add
notl
xchg
jecxz
jg
add
push
out
jle
fiaddl
push
add
mov
fsubrs
pop
mov
pop
mov
lcall
cli
mov
les
arpl
add
lds
call
add
push
ljmp
dec
xchg
enter
das
push
add
push
cmp
movb
lds
lret
mov
aaa
dec
in
or
add
outsl
das
popf
stos
lea
add
rcll
add
std
push
pop
or
mov
pop
int3
dec
push
add
add
push
push
jp
ljmp
add
mov
xchg
add
add
sti
movsb
add
add
push
inc
add
jbe
xor
cmp
frstor
test
rolb
das
aad
lods
adc
leave
add
decb
stos
jnp
dec
negl
cs
out
or
nop
add
popa
sub
mov
add
mov
leave
into
ljmp
add
and
mov
add
or
lea
add
xchg
add
lahf
push
add
jae
mov
ret
pop
mov
or
lock
loopne
xor
adc
cmpsl
inc
add
cmpsl
mov
xor
add
iret
in
push
add
add
add
add
imul
add
push
adc
in
jnp
add
mov
addb
loopne
xor
movl
mov
add
lods
pop
lods
add
mov
pop
and
mov
dec
mov
loope
push
add
mov
cmp
add
add
push
add
jne
add
sahf
in
add
fsubr
sbb
push
out
cwtl
repnz
and
cmp
int3
or
sti
mov
fldl
add
add
lea
int3
cmp
addb
add
add
mov
add
decl
add
mov
and
mov
add
nop
add
test
add
addr16
fdiv
xchg
test
cltd
and
add
sbb
jmp
fiaddl
add
add
add
xchg
aam
sub
mov
push
add
popa
mov
loop
pusha
add
pop
push
cmp
std
mov
call
add
inc
add
add
cld
mov
ljmp
inc
aas
mov
fidivl
jb
aas
jmp
and
mov
xchg
ret
xchg
int
adc
aas
xchg
js
add
add
adc
add
add
add
add
add
jne
mov
test
cmp
or
pop
adc
add
add
add
add
sub
add
movsl
lea
dec
cmp
sbb
insb
cmp
add
scas
push
add
movsl
imul
daa
lds
pop
pop
push
and
add
mov
add
ret
call
int3
test
movsl
fistpll
popf
leave
mov
add
mov
ja
add
addb
xor
push
out
out
and
pop
cli
pop
pushf
jge
movb
lock
dec
into
packsswb
add
add
pop
add
fwait
and
rorl
cmp
stos
cmp
pop
aaa
mov
inc
idivl
or
xor
mov
adc
call
insl
pop
add
mov
data16
addb
add
mov
mov
in
pop
hlt
add
sub
add
int3
aad
shll
cs
insb
dec
jae
shl
add
sahf
or
fildl
add
mov
xchg
add
add
lret
pop
repnz
mov
push
add
sbb
mov
add
mov
std
add
gs
mov
add
cmp
stos
xchg
call
fwait
mov
imul
inc
add
mov
add
mov
jecxz
loope
add
rolb
cs
pop
clc
dec
mov
testl
jecxz
add
add
sti
add
add
mov
push
add
in
mov
jge
popf
adc
popf
and
add
mov
add
cwtl
xchg
push
add
or
xchg
add
add
in
in
lret
lods
pop
xchg
push
xor
hlt
add
popa
or
mov
testb
sti
int
loop
sub
cmc
push
add
add
andl
mov
push
mov
fldl
cmp
sub
add
js
add
mov
add
and
pop
adc
sbbl
rcll
add
sbb
jnp
ret
mov
enter
xchg
add
add
int
add
jae
lock
push
cwtl
inc
add
mov
inc
loopne
js
add
loopne
out
or
in
out
ljmp
pop
loop
xor
sbb
data16
cwtl
fisubrs
imul
mov
add
sysret
fildll
loop
xchg
addb
mov
and
add
mov
adc
add
adc
out
xchg
insb
mov
data16
out
add
and
mov
je
clc
mov
mov
add
xchg
mov
adc
in
add
sub
mov
pop
lcall
nop
add
lret
sub
xor
inc
fnstsw
add
add
mov
add
dec
pop
loopne,pt
bound
mov
mov
add
add
ret
call
add
xchg
mov
xor
aam
add
mov
add
adc
add
fildl
mov
fsubs
xchg
add
add
add
add
mov
add
add
dec
call
push
or
add
and
pusha
add
sbb
add
xchg
push
out
pop
in
stos
aam
push
popa
les
xor
icebp
jne
cmp
push
add
add
mov
xor
fnstcw
test
add
inc
add
xor
add
mov
daa
sbb
sub
add
ss
sub
add
mov
outsb
aad
add
fucom
add
rolb
jno
add
mov
les
cld
push
add
push
aad
add
js
pushf
inc
lret
xlat
push
add
jmp
add
sbb
lcall
adc
push
add
testb
sub
mov
aad
cmp
add
mov
fwait
mov
add
ja,pn
mov
add
ds
loopne
testb
adc
push
das
dec
lret
cltd
rolb
cmp
sub
jns
add
or
dec
jne
add
jnp
cwtl
pop
jbe
test
add
fadd
add
add
add
add
push
add
mov
cmp
add
data16
pusha
add
xlat
push
idivl
ds
jb
lret
cli
push
gs
add
dec
leave
cmp
mov
cli
repz
jmp
or
inc
add
out
sub
add
shrl
add
icebp
bound
mov
add
push
repnz
mov
inc
or
clc
mov
add
jno
xor
cmp
add
dec
rolb
push
les
or
sub
xchg
or
mov
add
mov
add
movsb
add
dec
add
add
sub
inc
xchg
popf
or
lret
adc
xchg
mov
add
push
add
testl
mov
inc
add
add
pop
outsl
pop
push
add
jmp
mov
add
popa
push
add
or
add
add
dec
push
add
adc
call
inc
mov
mov
cmp
dec
mov
add
mov
mov
add
mov
enter
push
cmc
xchg
pop
sbb
add
add
mov
adc
jns
insl
push
push
add
daa
test
clc
adc
mov
test
mov
popf
fimuls
xchg
mov
add
add
push
add
imul
xor
xchg
push
imul
push
and
repnz
and
and
cli
or
mov
sbb
test
imul
add
pop
scas
dec
mov
jmp
add
add
cli
jbe
xchg
add
jp
or
mov
push
mov
mov
call
inc
lea
add
outsl
movb
add
fbld
sub
sub
add
add
add
fiadds
add
lds
scas
mov
mov
outsb
push
lcall
xchg
xchg
pop
push
or
subl
add
xchg
es
dec
insb
movsb
add
mov
call
das
mov
xchg
mov
push
outsl
inc
add
dec
pop
inc
push
add
mov
mov
fcoms
popa
xchg
add
add
add
add
add
mov
cmp
in
aas
shll
cmpsl
lea
add
fsub
pop
lods
mov
add
add
ret
add
and
faddl
mov
sbb
mov
pop
and
mov
leave
and
mov
add
aad
out
movsb
add
clc
das
jmp
mov
hlt
add
testl
add
rolb
jae
xchg
pop
aad
mov
ret
add
sti
add
mov
pop
fdivrl
mov
push
add
add
jns
pop
lcall
je
iret
cmpsl
xchg
testb
add
add
add
std
in
sti
dec
outsl
sub
add
bound
mov
mov
sbb
aad
ja
jo
enter
mov
add
ret
leave
ljmp
dec
pop
outsb
dec
fsubs
inc
add
mov
mov
test
int3
adc
jge
das
and
add
inc
mov
add
es
dec
sub
les
int
add
add
jo
dec
movl
aas
stos
sti
sti
dec
adc
and
mov
enter
imul
cwtl
dec
test
lahf
lds
jno
adc
jmp
xchg
cwtl
aas
xchg
jg
push
mov
std
cmp
aaa
mov
scas
into
sbb
and
mov
add
add
rolb
mov
loop
mov
push
loope
rolb
lahf
fnstenv
repnz
hlt
add
add
mov
cmpsb
add
add
add
in
sbb
sti
mov
add
mov
jne
add
adc
push
add
cltd
dec
inc
add
aas
mov
mov
dec
push
pop
and
mov
mov
mov
add
xchg
add
or
add
xor
paddusb
add
sub
rcll
add
mov
add
add
xor
push
add
add
cmp
mov
add
xchg
add
les
pop
out
pop
mov
mov
roll
scas
dec
ret
mov
jl
mov
comiss
xchg
add
mov
rolb
lret
leave
mov
add
pop
or
fnsave
add
mov
cmp
mov
jbe
push
add
jo
movb
add
pop
outsb
pop
icebp
mov
dec
and
mov
out
adc
push
js
cltd
testb
ret
dec
push
add
add
xchg
dec
xchg
add
inc
add
add
add
pop
lahf
fwait
addb
pop
and
mov
add
add
push
add
and
add
adc
data16
stc
mov
add
shr
out
jb
mov
add
add
add
mov
pop
lahf
imul
gs
push
add
imul
rolb
cmpl
insb
aad
mov
xor
mov
inc
pop
insl
aas
insl
push
add
and
test
and
mov
outsb
add
aad
xor
xor
mov
push
je
push
mov
aas
cmp
ja
les
andl
test
inc
or
jbe
xlat
add
mov
mov
movswl
bswap
jecxz
popa
push
fwait
pop
pusha
add
fdivp
add
repz
lret
xchg
lock
add
cmpsb
add
jo
push
add
popa
mov
sbb
dec
test
xor
cld
mov
xor
rolb
or
test
and
mov
add
add
imul
push
lock
pusha
add
popa
out
js
and
in
daa
adc
add
mov
add
add
jne
xor
bound
mov
inc
add
pop
xchg
add
das
xor
mov
add
addb
sub
sti
jmp
mov
test
adc
pop
test
inc
add
add
add
mov
add
adc
lods
adc
lret
cltd
pop
jno
sub
add
test
push
dec
std
stc
fldt
mov
ret
push
push
add
js
pop
add
mov
add
lret
sbbl
pusha
add
popl
mov
lret
pop
daa
and
addb
push
call
mov
dec
outsb
sahf
scas
ret
jmp
add
in
dec
fnsave
add
add
add
mov
add
add
fcoml
rolb
mov
test
leave
mov
or
add
mov
add
jnp
xchg
jg
jl
add
inc
pop
cltd
mov
push
sbb
jge
shll
out
jmp
add
pop
add
jae
out
into
push
dec
and
loopne
jnp
jne
add
add
outsl
aaa
pushf
inc
add
jbe
push
add
mov
or
xchg
add
add
cs
add
mov
jbe
test
add
call
outsb
hlt
add
add
addb
in
pop
bound
mov
add
andl
aam
stos
repz
repz
mov
out
ret
cs
movsb
add
out
sub
fiadds
dec
jmp
add
std
pop
dec
push
sbb
aam
mov
incb
add
inc
add
rolb
movsb
add
jno
add
pop
mov
in
fmul
outsb
or
add
rcrl
jo
jl
mov
push
sub
test
add
test
cmpsl
cld
or
js
adc
add
mov
dec
out
out
add
push
add
add
mov
mov
xor
push
fisttps
xor
jle
xor
xchg
add
mov
jl
es
add
in
inc
add
sahf
enter
pop
int
repz
mov
inc
add
pushf
pop
cmpsb
add
mov
mov
add
mov
push
add
add
sti
rcl
or
add
and
shll
in
scas
cmp
push
xchg
add
sarl
testb
and
add
dec
mov
test
das
lods
adc
stc
jp
dec
jns
popf
add
add
add
cmpsl
dec
enter
sahf
fcoms
add
bound
mov
lret
mov
add
outsl
popa
sub
imul
sub
or
or
and
cltd
mov
push
add
aas
mov
ret
jge
pop
push
fldenv
jae
add
push
and
mov
or
add
add
jb
addl
add
add
inc
add
jp
add
imul
xor
cli
xor
add
test
pop
hlt
add
jl
cmp
jb
lea
icebp
add
mov
add
mov
jecxz
xor
test
and
mov
xchg
cli
mov
addb
add
or
inc
add
rolb
add
call
arpl
mov
fstpl
add
sub
add
mov
movsl
sbb
add
add
xor
xor
adc
pop
adc
add
add
rolb
dec
xor
add
add
xor
dec
subl
add
add
mov
repz
out
pop
dec
sub
sarl
arpl
add
push
rcrl
add
sbb
fsubrl
cli
lahf
push
loopne
insb
xchg
loop
ljmp
hlt
add
xor
lahf
movl
outsb
xlat
jnp
mov
or
push
sub
jg
push
add
iret
mov
mov
mov
mov
add
insl
testl
add
and
add
jbe
icebp
xchg
rolb
data16
scas
xor
mov
push
imull
call
sbb
addr16
add
cmpps
pusha
add
pop
movb
shrl
enter
vmovapd
roll
inc
add
in
xor
add
add
adc
in
scas
add
outsl
mov
into
add
mov
mov
add
jmp
and
push
cmpsl
mov
add
mov
scas
mov
lods
sbb
lahf
jae
add
xor
jns
fwait
pop
add
mov
add
lcall
sub
aad
xchg
loope
xchg
add
jge
xor
cmpsb
add
mov
add
les
jg
outsl
jne
loope
int3
add
add
add
add
mov
lods
rcr
pop
pop
jae
cmp
mov
mov
fstps
push
sub
movsb
add
movsb
add
add
add
cs
int
jne
add
aaa
xor
nop
add
mov
add
add
fnsave
in
icebp
sub
popa
mov
in
jp
mov
add
repz
dec
test
mov
mov
adc
add
add
jo
fistpll
add
enter
fwait
add
sbb
add
insl
or
add
inc
add
xor
dec
gs
pushf
jns
add
xchg
mov
mov
jecxz
sbb
cmc
faddl
mov
inc
add
sbb
add
push
add
addb
add
add
cmp
loopne
or
clc
pop
xchg
add
xlat
or
aaa
mov
adc
add
add
fimuls
add
aaa
xor
adc
movb
dec
stos
jmp
jne
ja
add
mov
mov
bound
mov
add
jne
stos
push
mov
sub
in
mov
imul
add
sbb
add
cld
dec
push
pop
lahf
adc
and
add
ja
ret
sub
addb
add
and
fstps
add
mov
rcl
push
cmpsl
imul
or
bound
mov
add
mov
jge
sub
fildll
cmp
loope
mov
fbstp
cmp
add
jns
lods
adc
rcl
call
inc
add
jl
push
add
or
ljmp
push
adc
xchg
mov
add
inc
inc
add
dec
push
call
mov
jno
loopne
mov
adc
dec
movsl
sub
jnp
cmpsl
add
jmp
add
push
mov
test
int3
addb
jno
jno
mov
cltd
bound
mov
and
mov
add
and
or
push
ljmp
daa
add
add
add
add
push
add
jns
or
jbe
iret
dec
cli
mov
icebp
loope
cmp
add
adc
iret
jo
nop
add
stc
fwait
imul
clc
push
clc
mov
add
test
mov
and
jmp
int3
cmp
jb
push
jno
mov
mov
add
add
add
jae
add
xchg
xchg
xchg
out
out
imul
cmc
xchg
mov
add
repz
or
inc
xor
add
cli
mov
sbb
mov
sbb
add
lret
or
add
xor
add
add
pop
add
add
std
stos
cmp
sbb
add
add
mov
add
test
jl
add
mov
add
add
outsb
repz
data16
add
mov
push
add
add
add
add
flds
rolb
and
mov
add
jnp
shl
add
test
out
mov
sbb
jbe
inc
add
add
push
add
mov
fcoml
iret
mov
pop
adc
mov
and
shll
in
cs
add
add
call
popf
dec
pop
pop
in
insb
flds
xorl
pop
mov
add
stos
push
push
inc
fists
xor
cld
jb
mov
jg
add
add
add
mov
adc
add
push
lret
les
dec
lea
add
push
add
add
add
jmp
movb
sarl
stos
repz
add
movsl
sbb
popf
sbb
or
imul
push
rolb
mov
mov
mov
add
mov
and
push
jae
mov
addb
jns
add
mov
add
sbb
mov
add
add
add
add
movsl
xor
aam
mov
xchg
add
add
add
xor
test
mov
adc
imul
les
sbb
add
push
add
cmp
inc
add
loopne
rolb
movb
fildll
repnz
stos
iret
aaa
and
sbb
loopne
pushf
shrl
mov
add
jge
jecxz
fstl
mov
aad
outsl
push
and
push
add
ret
mov
add
add
fistpll
xor
sub
jge
lock
icebp
xor
mov
insl
jg
add
into
xchg
add
cltd
cwtl
out
das
pop
inc
add
mov
stos
or
mov
cmp
stos
sbb
jl
mov
mov
add
int3
jmp
nop
add
jge
pop
hlt
add
cltd
jbe
mov
cwtl
sub
sbb
test
sub
push
add
iret
test
call
pop
add
mov
fisttpll
cld
ret
adc
mov
imul
mov
add
add
jmp
cmp
add
xor
fstpl
jne
int3
pop
imul
or
add
dec
or
push
add
jb
fildl
adc
xchg
into
push
add
mov
add
rolb
jae
daa
dec
inc
or
pushf
mov
inc
add
fimull
sbb
out
scas
in
loopne
std
push
add
add
mov
ret
inc
push
mov
add
inc
add
bound
mov
push
add
fdivr
addr16
add
push
ja
inc
add
lahf
xchg
mov
add
add
mov
pop
sbb
dec
xor
add
mov
xchg
stos
mov
add
xchg
add
mov
sar
mov
lahf
out
push
add
pop
mov
push
insl
daa
sbb
mov
adc
add
add
push
mov
aad
arpl
cmp
insl
es
push
add
add
mov
pop
pop
xchg
aas
test
insl
test
fcom
nop
add
push
out
dec
repz
sub
add
les
das
dec
cs
out
add
push
dec
lods
scas
mov
and
fcoms
add
add
push
add
dec
adc
mov
add
jo
add
mov
rolb
lcall
sbb
jne
and
dec
pop
addr16
cmp
mov
movb
add
addb
and
mov
add
add
mov
add
ficomps
addl
inc
add
call
push
add
xchg
mov
movsl
lock
pop
lret
push
add
add
addb
jmp
iret
lods
cs
add
add
inc
add
sbb
adc
rcrl
std
daa
pop
adc
xchg
push
shrl
or
je
cmp
aam
aas
xchg
add
add
inc
aaa
dec
cmp
imul
pop
push
inc
add
add
js
clc
or
xor
loop
or
push
jo
mov
jg
add
sbb
add
add
rolb
dec
add
add
add
mov
add
add
cmpsb
add
add
or
sbb
rolb
ja
pop
cmp
add
ljmp
add
add
sub
mov
sub
add
les
mov
inc
add
cmpl
subl
ror
mov
inc
add
add
add
loop
sub
in
pop
pop
xchg
jmp
scas
xchg
push
add
aam
jg
pop
popf
cwtl
push
loop
adcl
je
dec
sbb
orl
lods
xlat
mov
add
fldenv
daa
add
cwtl
fisubs
mov
mov
rolb
aad
mov
loope
and
mov
add
int3
adc
add
push
test
jbe
addb
incl
out
xchg
add
dec
lock
mov
add
orps
mov
add
mov
mov
jl
out
push
add
or
xchg
scas
mov
outsb
fcomps
mov
and
pop
pop
xchg
add
mov
hlt
add
aam
add
add
add
add
add
add
ret
add
add
add
push
incl
sbb
stos
sbb
cmp
mov
jnp
add
add
scas
mov
xchg
adc
jle
xor
mov
add
test
mov
sahf
xchg
pop
enter
stos
sti
test
cmp
add
mov
mov
decb
push
add
add
popf
fsubr
test
lret
or
jle
xchg
push
add
push
add
sub
cmpsl
daa
cli
std
mov
add
in
test
nop
add
or
movsb
add
add
imul
jecxz
add
int
scas
mov
imul
push
cmp
add
out
push
add
je
dec
lcall
cmc
arpl
add
jno
xor
pop
adc
cmpsb
add
outsb
xor
dec
add
gs
add
dec
fbld
add
add
add
pop
add
add
mov
mov
outsl
jle
mov
ds
test
add
add
aam
lea
mov
mov
je
arpl
xor
jp
ret
mov
int
sub
outsb
inc
into
dec
add
add
div
dec
rolb
mov
add
add
or
xchg
add
mov
sub
add
mov
xlat
pop
out
xchg
inc
add
adcl
mov
inc
in
fisubs
sbb
jmp
js
ja
add
add
insl
gs
out
push
add
pop
dec
lahf
ljmp
fldl
mov
add
pop
jb
mov
add
add
insb
fstpl
cmpsb
add
add
mov
mov
jl
in
adc
loop
xchg
pop
fisttpl
scas
dec
push
push
popl
add
adc
pop
mov
fisubrl
push
lods
cli
nop
add
int
sti
loop
jne
add
add
mov
call
out
add
dec
test
loope
inc
repnz
xor
cmp
add
add
sahf
movsl
cmpsb
add
mov
xchg
pop
sbb
stos
or
lret
pusha
add
add
mov
ret
sub
add
xorl
mov
adc
add
ror
imul
in
mov
les
ja
add
mov
das
xchg
add
mov
jg
dec
fcompl
add
add
mov
in
dec
mov
mov
xor
mov
rolb
repnz
jecxz
add
mov
ds
sbb
add
mov
add
in
jne
pop
inc
or
imul
pop
cmp
jb
insl
in
inc
add
add
mov
or
hlt
add
repz
xchg
add
cs
xor
mov
jle
dec
mov
mov
rolb
jle
add
add
mov
cmp
arpl
xchg
add
lock
add
lahf
pop
mov
mov
or
std
and
add
addb
add
adc
lock
push
add
add
jle
add
add
ret
add
jno
pop
mov
add
or
ret
jns
add
add
sub
add
shll
add
pop
les
aas
push
xor
in
test
out
mov
jl
add
les
mov
add
xchg
add
gs
add
jo
xor
dec
and
test
cli
sbb
add
dec
mov
mov
add
in
insb
gs
cltd
addb
mov
add
dec
mov
sub
sbb
add
add
add
lods
lds
add
mov
add
rolb
scas
add
and
movb
insb
js
mov
enter
notl
add
aam
or
lods
add
mov
add
and
mov
push
fwait
stc
addb
add
add
mov
das
pop
sbb
outsl
int
and
add
pop
pop
sub
xor
cmp
xchg
fimull
add
mov
jnp
dec
fsubrl
add
mov
add
add
je
and
mov
fcoms
sbb
dec
aas
ret
add
test
lcall
add
dec
cli
cwtl
pop
xchg
add
add
or
add
add
insl
sub
fistl
cmpsb
add
fwait
inc
add
add
imul
xor
imul
add
or
pusha
add
xchg
js
add
out
adc
das
sbb
cmp
rol
loop
or
pop
push
test
jo
loop
mov
jl
add
jmp
lahf
xchg
mov
jge
push
cli
frstor
in
sub
in
adc
movb
sub
inc
cwtl
subl
loop
inc
mov
std
lret
jge
les
mov
add
sbb
jl
xchg
xchg
and
add
add
cmp
or
clc
add
push
add
fdivrl
mov
test
or
fildll
rolb
adc
fwait
imul
fildl
mov
add
or
in
or
in
mov
add
movsb
add
add
add
push
pop
stos
dec
sbb
int3
int
rcll
out
sub
inc
add
add
into
jbe
cmc
popa
sbb
adc
push
cwtl
popl
and
mov
xor
je
pop
movl
add
jecxz
arpl
mov
mov
add
add
mov
add
mov
jae
add
and
sub
jno
xchg
jmp
inc
popa
data16
mov
push
clc
sahf
sbb
repz
mov
mov
nop
add
xchg
rcll
sub
add
clc
mov
rolb
pop
push
mov
pop
nop
add
add
push
sbb
sub
push
add
add
mov
daa
mov
pop
and
das
dec
test
mov
enter
addb
xor
pop
imul
push
add
push
arpl
mov
mov
xchg
cli
and
cld
pop
cltd
push
mov
mov
jp
sahf
mov
xchg
add
out
lods
inc
add
arpl
add
popa
ljmp
pop
mov
add
add
xor
outsb
repnz
sub
push
icebp
xchg
add
dec
mov
movsl
xchg
add
xor
cmp
clc
or
add
add
sub
jmp
add
add
xchg
add
jecxz
repnz
bound
mov
add
popf
test
add
and
mov
or
add
mov
xchg
push
add
scas
dec
sbb
add
sbb
add
add
add
add
hlt
add
lea
cmp
mov
add
sub
add
push
add
jecxz
add
adc
mov
mov
out
addb
in
mov
push
test
into
aad
mov
fldt
fldl
dec
test
addb
add
xchg
mov
lea
sbb
add
or
push
add
adc
lcall
mov
rolb
add
adc
daa
add
jl
aad
and
mov
stc
cltd
mov
int3
pusha
add
jo
push
add
ss
in
out
mov
popa
sub
cltd
xor
sbb
inc
add
add
mov
mov
je
xor
add
inc
add
sbb
clc
mov
mov
mov
mov
jns
addr16
xchg
pop
stc
in
arpl
cmp
cmpsb
add
ljmp
hlt
add
cmc
mov
pop
clc
sub
xchg
add
add
cmc
aas
fdivrl
outsl
outsl
bound
mov
add
mov
sbb
mov
add
sbb
fwait
rolb
inc
add
dec
and
mov
add
add
mov
add
add
out
mov
movl
out
xchg
inc
add
cltd
xchg
add
mov
jo
fldenv
inc
iret
push
pop
fsts
adc
pxor
add
mov
cmp
add
aaa
in
mov
lret
leave
sbb
mov
aaa
nop
add
add
add
fucom
add
add
dec
inc
add
add
add
sbb
jnp
ds
test
negl
iret
int3
js
jo
movsl
push
add
in
pusha
add
imul
mov
inc
in
cmp
fiaddl
mov
add
add
repnz
cld
sbb
add
xchg
cmp
bound
mov
decb
and
add
sbb
les
xchg
add
inc
in
sbb
add
sub
shll
add
push
add
mov
imul
add
enter
outsb
test
dec
clc
call
test
add
ret
out
add
mov
add
add
xor
cmp
add
push
iret
xor
add
jo
push
add
add
movsb
add
add
inc
idivl
xchg
add
mov
xor
mov
and
pop
jne
mov
add
and
mov
jno
lods
movb
add
dec
sbb
testb
add
iret
xor
push
out
pop
jge
add
lods
hlt
add
lods
adc
mov
jp
add
icebp
rolb
inc
outsl
cmp
sub
add
add
cli
arpl
enter
mov
or
and
ljmp
add
mov
add
mov
mov
mov
ret
xchg
pop
mull
add
add
cmpl
mov
jae
jbe
inc
add
add
adc
sbb
add
call
daa
movhps
add
add
mov
ret
add
add
test
xchg
add
add
fists
add
push
rolb
pop
clc
mov
push
add
sbb
mov
add
std
and
mov
push
add
add
jmp
dec
or
xchg
add
jmp
test
add
dec
ss
pusha
add
xor
inc
test
add
mov
mov
inc
add
add
mov
add
cs
mov
sbb
inc
add
and
pop
mov
out
movsb
add
add
mov
es
or
add
jne
adc
push
js
add
movsl
xor
rcrl
stos
sarl
add
dec
shll
std
pushf
cmp
imul
mov
mov
add
add
add
popa
cs
stc
mov
fadd
add
dec
sbb
iret
adc
bound
mov
gs
popa
xchg
pop
or
mov
cli
and
mov
test
incb
jge
pop
mov
std
push
mov
aad
jnp
popf
jg
jae
mov
gs
cmp
popl
lea
int
sub
add
pop
lcall
cmpsb
add
mov
dec
stos
sub
add
pop
testb
add
add
mov
mov
xor
lds
jecxz
stos
mov
jo
ds
jnp
push
add
lahf
jnp
lcall
aas
das
add
aam
xor
add
add
aas
insb
out
data16
mov
hlt
add
jmp
or
lods
in
nop
add
push
fs
rolb
repnz
mov
out
rorl
mov
lret
int3
in
pop
push
add
insb
into
lds
rolb
lahf
pop
push
add
imul
add
add
push
add
imul
or
jno
popa
add
mov
ds
jge
add
and
sbb
push
xchg
fidivl
jnp
aaa
mov
pop
aad
lock
add
add
add
jne
add
cmpsb
add
jp
add
adc
mov
call
add
add
add
add
add
roll
mov
pop
lret
test
add
add
xor
mov
add
ds
aas
jns
push
add
add
add
add
insl
test
add
daa
rolb
push
add
inc
add
cs
inc
mov
in
dec
into
addb
mov
add
add
add
test
lds
push
add
out
mov
rolb
add
and
add
and
rcrl
add
scas
lods
ljmp
push
add
scas
inc
adc
mov
minps
add
or
ja
out
cwtl
dec
inc
mov
les
lahf
mov
mov
add
lret
call
xchg
add
add
pop
fdivrs
xor
fimuls
add
dec
dec
push
mov
add
push
add
sbb
add
sbb
xchg
add
addb
add
add
add
cmp
add
sbb
or
adc
and
std
out
iret
xchg
add
mov
in
add
mov
lds
mov
fsubl
mov
in
das
jl
add
add
out
rolb
xchg
add
mov
push
insl
fdivs
dec
rolb
xchg
jne
push
rolb
insl
fimull
add
pop
es
clc
sahf
ficoms
add
jnp
dec
jp
push
add
out
xchg
pop
out
ret
add
sbb
mov
add
add
and
mov
cwtl
por
mov
add
imul
inc
lds
add
inc
add
jg
add
add
add
dec
insl
imull
scas
mov
push
movb
out
cmp
add
data16
mov
arpl
xor
add
cli
lods
xor
add
int
fldcw
cmp
leave
or
add
jge
add
test
stos
stos
pop
addb
test
pop
xchg
cwtl
pop
and
pop
popf
ja
enter
add
mov
stos
pop
cmc
fstl
add
test
inc
xor
sbb
add
mov
push
mov
mov
or
sub
cmp
and
mov
testl
lahf
mov
push
add
pushf
pop
jnp
add
bound
mov
pop
push
add
and
mov
mov
add
jp
mov
les
out
add
add
add
add
add
and
add
cmovbe
jae
xchg
dec
mov
imul
lea
add
pop
pop
rcrl
and
mov
pop
cmp
add
fmul
xlat
dec
shr
mov
add
xchg
arpl
push
out
in
icebp
pop
hlt
add
mov
pop
pop
inc
add
add
mov
repnz
ret
mov
call
lods
movsl
in
pop
sbb
aam
adc
mov
push
ja
mov
in
add
xchg
bound
mov
pop
das
subl
je
mov
jle
inc
add
test
clc
ret
jg
xchg
add
mov
iret
dec
subl
xor
icebp
dec
data16
mov
cmpsl
or
push
repz
out
insl
mov
stos
scas
fwait
pop
lcall
add
inc
leave
in
out
jae
add
mov
sub
dec
fimull
sbbl
pop
sub
imul
mov
jecxz
add
mov
push
add
push
add
push
test
inc
movsl
lock
ret
mov
add
jg
cltd
push
test
xor
ret
sub
fs
data16
add
mov
ud0
add
loope
add
pop
mov
insb
jbe
into
inc
jmp
sub
rolb
inc
cmp
stos
or
inc
add
add
rcl
jns
add
cmpsl
sahf
stos
mov
das
lcall
jge
testb
fdivrs
adc
les
mov
jno
int
data16
iret
mov
jge
add
add
add
sbb
jl
mov
ljmp
insl
dec
mov
add
xlat
cwtl
movsb
add
add
mov
mov
add
lcall
sbb
testb
add
int
mov
add
mov
scas
arpl
lcall
push
enter
pop
fwait
or
nop
add
cs
mov
xor
mov
add
addb
cmp
push
xor
repz
add
iret
fs
add
add
cld
aam
sub
gs
add
testl
xchg
into
sub
jb
aaa
sub
or
sbb
aaa
jg
add
mov
add
iret
imul
mov
add
add
fwait
leave
movsl
cmp
mov
movsl
inc
mov
or
add
mov
add
mov
mov
ret
mov
std
adc
ljmp
add
mov
mov
xor
andl
add
sub
fnstsw
fcmovnu
stos
adc
in
dec
test
add
rolb
jg
pop
leave
xchg
aam
aas
inc
lcall
lds
lock
pushf
jnp
sub
mov
aas
lcall
rolb
lods
rolb
lds
add
adc
popa
test
add
add
cmpsb
add
mov
add
sbb
or
cmp
add
add
mov
mov
adcl
push
call
add
jp
mov
add
add
ret
mov
sub
add
cmpsb
add
mov
roll
pop
push
inc
mov
mov
xor
push
dec
jno
cmpsl
leave
push
xlat
pop
sub
push
add
stos
add
mov
add
inc
add
sub
add
add
cli
popf
jnp
add
aam
sub
jbe
jne
ret
rolb
gs
pop
pop
push
add
mov
cwtl
sub
fwait
xchg
mov
jge
add
inc
add
addr16
jbe
leave
add
je
sub
stos
out
push
pop
aaa
testb
add
jae
add
imul
add
pop
push
aam
in
aaa
out
xor
add
pushf
stos
loop
adc
inc
bound
mov
jne
jle
cmp
sbb
addb
xchg
add
add
add
into
mov
add
sbb
push
push
add
add
xchg
add
enter
loop
xor
add
cmpsb
add
mov
add
xchg
jl
xor
add
add
mov
les
ret
add
popa
and
add
rolb
in
aam
iret
leave
js
stos
loopne
cmpsl
and
add
cmp
add
cmc
pop
add
nop
add
add
xor
movb
bound
mov
lret
add
mov
dec
pop
cld
bound
mov
add
add
push
lds
cmp
add
jg
gs
mov
bound
mov
sub
dec
mov
iret
fwait
cli
popa
addb
or
add
add
ja
cmp
sub
neg
rolb
out
or
pop
xchg
push
fcoms
pop
jg
iret
idivl
and
mov
push
or
out
hlt
add
xchg
or
mov
mov
add
mov
ljmp
push
lock
xor
xchg
mov
mov
fidivs
add
je
imul
outsl
icebp
xchg
out
add
cmc
cmp
movsb
add
mov
cmp
mov
in
jb
jae
push
in
fcomi
outsl
cltd
pop
xlat
mov
pop
and
mov
jecxz
in
add
mov
sbb
add
out
in
or
inc
popa
pop
xchg
add
fisubrl
mov
mov
jle
xor
push
lret
jns
cmp
push
add
cmp
add
inc
push
and
mov
mov
add
js
xchg
add
mov
out
pop
mov
cli
pop
dec
lret
push
jp
push
jno
cwtl
aad
out
jle
cld
pop
out
pusha
add
icebp
stos
adc
std
xor
cmpsl
inc
mov
negl
pop
je
mov
insb
pop
das
jmp
add
imul
lods
push
sahf
xchg
push
inc
add
mov
add
add
add
mov
insb
xchg
add
add
adc
mov
or
xchg
add
pop
push
or
cmc
sbb
rolb
into
jno
das
loope
mov
add
xor
addb
test
add
aaa
push
add
cmp
add
add
mov
add
pop
out
xchg
in
push
add
nop
add
out
mov
ja
sub
mov
add
xchg
add
add
xor
xor
mov
pushl
cld
pop
imul
add
icebp
push
add
add
add
add
push
add
add
ret
add
pop
jno
fnstsw
icebp
test
xchg
lahf
scas
jl
push
add
stos
pop
nop
add
add
fwait
bound
mov
add
ds
in
je
das
sbb
mov
add
lock
sub
push
jae
gs
add
cmc
and
les
adc
flds
add
mov
pop
and
jge
add
pop
dec
add
gs
add
ds
inc
add
add
add
xor
jl
add
add
ljmp
add
ficomps
sbb
push
add
call
push
add
mov
sbb
mov
sbb
add
mov
fsubs
mov
adc
pushf
and
mov
add
pop
cmp
testb
xor
and
mov
add
add
xchg
inc
push
add
sti
stos
sti
mov
cmp
add
and
xchg
scas
scas
or
pop
sahf
mov
addb
insb
popa
fwait
ret
test
sti
pushf
cwtl
add
mov
add
shrl
scas
cmp
pop
cmpl
jle
and
add
add
lods
jmp
jb
jne
xor
loopne
xor
movb
add
adc
or
std
pop
fnsave
jl
sub
adc
xor
ja
xor
add
jb
test
addb
cmp
jnp
js
in
jle
leave
xlat
sarl
jb
push
add
in
fdivr
pop
popa
mov
inc
push
std
jns
push
add
dec
mov
and
hlt
add
insb
xchg
add
sbb
call
add
or
or
push
add
add
inc
enter
test
add
icebp
and
loopne
push
xchg
add
addb
add
add
add
mov
dec
mov
adc
mov
sub
xor
inc
add
aad
add
jno
dec
cmpsb
add
add
or
cmp
mov
pop
insl
sub
stc
add
mov
stos
cmp
jg
inc
inc
cmp
sbb
rolb
mov
add
xchg
aaa
ds
add
cmp
aaa
iret
popf
fwait
jnp
add
dec
jl
loopne
dec
es
add
sbb
add
xchg
mov
insb
cmp
or
add
add
inc
and
mov
nop
add
repz
xchg
add
cmp
add
lahf
imul
add
jns
cmp
ljmp
pop
jns
mov
stos
cmpsl
shl
inc
add
clc
addb
into
dec
dec
outsl
xor
lcall
ds
gs
xchg
add
lea
and
mov
add
xor
iret
add
add
add
shll
fidivrs
add
add
jecxz
jnp
add
ret
xor
and
add
add
stc
dec
xor
out
subl
push
add
add
mov
mov
add
push
mov
add
add
mov
add
mov
mov
add
add
add
or
jle
pusha
add
cs
arpl
jb
cmc
gs
or
rolb
ja
addb
add
xor
and
add
add
mov
sub
dec
out
pop
roll
inc
add
inc
dec
push
in
stos
add
cwtl
or
add
or
nop
add
sub
cmpsb
add
add
repnz
or
inc
add
jecxz
add
inc
add
or
add
ret
jae
sub
add
or
add
mov
addl
movb
add
add
sbb
ds
lcall
add
sub
add
mov
pusha
add
add
cs
in
sbb
add
enter
movsb
add
call
xor
push
add
repz
les
pop
das
out
cmp
add
iret
dec
std
int
push
pop
push
stos
mov
fsub
cltd
inc
add
in
xchg
nop
add
cli
jl
rolb
add
jo
xlat
test
bound
mov
iret
out
enter
in
stos
sbb
mov
scas
popa
xor
inc
data16
add
out
fmull
add
fsubr
cmp
add
lahf
mov
push
add
adc
das
push
add
add
add
add
out
frstor
add
add
sub
add
push
dec
add
push
add
mov
pop
int
or
add
iret
xlat
pop
jg
add
pop
hlt
add
add
push
jecxz
pop
xchg
mov
loop
jl
rorl
pop
gs
xor
or
jne
add
stos
lcall
add
dec
mov
popa
ds
sbb
iret
xchg
mov
lock
add
stc
mov
add
xchg
cmc
rcll
lahf
je
cmc
add
jp
mov
lahf
jge
cmpsl
or
add
pop
cmp
xchg
add
sub
orl
mov
add
xor
jb
movsl
das
mov
inc
add
in
inc
add
mov
pop
jg
mov
mov
jno
add
cltd
scas
daa
inc
add
pushf
dec
mov
pop
aas
cli
loopne
daa
lds
popf
js
push
add
add
cmp
add
mov
mov
sub
lahf
add
mov
add
inc
loop
mov
add
mov
dec
aam
int3
adc
cltd
fldt
add
mov
add
out
andl
cmp
jns
add
sbb
dec
jmp
testb
loope
leave
xor
lods
inc
adc
mov
std
xor
mov
stos
call
jnp
push
and
mov
jnp
dec
in
testb
pop
fildll
mov
ret
iret
clc
repz
