add
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loope
loope
loope
loope
loope
loope
loope
fnstenv
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
fnstcw
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
aam
aam
aam
aam
aam
aam
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
lds
data16
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
in
in
in
inc
inc
inc
inc
inc
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
arpl
nop
nop
nop
nop
nop
nop
nop
push
push
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
jge
jge
jge
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
notl
nop
nop
nop
nop
roll
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
add
ds
ds
ds
ds
ds
ds
enter
enter
enter
enter
enter
enter
enter
enter
sub
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
fcmovnu
add
add
sti
sti
sti
aaa
aaa
aaa
aaa
aaa
aaa
aaa
mov
aas
aas
nop
xchg
xchg
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
sub
sub
sub
sub
sub
ja
ja
ja
ja
ja
divb
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
aaa
jle
jle
jle
jle
jle
out
out
out
out
pop
pop
pop
pop
pop
pop
pop
pop
pop
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aam
aam
aam
aam
aam
les
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
in
in
in
in
in
in
in
in
in
div
div
div
div
div
div
div
div
div
div
notl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fidivs
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
mov
mov
mov
mov
mov
lret
or
or
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
pause
nop
nop
nop
nop
nop
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fcmovu
fisubl
data16
data16
data16
data16
data16
data16
data16
data16
insl
insl
insl
insl
insl
insl
insl
insl
es
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
and
and
and
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
aam
ja
ja
ja
ja
ja
ja
ja
ja
cmp
cmp
cmp
cmp
cmp
call
call
call
call
push
push
push
push
push
push
push
push
push
push
das
das
das
das
das
das
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lahf
lahf
pop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
mov
inc
inc
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
scas
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lret
lret
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
popa
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
addl
addl
addl
addl
addl
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fwait
fwait
fwait
fwait
fwait
fwait
fwait
xchg
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
jmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
jp
jp
jp
jp
jp
jp
jp
jp
jp
add
add
add
add
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
and
int
int
int
int
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
nop
insl
insl
insl
insl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
addb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
cmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
mov
mov
mov
nop
nop
nop
nop
call
push
push
push
push
push
push
push
push
push
push
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
loop
loop
loop
loop
loop
loop
loop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
sub
sub
sub
sub
sub
sub
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
or
or
addl
addl
addl
or
or
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
push
push
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
jge
cmp
cmp
cmp
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
clc
clc
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
imul
imul
imul
imul
imul
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
xchg
xchg
xchg
xchg
pop
pop
pop
push
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
je
je
je
je
je
je
je
je
je
je
je
je
je
je
scas
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
sahf
loop
loop
loop
std
std
std
std
std
std
std
std
lcall
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
call
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
je
je
je
je
je
je
je
je
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
das
das
das
das
das
das
das
das
das
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
div
div
div
div
div
div
div
div
div
div
div
div
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
ds
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
or
or
addl
addl
addl
addl
addl
addl
addl
addl
addl
nop
nop
nop
nop
nop
nop
nop
nop
ds
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
push
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
xchg
xchg
xchg
xchg
ljmp
ljmp
ljmp
adc
adc
adc
adc
adc
adc
adc
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
jg
jg
jg
jg
jg
jg
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
test
test
test
test
test
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
les
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
test
test
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
div
neg
adc
adc
adc
adc
nop
nop
nop
nop
nop
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
lret
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
jl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
mov
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
std
addl
in
in
in
in
outsl
outsl
outsl
outsl
outsl
outsl
outsl
outsl
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
loope
loope
loope
loope
loope
loope
loope
loope
loope
add
add
add
add
add
add
add
add
add
add
add
add
add
pusha
pusha
pusha
pusha
pusha
pusha
pusha
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jne
jne
jne
jne
jne
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
jb
jb
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
sub
sub
sub
in
in
in
in
in
in
in
in
in
mov
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcomp
and
and
and
and
and
and
and
and
and
mov
push
push
push
push
push
out
out
out
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
ja
ja
ja
ja
ja
and
and
and
or
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
jl
jl
jl
jl
jl
jl
jl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
jns
test
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
lret
lret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
aad
aad
aad
aad
aad
aad
inc
inc
inc
inc
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
cltd
cltd
cltd
cltd
cltd
cltd
cltd
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
in
in
in
in
in
in
in
in
in
in
in
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
fstl
push
push
push
push
push
push
push
push
push
push
push
push
push
imul
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
icebp
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
insl
out
xchg
imul
imul
imul
imul
imul
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
mov
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
loop
loop
loop
addl
addl
addl
addl
addl
addl
sbb
in
in
in
in
in
in
in
in
in
in
in
rcl
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
mov
nop
nop
nop
nop
ficoms
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
or
mov
mov
mov
sbb
sbb
sbb
sbb
sbb
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
add
add
cmc
cmc
cmc
cmc
push
push
push
push
push
push
push
pop
pop
repnz
repnz
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aad
aad
aad
aad
aad
aad
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
pop
pop
pop
pop
pop
pop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
div
div
div
div
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
sbb
sbb
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
jne
jne
jne
jne
jne
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cs
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
outsl
outsl
outsl
outsl
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
fcomp
nop
nop
nop
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
rcl
mov
loope
loope
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
sub
sub
sub
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
fcmovu
fcmovu
xchg
xchg
xchg
xchg
xchg
xchg
xchg
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
mov
mov
mov
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
jno
loop
loop
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
addb
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
hlt
hlt
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
and
and
jmp
sub
sub
sub
sub
sub
sub
sub
sub
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
mov
nop
nop
nop
nop
test
test
test
test
test
test
test
test
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jo
jo
jo
jo
jo
jo
add
nop
nop
nop
nop
nop
nop
nop
nop
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
or
or
or
or
or
or
or
or
mov
test
test
test
test
test
test
nop
nop
nop
nop
ds
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
nop
nop
nop
nop
nop
nop
nop
nop
loop
loop
loop
loop
nop
nop
nop
xchg
xchg
mov
mov
mov
mov
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
cltd
push
push
push
push
push
push
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
imul
imul
imul
imul
imul
imul
imul
imul
imul
imul
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
js
or
or
or
or
mov
mov
mov
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
in
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
lods
lods
std
std
std
std
std
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
rol
rol
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
rol
rorl
push
push
push
push
push
push
push
cmp
cmp
cmp
cmp
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
in
in
in
in
in
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
adc
push
push
push
push
push
push
push
push
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
loop
loop
loop
loop
loop
loop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
mov
mov
nop
nop
nop
nop
nop
nop
nop
nop
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
out
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
jae
jae
jae
jae
mov
mov
mov
xchg
xchg
xchg
xchg
xchg
xchg
nop
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
nop
nop
nop
nop
nop
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
cwtl
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
iret
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
pushf
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
nop
dec
xchg
stos
push
mov
test
add
mov
test
push
jno
mov
shrb
add
add
cmp
add
mov
test
push
add
pop
add
or
data16
insl
pop
adc
mov
add
mov
adc
add
add
add
gs
push
add
adc
jecxz
std
dec
add
add
mov
mul
icebp
mov
rolb
aad
xor
repnz
inc
add
sub
mov
xchg
inc
add
adc
sub
xor
sub
dec
popf
mov
mov
add
sbb
mov
adc
pop
sbbb
fadds
aas
mov
popa
sbb
pop
mov
add
add
pop
add
mov
js
jge
add
add
fsubrs
add
sub
popf
inc
add
lea
add
ljmp
sbb
add
xor
adc
aad
add
jg
call
add
mov
add
jp
cld
xchg
and
mov
add
testb
adc
sbb
xchg
into
add
fwait
add
add
sub
push
add
jbe
ret
bound
adc
lds
imul
jp
dec
sbb
je
fs
in
inc
add
xchg
jo
mov
sub
pop
aas
or
cmpsb
cmp
xchg
jle
dec
add
add
cmpsb
pop
xor
inc
add
push
add
push
add
sub
adc
add
sbb
pop
push
add
xchg
mov
add
mov
stos
ss
fmull
fcomps
in
xor
or
fdivrl
fadds
jecxz
add
inc
add
jo
imul
dec
jns
xchg
sti
jmp
pop
dec
inc
aaa
mov
out
data16
movsl
mov
add
neg
mov
or
cld
imul
aad
xor
shlb
add
js
push
add
sti
cmpl
add
add
mov
add
dec
add
or
decl
xchg
inc
sbb
std
call
loopne
push
popa
sub
cmp
js
cmp
lcall
and
movsl
jns
add
in
jb
sub
into
mov
test
cmp
jp
adc
sub
fisttpll
add
pop
add
mov
imul
add
jae
lods
xorl
jle
lcall
mov
stc
push
add
push
add
lock
adc
add
pop
leave
fstps
add
jp
rol
add
insb
add
pandn
pop
pop
mov
xor
sti
rcrl
lods
ja
add
lahf
dec
add
add
add
or
push
xchg
fmuls
add
rolb
dec
loopne
xchg
push
mov
mov
add
add
pushf
movsl
xlat
movsb
inc
add
sbb
pop
add
jp
int
sub
nop
shll
repnz
add
add
loopne
add
lea
arpl
add
jne
and
cmp
inc
imul
aaa
hlt
mov
sahf
lahf
fmulp
mov
adc
fisttps
and
mov
dec
cmp
repnz
mov
push
add
fstpt
xchg
cmp
dec
add
cmp
lahf
xchg
mov
dec
lret
or
aas
and
push
add
cmc
or
push
add
mov
loop
add
mov
iret
mov
lret
lock
fiadds
push
mov
cmp
adc
rcl
mov
and
mov
movsl
mov
add
sub
push
dec
push
add
dec
add
add
add
jae
add
push
cltd
iret
aam
fcoms
jno
jle
pushl
mov
add
movsl
xorb
std
iret
cmpsl
push
xchg
jle
mov
xor
imul
or
xlat
pop
add
push
add
dec
add
and
sbb
inc
popa
xor
adc
xchg
inc
add
add
outsl
dec
out
shlb
lcall
mov
add
add
repnz
add
xchg
adc
dec
adcl
add
add
add
mov
rcrb
mulb
fwait
sub
sbb
in
push
push
push
pop
sub
adc
std
subl
cmc
xor
leave
pop
fstps
push
add
sub
sub
mov
add
hlt
loop
xchg
clc
jo
pop
mov
fdivrp
dec
add
xchg
mov
add
sbbl
fwait
dec
add
sub
jmp
push
inc
mov
enter
cmpsl
add
lock
repz
imul
add
cmp
cmp
cmpsl
bound
pop
add
and
sahf
inc
add
scas
jle
lds
xor
push
add
mov
xchg
and
add
in
test
pop
cmp
dec
add
add
add
pushf
push
pusha
add
pop
add
add
sub
add
dec
add
add
rcrl
pop
outsl
insb
add
aam
xchg
data16
test
and
mov
add
orb
add
push
add
mov
push
add
add
ljmp
popa
fcomip
adc
add
sub
adc
scas
mov
sub
mov
add
lea
negb
les
mov
jae
push
pop
add
repz
add
movsb
cmovne
xor
cmp
add
lds
cmp
mov
pop
add
mov
cwtl
arpl
xlat
in
outsb
add
inc
push
jecxz
mov
dec
nop
mov
inc
add
and
out
dec
add
add
fstpt
popf
aaa
xor
loope
pop
push
add
add
jmp
or
add
add
cli
add
add
fidivrl
add
outsl
sbb
je
orb
add
mov
add
mulb
xlat
test
inc
add
out
add
dec
cmc
cmp
adc
mov
add
mov
push
add
and
add
in
add
pop
repz
shrl
mov
or
mov
add
adc
movsb
lret
cld
out
movsb
and
push
add
push
add
cli
outsb
add
add
addr16
fnsave
sub
add
aad
sub
adc
push
push
add
mov
add
dec
add
out
in
add
sarl
lods
or
repz
lds
call
repnz
insl
mov
jno
sbb
loop
sub
mov
les
add
inc
jno
add
add
mov
xor
mov
sub
mov
std
lahf
rorb
xchg
pushl
ja
push
call
lret
sub
push
add
sub
push
add
popf
stos
testl
add
add
ret
mov
in
jle
scas
lds
fwait
inc
add
loopne
shl
xor
adc
mov
sahf
xchg
jne
adc
add
bound
lret
dec
mov
mov
out
movsb
xor
jle
pop
add
or
sahf
add
icebp
mov
clc
fistl
push
add
iret
pop
cmpsb
xchg
xor
mov
loop
mov
mov
or
movb
add
add
xchg
or
fs
jle
jb
push
add
popa
test
adc
mov
pop
cltd
movsl
mov
lds
xchg
dec
add
fcomps
shll
mov
les
test
add
sbb
add
add
insl
movsl
pop
add
fwait
roll
insl
rcrl
movsbl
add
add
orps
in
push
add
mov
add
xor
cmp
jbe
ret
mov
add
sbb
jl
int3
mov
in
mov
pushf
lock
add
inc
add
add
mov
fsubrs
jmp
lods
jp
out
inc
add
cld
xchg
loop
add
jmp
add
sub
add
adc
jg
inc
dec
lcall
pop
add
loopne
or
add
mov
sahf
xchg
outsb
add
add
sahf
pop
add
xchg
sub
adc
les
div
and
sarb
test
add
add
add
inc
lret
mov
add
cmpsb
add
or
ja
stos
sbb
lret
int
mov
add
jmp
sbb
das
jp
addr16
add
popa
dec
outsl
enter
ljmp
add
cmpsl
fstpl
adcb
add
addr16
stos
xchg
xor
add
jbe
adc
dec
add
jb
push
add
icebp
jbe
test
add
pop
add
mov
pop
mov
into
mov
push
add
or
lock
data16
inc
add
lret
add
or
add
add
pop
add
inc
add
mov
jg
mov
imul
and
and
pop
add
out
fwait
dec
add
call
and
push
adc
mov
add
scas
add
pop
sahf
push
add
xlat
repz
xchg
add
mov
inc
add
lahf
cmc
jb
fiadds
into
pop
repnz
fnsave
in
fimull
add
sti
pop
add
adc
add
add
inc
in
add
daa
lods
or
adc
mov
jmp
xchg
in
int
sahf
pop
add
pop
mov
add
add
pminub
mov
add
pop
add
loopne
int3
mov
xor
add
in
fldcw
mov
sbb
int
add
les
das
dec
cmp
in
fdivs
mov
mov
inc
adc
push
add
inc
xor
inc
inc
add
mov
test
xchg
inc
add
insl
imull
fidivrs
jnp
sbb
jl
mov
sub
sbb
pop
or
or
mov
cmp
adc
cmp
jne
add
cli
and
ret
popa
sar
loope
add
inc
push
jl
adc
xor
stos
adc
or
lret
push
add
imul
neg
push
add
insb
add
fisubrl
idiv
outsl
mov
pusha
add
add
push
iret
in
dec
add
pop
cmpsl
pop
add
repz
add
add
add
add
sbb
mov
in
add
jg
cmpsl
data16
std
andb
jle
js
jb
imul
xlat
cmp
mov
nop
int
xor
stc
mov
imul
out
sbb
jno
and
sub
jg
add
xor
push
rclb
dec
add
lahf
outsl
into
sbb
jg
pop
add
mov
repz
sub
xor
push
add
jg
lahf
push
add
jle
push
out
xor
add
gs
add
popf
sbb
add
rcrb
stc
repnz
add
ret
repz
xorb
jns
int3
and
imul
add
fistps
push
add
gs
lret
push
add
pop
push
addr16
add
add
fsubrl
ljmp
aad
dec
add
add
add
add
mov
leave
in
maskmovq
aas
fsubr
loope
mov
add
mov
fsubrl
push
add
add
fadd
fidivs
add
inc
and
mov
imul
jns
sub
dec
add
push
add
add
lcall
shrb
inc
add
add
push
add
add
dec
add
setg
adc
inc
add
out
fdivs
add
imul
pop
add
test
int3
cmp
jg
add
rol
adc
std
int3
jg
mov
or
rol
sbb
ret
fists
dec
add
pusha
add
je
outsl
gs
add
les
add
add
mov
xchg
or
adc
push
mov
add
or
mov
add
jmp
scas
cwtl
xchg
add
ret
xchg
sbb
jle
aas
rolb
cld
imul
lret
add
add
sti
lods
dec
add
mov
add
add
jno
add
sahf
fucom
sti
jle
pop
sub
inc
add
sbb
pop
add
dec
add
inc
adc
mov
lock
adc
adcb
inc
inc
data16
loopne
add
adc
adc
push
lods
pop
adc
aas
sbb
pop
sbb
repz
in
cld
mov
mov
add
imul
add
adc
clc
push
add
add
add
js
shr
cmpsl
jp
sub
aam
xchg
outsb
add
add
cmp
lods
pop
add
jl
cltd
fbld
mov
dec
add
nop
int
add
stc
movsb
and
pusha
add
add
dec
add
outsl
xchg
fistpl
sub
xor
mull
add
add
inc
add
xor
push
add
gs
add
jb
and
jo
dec
add
popa
xchg
dec
mov
jno
mov
add
and
data16
in
mov
nop
dec
add
stos
xor
sub
xchg
arpl
aam
fwait
loope
jb
xor
jne
jmp
mov
fsubrl
add
add
xor
add
imul
insl
add
xor
dec
add
pop
add
add
add
pop
add
in
push
add
push
add
add
test
movsl
jecxz
dec
dec
add
ja
stos
incb
push
mov
movsb
lret
inc
add
jge
sub
and
sub
add
cmp
inc
add
pop
add
shl
fdivl
aad
add
mov
push
scas
scas
daa
fistpl
roll
jne
mov
jmp
xchg
std
aam
add
mov
sarl
sub
test
lcall
add
mov
push
add
mov
xchg
movsl
addb
and
imul
dec
sbb
sti
pushf
add
cmpl
sub
mov
mov
adc
xor
andb
pop
dec
jle
mov
sub
out
add
aas
add
add
shl
repnz
or
adc
add
filds
mov
pop
add
xchg
xor
add
mov
adc
add
mov
add
std
leave
cwtl
add
push
bound
sbb
mov
add
pop
add
add
sbb
add
popf
leave
sbb
cmpl
cmp
fdivl
xchg
sbb
sahf
jns
and
cld
repnz
iret
bound
adc
add
push
add
inc
add
sbb
inc
add
flds
add
pusha
add
sub
sub
sub
jne
jge
fidivrs
add
add
pop
and
mov
in
adc
gs
lahf
test
add
add
or
adc
add
push
add
outsb
add
add
add
int3
ljmp
fld1
scas
cmpsb
pop
add
add
xor
xchg
add
mov
add
jg
popa
hlt
pop
add
sbb
mov
cld
push
cli
push
jno
lcall
add
pusha
add
push
add
push
add
push
add
mov
pop
pushf
rcrl
stos
dec
stos
fiadds
out
mov
loopne
call
xchg
push
add
inc
add
mov
add
add
fdivrs
mov
add
add
rcll
repz
out
push
add
js
lock
fistpl
xchg
add
sbb
imul
mov
xor
inc
xchg
loop
add
or
test
rcrl
aad
mov
js
mov
cmc
lds
jmp
dec
xchg
stc
inc
cmp
and
add
movsl
icebp
adc
jl
jo
cld
in
mov
and
jle
mov
jbe
xlat
or
cmpl
or
push
add
and
loopne
add
xorl
cltd
sub
into
pop
add
xor
movsb
shll
enter
ret
add
add
mov
pop
add
xor
aad
mov
mov
cmpsb
arpl
add
add
ja
add
stos
push
aam
add
js
add
add
loopne
add
sub
add
lret
sbb
ret
add
stos
push
add
lea
add
xchg
sbb
xor
daa
mov
xor
mov
add
mov
xor
cli
sub
xor
add
test
pop
clc
dec
add
jge
add
iret
jmp
les
cmp
jbe
add
lods
repz
adc
scas
fdivrl
sub
adc
add
test
insb
add
add
add
out
lahf
cmp
jle
add
ja
pop
jp
jnp
je
cmp
add
pop
cmp
pop
and
add
and
sti
arpl
add
add
outsl
scas
inc
add
add
scas
and
xchg
pop
add
mov
lods
ljmp
out
icebp
mov
add
pop
fnstsw
or
aad
add
and
stos
mov
xor
jle
andb
mov
movsl
das
pop
hlt
filds
push
nop
xor
xor
add
std
inc
dec
add
out
sbb
in
bound
add
rclb
add
xor
mov
fsubs
jmp
das
sub
push
filds
and
dec
push
stc
je
cmp
pop
cmp
mov
mov
push
leave
push
add
push
add
nop
ret
sub
add
pop
add
aam
mov
sub
in
add
xor
inc
js
insl
test
jecxz
scas
popf
push
iret
loopne
jmp
push
pusha
add
add
insl
hlt
inc
add
inc
sti
repz
xor
add
or
fists
mov
loop
cmp
add
add
ljmp
cmpsl
mov
sbb
xchg
mov
in
add
in
mov
inc
test
pop
push
sub
insb
add
pusha
add
movsb
adc
xor
mov
or
pop
add
lea
inc
pop
mov
pop
dec
in
jge
out
add
add
xchg
mov
add
add
xchg
int
and
dec
adc
mov
pop
add
add
add
xor
pushf
stc
mov
add
es
rcrl
xlat
pop
and
add
or
mov
test
sbb
bound
or
mov
test
les
mov
and
pop
cmc
jmp
neg
lock
sub
dec
add
add
jno
mov
fsubrl
cmp
mov
loop
add
push
jp
sbb
fstpt
inc
add
push
add
shll
shlb
das
das
xlat
pop
mul
insl
loop
and
js
dec
mov
add
jle
cmp
inc
scas
pop
stos
movsl
push
and
loop
and
sub
movl
lea
push
andl
call
sub
add
and
mov
mov
and
test
je
mov
push
push
cld
call
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
push
ret
lea
andl
push
call
push
cmp
lea
jne
movzbl
or
pop
mov
add
not
cld
xor
cmp
jne
call
rorb
mov
jmp
cmp
mov
add
ret
mov
mov
mov
inc
or
lea
lea
add
lea
shr
lock
sub
and
je
push
mov
jne
pop
add
add
mov
add
cmc
sahf
fdivrs
cmc
cmp
add
inc
add
add
jns
lret
ljmp
rcr
and
incl
add
add
add
loope
mov
in
add
jo
or
fs
pushf
dec
add
enter
xchg
or
push
add
jl
stos
fisubrs
xor
call
sub
bound
pop
add
inc
add
adc
les
add
add
call
add
add
cld
nop
iret
pushf
xchg
daa
fwait
nop
add
nop
mov
or
add
into
push
add
mov
pop
add
adc
xor
mov
movsl
insb
add
cmc
imul
mov
add
inc
add
ljmp
sbb
mov
ja
aad
add
add
add
je
test
add
arpl
xor
mov
add
add
add
adcl
add
loope
mov
movsb
cmp
jmp
add
fstpt
add
loope
add
enter
add
jmp
sub
and
dec
faddl
fucomp
mov
inc
add
lock
fnsave
popa
push
ljmp
mov
adc
shll
pop
add
clc
test
popa
out
test
xchg
xchg
xor
loop
out
push
add
xlat
jne
add
add
jle
ret
xor
mov
in
dec
pop
push
pop
clc
mov
add
mov
js
js
and
cltd
inc
add
add
add
add
inc
inc
add
add
inc
cmpsb
or
adcl
jge
cmp
push
add
dec
and
xor
inc
add
jge
mov
sbb
leave
push
les
jmp
lret
push
pop
add
shlb
add
js
sub
push
add
leave
dec
add
dec
add
dec
adc
imul
into
shll
add
and
adc
add
lds
push
add
outsb
add
add
xor
pusha
add
push
add
ds
test
rolb
add
add
xabort
add
out
mov
add
add
outsl
adc
add
sar
and
das
rorb
pop
jge
das
test
std
cld
pop
cvttps2pi
aaa
cmc
add
mov
sbb
scas
out
mul
fnstcw
outsb
add
pop
add
jl
div
or
ror
inc
into
sub
sub
dec
mov
outsl
cmp
fidivl
add
add
jo
dec
add
stc
aas
orb
xchg
jl
out
mov
dec
int
test
push
dec
int
test
mov
add
inc
add
xlat
test
add
in
xchg
fidivl
add
add
dec
add
in
add
pop
add
out
clc
fwait
orl
add
add
pushf
popf
sub
sub
add
cmp
pop
add
pop
lock
divb
loop
mov
add
setl
adc
cwtl
pop
add
scas
xor
stos
gs
jbe
jmp
insb
add
add
jae
jp
flds
or
or
notb
add
add
add
cmp
cmpb
out
dec
scas
js
xchg
xchg
or
mov
add
inc
iret
jnp
mov
add
test
mov
add
mov
jnp
stos
and
bound
test
cmc
cmp
add
add
add
jmp
enter
cmc
push
mov
stos
outsb
add
pop
add
ret
mov
cmp
xchg
inc
dec
add
fisubs
dec
hlt
pop
add
xchg
adc
pop
inc
int3
and
mov
cltd
xchg
mov
fidivl
mov
inc
cld
imul
cmc
pop
jp
mov
mov
cmp
sub
mov
je
popf
jecxz
sarl
add
add
jne
mov
add
jnp
xchg
cmp
add
lret
cmp
push
add
out
mov
and
js
add
outsb
add
add
inc
add
jno
sar
sbb
loopne
push
add
mov
ljmp
sbb
jl
rcrb
sbbb
loop
add
add
pop
or
mov
icebp
leave
shll
rclb
int3
ret
dec
add
xchg
aam
cmpsb
xchg
sub
movsb
pop
jmp
push
sarl
add
add
jno
insl
push
add
add
pop
dec
cmp
add
outsb
add
sub
sub
clc
add
dec
add
xchg
arpl
pop
adc
bound
ljmp
add
inc
popa
fbstp
cmpsl
ja
leave
adc
mov
mov
inc
add
push
add
add
add
adc
mov
add
add
int3
cmp
dec
add
lock
adc
xor
sub
xchg
mov
sub
add
add
add
sub
jns
cltd
in
icebp
push
add
icebp
dec
add
stc
arpl
add
in
leave
mov
add
pop
ja
inc
pop
add
add
jns
jle
add
mov
pop
in
mov
add
shlb
jecxz
cltd
gs
pop
pop
add
dec
add
nop
fists
xchg
jl
fsubrl
add
push
add
add
out
add
add
cmp
mov
xor
jo
mov
lcall
add
mov
cld
aad
out
mov
push
add
jns
dec
add
add
ficompl
dec
push
insb
add
add
and
add
add
js
fmull
add
lea
cmc
mov
and
sub
add
add
je
jecxz
add
nop
mov
xchg
out
add
add
mov
add
shl
movsb
cmp
in
dec
add
pop
mov
cmp
add
fistps
mov
xchg
call
cmp
pop
cmp
sbb
add
pop
jae
cs
jge
inc
fdivl
add
sub
jle
pop
add
add
xchg
aaa
jl
repnz
call
push
cmp
cmp
in
rdtsc
mov
lret
mov
ja
mov
xor
lahf
cwtl
inc
add
imul
add
add
bound
scas
fsubl
mov
ja
cld
push
add
add
imull
jnp
inc
sbb
push
jle
ljmp
add
jne
lea
jae
jnp
sub
xor
add
dec
clc
das
xor
push
add
add
xlat
xor
add
inc
push
add
cltd
out
adc
xchg
pop
add
add
in
add
cli
or
fcmovb
adc
mov
xchg
inc
add
add
add
daa
testb
outsb
add
pop
add
sarb
mov
movsl
lret
lahf
repnz
ljmp
add
aad
addl
or
add
in
iret
adc
push
add
jmp
pop
add
pop
enter
pop
jb
mov
mov
xchg
insb
add
sub
int
lods
xor
add
add
mov
add
dec
add
lds
mov
pusha
add
add
push
add
sub
int3
enter
add
loop
jl
inc
add
pushf
push
add
add
mov
add
addr16
jg
mov
mov
jnp
xchg
pop
test
add
add
insl
mov
repz
icebp
push
add
add
mov
notb
sub
setns
add
dec
add
mov
aad
sub
cmp
sub
int3
inc
mov
aam
out
icebp
cltd
add
in
cmc
aas
cmpsl
cmc
fists
je
push
dec
add
adc
and
xorb
add
add
pop
cwtl
jecxz
jne
add
lods
pop
add
adc
push
sahf
cmpsb
enter
add
push
rcr
test
cmc
mov
lret
sub
clc
data16
roll
mov
stc
clc
sbb
mov
sbb
pop
add
push
add
loopne
lret
mov
add
call
sub
push
dec
add
mov
and
fidivs
add
inc
add
fidivrs
repz
cmp
shlb
inc
add
add
mov
add
mov
sarb
add
jb
push
add
scas
cwtl
aas
call
push
outsb
add
jl
lret
leave
lods
mov
ja
add
mov
jbe
hlt
dec
add
mov
into
or
in
jp
cmpsl
rcrb
int
shlb
xchg
test
dec
pushf
mov
jb
and
adc
out
pop
in
add
inc
dec
push
add
mov
jg
imul
aad
cmpsl
mov
push
adc
lcall
cmp
rcrl
fimull
mov
and
lret
jb
imull
cmp
mov
mov
fstpl
mov
add
push
add
pop
add
dec
add
sbb
push
add
add
mov
out
cli
jp
lret
fldenv
iret
sub
cmp
sbb
pop
mov
sbbl
add
lds
cmpsl
xchg
cmp
out
std
aaa
nop
test
xchg
fcomi
mov
jle
fwait
and
add
ljmp
xchg
and
xchg
cmpsb
test
fcmovnu
jl
jno
add
add
test
out
popf
pop
hlt
popf
cmp
xor
inc
add
jmp
xor
lock
or
jne
mov
repz
loop
add
add
out
push
add
xchg
mov
sbb
sub
cwtl
xor
mov
add
add
add
dec
add
loope
in
add
mov
mov
jnp
in
in
add
add
add
add
pop
add
add
push
add
jle
inc
daa
orps
and
mov
call
cmp
jl
in
rcll
xor
add
add
add
lret
lret
sub
cld
out
lcall
cmp
add
fadd
scas
dec
add
add
add
add
shr
out
int3
sti
adc
ljmp
or
call
sbb
add
add
cmp
adc
aas
in
or
inc
insl
shl
mov
frstor
add
dec
add
sbb
mov
add
add
add
mov
xor
sarl
aam
bswap
out
inc
icebp
orl
subb
cmp
or
fcomp
xchg
xor
jbe
and
push
clc
pop
cmp
fwait
shll
bound
sub
dec
add
or
les
loope
add
nopl
bound
add
xchg
xchg
or
sbb
mov
add
enter
add
add
arpl
into
adc
loop
add
mov
push
int
inc
xchg
neg
in
push
jb
out
push
add
dec
add
xchg
int3
jge
add
add
and
mov
push
and
xor
das
idiv
pop
add
add
sbb
fists
jecxz
pusha
add
lds
mov
add
add
inc
add
push
add
imul
dec
mov
jbe
adc
sti
sub
mov
fisttpl
mov
add
setb
mov
inc
add
in
sarb
push
add
add
jns
cmp
loopne
mov
inc
or
mov
or
rcll
test
add
pop
mov
or
lock
iret
xor
mov
fstpl
add
mov
sub
jae
pop
mov
dec
add
jge
add
fmuls
pusha
add
xlat
push
adc
add
test
imul
sub
loop
ljmp
mov
or
rorl
test
lcall
add
mov
out
and
add
sub
clc
mov
rcll
and
add
clc
dec
add
add
add
fidivs
adc
add
enter
mov
mov
aaa
jmp
insb
add
andb
addr16
out
addr16
add
add
movsb
cmc
shll
fiaddl
outsl
loop
add
mov
mov
push
add
addr16
loopne
mov
jae
lock
add
mov
loopne
push
add
es
xchg
rcl
jecxz
imul
hlt
test
imul
xor
jmp
lahf
pop
inc
add
add
add
xor
lret
add
std
fcoml
add
lret
mov
mov
test
mov
std
mov
adc
jg
je
clc
cld
pop
sub
jo
arpl
add
fbstp
add
fidivs
notl
and
add
mov
cli
mov
add
pop
cmp
add
push
jp
and
and
or
adc
aaa
lret
shlb
enter
add
cltd
cmp
testb
xchg
repz
add
add
insb
add
xchg
in
fwait
imul
cld
add
inc
push
add
adc
pushf
lds
adc
mov
add
call
push
add
movsl
sahf
push
add
adc
std
repnz
push
add
jne
jecxz
jmp
loope
nop
pop
add
enter
xchg
jae
lret
mov
add
adc
or
popf
pop
push
add
dec
jmp
sub
les
jecxz
mov
pushf
aaa
fsub
inc
pop
add
add
dec
dec
add
add
pop
movsb
lea
out
jbe
enter
out
add
out
clc
repnz
nop
nop
jae
cmp
sarb
repnz
nop
nop
jae
push
in
in
or
add
popf
cmp
push
mov
xchg
ret
add
lock
xor
nop
push
mov
leave
nop
jmp
or
mov
pop
push
clc
repnz
nop
nop
jae
and
scas
add
add
add
clc
repnz
nop
nop
jae
iret
add
dec
add
add
sbb
clc
repnz
nop
nop
jae
into
repz
icebp
jge
loopne
sbb
clc
repnz
nop
nop
jae
push
push
in
dec
add
add
push
mov
xchg
ret
call
scas
add
call
clc
repnz
nop
nop
jae
add
and
clc
repnz
nop
nop
jae
add
add
aaa
in
add
inc
call
nop
push
mov
leave
nop
jmp
add
data16
mov
stos
nop
push
mov
leave
nop
jmp
add
add
xchg
mov
add
ficompl
loopne
clc
repnz
nop
nop
jae
shl
push
in
js
inc
add
sub
cmp
add
repz
and
add
movl
jno
add
rcrb
add
dec
jle
adcb
and
movsb
clc
repnz
nop
nop
jae
add
in
iret
add
int
push
push
mov
xchg
ret
add
andl
push
dec
add
cld
nop
nop
jae
add
mov
clc
repnz
nop
nop
jae
add
add
cmp
xchg
mov
andl
nop
nop
jae
adc
es
jmp
add
add
add
pop
mov
mov
lds
repnz
nop
nop
jae
push
out
cmp
add
add
cld
nop
nop
jae
add
add
pop
mov
jne
clc
repnz
nop
nop
jae
add
add
add
mov
je
nop
push
mov
leave
nop
jmp
imul
inc
dec
es
repnz
nop
nop
jae
popa
cmpsl
add
mov
nop
push
mov
leave
nop
jmp
mov
inc
and
clc
repnz
nop
nop
jae
add
lock
sbb
clc
repnz
nop
nop
jae
push
loope
add
add
mov
xchg
ret
sbb
add
push
add
repnz
nop
nop
jae
add
call
cld
inc
add
add
nop
nop
jae
add
add
cmpl
cli
rcll
mov
xchg
ret
call
adc
test
push
push
mov
xchg
ret
sahf
mov
add
in
push
aaa
pop
lret
pushl
nop
push
mov
leave
nop
jmp
add
or
cld
std
mov
add
add
add
repnz
nop
nop
jae
scas
repz
scas
pop
add
xchg
and
add
nop
jmp
add
sbb
mov
clc
repnz
nop
nop
jae
add
into
add
lea
nop
jae
add
cmp
iret
add
push
push
clc
repnz
nop
nop
jae
add
out
push
and
add
subl
push
mov
xchg
ret
std
add
aaa
add
push
add
repnz
nop
nop
jae
test
add
add
cld
nop
nop
jae
in
and
add
dec
add
mov
clc
repnz
nop
nop
jae
loope
dec
cld
add
push
mov
xchg
ret
std
cld
xlat
mov
mov
mov
clc
repnz
nop
nop
jae
mov
add
ret
push
mov
xchg
ret
add
add
adc
andl
cld
nop
nop
jae
sbb
stos
cmp
add
and
clc
repnz
nop
nop
jae
pop
adc
int
push
call
sbb
inc
add
xchg
stos
mov
add
add
mov
push
mov
xchg
ret
add
in
lret
pop
add
clc
repnz
nop
nop
jae
add
scas
push
add
clc
repnz
nop
nop
jae
push
sbb
dec
push
nop
push
mov
leave
nop
jmp
popa
xchg
call
pusha
add
add
clc
repnz
nop
nop
jae
add
mov
add
push
int
call
add
xchg
xchg
add
add
das
clc
repnz
nop
nop
jae
add
scas
adc
add
add
push
clc
repnz
nop
nop
jae
in
pushf
add
out
add
xor
sbb
adcb
jmp
add
cmp
outsb
add
inc
add
add
nop
push
mov
leave
nop
jmp
aaa
push
add
add
push
clc
repnz
nop
nop
jae
push
add
ret
mov
dec
add
cld
nop
nop
jae
mov
add
dec
into
lock
fistpl
push
mov
xchg
ret
repz
add
add
push
mov
xchg
ret
add
adc
sbb
rcrl
mov
xchg
ret
dec
push
in
add
cmp
mov
leave
nop
jmp
lock
aaa
and
dec
add
sub
cmp
nop
nop
jae
xchg
add
xchg
mov
add
clc
repnz
nop
nop
jae
jbe
mov
fistpl
nop
push
mov
leave
nop
jmp
add
add
rclb
xchg
jle
add
mov
popa
add
pop
xchg
jecxz
push
mov
xchg
ret
int
add
add
add
push
mov
xchg
ret
add
add
add
push
outsl
test
pop
nop
push
mov
leave
nop
jmp
in
or
mov
jg
jmp
nop
nop
jae
out
add
add
jns
clc
repnz
nop
nop
jae
add
push
add
cmp
jmp
int
push
add
add
into
icebp
int
push
add
repz
add
add
mov
clc
repnz
nop
nop
jae
or
pop
inc
add
cmpw
nop
push
mov
leave
nop
jmp
in
add
jl
sub
aaa
add
push
es
add
std
add
push
mov
dec
add
dec
add
repnz
nop
nop
jae
in
add
icebp
mov
clc
repnz
nop
nop
jae
dec
popa
push
add
lahf
cmp
nop
push
mov
leave
nop
jmp
dec
iret
cld
adc
orl
nop
jae
add
add
mov
nop
push
mov
leave
nop
jmp
aaa
push
pop
sbb
cld
nop
nop
jae
add
filds
adc
add
cmp
xor
and
data16
or
repnz
nop
nop
jae
and
sbb
repnz
nop
nop
jae
add
mov
push
sahf
adc
mov
xchg
ret
loope
cmp
loope
adc
dec
add
mov
clc
repnz
nop
nop
jae
add
std
xchg
add
incl
inc
cmp
repnz
nop
nop
jae
xlat
sahf
add
jmp
sti
clc
repnz
nop
nop
jae
imul
add
mov
xchg
ret
add
add
add
mov
add
add
fistpl
clc
repnz
nop
nop
jae
add
add
es
clc
repnz
nop
nop
jae
add
dec
add
pop
push
mov
xchg
ret
push
add
push
add
add
clc
repnz
nop
nop
jae
push
add
add
nop
push
mov
leave
nop
jmp
pushf
add
add
sub
pop
dec
push
mov
xchg
ret
sbb
into
outsl
js
mov
mov
leave
nop
jmp
add
adc
add
in
add
push
mov
xchg
ret
push
sbb
pop
in
add
pusha
add
repnz
nop
nop
jae
pop
add
add
testb
repnz
nop
nop
jae
add
cmp
add
repnz
nop
nop
jae
icebp
add
add
mov
add
cld
nop
nop
jae
add
add
jne
clc
repnz
nop
nop
jae
fisttps
int
inc
in
repnz
nop
nop
jae
add
add
sar
cld
nop
nop
jae
into
int
addl
call
mov
xchg
ret
add
push
outsl
add
add
adcl
nop
nop
jae
repz
call
nop
push
mov
leave
nop
jmp
es
lock
mov
add
nop
push
mov
leave
nop
jmp
out
add
call
sub
add
nop
jmp
push
out
sti
shr
clc
repnz
nop
nop
jae
or
add
add
pop
add
clc
repnz
nop
nop
jae
adc
testl
xchg
ret
push
add
pop
add
rorl
cld
nop
nop
jae
sahf
mov
pop
add
dec
add
push
add
cmc
and
cld
nop
nop
jae
aaa
add
add
cld
nop
nop
jae
andl
push
xlat
add
repnz
mov
clc
repnz
nop
nop
jae
add
add
repz
push
mov
xchg
ret
in
in
imul
jo
adc
aad
inc
add
add
add
loope
out
out
mov
clc
repnz
nop
nop
jae
in
pop
xchg
out
add
data16
cmp
nop
jmp
add
add
movzwl
clc
repnz
nop
nop
jae
cmp
nop
push
mov
leave
nop
jmp
add
pop
push
and
add
enter
push
mov
xchg
ret
add
dec
add
pop
push
add
mov
clc
repnz
nop
nop
jae
push
add
lock
xor
jnp
repnz
repnz
nop
nop
jae
movl
add
or
mov
xchg
ret
outsl
add
lock
add
add
push
clc
repnz
nop
nop
jae
xchg
add
add
add
push
mov
xchg
ret
aaa
repz
in
adc
add
push
clc
repnz
nop
nop
jae
add
add
icebp
scas
cmp
sahf
mov
push
mov
xchg
ret
outsl
add
mov
loope
incb
nop
nop
jae
outsl
add
add
add
add
jae
push
mov
xchg
ret
dec
add
add
dec
std
and
test
repnz
nop
nop
jae
push
in
add
clc
repnz
nop
nop
jae
std
std
add
stos
stos
add
xor
jg
add
pushf
stos
add
shl
loope
and
clc
repnz
nop
nop
jae
cmp
add
and
add
repnz
nop
nop
jae
add
insl
add
clc
repnz
nop
nop
jae
add
cmp
rolb
adc
mov
xchg
ret
and
add
add
rorl
das
popl
xchg
ret
add
filds
mov
outsb
add
nop
push
mov
leave
nop
jmp
repz
std
add
scas
mov
clc
repnz
nop
nop
jae
add
add
add
inc
imul
clc
repnz
nop
nop
jae
cmpsl
xchg
int
test
movzwl
clc
repnz
nop
nop
jae
push
push
scas
push
add
xor
repnz
nop
nop
jae
adc
in
add
push
nop
push
mov
leave
nop
jmp
stos
add
add
push
push
mov
xchg
ret
add
add
add
add
add
rorl
push
mov
leave
nop
jmp
mov
add
clc
repnz
nop
nop
jae
push
call
aaa
data16
cli
jno
add
add
xor
in
add
xor
and
pushf
add
cmp
add
andb
nop
jae
add
add
add
adc
push
clc
repnz
nop
nop
jae
in
dec
mov
pushf
add
push
sub
dec
nop
push
mov
leave
nop
jmp
cmp
push
push
imul
leave
nop
jmp
add
call
fiadds
repnz
nop
nop
jae
mov
jbe
mov
clc
repnz
nop
nop
jae
pop
movl
sarl
push
mov
leave
nop
jmp
add
push
push
add
dec
jne
add
add
add
push
clc
repnz
nop
nop
jae
iret
in
push
in
sbb
xchg
les
mov
xchg
ret
cld
add
sbb
cmpsl
std
add
inc
rep
push
mov
xchg
ret
std
push
add
lock
add
out
pop
clc
repnz
nop
nop
jae
mov
rolb
or
push
add
inc
add
add
cmp
cwtl
sahf
mov
add
dec
add
mov
nop
push
mov
leave
nop
jmp
out
add
call
add
pop
clc
repnz
nop
nop
jae
add
add
cmpsl
add
push
mov
xchg
ret
dec
add
imul
rcll
mov
xchg
ret
outsl
push
add
mov
push
push
mov
xchg
ret
add
outsl
push
add
xchg
adc
push
add
fwait
push
mov
xchg
ret
add
pop
into
add
addl
pop
mov
clc
repnz
nop
nop
jae
add
add
add
nop
push
mov
leave
nop
jmp
add
mov
add
add
fstpl
repnz
nop
nop
jae
add
push
and
add
mov
nop
nop
jae
add
pop
orl
fadds
nop
push
mov
leave
nop
jmp
add
out
add
je
add
repnz
nop
nop
jae
imul
add
repz
push
mov
xchg
ret
add
add
dec
pop
add
pop
clc
repnz
nop
nop
jae
add
repz
add
rclb
jmp
popa
add
add
iret
add
push
add
xor
sbb
add
clc
repnz
nop
nop
jae
add
clc
jno
icebp
nop
push
mov
leave
nop
jmp
add
imul
popl
clc
repnz
nop
nop
jae
add
pop
add
xchg
mov
clc
repnz
nop
nop
jae
into
cmpsl
add
add
in
fld1
clc
repnz
nop
nop
jae
add
add
inc
add
mov
nop
push
mov
leave
nop
jmp
cmpsl
add
add
nop
push
mov
leave
nop
jmp
push
add
mov
sub
repnz
nop
nop
jae
out
add
and
repnz
nop
nop
jae
add
in
add
addr16
nop
push
mov
leave
nop
jmp
push
push
sbb
out
adc
mov
leave
nop
jmp
add
and
add
clc
repnz
nop
nop
jae
sbb
into
add
xchg
pop
add
add
clc
repnz
nop
nop
jae
test
add
mov
push
clc
repnz
nop
nop
jae
add
add
icebp
add
push
mov
repnz
nop
nop
jae
pop
xchg
in
push
sbb
inc
add
xchg
addr16
add
cmpsl
add
add
add
cld
mov
push
clc
repnz
nop
nop
jae
into
add
in
mov
add
repnz
nop
nop
jae
push
add
add
mov
pop
cmp
repnz
nop
nop
jae
push
xchg
out
xchg
fcompl
push
mov
xchg
ret
in
addl
rclb
inc
push
mov
xchg
ret
add
int
push
xchg
and
in
sti
nop
push
mov
leave
nop
jmp
push
add
add
cmp
nop
push
mov
leave
nop
jmp
pop
add
add
lret
cmpsl
mov
clc
repnz
nop
nop
jae
in
xchg
sub
jle
add
and
add
add
ret
push
nop
push
mov
leave
nop
jmp
push
iret
mov
std
popa
add
pop
add
repnz
nop
nop
jae
and
add
mov
clc
repnz
nop
nop
jae
add
add
aaa
out
shll
repnz
nop
nop
jae
filds
add
filds
add
sbb
mov
clc
repnz
nop
nop
jae
scas
dec
adc
fucomip
pop
clc
repnz
nop
nop
jae
add
add
add
xlat
add
movb
and
cld
nop
nop
jae
add
xchg
xchg
mov
clc
repnz
nop
nop
jae
add
add
repnz
clc
repnz
nop
nop
jae
mov
int
mov
mov
clc
repnz
nop
nop
jae
add
sbb
stos
sub
push
mov
xchg
ret
adc
jbe
xchg
call
mov
clc
repnz
nop
nop
jae
dec
add
add
add
cmpl
nop
push
mov
leave
nop
jmp
add
je
push
add
add
clc
repnz
nop
nop
jae
mov
adc
add
ljmp
fld1
clc
repnz
nop
nop
jae
mov
cmp
xchg
xchg
push
mov
xchg
ret
xchg
add
push
loope
cld
xchg
add
clc
repnz
nop
nop
jae
sbb
add
into
out
fwait
push
mov
xchg
ret
dec
push
xchg
add
out
add
mov
jne
clc
repnz
nop
nop
jae
push
push
mov
add
testl
sub
add
es
repz
add
push
fwait
clc
repnz
nop
nop
jae
cmp
sahf
push
iret
push
stos
push
cmc
mov
clc
repnz
nop
nop
jae
in
imul
add
imul
inc
add
add
add
add
jmp
add
clc
repnz
nop
nop
jae
or
add
filds
cld
nop
nop
jae
std
aaa
add
pushf
add
add
stos
clc
repnz
nop
nop
jae
add
cmp
add
ljmp
nop
jae
lock
in
int
add
mov
add
clc
repnz
nop
nop
jae
add
cmpsl
lods
sarb
push
push
mov
xchg
ret
sahf
adc
add
out
jbe
push
add
dec
cmp
repnz
nop
nop
jae
jbe
xchg
push
out
xor
clc
repnz
nop
nop
jae
scas
push
stos
test
add
push
clc
repnz
nop
nop
jae
mov
into
repz
lods
push
mov
xchg
ret
sbb
add
out
pop
add
push
mov
leave
nop
jmp
add
add
xor
mov
xchg
ret
add
loope
pop
es
add
add
repnz
nop
nop
jae
add
mov
repnz
nop
nop
jae
add
cmpsl
add
cmp
push
clc
repnz
nop
nop
jae
in
imul
pop
push
clc
repnz
nop
nop
jae
and
in
push
lock
push
out
leave
cld
nop
push
mov
leave
nop
jmp
add
add
push
xchg
in
pop
push
mov
add
add
add
add
clc
mov
xchg
in
bound
add
fcomps
out
sbb
push
add
mov
clc
repnz
nop
nop
jae
xlat
adc
add
add
mov
push
mov
xchg
ret
add
add
pop
add
add
add
add
push
mov
xchg
ret
orl
push
in
mov
sbb
nop
jmp
add
add
add
test
icebp
clc
repnz
nop
nop
jae
loope
adc
add
sbb
pop
nop
push
mov
leave
nop
jmp
mov
mov
add
mov
adc
repnz
nop
nop
jae
add
repz
repnz
nop
nop
jae
filds
add
pushf
add
mov
rcrl
cld
nop
nop
jae
movl
push
mov
xchg
ret
filds
adcl
adc
add
cmp
clc
repnz
nop
nop
jae
outsl
sahf
cmpsl
add
outsl
inc
add
mov
test
ret
add
add
xor
pop
pushl
clc
repnz
nop
nop
jae
xorl
inc
add
push
mov
leave
nop
jmp
add
or
in
stc
push
push
mov
xchg
ret
jbe
ret
add
sbb
sub
jge
dec
push
clc
repnz
nop
nop
jae
xchg
adc
add
filds
xchg
test
xchg
ret
add
add
fistl
dec
pusha
inc
add
add
add
and
add
in
jnp
add
bound
push
sub
jg
lret
cmp
cld
nop
nop
jae
call
add
push
nop
push
mov
leave
nop
jmp
lock
pop
mov
add
clc
repnz
nop
nop
jae
cmp
add
push
mov
leave
nop
jmp
iret
call
out
nop
push
mov
leave
nop
jmp
add
add
or
add
mov
mov
xchg
ret
add
mov
add
mov
leave
nop
jmp
add
add
add
lcall
call
nop
jmp
add
mov
push
add
push
push
mov
xchg
ret
out
add
add
xchg
add
push
inc
nop
push
mov
leave
nop
jmp
add
iret
push
xchg
jmp
cld
nop
nop
jae
pop
add
add
outsl
mov
clc
repnz
nop
nop
jae
push
add
add
std
pop
dec
jne
nop
push
mov
leave
nop
jmp
xchg
add
in
fld1
push
mov
xchg
ret
add
and
idiv
mov
push
mov
xchg
ret
add
add
add
add
repnz
nop
nop
jae
push
out
mov
push
add
nop
nop
jae
sbb
subl
into
mov
push
mov
xchg
ret
ret
add
popa
add
push
mov
xchg
ret
add
add
push
add
sbb
sti
not
clc
repnz
nop
nop
jae
add
in
add
push
jmp
add
add
add
add
pop
add
or
ret
add
push
clc
repnz
nop
nop
jae
mov
rorb
lea
in
pop
inc
add
add
outsl
int
mov
add
nop
nop
jae
in
add
test
mov
push
mov
xchg
ret
cmp
add
movzwl
push
mov
xchg
ret
repz
xchg
xchg
add
lea
push
nop
push
mov
leave
nop
jmp
xchg
add
add
in
add
pop
nop
push
mov
leave
nop
jmp
repz
add
push
imul
imul
clc
repnz
nop
nop
jae
popa
add
add
rolb
call
clc
repnz
nop
nop
jae
pop
add
repnz
nop
nop
jae
and
dec
add
add
add
cmp
outsb
inc
add
add
mov
add
sahf
add
push
push
mov
xchg
ret
push
add
in
add
out
mov
clc
repnz
nop
nop
jae
in
outsl
add
repnz
nop
nop
jae
imul
mov
push
mov
xchg
ret
imul
or
push
mov
leave
nop
jmp
mov
add
mov
xorl
jmp
incl
lock
push
xchg
aaa
mov
clc
repnz
nop
nop
jae
add
push
in
das
mov
clc
repnz
nop
nop
jae
add
call
adc
nop
nop
jae
add
jbe
dec
adc
lret
pop
push
mov
xchg
ret
push
add
add
push
or
add
repnz
nop
nop
jae
add
call
add
repnz
nop
nop
jae
icebp
sbb
push
mov
leave
nop
jmp
into
es
mov
cld
andl
jae
add
pop
push
push
push
dec
add
clc
repnz
nop
nop
jae
adc
xchg
add
test
push
es
clc
repnz
nop
nop
jae
mov
mov
add
mov
ret
push
clc
repnz
nop
nop
jae
add
mov
sbb
sub
push
pop
nop
push
mov
leave
nop
jmp
mov
int
adc
nop
nop
jae
add
add
xchg
mov
clc
repnz
nop
nop
jae
cld
push
push
add
pushf
add
push
add
and
clc
repnz
nop
nop
jae
push
push
add
jl
sbb
repnz
nop
nop
jae
call
and
nop
push
mov
leave
nop
jmp
push
add
in
add
mov
xchg
ret
pop
push
add
push
add
sbb
in
pop
clc
repnz
nop
nop
jae
std
add
popa
add
add
jle
add
and
add
clc
repnz
nop
nop
jae
dec
add
stc
push
clc
repnz
nop
nop
jae
sbb
push
xlat
jbe
add
sbb
mov
repnz
nop
nop
jae
add
popa
cmp
out
das
push
clc
repnz
nop
nop
jae
add
add
shrb
andb
push
mov
fisttpll
add
push
adc
mov
adc
xchg
pusha
nop
push
mov
leave
nop
jmp
sbb
iret
add
xchg
add
popa
jmp
add
adc
dec
std
add
add
xchg
mov
nop
push
mov
leave
nop
jmp
add
sbb
add
sub
mov
repnz
nop
nop
jae
adc
add
and
ret
mov
inc
add
out
pop
push
filds
add
add
add
rep
push
mov
xchg
ret
add
std
cmpsl
add
ret
cmp
push
mov
xchg
ret
out
sub
add
addr16
clc
repnz
nop
nop
jae
push
mov
sahf
mov
push
nop
push
mov
leave
nop
jmp
add
or
add
jns
add
nop
jmp
add
add
cmpsb
jb
add
add
add
popl
adc
add
nop
push
mov
leave
nop
jmp
mov
jbe
mov
cmp
sub
sbb
clc
repnz
nop
nop
jae
push
add
mov
clc
repnz
nop
nop
jae
add
in
aaa
sahf
add
add
mov
leave
nop
jmp
add
add
add
sbb
push
mov
leave
nop
jmp
add
add
imul
in
leave
nop
jmp
add
lock
pop
pusha
clc
repnz
nop
nop
jae
test
add
mov
test
ljmp
popl
xchg
ret
in
add
cld
out
add
pop
push
nop
push
mov
leave
nop
jmp
scas
imul
lock
sbb
clc
repnz
nop
nop
jae
call
sbb
je
clc
repnz
nop
nop
jae
and
out
push
add
clc
repnz
nop
nop
jae
aaa
out
jbe
add
cmp
mov
push
loopne
repnz
nop
nop
jae
push
jbe
in
and
push
mov
xchg
ret
add
in
popa
add
jbe
mov
cld
nop
nop
jae
aaa
cmpsl
pop
in
add
ret
push
mov
xchg
ret
add
add
add
add
and
sub
mov
test
repnz
nop
nop
jae
aaa
pushf
dec
mov
nop
jae
mov
add
add
or
push
mov
xchg
ret
int
cld
add
outsl
fbstp
mov
leave
nop
jmp
add
add
xor
xchg
lahf
ret
clc
repnz
nop
nop
jae
add
outsl
add
sub
clc
repnz
nop
nop
jae
into
xchg
add
mov
ret
xor
adcl
repnz
nop
nop
jae
dec
add
add
clc
repnz
nop
nop
jae
push
into
imul
call
nop
jmp
add
clc
repnz
nop
nop
jae
push
std
add
add
in
add
repz
push
mov
xchg
ret
ror
add
push
ret
js
clc
repnz
nop
nop
jae
push
outsl
xchg
pushf
ret
movzwl
clc
repnz
nop
nop
jae
add
add
mov
adc
nop
push
mov
leave
nop
jmp
add
add
add
mov
movsl
xor
clc
repnz
nop
nop
jae
add
add
jo
subl
mov
xchg
ret
xchg
cmp
add
cld
outsl
clc
push
add
lea
clc
repnz
nop
nop
jae
add
mov
mov
cld
nop
nop
jae
mov
outsl
lock
in
daa
xchg
nop
push
mov
leave
nop
jmp
into
push
dec
add
add
iret
lss
clc
repnz
nop
nop
jae
mov
rorb
sub
fildl
sti
jge
add
mov
rolb
pop
aam
add
add
clc
repnz
nop
nop
jae
push
xchg
sbb
add
daa
add
clc
repnz
nop
nop
jae
add
add
nop
push
mov
leave
nop
jmp
xchg
add
filds
mov
add
push
mov
xchg
ret
ret
add
add
pushf
fisttps
nop
nop
jae
add
push
add
add
add
int3
mov
add
clc
repnz
nop
nop
jae
out
add
or
push
mov
xchg
ret
stos
stos
add
iret
add
mov
xchg
ret
add
add
clc
repnz
nop
nop
jae
pop
in
add
add
fwait
clc
repnz
nop
nop
jae
into
scas
xchg
test
add
pop
add
adc
add
in
add
mov
push
mov
xchg
ret
fists
add
add
repz
mov
xchg
ret
add
add
jl
loope
nop
push
mov
leave
nop
jmp
ret
mov
insb
add
call
nop
jae
in
add
icebp
adc
push
sti
cld
push
mov
xchg
ret
pop
add
add
call
clc
repnz
nop
nop
jae
add
add
add
cmpsl
push
repnz
nop
nop
jae
add
pop
mov
xchg
xchg
iret
mov
cmp
push
pushf
mov
add
fadds
mov
in
rdmsr
add
xchg
push
nop
push
mov
leave
nop
jmp
add
add
add
mov
jbe
clc
repnz
nop
nop
jae
push
pop
test
repz
test
repnz
clc
repnz
nop
nop
jae
cmpsl
cld
outsl
sub
cld
nop
nop
jae
add
add
out
pop
mov
nop
push
mov
leave
nop
jmp
cmpsl
and
cmp
repz
repnz
nop
nop
jae
scas
test
add
icebp
ret
cmp
push
clc
repnz
nop
nop
jae
add
stos
add
imul
add
nop
nop
jae
addl
mov
lcall
repnz
nop
nop
jae
add
add
add
mov
leave
nop
jmp
xchg
add
into
add
pop
mov
mov
xchg
ret
add
add
std
mov
add
bound
xchg
ret
adc
add
add
add
repnz
nop
nop
jae
dec
dec
add
jmp
leave
sub
repnz
nop
nop
jae
pop
sbb
add
add
add
nop
push
mov
leave
nop
jmp
push
loope
inc
push
push
mov
xchg
ret
es
add
push
add
dec
push
mov
xchg
ret
add
add
pop
add
out
sti
add
nop
push
mov
leave
nop
jmp
push
lock
scas
add
cmp
jmp
nop
jae
add
mov
nop
push
mov
leave
nop
jmp
mov
add
mov
pushl
clc
repnz
nop
nop
jae
popa
xchg
add
add
inc
add
add
fld1
nop
push
mov
leave
nop
jmp
sbbl
into
add
xor
cld
nop
nop
jae
add
add
sbb
mov
nop
nop
jae
sbb
addl
push
push
sbb
clc
repnz
nop
nop
jae
add
imul
push
mov
nop
push
mov
leave
nop
jmp
sbb
and
sbb
xchg
dec
add
repnz
nop
nop
jae
add
push
push
imul
push
add
clc
repnz
nop
nop
jae
push
cmp
leave
call
clc
repnz
nop
nop
jae
filds
ret
mov
clc
repnz
nop
nop
jae
aaa
push
add
in
or
jg
add
add
aaa
add
imul
mov
leave
nop
jmp
in
add
add
mov
add
push
mov
leave
nop
jmp
add
add
push
fld1
clc
repnz
nop
nop
jae
pop
out
repz
popa
clc
repnz
nop
nop
jae
xchg
add
sbb
and
sub
movsl
pop
clc
repnz
nop
nop
jae
adc
mov
add
or
push
mov
leave
nop
jmp
sbb
add
iret
mov
clc
repnz
nop
nop
jae
sbb
add
pop
clc
repnz
nop
nop
jae
in
loope
pop
add
in
push
add
and
and
nop
nop
jae
add
add
add
add
les
outsl
push
clc
repnz
nop
nop
jae
out
out
addl
into
mov
add
cld
nop
nop
jae
mov
std
dec
sbbl
xchg
push
push
mov
xchg
ret
mov
call
add
adc
sub
sub
call
leave
nop
jmp
stos
dec
adc
pushf
out
jle
jmp
repnz
nop
nop
jae
add
add
xchg
or
repz
nop
push
mov
leave
nop
jmp
fstl
repnz
nop
nop
jae
mov
add
call
cld
nop
nop
jae
add
add
add
in
mov
out
bound
repnz
add
dec
inc
mov
call
clc
repnz
nop
nop
jae
add
subl
push
mov
xchg
ret
push
xlat
fcomip
xlat
loope
ret
xchg
cmp
mov
inc
push
mov
xchg
ret
in
add
add
dec
add
push
add
out
clc
repnz
nop
nop
jae
in
xchg
add
add
sbb
nop
nop
jae
add
add
repz
clc
repnz
nop
nop
jae
cmp
add
adc
les
push
mov
xchg
ret
add
push
add
or
add
lods
inc
add
mov
nop
push
mov
leave
nop
jmp
in
movl
decl
push
in
mov
mov
pop
mov
clc
repnz
nop
nop
jae
add
call
sub
ja
inc
add
jbe
jbe
sbb
or
add
clc
repnz
nop
nop
jae
sahf
outsl
add
mov
push
mov
xchg
ret
dec
outsl
add
add
scas
or
lds
inc
add
popa
or
add
lods
clc
repnz
nop
nop
jae
scas
in
add
add
lock
add
in
sbb
nop
push
mov
leave
nop
jmp
add
add
in
movb
cld
nop
nop
jae
adc
jns
clc
repnz
nop
nop
jae
add
add
push
xchg
add
add
nop
push
mov
leave
nop
jmp
add
sahf
in
mov
cmpl
mov
leave
nop
jmp
icebp
imul
test
nop
push
mov
leave
nop
jmp
push
add
lea
clc
repnz
nop
nop
jae
add
add
int
adc
push
sldt
clc
repnz
nop
nop
jae
add
add
add
push
add
xchg
inc
add
add
dec
push
add
add
cmp
inc
add
jle
add
nop
jmp
add
movl
call
leave
nop
jmp
outsl
xchg
add
add
add
clc
repnz
nop
nop
jae
cmpsl
out
iret
add
add
xchg
add
add
nop
push
mov
leave
nop
jmp
std
loope
add
add
push
push
mov
xchg
ret
add
movl
fbld
jge
clc
repnz
nop
nop
jae
push
sbb
jae
incl
adc
add
add
dec
add
add
add
outsl
add
clc
repnz
nop
nop
jae
add
out
cmp
aam
inc
add
aaa
push
push
add
add
clc
repnz
nop
nop
jae
add
out
add
pop
mov
clc
repnz
nop
nop
jae
cmp
xchg
repz
add
cmp
ret
add
mov
push
shr
daa
add
clc
repnz
nop
nop
jae
add
in
add
mov
in
add
push
mov
xchg
ret
in
outsl
add
sbb
dec
add
mov
clc
repnz
nop
nop
jae
add
add
clc
nop
push
mov
leave
nop
jmp
loope
add
in
ret
pop
clc
repnz
nop
nop
jae
add
add
cmpsl
in
lret
mov
clc
repnz
nop
nop
jae
add
les
sar
repnz
nop
nop
jae
lock
add
clc
repnz
nop
nop
jae
out
add
add
pop
enter
mov
xchg
ret
add
add
aaa
jbe
add
clc
repnz
nop
nop
jae
mov
mov
nop
push
mov
leave
nop
jmp
push
mov
into
dec
add
add
mov
leave
nop
jmp
outsl
and
testl
andl
jmp
add
add
scas
test
add
sti
nop
push
mov
leave
nop
jmp
push
sbb
push
cmpsl
cmp
dec
push
mov
xchg
ret
pushf
push
cld
add
add
popa
add
adc
cld
nop
nop
jae
jbe
std
add
add
and
call
nop
jmp
repz
add
mov
xchg
ret
sbb
popa
lds
repnz
nop
nop
jae
mov
add
sbb
cld
nop
nop
jae
push
add
add
lock
push
push
mov
xchg
ret
scas
in
filds
add
add
cld
adc
nop
push
mov
leave
nop
jmp
add
jmp
repz
cld
add
push
dec
loope
push
add
add
fistpl
push
mov
xchg
ret
pop
in
cmp
add
add
mov
leave
nop
jmp
rolb
add
push
add
lods
add
nop
push
mov
leave
nop
jmp
cmp
push
sbb
and
repnz
nop
nop
jae
out
add
add
or
push
je
clc
repnz
nop
nop
jae
pushf
add
jbe
into
ljmp
repnz
nop
nop
jae
sbb
and
xlat
ret
push
push
mov
xchg
ret
add
dec
add
dec
add
push
sti
es
clc
repnz
nop
nop
jae
add
cmp
fisttps
test
std
clc
repnz
nop
nop
jae
popa
or
clc
xor
outsb
add
repnz
nop
nop
jae
add
jae
push
mov
xchg
ret
sbb
push
push
add
repz
push
mov
leave
nop
jmp
add
cmpsl
scas
push
adc
push
adc
clc
repnz
nop
nop
jae
cmpsl
loope
lods
rep
clc
repnz
nop
nop
jae
add
std
add
xchg
dec
sub
cld
nop
nop
jae
add
popa
add
pop
iret
lea
in
leave
nop
jmp
sbb
xlat
add
pushf
add
shl
clc
repnz
nop
nop
jae
cmp
add
add
cmp
nop
push
mov
leave
nop
jmp
outsl
repz
in
add
clc
repnz
nop
nop
jae
popa
add
push
pop
call
clc
repnz
nop
nop
jae
add
xchg
pushf
push
clc
repnz
nop
nop
jae
add
pop
add
add
adc
mov
leave
nop
jmp
aaa
add
xchg
fisttps
add
repnz
nop
nop
jae
add
ret
add
cmp
test
push
add
clc
repnz
nop
nop
jae
lock
shr
nop
push
mov
leave
nop
jmp
int
add
ret
fld1
push
mov
xchg
ret
ret
cld
sbb
add
xorb
and
repnz
nop
nop
jae
add
mov
xchg
add
leave
clc
repnz
nop
nop
jae
popa
push
or
std
in
ret
push
clc
repnz
nop
nop
jae
xchg
cmp
add
add
add
push
clc
repnz
nop
nop
jae
iret
outsl
add
icebp
push
sar
scas
mov
clc
repnz
nop
nop
jae
add
add
push
add
int
rclb
jnp
add
add
add
mov
clc
repnz
nop
nop
jae
into
xchg
cld
add
popa
mov
xor
nop
nop
jae
add
add
dec
clc
dec
inc
nop
push
mov
leave
nop
jmp
add
add
dec
call
nop
push
mov
leave
nop
jmp
in
stos
push
xchg
sbb
test
mov
leave
nop
jmp
push
out
xor
mov
xchg
ret
in
add
call
push
clc
repnz
nop
nop
jae
add
dec
xchg
fiadds
pop
push
mov
xchg
ret
scas
ret
cmp
dec
add
mov
nop
push
mov
leave
nop
jmp
add
add
push
push
mov
xchg
ret
std
mov
add
add
test
repnz
nop
nop
jae
sbb
add
xchg
les
mov
xchg
ret
mov
add
dec
pop
clc
repnz
nop
nop
jae
out
test
add
and
cld
jbe
rcrl
repnz
nop
nop
jae
mov
add
xlat
jg
clc
repnz
nop
nop
jae
add
pop
push
es
int
pop
or
repnz
nop
nop
jae
outsl
mov
add
or
repnz
nop
nop
jae
adc
sbb
inc
xor
clc
repnz
nop
nop
jae
mov
cmp
add
add
movsl
mov
clc
repnz
nop
nop
jae
add
shlb
mov
leave
nop
jmp
add
pop
movzwl
clc
repnz
nop
nop
jae
adc
add
sbbl
add
sahf
add
add
cmp
aam
add
sub
jmp
incl
add
popa
mov
out
dec
add
and
and
cld
nop
nop
jae
sbb
in
pushf
add
mov
xchg
ret
push
repz
mov
cmpsl
or
lds
clc
repnz
nop
nop
jae
push
and
add
test
push
dec
out
pop
mov
add
add
pusha
push
mov
xchg
ret
add
add
and
dec
push
clc
repnz
nop
nop
jae
jbe
push
into
add
nop
push
mov
leave
nop
jmp
xchg
add
in
sub
nop
jg
add
stos
add
cmp
cmpsl
add
mov
clc
repnz
nop
nop
jae
mov
push
in
mov
clc
repnz
nop
nop
jae
add
jg
leave
clc
repnz
nop
nop
jae
add
dec
add
add
push
mov
xchg
ret
sbb
add
add
pop
add
out
mov
clc
repnz
nop
nop
jae
add
mov
add
push
mov
xchg
ret
add
add
add
iret
jp
sbb
incl
add
add
add
add
add
imul
jae
push
add
add
add
add
fistpl
nop
push
mov
leave
nop
jmp
loope
add
out
add
add
nop
nop
jae
add
add
sbb
add
sbb
cld
nop
nop
jae
add
in
call
add
mov
or
clc
repnz
nop
nop
jae
dec
add
mov
mov
pop
add
repnz
nop
nop
jae
or
and
nop
jmp
pop
add
add
dec
addr16
nop
push
mov
leave
nop
jmp
add
push
lret
and
clc
repnz
nop
nop
jae
imul
push
mov
leave
nop
jmp
xchg
add
xchg
add
leave
push
clc
repnz
nop
nop
jae
sbb
jne
nop
push
mov
leave
nop
jmp
add
add
shlb
out
out
clc
clc
repnz
nop
nop
jae
add
mov
repnz
nop
nop
jae
add
add
add
xlat
in
add
fwait
clc
repnz
nop
nop
jae
fistps
add
fimull
push
clc
repnz
nop
nop
jae
cmp
outsl
pop
add
in
xor
jne
push
mov
xchg
ret
dec
pop
add
xor
add
push
mov
leave
nop
jmp
aaa
int
push
into
add
pop
push
mov
xchg
ret
mov
add
dec
mov
repnz
nop
nop
jae
iret
add
add
dec
push
mov
xchg
ret
out
add
pop
out
in
out
add
clc
repnz
nop
nop
jae
add
push
jge
inc
call
nop
jae
in
adc
or
add
cld
nop
nop
jae
cmpsl
sbb
add
dec
add
mov
clc
repnz
nop
nop
jae
dec
push
add
add
nop
push
mov
leave
nop
jmp
pop
dec
add
mov
xchg
ret
rolb
pop
dec
dec
icebp
into
add
mov
xchg
ret
popa
iret
popa
xchg
and
add
testl
nop
push
mov
leave
nop
jmp
xchg
lock
je
mov
add
sbb
dec
add
clc
repnz
nop
nop
jae
add
dec
add
adc
xor
clc
repnz
nop
nop
jae
cmp
rolb
jg
sbb
push
mov
xchg
ret
sbb
pop
cmp
clc
repnz
nop
nop
jae
mov
push
mov
mov
push
mov
leave
nop
jmp
scas
add
addl
jae
add
test
add
xchg
mov
jmp
add
add
mov
dec
loope
test
add
int
add
je
clc
repnz
nop
nop
jae
add
add
ljmp
mov
leave
nop
jmp
pop
add
mov
addl
add
and
clc
repnz
nop
nop
jae
add
add
add
add
repnz
nop
nop
jae
mov
push
dec
and
add
add
mov
clc
repnz
nop
nop
jae
sbb
add
mov
clc
repnz
nop
nop
jae
pop
cmp
add
pop
and
test
call
nop
jmp
push
push
fistps
add
add
clc
repnz
nop
nop
jae
repz
add
dec
add
repnz
mov
add
in
mov
ror
add
lock
add
xchg
mov
xchg
ret
add
in
add
ret
xchg
dec
imul
nop
jae
add
xchg
icebp
dec
add
add
add
rorl
repnz
nop
nop
jae
pop
add
repz
je
mov
sti
add
add
nop
push
mov
leave
nop
jmp
into
add
enter
repnz
nop
nop
jae
add
outsl
add
cmpsl
imul
nop
nop
jae
int
sbb
mov
cmp
cld
nop
nop
jae
jbe
lock
iret
add
clc
add
inc
pop
inc
add
call
add
push
push
mov
xchg
ret
dec
xchg
lock
add
adc
mov
nop
push
mov
leave
nop
jmp
add
int
add
sbb
clc
repnz
nop
nop
jae
add
mov
add
nop
push
mov
leave
nop
jmp
in
std
and
repnz
nop
nop
jae
add
mov
mov
pop
clc
repnz
nop
nop
jae
push
push
cld
in
add
scas
mov
in
add
add
pop
add
add
add
movb
fisttpl
mov
adc
push
mov
leave
nop
jmp
add
add
mov
add
clc
repnz
nop
nop
jae
add
add
add
mov
xchg
ret
add
adc
cmp
inc
ret
nop
push
mov
leave
nop
jmp
add
lock
in
push
push
clc
repnz
nop
nop
jae
add
xlat
mov
add
sbb
push
mov
xchg
ret
add
push
jbe
add
push
add
add
cmp
nop
push
mov
leave
nop
jmp
add
add
mov
xchg
ret
xorl
add
add
pop
clc
repnz
nop
nop
jae
add
add
push
popa
std
jbe
inc
mov
nop
push
mov
leave
nop
jmp
mov
pop
add
mov
fidivs
mov
xchg
ret
add
aaa
dec
lock
sub
repnz
nop
nop
jae
in
test
xchg
jle
decb
nop
nop
jae
movl
sbb
fwait
mov
clc
repnz
nop
nop
jae
cmp
add
repz
out
push
mov
xlat
mov
add
jmp
adc
add
insb
add
jo
and
sbb
inc
mov
rcll
fildll
outsb
add
add
sub
adc
jns
sub
and
add
add
push
lea
test
gs
dec
ja
add
insb
add
cmpsb
aad
add
jmp
stos
mov
add
faddl
add
adc
in
test
test
scas
jb
mov
mov
add
pop
js
push
inc
in
ljmp
dec
add
or
adc
xchg
fimull
dec
add
cmovno
sub
mov
dec
add
add
test
jnp
out
push
add
lret
sub
fs
xchg
shll
add
add
xchg
sub
jne
mov
test
fiadds
dec
add
sbb
xchg
xchg
mov
cld
rol
mov
push
add
pop
add
add
push
add
add
test
add
pop
lods
jge
jae
adc
mov
out
data16
add
xor
mov
fists
fdivl
sahf
scas
mov
or
pop
je
scas
jecxz
add
pusha
add
loope
roll
add
aaa
pop
cld
and
popa
int
or
mov
adc
lret
nop
mov
mov
add
pop
sbb
jne
movsl
mov
cmpsl
test
cmpsl
inc
add
cmpsl
pop
add
sub
add
loope
push
clc
add
add
movsb
aaa
cmp
scas
jbe
or
dec
cmovno
or
mov
js
cltd
neg
inc
add
divb
push
xchg
shlb
aaa
pop
inc
add
add
add
stos
mov
mov
add
add
mov
jle
jmp
inc
add
add
push
dec
add
dec
add
out
loope
mov
add
cmp
aam
loop
add
fmul
arpl
nop
testl
add
mov
adc
add
add
inc
popf
cmp
fsts
add
cltd
mov
add
mov
sub
push
jp
sub
pop
add
dec
call
add
ljmp
test
mov
mov
pop
push
jl
pop
mov
add
push
push
add
inc
jo
sub
jle
mov
add
add
sbb
sbb
mov
lahf
and
mov
mov
adc
xchg
mov
mov
cld
add
push
add
xchg
push
add
pop
add
mov
daa
rcl
or
cltd
stos
jo
enter
mov
mov
dec
bound
jmp
dec
add
xchg
sbb
xchg
mov
lock
mov
mov
icebp
notl
pop
test
sub
arpl
add
sahf
clc
lahf
cmc
stc
push
add
out
outsb
add
les
add
pop
add
add
inc
and
sahf
dec
add
mov
cmp
lahf
fisubs
add
sbb
out
imul
lret
push
dec
add
cwtl
adc
dec
dec
mov
cld
shrb
jnp
sub
mov
jecxz
add
cmp
pop
add
sub
add
cmp
sti
and
jg
test
mov
add
adc
in
add
xchg
imull
ljmp
add
dec
and
mov
cli
dec
add
sbb
pop
add
pop
mov
or
add
mov
xor
rcr
xor
sahf
aad
add
scas
scas
mov
loope
pop
mov
scas
mov
and
mov
mov
mov
add
push
add
adcl
sahf
subl
data16
shlb
mov
das
push
add
pop
add
xor
movsl
mov
sbb
xchg
jge
add
add
cmp
stos
jg
lock
data16
add
scas
push
test
mov
lock
jmp
int
sahf
rolb
enter
int3
into
inc
add
lcall
add
in
mov
imul
cmp
sbb
les
xor
add
fcomps
add
push
add
fucom
sub
nop
mov
add
fmulp
xchg
inc
add
hlt
push
add
jge
add
loop
mov
dec
test
sub
add
movsb
xchg
mov
xchg
mov
push
add
add
aaa
mov
or
into
inc
sbb
adc
push
add
pop
and
add
cwtl
jmp
cld
rolb
loop
subl
xlat
jl
mov
dec
add
add
dec
add
iret
jo
cmp
dec
add
add
or
sarl
or
lret
insl
rolb
cltd
sub
clc
dec
mov
push
add
data16
cmp
pushf
sbb
add
lock
xchg
add
add
or
add
outsb
add
in
subl
push
add
pop
dec
fwait
pop
data16
lret
push
add
add
mov
pop
add
mov
in
push
xor
repnz
in
test
jl
call
inc
add
mov
cmc
nop
dec
ret
icebp
test
fists
mov
outsb
add
inc
out
add
and
lods
subb
rol
dec
or
or
xchg
test
movb
xor
and
add
test
add
negl
inc
add
add
aam
add
add
mov
pop
imul
fcomp
jns
cmc
fbld
in
and
mov
mov
aam
mov
add
aad
pop
int
repz
cltd
inc
add
jmp
jnp
add
cwtl
aaa
mov
push
sub
pusha
add
add
fnstcw
mov
das
cmpb
add
add
lahf
aas
packsswb
xor
movsl
sbb
pushf
jle
jo
push
jbe
push
add
xchg
gs
or
add
add
adc
data16
add
and
pop
gs
jl
jae
sarl
das
mov
dec
fcoms
or
and
cmp
inc
dec
add
sub
add
int3
add
lods
iret
arpl
dec
cld
rcll
cmp
les
add
leave
inc
xor
test
add
xchg
out
adc
xor
lahf
or
or
jnp
scas
jb
lret
mov
add
add
sub
jge
pusha
add
and
inc
sub
add
add
sarb
add
push
clc
and
adc
cmp
in
mov
adc
pop
xlat
cmpb
add
push
add
jmp
push
add
test
scas
std
xor
xchg
stos
cmp
ljmp
lods
cmp
fsub
mov
cwtl
negb
add
mov
add
sub
jne
push
add
inc
mulb
call
add
xor
pop
in
rcr
mov
add
loope
sti
mov
add
faddp
push
add
add
notl
sbb
stc
mov
mov
mov
jp
mov
cwtl
pop
add
sbb
push
add
fisttps
cld
movsl
sarb
xorb
rcrb
push
add
mov
loopne
xor
add
jl
add
adc
add
scas
sbb
jae
cmpb
xor
dec
add
aad
in
data16
movsb
mov
scas
cmpb
test
mov
cmp
mov
sub
js
push
daa
jnp
add
dec
add
mov
dec
add
movsb
xor
add
add
push
add
jle
mov
add
xchg
rorb
mov
mov
outsl
xchg
pop
mov
ljmp
ja
test
add
jecxz
sbb
jg
aad
or
inc
int3
in
cmc
and
push
add
mov
das
push
cmp
lret
push
add
out
imul
add
notb
add
add
add
rcrb
xor
sbb
std
enter
mov
add
clc
pop
add
add
outsl
aaa
scas
push
add
mov
xor
fdiv
sub
mov
push
xchg
or
cmp
shrb
add
lret
daa
pop
dec
fdivl
push
xchg
test
icebp
adc
mov
pop
xchg
mov
add
cmp
jp
push
add
or
jecxz
add
add
pop
xchg
ja
push
add
mov
sbb
or
sbb
lret
jae
add
push
add
fadds
push
popf
cmp
push
and
shrl
add
add
aaa
add
mov
sti
out
jp
dec
add
aad
add
add
rcll
add
and
push
mov
and
cmp
mov
lahf
and
add
add
lahf
aaa
fidivrs
push
scas
lahf
mov
inc
adc
add
jo
pop
imul
xor
cmpsb
jno
add
adcb
xor
mov
and
xchg
pop
add
clc
xchg
sbb
decb
in
jno
call
sahf
mov
call
mov
or
inc
ret
in
add
mov
add
test
insl
cmp
jg
out
mov
add
cmpsl
in
sub
add
imul
fstps
xchg
mov
sub
add
jg
imul
repz
outsb
add
cmp
mov
add
pusha
add
jne
add
add
decl
and
test
popf
xor
add
aam
push
add
mov
jmp
add
insb
add
jo
or
int
pop
nop
test
xchg
out
sbbb
clc
dec
xchg
decl
daa
cwtl
ret
scas
jecxz
add
add
pusha
add
add
ds
in
mulps
add
lret
add
xchg
cld
dec
add
and
cmc
adc
out
fcmovnbe
fisttps
add
add
stos
xor
xchg
pusha
add
push
mov
xchg
loop
cli
push
add
jne
push
add
add
inc
lods
xchg
add
push
add
add
dec
push
add
add
cmpsb
adc
pop
xlat
and
sbb
inc
add
sbb
cmc
cli
push
jecxz
fwait
mov
jnp
daa
mov
dec
add
and
xchg
aaa
aam
add
xor
cmp
call
and
push
add
mov
or
movl
xchg
sub
repnz
mov
fwait
push
or
out
and
cmp
jno
int3
fmuls
scas
stc
gs
add
and
ret
out
add
and
add
xor
xchg
inc
add
mov
add
add
add
xchg
or
mov
test
add
add
pop
or
add
xchg
lods
jle
and
out
add
pop
pop
add
dec
add
lock
add
out
or
add
fildl
out
shl
push
add
outsb
add
int
mov
dec
out
mov
shr
int3
jmp
aaa
iret
loope
cmc
gs
fistl
imulb
sbb
mov
ja
sbb
add
popa
fcoml
add
add
out
rcr
add
jno
add
cli
fidivl
das
insb
add
movsl
arpl
jecxz
gs
ret
adc
add
sarl
dec
movsl
es
sbb
sbb
jp
js
pop
add
add
in
loop
mov
mov
fidivl
repz
add
lea
add
mov
jle
movl
add
ljmp
pop
jnp
rcrb
jmp
fcompl
rorb
notl
shr
nop
and
daa
rorl
outsl
es
testl
imul
add
dec
add
add
jecxz
add
test
shll
aam
ja
push
add
call
leave
outsb
add
lret
decb
adc
add
add
add
add
aad
add
lret
cmp
inc
or
sahf
scas
add
in
repnz
xorl
push
add
dec
dec
cmp
xchg
lods
test
adc
pop
add
insl
lahf
mov
cld
mov
sti
dec
cmp
adc
loope
add
sub
jge
xor
or
adc
add
test
movsb
outsb
add
scas
fdivs
add
test
cmp
pop
push
add
and
push
in
rclb
imul
pusha
add
sub
sti
add
sub
aam
jg
jns
add
fdivrs
decl
les
pop
sub
adc
mov
lea
call
movsb
pop
add
cmove
mov
mov
add
xor
inc
add
pop
lahf
mov
push
push
add
pop
add
add
add
subb
mov
outsl
es
jecxz
mov
xor
push
push
add
rorl
add
out
out
cmp
fdiv
pushf
inc
add
cmp
inc
jle
sub
mov
add
push
adcl
call
inc
jmp
dec
add
or
aaa
loopne
add
test
outsl
scas
mov
add
add
rep
push
mov
fwait
push
add
add
add
test
add
bound
loope
add
mov
jl
imul
rol
in
add
fbstp
add
inc
add
stos
adc
push
fcoml
iret
in
pop
lret
cmc
insb
add
mov
xchg
fcompl
andl
sbbb
aad
mov
pop
sub
pop
mov
add
dec
add
add
lea
add
stos
dec
add
xchg
xor
andb
sub
divb
add
dec
add
ljmp
js
icebp
sub
stos
xor
and
add
add
int3
into
mov
or
out
sbb
mov
jl
inc
sbb
fdivrs
add
jno
js
sbb
aas
push
add
pop
add
outsl
sub
mov
gs
add
mov
sbb
add
pop
or
cltd
arpl
repnz
lret
and
fdivrl
add
add
add
add
mov
mov
xor
cwtl
cmp
jno
mov
aaa
test
add
dec
add
add
cmc
lods
ja
fmuls
mov
sub
add
shlb
adc
test
add
dec
fmul
jne
fadds
jl
lods
xchg
in
dec
add
cwtl
cmpb
repz
add
sbb
in
mov
and
lcall
sub
sahf
out
add
add
popf
mov
pop
lock
outsl
test
data16
popa
xchg
pop
pop
add
mov
ret
out
xchg
vmovlps
mov
ds
mov
push
and
int
lret
or
lret
inc
lds
push
add
sub
daa
icebp
ljmp
insb
add
add
push
add
push
sbb
pop
addr16
add
xchg
imul
in
movsl
sbb
mov
sub
dec
cltd
test
jae
cmpsb
sub
sahf
data16
or
fcomps
pop
cmpsl
loope
movsl
adc
ficompl
out
add
pop
add
or
addl
add
add
add
fdiv
jno
add
mov
dec
add
add
cmpsb
push
add
add
xchg
add
movaps
stc
xchg
shrb
data16
in
out
dec
add
int
cltd
xor
in
mov
std
pushl
mov
and
sub
lahf
adc
jle
add
sbb
std
add
mov
xchg
ss
fldt
iret
add
add
insl
subb
sahf
dec
add
jg
std
mov
add
add
test
mov
dec
add
pop
mov
add
repz
jg
add
movsb
sbb
out
lea
jnp
rcr
mov
push
iret
je
movsl
mov
lret
or
sub
sub
adc
cmp
or
add
lahf
scas
repz
add
test
or
scas
pusha
add
add
loopne
add
mov
add
mov
add
adc
dec
bound
push
add
dec
add
test
and
aas
push
and
xchg
in
scas
and
mov
add
dec
mov
jle
popf
das
stc
popa
mov
negl
add
add
mov
lret
mov
add
shl
jne
out
dec
add
or
adc
and
ds
inc
add
xchg
repz
push
mov
add
fnstsw
add
int
sbb
jg
add
and
adc
push
pusha
add
cmp
cwtl
les
mov
pop
sbb
add
add
push
add
jp
mov
fidivl
add
cmc
in
mov
add
jns
pop
add
aas
add
or
mov
add
daa
add
cmp
fbstp
xchg
mov
dec
add
add
xor
pop
dec
add
add
ret
shr
push
mull
jmp
add
add
push
movsb
scas
fsubp
jle
ljmp
push
rcrb
xor
cmp
rcrl
push
add
mov
push
add
adc
sahf
jp
shl
fimuls
jle
ja
pushf
add
inc
mov
xchg
mov
iret
lret
mov
addr16
sbb
jns
data16
add
pop
sub
fstl
jbe
and
lds
mov
add
mov
cmovl
es
mov
jb
imulb
inc
add
push
add
add
scas
push
leave
in
fsubrs
bswap
fsts
add
mov
and
ret
data16
add
imul
loop
push
notl
aad
insl
xchg
xor
enter
aad
outsb
add
add
arpl
loope
add
dec
add
mov
in
in
add
add
sbb
aaa
mov
rcll
add
icebp
hlt
cwtl
stc
and
cwtl
or
test
inc
inc
add
jmp
mov
cmp
addl
adc
jecxz
or
mov
add
xor
popf
pop
or
push
aaa
lds
add
mov
cmp
xor
xor
cmp
and
add
add
lea
xor
add
ret
imul
add
mov
sub
mov
out
ret
testb
fwait
shl
add
pop
jns
adc
scas
add
sbb
jno
lret
fstpt
lret
dec
jo
lahf
dec
xchg
push
lods
dec
add
lahf
stc
icebp
xor
leave
mov
or
lret
add
add
pop
outsb
add
dec
lcall
pusha
add
or
es
xor
inc
add
fbstp
mov
mov
sbb
imul
add
dec
add
add
add
movsb
jae
repz
add
ret
add
add
push
test
add
inc
add
add
jge
shrb
dec
cmpsl
nop
lcall
add
aaa
add
push
add
add
inc
add
add
jge
cmp
push
inc
add
sbb
lcall
lods
out
clc
out
cmp
mov
pop
in
and
add
push
add
add
in
xor
adcb
mov
mov
cmc
cld
jp
roll
fimull
rol
dec
pop
xchg
ret
jmp
add
add
add
add
movswl
fchs
mov
data16
shrb
stc
scas
xchg
jae
add
enter
in
add
insb
add
mov
scas
cmpl
add
loop
add
fcomps
dec
sub
dec
add
test
xchg
scas
shrl
ret
out
add
adc
cmpsb
rorb
enter
push
add
mov
pop
push
xor
dec
add
inc
dec
andl
icebp
push
filds
xchg
sub
add
movb
sbb
test
add
cmpsl
into
popf
icebp
je
and
out
mov
mull
xchg
mov
dec
add
xor
sbb
filds
push
sbb
push
add
scas
mov
cltd
rorl
or
cmp
int3
das
jl
lret
push
xchg
jb
mov
add
add
xor
mov
and
jmp
mov
add
js
xchg
push
add
add
lret
mov
and
out
cmpsl
xorl
scas
insb
add
pop
add
add
cwtl
and
push
add
dec
mov
add
insl
add
cmpb
add
add
mov
jge
pop
add
cmp
add
sbb
addr16
add
hlt
jo
arpl
add
scas
pusha
add
outsb
add
add
pushf
shll
fucomi
lahf
outsl
jb
dec
nop
cmp
add
add
mov
jmp
inc
add
loopne
add
cli
decb
in
xchg
jb
sti
sarb
inc
add
add
popf
xor
push
add
mov
xchg
mov
rorl
add
lcall
in
shlb
pop
add
sarl
or
add
push
les
popf
jbe
out
add
adc
clc
pop
add
add
inc
adc
std
mov
cmp
shll
cmp
ds
mov
jecxz
dec
mov
mov
sbb
mov
movsb
mov
stc
mov
inc
add
fmul
imul
add
fcoms
add
add
sbb
in
call
add
out
push
imul
movsl
gs
leave
jge
lods
jle
jno
mov
add
or
add
add
xorl
and
sub
ret
gs
data16
sarl
and
rcl
ljmp
stos
rcrb
add
rcr
add
and
add
arpl
nop
mov
aad
cmpsl
push
and
cmpsl
out
icebp
push
add
add
pushf
xchg
ljmp
cmp
imul
and
or
adc
xchg
jle
jnp
out
jne
add
in
adc
mov
add
add
add
jle
and
add
xor
push
add
daa
repz
jecxz
add
dec
cmp
dec
shll
fisubrl
adcb
ffree
mov
mov
cmp
add
add
fcoml
push
add
mov
cld
push
add
add
add
mov
fimuls
cltd
cmp
xor
negl
add
fld
dec
push
add
or
xorb
add
les
sbb
pushf
inc
pop
add
mov
or
mov
add
nop
cltd
repnz
and
add
inc
add
je
out
xchg
add
into
arpl
add
add
pop
add
mov
int3
jno
add
mov
mov
cmpsl
test
jecxz
inc
add
fisttps
add
xchg
add
add
pop
inc
lea
test
xor
mulb
and
ljmp
mov
jbe
mov
stc
or
add
es
and
adc
or
mov
cld
add
or
fmuls
pop
pusha
add
in
dec
add
out
adc
inc
test
mov
jg
sub
push
lahf
sub
mov
jmp
push
add
lock
dec
dec
xchg
mov
jge
scas
and
add
cmpl
movsl
pushf
rclb
add
sub
mov
mov
pop
pop
jp
jno
cmp
jb
push
add
sbb
jne
aaa
cltd
mov
imul
je
jb
aas
mov
add
cld
mov
add
add
and
dec
add
cli
std
jge
sub
fsubl
popa
popa
scas
daa
fwait
cwtl
mov
add
xchg
mov
jg
orl
jl
pusha
add
int3
jmp
cmp
push
add
jnp
out
or
dec
add
cmp
pushf
lcall
xchg
ljmp
pop
xorl
push
add
add
imul
subl
fcompl
push
pop
test
stc
lcall
xchg
ja
push
add
cmp
int3
in
pop
leave
nop
int3
ds
pop
dec
sub
pusha
add
add
add
add
insb
add
add
mov
leave
mov
add
pop
add
sbbl
lcall
xchg
sbb
cmp
add
rcrb
cmp
add
data16
push
add
add
jp
out
fstpt
add
test
scas
xor
push
add
ljmp
add
add
add
dec
add
xor
aas
and
push
add
lret
sbb
aad
push
add
add
frstor
or
das
outsb
add
inc
je
add
and
xchg
mov
jae
add
shll
add
clc
pop
stos
push
lds
jne
mov
cli
mov
scas
xchg
lcall
xchg
rolb
sbb
add
add
aas
cld
ficomps
add
push
mov
outsl
lds
adc
lret
cmp
in
pushf
add
cli
mov
jbe
xor
int
sub
js
push
xchg
inc
add
add
or
inc
add
insb
add
mov
movsb
jae
fwait
dec
movsb
add
in
lcall
jne
sbb
cmp
add
push
add
in
lcall
outsb
add
xchg
xor
lods
adc
xlat
enter
add
mov
add
xchg
mov
not
mov
add
pop
add
jecxz
jecxz
orps
mov
pop
addb
icebp
ret
cmp
xor
jecxz
or
fsubs
add
dec
add
ret
add
xor
xchg
push
or
cmp
add
nop
push
add
add
add
shl
xchg
mov
add
or
and
data16
fistpll
dec
lcall
or
inc
add
push
rcll
pop
xchg
into
cli
jmp
add
inc
add
jmp
cltd
fadds
stc
adc
inc
inc
or
push
add
sub
jbe
adc
stos
leave
jl
pop
subb
out
push
add
imul
insl
or
orl
jmp
fwait
jle
stos
mov
pop
into
or
add
pop
lea
ljmp
pop
sbb
addr16
imul
add
rorb
xchg
add
int3
mov
roll
or
clc
cmp
imul
addr16
je
shr
jle
psubsb
cmpsl
sbb
subb
les
or
popf
pop
fistpl
add
pop
jecxz
lods
mov
add
testl
add
jle
cmp
shll
add
hlt
sbb
push
mov
nop
dec
add
fwait
out
add
das
call
add
add
xchg
jecxz
pop
push
rorl
scas
rcrb
add
pop
push
jae
add
fcmovnb
cltd
mov
lahf
imul
or
fistpl
aas
insb
add
mov
in
sub
repz
push
jmp
xor
inc
add
add
xchg
ja
scas
mov
add
add
addl
jmp
add
mov
and
sub
xor
pop
add
jno
add
mov
xor
sbb
pop
add
insl
mov
es
fcmovnu
je
das
cli
xchg
or
cli
enter
jb
popf
or
mov
mov
add
cmp
adc
cmc
in
add
orl
add
add
mov
cmp
mov
and
lock
add
mov
add
pop
jo
xchg
add
divl
sub
add
add
mov
sbb
add
add
add
cmp
fldcw
add
add
push
add
add
and
iret
into
loopne
jmp
mov
out
fcompl
lods
mov
add
add
rcll
add
pop
push
xchg
bound
mov
add
lods
jb
test
inc
add
dec
int3
jmp
or
movsb
lret
stos
lods
das
jns
sbb
add
data16
jnp
mov
add
gs
pop
cmp
push
add
add
add
or
add
ret
lret
adc
fucomip
inc
add
aad
add
mov
add
scas
or
add
push
add
add
or
test
pushf
sub
sub
push
add
push
mov
mov
xlat
xlat
ret
add
mov
mov
dec
add
adc
push
add
add
xchg
xchg
mov
push
add
push
add
or
jbe
push
add
in
pop
or
add
add
push
add
lret
jmp
add
pop
std
data16
sbb
mov
aas
imul
rcr
movl
shll
mov
mov
sub
xchg
pop
jg
cmc
fcomps
sti
push
cmc
repz
jmp
ss
pop
add
add
popf
push
and
sbb
adc
cmpb
or
ja
add
mov
jns
sarb
adc
dec
loopne
add
fcmovnb
icebp
insb
add
cwtl
mov
sub
leave
loopne
mov
sub
mov
dec
addl
add
jp
pushf
jbe
arpl
add
out
sbb
sub
adc
scas
test
pop
add
lods
leave
push
add
dec
inc
add
add
dec
add
add
lahf
mov
jp
add
sub
push
add
add
jp
add
aas
mov
imul
mov
add
into
movsl
je
popf
imul
push
add
js
out
or
jmp
mov
lds
fwait
mov
adc
out
loopne
lret
in
or
nop
mov
lock
test
xchg
nop
xor
xchg
inc
add
adc
shrl
mov
add
imull
add
add
adc
jl
js
push
add
add
rcr
push
nop
daa
mov
pop
sub
pop
cmp
push
xchg
push
add
cmp
pop
jne
add
jnp
lds
add
adc
push
add
cmpsl
scas
lods
mov
add
dec
leave
mov
add
pop
jns
sub
cmp
sbb
faddl
filds
add
rol
int
add
sub
dec
call
xlat
in
jp
fsts
add
and
inc
add
je
test
icebp
jmp
add
leave
repnz
add
add
cmp
movsb
adc
mov
mov
insb
add
aaa
and
mov
dec
xor
int
add
push
add
push
add
daa
lea
mov
add
add
mov
mov
popf
pop
add
add
jecxz
add
outsl
leave
sbb
mov
add
sub
sarb
add
inc
add
not
sbb
lds
in
outsb
add
push
mov
mov
and
sub
add
add
inc
add
lahf
push
add
stos
jg
movsl
ds
js
cltd
stc
xorl
outsl
add
add
cmp
add
or
pop
addr16
mov
mov
in
or
sub
mov
fisubrs
add
add
and
mov
aam
stos
xor
add
addb
add
aad
pop
add
fs
and
push
add
pop
ljmp
pop
add
bound
lods
and
rcll
dec
cwtl
loope
add
cmpsl
ds
push
or
add
lret
push
fiaddl
aad
mov
stc
iret
fists
inc
add
jns
add
pop
pop
add
mov
stos
rolb
lret
je
cwtl
pop
add
add
mov
add
add
cltd
jnp
pop
pop
rolb
add
xchg
add
shlb
cwtl
xchg
jb
dec
add
adc
mov
add
js
jo
outsl
repz
je
out
int
add
jbe
pop
add
jg
dec
add
std
das
or
out
cltd
jg
add
nop
jl
cmp
xlat
stc
push
add
rorl
sbb
cmp
add
stos
xchg
ljmp
adc
mov
xlat
cmp
add
inc
add
add
pop
add
add
jmp
lret
add
mov
add
mov
jle
adc
dec
xchg
or
cwtl
inc
pop
jp
testb
test
push
cmp
mov
dec
mov
hlt
icebp
in
stos
add
add
cmp
dec
add
adc
ret
mov
decb
sti
leave
sub
mov
mov
jnp
pop
push
cmp
lret
add
cmp
cmpl
addr16
add
sub
add
add
out
in
test
mov
xor
clc
cmp
mov
hlt
fisttpll
mov
rcrb
dec
add
add
inc
add
jns
ror
in
and
adc
mov
pop
add
ljmp
cmpb
jl
movsl
xchg
xor
xchg
inc
add
fsubl
loopne
add
movsb
shll
fwait
mov
jle
js
mov
loopne
sub
add
jns
pop
add
in
mov
movsb
jmp
ljmp
std
sbb
push
push
add
cmp
sbb
rcrl
addr16
icebp
or
mov
add
pop
add
ja
lret
xlat
adc
das
jl
lods
cmp
mov
add
add
daa
adc
add
jg
cmp
add
call
or
add
scas
jb
push
mov
rolb
cli
fistps
mov
add
mov
add
xchg
mov
pop
add
and
add
cmp
add
into
add
mov
mov
add
das
cmpsb
inc
add
add
in
jl
sub
or
push
add
data16
cmpsb
jge
outsb
add
adc
and
ret
int
add
xlat
sub
fildl
mov
mov
xor
test
xor
arpl
mov
add
repz
test
fisubrs
fwait
addr16
xor
sub
adc
testb
insb
add
lea
jne
dec
add
movsl
cltd
jecxz
add
add
mov
aas
fwait
jl
or
pop
add
dec
push
xchg
mov
add
mov
add
fbld
xchg
push
add
loope
add
fdivrl
or
add
inc
mov
add
int3
add
push
add
push
nop
movsb
repz
sbb
bound
lock
add
arpl
add
sub
xchg
ja
into
add
lcall
add
test
add
test
jp
mov
add
mov
or
fs
add
dec
add
cli
sbb
or
fbld
mov
mov
jne
mov
sti
ret
shrl
sbb
sub
mov
mov
jo
test
add
adc
mov
int3
lock
jae
fcoms
dec
enter
xchg
or
push
pusha
add
enter
movsl
cld
mov
pop
shrb
inc
sti
test
sub
insb
add
test
add
sub
test
sbb
or
in
add
movsl
sub
xor
sbb
enter
and
lods
jno
push
add
clc
mov
bound
in
cmp
sbbl
inc
add
ljmp
add
add
jae
mov
pop
cli
pop
add
in
add
in
inc
adc
sbb
lret
dec
add
jo
jl
inc
pusha
add
das
nop
repz
push
add
cltd
cltd
ljmp
add
sub
int3
out
pop
xor
and
and
or
add
xchg
cmp
dec
add
call
add
add
int
out
fnstcw
add
adc
out
mov
add
add
gs
pop
or
mov
add
cli
dec
add
cmpsl
stos
out
add
mov
repz
int
lahf
pop
mov
add
pushf
arpl
fdivrp
aaa
ret
dec
add
pop
add
mov
add
iret
dec
push
add
rolb
add
mov
add
jns
lods
test
loopne
ror
call
adc
and
or
in
outsl
mov
add
gs
and
xlat
cltd
movswl
add
add
xchg
dec
add
mov
sti
jae
test
xchg
xchg
jb
cmpsl
incb
add
iret
xchg
inc
add
mov
xchg
cwtl
jns
add
xchg
data16
dec
xchg
xor
dec
push
jb
mov
iret
or
pop
add
pop
movsl
push
add
pop
add
add
xchg
imul
mov
daa
repnz
xor
add
andb
stos
outsl
xchg
add
inc
add
mov
mov
add
sbb
aas
add
push
add
sub
cmp
repnz
in
sahf
dec
add
add
call
ljmp
xchg
jmp
push
dec
mov
cmp
sarb
add
add
jmp
xor
jbe
and
xchg
sub
xorl
xor
add
das
push
lahf
jp
cmp
pop
add
add
pushf
in
pop
stos
loope
add
fiadds
aad
and
jb
jbe
movsb
jle
rcll
add
inc
outsb
add
add
jne
sub
mov
je
push
push
add
lods
and
dec
add
pop
int3
mov
pop
data16
push
add
mov
fisttpl
sub
mov
add
pop
push
add
push
add
jle
hlt
dec
add
nop
mov
add
fs
sub
add
sbb
lahf
roll
repz
imul
add
mov
bound
jae
out
pop
add
imul
add
pop
add
subb
add
sbb
call
faddl
push
add
ja
add
add
outsl
adc
outsb
add
adc
xchg
aas
jp
cwtl
cmp
push
add
mov
cli
fwait
adc
data16
jns
adc
and
imul
popa
popl
add
add
rorb
add
and
scas
data16
add
sub
jnp
repz
push
add
pop
sub
dec
mov
lds
pusha
add
xor
fs
aas
push
cmpsb
fucomip
sub
jb
add
push
add
scas
jmp
add
mov
sbb
aam
add
push
add
push
mov
ficomps
xchg
sub
mov
add
xchg
add
repnz
cmp
imul
outsb
add
sbb
add
mov
inc
add
xchg
fcmovnu
add
xchg
sarl
xchg
fcoms
dec
ja
xchg
repz
inc
add
mov
add
lret
mov
mov
or
or
test
dec
xor
mov
add
rorl
push
lock
push
add
lods
or
jo
add
sbb
mov
add
xor
add
dec
add
mov
pop
mov
fidivs
clc
or
mov
jbe
sub
pop
add
lods
cli
shlb
add
xlat
js
pop
lahf
mov
inc
add
add
add
aaa
leave
and
jno
mov
sbb
add
insl
sarl
sub
inc
scas
push
mov
xchg
jp
sub
add
mov
sarb
call
adc
aad
out
add
mov
sub
fldt
ds
loop
in
cld
pop
sbb
insl
dec
call
sbb
rcrl
add
add
add
lahf
aas
sbb
add
inc
add
xchg
push
add
add
xor
add
sub
inc
subb
aaa
push
add
add
add
add
movsl
xor
sub
shlb
add
lahf
push
leave
psllq
xor
mov
cwtl
jnp
add
shll
cmpb
add
mov
add
pusha
add
lds
out
pop
pop
add
add
lock
and
loope
push
mov
out
test
add
add
dec
xchg
mov
sbb
add
add
sbb
pop
add
fmul
or
std
dec
mov
adc
pop
loop
nop
test
sbb
inc
loopne
push
add
push
add
gs
add
add
add
scas
roll
lea
mov
add
adc
lret
xchg
leave
push
add
jns
add
inc
add
push
mov
lret
add
add
xchg
jno
aam
and
push
cmp
ljmp
out
ss
out
rclb
cmc
repnz
add
enter
add
add
push
pop
addr16
int
lock
lahf
lahf
jl
idivb
sbb
lods
js
sbbb
inc
add
data16
jb
pusha
add
cmp
adc
xor
xor
push
add
ret
into
jae
sti
repnz
aas
sbb
loopne
xchg
je
add
cmpsb
bound
and
das
mov
mov
mov
or
iret
ret
add
add
mov
add
les
test
pop
add
aaa
xlat
clc
hlt
pop
add
inc
dec
mov
add
xchg
jbe
shlb
push
add
xchg
add
pop
add
jno
add
add
js
int3
imul
lahf
push
add
jne
ret
pop
add
fsubr
popa
sub
arpl
sbb
loop
test
inc
pop
add
add
dec
popf
lock
fmuls
pop
test
xor
cli
adcb
out
dec
stc
stc
xorb
add
add
aad
add
in
adc
mov
pusha
add
adc
int3
lods
cmc
xchg
decb
pop
add
addb
add
add
mov
je
cmpsl
and
push
shll
jae
jnp
cmc
call
das
out
test
xchg
sbb
xchg
mov
xchg
rcrl
ror
stc
jns
add
jg
add
xchg
lcall
jae
push
add
push
add
jo
ret
mov
out
lcall
xlat
out
mov
lods
lea
or
xor
imul
mov
pop
and
mov
mov
cld
dec
outsb
add
movsb
push
mov
inc
add
fistl
mov
int
int
cmp
mov
or
stos
fsub
inc
add
add
imul
scas
jbe
mov
jo
sbb
ljmp
fmul
leave
sbb
ja
xchg
movsl
push
mov
js
mov
data16
mov
push
add
mov
add
cmpsl
cli
test
cld
cmp
es
je
leave
test
adc
adc
add
lahf
cmp
push
ret
add
insl
pop
push
add
loope
rcl
hlt
insb
add
dec
xchg
xchg
lods
scas
push
inc
add
fistpl
gs
jmp
ret
add
daa
adc
jnp
add
add
add
sub
add
add
add
sub
movsb
orb
lret
push
add
add
gs
fsubrl
add
test
jae
pop
jmp
mov
adc
in
xor
clc
cmp
add
and
ljmp
add
push
add
in
call
sub
add
mov
push
add
push
mov
arpl
decl
add
mov
add
das
sub
out
mov
in
and
mov
add
test
hlt
push
in
pop
mov
add
mov
xchg
fidivs
shrb
xor
mov
dec
mov
push
sub
xchg
fcom
outsl
sub
loopne
add
push
add
loop
sbb
mov
add
dec
add
jmp
sbb
imul
adc
add
mov
in
sbb
add
jno
out
mov
cmp
cwtl
sub
inc
add
cmpsb
jecxz
add
inc
lahf
jecxz
and
add
adc
mov
lds
popl
fidivl
push
add
ffree
add
push
imul
push
add
jae
cmp
push
add
out
xor
add
push
add
add
nop
push
add
push
bound
jg
and
bound
and
add
or
sbb
jne
add
insb
add
roll
ja
add
add
fistpl
add
mov
inc
add
ficompl
mov
push
add
xchg
add
mull
imul
lahf
or
cmp
xchg
or
aam
jecxz
mov
out
mov
add
out
sub
mov
insb
add
pop
test
arpl
add
add
inc
add
push
add
mov
in
xchg
pop
cwtl
add
dec
dec
stos
insb
add
jno
stos
lea
rorb
pusha
add
fldl
add
dec
add
mov
jmp
add
add
adc
outsl
cmpsl
int
jle
outsl
mov
jb
iret
sahf
xchg
add
fsubrs
add
clc
add
and
xor
and
popf
mov
push
add
and
mov
cltd
in
jb
add
cmpsb
loop
add
add
dec
add
arpl
mov
test
addr16
cmp
adc
add
nop
sbb
jbe
sub
jmp
outsl
xchg
ficomps
jno
lods
jg
mov
mov
or
mov
dec
add
add
sub
xlat
sub
mov
mov
shl
test
sti
mov
cwtl
mov
stc
and
xchg
cmp
add
inc
add
pop
add
push
add
add
xor
xchg
lods
lcall
inc
jge
push
add
add
push
xor
add
sbb
int
and
sti
add
add
add
ja
imul
inc
add
mov
mov
decl
sub
stos
mov
int
mov
push
add
pop
xlat
push
add
pop
add
mov
add
and
ficompl
fwait
loopne
pop
add
mov
dec
int3
lahf
mov
ret
mov
add
jmp
add
mov
and
mov
xchg
xlat
push
jp
loopne
mov
dec
pushf
push
add
pusha
add
and
add
out
add
icebp
lcall
loope
sahf
push
add
add
inc
add
adcl
add
push
add
add
inc
lahf
out
inc
add
test
sbb
add
xor
xchg
lods
jno
insb
add
dec
add
xlat
xchg
cmp
mov
addr16
xchg
pop
jecxz
repz
add
pop
or
mov
popf
imul
add
stos
into
movsb
mov
in
inc
sbb
xchg
repz
add
pop
push
add
mov
or
jb
sbb
mov
pushf
or
dec
add
or
and
cmp
xorb
inc
out
mov
lcall
rol
mov
cmp
add
cmc
popa
mov
sbb
and
add
mov
fadds
call
nop
sti
sahf
jbe
or
dec
add
add
add
xchg
data16
sbb
bound
incl
das
loopne
mov
ret
add
push
xchg
jb
shll
add
jno
stc
bound
addb
mov
movsb
mov
jmp
imul
add
jnp
fwait
or
cmp
ja
cld
xor
xor
sub
add
push
add
and
push
add
cmp
inc
add
add
out
in
mov
add
into
hlt
push
add
enter
sub
push
add
adc
lret
test
js
xchg
add
cmova
int
cmpsl
in
ljmp
push
add
add
cmp
test
cmpsl
in
sarb
add
mov
bound
push
add
add
inc
add
add
nop
mov
cmpsb
push
add
mov
xchg
aas
movsb
pop
jae
add
arpl
dec
sbb
add
sub
add
mov
mov
xchg
in
jno
push
add
jecxz
adc
lcall
setp
sub
mov
add
add
fsubrs
fsubrs
cltd
push
add
out
dec
aaa
std
test
and
add
or
addl
loope
sub
xchg
int3
pop
pop
push
pop
xor
push
add
jl
add
add
add
daa
pop
add
out
add
call
hlt
inc
sti
push
add
sbb
inc
add
out
add
mov
mov
outsl
shrb
add
pop
int3
xchg
add
add
mov
push
mov
add
xchg
sahf
lods
add
add
aad
xchg
test
repnz
inc
add
clc
or
insb
add
pushl
xor
add
sets
mov
bnd
in
gs
add
pop
mov
std
cmp
or
aas
stc
xchg
aas
jmp
cltd
jl
popf
xchg
mov
cwtl
inc
add
sahf
lods
push
add
add
add
add
mov
stos
in
and
lret
pop
push
add
push
add
mov
inc
add
mov
add
aaa
push
popa
push
add
push
add
add
cltd
std
add
mov
add
add
mov
out
pop
add
xor
jne
adc
out
call
sub
lret
dec
call
add
xchg
lock
imul
xchg
cmp
push
add
fucompp
add
add
in
inc
sarb
cmp
imul
pop
and
add
insb
add
add
leave
movsb
inc
add
jmp
add
xchg
test
lds
sub
xor
and
xor
mov
sub
sub
in
add
jl
inc
dec
add
mov
add
add
sub
shlb
add
xchg
into
repnz
adc
mov
jno
ficoml
fiadds
or
add
xchg
push
add
shrb
or
jnp
ret
xor
xor
das
push
add
add
add
adc
jle
xor
jnp
test
mov
repnz
mov
mov
add
pushl
add
fisttpll
xchg
pop
add
dec
sbb
jg
inc
mov
mov
insb
add
testb
add
movsl
incl
add
in
out
shlb
mov
add
ret
or
repnz
popa
xor
fistps
add
add
shlb
cmp
adc
in
iret
in
dec
add
mov
dec
add
cmp
xchg
xchg
outsb
add
leave
xchg
add
add
in
popa
movsb
adc
fcmovb
mov
popa
push
push
rcrl
add
add
sub
dec
inc
add
lret
adc
mov
jae
daa
xchg
out
xlat
test
jmp
inc
add
int3
xchg
pop
test
add
push
fidivrl
sub
cmc
add
cmc
dec
xlat
repz
add
add
and
adc
movsl
dec
inc
pop
cmp
sub
aas
dec
add
jnp
xor
and
jnp
mov
dec
add
loop
repz
add
fisubl
or
xor
popa
sahf
mov
sbb
mov
scas
mov
dec
add
hlt
stos
push
jg
add
add
mov
cmpsl
aam
sti
or
test
sbb
dec
add
add
xor
inc
add
add
add
cld
in
push
add
jno
push
add
mov
xchg
aam
push
add
add
aas
xor
out
gs
test
pop
jle
adc
pop
sbb
adc
push
add
add
lret
rorb
add
popf
jo
repnz
pop
add
call
out
cltd
in
jae
sbb
rcr
add
mov
mov
out
add
ret
add
add
or
pop
fistpll
cli
into
inc
add
cmp
std
or
sub
ljmp
sbb
add
xchg
pushf
and
bnd
jp
mov
add
sahf
pop
add
fstpt
xor
add
mov
je
mov
fcmovbe
dec
insb
add
xor
cmpsb
or
arpl
and
icebp
hlt
xchg
xchg
xor
xchg
insl
ljmp
push
repz
sbb
mov
lea
cmp
aaa
scas
fincstp
notl
add
push
add
fwait
adc
dec
add
push
mov
dec
add
add
mov
scas
insl
hlt
xchg
fcmovnb
pop
insl
std
adc
mov
testl
push
xchg
sbb
xor
paddw
sbb
add
movsb
dec
add
testl
mov
add
jno
fadd
sub
adc
das
add
add
mov
repz
sub
mov
cltd
mov
mov
mov
ljmp
imul
adcb
jg
dec
mov
cwtl
jge
xlat
out
add
test
inc
adc
in
and
ret
add
and
add
add
add
adc
arpl
or
inc
add
cld
in
imul
push
fsts
and
lret
add
mov
add
add
add
popf
cmp
add
rcr
xor
add
bound
jle
movsb
movsb
fbld
or
sbb
repz
sbb
push
add
sbb
push
add
inc
scas
lods
lret
shlb
add
add
add
jno
add
popa
lods
mov
out
test
test
and
mov
add
push
cltd
adc
mov
sets
inc
aaa
das
jne
add
add
add
les
fucomp
or
sbb
jg
call
sarb
fcmovnbe
lret
xor
jp
xor
pushf
test
gs
add
add
scas
data16
leave
mov
cmp
add
add
es
je
dec
push
add
and
dec
and
addb
dec
add
and
xor
add
out
jnp
jmp
test
add
mov
add
add
enter
add
add
ja
fisubs
add
pop
shlb
adc
xchg
xor
fwait
jo
cmp
mov
add
stos
add
add
sub
push
add
push
add
xlat
mov
lea
add
push
add
add
mov
add
insb
add
daa
cld
xchg
in
mov
pop
rcrb
out
add
add
dec
add
and
mov
jnp
add
add
daa
jb
incb
cltd
or
add
jo
je
mov
ljmp
add
mov
add
std
cwtl
ret
and
pop
xchg
mov
adc
fstps
add
mov
add
out
lea
daa
mov
subb
mov
add
rorb
cmp
add
add
add
mov
add
fists
out
pop
add
pop
add
psrad
inc
mov
lret
fincstp
adc
mov
cmpsl
rclb
fcmovnb
enter
pop
mov
add
add
shr
inc
add
mov
add
pop
add
mov
add
ret
jno
int3
add
push
add
lea
add
add
add
add
add
int3
dec
add
add
mov
jge
add
add
add
add
push
add
add
mov
dec
add
pop
add
push
pop
add
add
add
lock
pushf
jge
scas
add
add
jg
or
loope
add
dec
arpl
cli
fimuls
add
dec
add
jnp
mov
mov
lods
jl
push
sbb
mov
add
pop
add
pop
sub
call
add
sub
add
mov
mov
push
lds
push
add
add
in
imul
ret
sti
sysexit
scas
fnstenv
jecxz
add
add
add
mov
xlat
scas
sbb
add
add
add
add
add
orl
test
imul
repz
adc
arpl
pushf
push
add
lods
nop
push
jo
lods
testb
add
imul
shlb
add
inc
push
stc
lahf
cmc
std
push
lock
add
xchg
inc
bound
mov
and
inc
add
add
pop
add
addr16
pop
add
jmp
lret
dec
jmp
lahf
dec
add
ficomps
mov
inc
les
dec
iret
cld
jo
xor
dec
add
add
pushf
xchg
sbb
fidivrs
js
mov
fmull
add
dec
add
mov
imul
xchg
sub
push
lods
arpl
add
popf
pushf
xchg
adc
jae
jbe
stos
xlat
or
cmp
test
pop
add
dec
inc
out
xor
add
das
les
add
cmc
jge
add
add
into
out
movsb
xchg
add
or
add
add
daa
mov
fidivl
add
add
adc
cmp
in
in
mov
daa
pop
test
decl
add
add
and
testl
enter
dec
int3
xor
sub
xor
enter
add
dec
vsubpd
add
cmpsl
sub
lock
add
add
inc
imul
dec
add
xor
sbb
inc
add
pop
add
add
pop
push
mov
add
repnz
dec
enter
adc
jmp
adc
cmc
sbb
nop
ret
int
xchg
into
outsl
mov
pop
add
add
sti
dec
add
insb
add
add
aad
add
add
sub
add
mov
imul
sarl
xchg
xchg
and
xchg
jmp
mov
add
add
add
jl
stos
push
jle
ja
sub
pop
jb
add
inc
lds
out
jae
and
add
add
sbb
dec
cmp
xchg
dec
add
add
add
lea
popa
in
xor
mov
push
add
loope
test
and
add
mov
add
pop
mov
jle
lea
add
fwait
jmp
cmpsb
push
or
cmp
stc
xchg
mov
add
cmp
adc
mov
loopne
cmp
aas
ja
and
inc
add
in
mov
add
addb
jp
xchg
xor
bound
dec
jb
imul
adc
mov
add
sub
lcall
mov
add
xor
dec
add
add
push
and
rcll
cmpsl
or
xor
das
mov
sbb
and
ret
rclb
xchg
add
cli
mov
add
sub
cmp
adc
outsl
jo
mov
sarb
add
ljmp
pop
push
add
pop
pushf
pushf
push
add
sbb
add
loopne
xlat
inc
add
mov
add
lahf
pusha
add
sub
lods
push
add
das
add
push
add
ds
loop
mov
das
mov
fcomps
add
inc
shlb
sbbb
jmp
sbb
jo
xor
insb
add
add
add
scas
sbb
add
ret
push
ret
xchg
insb
add
add
add
stos
inc
mov
loop
push
pop
add
adc
shrb
cltd
rcrb
les
add
add
jb
adcb
jbe
sbb
sbb
inc
add
add
fcompl
add
das
add
add
add
add
add
in
outsb
add
test
fcompl
sbb
stos
and
add
add
add
add
out
outsl
and
in
jecxz
sahf
mov
xchg
iret
push
or
lcall
cmpsb
pop
add
add
jo
push
mov
mov
int
push
jmp
add
and
add
sbb
add
pop
add
add
mov
add
add
clc
into
dec
mov
cmp
outsl
adc
js
xor
jl
arpl
push
add
add
add
inc
add
add
add
add
sbbl
add
lods
jne
cmc
xchg
repz
js
shrb
add
add
inc
add
jle
sub
push
xor
pop
cwtl
faddl
add
add
mov
dec
sti
popf
inc
xchg
or
cmpsb
dec
sub
mov
inc
add
imul
das
cmc
bnd
cmp
ljmp
enter
mov
mov
ljmp
push
add
push
and
stc
dec
add
add
mov
mov
mov
adc
adc
adc
add
add
jmp
add
add
jmp
mov
ficompl
add
inc
cltd
push
add
dec
or
adc
lds
xor
js
push
add
add
mov
icebp
into
push
aaa
dec
push
add
mov
add
mov
push
add
xchg
sahf
xchg
cmp
insb
add
cmpsb
or
mov
mov
cld
jecxz
add
in
xchg
push
add
add
pop
fsub
iret
push
dec
add
xchg
fldcw
lock
ds
xchg
mov
pop
test
in
add
and
push
popf
add
add
cli
jae
cmc
insl
test
pop
push
add
pop
por
add
pop
into
test
sub
sbb
fs
xchg
xorl
cwtl
jbe
ljmp
mov
scas
sbb
scas
sahf
xor
push
add
fnstsw
add
pop
add
jl
pop
btc
leave
push
add
mov
add
pop
xor
inc
add
add
daa
dec
add
jge
mov
lock
pop
mov
addr16
mov
imul
pusha
add
sub
insb
add
iret
daa
int
dec
cltd
sub
nop
xor
add
add
enter
js
push
add
test
add
lock
add
stos
aad
mov
jo
scas
push
add
add
pop
add
sub
add
xchg
add
divl
add
xor
mov
add
inc
mov
sbb
add
out
mov
and
inc
add
insb
add
into
mov
cwtl
pushf
ret
mov
push
add
cmp
and
add
jo
adc
call
xchg
int3
pop
add
add
popf
or
add
insl
dec
cld
or
outsl
dec
add
push
push
mov
cmp
dec
add
popf
xchg
inc
stc
mov
add
push
add
mov
fwait
pusha
add
leave
sti
lods
cmp
adc
or
inc
add
inc
add
in
add
imul
push
add
rorl
xor
fistpll
arpl
int3
cmp
out
je
int
and
insl
adc
lcall
lcall
and
add
push
push
add
mov
stc
cmp
jae
xchg
out
insb
add
jg
out
rorb
add
imul
push
mov
dec
daa
shrb
cwtl
out
push
add
add
pop
add
xchg
std
xor
add
call
sahf
inc
add
add
ja
stos
xlat
cmpl
sub
add
out
xor
std
std
ljmp
add
xor
and
and
jl
xor
mov
add
add
out
add
rorb
add
adc
iret
leave
fldl
xchg
add
sbbb
lods
outsl
sbb
xchg
add
jecxz
or
add
scas
add
add
adc
test
call
xchg
adc
cmpsl
lret
jno
loop
shll
add
cli
push
add
mov
lods
lahf
adc
popf
xor
into
in
mov
add
inc
mov
mov
pop
xchg
arpl
lret
cld
jge
add
add
and
add
add
dec
add
xchg
dec
cmp
loop
push
and
cli
pop
adc
or
inc
add
add
sub
mov
add
add
mov
add
fwait
lret
adc
and
lcall
ds
int3
call
fisubrl
sbbl
rcrl
add
jb
mov
scas
add
fadd
mov
mov
test
into
add
inc
add
enter
add
mov
popa
adc
hlt
push
inc
popa
add
lock
roll
test
mov
stc
std
push
add
sbb
test
add
hlt
mov
es
fidivrl
add
pop
add
stc
into
fsubs
pop
jnp
add
mov
add
inc
pop
add
sti
ljmp
add
mov
add
add
xlat
rcrb
mov
sub
jnp
add
inc
add
add
gs
jge
out
ja
add
daa
pop
add
repnz
xor
add
mov
pop
scas
pusha
add
xchg
push
xlat
and
or
push
std
adc
aad
test
push
lock
sbb
sbb
jmp
add
in
push
pop
adc
out
das
pop
add
cmpsb
lock
lods
fcomi
iret
jge
lret
pusha
add
adc
mov
add
add
mov
jl
cltd
fcoms
xlat
xlat
aad
add
add
add
rcrb
sub
ret
scas
in
and
adc
pop
mov
cmpsl
fsubl
xor
stc
aas
mov
pop
lock
cmp
shlb
lock
add
ret
test
iret
adcb
add
add
add
add
popf
mov
cli
incl
add
int3
pop
dec
add
jle
imul
or
sub
cmp
jmp
mov
mov
add
mov
shr
rcl
insl
icebp
add
add
into
je
popf
xchg
sub
cli
push
add
mov
add
jno
iret
mov
scas
adc
ljmp
xchg
xor
add
lea
mov
les
dec
jae
xchg
sub
xchg
gs
sub
add
add
pop
loope
adc
push
stos
lock
outsl
shll
fists
les
cmp
pop
inc
and
lret
out
adc
movsb
xor
sbb
add
cmpl
pop
add
inc
add
pop
add
filds
add
add
xchg
add
adc
add
adc
addl
inc
repnz
or
lods
cmp
xchg
dec
add
add
out
dec
shll
add
add
popa
mov
aam
add
cmp
fimuls
ja
out
idiv
sbbl
dec
mov
add
lods
cmp
les
lret
repz
or
xchg
xor
imul
xor
jge
sbb
add
mov
add
add
sbb
mov
and
xor
cs
adc
push
sub
or
mov
in
and
in
sub
rcr
pop
add
xlat
imul
mov
add
aam
jo
mov
cmp
roll
push
jno
mov
outsb
add
add
mov
inc
daa
ljmp
ret
cmp
mov
jle
test
outsb
add
jp
sti
insb
add
dec
add
pop
push
add
push
and
push
dec
arpl
cmc
jnp
push
add
add
jne
imulb
jecxz
fsts
int3
mov
add
lods
pushf
ret
mov
add
mov
jmp
das
xchg
jno
add
add
add
cs
rcr
andl
sub
and
inc
mov
xchg
data16
insl
dec
add
jae
fcompl
jbe
lret
fcompl
add
push
sarl
stc
adc
dec
add
lcall
mov
mov
push
out
add
rcrl
pop
cmpsb
jbe
loop
in
bound
sub
fildl
pop
mov
xor
jmp
ss
ret
inc
push
add
leave
push
add
jb
adc
jmp
dec
push
add
paddusb
or
jnp
add
inc
add
jg
aad
push
add
add
shll
mov
pop
add
in
push
data16
outsl
cmp
add
add
add
xchg
inc
add
xchg
dec
or
push
add
add
xor
mov
push
add
jle
lret
pop
add
add
xor
mov
repz
imul
sarl
xor
adc
lret
jns
shlb
icebp
jle
dec
sbb
aam
std
sub
repnz
mov
add
add
add
push
adc
add
mov
repz
data16
add
inc
add
mov
shrb
ja
add
mov
repnz
pop
add
dec
add
add
aaa
fisttpl
js
xchg
dec
sbb
mov
js
add
addr16
mov
scas
bound
mov
add
and
jmp
or
cltd
scas
xlat
adc
push
add
push
jg
add
call
jns
push
add
outsb
add
xor
inc
add
cmp
cmp
pop
mov
adc
pop
xchg
decb
outsl
jae
pop
add
add
add
stc
and
ljmp
inc
xchg
movsl
mov
in
adc
xchg
arpl
add
cmp
lret
aaa
aaa
cmp
cli
sub
pushf
xorl
add
jmp
addr16
push
daa
mov
inc
roll
add
cmc
or
mov
push
add
leave
imul
popf
mov
add
add
or
dec
jns
push
js
imul
add
add
adc
adc
inc
sub
data16
ret
call
add
lds
rorb
mov
add
nop
scas
into
fisubrs
jo
jnp
add
xlat
mov
mov
and
dec
add
pop
add
add
xlat
sub
mov
sahf
out
add
adc
add
cmpsl
and
in
inc
jge
add
outsl
mov
mov
inc
add
sbb
int3
adc
arpl
mov
cld
jo
subb
add
mov
xor
and
mov
and
lret
inc
mov
pop
add
inc
add
lods
sub
add
adc
xchg
mov
aad
jbe
add
bound
pop
add
test
pop
xchg
pop
add
add
push
add
inc
lds
aaa
sbb
pop
add
jno
lcall
add
dec
add
or
mov
ljmp
test
mov
and
add
add
pushl
mov
push
add
aam
roll
add
sbb
lret
add
test
add
adc
add
xor
inc
add
rclb
into
push
add
out
xchg
add
std
add
jnp
jo
mov
sbb
xor
cwtl
pop
xchg
stos
jne
or
mov
or
mov
sub
loop
outsl
lods
jp
int
int3
fstpl
bound
iret
popf
sub
inc
add
test
add
adc
aaa
pop
shlb
push
add
push
add
mov
mov
stos
or
add
je
sub
out
mov
add
aas
sub
push
pop
xor
push
dec
add
mov
lods
or
mov
add
pop
xor
jecxz
lcall
arpl
mov
sub
scas
sti
cmp
sbb
ficoml
adc
pop
cmp
push
add
push
add
add
jno
mov
add
aaa
add
mov
add
test
jne
lock
into
mov
add
lock
imul
pop
add
lods
mov
add
inc
add
mov
xor
push
add
xchg
aaa
je
in
into
pop
fidivrs
js
jnp
add
popf
and
inc
add
add
add
test
add
cwtl
inc
mov
or
and
add
push
add
les
add
add
sub
test
add
movsb
xchg
add
mov
cmp
and
xchg
add
ljmp
add
ret
scas
jmp
adc
adc
xor
pop
add
add
lret
fistpl
add
sub
repz
inc
add
add
mov
fistps
les
push
add
fldcw
add
cwtl
loop
add
sbb
imul
xorl
movsl
add
dec
add
add
adcl
jge
aaa
cld
sarl
add
lcall
push
insl
mov
loopne
adc
add
add
out
iret
adcl
outsl
dec
adc
in
inc
add
add
insb
add
popf
mov
dec
add
iret
pop
sub
mov
aas
rcrl
push
add
pop
add
leave
dec
int
add
aad
cli
shl
cmc
push
add
pop
stc
aam
add
mov
jae
add
lcall
add
add
mov
and
sarl
cmc
outsl
out
add
aaa
fwait
mov
leave
aas
dec
xchg
mov
cmc
cmp
or
cmp
icebp
xchg
push
push
subb
in
sub
mov
sbb
pop
add
add
jl
push
add
add
cmpsb
les
add
enter
xchg
mov
test
add
rolb
pop
aaa
addr16
cmp
dec
add
sti
lods
inc
add
out
js
into
sub
sti
pop
add
movsl
mov
xchg
shll
fidivl
dec
add
cli
leave
sbb
out
pop
inc
add
mov
pop
mov
rolb
jae
add
and
mov
add
js
into
pop
mov
inc
add
mov
loop
mov
pop
add
adc
cmp
push
add
pop
add
pusha
add
mov
pop
aad
mov
dec
add
add
fadds
imul
add
rcrl
sub
add
push
add
add
fdiv
scas
pop
add
cmp
add
mov
add
add
inc
inc
add
cmp
add
mov
cmpsb
sub
les
add
or
pop
add
add
add
insl
add
jae
mov
add
fwait
and
inc
or
cmp
cwtl
adc
and
fabs
adc
lods
mov
xchg
mov
loope
cld
aam
mov
add
and
lea
sub
dec
js
add
cmc
mov
inc
add
fimuls
add
test
sbb
sub
in
xor
xchg
into
or
mov
inc
add
xchg
insl
enter
rcl
adcl
xchg
add
ret
add
lods
push
jno
add
int
aad
add
xchg
adc
test
loopne
inc
add
xor
aad
xchg
or
into
xlat
mov
xor
cmp
pop
add
xchg
add
bound
mov
push
enter
scas
inc
das
test
add
add
add
add
in
out
inc
add
jge
dec
add
jb
mov
add
xor
dec
add
mov
add
cmpsb
fcoml
add
dec
add
filds
std
enter
mov
add
add
add
push
cmp
add
xchg
subb
xchg
in
add
add
imul
add
and
lea
dec
add
add
cwtl
int
pop
add
add
in
sbb
icebp
jbe
das
push
in
pop
or
pop
movsl
loopne
add
xchg
mov
add
sbb
mov
add
idivb
add
add
and
xor
cmpsl
aad
add
in
xchg
adc
int
add
pusha
add
xacquire
add
dec
add
cmc
inc
mov
lods
das
addr16
int3
jl
mov
mov
dec
xor
bound
adc
mov
data16
sub
jne
lcall
ja
push
and
mov
fwait
push
add
mov
js
out
cld
push
push
add
mov
add
fadd
test
add
insl
inc
add
add
fs
or
jo
mov
add
add
add
lds
jp
push
aam
imul
lea
add
pusha
add
jbe
and
nop
inc
add
inc
add
gs
pop
mov
stos
cmpl
pop
add
stos
push
add
push
add
add
mov
stos
ljmp
dec
add
jo
mov
or
cmp
dec
add
jbe
mov
add
popf
test
cmp
data16
les
imul
add
add
add
add
mov
mov
aam
dec
add
stos
xor
pop
add
add
jp
push
add
lods
mov
add
aad
add
cld
sub
sbb
add
fdivrp
cmp
sbb
aad
add
adc
cmp
ja
add
popf
pusha
add
mov
adc
stos
idivl
add
into
imul
mov
ljmp
add
add
jp
adc
add
stos
sbb
add
pop
cmp
rcll
test
out
inc
into
fldenv
into
and
icebp
mov
pushf
sbb
cmp
mov
jle
outsl
out
jmp
sub
test
xor
test
fnsave
mov
aas
cmp
call
test
and
lret
int
out
mov
adc
loopne
out
mov
fidivrs
jae
shll
lods
lea
mov
fadd
xchg
xchg
xchg
mov
movsl
ret
mov
cmp
ret
add
add
cmp
int3
scas
jmp
xchg
les
fadds
add
rclb
push
add
inc
testb
jg
shrb
icebp
push
gs
inc
add
jo
sbb
add
add
add
add
xor
rolb
pop
pop
add
add
mov
in
push
add
add
cld
mov
test
movsb
pop
cmp
test
and
negl
add
pcmpeqb
ret
fdivr
data16
addr16
push
xchg
cmp
js
cltd
test
jecxz
inc
testl
and
orb
and
dec
aad
add
adc
add
add
ffreep
pop
adc
repnz
gs
sbb
in
std
pop
add
pop
mov
add
ret
dec
dec
add
ret
xor
push
add
add
cmp
or
push
subl
loop
fdivrs
adc
add
and
add
call
mov
inc
or
outsb
add
in
dec
mov
bnd
je
lea
mov
mov
xchg
mov
popf
xchg
pop
test
shll
jo
shlb
or
add
inc
cmpsl
add
add
imul
add
sbb
call
test
fiadds
xchg
or
sahf
mov
enter
test
add
mov
std
cmp
jge
sti
jbe
adc
add
adc
fiaddl
test
jno
out
sbb
sub
int
add
adc
cmp
mov
add
pop
add
add
add
test
add
adc
add
dec
lcall
push
add
add
dec
add
sbb
dec
add
xchg
fwait
call
add
ret
xchg
add
xor
or
add
in
mov
add
pop
in
sbb
or
and
stos
add
sarb
and
sbb
lcall
add
data16
sub
xor
xchg
fcomps
add
adc
jbe
cld
out
fst
notl
add
data16
inc
add
sub
dec
add
adc
movsb
adc
les
scas
aaa
enter
negl
icebp
aas
icebp
mov
rcrl
popa
aaa
adcl
add
dec
in
push
stc
or
out
mov
inc
repz
cmp
mov
cwtl
pop
add
add
add
nop
lcall
int3
inc
bound
push
add
in
add
and
xor
lret
add
adc
mov
lret
lods
lcall
bound
daa
inc
fistl
pop
in
mov
add
xchg
hlt
in
add
pusha
add
mov
or
je
fsubr
pushf
mov
add
add
add
add
add
add
lcall
bound
sub
push
add
movl
xor
mov
xchg
add
jno
adc
cmpsb
repnz
jmp
cmc
jno
dec
sbb
sti
mov
mov
add
push
dec
add
jae
adc
xchg
mov
or
or
scas
mov
add
push
add
hlt
push
add
add
xor
dec
add
addr16
xchg
push
shll
cmc
jmp
or
adc
add
data16
ret
sbb
sti
clc
or
add
mov
adc
dec
add
add
movsb
inc
add
sbb
jmp
mov
push
mov
push
add
insb
add
fcoml
add
add
lcall
adc
add
sbb
adc
loope
shll
add
add
pop
mov
push
add
push
add
loop
push
add
add
mov
andl
add
or
sbb
mov
gs
add
and
dec
fisubs
das
mov
add
add
add
cmp
inc
add
stos
movl
and
xchg
or
pandn
xor
mov
add
mov
sbb
outsb
add
aad
das
test
add
mov
cmc
mov
add
repnz
add
xchg
movsl
cmpsb
inc
add
lret
repnz
push
add
add
outsb
add
and
add
xrelease
push
cmp
push
add
add
add
add
mov
jge
fsubl
mov
or
cltd
fisubrs
sbb
sbb
add
mov
sub
or
jo
pop
add
mov
jp
cwtl
cld
jnp
lret
or
cmp
pop
mov
cld
cli
dec
mov
js
ja
add
add
add
into
inc
add
add
jecxz
pushf
in
lea
aad
add
pop
jo
xchg
dec
add
sahf
adc
push
add
out
aaa
xchg
mov
add
xchg
nop
inc
add
lock
add
cmp
js
inc
add
stos
mov
add
add
add
add
add
sahf
dec
adc
push
add
jg
mov
add
sub
rorb
fneni(8087
push
pop
mov
add
in
outsb
add
xchg
lods
pop
add
add
in
outsl
fistpll
add
and
mov
pop
and
and
adc
xor
or
sub
sub
lcall
rolb
cmp
fldl
add
mov
mov
add
std
jge
mov
mov
cltd
fidivrl
push
test
sbb
sarl
repnz
daa
js
fldcw
pusha
add
clc
push
add
sbb
cmc
jmp
shlb
add
xchg
out
and
ret
cmp
pop
add
push
add
add
inc
fisttpl
jo
addr16
sbb
jno
in
push
add
jmp
mov
insb
add
dec
ss
stos
add
push
add
add
adc
ret
mov
cmp
test
shrl
add
adc
sbb
out
test
nop
mov
scas
insb
add
fidivs
ss
mov
mov
lret
es
lret
and
xchg
pop
test
dec
add
outsb
add
mov
and
add
add
cmp
add
add
roll
dec
add
jp
cltd
andb
js
sahf
dec
stos
stos
fcmovb
push
lcall
xor
outsb
add
xchg
in
cmpsb
ljmp
lods
fwait
nop
clc
push
add
add
add
add
sbb
add
add
aaa
leave
cmp
jge
mov
cmp
std
cwtl
mov
sub
add
iret
mov
pop
add
mov
add
or
in
xor
push
add
add
and
cmp
loopne
add
add
lods
pop
out
scas
cmpsl
movsb
and
sbb
dec
add
jmp
add
in
jne
or
pop
add
jno
add
loopne
push
add
in
pushl
adc
fbstp
mov
sbbl
add
lcall
mov
leave
das
mov
sbb
and
add
or
pop
test
shll
and
cmpsb
cli
lcall
jbe
lods
push
add
cmp
jne
addr16
cwtl
sbb
sbb
xchg
mov
add
mov
add
jl
jne
mov
mov
adc
add
imul
adc
jmp
add
les
loope
add
jns
ljmp
add
aam
iret
mov
into
mov
sar
dec
add
jae
or
add
xorb
arpl
cwtl
gs
push
add
add
cmp
data16
ds
push
add
inc
add
or
in
add
add
add
sub
adcb
xor
lds
jmp
add
shll
add
add
add
test
rorl
stos
inc
data16
add
mov
add
out
fincstp
cmpsb
movsl
or
lds
add
cmp
and
add
enter
add
aad
xchg
aas
repnz
mov
add
add
lock
mov
cmp
mov
xor
jmp
push
mov
add
loopne
push
add
adc
mov
pop
rcl
cmp
add
add
add
xor
in
mulb
sub
jmp
xchg
or
mov
and
rcrb
add
roll
mov
jmp
dec
add
scas
jge
add
add
or
dec
add
add
movsb
mov
jg
nop
out
xor
inc
mov
out
inc
mov
dec
add
clc
inc
add
sub
lock
loop
jge
fs
pop
push
add
push
add
or
mov
fidivrs
fcmovb
aam
sti
ret
adc
push
add
shl
sbb
mov
pop
mulb
add
push
insb
add
dec
add
mov
dec
add
push
add
lea
cwtl
hlt
dec
jecxz
add
or
imul
pop
add
xor
mov
or
add
bound
pop
add
icebp
dec
add
mov
add
lret
js
mov
mov
and
mov
jle
add
cmp
add
mov
fmuls
pop
add
add
mov
add
mov
cmp
sti
bnd
stos
add
add
pop
push
add
push
gs
clc
mov
ds
push
add
xor
rcrb
in
xor
add
xor
ja
xorl
fmull
mov
sbb
xor
push
add
add
adc
clc
sub
pop
or
lods
xlat
repz
push
lret
push
add
xchg
mov
xlat
push
and
ret
imul
push
icebp
xchg
testl
dec
mov
sbb
push
add
mov
call
add
and
add
ret
jg
add
mov
add
sbb
loop
add
push
add
fwait
xchg
rcr
mov
sub
fistl
adc
jno
add
add
add
add
add
cwtl
popf
sub
add
mov
push
add
pop
lret
das
loopne
aaa
arpl
loopne
xchg
add
add
out
data16
add
stc
iret
push
out
xchg
insb
add
or
int3
leave
push
or
cli
jg
add
xchg
or
jmp
insb
add
cmp
sti
fsubrs
or
add
sbb
jl
and
aam
add
int3
mov
add
pop
add
push
add
cwtl
jns
mov
pop
add
popf
dec
add
movsl
data16
sub
arpl
add
add
cld
push
add
imul
add
add
aaa
pop
fisubs
mov
add
pop
add
out
mov
add
xchg
pop
fdivrs
sbb
adc
and
mov
add
add
mov
add
adc
pop
mov
push
add
push
add
out
inc
add
and
stos
ret
xchg
cmp
aad
add
out
add
dec
jo
mov
in
imul
scas
mov
dec
add
jo
add
outsl
push
add
mov
out
sbb
add
add
sub
call
bound
stos
frstor
and
hlt
scas
in
lret
sarb
je
in
mov
es
arpl
add
or
imul
xchg
mov
mov
jp
xchg
enter
mov
xlat
jnp
add
cld
movsb
xchg
xchg
in
mov
cmp
add
xchg
add
lret
ficomps
add
or
inc
test
scas
popa
mov
push
mov
add
js
inc
add
add
push
add
add
adc
jp
mov
call
les
orl
add
push
add
frstor
push
add
add
add
push
add
cltd
inc
scas
mov
xchg
roll
inc
add
enter
mov
xchg
jbe
loope
add
leave
xor
sub
loop
add
adc
cmp
fildl
add
pop
iret
gs
add
jmp
test
adc
arpl
jmp
add
test
xchg
xchg
push
add
nop
ret
push
add
add
add
sbb
add
sbb
or
icebp
ret
pop
popa
cli
test
sub
movsb
add
add
xor
xchg
xlat
or
and
lret
ja
add
jne
push
add
add
add
xchg
jle
imul
lahf
mov
fmul
in
scas
fdivrl
mov
outsl
outsl
mov
clc
dec
push
add
js
fists
push
dec
add
add
aam
lret
add
mul
dec
jb
push
add
sbb
sarl
add
outsb
add
ljmp
add
lcall
lahf
xchg
xchg
inc
pop
add
add
xchg
add
popa
into
cmpsl
add
movb
clc
imul
test
add
test
sbb
jg
or
out
lods
cmp
cmpsl
das
ficoml
push
add
xchg
jmp
push
add
add
add
add
jg
add
xchg
sub
mov
inc
add
xchg
dec
add
and
add
sti
dec
add
shrb
add
in
in
dec
add
es
mov
in
lods
jge
cs
cmp
dec
add
pop
add
rcl
dec
add
add
or
push
add
ret
add
add
in
mov
test
xchg
push
xor
sahf
aas
dec
cmc
add
xor
adc
cmp
inc
add
rcrl
add
stos
jbe
inc
int3
mov
adcl
jge
stos
inc
test
add
mov
repnz
out
scas
jno
testl
lock
add
setbe
cld
and
mov
bound
shll
pop
lods
das
xchg
sar
add
add
add
xchg
push
add
push
xor
data16
add
add
add
jge
add
add
xor
lea
add
push
add
xchg
ror
add
push
jno
add
mov
xchg
sub
mov
add
add
incb
shrl
cmp
into
adc
add
cs
xor
sub
addr16
int
jb
mov
jg
add
add
add
mov
add
add
sub
icebp
mov
pop
inc
add
in
fstpt
and
ja
adc
call
loopne
add
jle
fcmovb
fwait
jecxz
sti
les
xchg
movsb
mov
in
pop
add
add
dec
add
loope
iret
xchg
pusha
add
add
xchg
imul
sub
arpl
jmp
pop
add
insl
sbb
dec
addl
imul
add
lcall
add
or
sub
push
add
imul
or
add
es
mov
add
push
add
add
daa
xor
adc
dec
add
rolb
pushf
in
mov
icebp
loop
cltd
add
add
push
pop
add
add
jbe
push
nop
imul
add
add
mov
add
xor
movsl
in
orl
xor
add
lcall
imul
adcl
loop
movsl
repnz
jge
add
or
mov
fbld
add
add
push
sub
cmp
sbb
rcll
push
add
enter
inc
add
imul
mov
cltd
repnz
add
movsb
pop
mov
xchg
out
subb
add
sub
scas
shll
addr16
nop
mov
xchg
cld
and
dec
je
jl
mov
pop
add
inc
mov
add
mov
stc
cmp
mov
test
add
dec
add
shr
cmp
sbb
js
dec
fistl
jb
inc
cmpsb
lcall
add
add
in
lock
mov
sub
rclb
dec
aas
outsb
add
or
lea
div
call
add
shrl
cmp
mov
sub
test
xchg
out
imul
add
je
adc
dec
xlat
inc
insl
cld
bound
xchg
cmp
jbe
iret
cltd
cmc
xor
add
mov
testl
pop
add
lds
outsb
add
push
add
mov
sbbl
push
add
adcb
add
call
and
pop
add
add
add
and
dec
dec
add
loope
jle
xchg
dec
cs
xchg
add
add
add
sub
test
push
add
jl
das
mov
add
lret
xor
xor
jmp
add
sbb
out
scas
add
stos
xor
add
out
lret
rorb
enter
cmp
rorl
rorl
add
add
addl
add
stos
pop
add
jp
push
add
jmp
add
sbb
mov
scas
add
mov
xchg
push
nop
jnp
shr
and
aam
leave
scas
mov
mov
stc
loopne
pop
add
jbe
and
insl
jne
xchg
pushl
add
pushf
add
xor
into
or
dec
add
add
add
mov
outsb
add
add
push
psubusw
add
xchg
fimull
aam
mov
arpl
das
lcall
jb
test
add
mov
push
add
push
add
enter
movsl
sbbb
arpl
movsb
repz
add
add
pushf
cmp
addr16
jp
dec
add
add
add
jmp
push
add
add
int3
xchg
xchg
sbb
push
add
stc
mov
imul
and
adc
jo
jo
mov
fst
pushf
lahf
and
ret
or
add
adc
lret
or
shlb
cmp
jne
add
add
add
sbb
dec
add
add
fcomps
into
mov
add
and
push
add
dec
add
jnp
mov
out
fsubs
and
std
jno
add
sub
out
out
std
and
ljmp
xor
add
fwait
jg
ror
push
jmp
add
add
mov
and
insb
add
leave
movsl
jbe
jge
dec
stc
je
add
add
adc
lret
add
add
repz
sti
stos
in
add
add
in
xor
add
add
adc
jle
cltd
pusha
add
or
and
jmp
sbb
dec
add
data16
test
add
test
cmp
pushf
push
jb
xchg
cld
inc
add
popf
inc
ret
into
test
xchg
leave
sub
lods
sub
jo
push
add
add
into
push
loope
push
imul
test
add
sbb
aas
push
add
pop
add
jmp
push
add
push
jle
inc
add
popl
add
daa
stos
imul
xchg
jnp
fwait
mov
push
add
add
xchg
pop
inc
cmp
sub
out
mov
dec
add
mov
jbe
iret
mov
pop
pop
std
insl
jnp
add
mov
add
scas
cld
fs
test
add
xchg
and
add
imul
dec
xchg
jbe
xor
xor
mov
imul
mov
add
sbb
test
dec
adc
cmpsl
lea
flds
cmpsb
pop
dec
rcrb
out
add
arpl
loop
sbb
out
data16
shrl
clc
and
add
add
add
add
lahf
and
cmpsb
leave
data16
adc
pop
add
mov
add
imul
ficompl
xor
jle
cmp
push
add
cmp
lahf
or
jmp
adc
faddl
add
mov
rcl
xor
push
into
jno
mov
add
xchg
xlat
sub
mov
dec
add
add
mov
into
adc
adc
push
add
xor
mov
add
push
add
add
add
add
stc
mov
push
add
in
out
add
xor
mov
mov
mov
add
add
inc
add
mov
scas
loop
add
add
outsb
add
cmpsb
imul
cltd
fwait
or
push
add
lods
out
mov
add
adc
mov
fwait
cmc
gs
dec
add
or
add
addr16
jne
mov
mov
cmp
aam
or
add
add
jmp
add
add
stc
les
add
cwtl
fildl
add
jae
or
pop
add
pop
add
mov
sbb
add
stos
out
scas
in
xor
imul
int3
rcrl
fsubrs
lods
rcrb
jecxz
fiadds
sub
std
ret
jp
mov
out
ja
arpl
mov
xor
sahf
mov
add
add
in
add
jmp
mov
add
cmpxchg
lods
mov
adc
aaa
cmc
shrb
mov
stos
jns
mov
adc
mov
push
fwait
jle
add
stos
mov
in
mov
add
add
add
aam
add
out
fistpll
icebp
pop
add
add
fcmovnu
int3
add
add
push
add
out
inc
add
pusha
add
dec
add
mov
cmp
mov
ljmp
adc
jbe
dec
mov
add
fwait
add
add
leave
xchg
add
add
add
mov
movsl
je
add
adc
hlt
cltd
adc
icebp
inc
jnp
dec
add
fnstsw
mov
scas
subb
inc
inc
add
sbb
sbb
add
es
pop
pop
add
add
add
push
add
add
jge
add
add
xchg
mov
add
sub
mov
in
add
loope
add
mov
clc
notb
or
push
mov
add
mov
call
cmpsb
sahf
pop
cmpl
mov
or
add
jl
add
inc
add
dec
push
add
mov
jl
or
bound
mov
jae
add
adc
loope
mov
aam
adc
mov
pushf
jo
jae
add
add
aam
rcrl
pop
add
clc
jp
mov
add
icebp
xor
xbegin
mov
xor
fs
jecxz
das
mov
add
nop
out
fistpll
dec
add
fs
xor
add
mov
addb
shl
mov
push
lds
iret
sub
xchg
out
iret
popf
sbb
sub
cmpsl
sub
and
adc
mov
inc
add
add
pushf
xorb
leave
mov
cmp
mov
add
cltd
mov
gs
fdivs
add
clc
xchg
jno
sbb
lock
arpl
add
mov
stc
loopne
sbb
cmp
scas
xor
cs
icebp
stc
in
ja
add
dec
xchg
lgs
shl
and
sbbl
add
or
std
std
rorb
mov
insl
or
jle
mov
add
sbb
add
add
add
in
sub
enter
fdivl
add
fcoml
mov
inc
pop
inc
xchg
leave
nop
pop
mov
lods
mov
jae
add
fildl
xchg
add
inc
add
insb
add
adc
add
add
sarl
int
jns
add
and
inc
and
test
mov
insb
add
cmp
out
add
out
add
or
inc
add
pop
sub
add
add
aad
ja
cmp
push
add
or
daa
divl
mov
test
add
pusha
add
loope
adc
dec
inc
add
scas
inc
add
cltd
sbb
push
or
lret
add
dec
sarl
popa
out
mov
jmp
or
xchg
push
mov
dec
std
pop
mov
lret
push
scas
push
into
cmp
lahf
or
xchg
push
add
add
add
add
std
cmpl
cmp
pushf
in
lret
jne
stos
nop
jmp
addr16
loop
ja
cld
lcall
xorb
add
add
add
fsubrs
add
cmp
ret
jb
sub
dec
xchg
test
add
push
add
shrb
add
mov
add
jb
ljmp
movsb
cwtl
adc
shl
xchg
xor
cld
aaa
dec
add
aas
cld
nop
xor
push
add
push
loope
jae
add
mov
sub
xchg
add
mov
jo
sbb
les
cmpsl
mov
push
add
mov
inc
add
bound
iret
daa
add
fnstenv
jne
xchg
loop
add
mov
xor
int
add
loopne
rorb
scas
ss
int3
leave
nop
outsb
add
push
xor
jbe
bound
mov
mov
sbb
mov
cmpsl
inc
add
aad
add
add
inc
bound
and
fmul
lods
add
out
xchg
add
mov
mov
and
add
add
je
add
xor
sbb
addr16
lret
pop
add
daa
sahf
lods
add
lods
or
ljmp
mov
in
jle
xchg
inc
stos
adc
dec
add
pusha
add
mov
add
inc
add
add
ljmp
add
rorb
push
sub
cmp
in
out
in
or
scas
outsb
add
add
pop
add
add
add
mov
xchg
mov
add
add
xor
movsl
pop
stos
sub
hlt
fdivl
shlb
add
cmp
add
sahf
dec
sahf
pop
mov
dec
add
xchg
loope
das
push
add
cli
loope
add
sahf
rclb
add
jle
icebp
fsubr
filds
std
rorb
iret
mov
add
mov
and
jge
adc
xor
jp
fwait
mov
cmc
jns
add
fnsave
xorl
mov
jl
test
or
mov
sbb
add
shl
imul
fisubs
fpatan
in
fwait
pop
add
dec
add
test
add
push
add
cmp
add
jo
sarb
and
mov
mov
add
add
mov
add
mov
clc
jge
scas
dec
add
and
inc
movsl
pop
js
out
add
lahf
mov
add
andl
add
add
xor
or
mov
add
xor
and
data16
leave
ljmp
cmp
pop
int3
vmovaps
not
cmp
xor
add
pop
rorl
add
lahf
out
iret
sub
dec
xor
sbb
psubsb
mov
add
jecxz
shrl
add
mov
jmp
sub
xchg
and
jno
mov
jb
out
int3
insb
add
add
pop
add
add
jmp
mov
loope
pusha
add
mov
mov
mov
jg
mov
stos
dec
add
insb
add
cmpb
loop
jle
andl
push
add
cltd
pushf
push
cmp
repz
stos
cmp
push
leave
mov
subl
inc
add
pop
add
jae
inc
xchg
mov
add
add
add
in
add
dec
mov
pop
icebp
in
int
dec
xchg
jge
loopne
add
or
stos
int3
mov
dec
add
movsl
insb
add
mov
or
add
rorl
jbe
aam
mov
xchg
data16
add
and
add
pop
ret
ja
add
pop
add
mov
cmp
idivb
xchg
xchg
fdiv
cmpsb
jmp
pop
xchg
sub
test
aad
repnz
xchg
out
jns
aam
outsl
inc
add
or
sbbb
stos
push
add
add
pop
add
mov
dec
es
mov
je
sbb
into
int3
jne
jns
dec
ljmp
shlb
movb
pop
add
mov
jae
and
xchg
sub
and
add
add
pop
mov
add
add
incl
out
jno
test
les
inc
mov
inc
add
inc
add
lock
add
icebp
rcrl
or
mov
add
lret
dec
add
test
add
add
shlb
add
loop
inc
add
rcrb
mov
add
xor
inc
ljmp
xchg
mov
sbb
test
xor
lahf
incl
scas
or
jne
mov
add
cmp
fcmovnb
push
add
sub
xchg
add
jnp
cwtl
fnstcw
add
sub
sbb
test
dec
sub
nop
add
mov
jecxz
enter
insb
add
add
fsubrs
cwtl
test
sti
popa
repnz
xchg
jg
mov
adc
into
invd
add
xlat
cli
and
aaa
in
in
fsub
pop
add
add
add
add
add
add
into
sti
in
mov
add
add
out
outsb
add
push
add
adc
push
add
ljmp
cltd
stos
mov
outsl
out
push
aam
sbb
mov
lret
je
xor
xchg
aas
je
test
data16
add
push
stc
inc
add
adc
hlt
das
outsl
xor
add
insb
add
shrb
stc
inc
add
add
sbb
stc
shll
sub
xchg
push
add
mov
xlat
mov
jg
jle
insb
add
and
ret
ficoml
add
cmpsl
cwtl
rorb
cmp
fsubs
fnstcw
cmp
scas
fimull
add
and
pusha
add
mov
push
add
add
loopne
add
and
sbb
add
sub
faddp
push
add
pop
xchg
add
enter
add
dec
xor
cmp
xchg
lret
outsl
stc
push
push
addb
into
xor
sub
mov
add
shr
add
andb
stos
cmp
push
add
push
add
push
add
push
and
mov
test
add
stos
gs
out
jle
jno
adc
mov
repz
push
add
lret
add
jae
cwtl
mov
les
dec
add
add
add
add
push
add
add
add
mov
add
les
adc
inc
lahf
jg
cmp
outsl
in
push
int
inc
jmp
andl
jecxz
gs
cmp
inc
add
cwtl
mov
xlat
leave
jae
mov
add
lods
sbb
ror
mov
sbb
pop
and
les
insl
jge
push
add
add
add
jne
in
xor
add
aad
in
jg
add
loop
icebp
jl
std
in
mov
push
loope
cmc
mov
dec
jl
pushf
mov
fiadds
add
out
add
add
enter
stos
aam
jecxz
push
cmc
shrl
xchg
test
add
add
ret
pop
sub
push
add
fimull
add
push
add
sarl
fadd
or
sahf
and
test
add
xchg
mov
and
and
push
add
movsb
inc
add
add
add
ret
push
or
fcoml
cmpsb
test
mov
stos
push
xlat
loopne
and
lret
scas
push
pop
add
fwait
mov
add
insl
aas
push
in
inc
loopne
add
test
je
stc
test
add
add
inc
sub
pop
add
add
js
cmp
fsubl
stos
aam
addr16
sub
mov
js
rcl
add
out
cmp
add
add
jb
test
std
inc
sbb
sub
or
add
xchg
cmc
xor
adc
and
add
jg
add
add
mov
jle
mov
aas
pop
mov
add
and
insb
add
or
pop
fildll
adc
mov
add
pop
test
and
xchg
mov
add
icebp
and
add
jnp
push
add
dec
lods
jecxz
add
bound
mov
cmp
add
and
add
or
loope
leave
and
mov
add
adc
add
add
stos
cmp
or
bound
dec
jl
lods
fiadds
outsb
add
add
add
add
aad
pop
mov
and
jns
add
jg
test
xchg
add
lret
add
fstl
add
add
add
dec
add
js
imul
inc
imul
push
aam
or
iret
fs
cmpsb
outsb
add
mov
xchg
add
add
jle
outsl
and
and
or
mov
fs
jno
mov
in
inc
or
adcl
sbb
mov
mov
test
mov
mov
lds
aas
pop
xor
popl
aas
lock
jp
sub
mov
fsin
rorb
adc
or
sub
add
push
xchg
notb
mov
enter
mov
jb
sub
in
dec
add
test
loopne
test
stos
int3
clc
jmp
aas
adc
cli
clc
add
fstpt
add
inc
add
lock
add
inc
add
xor
push
add
xchg
pop
add
pop
movsl
sbb
xchg
ret
mov
add
jbe
jle
or
jb
pop
ffree
xchg
in
data16
add
gs
in
ret
xor
or
xor
jl
jns
loope
mov
or
bound
mov
adc
cmp
cmpsl
test
cmp
sbb
inc
ficoml
imul
lahf
mov
add
stos
mov
jbe
rcrl
shr
add
icebp
pextrw
pushf
xor
aam
add
push
add
dec
add
sahf
push
imul
jno
add
sti
aam
mov
test
add
or
jge
scas
std
push
add
and
lcall
sub
and
dec
add
pop
add
and
aad
sbb
mov
adc
xchg
in
add
xor
lret
cmp
movsl
pop
add
data16
cmp
jp
sahf
adc
das
xor
pop
add
push
add
xor
rclb
clc
bound
sahf
and
dec
add
add
scas
adc
sbb
adc
add
filds
add
add
xchg
jg
inc
mov
mov
push
dec
xchg
in
mov
outsb
add
dec
add
stc
sub
mov
add
adcl
sbb
jnp
call
pop
add
add
sub
mov
add
sub
cmp
mov
pop
out
imul
xor
adc
add
add
sti
adc
idiv
inc
mov
xlat
pop
jbe
inc
jo
jp
and
mov
cmp
test
loopne
rcrb
mov
xlat
dec
aas
and
xor
fsubrs
dec
add
mov
jo
xor
dec
arpl
addl
mov
leave
test
cmp
outsb
add
sbb
mov
xchg
add
jno
or
and
add
lds
enter
add
inc
in
inc
add
pop
hlt
xor
add
enter
hlt
in
push
add
addl
push
int
push
out
aam
add
adc
clc
out
or
add
add
add
call
dec
add
sub
mov
sbb
mov
push
mov
into
scas
jmp
popl
push
ret
xchg
ja
arpl
push
add
add
adc
add
lahf
insb
add
cmp
add
sbb
adc
mov
or
sbbb
jnp
push
add
add
stos
jmp
xchg
add
ret
sbb
pop
cld
daa
int
and
add
adc
add
jbe
in
xor
add
insl
and
lods
imul
daa
pop
add
repnz
add
mov
xchg
fwait
cmp
loope
mov
lock
sahf
shr
and
dec
mov
mov
add
add
mov
movsb
dec
add
and
call
imul
add
add
push
add
add
cmc
jnp
add
xchg
push
add
push
lret
iret
adc
pop
add
add
pop
inc
add
sbb
daa
enter
push
scas
jl
xor
xor
add
shrb
lret
bound
jge
add
adc
inc
notb
outsl
adc
movsl
add
loopne
add
das
push
add
sbb
xor
mov
add
add
add
inc
dec
add
int
add
mov
gs
les
add
add
xchg
shl
or
stos
push
negl
add
addr16
mov
sbbb
pop
push
add
add
jbe
rclb
lret
pop
add
add
mov
outsb
add
call
enter
jecxz
cmpsl
fstps
imul
js
cmc
mov
jmp
mov
mov
add
or
gs
jno
cmp
in
lock
xchg
loope
mov
mov
add
mov
push
sub
add
xlat
aas
mov
push
add
scas
pop
rorl
add
add
mov
add
dec
jp
lods
jle
inc
jae
mov
adc
subl
mov
and
add
add
fisubrs
out
sbb
ja
pop
add
aad
add
movsb
sub
insb
add
mov
shrl
in
and
lret
iret
inc
add
sub
dec
add
sbb
shll
std
or
add
and
add
movsb
mov
ljmp
xchg
cmp
add
movsb
pop
xchg
or
test
push
mov
test
add
das
loop
cmp
dec
add
jecxz
je
jns
fxch
dec
shlb
adc
std
movb
leave
sbb
xchg
pop
add
add
mov
add
add
call
sahf
jb
inc
add
shlb
mov
add
mov
sbb
mov
add
ljmp
sbb
push
add
mov
add
add
sti
jmp
mov
inc
add
add
div
js
int
add
cmp
adc
ret
ja
push
add
xchg
roll
bound
cmp
sub
add
das
stos
dec
add
add
fsubrp
dec
outsb
add
inc
add
mov
mov
push
add
inc
add
and
loope
add
add
add
sub
cli
mov
int
add
leave
add
sub
push
add
add
jnp
add
sysret
arpl
out
push
aad
add
negb
cli
lea
mov
mov
sbb
add
sbb
es
adc
mov
add
add
adc
mov
add
bound
dec
add
add
inc
add
lods
sub
imul
push
push
sbb
cmpsb
cld
or
out
fcomip
cmp
pop
out
xchg
lcall
and
adc
mov
add
sbb
mov
sub
xchg
hlt
and
add
ret
arpl
mov
aaa
mov
cmp
cmp
sarb
inc
sub
add
add
sbb
lods
and
mov
popf
add
push
jne
inc
jge
add
and
pop
mov
jne
icebp
xchg
add
add
add
pushf
pop
add
icebp
push
or
pop
add
add
add
cmp
cld
xor
sub
add
in
mov
xchg
repnz
test
or
add
mov
pop
add
xchg
ret
cmp
inc
add
or
adc
adc
add
add
data16
std
xor
xchg
repz
add
add
movsb
push
add
add
add
data16
mov
add
inc
add
cmpsb
pop
add
add
or
jne
sbb
jne
add
add
in
sub
adc
dec
add
and
add
es
adc
or
mov
mov
cmp
in
dec
subb
add
idiv
testl
fwait
pop
add
mov
xchg
mov
add
add
jge
xlat
dec
xlat
sbb
and
sarb
dec
int3
imul
push
add
add
sub
or
add
add
bound
cltd
inc
add
test
ljmp
add
cmp
test
mov
add
les
add
xor
rol
repnz
inc
jno
stos
or
shr
gs
enter
call
dec
add
in
mov
jg
add
adc
cmp
push
lods
sub
das
enter
add
in
cmp
lret
xchg
and
mov
jo
mov
sbb
mov
jmp
inc
add
dec
test
push
movb
push
mov
into
mov
push
add
inc
add
add
mov
add
push
fbld
mov
add
add
sub
push
add
sbb
dec
or
pushf
add
add
jbe
mov
and
jge
add
add
in
iret
add
xchg
cmpsl
inc
adc
das
pop
and
iret
and
ljmp
add
cld
mov
pop
rcll
mov
aaa
sbb
dec
add
ja
ljmp
das
popa
lcall
inc
add
add
add
push
add
mov
add
aam
add
add
mov
or
jo
add
pop
aas
sbb
sbb
jle
pop
mov
dec
hlt
dec
add
cld
fidivrs
add
sub
inc
fwait
lods
ljmp
mov
icebp
adc
lods
add
inc
add
jb
or
dec
xor
sti
xchg
addr16
adc
out
add
xchg
mov
sbb
les
add
add
pop
add
add
lock
lret
and
popf
cmpsb
mov
scas
call
sbb
sbb
inc
add
mov
dec
push
add
add
insl
pop
add
add
add
jge
lea
add
cld
xlat
inc
mov
add
add
lret
mov
cli
dec
add
leave
xchg
mov
sub
sbb
fbld
add
add
mov
sub
or
inc
arpl
sub
mov
cmc
daa
lret
xchg
outsl
adc
jno
jne
stos
add
add
je
jno
sub
add
sbb
sarl
test
inc
add
xor
push
inc
jl
stos
xchg
lods
popf
xor
xchg
fistpl
jp
jp
jecxz
and
sbb
in
push
add
lret
cmp
add
loopne
push
xchg
ret
and
push
add
pop
add
push
add
add
sbb
pop
add
push
aaa
mov
and
xchg
add
add
push
add
cmp
ds
xor
dec
add
add
inc
imul
aas
dec
add
add
add
ljmp
pop
data16
add
xor
add
xchg
cmp
ret
jb
push
jno
pop
jae
cmp
and
clc
adc
xchg
add
jle
sub
mov
add
add
xchg
cmp
add
mov
push
add
outsl
mov
adc
je
mov
sti
fldenv
add
cwtl
mov
add
rcrb
jle
fwait
sbb
and
lea
out
cmp
and
inc
add
pop
imul
icebp
imul
xor
add
mov
add
rclb
add
clc
cli
or
push
add
aas
dec
add
pusha
add
add
push
push
add
add
or
addr16
add
add
dec
add
add
add
imul
add
lcall
xor
mov
ds
mov
mov
jecxz
out
dec
jmp
sbb
pop
or
fwait
and
loope
sub
mov
in
ror
cmpsl
inc
add
cld
hlt
das
fistps
scas
je
mov
add
mov
add
daa
mov
bound
daa
xchg
loopne
xchg
xchg
daa
inc
add
xor
popa
mov
aad
add
out
xor
and
sub
add
mov
cmpsl
ja
rolb
popf
fdivs
xchg
add
push
stos
cmp
xor
loopne
aad
add
mov
out
push
enter
jmp
ret
popa
fsts
frstor
scas
dec
ljmp
xchg
jbe
ss
push
add
inc
add
imull
add
aad
add
sub
xor
push
add
mov
add
jne
mov
mov
xor
pop
add
push
add
out
and
add
add
rcrb
add
call
arpl
js
loop
mov
xor
push
pop
popa
je
pop
add
mov
push
and
sti
ja
push
enter
mov
mov
std
pop
cmc
pop
add
imul
add
adc
or
sarl
xor
pop
arpl
add
add
rcrl
and
into
outsl
sbb
lret
nop
xchg
ljmp
js
stc
mov
jle
sbbl
add
fmull
push
add
xor
mov
add
adc
add
or
jg
add
add
add
add
add
or
jmp
or
jne
std
jle
idivb
mov
xor
add
cld
and
mov
and
add
in
push
add
add
mov
subl
mov
xchg
and
add
lea
js
push
add
dec
add
fsubs
cwtl
pop
add
call
subb
inc
popf
ffreep
into
and
add
add
add
xlat
imul
and
or
das
imul
mov
or
pop
add
or
lahf
and
call
add
bound
inc
add
pop
add
and
mov
inc
add
hlt
js
lea
out
adc
scas
rcll
leave
sahf
mov
icebp
dec
add
pushf
dec
sub
sti
test
push
add
adc
inc
movl
sub
mov
add
mov
xchg
dec
add
push
or
insb
add
push
lods
add
add
cmp
outsl
rclb
add
lods
subb
in
fwait
mov
shrl
lds
lcall
add
sbb
pusha
add
add
lahf
ror
popa
mov
shll
inc
add
cmp
add
gs
cmp
jnp
xchg
jae
add
fsubrl
sbbb
add
cltd
repz
mov
stos
pcmpeqw
arpl
out
dec
add
add
cmp
js
push
add
jp
xchg
mov
add
dec
add
loope
add
mov
add
test
add
test
add
add
fwait
stos
outsl
or
stos
push
add
jmp
push
add
mov
pop
data16
push
add
fstl
hlt
das
and
leave
cmp
add
mov
xor
fdivrs
add
mov
lcall
add
add
add
repz
inc
add
clc
push
mov
inc
add
and
mov
sub
lcall
pop
out
fbstp
pop
xchg
loopne
add
lret
sbb
push
orb
cmp
sub
xchg
pusha
add
push
add
add
movsl
add
push
repnz
inc
and
mov
add
cmp
sub
add
xchg
imul
repz
mov
xchg
movsb
mov
adc
incb
clc
fsub
xchg
jge
aaa
enter
jmp
pop
sti
and
sbb
fbld
fisubrs
add
jp
mov
jge
xor
popf
mov
add
adc
sbb
fwait
pop
add
cmpsl
inc
int
add
adc
pop
arpl
mov
orl
add
cli
xor
jnp
jecxz
push
add
lret
shrl
add
add
mov
clc
cmp
nop
xorl
stos
popf
inc
add
add
add
mov
add
dec
mov
fisubl
movsb
fcoms
aas
in
add
add
pop
clc
xchg
inc
add
add
cmp
push
add
pop
cltd
addl
movsb
push
mov
add
add
push
add
add
add
add
mov
imul
jno
mov
add
add
mov
inc
xchg
pop
add
push
add
add
xchg
inc
add
mov
push
add
xlat
mov
flds
jl
inc
and
aas
outsb
add
fsubrl
rolb
sbb
push
mov
add
test
xor
int3
sahf
js
xchg
jmp
add
cmpsb
and
xchg
gs
subb
mov
add
and
lds
add
or
dec
add
clc
test
mov
loop
and
dec
cmc
test
clc
and
add
fildll
add
decl
add
jae
add
push
xchg
shll
sub
loop
add
adcb
scas
jg
andl
jno
add
jae
add
add
ret
popf
dec
add
mov
sbb
add
fs
inc
add
clc
jnp
add
pop
add
cmpsl
push
scas
cmpb
jns
scas
imul
dec
add
icebp
nop
in
ljmp
mov
add
add
xchg
xchg
test
jecxz
jmp
add
jg
add
pushl
xchg
lods
dec
add
push
imul
dec
add
inc
add
outsb
add
popf
mov
sbb
std
cmp
fnstcw
mov
sbb
fisubl
or
subb
aad
add
test
push
add
add
mov
sbbb
cmp
add
lods
push
add
sub
mov
sbb
mov
outsb
add
and
add
xorb
add
mov
pop
dec
xor
loop
ja
add
movsl
and
mov
add
add
cs
sti
pushf
jecxz
add
lcall
aam
into
cli
xchg
mov
cltd
fstpt
scas
mov
addl
add
inc
mov
out
add
mov
imul
xchg
push
dec
add
add
mov
add
fildll
sarl
add
add
xchg
sahf
cli
repz
rcl
sbb
cld
cmpsl
xchg
cmp
imul
xlat
xlat
stc
lret
add
dec
add
add
inc
mov
add
sbb
dec
and
lret
js
jmp
rclb
add
lock
shl
aad
add
in
dec
mov
add
push
add
jl
mov
jae
add
push
add
xchg
sub
xchg
lods
sbb
add
or
xor
jo
xchg
sbb
cmc
jmp
imul
and
cltd
js
adc
cmpsb
roll
outsl
dec
movsl
xor
add
add
add
add
cpuid
and
iret
cmp
inc
add
std
iret
pop
lock
in
fcoms
imul
push
stos
add
add
lock
fwait
decl
clc
mov
push
add
pop
sub
mov
mov
add
mov
dec
lcall
inc
sbb
mov
mov
add
sub
in
fsubl
ljmp
add
imul
mov
push
add
add
dec
add
inc
aas
imul
add
inc
add
lahf
je
das
cmp
and
inc
add
add
fcompl
dec
addr16
push
or
jne
lahf
mov
push
add
fwait
adc
inc
add
xchg
or
sbb
push
add
clc
lds
out
xchg
sub
idiv
addr16
mov
jae
sub
mov
aaa
or
mov
adc
lret
arpl
mov
add
push
add
add
movsl
rcl
sub
sbb
mov
push
add
mov
rclb
jge
insb
add
lock
xor
add
jb
mov
add
add
jge
aaa
add
lock
cmp
ret
bound
mov
rcl
and
dec
add
add
testl
mov
jp
mov
pushf
push
jae
mov
dec
add
pop
mov
sbb
mov
add
xor
pop
xor
rcl
sbb
push
cmpsl
ss
in
test
add
roll
shll
fildl
int
fnsave
jo
push
add
add
add
lea
jecxz
add
xor
sbb
dec
add
clc
jae
insb
add
inc
push
add
dec
lods
fnstsw
aaa
inc
add
push
cmp
xchg
jl
inc
and
adc
push
add
add
mov
pop
add
add
imul
sbb
cmp
and
add
test
push
xor
add
add
pop
add
cmp
add
adc
rorb
and
jae
clc
sbb
push
add
mov
mov
mov
adc
cmc
push
and
aam
push
add
add
movsb
add
mov
add
add
addb
fcmovnu
mov
test
call
pushf
shlb
aas
scas
or
dec
imull
inc
add
add
test
add
out
sub
adc
fmuls
add
mov
mov
pop
push
sub
mov
add
mov
add
dec
popf
add
nop
pop
add
loope
cmpl
test
xchg
dec
in
adc
sub
mov
and
adcb
jle
outsl
bound
sub
sarb
add
xchg
and
and
cmp
fidivl
add
lcall
movd
jp
adc
or
push
icebp
add
out
push
add
add
add
xor
sub
sbb
lret
add
arpl
mov
mov
inc
jnp
adc
xor
popa
xor
dec
mov
cwtl
fwait
repz
rorl
or
add
add
arpl
sub
addl
and
call
add
in
jmp
or
imull
push
add
add
cmpsl
adc
sbb
dec
push
or
xorl
add
loop
xchg
leave
pop
add
add
xor
jmp
les
pop
add
sbb
mov
iret
mov
mov
add
xor
js
push
or
add
add
add
lret
test
mov
pop
pop
out
dec
add
mov
out
inc
fsts
mov
push
movsl
cmp
add
cmp
rorb
add
iret
pop
or
xchg
sub
and
or
rcrl
ret
outsl
jne
inc
sahf
clc
mov
and
xchg
cmc
popf
push
aaa
ljmp
cs
add
pop
mov
inc
mov
jno
cmp
or
mov
add
mov
fisubrl
jle
dec
add
lea
add
adc
inc
mov
popf
in
or
lods
call
xchg
push
sbb
out
sbb
add
pop
add
sub
bound
jnp
lea
mov
loope
cmp
loopne
or
pop
xor
pop
add
add
add
icebp
pop
add
inc
mov
lahf
sub
cli
adc
shl
adc
push
sahf
repnz
mov
mov
and
fcmovnu
add
pshufw
add
stos
pop
xchg
push
add
enter
add
roll
add
and
inc
pushf
lahf
mov
jnp
and
add
add
orl
xchg
cltd
push
add
add
adc
std
adc
mov
ror
xor
into
add
pushf
lea
jo
sub
bndldx
sub
add
adc
or
add
push
sahf
mov
scas
xor
mov
shrl
js
add
lcall
add
lods
test
and
xchg
jo
xchg
ret
add
jge
rclb
out
push
enter
pop
int
add
mov
sti
sbb
data16
xlat
out
xchg
adc
cli
jl
pop
dec
add
xlat
and
imul
mov
xor
inc
add
pop
add
fisubrs
or
test
int3
popf
fidivl
ljmp
leave
das
push
add
or
add
add
iret
pop
dec
lret
dec
add
add
cmpsb
pop
sbb
mov
or
fwait
lcall
rclb
push
jg
add
pop
test
cmpsb
fldcw
lds
out
js
push
add
cmp
adc
lock
xor
add
add
imul
add
mov
add
pop
and
mov
xchg
mov
add
insl
jg
add
mov
push
adcb
jne
arpl
add
xchg
lea
push
add
xchg
pusha
add
xlat
enter
mov
push
add
mov
inc
add
add
iret
mov
dec
pop
arpl
add
stos
ss
mov
add
cmc
inc
jmp
outsb
add
aas
repz
adc
test
sub
push
add
loopne
mov
leave
pop
push
add
add
xchg
xchg
ret
bound
lcall
cwtl
fwait
add
pop
xchg
push
add
leave
pop
movsb
dec
loop
add
fld
xor
jns
add
jl
in
cmp
pusha
add
sbb
xor
jmp
add
orb
add
test
xchg
add
add
and
cmp
cmc
inc
jmp
js
fcmovb
dec
ja
dec
add
sub
test
mov
sub
jns
out
add
xlat
xor
push
add
mov
pop
add
pushf
push
sub
and
add
pop
adc
or
adc
roll
xlat
mov
loopne
add
add
repz
inc
add
arpl
or
insl
xchg
orb
mov
cmpsl
pop
leave
sti
repnz
lock
add
xlat
pop
add
test
jmp
add
shrb
add
add
in
shll
cmpsl
stos
add
cmp
enter
out
push
add
add
ret
add
xchg
add
sbb
fstpl
pop
xchg
mov
inc
add
divb
add
add
scas
jne
fadds
icebp
dec
add
add
cld
aas
bound
fidivs
and
add
add
pop
add
lea
add
hlt
inc
add
push
mov
aaa
sbb
sbbl
add
push
adc
pop
add
hlt
out
lahf
xchg
imul
dec
data16
add
mov
testl
add
add
call
add
and
repnz
add
or
push
add
jne
and
cmp
and
cmpsb
xchg
fwait
cmpsb
mov
push
add
jae
add
pop
test
push
add
test
cmp
imul
or
add
shrb
pop
pop
add
mov
sub
mov
lahf
jp
dec
add
mov
cmp
or
mov
call
xor
lret
insb
add
gs
ret
mov
add
pushf
sbb
out
mov
add
add
inc
add
add
pushf
mov
inc
add
mov
fsincos
mov
sub
sub
add
sub
clc
xor
addr16
add
outsl
test
and
mov
add
or
daa
or
adc
inc
add
add
add
mov
aam
jns
cmpsb
mov
icebp
cs
or
testl
movsb
mov
xchg
mov
push
add
add
daa
lods
pop
add
dec
mov
jge
lea
jle
push
add
rclb
sbb
aam
pop
add
xor
hlt
xchg
jp
dec
fdivs
add
add
add
add
aam
inc
pusha
add
add
inc
mov
adc
fcmovb
cwtl
enter
add
add
jecxz
pop
add
or
inc
add
mov
xor
fnsave
into
jb
add
pop
add
stos
add
ror
scas
cmp
jo
inc
fisubs
aam
add
mov
sbb
dec
add
add
test
popa
pop
sub
xchg
inc
add
add
add
pop
add
add
or
ljmp
cmp
or
add
inc
pop
add
xorb
sub
iret
nop
loop
loop
jge
xchg
leave
jle
mov
push
cmp
sub
mov
and
dec
add
ret
or
aam
pusha
add
jo
cmp
cmc
jle
fcmovbe
mov
ja
add
movsl
call
popf
add
push
stc
ret
lret
dec
ret
imulb
mov
and
push
add
aad
add
add
sbb
add
loope
int3
sbb
mov
ret
cmp
daa
cmp
cld
fists
rclb
lds
xor
cmp
push
jmp
dec
add
imul
call
mov
pop
xchg
cld
mov
add
add
sub
mov
add
data16
cmc
add
pop
enter
mov
faddl
inc
or
loop
and
dec
add
or
data16
movsl
shl
add
pop
maxss
or
iret
popf
je
xor
test
mov
add
sbb
add
mov
mov
faddp
roll
cltd
adc
or
dec
add
jb
push
add
jle
jg
add
iret
movsl
out
mov
mov
insl
aas
push
je
add
ret
mov
mov
add
add
add
fildl
aad
add
add
xorb
testb
dec
add
add
cld
sub
les
xor
mov
mov
add
cmp
xor
add
add
add
in
and
js
mov
add
sub
xchg
push
add
nop
jbe
bound
data16
daa
pop
xchg
add
push
sahf
pop
pop
nop
scas
testl
xchg
scas
add
add
add
enter
add
mov
imul
xchg
dec
add
in
add
dec
add
add
add
add
dec
test
jg
mull
add
dec
mov
gs
add
aam
mov
add
scas
and
xor
add
push
add
mov
das
pop
mov
pop
cmc
stc
daa
mov
add
jb
aaa
pop
mov
add
sub
andl
ret
hlt
jecxz
mov
inc
in
mov
xchg
xor
out
inc
add
ja
add
jbe
and
loop
lret
outsb
add
popa
cmp
ficomps
xor
lret
imul
and
gs
or
inc
add
les
sub
push
add
std
adc
mov
add
repz
or
repnz
pop
out
push
lcall
mov
add
sbb
sub
pop
lds
xchg
fld
rcll
test
add
or
mov
add
aas
call
cmpsb
shll
adc
mov
add
aaa
xchg
data16
add
add
and
hlt
push
or
mov
add
mov
sub
and
pop
add
xchg
sbb
pop
add
jnp
cwtl
jg
and
push
int3
rorl
sahf
mov
push
ja
movsb
sub
jmp
inc
mov
movsl
pop
popf
pop
add
add
add
add
or
mov
and
push
add
adc
insl
idivl
add
hlt
cmp
add
and
inc
sub
add
xchg
ljmp
add
fildl
jecxz
dec
add
add
add
in
dec
inc
add
jl
push
push
add
adc
sbb
cmp
daa
sub
insl
incl
add
mov
add
push
fdivl
inc
add
out
push
add
mov
add
ss
sbb
dec
add
xor
rolb
add
dec
add
add
pop
add
scas
cltd
repz
add
mov
add
add
int
inc
add
pop
add
insl
jecxz
xchg
mov
and
cmp
adc
sub
sub
and
add
pop
pop
mov
inc
jae
and
in
in
xchg
xor
dec
add
xor
push
das
ja
cwtl
data16
add
pop
lahf
movsl
sub
sbb
test
lret
and
pushf
xchg
ror
xor
adc
add
fcoml
das
add
xchg
lcall
fcmovbe
mov
add
add
cmp
pop
xchg
dec
add
push
add
jnp
xor
xor
pop
add
or
add
daa
ljmp
mov
pop
js
mov
js
test
pop
jnp
add
push
dec
cli
pop
fistpl
data16
dec
inc
test
pusha
add
rclb
pop
jo
pusha
add
add
or
repz
mov
sahf
xor
add
push
add
add
xchg
out
int
add
add
rcrl
push
add
pushf
dec
add
cltd
std
sub
add
mov
inc
add
add
ljmp
add
pop
push
add
inc
div
and
sub
imul
pop
js
fwait
and
mov
and
add
xchg
cmp
add
mov
outsl
jl
cmp
je
pop
add
pop
and
inc
mov
dec
aas
adc
std
jge
add
into
fldcw
fists
data16
loopne
inc
in
mov
add
xor
add
loop
sub
add
gs
jle
or
pusha
add
cmc
loop
add
add
jle
add
sbb
adc
pop
cmc
rcrl
dec
inc
sub
xchg
inc
add
sbb
out
mov
add
mov
pop
add
add
add
mov
inc
fisubrl
jmp
push
add
cwtl
popf
cwtl
dec
add
pop
add
add
aam
sbb
and
enter
and
add
jp
inc
add
add
inc
cltd
jp
mov
fcoml
add
or
push
add
adc
xor
or
sbb
mov
add
lds
rorl
fsubp
sbbl
add
mov
cmp
sub
xor
int3
or
fdivl
xchg
jge
sbb
pop
shrb
mov
daa
jmp
add
xchg
xor
loop
in
lea
push
add
add
inc
add
mov
out
std
pusha
add
repz
mov
mov
add
das
jl
popa
out
aad
in
mov
add
add
xchg
mov
inc
add
add
loope
rolb
add
push
push
add
add
cmp
sbb
mov
aad
fbstp
add
movb
xor
dec
jl
dec
cmp
add
inc
add
mov
mov
add
or
inc
subl
add
scas
add
shlb
xchg
sbb
pop
mov
xchg
movl
push
add
cmc
outsl
add
mov
aam
cmp
push
add
add
sub
ja
add
add
test
jno
mov
dec
data16
add
jp
dec
add
add
sub
push
cli
mov
xchg
add
rolb
add
jmp
add
xor
cmc
bound
pop
xchg
or
pusha
add
jns
and
movsb
mov
pop
mov
fmulp
fidivrs
jge
add
cmp
add
popf
cmp
outsb
add
sahf
sub
or
pushf
lods
add
dec
jg
cmpsb
outsb
add
sub
filds
sbb
sahf
icebp
out
add
lock
add
stos
in
int
add
das
push
test
lret
dec
add
add
bound
dec
add
add
mov
sub
inc
add
je
and
dec
add
add
add
mov
jo
dec
sub
mov
add
add
popf
adc
sub
loopne
sub
stos
imul
std
cmp
fnstsw
imul
add
ud2
lahf
or
add
call
pmuludq
sbb
jle
pop
add
cld
mov
sub
jl
call
cwtl
add
add
aam
cltd
andl
insl
pop
add
sbb
sbb
add
and
jp
icebp
sub
add
push
jg
loope
cmp
imul
add
add
add
jno
leave
mov
push
add
ret
add
jae
add
pop
sub
add
push
add
mov
dec
add
mov
daa
lods
cmp
inc
add
and
jne
ds
pop
xchg
push
add
popf
jge
dec
add
subl
dec
pop
add
add
add
dec
add
push
add
mov
adc
mov
add
adc
pop
add
add
add
xor
fmulp
push
add
addr16
add
aam
add
sbb
in
xor
dec
repnz
in
and
outsb
add
cli
out
add
cld
arpl
add
js
adc
dec
in
rclb
cwtl
cmc
push
add
add
out
stos
mov
add
cmpsb
sahf
add
mov
loop
lahf
mov
rcrl
clc
shrl
add
pslld
xor
fdivl
aas
add
xchg
outsb
add
mov
xchg
je
jle
push
xlat
mov
adc
mov
mov
movsl
stos
add
add
pop
add
inc
add
aaa
sbb
mov
push
add
cmpsl
ret
int
mov
imul
add
shlb
or
in
inc
jle
mov
xor
lock
in
cwtl
rol
push
add
arpl
jp
leave
jle
mov
and
loope
arpl
pop
mov
mov
ds
sub
add
cltd
scas
jp
pop
loop
add
sbb
bound
iret
xchg
xchg
add
jp
fldl
or
pop
add
insl
lcall
adc
xchg
bound
sbb
push
repnz
orb
add
cld
test
hlt
adc
jne
dec
inc
add
add
inc
mov
add
icebp
adc
add
mov
mov
cltd
faddl
pushf
ljmp
push
scas
mov
mov
add
mov
mov
add
dec
outsb
add
add
add
or
inc
scas
xorl
pusha
add
add
add
cmp
bound
movsb
mov
inc
cld
outsb
add
add
inc
add
cmp
sbb
xchg
pop
jp
sub
push
add
icebp
enter
push
add
add
fldenv
loope
lods
dec
add
add
add
jl
out
insl
add
or
std
in
push
bts
outsb
add
out
xchg
add
aas
pop
add
in
sbb
cmc
mov
mov
add
and
andb
jno
cmp
and
and
test
stos
aaa
test
add
or
push
add
add
ja
push
jp
imul
out
cmp
dec
inc
add
iret
pop
add
push
lahf
mov
hlt
cld
push
add
inc
mov
in
stc
or
sahf
ret
push
add
mov
je
push
jp
xchg
stc
shrb
dec
push
add
add
cmpsl
popf
mov
mul
add
push
push
add
cli
testl
adc
sub
sub
outsl
bnd
add
add
jl
add
and
or
add
fadds
pop
adc
push
add
cmp
dec
add
jle
rcrb
add
mov
mov
add
fcompl
dec
leave
js
pop
out
lret
cmp
cmc
inc
jo
aam
aam
add
rolb
pop
inc
or
jns
or
or
testl
pop
stos
sub
imulb
jnp
addr16
fmull
ljmp
scas
movsl
fimuls
add
je
jae
add
add
jl
adcl
dec
add
add
add
mov
add
jmp
std
dec
add
mov
add
add
add
xor
dec
add
out
add
add
mov
jmp
cltd
adc
sub
cmp
fisttpll
add
add
add
add
outsb
add
add
jnp
sbb
loopne
xor
addb
fs
mov
push
add
mov
add
sbbb
cli
cmc
stos
jne
push
add
jge
add
push
add
add
mov
ljmp
add
mov
adc
xchg
lret
jo
je
rcll
add
add
testl
mov
hlt
sbb
stos
repnz
in
or
pop
fildll
lcall
add
scas
test
or
ja
outsb
add
push
push
jae
add
add
add
lds
mov
nop
cmp
ljmp
das
or
xor
push
add
repz
xor
or
pushf
mov
jl
add
in
lock
dec
add
in
aad
mov
iret
aad
sub
add
xchg
and
in
add
add
add
movsb
jl
mov
add
inc
push
sahf
mov
rolb
mov
xor
cmpsb
jl
jns
jl
js
add
fldt
xor
or
cmp
adc
mov
add
fidivl
sbb
es
sbb
es
inc
add
fnsave
add
cmc
stos
inc
cld
movsl
stos
hlt
cmp
lahf
jmp
cmpsb
jne
cli
fistpll
decb
test
into
xor
shrb
dec
das
add
add
add
mull
daa
push
add
add
sahf
out
insl
cld
lock
lock
ja
cmp
mov
dec
jg
cmp
rolb
cmp
orb
mov
add
xchg
add
add
jns
pop
adc
or
mov
xchg
loopne
ficompl
adc
nop
loope
or
pop
xchg
mov
push
push
add
push
add
hlt
sbb
mov
int3
mov
sub
dec
add
lock
cmc
add
cmp
mov
orl
push
add
xchg
xor
cmp
add
xchg
sbb
imul
or
inc
add
cld
xchg
inc
fwait
rep
sbb
push
add
popa
inc
mov
xchg
in
sarb
dec
repnz
mov
pop
add
push
add
add
add
pusha
add
loop
outsb
add
lret
test
mov
mov
sub
add
add
xchg
push
add
add
cld
and
cld
cmp
jge
push
add
add
add
mov
ficomps
imul
sbb
mov
add
mov
add
mov
add
and
int
pop
add
mov
add
add
pop
pop
into
adc
lods
xchg
inc
sbb
cmp
out
jmp
xchg
sub
into
std
in
mov
adc
add
adc
add
in
ja
mov
add
push
add
out
dec
add
loope
aas
cwtl
popa
add
adc
mov
add
ds
dec
lret
pop
in
add
cld
sub
inc
jbe
push
add
xor
rclb
sub
js
and
pop
push
add
add
int3
sub
fisttps
add
mov
xor
xchg
test
sbb
loopne
add
push
pop
add
xlat
cmc
add
scas
push
push
mov
add
rcr
dec
add
add
add
cli
aam
or
jecxz
cmp
or
jb
cmp
push
add
adc
into
xchg
cmp
stos
lret
mov
add
xchg
cmp
out
add
fldl
push
add
add
adc
mov
mov
out
add
dec
add
lcall
sub
lock
repz
inc
add
aas
fwait
pop
and
mov
pushf
gs
insl
test
add
dec
add
add
push
cs
pop
add
add
into
jge
add
mov
shll
sub
or
ret
lret
mov
pusha
add
jecxz
add
adc
les
add
push
add
add
das
lods
lret
dec
std
or
add
add
pop
jp
jns
add
into
bound
jmp
add
xchg
enter
in
sub
shr
add
ljmp
stos
inc
add
sbb
jnp
or
add
stos
sub
pop
add
in
aad
outsl
pop
push
mov
ret
sub
enter
ljmp
xchg
adcb
add
pop
xlat
fcoms
mov
mov
add
cmc
mov
mov
lds
push
repnz
add
jne
add
fcompl
je
idivl
add
lahf
inc
add
stc
push
pop
lds
adc
or
subl
repnz
cmp
add
out
out
or
and
shlb
add
add
outsb
add
add
jmp
add
mov
push
add
lods
sbb
jns
mov
loope
inc
jge
adc
les
push
add
popf
adc
gs
add
inc
imul
xlat
aam
add
mov
addr16
add
mov
add
flds
cmp
out
add
inc
std
mov
add
push
add
pop
sub
out
mov
enter
add
mov
jae
popf
dec
xchg
iret
add
add
add
xchg
into
movsb
idivl
lods
out
cmp
fwait
fwait
test
add
lret
int
in
dec
add
test
add
pop
jb
das
and
cmpsb
push
add
out
lods
sbb
cwtl
jne
pop
add
and
push
add
jbe
jge
bound
in
int3
je
loope
sub
fdivs
das
jmp
sbb
sub
xlat
test
push
add
add
xchg
dec
aas
pop
add
aad
xor
fdivs
jle
add
jne
add
mov
add
adc
add
sti
cmp
xchg
mov
adc
and
in
sbb
leave
xchg
or
add
mov
add
pop
add
and
mov
add
add
int
dec
add
add
or
mov
push
cmp
int3
fcoms
add
add
inc
loopne
pop
add
dec
add
ja
in
xor
imul
mov
mov
pushf
sbb
jmp
dec
lock
add
add
pusha
add
add
cmp
test
inc
add
lods
jmp
repz
lock
dec
add
shl
xor
cli
xchg
inc
add
add
clc
imul
add
push
add
add
inc
add
add
add
add
mov
insb
add
sti
testl
adc
je
mov
jp
das
les
lods
mov
add
rcll
add
inc
or
push
add
mov
add
bound
or
sahf
mov
les
addr16
add
inc
mov
add
add
and
scas
jns
mov
sarl
dec
into
push
add
mov
add
add
push
add
push
add
add
add
inc
add
xor
mov
add
test
jb
movsl
cli
adc
mov
push
add
add
adc
and
dec
push
add
fnstenv
clc
lock
sub
sti
mov
sub
testl
fldcw
in
add
jmp
sub
mov
insl
insl
jle
fisttpl
push
ljmp
push
lret
call
fiadds
mov
rorl
add
jbe
aam
rcl
insl
or
add
add
insb
add
sti
adc
cmovo
cwtl
cli
mov
nop
pop
mov
add
pop
cmpb
add
fidivs
icebp
push
add
sahf
jg
push
fisubrl
mov
lahf
lret
pop
or
dec
add
xchg
cmp
pop
add
adc
sub
pop
add
xlat
ja
adc
imul
popf
out
repnz
xchg
pop
add
xchg
clc
loopne
scas
jbe
addr16
add
add
cli
loope
jp
scas
add
jp
sub
out
insb
add
cmp
ret
xchg
pop
add
sub
add
xchg
imul
jecxz
test
inc
add
mov
add
cs
add
fbld
test
jbe
jl
sahf
push
inc
add
out
add
je
popa
mov
cmpb
add
hlt
mov
or
adc
jbe
mov
in
add
xchg
sbb
sbb
dec
add
jae
fs
out
mov
inc
add
add
loopne
add
jns
sub
cmp
push
adc
pusha
add
add
ret
add
shrl
add
rolb
cltd
out
mov
sbb
pop
add
push
add
mov
sbb
add
sti
xlat
lret
mov
push
add
pop
add
out
or
pop
add
das
push
add
or
enter
xor
or
pusha
add
jmp
add
mov
lahf
jge
pop
or
mov
add
dec
add
add
fimuls
fdivrl
sti
dec
sub
sub
cmpsl
stos
mov
repz
pushf
push
push
add
jns
sti
aad
add
xchg
mov
imul
add
sub
pop
add
fistpl
add
cld
es
mov
pop
add
std
mov
add
je
aam
and
push
add
daa
insb
add
cld
add
sub
add
in
outsb
add
push
cltd
sbb
nop
and
inc
cmp
adc
mov
xchg
adc
lds
add
jle
popa
outsb
add
xchg
xchg
clc
add
xor
mov
jbe
add
dec
xchg
add
data16
add
jmp
roll
ret
and
add
add
sbb
sbb
enter
pusha
add
inc
add
fisubrl
int3
adc
cld
add
lock
inc
add
insb
add
add
mov
cmc
sbbl
leave
fiaddl
add
jnp
add
add
jbe
sub
inc
add
cmp
dec
jae
add
mov
xor
pop
pop
add
out
clc
cmp
push
add
aad
mov
push
add
inc
sti
cli
mov
add
lcall
fbstp
pop
add
add
mov
add
sub
dec
mov
pop
addb
lcall
add
sti
pusha
add
out
arpl
add
add
fimull
lahf
shll
lret
xor
push
add
add
add
mov
cmp
cmp
test
imul
mov
daa
scas
lea
ret
mov
sub
jb
inc
add
mov
pop
jne
add
jg
data16
push
add
add
shl
and
sbb
cltd
add
lods
jl
jp
ljmp
stos
xchg
add
lret
ja
fsubrl
mov
mov
add
adc
add
jns
add
pop
add
add
xor
push
mov
cld
insl
xor
jmp
fs
sub
jo
pop
add
xor
fcompl
add
add
test
test
jl
push
adc
jmp
add
add
daa
pop
add
add
add
popf
in
ja
xor
mov
sti
iret
loope
mov
mov
and
xchg
pop
add
mov
sub
add
sub
pop
add
cli
mov
lods
xor
adc
cmp
fldenv
stos
stos
out
add
xlat
adc
cmp
stos
sahf
es
dec
add
add
test
add
dec
insl
add
add
jmp
inc
add
enter
ja
xchg
fidivrl
mov
loopne
jmp
out
add
inc
add
leave
mov
scas
mov
add
add
aam
mov
xor
test
rolb
add
loopne
shlb
cmpsb
mov
add
push
and
lret
dec
add
or
adc
jge
mov
pop
add
dec
add
cmp
js
je
je
lds
icebp
shlb
xlat
sbb
mov
insl
clc
shll
or
lahf
cwtl
imul
add
add
mov
fsts
xor
push
add
sub
or
stc
and
pusha
add
loop
inc
cmc
inc
add
and
sbb
rcpps
mov
jb
pushf
adc
inc
add
push
add
sbb
add
dec
add
jl
rorl
cmp
divl
dec
add
add
cmp
sub
inc
jae
add
add
jle
mov
adc
jbe
cwtl
or
or
jge
fwait
ja
push
add
lods
push
out
sti
arpl
cmpsb
flds
sbb
movsl
stos
pop
xchg
adc
cmpsl
scas
add
adc
outsb
add
or
inc
add
add
adc
add
mov
add
addr16
add
add
push
add
repz
jg
add
dec
add
std
repnz
movb
add
push
fdivr
mov
nop
inc
add
add
enter
push
loop
test
hlt
fisttpl
aas
fiaddl
into
xorl
in
xchg
rolb
scas
jne
inc
add
dec
lock
icebp
aam
add
mov
add
add
jle
xchg
jecxz
pop
cli
lcall
push
add
cltd
sub
loopne
add
push
jmp
xor
repz
xor
mov
mov
add
add
fnsave
repz
call
imul
add
add
add
mov
add
sub
aad
pshufb
push
add
mov
add
add
add
sbb
add
xlat
cmpsl
fs
popf
lahf
mov
imul
add
xor
add
add
in
add
ficoms
sbb
push
push
add
pop
cwtl
lods
loop
fldt
add
fiadds
cmp
cmp
clc
inc
jbe
out
pop
imul
add
in
pushf
or
dec
add
pop
xchg
cmpsb
rclb
std
jge
jle
mov
add
nop
push
add
rcr
pusha
add
add
add
xchg
enter
add
sub
cli
in
mov
push
insb
add
add
push
add
push
jno
lods
pop
add
add
add
add
gs
cli
mov
insl
bound
jl
jb
lcall
cmp
add
stc
mul
orl
add
fdivs
les
push
add
push
int
leave
fnsave
add
add
xchg
in
inc
std
icebp
arpl
adc
pop
mov
cltd
popa
stos
scas
and
sbb
add
jg
add
test
sub
add
mov
aad
fdivrp
ja
add
add
stos
gs
sahf
sub
add
mov
or
out
inc
add
dec
add
add
adc
cmc
pop
add
jmp
inc
mov
scas
inc
add
add
add
cld
ret
add
add
and
mov
add
mov
aaa
push
add
int
add
xlat
xor
shlb
add
add
xor
add
pop
mov
mov
add
add
mov
mov
xchg
push
add
sarl
or
cmp
add
js
adc
cmpsb
mov
sbb
inc
fiadds
add
cmp
jae
lret
pop
jecxz
mov
add
jg
inc
xchg
and
jb
pushf
and
xor
ljmp
stos
outsl
inc
add
js
or
hlt
cmp
push
add
vmovapd
enter
cmpsl
jmp
jo
pop
add
add
or
popa
cmpsl
pop
add
ss
and
add
setge
rcl
data16
add
sbb
dec
add
add
leave
in
dec
add
mov
mov
flds
adc
jg
mov
xchg
xchg
lds
mov
dec
fwait
mov
mov
les
add
aas
repnz
ja
ljmp
addr16
mov
nop
cwtl
or
mov
enter
rcll
add
gs
mov
dec
pop
lret
add
push
add
incb
mov
je
rcr
mov
add
inc
add
and
repz
push
add
add
xor
ret
dec
add
test
sbbb
mov
pop
add
push
add
or
add
test
mov
mov
mov
aas
insb
add
sbb
sti
loopne
xchg
insb
add
pop
sbbl
and
sar
ret
andl
inc
sub
pop
cmp
inc
add
rolb
mov
loope
hlt
xor
add
addl
or
dec
mov
mov
stc
cmpsb
and
or
add
mov
sub
inc
push
add
and
test
int3
repz
add
and
sbb
mov
clc
sub
shlb
add
add
add
leave
push
add
outsl
and
push
add
adc
sbb
sub
outsb
add
sarb
and
dec
add
jg
into
xchg
add
outsl
mov
add
mov
jge
add
cmp
mov
add
add
imul
pop
add
add
xchg
add
and
sub
sbb
sub
push
push
add
adc
cld
jp
rcll
add
push
add
leave
push
add
add
lea
add
cltd
pop
jae
add
sahf
and
mov
jle
lock
sti
mov
push
add
push
add
sub
cmp
xor
adc
insb
add
daa
addr16
xchg
shlb
pop
add
push
add
add
hlt
jg
sub
insb
add
cmp
in
push
add
int
fdivs
mov
add
mov
add
rol
js
stos
push
inc
add
adcl
int
sub
cli
add
push
add
add
jmp
js
xchg
xchg
jle
xchg
pop
mov
add
push
add
add
adc
popf
pop
push
pop
add
add
insb
add
imul
xchg
mov
dec
xchg
mov
cld
data16
add
push
add
insb
add
cmpsb
add
in
lret
or
mov
add
pop
add
int3
fmull
inc
add
call
adc
or
add
mov
xchg
xor
add
or
xor
jg
jns
les
pop
add
add
add
js
movsb
rorl
arpl
out
andb
push
add
dec
add
xchg
fwait
cltd
push
add
jns
or
add
add
repnz
push
add
test
push
pop
add
jl
popf
and
add
mov
in
add
sbb
adc
dec
inc
add
sub
sub
data16
add
pop
scas
add
pop
add
insb
add
jge
mov
stc
inc
push
add
add
out
lea
aad
sub
jg
add
jg
aas
push
add
mov
add
mov
inc
add
mov
add
add
xchg
ret
mov
scas
insl
inc
add
add
sbb
into
sbb
mov
mov
rcll
shrl
test
sbb
lods
push
xchg
rclb
xor
and
mov
jp
stc
enter
add
add
fdivl
add
sub
lcall
add
cmp
adcl
push
xor
pop
add
adc
dec
add
les
add
lods
cmp
and
jo
dec
add
fwait
or
add
insl
mov
lock
jo
aas
sub
rcrl
cmp
pop
add
imul
add
jecxz
add
add
add
les
add
in
fldcw
adc
sbb
daa
ja
pop
add
sub
add
add
add
cli
imul
fnsave
dec
adc
hlt
and
outsb
add
pop
add
leave
mov
outsb
add
add
add
loop
add
fndisi(8087
add
add
add
shlb
or
cli
mov
push
add
fisubrl
rorl
add
xchg
sub
add
add
mov
add
int3
test
or
mov
cmp
push
add
add
test
outsb
add
sahf
pop
or
xor
cltd
test
faddl
in
or
or
dec
add
add
mov
fisttps
pop
loope
add
addr16
cli
push
add
lods
cmpsb
push
mov
cmp
inc
add
cmp
xchg
cmc
stc
pushf
dec
inc
lahf
and
add
mov
mov
lcall
outsb
add
cmp
sub
or
push
add
push
daa
ret
sub
and
cwtl
mov
add
add
fisubl
push
add
jle
pop
inc
jge
dec
sarl
xchg
cmp
clc
lods
fcomip
or
in
sub
push
dec
int3
inc
add
xchg
add
add
lods
lahf
jne
add
rcrl
add
shrl
sbb
cmp
xchg
and
in
out
in
xchg
inc
addl
sub
sub
xchg
clc
aas
lock
fdivrp
cmp
fldl
adc
push
sbb
test
add
sub
addl
mov
add
into
sub
push
mov
sbb
lahf
into
ja
add
adc
mov
ror
dec
add
mov
add
add
testl
out
fbld
add
push
add
ret
mov
add
icebp
daa
in
pop
xor
leave
xor
add
pop
add
add
call
adc
pop
add
add
sub
fsubrp
jp
aad
add
sbb
inc
add
dec
add
out
inc
add
push
add
loop
jnp
fimull
fimuls
dec
movsl
inc
add
add
out
push
add
add
inc
add
lret
cmp
scas
loope
add
outsl
rclb
int
ficoml
add
add
aaa
inc
or
and
add
add
add
jmp
stos
jns
jno
add
aas
or
imul
add
mov
enter
mov
xchg
fwait
out
mov
mov
leave
add
cmp
xor
mov
add
add
or
mov
arpl
mov
xchg
out
pusha
add
jl
dec
add
insl
xchg
repnz
xor
sub
sub
push
add
lcall
mov
add
jle
movsl
lods
push
mov
xor
or
add
xchg
adc
xorb
lret
shlb
pop
out
add
pop
add
add
sub
pop
add
cmp
in
add
lret
mov
pop
cmpsl
lods
cmp
enter
pushf
jae
je
movsb
cmpsl
inc
add
bound
xchg
sub
stos
jae
je
ja
and
subl
cs
jge
sarb
cltd
daa
sbb
cmp
add
sbb
bound
jno
fwait
je
push
mov
aas
loop
stos
add
add
xchg
stos
dec
add
test
in
add
add
aas
cmp
xor
add
subl
jbe
ret
lds
inc
cmc
xor
mov
cld
fnstcw
add
sbb
mov
test
add
adc
mov
add
add
sarb
add
enter
mov
sbb
mov
pop
cltd
pop
loopne
outsl
lea
and
add
fstps
pop
add
fsts
clc
mov
add
mov
aam
xchg
test
add
push
xlat
addl
add
add
leave
add
lods
add
pop
sbb
popf
dec
add
xchg
jbe
movsb
int
add
add
add
add
out
outsl
sub
or
push
add
add
repnz
sbb
movsl
imul
roll
ss
lea
mov
cmpsb
out
add
sub
inc
pop
add
add
push
add
mov
leave
mov
movsb
add
mov
outsb
add
add
sti
pop
add
fcomps
out
add
loope
repz
loope
xchg
subl
adc
add
inc
add
adc
in
pushf
dec
add
mov
test
mov
sarb
and
sbb
out
sub
les
pop
and
jb
mov
dec
add
add
dec
push
add
add
add
pop
xchg
add
add
pop
add
xchg
xor
lret
das
mov
imul
mov
mov
cltd
les
add
in
ss
or
adc
stos
test
fisttps
add
stos
hlt
and
aad
jmp
mov
or
add
pusha
add
mov
enter
movsl
pop
cmp
inc
and
add
mov
test
sahf
adc
pop
pushf
xchg
sub
sbb
add
add
aaa
insb
add
aad
lods
repnz
pop
jb
and
pop
mov
fsub
jns
add
or
add
mov
add
jb
lock
or
cmp
mov
das
data16
movzwl
cltd
cmp
rorl
lock
add
add
mov
int3
add
stos
sbb
enter
movsb
sub
sub
or
mov
add
sub
add
push
add
mov
lahf
cmp
inc
bound
and
inc
add
imul
daa
cmc
fmul
add
add
pusha
add
jge
jge
push
js
pop
mov
push
add
inc
inc
jb
mov
add
fldln2
ss
cmpsb
test
xchg
mov
mov
xchg
cltd
xchg
add
fnsave
push
add
outsb
add
add
bound
adc
push
add
cwtl
mov
iret
jo
add
cmp
add
xchg
mov
push
sti
addr16
and
pop
add
pop
loope
stc
cmpsl
dec
add
ret
push
add
xor
lret
pop
mov
and
dec
push
test
mov
cmpsb
inc
add
cmp
inc
mov
xlat
lds
add
div
dec
mov
add
or
or
add
js
and
sbb
sti
mov
int3
popa
clc
add
mov
lret
cltd
sub
gs
add
add
lock
testb
add
dec
adcb
sub
js
cmp
add
mov
push
add
pop
xor
jl
bound
or
adc
out
sahf
pop
add
or
mov
fcmovbe
mov
pop
push
sbb
jbe
or
pop
shr
sub
and
std
xor
rcrl
add
mov
add
add
push
push
pop
jle
mov
adc
xchg
push
out
jmp
lcall
add
xchg
push
add
neg
mov
add
test
testb
fnstenv
push
add
dec
push
mov
add
ret
jne
mov
popf
lret
mov
adc
cmp
cmpsl
mov
fiadds
add
add
in
add
lods
fbld
add
ret
nop
arpl
add
loop
mov
pop
add
scas
mov
push
add
jmp
add
jno
sbb
pop
xchg
mov
sub
pop
stos
pop
add
add
or
add
add
faddp
shll
mov
movsb
enter
test
add
add
jmp
insb
add
and
or
test
add
lea
out
movsl
lahf
das
ja
dec
add
sbb
pop
mov
loopne
add
lds
call
movsl
jb
xchg
shr
int
shlb
clc
pushf
lods
in
push
add
mov
pop
cmp
sti
mov
outsb
add
pop
mov
adc
ds
fcomps
or
mov
jbe
bound
fnsave
add
inc
das
add
fistpll
dec
or
ja
cmpl
sbb
xor
cltd
fsubrl
add
add
add
nop
add
add
mov
add
and
push
std
add
push
sbb
cmp
add
lahf
subb
inc
add
xor
push
add
call
movl
xchg
lret
add
sub
jbe
orl
or
xchg
xchg
mov
fimuls
add
sbb
or
add
add
jb
in
or
lret
add
dec
cmp
js
addl
push
add
add
outsb
add
push
arpl
test
bound
insb
add
dec
add
in
gs
add
in
test
sbb
add
clc
and
xchg
faddp
mov
add
jmp
add
outsl
iret
and
aam
push
add
dec
add
add
xchg
sbb
fcmovb
mov
cwtl
dec
add
adc
and
adc
test
pop
gs
push
add
addr16
fnstcw
add
add
pop
sub
adc
add
add
add
jne
sti
loop
xor
pop
insb
add
out
dec
add
push
add
daa
ljmp
movsl
add
mov
ret
adc
add
add
add
int3
pusha
add
push
add
add
inc
jecxz
inc
int3
popf
and
lea
add
dec
add
push
add
add
or
xchg
in
add
xor
fadds
add
inc
add
add
jno
inc
hlt
sbb
icebp
lods
inc
pop
add
lret
sbb
outsb
add
pop
pop
mov
lahf
popa
js
mulb
push
es
mov
xor
push
add
add
daa
aam
xchg
push
add
adc
sbb
add
enter
out
mov
mov
add
adc
adc
jo
pop
xchg
sbb
sarl
lahf
cmp
lods
out
adc
std
sub
xchg
mov
push
add
add
pop
dec
add
incb
add
testl
popf
adc
pop
add
fmuls
pusha
add
inc
add
add
jb
cmc
loop
add
pop
add
scas
mov
inc
sbb
dec
or
rcrl
add
push
jae
scas
dec
add
ficomps
push
lret
push
push
sub
shl
rorl
insb
add
push
add
aas
or
ljmp
cmc
and
pop
adc
lods
jl
dec
add
fcmovnu
movsb
adc
jl
or
inc
add
inc
pop
add
rolb
lret
pop
add
jp
addr16
add
popa
loop
add
add
add
pop
mov
imul
pop
mov
lods
enter
add
addr16
push
add
mov
xlat
in
xchg
and
xor
or
inc
add
and
outsl
xchg
jb
mov
add
test
add
jne
cmp
xor
sbb
mov
adc
jno
add
adc
ljmp
cwtl
aas
dec
add
jne
add
jae
pop
ret
sbb
lahf
lret
jp
fimull
and
and
iret
movsl
or
shr
rcll
pop
add
popf
mov
add
pop
xor
mov
inc
add
add
sub
add
xchg
loopne
stos
repnz
jo
fidivrs
pop
mov
mov
adc
add
jecxz
int3
pop
nop
leave
pop
add
add
mov
lods
xor
aas
push
add
pop
add
push
int3
out
xorl
cld
stc
gs
mov
mov
loopne
mov
lods
adc
adc
dec
in
das
add
add
jle
mov
inc
mov
iret
test
add
and
jo
jp
outsb
add
or
add
pop
div
pop
cltd
call
push
loopne
add
xor
xchg
popf
or
sbb
addr16
add
ljmp
add
push
jmp
mov
stos
sbb
data16
pop
xor
push
add
xchg
jns
jne
mov
adc
push
add
mov
pop
hlt
in
push
add
push
aas
fsub
push
add
add
dec
add
add
sub
fcomps
and
jle
push
add
out
mov
fwait
add
hlt
clc
std
jg
add
xor
mov
inc
add
and
aam
xor
xchg
sub
add
call
mov
add
jl
fwait
pushf
mov
popf
sub
movsl
mov
inc
inc
add
or
add
pop
add
cmp
and
call
pop
mov
xor
les
add
push
add
cmc
shlb
or
mov
pusha
add
add
or
flds
int3
inc
add
push
add
add
je
and
add
add
mov
and
in
outsb
add
rcrb
push
cmp
or
jnp
insl
mov
add
cmp
jle
mov
shrl
pop
add
push
add
inc
outsl
push
xchg
out
subb
mov
pop
add
add
ret
icebp
xor
jb
dec
add
push
loop
imul
loop
in
dec
add
fnstsw
add
xor
pusha
add
xor
cmp
add
add
add
add
test
mov
add
in
xchg
push
and
and
push
mov
push
add
jne
lahf
dec
cmp
push
enter
shlb
mov
add
mov
and
sbbl
xchg
cli
adc
push
add
dec
add
mov
in
repz
push
add
stos
int
rcrb
iret
fmul
and
pop
push
add
adc
add
or
sahf
aam
xor
pop
add
add
push
adc
add
into
int
aaa
inc
jb
in
jp
iret
aaa
ss
repnz
dec
fbstp
add
or
pop
mov
sbb
sahf
sbb
pushf
push
add
push
add
add
push
add
mov
adc
mov
je
leave
dec
out
add
cld
push
add
xor
sbb
jge
add
add
add
repz
fwait
iret
xchg
aad
add
cmp
pop
dec
out
xchg
xor
xchg
rclb
add
add
test
and
inc
movsl
xor
dec
add
add
add
lcall
add
out
adc
push
add
add
clc
fwait
jb
in
mov
cmp
inc
add
push
lret
in
pop
or
jecxz
add
pusha
add
dec
add
loopne
mov
add
clc
lods
mov
add
testl
xchg
test
pusha
add
inc
outsb
add
add
add
jnp
mov
xchg
addr16
sarb
add
push
add
pop
add
xlat
mov
add
daa
pop
add
insl
insl
jp
pop
pop
adc
and
xchg
mov
mulb
add
add
add
cs
mov
faddp
fiadds
mov
sbb
mov
jmp
sub
mov
pop
icebp
out
xor
pop
add
add
add
adc
lods
inc
add
mov
push
add
add
inc
in
jno
pop
add
sub
add
call
cmp
gs
pusha
add
movsl
ljmp
cmp
add
test
lahf
ja
add
push
add
push
xchg
mov
pmaxub
push
add
inc
add
add
mov
add
add
loopne
xchg
or
shl
mov
xor
xchg
cmpsl
mov
push
add
leave
movsl
cmp
sbb
addr16
repnz
arpl
rolb
jge
test
push
add
imul
add
sarb
push
xor
call
and
cmp
mov
fdivl
sbb
mov
inc
adc
shrl
xor
addr16
xchg
pop
add
push
mov
lret
mov
push
add
add
add
lods
icebp
sbb
inc
add
mov
add
mov
stc
lahf
mov
inc
cmp
add
faddl
std
out
jecxz
jae
or
inc
lods
or
add
and
pop
or
mov
jnp
jns
in
data16
add
mov
adcl
lds
add
xor
das
cmp
out
xor
add
cmp
push
jns
adc
cmpsl
outsb
add
cli
rcll
adc
rolb
sahf
sub
jmp
loop
jle
jb
sbb
jnp
sub
add
dec
push
add
pop
cmp
imul
mov
add
cmpsb
ja
add
popa
cmp
add
lret
bound
rorb
ljmp
cmpsb
fisubrs
xor
jns
jmp
out
shll
cpuid
mov
popa
aas
jbe
imul
jle
cli
fnstenv
fimull
xchg
js
aaa
aad
adc
out
outsb
add
out
mov
mov
mov
jle
test
stos
loop
cmp
adcb
enter
or
lcall
or
dec
add
add
stc
sbb
fwait
sahf
inc
shl
xchg
push
add
popa
pushf
or
ret
dec
add
inc
add
add
pushl
jns
add
outsl
pusha
add
add
int
fbstp
repz
add
pop
inc
add
adc
mov
push
add
icebp
sub
add
mov
popa
ljmp
inc
adc
push
add
xor
add
add
add
add
test
inc
or
jb
clc
mov
and
mov
add
push
pop
and
mov
add
dec
mov
xor
lret
xlat
cli
and
xchg
add
add
inc
add
je
xor
add
in
pop
add
add
add
pop
add
add
leave
pop
shrl
xor
add
xor
sub
xchg
daa
stc
jg
mov
add
cmp
cmp
not
add
dec
pop
push
add
outsl
movsb
loopne
aam
xor
adc
cmp
idivb
add
push
add
add
inc
and
add
pop
add
add
add
sbb
add
das
inc
xor
outsb
add
jnp
inc
fnstsw
adc
jg
sbb
in
xchg
dec
xchg
je
add
xor
shlb
sbb
dec
add
add
add
stos
lahf
enter
push
cmpsb
inc
add
mov
cmp
add
pop
fwait
add
adc
mov
or
je
jmp
add
mov
repz
test
add
add
ret
dec
add
add
mov
or
imul
pop
aaa
xchg
and
push
add
mov
iret
jg
cmp
scas
pop
xor
add
sub
negb
add
jmp
jmp
test
add
movsl
imul
int
or
xchg
and
gs
ror
fstpt
adc
inc
add
out
call
add
fwait
daa
aad
xchg
add
popa
int
inc
add
mov
inc
add
sub
imulb
add
jbe
stos
cwtl
pop
add
sub
pop
add
mov
xchg
fildl
pop
xchg
mov
or
gs
mov
jp
sub
cmp
or
or
add
add
cmp
cmpsb
mov
pusha
add
xchg
or
add
les
mov
jno
add
test
enter
add
dec
add
add
xor
jns
xor
sub
push
add
mov
cmp
pop
add
add
sarl
cmp
aas
xchg
and
adc
outsb
add
add
imul
out
cmp
cmp
and
fcomps
dec
xchg
add
dec
add
lret
aad
pop
js
adc
sbb
sub
push
add
shl
outsb
add
ret
sub
mov
bsr
testl
pop
add
mov
cmpsl
icebp
xchg
sub
dec
add
in
scas
cltd
loope
add
cld
mov
movsl
mov
fwait
mov
mov
xchg
sbb
mov
bnd
mov
aaa
and
in
data16
stc
sub
jp
ljmp
dec
sub
push
add
stc
add
mov
in
add
adc
icebp
lods
mov
add
add
and
out
or
adc
xchg
inc
push
sub
adc
das
add
mov
mov
mov
hlt
jbe
orl
add
ja
add
stc
add
push
into
lock
test
add
adc
fiaddl
out
pop
repnz
add
inc
add
xchg
shl
xchg
inc
stc
mov
clc
stos
xchg
or
jbe
xor
add
cmp
cli
dec
popa
jne
cmc
jnp
add
push
add
dec
fisttpll
add
scas
pusha
add
hlt
mov
imulb
add
lock
push
add
sbb
add
push
add
add
mov
inc
add
push
mov
add
add
or
add
sarl
movlps
add
mov
add
inc
push
add
mov
add
pop
mov
stos
lea
add
adcb
sbb
scas
push
cmp
jl
push
add
scas
or
dec
std
inc
add
add
cmpsb
pop
clc
fucomi
and
mov
jmp
inc
add
shl
xchg
roll
add
cmp
add
add
dec
add
dec
enter
fistps
ret
nop
or
mov
adc
ljmp
mov
pusha
add
add
sbb
adcl
pop
add
cmp
or
movsl
in
or
roll
dec
dec
xor
add
lods
dec
add
data16
ja
adc
add
adc
lcall
add
pop
leave
arpl
inc
add
scas
pop
add
add
add
jl
clc
fisttpl
fildl
sarb
mov
xchg
add
pop
iret
ja
stos
or
int3
and
add
out
add
sub
add
test
add
adc
mov
scas
cmp
add
popa
dec
jo
xchg
pushf
pushf
xchg
in
sarl
sti
cwtl
and
popf
cld
pop
xchg
aad
cltd
xor
in
mov
add
adc
test
add
mov
push
pop
pop
jb
pop
scas
inc
add
in
mov
add
fbstp
inc
cmpsb
stos
inc
add
mov
push
dec
adc
pop
add
mov
add
cs
rol
dec
pop
add
icebp
leave
xchg
filds
adc
cmpsb
icebp
jne
popf
shll
rorl
xor
add
add
ret
add
add
cmpsl
imul
mov
add
adc
jnp
add
xor
lret
add
sub
cmpxchg
fsubrs
incl
xchg
add
ja
xchg
lods
add
add
xor
int
inc
data16
sarl
add
mov
cmp
sbb
jae
add
mov
arpl
fmuls
add
ret
add
cmp
stc
push
xchg
mov
dec
cmp
lahf
out
cmp
push
add
add
dec
jg
add
fildl
aad
or
fdivr
inc
add
mov
pushf
dec
enter
je
pop
orl
add
mov
jb
mov
add
fldt
loopne
add
mov
add
mov
xor
mov
cmp
fdivp
adc
add
add
mov
ret
lret
add
xlat
and
dec
add
mov
xchg
pop
cwtl
and
in
add
add
push
add
xor
and
scas
cmc
cwtl
mov
xchg
push
add
add
add
cmp
bound
mov
pop
add
add
add
div
push
xchg
fsubrs
add
xchg
jo
fsubs
add
add
sbb
filds
lods
cmp
jg
sub
aad
fwait
inc
add
mov
rorl
data16
inc
add
pop
sbb
mov
popa
sarl
ret
test
xchg
jp
lock
add
mov
das
add
into
mov
xor
outsl
sbb
add
pop
add
mov
dec
add
inc
add
sbb
add
and
ret
js
test
xchg
ret
add
add
add
daa
pop
or
aam
dec
leave
mov
imul
cli
enter
jo
sub
cmp
mov
push
sbb
fcomip
lcall
add
add
push
add
add
sbb
add
add
int3
xchg
rcr
mov
adc
movsl
inc
add
push
popf
xchg
mov
fidivs
add
xor
cmpsl
pop
imul
mov
add
add
add
jns
add
cmp
pusha
add
add
or
popa
repz
mov
xor
les
test
adc
jns
inc
cmpsl
fmul
pop
add
mov
add
cmp
out
cmpsb
rorb
or
pop
add
add
add
and
add
repnz
mov
push
add
jecxz
jae
jb
mov
les
add
add
jp
or
inc
add
push
shll
push
add
loope
dec
add
xchg
mov
pusha
add
sti
in
dec
add
aam
dec
jne
sbb
add
inc
pop
jecxz
icebp
mov
stc
adc
mov
lods
ljmp
jno
in
push
add
std
mov
add
repz
inc
pusha
add
and
adcb
mov
dec
inc
xchg
inc
add
jle
mov
push
add
call
loope
lcall
add
add
leave
add
das
mov
add
out
inc
add
add
stos
repnz
mov
push
sbb
ljmp
add
sub
add
add
cld
stos
jbe
sbb
adc
enter
add
scas
inc
add
sahf
sti
push
add
sahf
add
sbb
push
mov
add
add
xchg
sahf
idiv
repnz
add
add
aas
sub
aam
popa
xor
ja
call
imul
dec
add
les
aaa
js
shlb
int
xchg
pop
ret
add
mov
add
sub
in
lahf
adc
loope
or
rclb
aaa
xor
enter
stos
loopne
stos
jp
call
mov
add
xchg
in
push
add
pusha
add
add
push
add
add
and
dec
cld
mov
dec
add
testl
fidivrs
add
push
add
xchg
dec
push
add
fsub
mov
out
push
add
scas
pop
pushf
inc
add
add
pop
add
mulb
add
data16
into
les
xlat
pop
add
and
lds
add
add
into
mov
outsb
add
imul
ret
movsl
popa
pop
jb
xorb
repnz
lock
mov
add
ljmp
ss
lods
cmpsb
jae
fistpl
lret
or
inc
add
and
cmpl
ss
lahf
cmc
lea
bnd
add
dec
add
add
ja
push
pop
lahf
push
out
pop
out
pop
add
iret
cmpsl
mov
aas
mov
jmp
add
pop
add
mov
or
mov
or
jle
fmul
call
add
or
fidivl
lret
dec
add
mov
shlb
stos
cmp
add
push
jp
xchg
xor
stos
in
cmp
popa
adc
xor
je
ret
add
les
and
loope
add
sahf
roll
add
add
aad
test
add
nop
xchg
scas
mov
add
arpl
popf
cmp
mov
mov
je
xchg
cmp
aas
push
add
xor
lods
aaa
add
sti
xor
cmp
push
sbb
add
aad
cmp
xchg
rclb
test
dec
lds
sub
mov
dec
add
mov
add
add
add
in
lods
sub
mov
js
and
mov
add
jb
out
add
outsb
add
add
ljmp
imul
pop
push
add
mov
add
add
add
and
xchg
cwtl
mov
cmp
add
and
push
add
enter
add
xor
dec
add
loop
movsb
add
lret
clc
jle
loop
fdiv
inc
push
add
test
add
mov
inc
add
bound
adc
das
push
add
fxch
into
dec
out
or
mov
add
add
out
imul
inc
add
mov
fsubrl
out
xor
bound
inc
cmp
outsl
jns
aam
cmpsl
jecxz
repz
inc
jns
out
cmc
mov
cli
cmpsl
mov
fisttpll
add
stos
stos
mov
dec
add
add
adc
outsl
push
add
jbe
loop
pop
mov
jge
test
add
sbb
xor
ret
xor
add
popf
arpl
sub
dec
add
pop
or
push
add
sbb
cltd
imul
scas
jl
or
mov
add
push
add
faddl
add
xor
add
js
xchg
aaa
or
loope
lret
std
dec
add
pushf
inc
add
pop
add
mov
add
dec
add
add
push
xchg
shrl
add
add
in
sub
dec
add
sub
fbstp
pop
jnp
add
jne
jmp
and
xor
mov
pushf
pop
xorb
or
test
lock
dec
add
fsubs
stos
xor
ret
outsl
aas
adc
sbb
dec
cmp
sub
aad
sbb
cmpsl
test
pop
dec
add
add
mov
cld
add
mov
add
shlb
int
call
push
add
and
jle
pop
add
and
add
dec
and
ret
sti
jae
jbe
sub
jo
sbb
add
aaa
mov
cmp
push
mov
and
lahf
push
addr16
in
dec
add
push
test
sub
lea
mov
add
inc
add
add
inc
cmp
add
pop
xlat
push
xchg
leave
xchg
mov
cmp
pop
mov
add
dec
xchg
jmp
add
je
data16
pop
add
add
into
aas
mov
and
xor
add
sub
arpl
add
dec
add
mov
jge
add
aad
add
rorb
stc
int3
mov
add
cwtl
jne
cld
add
add
add
add
mov
leave
cmp
fisttpll
fbstp
add
add
pop
add
add
add
mov
in
xor
sub
pop
add
cmp
bnd
arpl
add
adc
cli
dec
fxch
cmpsl
mov
or
adcl
push
inc
paddsb
pop
iret
and
add
out
add
stos
bnd
mov
sbb
add
mov
sub
adc
mov
push
in
add
lods
js
mov
add
loopne
mov
add
add
add
arpl
jo
pushf
fistpl
scas
jbe
repz
adc
xchg
out
jge
cltd
jne
adc
fidivs
pop
adc
add
mov
xchg
push
add
add
add
dec
add
sti
add
sbb
sti
test
into
sub
add
add
mov
add
mov
add
add
pop
sbbl
add
cltd
fisubl
add
ljmp
add
and
insb
add
sub
cmp
mov
sbb
lea
lea
mov
xor
push
mov
mov
sbb
mov
loop
mov
push
mov
add
pushl
mov
aas
aad
inc
add
mov
xchg
mov
add
push
xor
mov
add
add
sub
add
imulb
add
cmp
sar
xor
fs
dec
add
lcall
add
add
add
add
jg
mov
add
fstpt
sti
test
cmp
rorb
mov
js
pusha
add
sub
lcall
xchg
js
daa
push
add
mov
mov
pop
jg
cmp
push
jge
int
push
cld
enter
add
fisubl
lea
add
mov
das
push
add
cmp
pushf
idivb
add
fstpt
xchg
add
sti
jns
adc
mov
mov
loope
pop
in
cmpb
add
or
testl
jmp
scas
xchg
shl
dec
add
mov
sahf
mov
pop
in
jb
mov
lods
cltd
or
inc
add
add
push
xor
pop
test
test
out
mov
lret
insl
popa
push
cmp
push
cmpsb
std
pop
and
sub
xchg
loope
rcrb
aam
add
sbb
adc
adc
xchg
push
add
je
and
bound
loopne
add
roll
sub
daa
mov
add
push
add
sbb
nop
mov
add
sbb
and
divl
fs
mov
inc
add
fldcw
mov
add
xchg
jp
cmp
add
add
sbb
mov
add
ficoml
xor
add
add
add
movsb
fimuls
notl
add
loope
lock
add
mov
les
aas
jl
jmp
add
sub
popl
dec
add
lahf
xor
add
push
add
add
gs
jecxz
add
mov
cmpsb
lods
and
sub
cmp
add
add
adc
add
mov
cmp
pop
cld
inc
add
iret
movsl
pop
jp
push
add
mov
adc
inc
add
or
add
mov
mov
vcvttsd2si
aam
in
mov
in
add
lcall
xchg
push
and
popa
or
jns
add
sbb
inc
add
add
add
sub
mov
push
push
cmc
jbe
fisubrs
add
test
mov
fimuls
add
add
add
dec
add
ja
int
add
insl
in
and
fldl
jno
insb
add
sbb
sbbl
sahf
icebp
imul
sub
sub
push
push
add
and
loope
loopne
add
sub
cmp
xchg
shlb
fcomps
and
xor
clc
dec
add
mov
xchg
or
adc
push
scas
sub
sbb
fidivl
add
sub
add
add
pop
add
add
mov
add
data16
add
sbb
xchg
push
add
jae
add
sbb
add
push
cmp
scas
mov
or
add
daa
nop
xor
fcom
ret
mov
push
pop
add
add
test
push
mov
add
int
fisttps
add
fidivrs
and
add
in
jne
popf
sbb
pusha
add
faddl
sub
jae
add
add
in
pop
in
push
add
fimuls
jne
add
jecxz
add
xor
enter
jne
roll
mov
add
push
add
fnstcw
add
insb
add
adc
push
mov
add
add
add
add
dec
jne
add
bound
dec
push
add
aad
inc
mov
xchg
jge
mov
sahf
ljmp
stc
add
pop
sbb
mov
mov
imulb
add
movsb
into
cltd
xlat
inc
add
add
inc
sub
add
mov
orb
jno
push
add
shl
mov
roll
xchg
aaa
sub
xchg
or
data16
adc
jbe
addr16
add
push
add
or
mov
add
add
pop
jp
xor
ljmp
and
add
pop
dec
scas
push
add
cmp
jae
hlt
xchg
jge
add
add
mov
mov
add
and
sbb
popl
out
cwtl
test
repz
clc
xchg
dec
add
inc
hlt
or
in
popf
test
xor
jnp
pop
lds
inc
out
incl
or
xchg
lea
incl
add
or
mov
ficoml
hlt
lret
add
add
adc
mov
add
push
add
lret
adc
lods
pusha
add
add
js
xor
cmp
mov
ret
or
push
dec
add
insb
add
xor
sbb
ret
push
in
add
insl
lock
sub
fstpl
push
sbbb
jl
stos
add
jns
ret
jg
cli
xchg
orl
cmc
lods
push
add
add
mov
jbe
stos
es
ficoms
int3
out
dec
add
lahf
xor
add
mov
add
add
cmp
jge
cmpsb
pop
add
add
push
push
add
add
add
inc
add
mov
jns
add
fadds
add
stos
ret
xchg
mov
leave
out
jns
repz
mov
add
mov
cmp
add
jae
test
leave
or
cwtl
dec
outsb
add
aas
js
adc
pop
loope
xchg
rcll
add
add
inc
add
inc
add
test
fstps
add
shlb
cwtl
add
add
add
out
add
sahf
insl
addr16
rolb
jg
sbb
mov
xchg
cmp
out
rol
mov
mov
push
add
lcall
add
subb
add
outsb
add
loopne
outsl
sbb
stos
popl
and
daa
enter
call
add
enter
ja
dec
aaa
sbb
outsb
add
dec
add
inc
test
add
and
aad
xchg
sarb
add
mov
dec
add
jns
add
add
add
push
add
add
mov
push
fildll
push
add
ljmp
jne
sub
xor
scas
add
fiadds
stos
mov
add
lds
fbld
pusha
add
cmpsb
addr16
hlt
or
mov
add
pop
pop
addr16
cmpsl
mov
iret
rol
push
pop
mov
imul
call
add
adcb
pop
jno
sahf
rcll
movsl
mov
iret
repnz
mov
lods
push
cwtl
dec
mov
add
mov
sarb
lret
or
dec
daa
test
add
pop
push
add
lea
jns
add
xchg
cli
pop
jbe
out
xor
mov
adc
add
fwait
les
lods
xor
dec
add
dec
test
ds
sub
enter
xor
pop
nop
call
mov
loope
cmp
lds
mov
mov
add
repnz
mov
cltd
push
add
sub
xchg
or
pop
add
xchg
imul
add
in
ficoml
xchg
leave
xor
add
and
data16
cmpsb
ret
xchg
in
sti
lods
xor
lret
xchg
xor
jne
sbb
xchg
add
jbe
push
add
and
jae
mov
mov
add
mov
or
stos
dec
add
xchg
push
add
mov
add
dec
pop
notl
add
inc
sub
mov
adc
add
mov
imul
stc
ds
psubw
add
test
and
ds
mov
int
rcl
sub
add
inc
test
inc
add
sbbl
add
add
cmp
mov
xchg
arpl
add
lock
add
aaa
pusha
add
push
add
icebp
sub
testl
add
ficompl
and
orb
sbb
push
add
lret
int
dec
add
adc
push
sub
adc
add
aad
add
cli
out
jmp
jno
add
lret
dec
or
push
popf
inc
enter
sahf
xor
and
xor
pop
push
inc
xor
pop
add
stc
pop
add
in
add
mov
or
add
pop
std
xlat
add
cwtl
jne
add
and
daa
rolb
add
loop
jle
lock
mov
es
mov
repz
add
mov
add
pop
add
sub
push
add
add
push
add
inc
add
add
movsb
lret
iret
add
or
jg
xor
add
mov
out
inc
add
or
stos
fisubrs
daa
pop
in
mov
add
lret
dec
sub
or
or
xor
and
call
mov
add
add
jb
adc
lret
lret
mov
add
add
pusha
add
jne
arpl
mov
dec
pop
add
inc
add
xchg
add
add
add
dec
add
negb
ja
add
cwtl
insb
add
add
ljmp
subb
mov
add
out
add
inc
push
orb
mov
xor
inc
add
xchg
dec
add
add
cmp
es
lock
xchg
mov
fdivrs
push
add
mov
mov
je
sub
mov
add
add
mov
xchg
std
sub
nop
xor
xchg
negb
add
mov
or
and
add
jg
add
add
xlat
imul
push
add
and
jnp
add
add
jne
fwait
sbb
adc
add
add
push
add
dec
fwait
or
and
jbe
or
mov
lcall
add
push
add
outsl
andl
movsl
pusha
add
xlat
popf
and
pop
stos
dec
add
add
inc
add
adc
mov
add
subb
fcoms
add
push
add
ret
and
push
add
shll
lods
xchg
sub
ja
push
add
call
add
add
sub
add
and
addr16
add
sbbb
push
std
xchg
xchg
test
lods
mov
ret
sahf
jnp
or
aaa
cmp
test
gs
loope
add
add
mov
add
inc
add
xchg
orb
sbb
cmp
xchg
aas
lds
add
cmpsl
add
scas
add
mov
js
stos
movsl
dec
add
add
or
inc
cli
cmpsb
cmpsb
cmp
mov
add
scas
mov
add
iret
outsl
fcoml
sbb
ret
rolb
adc
xlat
dec
cmpsl
ljmp
jns
arpl
add
add
fisttpll
add
out
out
mov
cmpsb
outsl
jmp
add
xor
enter
stos
std
pop
pop
sbb
pop
inc
xor
or
add
add
or
mov
pusha
add
sti
test
jmp
mov
add
add
leave
xor
mov
aad
and
and
push
add
call
add
add
jle
cmp
dec
add
mov
add
add
add
bound
ja
add
or
test
bound
xor
jg
sub
fisubs
adc
inc
add
lods
popa
mov
pop
add
jae
adc
add
out
in
mov
adc
add
shl
jne
pop
mov
pop
sbb
mov
add
lea
add
jno
outsl
test
jno
test
mov
sbb
test
nop
sbb
lcall
lea
add
sub
xchg
fwait
test
test
mov
je
repz
xor
imul
add
out
add
add
push
add
add
cmp
add
add
add
dec
dec
cmp
push
pop
add
lret
xchg
adc
add
push
inc
add
cmp
adc
and
add
repnz
dec
add
adc
mov
add
scas
mov
lea
add
movsb
mov
xor
rol
inc
xchg
outsb
add
sbb
daa
xlat
sub
cwtl
xor
rcll
add
movsb
pusha
add
xchg
in
sbb
lea
add
add
cwtl
outsl
lahf
jl
insl
imulb
loope
add
or
pop
add
sub
add
dec
pop
add
ret
fnsave
dec
add
add
add
add
or
psrld
add
mov
add
cmpsb
ficoml
aas
mul
pop
add
add
push
lret
fstp
cmpsl
cmp
call
cld
mov
pop
mov
add
xor
add
and
rcr
add
ficompl
add
add
sbb
add
popf
js
mov
add
add
mov
outsl
mulb
xchg
xor
sti
jecxz
pop
sub
sub
div
push
add
fisubrs
add
mov
add
add
mov
mov
ljmp
lcall
jne
add
add
adc
xor
push
add
shl
out
clc
add
adc
and
cmp
adc
push
add
cmp
mov
add
add
shlb
test
out
pop
jbe
lods
dec
lds
fdivl
xchg
add
pop
lret
mov
mov
mov
add
dec
and
push
add
sub
mov
adc
sbb
dec
dec
xlat
movsl
jbe
cmp
lods
pop
add
push
dec
add
jne
int3
enter
repnz
fiadds
pop
iret
inc
cwtl
jmp
dec
add
daa
rcl
daa
cmp
xor
sarl
sub
add
add
scas
xchg
stc
data16
cmp
push
jge
test
add
pop
push
shrl
add
fucomip
loope
add
add
cmp
add
sti
inc
add
mov
add
inc
jl
repnz
xchg
xchg
insb
add
daa
add
cld
sbb
pop
hlt
mov
cmp
sbb
leave
call
adcl
xchg
add
in
jl
push
movsb
mov
lcall
jge
mov
xchg
cmc
mov
xchg
arpl
add
xchg
sar
fisubrs
add
add
jmp
add
add
push
add
scas
dec
into
add
ja
add
in
sahf
mov
add
mov
imul
insb
add
add
xchg
imul
arpl
push
rcrb
push
add
jge
add
add
jecxz
add
add
mov
inc
enter
push
push
mov
mov
and
in
dec
add
mov
xor
add
jae
cltd
mov
cmpsb
imul
pop
sub
add
iret
fidivs
add
add
add
add
dec
mov
add
add
hlt
mov
lret
addb
xchg
mov
test
and
subb
repz
push
add
add
shlb
add
add
add
or
add
popa
xchg
sti
pop
add
outsb
add
jae
xchg
cltd
int3
fnsave
lret
sub
cli
insl
lahf
fsubr
repz
fisubl
inc
add
mov
loopne
call
inc
sbb
cmp
leave
and
add
push
add
sub
push
icebp
and
fildl
xchg
dec
add
xchg
stc
rclb
add
xchg
loope
mov
mov
mov
jo
stos
xorb
jnp
idivb
add
push
add
add
scas
dec
es
add
mov
xchg
frstor
pop
add
divl
push
mov
inc
jmp
mov
fisttpll
cs
jnp
add
mov
ret
pop
cld
mov
fadd
lcall
imul
cmp
cmp
xor
adc
imul
or
pop
add
lret
es
punpckldq
dec
add
add
or
jge
lods
cmc
faddl
add
testb
add
jnp
add
xchg
pmullw
test
add
add
stc
shlb
pop
add
rcrb
rcrb
xchg
inc
mov
dec
add
xor
lahf
icebp
jo
dec
lret
movsb
sbb
sbb
jp
ja
lea
add
imul
add
mov
or
mov
and
fists
add
lcall
insl
xor
add
add
sbb
add
cld
xchg
xchg
push
add
adc
add
inc
add
add
movsl
sbb
fldl
cltd
mov
xchg
inc
add
add
or
add
xor
les
inc
lods
fstps
add
pop
jns
dec
inc
insl
inc
icebp
pusha
add
sub
cld
jnp
fwait
add
push
add
sub
lret
bound
adc
setae
add
xor
insb
add
adc
loopne
and
push
add
je
xor
lcall
add
cmpsb
or
rcll
int3
sbb
jmp
add
adc
lret
popf
mov
imul
movsb
add
jmp
pop
add
jmp
aam
add
movsl
push
add
cmp
add
cmp
sub
fdivs
add
das
js
loopne
mov
mov
dec
fstps
lods
aad
test
adc
jae
add
jle
dec
xor
fsub
xchg
dec
add
jecxz
xlat
mov
stos
adc
clc
xor
mov
add
ret
push
add
add
sbb
icebp
jno
xchg
popa
fistpl
stos
daa
add
sbb
in
add
fistpl
add
jnp
add
add
push
out
adc
add
repz
movsb
je
mov
insb
add
pop
pop
dec
jo
nop
ja
add
mov
sti
pushf
and
imul
xor
push
add
add
add
ret
add
pop
add
aaa
ret
cmove
pop
dec
add
cmc
aaa
std
cmpsl
push
add
pop
add
adc
mov
mov
add
add
and
movsl
fildll
fsubrl
add
add
stos
jmp
mov
mov
outsb
add
xchg
add
outsl
xor
xor
in
mov
jae
add
sbb
cmc
jb
outsb
add
add
add
orl
jle
stc
xchg
outsb
add
add
imul
push
add
js
dec
add
mov
add
add
in
adc
mov
push
fadd
xchg
cmp
int
aas
mov
mov
push
add
pop
sub
mov
jle
loope
pop
add
hlt
cmpb
add
add
popf
addr16
add
xchg
dec
jg
shrl
mov
lcall
in
aas
xchg
sbb
scas
mov
scas
and
popa
add
fld
push
add
jmp
mov
daa
inc
add
mov
push
add
scas
lock
mov
xchg
subl
xor
ljmp
add
and
sbbb
add
push
add
and
subb
mov
and
add
cmp
neg
outsb
add
add
cmpsb
or
repnz
add
rorb
add
dec
in
add
xchg
inc
mov
dec
add
pslld
inc
int
push
add
out
cmp
mov
and
sbb
movl
pop
or
fucomi
cld
or
mov
inc
sub
in
sub
adc
add
sub
divb
add
adc
add
cs
cs
cli
stos
jno
loope
pop
imul
jp
sbb
and
scas
push
add
jge
xor
push
add
add
xlat
movsl
pushf
movsb
inc
push
add
pop
sbb
fbstp
add
inc
push
add
add
popf
add
rcl
data16
mov
jecxz
cmc
mov
hlt
cwtl
call
pop
add
mov
insb
add
add
push
jb
dec
add
test
pop
jl
addr16
mov
adc
dec
mov
mov
mov
aas
add
push
add
adc
sahf
inc
add
jno
scas
cld
gs
scas
lods
cmpsb
inc
orb
jno
loop
add
add
inc
pop
add
stos
in
cmc
aad
out
jo
mov
add
add
sbb
push
add
xchg
outsl
mov
mov
add
mov
dec
neg
sbb
js
xchg
test
test
add
mov
fimuls
push
xlat
arpl
loope
add
xor
dec
das
pusha
add
jge
add
add
out
mov
mov
add
stc
cmpl
dec
add
add
mov
adcb
pop
dec
add
pop
add
sti
sbb
sub
xchg
cmp
mov
xchg
mov
xchg
aam
mov
mov
add
andl
add
add
add
add
jl
arpl
pusha
add
add
fiadds
jge
and
add
cmpsb
pop
add
xchg
xchg
jl
mov
test
jns
mov
add
sbb
test
outsb
add
inc
mov
test
dec
scas
add
mov
mov
xchg
repz
add
jecxz
inc
in
mov
arpl
add
adc
add
add
dec
push
add
push
add
repz
mov
add
cmp
xchg
jg
inc
ret
mov
or
push
add
push
add
or
inc
add
scas
mov
fmull
mov
cmp
sbb
pop
add
jle
movups
add
jle
ret
dec
adc
push
sbb
mov
cmp
inc
shrb
in
test
fdivr
test
andl
add
mov
add
add
sbbl
dec
dec
add
add
jmp
adc
add
cmp
movsl
push
jp
pop
add
scas
adc
imul
sbb
xchg
add
jle
repz
sub
pop
inc
add
add
lahf
aam
add
xor
stos
xor
enter
add
shlb
add
ret
lcall
daa
mov
mov
and
popa
add
xchg
data16
fildll
add
add
push
add
adc
mov
or
push
xchg
jmp
add
bound
hlt
sub
add
mov
push
add
scas
xlat
cmp
cwtl
push
add
push
or
ss
pop
inc
or
js
jg
add
jo
nop
dec
lock
and
push
dec
add
cmp
add
sahf
push
add
imul
add
lock
mov
sti
mov
cmpsl
enter
adc
xchg
add
pushf
cmp
add
das
subb
test
lcall
shlb
mov
js
aad
xchg
pop
add
mov
outsb
add
add
jb
iret
mov
rcrb
std
icebp
imul
sub
aas
adc
testl
roll
add
jne
add
pushl
add
add
jle
loop
dec
int3
xchg
jne
mov
add
rolb
add
add
push
add
mov
mov
push
add
out
loope
shlb
add
add
add
sti
jbe
sub
lea
orb
lret
pop
xchg
inc
add
loopne
add
add
mov
scas
sbb
sub
fcomps
lret
push
pop
pop
jne
add
sub
in
int3
mov
add
sbb
dec
jae
sbb
mov
negl
xor
pop
add
out
lds
add
add
cmp
mull
outsl
je
jl
push
mov
pop
add
add
test
add
and
inc
add
add
fiaddl
add
das
xchg
bound
leave
xchg
mov
add
inc
adc
es
idiv
ret
push
add
cmp
sbb
push
add
xor
dec
add
mov
sub
add
push
iret
dec
add
mov
add
xor
or
jge
out
fidivrl
inc
dec
jmp
add
pop
add
inc
sub
inc
sbb
push
pushf
jle
je
aaa
test
add
add
add
jg
cmpsb
repnz
mov
inc
add
jb
jecxz
imul
lahf
sarb
inc
add
mov
adc
xor
sub
lcall
mov
stc
jnp
push
add
inc
add
mov
push
add
push
pop
push
mov
add
push
add
negl
cmpsl
pop
popf
cmc
mov
xor
stos
decb
inc
add
adc
inc
add
pop
cli
lret
mov
sbb
mov
jge
add
jmp
in
lock
cmp
mov
std
mov
sahf
add
push
scas
xchg
xor
pusha
add
stos
cmp
jge
xor
adc
sbb
and
add
or
adc
lcall
stos
sub
mov
adc
cmp
mov
add
out
add
mov
das
and
imul
push
add
adc
std
lret
shrb
scas
shl
mov
jae
add
sti
fcmove
faddp
jo
in
lret
fstpt
imul
push
mov
add
jo
mov
je
inc
add
add
aad
jg
das
push
add
iret
or
adc
cltd
jnp
or
mov
dec
add
fstpl
add
hlt
and
shll
add
outsb
add
dec
add
jl
jno
add
pop
subl
sub
pop
cmp
push
add
gs
stos
xchg
lds
add
xchg
sub
push
xor
sbb
jne
add
test
adc
addr16
add
dec
lock
dec
xlat
ret
ror
xor
sti
adc
mov
cld
lea
add
add
dec
add
add
negb
pop
push
fwait
data16
add
call
sti
int3
push
add
mov
or
insl
mov
add
lds
add
push
add
mov
add
insl
pushf
repnz
mov
lds
add
mov
fs
add
add
call
das
das
stos
jne
aam
add
inc
mov
arpl
pop
mov
out
adc
mov
add
in
rclb
mov
loop
adc
jae
cmp
aad
jge
add
pop
dec
mov
add
sar
cmp
xor
test
bound
popa
pop
dec
lret
or
or
test
jnp
fwait
xchg
out
stos
pop
add
add
mov
pop
imul
mov
pop
sbb
add
add
cmc
dec
add
cmpl
idivl
cmp
jno
or
and
rep
sbb
add
add
add
int3
lahf
cld
xor
add
xlat
shll
leave
dec
add
fnstenv
add
add
add
lds
xor
call
pop
lock
add
sbb
fscale
icebp
inc
pop
inc
add
add
fdiv
test
jb
out
leave
sti
xor
cld
js
cmp
add
mov
mov
add
icebp
testb
jle
dec
jl
pop
add
add
add
lahf
inc
add
nop
push
add
dec
stc
pop
dec
push
add
sti
sub
loop
dec
add
or
data16
sahf
shrb
fwait
test
int3
sbb
mov
or
mov
lret
add
jecxz
xchg
imul
lock
add
add
inc
xor
jne
rclb
out
ds
test
fst
jmp
scas
movsb
outsb
add
add
add
data16
outsl
push
cmp
add
dec
add
ficoms
sbb
adc
push
or
cmp
cld
xchg
into
mov
jmp
add
sub
subl
xor
std
dec
gs
adc
negb
xor
add
or
sub
cmp
mov
dec
add
add
loopne
add
dec
mov
sbb
daa
fimuls
lods
add
stos
ret
inc
add
je
mov
add
insl
xor
je
fimull
mov
jmp
lods
mov
add
jno
xchg
xor
mov
inc
nop
sbb
adc
sbb
push
and
jb
mov
add
mov
aam
add
add
add
decb
sub
xchg
dec
pop
nop
inc
xor
add
in
fdivrl
add
cmp
pop
jne
jno
mov
add
dec
add
je
bound
int3
mov
add
mov
mov
mov
push
iret
push
add
lcall
not
or
inc
orb
outsl
jae
inc
add
cwtl
inc
xchg
xor
push
inc
adc
filds
add
test
int3
ja
xor
jno
iret
mov
add
fnstcw
sbb
jbe
ficoms
xor
scas
mov
add
add
add
adc
adc
fsubp
addb
add
jmp
scas
xchg
je
sbbb
cmpsb
push
dec
xor
add
and
add
add
iret
jecxz
outsb
add
add
andl
jl
in
fstps
jbe
jl
pop
xor
mov
cwtl
roll
jne
add
inc
add
cltd
dec
adc
testb
push
mov
mov
mov
pop
add
add
pushf
test
int
dec
add
cwtl
mov
mov
add
mov
add
add
gs
add
int3
sbb
mov
add
int
out
xchg
inc
add
lcall
lahf
test
inc
add
cmp
pop
gs
cmp
in
js
mov
add
push
add
loopne
lret
pusha
add
test
daa
jp
dec
add
sub
out
add
jecxz
call
mov
xchg
dec
add
push
in
add
adc
fwait
sub
out
cmp
sub
sub
packuswb
in
add
add
add
pop
add
add
dec
scas
sbb
jmp
mov
out
test
ja
add
add
rorb
add
push
add
mov
fidivrs
in
outsb
add
mov
adc
sbb
roll
add
int3
and
push
add
jbe
xchg
sahf
jne
add
or
push
add
int
push
cmc
cmpsl
insb
add
adc
sbb
iret
fsubrs
mov
add
nop
sbb
lahf
clc
inc
add
mov
test
add
mov
hlt
iret
fucomp
add
pushl
add
xor
data16
mov
cmp
jb
test
mov
mov
push
mov
add
pop
add
add
pop
add
xor
dec
add
xchg
cmpsl
idivb
dec
add
dec
jmp
add
pop
push
add
jno
and
add
test
loope
aaa
mov
add
pop
sbb
movsl
in
add
lahf
xchg
aad
add
and
add
and
add
pop
lock
ja
push
add
cld
mov
inc
add
jg
and
lret
ljmp
add
dec
add
cmp
loope
add
add
lea
mov
sbb
pop
add
add
add
bound
inc
lahf
and
in
jne
cmp
add
mov
add
fnstenv
mov
xchg
fcomip
xchg
mov
and
sub
mov
pop
inc
or
stos
jge
negl
ret
jns
add
in
xchg
data16
add
jb
lea
xchg
in
add
negb
xor
add
cmpsl
pop
popf
cltd
push
add
add
lods
loopne
cmp
movsl
ss
pop
push
add
mov
icebp
jmp
add
add
add
and
add
add
xchg
inc
icebp
xor
jne
xchg
pop
add
pop
add
add
imul
add
add
addr16
pop
movsb
add
pop
add
loope
add
movb
add
add
lret
movl
adc
add
pop
add
add
xchg
outsb
add
cmc
js
inc
add
add
mov
repnz
icebp
shrl
loopne
enter
jb
dec
mov
and
mov
push
push
hlt
arpl
lcall
out
pushf
aaa
and
pop
add
adc
inc
add
les
int3
in
icebp
xchg
movsb
icebp
mov
mov
bound
and
sub
fimuls
fidivl
inc
add
add
sbb
imul
into
ds
mov
das
data16
scas
shrb
xor
adc
imul
lea
pop
sbb
add
sub
adc
arpl
xchg
jg
out
add
mov
pop
shll
mov
sbb
repnz
jl
lds
add
add
loop
fwait
pop
add
je
fimull
or
add
or
inc
mov
push
add
adc
jmp
mov
pop
add
add
lods
stc
xchg
or
enter
mov
popf
sbb
jg
cmp
jae
add
scas
pop
add
add
jae
add
add
in
out
or
xchg
dec
add
and
sub
sbb
xchg
pop
cmp
mov
in
scas
insb
add
xchg
rorl
cmpsb
push
add
add
add
ret
int
lcall
push
add
roll
mov
add
jbe
adc
add
add
and
mov
xor
add
stos
lds
fdivs
inc
arpl
jl
scas
cltd
push
add
add
in
add
popa
leave
cmp
loopne
xchg
add
pop
add
and
add
adc
call
jae
add
add
pop
lret
jecxz
push
add
add
push
add
cld
in
add
stos
mov
mov
inc
add
add
xor
cmp
scas
add
add
sub
add
add
add
aaa
push
add
pop
add
inc
icebp
push
jle
in
hlt
push
sbb
lcall
ficompl
mov
mov
push
push
add
xchg
rcrb
add
adc
and
add
mov
test
xchg
jg
loope
push
add
cmp
outsb
add
add
mov
cwtl
sub
sbb
or
add
pop
add
adc
dec
subb
out
mov
push
add
add
adc
cmpsl
jnp
and
push
insl
into
lahf
mov
jns
push
add
or
mov
leave
cmp
mov
sbb
cmp
lods
and
dec
add
mov
add
or
cmp
data16
xchg
dec
add
mov
add
add
sarb
xor
dec
add
fwait
sbb
dec
add
pop
add
jae
daa
roll
call
dec
ret
add
add
xchg
lret
xchg
stos
xchg
test
sbb
hlt
sti
and
popf
add
add
add
sbb
and
jbe
divl
add
sbb
mov
dec
push
add
shl
imul
add
push
rorb
mov
repz
lret
ss
movb
mov
popf
lahf
nop
into
xor
pop
add
sbb
jecxz
xchg
fwait
pushf
imul
out
add
mov
jg
add
add
jae
stos
out
xchg
leave
outsb
add
bound
inc
dec
inc
stos
ljmp
sbb
and
fiaddl
add
nop
pop
mov
das
mov
add
mov
add
xor
out
dec
add
pop
add
lahf
clc
or
clc
movsb
or
outsl
lahf
push
adc
or
push
add
add
rcl
pop
loopne
add
ficoms
add
dec
add
gs
add
jp
scas
mov
cmc
test
add
ja
dec
add
sbb
jne
mov
add
mov
push
add
pop
aam
add
stos
lret
repnz
add
call
add
sub
sahf
lcall
out
mov
lea
xchg
daa
cmp
add
and
js
arpl
push
add
add
add
mov
push
mov
add
fmull
lock
add
lret
bound
mov
std
in
gs
sbb
dec
add
and
add
mov
add
scas
aam
add
pushf
inc
shrl
add
popa
push
add
add
lods
mov
mov
scas
adc
push
add
add
add
scas
pop
mov
add
jl
jmp
add
shl
dec
add
add
xchg
add
int
shll
sbb
add
jbe
insl
jbe
outsl
mov
cmpb
dec
add
mov
sti
sbb
ror
repz
jb
in
andl
add
test
add
scas
subb
add
js
jae
mov
sub
or
push
mov
aad
add
pop
fnop
dec
add
xor
cmp
mov
xor
mov
lret
mov
je
scas
popa
out
jmp
jnp
jecxz
pop
push
add
add
lods
dec
cwtl
fdivs
cli
aam
xor
add
mov
xchg
add
dec
add
jbe
sub
cmc
add
add
add
pop
sub
and
add
or
add
cs
js
dec
aas
jmp
xchg
pushf
and
add
add
add
hlt
inc
add
idivl
filds
push
sbb
inc
ret
rolb
leave
inc
add
notl
imul
jge
add
jae
xchg
xorl
stc
std
mov
add
add
aad
add
or
arpl
mov
jnp
sub
inc
in
mov
out
movq
dec
jns
add
movsl
mov
sbbl
sub
leave
sahf
or
dec
loop
add
and
push
add
push
add
test
lea
mov
xchg
mov
add
xor
mov
or
add
add
and
dec
add
add
jge
sub
aam
outsl
mov
enter
add
les
mov
inc
add
pop
xor
ja
mov
cmp
add
jno
or
cmp
repnz
enter
add
mov
mov
pop
add
iret
js
aaa
jne
add
lahf
inc
add
inc
inc
add
aaa
xchg
cmpsb
mov
add
in
mov
jmp
inc
add
xlat
loop
lea
int
add
mov
cmp
xchg
mov
mov
add
xchg
xor
push
add
andl
cld
add
inc
add
pop
add
lods
lock
pop
add
into
fadds
add
rcll
adc
lahf
or
add
int3
adc
jle
jbe
bound
subl
add
push
cmp
data16
insl
add
sub
leave
and
cmp
adc
mov
mov
inc
add
add
add
cmpl
add
pop
add
push
add
or
xor
fisubrs
add
jp
jnp
nop
dec
data16
sbb
and
lea
add
mov
add
cvtpi2ps
inc
add
inc
add
sub
stos
xor
mov
add
clc
xor
mov
jae
dec
mov
dec
add
inc
add
jnp
add
into
sbb
add
xor
add
sbb
out
cmp
les
ss
xor
add
add
out
xchg
jecxz
add
in
imulb
push
add
mov
xchg
xchg
add
iret
and
inc
arpl
jbe
sub
sub
fcom
lret
in
in
ret
add
sbb
rcrl
nop
fsubrs
add
inc
add
sub
jg
les
jb
sar
mov
add
xchg
rcr
xchg
lods
add
sbb
shrb
dec
add
fstpt
pop
clc
das
rcr
adc
dec
sbbl
or
adc
adc
addb
ret
inc
add
and
inc
cld
inc
sbb
in
add
cmp
in
add
push
add
test
js
add
pop
adc
mov
jmp
ret
push
and
loopne
mov
add
mov
push
icebp
mov
add
scas
xchg
adc
gs
call
jmp
push
shll
sbb
lret
mov
insb
add
add
mov
dec
add
and
or
cmp
xlat
push
aas
and
dec
add
nop
mov
add
sub
rclb
fwait
adc
cmc
inc
fwait
add
xor
mov
or
aas
scas
lahf
arpl
add
add
je
dec
add
dec
add
mov
add
sbb
add
sub
mov
loopne
daa
mov
add
cmc
int3
std
lret
mov
xor
dec
add
add
mov
pop
mov
bswap
icebp
inc
add
adc
scas
cmp
leave
mulps
add
add
inc
add
scas
pop
add
xchg
movsb
xchg
push
jno
add
out
or
imul
add
call
add
add
ljmp
add
lret
add
jmp
lahf
push
add
les
add
aaa
pop
add
loop
aad
add
in
mov
inc
jnp
xor
add
adcb
sbb
adc
add
add
ret
add
add
push
add
loop
add
push
add
jp
leave
push
add
dec
imul
add
xor
orl
add
loopne
or
jmp
and
inc
add
add
jle
orb
add
mov
sbb
negb
or
mov
adc
push
add
adc
pushf
lret
subl
add
subl
mov
sbb
xchg
lret
and
xor
add
jne
mov
cmp
popf
lods
loope
lar
clc
shll
or
add
pop
popa
pop
mov
les
aaa
dec
add
or
xor
push
add
sbb
notb
pop
add
push
add
pop
add
or
insl
icebp
in
sarb
or
enter
xchg
mov
adc
dec
popf
ror
popf
das
sbb
jo
rcll
loopne
scas
add
fnstcw
stc
jo
pop
push
add
add
lds
jo
idivb
add
add
add
subl
enter
scas
popf
int3
sahf
and
xchg
inc
add
lds
cld
loope
pop
xor
dec
add
xlat
jmp
jmp
mov
adc
sub
add
out
inc
add
cmp
jle
stos
mov
xor
add
cmpsl
sub
pop
add
add
add
mov
add
xlat
add
cld
or
sarb
lods
faddl
cmp
aad
clc
shr
mov
outsl
xchg
rorl
ret
mov
loopne
add
push
into
mov
add
add
add
mov
cmpsb
jle
and
mov
add
add
in
jmp
cmpsl
xorb
cmp
add
je
sbb
mov
or
out
add
cmp
insl
mov
pop
jnp
mov
adc
push
loope
out
mov
inc
add
std
pusha
add
mov
add
outsl
jo
dec
add
add
rcrb
dec
js
jne
add
cmp
inc
imul
push
ret
shlb
push
add
jbe
lock
cmp
ret
xchg
push
mov
jmp
popf
sbb
inc
add
mov
xlat
dec
push
or
loope
outsb
add
sub
add
sbb
jnp
fdiv
add
add
pushf
pop
jle
and
aam
add
add
std
pop
lods
aas
fcomip
test
cld
adc
int3
getsec
add
cmp
ljmp
adc
xlat
add
pop
imul
push
or
ja
mov
add
add
adc
enter
jne
mov
cmpsb
push
add
or
scas
pop
xor
ret
jle
outsb
add
mov
out
and
das
xchg
inc
add
data16
fmull
add
add
dec
add
xchg
inc
add
add
sub
pop
add
je
pop
adc
mov
popf
dec
add
add
add
or
push
add
pop
inc
jle
mov
lea
lods
mov
insl
divl
notl
leave
fwait
scas
mov
mov
mov
add
bound
jns
add
add
xchg
adc
outsl
sbb
add
outsl
in
popf
mov
add
in
je
ljmp
sub
js
lcall
mov
lret
sub
stc
sbb
add
push
clc
aas
push
and
inc
add
pshufw
addr16
lret
push
add
bound
pop
adc
aad
push
add
add
outsb
add
pop
mov
mov
popf
jg
cmp
mov
shl
sbb
scas
fiadds
add
mov
add
cli
pop
push
add
enter
jbe
xchg
loope
and
faddl
cli
stos
cmpsl
repz
add
mov
adc
add
dec
push
repz
mov
pop
add
mov
add
shll
cmp
or
out
jno
lcall
or
std
lock
or
dec
sub
cmpsb
adc
add
inc
add
add
pop
add
hlt
loopne
sub
sbb
imul
inc
add
mov
cli
lcall
add
xorl
inc
add
xchg
mov
lea
bound
dec
stos
sbb
dec
loopne
add
add
sbb
pop
add
fstps
add
leave
mov
add
push
add
cmp
xor
insl
inc
in
cmp
or
aaa
or
xor
and
xchg
clc
clc
adc
sar
mull
ljmp
pusha
add
data16
cltd
adc
mov
mov
add
adc
cmc
leave
mov
loopne
dec
add
iret
mov
add
add
add
movb
pop
lahf
mov
mov
add
adc
data16
sub
leave
ficoml
add
add
lock
add
xor
push
add
sarb
push
add
test
add
mov
push
add
dec
add
fs
or
sub
js
lcall
jp
insb
add
dec
push
pop
add
std
add
je
mov
clc
add
mov
sahf
outsl
add
dec
and
rorl
and
mov
lret
jecxz
add
pop
sbb
roll
jbe
lds
xorb
add
add
pop
push
add
sbb
icebp
sub
inc
add
lea
inc
mov
ljmp
and
clc
orl
repz
add
add
inc
add
movb
in
pop
add
fisubrs
jp
inc
add
xor
iret
adc
add
add
or
push
xchg
in
leave
xor
jle
xchg
fisubs
xchg
test
inc
push
add
jbe
sub
mov
push
add
cmp
jp
mov
daa
mov
push
add
xorl
je
into
xchg
and
xor
fistps
int
push
add
sbb
pop
add
sbb
dec
aad
add
subl
hlt
aaa
jae
add
sub
xchg
xchg
or
das
jbe
jl
dec
hlt
fadd
sub
add
shll
push
add
ret
dec
jecxz
or
pop
jl
mov
add
and
ret
int3
push
lock
push
out
add
add
sahf
mov
mov
and
aaa
addr16
cmp
add
mov
adc
pop
iret
pop
add
inc
add
add
cmp
xchg
popa
rcll
insl
inc
add
sub
adc
aaa
adc
das
mov
push
add
adc
ret
add
add
aas
pushf
mov
imul
pop
mov
js
xor
cli
arpl
jmp
push
movsb
shlb
mov
fsubp
mov
test
add
popa
int3
add
lea
xchg
aam
in
jge
gs
out
aaa
sbb
das
lea
daa
add
inc
sub
add
add
or
mov
add
add
lods
sub
xor
arpl
stos
pop
sbb
and
popf
mov
mov
inc
aam
add
jecxz
and
popa
fucomp
mov
xor
mov
add
jns
mov
add
jb
xor
or
pop
mov
xchg
stos
jmp
add
jb
jae
add
mov
add
cwtl
loop
lcall
mov
lock
add
movsb
hlt
out
jnp
add
dec
add
inc
prefetch
add
sub
add
lea
lea
jge
mov
xlat
mov
sub
xor
pop
push
int
pop
or
xchg
xchg
out
adc
fiaddl
and
add
sbb
add
rcrb
nop
jo
push
add
jno
std
xor
cmp
or
mov
pop
add
and
sub
mov
mov
icebp
call
cmp
sbb
add
xchg
decb
or
or
jg
lahf
mov
pop
xchg
or
inc
stos
push
add
xor
in
or
ret
cmp
dec
add
or
lcall
add
das
lock
mov
test
outsl
mov
out
add
add
and
int3
sub
xchg
fildl
cmpl
sbbl
outsb
add
xchg
add
test
ffreep
jnp
add
shll
pop
inc
aad
out
je
or
jp
mov
add
outsb
add
and
mov
add
push
add
xchg
cmp
xor
insl
lods
mov
add
mov
repz
adc
rcl
jle
ljmp
add
add
loop
push
xchg
scas
int
add
bound
mov
adc
adc
xchg
shrb
add
add
je
mov
insb
add
cld
and
aad
fidivrl
out
add
dec
add
mov
arpl
push
out
arpl
mov
inc
daa
xchg
lods
lds
aas
adc
sti
and
inc
add
lret
pusha
add
add
add
lds
cmp
lcall
in
repnz
add
xchg
jae
addr16
gs
mov
add
adc
mov
push
add
repnz
and
sub
adc
faddl
add
pop
shl
jecxz
push
add
inc
add
pop
stc
cmp
cmp
ljmp
cmc
cmpsl
shlb
lods
sbb
cld
jne
popf
popa
out
mov
add
add
pop
xchg
xor
aaa
sbb
cwtl
mov
or
sti
inc
add
aaa
jbe
adc
sbb
bound
popa
jnp
jb
mov
pop
add
test
subb
sub
pop
add
add
pop
sub
divb
cmpsl
and
or
rorl
push
xor
dec
pshufw
sub
mov
add
push
add
loopne
add
dec
add
add
add
mov
push
add
data16
add
sbb
mov
inc
test
jb
xor
add
hlt
push
add
out
cmc
xchg
out
push
add
sbbb
jg
dec
add
add
add
mov
dec
pop
dec
add
mov
rolb
scas
inc
and
xchg
cmp
add
add
lods
dec
scas
pop
sub
add
or
ljmp
sbb
mov
add
add
cmp
sub
rcrb
iret
xchg
xor
fbld
out
sbb
orl
mov
xchg
and
sbb
or
pop
add
ljmp
push
das
pop
jnp
add
mul
lds
sub
fmull
inc
add
fmull
test
add
adc
aam
fistps
aam
push
add
add
add
and
jno
sbb
jmp
mov
mov
jo
cmp
adc
push
add
or
popl
add
mov
iret
aas
loope
outsb
add
cmp
jb
add
add
or
lret
add
sub
add
sub
add
insb
add
add
push
fildl
add
fwait
jbe
pop
mov
jecxz
add
xchg
and
jecxz
mov
loope
push
add
push
add
xchg
test
mov
adc
mov
jno
add
inc
xlat
and
mov
add
mov
inc
pop
add
xchg
test
add
test
pop
add
push
add
xchg
add
and
mov
sub
push
add
je
int3
ljmp
into
dec
and
push
outsl
adc
and
xor
jbe
adc
adc
lret
xchg
dec
rcr
or
ret
mov
add
aaa
adc
jge
add
add
jbe
addl
pop
jae
fsubl
or
das
cmpl
push
imul
mov
add
lods
cwtl
pop
int
dec
add
cltd
dec
imul
andl
fldl
les
jg
add
add
add
add
add
adc
inc
lret
fisttpll
stos
repz
add
leave
mov
fcompl
dec
push
jl
add
add
mov
add
mov
divb
rclb
lds
jmp
inc
mov
add
shrl
add
decb
add
add
or
push
add
adcl
mov
add
pop
push
scas
out
xor
iret
stos
dec
xchg
das
dec
add
jae
add
add
add
xchg
nop
fdivrs
lret
mov
add
jb
adc
popf
insl
insl
fstpt
add
push
add
sti
inc
adc
shlb
inc
add
daa
mov
push
jmp
enter
mov
mov
pop
cmp
ja
mov
push
mov
add
cmc
add
adc
stc
mov
jne
je
mov
testb
add
add
add
mov
notb
add
push
add
pop
add
add
push
push
add
sub
mov
or
xchg
mov
and
and
add
daa
pop
mov
ret
mov
add
adc
xchg
lcall
lods
inc
add
jecxz
add
add
aas
pop
sbb
mov
add
cmpl
jge
cli
loope
jae
out
jno
jmp
mov
add
push
add
add
addr16
hlt
add
add
and
cmp
shrb
int
decb
add
add
adc
jl
or
mov
sbb
add
pop
add
adc
pop
into
push
add
mov
add
push
mov
add
add
scas
push
add
roll
add
add
add
adc
fwait
mov
nop
test
add
add
add
or
add
fwait
jo
xor
xor
sub
jne
jno
add
mov
pop
xchg
cltd
jb
push
xor
aas
mov
fwait
bound
imul
add
ds
adc
add
pop
mov
xor
gs
inc
add
jo
lahf
movsb
jg
aam
pop
jp
add
mov
je
cmp
pusha
add
sbb
cmc
mov
or
lods
xor
pop
jecxz
xor
push
add
pop
or
add
sub
mov
xchg
mov
push
add
inc
add
inc
lea
mov
xchg
repz
cmp
fwait
jmp
mov
sbb
int3
jp
mov
popa
in
add
mov
add
mov
pusha
add
aad
cmp
jmp
in
test
fistl
out
add
xchg
add
sti
xchg
mov
cmpsl
add
add
add
add
out
add
xchg
popf
fbld
xor
enter
add
xor
jbe
jne
mov
pop
add
movsb
push
add
int
dec
aaa
jae
popf
cmp
mov
pop
add
xor
adc
repz
mov
mov
rol
insl
in
in
mov
add
out
ret
mov
aad
add
xchg
mov
mov
add
popf
stos
repz
add
xor
pop
adc
xchg
jne
in
imul
add
mov
add
add
add
mov
dec
out
mov
mov
add
xor
mov
fwait
repnz
sub
movsl
out
hlt
pop
dec
xor
sbb
sub
adc
mov
or
mov
sub
mov
leave
into
out
add
daa
fsubrs
aaa
shrb
mov
pop
add
rcrb
mov
mov
test
inc
add
call
cld
sahf
jge
add
sbb
mov
push
add
add
jle
cltd
mov
add
movsb
insl
or
test
xor
in
cmp
popa
jp
cmp
loopne
dec
add
outsl
cmpsb
mov
lods
pop
jp
adc
int
cmp
and
enter
les
ja
add
add
in
add
imul
rol
cwtl
jmp
faddl
add
xchg
enter
call
add
add
lahf
mov
xchg
xchg
les
add
jb
cmp
add
add
add
aad
hlt
repz
mov
sti
mov
mov
test
add
add
push
add
lret
jg
or
mov
mov
add
lea
lods
bound
das
and
repz
in
maskmovq
imull
xor
cmp
cmpsb
arpl
add
inc
dec
add
pop
add
jg
sub
dec
movsb
iret
lcall
aad
in
andb
xchg
jno
mov
out
mov
add
leave
add
push
add
add
clc
imul
push
add
add
add
std
movsb
sub
dec
dec
add
int
and
sub
inc
add
add
pop
dec
add
and
cld
idivl
adc
push
add
add
dec
aas
je
xlat
mov
ret
pop
add
add
pop
add
push
add
add
push
add
jae
mov
dec
add
add
stos
lods
stc
and
add
stc
rcrb
and
add
lret
ja
icebp
xor
in
incl
add
addl
pop
add
fidivrl
sbb
sub
sarb
lret
testb
push
mov
add
add
popa
imul
add
push
add
sbb
sub
add
xor
inc
sti
cmp
xchg
dec
fidivrs
mov
sarl
and
fisubrl
in
daa
and
xchg
aaa
jns
rol
and
add
xchg
cmpsb
out
xor
outsl
dec
mov
add
xchg
jns
add
lods
int3
sbb
xchg
sub
push
addr16
jp
dec
add
sub
xchg
in
add
add
lret
mov
shll
inc
cmp
dec
add
mov
icebp
test
add
add
mov
mov
and
xchg
out
adc
cmp
sub
pop
push
add
jb
faddl
std
inc
add
cmp
dec
add
insl
daa
pop
sti
scas
cmp
popf
mov
ljmp
leave
in
bound
popa
sbb
add
sbb
push
dec
jo
jb
inc
add
jb
jecxz
fwait
stc
xchg
push
add
mov
clc
leave
inc
add
leave
cmp
ret
and
jbe
sbb
cmpsl
std
xchg
je
lret
cmp
add
loop
add
arpl
push
sbb
js
pop
ljmp
pop
push
adc
imulb
add
icebp
cmp
fimuls
mov
add
mov
add
and
xchg
test
add
in
ret
test
mov
leave
jno
dec
out
mov
repz
jns
xor
sbb
jecxz
lods
jl
pusha
add
lods
aad
in
xchg
push
add
or
adc
pop
add
add
in
push
add
mov
and
ljmp
ss
gs
push
add
test
fidivs
add
xor
cld
movsb
inc
add
pop
add
pushf
add
or
pusha
add
xchg
adc
repnz
iret
jb
push
add
add
push
add
add
add
push
add
addb
movsb
mov
push
xor
sbb
sbb
pop
adc
iret
icebp
lods
dec
add
push
inc
or
xchg
out
lret
add
mov
xchg
mov
add
test
sbbb
add
jne
xor
out
fwait
push
mov
add
add
lahf
lds
mov
mov
dec
int3
repnz
add
add
xlat
aam
add
add
loope
sub
add
pop
and
pop
jbe
add
clc
pop
add
add
mov
add
cli
inc
add
add
add
out
ljmp
add
pop
cld
lods
in
nop
lods
lret
rorb
add
adc
add
jp
sub
aas
lret
nop
and
xchg
push
add
adc
in
nop
pop
mov
insl
add
add
add
int
jmp
or
dec
add
cmp
xor
mov
pop
add
xchg
jg
int
pushf
cltd
cmpsl
sti
scas
mov
dec
add
sbb
ljmp
add
mov
and
sub
ja
cld
mov
xchg
mov
add
arpl
lock
mov
add
adc
aad
add
mov
pop
shll
add
add
add
add
inc
xor
add
xchg
and
xor
sti
movsb
add
out
add
jge
nop
sahf
add
and
pop
jnp
in
add
fisubs
out
sbb
pop
jo
lds
xor
pushf
scas
cmp
les
add
stos
mov
into
ja
add
mov
sub
xor
mov
xor
cs
xchg
add
add
loop
mov
fcmovu
jge
or
cmpsl
lret
in
pop
add
add
and
cwtl
data16
dec
rclb
iret
inc
add
leave
inc
add
add
lahf
add
xchg
pop
hlt
test
cwtl
loope
sahf
sbb
repz
lods
inc
add
popf
adc
xor
push
adc
lea
les
add
xchg
push
add
movsl
pusha
add
xor
xchg
movsb
and
in
leave
xchg
and
add
lret
push
stc
stos
xchg
mov
repnz
jecxz
lcall
mov
add
aas
call
dec
das
xchg
and
push
movsl
imul
add
push
add
inc
adc
insl
mov
inc
add
loopne
lret
push
mov
add
negb
pop
jmp
add
add
int
add
or
test
push
add
pop
jp
clc
and
sti
sarl
cltd
push
add
sti
push
mov
jo
out
jb
inc
add
aas
cmp
xor
in
and
mov
jno
pop
add
sub
jo
cld
in
iret
js
sahf
cmp
push
arpl
sub
cli
mov
add
add
push
add
enter
xchg
inc
bound
inc
add
xchg
add
xchg
mov
test
and
into
pop
add
jle
stc
sub
hlt
sarb
add
add
sub
sahf
mov
daa
xor
out
enter
outsl
lods
movsb
fsubrl
add
std
rcll
scas
jl
and
jo
cmpsl
lret
add
scas
pop
add
daa
jmp
add
xchg
mov
nop
mov
in
mov
jb
jne
mov
imul
add
mov
add
add
cmpsl
jl
sbb
mov
pop
outsl
sahf
pushf
mov
push
add
push
add
pop
fstpt
add
add
sti
mov
add
add
ljmp
cwtl
add
push
push
add
jns
icebp
loop
add
add
mov
int
sbb
dec
xlat
imul
xchg
lret
add
or
mov
ljmp
add
test
add
adc
test
add
add
insb
add
mov
pop
dec
inc
add
add
adcl
out
pop
jns
dec
add
push
add
shlb
add
inc
add
push
add
mov
pop
loope
cmp
mov
movsb
mov
add
add
pop
fcoms
fstps
add
add
jecxz
inc
add
add
cmp
mov
cmp
popa
fdivs
add
add
add
mov
mov
add
cmpsb
enter
add
xor
mov
ds
or
into
aam
add
pop
add
scas
add
pushf
adc
bound
pop
add
add
mov
add
adc
add
sub
cmp
add
xchg
push
gs
add
add
mov
add
add
and
test
adc
jbe
mov
mov
je
movsl
dec
sbbl
add
bound
dec
add
clc
push
add
pop
add
pop
cmpsb
lcall
mov
add
inc
add
add
or
mov
lea
xor
ss
dec
add
add
jmp
stc
into
fldenv
into
and
cmp
sub
add
add
add
add
mov
add
js
jmp
fcmove
push
add
les
or
jecxz
mov
cmpsb
dec
add
rcrb
mov
add
nop
and
push
add
add
push
add
outsb
add
mov
mov
jo
mov
stos
pop
mov
add
jnp
sbb
mov
cmp
push
add
sbb
xchg
pop
add
push
add
jle
push
add
add
and
xchg
add
add
scas
push
or
pop
cmp
xor
mov
add
adc
add
add
mov
add
add
adc
sub
mov
and
stos
in
scas
jle
jp
xchg
cmpsb
je
adc
xor
mov
iret
ss
lahf
dec
mov
add
add
sub
xor
or
imul
repz
adc
pushf
int3
push
inc
int3
test
xchg
lcall
mov
enter
add
popa
cwtl
cmp
ljmp
mov
pusha
add
jmp
repnz
jnp
xor
mov
add
pop
cli
cmp
pushf
push
add
add
push
cltd
or
push
sub
xchg
jmp
jle
push
popa
and
and
jge
sub
or
add
add
in
fldcw
int3
jb
popf
mov
inc
add
into
jecxz
cld
ffree
jno
mov
aas
pop
cli
or
leave
mov
mov
inc
xchg
mov
push
add
mov
xchg
jge
jbe
or
loop
add
jne
loop
clc
adc
int3
mov
mov
cmpsl
out
imul
fcompl
add
push
add
mov
cmp
rolb
fidivrl
mov
cltd
nop
jo
mov
add
shll
in
popf
aas
sti
scas
test
jns
add
fwait
lcall
add
pushf
mov
push
add
mov
sub
add
jo
sahf
jl
cmp
in
push
add
jge
add
add
jb
jno
mov
add
cmp
pop
add
push
pop
add
icebp
xor
aas
sbb
add
sti
pop
mov
addb
add
dec
add
add
insb
add
jge
add
in
mov
add
sbb
cmp
cmp
test
arpl
jae
mov
sbb
add
add
add
add
int
das
movb
stos
add
add
mov
push
stos
repz
rorb
test
js
pop
dec
shrl
popa
mov
sbb
scas
test
add
add
aam
cmp
das
fimull
add
push
sbb
nop
mov
ljmp
shll
cmp
add
add
add
fstpl
adc
inc
cwtl
jecxz
xchg
repz
sub
stc
or
xlat
jnp
pop
add
call
in
in
add
mov
aam
insb
add
or
add
add
add
add
inc
or
fidivrl
bound
cmpsb
in
add
shlb
popl
add
mov
call
sub
aad
xchg
xchg
movsl
xchg
or
cmp
scas
or
daa
inc
mov
add
inc
mov
cmp
push
add
xchg
pop
add
add
add
imul
sub
std
aaa
pop
add
ficompl
lds
add
add
cmp
add
mov
addr16
fiadds
popf
add
jmp
xchg
add
push
add
lcall
add
add
cmc
or
jg
dec
add
imul
add
add
imul
jno
pop
add
test
sub
add
add
int3
or
dec
add
sbb
shr
add
lds
and
push
inc
fiaddl
es
repz
in
or
push
enter
dec
add
cmc
test
lods
sbb
lods
sbb
xchg
flds
in
add
shlb
mov
add
in
sahf
popf
adc
dec
dec
add
jecxz
mov
add
imul
push
add
add
adc
adc
xor
or
test
loope
add
jp
leave
stos
in
fmul
jb
jmp
and
loope
leave
jl
lcall
sbb
dec
add
xor
jg
lcall
lods
dec
inc
add
mov
add
fisttpl
adc
roll
push
add
add
mov
cmp
add
add
ja
mov
insl
mov
add
ret
movsl
iret
add
sahf
subl
bound
call
enter
pop
out
cmc
sub
ret
and
aaa
ja
add
popf
and
test
iret
or
pushf
sub
push
and
ret
inc
add
jmp
add
sub
outsb
add
test
xor
imul
ret
pop
add
ja
loopne
fwait
cli
in
and
bound
popa
xchg
mov
insb
add
or
mov
mov
add
cmp
add
inc
add
sub
mov
push
push
add
int3
sti
inc
add
dec
adc
mov
imul
add
cld
mov
das
int
clc
ljmp
mov
jbe
call
cwtl
inc
add
ror
cwtl
aas
fmull
scas
addl
add
add
add
stc
push
add
cmpsb
lcall
xor
adc
mov
add
lds
xor
jo
cmp
call
and
subl
dec
add
push
add
shll
fbld
lcall
add
push
cmpsl
or
in
hlt
cli
push
cmpsl
push
pop
popf
sub
mov
add
dec
add
ret
add
cld
fisubrl
mov
cmp
pop
sub
add
add
cmpsl
cltd
mov
repnz
add
std
adc
cmpsb
push
jg
mov
mov
pop
and
mov
sub
add
mov
test
push
add
into
in
add
dec
fwait
jmp
pop
rcrl
cmp
cmp
inc
add
xchg
outsl
sbb
sahf
adc
into
sub
xchg
loop
add
dec
jmp
dec
mov
add
inc
add
fdivs
add
xchg
hlt
ljmp
aaa
pop
add
cmp
dec
add
loopne
subl
jl
adc
stos
sub
or
push
add
sbb
test
jae
xchg
add
xchg
add
add
push
add
outsl
movb
xchg
cli
xchg
push
add
js
mov
lds
lea
insl
cmp
inc
add
add
mov
or
or
fistpll
cmp
add
lea
out
popa
mov
add
or
fs
xor
add
dec
mov
lcall
add
iret
fwait
shrb
jg
add
jae
pop
push
add
xchg
test
push
add
stos
lock
jmp
dec
add
and
aas
neg
jo
pop
sarl
enter
cmp
out
add
mov
out
add
add
add
inc
add
cmc
xor
add
in
aad
insl
pop
jl
adc
push
add
shl
add
inc
add
add
mov
xchg
ret
daa
enter
add
sbbl
cwtl
dec
inc
cmp
cmp
inc
add
add
add
add
addr16
add
pop
add
shrb
jg
add
mov
inc
add
fstl
add
lock
ljmp
popa
pop
in
cwtl
cmp
add
ss
jg
in
in
inc
or
std
add
fdivrs
stos
sarl
lahf
fmull
push
mov
mov
cmp
out
out
leave
sub
jecxz
mov
out
insl
adc
add
mov
cmpsb
mov
ss
pop
inc
out
xchg
add
add
sbb
cmp
js
hlt
jl
push
push
add
add
add
add
mov
sub
add
lods
jmp
add
pushf
insb
add
sbb
or
add
insl
sub
icebp
pop
add
or
sbb
je
add
stos
pop
add
add
fstpl
icebp
sub
add
shrb
test
add
pushl
xor
add
mov
test
add
pop
add
xchg
or
or
aad
jb
lods
dec
add
add
in
add
das
jecxz
add
sahf
in
scas
jl
loopne
add
pop
cmpsl
pop
aad
dec
add
sub
xchg
inc
in
cmp
push
pop
add
lea
add
add
mov
xorl
ds
lods
ja
jg
add
add
fmuls
shll
xorb
je
incb
dec
pop
add
imul
xchg
or
ja
dec
lcall
add
repnz
add
sub
add
add
insl
sti
sarl
xlat
cltd
sub
cmc
add
push
add
add
in
sbb
mov
mov
movsl
pop
add
add
mov
out
out
and
mov
push
mov
push
dec
int
hlt
cmp
add
dec
lods
clc
or
pop
add
add
outsb
add
pusha
add
in
test
add
push
add
in
xlat
inc
add
shlb
data16
add
ret
data16
mov
add
xchg
data16
push
lock
ret
sub
leave
cmc
dec
add
add
xchg
mov
add
lock
jno
dec
add
jb
sbb
xor
pop
add
xchg
paddsw
stos
adc
or
shlb
push
outsb
add
repz
mov
dec
add
lret
js
je
mov
bound
mov
mov
add
add
push
ret
mov
cmpsl
dec
add
roll
mov
add
outsb
add
movsl
mov
sbb
hlt
adc
jo
sbb
adc
jp
dec
add
je
adc
lods
fnstcw
add
pop
add
push
add
add
add
out
add
add
pop
add
add
push
add
add
jbe
cmc
pop
add
mov
pop
jl
stos
rcr
lret
jp
jmp
loope
adc
jae
in
mov
add
cmp
mov
add
repnz
xchg
fisttpl
scas
into
or
xchg
mov
or
das
or
bound
lahf
add
jle
sarb
mov
mov
ret
add
aaa
pop
add
dec
add
out
push
inc
add
xchg
aam
outsl
rclb
add
add
jp
dec
in
int
push
add
xchg
aaa
inc
add
loope
add
add
push
in
xchg
push
outsb
add
js
add
add
and
icebp
jne
jmp
add
add
cltd
gs
cmc
sarb
inc
xor
in
lret
ljmp
insl
mov
lcall
xchg
lahf
xchg
movsl
clc
inc
dec
loop
inc
jno
sbb
test
cmpsb
push
pushf
xchg
in
mov
pop
std
xchg
inc
and
sar
push
addr16
xor
xchg
add
push
test
ljmp
xchg
sahf
fisubrl
lret
mov
imul
add
sub
add
and
ret
inc
jle
call
aam
stos
sbb
add
add
add
add
repz
mov
add
add
sub
stc
mov
inc
add
lods
out
aas
mov
out
or
add
add
fsubl
sbb
fbstp
add
xor
js
and
dec
adc
add
xor
test
mov
loopne
add
out
add
scas
rcrb
leave
add
and
pop
or
add
mov
add
add
pop
scas
jmp
add
divb
je
xor
add
add
add
pop
ljmp
add
add
dec
pushf
lds
inc
push
mov
sub
stos
xchg
dec
add
mov
adc
push
add
clc
mov
sbb
add
or
sbb
mov
sbbl
sbb
xor
add
out
add
or
add
sbb
add
mov
add
int3
mov
aad
push
add
add
add
add
add
and
push
add
inc
push
add
add
mov
add
dec
sbb
add
in
mov
int
add
cmc
mov
fcompl
cmp
mov
fldln2
add
add
insl
mov
pop
jle
push
add
add
add
add
add
je
adc
scas
fildll
popa
pusha
add
xor
jg
add
arpl
rol
xor
dec
add
xchg
mov
add
clc
lods
mov
stc
lret
jge
test
sbb
lds
sbb
sbb
pop
sub
enter
sbb
jb
xchg
aas
add
pop
pop
loope
loope
cmpsl
mov
ss
cltd
cmp
fists
int3
lahf
imul
or
push
add
add
xchg
add
lea
dec
lret
inc
sti
pushf
jnp
imul
add
dec
add
add
icebp
pop
stos
test
inc
ja
cs
cmpsb
cwtl
fmull
pop
add
mov
cwtl
into
dec
mov
scas
das
gs
add
add
icebp
inc
add
out
sahf
ljmp
mov
sbb
dec
add
lret
negb
mov
push
add
add
or
push
add
repz
and
dec
add
popf
jmp
add
jae
ret
push
mov
aam
test
jmp
mov
mov
jnp
mov
add
add
xor
mov
mov
arpl
test
fnstenv
add
fisubs
dec
add
add
imul
add
test
add
xor
adc
fisttpl
adc
xor
repnz
inc
inc
add
mov
rcll
push
add
add
inc
add
pop
js
or
xor
add
sahf
jne
aas
ret
add
dec
dec
add
xor
jb
movsl
stc
dec
add
adc
sub
add
mov
sahf
or
ret
add
repnz
repnz
jmp
add
fmuls
xor
dec
mov
add
add
mov
mov
add
adcl
aam
ss
adc
xchg
cmpsl
inc
lock
cwtl
stos
mov
mov
add
lahf
inc
sub
xchg
cmc
xchg
sti
repz
xchg
arpl
fmuls
mov
mov
lret
add
push
add
xor
xchg
mov
aam
add
add
sub
push
and
push
add
repnz
pop
add
cmp
add
sub
divb
add
mov
imul
add
add
push
and
pop
rcrl
add
shl
out
cmp
enter
movsb
jl
inc
inc
add
add
xchg
cwtl
in
pop
add
mov
xchg
mov
or
xchg
cmp
add
jnp
add
adc
jbe
lahf
push
add
cmp
jne
sub
sub
roll
iret
in
jg
sbb
pop
lret
xor
jnp
test
repz
dec
sbb
pusha
add
add
and
lret
stos
stc
pop
pop
jge
imul
and
sub
lcall
mov
add
mov
mov
mov
scas
int3
xorl
ror
push
add
and
add
add
xor
push
add
pusha
add
mov
cmpsb
adc
in
dec
add
add
int3
and
addr16
add
xchg
push
add
sub
add
mov
enter
add
jns
add
sub
shlb
jg
add
fadds
iret
je
shrb
add
pop
add
lods
xchg
sbb
in
xor
adc
xchg
and
or
sahf
fiadds
mov
ljmp
ret
add
add
insb
add
cmp
and
xchg
add
adc
or
jo
pop
add
imul
sub
add
add
add
movsl
movsl
push
add
add
add
pop
add
add
in
test
push
aaa
sti
outsb
add
xchg
mov
mov
leave
aam
add
add
push
add
addb
push
add
cltd
jne
xchg
jmp
adc
sbb
outsb
add
add
inc
scas
lret
mov
add
add
adc
and
sub
mov
fnstenv
mov
add
add
sahf
xor
testb
movsl
or
mov
dec
lret
out
add
outsb
add
add
nop
add
adc
push
add
hlt
cmpsb
test
jg
test
add
jno
jmp
hlt
dec
jae
add
push
add
nop
aam
jo
inc
add
add
add
std
mov
lret
call
out
add
fxch
jmp
adc
xor
jge
daa
fwait
mov
sahf
add
inc
add
add
pop
add
faddp
add
rolb
add
add
or
jg
xor
and
shrb
stos
pop
add
jl
std
and
add
add
lret
movsb
ret
movsl
mov
add
cmp
push
add
xorl
push
add
aaa
fwait
mov
add
std
leave
js
dec
add
add
jne
fnstcw
jne
add
cld
xchg
cld
mov
gs
add
sbb
sub
add
mov
add
mov
out
sub
mov
xchg
inc
add
jo
jo
mov
cmp
test
adc
lahf
js
mov
ljmp
imul
sbb
add
jae
add
les
add
adcl
add
pop
add
or
repnz
xorb
out
xchg
test
lea
add
add
js
xor
stos
test
add
movsl
lods
dec
pushf
or
lock
jb
add
in
pop
add
jmp
stc
ret
ja
and
imul
add
add
push
icebp
add
add
xor
loope
mov
add
inc
dec
cwtl
push
sub
mov
add
adc
insb
add
shll
or
int3
sbb
pusha
add
mov
adc
jg
aas
push
out
mull
add
sti
pop
inc
add
rcl
dec
add
shlb
lea
lods
add
dec
stos
push
add
push
add
aas
fbstp
xchg
mov
imul
pop
add
xor
xchg
repz
add
add
xchg
mov
add
jae
in
push
sti
je
cmp
xor
scas
stc
sbb
loop
sub
jmp
addr16
adc
inc
mov
ja
add
pop
add
mov
loop
sbb
jge
icebp
and
add
mov
add
xor
add
inc
frstor
int
xchg
add
add
inc
or
inc
add
add
incl
mov
add
nop
mov
mov
mov
adcl
add
adc
add
add
out
ret
add
add
mov
mov
pop
dec
add
xchg
xorb
add
roll
jmp
add
dec
add
imul
jns
add
xchg
cmc
ficoms
js
loope
add
add
outsb
add
add
sbb
pop
add
loop
loope
add
mov
mov
rcll
pop
add
or
and
fadd
iret
cmp
imul
js
shll
sub
add
cmp
push
add
dec
push
add
mov
pushf
in
pushf
mov
add
sub
adc
mov
mov
repnz
sbb
inc
jle
sbb
cld
mov
push
mov
push
ja
mov
cmp
cwtl
subb
sub
pop
test
es
mov
mov
add
pop
add
add
cmp
inc
cmp
adc
or
jnp
add
add
bound
add
inc
in
mov
sub
mov
xorl
jo
lods
add
fstpl
add
in
dec
add
lcall
pop
adc
cli
int3
jmp
xchg
sub
add
mov
jmp
sar
sub
cmp
xchg
dec
mov
inc
add
pushf
imul
add
add
cmp
sub
dec
mov
add
test
stos
sarb
scas
cmp
add
add
add
sar
inc
add
xorb
shll
add
fdivs
fstpt
or
cwtl
dec
add
stos
imul
or
js
mov
add
outsl
addr16
add
pop
pop
mov
popa
pop
scas
arpl
stos
adc
inc
add
out
mov
mov
push
add
daa
pusha
add
lea
add
mov
sbb
int3
inc
add
andb
mov
cltd
add
mov
mov
insb
add
mov
or
add
mov
in
xorl
enter
add
mov
ret
sar
mov
xchg
xchg
mov
out
xchg
into
push
push
add
clc
nop
test
cmp
sub
push
add
add
pop
imul
pop
add
jl
jge
mov
cld
xchg
cmpb
add
jg
movsl
ret
sub
sub
jbe
adc
mov
pusha
add
add
fwait
xlat
rcl
addr16
add
neg
xor
cwtl
and
cmp
repnz
jl
enter
inc
add
add
push
add
add
mov
xchg
or
out
mov
jno
aad
add
push
add
mov
and
mov
aam
adc
dec
add
push
add
add
or
out
gs
sub
out
sbb
lock
push
add
xchg
fstps
dec
mov
dec
adc
inc
mov
icebp
lock
int
pop
or
sub
add
add
pop
pop
pop
ret
nop
cvtdq2ps
lea
xchg
dec
cs
or
cmpsb
pop
or
dec
add
test
movsl
mov
xor
jl
sbb
add
dec
add
iret
push
xchg
int
cmp
or
add
add
xor
ds
dec
add
mov
inc
lds
add
cmp
jmp
add
gs
mov
add
jnp
add
add
add
insl
fsts
cmpl
rcl
mov
add
je
mov
push
xchg
sub
int
dec
add
add
add
lods
or
add
je
dec
dec
add
fcmovnbe
cmp
and
gs
in
or
sub
in
loop
mov
rcll
mov
xchg
out
add
mov
sbb
xor
in
out
jg
add
add
add
xor
dec
sbb
pop
add
add
inc
push
add
addr16
push
xor
pop
xlat
daa
xchg
dec
lock
int
cltd
adc
add
stc
loopne
cmpsl
dec
or
mov
adc
add
lret
jmp
jle
scas
cmc
imul
inc
jmp
pop
pop
xor
xchg
mov
int
fdivs
aam
push
call
jne
inc
add
lahf
test
add
cmp
das
sub
aas
push
push
adc
xchg
jne
test
mov
fidivrs
cmp
xchg
or
fdivs
push
add
fidivs
push
add
loope
pop
cmp
js
pop
add
pop
add
pop
add
add
shll
add
jae
and
and
sahf
sbb
add
je
lahf
dec
add
dec
add
pushl
add
test
test
add
fdivs
add
fldcw
repnz
add
mov
cld
incb
jl
aaa
mov
mov
add
inc
add
and
adcb
sbb
lcall
out
or
add
pop
sahf
js
xor
add
or
add
push
pop
mov
repz
in
imul
push
push
jns
add
data16
ss
pop
lahf
jmp
add
fcmove
lock
stc
xchg
and
out
or
xchg
sahf
addl
add
add
and
fbstp
add
cmp
cld
xchg
add
rolb
add
add
gs
add
jle
inc
push
add
mov
pop
add
das
outsl
mov
add
and
cld
cmp
sti
arpl
add
mov
cli
xchg
imul
jno
stc
xor
in
gs
mov
xchg
add
repnz
pop
or
add
ret
lret
mov
lock
jbe
js
push
or
int
add
in
insb
add
ds
jecxz
ror
nop
inc
add
std
divl
add
mov
add
lcall
adc
inc
jb
push
add
std
sub
add
jno
fidivs
pop
add
lods
or
xor
inc
mov
xlat
stos
push
jbe
jl
mov
add
pop
bound
mov
jg
and
add
add
add
test
dec
and
fists
cmp
clc
stc
movl
mov
push
add
pop
add
ret
add
inc
fildll
lahf
in
and
push
and
push
add
add
push
add
add
add
cltd
xchg
test
or
mov
cmp
jno
add
add
xchg
jg
add
cmpsl
cmpsl
ret
cmpsb
out
lods
jns
lret
sub
js
adc
loop
jne
fmull
pop
mov
add
dec
orb
shr
into
lret
lea
jns
add
push
mov
add
mov
inc
add
add
add
mov
add
add
add
and
mov
mov
add
mov
vunpcklps
sti
dec
add
in
ljmp
jae
pop
ljmp
add
leave
xchg
inc
adc
das
mov
sahf
dec
in
into
push
add
loope
or
test
add
lret
rcrb
add
xchg
mov
and
push
and
push
lret
aam
add
testb
imul
fcmovne
xchg
icebp
dec
inc
int
add
mov
pop
shll
ret
movsb
pop
das
mov
pop
add
add
insb
add
add
out
add
cmp
int3
mov
std
nopl
mov
stc
push
loopne
outsl
push
add
or
mov
add
jge
mov
xchg
pusha
add
and
outsl
aaa
inc
add
xsha1
cmpsb
mov
push
add
fstpl
add
add
and
test
in
add
mov
add
sbb
xor
scas
push
jl
pop
ficompl
add
aad
dec
or
pop
add
xchg
ljmp
dec
push
es
jne
ljmp
cltd
cmc
add
in
pop
add
loopne
add
lds
aad
daa
xlat
fcompl
sbb
sbb
adc
cmpsl
pop
add
add
sarb
add
sbb
sbb
data16
adc
je
dec
mov
add
add
xor
pop
add
lds
add
pop
jns
cli
lret
xchg
push
add
mov
fstl
fiadds
aas
shll
xchg
loopne
sub
jmp
dec
add
pusha
add
inc
add
add
and
sub
stos
test
xchg
inc
xchg
pop
lret
insl
mov
mov
push
add
std
mov
or
out
shrl
add
add
add
xlat
sbb
fisttpll
icebp
fstl
mov
mov
add
insb
add
clc
call
mov
fistpll
das
popf
mov
pop
add
ja
nop
call
popf
ficompl
cs
cmp
fidivrs
fnstcw
clc
int3
cmp
dec
std
add
cmp
mov
incl
das
data16
sub
jge
add
inc
add
sub
cli
hlt
inc
lds
inc
add
push
add
popf
mov
imul
mov
aad
mov
int
scas
sahf
cmp
into
lcall
movsl
push
pop
and
dec
cmpsl
xchg
and
add
or
popf
sub
mov
cwtl
popf
rcrl
data16
add
add
leave
shrb
add
pop
cmp
leave
arpl
add
movl
add
jl
pop
mov
xor
popa
xchg
add
push
add
xor
and
add
add
sbb
xchg
dec
add
push
add
loopne
rep
xor
jmp
add
adc
add
add
pop
xor
add
mov
test
mov
add
into
inc
add
xchg
jg
pop
add
jp
cli
lret
cmp
in
xor
push
sub
jo
lahf
mov
shlb
and
add
sbb
pop
cld
mov
rcr
or
push
add
add
push
mov
cmpsl
das
out
pushf
dec
add
add
imul
add
xchg
inc
xchg
or
add
add
shll
imul
add
adc
pop
push
xor
das
scas
fwait
and
pop
add
cmc
sbb
cwtl
loopne
push
add
sub
push
add
add
add
pop
add
add
or
pushf
mov
pop
add
arpl
jo
gs
repnz
add
xor
xchg
mov
push
add
dec
movhps
add
add
pushf
in
add
jbe
sbb
mov
add
add
push
out
mov
jo
pop
add
add
dec
add
sub
cli
fisubrs
add
add
pop
repnz
fcompl
add
add
addl
sub
add
incl
add
push
cmc
enter
adc
push
add
pop
sub
add
pop
add
add
or
mov
mov
aam
mov
add
js
and
add
xchg
int
test
and
dec
add
push
add
xlat
aaa
lock
xchg
pushf
mov
push
pop
cltd
xchg
movsl
lock
add
inc
add
adc
jnp
lret
add
loopne
pushf
scas
xor
mov
jg
test
cmpl
scas
adc
out
cmpsl
push
add
adc
mov
aaa
jns
addl
cli
xorb
add
mov
shl
mov
gs
pop
cs
loopne
add
loope
dec
add
sub
jne
adc
dec
jl
aam
add
loope
mov
xor
add
sub
jo
mov
inc
dec
add
orl
jl
out
add
mov
fcoml
icebp
cmp
jne
dec
add
jl
adc
cmpb
xor
inc
add
jg
cmpsl
xor
fldt
add
add
inc
add
add
add
clc
pop
test
xchg
or
dec
outsl
repnz
mov
rolb
std
ud1
add
or
mov
add
rolb
in
xor
add
add
add
jmp
cmp
add
imul
aam
add
mov
outsb
add
aam
pusha
add
pusha
add
lret
out
add
lds
jp
or
bound
add
mov
sbb
adc
pop
dec
mov
add
inc
add
mov
add
add
add
scas
xor
stos
cmpsb
pop
scas
cltd
lods
cmc
repnz
add
xor
mov
mov
sub
les
cmp
mov
add
add
push
add
cld
cmp
add
xchg
pusha
add
add
pop
inc
repz
fimuls
int
adc
jo
push
mov
mov
add
add
add
adc
add
add
jg
dec
pop
add
bound
jmp
mov
adc
dec
add
xchg
xor
mov
cwtl
jg
ret
mov
add
add
fistl
int3
dec
add
push
add
pop
out
outsl
xchg
ret
jecxz
cmp
sub
int
add
add
shl
outsb
add
add
add
dec
add
clc
ljmp
cld
jns
out
scas
push
sub
fs
rol
mov
sbb
inc
add
lahf
jno
cmp
cwtl
xor
hlt
stc
test
add
jmp
iret
pop
gs
ja
push
add
ficoml
add
push
sub
cld
mov
add
inc
xor
fsub
or
and
sbb
adc
dec
add
in
pushf
sbb
loope
idivb
mov
push
dec
add
aaa
mov
cmc
and
ret
xor
and
mov
mov
add
jmp
adc
divb
xor
stos
cmp
add
fiadds
rcrl
xchg
xor
add
pop
push
movsb
xchg
sti
hlt
mov
test
mov
out
push
xchg
leave
nop
cmp
jbe
insb
add
rorl
push
add
push
add
add
pop
adc
mov
in
cltd
ret
lods
loop
out
in
cmc
adc
cvttps2pi
push
add
jnp
test
jmp
add
jbe
add
push
add
int3
pop
add
add
orl
in
andb
imul
add
add
add
dec
add
inc
add
cmp
cld
add
sbb
cmp
sbbb
sub
add
rcll
out
push
add
cmp
jle
push
add
test
add
cmpb
pusha
add
les
mov
push
add
addl
cltd
and
js
test
clc
xchg
out
add
xchg
scas
pop
cmp
movsb
call
jp
add
cld
aas
add
xor
mov
lret
sbb
cmpsb
sub
push
push
add
cmp
pop
movzbl
pop
test
inc
add
movsl
rorb
rorl
add
cmp
sub
shrl
xor
add
cmp
nop
test
add
sbb
mov
std
pop
pop
add
cmp
xchg
sub
and
bound
bound
bound
bnd
movsb
ljmp
pushf
pop
pusha
add
add
in
shll
add
addl
clc
or
outsl
xor
fdivl
xchg
cmp
cwtl
cmp
pop
add
mov
adc
jecxz
mov
add
les
dec
add
xor
jecxz
push
cmp
and
push
sub
data16
add
test
imul
test
cltd
je
and
pop
add
jp
push
add
add
add
add
or
out
arpl
add
jl
rcrl
add
clc
ds
push
add
mov
fmulp
clc
xchg
add
int
mov
faddl
pusha
add
cli
pop
stc
pop
repnz
nop
xor
mov
push
add
lcall
add
scas
inc
out
jle
mov
cmp
scas
lahf
fnsave
mov
fsubl
mov
out
int
xorb
push
xchg
jmp
data16
cmp
xor
rolb
repnz
add
adc
inc
sub
rcrb
add
adc
scas
mov
and
sbb
xchg
ds
out
sbb
inc
add
out
add
add
test
cmpl
sbb
cmpsb
insl
stos
xorl
or
add
push
add
add
mov
adc
cwtl
divl
mov
mov
push
add
push
add
mov
sbb
mulb
test
out
add
mov
mov
inc
pop
and
add
add
pushf
bound
lods
inc
add
jns
dec
add
cwtl
jns
add
fdivs
add
scas
fildl
add
add
lcall
out
inc
add
and
add
sub
mov
mov
jmp
push
in
in
ret
inc
jecxz
add
sub
xchg
outsb
add
add
lods
addr16
add
adc
daa
push
sbb
iret
sbb
and
in
add
out
jge
add
arpl
mov
add
add
add
fidivrl
stos
dec
out
or
pop
add
and
addb
roll
mov
and
push
in
out
add
stos
inc
add
in
or
add
fabs
sub
fucomip
aam
and
ret
test
mov
ljmp
leave
push
xchg
add
daa
das
jae
pushf
add
xor
fisubrl
pusha
add
add
fdecstp
out
data16
add
outsl
pop
mov
add
sbb
add
cwtl
push
jae
push
add
add
cmc
cmp
add
push
add
or
push
add
push
add
push
add
pop
inc
add
push
add
rcrl
add
sub
in
call
dec
add
fldenv
add
add
xchg
xor
sahf
add
repnz
add
inc
add
push
add
xor
js
gs
xchg
pop
add
aaa
mov
movsb
pop
sbb
pusha
add
jp
and
fadd
lock
int
aaa
sbb
in
inc
add
enter
pop
pop
cwtl
push
add
add
js
lret
push
add
jae
ss
leave
xchg
cld
adc
pop
add
and
int
shl
jge
out
fdivrp
insl
call
ret
push
inc
aas
lret
push
add
dec
add
dec
add
rcrl
adc
fcomps
dec
add
add
mov
xlat
or
add
das
inc
add
cmp
lea
std
push
aam
push
add
add
loop
add
dec
idivb
inc
addr16
adc
je
jb
jbe
mov
popf
aaa
scas
lcall
sbb
lock
sti
mov
cld
out
xor
movsb
pop
jmp
cmp
xor
int
add
inc
add
add
ds
daa
push
add
test
jge
je
push
add
push
mov
and
cmp
das
pop
add
aaa
mov
xor
lcall
nop
dec
cmp
adc
cmp
fstpt
add
add
add
or
inc
xchg
mov
add
add
add
add
add
and
xor
pop
imul
pop
mov
mov
mov
add
stos
ja
or
lret
push
lret
adc
cmc
out
add
arpl
movsb
frstor
add
inc
add
add
xchg
stos
mov
lret
pop
add
inc
mov
xchg
xchg
adc
rcll
repnz
add
out
add
daa
jge
cwtl
repz
loopne
mov
mov
or
add
jno
add
fisubrl
adc
loopne
popa
mov
stos
or
pop
add
add
add
inc
add
add
adc
std
adc
mov
into
iret
mov
rorl
int3
sub
movsb
sbb
add
add
sub
push
add
cmp
jge
add
dec
add
dec
add
loop
lock
mov
pop
push
push
mov
sub
je
hlt
xor
int
add
in
mov
inc
mov
add
cmp
pop
test
add
enter
add
add
add
jno
mov
int
add
mov
or
add
and
jae
popa
std
push
add
rclb
add
jp
xor
and
dec
pop
popa
loop
imul
xor
add
loop
add
sub
xor
mov
ss
jo
mov
add
or
add
xor
or
clc
and
nop
sbb
clc
pop
mov
pop
add
add
dec
add
lea
cmp
pop
add
scas
mov
adc
rcll
adc
inc
add
test
xor
add
pop
inc
inc
push
add
and
sahf
mov
fldcw
les
add
push
add
add
pop
movsl
imul
iret
dec
outsb
add
sbb
incl
ja
rclb
add
add
push
add
add
ja
add
xor
repz
xchg
xlat
and
outsl
mov
adc
inc
mov
enter
xchg
hlt
addb
les
out
fnstcw
ret
and
pop
add
add
sbb
data16
lret
sub
stc
jg
pop
add
sbb
add
out
shll
add
cld
cmp
sbb
int
add
add
mov
rclb
sbb
and
add
add
mov
add
mov
sti
sahf
inc
push
add
lea
sbb
dec
push
add
mov
cmp
lds
stos
mov
add
add
add
je
mov
fsubr
cmc
pop
add
lea
sbb
add
repnz
sahf
pop
test
mov
jp
arpl
push
xchg
rcr
inc
mov
add
and
mov
pop
or
int3
mov
data16
dec
adc
shl
dec
add
and
add
fildll
cld
push
push
add
mov
add
jmp
xchg
push
add
xchg
dec
sub
add
jbe
int3
jecxz
add
movsl
sub
fcompl
xor
es
loopne
sahf
adcl
hlt
sub
cmpsb
fwait
cmp
mov
sbbb
stc
popa
rcrl
add
ret
inc
cmp
lds
add
test
repnz
add
ret
fists
mov
add
add
push
adc
loopne
test
mov
add
add
jp
or
add
push
or
call
jno
add
jb
inc
in
cmc
ficomps
sbb
je
insb
add
xor
push
add
push
test
repz
add
push
add
mov
leave
test
imul
mov
ret
xor
add
pop
mov
call
cmp
add
add
cwtl
sbb
nop
rclb
add
add
pushf
jnp
jns
xlat
and
inc
adcl
pop
jmp
add
dec
add
sub
jae
xchg
mov
add
add
jecxz
jae
jo
xor
test
sti
mov
pop
add
xor
mov
psrlq
push
add
add
lds
inc
jge
orl
je
stc
mov
add
lcall
push
ja
in
mov
aad
js
mov
jge
add
sbb
stos
pop
adc
sub
xchg
xor
xchg
ret
xchg
insb
add
push
add
mov
roll
add
pop
add
bound
pop
in
jg
pop
repnz
add
or
inc
add
add
xor
xchg
imul
cmp
add
add
leave
in
rorb
ffree
pop
xchg
arpl
mov
pop
imul
xchg
xchg
or
aaa
or
jle
sti
aas
lret
jne
int3
sub
add
add
add
dec
add
push
add
aas
sbb
test
mov
dec
add
pushf
xor
cmp
cmp
rcll
dec
add
bnd
addr16
sub
add
pushf
stos
subb
mov
pop
scas
rorl
adc
out
loopne
iret
push
push
xchg
fdivp
sbb
shll
inc
sbbb
add
add
cmpsl
push
add
jecxz
xchg
aas
test
dec
rorb
add
sub
and
aam
add
jns
add
add
add
imul
mov
add
xor
pushf
fisubrs
dec
mov
adc
stos
push
add
fidivs
inc
add
loopne
lcall
add
pop
cmp
ja
jp
sub
popf
shrl
add
add
mov
dec
add
jo
jg
pop
add
data16
mov
jle
icebp
sbb
add
and
sbb
or
lcall
or
fcoml
jmp
hlt
pop
jno
lock
add
hlt
sbb
cmpsb
inc
add
insl
test
jb
inc
daa
xor
pusha
add
add
dec
jno
test
add
inc
inc
mov
push
addr16
std
inc
add
int
add
mov
push
add
add
add
mov
pushf
cmp
push
mov
add
or
enter
pop
jbe
clc
fildll
add
adc
and
jge
jmp
in
push
push
add
add
enter
add
ja
push
add
dec
fwait
imul
nop
data16
add
insb
add
test
sahf
int3
pop
add
add
jnp
push
sbbl
jb
lret
sub
shll
sub
add
add
pop
out
stc
and
out
mov
in
test
mov
add
add
pop
or
in
cli
aas
jp
push
cvttps2pi
cmc
sub
or
fdivs
push
and
inc
pusha
add
push
add
jne
mov
sbb
fistpl
data16
xor
add
in
add
lods
and
mov
mov
out
std
inc
test
dec
inc
add
or
add
test
mov
add
pop
and
fildll
loope
push
add
add
in
sub
push
add
and
xor
sarb
test
incl
jl
cli
cmp
push
add
xor
lods
test
add
loopne
aad
repz
movsl
dec
nop
mov
dec
mov
std
or
mov
cmp
outsb
add
xchg
adc
add
into
add
testb
add
in
adc
add
pop
xchg
jae
add
shlb
iret
aaa
scas
add
add
fcmove
xor
add
add
add
movsl
sbb
fcomps
jno
sub
jno
js
xchg
sbb
add
push
repz
mov
scas
mov
mov
add
jno
and
popf
jp
sbb
test
add
bound
mov
sahf
add
lods
test
cmpxchg
jecxz
add
and
scas
add
sbb
xchg
arpl
in
add
cmp
sub
sub
adc
mov
xchg
add
sub
adc
sbb
xchg
mov
lods
push
xor
loopne
add
inc
add
cmpsb
lock
add
push
add
jmp
data16
add
popa
jmp
shrl
add
cwtl
inc
jno
dec
add
jmp
clc
cmp
add
pop
add
add
inc
push
push
jnp
fimuls
enter
add
jo
neg
inc
add
into
sbbl
xor
cld
lcall
inc
add
add
pop
bound
push
fdivr
mov
loope
pusha
add
scas
cmp
or
pop
jo
pop
add
out
xor
xor
repnz
inc
add
lret
add
and
and
shll
add
pop
add
xlat
test
out
push
mov
add
notb
shrl
dec
add
int3
mov
or
aam
add
lock
add
add
add
add
mov
fiadds
in
into
push
add
out
add
aas
mov
adc
jno
add
lret
add
add
rcrl
adc
fdivl
pop
add
popa
fcomp
xchg
xchg
out
loop
pop
add
std
and
adc
or
jnp
add
push
leave
or
lods
sti
jge
add
add
jae
add
nop
cmpl
inc
add
push
add
add
xchg
ljmp
outsl
repz
test
xor
sub
add
add
pop
add
pop
add
mov
mov
add
icebp
sbb
add
add
add
cmp
cmpsb
movsb
add
addr16
in
stc
je
push
mov
addr16
dec
add
add
add
push
add
scas
dec
add
add
add
bound
mov
outsb
add
add
pop
xorb
data16
cmp
mov
int3
loop
cmp
jl
jnp
push
aaa
fstpt
loop
add
je
sub
xchg
sti
mov
call
adc
inc
xor
fisubs
xchg
dec
add
sahf
mov
add
ret
imul
add
sbb
mov
mov
sub
add
pop
mov
mov
outsb
add
mov
add
xchg
mov
lods
inc
add
add
add
stos
xor
add
mov
dec
add
push
add
dec
add
add
inc
add
push
leave
pop
sub
push
nop
iret
neg
cmp
in
xchg
std
dec
add
jnp
add
les
int3
lods
mov
add
sub
bswap
scas
mov
movsbl
add
les
add
xchg
inc
outsl
dec
divl
push
add
and
push
add
pop
int3
not
xchg
inc
add
xlat
xor
jne
mov
dec
pop
sbb
js
dec
xor
add
aas
cmp
sub
xchg
xor
pop
sbb
mov
icebp
cmp
cli
mov
add
add
stc
push
pusha
add
clc
push
lret
mov
outsb
add
pusha
add
add
mov
sub
cmp
bound
outsb
add
scas
or
or
aam
inc
add
add
cmp
lds
fildl
insl
pop
add
in
mov
jmp
stc
xor
pop
add
call
ret
clc
xor
sbb
add
add
jge
aad
dec
add
fcompl
fbstp
add
ret
add
rcrb
push
ljmp
je
movsl
xchg
sahf
and
jnp
test
pop
sbb
xor
sbb
mov
cli
sahf
bound
inc
bound
dec
iret
cmc
repz
in
pop
idivb
mov
add
out
lods
dec
add
into
loop
dec
add
add
adc
mov
shr
inc
add
imul
pop
js
push
add
popf
xor
jb
outsb
add
xor
mov
add
or
xor
mov
dec
add
sub
and
pushf
pop
jbe
push
fucom
inc
add
mov
add
push
lret
cmpsb
repnz
push
add
mov
add
mov
sbb
jmp
add
pop
add
xor
xor
sub
imul
sbb
pop
add
add
xchg
inc
add
jne
fidivrl
in
movsb
xor
insb
add
das
std
sbb
repnz
call
xor
add
and
rcl
add
xchg
pushf
xchg
insb
add
sub
mov
add
sbb
push
add
mov
mov
daa
lahf
lahf
test
add
arpl
lods
jae
shrl
adc
aas
outsb
add
cmp
mov
jmp
push
add
inc
add
movsb
push
add
add
add
fs
adc
and
outsb
add
ror
jp
push
pop
test
add
je
pop
add
add
mov
add
movsb
xor
jns
add
sbb
push
add
dec
add
out
lcall
sbb
lahf
ljmp
in
lcall
push
xor
incb
and
enter
into
cmc
in
popf
mov
loopne
add
cmc
adc
hlt
push
add
icebp
icebp
or
add
sar
imul
inc
add
cmp
mov
jecxz
mov
std
jg
add
add
imul
xor
inc
das
adcb
add
aas
push
pop
into
mov
add
add
add
adc
mov
xor
dec
add
pop
rorl
and
test
leave
in
fcmovbe
incb
insb
add
add
mov
ss
mov
add
jge
add
cli
fwait
push
add
mov
loopne
mov
out
sbb
pushf
mov
outsb
add
cwtl
add
aad
fadds
nop
mov
add
add
add
fcmovne
fbld
push
add
repnz
dec
push
add
in
xor
movsb
mov
add
std
pop
lods
clc
mov
sbb
ret
fdivr
movsb
test
add
xchg
xchg
mov
add
add
mov
popf
push
add
xor
jae
add
jg
add
into
jp
xchg
nop
mov
adc
add
add
dec
push
xchg
in
aas
push
add
xchg
jg
pop
sti
and
stos
mov
ffreep
loop
add
add
inc
lcall
xchg
cmp
outsl
jmp
cmp
imul
jecxz
pop
jp
and
idiv
sbb
call
push
add
enter
mov
mov
js
out
add
adc
inc
mov
and
aad
fcmovnu
push
push
out
movsl
cltd
lahf
jns
add
add
cmp
mov
fmuls
addr16
add
into
mov
add
sbb
inc
inc
add
sub
jae
add
add
add
add
out
fwait
sbb
divps
pop
dec
inc
loop
pop
xor
pop
add
dec
into
lret
mov
inc
mov
ljmp
imul
insb
add
dec
add
add
xor
stos
dec
xchg
add
inc
add
xchg
sub
add
outsb
add
loop
add
aam
cmp
loop
jnp
dec
add
out
into
push
add
add
popa
xchg
adc
cltd
js
mov
pop
add
xchg
mov
xchg
jns
addr16
xchg
aas
mov
lea
add
pop
mov
mov
pop
add
icebp
pop
push
jmp
xchg
pop
add
mov
xor
pop
int
add
add
dec
lods
sub
imul
cmp
add
icebp
pop
add
xor
add
add
pop
add
dec
add
push
add
and
outsb
add
add
push
sub
add
jecxz
popa
mov
add
pop
push
add
and
outsl
or
shrl
add
jo
pop
orl
add
pop
cmpsl
mov
add
mov
bound
or
addl
aad
add
adc
add
pop
add
and
sub
add
add
rcrb
inc
add
cmp
addr16
add
add
xchg
out
mov
scas
inc
dec
insb
add
cltd
sbb
jno
cmpsb
loop
pop
lret
outsb
add
adc
sub
lds
clc
icebp
lods
mov
push
mov
je
mov
pause
fidivs
out
push
add
add
xchg
jmp
add
xchg
int3
ret
test
mov
pusha
add
add
mov
mov
pop
add
or
add
add
mov
jg
sub
and
push
clc
add
int
mov
add
movb
push
add
add
shll
testb
add
jbe
or
add
ds
xor
dec
add
mov
sbb
add
cli
pop
cmpsl
inc
add
ljmp
call
pop
add
add
add
push
push
add
imul
jle
add
and
adc
lea
add
test
sbb
data16
fstp
xchg
out
cmp
pop
pop
add
adc
es
lods
mov
add
add
dec
add
mov
push
add
in
test
add
fisubrs
ja
dec
add
loop
pop
add
pop
add
shrb
add
sbb
scas
push
sti
push
add
fnstenv
mov
ljmp
in
cmpb
mov
adc
add
add
daa
jbe
sub
cmp
pop
cmp
pop
add
add
mov
inc
out
push
add
and
mov
pop
add
add
pop
add
ret
or
inc
add
add
cmp
sahf
push
add
add
xor
in
add
add
lahf
adc
lahf
aad
dec
lock
dec
movsl
imul
mov
repnz
mov
sbbl
jne
add
dec
add
adc
pop
add
add
imul
cmp
or
mov
cmp
jo
dec
add
add
insb
add
cmp
dec
lea
pop
stos
ja
push
add
jae
cmpsl
push
add
add
int3
mov
mov
xchg
clc
pop
add
add
push
add
and
sbb
add
sbb
xor
cmc
imul
push
daa
sub
or
mov
cmp
push
add
and
pop
add
rcrl
add
push
outsb
add
ljmp
fwait
mov
or
pop
ljmp
stos
mov
imul
dec
add
add
jb
sub
add
mov
pop
inc
add
jle
inc
xor
shll
add
nop
jne
inc
lahf
push
add
mov
insl
int
add
pop
add
mov
iret
std
mov
fdivr
push
add
xor
std
xchg
aaa
sbb
icebp
mov
add
add
int3
mov
in
add
out
cmpsb
rcrb
jge
loopne
dec
stos
cmpl
jl
sub
bound
and
mov
gs
mov
pop
add
mov
in
je
shlb
cmpsl
pop
addr16
sbb
dec
outsl
roll
mov
stc
or
fiaddl
or
push
jle
sbb
add
add
loopne
pop
add
dec
mov
pop
repz
add
mov
add
dec
mov
data16
push
add
add
stos
je
sub
mov
pop
add
jmp
fistl
add
mov
add
ss
mov
adc
stos
xor
int
into
pop
in
movsb
jns
push
add
add
std
sbbb
mov
gs
add
inc
inc
push
add
push
add
fwait
mov
xor
lods
inc
mov
test
clc
outsl
push
add
or
or
push
ljmp
hlt
test
add
add
or
xchg
lret
mov
add
add
push
add
and
add
and
jns
mov
add
data16
push
add
sbb
add
add
mov
add
outsb
add
ljmp
jb
cmp
in
inc
add
pop
add
scas
dec
add
add
data16
add
pop
add
add
subl
mov
add
dec
rcr
mov
cmp
add
or
je
cmp
xor
insb
add
cwtl
adc
aam
ja
fbld
sub
sub
add
dec
inc
inc
and
dec
mov
adc
and
jnp
pop
push
fistpll
add
hlt
inc
add
add
pop
jo
xor
jne
add
and
lahf
mov
mov
inc
add
lods
adc
inc
in
add
add
add
and
pop
push
outsb
add
ror
lcall
in
lea
add
add
or
add
add
ljmp
xor
add
pop
jle
out
out
cmc
push
and
xor
add
adcb
add
push
scas
popa
rcll
cmpsb
push
add
movsl
stos
inc
dec
add
xchg
add
xor
testb
pop
add
and
cmpsb
lds
dec
add
adc
imul
xlat
inc
outsb
add
pop
imul
shrl
sbb
jmp
sahf
mov
add
add
xchg
popf
adc
add
mov
xor
add
and
cli
lret
cmp
cmc
rorb
add
pop
cld
mov
jae
add
inc
pop
pushf
dec
add
in
jg
or
jle
pusha
add
imul
jo
xchg
mov
mov
in
push
ficomps
ret
loope
add
and
pop
sahf
test
mov
add
or
mov
loope
xchg
ficoml
add
and
push
add
shll
add
negb
add
add
insl
leave
push
mov
je
pop
add
shl
ret
jge
add
push
jecxz
add
popf
cmp
sbb
add
cmp
dec
add
pop
xchg
add
add
sub
movsb
push
add
or
pusha
add
adc
in
xchg
bound
stc
repnz
dec
sarl
add
add
inc
hlt
xchg
lds
scas
insb
add
add
mov
jmp
arpl
mov
add
sbb
aaa
push
add
mov
ret
add
or
jp
imul
or
add
cwtl
jb
sbb
sarb
xchg
imul
in
int3
sbb
add
xchg
gs
pop
add
mov
add
into
popf
jmp
add
fbld
add
cmp
out
jecxz
mov
and
add
test
push
add
mov
add
add
pusha
add
lcall
add
add
loope
add
aas
in
mov
loop
pop
add
pop
nop
mov
mov
sbb
jbe
mov
data16
cmpsl
cmp
lret
sbb
jnp
mov
or
das
ficomps
loope
aas
das
jl
aas
fdivs
rcrl
adc
sub
addr16
ficoms
push
add
add
and
add
add
adc
cmpsl
adc
and
loopne
jb
xor
or
data16
add
pop
adc
ret
xor
lahf
xor
jae
add
xlat
fldt
add
lea
inc
add
imul
stos
outsl
mov
jg
clc
test
scas
xchg
cmp
add
add
stc
cmp
add
test
lea
jge
add
sbb
leave
ja
inc
scas
push
out
daa
or
jno
mov
add
xchg
sahf
idivb
addb
add
jg
add
push
add
xor
or
add
mov
pop
add
pop
repnz
add
sub
xor
add
aam
add
mov
shl
push
add
or
cmp
add
add
mov
fisubrl
scas
rcll
jno
scas
insb
add
mov
jle
cmp
inc
add
mov
add
add
push
and
sbb
arpl
jge
incb
rolb
or
and
mov
mov
push
stc
pusha
add
cmp
cmp
jg
add
mov
add
add
add
jg
add
add
lock
adc
jae
add
add
add
add
test
cmp
mov
data16
cmp
clc
sti
xchg
aaa
cmp
cmp
adc
daa
add
movsl
pop
add
add
add
xor
push
fldenv
inc
jnp
pusha
add
push
add
outsb
add
xchg
mov
jle
aad
xchg
xor
lods
sub
in
add
test
push
xor
in
sahf
pop
loop
mov
inc
inc
mov
subl
mov
arpl
add
data16
sub
outsl
enter
sysret
adc
or
hlt
stc
push
mov
aam
adc
adc
jp
pop
add
add
xor
insb
add
out
xchg
or
mov
mov
xor
out
divb
push
cmp
xor
jae
add
ret
data16
pop
mov
sub
bound
pop
std
in
push
add
add
add
add
xchg
test
aad
add
into
or
jmp
popf
jp
fsubl
jecxz
xchg
stos
xchg
shrb
cmpb
add
rcr
or
push
sti
sahf
dec
jge
dec
cmpb
pop
fildl
add
add
leave
mov
ljmp
test
pop
testl
add
cs
pushf
xor
call
xor
push
add
or
repnz
inc
sub
mov
sub
ret
scas
add
adc
popa
sub
fiadds
fdivp
jo
jnp
cmp
cli
pop
sbb
xchg
or
aaa
movsb
mov
xchg
xor
repz
add
jo
xchg
or
mov
xchg
xor
xor
loop
add
inc
add
xchg
add
insb
add
les
and
add
add
add
add
dec
push
add
subb
pop
add
popf
ficompl
add
or
pop
mov
add
add
add
jle
std
inc
add
clc
enter
pop
or
hlt
adc
int3
sarl
pop
add
push
add
add
lods
aam
jge
mov
lods
or
inc
in
cmc
xor
xor
mov
push
add
adc
inc
add
add
add
dec
mov
inc
cmp
into
mov
or
push
int3
lock
jecxz
push
xor
jne
repnz
loopne
add
lods
push
add
daa
lea
dec
fisttpl
dec
dec
daa
lret
dec
add
fbstp
add
testl
sub
add
js
cmp
jmp
add
test
and
repnz
notb
mov
rcrb
mov
adc
dec
add
mov
adc
cmp
adc
jb
xchg
mov
dec
add
in
inc
sbb
addr16
lahf
jnp
add
mov
dec
add
call
lahf
fistpl
jge
leave
pop
add
js
pusha
add
add
inc
in
cmp
arpl
popf
xor
out
add
js
je
push
add
outsb
add
adc
dec
out
add
xor
xchg
iret
out
rcrb
in
stos
add
pop
add
add
push
pop
lock
dec
add
push
add
setne
add
xor
scas
fcmove
xchg
mov
jae
pop
dec
add
jae
add
inc
add
rcrb
out
jne
mov
add
add
inc
add
add
rcll
add
mov
jmp
add
pusha
add
xchg
scas
pop
add
lea
shlb
cmpl
mul
cmpsl
ret
aam
add
out
jb
adc
mov
cli
pop
xchg
dec
add
xchg
mov
aam
loope
jae
add
mov
jae
add
push
add
icebp
lods
add
out
adc
and
enter
add
add
int3
push
add
jb
daa
mov
add
jb
add
xchg
pop
test
stc
bnd
pop
arpl
sbbb
or
add
popf
inc
inc
mov
insl
sub
jge
mov
test
bound
int
lea
add
add
js
fs
xor
dec
add
add
xlat
stc
push
add
fildl
mov
or
inc
out
add
xchg
jns
mov
add
mov
inc
xchg
sub
movsb
mov
in
add
fdiv
mov
andl
add
xor
and
adc
or
pop
add
and
pop
mov
loope
fmull
xor
pop
add
lret
lods
iret
mov
out
xchg
ret
nop
push
add
add
loop
mov
add
jg
add
sarb
dec
add
loope
jb
loope
call
add
add
add
inc
add
out
cmp
jl
lret
orl
inc
add
rcll
add
dec
enter
fists
add
mov
jae
jns
xor
pushf
xchg
lds
jmp
jno
into
data16
testl
mov
add
lret
add
jge
mov
or
xchg
xlat
push
push
add
test
or
mov
sbb
cmpb
jle
sub
sbb
pop
add
negb
sbb
test
pop
out
popf
cmp
mov
scas
dec
int
jl
cmp
jmp
xchg
or
jae
add
jle
mov
mov
push
add
ret
cmpsl
out
jmp
add
add
xchg
popa
clc
pop
add
bound
popf
rorb
xchg
lock
cmpsb
fdivrp
cltd
stc
sub
xor
jmp
add
out
pop
sub
ljmp
loopne
das
or
inc
add
add
fcoms
add
js
sbb
xchg
ljmp
rcrb
add
mov
add
add
add
adc
or
push
add
jl
aad
cltd
xor
scas
lcall
jo
push
add
add
cld
jnp
or
sbb
mov
add
scas
sbb
or
lahf
sbb
ret
add
or
movsb
out
not
xlat
lcall
aas
mov
xchg
cmp
std
data16
mov
shl
lods
mov
cmp
or
add
cmc
outsl
xor
xor
in
mov
add
imul
sub
sub
ja
sbb
leave
aad
lcall
pop
add
add
xchg
push
add
ds
mov
jne
scas
xchg
dec
aad
and
sub
rol
lds
add
xchg
pop
xchg
pop
ljmp
push
add
add
dec
add
call
or
add
inc
and
and
sarl
add
bound
sub
mov
xchg
dec
sbb
sub
fdivs
add
dec
add
add
jnp
jl
and
movsb
lods
icebp
cmp
popf
mov
add
je
lods
test
ss
movsb
lods
pop
add
inc
add
dec
je
cmp
adcl
add
add
pop
add
add
test
add
outsb
add
mov
add
add
cmc
pop
jg
outsb
add
leave
int
add
push
add
adc
sbb
insl
bound
jo
lar
in
adc
bound
scas
jnp
mov
add
jae
add
add
add
push
add
and
ret
push
add
in
hlt
stc
jle
dec
add
jge
jp
cmpsl
xchg
sub
clc
int3
test
add
pusha
add
xchg
daa
dec
ret
mov
mov
jnp
jl
sbb
mov
add
ja
loope
add
add
or
icebp
lcall
jns
add
roll
sub
out
sub
and
sahf
loop
add
add
dec
add
add
fidivrl
nop
dec
in
add
xor
pop
add
inc
gs
call
add
fwait
xchg
popa
shrb
std
add
cwtl
dec
add
in
add
xchg
cmp
clc
aam
add
sub
aad
outsb
add
dec
inc
mov
xor
sbb
lcall
cmpsb
bound
xchg
add
loopne
in
cwtl
mov
aad
add
jns
jge
add
pop
ret
pop
icebp
mov
je
xchg
add
bnd
adc
add
out
add
add
xchg
sbb
stc
fcompl
mov
bound
push
add
mov
add
das
inc
add
add
stos
cwtl
or
nop
sbb
decl
add
scas
jo
cld
out
add
add
ja
sbb
hlt
or
dec
add
add
pop
add
dec
pusha
add
and
xchg
sub
lods
push
int3
cli
push
mov
test
test
jne
dec
stc
adc
and
adc
xor
cwtl
mov
sbb
push
push
add
mov
cmpsl
shl
add
add
and
dec
add
add
jp
jns
add
push
add
dec
add
in
xor
mov
or
mov
cld
adc
jmp
add
inc
add
test
add
out
pushf
add
shl
or
mov
add
fisubl
pusha
add
decb
sub
lcall
lods
cltd
mov
add
dec
mov
push
adc
pop
add
mov
shlb
in
in
jecxz
lods
inc
fsubr
ds
test
xchg
loopne
into
jmp
pop
add
add
mov
jb
loopne
mov
add
add
xor
add
cwtl
aas
jae
fisttpl
push
add
movsb
add
inc
dec
add
dec
stc
imul
ss
push
add
mov
add
lret
xor
rol
arpl
enter
dec
cld
inc
or
mov
sbb
xor
mov
add
mov
pop
cwtl
mov
xchg
inc
add
sbb
jo
pop
jnp
inc
add
add
mov
icebp
add
push
pop
add
out
and
cld
ljmp
inc
add
in
jae
xor
adc
xchg
add
push
add
add
adc
add
out
sbb
add
adc
enter
dec
add
cmp
fcmovnb
add
cmp
dec
add
adc
fldenv
push
mov
andb
mov
add
add
or
and
mov
rolb
and
out
js
push
add
popa
sbb
daa
popf
dec
insl
cmpsb
adc
repz
pop
add
add
cmpsl
in
mov
push
loop
add
add
and
push
sahf
push
add
add
pusha
add
fidivl
das
fistps
jmp
add
mov
lret
pop
add
add
mov
add
add
mov
sbb
cmp
cmp
dec
in
sub
jnp
mov
pusha
add
add
add
add
add
fdivs
push
add
jnp
data16
stos
gs
ret
push
add
jns
or
fidivrl
xor
dec
add
add
sti
add
adc
add
jecxz
pop
cmp
dec
mov
add
add
data16
iret
mov
inc
add
pop
add
xchg
and
push
add
add
sbb
xor
notl
push
call
add
fwait
xlat
pop
add
stos
mov
cmpsb
loop
data16
xor
ret
les
add
sub
mov
add
add
fstpl
call
dec
add
lcall
jle
cld
xor
aas
push
add
lcall
add
add
and
js
xor
mov
out
add
cmp
xchg
xlat
add
add
push
bound
popa
jle
in
xchg
xchg
fisubrs
fcoms
add
jo
lods
dec
rorl
add
adc
aas
pop
add
or
cmpsl
sbb
cli
jg
jno
mov
ja
cwtl
add
xchg
add
adc
add
jge
add
cmpsl
scas
adc
mov
add
mov
bound
sub
sub
cltd
push
add
divb
inc
dec
add
add
add
scas
cmpb
mov
repz
stos
loopne
and
in
push
hlt
adc
cmp
mov
pop
rorb
movsb
orb
lahf
add
add
add
test
mov
pop
adc
add
add
pop
add
and
add
add
sbb
xor
insl
je
insb
add
push
add
cmp
add
add
adc
pop
pop
in
ret
push
add
add
out
out
inc
add
pushf
sbb
inc
add
test
xchg
add
out
adc
mov
add
lret
xor
lock
aas
aam
xor
adc
add
dec
add
fstpt
add
in
jns
add
shll
mov
xor
sahf
xor
adcl
xchg
inc
repnz
xchg
mov
cmpsl
sub
rclb
push
add
test
imul
sub
lret
popa
adc
lods
jns
sbbl
add
add
add
test
mov
inc
add
stc
push
push
add
sbb
jbe
mov
add
add
mov
add
add
add
sbb
add
clc
xor
ja
xchg
push
inc
test
xchg
jno
jp
negl
add
jne
add
or
xchg
cmp
adc
add
and
fsubs
add
mov
add
pushl
add
push
add
pusha
add
das
jbe
stc
xor
int
add
cwtl
pop
add
les
add
les
pop
add
leave
xchg
push
add
rcll
jns
push
add
cmp
pop
add
scas
cmpsl
sbb
dec
sbb
jecxz
mov
inc
add
xor
add
sbb
mov
pop
ja
add
gs
add
lcall
dec
test
pop
add
inc
xor
inc
push
add
add
sbb
add
mov
fimull
add
xchg
lods
shll
mov
mov
std
mov
ret
inc
repz
xchg
xchg
mov
adc
orb
add
mov
jmp
lods
je
mov
mov
add
mov
jmp
fstp
adc
pushf
std
lcall
iret
mov
push
add
out
add
out
inc
add
add
push
adc
add
add
add
iret
and
out
pop
add
add
mov
roll
cld
push
add
push
add
xchg
cmpsl
mov
and
fcoms
and
mov
push
add
adc
dec
adc
adc
data16
mov
mov
inc
xchg
push
add
add
mov
dec
add
outsb
add
sbb
pop
rol
out
add
pushl
add
or
inc
add
push
outsl
adc
mov
rcll
je
js
sbb
add
cmp
sub
jecxz
std
sti
lods
pushf
jg
add
add
decb
dec
add
pop
sub
addr16
mov
mov
add
addr16
int
mov
add
inc
add
add
cmc
push
add
incb
jae
add
lahf
xchg
imul
push
add
mov
dec
cmp
addb
add
xchg
mov
dec
add
cmp
mov
icebp
dec
fwait
mov
loop
add
in
mov
add
sbb
add
inc
add
jg
sti
xchg
push
jbe
shrl
pop
lcall
sbb
aaa
pop
add
imul
dec
add
lods
or
add
popf
fldl
test
iret
add
add
lret
add
mov
add
outsl
out
add
push
add
sbb
in
cmp
inc
lahf
xor
cmp
out
add
add
sub
mov
into
xchg
test
xor
add
add
push
add
add
adc
rcl
push
add
add
stc
pusha
add
jmp
push
add
add
jne
shll
add
shrl
inc
cld
and
fcompl
aam
stos
push
mov
add
out
lahf
das
daa
dec
psrad
push
add
add
mov
in
add
mov
out
xchg
jns
push
out
push
add
bound
pop
add
cmpsb
add
cltd
outsb
add
test
jb
mov
add
cli
test
inc
add
out
cmpsb
or
in
add
lods
daa
cmp
add
std
jnp
dec
add
cld
inc
jge
sub
inc
add
mov
add
mov
stos
stc
pusha
add
jbe
cli
in
pusha
add
adc
xorl
mov
sahf
stos
jo
mov
xchg
add
add
add
cli
adc
push
add
es
out
adc
add
sub
mov
aas
mov
mov
mov
jne
jbe
dec
add
mov
sub
aam
cmpsb
repnz
in
inc
add
neg
daa
add
push
add
out
xor
andb
and
ljmp
add
add
inc
add
fs
test
sti
pop
idivb
shlb
push
cltd
xchg
push
add
and
mov
sbb
inc
mov
mov
add
dec
add
sub
lret
cli
mov
xor
dec
add
dec
add
add
sti
mov
add
xor
push
icebp
jo
dec
add
popf
jbe
test
add
out
aam
add
add
add
cmp
loop
