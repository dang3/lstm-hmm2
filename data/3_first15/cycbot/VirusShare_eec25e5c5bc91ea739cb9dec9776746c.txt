lret
cmpsb
loopne
sbb
loopne
dec
mov
loopne
movsb
movsb
loopne
sbb
loopne
cld
mov
loopne
mov
movsl
loopne
dec
test
mov
cmpsb
loopne
pop
movsb
loopne
pop
cmpsl
loopne
mov
loopne
pop
cmpsb
loopne
loope
loopne
mov
cmpsl
loopne
lods
mov
loopne
xchg
cmpsl
loopne
cmpsb
loopne
xchg
movsb
loopne
insb
test
mov
cmpsb
loopne
jns
loopne
push
movsb
loopne
scas
mov
loopne
xlat
test
mov
cmpsl
loopne
sub
test
mov
movsl
loopne
pop
test
mov
test
mov
mov
loopne
xchg
loopne
outsb
cmpsb
loopne
fsubs
loopne
cmp
loopne
test
loopne
lock
loopne
lret
mov
cmpsl
loopne
mov
loopne
push
loopne
push
movsl
loopne
pop
mov
loopne
pop
movsl
loopne
push
movsl
loopne
push
mov
loopne
ljmp
mov
cmpsb
loopne
mov
loopne
cmp
loopne
or
cmpsl
loopne
ret
mov
loopne
xchg
test
mov
mov
loopne
and
loopne
pop
movsl
loopne
xor
loopne
andb
mov
test
loopne
movsl
mov
loopne
and
loopne
and
loopne
adc
loopne
xchg
loopne
mov
movsl
loopne
mov
movsb
loopne
fsubrs
loopne
cwtl
mov
loopne
xlat
cmpsb
loopne
mov
mov
loopne
clc
test
mov
movsl
loopne
dec
mov
loopne
andb
mov
cmpsl
loopne
jnp
loopne
inc
movsb
loopne
or
test
mov
cmpsb
loopne
jne
loopne
pop
cmpsl
loopne
call
movsl
loopne
mov
loopne
pop
movsl
loopne
arpl
loopne
inc
movsb
loopne
pop
cmpsb
loopne
fisubs
loopne
out
cmpsb
loopne
cmc
cmpsb
loopne
pop
movsl
loopne
int3
test
mov
mov
loopne
lret
mov
loopne
mov
loopne
int3
movsl
loopne
mov
loopne
mov
loopne
cmpsb
loopne
jmp
loopne
ljmp
mov
cmpsb
loopne
push
movsl
loopne
adc
loopne
push
test
loopne
sbb
loopne
pop
mov
loopne
jmp
loopne
fisubrs
loopne
loopne
loopne
test
mov
mov
loopne
sub
loopne
outsb
mov
loopne
lock
mov
movsl
loopne
aam
loopne
arpl
loopne
jne
loopne
xor
movsb
loopne
xor
loopne
jo
loopne
ret
mov
loopne
add
loopne
lock
loopne
or
mov
cmpsl
loopne
or
loopne
dec
test
loopne
jecxz
loopne
pop
cmpsl
loopne
ljmp
mov
cmpsb
loopne
ja
loopne
mull
loopne
dec
mov
loopne
xor
loopne
aad
loopne
fisubs
loopne
jo
loopne
mov
loopne
pop
test
loopne
int
loopne
imul
mov
cmpsl
loopne
push
cmpsb
loopne
pop
test
loopne
pop
test
mov
mov
loopne
les
mov
movsl
loopne
test
loopne
enter
cmp
loopne
loop
loopne
enter
lret
test
mov
movsl
loopne
push
cmpsb
loopne
test
mov
loopne
xchg
loopne
movsl
loopne
test
mov
movsb
loopne
enter
lods
mov
loopne
xor
loopne
pop
test
loopne
adc
loopne
adc
loopne
lds
loopne
cmpsb
loopne
addr16
scas
mov
loopne
xchg
movsb
loopne
add
loopne
aad
loopne
add
cmpsl
loopne
loopne
loopne
push
movsb
loopne
test
loopne
repnz
loopne
das
movsl
loopne
adc
cmpsl
loopne
daa
test
loopne
lock
loopne
fldenv
loopne
adc
loopne
sti
mov
loopne
test
loopne
mov
cmpsb
loopne
mov
loopne
repnz
loopne
or
loopne
jmp
loopne
subb
mov
mov
loopne
lahf
mov
loopne
mov
loopne
pop
test
mov
test
mov
cmpsb
loopne
bt
mov
movsb
loopne
dec
movsl
loopne
cli
cmpsl
loopne
ja
loopne
xchg
cmpsl
loopne
jmp
loopne
cmp
mov
mov
loopne
and
loopne
mov
loopne
and
mov
loopne
jl
loopne
sbb
loopne
mov
loopne
mov
mov
loopne
or
loopne
add
loopne
insl
cmpsl
loopne
xor
loopne
sub
test
mov
movsb
loopne
bound
loopne
out
loopne
jns
loopne
pop
cmpsl
loopne
fisubl
loopne
je
loopne
mov
loopne
xor
loopne
movsb
loopne
hlt
mov
loopne
or
loopne
test
loopne
test
mov
loopne
test
loopne
adc
mov
test
mov
mov
loopne
inc
movsl
loopne
xcrypt-cfb
mov
mov
loopne
cmp
loopne
cld
test
mov
mov
loopne
mov
loopne
iret
mov
loopne
mov
loopne
inc
movsl
loopne
mov
cmpsb
loopne
and
mov
mov
loopne
insl
cmpsl
loopne
ja
loopne
mov
loopne
xchg
movsb
loopne
and
loopne
mov
cmpsb
loopne
les
mov
mov
loopne
std
movsb
loopne
fs
mov
cmpsb
loopne
xor
loopne
push
mov
loopne
imul
mov
cmpsb
loopne
mov
loopne
pushf
mov
loopne
ret
mov
movsl
loopne
cmp
loopne
sbb
loopne
adc
loopne
movsl
mov
loopne
xchg
loopne
jg
loopne
mov
loopne
loopne
loopne
movsb
loopne
jmp
loopne
xchg
test
mov
movsb
loopne
adc
loopne
pop
loopne
sbb
mov
cmpsb
loopne
dec
test
mov
test
loopne
dec
cmpsl
loopne
shlb
mov
movsl
loopne
ret
mov
loopne
jno
loopne
jno
loopne
sbb
loopne
jnp
loopne
mov
loopne
xor
loopne
repz
loopne
popf
movsl
loopne
xor
loopne
xchg
mov
loopne
into
test
mov
test
loopne
mov
loopne
cmp
loopne
int3
movsl
loopne
insl
mov
loopne
dec
movsl
loopne
shrl
loopne
bound
loopne
xor
loopne
loopne
loopne
mov
movsl
loopne
dec
cmpsl
loopne
pop
mov
loopne
mov
loopne
subb
mov
mov
loopne
sbb
movsl
loopne
stc
mov
loopne
push
mov
loopne
and
loopne
xor
loopne
andb
mov
mov
loopne
sahf
cmpsl
loopne
arpl
loopne
inc
test
loopne
xchg
mov
loopne
inc
cmpsb
loopne
or
mov
cmpsb
loopne
push
test
loopne
xchg
mov
loopne
and
mov
loopne
popa
mov
loopne
adc
loopne
andb
mov
mov
loopne
inc
mov
loopne
xchg
loopne
cmpsb
loopne
add
movsl
loopne
jmp
loopne
adc
loopne
fisubs
loopne
lret
movsb
loopne
lcall
mov
test
loopne
mov
loopne
mov
loopne
inc
mov
loopne
mov
loopne
mov
mov
loopne
xchg
test
mov
cmpsl
loopne
cmp
loopne
push
loopne
cmp
loopne
mulb
mov
cmpsl
loopne
lcall
mov
movsl
loopne
push
mov
loopne
mov
cmpsb
loopne
subl
mov
cmpsb
loopne
mov
cmpsb
loopne
lcall
mov
mov
loopne
sahf
test
mov
mov
loopne
fwait
mov
loopne
sbb
loopne
in
loopne
repnz
loopne
clc
movsb
loopne
lds
loopne
push
mov
loopne
or
mov
movsl
loopne
push
mov
loopne
std
cmpsb
loopne
inc
movsl
loopne
fisubs
loopne
scas
cmpsl
loopne
shll
loopne
xor
loopne
inc
mov
loopne
cld
mov
loopne
pusha
test
mov
test
loopne
mov
loopne
mov
loopne
into
mov
loopne
sub
loopne
cli
mov
loopne
mov
test
mov
movsb
loopne
xchg
test
mov
mov
loopne
cmp
mov
loopne
ret
mov
test
loopne
loope
loopne
push
test
mov
cmpsl
loopne
xor
loopne
lock
loopne
jae
loopne
movsb
loopne
mov
mov
loopne
test
mov
movsb
loopne
stos
test
mov
mov
loopne
cmc
mov
loopne
cmp
loopne
imul
loopne
push
mov
loopne
fsubl
loopne
cmp
loopne
jne
loopne
adc
loopne
xcrypt-cfb
mov
cmpsl
loopne
adc
cmpsb
loopne
out
cmpsb
loopne
jl
loopne
lahf
movsb
loopne
aas
test
mov
movsl
loopne
adc
test
loopne
outsl
movsb
loopne
je
loopne
into
mov
loopne
movsb
mov
loopne
out
mov
loopne
icebp
mov
loopne
mulb
loopne
inc
movsl
loopne
mov
test
mov
mov
loopne
mov
mov
loopne
adc
loopne
or
loopne
frstor
loopne
sub
loopne
mulb
loopne
mov
mov
loopne
mov
loopne
cli
cmpsl
loopne
int3
cmpsl
loopne
mull
loopne
ljmp
mov
movsl
loopne
xor
loopne
shlb
cltd
mov
loopne
inc
mov
loopne
loopne
loopne
xchg
cmpsl
loopne
xchg
loopne
popf
mov
loopne
mov
mov
movsb
loopne
mov
test
mov
cmpsb
loopne
stos
cmpsb
loopne
sbb
loopne
dec
movsb
loopne
daa
cmpsl
loopne
mov
loopne
cmp
loopne
ja
loopne
push
cmpsb
loopne
cmc
movsl
loopne
and
mov
cmpsb
loopne
loopne
leave
cmpsb
loopne
xor
loopne
data16
mov
movsl
loopne
adc
cmpsl
loopne
dec
cmpsl
loopne
sti
mov
loopne
insb
movsb
loopne
sti
movsb
loopne
add
test
mov
mov
loopne
jge
loopne
pop
mov
loopne
stos
mov
loopne
test
loopne
ds
loopne
push
movsb
loopne
dec
cmpsb
loopne
mov
loopne
jno
loopne
mov
loopne
xor
mov
movsl
loopne
cmp
loopne
call
movsb
loopne
mov
movsb
loopne
dec
mov
loopne
lcall
mov
cmpsl
loopne
les
loopne
cmp
loopne
or
loopne
and
mov
loopne
jnp
loopne
in
loopne
fsubs
loopne
or
loopne
cmp
mov
mov
loopne
leave
cmpsb
loopne
xor
loopne
movsb
loopne
les
loopne
in
loopne
nop
mov
loopne
xchg
movsb
loopne
loopne
loopne
test
loopne
inc
test
mov
movsl
loopne
pop
mov
loopne
xchg
movsb
loopne
inc
cmpsb
loopne
leave
mov
loopne
mov
test
mov
test
loopne
iret
movsb
loopne
cmpsb
movsl
loopne
in
movsb
loopne
pop
cmpsb
loopne
and
loopne
lods
test
mov
test
loopne
gs
mov
mov
loopne
data16
mov
cmpsb
loopne
cmp
loopne
movsl
loopne
pop
movsb
loopne
int
loopne
fisubs
loopne
push
cmpsl
loopne
lds
mov
mov
loopne
test
loopne
out
cmpsb
loopne
pop
mov
loopne
jmp
loopne
add
loopne
adc
cmpsb
loopne
cmp
loopne
in
loopne
and
loopne
fldenv
loopne
cmpsb
loopne
jno
loopne
and
loopne
fsubl
loopne
jg
loopne
cmc
movsl
loopne
xchg
mov
loopne
shll
loopne
bound
loopne
mov
loopne
loope
loopne
lods
mov
loopne
mov
cmpsl
loopne
push
test
mov
movsb
loopne
das
movsl
loopne
fildll
loopne
mov
loopne
ja
loopne
sbb
mov
loopne
test
mov
cmpsl
loopne
add
loopne
xor
loopne
push
cmpsl
loopne
andl
mov
mov
loopne
lods
test
mov
movsb
loopne
sbb
loopne
movsw
loopne
fisubl
loopne
mov
mov
loopne
shlb
mov
mov
loopne
shlb
loopne
insl
cmpsb
loopne
das
cmpsb
loopne
or
mov
mov
loopne
jecxz
loopne
or
movsl
loopne
mov
loopne
sub
mov
loopne
mov
loopne
arpl
loopne
inc
test
mov
test
mov
mov
loopne
cmp
loopne
test
loopne
mov
loopne
popa
movsl
loopne
fldenv
mov
mov
loopne
loope
loopne
mov
loopne
inc
mov
loopne
mov
loopne
mov
mov
loopne
cmp
movsb
loopne
sub
loopne
repnz
loopne
mov
movsl
loopne
mov
cmpsb
loopne
sub
loopne
std
cmpsl
loopne
or
loopne
in
loopne
andb
mov
test
loopne
xchg
mov
loopne
pop
cmpsb
loopne
jl
loopne
in
loopne
mov
mov
loopne
push
loopne
addr16
daa
movsl
loopne
mov
loopne
out
loopne
inc
movsb
loopne
in
movsb
loopne
cmpsl
cmpsl
loopne
arpl
loopne
cld
cmpsb
loopne
aad
loopne
or
loopne
jmp
mov
loopne
movsb
loopne
pop
test
loopne
shlb
mov
mov
loopne
fldenv
loopne
cmp
loopne
insl
test
mov
mov
loopne
cld
movsl
loopne
mov
loopne
mov
loopne
sub
mov
loopne
shlb
mov
mov
loopne
add
mov
test
mov
movsl
loopne
insb
cmpsl
loopne
inc
mov
loopne
lods
movsl
loopne
jp
loopne
push
cmpsb
loopne
aas
cmpsl
loopne
lea
loopne
push
cmpsb
loopne
ljmp
mov
cmpsb
loopne
mov
loopne
ja
loopne
ds
loopne
xor
mov
loopne
out
cmpsb
loopne
movsb
loopne
mov
loopne
sub
loopne
pop
mov
loopne
add
movsl
loopne
cltd
test
mov
mov
loopne
repnz
loopne
fisubs
mov
cmpsl
loopne
mov
loopne
lahf
mov
loopne
stos
mov
loopne
insb
movsb
loopne
movsb
loopne
and
loopne
nop
mov
loopne
sbb
mov
cmpsb
loopne
cmp
loopne
cwtl
movsl
loopne
mov
loopne
in
movsb
loopne
int3
cmpsl
loopne
sti
cmpsl
loopne
mov
cmpsl
loopne
pop
cmpsl
loopne
adc
loopne
inc
mov
loopne
xchg
mov
loopne
pop
cmpsl
loopne
sbb
loopne
xlat
cmpsb
loopne
shlb
loopne
les
loopne
or
loopne
push
test
mov
cmpsl
loopne
sbb
loopne
push
mov
loopne
pop
movsl
loopne
movsl
loopne
inc
cmpsb
loopne
andb
mov
mov
loopne
cmpsl
loopne
xchg
test
mov
movsl
loopne
mov
loopne
xchg
test
mov
cmpsb
loopne
loopne
loopne
adc
loopne
xchg
test
mov
mov
loopne
dec
movsl
loopne
dec
movsb
loopne
dec
cmpsb
loopne
shlb
mov
cmpsl
loopne
jno
loopne
mov
mov
loopne
or
loopne
out
loopne
inc
test
mov
test
mov
mov
loopne
insl
mov
loopne
push
test
mov
mov
loopne
pop
cmpsl
loopne
out
mov
loopne
mov
loopne
mull
loopne
dec
test
loopne
inc
cmpsb
loopne
sti
movsl
loopne
dec
mov
loopne
daa
cmpsl
loopne
jge
loopne
outsb
mov
loopne
shll
loopne
iret
movsb
loopne
mov
loopne
add
cmpsl
loopne
mov
mov
loopne
pop
test
mov
mov
loopne
and
mov
loopne
add
loopne
adc
loopne
lds
loopne
andb
mov
movsl
loopne
icebp
cmpsl
loopne
iret
mov
loopne
mov
loopne
mov
cmpsb
loopne
mov
mov
loopne
dec
mov
loopne
addr16
sub
mov
loopne
inc
test
loopne
lods
cmpsb
loopne
mov
loopne
ljmp
mov
mov
loopne
push
movsb
loopne
pop
test
mov
mov
loopne
int
loopne
push
mov
loopne
mov
loopne
scas
mov
loopne
add
loopne
shll
loopne
sub
loopne
mov
loopne
lcall
mov
cmpsl
loopne
lods
cmpsb
loopne
jne
loopne
pushf
cmpsb
loopne
adc
loopne
xchg
movsb
loopne
dec
cmpsl
loopne
movsl
loopne
in
test
mov
movsb
loopne
fisubl
loopne
mov
loopne
pop
movsb
loopne
mov
mov
movsb
loopne
pop
test
loopne
loopne
andl
xchg
mov
cmpsl
loopne
pushf
mov
loopne
mov
loopne
std
cmpsb
loopne
ja
loopne
ljmp
mov
mov
loopne
jg
loopne
pop
mov
loopne
add
mov
loopne
movsw
loopne
stos
mov
loopne
lea
loopne
jae
loopne
dec
cmpsl
loopne
mov
loopne
out
loopne
mov
loopne
outsb
mov
loopne
mov
loopne
mov
loopne
insl
mov
loopne
test
loopne
mov
cmpsb
loopne
sbb
loopne
lret
mov
mov
loopne
outsb
cmpsb
loopne
fisubs
loopne
iret
movsb
loopne
mov
loopne
xor
mov
mov
loopne
fbld
loopne
xor
loopne
mov
loopne
stc
movsl
loopne
scas
mov
loopne
cmpsl
loopne
outsl
test
mov
movsb
loopne
add
loopne
jne
loopne
outsl
test
mov
cmpsl
loopne
and
loopne
popf
mov
loopne
ret
movsl
loopne
jb
loopne
dec
cmpsb
loopne
mov
movsb
loopne
popf
mov
loopne
xlat
test
mov
test
loopne
xor
loopne
xchg
movsl
loopne
dec
cmpsb
loopne
mov
loopne
xchg
loopne
mov
test
loopne
xchg
mov
loopne
pop
movsb
loopne
addr16
push
mov
loopne
sbb
loopne
shll
mov
movsl
loopne
cmpsl
loopne
cmp
loopne
mov
loopne
sub
loopne
inc
mov
loopne
push
test
mov
mov
loopne
lods
mov
loopne
pop
cmpsb
loopne
mov
loopne
push
test
mov
test
mov
movsb
loopne
cmpsl
loopne
xchg
cmpsl
loopne
jl
loopne
dec
cmpsl
loopne
mov
loopne
cmpsl
test
mov
mov
loopne
mov
cmpsl
loopne
add
loopne
ret
mov
cmpsl
loopne
cmp
loopne
out
movsb
loopne
sahf
mov
loopne
mov
loopne
cmp
movsb
loopne
out
mov
loopne
add
loopne
js
loopne
dec
movsl
loopne
popf
movsb
loopne
mov
loopne
lock
loopne
lods
test
mov
mov
loopne
pop
loopne
sub
loopne
add
loopne
xchg
cmpsb
loopne
or
loopne
jae
loopne
push
mov
loopne
jmp
mov
loopne
push
test
mov
cmpsb
loopne
mov
mov
loopne
inc
test
loopne
cmp
loopne
pop
test
mov
movsl
loopne
and
loopne
andb
mov
mov
loopne
sbb
mov
mov
loopne
mov
loopne
cmpsb
loopne
aas
test
mov
mov
loopne
jmp
loopne
jge
loopne
movsl
cmpsb
loopne
inc
cmpsb
loopne
and
loopne
jne
loopne
loopne
loopne
pop
movsb
loopne
mull
loopne
lods
movsb
loopne
in
loopne
mov
loopne
dec
cmpsb
loopne
xor
loopne
ret
mov
cmpsb
loopne
and
loopne
lea
loopne
mov
loopne
fsubs
loopne
pop
cmpsl
loopne
mov
loopne
mov
loopne
cmc
movsb
loopne
out
movsb
loopne
xor
mov
loopne
fsubrl
loopne
mov
loopne
imul
into
mov
scas
mov
sbb
inc
add
xor
jne
mov
mov
add
add
clc
sbb
in
cmc
jmp
jo
add
inc
add
cmpsb
clc
inc
clc
push
add
jo
add
adc
bound
add
xchg
mov
add
lret
clc
xor
add
add
add
gs
push
mov
sub
add
xchg
fsts
clc
aas
mov
pop
and
add
mov
push
add
pop
mov
add
and
add
ret
clc
push
dec
cmp
repz
mov
hlt
push
add
fs
mov
mov
add
popf
cmp
lahf
insb
mov
nop
mov
clc
arpl
add
add
add
xor
jo
add
add
add
add
mov
clc
das
sub
clc
and
mov
sbb
mov
add
add
mov
xor
add
and
daa
clc
aas
xchg
ljmp
in
jge
push
add
pushl
clc
xchg
inc
add
aas
dec
xchg
xchg
pop
and
add
loop
dec
fnstenv
add
xor
add
dec
into
adc
das
lahf
scas
nop
stc
pusha
add
jge
out
cmp
gs
hlt
out
mov
xchg
popf
fildl
jecxz
call
adc
add
add
outsl
cmp
inc
add
lods
inc
clc
fildll
jle
sub
sar
clc
leave
mov
pop
clc
or
clc
sti
adc
add
clc
mov
outsl
syscall
clc
push
pop
fisubl
clc
addr16
out
add
add
cmp
cmp
sti
xchg
sbb
inc
clc
clc
jmp
xbegin
fcompl
mov
add
test
push
hlt
lea
clc
pop
mov
add
inc
clc
lcall
stc
sahf
fbstp
mov
sbb
push
int3
cwtl
push
sub
arpl
add
jno
add
push
add
cs
cmp
sub
push
add
in
outsl
and
add
out
sub
add
add
xor
add
jp
clc
or
jge
mov
sbb
add
sbb
insb
adc
add
mov
or
test
mov
clc
cli
adc
jge
clc
scas
aaa
negb
xor
add
jno
add
mov
push
add
fsubrl
mov
add
add
xchg
mov
push
outsl
pushf
and
inc
add
sbb
clc
fmul
int3
xchg
jns
sbb
dec
sar
int
dec
xor
add
sub
clc
cmp
inc
add
sti
mov
add
or
add
pop
cmp
cmc
jmp
inc
add
xchg
jecxz
mulb
clc
inc
add
cmp
add
dec
pop
pop
clc
daa
clc
loope
mov
clc
push
aas
push
cmp
inc
add
dec
mov
loopne
add
add
mov
out
out
mov
test
cmp
add
inc
add
lcall
or
ss
mov
inc
clc
popl
out
out
cmp
add
clc
cmp
add
gs
mov
dec
je
clc
fiadds
leave
pop
clc
fdivl
popf
es
movsb
clc
stos
aaa
xchg
and
add
pop
push
push
add
dec
pop
test
jb
add
test
jg
clc
rorl
dec
movsb
clc
test
ljmp
xchg
xor
add
dec
fs
lcall
push
or
sub
mov
aam
fwait
arpl
add
mov
ficomps
add
movsl
clc
ds
stc
in
mov
clc
cmp
gs
in
repnz
mov
sub
js
lret
jmp
clc
xor
add
clc
repnz
jge
sbb
add
add
mov
push
es
mov
pop
sahf
mov
xor
add
clc
mov
lret
clc
mull
adc
add
ret
add
clc
leave
mov
add
add
push
add
push
notb
add
std
sbb
cmp
cld
fstpt
clc
adc
add
imul
leave
and
add
clc
mov
clc
leave
add
sub
sbb
aad
ret
add
add
sar
or
lock
cltd
stos
fadds
clc
jge
or
dec
dec
mov
cmp
lods
insl
in
addr16
std
and
add
add
add
add
sub
lods
cld
adc
inc
add
in
xchg
and
add
mov
pop
addr16
push
push
clc
in
cmp
clc
movsb
clc
mov
mov
call
sub
add
adc
add
pusha
add
xlat
sbb
clc
js
mov
clc
jge
mov
clc
add
add
push
add
pop
or
add
jg
sar
pop
dec
or
jle
clc
mov
add
add
sub
clc
lods
inc
clc
or
add
jle
cmp
scas
xchg
ljmp
mov
clc
inc
add
into
icebp
cs
sbb
pushf
cmp
stos
cld
mov
mov
clc
mov
push
add
test
cmp
add
clc
add
clc
loop
cwtl
push
mov
add
aad
clc
test
jo
add
cmp
add
jp
add
cmp
cmpsl
clc
cmp
mov
fistpll
and
add
and
add
clc
inc
clc
push
clc
jge
aaa
sub
fistpl
sar
and
add
in
inc
add
add
adc
add
xchg
mov
cli
outsb
mov
jmp
add
nop
jne
outsb
cmp
imul
add
dec
lcall
xor
add
add
jle
mov
es
testl
sub
jns
add
insl
fwait
mov
cmpsb
clc
stos
aas
dec
icebp
sar
jle
mov
add
ja
lea
add
hlt
pop
and
add
std
daa
clc
stos
inc
add
jb
add
clc
push
mov
clc
or
pop
xor
add
add
dec
mov
or
out
pop
cmp
sti
ret
clc
sbb
scas
lret
add
sbb
xchg
gs
stc
je
adc
add
add
mov
clc
jne
arpl
add
push
cs
adc
add
push
clc
adc
add
add
add
imul
clc
xchg
lahf
and
add
add
jle
fcomps
sub
add
push
clc
stc
ret
clc
push
add
adc
add
and
add
or
testb
add
jmp
clc
sub
imul
xor
add
add
or
cmp
aad
mov
mov
mov
dec
mov
add
cld
inc
clc
push
add
sub
mov
hlt
imul
mov
sar
sub
add
clc
mov
clc
and
add
xchg
ja
movsb
clc
mov
add
mov
add
mull
hlt
data16
mov
mov
add
clc
push
push
into
xchg
scas
out
icebp
in
pop
clc
pop
clc
cmp
clc
mov
add
clc
jg
clc
nop
push
adc
cmc
cmp
mov
sub
iret
dec
add
add
dec
scas
mov
mov
clc
cmpsl
clc
aas
pop
cltd
addr16
push
mov
xor
jae
add
cmpsb
clc
pop
sti
lcall
mov
xchg
dec
imul
add
mov
int3
jne
clc
mov
into
xchg
mov
add
sub
push
add
mov
sbb
add
sub
xchg
pop
ret
scas
inc
add
idiv
arpl
add
add
add
dec
jle
clc
xchg
jno
add
add
mov
add
test
mov
sar
inc
add
fmull
call
add
sbb
clc
cltd
xor
add
add
add
or
sar
clc
ds
mov
push
out
or
cli
cs
add
movsb
clc
jle
daa
clc
cwtl
dec
cmp
push
aam
scas
scas
jmp
mov
clc
mov
xlat
jmp
add
add
sbb
xchg
cltd
popa
add
fbld
mov
mov
mov
add
ret
clc
in
sbb
mov
clc
adc
add
add
add
sbb
add
cmpsb
clc
add
pop
add
add
in
fwait
dec
jg
shll
push
jbe
add
ret
dec
inc
add
mov
add
icebp
popa
add
in
cmp
clc
movsb
clc
enter
inc
clc
adc
cmp
mov
xor
add
xchg
add
sbb
pushf
daa
clc
or
pop
cvttps2pi
add
fadd
clc
xchg
imul
xchg
and
add
clc
data16
mov
add
xchg
adc
add
add
rcl
cld
and
cmc
lcall
in
push
sub
push
push
push
push
push
push
call
and
sub
es
push
mov
and
xor
not
test
setne
nop
nop
loop
pop
lea
or
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
test
nop
nop
nop
nop
nop
push
push
push
je
mov
adc
test
jne
ret
pop
jmp
andl
mov
lea
push
push
push
mov
push
lret
call
pop
mov
insl
lret
inc
add
sbb
push
sti
das
or
add
cmp
mov
add
pop
rcll
stc
stos
cmpsb
clc
sub
xchg
scas
mov
add
clc
adc
add
cmp
clc
inc
clc
or
mov
setl
sub
or
jbe
data16
push
fdivs
add
sbb
into
dec
cmp
clc
out
inc
clc
and
add
push
clc
ds
mov
loop
pop
clc
fimull
lret
roll
clc
sbb
push
clc
xabort
sar
insb
scas
jle
xor
add
add
xor
add
imul
clc
add
sarb
jb
add
sbb
xor
add
mov
add
sbb
clc
bound
add
sub
sub
add
xchg
inc
clc
xchg
in
inc
add
js
fmulp
sub
add
test
cli
cmp
out
getsec
mov
clc
xchg
pop
mulb
add
mov
jbe
sbb
push
add
fisttpll
jle
lret
xchg
scas
icebp
fwait
inc
add
movsl
clc
sar
clc
cmpsb
clc
adc
xchg
movsl
clc
sarl
add
inc
clc
cmp
clc
xor
add
mov
xabort
push
fbstp
add
or
add
fs
sbb
clc
fadds
add
xor
sbb
into
xabort
testb
add
add
clc
xchg
clc
and
mov
cmp
mov
clc
test
pop
into
pop
cmp
clc
cmp
clc
inc
clc
push
pusha
add
and
add
jnp
clc
mov
mov
add
cmp
add
mov
add
int3
sbb
add
add
add
mov
adc
add
cmc
ja
pushf
mov
mov
out
or
clc
cmp
add
sub
add
add
push
mov
stos
mov
add
jge
aas
out
inc
add
and
add
add
add
pop
sub
cmp
sub
pop
dec
icebp
and
add
mov
mov
clc
pop
pop
cltd
mov
cmpsb
clc
dec
je
cmp
add
add
inc
add
out
sbb
cmp
loopne
mov
cmpsl
clc
xchg
mov
add
xchg
mov
fstps
fdiv
ret
and
add
rcrb
add
adc
xlat
imul
add
cli
mov
lret
inc
add
push
fwait
and
add
iret
addr16
push
push
clc
popa
add
sub
mov
inc
add
push
add
imul
shlb
add
pushf
and
add
clc
xchg
mov
das
lock
es
sbb
scas
jecxz
hlt
stc
xor
add
sub
aam
sar
and
add
test
arpl
add
loop
ret
clc
test
popf
cmp
add
clc
push
sti
lret
lods
mov
sbb
add
lret
sets
mov
add
stos
movsb
clc
int
add
add
dec
pop
clc
jns
clc
lret
data16
jle
clc
mov
clc
and
add
pop
lret
push
xor
call
adc
add
clc
lea
cmp
add
repz
mov
xor
in
push
jle
incl
add
in
cmp
sbb
mov
jne
clc
cmpsl
clc
loop
sub
mov
add
add
add
clc
enter
pop
testb
add
sub
pop
mov
clc
mov
pop
cmp
js
add
fildl
xchg
ljmp
add
dec
or
pop
inc
add
movups
add
es
out
mov
cmpsl
clc
and
add
add
add
add
add
aaa
scas
pop
jle
cli
push
xchg
xchg
xchg
scas
add
add
sub
movsb
clc
cmc
jns
push
fimuls
cld
fmull
inc
add
scas
lock
clc
push
add
lcall
add
icebp
sbb
clc
sub
clc
test
cmp
add
pop
mov
and
add
lock
push
jns
mov
fcmovbe
pop
cmp
mov
in
mov
xchg
test
out
inc
add
test
mov
jnp
out
out
sbb
out
in
sbb
sbb
mov
scas
add
add
xor
add
jno
add
add
cmp
add
add
add
mov
inc
add
push
rolb
imulb
add
movsl
clc
out
xbegin
push
sbb
add
data16
cmp
pop
clc
sar
cmp
inc
clc
adc
add
mov
and
add
fldl
clc
xor
add
jb
add
add
push
lahf
loopne
clc
dec
dec
sub
add
jp
idivl
mov
clc
cmp
clc
push
jmp
add
out
insb
loopne
insl
enter
mov
xchg
int
clc
outsl
xbegin
add
add
pop
iret
push
add
jae
add
inc
clc
into
push
push
int3
pop
push
add
es
fidivs
mov
aam
add
stc
adc
add
testb
movsl
clc
fwait
out
cld
push
mov
add
das
dec
lret
daa
clc
cli
sub
clc
inc
clc
lock
imul
push
add
and
or
clc
jmp
sbb
pop
int3
add
addr16
sbb
add
dec
ljmp
add
pop
pop
sbb
divb
jl
clc
cltd
stc
pop
cmp
add
sbb
ret
clc
jg
clc
inc
clc
or
add
dec
adc
add
add
and
add
jp
mov
fistpll
add
outsb
bound
add
add
add
shrb
clc
adc
add
iret
lret
mov
clc
insb
rolb
sbb
clc
xor
add
scas
mov
clc
adc
add
add
ds
mov
adc
add
xchg
push
shll
cmp
pop
xor
add
in
cmp
jns
clc
in
mov
sar
add
dec
das
mov
pushf
ret
jle
push
push
pop
dec
dec
xchg
push
add
xor
add
xor
scas
mov
xchg
push
mov
and
mov
inc
clc
push
add
in
jmp
add
mov
add
stc
test
inc
clc
xor
add
add
cmp
clc
add
mov
cvtdq2ps
pop
jle
cs
jae
add
jb
add
cmp
add
add
stos
xor
add
and
and
push
lahf
pop
clc
and
add
sbb
add
lret
adc
clc
inc
clc
stos
sbb
testb
lea
loop
cli
and
xor
xchg
pop
ficomps
pop
fnstenv
inc
clc
ss
clc
push
add
jno
add
and
add
push
mov
xabort
lcall
insl
cli
jle
mulb
add
add
add
dec
push
dec
xlat
dec
lret
iret
in
lods
dec
lods
push
add
sub
add
mov
clc
inc
clc
ss
movsl
clc
add
clc
sub
in
add
scas
xor
add
bound
add
stc
stc
into
jb
add
clc
cmp
add
adc
add
cmp
clc
call
imul
mov
mov
clc
insl
fadd
clc
es
xor
add
clc
and
xchg
sbb
test
clc
mov
mov
mov
add
cmp
clc
lret
cmp
clc
loop
mov
add
fists
ss
mov
clc
xchg
sar
rolb
add
faddl
add
js
clc
push
cmp
iret
xlat
push
add
mul
clc
lea
and
add
mov
lahf
sub
incb
imul
aam
clc
movsl
clc
adc
add
add
or
clc
sub
push
out
push
lcall
add
xchg
mov
add
xor
aaa
mov
icebp
imul
pop
ret
mov
clc
imulb
add
lea
clc
sbb
in
dec
aad
mov
insl
sub
mov
add
clc
clc
xabort
loop
mov
outsl
outsl
fadd
clc
adc
pop
push
fisttpl
or
xchg
lret
jp,pn
cmp
jp
inc
add
es
mov
xchg
repz
js
clc
fs
roll
add
add
push
aas
dec
inc
clc
div
adc
or
push
dec
out
lock
mov
inc
add
ret
clc
pop
movsb
clc
jl
add
cmp
clc
jmp
dec
cmpsb
clc
lret
add
stos
sub
or
test
add
int
idiv
or
cmp
jbe
jge
xor
add
pop
mov
clc
std
cmp
clc
lcall
clc
mov
and
aaa
out
pusha
add
insb
mov
add
jns
inc
clc
push
add
pushf
add
add
add
add
jecxz
inc
clc
test
test
xchg
bound
add
outsl
inc
add
imul
mov
clc
pop
clc
inc
clc
sbb
add
clc
push
clc
out
inc
clc
repnz
adc
add
clc
insb
insl
sbb
xchg
clc
in
js
fsts
fdivl
dec
and
add
loope
push
sbb
clc
inc
clc
mov
add
sar
dec
insl
imul
add
jne
clc
dec
mov
cmp
clc
inc
clc
loope
test
push
out
dec
dec
icebp
cmpsl
clc
and
add
or
repnz
hlt
mov
jno
add
dec
test
add
add
pop
nop
mov
dec
pop
aas
cmpsl
clc
ss
aaa
push
mov
mov
clc
loopne
push
cmp
mov
mov
movsb
clc
je
in
loope
sub
pushf
out
or
mov
stos
stos
xchg
lock
add
fisttpll
and
add
clc
inc
clc
sbb
clc
fisubrl
xor
add
add
clc
dec
adc
dec
add
add
add
test
cmp
add
fucom
clc
ds
mov
and
add
add
in
or
mov
cmp
shll
add
sbb
mov
popa
add
pusha
add
insb
hlt
xchg
insb
xor
add
std
adc
add
mov
dec
cmp
jg
inc
add
aam
cmp
mov
cmp
cmp
sbb
mov
int
outsl
pop
addr16
or
hlt
fdivp
jnp
add
dec
cli
xchg
mov
add
sbb
lret
xchg
cmp
cmc
jno
add
rcr
mov
fsubrp
insb
imul
clc
xlat
cs
js
clc
int
out
jl
or
hlt
xor
add
add
jne
sar
add
mov
adc
dec
mul
clc
cli
int3
lods
icebp
fstl
add
cwtl
or
add
inc
clc
repz
filds
clc
pop
mov
jnp
add
clc
test
push
sbb
js
clc
addr16
cmpsb
clc
jbe
add
push
pop
daa
clc
and
add
out
or
clc
xchg
jl
clc
xchg
pop
mov
clc
aam
sar
pop
pop
dec
popl
loope
sub
cmp
fwait
test
outsl
out
movsb
clc
loop
cmp
sbb
into
bound
add
clc
jnp
cmp
xchg
loope,pn
xchg
or
sbb
add
add
dec
pop
clc
in
jo
add
add
cmp
scas
pop
add
xchg
mov
clc
sbb
clc
loope
and
push
pop
fstpt
push
and
add
call
add
das
push
xchg
popa
add
mov
pop
sbb
add
loopne
push
add
insb
push
add
mov
clc
jb
add
sahf
xchg
fldt
cltd
push
xchg
jge
clc
cmp
add
jle
push
loope
lcall
clc
xor
leave
and
add
mov
add
add
aad
clc
add
dec
mov
pop
push
or
adc
add
cmp
add
add
add
add
imul
sbb
or
sub
cmp
insb
inc
clc
cmp
mov
clc
add
add
arpl
add
jge
mov
add
into
jmp
push
clc
fbld
or
add
adc
jns
sbb
inc
clc
insl
or
dec
repnz
add
clc
mov
xchg
pop
sub
xchg
mull
clc
dec
lods
jne
sbb
sub
jns
clc
das
push
rcrb
jg
pop
jns
out
popa
add
cltd
mov
xchg
add
add
out
pop
xchg
das
aam
mov
inc
clc
sub
mov
add
ja
dec
sbb
add
add
add
add
or
clc
push
clc
pop
xchg
add
add
leave
jl
pop
loopne
dec
mov
cmpsl
clc
inc
clc
cmc
nop
fbld
add
add
add
jle
daa
clc
aad
inc
clc
es
cwtl
mov
add
add
hlt
not
hlt
mov
cmpsb
clc
imul
pop
outsb
mov
add
cmpsb
clc
mov
out
fs
outsl
cmova
xchg
sub
cmpsb
clc
ja
cmp
in
jbe
add
lods
sbb
clc
scas
cmp
clc
cmp
rclb
add
in
add
jge
clc
push
cmp
testb
clc
mulb
add
clc
jp
add
mov
push
xchg
fs
mul
clc
aad
mov
add
and
add
xlat
mov
mov
clc
clc
fstps
add
test
and
add
add
clc
test
fsubp
clc
pop
ret
clc
jp
stos
mov
mov
pop
inc
add
inc
add
inc
clc
sub
repnz
mov
clc
mov
add
ja
lods
dec
fwait
data16
ja
add
shlb
add
loope
bswap
push
add
dec
and
dec
sub
mov
xchg
scas
sbb
fidivl
clc
jb
add
vmaxps
add
out
xor
add
clc
cmp
mov
mov
lods
cmp
lret
sbb
add
add
and
test
loope
mov
cli
in
mov
pop
bound
add
add
sti
adc
add
add
lods
sbb
jae
add
inc
add
dec
aad
cmp
adc
add
sahf
dec
jno
add
cmp
add
fdivl
pop
mov
mov
addr16
xchg
pop
out
in
je
jge
loopne
icebp
out
shlb
add
add
add
cwtl
mov
add
sbb
add
cmp
pop
clc
xor
add
add
add
add
pushf
push
clc
mov
mov
fwait
cltd
push
ljmp
or
clc
and
add
clc
cwtl
inc
clc
mov
clc
repnz
clc
xlat
dec
cmp
clc
and
sar
mov
loope
sub
sar
pop
mov
add
and
clc
in
sbb
cld
jbe
iret
call
add
fs
dec
call
into
xor
cmpsb
clc
push
jne
sahf
data16
push
mov
cld
mov
cli
fs
and
add
incl
add
mov
clc
clc
aaa
xchg
loope
iret
mov
or
add
xchg
cmp
out
rolb
setl
add
in
fdivs
xor
add
push
sar
in
mov
mov
iret
and
add
into
dec
xchg
data16
jle
add
popl
add
add
jae
add
clc
xchg
es
cmp
or
pushf
in
fnstcw
addr16
push
mov
sub
fmuls
add
jno
add
scas
pop
ss
pop
icebp
pushf
push
add
call
call
add
test
add
push
nop
jne
test
enter
sti
cmp
push
inc
clc
popa
add
aaa
inc
clc
clc
inc
clc
dec
cmp
clc
js
stos
loopne
leave
fistpll
add
cwtl
mov
insb
fisubrl
dec
sbb
inc
clc
ret
clc
sbb
push
inc
add
mov
ret
clc
cli
mov
nop
cmp
push
add
push
mov
incb
add
adc
add
add
jmp
or
pop
cmp
push
icebp
data16
or
clc
aam
clc
xchg
loopne
ja
je
leave
ret
clc
mov
dec
test
clc
test
sbb
add
stos
popf
inc
clc
pop
adc
add
sub
add
add
jmp
mov
pop
pushf
adc
add
xor
add
clc
lahf
inc
clc
pop
jmp
add
fisubrl
and
add
clc
daa
clc
sbb
clc
lea
cmc
adc
clc
scas
cs
add
xchg
lods
inc
add
mov
xchg
pop
data16
xlat
aaa
xchg
sub
mov
insl
aaa
out
add
add
mov
mov
mov
outsb
adc
add
ss
add
mov
or
jno
cmp
clc
fwait
pushf
jno
add
ja
or
add
lret
sarb
cs
cltd
lahf
adc
dec
mov
loop
jnp
mov
out
out
or
inc
clc
rorl
pop
adc
add
cmp
testl
clc
mov
sbb
nop
imull
dec
pop
mov
add
or
pop
nop
je
fdivs
add
enter
stos
shrl
xor
add
push
clc
adc
add
push
add
dec
pop
pop
xor
add
add
push
add
xchg
mov
cmp
clc
jmp
add
cmc
cmc
sbb
dec
test
adc
add
fistps
inc
add
xor
add
add
fmull
std
addr16
lret
cmp
add
sbb
add
stos
hlt
push
add
jl
sub
clc
cli
xchg
mov
fisttpll
test
dec
or
mov
fdiv
xchg
mov
es
ss
lret
cwtl
xchg
pop
aad
dec
mov
add
cmp
sti
movsl
clc
push
decl
jbe
out
push
sub
sbb
clc
es
jb
add
and
insb
add
cmc
add
add
aad
jbe
clc
sbb
clc
out
adc
add
cmp
lret
mov
add
mov
out
fidivs
add
clc
nop
mov
sub
add
inc
clc
xor
add
add
mov
mov
fcompl
sbb
out
or
test
int
push
cmp
cmc
lret
clc
and
ror
or
in
add
add
cli
inc
add
xbegin
lcall
mov
add
add
mov
clc
and
cs
push
clc
shll
add
add
scas
outsb
outsb
js
clc
mov
outsl
insl
sub
xchg
inc
clc
imul
sub
cmp
inc
add
clc
ret
clc
adc
jmp
clc
cld
cli
cmp
hlt
ja
cmp
clc
into
xbegin
add
push
dec
push
inc
clc
xlat
fistpl
inc
add
loop
iret
push
jo
add
add
sbb
mov
pop
cmp
pop
clc
insl
shrb
imul
add
cmpsb
clc
mov
imul
clc
dec
xor
inc
clc
aaa
lret
clc
insb
jo
add
add
clc
sar
enter
add
in
or
pop
out
pop
sbb
cmp
mov
in
push
and
add
add
push
lret
pop
xabort
dec
cs
cmpsl
clc
mov
add
xlat
xor
add
dec
ljmp
xor
add
jns
iret
insb
inc
clc
bound
add
add
and
add
pavgw
test
cld
scas
clc
mov
add
daa
clc
fnsave
add
sbb
sarl
jp
clc
add
add
clc
cmp
cmp
add
pusha
add
jae
add
xlat
xor
add
negb
out
push
jmp
xor
add
and
add
add
int3
pop
pop
xor
add
sbb
ret
clc
xabort
and
add
lea
jecxz
mov
add
loopne
xabort
cwtl
jle
clc
imul
add
or
xchg
out
leave
dec
xabort
clc
mov
call
add
add
sar
inc
clc
cmc
test
loope
sbb
add
outsl
cmp
imul
add
push
test
sbb
and
add
push
clc
or
imul
sahf
cmp
test
or
add
add
xchg
test
leave
data16
add
add
mov
mov
add
inc
add
and
add
jae
add
add
jg
jp
data16
ds
in
inc
add
stos
jp
pop
testl
dec
xchg
gs
cltd
cmp
or
add
aad
pop
dec
and
add
clc
in
popa
add
jne
in
dec
sbb
xchg
cmp
add
fs
inc
clc
cmc
imul
jmp
insb
dec
cmp
ret
sahf
shll
add
or
fcmove
inc
add
or
clc
js
ja
clc
push
movsb
clc
xabort
clc
data16
fcmovbe
mov
clc
xor
add
lret
push
dec
dec
aam
add
mov
outsb
fstpl
add
push
and
add
add
fs
xchg
daa
clc
repz
shrl
negb
clc
jmp
push
xchg
cmp
data16
add
add
add
out
repz
cmp
dec
sar
clc
xor
imul
xor
add
sbb
clc
jecxz
clc
push
cs
clc
xor
add
ret
sub
jecxz
inc
add
dec
push
dec
popf
shlb
add
cmp
clc
adc
add
movsl
clc
sub
cmpsb
clc
pusha
add
jo
add
add
xchg
ror
push
adc
add
cmp
dec
push
lea
clc
add
cli
inc
add
mov
jae
add
lods
mov
clc
mov
mov
popf
xchg
loope
int3
xchg
xchg
outsl
cmp
clc
cmp
add
js
cld
mov
add
sbb
mov
add
and
push
add
sub
in
mov
mov
arpl
add
gs
popa
add
inc
clc
movsb
clc
sub
in
push
inc
clc
enter
sbb
add
pop
mov
sub
repnz
sbb
fadds
add
clc
xchg
cwtl
xbegin
push
inc
add
pop
clc
pop
mov
jge
pop
mov
add
xchg
stos
shll
add
es
fstpl
clc
cld
jge
lock
add
add
xchg
cmc
pop
push
in
xchg
scas
dec
cmpsb
clc
xor
add
clc
cmp
add
fisubl
add
mov
push
daa
clc
and
add
hlt
mov
jmp
push
add
xor
sbb
jns
in
aam
xchg
pop
cmp
scas
fistpll
je
clc
cltd
and
clc
lret
and
add
add
aaa
jbe
clc
aas
cmp
add
jae
add
dec
scas
cmpsl
clc
out
cli
negl
sub
stos
cmp
mov
add
add
add
fidivl
clc
mov
fwait
jmp
xchg
mov
aas
mov
loope
or
jge
clc
cmpsb
clc
dec
lahf
push
data16
inc
add
dec
xchg
xchg
lea
adc
add
add
clc
fwait
int3
xlat
push
inc
clc
mov
ja
add
sar
ffreep
clc
repnz
mov
das
mov
int
loope
pop
imul
mov
add
sti
xchg
out
dec
pop
ljmp
insb
jmp
push
xchg
dec
mov
mov
add
xchg
js
cmp
cmp
clc
daa
clc
fiadds
add
sbb
pop
test
icebp
xchg
inc
add
push
add
fwait
sbb
clc
mov
add
imul
fnsave
add
out
pushf
sbb
and
add
pop
or
aas
xor
add
add
mov
in
cmc
sarb
out
mov
xabort
cmp
mov
clc
pop
mov
clc
xchg
lahf
movsl
clc
fbstp
lret
cmp
add
add
add
xchg
gs
xchg
add
jg
clc
xlat
xchg
mov
sbb
scas
data16
int3
leave
add
add
mov
inc
add
sar
rcrl
fimuls
jle
add
divb
stc
xor
add
lret
stos
pop
dec
dec
add
add
loop
popa
add
testl
scas
push
add
xlat
popf
or
iret
or
sti
into
movsl
clc
jbe
cmp
add
and
add
clc
sar
out
leave
adc
add
add
mov
int3
cmp
inc
add
jbe
aas
push
add
inc
add
mov
add
out
loope
xchg
dec
jns
test
sar
xchg
add
dec
inc
add
inc
add
mov
clc
dec
popl
clc
jae
add
out
das
popf
mov
mov
clc
push
test
lods
adc
add
clc
jnp
clc
cmc
test
fildl
adc
add
or
add
add
sbb
mov
add
add
add
dec
fidivrs
clc
jne
jo
add
clc
cmp
std
out
and
add
clc
dec
cmpsb
clc
mov
clc
jg
addr16
xor
add
add
add
clc
movsl
clc
nop
sarb
clc
out
icebp
jne
mov
out
or
dec
mov
cmpsl
clc
sbb
js
out
int3
or
aaa
push
add
jg
clc
jp
fwait
arpl
add
aam
pushf
cmpsl
clc
xor
add
mov
clc
loope
fwait
add
adc
add
movsl
clc
xor
add
add
xchg
cmc
xchg
sbb
dec
insl
jle
clc
xchg
mov
into
mov
lock
add
jmp
and
add
clc
push
inc
add
add
add
adc
add
dec
and
add
stos
lods
popa
add
mov
addr16
sub
add
clc
xor
add
dec
mov
std
into
and
add
clc
pop
mov
int
or
push
stc
cs
out
and
add
add
nop
rclb
add
pop
mov
jle
clc
pop
es
jl
cmp
add
clc
test
jb
add
add
sub
sub
add
jl
add
int3
pushl
clc
mov
lret
add
fbld
add
out
out
sub
or
add
inc
add
fsubr
mov
clc
fsts
add
fimull
push
nop
int
lock
clc
or
clc
and
add
jle
clc
mov
clc
mov
clc
jl
sbb
and
add
fwait
addr16
out
mov
clc
std
xor
add
jle
add
or
and
out
cltd
cmovs
add
into
out
insl
fwait
dec
pop
out
dec
outsl
adc
add
std
dec
dec
ss
stos
xchg
cmc
pop
scas
fists
add
inc
clc
mov
push
pop
jo
add
add
adc
add
lock
data16
cs
aaa
jno
add
cld
cmp
add
pop
dec
and
add
clc
fnstsw
adc
push
add
sbb
aas
xchg
mov
imul
cld
test
insb
ret
clc
adc
add
leave
xor
add
cwtl
inc
clc
enter
clc
fcoml
cld
push
dec
lahf
icebp
push
push
add
mov
jnp
add
pop
cmc
inc
add
sub
sbb
add
pop
clc
dec
cli
cmp
add
shrl
int
xor
add
add
add
add
clc
jnp
add
or
sbb
fwait
nop
dec
jbe
cltd
cmp
push
push
xor
add
shlb
add
xlat
xor
add
clc
mov
lcall
inc
add
ds
add
xabort
call
mov
add
ret
clc
enter
mov
clc
mov
inc
add
cmp
add
loopne
xlat
pop
jo
add
in
or
jmp
jae,pt
add
mov
adc
add
push
push
pop
pop
mov
clc
mov
xchg
test
xor
add
xchg
inc
clc
lahf
je
clc
or
loope
cmp
pop
lods
fwait
mov
jne
arpl
add
xor
add
clc
repnz
add
push
add
gs
push
push
add
xor
clc
bswap
shr
aam
add
cmp
jns
clc
push
add
dec
pop
mov
mov
clc
imul
add
addr16
inc
add
jbe
xlat
jne
clc
inc
add
outsb
mov
jo
add
fs
stc
inc
clc
out
push
add
into
enter
jmp
pop
sahf
sbb
add
movsb
clc
aaa
mov
push
jae
add
clc
push
add
mull
add
mov
clc
push
add
add
loope
or
sbb
add
popa
add
xor
add
xchg
lret
add
add
mov
mov
ja
clc
out
inc
add
cmp
jb
add
lea
lret
pop
lea
add
movsl
clc
jl
sub
add
cmp
clc
pop
pop
addr16
out
mov
push
add
repz
jecxz
lcall
clc
rclb
add
xchg
and
add
add
jp
clc
mov
mov
sub
fwait
aam
jne
add
addr16
push
iret
push
add
sub
add
imul
add
mov
ja
add
and
or
clc
push
fwait
ss
clc
fistl
popa
add
stc
test
aad
clc
mov
clc
inc
add
ljmp
pop
jmp
add
lcall
out
fs
pop
out
mov
aas
in
pushf
mov
clc
push
jmp
add
in
cmp
cmp
jae
add
add
sub
outsb
sub
jo
add
scas
push
add
std
cmp
add
ss
clc
sbb
mov
pop
and
mov
clc
ret
clc
mov
xor
clc
jmp
fcmovnbe
mov
push
clc
inc
add
cmp
ds
lcall
push
add
pop
ret
fcomps
inc
add
sbb
cld
insl
mov
clc
cmp
in
push
loop
outsb
mov
inc
clc
popf
mov
and
add
add
push
add
push
add
mov
add
xchg
push
movsb
clc
dec
sub
xor
add
clc
sbb
add
xchg
mov
xchg
popa
add
xchg
pop
test
add
cmp
clc
xor
add
clc
mov
xchg
daa
clc
inc
clc
add
jae
add
outsb
adc
add
add
scas
jle
arpl
add
add
pop
mov
add
clc
in
and
mov
pusha
add
outsl
jg
clc
sbb
test
xor
add
or
cmp
arpl
add
pushf
adc
add
fdivrl
add
in
sbb
int3
lret
add
cmc
sub
sub
add
inc
add
ds
mov
mov
vmread
clc
cmpsl
clc
and
add
shlb
add
adc
add
push
or
fdivrs
cmpsl
clc
daa
clc
cmp
add
ds
clc
movsl
clc
mov
pop
add
add
push
push
inc
add
icebp
pop
inc
clc
push
pushf
sahf
out
rep
and
add
jbe
aaa
in
shr
inc
add
adc
add
leave
enter
clc
pop
xlat
aam
sub
mov
add
dec
mov
pushf
gs
pop
imul
xchg
dec
xchg
push
das
mov
or
or
add
add
add
xor
add
js
out
lods
push
add
pop
cmc
jge
mov
aaa
mov
add
fcoml
add
int3
jbe
clc
mov
and
add
add
mov
in
dec
loop
pop
push
xchg
mov
clc
xchg
mov
cmp
add
xchg
out
sbb
add
or
jno
add
add
pop
imul
mov
xor
add
xor
add
jmp
gs
and
add
add
clc
sub
shl
in
fs
sub
and
add
xchg
inc
add
dec
nop
push
add
pop
jno
add
jae
add
clc
mov
push
add
lret
xlat
xchg
dec
loopne
mov
stos
inc
add
jnp
mov
clc
pop
clc
hlt
cmp
loop
mov
in
or
mov
das
adc
sub
push
add
arpl
add
jmp
jmp
add
add
add
xor
add
add
add
pop
cmpsl
clc
ja
clc
sar
or
sti
ljmp
add
pop
mov
scas
lock
clc
xchg
pop
or
and
add
jl
mov
sub
sbb
inc
clc
mov
add
xchg
jne
aaa
mov
leave
scas
pushf
pop
sub
push
clc
data16
insl
xchg
aam
fcompl
pop
cmp
push
xchg
arpl
add
clc
jnp
clc
add
xchg
push
clc
mov
ja
fsubr
dec
sbb
push
or
fcmovb
clc
lods
mov
clc
in
ret
clc
pop
mov
clc
dec
in
mov
ret
jae
add
clc
jb
add
add
sbb
add
lret
dec
or
fwait
repz
clc
dec
icebp
dec
sbb
add
ja
sbb
bound
add
clc
dec
mov
data16
sbb
push
das
sub
add
push
add
add
add
add
lahf
pop
fisubrs
das
sti
mov
iret
cmp
clc
jb
add
iret
cmp
inc
add
and
add
add
cmpsl
clc
mov
ret
clc
loope
leave
jns
setbe
add
rclb
sti
int
clc
cli
xor
clc
cmp
xchg
mov
clc
xchg
popl
clc
pop
cmp
add
iret
xbegin
clc
aaa
push
ss
clc
in
loopne
dec
mov
ss
adc
adc
add
add
adc
add
mov
add
daa
clc
xabort
add
add
clc
aad
in
xchg
inc
clc
inc
add
rorb
sub
clc
inc
add
lret
repnz
int
cmp
or
in
pop
shl
data16
loop
fildll
or
out
lea
add
xlat
rcll
mov
outsl
or
int
xabort
clc
inc
add
jno
add
aaa
inc
add
daa
clc
dec
mov
fistpl
clc
movsl
clc
cmp
xchg
cmp
sub
push
add
cmp
out
xbegin
add
sbb
imul
mov
or
aas
shrl
jecxz
dec
push
mov
sub
clc
sbb
mov
cmp
movsb
clc
push
add
fdivl
ret
clc
fmuls
xchg
pop
mov
add
in
sahf
xlat
faddl
add
dec
jecxz
mov
popf
and
add
add
lret
pusha
add
mov
in
xchg
sub
adc
add
add
and
add
mov
fsubr
cmpsb
clc
dec
ret
lods
or
add
scas
mov
clc
mov
and
flds
pop
clc
jle
insl
std
nop
movsb
clc
push
add
mov
clc
xchg
xor
bound
add
dec
pop
clc
mov
mov
inc
clc
sbb
or
push
ret
clc
loope
adc
add
pop
jae
add
push
jo
add
bound
add
add
or
addr16
add
mov
out
leave
jge
xor
cmc
lcall
clc
lock
pop
or
mov
cmp
add
add
aam
xor
add
mov
es
xbegin
sbb
clc
addr16
fdivl
add
jge
sti
in
in
fdivrl
jb
add
push
add
sbb
push
clc
xor
add
sbb
nop
bound
add
adc
add
add
add
pusha
add
cmp
lret
adc
add
rorl
inc
add
add
add
or
cmp
jbe
pop
push
sar
clc
icebp
imul
pop
ja
push
add
sbb
inc
add
add
jecxz
aad
push
add
sub
scas
push
add
leave
mov
push
out
jnp
pop
aaa
jo
add
sar
clc
mov
add
mov
mov
or
cwtl
repnz
add
cs
xchg
push
js
add
shrb
sar
clc
arpl
add
push
clc
test
fisttpl
xor
add
xlat
out
and
add
clc
loop
xchg
clc
jnp
stos
aaa
mov
sbb
and
add
sub
or
scas
mov
pushf
sti
std
xchg
dec
test
clc
btr
add
cmp
test
clc
dec
or
sbb
addr16
ds
negb
jbe
clc
xlat
push
pop
cmpsl
clc
jne
pcmpeqb
jns
loop
mov
clc
movsb
clc
dec
out
fs
cmp
add
sbb
clc
xchg
cltd
dec
enter
add
stos
adc
ret
cmp
fbstp
bound
add
push
stc
lods
and
add
mov
add
clc
dec
popa
add
sub
xchg
popl
add
adc
add
pop
test
add
adc
add
clc
add
add
mov
clc
mov
add
repnz
loope
jecxz
imul
ds
aad
ss
cwtl
imul
clc
cmp
clc
jl
adc
add
pop
test
clc
fs
add
jo
add
jno
add
add
add
mov
clc
lret
inc
clc
xchg
mov
mov
loopne
lret
rcrl
call
push
jle
dec
mov
clc
pop
clc
push
jmp
add
mov
jns
clc
add
mov
clc
mov
xor
add
cmp
or
add
inc
add
xor
add
inc
add
ljmp
push
add
xor
add
mov
in
loope
fnstenv
add
movsb
clc
aad
dec
dec
pop
or
adc
add
outsb
aam
add
dec
adc
add
stos
jle
lods
jae
add
xlat
and
sub
add
in
adc
add
lret
lret
pop
clc
fs
jae
add
add
pushf
or
pop
mov
negl
jp
clc
cld
pop
jle
imul
sbb
cltd
mov
add
insb
mov
clc
inc
add
push
add
pop
pop
sub
loope
int3
mov
or
push
in
test
imul
clc
jns
sbb
jns
fisttps
clc
cmp
clc
outsl
test
shlb
add
jno
add
cmp
clc
sti
push
ss
dec
jecxz
inc
add
mov
jmp
lock
pop
fucomp
lret
lcall
mov
cli
sbb
clc
lret
adc
add
clc
lods
test
mov
jne
mov
mov
ret
clc
jg
daa
clc
das
xabort
sahf
or
clc
inc
clc
and
add
push
add
div
out
inc
add
icebp
xchg
dec
loop
xchg
ret
clc
cmpsl
clc
repz
add
clc
push
add
inc
clc
sbb
out
add
add
loope
daa
clc
mov
add
nop
mov
add
sti
ficompl
add
jns
je
inc
clc
into
lcall
test
cwtl
scas
repz
add
fucomi
cld
adc
sahf
xchg
jmp
jae
add
int3
ljmp
pop
xabort
inc
add
add
add
into
inc
add
arpl
add
or
jp
add
dec
inc
add
sub
mov
aaa
cmp
add
xchg
adc
add
in
sar
xlat
rorb
add
pop
out
jnp
lea
push
add
jnp
or
ds
into
ds
cltd
arpl
add
mov
add
mulb
clc
int3
adc
add
mov
cmp
aam
clc
aas
loopne
in
call
push
jae
add
clc
mov
clc
or
clc
push
add
stos
push
dec
sub
push
dec
or
jo
clc
mov
clc
cmpsl
clc
and
add
sar
clc
adc
add
add
aad
enter
cmovno
add
stos
and
add
mov
out
sub
sub
inc
clc
ljmp
clc
xabort
clc
jbe
jb
add
clc
stos
xor
add
push
jmp
aaa
jp
adc
add
and
fidivs
ljmp
sbb
pop
add
add
xor
push
cmpsb
clc
inc
add
cmpsl
clc
ret
clc
cli
adc
add
jmp
rep
xchg
loope
dec
outsl
nop
xchg
mov
test
clc
mov
pop
mov
add
into
neg
jae
add
cmp
clc
push
clc
fsubs
add
and
mov
add
aaa
clc
xor
inc
clc
shrb
jg
add
inc
clc
push
cmp
fdiv
push
add
fisubl
clc
pushf
lods
jmp
clc
lret
ljmp
fisttpl
clc
and
add
nop
mov
cmpsl
clc
cmc
mov
clc
pusha
add
sbb
clc
add
add
add
pop
xor
pusha
add
push
lods
mov
mov
clc
mov
cltd
gs
sbb
repz
add
push
dec
pop
clc
sti
sarl
clc
rcrb
clc
cmpsb
clc
rorl
icebp
in
fdivr
iret
and
mull
add
fidivrl
ret
clc
sbb
clc
xor
add
add
pop
xor
add
int3
cmp
clc
pcmpeqb
jnp
int
xchg
cmp
add
cmp
sar
sbb
or
clc
rolb
adc
add
clc
ja
test
clc
loope
pop
lret
adc
add
add
fmul
imul
add
dec
in
add
add
and
outsb
xor
add
mov
jae
add
add
add
dec
sbb
test
pusha
add
push
in
ljmp
add
paddsb
add
inc
add
lods
xor
add
clc
ja
mov
loop
or
shrb
test
adc
add
sub
add
adc
add
add
mov
push
add
sub
clc
test
rcrb
and
imul
pop
mov
clc
lret
xbegin
jb
add
xor
clc
ljmp
inc
add
sbb
add
arpl
add
movsl
clc
jns
push
clc
insb
mull
test
dec
fldt
adc
xchg
mov
clc
clc
lret
cmc
cwtl
incl
add
push
jge
pop
xchg
dec
push
jmp
flds
or
add
add
test
mov
divl
clc
push
sbb
mov
cmp
add
mov
add
out
sbb
clc
mov
xchg
jno
add
add
add
loope
pop
mov
add
mov
cmp
pop
fnstenv
add
pop
in
jmp
cmp
clc
cld
rcrl
insl
std
add
enter
test
scas
xchg
push
pop
lods
mov
sbb
mov
add
add
movsl
clc
popf
jns
add
add
std
jmp
clc
mov
and
das
addr16
mov
clc
mov
cmp
lods
push
add
lret
divb
add
int
aas
in
fidivs
add
add
and
add
mov
pushf
repz
adc
add
pushl
not
pop
xchg
hlt
out
xchg
mov
cmp
inc
add
sub
clc
fnstsw
cmp
sub
add
cmpsl
clc
xor
add
add
adc
clc
mov
add
in
mov
mov
iret
xchg
pop
ja
jecxz
fucomi
pop
mov
outsl
shll
add
push
push
add
pop
and
add
clc
test
mov
xchg
enter
in
das
pop
sbb
clc
add
add
aas
out
inc
add
cmp
lahf
fnstsw
sti
cs
cmp
mull
dec
cmp
push
shrl
fs
pop
mov
add
push
leave
out
test
mov
cmp
add
sahf
mov
add
fs
repnz
clc
and
add
popa
add
pop
mov
add
in
stos
insb
fcmovnb
clc
cmp
and
add
jmp
xbegin
add
mov
pop
fsubs
add
pushf
xor
cmp
xchg
push
dec
sarb
stos
mov
lods
and
add
stc
mov
cmpsb
clc
in
aam
pop
scas
cmp
adc
add
clc
loopne
dec
ja
icebp
or
add
mov
push
clc
push
fyl2x
jp
push
add
idivb
sbb
cmp
aas
clc
lods
pop
sub
add
mov
add
mov
mov
cmp
push
add
push
out
mov
add
out
outsb
addr16
daa
clc
imul
dec
dec
jg
out
jnp
push
add
ljmp
clc
hlt
xchg
cmp
xor
add
clc
ret
clc
aad
imul
or
clc
add
add
add
ds
add
into
pushf
sbb
add
ljmp
jp
and
add
or
add
inc
add
inc
add
dec
cmp
out
and
add
ret
clc
mov
clc
sbb
clc
dec
nop
fld
clc
cmc
cld
jno
add
mov
mov
xchg
ljmp
add
sar
js
push
clc
mov
add
movsl
clc
adc
add
aam
add
js
inc
clc
fstpt
clc
xbegin
lods
test
lret
insl
insb
popf
and
add
clc
jle
add
add
or
or
clc
ficoms
add
push
add
jae
add
adc
add
clc
add
add
popf
xchg
adc
add
xchg
movsb
clc
das
addr16
adc
das
jbe
stos
push
add
sub
clc
aad
clc
pushf
ja
or
pop
cs
test
inc
add
jb
add
mov
pusha
add
inc
clc
pop
sti
mov
pop
mov
lock
je
cmc
mov
add
add
add
mov
clc
aas
inc
add
mov
clc
xbegin
clc
sti
repnz
xchg
mov
imul
add
insl
mov
push
add
divl
add
pop
lock
xor
add
add
nop
xchg
inc
clc
sub
cs
cmp
clc
mov
mov
popa
add
jne
cli
cmc
pop
mov
add
int
dec
insb
rorl
add
or
push
add
cmp
xor
add
push
add
jbe
popa
add
das
sbb
clc
ja
clc
sar
daa
clc
xchg
inc
add
dec
push
add
ss
out
loope
movsb
clc
adc
add
sub
clc
nop
clc
leave
scas
and
add
push
add
es
jnp
loop
mov
in
sahf
mov
testl
stc
cmp
ja
sbb
insb
jle
clc
in
add
add
cmp
push
aaa
add
sub
push
clc
insb
mov
jmp
dec
int3
pop
push
add
fcoms
jl
fs
jle
clc
cmp
add
push
rcr
xor
pusha
add
dec
sahf
repz
ret
clc
mov
add
cmp
mov
out
fucompp
inc
add
sbb
dec
mov
add
adc
call
mov
jmp
aam
clc
cwtl
insb
pop
clc
inc
clc
dec
ret
clc
xor
add
movsbl
clc
jp
clc
fildl
inc
clc
call
sub
add
add
inc
add
sbb
clc
mov
pop
stc
cmp
add
femms
mov
sub
adc
mov
neg
push
clc
mov
iret
fldenv
add
add
cmp
bound
add
sub
add
fstpl
inc
clc
shl
clc
dec
flds
pop
mov
push
inc
clc
in
es
mov
push
add
cmpsb
clc
cmpsb
clc
inc
add
bnd
call
xlat
fs
fidivl
add
add
add
clc
xor
add
clc
add
add
add
shl
clc
dec
inc
clc
and
add
or
clc
ljmp
idivb
clc
insl
daa
clc
or
clc
xbegin
sub
clc
xchg
jmp
add
jle
addr16
jle
push
cmp
add
add
xor
and
int3
cmpsb
clc
cmp
sub
hlt
iret
leave
mov
add
mov
rorl
add
push
pop
out
data16
inc
add
es
movsb
clc
loopne
xchg
inc
clc
inc
add
cmpsl
clc
or
cmp
mov
clc
in
ja
xabort
inc
clc
inc
clc
or
pop
mov
add
sar
mov
add
adc
clc
cwtl
push
js
add
dec
repz
loopne
pop
jbe,pt
mov
out
cld
sub
add
lock
push
add
mov
cmp
mov
test
lea
xchg
inc
add
xor
add
clc
or
ds
dec
fisubs
jmp
and
add
add
cli
pushf
dec
xbegin
clc
xor
add
outsl
jb
add
clc
lahf
fs
sbb
clc
outsl
xor
jp
lock
add
scas
cmp
clc
hlt
mov
adc
add
adc
add
clc
fstpt
repnz
mov
clc
dec
data16
cmpsb
clc
mov
add
imul
inc
add
mov
es
adc
add
clc
inc
clc
xor
jp
cmpsl
clc
cmp
add
lret
insb
cltd
jg
sar
clc
test
add
js
loopne
cmp
mov
stos
int3
ja
in
hlt
cmp
wrmsr
add
mov
add
cltd
outsl
insl
or
xlat
sbb
mov
dec
pop
test
lea
dec
repz
or
sub
clc
loopne
aad
loopne
push
mov
add
in
xabort
sbb
add
cld
enter
insl
in
jl
xor
add
sub
push
add
dec
cld
inc
clc
xor
add
clc
dec
cmp
and
add
cmp
xor
add
adc
add
adc
ss
jge
add
fwait
add
add
sahf
xchg
fcoml
add
jp
or
inc
clc
call
mov
sub
mov
clc
movsb
clc
dec
mov
sub
sbb
add
add
mulb
add
es
fst
cmp
clc
popf
sbb
pop
push
add
mov
add
xor
add
clc
push
add
clc
mov
xbegin
clc
cmp
movsb
clc
in
leave
sub
xchg
cmp
inc
add
or
add
mov
scas
pushf
mov
add
inc
add
jne
ljmp
jne
imulb
xchg
add
add
scas
inc
add
add
add
add
add
cli
push
clc
sti
gs
xbegin
xor
sub
clc
inc
add
mov
or
or
inc
clc
mov
xchg
pop
pop
lock
add
scas
jnp
dec
sub
es
sti
add
add
mov
inc
add
test
ds
clc
mov
std
aas
stos
mov
and
add
stos
outsl
push
add
dec
mov
dec
test
dec
mov
clc
push
xor
add
xor
add
add
fildll
clc
pop
clc
insb
xor
add
xchg
jae
add
clc
fbstp
sbb
or
jmp
iret
out
lret
es
mov
clc
into
movsb
clc
cs
push
mov
daa
clc
dec
mov
add
pop
mov
clc
divl
addr16
sub
mov
push
out
cmpsb
clc
mov
add
clc
ljmp
dec
test
jge
xabort
jecxz
jo
add
sub
add
or
fs
mov
clc
ss
sti
lcall
push
popa
add
fdivr
xbegin
add
xlat
dec
sar
movsl
clc
xchg
or
xchg
inc
add
xchg
xor
std
dec
sti
cmc
dec
xor
add
push
cmp
in
cltd
mov
nop
ljmp
push
mov
add
inc
add
dec
mov
inc
clc
inc
clc
addr16
shll
add
clc
test
mov
inc
add
xchg
xor
ja
pop
or
pop
clc
cld
inc
clc
sub
jae
add
add
pop
aas
dec
dec
push
push
lahf
lods
movsb
clc
inc
add
fs
hlt
cmp
cmc
test
into
mov
add
xor
mov
inc
clc
sbb
add
fdivs
or
clc
fwait
lahf
lcall
add
push
ret
clc
nop
xor
add
fstpl
xchg
dec
lcall
pop
mov
clc
dec
cli
add
add
popa
add
jmp
add
ret
clc
call
clc
cmp
ds
fdivp
pushf
xchg
mov
call
dec
mov
inc
clc
xor
add
add
movsb
clc
mov
mov
clc
adc
add
repz
stos
loop
fists
add
pop
fmuls
clc
outsl
pop
add
cmp
or
add
or
pop
scas
scas
push
dec
cmp
lret
vcmpps
inc
clc
loope
sub
add
mov
mov
insl
add
cs
pop
addr16
dec
xbegin
adc
add
pop
clc
dec
mov
inc
add
jne
inc
add
std
sbb
mov
imul
out
jp
xor
add
popf
clc
pushf
test
addr16
pop
aas
test
add
mov
es
sbb
clc
in
test
add
add
cmp
add
dec
mov
loope
lret
add
and
inc
add
or
dec
stos
and
add
xor
add
add
mov
adc
add
clc
dec
xabort
cld
test
clc
push
enter
clc
pop
or
add
repnz
add
js
inc
clc
push
cmpsb
clc
jnp
addr16
test
add
jb
add
ret
add
iret
xchg
test
clc
sbb
add
add
jne
push
test
sbb
scas
xbegin
outsb
ja
clc
cmpsb
clc
pop
shll
lahf
sbb
pusha
add
imul
mov
clc
addr16
jge,pn
movsb
clc
daa
clc
idivb
or
pop
mov
fcompl
in
mov
add
ret
xor
add
add
data16
mov
add
cli
sar
ja
add
jnp
bound
add
clc
pop
xor
add
outsb
test
mov
jmp
add
add
call
clc
outsl
jne
clc
fwait
fs
pop
hlt
imul
test
adc
add
clc
adc
add
dec
aas
xor
add
add
dec
sbb
clc
push
and
add
inc
clc
jge
mov
add
jg
jle
out
xchg
je
xabort
xchg
test
movsl
clc
adc
adc
add
pop
mov
add
push
pushf
adc
ljmp
add
add
add
fucomip
test
cmp
clc
xchg
and
add
fwait
out
jp
outsl
lods
imul
mov
ja
xlat
sahf
int3
cmp
add
insl
clc
add
or
clc
loopne
sbb
mov
out
dec
test
xchg
mov
xchg
xchg
pop
sub
ficoml
add
cmp
clc
mov
add
mov
add
shrb
inc
clc
aad
clc
xchg
addr16
or
jecxz
data16
jp
jo
add
clc
in
mov
add
pop
clc
mov
add
pop
mov
iret
lods
mov
clc
xor
mov
add
sar
mov
add
lods
inc
add
add
add
clc
add
add
fnstcw
lahf
xchg
punpckhbw
add
add
cmpsb
clc
movsl
clc
in
daa
clc
sti
jnp
clc
insl
std
gs
sbb
clc
jbe
add
iret
sbb
out
stos
stos
adc
add
add
mov
clc
mov
xchg
and
add
add
frstor
add
iret
sub
clc
notl
add
cli
in
mov
lods
imul
push
add
push
mov
clc
mov
in
cmp
add
mov
add
sbb
clc
or
shlb
add
sbb
clc
xchg
push
push
add
add
pushf
fwait
and
add
adc
add
add
xor
add
clc
xor
add
mov
imul
mov
push
add
inc
clc
cmc
loope
je
xchg
shlb
add
cli
ret
fbld
add
clc
or
add
xchg
xlat
arpl
add
ret
clc
je
clc
xchg
add
add
clc
or
cs
add
fdivl
add
inc
add
das
mov
clc
lcall
sub
add
int
sar
mov
clc
jmp
clc
ljmp
in
inc
clc
fldenv
data16
jp
out
ficoml
clc
or
add
add
mov
mov
clc
dec
adc
add
and
add
mov
hlt
enter
pop
lret
aam
je
add
or
fld1
xchg
data16
push
add
jle
sbb
add
push
cmp
int3
cmp
cld
fsubrl
mov
clc
into
stc
add
add
ja
mov
lahf
push
add
stos
jecxz
pop
clc
push
xor
add
clc
dec
cmp
dec
test
inc
add
hlt
ds
add
mov
add
add
jno
add
stos
lods
cmc
pusha
add
or
mov
clc
or
das
dec
mov
add
cltd
fs
sbb
add
inc
clc
lahf
mov
mov
clc
out
inc
add
mov
lods
pusha
add
xchg
aam
xor
add
lahf
mov
add
xchg
lods
mov
ficompl
add
out
addr16
jmp
clc
into
or
or
jns
adc
add
fisubl
add
mov
and
add
pusha
add
std
aas
pop
out
pop
mov
cwtl
pop
inc
clc
jbe
sahf
xabort
sti
cmp
add
cmpsl
clc
es
cmp
adc
add
clc
add
add
add
and
add
add
add
push
add
js
loop
aam
push
add
cwtl
into
fmulp
pop
pop
or
clc
sar
in
pop
inc
add
pop
push
sar
xor
add
add
cmp
cmp
or
add
jae
add
sar
clc
dec
call
clc
xchg
cmp
add
sbb
into
or
cmc
push
movsl
clc
lahf
pop
into
mov
fwait
in
mov
or
add
pop
and
add
pusha
add
nop
mov
loop
sbb
add
push
insl
jbe
clc
dec
jp
stc
loop
pop
test
js
dec
pop
inc
add
js
clc
fistpll
add
cmp
clc
rolb
clc
pop
popa
add
mov
push
clc
in
cld
pushf
sbb
clc
ficompl
xor
add
gs
pop
push
cwtl
dec
xchg
clc
add
add
mov
add
push
add
dec
rcr
or
cwtl
into
cmpsl
clc
mov
and
add
fwait
adc
add
clc
and
add
ss
popa
add
jle
push
data16
stos
xchg
ljmp
test
lock
sub
clc
adc
add
mov
mov
clc
cmp
dec
mov
and
add
cmp
es
inc
clc
inc
add
sub
jl
mov
cs
leave
dec
out
test
cmpsb
clc
or
cmp
clc
mov
push
repnz
clc
adc
mov
clc
xlat
ljmp
in
mov
clc
inc
add
out
adc
add
lret
add
and
add
mov
gs
pop
adc
add
clc
sbb
add
cltd
test
in
mov
fmuls
sub
jle
add
mov
dec
inc
clc
in
xchg
loopne
push
ret
add
in
cli
rorb
inc
clc
pop
push
mov
sbb
lcall
test
mov
sar
mov
clc
test
clc
fcmovu
dec
or
add
cmp
insl
imul
add
sbb
push
push
clc
pop
push
add
sub
arpl
add
sbb
xchg
mov
test
cli
in
dec
filds
adc
add
add
clc
fsts
add
adc
add
cmpsl
clc
je
je
add
addr16
dec
pop
cmp
xabort
inc
add
scas
ret
lods
sbb
clc
pop
pop
inc
add
jg
push
jne
xabort
clc
out
fdivrs
cld
inc
clc
cmp
mov
mov
lret
and
sahf
outsl
std
addr16
pop
insl
or
and
add
add
rol
clc
out
cmp
cmpsl
clc
sbb
clc
and
and
add
jmp
push
add
and
add
in
pop
add
add
xchg
imul
add
leave
pop
out
mov
add
out
cmp
add
fildll
clc
push
or
inc
add
dec
out
clc
nop
jmp
pop
popa
add
fisttps
add
into
jl
shlb
mov
add
xor
add
clc
lcall
xlat
movsl
clc
mov
jno
add
outsb
shlb
jg
xchg
iret
imul
clc
or
insl
stos
xabort
pop
pusha
add
ss
dec
dec
outsl
mov
add
clc
ret
dec
lcall
push
add
pop
push
add
faddl
add
push
xchg
rcrb
sbb
clc
sub
addr16
out
out
mov
clc
aam
mov
xchg
gs
cmp
or
testl
add
je
clc
cmp
add
add
xor
mov
clc
push
add
and
add
mov
mov
cmp
sub
cltd
fwait
jne
xbegin
clc
sar
xor
add
add
mov
add
pusha
add
sub
adc
add
iret
lock
ss
add
mov
add
jp
clc
daa
clc
movsl
clc
divps
add
call
add
clc
fwait
and
push
add
std
mov
inc
add
arpl
add
jecxz
shlb
loope
push
rol
clc
mov
jg
clc
hlt
inc
clc
pop
std
mov
call
clc
add
add
or
push
adc
add
mov
add
pop
loopne
sub
or
add
mov
sub
push
cmp
clc
push
clc
add
add
lods
cmpsb
clc
fsubs
mov
je
mov
add
inc
clc
inc
add
dec
xor
add
clc
or
pop
je
add
repnz
and
add
out
and
xchg
cmp
ja
clc
inc
add
xor
add
inc
clc
in
dec
push
mov
popf
pop
clc
add
mov
add
insl
shr
cmc
pop
mov
add
pop
dec
xor
add
add
add
clc
nop
add
add
sub
iret
xchg
lcall
mov
adc
add
xchg
xbegin
add
ret
clc
inc
clc
xor
add
clc
lret
in
push
mov
clc
imul
clc
mov
lods
popf
mov
das
add
add
repz
add
push
add
popa
add
mov
aam
mov
jmp
clc
fidivrs
push
add
adc
add
test
inc
clc
jns
sar
call
es
daa
clc
jecxz
shlb
add
xchg
xlat
xbegin
add
add
clc
pushf
mov
bound
add
mov
mov
clc
pop
stc
adc
add
sub
mov
test
fs
or
stos
pop
cmpsl
clc
out
daa
clc
mov
clc
mov
mov
out
mov
ljmp
clc
in
rcrb
clc
inc
add
pop
clc
adc
add
clc
inc
add
ret
clc
scas
inc
clc
outsl
or
clc
sbb
add
ljmp
clc
and
add
insb
scas
sub
add
clc
push
mov
arpl
add
dec
xchg
clc
mov
mov
mov
enter
xchg
pop
das
add
add
clc
lret
inc
add
add
add
add
cmp
out
shlb
add
mov
clc
mov
clc
cmp
cmpsl
clc
into
test
pop
add
add
add
cwtl
lods
sbb
call
lret
mov
xchg
jns
fwait
popf
es
outsl
popa
add
cmp
push
pop
push
or
add
clc
enter
cmc
jg
and
add
clc
aaa
testl
add
dec
fwait
cs
incb
imul
adc
add
add
popa
add
gs
aam
clc
jg
cmp
add
das
jge
lahf
lods
bound
add
insl
lods
xor
add
clc
cltd
test
jecxz
inc
add
sbb
add
add
add
add
clc
movsb
clc
ja
mov
mov
inc
add
or
clc
mov
add
cmp
xor
sbb
add
fwait
sbb
add
loope
daa
clc
xor
add
mov
clc
or
aad
cmp
clc
mul
clc
pop
ja
clc
jg
inc
add
stos
cmp
inc
add
xchg
xchg
dec
inc
clc
bound
add
add
push
jns
sti
ss
and
add
add
jne
add
mov
and
add
aaa
mov
clc
out
movsl
clc
mov
clc
in
insl
lods
mov
fs
mov
xchg
or
or
add
test
clc
pop
adc
add
cwtl
xchg
cmp
or
bnd
add
lcall
js
out
mov
xchg
xor
xor
add
call
mov
cltd
es
rcr
and
add
or
clc
xchg
jge
clc
shrb
clc
sar
push
mov
add
dec
sbb
add
clc
lods
arpl
add
fxch
test
cltd
int
data16
xchg
rcll
and
add
int
rolb
outsl
notb
add
clc
cmp
clc
adc
add
clc
ja
mov
add
fistpll
fisttpl
add
cmpsb
clc
lods
loopne
psraw
xchg
xchg
or
dec
dec
dec
ja
inc
clc
cmp
inc
add
jecxz
adc
add
sbb
xchg
jns
clc
repnz
flds
add
clc
push
data16
xor
gs
leave
lahf
or
clc
push
add
xlat
xlat
adc
add
mov
add
xor
clc
cmp
stos
dec
sbb
clc
es
lret
or
xor
add
or
clc
cmp
clc
dec
sub
clc
int
clc
dec
push
add
push
add
mov
clc
jge
jecxz
nop
mov
fcoms
mov
into
insl
in
addr16
xor
add
cmp
adc
add
data16
sahf
dec
xor
add
clc
mov
clc
inc
clc
std
into
stos
sub
sub
push
add
push
jmp
cmp
add
nop
cmp
adc
add
aaa
inc
add
sbb
aaa
lret
scas
enter
add
in
sbb
cltd
repz
clc
cmp
and
add
hlt
rorl
inc
add
repnz
xabort
jmp
jae
add
in
push
scas
js
unpcklps
popl
js
clc
mov
add
clc
mov
add
add
lahf
test
shlb
cmc
sbb
in
ss
outsb
jmp
clc
loope
pop
std
mov
xchg
mov
sbb
clc
loop
pop
or
add
jl
decb
add
add
clc
aaa
xchg
pushf
fcomps
jg
sub
and
add
add
or
sti
fsts
add
mov
xor
call
testb
js
popf
mov
add
lods
test
loope
test
out
mov
mov
and
add
add
lock
mov
mov
testb
or
jecxz
pop
inc
add
inc
add
ljmp
add
add
add
and
add
push
add
inc
add
sub
imul
lock
stos
sahf
mov
add
out
mov
mov
add
clc
lcall
movsb
clc
add
arpl
add
add
add
push
inc
add
mov
mov
sbb
jecxz
xchg
add
add
mov
js
jns
mov
fimull
pusha
add
je
fstl
gs
mov
add
xor
add
add
ds
or
clc
pop
mov
add
dec
pushf
inc
add
xor
fldcw
ret
cmp
lods
cmp
out
add
add
add
ljmp
add
inc
clc
sbb
push
add
jmp
hlt
insb
inc
clc
popf
mov
cli
xchg
clc
mov
jge
add
mov
clc
add
cmp
clc
dec
cli
cli
imul
jns
inc
clc
mov
pop
or
cmpsb
clc
shr
mov
sar
jb
add
mov
pop
iret
aam
fcomip
pop
nop
icebp
push
add
xchg
mov
add
lods
ja
clc
out
bound
add
add
ds
cmpsb
clc
test
add
add
cmp
pop
xchg
popf
imul
or
fnstsw
mov
add
or
clc
push
add
push
add
xchg
or
ss
add
sbb
clc
icebp
dec
sub
add
jne
int3
xchg
lock
clc
mov
dec
jge
mov
add
test
jl
clc
push
add
inc
add
clc
sub
mov
mov
push
out
dec
mov
clc
cmp
add
add
add
dec
mov
add
clc
jl
clc
icebp
lret
xor
clc
scas
jge
add
stos
movsl
clc
jbe
pop
sub
jnp
pop
push
add
mov
addr16
xlat
push
leave
pop
pop
mov
aaa
lock
popf
push
add
rcrb
add
scas
jecxz
ficomps
dec
clc
std
mov
int
dec
into
sbb
es
push
add
lret
xor
add
stc
mov
add
aas
push
add
jb
add
and
add
cmp
clc
add
sti
scas
dec
and
add
cmp
add
stos
call
jo
add
fiadds
clc
xbegin
adc
add
and
add
add
iret
rol
clc
or
clc
mov
add
jb
add
clc
das
push
clc
jb
add
add
sbb
push
add
sub
call
stos
or
xchg
xchg
dec
pop
pop
leave
clc
fwait
xchg
in
xlat
out
sbb
add
clc
test
add
js
add
mov
add
dec
mov
clc
ds
push
mov
dec
push
xor
add
clc
iret
icebp
movq
jp
add
scas
fldenv
add
ss
loopne
movsl
clc
imul
add
in
pop
rol
clc
mov
mov
adc
jno
add
sbb
add
push
aam
lahf
mov
rcl
ljmp
fadds
add
stc
movsl
clc
sub
cmp
clc
int
fldln2
mov
out
inc
add
mov
mov
add
inc
clc
cmp
xabort
lea
imul
mov
clc
add
add
dec
aaa
adc
add
clc
pop
or
fbstp
dec
mov
cmp
clc
fldenv
add
lahf
push
lods
scas
mov
mov
add
and
add
mov
xchg
mov
xor
pushf
sbb
add
inc
clc
jmp
dec
test
and
add
add
cmp
clc
rorl
pushf
jecxz
aad
cs
sahf
clc
bound
add
inc
add
xchg
jecxz
xor
add
int
add
add
xchg
jns
push
cpuid
clc
fs
or
sbb
sbb
out
pop
xor
add
clc
test
add
add
sub
clc
mov
clc
cltd
xchg
ja
sbb
rcll
add
add
add
xchg
jge
das
mov
in
sub
clc
es
inc
clc
lahf
jmp
clc
mov
aaa
clc
sbb
add
fnstcw
xor
add
clc
sub
xchg
popa
add
jb
add
cmp
add
add
mov
cmp
jbe
mov
dec
pusha
add
data16
int
pop
xchg
adc
test
mov
loop
mov
lods
sub
imul
outsb
push
clc
inc
add
pop
repnz
adc
add
fldln2
sahf
sbb
adc
hlt
and
add
add
adc
add
mov
shll
clc
mov
lret
or
iret
dec
sub
ja
clc
outsl
clc
popf
mov
and
clc
out
mov
ja
clc
pop
clc
or
mov
add
xbegin
es
repz
jl
lret
add
mov
add
clc
stos
dec
mov
xchg
call
in
mov
pop
jb
add
add
addr16
outsb
cmp
mov
clc
push
inc
add
out
imul
mov
push
push
movsl
clc
inc
clc
loopne
popa
add
clc
add
add
clc
int
fwait
pusha
add
stc
sub
out
scas
dec
fistps
adc
add
xchg
ja
add
outsb
pop
mov
ret
int3
cmp
add
popf
cmpsl
clc
or
aaa
push
add
lret
clc
dec
add
add
mov
sahf
incl
add
repnz
clc
hlt
push
fwait
xor
add
add
loope
cmpsl
clc
mov
loopne
shrl
stos
pop
xor
add
fmulp
push
sahf
inc
clc
mov
add
clc
jg
cmp
xor
add
cmp
int3
push
clc
adc
add
add
enter
clc
xchg
and
add
clc
fmull
or
add
ror
lahf
enter
add
clc
xchg
test
clc
lods
loopne
add
add
ret
clc
loopne
jmp
cmp
ret
clc
xabort
push
add
mov
into
or
pop
pop
pusha
add
lods
push
add
jg
notb
jnp
in
and
add
test
inc
clc
sti
std
inc
clc
lahf
jnp
lea
cmp
cld
pop
imul
mov
jb
add
daa
clc
jge
xor
gs
stos
push
add
mov
add
std
mov
cmp
pop
clc
mov
clc
xchg
sub
xchg
push
out
test
mov
or
clc
add
add
test
or
add
add
or
dec
xchg
dec
fidivrl
ja
lret
aad
add
and
add
movd
pop
clc
or
add
scas
pop
ss
add
mov
xchg
push
outsl
cmp
jo
add
arpl
add
mov
clc
data16
mov
pop
clc
cld
inc
add
inc
add
push
pop
dec
clc
and
add
jnp
scas
sub
cs
or
clc
out
movsb
clc
in
sar
aaa
scas
ljmp
fwait
jmp
pop
jg
sub
sar
clc
dec
add
add
add
add
add
add
rorl
movsb
clc
jbe
pop
dec
pop
cmp
inc
add
cmp
loope
clc
mov
imul
clc
pushf
loope
ret
jmp
mov
sbb
clc
xabort
add
add
fisubrl
lahf
add
add
mov
add
sbb
xchg
aaa
enter
into
dec
push
add
fs
push
add
test
clc
js
clc
pop
scas
sub
adc
add
outsb
push
xabort
mov
clc
mov
clc
das
mov
mov
add
incb
add
int3
fildll
rcrb
jbe
add
vunpckhps
std
push
push
jne
fwait
jmp
adc
add
jne
cmp
add
fwait
jmp
aaa
sub
icebp
adc
clc
mov
out
cmp
loop
in
mov
lods
dec
inc
clc
or
jns
pop
inc
add
push
add
shr
enter
add
pop
aam
fwait
scas
addr16
pop
mov
mov
daa
clc
xchg
xor
sar
clc
mov
std
inc
clc
mov
jmp
jmp
cmp
fldenv
jmp
fs
imul
clc
fucom
clc
xor
add
stos
fsubs
xchg
clc
sar
xchg
rcll
pop
test
scas
ja
popa
add
test
pop
inc
clc
dec
pop
push
clc
mov
imul
popa
add
xbegin
add
fldenv
ret
clc
mov
fcoms
loopne
dec
sar
adc
add
into
mov
clc
aas
push
jne
inc
add
pop
push
sahf
shrb
mov
cmp
clc
clc
sub
notl
add
dec
xchg
int
clc
jo
add
flds
add
clc
loope
ret
inc
add
fcomi
mov
fcom
push
add
imul
lods
inc
clc
sbb
out
and
roll
aaa
lahf
jg
inc
clc
or
or
cs
dec
and
push
add
lret
push
call
cld
push
ret
scas
insb
clc
cmp
sar
clc
mov
sub
add
mov
sbb
sar
xlat
in
inc
add
scas
adc
into
push
cmpl
fwait
jmp
scas
sbb
jb
add
sub
add
call
gs
sar
cmpsl
clc
dec
pusha
add
clc
push
add
add
add
clc
mov
clc
std
rolb
add
mov
inc
add
mov
add
stc
pushf
push
ret
ficompl
sti
cmp
add
jns
cltd
scas
mov
dec
xor
add
add
add
inc
add
bound
add
fstp
clc
imul
cmpsl
clc
push
repz
add
jmp
dec
cmp
inc
clc
xor
add
push
add
fstps
pop
insb
fdivrs
xor
add
movsl
clc
imul
clc
and
in
cmp
add
jmp
mov
call
jmp
popa
cmp
xchg
mov
clc
pop
xor
add
clc
and
add
add
jp
clc
mov
clc
fincstp
xchg
jae
add
cmp
in
mov
clc
iret
xchg
dec
cli
stos
cmp
clc
inc
clc
shl
outsb
push
mov
cmp
inc
clc
pop
adc
add
add
add
add
jecxz
clc
mov
mov
clc
inc
clc
dec
test
fadds
clc
and
add
or
push
imul
add
pop
xchg
dec
inc
aas
loop
nop
jbe
clc
jecxz
dec
stc
idivb
clc
sbb
or
add
clc
fs
mov
clc
or
das
loopne
xor
add
stc
mov
cmp
push
add
sub
clc
mov
clc
mov
insl
and
aad
cmpsl
clc
adc
add
add
add
add
push
cwtl
stos
ds
out
lock
cmc
and
fsubr
pop
lock
add
add
bnd
clc
push
add
add
pusha
add
cmpsl
clc
xor
add
lret
cltd
mov
fimuls
sti
xor
repnz
cltd
icebp
mov
clc
dec
cmp
add
fwait
jmp
sub
jne
clc
adc
add
lret
lock
adc
add
add
add
push
pusha
fwait
jmp
push
test
sub
add
push
ror
data16
jno
add
clc
xchg
adc
add
aas
adc
aad
clc
xchg
pop
clc
mov
clc
shrl
xor
clc
hlt
sbb
add
inc
add
jo
add
clc
xchg
sub
xor
add
push
fcoms
clc
sahf
fwait
cli
xchg
fisttpll
js
clc
push
add
cmp
add
xchg
cli
test
fimull
add
mov
push
into
jg
pop
int
inc
clc
jle
or
add
mov
ss
out
out
xchg
sbb
add
adc
add
ret
fwait
or
inc
clc
and
add
add
and
add
xor
pushf
cmc
gs
pop
and
add
bound
add
add
lods
xor
add
add
pop
clc
push
movsl
clc
sbb
jno
add
pop
clc
clc
inc
add
cmp
clc
in
push
mov
fwait
jmp
scas
lea
add
cmp
iret
add
das
inc
add
push
add
pushf
int
jl
cmp
add
fwait
jmp
inc
jp
das
in
add
clc
dec
push
negb
and
add
scas
imul
add
xchg
sbb
add
mov
test
negb
clc
push
add
dec
jmp
mov
and
push
ret
cmp
mov
or
sahf
pop
pop
sub
pavgw
or
mov
es
inc
add
fwait
rcrl
add
push
add
pop
cmpsb
clc
js
xlat
mov
clc
pushf
jecxz
jno
add
mov
fwait
jmp
das
cmp
stos
jno
add
add
sub
fimull
pop
clc
sub
and
add
and
imul
aad
clc
pop
and
add
or
clc
ret
or
sar
xor
add
cli
jnp
add
xor
add
add
cmp
add
sbb
clc
loopne
nop
pop
and
xabort
add
pop
stos
ja
pop
mov
into
imul
stc
pop
xchg
xchg
hlt
mov
jo
add
enter
aaa
mov
add
dec
push
jge
pop
push
jmp
fwait
jmp
adc
lahf
inc
clc
lea
fistl
add
clc
xchg
pusha
add
loope
sub
sbb
out
xchg
pop
cmc
xchg
cmp
add
add
mov
or
clc
jl
xchg
pop
ret
sub
add
add
push
add
mov
jp
incb
add
add
push
add
push
push
icebp
sbb
sar
push
add
lret
dec
imul
pop
into
in
hlt
in
cli
mov
inc
clc
sbb
test
add
add
clc
in
test
xchg
addr16
mov
push
ret
nop
push
mov
xchg
adc
add
or
clc
or
clc
ja
mov
pop
cmpsb
clc
fnstcw
push
cld
mov
inc
fwait
jmp
xchg
sub
sub
add
lahf
rep
adc
add
movsl
clc
cli
add
add
mov
add
xchg
sbb
enter
add
popf
mov
dec
sahf
ret
jb
add
jne
add
addr16
jne
add
lods
sub
pop
and
add
lahf
imul
sbb
add
clc
pop
sar
add
xchg
inc
add
jo
add
mov
pop
insl
lret
push
jle
clc
sub
and
jb
add
clc
cwtl
call
clc
adc
add
lahf
nop
aas
lcall
into
dec
popa
add
mov
gs
or
add
add
sbb
add
idivl
clc
stos
out
hlt
test
clc
mov
push
clc
add
add
dec
cli
fcmovnbe
mov
sbb
ljmp
mov
pop
js
cmp
js
jnp
clc
push
movd
add
insl
pop
jecxz
mov
cmp
clc
into
add
push
add
inc
add
sar
clc
out
shrl
xor
clc
in
adc
add
add
dec
ljmp
addr16
sti
lods
int3
sub
clc
push
in
leave
jp
lcall
and
add
clc
mov
clc
jns
clc
clc
push
mov
clc
pusha
add
fs
mov
cmpsl
clc
jp
pop
mov
clc
jnp
out
bound
add
add
mov
lahf
imul
add
add
inc
clc
pop
mov
sbb
add
aam
inc
add
decl
mov
push
fwait
jmp
inc
push
cmp
pusha
add
lods
inc
add
cmpsb
clc
stos
out
or
ds
rol
clc
inc
jmp
or
add
pop
leave
cmp
ds
in
mov
lods
mov
push
ret
ja
rcll
add
mov
sub
xor
std
pop
ss
xchg
test
addr16
jo
add
cli
xchg
jmp
push
or
fdivrp
sub
ja
clc
fstpt
cld
or
ret
clc
movsb
clc
jae
add
add
fwait
int
jne
inc
clc
loop
dec
adc
add
cmp
lahf
sbb
clc
decl
mov
sub
add
scas
xchg
cwtl
loopne
out
or
inc
clc
lahf
shl
clc
push
lret
add
add
or
adc
add
imul
sbb
or
leave
sarb
push
rcr
and
nop
cmp
xchg
jg
xchg
dec
push
dec
add
add
sbb
aad
loope
pop
and
add
clc
sar
mov
clc
xchg
mov
add
push
add
enter
clc
das
or
gs
sar
mov
clc
mov
add
clc
ret
loop
loopne
jmp
add
mov
push
sar
daa
clc
mov
jmp
clc
cmp
sbb
mov
push
add
push
add
mov
add
and
dec
out
in
pop
xor
add
pop
repz
mov
clc
jp
cld
cli
jne
out
and
add
pop
xor
add
jmp
jge
sub
clc
and
add
in
pop
clc
sbb
add
fildl
hlt
loopne,pt
scas
insl
test
sbb
push
add
xchg
cmp
clc
cmp
clc
fdivs
add
add
jbe
push
add
push
add
mov
inc
clc
xor
add
add
xor
call
clc
dec
shl
cmpsl
clc
jl
cmpsl
clc
push
jp
bound
add
mov
clc
dec
out
popf
mov
movsl
clc
lods
xor
add
clc
insb
dec
push
push
xor
add
out
xor
add
clc
pusha
add
cli
inc
clc
and
jg
cld
add
add
add
xchg
push
test
cld
push
ret
cmpsb
imul
mov
add
fsubl
ret
fwait
jmp
sbb
lods
or
stos
inc
add
cmp
out
mov
add
add
add
mov
mov
sub
aaa
xchg
in
pop
mov
std
aas
fs
gs
mov
cmp
cmpsl
clc
aaa
dec
gs
adc
add
mov
divb
add
daa
clc
inc
clc
dec
arpl
add
clc
jp
add
ja
cld
pop
fnsave
pop
pop
sar
pusha
fwait
jmp
sub
jae
add
mov
setge
add
rolb
add
add
clc
mov
das
cld
das
cmpsb
clc
incl
add
add
clc
cmp
jno
add
cmp
add
imul
aaa
dec
add
andb
sbb
jb
add
clc
mov
shll
add
gs
jae
add
scas
xlat
and
add
add
jne
clc
mov
dec
jl
cld
lret
clc
filds
add
xchg
lahf
xchg
push
xor
add
icebp
cltd
roll
clc
jl
clc
jmp
xchg
in
outsb
cmp
clc
cmp
add
scas
insb
add
add
or
test
add
out
or
add
test
add
in
add
sub
clc
inc
clc
xchg
and
add
clc
pop
inc
clc
xchg
mov
clc
inc
add
sbb
mov
add
add
cmp
add
mov
js
imul
clc
pop
mov
add
aad
notb
clc
jmp
sti
rcrl
jmp
jmp
cmp
movsb
cwtl
sub
inc
add
ja
pop
and
add
mov
xabort
clc
aad
cmp
jle
clc
bound
add
cmpsb
clc
out
out
mov
mov
out
adc
clc
and
add
add
sbb
clc
outsb
xor
clc
inc
add
in
mov
push
ja
add
scas
cwtl
inc
clc
outsb
jne
icebp
sub
clc
aam
aam
clc
or
xbegin
add
in
stos
mov
cmp
lret
fwait
jmp
insb
sub
jge
inc
clc
jp
jae
add
add
mov
add
loop
cltd
lcall
xchg
outsl
mov
push
add
cltd
mov
xlat
movsb
clc
cli
das
mov
push
xchg
xchg
and
add
xchg
pop
in
stc
mov
cmp
xor
fwait
jmp
aaa
imul
add
fcoml
enter
es
ljmp
add
xchg
add
clc
mov
mov
scas
pop
sub
clc
bound
add
iret
jns
adc
mov
xchg
outsl
sbb
jae
add
add
ja
add
leave
jl
xchg
pop
into
lahf
lahf
push
add
add
sti
lcall
shll
jno
add
jmp
sti
xchg
push
xor
or
add
add
popa
add
xor
add
jp
clc
insl
or
loop
xabort
add
ficoms
xchg
mov
add
imul
in
lcall
xchg
sar
add
jle
clc
cmc
out
fsubs
lcall
mov
xor
add
outsl
push
add
inc
clc
iret
loop
jle
dec
jbe
mov
gs
out
mov
repz
hlt
inc
add
inc
clc
jp
fists
fwait
jmp
push
sahf
aas
or
clc
jle
pop
dec
mov
jnp
clc
inc
clc
clc
dec
outsb
loop
cwtl
push
jmp
pop
mov
add
iret
sub
das
sub
sbb
xor
clc
sahf
or
cld
adc
add
clc
sbb
jmp
imul
clc
clc
xor
adc
sti
push
clc
addr16
jo
add
add
adc
add
add
inc
add
or
aad
add
fwait
jmp
inc
sub
clc
pop
cs
push
lret
sub
jmp
jg
dec
inc
add
pop
adc
add
sbb
and
add
clc
and
cmp
clc
movsl
clc
add
add
add
cmp
std
or
xchg
imul
or
mov
push
push
fwait
jmp
aaa
sbb
clc
mov
fsubrs
movsb
clc
pop
fstpl
add
cltd
ja
f2xm1
inc
clc
xor
add
add
jno
add
cmpsl
clc
push
cmp
clc
mov
mov
add
insl
jmp
jb,pt
fwait
jmp
aas
insb
scas
push
cmp
nop
xor
add
loopne
mov
add
sub
clc
pop
clc
scas
fs
mov
add
fwait
jmp
jl
icebp
cmp
inc
add
jp
add
and
add
jo
add
sti
mulb
add
clc
sahf
popf
push
add
arpl
add
add
push
shr
fwait
jmp
lea
lea
cmp
push
push
cld
push
ret
das
xor
sub
ret
rcrl
push
adc
add
lea
mov
cld
push
ret
outsl
scas
or
clc
shll
add
clc
lock
xor
add
clc
fldenv
add
pop
lcall
sub
testl
add
push
sti
or
insb
mov
xbegin
clc
xchg
std
shrb
mov
mov
add
faddl
add
cmp
sub
push
add
rcll
nop
cli
dec
sbb
add
je
fildl
es
or
xchg
test
icebp
push
adc
and
add
mov
sub
add
movsb
clc
out
sbb
xor
add
xabort
mov
lods
jbe
mov
cli
jecxz
push
add
daa
clc
insb
adc
add
leave
fwait
jmp
sub
shll
add
enter
clc
jns
mov
outsb
loope
jle
add
fwait
jmp
cwtl
sub
clc
int
jnp
jns
clc
gs
fstps
mov
bound
add
mov
xabort
xor
add
ss
add
ret
add
out
add
or
cmpsb
clc
sub
test
xchg
pop
dec
mov
pop
cld
push
ret
jg
cmp
add
sar
ja
cmp
fldl
clc
dec
call
push
ret
adc
add
nop
insl
or
sub
add
pop
movsl
clc
mov
addr16
and
add
clc
inc
clc
hlt
fnstenv
add
jge
clc
dec
push
inc
pop
add
je
push
das
fmull
lret
clc
out
mov
rclb
sti
data16
cmp
clc
fstps
fldl
add
pop
mov
or
ljmp
pop
fidivrs
push
xlat
inc
add
aam
clc
jnp
xor
add
xchg
sbb
add
lods
pop
lahf
mov
xor
add
inc
add
scas
jae
add
cmp
clc
clc
pop
clc
sbb
adc
add
inc
clc
js
clc
stos
mov
popa
add
lea
jb
add
add
jmp
lret
clc
add
add
add
pop
mov
xor
add
add
test
bound
add
sub
movsl
fwait
jmp
push
dec
ja
into
std
or
or
outsb
jbe
clc
shrl
push
ret
xor
cld
hlt
dec
incl
dec
cmp
jmp
add
mov
add
adc
add
cmp
add
sbb
inc
add
sub
int
test
xor
add
jns
add
sahf
rorb
ror
lock
add
jge
add
loopne
xchg
xchg
inc
add
lcall
out
stos
cs
fdivs
push
clc
lret
clc
cmp
lcall
add
adc
jp
aas
inc
add
cmc
ljmp
push
repnz
lods
mov
and
add
inc
clc
adc
add
cltd
xchg
jo
add
cmp
clc
dec
outsl
mov
adc
add
clc
push
add
dec
cmp
gs
cmp
outsb
xor
add
xor
add
add
jns
iret
jp
ja
sahf
loopne
aaa
and
add
add
inc
add
push
clc
cmp
add
mov
test
clc
xchg
insl
out
leave
adc
leave
cld
push
ret
push
or
idiv
lcall
ljmp
cmp
add
add
add
sub
add
xabort
sbb
jbe
call
fwait
jmp
popa
or
hlt
jb
add
sar
clc
sub
mov
fwait
jmp
jno
sub
cld
out
sub
clc
in
cmp
sbb
pop
in
cmpsb
clc
call
mov
int
adc
add
aad
add
mov
add
enter
cld
xor
add
fwait
jmp
cwtl
je
sub
in
and
cmp
add
xchg
cmp
clc
push
dec
adc
add
or
in
daa
clc
arpl
add
insl
sub
or
lcall
jmp
es
add
inc
imul
clc
push
push
sub
xchg
add
add
cltd
cmp
sub
mov
fisubs
add
mov
sub
clc
adc
add
jmp
sub
fs
jp
addr16
sub
add
mov
clc
ss
add
add
negb
lahf
pop
out
mov
add
sub
cmp
jmp
jge
add
add
cmp
mov
out
aaa
push
mov
enter
pop
inc
add
pop
jl
clc
test
repz
adc
add
push
add
mov
mull
mov
jo
add
clc
ds
and
add
in
dec
cmp
cld
push
ret
aaa
test
stc
or
and
add
int
add
ljmp
lcall
or
insl
aam
jae
add
or
insb
nop
mov
sbbb
sub
dec
sub
push
ret
sbb
add
cli
clc
jmp
add
add
add
clc
repz
or
xchg
xchg
sar
add
jl
add
jb
add
clc
sti
std
pop
cmp
push
clc
or
xor
add
add
popa
add
inc
add
inc
add
shlb
add
clc
sbb
cmpsl
clc
sar
push
cmc
pushf
or
mov
je
mov
add
mov
mov
push
add
adc
add
sbb
jmp
sub
lods
orb
add
add
clc
gs
scas
jle
out
mov
xchg
xchg
push
add
sub
add
clc
add
add
or
aaa
dec
or
mov
clc
jne
loopne
arpl
add
clc
pushf
xchg
test
xchg
test
clc
sbb
pop
mov
or
pop
cwtl
lret
xchg
es
cmp
jb
add
xchg
outsl
inc
add
add
add
xchg
push
pop
jge
clc
in
cmp
add
fwait
jmp
cmp
repnz
dec
mov
clc
cmp
add
xabort
cmp
add
lods
pop
mov
add
filds
add
sub
pop
or
call
jmp
lods
sub
xchg
xlat
loop
fstps
clc
daa
clc
mov
clc
inc
clc
imul
and
add
push
add
xchg
nop
and
add
out
mov
es
insl
pop
jl
add
inc
clc
and
jp
cli
loopne
push
add
sbb
and
add
je
fwait
jmp
mov
clc
xchg
and
add
clc
clc
xchg
fstp
std
jne
jge
jno
add
and
sar
in
adc
add
loopne
mov
sbb
clc
sub
fsubs
sbb
add
jge
int
aas
scas
out
and
add
add
test
cmp
add
popf
inc
clc
imul
cmpsl
clc
push
cmp
clc
jno
add
add
pop
enter
cmp
add
clc
mov
mov
sbb
mov
adc
jmp
cmp
mov
mov
clc
cmp
push
dec
dec
data16
push
fiaddl
clc
ficoml
add
clc
shlb
jbe
mov
lcall
popf
and
fs
cmp
or
mov
push
pop
fwait
jmp
jge
popa
sbb
add
xabort
add
xchg
add
jecxz
lahf
pop
inc
clc
cli
push
jp
clc
push
outsb
lret
in
dec
test
jns
test
adc
add
xchg
cmpl
add
sub
out
mov
push
add
in
pop
sub
sbb
in
xchg
or
push
sbb
jbe
ds
mov
enter
sti
iret
repz
clc
xchg
xchg
lahf
or
clc
dec
xor
jmp
xchg
push
insb
dec
sbb
add
gs
fs
sub
push
insb
loopne
rclb
add
add
pushf
ss
cmp
push
outsb
cmpsl
clc
cmpsl
clc
inc
add
mov
test
clc
add
xabort
xor
add
sub
push
mov
clc
jle
pop
mov
clc
dec
lahf
or
test
pop
imul
xchg
aam
add
sbb
decl
push
ret
and
test
aam
clc
cmp
and
jns
mov
clc
loope
jl
add
aas
xor
add
outsb
cmp
add
add
imul
add
shll
clc
jmp
mov
add
not
loop
add
add
sub
clc
adc
aaa
xlat
sar
mov
jbe
add
clc
xchg
or
mov
outsl
mov
sub
cmc
call
fwait
xchg
xor
add
add
add
add
ret
xlat
mov
or
clc
sub
ljmp
xbegin
mov
scas
outsb
inc
clc
aad
add
lods
arpl
add
insl
into
sbb
add
jbe
fisttps
lods
jns
lret
xchg
idivb
clc
aas
jbe
clc
cmp
inc
add
in
add
add
jp
pop
clc
jle
lret
add
clc
push
add
jmp
imul
add
add
add
pusha
add
mov
clc
jge
popf
mov
clc
mov
mov
add
pop
cmpsb
clc
xchg
and
add
dec
dec
fs
xbegin
add
stos
call
clc
mov
dec
fwait
jmp
add
add
add
ds
pusha
add
fwait
xor
add
fnsave
ja
inc
clc
idiv
jmp
mov
cmp
sar
clc
pop
out
sub
js
clc
pop
clc
nop
lods
addr16
sbb
dec
mov
cld
lcall
rcrl
cmp
stc
sub
clc
incl
jmp
fwait
dec
cmp
pop
aaa
stc
clc
nop
cmpsl
clc
mov
clc
popa
add
sub
clc
push
clc
adc
add
or
add
pop
aaa
arpl
add
add
add
inc
clc
mov
add
cmp
clc
icebp
loop
adc
add
push
add
je
negl
xchg
daa
clc
fwait
cmp
inc
add
pop
mov
add
push
lock
or
jmp
imul
add
mov
clc
sar
or
fwait
jmp
dec
sbb
xchg
inc
add
push
push
pop
iret
into
push
add
xchg
mov
add
or
clc
pop
mov
clc
or
cmp
add
lcall
jmp
or
and
mov
outsb
je
adc
clc
dec
jle
add
mov
push
add
mov
inc
clc
fisubl
push
leave
and
add
clc
mov
movsl
clc
or
mov
add
movsl
clc
call
in
jae
add
dec
fsubl
ljmp
jp
aas
lods
popa
push
add
cmp
sar
clc
jb
add
test
push
loopne
sub
clc
mov
jmp
mov
add
and
popa
add
inc
clc
jmp
xabort
jmp
clc
xor
mov
jne
clc
call
aam
in
and
add
add
pop
ret
clc
cwtl
or
clc
pop
clc
fldl
and
add
add
xbegin
jge
mov
es
in
arpl
add
lret
inc
add
dec
stos
mov
clc
mov
stos
cmp
mov
add
cmc
push
sub
jns
sbb
add
add
push
sar
jbe
jnp
mov
add
mov
or
jne
xchg
sub
clc
decl
mov
add
jmp
push
das
imul
arpl
add
cmpsl
clc
mov
add
clc
adc
add
add
call
cmp
add
cltd
push
add
jge
clc
mov
sub
clc
pop
xchg
xor
add
aas
mov
add
fistl
clc
mov
clc
mov
in
call
xchg
frstor
add
je
clc
jge
jo
add
aas
testb
add
inc
clc
das
inc
add
mov
out
cmp
pop
clc
test
adc
add
inc
add
and
add
fwait
mov
push
rol
clc
or
dec
jnp
lret
clc
stos
in
push
mov
push
add
jo
add
mov
clc
push
push
add
in
mov
mov
sub
add
psrlw
add
clc
js
cmp
loope
clc
enter
mov
jnp
iret
in
mov
push
add
out
cmp
clc
xor
clc
xchg
shlb
nop
pop
clc
cltd
pushf
fwait
pop
jmp
scas
xchg
leave
pop
flds
add
cltd
mov
add
mov
test
add
fwait
jmp
mov
clc
fstl
push
ret
sub
xor
add
add
add
sub
lahf
enter
into
fucomi
imul
cwtl
fadd
clc
pop
cmc
jnp
ss
inc
add
pusha
add
jne
mov
mov
xor
add
add
rolb
clc
xchg
movsl
clc
negl
clc
stc
leave
xchg
mov
add
add
add
xchg
add
add
add
clc
or
add
add
mov
leave
clc
pusha
add
loop
pushf
lahf
out
frstor
add
inc
add
insl
sub
push
add
fidivrs
add
dec
mov
rorb
add
ds
clc
es
mov
xchg
cs
push
mov
fdivrp
adc
push
sahf
clc
cmp
mov
movsl
clc
cmp
mov
fwait
jmp
sub
cmp
xor
add
or
nop
push
add
inc
add
push
clc
mov
push
pop
and
mov
scas
out
pop
xor
mov
clc
ja
test
mov
add
cmp
lret
stc
out
dec
popf
and
push
ret
fcmovnbe
rclb
and
fdivl
clc
shll
jno
add
mov
sti
xchg
dec
in
cmp
add
add
add
int3
daa
clc
iret
lret
mov
clc
xor
add
in
rclb
add
scas
adc
add
clc
jl
mov
cmc
push
mov
insl
test
add
add
jns
add
mov
add
add
add
dec
xlat
push
add
pop
adc
add
sbb
fdiv
daa
clc
cmc
jg
xbegin
clc
iret
das
add
add
dec
icebp
sbb
inc
add
and
add
and
add
mov
clc
jge
mov
pop
icebp
sub
fs
lods
sub
xor
add
clc
dec
nop
and
add
int
add
xor
add
add
add
mov
fwait
pop
mov
push
jecxz
out
decl
jbe
add
pop
add
negb
int
add
loopne
mov
sub
push
cmp
lock
int
cld
stos
adc
add
loope
mov
push
mov
cmp
clc
and
push
add
cmp
mov
sbb
push
ret
insb
out
lods
not
inc
clc
stos
add
add
add
sbb
clc
or
add
faddl
cmp
add
fmulp
js
clc
lahf
mov
fistpl
push
outsl
mov
or
or
xchg
clc
jp
aam
cmp
clc
adc
add
out
or
imul
adc
cmp
sbb
sub
pop
lahf
mov
add
movsb
clc
fs
xor
add
add
sti
add
js
pop
push
cmpsb
clc
xchg
adc
dec
test
pop
cmp
jle
enter
inc
clc
xbegin
xchg
frstor
add
xchg
cmp
cmp
mov
fwait
jmp
or
clc
and
add
mov
push
pop
clc
loop
cld
aaa
sbb
clc
jb,pt
add
outsb
add
add
mov
add
pop
pop
push
clc
in
push
add
push
aaa
mov
adc
sub
add
mov
mov
clc
xor
add
push
lods
popl
loope
bound
add
add
add
dec
lret
add
mov
pop
je
mov
clc
xor
add
es
sti
movsb
clc
enter
aam
mov
add
outsb
pop
mov
mov
add
cs
clc
ljmp
clc
pushf
inc
add
mov
cmp
sahf
sbb
xchg
call
and
add
clc
imul
shr
xchg
sbb
jmp
push
xor
mov
xor
inc
clc
pop
clc
call
gs
push
add
pop
sub
jae
add
popf
insb
dec
xor
add
clc
jb
add
mov
into
sbb
and
cli
xor
add
clc
sahf
inc
add
fstpt
mov
cmpsb
clc
xchg
lea
test
inc
add
fwait
jmp
rclb
fwait
jmp
sub
cmpsb
and
add
loopne
mov
stos
pusha
add
add
add
getsec
movsb
clc
stos
ljmp
and
add
jp
clc
lret
gs
daa
clc
vrsqrtps
add
fs
lock
enter
mov
add
xchg
dec
scas
adc
clc
out
sbb
add
inc
clc
data16
jg
fistpl
jo
add
mov
clc
xor
add
clc
fstl
leave
stc
mov
clc
sar
xor
add
clc
inc
clc
filds
add
or
add
add
into
push
add
fidivrs
add
fwait
jmp
sar
add
jp
xchg
mov
xchg
movsl
clc
rcl
sub
daa
clc
in
xchg
push
mov
enter
xbegin
jge
clc
mov
fidivl
xchg
ret
add
sub
pop
pop
loope
sbb
repz
jmp
movsb
or
insb
xabort
clc
mov
clc
lods
mov
clc
xbegin
clc
jne
test
push
bound
add
jo
add
clc
cmpsl
clc
adc
add
imul
cmp
mov
clc
and
add
add
inc
clc
sub
clc
test
add
jnp
jle
clc
lods
pop
sub
add
dec
outsl
bound
add
add
add
dec
xor
add
add
add
in
sub
push
add
adc
add
add
scas
fabs
clc
adc
add
add
add
mov
add
add
clc
mov
jecxz
addr16
push
clc
pop
sub
clc
mov
clc
in
mov
dec
xchg
clc
lods
ds
add
arpl
add
fwait
jmp
jno
sub
mov
fwait
cmpsb
clc
pop
pop
sbb
je
scas
and
add
clc
cmp
pop
stos
dec
scas
ss
lret
add
clc
lock
mov
mov
cmp
clc
xchg
lcall
cld
push
ret
sub
fs
jge
add
cwtl
mov
xor
add
push
mov
add
lcall
mov
add
in
xor
add
mov
mov
cli
xor
add
add
clc
insb
adc
pusha
add
push
add
pop
repnz
add
ret
clc
popa
add
loopne
cmp
xchg
pop
pop
mov
add
push
add
cmp
rep
fwait
jmp
je
inc
push
mov
fisubrs
sub
clc
inc
add
mov
add
clc
cmpsb
clc
stc
dec
sti
insl
xchg
mov
movsb
clc
pop
daa
clc
pop
add
add
clc
push
mov
push
add
xor
add
add
xchg
cs
push
in
fisttps
jg
lods
jmp
or
jg
clc
adc
add
in
mov
jl
jle
clc
adc
add
inc
add
add
adc
mov
sbb
add
sub
cwtl
dec
jne
dec
hlt
mov
xchg
mov
add
test
push
clc
std
sbb
ljmp
add
je
mov
jo
add
mov
add
gs
dec
jne
push
cmpsl
clc
xchg
cmp
xabort
xchg
repnz
jae
add
clc
sub
jne
fwait
jmp
stos
js
push
mov
fwait
jmp
sub
mov
clc
pop
clc
sub
clc
aam
lcall
out
jbe
movsl
clc
jl
clc
out
sbb
dec
hlt
fidivs
subl
incl
rdpmc
add
lcall
clc
push
xor
add
lea
push
pop
cmp
jnp
add
lahf
xor
add
inc
clc
sub
movsl
clc
cltd
and
add
clc
add
clc
add
add
push
clc
push
repnz
add
js
dec
bound
add
filds
xchg
sub
xchg
and
or
lods
aas
jo
add
cmpsl
clc
ret
clc
popf
and
inc
add
xor
add
shll
or
adc
add
leave
int
add
xlat
xchg
adc
sbb
pop
and
add
add
dec
and
add
clc
repz
js
jae
add
xchg
pop
icebp
add
add
xchg
fwait
ret
clc
adc
data16
lret
clc
lea
add
loope
popa
add
fcmove
xchg
xchg
je
pcmpeqd
and
add
pop
jp
clc
sbb
clc
mov
add
outsl
cwtl
jo
add
daa
clc
stos
mov
ja
testl
adc
add
add
mov
test
dec
cli
and
and
or
pop
mov
out
cmp
test
fwait
jmp
popa
sub
or
sarl
add
in
lcall
or
sbb
cmp
add
ja
push
add
push
jle
clc
sub
stos
js
insl
popf
inc
add
imul
sbb
add
add
clc
mov
inc
add
and
xbegin
adc
add
or
clc
mov
pop
sbb
clc
aad
adc
add
inc
clc
and
add
cmpsl
clc
nop
push
imul
xchg
cmp
clc
fisttpll
cmp
add
mov
xchg
mov
clc
pop
clc
popf
nop
mov
clc
mov
mov
clc
jp
jmp
arpl
add
jmp
push
mov
add
fidivl
js
mov
jecxz
gs
stc
push
int3
xchg
sub
clc
xchg
fidivrs
iret
pop
pop
jne
gs
push
mov
sbb
pop
add
add
sar
or
add
jae
add
repnz
pop
cwtl
ss
cmp
loope
out
jle
daa
clc
repnz
add
test
loop
cmp
cmp
add
add
clc
and
add
add
imul
mov
popa
add
jl
add
adc
add
incl
clc
fwait
jmp
jge
nop
xor
mov
sbb
loopne
or
add
add
add
xchg
ss
pop
lock
in
pop
out
add
dec
ljmp
clc
cld
ret
clc
or
add
dec
inc
clc
add
fprem1
in
mov
aam
cmp
ljmp
mov
xor
add
clc
fildll
fisttpl
cmpsl
clc
pop
push
adc
add
sarl
test
clc
test
clc
cmp
and
add
clc
or
add
push
clc
call
clc
dec
cmp
js
clc
dec
push
clc
adc
outsb
cmpsb
clc
inc
clc
movsb
clc
int3
push
push
in
xchg
xbegin
fnsave
add
clc
testb
sbb
insl
test
ja
clc
lret
dec
mov
clc
mov
sub
clc
sbb
imul
dec
xchg
jmp
inc
add
xchg
imul
sbb
repnz
add
mov
aad
push
clc
aad
dec
cs
mov
std
es
nop
sar
insl
jg,pn
aad
add
jecxz
icebp
sar
inc
add
mov
or
out
in
ss
stc
out
pop
sbb
jmp
ja
test
dec
push
add
punpcklbw
add
mov
add
pop
fdivl
add
pop
xor
add
mov
jmp
dec
adc
repnz
gs
add
add
clc
push
inc
add
adc
add
clc
inc
add
gs
in
test
add
add
adc
add
clc
jmp
loope
sub
aad
fiaddl
push
aas
or
push
cmp
clc
rclb
add
xchg
lahf
or
clc
sbb
sti
daa
clc
loop
sbb
add
add
or
add
jo
add
clc
pop
mov
xchg
sub
lods
in
dec
cmp
clc
pop
xor
add
inc
clc
inc
clc
ret
clc
adc
push
cld
push
ret
adc
adc
xor
add
xabort
stos
fildll
leave
or
clc
sahf
fnstenv
inc
clc
mov
pop
mov
pop
xlat
xor
popf
ljmp
or
mov
arpl
add
in
add
scas
in
fbld
add
clc
dec
icebp
push
clc
ret
cmp
add
cli
mov
outsl
enter
roll
mov
push
or
jmp
clc
push
lcall
add
testl
clc
sbb
add
popf
sahf
add
add
lods
sbb
add
sbb
adc
add
add
dec
and
add
or
mov
jge
clc
inc
clc
sbb
add
fwait
jmp
aaa
cmpsl
clc
mov
clc
sbb
mov
fwait
jmp
xor
add
xchg
mov
mov
jnp
ljmp
push
jge
popa
mov
pop
stos
jg
sub
add
daa
clc
sbb
aam
jb
add
clc
xchg
jmp
ds
jmp
das
outsl
xor
jmp
outsl
pop
addb
aam
call
fwait
jmp
ja
sub
adc
add
pushf
and
add
pusha
add
mov
clc
push
out
mov
call
fwait
jmp
movsb
adc
add
add
cmp
add
stos
movsl
clc
scas
jae
add
mov
std
nop
ds
mov
add
enter
add
clc
jl
insb
cmp
clc
cmp
popf
mov
jmp
sbb
sub
sar
int3
mov
outsl
cmpsb
clc
sarl
adc
add
push
fwait
jmp
sub
xchg
sbb
clc
push
add
and
add
add
clc
or
clc
loope
adc
add
add
add
clc
insl
shlb
add
add
cmp
or
clc
fsub
clc
add
pop
mov
ja
cli
jge
out
mov
repnz
sar
jno
add
clc
jle
clc
pushf
pop
lea
popa
add
rorl
sub
pop
jge
push
push
sar
add
push
add
mov
clc
jo
add
add
dec
int3
dec
lcall
fucomip
in
xchg
out
lods
cmp
stc
stc
pop
inc
add
pushf
adc
add
xchg
fcompl
dec
xchg
adc
add
jge
xchg
mov
sbb
add
add
add
mov
inc
clc
sbb
clc
fstpl
jmp
add
mov
add
sbb
clc
and
ret
push
fwait
jmp
inc
sub
clc
jno
add
out
xchg
jge
clc
push
cmp
fwait
jmp
lea
and
add
xchg
cmp
ret
clc
and
clc
mov
add
ja
clc
mov
fwait
jmp
imul
add
push
fwait
jmp
sub
data16
add
insl
xchg
mov
push
ret
popa
test
das
in
jb
add
add
clc
pop
cmc
fucomi
dec
nop
pop
clc
fcomi
lret
imul
clc
cld
mov
add
add
add
add
add
arpl
add
add
clc
and
add
cmp
adc
clc
popa
add
inc
add
addr16
inc
clc
push
sar
push
ret
or
mov
add
hlt
cmp
jg
clc
outsb
roll
add
mov
add
imul
clc
js
add
xbegin
or
and
add
stc
outsl
xchg
movsb
clc
mov
fwait
jmp
sub
in
aaa
cmp
fsubl
shl
clc
adc
add
add
test
dec
mov
gs
cld
mov
xchg
xchg
out
fnstsw
inc
add
mov
rcr
mov
add
add
dec
xchg
loop
pop
or
add
xchg
cs
jne
cmp
clc
add
add
stos
pop
lcall
add
add
pusha
add
fwait
cmc
aaa
inc
clc
and
add
pop
inc
add
enter
insb
popa
add
fs
jl
in
ja
fwait
add
add
add
add
jmp
dec
ja
clc
sar
push
add
out
imul
clc
mov
scas
lock
dec
sar
insb
sar
cmp
add
clc
push
mov
add
push
add
insb
cli
sar
ret
clc
pop
add
add
add
imul
adc
jmp
fwait
cmp
jb
add
xor
add
mov
mov
fisttpl
test
mov
mov
clc
cvtdq2ps
add
ss
cmp
cmp
inc
clc
or
clc
ja
clc
xor
lock
in
mov
add
xlat
sbb
aad
xabort
sub
dec
cmp
mov
fwait
jmp
insb
push
and
shlb
ljmp
lods
cltd
sbb
add
add
stc
cmp
xchg
xchg
cmp
cltd
xchg
mov
add
fld
clc
ds
push
push
add
xchg
popa
adc
push
pop
jp
mov
add
stos
inc
clc
xor
add
iret
imul
fwait
add
add
loope
or
sarb
clc
xchg
std
inc
add
aam
add
call
push
rcll
add
lock
push
add
sub
lea
mov
daa
clc
mov
stc
jmp
mov
clc
cmp
leave
dec
je
and
add
xor
add
add
mov
sahf
std
mov
add
notb
pop
cmpsl
clc
enter
dec
add
add
mov
xchg
pop
clc
mov
mov
fwait
jmp
imul
clc
mov
jge
clc
ljmp
pushf
or
leave
adc
add
clc
test
add
add
add
mov
pop
mov
jno
add
add
add
add
clc
sar
cli
push
stc
test
iret
adc
add
popa
add
pop
xchg
xchg
fists
popf
mov
gs
jecxz
data16
xchg
xchg
mov
std
ficoml
add
add
inc
add
xchg
outsb
cmc
jl
and
xabort
leave
pusha
add
inc
add
cmp
add
in
or
mov
push
push
cld
push
ret
sahf
cmpsb
sub
clc
fndisi(8087
clc
jae
add
gs
clc
cmpsl
clc
jmp
clc
imul
add
in
sar
mov
scas
dec
cmpsl
clc
aaa
aam
bound
add
dec
pop
test
add
in
lea
outsl
jecxz
xchg
jne
clc
imul
gs
or
push
add
xbegin
cmp
shr
or
pushf
aas
or
and
add
jp
clc
pop
data16
inc
add
dec
cmp
movsb
clc
mov
filds
add
pop
and
push
add
mov
add
xlat
inc
clc
mov
xor
add
add
clc
xchg
outsl
dec
imul
adc
add
xor
add
mov
ret
cwtl
cmp
dec
scas
jmp
add
jb
add
repz
es
xor
add
jne
jl
jne
rcl
cmp
clc
xor
add
and
push
ret
ja
lcall
add
jp
pop
push
add
ret
clc
adc
add
add
stos
pop
mov
dec
ret
clc
inc
clc
fisttpl
fisubs
clc
pop
mov
and
add
clc
repz
clc
jecxz
push
cld
xor
add
clc
fisttpl
faddl
in
test
cmp
stos
mov
aaa
lea
add
dec
test
mov
add
cs
inc
add
shlb
sub
stos
pusha
add
popf
dec
fwait
cmp
pop
fwait
jmp
sahf
or
sub
nop
imul
in
push
mov
mov
movsb
clc
shr
insb
cs
arpl
add
add
sahf
mov
add
mov
cs
and
add
add
cld
adc
add
add
out
lret
jle
add
in
mov
rorb
movsl
clc
scas
addr16
fistpll
jecxz
iret
aaa
add
jo
add
cmc
and
add
add
inc
add
pop
jecxz
clc
pusha
add
pop
add
add
mov
fldt
add
cltd
cmp
add
into
lea
clc
pop
pop
dec
xor
add
fdivrp
pop
adc
add
mov
clc
inc
add
sbb
fwait
jmp
sub
movsb
ret
inc
add
xor
lret
dec
mov
ss
jo
add
clc
dec
xbegin
xor
add
add
xchg
imul
lcall
clc
add
add
sahf
xor
add
movzwl
fwait
jmp
push
fs
mov
jnp
clc
mov
clc
cmp
jg
aas
push
and
add
push
clc
mov
xor
add
stos
scas
and
add
pusha
add
repz
repz
call
fwait
jmp
xchg
adc
mov
stos
pop
xchg
into
sar
pop
outsb
mov
add
lods
jle
clc
lahf
fistl
inc
add
daa
clc
ljmp
add
jp
shrl
adc
add
clc
jbe
mov
jecxz
lods
aad
add
pop
ret
clc
adc
add
add
xor
add
cli
mov
adc
add
add
add
mov
pushf
sti
sar
mov
add
push
or
and
xor
add
jb
add
add
iret
repnz
popa
add
incb
call
adc
add
adc
add
add
scas
nop
das
mov
or
add
cmpsb
pop
push
into
ret
clc
xor
add
dec
rcrb
mov
fwait
jmp
and
mov
clc
dec
adc
add
or
adc
add
xchg
cmp
inc
add
out
add
add
xor
add
jo
add
clc
mov
fdivr
dec
aam
addr16
add
add
clc
push
add
ret
dec
and
add
push
in
jmp
adc
stos
call
mov
dec
mov
sar
dec
mov
xbegin
add
mov
add
ret
fwait
jmp
insb
lea
pop
clc
sub
push
push
pusha
add
or
add
lea
sub
push
add
daa
clc
push
leave
lahf
popa
add
xchg
idivl
imul
pop
clc
lea
clc
rolb
cmp
pushf
test
lret
pop
aam
clc
dec
popf
stos
movsb
clc
sbb
add
add
adc
add
mov
inc
add
dec
and
test
add
mov
cmp
clc
sahf
mov
add
add
aad
mov
clc
daa
clc
std
mov
out
sbb
and
pop
cmp
clc
xchg
ret
pop
in
sub
add
and
sti
mov
push
je
fwait
jmp
push
jbe
clc
add
add
clc
jmp
sub
add
xchg
inc
clc
insl
pusha
add
add
add
gs
sbb
cmp
add
jp
jo
add
clc
pusha
add
je
mov
or
es
fwait
loope
adc
add
and
add
int3
stos
jns
cmp
add
popf
ja
mov
add
mov
clc
pop
mov
add
cmp
adc
add
jmp
fcoml
and
add
xlat
repz
decl
test
lcall
add
clc
push
jmp
ja
sub
push
ret
dec
dec
aas
mov
sub
stos
jg
xor
cld
fwait
jmp
inc
dec
adc
xor
add
aas
sti
push
aas
insb
add
add
clc
xchg
mov
add
mov
fwait
jmp
push
adc
add
fisubrs
clc
mov
jnp
rorl
insb
clc
mov
add
clc
pop
data16
clc
pushf
jp
nop
pop
dec
imul
out
jae
add
pop
incl
fwait
jmp
inc
notl
clc
imul
xchg
xchg
or
js
cmp
push
or
cltd
es
mov
xor
adc
jmp
pop
inc
inc
add
xor
add
add
mov
ljmp
add
and
add
test
fisttpl
add
popf
jo
add
in
cwtl
movsb
clc
add
mov
js
push
fwait
jmp
or
sub
mov
add
xchg
push
lods
fdivrl
mov
and
or
add
mov
dec
pop
sahf
pop
ljmp
add
pop
lods
test
fs
jb
add
lcall
clc
mov
add
test
stos
outsl
decl
inc
ljmp
clc
sub
cmp
add
sub
fmuls
sbb
jmp
push
push
sub
clc
add
js
push
add
clc
cmp
data16
pusha
add
enter
mov
jle
clc
mov
xor
push
add
jecxz
data16
jns
push
jns
outsl
xchg
jmp
clc
xchg
iret
push
add
add
add
adc
add
add
repnz
mov
add
imul
clc
inc
clc
ret
adc
add
pusha
cld
push
ret
nop
sub
cmpsb
inc
add
pop
xor
add
fildl
fcoml
dec
call
cmpsl
clc
out
clc
xchg
mov
ret
clc
cmp
sbb
clc
xor
add
clc
pop
bound
add
stc
pop
clc
sbb
sub
cmp
mov
add
arpl
add
clc
xchg
jbe
push
push
fwait
jmp
scas
cwtl
sbb
add
ret
add
fwait
jmp
sub
add
sub
clc
cld
pop
clc
cltd
mov
cmp
cmp
add
sub
pop
and
mov
mov
add
into
lret
push
gs
jmp
push
enter
fwait
jmp
inc
or
clc
or
loop
out
dec
sbb
inc
cld
push
ret
dec
xchg
or
movsl
clc
sbb
lods
xor
add
lock
dec
dec
pop
clc
add
jecxz
mov
add
add
cld
push
ret
dec
or
clc
aad
sub
clc
adc
ret
clc
dec
icebp
sub
dec
jo,pt
add
inc
add
cli
sub
pushf
bound
add
clc
sar
pop
sahf
pop
jnp
fcmovnbe
jg
xchg
in
mov
add
cs
sar
cmp
adc
inc
add
pop
clc
add
add
hlt
push
clc
jno
add
add
xor
add
jbe
add
fistps
xor
add
inc
clc
in
pop
adc
add
add
cmpsl
clc
add
add
add
out
fs
cld
pushf
adc
add
clc
push
add
xabort
clc
or
or
and
add
add
mov
add
add
push
jmp
fwait
jmp
aas
adc
add
jnp
xchg
cmp
adc
add
mov
push
add
sub
inc
ja
dec
xor
add
clc
mov
jae
jmp
ja
setno
gs
je
imul
mov
clc
cwtl
add
add
scas
push
add
dec
push
out
mov
add
pop
cli
pop
imul
cmp
add
mov
add
push
clc
movsb
clc
pop
inc
add
pop
push
fwait
addr16
leave
sar
inc
clc
mov
lea
pushf
adc
add
mov
add
sti
das
sub
cmp
fisttpll
add
sahf
mov
fsqrt
and
add
clc
iret
aaa
inc
add
add
add
inc
add
ds
jne
push
add
sub
es
aad
clc
xchg
mov
xchg
lods
and
add
lcall
add
clc
sub
gs
sbb
clc
cmp
adc
add
jge
clc
mov
mov
add
push
ret
cwtl
dec
cmpsl
clc
fistpl
xor
add
clc
pusha
add
fcmovbe
sar
testb
in
arpl
add
add
mov
add
popf
add
add
repnz
int
out
pop
pusha
add
addr16
arpl
add
clc
call
or
add
fwait
jmp
sub
adc
dec
inc
add
pusha
add
inc
clc
punpckhwd
out
and
add
jecxz
loop
fimull
inc
add
add
jmp
clc
ret
clc
push
add
add
add
or
xchg
stc
pop
pop
sub
shll
mov
cmp
clc
pop
sub
pushf
adc
add
shll
push
add
jo
add
imulb
aam
push
repnz
xchg
add
clc
fwait
push
add
jle
enter
fbld
dec
clc
pop
clc
int3
lock
call
inc
push
add
aaa
or
xchg
test
or
sar
sbb
add
sub
add
cmpsb
clc
or
jecxz
sub
movsl
clc
dec
fcomi
add
add
repnz
sahf
jno
add
clc
or
adc
shll
inc
add
sar
jg
mov
add
sub
clc
inc
clc
js
sbb
cwtl
dec
pushf
in
repnz
add
add
pop
and
add
clc
cmc
push
add
pop
shlb
add
xchg
dec
adc
add
adc
add
push
jg
add
test
cmc
aam
add
or
and
add
add
aad
clc
cwtl
lret
scas
aad
clc
and
add
xor
add
add
inc
clc
mov
jnp
rep
rorl
clc
xlat
lahf
jecxz
or
int
inc
clc
mov
or
lcall
outsb
add
sub
sub
add
ljmp
pop
mov
clc
pop
pop
ret
es
je
mov
add
movsb
clc
pushf
push
add
cmp
clc
push
push
add
push
pop
js
test
cld
popa
add
mov
fwait
jmp
push
push
sub
lock
sbb
add
repnz
je
adc
add
add
add
clc
loop
dec
sbb
fsubl
fldcw
das
dec
push
or
xchg
xbegin
add
lret
dec
adc
add
repnz
dec
fdivl
add
xor
add
dec
mov
fwait
jmp
pop
sbb
lret
mov
jle
add
stos
mov
clc
cmpsl
clc
sbb
sar
jns
clc
pop
leave
jo
add
adc
add
aad
loopne
jns
jne
fwait
jmp
pop
mov
jp
mov
aaa
pop
mov
imul
xchg
cwtl
dec
mov
sub
cld
push
ret
add
outsl
repnz
dec
cld
inc
clc
xchg
push
xlat
loopne
es
sub
fs
loope
mov
cltd
xlat
mov
clc
arpl
add
or
gs
aas
and
add
clc
or
clc
xlat
xor
add
mov
outsl
push
add
cmpsb
pop
imul
mov
add
sahf
int
sbb
jbe
ja
add
es
bound
add
clc
jmp
enter
add
push
xor
fwait
jmp
aas
xchg
xor
push
add
sar
clc
inc
clc
jnp
sbb
ret
xor
mov
clc
mov
mov
push
add
mov
clc
push
clc
xor
add
nop
jbe
clc
xchg
mov
clc
cmp
mov
add
loopne
mov
clc
cmp
cmpsl
clc
and
test
arpl
add
clc
xchg
pop
xor
add
add
insl
mov
xabort
jl
sbb
leave
lret
cmp
clc
movsl
clc
jne
push
xlat
add
add
pop
js
adc
add
fs
jge
clc
pushf
pop
clc
mov
mov
jmp
sub
jne
add
inc
clc
movsb
clc
out
push
pop
mov
xor
add
clc
das
lahf
and
add
add
mov
enter
lcall
add
fucom
clc
adc
xchg
mov
add
mov
mov
out
inc
add
sub
sub
decl
test
push
add
fwait
jmp
and
adc
add
mov
clc
inc
clc
dec
mov
xbegin
sti
inc
clc
out
jp
add
es
fld1
mov
push
ret
push
sub
out
xchg
mov
lret
cld
push
ret
sbb
jge
or
lret
xchg
lahf
test
aam
out
cmp
push
add
es
scas
jmp
add
add
add
out
gs
aad
cli
mov
jmp
lods
sub
imul
clc
in
push
add
and
clc
loopne
pop
clc
mov
cmc
pushf
add
add
cmp
cltd
cs
push
out
movsl
clc
lret
lahf
jl
clc
and
add
pop
clc
and
pop
and
add
clc
nop
xor
clc
sub
popf
sahf
mov
negb
fidivrs
pushl
rcrb
decl
movsb
imul
add
bound
add
sub
popa
add
lret
mov
add
jge
clc
cmp
mov
sub
lea
add
fwait
jmp
xchg
stc
int3
imul
jecxz
mov
add
sbb
or
ret
sub
outsl
add
add
idivb
inc
add
scas
int
out
xor
xchg
cmc
mov
jmp
add
inc
imul
or
sar
add
enter
cmpsb
clc
inc
add
xlat
in
dec
outsb
sbb
insb
mov
clc
sbb
add
add
sar
int3
cld
mov
add
clc
or
dec
or
clc
cli
dec
cmp
add
sbb
push
adc
push
ret
push
add
lea
add
sub
out
mov
shlb
and
add
test
jp
lock
add
mov
add
je
xor
lods
seto
in
sub
xchg
adc
add
clc
add
jo
add
clc
cmp
add
mov
sti
pop
insb
in
data16
into
call
data16
and
fcoms
clc
lea
add
pop
je
jle
add
jmp
xor
add
clc
sar
clc
xabort
add
sbb
lret
add
add
sbb
jmp
clc
mov
add
mov
clc
mov
in
pop
lods
sub
repz
pop
lock
lcall
sub
js
add
sar
loop
jp
leave
cmp
mov
js
aas
xabort
jae
add
sbb
add
add
push
clc
and
hlt
lret
add
dec
lcall
shrl
add
fists
add
mov
clc
add
add
push
pushf
loopne
je
xor
add
cmp
add
add
pusha
add
mov
adc
call
loop
pop
xchg
add
mov
add
jl
int3
jmp
add
aas
repz
add
es
inc
clc
data16
ret
clc
pop
cmp
je
dec
cld
push
ret
cmp
clc
and
add
sbb
insl
xchg
das
cli
insl
ljmp
clc
jle
xor
cld
push
ret
sub
fistpl
mov
jecxz
out
add
and
xchg
or
std
jns
add
imul
cmp
xchg
stos
aaa
and
add
loop
push
ret
sub
cmp
mov
inc
add
mov
clc
jnp
fs
mov
clc
adc
add
add
dec
outsb
sub
push
add
cwtl
je
out
testb
fmulp
jmp
mov
add
pop
sub
sbb
xor
add
mov
in
mov
add
add
clc
test
sti
mov
mov
or
jno
add
clc
mov
inc
add
scas
push
bound
add
jmp
ret
clc
add
jno
add
add
add
cwtl
xor
es
push
lock
into
push
clc
adc
add
add
add
clc
and
add
lea
add
mov
or
clc
fwait
testb
ljmp
mov
add
push
inc
clc
int3
aad
sbb
clc
rcl
nop
decl
jmp
pop
sahf
adc
add
scas
lahf
xchg
jbe
push
insb
in
pop
je,pn
add
pop
dec
stos
xbegin
clc
jmp
fwait
jmp
cwtl
add
add
lcall
clc
fs
clc
fwait
cld
into
arpl
add
push
insb
sbb
jecxz
cmp
ljmp
pop
insl
fnstenv
cmp
pop
push
insb
int
clc
add
xor
add
shr
fwait
jmp
push
dec
pop
jmp
add
add
push
ljmp
or
mov
scas
inc
add
sbb
adc
dec
mov
scas
arpl
add
dec
push
add
or
fwait
jmp
cwtl
lods
push
popa
cwtl
out
mov
jg
pop
jne
inc
add
adc
jmp
aaa
ljmp
add
add
in
mov
int
clc
add
mov
add
mov
jecxz
out
xor
add
clc
std
cld
xbegin
add
data16
and
add
xchg
es
cmp
clc
pop
pop
cmp
xbegin
jp
int3
cwtl
into
test
push
out
outsl
inc
add
das
in
jns
sub
jge
clc
mov
daa
clc
aam
iret
xor
adc
in
sar
clc
jns
mov
fsts
popf
sub
cmc
push
add
dec
div
out
test
scas
stos
repz
add
ja
ret
clc
lods
xor
add
je
dec
clc
jg
clc
cli
xor
clc
xabort
clc
cmp
clc
or
clc
jp
clc
or
xchg
lret
xchg
or
mov
push
add
sub
cmp
sub
add
add
clc
cmp
clc
mov
add
int
cwtl
mov
inc
add
daa
clc
gs
mov
add
int3
lahf
in
sub
out
push
add
imul
fwait
jmp
test
sub
clc
out
cmp
clc
dec
xabort
loop
aad
add
push
push
clc
clc
hlt
stos
sub
mov
add
fs
outsl
movsb
clc
and
add
clc
fisttpll
dec
pop
add
arpl
add
add
insl
and
add
add
add
mov
clc
cs
clc
cmp
clc
leave
mov
clc
stos
outsl
das
fmull
push
int3
test
test
notb
add
cmp
jl
pushl
fwait
jmp
push
mov
sub
add
es
sbb
call
mov
pop
or
and
dec
mov
sub
and
pop
clc
xor
or
add
add
aas
imul
fs
sub
add
pop
sar
jbe
sar
push
add
xor
add
int
fistpl
add
cli
sar
add
sub
xchg
movsl
clc
mov
sub
clc
mov
in
lret
mov
push
fsubrs
clc
pushf
lods
icebp
mov
add
xor
add
jae
add
dec
mov
cmp
add
add
xchg
xor
mov
clc
adc
add
clc
pushf
lahf
aam
clc
jb
add
call
sbb
test
lods
jecxz
stos
roll
inc
sar
lcall
add
sbb
add
sub
add
inc
clc
test
sbb
add
std
add
add
cmp
and
adc
add
sub
mov
add
xchg
xor
leave
lods
sbb
mov
movsb
clc
sbb
xchg
idivl
mov
add
sbb
add
ja
jmp
fldt
clc
int3
shrl
add
imul
movsl
clc
jb
add
sti
stc
shl
inc
clc
xlat
data16
push
out
movsb
clc
add
add
jle
cld
data16
insb
cs
vmovups
add
nop
movsl
clc
pop
push
add
hlt
cld
je
clc
sbb
add
add
cmp
add
and
add
xchg
test
data16
sub
push
ret
sub
sbb
test
pop
mov
mov
add
sub
dec
stos
ret
clc
mov
dec
dec
xchg
inc
clc
sub
flds
add
push
add
popf
fldcw
add
sbb
adc
add
push
clc
mov
xor
add
mov
add
out
shrb
or
and
add
add
inc
clc
cmpsb
clc
push
clc
loop
scas
mov
clc
test
pop
xor
add
dec
dec
add
add
cld
mov
enter
jno
add
add
clc
sub
clc
pusha
add
cmp
ljmp
clc
mov
jp
inc
add
adc
jno
add
dec
inc
clc
adc
add
lcall
insl
shrl
pushl
fwait
jmp
fwait
dec
xor
jl
clc
lods
out
lock
in
leave
testb
cmpsl
clc
push
cmp
push
mov
push
add
shlb
sbb
insb
mov
clc
jnp
shrb
cmp
insl
iret
jo
add
add
add
mov
outsb
jo
add
cmp
clc
mov
add
mov
fwait
jmp
or
and
clc
shl
clc
roll
push
sub
clc
arpl
add
add
jne
sbb
sbb
add
popf
adc
xor
xor
mov
add
clc
mov
clc
xchg
iret
push
test
lods
push
aas
mov
add
frstor
add
add
xchg
jmp
cmp
push
clc
jae
add
inc
clc
adc
add
cmp
jmp
lods
sub
mov
js
push
clc
cli
inc
clc
in
sub
add
filds
clc
data16
and
add
fs
clc
add
add
sub
pop
push
cmpsb
clc
psrld
sar
pop
icebp
inc
clc
push
clc
and
add
mov
dec
in
cmp
push
sub
inc
add
push
lods
add
add
fmuls
inc
add
mov
sub
clc
xor
add
clc
aam
ljmp
daa
clc
lea
add
jae
add
clc
or
imul
inc
add
jbe
clc
pop
xchg
std
cmp
inc
clc
inc
clc
pop
fistps
or
pop
adc
add
pop
mov
add
xlat
or
clc
push
add
stc
pop
mov
sub
insb
imul
iret
sar
jno
add
xchg
xchg
jae
add
push
popa
cld
push
ret
push
push
sub
cmp
mov
clc
test
das
test
clc
jbe
clc
in
pop
in
es
ja
clc
xor
add
in
pop
mov
add
add
pop
lea
mov
movsb
clc
add
add
fnstcw
pop
dec
cmp
add
lods
cld
push
ret
add
sbb
cmp
sbb
aad
mov
add
clc
jecxz
cmp
mov
add
add
clc
mov
mov
lock
add
add
ja
clc
xchg
mov
add
out
mov
jmp
popa
movsb
push
out
or
incb
aas
cmp
add
add
sub
lock
imul
add
mov
push
add
std
dec
cmpsl
clc
jnp
clc
or
jo
add
add
in
pop
and
add
sbb
push
add
hlt
enter
clc
repnz
add
push
add
mov
add
in
outsb
or
in
fwait
cwtl
and
mov
sar
sti
in
jno
add
int3
sub
add
ds
daa
clc
xchg
icebp
pop
xchg
das
cmp
fiadds
add
jg
or
cld
push
ret
dec
test
jo
add
mov
clc
cmp
push
add
push
cmp
cltd
mov
cmpsl
clc
xor
add
clc
movsl
clc
jb
add
gs
mov
inc
add
mov
add
divb
ret
clc
enter
scas
or
xchg
mov
clc
fnstsw
sti
jne
ds
sti
cmp
iret
fmull
add
scas
mov
clc
sub
fwait
jp
imul
in
jae
add
shr
out
and
add
and
xor
or
add
xor
add
add
sbb
sti
pop
add
fwait
jmp
adc
xchg
push
adc
js
clc
js
clc
popf
in
mov
clc
cmp
add
add
repnz
cmp
xor
fwait
jmp
xchg
nop
or
add
sub
or
and
push
add
cmp
pop
dec
aad
clc
scas
mov
data16
cmp
lods
mov
sub
data16
pop
xchg
lret
cld
mov
add
clc
mov
clc
pop
mov
push
ret
aaa
cmpsw
clc
je
mov
in
jbe
scas
mov
xchg
fwait
clc
cltd
inc
add
adc
clc
dec
push
add
mov
jbe
clc
dec
ja
clc
int3
cmp
sub
add
add
ds
mov
add
add
adc
dec
pop
mov
cld
mov
or
cmp
pop
clc
mov
jecxz
adc
add
mov
pop
clc
ss
adc
add
clc
out
cmp
clc
xor
add
fdivp
xbegin
add
push
pop
jl
sar
xor
add
add
sbb
add
jb
add
das
jbe
clc
mov
aas
in
clc
lret
and
add
clc
adc
add
aam
clc
or
jbe
sbb
inc
and
jmp
inc
sub
mov
ffreep
pushl
je
test
daa
clc
add
add
sbb
add
dec
dec
outsb
xor
add
dec
mov
push
add
ljmp
clc
push
mov
cld
push
ret
sub
sbb
iret
or
clc
cmp
push
jmp
dec
sbb
outsl
aaa
cmp
clc
mov
add
xor
add
pop
in
pop
hlt
out
mov
dec
aas
clc
in
mov
add
add
jle
mov
clc
or
add
fwait
jmp
outsl
sub
xchg
and
xlat
dec
popf
out
pop
pop
fsub
clc
or
lahf
dec
xchg
or
add
cmp
je
clc
sub
repz
in
sbb
add
mov
pop
jb
add
add
movsl
clc
cs
clc
mov
mov
and
add
add
icebp
cmp
jl
clc
cmpsl
clc
sbb
xchg
and
scas
test
inc
clc
pop
xlat
lret
add
add
iret
push
add
clc
sub
cld
fs
sub
dec
and
add
sti
aaa
inc
clc
cmp
fwait
jmp
xchg
mov
clc
int3
jecxz
insl
cmp
pusha
add
jmp
pop
xchg
cmp
pusha
add
lcall
adc
clc
sbb
inc
add
mov
add
adc
add
push
clc
adc
add
stos
mov
cltd
imul
clc
mov
dec
dec
adc
add
pop
sar
add
cmp
test
fsubrp
fldenv
push
clc
daa
clc
or
clc
add
add
jne
fwait
jmp
mov
add
pushf
jge
add
mov
fwait
jmp
xchg
lea
add
add
cmp
clc
mov
sub
mov
test
cmpsl
clc
clc
data16
std
jge
pop
inc
clc
push
add
sub
add
lahf
es
and
pop
clc
xor
add
add
add
stos
jecxz
cmp
clc
test
jg
into
pop
mov
push
add
rcrb
data16
add
fwait
sub
mov
into
add
add
cmpsb
clc
adc
push
xor
cld
push
ret
sahf
and
xlat
popl
add
mov
add
enter
clc
pop
mov
pusha
add
sbb
call
mov
clc
or
cld
mov
stc
sub
sbb
mov
fwait
jmp
dec
outsl
or
stos
rcrb
ljmp
add
mov
in
cmp
dec
shrl
cmp
es
fwait
and
add
add
add
add
and
add
scas
sti
fnstcw
clc
pushf
mov
adc
add
add
clc
inc
clc
lret
add
sar
clc
push
clc
mov
popf
inc
clc
add
add
adc
add
pop
clc
cld
data16
call
in
out
stos
cmp
popa
add
pop
scas
or
cmp
aas
stc
mov
clc
mov
add
data16
cld
mov
repnz
cmp
movsb
clc
and
add
add
imul
add
xchg
mov
sbb
inc
add
cmp
ljmp
roll
leave
dec
xchg
pop
pushf
pop
imul
inc
add
fwait
jmp
sub
out
lock
out
xchg
dec
push
add
pop
inc
add
in
sub
push
jmp
fwait
jmp
aaa
jp
push
mov
pop
cmp
and
ja
scas
push
sub
inc
add
dec
jae
add
add
xor
add
add
xlat
mov
cltd
push
sar
mov
clc
loopne
mov
sahf
push
add
add
inc
clc
pusha
add
out
and
xor
add
add
mov
push
inc
add
mov
stos
frstor
add
mov
mov
clc
mov
add
fcomip
roll
loopne
push
addr16
jbe
clc
lods
dec
cld
cmp
clc
arpl
add
lea
jl
pop
lea
loope
into
sarb
cmp
inc
add
ficoml
dec
xchg
or
push
clc
ffreep
clc
sbb
jmp
outsl
sbb
sub
imul
clc
xchg
or
push
add
fistpl
sub
clc
gs
rorb
clc
mov
mov
dec
dec
and
add
mov
mov
jg
clc
loopne
xor
xor
push
jne
fwait
jmp
jecxz,pn
mov
test
clc
or
or
mov
addr16
pop
push
add
fwait
jmp
sub
aas
mov
cmp
ret
imul
sbb
sbb
push
lea
fwait
jmp
mov
clc
xchg
cs
cmpsb
clc
ds
inc
add
cld
clc
jae
add
add
clc
fwait
adc
add
push
mov
inc
add
pop
push
loopne
icebp
test
clc
cld
int3
jae
add
add
repz
add
addr16
pop
mov
add
adc
add
dec
add
xchg
pop
test
jmp
clc
jl
add
mov
fcoms
sbb
clc
xchg
call
clc
mov
repz
inc
lcall
decl
lock
fadd
clc
enter
sbb
add
sub
fiadds
addr16
testl
testb
daa
clc
scas
rorb
addr16
mov
push
clc
movsb
clc
daa
clc
imulb
add
clc
cs
add
add
push
fwait
jmp
or
sub
xchg
aam
pop
mov
push
ret
outsl
sub
aam
clc
inc
add
dec
pop
clc
loope
fld
clc
jg
lret
arpl
add
add
clc
sahf
push
sub
fwait
jmp
sub
sar
clc
imul
lahf
insb
xchg
sbb
clc
jge
clc
pop
ficoms
add
sbb
into
push
clc
shl
clc
mov
clc
std
dec
cmp
add
rorb
test
cmp
call
outsl
push
pop
cmp
popf
xor
add
sub
sar
inc
add
jl
and
adc
add
add
icebp
cli
or
cmp
jns
sahf
clc
movsl
clc
and
xor
add
and
add
xchg
gs
cmp
push
clc
dec
add
cmp
clc
icebp
mov
enter
or
add
cmp
clc
or
xchg
mov
xchg
stos
pop
mov
stc
aad
sbb
aad
lock
adc
ret
cmp
sar
clc
jl
call
cld
push
ret
test
clc
add
add
insb
shrb
cmp
mov
xchg
sub
clc
xor
add
and
add
outsl
jb
add
clc
xchg
cltd
or
xor
fwait
jmp
es
decb
scas
test
inc
add
jmp
pop
bound
add
add
jmp
clc
aam
in
cmpsb
clc
cwtl
add
add
test
fiaddl
add
clc
lcall
xor
add
je
je
jnp
daa
clc
xchg
ja
out
ds
jbe
out
nop
popf
mov
test
cmp
cmp
clc
lock
clc
loop
jne
dec
int3
cmpsb
clc
or
push
add
cmp
clc
aam
clc
fimull
scas
jne
add
add
inc
clc
loopne
fs
sbb
add
add
add
sub
loop
adc
add
clc
jp
xchg
jb
add
fists
lcall
sbb
fildl
add
or
pop
cli
inc
add
xabort
add
fwait
jmp
pop
cmpsb
cmpsb
push
mov
cmp
pop
sub
lods
or
lock
clc
xchg
push
imul
mov
sub
mov
in
stc
mov
jb
add
ss
add
jne
inc
clc
out
xchg
mov
add
push
add
push
lea
fwait
jmp
sub
mov
ret
out
nop
and
add
clc
add
dec
int
outsl
jo
add
add
push
cli
push
add
sar
mov
or
clc
mov
push
xor
add
nop
aad
test
sub
jnp
clc
gs
or
pop
and
add
clc
push
add
add
add
pushf
fstpt
mov
xchg
popf
push
add
ss
jg
inc
clc
mov
mov
das
sub
clc
imul
pop
xor
add
xor
add
mov
inc
add
jo
add
in
cld
inc
clc
sub
sti
lret
divb
int3
inc
add
negb
clc
test
mov
adc
add
add
push
add
rcll
jae
add
add
mulb
clc
xor
add
pmuludq
clc
ljmp
and
fldcw
add
gs
xor
out
xchg
adc
add
mov
mov
decl
sub
mov
clc
mov
lea
and
add
clc
push
add
mov
jle
clc
fistpl
das
mov
clc
inc
clc
loop
stos
pop
hlt
imul
hlt
popa
add
xchg
dec
fldenv
ja
add
lahf
loop
adc
add
clc
and
add
mov
test
jmp
sar
int
jnp
add
push
mov
fwait
jmp
jno
clc
ficoml
std
mov
add
add
in
mov
xchg
das
insl
int
and
in
lea
add
mov
js
adc
add
mov
pop
jb
add
inc
clc
mov
data16
or
xor
add
cli
inc
clc
leave
dec
sbb
push
sub
add
dec
sub
dec
daa
clc
in
cmovne
test
in
rcrl
cmpsl
clc
add
add
clc
std
in
aad
or
add
js
inc
clc
pop
clc
add
add
push
add
jnp
clc
addr16
sahf
inc
clc
pop
xchg
insb
leave
mov
cmp
clc
xchg
mov
jnp
clc
add
add
add
mov
jae
add
add
xchg
xor
out
cmpsb
clc
push
add
adc
add
cmpsb
clc
mov
clc
jne
clc
mov
add
sub
fwait
jmp
dec
push
sub
addb
out
push
jecxz
pop
push
add
cmp
ljmp
add
add
in
sub
and
pop
push
clc
sbb
movsb
clc
cmp
or
add
or
clc
push
add
incl
fwait
jmp
xchg
sub
add
add
adc
add
mov
pop
mov
cltd
pop
mov
clc
loop
mov
dec
popa
add
ljmp
xchg
repz
clc
popf
cmp
js
clc
lock
icebp
cmp
mov
add
iret
mov
sbb
pop
mov
clc
stos
sub
clc
ror
ds
pop
clc
pop
std
sub
mov
clc
stc
decl
mov
adc
jmp
ja
cmp
push
add
stc
push
clc
out
xor
add
clc
dec
add
add
adc
pop
ljmp
add
cld
pop
ss
stos
fsubrp
sarl
call
clc
popa
add
xor
clc
jg
xor
add
add
mov
outsb
je
jae
add
add
clc
fstps
roll
add
aas
mov
into
adc
add
add
xor
add
aam
add
sub
add
jnp
xor
add
add
clc
bound
add
add
movsl
clc
std
xbegin
inc
push
adc
fwait
jmp
ja
fisubrl
push
jnp
jae
add
sub
clc
pop
aaa
inc
clc
pushf
push
add
int3
movsl
clc
insl
xchg
clc
jp
lods
stos
test
mov
lods
inc
add
clc
shlb
pushf
cs
gs
push
daa
clc
loop
jp
add
adc
or
mov
add
mov
add
mov
add
sar
aad
jle
lcall
clc
mov
add
loop
cmp
out
sub
and
dec
bound
add
mov
clc
test
icebp
cmp
add
cmpsl
clc
sbb
xor
add
clc
nop
pop
inc
clc
fbld
mov
add
pop
mov
lea
repz
repnz
mov
movsl
clc
test
mov
sub
lahf
flds
clc
pop
jg
clc
lcall
ss
push
in
mov
clc
mov
test
in
xchg
pop
hlt
cmp
mov
mov
xchg
testb
add
and
push
ret
xor
clc
shrl
icebp
mov
add
imulb
mov
clc
std
cmp
out
or
mov
add
add
cmp
add
xor
add
adc
add
add
sbb
pop
cmp
mov
lcall
jg
pop
xor
add
add
clc
icebp
pop
dec
add
add
clc
xor
add
test
sbb
clc
mov
lahf
sbb
add
mov
clc
dec
in
inc
add
jns
jns
stc
iret
inc
add
pop
movsb
clc
test
loope
fs
cmp
add
add
mov
add
inc
add
adc
inc
clc
mov
and
add
js
push
add
cmp
clc
fs
sub
add
lret
dec
sub
add
call
add
out
push
sub
add
dec
in
sbb
clc
das
data16
lock
in
fisttpll
clc
jb
add
clc
adc
add
jnp
mov
pop
lea
sub
add
xchg
mov
stc
in
daa
clc
sti
scas
push
fs
ret
clc
mov
clc
add
add
cwtl
clc
mov
clc
lea
add
and
push
jns
dec
push
lcall
add
add
mov
add
or
push
add
and
add
cmc
sbb
xchg
push
add
je
and
add
inc
add
pop
clc
ret
clc
push
cwtl
lret
add
add
add
add
mov
mov
in
and
cmp
clc
adc
add
clc
sub
xor
add
repz
clc
dec
adc
jne
jno
add
add
mov
test
lahf
mov
mov
xchg
xor
ret
popa
sbb
inc
clc
mov
clc
lahf
mov
clc
xchg
es
popf
mov
stc
add
add
inc
add
rcrl
incb
add
sti
mov
push
add
in
scas
push
add
aas
iret
pusha
add
mov
clc
mov
mov
sar
dec
jb
add
add
dec
lcall
push
aad
fucompp
xchg
dec
jp
lea
or
cmp
test
lock
mov
xor
add
clc
jbe
add
in
mov
fcomps
adc
add
add
add
push
cmc
es
fs
xor
add
cld
and
add
xchg
je
clc
jns
add
mov
add
add
leave
mov
adc
in
xlat
es
lock
add
cli
ret
clc
cmp
clc
xor
add
clc
mov
add
sub
push
add
push
add
mov
clc
cmp
jmp
in
adc
clc
jg
jnp
xchg
mov
sahf
mov
mov
imull
loop
cmc
fcomp
add
pop
push
outsl
mov
int3
test
add
pop
cs
xabort
mov
mov
jo
add
pop
xchg
sub
mov
in
stos
aam
cmpsl
clc
loopne
nop
fdivp
cmpsl
clc
mov
mov
add
add
stos
pop
addr16
incl
aaa
stos
inc
add
lea
jb
add
test
mov
sar
stos
add
add
add
add
xabort
ret
clc
into
push
addr16
adc
add
faddl
inc
clc
push
mov
jl
fwait
jmp
mov
lret
fwait
jmp
das
test
add
mov
add
cmp
cmp
aam
clc
int
push
xchg
fimuls
sub
nop
inc
clc
bound
add
add
ljmp
fmul
rorb
clc
aad
clc
js
arpl
add
pop
fwait
jmp
sub
cmp
jp
ret
push
push
add
mov
scas
fwait
push
clc
testb
mov
or
add
cmp
add
jbe
aas
mov
add
sbb
mov
sar
sub
push
frstor
mov
add
fs
sbb
sti
and
add
clc
stc
mov
clc
mov
mov
bound
add
add
add
add
add
mov
add
pop
clc
lods
int3
je
fildl
add
imul
add
sub
mov
fwait
jmp
fildl
and
add
inc
clc
outsl
adc
add
inc
add
push
jnp
clc
imul
mov
push
aas
decl
xchg
inc
add
sub
or
pop
mov
loope
xchg
popa
add
out
icebp
sbb
jecxz
mov
jp
dec
sub
cmpsb
clc
push
shl
clc
lret
aam
jns
ja
push
add
push
add
fwait
jmp
shll
add
add
jae
add
clc
test
dec
nop
or
mov
fwait
jmp
sub
sub
clc
dec
pusha
add
stos
outsb
lret
mov
ret
clc
pop
or
xor
add
push
clc
ss
add
fwait
jmp
xor
inc
cmp
mov
clc
fmuls
hlt
test
cltd
push
repnz
imul
icebp
mov
es
fs
push
popa
add
popf
out
adc
add
clc
and
sti
sar
add
mov
add
push
add
loope
aas
push
add
das
xabort
outsl
sbb
jne
clc
add
add
mov
es
cmp
aad
outsb
pop
dec
mov
clc
sbb
add
xabort
clc
pop
inc
add
jae
add
add
adc
add
clc
cmp
clc
pusha
add
out
jg
inc
clc
lahf
push
add
hlt
mov
loopne
jmp
mov
cltd
add
push
mov
pop
sbb
add
insb
xabort
test
sub
nop
out
mov
int
pushf
xor
add
add
out
lahf
rcl
sub
xor
add
clc
cmpsl
clc
leave
adc
clc
data16
push
mov
mov
fwait
mov
add
jbe
xchg
xlat
outsl
inc
add
cs
in
add
add
add
pop
clc
dec
xor
add
clc
mov
clc
pop
mov
clc
dec
xchg
xchg
adc
add
inc
clc
into
cmp
inc
clc
fidivrl
rep
fwait
jmp
push
sub
movsb
fnstenv
inc
clc
and
add
scas
xabort
data16
inc
add
pop
sar
fwait
repz
push
sti
push
cli
inc
add
cmpsb
test
clc
fists
add
in
lock
add
adc
add
fwait
clc
ret
clc
cmp
fnstenv
clc
jbe
clc
insb
gs
shll
add
setne
cmp
out
jno
add
xbegin
clc
je
add
or
mov
jecxz
jb
add
xor
add
clc
pushf
jmp
add
mov
cld
fmulp
fistps
add
or
test
and
sbb
clc
inc
add
mov
imul
pop
jnp
add
icebp
mov
mov
inc
add
fistpll
and
add
mov
push
add
jmp
or
cmpsb
clc
sar
cmp
es
movsb
clc
xlat
push
mov
add
sub
cmp
fidivrl
sub
scas
xchg
mull
add
pop
and
add
push
mov
dec
push
add
sbb
cli
ljmp
add
in
ds
movsb
clc
sar
clc
inc
add
cmp
add
jecxz
int
leave
mov
add
dec
mov
cmpsb
clc
rcrb
out
push
xchg
aam
jbe
add
int3
rolb
int3
mov
add
dec
test
mov
imul
and
add
imull
clc
cmpsb
clc
mov
inc
add
incl
aam
mov
arpl
add
sub
mov
add
inc
clc
dec
in
xor
add
add
adc
add
cmp
loope
mov
clc
xor
add
clc
jecxz
sub
cmp
mov
push
clc
push
test
fwait
jmp
andb
cmp
add
test
mov
addr16
cld
mov
loopne
lea
clc
aas
jecxz
add
add
clc
and
add
push
daa
clc
jbe
in
icebp
cltd
inc
clc
adc
add
xchg
cmp
add
add
add
add
sahf
test
cmp
ja
fs
inc
add
pop
clc
lret
sbb
add
add
mov
add
js
cmp
fwait
jmp
and
and
add
sub
fs
clc
or
add
inc
clc
mov
fwait
cmpsl
clc
out
inc
add
xor
add
push
sahf
xor
cmpsl
clc
dec
loop
jl
clc
adc
add
add
insb
mov
xchg
xchg
push
addr16
lret
fwait
sub
fisubrs
mov
cld
push
ret
cmp
clc
cmp
inc
and
fwait
jmp
cwtl
movsb
into
mov
clc
xlat
inc
add
sti
sub
in
sbb
add
sub
xor
add
clc
add
add
or
clc
pusha
add
movsb
clc
and
add
pop
mov
cmp
add
xchg
and
add
sub
add
stos
or
test
mov
add
add
xor
fwait
jmp
sahf
mov
sahf
xchg
in
or
jns
pop
lock
clc
and
add
add
gs
inc
add
aas
rolb
add
jb
add
clc
clc
push
add
cmp
clc
shll
add
mov
int
xchg
mov
add
jmp
in
adc
add
sub
xlat
test
aaa
jge
jl
add
fwait
jmp
mov
push
mov
fisubrl
cmp
pop
dec
or
repnz
add
inc
clc
xchg
adc
clc
dec
stos
push
xchg
fists
add
call
add
lahf
xchg
xor
add
push
add
sbb
lcall
pop
in
xchg
adc
add
fcomps
jo
add
xchg
in
jle
cmpsl
clc
xor
add
sub
inc
clc
xchg
adc
and
add
outsl
sbb
add
out
jp
clc
icebp
scas
int
sahf
int3
lea
pop
lahf
xabort
mov
add
or
jecxz
idivb
cli
push
dec
pop
jo
add
loopne
insl
pop
roll
int3
mov
add
in
mov
test
push
ret
sub
cwtl
inc
clc
cli
pushf
out
push
clc
mov
mov
jae
add
dec
cmpsb
clc
hlt
arpl
add
adc
add
push
xor
add
ss
cmp
add
cmp
scas
loop
xchg
popf
push
into
mov
add
test
clc
daa
clc
mov
add
add
ss
add
clc
mov
stos
jecxz
inc
clc
adc
add
lods
mov
inc
clc
sbb
cwtl
in
int3
flds
add
int3
or
add
add
jbe
lcall
add
mov
add
cs
add
xlat
xchg
clc
in
sahf
clc
js
mov
add
fldl
or
cli
sub
add
add
fdivl
add
lahf
xchg
sub
add
out
lods
lret
inc
add
xchg
xabort
clc
xchg
ffreep
clc
push
add
mov
dec
fwait
jmp
es
sub
push
ret
add
sub
add
pop
clc
cmp
sub
clc
in
pusha
add
push
mov
fwait
jmp
ja
mov
sub
pop
jne
jmp
add
push
imul
fwait
jmp
das
data16
bound
add
add
sub
loopne
fwait
jmp
nop
add
in
cmp
es
icebp
cmc
call
cld
push
ret
sub
add
insb
fisubrl
inc
add
pop
dec
arpl
add
clc
xchg
cld
and
add
mov
add
sub
jnp
add
sub
mov
clc
dec
imul
aam
aaa
xchg
mov
int
inc
add
sbb
scas
push
mov
clc
mov
jo
add
pop
insl
lea
add
das
stc
lock
cld
sbb
clc
xor
add
add
xchg
test
jl
add
setnp
xchg
pop
shll
je
mov
cmpsb
clc
cmp
sbb
jge
inc
add
sahf
mov
cmpsl
clc
cltd
jne
clc
hlt
push
push
ret
sub
inc
add
sar
adc
fsubl
add
pop
clc
mov
cmpsl
clc
push
clc
in
sar
clc
test
bound
add
add
push
add
fwait
jmp
xchg
int3
add
add
add
cltd
or
sub
bound
add
clc
inc
clc
shrb
jge
clc
aaa
inc
clc
cmp
add
sub
jecxz
cmp
fadd
clc
sub
mov
jnp
sar
clc
xor
add
add
add
clc
inc
add
and
cli
jb
add
clc
aas
pop
aad
adc
add
add
mov
add
movsl
clc
iret
xchg
sar
add
dec
filds
clc
add
push
ret
cmpsb
movsb
mov
clc
inc
clc
inc
add
loope
xbegin
add
add
lods
insb
jno
loope
sar
mov
jmp
and
jno
test
inc
add
fdivrp
push
add
add
clc
add
add
gs
dec
xor
add
sti
push
clc
imul
sarl
das
xor
jl
cltd
cmp
jns
push
mov
push
cli
inc
add
js
add
mov
mov
addr16
je
pop
fstl
add
pop
fwait
jmp
outsl
movsb
mov
call
add
ficoms
jno
add
add
cmp
sbb
sbb
add
mov
inc
add
pop
js
mov
rolb
clc
nop
mov
add
fildl
add
adc
add
add
frstor
xabort
clc
cmp
clc
sub
dec
and
add
gs
sar
cmp
dec
sar
clc
sahf
bound
add
call
jle
int3
jnp
pushf
sub
push
sbb
clc
mov
call
das
xor
add
xchg
xchg
pop
cmp
xlat
or
jbe
stos
lret
cli
mov
aam
decl
lea
imul
add
std
inc
add
imul
add
lods
stos
mov
add
add
imul
add
clc
cs
cmp
add
push
inc
add
testl
add
hlt
xor
add
fnstcw
add
cltd
mov
dec
ds
xor
add
clc
sarl
js
and
add
add
roll
inc
add
cmp
out
dec
or
jecxz
add
mov
sub
add
push
incl
jne
fwait
jmp
sub
add
add
push
add
jbe
stc
pop
pop
adc
add
clc
in
add
add
add
and
add
add
cmp
xor
add
pop
or
mov
clc
pop
stc
dec
inc
clc
mov
add
xor
add
sbb
je
clc
push
fmulp
lods
cld
add
add
cld
and
ret
clc
inc
clc
test
outsl
sub
mov
jno
add
insl
int3
jae
add
into
out
out
mov
adc
adc
add
mov
dec
lret
lahf
add
and
and
insb
hlt
fimull
xchg
cmp
jne
lods
es
pop
add
add
mov
les
jmp
nop
push
aas
inc
clc
mov
add
sub
clc
xor
add
adc
add
mov
adc
jmp
test
push
add
stos
aam
clc
sti
inc
add
adc
add
xchg
push
add
push
int
out
imulb
add
add
mov
repz
add
add
mov
xchg
cmc
sub
inc
add
jmp
adc
add
movsb
fwait
jmp
pop
aaa
nop
movsb
insl
cmp
gs
xor
add
scas
mov
repnz
jmp
inc
or
cmp
iret
xchg
sub
clc
ss
clc
js
mov
add
adc
pop
insb
xor
add
add
mov
add
sub
cs
push
clc
lret
jne
fwait
jmp
mov
in
mov
push
dec
std
ret
clc
inc
add
inc
add
sbb
fwait
jmp
jno
imul
clc
mov
clc
mov
clc
fnstenv
insb
pop
rcrl
cmp
je
add
jns
sub
mov
add
pop
xchg
insb
xchg
jp
imul
add
xor
mov
add
xchg
das
cmp
clc
sub
mov
enter
fdivrl
add
clc
in
xchg
dec
xbegin
clc
aam
add
add
clc
and
add
push
sarb
cmc
push
jmp
add
sub
add
pop
lods
movsl
clc
push
add
xchg
imul
add
and
add
clc
lock
clc
out
sbb
add
cmp
mov
xor
mov
lret
inc
add
pop
mov
stc
lcall
es
adc
xchg
fs
movsb
clc
adc
add
jae
add
add
lret
sbb
lcall
clc
negb
pusha
add
and
inc
clc
mov
ds
and
add
jb
add
jle
lock
es
shlb
data16
hlt
xor
clc
and
add
xor
stc
lahf
insb
into
dec
imull
mov
inc
add
sub
ja
jmp
inc
push
xchg
aas
jge
mov
faddl
add
js
add
xchg
jmp
add
clc
or
clc
or
mov
fwait
jmp
test
clc
or
mov
aad
add
fwait
jmp
xor
add
ss
add
cmp
fld
clc
xor
xor
add
add
cmp
mov
clc
lods
mov
mov
in
lea
jo
add
add
clc
cmp
clc
ljmp
cmp
mov
add
mov
add
xor
push
pop
add
add
push
add
mov
clc
xchg
and
add
arpl
add
xor
add
clc
cmp
ss
add
stos
addr16
cld
popa
add
fwait
mov
in
dec
out
dec
mov
add
and
add
frstor
sub
sub
add
xor
movsl
clc
stos
xor
add
mov
fs
ds
xchg
mov
add
nop
push
add
adc
add
dec
fwait
mov
add
sbb
das
push
add
imul
nop
iret
std
mov
testl
fadds
clc
adc
add
inc
add
jle
scas
push
cmp
gs
inc
clc
adc
add
add
add
push
add
jl
clc
pop
data16
pop
ret
stc
sub
add
sub
add
loopne
push
add
iret
movsb
clc
aad
clc
sbb
adc
add
push
pusha
add
and
add
out
pop
test
or
xchg
clc
fwait
scas
ret
mov
add
lret
mov
pop
clc
inc
clc
pop
clc
fnstsw
or
adc
add
add
add
add
add
int3
and
add
cwtl
adc
add
cmp
fwait
jmp
movsb
clc
fistpl
add
push
sbb
add
pop
ja
xchg
sar
add
fwait
jmp
and
and
xchg
push
sti
mov
stc
fisubrs
or
fwait
inc
add
es
cmp
sbb
clc
push
nop
imul
mov
adc
add
add
dec
jne
clc
fldcw
clc
cmp
cli
fildl
sbb
imull
push
add
push
mov
cmp
repz
clc
inc
clc
faddp
clc
and
add
adc
xlat
pop
test
shll
mov
xchg
lcall
add
clc
adc
add
cmp
clc
mov
add
mov
loop
movsl
clc
jle
clc
jne
xchg
add
add
add
jae
add
push
clc
mov
mov
clc
popf
add
and
add
add
adc
add
mov
jae
add
add
pop
gs
and
add
dec
or
push
mov
clc
jo
add
add
or
add
mov
daa
clc
fmull
in
jno
add
mov
cmpsl
clc
pop
cmp
in
gs
out
adc
add
or
add
and
add
add
add
dec
mov
xor
add
aad
add
clc
cmp
add
clc
fs
lods
mov
add
add
clc
int
add
pusha
add
or
add
mov
das
xchg
into
int
jg
jo
add
add
pop
mov
pop
cltd
aad
add
fwait
jmp
aaa
lods
push
out
inc
add
cmpsl
clc
push
jae
jmp
fs
add
xabort
push
add
add
outsb
and
add
add
clc
push
shll
add
jmp
clc
insb
dec
or
js
clc
movsl
clc
lods
jb
add
mov
xchg
lcall
pop
push
xchg
es
add
cwtl
fs
xor
add
aam
mov
gs
mov
clc
jecxz
xchg
mov
inc
cld
push
ret
popa
sub
inc
xchg
out
inc
add
cmp
add
and
add
adc
add
add
mov
xor
add
sbb
push
ret
jge
sub
into
push
add
ljmp
lret
xchg
mov
cmc
loop
insl
pop
or
and
add
imul
int
cmp
add
jmp
sub
sub
arpl
add
push
cld
push
ret
insb
test
int
movsl
clc
aad
and
add
add
clc
inc
add
mov
clc
ret
clc
or
add
clc
mov
arpl
add
add
xor
add
add
jns
clc
js
clc
fdivs
or
pushf
mov
stc
inc
clc
test
lods
pop
clc
inc
clc
fwait
xchg
dec
stos
cld
sub
push
dec
pusha
add
inc
add
jecxz
stc
mov
add
xchg
notb
sub
sub
insb
jo
add
xor
add
pop
sbb
or
sbb
add
mov
or
clc
cwtl
mov
clc
push
add
add
add
add
jns
jle
lret
clc
movsl
clc
dec
mov
clc
inc
clc
jl
clc
aaa
lret
mov
add
and
and
fwait
jmp
pop
mov
jno
mov
fwait
jmp
sub
je
lods
imul
clc
push
add
xbegin
mov
mov
push
add
ljmp
cld
push
ret
push
inc
sub
or
add
popa
add
mov
sar
clc
mov
add
jp
jle
add
lret
clc
sbb
sahf
cmp
push
mov
clc
sahf
iret
iret
insb
sbb
bound
add
test
sub
add
push
pop
mov
scas
adc
add
cmpsb
clc
dec
cmp
xchg
mov
cmpsl
clc
mov
add
jg
lods
mov
call
mov
clc
or
mov
mov
add
xor
add
mov
aas
cmp
push
movsb
clc
sbb
cmc
dec
xchg
clc
mov
clc
sbb
fwait
jmp
jno
jno
cwtl
dec
mov
clc
adc
add
mov
fdivrs
int3
lea
add
xchg
mov
xchg
ljmp
lea
sub
mov
fwait
jmp
outsl
or
inc
clc
mov
mov
ljmp
repnz
add
sub
fdivs
add
ljmp
sbb
xabort
pop
clc
testb
mov
inc
add
popf
stos
or
add
add
sub
add
add
hlt
dec
xchg
icebp
lret
add
adc
add
add
and
add
jl
jp
mov
push
aad
jp
dec
enter
xchg
jmp
add
push
xchg
int
call
add
add
sti
fwait
jmp
add
push
pop
aam
data16
xchg
adc
add
clc
mov
mov
jbe
add
add
add
clc
pop
xlat
mov
jmp
subb
cwtl
sub
add
push
insb
movsb
clc
popa
add
sbb
clc
dec
pop
sub
xlat
rcl
scas
dec
lods
fdivs
mov
fwait
jmp
dec
sbb
jmp
jg
mov
aaa
jp
inc
add
jle
ss
add
gs
or
push
add
pop
add
add
dec
mov
add
jle
clc
cmp
mov
clc
fsub
clc
sbb
clc
or
clc
jae
add
fwait
and
mov
push
notb
add
jmp
addr16
and
add
add
pop
clc
mov
add
mov
add
adc
add
sbb
add
fwait
jmp
imul
addr16
sbb
cli
fwait
jmp
sub
es
pop
push
clc
sahf
insl
mov
push
ret
mov
decl
test
jmp
test
rep
add
xor
fwait
jmp
inc
or
clc
mov
add
mov
clc
ss
add
aas
imul
xchg
mov
es
adc
add
cmpsb
clc
iret
push
sub
add
add
clc
mov
clc
adc
add
push
test
ljmp
pop
leave
cmp
arpl
add
add
repz
jmp
cmp
inc
add
push
push
cld
push
ret
scas
sub
pop
jmp
cmp
jnp
clc
in
adc
add
clc
stos
cwtl
cli
lcall
pop
divl
into
jp
sbb
and
jmp
add
add
in
mov
inc
clc
and
add
int3
lret
mov
hlt
mov
sub
adc
mov
clc
sbb
call
data16
push
ss
mov
loop
fwait
jmp
push
sub
clc
iret
xchg
ja
clc
scas
int
test
ljmp
add
sub
movsb
clc
xchg
push
clc
dec
outsb
in
or
mov
add
add
shll
clc
inc
clc
jg
add
mov
mov
cld
push
ret
lods
xor
pop
call
adc
add
lret
fldl
lea
xchg
adc
cli
cmc
dec
mov
inc
clc
mov
add
aad
and
add
clc
fcmove
test
daa
clc
dec
loop
stos
shrl
push
scas
xchg
inc
clc
test
jbe
add
or
cmp
clc
aam
movsb
clc
movsl
clc
sbb
mov
mov
add
inc
add
jp
push
xchg
cmp
add
xor
add
fldl
add
sbb
clc
setl
xor
add
cld
push
and
ret
and
aaa
and
clc
sbb
clc
pop
not
push
and
fnstcw
clc
inc
add
aas
mov
add
add
add
jmp
or
dec
loope
fidivs
ret
add
push
ret
sub
fistpll
clc
loop
pop
fisttps
inc
clc
cmp
clc
mov
pushf
out
mov
clc
cmp
cmp
inc
clc
cmp
mov
cwtl
jae
add
xchg
test
push
add
mov
clc
mov
out
mov
loopne
fcompl
je
clc
jge
mov
pop
cltd
clc
call
loopne
jl
fs
jo
add
inc
clc
and
add
clc
and
add
test
fildll
test
add
jo
add
add
shlb
add
sar
inc
add
jb
add
clc
mov
clc
idivl
pop
loopne
push
add
push
add
fwait
jmp
aaa
push
mov
and
jb
add
mov
push
add
and
add
hlt
arpl
add
mov
mov
sub
clc
js
stos
lret
leave
adc
mov
imul
jp
jo
add
add
and
add
add
test
pushf
mov
pop
clc
sbb
in
cmp
add
push
push
push
ret
and
ljmp
inc
add
sahf
es
sar
dec
movsl
clc
cmp
inc
add
pop
or
mov
add
cmp
add
out
or
lahf
dec
xlat
lods
push
add
push
add
ret
clc
mov
hlt
movsb
clc
js
add
add
mov
cwtl
push
js
cmp
xchg
dec
test
add
adc
add
pop
fwait
jmp
adc
or
fs
mov
add
popa
add
xchg
jae
add
stc
int3
pushf
pop
jns
xor
add
add
push
fadds
add
es
lock
add
mov
adc
add
mov
das
sbb
add
add
dec
cmp
add
mov
jle
sti
int
dec
sbb
add
sub
push
adc
add
test
gs
dec
stos
adc
pop
loope
and
clc
and
add
add
clc
mov
outsl
push
add
cmp
clc
dec
push
push
jmp
das
sbb
clc
in
push
add
pushf
mov
pop
clc
hlt
aad
lock
outsl
dec
outsl
cmp
lahf
dec
mov
clc
cld
jecxz
jb
add
add
cwtl
cmp
add
sahf
jbe
mov
add
out
sbb
or
fwait
jmp
mov
add
outsb
test
add
ljmp
test
add
add
clc
lods
mov
sbb
clc
mov
mov
cmp
clc
enter
jb
add
and
jbe
imul
add
mov
add
mov
xchg
lock
fldenv
add
icebp
push
lahf
mov
add
fs
mov
xor
call
xchg
imul
cmp
in
test
xor
jp
clc
inc
clc
and
shll
arpl
add
xchg
mov
jp
add
mov
xor
add
adc
add
clc
sub
ja
leave
stos
mov
clc
gs
inc
add
xlat
xchg
cwtl
cmp
clc
lods
xchg
xchg
jmp
rep
hlt
or
rorb
xchg
mov
add
mov
iret
gs
and
add
add
mov
add
in
idiv
push
mov
jmp
sbbb
imul
mov
add
push
test
clc
leave
xchg
bnd
add
stos
sub
push
lcall
add
push
clc
jne
add
mov
clc
pop
cmp
dec
push
out
dec
xchg
mov
add
cmp
add
sub
cltd
lods
loop
lods
xchg
daa
clc
sbb
test
stos
sar
lcall
cmc
stos
ljmp
sub
push
mov
mov
add
aas
cltd
gs
stos
inc
add
cwtl
jl
clc
in
dec
push
add
pop
dec
shll
add
stc
pop
xchg
stos
enter
lock
xor
sub
mov
fwait
jmp
xchg
outsl
aaa
xchg
xor
fstpt
adc
add
aas
mov
cmp
jb
add
add
sub
outsl
push
imul
bound
add
xlat
nopl
and
gs
scas
xchg
push
fisttps
inc
clc
mov
arpl
add
add
sub
scas
sbb
aaa
stos
inc
add
sub
dec
sbb
stos
mov
fwait
jmp
sub
in
cwtl
daa
clc
fwait
mov
adc
add
xor
fwait
jmp
mov
in
mov
add
cwtl
inc
clc
mov
xchg
pop
xchg
pop
clc
int
test
mov
mov
add
scas
fisubrl
movsb
clc
cmp
sbb
add
insl
ds
mov
clc
fdivrp
xchg
mov
cmp
clc
xor
add
into
mov
add
fwait
jmp
test
clc
sahf
mov
into
xchg
or
fsubrl
jp
clc
inc
clc
mov
es
mov
clc
gs
xchg
sbb
clc
faddl
add
cmp
clc
cs
sbb
clc
mov
dec
add
add
push
mov
clc
sub
push
add
in
mov
clc
sub
add
xchg
loopne
or
clc
aam
insl
add
add
add
int
clc
stos
push
jo
inc
add
dec
add
stc
add
cmp
imul
dec
sub
clc
sub
ret
clc
add
add
cmpsb
clc
ret
hlt
lahf
pop
imul
out
mov
and
cmp
clc
jo
add
loop
pop
lea
add
jbe
jns
pusha
add
lods
jg
xchg
or
cld
lods
pop
inc
clc
cmp
pop
cld
push
ret
xchg
and
es
jae
add
cld
cwtl
jge
loope
mov
cld
inc
clc
xchg
nop
fidivrl
pop
outsl
cmp
push
fwait
jmp
mov
fistpll
and
add
clc
xbegin
jmp
outsl
push
add
jns
enter
rcrl
rclb
pop
leave
out
sar
xchg
sub
cltd
mov
clc
mov
cvtpi2ps
add
shl
clc
add
add
add
add
lock
sar
add
adc
add
ret
nop
mov
add
clc
sbb
add
add
add
mov
push
pop
stc
mov
add
fistpl
clc
hlt
jnp
sub
clc
pop
and
leave
fdivr
or
cmp
clc
jae
add
add
sar
clc
mov
clc
dec
lahf
jmp
clc
xchg
jne
hlt
or
nop
inc
clc
test
push
mov
cld
push
ret
sub
aaa
faddl
cmp
mov
mov
mov
push
and
add
mov
jmp
outsl
xor
cmp
ret
add
sub
loopne
push
stc
push
cwtl
loop
jne
pop
shlb
jmp
pushf
imul
xor
add
inc
add
mov
decl
cld
push
ret
je
int3
jno
add
bound
add
clc
clc
mov
clc
aaa
cltd
out
sub
loope
cmpsb
clc
xchg
push
add
inc
clc
push
mov
iret
test
fdiv
xchg
xchg
and
add
insb
insl
sub
add
xor
add
cmp
add
out
lcall
clc
xor
add
jno
add
xor
add
sar
clc
cmp
outsb
ret
clc
int
clc
clc
push
dec
fwait
jmp
or
mov
inc
clc
sub
add
push
inc
clc
or
mov
add
inc
clc
cmc
xchg
out
and
add
jmp
jmp
sub
adcb
mov
clc
dec
or
push
call
cld
push
ret
test
lock
or
in
test
lods
repz
gs
out
cmp
in
dec
and
add
clc
cmp
adc
add
pop
fs
inc
add
repz
add
mov
and
sbb
clc
fwait
jmp
lea
add
add
pop
popf
bound
add
jb
add
aas
mov
pop
aad
out
cmp
sbb
push
and
data16
sub
clc
adc
mov
fwait
jmp
imul
clc
sbb
shrb
clc
lods
dec
pushf
outsb
fisubl
lods
lods
jmp
mov
add
clc
ret
cli
sub
mov
fwait
jmp
xchg
sub
dec
fwait
jmp
sub
ja
lods
mov
push
fwait
jmp
sub
xchg
dec
sub
clc
in
insb
and
add
clc
jo
add
mov
out
xchg
xchg
push
loopne
pop
cmp
add
pusha
add
lods
pop
or
jbe
lock
pop
xor
add
mov
xchg
lcall
jno
or
clc
xor
jecxz
aas
inc
clc
mov
insb
aaa
cmp
loop
mov
inc
clc
sub
add
cmp
sbb
loope
mov
clc
into
inc
clc
hlt
and
add
pop
pop
or
lret
jo
add
add
cltd
and
ret
pop
clc
bound
add
repnz
imul
or
ljmp
push
push
test
sub
addr16
inc
add
sbb
jo
add
and
cld
push
ret
adc
addr16
sbb
jl
insb
arpl
add
pop
repnz
jns
push
add
xchg
loop
sar
mov
mov
gs
or
clc
jg
mov
add
pop
mov
push
add
mov
xchg
pop
clc
jp
clc
insb
cmp
push
push
dec
adc
add
clc
jns
xchg
lret
stos
xor
add
bnd
add
mov
add
clc
bound
add
mov
dec
stos
mov
leave
repz
lods
cwtl
push
sbb
arpl
add
clc
push
jo
add
repz
push
add
inc
clc
inc
clc
insb
data16
inc
add
push
clc
pop
mov
int
in
gs
xbegin
mov
clc
xchg
lock
add
mov
xchg
xor
add
arpl
add
sub
add
fwait
jmp
dec
push
sahf
dec
jb
add
lock
mov
ret
sub
or
test
arpl
add
cld
insb
and
add
add
test
add
add
add
clc
or
clc
sbb
clc
leave
push
popf
mov
out
adc
add
sub
xbegin
mov
or
add
popa
lea
pop
bound
add
mov
pop
sub
add
add
mov
push
das
sub
pop
in
sbb
fwait
jmp
and
push
lods
or
jns
dec
push
out
data16
or
clc
push
es
das
sub
aas
mov
clc
push
movsb
clc
lahf
movsl
clc
pop
ret
clc
dec
outsb
sbb
add
stc
xor
add
test
clc
mov
add
add
cmp
dec
mov
or
dec
and
xor
add
sub
loope
pop
test
clc
mov
jmp
sub
std
add
add
imul
xor
add
add
scas
rorl
stos
cli
mov
inc
add
repnz
pushl
cld
push
ret
and
jmp
loop
clc
dec
sbb
sub
jp
xor
clc
jl
add
data16
movsb
clc
sub
dec
enter
mov
xor
sub
jl
fwait
or
and
add
xchg
sbb
mov
add
faddl
clc
dec
cmc
fisubl
push
xor
add
cmp
add
push
and
add
adc
add
push
sbb
sub
rorl
inc
add
jbe
stc
stos
inc
add
cmp
jg
clc
push
sarb
cmpsl
clc
and
je
clc
mov
dec
ss
add
and
add
sar
inc
clc
fs
in
int3
pop
mov
mov
adc
add
push
jp
stc
xchg
push
mov
add
cs
add
stc
lcall
clc
movsl
clc
test
sbb
pop
out
mov
clc
and
jmp
inc
add
adc
add
add
icebp
mov
add
adc
add
clc
dec
cmp
add
mov
clc
sbb
clc
jle
clc
fdivrp
adc
add
clc
sbb
inc
add
xchg
or
xchg
mov
enter
push
daa
clc
test
mov
fwait
jmp
adc
add
and
add
nop
in
xor
add
out
inc
add
in
sub
push
add
xchg
mov
add
adc
add
fstps
xabort
add
sbb
pop
mov
aam
in
jecxz
push
lret
sbb
aas
push
xchg
stos
mov
add
push
add
ret
add
add
add
adc
ljmp
dec
loope
dec
test
lcall
add
lea
add
jmp
add
rcpps
add
push
add
scas
std
add
add
push
fwait
jmp
xchg
scas
xchg
jp
jb
add
jb
add
clc
hlt
push
icebp
fwait
jmp
xchg
fs
inc
ljmp
clc
out
sbb
mul
clc
pop
mov
repz
mov
fwait
jmp
sbb
add
add
int3
or
add
and
add
enter
cmpsl
clc
cmp
mov
clc
hlt
popa
add
dec
sub
addr16
movsl
clc
mov
clc
pop
cmp
and
add
clc
cmp
add
outsb
and
add
add
inc
add
mov
out
stc
xchg
or
add
mov
jae
jmp
das
bound
add
cmp
cmp
push
bswap
popa
add
sub
add
fcomps
sub
cmp
mov
add
fiaddl
clc
clc
or
add
int
add
insb
xchg
or
clc
and
add
movsl
clc
add
add
pop
rcr
sub
or
and
add
jo
add
ds
cmp
cmp
add
add
mov
add
lea
add
sar
adc
add
cmp
sub
dec
sti
js
mov
jg
fiadds
add
movsb
fwait
jmp
mov
sub
lahf
xchg
xchg
jmp
loop
cld
push
ret
cwtl
sub
xor
fwait
jmp
test
add
cmp
jmp
clc
jns
clc
clc
jp
aaa
cli
mov
stc
lret
stos
or
out
cmp
clc
pop
icebp
adc
add
add
pmaxub
test
clc
test
mov
cmp
xchg
push
add
jb
add
clc
sti
or
lret
popf
adc
add
ret
clc
adc
add
lods
adc
aad
push
es
cmp
add
dec
decl
lods
inc
add
push
outsl
jno
mov
xor
add
xlat
das
mov
loope
sub
test
call
push
ret
sub
aaa
cmp
int
jae
add
insb
mov
ja
ret
clc
or
cld
push
ret
sub
clc
xchg
and
add
sub
inc
add
push
in
ds
ficoml
add
cmp
jb
add
clc
mov
sar
lahf
icebp
stos
dec
aaa
ret
clc
daa
clc
mov
clc
cli
lods
xchg
jg
lods
xbegin
pop
dec
adc
outsl
sub
cmp
clc
cmp
mov
add
add
test
lcall
nop
pop
push
add
cmp
xchg
or
clc
in
ret
xlat
ljmp
in
fyl2x
test
mov
add
add
sub
add
int3
jne
xlat
jne
clc
xchg
cwtl
leave
je
pop
call
dec
cmpsl
clc
insl
je
add
xchg
or
add
pop
pop
mov
add
insl
cmp
dec
test
mov
jmp
mov
xchg
fwait
add
add
aaa
cmp
and
add
add
clc
hlt
fs
dec
jo
add
insl
xchg
ja
mov
repnz
inc
clc
xchg
cmpsb
clc
lret
add
bound
add
jmp
clc
daa
clc
or
and
nopl
clc
mov
ljmp
mov
adc
add
lahf
mov
jbe
clc
addr16
ja
dec
sub
clc
out
pop
lret
inc
add
push
mov
add
rclb
add
stos
xor
xchg
adc
add
add
cmc
fiaddl
add
cmp
sbb
xchg
ljmp
movsb
outsl
and
fadds
leave
lock
clc
test
pop
scas
xchg
aaa
fnstcw
out
jbe
cs
cmp
add
and
add
add
nop
out
fidivl
add
jbe
jl
mov
cld
push
ret
xchg
sub
clc
and
add
mov
mov
add
push
in
aad
cmp
rol
clc
stc
sbb
hlt
or
xor
clc
mov
add
out
bound
add
pop
sti
aas
push
out
push
mov
fwait
jmp
push
xchg
dec
aas
sub
push
leave
jp
fs
add
add
fs
dec
bound
add
add
bound
add
add
dec
clc
push
clc
mov
inc
clc
mov
xor
add
dec
fdivrl
add
ret
jbe
pop
fwait
jmp
nop
cmpsb
sub
test
mov
push
clc
dec
or
add
inc
add
pop
mov
std
insl
mov
pop
arpl
add
jge
popf
sbb
add
push
add
mov
add
cmpsl
clc
lea
nop
cmpsl
clc
cltd
cltd
lcall
popa
add
push
lods
lcall
sub
jecxz
hlt
xor
add
in
test
clc
sar
add
cmpsb
clc
jl
mov
fwait
jmp
sub
clc
pop
add
add
and
add
ret
clc
div
cmp
sbb
xchg
lods
sar
clc
jg
fcmove
adc
add
call
clc
or
clc
sbb
add
ljmp
pop
jnp
xchg
push
xchg
scas
imul
xor
add
adc
add
add
jecxz
dec
push
mov
fwait
jmp
cwtl
sub
decb
xchg
outsl
loop
js
clc
push
cli
outsl
aaa
sbb
test
clc
inc
add
mov
add
das
add
fldenv
adc
int
mov
jne
fwait
jmp
insl
cmp
add
or
sarl
fsubrl
arpl
add
clc
xchg
aad
clc
fisttpll
ds
add
push
leave
and
add
clc
pop
sbb
adc
clc
gs
ret
clc
pop
clc
cld
inc
add
popf
inc
add
xlat
mov
jno
add
add
add
mov
add
mov
add
fcomps
call
fwait
jmp
jge
sbb
scas
loopne
push
add
jmp
clc
or
add
jns
out
push
lahf
decl
adc
add
data16
hlt
push
ficompl
add
add
dec
mov
clc
sbb
clc
and
add
add
fwait
jmp
pushf
dec
inc
clc
adc
add
add
mov
clc
xchg
cmp
clc
stos
repnz
mov
lock
add
cwtl
push
adc
jb
add
clc
data16
out
add
movsl
clc
mov
fucomp
hlt
add
jge
add
repz
mov
fwait
jmp
dec
lea
clc
repnz
add
xor
clc
dec
push
mov
jge
and
clc
inc
clc
shl
clc
mov
jecxz
sar
clc
clc
je
push
into
jle
clc
lcall
fsubs
xor
add
add
sub
clc
ret
clc
add
add
add
aam
add
arpl
add
out
fucomip
lahf
xor
add
scas
sahf
mov
outsb
mov
clc
mov
outsb
jge
mov
add
incl
es
hlt
aad
jae
add
pop
pop
aad
add
in
jecxz
push
ljmp
stc
jnp
mov
in
leave
push
add
cwtl
cmp
lods
inc
add
cmp
adc
add
add
clc
mov
xabort
imul
clc
ret
add
xor
add
inc
clc
push
add
js
cmpsl
clc
or
mov
clc
and
add
clc
daa
clc
insl
adc
add
add
add
add
clc
mov
xchg
shlb
sub
sbb
test
jmp
loop
inc
add
cmp
cmp
fcmovnbe
fs
inc
clc
cmp
icebp
addr16
dec
arpl
add
gs
pop
or
clc
mov
push
mov
fwait
jmp
inc
and
fcomp
fs
cld
fistpl
lock
jo
add
stos
int3
sub
in
xchg
dec
push
stos
mov
push
xchg
fwait
jmp
sub
iret
mov
sbb
ret
cld
push
ret
sahf
sub
lock
clc
imul
mov
mov
pop
sbb
add
or
pushf
sub
jg
stos
pop
mov
clc
adc
add
pop
jae
add
dec
jmp
clc
pop
scas
in
ljmp
bound
add
pop
out
sbb
add
push
add
push
hlt
fwait
dec
aad
jne
insl
iret
and
add
add
jle
clc
mov
clc
icebp
ret
clc
das
shll
jmp
adc
incl
xchg
cwtl
ficompl
lret
push
add
inc
clc
pop
loopne
mov
add
cwtl
aas
xor
push
cwtl
clc
cmp
inc
lock
push
ret
push
pop
xabort
xchg
mov
jg
add
pop
cld
or
adc
add
inc
add
incl
add
dec
jp
pop
icebp
icebp
sbb
outsl
dec
jmp
xor
add
cld
leave
test
xlat
lods
or
add
js
xor
clc
test
test
xchg
sar
cmp
int
mov
cmpsb
clc
incl
jmp
sub
sub
mov
jbe
add
jo
add
clc
push
mov
fwait
jmp
and
sub
ret
lahf
mov
es
clc
aad
sar
aad
ret
notl
add
jb
add
add
xchg
push
aad
push
clc
fsubrl
shlb
add
clc
jl
lods
es
adc
pop
scas
push
jne
clc
mov
add
cmp
cmp
push
ret
sub
out
fimuls
int3
int
cld
cmpsb
clc
xor
add
add
enter
je
push
cwtl
and
add
lea
fwait
jmp
add
lods
repz
xor
add
add
mov
cld
out
jnp
cmp
daa
clc
sub
clc
insl
sbb
and
loope
aam
adc
add
clc
xchg
scas
je
mov
clc
lods
ja
xchg
jmp
arpl
add
sahf
js
xchg
imul
stc
mov
push
cwtl
mov
clc
xor
add
add
sub
cmp
pop
outsl
sub
pop
mov
and
add
stos
lahf
inc
clc
cmp
push
pop
clc
adc
add
add
std
sub
call
cmc
and
cmpsl
clc
xor
add
lods
inc
clc
mov
clc
mov
add
clc
add
add
fs
ret
clc
call
out
cli
and
add
jl
loope
pop
arpl
add
and
add
iret
lret
push
add
cmp
cmpsb
clc
out
outsb
lahf
dec
mov
pop
mov
add
sti
xchg
mov
sbb
sbb
inc
add
aam
clc
and
add
clc
shl
push
clc
aam
in
call
add
cs
mov
out
mov
add
in
es
fcompl
add
add
add
push
jmp
push
add
aam
mov
add
lods
mov
add
fwait
jmp
mov
add
push
pop
fwait
jmp
dec
insb
cmp
dec
adc
add
mov
add
add
clc
or
add
sub
enter
sahf
push
mov
add
jg
cs
add
sbb
clc
ficompl
jne
lret
push
mov
mov
dec
sarb
dec
shrl
pushf
mov
xor
add
xbegin
jno
add
stc
mov
filds
xor
add
dec
cmc
inc
clc
jbe
inc
clc
xchg
cmp
clc
insl
rep
xchg
xor
add
cmp
jmp
cmp
rorb
fldl
add
cmpsl
clc
and
add
push
fwait
jmp
adc
xchg
push
or
inc
add
jp
inc
clc
cmp
push
mov
fwait
jmp
cmpsb
mov
add
sar
cmp
jge
push
add
lods
jnp
jnp
jnp
cmpsl
clc
or
add
pop
mov
mov
clc
gs
cmp
mov
add
test
or
clc
xchg
cmp
cmp
jnp
clc
and
add
repnz
dec
mov
clc
sar
hlt
push
and
mov
xbegin
data16
and
add
clc
out
mov
clc
mov
add
mov
aas
dec
test
xor
add
clc
fwait
movsb
clc
mov
out
cwtl
in
aaa
cmp
adc
add
add
ljmp
add
adc
add
clc
test
arpl
add
cld
into
loopne
inc
clc
lcall
add
and
clc
ret
clc
in
sbb
fld
clc
push
xchg
push
push
fwait
outsb
fists
cmp
clc
add
sub
nop
jae
add
add
fwait
jmp
jge
xbegin
mov
into
hlt
lcall
sub
inc
aaa
mov
mov
movsb
clc
repz
mov
mov
in
loop
fwait
or
addr16
xchg
inc
add
in
jae
add
add
jo
add
in
jmp
fwait
jmp
add
nop
and
add
add
clc
aad
sbb
add
das
or
fiadds
add
xlat
movsl
clc
sub
mov
mov
pushf
stc
sti
scas
dec
repnz
or
cmp
and
fnclex
clc
xor
add
clc
outsb
pop
mov
jg
das
pop
xabort
clc
shr
mov
add
sti
daa
clc
in
rorb
aas
xchg
fldl
add
or
dec
lcall
push
ret
adc
cmpsb
mov
add
dec
fwait
pushf
pop
lahf
loope
push
scas
jmp
popf
jmp
rcrl
outsl
and
mov
clc
mov
das
arpl
add
add
add
fincstp
leave
test
icebp
sub
clc
aam
ds
pop
clc
cmpsl
clc
std
enter
test
clc
jle
jecxz
shll
pop
cltd
popa
add
jo
add
scas
sub
test
clc
dec
pop
int
mov
clc
hlt
jle
clc
fstpl
add
add
stc
cld
aad
mov
out
cmp
add
cld
mov
jns
into
jmp
add
cmp
mov
fwait
jmp
test
dec
mov
cmc
call
and
add
daa
clc
into
mov
in
out
mov
clc
fxch
fistps
xchg
ds
fstps
inc
ja
popf
in
cmp
movsl
clc
push
clc
inc
add
xor
inc
add
push
mov
mov
fwait
mov
shrb
cld
stos
fdivrs
push
add
daa
clc
repnz
add
iret
cli
popl
clc
insl
xlat
fistpl
clc
lahf
lock
out
add
stos
cwtl
pop
je
adc
add
nop
clc
xor
push
add
sar
mov
es
jge
sbb
jns
lcall
push
add
add
clc
jnp
mov
out
mov
clc
call
call
sbb
cwtl
testl
movsb
clc
sbb
jo
add
out
jp
push
cld
push
ret
ja
sub
add
add
add
pop
out
jb
add
add
int
clc
aad
movsb
clc
out
jle
add
add
stc
out
dec
enter
popa
add
cmp
add
push
clc
fsubs
mov
mov
lahf
xor
add
jmp
divps
aas
jecxz
nop
pop
and
add
add
add
add
inc
clc
in
arpl
add
fwait
jmp
sub
ja
add
out
push
add
sti
ljmp
sbb
testb
add
pop
ret
clc
xchg
cli
push
ret
decl
mov
lcall
add
mov
xchg
sub
pusha
add
pop
cmp
add
adc
add
hlt
imul
clc
repnz
mov
push
into
pop
adc
add
add
es
xor
mov
clc
shll
and
add
add
jg
sbb
sti
adc
add
add
in
repz
inc
add
imul
xchg
mov
shrl
clc
jb,pn
add
push
add
sub
push
add
and
add
cmc
xchg
stc
stc
lock
push
clc
jg
xor
fwait
jmp
popa
lock
mov
clc
mov
shrb
dec
or
sbb
int
cmp
add
mov
mov
in
nop
sbb
clc
mov
add
std
aam
loop
mov
clc
sbb
mov
inc
add
cmp
xor
add
sub
add
add
imul
add
popa
add
mov
leave
loope
xchg
xor
add
sar
repz
jge
fisttpl
cmp
jmp
arpl
jmp
popa
mov
pop
fmuls
jb
add
in
es
gs
mov
cmc
pushf
cmp
mov
clc
cltd
push
sbb
sub
add
add
cwtl
sahf
and
add
pop
sahf
cmp
or
adc
add
mov
clc
in
inc
add
rcrl
je
fwait
jmp
add
add
xchg
add
add
jecxz
daa
clc
xor
add
jle
fcoml
mov
test
je
sub
add
lods
sbb
jae
add
clc
mov
pop
add
add
sar
add
leave
inc
add
mov
add
pop
xchg
push
js
pop
xor
add
add
std
in
and
inc
clc
es
pop
jo
add
out
pop
pusha
add
jo
add
loope
pop
xchg
popf
inc
clc
jno
add
adc
add
xlat
cld
out
sub
xor
push
add
inc
clc
ret
xor
add
clc
mov
add
add
mov
iret
and
fadds
add
add
adc
lods
jmp
stos
out
jne
leave
stc
sbb
test
decl
clc
mov
add
mov
clc
cltd
jno
add
movsb
clc
or
add
or
mov
test
add
jbe
jae
add
or
insl
cmp
jg
clc
jne
clc
and
add
inc
add
mov
add
mov
clc
incb
sahf
xlat
sbb
imul
add
sahf
cwtl
sub
add
xchg
mov
add
add
fwait
jmp
sub
lods
dec
mov
xchg
mov
add
cmp
and
add
jns
xor
sub
jl
mov
fs
jns
clc
jo
add
add
test
loop
scas
stos
sahf
iret
sahf
cmp
xchg
hlt
add
jge
adc
add
clc
jae
add
lret
xchg
js
ret
clc
add
clc
and
add
dec
push
notb
jmp
lea
adc
mov
loop
pop
icebp
test
clc
inc
add
jl
fs
aas
jmp
adc
add
push
cmp
mov
daa
clc
in
mov
popf
pop
lcall
xor
clc
or
in
xabort
data16
sar
push
add
int3
cmp
inc
add
jb
add
clc
xchg
and
or
loop
sub
addr16
push
add
dec
add
add
push
add
dec
daa
clc
aam
add
das
in
ss
cmp
inc
clc
test
adc
add
clc
xor
add
sar
mov
sub
clc
cltd
lret
jno
add
decb
loopne
xchg
mov
add
pop
cld
lods
adc
add
sub
add
clc
xchg
popf
adc
sbb
jo
add
ds
sbbb
aaa
jbe
clc
pushf
fwait
out
fs
sti
push
inc
add
xchg
aaa
loop
daa
clc
fs
pop
clc
shlb
clc
stc
adc
add
clc
clc
test
xor
test
and
add
clc
cmp
xor
int
clc
dec
inc
add
mov
clc
xbegin
aaa
in
outsl
stos
xlat
mov
fnsave
add
push
add
aad
push
fwait
jmp
mov
jb
add
add
mov
cltd
inc
add
scas
push
mov
cld
push
ret
push
adc
add
add
add
xchg
imul
inc
clc
cmovbe
adc
or
xchg
inc
add
and
add
mov
sub
and
add
add
and
add
or
pop
aad
add
add
gs
clc
add
add
add
imul
add
shll
add
mull
add
jno
add
or
sub
add
mov
jg
test
fwait
jmp
push
outsl
jno
out
jg
mov
lcall
incl
or
into
sbb
push
ret
or
pop
and
add
clc
xchg
push
clc
mov
add
stos
sub
mov
clc
pop
stos
or
nop
sbb
clc
pop
repnz
lcall
ljmp
jo
add
add
add
jmp
add
jl
in
data16
mov
das
ss
push
add
adc
add
jmp
inc
dec
das
sub
add
push
add
push
lcall
pushl
add
add
cwtl
xchg
fistl
push
ret
pop
mov
sahf
addr16
pop
dec
sbb
add
add
cltd
jb
add
push
fwait
jmp
sub
fs
aas
imul
clc
jns
ret
clc
outsl
outsl
ss
add
cld
xor
add
bound
add
xor
add
cmp
xor
loop
hlt
icebp
mov
clc
push
add
mov
fisubl
add
add
add
add
xchg
dec
cltd
inc
add
adc
add
clc
ja
push
xlat
ljmp
int
cmp
adc
incl
add
and
add
add
sub
pop
lods
push
push
sahf
add
mov
inc
clc
jge
add
adc
add
clc
testl
add
add
gs
or
clc
fsts
dec
xor
add
xchg
pop
pop
js
clc
jmp
fs
or
add
mov
push
ret
mov
lods
ds
insb
cmp
insl
test
lock
add
ds
add
clc
mov
arpl
add
clc
aam
cmc
out
pop
pop
clc
sub
clc
inc
clc
pop
es
mov
add
int
clc
fs
jbe
ja
fs
pop
out
shrb
pop
fwait
mov
clc
add
add
arpl
add
mov
sub
fwait
es
cmpsl
clc
xchg
sar
add
fs
add
add
fwait
jmp
das
dec
pop
xchg
es
mov
jbe
mov
clc
scas
xor
add
sbb
add
adc
add
adc
add
xabort
sub
add
sbb
push
pop
fwait
jmp
sub
jp
aas
jns
jl
clc
lea
or
add
cli
push
pop
mov
mov
clc
mov
xabort
seto
add
push
add
jmp
push
lods
fwait
jmp
je
adc
sub
fcoml
cmp
jno
add
add
leave
into
or
clc
adc
es
mov
sahf
lret
clc
stc
ljmp
mov
test
add
pop
mov
clc
loope
pop
push
add
push
add
dec
stc
xchg
aad
cli
cmpsl
clc
jnp
add
ret
clc
xor
or
mov
clc
cmp
add
add
mov
fistps
mov
clc
sbb
xor
pop
test
or
clc
cmp
add
fisttpl
push
add
ljmp
jo
add
clc
std
adc
add
in
or
add
fwait
jmp
popa
leave
pop
neg
and
data16
mov
mov
and
add
add
add
sbb
add
clc
sub
clc
bound
add
add
fwait
jmp
lods
das
cmp
jmp
cld
or
cld
add
add
add
movsl
clc
jge
clc
or
ret
outsb
add
add
push
rcll
add
xlat
aad
add
cld
sti
decl
lods
jmp
inc
and
fisubl
lods
js
clc
enter
xor
add
mov
jae
add
clc
xor
add
je
pop
and
add
adc
add
clc
cmp
jmp
push
jge
aaa
add
add
add
clc
jb
add
clc
cmc
adc
add
clc
ja
test
add
add
add
mov
aaa
ret
clc
lods
sar
mov
push
add
pop
pop
mov
fiadds
clc
add
add
outsb
or
dec
mov
clc
sbb
add
fwait
jmp
or
adc
add
clc
int3
adc
inc
add
xor
lock
xor
add
sbb
xor
sub
xchg
fidivrl
push
add
cltd
or
daa
clc
mov
and
add
clc
cmp
add
inc
add
sub
clc
out
fisubrs
iret
sub
inc
clc
mov
add
add
push
adc
push
push
fwait
jmp
sub
sub
sarl
enter
mov
dec
sub
test
clc
mov
fwait
jmp
adc
inc
pop
test
or
mov
clc
mov
add
fwait
jmp
sub
sub
repnz
xor
add
mov
imul
add
test
add
mov
add
int3
daa
clc
sub
add
mov
lods
cwtl
ret
clc
inc
clc
movsb
clc
das
xor
add
clc
sahf
sarb
xor
push
mov
clc
or
aam
js
clc
pop
mov
outsb
add
add
mov
sbb
mov
adc
jmp
mov
in
push
add
cmp
aad
add
mov
add
scas
movsb
clc
into
dec
insl
jmp
pop
fldcw
inc
add
fnstsw
mov
clc
jmp
xabort
clc
pop
pminub
clc
cmp
pop
xor
add
aad
or
test
leave
popf
pop
add
add
add
clc
inc
add
jecxz
hlt
mov
xchg
lcall
ds
add
cmp
in
arpl
add
add
dec
jae
add
clc
dec
mov
addr16
das
mov
add
add
int
sbb
fnstcw
push
aaa
and
add
loopne
xlat
cmp
dec
xchg
inc
clc
ljmp
mov
inc
clc
scas
sbb
clc
or
add
add
lock
sub
leave
addr16
movsb
clc
aam
add
adc
inc
clc
addr16
push
clc
mov
mov
add
sbb
gs
das
dec
loopne
loope
pop
pop
nop
in
inc
clc
data16
push
add
adc
add
sar
cld
outsl
sub
add
sub
clc
imul
js
clc
nop
dec
lock
stos
sbb
and
fwait
jmp
sahf
pop
test
sub
daa
clc
inc
clc
outsb
lods
sub
push
fwait
jmp
cmp
sar
clc
xchg
mov
clc
inc
clc
in
or
scas
add
add
dec
push
mov
clc
lahf
adc
add
sti
mov
add
add
clc
loopne
cmp
clc
inc
add
push
add
or
jb
add
add
push
cmpsb
clc
sbb
xor
add
clc
mov
jne
clc
divl
test
add
sar
add
push
push
add
sbb
jmp
lcall
xchg
sub
int3
cmp
sub
add
jne
push
mov
or
pop
xchg
push
mov
clc
cltd
xchg
ss
add
std
mov
and
lahf
ret
clc
inc
add
mov
pop
clc
lahf
sar
int3
es
mov
jp
icebp
xchg
mov
out
mov
outsl
popa
fs
jmp
push
fs
sbb
aam
add
imul
sbb
clc
pop
sbb
clc
jne
fimull
mov
mov
scas
stc
out
outsb
xor
add
clc
push
cmp
add
pop
clc
xabort
add
pop
pop
push
lods
sbb
add
outsb
cmp
jb
add
ljmp
cld
push
ret
mov
dec
ljmp
add
in
jmp
sub
add
mov
clc
cmp
dec
mov
clc
mov
add
pop
push
add
stos
fcompl
mov
add
imul
gs
outsl
mov
sbb
clc
add
add
aad
cmp
aaa
pop
and
add
bound
add
imul
movsb
clc
std
ret
clc
das
xchg
or
add
adc
add
clc
push
add
dec
mov
iret
jbe
clc
push
loopne
sahf
jl
adc
add
fucomi
xchg
jp
pop
shlb
add
add
clc
xchg
aad
xabort
clc
cli
add
xlat
gs
adc
add
mov
clc
lret
or
add
cmp
clc
push
add
arpl
add
xchg
lock
fwait
dec
repz
mov
xchg
loop
mov
add
in
sahf
icebp
cmp
add
sub
lcall
clc
in
push
add
loop
adc
add
jl
clc
lods
sar
and
cmp
push
add
push
jne
fwait
jmp
xor
add
adc
add
cmp
pop
sbb
dec
xlat
lcall
scas
addr16
data16
scas
mov
or
rorb
and
add
add
xor
add
clc
movsl
clc
mov
add
inc
clc
loopne
mov
add
add
test
pop
hlt
fstps
add
aaa
je
mov
adc
add
xor
cld
push
ret
test
mov
mov
lcall
add
outsl
pop
clc
inc
add
sub
mov
xchg
das
dec
decb
add
jle
imul
push
pop
jle
mov
cmp
clc
dec
cld
cmp
and
add
sti
dec
stc
into
sbb
sahf
push
add
ja
es
push
push
inc
add
adc
clc
decb
clc
fcoml
add
bound
add
dec
int3
dec
sbb
icebp
cmp
fsubrl
scas
cmpsb
clc
cltd
das
pop
fs
xchg
push
add
push
lret
jecxz
xchg
mov
ds
clc
shl
loop
pop
cmpsb
clc
std
inc
clc
cmp
add
clc
mov
xor
add
icebp
and
add
clc
cmpsl
clc
dec
dec
icebp
iret
lock
mov
add
jmp
das
sub
pop
push
dec
dec
sti
xchg
push
add
ficompl
add
mov
ret
add
adc
insb
test
cmp
clc
push
shr
fwait
jmp
dec
xchg
pop
int3
std
cs
and
add
clc
ss
xor
add
lcall
add
add
add
and
mov
jno
add
add
push
add
and
add
xlat
rol
clc
repz
js
clc
cmp
pop
cwtl
jae
add
add
outsb
stos
loopne
add
add
add
repz
add
mov
es
mov
fwait
push
clc
mov
lods
ret
dec
cmp
rorb
mov
push
ret
das
nop
sub
jo
add
sbb
cmc
add
ret
outsl
imul
adc
mov
add
add
mov
clc
jne
add
push
mov
inc
add
imul
xchg
dec
jno
add
and
add
add
dec
cmp
inc
add
aas
cmpsl
clc
push
add
xlat
stos
xchg
xbegin
inc
roll
sub
dec
scas
sbb
outsb
and
push
sbb
loop
lahf
fisubrs
dec
xchg
mov
mov
sbb
push
adc
push
ret
inc
sub
clc
dec
ljmp
ljmp
push
mov
add
fisttps
sbb
imul
shlb
bound
add
add
pop
push
xchg
popf
sti
jg
div
fwait
jmp
xor
test
clc
mov
shll
xor
add
or
add
into
ds
repnz
clc
lret
sub
adc
add
mov
jecxz
mov
add
add
cld
push
ret
sub
adc
add
test
mov
jmp
sub
movsb
insb
xchg
dec
add
add
add
xbegin
push
pop
cld
push
ret
sbb
imul
push
xbegin
clc
push
clc
es
cmp
loope
fidivrs
or
xor
add
sub
call
mov
add
lret
mov
sar
cmp
pop
clc
aam
clc
lods
fimuls
add
inc
clc
mov
movsl
clc
in
mov
clc
pop
clc
push
add
insl
mov
pop
cltd
xchg
add
add
add
decb
pop
lea
add
mov
add
sub
aas
mov
inc
clc
mov
cmp
mov
sbb
mov
push
adc
clc
sbb
mov
clc
dec
add
add
add
add
sbb
je
fwait
jmp
pop
pop
adc
add
cmp
add
add
mov
pop
lods
cmpsl
clc
popf
gs
test
mov
clc
ss
add
lods
lcall
add
and
add
sbb
unpckhps
clc
inc
add
cmp
and
add
add
dec
cmp
add
hlt
mov
add
cltd
pop
pop
push
or
cmp
add
mov
pop
add
xchg
fistps
mov
cmp
clc
stos
inc
clc
in
aas
cmp
inc
clc
dec
insb
mov
clc
lret
imul
or
clc
push
xor
add
clc
out
mov
jmp
sbb
lret
xchg
cmp
sub
clc
int
add
inc
add
or
inc
add
sub
jg
cmp
arpl
add
das
jo
add
add
aaa
es
cmp
aaa
xchg
in
cmp
xor
add
fildll
cmp
and
add
add
or
add
add
add
sub
hlt
shlb
clc
jo
add
add
out
adc
clc
pop
xchg
xchg
insl
insl
inc
clc
mov
add
or
cmp
gs
stc
xor
xchg
pop
and
add
fmull
lods
lock
xchg
sar
clc
out
jae
add
add
add
jo
add
cmp
movsl
clc
in
test
faddl
add
je
sar
clc
mov
clc
mov
dec
ret
lcall
mov
inc
add
out
movsb
clc
ret
clc
sar
je
adc
add
add
mov
mov
add
sti
sbb
aas
cs
mov
add
test
adc
add
xchg
inc
clc
pop
dec
test
sub
add
xchg
push
add
or
add
in
lcall
push
ret
sub
aaa
repz
add
push
add
pop
ljmp
ja
jns
add
push
clc
cmp
flds
jle
xor
add
push
cmp
sbb
push
adc
pushl
dec
pop
jle
fidivrl
data16
fcoms
or
add
lea
mov
aam
mov
clc
movzwl
mov
clc
aas
cltd
pop
adc
add
clc
pop
movsl
clc
sar
and
push
add
gs
loopne
xchg
or
add
mov
fwait
jmp
mov
js
mov
dec
mov
ljmp
popa
fwait
jmp
jp
je
cmp
add
ss
call
push
add
out
popl
pop
xchg
popa
add
fisubl
clc
inc
add
jne
jne
adc
fs
cmp
rcrb
add
das
icebp
sub
push
add
ss
dec
loop
cmp
sahf
xchg
je
clc
sar
add
sar
clc
mov
jecxz
cwtl
jecxz
rorl
dec
jne,pn
test
pushf
add
add
xor
add
xabort
push
clc
int
add
push
clc
sbb
add
je
aad
jne
stc
add
add
cwtl
ljmp
sub
sahf
mov
mov
push
mov
inc
add
loopne
or
xor
add
push
add
fwait
jmp
and
lods
cmp
mov
jnp
clc
add
clc
sar
clc
sub
clc
push
dec
push
mov
fwait
jmp
jge
cwtl
sub
cmpsl
clc
lods
out
out
shll
clc
lods
push
pop
call
cmp
xor
add
clc
jb
add
sub
xbegin
add
imul
mov
sbb
add
add
aam
adc
add
inc
clc
inc
add
or
add
jp
clc
adc
clc
mov
add
in
dec
out
sbb
imul
mov
fwait
jmp
imul
add
adc
add
ja
clc
test
jmp
clc
mov
ficompl
clc
aad
lods
and
push
fwait
jmp
sub
call
aas
jb
add
jecxz
lret
dec
test
inc
add
mull
fwait
jmp
imul
mov
clc
pop
pop
clc
jno
add
clc
pop
mov
mov
clc
rcrb
popf
mov
cld
push
ret
cmp
fs
add
nop
cmc
loope
xor
add
add
add
xor
add
add
push
xchg
adc
add
insb
push
mov
clc
or
clc
pop
jnp
clc
and
test
xchg
scas
insl
inc
clc
in
xchg
test
test
stos
dec
pop
dec
cmp
pop
ja
dec
adc
add
clc
pop
sbb
jae
lcall
call
sub
js
clc
dec
xchg
jns
lock
ljmp
ljmp
mov
jo
add
pop
mov
add
in
out
into
roll
or
clc
dec
mov
data16
arpl
add
lcall
jns
or
jecxz
mov
loop
add
fistpl
sahf
frstor
push
fsts
sar
cmpsl
clc
lret
fwait
lcall
add
add
push
stos
xchg
add
add
sbb
leave
cmp
add
jl
dec
add
add
iret
jecxz
loopne
and
add
mov
pop
cmp
add
orb
fwait
jmp
mov
fcoml
mov
mov
dec
ret
clc
mov
and
int
clc
stc
and
mov
add
jb
add
mull
jmp
push
add
mov
mov
clc
addr16
mov
dec
pop
popa
add
xchg
mov
push
ret
sub
clc
repz
pop
stc
mov
add
add
add
and
int
sub
xlat
mov
add
rclb
lods
inc
add
mov
add
mov
add
clc
or
or
inc
clc
lea
in
mov
out
sbb
or
jbe
mov
jg
and
add
clc
push
jne
imul
clc
inc
clc
aas
ret
cmp
or
add
inc
add
arpl
add
mov
pusha
add
pusha
add
inc
add
sarb
jb
add
push
cwtl
xchg
mov
aad
jle
add
cmc
mov
clc
push
add
mov
add
test
add
cltd
aam
mov
xchg
cmp
sbb
add
aam
clc
mov
mov
into
cmovno
ret
and
popa
ja
add
cmpsb
clc
jge
clc
cmp
add
out
insl
or
out
or
icebp
leave
popf
or
and
cltd
clc
sbb
lcall
add
jns
in
xlat
xchg
push
cmp
into
sub
into
cmp
add
sub
mov
clc
mov
add
sar
adc
add
add
adc
aad
dec
dec
sbb
inc
add
jb
add
mov
inc
add
mov
arpl
add
sub
cmp
clc
fbld
pop
mov
or
insb
outsl
mov
fs
pusha
add
scas
notb
cs
clc
and
cmp
xchg
lahf
and
add
xor
xor
cmp
loop
sbb
jmp
xchg
sub
sub
clc
pop
call
push
dec
xor
add
xchg
test
ds
std
pusha
add
repnz
add
jbe
jge
ret
into
aad
aaa
dec
scas
imul
add
add
cld
sub
clc
mov
add
or
clc
mov
xchg
ljmp
push
lea
add
lret
jle,pt
mov
jbe,pn
lock
add
dec
xlat
lock
lcall
repnz
clc
push
jbe
call
test
xchg
xor
and
or
int3
outsl
sub
jmp
lods
mul
clc
cs
rcl
loopne
cmp
add
pop
ljmp
sub
int
cmp
add
mov
jecxz
mov
dec
and
cld
xchg
into
out
push
add
cmpsl
clc
mov
mov
lcall
jg
cmp
fwait
jmp
cmp
add
int3
outsb
mov
add
movsb
clc
xbegin
xchg
imul
push
add
pop
fs
adc
push
add
pop
add
out
lahf
inc
clc
aam
sub
add
pushl
rcrb
das
sub
lahf
fistl
data16
clc
mov
das
out
clc
lods
stos
icebp
ja
push
pushl
fwait
jmp
dec
sub
add
add
dec
rclb
fwait
aaa
jp
leave
cmp
aaa
addr16
loopne
and
cmpsb
clc
xor
add
push
daa
mov
decl
test
dec
mov
push
add
gs
add
add
repnz
push
add
xor
fisubrl
aaa
push
and
add
add
add
jb
add
clc
leave
push
stos
dec
xabort
sar
sar
clc
fldenv
add
mov
and
pop
das
jne
rol
clc
pop
popf
ja
add
push
lret
ja
clc
sbb
add
clc
outsb
push
bound
add
add
es
dec
xchg
sub
add
xchg
movsl
clc
lahf
push
mov
add
test
jnp
add
xor
add
pop
pop
sti
adc
add
add
sbb
lods
pop
sar
clc
ljmp
add
add
icebp
mov
add
fcmovnbe
repz
out
and
add
sub
lcall
push
ret
pop
inc
aaa
sub
add
sbb
or
fs
rcrl
clc
psllq
push
add
jnp
std
mov
add
pop
std
cmp
test
movsb
clc
pushf
cwtl
das
pop
js
clc
sub
and
mov
arpl
add
fwait
push
jl
ljmp
ja
sbb
push
mov
add
and
pop
lcall
imul
int
sbb
inc
add
jg
sbb
clc
adc
add
pop
ret
clc
cld
jg
loope
or
or
pop
stos
and
add
aas
or
sbb
insl
mov
add
jae
sub
add
xor
add
clc
or
clc
mov
fwait
imul
jmp
add
push
clc
mov
adc
mov
sbb
add
add
jl
add
loope
insb
pop
ja
clc
pop
inc
add
jecxz
push
or
inc
add
mov
roll
clc
or
push
add
in
popa
add
stc
push
cmp
push
add
into
inc
clc
lods
sar
add
loopne
fcmovnbe
icebp
outsb
mov
clc
add
add
arpl
add
lret
in
into
xchg
mov
add
call
clc
pop
and
add
add
add
gs
clc
lods
jle
testl
fstl
notl
clc
insb
mov
add
dec
repnz
cmp
scas
arpl
add
cmp
add
mov
mov
int
mov
imul
add
das
int3
mov
add
add
test
test
std
adc
add
fdivr
test
data16
test
clc
loope
or
add
xchg
inc
add
or
outsb
sbb
clc
es
cmpsl
clc
lea
cwtl
jg
clc
jo
add
in
inc
add
push
mov
clc
leave
cmp
push
clc
pop
adc
add
outsl
sub
fidivl
xlat
fisubs
add
add
iret
mov
pop
mov
add
dec
ja
jb
add
add
sbb
clc
int
notb
clc
aam
cmp
pop
int3
in
pushf
xchg
add
mov
xchg
arpl
add
mov
cmp
mov
out
dec
or
clc
das
sbb
sub
dec
addr16
jo
call
mov
add
lahf
js
fwait
cmp
fs
mov
push
add
daa
clc
iret
fbstp
add
cmp
clc
movaps
icebp
jmp
sbb
fmuls
push
clc
mov
ja
ja
cmp
add
and
add
nop
daa
clc
arpl
add
loop
dec
mov
clc
cltd
mov
mov
mov
inc
add
inc
clc
fldl
add
int3
pop
mov
add
and
clc
inc
add
fstps
jecxz
cmpsl
clc
sar
clc
pop
mov
clc
rorl
clc
dec
mov
cmp
add
cmp
int
xchg
clc
outsb
js
add
add
dec
aaa
sub
mov
add
add
out
es
or
outsl
testb
call
insb
inc
clc
mov
xchg
pusha
add
or
popa
add
stos
bound
add
ret
clc
insb
insb
jo
add
add
fimuls
leave
daa
clc
aad
inc
clc
icebp
push
add
cwtl
inc
clc
push
into
or
in
je
clc
sub
clc
cmp
loop
jbe
xchg
push
push
add
cltd
imul
mov
clc
pop
mov
adc
add
mov
cmpsb
clc
fwait
movsl
clc
stc
aam
adc
add
add
dec
mov
inc
add
mulb
movsb
clc
lret
add
pop
sbb
jecxz
add
sbb
in
repnz
or
leave
mov
add
add
fwait
notl
scas
and
sbb
push
or
mov
sar
add
fwait
testb
in
movsl
clc
nop
dec
and
add
cs
dec
in
rorl
add
add
add
xor
clc
jp
push
outsl
add
addr16
mov
add
setb
xchg
cmp
mov
push
add
add
add
add
enter
or
add
mov
sar
clc
iret
xabort
add
ret
add
or
add
sbb
mov
cmp
and
loopne
jo
add
and
add
add
mov
mov
clc
pop
and
add
pusha
add
imul
cmp
add
outsb
mov
es
sub
add
and
cltd
lret
mov
mov
add
clc
and
add
push
add
push
stos
xor
cmp
or
clc
jns
add
clc
mov
int
ret
clc
ret
jge
add
bound
add
sub
loop
xor
xchg
imul
clc
clc
gs
xlat
out
fwait
adc
add
stc
jmp
and
add
clc
inc
clc
lcall
push
mov
mov
add
mov
clc
std
adc
add
add
adc
add
ljmp
repz
test
cld
insb
xchg
dec
cmp
jns
and
add
arpl
add
jmp
sbb
jb
add
add
push
clc
cwtl
push
clc
mov
adc
add
movsb
clc
mov
jmp
dec
pop
or
jge
clc
iret
cmp
clc
pop
add
jb
add
add
pop
pop
stc
mulb
xchg
fdivrl
call
ljmp
clc
cmp
add
xor
xor
add
jge
mov
movsb
clc
xor
ret
clc
push
outsl
jle
push
add
pop
out
cmp
add
icebp
push
add
push
add
jmp
mov
clc
xchg
out
pop
clc
mov
pushf
sbb
scas
xor
add
clc
jno
add
add
add
mov
add
dec
call
jl
lods
cmp
inc
clc
cmp
movsb
clc
ds
cmp
add
mov
add
mov
stos
pop
jne
mov
add
dec
loope
into
jb
add
stc
inc
clc
push
es
call
jl
sti
mov
bound
add
xchg
mov
repz
imul
addr16
jbe
clc
mov
add
mov
add
mov
clc
mov
add
mov
clc
xor
add
and
add
jmp
clc
shrl
or
mov
cmc
and
jg
jae
add
test
push
cmpsl
clc
mov
inc
add
out
fmull
jae
add
add
push
add
cmp
lods
in
outsb
xor
add
mov
cld
mov
insb
into
mov
push
add
mov
adc
iret
or
clc
inc
clc
mov
xchg
xchg
jne
clc
dec
jmp
dec
int
lea
add
out
addr16
stc
and
add
jle
clc
nop
out
inc
add
and
aam
clc
adc
add
fisubs
inc
add
xor
lahf
call
ja
mov
xor
loop
iret
fs
mov
mov
aaa
pop
out
aas
clc
sar
clc
jg
mov
mov
sub
outsb
push
pop
sub
clc
push
int
cmp
arpl
add
cs
or
add
repz
clc
sar
jae
add
and
add
clc
xchg
mov
push
pop
repnz
xchg
pusha
add
dec
dec
sbb
or
gs
or
xor
test
test
jle
xchg
sbb
jns
clc
dec
mov
xchg
scas
mov
push
enter
mov
add
push
xchg
push
add
lret
jmp
add
add
sahf
push
add
inc
clc
fildl
add
lea
add
nop
stos
inc
clc
rolb
add
leave
cmp
add
jmp
ss
clc
mov
ret
clc
shr
int
fmuls
test
cmp
hlt
cmp
dec
stos
inc
add
outsl
cmpsl
clc
cmpsb
clc
aam
and
mov
add
add
xor
jge
imul
mov
pop
out
inc
clc
ss
clc
lea
clc
jbe
into
xor
add
add
cmp
push
add
xchg
lret
pop
lahf
dec
mov
clc
fists
add
jg
add
into
lret
cmpxchg
sbb
cmp
add
dec
insl
pop
ljmp
pop
xor
test
icebp
je
out
mov
stc
sbb
cmp
add
add
sbb
clc
dec
jo
add
or
int3
mov
repz
add
lea
fidivl
cs
push
mov
clc
push
out
inc
add
pop
sbb
loop
rcll
loopne
mov
xor
add
push
add
pop
out
mov
dec
cmp
test
pcmpgtd
ret
add
adc
add
in
out
ret
fdivrs
dec
lea
out
not
xchg
pop
mov
clc
lcall
cmp
add
imul
dec
out
sar
push
add
das
pop
aas
and
add
clc
cmp
clc
mov
xchg
mov
add
aas
adc
add
add
inc
add
adc
add
cmp
clc
fsub
clc
and
add
mov
push
add
fcmove
sbb
mov
add
clc
inc
clc
mov
loopne
test
dec
jle
add
cmp
fs
lcall
sub
mov
clc
fwait
sarl
clc
jp
clc
mov
xchg
dec
push
add
fcmovb
clc
sbb
clc
mov
sar
or
add
pop
or
clc
xabort
add
fldt
sub
add
sahf
pop
jb
add
jecxz
inc
add
lcall
jge
clc
pusha
add
add
mov
fucomip
or
clc
lods
notl
sbb
sarl
add
add
clc
and
repnz
out
push
xor
add
pushl
jbe
clc
in
movsl
clc
outsb
push
add
cmp
and
add
dec
repz
out
fists
sbb
add
cmp
push
add
rorb
add
adc
scas
testb
sti
or
clc
aam
cmc
xchg
jle
clc
pop
lods
cmp
arpl
add
add
call
clc
in
insb
out
popa
add
jnp
sahf
in
icebp
mov
sbb
clc
pop
js
jle
into
repnz
cmpsl
clc
adc
iret
pop
clc
rclb
lcall
mov
xchg
or
clc
push
je
push
roll
add
add
xchg
xbegin
mov
sub
add
sbb
cmp
add
mov
push
ja
sub
clc
and
inc
add
pop
dec
hlt
xor
add
sub
mov
out
jmp
and
sbb
cmp
jmp
and
add
in
fnstsw
inc
clc
fnstsw
add
stos
loop
cmpsl
clc
xor
add
add
clc
ds
xor
add
idivb
mov
inc
clc
ja
add
leave
push
scas
push
clc
loope
pmaddwd
pop
or
pop
fidivrs
loope
or
add
sti
jae
add
iret
ret
ja
add
pop
mov
clc
add
add
clc
xchg
lcall
into
cmpsb
clc
push
add
addr16
sbb
clc
nop
push
bound
add
add
mov
add
add
mov
mov
mov
hlt
lods
mov
xabort
aaa
push
add
out
pop
dec
jge,pn
jo
add
loope
pop
repz
jno
add
add
add
daa
clc
xabort
cld
jle
mov
sbb
pop
push
add
loopne
sbb
add
pop
sbb
add
push
push
aam
add
cmp
add
into
cwtl
pop
aam
lea
xor
add
add
aas
inc
clc
or
xor
add
aad
mov
push
clc
pushl
add
push
add
cwtl
pusha
add
test
dec
xabort
inc
clc
iret
lock
add
or
aaa
hlt
inc
add
test
scas
mov
add
gs
mov
add
int
int
clc
ficoml
clc
dec
sbb
jl
clc
push
cmp
in
fwait
jmp
sub
imul
add
clc
xor
fidivs
add
imul
jbe
add
push
add
das
shl
ret
clc
scas
mov
dec
sub
add
lea
iret
pop
jmp
dec
inc
add
cld
push
add
loopne
jl
mov
loop
cmp
loopne
jo
add
das
lods
mov
clc
inc
clc
cli
jbe
pop
movsl
clc
sub
pusha
add
cmp
clc
add
add
clc
std
prefetcht0
sub
mov
mov
or
es
or
mov
addr16
mov
dec
movsl
clc
in
icebp
paddq
add
ja
add
xor
add
ss
clc
and
add
push
add
xchg
popa
add
jns
ja
add
sbb
pop
and
add
out
cmp
xchg
frstor
add
iret
mov
add
out
cltd
sar
jo
add
cmp
ja
cwtl
sar
and
add
clc
push
aas
pop
test
jp
xor
add
mov
cs
jno
add
add
movsl
clc
sbb
clc
lcall
jge
paddsw
cltd
mov
add
sub
clc
add
add
jno
add
push
movsl
clc
cmp
clc
cmpsb
clc
ja
clc
mov
add
dec
es
pop
pushf
sbb
mov
out
ljmp
clc
nop
pop
imul
mov
jge
test
sub
pop
testb
dec
xchg
out
or
clc
aad
clc
mov
adc
clc
fstl
add
xor
add
mov
push
cmp
jecxz
xor
add
cmp
imul
cmpsl
clc
pop
add
add
sub
push
into
ss
xchg
inc
add
insl
push
mov
clc
jg
add
add
xor
pop
js
je
mov
add
or
icebp
mov
mov
mov
add
adc
add
daa
clc
test
add
and
add
cmp
mov
xchg
fiadds
add
lods
pop
mov
mov
mov
in
aam
sar
fnstsw
clc
mov
add
mov
mov
pusha
add
cli
push
xchg
pop
flds
mov
xabort
mov
mov
add
into
push
int3
popf
jmp
clc
movsl
clc
push
mov
add
xchg
mov
hlt
jne
adc
add
add
cmc
xchg
or
mov
sbb
add
and
or
add
push
jmp
scas
cld
push
clc
sub
sar
push
add
mov
clc
out
push
push
add
adc
clc
imul
sbb
add
in
mov
pop
test
pop
cmp
test
pop
inc
clc
leave
inc
add
pop
sbb
popa
add
and
add
test
dec
cmp
loop
movsb
clc
sahf
int
dec
jbe
mul
clc
je
pop
mov
add
or
clc
adc
add
add
repnz
xchg
out
rcrl
clc
mov
clc
aad
dec
std
mov
decl
imul
cli
loope
loopne,pn
cmp
clc
es
movsb
clc
addr16
xor
add
test
inc
clc
mov
pusha
add
jp
jecxz
mov
clc
mov
int
add
add
clc
shl
mov
add
jae
add
int3
loopne
hlt
or
aad
clc
xchg
push
add
rolb
clc
inc
add
ret
clc
add
add
add
jmp
sar
clc
xor
add
lahf
fistpll
decl
clc
hlt
rclb
add
lret
xchg
pop
pop
clc
stos
clc
inc
add
xor
add
clc
lea
add
daa
clc
pop
clc
cmp
add
jp
cmp
xchg
jmp
dec
std
int3
xchg
pop
xor
add
adc
add
jmp
cltd
cmp
jo
add
clc
xchg
loope
push
adc
add
ret
clc
scas
inc
add
jle
jecxz
ja
or
clc
pusha
add
jge
jle
push
add
scas
loop
out
lcall
adc
xchg
xor
jp
adc
clc
mov
xchg
jnp
clc
pop
stos
ja
aam
push
add
inc
add
xor
add
clc
sar
clc
inc
add
dec
ja
clc
mov
push
into
mov
add
clc
addr16
insl
xchg
into
insl
movsl
clc
add
ret
clc
cmp
dec
cwtl
mov
clc
dec
mov
add
imul
xchg
and
add
pop
testl
inc
add
jmp
push
dec
jno
add
add
sub
dec
jns
clc
outsb
xor
clc
aam
iret
aad
fisubrs
adc
add
clc
or
insb
pop
popa
add
adc
clc
mov
xchg
es
adc
add
jo
add
mov
clc
sbb
mov
enter
cmpsb
clc
mov
cmp
clc
jl
add
push
loop
cltd
loop
loope
xor
add
add
mulb
clc
test
cmp
pop
jl
clc
inc
clc
push
jb
add
clc
movsb
clc
push
sub
mov
xchg
sub
clc
adc
cwtl
js
fistpll
cwtl
iret
fadd
clc
hlt
cmp
mov
lods
outsb
vcvtdq2ps
repnz
add
xchg
xor
add
stos
repnz
clc
in
and
dec
pop
stc
insb
clc
push
add
dec
push
into
cmp
lret
add
add
test
dec
xlat
inc
add
lahf
mov
xchg
or
aad
and
add
jmp
pop
push
xchg
inc
clc
jbe
add
mov
clc
cmp
adc
clc
pushl
sub
sub
xchg
dec
add
add
xchg
jae
add
xchg
das
adc
clc
clc
cmp
scas
aam
xbegin
add
add
push
add
pop
cli
lret
xor
add
leave
loope
cmp
mov
mov
ss
cmp
clc
insb
sub
clc
mov
add
sbb
mov
push
cmp
xchg
lods
jg
jge
clc
sub
clc
push
add
testb
int
addr16
and
add
clc
cmpsb
clc
or
add
fdivl
fimull
push
lock
sub
dec
sbb
add
sbb
dec
lea
or
lods
add
add
add
imul
sar
pop
jle
inc
clc
in
cmovne
cmp
clc
into
or
shlb
add
test
add
cwtl
shlb
add
push
add
sarb
outsl
aas
scas
loopne
add
add
iret
in
mov
clc
sub
add
add
clc
mov
jmp
add
add
dec
mov
clc
fwait
pop
clc
cmp
add
int3
icebp
jecxz
push
clc
mov
es
mov
xbegin
fsts
add
rolb
add
add
imul
jo
add
sbb
and
add
icebp
xchg
clc
mov
add
outsb
out
xchg
cmp
add
dec
dec
inc
add
xchg
stc
xor
add
add
cmp
inc
clc
mov
aas
pop
lods
pop
adc
add
lcall
mov
insl
sub
cltd
in
jb
add
and
add
add
add
cmp
insl
push
adc
or
int
clc
dec
int
jl
clc
xor
add
clc
push
imul
ja
fbstp
jg
add
mov
jg
adc
add
add
add
push
add
mov
jne
clc
push
add
adc
add
push
xor
add
add
insb
fdivs
clc
xor
add
clc
aad
mov
sbb
clc
or
clc
leave
bound
add
call
clc
cmpsb
clc
mov
cmp
insb
push
cmp
nop
cs
add
add
add
fdivrp
jecxz
loop
data16
mov
add
es
jno
add
int
clc
inc
add
clc
inc
add
mov
dec
mov
clc
add
add
add
clc
lea
add
add
cmp
jns
adc
add
fdivp
bound
add
mov
popa
add
inc
add
jmp
add
fucomip
jne
stc
jbe
iret
mov
sbb
mov
clc
fcomps
add
add
add
add
aas
inc
add
ret
clc
cmp
clc
inc
clc
jbe
dec
inc
clc
leave
notb
add
xor
add
clc
divl
cld
ss
clc
shrl
clc
sar
add
mov
add
in
negb
clc
sahf
dec
cmp
sbb
clc
or
sbb
cmp
rcpps
add
add
cld
pushl
add
lcall
mov
add
add
add
mov
inc
clc
sbb
add
repz
clc
adc
or
clc
cmp
daa
clc
push
out
popf
pusha
add
adc
add
sbb
repz
cmp
lret
add
add
shrb
cmp
add
daa
clc
dec
mov
mov
inc
add
pusha
add
and
addr16
add
add
add
mov
xchg
pusha
add
or
sar
loopne
dec
pop
shll
xchg
dec
cmp
push
add
and
add
xchg
mov
adc
notl
int
clc
mov
add
rcll
enter
xor
add
jp
jl
clc
inc
clc
repz
mov
add
cmp
cmc
shl
enter
jmp
hlt
test
dec
daa
clc
movsl
clc
push
popf
sub
add
shrl
test
mov
inc
add
sub
shl
test
dec
insl
ret
clc
outsl
mov
mov
ss
bnd
sub
out
or
add
int3
cli
xchg
cmpsb
clc
xchg
and
add
decl
movsl
clc
xbegin
movsb
clc
mov
adc
add
enter
clc
sar
jns
xor
add
add
call
add
clc
aam
inc
clc
dec
add
add
leave
jmp
push
sar
and
xchg
or
add
clc
cmp
in
stos
cmpsb
clc
add
add
scas
add
add
sbb
dec
sub
cmp
dec
jb
add
cmp
clc
and
add
inc
add
fidivrs
faddl
mov
fsubl
xchg
loope
sub
sbb
mov
jo
add
clc
xchg
dec
mov
clc
sbb
dec
shll
gs
sbb
sub
add
fbstp
aam
clc
ret
clc
outsl
mov
outsb
mov
xor
add
push
scas
std
inc
add
notl
add
jle
pop
pop
pop
sahf
fcmove
imul
add
clc
push
cmpsl
clc
data16
jbe
dec
incb
clc
or
add
push
xor
add
xabort
sbb
mov
fs
dec
pop
fwait
out
push
clc
jne
cmp
push
mov
mov
jle
add
push
and
add
outsl
stos
in
adc
add
add
add
jmp
and
imulb
dec
ds
add
adc
add
clc
mov
mov
add
or
movsl
clc
pop
call
sahf
mov
add
add
add
add
or
clc
jmp
add
pop
inc
add
mov
outsl
popa
add
add
add
mov
out
mov
call
nop
xlat
inc
clc
repnz
mov
popf
lods
cmp
add
imul
mov
adc
add
add
add
add
ja
daa
clc
fbstp
test
or
add
clc
and
add
jae
add
push
clc
pushf
mov
scas
or
pop
dec
sbb
add
pop
xchg
rorl
add
mov
xor
add
pop
jae
add
adc
add
cmp
mov
mov
clc
cli
cli
hlt
cmp
sub
mov
add
add
add
and
add
add
mov
mov
sbb
in
push
add
aam
cmc
cmpsl
clc
pop
xchg
sbb
clc
xchg
fs
jbe
sub
jg
ret
es
xchg
inc
clc
push
add
addr16
and
add
sub
in
jno
add
call
cmp
das
jns
mov
add
add
sar
pop
js
and
add
clc
gs
mov
lea
ja
clc
movq
lods
push
add
and
pop
fs
jecxz
sbb
clc
jmp
dec
push
ljmp
or
imul
add
jle
call
clc
mov
add
sar
clc
and
add
clc
pop
mov
add
xchg
push
fisubrl
add
jl
adc
add
sbb
data16
stc
flds
add
out
inc
clc
add
add
add
clc
stos
mov
add
add
add
pusha
add
push
push
mov
add
add
insl
jl
gs
leave
inc
clc
ss
add
lods
pop
jno
add
mov
and
add
add
arpl
add
clc
bswap
push
xchg
mov
pop
adc
add
add
clc
sub
pop
mov
clc
sahf
pop
mov
rorb
push
jbe
clc
lea
mov
add
add
add
add
dec
xchg
mov
add
js
clc
mov
cmp
add
add
mov
mov
popf
xchg
in
call
add
add
add
add
add
sub
clc
cmp
add
xchg
xchg
aam
gs
cs
js
pop
clc
pop
sub
push
cmp
ja
addr16
push
cmp
push
add
mov
loopne,pn
xor
icebp
xchg
xchg
xor
add
clc
push
add
lock
mov
xor
add
clc
icebp
add
add
add
ret
clc
cli
and
add
in
cmc
rcrl
lods
in
cmpsb
clc
out
sub
push
clc
loope
aam
test
add
sahf
out
jmp
adc
add
clc
dec
xor
add
add
push
add
sbb
add
sahf
dec
push
add
movsl
clc
jnp
fbstp
mov
and
add
add
add
or
jnp
add
jmp
clc
jmp
clc
push
inc
clc
fwait
pop
mov
mov
or
xchg
enter
insb
jle
or
clc
push
bound
add
add
sbb
cmp
aam
mov
clc
pop
push
repnz
push
inc
add
insb
scas
mov
test
cmp
clc
repz
clc
xor
add
add
or
clc
push
insl
xchg
mov
test
pop
inc
clc
xchg
pusha
add
cmpsb
clc
mov
add
lock
mov
cwtl
sbb
add
test
popf
pop
ret
loop
aam
add
mov
leave
xor
sti
jl
pop
clc
pop
hlt
nop
dec
mov
clc
pop
cs
xor
or
clc
stos
lods
rclb
xor
add
lret
test
pop
or
sbb
xor
add
or
add
sti
fs
pop
pop
pop
lcall
add
lea
cmp
add
push
add
or
xchg
bound
add
add
ja
dec
or
add
mov
add
add
clc
push
aad
icebp
add
add
mov
repnz
clc
divl
add
push
add
ja
clc
dec
mov
aad
pushf
ja
add
add
jge
clc
daa
clc
out
pop
jo
add
dec
imul
and
add
clc
mov
shrl
add
mov
add
in
xor
ret
js
js
cmp
aam
clc
xor
add
clc
mov
fisubrs
imulb
clc
movaps
mov
mov
cmpsb
clc
xchg
test
add
add
mov
pop
cmp
add
clc
clc
mov
add
add
lods
movsb
clc
sbb
iret
stos
sub
stos
push
aad
aaa
mov
popf
lods
jp
add
jo
add
ja
add
mov
clc
xchg
push
add
cmc
in
mov
test
xor
add
add
pusha
add
fld
clc
insl
or
add
mov
add
jae
add
inc
add
adc
add
add
divl
add
cmp
xor
add
clc
xchg
cmp
clc
jmp
add
sub
sbb
cmp
xchg
shll
add
cmc
lea
add
mov
add
pop
setge
insb
in
fsubr
pop
mov
jae
add
outsl
neg
sub
inc
add
xor
add
clc
sbb
and
add
dec
nop
pop
xchg
bound
add
jns
outsl
xor
inc
clc
add
enter
add
inc
clc
dec
pop
clc
pop
aaa
xchg
filds
clc
clc
stos
mov
cmp
push
add
mov
clc
cli
pusha
add
lret
mov
xchg
ljmp
inc
clc
pop
jle
add
ret
clc
pop
out
dec
or
pop
adc
add
leave
sar
clc
fcmovnbe
pop
dec
cmp
clc
inc
clc
mov
push
add
addr16
xor
add
and
popa
add
fdivp
mov
inc
clc
stos
ffree
clc
fistpl
pop
mov
mov
jb
add
add
ret
inc
add
daa
clc
enter
add
clc
fisttpl
clc
imul
add
push
dec
mov
jge
pop
adc
add
clc
dec
ds
cmp
pop
clc
int3
push
jle
add
out
mov
repz
or
add
pop
rcrl
pop
cs
jle
filds
add
pop
xor
add
add
js
push
add
jge
inc
add
movsl
clc
push
jbe
sub
leave
ss
adc
out
pop
clc
sbb
mov
dec
rolb
add
repnz
out
pusha
add
imul
stos
sub
call
and
cmp
add
nop
sub
mov
repz
add
ret
clc
jb
add
in
mov
xor
add
test
clc
mov
clc
pop
addr16
or
add
int3
push
sti
dec
das
sub
clc
icebp
sbb
mov
outsl
push
and
add
and
add
fnstenv
add
daa
clc
dec
fsubr
mov
add
shlb
popa
add
jns
fcmovnu
sub
add
pop
in
cld
push
clc
cmp
clc
push
add
out
jp
clc
and
add
add
mov
aad
clc
lea
xchg
sub
add
add
add
clc
push
ret
clc
mov
add
popf
push
push
add
ljmp
add
add
add
jnp
clc
sub
add
pop
cmp
add
insl
out
mov
inc
add
loop
jp
add
arpl
add
add
sbb
bound
add
add
and
int3
add
add
mov
ret
or
add
add
add
cmp
clc
jno
add
add
xor
add
mov
push
loop
push
add
es
xlat
sahf
roll
cmpsl
clc
test
ss
clc
adc
jae
add
xchg
or
add
icebp
cwtl
jp
jo
add
push
add
gs
mov
pop
shr
inc
add
bound
add
fldl
xchg
cmp
clc
sbb
add
es
adc
add
mov
add
cmp
aaa
and
jg
sti
js
out
movsl
clc
mov
mulb
add
add
push
add
mov
dec
out
dec
lods
aad
mov
xchg
lods
xchg
in
lea
repz
clc
mov
add
dec
sbb
clc
sub
mov
add
xor
add
add
cwtl
xor
add
lret
pop
lret
sbb
enter
stc
cmp
add
clc
lcall
clc
adc
add
sub
mov
add
aaa
mov
icebp
cs
and
std
mov
clc
mov
gs
pop
sbb
clc
jg
lods
xor
pop
mov
clc
daa
clc
add
add
push
add
icebp
aad
and
add
xor
clc
scas
inc
clc
icebp
xchg
adc
add
add
fwait
add
add
gs
cwtl
adc
add
sub
clc
mov
daa
clc
fcoms
mov
clc
mov
add
xchg
xchg
and
add
clc
call
add
dec
insl
add
add
into
pop
and
add
pop
sub
clc
into
cmc
popa
add
or
data16
and
fdiv
notb
add
das
pusha
add
jg
clc
data16
cli
push
out
xchg
lods
cmp
iret
sar
shrl
push
add
neg
mov
add
sarl
add
in
xabort
lods
cmp
mov
movsb
clc
pop
in
insb
leave
jns
fists
add
jle
clc
push
inc
add
and
add
cwtl
mov
jge
shrb
shrb
shlb
sub
push
mov
iret
jne
inc
clc
push
push
sub
shlb
add
add
sub
add
mov
clc
or
ss
dec
ja
add
sar
dec
inc
add
dec
sbb
clc
xlat
hlt
sub
add
jno
add
xchg
js
clc
add
add
out
repnz
cld
imul
fs
jbe
clc
sub
pop
stos
int
movsl
clc
jbe
es
int
pop
clc
sbb
scas
sbb
roll
add
mov
xabort
bound
add
rclb
add
pop
pop
clc
addr16
pop
jne
clc
icebp
or
add
pusha
add
xchg
inc
add
mov
shlb
inc
clc
clc
sahf
and
clc
dec
clc
out
cmp
out
imul
push
int
stos
inc
add
sbb
in
and
add
inc
clc
pop
pop
cmp
add
add
add
imul
test
sar
movsb
clc
xor
adc
add
add
pop
xlat
pop
and
gs
jecxz
xor
add
add
add
adc
add
ss
ret
add
out
add
int
add
sar
imul
clc
es
jle
sti
imul
add
std
dec
pusha
add
pushf
inc
clc
cmp
adc
add
test
cmpsl
clc
insl
js
add
loope
inc
add
push
jno
add
cs
imul
lret
mov
mov
jb
add
push
and
add
add
stc
rolb
lret
lret
push
movsb
clc
and
add
mov
dec
or
or
jl
shll
add
ljmp
push
jnp
xor
nop
xchg
test
add
imul
xchg
in
nop
sti
pop
jmp
xchg
dec
push
clc
insb
insl
mov
clc
or
mov
icebp
sbb
add
aas
and
add
clc
ss
out
add
add
in
jmp
sbb
push
add
push
add
xchg
scas
sbb
sub
xchg
fcomps
fs
lahf
fidivl
add
add
pop
ret
add
and
add
in
pop
xchg
ja
scas
cli
lahf
jno
add
xchg
add
addr16
inc
clc
and
dec
push
mov
or
mov
cmc
popf
lcall
test
cmp
clc
sar
sti
sar
mov
clc
cmp
mov
clc
fisttpll
pop
sbb
clc
xor
xchg
sbb
sub
cmp
aaa
inc
add
xchg
hlt
test
arpl
add
xor
push
add
and
add
stos
imul
inc
add
div
pop
ss
mov
push
add
pop
icebp
lods
xabort
clc
jp
in
sar
xor
add
inc
add
xchg
sar
loop
push
push
dec
mov
add
cmp
and
add
insb
push
sbb
add
add
add
adc
add
pmullw
sub
add
fcmovnbe
loope
mov
outsl
add
add
mov
test
mov
clc
lods
push
repnz
mov
int3
aaa
call
dec
cs
out
pop
cli
xchg
fisttpll
addr16
dec
mov
clc
cmp
insb
daa
clc
push
loope
test
repnz
push
sub
bound
add
xchg
jle
mov
add
push
scas
mov
fdivp
push
add
aad
popf
pop
call
xlat
pushf
or
add
mov
clc
xor
add
clc
inc
add
mov
es
fsubrs
cmc
mov
clc
mov
int3
into
mov
rcrl
xor
add
clc
and
push
xchg
loop
hlt
mov
add
lahf
and
add
add
aaa
lcall
gs
test
insl
dec
das
inc
add
movsb
clc
xchg
mov
add
xchg
inc
add
aad
gs
dec
dec
and
add
fimuls
xor
add
pop
cwtl
add
add
sub
clc
cld
leave
xor
add
add
cmp
js
xbegin
mov
nop
cwtl
pop
jne
rorl
stc
push
pop
lahf
outsl
sub
pop
nop
je
clc
mov
clc
xlat
pop
fstpt
add
shrb
adc
add
fadds
mov
add
aas
loope
sti
cmp
add
cli
daa
clc
out
cmp
clc
rcrl
in
and
and
add
insl
nop
sti
dec
jmp
add
or
add
jmp
push
add
mov
jno
add
dec
pop
addr16
mov
xbegin
add
movsl
clc
sub
add
add
jo
add
pusha
add
jae
add
clc
adc
add
sub
add
dec
lods
movsb
clc
ljmp
push
dec
xbegin
pop
sti
jmp
add
add
clc
mov
lock
clc
and
and
add
pop
adc
add
inc
clc
fisttpl
pop
out
fadds
clc
popa
add
pop
aas
inc
add
mov
pop
clc
sub
or
ljmp
push
aaa
out
jnp
or
cmp
fidivl
add
clc
cmpsb
clc
scas
pusha
add
and
add
das
or
xchg
out
push
dec
imul
sub
xchg
stos
xor
add
lods
dec
add
add
nop
filds
ret
clc
or
clc
leave
jg
std
cwtl
movsb
clc
or
mov
add
lods
jns
pop
imul
jp
clc
pop
pop
xor
add
xchg
insb
inc
add
aas
or
test
sar
repz
test
xchg
test
test
stc
sbb
inc
clc
mov
lret
xchg
push
sarb
clc
sub
inc
clc
sbb
add
mov
ljmp
or
outsb
clc
jl
clc
inc
add
push
push
es
std
out
jo
add
add
xor
add
xor
add
mov
daa
clc
pop
int
sbb
xchg
sar
mov
xchg
mov
clc
aas
sar
pop
shlb
cmpsb
clc
out
jmp
cwtl
dec
fs
pusha
add
fiadds
jb
add
and
add
clc
ret
clc
fildl
adc
add
add
out
lods
cli
ret
clc
into
test
jmp
push
jl
imulb
ss
data16
jae
add
pop
daa
clc
and
add
add
test
push
xbegin
xchg
pop
dec
lods
ja
aaa
cmp
add
bound
add
pop
xchg
lods
mov
jne
add
add
movsl
clc
das
inc
clc
jg
inc
clc
mov
pop
std
add
add
mov
add
add
stc
push
loope
imul
sbb
add
dec
push
in
mov
iret
flds
clc
mov
dec
cs
clc
cwtl
inc
clc
loop
test
push
dec
cmp
clc
pop
mov
clc
inc
add
bound
add
add
mov
xchg
xor
add
jb
add
loop
iret
xchg
iret
cmp
clc
adc
add
loopne
data16
dec
pop
mov
jbe
int3
push
in
inc
clc
add
aad
leave
fstpl
sar
and
pop
inc
clc
push
pop
cmp
clc
mov
aam
clc
mull
add
scas
std
icebp
and
mov
clc
loopne
aam
sar
add
nop
imul
scas
jecxz
push
add
add
add
push
pop
clc
mov
pop
jne
clc
bound
add
cmp
jo
add
daa
clc
jl
mov
xor
add
cmpsl
clc
pushf
dec
mov
test
inc
clc
push
aad
add
xor
add
clc
test
sbb
pusha
add
cmpsl
clc
mov
jae
add
xabort
rorl
add
dec
mov
add
add
rcrl
lahf
sbb
sti
jle
adc
inc
clc
sbb
es
or
pop
and
mov
clc
cmc
xor
add
arpl
add
scas
mov
je
lock
mov
mov
cmpsl
clc
clc
sar
push
clc
mov
add
shrb
xor
add
sahf
sahf
test
push
xchg
inc
clc
pop
clc
xchg
xor
add
sti
dec
cmp
inc
clc
dec
insl
pop
xchg
cwtl
or
insb
jp
jne
clc
in
jb
add
push
mov
pop
clc
jg
add
and
add
clc
pop
popa
add
cwtl
mov
add
mov
add
jg
stc
pop
stos
mov
popa
add
mov
clc
jmp
rcr
popa
add
inc
clc
mov
jg
test
clc
loope
xchg
xchg
push
mov
ficoml
add
clc
in
add
add
add
clc
sbb
adc
add
cmp
dec
mov
mov
add
fnstenv
add
push
add
add
dec
add
add
clc
jmp
sbb
push
mov
clc
dec
push
mov
out
mov
add
lea
clc
das
cmpsl
clc
notrack
add
ja
add
pop
sub
dec
sub
xchg
mov
clc
mov
mov
clc
inc
clc
mov
cmp
add
push
xchg
out
jno
add
clc
repz
clc
fidivs
inc
add
and
add
loop
lods
rorb
clc
jae
add
sub
add
add
hlt
jbe
insb
push
ret
clc
inc
add
jae
add
and
add
test
out
mov
xor
add
xabort
cmp
clc
cmpsb
clc
xor
add
sar
mov
adc
add
movsb
clc
xor
add
int
push
add
into
rorb
clc
rorl
sbb
sti
bound
add
clc
xbegin
mov
add
jns
clc
fdivrl
add
add
jbe
mov
sti
hlt
or
insb
xchg
sub
add
pusha
add
fisubl
clc
and
clc
add
add
ljmp
and
add
clc
mov
xor
add
ds
add
xchg
call
ret
clc
rcll
add
cmp
scas
push
add
or
add
fisubs
add
push
out
pop
movsb
clc
pop
cmp
or
call
cmp
xchg
cmp
clc
push
add
inc
add
insb
mov
mov
clc
add
cmp
jp
add
pop
mov
clc
in
cmp
in
adc
add
arpl
add
and
add
es
cmp
das
je
add
add
or
cltd
int3
mov
add
add
int3
outsl
cmpsb
clc
movsb
clc
cs
fsubrs
iret
cmp
das
fsubs
adc
add
clc
adc
add
test
dec
out
inc
add
int
clc
sar
cmp
insb
or
push
pop
clc
adc
add
iret
data16
fsubs
clc
xor
clc
cmp
add
inc
add
sar
cmpsb
clc
fisubrs
mov
push
add
sub
push
add
bound
add
test
add
add
cmpsl
clc
xchg
inc
add
xchg
adc
add
clc
mov
clc
pop
pop
mov
icebp
or
clc
fwait
roll
add
clc
stc
into
out
dec
jle
sar
std
gs
cmp
pop
ja
sbb
aad
add
cmc
cmpsb
clc
pushl
add
add
clc
cltd
inc
clc
scas
jecxz
mov
clc
cmp
imul
add
rolb
add
push
add
mov
sbb
lret
mov
clc
stos
outsb
jnp
int
lea
clc
push
incl
popa
add
cmp
add
push
add
stc
xor
add
cli
inc
add
mov
fidivl
add
leave
loop
sbb
dec
xchg
push
sar
add
sbb
sbb
cmc
jnp
fdivp
inc
clc
lock
xchg
jmp
decb
push
or
clc
lea
push
test
add
arpl
add
add
lahf
sbb
and
add
add
popf
dec
xor
add
mov
mov
fs
out
bound
add
clc
dec
sbb
loope
vpcomq
clc
push
sbb
mov
gs
std
aad
dec
ret
jmp
adc
add
clc
jl
jg
or
je
pop
stos
sti
add
cmp
add
pushf
negl
clc
popa
add
push
dec
jno
add
clc
cmp
pushf
mov
add
xchg
and
add
add
add
es
pop
push
cmp
and
add
add
negb
jno
add
add
adc
add
cld
out
mov
jp
clc
jmp
clc
mov
gs
aam
pop
dec
lock
xchg
mov
fst
clc
lret
pop
clc
movsl
clc
cmp
clc
fisttpll
ret
clc
push
pop
adc
add
pop
sub
aam
add
add
frstor
shr
es
mov
add
xchg
das
inc
add
loope
dec
outsb
fiadds
cmp
sub
mov
arpl
add
push
ja
fxch
pop
dec
sub
sub
clc
dec
sub
clc
pop
or
clc
push
add
add
clc
test
vcmpps
xor
adc
clc
jmp
xchg
inc
clc
cwtl
push
add
xchg
cli
mov
clc
gs
inc
add
lret
sub
xchg
popf
xor
add
xchg
xchg
jnp
add
imul
bound
add
sbb
idivl
hlt
sbb
add
imul
add
xchg
cmpsb
clc
mov
iret
es
jecxz
in
pushf
jecxz
jle
add
das
mov
add
mov
pushf
aas
ja
clc
and
add
faddl
clc
cmp
push
jge
divb
clc
repnz
add
inc
clc
jns
push
add
adc
outsb
lret
and
add
clc
mov
adc
add
and
fstpl
cmp
clc
ja
push
clc
pusha
add
mov
fwait
fs
mov
add
sub
add
clc
clc
inc
add
dec
inc
add
pusha
add
js
xchg
iret
mov
clc
call
aas
and
sti
pop
fs
pushf
repz
push
test
mov
mov
lcall
aam
sub
popf
leave
mov
dec
ja
clc
std
out
xor
add
dec
sub
clc
push
add
add
jl
push
add
adc
gs
ficoml
mov
add
add
adc
add
sub
addr16
mov
clc
inc
clc
pop
pop
or
add
push
add
call
add
dec
stc
pushf
mov
clc
call
add
popf
xbegin
int
pop
out
cmpsb
clc
cmp
add
clc
dec
xchg
add
mov
xchg
xchg
adc
add
clc
pop
mov
mov
cmp
clc
add
mov
shrd
add
add
add
hlt
cld
xchg
xchg
mov
jmp
ds
iret
fildl
add
mov
and
add
clc
ret
aad
jnp
clc
mov
clc
popa
add
aad
clc
cmp
sub
jp
xchg
vmread
mov
ljmp
loope
xchg
cmp
add
fwait
shl
inc
clc
mov
push
lea
repz
add
lods
jnp
clc
jle
clc
and
add
cmp
cmpsl
clc
add
scas
jecxz
pusha
add
jg
stos
cmpsl
clc
fildll
pop
cmp
gs
pop
out
sar
rcll
add
bound
add
add
ret
clc
lods
cs
xchg
jecxz
xor
add
rcr
push
add
xchg
rcrl
fstpl
add
cmp
gs
add
add
add
sti
gs
data16
icebp
or
add
xchg
data16
dec
std
mov
add
xchg
mov
jle
add
data16
inc
add
test
clc
outsb
mov
dec
loope
pop
arpl
add
clc
inc
clc
mov
faddl
add
or
sub
in
inc
add
push
inc
clc
jmp
fsts
add
add
xchg
lret
into
dec
inc
add
xchg
test
clc
ret
clc
js
pop
inc
clc
dec
pop
ret
enter
data16
into
adc
add
xchg
sar
xor
add
sbb
clc
xchg
xchg
jae
add
add
insb
or
add
clc
ljmp
add
add
add
clc
nop
std
jae
add
add
adc
add
loop
iret
sub
sar
movsb
clc
mov
in
adc
add
mov
pop
cmpsb
clc
icebp
sahf
cmp
add
sub
lret
fs
stos
mov
dec
insb
cmp
clc
out
and
add
add
fmuls
add
push
je
add
mov
add
mov
xchg
jae,pn
add
lock
sub
add
add
add
incb
or
jl
clc
xabort
in
movsb
clc
pop
xor
add
imul
xabort
out
cmp
sub
fadds
clc
cmp
es
mov
ret
cmp
inc
clc
lcall
test
outsl
loopne
lret
clc
xchg
mov
push
pop
mov
adc
clc
and
add
jg
add
addr16
xor
add
repz
in
aaa
dec
jns
xor
lret
add
int3
jp
mov
clc
int
mov
or
mov
pop
shlb
mov
pop
inc
add
sbb
clc
mov
cltd
mov
movsb
clc
xor
add
add
add
xchg
inc
add
out
rorb
cmovo
add
mov
xor
add
inc
clc
clc
dec
jecxz
xor
adc
add
add
add
or
add
fnclex
clc
xchg
jns
add
jp
clc
pop
out
fwait
push
add
bswap
mov
push
scas
push
insl
mov
add
fisttps
lcall
clc
jmp
clc
clc
clc
arpl
add
mov
sahf
out
je
clc
fadds
jg
xbegin
or
add
add
cwtl
push
push
mov
scas
aaa
sbb
cmp
jbe
adc
add
lret
xchg
mov
test
add
test
lcall
aas
xchg
pop
add
mov
mov
in
push
mov
or
mov
jmp
std
push
inc
add
and
add
add
lods
xor
add
lret
add
pop
ja
xchg
loope
imul
adc
add
cmp
in
mov
dec
int3
ds
cmp
jno
add
imul
rcrb
fistl
add
add
adc
add
cld
cmp
call
mov
xbegin
clc
insb
xchg
shl
clc
mov
pop
mov
fs
jle
clc
jae
add
clc
in
cmp
add
jne
clc
mov
imul
xor
add
daa
clc
sar
clc
or
clc
or
fs
jp
inc
add
dec
xchg
stos
adc
fmull
mov
clc
mov
fistps
add
mov
jns
lods
adc
add
lcall
aam
clc
jmp
add
and
add
scas
rolb
add
mov
xor
add
sub
jl
imul
je
clc
cs
add
add
add
pop
inc
clc
call
test
clc
sete
mov
xchg
in
fwait
jmp
dec
cltd
dec
fstl
add
das
mov
xchg
jb
add
fdivrl
xchg
int
ds
add
or
add
scas
call
or
lock
mov
sbb
jb
add
adc
ja
inc
clc
out
push
fiaddl
mov
stc
xor
icebp
push
add
pop
pop
add
add
add
daa
clc
or
fs
pop
lret
add
inc
add
dec
ret
jne
clc
xor
clc
lods
dec
repz
aam
repnz
lahf
sub
add
jo
add
jmp
cmp
mov
loope
mov
and
sub
add
movsl
clc
sub
sahf
mov
repz
sbb
mov
mov
incl
add
mov
xchg
lcall
clc
dec
sbb
add
arpl
add
add
je
clc
cmp
sbb
xor
add
data16
xchg
mov
mov
mov
jno
add
add
dec
xor
cmp
add
aas
fadds
add
int
jecxz
mov
mov
add
sbb
clc
popa
add
inc
clc
test
sar
adc
add
clc
mov
pop
sbb
xor
add
add
jo
add
xchg
lock
push
add
add
test
inc
clc
dec
into
movsb
clc
sbb
mov
jbe
clc
sub
jbe
and
add
add
data16
dec
push
add
mov
or
sub
movsl
clc
fistpl
imulb
xchg
cmp
sar
lods
call
out
fnsave
add
xchg
mov
ljmp
or
popf
fmull
or
aad
mov
mov
test
pop
or
push
push
add
arpl
add
sar
mov
lods
dec
and
add
clc
jp
lcall
fidivrl
outsb
mov
clc
dec
loopne
push
inc
clc
cmp
add
inc
add
cmpsl
clc
and
add
clc
sbb
rcl
pusha
add
rolb
add
lcall
add
mov
pop
jecxz
jl
push
clc
cwtl
cmp
xor
add
clc
jno
add
cltd
mov
xabort
sti
notb
add
daa
clc
adc
clc
call
mov
in
sub
cwtl
loope
jmp
out
dec
xor
add
test
jecxz
inc
clc
aas
lcall
filds
push
add
sar
add
shll
dec
loopne
lods
shlb
add
aas
add
add
mov
and
inc
clc
inc
add
sbb
aaa
cmp
mov
into
sahf
lret
test
sbb
cmp
add
test
dec
repz
push
add
add
add
fldenv
add
cmp
cmp
shl
cmc
or
add
add
jb
add
clc
insl
loop
insl
sbb
add
jge
pop
push
add
xlat
mov
ror
xchg
bound
add
mov
mov
clc
mov
add
add
leave
rcrb
push
mov
clc
ja
loop
jg
add
repz
js
clc
cmpsl
clc
pop
test
push
add
or
clc
xchg
cmp
lcall
hlt
cmp
add
insb
add
scas
out
div
aam
clc
mov
mov
clc
in
fidivrs
clc
xor
add
add
and
add
stc
add
add
add
lods
jp
mov
test
leave
dec
and
add
clc
push
clc
std
inc
clc
gs
xchg
or
xor
clc
mov
cmc
aam
daa
clc
insl
movsb
clc
fsubrp
jecxz
push
inc
clc
repz
pop
clc
jle
mov
cmp
and
add
sahf
jae
add
lods
stos
mov
mov
or
add
mov
outsl
cmpsb
clc
xor
add
add
aam
jb
add
add
imul
jle
sbb
inc
add
mov
sar
clc
add
add
ljmp
add
xbegin
or
sub
clc
jmp
push
add
cmp
clc
daa
clc
sub
jnp
add
mov
sub
push
sub
xchg
loope
sub
mov
mov
scas
mov
test
xchg
or
ds
add
test
stc
jp
mov
cld
jle
clc
jmp
clc
data16
iret
inc
clc
cmc
xbegin
inc
add
sbb
fcoms
clc
push
loope
add
add
add
std
js
push
cltd
test
inc
clc
jle
daa
clc
ds
and
push
mov
es
in
jle
clc
fstp
or
xchg
mov
repnz
clc
push
testl
fistl
add
cwtl
fdivs
and
add
out
or
push
xchg
mov
push
and
add
adc
add
movsb
clc
adc
pop
mov
loope
adc
clc
sbb
add
jo
add
add
cmc
mov
call
push
add
inc
add
mov
cltd
hlt
outsb
mov
xbegin
rcll
push
add
mov
xor
inc
add
mov
add
add
add
lret
clc
push
push
add
xor
add
or
clc
sub
sub
clc
cmp
add
or
neg
sub
add
pop
or
jge
clc
and
fs
adc
fldt
movsl
clc
mov
clc
popf
mov
xchg
ret
clc
popa
add
mov
clc
jecxz
dec
mov
das
cmp
push
mov
loope
ja
clc
pop
addr16
or
inc
add
adc
ds
pop
and
js
add
lret
push
add
or
push
clc
jo
add
add
addr16
jp
add
xbegin
add
xchg
mov
lods
ret
clc
inc
add
pop
push
bound
add
testb
add
xchg
jno
add
dec
fnstsw
clc
jle
add
dec
sahf
mov
add
pop
pusha
add
popa
add
sbb
loopne
mov
clc
mov
scas
push
clc
lahf
xchg
fstl
add
inc
clc
movsl
clc
push
fwait
pop
pop
cmp
nop
lods
sbb
mov
clc
pop
pop
stos
and
add
push
das
pop
repz
add
add
or
jle
clc
xchg
ret
clc
sub
push
add
cmpsl
clc
jnp
inc
clc
mov
dec
xor
add
xchg
pop
aad
arpl
add
or
add
jmp
jne
imul
cmp
sub
clc
int3
sbb
cmp
add
cwtl
in
and
add
xor
add
add
dec
add
sbb
mov
and
add
inc
add
mov
xlat
push
fistpll
add
clc
imul
int3
jb
add
add
clc
imul
add
dec
in
and
add
clc
js
leave
cmpsb
clc
sbb
add
das
or
add
cli
dec
jno
add
cmp
in
call
out
push
ljmp
add
aad
add
mov
add
clc
insb
push
clc
or
add
pop
addr16
ja
add
mov
pop
xchg
mov
adc
clc
jmp
test
jecxz
or
xchg
cmp
adc
add
mov
push
sbb
clc
cwtl
mov
inc
add
pop
mov
leave
fdivrp
cmp
clc
icebp
repnz
clc
clc
mov
mov
xlat
dec
fisttpl
jae
add
pop
push
jbe
mov
scas
xor
add
cmp
int3
dec
ljmp
fisubs
add
and
add
clc
cmp
add
hlt
and
add
clc
mov
enter
aas
inc
clc
pop
mov
clc
xor
add
clc
out
mov
clc
fnsave
jge
leave
adc
add
mov
clc
mov
clc
mov
add
stos
adc
pop
clc
mov
xchg
nop
lahf
incb
add
add
loop
mov
xor
add
outsb
stos
xchg
add
add
add
add
adc
add
pop
xchg
mov
adc
add
adc
add
xor
xchg
aaa
loop
mov
add
adc
aas
out
mov
add
add
testl
clc
shll
add
clc
xabort
mov
filds
xor
add
jo
add
add
add
xbegin
clc
leave
mov
or
test
add
scas
add
add
cmp
clc
decb
clc
fwait
cwtl
dec
mov
clc
inc
add
or
clc
imul
shlb
clc
jnp
inc
clc
or
add
xchg
cmpsb
clc
data16
dec
add
jns
add
arpl
add
clc
cmp
cmpsb
clc
into
sub
add
add
add
sub
cmpsl
clc
stos
outsl
clc
mov
xabort
xor
add
into
inc
add
call
clc
cwtl
jmp
hlt
test
scas
and
add
ja
clc
xor
add
jns
push
push
add
cmp
adc
add
add
dec
add
add
clc
out
movsb
clc
ljmp
outsl
sbb
add
add
clc
pop
inc
clc
in
int
nop
push
cmp
dec
sar
clc
jno
add
scas
pop
jns
clc
imul
cmp
add
mov
clc
jg
clc
inc
add
jne
mov
adc
xabort
xor
jno
add
pop
or
jnp
lret
es
pop
clc
jmp
clc
mov
mov
clc
sbb
clc
scas
mov
add
push
mov
add
inc
clc
fwait
mov
add
add
add
jnp
or
clc
adc
add
xor
add
add
mull
clc
aad
imul
cmpps
or
pushf
mov
add
in
out
push
mov
clc
inc
clc
xor
add
sahf
cmpsl
clc
pop
daa
clc
inc
clc
call
stos
pushf
or
add
jmp
mov
jo
add
mov
clc
push
clc
movsl
clc
jg
cmp
or
shll
add
sbb
add
outsl
je
rorl
add
push
push
mov
add
out
cmp
repnz
clc
sbb
add
arpl
add
cmpsb
clc
cld
mov
add
fstp
sub
add
cmp
clc
mov
add
cmp
insb
xchg
jg
fstps
jb
add
add
add
out
mov
sbb
clc
add
add
cld
xchg
sub
add
sub
testb
sbb
add
cmp
clc
xchg
add
and
ficomps
ret
add
repnz
stos
cmp
clc
pusha
add
cmp
clc
add
clc
xchg
and
add
add
xor
add
movsl
clc
es
sub
clc
gs
test
pop
movsl
clc
adc
add
out
mov
clc
xchg
and
add
cmp
std
pusha
add
add
add
xchg
cmpsb
clc
add
test
es
push
add
adc
adc
pop
dec
ss
add
add
pusha
add
dec
test
ror
js
add
aas
xchg
cmp
sti
out
sbb
clc
mov
clc
std
cltd
iret
xbegin
xchg
mov
in
mov
or
sub
mov
push
add
out
add
add
adc
add
clc
ds
sbb
mov
and
add
add
imul
fists
ljmp
int
cld
fbld
cmp
clc
xor
add
add
cmp
aaa
vrcpps
add
add
jg
in
pop
fcomps
into
mov
add
push
add
mov
imul
sbb
repnz
bound
add
mov
lahf
filds
je
cmpsb
clc
push
sar
loopne
mov
and
add
add
mov
clc
in
in
dec
cltd
adc
add
add
clc
or
add
add
pusha
add
lret
cltd
or
in
cltd
data16
mov
mov
aam
outsb
or
cmp
xchg
cmp
jne
in
inc
clc
and
add
inc
add
popa
add
or
add
lret
clc
nop
mov
cmc
into
ret
nop
adc
add
pop
sub
fcmovbe
test
cmc
int3
jnp
add
popf
sbb
sar
add
pop
popf
test
fbld
add
jae
add
movsb
clc
sar
jl
add
pop
imul
mov
sbb
dec
stc
int3
jl
mov
push
clc
pop
sub
xlat
mov
inc
add
aam
in
pop
mov
out
xor
add
add
inc
clc
data16
scas
pop
pop
mov
pop
xbegin
xchg
aad
dec
dec
dec
dec
xor
fiaddl
mov
add
mov
ret
clc
dec
mov
nop
jo
add
add
xchg
pop
sub
clc
xor
clc
xabort
clc
pop
xor
adc
add
pusha
add
xchg
daa
clc
kmovw
add
idivb
or
xor
adc
jne
sub
clc
jae
add
add
cli
jg
clc
sbb
ja
sub
cltd
js
clc
mov
clc
jnp
sbb
dec
mov
add
clc
xor
add
fs
add
add
push
clc
fistl
add
scas
aas
dec
fstpl
pop
cs
add
cmp
jp
add
aaa
mov
loop
mov
lret
clc
popf
inc
clc
xchg
aam
sti
mov
bound
add
clc
sub
out
leave
mov
clc
sbb
fisttps
mov
clc
negl
adc
add
clc
sub
pop
lret
inc
add
ret
clc
ret
jae
add
clc
xlat
je
push
add
or
add
insb
jae
add
or
add
and
add
push
negl
ret
clc
xor
add
add
or
cmp
data16
stos
shlb
add
add
push
jecxz
in
mov
xchg
mov
in
jns
jno
add
mov
jns
inc
add
repz
add
and
jle
push
or
inc
add
loope
std
dec
xor
add
clc
add
add
add
lods
pop
movsl
clc
jmp
add
push
add
adc
add
add
add
pop
or
dec
shlb
inc
add
pop
aam
or
clc
test
pop
jge
repz
pop
pushf
xor
add
clc
cltd
je
sbb
add
inc
add
pop
push
arpl
add
add
bound
add
jmp
add
cmpsl
clc
test
push
lods
outsb
pop
int
add
pop
xor
xchg
js
loopne
pop
jnp
stc
mov
lock
xor
add
out
lret
xor
jnp
lods
popf
push
mov
clc
cwtl
cmp
adc
out
add
jno
add
clc
mov
daa
clc
cmp
ja
aad
clc
dec
xlat
ss
jge
or
sub
test
add
add
lcall
clc
stc
fstpt
clc
sub
clc
jecxz
arpl
add
add
and
clc
scas
cmp
pop
sbb
popf
mov
push
push
in
aam
test
inc
clc
cmp
pop
or
inc
clc
cs
mov
push
clc
pop
and
cmp
clc
xchg
je
jp
pop
adc
add
cld
clc
pop
xchg
aam
add
xchg
sahf
dec
cmp
repnz
clc
cmc
insl
push
iret
sub
clc
jnp
out
dec
jle
push
leave
fisubs
add
mov
dec
daa
clc
push
push
add
add
add
add
mov
xchg
pop
mov
dec
iret
mov
clc
push
out
out
cmp
mov
add
fiadds
add
and
fucomi
cmp
clc
dec
pop
xchg
loopne
cmp
bound
add
or
add
clc
xchg
jne
xchg
push
bound
add
clc
mov
clc
je
adc
add
das
sar
notb
andnps
add
add
xor
push
pop
clc
cmp
sbb
xchg
mov
fadds
inc
add
es
fcomps
jb
add
clc
xchg
lcall
add
inc
clc
lret
stc
vpcomltq
add
push
jb
add
add
lods
push
pop
mov
sub
lock
add
pop
push
add
mov
jns
clc
jl
mov
jne
inc
add
lret
jg
stos
push
push
add
mov
clc
adc
add
imul
push
jne
lret
lods
cmp
add
clc
xchg
cmpsb
clc
cmp
clc
clc
mov
add
mov
jb
add
add
and
nop
or
pop
lahf
test
adc
add
clc
std
mov
hlt
add
in
jl
cmp
push
xor
add
sub
fists
add
clc
or
add
add
add
mov
clc
mov
sar
mov
push
push
add
cmp
clc
movsb
clc
push
add
push
clc
in
in
adc
add
xbegin
shrl
icebp
shll
sub
lcall
clc
and
add
jmp
clc
mov
add
add
or
icebp
jmp
insl
pop
dec
sub
in
adc
add
sub
clc
insl
and
mov
mov
clc
cwtl
aaa
add
add
jl
js
dec
mov
adc
add
sahf
or
add
xbegin
jp
sar
jbe,pn
clc
fistpll
dec
cmp
into
xbegin
add
clc
loopne
push
mov
mov
adc
add
dec
or
lret
push
dec
ljmp
fidivrs
adc
add
inc
add
fs
lahf
lret
lret
ss
add
add
add
ret
xchg
or
clc
notl
out
clc
sub
add
adc
add
cwtl
mov
sti
aaa
sub
mov
clc
jb
add
addr16
or
add
mov
fidivs
inc
clc
outsl
or
add
cmp
in
mov
mov
add
add
clc
xchg
je,pt
das
push
or
arpl
add
sar
fsubrs
xchg
bound
add
pop
lea
fadds
xchg
push
add
frstor
add
das
sbb
icebp
mov
clc
push
nop
js
jno
add
xor
add
in
test
addr16
hlt
pop
sbb
clc
fiadds
je
add
sbb
add
inc
clc
ljmp
adc
ljmp
clc
jecxz
jbe
fnstcw
js
push
xchg
jl
scas
add
add
add
add
add
and
add
xchg
test
xor
add
jno
add
cmpsb
clc
mov
cmp
sar
clc
in
lahf
lock
add
add
add
add
movsl
clc
sub
gs
adc
add
sbb
clc
and
std
int
add
add
add
add
clc
sti
or
sbb
clc
push
dec
je
ljmp
sbb
and
add
ficomps
enter
clc
sub
push
add
imul
xor
add
and
add
inc
clc
fsubrl
daa
clc
jb
add
sahf
jnp
cmp
add
int3
movlps
add
clc
push
xlat
jg
clc
jno
add
mov
cmp
add
lret
clc
mov
sbb
cmp
mov
add
popa
add
mov
or
add
xchg
daa
clc
jo
add
clc
or
fs
xchg
out
pop
inc
clc
jp
clc
outsb
rcll
inc
clc
sbb
add
inc
add
loop
stc
pop
mov
shrl
xchg
pop
dec
std
lret
and
add
pop
icebp
ja
add
ljmp
fisubrl
inc
clc
cltd
mov
clc
mov
add
add
xor
add
add
cmp
sub
clc
inc
clc
cmp
clc
cmp
xor
popa
add
push
clc
dec
mov
push
cmp
push
into
outsl
xchg
sub
clc
push
add
test
test
jle
in
sar
xchg
cs
fs
xor
add
clc
clc
sbb
mov
adc
pop
and
add
add
mov
mov
jecxz
jle
pop
xor
add
and
addr16
pop
fldt
add
cmp
pop
or
dec
clc
aaa
std
pusha
add
shrl
xchg
cltd
shlb
add
add
add
clc
loopne
jbe
cmp
mov
adc
add
cmp
mov
jno
add
add
ret
es
xor
add
icebp
mov
or
add
xabort
sbb
clc
or
out
mov
add
jl
dec
arpl
add
ds
clc
ss
mov
add
push
fs
lahf
int
and
xchg
xchg
pop
clc
push
mov
inc
add
cmp
sbb
add
mov
ss
pusha
add
jne
add
mov
add
and
add
add
jnp
add
std
inc
clc
mov
add
loop
inc
clc
mov
sbb
test
push
into
popf
scas
cmp
add
mov
in
mov
add
jp
clc
sahf
inc
add
mov
fs
aad
clc
jg
scas
cmp
add
and
add
add
mov
je
clc
push
add
xabort
xor
add
clc
imul
clc
xabort
out
pop
cmp
add
lahf
out
dec
adc
js
test
mov
inc
clc
dec
push
clc
imul
cmp
aas
shrb
clc
pushl
lcall
iret
mov
add
ljmp
add
inc
add
mov
outsl
pop
lods
push
das
addr16
in
jnp
push
insl
jno
add
bnd
mov
mov
mov
add
arpl
add
add
and
in
shr
and
add
and
dec
and
push
popl
pcmpgtw
xabort
push
add
add
fnstenv
mul
clc
jp
add
ret
clc
stos
xor
clc
add
inc
add
sub
clc
add
add
clc
leave
icebp
std
fsubrl
add
pop
jg
pop
add
insl
jbe
gs
dec
mov
cmp
fs
shlb
add
cmc
jecxz
cli
cmp
cmp
data16
pop
push
add
add
fsts
dec
cmp
xabort
add
jg
ret
clc
int3
jns
shl
ja
fistpll
or
xabort
mov
add
stos
pop
push
add
inc
add
mov
clc
and
add
rcrl
repz
clc
push
adc
pop
add
cltd
mov
test
add
ror
jg
clc
push
arpl
add
mov
xchg
pop
sahf
mov
pop
mov
cmpsb
clc
jg
sbb
popa
add
es
inc
add
inc
clc
mov
clc
cmc
and
das
insb
clc
sbb
arpl
add
add
push
outsl
mov
sub
clc
ficomps
cli
lret
mov
hlt
loopne
inc
add
sbb
push
movsb
clc
cmp
jecxz
aam
out
push
clc
idivb
movsb
clc
imul
inc
add
in
jg
clc
mov
add
fldenv
clc
dec
mov
xbegin
mov
clc
sub
add
pushf
mov
push
sbb
mov
cmp
mov
repnz
clc
enter
cmp
clc
enter
leave
dec
call
add
movsl
clc
cwtl
inc
add
loop
xlat
jecxz
xor
add
add
cmc
std
enter
clc
and
cltd
sub
push
dec
sbb
clc
lcall
xbegin
clc
ljmp
xabort
clc
fs
sbb
pop
into
stc
cld
outsb
xchg
and
dec
sbb
cmp
pop
icebp
cli
add
add
push
push
add
dec
xlat
cmp
xbegin
lahf
push
clc
jae
add
clc
mov
add
cmp
ss
fsubl
add
push
push
mov
iret
xchg
nop
imul
clc
cmc
daa
clc
out
mov
xchg
mov
clc
fidivrs
jge
lods
jmp
shr
xor
add
dec
movsb
clc
push
xlat
ja
add
stc
xor
cmp
add
xchg
popa
add
add
add
sbb
add
mov
add
in
out
dec
std
pop
cmp
jg
movsl
clc
cmp
add
push
mov
syscall
clc
xchg
push
sub
mov
loope
jecxz
jno
add
cmp
add
add
add
dec
jl
test
add
jnp
push
pop
mov
sbb
clc
sarl
inc
add
fprem
adc
add
mov
clc
mov
dec
xor
adc
mov
add
hlt
popa
add
outsl
mov
cmp
clc
je
inc
clc
rcrb
outsl
mov
add
add
stos
jo
add
dec
inc
add
lret
test
xchg
ljmp
data16
sbb
dec
add
add
xchg
sbb
mov
popa
add
fsubp
clc
pusha
add
out
xor
add
xor
add
clc
xor
clc
pop
hlt
xlat
clc
jns
clc
inc
add
repz
daa
clc
lods
movsl
clc
xbegin
mov
add
scas
add
add
push
add
cmp
stos
into
jo
add
pusha
add
ficomps
clc
aaa
pop
xor
add
popa
add
icebp
cmpsb
clc
xchg
adc
add
pop
movsl
clc
stc
inc
add
cmp
clc
inc
add
dec
add
sub
clc
int3
fsubrp
insb
testl
inc
add
iret
xchg
repz
add
or
mov
push
clc
push
mov
ds
xabort
outsb
sbb
outsb
pop
xor
add
fstl
add
clc
decl
jle
add
mov
insl
lea
add
repnz
push
add
divl
add
test
cmp
pop
aaa
xor
test
add
ja
aad
clc
xchg
mov
jp
clc
stc
lock
clc
fs
repz
add
test
push
repnz
jnp
xchg
add
add
xor
add
in
xbegin
hlt
mov
clc
mov
mov
xor
mov
jo
add
sar
clc
cmp
cmp
add
cs
dec
test
clc
sar
movsl
clc
mov
mov
clc
xabort
ret
mov
jmp
sahf
jae
add
icebp
loop
movsb
clc
nop
push
movsb
clc
or
hlt
dec
adc
add
inc
clc
lret
dec
fnstsw
fcomps
clc
xor
add
and
add
icebp
gs
in
dec
cmp
cmp
sub
add
xchg
dec
xor
add
lcall
add
leave
mov
jp
add
out
push
cs
clc
jg
add
add
sub
push
pop
mov
pop
stc
imul
push
add
rep
in
sar
loope
jg
push
sbb
test
xchg
nop
push
add
into
xchg
push
clc
scas
jbe
clc
and
xchg
adc
add
data16
push
and
add
push
fadds
add
jge
rorb
insl
mov
push
add
roll
inc
add
js
fisttpl
clc
xchg
ret
clc
mov
jae
add
push
clc
push
jg
xchg
mov
rcll
mov
clc
xor
inc
clc
dec
jg
clc
mov
pop
dec
pop
insl
dec
add
add
sub
cmp
add
mov
in
pop
leave
enter
clc
das
hlt
mov
add
jmp
clc
ret
clc
sti
sbb
add
imul
adc
add
clc
mov
push
sbb
int3
lods
aaa
push
add
rcll
add
sub
add
inc
add
xlat
push
rcl
xbegin
sbb
lods
out
cmp
clc
frstor
clc
pop
mov
jecxz
xor
add
and
add
clc
adc
add
add
sub
clc
ljmp
clc
adc
add
mov
xchg
adc
cmp
repz
clc
inc
add
push
clc
inc
add
data16
pop
xbegin
push
clc
movsl
clc
gs
xchg
ss
int3
mov
loope
in
pop
xbegin
repnz
lcall
daa
clc
mov
clc
jge
shrb
fcomps
add
jge
jl
clc
cmp
cmp
push
xchg
shlb
push
xbegin
addr16
push
rcr
cmp
and
add
sbb
lods
iret
inc
add
and
add
cwtl
push
xchg
jbe
nop
data16
cwtl
mov
jo
add
or
xchg
xchg
jae
add
inc
add
daa
clc
xchg
insb
imul
xor
add
add
xchg
mov
sbb
clc
adc
add
xor
add
hlt
or
push
shl
scas
test
roll
add
hlt
in
data16
xchg
stc
ffree
clc
dec
gs
jmp
xchg
nop
lret
xor
add
pop
sbb
clc
bound
add
test
sub
add
jge
cmp
sbb
add
dec
aad
add
in
xor
add
push
cld
cld
fcoms
add
icebp
out
stos
pusha
add
jg
out
jg
add
add
ljmp
add
sub
clc
jecxz
jmp
add
js
pop
push
aaa
test
int3
ljmp
add
add
sbb
add
aas
cwtl
mov
push
aaa
and
pop
nop
je
and
test
add
add
jae
add
je
out
dec
mov
int
clc
jge
add
jecxz
push
xor
adc
add
pushf
add
xchg
cltd
dec
push
clc
fs
xor
add
aas
pop
daa
clc
enter
dec
fwait
xlat
addr16
sbb
xabort
add
imul
add
add
cmp
xlat
into
mov
clc
sahf
xchg
sbb
ja
lods
pop
daa
clc
jo
add
add
enter
clc
or
clc
jae
add
push
out
fwait
outsl
lahf
pop
mov
clc
adc
add
push
cmp
and
add
loop
outsb
movsb
clc
push
add
cmp
jp
xchg
mov
or
clc
push
add
xchg
dec
add
es
ret
mov
add
sub
out
std
call
mov
movsl
clc
cmp
aad
add
dec
cmpsl
clc
mov
clc
pop
clc
fwait
std
mov
mov
add
add
lahf
mov
add
cmp
or
clc
push
mov
cltd
push
jp
iret
loope
divl
and
add
cmp
push
cmp
xlat
mov
and
pop
mov
clc
pop
cmp
sti
inc
add
in
pop
popa
add
xlat
inc
clc
jnp
idivl
int3
shl
clc
arpl
add
xor
add
mov
sub
test
mov
mov
test
xor
add
pushl
clc
mov
jo
add
dec
or
jle
clc
xchg
ret
clc
nop
arpl
add
lcall
lods
out
test
cmp
and
add
int
fwait
loope
mov
clc
add
sahf
fcomip
ljmp
add
int
mov
cmp
add
mov
bnd
mov
cmp
in
dec
push
jne
mov
iret
mov
xor
add
cld
jne
clc
stc
pop
in
add
clc
jo
add
add
pop
mov
je
dec
mov
add
add
clc
add
fildl
sub
cmp
clc
xor
add
clc
dec
stos
ret
mov
and
sbb
clc
sub
mov
addr16
insl
mov
sbb
clc
add
add
clc
adc
add
cmp
mov
xor
out
ret
clc
into
in
int
add
cmc
xor
ja
push
add
or
push
add
ljmp
add
dec
jge
ret
clc
incl
dec
cmp
vucomiss
sub
clc
das
mov
lahf
xchg
outsl
push
cmpsl
clc
stc
fnstsw
jno
add
packssdw
add
cmp
adc
add
add
fcmovnbe
push
add
push
add
add
mov
add
clc
or
pop
data16
cmp
clc
and
add
sub
ficoms
clc
movsl
clc
int3
outsl
jp
add
inc
add
jnp
cltd
cmp
add
pusha
add
fs
mov
stos
out
fadds
add
mov
add
sar
add
das
lock
add
lods
xlat
pushf
stos
xchg
clc
das
js
inc
clc
test
bound
add
pop
xor
add
jp
sbb
insl
mov
pop
fimull
mov
clc
popl
clc
cld
lret
push
add
add
add
clc
add
add
or
clc
out
dec
cmp
xchg
cmp
add
dec
push
add
or
int3
xor
add
push
hlt
sub
mov
cld
out
xor
add
jnp
add
enter
repz
clc
stc
inc
add
mov
call
mov
daa
clc
pushf
stc
movsb
clc
cmp
add
cmc
adc
add
add
add
sub
xor
push
cmp
gs
nop
jo
add
mov
pop
inc
clc
pop
aad
imul
insb
push
adc
add
add
jne
pusha
add
sbb
inc
add
mov
mov
cld
and
add
aad
clc
insl
pop
clc
test
mov
clc
xbegin
add
ret
clc
call
add
add
add
insb
xlat
scas
mov
das
jmp
clc
pop
into
or
mov
insl
jne
mov
iret
cmp
shll
add
cmp
xor
inc
add
out
push
adc
add
clc
pusha
add
inc
add
je
clc
xchg
jl
repz
xchg
push
jae
add
add
add
jl
clc
mov
test
mov
cmp
clc
fwait
adc
add
push
inc
add
adc
add
jmp
fsubrs
daa
clc
repz
or
pop
enter
add
lock
clc
test
clc
xchg
jae
add
add
clc
push
dec
sub
add
out
or
push
add
fistpl
jne
inc
add
test
sbb
add
xabort
sbb
cmp
test
dec
ja
clc
pop
push
xchg
xchg
pusha
add
push
ret
clc
in
data16
repz
arpl
add
icebp
xchg
xchg
pusha
add
int3
xchg
xchg
push
add
mov
fs
js
add
popa
add
loope
aad
clc
call
insb
in
sub
xchg
in
lods
sbb
clc
mov
clc
jmp
clc
in
pushf
inc
clc
jecxz
fsubrl
clc
std
push
iret
cs
enter
mov
lock
add
es
xor
add
dec
scas
rcl
dec
leave
bound
add
jle
mov
fisttpll
mov
clc
into
xchg
cmp
jno
add
adc
inc
clc
loop
cli
repz
dec
imul
push
imul
add
adc
cmpsb
clc
clc
cmp
or
clc
imulb
rep
clc
mov
clc
xbegin
sahf
mov
inc
add
dec
add
or
mov
test
push
jmp
stc
add
and
add
add
cli
and
add
clc
cs
add
pushf
mov
mov
add
jno
add
clc
and
add
xchg
out
adc
add
add
add
xor
adc
add
clc
outsl
jne
inc
clc
in
sbb
add
sar
rcr
leave
jo
add
jo
add
clc
adc
add
scas
ret
clc
and
cwtl
or
clc
and
add
cmpsl
clc
cwtl
sar
daa
clc
cmc
sbb
mov
in
cmc
jae
add
add
xor
mov
push
outsb
aaa
sar
mov
sbb
xchg
loop
sub
add
sahf
cmpsb
clc
ucomiss
clc
inc
add
cmp
add
cmp
outsl
mov
clc
adc
add
mov
add
fdivrl
and
add
add
daa
clc
lret
mov
add
leave
cmp
mov
clc
lock
add
add
add
sar
pop
fistpl
adc
add
add
popf
jae
add
out
add
jne
cltd
or
sar
add
xor
add
add
mov
dec
pop
test
sbb
and
add
and
add
or
push
add
hlt
inc
clc
dec
mov
cwtl
jno
add
loop
gs
sar
clc
pop
dec
inc
clc
popa
add
adc
add
test
clc
shlb
jb
add
enter
data16
sub
clc
pop
sahf
ja
add
add
popf
data16
stos
js
clc
lea
add
add
pushf
add
add
add
jge
pop
xchg
mov
add
pop
jmp
pop
add
add
movsb
clc
inc
clc
lcall
add
add
jle
clc
int3
xchg
sub
xchg
aad
aas
movsl
clc
outsb
cltd
jns
lea
sti
adc
add
and
add
dec
shll
sbb
clc
test
add
lcall
fnsave
in
imul
test
dec
fs
pusha
add
lods
pop
sar
add
sub
cmp
or
add
add
jno
add
pop
clc
push
lret
int3
leave
mov
add
ret
repz
div
arpl
add
jecxz
sub
clc
mov
lret
movsb
clc
fldt
add
ret
clc
or
add
aad
clc
jne
clc
sub
sbb
je
mov
push
insl
das
sub
cmp
mov
clc
sbb
insb
jl
xor
xchg
mov
scas
xor
add
inc
add
bound
add
sahf
inc
add
loope
xchg
in
test
out
xor
bound
add
lahf
adc
add
cmpsb
clc
out
lods
ja
shrl
fldcw
clc
add
sbb
push
fdivp
es
pop
push
popa
add
mov
clc
or
clc
xchg
and
add
testb
out
push
clc
add
add
test
mov
into
mov
add
jnp
clc
rol
clc
aas
outsl
ret
sar
cmp
dec
xchg
daa
clc
ljmp
clc
hlt
cmpsl
clc
lock
test
and
add
add
add
pop
mov
clc
xchg
in
jns
sar
clc
movsb
clc
dec
not
loope
aas
test
insl
xchg
testl
clc
outsl
mov
inc
add
dec
clc
inc
add
clc
cmp
dec
insb
inc
clc
adc
add
add
clc
inc
clc
shrl
xor
add
int
cmp
clc
decl
clc
xchg
cs
add
push
add
clc
xor
add
add
test
add
xchg
mov
add
clc
xabort
pop
mov
imulb
push
mov
add
clc
clts
clc
dec
leave
movsl
clc
or
xchg
pop
fldenv
bound
add
jns
clc
outsb
cmp
daa
clc
cmp
enter
sahf
and
push
add
dec
fmull
clc
pop
inc
clc
fsubp
clc
sub
int3
jge
clc
xchg
jle
add
fs
jl
stos
xchg
sbb
cld
test
out
push
movsl
clc
xchg
aam
cmpsb
clc
or
add
bswap
mov
clc
rep
clc
lahf
push
test
jnp
dec
loope
mov
jnp
movsl
clc
adc
add
repnz
nop
imul
ljmp
add
fmull
inc
clc
fisubs
cmp
clc
cltd
mov
add
arpl
add
pop
int
add
add
clc
ret
in
fimuls
cmp
or
add
aam
adc
add
cs
movsb
clc
dec
ret
clc
dec
imul
clc
lret
loop
adc
mov
dec
dec
push
xlat
mov
jmp
add
and
xlat
outsb
out
jp
fnstsw
clc
jne
add
sbb
add
mov
mov
add
adc
add
dec
and
add
add
ljmp
clc
adc
add
add
sahf
inc
clc
push
loop
popa
add
mov
dec
pop
insb
mov
clc
pushf
fistpl
adc
add
adc
clc
inc
add
jge
clc
lret
dec
loop
xor
es
mov
jo
add
add
or
add
lahf
inc
add
pop
push
add
sub
and
or
movsl
clc
inc
add
add
add
push
add
xlat
pop
out
xor
add
roll
in
pusha
add
pop
jo
add
add
pop
push
iret
jl
inc
add
sub
add
add
add
jne
add
ss
xchg
mov
add
push
cmp
or
clc
lods
pop
in
cmc
lcall
repz
add
insl
push
pxor
xchg
testl
mov
add
in
sub
sub
add
fbstp
cld
dec
fidivrs
xor
add
add
clc
cmp
cld
out
adc
add
ret
xbegin
add
dec
scas
xchg
sbb
add
adc
add
or
add
test
popa
add
lea
mov
icebp
inc
add
shlb
jb
add
or
clc
and
add
insl
pusha
add
mov
pop
push
add
clc
test
clc
jbe
adc
add
scas
lahf
sub
rorb
clc
sub
pop
insb
push
imul
shl
clc
mov
clc
int
clc
or
and
ret
clc
mov
add
mov
sub
push
add
push
nop
sub
insl
push
add
add
cmp
jnp
dec
dec
stos
jno
add
xabort
push
add
add
add
dec
sub
clc
inc
clc
xchg
add
mov
mov
push
add
scas
mov
pop
push
add
cltd
mov
add
jp
jb
add
clc
fnstenv
add
loopne
xor
add
test
mov
mov
pop
aad
clc
push
or
out
mov
clc
pop
sti
out
pop
mov
jle
jp
clc
cmp
clc
es
or
enter
cmp
or
inc
add
fdivl
mov
popa
add
das
iret
inc
clc
mov
add
add
add
rcrb
shrl
clc
jle
arpl
add
add
xor
add
add
or
push
ljmp
test
inc
clc
or
add
add
add
push
cmpsb
clc
repz
add
cmp
cmpsb
clc
rclb
clc
sub
cmp
ret
and
add
adc
ljmp
mov
stos
jae
add
shlb
repz
add
pop
movsl
clc
neg
xchg
cltd
adc
out
jp
add
xchg
mov
clc
or
dec
sub
add
sarl
cmp
add
add
add
fsubs
add
addr16
or
repnz
xor
add
cmp
add
sbb
aam
add
add
add
add
stos
mov
clc
in
push
rclb
daa
clc
or
clc
pop
jecxz
int
add
push
add
sub
add
mov
sahf
ret
clc
cmc
xbegin
or
push
xchg
out
cld
dec
jl
clc
test
and
add
clc
add
add
imul
push
jbe
inc
add
pop
ds
std
mov
mov
clc
jmp
mov
mov
sahf
stos
enter
rcll
or
sub
mov
test
jno,pt
add
mov
fistpll
sub
clc
repz
clc
insb
into
dec
outsl
and
add
add
add
cld
cmp
add
mov
outsb
cmp
add
loopne
inc
clc
lret
cld
sub
jne
add
inc
add
sbb
add
push
adc
mov
and
add
xor
add
clc
lods
add
cmp
test
popf
mov
add
shl
clc
xor
add
in
adc
and
add
clc
stos
mov
jae
add
clc
ljmp
add
pop
call
ret
clc
push
inc
clc
adc
add
mov
pop
jecxz
mov
add
mov
clc
mov
clc
mov
add
xchg
lea
add
jne
je
jmp
clc
or
into
pop
xchg
minps
mov
clc
ljmp
add
and
add
add
cmp
add
add
inc
add
push
sar
in
dec
in
inc
clc
cmp
es
dec
xchg
lret
add
adc
test
clc
hlt
aaa
add
add
clc
in
mov
clc
fmull
clc
clc
sub
das
sahf
push
sbb
and
sti
mov
clc
push
add
sub
add
insb
cmp
js
sbb
sti
mov
add
add
pop
or
sub
repz
add
clc
cmpsl
clc
cli
fs
rcll
mov
clc
lods
lret
mov
push
sbb
add
jg
xchg
sbb
clc
outsl
aaa
addr16
scas
jae
add
cmp
push
repz
inc
clc
cmp
popa
add
push
clc
test
sti
sbb
pop
jb
add
xchg
mov
dec
gs
in
mov
stos
lcall
push
add
je
pusha
add
dec
pop
clc
sarb
aad
ja
clc
mov
push
insl
push
add
mov
jl
add
cs
iret
jo
add
push
mov
clc
xchg
xchg
jne
hlt
xchg
jg
iret
fadd
clc
mov
clc
imul
add
arpl
add
add
mov
stos
sub
dec
cmpsb
clc
xor
add
pusha
add
push
add
jns
pop
mov
testb
sub
add
add
popa
add
adc
add
cs
and
add
add
scas
push
mov
add
gs
cmp
in
sbb
test
insb
jbe
cmpsb
clc
jmp
dec
gs
cmp
add
leave
add
cmp
sbb
add
push
mov
sbb
pop
cmp
lret
into
sbb
mov
clc
xchg
pop
jle
xabort
mov
push
pushf
jecxz
mov
clc
stos
xchg
popf
inc
add
imul
push
add
lcall
sbb
mov
add
int
push
add
not
cld
push
aas
fstpl
cs
cs
cltd
xor
add
clc
sbb
lods
movsb
clc
and
add
pop
add
add
mov
sub
push
icebp
imul
add
clc
dec
pop
xchg
fidivl
jns
inc
clc
int
clc
cmp
pop
test
arpl
add
jl
mov
add
inc
add
gs
xabort
clc
push
test
fcmovbe
mov
hlt
in
adc
add
cltd
or
aad
adc
add
repnz
repnz
stos
add
sbb
clc
scas
mov
clc
test
cmp
jbe
mov
pusha
add
mov
add
cmp
clc
jnp
jno
add
xor
add
das
jbe
jecxz
lret
add
add
jmp
mov
stos
cmp
push
pusha
add
mov
jmp
lock
add
clc
mov
clc
lret
sbb
push
add
mov
clc
fwait
out
ret
add
out
adc
clc
push
xchg
push
add
lods
ret
clc
jb
add
jl
mov
bound
add
mov
xchg
jo
add
clc
imul
add
cmp
sbb
add
inc
clc
test
jbe
clc
xor
add
dec
ljmp
lret
or
add
push
xchg
mov
leave
clc
negb
jp
clc
lods
xor
add
sbb
push
clc
inc
add
sub
mul
clc
pop
rdtsc
add
into
notb
add
mov
clc
call
mov
dec
add
add
fwait
testb
add
adc
add
clc
lea
bound
add
fst
sahf
arpl
add
pop
lods
pop
add
mov
fwait
rclb
fistps
mov
clc
stc
add
add
clc
adc
add
pusha
add
xchg
ds
jnp
clc
push
dec
pop
clc
aam
in
cli
lods
sbb
mov
in
adc
pop
clc
imul
pop
pop
xchg
stos
push
add
fcoml
xabort
mov
jg
pop
rclb
add
clc
fsubrl
fildl
sar
clc
cltd
and
add
rolb
cmp
add
push
add
fnstcw
xchg
loope
mov
pop
mov
add
test
stos
insl
cmp
add
jg
in
aam
mov
flds
add
pop
insl
sub
dec
dec
sub
clc
adc
add
clc
push
lods
mov
clc
stos
or
pusha
add
lcall
je
movsb
clc
push
addr16
add
add
xlat
add
and
add
pop
xlat
pusha
add
mov
jne
aad
sub
std
insb
int
clc
cld
inc
add
outsb
or
clc
loopne
pop
outsl
dec
sar
cmc
outsl
rclb
add
add
xchg
mov
inc
add
nop
jmp
sub
add
stos
hlt
inc
add
cmp
clc
add
add
xchg
testl
adc
lea
lock
add
add
leave
std
push
loope
and
in
loopne
cmp
xor
add
add
add
or
loop
pop
scas
mov
sub
add
add
or
test
add
sbb
ds
mov
clc
sub
push
mov
add
add
push
clc
enter
enter
sar
loop
call
add
dec
fmul
sub
inc
clc
and
add
fwait
dec
jg
clc
iret
clc
adc
add
add
pop
test
dec
or
add
add
arpl
add
xabort
add
xchg
and
add
dec
outsl
jo
add
repnz
into
vucomiss
add
data16
rcll
add
pop
out
add
add
bound
add
add
jmp
add
mov
add
test
or
clc
cli
adc
add
mov
aaa
push
xchg
test
lcall
add
jl
pop
sbb
clc
icebp
mov
cmp
insb
pop
movsl
clc
cmp
outsl
mov
ss
add
icebp
or
clc
faddl
add
ja
dec
dec
outsl
sbb
clc
cmpsb
clc
or
clc
inc
add
push
add
pop
push
add
into
or
sbb
lods
mov
sbb
sar
bnd
dec
test
add
dec
mov
adc
add
in
sahf
or
jne
out
scas
inc
add
and
add
inc
clc
data16
xlat
mov
pop
out
negl
jb
add
jge
aad
adc
xor
add
add
sbb
stc
cwtl
jmp
add
add
int3
mov
mov
add
popa
add
fimull
clc
dec
push
pop
gs
and
ljmp
xchg
ret
je
into
xchg
imul
add
ds
fucomi
mov
es
lock
jmp
pop
clc
xchg
adc
pusha
add
mov
add
dec
pop
inc
add
mov
adc
clc
lret
clc
shr
jb
add
jns
imul
or
mov
add
fs
inc
add
add
add
inc
clc
repz
sar
push
add
push
push
clc
adc
add
clc
cmp
mov
mov
clc
mov
xchg
push
add
mov
fistl
mov
add
add
add
xchg
and
add
cwtl
mov
add
sub
clc
int
or
xchg
sbb
sar
dec
sbb
fisubrs
dec
xor
add
add
and
add
clc
add
add
sar
clc
cmp
fsub
clc
add
dec
xor
clc
leave
xchg
add
add
inc
clc
ljmp
ja
ja
cmp
lahf
jae
add
add
add
or
adc
add
cmp
fists
push
add
sub
pop
clc
fbld
add
add
add
clc
xor
add
add
in
push
pop
clc
or
push
jnp
sbb
xchg
or
repnz
dec
std
push
xchg
mov
xor
add
out
xor
insb
gs
xor
add
sub
hlt
imull
clc
pusha
add
in
leave
inc
add
ror
cmp
mov
pop
jmp
add
movsl
clc
mov
clc
adc
add
dec
fbld
loope
jnp
fstps
test
push
cmp
clc
dec
xchg
xchg
sbb
clc
adc
add
notb
add
jno
add
jae
add
add
jp
aaa
lahf
cmp
int
sar
mov
ja
cmpsb
clc
mov
fwait
sahf
xor
add
imul
jg
push
cmp
add
add
clc
jle
clc
adc
cltd
add
add
xchg
mov
lret
aad
cmp
das
push
lret
clc
push
push
add
stos
in
jecxz
adc
add
lret
ficoms
dec
adc
in
or
das
and
add
sbb
add
add
inc
add
pushf
lods
leave
sti
cwtl
movsb
clc
pop
ret
add
pop
pop
lods
movsl
clc
jb
add
add
push
clc
mov
insl
in
fwait
inc
clc
pop
push
mov
inc
add
mov
mov
dec
nop
imul
add
ret
clc
fistl
add
std
loopne
xor
fildll
ljmp
pop
clc
mov
imul
sbb
add
pop
or
clc
clc
jmp
imul
jecxz
or
pop
es
dec
imul
push
cs
add
dec
clc
mov
jne
clc
aad
add
add
or
fs
mov
sub
xchg
mov
add
mov
add
scas
insl
mov
mov
inc
add
push
sbb
add
jle
clc
xor
add
bswap
dec
cmp
clc
and
add
clc
mov
add
lods
xchg
hlt
sbb
cltd
mov
repnz
jp
mov
push
jns
insl
call
xchg
mov
add
mov
in
dec
sahf
iret
jecxz
lods
cmp
cmpsl
clc
out
outsb
and
add
addr16
or
clc
sub
add
gs
movsb
clc
popa
add
in
rcrl
lea
fists
clc
rcrl
mov
add
sbb
add
cltd
in
and
xor
add
xchg
cld
cmp
idiv
xlat
arpl
add
sar
shr
in
dec
jb
add
and
cwtl
mov
add
cli
cmp
push
incb
clc
jae
add
in
pusha
add
test
inc
clc
cli
gs
pop
clc
sub
jnp
sahf
mov
sub
out
sbb
addr16
mov
data16
bound
add
scas
ja
aaa
inc
add
inc
add
loopne
lahf
xchg
mov
add
clc
jle
adc
sar
pop
addr16
jg
clc
pop
mov
lret
test
out
lahf
or
clc
jb
add
stos
push
aam
jmp
add
and
add
dec
jb
add
add
push
cmp
clc
sub
ds
mov
mov
js
decb
clc
shlb
add
gs
xchg
lods
imul
cmp
add
loopne
jo
add
clc
insb
mov
pop
out
adc
add
test
jge
ss
cmp
xor
add
add
sarb
jp
mov
imull
pusha
add
push
adc
add
mov
mov
nop
jg
js
clc
lea
add
sbb
add
pop
push
ret
mov
psubusw
add
sbb
add
pop
cmp
add
and
add
fbld
ficomps
iret
sub
add
clc
jno
add
ds
test
mov
cmp
lret
clc
ljmp
pop
pushf
ficoml
xlat
jmp
push
into
inc
clc
or
mov
into
mov
pop
inc
add
or
add
fidivs
cs
add
inc
add
mov
sub
mov
idivl
cmp
clc
push
call
push
lods
inc
clc
rcll
add
ja
clc
or
cwtl
mov
or
mov
add
lock
clc
xchg
rolb
add
push
add
std
add
add
clc
inc
clc
cmp
clc
mov
add
push
ret
clc
psrld
or
cmp
lahf
xor
add
mov
hlt
daa
clc
xchg
inc
add
jecxz
xor
add
sub
pop
mov
int
hlt
xor
add
add
mov
psubusw
pop
pop
push
xor
add
out
cltd
cmpsl
clc
mov
xlat
loopne
fbstp
mov
outsb
daa
clc
jl
loop
sub
sub
out
ds
jp
add
pop
arpl
add
push
add
xchg
std
sti
std
push
mov
repnz
add
daa
clc
adc
add
and
add
stos
mov
clc
pop
dec
push
adc
add
loope
push
add
and
add
sar
jle
clc
and
add
inc
add
mov
add
xchg
es
pop
mov
add
mov
mov
mov
and
add
push
lret
fwait
pop
adc
jns
ljmp
add
push
sar
xabort
push
dec
test
int3
test
pop
lret
je
sti
mov
or
mov
mov
xabort
clc
push
push
add
jo
add
pop
sbb
mov
add
lahf
push
imul
add
add
add
add
loope
stos
push
push
clc
sti
pusha
add
aam
clc
ljmp
and
add
leave
sub
add
cmp
add
data16
inc
add
jno
add
add
add
add
clc
dec
test
std
cmp
add
nop
cmp
clc
xor
add
xchg
mov
adc
add
clc
and
add
add
add
add
clc
mov
fsubrl
js
mov
add
stos
fs
data16
gs
test
jo
add
add
add
into
xbegin
bnd
cmp
add
pop
clc
nop
enter
add
in
das
sub
add
cs
xor
inc
clc
or
xor
add
add
daa
clc
shlb
add
push
add
pop
popf
fnstcw
xor
add
push
mov
clc
mov
inc
clc
stc
cmp
out
cmp
dec
lods
dec
xabort
cld
repz
add
xor
add
stos
enter
cmp
loop
lcall
clc
dec
cmp
xchg
das
mov
add
pop
mov
stos
mov
and
or
clc
xchg
iret
inc
clc
test
call
mov
loope
xor
push
add
xchg
inc
clc
jmp
cmp
add
jmp
mov
inc
add
icebp
in
adc
add
int
add
jle
jno
add
dec
fdivr
daa
clc
imul
repz
inc
clc
inc
add
idivb
clc
xor
clc
int3
int3
arpl
add
add
cmp
popf
jnp
addr16
cmp
test
test
add
loop
xchg
in
cmpsb
clc
cs
or
add
mov
aaa
test
pop
xbegin
loop
mov
xor
dec
lcall
mov
adc
add
push
add
xchg
lahf
or
add
aaa
incl
fwait
or
clc
sahf
push
add
ret
clc
enter
xchg
sub
mov
add
cmp
lock
push
pushf
mov
clc
out
insl
shll
fcomps
test
xor
lcall
clc
xor
add
cld
out
xbegin
clc
arpl
add
sar
flds
xor
add
int3
cmpsl
clc
aas
dec
inc
add
insl
outsl
sar
add
xabort
pop
sar
cmp
clc
faddl
add
sbb
xchg
fs
loope
dec
mov
clc
sar
clc
push
clc
sbb
sub
mov
loop
repz
lahf
sub
cmp
add
jle
clc
push
add
test
clc
inc
clc
jae
add
push
clc
ja
lock
add
dec
sarb
jge
jae
add
ljmp
scas
fildll
cmp
sub
add
sti
xor
add
xabort
repnz
xchg
adc
xlat
sbb
add
mov
movsb
clc
out
gs
enter
pop
cmpsb
clc
jno
add
push
add
cmc
sbb
push
add
jne
push
xor
stc
enter
or
clc
cmp
clc
scas
imul
dec
mov
js
fidivrl
sbb
test
add
add
clc
xchg
lods
push
jg
clc
and
add
clc
in
xor
sar
dec
dec
pop
jb
add
insb
push
or
add
add
or
js
jle
loop
insb
addr16
sar
in
lret
cmp
leave
in
lea
sar
clc
aas
inc
add
aam
add
shrl
dec
lcall
mov
add
mov
clc
add
in
jae
add
fbld
add
clc
add
add
mov
add
stos
test
clc
jns
frstor
clc
rorb
pop
call
lret
fadds
jae
add
lods
xor
xbegin
call
clc
jae
add
push
clc
adc
add
add
adc
add
addr16
pop
clc
push
lret
mov
sar
add
cmp
shrl
mov
sub
clc
mov
loopne
ret
clc
adc
push
cmp
clc
jnp
xbegin
add
or
jo
add
add
mov
inc
clc
call
mov
add
add
xchg
xchg
pop
clc
or
je
lcall
clc
iret
aam
cmp
add
cmp
add
dec
or
test
popa
add
xor
add
sbb
mov
mov
clc
leave
jmp
xchg
inc
add
xbegin
clc
call
clc
jae
add
cmp
pop
rclb
popa
add
scas
xor
add
xlat
loop
and
cltd
push
xor
add
clc
push
clc
popa
add
popf
push
add
push
add
pop
aam
add
add
imul
add
inc
clc
cmp
cmp
shrl
call
jge
add
pushf
scas
xchg
cmpsl
clc
mov
add
inc
add
scas
idivl
clc
out
jns
imul
and
clc
xbegin
cld
rcrl
cmp
outsb
pop
mov
imul
stc
movsl
clc
cltd
jb
add
clc
cmp
xor
add
mov
test
jp
dec
inc
add
jbe
dec
pop
clc
lret
lret
xchg
repz
cmp
dec
push
insl
or
clc
loop
pop
scas
mov
mov
inc
clc
inc
clc
adc
add
outsb
cwtl
fwait
dec
xchg
loop
sahf
arpl
add
xabort
aad
in
mov
test
inc
clc
dec
mov
dec
lods
mov
std
test
sub
imull
xchg
mov
cmpsl
clc
clc
mov
insb
sub
clc
jg
push
add
test
push
add
in
js
clc
xbegin
inc
clc
jno
add
add
sbb
add
clc
cwtl
dec
cmpsb
clc
jmp
adc
add
in
popf
fbstp
add
clc
mov
clc
add
add
clc
ret
mov
or
test
jno
add
mov
cmp
add
cmp
movsb
clc
kmovw
push
add
ds
jo
add
add
test
mov
add
xchg
pop
push
loopne
push
add
cmpsl
clc
clc
or
or
jl
inc
add
sbb
sbb
clc
loope
lods
and
fadds
jg
push
and
clc
jmp
inc
add
xor
add
clc
pushf
mov
rcrb
inc
add
addr16
popa
add
cli
loopne
popa
add
adc
add
add
add
sbb
jg
clc
or
cmp
sub
mov
test
mov
add
mov
or
lea
adc
add
imul
data16
test
shll
add
rcll
sub
clc
or
clc
inc
add
inc
clc
inc
clc
adc
add
sub
mov
pop
or
add
sub
clc
xor
add
push
es
loopne
mov
mov
test
or
add
or
clc
mov
add
bnd
clc
push
add
mov
add
fisttpl
jecxz
cmpsl
clc
and
add
clc
enter
clc
mov
mov
or
jo
add
add
cmp
clc
or
cmp
add
add
ret
clc
adc
add
neg
and
add
push
cmp
jmp
add
clc
add
pusha
add
jo
add
xor
mov
add
add
cmpsb
clc
in
es
xchg
mov
add
add
add
mov
cmp
sar
lea
add
or
test
push
adc
add
clc
outsl
jecxz
leave
cmp
xchg
sbb
sar
pop
scas
fisubl
xchg
dec
insb
int3
and
add
add
xbegin
xchg
inc
clc
mov
lcall
mov
je
cld
jg
sub
clc
fwait
xor
add
jl
clc
pop
cmp
fs
inc
add
mov
loopne
adc
add
xchg
arpl
add
imul
jl
clc
fimuls
clc
pop
push
pop
dec
push
xchg
leave
push
ljmp
adc
add
fwait
cli
enter
sbb
cmpsl
clc
in
add
add
or
or
sub
jae
add
clc
cmp
fs
and
add
aad
in
test
mov
and
add
aad
clc
pop
insl
dec
or
dec
sbb
outsb
mov
into
ret
into
mov
clc
adc
add
fisubrs
mov
cmp
add
add
rclb
clc
out
outsl
xchg
mov
cmp
clc
popa
add
mov
clc
or
mov
push
aaa
in
push
pop
stc
sahf
and
add
cmc
mov
inc
add
lods
add
fldln2
adc
add
pop
or
cs
jge
cmp
add
sbb
and
jne
es
divl
add
add
and
add
call
push
inc
clc
add
sbb
pop
lock
jge
mov
pop
loop
fidivs
mov
add
test
jp
shl
insl
lods
aam
clc
popa
add
inc
add
xor
add
jb
add
add
cmp
add
clc
sub
push
in
adc
add
leave
mov
and
add
dec
movsl
clc
mov
pop
call
cmp
xabort
jge
push
jmp
and
add
push
lahf
fnsave
cmp
clc
xchg
pusha
add
mov
jnp
xchg
out
fs
repnz
xor
add
mov
fildll
add
mov
and
mov
add
push
add
ret
clc
push
mov
add
stos
push
mov
inc
clc
cmp
sub
loop
mov
add
inc
clc
icebp
mov
xlat
inc
add
in
cmp
push
add
popa
add
push
add
add
clc
lods
test
lods
stos
int3
cltd
pusha
add
jbe
insl
adc
add
cmp
pushf
dec
aaa
icebp
dec
adc
add
lods
and
add
inc
clc
clc
dec
cmpsb
clc
ds
mov
clc
inc
add
cmp
mov
add
filds
fnstsw
clc
lea
cs
test
es
xchg
mov
xchg
and
add
xor
add
repnz
mov
daa
clc
xchg
ss
xchg
cmp
clc
sahf
pop
mov
cmp
add
push
adc
cld
cltd
mov
cmp
clc
bound
add
clc
out
sbb
add
cmp
mov
inc
add
push
add
cmp
xchg
jg
add
add
ret
clc
adc
add
pop
pop
clc
test
insl
hlt
xbegin
add
pusha
add
pop
xchg
movsl
clc
clc
xlat
sub
clc
pop
enter
mov
dec
mov
clc
cmc
fld
clc
mov
dec
and
add
js
xabort
test
inc
add
pop
das
xor
pcmpeqb
add
js
sahf
je
scas
push
ret
clc
jl
add
add
add
mov
ljmp
adc
add
add
clc
dec
pop
aam
imul
add
in
test
cmp
add
add
clc
cwtl
pop
cmp
leave
test
popf
mov
jbe
add
pop
add
add
fimull
clc
pop
mov
clc
outsb
add
add
clc
mov
loope
sbb
add
add
leave
inc
add
and
add
popf
fnstenv
cmp
call
push
add
jp
sub
clc
jo
add
cmp
jmp
mov
repnz
rclb
stos
pop
mov
xchg
mov
push
add
cld
xlat
push
clc
push
clc
cli
adc
add
push
add
cmp
mov
add
add
jo
add
aam
and
mov
clc
jae
add
add
lods
repnz
push
xchg
nop
sub
clc
ftst
clc
and
add
adc
add
clc
test
sar
add
add
add
add
out
xor
add
add
dec
imul
add
cmp
sub
add
sub
add
add
xor
add
je
add
add
add
stos
mov
outsl
xchg
in
test
and
add
cmp
cmp
pop
push
xchg
sti
cwtl
sbb
jb
add
add
cmovnp
outsb
negb
imul
inc
add
or
or
sti
imul
clc
push
je
mov
je
loope
cli
push
clc
dec
push
lfs
imul
cmp
mov
pop
or
clc
popa
add
sbb
loope
std
mov
add
pop
inc
add
inc
clc
or
test
jmp
icebp
dec
xchg
xchg
stos
xor
add
add
out
add
add
pop
push
or
clc
push
pop
push
add
int3
inc
add
xor
add
add
add
loopne
out
add
add
test
clc
dec
popa
add
es
xchg
and
add
add
add
cmp
add
outsb
inc
clc
arpl
add
add
mov
add
out
jg
clc
mov
clc
imul
clc
cmp
bound
add
clc
addr16
into
test
pop
imul
add
and
add
jbe
leave
jmp
inc
add
loope
out
into
das
pop
adc
add
sbb
add
clc
iret
bound
add
test
add
out
pop
imul
clc
or
dec
dec
je
clc
lods
mov
sub
add
nop
push
dec
sub
add
clc
adc
clc
inc
clc
mov
out
pop
imul
clc
jns
fidivs
clc
add
add
clc
bound
add
stc
sar
clc
fwait
out
sub
adc
add
push
add
jno
add
clc
dec
sbb
aas
pop
outsl
sub
imul
jns
enter
xor
add
and
mov
clc
pop
adc
add
add
xor
mov
sub
loope
mov
add
dec
xbegin
xchg
and
add
clc
mov
xlat
mov
add
add
or
inc
clc
fiaddl
add
clc
int
add
add
mov
dec
add
cmpsb
clc
mov
test
clc
arpl
add
mov
add
clc
sub
add
clc
pop
clc
cmp
xor
add
add
out
fwait
lahf
nop
inc
clc
lods
mov
inc
clc
jae
add
das
mov
mov
pop
popf
jnp
fcompl
add
je
jnp
clc
xchg
insl
jo
add
in
icebp
cld
stos
cmp
jno
add
jae
add
in
fwait
scas
cmp
mov
jmp
inc
clc
mov
push
push
sar
out
ss
add
cmp
lret
or
add
gs
je
cwtl
repz
add
filds
jb
add
pop
jmp
or
adc
add
lret
ds
clc
and
mov
dec
dec
dec
cmp
fcmove
std
push
iret
lock
clc
push
add
push
loop
sar
mov
clc
je
push
sub
clc
xabort
lock
cmp
mov
test
in
in
and
incl
sar
out
mov
loop
add
add
or
notb
add
stos
pop
adc
add
int3
pop
clc
inc
add
movsl
clc
lea
push
repnz
add
fcmovne
cmp
add
or
fidivrs
mov
mov
sbb
faddl
clc
dec
or
js
or
mov
imul
add
xlat
int3
in
dec
ret
clc
push
mov
sub
clc
dec
push
add
push
ljmp
clc
dec
mov
aam
mov
add
mov
cmp
clc
dec
lea
add
mov
xor
add
add
clc
jge
add
add
cmp
psubsb
add
add
sti
je
test
hlt
lcall
add
mov
mov
mov
cmp
jno
add
fsub
clc
inc
clc
cmpsl
clc
mov
add
jmp
add
rorb
clc
mov
push
stos
xchg
mov
or
mov
into
scas
jg
in
fucomp
and
add
pop
pop
clc
lcall
push
clc
pop
xbegin
add
xbegin
ss
sarb
add
mov
clc
clc
jb
add
sub
jecxz
mov
sar
lcall
in
out
lock
push
add
push
adc
add
imul
clc
dec
cmpsl
clc
or
insl
cli
shrb
cmpsl
clc
push
adc
add
xchg
ret
in
call
cmp
in
sbb
loope
push
mov
dec
or
clc
inc
clc
and
add
add
jecxz
enter
scas
xor
add
or
clc
jno
add
clc
adc
add
jp
stos
lods
mov
push
bound
add
clc
mov
sub
xor
add
and
pushf
mov
clc
jmp
scas
aam
add
arpl
add
xchg
aam
cmp
inc
clc
popf
cmp
push
add
mov
arpl
add
xor
add
pop
rcrl
sub
add
mov
jbe
data16
cs
outsb
das
pop
jno
add
popa
add
out
call
daa
clc
jecxz
sub
jno
add
add
or
add
jbe
in
mov
add
clc
cmp
clc
icebp
in
pop
mov
add
cmp
out
rclb
sub
aad
jne
fdivrl
adc
add
add
rorb
cmc
clc
repz
add
aaa
mov
dec
or
scas
gs
pop
push
xchg
insl
push
ds
fnstsw
int3
gs
lahf
movsl
clc
mov
add
dec
fimuls
clc
sbb
add
cmp
push
add
xbegin
gs
or
fstps
pop
loopne
sbb
adc
add
add
add
add
add
js
lock
insb
fs
pop
aas
pop
clc
in
or
mov
jmp
add
xor
mov
lods
dec
push
xlat
clc
xor
add
cmp
push
add
arpl
add
dec
inc
clc
cmp
add
add
neg
inc
clc
cwtl
ret
clc
xor
add
cltd
fwait
jecxz
nopl
fistpl
inc
clc
int3
outsl
xor
add
psrlw
out
aad
mov
fs
ret
add
add
add
sbb
clc
idivl
test
add
test
push
add
sbb
aad
clc
xor
add
arpl
add
jns
pop
add
add
sub
clc
xchg
dec
add
pop
clc
movsb
clc
inc
add
jge
clc
pop
jb
add
mov
mov
xor
add
xchg
nop
adc
add
lret
jg
lret
sbb
mov
clc
in
dec
sbb
add
pop
arpl
add
pop
idivl
adc
add
clc
add
add
clc
clc
mov
out
xchg
xabort
mov
xor
add
add
or
pop
clc
cmc
and
add
add
mov
jb
add
loope
in
and
clc
mov
movsb
clc
inc
add
jae
add
add
sar
repnz
in
in
ss
clc
aad
dec
cli
pop
adc
add
clc
dec
sbb
clc
jae
add
or
out
dec
aas
xor
add
add
lods
out
gs
int
clc
cmp
add
clc
leave
cmp
xor
add
aas
sub
add
lret
clc
pop
fs
mov
clc
xchg
into
sbb
clc
imul
clc
daa
clc
or
cmp
jp
daa
clc
gs
dec
std
pop
std
leave
idiv
jae
add
push
xchg
dec
cmp
add
dec
aas
mov
clc
mov
clc
lret
xchg
dec
sub
hlt
cmc
sti
pushf
jl
clc
mov
clc
mov
xchg
jge
add
sahf
jmp
clc
cmp
mov
sub
aaa
cltd
mov
xor
add
in
xor
loop
add
add
mov
clc
icebp
test
lcall
clc
add
mov
imulb
mov
cmp
xor
add
add
aas
sarb
mov
push
push
add
test
popa
add
add
add
fbld
add
insl
inc
add
call
cmp
ljmp
in
cmp
call
clc
jecxz
arpl
add
add
je
ficompl
nop
sbb
push
mov
mov
das
loope
leave
arpl
add
lret
add
mov
nop
xchg
mov
add
into
inc
add
enter
xchg
scas
insl
mov
adc
addr16
and
add
mov
xchg
imul
inc
clc
mov
lods
cmp
mov
mov
add
cwtl
jbe
push
add
mov
movsl
clc
cmp
clc
cmp
inc
clc
bound
add
clc
lea
clc
test
rorb
xchg
outsl
jae
add
or
js
xor
add
add
mov
clc
mov
clc
or
imul
inc
clc
xchg
and
push
xor
add
fptan
lret
clc
push
inc
add
mov
clc
das
int3
scas
loop
aad
inc
add
cmp
clc
out
xlat
int3
push
sub
insb
jae
add
inc
clc
inc
clc
repnz
pop
fidivl
mov
clc
test
or
clc
clc
mov
clc
mov
fstl
mov
adc
jmp
pop
mov
add
pop
clc
ret
clc
mov
xchg
push
mov
sar
xabort
int
in
shl
clc
icebp
add
add
add
fwait
mov
cmp
add
cmp
xchg
jmp
cwtl
pop
clc
inc
clc
fstpt
pusha
add
jmp
clc
jecxz
fadd
clc
cmpsl
clc
lods
popf
lahf
dec
pop
jns
lahf
mov
clc
gs
jle
out
pop
outsb
cmc
push
dec
gs
cmp
pop
fimuls
pop
jmp
dec
mov
mov
clc
cmp
mov
sub
clc
pop
adc
add
push
mull
add
dec
enter
sar
mov
cmp
or
clc
xchg
outsl
sar
clc
inc
clc
jg
jg
daa
clc
cmpsb
clc
and
add
clc
mov
leave
and
add
and
add
pop
mov
clc
fnstenv
clc
jl
mov
cmp
movsl
clc
fmull
cmp
stos
inc
clc
hlt
mov
data16
push
insl
dec
aad
clc
fistpll
fildll
sub
addr16
out
daa
clc
or
add
bound
add
clc
xor
add
mov
clc
mov
lret
sbb
add
mov
or
adc
add
out
lea
cmp
ror
adc
add
dec
call
add
mov
bound
add
jbe
push
add
jmp
gs
cmpsb
clc
inc
add
call
popf
popa
add
sub
mov
out
outsb
lea
rol
clc
pop
mov
add
sar
notl
add
es
sub
push
add
pop
or
add
sbb
arpl
add
add
lea
push
add
dec
push
add
xchg
push
add
dec
sar
clc
push
jmp
xchg
hlt
sarb
mov
add
adc
add
clc
mov
cmp
add
adc
add
add
lcall
inc
add
sub
sub
incb
imul
inc
add
sub
aad
clc
sar
clc
jecxz
pop
mov
cmp
aaa
add
add
inc
add
mov
scas
test
jmp
clc
cli
jns
clc
nop
lret
clc
mov
xchg
rorb
add
cmc
pop
inc
clc
cwtl
sbb
aaa
xabort
clc
sbb
bound
add
icebp
and
add
test
jmp
sub
clc
jbe
sar
je
add
xabort
clc
push
add
cli
xchg
dec
pop
or
add
add
jl
jg
cmpsl
clc
roll
out
sub
fldenv
mov
add
ljmp
add
and
rorb
sbb
push
into
cmpsl
clc
dec
adc
add
imul
aam
cmp
shrl
clc
cmp
stos
xor
add
es
adc
add
mov
inc
add
incl
add
add
icebp
das
ror
mov
dec
outsb
mov
clc
cmpsl
clc
xchg
cmp
std
mov
mov
add
add
adc
clc
xchg
jo
add
add
jmp
clc
lods
and
or
add
fsubrs
and
add
fcomps
dec
mov
add
sbb
clc
xchg
pop
mov
mov
add
mov
add
add
xchg
adc
or
clc
sbb
jl
add
in
mov
adc
dec
mov
add
jg
adc
add
pop
dec
pop
rorl
imul
or
inc
add
cmp
add
std
mov
repnz
cli
xchg
jns,pn
cltd
pop
clc
fldt
arpl
add
mov
mov
and
loope
jl
clc
cmc
scas
xor
add
cmp
add
add
stos
icebp
pushf
pushf
data16
and
add
jmp
clc
repz
add
add
bound
add
testl
gs
test
sub
sub
clc
dec
enter
xchg
sar
xor
ds
insb
xor
add
add
inc
clc
ret
pop
int
xbegin
push
fldenv
add
add
incl
clc
dec
adc
add
add
outsb
jnp
and
clc
xbegin
jb
add
clc
xlat
movsl
clc
pop
arpl
add
mov
icebp
test
push
jmp
clc
divb
xor
add
and
or
add
fwait
jo
add
add
add
xor
add
and
add
clc
cmp
sub
cld
sub
and
add
add
loope
inc
clc
sub
or
add
sub
clc
data16
imul
daa
clc
mov
and
add
add
clc
je
jg
ss
add
xabort
loop
lret
clc
and
ret
fnsave
add
pop
inc
clc
int3
fldenv
jle
xor
add
clc
xor
add
add
dec
jp
or
add
add
mov
mov
mov
ja
xor
jmp
push
iret
pop
sbb
add
pop
scas
jmp
cmp
mov
mov
or
xbegin
sar
stc
dec
push
imul
add
loope
sbb
push
add
aam
ljmp
outsb
xor
ds
xchg
test
loopne
test
pop
clc
mov
clc
mov
xlat
lret
add
xchg
test
jo
add
cli
popf
mov
clc
pop
jb
add
ljmp
ret
clc
inc
clc
mov
pop
jo
add
xbegin
pop
mov
lods
sar
add
insb
mov
or
clc
push
mov
add
mov
or
add
mov
je
jns
clc
cmp
inc
clc
push
cwtl
into
xor
or
and
fwait
cmp
mov
aam
add
sub
add
jecxz
movsb
clc
mov
test
leave
aam
inc
add
int3
sub
mov
inc
clc
std
test
dec
mov
add
bound
add
mov
add
jae
add
cmp
pop
sub
cltd
mov
add
fdivrp
cmp
add
inc
add
in
nop
xchg
cmp
bndstx
clc
fld1
push
xchg
xchg
ret
clc
mov
xor
add
or
clc
leave
push
and
cwtl
mov
clc
test
jp
add
cmp
clc
xchg
pop
mov
sub
add
add
xor
add
mov
xchg
insl
add
or
add
mov
add
add
and
add
es
jle
icebp
pop
clc
sub
add
jae
add
add
inc
clc
mov
jp
decl
add
and
add
clc
sbb
clc
sti
mov
repnz
lcall
cli
lcall
cmpsl
clc
add
add
cmp
add
inc
add
push
add
fsubl
jmp
movsb
clc
jmp
cli
in
in
repnz
jge
bound
add
lods
loop
xor
and
add
clc
shr
lcall
in
add
add
int
mov
in
adc
add
jl
pop
cmp
clc
addr16
mov
loopne
mov
sbb
add
add
add
in
xlat
daa
clc
sahf
adc
add
clc
mov
popf
das
insl
sbb
add
icebp
xor
data16
mov
repz
fimuls
add
int
or
xchg
bound
add
add
test
pop
clc
mov
add
add
mov
dec
jae
add
inc
add
xbegin
mov
in
scas
fs
fsubrs
add
cmpsb
clc
jnp
mov
clc
inc
add
fisubl
clc
hlt
out
fisubrl
cmp
test
daa
clc
mov
mov
sbb
clc
cld
adc
sbb
dec
push
sbb
mov
xchg
in
stos
and
xor
add
clc
dec
xor
add
lahf
lods
loop
cmc
inc
clc
testb
mov
jge
clc
and
add
add
cmpsl
clc
jb
add
add
inc
clc
cmp
add
add
add
add
add
add
inc
clc
xor
add
icebp
xchg
in
jnp
add
jp
cmp
clc
dec
jo
add
inc
add
push
sub
test
aam
add
pop
sbb
cmp
jge
push
add
push
mov
clc
add
add
out
adc
add
add
mov
jne
movsb
clc
arpl
add
into
clc
and
add
stos
inc
clc
cmpsl
clc
xor
add
add
xor
add
or
insl
mov
xlat
xor
add
push
add
insb
cld
pop
idivl
dec
call
xabort
adc
add
mov
clc
aam
add
jl
pop
add
aad
cmp
add
adc
add
or
clc
adc
movsb
clc
or
call
or
pop
fwait
mov
rcrl
std
push
add
pop
xchg
jo
add
push
leave
or
iret
mov
clc
cmp
add
ret
clc
push
add
cmp
clc
fdivrl
add
pop
pop
mov
mov
clc
outsl
sarl
add
enter
xor
test
mov
add
pop
stos
aaa
and
add
or
jl
clc
mov
add
sub
add
inc
clc
popf
movsb
clc
test
dec
data16
adc
add
scas
jl
clc
or
js
add
insb
add
add
add
pop
sub
push
clc
test
push
cmpsb
clc
popf
fwait
leave
mov
xor
clc
pop
sub
push
xchg
or
add
movsl
clc
pop
xchg
mov
in
xor
fs
cli
cmp
clc
cmp
xchg
and
daa
clc
mov
clc
add
testb
cmp
leave
xchg
sar
mov
iret
cltd
sbb
push
clc
leave
cmp
sbb
add
dec
push
sbb
add
add
sti
cmp
add
inc
add
cmpsl
clc
jno
add
movsb
clc
sbb
out
imul
jns
pop
push
add
pop
inc
clc
xor
add
add
cmp
add
add
pop
mov
lret
lock
insb
xabort
add
xabort
clc
mov
clc
addr16
in
ss
sbb
add
stos
jnp
sbb
sar
rol
clc
add
add
repz
add
insb
xchg
mov
add
lea
xchg
out
pop
out
fcomps
cmp
add
jns
clc
xor
add
add
sbb
clc
outsb
es
and
movsb
clc
xchg
and
add
cmp
cwtl
lock
inc
clc
bound
add
pop
add
add
clc
movsl
clc
jo
add
out
test
add
mov
or
mov
clc
in
jp
aad
add
pop
scas
pop
call
xchg
push
cmp
jp
in
out
ret
clc
inc
add
inc
add
scas
pop
clc
test
shl
js
add
in
enter
out
dec
dec
dec
mov
clc
testb
jo
add
cmp
sbb
clc
repz
xbegin
clc
out
cmp
repz
clc
mul
clc
sahf
pop
rcrb
scas
out
testl
add
add
in
pop
cld
mov
cmp
test
mov
or
and
cmp
adc
add
data16
ja
pusha
add
ret
clc
and
sbb
mov
add
clc
pop
jp
clc
pop
clc
jnp
clc
sar
mov
add
sar
jge
fcoms
add
or
jns
fwait
arpl
add
add
cwtl
adc
clc
das
add
xbegin
adc
add
jmp
clc
pop
hlt
push
sbb
cmp
mov
add
inc
add
dec
scas
mov
testb
dec
insl
pop
mov
clc
test
adc
add
flds
add
mov
sbb
clc
jb
add
das
inc
add
shlb
mov
sub
xlat
enter
fwait
jge
jmp
push
clc
lcall
aad
ds
clc
pop
stos
sbb
out
sar
dec
loope
lret
out
xchg
std
test
sbb
das
push
shll
pop
push
add
cmp
mov
xor
add
insl
into
rclb
add
add
add
jo
add
push
imul
add
sbb
je
clc
push
lods
cmp
sbb
sub
clc
adc
leave
popa
add
pop
int
add
xchg
enter
dec
xchg
jb
add
xchg
pop
sbb
push
add
ret
clc
cmpsl
clc
xlat
mov
clc
sar
clc
xchg
xchg
mov
xlat
addr16
aam
lea
add
push
add
dec
pop
dec
popa
add
fstl
mov
out
test
push
call
jl
mov
sub
mov
sub
add
add
cmpsl
clc
cli
pop
loopne
xchg
push
add
lret
pushf
or
pop
lret
add
cmp
test
out
jae
add
add
aas
xchg
mov
cmp
clc
sub
add
xor
add
jbe
clc
test
fs
decb
mov
test
jle
clc
js
xor
add
clc
mov
inc
clc
xlat
mov
aas
jnp
add
add
add
xchg
fsubs
push
push
data16
pushf
adc
add
clc
mov
fdivr
pop
clc
or
mov
pop
repz
clc
add
xchg
xchg
inc
clc
cld
push
sub
imul
in
dec
inc
clc
and
add
add
jo
add
lea
add
out
pop
divl
add
sub
icebp
jg
and
add
lret
push
add
and
sub
or
add
jge
add
dec
inc
clc
scas
lea
repnz
lret
clc
jbe
out
pop
repnz
lcall
inc
add
pop
js
clc
outsl
scas
fucom
clc
mov
cld
cltd
fists
je
in
notb
ret
clc
sub
and
add
cmpsl
clc
test
inc
add
hlt
dec
test
pop
pop
and
add
dec
clc
dec
insb
jle
imul
and
stos
adc
add
clc
cmp
clc
lods
inc
add
fldl
add
add
lea
clc
stos
stos
dec
loopne
lahf
or
pop
inc
clc
aas
out
int
push
out
rcl
xchg
or
sub
push
and
add
sbb
clc
mov
add
repnz
jne
jmp
outsb
cltd
insb
mov
arpl
add
add
out
imul
clc
sti
fadd
clc
inc
add
hlt
adc
add
outsl
xor
add
clc
mov
mov
clc
sti
add
add
add
shrb
fs
lods
mov
clc
test
push
add
hlt
pop
data16
testb
clc
movsl
clc
xabort
push
clc
inc
clc
stos
jle
outsl
pop
cltd
mov
repz
dec
xchg
xchg
jne
add
shll
adc
add
popa
add
lcall
add
sbb
or
add
jne,pn
xchg
clc
cmp
add
lret
xchg
lret
and
add
push
add
cmp
xchg
mov
clc
test
xchg
mov
clc
or
xchg
movsl
clc
clc
xchg
add
add
dec
call
add
cmpsb
clc
pop
mov
sub
add
clc
repz
xlat
mov
mov
cmp
bound
add
pop
jo
add
add
cmovb
add
push
add
mov
pop
and
add
mov
clc
repnz
aas
ja
add
cmp
nop
add
or
pop
outsl
mov
add
push
clc
int
clc
movsl
clc
nop
aam
add
add
bound
add
or
add
push
or
neg
mov
add
pop
negb
clc
pusha
add
popa
add
pop
xor
add
clc
sar
mov
clc
inc
add
jp
fdivr
popf
paddusw
and
add
clc
jb
add
clc
xabort
add
xor
add
sbb
clc
ss
xchg
ret
icebp
loope
ja
clc
in
dec
sub
call
add
add
repnz
lock
clc
xor
add
mov
sbb
mov
addr16
dec
mov
add
push
add
lahf
cmp
mull
add
and
add
add
fidivrl
fdivrp
jle
xchg
add
add
clc
xor
add
add
inc
clc
push
sbb
add
add
add
mov
add
pop
sub
push
clc
dec
out
fstl
clc
aas
adc
add
add
cmp
clc
arpl
add
sub
add
fdivrs
nop
xor
clc
cmp
add
add
shlb
and
add
clc
mov
clc
push
add
add
add
scas
inc
add
mov
shll
add
add
add
sbb
sar
inc
clc
sub
cmp
clc
test
or
xor
add
in
cltd
jg
push
lcall
add
mov
clc
sub
clc
mov
stos
jb
add
pop
dec
scas
outsl
push
mov
push
add
dec
mov
cmp
lret
add
arpl
add
add
add
add
addr16
jmp
add
add
imul
push
clc
xor
scas
aas
lahf
nop
in
jbe
ror
sbb
push
cmc
cmpsb
clc
mov
add
pop
mov
sub
add
add
in
data16
cmp
rcll
add
fs
mov
clc
cmp
add
add
nop
fildll
xchg
add
add
ss
sub
cmp
add
test
cmp
xor
add
pop
inc
clc
je
clc
push
stc
adc
add
push
mov
mov
or
xchg
lcall
mov
add
dec
mov
call
leave
pusha
add
rcll
add
xchg
das
add
add
add
dec
out
mov
daa
clc
pop
dec
cmp
fstp
add
sahf
es
pop
jbe
clc
inc
clc
add
add
clc
mov
decb
clc
mov
add
call
pop
je
xchg
push
neg
cld
sar
clc
data16
loopne
call
inc
clc
jecxz
mov
cmp
and
add
and
sub
add
imul
iret
jle
xlat
rcrl
xor
add
mov
cmp
add
xchg
cmp
add
pop
xabort
clc
mov
pop
decb
iret
test
fdivs
mov
mov
fisubl
add
inc
clc
add
add
add
add
int
clc
test
clc
or
clc
mov
clc
dec
add
add
mov
ja
add
add
inc
clc
mov
clc
mov
daa
clc
push
add
adc
add
xor
add
sbb
clc
ret
leave
push
xor
add
ffree
clc
push
out
cmp
push
sbb
add
jbe
clc
loopne
mov
out
push
movsb
clc
pop
shl
jge
cmpsb
clc
std
dec
test
and
push
mov
clc
adc
add
adc
lea
clc
dec
cmpsb
clc
add
add
cltd
pop
sbb
clc
and
add
pop
repz
fildl
add
push
jl
add
dec
lret
int3
rcll
jno
add
add
aaa
icebp
repnz
add
mov
pop
xor
add
xor
add
enter
and
add
fldenv
add
and
add
mov
cld
cmp
add
or
clc
hlt
add
add
jmp
clc
out
push
imul
stc
jg
data16
aas
jp
test
mov
clc
hlt
popa
add
adc
or
or
jecxz
hlt
clc
jo
add
out
or
mov
leave
loop
xchg
dec
repnz
fadds
clc
clc
data16
ss
out
jecxz
sub
inc
clc
push
add
inc
add
pop
scas
inc
add
dec
cmp
cmp
inc
add
sub
js
clc
sbb
es
inc
clc
add
add
ror
mov
clc
xor
je
rol
clc
mov
add
cmp
aad
xor
add
clc
sub
clc
or
pusha
add
pop
push
add
into
xbegin
ljmp
jp
std
stos
rcr
arpl
add
clc
data16
js
clc
xchg
sub
clc
cld
cmpsl
clc
mov
pop
jne
mov
add
clc
mov
imul
mov
add
jne
xchg
dec
adc
xchg
rcll
sbb
clc
fcoml
add
add
lock
add
jmp
add
add
jne
clc
adc
add
fiadds
add
xchg
pop
fs
arpl
add
cmp
add
notl
dec
aas
mov
in
negb
clc
adc
add
add
lock
xabort
clc
xor
add
clc
stos
divl
add
std
ftst
clc
dec
sar
arpl
add
add
movsl
clc
cwtl
mov
fsubrs
pop
clc
jmp
imul
add
xchg
movsl
clc
cwtl
cmp
xchg
sbb
clc
popf
adc
add
add
add
decb
xchg
pop
dec
leave
fildl
loopne
mov
sub
sub
sbb
pop
movhps
test
or
add
mov
add
mov
clc
xabort
cmp
fucomip
icebp
mov
cmpsb
clc
out
jl
add
inc
clc
fidivrs
rcr
cld
or
clc
jno
add
clc
insb
or
into
sahf
mov
adc
add
fnsave
add
add
add
xor
add
add
mov
inc
clc
es
lret
pushf
adc
add
jg
stos
add
add
sub
out
aaa
add
add
add
cmpsl
clc
loopne
lret
sbb
add
jmp
lea
push
add
testl
int
add
sub
out
mov
clc
mov
fs
lods
or
pop
cmp
add
mov
jge
or
clc
sub
imul
pop
and
jbe
clc
push
pop
dec
adc
and
add
sub
sbb
int3
cmp
clc
or
mov
clc
pop
enter
add
ja
fs
test
nop
test
add
out
dec
vmovlps
add
jae
add
clc
enter
jns
or
add
sub
add
sti
lods
jno
add
sub
sahf
inc
add
out
jne
mov
clc
add
daa
clc
ljmp
clc
xchg
out
push
xbegin
shlb
clc
dec
out
call
adc
add
test
popf
xchg
stc
lock
cld
sarb
lcall
fadds
clc
and
adc
add
mov
sbb
repz
mov
das
fiadds
add
cmc
xchg
imul
jns
add
pop
cmp
clc
mov
clc
fistps
or
clc
aam
clc
enter
add
aad
clc
jne
shlb
mov
pop
fimuls
clc
je
cmp
sbb
sub
loopne
popf
test
outsb
mov
clc
dec
sahf
insb
sub
pop
sahf
mov
and
add
add
cmp
popf
lods
and
add
not
je
insl
dec
cmp
pusha
add
pop
jns
clc
popa
add
xbegin
mov
shrl
and
add
mov
inc
clc
inc
add
and
add
clc
sbb
push
jle
add
push
pop
adc
add
push
add
mov
clc
out
sbb
cmp
sbb
je
popa
add
jmp
rcrl
add
cli
inc
add
nop
cli
lahf
fldenv
clc
cwtl
pop
lods
mov
clc
in
out
loope
adc
jg
sub
xor
add
je
rorb
roll
push
inc
add
xchg
cmp
sbb
ds
add
sbb
mov
add
test
mov
add
mov
clc
test
cmp
add
mov
add
pop
xor
add
add
insl
nop
xabort
clc
fs
pop
mov
mul
clc
mov
clc
fnstcw
clc
fdivp
pushf
dec
push
cmp
add
clc
jb
add
gs
ret
clc
dec
xabort
clc
clc
lock
and
add
clc
fsts
xchg
or
clc
int3
inc
add
sub
and
add
clc
ss
mov
dec
sbb
aaa
mov
or
repnz
cmp
fstpt
cld
test
jns
movsl
clc
and
add
enter
das
loope
push
push
inc
clc
mov
cmp
fmulp
aad
add
mov
cmp
add
xor
add
push
lcall
sbb
popf
or
add
clc
mov
fidivl
push
ljmp
xor
add
mov
add
std
mov
bound
add
clc
scas
pop
data16
sub
clc
xchg
xor
add
add
clc
cmp
inc
add
or
clc
loope
mov
pop
dec
jbe
add
inc
clc
push
clc
push
sbb
push
xchg
stos
pop
sub
daa
clc
outsb
xor
add
clc
shlb
clc
mov
mov
aaa
sbb
jo
add
add
pushf
dec
push
add
insb
test
std
movsb
clc
xchg
xor
add
add
pop
push
add
mov
add
movsl
clc
or
stos
ds
incb
hlt
and
add
out
lahf
xchg
cmp
add
test
add
add
pushf
iret
add
add
add
jl
clc
mov
push
add
or
ja
stos
test
push
add
scas
decb
cs
push
add
mov
add
nop
add
jbe
inc
clc
sbb
data16
dec
aaa
jmp
clc
adc
add
clc
aam
aaa
or
clc
nop
call
add
dec
mov
xchg
insl
clc
fldcw
pop
out
or
pop
icebp
cmp
push
clc
popf
pusha
add
jmp
sub
clc
dec
cld
daa
clc
mov
add
pusha
add
popa
add
pop
push
rolb
add
and
push
add
dec
jbe
cmp
jne
jecxz
sar
outsl
and
jl
imul
add
idivb
clc
cmp
cli
sub
hlt
sub
add
stc
mov
clc
lret
pushf
inc
add
mov
xor
add
clc
pop
sub
add
pop
cmp
add
out
cld
outsb
mov
das
cmc
mov
test
out
test
cltd
dec
xchg
scas
cmpsb
clc
scas
and
add
imul
sahf
mov
movsl
clc
lret
add
and
add
add
inc
clc
cltd
push
add
sti
ficomps
outsb
rclb
add
sarb
test
in
cmp
add
adc
lock
add
dec
cmp
loope
gs
mov
cmp
push
cmp
mov
push
sub
add
add
add
clc
mov
xchg
out
lods
xchg
cmp
out
cmp
add
add
nop
addr16
push
push
outsl
lcall
lea
add
sbb
fs
xchg
sub
aad
add
pusha
add
jg
clc
xchg
loope
adc
add
fwait
sbb
or
add
int3
scas
insl
or
incb
ljmp
clc
icebp
mov
dec
into
xor
add
add
push
clc
or
add
add
mov
cmp
clc
stc
xchg
xchg
add
add
add
leave
pushf
sar
pop
xlat
popa
add
enter
clc
cwtl
mov
mov
cld
xor
add
dec
lret
inc
add
sub
add
mov
add
int3
mov
add
cmp
push
add
imul
addr16
loopne
xchg
ficoml
mov
add
jo
add
clc
sub
into
jmp
xchg
mov
in
test
sbb
xlat
inc
clc
mov
add
addr16
mov
cmp
ss
roll
and
clc
add
mov
test
fwait
mov
jo
add
clc
adc
add
sub
add
movsl
clc
clc
imul
cmp
clc
insl
pop
xchg
repnz
push
and
add
cmp
out
mov
adc
je
add
mulb
xbegin
repz
ret
cmp
js
clc
xbegin
mov
in
pop
clc
mov
mov
jo,pt
add
add
sub
test
enter
mov
xor
add
mov
cmp
clc
daa
clc
inc
clc
cmp
clc
cmp
add
lea
add
cmp
add
add
cmp
clc
int3
scas
pop
push
out
cld
inc
add
fs
out
cmp
outsl
out
shl
clc
in
push
add
sbb
das
dec
test
sbb
test
mov
add
add
sar
sub
sub
out
aas
mov
clc
xchg
loop
jnp
push
add
cld
mov
leave
pop
push
add
mov
push
hlt
ret
clc
test
in
pop
call
clc
cmc
mov
add
scas
sbb
or
insb
iret
cmc
and
ds
mov
clc
clc
cmp
mov
clc
sbb
sbb
dec
je
xchg
loopne
adc
inc
clc
or
jl
clc
dec
popf
in
fstpl
clc
in
xor
add
add
jae
add
stc
ss
clc
or
push
jecxz
jae
add
add
sar
mov
add
add
insl
in
adc
add
aam
mov
es
pop
loopne
dec
mov
gs
clc
push
add
dec
sti
pusha
add
out
ljmp
xor
add
clc
aaa
cld
lahf
sti
icebp
xor
add
clc
jp
add
and
add
add
clc
leave
shlb
xor
add
adc
clc
or
clc
add
push
push
add
sar
mov
add
cli
lods
sar
sar
clc
and
adc
add
mov
add
mov
sbb
add
pop
push
lea
add
dec
cmpsb
clc
daa
clc
and
add
fnstenv
add
add
loope
sbb
add
adc
and
add
out
add
add
xor
add
cmp
addr16
arpl
add
lock
arpl
add
clc
mov
xlat
mov
and
add
add
add
pusha
add
gs
aas
ret
clc
mov
lea
clc
jl
xchg
or
dec
inc
clc
cli
inc
add
mov
add
jb
add
push
popa
add
loopne
push
add
pop
xor
add
jno
add
clc
pop
fists
mov
add
test
add
lahf
push
add
stc
lret
cmp
jle
lahf
cmp
add
cmp
add
test
pop
mov
add
ss
je
idivl
cmp
int3
cmp
sbb
xor
add
mov
xchg
or
xor
add
sub
add
fisubrl
mov
fadd
clc
std
pop
js
jno
add
clc
jbe
imulb
ss
add
pop
lahf
shr
jne
clc
xchg
mov
xchg
scas
push
add
jne
ret
clc
std
xchg
push
mov
add
loope
dec
ja
shl
clc
sub
jle
clc
aaa
popf
repnz
in
sbb
add
std
inc
clc
sahf
test
js
jecxz
xor
add
cld
ja
clc
pushf
fwait
scas
out
mov
add
insl
lea
add
cmp
push
add
add
add
sub
test
jbe
clc
pop
or
add
mov
push
add
sub
push
sahf
inc
clc
lock
flds
clc
add
add
add
fs
test
daa
clc
outsl
enter
rorb
clc
pop
or
clc
aam
in
scas
dec
inc
clc
lret
out
push
psubb
jecxz
es
dec
adc
clc
fisubs
add
clc
xor
add
lea
add
imul
add
push
push
add
inc
clc
hlt
addr16
roll
add
loopne
pop
push
pop
clc
pop
xor
add
xor
add
iret
fcomi
stos
xbegin
mov
fildl
add
cmc
cmp
mov
add
int
mov
loop
cmp
mov
add
pop
fxch
dec
mov
add
sbb
clc
mov
clc
adc
add
mov
clc
mov
add
mov
add
cld
std
and
add
sub
fdivrs
add
add
add
es
cmp
clc
add
add
stc
data16
repnz
pop
mov
fwait
adc
add
add
sahf
jno
add
sar
add
bound
add
push
add
add
mov
clc
pop
add
add
hlt
rcrl
add
xor
clc
push
add
rclb
inc
add
test
adc
add
add
clc
add
std
add
jo
add
cmp
add
adc
add
clc
stc
fisubrs
cli
cmp
add
add
and
add
imul
test
hlt
mov
add
mov
clc
push
cmp
jnp
clc
mov
ss
popf
test
aam
jns
adc
add
xor
add
out
xbegin
add
fsub
clc
inc
add
adc
add
clc
into
cmp
mov
xchg
xchg
cmp
dec
mov
add
testl
sahf
xchg
sub
daa
clc
and
add
cs
loop
repz
sub
add
clc
stos
fldenv
add
pop
out
movsl
clc
fidivl
add
icebp
adc
add
test
pop
or
pusha
add
aas
stos
xor
add
clc
and
fdivrl
add
mov
or
clc
adc
add
add
push
add
mov
cmc
xchg
and
add
add
inc
add
inc
add
jmp
shlb
add
lea
or
add
clc
pop
sahf
fst
push
add
shll
clc
ja
imul
push
jae
add
dec
sub
sub
and
xchg
imull
add
adc
add
add
pop
add
icebp
daa
clc
sub
test
fldenv
add
add
xor
add
mov
add
add
add
add
add
clc
gs
mov
ffreep
clc
adc
add
clc
jge
xchg
push
ss
mov
add
add
mov
add
and
add
jge
es
outsl
xlat
jmp
mov
clc
mov
xchg
xchg
cs
add
add
lea
das
and
add
pop
out
jb
add
sub
aam
clc
outsl
xor
add
jecxz
and
add
dec
jnp
mov
clc
mov
add
add
clc
stos
lods
xchg
mov
out
movsb
clc
dec
push
jmp
push
add
add
add
add
sbb
fwait
ret
clc
fidivl
add
push
clc
bound
add
outsl
xchg
adc
push
and
add
add
mov
add
sub
clc
insl
add
add
mov
clc
int3
push
or
add
xchg
out
jp
add
pop
mov
add
sbb
jecxz
cmc
cli
xor
add
add
out
and
test
data16
or
mov
add
test
loopne
andps
add
ss
enter
shll
hlt
cmp
clc
out
cld
ror
jmp
sub
add
sbb
xor
add
movsb
clc
xchg
cltd
loop
aas
and
adc
add
clc
xor
add
adc
inc
clc
imul
jecxz
cmp
sbb
push
pop
icebp
mov
sahf
loop
push
add
cmp
push
add
mov
int3
sbb
sbb
dec
or
clc
pushf
jne
jo
add
clc
sbb
pop
jno
add
clc
lahf
push
and
add
clc
int3
cmp
and
add
add
pusha
add
fwait
pop
cmp
scas
lret
clc
xchg
sahf
mov
es
stc
push
imull
push
cld
xlat
sbb
xchg
or
dec
mov
clc
mov
xchg
in
cmp
dec
jmp
pop
aas
mov
jecxz
sub
and
add
loop
sbb
ds
cmp
repz
xlat
sti
add
add
push
clc
mov
es
and
clc
daa
clc
push
aad
sar
clc
adc
add
aas
cwtl
aas
jg
inc
add
mov
das
dec
or
hlt
mov
and
add
clc
sar
addr16
sub
clc
jp
mov
push
add
lret
scas
addr16
ret
clc
mov
sti
pop
test
xor
add
xbegin
mov
movsb
clc
popa
add
in
dec
pop
sbb
mov
add
add
inc
clc
jge
add
repnz
outsl
or
add
and
adc
add
clc
cmp
add
adc
xor
add
adc
js
add
xchg
aam
mov
jge
cmpsl
clc
data16
mov
mov
iret
pop
xabort
clc
jae
add
add
add
inc
add
add
add
add
or
clc
decb
push
add
loop
data16
cmpsl
clc
mov
add
imull
clc
fwait
cmpsl
clc
mov
jge
stos
cmpsl
clc
add
imul
xchg
iret
xor
add
stc
addr16
push
add
ret
clc
adc
mov
xchg
xor
add
test
add
rcrl
or
pop
clc
popf
aas
cld
add
add
ja
clc
jae
add
popl
and
in
pusha
add
std
sti
jbe
repz
clc
sub
clc
mov
inc
add
dec
sub
cmp
clc
fcomps
mov
imul
clc
cmp
lahf
hlt
adc
add
add
clc
js
push
mov
cmp
aam
add
jne
clc
or
mov
in
scas
mov
xlat
cltd
in
mov
add
add
add
out
insb
adc
add
add
push
add
mov
sub
add
rcll
add
push
loopne
into
call
cwtl
push
shrl
and
repz
or
shlb
add
or
add
cmp
adc
add
add
xor
add
lahf
add
add
scas
rolb
inc
add
sbb
clc
xbegin
nop
je
outsl
movsl
clc
movsb
clc
jnp
rolb
add
lods
in
or
sub
push
das
insl
into
js
clc
cmovl
add
adc
add
pop
add
add
jns
clc
aam
xchg
pop
fcoml
out
iret
mov
xchg
adc
sbb
xor
add
cmpsl
clc
mov
clc
jbe
and
add
add
add
add
inc
add
popa
add
cld
and
shll
jg
clc
popf
out
push
cmp
add
dec
xor
add
add
cmp
mov
jo
add
mov
clc
add
add
add
xabort
sbb
sub
movsl
clc
mov
add
insl
sbb
clc
xor
add
add
pop
jp
int3
aaa
outsl
lahf
lods
xor
add
add
fimuls
leave
mov
clc
mov
add
add
cmp
sar
inc
add
add
add
xchg
pop
je
adc
add
sbb
add
js
add
xabort
jmp
and
add
lods
in
insb
loope
test
sahf
mov
clc
mov
pop
xor
stc
xabort
push
inc
add
leave
fs
pop
out
fmuls
xchg
pop
mov
clc
xchg
xabort
out
mov
adc
add
clc
pop
je
dec
cmp
add
add
inc
add
cwtl
cmp
xchg
out
enter
shrl
mov
clc
fiaddl
in
das
jbe
clc
mov
xchg
mov
jb
add
sub
fs
aaa
lahf
inc
add
sbb
clc
jl
ds
clc
push
add
sarl
clc
gs
test
shll
ss
clc
es
cmc
add
add
clc
fsubrp
add
add
add
xchg
je
ja
add
xchg
push
data16
jb
add
mov
clc
push
add
lods
aad
clc
data16
mov
pop
jbe
jbe
in
and
iret
lret
ds
sar
dec
fs
inc
add
fcmovnbe
in
jne
hlt
adc
add
pop
sbb
scas
sbb
in
xor
add
scas
mov
jp
daa
clc
mov
or
clc
and
sbb
clc
sbb
lods
int3
es
mov
push
clc
push
add
jns
fistpl
mov
add
dec
push
inc
clc
lcall
add
jmp
clc
ja
lret
or
in
aad
pusha
add
outsb
and
add
clc
inc
clc
insb
mov
inc
add
jmp
clc
rcrb
mov
lea
mov
clc
dec
push
add
out
lods
jns
fidivl
add
fwait
adc
ja
jnp
pop
mov
cmc
and
add
xchg
nop
pop
lods
sti
xlat
pop
clc
cmp
pushf
out
xor
add
add
jge
clc
pop
ficoms
xchg
push
add
or
inc
clc
mov
add
hlt
push
out
fcomi
mov
lret
jne
outsb
aam
clc
pop
cmpsl
clc
cmp
clc
call
xabort
jne
clc
insl
pop
clc
inc
add
mov
lods
push
xchg
push
push
add
mov
paddb
clc
pushf
cli
pop
mov
clc
sarl
add
movsl
clc
cmpsb
clc
mov
clc
mov
clc
fisubs
clc
jmp
add
push
add
clc
addr16
xor
out
push
outsl
jp
inc
clc
jle
scas
jbe
pop
clc
data16
push
pop
sub
clc
mov
out
cwtl
iret
push
cmp
dec
add
add
add
mul
clc
dec
call
pause
pop
dec
jg
pop
push
inc
add
adc
add
data16
xor
add
add
aaa
mov
jns
mov
add
add
cltd
pop
jp
xbegin
jns
clc
and
clc
mov
das
repnz
mov
add
xbegin
insb
movsl
clc
lret
or
clc
mov
add
dec
mov
clc
push
add
rcr
js
add
out
cmp
ja
clc
enter
add
add
loope
pop
inc
add
in
mov
clc
xor
add
add
ds
pop
clc
sub
add
xor
imul
lods
insb
and
add
dec
enter
jno
add
add
ljmp
cmp
add
push
clc
mov
add
add
xabort
pop
mov
mov
push
ret
clc
and
add
adc
add
mov
dec
in
jns
iret
xchg
and
int
clc
dec
lods
fadds
xor
add
iret
rol
clc
mov
loope
mov
add
sub
or
loope
cltd
lods
mull
outsb
clc
jg
push
add
ljmp
mov
add
lods
outsb
lcall
repz
add
jp
clc
push
mov
jp
clc
jle
clc
cmp
clc
xabort
cmp
sti
lret
add
pop
mov
add
int
inc
clc
test
pop
cmp
scas
mov
mov
add
lret
cs
or
jno
add
xor
add
clc
shrl
shll
add
mov
call
add
add
cmp
std
cmp
in
xor
jae
add
out
loope
cmpsb
clc
cld
jns
jmp
add
mov
adc
add
add
add
movsl
clc
clc
mov
clc
pop
jbe
sbb
mull
lea
add
or
jns
clc
dec
xchg
insb
cmc
push
lret
ds
mov
add
loope
or
stc
aad
adc
add
add
add
add
fadd
clc
jecxz
lcall
clc
xchg
inc
add
pop
notb
add
push
push
cltd
pusha
add
arpl
add
sbb
out
mov
mov
cs
ret
mov
jbe
gs
aad
aad
fsts
add
int
mov
cmp
test
clc
pop
push
add
xor
cmpsl
clc
fisttps
clc
cmpsb
clc
ss
add
mov
sar
mov
add
add
push
push
add
repnz
test
imul
cmp
clc
jnp
xchg
jge
and
add
add
add
sarl
std
cmp
xchg
ds
add
sbb
stos
sbb
loop
test
ja
clc
cmp
jbe
jmp
clc
aam
sbb
add
sar
add
or
clc
repnz
mov
imul
add
push
sub
jo
add
clc
in
sbb
out
xor
add
cmpsl
clc
js
add
clc
cmp
loopne
test
lahf
test
lods
in
into
in
or
add
mov
cwtl
and
add
dec
xor
clc
sar
add
xchg
sar
icebp
push
add
aaa
xchg
lret
pop
or
mov
clc
sbb
fwait
mov
cmpsl
clc
call
adc
add
popf
out
outsl
sub
clc
sahf
imul
mov
ret
lock
xchg
mov
xbegin
sub
mov
vmwrite
clc
cmpsl
clc
xor
data16
and
mov
clc
cs
fs
inc
clc
fsubrl
mov
dec
jmp
inc
add
sbb
clc
jbe
mov
arpl
add
stos
jl
clc
ret
clc
add
add
adc
add
push
push
add
clc
jb
add
add
jns
add
add
mov
dec
push
sti
scas
cmp
daa
clc
mov
and
push
add
inc
add
mov
emms
jmp
clc
cmp
xor
hlt
inc
clc
je
or
add
or
ljmp
and
test
xchg
filds
add
add
push
pop
leave
cmpsb
clc
lcall
je
add
xbegin
xor
add
add
insb
xchg
xchg
pop
jno
add
add
jge
or
je
mov
fdivr
pop
outsb
sbb
add
xor
add
sbb
mov
clc
cwtl
jg
add
jge
jb
add
add
xor
add
clc
outsl
data16
lods
movntq
out
push
clc
ljmp
add
je
clc
xchg
int
fisttpl
lock
loopne
lea
ret
clc
test
fists
clc
clc
lahf
sbb
je
dec
or
clc
jle
add
aam
clc
cmp
add
adc
add
ja
mov
pop
adc
add
daa
clc
je
lock
std
fwait
ror
vdivps
add
push
add
scas
fnsave
add
cmp
push
adc
add
add
pop
inc
add
lods
jle
lcall
add
cmp
sar
clc
mov
add
bound
add
scas
notb
clc
iret
aaa
sahf
dec
ds
ljmp
add
enter
lods
into
jl
or
js
add
sub
and
add
repnz
add
push
dec
adc
add
inc
clc
jbe
sahf
mov
or
jns
adc
add
xchg
jo
add
add
push
clc
lea
clc
ret
clc
out
xchg
xor
add
push
push
dec
and
add
icebp
mov
cmp
push
jle
scas
mov
mov
xor
pop
sbb
xchg
arpl
add
arpl
add
or
mov
xchg
cmp
clc
ss
inc
add
lahf
sbb
add
add
add
dec
inc
add
jecxz
bound
add
clc
out
sar
add
insb
mov
or
add
add
clc
rolb
add
add
clc
push
mov
clc
dec
daa
clc
dec
xchg
jae
add
add
add
ja
add
push
push
add
add
mov
xchg
fdivrp
mov
xchg
dec
inc
clc
xor
add
or
add
add
adc
aad
clc
in
mov
mov
add
sub
mov
add
add
ret
bnd
imul
cmp
clc
add
add
clc
mov
mov
add
mov
or
clc
xchg
jo
add
add
loope
in
clc
daa
clc
cmp
ss
mov
gs
mov
add
add
xchg
sub
jae
add
mov
ljmp
add
sar
clc
adc
add
cmp
mov
add
lods
add
add
adc
add
add
clc
sbb
jae
add
add
loope
sub
xor
add
dec
pop
lods
imul
add
imul
jmp
inc
add
adc
add
clc
test
aad
aaa
int
clc
cld
cltd
add
add
stc
mov
ret
clc
lods
inc
clc
xchg
fs
lock
movsb
clc
pop
mov
clc
xchg
or
add
xchg
inc
add
push
mov
add
fcom
inc
add
lret
movsl
clc
je
cmp
clc
test
xabort
jp
add
push
add
pop
mov
pop
pop
out
jae
add
arpl
add
rol
clc
jno
add
in
jae
add
out
xabort
ret
arpl
add
mov
add
out
ss
clc
jg
sbb
cmp
mov
into
fidivl
add
icebp
ljmp
ljmp
clc
pop
and
add
jge
pop
jae
add
cmp
push
cmp
popa
add
cmpsl
clc
cmp
add
lcall
addr16
xchg
pushf
int
clc
xchg
outsl
add
lret
fisubrl
clc
pop
and
add
mov
sub
add
imul
icebp
xor
add
out
xchg
pop
leave
sub
add
or
gs
pushf
sub
mov
sub
add
int3
sar
mov
add
inc
clc
insb
ret
clc
push
add
mov
clc
dec
mov
clc
dec
cld
cmp
xabort
std
inc
add
fsubp
clc
sysret
clc
imull
out
shr
roll
add
in
sub
shr
or
add
xor
add
cmpsl
clc
mov
push
repz
clc
adc
add
inc
add
mov
push
repz
add
mov
add
add
clc
xor
add
movsl
clc
fildll
add
mov
adc
add
clc
xchg
test
fxtract
xchg
mov
add
lcall
inc
clc
or
add
sar
out
mov
mov
mov
add
popf
pop
sahf
pop
push
cmp
add
hlt
adc
add
mov
clc
icebp
sti
mov
ljmp
clc
addr16
jl
test
clc
xor
add
fbld
add
pop
arpl
add
add
xchg
add
add
mov
hlt
inc
add
sub
mov
mov
jmp
jg
add
mov
add
es
addr16
enter
ss
je
insb
sbb
clc
in
push
sbb
adc
add
scas
arpl
add
add
loop
dec
stos
sub
clc
jecxz
push
clc
ss
leave
fldl
lock
add
int3
pop
push
jle
xchg
adc
add
add
lahf
inc
clc
xor
add
push
xor
add
and
add
add
and
add
mov
or
imul
clc
ret
inc
add
fsubrl
dec
pop
outsb
bnd
add
xchg
xchg
mov
inc
clc
push
add
add
outsl
lcall
add
push
mov
loopne
pushl
add
jo
add
sbb
addr16
cmc
cmp
clc
mov
mov
jg
hlt
jecxz
jb
add
movsl
clc
out
xchg
xchg
cmp
clc
lods
clc
pop
dec
dec
add
add
clc
push
pop
mov
aaa
sbb
clc
jne
push
clc
fidivrs
adc
add
or
xor
mov
fisubs
fnstcw
shlb
add
adc
add
mov
clc
stos
into
jne
clc
imul
fs
pop
insl
pop
imul
pop
mov
clc
or
mov
add
pop
in
add
add
mov
add
shl
clc
scas
xor
add
daa
clc
icebp
push
mov
clc
scas
add
sub
inc
clc
dec
inc
clc
xchg
mov
push
clc
je
clc
imull
pop
popa
add
jl
add
lret
clc
lahf
push
clc
leave
pop
mov
add
push
pop
insl
push
add
std
es
cmp
clc
xchg
mov
clc
enter
add
add
clc
mov
xchg
je
clc
cmpsb
clc
insl
push
add
roll
imul
and
ds
imul
js
and
add
clc
cltd
hlt
mov
add
pushf
std
repnz
sar
ja
pop
mov
dec
fisubrl
repnz
add
clc
test
xor
add
addr16
in
adc
adc
test
mov
clc
movsb
clc
mov
adc
add
test
lcall
test
dec
aam
mov
clc
add
add
mov
pop
sub
clc
out
dec
inc
add
mov
insl
fisttpll
add
mov
clc
cmpsb
clc
aam
mov
cmp
dec
or
add
jbe
clc
rep
mov
clc
in
movsl
clc
fsubrl
clc
hlt
and
add
clc
lea
clc
inc
clc
xor
add
maskmovq
notl
add
add
clc
mov
jns
loop
or
add
jb
add
add
add
push
imul
add
pop
scas
lret
clc
clc
loopne
jno
add
cmp
clc
jns
clc
xchg
add
add
add
out
cmp
inc
add
push
cli
ss
clc
scas
mov
lcall
clc
mov
icebp
pop
jo
add
ja
sub
cmpsb
clc
cmp
clc
ja
ficoml
add
add
hlt
js
cmp
clc
inc
add
ret
cmp
enter
scas
adc
add
es
jl
test
out
jne
add
push
add
inc
add
loope
out
test
jmp
clc
push
add
int
add
pop
clc
push
add
hlt
mov
push
push
add
add
add
cmpsl
clc
xor
add
mov
add
jmp
mov
test
or
clc
repz
pushf
add
add
lahf
push
clc
lret
es
adc
clc
call
mov
in
jbe
dec
dec
ja
pop
lret
ret
clc
add
add
movsb
clc
adc
add
push
add
xor
add
iret
xor
add
mov
clc
pop
clc
cld
cmpsl
clc
inc
clc
pop
xor
add
mov
sub
clc
xchg
jg
and
add
add
add
xabort
add
ret
in
ja
call
adc
add
cmp
add
cwtl
and
add
cmpsl
clc
mov
fisubs
clc
arpl
add
ds
clc
mov
jmp
fdivrs
and
rcll
lahf
cmp
clc
cmp
lcall
int
jb
add
mov
clc
inc
clc
xchg
push
into
mov
clc
pop
js
mov
xchg
push
mov
sbb
cmc
jne
xor
add
clc
bound
add
clc
js
cmp
add
lock
test
pusha
add
xor
add
cld
dec
test
clc
mov
sub
in
cmp
dec
xbegin
test
jae
add
jmp
sub
clc
or
add
xchg
dec
adc
add
jmp
add
jno
add
clc
cmp
movsl
clc
rol
clc
push
add
fs
dec
dec
xchg
pop
sar
cld
adc
add
clc
adc
add
clc
aaa
push
clc
pop
jo
add
clc
fchs
clc
mov
clc
xor
add
add
add
adc
add
clc
popa
add
jo
add
clc
vcmpfalseps
mov
push
add
insb
dec
add
add
test
clc
fs
or
ret
clc
pop
clc
leave
insl
sbb
clc
bound
add
clc
or
pop
incl
lea
add
popa
add
in
icebp
sti
xchg
lock
add
inc
add
jl
add
xor
add
add
mov
lock
jbe
sti
push
adc
add
xchg
dec
sbb
and
mov
sub
clc
pop
sarb
mov
add
inc
clc
dec
cs
lea
dec
push
das
or
clc
sub
ficompl
add
add
clc
lret
mov
clc
jbe
add
sbb
iret
out
jbe
ljmp
add
aaa
stos
loopne
pop
or
cmp
clc
and
add
clc
clc
pop
mov
and
add
xor
add
push
icebp
inc
add
adc
add
add
dec
pushf
jo
add
add
cltd
mov
add
fmul
jg
clc
xor
add
mov
mov
inc
clc
or
sub
clc
sub
mov
add
jnp
inc
clc
inc
add
sub
fs
xlat
lock
clc
dec
and
add
clc
aam
xchg
adc
mov
add
push
clc
sub
mov
push
clc
mov
xabort
push
add
jp
cwtl
lcall
dec
jb
add
mov
mov
adc
add
xbegin
clc
stc
push
inc
clc
testl
clc
or
clc
out
dec
stc
sbb
scas
test
test
scas
xchg
sub
vucomiss
xchg
xchg
adc
add
mov
loopne
scas
pop
clc
je
loope
cmp
xabort
enter
cltd
push
add
cltd
in
xchg
lods
aad
add
cmpsb
clc
das
out
outsb
dec
adc
add
add
cmp
and
fisubrl
clc
jo
add
mov
mov
clc
pop
jnp
adc
add
add
sbb
dec
push
addr16
push
add
out
mov
clc
lea
xchg
mov
add
fs
add
or
loop
ja
rol
clc
test
ret
clc
enter
sub
sub
scas
mov
clc
fisubs
add
cmp
jae
add
std
cltd
stc
lods
xchg
add
add
add
packsswb
add
vmread
negb
xor
add
addr16
sub
daa
clc
inc
clc
push
fs
js
clc
pusha
add
xor
add
clc
dec
int
shlb
add
lret
hlt
push
shr
adc
add
rcrb
clc
pop
fidivl
clc
int
cmp
sub
sub
mov
lods
dec
aas
incl
add
inc
add
add
add
lcall
mov
cmp
clc
mov
add
xchg
jge
add
daa
clc
lods
push
add
outsl
mov
fs
or
dec
jg
add
filds
add
aas
jae
add
add
add
adc
add
ret
clc
sar
jg
clc
test
cmpsb
clc
cltd
add
add
mov
xabort
mov
mov
add
sarb
add
add
test
fisttpl
and
add
xchg
push
clc
pushf
mov
inc
clc
jecxz
mov
jae
add
add
clc
in
popa
add
int
rdmsr
add
stc
sub
clc
js
stos
int3
push
clc
in
and
add
mov
add
shlb
clc
testb
pop
imul
mov
add
mov
sbb
jne
clc
pop
mov
cmp
add
push
ret
clc
daa
clc
pop
sbb
clc
lcall
add
pusha
add
sbb
lods
xchg
push
lahf
idivb
rorl
sub
lcall
add
cmp
clc
in
lcall
adc
add
data16
mov
clc
xor
add
shl
clc
push
in
sbb
es
stos
mov
clc
mov
aam
dec
lea
add
push
add
test
clc
mov
add
push
clc
stc
movsl
clc
and
bsf
clc
imul
or
clc
aad
fwait
int3
aad
clc
dec
mov
cmp
cmp
clc
sub
xchg
fucomp
push
add
xor
mov
xor
add
mov
add
sbb
int3
mov
cli
aas
xchg
in
cmp
clc
jno
add
add
clc
bound
add
cli
dec
push
xchg
ffreep
clc
pop
lock
mov
mov
sahf
sbb
add
pusha
add
dec
loop
out
daa
clc
adc
add
leave
add
add
test
enter
add
add
cmp
dec
jle
add
repz
add
add
add
add
sub
clc
mov
add
js
clc
inc
clc
cmc
add
sbb
jbe
test
cld
mov
dec
adc
add
das
insb
arpl
add
dec
cmp
bound
add
pop
dec
inc
clc
int
mov
lods
rcr
data16
add
call
add
cli
mov
aas
xchg
fs
and
inc
clc
daa
clc
shll
add
xor
add
adc
add
xchg
push
cmp
clc
xchg
cli
das
dec
xlat
dec
fsubs
mov
mov
test
add
fs
clc
pushf
pushf
negl
mov
xchg
mov
xlat
stos
or
xchg
stos
data16
add
loop
adc
xchg
idiv
or
out
sti
mov
clc
xchg
test
call
clc
push
int
xlat
dec
stos
jnp
add
cmp
js
clc
jnp
in
fcompl
xchg
imull
add
cmpsl
clc
push
inc
clc
dec
inc
add
sar
cmp
add
mov
add
imul
clc
sub
fists
add
cmp
clc
xchg
sub
add
jo
add
jmp
or
mov
add
push
mov
clc
mov
cmpsb
clc
data16
pop
mov
mov
clc
loope
add
add
add
int
int
bound
add
or
add
add
add
add
fnstcw
ds
jno
add
jmp
cmp
push
add
xbegin
mov
clc
cmp
sar
add
jge
nop
push
clc
bound
add
add
xor
add
ret
mov
cmp
mov
add
sub
call
cmp
mov
mov
clc
jns
mov
sub
sbb
clc
sub
inc
clc
push
ret
or
add
pop
push
lret
clc
mov
lea
clc
cmp
mov
clc
lods
pop
sbb
add
pop
rcrb
clc
test
int3
cld
xor
add
push
add
cmp
clc
xchg
cwtl
mov
fisttpll
add
push
xchg
test
or
xchg
popa
add
roll
add
add
test
bound
add
sbb
pop
gs
mov
bound
add
pop
mov
cmp
xor
add
in
push
nop
mov
add
clc
stos
or
popf
inc
clc
je
cli
cmp
or
leave
mov
mov
cmp
cmp
lea
pushl
clc
call
lock
add
add
lahf
fcoms
add
add
inc
add
ret
pop
push
jbe
mov
add
xor
add
add
sub
jle
mov
add
add
push
clc
push
mov
add
gs
popa
add
cmp
mov
jb
add
cmp
clc
pop
mov
clc
push
ss
add
mov
xor
add
mov
sub
clc
cmp
clc
pop
lods
out
sahf
pop
repz
add
add
mov
clc
stc
add
add
js
jle
push
lods
xchg
adc
add
cltd
pop
sti
pusha
add
and
add
jns
add
xor
mov
js
pop
sub
mov
add
test
pusha
add
jg
add
in
add
clc
mov
mov
clc
jl
dec
sbb
mov
clc
xor
add
ss
ror
mov
add
cmp
sbb
bnd
add
stos
cmp
add
mov
clc
mov
clc
mov
clc
mov
clc
or
add
add
and
add
jle
or
xor
add
add
pop
bound
add
mov
clc
pop
inc
clc
out
mov
jae
add
add
aas
cmp
clc
push
add
repz
add
lret
lea
add
imul
sub
jae
add
aam
leave
repz
clc
mov
push
clc
stos
repz
mov
rol
clc
fucomi
or
mov
push
add
iret
xor
add
cmpsb
clc
and
add
sbb
clc
cmp
add
xabort
adc
add
add
push
jo
add
movsb
clc
sub
jae
add
clc
iret
bound
add
bound
add
add
loope
cmpsb
clc
push
clc
sub
clc
scas
data16
rcr
shlb
insb
jp
out
xchg
dec
cmp
into
dec
xchg
fwait
xchg
mov
pop
mov
clc
inc
clc
gs
adc
add
push
clc
dec
xor
add
add
dec
lret
cli
jle
or
adc
add
xor
repnz
mov
jns
mov
inc
clc
nop
pop
test
push
clc
movsb
clc
out
in
inc
clc
jp
add
in
stos
das
sbb
loopne
sbb
add
inc
add
mov
ffree
clc
push
shll
jbe
add
xor
add
gs
and
add
ret
adc
add
pop
xor
out
mov
jbe
add
mov
jp
sub
fcoml
add
int
pushf
mov
add
bound
add
pop
dec
in
inc
add
mov
mov
mov
cmp
clc
cmp
shlb
ss
clc
cmp
clc
sub
add
add
addr16
fdivs
add
daa
clc
and
add
push
clc
adc
add
add
insb
inc
add
mov
je
clc
loopne
insb
aas
fadd
clc
push
mov
loop
mov
add
add
xor
add
and
aam
add
add
add
jmp
sbb
pop
cmp
inc
clc
popa
add
enter
add
int3
loopne
jb
add
push
cmp
dec
lods
aas
jmp
clc
mov
add
clc
xor
add
fsubl
add
out
push
mov
xor
test
adc
mov
clc
iret
push
icebp
in
filds
add
pop
pop
clc
mov
imul
loopne
inc
clc
xchg
jmp
clc
aas
jnp
clc
cmpsb
clc
cs
add
clc
mov
add
add
adc
ljmp
add
loopne
add
sbb
dec
cmp
clc
fs
pop
ds
mov
add
add
sub
add
mov
adc
add
clc
cmp
dec
push
fisubl
clc
fisubrs
outsb
dec
in
faddl
add
data16
add
xchg
mov
into
stos
cmpsl
clc
or
movsb
clc
dec
pop
pop
cmp
cmp
test
mov
cmc
push
lahf
push
cmp
pop
xchg
ret
clc
call
inc
add
xchg
lcall
clc
or
add
inc
clc
movsl
clc
pop
jo
add
add
sub
sbb
aam
add
int
add
xchg
push
movsl
clc
inc
add
sub
stos
push
add
notb
rcrl
data16
mov
jb
add
add
in
mov
mov
clc
incb
shl
sub
xlat
pop
rep
sbb
add
cmp
pop
js
outsb
xor
add
hlt
xchg
test
mov
xchg
cmp
clc
lret
mov
xchg
sub
push
add
mov
enter
dec
out
dec
stc
push
pushf
mov
clc
lcall
mov
add
sbb
sahf
or
add
fimull
xchg
fdivs
xor
add
xlat
push
inc
clc
push
add
icebp
xbegin
cmp
out
add
add
sar
pop
std
xor
add
add
mov
mov
add
or
clc
cwtl
lods
sbb
push
sbb
je
jle
add
xchg
ja
add
test
cld
aam
add
xor
add
clc
cmp
clc
inc
clc
loope
sub
or
clc
push
add
cmp
test
add
add
aad
add
cmp
mov
std
xor
add
jb
add
push
sar
add
jmp
cmpsb
clc
sar
sti
adc
cmpsb
clc
mov
aad
movsl
clc
imul
shll
add
sbb
dec
aad
mov
es
ljmp
repz
clc
sub
daa
clc
push
or
add
imul
xchg
hlt
das
xchg
xor
add
clc
pop
imul
clc
lods
gs
lods
imul
add
cmp
add
loop
scas
aam
outsb
cvtpi2ps
add
and
add
lret
add
add
add
cmp
clc
dec
imul
push
push
and
add
sar
xabort
jae
add
fs
push
add
xchg
cmp
add
jl
loop
dec
add
add
add
mov
clc
pusha
add
pop
clc
mov
add
add
add
test
xor
add
mov
add
cmp
add
clc
inc
clc
loop
testl
add
repz
push
add
fucomp
jo
add
jg
mov
mov
dec
sub
push
sbb
add
adc
jb
add
push
add
add
in
rcrb
fwait
jl
clc
dec
mov
mulb
inc
clc
cmp
icebp
repz
and
add
clc
fdivl
clc
or
add
add
push
xor
add
mov
fcomip
cmpsb
clc
pop
sti
dec
dec
mov
jl
fsubrl
adc
add
test
push
clc
dec
adc
add
add
ljmp
add
add
leave
aad
leave
mov
mov
add
mov
fwait
clc
es
push
imul
es
clc
enter
push
clc
and
insl
jecxz
mov
outsl
push
mov
xor
enter
add
jns
add
sbb
data16
clc
test
lret
mov
scas
in
xchg
jmp
aaa
pop
xchg
aaa
rclb
add
fs
cltd
stc
ficomps
jg
clc
add
add
iret
jmp
push
fdivrl
add
movsl
clc
outsb
pop
ss
lock
dec
imulb
clc
jg
clc
cmp
add
clc
xor
add
xor
add
mov
fs
cmp
cld
xchg
mov
add
iret
adc
add
sub
and
add
clc
imul
loope
mov
bound
add
pop
xchg
lret
cmpsl
clc
outsl
mov
clc
cmp
xbegin
add
fadds
clc
mov
jb
add
lret
dec
sbb
leave
lods
scas
adc
add
xchg
test
nop
mov
push
int3
pop
or
imul
out
jne
clc
xor
add
clc
aas
clc
call
iret
es
xor
add
clc
cmp
cmp
mov
loop
imul
add
cmp
clc
aam
clc
cmp
and
mov
add
outsl
mov
lods
outsb
repz
clc
dec
inc
add
xchg
xchg
dec
and
add
cmc
daa
clc
mov
add
clc
mov
movsb
clc
dec
mov
add
add
rcrl
add
mov
cmpsl
clc
pusha
add
and
add
add
xchg
pop
pop
and
cmp
adc
add
stos
push
je
sbb
pusha
add
int3
cmp
ss
roll
jmp
clc
cmp
popa
add
mov
in
outsb
data16
cmp
add
je
data16
push
pop
adc
add
pop
push
movsb
clc
push
add
add
add
mov
test
add
lahf
in
vrsqrtps
add
sbb
clc
pusha
add
test
in
movsl
clc
pop
vmulps
clc
lods
data16
cmp
clc
sbb
add
clc
pop
add
add
fiaddl
jp
xor
add
add
add
ret
lahf
fdivrs
clc
test
lods
clc
test
lods
call
mov
add
dec
dec
and
add
jbe
add
loopne
aad
cmc
or
pop
imul
add
lea
adc
add
clc
xchg
mov
jge
add
add
xbegin
int3
inc
clc
cmp
add
mov
fidivrl
imul
hlt
stos
sar
pop
mov
mov
mov
clc
mov
int3
push
add
mov
inc
add
cmp
pop
mov
ret
clc
jl
adc
add
dec
movsb
clc
clc
and
add
clc
jg
ljmp
dec
fs
pop
or
push
rcrb
clc
and
aas
jecxz
jbe
pop
fdivrs
add
hlt
inc
add
dec
dec
fwait
mov
scas
xbegin
add
sbb
hlt
sti
mov
jle
xbegin
int3
loope
jne
xor
add
clc
aas
fcos
mov
cmc
leave
sbb
add
lcall
clc
stc
cmpsb
clc
fnstcw
add
mov
adc
add
lcall
mov
mov
or
stos
push
sub
cmp
add
push
add
iret
ret
xor
add
mov
pop
xchg
in
sub
or
cmp
add
xor
add
test
imul
clc
stos
js
or
add
cmp
das
mov
dec
or
arpl
add
add
nop
inc
clc
or
clc
xbegin
out
test
aas
add
add
or
in
cmp
and
add
clc
ror
out
jne
aam
add
mov
mov
dec
adc
xchg
cmpsb
clc
in
mov
clc
cmp
xchg
jmp
add
add
mov
lea
add
mov
je
pop
pop
jns
fisubrs
stc
pop
cmp
xchg
mov
cmp
clc
out
jae
add
pop
clc
lock
xlat
mov
xor
add
js
clc
jb
add
in
je
fstl
cmp
nop
push
inc
add
arpl
add
clc
arpl
add
add
add
inc
clc
sub
test
inc
clc
hlt
lock
clc
mov
dec
loop
call
clc
shll
add
add
clc
mov
add
push
clc
movsb
clc
lcall
add
add
add
cmp
mov
sub
clc
adc
push
cmp
add
mull
add
add
hlt
ret
sub
adc
add
divb
loopne
or
clc
mov
add
add
clc
inc
add
imul
scas
int3
xchg
inc
add
pop
sub
add
lock
sub
add
xlat
jbe
add
cmpsl
clc
out
adc
add
mov
ljmp
clc
cmp
jns
cld
mov
xchg
stos
or
add
sbb
inc
clc
gs
xabort
add
mov
sar
sar
sbb
jns
clc
sti
add
add
flds
test
cmp
dec
in
xor
add
mov
add
enter
clc
dec
enter
clc
aam
cld
lsl
add
mov
int3
das
lock
add
lret
push
cwtl
xor
daa
clc
lahf
push
push
iret
mov
sub
clc
jg
cs
add
scas
push
clc
loopne
xor
add
add
sar
mov
lret
das
popf
lahf
push
add
mov
inc
add
cmp
clc
scas
fbld
xor
das
jmp
xchg
inc
clc
sbb
add
add
add
xchg
scas
push
push
leave
cld
ficomps
push
add
nop
jp
bnd
mov
lock
aaa
pusha
add
cmp
xbegin
clc
xchg
dec
inc
clc
push
ss
cmp
insb
mov
cmp
jne
push
push
faddl
add
clc
jp
clc
sar
add
sub
add
mov
add
add
clc
xor
add
clc
enter
add
aad
jnp
add
mov
and
add
add
fcmovne
out
es
or
dec
aam
sub
clc
jbe
lods
cmp
add
sub
pop
addr16
xor
fnstenv
clc
mov
cmc
out
sub
cmp
add
mul
clc
mov
add
add
xbegin
sar
lret
add
add
cltd
fistpl
clc
out
leave
test
add
out
in
mov
clc
in
dec
sub
pop
xchg
mov
or
pop
leave
xchg
xbegin
mov
xor
add
push
add
lcall
daa
clc
movsl
clc
pusha
add
jecxz
cmp
mov
cmc
dec
sar
in
pop
jbe
or
add
out
xchg
cmp
clc
pop
ljmp
in
scas
cmpsb
clc
inc
clc
cli
push
add
jp
clc
imul
clc
inc
clc
and
add
mov
add
sbb
fnsave
add
adc
add
inc
add
adc
add
add
push
push
outsl
mov
clc
mov
clc
lea
clc
jno
add
add
cmp
adc
sub
mov
cmc
outsl
and
push
and
add
clc
js
mov
push
add
push
out
leave
incl
clc
cmpsb
clc
push
bound
add
add
add
ljmp
negl
cmc
mov
clc
popf
inc
clc
mov
pusha
add
enter
add
clc
std
push
mov
jmp
cmp
add
add
inc
clc
pop
and
add
push
mov
arpl
add
lret
add
sbb
sub
push
add
cmp
jge
clc
jp
and
add
adc
xchg
xor
add
mov
mov
fidivl
add
dec
sbb
jl
clc
cmp
outsl
cs
and
jno
add
clc
gs
cld
aam
add
pop
push
add
and
add
and
add
fwait
mov
xbegin
sub
xchg
push
cmp
lea
dec
mov
and
add
clc
daa
clc
cmpsl
clc
test
repnz
xor
add
in
mov
jecxz
pop
clc
fldenv
in
test
mov
push
clc
ja
hlt
or
add
push
add
arpl
add
add
aas
xchg
sar
loop
lods
fbstp
jo
add
clc
ret
clc
ja
xchg
xabort
pop
jmp
outsb
xchg
lods
xchg
mov
add
int
lret
jbe
insl
addr16
mov
mov
clc
aam
sub
js
pop
dec
popf
xlat
scas
xchg
out
jl
add
lcall
add
jne
add
add
adc
sar
sar
xor
ljmp
clc
cmp
shll
clc
sbb
into
pop
repnz
add
add
push
inc
add
add
push
cmp
clc
push
clc
mov
nop
jbe
clc
add
add
xor
clc
cmp
clc
setns
dec
adc
add
decl
repz
sbb
push
add
lods
add
roll
add
in
jmp
push
add
or
lcall
ds
sbb
fidivrs
inc
add
xchg
push
add
inc
add
int3
pop
mov
repnz
shlb
add
jp
clc
inc
add
out
jnp
add
cmp
xchg
frstor
cmc
out
mov
add
jbe
fidivs
dec
lea
push
clc
outsl
cmp
xor
add
add
clc
inc
add
arpl
add
add
lock
stos
mov
add
lret
inc
add
jne
add
add
add
clc
addr16
aaa
cmc
or
clc
pop
adc
add
sub
add
xchg
xlat
cltd
pushf
hlt
push
sbb
fisubl
add
add
push
jg
clc
mov
add
cs
inc
clc
and
add
add
clc
or
add
cmp
add
loope
pop
sti
lods
push
int3
mov
mov
popa
add
imul
cmp
clc
dec
sti
fists
lret
xor
add
clc
adc
add
cli
sar
push
aaa
roll
clc
incb
add
jmp
cmpsb
clc
mov
add
mov
add
mov
pop
cmp
push
lcall
xbegin
mov
clc
mov
ficoms
add
movsb
clc
cmp
adc
je
ds
clc
cmp
add
push
add
add
out
lret
cmp
add
push
daa
clc
popf
out
mov
pop
scas
xchg
clc
jle
add
aad
add
push
add
cmp
addr16
push
add
stos
fildl
add
pop
fistpl
push
je
je
clc
mov
add
mov
test
adc
add
mov
add
jnp
cmp
xor
add
xchg
xchg
pop
adc
add
clc
rorl
xchg
ljmp
inc
clc
push
xabort
clc
movsl
clc
xchg
or
push
cli
mov
ret
clc
or
outsb
call
clc
clc
adc
add
jg
jmp
adc
add
clc
cld
sub
inc
add
dec
jle
add
cmp
jmp
out
cs
add
jnp
fisttps
or
clc
ret
cwtl
xchg
and
add
add
xchg
mov
sbb
push
add
mov
fs
mov
adc
add
rcll
int
in
out
cmp
clc
arpl
add
mov
mov
push
add
hlt
inc
clc
dec
push
add
mov
add
push
cmp
mov
pop
xor
add
scas
inc
add
test
pop
or
and
add
and
add
jns
clc
jb
add
add
and
pop
fsubrl
clc
aam
pop
movsb
clc
arpl
add
add
jae
add
mov
test
xchg
fwait
pop
lea
cmpsb
clc
sub
scas
adc
add
bts
or
mov
add
call
leave
xchg
mov
add
loope
or
mov
rcrl
cmp
xor
add
xor
add
adc
pop
movsb
clc
ljmp
int3
mov
or
daa
clc
fbstp
add
dec
cmpsb
clc
dec
pop
xor
add
or
mov
lahf
mov
gs
mov
xchg
push
add
sub
dec
ss
lods
cmp
mov
pop
fisubs
add
cmp
repz
xchg
push
dec
and
add
in
mov
shll
add
xchg
push
or
clc
and
add
add
sarb
jnp
add
sbb
inc
clc
xor
add
mov
add
jle
mov
addr16
inc
add
mov
stos
popf
cmc
stc
cli
xlat
test
pop
push
sub
bound
add
add
cld
ret
clc
je
cld
mov
add
clc
sti
loopne
add
jno
add
ret
clc
out
xor
add
add
xchg
outsb
insl
clc
cmp
add
sar
iret
adc
call
or
add
and
add
xor
add
add
cmpsl
clc
ret
es
pop
sub
cmp
add
jp
and
pop
insl
cmp
aam
clc
push
add
jmp
add
push
add
push
add
xchg
add
add
add
sbb
inc
add
push
add
js
arpl
add
clc
call
into
outsb
xabort
mov
movsl
clc
xchg
daa
clc
mov
inc
add
add
add
mov
and
add
sbb
fwait
lret
push
rep
clc
test
pop
inc
clc
sbb
mov
out
shl
clc
lret
push
inc
add
cmp
jp
sub
add
ss
add
add
outsl
mov
je
inc
add
jnp
mov
inc
clc
out
inc
clc
mov
clc
mov
mov
push
add
mov
clc
stc
sahf
cmp
pop
fldt
sub
add
jb
add
add
jmp
ss
clc
jne
ds
imul
add
insl
pushf
fldcw
and
add
dec
and
xchg
das
mov
add
clc
pop
mov
je
clc
push
add
nop
shll
clc
cltd
nop
imulb
mov
clc
aaa
xchg
sbb
mov
cwtl
js
push
add
xor
clc
and
add
sbb
xchg
test
mov
cmp
int3
rcrl
lret
xor
or
inc
clc
xor
pop
ret
pop
dec
cmp
test
push
push
cmp
clc
mov
sub
mov
clc
xchg
or
jmp
clc
out
sub
xor
add
xabort
loope
in
shlb
xchg
loopne
pop
cli
daa
clc
stc
xbegin
mov
pop
pop
jg
add
jnp
or
sarb
int
lret
inc
add
xor
add
ljmp
pop
rcrb
clc
dec
loop
repz
adc
add
bound
add
add
xchg
into
xor
mov
fbld
or
stos
and
int3
mov
inc
clc
mov
mov
cwtl
sbb
and
jb
add
ja
outsb
mov
inc
clc
nop
mov
jno
add
or
mov
pop
ljmp
clc
arpl
add
cmp
push
dec
cli
inc
add
rorl
push
add
cmpxchg
popa
add
or
mov
lcall
add
add
popf
lcall
xchg
cs
clc
jl
rcll
add
add
push
push
and
lahf
ljmp
xchg
in
lret
lea
add
or
scas
mov
add
xchg
xor
add
test
cmp
mov
add
movsb
clc
inc
add
jl
clc
clc
sar
mov
clc
ljmp
add
popa
add
out
inc
clc
inc
add
xor
add
add
cmpsl
clc
add
add
mov
cli
and
add
lahf
test
mov
ret
clc
and
add
clc
pop
mov
add
add
add
mov
add
stos
sbb
add
loope
jmp
add
pop
call
mov
daa
clc
aad
clc
mov
mov
clc
and
add
clc
sub
mov
icebp
pop
sbb
mov
das
add
add
add
out
xor
clc
shll
xor
add
add
sbb
sar
mov
sub
dec
inc
clc
rolb
mov
ret
clc
adc
add
add
clc
add
add
jmp
cmp
inc
clc
mov
mov
mov
test
test
xor
add
mov
mov
push
sar
sarb
popa
add
xor
fnstcw
lock
add
add
inc
clc
xlat
jno
add
outsb
and
add
clc
mov
xor
add
jo
add
fwait
dec
idivb
clc
shl
clc
rorb
fdivl
sbb
addr16
int
sbb
fwait
aam
clc
fs
mov
cmpsb
clc
xchg
jno
add
clc
sbb
add
add
clc
outsb
mov
mov
add
add
mov
sar
stc
leave
pop
arpl
add
clc
or
push
xabort
clc
mov
clc
sbb
jno
add
inc
clc
or
sub
clc
jae
add
sub
add
jo
add
clc
and
add
jg
aas
push
vmwrite
lret
daa
clc
inc
clc
inc
clc
pop
xchg
int
in
pushf
rolb
add
and
add
call
stos
std
arpl
add
add
popa
add
js
lret
sti
push
add
push
add
add
ret
pop
out
icebp
xbegin
rclb
sbb
add
clc
gs
xor
add
dec
pop
fwait
adc
aas
pop
aaa
mov
mov
cmpsl
clc
pusha
add
lods
ss
add
clc
daa
clc
xchg
inc
clc
sub
fmull
sub
movsb
clc
out
jmp
add
jl
fdivrs
add
cmpsb
clc
push
hlt
sar
clc
mov
and
add
mov
clc
cmp
xchg
mov
bound
add
ds
jae
add
add
notb
mov
inc
add
and
add
mov
add
mov
add
sti
jge
clc
popf
mov
out
movsb
clc
stos
pop
dec
into
jecxz
jno
add
add
jle
into
jnp
add
xabort
das
adc
add
add
out
movsb
clc
lock
dec
xchg
cmc
mov
clc
add
add
cmp
daa
clc
mov
daa
clc
mov
sbb
cmp
gs
sub
mov
sub
add
sub
data16
xor
add
add
test
dec
loopne
push
push
add
pushf
imul
clc
cmp
in
sbb
clc
mov
clc
inc
add
mov
xchg
inc
add
and
cmp
clc
popf
dec
mov
dec
xchg
xchg
inc
add
insb
int
sar
loop
mov
add
insb
fiaddl
add
dec
inc
clc
mov
loop
xabort
vdivps
jmp
clc
xor
test
out
inc
add
or
jne
int
xor
add
daa
clc
inc
clc
clc
sub
add
clc
scas
mov
je
aas
clc
jns
clc
sbb
cli
cwtl
gs
or
ljmp
outsl
imul
add
cltd
iret
inc
clc
aam
jae
add
cmp
add
clc
test
fs
xabort
add
cmp
or
ja
or
sbb
add
cmpsb
clc
pop
call
add
shrb
push
arpl
add
lret
mov
clc
std
adc
push
add
in
into
in
cmp
add
inc
clc
sub
pop
js
mov
push
add
pop
adc
cmp
add
push
push
push
dec
add
add
clc
sar
int
add
out
pop
adc
add
dec
add
xchg
dec
test
xchg
movsb
clc
xchg
sbb
fidivrl
fsubs
add
out
adc
clc
push
in
setae
inc
add
sar
add
adc
clc
outsb
mov
xor
add
mov
ret
clc
pop
xor
inc
add
ficoml
add
inc
clc
or
mov
add
mov
xchg
bound
add
fs
mov
pop
es
outsb
pusha
add
js,pn
rcll
fcomi
inc
add
bound
add
clc
loop
and
add
icebp
pop
xchg
ret
clc
pop
int
clc
and
roll
add
sub
add
xchg
std
and
add
clc
cmpsb
clc
loope
ret
xlat
out
cltd
cmp
enter
clc
inc
clc
sbb
clc
dec
mov
in
sbb
add
pop
pop
test
clc
int
test
cmp
aaa
ret
clc
lock
push
add
mov
arpl
add
jne
jae
add
adc
add
ffreep
clc
jge
lods
mov
lock
clc
addr16
cmpsb
clc
sub
clc
sar
in
pop
ja
adc
add
cmp
clc
dec
jae
add
mov
jmp
add
ja
clc
stos
jne
sbb
fs
jmp
rep
sbb
mov
sub
shll
jno
add
clc
sub
mov
dec
stos
xor
mov
xchg
outsb
arpl
add
int
clc
pop
scas
into
mov
lods
cmp
add
out
mov
add
bound
add
stc
sar
popf
leave
jno
add
lret
lock
clc
cmp
clc
mov
push
mulb
add
add
push
add
cmp
clc
fisttpll
pop
pusha
add
jle
jo
add
clc
jg
pop
jecxz
or
clc
iret
mov
cmp
imul
cmp
add
ja
fs
push
add
out
ds
out
into
sub
mov
mov
call
xor
add
or
dec
inc
add
ret
clc
adc
add
add
roll
add
add
sub
add
xchg
inc
add
movsb
clc
sbb
clc
es
inc
add
cmp
movsl
clc
bound
add
add
mov
scas
mov
add
inc
add
dec
xor
cmp
add
push
mov
loope
push
outsb
sbb
lods
jecxz
cld
test
shll
add
clc
dec
jecxz
sti
xchg
fmulp
out
hlt
mov
add
lahf
pop
repz
clc
inc
clc
mov
mov
jl
aad
clc
cmpsb
clc
idivb
adc
add
add
clc
out
scas
sub
cmp
into
mov
aam
clc
push
push
cmp
das
jne,pt
sbb
clc
lock
add
jmp
add
pop
outsl
inc
clc
dec
jge
clc
inc
clc
jmp
fcmovne
stos
lcall
and
add
add
sti
sub
clc
mov
clc
xor
add
addr16
adc
add
iret
inc
add
jle
clc
sub
add
gs
add
pop
mov
dec
xchg
ja,pn
clc
jp
aam
clc
xchg
fwait
and
add
push
add
out
jb
add
clc
sti
mov
clc
outsb
leave
in
sar
shr
mov
je
mov
mov
clc
jp
sbb
add
pop
xabort
lock
xor
add
inc
clc
cs
movsb
clc
pop
int
add
adc
add
add
clc
add
or
clc
fadd
clc
or
clc
cmp
cmp
mov
jmp
mov
xor
add
add
sahf
lret
inc
add
jnp
xor
add
add
fptan
stos
push
test
das
gs
nop
out
mov
sub
clc
rorl
cmp
add
pusha
add
ret
xbegin
mov
push
jl
into
sti
arpl
add
das
shll
icebp
ds
xor
add
cmc
sub
cmp
ficoms
inc
clc
mov
add
cmp
jl
pop
je
clc
fs
xchg
ss
push
sub
sub
sarl
mov
jge
add
push
cmp
clc
sub
jno
add
ret
clc
loope
in
repnz
mov
mov
add
mov
lret
xor
add
add
lods
add
add
adc
add
add
pushf
mov
ret
clc
mov
clc
mov
add
mov
xchg
or
pushf
sarl
clc
fldt
popf
lret
fwait
in
negb
xor
add
inc
add
sub
add
add
cld
cmp
push
ret
sbb
add
iret
xchg
push
dec
mov
pop
ret
clc
sar
test
dec
scas
mov
or
sub
add
mov
clc
lea
clc
clc
jl
dec
ja
clc
jmp
clc
outsb
clc
xchg
jae
add
dec
add
add
fsts
add
and
add
pop
clc
or
repnz
movsb
clc
int
add
push
sti
pop
adc
mov
test
fildll
add
sub
sub
add
bound
add
lret
scas
xor
add
xor
add
inc
clc
pop
clc
pop
clc
pop
xor
add
add
pop
mov
add
mov
add
add
add
add
clc
insl
dec
iret
mov
lahf
ds
daa
clc
clc
jnp
sar
add
add
xchg
xchg
movsl
clc
pushf
jmp
mov
cmp
clc
xbegin
sub
js
clc
clc
adc
add
mov
cwtl
fprem1
xor
add
clc
sub
out
xchg
pop
cmp
cmp
and
add
sub
clc
cmp
sub
mov
and
add
clc
pop
cmpsb
clc
outsb
mov
inc
add
dec
in
pop
sbb
clc
mov
xchg
arpl
add
clc
push
add
push
ss
cmp
add
mov
inc
add
sar
clc
xchg
call
add
xchg
cmp
repz
clc
mov
and
outsb
cmpsl
clc
loopne
add
add
xor
add
sar
clc
jne
cltd
idivb
jmp
sbb
and
add
mov
aam
add
fidivs
add
cmpsb
clc
jge
repz
arpl
add
mov
add
clc
pop
mov
add
add
daa
clc
pusha
add
jb
add
adc
add
cmc
jo
add
mov
add
lock
insl
xor
add
gs
nop
inc
clc
iret
adc
add
sbb
clc
dec
lret
sub
add
mov
add
mov
repz
mov
inc
clc
inc
clc
push
jne
loope
kmovw
jns
cmp
jle
add
add
add
xchg
out
push
add
cmp
jecxz
inc
clc
out
pop
or
sahf
jle
pusha
add
mov
into
jle
gs
mov
aaa
dec
jg
clc
aad
clc
repz
add
jecxz
daa
clc
jnp
xchg
push
sar
dec
int
pop
mov
outsl
dec
cs
add
cmpsl
clc
xchg
cwtl
adc
add
push
add
add
adc
add
and
add
clc
and
add
jle
lahf
hlt
clc
dec
pop
xor
add
push
add
and
add
and
cmp
ja
adc
add
in
in
int
js
ljmp
add
in
fidivrs
je
outsb
bound
add
jecxz
jg
pop
data16
in
and
clc
data16
push
sbb
out
jg
or
stos
aam
mov
add
add
pusha
add
mov
enter
or
pop
imull
adc
add
in
mov
add
mov
imul
clc
pushf
addr16
fisttpll
adc
add
push
add
not
xchg
adc
add
or
add
dec
into
jae
add
stos
dec
icebp
aad
inc
clc
movsb
clc
enter
sub
add
sbb
xor
add
clc
mov
mov
sar
movsl
clc
adc
add
cmp
add
imul
add
out
dec
inc
clc
inc
add
mov
clc
xor
clc
rclb
inc
clc
jns
clc
inc
clc
mov
inc
clc
int3
inc
add
mov
clc
nop
inc
add
cmp
add
jmp
mov
clc
xchg
lods
push
flds
js
sbb
mov
ds
data16
outsb
mov
lret
clc
dec
cmp
clc
jl
and
add
dec
cmp
cltd
sub
push
aad
clc
test
add
dec
sar
hlt
or
jnp
clc
mov
add
add
clc
fwait
push
add
imul
clc
sub
add
inc
add
sub
clc
inc
clc
mov
push
clc
mov
pop
je
clc
inc
add
inc
add
ret
clc
mov
clc
mov
clc
push
jne
xor
add
add
fmull
dec
iret
sbb
add
lret
clc
and
add
inc
clc
sbb
xor
pop
faddp
clc
adc
add
add
dec
push
clc
ret
clc
dec
xor
cmp
clc
cwtl
mov
adc
add
mov
xor
add
mov
cmp
lcall
aad
enter
cmp
lret
sar
add
xor
add
sbb
mov
clc
aad
and
add
push
pusha
add
xor
add
test
jb
add
inc
add
cli
jp
test
add
jp
inc
clc
hlt
inc
add
mov
add
mov
add
add
pop
addr16
xor
add
stc
out
icebp
cmp
mov
add
add
pop
imul
clc
or
ret
clc
cmp
clc
push
mov
sbb
arpl
add
add
scas
data16
dec
imul
lods
inc
clc
shrl
test
clc
test
add
fimull
mov
mov
add
xor
add
cltd
rorb
xchg
xbegin
add
add
push
sbb
lret
int
rcr
pop
movsb
clc
lcall
fcoml
adc
data16
es
clc
and
add
add
add
xchg
push
add
dec
push
lock
add
add
cmp
xor
add
add
cs
vmovntps
add
and
add
clc
ss
sbb
clc
push
add
lea
add
xor
mov
popf
push
and
clc
jae
add
into
xbegin
add
insl
pushf
fdivs
clc
repz
lea
and
jb
add
mov
add
popf
aam
jne
sub
imul
jae
add
clc
xor
add
clc
jl
clc
dec
push
cmp
clc
in
sbb
add
movsl
clc
sub
push
jp
clc
xchg
adc
add
clc
jne
clc
jp
pop
clc
pop
ds
loopne
outsl
sti
xchg
test
push
add
ss
and
add
addr16
es
loopne
mov
clc
mov
cli
push
clc
mov
clc
mov
clc
iret
leave
pop
or
add
mov
add
add
out
and
add
sarb
clc
dec
push
pop
clc
ret
clc
aas
sti
mov
clc
push
clc
out
arpl
add
mov
push
stos
in
pop
data16
ljmp
push
jg
sbb
mov
clc
jae
add
mov
add
fs
or
add
or
fwait
xor
add
out
jge
std
xchg
ret
clc
xor
add
or
cmp
add
sti
push
clc
lahf
cmp
add
push
add
loop
imulb
clc
pop
lret
add
imul
add
and
add
add
daa
clc
mov
clc
fwait
add
add
sbb
add
add
jb
add
clc
xor
dec
vmovntps
add
jl
lret
pop
sbb
testl
mov
clc
cld
das
jge
dec
mov
clc
gs
paddw
cmp
cmp
adc
add
test
enter
ss
mov
ret
clc
fisttps
mov
pop
push
and
add
sbb
and
add
add
clc
dec
idivb
fstl
adc
push
loopne
stos
out
lret
cmp
pop
xor
add
loope
mov
or
fildll
movsl
clc
stos
ss
mov
xor
add
add
and
fbld
add
clc
aas
aas
cld
or
insl
iret
icebp
dec
dec
movsl
clc
xor
popa
add
mov
add
jp
mov
pop
cmp
pop
clc
leave
loop
into
cmp
add
clc
push
add
mov
lret
add
add
cld
mov
clc
inc
clc
or
add
pop
mov
test
test
stc
pop
ss
clc
push
clc
sti
xchg
adc
add
add
clc
sbb
dec
daa
clc
movsl
clc
call
lret
std
mov
sub
clc
cmp
pop
lods
adc
add
jae
add
add
mov
sahf
repnz
add
clc
clc
shrl
repnz
add
stos
or
push
jmp
je
arpl
add
das
iret
sbb
cmp
popf
sbb
xchg
addr16
add
add
clc
mov
mov
clc
jp
inc
add
int3
and
add
add
inc
add
mov
adc
add
scas
rorl
int
add
push
add
aad
imulb
pop
or
and
add
movsb
clc
ss
add
add
clc
in
je
addr16
lods
cmp
pop
sub
add
xabort
imul
loope
cmp
push
jle
pop
push
mov
ss
iret
lods
push
add
add
clc
push
sbb
dec
std
sbb
or
xchg
inc
clc
cmc
push
add
add
sbb
add
fstl
clc
movsb
clc
pop
lret
add
je
mov
push
add
call
add
clc
jecxz
sar
jae
add
jbe
xchg
xchg
ret
xor
add
notl
add
clc
adc
add
add
fisubrl
dec
push
add
test
and
add
jg
add
mov
dec
lods
fwait
jo
add
add
loopne
cmp
xor
clc
addr16
xor
add
stos
cmp
add
cmp
add
jno
add
clc
test
insl
or
clc
cmp
pop
xchg
xor
movsl
clc
js
mov
add
jnp
clc
cmp
add
stos
mov
add
jns
dec
imul
cmp
add
and
add
test
mov
outsl
in
fmuls
rcll
add
pop
shrb
popa
add
lock
ds
add
repz
push
add
add
add
cmp
pushl
add
ja
push
clc
dec
clc
dec
lods
ljmp
repnz
add
pop
out
hlt
cltd
add
add
and
pop
xchg
ds
clc
in
cmp
add
and
add
pusha
add
cmpsb
clc
xchg
inc
add
xor
clc
add
add
pop
testl
add
pop
icebp
clc
clc
and
clc
mov
clc
push
add
fs
scas
jo
add
clc
xchg
cmp
lcall
fs
fucomp
ds
aad
inc
add
repz
jle
mov
clc
xchg
ljmp
fwait
push
pop
xchg
mov
dec
jb
add
mov
test
sub
aaa
sub
lret
pop
fsts
add
add
xor
xabort
add
push
out
dec
stc
xlat
add
add
adc
add
push
mov
cmp
add
mov
xabort
adc
add
aam
lret
into
fsts
jne
xchg
fsubr
mov
add
in
mov
add
shll
clc
iret
and
add
clc
repnz
xabort
fs
and
add
cmpsb
clc
xchg
shlb
add
dec
push
clc
movsb
clc
or
mov
clc
add
pushf
jns
add
cmp
push
rcrl
clc
loop
jns
clc
mov
add
stc
mov
mov
clc
jbe
clc
aaa
jbe
xor
add
mov
mov
scas
adc
clc
jne
clc
ds
add
add
call
cltd
in
dec
or
xchg
in
xor
scas
mov
stc
ficoms
incl
add
add
nop
int
clc
sub
pop
mov
stos
dec
imul
in
lea
and
add
add
add
jnp
cmpsl
clc
sbb
aad
jae
add
in
hlt
stos
or
test
add
add
add
js
clc
dec
cld
dec
enter
cmc
test
movsb
clc
adc
bswap
pop
lahf
rorl
add
fs
repnz
add
je
clc
nop
daa
clc
jns
inc
clc
cmp
gs
idivl
pop
or
clc
xor
add
sbb
jecxz
xchg
clc
lods
inc
add
iret
pusha
add
mov
add
dec
add
add
push
fcmovne
loope
in
js
add
in
push
push
xchg
add
add
pop
sub
xchg
push
add
insb
lcall
sbb
rcl
iret
ret
clc
or
and
add
sbb
daa
clc
je
clc
es
lods
push
or
sub
sar
icebp
outsb
stos
std
mov
lods
mov
movsl
clc
out
add
add
push
adc
cs
outsl
xor
add
add
ja
popf
lea
add
xabort
cmp
add
inc
add
cmp
mov
sarl
sub
cmp
clc
jmp
stc
icebp
cmp
daa
clc
fldenv
fmuls
add
rcrl
clc
stc
gs
cltd
pop
xchg
push
hlt
movsl
clc
xchg
test
add
jno
add
clc
rol
clc
jp
inc
add
sahf
push
add
js
std
push
push
sbb
add
pop
inc
clc
loop
mov
inc
add
int
clc
fninit
clc
and
jo
add
std
in
cli
sti
dec
sbb
mov
clc
jb
add
add
xchg
mov
mov
das
or
push
add
fnstenv
push
pop
outsl
add
cmp
addr16
scas
push
clc
push
mov
add
aas
bound
add
clc
push
add
fdivp
and
add
xlat
sbb
add
add
add
dec
adc
add
out
lahf
jg
mov
adc
add
mov
mov
xchg
and
add
jno
add
cmp
jmp
add
das
mov
in
out
sti
push
add
ljmp
icebp
xor
add
push
lock
add
clc
ret
cli
adc
add
clc
push
mov
in
or
clc
adc
add
lock
gs
inc
add
js
test
add
jns
jnp
mov
adc
add
mov
inc
add
adc
add
clc
lcall
cmp
clc
add
mov
dec
xabort
ds
pop
jmp
add
mov
add
cmpsb
clc
pop
pop
inc
clc
mov
add
pusha
add
adc
add
add
add
test
mov
mov
clc
sub
sub
clc
mov
clc
xchg
movsl
clc
test
add
jbe
cmp
cwtl
je
test
pop
xor
sahf
mov
clc
ja
clc
pop
mov
loopne
into
xor
add
outsl
loope
cmpsl
clc
in
add
and
ds
lcall
clc
mov
clc
std
test
push
out
adc
add
cmp
leave
and
add
xor
add
jmp
repnz
xor
clc
mov
test
cwtl
jno
add
and
arpl
add
clc
mov
das
daa
clc
pop
repz
pusha
add
mov
and
add
push
add
fs
ret
clc
push
add
lock
add
add
aaa
cmp
mov
mov
inc
clc
inc
clc
movsl
clc
push
add
add
add
cmp
add
outsl
call
mov
add
mov
or
mov
pop
sbb
adc
add
xor
add
clc
jnp
clc
addr16
daa
clc
ds
scas
xchg
pop
mov
add
ret
clc
lret
aas
ret
push
clc
mov
mov
clc
xabort
pop
clc
cmp
mov
pop
jecxz
push
inc
clc
bound
add
clc
cmp
sub
add
lock
add
add
clc
ss
in
popa
add
dec
cli
jecxz
add
add
hlt
xchg
lea
pop
push
sub
cld
data16
in
inc
clc
xbegin
clc
xor
das
aad
clc
nop
clc
fs
dec
pop
stos
mov
add
mov
jge
dec
or
xor
add
sahf
test
movsb
clc
xlat
xchg
dec
or
scas
mov
add
clc
pusha
add
xchg
iret
mov
jnp
sub
mov
int
bound
add
push
mov
xor
outsb
cmp
sar
clc
jp
clc
push
lock
aaa
pop
into
mov
inc
clc
stos
inc
add
sahf
out
xlat
sbb
clc
sub
clc
xchg
loope
enter
clc
fs
mov
add
int
add
scas
lcall
inc
add
mov
or
add
pop
sub
xchg
xor
add
add
add
out
int3
mov
sahf
fwait
mov
cmpsb
clc
jp
and
jb
add
add
add
inc
clc
xchg
pop
pop
test
fucomip
fcmovne
dec
xor
add
clc
add
mov
clc
notl
clc
and
add
scas
test
das
pop
pop
or
mov
cld
cmp
ljmp
add
imul
repz
push
clc
jp
pop
test
jmp
push
adc
add
adc
inc
add
adc
mov
enter
imul
add
clc
cmp
clc
mov
cmp
add
lods
push
add
out
mov
clc
mov
mov
add
incb
xchg
inc
clc
repnz
clc
loop
mov
add
add
pop
outsb
test
push
test
xchg
sub
clc
rcrl
movsl
clc
jl,pn
mov
jo
add
add
jae
add
sbb
dec
or
clc
negb
add
add
push
xor
add
add
clc
cwtl
sti
mov
dec
mov
rcrb
daa
clc
das
pop
dec
dec
sub
clc
mov
clc
mov
pop
rolb
jmp
fbstp
clc
cmp
jns
sar
jb
add
clc
push
movsb
clc
aaa
sar
add
cli
or
jl
xchg
cld
loope
fcoms
getsec
stos
fisttpl
je
clc
popf
bound
add
mov
add
jne
clc
push
mov
add
adc
add
pop
xchg
aad
xlat
dec
sub
sbb
add
xchg
xchg
adc
add
push
jmp
mov
clc
xor
add
pop
inc
clc
push
xchg
xabort
pop
iret
push
jo
add
and
add
movsb
clc
pusha
add
test
xchg
popf
mov
lock
clc
sub
add
push
add
arpl
add
add
add
mov
clc
xlat
stos
jne
mov
clc
sti
cmc
push
add
jmp
hlt
fsub
clc
jb
add
clc
arpl
add
icebp
sbb
fadds
clc
xor
clc
out
dec
icebp
cmp
add
and
fistps
push
in
inc
clc
test
jle
pushf
aad
add
add
mov
outsb
cld
push
ja
add
mov
add
sar
es
dec
int
clc
mov
ret
clc
pop
xchg
cmp
into
mov
mov
push
scas
lods
add
mov
clc
clc
push
addr16
xchg
sar
clc
and
das
jae
add
mov
repz
cmpsl
clc
mov
gs
fdivp
clc
test
movsl
clc
push
add
add
add
and
add
add
xchg
mov
mov
mov
repnz
notb
add
ficompl
dec
cmpsl
clc
jns
add
push
add
mov
aaa
mov
fsub
clc
fwait
ret
clc
fwait
lret
add
not
nop
inc
add
xchg
daa
clc
scas
fcompl
xchg
xor
add
push
clc
and
add
push
add
inc
add
and
add
in
mov
ljmp
mov
add
add
mov
popl
add
inc
add
in
js
jp
lret
out
push
je
xor
clc
mov
xor
clc
adc
add
mov
add
cwtl
ret
clc
pop
sti
push
cmp
clc
iret
push
add
mov
add
fiadds
and
add
clc
cli
pop
cmp
cmp
movsl
clc
inc
add
stos
bound
add
add
aaa
sub
insb
inc
add
jecxz
enter
lods
daa
clc
cli
pop
and
add
push
add
cmp
outsl
div
iret
in
push
dec
cmp
add
sbb
addr16
mov
jl
add
inc
add
jbe
pop
clc
xchg
mov
clc
pop
data16
fs
je
imul
mov
and
cmp
adc
mov
call
and
add
mov
cmp
add
cli
mov
mov
inc
add
cltd
push
dec
sub
sub
add
jge
mov
test
clc
shrl
loope
loopne
push
fstl
add
stos
sub
fs
incl
add
push
add
loopne
add
add
clc
jg
clc
int
rcl
cmp
clc
cmpsl
clc
pop
inc
clc
adc
add
stos
outsb
ljmp
sub
xchg
inc
clc
mov
xchg
sar
je
cmp
clc
or
clc
lods
push
add
mov
pop
cmp
clc
lock
add
out
push
add
scas
vmovups
add
clc
jns
pop
clc
in
rorl
das
cmp
adc
add
mov
shrb
cltd
and
add
inc
add
mov
sahf
mov
add
add
xchg
shll
cmp
add
jnp
add
xchg
stc
mov
clc
pop
and
loop
imul
cs
pop
jg
cmpsb
clc
cmovge
lcall
clc
jle
mov
cmp
js
pusha
add
outsl
pop
and
add
add
inc
clc
int3
xchg
adc
add
pop
lea
add
adc
add
clc
xchg
mov
lret
dec
xchg
loop
repz
lcall
inc
clc
fsts
add
add
add
clc
xchg
xchg
out
leave
mov
sbb
pop
movsb
clc
lock
add
test
in
cmc
mov
and
add
inc
clc
sbb
clc
test
lods
sub
xor
add
xchg
cmp
add
stos
adc
add
sbb
arpl
add
je
mov
add
inc
add
or
hlt
in
xchg
dec
cs
push
dec
mov
add
push
or
add
je
pop
add
add
lret
xlat
sub
sbb
test
je
or
add
nop
sbb
and
add
mov
clc
lret
push
lea
out
das
ljmp
clc
sub
push
clc
pushf
je
lods
dec
pop
adc
add
add
mov
ret
jb
add
repz
mov
nop
push
add
or
add
add
xlat
inc
add
ss
out
xchg
pusha
add
xor
add
clc
push
clc
adc
and
add
or
add
xchg
aam
add
cmpsl
clc
and
in
xor
add
and
add
add
ss
clc
vrcpps
add
jp
loope
cmp
add
insl
cltd
loope
pop
scas
pop
xor
add
add
ret
clc
rorl
aaa
xor
rcl
and
add
test
sub
xor
add
xchg
mov
mov
add
into
fldenv
ja
clc
xchg
jecxz
bound
add
add
das
cmp
add
dec
mov
add
call
add
xor
add
mov
add
cmc
inc
clc
mov
scas
dec
dec
je
clc
xchg
adc
add
clc
cmc
fidivs
add
push
mov
add
dec
push
cmpsl
clc
jne
jge
fildl
lods
push
mov
clc
cmp
add
add
cmp
in
leave
add
add
add
cld
dec
mov
inc
clc
mov
clc
and
loop
xor
add
xor
add
mov
add
clc
or
push
jns
dec
jnp
add
sbb
clc
pushf
push
add
scas
inc
clc
dec
xchg
jle,pn
ja
std
adc
add
add
add
xabort
ret
nop
xor
mov
clc
sbb
add
rorb
sub
add
rorl
sar
add
push
jge
cmp
pushf
fstpt
or
mov
jbe
jnp
frstor
add
cs
call
push
adc
push
dec
decl
cmpsl
clc
negl
clc
test
pop
xbegin
sbb
jo
add
and
add
clc
nop
mov
clc
gs
pop
clc
ds
clc
in
mov
pop
dec
mov
out
cld
aad
xor
add
ljmp
add
add
add
jbe
fbstp
lods
jno
add
ret
clc
jns
clc
mov
clc
push
xchg
in
es
push
js
in
fsts
add
mov
js
pop
mov
add
lcall
fistps
pop
clc
inc
add
popf
mov
clc
adc
add
push
insb
mov
clc
dec
gs
jle
clc
pop
aaa
ja
clc
pusha
add
push
pop
inc
add
dec
mov
rorl
sbb
movsb
clc
gs
fwait
loopne
mov
