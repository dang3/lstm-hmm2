push
sub
add
add
ret
push
adc
jno,pn
mov
iret
lret
sahf
loopne
mov
add
or
add
or
sbb
inc
add
add
jne
add
aaa
test
in
xlat
mov
movsb
mov
dec
adc
mov
lcall
mov
dec
cmp
pop
loop
mov
jge
add
addl
pusha
add
xchg
push
dec
lea
enter
xlat
fdivrl
loope
mov
add
add
jae
orl
lahf
pop
rcll
mov
xor
or
mov
cmp
mov
add
add
sbb
add
jl
jnp
aaa
mov
mov
and
dec
lea
mov
popa
fstpt
dec
cld
in
adc
sub
and
mov
push
add
add
cld
loope
cltd
fwait
test
arpl
hlt
pop
fcomps
add
jg
add
dec
daa
loope
roll
leave
push
call
inc
push
int3
scas
jnp
jl
dec
stos
dec
xor
xchg
cmp
rolb
mov
push
or
test
das
call
out
mov
add
cmpsb
xchg
cli
arpl
daa
sbb
add
in
push
outsl
adc
mov
add
clc
lods
add
jl
call
addb
xor
sti
lret
add
out
mov
mov
sti
lret
popl
dec
push
lret
and
xchg
mov
adc
dec
jno
movsl
js
cwtl
pop
adc
hlt
push
cmp
jl
into
jns
add
daa
xor
mov
dec
and
mov
add
add
adc
mov
inc
les
add
dec
mov
aam
push
sar
and
mov
ljmp
fdiv
arpl
mov
ljmp
mov
mov
sub
mov
arpl
adc
inc
je
outsl
adc
mov
mov
divl
cmpsl
sbb
push
jne
push
xor
mov
or
cmp
out
xchg
add
mov
outsl
repnz
add
sbb
mov
mov
add
shl
mov
cltd
jnp
jno
or
mov
mov
stos
leave
stos
out
rolb
mov
and
rolb
js
add
add
clc
push
mov
pop
movsb
inc
mov
stc
xchg
pop
pop
cmp
loop
mov
dec
or
add
sti
lcall
lahf
lods
mov
add
mov
fwait
loop
mov
into
xchg
cli
xor
mov
aaa
sbb
add
dec
or
add
jle
lea
add
mov
add
push
add
sbb
mov
inc
in
xor
mov
rolb
mov
mov
jbe
cltd
mov
mov
add
jo
mov
push
xchg
add
and
mov
lds
add
jmp
add
and
cmpsb
cmp
cmp
cmp
cmp
popf
pop
cltd
xchg
add
mov
lock
fildl
bound
mov
add
jnp
inc
adc
mov
cltd
gs
jecxz
add
mov
jmp
orl
addr16
mov
xor
dec
stc
mov
add
lcall
out
call
rolb
mov
and
out
jbe
inc
mov
jecxz
mov
push
dec
inc
mov
les
sbb
add
pop
mov
mov
push
repz
icebp
push
gs
sbb
sbb
outsl
dec
inc
dec
aad
add
xor
nop
add
das
lret
xor
outsl
clc
add
outsb
lret
in
adc
mov
jb
mov
ficompl
jne
dec
fs
add
push
mov
add
movl
ljmp
pop
into
adc
mov
sbb
adc
adc
mov
mov
rolb
mov
lock
into
insb
mov
mov
call
mov
popf
adc
add
notl
imul
leave
and
dec
push
dec
out
aas
loop
mov
jge
lcall
dec
insb
aas
fldl
movsl
cmp
and
popa
jle
sbb
inc
pop
fsubrl
mov
addb
sbb
pop
inc
and
mov
adc
add
fldcw
repz
mov
sub
and
mov
movl
outsl
push
jb
mov
sahf
rolb
cli
inc
push
div
add
add
mov
adc
add
mov
mov
testb
testl
repz
insl
mov
cli
imul
sbb
sahf
or
sbb
jo
mov
in
xchg
add
mov
push
cmc
sbb
std
inc
sub
cmp
stos
cmp
dec
ret
in
ja
testb
mov
mov
add
add
dec
enter
es
or
inc
mov
rolb
mov
sub
roll
cwtl
out
out
pop
jmp
xchg
sbb
aad
add
repz
lcall
repz
jb
mov
cltd
jecxz
and
dec
adc
mov
mov
xchg
imul
mov
jne
add
and
pusha
add
mov
lahf
jle
jns
jecxz
jne
cmp
mov
dec
decb
mov
in
mov
jno
add
push
out
std
ret
xchg
stos
or
add
test
xor
mov
add
leave
mov
mov
add
cmc
aaa
loopne
mov
test
les
pop
jno
push
add
idivl
addb
popf
lods
mov
mov
out
rcrl
addb
ja
fs
lret
pushw
push
sub
dec
scas
mov
mov
popf
mov
pop
jmp
push
adc
mov
dec
add
mov
push
mov
dec
fwait
jp
movsb
repnz
xor
add
jo
mov
gs
add
in
clc
cmp
das
mov
fwait
rolb
mov
add
iret
fisubrs
mov
adc
lea
add
rolb
mov
mov
bound
mov
add
mov
mov
mov
inc
xor
sbb
sbb
pop
jmp
xor
mov
dec
sbb
add
mov
pop
sbb
xor
in
das
das
icebp
xor
daa
adc
cmp
repnz
pop
push
fsub
cmp
fucomp
xchg
jge
mov
lret
bound
mov
mov
and
pushl
ljmp
inc
add
jp
mov
mov
push
xchg
or
out
dec
adc
mov
stos
imul
and
sahf
orl
and
mov
movsb
cmpsl
in
sbb
insl
pop
sbb
xor
mov
rolb
mov
inc
imul
je
inc
jg
mov
loopne
mov
jae
and
mov
and
xchg
xor
mov
dec
gs
push
mov
dec
and
xchg
pop
stc
push
add
jmp
inc
sarl
and
add
pop
xchg
mov
scas
int3
pusha
add
mov
add
xor
mov
call
pusha
dec
pushf
xchg
pop
mov
in
sub
push
push
push
cld
call
sub
mov
push
imul
pop
movzbl
cmp
ss
push
push
call
cmp
je
es
lea
cs
sub
mov
es
call
test
jne
jmp
leave
push
lret
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
lea
sub
add
mov
sub
sub
push
pop
push
je
jmp
add
add
jecxz
lea
dec
mov
pop
mov
iret
jmp
ljmp
int
addb
push
lret
mov
add
or
mov
fwait
and
mov
and
mov
mov
jmp
pop
out
sub
scas
imul
cmp
add
fs
add
mov
xchg
mov
pusha
add
mov
cmp
mov
mov
push
add
icebp
insb
fdivl
daa
loop
mov
loopne
mov
push
outsb
push
es
xor
ret
jle
add
lock
add
or
std
nop
add
push
addb
and
xchg
cli
mov
add
add
xor
add
mov
mov
mov
add
add
mov
test
jo
mov
test
cmpsl
mov
mov
xlat
xor
bound
mov
xor
mov
imul
pop
popf
test
test
nop
add
stos
jg
mov
sbb
adc
and
mov
loop
mov
lea
push
push
ljmp
mov
mov
insl
adc
add
xchg
adc
bound
mov
jne
or
mov
dec
or
xor
mov
repz
jmp
lds
xchg
xor
xchg
call
jno
push
add
test
mov
inc
cli
pop
jl
orl
inc
outsb
mov
out
push
ret
ret
movsb
mov
push
mov
scas
or
mov
clc
pop
test
dec
insb
sbb
mov
mov
outsb
incb
add
mov
movsl
ljmp
rolb
mov
fidivrs
add
cmp
add
je
sub
ljmp
mov
cmp
fstpt
std
lcall
jecxz
mov
lret
mov
xlat
inc
addb
subl
outsl
rolb
mov
insl
cmpsb
sbb
jg
xchg
add
jl
add
ja
pop
push
inc
push
jle
pop
jb
mov
jg
mov
enter
push
leave
outsb
cmpsl
add
ud2
pop
mov
jne
add
test
add
dec
adc
lret
adc
xchg
or
lea
je
add
mov
std
pushf
in
xchg
pop
or
mov
mov
fsubr
mov
pop
and
mov
adc
mov
add
shll
add
add
xor
sbb
aas
std
sbb
sbb
add
mov
cmp
movsl
inc
rolb
mov
push
dec
in
adc
mov
or
in
xchg
rolb
mov
push
pop
and
add
add
test
cmc
ljmp
mov
mov
out
pop
cmp
push
fs
jo
mov
cwtl
pop
rcll
jb
mov
add
out
inc
rolb
mov
add
mov
pop
loopne
mov
xchg
rolb
movsb
mov
push
loop
mov
add
add
mov
mov
mov
add
dec
dec
popfw
and
lock
cmp
add
ljmp
add
rolb
mov
js
xchg
mov
sahf
jnp
mov
adc
nopl
sbb
jbe
ficoml
add
add
xchg
addb
imul
add
add
pushf
add
leave
out
xchg
mov
in
adc
inc
arpl
fwait
jae
or
add
add
push
inc
add
cli
xchg
pop
and
sub
dec
aaa
add
adc
mov
pop
mov
cmp
and
test
cld
sbb
cmp
fnsave
add
ss
test
xchg
pop
gs
iret
jnp
add
in
sub
xor
and
std
cmp
ds
mov
pushf
or
adc
mov
dec
push
adc
mov
sub
add
mov
mov
sbb
mov
ljmp
mov
jmp
mov
adc
mov
dec
pop
leave
jne
sub
out
sbb
mov
adc
mov
cmp
adc
addb
jne
addr16
adc
mov
jae
jo
mov
imul
addr16
fnsave
subl
add
pop
fistps
mov
add
rolb
mov
addb
dec
push
jecxz
add
mov
imul
add
repz
rolb
xchg
mov
jae
cmp
mov
add
in
jne,pt
outsb
push
stc
or
mov
jne
inc
xchg
or
test
mov
lcall
dec
fisttps
xchg
sub
cmpsl
mov
gs
cmp
pop
scas
adc
dec
fidivrl
icebp
xchg
add
add
sti
add
addb
xor
sbb
sub
mov
push
sub
arpl
das
movsb
or
std
push
cli
adc
jne
dec
xor
mov
mov
or
mov
jns
das
mov
mov
inc
fdivs
add
mov
add
mov
add
jmp
fimuls
hlt
loop
mov
add
ljmp
add
idivb
mov
mov
clc
adc
mov
cltd
into
repnz
sub
nop
add
xchg
loopne
mov
scas
test
lret
imul
mov
inc
dec
call
aad
dec
adc
mov
sub
fldt
adc
stos
mov
mov
add
push
loop
mov
mov
decb
aas
pop
out
add
mov
jmp
mov
jae
inc
dec
insb
sbb
pop
call
or
les
lock
iret
hlt
fmul
inc
cwtl
movsl
pop
push
mov
std
roll
repz
movsl
in
mov
sub
pop
pop
or
pop
rolb
lods
aas
and
push
dec
xor
mov
outsl
add
add
pop
je
mov
std
mov
dec
int
adc
mov
popf
push
jbe
adc
adc
push
sbb
push
fildll
repnz
mov
mov
int3
adc
repz
inc
mov
and
jae
pop
leave
jo
mov
add
adc
ret
sti
repz
out
lods
test
mov
fs
mov
xor
shrl
jge
add
push
jg
or
jg
cmp
test
mov
pop
push
repnz
push
js
dec
rolb
mov
xchg
ljmp
add
mov
or
fs
pushf
pop
or
mov
lret
mov
mov
mov
rorl
add
mov
loop
mov
xor
dec
stos
xchg
aad
rcrl
clc
imul
mov
push
push
xchg
sti
or
bound
mov
pop
popa
in
jl
add
movsb
pop
repnz
push
push
test
fidivs
enter
cmp
imul
ret
sbb
cld
nop
add
lahf
pushf
mov
aas
jns
into
enter
and
mov
add
mov
aam
test
mov
add
scas
imul
ja
popa
xor
mov
rolb
dec
mov
jl
jbe
cmp
sbbl
xor
add
xlat
xchg
xor
std
dec
mov
outsl
mov
add
mov
repnz
icebp
push
cmp
add
push
lds
add
add
mov
loopne
mov
add
mov
outsb
adc
mov
adc
lds
sub
jg
sbb
dec
movsl
int3
dec
adc
mov
cmpsl
leave
ret
in
bound
mov
repnz
add
stc
xor
adc
xlat
cmc
aaa
sahf
sbb
inc
testl
add
hlt
in
ja
add
mov
push
xlat
push
repnz
xor
xchg
fistpll
adc
add
fwait
ret
cwtl
imul
sub
and
jne
push
push
loop
mov
ret
das
jmp
mov
sub
cmpsb
stc
add
cmovne
out
addb
arpl
aas
fwait
jns
add
add
xchg
push
add
rol
mov
add
les
xchg
mov
mov
pop
cwtl
sub
xchg
sbb
mov
int3
mov
cs
es
push
dec
xor
and
data16
and
mov
mov
add
std
add
mov
pop
mov
enter
mov
push
add
sub
jbe
in
push
mov
sub
mov
movsb
mov
add
jae
jle
adc
call
std
push
add
add
sbb
outsb
mov
inc
cmp
xor
stos
daa
das
imull
jmp
ljmp
in
scas
dec
push
testb
loopne
mov
add
lods
out
nop
add
cs
dec
dec
in
lods
sbb
cmp
fsts
scas
ss
mov
mov
xadd
mov
cmp
icebp
mov
add
movb
inc
add
mov
call
call
out
lds
inc
add
lea
inc
add
test
push
xor
mov
fildl
adc
mov
add
pop
gs
mov
add
jmp
fs
addb
popa
rolb
mov
das
repz
es
push
add
add
inc
mov
jmp
xchg
pushf
aad
xor
lret
cltd
dec
mov
xor
iret
jmp
cld
and
mov
in
xor
cwtl
std
loop
mov
add
mov
push
cltd
out
jle
es
jmp
add
insb
sbb
mov
call
cmpsb
mov
ret
cwtl
fistps
enter
cltd
fisttpl
push
inc
jl
sbb
jbe
ret
jae
add
add
add
sub
mov
and
pop
or
rolb
mov
cld
cmpsb
in
mov
jno
xor
mov
aam
cmp
and
jl
add
cltd
mov
out
cmp
cmc
mov
add
lret
jg
jno
mull
mov
mov
pusha
add
add
jbe
aas
or
mov
add
mov
test
jle
mov
call
std
fcoml
mov
stc
dec
movsl
fwait
mov
mov
ss
dec
lcall
mov
sub
rolb
mov
mov
fwait
mov
mov
std
pop
adc
mov
pusha
add
int3
inc
iret
mov
jmp
fildll
jns
jnp
mov
add
mov
mov
mov
pmaxsw
add
lret
in
cwtl
lret
lea
dec
arpl
pop
xchg
lods
push
inc
movsl
loope
fnstenv
out
mov
mov
mov
or
sub
push
add
shll
mov
testb
mov
ja
add
test
add
aad
call
mov
or
xor
repz
es
add
mov
ret
cmc
and
mov
sbb
add
mov
scas
jg
or
jle
xor
mov
loope
pop
notb
test
cmpsb
xchg
add
jns
faddl
lds
fcmovnu
or
scas
fs
fisttpll
mov
dec
scas
scas
ja
test
add
lret
inc
add
es
push
inc
inc
add
jne
cmp
jbe
pop
cmp
es
inc
pop
mov
mov
jb
mov
add
cmp
imul
arpl
jp
in
loop
mov
mov
test
gs
mov
add
xor
mov
add
mov
or
test
lret
jb
mov
xchg
fsubs
mov
and
outsb
pusha
add
addb
lods
data16
xlat
or
add
repnz
dec
lret
mov
sahf
cmp
add
add
and
mov
mov
das
push
cmc
mov
adc
mov
cltd
cwtl
push
xchg
cmp
sahf
add
mov
mov
mov
add
icebp
jns
add
mov
icebp
movlps
mov
imul
cwtl
mov
sub
sbb
rolb
mov
xchg
sub
inc
dec
mov
mov
add
add
add
mov
xchg
add
add
rcr
xor
faddl
xor
and
adc
add
add
rolb
mov
xor
fisubl
add
mov
fldenv
mov
mov
push
rolb
mov
fnsave
sbb
jns
int3
lods
repz
mov
ficomps
stos
ret
push
add
push
inc
imul
call
aas
mov
sti
pushf
rolb
mov
mov
sub
xchg
data16
clc
sub
inc
fdivrl
push
in
sbb
fimull
add
call
sbb
xlat
push
fstps
add
mov
ljmp
mov
mov
adc
sbbl
pusha
add
sub
xor
addr16
mov
add
out
cmp
xchg
mov
andl
cs
jecxz
add
loope
add
mov
sbb
sahf
mov
pop
mov
or
lret
mov
add
ds
rolb
push
fsts
lret
adc
push
fcompp
mov
add
jns
dec
xor
mov
sbb
mov
mov
roll
std
sbb
add
mov
fs
call
sahf
ljmp
cmp
mov
aas
push
add
sub
imul
fcomip
inc
dec
lret
repnz
mov
repnz
stos
arpl
push
add
add
test
mov
add
mov
inc
mov
mov
push
push
xor
outsl
addb
es
in
pop
addb
xchg
add
xchg
lea
or
aas
out
fldcw
mov
and
xor
mov
dec
mov
xlat
jecxz
subl
or
popf
push
into
div
add
mov
add
daa
xchg
mov
add
je
mov
sub
iret
mov
xchg
sub
rolb
mov
xchg
push
ds
scas
enter
xlat
jo
mov
lds
add
nop
add
mov
xchg
arpl
pop
push
iret
xchg
pusha
add
jmp
rolb
mov
dec
out
lcall
mov
fsubl
mov
fcomps
jecxz
and
mov
mov
add
mov
mov
dec
cmc
test
pushf
cmpsb
aas
mov
sub
xor
mov
pop
arpl
add
pop
addb
jno
xor
stos
mov
adc
in
sbb
add
mov
testb
and
sbb
loop
mov
xor
mov
bound
mov
loope
nop
add
mov
pushl
dec
add
ljmp
in
mov
jnp
outsb
jb
mov
inc
aad
add
fwait
pusha
add
sbb
pop
mov
cwtl
decl
add
icebp
clc
je
adc
mov
movsl
and
add
add
fwait
lret
add
call
cmp
push
and
mov
push
jnp
push
ss
mov
mov
fidivl
ja
add
xchg
add
ja
cltd
push
sbb
sub
add
add
or
mov
xor
mov
dec
xchg
insl
jo
mov
mov
jge
xchg
js
adc
mov
ret
imul
sbb
jg
add
cs
jbe
xchg
mov
nop
add
mov
repnz
pcmpgtd
mov
stos
rcl
or
ljmp
ljmp
adc
add
add
push
lods
lret
cmpsb
stos
push
nop
add
mov
repz
outsl
in
jae
mov
pop
pop
adc
mov
insl
add
mov
add
addr16
int3
mov
add
mov
cmpsb
cmpsb
mov
bound
mov
mov
jge
inc
mov
pop
and
sub
inc
push
movsl
mov
ss
aam
inc
add
lods
and
or
add
sub
inc
add
add
nop
add
mov
arpl
mov
icebp
das
popl
cmp
add
mov
pop
jle
cmp
sbb
mov
popf
fists
adc
mov
add
add
movsb
popf
ret
lods
push
insb
cmp
add
add
push
test
addb
jp
mov
sub
push
add
jmp
hlt
loope
mov
mov
in
bound
mov
add
xchg
je
popf
mov
frstor
add
mov
cmp
lret
push
add
mov
xchg
aam
ljmp
push
int3
clc
nop
add
adc
loope
add
add
arpl
loope
jns
push
add
add
fmul
add
mov
int
fdivrl
bound
mov
imull
ss
fcompl
out
push
add
pop
lcall
mov
mov
add
mov
mov
adc
push
adc
mov
mov
lcall
jl
test
fs
xchg
push
pop
sbb
adc
cmpsb
xor
fwait
mov
add
in
push
jo
mov
push
add
int3
sbb
mov
cmp
pop
xor
lcall
adc
imul
iret
xchg
xchg
inc
fimull
mov
enter
mov
rolb
mov
mov
insl
sbb
push
pop
jne
add
popa
dec
xlat
daa
and
adc
sbb
sbb
add
mov
adc
mov
inc
xor
mov
mov
mov
rolb
mov
jmp
je
sbb
leave
movsb
inc
fimuls
std
pop
push
sub
sti
push
xor
mov
mov
pop
jae
and
add
dec
lds
mov
xchg
or
add
cmpsl
sub
mov
or
ret
xorl
jnp
xchg
enter
mov
xchg
dec
gs
jae
add
lock
mov
or
cwtl
ret
js
add
push
xchg
add
mov
mov
call
push
fistl
test
iret
mov
aad
xor
mov
mov
pop
pop
ljmp
iret
les
mull
pop
mov
and
test
ret
fisttpll
fldcw
inc
inc
nop
add
adc
mov
negl
out
xchg
gs
add
pop
push
movsb
mov
inc
shr
xor
movsl
mov
add
jne
and
mov
aas
in
adc
sahf
push
je
dec
xor
add
test
mov
mov
loopne
mov
out
punpckldq
mov
add
xchg
int3
xchg
popa
mov
enter
inc
fists
push
add
mov
add
jbe
xor
repnz
xchg
inc
add
fdivs
jns
sub
or
sbb
mov
mov
xchg
orl
add
leave
ja
hlt
add
mov
das
lret
push
test
mov
imulb
call
xorl
sahf
xor
xchg
sub
cmpsb
push
pop
xor
add
add
test
adc
cld
movsl
das
jns
dec
pop
cwtl
rolb
mov
lock
mov
iret
jno
ljmp
mov
or
dec
sub
dec
cmp
xchg
add
fnstenv
cmp
xchg
add
jg
jp
lods
repnz
mov
xchg
push
and
aad
mov
mov
es
inc
xor
mov
loopne
mov
mov
add
mov
addb
lods
mov
mov
test
dec
xchg
cs
aas
in
imul
dec
inc
fs
push
xor
mov
cmp
mov
sub
add
je
jg
add
mov
mov
inc
xor
test
jnp
jg
cs
mov
add
je
or
stos
or
in
cmpsl
lret
push
lcall
ds
push
jnp
mov
mov
cltd
and
sbb
dec
in
int
cmp
push
add
inc
xchg
add
pop
jb
mov
add
mov
xor
ret
repz
mov
ret
lds
mov
nop
add
xor
negl
fidivrl
mov
jge
add
add
pop
test
sti
pop
sbb
dec
dec
into
sub
inc
add
inc
in
cmc
push
outsl
sub
xor
mov
and
out
mov
mov
out
ja
stos
ret
add
xchg
add
mov
mov
call
add
add
or
add
pop
inc
add
push
sbb
fcoml
add
mov
mov
xchg
lcall
clc
pop
jmp
mov
cmpsb
movb
roll
mov
outsl
add
xor
fisubrs
in
inc
add
mov
pop
lret
mov
das
jb
mov
aaa
mov
mov
pop
or
les
movsb
sbb
lds
sub
pop
stos
fcoms
iret
enter
dec
icebp
inc
gs
add
mov
aaa
dec
lods
insl
pushf
xchg
aaa
pusha
add
les
jo
mov
pop
scas
mov
add
out
aas
js
jmp
add
sbb
lock
sub
push
sbb
test
mov
shrl
lcall
mov
jo
mov
inc
jg
rolb
mov
adc
sbb
add
mov
push
cmp
jno
mov
push
cmp
jb
mov
lret
leave
rolb
mov
call
mov
lods
fwait
incb
sub
aas
test
cmpsl
cmp
mov
mov
add
mov
adc
mov
mov
std
dec
sub
out
fcoms
xor
sub
mov
lds
out
dec
rolb
mov
sbb
mov
add
add
mov
mov
add
mov
clc
rorl
mov
add
mov
dec
jp
cmp
add
and
mov
jmp
loopne
mov
add
mov
push
addb
std
popa
cmp
imul
outsl
xor
jno
and
and
mov
adc
stc
icebp
sub
add
mov
pop
cmp
out
movsl
cli
iret
dec
push
add
push
xchg
and
adc
mov
mov
mov
xor
scas
in
push
push
loop
mov
adc
mov
mov
insb
mov
test
xchg
inc
gs
push
adc
mov
lcall
out
insb
cmp
cmp
clc
das
adc
mov
add
sub
in
rolb
mov
xchg
push
mov
mov
xor
mov
jecxz
mov
rolb
mov
es
jo
mov
icebp
lock
lret
test
mov
aaa
xchg
insl
popf
scas
jp
fisubl
pop
insl
insl
in
xlat
jns
jns
push
inc
fwait
xor
mov
sub
mov
push
inc
pusha
add
imul
mov
inc
add
mov
mov
add
add
sub
mov
int
imul
jo
mov
jae
repnz
add
xor
mov
add
cltd
push
jecxz
adc
add
mov
jle
fimull
mov
cmp
loop
mov
popf
mov
cmp
shll
push
push
rcrl
mov
pop
add
mov
push
dec
fwait
ja
push
mov
lcall
mov
icebp
cld
push
arpl
mov
fnstcw
mov
push
add
xchg
jp
jle
and
mov
sub
cmpsl
scas
scas
adc
inc
or
add
jecxz
daa
jmp
push
adc
stos
cmp
call
fstpt
rcl
mov
sbb
mov
add
ljmp
out
xor
xchg
les
add
leave
xor
rolb
mov
sub
in
mov
add
add
sbb
cmpsb
aaa
push
in
jb
mov
cmpsl
scas
jmp
mov
xor
push
test
imul
movsl
aam
jo
mov
add
xor
mov
jl
test
or
mov
mov
lahf
and
out
mulb
mov
inc
adc
cmp
xor
mov
out
mov
pop
or
aad
stos
enter
add
push
les
jb
mov
iret
xlat
loopne
mov
mov
add
push
cmc
mov
mov
jno
add
add
shll
mov
mov
cs
add
adc
xor
mov
inc
mov
mov
pop
and
jbe
pushf
push
ljmp
das
imul
insb
int3
dec
popf
sahf
mov
setnp
mov
mov
stos
dec
mov
mov
fs
mov
stc
lahf
xor
imul
sbb
aas
adc
mov
inc
rolb
mov
sbbl
outsb
mov
lcall
lcall
mov
mov
repz
sbb
mov
cld
dec
fs
out
cmp
mov
add
ret
loopne
mov
add
mov
fdivs
rolb
mov
adc
and
mov
add
fcmovu
jo
mov
lret
ss
or
dec
xor
dec
xchg
add
xchg
jl
js
arpl
or
adc
mov
xchg
fwait
sub
add
push
add
add
div
neg
pop
iret
mov
sbb
pop
lcall
testl
inc
sti
mov
out
xor
fstpt
cli
add
loop
mov
movsb
inc
add
or
mov
inc
lods
test
adc
xchg
or
xchg
insb
sub
mov
mov
sub
outsb
mov
fidivs
mov
bound
mov
addl
add
mov
std
adc
mov
push
xchg
mov
mov
mov
lahf
push
push
add
or
mov
add
mov
fisttps
dec
rolb
cmp
pushf
push
add
jge
jmp
push
in
mov
mov
lds
popa
js
xlat
ss
add
dec
movsb
cmp
inc
out
mov
mov
mov
mov
mov
push
or
outsb
sti
cs
testl
xchg
sbb
push
subl
addl
outsl
add
mov
jbe
aas
std
push
and
cltd
scas
mov
add
lock
insb
jle
rolb
mov
in
inc
add
stos
loope
js
xchg
jnp
repnz
mov
lret
fcmovnbe
repz
and
daa
lea
jo
mov
fldenv
call
xchg
add
cmp
mov
jb
mov
add
sub
adc
mov
les
mov
add
mov
mov
lea
popa
fisttpl
push
cmp
test
pop
test
sti
adc
mov
incl
push
sub
fnsave
add
add
pop
push
or
pop
dec
popa
andl
call
mov
ret
ret
mov
mov
les
cmp
fsubrs
jle
std
lret
inc
inc
rolb
mov
mov
iret
add
pop
mov
fisttpll
dec
popa
das
dec
das
inc
mov
jp
jmp
inc
jp
ret
xor
popf
lret
mov
dec
sbb
lahf
pushf
inc
add
mov
aam
add
sub
jns
leave
xor
mov
and
dec
insl
push
pop
and
mov
pop
fstpl
mov
dec
in
and
in
mov
test
insb
push
dec
nop
add
lcall
xchg
add
sbb
and
mov
adc
dec
mov
sbb
sbb
add
das
addb
inc
push
xlat
mov
sub
int3
movsl
int
fwait
clc
test
jbe
add
mov
icebp
xchg
outsl
stos
loop
mov
bound
mov
push
pop
mov
out
hlt
or
pop
adc
sbb
lcall
add
push
mov
lods
push
lods
cmc
aas
xor
in
lods
mov
cmc
daa
imul
pop
pop
mov
fcmovu
push
add
out
data16
xchg
jo
mov
add
lea
inc
add
lods
std
scas
jle
and
out
mov
add
cmp
mov
outsb
jmp
inc
mov
lahf
jle
daa
out
pop
or
fstpt
aaa
into
pop
rolb
mov
mov
xor
arpl
push
add
mov
sbb
daa
nop
add
mov
fsubrl
rolb
and
rorl
pop
js
dec
mov
addb
xchg
jl
pop
gs
pop
fwait
data16
shrl
sbb
movsl
sbbl
mov
add
in
adcl
ss
or
add
jecxz
loopne
mov
jns
or
add
add
aam
or
dec
mov
data16
inc
add
mov
aaa
add
mov
add
add
sbb
imul
add
inc
clc
jnp
sub
out
add
ficoml
repnz
dec
jbe
push
sub
pop
jg
mov
fsubl
rolb
mov
push
cwtl
popf
loop
mov
cltd
test
mov
in
dec
cltd
movsb
daa
inc
add
add
pop
fisubs
and
mov
repnz
add
rolb
mov
inc
xor
sub
cmp
mov
ret
std
pop
gs
push
push
add
mov
mov
add
movsl
xor
addb
addb
pop
dec
movsl
std
out
adc
divl
mov
scas
xchg
icebp
dec
stos
int3
mov
cld
lret
xchg
out
add
jecxz
xchg
push
fwait
test
mov
mov
imul
cltd
aad
mov
mov
add
leave
pusha
add
jecxz
inc
addl
mov
push
popf
and
jne
ss
cmp
ficoms
jp
xor
mov
xor
mov
add
and
mov
es
jl
loopew
push
add
jg
push
and
mov
scas
rolb
std
movb
mov
test
add
mov
mov
add
fildl
and
sbb
cmc
shl
add
out
pop
or
add
push
test
mov
aam
repz
add
mov
add
push
add
adc
mov
jbe
pop
or
es
mov
mov
mov
sub
add
add
mov
mov
or
add
movsb
rolb
mov
enter
mov
popf
sub
or
enter
in
push
sbb
cmp
xchg
cmpsl
mov
adc
test
pop
adc
mov
inc
int
repz
std
adc
mov
testl
cmp
das
lret
call
push
notb
mov
shll
xor
ljmp
mov
aad
iret
ljmp
lods
xlat
ret
dec
pop
cmp
popf
popf
cwtl
lahf
imul
lock
xchg
jl
jnp
ficomps
je
adc
repnz
push
jae
ja
mov
hlt
xchg
inc
add
scas
movsl
mov
and
add
idivl
push
mov
pop
shl
add
mov
inc
add
mov
movsl
push
add
xor
es
jnp
arpl
int
and
xor
add
pop
mov
out
es
cltd
jno
push
cwtl
dec
daa
mov
mov
rolb
out
mov
mov
add
xchg
sahf
pop
sbb
in
fwait
scas
mov
lds
mov
movsl
or
lock
fists
mov
xchg
xor
mov
mov
aam
add
sbb
imul
add
mov
test
insb
mov
xchg
pushl
add
mov
jg
cmp
outsl
cmpsl
and
mov
test
mov
jne
jle
xchg
inc
cmp
jge
xchg
nop
add
mov
les
pop
cmp
jl
aam
scas
out
sub
rcrl
int3
jp
ret
sahf
sbb
in
xor
mov
mov
add
sti
call
jne
add
sub
mov
xor
jge
jle
ds
cmp
add
add
arpl
mov
outsb
add
mov
mov
in
or
pop
lods
xor
bound
mov
xchg
ja
mov
cmp
pop
mov
add
repz
dec
and
mov
inc
retw
xor
mov
add
xor
jmp
add
negl
call
add
mov
add
xor
push
inc
add
shl
and
and
mov
pop
mov
jbe
icebp
fisttpll
add
sub
xor
sub
mov
xor
mov
sahf
arpl
sbb
jns
js
and
mov
inc
add
cmp
cmpl
cmc
or
sub
jle
add
push
add
cmp
mov
sub
loope
int3
adc
add
ja
add
xor
pop
in
jle
ljmp
scas
sub
dec
mov
add
xor
mov
xchg
mov
int
add
arpl
fs
xchg
in
aas
enter
jnp
add
add
xor
mov
pop
mov
in
test
lret
cmc
mov
repnz
ror
fimull
movsb
scas
lcall
lcall
cmp
add
ja
cs
dec
movsl
mov
mov
in
aad
cmp
push
jbe
add
mov
aas
push
out
cmpsb
into
jmp
add
jmp
mov
mov
add
test
bound
mov
test
xchg
insl
stos
fstp
add
mov
shll
aaa
lea
or
and
mov
je
or
repnz
mov
jne
and
mov
xor
rol
dec
xor
jl
dec
pop
mov
add
jl
mov
fcmovnb
add
pusha
add
loope
hlt
pusha
add
cmpsl
rolb
mov
sbb
xor
inc
add
cmp
add
in
mov
sub
sbb
mov
add
ljmp
add
daa
mov
add
pop
ficoms
pusha
add
mov
sti
sbb
add
mov
inc
add
dec
mov
inc
mov
add
mov
popl
sub
inc
cmp
cmp
mov
insb
stc
lret
in
lods
pop
pop
push
inc
add
jmp
pusha
add
mov
sub
mov
mov
mov
fsub
add
mov
das
add
aaa
and
add
mov
ss
add
mov
push
push
ja
vunpckhpd
xchg
jle
add
mov
rcr
mull
mov
out
add
jne
add
call
adc
imul
xor
push
add
push
add
add
mov
adc
cld
xchg
rolb
mov
mov
mov
mov
mov
add
xchg
popa
mov
imul
mov
jb
mov
add
nop
add
daa
mov
pop
and
mov
push
scas
mov
mov
lods
xchg
mov
test
mov
mov
push
loope
add
adc
jns
loopne
mov
cmovp
push
push
mov
hlt
or
or
addb
dec
jge
jge
out
into
pusha
add
frstor
add
xor
mov
add
idivl
push
lret
in
dec
loop
mov
dec
stos
ds
pop
out
addr16
stos
xor
mov
call
mov
adc
cmp
add
stos
pop
in
sti
pusha
add
fistpl
ret
jo
jb
mov
add
add
add
lret
mov
xchg
add
push
lea
lods
xchg
mov
push
mov
nop
add
repz
mov
into
dec
push
jecxz
jle
push
add
or
iret
and
mov
fdivrp
ret
and
enter
mov
jmp
mov
mov
or
or
lfs
add
into
mov
dec
jge
out
push
inc
nop
add
out
lea
pop
insl
inc
xchg
add
pop
out
inc
add
ret
adc
and
and
aad
push
or
xchg
and
repnz
into
bound
mov
cli
mov
sub
loop
mov
add
mov
xchg
std
imul
pop
lods
mov
xor
je
xchg
push
xchg
pop
sbb
add
xchg
cmp
nop
add
lret
push
testl
repz
pop
push
sbb
mov
cmp
aam
sbb
add
lea
data16
jecxz
pop
dec
call
mov
push
inc
add
sahf
hlt
push
push
dec
in
inc
jg
repz
add
add
pusha
add
insl
js
jno
add
loop
mov
dec
inc
sub
xor
mov
in
jb
mov
jg
adc
mov
add
fwait
into
lea
jns
and
iret
testb
add
mov
stos
xchg
jecxz
repz
xchg
cmpsb
fldt
test
mov
cmp
mov
sub
out
add
xor
mov
xchg
push
and
mov
repz
mov
addb
mov
mov
gs
dec
cld
js
aas
or
lahf
add
push
mov
dec
sub
das
push
mov
loop
mov
addb
fsubl
add
mov
push
inc
mov
mov
cmp
adc
mov
jg
cmp
out
testb
rolb
mov
aad
add
and
mov
pushf
jecxz
inc
sbb
pop
mov
mov
fcoms
pusha
add
mov
aaa
scas
rorl
es
cld
popf
out
divb
call
popf
int3
sbb
rorl
notl
mov
add
pusha
add
cmpsb
xor
xor
rorl
jno
add
mov
pop
and
mov
jb
mov
pop
repz
ds
mov
jne
and
inc
xchg
cmpsl
mov
lcall
pushf
iret
mov
inc
add
leave
ss
add
mov
adc
add
mov
jne
sbb
emms
sbb
add
popa
pop
ja
xchg
or
fisttpl
mov
xchg
enter
push
loop
mov
mov
mov
mov
shll
xor
mov
mov
out
fsubr
pop
xchg
mov
addb
xor
pop
rolb
mov
push
add
add
outsb
sub
and
mov
ja
push
jge
outsb
cs
xor
int3
test
mov
addr16
daa
sub
iret
sub
rolb
hlt
mov
add
addb
fbstp
mov
fstpt
mov
inc
addr16
in
lds
mov
mov
jg
inc
cwtl
sbb
arpl
out
mov
mov
add
scas
inc
rol
ljmp
jecxz
xor
rolb
mov
cmp
push
add
and
cs
mov
push
jl
add
fwait
and
push
sbb
mov
outsb
dec
test
mov
cmpsb
cs
fstps
or
aad
daa
dec
movb
add
mov
icebp
daa
mov
jg
push
sbb
or
xor
addr16
mov
xlat
inc
fmul
imul
mov
mov
sbb
movsl
mov
idiv
mov
add
pop
pusha
add
insl
arpl
mov
lcall
mov
add
imul
mov
pop
sti
lret
sub
add
aad
negb
mov
pushf
ljmp
sub
lret
mov
out
ss
aaa
cld
es
pop
loope
inc
add
and
mov
repnz
add
sahf
xor
add
loope
clc
int3
popf
idiv
clc
mov
repz
mov
sahf
add
push
adc
cwtl
ret
mov
enter
test
movsl
ja
push
mov
add
xor
mov
sub
mov
or
mov
inc
add
bound
mov
xor
fcmove
icebp
lcall
add
xor
lret
movzbl
test
jp
pop
sub
mov
mov
mov
push
mov
sbb
cwtl
adc
sub
jne
add
mov
xchg
xchg
shll
mov
test
ja
jp
add
push
ret
dec
lods
adc
mov
add
outsb
jecxz
outsl
inc
sahf
xchg
addb
test
sub
fwait
xchg
adc
sahf
mov
sbb
dec
out
lock
rcr
clc
sbb
inc
sub
add
xchg
pushf
push
add
fistpl
mov
pop
arpl
mov
mov
pop
es
in
xchg
inc
rolb
mov
add
xchg
jns
or
cwtl
jmp
gs
dec
pop
sahf
icebp
push
xor
mov
sub
push
mov
imul
in
jns
inc
and
mov
aaa
mov
daa
aam
add
outsl
fdivp
add
insl
pushf
push
adc
jns
inc
and
mov
xor
pusha
add
jnp
pop
cmp
mov
jge
push
mov
pushf
cwtl
hlt
shll
cmpsl
jge
test
mov
pop
and
movsl
addb
adc
push
cmp
and
mov
push
clc
js
test
add
push
aad
fs
mov
mov
pop
push
add
fmulp
inc
jbe
js
add
leave
add
mov
mov
add
push
push
stc
std
xchg
gs
add
mov
dec
dec
push
rcrl
add
mov
mov
mov
or
inc
add
cld
hlt
inc
add
jmp
imul
sub
mov
mov
add
add
add
lahf
or
ret
in
jmp
xor
insl
mov
inc
or
jnp
jecxz
add
mov
popf
pushf
cmp
add
jmp
lods
add
mov
mov
add
in
xchg
rolb
loop
mov
gs
pop
inc
ja
fcoml
scas
mull
lahf
sub
mov
cmpsl
pand
stos
movsl
cmpsl
cmp
jp
add
add
add
mov
push
mul
aas
xchg
jmp
mov
add
add
rolb
mov
pop
push
lods
int
push
ss
push
mov
divb
test
mov
ss
test
pushf
pop
xor
jae
lret
xchg
fdivl
gs
mov
aad
sub
stos
sub
or
lret
insl
lcall
out
dec
inc
add
inc
cltd
test
add
mov
icebp
sahf
adc
mov
dec
outsl
sti
insl
inc
cmpsb
push
mov
ret
je
add
sbb
icebp
jae
outsl
mov
mov
inc
test
mov
jge
imul
mov
test
ret
movsl
test
in
mov
mov
mov
and
push
add
or
mov
jp
xchg
sbb
sbb
fs
inc
rolb
mov
or
pop
mov
das
fucom
mov
iret
idivl
test
pop
sub
sbbl
sbb
adc
add
fildll
stos
pop
mov
inc
fisubs
add
xchg
add
add
mov
push
mov
xlat
cld
mov
test
into
test
mov
sub
out
sub
xchg
outsb
sub
adc
add
xchg
mov
mov
inc
jge
imul
mov
pop
mov
mov
mov
stos
push
add
add
mov
xchg
push
aad
mov
dec
push
lret
cmpsl
jge
pop
push
sbb
add
shll
push
pop
cmpsl
mulb
jle
add
add
add
or
add
dec
cld
mov
push
or
jno
pop
pop
push
movsb
das
stos
xchg
rolb
mov
clc
in
sub
sbb
jmp
add
add
repz
add
pop
adc
dec
inc
mov
jb
mov
es
adcl
in
ja
mov
mov
fsts
jge
outsb
rolb
pop
in
jnp
mov
xlat
push
mov
push
shrl
xor
mov
jnp
push
arpl
jae
inc
add
add
gs
mov
mov
aas
cmc
or
mov
out
mov
push
js
scas
pop
fcomps
or
jno
push
stos
jo
mov
addr16
xor
int3
xchg
fdivrp
icebp
enter
addb
mov
jge
test
inc
dec
and
cmp
subl
mov
mov
add
or
mov
push
pushf
ret
sahf
mov
xchg
mov
in
aas
adc
je
add
mov
jne
and
mov
and
std
jge
jl
add
dec
mov
add
fidivs
inc
cwtl
push
mov
jns
add
add
push
adc
mov
hlt
inc
inc
and
pop
icebp
lock
sbb
pop
or
mov
or
aad
mov
add
mov
add
call
mov
shll
test
addb
inc
add
cld
pusha
add
lret
jmp
in
xor
cmp
mov
popa
push
test
add
jne
clc
fwait
cmpsl
mov
rolb
test
mov
mov
push
in
popf
lds
inc
xlat
cmp
jbe
ret
xchg
adc
clc
pushf
jmp
lret
add
add
movsb
scas
fsubr
add
add
add
add
xlat
xchg
stc
fmull
lods
add
mov
pop
jno
add
mov
mov
mov
rolb
mov
add
into
or
push
push
sub
or
cld
pop
lahf
out
add
mov
fs
mov
or
mov
icebp
mov
movsl
xchg
inc
add
movsl
push
into
pop
mov
inc
add
xchg
test
stc
add
push
insl
xor
mov
addb
pop
push
add
add
bound
mov
pop
fucom
inc
sbb
mov
pop
or
test
add
cltd
pop
test
outsb
sub
mov
push
jne
test
fldl
or
les
out
lock
xchg
es
add
mov
inc
mov
pop
aad
add
fcompl
pop
and
add
ret
sbbl
sbb
dec
outsb
and
test
xchg
pop
pop
cmp
add
sti
addl
xor
xchg
js
add
sbb
adc
cwtl
cld
cli
rolb
mov
mov
sub
fucom
les
mov
mov
mov
jmp
mov
add
movsl
movsl
fwait
pop
mov
add
add
jmp
mov
mov
xor
add
cmp
inc
pop
add
mov
mov
add
mov
lahf
jbe
mov
add
in
lods
in
jl
mov
mov
add
mov
dec
test
ljmp
or
push
push
add
pushf
ret
outsb
sub
xor
push
push
add
jle
xchg
cmp
sub
mov
mov
cld
icebp
xchg
dec
out
xchg
add
comiss
ljmp
in
loopne
mov
cmp
sub
xchg
rolb
mov
add
xchg
or
mov
pop
mov
mov
stos
repnz
out
rorl
mov
mov
push
add
scas
cli
cmp
add
mov
je
sub
or
xor
add
mov
add
sbb
add
mov
push
shll
add
push
ds
mov
push
add
mov
xchg
lea
mov
jl
jb
mov
lods
adc
add
subl
push
enter
loop
mov
push
add
cld
xor
xchg
ss
sub
mov
mov
mov
add
mov
rolb
rolb
add
add
add
mov
lret
ret
fbstp
enter
sti
in
lods
loope
dec
mov
inc
loopne
mov
add
add
fisubrs
sbb
aas
mov
bound
mov
int3
es
mov
mov
arpl
pop
cmp
rcl
cld
and
mov
std
jp
fnstsw
es
add
add
mov
add
dec
dec
ficoml
addr16
xor
inc
mov
mov
test
xchg
dec
lret
stos
fwait
rolb
mov
nop
add
sub
cmp
scas
inc
add
inc
inc
scas
jmp
out
jno
into
adc
mov
add
mov
mov
das
in
in
cld
jnp
add
sbb
arpl
mov
outsb
mov
push
lods
or
pop
fldl
cmp
cmpsb
xorl
shll
mov
add
mov
add
lock
test
or
or
call
mov
adc
mov
add
add
hlt
lods
pop
nop
add
js
push
inc
add
movl
push
sub
add
add
add
dec
sub
daa
xlat
in
add
pop
in
and
nop
add
insl
movsl
out
xor
mov
imul
scas
sbb
add
fcoms
mov
mov
sub
test
inc
xchg
xchg
cmp
add
mov
daa
dec
fdivrs
notl
xor
fidivrl
rorl
lcall
add
inc
sbb
add
sbbl
add
add
jno
dec
mov
push
test
repnz
pavgw
mov
mov
mov
pop
sbb
mov
inc
ja
or
mov
add
in
and
frstor
jmp
mov
add
sahf
scas
mov
and
mov
adc
mov
aad
cwtl
mov
fstl
lret
jl
sub
xor
cmp
xchg
roll
mov
xchg
in
mov
mov
mov
cmp
sub
enter
adc
mov
add
add
imul
and
mov
cmpl
jecxz
popf
sub
outsl
test
xchg
jb
mov
mov
mov
out
sub
push
xor
mov
scas
out
in
adc
add
mov
mov
fdivr
test
push
test
dec
push
push
add
mov
sbb
mov
mov
sbb
mov
addb
mov
mov
mov
jmp
ja
jno
inc
add
or
aad
add
ja
add
sub
mov
add
scas
dec
rorl
addb
fcoml
cmpsl
test
outsl
mov
incb
jno
push
fwait
addb
sub
mov
xchg
sbb
mov
add
in
mov
int
sahf
lret
cmp
popf
or
or
lds
fcmovnu
out
inc
loope
lds
inc
add
mov
loop
mov
dec
lock
push
add
mov
mov
dec
fisttps
aad
mov
call
addl
test
add
mov
adc
seto
mov
add
mov
cmp
lock
mov
xchg
adc
mov
add
mov
jle
sarl
jno
or
xchg
movsb
fistps
xchg
adc
mov
mov
mov
mov
mov
mov
addr16
add
cmpl
mov
xchg
push
mov
push
addb
cmp
jmp
bound
mov
fstpl
or
cmp
xchg
add
loope
push
dec
rcl
jle
jge
and
mov
stos
outsb
outsl
shl
lcall
push
imul
daa
rorl
add
int3
fldenv
add
ds
xchg
js
push
mov
inc
js
fs
in
imul
add
xchg
shl
add
push
mov
mov
add
insl
imul
mov
jae
push
add
push
and
jmp
mov
cwtl
jmp
add
dec
dec
xor
in
pop
call
push
dec
outsl
xchg
ljmp
das
je
mov
dec
les
test
mov
popf
jl
push
pop
dec
mull
and
mov
mov
pusha
add
jl
add
in
push
cmpsl
mov
dec
insl
xchg
add
dec
cmpsl
and
mov
inc
xchg
jl
and
outsl
jge
xchg
int
mov
add
das
xor
add
mov
aam
jle
cld
cmp
mov
subl
add
pop
xor
mov
xchg
pop
mov
mov
test
fisttpll
mov
and
lcall
sbb
inc
push
inc
add
push
add
mov
adc
jge
xchg
icebp
gs
add
pop
push
mov
sub
xchg
sub
dec
bound
mov
mov
stos
repnz
mov
mov
or
fwait
or
mov
dec
pop
pop
xchg
add
jl,pt
pop
fcoms
add
int3
sarl
pop
insb
lahf
jl
pop
leave
stos
mov
call
adc
mov
mov
add
sbb
je
sbb
xor
mov
add
std
aam
in
cwtl
ret
outsl
loopne
mov
fs
xchg
pop
mov
add
out
in
das
xchg
decl
add
sub
xchg
add
lret
cld
adcl
cwtl
cmp
add
push
inc
xlat
push
add
mov
add
xor
mov
and
mov
dec
in
fnstenv
aaa
mov
fmulp
test
sbb
sub
xchg
add
lods
push
add
inc
add
cmpsl
sub
xor
mov
pop
sbb
addl
rolb
mov
stos
sti
addb
dec
ds
jns
in
loopne
mov
or
add
sbb
mov
sub
mov
adc
mov
add
lods
push
mov
movsb
inc
movsl
xor
mov
rolb
mov
cli
fcmovnb
sbb
jae
jg
unpckhps
pop
and
mov
out
shrl
pop
fisttps
push
sub
jae
xchg
addb
xchg
lahf
inc
adc
add
or
pop
or
jle
mov
mov
outsl
shll
or
xchg
cmp
rolb
mov
inc
push
mov
add
or
insl
inc
addr16
ljmp
dec
repz
dec
pop
aaa
fisttpl
rolb
inc
pop
sti
lcall
add
jbe
add
add
sub
imul
fdivr
xchg
cmc
sbb
enter
cmp
aaa
addr16
aas
push
add
cmpsb
sbb
test
sub
push
mov
add
mov
add
je
pop
fs
push
js
in
ja
cwtl
add
mov
pop
insb
cli
rolb
mov
add
popf
outsl
dec
or
inc
add
add
mov
cmpl
pop
in
add
add
or
jne
mov
add
ja
add
mov
jp
cwtl
fcmovnu
mov
add
addb
add
push
add
stos
push
push
add
int3
mov
xlat
xor
mov
add
mov
add
inc
int
sub
mov
mov
xchg
pop
popa
pop
hlt
dec
xor
add
sbb
loopne
mov
scas
cmp
fildl
mov
add
cmp
idivl
dec
and
outsb
or
dec
inc
and
mov
xlat
lahf
call
xlat
jle
push
add
sahf
pop
and
or
std
mov
in
insl
or
jg
or
sbb
ficomps
sub
sbb
adc
jecxz
add
add
mov
mov
lea
cs
sbb
jnp
add
jmp
cmp
fs
xchg
add
push
sbb
push
movsl
addb
jmp
js
loope
mov
inc
out
addb
scas
test
sub
rolb
mov
mov
mov
fsubl
mov
xchg
in
pop
outsb
out
call
fstl
sub
sbb
add
idivl
lret
sbb
add
jge
icebp
cmpsl
shl
mov
call
add
pop
stc
pop
sub
fidivl
mov
mov
add
jo
mov
xor
add
xchg
lock
das
and
xchg
add
test
leave
mov
fnsave
sub
or
bound
mov
mov
mov
int
add
sti
inc
stos
mov
mov
or
int
ficoms
mov
ficomps
cmp
out
mov
sub
push
loope
xor
rolb
lahf
js
shll
mov
lret
lcall
outsl
stos
dec
dec
sbb
shll
mov
pop
hlt
repnz
add
negl
mov
addb
rolb
mov
xchg
dec
and
add
clc
sti
ret
stc
push
inc
dec
stos
dec
inc
mov
out
lret
pop
jnp
jge
cmp
mov
sub
in
jbe
mov
lds
aaa
xlat
mov
add
iret
jmp
int
pop
mov
inc
and
pop
repz
aad
xchg
sbb
outsl
xchg
add
push
out
xchg
in
xor
aad
mov
add
mov
xchg
push
push
xchg
ja
pop
mov
add
mov
mov
addr16
add
mov
mov
repnz
dec
out
add
mov
out
or
mov
sbb
daa
jle
stc
pop
adc
mov
mov
cmp
aas
lahf
cltd
cmpsl
call
inc
out
test
bound
mov
sbb
xorl
outsb
into
test
lods
into
sahf
ss
out
rolb
mov
int3
lea
xor
cmp
pop
sub
add
addb
sub
sub
xchg
rolb
mov
mov
mov
mov
jno
loopne
mov
test
cli
pop
inc
inc
add
in
leave
filds
rolb
sbb
add
decb
imul
add
mov
cli
daa
inc
xor
push
out
sub
jno
jae
push
add
add
dec
jnp
inc
add
add
cs
jmp
in
cld
pop
test
clc
loopne
mov
add
pop
ja
enter
add
sub
sbb
popa
ficomps
les
add
gs
push
adc
mov
aam
incb
add
fs
add
pop
cmp
xor
xchg
xchg
les
sahf
xchg
mov
pop
les
popa
imul
inc
add
movsb
cmp
pop
dec
into
cmp
adc
xchg
add
cli
ja
adc
cmp
sbb
lds
add
mov
add
les
cmpsl
js
xchg
add
add
mov
fsubp
add
rolb
mov
fimuls
out
sub
xchg
and
mov
push
pop
xchg
in
cmp
and
add
cli
xor
mov
jo
mov
xchg
rorl
or
add
mov
mov
sbb
adc
mov
pop
xor
mov
addr16
inc
hlt
dec
and
mov
or
cmpsb
ret
xchg
add
in
push
mov
inc
push
mov
ja
add
mov
cmc
test
xor
mov
jl
mov
data16
push
or
cmpsb
push
xchg
dec
mov
imul
mov
addb
imul
and
pushl
or
pop
push
add
add
add
lods
and
cmp
add
add
js
fnstcw
push
mov
cld
xchg
mov
ljmp
loope
add
push
fidivrl
add
enter
es
pop
insb
mov
repz
inc
cwtl
sahf
dec
rolb
mov
add
sbb
sbb
add
mov
cmpsb
sbb
push
rolb
dec
sbb
repnz
mov
adc
or
mov
and
add
xor
inc
add
xchg
push
loope
rolb
mov
mov
popa
mov
add
add
xor
aam
xchg
loopne
mov
add
mov
jo
mov
stc
push
popf
xor
mov
dec
popa
sahf
jo
mov
or
in
out
ja
and
adc
fld1
in
lods
in
xchg
add
je
lock
lahf
xor
in
sub
rcrl
dec
pop
sub
or
pop
adc
push
inc
jno
add
mov
xchg
cli
adc
mov
push
cmpsb
mov
push
add
add
xor
out
and
daa
push
push
cli
push
int3
jnp
add
jp
add
and
loopne
mov
jecxz
xchg
lcall
mov
mov
insb
and
cmp
rolb
mov
add
ljmp
jb
mov
lcall
icebp
aam
lds
fldt
cmc
push
add
dec
cmpsl
daa
mov
xor
sub
insl
test
mov
out
mov
xor
mov
mov
cmp
cs
add
mov
jge
testl
mov
cli
jnp,pn
add
xchg
add
xor
mov
push
mov
mov
push
push
imulb
nop
add
gs
dec
xchg
scas
js
jmp
add
outsb
or
inc
fcmovb
fs
sub
pop
jno
lret
adc
mov
pop
dec
data16
int
addr16
js
mov
aad
das
test
icebp
push
mov
leave
adc
shrl
mov
cmp
sub
test
fildl
mov
add
rolb
mov
addb
or
fucom
push
notb
call
addr16
pop
rolb
sub
mov
mov
cmp
add
into
or
mov
add
add
mov
pop
lret
add
jp
call
mov
outsl
out
add
int
into
pop
cmp
add
pop
jb
mov
fistps
inc
mov
cmp
push
or
mov
mov
xchg
add
or
add
push
jl
add
sbb
sbb
inc
fcomp
pop
dec
test
adc
mov
clc
rolb
or
add
lret
divl
add
icebp
mov
sbb
jg
je
js
pop
adc
mov
addl
add
add
loop
mov
add
mov
sbb
div
sbb
mov
sub
fptan
add
pop
xor
mov
or
add
and
add
mov
xchg
sub
cmp
ret
and
and
adc
mov
mov
gs
sbb
push
popf
push
push
and
mov
iret
add
add
and
popa
mov
mov
push
add
test
push
jbe
xor
mov
push
loop
mov
xchg
nop
add
push
add
cltd
aaa
aad
stc
pop
aad
cmpsl
push
sub
inc
imul
dec
movsl
mov
mov
add
pop
mov
mov
lock
pop
addb
stos
xchg
mov
addb
push
push
or
add
xor
add
iret
or
add
add
incb
add
pop
movb
xchg
sub
call
stc
rcrl
dec
push
jecxz
add
repz
add
mov
sub
add
jle
add
int
testl
test
test
sbb
lods
push
jno
ficompl
mov
pop
stos
cwtl
negb
mov
push
lea
jno
rorl
dec
rolb
mov
jmp
add
imul
cmp
out
out
and
in
ds
es
add
repz
mov
add
or
fistpl
jecxz
arpl
and
sub
sbb
adc
mov
push
adcl
cmp
mov
movntps
mov
rolb
mov
insl
inc
rolb
test
in
and
add
mov
out
decb
sbb
fmul
rolb
inc
into
mov
std
xchg
push
or
add
test
addl
mov
int3
fstpt
leave
mov
daa
dec
dec
stos
mov
add
jmp
jg
add
loopne
mov
mov
daa
aaa
inc
add
add
rolb
mov
fdivrl
add
mov
movsl
sti
rolb
mov
inc
add
loop
mov
orl
or
cmp
ffree
fmull
lea
add
add
or
push
push
rcll
cmp
lret
add
outsl
inc
add
jecxz
call
sub
mov
jns
jbe
fidivrl
mov
inc
xor
outsl
and
push
fwait
cmpsb
loope
jge
and
in
rcr
cmp
add
cmpsl
xor
mov
movsl
lods
push
pop
cwtl
mov
dec
adc
daa
mov
and
sub
mov
add
mov
cmp
pop
aas
mov
pop
mov
inc
dec
pop
cmp
add
fwait
mov
pop
mov
mov
cmc
mov
xchg
ljmp
sub
xchg
sub
inc
add
add
xchg
add
sub
mov
adc
dec
push
add
mov
stos
pop
movsb
xchg
cmp
add
stos
scas
les
push
push
dec
dec
xchg
add
sub
and
pushf
adc
mov
cs
test
dec
mov
sti
xchg
xchg
dec
stos
jnp
pop
jmp
inc
mov
lret
das
inc
enter
fcompl
add
mov
sub
inc
jno
int
rolb
mov
sub
push
mov
jge
mov
outsl
xor
pop
hlt
xchg
xchg
mov
ljmp
push
out
stos
push
add
cld
xchg
add
mov
xor
mov
addr16
mov
lock
xchg
add
jle
inc
add
cwtl
jmp
jae
jb
mov
jmp
cmp
pop
mov
imul
int3
in
pop
sbb
add
xchg
es
enter
jge
add
add
mov
mov
jo
mov
test
add
mov
sub
std
in
lods
cmp
sbb
mov
sbb
daa
mov
ja
add
sti
push
push
loope
int3
mov
lods
mov
movsl
push
fwait
mov
loope
add
mov
add
pusha
add
int
xchg
add
adc
inc
lret
movb
add
pushf
pop
lods
lret
dec
inc
push
jle
adc
adc
rolb
mov
fnsave
mov
in
add
add
add
sub
push
or
mov
mov
push
cmp
loopne
mov
gs
imul
icebp
cmp
or
push
and
cmp
sub
mov
dec
mov
add
pop
push
setnp
int3
cs
xchg
sub
add
adc
mov
loope
xchg
sbb
sub
or
dec
or
add
adc
and
fildll
cmp
mov
xchg
add
shll
mov
daa
add
mov
adc
call
mov
mov
pop
ret
addr16
lret
fs
add
mov
test
out
mov
cli
cmp
add
jmp
jmp
mov
mov
mov
cmc
in
addr16
dec
cltd
ljmp
mov
xchg
sti
adc
jae
aaa
pop
lock
xor
mov
add
fcom
xchg
mov
inc
shl
fs
lret
movsl
or
and
add
out
lcall
xchg
dec
scas
pop
xchg
xchg
add
fcoml
mov
inc
into
fnstsw
and
fidivl
cmpsb
imull
xchg
rolb
mov
dec
call
adc
jle
add
stc
jns
push
cwtl
fcompl
test
jno
add
imul
repnz
or
mov
xor
xor
mov
cld
or
xchg
lea
pusha
add
cli
jno
imul
xchg
sbb
stc
ds
es
add
ret
push
mov
roll
adc
mov
pop
out
add
mov
or
pusha
add
lock
push
dec
lods
mov
adc
ret
arpl
cmp
in
imul
dec
clc
stos
rorl
push
scas
icebp
flds
rorl
stos
xchg
jp
cmp
outsl
xchg
in
cmp
mov
jmp
and
mov
add
xor
mov
mov
xor
pop
add
cmp
xor
mov
out
mov
shr
sahf
ret
in
shrl
dec
fwait
sahf
add
mov
jg
push
sub
xchg
mov
dec
ds
lods
xchg
stc
xchg
mov
push
adc
and
add
add
mov
or
sub
push
dec
sbb
cmp
sbb
incb
push
sbb
inc
lds
mov
xchg
dec
hlt
iret
sub
mov
sub
lods
imul
mov
mov
dec
or
mov
add
mov
adc
mov
mov
nop
add
clc
repnz
mov
mov
fsubs
push
outsb
repnz
jnp
imul
push
jg
mov
add
movsb
jae
add
loope
pop
fnstenv
mov
mov
add
add
fiaddl
xor
and
xor
test
or
sub
jbe
shll
mov
in
test
push
std
jno
stos
dec
and
fidivrs
arpl
rep
bound
mov
or
mov
or
adc
imul
push
popa
mov
mov
add
lea
mov
adc
xchg
in
insl
xor
mov
push
add
movsb
mov
cld
pop
xchg
add
or
mov
add
jg
cmpsb
dec
mov
or
daa
stos
inc
sub
mov
adc
mov
ficoms
add
mov
cmp
add
mov
add
mov
mov
out
mov
ds
inc
mov
xchg
movl
les
add
pop
iret
inc
repz
add
rolb
jne
mov
and
mov
iret
cmp
jb
mov
mov
aas
decl
sub
jmp
mov
add
lcall
and
prefetch
xchg
mov
jb
mov
insb
and
sub
leave
leave
inc
add
mov
add
add
pop
stos
pop
inc
dec
jno
jne
rolb
xchg
add
mov
lret
push
in
in
enter
cmpsb
nop
add
add
pop
pusha
add
push
loope
jge
add
int3
shll
mov
mov
mov
add
fsubs
test
inc
add
push
add
add
add
add
mov
out
add
out
xor
ret
push
ret
lods
fstps
add
outsl
jmp
jge
mov
stos
int
cmpsl
jae
pusha
add
int3
mov
inc
add
test
out
push
in
add
mov
add
int3
popf
cmc
into
in
and
mov
out
pop
bound
mov
lds
pop
pop
int3
or
mov
and
add
fnsave
add
aad
imul
pop
adc
inc
aam
divb
dec
sub
out
ret
jmp
sets
rolb
push
xor
mov
popa
lret
fistl
add
add
mov
mov
add
inc
add
pusha
add
push
ss
inc
add
jne
test
add
dec
rolb
mov
jl
add
out
insl
inc
scas
xchg
dec
jecxz
and
pop
int3
aaa
daa
jns
add
mov
add
icebp
push
push
hlt
cmp
add
add
mov
fmull
xchg
add
xlat
xor
mov
clc
icebp
dec
not
add
sbbl
scas
push
aaa
fbstp
fxch
je
sub
push
aas
out
add
repnz
xchg
xor
cmp
mov
pop
mov
xor
mov
in
daa
lds
nop
add
xchg
jge
mov
and
xor
mov
imul
add
pop
out
imul
xor
test
repnz
dec
lock
mov
into
int
les
add
nop
add
mov
xor
mov
push
lret
rolb
mov
out
imul
mov
rcll
subl
push
add
add
bound
mov
add
add
jge
cld
ds
jg
push
dec
int3
push
mov
add
add
add
xor
mov
cmp
sbb
or
add
or
inc
mov
add
popf
repnz
push
icebp
pop
mov
jmp
lock
mov
mov
mov
mov
nop
add
stc
or
add
fwait
je
xlat
xchg
xchg
inc
das
out
repnz
rorl
sub
adc
cmp
mov
cmpsl
rolb
arpl
mov
add
dec
icebp
mov
andl
xor
mov
mov
jmp
loopne
mov
jle
and
fisttpll
loopne
mov
add
sub
ret
testb
xchg
inc
inc
fiadds
add
mov
mov
xchg
push
pop
sub
add
dec
push
jb
mov
mov
scas
and
add
mov
sbb
cld
repnz
mov
lock
jecxz
push
mov
das
std
pop
stos
in
cwtl
sbb
aam
inc
pop
insb
and
mov
or
testl
rolb
mov
je
aas
or
jbe
jbe
xchg
clc
and
cmpsb
pop
mov
int3
addb
jne
fisubs
std
push
test
lcall
mov
add
f2xm1
add
cmp
xor
arpl
rolb
mov
push
sub
ffreep
add
aad
mov
push
std
jp
jg
cli
out
cmc
add
jl
add
dec
xor
add
je
mov
inc
cli
dec
pop
out
jae
jb
mov
pop
ljmp
mov
mov
mov
es
test
mov
in
add
js
and
mov
lea
nop
add
fstpt
inc
add
repnz
jae
dec
leave
lldt
mov
push
clc
repnz
jae
add
dec
add
clc
repnz
jae
cpuid
add
mov
push
mov
xchg
ret
add
roll
xor
xchg
ret
mov
cld
nop
jmp
add
add
add
sbb
add
repnz
jae
jbe
loop
repnz
add
repnz
jae
add
cltd
pop
add
call
clc
repnz
jae
add
cmp
cld
nop
jmp
add
add
enter
mov
push
mov
xchg
ret
add
lods
leave
leave
loope
mov
clc
repnz
jae
loop
cmp
ret
cmp
jae
add
fisubl
add
into
pusha
fwait
cld
nop
jmp
jbe
mov
add
add
cld
nop
jmp
cltd
mov
sbbl
and
fwait
cld
nop
jmp
add
mov
push
mov
xchg
ret
es
subl
nop
jae
add
adc
push
mov
cmc
stc
add
imul
add
xor
cmp
add
inc
add
and
add
add
mov
push
mov
xchg
ret
add
loope
mov
nop
jae
pop
add
cltd
cmp
hlt
cmc
outsl
mov
push
mov
xchg
ret
add
leave
adc
push
mov
xchg
ret
xchg
add
data16
add
nop
jae
push
cmp
push
cmp
add
add
add
sub
add
add
push
mov
xchg
ret
out
add
dec
jl
test
repnz
jae
xchg
add
add
cmp
mov
clc
repnz
jae
push
add
adc
add
repnz
jae
add
mov
push
mov
add
loopne
enter
hlt
add
mov
push
mov
xchg
ret
data16
cltd
mov
repnz
jae
add
dec
add
add
sldt
clc
repnz
jae
add
sbb
data16
repnz
jae
add
add
arpl
lret
clc
repnz
jae
push
pop
mov
je
mov
test
fwait
cld
nop
jmp
push
sahf
or
jbe
jb
mov
flds
clc
repnz
jae
add
or
nop
jae
out
enter
add
sbb
in
inc
add
add
jb
mov
mov
fwait
cld
nop
jmp
enter
cltd
loope
pop
push
mov
xchg
ret
xchg
add
jb
mov
push
mov
ljmp
add
inc
add
add
fwait
cld
nop
jmp
push
data16
add
clc
repnz
jae
add
add
rcrl
add
add
repnz
jae
rcrl
push
mov
xchg
ret
add
mov
mov
push
and
add
adc
mov
inc
cmp
scas
push
decl
jns
icebp
add
add
jb
xchg
out
pop
clc
repnz
jae
add
add
add
es
add
inc
aas
add
clc
repnz
jae
add
add
push
add
rcll
sar
nop
jae
dec
add
enter
add
clc
repnz
jae
add
or
sub
cli
clc
repnz
jae
cltd
add
add
out
adc
mov
add
add
add
cltd
shll
and
mov
sub
popa
add
repnz
jae
cmp
shll
mov
jno
clc
repnz
jae
popa
mov
xchg
add
add
add
add
add
add
dec
add
inc
add
add
repnz
jae
out
xchg
sbb
roll
stos
fwait
cld
nop
jmp
add
add
add
add
mov
xchg
ret
add
push
roll
jbe
mov
mov
repnz
jae
cltd
sub
data16
dec
fwait
cld
nop
jmp
testl
xchg
add
add
push
add
fwait
cld
nop
jmp
add
xor
repnz
jae
add
add
mov
repnz
jae
lahf
add
add
and
add
xchg
clc
repnz
jae
push
add
add
sbb
clc
repnz
jae
fldcw
cltd
lahf
add
sub
lods
add
clc
repnz
jae
add
fidivl
leave
cs
mov
add
mov
jno
mov
add
int3
inc
ficoml
repnz
jae
je
add
add
add
daa
sbb
arpl
cld
nop
jmp
sarl
add
data16
push
mov
add
fucomip
sbb
push
outsb
clc
std
adc
insl
cmpl
push
mov
xchg
ret
enter
pop
mov
clc
repnz
jae
sbb
decl
fcomi
inc
add
add
pop
and
push
mov
xchg
ret
add
add
pop
out
add
push
push
mov
xchg
ret
je
add
add
add
jmp
add
push
add
mov
fnstenv
add
nop
jae
add
add
lds
nop
jmp
add
add
pop
add
jo
mov
mov
popa
clc
repnz
jae
xchg
shll
add
repnz
jae
xchg
popa
out
mov
add
mov
cld
nop
jmp
push
roll
jo
add
pop
pushf
mov
push
mov
xchg
ret
add
add
dec
jne
fwait
cld
nop
jmp
cmp
push
push
mov
xchg
ret
pop
and
mov
add
nop
jmp
lods
add
lea
popa
adc
adc
mov
nop
jae
add
add
add
fmul
inc
add
data16
pop
push
mov
xchg
ret
loop
cmp
dec
add
jno
add
pop
loop
add
cltd
addl
lea
mov
xor
cmp
ret
add
flds
mov
lods
add
je
pop
xorl
idivl
negl
je
popa
jbe
xchg
repnz
jae
jmp
add
add
mov
lret
and
clc
repnz
jae
add
add
leave
ret
std
push
clc
repnz
jae
add
dec
out
or
dec
add
fwait
cld
nop
jmp
nop
add
adc
clc
repnz
jae
lea
add
imul
jae
add
push
adc
add
cmp
test
add
clc
repnz
jae
xor
add
jg
clc
repnz
jae
enter
add
movsb
insb
mov
fwait
cld
nop
jmp
testl
add
push
mov
xchg
ret
add
add
les
lret
xchg
ret
xchg
out
dec
add
cltd
insl
cmp
fwait
cld
nop
jmp
add
loop
cltd
sbb
add
push
push
mov
xchg
ret
mov
add
cltd
call
clc
repnz
jae
add
push
push
adc
into
je
clc
repnz
jae
add
call
jae
add
cmp
popa
or
loopne
inc
add
data16
add
clc
repnz
jae
add
jo
cmp
push
clc
repnz
jae
dec
testl
mov
mov
xchg
ret
andl
add
add
repnz
jae
add
mov
popf
pop
push
mov
xchg
ret
sbb
add
sarl
mov
fwait
cld
nop
jmp
popa
jbe
lods
dec
sub
scas
enter
jmp
lods
cmp
add
sahf
data16
jae
add
add
add
add
arpl
jae
mov
add
data16
mov
push
cmc
inc
add
add
add
mov
repnz
jae
add
sub
add
sub
push
mov
xchg
ret
dec
out
push
add
mov
add
clc
repnz
jae
mov
add
clc
repnz
jae
add
add
lods
out
mov
push
mov
xchg
ret
movsb
mov
pop
xchg
adc
fwait
cld
nop
jmp
add
add
add
xchg
clc
repnz
jae
enter
add
insb
inc
jb
clc
repnz
jae
sub
cmp
adc
lret
inc
add
cmp
add
cld
mov
fwait
cld
nop
jmp
add
dec
out
add
loop
clc
repnz
jae
add
add
loopne
repnz
jae
pop
lods
popa
jl
cltd
adcl
mov
mov
clc
repnz
jae
fiaddl
add
adc
mov
cmp
nop
jae
push
dec
dec
jmp
mov
xlat
add
add
aas
pop
mov
add
rolb
repnz
jae
add
pop
mov
add
add
push
mov
xchg
ret
lods
add
movsb
and
xchg
lea
push
mov
xchg
ret
loop
add
add
push
mov
xchg
ret
add
add
es
dec
je
fwait
cld
nop
jmp
mov
add
out
cs
clc
repnz
jae
add
xchg
add
add
fwait
cld
nop
jmp
lahf
pop
roll
mov
clc
repnz
jae
jbe
xchg
cmovp
push
mov
add
nop
jae
lahf
add
mov
add
ds
clc
repnz
jae
add
add
add
inc
aaa
out
add
cld
or
jmp
add
add
ja
jl
repnz
repnz
jae
cltd
pop
add
mov
test
add
clc
repnz
jae
push
cmp
addb
loop
mov
add
clc
repnz
jae
mov
push
mov
xchg
ret
add
add
inc
add
add
repnz
jae
add
mov
test
repnz
jae
mov
jne
push
mov
xchg
ret
xor
addw
add
clc
repnz
jae
add
repz
add
sub
adc
and
jbe
jl
add
mov
clc
repnz
jae
pop
add
dec
mov
add
pop
clc
repnz
jae
add
leave
les
mov
adc
cld
nop
jmp
add
cmp
jl
pop
addr16
repz
push
clc
repnz
jae
add
add
add
push
shl
addb
or
nop
jae
dec
add
add
push
mov
xchg
ret
pop
push
flds
add
fldl
nop
jae
dec
add
add
popa
or
test
add
clc
repnz
jae
sahf
loope
dec
jne
clc
repnz
jae
lea
popa
or
data16
xchg
ret
xchg
lods
add
jne
mov
push
mov
xchg
ret
add
add
add
push
mov
push
mov
xchg
ret
xchg
pxor
add
fwait
cld
nop
jmp
mov
add
add
dec
call
fwait
cld
nop
jmp
loope
sbb
data16
loop
mov
ret
xor
mov
mov
clc
repnz
jae
add
mov
test
sbb
add
repnz
jae
xchg
loope
inc
add
shl
clc
repnz
jae
add
xchg
add
add
fwait
cld
nop
jmp
les
add
dec
push
jbe
je
clc
repnz
jae
mov
cmp
out
xor
push
mov
xchg
ret
and
mov
add
clc
repnz
jae
jl
movsb
roll
add
add
and
push
mov
xchg
ret
push
pop
pop
mov
nop
jmp
jo
inc
add
pop
add
mov
clc
repnz
jae
pop
mov
push
mov
fwait
cld
nop
jmp
add
add
clc
repnz
jae
add
add
push
fmuls
repnz
jae
add
push
sbb
mov
add
repnz
jae
out
out
inc
lea
or
add
dec
add
pop
jo
cltd
sbb
jne
push
mov
xchg
ret
pop
add
clc
repnz
jae
add
add
sahf
je
jmp
add
repnz
jae
add
loope
shld
repnz
jae
add
pop
rcrl
clc
repnz
jae
flds
add
and
sahf
adc
nop
jae
psubusw
add
pop
mov
out
out
add
fwait
cld
nop
jmp
push
adc
sbb
jo
or
nop
jmp
cmp
sbb
data16
add
loop
push
mov
xchg
ret
or
add
push
mov
fwait
cld
nop
jmp
pop
xchg
add
leave
add
dec
jne
clc
repnz
jae
add
cmp
mov
clc
repnz
jae
data16
cmp
push
mov
xchg
ret
add
mov
fwait
cld
nop
jmp
add
mov
mov
fwait
cld
nop
jmp
add
xor
sbb
cltd
xchg
sbb
clc
repnz
jae
mov
fiaddl
je
add
clc
repnz
jae
cmp
push
add
leave
add
clc
repnz
jae
flds
add
pop
push
idivl
popa
fwait
cld
nop
jmp
add
add
mov
dec
emms
leave
xor
fwait
cld
nop
jmp
push
enter
add
add
pop
clc
repnz
jae
add
add
add
clc
repnz
jae
cmp
roll
push
mov
mov
xchg
ret
add
add
add
popa
idivl
jae
adc
fiaddl
les
mov
clc
repnz
jae
jo
add
dec
push
clc
repnz
jae
add
add
pop
push
out
dec
or
nop
jae
add
sldt
data16
pop
dec
fwait
cld
nop
jmp
out
flds
dec
leave
add
rorl
inc
add
add
mov
test
adc
add
repnz
jae
fiaddl
add
adc
mov
mov
jne
clc
repnz
jae
and
add
add
jae
loop
add
cmp
mov
stc
xor
clc
repnz
jae
push
push
and
add
add
clc
repnz
jae
enter
push
clc
repnz
jae
mov
sahf
push
data16
inc
and
add
inc
push
mov
xchg
ret
cmp
pop
xor
clc
repnz
jae
out
mov
cmp
clc
repnz
jae
loope
add
data16
pusha
fwait
cld
nop
jmp
add
roll
add
pop
fs
pusha
clc
repnz
jae
psubusw
add
add
and
imul
add
sldt
mov
and
clc
repnz
jae
sub
mov
push
mov
out
add
inc
mov
add
add
dec
scas
push
mov
mov
mov
xchg
jno
add
push
add
repnz
jae
add
jl
daa
dec
add
clc
repnz
jae
add
pop
add
fwait
cld
nop
jmp
les
add
dec
and
clc
repnz
jae
add
cmp
enter
fwait
cld
nop
jmp
jo
add
add
fimull
xor
clc
repnz
jae
push
add
add
sub
add
fwait
cld
nop
jmp
mov
addl
mov
mov
cmp
mov
add
repnz
jae
add
orl
adc
mov
cmp
add
add
clc
repnz
jae
cmp
push
or
clc
repnz
jae
add
sarl
cmp
add
mov
cmp
ret
shll
add
jmp
cld
nop
jmp
lods
add
movsb
fstps
add
jmp
jo
inc
add
es
mov
sbb
repnz
jae
add
data16
mov
xchg
fadds
xchg
ret
push
lldt
add
add
add
ljmp
push
add
imul
fcmovnbe
inc
add
cltd
push
add
data16
sbb
repz
mov
xchg
ret
lea
rolb
aaa
inc
or
mov
xchg
ret
sub
data16
add
jmp
rcrl
add
add
enter
push
mov
xchg
ret
add
cmovs
jae
add
rcrl
or
fwait
cld
nop
jmp
add
add
push
add
sub
mov
xchg
ret
add
add
xchg
add
mov
xchg
ret
push
sahf
push
jbe
pop
xor
clc
repnz
jae
movntq
out
push
mov
clc
repnz
jae
jbe
add
pop
jae
cld
nop
jmp
fnstcw
popw
lahf
imul
cld
nop
jmp
out
jl
add
add
repnz
jae
add
fsts
add
not
repnz
pop
clc
repnz
jae
mov
pop
cltd
lods
fdivp
sar
repnz
jae
pop
push
dec
cmp
sub
popa
add
repnz
jae
dec
push
add
cmp
ret
clc
repnz
jae
imul
enter
add
in
fadds
nop
jmp
mov
add
pop
push
mov
xchg
ret
fiaddl
add
xor
or
stos
clc
repnz
jae
add
popa
add
add
fwait
cld
nop
jmp
and
mov
jnp
clc
repnz
jae
add
add
loope
xor
mov
fs
repnz
jae
add
movzbl
add
clc
repnz
jae
add
push
testl
add
mov
xchg
ret
add
cmp
lahf
xor
push
mov
xchg
ret
sub
mov
mov
clc
repnz
jae
push
mov
ds
clc
repnz
jae
add
mov
fdivr
repnz
jae
leave
add
add
out
sbb
mov
adc
repnz
jae
add
jo
add
pop
push
mov
xchg
ret
out
add
add
add
nop
jae
and
testl
add
mov
xchg
ret
es
add
push
add
nop
jae
add
lahf
add
str
add
nop
jae
cltd
add
setg
xchg
lahf
mov
fwait
cld
nop
jmp
and
jo
add
add
or
clc
repnz
jae
dec
cmp
data16
subl
mov
add
addl
or
repnz
jae
push
out
add
sbb
cmp
repnz
jae
xor
loope
add
xor
nop
jae
sub
clc
repnz
jae
add
jl
add
nop
jae
add
cmp
add
clc
repnz
jae
add
add
ltr
jae
roll
xchg
sbb
pop
pop
loop
add
clc
repnz
jae
and
add
imull
add
mov
inc
cmp
stc
clc
repnz
jae
add
add
add
add
add
clc
repnz
jae
testl
push
mov
mov
push
mov
xchg
ret
pop
mov
ss
xchg
je
jne
add
clc
repnz
jae
mov
mov
and
clc
repnz
jae
sub
dec
add
les
jae
add
add
pop
add
subl
clc
repnz
jae
cltd
lods
add
push
inc
mov
mov
shrl
add
push
add
xor
mov
pusha
push
mov
xchg
ret
dec
push
cmp
sbbl
jae
movzwl
clc
repnz
jae
cmp
push
loope
fcoml
mov
xchg
ret
add
leave
add
cmp
clc
repnz
jae
mull
jno
xor
mov
enter
xor
add
clc
repnz
jae
mov
loop
push
mov
xchg
ret
add
mov
sarl
nop
jae
xor
sbb
add
mov
push
mov
xchg
ret
add
fadds
xchg
ret
data16
add
add
add
clc
repnz
jae
je
add
icebp
fwait
cld
nop
jmp
loop
sbb
add
cltd
add
jmp
add
add
add
imul
clc
repnz
jae
lahf
add
add
add
jmp
add
push
add
dec
add
repnz
jae
xchg
add
or
xchg
xchg
repz
push
push
mov
xchg
ret
and
loope
leave
out
mov
mov
clc
repnz
jae
add
cmp
push
mov
xchg
ret
add
push
loop
add
repnz
jae
cmp
add
adc
lret
clc
repnz
jae
add
add
push
push
loop
je
clc
repnz
jae
push
sbb
adc
sub
nop
jmp
add
or
movb
mov
inc
add
push
sbbl
nop
jae
add
data16
xor
out
dec
fwait
cld
nop
jmp
sbb
pop
mov
add
mov
mov
clc
repnz
jae
sahf
add
cltd
inc
stos
push
fwait
cld
nop
jmp
xchg
mov
add
jb
mov
xchg
add
push
mov
xchg
ret
add
leave
add
lods
push
clc
repnz
jae
add
sub
mov
mov
jmp
jae
jmp
add
data16
jmp
movsb
add
out
add
and
push
mov
xchg
ret
add
add
clc
repnz
jae
add
sahf
add
jmp
into
xorl
fwait
cld
nop
jmp
cltd
dec
add
mov
clc
repnz
jae
add
add
int
cs
insb
fwait
cld
nop
jmp
add
add
xchg
lcall
sub
add
add
cmp
clc
add
clc
repnz
jae
sldt
jo
mov
mov
fwait
cld
nop
jmp
add
add
movlps
movb
mov
xchg
ret
roll
add
lods
push
push
mov
xchg
ret
cmp
pop
add
mov
pop
mov
fwait
cld
nop
jmp
pop
fcmovu
dec
loope
mov
idiv
lcall
out
jmp
adc
popa
loope
xor
clc
repnz
jae
pop
pop
out
add
repnz
jae
add
push
adc
loop
push
mov
xchg
ret
add
mov
les
add
add
repnz
jae
add
sahf
push
push
mov
xchg
ret
add
add
addl
push
dec
mov
clc
repnz
jae
add
faddl
jmp
cmp
out
dec
add
clc
repnz
jae
add
jns
push
mov
xchg
ret
dec
out
jbe
movsb
add
add
clc
repnz
jae
add
pop
shrl
adc
xchg
stc
jmp
and
or
repnz
jae
roll
add
and
adc
cmpsb
and
mov
fwait
cld
nop
jmp
add
add
imul
add
add
repnz
jae
or
and
fwait
cld
nop
jmp
xchg
pop
jae
xor
push
mov
xchg
ret
lods
les
add
lea
clc
repnz
jae
push
pop
sbb
adc
nop
jae
lahf
add
add
mov
jne
fwait
cld
nop
jmp
add
popa
add
jne
clc
repnz
jae
add
data16
fwait
cld
nop
jmp
add
enter
cmp
cld
nop
jmp
sub
add
add
repnz
jae
xchg
out
add
add
rcll
nop
jmp
add
mov
jg
clc
repnz
jae
or
add
add
out
inc
add
add
add
popa
and
jl
clc
repnz
jae
pop
add
sbb
in
add
xchg
sbb
push
add
cld
nop
jmp
add
add
pop
stos
push
mov
xchg
ret
mov
add
mov
mov
add
clc
repnz
jae
movsb
fiaddl
add
or
repnz
jae
shll
data16
mov
mov
push
or
jmp
jae
add
popa
cmp
xor
jmp
pop
jl
sub
add
push
add
add
sub
test
cli
clc
repnz
jae
out
movaps
stos
clc
repnz
jae
roll
add
dec
lea
fwait
cld
nop
jmp
pop
push
mov
add
pop
fwait
cld
nop
jmp
add
and
xor
call
clc
repnz
jae
add
add
pop
je
clc
repnz
jae
add
and
incl
nop
jmp
add
jl
cmp
cmp
clc
repnz
jae
popa
jo
push
dec
rep
push
mov
xchg
ret
xor
add
pmaddwd
and
add
repnz
jae
xchg
dec
loope
add
add
cld
nop
jmp
jl
xchg
addl
add
adc
repnz
jae
add
and
clc
repnz
jae
or
add
add
insb
push
push
mov
xchg
ret
sbb
sub
out
add
xbegin
inc
add
add
add
push
movsl
repnz
add
clc
repnz
jae
add
add
add
or
add
jmp
add
cli
push
clc
repnz
jae
cmp
push
add
add
push
mov
xchg
ret
add
push
pop
out
call
clc
repnz
jae
out
add
push
cmpsb
lret
clc
repnz
jae
movsb
push
cltd
add
dec
push
push
mov
xchg
ret
roll
les
add
add
fwait
cld
nop
jmp
mov
add
add
add
repnz
repnz
jae
jl
mov
clc
clc
repnz
jae
jo
enter
mov
call
clc
repnz
jae
add
pop
add
icebp
fwait
cld
nop
jmp
push
clts
xor
sbb
popa
cmpl
jae
push
addl
incb
sti
clc
repnz
jae
add
add
add
aad
mov
clc
repnz
jae
fstps
dec
into
inc
add
push
sbb
add
push
lea
clc
repnz
jae
dec
movsb
add
loope
insb
cmpl
fwait
cld
nop
jmp
data16
mov
nop
jmp
lahf
add
fiaddl
sub
lods
jne
clc
repnz
jae
pop
popa
cmp
xor
inc
add
pop
xchg
add
add
pop
pop
push
mov
xchg
ret
xchg
mov
add
mov
fwait
cld
nop
jmp
push
add
mov
xchg
ret
pcmpgtd
and
mov
clc
repnz
jae
nopl
ret
clc
repnz
jae
mov
mov
call
and
add
cmp
cld
nop
jmp
cmp
and
push
add
add
add
fwait
cld
nop
jmp
add
add
call
xchg
icebp
inc
add
and
fldenv
cld
add
clc
repnz
jae
add
sahf
add
clc
repnz
jae
add
add
clc
repnz
jae
mov
add
push
fwait
cld
nop
jmp
mov
jo
addl
mov
fwait
cld
nop
jmp
add
add
dec
adc
cmp
push
mov
xchg
ret
loope
popa
add
mov
clc
repnz
jae
xchg
xchg
lea
add
pop
push
mov
xchg
ret
jmp
dec
loop
add
ja
add
clc
repnz
jae
loope
sahf
fisttpll
inc
add
add
fiaddl
shrl
movb
repnz
jae
add
add
cmp
add
add
jbe
inc
add
add
clc
repnz
jae
add
cltd
sahf
mov
or
cld
nop
jmp
jl
add
out
adc
cmp
nop
jae
add
dec
mov
clc
repnz
jae
add
xor
push
clc
repnz
jae
loope
pop
add
push
add
mov
push
mov
xchg
ret
add
add
dec
add
aam
and
add
push
mov
xchg
ret
sldt
jl
add
mov
clc
repnz
jae
es
dec
pmaddwd
mov
fiadds
xchg
ret
add
sub
add
repnz
jae
add
cmp
adc
dec
movzwl
clc
repnz
jae
and
fisubl
repnz
jae
add
pop
add
repnz
jae
add
xchg
add
add
jmp
push
pop
sbb
and
loop
add
add
xor
in
lcall
push
push
add
testl
mov
push
clc
repnz
jae
add
cltd
add
add
add
call
clc
repnz
jae
mov
mov
inc
lcall
dec
pop
add
add
add
inc
add
add
ret
fwait
cld
nop
jmp
psrlq
push
push
add
add
push
mov
nop
jae
add
enter
mov
cld
nop
jmp
mov
lods
cmp
mov
fwait
cld
nop
jmp
add
or
lds
cld
nop
jmp
add
rorl
adc
jmp
add
pop
mov
add
jns
dec
cmp
repnz
jae
and
leave
or
mov
clc
repnz
jae
and
add
shrl
xchg
cwtl
push
push
mov
xchg
ret
mov
pop
cmp
clc
repnz
jae
rol
add
add
jae
fwait
cld
nop
jmp
setg
clc
repnz
jae
cmp
add
andl
arpl
xor
add
repnz
jae
add
add
mov
mov
fwait
cld
nop
jmp
push
add
pinsrw
add
incl
jl
jmp
cmp
add
pop
push
mov
xchg
ret
pop
xchg
adc
sldt
push
clc
repnz
jae
add
popa
add
add
push
add
jae
loopne
add
add
push
and
nop
jae
enter
add
cmc
test
clc
repnz
jae
idivl
repnz
jae
add
popa
add
rolb
mov
cmp
iret
inc
add
add
mov
clc
repnz
jae
adc
xor
mov
pop
in
loope
add
mov
clc
repnz
jae
data16
pop
xor
push
mov
xchg
ret
add
inc
push
add
and
cmp
ret
je
fcmovu
or
add
repz
cld
nop
jmp
lods
push
mov
dec
xor
push
mov
xchg
ret
add
mov
loope
inc
cmp
clc
repnz
jae
lahf
add
add
jo
push
push
mov
inc
add
cmp
enter
add
xlat
pop
jne
clc
repnz
jae
add
rcrl
add
clc
repnz
jae
out
sbb
call
clc
repnz
jae
sahf
add
ja
clc
repnz
jae
add
data16
mov
push
mov
xchg
ret
setns
mov
jne
clc
repnz
jae
and
add
mov
push
mov
xchg
ret
add
add
call
clc
repnz
jae
out
and
and
repnz
jae
add
add
xchg
pop
mov
adc
repnz
jae
add
add
add
dec
add
mov
xchg
ret
or
add
add
call
clc
repnz
jae
xchg
je
add
clc
repnz
jae
fldenv
xchg
jmp
les
ss
lods
push
mov
xchg
ret
mov
xchg
add
jae
add
add
add
jl
sbb
cld
nop
jmp
add
dec
cltd
roll
push
add
rolb
rolb
adc
mov
mov
clc
repnz
jae
sub
add
jbe
fmull
nop
jae
add
add
dec
push
cmp
push
mov
xchg
ret
loop
cmp
les
mov
xchg
ret
movsbl
lock
add
inc
ljmp
out
mov
cmpl
inc
in
push
mov
xchg
ret
add
xor
fcmovb
mov
repnz
jae
and
add
cmp
enter
jae
add
and
add
push
mov
add
jl
xor
xor
add
or
clc
repnz
jae
addl
cmp
clc
repnz
jae
les
mov
clc
repnz
jae
sahf
add
cmp
fwait
cld
nop
jmp
lahf
add
add
setns
incl
add
xchg
add
add
add
sub
clc
repnz
jae
add
push
jne
pop
push
fwait
cld
nop
jmp
pop
sub
dec
je
add
das
jmp
add
add
add
add
dec
lahf
pop
es
push
add
and
mov
xchg
ret
add
add
xor
clc
repnz
jae
mov
jmp
fwait
cld
nop
jmp
add
ficompl
add
add
sub
mov
mov
xchg
ret
add
add
dec
push
clc
repnz
jae
add
jmp
add
add
mov
insl
add
push
mov
xchg
ret
loope
add
push
mov
pop
jge
add
mov
pop
adc
clc
repnz
jae
add
add
data16
cld
movswl
clc
repnz
jae
out
lods
push
cmp
clc
repnz
jae
fnstcw
push
sarl
dec
outsl
popa
fs
repnz
jae
movsb
data16
add
nop
jae
add
lea
and
push
testl
nop
jae
add
mov
add
add
repnz
jae
add
mov
pop
jb
clc
repnz
jae
pop
add
lea
mov
xchg
ret
dec
movsb
movsb
add
sbb
push
mov
xchg
ret
loope
mov
push
add
clc
repnz
jae
lea
jl
add
xchg
out
clc
repnz
jae
jbe
add
imul
aad
jmp
add
jne
fwait
cld
nop
jmp
add
sbb
cld
nop
jmp
jmp
sldt
add
or
clc
repnz
jae
enter
pop
mov
clc
repnz
jae
sbb
scas
cmpw
fwait
cld
nop
jmp
pop
jl
add
and
mov
test
jecxz
clc
repnz
jae
jbe
add
cmc
lods
mov
push
mov
xchg
ret
add
data16
add
imul
clc
repnz
jae
add
add
mov
repnz
loop
fwait
cld
nop
jmp
add
add
add
add
mov
clc
repnz
jae
add
fld
clc
repnz
jae
mov
add
rorl
popa
add
cld
nop
jmp
add
jbe
add
jbe
fwait
cld
nop
jmp
mov
cltd
add
add
repnz
jae
add
fimull
jae
pop
add
add
add
push
jmp
add
add
add
add
jo
add
lea
push
mov
xchg
ret
sub
xor
inc
add
add
mov
mov
xchg
ret
sbb
push
push
rcll
push
mov
xchg
ret
add
mov
les
adc
and
clc
repnz
jae
add
add
cwtd
das
add
fwait
cld
nop
jmp
add
push
inc
leave
add
mov
push
mov
xchg
ret
add
enter
dec
add
mov
xchg
ret
mov
mov
mov
clc
repnz
jae
push
add
ja
outsb
je
repnz
jae
push
popa
mov
ljmp
nop
jae
add
data16
insl
push
mov
fstpt
add
or
add
add
add
rolb
ljmp
fwait
cld
nop
jmp
add
add
lea
fwait
cld
nop
jmp
add
popa
popa
add
xor
clc
repnz
jae
add
add
in
decl
clc
repnz
jae
sahf
add
dec
or
stc
les
clc
repnz
jae
mov
aas
shr
push
mov
xchg
ret
add
add
add
or
jle
fisttpll
add
je
clc
repnz
jae
cmp
push
push
mov
xchg
ret
add
loope
add
add
sahf
movswl
clc
repnz
jae
data16
les
in
push
add
xor
add
clc
repnz
jae
and
and
cld
nop
jmp
out
pcmpgtd
push
add
les
jne
clc
repnz
jae
add
and
mov
mov
xchg
ret
out
add
mov
mov
or
add
repnz
jae
movsb
sbb
mov
mov
repnz
jae
roll
xchg
sbb
cmp
clc
repnz
jae
dec
je
out
add
and
mov
xchg
lahf
pop
push
mov
xchg
ret
add
sbb
data16
int3
dec
clc
repnz
jae
popa
add
and
add
jbe
add
pop
pop
fwait
cld
nop
jmp
add
cltd
add
pop
add
je
mov
push
mov
xchg
ret
jmp
add
lret
add
add
repnz
jae
dec
add
or
clc
repnz
jae
add
add
clc
repnz
jae
add
add
add
jmp
push
pop
add
shll
mov
pop
mov
clc
repnz
jae
or
pop
add
add
clc
repnz
jae
add
repnz
jae
leave
add
popf
push
fwait
cld
nop
jmp
je
cmp
add
add
repnz
jae
add
les
sar
nop
jae
add
lea
jle
jb
push
mov
xchg
ret
or
add
repnz
jae
add
lods
inc
push
mov
xchg
ret
jo
add
push
bswap
push
clc
repnz
jae
loop
add
add
push
clc
repnz
jae
add
add
push
mov
lret
add
add
aad
add
add
inc
mov
jmp
pop
add
mov
pop
push
add
jecxz
xchg
inc
mov
mov
adc
mov
add
jo
mov
cmp
mov
push
add
gs
inc
add
mov
rcl
das
adc
mov
rolb
xor
mov
clc
add
jne
cmpsl
cs
jmp
fsubr
out
test
push
scas
dec
jnp
clc
push
adc
mov
in
xchg
sub
pop
rcr
xorl
or
mov
push
mov
imul
aas
out
xor
mov
inc
enter
mov
and
sub
cld
jmp
cmp
movsl
mov
dec
bound
mov
fs
loop
mov
add
sub
mov
dec
int3
sbb
inc
xchg
fldcw
dec
rolb
mov
cmp
inc
push
add
or
sahf
mov
jns
or
push
lea
mov
outsb
pop
xchg
rolb
mov
add
fistps
jmp
movsl
pusha
add
pop
or
sbb
xor
xor
mov
mov
adc
cli
inc
xchg
add
mov
jno
xor
mov
xor
mov
inc
push
int
and
cld
icebp
rcrl
add
jb
mov
or
xor
call
xchg
adc
inc
add
dec
icebp
jo
mov
daa
push
addb
mov
mov
insb
cmp
sbb
call
ljmp
mov
add
xor
imul
add
mov
mov
cmp
cs
xchg
and
rolb
mov
sbb
jbe
movsb
daa
movsb
aad
call
setp
fisubrs
out
cmp
push
fbstp
sbb
in
in
addb
inc
fidivrs
movsl
lods
dec
xchg
std
sbb
xor
clc
ja
push
data16
fiadds
stos
insb
xchg
bound
mov
fcoms
out
ret
mov
inc
mov
sti
xchg
leave
in
testl
jno
xchg
xchg
lea
xorl
xlat
mov
add
xchg
add
cmp
mov
bound
mov
add
in
or
or
jbe
add
dec
add
mov
xor
in
les
insb
call
adc
out
cmp
push
es
inc
add
aad
inc
f2xm1
add
and
mov
pop
loope
stc
adc
adc
dec
push
and
fsin
xor
add
push
push
add
add
jp
push
xchg
pop
push
dec
adc
lock
shl
jo
mov
out
push
add
add
outsb
out
xchg
or
out
push
fisubl
add
add
sti
add
div
xchg
addb
jmp
jl
push
or
add
adc
mov
xchg
pop
push
push
adc
mov
mov
sbbl
out
mov
mov
jle
xor
mov
in
rolb
mov
repz
mov
pop
fisubrs
jb
mov
mov
iret
and
dec
scas
sub
jg
cmp
mov
or
cwtl
sbb
mov
pop
stos
into
sbb
ret
bndldx
pop
ja
inc
in
add
mov
xchg
add
pusha
add
push
and
movsb
mov
aaa
mov
add
or
mov
mov
pop
lea
pop
cmp
add
xchg
cmc
jno
sub
ss
movsl
mov
arpl
pop
pop
push
inc
add
mov
sub
push
cmp
push
mov
jmp
mov
shrl
pop
mov
jne
add
add
xor
dec
adc
mov
jle
mov
pop
jnp
test
pop
repnz
lock
add
push
add
outsb
pop
in
inc
add
and
lret
cmp
mov
aas
xor
mov
ret
addr16
inc
sub
rolb
cmp
negl
push
dec
insl
lods
mov
jne
add
icebp
push
or
adc
mov
jno
andl
or
add
in
imul
out
or
mov
push
and
mov
xchg
incl
pop
rolb
mov
add
mov
dec
into
mov
pop
test
add
stos
xchg
icebp
inc
add
lret
cli
lahf
outsb
dec
and
sti
test
iret
pop
add
and
imul
hlt
xor
add
mov
inc
outsl
in
repz
inc
cld
adc
mov
push
call
lcall
pushf
jg
sub
xor
jmp
add
dec
sub
cmp
or
mov
mov
movsb
rcrl
xchg
outsb
cmp
mov
pop
lods
in
jg
stos
lods
mov
cmp
push
add
pop
aas
inc
add
sbb
inc
movsl
daa
push
lret
push
add
mov
mov
mov
mov
shll
mov
mov
fwait
jae
add
out
mov
data16
test
mov
insl
cmp
outsl
push
add
mov
mov
or
insb
lcall
xlat
loope
push
sbb
fwait
jb
mov
mov
lds
arpl
repnz
sbb
mov
mov
cmp
mov
mov
pushf
xor
add
mov
push
and
das
fldpi
stc
popf
ficoml
out
mov
fwait
fs
add
jmp
mov
fs
aad
dec
out
inc
mov
sbb
add
aaa
out
lea
add
xchg
jb
mov
xor
mov
in
es
outsl
add
xchg
sahf
cmc
pop
adc
mov
sahf
fcoml
mov
lcall
push
add
push
pop
mul
popf
arpl
fstl
rorl
jecxz
imul
lods
adc
insb
cmp
add
movsb
lods
in
subl
xchg
adc
mov
jb
mov
mov
jne
int
pop
insl
repz
mov
aam
rolb
mov
addb
scas
lahf
jl
mov
or
add
leave
rolb
mov
jle
fldenv
jnp
in
add
xor
dec
xor
mov
clc
cmp
lods
mov
comiss
mov
inc
add
into
push
pop
inc
pop
mov
cmpsl
lret
roll
rolb
mov
mov
xchg
outsb
adc
cmp
jne
jecxz
mov
dec
pop
and
ljmp
push
xchg
stos
repz
sub
popf
jnp
in
movsb
push
inc
mov
or
movsl
jae
and
jne
loope
lock
in
push
dec
add
mov
add
into
js
and
add
sbb
pop
rolb
mov
in
popa
imul
jl
inc
cs
xchg
adc
push
xor
mov
cld
fisttpl
mov
pop
sub
jle
inc
pusha
add
dec
lret
orl
add
les
subl
mov
mov
nop
add
mov
xlat
mov
fucomip
jg
mov
add
dec
pusha
add
add
mov
fucom
inc
add
jmp
push
push
xor
mov
cld
xchg
leave
push
add
out
dec
or
jp
incl
xlat
xlat
std
push
mov
jl
loopne
mov
lods
in
loopne
mov
or
jnp
in
mov
sti
outsb
popa
and
scas
mov
bound
mov
es
mov
jne
addb
pop
xchg
add
mov
cltd
jl
cmp
scas
mov
add
out
popa
adc
push
pop
mov
adc
mov
add
and
mov
add
xchg
aad
cmpsl
jno
clc
sub
lock
std
adc
aaa
pop
iret
stos
mov
imul
gs
frstor
aad
aaa
sub
mov
inc
and
jmp
push
negl
cmpxchg
mov
cmp
mov
lods
pop
daa
push
add
sub
test
scas
movsl
cmp
push
sarl
add
negb
cmpsl
add
xor
cmp
mov
rcll
xchg
pop
in
xchg
mov
mov
add
pop
xchg
jge
scas
scas
jle
or
outsb
roll
add
push
imul
or
pop
jns
clc
shufps
add
push
rolb
mov
imul
dec
lock
and
mov
das
sarl
push
or
push
das
in
xor
test
mov
jp
pop
loope
sub
fcmovnbe
popa
adc
mov
mov
mov
scas
roll
mov
add
mov
mov
out
test
push
fiaddl
mov
xchg
mov
cmpsb
or
out
ds
and
mov
mov
sbb
mov
mov
add
or
mov
rolb
mov
add
mov
outsb
sbb
add
sub
add
mov
adc
mov
add
and
cli
add
mov
add
stos
outsb
adc
mov
add
or
or
sub
cltd
and
mov
jbe
inc
loope
lods
popf
mov
mov
add
ss
pop
rolb
mov
test
xchg
in
out
addb
js
adc
or
addr16
push
mov
or
mov
mov
xor
mov
add
add
scas
test
xor
mov
add
mov
mov
jns
add
sbb
or
add
fwait
adc
fidivl
xor
cmpsb
pop
cmp
aad
mov
movsl
stos
dec
xchg
push
cmp
sub
loop
mov
lahf
fisttpl
popf
movnti
push
cmp
add
fcmovbe
add
xchg
jp
pop
std
rolb
mov
rcll
add
cld
test
add
stos
jne
add
test
add
leave
and
push
add
dec
inc
insb
inc
add
or
add
outsb
add
sbb
mov
mov
mov
gs
cli
fcmovb
mov
mov
or
pop
jno
mov
sbb
add
mov
cmp
mov
mov
pop
pop
stc
xchg
add
loope
pushf
mov
pusha
add
add
adc
sbb
push
add
mov
mov
scas
std
pop
xchg
or
outsb
icebp
pop
sub
imul
fstl
mov
shll
add
pop
dec
pop
fidivrl
cmp
add
cld
loope
mov
mov
mov
int3
and
mov
jl
insb
loop
mov
mov
mov
add
xor
cmp
mov
fs
xchg
jecxz
push
aaa
mov
testl
idivl
mov
sbb
mov
test
test
mov
cli
cltd
leave
and
mov
movsl
movsb
aaa
sbb
idivl
addb
mov
add
mov
jae
dec
adc
rolb
mov
data16
mov
mov
and
push
add
addb
loopne
mov
sub
fsubs
add
and
test
adc
xor
mov
leave
push
lods
cmp
sbb
fstpl
sbb
outsl
or
out
paddw
ss
dec
xor
mov
jg
int
push
add
mov
jne
inc
rolb
aad
fsub
ret
bound
mov
add
pop
mov
mov
pop
cmovno
dec
inc
add
test
loop
mov
cld
bound
mov
int
sub
adc
pop
bound
mov
mov
mov
xchg
mov
or
aam
addb
xor
add
dec
jnp
mov
add
mov
sbb
leave
mov
push
adc
mov
mov
lock
adc
rcll
push
ljmp
mov
mov
mov
outsb
jb
mov
xchg
add
test
push
sbb
add
adc
add
mov
ja
add
icebp
pop
sbb
fcmovb
sub
clc
mov
inc
pop
pushf
push
fadds
inc
xchg
pusha
add
add
mov
add
inc
add
mov
lock
dec
sahf
scas
xchg
add
inc
repnz
cmpsb
das
xchg
stc
push
xlat
out
sub
scas
insl
jae
add
clc
fidivrs
dec
jae
mov
cmp
pusha
add
push
add
mov
mov
aad
arpl
push
add
es
jmp
mov
int
add
mov
pop
test
arpl
add
dec
xchg
mov
popa
xor
mov
arpl
js
add
add
add
fchs
add
mov
gs
and
adc
mov
add
add
adc
lock
lock
xchg
loopne
mov
rolb
inc
or
push
pop
xchg
and
arpl
add
inc
inc
imul
or
add
pop
push
jmp
dec
xchg
fcoms
xchg
adc
lods
pop
jmp
pop
out
cmpsb
cli
stos
pushf
mov
add
or
jle
inc
mov
mov
test
repnz
xchg
add
ficoml
dec
lcall
mov
push
mov
fmul
nop
add
push
jge
mov
mov
xchg
add
or
repz
iret
jp
xchg
cmc
inc
add
test
cmp
adc
dec
gs
imul
mov
popf
loop
mov
stos
mov
pop
mov
lds
push
cmp
stc
or
insb
adc
pop
cmp
push
or
pop
imul
stos
idivl
inc
jecxz
mov
push
add
add
add
jmp
fsubrs
adc
fcompl
test
mov
inc
xchg
lods
cld
mov
mov
push
adc
mov
dec
ret
inc
add
xchg
mov
mov
push
adc
mov
inc
pop
loope
std
cmc
sbb
icebp
lock
add
std
fildl
stos
xchg
out
inc
add
fiaddl
mov
fdiv
addb
pop
push
adc
getsec
jo
mov
movsb
push
add
ficomps
arpl
jl
sti
ss
xor
mov
inc
add
add
mov
push
add
add
mov
push
js
add
cwtl
pop
adc
mov
out
lock
cmp
outsb
xor
add
jno
scas
push
sub
add
add
mov
shll
mov
rolb
add
mov
sti
scas
mov
sbb
sub
cli
test
std
ja
lahf
jecxz
pop
stos
je
ja
dec
arpl
sahf
pop
sub
lret
xchg
aad
add
mov
add
scas
xor
loop
mov
add
mov
jmp
mov
add
cwtl
xchg
in
cmp
into
pop
in
pop
idivl
pop
gs
cmp
pop
cmp
add
mov
pop
fisubrs
dec
les
scas
ss
movsl
mov
jns
rcll
add
mov
das
xchg
pop
xchg
adc
mov
fldenv
sahf
xchg
enter
sbb
cs
je
add
jg
aas
or
mov
mov
dec
mov
lret
mov
mov
ljmp
adc
mov
and
int3
adc
inc
dec
fmuls
sbb
mov
data16
pop
lea
aam
add
xlat
xchg
pop
dec
dec
das
mov
or
test
dec
cmp
shrl
and
push
add
and
sbb
add
add
stos
xchg
mov
dec
xor
lret
dec
popf
pushf
cmp
in
fcompl
jg
fdivrl
pop
jl
cmp
cld
es
shrl
xchg
pop
inc
mov
push
es
dec
loop
mov
add
xchg
sub
or
add
sti
xor
add
into
push
jmp
cli
pop
call
mov
mov
cwtl
imull
movsl
xchg
repnz
dec
movsl
sub
push
outsl
mov
sub
rcll
mov
imul
add
mov
ds
rcll
es
das
loop
mov
sbb
prefetch
or
inc
mov
push
inc
shrl
jno
cmp
add
jmp
mov
jmp
leave
out
or
add
add
dec
popa
mov
jnp
fsubl
sti
dec
repnz
pop
inc
cltd
push
cwtl
ss
inc
cmp
xor
fdivl
add
imul
outsl
paddusb
sbb
aaa
xor
mov
cwtl
rolb
notb
sub
stos
es
lods
add
mov
mov
clc
jecxz
test
mov
and
mov
sbb
xchg
mov
or
add
in
pop
stos
add
mov
ja
mov
mov
push
add
ficoml
mov
push
cmp
add
addb
stos
sbb
mov
add
or
repz
fcomip
nop
add
add
test
stos
daa
std
mov
add
add
push
pop
lds
movsl
aaa
or
add
std
or
add
inc
and
test
pop
test
mov
xor
add
push
test
adc
jne
or
xor
mov
repz
pop
icebp
dec
fwait
add
mov
and
mov
sbb
jne
outsl
rolb
adc
mov
mov
cs
add
mov
add
mov
mov
pop
or
and
sahf
adc
add
lods
negb
inc
add
prefetcht2
ljmp
add
add
add
cmp
test
popa
cmp
cmc
stos
stc
fwait
arpl
mov
add
xor
xor
sbb
add
sub
add
negl
xchg
imul
push
jne
cli
mov
add
jle
dec
add
scas
call
push
sbb
hlt
push
sub
mov
push
add
inc
or
stos
loop
mov
in
rolb
mov
add
mov
js
imul
or
fwait
in
add
push
fs
aas
jne
add
add
ss
mov
xor
mov
sbb
pop
cmp
add
fstpt
inc
xchg
rol
mov
adc
mov
pop
sbb
add
xchg
xchg
or
dec
xorl
icebp
inc
add
pop
inc
jne
add
add
in
push
ret
sbb
imul
js
mov
pop
mov
sti
push
pop
cli
scas
xor
xor
ljmp
out
jnp
loope
mov
ret
pop
das
dec
inc
add
mov
scas
daa
xor
mov
out
jge
add
mov
rolb
mov
mov
inc
add
rolb
mov
out
fwait
in
fwait
test
jbe
dec
aas
pop
ret
rolb
sub
mov
ret
imul
shl
lahf
sbb
sbb
and
fistpll
sub
jns
mov
mov
sbb
test
and
add
mov
jb
mov
rolb
mov
mov
insb
jmp
jle
mov
fs
add
add
aaa
mov
xor
test
add
mov
add
add
addb
push
add
dec
addb
outsl
xchg
outsb
inc
imulb
add
hlt
inc
add
mov
push
les
ret
inc
add
jne
mov
adc
add
xchg
or
and
xor
mov
mov
aas
sahf
cld
pop
lds
add
fildl
mov
xchg
sti
mov
push
add
add
pop
arpl
rcl
push
aas
cmp
outsl
push
or
adc
mov
mov
mov
adc
mov
mov
bound
mov
pop
dec
xor
mov
in
ret
repz
mov
aas
lcall
stc
jle
jne
call
lea
mov
sbb
addb
frstor
mov
sub
mov
ret
xchg
mov
sbb
xchg
xchg
popa
cmp
loopne
mov
add
add
mov
jge
jnp
mov
in
hlt
adc
add
test
ret
lret
pusha
add
dec
flds
add
mov
fchs
add
and
repz
mov
dec
xchg
xchg
push
pop
or
scas
cmc
mov
mov
mov
call
addb
nop
add
sbb
sbb
stc
jno
popf
jae
aas
sbb
mov
test
sbbl
pop
or
push
add
add
add
mov
cli
cmp
movsl
push
in
sbb
stc
inc
xchg
adc
pop
cmp
add
lcall
mov
sub
cltd
lret
ret
fwait
lret
sub
dec
jg
mov
mov
fidivl
in
std
cmc
jp
add
cmp
inc
jb
mov
add
xchg
add
int
add
add
and
push
sub
iret
rolb
mov
lcall
movsl
data16
mov
pop
test
dec
pop
rolb
outsb
xchg
add
mov
aas
mov
add
call
stos
ss
mov
sbb
add
add
aad
xor
mov
dec
xchg
push
js
stos
mov
arpl
imul
aaa
imul
sbb
loopne
mov
add
inc
nop
add
xchg
ret
imul
pop
xchg
ds
adc
mov
popf
add
jecxz
cld
inc
sub
add
scas
call
mov
fstpt
test
dec
mov
ds
xchg
push
shr
push
negb
mov
add
mov
scas
xchg
lret
lock
pop
in
in
jae
lret
shr
iret
mov
mov
mov
call
fstpt
lods
jp
insl
pushf
mov
out
sbb
lret
sbb
add
add
test
xor
movsb
fildl
mov
add
adc
mov
stc
ret
xor
mov
cli
cmc
dec
movb
jne
push
aas
repz
add
mov
pop
mov
inc
add
push
loop
mov
jmp
daa
int3
xchg
add
or
stc
imul
fwait
cld
loope
lea
dec
inc
movsb
jnp
mov
xchg
add
out
movsb
and
repz
add
test
jno
inc
push
cmp
pop
push
push
in
dec
decl
call
xchg
sub
xor
mov
sub
cmp
xchg
inc
add
iret
jecxz
clc
mov
add
cmc
push
fistl
addr16
xor
xchg
scas
addb
push
aam
rolb
mov
inc
in
xchg
movsl
out
fcmovnb
add
add
mov
mov
mov
fdivl
iret
sbb
dec
pop
cmp
call
test
fisubrl
mov
pop
mov
add
add
cmp
cltd
pop
jnp
add
mov
cmp
jp
stc
pop
sti
fsub
add
fwait
ja
add
jae
iret
pusha
add
mov
or
aas
cmpl
mov
sbb
negb
mov
add
mov
adc
inc
mov
leave
dec
cmp
mov
pop
cmpsb
fsubs
daa
stos
icebp
dec
xchg
mov
call
popf
add
in
clc
lcall
mov
stc
sub
lods
fbstp
jge
pop
add
mov
ret
fldt
sub
pop
xchg
stc
cmp
in
int3
out
fwait
jl
sbb
pop
mov
mov
jecxz
add
fmuls
test
iret
push
or
pop
push
loope
add
xor
push
lds
xor
in
cmc
push
inc
add
or
add
test
jle
daa
movsb
mov
push
bound
mov
into
cmp
cs
xor
mov
push
add
or
mov
mov
lock
xor
mov
mov
cmpsb
adc
mov
call
mov
xchg
clc
mov
dec
or
jp
pop
xor
jnp
and
into
and
aad
jae
add
mov
mov
xchg
mov
arpl
add
mov
add
mov
sbb
add
push
data16
lret
cwtl
jl
data16
scas
push
adc
inc
add
mov
jecxz
rorl
mov
or
mov
in
dec
jno
add
pushf
inc
add
addb
dec
ja
add
jbe
add
inc
cltd
fldln2
xchg
aam
pop
and
rolb
idiv
rolb
mov
js
js
or
sub
add
add
int3
mov
jmp
add
imul
lret
ficomps
jmp
js
out
cmp
inc
popf
movsb
inc
add
les
cmp
fidivrs
lock
scas
loope
jmp
aam
pop
xor
xlat
or
pop
shr
push
nop
add
add
mov
mov
cwtl
inc
daa
rolb
leave
fsubl
push
lret
outsl
mov
int3
mov
mov
loop
mov
add
cmp
and
mov
insb
ds
xor
test
scas
mov
push
add
mov
cli
add
movsb
mov
cmp
js
or
in
cmp
stos
inc
push
mov
lahf
popa
jp
stc
mov
mov
insl
fcoms
test
jnp
add
mov
out
mov
or
in
je
xchg
inc
mov
mov
mov
add
fmull
out
insb
in
or
fcmovbe
cmpsb
rolb
sub
push
loope
sub
push
mov
test
or
ss
or
push
add
mov
icebp
mov
stos
sbb
mov
popa
icebp
movsb
inc
push
or
movb
mov
add
jae
popa
dec
mov
push
movsb
cmc
gs
addr16
or
add
mov
cmc
pop
fucomi
ss
inc
cmp
ss
adc
mov
xor
add
mov
shrl
sahf
pop
cmp
or
add
ret
int
mov
cmp
sub
and
or
je
add
mov
lods
xor
add
aam
add
pop
mov
mov
mov
lahf
xchg
loope
sub
push
rcll
jo
mov
sbb
mov
inc
jnp
lret
sub
cmp
add
mov
mov
pop
pop
cmpsl
rolb
mov
or
sub
fistpl
mov
add
mov
addb
in
addb
sub
add
dec
mov
add
xchg
jecxz
mov
add
mov
loop
mov
mov
add
add
mov
push
movb
cmc
xchg
or
dec
lcall
pusha
add
sti
aad
add
jo
push
adc
add
mov
or
xbegin
mov
adcl
ret
xchg
pop
cmp
lret
insb
jbe
les
mov
icebp
lea
fwait
insl
adc
mov
inc
outsl
mov
mov
fadd
xchg
add
cmc
loopne
mov
push
inc
pop
xor
add
loopne
mov
jo
mov
in
in
std
xchg
ss
add
mov
mov
adc
mov
xor
dec
cltd
xchg
out
xor
mov
add
mov
mov
jle
fwait
inc
add
test
mov
sti
push
add
leave
addr16
gs
into
push
les
arpl
es
rolb
mov
adc
push
les
jne
xor
add
sub
jbe
add
mov
out
fwait
sub
fs
out
push
movb
ret
mov
add
mov
or
ret
jp
lret
sub
mov
imul
cmp
cmp
add
out
mov
add
inc
add
and
ja
dec
adc
mov
in
inc
fisttpl
or
add
add
lds
stc
jne
add
pop
pop
js
add
dec
movsl
lret
inc
xlat
jl
shrl
cmp
push
dec
mov
lods
clc
mov
add
ljmp
adc
jne
ljmp
mov
lcall
mov
gs
test
mov
or
add
mov
test
cli
faddl
add
mov
sub
in
pop
fidivrs
mov
cmpsb
or
jns
sbb
mov
add
mov
mov
fdivs
xchg
sahf
inc
sub
adc
test
mov
into
dec
es
inc
add
inc
shll
add
jo
mov
jge
jns
rorl
dec
pop
mov
enter
mov
push
add
sub
and
mov
sahf
pop
mov
mov
xchg
xchg
repz
cwtl
popf
lahf
pop
icebp
sub
iret
data16
loope
xor
mov
movsl
adc
mov
xlat
es
xchg
or
loope
mov
sub
add
aaa
addr16
add
mov
jg
inc
add
and
and
ret
loope
and
push
jl
xor
mov
or
push
add
jmp
addb
shll
xchg
xchg
pop
inc
add
shll
aam
push
rolb
and
mov
mov
repnz
push
add
add
in
and
loopne
mov
es
mov
cmp
stc
jnp
xchg
adc
mov
int3
sbb
xor
add
add
repz
mov
add
add
dec
push
arpl
mov
add
push
xchg
add
movsb
mov
mov
jmp
neg
sbb
testl
outsb
outsl
stos
std
bound
mov
imul
pop
shl
pop
lret
sti
cmp
add
sub
add
test
add
lds
cli
jp
add
scas
out
aam
out
inc
sub
mov
fs
add
sahf
cmpsb
xchg
dec
xchg
jo
mov
mov
mov
mov
mov
mov
imul
cmp
add
mov
stos
and
mov
dec
and
add
and
mov
clc
mov
sbb
loopne
mov
jg
add
incl
mov
xor
out
es
leave
push
ljmp
inc
mov
add
mov
jmp
std
jns
stos
lods
pop
or
jp
mov
ja
movsb
cmp
clc
adc
mov
imul
xor
rolb
mov
add
outsb
mov
jmp
mov
sbb
jle
inc
add
adc
nop
add
mov
jl
in
mov
mov
add
nop
add
lcall
add
lret
arpl
mov
and
mov
mov
in
pop
mov
xchg
add
out
cmc
loopne
mov
jns
mov
addb
cmp
add
test
mov
push
ds
and
mov
stos
xchg
lea
in
xchg
pushf
jae
jge
mov
cmp
fs
add
mov
mov
push
add
xor
mov
sti
mov
aas
std
incb
lret
mov
push
outsb
and
mov
mov
add
sbb
lods
jmp
inc
add
jns
addr16
fidivrl
daa
mov
add
pop
fwait
std
jns
ja
jmp
add
test
add
inc
dec
or
rolb
test
xlat
fmul
clc
jmp
add
inc
sub
add
add
pushf
pushf
dec
mov
push
scas
rcll
iret
push
popa
fimull
sbb
int3
jnp
sbb
mov
mov
mov
push
inc
jo
mov
pop
mov
mov
inc
add
addb
pop
pop
nop
add
mov
movsl
call
out
dec
push
mov
in
stos
jge
add
mov
xlat
xlat
aas
ds
mov
add
sub
add
mov
add
mov
movsl
sub
push
cli
fs
mov
xor
bound
mov
ljmp
xor
pop
mov
fistl
and
pop
dec
add
mov
add
cmc
fcoms
cmc
addl
and
out
sbb
push
f2xm1
add
arpl
repnz
popf
push
sbb
cld
iret
dec
leave
gs
aam
cld
mov
add
imul
jns
decl
mov
repnz
mov
add
les
loopne
mov
add
xor
mov
pushf
into
outsl
out
sbb
repnz
add
jl
pop
sbb
fildll
mov
pop
jnp
cmp
aam
add
inc
mov
insb
scas
enter
insb
dec
adc
clc
jge
int3
adc
stos
fnstsw
xlat
and
cmp
dec
addb
out
out
cmp
test
test
loope
push
outsl
lahf
add
cltd
loopne
mov
mov
stc
sub
add
addr16
test
or
mov
stc
and
mov
or
adc
add
ja
lock
jnp
jg
add
push
xchg
add
jno
dec
sbb
insl
addb
daa
push
es
cmp
dec
push
mov
or
add
jmp
ss
jle
jmp
sbb
push
cwtl
rolb
subl
aaa
jp
add
bound
mov
inc
std
xchg
inc
xchg
pop
and
mov
sbb
mov
cwtl
rolb
mov
add
jmp
aaa
and
mov
cmpsb
das
test
imul
dec
and
inc
pop
cmp
push
stc
jo
mov
mov
es
mov
add
add
cmp
fsubl
add
dec
xor
mov
in
jb
mov
add
jne
fisubl
mov
test
sbb
stos
rolb
mov
cmp
movb
mov
or
push
xor
mov
enter
add
add
mov
sub
add
cmp
add
mov
out
bound
mov
movsb
push
adc
push
jmp
lods
les
add
outsb
out
add
add
add
into
pusha
add
shl
mov
and
mov
cmp
mov
loopne
mov
cmpsb
mov
add
aaa
lcall
iret
cmp
add
mov
cmp
add
dec
ficoms
add
pop
jle
fcompl
inc
ds
cmp
sti
mov
nop
add
fsts
xlat
sub
jnp
jae
lret
movl
xchg
sub
add
push
shl
imul
mov
jne
dec
ljmp
xchg
lock
pop
push
add
sbb
xor
mov
mov
add
add
jo
mov
sahf
cltd
ret
xor
adc
nop
add
cmp
push
clc
lahf
push
std
jg
pop
mov
add
jecxz
add
ficoms
add
sbb
adcl
ja
ret
sbb
cmp
int
add
stc
loope
add
add
mov
mov
mov
or
jne
sahf
sub
push
sbb
pushf
stc
movsb
jmp
inc
xchg
xor
shl
push
popa
imul
add
sbb
push
dec
cmovb
mov
add
mov
sub
xchg
loope
mov
or
add
ljmp
mov
add
iret
repnz
pop
mov
jo
mov
add
xchg
xchg
push
add
mov
mov
mov
inc
mov
js
out
add
add
and
xchg
divb
mov
cli
lret
sbb
cmp
sub
xor
mov
loop
mov
add
xchg
lods
push
pop
jae
sub
loopne
mov
add
cmp
scas
jb
mov
mov
test
add
cmp
je
fs
stc
movsl
and
mov
push
jb
mov
in
fs
loopne
mov
push
add
rolb
loope
notb
subl
or
icebp
aas
push
ds
cmp
movsl
repz
add
add
xor
mov
pop
adc
scas
dec
jb
mov
xchg
rorw
or
add
mov
and
pop
cmpsl
mov
inc
sti
fcmovnb
add
xor
mov
daa
icebp
movsb
repz
call
rolb
mov
jno
mov
negb
add
dec
mov
push
out
inc
daa
shll
xor
mov
xchg
int
lock
out
icebp
div
mov
cmp
and
gs
hlt
sub
add
inc
add
cli
sbb
fstps
or
das
pop
ljmp
mov
enter
xchg
and
cmpsb
sbb
jns
mov
xchg
add
adc
mov
add
adc
mov
cmpsb
push
add
mov
add
mov
mov
mov
xchg
cmp
sbb
sbb
mov
arpl
add
mov
leave
inc
mov
ret
mov
mov
sbb
daa
push
shll
push
popf
add
add
sbb
mov
sbb
imul
mov
add
popf
adc
scas
mov
xor
sub
push
add
faddl
add
sub
lods
out
repz
add
add
push
sbb
add
mov
jne
nop
add
mov
mov
es
push
cmpsl
out
addb
lcall
lods
ljmp
add
es
mov
add
jno
mov
mov
add
popa
std
test
push
add
add
or
cwtl
mov
add
orl
popa
fadds
jno
add
out
mov
mov
pop
inc
add
mov
mov
mov
add
movsb
lret
mov
adc
ljmp
add
jnp
add
loop
mov
gs
mov
das
pop
jae
xlat
jle
jecxz
vpcmpgtw
xchg
pop
push
cmp
pop
jl
add
sub
and
mov
cmp
or
add
xchg
insb
cmpsb
ret
into
mov
mov
lret
jo
mov
cltd
pop
add
or
add
add
mov
add
add
adcl
mov
push
inc
pop
mov
mov
inc
or
popf
dec
lcall
lea
rolb
xor
mov
scas
ror
sahf
sub
mov
add
shll
addl
cmp
mov
mov
cld
add
fistl
xor
leave
lods
or
lret
pop
xchg
enter
cmpsl
jb
mov
std
fisubrl
xchg
mov
cld
out
add
sbb
dec
idivb
fdivl
scas
jne
pop
adc
adc
in
add
loope
sbb
lock
adc
cmp
sub
add
mov
mov
dec
dec
xchg
in
add
das
add
mov
dec
int3
pusha
add
je
cltd
inc
add
ret
jne
mov
in
pop
enter
adc
mov
mov
cmp
add
fwait
cmpsl
fdivs
addl
jg
add
mov
mov
add
lahf
cmpsl
out
sbb
jnp
mov
scas
aaa
imul
pop
cs
add
add
add
push
add
mov
mov
add
mov
jb
mov
in
jp
cmp
inc
add
mov
add
scas
cmp
movsb
cmovge
mov
xchg
into
rcll
mov
push
sub
xchg
fidivl
dec
mov
push
cmpsb
stos
repnz
es
test
sbb
jno
sub
add
ret
fildll
lahf
mov
in
dec
ds
add
push
ljmp
js
xchg
mov
push
jmp
dec
test
mov
inc
and
mov
mov
cs
popa
leave
mov
mov
add
outsl
lahf
sbb
mov
push
mov
pop
cmp
insb
stos
adc
xor
sar
loop
mov
jl
imul
xchg
cmp
xor
add
cmp
in
in
outsl
cltd
int3
dec
outsl
ret
and
cmpsl
loope
sub
imul
jp
cmpsl
repz
fldt
daa
dec
and
rolb
mov
mov
inc
test
out
push
and
dec
addb
mov
add
mov
add
mov
icebp
lahf
je
add
mov
outsl
addr16
stos
sbb
jp
add
mov
jno
imul
mov
mov
mov
sbb
scas
pop
repnz
mov
test
cmp
inc
lods
cmpsb
mov
mov
subl
jge
add
add
pop
loopne
mov
and
std
addb
rolb
in
and
mov
add
mov
addb
fmulp
subl
sbb
test
loop
mov
mov
mov
aam
adc
in
mov
mov
and
ljmp
mov
sub
scas
aaa
sub
sub
mov
hlt
or
add
mov
gs
mov
mov
add
sub
jl
xor
mov
popa
out
pushf
push
lahf
dec
inc
cmpsl
stos
xchg
or
ret
pop
addb
pop
cmc
mov
mov
mov
fiadds
add
add
xlat
in
and
mov
add
mov
pop
decl
insl
inc
cli
and
stos
je
and
insb
dec
loop
mov
xor
push
lret
mov
add
clc
cld
lcallw
aas
inc
add
test
add
lahf
jbe
push
add
mov
mov
adc
call
mov
rolb
mov
mov
and
dec
mov
iret
rcll
icebp
adc
mov
xchg
jo
mov
add
lret
push
pop
in
outsl
shrl
dec
and
mov
add
mov
xchg
jg
add
push
xor
popa
inc
rolb
push
fbstp
hlt
jge
dec
push
neg
adc
mov
insl
stc
lds
add
int3
push
adc
mov
add
inc
nop
add
scas
pop
push
subl
inc
xchg
lock
aas
ljmp
stc
iret
mov
mov
mov
add
in
dec
dec
stos
xor
js
xchg
cli
loope
mov
dec
xorl
enter
mov
movsb
add
rcll
lcall
imull
sub
inc
mov
sub
testb
scas
mov
ret
int3
mov
jl
and
add
test
fdivrs
add
jne
pusha
add
and
mov
dec
movsb
loope
scas
inc
jne
push
add
ret
fcomip
cmc
loop
mov
mov
mov
push
and
mov
loop
mov
mov
fldt
fiaddl
rorl
xor
ret
pushf
jle
lret
xchg
or
and
rorl
mov
jne
xchg
add
inc
add
jp
jo
mov
sbb
add
sti
dec
jno
jbe
add
add
mov
mov
gs
popf
ret
aad
fidivrs
arpl
mov
ja
popf
cmp
lahf
mov
gs
jno
data16
mov
or
pop
mulb
inc
cli
adc
jbe,pn
call
movsl
pop
sar
add
xor
mov
cltd
lahf
dec
nop
add
lcall
lcall
mov
cmpsb
jns
mov
mov
adc
mov
gs
addb
lret
rolb
mov
add
dec
stos
jbe
or
jp
aas
fwait
or
mov
add
aas
outsb
inc
add
add
mov
cwtl
inc
mov
mov
mov
add
xchg
mov
add
mov
add
mov
addr16
aad
jnp
mov
mov
xchg
add
add
adc
mov
or
test
add
add
fstpl
or
jp
push
sbb
int
xor
cmp
add
sbb
mov
dec
ret
adc
inc
add
hlt
popf
movsl
das
mov
mov
ret
stos
sti
mov
sbb
add
jo
mov
xor
in
cmp
mov
dec
popa
popa
ja
mov
lds
pop
fisubrl
andl
js
aam
xor
pop
lcall
hlt
sub
mov
and
push
sbb
add
ss
lret
adc
mov
mov
mov
add
inc
add
add
push
add
add
rolb
mov
and
movb
inc
mov
mov
xchg
andl
and
mov
les
lds
nop
add
add
mov
popf
mov
jp
jae
adc
mov
dec
mov
mov
mov
xor
mov
mov
insl
mov
mov
cmc
jbe
sbb
test
std
in
mov
xchg
cld
cwtl
in
into
mov
sar
jbe
mov
sub
add
add
add
int3
mov
add
jg
call
mov
mov
lods
lea
add
and
add
out
adc
inc
add
out
mov
adc
xor
mov
inc
add
inc
jl
std
mov
lock
add
into
mov
sahf
push
add
rcrl
cs
sbb
push
and
clc
scas
cmpsb
lcall
pop
mov
add
aas
pop
inc
add
into
testb
or
add
das
test
jns
and
mov
lahf
and
xchg
loopne
mov
push
in
mov
adc
mov
rcll
stos
in
ja
rolb
nop
add
add
test
xlat
cli
imull
cmp
clc
or
fistpl
dec
lret
jae
lret
inc
movsb
rcr
imul
mov
adc
mov
inc
xchg
jg
rolb
mov
add
add
lds
mov
fnstsw
add
pop
imul
mov
jg
dec
cli
dec
pop
lret
les
or
cld
insl
aaa
adc
or
ret
xor
mov
lods
test
add
test
sub
xlat
pop
lods
or
cwtl
test
xor
and
sahf
scas
rcl
add
ss
cwtl
pop
mov
or
xchg
mov
mov
rolb
mov
mov
cmpsl
pop
mov
push
mulb
loopne
mov
pushf
shll
test
enter
mov
xor
gs
dec
jmp
mov
xchg
mov
mov
add
cmc
adc
inc
add
push
adc
push
and
mov
or
das
fstps
mov
add
add
mov
xor
xchg
addb
xor
mov
loopne
mov
or
ret
and
repz
icebp
orl
or
jge
and
add
add
mov
adc
jne
sbb
stc
push
and
cmp
jb
mov
and
ret
jg
mov
mov
cmp
out
and
jae
dec
out
add
add
mov
push
push
in
adc
mov
jecxz
lahf
mov
fcoms
rcrl
add
mov
xchg
add
xor
or
push
int3
sbb
jg
aam
add
push
add
aas
in
rolb
mov
test
add
test
jp
add
scas
fiaddl
dec
pop
mov
xchg
dec
mov
pushf
and
testl
push
add
loop
mov
mov
pop
inc
xlat
jg
stos
push
mov
mov
jbe
add
push
popa
and
mov
pop
jge
add
test
mov
mov
jns
jge
jo
mov
dec
lods
pusha
add
pop
jne
sub
adc
xlat
mov
add
add
mov
fdivrs
jle
xchg
leave
ja
add
push
add
sbbl
into
fbstp
push
add
mov
mov
lock
adc
mov
xchg
insl
int
xchg
add
jno
sub
push
xlat
xchg
dec
mov
pusha
add
movsl
aad
pop
aaa
sbb
mov
xchg
pop
out
mov
sti
mov
add
clc
cwtl
jmp
sub
orl
sub
sub
xchg
xchg
cmp
js
mov
mov
mov
mov
pop
cltd
mov
enter
add
xchg
mov
push
xchg
jle
xchg
jbe
in
rorl
mov
lea
dec
pusha
add
jo
mov
xchg
rcl
hlt
mov
btr
sti
iret
lds
mov
dec
sub
dec
stos
faddl
dec
in
mov
inc
fisubrs
add
mov
lea
mov
mov
add
mov
or
outsl
mov
clc
mov
mov
sub
shl
ds
xor
push
icebp
stos
cmp
les
or
test
pushf
sub
jo
mov
ja
add
int3
sti
repz
mov
clc
mov
add
clc
sub
loop
mov
add
iret
xchg
pop
dec
cs
out
or
dec
adc
mov
fildl
out
and
mov
test
jp
idiv
sti
xchg
add
xor
mov
mov
push
stos
xor
mov
add
jmp
xor
mov
popf
fwait
mov
add
ret
bound
mov
add
mov
mov
jno
add
add
pop
movsb
mov
lahf
stc
fwait
xchg
jg
add
int
fcmovb
jecxz
add
inc
or
add
fisttpll
mov
nop
add
add
pop
int3
add
mov
push
add
stc
mov
xchg
add
lods
mov
mov
pop
sbb
add
sub
dec
mov
mov
xchg
mov
add
dec
test
sub
popf
lds
add
or
sub
add
adc
add
push
xor
xor
mov
push
add
mov
sbb
imul
lret
idivb
divb
mov
adc
add
push
jp
stc
call
and
push
test
add
mov
fisttps
mov
outsb
mov
mov
jg
frstor
add
mov
bound
mov
fwait
stos
cmc
cmp
push
outsl
in
loopne
mov
mov
xor
mov
sub
out
push
sbb
add
mov
push
add
int
fnstsw
lcall
or
jl
dec
lods
sub
int3
lahf
inc
mov
add
adc
orl
lds
xchg
cmp
pop
loope
jmp
rol
pop
loopne
mov
out
jge
jb
mov
push
add
mov
fiadds
out
mov
push
sbb
cmp
sub
rolb
mov
mov
imul
dec
loope
push
sbb
add
mov
sbb
lret
enter
add
pop
cmp
sahf
xchg
add
out
push
and
sub
inc
dec
pusha
add
in
jg
sub
gs
enter
insb
push
rolb
mov
pop
pop
insl
mov
ret
ja
in
adc
repnz
sub
repnz
mov
fnsave
mov
sub
mov
add
sbb
inc
cwtl
cltd
out
add
clc
lea
xchg
icebp
mov
mov
test
or
cmp
push
add
or
lret
mov
add
add
aad
pushf
push
inc
add
cmp
jne
xchg
xor
mov
push
xor
icebp
pop
and
pop
jge
or
xor
iret
adc
mov
push
mov
fwait
xchg
popf
imul
pop
push
movsb
mov
rcll
fildl
add
push
xchg
icebp
sub
jecxz
dec
sbb
fwait
inc
and
mov
mov
mov
addb
adc
loop
mov
mov
add
mov
xchg
das
sub
cmp
mov
clc
pop
lock
mov
dec
mov
mov
fldenv
push
bound
mov
add
add
add
clc
push
add
jecxz
popa
in
dec
dec
inc
add
and
add
mov
cmp
inc
frstor
mov
sbb
addb
push
roll
add
mov
inc
add
movl
mov
rolb
mov
jne
movsl
mov
fldt
mov
cmp
jne
xchg
sahf
test
add
sub
mov
and
mov
and
xor
mov
scas
outsl
icebp
cmp
test
mov
xchg
test
pushf
icebp
jmp
sbb
add
add
mov
and
mov
add
mov
add
icebp
mov
pushf
fsubr
gs
stc
add
mov
notl
cmp
mov
add
inc
in
lods
arpl
add
fwait
sahf
xor
fcomps
loop
mov
in
xchg
mov
add
mov
aas
sub
dec
and
pop
es
add
sbb
sbb
cli
jne
clc
popf
and
mov
pop
nop
add
jl
push
inc
dec
lods
mov
imul
pushl
and
mov
pop
mov
stc
or
jle
add
stc
sbb
xchg
mov
lcall
add
dec
arpl
js
sahf
fcomps
loopne
mov
xor
mov
add
push
jno
lahf
push
out
fildl
add
mov
mov
adc
dec
mov
push
inc
ja
and
add
cmp
loop
mov
and
mov
or
shll
jmp
std
mov
fwait
int
sbb
add
add
mov
mov
push
add
lock
add
lods
xchg
cltd
add
add
fucomip
cmp
call
mov
mov
fisubrs
mov
dec
loop
mov
pop
pop
stos
inc
leave
push
leave
shll
mov
xchg
xor
xor
or
add
mov
mov
mov
pop
sub
pop
xchg
pop
cld
adc
mov
add
mov
add
jnp
int
pusha
add
fstps
mov
jmp
into
gs
adc
repnz
cli
arpl
jne
data16
in
insl
int
fdivr
and
sbb
cltd
jnp
add
push
insl
cmp
sbb
movsl
loopne
mov
xchg
jge
add
cmp
aad
mov
mov
add
add
inc
lahf
pop
loope
and
push
sarl
call
and
mov
add
jecxz
in
xchg
mov
mov
leave
cli
push
jbe
ja
les
out
add
mov
cmp
in
mov
fsub
dec
and
add
test
adc
mov
add
push
and
mov
add
loop
mov
fcompl
scas
cld
push
fsubrs
or
mov
dec
and
or
int3
cmp
xor
loope
add
das
mov
mov
jmp
add
loope
arpl
add
clc
mov
fldt
pusha
add
out
and
cmp
dec
scas
push
jae
in
sahf
jl
push
roll
add
roll
or
insl
jg
lret
pop
push
test
pop
jno
xchg
mov
xor
mov
mov
inc
add
add
movsb
add
add
dec
rolb
mov
jnp
add
xor
cmpl
cmp
fidivrl
mov
xor
js
xchg
add
or
fwait
out
mov
mov
mov
push
jmp
lds
or
mov
add
cmp
add
add
jne
pop
add
xlat
sti
in
fnstenv
js
add
mov
adc
cltd
test
or
and
mov
mov
mov
gs
mov
cmp
jbe
pop
add
rolb
mov
lret
int3
sti
cmpsb
out
add
add
bound
mov
cmp
imul
test
pop
test
in
popf
loop
mov
sti
ja
outsl
lods
out
int3
iret
inc
add
inc
sbb
or
dec
sub
xchg
add
sbb
push
inc
push
dec
mov
mov
add
jne
xor
arpl
insl
push
ss
nop
add
repnz
pusha
add
adc
daa
add
subl
popf
xor
mov
cltd
insl
cmp
cmp
out
in
add
add
add
add
mov
call
pop
js
xor
mov
push
add
into
push
add
xor
rolb
mov
adc
mov
jbe
jge
mov
and
add
mov
mov
cli
aas
aad
in
test
int3
lret
mov
add
arpl
repnz
mov
movsl
mov
stos
mov
imul
add
cmp
xchg
popa
stc
lods
cld
xor
data16
cli
or
cld
das
ljmp
addr16
and
cmp
pop
xchg
out
sub
sbbl
add
iret
bound
mov
cld
mov
adc
mov
test
cltd
aas
mov
push
subl
jns
cmpsb
dec
inc
lods
enter
mov
mov
mov
mov
add
mov
add
cmpsb
lods
out
dec
gs
cmp
add
push
loop
mov
adc
lods
pop
out
test
add
add
add
cmp
jno
scas
ret
lods
xchg
jns
mov
cmp
xlat
insb
int
add
gs
js
enter
jns
sti
add
enter
mov
add
push
in
out
mov
mov
lret
icebp
push
push
fistpll
test
orl
stc
sbb
jg
inc
arpl
and
test
mov
clc
pop
sahf
sub
add
or
jnp
and
mov
daa
ret
xor
mov
int
pop
jo,pt
mov
adc
loopne
mov
mov
add
leave
dec
jp
add
fdivrs
mov
nop
add
add
mov
pop
dec
sti
xchg
mov
sbb
mov
jb
mov
syscall
mov
add
in
dec
jle
jge
arpl
test
ja
push
popf
dec
int3
fwait
test
push
adc
mov
sub
add
push
add
dec
icebp
popl
mov
mov
ljmp
mov
or
mov
push
ficompl
inc
or
lock
xchg
outsb
rolb
aam
adc
mov
movsb
xor
xor
sub
sbb
xchg
dec
hlt
push
add
lds
mov
mov
jp
in
icebp
outsb
adc
add
or
repnz
push
stos
testl
mov
mov
mov
popa
cwtl
add
mov
pop
leave
into
mov
addb
push
dec
test
fdivrp
dec
sbb
jb
mov
push
bound
mov
mov
lret
rorl
mov
movsb
ljmp
cmp
push
add
jne
dec
iret
hlt
jecxz
in
adc
mov
xchg
lds
adc
mov
repnz
xchg
inc
add
add
arpl
sub
shll
or
jg
xor
mov
dec
xor
sbb
sub
test
add
clc
icebp
inc
rolb
mov
add
or
add
adc
mov
out
mov
out
add
xchg
sbb
outsb
data16
add
sbb
fists
imul
aad
xchg
cmp
add
mov
mov
mov
mov
adc
dec
aam
jb
mov
stos
fs
popf
test
mov
cmp
xchg
out
pop
jle
loope
cwtl
out
lahf
into
jge
add
clc
xor
jg
shrl
mov
add
jns
pop
dec
icebp
jecxz
jbe
push
out
fwait
mov
add
xchg
push
rolb
mov
leave
add
mov
xor
ja
add
jle
inc
sbb
add
and
mov
cmp
push
jecxz
add
inc
add
pop
insb
loopne
mov
insl
leave
or
les
int
cmp
hlt
push
arpl
push
mov
mov
add
add
cld
adc
mov
clc
and
cltd
dec
sub
mov
pop
adc
ja
jmp
addr16
fcomps
and
mov
jle
add
mov
pop
cli
enter
jo
mov
mov
mov
mov
lods
mov
scas
dec
jnp
xchg
sub
lods
notl
mov
addb
out
cmc
mov
mov
aad
mov
mov
mov
mov
mov
mov
xchg
scas
sub
xchg
gs
andl
add
add
stos
xchg
ds
sbb
xorl
cmp
adc
rolb
xchg
add
icebp
mov
mov
pop
sub
add
push
hlt
repz
push
add
add
add
and
mov
jmp
mov
xchg
cmp
xchg
loop
mov
add
in
cmp
testl
pushf
adc
bound
mov
pop
jl
popa
js
add
sub
inc
cmc
mov
or
jle
das
fisttps
ror
popa
mov
cmpsl
dec
movsl
push
or
adc
push
mov
sub
pop
mov
mov
in
add
outsb
sti
lcall
xlat
test
jno
mov
mov
mov
push
cmpsl
ret
fisubs
push
js
mov
into
imul
das
ja
iret
lods
xor
mov
popa
stos
out
jl
test
aad
adcl
dec
bound
mov
lock
das
roll
dec
mov
cmpsl
cmp
mov
enter
stc
fisttpl
add
adc
repnz
or
mov
lock
pusha
add
out
scas
pop
fs
push
ret
cmp
popa
push
mov
add
dec
das
xchg
enter
jnp
std
inc
dec
out
and
mov
mov
scas
imul
or
add
mov
jle
sbb
out
jnp
add
enter
jns
push
addb
push
add
and
lds
add
iret
inc
cltd
pop
or
cwtl
dec
xchg
int
adc
addb
pop
inc
test
fwait
testb
aad
jb
mov
stc
sbb
jecxz
jae
ds
ljmp
sub
gs
lods
dec
sub
inc
push
mulb
int3
cmp
mov
test
loop
mov
jge
lds
repnz
jnp
add
pop
lret
mov
mov
data16
push
dec
dec
out
mov
outsl
cmc
jo
mov
loop
mov
add
add
hlt
test
rolb
mov
lods
test
lret
fcomip
add
add
rorl
mov
add
add
testb
cmpsl
dec
xchg
mov
addb
sbb
push
sbb
out
xchg
xchg
std
and
add
mov
je
sbb
scas
adc
dec
mov
sub
add
add
jecxz
lds
add
cmp
pop
fxch
negb
addb
scas
call
scas
icebp
push
cmc
fs
inc
insl
mov
push
push
add
call
fiadds
mov
mov
call
mov
fimull
xchg
inc
jmp
add
xor
add
fldt
dec
jae
add
out
sbb
mov
add
fistpll
add
add
lea
out
inc
jmp
push
add
mov
jmp
mov
mov
out
push
or
test
lds
ljmp
stc
sahf
in
add
pusha
add
stos
jbe
imull
sbb
push
jnp
pop
mov
mov
mov
mov
mov
fildll
cmc
sti
in
add
mov
add
mov
mov
popf
adc
xchg
loop
mov
add
xor
lds
in
scas
shrl
dec
jge
cmp
cli
shr
ljmp
lea
ret
ss
add
into
cmp
mov
ljmp
add
fisubrs
xor
sbbl
arpl
push
sahf
mov
aaa
mov
icebp
mov
jge
add
add
adc
mov
xchg
rolb
mov
cmc
xchg
loope
or
add
pushf
inc
pusha
add
loop
mov
hlt
cmp
add
add
lea
shll
add
pusha
add
add
fldl
and
mov
das
add
add
push
add
sbb
std
dec
aam
mov
mov
add
repz
dec
jmp
mov
mov
imul
call
add
sbb
add
mov
add
pop
stos
bound
mov
fcoml
add
repnz
mov
mov
xchg
pop
inc
mov
loopne
mov
or
add
xor
jmp
add
hlt
mov
push
stos
lahf
or
pop
rorl
add
sbb
addb
pop
jb
mov
lret
hlt
repz
mov
add
or
pop
jp
aas
outsb
adc
outsb
pop
outsb
pusha
add
test
mov
jns
out
inc
out
mov
add
jbe
mov
jge
loopne
mov
add
add
add
add
sti
sbb
fcoml
je
add
xchg
push
add
loope
nop
add
mov
mov
xchg
add
mov
aaa
sbb
pop
loop
mov
mov
mov
aaa
pop
sub
icebp
repnz
sbb
mov
imul
xor
mov
xchg
sub
add
stc
stos
mov
mov
adc
mov
in
fsubs
scas
scas
insl
adc
mov
dec
loopne
mov
xor
outsl
sbb
sti
rcrl
adc
cmp
mov
add
mov
lds
mov
push
mov
mov
jno
add
hlt
push
jmp
mov
add
and
daa
jp
push
ret
loope
icebp
addl
out
loop
mov
loope
inc
sbb
lods
hlt
or
hlt
outsl
mov
mov
mov
aas
cs
add
and
mov
mov
stos
sub
cli
jl
stc
jo
mov
rorl
gs
adc
mov
sub
mov
cmp
test
inc
sbb
or
sub
mov
gs
pop
cmp
popf
inc
inc
loope
xor
dec
addb
pop
lea
add
mov
push
add
mov
lds
xchg
aad
idivl
add
mov
add
add
add
jbe
cwtl
push
jo
mov
ficomps
addb
loop
mov
pushf
cltd
lds
inc
mov
add
pop
xor
sahf
xor
adc
mov
adc
imul
add
add
loop
mov
lret
out
cli
addl
call
lods
daa
mov
adc
cmp
mov
add
jne
imul
mov
lcall
fldenv
adc
es
lcall
pushf
fwait
popf
repz
mov
add
jo
mov
inc
add
pop
xchg
add
inc
add
jle
out
sub
dec
jg
xchg
fldl
sbb
test
xor
mov
jnp
and
sbb
add
inc
mov
mov
call
clc
pop
ds
add
mov
cmp
xor
mov
hlt
jg
jl
pop
cmpl
add
cmp
fwait
lods
pop
push
mov
mov
cmp
inc
inc
xor
mov
data16
push
sbb
pop
repnz
jge
add
mov
mov
mov
add
mov
ljmp
or
jge
nop
add
pop
setge
dec
sbb
add
add
pop
push
loope
rolb
mov
flds
hlt
test
mov
ds
sub
fistl
mov
rolb
mov
out
call
mov
mov
fisubrl
in
adc
sub
inc
add
add
xchg
push
jle
call
rolb
mov
stos
sahf
outsl
mov
mov
iret
into
ss
mov
lds
push
and
mov
add
mov
add
mov
mov
fdivl
loopne
mov
mov
dec
jno
add
arpl
mov
pop
cld
fsub
cld
arpl
push
xor
in
leave
add
mov
add
mov
arpl
add
pushf
repz
les
mov
mov
jle
inc
cmp
add
inc
push
cmp
add
and
fisubl
add
adc
mov
sub
cmpsb
lahf
mov
repz
popa
jl
mov
or
popa
mov
or
cmp
mov
jle
add
pop
inc
mov
add
pop
mov
dec
mov
out
add
dec
xchg
fldt
iret
lret
mov
jo
mov
sti
ficompl
inc
xor
into
popl
jmp
mov
cmp
or
mov
cmp
push
add
mov
les
and
lods
std
rolb
mov
push
movsl
sub
push
pop
add
cmp
inc
cmp
add
jnp
stos
pop
repnz
jmp
call
mov
push
inc
add
orl
cld
out
sub
popl
sbb
or
add
mov
movb
xor
movsl
jae
sub
hlt
ret
test
inc
div
add
mov
cltd
lahf
mov
data16
lods
and
mov
push
jnp
arpl
mov
mov
movsb
mov
push
or
inc
add
andl
xchg
jge
adc
mov
inc
xchg
add
sbb
add
adc
mov
pop
fsubs
add
mov
mov
jmp
loop
mov
test
popa
add
mov
clc
js
enter
mov
jb
mov
pushf
outsb
mov
add
lcall
add
mov
aad
into
jae
loope
pop
lds
mov
fs
add
add
mov
pop
outsl
sub
lods
std
adc
mov
ret
aam
pusha
add
sub
scas
cmp
push
cli
add
test
scas
rolb
dec
addr16
push
jbe
add
fidivl
lahf
mov
jbe
sub
add
push
inc
mov
pop
addb
lahf
std
cmp
add
add
mov
lock
loope
add
add
insb
je
je
rolb
mov
add
inc
mov
sti
cmpsl
or
and
repz
add
stos
int
jp
push
jb
mov
mov
test
dec
repz
push
add
add
jmp
je
jno
xlat
mov
mov
loope
mov
mov
inc
bound
mov
pop
jb
mov
cmp
ja
inc
xchg
cmc
pop
inc
add
cmp
jg
add
or
cli
push
mov
out
add
mov
xor
inc
add
mov
push
add
stos
sub
mov
or
dec
mov
mov
stc
sub
mov
add
insb
mov
int3
sub
jle
cmc
dec
and
mov
cmp
mov
out
movsl
int
cmp
add
adc
sub
cld
cmp
inc
ljmp
imul
or
add
add
and
mov
add
fistps
and
mov
nop
add
leave
cmp
add
inc
cmp
add
xor
out
es
add
adc
xchg
xchg
addb
push
and
sub
cmp
orl
xchg
lods
leave
or
rolb
sub
cld
pop
jo
mov
mov
mov
cmpsb
xor
add
jnp
mov
add
mov
and
add
add
jbe
lcall
add
mov
or
add
mov
lods
cltd
mov
add
push
or
add
filds
add
push
std
movsb
pushf
push
add
lret
loope
mov
mov
adc
mov
sub
add
fwait
clc
cmc
lcall
mov
mov
add
add
mov
mov
mov
testl
add
add
mov
mov
and
mov
test
mov
stc
and
push
filds
mov
mov
test
jle
int
and
mov
xchg
dec
and
mov
add
pop
rcr
adc
mov
add
push
cmp
jnp
sub
int
jmp
pushf
xchg
inc
inc
inc
cmpsl
sub
cmp
inc
add
data16
mov
and
mov
cmpsb
xor
loop
mov
lods
cmp
dec
cmpsb
xor
mov
jg
in
add
into
add
cmpsl
jnp
add
xchg
outsb
xchg
test
in
test
cs
inc
cli
rol
fdivrl
cltd
mov
pop
addb
xchg
jmp
repz
jns
fneni(8087
add
dec
inc
add
add
push
pop
and
add
jo
mov
add
mov
jo
mov
jb
mov
sahf
test
adc
mov
arpl
ret
mov
mov
mov
adc
push
pushf
lock
add
and
mov
jle
and
adc
mov
stc
out
mov
imul
mov
mov
sub
xchg
add
jns
jp
shll
mov
inc
movsb
xchg
cli
mov
ffree
mov
push
rorl
outsb
rolb
mov
add
mov
mov
outsl
sub
cmc
sub
sub
dec
nop
add
add
adc
jg
inc
xchg
mov
in
pop
addr16
mov
aam
lock
pop
dec
jb
mov
sub
inc
add
mov
push
add
gs
enter
add
popa
pop
dec
inc
sub
add
out
add
jl
dec
lahf
popa
idivl
hlt
jl
push
push
cmc
ret
pop
std
mov
dec
adc
sti
push
popf
fisubrl
add
dec
push
add
movsl
movsb
sbb
in
xchg
ja
and
mov
dec
pop
add
mov
popf
fs
add
js
pop
mov
adcl
fisttps
test
pop
stos
sub
movb
xor
xor
sbb
xchg
dec
push
add
add
test
sub
stos
mov
jge
je
movl
add
hlt
test
insl
xchg
and
cmpsl
imul
lods
pop
loopne
mov
sbb
add
cmp
add
pop
aam
sub
shrl
repnz
add
stc
or
xor
xorl
adc
mov
mov
insb
lahf
lds
sub
arpl
sbb
rolb
sbb
out
add
aas
sbbl
frstor
std
test
pop
je
sbb
fadd
and
mov
push
add
dec
ficomps
mov
mov
jecxz
movsb
rcll
insl
fbld
sti
xchg
add
or
movsb
test
add
mov
aas
mov
ds
mov
add
cs
mov
cltd
call
pop
adc
mov
pop
mov
mov
mov
add
sbb
test
or
add
pop
gs
inc
add
aam
xchg
lret
and
mov
and
xchg
lock
or
inc
adc
mov
insl
test
into
rolb
mov
add
and
mov
idiv
adc
hlt
mov
and
and
mov
hlt
loopne
mov
mov
add
mov
jle
mov
ljmp
pop
pop
sub
add
ret
cmp
adc
mov
xchg
adc
incl
popa
inc
xchg
stos
addb
jg
xor
cmp
rolb
mov
in
pushf
inc
add
mov
push
add
add
mov
sub
add
stos
and
xor
mov
mov
lods
xor
or
mov
cmc
xchg
add
xchg
insb
push
dec
test
ficoms
mov
sub
add
ljmp
add
mov
mov
rcl
stc
out
enter
je
add
lcall
push
hlt
cmp
add
pcmpeqb
mov
cltd
sbb
in
xchg
mov
mov
les
mov
rolb
sti
or
jbe
js
pop
xchg
mov
loop
mov
push
inc
add
mov
mov
add
pop
movsb
enter
cmp
mov
mov
mov
cmpsl
mov
add
inc
xor
or
mov
pop
inc
pushw
imul
mov
js
xchg
jbe
dec
dec
test
or
xchg
aaa
mov
fcompl
jo
mov
fs
pop
push
add
mov
es
add
mov
mov
push
add
pop
lock
inc
fs
add
add
mov
mov
add
mov
add
inc
add
pusha
add
jnp
sbb
add
mov
cli
inc
add
inc
add
das
sub
and
mov
rolb
inc
xor
mov
cmp
mov
and
arpl
mov
push
push
jae
movsb
mov
mov
add
mov
loopne
mov
rolb
mov
pop
fsubs
push
loop
mov
imul
leave
pop
pop
xor
out
mov
jg
jmp
mov
push
add
add
xor
or
sub
add
or
imul
lea
and
int3
inc
pshufw
jno
fdiv
jne
xchg
imul
or
insb
addb
sti
loop
mov
add
lret
mov
jo
mov
pop
sti
push
mov
or
insb
in
scas
test
add
add
mov
scas
xor
test
test
adc
mov
add
inc
fnstenv
mov
mov
frndint
cmp
mov
repz
fstpl
cli
add
add
mov
lcall
pop
mov
sub
xchg
pop
dec
xchg
pop
pusha
add
in
add
mov
mov
rolb
mov
in
and
or
lahf
jl
dec
jmp
mov
stc
out
pop
adc
imul
jbe
scas
jo
mov
mov
mov
mov
add
add
xchg
add
xor
outsb
sub
add
imul
flds
iret
mulb
add
xchg
cld
lea
or
repz
mov
pop
dec
hlt
jge
dec
les
scas
int
push
movsb
movsb
pushf
mov
lret
scas
push
add
decl
dec
inc
sub
or
insl
mov
mov
pop
out
mov
push
jns
enter
sbb
xchg
dec
pop
push
repnz
cmpsl
cmp
mov
mov
cmp
sbb
test
push
outsb
pop
adc
xor
mov
xchg
mov
add
mov
lahf
push
mov
dec
int3
rolb
mov
xor
mov
add
mov
xor
mov
rolb
mov
mov
movsb
sbb
ds
sahf
inc
add
repz
mov
cmp
xlat
jg
lods
mov
add
mov
movsl
xlat
cwtl
push
mov
in
pop
mov
add
mov
xor
jg
lcall
xchg
mov
add
addb
push
xchg
add
pop
dec
add
add
mov
mov
fsubs
mov
mov
add
or
shll
push
mov
aam
push
lret
adc
mov
mov
in
xor
mov
fdivrl
popf
and
mov
mov
sub
sbb
xor
dec
jnp
lahf
das
popa
pusha
add
insl
mov
movsl
out
xor
mov
pop
sbb
jne
add
mov
idivl
mov
jns
loop
mov
push
add
inc
add
adcl
repz
aaa
pop
cmpsb
or
lahf
scas
rolb
mov
pushf
das
movsl
cmp
inc
add
cs
testb
in
xlat
rolb
mov
loope
lret
loop
mov
imul
jl
icebp
negb
cltd
dec
cmpl
rolb
mov
pop
das
rolb
mov
ficoml
and
mov
or
adc
add
mov
push
pop
push
mov
inc
cld
cmpsb
in
or
dec
mov
push
pop
and
mov
or
fadds
add
js
push
xor
mov
fidivs
pop
mov
lock
es
mov
mov
outsl
adc
mov
mov
xchg
mov
mov
dec
insl
sub
xor
faddl
push
pop
and
xchg
push
jge
add
loope
add
movb
aam
push
popa
insl
in
mov
add
rolb
mov
sbbl
add
mov
pop
sub
fstp
cli
arpl
or
cmp
add
sbbl
movsl
ss
xlat
xchg
aam
add
lret
das
dec
mov
and
mov
fwait
in
add
mov
repz
jbe
pop
xchg
nop
add
mov
mov
adc
mov
add
or
cmpsb
imul
push
add
mov
mov
mov
xorl
xchg
push
push
add
mov
pop
test
and
mov
ss
jae
lds
ret
and
mov
mov
je
shl
fnsave
and
adcl
enter
mov
add
or
popa
mov
add
les
or
add
cmp
mov
ds
jo
mov
add
call
mov
fwait
mov
inc
cmp
cmpsb
and
ja
iret
push
lock
in
xchg
inc
xchg
add
inc
xor
pop
push
mov
ljmp
jbe
out
adc
mov
adc
mov
in
mov
add
mov
popa
icebp
jmp
cmp
mov
mov
add
mov
scas
mov
lock
xchg
icebp
fsubr
in
mov
add
add
loope
mov
clc
cwtl
dec
hlt
test
add
add
sbb
add
add
jae
add
xchg
xor
sub
sti
xor
inc
pcmpgtb
add
stos
pop
in
add
mov
xor
mov
mov
das
and
das
imul
mov
jmp
int3
in
push
xchg
add
add
mov
add
in
rol
jp
jge
mov
scas
repnz
ret
aad
fdivrl
imul
leave
cli
inc
push
aam
aas
or
loop
mov
dec
or
push
inc
popf
xlat
push
cwtl
push
addb
loop
mov
dec
mov
cltd
leave
adc
int3
mov
pop
loop
mov
call
sub
clc
push
imul
mov
data16
and
xchg
mov
add
inc
add
push
jne
add
mov
nop
add
add
addb
adc
dec
mov
xor
mov
mov
add
shll
add
push
lret
add
push
daa
repz
add
add
arpl
mov
mov
and
mov
es
lock
stos
ret
mov
pop
sbb
mov
movb
sbb
icebp
icebp
mov
add
cmpsl
dec
in
adc
divl
add
int3
roll
add
imul
js
in
into
mov
sub
mov
addb
xor
mov
jg
add
mov
iret
jbe
add
push
add
xchg
add
aam
add
rolb
lret
push
enter
imul
rolb
mov
test
jmp
add
mov
xor
mov
jmp
add
mov
mov
xor
mov
dec
roll
pop
cmpl
mull
mov
add
lds
add
popf
lock
cmc
ss
dec
pop
neg
mov
xlat
mov
xor
mov
scas
lea
jno
out
add
jmp
mov
push
sbb
xor
mov
xchg
je
add
add
loop
mov
in
mov
nop
add
je
or
iret
in
and
addb
imul
cmp
push
add
mov
fnstsw
cmp
popa
scas
call
nop
add
xor
mov
inc
push
add
out
mov
push
enter
jae
mov
into
push
bound
mov
lea
mov
out
jg
cwtl
pop
dec
ret
insb
xchg
aas
aas
call
mov
mov
daa
cmpsl
lret
xor
mov
pop
loop
mov
gs
mov
add
aaa
push
push
movsb
dec
in
loopne
mov
movsl
xchg
sub
iret
imul
jecxz
xchg
mov
mov
add
mov
add
pusha
add
pop
xchg
push
in
mov
mov
jecxz
mov
rolb
mov
inc
rolb
mov
push
jno
cmp
xchg
add
loop
mov
arpl
fiaddl
bound
mov
xchg
popf
cmp
scas
dec
nopl
mov
add
mov
mov
imul
mov
jb
mov
pop
adc
mov
scas
pop
or
push
fists
add
lods
loope
in
inc
dec
sub
push
mov
add
addb
cltd
stos
add
jbe
lods
mov
out
push
dec
pop
jnp
dec
insl
fsubrl
push
mov
xchg
sbb
mov
rolb
mov
inc
outsl
lock
pop
negl
rolb
enter
jbe
jae
test
mov
pop
int
mov
loope
mov
push
add
repnz
mov
dec
data16
mov
xchg
add
aas
pop
pop
jmp
ljmp
or
out
cmp
add
jae
xor
add
mov
add
popf
cwtl
mov
mov
pop
test
xchg
add
jg
jle
add
mov
mov
xchg
addr16
add
inc
xor
mov
sbb
add
mov
add
xchg
pop
popa
xchg
into
cmp
xchg
push
insl
mov
cli
or
add
dec
dec
jl
cmp
inc
add
push
cmp
or
add
xchg
cmpsl
push
repz
sub
inc
std
inc
jo
mov
enter
jmp
or
out
lret
add
mov
mov
add
add
add
fstl
add
fstl
add
jbe
rolb
mov
pop
jecxz
sub
inc
int3
inc
leave
icebp
push
lahf
ret
pushf
push
les
push
dec
push
mov
and
popa
add
mov
cmp
movsl
fildl
xchg
add
jmp
mov
mov
pushf
ja
adc
cmp
int
add
mov
sub
pop
test
sub
popa
inc
xchg
ss
xchg
jno
cli
adc
add
in
aad
dec
add
mov
push
jb
mov
mov
sub
scas
mov
xchg
dec
ss
fcompl
addb
jo
mov
roll
out
lea
xor
sbb
outsl
aaa
rolb
mov
mov
mov
mov
mov
faddl
pushf
popa
push
mov
adc
pop
leave
mov
mov
lock
and
mov
mov
fcomp
aas
xor
mov
out
jnp
fsubrl
add
std
inc
fisttps
mov
mov
add
std
add
outsb
mov
test
adc
mov
aaa
cmpsl
mov
adc
mov
mov
xchg
lcall
push
add
jl
push
mov
lock
insb
movsl
adc
cwtl
or
add
mov
leave
ss
shrl
push
cltd
mov
mov
xchg
das
addb
fnstsw
lret
daa
and
mov
jbe
sub
mov
add
mov
add
ss
addr16
dec
xchg
jmp
add
dec
mov
js
out
xchg
adc
jmp
pop
daa
into
cltd
sbb
xchg
add
pop
adc
fucom
push
pop
std
pushf
mov
xchg
out
stc
aas
das
sub
mov
scas
jp
rolb
in
jp
out
and
cmp
jecxz
sbb
add
and
add
jecxz
fdivl
mov
sub
mov
dec
test
into
scas
fbld
mov
lods
movsl
jmp
add
mov
rolb
lods
lods
xchg
data16
or
add
lahf
out
add
sbb
addb
jno,pt
fists
in
movsl
add
mov
popf
lret
add
ljmp
mov
cld
lods
imul
out
dec
movsl
je
inc
jmp
sbb
xchg
xlat
out
testl
fstl
mov
dec
xchg
pop
imull
rcl
loopne
mov
adc
fsin
lahf
push
test
xchg
mov
inc
add
add
clc
xor
mov
leave
sahf
mov
popf
xor
mov
mov
cmp
aam
add
pop
sbb
cmp
and
in
pop
test
mov
xor
dec
loopne
mov
pop
sbb
andl
mov
bound
mov
inc
push
addb
adc
jg
add
scas
push
std
jbe
add
cmp
add
leave
sahf
sbb
es
push
add
out
cs
sbb
loope
xchg
push
out
sbb
scas
push
ss
scas
mov
into
and
add
mov
mov
enter
iret
ja
test
idiv
rcll
mov
or
call
mov
xchg
push
movsl
idivl
add
pop
mov
pusha
add
or
mov
mul
mov
movsb
aaa
lcall
icebp
int
xchg
lods
orl
add
xchg
push
inc
add
sti
xlat
pop
dec
dec
iret
iret
pusha
add
mov
add
lock
rorl
mov
add
mov
add
push
or
push
lret
lcall
pop
lea
out
cmp
cld
mov
xchg
dec
jnp
mov
test
je
std
add
pop
push
cs
pop
in
std
push
mov
mov
jecxz
lahf
clc
scas
pop
mov
pop
mov
clc
xchg
and
xor
ret
lods
sub
bound
mov
fwait
pop
mov
cmpsb
xchg
js
jns
push
mov
dec
cmp
add
xlat
fdiv
imul
loope
add
mov
cmp
clc
push
bound
mov
mov
mov
ljmp
dec
xor
adc
es
dec
lods
fbstp
mov
sub
inc
xor
ljmp
insb
jnp
or
fldl
ss
hlt
push
arpl
fstpt
mov
sbb
out
int3
adc
mov
test
inc
add
mov
add
adc
push
out
aas
stos
stos
mov
inc
and
nop
add
rolb
imul
push
out
jns
imul
int
inc
out
popa
and
in
ret
lds
and
inc
pop
dec
sub
push
repnz
addl
mov
add
cld
xchg
xchg
add
imul
add
xorl
add
sti
ljmp
mov
popa
xor
add
cmp
add
and
mov
cmp
cmpsb
lock
js
push
adc
add
fwait
pusha
add
mov
movsl
push
sbb
stos
mov
mov
test
add
mov
add
or
xor
mov
add
sub
mov
mov
lret
and
jb
mov
dec
outsl
in
loop
mov
lea
sub
faddp
xchg
flds
mov
sub
dec
stos
js
nop
add
mov
in
push
dec
loop
mov
add
sbb
add
popl
jb
mov
ss
adc
rorl
frstor
push
push
fisubrl
in
inc
jp
dec
jmp
fcomp
pop
adc
mov
mov
icebp
jne
je
mov
mov
xchg
rolb
mov
mov
das
les
add
loope
push
not
add
outsb
lods
xchg
sbb
pushf
sbb
cs
jns
mov
add
and
mov
add
inc
daa
pop
mov
repnz
xor
add
add
cltd
lods
sbb
push
mov
mov
mov
mov
stos
popa
frstor
pop
jns
cmp
sbb
pop
outsl
pop
lds
adc
shll
sub
push
xlat
lret
ljmp
cmp
cmc
ja
pop
adc
mov
mov
jmp
mov
test
out
jns
sub
in
mov
add
ja
fs
cmc
inc
add
out
sar
rcl
add
scas
and
add
cmc
arpl
dec
mov
add
mov
mov
mov
or
cli
push
testl
xchg
mov
mov
daa
inc
add
sub
sbb
inc
lahf
and
repz
sub
adc
rolb
mov
jmp
add
mov
add
lcall
xor
mov
dec
mov
clc
adc
mov
jne
cmc
scas
sar
sti
dec
jne
outsb
sbb
shrl
and
lods
dec
sbb
cltd
out
stc
dec
jb
mov
push
add
mov
std
dec
or
aam
addb
pop
inc
pusha
add
add
push
dec
orl
insb
sahf
rolb
fsubs
add
mov
and
and
mov
nop
add
lea
mov
notb
mov
xchg
push
add
icebp
jle
mov
push
push
add
mov
scas
out
int3
adc
mov
push
repnz
add
xor
sbb
and
gs
sub
int3
cmp
xchg
sub
scas
cli
insb
pop
popw
ljmp
sub
dec
stos
cli
mov
mov
add
aam
sbb
add
pop
and
add
mov
fs
add
in
aaa
push
pop
sbb
push
cmpl
jb
mov
push
addb
pop
mov
jge
add
mov
dec
cmp
cmpl
adc
jecxz
cmp
inc
cld
mov
mov
cmp
fists
dec
addb
nop
add
filds
push
push
vunpckhpd
mov
shl
add
add
fisubrs
dec
inc
jae
int3
mov
mov
and
mov
add
xchg
add
mov
je
clc
mov
icebp
mov
gs
jecxz
rolb
mov
rolb
mov
mov
adc
sbb
sbb
xchg
clc
cmc
leave
jle
mov
or
add
les
or
jecxz
jns
xchg
add
mov
pop
cli
sahf
unpckhps
mov
add
xor
add
jbe
jmp
sub
pop
add
mov
mov
ljmp
imul
or
sub
mov
pop
mov
pop
lods
popf
push
lods
adc
roll
pushl
das
out
inc
out
or
mov
mov
sbb
fwait
push
mov
ret
jg
sub
addb
xchg
xchg
add
xchg
mov
imul
lods
fisubs
sbb
test
das
js
mov
mov
in
addb
jae
cmp
jp
xchg
add
xor
mov
dec
out
sub
fcoml
idivl
mov
pop
and
dec
pop
and
mov
pop
frstor
mov
add
cmp
movl
mov
ret
loopne
mov
push
lods
ds
inc
pop
mov
jp
pushf
mov
sbb
in
cmp
add
stos
divl
roll
mov
sub
rolb
lods
mov
lods
rolb
mov
dec
mov
dec
xor
mov
mov
les
add
movsb
xor
iret
dec
mov
inc
adc
mov
ljmp
lds
mov
repz
lock
push
add
push
xchg
add
mov
gs
add
lahf
mov
jmp
jge
lock
add
dec
insl
lods
lds
pop
sub
mov
enter
jl
fdivl
xchg
jnp
jle
add
stc
xor
sbb
idivb
mov
mull
mov
sbb
pusha
add
mov
stos
loop
mov
add
cld
nop
add
sbb
add
out
daa
jge
dec
push
scas
cld
dec
cmc
bound
mov
mov
mov
mov
or
pusha
add
mov
fnstenv
xlat
jl,pn
sub
add
inc
add
adc
xor
add
mov
hlt
xlat
xchg
addb
cltd
jns
add
add
mov
push
push
add
fs
nop
add
sbb
add
mov
push
jmp
cmp
xlat
pop
lods
fs
lret
pusha
add
add
inc
pop
xchg
je
loop
mov
inc
add
out
mov
xor
xor
sub
es
fs
pop
and
loop
mov
add
pop
in
push
push
xor
adc
mov
ss
enter
in
stos
out
mov
adc
push
jne
mov
call
cld
pmuludq
push
add
dec
xchg
in
and
mov
mov
mov
inc
mov
push
add
jl
add
popa
push
ret
cmp
add
mov
add
scas
or
pop
and
in
inc
jno
and
mov
sub
scas
mov
add
mov
xor
xchg
rolb
mov
mov
cmc
loope
outsl
lret
fs
lock
adc
rolb
mov
add
add
mov
mov
fwait
mov
sub
jg
xchg
sbb
lret
enter
inc
add
xor
mov
hlt
aad
iret
bound
mov
dec
test
sub
arpl
mov
add
add
ss
nop
add
mov
mov
aas
add
cmp
push
enter
sub
mov
add
jnp
add
aam
xor
sbb
fisubs
mov
jbe
adc
mov
or
out
jle
add
add
xchg
fidivrl
xchg
dec
add
mov
add
and
add
add
mov
lret
add
pop
cs
sub
loopne
mov
jp
sub
add
or
fistps
dec
mov
adc
mov
add
mov
jmp
and
add
mov
jbe
scas
push
not
or
sti
xlat
push
cmp
cld
mov
or
stc
lea
jne
dec
lods
lock
adc
mov
mov
mov
pusha
add
sub
dec
push
xor
fiadds
or
xchg
mov
lods
daa
and
mov
scas
mov
ret
or
test
add
popa
aam
mov
jo
mov
mov
mov
repz
lds
mov
out
int
jecxz
add
out
cld
mov
adc
mov
shrl
sub
rolb
mov
add
add
mov
test
into
daa
pop
movsl
push
add
cwtl
mov
nop
add
psadbw
out
lahf
fildll
mov
leave
cmpsl
xchg
mov
sub
imul
into
push
stos
fdivr
add
add
scas
int
add
sbb
add
or
ja
add
sub
mov
call
jne
add
out
lahf
repz
cmp
fwait
jnp
sbb
rolb
mov
aaa
test
pop
clc
xlat
and
mov
mov
jbe
mov
and
mov
rorl
dec
push
rolb
in
ja
das
and
lcall
and
mov
cmp
mov
adc
stc
or
mov
sub
mov
lahf
adc
inc
repnz
mov
mov
sub
roll
lret
push
rolb
jae
fwait
in
jmp
xor
mov
add
jae
xor
daa
push
xor
mov
add
lods
add
mov
pop
sub
faddl
mov
mov
xor
and
add
add
adc
mov
xchg
mov
mov
frstor
mov
pop
or
mov
sub
mov
test
je
push
les
add
mov
leave
push
mov
imul
mov
stos
stos
xchg
xor
mov
sahf
rolb
mov
cmp
adc
mov
add
mov
push
pop
shrl
cltd
inc
add
out
jle
add
fsubr
out
mov
push
add
pop
shrl
stos
inc
add
jns
std
mov
fstl
mov
add
repnz
imul
mov
pop
int
add
push
fcmovb
sahf
scas
daa
loopne
mov
fcompl
mov
daa
pop
aas
xchg
add
aad
and
flds
sbb
jmp
cmpsb
dec
imul
pop
andl
mov
add
fsubl
mov
mov
ja
movsl
cwtl
jge
xor
mov
lahf
aaa
mov
inc
add
into
push
inc
add
sbb
jp
mov
iret
stos
and
mov
mov
mov
fnstenv
mov
xchg
xchg
lock
add
add
incl
test
add
arpl
or
or
das
clc
cmp
aas
xor
mov
lods
ja
hlt
push
stos
inc
add
test
sub
rorl
insb
dec
push
cmp
mov
roll
mov
negl
push
clc
iret
jge
dec
inc
jmp
add
mov
divl
inc
add
dec
loopne
mov
hlt
scas
movsb
add
xchg
sub
repz
or
add
rolb
mov
out
add
call
add
dec
cmp
pop
cmp
add
mov
fucomi
add
or
mov
xor
mov
aad
push
xchg
inc
imul
mov
push
mov
mov
push
or
sub
push
add
xchg
sbb
ljmp
mov
shll
xchg
les
push
add
rolb
sub
jecxz
cltd
jbe
jmp
xchg
out
out
pop
clc
outsl
loop
mov
mov
add
and
test
fs
clc
orl
mov
push
add
xchg
inc
add
and
add
pop
jns
std
imul
nop
add
mov
insb
push
pop
xor
adc
mov
clc
call
push
adc
pusha
add
jo
mov
call
inc
and
sub
mov
push
push
lcall
int
rolb
mov
shl
pop
pop
js
and
mov
and
add
sub
add
insb
out
add
out
pop
outsl
addb
xchg
fcompl
jnp
roll
lock
adc
mov
xchg
sti
mov
mov
mov
mov
jmp
leave
xor
mov
add
pop
adc
lea
sahf
sbb
add
iret
ss
mov
stc
jp
jp
lahf
lea
xchg
addb
lds
mov
jo
mov
fisubrl
movsb
xor
mov
adc
mov
xor
add
mov
sbb
xor
add
add
add
add
pop
xchg
and
rorl
mov
mov
or
cli
adc
pop
sub
daa
ror
xchg
nop
add
cmp
pop
addb
sub
ret
ljmp
mov
push
movb
or
add
mov
mov
sub
mov
or
loopne
mov
out
mov
mov
sub
sbb
mov
out
pop
jecxz
add
inc
push
add
vpsllw
xchg
xchg
pusha
add
bound
mov
xchg
add
and
add
outsb
mov
rolb
mov
ljmp
mov
xchg
addb
push
add
push
enter
and
mov
insl
mov
sbb
ss
not
fucomip
inc
push
test
andl
cmp
andl
add
cli
out
int
add
xchg
xor
mov
pop
adc
addr16
cmpsb
ss
dec
mov
push
jae
cmp
jno
outsb
dec
ret
mov
jle
add
mov
sbb
mov
fcmovu
ud0
icebp
es
jge
jb
mov
incb
mov
mov
bound
mov
sub
idivl
movsb
addb
push
add
jg
aas
jbe
inc
add
pop
loop
mov
rolb
mov
add
mov
daa
and
mov
push
or
or
mov
inc
fisubs
add
jp
dec
cmpsb
push
mov
push
push
or
adc
mov
and
mov
add
addb
test
mov
add
out
test
add
sub
sub
daa
xchg
add
dec
lret
jge
or
nop
add
cmp
fistps
add
pusha
add
or
rolb
sahf
data16
mov
dec
sbb
out
push
mov
xor
sbb
enter
add
add
sahf
loope
add
test
add
insl
add
mov
xchg
jbe
pop
mov
mov
mov
mov
fnstcw
loop
mov
int3
or
mov
mov
add
add
aam
andl
add
xchg
test
push
add
iret
and
add
mov
inc
lods
sub
sahf
scas
scas
cmp
out
inc
mov
insb
das
pop
leave
movsl
sti
lret
adc
mov
add
add
inc
add
adc
mov
into
out
sub
aam
pushf
push
enter
pop
test
stos
xor
mov
icebp
outsl
and
or
pop
outsb
inc
cltd
adc
mov
add
and
roll
jmp
xchg
call
xor
test
daa
sub
push
movsb
adc
adc
mov
mov
negb
stos
cli
cmp
cwtl
pop
popf
pop
mov
out
pop
repnz
dec
outsb
dec
mov
stos
pop
dec
fnstsw
cmpsl
addr16
mov
pushf
inc
mov
pushf
pusha
add
pop
rolb
icebp
or
shll
mov
pop
lods
outsb
jbe
popf
ja
out
jne
xchg
int3
jg
and
jb,pt
mov
push
xchg
add
sub
add
cmp
add
add
mov
mov
scas
stc
stos
inc
add
out
scas
xchg
mov
mov
aad
add
mov
push
cmpsl
icebp
addb
psubq
xchg
nop
add
addr16
movsl
push
mov
data16
ret
cld
std
inc
cmpsb
push
adc
adc
add
sbb
push
sub
and
mov
insl
xchg
add
add
mov
idivl
ss
imul
fidivrl
rolb
mov
cmp
fildl
sbb
int3
testb
xchg
xlat
push
and
mov
jg
inc
negl
mov
fst
dec
imul
mov
rcrl
mov
push
and
mov
adc
mov
sub
lods
sbb
mov
push
test
ds
lds
mov
mov
xchg
out
sbb
add
in
lods
adc
ret
xor
insl
sub
add
inc
std
jno
inc
add
mov
ds
icebp
inc
xchg
add
mov
das
push
add
add
lret
jns
sbb
add
add
loope
cmpsb
push
pushf
cmp
adc
add
mov
and
xor
mov
leave
mov
add
mov
sub
push
mov
insl
pop
xor
adc
pop
sbb
mov
test
clc
cmp
add
jno
add
scas
push
add
nop
add
sbb
aad
jmp
and
mov
dec
ja
add
mov
add
outsb
add
ret
in
out
pop
sbb
lahf
lock
sub
add
rolb
mov
addr16
out
sbb
and
xor
test
popa
mov
dec
sub
push
jmp
icebp
mov
stos
xchg
push
insb
addb
xor
mov
aas
dec
push
pushf
call
mov
jb
mov
dec
jl
sbb
xchg
scas
out
mov
add
aam
adc
notl
imul
mov
fldenv
add
push
push
xor
or
cmpsb
fnstsw
push
into
xchg
cmp
add
call
inc
fcmovnb
je
add
sub
add
mov
xor
std
xchg
xor
xchg
fisubrs
xchg
je
jecxz
insb
jl
cmp
sub
jnp
mov
ja
xchg
call
aam
xchg
iret
dec
dec
fimull
loopne
mov
pusha
add
mov
add
test
test
pop
sbb
rolb
pop
and
fldt
aaa
call
cmp
mov
sbb
inc
and
mov
add
sahf
call
iret
cmpsl
jl
adc
mov
cmp
add
notl
in
les
fs
add
cmp
daa
jne
and
pop
xchg
into
addb
scas
xchg
cli
loop
mov
outsl
mov
add
inc
mov
outsl
pop
add
mov
cmp
rorl
inc
add
add
cmpl
dec
push
cmp
xchg
cmp
xor
mov
adc
or
das
sub
add
xor
stos
mov
pop
mov
add
dec
jmp
xlat
out
push
xor
rolb
cmp
mov
jae
out
xchg
arpl
pop
jge
add
sbb
add
pop
sbb
sti
jo
mov
iret
cli
das
loopne
mov
lock
daa
enter
push
jg
test
sbb
mov
test
pop
insl
jae
icebp
cli
add
lods
lods
loopne
mov
testl
sbb
lock
int
lret
mov
mov
fbstp
or
cs
add
push
pop
leave
push
mov
jae
mov
dec
cmp
add
mov
sbb
cwtl
sub
add
mov
pop
imull
dec
das
in
repz
ficomps
jae
loopne
mov
loopne
mov
pop
mov
jecxz
enter
mov
xchg
inc
pop
sbb
add
inc
scas
adc
mov
add
fdivrl
push
add
jae
dec
jb
mov
les
cli
inc
jae
aad
repnz
pop
pop
mov
pop
mov
mov
add
add
lcall
scas
pop
sub
mov
std
add
sub
add
xchg
adc
dec
decb
sub
jbe
lock
repnz
in
fldcw
addb
inc
mov
int
fs
mov
pushf
popa
jmp
sbb
scas
test
mov
mov
cmp
push
xor
add
adc
sub
mov
xlat
stos
rolb
xchg
add
insb
scas
push
xor
xlat
and
mov
jae
sbb
add
mov
add
add
mov
popf
inc
insb
insb
aam
in
mov
ret
mov
mov
mov
dec
mov
inc
xor
inc
cmpsb
out
loop
mov
jne
or
outsb
push
jno
scas
cmp
cli
jmp
hlt
loopne
mov
xor
cmp
clc
jecxz
sbb
hlt
push
add
add
loope
arpl
xor
mov
mov
pop
push
lods
test
mov
mov
in
push
xchg
lcall
outsl
mov
xchg
jno
pop
mov
and
loopne
mov
pop
ss
xchg
outsb
jg
out
ficoml
or
push
hlt
ficoms
mov
inc
les
stc
sbb
rolb
mov
push
add
ljmp
leave
inc
push
xlat
xlat
cmp
dec
ret
and
mov
add
mov
rolb
mov
add
add
mov
or
cld
fs
lock
ficomps
inc
xchg
in
xchg
xor
in
push
add
jb
mov
imul
stos
push
pop
int
jno
sbb
stc
push
shll
add
mov
sub
in
mov
jns
lret
sbb
nop
add
mov
je
in
jp
mull
add
xor
push
add
rolb
mov
mov
addr16
addb
icebp
aad
movsb
xchg
mov
mov
mov
imul
ljmp
mov
add
and
repnz
mov
pop
aaa
sub
lret
pop
sub
adc
mov
scas
das
dec
repnz
mov
rep
inc
push
cmp
inc
or
add
and
mov
flds
add
cmp
mov
xor
push
jne
add
lahf
inc
cwtl
insb
int
jecxz
push
dec
std
xchg
add
orl
lods
and
mov
mov
cmp
inc
pop
mov
repnz
cmp
lcall
fistl
fs
pop
scas
shl
lods
out
cmp
mov
add
je
add
inc
mov
add
jl
cmc
lds
push
add
pop
mov
icebp
lds
mov
mov
add
add
aad
cwtl
cmp
test
add
test
pop
inc
cmp
clc
and
mov
lods
pop
inc
xchg
mov
leave
fwait
or
push
pop
orl
je
fwait
cmpl
pusha
add
pusha
add
les
mov
and
mov
fistpl
xchg
add
mov
or
pop
jmp
mov
mov
aam
jl
imul
scas
or
std
push
test
popf
jne
rcll
inc
nop
add
mov
std
sbb
enter
or
popa
out
dec
sub
pop
and
mov
jge
add
dec
mov
in
jp
add
add
inc
fists
push
mov
mov
inc
add
mov
rolb
in
sub
jge
das
and
cmpsl
add
mov
fbld
clc
sub
je
push
add
or
mov
jno
xor
inc
lock
sbb
mov
add
aad
iret
ja
inc
and
in
addb
pop
sub
fdivr
and
xlat
in
cmpsl
divl
xchg
pusha
add
sub
add
add
mov
sub
cmpsl
mov
ja
push
int3
sub
icebp
pop
out
fwait
popa
sahf
test
lret
popf
mov
mov
add
mov
lahf
clc
or
mov
fdiv
je
push
clc
addb
push
xor
mov
mov
pop
mov
add
add
mov
xchg
add
sub
testb
adc
out
les
int
cltd
jmp
mov
rorl
aad
push
int3
loopne
mov
xchg
ja
adc
add
mov
sub
movb
dec
jnp
or
andl
or
lods
ficoml
movsb
xlat
sub
inc
test
and
inc
test
ja
xchg
add
mov
add
mov
xor
mov
test
mov
add
cmp
ret
mov
push
dec
xchg
sub
sti
bound
mov
xchg
xor
adc
dec
mov
daa
leave
cmp
call
add
xor
mov
test
mov
nop
add
out
into
das
sti
testl
stos
fwait
lcall
cltd
dec
rorl
dec
sbb
add
add
add
fiadds
out
jmp
push
push
push
jl
xor
mov
scas
addl
lea
xor
push
nop
add
and
mov
add
stc
enter
xor
add
pop
bound
mov
xor
mov
sti
xor
sahf
orl
mov
pop
lahf
xchg
cmc
inc
add
mov
add
sbb
lods
rcll
mov
cmpsl
movsl
add
in
mov
add
lcall
dec
dec
xor
cld
js
lock
aaa
push
stos
fwait
jge
xor
xor
mov
cld
ljmp
ljmp
xchg
add
js
push
sarl
pop
pop
inc
add
or
jno
add
loope
data16
pop
sub
outsb
int3
xchg
in
fcmovnb
popf
out
adc
mov
repz
xor
xor
clc
popa
sbb
xchg
sbb
stc
ret
inc
add
sbb
popa
outsb
pop
loopne
mov
sbb
push
ficoms
add
icebp
aam
add
jecxz
bound
mov
popa
sub
cld
in
stc
movsl
push
aad
pop
jns
call
xchg
cwtl
ss
jmp
mov
in
pop
push
in
push
add
idivb
outsl
movsl
stos
xor
mov
dec
sub
add
and
mov
add
hlt
xchg
add
jno
cmp
das
inc
mov
sbb
adc
mov
jge
data16
push
in
push
inc
adc
mov
push
add
add
ret
pop
xor
mov
push
jno
mov
cmc
lds
je
jg
xchg
mov
mov
xchg
call
lret
xchg
add
add
add
jo
mov
add
ret
and
movsb
stc
outsb
out
jb
mov
aaa
scas
xchg
mov
rolb
cmpsb
mov
xchg
or
lods
or
in
fwait
dec
iret
fsubrs
rolb
mov
add
stc
mov
int
mov
lock
mov
or
xor
mov
mov
xchg
pop
jecxz
rolb
mov
xorl
add
jno
mov
das
jnp
ret
fidivrs
ret
mov
test
in
fdivs
add
mov
add
mov
cmpsl
outsl
xor
add
scas
call
xchg
mov
xchg
add
cmp
jecxz
das
lcall
aas
inc
inc
or
add
sahf
in
and
fadd
mov
push
dec
std
sbb
ss
jae
in
bound
mov
add
and
adc
mov
xor
leave
xor
out
inc
ljmp
lret
enter
pop
or
mov
xchg
out
push
add
mov
add
mov
or
outsb
sbb
addl
add
adc
mov
mov
add
xor
mov
arpl
jle
fadds
pusha
add
lods
xchg
mov
jl
add
pop
out
mov
inc
xchg
ret
mov
aam
imul
ficompl
cs
loopne
mov
pop
add
in
jnp
stc
inc
add
sti
jo
mov
imul
sbb
xchg
js
mov
lods
outsl
pusha
add
mov
push
data16
cld
lds
mov
into
add
mov
add
inc
out
sub
lods
jb
mov
mov
out
jmp
mov
les
dec
stos
pushf
addr16
xchg
lock
jle
jnp
pop
sbb
imul
sbb
cs
inc
add
pop
pop
adc
add
cs
mov
fisubrl
add
add
div
xor
push
adc
cmp
mov
xchg
adc
cmp
fbld
add
jbe
mov
pop
cmp
or
push
ret
int3
lret
jno
bound
mov
pop
mov
mov
pop
jns
arpl
inc
dec
sti
addb
pop
das
push
sub
add
out
sbb
out
cwtl
das
popf
push
sbb
sbb
cld
sbb
mov
pop
in
push
sbb
pop
jb
mov
pop
push
inc
push
add
scas
mov
das
aam
out
inc
xor
mov
pop
mov
iret
mov
pop
fisttps
mov
sbb
mov
das
jo
mov
add
mov
arpl
inc
outsb
pop
int
imul
ja
xchg
mov
push
repnz
cmp
mov
out
rolb
mov
out
add
mov
scas
mov
inc
add
pop
cmp
mov
mov
lret
sub
or
mov
sysexit
out
ss
dec
test
dec
jb
mov
and
jl
add
fsubrs
and
mov
mov
aaa
adc
mov
jo
mov
les
call
add
dec
aad
mov
cmp
rorl
loop
mov
int3
fidivl
mov
mov
and
push
add
add
sti
pushf
adc
sbb
lcall
push
add
mov
test
adc
dec
sbb
add
int3
jl
jnp
jnp
cmp
arpl
sbb
fidivs
mov
mov
nop
add
mov
xchg
das
sub
xchg
dec
cli
rolb
mov
jge
dec
inc
add
inc
add
scas
imul
movsb
pop
pop
cmp
push
push
mov
call
add
mov
add
ds
test
movb
mov
add
jno
xor
ss
pop
inc
aad
int3
imul
add
add
mov
test
cmpsl
imul
clc
addr16
or
mov
fcoml
push
lock
inc
add
add
mov
add
mov
mov
add
loop
mov
mov
add
mov
lods
mov
mov
mov
cmpsl
test
ljmp
xlat
push
ret
jmp
out
inc
inc
mov
cmp
mov
mov
add
add
mov
add
popl
add
mov
dec
mov
sahf
jge
lods
addr16
fsts
add
leave
lods
test
and
mov
push
jae
sbb
cmpsl
daa
sub
out
fisubrs
add
push
shrl
mov
xor
insl
push
loope
pop
mov
scas
lret
out
jne
dec
pop
lret
ljmp
movb
add
inc
add
push
sahf
cmp
jl
test
das
jne
fwait
out
fstpl
mov
cltd
cmp
iret
int3
dec
jle
dec
mov
xchg
add
add
inc
push
gs
pop
inc
add
sahf
add
repz
add
pop
sub
icebp
cmc
add
add
push
add
mov
imul
add
add
cmp
je
int3
iret
mov
js
or
jne
enter
or
adc
mov
int
mov
mov
ljmp
cwtl
or
add
push
fistpll
inc
cmp
xlat
js
or
out
push
add
fs
fstl
lods
imul
decb
cld
add
ja
push
add
mov
iret
cs
inc
jmp
hlt
dec
push
add
push
movsl
xor
mov
sbb
add
mov
jecxz
mov
sbb
cmpsl
pop
xor
mov
mov
pop
mov
xor
mov
frstor
out
in
sbb
add
popf
movsl
stos
loop
mov
mov
push
add
adc
das
dec
dec
push
add
cmp
loopne
mov
and
and
mov
es
xchg
sti
idivb
mov
jmp
adc
dec
inc
push
add
push
add
fwait
xchg
lods
fnsave
mov
xchg
rolb
mov
nop/reserved
xchg
add
sbb
adc
ds
mov
cmp
mov
add
add
and
outsl
mov
add
push
mov
dec
repnz
xchg
repz
lock
add
test
pop
loop
mov
add
iret
mov
mov
add
mov
cli
cmpsl
gs
and
in
ja
idivl
mov
add
add
add
