into
jl
dec
fadd
add
imul
loope
mov
add
in
aaa
xor
mov
in
mov
cmp
push
ret
jle
aas
pop
mov
push
jl
add
cli
mov
ds
stc
push
mov
pop
shl
mov
lret
sbb
sbb
test
ja
dec
mov
sub
pop
out
cwtl
inc
in
repnz
stos
sti
mov
cmc
mov
int
pushf
xchg
dec
jg
cmp
data16
push
push
dec
les
sbb
scas
pop
xchg
lret
scas
cmp
or
add
mov
xor
js
nop
hlt
pop
into
ss
mov
push
stos
shlb
cmp
mov
jno
add
adc
add
stos
lret
stc
call
lcall
popa
movsb
int
out
mov
add
mov
in
popf
inc
out
jge
push
cmp
fwait
push
movb
add
sti
inc
aaa
and
es
insl
jmp
jne
sbb
add
sub
es
mov
add
movsb
adc
xchg
lds
aad
sub
fsubl
add
lods
and
or
xchg
adc
addb
add
movsl
aad
mov
and
mov
sarb
add
add
jbe
sbb
adc
jns
rcll
mov
add
dec
lods
mov
add
add
adc
sub
mov
inc
add
cwtl
mov
or
mov
inc
pop
mov
mull
mov
pop
add
add
je
sub
bound
jne
ljmp
outsl
xchg
xchg
aas
int
mov
mov
adc
loopne
clc
cmp
pushf
jne
pop
push
inc
or
add
jle
mov
push
add
adc
bound
dec
sbb
pop
dec
cmp
call
sahf
mov
cmp
push
test
sbb
adc
int3
push
fistl
adc
add
enter
subl
cld
jnp
fwait
mov
inc
test
or
sub
test
sub
adc
dec
adc
inc
sbb
push
add
scas
icebp
dec
xor
fs
scas
mov
adc
repz
add
stos
dec
fs
jb
pop
pop
fnsave
pop
add
adc
xchg
add
cmp
mov
addb
ds
add
push
or
popf
mov
add
dec
lods
stc
xlat
out
dec
inc
add
sbb
push
or
inc
add
add
push
popa
movsl
or
dec
inc
add
push
mov
jl
jno
inc
adc
jo
jg
dec
xchg
mov
daa
test
cmpsl
enter
icebp
movsb
or
add
add
addb
sbb
adc
fidivrl
lods
test
cld
mov
add
shll
in
leave
stos
mov
pop
movb
mov
mov
leave
jno
pushf
loop
aas
js
xchg
mov
into
loop
mov
jb
rcll
xchg
in
and
xchg
pop
sbb
mov
push
stc
out
sub
add
aaa
lcall
sti
outsb
xor
push
add
stc
fcmovb
inc
and
sbb
in
sarb
fucomi
aaa
pushf
jbe
addr16
xor
sub
add
adc
xchg
loopne
inc
add
add
adc
lock
xchg
dec
test
data16
mov
idivl
frstor
in
xor
or
in
and
inc
mov
mov
or
movsl
add
xor
sub
test
and
xchg
sti
add
dec
dec
dec
mov
outsl
dec
pusha
add
mov
mov
dec
jle
data16
dec
push
xlat
cmp
add
xor
mov
add
mov
in
bnd
add
add
fidivrs
mov
jmp
push
insl
jle
daa
movsl
xor
dec
ret
lahf
arpl
xlat
in
aad
pop
mov
clc
xor
or
add
leave
test
push
rclb
sbb
add
lds
pushf
dec
out
mov
dec
iret
pop
inc
add
test
add
pop
jmp
rcrl
or
js
stos
pusha
add
push
add
cltd
cmpsb
icebp
push
push
fwait
mov
mov
arpl
xor
lcall
xor
and
fsts
push
fmull
ljmp
pushf
xchg
aas
sub
lock
pushf
cmp
cli
adc
fimull
cmp
jno
xor
cmp
stc
fs
mov
xor
je
add
pop
or
jb
jmp
ret
call
jno
push
pop
mov
arpl
dec
sahf
dec
fmuls
push
cli
std
ds
pop
fdivrl
fisubl
add
test
jmp
into
pop
sbb
lods
in
push
inc
mov
aas
sub
mov
cmpsb
pop
addb
lea
ja
pop
out
scas
inc
add
daa
rorl
push
leave
fs
pop
jno
leave
outsb
push
xchg
adc
sbb
mov
dec
into
sub
mov
out
sti
mov
popa
mov
sub
fidivl
xor
add
cmp
add
cmp
scas
loop
shll
and
iret
cli
in
das
dec
adc
inc
add
pop
rcll
add
or
dec
int
test
or
stos
jle
push
xor
pop
and
mov
mov
bound
adc
pushl
mov
jle
add
enter
fld
add
ss
push
add
inc
jae
sbb
cmc
pop
mov
mov
fisttps
les
jne
clc
test
int
add
addr16
or
mov
negb
int
xchg
lds
pop
push
je
and
jns
add
popa
push
mov
imul
int
test
and
rorb
xchg
lahf
jo
xor
leave
sti
test
test
ret
test
sub
inc
add
sahf
push
mov
loop
mov
lds
push
jcxz
push
add
mov
or
xchg
mov
sub
test
scas
push
add
ja
mov
in
pop
cmp
push
je
push
pop
mov
add
inc
insb
fdiv
repz
dec
jo
insl
decl
mov
loop
popl
and
mov
or
cs
jecxz
push
addr16
sbb
add
jle
and
daa
addb
sub
aad
jle
bound
jle
inc
pop
pop
mov
and
ret
xor
xchg
add
ds
dec
rolb
movsl
jg
or
pop
inc
add
inc
add
mov
pop
push
pop
pop
sbb
orl
test
scas
inc
imul
dec
jno
adc
adc
popa
dec
mov
add
xchg
iret
inc
add
adc
add
add
mov
fisubl
add
jge
addb
addb
mov
fists
mov
js
jmp
leave
imul
imull
adc
push
int
push
jmp
cmp
in
and
cs
jmp
add
mov
rcll
add
sbb
addr16
sbb
movsl
and
xlat
xchg
inc
dec
sub
rol
add
or
xor
repz
test
ret
imul
dec
mov
mov
addr16
sbb
pop
hlt
insl
xor
push
lret
or
stos
pop
test
lahf
bound
lods
addb
mov
cmp
stos
sbb
sbb
movb
lret
popf
repnz
ficomps
jle
fs
rorl
dec
pop
add
mov
jp
int3
fs
add
addb
xor
stc
xor
and
outsb
into
scas
popl
stc
fcmovnb
add
jns
or
movsb
ds
idiv
xor
jecxz
scas
push
dec
dec
ffree
add
mov
push
pop
in
rolb
add
push
lods
hlt
out
clc
mov
loop
push
add
iret
xor
and
scas
insb
mov
int3
addb
pop
movsl
mov
cmp
mov
add
or
in
add
dec
test
or
cmp
dec
cwtl
jl
xor
add
xchg
sbb
jbe
push
dec
in
adc
mov
add
fcmove
pushf
mov
adc
xor
dec
enter
lar
dec
and
mulb
std
cli
into
test
lods
outsl
shlb
add
xchg
adc
in
cwtl
sub
jnp
dec
dec
les
xor
aad
cmpsb
sub
mov
out
jno
push
mov
popa
pop
mov
push
mov
loopne
push
mov
dec
inc
mov
ffree
jo
popa
repnz
out
mov
sub
sub
adc
and
bound
lret
push
lea
push
fdivl
arpl
push
dec
jae
pop
call
lret
in
xor
add
jbe
lret
sbb
cltd
mov
xor
and
lea
stos
sub
jb
subl
mov
hlt
push
lret
add
mov
roll
std
cmp
dec
jge
rolb
sar
jecxz
mulb
add
daa
addl
dec
aam
push
sub
mov
cld
cmp
enter
repnz
add
xchg
cmpsl
addb
cltd
mov
jecxz
sahf
sbb
and
and
icebp
dec
je
repz
xchg
mov
mov
lods
jb
dec
mov
mov
pop
xor
push
data16
jb
dec
jl
lret
bound
xchg
inc
sbb
lods
dec
sub
push
add
inc
add
jge
dec
jno
mov
sbb
and
pop
dec
xor
mov
mov
cmpl
inc
add
xor
add
push
add
mov
and
fs
mov
jbe
ficoms
out
adc
enter
mov
test
aas
jle
add
add
mov
add
ja
insb
out
or
and
mov
jg
jecxz
ljmp
ss
pop
int3
pop
sarl
push
sahf
js
xchg
xchg
dec
and
orw
nop
js
mov
dec
sbb
add
add
xchg
fcmovu
gs
cli
cmp
aam
sbb
fisubrl
and
fsubrs
in
push
icebp
adc
sub
cmp
aas
fsubl
mov
cli
into
dec
testl
sbb
push
ficoml
lds
push
sar
adc
xchg
sbb
cmpsl
in
sub
pop
rclb
xor
mov
sub
cmp
pusha
add
xor
xchg
jae
add
test
dec
cltd
mov
mov
xor
add
mov
divl
loope
loop
test
add
pop
movb
add
mov
mov
pop
lcall
out
mov
pop
inc
add
repnz
cmp
sub
fdivrs
pop
pusha
add
or
adc
in
add
xor
aam
add
add
movsb
dec
mov
popf
icebp
imul
and
cmp
adc
xchg
inc
les
cli
pop
add
lcall
test
add
scas
sbb
jbe
xor
xchg
dec
inc
push
mov
sub
push
push
push
cld
call
sub
mov
imul
es
ss
lea
push
push
push
call
cmp
je
mov
lea
push
push
es
call
jmp
icebp
cmc
nop
cs
lea
mov
or
and
cld
or
xchg
lea
sub
xacquire
mov
sub
mov
cs
push
push
lret
jmp
add
add
dec
out
addr16
repz
jecxz
inc
add
stos
push
lods
inc
cmpsl
or
xchg
addb
mov
jb
das
mov
mov
cmp
stc
cwtl
inc
dec
daa
nop
sbb
inc
add
pop
mov
xchg
stc
jb,pt
int
push
sub
and
pop
ljmp
push
mov
decb
std
jbe
add
fsts
leave
mov
xor
push
add
add
pop
adc
ror
rolb
mov
sub
rolb
sti
aas
and
inc
add
inc
add
pop
lods
lods
push
pop
or
lcall
cmp
repnz
xchg
cmpsb
mov
dec
hlt
inc
in
mov
jo
popa
repz
adc
add
mov
cmp
cwtl
add
adc
fistpl
es
sub
add
addb
sbb
xchg
leave
lods
pop
inc
std
dec
ja
xchg
mov
pushl
arpl
xlat
cmp
push
dec
shl
or
push
jb
test
sar
mov
pop
jns
add
xchg
addb
clc
ret
jbe
aam
cld
mov
push
push
adc
mov
sbb
daa
movb
add
add
mov
ficoms
fnsave
addr16
mov
popf
fldl
pop
cli
cmpsl
fst
enter
fcoms
ds
mov
cmpsl
jmp
jnp
rcr
sbb
inc
mov
loopne
jnp
mov
adc
push
mov
xchg
xor
add
js
lret
in
imul
mov
pop
add
and
lcall
lods
push
add
and
mov
ret
sub
mov
mov
movsl
sbb
jnp
cltd
out
xor
nop
mov
filds
pop
addl
popf
jae
mov
stos
cmc
es
int
fisttps
fidivl
sbb
into
movsl
mov
mov
mov
shll
aas
das
adc
add
xchg
lds
mov
or
arpl
mov
or
fscale
or
sub
add
pop
js
jecxz
cmp
xchg
cs
dec
jmp
repz
mov
cmp
mov
cwtl
insl
cmp
add
std
cli
adc
int
fs
mov
push
xchg
addb
add
shl
adc
ds
dec
xor
mov
pop
pop
mov
cmp
iret
fwait
sti
daa
dec
adc
cmp
sahf
sbb
jne
lahf
dec
mov
outsb
mov
stc
sub
jge
sub
push
imul
push
push
je
ret
lods
xor
mov
in
cmpsb
mov
cltd
pop
add
push
pusha
add
addr16
add
xchg
out
sbb
outsb
subl
enter
mull
dec
or
lods
lret
scas
shll
sub
add
pop
push
add
test
dec
sahf
xchg
push
xor
add
shlb
inc
add
cltd
sbb
cmp
xor
loop
pop
mov
out
dec
lret
lock
ficompl
aad
push
push
pop
mov
xchg
mov
add
in
fidivs
xchg
popf
jno
add
movsb
out
negb
cmc
out
sub
sbb
push
cmc
ret
push
faddp
add
pop
jg
cld
add
sti
push
jae
add
lret
in
push
js
xchg
cmpsl
out
jecxz
push
aam
clc
data16
and
cwtl
scas
mov
push
icebp
cmp
cmpsb
sbbl
dec
cltd
out
je
movb
mulb
mov
cmp
lea
push
jno
lret
add
push
add
std
xchg
sub
xor
cmp
jg
leave
adc
push
sbb
add
mov
dec
dec
pop
lds
sbb
xor
or
test
lcall
sub
movzwl
cmpl
mov
cmp
mov
mov
sub
push
add
inc
gs
mov
mov
mov
nop
cmpl
push
push
daa
ja
scas
jo
mov
ret
push
or
jge
add
xchg
lods
push
inc
add
add
add
aam
add
pop
mov
jl
xchg
and
int3
hlt
push
imul
xchg
xchg
xchg
jno
sahf
inc
add
scas
loopne
sub
push
sub
jnp
rolb
add
or
pop
addb
mov
add
repnz
jns
shll
je
pop
xchg
nop
push
pop
dec
mov
rolb
fs
add
cmp
jno
pusha
add
lods
loope
into
or
add
or
add
cmp
fs
dec
push
mov
mov
sbb
cmpsb
cmp
int3
pushf
test
scas
add
data16
add
and
fistpl
movb
cmp
mov
insl
sbb
repz
sbb
xor
jno
lods
jb
cmp
push
ja
pop
push
add
fmulp
mov
add
mov
outsl
imull
decb
mov
ja
rorb
add
bound
mov
add
pop
adc
jmp
cmp
lock
add
mov
mov
sbb
dec
cmp
add
scas
fstpt
pushf
jb
dec
movsl
or
movsl
pop
sbb
xchg
test
cmp
test
in
cmc
test
dec
pop
adc
adc
jecxz
push
out
and
add
pop
cmp
test
test
fsubr
or
pushf
mov
inc
add
pop
addb
loop
dec
idivl
dec
dec
aad
call
sub
inc
add
sub
and
nop
mov
cld
mov
dec
dec
inc
add
sahf
cmp
mov
sub
mov
fstps
testb
add
roll
fs
or
adc
mov
in
loopne
push
mov
insb
mov
pop
out
push
add
pop
sub
movsl
fidivs
xchg
outsb
mov
shll
repz
adc
pop
repz
mov
push
nop
je
xor
hlt
movb
add
loopne
xchg
movb
sub
lds
bound
mov
add
movsl
pushf
sbb
les
cmp
push
movsl
xchg
sub
xchg
pop
pusha
add
lods
mov
stc
hlt
sub
mov
dec
and
popf
and
rcll
lock
aas
pop
cwtl
push
pop
add
lods
dec
movsb
jmp
fucomp
add
cmp
push
inc
mov
mov
mov
movsl
insl
aas
adc
jle
and
inc
add
lcall
dec
cld
test
fsubrs
loop
out
lock
push
outsl
xor
addb
movsl
inc
add
jnp
pop
rorl
or
jb
jbe
mov
repz
iret
cmp
sub
sub
add
push
sub
lcall
push
jbe
xchg
mov
lods
les
sbb
push
ror
sub
mov
je
push
out
xchg
gs
out
jo
negl
cmc
fisubl
add
jnp
add
mov
movsl
jo
dec
out
in
sub
mov
test
sbb
mov
sub
add
adc
jbe
dec
xor
sti
xlat
adc
jo
test
add
dec
push
lcall
add
and
adc
inc
add
icebp
fs
daa
pushf
or
nop
mov
jge
inc
add
inc
out
gs
stos
cmpsl
dec
leave
pop
test
repnz
pop
push
sub
push
mov
add
jns
enter
pop
xchg
add
cmc
and
cmp
add
and
std
xchg
sub
movsb
lcall
xchg
sbb
addb
cs
int
adc
es
mov
addr16
jbe
sbb
aam
stos
push
inc
jmp
cmp
mov
sub
dec
pop
aad
popa
inc
add
jns
enter
outsb
test
out
call
outsb
into
push
rolb
pop
fsubrs
add
add
movb
mov
add
dec
insl
ljmp
js
sbbl
lar
popf
ja
addr16
mov
xchg
test
dec
jp
jb
imul
xlat
fnstcw
ret
add
movsl
test
es
and
mov
cmp
add
js
out
adc
mov
add
add
enter
xchg
rorl
add
pop
ds
jbe
add
lcall
push
mov
sahf
push
rclb
dec
sbb
outsb
mov
leave
mov
xor
sub
loope
lods
lcall
fcompl
aaa
cs
sbb
pop
push
jnp
mov
insb
xchg
mov
and
rcr
or
daa
pop
cmpsl
aaa
mov
mov
mov
cmp
cmp
mov
push
into
xor
cmp
sahf
xchg
mov
lea
hlt
jne
and
mov
mov
mov
fcomps
add
aad
cmpsl
loop
jge
mov
je
add
dec
xchg
inc
or
insb
frstpm(287
outsb
mov
in
decl
xchg
jnp
js
mov
popw
adc
sub
mov
or
popa
stos
xor
add
dec
sti
xchg
pushf
xlat
cmpl
loopne
xchg
xchg
fs
adc
mov
add
xchg
jle
push
adc
ret
outsb
imul
sub
push
mov
call
xchg
cmp
imul
sti
fdivrs
loope
add
icebp
repz
push
mov
add
addr16
mov
addb
sub
xlat
xor
insl
mov
lods
dec
ss
fsubl
lcall
int
call
movsb
inc
and
aaa
pop
pop
movsl
push
add
push
add
enter
orl
lret
cmp
frstor
mov
jns
push
dec
test
rorl
add
rcl
pop
cld
cmp
leave
fildl
sub
mov
mov
add
ds
mov
std
jge
pop
cli
call
xchg
addb
iret
push
loopne
jb
stc
loope
push
test
vpshufd
fimull
pop
sub
sub
pop
adc
leave
scas
je
add
push
iret
aad
movb
addr16
push
mov
xor
cmp
xchg
adc
adcl
add
movsb
xor
jne
jl
sub
imul
shll
inc
lret
aaa
mov
pop
pop
add
int
out
arpl
les
push
xlat
and
mov
xchg
mov
gs
cmp
lahf
cli
cmc
scas
daa
iret
cltd
mov
sbb
adc
cmpsb
movsb
in
pop
popf
dec
dec
outsb
xor
dec
pop
inc
inc
add
adc
ret
add
cld
xchg
push
test
cmp
bound
insl
add
daa
pusha
add
test
fcmovnb
add
scas
inc
mov
sbb
das
inc
into
mov
repnz
add
cli
mov
jbe
movd
stos
ja
add
push
shl
lret
data16
shrb
mov
insl
movsb
mov
add
ljmp
out
pop
rcll
mov
jb
push
push
cwtl
test
sarb
lcall
gs
pop
add
add
imull
dec
les
xchg
cmp
cmp
xchg
inc
add
int
imul
add
or
movsb
jmp
data16
pop
movsb
pop
lock
add
std
outsl
or
pop
sbb
and
inc
push
sti
sub
imul
xchg
add
mov
cs
es
fadds
add
ficompl
insl
std
pop
iret
adc
add
out
jecxz
mov
stos
xor
mov
rclb
aaa
test
cmp
push
add
sbb
adc
dec
repz
faddl
adc
sub
fstl
xchg
cli
mov
push
add
mov
dec
scas
xor
cmp
lret
and
es
shl
add
pop
test
movsb
js
insl
sub
jae
adc
popf
cmp
pop
rol
add
push
add
cld
mov
movsb
mov
outsb
in
dec
addb
ret
or
movl
shl
pop
shrl
jbe
bound
outsb
xlat
scas
js
out
sahf
movb
xor
mov
add
pop
int
test
or
jno
add
lods
mov
jecxz
cmp
xor
push
sbb
mov
push
inc
test
or
rol
sahf
rolb
mov
add
sub
push
cmp
or
jno
movsl
out
adc
ss
es
jno
xchg
int
repz
stos
in
jge
xchg
loope
decl
mov
add
clc
test
pop
dec
push
mov
rolb
ja
pop
push
add
push
add
out
mov
adcl
es
jbe
andl
pop
sbb
negb
std
mov
cmp
mov
shl
fcmove
lea
mov
loopne
jns
mov
jbe
add
xchg
cmpsl
push
and
testl
and
mov
ds
test
pusha
add
adc
fcompl
pop
jae
mov
cmpsb
ljmp
add
add
sub
stos
aad
mov
mov
jge
addb
pop
mov
or
int
mov
adc
es
lcall
movsb
hlt
jp
rolb
in
dec
mov
and
jne
push
add
xor
out
push
push
mov
les
xor
repz
fcmove
mov
jne
add
pusha
add
and
mov
add
std
xchg
jl
sub
sub
and
jnp
and
mov
cmpsb
or
push
mov
add
pop
sub
and
add
std
cltd
add
inc
and
or
inc
addb
inc
jb
adc
stos
std
insl
jecxz
cmp
push
imul
mov
stos
pop
cmp
sbb
lods
movsl
and
sub
add
or
sub
add
dec
pop
icebp
push
sbb
ljmp
test
xchg
dec
dec
add
xchg
jb
movsb
pushf
les
and
add
mov
sbb
fistps
or
inc
add
mov
xlat
lea
dec
push
adc
dec
popa
mov
shlb
sti
ficoms
inc
js
jge
jp
out
loopne
cmpsb
inc
add
add
movsl
in
in
pop
shll
inc
lds
add
mov
dec
stos
mov
jp
repz
aas
and
inc
add
clc
stos
enter
lahf
roll
fsubs
iret
jmp
sbb
and
cmc
out
lds
pusha
add
or
mov
lds
add
out
push
add
inc
add
and
ret
sub
mov
add
iret
lret
stc
adc
int
mov
cwtl
repz
xchg
push
jo
cmp
push
cs
in
mov
icebp
jae
and
add
inc
add
cmp
add
in
inc
add
iret
xchg
mov
mov
or
rcrl
fs
call
fisttps
xor
lret
push
lahf
and
add
sbb
cmc
adc
aam
and
cmc
mov
fadds
mov
add
mov
mov
and
mov
test
sub
adc
into
mov
xor
lcall
dec
loopne
add
sub
imul
mov
loope
repz
ficoml
mov
add
les
fwait
jns
sub
pop
jmp
xchg
js
xlat
dec
push
test
int
fnstenv
inc
add
hlt
mov
push
popa
outsb
and
aam
dec
ret
clc
pop
cmp
push
xchg
sbb
add
lock
test
in
cld
or
push
add
in
lods
pop
xor
out
mov
pop
inc
mov
sub
sbb
outsl
scas
ffreep
add
addb
cmp
aas
aaa
and
sbb
addb
sbb
imul
jle
sbb
xchg
pop
push
cmp
subl
fcmovne
iret
dec
aad
outsl
mov
shrl
mov
pop
sbb
mov
or
push
jo
sbb
stos
movsl
cs
push
int3
leave
jge
push
adc
mov
cmp
or
xlat
cmpsl
rcll
cld
cwtl
lods
sub
stos
lock
movsb
data16
addb
push
and
stc
dec
cmp
icebp
and
fwait
xor
lods
stc
mov
test
pushf
sub
sub
mov
pushf
jbe
cwtl
out
cmpsb
adc
sub
dec
loope
repz
mov
psubq
fiaddl
aas
dec
js
add
in
ror
xor
sbb
xor
push
out
cld
jbe
dec
out
loopne
sbb
add
pop
insl
test
loop
das
aad
cmp
dec
jle
roll
fldl
add
lcall
rolb
mov
ljmp
pop
repz
push
lret
repz
popa
jl
adc
fdivr
pop
movsl
mov
add
mov
and
mov
jae
xchg
mov
mov
pop
mov
add
dec
sbb
dec
mov
jmp
mov
add
bound
roll
mov
jle
add
mov
rclb
xor
xchg
jl
fdivrl
adc
cld
mov
lea
add
add
add
pop
lgs
lods
icebp
insb
scas
scas
and
in
lret
push
sub
and
inc
or
nop
rolb
add
or
jbe
clc
test
psrlw
or
mov
cmpsb
cs
cmc
mov
push
xchg
fld1
aam
jne
cmp
mov
xor
jl
movsb
out
aam
pop
xchg
data16
or
aam
xchg
sub
xor
int3
mov
adc
mov
adc
pop
jge
stos
and
push
sub
cli
scas
xchg
and
movsl
popa
xchg
rorl
lds
fdivrs
inc
add
cld
int
dec
sbb
in
xor
addb
mov
xchg
push
add
or
call
push
stos
xor
and
push
xchg
inc
cmp
mov
xorl
in
fs
and
inc
xor
jo
hlt
jmp
jmp
std
cmp
jns
mov
mov
jg
or
pop
popa
and
sbb
sbb
add
xchg
xchg
xchg
mov
inc
add
je
sarl
cs
adc
lods
xor
push
cmpsl
ja
and
out
adc
sbb
jecxz
xchg
push
fidivrl
xchg
pop
add
test
sbb
pop
push
xchg
and
loopne
les
mov
and
aas
out
popa
inc
add
dec
and
ret
cmp
popa
lahf
push
add
add
mov
inc
add
movhps
inc
add
ja
lock
test
sbb
std
addb
add
mov
mov
lret
jle
or
cmp
das
call
jmp
dec
adc
sbb
dec
dec
sti
repnz
outsb
ja
adc
fisubrl
pop
loop
mov
idiv
movsl
aas
xor
xor
mov
lahf
aad
mov
into
loopne
mov
lods
sub
movsl
gs
test
mov
mov
jae
mov
mov
rcrl
pop
test
sbb
push
or
fimull
add
and
xor
jge
xchg
out
sub
xlat
mov
ss
loope
add
fwait
jmp
scas
icebp
xor
adc
mov
mov
lcall
or
inc
add
and
push
add
ret
loopne
add
loopne
pop
call
in
add
adc
pop
sub
mov
lods
dec
enter
add
dec
ljmp
cmp
icebp
xchg
roll
add
add
sti
cwtl
adc
adc
mov
pusha
add
lret
sbb
lcall
cmp
sahf
out
push
push
arpl
adc
mov
shll
rolb
jle
cli
cs
and
arpl
pop
aas
outsb
sbb
hlt
sub
fldl
cs
lds
loopne
test
je
add
fidivrs
stos
pop
xlat
les
sbb
int3
jmp
mov
cs
cmp
hlt
adc
lcall
loop
das
add
jo
pop
and
adc
cmp
fbstp
mov
or
add
test
pop
mov
cmp
das
out
ja
jg
jmp
adc
les
sbb
fs
imul
or
stos
rcrb
xorl
pop
jge
test
jb
sbb
mov
fdiv
xchg
stos
daa
aaa
add
icebp
ljmp
sbb
dec
or
rcl
xor
add
pop
xchg
dec
addr16
xor
clc
ret
in
mov
push
sub
add
cmpsb
les
mov
xchg
insb
pop
pop
dec
dec
iret
cltd
or
and
out
or
mov
fldl
aam
in
out
cmp
adc
lods
or
adc
pop
mov
cwtl
xchg
sub
dec
xor
sahf
movsb
ss
cmp
and
add
pop
and
xor
fidivs
inc
mov
sub
inc
mov
into
pop
sub
leave
xchg
les
mov
xlat
ret
scas
sbb
sbb
cmp
fcmovne
hlt
je
cld
add
pushf
cmp
dec
xor
mov
add
inc
add
mov
mov
fists
add
xor
adc
outsl
mov
sbb
and
mov
sbb
sbb
and
testb
add
or
and
out
xor
dec
movsl
lods
jo
push
outsl
mov
dec
inc
add
dec
xlat
daa
out
xor
xor
enter
push
jl
push
pop
jns
and
fstl
rcl
xlat
xor
fldz
nop
scas
adc
mov
lock
dec
jns
inc
mov
jmp
ficomps
cmp
aam
pop
insl
or
add
das
in
jae
pop
sahf
psubb
xchg
cmp
test
jmp
xor
xchg
jbe
sub
dec
stc
and
out
adc
scas
fimuls
jg
push
fidivl
lret
aam
dec
addb
imul
or
push
sbb
mov
sub
push
mov
movsl
lret
sahf
mov
mov
test
inc
pop
dec
adc
adc
iret
rorb
xchg
les
ljmp
in
jle
xchg
daa
add
cmpsl
cwtl
mov
cmpsb
iret
enter
xor
cld
sbb
add
add
sbb
xor
cmp
pop
test
jle
mov
scas
iret
and
stos
mov
pop
add
rol
add
inc
add
cmpsl
mov
stos
clc
popa
xor
daa
pop
ja
xor
inc
add
mov
add
adc
in
ljmp
jne
lcall
mov
adc
sub
cmp
icebp
in
mov
fdivr
sbb
mov
add
xchg
int3
das
aad
adc
imul
lret
dec
inc
add
push
add
outsb
stc
mov
rcrb
daa
flds
or
add
ror
in
xor
popa
ss
out
mov
in
popf
mov
call
je
dec
movb
in
add
test
xor
mov
cmp
inc
mov
push
add
in
or
fdivrs
adc
sbb
add
popf
jo
sbb
stos
xor
repnz
js
and
andl
aaa
add
mov
rolb
test
jge
pusha
add
xor
ja
fists
inc
pop
mov
pop
pop
insl
sti
ja
repnz
sub
sbb
sbb
test
inc
repnz
push
je
jno
imul
add
push
sub
add
in
jge
loope
shll
add
mov
in
add
add
movb
pop
push
out
mov
lcall
imul
adc
pop
push
or
addb
stos
rcr
xor
push
and
out
cltd
adc
sbb
rolb
testl
pusha
add
add
dec
mov
sti
mov
add
cltd
adc
repnz
dec
mov
adc
in
mov
sahf
xor
lods
jnp
lret
cwtl
fimull
add
ljmp
add
push
inc
add
repnz
lock
hlt
pop
lds
rcll
dec
shlb
sub
shl
push
loop
jne
add
inc
add
rcrl
insb
fidivl
add
and
loope
mov
jle
xchg
in
pop
cwtl
and
ljmp
mov
lods
mov
in
jno
mov
jno
cmp
inc
add
cmc
cmp
mov
jo
adc
xchg
adc
dec
jbe
mov
ret
mov
and
inc
xor
jae
int
movb
lahf
mov
xchg
stos
inc
add
insb
mov
bound
push
aas
sbb
add
scas
sub
lcall
xchg
aad
adc
out
mov
mov
sar
mov
mov
sbb
fdivp
cmp
add
and
add
inc
pop
dec
mov
or
repz
xchg
or
jge
add
lcall
sub
xor
mov
push
pop
ret
jbe
lock
xchg
cwtl
pop
nop
or
push
lahf
mov
add
inc
add
lea
mov
jno
xlat
sub
repz
push
ja
add
les
jae
imul
add
es
push
add
mov
lret
loop
dec
or
add
sbb
or
push
jne
add
adc
and
subl
xor
imul
cld
pop
xor
add
fbstp
cmp
mov
add
loopne
xchg
lods
addb
mov
inc
cltd
mov
or
and
je
test
lea
jno
stos
push
add
push
movb
push
xchg
decl
or
jo
add
inc
add
sbb
ljmp
mul
sahf
and
dec
out
mov
sub
mov
push
add
loop
jg
aaa
aad
adc
out
jb
xor
movb
jmp
sbb
rclb
pusha
add
add
add
dec
lock
shr
push
in
mov
pop
jle
dec
lcall
scas
scas
mov
stos
dec
mov
and
mov
add
out
cmp
or
pop
push
add
stos
mov
push
jg
fwait
enter
jecxz
cmovge
mov
xchg
xor
jae
movsl
pop
inc
xor
xchg
inc
add
mov
pop
ret
out
and
adc
mov
push
sub
add
pop
outsl
fcmovb
sub
jbe
lods
clc
or
add
pop
lcall
jo
push
mov
leave
mov
add
lods
test
jp
movb
hlt
inc
fisttps
inc
push
ljmp
or
out
mov
sti
mov
pop
sub
dec
add
or
xor
xor
fidivrl
inc
pop
fldl
xchg
movsl
cmp
sbb
add
into
add
jecxz
iret
jne
add
inc
lcall
addr16
dec
jle
popf
xor
jg
adc
push
and
test
push
mov
fisttpll
adc
lea
add
sub
mov
stos
in
dec
je
mov
cld
int
aas
sti
leave
mov
aaa
cwtl
jp
add
sub
mov
lcall
xlat
xchg
and
aad
lcall
outsl
cmp
negb
sbb
pop
movsl
ds
push
mov
dec
pop
lret
add
lods
data16
mov
push
add
adc
sbbl
push
cmp
ss
push
add
popa
sub
xchg
es
ljmp
gs
sarl
cmp
xorl
cmp
ficoml
mov
and
sbb
insl
jae
push
add
jns
dec
into
inc
add
jo
pop
sbb
out
jecxz
sbb
dec
icebp
fadd
add
inc
loop
adc
jbe
add
sub
movsb
dec
imul
add
or
add
movsl
dec
dec
push
aas
ja
jmp
pop
movb
outsl
mov
mov
jnp
out
daa
addb
scas
movsb
mov
mov
push
and
bound
pop
fimull
sbb
xor
and
cmp
add
xor
iret
mov
idivb
inc
add
xor
pop
adc
scas
in
movsl
shrl
cmp
adc
movsl
mov
jb
xchg
mov
out
sub
lods
dec
imul
lods
cli
sub
mov
push
in
mov
lds
xchg
xchg
mov
lock
mov
and
cwtl
in
jnp
mov
cmp
push
test
cltd
mov
xor
jne
dec
jmp
les
inc
add
jp
dec
aam
pop
ret
add
fs
fisubl
inc
add
inc
test
pusha
add
shll
out
fcomip
ljmp
ja
rorl
jmp
inc
xor
movb
mov
add
inc
mov
add
inc
add
and
scas
arpl
ja
rcrl
cltd
cmpsl
mov
inc
add
mov
add
inc
add
push
dec
rolb
inc
add
movsl
adc
movb
and
imul
fcmovne
cmp
ret
aam
outsb
rcll
insb
cmp
add
xchg
cmpsl
fildll
inc
add
pop
arpl
or
sub
xor
jo
inc
add
push
xchg
in
sbb
push
adc
bound
in
add
push
movsl
pusha
add
jg
add
xchg
in
mov
ds
and
xor
lahf
mov
rorb
mov
sbb
xor
aaa
cmp
xor
pop
test
int3
inc
add
add
add
inc
add
repnz
gs
inc
add
stc
stos
mov
xchg
cmc
jo
inc
pop
xchg
dec
and
lcall
insb
cmp
fidivrs
pop
aaa
cmp
add
cld
pushf
call
gs
les
test
rolb
mov
scas
imul
mov
outsb
inc
add
and
add
insl
in
outsl
fisubrl
xor
stc
adc
and
arpl
fstl
cmp
dec
lea
dec
push
mulb
leave
jge
sti
jo
mov
jnp
and
push
add
popa
call
xor
dec
cmp
lds
inc
jb
cmp
aaa
aas
pop
sub
add
mov
or
ret
lea
add
dec
or
push
and
shrb
ljmp
idivb
dec
push
and
test
push
add
add
xchg
aaa
rclb
jnp
test
popa
scas
orl
xlat
cltd
mov
xchg
shrl
and
pop
sub
cmp
loope
mov
cli
pusha
add
out
xor
ret
outsb
mov
test
scas
pop
dec
xchg
loop
leave
sbb
std
dec
inc
add
jb
add
dec
lret
push
dec
insb
sbb
inc
shlb
fs
cmp
pop
xor
fists
outsl
push
scas
adc
bound
out
mov
imul
shr
jge
rolb
push
fbstp
push
mov
lret
in
add
add
mov
mov
mov
mov
subl
pop
int3
out
mov
mov
add
daa
fimuls
jg
xchg
dec
mov
call
mull
out
or
inc
cmp
inc
add
add
pop
addr16
dec
int
das
nop
sub
sbb
xchg
push
mov
add
aaa
aam
mov
iret
adc
es
mov
nop
sahf
add
jg
jno
push
ret
xor
sbb
outsb
sub
inc
add
jnp
lds
popf
mov
add
add
add
adc
into
pop
orl
ficoms
mov
jmp
cmpsl
sbb
jg
or
mov
jle
sbb
mov
mov
lcall
popf
lods
mov
adc
stos
leave
in
pop
insl
xor
push
pop
mov
mov
cmp
jecxz
jns
jno
lea
sub
or
nop
lret
rolb
jns
dec
enter
dec
dec
push
std
cmp
mov
inc
push
enter
add
enter
jb
mov
in
daa
mov
cli
inc
adc
fs
sbb
or
repz
add
lret
vunpckhps
sbb
mov
sbb
imul
mov
sub
test
add
xchg
jae
xchg
negb
das
addb
mov
xchg
pop
mov
test
in
jnp
fisubrs
add
addb
xchg
dec
xchg
xlat
sub
cmpsl
aaa
ret
or
pop
mov
or
mov
push
xchg
cmp
cmp
shrl
ljmp
sbb
add
xchg
adc
sub
lods
dec
cwtl
fs
mov
ds
sti
add
add
add
mov
addb
and
testb
xchg
gs
repnz
scas
xor
jp
and
lock
adc
scas
in
inc
add
jecxz
add
xchg
jmp
or
pop
adc
popf
pushf
dec
shl
stos
popf
inc
add
in
clc
insb
in
xchg
jne
pop
aas
jbe
out
jg
sub
mov
pusha
add
outsl
cmc
jmp
leave
pop
add
cmp
jle
lret
jg
add
push
cmp
lcall
test
test
push
add
or
jmp
cmc
outsl
add
pop
cmp
mov
or
cmp
xchg
jl
icebp
xchg
jnp
xor
add
and
add
cmp
pop
sbb
adc
sbb
pop
cmc
ds
rorl
stos
and
xchg
pusha
add
pop
mov
add
mov
xchg
pop
in
rcll
out
mov
sbbl
data16
push
js
sbb
cli
test
push
stos
pop
imul
push
sti
mov
repz
push
insb
adc
loop
mov
je
mov
scas
lock
adc
cmp
and
xor
out
or
jne
rolb
add
sbb
add
mov
pushf
test
test
add
xor
pop
flds
pop
or
movb
mov
test
add
jb
cwtl
imul
les
mov
lret
es
mull
jle
loopne
sbb
add
ficompl
mov
add
mov
add
nop
mov
and
jns
pop
sahf
jb
xchg
cmp
sub
jmp
arpl
lcall
cmp
sbbl
lock
cmpsb
sub
mov
mov
dec
mov
cmpsl
gs
push
cmpsl
pop
inc
add
repnz
je
pop
inc
add
mov
sub
push
sub
inc
add
sbb
mov
mov
push
adc
xchg
in
and
push
sub
inc
add
xor
orl
add
jl
xor
or
add
mov
sti
cmp
xchg
push
ljmp
or
dec
push
sbb
in
cmp
and
test
or
mov
insb
xchg
sub
scas
idivl
inc
adc
rol
add
mov
fsub
adc
add
push
enter
sub
xchg
enter
shll
mov
test
ret
aad
test
enter
test
add
dec
or
add
cltd
pop
cmp
xchg
xor
add
add
aas
lea
test
mov
lcall
jl
add
inc
add
repz
pop
mov
imul
loop
push
lds
jne
repnz
notb
or
cmp
sbb
nop
mov
cmp
imul
call
lcall
and
roll
jb
inc
or
test
adc
add
sbb
add
and
je
in
sbb
mov
pusha
add
stos
jnp
mov
bound
scas
out
mov
add
mov
emms
inc
add
lds
lods
int
mov
or
add
cmp
repnz
aas
mov
mov
xchg
insl
addr16
mov
add
stc
outsl
dec
int3
dec
push
outsl
or
add
add
bound
ljmp
mov
xchg
dec
imul
push
pop
pop
lods
hlt
ljmp
add
int3
cs
ljmp
jmp
nop
lock
add
push
stc
repnz
cli
insb
adc
sub
andl
in
cmp
outsb
mov
fstpt
clc
xchg
mov
rcrl
or
fbstp
xor
add
sbb
cld
addb
arpl
xor
aam
sbb
cmpsb
push
pop
xchg
dec
inc
add
imul
orl
in
cmpsb
mov
pop
lods
and
repnz
rorl
xor
insl
dec
adc
leave
ficomps
mov
cmp
add
dec
pop
test
adc
xchg
cmp
xchg
fistpl
xchg
jae
subl
and
sub
insb
sahf
mov
add
gs
adc
movsb
mov
js
arpl
pop
call
arpl
push
pop
mov
mov
push
incl
xchg
test
add
dec
pushf
movsb
mov
test
lock
aas
or
jge
mov
mull
jbe
jo
mov
lcall
ljmp
shlb
add
push
add
inc
pop
mov
add
mov
cs
dec
int3
iret
or
dec
movb
mov
add
mov
and
add
pop
in
iret
rcrb
pop
sub
mov
das
rolb
add
or
mov
cmp
mov
rolb
xchg
adc
jp
sbb
out
addb
insl
pusha
add
inc
add
mov
xchg
dec
mov
mov
xor
movsb
outsl
adc
loopne
int3
mov
mov
aam
mov
clc
in
repz
ret
ja
push
add
pop
les
clc
ficomps
mov
lret
add
insl
lea
add
lret
cmp
shlb
add
stos
sub
pusha
add
sub
jo
ljmp
inc
add
xlat
and
insb
int
fwait
sbb
pop
mov
xor
mov
daa
xchg
mov
std
mov
xlat
imull
mov
aad
sbb
decl
add
mov
call
je
fcmovne
and
pop
cmp
cmpsl
fbstp
push
add
push
pop
cmc
or
lcall
ret
repnz
xor
movsl
cmpsl
loopne
mov
xchg
adc
jg
cmp
add
add
sti
mov
test
and
sub
dec
test
adc
add
jne
cmp
add
loop
xchg
jb
xor
push
hlt
jno
in
sub
je
mov
cmp
pop
lahf
sti
or
enter
push
dec
pop
mov
xchg
jno
and
mov
outsb
lods
in
mov
out
jg
push
xchg
jne
dec
in
push
and
loope
ljmp
push
gs
outsb
jne
push
ret
add
mov
add
rcl
xchg
loopne
fnstsw
cmpsb
cmp
add
les
sbb
fistpll
cmp
or
fstpl
sbb
add
pop
cld
out
dec
push
popf
pop
imul
and
cli
xchg
scas
push
add
xchg
pop
inc
add
cltd
mov
stos
addr16
roll
push
ljmp
xchg
sbb
test
add
repz
icebp
jp
out
stos
cmp
xchg
ss
mov
mov
insb
ret
hlt
aad
add
jp
stc
stc
xchg
movsb
jg
into
in
mov
movsb
mov
and
inc
add
xor
jp
and
ljmp
stos
and
rolb
cltd
sub
pop
add
dec
dec
and
sub
pop
inc
fs
shrl
lcall
add
add
icebp
daa
fs
imul
inc
add
lret
pop
sbb
imul
insb
cmp
dec
popf
gs
inc
cmp
addb
add
add
leave
cmp
and
jne
inc
push
xchg
jo
xor
fisttpl
pop
mov
inc
add
mov
add
push
add
cmp
gs
pop
inc
add
cmp
mov
stc
pop
and
mov
leave
out
lds
mov
ds
das
adc
repz
cmp
jge
ds
xchg
or
xor
stos
dec
pop
test
mov
inc
aam
das
popa
push
loopne
add
or
cmp
add
pushl
roll
add
loopne
pop
lds
add
add
adc
lret
lahf
mov
add
dec
push
imul
adc
mov
jge
jnp
aaa
ret
xor
out
sub
cmp
add
sbb
inc
clc
je
fcompl
add
aaa
pop
inc
jge
inc
outsb
mov
add
nop
cmp
call
sub
xlat
mov
jnp
loope
ret
mov
cwtl
mov
lret
or
pop
add
mov
mov
icebp
xchg
dec
es
and
xlat
bound
and
mov
lock
add
fnstsw
lock
push
inc
inc
and
hlt
mov
dec
cld
push
imul
xor
mov
cmp
sbb
mov
inc
ret
scas
imul
pop
imul
gs
fwait
pop
mov
and
push
add
sahf
jle
add
sbb
mov
inc
add
mov
jno
out
inc
add
addr16
dec
rolb
aaa
in
mov
stc
cmp
ror
fidivrs
cld
mov
xchg
lock
add
mov
sahf
dec
clc
cmpsb
out
push
push
mov
add
lea
add
fiaddl
icebp
incb
cmpsb
or
pop
leave
rclb
je
int3
leave
xor
cld
ds
mov
fadds
jl
inc
add
adc
or
aaa
pushf
pop
pop
xor
jb
add
cmpsl
xchg
and
sbb
jp
lret
push
scas
sub
push
push
lahf
xchg
mov
movsb
push
lods
xchg
mov
jmp
aad
cld
and
arpl
or
xor
daa
jge
and
pop
fldcw
les
and
mov
xor
fsubl
in
sbb
or
jge
sbb
sahf
mov
iret
sahf
xchg
stc
pop
jb
jmp
mov
fs
xchg
bt
add
push
add
ret
cmpsb
mov
add
mov
jge
dec
pop
pushf
pop
push
mov
lret
out
add
jnp
sbb
add
mov
lods
pop
jb
pop
inc
add
pop
inc
add
or
inc
add
enter
in
sbb
or
test
cmp
in
movsb
xchg
sub
dec
and
and
adc
and
ret
push
pop
js
push
add
addb
popa
xor
push
xor
pop
and
mov
or
inc
add
inc
add
inc
sub
repnz
jne
add
leave
into
dec
mov
fst
lcall
decb
mov
cmpsb
add
mov
sahf
jns
add
aam
mov
mov
scas
or
aad
js,pt
aam
cltd
movb
jp
pop
jmp
mov
add
xchg
out
popf
mov
mov
push
iret
test
insl
xadd
pop
or
push
mov
out
jae
dec
rolb
mov
add
stos
mov
int
jb
imul
out
pop
sti
sbb
mov
xor
in
jmp
aaa
pusha
add
loopne,pn
in
add
aad
push
loope
add
loope
jmp
insb
push
addr16
loop
jno
sub
ljmp
scas
mov
lret
bound
movsl
push
pop
in
push
add
push
dec
mov
aam
add
lock
xor
popf
cmpsl
aam
fs
in
fwait
mov
cmp
and
xor
repnz
in
xor
scas
shrb
jo
mov
pop
sub
add
insb
hlt
inc
arpl
jno
sub
add
in
or
or
mov
dec
hlt
push
bound
mov
push
add
jg
outsb
inc
add
add
mov
mov
xlat
and
jecxz
cmp
cwtl
lret
jecxz
sahf
dec
or
cmp
mov
push
push
sub
push
rcrb
mov
into
cmp
aaa
int3
pop
cmp
nop
ror
push
add
jmp
in
sbb
mov
test
mov
push
pusha
add
lret
pushf
and
add
pop
sub
je
outsb
rcrb
pop
mov
hlt
xchg
movb
test
sbb
push
xchg
pusha
add
jb
xor
push
add
add
adc
cltd
dec
ret
addb
mov
push
mov
inc
lret
add
arpl
mov
adc
sub
mov
add
sbb
aad
push
jle
sahf
aam
aaa
inc
aas
sub
data16
jecxz
push
scas
mov
leave
test
inc
add
aam
pop
arpl
mov
sub
add
add
sar
push
add
add
leave
dec
jge
fnstenv
inc
lods
fistl
sahf
cwtl
xchg
mov
adc
idivb
mov
icebp
inc
data16
ja
pushf
shll
or
test
std
lock
inc
repnz
out
jmp
push
lods
push
jmp
fcomps
add
lods
pop
mov
rolb
mov
push
mov
mov
notb
mov
push
jo
add
scas
in
hlt
inc
cmpsl
add
and
fwait
jns
test
push
ja
aas
jmp
pop
loop
xchg
jbe
and
adc
jae
and
jmp
ljmp
add
stos
xchg
std
or
mov
sub
movntps
les
pop
out
cmp
dec
aad
rolb
add
mov
and
inc
das
lret
xchg
movsl
jmp
mov
add
cwtl
insl
pop
movb
jne
xchg
push
mov
int
add
ret
sbb
icebp
mov
add
add
nop
rolb
xor
ds
addb
aas
push
mov
adc
mov
lds
jno
outsl
bound
gs
push
add
add
movntps
xchg
inc
add
scas
out
add
ret
in
add
push
push
add
add
cmpsb
xor
xor
jmp
add
loopne
jge
jecxz
pusha
add
add
cmovns
mov
add
fstpl
or
test
jae
gs
sarl
or
add
jmp
mov
shlb
add
test
or
enter
add
or
jp
les
and
test
in
mov
icebp
repnz
in
cmp
pop
out
mov
cwtl
test
mov
or
mov
add
repz
out
jle
push
jmp
in
inc
add
loop
add
aas
push
inc
add
arpl
jl
js
xor
add
and
cmp
add
loopne
pushf
hlt
xchg
lods
pop
rolb
add
xor
sbb
out
imul
addb
call
hlt
sub
adc
or
pop
or
jg
inc
add
jl
push
mov
ret
fcomps
push
mov
or
clc
inc
jno
dec
inc
add
pop
add
jmp
mov
mov
sub
sbb
sub
mov
lret
es
push
push
sti
lret
inc
inc
add
sbb
mov
xor
mov
mov
mov
xorl
popa
cmpsb
xor
inc
xchg
add
push
fs
mov
pop
xchg
outsb
pop
dec
lods
xor
sub
jbe
cld
pop
jbe
ljmp
inc
add
fisttpll
icebp
dec
sarl
sbb
leave
mov
jg
loopne
rclb
or
xchg
es
mov
dec
cs
add
das
or
int
push
xlat
push
pop
adc
in
inc
pop
cmpsb
and
adc
movsb
test
add
cmpsl
push
imulb
in
and
pop
ret
out
jbe
pop
lahf
ljmp
or
lret
call
add
adc
sbb
out
push
xor
lea
outsb
int3
shlb
and
xlat
add
sbb
jnp
xor
into
cmpsl
or
inc
sahf
cltd
fcoms
lret
xchg
rcr
pop
hlt
add
jae
and
shlb
stos
aaa
lods
fdivs
mov
insb
adc
imul
aas
stos
or
enter
sub
jg
shll
jp
inc
add
bound
adc
cld
jge
fcompl
mov
test
or
bound
cmpsl
in
dec
sub
and
mov
insb
sbbl
add
fs
in
bound
mov
xor
mov
mov
into
stos
aad
je
aas
pop
mov
xchg
addb
enter
sbb
in
mov
xchg
and
inc
add
mov
cmp
dec
aad
inc
xchg
inc
inc
add
outsl
and
in
cld
scas
xor
jmp
add
jg
test
xchg
mov
add
cmp
rcl
add
lahf
leave
xchg
mov
xor
mov
mov
test
and
adc
ja
loope
add
jno
xchg
inc
add
sub
and
mov
and
dec
inc
add
loop
pop
xlat
pop
int
shll
add
jae
lods
dec
repz
scas
ja
stos
ret
cli
sti
lods
add
mov
mov
sbb
pusha
add
mov
ret
inc
mov
add
mov
add
cmpl
sub
or
lahf
repnz
int3
lret
lods
insl
or
in
lahf
push
aam
mov
add
push
add
inc
add
xchg
cmc
stos
call
inc
add
ja
testb
lds
add
add
inc
ds
iret
lahf
push
jmp
cmpsb
call
outsl
into
lret
cmp
push
xlat
jg
cmp
sarb
dec
loope
stos
xchg
daa
add
into
pusha
add
pop
les
push
mov
dec
sbb
jmp
sub
and
mov
cmpsb
sub
mov
inc
add
or
imul
pop
shll
or
mov
loopne
leave
adc
jg
adc
jbe
sub
in
jmp
outsb
and
push
push
or
add
sub
cmp
fldt
push
jge
mov
xchg
mov
sbb
sbb
jo
or
xchg
cmpsb
mov
or
fld
adc
mov
sub
popf
mov
add
addr16
and
add
scas
push
mov
add
add
clc
test
xchg
mov
pop
xor
cmpps
cs
xchg
add
add
xor
push
addr16
add
push
out
mov
loope
dec
mov
add
je
rolb
pop
fisubl
cmp
xchg
lds
jecxz
fsubrl
mov
mov
sbb
jbe
add
add
dec
adc
ret
add
or
push
pop
mov
repnz
lods
mov
mov
xor
sub
xor
sub
mov
shll
xchg
cs
push
sbb
adc
add
push
inc
add
xchg
js
adc
das
xchg
sub
adc
sbbl
jmp
pusha
add
mov
push
push
call
add
das
xchg
cmp
popa
jo
push
push
mov
ret
or
mov
call
lods
icebp
pop
adc
pop
pop
inc
adc
add
add
ljmp
cmp
inc
add
push
push
int3
sarl
pop
ss
stos
adc
add
int
jecxz
insb
sarl
fidivs
add
push
mov
and
movb
jnp
cmp
rclb
ss
push
gs
sub
inc
add
je
in
stos
add
int
adc
sahf
ljmp
icebp
xor
push
pop
roll
dec
push
add
lock
in
cmp
add
call
inc
add
outsl
mov
add
inc
add
bound
cmp
mov
mov
and
jle
sub
addb
das
popa
push
add
add
or
add
scas
sub
sbb
in
in
mov
inc
add
jne
lahf
movsl
mov
fdiv
jne
push
add
adc
jecxz
enter
cmpsb
mov
mov
testb
dec
add
push
pushf
addl
out
jle
nop
cvtdq2ps
and
jl
add
push
lods
jae
icebp
hlt
inc
add
xchg
sahf
or
mov
mov
ret
inc
add
add
leave
in
xlat
push
xor
inc
add
ljmp
and
pop
das
inc
bound
popa
dec
addb
outsb
push
adc
mov
inc
popa
sub
add
jecxz
xchg
adc
push
sbb
dec
sbb
add
cmp
add
cmpsl
lret
enter
add
jmp
mov
adc
jbe
ja
mov
ret
push
jne
mov
lcall
jb
or
shlb
and
loop
jmp
adc
mov
inc
add
mov
in
and
rolb
test
ret
sahf
jmp
testl
in
push
scas
sahf
movb
std
and
xor
jae
or
mov
sub
jb
add
es
or
fsubr
paddq
mov
ljmp
add
pushf
jns
enter
xchg
movb
mov
cmp
jl
inc
cmpsb
icebp
fwait
xchg
pusha
add
addb
aas
xchg
pop
lods
jbe
dec
pusha
add
adc
push
adc
xchg
dec
js
jp
stc
inc
add
idivb
pop
or
js
xor
ss
dec
or
addb
in
mov
jo
cmpsb
xor
inc
add
push
add
pop
xor
ljmp
push
add
movsl
js
addb
add
addb
add
add
les
pushf
pop
push
add
xchg
dec
inc
movsl
cmpsl
int
movsb
pop
sub
pop
fsubp
pushf
fldcw
mov
and
into
cmpsl
mov
fsts
pop
arpl
leave
mov
pop
jnp
sbb
push
bound
test
lea
sub
add
fdiv
out
add
leave
mov
add
jl
add
inc
add
xlat
and
insb
sbb
xchg
cwtl
and
in
in
or
xor
inc
int
repz
in
cmpsl
cmpsb
push
xchg
add
xlat
cs
mov
jl
push
dec
in
sar
and
aam
cld
lcall
xlat
mov
sub
push
push
mov
adc
lahf
or
pop
pop
std
sub
mov
ja
icebp
ret
sub
and
jb
leave
jbe
sub
jns
pop
add
es
cmp
xchg
mov
clc
mov
sub
addb
or
repnz
jo
shrl
les
add
jp
xor
push
mov
jne
cltd
jp
xchg
xchg
cmp
incl
loop
and
add
pop
fcmovne
pop
cs
add
inc
push
loop
fnsave
imul
or
lret
push
cmpsl
inc
add
adc
shll
cmp
pop
sub
mov
mov
test
cmpsb
sub
dec
pop
loop
loopne
xchg
mov
pop
push
cmp
mov
jle
movsl
jp
add
add
es
xchg
fs
movsl
dec
cmp
jne
jp
jno
add
mov
mov
dec
ss
cmp
repnz
or
cmpsl
test
push
add
fcomip
pop
jg
sbb
lret
jp
xchg
out
pop
mov
cmc
pop
imul
je
mov
sbb
stc
lods
lcall
fildl
les
sub
dec
jae
xchg
jbe
inc
add
push
xor
jae
cmp
dec
mov
and
movsl
int
cmc
dec
scas
push
mov
dec
clc
and
rolb
pop
test
jp
xor
add
fwait
mov
add
loop
scas
sub
pmaddwd
lods
cltd
movsl
jl
add
clc
push
push
js
popa
mov
cmc
cmp
int
sub
hlt
sti
fwait
lahf
fdiv
popa
cmp
cmp
push
repz
pop
sub
adc
adc
fmuls
push
aas
inc
cs
stc
jecxz
test
push
inc
inc
enter
dec
lret
mov
popf
movb
bound
loope
adc
inc
add
cs
mov
jmp
imul
add
rorl
ror
jg
add
add
push
imul
cmp
add
pop
mov
xor
hlt
fs
daa
ja
movb
sti
mov
mov
lock
adc
cmp
mov
outsl
add
js
jecxz
add
mov
ss
pop
add
inc
add
ja
out
es
mov
test
add
adc
mov
add
outsb
jne
repnz
push
add
or
add
dec
mov
outsb
mov
adc
xor
int
into
ljmp
movsb
pop
iret
inc
add
pop
sahf
adc
jo
aam
mov
imul
in
or
addb
daa
xor
adc
or
or
add
data16
fstps
cwtl
mov
fwait
cmp
sub
or
or
or
xor
ss
lcall
sub
lret
loopne
add
mov
adc
mov
jmp
jecxz
scas
in
jmp
mov
push
insl
int
add
into
enter
jns
lock
jae
cwtl
fidivrl
and
imul
cld
dec
in
jl
and
adc
add
out
or
or
leave
sti
push
mov
mov
add
icebp
sbb
mov
sbb
xchg
bound
jmp
mov
mov
addb
sbb
jge
or
leave
scas
xchg
movb
mov
call
movb
and
shll
mov
sbb
insl
and
add
push
or
stc
dec
xchg
mov
pop
lock
sti
insl
add
mov
add
pop
and
movsb
adc
mov
xlat
sbb
mov
add
pop
aas
stc
dec
int3
inc
add
mov
jle
or
sbb
gs
imul
jo
mov
pop
jge
add
cmp
je
jne
adc
push
dec
adc
inc
add
mov
sub
scas
inc
add
dec
pop
xor
jle
outsb
cmc
xor
rol
add
mov
xchg
sub
push
add
arpl
fwait
negl
jnp
ret
cmc
leave
sub
inc
lods
fildll
stc
add
xchg
jbe
stc
xchg
push
push
xor
xchg
sbb
pop
dec
stc
into
xchg
pop
into
xchg
push
xor
pop
jnp
test
sbb
cmc
cmp
out
sahf
jae
pop
cmp
push
or
push
test
and
jo
sub
outsb
popa
ret
and
divl
adc
xchg
fadds
jne
add
nop
xor
sbb
dec
mov
xchg
or
aas
pop
daa
pusha
add
inc
in
add
lret
sub
or
pop
cmp
jmp
push
enter
mov
jae
xchg
and
add
and
push
xor
pop
jl
dec
hlt
dec
or
adc
out
inc
hlt
sbb
add
push
stos
jmp
lds
sbb
aam
add
add
inc
add
cmp
jns
loope
jns
lods
je
lret
mov
add
add
push
add
popa
xor
cld
add
out
cltd
sbb
adc
movsl
test
dec
cli
sub
mulb
mov
lret
adc
xchg
add
iret
imul
clc
pop
je
andl
push
or
ds
jbe
xor
pop
lret
jp
js
jo
loopew
ss
outsl
inc
add
add
mov
or
sahf
fwait
mov
std
nop
mov
sub
add
cwtl
ud2
lods
jge
js
icebp
rolb
dec
hlt
addb
cli
cmpsl
cmpsb
clc
les
cmpsb
fs
bnd
add
ficoms
and
sbb
jmp
data16
div
stos
mov
xor
fwait
or
add
xchg
mov
clc
stos
movb
mov
add
ficompl
push
test
js
jg
mov
cmp
inc
lods
fcomps
nop
js
jae
cmp
js
jmp
jle
add
pop
xor
cmpsl
cmp
fidivrs
aaa
rorb
mov
addb
sahf
or
int
mov
or
xor
add
add
or
xor
stos
mov
xchg
pop
scas
cmp
xchg
cld
jo
idivl
adc
aaa
frstor
cld
call
xor
cmp
add
rcrb
repnz
jecxz
arpl
out
add
xlat
cmp
xchg
mov
movsb
or
notl
xchg
pop
sbb
fmul
dec
das
movsb
call
call
jp
sbb
mov
pop
or
popf
push
sbb
movsl
jne
push
dec
cmp
pop
inc
add
setne
add
and
outsl
out
inc
add
add
adc
mov
out
pop
fisubrs
bound
xor
cmp
pop
insl
les
fsubrl
xchg
pushf
negl
test
xchg
mov
and
bnd
add
or
fwait
mov
inc
add
add
outsb
push
pop
iret
fists
or
lea
cmpsb
push
cwtl
sbb
mov
jb
add
mov
adc
add
push
movb
add
mov
bound
push
test
cmp
insb
jo
repz
ljmp
or
add
add
inc
xchg
stc
hlt
dec
or
clc
and
push
stc
call
xor
add
push
lret
cs
add
pop
aaa
ret
adc
jmp
test
or
jnp
insl
fsubrl
mov
add
arpl
in
rorb
xchg
cmpl
imul
add
cmc
cmp
xchg
add
push
lds
add
bound
sbb
ret
inc
shll
addb
jle
sbb
inc
sbb
call
test
jne
addb
jae
popf
ret
lcall
daa
shlb
clc
mov
and
push
jbe
add
xchg
loope
loopne
mov
sbb
and
ret
adc
sbb
lods
xor
push
adc
cli
je
insl
iret
movsl
mov
adc
pushf
scas
mov
mov
push
xchg
pop
imul
inc
icebp
mov
mov
pop
outsb
or
pop
dec
push
inc
rolb
movl
mov
aad
xchg
addb
pop
or
je
aam
ror
rorl
lret
in
inc
ret
and
jne
aad
mov
add
xchg
mov
push
pusha
add
push
push
xchg
mov
pop
add
mov
mov
es
cwtl
xchg
das
adc
sub
xor
jg
imul
pusha
add
pop
cmp
cmpsb
in
ljmp
mov
hlt
add
es
mov
xorl
and
jno
push
ss
lret
adc
mov
femms
test
popa
and
add
add
cmp
loope
cmp
adc
ficompl
pusha
add
je
pop
or
pop
fcmove
ljmp
cltd
mov
insb
iret
jmp
pop
add
and
mov
jns
data16
addb
mov
or
rcrb
sbb
add
fnstsw
jl
ror
mulb
and
pop
sub
fstpt
push
mov
mov
sbb
in
lods
xor
or
shl
inc
adc
xchg
and
fcmovnb
daa
pop
adc
cmp
ljmp
inc
sbb
sar
insb
fcmovb
add
add
mov
push
in
push
stc
pop
addl
pop
xadd
rolb
push
xor
pop
mov
enter
and
lcall
cmp
mov
xchg
movaps
out
int3
lods
inc
push
jmp
add
mov
cmp
testb
cmpsb
cmp
sbb
stos
mov
push
dec
icebp
push
push
fstpt
and
repnz
push
add
cmp
inc
add
adc
or
cli
nop
add
xchg
fdivr
fistpll
pusha
add
out
push
or
add
xlat
adc
loope
sub
imul
add
outsl
inc
add
cld
lcall
push
pop
mov
adc
add
sbb
push
addr16
insb
stos
cs
cmp
mov
int
imul
outsl
aam
nop
imul
test
mov
adc
push
cmpsb
mov
xor
hlt
jne
aam
stos
je
fwait
negl
inc
add
pushf
fstpt
nop
inc
cli
push
jle
inc
or
sub
add
les
add
pusha
add
outsb
clc
cmc
ljmp
jg
add
add
jl
jle
mov
dec
inc
lods
mov
inc
add
mov
pop
out
gs
dec
pop
or
jno
aad
cli
add
inc
mov
add
or
jbe
push
adc
push
and
fwait
push
mov
sub
cmp
inc
add
sub
add
jnp
pop
fmull
or
mov
lods
repz
cwtl
int3
outsl
icebp
or
pusha
add
xchg
inc
mov
cli
cmp
cmp
xchg
fsubs
mov
add
scas
adc
push
imul
mov
cmp
adc
xor
ret
pop
push
xchg
js
iret
cmp
enter
sub
popa
push
dec
and
push
mov
or
cmp
incl
add
inc
add
add
dec
out
dec
xchg
xor
fldt
cmp
add
outsb
dec
xchg
mul
fstps
mov
xchg
mov
mov
mov
mov
add
rolb
jns,pt
movb
pop
into
sbb
fmull
add
adc
or
aam
jo
or
xchg
out
cmp
in
mov
push
mov
xor
lret
je
push
les
and
hlt
in
cmpl
push
jecxz
mov
lea
cmp
jnp
cld
mov
add
add
adc
add
and
popf
arpl
sahf
mov
mov
jb
mov
and
jmp
daa
fildll
roll
int3
mov
call
outsl
adc
test
in
or
pop
movsl
xorl
add
pop
movsl
sbb
adc
icebp
call
add
mov
cld
sub
fstp
mov
mov
call
add
xor
outsl
aaa
jge
sub
inc
add
je
pop
pop
mov
pop
jns
mov
cmp
mov
xchg
aad
push
iret
mov
mov
jp
incb
pop
adc
mov
lock
push
dec
sub
sub
pop
rcrb
cmp
and
iret
inc
dec
mov
in
test
adcl
bound
shrl
outsl
sub
imul
mov
or
jno
out
mov
mov
sub
jle
jge
sub
mov
jne
and
add
bound
idivb
mov
test
push
addr16
cmp
les
in
dec
cmp
lods
pop
loope
sarl
and
adc
sub
cmpsl
adc
adc
lock
xlat
sub
inc
test
cltd
rorl
and
add
push
dec
pop
orl
adc
imul
mov
or
jg
jno
pop
xorl
loope
pop
jmp
sbb
push
pusha
add
shrb
add
int
sbb
cmp
jge
jl
aaa
sub
rolb
add
mov
mov
add
push
cld
add
addr16
fs
mov
icebp
outsl
pusha
add
cmp
adc
and
repz
enter
mov
mov
lss
sbb
dec
push
xchg
mov
sbb
mov
xor
jnp
and
imul
std
dec
push
xor
repnz
dec
xchg
aaa
or
jmp
not
repnz
fdiv
sbb
add
jl
pop
and
sub
mov
outsb
xchg
add
cmp
lods
mov
out
repnz
inc
add
mov
pushf
stos
addb
xchg
fsubs
add
lods
imul
inc
sbb
add
add
rorl
add
scas
clc
test
shr
mov
ficoms
sub
stc
scas
loop
test
cmp
inc
cmp
add
call
push
push
add
jmp
mov
add
mov
fldenv
add
jecxz
jg
add
imul
ja
inc
add
push
mov
add
rcr
xor
cmp
mov
mov
inc
jns
cmpsb
rcrl
in
int3
xlat
jle
xor
cmpsl
sub
sub
adc
add
or
mov
mov
fistpll
add
dec
shrl
popa
movsl
inc
add
js
push
clc
roll
icebp
dec
in
jns
mov
inc
add
jmp
jb
pop
mov
jp
mov
push
add
icebp
lahf
mov
dec
stos
in
xor
jle
sbb
push
and
shrb
cmp
add
jg
sti
jmp
ss
mov
mov
ljmp
add
xor
stos
aam
sahf
or
flds
xor
add
pop
cmp
les
or
and
aam
ret
sub
out
push
jge
fs
and
pushf
jns
daa
in
push
pop
rolb
add
add
jmp
fsubl
jp
flds
scas
push
inc
fmuls
cmp
add
cmpsb
hlt
or
add
inc
rcr
mov
mov
popl
cmp
dec
aam
ja
add
jne
cltd
rorl
add
jne
add
xchg
cmp
dec
lahf
addb
cmp
clc
and
ds
cmp
push
xchg
adc
mov
cmp
cmc
mov
or
mov
xor
sub
pop
ret
push
xchg
cmp
int
popa
and
testl
push
add
lds
and
pop
jmp
icebp
je
test
movsb
push
scas
movb
pop
jg
call
aad
inc
pop
js
popa
jge
aad
add
pop
mov
scas
cmp
cmc
inc
add
add
sub
sbb
sbb
cmpsb
and
hlt
out
arpl
shll
outsb
lods
mov
or
push
jp
lahf
and
hlt
dec
sahf
pushf
setnp
cmp
pushf
pop
xchg
fistps
xor
test
bound
pop
add
cmpl
sbb
dec
andl
pop
and
mov
fsubrs
lret
adc
repnz
add
inc
add
add
mov
aaa
sbb
loopne
push
add
clc
cmpsl
mov
or
jle
xor
es
push
push
push
mov
ljmp
sub
push
dec
rolb
lods
cmp
add
dec
ja
mov
repz
scas
out
mov
push
sub
insl
sub
dec
push
xchg
cmpsl
test
add
mov
aad
sahf
pushf
sbb
fmuls
add
push
or
or
hlt
jnp
mov
into
push
sub
sub
push
les
les
jg
loop
addb
add
sub
jnp
int3
ret
sarb
rolb
push
int3
pop
xchg
test
nop
lock
hlt
or
js
add
cltd
in
lea
iret
push
xchg
xor
xlat
mov
cmpsl
pushf
xchg
mov
pop
sub
add
divb
aad
repnz
and
stos
inc
cwtl
add
ljmp
sub
push
icebp
in
pop
enter
xchg
test
sub
lahf
jge
or
mov
test
rol
add
clc
sarl
test
rorl
sbb
test
adc
test
popa
and
xchg
jl
push
movsb
shll
jb
xchg
pop
mov
push
or
xchg
jmp
in
idivl
fs
sub
or
adc
dec
aam
add
add
loopne
orl
dec
mov
mov
sti
into
push
mov
nop
push
add
pop
jl
cs
andl
add
add
fidivrs
imul
ds
pop
jge
mov
clc
dec
pop
jl
mov
xchg
out
icebp
xor
gs
xchg
repz
gs
int3
iret
movb
push
add
repnz
lods
add
lods
cmp
sbb
enter
scas
dec
xchg
fcomps
add
push
cmp
xor
and
cwtl
icebp
mov
push
ljmp
js
pop
inc
add
push
fstpt
pushf
cmp
popf
pop
call
push
or
xor
lret
mov
cwtl
das
jb
xchg
cmc
push
push
and
jb
out
push
test
or
or
sarl
repnz
mov
mov
jb
lods
in
sbb
fisubrs
arpl
mov
aad
adc
roll
lea
stos
ret
test
fldl
loope
add
xchg
orl
out
int3
xchg
mov
int3
loopne
push
test
into
or
rorl
test
mov
std
fdivl
dec
mov
add
mov
lret
mov
and
and
cwtl
sub
addr16
rcll
push
imul
adc
dec
call
sub
add
pop
mov
cli
jbe
push
std
lcall
sub
ret
pop
sbb
push
lret
jnp
add
movl
pop
sarb
test
dec
pop
or
sub
mov
xchg
movsl
addr16
loop
lods
inc
jle
mov
sbb
inc
jg
mov
loopne
andl
xchg
cmp
pop
pop
adc
lea
sbb
dec
or
sahf
push
neg
mov
mov
sbb
imul
arpl
mov
and
push
cltd
push
jnp
movb
sub
mov
push
insl
sub
enter
scas
les
pushf
testb
mov
aaa
push
xchg
adc
hlt
push
imul
cmpsl
lods
test
mov
adc
addb
inc
fs
sbb
movb
sub
sub
ja
mov
es
add
mov
add
mov
popl
scas
inc
add
sahf
dec
or
cmp
loope
lret
pop
nop
lods
pop
jecxz
sarl
outsl
movb
xchg
mov
mov
in
push
repnz
mov
ja
or
push
in
xacquire
push
mov
loope
add
out
adc
xchg
fcmovnu
mov
adc
dec
mov
ret
add
mov
push
cwtl
movsb
negl
movsb
pop
fwait
in
js
fs
test
jp
cmp
insl
dec
cli
loopne
in
dec
xor
sub
mov
lcall
loope
cmp
outsb
clc
out
mov
push
es
add
inc
addr16
mov
jb
hlt
mov
sub
xchg
add
addb
icebp
cmp
xorl
and
push
xchg
addl
arpl
popw
pop
ljmp
arpl
lods
push
scas
jb
lea
dec
aas
inc
add
inc
pop
fs
cmp
add
sub
aad
pushf
xor
test
data16
add
pop
mov
add
out
pop
cltd
xor
scas
jb
dec
xchg
jle
adc
adc
fldenv
out
hlt
mov
shl
test
pusha
add
lea
out
inc
add
xchg
push
sarb
mov
out
jae
push
cmp
lods
es
std
ds
repnz
add
xor
sub
cmp
dec
aaa
dec
sub
push
mov
test
mov
ljmp
sub
add
mov
add
xchg
adc
shr
int3
inc
add
rep
cmp
and
sbb
cmp
dec
or
mov
iret
daa
lds
ss
in
scas
stos
and
add
xchg
push
stos
add
add
movb
dec
ljmp
int
iret
es
sub
sub
clc
jp
add
add
int3
jno
cmp
add
call
stc
or
out
shll
mov
sbb
cmp
cltd
or
and
sub
lds
mov
dec
arpl
sbb
jmp
fiadds
xchg
mov
lods
sbb
mov
iret
mov
sahf
rolb
inc
add
aaa
xchg
xchg
pushf
rcrl
enter
and
inc
sbb
cs
sti
stc
adc
mov
xlat
in
inc
add
adc
test
and
jae
add
or
push
dec
cwtl
pop
add
fcmovnu
nop
shll
jo
push
add
cwtl
jecxz
out
adc
xor
mov
cmp
sub
ljmp
jmp
into
pop
loop
out
out
mov
push
popa
outsb
add
stos
mov
outsl
out
les
sub
mov
mov
inc
add
stos
hlt
dec
and
xor
mov
testl
das
icebp
push
rorl
dec
stos
int
xor
cmc
fmul
cmc
push
mov
and
xor
pop
xor
mov
cmpsb
sbb
mov
inc
add
adcl
aad
cld
cmpsb
and
mov
mov
dec
cmp
xor
dec
mov
sbb
dec
imulb
xor
lcall
ja
inc
mov
push
fildll
sub
insl
into
adc
mov
add
aad
call
cs
jne
sbb
dec
mov
pop
cmp
add
insl
xor
add
jb
mov
stc
sahf
in
xor
add
movsl
cld
fisubs
add
movb
imull
dec
fldpi
jl
and
mov
loop
sub
mov
sub
pop
mov
cmp
push
inc
add
xor
mov
ret
fwait
aaa
dec
test
mov
addr16
addb
lahf
enter
or
sub
stos
push
sti
rorl
jmp
jp
cs
jae
adc
pop
gs
pop
mov
cs
lock
shr
or
add
add
fcomip
inc
add
cmc
adc
inc
add
fs
aad
mov
incb
add
add
jmp
ja
jmp
push
daa
mov
or
mov
adc
and
jg
sub
cli
jns
cmpsb
int3
pop
jno
xchg
inc
aaa
pop
push
rcl
adc
int
repnz
fwait
rolb
imul
in
ficompl
fbld
add
das
jmp
mov
jecxz
push
xchg
scas
inc
add
jae
mov
add
repz
sub
push
mov
stos
frstor
inc
add
loope
add
add
jb
inc
add
loope
outsl
stos
rcrb
add
ss
pop
mov
neg
inc
jne
push
daa
stos
mov
cmp
xor
imul
fimull
cwtl
out
pop
cmp
jmp
inc
sbb
add
xor
sub
lret
bt
loope
and
outsb
imul
add
dec
adc
adc
add
dec
ret
push
icebp
adc
test
int3
mov
inc
add
out
and
popf
push
xchg
ret
sub
add
inc
add
mov
cld
stos
push
fs
push
mov
add
mov
dec
imul
in
cli
pop
jbe
jmp
call
add
jae
stos
js
push
fbld
add
add
fmull
nop
add
dec
mov
dec
fimuls
jno
push
int
jmp
cli
fwait
cwtl
dec
xchg
xchg
jle
add
sbb
push
inc
add
push
mov
adc
outsb
dec
mov
cmpsl
add
inc
fs
leave
dec
or
add
or
push
nop
or
lret
cltd
jno
push
pusha
add
repnz
add
cld
cmp
push
jb
lcall
add
push
ljmp
orl
push
mov
xor
aad
or
lock
addr16
ret
movsl
xor
push
push
add
movb
inc
std
sub
cmc
push
int
lret
xchg
or
lahf
es
jns
mov
xchg
and
mov
inc
aaa
rcll
add
fchs
js
and
into
push
jo
lock
stc
cmpsb
shl
arpl
imul
cmpsl
mov
sbb
mov
inc
add
sub
incb
test
and
add
in
xchg
loop
push
mov
int
movb
dec
add
loopne
dec
je
dec
outsb
mov
or
push
sbb
cmp
adc
inc
add
sbb
xor
pop
mov
insb
hlt
cmp
mov
bound
int3
test
sub
or
add
pop
lods
pop
xor
cltd
inc
add
rolb
mov
or
adc
sub
mov
add
repnz
outsl
test
mov
lock
add
test
sbb
fistpl
mov
fwait
outsb
ds
mov
mov
xor
imul
jp
xchg
or
adc
repnz
add
xchg
add
add
out
cltd
das
cmc
pop
cmpl
xchg
hlt
sub
add
adc
jecxz
mov
ds
or
add
sbb
inc
add
mov
add
add
in
shll
add
cwtl
push
add
xor
pop
lods
lods
stos
loop
jnp
fdivrp
sbb
pop
rclw
loopne
sbb
movsb
lret
out
fadds
add
sub
mov
mov
add
mov
add
int3
in
dec
inc
add
mov
mov
sbb
je
add
addr16
mov
xor
mov
add
popa
cmp
ja
add
mov
imul
add
outsb
popf
lahf
loope
add
repz
out
push
and
stos
aam
je
push
pop
sbb
mov
push
cld
lds
pushf
cmpsl
mov
mov
xor
pop
in
mov
pop
mov
inc
dec
rolb
scas
push
mov
or
cwtl
or
rorl
lods
add
or
adc
add
and
push
mov
data16
adc
pop
cli
xchg
cld
insb
dec
test
repz
or
out
fwait
sub
scas
mov
icebp
fcomp
filds
je
and
stos
xor
enter
into
lods
sti
pop
cmc
ret
fsubl
pushf
jecxz
into
outsb
cmp
rorl
cmp
cmc
and
scas
push
in
add
int3
cld
adc
jg
mov
inc
pop
dec
out
ret
sbb
ret
mov
aaa
inc
add
cs
xor
cmp
insb
enter
daa
xchg
xlat
pop
mov
sbb
dec
imul
jp
or
mov
in
push
pop
adc
mov
je
ja
das
push
push
aaa
cmpsl
rolb
icebp
pop
cld
clc
leave
test
pop
pop
scas
cmp
dec
mov
nop
cld
nop
jmp
add
and
mov
xchg
ret
adc
add
push
mov
add
je
andl
popf
mov
jb
out
aam
add
shl
stc
nop
jb
add
add
call
stc
nop
jb
add
iret
dec
add
adc
cld
sbb
add
stc
nop
jb
mov
insl
out
xchg
mov
add
stc
nop
jb
push
and
inc
mov
push
push
mov
xchg
ret
incl
cmpl
nop
jmp
xchg
add
repz
nop
jb
add
movsb
add
add
add
sldt
mov
or
cld
nop
jmp
aaa
int
add
iret
jno
add
pop
cmc
inc
add
mov
mov
stc
nop
jb
iret
xor
ret
stc
nop
jb
movb
add
add
lea
stc
nop
jb
add
push
push
mov
cld
nop
jmp
xor
add
mov
aad
inc
add
mov
cmpl
nop
cld
nop
jmp
cmp
add
and
pop
and
stc
nop
jb
add
aas
stos
or
in
call
stc
nop
jb
test
add
pop
stc
nop
jb
add
add
stc
nop
jb
add
add
add
aaa
repz
jb
add
add
mov
sbb
nop
jb
inc
add
incl
cmp
nop
jb
push
add
je
push
adc
mov
inc
add
stos
and
nop
jb
add
je
add
xor
stc
nop
jb
insb
add
movzwl
stc
nop
jb
add
aas
jle
add
stc
nop
jb
add
xor
jle
fdivr
nop
jb
sysenter
add
xchg
jno
pop
push
mov
xchg
ret
aas
add
or
push
sub
push
std
inc
add
add
incb
jb
add
add
inc
stc
nop
jb
push
test
addb
xor
stc
nop
jb
add
add
jmp
add
lret
push
add
pop
push
push
stc
nop
jb
add
es
add
stc
nop
jb
add
popa
stc
nop
jb
push
push
add
add
mov
lret
adc
pop
filds
xchg
ret
push
test
stc
nop
jb
dec
test
add
mov
nop
cld
nop
jmp
out
aas
push
test
add
stc
nop
jb
cmp
les
pop
add
stc
nop
jb
xchg
imul
rclb
xchg
filds
xchg
ret
inc
xchg
add
push
add
nop
mov
push
nop
cld
nop
jmp
add
add
add
or
nop
jb
add
add
lods
call
stc
nop
jb
push
lret
add
jecxz
aaa
push
or
jb
add
or
add
or
nop
jmp
add
add
or
or
add
nop
jb
push
jne
nop
cld
nop
jmp
add
mov
call
incl
lret
adc
add
jb
push
out
xchg
xchg
xor
and
nop
jb
xor
push
push
mov
xchg
ret
add
imul
push
add
stos
lahf
movb
jbe
cmp
jb
add
push
mov
nop
cld
nop
jmp
add
sbb
push
pop
call
nop
cld
nop
jmp
add
popa
add
nop
jb
je
add
add
jne
stc
nop
jb
add
test
insb
inc
insb
insb
nop
cld
nop
jmp
iret
push
mov
add
stc
nop
jb
mov
mov
nop
cld
nop
jmp
push
sub
add
add
cltd
mov
nop
cld
nop
jmp
add
and
add
stc
nop
jb
mov
dec
add
push
mov
xchg
ret
call
test
nop
jb
add
outsl
mov
nop
cld
nop
jmp
aas
aam
and
mov
push
mov
xchg
ret
mov
pushl
mov
dec
nop
cld
nop
jmp
add
mov
fs
xor
stc
nop
jb
add
jg
popa
add
mov
xchg
ret
add
xchg
jge
push
mov
xchg
ret
bound
add
nop
jmp
add
xor
and
andb
add
add
lods
push
add
stos
mov
stc
nop
jb
imul
adc
or
inc
add
imul
je
add
nop
jb
cmpsb
add
push
mov
xchg
ret
and
dec
mov
stc
nop
jb
dec
add
das
push
push
mov
xchg
ret
and
cli
inc
stc
nop
jb
jbe
cmp
push
add
nop
jb
push
add
mov
nop
jb
add
jbe
lret
lahf
add
add
add
mov
xchg
ret
dec
insl
add
or
adcb
add
lea
stc
nop
jb
int
add
add
fldl
dec
cmp
nop
jb
lahf
stos
add
xor
inc
push
mov
xchg
ret
add
imul
cld
nop
jmp
add
or
in
add
add
mov
stc
nop
jb
or
mov
stos
add
push
mov
xchg
ret
bound
stos
ja
jne
stc
nop
jb
add
xchg
jp
inc
lock
nop
jb
test
inc
imul
xchg
ret
add
shll
and
push
mov
xchg
ret
add
mov
clc
jmp
stc
nop
jb
add
nop
jb
add
add
sub
add
nop
jb
insl
movsb
jo
popa
stc
nop
jb
adc
test
add
xchg
cld
je
stc
nop
jb
adc
dec
imul
stc
nop
jb
add
xchg
adc
test
push
push
mov
xchg
ret
add
xor
je
jmp
add
nop
jb
dec
add
cmpsb
int3
add
stc
nop
jb
add
add
add
pop
add
stc
nop
jb
add
add
pop
lock
pop
stc
nop
jb
add
add
lcall
rcll
gs
add
mov
test
nop
jb
mov
lock
push
mov
xchg
ret
add
lahf
and
xchg
or
add
nop
jb
add
repz
ret
stc
nop
jb
add
add
call
stc
nop
jb
xor
int
jbe
add
out
movzwl
push
mov
xchg
ret
add
mov
add
xchg
insl
cmp
add
add
jl
push
mov
xchg
ret
add
add
mov
xchg
ret
sldt
repz
jnp
pause
cld
nop
jmp
pop
push
add
jno
sub
sbb
add
lcall
pop
xchg
out
jg
stc
nop
jb
aaa
bound
bound
add
nop
jmp
xor
xchg
add
jge
stc
nop
jb
stos
add
add
lret
and
nop
cld
nop
jmp
dec
imul
push
mov
xchg
ret
or
add
push
mov
push
mov
xchg
ret
add
mov
stc
nop
jb
mov
push
stc
nop
jb
insl
dec
xor
add
dec
add
push
mov
xchg
ret
push
xchg
add
clc
push
stc
nop
jb
aam
push
stos
dec
je
add
nop
cld
nop
jmp
and
movb
or
jb
lods
add
push
mov
scas
fbstp
and
inc
shll
movsb
add
test
jl
outsb
and
mov
xchg
ret
incl
add
aas
add
stc
nop
jb
cmpsb
xor
imul
xchg
ret
add
add
mov
xchg
ret
je
add
call
nop
jb
add
push
stc
nop
jb
aaa
out
cmpsb
xor
lds
add
jb
add
xor
mov
stc
nop
jb
add
cld
nop
jmp
add
insb
mov
data16
nop
cld
nop
jmp
add
add
and
mov
xchg
ret
add
jmp
mov
stc
nop
jb
aaa
add
mov
sub
test
nop
jmp
xor
xchg
cmpsb
add
lods
push
stc
nop
jb
add
xor
mov
mov
stc
nop
jb
add
add
add
nop
jb
lret
add
lsl
stc
nop
jb
add
mov
add
mov
cmpb
add
mov
lock
push
pop
cld
inc
add
lods
add
inc
add
add
nop
cld
nop
jmp
stos
dec
xchg
ss
push
push
mov
xchg
ret
lahf
add
incl
xchg
xor
clc
pop
add
stc
nop
jb
pop
xor
push
xchg
daa
sbb
nop
jmp
add
add
push
out
push
adc
nop
jb
mov
mov
stc
nop
jb
add
nop
jb
add
add
add
rep
stc
nop
jb
add
add
add
std
mov
stc
nop
jb
add
add
repnz
add
mov
stc
nop
jb
add
add
stc
nop
jb
add
or
xor
inc
add
out
add
and
nop
jb
lret
je
je
push
es
movsb
mov
jo
mov
stc
nop
jb
push
add
xchg
push
outsl
pop
nop
cld
nop
jmp
add
je
movb
fists
in
add
add
pop
jne
stos
add
add
mulb
repnz
push
mov
xchg
ret
or
add
cld
nop
jmp
iret
movb
bound
aam
mov
stc
nop
jb
add
xlat
inc
repz
stc
nop
jb
lods
add
pop
pop
nop
cld
nop
jmp
lret
add
stos
add
icebp
jmp
movb
mov
xchg
ret
lods
add
mov
xchg
ret
cmovns
int
pop
jae
nop
jb
and
push
mov
xchg
ret
lahf
xchg
add
mov
push
mov
add
add
jmp
daa
add
push
push
push
stc
nop
jb
repz
iret
mov
pop
cmp
cld
nop
jmp
add
wrmsr
enter
adc
cmp
ret
int
push
jg
nop
cld
nop
jmp
add
mov
xchg
stc
nop
jb
xchg
add
push
scas
sub
stc
nop
jb
add
add
stc
nop
jb
mov
xor
push
popf
xor
push
mov
xchg
ret
xchg
sub
push
mov
xchg
ret
add
add
les
stos
div
nop
cld
nop
jmp
add
incl
movsb
xchg
shr
nop
cld
nop
jmp
lahf
add
lahf
out
scas
cmpl
nop
cld
nop
jmp
call
jae
xor
push
mov
xchg
ret
mov
movsb
add
popa
stc
nop
jb
mov
push
movsl
lret
nop
jb
roll
mov
stc
mov
push
mov
xchg
ret
out
cmpsb
dec
pusha
add
mov
stc
nop
jb
add
add
iret
pop
mov
push
mov
xchg
ret
aas
add
or
nop
jb
xor
lret
pop
nop
cld
nop
jmp
mov
add
dec
adc
nop
jb
add
rolb
add
push
mov
xchg
ret
add
stc
nop
jb
lret
push
add
test
sar
jb
add
fs
push
mov
xchg
ret
xchg
push
shld
cld
nop
jmp
add
add
mov
push
mov
xchg
ret
add
push
jg
rclb
add
add
mov
add
mov
stc
nop
jb
xor
addb
and
xchg
lods
and
push
mov
xchg
ret
push
adc
in
mov
stc
nop
jb
jbe
pop
int
xor
rep
nop
cld
nop
jmp
test
add
call
nop
cld
nop
jmp
aas
test
movsl
or
mov
adc
add
nop
jb
adc
filds
jb
lret
xor
int
data16
mov
nop
cld
nop
jmp
jbe
mov
add
and
pop
mov
stc
nop
jb
add
add
in
rep
stc
nop
jb
mov
cmovno
rep
push
mov
xchg
ret
call
add
stc
nop
jb
mov
mov
nop
jmp
add
iret
lods
out
xor
jmp
mov
stc
nop
jb
insb
fwait
push
stc
nop
jb
mov
add
je
pop
mov
stc
nop
jb
add
xor
xchg
dec
shr
stc
nop
jb
cmpsb
push
add
aas
inc
push
push
push
mov
xchg
ret
add
xchg
add
jne
stc
nop
jb
test
test
push
pop
add
stc
nop
jb
iret
aaa
xor
push
int3
and
stc
nop
jb
dec
add
add
add
cld
not
push
mov
xchg
ret
add
mov
in
add
add
faddl
add
add
aad
dec
jmp
stc
nop
jb
mov
jne
stc
nop
jb
add
dec
repz
filds
add
push
nop
jb
xchg
add
decb
nop
jmp
add
mov
nop
cld
nop
jmp
add
add
xor
add
adc
stos
shr
nop
cld
nop
jmp
add
or
xor
and
stc
nop
jb
add
jg
test
out
stc
nop
jb
add
nop
jb
add
mov
hlt
in
fiadds
adcb
incl
aaa
sbb
add
stos
push
mov
add
add
jo
inc
test
push
jl
jno
mov
stc
nop
jb
lds
xlat
add
add
xlat
jno
or
addb
incl
add
and
iret
add
nop
cld
nop
jmp
out
mov
lret
push
stc
nop
jb
inc
mov
xor
add
aam
dec
stc
nop
jb
add
add
cmpl
or
add
lret
mov
mov
add
stc
nop
jb
add
pop
xchg
test
push
mov
xchg
ret
add
mov
nop
cld
nop
jmp
incl
sub
stc
nop
jb
adc
mov
nop
cld
nop
jmp
xlat
add
xlat
mov
nop
jb
xor
int
call
in
jmp
add
mov
pushl
nop
cld
nop
jmp
add
add
jp
dec
adc
sub
inc
add
movb
push
push
mov
xchg
ret
xor
sahf
add
stc
nop
jb
add
add
xor
ja
cmp
mov
push
stc
nop
jb
add
jmp
cld
nop
jmp
aam
xor
inc
add
shr
pop
nop
cld
nop
jmp
add
add
pop
add
push
jb
add
incl
lds
ret
sbb
addr16
add
add
adc
add
jmp
add
subl
push
mov
xchg
ret
add
mov
and
inc
pop
je
nop
cld
nop
jmp
aam
inc
add
nop
jmp
push
add
sbb
inc
pop
cmp
nop
cld
nop
jmp
add
add
stc
nop
jb
ljmp
push
stc
nop
jb
je
xchg
xlat
adc
iret
pop
stc
nop
jb
add
jmp
mov
stc
nop
jb
add
add
add
insb
mov
stc
nop
jb
iret
js
loop
nop
cld
nop
jmp
add
mov
mov
inc
add
jne
stc
nop
jb
add
push
lret
je
stc
nop
jb
add
loop
shl
nop
cld
nop
jmp
out
test
add
and
stc
nop
jb
add
xor
test
lea
stc
nop
jb
xchg
repz
jb
add
incl
xchg
loop
insl
movzwl
stc
nop
jb
adc
mov
stc
nop
jb
mov
mov
movb
fwait
add
stc
nop
jb
add
mov
inc
and
mov
xchg
ret
insb
mov
mov
add
nop
cld
nop
jmp
add
adc
and
stc
nop
jb
add
sldt
mov
je
nop
cld
nop
jmp
add
and
adcb
add
test
jmp
nop
cld
nop
jmp
cmp
add
add
stc
nop
jb
xchg
mov
stc
nop
jb
add
out
je
add
nop
cld
nop
jmp
add
add
cld
or
jmp
mov
cmp
nop
jb
add
add
push
mov
xchg
ret
push
add
mov
xchg
ret
add
int
pop
test
push
stc
nop
jb
add
add
xor
cld
nop
jmp
add
pop
movsb
adc
mov
stc
nop
jb
add
out
pop
ja
stc
nop
jb
cmpsb
repz
loop
dec
nop
cld
nop
jmp
lret
push
stos
bts
add
fldl
xchg
ret
out
add
int
add
push
mov
xchg
ret
imul
add
add
stos
add
cmpsb
mov
stc
nop
jb
jmp
jmp
cld
nop
jmp
je
add
cmp
inc
add
push
movsb
mov
nop
jmp
add
sbb
push
cmp
xor
add
stc
nop
jb
out
movsb
pop
mov
stc
nop
jb
push
add
lds
imul
pop
add
add
out
roll
inc
call
sub
add
add
add
jmp
outsl
loopne
mov
xchg
ret
add
xor
push
mov
xchg
ret
mov
pop
stc
stc
nop
jb
sbb
nop
jb
add
add
add
nop
jb
mov
cmpsb
insb
inc
add
hlt
aaa
arpl
jmp
jp
nop
cld
nop
jmp
adc
add
add
stc
nop
jb
add
add
xchg
jne
or
cmp
nop
cld
nop
jmp
cmp
incl
mov
mov
xchg
ret
add
add
add
dec
add
mov
xchg
ret
add
push
sar
nop
jb
aaa
lods
mov
jns
test
jb
aaa
add
add
dec
incl
xchg
ret
push
push
push
mov
xchg
ret
insb
add
test
jb
add
call
or
mov
xchg
ret
add
mov
cmp
jmp
add
adc
mov
stc
nop
jb
shld
xchg
pushl
push
mov
xchg
ret
xchg
add
nop
jb
xlat
adc
call
push
mov
xchg
ret
cmp
push
nop
jb
pop
test
movb
add
stc
nop
jb
add
xor
add
sub
std
out
add
iret
add
or
stc
nop
jb
movsb
adc
stc
nop
jb
pop
add
add
dec
push
stc
nop
jb
mov
pop
push
add
push
pop
xor
stc
nop
jb
xor
call
stc
nop
jb
add
add
mov
stc
nop
jb
xchg
test
bound
adc
rolb
ret
add
pop
icebp
inc
add
add
sbb
stc
nop
jb
aaa
jbe
and
push
stc
nop
jb
xchg
pop
add
jb
add
stc
nop
jb
add
lahf
dec
movsb
push
shlb
push
push
mov
xchg
ret
test
inc
test
push
sub
add
nop
jb
mov
push
mov
xchg
ret
add
iret
add
pop
mov
stc
nop
jb
add
add
sar
stc
nop
jb
add
add
sub
dec
cmp
nop
jb
pop
test
add
sub
arpl
nop
jb
push
insl
add
jmp
nop
cld
nop
jmp
mov
clc
add
repnz
add
xor
fwait
pop
stc
nop
jb
xor
or
insb
xchg
or
mov
add
nop
jb
add
aam
lahf
lea
nop
cld
nop
jmp
pop
incl
xor
add
push
mov
xchg
ret
add
leave
sub
nop
jb
xchg
mov
add
nop
jmp
push
test
xchg
add
sbb
mov
nop
cld
nop
jmp
jbe
stos
insb
xchg
icebp
pop
stos
mov
stc
nop
jb
add
add
push
pop
mov
stc
nop
jb
aas
add
add
push
mov
xchg
ret
stos
dec
imul
nop
cld
nop
jmp
add
lea
stc
nop
jb
test
stc
nop
jb
xor
movsb
mov
sbb
popa
add
mov
xchg
ret
add
mov
xchg
ret
xor
je
inc
in
cld
nop
jmp
imul
mov
stc
nop
jb
cmp
xor
nop
cld
nop
jmp
ljmp
subps
pop
jne
nop
cld
nop
jmp
push
aas
xchg
adc
rclb
out
ljmp
stos
add
stc
nop
jb
insb
insl
add
xchg
jmp
stc
nop
jb
punpckhbw
push
ror
push
mov
push
ds
dec
mov
add
add
mov
stc
nop
jb
push
add
stos
add
and
mov
mov
mov
pop
mov
psllq
lock
incl
cmpsb
add
add
hlt
add
pop
incl
js
nop
cld
nop
jmp
add
add
lret
leave
and
nop
cld
nop
jmp
test
inc
movb
push
stc
nop
jb
jmp
enter
or
jmp
inc
add
jb
pcmpeqb
add
cmp
stc
push
add
stc
nop
jb
add
add
add
stc
nop
jb
dec
add
push
mov
xchg
ret
int
int
sub
jb
add
xchg
decl
cmp
add
stc
nop
jb
stos
add
jb
je
xchg
add
rorl
stc
nop
jb
add
add
je
ret
xor
and
push
mov
xchg
ret
out
adc
stos
nop
cld
nop
jmp
add
push
mov
nop
jb
xor
xor
add
xor
inc
sub
sar
mov
xchg
ret
je
xchg
out
and
lock
push
push
mov
xchg
ret
push
push
add
out
add
push
mov
xchg
ret
add
add
cmp
nop
jb
add
add
xchg
pop
add
stc
nop
jb
adc
mov
sub
inc
add
mov
add
add
idiv
ljmp
inc
call
sar
aas
add
test
mov
stc
nop
jb
or
add
pusha
stc
nop
jb
aas
repz
add
mov
adc
nop
jb
add
test
repnz
nop
jb
pop
mov
sbb
push
push
mov
xchg
ret
pop
call
push
stc
nop
jb
sbb
xor
and
stc
nop
jb
mov
stos
xor
stc
nop
jb
bound
add
mov
nop
cld
nop
jmp
add
xor
nop
cld
nop
jmp
add
add
stc
nop
jb
insl
add
add
sti
stc
nop
jb
aam
movsb
add
xlat
mov
add
in
stc
nop
jb
movsb
add
add
jb
add
inc
add
add
add
nop
cld
nop
jmp
test
shll
push
mov
xchg
ret
add
aam
loopne
inc
xchg
arpl
out
decl
nop
cld
nop
jmp
add
jbe
push
out
stc
nop
jb
add
xchg
insb
es
nop
cld
nop
jmp
jns
les
stc
nop
jb
add
add
mov
nop
cld
nop
jmp
add
add
mov
adc
nop
jb
add
add
jb
test
add
mov
dec
push
mov
xchg
ret
je
aaa
mov
shlb
add
ss
xchg
stc
nop
jb
insl
add
inc
stos
mov
push
mov
xchg
ret
add
mov
nop
jb
lret
xor
imul
nop
jmp
add
push
sbb
nop
jb
xor
outsl
mov
stc
nop
jb
add
add
pop
lahf
pushl
push
mov
xchg
ret
je
add
mov
jb
add
add
sti
mov
stc
nop
jb
xor
sub
cld
nop
jmp
add
dec
and
push
mov
xchg
ret
add
imul
repz
nop
jb
add
call
stc
nop
jb
add
add
dec
call
nop
cld
nop
jmp
mov
mov
push
stc
nop
jb
add
pop
cmp
jb
cmp
add
add
movsl
pop
lea
test
nop
jb
add
sbbl
in
incl
imul
add
push
mov
xchg
ret
add
aas
add
nop
jb
push
mov
mov
mov
stc
nop
jb
cmp
add
lret
adc
clc
incl
cmpsl
cmpsb
loope
cmp
mov
jb
lds
xchg
add
add
add
mov
lods
xor
popl
stc
nop
jb
add
xor
add
add
in
incl
test
enter
inc
stc
nop
jb
mov
pop
push
mov
xchg
ret
test
aaa
mov
inc
add
daa
add
add
add
add
adc
nop
jb
add
test
nop
cld
nop
jmp
adc
aas
sub
cmpb
decl
xchg
add
dec
adc
add
scas
loop
incl
push
fistpll
add
incl
push
add
add
xchg
ret
mov
push
push
mov
xchg
ret
xlat
add
mov
mov
je
sub
nop
jb
xchg
sti
cmp
nop
cld
nop
jmp
xor
add
out
inc
add
lret
xor
nop
jb
insl
je
mov
pusha
add
stc
nop
jb
add
add
mov
push
mov
xchg
ret
add
test
sti
mov
stc
nop
jb
xor
pop
das
mov
nop
cld
nop
jmp
out
roll
add
stc
nop
jb
add
incl
iret
adc
mov
jb
test
or
decl
mov
xchg
ret
add
stos
add
popa
fs
nop
jb
add
test
fs
subl
nop
cld
nop
jmp
iret
add
lods
push
mov
xchg
ret
mov
lock
mov
nop
cld
nop
jmp
add
add
xchg
xchg
test
adc
fisubrs
stc
nop
jb
add
aad
jp
iret
or
aad
incl
add
add
mov
stc
nop
jb
movsb
add
add
jbe
mov
push
mov
xchg
ret
add
lds
mov
xchg
ret
mov
add
jg
sar
jb
push
movb
push
add
mov
nop
cld
nop
jmp
xor
add
bound
jne
stc
nop
jb
test
addb
inc
jecxz
mov
nop
cld
nop
jmp
call
iret
rep
stc
nop
jb
add
xchg
xor
out
into
cld
push
mov
xchg
ret
xor
add
adc
add
popl
mov
xchg
ret
xchg
pop
loope
cld
nop
jmp
add
insl
add
out
jmp
stc
nop
jb
adc
add
and
nop
jb
xor
add
add
add
dec
push
mov
sti
imul
add
xor
add
nop
cld
nop
jmp
xchg
iret
push
mov
add
add
mov
add
add
das
lcall
cmp
lcall
lret
push
push
mov
xchg
ret
insl
add
mov
mov
stc
nop
jb
add
cmp
jmp
inc
add
xor
test
push
mov
xchg
ret
test
add
mov
jl
in
stc
nop
jb
sbb
nop
mov
cmpb
dec
add
add
xchg
jmp
nop
jb
push
outsl
add
push
mov
xchg
ret
adc
push
loope
popl
icebp
stc
nop
jb
push
mov
dec
mov
stc
nop
jb
add
mov
push
add
stc
nop
jb
insb
inc
add
push
nop
cld
nop
jmp
stos
insb
xchg
adc
add
push
stc
nop
jb
add
add
vpsubsb
cld
nop
jmp
push
or
dec
mov
stc
nop
jb
test
add
nop
jb
lods
add
add
cwtl
add
add
loop
incl
rol
je
stc
nop
jb
out
xor
int
repz
nop
jb
add
add
add
mov
xchg
ret
add
push
xchg
stc
nop
jb
add
xchg
stc
nop
jb
xor
jbe
add
push
mov
xchg
ret
xor
mov
push
mov
xchg
ret
add
stc
nop
jb
cmpsb
add
dec
pop
mov
adc
stc
nop
jb
rcll
dec
xchg
add
jp
sub
call
decl
nop
cmp
nop
std
stc
nop
jb
add
decl
nop
jmp
mov
test
add
push
mov
xchg
ret
add
test
push
ds
stc
nop
jb
xor
inc
cltd
ret
nop
cld
nop
jmp
add
mov
xor
add
stc
nop
jb
sbb
nop
jb
add
pop
incl
push
nop
ret
rep
stc
nop
jb
add
jne
add
popa
add
nop
jb
add
mov
add
lcall
add
lds
aam
adc
sub
or
stc
nop
jb
and
sbb
stc
nop
jb
incl
int3
dec
stc
nop
jb
push
mov
imul
add
mov
nop
cld
nop
jmp
cmp
add
add
lahf
rep
stc
nop
jb
pop
call
inc
inc
fisttpll
inc
incb
xchg
ret
push
xor
push
stc
nop
jb
and
cmp
ret
mov
nop
jb
paddq
add
icebp
repz
addb
mov
push
mov
xchg
ret
add
aaa
outsb
ror
push
mov
xchg
ret
push
add
stc
nop
jb
dec
add
shll
cmpl
push
mov
xchg
ret
aaa
add
push
jne
dec
push
mov
xchg
ret
sbb
test
add
xlat
mov
cmc
inc
add
or
add
ret
nop
cld
nop
jmp
xor
push
lret
mov
stc
nop
jb
add
push
aaa
int
adc
decl
stc
nop
jb
add
add
xchg
jp
mov
adc
nop
jb
add
add
aaa
jl
xchg
stc
nop
jb
add
jb
xor
lods
test
add
inc
add
add
mov
xchg
ret
add
movsb
mov
mov
xchg
ret
add
out
add
js
icebp
stc
nop
jb
pop
stos
xor
push
jnp
andl
jmp
inc
add
mov
stc
nop
jb
out
insl
imul
adc
sub
cmp
ret
xor
shll
cmp
sar
jb
add
cmpsb
pop
add
stc
nop
jb
add
mov
dec
cmp
nop
jb
test
add
mov
add
mov
xchg
ret
xchg
xchg
insl
mov
mov
stc
nop
jb
call
addr16
cwtl
push
push
mov
xchg
ret
aaa
xor
xchg
xchg
loope
aaa
pop
fsubrl
outsl
insl
jae
nop
jb
add
bound
nop
jb
add
push
repnz
hlt
lret
mov
xchg
ret
add
sbb
push
stc
nop
jb
imul
nop
jb
push
pop
pushl
pop
stc
nop
jb
add
xor
mov
stc
nop
jb
xlat
rcll
clc
add
nop
cld
nop
jmp
add
out
push
fisttpl
jb
mov
icebp
sbb
inc
xor
stc
nop
jb
test
aas
addb
mov
stc
nop
jb
mov
repz
add
test
push
mov
xchg
ret
add
dec
add
mov
mov
xchg
ret
add
dec
repnz
fnstenv
stc
nop
jb
xor
pop
stc
nop
jb
je
add
xor
aas
adc
add
add
les
fisttpl
cld
nop
jmp
stos
iret
add
lock
sub
nop
jb
dec
pop
aas
push
test
popa
add
nop
jb
add
cmpsb
add
movsl
mov
cmp
nop
jb
test
add
hlt
stc
nop
jb
mov
sub
and
inc
add
add
pop
ja
je
stc
nop
jb
add
xchg
mov
nop
jb
add
add
mov
add
add
test
stc
nop
jb
add
jmp
jb
add
cmp
aas
push
mov
pop
nop
cld
nop
jmp
mov
lahf
xor
ficoms
cld
pushl
add
cmp
in
mov
and
add
or
add
cmovge
ljmp
push
in
dec
inc
jno
dec
cmp
and
adc
lods
dec
xchg
stos
lods
popf
lcall
lret
shrl
divb
aad
add
add
movsl
pop
shll
popa
lahf
adc
aam
in
cmpsb
lret
xchg
lds
test
jecxz
aas
jle
das
dec
xchg
scas
adc
xchg
mov
loope
pop
cmpsl
cwtl
dec
and
cmp
add
mov
add
loop
aas
or
sbb
xchg
imulb
jo
push
mov
fwait
lock
sbb
hlt
movsb
shr
repnz
inc
add
pop
pop
pusha
add
pop
jmp
fcomi
scas
and
fiaddl
inc
lods
loop
inc
add
int
jmp
decb
xchg
xchg
xchg
add
push
leave
pop
sbb
mov
pop
xchg
out
add
lods
pop
push
add
sahf
sbb
mov
add
mov
mov
rolb
push
jp
cmpsb
repz
add
enter
inc
add
jbe
fsubrs
sbb
cmc
clc
push
adc
decb
add
add
shlb
into
test
push
imul
mov
stos
jne
scas
loop
inc
add
xchg
mov
sub
test
rcrb
add
or
into
cmp
pop
loopne
jecxz
add
xchg
outsb
mov
mov
push
pop
movsl
dec
sub
push
movsl
ret
jno
mov
add
sbb
push
imul
imul
stc
adc
mov
fwait
in
dec
inc
add
inc
add
xchg
jecxz
iret
imul
insl
jle
test
call
movaps
sub
faddl
inc
add
scas
sub
daa
shll
xchg
mov
es
loope
add
or
paddb
or
pop
jle
out
inc
lock
add
in
sub
sbb
xchg
add
loopne
shl
aam
xor
inc
pop
cmp
sahf
mov
add
cmp
fbld
and
in
jbe
mov
lcall
outsb
ljmp
aas
mov
jp
call
add
jnp
adc
pop
lods
addr16
push
adc
cwtl
mov
in
sbb
dec
xchg
sub
push
mov
inc
and
sbb
int3
xchg
loop
lods
pop
or
out
add
pop
sub
bnd
add
add
sarl
arpl
add
imul
or
enter
lods
push
jae
into
rcl
or
jo
pop
xchg
andl
mov
pusha
add
add
shlb
add
add
push
cmc
sub
add
add
jmp
in
adc
cmp
push
xchg
or
or
in
pop
jne
sti
stos
jns
adc
clc
dec
in
or
shr
mov
in
inc
add
cmovb
enter
cld
scas
outsl
cmc
paddsb
sub
movb
and
in
pop
mov
je
lock
popa
pop
scas
xchg
addb
lds
int3
cwtl
or
test
popa
jg
add
adc
add
imul
pop
enter
pusha
add
stos
ret
sub
hlt
sbb
aad
mov
test
xchg
shl
jnp
or
xchg
jle
inc
add
scas
aad
into
jne
mov
outsl
iret
mov
jns
dec
je
mov
imul
aam
add
jo
jbe
stc
add
aad
bound
bound
lahf
mov
daa
mov
aaa
dec
pop
mov
mov
lods
mov
push
pop
dec
cltd
mov
mov
pushf
test
out
inc
xor
stc
popa
and
sbb
mov
sbb
jg
or
sub
sbb
cmpsb
mov
jl
dec
mov
pop
lds
pop
sahf
fistps
push
insl
addb
lret
xlat
pop
xchg
pop
mov
dec
repnz
fsub
xchg
addr16
sbb
add
clc
or
xchg
imul
sar
lea
add
add
push
add
adc
insb
aad
or
inc
add
rorl
outsl
lret
addr16
call
and
pusha
add
mov
popf
frstor
es
xlat
in
aad
ret
ds
test
sarl
add
or
inc
add
or
sti
push
out
add
dec
test
or
aam
fidivl
adc
bound
loop
fwait
int
add
sbb
addb
dec
ret
fstl
filds
add
push
sbb
or
mov
popf
xchg
push
add
repnz
push
sarl
inc
pop
xchg
sub
xlat
dec
pop
jg
mov
push
add
dec
rolb
add
add
xchg
mov
jb
mov
rolb
jl
add
outsb
jp
xor
mov
arpl
das
shrl
lret
lahf
inc
cmp
add
add
cmp
loope
rcrb
lock
bound
or
cltd
subl
call
lock
jge
xorl
push
cmp
inc
add
test
push
add
test
dec
in
mov
add
adc
push
sub
sub
or
add
dec
movsb
ror
mov
add
push
sti
add
inc
add
repz
add
outsl
mov
pop
loope
mov
sarb
push
sub
cmp
mov
push
inc
add
cmpsb
ds
fs
fidivl
imul
lods
sahf
popa
repnz
imul
addb
dec
addr16
rolb
mov
xchg
mov
mov
int
scas
mov
sbb
mov
mov
test
xchg
test
ds
jbe
notl
lahf
sub
add
sbb
adc
popa
or
push
pop
xchg
pop
jge
or
mov
sbb
mov
rolb
rorl
pop
cltd
mov
pop
pop
std
into
stos
mov
jmp
xor
xchg
in
bound
mov
dec
push
push
loopne
lock
gs
mov
inc
add
icebp
into
and
or
scas
test
push
push
pop
and
mov
add
lret
cmp
or
jecxz
stc
mov
jnp
mov
cmp
xchg
icebp
and
mov
lahf
fwait
cmc
ja
gs
add
xchg
in
add
outsb
mov
inc
add
add
dec
pop
cmp
cli
imul
mov
xor
pop
inc
add
xor
and
xchg
xchg
sahf
cmp
int
sbb
and
push
xor
mov
punpcklbw
bnd
int3
mov
imul
pop
cltd
out
daa
mov
inc
cltd
insl
aaa
fdivrl
inc
inc
imul
aad
popf
lcall
loope
cmp
jno
and
les
in
jmp
sti
jnp
mov
sub
sub
sbb
ja
mov
sub
push
add
dec
and
sub
add
rcrb
rcll
xor
xlat
ret
sbb
or
ret
xor
dec
pop
sbb
xor
fsubs
add
movb
std
outsl
loop
pop
pop
inc
cltd
lock
add
push
mov
movsb
dec
ds
bound
out
dec
sbb
add
lds
insb
and
jo
dec
xor
enter
lods
popa
jmp
push
or
dec
ret
add
inc
lods
inc
add
adc
stc
popf
insl
fs
popa
jg
push
into
push
add
scas
ljmp
decb
rclb
stc
stc
clc
jb
jg
loopne
stos
pushf
or
in
sub
adc
sahf
mov
xchg
xchg
xor
cmpsl
pop
push
push
push
mov
pushl
cltd
pop
or
sbb
outsb
xchg
mov
aaa
pusha
add
dec
xchg
pop
push
cmp
imul
wrmsr
pop
int
mov
xlat
sub
mov
xlat
push
ja
arpl
add
outsb
xor
inc
repnz
imul
loop
movb
mov
outsl
hlt
addr16
add
ret
push
lcall
enter
je
sub
adc
xchg
xlat
jp
loope
stos
sub
xor
mov
cmc
stos
or
add
ret
lcall
add
cwtl
mov
sub
inc
add
mov
insb
stos
pop
stos
push
xchg
stc
jmp
xchg
ja
add
std
popa
ljmp
cmc
int3
daa
or
sbb
mov
arpl
movsl
adc
cmp
lret
jl
jmp
add
add
mov
iret
scas
enter
pop
dec
cmpsl
cmp
loop
mov
add
out
movsb
jb
scas
pop
mov
addb
jnp
iretw
ss
mov
lcall
inc
push
test
leave
lds
xchg
pop
pop
or
hlt
adc
adc
jl
jnp
mov
in
xor
xor
sbb
sbb
leave
mov
xor
xchg
insl
lock
outsb
int
dec
mov
or
inc
ljmp
mov
add
rcrl
add
push
lret
in
add
icebp
cld
pop
aas
add
jecxz
add
scas
lods
mov
add
jb
popa
into
iret
mov
in
add
in
mov
sti
dec
and
mov
adc
loope
inc
add
push
or
xor
pop
fs
fs
xchg
xchg
loop
shlb
dec
sub
push
xor
test
fcoml
outsb
mov
pusha
add
xor
or
add
push
pop
test
dec
jp
jmp
jb
leave
into
or
push
dec
jns
jne
mov
pop
mov
mov
and
cmp
and
mov
sbb
push
movsl
adc
add
push
mov
push
add
js
xor
adc
and
push
cli
sub
scas
jle
inc
add
movsb
call
mov
pop
inc
add
fnstenv
pop
mov
jne
sbb
add
shl
add
leave
sub
push
cmp
adc
test
pop
gs
cltd
cmp
stos
or
xor
inc
add
addb
xchg
push
gs
sub
mov
aas
mov
pop
iret
mov
pop
jecxz
and
jnp
push
mov
xchg
js
loopne
lret
in
xor
loop
stos
inc
and
cmp
sbb
mov
adc
aas
ret
adc
cli
jnp
or
push
add
sbb
or
addb
xor
or
adc
mov
or
mov
sbb
mov
xor
xchg
imul
addb
fwait
das
xchg
out
xlat
in
ds
inc
pop
cmp
cmp
aam
addr16
and
pop
push
add
mov
js
leave
dec
jno
mov
aas
jge
mov
push
and
test
xchg
sub
stos
push
fistl
add
insb
imul
sub
xorl
scas
shlb
cld
xor
add
into
mov
clc
imull
xchg
adc
add
sahf
mov
std
addb
cmp
ficoms
je
fs
dec
adc
into
jmp
sbb
and
das
cmp
and
dec
pop
xchg
in
sub
mov
andl
mov
mov
push
into
mov
pop
mov
aam
sbbl
je
xchg
cmp
dec
xor
inc
rolb
rcll
jl
push
fisttpll
dec
pushf
ficoml
iret
loopne
jae
std
cmp
cmp
cmp
mov
mov
fdivs
add
push
xchg
ret
add
scas
push
sbb
add
mov
lret
xor
pusha
add
loope
outsb
mov
inc
push
inc
add
inc
es
outsb
xlat
mov
push
adc
jmp
jns
insl
mov
add
sub
sbb
imul
cltd
out
pop
xor
cmc
jo
dec
roll
popf
leave
outsb
xor
xor
out
push
xor
xchg
xor
mov
shl
push
shrb
and
int
fucomi
jo
mov
cwtl
fld
add
add
roll
jno
add
in
push
cmpsl
and
sti
lods
cli
pop
lret
out
mov
aam
push
or
xor
aaa
lock
and
dec
popa
pop
cmp
call
inc
add
insl
repnz
mov
stc
sbbl
jo
add
add
fstpl
outsl
aad
addb
add
insb
movb
push
add
add
imul
jb
aas
sub
or
test
sbbl
push
add
jge
mov
mov
lock
adc
sahf
mov
add
nop
out
std
addb
rcrl
sti
xchg
or
movb
sub
mov
or
xchg
lea
xchg
add
inc
icebp
out
xchg
repz
addl
push
cmp
stc
std
rorb
mov
xchg
jmp
jmp
add
xor
addb
xlat
xor
xchg
scas
clc
nop
test
push
fnstsw
add
imul
add
add
sub
sub
adc
push
dec
jnp
setnp
sbb
lock
add
loop
ljmp
idiv
lcall
jne
aas
mov
cli
loop
add
fmuls
and
aad
subps
mov
rorl
pop
mov
insb
int
addb
in
mov
jo
adc
pop
mov
ljmp
add
shl
out
and
jne
dec
inc
add
xchg
lds
pop
cltd
adc
push
sub
cmp
push
stos
xorl
inc
add
push
mov
sbb
add
jle
add
sbb
mov
lods
jne
sub
pushf
aaa
inc
addb
push
xchg
aaa
or
pop
mov
repnz
lahf
hlt
mov
mov
mov
icebp
insb
cmpsl
test
movsb
pop
dec
xchg
mov
xlat
pop
adc
insl
lock
je
mov
pop
adc
add
mov
and
fcompl
out
cmpsb
cmp
dec
xor
ret
repz
test
add
test
fnstenv
mov
fwait
jp
jbe
add
mov
push
add
jge
lahf
cmpsl
mov
add
into
cwtl
inc
add
pop
or
bound
cmp
sahf
stos
sbb
outsl
int
add
add
add
in
sbb
sub
js
add
test
fsubl
or
add
sbb
jecxz
lret
xchg
cmpl
mov
mov
icebp
iret
mov
iret
repz
adc
inc
shll
test
out
ror
inc
add
mov
and
push
jo
push
repnz
aas
add
leave
fwait
jmp
call
add
add
fbld
or
mov
add
inc
xlat
scas
clc
roll
pushf
faddp
add
add
test
scas
ret
inc
push
xchg
mov
test
add
push
mov
inc
add
xchg
scas
push
cmpl
popa
dec
repnz
or
lea
out
jae
or
aad
sbb
push
xchg
cmp
cmp
pop
mov
jae
movb
icebp
push
push
mov
iret
std
inc
add
dec
or
jge
in
and
pop
mov
and
es
or
sbb
mov
cmc
cmp
or
iret
pushf
and
or
mov
into
or
add
mov
or
or
push
dec
and
xlat
and
add
dec
stos
ret
add
push
push
adc
cmp
sub
and
add
jg
add
pusha
add
ljmp
push
sub
jb
dec
mov
mov
adc
jnp
filds
push
imul
addr16
dec
cld
rcrb
insb
push
test
aaa
inc
cmp
sarb
into
jbe
mov
lods
xlat
aas
push
pop
adc
fnsave
inc
add
mov
xor
stos
add
inc
or
call
lcall
pop
dec
neg
push
mov
inc
enter
and
inc
add
sub
cmp
dec
repnz
inc
icebp
fldl
enter
add
add
repz
adc
sbb
pop
add
ja
add
iret
outsl
xor
test
or
leave
pop
int3
dec
ret
xchg
les
or
and
fisubrs
aam
in
sub
fs
xchg
xor
add
out
outsl
fwait
jl
lock
xchg
pop
idiv
add
scas
pop
sahf
push
xchg
xor
repnz
push
jp
push
sbb
add
push
adc
xchg
aad
std
mov
dec
mov
pop
mov
nop
push
add
fisttpl
or
icebp
scas
loope
adc
cli
out
icebp
push
int
or
rolb
xor
sbb
test
cmp
ds
push
push
mov
pop
add
je
dec
int
add
jp
std
popf
fidivrl
add
fdivl
jnp
clc
sbb
cmp
mov
dec
add
xlat
push
or
pop
sbbl
aaa
mov
dec
cld
or
mov
dec
add
je
mov
xchg
enter
xchg
inc
add
xchg
xlat
xchg
jg
xchg
add
jmp
jo
repnz
lods
mov
push
sub
xchg
movsb
movsl
mov
sbb
add
pop
or
xor
scas
hlt
testb
push
push
adc
sub
mov
add
and
sub
add
rolb
add
jge
add
xor
mov
mov
cmp
add
sub
sarb
filds
iret
int
adc
mov
or
out
or
ss
lds
rorl
iret
jo
xlat
sbb
or
pop
test
cmp
cld
lret
mov
sbb
lock
sub
pop
rcl
repz
mov
add
lods
jb
mov
add
out
loopne
shlb
rolb
add
aam
sub
adc
cmp
clc
xor
mov
xor
aad
jecxz,pt
jl
inc
mov
adc
jge
or
pop
cmp
jb
dec
inc
add
add
fstpt
incb
pop
pop
adc
movsb
jge
add
pop
inc
add
add
mov
xchg
push
xor
mov
sub
add
dec
iret
adc
mull
cwtl
hlt
sbb
pop
movsb
into
fdivp
clc
cltd
and
push
lds
insb
loope
mov
push
pop
nop
lret
sub
lods
inc
testl
pop
jle
and
aaa
les
rclb
inc
inc
add
jbe
lret
xor
ds
and
xor
pop
xor
push
ficoms
fwait
lock
dec
push
int
test
cmp
adc
mov
idivb
sub
xor
cmp
pop
adc
jno
adc
jg
or
sub
arpl
cmp
mov
mov
add
add
js
fwait
mov
sub
pop
jno
mov
lods
test
stos
ret
aas
mov
mov
dec
shll
jg
cs
xchg
shll
and
sub
adc
cmp
push
scas
divb
mov
daa
mov
inc
add
popa
xor
xchg
mov
add
lods
add
fs
or
add
inc
test
inc
add
mov
xchg
outsl
push
mov
sub
fs
adc
repnz
ret
mov
pop
mov
aas
ljmp
sub
mov
out
pop
cs
sbb
xchg
jnp
popf
sub
adc
sbb
sbb
aad
sbb
ljmp
add
shlb
or
es
add
jmp
js
popf
and
pop
dec
les
ficoms
cmpl
xlat
lds
lds
push
daa
popf
out
and
cs
jl
stos
pop
mov
std
ds
cmovb
xchg
xchg
push
test
ret
aaa
jnp
mov
add
mov
ficoml
jb
mov
ljmp
imul
data16
mov
and
test
dec
xchg
ds
dec
das
sti
sbb
shll
loopne
cmpsl
int
push
sti
xchg
add
mov
je
adc
push
adc
mov
xor
push
bound
cmp
loope
xor
push
sbb
stos
mov
rorl
clc
cmp
and
mov
ffreep
mov
jns
mov
add
xor
ret
movsl
mov
mov
inc
stos
pop
xchg
adc
or
or
das
add
mov
mov
mov
dec
jle
inc
pop
push
add
adc
fs
sahf
std
inc
daa
and
pop
notb
add
add
loope
add
test
jecxz
cmc
push
les
std
ret
lock
pop
sbb
inc
add
cltd
ds
and
dec
mov
jb
shrl
clc
int3
adc
pop
lret
adc
add
into
mov
mov
out
push
in
xchg
int3
inc
mov
pushf
nop
aas
dec
mov
mull
lock
dec
xor
inc
add
movsl
imul
inc
pop
jns
jecxz
jl
cli
test
mov
das
mov
scas
iret
add
idivl
shrb
in
shlb
xchg
pop
push
aad
adc
dec
ds
leave
ret
inc
and
xchg
insl
loopne
jge
jle
clc
scas
jno
sti
cmp
cmp
mov
ja
add
in
or
mull
outsl
xor
movsb
out
add
adc
call
aas
inc
add
sarl
mov
sbb
adc
add
and
data16
dec
pop
insb
jo
jnp
fcmovnu
out
loop
mov
repnz
and
rorw
mov
push
and
xor
aam
pop
mov
loop
add
push
jnp
std
push
jae
mov
inc
add
or
mov
add
cmpsb
scas
push
dec
sub
cmp
mov
enter
cmp
xor
add
and
insl
push
sub
sbb
xchg
mov
or
mov
xchg
aaa
cmpsl
lods
sub
add
xor
sub
cwtl
sbb
inc
mov
idivb
int3
ret
movsb
xchg
bound
popf
and
add
out
mov
add
xchg
shll
loopne
add
push
jg
inc
mov
add
xchg
aad
push
or
cli
ds
inc
add
out
pop
addb
add
add
xchg
mov
push
xchg
push
sbb
push
popa
mov
mov
mov
mov
xor
adc
mov
clc
pop
fnsave
jge
jmp
jge
movb
pop
inc
insb
in
xchg
jmp
add
or
ds
pop
jle
lea
sbb
push
cltd
lods
dec
sbbl
dec
sti
mov
pop
movsl
xlat
hlt
sar
arpl
add
pop
addb
jae
xchg
cli
xchg
and
nop
out
fadds
xchg
mov
movb
jmp
sti
rolb
adc
dec
fxtract
adc
add
pop
das
sbb
shrl
sbb
loope
pop
xor
ds
mov
imul
fstl
call
dec
adc
pop
int3
push
and
add
or
into
mov
sub
push
test
jg
jp
mov
xchg
xchg
push
add
loope
sub
jecxz
jp
lret
xchg
dec
mov
test
xlat
mov
shlb
int
mov
jp
sbb
addr16
mov
or
pop
pushf
fwait
addb
fs
popl
jp
fstpl
add
adc
fs
out
add
in
dec
aam
mov
cmpsl
mov
mov
xchg
testb
dec
int3
mov
add
add
add
lds
sub
outsl
jle
or
imul
xor
push
je
push
sbb
packssdw
add
add
xchg
add
adc
dec
sub
add
les
int3
fstpt
mov
out
popa
cmp
lret
push
jne
scas
sub
inc
add
sub
jmp
or
and
shll
rcrl
popf
das
and
call
pop
sub
cmp
xor
push
jl
sub
jno
add
jle
inc
and
inc
add
clc
xchg
clc
adc
mov
fstps
add
xchg
punpckhbw
lods
sbb
mov
cmp
enter
inc
add
pop
rolb
or
push
mov
aad
add
lcall
adc
or
jge
test
rolb
addb
fwait
xor
xchg
and
jbe
add
or
push
xchg
and
push
dec
jp
jns
adc
imul
push
gs
iret
mov
ljmp
test
scas
xor
movsl
cmc
daa
fnstenv
add
dec
stos
in
in
addl
add
pop
cmp
lret
in
jmp
sbb
inc
push
inc
add
rorl
shrb
loop
xchg
sub
mov
add
add
bnd
pushf
das
outsb
fsubp
int3
mov
or
xchg
insl
cld
or
add
pop
and
dec
push
add
and
jne
nop
aaa
and
outsb
pop
or
push
inc
add
mov
mov
mov
scas
xchg
push
jp
push
cmp
cmp
cmp
adc
fwait
imul
cld
jnp
fldz
fsubrs
lret
sbb
repnz
pop
dec
dec
xor
mov
jp
in
lahf
loope
ret
pop
jo
lret
aam
jecxz
mov
rolb
push
xchg
mov
repz
loopne
pop
cld
ret
ret
jns
jmp
adc
sahf
sahf
add
jbe
xchg
mov
fildll
ficomps
movsl
xchg
outsb
ljmp
jbe
nop
fildll
sbb
push
adc
mov
fnsave
je
decb
lods
cmp
inc
movb
inc
add
push
lock
ret
or
xchg
or
mov
dec
or
sti
xor
and
mov
push
jae
dec
and
cwtl
cmovns
mov
punpckhdq
lds
inc
mov
dec
mov
pop
loop
or
push
cmp
push
xor
jl
arpl
shr
cli
inc
add
test
data16
lods
fisttps
xchg
adc
sarl
je
scas
mov
sbb
adc
setns
sti
mov
cs
sahf
std
jnp
xchg
out
pop
xor
add
mov
hlt
and
icebp
out
fnstenv
sbb
cmpsb
insl
cmp
rcrl
addb
insb
pop
arpl
rcrl
sbb
inc
add
mov
add
out
sbb
add
push
jb
sarl
idivb
mov
push
push
cmp
add
repz
lds
add
shl
addb
in
movsb
mov
jle
mov
mov
bound
adc
sub
aam
push
iret
enter
add
mov
into
mov
insl
xchg
inc
fsubs
sbb
stc
xor
add
add
stos
fisttpll
fistps
xchg
shr
mov
xor
mov
cli
inc
xor
inc
int
into
pop
push
cmpsl
mov
mov
xchg
mov
jb
hlt
sbb
je
jl
add
sub
mov
ds
adc
ds
adc
add
lds
or
loope
sti
mov
inc
add
mov
push
mov
xchg
mov
imul
lret
or
jnp
shrb
mov
sub
rcl
mov
dec
sub
test
fisubrs
xchg
das
push
or
cmc
repz
pop
and
sti
mov
loop
fldcw
inc
add
cli
rolb
xchg
imul
test
pop
adc
dec
test
cmp
mov
cmp
inc
add
mov
mov
rorl
push
fwait
stc
or
mov
mov
inc
in
shlb
adc
ss
loopne
pop
outsl
shl
xor
ret
jo
mov
hlt
insb
dec
push
jae
pop
adc
cmc
push
std
nop
icebp
pusha
add
sub
cmp
in
add
xchg
add
idiv
mov
into
stc
push
fildl
int3
enter
cmp
jo
addr16
ljmp
cwtl
adc
add
flds
mov
cmp
outsl
dec
mov
mov
adc
icebp
mov
jle
data16
call
addb
sbbl
es
sub
mov
mov
inc
sti
sub
add
hlt
mov
stos
in
divb
xchg
pop
inc
add
mov
outsl
pop
in
loope
sub
sub
add
cmc
pop
and
add
xchg
icebp
rcl
mov
and
les
test
mov
push
in
push
lds
push
add
mov
popf
les
mov
sub
add
js
cmp
aad
add
pop
in
add
and
stos
notl
insl
icebp
mov
call
lods
fildll
lea
lahf
jmp
inc
add
xchg
mov
out
lods
inc
pop
mov
cmpsl
adc
test
test
cwtl
and
mov
jmp
int
add
add
out
pop
mov
mov
shll
sahf
popa
push
mov
inc
mov
cmp
addb
insb
xor
in
movsl
mov
stos
lret
add
push
rcr
aad
insb
pop
pop
dec
test
in
xor
and
sub
ja
repnz
dec
mov
jl
add
add
arpl
push
cmp
mov
pop
push
add
or
dec
push
test
xchg
jne
xor
mov
mov
fisttps
xchg
push
mov
inc
add
push
insl
aaa
clc
aad
aaa
cmpsb
outsl
xor
out
xchg
loope
sarb
ja
mov
mov
add
inc
add
pop
or
jns
pop
cmp
dec
pop
push
stos
jbe
shrl
dec
xchg
sbb
out
inc
add
jmp
pop
insl
cwtl
lret
hlt
int3
les
fwait
jno
dec
push
repnz
mov
in
push
sbb
iret
mov
pop
cmpsl
cmp
and
inc
test
fisttpl
add
mov
aad
hlt
dec
sbb
clc
dec
js
lcall
mov
push
and
mov
jp
xor
push
lock
ds
pusha
add
add
cld
fwait
pop
in
icebp
in
jle
add
add
pop
lock
stos
in
mov
aaa
popf
mov
stc
mov
mov
mov
pop
adc
lahf
out
out
mov
movb
mov
mov
stos
popl
push
into
or
cmp
test
mov
add
cmp
mov
stos
xchg
out
int3
xchg
ds
call
rol
add
paddusb
sbb
fcoms
movb
mov
add
dec
aad
jg
add
addl
cmp
in
dec
ljmp
aad
div
call
out
lret
sbb
sbb
add
lret
jbe
lret
and
xor
bound
jbe
loope
lret
icebp
out
cmpsb
stc
aaa
arpl
adc
sti
pop
add
outsl
jp
inc
cli
or
jae
add
add
lahf
jmp
mov
add
xor
cwtl
mov
ds
add
add
push
jecxz
add
fs
mov
adc
fs
fidivl
sbb
jmp
xor
and
int3
dec
jno
add
pop
ficoms
xor
jnp
stos
add
add
sbb
inc
add
add
add
popa
in
ret
addb
push
les
mov
js
pop
stos
not
cmp
and
add
sbb
cs
pop
xlat
fs
add
mov
std
movsl
test
ja
repz
jg
xlat
add
daa
js
movsb
jmp
stos
iret
fwait
enter
movsl
imul
add
adc
sub
push
cmp
mov
rolb
lods
mov
mov
push
int3
daa
ficoms
cmpsb
mov
pop
addr16
test
pop
clc
imul
pop
dec
aas
in
shrl
xor
add
xchg
add
hlt
add
or
das
lcall
addb
jmp
js
mov
pop
and
in
xor
jns
add
cwtl
sbb
jns
push
popf
push
push
add
out
pop
inc
add
mov
xorl
xor
addr16
add
pushl
mov
cmp
push
movsb
sbb
mov
dec
cwtl
inc
fimull
mov
jb
add
pop
xrelease
dec
out
loopne
add
fidivl
movsb
addb
cltd
bound
pop
push
sbb
dec
add
pop
ja
pop
mov
stc
mov
jp
inc
cwtl
ret
lea
sbb
aas
dec
jbe
popf
hlt
or
and
dec
mov
movb
cli
cmp
mov
das
cli
pop
or
cli
sub
xor
sub
mov
js
push
inc
add
adc
or
pop
insl
mov
aad
lret
sbb
cmp
add
daa
cli
mov
mov
pusha
add
sbb
repnz
pop
jg
mov
adc
movsl
xchg
jb
mov
enter
add
mov
lahf
pop
aaa
sub
sbb
jb
sub
lods
and
jl
pop
lcall
stc
inc
mov
ds
adc
pusha
add
fwait
sbb
loope
stc
mov
push
pop
dec
xor
lahf
sbb
jne
adc
add
clc
jno
rcrb
loop
sub
inc
add
pop
or
call
push
add
mov
pop
addl
pop
add
gs
sub
insb
mov
mov
fcomp
cltd
xor
lock
dec
out
fcmovbe
jbe
add
push
movsl
sti
fstpl
fcompl
pop
sahf
movb
add
int
jbe
xlat
adc
xchg
mov
add
add
mov
fucom
adc
pop
push
cmp
dec
in
and
jns
movsl
subl
lea
shrl
enter
add
in
out
push
xor
dec
insl
out
cmc
or
ficoml
scas
fbstp
add
rclb
add
rolb
addl
mov
scas
jle
cmp
add
stos
adc
adc
aaa
xchg
mov
je
sbb
xor
pop
pop
xor
push
add
mov
pop
icebp
clc
movb
adc
out
mov
add
dec
ds
aad
cmp
mov
ljmp
loopne
mov
cmpsl
sbb
gs
add
xchg
sbb
mov
xchg
mov
leave
inc
add
sbb
add
out
cmc
aad
sti
xor
add
xchg
sbb
mov
andnps
rolb
add
lahf
lcall
push
xor
add
and
adc
push
push
add
add
push
sbb
imul
mov
mov
adc
shl
lock
aad
dec
sub
pushf
add
dec
jnp
add
inc
add
push
adc
or
data16
testb
add
sub
pop
leave
ja
xchg
cmpsb
rcrl
mov
daa
das
lret
pushf
test
pop
push
xlat
mov
dec
stos
pop
and
lcall
cmp
or
test
enter
or
adc
lahf
cmpsb
mov
mov
mov
mov
mov
mov
pusha
add
and
lahf
add
clc
add
mov
xchg
or
sti
int3
mov
and
mov
mov
aam
jmp
mov
addb
add
add
mov
mov
imul
fwait
std
frstor
inc
add
mov
popf
mov
mov
push
cmpsl
sub
jno
aaa
xor
in
push
scas
lcall
out
stc
cmpsl
push
add
and
fdivrp
fucom
fisubs
jmp
sub
es
jae
jno
push
lea
in
fidivs
in
push
add
jp
int3
xchg
jbe
addb
sub
mov
add
movsb
adc
imul
fs
sbb
sbb
int3
leave
mov
inc
add
addr16
mov
sbb
pop
push
adc
cmp
cld
pop
dec
ljmp
loope
jg
fidivrl
movsb
mov
aam
xchg
popa
fbld
pop
dec
push
imul
jmp
fiaddl
xchg
jp,pn
or
add
fnsave
out
test
icebp
sti
fnstsw
mov
jne
aaa
sbb
insl
or
add
or
jnp
inc
repz
repnz
jl
ja
arpl
inc
add
aad
mov
sti
pop
scas
mov
or
adc
push
divl
bound
jns
or
mov
pop
push
add
jno
dec
mov
loopne
ds
and
push
mov
push
cmp
sub
push
dec
stc
addb
dec
cli
stos
aam
lods
arpl
jmp
mov
add
stc
and
pop
fadd
add
jbe
xor
repz
std
addl
push
add
in
call
sub
mov
sub
test
add
mov
popf
mov
fistps
mov
xor
jmp
xor
insb
cltd
lret
jno
push
mov
dec
xor
stc
sbb
push
mov
mov
add
adc
or
jb
and
mov
add
ret
xchg
sub
movsb
jo,pn
inc
add
out
adc
leave
mov
xor
add
xor
cs
add
jle
dec
cwtl
or
ret
pusha
add
inc
add
js
stos
icebp
dec
imul
sub
and
mov
mov
inc
add
je
imul
xor
sub
popa
or
out
out
cmp
lods
test
pop
adc
mov
mov
mov
gs
movb
lea
adc
xchg
scas
cwtl
incb
mov
ss
add
bound
push
lret
inc
adc
sub
cmpsl
cmp
in
rcrl
mov
outsl
push
les
xchg
sahf
push
int3
movsb
inc
add
fucomip
mov
pop
mov
and
repnz
push
rorb
mov
pop
shrl
sbb
inc
xor
sub
add
hlt
xchg
or
xchg
pop
adc
dec
imul
jle
loopne
bound
inc
out
sbb
hlt
or
jg
test
ficoml
pop
dec
leave
les
fidivs
lds
inc
in
les
pop
inc
arpl
clc
or
mov
push
jmp
push
add
cmpsl
bound
mov
and
xchg
mov
add
push
mov
dec
mov
loope
xor
xchg
xor
add
clc
pushf
divb
adc
jne
mov
add
rcl
lahf
jae
fcoms
pop
jns
add
addb
rcll
push
fsts
sbb
add
out
add
int
xchg
pop
sub
jae
add
push
ficoml
gs
mov
pop
jo
mov
aam
add
pop
xchg
call
mov
aas
or
pop
daa
lock
pop
jns
rolb
js
lcall
lcall
rclb
jo
sbb
jns
mov
xor
jle
jbe
add
popa
dec
mov
push
cmp
sbb
push
xchg
lcall
call
pop
dec
movsb
cmpsl
stos
cltd
mov
sbb
jg
jae
dec
jge
mov
add
lods
adc
movsb
rolb
int3
rcrb
and
mov
or
pop
inc
sbb
call
loope
hlt
or
test
divl
xchg
inc
mov
mov
jo
add
shrb
mov
add
pop
je
fidivrs
je
pop
xchg
roll
call
mov
add
push
mov
je
arpl
add
xor
fnstsw
jl
xor
out
ret
out
pop
bound
rolb
fsubrs
dec
mov
psubw
xchg
lret
sub
jbe
add
nop
cmp
cmc
es
insl
jnp
add
cmp
movb
push
inc
in
inc
mov
movsl
lret
stos
pop
mov
sbb
mov
aaa
jmp
int3
mov
loop
test
fadds
stc
test
push
mov
dec
cmp
xchg
out
out
loop
movsb
sbb
ljmp
add
movb
sbb
mov
out
cmp
sub
push
jg
hlt
scas
pop
xchg
push
and
repz
adc
add
mov
loopne
mov
cmpsl
mov
add
jbe
out
ljmp
and
cmp
jmp
mov
movsl
ljmp
pop
push
stos
mov
push
sahf
lcall
ss
xchg
xchg
push
dec
pop
pop
inc
add
pop
outsb
xor
call
imul
push
and
xchg
rcrl
mov
pushf
outsb
leave
cld
dec
mov
add
in
clc
cltd
add
icebp
loope
jne
fmuls
xor
push
fbld
xor
sub
sbb
xchg
sub
xor
mov
mov
adc
data16
jp
enter
push
in
inc
mov
dec
push
int
aad
das
lahf
popf
dec
and
push
jbe
push
fs
int3
daa
fiaddl
lock
cmp
xor
aad
sahf
outsb
in
stc
fildl
gs
add
or
cmp
ds
push
popf
push
testb
sub
mov
imulb
cmp
pop
pop
sub
dec
iret
cwtl
dec
jecxz
loopne
add
add
in
xchg
dec
dec
lods
addb
or
xchg
cmpsl
mov
clc
jbe
and
gs
insl
movsb
imul
rolb
pushf
push
add
addr16
stc
jle
scas
pushf
add
sub
jecxz
or
aad
add
negb
add
jns
or
aad
das
les
negb
adc
sub
add
js
jl
add
ja
das
inc
add
imul
add
adc
xorl
and
pop
push
mov
add
clc
loopne
nop
data16
outsl
add
ret
std
push
cmp
or
in
clc
push
inc
lcall
xchg
aas
sub
hlt
in
pop
add
test
lahf
rcl
inc
sub
or
lcall
ficoml
repnz
cli
jg
rolb
pop
push
ret
outsl
icebp
or
sub
xor
repz
add
mov
mov
fs
mov
mov
scas
push
mov
push
or
mov
mov
add
mov
cmovle
jnp
fwait
mov
push
loope
mov
and
add
fstpt
inc
std
test
cli
aad
dec
ret
insl
dec
mov
add
dec
cmp
mov
jbe
in
push
imull
push
cwtl
push
dec
and
inc
pop
inc
cmp
push
pop
lret
xchg
jecxz
add
add
ljmp
addr16
iret
into
mov
scas
imul
lahf
call
add
filds
add
mov
add
push
repnz
adc
mov
inc
add
roll
add
xlat
out
cmp
pop
mov
xor
ds
add
je
xchg
inc
or
push
jae
jle
inc
add
outsb
movb
mov
cld
pop
ja
or
fisubl
sbb
sub
sub
mov
sbb
mov
test
sbb
xor
dec
lahf
stos
jns
xor
or
test
mov
inc
mov
testl
add
add
test
cmp
lds
push
ror
sti
test
mov
inc
add
add
or
cmp
add
cmp
jge
adc
sub
jge
xor
jno
add
nop
push
jmp
xchg
dec
imul
es
ret
lret
sti
dec
filds
sub
pusha
add
rcrl
into
or
jle
enter
jns
adc
push
rcll
xchg
mov
mov
mov
aad
and
fwait
test
in
add
xchg
mov
add
mov
in
xor
mov
lret
rorl
add
add
mov
sti
repz
push
insb
pop
add
into
xor
lret
mov
sbb
dec
xchg
xchg
addb
xor
sbb
lret
ret
jmp
and
sub
jns
pop
rcr
mov
stos
scas
rorb
cli
xchg
mov
shll
pop
movsl
icebp
ret
stc
sub
das
daa
daa
pop
stos
outsl
aad
cld
mov
xor
jp
inc
add
es
loopne
add
hlt
or
cmp
sub
lock
xchg
loop
add
and
lcall
add
push
xor
loopne
push
mov
sbb
lcall
pop
and
clc
or
jle
jo
rol
sbb
mov
insl
fildll
dec
stc
les
mov
or
pop
faddl
add
cmpsl
sti
das
fwait
lret
pop
ret
sub
push
mov
inc
mov
es
inc
add
jge
lcall
jmp
shll
pop
out
jae
cmp
mov
push
aad
ljmp
push
lret
sbb
into
loop
pop
popa
inc
incl
xor
lods
xor
idiv
scas
add
jns
popf
jl
cmp
sbb
and
int
repz
out
mov
imul
push
pop
add
sti
inc
add
pop
cmp
add
ljmp
dec
inc
add
add
cld
mov
fucomi
mov
push
je
add
add
mov
pop
fdivrp
sbb
inc
shll
push
leave
xchg
pop
cmpsw
daa
fcomi
add
nop
cmpsl
fwait
cld
imul
mov
dec
add
adc
cwtl
shl
push
dec
rcrl
test
cmp
movb
inc
adc
outsl
jno
jo
or
subl
jle
inc
outsb
add
hlt
cmp
lock
hlt
xor
push
decb
sbb
js
stos
leave
and
fists
aas
jle
sub
jge
push
in
mov
arpl
mov
int3
jecxz,pt
or
jp
addb
sbb
xor
add
xchg
xor
mov
fadds
fwait
loop
repz
movsb
cmp
pop
xchg
sbb
or
xchg
scas
cltd
cmp
jl
jmp
add
hlt
sub
inc
repz
scas
mov
add
enter
roll
popa
imul
lret
pop
inc
add
outsl
or
xchg
test
jo
je
sbb
jbe
notl
or
xorl
pusha
add
xchg
aas
mov
les
sbb
mov
sub
sbbl
add
add
icebp
in
or
add
mov
mov
jg
insl
xchg
clc
push
or
test
ds
cmp
pop
cltd
pop
cmp
add
push
inc
negb
mov
mov
or
pushf
fimull
inc
pushf
adc
fisubl
add
cltd
shl
scas
xor
inc
stos
mov
test
scas
out
sub
call
xor
sub
and
in
jb
and
lret
cs
add
sarb
sub
mov
mov
stos
movsb
sub
and
mov
jo
scas
dec
pushf
nop
int
pop
loopne
clc
mov
mov
mov
ret
cmp
pop
xchg
test
mov
test
arpl
repnz
dec
adc
jge
add
push
pop
adc
cwtl
ja
fcmovu
mov
add
repz
rolb
and
inc
add
mov
inc
int3
add
stos
mov
enter
push
cli
mov
aas
mov
add
sub
push
sub
jo
or
dec
insl
das
out
cwtl
je
push
add
dec
jp
loope
jnp
pushf
fdivrs
add
sub
rolb
out
xchg
sub
mov
stos
jecxz
xchg
pop
mov
aaa
int3
add
pop
into
jns
inc
add
in
sti
sub
lahf
stos
jns
add
orl
fsts
add
lods
ja
sub
and
jnp
roll
pop
and
pop
xor
movsl
push
push
pusha
add
in
in
fistl
inc
pusha
add
inc
sbb
mov
gs
jl
mov
and
pop
push
test
jmp
add
je
add
add
lods
push
aas
loop
inc
add
rolb
pop
add
add
sar
stos
push
add
cmc
and
cmpsb
jb
adc
popf
add
aaa
adc
mov
fisubs
mov
out
dec
enter
or
inc
add
xchg
xor
into
rclb
in
pop
movsl
jnp
mov
jno
loop
inc
add
fcomi
cmp
bound
pushf
dec
ss
dec
lock
push
cld
push
sbb
movsl
sbb
xchg
dec
inc
add
loop
mov
es
adc
adc
mov
stos
dec
mov
pusha
add
sbb
mov
imulb
add
mov
jp
dec
mov
adc
mov
mov
adc
add
rclb
or
popa
aaa
jl
mov
gs
lock
mov
xchg
das
iret
dec
add
scas
out
jnp
mov
inc
xor
push
sub
icebp
pop
adc
loope
cmc
into
mov
xor
in
mov
out
jecxz
add
lds
adc
add
fstl
sbb
inc
add
jo
dec
cmp
dec
ds
add
push
jo
outsb
sub
rcrb
inc
add
xor
xor
push
inc
mov
loopne
cwtl
or
cmp
aaa
loop
aam
cmpsl
lcall
jo
add
add
mov
add
jo
sbb
mov
cmpsl
movsb
scas
mov
popf
mov
jmp
add
sub
add
xchg
jno
xor
or
xchg
mov
call
add
and
jb
roll
push
cs
ja
pop
jecxz
inc
cltd
stc
cld
dec
es
pushl
popa
jno
out
mov
mov
or
aam
or
jns
add
fiadds
cmp
roll
out
adc
mov
pop
xchg
insb
int
call
add
int3
inc
fwait
shll
fdivr
xchg
and
sub
add
push
dec
pop
inc
add
fcoml
cmp
adc
mov
and
cltd
mov
cmp
jnp
adc
stc
xchg
popa
xchg
stos
cld
ror
adc
and
dec
xor
jo
arpl
adc
in
popa
enter
mov
mov
sbb
mov
jle
stos
lcall
push
jle
fcoml
adc
enter
leave
sahf
scas
fiaddl
ss
mov
shlb
test
fidivs
scas
stos
aas
mov
decl
fidivl
adc
fisttpll
lea
mov
lds
add
jge
pushf
lret
out
popa
xchg
test
cmp
mov
dec
sub
cld
dec
mov
mov
xor
jne
pop
sbb
fnstenv
or
add
inc
add
pushf
xor
add
cmc
inc
adc
add
imul
add
xchg
rolb
xor
rolb
mov
or
rolb
push
push
mov
out
ds
ljmp
dec
gs
inc
add
and
pop
xchg
push
imul
adc
out
add
addr16
sub
int3
mov
pop
push
xchg
add
add
outsl
rcl
lods
or
clc
movsl
outsb
and
add
movb
jo
out
mov
add
ja
add
ss
divb
loopne
mov
adc
xor
or
int3
inc
add
call
xchg
movb
lcall
les
out
adc
sub
lahf
and
movsb
inc
stc
fwait
xor
adc
mov
pop
xchg
setno
std
pusha
add
add
imul
sbb
sbb
adc
ret
es
addr16
add
mov
jg
imul
or
pop
test
mov
add
add
outsb
jg
rcll
mov
inc
add
rolb
inc
add
dec
mul
nop
in
push
mov
lahf
add
sbb
fdivrs
inc
ljmp
add
shll
add
lods
sti
je
add
aaa
jp
in
push
dec
dec
jle
fildl
jp
jg
mov
scas
jge
bswap
jns
add
addb
or
pop
xchg
xor
ds
jg
mov
loopne
nop
mov
or
insb
ljmp
lods
pop
cld
inc
add
test
aas
dec
inc
pop
dec
lret
daa
fdivrs
adc
and
mov
add
sbb
dec
mov
ret
gs
mov
xchg
test
ljmp
pop
fcomp
cltd
adc
xor
jecxz
inc
dec
dec
dec
lods
outsb
cwtl
adc
add
xchg
out
sub
sar
mov
loop
in
jne
add
and
cs
ds
add
jo
es
in
shrl
cltd
push
rcll
loope
icebp
mov
inc
add
shl
dec
js
add
out
out
aam
dec
stc
cmp
sbb
xor
mov
add
or
iret
scas
shrl
add
shlb
push
push
cli
dec
clc
sbb
ja
jp
popa
stos
iret
js
mov
fisttps
xchg
in
mov
out
add
pop
test
push
pushf
xor
movsl
into
clc
arpl
rolb
add
fadd
lret
xor
push
shll
xor
sbb
add
xchg
pop
dec
stos
aaa
dec
pushf
pop
mov
cmp
mov
and
push
push
mov
add
pop
pop
add
push
repz
or
cs
loope
pop
add
lea
mov
sar
insb
cmp
add
outsl
dec
sbb
add
push
sub
clc
imul
pop
pop
or
adc
fwait
pop
out
fwait
and
repz
shlb
xlat
std
xor
or
add
dec
fcoms
pop
adc
cli
sub
enter
adc
push
jae
pushf
stos
outsb
mov
sub
insl
pop
cli
test
mov
dec
adcl
fs
fists
push
sahf
les
aaa
in
or
ret
add
arpl
cmpsl
jge
out
lea
cwtl
js
mov
cmpsl
mov
sbb
iret
jge
mov
loope
xor
push
add
daa
into
je
xor
leave
inc
add
push
ja
cmp
mov
lods
fnstsw
clc
sarb
inc
stos
out
stos
add
clc
fwait
inc
add
into
add
ds
add
ficompl
loopne
notb
cmc
lcall
in
pop
fcomps
add
xor
rcl
add
push
das
cwtl
pushf
outsb
notl
out
cli
loop
scas
push
sbb
in
gs
lock
stc
repnz
cs
test
cmp
icebp
push
aam
js
add
outsl
mov
cmp
pop
push
push
insb
dec
pop
add
sub
into
add
adc
add
xor
imul
and
push
hlt
ja
data16
mov
add
pop
mov
hlt
sar
addb
mov
adc
stc
cmp
and
cld
stos
mov
or
lods
shl
jmp
jnp
ljmp
pop
and
dec
mov
gs
add
rcrl
sub
xor
mov
mov
leave
inc
aaa
pop
add
rcr
push
mov
ljmp
push
inc
add
mov
pop
popa
cmp
xchg
aad
sbb
push
cmp
aad
add
jp
dec
les
cli
xchg
adc
sbb
add
sbb
imul
add
add
stc
rolb
int3
movsb
mov
mov
icebp
test
xchg
loope
and
data16
les
adc
xor
add
in
add
jecxz
mov
add
insl
in
fsubl
mov
push
inc
add
addr16
rolb
xor
lods
and
std
mov
das
scas
inc
add
add
lret
mov
and
xchg
mov
decb
add
or
push
xor
xlat
lret
sub
push
add
xor
call
loopne
mov
add
push
or
loop
repz
fwait
out
cmpsl
addr16
and
mov
daa
cmp
or
sbb
add
jmp
mov
sub
nop
push
add
stc
push
pop
or
add
mov
add
xchg
xor
sbb
and
lea
push
mulb
insl
aad
fisubl
lods
icebp
fimull
add
cmp
inc
add
insb
cwtl
divl
mov
mov
inc
add
push
addb
mov
xor
stc
imul
add
or
lcall
outsb
ret
stos
sub
pop
fs
add
add
cmc
cwtl
inc
add
fisubl
adc
stos
dec
inc
mov
mov
clc
inc
fldenv
lret
lcall
adc
add
or
or
mov
add
fs
rcrb
fsubrs
xor
push
sub
ficomps
mov
lods
repnz
cmp
mov
insl
inc
jnp
mov
push
bound
daa
scas
inc
hlt
sti
aaa
or
movsb
rcl
lret
pop
pop
fnstsw
add
popa
dec
pop
in
sub
rorl
xchg
bound
jne
mov
mov
call
mov
andl
sbb
jg
dec
sub
and
xor
sbb
insb
add
stos
std
popf
out
repnz
xor
add
mov
add
inc
test
inc
add
add
dec
in
fisttpll
jl
jne
push
cmp
sub
add
inc
add
and
loop
pushf
pmulhw
ret
inc
out
sbb
jmp
and
xchg
add
clc
addb
hlt
add
push
fsubrl
cwtl
rcrw
cmpsb
ljmp
sahf
shlb
movsb
sti
jp
mov
mov
pop
dec
cli
insl
dec
sub
pushf
call
mov
adc
mov
add
outsl
rolb
lds
ss
loopne
es
pop
test
jns
in
pop
faddl
mov
jnp
sub
cmp
enter
adc
xchg
icebp
pop
push
lret
mov
push
push
and
mov
add
addr16
add
mov
cli
mov
xchg
push
add
arpl
ret
dec
cmp
cmp
push
mov
ror
pop
xchg
pop
cltd
cwtl
pop
outsb
push
sub
rorl
and
xchg
pop
je
fwait
shld
mov
mov
mov
xchg
aaa
add
add
pushf
popa
pop
ficompl
dec
pop
or
pop
adc
add
mov
stc
push
jnp
xchg
cld
ds
pushf
stc
repnz
daa
gs
inc
add
pop
clc
sti
out
inc
add
add
ss
sbb
xor
or
hlt
xchg
jmp
lods
mov
hlt
out
clc
bound
rcll
pushl
lods
dec
shr
jb
decl
and
arpl
sub
test
int
add
push
adc
pushf
lods
or
add
in
cmp
out
shll
add
push
aam
or
inc
add
mov
pop
mov
popf
inc
incl
popf
jge
add
js
inc
add
insb
loope
pop
jl
inc
add
fisubrs
pop
aaa
std
adc
inc
sbb
jl
adc
xchg
mov
data16
mov
ja
inc
xchg
inc
scas
push
test
mov
mov
and
negb
add
je
and
call
fmuls
fisubs
add
sbb
lcall
pop
and
adc
xorl
movsb
or
add
faddl
add
out
sub
rolb
test
mov
adc
nop
cmp
dec
in
imul
mov
adc
aas
xor
or
int3
jns
arpl
sbb
inc
add
pop
mov
ret
out
fcoml
mov
cld
mov
insl
hlt
enter
add
arpl
inc
add
out
into
mov
outsl
push
mov
add
inc
add
mov
add
fcmovu
mov
test
lea
fwait
inc
fadd
inc
add
fstpt
xchg
das
sbb
add
ret
jbe
mov
inc
add
add
loopne
add
cld
out
jl
adc
daa
adc
enter
sbb
sahf
sub
fildll
dec
into
scas
addb
cmc
ja
loope
push
pop
lahf
or
add
ret
cmp
rcrl
add
inc
add
pop
sbb
orl
insl
adc
sbb
int3
or
jle
jne
mov
push
dec
sbb
in
pusha
add
ds
addb
add
movb
jno
jae
add
lods
addb
or
xorl
xchg
inc
mov
cmp
or
add
mov
add
or
ud1
insb
sar
inc
xlat
movb
repz
mov
loop
xchg
dec
mov
pop
cmp
xor
imul
xchg
rorb
pop
cmpsl
and
push
and
shll
xor
fwait
ret
ja
mov
inc
sbb
mov
cmpsl
and
pop
mov
clc
jl
das
inc
add
adc
loope
push
xor
xor
cld
cmp
js
adc
iret
movsl
mov
cmpsb
popa
pop
and
clc
imul
cld
add
mov
fwait
cwtl
in
push
addb
stc
push
add
rcl
cltd
sti
sti
fiaddl
std
in
sbb
repz
sahf
stos
pop
inc
and
fmuls
gs
addb
push
movsl
cwtl
fcoml
inc
add
sbb
and
dec
fadd
add
jl
nop
fs
and
sub
dec
or
add
jp
in
add
je
pushf
add
pop
jle
mov
scas
stc
sub
add
fdivl
sti
xchg
cmpsb
lcall
movsl
les
jle
pop
not
ds
addr16
popf
js
lret
xor
movb
aas
sbb
push
fidivs
stos
mov
notb
add
jns
add
jbe
ja
pop
inc
add
inc
in
incl
add
cmpsb
aaa
faddl
add
fmuls
sbb
jno
add
cmp
add
cmp
or
mov
push
cmp
addr16
pop
test
jmp
jle
lock
or
cmp
add
sub
sub
xchg
xchg
sbb
push
aas
xor
xchg
cli
mov
mov
scas
shrl
test
adc
addr16
data16
rolb
dec
stc
jo
adc
shrl
inc
add
lea
sbb
push
jbe
test
sub
mov
js
and
cmp
jecxz
sbb
scas
fwait
cmc
js
shlb
call
lds
xor
inc
add
pop
push
mov
dec
out
mov
fmuls
mov
movb
fsubrs
jnp
icebp
mov
xor
cmp
add
insl
or
xor
idiv
int3
mov
push
push
push
xchg
xchg
mov
dec
cmp
cmp
popa
and
or
add
dec
ror
imul
jmp
push
xor
add
insb
int
iret
jb
and
in
pushf
push
add
insl
movsb
mov
sbb
fsubl
insl
mov
cs
mov
jle
dec
pop
scas
mov
or
outsb
jns
or
pop
xor
test
xchg
rolb
roll
jns
shll
mov
mov
ficompl
sarl
gs
or
add
aam
pusha
add
repz
mov
add
sub
addr16
jbe
fcmovne
addb
adc
xchg
push
aaa
call
loopne
xchg
add
mov
adc
daa
and
movsb
fs
mov
mov
in
icebp
adc
leave
js
mov
mov
xor
push
adc
stos
xor
hlt
shlb
xor
dec
add
ljmp
leave
jp
push
bound
ja
pop
loop
cmp
add
sub
insl
and
and
jnp
mov
gs
inc
pushf
in
jne
inc
add
cmp
test
adc
mov
cmp
test
add
xlat
cltd
les
mov
stos
pop
out
mov
notb
adc
mov
cmp
movsl
and
fwait
mov
insb
inc
pop
pop
lock
jl
addb
arpl
daa
fwait
jle
out
fucom
mov
cs
subl
sbb
lahf
xchg
mov
and
aaa
fiadds
cli
dec
push
inc
add
aad
or
mov
cwtl
mov
pop
repz
xlat
inc
call
test
xor
scas
pop
and
pop
addb
inc
data16
pop
sbb
push
mov
mov
js
cmp
les
aas
lock
cmp
inc
add
sbb
pop
mov
inc
add
xchg
pop
dec
cmp
mov
add
imul
mov
sti
lahf
mov
xchg
in
test
or
mov
mov
sub
cmp
fldcw
outsl
adc
mov
in
push
and
stc
sub
insl
add
adc
test
lret
sysexit
push
push
rclb
and
ficomps
add
stc
xchg
lcall
mov
sti
mov
dec
mov
add
addl
add
push
jbe,pt
sbb
pop
sbb
jno
inc
add
lret
add
mov
mov
ret
jmp
test
imulb
inc
add
pushf
and
ljmp
adc
jecxz,pn
and
repz
xor
jo
add
inc
add
popf
aam
ds
jg
mov
out
mov
mov
jns
rolb
add
add
les
mov
imul
gs
mov
mov
ret
nop
cmp
push
add
mov
fldenv
and
test
mov
fnstenv
sbb
in
std
dec
imul
push
mov
xchg
aas
push
cltd
or
jno
inc
add
add
mov
test
mov
mov
stos
xchg
or
jb
lods
iret
sbb
jno
cli
rorl
jecxz
xchg
xor
mov
xchg
mov
mov
fadds
outsb
bswap
add
dec
outsl
or
or
add
out
mov
add
or
sub
test
add
loope
push
in
xchg
sub
xor
adc
pop
jo
xchg
aam
push
sbb
test
mov
jle
cmc
fadd
add
jb
mov
mov
and
movsl
in
fcmovnbe
inc
inc
leave
fnstcw
fs
cmc
mov
push
bound
add
and
nop
leave
lahf
push
dec
mov
inc
add
movsl
sbb
ficoms
lock
jge
sub
pop
aas
and
push
dec
sbb
pop
fidivs
push
xchg
cmpsl
fisubrl
or
sub
add
cmp
int3
inc
add
mov
push
or
mov
mov
and
rcrl
mov
add
out
pop
xchg
int3
and
sub
or
add
repnz
call
test
scas
test
dec
pushf
sti
add
sub
int3
or
mov
push
xorps
add
add
fdivrl
sahf
jmp
aaa
cltd
xor
xor
dec
mov
cltd
icebp
call
stc
mov
adc
mov
popa
push
ret
int3
xchg
imul
cmp
call
add
frstor
mov
or
out
cs
cltd
test
mov
loop
inc
int
and
mull
push
push
sub
add
fiaddl
adc
cmp
icebp
popa
rolb
or
push
inc
add
data16
mov
and
add
cmpsl
pop
jae
mov
ljmp
or
into
add
lods
imul
loop
cld
cmpsb
and
add
ds
xchg
shr
xor
add
add
or
divb
add
lahf
mov
pop
push
mov
add
add
xchg
cmp
dec
insl
jmp
push
jo
xchg
cmp
or
leave
rolb
sbb
pusha
add
and
jbe
mov
or
mov
jo
or
sbb
in
xchg
push
ret
jno
imull
stos
fcoml
fwait
clc
push
andl
fcmovbe
fmul
icebp
mov
xchg
es
scas
xor
sbb
mov
push
rcl
mov
popa
xchg
divb
dec
iret
and
jae
adc
add
ficoml
dec
cmp
add
jnp
daa
nop
or
dec
inc
out
dec
in
add
mov
dec
fmuls
shlb
pop
outsl
push
pop
sti
scas
jmp
sbb
add
sahf
dec
jns
add
out
push
and
sti
arpl
add
mov
inc
into
idivl
inc
xchg
pusha
add
jbe
mov
loop
jns
and
arpl
push
add
aaa
mov
aas
jbe
dec
movsb
or
jmp
jae
stos
dec
pop
out
call
dec
and
movb
mov
lcall
adc
ss
rorl
in
sub
mov
fmuls
inc
das
mov
ret
mov
aam
and
mov
ret
xor
inc
es
lahf
push
push
mov
pop
and
sti
add
lea
add
lcall
daa
sarl
cmpsl
sbb
adc
adc
in
adc
loope
mov
rolb
jo
lret
push
cmp
aam
add
insb
daa
js
sub
test
push
cmp
and
cmpsb
xor
imul
jae
fndisi(8087
gs
pop
dec
sub
repz
and
mov
dec
adc
add
lds
enter
lret
cmp
inc
add
addb
mov
das
pop
outsl
jle
jne
and
std
inc
add
and
in
mov
inc
add
mov
push
add
add
rolb
inc
add
inc
add
add
ret
popf
loop
scas
adc
inc
add
mov
push
sbb
hlt
jp
add
fcomp
fwait
rcrb
pusha
add
fdivs
xor
cmc
es
dec
fnstsw
test
gs
dec
pop
mov
int
clc
jb
xchg
push
and
mov
inc
add
clc
stos
pop
push
ds
cld
fisttpll
les
xchg
xchg
movsb
mov
sub
add
jecxz
shlb
outsl
jnp
jne
push
add
and
mov
loopne
incl
push
lods
mov
jns
xor
mov
add
loopne
or
js
inc
add
sti
xor
lcall
mov
leave
fidivrl
imul
add
mov
add
or
fistl
sarl
inc
outsb
add
int
mov
adc
pop
sbb
add
add
adc
add
dec
outsb
fs
cmp
jb
push
pop
out
pop
dec
jbe
insb
into
sahf
xchg
fiadds
add
xor
out
cmpsb
cmc
cs
pop
imul
cmpsl
lds
roll
jns
jns
cltd
int
mov
in
loop
inc
xor
jecxz,pt
ret
test
js
add
aas
xchg
jl
dec
push
movb
xor
out
lahf
sub
js
pushf
mov
push
fidivrl
mov
add
mov
fdivs
or
ror
xchg
sub
add
dec
sub
sbb
and
jbe
inc
add
lods
shrl
and
mov
data16
ret
leave
add
dec
cli
mov
ss
adc
daa
ja
mov
gs
addb
inc
add
ljmp
daa
ja
dec
dec
mov
mov
rol
add
add
ret
shrl
mov
sub
sub
adc
cwtl
or
in
mov
arpl
aas
stos
and
mov
push
clc
enter
and
subl
push
and
mov
enter
push
mov
sub
jecxz
hlt
pusha
add
push
mov
add
ss
rcrl
dec
mov
pop
out
in
pop
in
into
add
mov
jl
xchg
or
nop
xor
test
pop
sub
pop
pop
add
push
ficoms
scas
mov
push
in
mov
repnz
jne
xor
jno
dec
fdivrl
sbb
je
mov
loop
add
add
daa
jno
adc
out
in
pop
push
xor
inc
add
mov
add
xor
lcall
or
or
in
dec
js
jge
sbb
daa
and
jb
jle
test
stc
sbb
xchg
hlt
cli
test
jmp
xor
cmp
insl
add
imul
inc
add
pop
jo
out
mov
shlb
add
enter
and
add
call
ret
sub
jae
fmull
xor
icebp
mov
and
dec
jb
out
data16
add
movb
into
movb
cltd
xchg
ds
mov
inc
add
xchg
and
mov
jnp
in
push
or
sti
jae
dec
xor
mov
mov
xchg
pop
loope
repnz
shl
jmp
in
popf
shll
out
push
aaa
mov
xchg
xor
cmp
add
sahf
loopne
mov
fstpt
inc
mov
mov
mov
comiss
inc
popl
cmpsb
test
adcl
lret
aad
add
push
add
dec
mov
inc
fucomi
outsl
cmp
dec
pop
movb
movb
adc
out
sub
mov
xchg
daa
mov
dec
mov
ret
sub
test
cmp
stc
inc
add
push
or
add
fdivl
adc
mov
mov
pop
stc
scas
push
iret
cmc
sub
jo
ret
pusha
add
mov
sub
in
cmp
hlt
je
add
bound
pop
jg
push
add
xchg
movsl
pop
pop
rolb
addb
gs
enter
sub
add
dec
mov
add
faddl
add
jbe
bound
xlat
popf
mov
aas
xor
addl
mov
rorb
mov
test
mov
movsb
add
lods
lcall
ljmp
mov
out
pop
sub
outsb
dec
mul
dec
stc
mov
jno
cs
test
mov
mov
mov
add
mov
inc
inc
add
inc
and
pop
xchg
in
xchg
or
test
jno
jnp
mov
jl
sub
add
mov
mov
js
cli
and
add
cmp
in
sahf
push
lock
xor
imul
sub
and
mov
inc
add
into
cmpsl
mov
cmp
and
cwtl
adc
pop
xor
push
test
push
nop
mov
rolb
inc
add
lds
insb
push
arpl
xor
jl
imul
jo
add
sub
lock
in
sub
xor
or
mov
mov
mov
js
and
sahf
outsb
or
fstpl
test
lea
scas
inc
add
scas
cs
add
mov
inc
mov
and
ds
in
arpl
lock
scas
pop
cmp
mov
inc
add
out
pop
push
and
cwtl
shll
mov
add
pushf
pop
ret
sbb
jns
jl
in
sbb
lods
xor
std
repz
or
mov
out
shr
pop
lret
push
clc
jo
iret
push
add
add
out
jae,pn
push
int
leave
and
rcrb
xlat
sbb
insl
mov
and
or
push
adcl
add
xor
aam
cmpsl
es
addb
xchg
pop
out
sub
loop
cmp
repnz
sti
and
and
clc
out
pop
call
mov
xchg
stc
lahf
add
bound
int3
pop
sbb
aaa
jne
or
mov
pop
or
mov
add
out
inc
mov
arpl
insl
sbb
frstor
js
add
dec
daa
ficoms
mov
in
add
enter
mov
xor
or
add
mov
jne
test
push
xchg
sub
adc
test
push
xchg
iret
jl
inc
add
lahf
outsb
mov
test
andps
rcll
pop
cmp
add
sti
cltd
inc
add
loopne
jmp
mov
add
cltd
mov
add
stos
lahf
aam
jmp
xlat
sub
cmp
dec
push
sub
push
jg
dec
cld
inc
add
mov
mov
add
fldcw
xchg
or
cli
ja
push
fdivl
mov
mov
idiv
and
sbb
jo
adc
push
cmp
inc
fwait
gs
adc
mov
or
insl
lahf
stos
inc
add
add
nop
test
sub
adc
sbb
pop
cmp
jne
std
xor
lods
iret
data16
mov
inc
jp
xchg
nop
pop
and
and
mov
sahf
shrl
push
or
movsl
or
mov
jb
ret
mov
or
lahf
mov
sub
pop
inc
add
add
add
mov
xor
mov
ss
fsubr
mov
call
ss
dec
ret
fisubrl
xchg
lock
stos
mov
jbe
insb
insb
in
lock
adc
xchg
sub
xor
add
mov
xorl
add
push
mov
cwtl
enter
jl
cmp
xchg
push
movsb
pop
rcrl
push
jno
mov
cmp
lods
mov
ret
add
out
fwait
jg
int
out
das
sbb
jl
add
cmp
dec
or
mov
push
add
jns
xor
cmp
stc
xchg
inc
push
add
jmp
or
rol
inc
mov
cmp
fdivl
pushf
repnz
outsb
icebp
pop
mov
push
roll
outsb
fwait
sub
push
or
ss
movsl
ficoms
jg
sbb
fisttps
jb
jbe
leave
pop
jecxz
stos
and
inc
add
movb
pop
and
sub
xchg
mov
add
and
and
cmp
test
lods
rol
xchg
out
mov
xlat
xchg
rorb
pop
in
inc
leave
jbe
xchg
addb
stc
pop
mov
ja
sbb
add
add
xchg
push
aas
addb
jmp
addb
pop
call
cld
add
push
cwtl
or
cmp
pusha
add
xchg
sub
fcom
ja
push
imul
outsl
xchg
xor
ret
push
add
inc
ret
mov
sbb
out
mov
lods
inc
add
outsl
in
sbb
and
and
pop
pushf
pop
pushf
cmp
sub
fiadds
xchg
mov
sbbl
stos
call
sbb
cwtl
test
mov
add
out
xchg
adc
scas
jge
add
xchg
jnp
xor
out
int
jl
sub
jle
add
iretw
pop
jmp
cmp
les
test
divl
jbe
cld
faddl
pushf
push
test
sbbl
popf
outsb
sahf
xchg
mov
ret
test
adc
jnp
mov
push
and
call
pop
add
and
jge
add
xor
loopne
push
inc
add
add
rcl
jecxz
cld
jne
ja
sti
aaa
mov
add
mov
push
xchg
scas
es
mov
addb
add
add
ss
sbb
das
out
int3
dec
stos
inc
std
xor
push
mov
sbb
sub
add
fld1
push
cmovge
xchg
popf
dec
mov
dec
pushf
aaa
jg
xchg
fimuls
ljmp
movb
dec
pop
mov
sub
sub
das
les
push
add
add
test
add
into
dec
test
andl
bound
push
pop
shrb
mov
test
lahf
jbe
mov
outsb
ja
lock
push
aad
bound
pop
and
rolb
add
jbe
xchg
cmp
dec
outsl
jmp
imul
fisttpll
mov
add
addb
fs
add
jmp
jb
jns
decb
mull
and
sub
testb
out
jmp
out
pop
add
lret
mov
jmp
push
mov
jl
push
sbb
insl
movsb
addb
ja
std
out
out
addb
stc
and
push
in
roll
aas
dec
sub
pop
push
sub
push
fnstcw
cld
pusha
add
leave
int3
cmp
jmp
scas
in
fdivrl
mov
movsb
je
sahf
mov
dec
mov
add
sbb
movsl
cmp
cmp
sbb
sbbl
or
fldcw
push
out
testb
push
mov
mov
or
add
ds
xchg
ljmp
or
xor
les
std
pop
and
andl
push
add
jno
or
and
sbb
int3
fstpt
loop
fs
add
xlat
push
leave
int
push
or
jle
scas
mov
adc
lods
sbb
inc
add
xor
mov
dec
push
fdivp
ss
daa
or
xor
mov
mov
cmpsb
ficomps
sbb
inc
add
or
dec
jle
lcall
mov
aaa
in
hlt
insb
sub
jnp
fsubrs
mov
add
jbe
sbb
dec
push
imul
push
stos
lahf
ja
and
gs
cmp
jp
scas
insl
lahf
sbb
lock
aaa
addps
mov
sbb
mov
add
call
jg
into
cvtps2pd
cmp
es
es
xchg
loope
jae
aad
sbb
add
xchg
sti
movsl
push
xlat
sbb
out
xchg
pop
addb
scas
jmp
add
jl
leave
mov
cmp
pop
in
push
pop
fwait
cmp
pop
out
sub
push
movsl
mov
add
aad
dec
pushf
jbe
pop
or
movb
clc
pop
mov
mov
sub
xchg
add
push
lods
test
mov
in
push
pop
dec
mov
shl
or
clc
test
movb
cmpsb
add
and
and
lea
mov
loopne,pn
mov
cmpsl
push
push
add
mov
cmp
adc
sti
push
test
xor
add
gs
arpl
pop
xor
add
mov
xor
cwtl
jmp
add
pop
sub
in
xchg
popf
xchg
lcall
mov
stos
push
add
add
subl
pop
pop
xchg
pushf
mov
inc
add
addb
sahf
jmp
push
addb
xor
jns
pusha
add
cltd
out
ret
addb
les
sahf
lods
xchg
in
iret
jl
out
aaa
pop
andl
int
rol
mov
enter
sub
add
add
sub
shll
add
dec
sub
test
add
sbb
adc
sbb
pop
mov
insb
addb
ljmp
or
fs
add
add
leave
sahf
sub
stos
or
inc
and
push
sbb
sub
adc
cmp
sbb
mov
lret
add
xchg
pop
xor
cwtl
dec
and
sti
and
movb
aad
outsb
mov
dec
jle
cltd
pop
jle
movb
add
xor
push
fs
das
push
jae
cmp
imul
call
fsts
movsb
xor
scas
xor
xchg
xrelease
rcrl
sub
push
add
notb
inc
add
movsl
cwtl
sahf
outsl
or
movsb
inc
lret
fcoms
inc
add
xor
mov
subl
imul
jle
add
add
int3
mov
jmp
fs
jno
add
add
mov
add
jecxz
mov
in
mov
push
ficomps
mov
mov
inc
add
insb
push
cmp
mov
into
xor
hlt
xchg
loopne
sti
sbb
ljmp
jmp
or
jecxz
push
add
out
sub
or
mov
sub
mov
dec
inc
add
push
xor
inc
xor
loopne
inc
add
outsl
push
insl
fildl
bound
scas
fsts
dec
ret
push
sahf
push
out
sub
fisubrl
push
add
lock
data16
repz
cmp
sarl
mov
sbb
xor
push
mov
idivb
xor
jo
xchg
and
std
adc
pop
or
loopne
jo
add
xor
aaa
push
cmp
lock
movsl
push
leave
arpl
and
add
jecxz
add
loop
adc
add
add
hlt
addl
pushf
fldl
shr
ret
mov
movsb
pop
mov
inc
mov
inc
imul
xchg
nop
and
adc
sbb
dec
cmpl
mov
jne
jns
cwtl
cmp
outsb
dec
dec
or
fstpl
pop
sbb
pop
xadd
repnz
cmp
adc
loope
add
add
data16
add
sbb
aad
mov
adc
outsb
xchg
adc
std
popf
movsb
imul
or
popf
fistl
rolb
dec
testb
pop
mov
rcrl
inc
add
jne
mov
add
sbb
jecxz
cmp
bound
sbb
xor
stos
dec
xchg
test
xor
test
mov
aad
add
pop
out
pop
test
daa
leave
insl
add
mov
icebp
dec
jns
sbb
aad
lds
jp
add
mov
and
and
xor
push
ud0
push
stos
aam
add
mov
xchg
jg
dec
loopne
inc
add
in
and
add
add
mov
cmpsl
filds
mov
push
jecxz
loope
sub
inc
add
and
xchg
jns
dec
xchg
mov
inc
cwtl
and
imul
add
int3
xchg
icebp
std
inc
adc
stc
xchg
faddp
aas
inc
add
mov
jbe
in
pop
and
pop
xor
add
fiaddl
in
aad
pop
mov
xor
or
dec
rcrl
and
stos
and
cs
or
mov
push
daa
int3
out
pusha
add
mov
mov
aaa
clc
xor
lahf
int3
or
and
or
adc
inc
mov
mov
mov
lea
rcr
movsl
aas
inc
add
add
dec
inc
add
cmpl
dec
mov
inc
lret
cmp
sbb
mov
mulb
push
mov
add
xchg
adc
inc
dec
pusha
add
les
jbe
adc
int3
add
gs
outsb
push
push
dec
cmp
push
stc
pop
lock
into
addb
push
popa
lcall
xchg
mov
pop
shll
loopne
out
mov
jns
gs
add
add
in
add
aam
sub
xchg
cs
mov
mov
cld
js
cmpsb
inc
push
and
jae,pt
adc
outsl
mov
lock
lahf
lods
fnstenv
xchg
and
xlat
cld
test
pop
xor
ficoms
add
outsl
dec
and
in
addr16
mov
mov
mov
enter
mov
xchg
sbb
jmp
cmpsl
ffree
mov
lds
sub
inc
add
fs
repz
mov
ret
addb
xor
or
pop
fidivrl
es
add
and
push
lret
pop
insb
pop
testl
cmp
aam
shlb
icebp
mov
fimull
jg
mov
aaa
mov
dec
mov
pop
gs
and
push
and
mov
mov
mov
adc
fimull
data16
add
out
add
dec
inc
add
adc
xchg
fbld
push
inc
add
pop
jge
or
iret
adc
sbb
repz
dec
adc
or
mov
into
or
add
push
stos
mov
or
jae
sub
inc
mov
add
arpl
dec
xchg
pop
lods
hlt
fscale
shll
sbb
add
fsubr
lods
aad
or
arpl
je
sub
in
dec
xchg
loopne
out
fisttpll
call
sarl
ret
or
lods
pop
lock
movsb
mov
js
dec
or
mov
je
add
pop
aam
add
dec
jp
lds
pop
test
xchg
mov
in
mov
das
jbe
add
dec
or
sub
add
outsb
push
add
mov
add
lahf
add
and
mov
int3
popf
xchg
mov
pop
or
mov
jmp
mov
rcll
pop
or
cmpsl
mov
arpl
cs
add
add
scas
adc
add
out
or
movsb
dec
adcl
outsb
cmp
xor
frstor
add
mov
add
ljmp
add
bound
sahf
or
dec
in
repnz
xorl
iret
mov
in
fisubrs
ss
add
xchg
pop
pop
dec
adc
sub
jl
mov
je
jmp
ss
popf
jnp
pop
sbb
scas
stos
sbb
outsb
arpl
xor
add
adc
out
lods
xor
clc
adc
dec
push
insl
es
adc
dec
testb
sarb
repnz
push
mov
sbb
push
add
loopne
xchg
fs
add
sub
loope
movb
sub
into
dec
bound
mov
push
sahf
sbb
cmc
sub
std
or
addb
arpl
fstpl
or
in
loop
push
test
mov
add
mov
std
clc
lock
add
call
and
lahf
mov
push
push
sti
imul
pop
bound
push
popa
sbb
add
nop
cmp
xor
push
inc
add
mov
add
outsl
xchg
add
rorl
mov
inc
lret
mov
or
gs
sahf
out
pop
jbe
fidivl
add
int
add
call
rcrl
lret
mov
pop
mov
sub
pushf
inc
je
outsb
ret
push
and
imul
push
cmp
aam
xor
dec
dec
fisttpll
xor
sbb
add
lret
lcall
xchg
scas
popa
or
cmp
leave
jo
push
scas
xor
jle
adc
mov
jge
pop
xchg
or
bsf
sub
push
inc
cmp
jge
push
repz
out
rcrb
push
inc
sub
in
push
fiadds
xchg
loop
repnz
cmp
insb
fwait
lcall
into
insl
pop
cmp
das
mov
jl
xor
lret
inc
pop
sbb
mov
clc
daa
outsb
mov
jb
add
xchg
sbb
mov
arpl
dec
xor
fbld
lcall
mov
push
leave
adc
mov
int3
negl
push
nop
arpl
bound
and
int
negl
mov
inc
add
add
jno
mov
mov
mov
cmp
pop
cs
pushf
mov
xchg
pop
xchg
cmc
cmp
mov
xchg
fs
xor
hlt
data16
leave
repnz
daa
push
jae
int3
sub
in
pop
or
mov
push
cmp
and
push
and
xlat
ss
jne
jo
gs
cmp
jo
fimuls
lods
mov
inc
inc
aad
pushf
jo
addr16
xlat
das
outsl
push
push
stos
adc
stc
mov
mov
sbb
mov
xchg
out
fwait
push
fnsave
xor
adc
subl
mov
mov
sub
in
jae
push
int3
jecxz
push
cmp
mov
mov
mov
mov
fpatan
and
dec
idivl
movb
jnp
mov
push
push
add
repz
pop
scas
xorl
add
dec
mov
mov
mov
add
or
arpl
js
or
pop
testb
dec
out
scas
aad
sub
lock
push
leave
adc
inc
pop
inc
add
ja
xchg
jns
xor
xlat
push
sahf
jo
cmpsb
arpl
mov
mov
repnz
sub
add
das
loopne
jmp
imul
lret
mov
jb
outsb
lock
or
xchg
or
add
shlb
push
push
xor
mov
cltd
out
rcl
cltd
sub
push
pop
add
pop
mov
inc
add
mulb
ds
xor
add
ret
sbb
and
inc
add
pop
icebp
dec
sub
notl
test
xchg
std
or
dec
cmpsl
iret
add
add
int3
push
dec
in
stos
mov
and
xor
inc
add
xchg
fiaddl
repnz
pop
dec
mov
nop
push
add
push
sbb
inc
cmp
inc
push
push
das
adc
push
add
pop
mov
lea
aam
add
jge
add
int
pop
outsb
mov
mov
aaa
in
aad
fs
scas
sarl
sub
mov
push
stos
cmp
push
inc
jle
adc
add
addb
dec
scas
in
or
and
xlat
outsb
repz
lahf
xchg
pop
outsb
pop
dec
enter
sbb
cltd
or
mov
push
loop
mov
rol
and
mov
fpatan
ja
mov
jb
push
cmpxchg
mov
mov
ficoml
xor
cmpsb
loope
popa
sbb
outsb
or
mov
call
xchg
xchg
leave
rcl
sub
inc
or
add
cltd
fisubrl
mov
loopne
pusha
add
cld
inc
add
lcall
ret
add
clc
cmp
movb
jl
mov
mov
bound
pop
inc
add
sub
ret
cmp
xor
inc
add
and
lods
pop
mov
lods
sti
int3
pushf
inc
outsl
add
mov
aaa
push
pop
aad
fistl
push
xchg
int
sub
inc
mov
outsb
push
arpl
jl
pop
sub
adc
adc
mov
inc
add
movb
js
or
or
add
and
xor
lds
repnz
sbb
iret
mov
popa
comiss
js
sti
sbb
leave
xor
mov
pop
dec
xchg
or
out
mov
loop
pusha
add
lcall
and
out
pop
jmp
ja
dec
sbb
movb
mov
iret
xor
out
ds
int3
ret
into
xlat
aam
mov
out
cmc
rcr
mov
push
cli
ucomiss
iret
xchg
imul
add
fisttpl
mov
pop
mov
dec
add
xchg
out
jecxz
inc
pop
fdivl
adc
jg
hlt
cmp
lahf
push
and
adc
icebp
add
push
int3
mov
adc
push
cmp
dec
pop
test
mov
ljmp
or
pop
xchg
lcall
ja
stc
mov
or
das
loope
addb
mov
jo
dec
mov
cmc
dec
push
or
add
mov
cmpsl
xchg
mov
movb
or
pusha
add
mov
subl
jle
cld
int
xlat
cmp
mov
jecxz
mov
sub
imul
das
arpl
mov
lret
popa
cs
xor
and
add
daa
ja
pusha
add
push
cmc
cld
pop
or
movsb
jne
add
gs
mov
xor
mov
add
xchg
pushf
aad
cli
sbb
data16
outsb
cmp
push
mov
xor
imul
xchg
cmp
pop
mov
pusha
add
sbb
cmc
lods
cmp
push
cmp
push
push
add
xchg
mov
les
push
pop
movsl
ja
dec
xor
dec
fcomps
shrb
add
xchg
cmp
add
push
mov
sub
int
fcmovnb
mov
adc
cmpsb
sbb
inc
inc
icebp
adc
mov
add
cmpsb
mov
pusha
add
stc
movsb
inc
or
movsb
iret
mov
and
push
je
push
sbb
test
sbb
lea
and
lods
jecxz
xchg
jne
fidivrs
test
add
mov
je
in
xor
stos
push
and
push
scas
ss
dec
outsb
push
aas
loope
mov
test
ja
and
mov
add
arpl
je
cmpsb
add
xchg
jle
or
adc
popa
fmuls
pop
shl
inc
cmpl
lods
imul
dec
push
cmc
insl
xchg
add
dec
or
mov
out
push
or
sbb
inc
add
insb
adc
push
sub
add
incl
add
mov
lds
add
arpl
pusha
add
dec
stc
test
push
stos
js
or
sbb
out
adc
cmp
mov
fwait
dec
jae
add
imul
repz
scas
sub
lret
insb
cmpl
ret
xor
aaa
shll
fidivrs
jecxz
add
daa
insl
push
mov
sub
mov
mov
adc
mov
inc
add
aad
jb
pop
adc
aam
idivb
inc
adc
or
lahf
mov
jae
add
add
aad
imul
mov
movsl
push
add
cli
sbb
pop
jo
lret
mov
scas
push
inc
add
xchg
loope
stc
xchg
pop
insl
push
add
mov
sbb
add
jbe
dec
sub
or
add
loope
add
mov
mov
mov
add
adc
xor
mov
jmp
push
test
stos
fsubr
dec
xchg
jmp
sbb
mov
popa
mov
dec
inc
cmc
or
ja
out
mov
out
dec
xor
mov
sub
cmp
sbb
dec
jge
jo
mov
dec
xor
jae
pop
sbb
xchg
push
xchg
outsb
jp
dec
xor
movb
in
pop
mov
jmp
pop
mov
jnp
sbb
ficoms
cs
adc
dec
sub
jne
xchg
addb
vpunpckhdq
add
dec
test
rcrl
fidivs
mov
fldcw
pop
dec
pop
movb
dec
cwtl
test
fst
adc
cmpsl
mov
adc
pop
shrb
sbb
fdivs
aaa
jp
add
gs
inc
repz
gs
inc
add
add
add
add
fs
ss
lea
cmpsb
mov
lds
sti
add
pop
xchg
jbe
movsl
cmc
subl
add
inc
xchg
testb
in
ffree
add
pop
arpl
push
jecxz
add
and
xchg
sub
scas
cmc
daa
or
in
imul
xor
iret
idiv
xor
lret
movb
jl
add
loop
pop
or
xchg
sub
negl
add
sub
add
or
add
imul
xchg
inc
add
arpl
mov
movsb
mov
sbb
nop
cmp
mov
add
pusha
add
decl
mov
pop
cmp
loop
in
pop
loop
adc
add
int3
and
sub
add
add
add
and
inc
jno
xchg
dec
sbb
add
repz
lods
xor
push
push
frstor
add
pusha
add
add
addb
arpl
loopne
jl
and
or
xchg
inc
iret
sbb
decl
jbe
sbb
cmpsl
addb
ds
xchg
popf
fnstsw
add
xor
scas
adc
add
mov
imul
shll
adc
notl
mov
out
test
out
jl
mov
push
xchg
mov
sbb
or
jae
das
push
push
addb
add
aad
mov
jne
mov
out
enter
pop
imul
mov
inc
add
xor
adcl
les
fcmove
stc
ja
out
mov
lret
leave
xor
add
cmp
pop
hlt
jnp
xchg
sti
add
fstl
out
jb
push
aaa
popa
sbb
or
test
pop
pop
or
loopne
ds
dec
jecxz
cli
mov
jecxz
add
pop
push
popa
jnp
mov
mov
mov
mov
rcr
in
push
cld
adc
xor
cmp
pushl
mov
push
xchg
sub
adc
pop
mov
sbb
pop
dec
pop
adc
cmp
loope
loopne
pushf
mov
inc
add
or
sti
je
add
lcall
or
out
mov
and
scas
xor
mov
aam
cld
jge
lods
pop
shlb
xchg
adc
sub
add
lods
xor
push
in
pop
js
pop
pop
push
fistpl
test
ret
inc
add
popf
mov
adc
dec
std
rcrb
divl
mov
jmp
jns
add
cmp
imul
push
xor
sub
and
push
mov
inc
push
je
cmc
es
pusha
add
add
shrb
mov
jbe
mov
pop
or
pop
aad
cmp
push
into
fwait
cli
testl
add
mov
bound
out
fs
xlat
scas
lret
es
sahf
push
pushl
add
and
dec
mov
addb
jg
fisttpl
inc
add
add
sbb
movsb
sub
sbb
cwtl
ljmp
add
or
lahf
xchg
add
xchg
clc
cmp
xchg
inc
add
xor
scas
out
scas
xlat
into
pop
and
inc
add
add
jecxz
je
sub
cmp
daa
pop
cmpsb
jle
call
mov
add
add
fstl
inc
enter
cmc
je
add
push
test
mov
mov
jle
jecxz
add
lcall
adc
add
mov
shrb
sahf
push
xchg
pusha
add
jge
ss
ficoms
bound
and
push
add
mov
sbb
pop
dec
xlat
movsb
mov
jno
icebp
test
inc
stos
cmp
inc
xor
test
cmp
jnp
and
sub
in
sub
incl
sub
dec
push
cmp
push
stos
imul
add
cwtl
ljmp
mov
add
stc
pop
push
in
loop
mov
pop
push
lcall
pop
push
fsub
in
jmp
or
add
jmp
push
cli
sti
cmp
mov
rolb
js
lea
addr16
pop
or
stc
into
sbb
add
xor
bswap
in
cmovg
cmp
push
mov
pop
mov
ja
mov
pop
movswl
mov
ret
lret
cmc
or
sbb
fildll
sub
cwtl
out
dec
mov
sub
jnp
in
sbb
cmc
cmp
cmp
hlt
push
jns
shll
rorb
add
iret
loop
test
mov
fisttpll
test
jg
shlb
add
decb
popf
je
inc
add
push
inc
add
lret
enter
mov
mulb
or
fwait
inc
add
xor
scas
jg
mov
lret
rcl
inc
add
sbb
add
mov
adc
xchg
xchg
pop
xor
cmp
xlat
loopne
add
xor
loopne
xchg
push
mov
cld
push
sub
or
scas
jle
xchg
rcll
ljmp
jecxz
lds
xchg
popa
je
sub
push
fstps
into
sub
xchg
inc
cmc
shrl
or
mov
into
pop
inc
cmp
sbb
jae
jno
mov
add
adc
dec
add
sub
lahf
pop
xchg
mov
mov
lds
push
sbb
test
add
xor
dec
leave
lret
pop
sbb
push
add
pusha
add
pop
mov
dec
std
cld
fwait
mov
add
ror
cmp
sub
roll
addr16
imull
add
mov
add
sbb
mov
pusha
add
add
lahf
bound
push
mov
movsb
lea
cmpsl
jne
in
out
incl
push
fistpl
stos
addr16
add
jae
inc
add
mov
sub
push
in
insb
lds
and
add
shrl
fcoms
das
xor
out
and
ret
test
imul
pushw
lock
add
mov
fldt
mov
cmpsl
testl
push
push
add
addb
jle
mov
push
sbb
pop
jnp
cwtl
jecxz
sarl
add
push
movsl
or
inc
movsb
and
aas
leave
jg
stc
in
jle
cwtl
jne
scas
mov
xor
ljmp
sbb
push
ja
fstpl
loopne
outsb
mov
push
iret
stos
sbb
sbb
icebp
mov
pop
inc
lods
test
es
fxsave
add
inc
hlt
pop
xchg
les
ror
pop
bnd
add
ljmp
add
fwait
pusha
add
data16
dec
in
push
test
mov
and
pop
push
push
lret
jae
enter
cmp
popf
sub
shl
fmul
or
add
mov
add
jecxz
fnsave
lret
cmpsb
mov
or
xchg
loop
inc
add
cmp
jnp
in
and
aam
inc
sbb
enter
iret
add
or
push
xchg
daa
addb
add
mov
in
push
cs
loopne
mov
pushf
outsl
jmp
std
jmp
jmp
mov
js
push
xor
jno
inc
add
cmp
addb
jns
mov
sahf
dec
cmpl
js
je
inc
add
pop
loop
fwait
jle
and
gs
testl
mov
lret
pop
rclb
push
lret
xchg
idivl
imul
sti
xchg
lea
mov
xor
dec
cltd
sti
dec
lcall
inc
jl
add
iret
cwtl
neg
add
ds
fisttpll
inc
add
rolb
dec
and
cs
aad
and
mov
push
movsl
fnsave
sub
cmp
ss
lock
xchg
inc
inc
add
in
in
jg
call
sub
outsb
jno
add
sub
rcl
aam
rorl
adc
outsb
and
fistl
add
mov
dec
aaa
ds
and
mov
adc
mov
jge
cwtl
loope
dec
outsl
in
jne
push
add
lcall
lcall
test
jno
popl
add
add
add
