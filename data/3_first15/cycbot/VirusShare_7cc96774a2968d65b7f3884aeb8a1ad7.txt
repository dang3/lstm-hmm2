add
add
add
add
dec
dec
dec
dec
dec
dec
dec
dec
test
add
add
add
add
add
and
and
and
sub
add
add
add
add
test
lods
lods
data16
data16
movsl
movsl
movsl
movsl
movsl
movsl
add
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
adc
adc
adc
adc
adc
leave
mov
add
push
push
push
sub
bound
bound
loop
add
add
add
imul
push
push
push
push
push
push
push
push
push
add
add
fiadds
add
add
add
out
testl
sbb
clc
clc
clc
add
add
add
add
add
add
add
es
mov
mov
add
dec
dec
dec
out
out
out
out
out
add
adc
add
add
mov
mov
mov
jmp
jmp
add
push
push
add
add
ja
ja
add
jb
add
add
add
sub
mov
mov
mov
leave
leave
leave
leave
jmp
jmp
sbb
sbb
sbb
sbb
sbb
xor
js
addl
addl
clc
clc
add
xor
add
push
push
push
push
push
add
js
add
sub
sub
add
add
add
add
daa
daa
daa
daa
daa
daa
daa
daa
daa
add
add
mov
mov
add
xchg
xchg
xchg
xchg
imul
leave
leave
leave
leave
add
add
add
add
add
push
add
add
add
add
adc
add
add
xchg
ds
add
es
stos
add
test
test
cmp
nop
nop
add
ret
sub
dec
dec
dec
dec
dec
add
jo
jo
add
add
add
mov
ret
ret
ret
ret
jo
add
add
xchg
xchg
xchg
xchg
xchg
add
jo
mov
ds
add
add
add
mov
sbb
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
pushf
pop
adc
pop
pop
pop
add
add
mov
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
adc
push
push
push
push
push
add
popf
popf
popf
popf
popf
popf
popf
popf
popf
fcomp
add
push
add
xor
and
dec
add
dec
dec
dec
mov
ret
popa
popa
ss
xchg
xchg
cmp
cmp
arpl
add
mov
mov
or
repnz
mov
aam
aam
aam
aam
aam
icebp
add
aam
jne
jne
jne
jne
jne
jne
jne
jne
jne
sahf
sahf
sub
sub
sub
push
push
add
insl
insl
fwait
inc
inc
inc
inc
inc
inc
add
adc
adc
adc
adc
adc
data16
add
add
add
add
jle
jle
jle
jle
jle
jle
add
add
icebp
icebp
icebp
icebp
icebp
mov
mov
mov
jg
jg
jg
jg
jg
jg
jg
div
div
div
div
add
add
add
cld
add
add
jb
jb
ret
ret
js
js
xchg
pop
jne
add
add
pop
clc
clc
clc
clc
jle
jle
add
add
add
cmpsb
cmpsb
jnp
jnp
jnp
jnp
jnp
add
add
test
test
test
test
test
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
call
add
addb
add
fs
addl
add
sbb
sbb
add
add
fiadds
add
push
push
push
add
add
ss
add
xchg
xchg
xchg
xchg
inc
fcomp
fcomp
sar
leave
leave
inc
add
fs
xchg
sub
sub
sub
sub
sub
add
add
jmp
jmp
rolb
ret
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
jbe
test
add
sahf
sbb
sbb
add
arpl
arpl
jbe
jbe
jbe
jbe
sub
mov
add
add
add
add
add
dec
dec
add
jge
jge
jge
add
add
cmp
cmp
cmp
cmp
cmp
jg
jg
jns
pop
add
rol
rol
jb
jb
pop
pop
pop
pop
pop
pop
fstp
fstp
fstp
fstp
fstp
add
add
test
add
cli
cli
cli
cli
cli
mov
sbb
sbb
sbb
sbb
mov
sbb
fcmovu
add
adc
adc
adc
adc
adc
adc
adc
adc
pop
rcl
add
add
div
div
add
add
add
add
lea
adc
dec
dec
dec
dec
dec
dec
add
mov
mov
cmp
cmp
pop
add
add
add
add
xor
add
add
add
mov
mov
mov
mov
test
jae
add
add
add
stos
stos
add
add
add
add
xchg
xchg
xchg
cmp
cmp
cmp
andl
into
add
add
add
xor
adc
sub
sub
sub
xor
add
add
add
fs
add
add
int
add
or
or
pop
pop
lods
lods
lods
lods
lods
add
add
mov
mov
mov
add
add
add
ret
add
add
add
daa
daa
xchg
xchg
add
push
jp
jp
add
mov
mov
and
add
push
push
leave
leave
add
push
push
push
push
xrelease
mov
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
adc
adc
adc
adc
adc
adc
adc
adc
adc
icebp
icebp
icebp
icebp
mov
cmp
cmp
cmp
add
gs
in
in
in
in
in
in
in
in
in
push
in
add
add
add
add
outsb
sub
adc
adc
adc
adc
in
mov
sbb
sbb
sbb
sbb
sbb
in
add
add
add
mov
mov
mov
call
call
add
add
pusha
pusha
in
in
in
in
in
in
add
add
add
add
aam
aam
cwtl
cwtl
cwtl
in
in
or
or
lcall
lcall
add
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
leave
sti
sti
sti
sti
add
add
add
add
mov
inc
inc
inc
stc
stc
stc
stc
stc
stc
stc
add
add
jno
mov
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
ljmp
add
add
insb
insb
insb
insb
insb
insb
insb
add
add
add
add
add
jbe
jbe
jbe
jbe
jbe
mov
mov
jge
add
add
add
xor
push
push
push
outsl
outsl
outsl
outsl
outsl
add
add
inc
int
int
mov
div
div
div
div
testb
dec
sbb
in
add
add
add
adc
insb
insb
insb
insb
insb
insb
insb
add
cmp
jl
test
test
test
test
add
add
cmp
cmp
cmp
cmp
add
add
add
testb
add
add
add
or
or
or
js
mov
movsb
movsb
movsb
add
add
add
data16
pop
pop
pop
pop
data16
add
jecxz
jecxz
ret
ret
ret
ret
ret
pop
je
je
je
je
add
add
jno
jno
jno
add
add
aaa
aaa
add
add
or
or
sub
das
das
das
das
das
das
das
das
das
das
das
das
loop
cmp
mov
add
rcll
rcl
rcl
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
lahf
add
push
jmp
jmp
add
iret
iret
iret
mov
mov
mov
sbbb
pop
pop
pop
pop
pop
pop
and
and
and
and
and
add
add
add
outsl
outsl
outsl
outsl
outsl
outsl
rol
rol
rol
add
add
add
xchg
xchg
add
in
in
add
ret
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
inc
add
add
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
add
mov
mov
add
or
or
or
or
gs
call
pop
pop
pop
pop
dec
dec
dec
dec
dec
add
add
pop
pop
add
xchg
rcl
rcl
rcl
rolb
add
addl
add
add
add
add
xor
xor
je
je
add
xchg
xchg
xchg
xchg
xchg
add
cld
cld
and
int
lahf
insb
insb
insb
insb
insb
insb
insb
insb
insb
insb
add
xlat
xlat
xlat
xlat
xlat
xlat
xlat
add
add
add
add
add
add
add
add
dec
add
add
add
add
add
add
pop
pop
mov
mov
mov
mov
mov
sbb
pushf
pushf
cwtl
cwtl
cwtl
add
pop
pop
pop
pop
pop
pop
pop
aas
aas
aas
aas
aas
aas
mov
insl
insl
insl
insl
insl
insl
insl
insl
insl
pop
popf
popf
popf
popf
popf
popf
popf
popf
popf
popf
add
add
mov
cmp
add
add
add
lcall
add
add
loopne
dec
dec
dec
dec
and
and
and
icebp
icebp
icebp
inc
inc
inc
add
cmp
add
les
add
add
add
add
stos
adc
adc
adc
xchg
xchg
xchg
xchg
add
add
add
add
add
in
add
sti
sti
sti
sti
jecxz
addl
insb
insb
pop
pop
pop
mov
mov
mov
mov
insl
insl
sarb
add
add
add
mov
loope
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
stos
dec
dec
dec
jecxz
add
pop
loop
loop
mov
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
add
add
add
add
pop
pop
pop
pop
add
add
div
div
div
div
test
ret
add
add
std
add
add
rol
add
jne
jne
add
cmp
cmp
cmp
cmp
cmp
add
xchg
xchg
xchg
xchg
adc
adc
adc
in
in
add
mov
mov
mov
add
add
addr16
add
mov
sub
sub
sub
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
outsb
test
add
add
add
mov
add
add
scas
xor
add
add
add
add
test
incl
add
scas
rol
rol
rol
rolb
jmp
jmp
add
add
into
into
add
stc
stc
stc
inc
inc
inc
xchg
xchg
xchg
xchg
mov
mov
rcl
rcl
rcl
rcl
mov
les
add
add
idivl
cmp
stc
stos
stos
stos
stos
add
mov
or
or
add
push
push
push
add
sbb
je
je
je
je
je
je
add
add
add
aas
aas
aas
adc
adc
add
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
movsl
add
rol
rol
rol
imul
jns
add
aam
aam
aam
aam
aam
aam
aam
dec
dec
dec
dec
bound
bound
bound
bound
aad
aad
add
add
add
cld
cld
cld
cld
cld
cld
cld
sub
add
add
push
push
push
push
push
push
push
sbb
sbb
sbb
xor
xor
xor
xor
xor
xor
xor
xor
add
add
add
add
inc
inc
mov
add
add
add
add
adc
add
ret
inc
add
mov
sub
sub
sub
sub
sub
sub
xor
test
test
cli
cli
xchg
add
arpl
arpl
arpl
xchg
xchg
xchg
jmp
rol
rol
rol
rol
and
aam
add
sub
aad
aad
add
cmpsl
cmpsl
mov
add
rol
rol
add
add
dec
dec
dec
dec
dec
dec
dec
pop
pop
add
add
add
mov
add
add
push
push
push
push
push
push
push
push
push
pop
pop
pop
cmp
add
or
or
or
xchg
xchg
xchg
xchg
nop
nop
add
add
add
add
push
push
push
mov
add
add
add
add
add
insb
insb
insb
insb
sbb
add
add
add
daa
daa
daa
daa
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
sub
add
add
dec
dec
dec
fadds
jle
pop
add
scas
scas
scas
add
add
and
fwait
repnz
sub
sub
add
in
jge
xor
add
add
add
add
ljmp
add
add
mov
add
add
add
movsb
add
lock
lret
lret
sbb
sbb
cmp
sbb
sbb
dec
fcmovnu
jno
jno
jno
mov
mov
js
js
addr16
add
add
add
add
jno
jno
jno
jno
rcl
rolb
inc
inc
inc
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
ret
jl
add
gs
sub
add
mov
mov
mov
add
add
add
lea
add
add
aas
aas
aas
aas
aas
aas
aas
add
xchg
xchg
xchg
xchg
xchg
dec
dec
scas
scas
scas
scas
scas
scas
scas
push
loope
xor
xor
add
add
add
add
and
and
and
test
pop
pop
pop
jb
add
and
add
add
add
add
add
sub
sub
sub
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
xor
xor
add
icebp
cmc
add
and
and
and
and
add
mov
adc
and
fs
add
xor
xor
add
fadds
dec
dec
dec
dec
dec
mov
add
or
add
pop
fidivrl
test
sbb
add
int3
int3
int3
int3
int3
int3
int3
int3
and
and
and
mov
add
jno
jno
jno
jno
jno
jno
mov
dec
dec
dec
dec
jbe
jbe
jbe
jbe
jbe
jbe
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
add
add
add
add
stc
add
add
add
mov
xor
add
adc
add
add
add
add
movsl
pop
pop
pop
pop
pop
pop
pop
or
or
or
or
or
or
add
inc
inc
inc
inc
inc
add
add
popf
popf
mov
mov
mov
mov
add
dec
iret
iret
iret
iret
iret
inc
inc
inc
inc
inc
or
add
aaa
add
add
add
add
add
add
daa
add
add
rol
rol
push
push
push
push
push
push
add
add
nopl
mov
mov
add
add
or
or
or
or
or
or
add
add
fs
fiadds
sub
aam
aam
aam
mov
movl
nop
nop
das
das
das
das
das
vmovntpd
sub
sub
sub
sub
sub
sub
sub
sub
sub
sub
adc
adc
in
imul
mov
dec
dec
dec
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sti
xchg
push
push
push
push
push
push
push
push
push
push
mov
fwait
fwait
fwait
fwait
fwait
fwait
fwait
lcall
add
div
rcl
rcl
rcrb
pop
pop
add
add
add
add
xchg
xchg
xchg
xchg
xchg
cltd
cltd
cltd
cltd
cltd
add
cs
add
add
add
jmp
add
add
ljmp
lods
lods
add
lcall
lcall
mov
add
push
push
push
push
push
add
aaa
aaa
aaa
aaa
aaa
aaa
aaa
xchg
add
add
add
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
cmc
call
add
addb
add
xor
xor
xor
xor
rcl
rcl
shr
insb
insb
insb
cmpsl
cmpsl
cmpsl
add
add
adc
adc
adc
adc
add
add
aaa
aaa
aaa
aaa
aaa
aaa
adc
adc
and
mov
mov
add
add
add
add
add
mov
shrb
add
add
add
xor
jecxz
jecxz
jecxz
addr16
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
adc
adc
add
add
rol
add
cmp
add
add
add
add
lock
lock
add
add
add
add
imul
add
outsl
outsl
outsl
outsl
outsl
outsl
add
and
ss
add
or
ljmp
repz
das
das
add
js
add
addr16
adc
push
push
push
push
mov
mov
add
add
ficoms
push
jecxz
jecxz
jecxz
jecxz
jecxz
jecxz
add
repnz
jb
rcl
rcl
rcl
rcl
roll
fstp
fstp
fstp
fucom
dec
dec
dec
jg
jg
add
add
add
add
add
add
add
add
add
add
add
stos
ds
push
imul
imul
imul
sub
add
add
add
sub
sub
sub
add
add
adc
outsb
add
add
addb
sldt
add
inc
xor
repnz
repnz
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
add
add
int3
jo
js
add
add
xchg
xchg
xchg
sbb
add
pop
pop
pop
pop
pop
pop
pop
pop
jecxz
jecxz
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
jne
jne
jne
add
add
add
mov
ss
add
add
add
add
int
int
add
add
add
lods
xchg
xchg
xchg
xchg
and
and
adc
add
addr16
and
add
add
add
add
add
sub
add
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
sbb
movsl
add
add
add
add
add
ds
cmp
add
add
and
and
and
and
rol
pop
pop
pop
pop
mov
mov
aam
aam
aas
aas
aas
aas
aas
aas
aas
aas
aas
cmp
cmp
cmp
add
add
add
dec
dec
add
add
ljmp
insl
insl
insl
loop
movl
add
cld
lods
push
das
das
xchg
xchg
add
add
lret
xchg
add
cmc
sbb
sbb
sbb
lea
outsl
outsl
outsl
xchg
xchg
xchg
pop
pop
pop
add
add
addr16
lds
add
add
or
or
add
mov
add
add
add
and
and
and
and
and
and
add
mov
add
rol
rol
rol
shll
jmp
and
in
test
test
test
test
test
sbb
add
adc
adc
jnp
jnp
jnp
loope
inc
inc
inc
or
xchg
xchg
xchg
xchg
xchg
xchg
xchg
clc
clc
clc
clc
clc
clc
clc
clc
clc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
addl
stos
stos
stos
stos
stos
jle
jle
jle
jle
xor
xor
add
pop
sub
sub
sub
sub
sub
sub
add
add
add
movsb
movsb
movsb
aad
aad
aad
aad
aad
mov
mov
mov
mov
mov
jns
jns
jns
jns
jns
jns
inc
inc
inc
inc
add
add
add
add
sub
sub
sub
sub
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
cmpsb
add
add
add
add
push
push
push
jl
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
add
add
mov
mov
mov
push
push
add
and
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
push
dec
add
add
add
add
insl
insl
add
loope
loope
loope
loope
add
add
add
jg
jg
add
mov
mov
add
add
fcmovnu
fcmovnu
fcmovnu
hlt
rolb
add
dec
dec
add
add
add
dec
add
add
into
pop
add
and
dec
add
add
add
add
add
add
add
add
add
add
cmp
and
push
push
add
add
gs
pop
pop
pop
pop
pop
pop
aaa
aaa
aaa
aaa
aaa
aaa
pop
pop
pop
sti
sti
sti
sti
sti
add
add
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
pop
add
xor
or
or
ljmp
imul
add
add
push
push
push
push
push
push
push
mov
mov
sub
and
and
add
add
lret
std
std
add
fs
enter
xor
xor
adc
add
add
sbb
push
push
push
push
inc
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
ret
ret
add
and
and
repz
pop
add
add
ret
add
add
sti
sti
sti
in
and
and
add
add
pop
pop
pop
pop
pop
add
mov
add
jecxz
or
or
add
add
add
add
and
and
out
out
addl
add
jns
nop
nop
nop
nop
int
int
ss
add
add
add
add
add
add
mov
mov
mov
mov
add
add
dec
dec
dec
add
add
add
add
add
in
in
in
in
std
std
std
std
std
std
std
add
add
add
sbb
sbb
sbb
add
push
push
push
push
push
ss
pop
pop
pop
pop
add
jbe
jbe
jbe
add
and
add
into
into
into
into
into
test
add
add
add
add
add
add
add
test
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
pusha
add
add
add
jb
jb
jb
jb
addb
add
mov
add
lods
add
add
add
add
div
div
stos
add
insb
insb
push
add
add
add
mov
int3
int3
int3
int3
int3
fcmovu
add
add
dec
dec
dec
dec
dec
dec
inc
inc
inc
inc
repz
add
add
pop
pop
pop
pop
add
add
add
add
pop
pop
pop
xchg
add
add
jmp
lcall
lret
lret
add
add
add
add
add
add
rol
mov
mov
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
aas
sbb
cmpsb
cmpsb
cmpsb
pop
add
add
add
and
cmpsl
ss
sldt
add
add
add
mov
add
add
mov
add
add
inc
inc
inc
inc
inc
inc
inc
inc
inc
add
add
add
adc
adc
adc
push
push
add
add
sub
sub
popa
popa
cmp
add
add
or
or
or
add
add
cmp
cmp
cmp
add
in
in
in
in
in
in
in
in
in
in
in
add
and
and
outsl
imul
add
sbb
call
inc
add
div
div
div
div
div
div
div
div
div
test
test
test
bound
add
add
or
add
add
add
push
push
push
push
push
push
push
rcl
rcl
rcl
push
mov
mov
mov
mov
sub
sub
sub
sub
rcl
rcl
rcl
mov
mov
mov
pop
pop
pop
add
call
add
add
jns
mov
mov
mov
mov
es
add
mov
add
loope
loope
loope
data16
or
or
or
or
add
add
add
inc
inc
inc
inc
inc
inc
inc
add
add
mov
xlat
xlat
xlat
xlat
xlat
mov
mov
jge
add
out
comiss
or
or
cmpsb
cmpsb
cmpsb
movsb
movsb
outsb
repz
pop
pop
pop
add
add
add
adc
add
add
int
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
dec
outsb
outsb
outsb
outsb
add
add
inc
inc
inc
inc
add
sub
sub
sub
add
add
add
xor
add
add
add
cwtl
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
lods
inc
inc
pushf
pushf
pushf
in
in
in
in
add
push
push
add
addl
add
adc
adc
adc
adc
adc
add
cltd
outsb
outsb
outsb
outsb
clts
push
addr16
in
in
in
in
in
in
in
add
rcl
rcl
sarb
xchg
xchg
jbe
jbe
jbe
jbe
add
add
add
add
rcl
rcl
add
add
add
ret
ret
fwait
repnz
cmp
add
add
xor
rorb
xchg
xchg
xchg
mov
add
repnz
add
add
push
push
push
push
push
add
add
aas
aas
aas
add
in
in
in
add
add
add
push
push
add
add
add
push
push
push
push
push
push
push
push
push
push
add
add
and
and
and
and
and
and
mov
jno
clc
clc
clc
clc
clc
clc
ja
ja
ja
ja
ja
add
addl
movsb
add
add
add
lea
lea
int3
int3
sbb
sbb
xchg
str
or
out
mov
mov
add
jecxz
jecxz
add
xchg
xchg
xchg
add
dec
aad
add
push
push
jb
jb
jb
jb
outsl
pop
sub
fcomp
fcomp
fcomp
xor
xor
add
cmpsl
sahf
sahf
sahf
arpl
arpl
inc
inc
inc
test
add
add
add
add
cli
add
lret
lret
lret
add
mov
add
add
js
js
js
adc
cmp
cmp
cmp
cmp
add
add
sub
sub
add
mov
add
add
rcl
add
add
into
into
into
into
into
into
sldt
add
loopne
loopne
mov
popl
lods
lods
lods
lods
add
add
add
add
lahf
and
and
and
add
push
push
push
push
push
ds
iret
iret
iret
iret
iret
iret
iret
add
add
mov
mov
mov
loope
loope
loope
aas
aas
aas
aas
aas
aas
add
add
add
add
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
xchg
sbb
sbb
test
push
rcrl
hlt
pop
sahf
add
xchg
and
add
loopne
int3
lods
add
or
and
addr16
push
lret
and
xor
addb
iret
xor
push
in
rcl
mov
and
pop
leave
repnz
push
rolb
pop
je
mov
into
scas
loopne
push
jecxz
push
inc
xorb
addb
leave
sahf
add
inc
inc
inc
xor
pop
lock
loopne
xchg
mov
cli
outsb
jbe
cltd
nop
add
pusha
cli
dec
cmp
add
sub
xor
cmp
out
enter
popl
sbb
mov
add
lahf
jb
pop
test
popf
fidivrs
add
push
cld
cmp
dec
les
fimull
add
sbb
inc
mov
rsqrtps
and
pusha
andb
inc
imul
stos
fdiv
daa
mul
push
mov
test
rorb
outsb
xchg
movsb
and
add
data16
fdivr
int
pop
or
and
and
addr16
pusha
and
xchg
add
mov
rolb
or
int
and
addr16
ljmp
data16
mov
lcall
add
out
dec
mov
rcll
push
js
sbb
in
rclb
lret
insb
pop
mov
mov
xor
in
int3
inc
fwait
inc
mov
jl
cmc
mov
rcrb
add
insl
sbb
sbb
jne
sbb
shlb
orb
dec
push
mov
in
pop
test
mov
mov
xchg
les
mov
aad
cmc
sbb
out
jns
sti
loopne
and
mov
jno
jae
xor
cmp
and
hlt
pop
pop
cltd
lods
jne
xor
xchg
leave
jb
fstps
sarb
in
xor
fsubl
mov
sbb
and
mov
inc
lods
testb
cmp
pop
dec
xchg
cmc
call
mov
cmpsb
and
lock
fs
xchg
in
cmc
hlt
or
inc
outsb
bnd
xchg
jmp
imul
inc
and
pusha
mov
out
add
and
inc
enter
pusha
pop
pop
mov
dec
cli
sbb
jnp
js
xor
sub
inc
pusha
lcall
jp
add
add
stos
iret
ret
loop
pop
pop
jne
xchg
inc
loope
push
or
addr16
ja
insl
movb
push
rolb
push
adc
mov
mov
loopne
fs
lods
mov
rcr
iret
fwait
push
loopne
stos
inc
shll
xor
add
lods
pusha
rcrb
mov
rorl
stc
jno
adc
sahf
test
loopne
jp
rol
and
add
xchg
arpl
pushf
cmp
mov
clc
jecxz
xchg
stos
cwtl
and
aaa
loope
pusha
pusha
cwtl
enter
dec
or
enter
sarb
movsl
push
fcmovbe
jmp
shlb
push
adc
jge
push
pusha
inc
mov
leavew
sub
pusha
push
movsl
and
jl
push
add
push
mov
stos
jp
mov
sbb
lea
jge
dec
inc
enter
mov
cmp
pop
jb
and
xchg
das
aad
into
jecxz
test
aaa
test
mov
or
shl
mov
test
sbb
out
sbbl
addl
push
fdivs
adc
and
fbld
pusha
add
mov
hlt
in
inc
and
jbe
and
loopne
shlb
addr16
fimuls
int
ljmp
dec
out
andb
lds
loopne
cmpsl
inc
repz
cmp
fnstenv
lods
loopne
dec
cld
sbb
jp
push
and
xor
sarl
add
mov
xor
sub
and
jo
push
push
jns
push
andb
aaa
push
push
cwtl
aaa
pop
insb
aas
popa
std
out
shlb
mov
popa
repnz
ficoml
aad
inc
inc
jg
sti
mov
jns
dec
xor
repz
enter
inc
xor
fbstp
das
out
aaa
rcr
in
and
pusha
add
mov
out
in
insb
mov
inc
xlat
push
and
loopne
int3
add
fwait
iret
outsl
lahf
xchg
cld
rorb
pusha
jno
out
dec
xchg
int3
fadds
lds
loope
mov
shl
mov
or
jne
popf
in
fiaddl
shrb
mov
loop
xchg
jmp
or
cwtl
jb
xor
loope
rcpps
mov
rol
int3
idiv
mov
jmp
push
xchg
xor
push
dec
mov
inc
repz
push
xlat
xor
je
pop
fisubrs
pusha
loopne
in
adc
push
leave
push
sbb
roll
loopne,pn
or
and
fstpt
mov
and
hlt
ret
inc
cmp
psrad
mov
movsb
inc
add
sub
das
loop
out
insl
fnstcw
daa
fdivrs
mov
lret
mov
add
rcrl
scas
loopne
dec
mov
or
adc
aam
sbb
cmp
rorb
mov
ficompl
adc
leave
and
inc
xchg
jnp
mov
clc
jns
xor
jne
imul
jno
push
mov
add
push
add
popf
imul
sbb
pop
insl
in
lock
dec
test
das
pop
push
dec
and
loopne
pop
mov
cmp
jbe
jg
mov
mov
loop
or
loopne
fistpl
aam
jae
adc
inc
pushf
and
mov
daa
cmc
cwtl
addb
pop
addb
loopne
cwtl
in
inc
jae
shlb
xor
nop
mov
enter
loopne
mov
sbb
addb
pop
mull
fisttpll
sub
jbe
ja
scas
and
stc
mov
inc
loopne
mov
pop
mov
mov
mov
cmp
sarb
sub
or
andb
mov
std
sar
xchg
xor
xchg
or
xchg
xchg
sub
sbb
mov
dec
sub
shrb
and
inc
jecxz
incl
pop
jmp
shl
add
enter
sbb
loope
or
add
popa
imul
repnz
cmp
loopne
cmp
sub
inc
and
mov
pusha
push
sbb
pop
jne
inc
frstor
iret
cmc
lock
test
cmp
add
cmpb
pusha
and
or
inc
mov
aam
scas
pop
dec
mov
loopne
aam
sbb
pusha
loopne
xor
add
add
mov
pusha
repz
test
stos
and
or
xchg
mov
je
fbstp
or
addb
arpl
sbb
aas
add
in
cmp
mov
jmp
stos
add
inc
loopne
cmp
inc
fs
enter
push
mov
dec
pop
lcall
scas
pusha
mov
or
inc
add
mov
mov
mov
rolb
cmp
fwait
jmp
sub
sar
cmp
mov
rorl
pusha
rcrb
mov
mov
shlb
outsb
fidivrl
gs
bound
xchg
and
shlb
mov
popf
aas
rcpps
ret
shlb
das
sub
add
and
and
mov
popa
pop
enterw
inc
bound
es
pop
mov
mov
pop
dec
sahf
push
sub
faddl
xor
rorl
aas
xchg
out
adc
mov
mov
inc
mov
push
and
xchg
ljmp
ror
mov
shl
clc
div
push
std
jecxz
icebp
and
mov
mov
stc
movsb
pusha
add
push
pusha
shrb
pop
inc
jns
push
fs
push
xchg
clc
cwtl
mov
and
into
bound
xor
fwait
gs
int3
movsb
inc
sarb
shll
mov
jns
lahf
sbb
push
in
pusha
inc
outsl
ljmp
add
inc
addr16
bound
or
pop
inc
out
test
rclb
dec
gs
scas
inc
and
push
jg
cmpsl
cmpsb
mov
imul
mov
xchg
add
sub
pusha
rolb
stc
addb
dec
jge
les
loopne
shlb
mov
movsb
mov
sarb
sbb
das
and
pop
jb
dec
popf
sub
inc
sub
jb
out
in
xchg
outsb
cmp
cmp
aas
hlt
repz
in
into
repz
mov
loopne
addl
inc
ljmp
add
gs
sub
mov
mov
test
add
test
loopne
outsl
imul
push
adc
out
xchg
push
call
push
test
adc
push
aaa
and
push
cmpsl
lahf
out
pusha
in
enter
dec
xchg
mov
inc
mov
and
popf
mov
add
dec
fiadds
testb
mov
idivl
mov
shlb
adc
xchg
popf
push
pushfw
cmpsb
rol
add
dec
sub
pop
xchg
jecxz
ret
sub
jae
fdivr
adc
inc
aas
mov
mov
lcall
pop
fucomip
popw
shlb
push
add
and
sub
jo
sbb
inc
cmp
add
mov
push
popa
push
and
pop
pop
jge
fisttpll
sub
loopne
addb
popf
cwtl
lahf
sti
loopne
stc
push
mov
fsubrl
push
popf
std
xor
shl
mov
and
and
call
adc
andb
shlb
cli
insb
int
jmp
les
and
movsb
loopne
inc
jo
inc
push
cli
es
je
xlat
jns
pop
ja
push
inc
add
sbb
gs
fmull
cld
jne
outsl
jns
addl
push
mov
mov
or
push
aas
dec
xchg
jb
pusha
and
xchg
cmc
int3
fwait
adc
mov
push
sub
insl
outsl
xor
mov
inc
mov
leave
js
mov
andb
sti
idiv
pop
inc
inc
clc
push
cmp
cli
lds
cmpsb
loopne
jns
sub
xor
out
dec
fimuls
loopne
jp
inc
andb
push
or
inc
or
inc
mov
and
mov
rcl
add
icebp
jno
or
sub
loopne
jno
loope
andb
jg
add
outsl
subl
add
loopne
daa
mov
shrb
xor
sub
andb
js
ljmp
xchg
and
loopne
pop
stos
pusha
mov
mov
das
mov
addb
cmp
lods
add
add
mov
add
mov
repz
pop
scas
andb
cltd
push
and
sub
inc
sbb
or
fisttps
or
and
fsubrl
xor
or
pop
daa
or
pop
cmp
mov
add
add
add
add
add
mov
loopne
jmp
xchg
lahf
mov
cmp
das
or
cmp
pop
or
jmp
add
inc
xor
jmp
aad
sub
and
or
pusha
pusha
hlt
push
rcrl
push
push
or
fs
inc
fcomps
shrl
sti
inc
xorl
insl
push
std
sub
sar
cwtl
push
int
pop
and
inc
xchg
inc
xchg
and
mov
push
mov
xor
arpl
testl
mov
insb
imul
push
mov
add
mov
fcmovnu
adc
pop
push
stos
cmpsb
addb
pusha
push
aas
jo
addb
fwait
or
inc
orb
and
insl
xor
xchg
jg
cwtl
cmc
pop
mov
mov
cmp
push
dec
hlt
fimuls
inc
xor
nop
pop
mov
std
cmpsb
addb
pusha
inc
in
mull
xor
sub
xchg
cmpsb
loopne
lods
push
call
push
mov
pusha
xor
stos
mov
sub
adc
sub
add
xlat
outsl
push
pop
lock
jg
scas
fidivl
aas
mov
pop
fisttpll
add
dec
test
inc
cmpsl
adc
mov
pusha
rclb
inc
rcrl
pusha
mov
add
mov
scas
cwtl
int
loope
pop
in
cmc
fcmovu
sti
cld
jecxz
fnstsw
and
rorb
ror
out
pop
mov
cs
inc
insb
and
loopne
mov
lcall
mov
ss
stos
and
loop
ret
icebp
int3
cmp
les
or
or
adcl
xor
dec
fldt
pop
add
cmpb
nop
out
xor
in
mov
adc
or
pusha
enter
pusha
pusha
shl
dec
mov
sub
cmpb
push
add
repz
mov
and
ljmp
div
jl
lret
clc
mov
loopne
cmp
inc
push
hlt
clc
addr16
test
loopne
xchg
xorb
pusha
mov
stc
cmp
aam
jge
sbb
inc
mov
pusha
cli
sbb
fdivs
dec
outsl
jb
lds
add
fcoms
js
repnz
pusha
loopne
loopne
sub
xor
push
adc
lahf
mov
mov
ror
mov
and
movsb
and
mov
fs
sbb
js
inc
pop
mov
je
push
mov
and
and
push
rolb
pusha
andb
add
cmc
in
mov
or
add
sbb
daa
xchg
mov
andb
lock
rcrb
loopne
cmpsl
mov
mov
scas
push
std
rolb
xchg
and
sbb
mov
dec
xchg
leave
xchg
test
pusha
test
pusha
mov
aam
mov
xor
mov
xor
and
add
call
or
cmpl
add
out
pusha
inc
and
loopne
ds
inc
fidivrl
clc
sub
in
aaa
fsub
cmp
movsb
add
gs
pop
fiadds
adc
xor
xchg
ja
imul
pusha
pusha
data16
and
rolb
ds
cmp
push
xchg
lock
lods
addb
imul
mov
xorb
xchg
fnclex
mov
inc
adc
lock
push
mov
aam
addb
push
jo
jmp
sbb
addb
jae
inc
pusha
bnd
addb
lcall
addb
inc
call
lahf
push
xor
jle
mov
leave
loop
jmp
cmpsb
and
or
add
mov
xor
jmp
add
lea
iret
mov
mov
mov
jp
shr
jecxz
add
inc
ret
cltd
sub
loopne
cmp
mov
rcrb
xor
loopne
je
adc
loopne
orl
rclb
dec
aam
addb
push
xchg
cs
inc
or
inc
in
call
test
loopne
mov
add
mov
sub
call
and
cmpsl
mov
paddusb
lea
rolb
iret
ja
xchg
int
push
imul
inc
nop
jmp
adcl
sbb
cmp
je
push
test
inc
subl
stos
mov
imul
and
fucom
movl
mov
shl
lods
loopne
mov
pusha
mov
pop
loope
adc
icebp
enter
jl
imul
pusha
rorb
add
inc
outsw
push
mov
adc
out
dec
adc
mov
shlb
ja
sbb
pusha
loop
loopne
shl
inc
sub
sbb
push
lods
pop
dec
xchg
pusha
jmp
leave
test
push
insb
gs
dec
dec
adc
or
movsb
add
pop
xor
mov
loopne
addb
inc
popa
call
cmp
push
rolb
stos
loopne
mov
push
xor
adc
je
push
inc
push
lds
pusha
cmp
fs
cmp
imul
and
rorb
jnp
mov
out
dec
scas
pusha
ror
lods
inc
pusha
arpl
jno
out
push
and
push
inc
mov
int3
nop
lea
aas
sbb
jmp
or
add
cmp
pop
cltd
in
dec
sub
mov
mov
add
lahf
mov
aas
dec
test
sarl
mov
pop
shlb
cmc
fsubrl
rolb
test
inc
dec
dec
dec
lcall
ret
mov
test
add
cmp
sbb
add
std
test
lock
or
push
mov
imul
mov
dec
mov
adc
adc
sub
add
loopne
sub
inc
popf
inc
sbb
and
inc
filds
repnz
xchg
hlt
lahf
nop
ret
shrl
and
cmpsb
loopne
dec
xchg
inc
mov
test
and
loopne
or
or
inc
scas
loopne
sub
pusha
sub
mov
push
shlb
mov
movl
and
imul
bound
in
repz
das
pushl
outsb
loopne
sbb
iret
sti
mov
repnz
sar
xor
test
add
jns
cmp
pushf
cmp
mov
addb
scas
inc
scas
inc
out
test
notb
mov
mov
bound
mov
dec
mov
or
shrb
inc
mov
rolb
or
and
testb
or
jne
les
std
or
mov
mov
and
or
shl
lret
fcompl
add
scas
push
inc
inc
out
rolb
pusha
and
add
dec
add
rcr
pop
call
mov
hlt
cmp
out
fmul
mov
cmp
test
addl
add
addb
mov
inc
data16
ds
cmp
leave
mov
push
pusha
and
inc
pusha
sub
rclb
rcrl
jne
ds
addl
in
cli
jmp
adc
fwait
xchg
scas
add
xor
pop
scas
add
mov
in
shlb
imul
cmp
lret
mov
pushl
pusha
rcl
push
arpl
adcb
pushf
movsl
es
testb
loopne
mov
pop
xor
push
push
loope
out
sbb
adc
add
rolb
mov
and
push
lock
in
and
sub
mov
lret
aaa
cmpsb
inc
add
pusha
inc
aaa
mov
push
sub
loopne
cmc
jge
dec
mov
add
cmp
sub
mov
stos
sub
sub
push
xchg
mov
cmp
xchg
cmp
mov
dec
les
arpl
loopne
mov
xchg
mov
jno
cmp
cs
sbbb
xchg
imul
push
lock
js
xchg
test
cmpb
loopne
test
jb
rol
or
cmpb
jle
popf
mov
or
sub
loopne
mov
add
jnp
xchg
fnstcw
mov
sbb
mov
rolb
das
xchg
xchg
aas
inc
loope
shlb
inc
mov
push
jl
std
pop
gs
loopne
fisttpll
lds
sbb
pop
fcoms
sub
xchg
ret
int
xor
cmp
outsl
call
cmp
adc
inc
rcr
rorl
mov
cltd
int3
mov
call
cli
mov
dec
dec
mov
mov
aas
div
pavgb
mov
bound
xchg
lds
push
or
push
outsb
mov
cmc
jmp
dec
test
or
sbb
xor
out
fstpt
xor
call
out
loope
push
add
test
rorb
shlb
in
dec
shlb
fnstenv
sub
outsl
ficompl
lods
mov
or
rorb
scas
popf
sti
nop
hlt
sbb
adc
fbld
xchg
sub
rcl
cmc
dec
loop
mov
xchg
pusha
inc
repz
in
rorb
push
mov
cmp
pop
ja
pop
add
movsb
shlb
js
mov
inc
fiadds
cmp
in
inc
inc
outsb
sbb
push
aas
ja
cmpsl
dec
xor
outsb
sbb
cmpsl
mov
mov
in
inc
adcb
and
std
test
xchg
jg
jae
or
shlb
and
stc
sbb
push
mov
mov
xlat
cld
out
inc
cmpsl
ret
push
xor
sub
dec
mov
clc
cmp
add
andb
add
add
sbb
lret
fcompl
ljmp
lret
das
dec
stc
movsb
pusha
mov
pop
add
adc
mov
dec
ljmp
mov
mov
and
mov
jp
jg
int
fisubl
inc
pusha
sub
mov
jns
mov
ffree
adc
stc
test
rorb
lock
jle
cltd
loopne
adc
mov
insb
pop
cmp
jo
fs
lock
pop
mov
add
rorb
push
mov
pusha
push
mov
inc
jae
js
pop
clc
xchg
dec
adc
gs
in
xor
pusha
pusha
mov
push
enter
aas
imul
loopne
pop
filds
lods
loopne
push
and
inc
fstp
pop
aas
lret
ljmp
shr
loop
pusha
loopne
dec
aad
xchg
jb
inc
pusha
sbb
addb
shl
loopne
jecxz
pop
or
sbbb
fimull
sbb
lret
imul
mov
rcr
rol
jmp
mov
in
mov
in
inc
mov
loopne
pop
inc
lcall
xchg
sbb
push
out
or
rolb
mov
loope
sub
jl
push
mov
shlb
fildll
out
cltd
popf
pushaw
shld
sub
adc
or
and
shl
and
mov
xchg
daa
mov
xchg
push
adc
and
and
pop
push
lret
nop
inc
mov
lahf
jecxz
pop
xor
loopne
inc
mov
mov
or
lahf
jne
dec
and
and
cmp
add
in
inc
in
mov
les
and
iret
xchg
xchg
xlat
pop
jnp
jecxz
pop
std
mov
leave
ljmp
and
and
jge
iret
loopne
in
pusha
and
lcall
movsl
cmp
or
and
jno
xchg
pop
in
outsb
inc
push
pusha
subb
jne
mov
mov
and
rolb
int
dec
adc
les
mov
mov
adc
sub
mov
jge
addb
imul
and
jb
and
sbb
ja
push
jl
movl
aam
fisttpl
outsb
adc
pop
pop
mov
mov
sub
loop
push
repz
push
dec
pop
enter
mov
test
sbbb
rolb
adcl
dec
andb
sub
sub
adc
fidivrl
outsb
mov
pop
mov
mov
mov
push
add
loopne
adcl
movl
dec
fsub
mov
cmp
loopne
popf
nop
outsw
dec
shrl
pusha
add
push
jo
add
std
jl
inc
inc
xchg
mov
in
jecxz
adc
popf
out
and
adc
lock
dec
sub
ror
sub
test
rcl
adc
rorl
add
add
inc
rcrb
push
add
shll
jle
das
shlb
inc
das
pop
mov
test
leave
into
fsubrl
mov
and
add
int3
pop
xchg
aaa
cmp
push
clc
js
ftst
push
cmp
push
arpl
inc
mov
test
mov
aaa
jle
out
in
add
pop
call
int3
jle
jne
int
add
push
mov
loopne
clc
loopne
push
andb
lock
aas
sbb
mull
int3
cmpsl
push
bound
add
out
in
lock
inc
inc
or
and
add
jne
popa
mov
out
and
loopne
shll
enter
cltd
daa
data16
loopne
pusha
out
xor
mov
jg
pop
loopne
lds
mov
int3
adc
inc
mov
andb
hlt
shlb
mov
loopne
flds
sub
and
rorb
mov
xchg
sub
inc
cwtl
or
outsb
into
faddl
repnz
inc
or
mov
addr16
popf
movsb
mov
sub
cmpb
cmp
repz
outsb
dec
pop
cmpsb
mov
notb
inc
cmp
fistpl
vmwrite
lds
int3
rorl
push
xchg
out
cltd
sahf
sarl
mov
cmp
jecxz
sti
jns
cmp
or
or
ljmp
add
ds
loopne
insb
popa
daa
das
pop
xchg
adc
xchg
or
add
push
fdivl
shrb
mov
inc
sub
ficomps
in
mov
pushf
mov
repz
imul
inc
cmpsb
and
mov
mov
shlb
add
mov
inc
setnp
jmp
int
movsl
daa
mov
in
xchg
mov
and
fidivrs
pusha
mov
mov
andb
mov
add
and
mov
sub
scas
pop
mov
dec
mov
pusha
pusha
fcmove
jne
add
inc
les
pusha
push
or
sbb
mov
enter
and
pop
push
fucomip
mov
dec
or
inc
cmp
adc
arpl
mov
pusha
jae
or
and
xchg
sbb
scas
sti
jne
out
jo
leave
adc
mov
data16
mov
stc
or
movsb
addb
mov
push
pop
sub
jae
out
and
leave
imul
jecxz
pop
push
hlt
mov
xchg
and
jno
sub
shl
idivl
xor
mov
loopne
ret
jp
fsqrt
pop
mov
pop
in
mov
jp
jnp
movsb
mov
ret
xor
fs
into
cmp
andb
pop
sbb
jge
insb
or
and
adc
in
sti
gs
inc
jae
in
add
push
jecxz
andb
stc
push
cmp
mov
mov
pop
xlat
sbb
cmp
mov
add
push
push
push
push
call
sub
add
imul
lea
and
test
je
mov
push
push
bnd
test
cld
jne
mov
add
push
push
push
push
call
test
jne
xor
jmp
lea
movl
push
push
push
call
cmp
lea
jne
movzbl
or
pop
mov
not
imul
and
jne
call
loop
mov
mov
stc
notrack
sbb
mov
add
add
mov
mov
mov
inc
or
lea
lea
add
lea
add
sub
jmp
push
mov
jmp
mov
loope,pt
pop
pushf
push
es
lock
jne
and
repnz
mov
jnp
add
fcmovne
pop
inc
repz
push
mov
loopne
pop
cmpsl
ljmp
mov
loopne
sbb
dec
sti
sub
mov
lcall
pop
xchg
add
adcb
loopne
mov
or
and
sahf
sub
mov
inc
out
lahf
add
rol
leave
pop
inc
xchg
aas
mov
lds
xchg
adc
dec
andb
in
mov
rolb
ret
loopne
lds
and
mov
xlat
dec
push
xor
and
sahf
pop
lea
jo
stc
ja
mov
adc
aad
into
or
pop
mov
nop
jno
dec
inc
not
xorl
sbb
aas
pop
arpl
sbb
daa
xor
std
mov
pop
faddl
add
or
xchg
inc
std
enter
insl
jns
mov
loopne
mov
cmpsb
shl
sahf
jecxz
cmp
and
mov
mov
or
sar
and
fldl
mov
loopne
shl
loopne
pop
in
mov
mov
clc
adc
jmp
shlb
xchg
push
cmpsl
outsl
sti
sbb
and
into
sahf
inc
xor
cwtl
pop
test
les
stc
mov
fdivrp
push
jbe
cmpsl
add
mov
faddl
outsb
scas
jbe
pop
sbb
jbe
cmp
mov
jnp
loopne
flds
int
popf
adc
xor
pop
test
andb
xor
loopne
xchg
fnstcw
and
push
stc
cmp
out
aas
sub
sbb
xlat
shll
jb
mov
dec
xchg
lods
mov
addb
push
je
push
inc
mov
mov
xchg
ja
xor
lret
pop
xchg
fnsave
cmpsl
add
mov
stc
dec
jl
xor
ja
in
fwait
lret
ss
dec
nop
cmp
and
pusha
cmp
dec
cmp
lock
shll
clc
pop
mov
adc
and
or
inc
mov
dec
mov
incb
mov
mov
ja
andb
push
test
les
shl
inc
aad
dec
out
add
mov
leave
add
mov
mov
iret
outsb
sub
jmp
xor
jp
rolb
mov
add
mov
cmp
mov
sub
mov
mov
sbb
and
pop
jge
cmpsl
xor
dec
xor
imull
xlat
mov
mov
leave
jmp
jae
and
push
cld
mov
lods
inc
and
sbb
mov
call
or
push
add
add
lods
mov
ljmp
mov
mov
loope
inc
pusha
aaa
mov
std
pop
jecxz
ret
and
test
mov
movsl
mov
call
mov
mov
pusha
add
xor
push
lcall
inc
push
mov
nop
fucomip
shrl
inc
jb
mov
mov
mov
push
and
nop
mov
test
adc
sub
add
aas
xchg
test
loopne
adc
in
in
mov
rolb
xor
inc
cmp
js
gs
ss
fidivs
loop
call
ljmp
rolb
dec
and
xchg
in
sarl
shr
dec
mov
mov
add
inc
dec
fisubl
mov
xchg
sbb
adc
and
or
jmp
sbb
movsl
mov
icebp
jecxz
clc
or
clc
pushf
andl
addr16
and
addb
mov
loopne
outsl
popf
sti
imul
xchg
mov
mov
fistps
dec
inc
fyl2x
and
les
cmp
and
dec
cld
pop
pop
or
add
add
shll
pop
sets
repz
cmp
inc
loopne,pn
jle
negl
mov
pusha
loopne
jae
movsb
and
out
add
sbb
pop
inc
mov
sti
jg
loope
stos
aaa
mov
inc
dec
adcl
cmp
orl
scas
pusha
add
lret
imull
add
add
and
cmpsl
lret
fldcw
and
pop
sarb
xchg
les
enter
sbb
adc
and
ret
and
int3
jl
add
xor
sub
pushf
cmc
push
dec
cmp
aam
mov
pusha
xchg
add
adc
popa
jge
push
dec
jmp
mov
dec
mov
call
aaa
inc
aad
lds
xor
popf
xchg
mov
shl
nop
push
jle
add
cli
adc
mov
push
test
and
out
jns
nop
outsl
cmpsb
mov
push
xlat
in
inc
pusha
sbbl
scas
loopne
cld
out
adc
andb
in
stos
mov
cmp
or
mov
test
pusha
fsts
rolb
jnp
pop
or
test
add
pop
push
xchg
shrl
push
inc
jno
cmp
cmc
aam
sub
shlb
mov
lea
test
and
and
mov
gs
ds
or
push
mov
jge
lods
rolb
mov
adc
cmp
push
addr16
pop
push
cmp
mov
ss
mov
sub
filds
mov
fisttpl
sub
in
push
cmp
pop
xchg
push
loope
frstor
cmc
ljmp
cli
inc
xor
and
repz
movsb
shlb
and
rolb
push
pusha
pusha
filds
cli
int
dec
and
scas
push
out
daa
mov
outsl
and
adc
dec
and
mov
pop
sub
pop
shr
insl
mov
add
sbb
cmc
xor
adcl
add
and
sub
hlt
inc
push
addb
pusha
shr
jg
lcall
jg
cs
shrb
roll
pop
jae
push
and
inc
sub
inc
hlt
inc
inc
sarl
inc
cltd
dec
inc
and
popf
inc
iret
push
int3
sub
orb
shlb
test
jb
ss
xchg
sub
and
pusha
in
and
add
mov
xchg
popf
jl
rolb
or
add
cmp
loopne
or
adc
loopne
dec
sahf
xor
xchg
jae
and
mov
addr16
pop
data16
out
andb
inc
inc
push
pop
add
mov
loopne
lock
cmp
dec
push
adc
inc
enter
dec
or
mov
adc
push
dec
jmp
push
add
push
jb
outsb
and
pusha
loopne
add
fiadds
leave
test
mov
mov
loope
test
loopne
mov
addb
in
cmp
loopne
push
cwtl
rorb
add
rolb
bound
push
and
addr16
and
mov
or
fbstp
xchg
ds
test
ret
aaa
leave
or
inc
in
repz
cltd
pop
xchg
bound
and
inc
fs
sbb
aas
in
push
jbe
stc
inc
addb
pop
pop
xor
jle
pusha
add
in
mov
outsb
cmp
les
jecxz
mov
movsb
shlb
mov
pop
add
mov
movsl
rcrb
push
adc
jge
sar
inc
lret
and
mov
movsb
pusha
mov
mov
mov
and
jge
mov
fcmovnu
push
add
sub
pop
orl
sbbb
jnp
xchg
xchg
adc
add
mov
out
popa
or
sbb
cli
dec
adc
out
mov
push
dec
jnp
mov
inc
and
add
adcb
inc
pusha
push
cltd
imul
and
xor
aam
loop
arpl
stos
pcmpgtd
add
stos
add
jmp
xchg
pusha
loope
push
xor
pusha
xorb
call
stos
addb
add
faddl
add
dec
clc
jnp
scas
or
mov
sbb
add
cmpsl
dec
cli
faddl
ja
shlb
dec
push
add
fbld
in
les
fnstenv
add
mov
xchg
adc
inc
sarb
sub
shlb
push
shr
mov
dec
scas
inc
mov
aas
lock
pop
dec
jp
pop
addb
mov
and
ret
push
arpl
inc
adc
rorl
mov
ret
push
sti
loop
sti
jno
dec
movsl
lods
mov
adc
inc
xchg
push
inc
shrb
mov
adcb
dec
push
mov
arpl
mov
shl
dec
push
sbbl
sbb
scas
xlat
jo
loopne
jmp
xchg
inc
inc
fisttps
jno
and
adc
xor
mov
mov
ret
add
pop
or
pusha
mov
outsb
arpl
push
push
test
pop
sbb
shrb
add
enter
xchg
mov
mov
cmp
xor
jno
andb
rolb
rolb
rol
pusha
add
pusha
and
shll
cmpsl
mov
xchg
ds
or
jecxz
fwait
sti
insl
pushf
pop
ret
inc
mov
inc
mov
mov
xor
push
adcl
cmpsl
xchg
in
fcomi
xchg
inc
cmc
and
and
loopne
rorl
inc
fs
and
jp
mov
daa
cltd
mov
sub
push
aaa
daa
fnstsw
and
inc
xchg
rol
aas
mov
fwait
mov
inc
pusha
adcl
add
aam
push
insb
bound
daa
mov
pop
inc
int3
jns
add
rolb
pusha
and
mov
mov
ljmp
enter
add
and
lret
outsb
out
mov
cltd
sbb
push
xor
fidivl
mov
mov
mov
loopne
repnz
mov
mov
loopne
stos
loopne
cli
leave
sub
loopne
andb
jne
fldcw
mov
pusha
cltd
iret
sub
jb
sub
add
ljmp
push
loopne
jg
and
cmp
xchg
inc
pop
or
mov
xchg
fsubrs
and
insl
int3
test
pusha
cwtl
xchg
sub
aaa
imul
shr
xchg
in
mov
and
push
mov
jmp
loopne
and
int
sarb
and
fsts
cmpsl
adc
int
mov
jecxz
adc
add
stos
rol
xor
mov
jnp
lds
mov
mov
add
jl
cmp
negl
loopne
popl
pusha
orb
shrb
jne
rolb
cmp
and
add
sti
icebp
and
mov
ret
inc
shl
sub
data16
and
fdivrp
cmp
je
xchg
addr16
sub
int
add
adc
fwait
andl
inc
mov
push
loop
and
mov
jmp
lahf
xchg
xor
sub
loopne
rolb
pusha
add
dec
jp
cmp
into
cmp
dec
stos
push
addb
sub
adc
repz
lods
dec
fidivrl
jmp
lock
mov
inc
pop
rcrl
adc
mov
mov
loopne
rolb
rclb
mov
inc
xrelease
dec
dec
mov
addr16
cmp
jns
push
mov
ret
inc
xchg
mov
stc
movsb
loopne
jne
syscall
lock
daa
fs
adc
rol
cmp
test
pusha
mov
aas
add
inc
jb
lods
rolb
movsb
rolb
add
ss
jl
jl
test
add
add
rorb
pushf
enter
test
and
imul
cmp
shrb
testl
cmp
and
and
sub
in
pusha
inc
adc
mov
orl
add
mov
lahf
dec
std
add
mov
inc
cwtl
sub
pusha
mov
ja
xchg
sbbl
pusha
mov
les
xchg
subb
jge
addb
jno
xor
es
loopne
mov
sti
das
add
xchg
add
jbe
dec
nop
add
inc
and
aad
loope
ds
and
fsts
xchg
in
jne
mov
mov
in
pusha
add
mov
add
and
scas
shlb
je
lods
and
adc
xchg
mov
test
pusha
loopne
lods
jp
lret
and
sbb
in
int3
popa
imul
es
cli
insl
cltd
lea
sbb
sub
jbe
add
adc
push
mov
mov
ret
enter
movsl
out
ret
dec
cltd
sub
lock
xor
mov
mov
push
or
rolb
inc
lds
push
aaa
jg
or
xchg
insl
xlat
push
andb
inc
sbb
mov
mov
xorb
stc
mov
inc
aam
jp
lds
add
icebp
add
jo
jns
andb
popf
inc
dec
jmp
xchg
lret
xor
add
add
cmp
sbb
pop
nop
gs
mov
jge
and
shll
add
out
cmpsb
loopne
dec
out
pusha
rclb
loopne
pop
sahf
jge
outsl
pusha
xor
add
add
inc
andb
sub
mov
scas
loopne
shrl
ror
shrl
pop
push
loopne
sbb
shl
mov
mov
fs
lcall
in
pusha
add
scas
xchg
pop
out
push
clc
repnz
nop
cld
jae
push
pop
mov
cmp
add
clc
repnz
nop
cld
jae
add
leave
xchg
add
clc
repnz
nop
cld
jae
add
in
dec
test
push
mov
leave
nop
jmp
add
add
loop
clc
repnz
nop
cld
jae
sub
test
add
mov
test
add
clc
repnz
nop
cld
jae
ja
mov
mov
clc
repnz
nop
cld
jae
xchg
cmp
push
clc
repnz
nop
cld
jae
add
add
ja
add
insb
inc
add
jbe
add
add
imul
je
nop
push
mov
leave
nop
jmp
add
stc
lret
adc
clc
repnz
nop
cld
jae
ja
lcall
addr16
clc
repnz
nop
cld
jae
shlb
add
mov
cld
mov
xchg
ret
out
add
xchg
add
ret
mov
push
mov
xchg
ret
test
daa
add
xchg
add
mov
lods
add
clc
repnz
nop
cld
jae
add
add
add
push
clc
repnz
nop
cld
jae
sub
rolb
jae
add
movsl
mov
clc
repnz
nop
cld
jae
cmp
je
mov
rcrb
xchg
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
xchg
mov
jno
cs
dec
scas
shl
pop
push
mov
xchg
ret
add
add
jle
pop
icebp
mov
clc
repnz
nop
cld
jae
aam
add
mov
and
repnz
nop
cld
jae
add
out
push
push
mov
xchg
ret
add
ja
xchg
cmp
jmp
mov
xchg
ret
imul
das
push
cmp
push
xor
repnz
nop
cld
jae
or
shlb
cs
int3
insl
add
nop
push
mov
leave
nop
jmp
mov
add
mov
ret
roll
push
mov
leave
nop
jmp
test
add
jno
dec
jne
clc
repnz
nop
cld
jae
mov
nop
nop
cld
jae
add
jge
ja
add
rclb
push
push
mov
xchg
ret
and
add
jns
jbe
dec
movzwl
clc
repnz
nop
cld
jae
ja
add
leave
fstpl
mov
xchg
ret
ja
cld
mov
jnp
inc
push
mov
xchg
ret
add
add
fistpl
clc
repnz
nop
cld
jae
add
add
popa
mov
nop
push
mov
leave
nop
jmp
add
lcall
push
mov
leave
nop
jmp
cmp
push
add
push
mov
loopne
sti
fld1
push
mov
xchg
ret
out
add
add
jge
add
add
mov
clc
repnz
nop
cld
jae
inc
add
inc
or
and
sub
insb
clc
repnz
nop
cld
jae
imul
add
add
nop
push
mov
leave
nop
jmp
add
add
rep
push
mov
xchg
ret
jnp
add
add
in
jle
add
nop
jmp
cmp
add
add
add
repnz
nop
cld
jae
add
add
dec
sub
enter
xchg
ret
add
mov
add
add
add
push
mov
xchg
ret
enter
pop
in
mov
push
nop
push
mov
leave
nop
jmp
daa
add
add
jge
lret
push
mov
xchg
ret
add
push
add
mov
clc
repnz
nop
cld
jae
add
jno
nop
push
mov
leave
nop
jmp
je
add
add
cmpsb
and
push
mov
leave
nop
jmp
je
add
add
jno
mov
mov
clc
repnz
nop
cld
jae
and
jnp
repz
dec
in
inc
clc
repnz
nop
cld
jae
sub
mov
lcall
repnz
nop
cld
jae
jae
and
mov
add
call
repnz
nop
cld
jae
jle
add
in
sar
nop
nop
cld
jae
add
add
in
leave
nop
jmp
add
add
xor
add
mov
clc
repnz
nop
cld
jae
cld
jo
stc
add
adc
push
mov
leave
nop
jmp
ja
sub
sbb
clc
repnz
nop
cld
jae
add
xor
add
nop
cld
jae
mov
inc
push
add
add
loopne
adc
cmp
add
repnz
nop
cld
jae
add
mov
dec
push
mov
xchg
ret
mov
add
add
imul
clc
repnz
nop
cld
jae
add
repz
and
push
mov
xchg
ret
ja
jns
add
or
add
push
mov
xchg
ret
jle
add
push
cmpsb
add
shlb
inc
clc
repnz
nop
cld
jae
stc
dec
jle
add
decl
nop
cld
jae
add
xor
add
clc
repnz
nop
cld
jae
xchg
out
push
mov
xchg
ret
mov
jns
stc
jnp
add
mov
push
mov
xchg
ret
movl
pusha
mov
fwait
push
mov
xchg
ret
add
out
ja
cmp
sti
xchg
push
mov
xchg
ret
add
add
mov
clc
repnz
nop
cld
jae
rolb
sub
sub
cmp
push
mov
leave
nop
jmp
imul
add
add
dec
cmp
repnz
nop
cld
jae
mov
add
cmp
mov
push
mov
xchg
ret
jle
mov
inc
add
out
xrelease
push
mov
xchg
ret
add
add
add
add
add
clc
repnz
nop
cld
jae
add
mov
inc
addb
inc
clc
repnz
nop
cld
jae
xchg
cld
jns
ja
mov
push
nop
push
mov
leave
nop
jmp
add
jns
rolb
dec
and
push
mov
xchg
ret
je
lcall
sar
repnz
nop
cld
jae
ja
jo
add
lock
add
repnz
nop
cld
jae
rolb
push
lock
nop
nop
cld
jae
add
add
or
mov
clc
repnz
nop
cld
jae
cmpsl
jo
stc
add
add
mov
clc
repnz
nop
cld
jae
in
enter
add
movsb
loopne
stos
call
clc
repnz
nop
cld
jae
das
add
and
aad
xor
dec
ss
clc
repnz
nop
cld
jae
lock
mov
mov
add
xchg
or
jg
push
mov
lahf
mov
loopne
push
clc
repnz
nop
cld
jae
xchg
add
add
cmpsl
lock
push
mov
xchg
ret
aam
add
and
leave
push
clc
repnz
nop
cld
jae
mov
add
pusha
rclb
inc
add
add
jge
add
mov
call
clc
repnz
nop
cld
jae
add
add
add
xchg
cs
clc
repnz
nop
cld
jae
push
daa
les
xchg
add
jmp
xor
add
add
jle
add
cmp
imul
loopne
add
clc
repnz
nop
cld
jae
add
clc
repnz
nop
cld
jae
mov
jns
imul
pop
clc
repnz
nop
cld
jae
inc
out
inc
add
add
stos
clc
repnz
nop
cld
jae
rolb
test
decl
nop
nop
cld
jae
jge
rolb
add
icebp
pop
push
mov
xchg
ret
mov
dec
add
clc
dec
inc
clc
repnz
nop
cld
jae
sub
mov
xor
fistpl
clc
repnz
nop
cld
jae
add
add
add
sub
repnz
nop
cld
jae
mov
mov
jge
ret
clc
repnz
nop
cld
jae
cmpsb
lock
daa
dec
mov
add
add
clc
repnz
nop
cld
jae
rolb
test
shll
repnz
nop
cld
jae
enter
jns
adc
nop
jmp
add
add
mov
add
clc
repnz
nop
cld
jae
pusha
add
add
lea
nop
push
mov
leave
nop
jmp
add
adc
mov
clc
repnz
nop
cld
jae
add
add
add
add
inc
in
push
mov
xchg
ret
xor
add
mov
addb
nop
cld
jae
add
test
in
add
add
clc
repnz
nop
cld
jae
push
add
mov
clc
repnz
nop
cld
jae
enter
sbb
mov
leave
nop
jmp
je
add
xchg
pcmpgtb
xchg
ret
add
repz
or
push
mov
add
clc
repnz
nop
cld
jae
add
stc
loope
movsb
clc
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
out
jbe
mov
rcrb
nop
cld
jae
add
add
ljmp
clc
repnz
nop
cld
jae
add
mov
mov
add
in
leave
nop
jmp
jns
jno
test
nop
push
mov
leave
nop
jmp
add
add
mov
leave
nop
jmp
add
mov
add
repz
loopne
sub
clc
repnz
nop
cld
jae
add
xchg
pop
nop
push
mov
leave
nop
jmp
xchg
add
add
cmpl
nop
push
mov
leave
nop
jmp
je
add
jle
mov
nop
push
mov
leave
nop
jmp
add
add
in
add
lcall
nop
nop
cld
jae
add
push
mov
add
outsl
loopne
mov
xchg
ret
xchg
in
stos
mov
nop
push
mov
leave
nop
jmp
add
repz
repnz
nop
cld
jae
mov
jo
add
add
nop
nop
cld
jae
in
add
add
add
clc
repnz
nop
cld
jae
test
xor
test
add
push
mov
xchg
ret
movl
push
mov
xchg
ret
lock
dec
add
and
hlt
test
inc
and
loopne
sbb
nop
cld
jae
xchg
ja
rcrl
add
rolb
aam
enter
movb
mov
xchg
ret
add
xchg
mov
add
enter
nop
cld
jae
cmpsl
movl
outsb
sub
repnz
nop
cld
jae
cmpsl
add
add
xor
clc
repnz
nop
cld
jae
add
add
call
clc
repnz
nop
cld
jae
mov
inc
add
sbb
dec
clc
repnz
nop
cld
jae
enter
or
add
inc
adc
nop
jmp
add
or
ja
roll
jne
clc
repnz
nop
cld
jae
ja
cmpsl
add
xlat
add
clc
repnz
nop
cld
jae
test
xchg
add
adc
and
mov
clc
repnz
nop
cld
jae
mov
shlb
add
mov
add
add
repnz
nop
cld
jae
add
movsb
rol
xor
push
mov
xchg
ret
add
jnp
enter
add
incl
add
nop
jmp
add
or
fwait
clc
repnz
nop
cld
jae
mov
repz
andb
nop
nop
cld
jae
add
or
inc
das
jae
adc
xor
add
push
mov
xchg
ret
pusha
jno
add
cmp
mov
xchg
ret
imul
leave
add
add
andb
loopne
dec
fisubs
loopne
xor
clc
repnz
nop
cld
jae
daa
add
rclb
xchg
inc
add
add
add
cmpsl
add
push
nop
push
mov
leave
nop
jmp
stc
add
add
add
jo
or
cmp
cmp
add
clc
repnz
nop
cld
jae
add
add
add
pop
je
clc
repnz
nop
cld
jae
add
xor
call
cld
jae
daa
rolb
and
push
shl
clc
repnz
nop
cld
jae
pusha
add
je
loopne
hlt
loope
and
add
add
xor
add
add
add
insl
push
clc
repnz
nop
cld
jae
add
imul
fld1
push
mov
xchg
ret
cld
add
add
add
leave
arpl
mov
xchg
ret
inc
sub
stc
add
pop
cmpsb
clc
cmc
push
clc
repnz
nop
cld
jae
xchg
add
mov
clc
repnz
nop
cld
jae
push
push
add
add
cs
add
clc
repnz
nop
cld
jae
add
jge
pusha
add
pause
push
mov
leave
nop
jmp
add
test
add
mov
xchg
ret
cmpsb
add
enter
add
add
push
xchg
imul
jae
add
pop
push
add
clc
repnz
nop
cld
jae
or
mov
add
xor
add
repnz
nop
cld
jae
lcall
or
nop
push
mov
leave
nop
jmp
imul
lock
fld1
clc
repnz
nop
cld
jae
in
add
add
daa
pop
mov
clc
repnz
nop
cld
jae
jae
add
add
cmpsl
imull
push
mov
xchg
ret
add
mov
or
xor
shr
clc
repnz
nop
cld
jae
add
pusha
and
nop
cld
jae
add
jno
xchg
add
mov
clc
repnz
nop
cld
jae
cmp
pop
xor
nop
push
mov
leave
nop
jmp
add
add
add
add
clc
repnz
nop
cld
jae
add
sarb
test
and
clc
repnz
nop
cld
jae
cmpsb
das
xchg
add
clc
repnz
nop
cld
jae
add
add
out
pop
mov
push
mov
xchg
ret
jbe
add
out
cmp
add
push
clc
repnz
nop
cld
jae
add
sub
add
add
jns
xbegin
jae
or
in
mov
cmpsl
es
xchg
aad
add
clc
repnz
nop
cld
jae
add
inc
out
mov
add
clc
repnz
nop
cld
jae
pop
push
enter
ret
push
mov
xchg
ret
out
add
add
add
xor
nop
cld
jae
xchg
cmpsb
aam
leave
jbe
add
pop
push
mov
xchg
ret
mov
and
cmp
das
call
push
mov
xchg
ret
pusha
push
inc
add
add
jecxz
dec
cmp
repnz
nop
cld
jae
sub
jae
cld
jns
sub
clc
repnz
nop
cld
jae
add
add
jge
enter
movb
aaa
insb
inc
add
xor
fistpl
clc
repnz
nop
cld
jae
jge
cs
add
nop
cld
jae
add
jns
out
cmpsl
je
clc
movsb
andb
jb
clc
repnz
nop
cld
jae
inc
pusha
add
cmp
mov
leave
nop
jmp
je
cmp
in
add
lret
clc
repnz
nop
cld
jae
enter
add
cmpsb
inc
fwait
push
mov
xchg
ret
or
jo
add
leave
add
add
clc
repnz
nop
cld
jae
add
ficompl
leave
nop
push
mov
leave
nop
jmp
add
add
xchg
jge
fnstcw
clc
repnz
nop
cld
jae
add
add
jne
clc
repnz
nop
cld
jae
add
inc
fld1
clc
repnz
nop
cld
jae
je
push
add
add
loopne
push
clc
repnz
nop
cld
jae
add
xchg
add
daa
test
jne
jmp
add
ja
enter
add
cmp
add
inc
mov
aam
push
mov
nop
cld
jae
add
xchg
mov
dec
cmp
repnz
nop
cld
jae
out
add
dec
push
movsl
add
clc
repnz
nop
cld
jae
inc
add
movzwl
clc
repnz
nop
cld
jae
add
add
clc
repnz
nop
cld
jae
add
fisttpl
repnz
nop
cld
jae
mov
inc
add
repnz
nop
cld
jae
add
add
xchg
add
nop
nop
cld
jae
jbe
add
in
aam
sbb
mov
xchg
ret
inc
inc
add
add
add
cmpsl
popa
push
mov
xchg
ret
mov
cmpsb
add
add
cmp
mov
xchg
ret
leave
test
shlb
push
or
push
mov
leave
nop
jmp
leave
jae
in
add
in
mov
nop
push
mov
leave
nop
jmp
aam
ja
jae
jns
les
mov
xchg
ret
sarb
jle
add
xchg
add
repnz
nop
cld
jae
add
add
rolb
mov
push
clc
repnz
nop
cld
jae
add
add
outsb
xchg
fistpl
nop
push
mov
leave
nop
jmp
add
xor
nop
cld
jae
xchg
dec
add
stc
imul
xor
push
mov
xchg
ret
ja
test
out
mov
add
pusha
clc
repnz
nop
cld
jae
add
xchg
add
les
jg
clc
repnz
nop
cld
jae
pusha
add
add
jmp
cmpsl
add
mov
ja
xchg
xlat
push
nop
push
mov
leave
nop
jmp
jns
add
das
add
dec
push
clc
repnz
nop
cld
jae
add
push
add
add
repnz
nop
cld
jae
xchg
add
add
push
jnp
clc
repnz
nop
cld
jae
add
test
pop
test
nop
push
mov
leave
nop
jmp
enter
add
add
cmpl
mov
leave
nop
jmp
jge
add
add
pusha
rorb
clc
repnz
nop
cld
jae
xchg
lcall
insb
add
xorb
subl
clc
repnz
nop
cld
jae
add
pop
in
enter
push
mov
leave
nop
jmp
jae
repz
add
cmp
cltd
mov
push
mov
xchg
ret
add
cmp
in
movsb
clc
repnz
nop
cld
jae
add
add
add
add
jmp
ja
jae
add
add
jnp
add
cs
mov
pop
clc
repnz
nop
cld
jae
add
ja
add
pusha
rcpps
xchg
xchg
inc
add
test
ja
mov
mov
leave
nop
jmp
pop
add
fistps
push
mov
leave
nop
jmp
push
add
in
add
lcall
nop
nop
cld
jae
add
add
test
jno
and
mov
nop
push
mov
leave
nop
jmp
jbe
add
add
ficomps
mov
clc
repnz
nop
cld
jae
add
cld
add
clc
repnz
nop
cld
jae
pop
test
add
inc
mov
mov
sti
nop
push
mov
leave
nop
jmp
test
mov
mov
add
mov
clc
repnz
nop
cld
jae
xor
mov
mov
leave
nop
jmp
push
add
inc
jo
add
inc
xor
roll
push
mov
leave
nop
jmp
or
jae
jnp
jp
jne
stc
nop
push
mov
leave
nop
jmp
add
add
add
cmp
push
mov
leave
nop
jmp
add
push
mov
mov
xchg
ret
add
add
in
rolb
dec
add
cmp
mov
push
mov
xchg
ret
das
ja
ja
out
add
or
test
add
nop
nop
cld
jae
xchg
stc
mov
clc
repnz
nop
cld
jae
add
add
xor
nop
push
mov
leave
nop
jmp
add
jge
add
add
repnz
nop
cld
jae
sub
xor
add
icebp
clc
repnz
nop
cld
jae
xchg
add
add
adc
jnp
or
repnz
nop
cld
jae
add
rolb
ja
sbb
repnz
nop
cld
jae
out
add
rolb
in
test
clc
repnz
nop
cld
jae
add
adc
add
nop
jmp
cld
add
test
pop
add
nop
push
mov
leave
nop
jmp
jno
inc
and
and
xchg
inc
add
ja
add
mov
add
xchg
nop
push
mov
leave
nop
jmp
jbe
add
add
push
cmp
nop
push
mov
leave
nop
jmp
lcall
push
clc
repnz
nop
cld
jae
xchg
xchg
cmp
daa
inc
add
clc
repnz
nop
cld
jae
in
pop
jo
jle
daa
lcall
push
mov
leave
nop
jmp
add
and
jo
shlb
inc
xor
nop
cld
jae
add
add
xor
mov
clc
repnz
nop
cld
jae
cmp
das
add
sub
push
mov
xchg
ret
add
cmp
cmpsb
add
pusha
sti
push
nop
push
mov
leave
nop
jmp
jo
cmpsb
daa
add
add
jmp
enter
add
add
add
add
les
lcall
jns
add
add
jnp
add
add
shrb
sarl
clc
repnz
nop
cld
jae
out
or
add
jbe
add
mov
jbe
xchg
push
adc
push
mov
leave
nop
jmp
inc
add
add
repz
lret
add
clc
repnz
nop
cld
jae
add
mov
fld1
clc
repnz
nop
cld
jae
lock
add
mov
clc
repnz
nop
cld
jae
inc
add
sub
cmc
pop
push
mov
xchg
ret
daa
stc
add
pop
ja
xchg
outsl
push
clc
repnz
nop
cld
jae
imul
and
add
ror
mov
push
mov
xchg
ret
add
add
lock
mov
and
repnz
nop
cld
jae
add
in
add
add
dec
mov
nop
push
mov
leave
nop
jmp
in
jle
mov
xchg
mov
jmp
filds
nop
nop
cld
jae
jns
push
push
mov
pusha
mulb
push
clc
repnz
nop
cld
jae
add
add
pop
leave
add
sub
mov
push
mov
leave
nop
jmp
add
jge
jnp
leave
inc
jmp
outsl
inc
add
add
jno
ja
mov
or
and
imulb
decl
clc
repnz
nop
cld
jae
xchg
add
je
add
add
mov
clc
repnz
nop
cld
jae
push
dec
add
shlb
je
nop
push
mov
leave
nop
jmp
jbe
pusha
mov
add
nop
jmp
lock
arpl
pop
call
nop
jmp
pusha
enter
sbb
push
mov
xchg
ret
pusha
add
jns
les
int
sar
nop
nop
cld
jae
add
cmpsb
mov
mov
push
mov
xchg
ret
add
push
enter
rolb
nop
push
mov
leave
nop
jmp
jns
add
inc
mov
mov
repnz
nop
cld
jae
mov
add
fistpl
push
mov
xchg
ret
xchg
add
repz
push
push
mov
xchg
ret
je
push
add
lcall
inc
dec
cmp
clc
repnz
nop
cld
jae
in
mov
xchg
mov
clc
repnz
nop
cld
jae
add
pusha
stos
mov
clc
repnz
nop
cld
jae
add
gs
clc
repnz
nop
cld
jae
cmp
shrb
cmpsl
mov
adc
nop
nop
cld
jae
add
ja
lods
mov
clc
repnz
nop
cld
jae
pop
jno
add
push
js
add
push
mov
leave
nop
jmp
add
enter
jge
les
loopne
in
fistpl
push
mov
xchg
ret
ja
jno
cld
add
and
nop
nop
cld
jae
add
out
add
add
mov
mov
adc
repnz
nop
cld
jae
add
je
add
mov
leave
nop
jmp
jns
leave
add
add
push
cmpsl
cmp
nop
push
mov
leave
nop
jmp
add
push
or
xchg
push
clc
repnz
nop
cld
jae
test
jno
add
add
mov
nop
push
mov
leave
nop
jmp
add
test
nop
cld
jae
push
sub
add
add
add
in
leave
nop
jmp
add
or
add
add
pop
push
mov
xchg
ret
add
enter
add
add
cmpl
nop
push
mov
leave
nop
jmp
add
enter
mov
test
repnz
call
nop
jmp
add
in
pusha
push
mov
xchg
ret
lock
add
inc
jbe
add
jne
clc
repnz
nop
cld
jae
dec
add
xor
jo
loopne
loopne
add
nop
nop
cld
jae
xor
add
jle
jle
mov
clc
repnz
nop
cld
jae
add
add
add
jge
andb
jno
jne
clc
repnz
nop
cld
jae
je
ja
das
lcall
mov
xchg
ret
mov
add
add
call
push
mov
leave
nop
jmp
enter
mov
add
push
call
addb
sub
and
inc
add
and
jle,pn
pop
jne
clc
repnz
nop
cld
jae
add
das
adc
push
mov
leave
nop
jmp
mov
add
shrb
and
rclb
clc
repnz
nop
cld
jae
imul
jns
mov
add
clc
repnz
nop
cld
jae
add
pop
pop
add
clc
repnz
nop
cld
jae
mov
mov
or
cld
jae
add
rolb
cmpsl
inc
add
and
fucomi
jnp
incl
imul
add
add
add
enter
pop
push
push
mov
xchg
ret
add
leave
repz
mov
jns
push
mov
jmp
mov
dec
xchg
popa
int3
pop
add
add
nop
xchg
sub
push
mov
xchg
ret
jle
mov
les
add
clc
repnz
nop
cld
jae
add
rol
loopne
not
push
mov
xchg
ret
add
add
xchg
add
scas
call
clc
repnz
nop
cld
jae
xchg
add
add
cld
jae
jno
add
xchg
push
mov
nop
nop
cld
jae
add
mov
push
mov
xchg
ret
add
ds
enter
mov
repnz
nop
cld
jae
lcall
dec
sahf
fisttpl
cmc
fs
add
xchg
add
nop
push
mov
leave
nop
jmp
test
add
add
add
inc
adc
nop
cld
jae
add
add
cld
add
add
xorl
clc
repnz
nop
cld
jae
add
ret
repnz
nop
cld
jae
jnp
pop
add
int3
pop
mov
push
mov
xchg
ret
add
add
add
mov
addb
and
clc
repnz
nop
cld
jae
xchg
add
mov
xchg
ret
mov
add
test
ja
add
mov
clc
repnz
nop
cld
jae
add
aam
sub
outsl
push
clc
repnz
nop
cld
jae
add
add
add
leave
cmpsb
andb
mov
nop
push
mov
leave
nop
jmp
dec
daa
xchg
add
repz
push
mov
xchg
ret
add
add
add
cmp
les
repnz
nop
cld
jae
jae
les
mov
adc
repnz
nop
cld
jae
lock
jo
mov
dec
cmp
repnz
nop
cld
jae
add
lock
add
mov
leave
nop
jmp
pop
mov
lock
add
ja
mov
repnz
nop
cld
jae
add
push
mov
xchg
ret
pop
add
xchg
rorb
aam
leave
clc
repnz
nop
cld
jae
je
test
add
add
pusha
orb
std
test
push
mov
xchg
ret
ja
leave
mov
jne
push
push
mov
xchg
ret
add
add
aas
lea
clc
repnz
nop
cld
jae
lcall
push
nop
push
mov
leave
nop
jmp
cmpsb
and
or
add
jle
cmp
dec
aas
lss
clc
repnz
nop
cld
jae
add
pop
clc
repnz
nop
cld
jae
add
sarb
icebp
out
idiv
fidivrl
rolb
add
add
pop
add
add
add
add
add
add
add
mov
repnz
nop
cld
jae
enter
add
inc
inc
ljmp
nop
push
mov
leave
nop
jmp
lcall
push
mov
xchg
ret
test
add
add
ret
jo
nop
push
mov
leave
nop
jmp
jo
add
add
cmpl
nop
nop
cld
jae
dec
cmp
add
push
mov
xchg
ret
les
add
add
cmp
adc
mov
xchg
ret
add
add
rolb
add
mov
clc
repnz
nop
cld
jae
add
mov
cwtl
xchg
cld
jae
add
shlb
add
push
sub
pusha
xchg
mov
jle
nop
push
mov
leave
nop
jmp
mov
cmpsl
lock
iret
mov
clc
repnz
nop
cld
jae
ja
add
adc
repnz
nop
cld
jae
add
add
add
leave
push
nop
push
mov
leave
nop
jmp
jge
lcall
and
push
mov
xchg
ret
enter
add
pop
clc
repnz
nop
cld
jae
add
add
add
add
dec
imul
cld
jae
add
nop
push
mov
leave
nop
jmp
mov
add
jno
add
clc
repnz
nop
cld
jae
out
imul
lock
add
mov
clc
repnz
nop
cld
jae
ja
xchg
push
fmuls
hlt
shlb
add
clc
repnz
nop
cld
jae
add
jbe
add
pop
push
push
mov
xchg
ret
add
mov
add
jo
cs
mov
out
clc
repnz
nop
cld
jae
add
or
repnz
nop
cld
jae
ja
add
arpl
lret
mov
leave
nop
jmp
and
test
add
in
push
mov
xchg
ret
pusha
add
das
mov
add
clc
repnz
nop
cld
jae
add
add
mov
nop
push
mov
leave
nop
jmp
ja
dec
lock
repz
nop
nop
cld
jae
add
and
add
mov
rorl
mov
xchg
ret
add
ds
add
ret
inc
jp
add
push
mov
xchg
ret
add
cmpsl
and
es
mov
clc
repnz
nop
cld
jae
add
jbe
add
leave
mov
clc
repnz
nop
cld
jae
add
add
add
aaa
pusha
clc
repnz
nop
cld
jae
mov
add
add
loopne
push
jmp
xlat
clc
repnz
nop
cld
jae
ja
ja
inc
jp
jo
pop
clc
repnz
nop
cld
jae
add
xchg
xchg
add
cmp
ja
fs
repnz
nop
cld
jae
push
add
inc
xor
inc
add
add
jns
add
and
orb
inc
or
mov
pop
nop
push
mov
leave
nop
jmp
xchg
add
xchg
add
mov
xchg
ret
add
inc
mov
add
repnz
add
nop
push
mov
leave
nop
jmp
add
add
pop
add
and
clc
repnz
nop
cld
jae
stc
add
ja
add
ja
rclb
nop
jmp
cmpsl
add
add
jecxz
pop
cmp
mov
xchg
ret
add
xchg
xchg
test
inc
lods
clc
repnz
nop
cld
jae
xchg
out
aam
in
and
icebp
mov
push
mov
xchg
ret
inc
add
add
shrb
mov
incl
daa
jo
mov
daa
jns
jbe
jbe
cld
or
sti
not
push
mov
xchg
ret
add
add
jo
add
mov
push
mov
xchg
ret
daa
push
add
jno
decb
pop
nop
push
mov
leave
nop
jmp
add
les
pop
fld1
push
mov
xchg
ret
add
stc
add
add
imul
mov
leave
nop
jmp
test
cmpsl
add
add
push
mov
xchg
ret
add
add
add
sbb
je
add
jae
cmp
out
aam
add
fld1
jmp
add
ja
add
or
add
or
push
add
clc
repnz
nop
cld
jae
add
add
je
lock
jmp
mov
leave
nop
jmp
sub
pop
add
rorl
in
leave
nop
jmp
add
imul
fdivrl
adc
repnz
nop
cld
jae
enter
pop
in
push
push
mov
xchg
ret
add
add
add
stos
and
push
clc
repnz
nop
cld
jae
or
pop
lcall
call
clc
repnz
nop
cld
jae
out
sub
xchg
mov
adc
repnz
nop
cld
jae
leave
mov
sbb
push
mov
xchg
ret
add
rolb
rolb
mov
rorb
clc
repnz
nop
cld
jae
sub
add
lock
and
dec
nop
push
mov
leave
nop
jmp
jno
or
pusha
jo
add
repnz
nop
cld
jae
out
repz
add
movsb
loopne
cli
jae
sbb
repnz
nop
cld
jae
enter
add
sti
mov
push
mov
xchg
ret
jae
cmpsb
jge
add
rclb
push
mov
add
inc
int3
ljmp
add
jb
lret
stos
push
mov
xchg
ret
add
push
jns
add
lock
push
push
mov
xchg
ret
mov
add
push
xchg
clc
repnz
nop
cld
jae
das
enter
add
stc
lods
shl
mov
rep
push
mov
xchg
ret
rolb
xchg
add
add
jmp
add
add
push
and
rorl
nop
cld
jae
jno
test
add
enter
cld
or
in
leave
nop
jmp
repz
inc
and
and
clc
repnz
nop
cld
jae
ja
xchg
mov
jns
push
es
jecxz
repnz
nop
cld
jae
inc
add
inc
mov
fdivrp
repnz
nop
cld
jae
push
add
pop
jmp
test
add
add
add
jo
add
mov
je
clc
repnz
nop
cld
jae
jnp
add
insb
inc
add
add
add
cmp
es
dec
andb
sub
xor
push
mov
xchg
ret
add
add
push
xchg
add
les
inc
dec
arpl
inc
add
pop
out
sub
imul
and
out
add
push
mov
xchg
ret
add
add
ds
and
subb
push
and
inc
add
add
jbe
add
add
lret
pusha
loop
fcmovu
add
clc
repnz
nop
cld
jae
add
add
jg
clc
repnz
nop
cld
jae
jge
inc
add
sub
lock
movzwl
nop
push
mov
leave
nop
jmp
pop
add
pusha
add
push
push
mov
xchg
ret
add
test
cmpsb
mov
push
mov
leave
nop
jmp
add
add
pop
imul
clc
repnz
nop
cld
jae
add
aam
add
add
add
fisttps
mov
xchg
ret
add
mov
mov
push
mov
xchg
ret
add
add
mov
repnz
nop
cld
jae
add
add
repz
stos
sub
push
mov
xchg
ret
jge
das
pop
repz
and
push
mov
leave
nop
jmp
add
imul
add
repnz
nop
cld
jae
shlb
add
add
flds
gs
inc
add
inc
ds
add
ds
mov
mov
xchg
ret
add
jo
add
add
pop
sub
inc
cmp
repnz
nop
cld
jae
pusha
xchg
mov
or
mov
xchg
ret
xchg
lock
mov
clc
repnz
nop
cld
jae
add
cmp
add
shr
clc
repnz
nop
cld
jae
in
mov
add
lcall
cld
jae
jae
xor
pop
add
add
mov
clc
repnz
nop
cld
jae
add
pop
add
jbe
and
jle
and
sub
clc
repnz
nop
cld
jae
add
add
mov
cmp
nop
jmp
sub
add
stos
and
clc
repnz
nop
cld
jae
add
int
nop
push
mov
leave
nop
jmp
add
add
add
test
out
inc
and
clc
repnz
nop
cld
jae
add
add
and
dec
fld1
push
mov
xchg
ret
add
add
add
add
mov
cmp
ret
add
add
test
cmpsb
mov
mov
nop
push
mov
leave
nop
jmp
pusha
add
jne
add
lock
add
add
add
shl
das
xor
mov
clc
repnz
nop
cld
jae
jge
add
mov
clc
repnz
nop
cld
jae
add
jae
add
xchg
clc
repnz
nop
cld
jae
add
cmpsb
add
jbe
test
mov
aaa
push
push
mov
xchg
ret
dec
sub
push
adc
call
clc
repnz
nop
cld
jae
add
add
sbb
nop
cld
jae
cmpsl
in
xchg
movl
mov
nop
push
mov
leave
nop
jmp
add
add
inc
xchg
clc
repnz
nop
cld
jae
cmp
cmp
sub
stc
add
clc
repnz
nop
cld
jae
cmpsb
leave
add
add
clc
repnz
nop
cld
jae
add
add
jae
pop
push
clc
repnz
nop
cld
jae
out
add
add
add
lock
xor
add
clc
repnz
nop
cld
jae
add
add
add
nop
cld
jae
add
jae,pn
add
xchg
sub
inc
cmp
call
clc
repnz
nop
cld
jae
xchg
je,pn
loop
addb
loopne
push
push
mov
xchg
ret
xor
add
add
add
add
call
nop
jmp
movl
add
clc
repnz
nop
cld
jae
add
repz
add
push
aaa
pop
push
mov
xchg
ret
mov
mov
add
add
rep
nop
push
mov
leave
nop
jmp
stc
xor
cmpsl
xor
mov
xchg
ret
xor
or
add
clc
repnz
nop
cld
jae
mov
add
call
clc
repnz
nop
cld
jae
add
out
enter
cmpsl
mov
nop
cld
jae
jns
add
or
add
pop
push
popa
nop
push
mov
leave
nop
jmp
add
jnp
inc
add
das
shr
clc
repnz
nop
cld
jae
add
add
mov
xchg
ret
add
add
xchg
pusha
loopne
pushl
clc
repnz
nop
cld
jae
jnp
add
add
nop
push
mov
leave
nop
jmp
add
or
fcomps
lods
add
clc
repnz
nop
cld
jae
add
aam
imul
out
pop
push
mov
xchg
ret
repz
lock
add
add
clc
repnz
nop
cld
jae
add
add
add
dec
mov
nop
push
mov
leave
nop
jmp
add
push
mov
xchg
ret
jns
add
add
enter
call
cld
jae
aam
jnp
add
test
sbb
clc
repnz
nop
cld
jae
jbe
add
mov
fistpl
clc
repnz
nop
cld
jae
mov
imul
clc
repnz
nop
cld
jae
cmpsb
pop
jge
add
push
mov
xchg
ret
daa
add
ror
cld
rol
dec
clc
repnz
nop
cld
jae
add
add
add
jns
loopne
add
clc
repnz
nop
cld
jae
add
enter
add
push
mov
xchg
ret
jns
jge
add
stc
add
clc
repnz
nop
cld
jae
jns
movl
push
mov
xchg
ret
pusha
add
shlb
add
gs
add
lock
test
pusha
lcall
in
leave
nop
jmp
add
add
ror
mov
push
dec
push
mov
xchg
ret
add
imul
repnz
nop
cld
jae
jno
les
lahf
fld1
clc
repnz
nop
cld
jae
xchg
pusha
add
das
and
nop
cld
jae
mov
enter
jge
pusha
inc
mov
dec
cmp
repnz
nop
cld
jae
add
add
and
pop
add
push
mov
xchg
ret
cmpsb
sub
xchg
pop
pushl
push
mov
xchg
ret
push
jo
pop
inc
das
enter
mov
nop
nop
cld
jae
jno
and
push
nop
push
mov
leave
nop
jmp
test
push
add
je
ss
sbb
repnz
nop
cld
jae
add
jo
jge
push
aam
pop
dec
nop
push
mov
leave
nop
jmp
mov
ja
add
add
pop
call
clc
repnz
nop
cld
jae
mov
add
push
roll
jae
add
test
aam
inc
add
add
clc
repnz
nop
cld
jae
pop
add
shlb
repnz
nop
cld
jae
das
in
cld
add
xchg
or
addr16
add
add
sub
sarb
ja
clc
repnz
nop
cld
jae
cmp
add
imul
clc
repnz
nop
cld
jae
add
mov
mov
nop
push
mov
leave
nop
jmp
mov
jnp
pop
out
imul
jmp
daa
das
add
repz
or
add
nop
push
mov
leave
nop
jmp
cmpsb
add
inc
push
out
mov
mov
xchg
ret
pusha
add
sub
inc
cmpsb
pop
fistpl
push
mov
xchg
ret
add
add
xchg
inc
add
nop
jmp
add
xchg
add
int
nop
push
mov
leave
nop
jmp
xchg
cmpsb
add
mov
mov
xchg
ret
test
and
add
imul
nop
nop
cld
jae
sub
add
add
xchg
iret
mov
clc
repnz
nop
cld
jae
add
add
add
add
clc
repnz
nop
cld
jae
add
add
leave
xchg
in
push
mov
xchg
ret
cmp
jge
add
sub
inc
cmp
mov
leave
nop
jmp
jbe
ja
das
stc
cld
xor
jbe
clc
repnz
nop
cld
jae
jns
rolb
add
xchg
lods
push
mov
xchg
ret
push
add
cld
xor
loopne
test
nop
push
mov
leave
nop
jmp
cmp
add
ds
clc
repnz
nop
cld
jae
push
add
das
mov
repnz
nop
cld
jae
push
add
stc
mov
mov
mov
clc
repnz
nop
cld
jae
rolb
imul
loopne
or
add
add
add
jnp
add
mov
add
repnz
nop
cld
jae
add
lds
dec
cmp
repnz
nop
cld
jae
add
sub
clc
sbb
jne
clc
repnz
nop
cld
jae
add
and
pop
push
mov
xchg
ret
add
lcall
popa
clc
repnz
nop
cld
jae
inc
je
out
jge
add
shrl
repnz
nop
cld
jae
in
add
jle
add
hlt
outsb
push
loopne
inc
mov
clc
repnz
nop
cld
jae
add
cld
cld
adc
mov
xchg
ret
mov
stc
add
out
jno
test
dec
push
push
mov
xchg
ret
add
cmp
iret
xchg
push
mov
xchg
ret
ja
cmp
pop
add
jge
sbb
mov
leave
nop
jmp
cmp
mov
sub
clc
repnz
nop
cld
jae
jnp
rolb
xchg
add
imul
push
jo
add
add
inc
pop
iret
pusha
clc
repnz
nop
cld
jae
out
add
add
enter
sub
nop
push
mov
leave
nop
jmp
add
mov
mov
or
nop
nop
cld
jae
inc
add
add
cmpsb
loopne
mov
clc
repnz
nop
cld
jae
sub
mov
out
add
test
nop
push
mov
leave
nop
jmp
test
add
pushl
push
mov
xchg
ret
add
xchg
jno
les
nop
cld
jae
stc
add
add
shrb
enter
push
js
mov
xchg
ret
add
xchg
das
jns
or
fistl
nop
jmp
add
add
inc
in
add
test
idiv
clc
repnz
nop
cld
jae
ja
mov
mov
mov
nop
nop
cld
jae
shlb
stc
push
push
mov
xchg
ret
rol
add
movl
push
mov
leave
nop
jmp
add
add
je
aam
rep
clc
repnz
nop
cld
jae
jns
add
xchg
clc
repnz
nop
cld
jae
add
movl
add
and
mov
xchg
ret
mov
add
jbe
xchg
add
orl
andl
les
pop
lock
test
call
nop
jmp
das
imul
mov
push
mov
xchg
ret
add
add
pop
cwtl
sbb
repnz
nop
cld
jae
movl
leave
push
push
mov
xchg
ret
daa
pusha
xchg
xor
pop
nop
push
mov
leave
nop
jmp
add
rolb
aam
add
inc
cld
push
mov
xchg
ret
add
xchg
ja
add
add
addb
test
mov
nop
push
mov
leave
nop
jmp
add
pop
sub
clc
repnz
nop
cld
jae
cmp
add
jg
clc
repnz
nop
cld
jae
cmpsl
rorb
rolb
pop
clc
repnz
nop
cld
jae
add
mov
add
push
clc
repnz
nop
cld
jae
add
xchg
add
ljmp
nop
push
mov
leave
nop
jmp
jbe
add
xchg
daa
jge
repnz
nop
cld
jae
imul
mov
clc
repnz
nop
cld
jae
jno
daa
cmpsl
jno
add
push
push
mov
xchg
ret
add
add
xor
mov
xchg
ret
add
out
mov
adc
fisttpll
in
leave
nop
jmp
add
mov
andb
mov
nop
push
mov
leave
nop
jmp
xchg
ja
push
mov
clc
repnz
nop
cld
jae
add
add
int
and
clc
repnz
nop
cld
jae
add
test
add
push
lods
and
faddp
adc
repnz
nop
cld
jae
xchg
repz
mov
xor
clc
repnz
nop
cld
jae
add
cmp
mov
rcll
repnz
nop
cld
jae
add
daa
sub
add
popa
clc
repnz
nop
cld
jae
add
add
aam
jo
loopne
ret
inc
sub
add
mov
nop
push
mov
leave
nop
jmp
add
jo
add
add
ror
add
clc
repnz
nop
cld
jae
mov
mov
das
add
add
clc
repnz
nop
cld
jae
xchg
add
sbb
repnz
nop
cld
jae
aam
add
mov
roll
mov
xchg
ret
jnp
cmp
pop
les
ja
or
loopne
push
mov
add
xor
mov
jmp
neg
shlb
inc
cli
dec
sub
mov
push
add
pusha
loopne
aaa
gs
inc
dec
adc
fisttps
jne
movsb
shl
cld
xor
pop
outsl
cmp
inc
leave
inc
sub
inc
mov
mov
rorl
add
sahf
sub
sbb
pop
clc
imul
loopne
and
outsl
arpl
add
icebp
mov
jb
and
pop
bound
loopne
xchg
fstl
jo
jg
add
pop
popf
inc
call
das
stos
and
stos
loopne
jbe
mov
jg
and
xor
call
mov
or
add
popf
ficomps
mov
scas
fcmovnbe
insl
loopne
dec
das
or
rcrb
or
fimuls
pop
lock
or
ret
in
aad
pusha
pusha
hlt
sti
mov
loopne
test
rcr
pop
std
mov
outsb
sbb
xor
lea
mov
rorl
lahf
cltd
mov
mov
xor
addb
dec
cwtl
pushf
mov
stos
and
inc
pop
inc
divl
add
in
stos
inc
mov
sbb
fsubp
mov
dec
push
mov
stos
nop
mov
lods
int
inc
test
jb
gs
and
sub
sub
add
jne
gs
mov
pusha
or
mov
xchg
inc
cmpsb
addb
dec
sub
pusha
and
inc
bound
mov
add
inc
push
addb
shl
cltd
mov
and
test
xchg
or
inc
jecxz
cmc
ja
inc
loopne
mov
cmp
pop
int
aad
pusha
add
push
lock
test
and
adc
xlat
inc
xchg
enter
sarl
mov
xor
pop
or
shrb
pusha
push
in
loopne
xor
xor
dec
hlt
nop
clc
and
cs
pop
outsl
cltd
decl
and
mov
add
repz
jg
xor
sub
xchg
push
or
xchg
rclb
jecxz
or
mov
mov
aaa
out
scas
add
mov
loopne
mov
shl
fcoml
rcl
sbb
and
adc
es
add
loopne
jmp
mov
into
shll
and
loopne
cmp
or
add
in
bound
jmp
pop
leave
cmp
movl
push
stos
pusha
rorb
mov
mov
mov
mov
mov
aad
packuswb
push
jns
and
mov
xor
loopne
mov
pushf
sti
adc
repz
andb
xchg
negb
cmpsb
inc
loopne
sti
sub
shrb
imul
outsl
mov
sbb
add
cmp
mov
xlat
ljmp
in
mov
cltd
sarb
jbe
sub
ss
inc
nop
xchg
fcmovnbe
in
mov
xchg
daa
cmp
jmp
outsb
aad
jle
out
fs
ja
fs
pop
push
push
sbb
dec
outsb
jmp
sub
xchg
fs
inc
inc
xchg
pop
and
iret
xor
mov
addl
ds
pusha
add
xor
push
xor
dec
jecxz
inc
inc
xor
pusha
cmpb
sub
loopne
dec
pop
push
xor
cmp
stos
dec
bound
xor
jns
add
xlat
insb
mov
sub
shr
andb
movsl
push
repnz
add
jo
push
aaa
outsl
imul
dec
push
lret
adc
les
push
data16
push
push
xchg
xchg
lods
loopne
xchg
aam
rdmsr
imul
fwait
jmp
dec
inc
loope
test
loopne
repnz
lea
pusha
xchg
ret
sti
inc
bound
jg
mov
ror
or
inc
add
fisttpll
lods
and
jge
imul
pusha
sti
mov
pusha
stc
sbb
mov
aaa
jmp
js
mov
and
mov
pusha
sbbb
dec
stc
into
sbb
push
repz
lods
push
adc
xorb
addb
sbb
dec
lcall
sbb
add
and
mov
push
and
popa
push
mov
cmp
pop
lret
pushf
aam
mov
jnp
push
add
iret
pop
add
pusha
inc
xchg
test
adc
aaa
add
adcb
lret
pop
inc
push
mov
sahf
mov
xchg
aad
pushf
sub
push
cmpsb
inc
rclb
lcall
push
mov
sbb
out
shll
test
add
sub
outsl
mov
shlb
jo
nop
jmp
jmp
cmp
nop
loope
fimull
add
fwait
jge
pop
jp
andb
cwtl
and
clc
jg
inc
add
dec
int3
test
adcl
loopne
arpl
in
out
pop
push
push
add
xchg
inc
enter
lcall
inc
shl
repz
mov
lret
pop
shl
jbe
push
ror
shl
xchg
sbb
inc
push
iret
and
xorb
adc
sub
cmp
stos
pop
jnp
movsb
add
sbb
mov
rorb
loopne
add
shlb
cmp
mov
add
test
into
jbe
mov
xor
aam
enter
shlb
rolb
xchg
or
mov
movaps
sub
dec
cltd
aas
inc
loope
push
lods
lret
popf
rorb
fs
pop
push
inc
rorb
mov
push
clc
decb
inc
add
pop
vandps
pusha
or
mov
xor
inc
call
mov
lcall
in
lock
pop
or
mov
and
add
test
rorb
jbe
sub
and
fistps
jmp
mov
stos
pusha
pusha
popa
lahf
aam
fiaddl
push
dec
push
je
mov
xor
mov
adc
lds
testl
mov
mov
popf
bound
xchg
lret
sub
lods
lods
in
jns
je
or
inc
loope
cmp
sub
movsb
add
xchg
or
out
aad
add
es
inc
pop
ja
dec
repz
sub
and
shll
rolb
hlt
or
inc
dec
arpl
loope
sub
rolb
or
addr16
add
adcb
inc
sbb
scas
addb
xchg
inc
xor
loopne
dec
les
shlb
dec
orl
loopne
fisubl
xorb
lods
mov
lods
add
shl
gs
sbb
add
jnp
lret
movsl
pusha
aad
mov
andb
push
shlb
jge
pop
negl
aaa
jb
mov
iret
in
bound
addb
or
xor
mov
inc
pusha
test
inc
sub
push
pop
xchg
inc
leave
daa
or
adc
push
lcall
push
pop
pop
lcall
divl
mov
lcall
inc
add
inc
mov
mov
push
xchg
sub
mov
loopne
imul
and
andb
xchg
shlb
push
push
in
jmp
pop
pusha
cmp
mov
or
subb
pusha
subl
notb
adc
and
jmp
lahf
sahf
enter
push
jp
pusha
inc
inc
mov
cmpsb
add
test
inc
mov
add
cli
mov
push
shrl
cmp
test
test
nop
outsl
xchg
cmp
aad
add
sahf
jecxz
inc
fimull
adc
out
jne
inc
mov
lcall
mov
das
lds
movsb
mov
shrb
testb
je
iret
mov
scas
mov
xchg
mov
movsl
and
rolb
aas
sub
jmp
mov
push
fidivs
dec
in
fs
add
pusha
andb
clc
fdivrs
pop
cltd
mov
daa
mov
pop
fcoml
mov
pusha
mov
out
mov
sbb
sbb
mov
sbb
stos
loope
pop
out
inc
shlb
cmpsb
mov
xchg
stos
inc
and
jns
push
pop
push
dec
mov
loopne
stos
fwait
js
adc
insl
jnp
aas
cmp
ja
adc
in
inc
rorb
movl
jg
aad
fs
and
mov
shlb
add
sub
push
shlb
dec
pop
in
sbb
lock
loopne
andb
jnp
pop
jo
imul
loopne
lods
shlb
ror
mov
inc
testb
daa
outsb
into
push
jmp
jp
mov
inc
xchg
in
adc
fstpt
jp
xor
push
xchg
test
sarb
popf
out
jl
push
add
push
xor
mov
or
add
aaa
pusha
sar
cmpl
inc
jae
add
loopne
add
xor
dec
arpl
pop
movsl
mov
sbb
mov
inc
cmpb
rcr
and
out
or
rclb
cmp
pusha
mov
add
sbb
scas
and
dec
sar
mov
cs
fldcw
pushf
outsl
sbb
out
in
inc
add
add
inc
cld
ret
lcall
leave
outsb
ffree
daa
cmpsl
dec
pop
add
jb
std
ja
push
mov
dec
inc
rcl
aas
add
add
les
dec
stos
andb
sbb
dec
sub
rcrb
int3
inc
mov
mov
cmpb
jmp
mov
add
add
fstps
mov
dec
shrb
inc
sub
loope
add
jae
jl
jo
sbb
xchg
lcall
add
and
cmpsb
mov
sahf
push
mov
movsb
inc
addb
or
addr16
jns
insl
cmpsl
push
mov
mov
ss
mov
mov
int3
repz
pop
cmp
insl
push
sahf
fs
mov
rcr
or
adc
and
mov
cmp
push
or
fisubl
rcrb
nop
mov
inc
inc
repz
sub
add
adc
inc
insb
cwtl
dec
push
mov
popa
mov
inc
lods
imul
push
add
ficoms
cmp
in
loope
add
mov
and
inc
mov
inc
and
loopne
mov
cli
stc
out
push
loopne
les
sub
inc
and
cmp
fstps
pusha
dec
fdivrs
daa
out
adc
in
cld
cmp
jge
mov
iret
or
loopne
pop
loopne
loop
aam
int3
cmp
mov
enter
leave
lods
cmp
bound
pusha
rol
and
xchg
pop
lahf
jp
cmp
fwait
sbb
inc
ss
sti
cmpsb
shlb
dec
inc
push
nop
test
into
sahf
repz
les
mov
xchg
lods
rolb
jae
repnz
scas
and
mov
movnti
xor
dec
adc
inc
in
and
sbb
xchg
mov
stos
inc
mov
nop
movl
loopne
popf
pushf
testb
es
and
cwtl
rolb
and
inc
stc
dec
push
mov
add
popf
jo
scas
clc
lea
inc
loopne
and
cwtl
out
and
xchg
xchg
fsubs
inc
mov
inc
xchg
fwait
iret
subl
xchg
in
pusha
jno
shlb
in
jl
inc
xor
shl
andb
andl
mov
sti
ds
sar
push
loopne
lahf
data16
xchg
add
xor
sti
dec
mov
pusha
ror
incb
cmp
std
pop
aam
loopne
mov
and
inc
mov
repz
inc
mov
gs
pusha
and
pop
cmp
adcb
inc
flds
or
addb
out
shlb
sahf
mov
mov
out
in
mov
cmpsl
mov
lcall
push
addb
cmp
sbb
and
pusha
or
jnp
test
jge
js
ds
out
and
bound
call
and
dec
stos
and
cvtps2pi
xchg
fidivs
stos
inc
and
or
and
mov
movsb
inc
loopne
mov
icebp
jmp
mov
sub
lcall
cli
repnz
mov
jp
loopne
sbb
sbb
mov
add
iret
lret
fimuls
inc
loopne
dec
sub
inc
outsl
test
cmp
dec
sbb
dec
lds
enter
fidivrl
mov
scas
add
push
loopne
rolb
xchg
pop
stos
mov
add
mov
stos
sysexit
cmp
shlb
pop
ret
push
cmp
adc
rorb
add
xchg
push
mov
push
mov
inc
inc
mov
pop
add
sub
clc
jecxz
ljmp
or
cmpb
je
cmpsl
fidivrs
mov
and
mov
mov
or
add
mov
add
sbbb
xor
lds
jne
and
xor
test
push
inc
pusha
push
rolb
xorl
fldt
rcrb
dec
jecxz
mov
pop
out
mov
cmp
andb
mov
data16
mov
add
xor
clc
rcl
fdiv
stos
rol
imul
sbb
cmc
inc
mov
or
adc
pop
dec
pop
mov
dec
loope
sub
loopne
rsqrtps
fsubs
xor
mov
xor
adc
adc
decl
add
mov
and
nop
mov
loopne
jae
pusha
mov
add
ficoms
mov
mov
pop
cmpsl
out
fmulp
mov
and
cmc
sti
pop
xor
shll
mov
imul
xchg
pop
mov
fistpll
or
xchg
andb
cltd
mov
and
mov
inc
xchg
fnstcw
test
add
cmc
jns
pop
iret
push
add
andb
int
push
mov
push
lret
shlb
cmp
xchg
loop
gs
push
dec
out
cmp
mov
frstor
adc
fidivs
mov
add
icebp
scas
repz
in
int
hlt
popf
gs
and
mov
dec
ret
sbbb
mov
fmul
insb
add
subb
inc
jecxz
aad
inc
orl
push
fadds
push
and
sbb
and
push
movsl
orl
push
jp
jle
sbb
lahf
jbe
pusha
add
je
fidivrs
aad
lret
jns
cltd
pop
inc
push
inc
stc
push
jnp
xchg
imul
loope
loope
adc
mov
sub
pop
push
and
hlt
imul
inc
fcmovnbe
lock
fldenv
fwait
and
aaa
dec
mov
in
dec
aas
jle
jnp
cmp
out
loopne
mov
loopne
push
loopne
aad
jle
jbe
sub
pusha
push
pusha
rorb
adcb
push
insl
pusha
jno
pop
pop
push
jnp
stos
xor
push
pusha
frstor
xchg
jno
pop
lds
mov
sahf
aam
jno
xor
dec
sbb
pop
jbe
data16
les
mov
jb
dec
aad
insb
fmull
add
sub
dec
sbb
adc
fs
je
outsl
mov
mov
ret
in
inc
inc
jmp
int3
sbb
add
and
xchg
loopne
addr16
and
lds
sub
mov
inc
lret
rorb
loopne
jae
mov
add
dec
dec
movsl
sub
sbb
add
pushl
inc
pusha
xor
je
xchg
mov
xor
nop
jmp
int3
repz
das
aas
or
incl
and
lds
sub
pusha
aad
jp
lahf
das
scas
aam
xchg
insb
jns
xor
mov
and
pusha
fwait
outsb
push
loopne
cs
and
add
cld
in
loopne
pop
add
push
fst
fcompl
out
jle
pop
cltd
mov
and
and
lds
pusha
add
sbbl
cwtl
mov
mov
lods
andb
mov
arpl
lods
mov
andb
mov
mov
das
push
pusha
pusha
sub
pusha
xor
push
push
in
push
loop
arpl
cltd
cmpsl
push
cmc
pushl
out
cmp
jae
pop
shll
jbe
addb
subb
pop
jbe
jmp
xchg
adc
jne
mov
andb
rolb
adc
xor
hlt
in
loopne
xor
pop
ret
mov
push
out
pop
int
notl
adc
mov
nop
stc
rcrb
dec
xchg
push
repz
leave
mov
pusha
fcoms
inc
mov
mov
addb
jle
mov
inc
and
add
mov
jmp
pusha
add
lret
push
mov
mov
inc
decl
inc
dec
push
jbe
mov
xchg
mov
inc
notl
stos
inc
pusha
or
daa
inc
arpl
mov
movsl
cmp
sbbb
push
lret
cmp
mov
or
fstpl
xchg
add
push
jge
lahf
shl
enter
xor
inc
loopne
loopne
cwtl
and
enter
loopne
cmp
or
add
clc
sbb
shl
jle
add
mulb
inc
shl
dec
add
pusha
pusha
inc
mov
aam
pop
sahf
das
cli
popa
cli
sub
and
inc
out
movsb
shlb
xchg
stos
lea
data16
stos
pusha
inc
xchg
push
addb
cmpsl
test
cli
fimull
and
aam
adc
and
sbb
les
sub
add
pusha
add
mov
neg
mov
and
sbb
jbe
mov
andl
loopne
and
xor
or
dec
adc
mov
pop
pop
stc
add
and
in
and
push
mov
xchg
add
or
inc
sbbl
repnz
repnz
js
sti
sahf
jno
nop
out
jnp
dec
xchg
fildl
stc
or
pop
inc
pop
add
add
add
and
data16
cwtl
xor
insl
sbb
jle
push
pop
add
cltd
adc
sar
pop
sub
sarb
and
addb
and
pop
cld
imul
inc
or
jnp
das
ficoml
sbb
sub
mov
mov
mov
ret
cltd
data16
xchg
fisubs
popf
sahf
aaa
addr16
mov
or
loopne
xor
in
mov
mov
pop
pop
data16
fildl
mov
push
sahf
test
add
loopne
xchg
pusha
lret
ror
pusha
mov
lahf
mov
cmp
andb
rolb
jne
in
test
pop
xor
add
repz
xchg
mov
add
inc
mov
out
mov
pop
stos
mov
lcall
je
sti
bound
pusha
jle
mov
sub
and
movntps
inc
add
sub
sbbb
iret
cmpsl
loop
pusha
mov
mov
aad
mov
fadd
pop
sbb
add
rorb
orb
xchg
or
ror
mov
dec
repnz
gs
shlb
mov
lret
push
xchg
push
lods
push
loopne
mov
sti
mov
fimull
and
hlt
sub
cltd
insl
push
inc
jmp
inc
stos
sbb
mov
pop
xor
movsl
sbb
jg
mov
popa
aaa
add
inc
mov
and
sbbb
fldt
imul
sub
dec
dec
test
das
inc
aad
adc
sbb
rolb
sbb
xchg
cmp
and
loopne
sbb
sbb
jb
inc
enter
sub
rclb
mov
mov
out
pop
or
dec
fldenv
and
hlt
pop
lahf
stos
push
lds
mov
clc
lea
in
lcall
in
jne
lods
popa
dec
inc
push
pop
sbb
repnz
data16
inc
shrb
mov
andl
scas
add
or
jbe
sub
loopne
jbe
and
fisttpl
mov
add
mov
pop
dec
push
andb
out
fs
jae
rcrl
in
call
scas
inc
xorb
aam
add
cmp
in
cmpsl
mov
dec
jno
xchg
int
fwait
xor
xchg
into
jo
das
push
lret
sub
xchg
mov
and
andb
inc
add
pusha
xchg
jne
fnsave
imul
push
add
fucomp
push
xor
mov
add
xor
jnp
inc
in
lock
jmp
adc
add
loopne
adc
dec
dec
sub
sbbl
jnp
sub
stc
push
dec
andb
push
fcmove
mov
lret
lahf
lds
mov
addb
jle
jg
sar
in
jnp
cmpsb
pusha
loopne
xchg
call
mov
stos
rolb
cmp
outsb
pop
xchg
out
cmc
mov
lahf
mov
or
testl
pop
cmp
jmp
hlt
pusha
sahf
stc
xorl
les
es
out
pusha
push
mov
lods
mov
xor
push
add
fwait
ret
push
push
fucom
or
sbb
xor
pusha
mov
mov
pusha
inc
and
pusha
push
pop
sahf
loopne
sbb
push
loopne
fdivs
lock
pop
leave
push
jne
orl
orb
fdivs
xchg
or
jp
xor
andl
or
inc
and
das
mov
loopne
mov
mov
sbbl
cwtl
jno
scas
and
movhps
fistl
dec
jo
jbe
in
sbb
dec
push
fsts
jno
cmpl
inc
inc
jo
adc
push
les
mov
imul
pop
test
jl
and
add
or
xor
je
pop
jp
addb
iret
jge
sti
inc
hlt
pusha
add
loopne
adc
lds
mov
scas
mull
cwtl
mov
lds
hlt
add
lret
and
xchg
jb
xor
popf
add
dec
add
vandps
and
rol
inc
add
out
test
call
inc
inc
add
pop
cmp
pop
add
ja
adc
movl
aaa
lret
add
add
shrb
ja
and
addb
inc
leave
jno
pop
lds
and
loopne
loop
das
push
dec
dec
lret
mov
xor
outsl
jecxz
jp
lods
and
je
aam
mov
pusha
xchg
stos
rolb
pusha
mov
stos
test
add
or
out
call
mov
jge
push
mov
mov
ss
inc
and
loopne
andb
decl
add
cmp
js
and
rcll
pusha
loopne
sub
sub
adc
pusha
mov
sti
scas
inc
mov
dec
out
stos
sub
adc
in
jo
jmp
adc
pop
inc
mov
inc
adc
aam
and
cmc
ljmp
fabs
lahf
inc
sub
rcll
and
fsts
pop
add
ret
ss
cwtl
lret
xor
inc
xorb
dec
mov
push
ret
aas
dec
mov
inc
mov
sub
rcrb
cld
pushf
dec
jbe
andb
mov
adc
adc
roll
mov
mov
or
jae
mov
pushf
inc
dec
fwait
inc
rcrb
cmp
jne
sbb
jge
mov
and
cld
out
dec
pushf
stc
or
mov
movsl
inc
loopne
or
mov
and
fsub
mov
mov
lcall
mov
xchg
pop
sub
and
not
enter
mov
cwtl
inc
addb
jo
mov
adc
shrb
lret
sub
dec
enter
push
or
arpl
xchg
out
lcall
fsubrp
mov
or
inc
daa
or
shlb
cmc
lods
and
inc
jmp
bswap
pop
sub
and
or
andl
add
test
inc
add
rclb
loop
mov
loop
cmpl
pop
adc
loop
xchg
pop
mov
mov
pusha
mov
aaa
scas
loopne
imul
scas
sbb
fwait
dec
dec
sub
xor
mov
out
pop
faddl
add
nop
cmpsb
addb
rorl
shll
adc
cltd
jl
push
dec
fistpll
pop
test
fisubs
add
loopne
inc
dec
lods
and
jo
inc
add
xchg
mov
push
inc
inc
leave
sbb
aad
test
notl
and
test
cmp
mov
jle
mov
add
mov
mov
shl
movsl
sub
and
xor
movntq
out
int
inc
mov
stos
repnz
testb
sbb
inc
out
mov
outsl
inc
shlb
sbb
and
std
dec
fdivl
adc
cmp
add
push
popa
mov
loopne
lret
pop
scas
aam
jb
dec
lds
xchg
loopne,pn
test
jno
sti
pop
dec
and
pusha
stc
or
sti
shl
das
add
pusha
nop
jp
push
add
jo
hlt
jmp
add
xor
in
mov
mov
jns
xlat
xor
shlb
dec
enter
insb
xchg
jge
addb
or
orb
add
addr16
push
push
mov
and
push
or
stc
dec
lock
xor
test
or
inc
xor
loopne
and
inc
sbbb
xlat
pause
xor
mov
xor
cmc
fdivrl
cmp
mov
pusha
mov
mov
pop
outsb
ret
insb
bound
cmp
aam
xchg
add
and
pusha
rclb
shl
fnstenv
push
into
ds
adc
loopne
and
loopne
adc
push
jb
xor
and
mov
hlt
stc
mov
xor
cmpsl
ljmp
sbb
aam
jae
ret
and
sahf
xor
fwait
add
and
test
movsb
addb
inc
and
fsubr
ja
notb
mov
cli
jnp
mov
stos
push
mov
jns
add
data16
mov
and
mov
scas
pusha
and
jns
out
fldcw
mov
repz
lret
icebp
lret
aas
inc
push
loop
pusha
pop
sbb
inc
pop
loope
notb
mov
add
out
negb
test
sub
aad
mov
mov
and
je
dec
dec
xchg
les
andb
dec
out
popf
inc
shll
je
or
cltd
dec
jl
cs
pusha
lahf
test
mov
scas
sbb
jnp
add
scas
rolb
dec
pop
test
and
sahf
pop
xchg
loopne
mov
mov
add
xor
and
das
jae
pop
mov
imul
clc
mov
shrb
push
mov
aas
test
add
dec
push
andb
and
sub
dec
cmp
loopne
sbb
loopne
aad
cmp
sub
lret
jmp
jae
pop
leave
mov
and
addb
add
xchg
fsubrl
mov
cmpsb
rolb
mov
inc
add
arpl
filds
jmp
dec
lods
mov
mov
inc
fbstp
je
push
jmp
mov
xchg
arpl
sahf
mov
cmp
inc
add
test
sub
addr16
add
mov
and
test
fwait
push
pusha
and
cs
pusha
sbb
loopne
jbe
shl
jmp
sub
fnstenv
xor
pop
xlat
adc
mov
rcrl
pop
push
andb
shr
xchg
jnp
xor
pop
aam
or
loopne
insl
xchg
lods
cmp
dec
outsl
rolb
pusha
mov
loopne
add
sbb
xorl
xchg
outsb
mov
stos
inc
rclb
xor
mov
int
add
pusha
ljmp
jns
sub
lods
imul
enter
and
mov
sti
push
fisubrs
andb
adc
repnz
mov
pop
jmp
das
jns
dec
cmp
add
out
xchg
into
mov
sti
and
add
pop
insb
cwtl
pop
imul
xchg
dec
shl
sbb
push
loopne
mov
ret
insl
sbb
imul
mov
lea
insl
or
pusha
xlat
loop
imul
icebp
je
pusha
loopne
push
stc
cmp
xchg
add
shlb
jae
bswap
lock
iret
setle
mov
cmp
mov
sub
pusha
cmpsl
jne
or
and
and
add
sub
add
inc
xor
fsubr
test
addb
loopne
movsl
movl
insl
jp
xchg
adc
pop
aas
stc
aam
rcrl
sub
addb
test
pusha
pusha
cmpsl
bound
mov
insb
mov
inc
pop
cmpsb
addb
or
mov
iret
loope
lret
and
repnz
xchg
and
and
rcrl
add
pusha
jle
int
lret
nop
mov
adc
shlb
sbb
pusha
xorb
and
add
and
shll
ret
and
and
or
shlb
fidivrs
mov
out
sets
mov
lcall
add
pusha
pop
mov
xchg
imull
sub
pusha
bound
ljmp
addb
jae
dec
out
mov
xchg
andb
and
add
or
inc
std
fsubp
mov
mov
fs
or
adc
das
cs
scas
nop
adc
jno
add
in
or
imul
xor
outsb
push
add
mov
ret
icebp
lds
pop
pop
push
addb
lods
mov
andb
cmp
pusha
mov
frstor
pusha
inc
dec
push
dec
add
int
or
shlb
sbb
xlat
add
cmp
cltd
add
shlb
jmp
mov
xchg
add
shrb
loopne
cmp
cwtd
pop
lods
icebp
popa
insb
and
xchg
xor
das
sbb
aad
mov
nop
in
cmpsb
andb
xor
subb
xchg
mov
cmpsl
je
xor
sub
int
in
xchg
aam
inc
ss
jo
adc
ret
sahf
mov
inc
bound
loopne
mov
loopne
out
ja
std
and
data16
pusha
hlt
shl
ss
test
pusha
cmp
xchg
pop
mov
jecxz
jb
adc
adc
lea
mov
xlat
push
mov
and
add
js
sbb
and
pusha
repz
bound
ret
ret
addr16
jae
mov
jns
test
push
xchg
xchg
and
inc
mov
sub
inc
xor
ja
inc
pusha
mov
inc
sbbb
inc
jo
xchg
jns
clc
sub
pusha
in
inc
add
mov
push
inc
cmc
xchg
or
mov
inc
call
inc
pusha
jo
pusha
mov
xor
scas
pusha
rcrb
shl
inc
mov
xchg
hlt
in
sbb
shlb
add
addb
lret
imulb
andb
dec
mov
loopne
ds
inc
pop
jg
xor
and
mov
iret
adc
mov
xchg
mov
adc
inc
rclb
andb
xchg
jnp
iret
adc
mov
loop
push
shlb
mov
mov
insl
pushf
pop
shlb
add
aas
inc
lock
or
and
jle
pop
fisttpll
fwait
mov
pop
mov
mov
mov
push
pop
mov
pusha
mov
mov
mov
ds
movl
sahf
nop
in
cmc
movsb
rol
inc
rcl
add
loopne
dec
xchg
rorb
pusha
scas
or
loopne
testl
adc
mov
shl
pop
cwtl
pop
out
scas
mov
fisubl
push
loope
std
xchg
mov
rol
mov
pop
jmp
adc
pop
xor
mov
mov
loopne
jbe
adc
push
mov
cwtl
int3
dec
mov
xlat
and
and
and
hlt
lea
and
rolb
adc
test
add
out
pop
cmp
cmp
pop
xchg
stc
jae
mov
or
rolb
mov
inc
js
cmp
enter
fld
dec
and
sahf
roll
pop
daa
aam
push
mov
xchg
pusha
mov
sbb
add
movsl
int3
mov
inc
sub
aas
and
and
mov
pusha
loopne
out
in
sbb
jmp
add
and
insb
cwtl
mov
pusha
insb
sub
mov
imul
mov
pusha
sbbb
nop
loopne
les
les
loopne
repz
shl
movsb
inc
and
rol
out
jbe
mov
shll
lea
adc
inc
and
or
and
cmp
push
movsb
add
add
add
testb
and
jo
pusha
loopne
andb
fwait
xchg
loopne
aad
mov
xchg
add
leave
das
or
inc
bound
lahf
pop
in
add
mov
inc
jmp
and
or
jmp
xchg
mov
mov
rorl
cltd
adc
mov
xchg
and
dec
inc
mov
gs
push
fcmovnbe
xchg
jbe
pop
or
loop
repnz
and
repnz
pusha
or
mov
outsl
cmp
add
mov
das
xchg
cmp
cmp
jge
addb
movsl
mov
arpl
addb
xchg
inc
lods
sbb
scas
shlb
add
inc
stc
fcomi
adc
and
psrld
push
inc
negl
cmpsb
pusha
rcl
mov
les
push
adc
adc
iret
push
dec
out
sub
popa
jo
lret
sbb
jg
or
inc
jmp
push
cmpsl
mov
push
pop
sarl
inc
adc
mov
inc
out
lret
rcll
xor
pop
sub
lods
imulb
inc
loopne
sbb
rolb
and
and
push
add
loopne
shlb
jge
mov
enter
mov
rcll
xor
or
sarl
mov
loopne
ret
dec
jnp
mov
out
test
lcall
xchg
push
test
inc
sub
jp
shlb
ret
cmc
add
shlb
pusha
stc
lock
fldcw
add
ja
sub
shl
das
loop
inc
and
inc
jmp
pusha
xchg
mov
cmp
mov
and
lret
pop
sbb
jecxz
push
inc
inc
enter
jl
add
mov
paddd
xchg
fsubrs
scas
xor
rolb
js
pop
pop
and
add
and
pushf
ret
mov
inc
jle
add
inc
inc
cmp
xchg
xor
adc
push
sub
and
je
push
jecxz
cmp
mov
pusha
out
jnp
clc
dec
outsb
xchg
enter
pop
shlb
loopne
imul
sub
add
in
movsb
shlb
add
fnsave
int3
pop
setle
jae
sbb
jns
inc
fldcw
cwtl
cltd
and
adc
ds
sub
mov
mov
add
jecxz
loopne
sbb
and
movsl
or
xor
dec
lods
push
xchg
andb
movsl
and
jne
and
rcl
inc
mov
lods
and
inc
push
add
insl
je
and
fiadds
shl
int
xor
aas
or
shrb
jb
jns
pop
stos
add
pop
roll
inc
adc
mov
daa
pop
sub
loopne
jo
cwtl
int
sbb
push
pusha
and
test
addb
cwtl
ljmp
push
adc
adc
cld
and
inc
shlb
jmp
cmpsb
inc
rcrb
adc
das
enter
fucomp
pop
jae
sahf
dec
or
inc
js
add
inc
sub
adcb
dec
and
rcrb
mov
loopne
addb
inc
ljmp
and
inc
xchg
inc
jo
adc
inc
adc
xchg
pop
in
jb
mov
lock
add
adcb
test
mov
sub
inc
mov
inc
and
pop
jb
xor
adc
ja
incl
dec
cmpsb
pusha
shl
loopne
jp
in
xchg
out
push
rol
cli
xchg
hlt
mov
loopne
testb
aad
dec
sbb
jmp
push
and
mov
aad
jle
int
mov
sub
xchg
adc
pop
mov
ds
test
and
out
fldenv
xchg
inc
jb
sbb
and
loopne
add
inc
and
fidivs
in
bsr
pop
andb
xor
aaa
inc
gs
aad
pop
les
push
xor
pop
mov
jns
je
fstpl
xor
rcrb
cmpsl
sbb
gs
and
and
jg
xor
xor
jns
mov
add
xchg
push
xchg
xor
lds
sbb
flds
clc
jecxz
jne
pop
lret
or
add
cwtl
mov
test
inc
cmpsl
pop
dec
pop
fstpt
cmc
aas
mov
sub
shlb
xchg
and
cmc
andb
popf
fdivrs
bound
aad
jbe
or
and
pop
fwait
hlt
clc
test
addb
pusha
data16
cwtl
lahf
xor
stc
cmp
jbe
cmp
and
cmp
dec
aam
movsb
add
xor
test
orb
mov
mov
fdivrs
jp
xlat
mov
inc
xchg
mov
test
mov
xchg
andb
in
adc
inc
add
and
stc
notl
xchg
and
lods
enter
outsl
xor
movsl
inc
test
mov
dec
lds
outsl
or
int3
and
and
sub
loopne
inc
jns
outsl
cmp
loopne
adc
adc
int
jno
movsl
das
fstpl
and
lds
aaa
sub
rclb
pusha
inc
ja
inc
imul
mov
in
mov
mov
inc
sub
sti
jae
mov
aaa
pusha
clc
sub
in
nop
adcl
pusha
pusha
in
ret
popl
loopne
adc
ss
pop
push
xchg
jae
stos
test
shlb
in
popa
loopne
cmp
addb
adc
iret
jmp
inc
scas
leave
into
fdivl
insl
adcl
push
rol
push
stos
push
cmp
loopne
mov
rolb
cmpsl
mov
jg
loopne
or
daa
call
andb
pop
mov
mov
pusha
sarb
lds
inc
inc
je
inc
mov
sar
jmp
out
jnp
add
inc
add
inc
loopne
pop
cmp
out
cmp
pop
sub
inc
sarb
mov
jno
ret
cmp
pusha
inc
roll
popa
xchg
mov
push
in
cmp
and
or
frstor
movsl
int
mov
add
xor
lret
lods
and
fs
inc
push
push
aas
xchg
shl
dec
mov
inc
scas
insb
fildl
jle
scas
loopne
aaa
imul
mov
pusha
rolb
loopne
aad
pop
das
icebp
cmp
dec
stos
mov
in
adc
mov
cld
adc
push
sub
mov
inc
hlt
movsw
out
pusha
add
mov
and
loopne
cmc
in
fldenv
out
and
loopne
lahf
xlat
ret
ljmp
mov
mov
loopne
xchg
cmpsl
pop
inc
push
and
loopne
enter
cmp
out
mov
sbb
popf
lahf
and
rorb
lret
xchg
dec
inc
repnz
andb
aas
addb
ljmp
sahf
jo
lods
xchg
add
lcall
shlb
insb
imul
andb
cmp
jns
cltd
add
push
or
push
imul
sbb
insb
mov
mov
mov
subl
inc
loopne
cmp
pusha
push
test
inc
and
mov
out
xchg
add
fisubl
aaa
sub
loopne
pusha
divl
cmpsb
rolb
mov
mov
loop
jb
cwtl
lea
add
push
mov
repnz
inc
and
fldt
loopne
js
orl
sub
loopne
sarb
test
imul
inc
pusha
mov
dec
addb
rorl
pusha
loopne
out
push
or
shlb
das
sub
add
adc
das
aam
and
repnz
andb
jmp
fsubrs
and
repz
out
inc
loope
aaa
or
jne
mov
in
lret
fstl
ljmp
lods
movsl
and
adc
adc
and
stos
add
mov
cmpsb
andb
lret
dec
insb
mov
mov
push
add
nop
das
jle
insl
je
and
rolb
pusha
mov
and
mov
xor
pop
clc
sarb
adc
loopne
mov
mov
push
and
pushf
inc
imul
repnz
out
mov
mov
loopne
mov
sub
sbb
clc
mov
addb
mov
dec
inc
in
pop
pop
xlat
inc
jge
loopne
outsb
mov
aas
xchg
outsb
orl
rolb
and
aam
test
pusha
and
xlat
clc
sarl
mov
lock
or
loopne
dec
jp
adc
lcall
pusha
pop
gs
out
jno
rolb
jp
jge
sub
and
aad
ds
mov
shlb
int3
cwtl
int
jmp
or
mov
and
roll
scas
inc
cli
test
push
inc
es
pop
int
in
fidivrs
mov
pushf
jbe
insb
ja
movsl
jl
cmp
ret
outsb
mov
clc
lret
adc
neg
xlat
or
mov
jbe
fwait
dec
mov
repnz
cmc
insl
xor
fimuls
cld
rclb
imul
inc
int
sub
sti
fldenv
pop
xchg
push
loopne
jmp
enter
fimuls
and
sar
jp
inc
loopne
add
aas
insl
mov
push
and
mov
push
add
xor
inc
mov
add
rorb
leave
push
xchg
outsl
mov
push
popa
std
jge
lret
daa
jae
ds
xor
pop
jp
inc
pushf
adc
pop
out
pusha
test
pusha
add
fstpt
loopne
jecxz
fbstp
rol
lea
rolb
inc
andb
call
mov
arpl
push
sbb
incb
and
lods
pusha
inc
add
insl
in
mov
mov
stos
and
clc
mov
xchg
dec
ficoml
movsl
test
repnz
imul
and
dec
in
and
inc
fnsave
loopne
lods
andb
and
ds
pushf
lret
mov
pusha
pusha
xchg
and
cmp
lock
hlt
xor
mov
push
jecxz
sahf
xchg
and
out
pusha
or
loopne
mov
cmp
add
pushl
mov
mov
jno
repnz
push
and
add
mov
mov
mov
pusha
cmp
mov
rclb
sub
shlb
sar
aaa
xchg
xchg
in
adc
loopne
or
pusha
mov
lcall
mov
test
inc
inc
or
lock
test
inc
outsb
cmpl
cmp
fs
and
decb
adc
or
inc
push
insb
inc
fsubr
jo
inc
fwait
dec
loopne
loope
xlat
and
je
pop
imul
movsl
inc
dec
gs
add
inc
mov
dec
mov
add
push
mov
test
cmc
or
mov
xchg
mov
pop
jmp
iret
jge
mov
xor
pushf
mov
rcrb
into
addr16
mov
mov
roll
in
lock
ja
sub
subb
pusha
shrb
mov
sbb
push
shlb
sub
and
outsl
xor
push
pop
xchg
lods
rolb
jmp
andb
arpl
sub
loopne
leave
lret
repz
fidivs
cmp
mov
jge
and
not
cmpsb
add
mov
roll
and
sti
ljmp
dec
loope
sahf
xchg
and
notl
mov
pop
popf
out
inc
jnp
or
stos
icebp
lods
inc
sbb
pop
addr16
out
mov
xchg
pop
jg
xchg
add
pushf
das
jge
jecxz
es
mov
out
sub
mov
jnp
and
mov
addb
jnp
stos
inc
std
std
sahf
lock
enter
mov
mov
movzwl
cmp
cmc
mov
scas
shlb
inc
sbb
or
pusha
pop
popa
mov
add
add
adc
insb
test
jae
fwait
loop
inc
mov
inc
pusha
jo
jmp
xchg
sahf
outsl
scas
pusha
mov
fsts
adc
gs
call
rcr
sbb
call
add
scas
inc
loopne
movb
pop
add
and
std
adc
ljmp
pop
push
inc
sbbb
sub
lret
nop
push
test
andb
dec
test
andb
push
jge
ret
pop
and
loopne
enter
push
mov
mov
pusha
jno
xor
outsl
and
int
outsb
jns
scas
pusha
add
arpl
rclb
and
xor
xor
scas
out
daa
ljmp
pusha
add
mov
jmp
cmp
nop
sub
mov
aam
addb
xor
pop
movsb
and
pop
fs
insb
mov
mov
mov
lds
pop
push
jmp
mov
mov
loopne
rcr
ljmp
dec
jle
add
mov
add
cmpsl
cmp
mov
add
pusha
add
andb
dec
hlt
adc
out
scas
pusha
mov
jno
push
and
pop
fsubrs
mov
js
mov
xchg
loop
mov
cltd
pop
lret
lahf
mov
loopne
adc
mov
and
mov
jb
mov
mov
jbe
lock
jo
mov
xor
and
dec
dec
xchg
fxch
daa
push
iret
xlat
add
push
mov
pusha
loopne
call
lods
js
pop
test
and
add
add
into
xor
sub
add
cmpsl
adc
test
fs
loope
fwait
mov
dec
cmp
data16
pusha
and
loopne
loope
fxch
mov
pop
pop
call
rolb
js
in
jmpw
out
xor
sub
inc
pop
jns
dec
xchg
popf
jg
mov
or
dec
mov
hlt
repnz
loopne
add
sbb
adcl
addb
mov
hlt
rolb
scas
loopne
pop
nop
inc
aaa
push
in
lods
data16
inc
in
push
shl
pop
test
mov
jmp
pusha
inc
pop
jge
test
pusha
adc
cltd
lcall
and
test
sub
aam
sbb
jns
sub
outsb
lock
sbbl
pop
mov
aam
mov
jo
jnp
bound
mov
cmp
rcll
sahf
jbe
cmp
inc
loopne
push
loopne
add
jb
je
xchg
es
shrb
and
test
and
shl
sub
orb
mov
nop
pop
cs
fisubl
sub
rclb
loopne
cwtl
call
mov
mov
add
cltd
inc
push
dec
fistps
mov
add
jl
pop
out
mov
fcmovbe
js
fistpll
pushf
rcll
xlat
xchg
sbb
incl
shrl
xlat
or
inc
test
add
loopne
fwait
movsl
imull
and
pushf
addb
add
int3
mov
xlat
mov
pushf
sbb
inc
pusha
mov
sarb
cmpsl
lods
inc
rolb
pusha
mov
inc
sbb
inc
inc
clc
pusha
incl
mov
mov
pusha
pop
mov
and
sarl
popf
es
jge
flds
adc
mov
xor
xchg
adc
mov
cmp
mov
mov
mov
and
sub
shl
inc
daa
adc
subb
mov
push
or
mov
sub
pop
dec
cwtl
pop
inc
pop
cmp
lcall
xchg
sbb
lock
jns
lret
sbb
xor
inc
inc
clc
cmp
stos
shlb
addb
loope
xor
shrb
nop
xchg
loopne
adc
xchg
add
push
jbe
jecxz
pop
mov
aas
pop
sbb
mov
out
loop
dec
mov
sbb
adc
cmp
xchg
xlat
xchg
cmp
loopne
sbb
iret
cwtl
pop
or
shrb
mov
shl
fpatan
out
lods
mov
pusha
mov
xor
clc
sbb
inc
loopne
outsb
fucomip
cs
loopne
in
jg
xchg
shlb
or
dec
clc
out
pusha
mov
xchg
mov
loopne
pusha
push
add
enter
addr16
jmp
sahf
lds
xchg
out
imul
nop
loopne
flds
loop
shlb
fmul
lea
jmp
lds
and
sub
cmc
cli
sub
inc
shrl
and
or
mov
and
inc
loopne
cs
add
in
je
out
xor
inc
add
inc
xchg
sbb
inc
inc
inc
mov
sub
sarb
shrl
sbb
and
dec
jle
subl
loopne
lret
cwtl
xor
and
and
jb
cmpsb
pusha
add
or
jge
pusha
enter
fdiv
and
cmp
rol
add
and
les
mov
push
push
cwtl
cmpsl
jbe
add
push
les
inc
xchg
mov
sbb
or
repnz
ss
test
loopne
jge
mov
jne
fnstsw
lahf
push
andb
inc
mov
lds
inc
pusha
pop
aad
pop
arpl
inc
in
sahf
loope
andb
je
mov
mov
movsb
and
mov
dec
mov
xor
and
add
mov
call
loopne
pop
mov
into
jbe
or
mov
enter
insb
jmp
repnz
xchg
add
mov
pop
js
in
out
pop
cmc
aas
aas
setns
adc
pusha
xor
mov
or
pusha
cmpsl
roll
lcall
icebp
or
add
push
mov
pushf
xchg
stc
cmp
fiaddl
loopne
lcall
loopne
inc
xorb
mov
xor
mov
pusha
test
jge
repz
mov
mov
pusha
push
or
sub
sub
out
mov
sbb
aam
inc
and
sbb
int
dec
repnz
and
mov
and
leave
in
iret
fscale
push
dec
xor
pusha
rorb
sarb
std
popa
test
arpl
mov
notl
test
add
mov
inc
inc
add
daa
xchg
cmp
mov
cmp
xchg
ret
daa
xchg
rolb
std
jb
lods
outsl
outsl
or
loopne
pop
test
and
flds
and
dec
scas
add
mov
push
mov
loopne
test
jge
sub
stos
fdivrl
imul
test
cmp
imul
fisubs
rcll
aaa
mov
sub
aad
adc
pop
adc
sahf
add
jo
xor
mov
sbbb
fs
add
fbstp
push
das
sbb
mov
iret
pushf
jbe
subl
mov
outsb
or
push
mov
movsb
loopne
cmpl
jg
pusha
shlb
fsubl
jg
dec
inc
cmp
lds
stos
add
push
mov
and
ja
inc
inc
inc
or
fdivr
dec
test
add
pop
xor
mov
js
xchg
out
xchg
fistpl
xlat
pop
xlat
cmp
and
sahf
xchg
lret
in
push
test
sub
shlb
inc
dec
xor
loope
cmpsb
rol
pop
add
and
jne
loopne
cmp
lods
shl
imul
inc
cmpsl
shrb
cmpb
movsl
pop
popf
daa
inc
ljmp
pop
add
rolb
cli
lret
or
inc
fists
lahf
jne
das
cld
mov
inc
loopne
je
push
fiaddl
pop
scas
inc
shrb
insb
push
in
loopne
mov
sub
adc
shl
mov
jb
or
aam
mov
andb
jo
lcall
and
in
pop
dec
add
imul
push
pop
add
nop
lahf
ss
enter
and
mov
js
dec
jbe
and
inc
xor
push
cmpsb
add
xor
cwtl
test
inc
pusha
in
loope
scas
inc
hlt
addb
push
push
add
test
cmpb
inc
or
inc
push
ja
dec
xor
pusha
pusha
dec
mov
notl
inc
sbb
shl
inc
inc
stos
inc
orb
jg
jbe
imul
lods
add
ss
sbb
mov
inc
mov
mov
sbb
mul
and
enter
shlb
test
std
or
and
mov
fnstcw
add
add
loope
lret
aam
imul
gs
arpl
and
mov
loopne
xor
push
push
shlb
lret
add
movsl
fld
dec
mov
xchg
cmp
and
shll
mov
add
cmp
mov
mov
and
ret
adc
push
subl
call
iret
lds
push
mov
xchg
mov
in
cmp
push
pop
cmp
xchg
andb
sahf
call
push
mov
inc
rcl
or
and
lods
adc
rcrb
sbb
sub
inc
cmp
add
pusha
daa
dec
js
add
sub
outsl
mov
mov
sub
stos
loopne
xor
mov
inc
sarb
xor
and
lea
sub
stos
loopne
icebp
loope
add
add
loopne
leave
sbb
loopne
mov
xor
sub
lcall
fcomps
stos
pusha
addb
xor
inc
mov
loop
mov
jp
fisubrs
rclb
xchg
orb
loopne
inc
add
and
and
dec
cs
rcrb
outsl
or
mov
or
iret
cld
pop
lods
pusha
pusha
mov
inc
out
stc
roll
sub
loopne
outsl
sahf
mov
xchg
loopne,pn
adc
lcall
pop
lret
dec
jne
stos
add
dec
xchg
xorb
out
mov
add
push
jmp
mov
mov
jmp
hlt
int
mov
inc
mov
repnz
jle
push
les
push
pop
mov
stc
bound
inc
das
dec
inc
push
jmp
mov
adc
inc
outsl
clc
and
jae
sbb
fimull
and
ret
mov
adcb
orb
mov
loopne
insl
add
xchg
push
out
hlt
cmpsl
out
cmp
dec
movsl
sbb
out
lcall
es
fdivr
scas
mov
stos
or
mov
mov
or
out
rolb
insb
insl
xchg
or
xor
jns
mov
mov
fmull
icebp
rorb
cld
mov
add
cld
sti
in
push
or
and
movsb
addb
addb
nop
mov
orb
rorb
cltd
frstor
pop
adc
sbb
mov
pop
push
test
bound
lret
push
jge
scas
fmul
les
lcall
sarb
scas
add
call
imul
adc
inc
dec
jl
rcll
sbb
leave
mov
ds
loope
and
aas
aaa
adc
jns
adc
rcll
push
pusha
add
push
dec
loopne
test
dec
add
inc
outsl
mov
adcb
in
and
pop
sbb
dec
in
cmpl
jmp
cmp
cmp
cmp
sbb
loopne
fldcw
xchg
ret
int
ror
jl
aas
pop
ss
out
icebp
jecxz
pusha
pusha
or
pop
mov
les
ficompl
pusha
cmpb
inc
stos
add
pop
inc
leave
lock
fnstsw
test
lcall
xor
jecxz
mov
push
pop
push
pop
add
cld
jnp
andb
insb
xlat
push
dec
push
add
loopne
push
addb
stos
mov
jge
jg
test
add
mov
shrb
and
and
mov
mov
testb
mov
sbb
sbb
mov
pop
add
or
iret
mov
inc
sub
dec
mov
add
mov
mov
jmp
pop
or
js
mov
pushf
in
out
push
inc
and
pusha
inc
mov
pusha
out
jle
pushf
mov
andb
push
xchg
adc
sub
sar
rolb
sub
loopne
mov
repnz
jno
call
adc
and
pextrw
dec
fs
loopne
aam
mov
inc
dec
dec
cld
ss
out
mov
test
pop
jb
adc
pop
sub
andb
jp
or
jne
sbb
dec
xor
dec
xchg
bound
pop
sahf
xchg
sbb
push
mov
and
pushf
shld
pmaddwd
jmp
inc
daa
mov
pop
pusha
stos
cmc
hlt
lcall
inc
ja
cmc
mov
gs
and
stc
mov
mov
push
sub
leave
adc
adc
push
ja
loopne
out
inc
lods
inc
mov
or
in
jg
inc
mov
dec
jmp
pop
adc
fildl
test
mov
adc
addr16
lcall
jl
xchg
cmp
and
push
and
add
popa
xchg
sbb
push
xor
sbb
inc
insb
sarl
or
in
das
xor
loop
dec
or
popf
movsb
inc
mov
test
cmp
xor
xchg
xor
test
andb
and
sbb
push
inc
test
loopne,pn
push
and
mov
in
or
fsts
jl
jne
pushf
push
push
leave
mov
inc
loopne
jmp
push
sahf
in
mov
mov
dec
push
xchg
lock
pusha
and
push
adc
add
mov
jns
or
call
pusha
js
sub
shl
fidivrl
and
sbb
push
loopne
fwait
mov
adc
fsubrl
mov
movl
inc
pop
ds
and
int3
roll
add
fisubs
and
inc
outsb
ljmp
addl
insb
jg
rolb
and
push
mov
and
orb
jmp
loopne
rcrb
out
and
inc
inc
loope
emms
pushf
jg
mov
mov
and
aad
and
imul
push
mov
cwtl
int
and
add
and
andb
loopne
jge
xchg
leave
push
mov
shl
dec
fdivl
or
pusha
dec
ljmp
inc
xchg
xor
or
or
ja
push
pop
enter
inc
jnp
cwtl
cmc
xor
stos
and
mov
lock
mov
cmp
pop
imul
fwait
nop
into
push
shl
xchg
push
pop
inc
ret
out
ja
aaa
inc
jae
sarb
jmp
loopne
shrl
rolb
stc
sti
sti
mov
addb
inc
sahf
add
popa
adc
mov
xor
inc
cltd
cwtl
dec
push
fmuls
or
fs
jne
or
sbb
ljmp
loopne
mov
xor
mov
dec
iret
shlb
std
sub
iret
mov
or
push
adc
xchg
push
and
jb
or
jno
rolb
or
dec
push
icebp
movsl
mov
fisubrl
add
or
adc
cmp
jmp
lods
mov
enter
inc
js
xor
test
sbb
xor
lea
xor
jb
stos
popa
push
adc
dec
and
push
and
mov
movsl
mov
jmp
cmpl
inc
jle
pop
xor
fldenv
add
cld
fdivl
mov
cld
test
mov
sub
jecxz
xor
jl
int
xchg
out
ja
inc
cld
adc
shl
jecxz
test
xor
cld
inc
negb
cltd
pop
fldt
pusha
mov
rolb
cmp
pusha
add
sbb
addb
insb
lods
loopne
pusha
rcrb
shr
mulb
and
aam
push
stos
loopne
dec
and
shr
loopne
mov
pusha
lret
mov
jns
andb
sub
xor
cld
xorl
lfs
push
cmp
push
shlb
mov
mov
mov
loopne
inc
and
das
xor
cmp
in
test
inc
out
and
rclb
setg
fmuls
pusha
pop
fwait
xchg
lods
add
std
dec
cwtl
sub
rcrb
fnstenv
daa
aaa
mov
xor
pop
into
repnz
sbb
mov
pushf
aas
stc
ja
adc
adc
mov
jle
dec
ficoml
loopne
outsl
jg
addb
sbb
jg
pusha
add
jno
sbb
in
pop
pop
lea
inc
loopne
addr16
repz
and
imul
xchg
in
cmc
mov
jmp
xchg
push
cmp
add
lods
jge
adc
jb
jle
xchg
inc
pop
aaa
jle
int
aas
test
jp
push
repnz
push
adc
add
retw
imul
mov
jp
lock
les
jge
inc
xorb
pusha
mov
loopne
pushf
and
js
jmp
xchg
xchg
adcb
notl
adc
mov
out
mov
pop
mov
mov
inc
movsl
mov
flds
mov
sbb
fldl
orb
or
and
loopne
mov
dec
out
jg
daa
add
add
and
pop
mov
mov
loopne
sbb
out
ficoml
or
and
and
add
pusha
and
mov
or
inc
sbb
and
add
mov
push
lea
mov
and
mov
into
push
test
shrb
std
inc
or
js
mov
outsb
lret
push
mov
loopne
cmpsb
and
or
add
pop
fisttps
sub
pop
adc
lods
mov
cmp
lcall
les
ja
scas
loop
push
rorb
pusha
shr
and
orb
add
pop
xor
addr16
jbe
out
inc
dec
js
sahf
subl
sub
shlb
std
sahf
lea
xchg
popl
sti
cmpsl
cltd
enter
push
fwait
jo
les
inc
rclb
sti
dec
pop
decb
inc
rorl
and
dec
enter
loop
mov
call
add
push
int
mov
and
mov
out
push
mov
sub
push
push
cmp
mov
add
add
mov
adc
inc
loopne
xor
les
and
dec
dec
jae
mov
add
mov
cwtl
call
push
test
mov
imul
clc
inc
inc
imul
fcomp
andl
loopne
arpl
cmp
or
imul
push
cmpsb
add
mov
fistl
dec
int3
loop
popa
push
addr16
add
repz
shr
arpl
inc
dec
jb
or
cmpb
and
fsubrl
lcall
inc
test
inc
lret
pushf
pushf
cltd
xchg
adc
mov
add
xlat
sub
push
mov
xchg
andb
dec
movsl
dec
add
loopne
and
rolb
jg
sbb
addb
xlat
dec
fs
adc
and
jne
stos
inc
loopne
daa
popf
dec
inc
mov
dec
xor
pop
repz
xchg
shlb
jb
add
jnp
fwait
dec
rcr
lea
mov
stos
inc
das
lret
or
shll
xchg
push
pop
or
subb
pusha
fidivl
outsl
js
jbe
cmp
sub
cwtl
inc
xor
dec
cli
call
dec
mov
aad
shl
mov
add
lahf
inc
lds
fdivrl
xchg
mov
mov
stos
andb
add
lret
add
gs
out
jl
dec
mov
rolb
mov
mov
scas
insl
ljmp
ds
addb
std
sti
cld
mov
test
bnd
xor
dec
sbb
xor
repz
pusha
and
hlt
lea
inc
shlb
xor
fdivl
pop
pop
leave
jo
jle
pop
cmp
sbb
and
ds
jbe
je
jl
sub
jmp
sbb
mov
mov
jb
pusha
pusha
mov
xchg
addb
loopne
andb
pop
and
add
add
shrl
arpl
and
jmp
inc
add
mov
fmull
pop
cmp
jo
ret
mov
daa
mov
and
jbe
cmpsb
shl
jp
pop
scas
bound
mov
rolb
filds
lds
daa
add
dec
inc
cli
xor
dec
das
mov
adc
xchg
inc
ret
jnp
jge
push
pusha
loopne
ret
lock
mov
mov
sbb
loopne
fdivl
scas
leave
push
pop
outsl
cmpsb
add
sbb
xchg
jg
pop
jge
mov
mov
adc
or
shrl
rcrl
push
jp
leave
out
xchg
add
rol
icebp
les
pusha
test
inc
sbb
pop
dec
add
xor
lock
pusha
test
pusha
adc
loopne
xor
cltd
ja
xor
dec
out
inc
outsb
xchg
andb
dec
test
mov
xchg
push
push
mov
mov
test
ljmp
push
jns
sbb
or
pusha
jnp
shl
add
addl
addb
adc
push
arpl
add
loopne
xchg
lds
or
pushf
es
add
mov
push
loopne
xor
icebp
xor
aaa
mov
push
and
shlb
jns
ljmp
or
negb
add
sbb
mov
cmovl
out
lds
mov
mov
mov
cltd
fidivrl
pusha
loopne
stos
mov
adc
xchg
fmull
pop
sub
pusha
mov
ret
mov
rcrl
daa
mov
cmpsl
push
and
add
pop
pop
inc
enter
mov
mov
adc
jns
mov
add
xchg
xor
loopne
mov
sahf
das
rclb
test
pusha
aam
cli
jbe
rcl
cli
mov
andb
lcall
movsl
cmpsb
shlb
push
or
pusha
stc
lcall
and
ror
cltd
xchg
pop
mov
mov
mov
add
pop
adc
fidivrs
clc
shlb
mov
test
loopne
sub
add
sbb
jbe
xchg
fimuls
jns
jbe
repz
loopne
dec
std
cmpsb
add
test
cmp
xorl
shlb
jae
subl
adc
sub
cmpsb
loopne
and
push
and
movsl
adc
xor
pusha
push
mov
addb
push
add
push
insl
dec
sub
loopne
mov
stc
sbb
sbb
pusha
mov
or
add
dec
mov
sbb
or
xchg
pop
push
xorb
lods
inc
loopne
mov
sub
pop
andb
insl
leave
xchg
xchg
pusha
and
mov
in
jmp
and
jne
pushf
push
pusha
inc
sub
mov
loopne
mov
lret
xor
fucomp
inc
cmp
ds
rolb
mov
and
fwait
jl
cmp
mov
loopne
dec
lret
mov
int3
mov
cmpsl
or
inc
push
insb
xchg
and
cs
and
aam
add
loopne
cli
xchg
ljmp
jno
mov
mov
jnp
icebp
jo
push
insl
jmp
xchg
jge
ja
scas
inc
lock
add
inc
sub
sarb
mov
add
xchg
decl
sub
loopne
mov
loopne
cmp
pusha
inc
pop
std
ljmp
shlb
les
jbe
mov
push
pusha
sarb
and
loopne
or
and
inc
or
jmp
dec
stc
test
inc
shrb
and
and
shrb
outsb
or
rclb
mov
pusha
sbbb
imul
adc
dec
stos
rcll
data16
adc
repz
jbe
ret
mov
mov
mov
mov
enter
xchg
push
and
mov
add
sti
daa
ljmp
mov
push
imul
dec
repz
xchg
icebp
cmp
mov
sbb
sub
test
add
pop
push
cwtl
daa
repnz
cmpl
mov
push
push
rolb
andb
fwait
addb
addb
je
das
cmp
xchg
jp
pop
int3
sbb
add
insl
jl
push
jae
cmp
scas
add
xor
out
or
loopne
jb
xor
xor
adc
test
mov
stos
add
imul
adc
adcb
jne
std
ret
mov
in
imull
andl
loopne
jbe
cmp
mov
ret
in
cmp
ret
and
inc
mov
popf
jne
add
enter
clc
and
adc
push
xchg
outsb
push
inc
inc
bound
mov
dec
dec
jmp
loop
xchg
call
xchg
mov
cmp
loopne
inc
push
inc
rcr
into
scas
das
ror
push
cmc
stc
test
rorb
dec
dec
pop
mov
mov
sbb
movsb
add
andb
cwtl
jmp
loopne
push
sbb
outsb
test
add
das
out
mov
mov
pusha
loopne
pop
rcrb
in
out
fs
sbb
and
lods
test
outsb
jg
xchg
out
dec
adc
rolb
loopne
pushf
xchg
sbb
or
mov
add
push
clc
sbb
inc
jmp
cmp
daa
dec
dec
xor
pop
xchg
adc
cld
ljmp
lret
out
pop
fwait
and
add
mov
cmc
mov
pusha
addb
mov
add
and
mov
mov
push
xchg
rcrl
ss
mov
add
call
or
add
mov
lds
rorb
fwait
rorb
movsb
loopne
out
pop
mov
shlb
inc
ret
add
or
andb
pusha
and
mov
mov
out
inc
faddl
movsl
mov
push
pusha
pusha
jns
sti
cmc
sub
jp
jg
popa
xchg
inc
xchg
mov
add
ret
dec
sbb
pusha
jge
dec
dec
sar
lods
int
mov
and
adc
and
loopne
in
inc
pusha
jae
add
pop
add
loopne
and
fs
rolb
mov
and
xchg
sub
pop
inc
dec
jecxz
rolb
push
faddl
loopne
lahf
or
inc
mov
sbb
and
and
cltd
jmp
push
xor
xchg
pop
repz
aam
int3
aas
or
pusha
inc
sbb
pop
add
mov
imul
pusha
pusha
out
or
mov
ret
add
adc
and
jnp
pop
push
cmp
fwait
mov
loopne
dec
in
mov
inc
shlb
test
and
mov
into
push
jg
mov
loopne
mov
and
lcall
cs
mov
movsb
rolb
inc
shlb
ss
ror
xchg
mov
mov
mov
add
cmp
movsb
and
xchg
xor
popf
shll
sub
pusha
addb
ficompl
popf
pop
imul
cmpsb
mov
andb
into
cmpsl
pop
fdiv
cmp
lret
inc
cld
xor
lock
and
inc
popf
ret
jnp
out
pop
cmc
mov
xchg
jle
insl
pop
dec
push
call
push
out
sbb
or
and
push
ja
movsb
inc
and
lock
insb
cld
pop
les
add
aad
loopne
scas
jb
cmpsb
add
fstpl
inc
dec
cmp
cmp
inc
loopne
andb
mov
and
or
rcl
mov
fistps
xor
push
mov
ficoms
sub
mov
push
test
es
inc
arpl
pusha
lds
outsb
bound
add
pop
fisubrs
mov
pop
dec
pop
repz
add
jbe
jge
clc
aas
mov
out
pop
and
add
adc
and
inc
lock
inc
enter
mov
pop
and
adc
jp
andl
fdivrs
push
dec
out
add
call
pop
mov
cmp
inc
sbbl
cmp
sarb
cmpsb
rolb
pusha
jge
repz
xchg
jg
rcll
mov
leave
and
test
clc
cmp
loopne
movsb
add
aam
sub
add
nop
sub
loopne
fnstsw
lret
cmp
insl
jnp
loopne
add
loopne
pusha
movsl
icebp
rolb
push
mov
daa
pop
xchg
loop
test
mov
loopne
xor
addb
cmp
and
ret
inc
push
sub
mov
mov
iret
push
mov
mov
jae
lret
add
out
cmp
jl
int
int
aad
insb
rorb
sub
xchg
ret
dec
pop
ds
xchg
lds
rcrb
sbb
rolb
jno
lea
push
fldenv
mov
mov
or
sub
xchg
gs
push
xor
pusha
notb
jae
inc
adc
pop
push
push
into
out
dec
xchg
dec
lret
ja
arpl
sub
fistpl
mov
and
insl
shrb
pop
xor
mov
dec
jno
es
repz
test
jae
enter
loop
adc
sub
loopne
scas
pusha
mov
jmp
add
into
addb
sahf
fs
fistps
imul
add
rolb
cmp
mov
dec
nop
jmp
push
rolb
adc
fadds
rolb
cmpsl
adc
shll
rolb
or
vmulpd
pop
dec
push
cs
loopne
das
test
cld
mov
stos
pushf
jne
mov
inc
sub
and
call
and
dec
mov
loopne
jmp
jne
imul
loopne
pop
cmp
movsl
faddl
andb
jb
pusha
rcl
shl
add
divb
pop
rcr
push
pop
psrlw
xchg
push
aad
sbb
les
dec
adc
loope
dec
or
in
mov
fucomi
dec
and
loopne
ret
and
es
loopne
mov
inc
js
sub
lret
testl
gs
fimull
gs
stc
push
pop
sub
shlb
cmp
sbb
movsb
shl
aam
out
pop
cmpsb
inc
add
pop
mov
mov
xchg
out
pop
mov
cmp
addb
or
pop
xchg
sub
lea
insb
jmp
int
add
shlb
ja
and
xor
jle
jle
push
push
out
mov
lcall
sbb
iret
sti
xchg
lods
and
adc
movsb
addb
repz
imul
xor
add
clc
sbb
data16
adc
push
jae
and
lea
lret
sub
mov
sub
dec
sub
push
and
clc
stos
mov
inc
cmp
sub
sarl
mov
roll
add
call
add
and
loopne
mov
xor
daa
clc
mov
loopne
add
loopne
xor
mov
and
int3
jae
je
mov
ss
cmp
dec
add
rolb
fidivl
mov
dec
cli
movsb
mov
std
sub
enter
sbb
add
xlat
mov
lods
cmp
pop
stc
mov
rorb
lahf
mov
and
and
sub
orb
add
inc
xchg
loope
jp
pop
sub
xor
pop
dec
stc
jl
xor
addr16
cmp
dec
jb
fdivrs
inc
and
bound
inc
aaa
xchg
xchg
ljmp
mov
mov
xchg
frstor
in
xchg
pop
lahf
dec
pop
inc
dec
xchg
add
adc
mov
inc
sarb
add
adc
add
inc
push
add
mov
js
test
inc
mov
adc
aad
in
int
xor
movsl
pop
jmp
xchg
mov
popf
cmp
loopne
mov
imul
jmp
jg
or
xlat
jecxz
sbb
shl
cmp
fisubs
inc
and
cmp
addb
or
inc
and
pushf
aaa
mov
nop
pop
push
push
dec
or
imul
pusha
pusha
adc
mov
pusha
and
in
mov
not
mov
into
mov
pushf
mov
mov
push
dec
iret
jae
mov
in
lret
push
cltd
icebp
jge
dec
les
sbb
jg
iret
aam
mov
daa
fwait
xchg
lret
sarl
cltd
pop
lret
and
pusha
nop
ror
xchg
notb
or
loopne
ss
das
pop
pop
sbb
jmp
mov
loopne
bound
and
es
mov
lea
repnz
or
loopne
cltd
sahf
lds
mov
nop
out
test
and
sbb
pop
xchg
xchg
in
adc
pop
into
mov
inc
push
sarl
or
add
fsubl
clc
jecxz
xor
adc
mov
popf
and
jns
loopne
sub
loopne
andb
bnd
cmp
test
sbb
and
jo
inc
mov
fisubl
inc
inc
repz
fmull
shll
sub
pushf
negb
stc
ret
xor
push
mov
mov
rolb
and
jmp
inc
outsb
or
pusha
push
pop
or
pusha
sahf
dec
mov
add
lret
mov
xor
dec
lcall
cli
ret
loope
push
scas
inc
loopne
mov
out
shr
push
push
fidivs
mov
andb
call
and
cwtl
dec
rcl
or
add
and
orb
repz
int3
pop
mov
and
pusha
xor
dec
mov
and
in
fcomi
loopne
shll
push
cmp
test
inc
jge
mov
inc
mov
mov
add
filds
addb
out
cmp
cmp
adc
mov
sti
jl
out
fcmovbe
adc
xor
mov
xchg
fisttpll
and
jnp
sbb
xor
daa
cmp
aaa
cmp
add
sbb
lods
mov
sbbb
movsl
add
addb
rcrb
xchg
sub
mov
fcmovnu
push
pop
and
jnp
imul
addb
cld
push
push
andb
enter
stos
loopne
mov
jbe
inc
jl
jg
inc
dec
mov
mov
mov
fstps
sbb
pop
fadds
pop
add
xor
push
push
inc
add
shlb
sbb
xchg
jmp
pusha
inc
pop
push
inc
add
jg
stc
xlat
shl
inc
lods
shlb
popf
in
in
and
pusha
sbb
stc
mov
andb
sub
mov
inc
push
sub
out
xchg
sbb
loopne
test
add
add
xor
outsl
insb
dec
sti
mov
jmp
mov
ss
pusha
push
roll
and
push
roll
andb
sub
mov
lock
fmulp
mov
pusha
cmp
jle
push
pop
jl
inc
xchg
pop
pushf
dec
xor
ljmp
fldcw
int3
arpl
xor
loop
inc
add
test
pusha
mov
ret
mov
cwtl
shrb
lret
pusha
mov
arpl
xor
push
ss
dec
repnz
xchg
or
ror
ljmp
jmp
lcall
hlt
inc
jae
std
jecxz
mov
or
and
rolb
dec
aaa
addr16
fisubl
in
addb
pop
cld
jle
shlb
movsb
and
test
sub
cmpb
mov
xor
jmp
fmuls
sbb
jge
int3
enter
rclb
sub
inc
add
aas
xor
mov
sbb
fildll
pop
mov
sbb
mov
sti
lret
out
aad
out
jge
andb
popf
adc
pop
jecxz
rolb
loopne
inc
mov
dec
mov
add
add
andb
inc
iret
pop
addr16
add
or
inc
mov
inc
fisttps
sbb
mov
sbb
ror
add
nop
sti
fldt
sti
add
add
clc
dec
dec
bound
cmp
andb
push
insb
ret
pushf
push
andb
in
in
es
cld
out
aad
push
sbb
loopne
push
pusha
shlb
mov
push
daa
add
lret
and
pusha
mov
jns
loopne
or
call
mov
sbb
out
insb
xchg
xor
push
push
lret
loope
and
cld
mov
mov
jne
ret
push
test
pusha
mov
sub
loopne
lcall
xchg
popa
fimull
das
insl
fs
cmpsl
lock
add
out
call
les
jbe
and
mov
test
add
jo
or
xorl
lret
cmp
ja
cmp
fstpl
insl
hlt
aas
jl
adc
and
pop
ja
movsb
pusha
loopne
fsubs
popa
push
push
cmpsl
push
loopne
movsb
loopne
xor
cs
fnstsw
inc
adc
scas
loopne
inc
mov
and
fwait
lods
loopne
insl
not
imul
fdivr
jne
and
push
rolb
xor
cltd
jmp
sbb
fdivrl
lods
adc
jno
test
xchg
fwait
loope
push
mov
jno
xchg
jmp
ja
mov
scas
add
push
push
scas
add
sbb
sub
mov
cld
add
sbbb
mov
jae
loopne
xchg
movsb
pusha
inc
sbb
sub
icebp
outsl
xchg
mov
filds
ret
cmp
adcb
mov
sub
test
mov
inc
jmp
loopne
outsb
ret
sbb
cmpsb
inc
inc
cmp
sbb
ja
andb
xor
mull
inc
inc
popa
imul
xchg
in
inc
dec
push
xor
test
and
rolb
lgs
pusha
and
adc
notl
pusha
mov
pop
dec
jmp
mov
inc
mov
andb
fbstp
dec
ja
sub
pusha
xor
or
iret
aaa
jle
loopne
mov
leave
loopne
ds
pop
inc
mov
mov
pusha
clc
fcmovnb
mov
mov
inc
jmp
add
sbb
inc
sarb
loopne
xchg
sbb
pop
jg
xchg
stos
inc
add
loopne
lcall
iret
insl
lods
jp
testb
mov
xchg
mov
mov
add
pusha
add
and
out
sub
jle
test
test
std
ds
dec
lods
sub
in
ja
fnstenv
mov
sub
pusha
mov
minps
push
xlat
cmp
inc
xorl
das
xor
je
jo
shrl
ret
outsl
xor
aas
rolb
in
inc
int3
insl
loope
cwtl
cs
pusha
movb
pop
dec
jno
cmp
dec
sub
and
ja
or
popl
loopne
inc
dec
cltd
addr16
or
add
or
add
pop
jp
inc
pop
lret
cmp
inc
and
push
adc
xchg
xchg
fidivrs
add
in
push
fs
dec
jae
loopne
aas
xlat
and
testl
mov
push
jb
push
dec
cltd
bound
mul
imul
dec
jne
rol
jmp
rolb
lea
dec
pop
shll
add
mov
dec
hlt
dec
mov
push
clc
cmp
arpl
mov
sbb
add
mov
or
inc
adc
cmp
aam
out
test
ss
pop
cltd
mov
push
xor
or
imul
xchg
jne
push
mov
sub
test
add
inc
or
inc
lea
pop
xchg
mov
loopne
mov
pusha
movsb
and
add
add
imul
dec
xor
dec
rolb
stos
cmp
jae
loopne
cmovns
inc
stos
pusha
add
pop
xchg
mov
push
rol
out
cmp
pop
nop
push
bound
loopne
ret
icebp
es
and
in
mov
add
inc
cmp
fadds
jnp
inc
jbe
js
pop
mov
test
repz
jle
push
or
inc
subb
pusha
or
lds
and
push
or
cmpb
mov
and
sbb
mov
rorb
pusha
and
mov
inc
and
call
rol
in
dec
out
out
jp
mov
mov
xchg
jo
push
or
and
inc
shlb
mov
mov
mov
or
inc
insb
sub
movsb
shlb
call
xor
call
inc
pop
xchg
aad
ja
daa
adc
orl
shll
jmp
or
inc
adc
fdiv
divl
sbb
loopne,pn
xchg
into
enter
movsb
mov
inc
in
inc
mov
xor
outsl
dec
loop
imul
cmpsb
and
inc
xor
pop
pop
xchg
pop
test
pusha
out
sub
or
xchg
std
pop
jge
add
add
xchg
clc
scas
pusha
cmpb
pusha
push
bound
and
xor
loope
mov
adc
je
adc
mov
jnp
push
push
inc
stos
rolb
inc
mov
xor
xor
inc
andb
mov
xor
pusha
pusha
pop
dec
push
add
cs
xorb
loopne
notl
outsb
mov
add
pop
xchg
inc
hlt
dec
dec
or
sbb
movsl
xor
hlt
dec
inc
and
data16
je
jb
popa
cmpsl
push
mov
lcall
or
inc
adc
pop
add
mov
pop
jb
mov
mov
xchg
testb
insl
shlb
xor
dec
call
ja
rolb
sbb
pusha
pusha
jge
loopne
fsubrl
xchg
das
sarb
add
add
insb
mulb
dec
fcoms
dec
js
mov
sub
inc
cltd
xchg
mov
inc
fsubr
fstl
add
ss
dec
sbb
loop
mov
and
mov
mov
loopne
mov
je
xor
add
popa
sbb
lcall
inc
push
and
mov
add
mov
mov
shlb
pop
sahf
imul
loope
bound
push
movb
push
leave
scas
jae
data16
inc
scas
add
popf
pop
mov
mov
and
roll
inc
loopne
lea
pop
lcall
mov
cmp
pusha
or
loopne
inc
cmp
jns
sub
adc
sti
pop
inc
cmpsl
ds
fisttpll
loopne
xchg
sbb
scas
inc
pusha
and
stos
pusha
and
pop
or
insl
sub
push
mov
mov
loopne
sbb
mov
fwait
pop
cmp
adc
jno
ret
sub
add
xchg
test
mov
mov
insl
sti
popf
inc
pushf
cmpsb
shlb
inc
mov
dec
dec
adc
stos
and
sub
and
sbb
add
jne
addb
push
cmp
and
add
push
dec
or
add
mov
pusha
test
or
sub
and
pusha
mov
nopl
inc
push
pop
addr16
subl
xor
loope
xlat
jo
push
or
jnp
and
and
fdivs
loopne
mov
sbbb
cmpsl
rcl
add
mov
jnp
pop
je
and
je
lret
int
pop
stc
pop
mov
jge
mov
call
out
ds
push
add
mov
push
mov
int
adc
addb
pop
fcomps
mov
mov
cmp
enter
sti
xchg
cmp
add
andb
stos
inc
loopne
scas
shlb
aam
js
mov
andb
mov
pusha
mulb
cmc
and
add
pop
stc
mov
lds
popf
mov
movsl
lahf
inc
pushf
out
insl
test
pusha
mov
rcr
mov
notb
fstps
dec
movsl
aas
daa
iret
aam
cmpsl
jno
lahf
mov
mov
and
inc
push
mov
cld
test
inc
sbb
popf
sbb
jne
jge
jecxz
stos
rolb
pusha
dec
jbe
fimuls
outsl
lahf
cltd
ljmp
loopne
mov
xor
xorl
pusha
xlat
mov
fcompl
cltd
push
loop
sub
sarb
xor
aaa
or
mov
jb
sub
mov
dec
aaa
dec
sbb
add
mov
jo
mov
loopne
mulb
cmpsb
pusha
loopne
and
lock
adc
jmp
inc
xchg
fdivr
fs
adcl
sbb
mov
mov
mov
mov
movsb
pusha
andb
sbbb
mov
movsb
mov
sbb
inc
int
and
sub
and
cmovbe
arpl
in
jle
addb
pusha
xchg
lahf
scas
scas
test
std
and
shlb
lahf
mov
add
pusha
fbld
fsub
test
dec
push
jle
nop
pop
loop
fistl
sbb
jb
xor
insb
adc
hlt
jg
sbb
mov
cmp
jg
andb
xor
mov
mov
sbb
mov
das
out
aas
outsb
lock
clc
mov
mov
iret
inc
mov
clc
mov
mov
retw
push
scas
xor
data16
movsb
inc
loopne
cmp
mov
inc
ja
pop
mov
sub
addb
and
mov
pusha
loopne
mov
mov
sarb
xlat
dec
cli
jmp
std
sbb
ljmp
add
shrb
adc
adc
xor
dec
mov
lea
loopne
orl
rclb
icebp
sub
andb
xchg
and
out
mov
sbbb
cltd
push
mov
stos
add
pop
mov
sahf
sahf
sub
scas
inc
mov
pusha
dec
clc
jbe
add
inc
jno
insl
sbb
shlb
jo
push
push
scas
imulb
xor
fisubrl
inc
add
in
sub
shl
ds
imul
ljmp
mov
pushf
push
add
xchg
out
mov
inc
add
loopne
and
ret
or
fnstcw
repz
movsb
add
add
sahf
mov
inc
jno
sti
or
and
add
push
loopne
push
jmp
dec
jle
cmp
or
pusha
ret
sbb
adc
adc
lret
push
scas
push
jmp
mov
mov
rolb
push
andl
sub
loopne
cmpsl
xchg
dec
push
sti
sbb
or
loope
mov
dec
xchg
jne
cltd
pop
inc
imul
and
lds
mov
cmpsb
and
push
push
and
dec
add
in
faddl
scas
lds
loope
lret
shlb
mov
sub
jg
test
xchg
or
subb
pusha
adcb
hlt
fisubs
xchg
out
add
sub
gs
and
dec
cmp
dec
fs
or
and
ss
mov
push
sub
addb
iret
imul
shll
and
sarb
aaa
mov
pusha
or
loopne
movsb
pusha
mov
loopne
ss
inc
push
add
cmpsl
cmp
ret
adc
and
adcb
add
dec
xchg
xchg
sbb
or
xchg
fistpl
rolb
imul
aam
lahf
or
fisubrs
jb
mov
jbe
jo
dec
testb
xchg
mov
popa
push
fwait
test
loopne
xchg
aas
xchg
pop
mov
push
and
push
loope
add
test
add
out
jno
pusha
loopne
pop
push
inc
subb
mov
sahf
lahf
in
ds
jb
dec
aaa
out
pop
addr16
test
dec
add
pusha
cmp
repz
sar
inc
insl
inc
sbbl
jnp
into
sbb
rol
pop
loop
or
and
inc
mov
jne
sbb
mov
test
mov
sbb
ss
pushl
insb
out
dec
mov
or
and
mov
mov
and
add
pop
pop
mov
bound
dec
fsubs
mov
cmp
loopne
sbb
mov
adc
call
mov
outsl
sarl
scas
add
testl
xor
pop
imul
sub
pop
rcl
ja
rolb
pop
mov
loopne
mov
add
ja
add
mov
mov
pushf
stos
inc
mov
push
js
mov
push
or
aaa
xchg
or
inc
and
pusha
mov
orl
push
addb
mov
fcmovnu
aam
or
inc
iret
add
and
cltd
mov
add
xchg
add
pop
inc
fs
mov
sbb
enter
sbb
rcrb
pusha
in
push
dec
in
movsl
repnz
mov
cmp
jp
lcall
sub
and
and
mov
jno
pop
into
shlb
pop
xlat
cli
sub
inc
nop
inc
push
mov
mov
pusha
cmpsl
ljmp
clc
insb
shl
addb
sti
pop
cmp
scas
insb
jne
aaa
adc
xchg
mov
pusha
and
cmp
lret
cmp
jp
ds
scas
pusha
shlb
ja
rcll
addr16
movsl
cmp
enter
bound
inc
add
loopne
shlb
scas
xchg
cmpsb
add
mov
lods
loopne
fadds
pusha
rolb
dec
jno
sbb
xchg
dec
pop
cmp
movl
movsb
loopne
xchg
jnp
or
enter
xor
cmpsb
and
out
shl
arpl
fstpl
inc
sub
outsl
iret
not
jg
xchg
cmpb
repnz
vaddpd
fisubrl
loopne
aad
jl
xor
int3
and
in
repz
aam
inc
pop
mov
xchg
jno
dec
jp
add
mov
pusha
adc
testl
and
mov
pop
stos
addb
xor
add
cmp
repz
loopne
sub
les
jg
lods
pusha
and
pop
repz
adc
sub
fxch
push
xchg
jmp
std
addb
sbb
lds
and
or
jp
ljmp
mov
adc
rolb
sbb
idiv
shll
xchg
push
icebp
test
jns
xor
scas
pusha
inc
mov
add
pop
stos
add
xchg
inc
int3
je
mov
inc
insb
ror
sbb
stos
or
and
push
sbb
xchg
or
dec
test
loopne
mov
xchg
in
xor
pop
loopne
rolb
cmp
push
scas
and
les
sbb
dec
movsb
addb
out
test
push
inc
sbbb
dec
adcl
inc
shll
mov
cmpsb
mov
aad
lahf
mov
xchg
add
inc
and
arpl
and
add
xchg
add
pop
inc
sub
add
pusha
and
mov
lcall
rolb
add
call
fcmovne
popa
lret
cmp
push
jg
loopne
mov
add
leave
cmpsb
mov
xchg
or
add
in
sbb
addr16
xchg
fimull
push
movaps
mov
arpl
movsb
addb
subb
add
lcall
aas
or
addb
add
cmp
dec
pop
imul
outsb
sbb
pusha
pop
out
jp
pusha
sarb
int3
daa
dec
es
and
stos
add
add
lret
std
cmpl
inc
xlat
mov
mov
and
xor
pushf
lock
das
in
mov
sbb
mov
mov
xchg
jns
mov
imul
mov
add
shlb
and
and
test
and
adc
pop
mov
mov
sub
jmp
sti
sarl
inc
add
push
imul
cwtl
sahf
mull
pop
add
sub
mov
add
movsl
adc
and
loopne
dec
out
dec
les
mov
ljmp
out
loopne
and
scas
and
int3
repz
das
push
dec
loope
shlb
hlt
cli
ret
cmp
incb
mov
adc
loopne
ret
loopne
xlat
and
inc
add
xchg
lds
mov
jo
add
cmp
std
push
mov
adc
inc
pusha
dec
and
cmp
adc
xlat
add
fldcw
or
movsb
mov
repz
test
repnz
inc
repnz
pusha
inc
xor
push
ret
inc
cmp
leave
lcall
mov
ja
cmp
int3
mov
in
mov
xorb
int3
jb
mov
xchg
movsb
inc
loopne
jl
imul
and
pusha
cli
fwait
fwait
xor
sbb
and
decl
repnz
fidivrs
xor
mov
loop
jp
or
jbe
sub
xchg
jl
cmp
xor
xchg
aas
mov
loopne
stc
sti
lcall
pop
fs
gs
pusha
lahf
lock
fs
dec
out
push
ficoml
shlb
inc
jl
cmp
mov
or
inc
divl
push
and
imul
jl
fsub
xorl
push
shlb
lcall
loope
test
pusha
or
and
jbe
int3
mov
add
xchg
loopne
mov
push
dec
cmp
and
and
mov
stos
xchg
push
cmpsb
and
xchg
cwtl
xlat
test
mov
test
inc
cs
in
mov
pop
or
add
dec
inc
mov
mov
scas
pusha
pusha
lods
adc
sbb
gs
adc
pusha
fstl
ja
xchg
je
lods
push
arpl
in
cltd
mov
pop
popa
dec
dec
subl
pusha
mov
jp
mov
jno
pop
pop
dec
jnp
cmp
popl
mov
add
movsb
inc
cmpb
or
mov
inc
or
add
xor
rol
pop
and
add
sbb
bound
push
fsubs
repnz
push
sub
jge
mov
imul
mov
add
shlb
and
xor
out
les
addb
mov
call
adc
mov
push
out
mov
sahf
stc
or
call
xchg
inc
mov
pusha
pop
mov
add
aaa
mov
incl
add
adc
outsl
lods
andb
add
inc
mov
add
cltd
lea
inc
xor
adc
sub
cltd
pop
scas
shl
jecxz
mov
add
jo
rorb
adc
sub
inc
sub
and
addb
into
jl
scas
addb
iret
add
xlat
pusha
cmpsl
adc
loopne
das
xor
jge
or
mov
jb
jnp
cmp
cmpsl
stc
iret
inc
cwtl
jecxz
aad
loopne
imul
mov
add
add
cld
jnp
loopne
and
or
int3
ljmp
rcrl
fwait
xor
inc
add
addr16
xor
lods
add
call
jno
sbb
les
out
or
cld
aad
cmp
adc
fildl
add
sbbb
xor
and
xchg
push
or
loopne
and
and
xorb
mov
pop
test
mov
andb
push
arpl
and
cwtl
mov
loopne
dec
jge
and
or
andb
inc
xor
cli
or
inc
out
ret
jb
inc
mov
mov
pop
repz
ljmp
inc
orl
jb
call
add
push
dec
dec
jl
aam
add
mov
addb
or
cmp
mov
mov
xor
loopne
jb
xlat
adc
loopne
call
push
jb
mov
add
or
xor
jp
xchg
negb
repz
dec
add
pop
mov
andb
jno
cmp
add
ret
inc
in
imul
adc
inc
cmp
xchg
mov
lret
mov
add
loopne
dec
pop
sahf
divb
clc
and
cmp
andb
imul
mov
fadd
enter
xchg
add
push
inc
pusha
test
inc
pop
push
les
inc
add
shrb
inc
mov
push
aaa
repnz
leave
fdivrp
push
shl
es
and
bound
add
sti
mov
push
loop
mov
add
rolb
and
mov
fcomi
jbe
cli
aad
push
adc
and
stos
addb
inc
roll
rcrb
es
and
daa
fs
call
lods
sahf
jmp
mov
insb
data16
push
cmc
popf
xor
popa
pop
cmp
mov
push
sbb
adc
movl
push
loopne
pusha
scas
mov
repz
push
and
add
cmp
cmpb
mov
gs
imul
dec
test
push
jg
sub
pop
out
std
xchg
dec
aad
pusha
inc
out
scas
and
adc
cmp
jmp
out
push
pusha
and
aas
nop
pop
cmp
pusha
mov
addr16
push
xchg
mov
fidivs
out
xchg
shlb
mov
xchg
lahf
jb
enter
popa
adc
in
xchg
push
dec
jg
cmc
jl
andb
negl
mov
mov
movsl
sbb
push
inc
je
lods
push
mov
inc
rcr
int
jo
aad
mov
xor
imul
and
scas
add
gs
arpl
call
add
loopne
movsb
andb
fcompl
loopne
pop
push
cmpsb
pusha
and
adc
les
and
data16
jecxz
dec
aas
out
mov
shl
repz
sbb
push
push
imul
pshufw
push
add
rclb
and
push
mov
xor
lods
inc
cmpsl
sbb
xlat
cmp
inc
and
mov
add
insl
pop
test
std
movsb
and
dec
jne
ss
arpl
and
add
out
sbb
cmpsb
add
pushf
push
lods
sbb
inc
and
inc
test
into
mov
adc
add
call
push
add
inc
inc
mov
cmpsb
pusha
inc
aas
xor
pop
mov
and
fmul
push
mov
mov
inc
sti
lods
mov
mov
movsb
and
push
jb
fists
jmp
fs
fs
aam
push
addb
stos
mov
cmp
aad
andb
pop
xlat
popf
idivl
mov
mov
and
int
add
inc
sbb
cli
inc
and
jbe
pop
mov
fistps
fs
pusha
sarl
mov
add
and
xchg
sub
pusha
adc
and
jle
lock
xor
cld
call
sbb
lret
or
mov
add
mov
push
add
add
roll
imul
addr16
push
add
push
in
out
shll
sub
mov
adcb
dec
push
xlat
cmp
test
and
pusha
out
sbb
std
push
lea
test
mov
dec
cmp
inc
jae
jnp
xor
push
mov
jmp
inc
inc
push
mov
xchg
icebp
test
in
sbb
out
pop
mov
or
cltd
pop
fs
inc
fs
lcall
inc
adc
mov
loopne
and
lret
adc
lret
inc
cltd
imul
and
mov
cmp
xchg
and
stos
and
loopne
cmpsl
inc
sub
adc
add
sbbb
push
jno
add
fisttps
sbb
fdivs
xor
fisttpll
shlb
adc
lret
sbb
int
inc
lock
arpl
jge
pop
mov
mov
add
adc
mov
mov
mov
pop
nop
inc
add
cmpb
cmpsb
loopne
jle
mov
mov
lret
xchg
mov
push
movsl
ljmp
mov
xor
daa
mov
lods
add
ret
jae
inc
mov
inc
aam
shlb
or
add
ja
cmpsl
lds
push
mov
sbb
cmc
in
pushf
mov
cmp
xor
leave
aam
jbe
ljmp
fwait
nop
push
movsb
inc
shl
or
inc
jle
cmp
and
adc
inc
pusha
sbb
loope
mov
fnstsw
mov
push
lods
rol
and
shlb
rcrl
xor
pop
int
push
sti
aas
mov
xor
sub
push
xor
stc
or
out
pop
dec
scas
and
inc
mov
idivb
into
add
inc
cltd
jo
mov
adc
inc
inc
cmc
lods
mov
loop
popf
ljmp
adc
jmp
mov
or
adc
loopne
add
inc
mov
mov
es
mov
cmp
inc
mov
inc
bound
cwtl
xor
pop
push
loopne
jae
add
shlb
mov
mov
mov
outsl
dec
sub
fxch
incl
repnz
pop
inc
and
push
mov
cmp
and
mov
nop
test
mov
jecxz
inc
add
rolb
fsts
jecxz
jle
addb
xor
scas
shlb
movsb
rol
jge
dec
cmc
daa
sbb
lahf
add
add
aad
sbb
shrb
and
rol
cmp
rorb
hlt
push
mov
loopne
or
inc
cmp
mov
js
mov
inc
test
add
and
js
xchg
cmp
dec
fcompp
mov
lock
ss
jl
addr16
or
shrb
stc
sar
and
loopne
aaa
stos
addb
xchg
inc
add
enter
ret
and
pop
xchg
and
cmp
inc
int3
stos
mov
cmpsl
subl
sti
mov
and
jp
ss
or
int
stos
mov
lods
xchg
inc
into
stos
pusha
inc
jo
pop
push
outsl
fs
and
mov
pop
adc
mov
iret
pop
in
pop
std
mov
fistps
push
pop
scas
push
dec
mov
and
mov
insb
inc
adc
mov
ss
mov
adc
push
mov
xchg
xchg
lcall
jae
inc
loopne
dec
xchg
xor
mov
jbe
das
addb
jg
inc
pop
ja,pt
add
or
jb
or
and
adc
and
lea
ja
xorl
mov
pop
sub
subb
inc
mov
rolb
loopne
inc
stc
hlt
out
fsubl
shlb
shl
cmp
add
rol
xor
fildl
sbb
xor
into
jb
dec
mov
xchg
mov
popa
inc
cs
add
addr16
inc
inc
inc
lds
rcll
popf
cli
mov
lret
mov
pusha
stc
push
push
fsub
xor
mov
pop
mov
pusha
iret
sub
push
rolb
mov
cmpsb
loopne
jb
adc
std
push
mov
mov
adc
roll
jb
je
mov
jmp
mov
inc
clc
das
xchg
add
and
stos
add
andb
fwait
xchg
cmp
loopne
loopne
hlt
adc
jne
ss
mov
aas
xchg
cwtl
sub
jb
pusha
cmpb
jle
shlb
fldcw
mov
adc
test
fs
jno
xchg
pop
add
subb
mov
mov
sbbb
jno
lcall
int
aam
mov
and
andb
jae
or
rorl
cmpsb
loopne
outsb
cmp
jae
xchg
pop
mov
and
repz
mov
mov
loopne
test
mov
adc
add
loop
sbb
mov
mov
mov
or
loopne
dec
icebp
sbb
std
xchg
mov
and
xor
jo
sub
mov
pop
outsl
loopne,pn
cmp
mov
pop
pop
icebp
das
incb
inc
inc
jnp
in
adc
call
cmpsb
mov
lcall
out
repz
jne
ljmp
stos
inc
inc
lods
pusha
add
sub
subb
jmp
js
mov
and
cmpsb
mov
add
and
fadds
jle
popf
ret
push
xchg
daa
cmp
jo
pusha
mov
pusha
clc
or
inc
mov
inc
sti
jmp
add
mov
adc
xor
or
loopne
outsb
loopne
repnz
jp
pop
shlb
out
test
inc
mov
add
lock
jns
add
and
in
sub
inc
daa
std
ljmp
mov
js
ss
lods
inc
cmpb
inc
mov
leave
cmpl
mov
jo
pop
or
mov
rclb
push
pop
fdivs
sbb
xchg
pop
popf
clc
outsl
jns
pop
jns
cmpsb
add
sub
push
push
jae
out
mov
xchg
test
jb
pop
adc
mov
loopne
addr16
test
lock
sbb
ja
popf
into
addb
ret
xchg
mov
mov
sub
loopne
adc
fwait
dec
mov
and
repnz
aam
addb
add
cld
mov
loopne
pop
xchg
inc
movsb
mov
jecxz
push
bnd
sbb
loope
inc
cmp
mov
mov
xor
sub
sbb
xor
inc
ret
adc
stos
and
jl
mov
xor
insl
mov
jns
add
shrb
cmp
sub
inc
pop
je
in
and
in
or
add
dec
xor
sbbb
and
out
out
fildll
aaa
mov
mov
and
loopne
sti
aaa
mov
push
pop
lret
stos
shl
or
mov
pop
pop
decb
sub
test
decb
push
pop
scas
inc
xorb
cmp
mov
jmp
mov
cmp
cld
mov
int
lcall
cmpsl
mov
bound
pushl
add
pusha
add
stos
mov
les
loopne
mov
mov
jp
mov
xchg
shlb
into
push
add
pusha
mov
rorb
test
loopne
mov
xchg
dec
mov
push
and
and
mov
enter
clc
xchg
add
mov
mov
outsb
mull
adcb
xchg
pushf
clc
push
jno
xorl
std
pop
xchg
mov
arpl
mov
mov
or
adcb
xchg
andb
cmpb
sub
addb
aad
mov
pushl
rol
aas
pop
fcomps
addb
loopne
icebp
xor
sahf
fwait
push
inc
xchg
lods
mov
arpl
stc
rclb
push
inc
add
jmp
mov
aaa
pusha
fisttps
jbe
mov
push
adc
cmp
arpl
jl
add
push
inc
dec
mov
fnstsw
mov
jnp
daa
mov
ret
xchg
nop
fs
add
out
jmp
jg
or
and
adc
movsb
addb
pop
add
aas
cs
pusha
icebp
cmp
jecxz
push
lds
std
mov
jg
iret
leave
mov
rclb
jle
aaa
xchg
mov
and
and
inc
pusha
dec
scas
pop
fisubl
sub
and
mov
addb
rcll
frndint
sbb
dec
add
sbb
aad
push
idivl
inc
sub
test
inc
insb
les
iret
out
xor
int3
mov
aaa
mov
add
ficomps
rolb
cmp
outsl
and
cld
loope
and
shlb
test
insl
sbb
xchg
divb
js
push
dec
test
add
xor
mov
idiv
sub
sahf
int
xchg
pop
mov
sbb
inc
ljmp
push
std
shll
outsb
out
test
add
ss
mov
and
and
loopne
arpl
cld
push
test
mov
rcrl
sbb
add
shlb
sbbb
inc
addr16
dec
push
je
dec
mov
mov
cmp
shr
loop
mov
mov
add
sub
add
sbbb
mov
iret
cmovo
imul
pop
push
add
xchg
stos
and
cld
pop
sub
sub
insl
pop
stos
jle
ret
rcl
sub
and
mov
pusha
push
mov
insb
popf
push
mov
or
add
sub
mov
dec
mov
pop
jg
sub
shll
push
repz
jb
les
in
ss
dec
outsl
adc
mov
adc
jp
and
repnz
pop
xchg
xchg
push
lcall
inc
mov
inc
pop
add
loopne
dec
jno
cmc
shrb
add
mov
movsb
addb
rolb
push
jno
inc
xchg
and
add
pusha
int3
push
push
stos
stos
inc
ror
xchg
jo
sahf
and
out
test
loopne
pop
scas
cmp
in
inc
sbb
insb
adc
addb
aam
insl
and
scas
rol
push
sub
or
add
add
sahf
nop
call
mov
jp
inc
inc
cmp
in
inc
mov
mov
xor
jg
and
addr16
hlt
lret
cmp
adc
ljmp
out
mov
loopne
or
out
lods
loopne
divl
and
cmp
addb
shlb
inc
repz
outsl
sub
push
and
test
add
pusha
aad
jnp
fiadds
cmp
into
sbb
add
loopne
les
shlb
addb
cmp
sbb
aaa
popl
push
js
sub
push
pop
or
xor
push
rcll
mov
cmp
fwait
add
pusha
xor
rorb
add
add
fcmovne
nop
cmpsl
out
xchg
stos
loopne
ds
adcb
int3
jmp
or
inc
std
enter
sub
and
or
mov
rcrb
mov
mov
outsl
ret
incl
xlat
mov
daa
aas
cmpl
jp
ds
xor
ret
insb
ror
xor
shrb
addb
inc
and
inc
lahf
lock
mov
icebp
repz
mov
mov
and
sbb
jg
cmp
vminsd
out
push
enter
xor
cmp
xchg
andb
pusha
jo
rolb
sub
inc
outsl
das
mov
mov
lock
sub
loopne
and
loopne
dec
insl
loopne
gs
shl
dec
dec
pop
dec
shlb
shlb
inc
sub
shlb
mov
inc
into
sbb
mov
pusha
rorb
ficomps
mov
subb
mov
inc
sub
xchg
daa
mov
shr
mov
jg
test
and
mov
das
aas
leave
sbb
add
les
mov
and
mov
imul
fmuls
cld
mov
mov
sti
clc
sub
sub
inc
dec
adc
mov
jle
mov
loopne
jecxz
das
and
fsubrs
pop
out
out
inc
nop
pop
inc
or
loop
and
rorb
add
cmp
mov
orb
mov
imul
mov
aas
mov
imul
push
rolb
cmp
jb
aad
mov
stc
and
pusha
mov
pushf
adc
loopne
mov
push
shlb
and
or
cmp
inc
mov
mov
je
xor
pop
dec
stos
mov
subb
inc
loopne
scas
aam
out
insb
mov
andb
jne
jl
dec
jno
fstpl
add
jmp
gs
xlat
adc
imul
adc
or
dec
loopne
mov
stos
inc
xorb
push
test
inc
dec
xor
loop
sub
mov
cltd
pop
enter
and
inc
sbb
cmp
and
inc
gs
xor
pusha
loopne
dec
cmp
sbb
insl
shll
mov
jmp
stos
inc
mov
mov
pop
lods
sub
adc
out
or
in
cmpsb
inc
add
loopne
test
and
mul
xchg
xor
inc
sbb
and
sbb
xchg
dec
loop
mov
call
add
inc
das
jp
dec
push
xchg
das
bound
ljmp
adc
jge
iret
push
push
xchg
cmp
ljmp
ss
mov
ds
cmp
sbb
scas
mov
aam
cmp
or
andb
xchg
movsl
int3
fisttpl
fs
stos
in
and
scas
mov
mov
pusha
subb
add
sub
outsl
sbb
mov
fwait
push
mov
sbb
out
pop
into
fs
loopne
loopne
push
inc
push
cmpsb
loopne
cld
mov
pop
cmp
stos
inc
jb
dec
mov
nop
adc
add
addb
push
mov
popa
clc
push
add
and
mov
test
incl
and
pop
call
movsb
loopne
les
cld
dec
popf
add
mov
inc
inc
xlat
pop
mov
mov
cmpsb
mov
mov
cmp
in
pop
pop
add
repz
ljmp
arpl
and
xor
bnd
mov
pop
jb
xchg
dec
fsubrl
and
sbb
inc
rcll
call
cmp
mov
pop
pop
or
inc
insb
or
xor
in
aaa
jb
sti
or
mov
shlb
lret
dec
mov
clc
sbb
imul
or
shlb
sahf
pop
insb
inc
pushl
xlat
adc
popf
inc
shrl
scas
mov
aad
mov
push
jmp
jge
inc
and
in
and
inc
test
loopne
stos
and
dec
lods
sub
pusha
cmpsb
and
ret
shrb
lds
push
sub
cmpsb
loopne
js
xchg
push
pusha
pusha
loopne
cmp
addb
inc
and
mov
jo
sbb
sbb
pushf
inc
stc
cmpsb
and
cmpsb
addb
mov
mov
inc
loopne
in
imul
jmp
push
and
xor
inc
cmpb
orl
xchg
jbe
insl
adc
xor
loopne
sbb
fimull
mov
and
pusha
mov
xor
addl
fcomi
cs
mov
loopne
adc
bound
push
in
mov
inc
insl
cmp
jmp
add
les
sub
inc
fcomps
mov
rorb
sti
mov
and
xor
and
pop
xchg
cmpsl
movsb
andb
mov
mov
inc
addl
jo
loopne
insb
sub
inc
push
mov
in
rcr
add
sub
sbb
shlb
movsb
pusha
orb
push
add
pusha
movsb
add
add
xor
jle
je
dec
dec
or
mov
rclb
daa
add
push
adc
jp
dec
and
mov
test
loope
pop
and
cmp
lcall
test
add
sarb
pop
popa
and
pusha
imul
imul
icebp
pop
cld
mov
add
add
repz
repz
add
xchg
lahf
add
xchg
pop
jl
stos
or
cmp
lea
addb
cmp
dec
or
inc
jne
jnp
std
jmp
stos
addb
shl
or
jge
int
cwtl
add
pusha
jne
push
test
and
mov
mov
out
push
add
clc
adc
add
sbb
sbb
cmp
nop
xchg
mov
add
inc
mov
out
xor
jmp
out
jae
sbb
cli
sub
add
xlat
adc
repz
sahf
pop
jmp
adcb
dec
jmp
mov
cmp
jne
sbb
add
flds
add
pusha
ret
and
js
inc
pop
rcrl
nop
adc
fldl
andb
enter
mov
cmpsb
inc
pusha
push
cli
xchg
addb
mov
stos
pop
popa
add
sbbb
adc
les
fs
lods
loopne
ret
stos
lret
push
loopne
jb
shrb
inc
and
push
jecxz
hlt
paddusw
std
cwtl
dec
pop
fldcw
mov
fs
sti
cmpsb
loopne
dec
fimull
bound
out
mov
dec
sbb
imul
add
test
pusha
es
dec
sub
sub
jne
sbbl
pop
insl
and
add
xchg
shl
loopne
adc
ret
pusha
jb
les
pop
sub
cmpsb
rolb
call
xchg
push
aam
cltd
into
dec
loope
fstpl
pusha
insl
sub
add
loope
repz
xchg
in
and
repz
loopne
push
cmpsl
jp
cmpsl
and
adc
loop
and
xor
out
adc
and
push
ret
cmpsl
aas
mov
jmp
xchg
mov
shlb
xchg
mov
rolb
rcrb
mov
or
mov
mov
jmp
rclb
inc
inc
fs
sub
dec
outsl
inc
and
mov
test
pusha
pop
mov
adc
cmp
test
inc
rclb
pop
adc
xchg
js
push
mov
jmp
shr
fldt
cli
xor
dec
je
addb
movsl
test
jle
inc
inc
sbb
andb
sbb
nop
out
out
mov
mov
les
cmp
and
lret
add
adc
lock
fisubrl
enter
aaa
mov
in
inc
cld
sub
inc
and
and
xchg
or
addb
or
mov
mov
xor
pop
in
andb
fsubp
mov
pop
mov
fdivrs
aas
push
call
mov
push
xor
dec
mov
ja
xchg
jns
push
add
and
ss
xchg
pop
push
cld
pushf
int3
cltd
lret
cmp
xchg
push
add
mov
inc
xchg
loopne
lods
test
mov
jmp
aaa
scas
rolb
mov
jnp
and
push
sbb
pusha
rolb
stos
inc
mov
cmpb
loop
testl
xchg
cmpsl
mov
loopne
jg
cwtl
add
add
and
jbe
rcr
adc
sub
inc
fsubl
cs
xor
loopne
jbe
and
loope
xor
mov
call
mov
xorps
push
dec
out
sahf
repnz
inc
inc
sbb
xor
xchg
or
lret
pop
imul
lret
add
ss
push
addb
and
ficoms
pushw
div
in
rorl
inc
and
test
das
roll
cmp
leave
lods
fbstp
xor
jnp
cld
pop
in
mov
loopne
icebp
push
cltd
ja
pop
into
cwtl
out
jno
pop
cmp
pusha
loopne
loopne
or
jo
inc
mov
ja
fsubl
pusha
mov
ficoml
popf
fists
add
loopne
imul
loopne
adc
bound
cmp
clc
mov
or
cmpsl
insl
addr16
mov
cld
fdivl
mov
ja
xor
popa
mov
in
or
sbb
stc
js
sbb
fildl
in
je
mov
mov
rolb
frstor
in
pusha
dec
arpl
sub
mov
repnz
cmp
loopne
pop
jle
int3
adc
ds
pop
popa
pusha
xor
mov
int
add
scas
fwait
dec
ror
mov
inc
push
pusha
rol
pusha
rorb
xor
ja
pop
bound
jmp
cmp
insb
das
popf
cmpsb
add
and
out
jo
mov
adc
das
cmpsb
add
test
inc
insl
jp
jo
xor
inc
loopne
xchg
and
add
outsl
adc
xchg
fs
xchg
sub
lahf
dec
pop
cmp
repz
cmpsb
add
xchg
cld
sbb
je
sbb
int
inc
imul
jg
mov
popf
stos
xchg
cmp
add
sbb
pop
xchg
mov
aaa
and
ror
loop
shlb
and
and
pusha
mov
jge
loopne
mov
push
sbb
xor
dec
push
dec
push
cmp
aaa
insb
fwait
insb
add
mov
addb
bound
lods
das
xchg
jnp
jge
andb
out
out
push
addb
inc
sbb
and
sbb
and
cmp
xor
rolb
pop
push
adc
fiadds
and
icebp
int
mov
clc
dec
mul
in
push
ror
push
pop
test
mov
loopne
cli
roll
inc
stos
mov
pushf
das
pusha
cmp
inc
jl
iret
and
jo
sub
add
out
out
push
xchg
mov
add
loopne
subl
loopne
xor
mov
and
add
pushf
mov
shl
cmp
les
add
xchg
xchg
sti
dec
adc
aaa
loopne
push
lods
inc
push
js
push
or
pusha
das
ret
rolb
pusha
cmp
dec
movsb
loopne
out
cltd
mov
mov
flds
add
outsb
test
add
in
cmp
scas
jne
in
cmp
cli
xchg
loopne
mov
lahf
int3
jo
xor
push
sub
js
push
out
lds
push
cmp
mov
sbb
or
ror
adc
out
enter
dec
mov
call
mov
dec
jmp
lcall
loopne
movsb
add
mov
mov
add
xchg
rolb
mov
mov
jl
lds
mov
ja
mov
inc
inc
jns
or
pop
lret
je
stos
loop
cmp
fwait
cwtl
out
hlt
shrl
mov
jo
dec
pop
xchg
in
addb
mov
loop
pop
and
in
sbb
jge
imul
loopne
cmp
aaa
cld
daa
dec
adc
mov
adc
cmp
mov
and
mov
push
mov
mov
inc
mov
mov
add
and
add
sbb
dec
outsl
sbb
inc
xor
mov
shlb
pop
dec
cmc
sub
mov
je
scas
andb
mov
rorb
and
arpl
mov
push
loopne
cmp
cltd
stc
xchg
push
mov
inc
shlb
add
mov
mov
or
sarb
adc
addb
fld
aaa
cmp
inc
add
das
cmp
ja
and
dec
int3
cmp
jecxz
mov
pop
adc
or
mov
int3
jo
bound
loopne
mov
loopne
test
int
repz
jl
movsl
add
mov
mov
fsubrl
pusha
and
aad
push
stc
push
pusha
in
mov
mov
lds
pushf
lods
andb
fldcw
sub
add
cld
rcrl
je
in
test
pusha
cmp
lahf
cmp
sar
lcall
lret
mov
sar
dec
nop
xchg
insl
cmovae
or
pop
xor
movhps
rolb
inc
repz
pop
sahf
mov
cmpsl
aas
sti
cmpl
pushf
push
cmp
in
dec
mov
add
and
andb
aas
sub
jle
fisttpl
inc
lock
inc
cmc
repnz
add
add
scas
pusha
loopne
inc
sarb
xor
scas
and
pop
cmp
lods
pop
lcall
int3
arpl
push
inc
mov
in
sbb
inc
andb
std
gs
pusha
pusha
mov
push
add
jno
and
inc
or
sub
pusha
loopne
movsl
xlat
lock
or
mov
mov
lret
addb
inc
or
inc
fstpl
fnstcw
daa
dec
out
scas
add
add
cmpsw
sarb
jge
shl
lret
jbe
inc
xchg
push
inc
rorb
adc
dec
lret
or
in
xor
sub
mov
mov
cld
iret
push
xor
es
inc
xchg
dec
mov
push
cli
movsb
pusha
add
hlt
cmp
cmp
jb
jge
cltd
inc
mov
outsl
jno
add
xchg
pop
dec
insb
sub
xchg
pusha
negb
inc
mov
adc
mov
add
fucomi
pop
mov
pop
ja
cmp
es
int
mov
xor
in
fildl
pop
and
rcrl
or
add
iret
and
push
mulb
decb
and
and
mov
mov
mov
scas
xor
jp
mov
popa
or
stos
inc
loopne
into
sub
mov
and
and
add
xchg
and
aam
addb
ret
add
test
movl
xchg
xor
inc
sbb
outsl
fisubs
add
jae
lahf
fs
pushl
pop
add
sbb
inc
loopne
out
negl
mov
arpl
imul
in
cmp
test
aam
ljmp
addb
and
jle
cmp
cmp
jle
cli
mov
ror
andb
roll
pop
lds
mov
and
mov
push
negl
inc
mov
js
or
jp
fcoms
adc
hlt
xchg
push
rorb
pop
inc
jl
shlb
inc
loopne
int3
insb
rcl
shll
sbb
inc
cmp
pusha
and
inc
out
lods
aam
jmp
mov
mov
es
pushf
mov
and
cmp
mov
inc
mov
pop
pop
xchg
movsl
mov
fdivrs
addr16
mov
lock
loopne
data16
inc
andb
jp
dec
sbb
jecxz
sub
mov
xor
shlb
xor
int3
jbe
mov
shlb
sahf
ret
andb
mov
mov
xchg
cmp
and
popa
lret
or
pop
push
cmp
mov
loopne
jecxz
ds
mov
xchg
cmpl
lcall
sbb
mov
andl
and
int3
push
andb
call
dec
cli
or
je
fldl
int
movsl
lock
insl
popa
outsb
subl
daa
enter
jnp
dec
into
mov
mov
pusha
pusha
mov
dec
mov
jp
sbb
enter
and
out
pop
aad
in
push
ret
mov
adc
lock
andb
arpl
or
mov
pop
repz
pop
js
out
cmc
jno
sub
or
mov
mov
test
adc
cmpsb
inc
mov
inc
movsb
and
addb
jle
dec
xor
mov
ror
pushf
into
adcl
stos
jl
and
cmp
fwait
aad
and
in
ja
repnz
std
imul
mov
jnp
pop
scas
mov
add
sbbl
sbb
xor
or
imul
sbb
cmp
repz
out
jp
inc
mov
add
pextrw
add
jle
cmp
pusha
or
mov
or
cmp
dec
push
inc
int
repnz
addb
in
mov
fidivs
add
sar
mov
inc
pushf
xor
pushf
mov
push
leave
mov
and
and
and
add
pop
mov
pusha
rolb
js
es
rclb
and
orb
mov
inc
addb
or
fwait
call
or
jno
push
dec
test
mov
inc
or
mov
daa
mov
and
js
cmp
loopne
iret
insb
push
loopne
xlat
iret
test
mov
aas
call
pusha
cmpb
dec
hlt
mov
xchg
xchg
mov
inc
fmull
add
daa
sbbl
pusha
clc
sbb
dec
xor
jo
andb
pusha
addb
dec
add
jo
stc
cmp
or
roll
xor
push
sub
and
inc
outsb
mov
dec
cwtl
int3
test
pusha
cmp
mov
sub
cmpsl
out
inc
and
and
mov
pusha
or
inc
fs
stos
mov
jle
ss
jge
mov
mov
jge
jge
xchg
xchg
push
into
adc
out
lea
sub
add
or
sbb
mov
addb
inc
and
pop
fistps
movsl
cmp
cmp
inc
call
inc
mov
lret
sbb
movb
and
rolb
sbb
jle
test
and
jb
aaa
fwait
lret
icebp
lods
add
or
cmp
cmp
addb
addb
cmp
es
inc
pushf
pop
jecxz
sbb
fdivrl
adc
loope
inc
adc
cld
inc
ret
pop
mov
mov
add
ret
pop
js
mov
sub
cmpl
jp
fldcw
dec
call
ficoml
mov
in
out
imulb
andb
add
rorb
add
cwtl
cltd
mov
inc
repz
outsb
mov
rolb
or
jae
add
cmp
mov
inc
cmp
add
push
fwait
dec
dec
sbb
inc
incb
add
das
pushf
cmp
adc
cmpsl
in
sbb
test
mov
add
insl
sti
pop
lea
mov
xor
shlb
and
idivb
insb
fwait
pop
loop
xor
decl
insl
add
aad
adc
pusha
andb
or
and
xor
nop
gs
test
pusha
inc
jbe
mov
mov
data16
add
aam
lock
repnz
rclb
and
jae
mov
gs
shll
pusha
loopne
mov
insl
inc
mov
sbbl
dec
mov
or
and
fisubrl
shlb
inc
je
cmc
repz
testl
shl
xchg
jle
iret
xchg
data16
inc
mov
test
and
mov
inc
jae
sub
pop
add
mov
mov
jb
sbb
mov
inc
and
or
dec
shll
mov
andb
push
shlb
shlb
movsl
mov
pop
cmp
js
mov
sti
cwtl
jle
mov
inc
mov
dec
sbb
pop
popf
arpl
sti
inc
es
rolb
adc
int3
push
loopne
cmp
add
pop
rcl
mov
and
mov
nop
cld
lret
pushf
or
push
add
repnz
mov
imul
push
mov
mov
pop
les
rolb
test
loopne
loopne
enter
rolb
lahf
xchg
outsl
sub
xorb
mov
rol
push
call
and
mov
dec
popa
inc
dec
xchg
pop
cmpsb
mov
or
es
xor
adc
dec
movsb
mov
fwait
scas
inc
rcrb
jge
add
sarb
outsl
imul
cmp
mov
push
xchg
mov
sbb
mov
pusha
mov
jnp
xor
cmp
cmpsb
addb
inc
sub
loopne
outsl
icebp
pop
arpl
add
loope
sti
mov
add
hlt
and
into
mov
cltd
add
mov
and
fnstenv
pushf
and
inc
pusha
add
and
lahf
in
and
mov
inc
jbe
out
xor
addb
stos
fsubrl
push
fs
inc
mov
mov
add
sarb
inc
inc
int
mov
cmp
jl
pusha
inc
pop
cmp
ja
lret
cmp
data16
adc
test
pusha
sub
cwtl
arpl
hlt
pop
int3
xchg
mov
data16
mov
mov
lret
and
aam
pusha
add
pusha
inc
sub
scas
loopne
clc
pop
dec
dec
rcr
adc
adc
mov
xchg
inc
xchg
jmp
out
ret
addb
dec
sub
rolb
pop
xchg
mov
sti
mov
fnstcw
ror
sti
mov
enter
sub
inc
aam
pop
add
daa
cli
setbe
lds
addr16
rcl
xchg
call
mov
add
and
mov
mov
loopne
popa
cmp
hlt
pusha
out
sbb
das
jns
loopne
add
mov
loopne
mov
inc
push
out
insl
enter
push
andb
aaa
push
js
xlat
add
idivl
or
ss
jl
in
add
and
inc
sar
ret
ror
jecxz
mov
mov
loope
add
sbb
cld
mov
and
add
add
sbbb
mov
jecxz
fwait
xchg
fisttpll
pusha
inc
jae
int3
or
mov
jo
je
dec
xchg
sahf
lock
movsl
aad
call
mov
mov
push
movsl
sahf
mov
frstor
jo
adc
rolb
dec
fdivr
cmc
xlat
pop
mov
mov
mov
sbb
cmpsl
shrl
jno
push
add
inc
int3
in
lods
arpl
sub
inc
cmpb
ja
cmpsb
mov
mov
arpl
ja
adc
ja
lcall
pusha
loopne
rcrb
push
repz
sbb
out
xchg
fldl
push
adc
cmp
dec
pusha
xchg
inc
mov
sbbl
test
loopne
call
fstpt
cmp
fidivrl
and
sub
pushf
sub
arpl
jbe
or
and
jno
add
nop
sub
rolb
icebp
call
xlat
dec
push
inc
loopne
or
in
sub
sbbb
push
icebp
sti
mov
loopne
repz
mov
leave
ss
push
mov
cmp
loopne
rcll
sbb
out
rolb
adc
andb
mov
and
xchg
aas
inc
sub
push
mov
jle
push
mov
jae
loope
xchg
icebp
and
aas
sub
jne
cmp
push
pusha
subb
loopne
push
xchg
add
mov
pusha
addb
xchg
mov
ror
faddl
and
mov
adc
pusha
mov
inc
daa
cmp
in
subl
inc
jb
mov
xchg
cmpb
add
adcb
mov
mov
lcall
cmp
clc
loope
gs
push
mov
jns
ficoml
out
inc
inc
shll
shlb
lock
ret
xchg
nop
lcall
add
mov
out
arpl
or
pusha
iret
mov
scas
xchg
andb
pusha
test
and
loopne
fld
test
mov
xor
and
loopne
inc
and
mov
shlb
int3
lds
testl
push
dec
shll
repnz
aas
push
loop
filds
add
arpl
shlb
das
inc
aam
mov
aaa
ss
pop
sarl
nop
movsb
add
jae
push
into
pop
fildll
and
inc
inc
ret
mov
add
test
and
xor
iret
adc
lods
addb
daa
ja
sub
or
cmpb
data16
rol
addb
in
mov
and
pop
jmp
outsb
dec
add
lret
jne
test
hlt
mov
loopne
imul
cltd
pop
rcll
mov
pop
addb
sbbl
cld
and
loopne
push
out
imul
jge
add
andb
cmp
push
stc
je
shrl
push
add
stc
mov
push
mov
out
mov
sbb
repz
inc
andb
int3
push
inc
loopne
push
jle
push
roll
xchg
mov
pusha
loopne
or
sahf
cltd
sub
scas
push
pop
int
and
rolb
rolb
xchg
testl
sbb
popf
pop
and
mov
or
cmp
pusha
and
loopne,pn
int3
push
je
xor
loopne
and
andl
inc
xchg
lods
jno
outsb
sti
jne
cmc
mov
shlb
inc
inc
mov
dec
in
iret
push
gs
cmp
dec
mov
outsb
mov
add
rorb
mov
push
sahf
das
sbb
xlat
cwtl
cmp
inc
aas
fs
cld
lahf
pop
adc
jl
or
sbbb
cmpsb
add
lock
dec
or
int
xchg
xchg
andb
cli
cmp
push
rcrb
adc
pop
repnz
popf
in
andb
in
popa
jne
cmp
or
loopne
push
movsl
int3
addb
es
loopne
insb
mov
fistpll
aam
daa
int
xor
jbe
loopne
insb
inc
popa
movsl
int
dec
mov
sbb
rcrl
rolb
inc
mov
jge
mov
sbb
mov
jg
or
inc
xor
jo
inc
push
inc
addl
movsb
and
xchg
test
pusha
subb
pop
into
xor
pop
test
dec
inc
jge
sbb
pop
cmpsl
dec
dec
xchg
push
in
dec
xor
scas
stos
inc
pusha
push
add
fwait
popaw
lea
jns
mov
popa
inc
mov
loope
int
mov
int
add
testl
xchg
ljmp
xor
pusha
or
addb
pop
in
fcoms
cmp
loope
roll
loopne
mov
pusha
mov
jns
outsb
push
push
sub
mov
and
mov
outsl
lods
icebp
or
js
popa
xor
adc
and
mov
push
dec
movsl
into
inc
fbstp
mov
add
or
loopne
xchg
test
add
xchg
mov
imul
xchg
out
xchg
inc
test
xor
xor
pusha
mov
out
sbb
adc
push
test
add
xlat
out
pusha
inc
insb
scas
add
scas
scas
rol
or
jno
and
ja
outsb
aas
data16
jae
mov
subb
sbbb
add
mov
and
jle
add
shlb
fst
fdiv
mov
imul
pusha
push
jae
inc
test
jge
dec
pop
mov
ret
mov
jb
mov
push
pop
mov
or
rclb
pop
cmp
cmpl
jbe
jb
mov
shrb
xchg
rcrl
cwtl
inc
fucomip
nop
sbb
and
mov
pusha
cmp
loopne
outsl
add
add
inc
add
in
push
mov
mov
andb
and
ljmp
ss
xor
inc
mov
das
xchg
xor
and
fimull
in
cmp
pop
cmpl
cmpb
inc
mov
adc
cwtl
aaa
adc
pop
out
mov
out
mov
popa
fstpl
add
loopne
xor
dec
ljmp
mov
loopne
inc
sub
mov
cmp
jle
xor
out
cmp
add
lret
inc
pop
dec
sbbl
outsb
cld
jge
mov
or
shl
mov
lret
inc
mov
mov
test
pusha
add
cmpsb
inc
orb
mov
rolb
xor
add
and
cli
inc
cwtl
add
pusha
and
mov
inc
andb
mov
mov
mov
bound
add
stos
mov
fsubrl
mov
shll
inc
das
shll
outsb
adc
data16
and
xor
in
mov
cmp
adc
push
adc
jg
into
mov
je
sub
add
stc
mov
loopne
mov
cli
mov
inc
pusha
ja
out
fsubrs
fisubrs
out
js
aas
pop
ljmp
lods
shlb
ret
cli
add
add
sub
aaa
mov
add
xlat
das
mov
xor
mov
movhps
mov
mov
loopne
sarl
clc
aaa
movsb
addb
mov
pop
xlat
test
inc
push
jl
pop
push
outsb
out
in
leave
xor
shlb
andb
dec
imul
loopne
xchg
test
add
and
add
sbb
mov
mov
add
scas
add
repnz
mov
adc
mov
rol
jp
js
dec
dec
addl
and
fimull
int3
sbb
pop
and
and
mov
sar
push
inc
fsubs
cmp
out
jae
lods
add
test
andb
out
rcrl
mov
jp
sbbl
xchg
aam
mov
fiaddl
push
loopne
ficoml
inc
and
inc
mov
push
jmp
jb
gs
ss
mov
pusha
pusha
cmp
jne
add
and
xchg
jle
adc
dec
loopne
lret
addr16
mov
push
cmp
push
inc
loopne
test
inc
add
cmp
xor
cmpsb
mov
cmp
and
sbb
or
inc
or
out
add
xchg
iret
lods
push
mov
inc
bound
fwait
cmp
mov
add
push
pushf
dec
dec
sub
sbbl
jbe
shlb
popa
cmpsl
inc
cs
and
add
loop
add
push
ljmp
mov
push
jbe
pusha
rclb
nop
hlt
cmpsl
fwait
out
adc
inc
cld
pop
xchg
mov
mov
mov
mov
mov
loopne
test
shlb
popa
pop
or
sar
and
ss
mov
scas
mov
lcall
addb
in
sub
add
sbb
enter
and
loope
rcll
sahf
das
test
inc
insb
cmpsl
jae
movsb
add
out
xchg
ficoms
aam
pop
movsl
outsl
cltd
pop
cmpsb
andb
das
inc
mov
aam
mov
xor
and
or
leave
faddl
loopne
xlat
out
mov
push
pop
mov
cmpl
jno
les
fbld
or
aad
mov
and
inc
pop
push
rol
and
adc
jge
inc
imull
pusha
xor
add
inc
pusha
in
sbb
mov
pop
js
rolb
in
out
pop
mov
aaa
mov
jmp
jne
icebp
inc
lret
ficoml
jmp
inc
add
test
inc
imul
pop
cmp
mov
sbb
and
xor
cmp
sub
inc
mov
sbb
shlb
pusha
xchg
add
pusha
hlt
inc
addl
adc
stos
inc
loopne
iret
stc
jmp
and
mov
push
sub
test
adc
aad
lret
je
pop
clc
adc
sbb
inc
loopne
scas
mov
arpl
and
popf
and
and
mov
je
stos
mov
xor
or
and
jnp
and
add
cwtl
add
insl
in
pop
fs
rolb
or
jbe
xchg
inc
lock
cs
mov
pop
lods
add
movsb
and
addb
loop
cli
iret
xchg
dec
xchg
gs
add
inc
push
shlb
sub
sbbb
mov
pusha
shl
pop
jbe
lea
aaa
mov
push
loopne
rolb
int3
mov
adc
loopne
jg
mov
negb
dec
jecxz
out
ret
pop
push
fnstcw
sbb
and
adc
cmp
cmp
jo
dec
dec
rcrl
push
jb
mov
sbb
fnstsw
cmp
pusha
mov
cmp
add
cmp
aaa
fwait
mov
cld
test
xchg
and
inc
add
call
addb
add
das
ds
or
inc
ds
mov
mov
stos
inc
pusha
sahf
push
pusha
shl
insl
dec
jp
cmpsl
repnz
sbb
add
test
inc
scas
nop
xor
add
notb
jle
add
jp
imul
popf
aas
mov
hlt
pop
daa
mov
add
push
in
xchg
xorb
test
loopne
push
addb
addb
jl
sub
adc
mov
jnp
insb
in
push
add
insb
mov
xor
xor
loope
inc
cmpl
mov
loopne
inc
add
xorb
lret
pop
pop
std
dec
faddl
loopne
scas
inc
mov
outsl
cmp
div
inc
mov
pusha
mov
pop
jl
pusha
inc
das
gs
or
loopne
js
imul
negl
dec
mov
imul
mov
divb
bound
sti
js
and
add
iret
dec
test
pop
push
pusha
pusha
push
cmp
sub
and
sbb
shlb
inc
jg
dec
jbe
icebp
and
mov
mulb
call
sub
xor
xchg
cmp
sub
jecxz
jge
jmp
mov
add
mov
add
inc
call
sub
and
pusha
add
jle
pop
scas
mov
add
cmp
sbb
shl
cs
pusha
push
addb
addb
pusha
shrb
pusha
mov
clc
cld
cltd
vcvtps2pd
xchg
push
xor
mov
add
and
pushf
popf
sbb
and
ss
in
loopne
or
inc
sbb
shll
mov
add
push
lcall
jecxz
cmp
lds
add
cmpsl
cmp
hlt
push
pusha
loopne
repz
loop
rolb
sub
inc
mov
pusha
enter
into
movsl
nop
dec
mov
and
lods
sub
add
push
andb
ret
dec
cmp
inc
mov
shlb
cmp
loopne
mov
rcll
es
shlb
rolb
shl
lret
push
and
add
shlb
rcl
cmp
ss
rorb
mov
xchg
insl
insl
mov
nop
lods
or
inc
mov
add
mov
loopne
adc
aad
pusha
loopne
dec
pushl
hlt
push
inc
mov
in
clc
cmp
and
or
push
dec
les
mov
stos
shlb
mov
out
lock
call
xlat
int
cmp
mov
dec
add
roll
mov
in
sbb
loopne
shlb
adcb
xchg
sub
and
lahf
into
leave
jl
or
or
mov
loop
jmp
int3
sarl
pusha
dec
sbb
lods
pusha
add
xor
add
sbb
or
add
and
andb
add
loopne
or
ds
cmpsb
loopne
and
loopne
sub
das
pop
lret
and
xchg
subb
mov
out
mov
jp
and
and
jmp
sbb
mov
sub
jno
repnz
stos
fs
pusha
and
add
xchg
fstp
dec
cmp
popf
adc
mov
inc
add
mov
add
pusha
loopne
inc
shlb
pusha
outsb
sbb
push
cmp
cli
or
sbbb
or
loop
cli
test
mov
inc
fsub
adc
mov
sbb
sbb
pop
push
ret
pushf
jb
popa
lods
mov
add
out
test
inc
fistpll
pop
mov
mov
mov
cmpsb
shlb
aas
pop
push
mov
int3
jge
insb
mov
pushf
or
and
ljmp
sbb
mov
ss
mov
test
and
inc
inc
or
pusha
add
ljmp
adc
mov
cld
mov
jp
into
mov
jecxz
pusha
nop
jbe
mov
cli
adc
paddusw
shlb
clc
scas
mov
jge
test
pop
add
mov
pop
imul
out
jg
test
jne
inc
mov
fcmovu
addr16
xchg
fldt
rolb
out
les
aad
mov
mov
sub
sub
pusha
daa
shrl
or
mov
int3
or
and
adcb
scas
rol
pop
lahf
lods
cmp
sbb
add
add
mov
pusha
jge
push
inc
mov
fiadds
inc
ret
int
das
out
adc
popa
push
pop
cmpsl
jmp
in
push
mov
cwtl
push
push
aas
pushw
mov
mov
test
mov
adc
or
inc
mov
addb
ret
xchg
inc
pop
and
mov
jno
mov
andb
test
ret
xchg
icebp
imul
leave
xchg
add
sahf
xchg
mov
mov
loopne
rolb
push
sahf
lods
call
xchg
dec
inc
pop
stc
dec
ja
inc
pusha
mov
mov
pop
fdivs
jle
mov
arpl
jp
out
mov
or
mov
sub
insl
or
loopne
pusha
pusha
sbb
or
sub
pusha
lds
xlat
rcll
inc
xchg
lcall
addr16
ret
aam
sbb
stos
inc
loopne
hlt
xor
shl
ret
add
dec
popa
ljmp
andb
jle
mov
loopne
push
jae
push
arpl
inc
fmul
ret
jbe
xor
shl
lods
pusha
mov
fnstsw
pop
pop
out
add
inc
ss
sub
sub
leave
outsl
xrelease
sahf
rcrl
mov
and
mov
dec
sahf
mov
pusha
pop
adc
and
loope
xor
dec
lods
add
inc
push
adc
push
jmp
imul
and
pusha
out
lods
and
lret
mov
mov
sbb
pusha
inc
push
hlt
push
cwtl
pop
lcall
shll
rorb
jge
shlb
in
out
fwait
jo
pop
jae
leave
push
scas
pusha
mov
js
pop
cwtl
lahf
add
andb
in
lock
mov
clc
pop
outsl
push
loope
mov
cmc
mov
in
inc
sbb
dec
ljmp
or
xchg
push
sbb
dec
jge
mov
pop
add
pusha
xor
lods
mov
xorb
pusha
shlb
and
jge
fsubrs
imul
ss
cmovo
lds
push
test
pusha
pusha
out
mov
inc
jo
adc
push
sbb
inc
in
inc
pop
aad
rcrb
jp
jp
dec
das
ds
adc
xchg
cmp
and
pusha
inc
mov
and
add
mov
and
loop
mov
push
mov
lods
mov
pusha
das
notb
dec
int
mov
and
pop
mov
insb
outsb
sbb
sarb
loopne
mov
add
pop
sub
jg
mov
pusha
jecxz
mov
sbb
int3
cmp
and
and
and
mov
ret
adc
add
lahf
sbb
repnz
jecxz
int
sti
sti
stos
andb
lea
add
inc
loopne
xlat
mov
stos
push
sbb
mov
fsub
fs
mull
pusha
shrb
pushf
mov
daa
subl
push
pushf
push
inc
sar
xchg
push
call
loopne
loope
test
rolb
pop
adc
mov
add
loopne
insl
dec
popw
mov
add
je
pop
push
push
xchg
lahf
cmp
loopne
rolb
push
add
add
subb
add
jmp
mov
rcrb
mov
sbb
mov
push
mov
mov
pop
lahf
ficomps
or
pop
xor
mov
mov
fwait
fucom
mov
out
sub
or
add
loopne
sub
es
xlat
add
push
cmc
aaa
movsb
add
and
int3
lods
and
add
int
xor
in
sahf
sbb
out
dec
test
add
cmp
lahf
jmp
imul
aad
mov
in
jno
dec
add
mov
mov
mov
iret
dec
dec
mov
stos
pop
jns
dec
fcomps
xchg
jg
repz
lods
pusha
mov
inc
loop
mov
sub
pusha
lods
loopne
into
and
imul
cmpsb
and
iret
test
and
jne
pusha
jo
dec
and
jmp
xorb
js
push
push
and
pushf
cmpsl
pop
out
add
cmpsb
andb
push
inc
in
les
int
mov
mov
push
mov
push
push
or
loopne
movsl
lcall
add
inc
lods
idivl
jbe
sbb
fmull
pushf
adc
sub
inc
cmpsb
mov
js
push
stos
dec
out
ror
stos
inc
shlb
lock
pushf
cmpsl
loop
xor
dec
iret
jmp
les
ffree
jno
xor
dec
aad
adc
out
daa
pop
std
adc
rol
test
fdivs
hlt
test
into
loope
jb
test
fucomip
or
rorl
adc
cmc
repnz
in
and
add
pusha
cld
arpl
loopne
aam
and
loopne
loopne
dec
cltd
mov
add
xchg
stos
das
cwtl
stc
insb
fstl
stc
push
cwtl
fldt
pop
dec
push
fcomi
icebp
iret
out
dec
xchg
arpl
andb
sarl
add
fisttps
lea
das
push
inc
out
movsl
sbb
xchg
addr16
xchg
and
mov
lock
mov
inc
loopne
pop
dec
push
push
cltd
in
mov
fnstsw
or
test
jnp
sub
push
and
push
or
loopne
cmp
jno
andb
and
add
and
mov
shll
ds
inc
or
inc
inc
and
mov
addb
cwtl
jle
adc
test
mov
inc
cld
sti
bound
lahf
int
xchg
push
addr16
xor
sbb
call
mov
inc
add
inc
mov
cmp
push
js
loopne
mov
mov
adc
mov
andb
cmp
popa
shll
into
shll
dec
push
jo
out
decl
and
imul
into
gs
je
and
pusha
mov
jg
add
mov
cld
lcall
sub
push
sbb
mov
rcrb
pop
add
or
loopne
sbb
jge
sahf
pop
dec
negb
cmc
sti
jno
inc
pusha
sbb
jne
adcl
fisubs
scas
pushf
test
loopne
adc
mov
and
inc
lods
and
mov
dec
movsb
loopne
push
xor
std
dec
cmp
xchg
inc
mov
lods
inc
xor
inc
xchg
or
test
mov
inc
arpl
push
addb
jns
push
addr16
sarb
bnd
ss
or
aaa
add
xor
loopne
scas
pusha
rcrb
adc
mov
pop
lea
popa
lahf
movsl
mov
arpl
mov
add
jno
stos
pusha
loopne
shlb
sahf
push
out
sbb
pop
loope
xlat
lcall
imul
add
sti
cld
int3
fsubs
add
xchg
sub
lcall
sbb
push
lret
add
je
aam
into
pop
mov
lea
test
pusha
jp
loopne
push
and
shl
lds
in
shl
lret
xchg
jnp
les
enter
mov
out
add
or
rclb
cmp
mov
push
ss
loope
jnp
loopne
in
add
sti
sub
and
mov
inc
push
push
add
mov
ror
mov
add
icebp
inc
in
mov
in
dec
stos
pop
ljmp
mov
sub
subb
add
lret
sbbl
xchg
pop
into
mov
int
push
shlb
xor
lock
cwtl
cmc
ljmp
rorb
test
adc
cmc
mov
insl
sub
mov
push
and
push
test
and
adc
addb
add
loopne
lods
movsb
and
push
loopne
cld
push
imul
andb
add
insl
jg
dec
ds
mov
andl
lods
addb
hlt
rclb
sub
xorl
dec
xchg
inc
cmpb
inc
cmp
mov
sbb
andb
xor
ljmp
add
dec
loop
cwtl
xor
pusha
xchg
fwait
cmp
je
add
out
in
and
shl
cmpsl
mov
clc
and
mov
addl
jl
sub
pusha
dec
scas
addb
outsl
flds
loopne
loop
fwait
pop
add
and
and
sbb
adc
les
leave
iret
out
adc
pusha
add
les
cmp
pusha
add
aad
test
mov
add
bound
xchg
xchg
jge
in
dec
mov
adc
pop
adc
xchg
or
cwtl
pop
pushf
mov
fdivrl
mov
stos
and
dec
lret
push
mov
lock
dec
jmp
mov
dec
or
loope
dec
mov
xchg
add
mov
push
addb
mov
aad
and
out
out
mov
jl
mov
shr
or
sub
loopne
repz
push
loopne
hlt
push
add
mov
mov
and
je
xor
bound
rolb
jae
jmp
test
mov
scas
add
and
and
mov
outsl
and
push
shr
xor
popf
sahf
pop
stos
mov
cmpsl
jg
enter
adc
xor
andb
adc
mov
cld
imul
xor
data16
add
inc
out
aad
xchg
test
inc
and
cmp
addb
out
push
push
xor
shlb
and
mov
xchg
loopne
faddl
jno
xchg
int3
stos
add
stos
addb
lock
xorb
pusha
cmp
aad
sub
je
loope
mov
cmp
leave
icebp
inc
sahf
ss
jne
mov
out
pop
stos
pusha
pusha
push
pushw
addb
adc
call
inc
insb
xor
xor
rcrb
adcl
mov
push
fst
leave
or
jge
sub
and
jg
and
xchg
fcmovnb
pushf
adc
test
mov
sub
add
int
jo
in
cmp
jno
mov
dec
xor
xchg
add
addr16
sbb
inc
loope
cltd
add
jmp
lret
scas
and
adc
sahf
repnz
xor
mov
mov
inc
push
dec
add
cltd
cmp
and
lds
sbb
ret
lock
jle
and
sbb
sarl
in
je
add
and
imulb
add
push
xor
hlt
or
imul
or
push
xlat
fisubrl
push
add
xchg
jb
shlb
ret
add
and
xchg
fsubrl
rolb
loopne
cwtl
inc
inc
sub
pusha
cmpb
cmp
loop
xor
int
xlat
repnz
inc
xor
icebp
fmuls
and
fsubl
shlb
mov
mov
push
fmull
xor
rorl
pop
mov
jecxz
out
insb
add
shll
adc
pusha
aam
popa
stc
mov
stos
and
and
pushf
dec
adc
xchg
out
jbe
loopne,pn
sbb
imull
inc
and
mov
or
pusha
mov
inc
push
repnz
outsl
sbb
pusha
mov
dec
xchg
andb
add
and
stos
shl
mov
std
adc
xrelease
xchg
mov
add
mov
andl
mov
mov
loopne
loopne
mov
mov
repz
ret
and
outsb
mov
test
inc
jmp
push
rol
outsl
pop
cwtl
inc
cli
and
lods
inc
lock
int3
sbb
mov
push
in
cmpsl
mov
aad
popf
lods
inc
pusha
and
orl
pop
sbb
inc
cmp
je
inc
add
out
pop
xor
decl
std
lcall
rolb
das
in
push
sbb
shlb
adc
shl
mov
jnp
fistl
dec
pop
xchg
adc
pusha
loopne
sbb
in
add
add
pop
bound
xchg
add
loope
int
rolb
push
test
or
or
pop
add
pop
xchg
imul
shlb
mov
shlb
dec
ffreep
ss
ja
push
add
adc
lea
adc
sub
fistpll
adc
and
or
in
xchg
pop
jbe
push
sub
mov
addb
out
test
jge
in
adc
push
dec
dec
imul
adc
add
ds
andb
out
stc
stos
andb
icebp
loop
push
lret
jne
mov
jecxz
sbb
lahf
in
dec
hlt
mov
dec
and
and
clc
xor
cmp
mov
loopne
push
adc
bound
scas
mov
fsubs
lods
cmp
inc
and
jg
gs
jmp
mov
cmpsl
dec
jbe
loopne
fdivs
leave
js
xorl
loopne
cmpsb
mov
fcompl
jo
aad
je
mov
cmc
pop
mov
inc
pusha
mov
mov
rolb
lods
rolb
and
inc
daa
jmp
push
incl
inc
pusha
or
add
nop
xchg
pushf
lea
dec
faddl
and
jl
xchg
adc
ret
movsl
and
and
mov
lret
pushf
push
subl
push
scas
pop
xchg
xlat
icebp
push
outsl
and
lock
cmp
imul
stos
add
loopne
fldcw
mov
into
std
xchg
rorb
scas
mov
leave
pushf
jnp
mov
scas
pusha
addb
pop
cmc
cld
mov
hlt
xchg
cmp
nop
aaa
cmpl
adc
ror
xor
add
cmp
sbb
andb
sbb
xchg
adc
sbb
lret
mov
ret
lods
jne
addb
sahf
shl
sub
add
xor
popa
leave
and
add
adc
adcl
adc
xchg
in
call
lret
aad
push
icebp
jae
pop
pushfw
mov
and
ss
adcb
stc
xchg
cld
stc
add
adc
insb
popf
scas
sub
scas
inc
inc
jecxz
cltd
inc
iret
push
push
cmp
mov
pop
cmpsb
inc
mov
jg
and
add
mov
cmp
pusha
fstl
jbe
xlat
adc
stc
into
fcomps
mov
stc
sbb
push
or
adc
dec
adc
inc
dec
dec
adc
fnstcw
push
cmp
into
insb
daa
add
and
push
cld
enter
jge
fwait
dec
loopne
jl
out
xor
shlb
pusha
and
or
or
daa
shll
std
xor
mov
and
push
incb
rolb
and
push
ds
jp
fnstenv
mov
addb
int
xor
fs
fisttpll
add
jae
mov
scas
clc
push
ljmp
mov
add
pusha
sbb
mov
sbb
imul
sahf
xchg
mov
in
mov
sbbb
inc
rclb
enter
and
and
push
inc
icebp
into
push
and
push
mov
xlat
push
and
jbe
adc
mov
lea
sub
mov
aas
pop
or
loopne
rcr
sbb
js
mov
lods
sbb
and
pop
xor
dec
pop
push
pop
add
test
arpl
in
fcompl
adc
out
sbb
insl
inc
out
xchg
sub
xchg
fisubl
shr
je
lret
pusha
ds
pop
push
daa
les
and
add
outsl
push
push
pop
into
pop
jnp
inc
shr
mov
pop
mov
loopne
iret
sub
or
loopne
loopne
sub
pop
lods
rolb
sub
out
movsb
add
add
cmpsb
loopne
les
andb
mov
inc
add
ret
out
jmp
jae
loop
cmp
in
das
xchg
js
xchg
sub
jge
xchg
loop
push
inc
inc
add
in
push
popa
cwtl
or
fwait
insl
jns
iret
push
pusha
loopne
stos
mov
add
fs
inc
fidivs
imul
cmc
mov
ds
jle
shr
inc
or
scas
xchg
mov
shl
je
shl
in
roll
bound
push
data16
lods
and
es
and
sarb
lahf
mov
rorb
mov
test
idivl
out
jge
jae
pusha
loopne
rol
inc
into
aaa
pop
dec
pop
std
mov
js
mov
inc
jne
fidivl
sti
cmp
sbb
inc
fnstcw
shrl
pop
fcmovne
aas
mov
xorb
or
mov
and
and
pop
mov
adc
xchg
jle
fistps
mov
mov
add
out
xchg
sbb
loopne
test
inc
sti
sar
jns
into
icebp
les
shl
rolb
pop
mov
xor
cmp
xchg
mov
mov
insl
push
cmp
jge
or
inc
mov
push
pushf
das
xor
lock
mov
and
mov
enter
mov
adcb
in
mov
stos
nop
sahf
add
lods
loopne
popa
xchg
outsb
jmp
mov
mov
mov
add
and
scas
rolb
mov
mov
pop
dec
repnz
pusha
aam
nop
in
push
pusha
add
cmp
add
test
inc
inc
data16
mov
xchg
insl
push
into
repnz
xchg
xchg
rcl
shlb
or
stos
inc
mov
shlb
add
lret
add
dec
rcrl
add
mov
adc
dec
and
pusha
pop
xor
jecxz
pusha
ljmp
adc
mov
pop
hlt
or
pusha
popf
cmp
add
sbb
xor
lret
and
ja
add
and
sbb
cli
lods
enter
adc
sbb
inc
shlb
add
hlt
aad
add
jle
lock
mov
adc
pop
pusha
mov
sbb
addb
sbb
sahf
mov
je
dec
sub
orb
jecxz
cs
mov
sbb
xor
dec
xchg
std
loope
pop
enter
and
mov
mov
xor
out
bound
call
sub
loope
jle
jo
add
cmpsb
add
inc
nop
adc
sbb
xor
decb
and
ljmp
fnstsw
mov
aas
gs
pop
mov
sti
lcall
mov
das
xor
mov
mov
fiaddl
add
and
add
pushf
out
lea
lods
xlat
or
call
hlt
mov
int3
cwtl
jne
loopne
add
inc
test
jle
push
addb
in
inc
pusha
pop
mov
and
shr
pop
mov
add
add
mov
xor
mov
inc
aaa
push
xlat
sti
adc
push
jb
add
pusha
sbb
jbe
std
scas
and
adc
xor
add
loopne
pop
push
hlt
jge
mov
mov
inc
pusha
and
insl
ljmp
xchg
dec
mov
clc
and
ja
mov
pusha
inc
sub
mov
out
das
cmp
in
jp
loop
cltd
movb
mov
cmpsl
outsl
dec
push
lock
outsb
test
pusha
in
mov
popf
push
inc
dec
xor
mov
jl
rolb
ss
iret
sbb
sbb
bound
out
add
cmc
outsb
outsb
dec
xchg
repnz
jb
jae
pushf
pop
fisttpl
pop
imul
shrb
mov
mov
cli
das
mov
xchg
jl
cwtl
mov
inc
and
mov
aad
mov
inc
sbbb
stc
repz
je
pop
arpl
sub
addb
mov
movsb
inc
pusha
sbb
push
das
cmpsl
jl
test
add
and
xor
cmp
test
mov
addb
push
cmp
clc
push
addb
hlt
sub
orb
sbbb
mov
pop
and
pusha
sarb
dec
rep
dec
cli
or
inc
mov
inc
dec
lret
cltd
mov
rol
hlt
push
inc
and
mulb
fisttps
push
lea
andb
movsb
and
sar
rolb
loopne
add
mov
mov
dec
inc
insb
sub
sbb
jno
paddb
cmpsb
mov
jp
mov
movsl
inc
xlat
and
mov
dec
addb
pop
mov
ja
loopne
mov
jmp
nop
in
andb
imul
jnp
mov
jne
sub
shlb
pop
inc
pop
adc
test
mov
pusha
sub
pusha
stc
xchg
push
mov
cmp
outsl
and
rolb
mov
pusha
mov
mov
cmp
add
leave
dec
popa
pop
mov
pop
push
and
and
pusha
mov
and
mov
jmp
lret
int3
test
pop
pop
mov
or
pusha
jle
mov
sarl
call
cwtl
into
inc
fldcw
push
addb
xor
cmp
js
cmpsl
sbb
dec
jbe
fcomps
add
adc
adc
das
lods
and
pop
jp
shrl
fimuls
addb
lds
loopne
push
jg
das
pop
sahf
test
ror
fdivs
sbb
loope
adc
shl
or
jae
mov
faddl
arpl
cmp
pop
jecxz
mov
or
and
push
jae
pop
mov
jmp
xchg
mov
into
out
pop
or
mov
add
fidivl
add
call
shlb
xor
xchg
xchg
loopne
pop
icebp
cmp
aas
add
add
and
cmp
and
pop
test
inc
pop
gs
push
mov
cmp
aad
inc
mov
loopne
outsb
iret
dec
fisubl
inc
sub
lret
jne
sub
sbb
sbb
lahf
jno
mov
out
sbb
sub
aam
ja
jmp
andb
mov
decb
rorl
mov
andb
pusha
xchg
in
mov
sbb
mov
jge
mov
cmp
out
enter
add
mov
add
cmp
gs
push
in
xchg
fldpi
cli
jb
in
xor
mov
jl
loopne
xor
aam
fidivs
xchg
sarl
rolb
and
daa
push
fbld
xor
cld
repnz
in
imul
or
mov
test
xchg
ja
cmp
sub
cmpb
jl
daa
lahf
test
pop
mov
xlat
stos
xchg
jmp
aaa
jbe
cltd
jne
dec
sarl
and
or
and
mov
sbb
adc
jecxz
sbb
stos
inc
inc
lds
popa
cmc
int3
pop
je
or
cmc
clc
sbb
xor
inc
dec
push
fsts
cmc
or
xchg
ret
loopne
setne
rorb
daa
mov
mov
imul
and
gs
jecxz
jl
and
add
or
pusha
push
js
incb
push
aam
nop
adc
mov
and
mov
mov
push
xchg
mov
mov
addb
mov
and
stc
mov
scas
and
andb
sbb
mov
cmpsl
or
andb
push
xchg
fcmovu
sahf
inc
cwtl
and
jmp
pop
dec
adc
pop
outsb
push
outsl
or
pusha
mov
movb
loopne
mov
fistpll
fwait
ja
idivl
pushf
sub
popf
shrl
cmc
xor
icebp
fimuls
jmp
andb
xor
incb
mov
dec
cmpsl
cmc
orl
mov
jae
add
test
and
fisubs
inc
sti
cmpsb
pusha
cmpb
and
cmp
and
sub
inc
mov
loopne
loopne
add
ret
cmp
ljmp
loopne
add
or
mov
in
pop
pop
push
dec
int
jg
lret
cli
or
sub
mov
adc
test
inc
pop
sub
xor
sbb
loopne
adc
add
addb
xchg
arpl
mov
xorb
pusha
add
push
addb
or
shlb
adc
pop
int3
je
pusha
add
mov
pusha
inc
pop
dec
movsb
inc
and
sub
pusha
scas
and
out
cltd
mov
sbb
iret
push
lea
mov
bound
sbb
mov
adc
push
inc
enter
loopne
dec
mov
rolb
insl
dec
loope
lret
add
mov
mov
jl
mov
loopne
mov
mull
mov
inc
test
dec
add
loopne
xlat
adc
fnstenv
add
jne
add
dec
lcall
addb
inc
dec
nop
xlat
movsl
sub
xchg
popf
pop
push
shl
xlat
test
xchg
add
nop
sbb
inc
fwait
add
cmp
or
outsl
add
cmc
movsl
ja
ret
jmp
xchg
mov
pop
xchg
mov
mov
rclb
mov
push
add
mov
jae
ss
bound
jle
push
loopne
dec
stos
add
ss
daa
add
andb
enter
pusha
sbb
mov
mov
cltd
dec
call
lahf
jg
das
leave
mov
pusha
and
xchg
and
pop
jnp
insl
push
ret
outsl
pusha
je
pusha
loopne
loopne
into
xor
call
push
in
push
xor
cmp
sub
addb
aam
popf
xchg
andb
pusha
mov
repnz
adc
fs
test
push
out
not
and
mov
mov
fstpt
loopne
pop
jns
dec
sbb
and
mov
push
iret
idivb
insb
jbe
mov
jbe
test
mov
loop
pusha
mov
or
rorb
inc
fnsave
jbe
xchg
inc
push
and
nop
addl
mov
add
sbbb
rorb
add
repnz
and
es
add
or
js
and
adc
and
inc
and
loopne
push
je
lock
setb
lcall
int
shlb
shll
dec
pushf
mov
push
dec
fldenv
loopne
ljmp
add
inc
pop
decb
out
inc
rolb
pop
and
loopne
jle
xor
and
movsb
loopne
in
imul
mov
push
jp
mov
add
stc
adc
sub
and
and
inc
inc
inc
outsb
into
mov
or
jb
pusha
mov
jg
js
jbe
cs
pusha
ffreep
stos
loopne
mov
sbb
fidivs
stc
in
out
pop
xchg
adc
mov
jo
loope
and
adcb
inc
sbb
cmp
push
insb
addb
addb
inc
mov
add
mov
add
aad
je
pop
fisttpll
push
sub
stos
call
xor
and
jle
push
jne
shll
dec
mov
in
andb
mull
lods
add
mov
add
fisubs
push
mov
shlb
push
lret
sub
rcrl
dec
dec
stos
xchg
add
inc
inc
in
dec
jb
and
shlb
insb
in
inc
lret
pusha
mov
jl
ljmp
sub
in
aad
mov
pusha
inc
and
jmp
push
inc
scas
mov
repnz
lea
sub
and
pop
push
in
dec
popf
aas
add
subb
sbb
push
shll
jbe
jnp
mov
inc
stos
add
and
inc
pusha
cltd
xchg
mov
xchg
lcall
pop
cmp
movsb
and
sbb
jle
fdiv
test
push
lds
aam
lds
and
pop
test
rcrb
mov
adc
bound
adc
adc
dec
mov
or
addb
or
pusha
into
cmp
test
in
push
leave
or
mov
inc
jb
jne
and
pusha
mov
mov
lock
inc
and
pop
mov
push
loopne
es
mov
pusha
inc
xchg
leave
jae
andb
cmp
shlb
add
cwtl
pop
imul
xchg
fisubrs
aaa
cmp
inc
leave
lcall
rol
andb
stc
cmpsl
hlt
out
sbb
sbb
push
loopne
clc
or
adc
sbb
mov
and
sbb
repz
add
mov
cli
ret
aad
pusha
pusha
jnp
mov
pop
outsb
dec
xor
loop
mov
daa
and
xlat
and
sarb
pusha
add
addb
shlb
or
adcb
shlb
or
loopne
mov
loope
pop
xchg
lds
dec
or
mov
imul
js
pushf
push
ss
outsl
insl
jb
pusha
sbb
outsl
xchg
ds
sub
inc
cmp
andb
jnp
movb
enter
inc
bound
jo
in
in
sbb
es
add
ror
sub
enter
cmp
andb
add
mov
addb
push
xchg
imul
push
mov
subl
mov
andb
mov
push
lahf
and
dec
push
roll
inc
ljmp
sub
mov
adc
jge
mov
sarb
sub
pop
ret
rolb
or
dec
rcrb
jp
fs
pusha
add
push
je
push
jbe
inc
cmp
inc
jl
push
push
into
fadds
and
rcll
dec
mov
mov
dec
cld
and
jne
push
loopne
push
cmpsb
shlb
ljmp
add
and
mov
adc
mov
mov
and
andb
lea
test
adc
cmp
and
jle
cmp
or
loop
scas
shlb
rcrb
aaa
cmpsb
mov
ret
test
mov
and
xchg
bound
out
je
xor
roll
rol
jo
aas
jp
xchg
test
cmpb
ja
and
lods
pusha
loopne
loopne
dec
jno
out
lret
cmp
mov
in
add
jns
rol
test
pop
xchg
sbb
pushf
mov
pushf
cmpsb
inc
add
cmp
and
shl
mov
mov
adc
push
scas
add
rorl
adc
jbe
xchg
cli
aam
mov
andb
xor
and
loopne
sbb
push
data16
fwait
lds
mov
mov
orb
andb
and
test
and
add
pusha
inc
sub
add
pop
les
pusha
pusha
int3
mov
sbbb
sbbl
popa
and
pop
xor
jl
pop
rolb
in
add
jbe
imul
addb
test
and
add
shrb
add
xchg
push
mov
sbb
xorb
outsl
ret
pushf
xor
pop
pushf
mov
cmp
sbb
in
addl
call
lods
loopne
pop
dec
pop
subl
int
mov
subb
test
pusha
cs
push
out
rorb
and
shrl
push
call
xchg
sub
lahf
xchg
adc
sar
fwait
test
mov
mov
mov
pop
ds
cmp
outsb
xlat
lds
and
mov
mov
mov
sub
add
loopne
bound
popf
lods
mov
add
jbe
jle
nop
out
in
leave
jl
pop
rolb
gs
and
bound
stos
and
lcall
pop
or
xchg
pop
push
inc
mov
out
fwait
xchg
push
out
pusha
rorb
cmp
jg
jecxz
lcall
dec
fidivs
andb
addb
std
aad
and
mov
inc
mov
jp
or
loopne
pushf
add
mov
add
rolb
inc
push
ljmp
cmpsl
or
and
push
mov
pushl
loopne
xchg
mov
loopne
dec
inc
adc
sbb
jbe
xchg
loopne
lods
mov
lea
adc
pop
dec
sti
movsl
mov
shl
inc
arpl
imul
add
stos
cwtl
dec
push
out
test
rolb
imul
in
vandnps
and
pusha
iret
not
and
fbld
addb
mov
andb
pop
add
rolb
inc
addb
stc
sub
andb
imul
lea
cli
movd
loopne
push
test
and
shl
lods
jno
mov
add
aam
test
jecxz
jecxz
movsb
and
in
xor
sahf
das
cld
dec
and
pusha
and
push
xlat
lods
add
or
imull
inc
mov
or
add
imul
xor
and
sub
shl
into
xor
int
add
jmp
mov
push
add
jp
jnp
sarb
call
ljmp
xchg
jnp
inc
shl
mov
mov
mov
jno
pop
jns
inc
or
pusha
jb
xchg
and
divl
fwait
call
shll
xchg
pop
ficomps
mov
mov
sbb
popa
push
sbb
fs
das
xor
lods
loopne
fimull
scas
pusha
loopne
mov
adc
loopne
xchg
fstps
fwait
ret
inc
jno
hlt
ud1
loopne,pn
ljmp
repz
das
pop
pop
cwtl
pop
xchg
xchg
iret
dec
jl
push
psubusw
and
jo
jg
shll
inc
aam
int
seta
lods
add
outsl
pop
icebp
stos
out
out
std
jg
inc
inc
popf
xor
adc
ja
mov
ss
aam
mov
andb
adc
xchg
pusha
sbb
movsb
add
jp
or
aam
xchg
popf
push
dec
leave
pop
pop
sub
mov
inc
out
adc
pusha
inc
inc
or
lahf
add
loope
dec
dec
imul
loopne
popa
add
shrb
and
stos
add
pop
enter
rorb
pop
int
dec
inc
ret
or
cmc
adc
dec
ljmp
jp
fcomp
mov
xchg
imul
mov
arpl
neg
fldl
xor
rolb
fwait
or
cltd
movsb
add
sti
push
call
lods
pusha
pusha
xor
sub
shlb
cld
push
inc
push
mov
subl
mov
jbe
cmp
and
or
mov
test
shlb
data16
clc
insl
fsubs
aad
pusha
xor
je
loope
imul
loope
rorb
sarl
dec
iret
hlt
add
mov
rolb
int3
mov
dec
mov
shlb
rcrl
jge
sbb
cmc
cmp
add
loopne
cmc
pop
push
inc
cwtl
add
mov
jnp
pusha
inc
fistpl
dec
dec
pop
lret
inc
rolb
leave
in
das
mov
pusha
and
loopne
xor
add
adc
rcrl
mov
add
inc
add
loop
lahf
mov
shrb
pop
adc
mov
push
mov
cmp
and
mov
rcl
jae
jecxz
fst
mov
add
jne
add
add
xchg
pop
clc
adc
add
mov
jb
les
iret
add
les
movsl
mov
cmp
mov
sbb
out
jae,pt
mov
mov
shlb
mov
sahf
mov
mov
push
pop
pop
xchg
adc
push
lods
inc
and
rorl
int3
push
rolb
in
xor
rcl
mov
inc
push
pusha
pusha
xchg
sbb
mov
pop
cmp
repz
stc
stos
and
xchg
jb
ja
inc
out
popa
jg
xor
add
aam
fcoms
cmp
add
xchg
ljmp
lods
and
cmp
dec
mov
mov
cmp
lock
mov
sti
sbb
dec
cltd
imul
pusha
inc
jns
inc
jo
cmc
mov
in
loopne
cmpsl
sbb
and
in
sbb
ljmp
mov
mov
andb
and
and
movsl
out
and
lcall
pop
test
inc
ss
mov
mov
shlb
shlb
call
movmskps
jae
scas
mov
fisttps
aam
jae
addr16
xchg
lods
scas
leave
cmp
bound
pop
inc
pop
daa
mov
mov
scas
loopne
mov
popf
sarl
rclb
test
cs
lock
mov
inc
dec
push
xlat
xor
mov
pushf
mov
inc
and
addb
push
dec
mov
dec
outsl
push
rol
add
push
and
notb
in
sbb
popf
xor
push
fdivrl
dec
ja
cmp
sbb
dec
mov
and
xchg
mov
in
pusha
add
unpcklps
ret
adc
add
dec
das
mov
loopne
cmp
jns
xlat
imul
pop
push
push
inc
mov
sub
and
xchg
or
inc
mov
jne
scas
cmp
pusha
daa
addr16
pop
adc
rolb
sub
mov
fstpl
sub
mov
ficomps
andb
mov
and
insb
or
repz
pusha
sub
and
pusha
ror
enter
xor
inc
mov
add
sbbb
sti
dec
xor
push
add
fwait
inc
insb
mov
loopne
jmp
loopne
lock
inc
and
pop
scas
mov
pusha
lds
movsb
pusha
add
add
idivb
sub
pop
or
sub
fisttps
movsb
andb
enter
inc
aaa
push
inc
rol
loopne
out
in
add
andb
roll
add
pop
cmpsb
addb
rolb
xor
rcrl
loopne
sub
inc
xchg
adc
fisttpll
les
fwait
std
jmp
sub
mov
subps
inc
mov
push
lock
jp
insl
out
xchg
mov
and
rorl
loopne
bound
jns
lds
pusha
rolb
and
dec
jo
andl
je
popa
xor
mov
add
dec
mov
in
and
add
adc
mov
dec
into
ret
mov
and
xor
in
xor
fildll
sub
push
and
add
test
sub
pusha
mov
inc
add
test
add
push
stc
cmp
ficoml
stos
add
or
mov
fsts
mov
shrb
adcb
loopne
inc
js
shlb
fmulp
sbb
data16
loop
jo
pop
and
sub
and
inc
out
mov
and
mov
pusha
mov
pop
insb
mov
mov
pop
divl
in
test
loopne
loopne
into
mov
add
dec
rcll
or
and
xchg
orl
add
jb
mov
mov
xchg
pop
inc
sbb
sti
out
ds
das
addr16
mov
fldcw
and
mov
loopne
shll
mov
pusha
pusha
push
jmp
rolb
xor
add
addb
sub
sub
js
imul
lods
and
ror
pop
sub
mov
pop
add
pusha
add
shlb
lcall
xchg
aam
addr16
aad
movsb
shl
xchg
mov
mov
test
loopne
push
loopne
jno
or
and
sbb
pusha
loopne
sbb
sbb
js
in
mov
shrb
dec
jmp
rcl
inc
xor
add
shrl
ja
aam
shlb
call
mov
and
mov
pusha
and
fcomp
adc
add
push
xchg
insl
aas
sbb
repnz
adc
and
ja
xlat
sub
mov
and
add
and
push
outsl
inc
sbb
jnp
inc
in
xchg
jg
arpl
int
sub
scas
add
mov
push
inc
and
pusha
adc
pusha
fldcw
andl
and
pusha
pop
sarl
jns
dec
scas
loopne
scas
andb
loope
ret
mulb
add
outsb
or
pusha
xor
xchg
fwait
clc
gs
test
loopne
addl
and
enter
add
int
add
sbb
inc
loopne
rcpps
add
leave
adc
sub
loopne
jbe
shl
dec
cmc
cmpsl
pop
adc
push
sub
sarb
jge
andb
sarb
pusha
inc
fdivrl
add
jbe
cmpsl
and
inc
cmp
pusha
loopne
cmp
cmpsb
addb
jbe
sub
sbb
xor
add
mov
sbb
cmp
xor
and
orb
mov
fstl
sub
cld
fsubs
jo
push
rolb
mov
xor
lret
add
scas
mov
test
mov
sti
test
xorb
pop
mov
pusha
inc
jns
push
jp
pusha
add
enter
imul
cmp
mov
addb
add
loopne
dec
sbb
dec
push
fwait
or
lods
lds
shl
aad
ficoml
or
adcb
and
sti
rcrb
ds
pusha
out
pop
ja
add
pop
hlt
inc
add
jp
push
loopne
sub
and
and
daa
je
rorl
push
add
xor
dec
dec
push
xchg
xchg
push
cmp
mov
insb
and
and
stos
and
inc
sub
loopne
lds
sub
pop
push
je
fxam
pop
loop
mov
cs
pusha
xchg
pop
mov
mov
ljmp
enter
sbb
cmpsb
add
lahf
leave
push
jecxz
ret
gs
subl
fst
xchg
mov
jnp
imul
cmpsl
pop
mov
enter
inc
xchg
nop
js
push
ss
add
andb
xorps
pop
or
es
inc
jmp
mov
int3
jmp
or
loopne
int3
fld1
xchg
int
cmpsb
loopne
xchg
lret
and
jno
pusha
add
aas
mov
in
xor
rorb
in
pusha
inc
aad
loopne
loop
mov
and
adc
add
fnstenv
inc
push
mov
insb
pop
incb
scas
mov
xor
jno
or
add
or
sbb
mov
pusha
mov
outsb
enter
push
div
jecxz
je
dec
xor
jno
fldcw
and
pusha
mov
aam
fisubrl
fisubrl
pusha
pusha
xchg
faddp
lock
in
and
inc
mov
mov
pop
jbe
enter
xlat
arpl
stc
push
andl
mov
rolb
pop
or
movsl
imul
push
pop
xor
inc
sbb
nop
int3
fadds
lods
cmp
mov
shl
add
push
add
inc
les
sbb
and
push
pusha
loopne
das
rcrb
std
add
add
icebp
sbb
lret
pusha
cmp
andb
ficomps
jle
xchg
pop
loopne
pop
mov
shl
xor
push
movsb
addb
or
mov
and
mov
xor
xor
xchg
pop
xchg
shlb
fwait
loope
push
or
mov
test
xor
in
jecxz
adc
jp
jne
xchg
jmp
sub
and
out
sub
sbb
mov
xchg
push
dec
sbb
add
mov
andb
fwait
and
mov
test
loopne
jnp
sbb
add
shlb
movsl
add
data16
shrl
add
cmp
les
loopne
rcll
loope
es
push
int
and
dec
in
jo
test
pusha
xchg
scas
rolb
shlb
mov
andb
ret
sub
subb
rcrb
and
pusha
addb
loopne
inc
aam
or
add
mov
push
sub
stos
sbb
jb
loopne
push
fnstenv
mov
in
mov
leave
jle
shlb
pop
test
mov
or
jle
push
dec
leave
lock
pusha
inc
jns
push
cmp
and
mov
enter
xchg
push
rol
mov
addr16
cmpsb
add
mov
jno
stc
insb
sarl
popw
pop
adc
cmp
jg
pop
lock
mov
shlb
int3
int
push
jne
push
inc
mov
in
adc
add
in
int3
lock
xchg
ret
mov
inc
fidivrs
sub
xor
leave
lcall
fsubl
cmp
ror
sti
sub
adcb
xor
mov
cs
shll
xchg
pop
std
mov
in
ficoms
inc
xchg
pop
or
cmp
xor
pop
clc
arpl
scas
fs
xor
jmp
sbb
imul
movsbl
inc
inc
add
and
or
mov
pop
jae
loopne
movsl
test
add
loopne
cmp
mov
leave
fucomp
adc
ror
push
repnz
inc
inc
sbb
andb
int3
rol
mov
xchg
flds
adcb
dec
pop
arpl
test
adcb
pop
jbe
mov
and
mov
cli
cmp
shlb
pop
lcall
lahf
xchg
sbb
es
loopne
negb
jmp
sahf
in
sti
cmp
inc
pop
daa
sub
mov
mov
mov
addb
dec
adcl
cld
mov
jno
inc
push
jb
inc
and
xchg
mov
outsb
insl
xor
scas
inc
adcb
cmp
call
loope
mov
sub
xchg
lahf
dec
pop
cmp
outsb
out
and
dec
mov
add
sarb
sbb
ret
jb
pop
jl
lds
aam
fwait
mov
inc
loop
add
xor
and
add
and
jmp
iret
inc
nop
out
adc
xchg
andb
push
inc
jae
fisubs
pusha
add
mov
scas
imul
fsubs
mov
pusha
pusha
lret
arpl
lea
add
push
push
pusha
inc
mov
xchg
jge
addb
pusha
addl
dec
or
mov
jb
jmp
pusha
xorl
add
loopne
jecxz
nop
fs
and
gs
out
scas
jbe
mov
add
jp
jle
adc
jbe
dec
in
cmc
xrelease
jno
inc
pushf
sbb
sub
pop
mov
jne
add
shlb
sub
xor
pusha
pusha
leave
adc
cmp
adc
jle
inc
dec
sbb
lock
jne
sbb
xchg
fwait
outsl
std
jg
sub
or
movsb
pusha
loopne
lahf
scas
mov
nop
jge
ja
xchg
jge
shl
pop
call
mov
mov
shrb
and
out
call
scas
loopne,pn
leave
lock
roll
sahf
les
loope
inc
scas
mov
add
test
push
add
aad
fcomps
sub
jbe
loopne
ss
and
add
pop
sbb
andb
inc
sti
dec
add
mov
shl
jecxz
mov
and
push
sbb
sahf
scas
scas
pusha
add
and
push
push
inc
mov
mov
icebp
and
sbb
and
jb
in
or
and
add
shlb
and
sub
test
and
lds
das
inc
inc
lods
rol
jl
fs
or
lahf
push
inc
out
out
fcomps
push
push
fisubl
pop
pop
cmpsl
test
mov
test
rcrb
mov
xchg
adc
and
roll
cmpb
scas
and
in
pop
inc
scas
xchg
push
clc
outsb
jmp
rolb
inc
mov
inc
cmc
and
icebp
inc
loopne
and
cmp
pop
mov
and
into
mov
cmc
jae
push
js
ljmp
adc
xchg
add
add
mov
adc
sub
add
push
cmpb
add
xor
and
fistpll
imul
out
add
rolb
adc
popa
fwait
aaa
mov
mov
mov
inc
js
dec
xchg
sbb
pusha
inc
mov
outsl
cmc
jne
pop
sbb
xor
out
cmpsl
loop
aam
int
pop
inc
mov
outsl
adc
sarl
xchg
inc
xor
add
popa
outsl
mov
add
enter
and
dec
out
cmc
jo
hlt
mov
repnz
insb
mov
dec
out
loopne
mov
ja
mov
mov
lods
std
pop
aad
xchg
sbb
ja
sahf
int
adc
outsl
lahf
fwait
xchg
rolb
loopne
loope
jg
mov
xchg
ret
push
push
and
fwait
pop
jbe
leave
test
and
pop
cmp
lds
andl
mov
lock
cltd
lcall
lcall
loopne
mov
in
lock
jg
push
pusha
pusha
dec
and
pusha
outsb
jg
fsts
pop
or
add
loopne
cmp
call
addb
pusha
in
js
sub
xchg
xchg
xor
dec
sub
xor
pop
das
lock
shlb
push
bound
push
test
loopne
mov
popl
push
jo
and
jno
jns
jmp
xchg
jbe
movsb
add
jle
ret
incb
inc
pusha
pop
pop
mov
pop
fwait
mov
bound
je
in
cmp
pusha
add
cmc
cmp
inc
into
sbb
xchg
mov
pusha
push
sarl
push
mov
movsb
loopne
nop
fs
and
loopne
stc
mov
loopne
arpl
xchg
rclb
inc
pop
cwtl
loopne
lret
xor
pop
out
sub
fisubl
inc
pusha
push
movsb
mov
sarl
add
loop
data16
pop
and
sub
xchg
cld
xchg
push
rorl
or
and
stos
mov
mov
xor
rolb
iret
sbb
add
sub
dec
inc
jae
in
dec
cmp
mov
add
rolb
rcrl
inc
out
dec
aas
dec
lahf
adc
add
push
mov
adc
xchg
xchg
inc
inc
outsb
fcompl
rorl
cmp
mov
lds
sub
inc
and
lods
mov
add
sbb
lea
xchg
pop
stc
insl
pop
or
push
jecxz
mov
leave
data16
adc
xchg
inc
push
dec
add
test
and
push
lea
pop
mov
jecxz
add
push
add
push
cmp
push
sub
mov
test
shlb
and
pop
and
addb
jb
sbb
jp
jb
add
xchg
gs
frstor
dec
cmp
seto
dec
pop
frstor
pop
dec
fxam
push
fs
jmp
and
sub
mov
add
addb
jl
shlb
mov
add
sbbb
shl
pop
inc
sbb
xchg
lods
and
inc
fimull
addb
rolb
sub
cmpxchg
or
pusha
jmp
stos
mov
lods
xchg
inc
sbb
pusha
je
xchg
inc
mov
mov
jo
pop
out
nop
leave
jp
das
test
cmpb
pop
adc
rolb
mov
and
in
in
icebp
iret
pop
bound
out
out
push
loopne
mov
mov
add
push
pop
stc
enter
jbe,pt
imul
and
loopne
jbe
sarb
lcall
sub
loopne
aam
jo
pusha
mov
test
cmp
pusha
add
mov
dec
xchg
mov
and
ss
inc
xor
or
jae
xchg
sub
loopne
out
scas
or
sarb
inc
jle
xor
inc
mov
xor
flds
mov
jp
dec
call
xchg
ja
mov
sar
sbb
cli
pop
jbe
push
rolb
fwait
sub
mov
mov
lcall
mov
inc
xchg
jne
mov
aas
les
xor
mov
inc
addl
cltd
ljmp
movb
xchg
and
or
pusha
fiadds
or
pusha
outsl
icebp
xor
and
into
call
nop
cmp
rol
pusha
mov
cli
xlat
daa
mov
inc
and
frstor
add
std
leave
xor
into
test
and
mov
jbe
adc
adc
mov
mov
loopne
faddl
pop
std
test
and
mov
out
sbb
popl
addr16
sub
mov
mov
cmpsb
shlb
int
out
call
jl
sahf
xor
xchg
rorb
decb
jns
and
inc
inc
xchg
sti
cmp
neg
filds
adc
xor
loopne
add
push
outsl
out
mov
xor
mov
adc
test
inc
lods
test
int3
mov
add
xchg
push
cmpsl
imul
je
xor
add
lods
inc
int
inc
mov
mov
sub
pusha
rclb
cld
faddp
push
ljmp
dec
inc
stc
xchg
or
rclb
fwait
outsl
jns
push
or
dec
movb
mov
sub
andb
addb
inc
push
and
inc
mov
adc
mov
and
inc
rclb
pop
mov
cmp
pop
jg
sbb
imul
scas
pusha
add
pop
in
mov
add
and
imul
push
cli
adc
clc
sarb
pop
mov
je
enter
stc
stc
daa
ret
js
dec
or
add
dec
sbb
dec
lahf
movsl
test
jecxz
rclb
fcomip
popw
jle
inc
jmp
dec
fisttps
mov
loopne
mov
rol
jge
add
dec
pushf
push
add
sub
out
sub
sub
sub
das
mov
inc
xchg
in
dec
and
and
push
ljmp
stc
jmp
push
ret
insl
mov
aaa
stos
addb
jno
dec
mov
aad
ds
push
int
jbe
lods
loopne
fwait
jmp
xchg
xchg
cmp
lods
rol
mov
mov
mov
andb
in
xchg
adc
jne
les
add
sub
int
clc
testl
jb
fstps
cmp
inc
cmp
cmp
mov
stos
cwtl
lock
and
cmpl
lea
and
stc
push
push
mull
mov
pop
sahf
lret
push
mov
inc
andb
clc
clc
aam
sub
out
scas
cs
mov
sbb
in
and
mov
push
xor
sbbl
inc
das
xor
pusha
loopne
sub
addb
mov
sar
xor
iret
pop
cltd
insb
pop
jne
adc
iret
jae
testb
cmp
and
addb
pusha
loopne
mov
pop
jg
add
sbb
xchg
imul
or
adc
pusha
cs
movsl
test
add
inc
movsb
inc
mov
or
rcrb
xorl
push
lea
ja
inc
shlb
inc
inc
inc
daa
adc
sub
cld
xchg
repz
mov
dec
mov
mov
fsts
or
dec
notl
adc
roll
addb
imul
push
inc
add
sbb
imul
mov
jmp
addb
add
lcall
cli
ret
outsl
xor
and
fdivs
into
add
rol
cmp
and
js
scas
mov
lds
sbb
jns
add
mov
and
jb
shl
pop
push
inc
shlb
add
xchg
lret
xor
sub
cmpsb
pusha
shlb
xchg
xchg
push
out
mov
xor
mov
add
jle
ror
gs
xor
movsl
les
ds
filds
dec
cmpsb
loopne
cmp
pusha
add
mov
test
clc
pop
xchg
movsb
mov
lret
out
xlat
xor
dec
push
inc
nop
stc
jg
loopne
sub
mov
pushf
scas
aaa
inc
je
pop
xor
lahf
andps
fnsave
xchg
int3
negb
bound
jle
lods
imulb
and
ds
andb
loopne
xchg
and
fstl
enter
and
adc
mov
loopne
dec
out
mov
and
rolb
adc
or
sub
pusha
inc
cmpsb
inc
loopne
pusha
adc
push
idivb
push
cmpsb
pusha
and
inc
push
ljmp
jae
mov
std
push
daa
or
pusha
out
and
jnp
add
mov
cld
repz
fstl
jecxz
cwtl
xlat
fldcw
mov
mov
das
jae
xor
stc
sub
inc
xchg
mov
push
pusha
mov
fidivrs
push
and
sub
cltd
add
pusha
and
pusha
mov
loopne
jecxz
mov
mov
xor
rcrb
mov
inc
inc
xchg
adc
pusha
loopne
mov
cmp
ficoms
jb
aam
nop
addb
in
push
inc
push
inc
rorb
inc
aaa
xchg
jle
rolb
sbb
loopne
and
inc
mov
test
lods
mov
sbb
shl
inc
mov
mov
lret
lods
inc
pusha
inc
div
clc
or
testl
xorb
in
das
mov
loopne
inc
inc
cmp
pusha
pusha
adc
jbe
in
dec
pop
rclb
inc
in
inc
push
jge
dec
mov
and
orb
rorb
mov
jno
lahf
sbb
mov
std
cwtl
andb
mov
shlb
sub
inc
in
and
das
dec
sti
mov
xchg
or
in
insb
nop
loopne,pn
jbe
lret
add
shll
pop
cltd
jnp
cmp
cli
and
push
and
jle
mov
in
mov
fisubrs
push
scas
lods
push
push
pop
sarl
xchg
lods
ss
dec
inc
sbb
xchg
mov
dec
cmp
and
inc
jb
shlb
push
gs
xchg
mov
inc
and
aad
aam
sub
shlb
mov
addb
inc
mov
fnstenv
add
adc
pusha
rcl
sub
xchg
imul
addb
xchg
cltd
testl
mov
pusha
leave
xchg
into
cmp
push
popa
pop
movl
add
adc
movl
jmp
and
push
pop
mov
outsb
push
pop
je
call
and
cltd
sarb
pop
pop
xlat
add
pusha
adc
jl
mov
adc
sahf
jae
stos
add
dec
fistpll
repnz
mov
mov
repnz
add
mov
pusha
and
test
rclb
adc
std
fninit
sbb
cmp
and
sti
add
add
data16
andb
and
jno
das
gs
jbe
and
jge
and
loopne
jns
and
inc
das
nop
sbb
enter
adc
arpl
clc
cltd
pop
mov
nop
xchg
fsts
repz
ds
jne
add
xlat
jl
mov
lea
mov
inc
stos
insb
out
repz
sub
xor
cmp
mov
add
into
or
jle
mov
push
shlb
and
jecxz
movsb
pusha
and
or
into
std
test
jo
clc
fidivrs
mov
pusha
add
mov
pop
mov
loopne
loopne
in
mov
sahf
mov
test
inc
in
or
fsubrl
sbb
ljmp
dec
test
add
and
jp
mov
addb
pop
mov
jae
mov
mov
jmp
pusha
and
inc
adcl
pop
negl
inc
jbe
sbb
andb
lcall
sbb
or
mov
cmc
shrl
cmpb
mov
push
cwtl
imul
in
jmp
xchg
mov
inc
adc
addb
flds
ss
in
cld
push
mov
xchg
jmp
insb
orl
cmp
sti
mov
sbb
pop
add
and
mov
xlat
cmpsl
mov
add
add
pop
push
add
stos
and
aad
in
rorb
repnz
xlat
insb
mov
mov
call
imul
xchg
scas
shlb
in
imul
call
mov
fs
cmp
adc
int3
jmp
and
stc
mov
roll
sub
lret
stc
enter
push
mov
mov
iret
push
and
jnp
fs
adc
lret
inc
cmp
pusha
loopne
js
mov
sbb
out
lea
int
movsb
loopne
dec
aaa
arpl
movsl
dec
out
inc
or
repz
push
add
xor
out
aas
add
cld
xchg
shr
xchg
adcb
pop
xchg
push
je
movl
mov
jg
loopne
dec
popa
cmp
loopne
mov
ja
cmpsb
and
imul
add
cld
sub
pusha
test
incb
loopne
out
lea
jl
fmuls
sbb
in
rol
imulb
bound
cmpsb
inc
pusha
jg
lock
bnd
push
inc
aad
push
mov
fdivl
add
out
inc
mov
dec
inc
addb
mov
stos
sub
out
bound
mov
mov
lods
pusha
inc
cld
popa
sbb
rolb
xchg
cmp
mov
xor
aad
andb
test
orb
and
iret
fs
cmp
leave
sbb
fmuls
mov
test
inc
or
mov
pusha
cmp
int
add
cwtl
mov
aas
mov
in
fldl
xlat
cs
mov
ja
lret
loopne
insl
xlat
dec
pop
cmp
sub
pusha
and
mov
ds
cld
xchg
xor
rorl
addb
jge
int
fdivs
stc
cmp
xchg
imul
jp
add
add
loopne
push
push
cmp
ret
xor
call
or
sbb
fisttpll
loope
iret
jle
mov
cmp
or
jmp
adc
fucom
mov
dec
int3
cmpsb
loopne
lret
add
mov
test
dec
insl
sub
xchg
stos
mov
and
pop
add
mov
sbb
in
lret
imul
loopne
out
filds
stos
addr16
rolb
and
xchg
jge
faddl
pusha
add
mov
adc
mov
inc
pop
pushf
mov
ljmp
shl
not
lret
enter
mov
add
add
inc
mov
and
lea
aas
sub
xchg
rcll
adc
mov
mov
ja
sbb
inc
rolb
jb
ror
fnstsw
mov
loopne
adc
push
xor
fdivs
pop
mull
aas
add
sar
fwait
pop
pushf
std
cmp
aam
pop
pop
push
jecxz
mov
out
sbb
lahf
int
pop
test
or
es
rorb
lcall
jl
int3
cld
mov
xchg
fmull
into
int
int3
in
sbb
pusha
jmp
inc
imul
xor
loopne
sbb
xchg
dec
into
in
enter
add
jne
inc
test
stos
pop
sti
pop
and
and
andb
nop
and
jl
add
pusha
imul
add
and
add
push
daa
xchg
ja
sub
jo
out
arpl
dec
out
or
imul
jp
jb
and
sub
loopne
andb
lods
inc
add
cld
scas
and
adc
loopne
loop
add
inc
pop
sbb
push
pop
xchg
lods
and
mov
loopne
es
and
add
and
or
and
sar
mov
bound
adc
pusha
shrb
lcall
fbld
or
loop
loop
xor
push
jne
jecxz
add
shlb
shrb
fnstcw
not
and
rcrb
mov
add
loope
lods
pop
lea
mov
adc
mov
loopne
fnsave
xlat
mov
mov
mov
in
es
mov
push
in
dec
js
xchg
stos
pusha
rclb
mov
in
scas
loopne
addr16
adc
jp
sbb
and
mov
cli
and
xchg
adc
push
sbb
repnz
cmpsl
jge
out
sti
cmp
inc
ret
and
repz
pop
pusha
pop
lock
jno
add
sbb
jno
aam
mov
fwait
jge
into
rcrb
adc
loopne
pop
and
outsl
pop
and
shlb
adc
scas
rolb
loopne
push
mov
dec
lods
adc
mov
jbe
cmp
pusha
mov
inc
and
mov
inc
and
loop
cmp
inc
and
or
loopne
decl
pop
les
adc
and
inc
mov
mov
inc
pop
pop
cmp
pop
test
out
icebp
or
jp
jecxz
lahf
mov
pop
and
mov
int3
out
add
cltd
jl
push
and
sar
imull
scas
mov
pusha
xchg
jnp
movsl
pop
push
pop
fcmovnbe
test
pop
add
addb
loope
pop
outsb
inc
inc
repz
xchg
or
sbb
mov
sub
mov
cmp
cwtl
mov
out
repnz
fsubl
out
in
adc
jbe
jecxz
mov
xor
ja
sti
ret
lea
dec
fcomps
cmpsb
add
xchg
std
in
insb
push
push
repz
rclb
and
mov
scas
mov
shrb
scas
loopne
je
stc
insl
lea
jecxz
add
add
les
push
repnz
mov
push
push
shrb
inc
dec
shll
repz
xchg
lret
ss
pop
or
rcl
test
jbe
cmc
xor
scas
cld
sbb
sub
add
andb
jbe
loope
mov
lgs
jmp
mov
iret
je
jb
mov
mov
jg
addb
lock
inc
push
push
push
shlb
add
pop
mov
andb
xor
pop
adc
and
sub
sub
lret
sbbb
imul
ds
dec
int3
dec
out
fnsave
mov
pop
xor
mul
sbbl
inc
int3
std
lahf
sub
mov
xlat
xchg
in
xchg
sahf
push
push
fisttpll
adc
inc
push
addb
pushf
mov
enter
push
xchg
inc
add
fcomi
or
sub
pusha
inc
lret
stos
inc
inc
sub
mov
add
mov
mov
mov
out
mov
add
icebp
lcall
sbb
xchg
stos
inc
shlb
push
and
pushf
rep
rcrb
aam
cmp
or
rorb
mov
loopne
mov
mov
imul
mov
std
jge
adc
jp
cmp
aaa
lods
dec
rorb
dec
or
shlb
andb
mov
imul
jne
cwtl
icebp
add
jmp
iret
mov
popa
sti
mov
mov
sbb
lods
clc
ss
xor
test
and
subb
mov
shlb
rcrb
lret
loopne
add
adc
lds
lea
testb
rcrb
sub
sub
inc
test
mov
jbe
insl
sbb
loopne
sbb
mov
lahf
ja
gs
push
dec
add
js
fwait
popa
adc
pxor
inc
ftst
push
cmp
push
cmp
mov
and
mov
rol
jno
mov
or
sub
mov
mov
sti
mov
mov
adc
popa
nop
mov
sub
and
and
inc
mov
jb
mov
add
mov
lds
add
out
mov
enter
call
ja
mov
or
mov
sti
stc
inc
adc
push
mov
jno
popfw
insl
jg
cmpsb
inc
loopne
rolb
pusha
inc
or
dec
andl
pusha
loop
mov
pop
inc
jecxz
inc
and
cltd
outsl
hlt
push
shlb
gs
mov
inc
jbe
test
add
mov
push
add
shll
adc
or
inc
adc
mov
aaa
mov
ja
aam
pusha
xlat
data16
loopne
lock
cmpsl
mov
inc
or
sarb
in
call
or
xlat
sub
andb
mov
cmpsb
mov
push
or
cs
and
push
lods
and
call
icebp
ljmp
aas
add
gs
andb
dec
in
push
and
arpl
jno
arpl
push
or
loopne
outsl
xchg
mov
adc
fstps
int3
add
adc
jg
mov
pusha
mov
ret
lock
movups
cmp
pusha
mov
or
inc
adc
fildll
loopne
xchg
inc
and
inc
mov
add
dec
push
pusha
addb
adc
ljmp
in
mov
sub
pusha
sub
pop
xchg
movsl
jnp
lret
cltd
dec
xchg
pop
mov
cld
push
test
pusha
xor
mov
shlb
mov
cmpb
xchg
adc
shll
lock
dec
fstl
or
mov
pusha
mov
mov
push
or
and
inc
in
xchg
cltd
xchg
cmp
jbe
popa
push
and
add
mov
mov
arpl
cli
lock
rcrb
cld
repz
icebp
dec
dec
cmpsb
andb
test
pusha
into
lcall
mov
hlt
mov
push
loope
xor
pusha
cmp
mov
jns
aam
jmp
adc
inc
mov
adc
sub
and
mov
add
loop
mov
popf
xchg
push
lahf
fidivs
mov
and
bound
xchg
adcl
pop
iret
ds
inc
mov
pusha
add
push
addb
shlb
outsl
nop
mov
xchg
jne
lods
add
push
stc
fsubrl
mov
repnz
andb
jns
cmp
data16
push
popa
std
bound
mov
jg
pop
incl
pop
or
inc
in
ds
sti
lret
sub
loopne
xchg
cmc
stos
loopne
xchg
mov
imul
mov
or
and
fcom
mov
sti
mov
repz
cmpsl
jle
jp
add
xchg
mov
movsl
xchg
and
jg
adc
mov
jl
mov
scas
loopne
scas
andb
add
cmp
or
pop
stos
pusha
inc
xor
and
and
mov
nop
rclb
aas
xor
pop
jns
mov
cmp
and
in
add
sar
or
and
mov
enter
and
pop
jbe
add
int
pusha
mov
in
lret
ds
xchg
inc
inc
test
rorb
add
sub
and
mov
fistpl
leave
fldl
cmp
mov
lcall
or
and
lahf
movsl
dec
pop
adc
mov
mov
and
stos
push
push
xchg
ds
push
add
add
inc
add
rolb
and
pushf
ficompl
insb
aam
gs
aad
inc
roll
push
pop
insl
sahf
mov
icebp
sbb
cmp
mov
and
popf
mov
and
adc
push
pop
xor
pop
lret
in
test
jne
rclb
inc
xchg
lock
xor
sub
pop
pop
pop
mov
sahf
lret
inc
stos
mov
rcr
lret
leave
fsts
movsb
mov
lret
test
xchg
dec
enter
stos
push
movsl
and
cmp
rolb
dec
in
cmpsb
pusha
loopne
mov
or
lret
inc
mov
jmp
mov
testl
cli
jg
push
stos
and
jnp
push
mov
mov
mov
mov
stc
lahf
fcompl
mov
stc
add
jno
stos
inc
add
mov
and
sbb
or
mov
outsb
popa
loope
hlt
and
mov
ret
mov
adc
pusha
and
scas
rol
pop
and
cmpsb
and
movsb
rolb
rolb
inc
cs
mov
lcall
inc
leave
shl
popf
mov
loopne
mov
loopne
sbb
sbb
cs
mov
leave
dec
mov
xor
fneni(8087
mov
je
scas
add
mov
and
pop
adc
mov
xlat
sbb
xchg
pusha
lods
loopne
push
lods
pusha
rcrb
out
fstl
jmp
dec
ret
mov
xor
mov
pop
pop
imul
jb
in
pop
pusha
or
shlb
sub
inc
jge
cmp
push
fildl
loope
in
dec
stos
add
cmp
or
and
inc
adc
add
pop
mov
shl
daa
dec
mov
iret
xlat
add
inc
cmp
and
into
test
and
push
cli
test
out
loopne
push
movsb
and
sbb
daa
aam
lret
and
hlt
lahf
xor
and
ds
sbb
inc
les
pop
xor
xchg
gs
pusha
iret
lcall
divps
lahf
hlt
push
lds
inc
xchg
test
xor
jno
lahf
fwait
xlat
rorb
leave
in
mov
cmc
mov
pop
cld
xor
jmp
push
repz
insl
mov
ret
dec
and
addb
inc
outsb
cltd
roll
jp
xchg
push
sbb
in
mov
jmp
pusha
sar
or
loopne
out
pop
add
addps
pop
mov
ficomps
cld
int3
rep
popa
mov
push
lahf
add
pusha
push
lahf
inc
dec
ss
aad
inc
mov
add
lcall
arpl
mov
add
shlb
mov
inc
bound
mov
push
stos
pusha
sub
adc
shlb
mov
and
out
popa
inc
andb
popf
jecxz
insb
xchg
or
loopne
dec
lcall
cmpsb
and
out
xlat
icebp
aad
xor
or
imul
inc
xchg
fbstp
push
inc
pusha
fs
xchg
mov
mov
jne
ffreep
jle
and
lcall
rorl
push
push
pop
mov
movsl
notl
std
mov
add
cmp
flds
subb
insb
dec
aad
lods
rol
adc
cltd
ja
dec
dec
cmp
leave
sub
mov
jnp
scas
mov
mov
mov
shlb
and
loopne
mov
cwtl
sahf
sbb
stc
sub
push
and
mov
rcrl
addr16
mov
mov
add
dec
lret
xchg
pop
ret
push
in
sbb
mov
inc
out
dec
mov
cmp
jns
test
add
adc
int3
pop
push
es
adc
mov
addl
pusha
loop
shrl
loopne
mov
xor
inc
push
add
jge
movsb
inc
inc
ljmp
inc
outsb
add
mov
jl
and
loopne
sub
lahf
daa
insb
lcall
outsb
scas
and
and
inc
pop
xchg
jne
cmp
pusha
sub
ret
cmp
cmc
shlb
loopne
xchg
add
jns
in
imul
push
lods
mov
ret
fadd
and
hlt
inc
inc
xlat
call
inc
lcall
or
add
jmp
sbb
repz
xor
or
add
sbb
xor
shll
mov
ljmp
add
loop
fnstcw
test
and
inc
repz
nop
repnz
dec
pop
jle
decl
int3
jecxz
pusha
inc
sti
movsb
and
fnstenv
pusha
add
sbb
mov
mov
and
jecxz
rol
aad
dec
inc
test
mulb
add
andb
cmp
xor
mov
scas
ret
push
mov
pop
mov
push
pusha
add
jl
cmpsl
sbb
xchg
and
push
pop
sbb
push
imull
mov
cmp
mov
shr
xor
insb
inc
dec
scas
sbb
xchg
les
lock
xor
add
lret
arpl
rol
lods
and
mov
add
sti
mov
add
dec
lcall
sub
loopne
es
pusha
jb
jne
rolb
and
icebp
outsb
pop
mov
add
xor
or
loopne
xchg
in
mov
pop
iret
pop
mov
push
mov
je
jge
imul
nop
std
lods
xor
xchg
lret
jp
lock
daa
cmpsb
inc
mov
jbe
movsl
dec
mov
pusha
loopne
in
add
addb
push
lea
add
sbb
add
mov
cmp
ja
shlb
stos
mov
out
pusha
outsl
xor
je
inc
and
push
add
aam
in
xlat
push
cmp
lds
push
shlb
add
jns
outsw
xor
mov
and
andb
lods
ja
push
mov
flds
mov
sbb
add
mov
clc
pop
inc
das
outsl
xlat
jp
addl
mov
mov
ret
jne
mov
loopne
loopne
and
repz
hlt
sahf
mov
add
mov
loopne
cmp
loopne
push
jne
shrb
cmp
gs
xchg
dec
fadd
dec
inc
jb
inc
pop
inc
adc
inc
xchg
push
sub
rol
addb
inc
and
xchg
aam
xor
addb
mov
loopne
sub
and
sbb
cs
xor
icebp
jo
cltd
test
sti
jmp
mov
in
inc
sbb
shrl
lods
add
pusha
jae
pop
sbb
jno
add
cmp
in
pop
sub
push
xchg
loop
andb
scas
push
rolb
jl
aaa
int3
fidivs
fsubrl
call
and
xor
xor
mov
add
js
rcll
mov
int
add
adc
stos
and
jne
cmp
loopne
popa
mov
lods
or
or
and
push
rcll
xlat
cmp
mov
cmp
jge
sbb
movb
fucom
xchg
inc
dec
mov
icebp
dec
icebp
fwait
sub
mov
add
in
pop
call
imul
jnp
test
pop
jp
in
iret
fisttpll
nop
scas
inc
loopne
pop
adc
push
pop
dec
leave
test
inc
lods
mov
sub
rcll
mov
int
addr16
addb
add
inc
sbb
test
sbbb
mov
sub
insl
or
pusha
inc
xor
addb
rorb
mov
popa
push
insl
mov
mov
sub
sub
pusha
pusha
adc
inc
pop
lods
loopne
sbb
and
ret
push
lock
imull
add
push
shl
mov
add
das
out
dec
dec
cmp
lds
hlt
pop
jb
pop
shll
dec
ja
loopne
clc
and
jmp
rolb
sbb
fsubs
sarb
outsb
lock
push
andb
cli
testb
mov
insl
leave
cmp
mov
mov
pop
dec
jl
stos
adc
pop
out
add
out
cld
out
dec
push
inc
add
loopne
xchg
jle
xor
sti
aam
mov
lds
mov
cmpsl
inc
or
and
add
loopne
jp
outsb
pop
xchg
enter
or
fistps
inc
jl
inc
add
add
mov
push
and
inc
mov
add
loopne
imul
in
adcl
aam
add
and
stos
jmp
or
and
je
dec
fwait
inc
cli
mov
push
pusha
rolb
addr16
push
adc
addb
mov
add
ja
andb
imul
mov
insb
iret
ror
movsl
mov
xchg
ds
mov
pushf
push
xor
jbe
sub
pusha
rcrl
mov
sahf
loopne
out
inc
hlt
stc
loop
enter
and
icebp
rolb
pop
nop
pop
jmp
fists
aam
sar
mov
push
sbb
loopne
addl
add
lock
xchg
cmp
sbb
stos
inc
xor
outsl
mov
sub
mov
cli
xchg
mov
sub
shlb
add
jnp
pusha
pusha
fwait
pop
inc
push
push
add
jbe
mov
pop
imul
jle
ja
and
js
inc
shlb
cmp
ret
sub
pop
scas
iret
push
xchg
sub
pusha
aam
add
mov
fdivrl
and
pusha
loope
push
jno
insb
fisttpl
push
dec
mov
xchg
jne
jmp
and
cmp
loopne
aaa
sub
lock
xor
mov
cmp
pop
fistpll
mov
call
dec
mov
pusha
mov
cmp
rol
lock
shlb
shr
inc
inc
cmp
push
jp
mov
mov
call
in
jno
mov
clc
fnstenv
popf
fisttps
xor
xlat
add
rcrb
dec
jbe
in
adc
or
and
loopne
add
fiaddl
dec
adc
loopew
fdivr
pusha
jecxz
stc
cmp
cmpsl
sbb
shlb
and
pop
adc
cmp
or
mov
addb
shl
lahf
lret
hlt
jb
and
dec
jns
out
test
add
or
mov
pop
scas
inc
pusha
mov
add
inc
into
decl
loopne
movsl
shufps
jae
rolb
aas
sub
out
pop
testl
sub
rclb
mov
scas
mov
test
sbbb
inc
stos
pop
cmp
sub
out
addb
test
and
rcrb
mov
fistps
out
outsb
inc
cmp
repz
lea
pusha
mov
mov
ret
and
enter
pop
mov
loopne
xor
ret
cltd
jns
fiaddl
pusha
and
inc
clc
cmc
fistpll
and
scas
loopne
cmp
test
dec
mov
sub
and
pop
push
sbb
mov
ljmp
mov
aas
cmpsb
loopne
mov
shll
add
pop
inc
inc
imul
roll
add
jno
push
or
and
add
and
fistps
scas
add
dec
fdivrs
mov
dec
sbb
and
aaa
cmp
cmc
or
loopne
lea
and
int3
and
rorb
in
mov
inc
dec
lods
add
pop
or
or
fidivl
subl
shlb
jae
addb
fstl
and
loopne
xchg
add
mov
mov
mov
andb
mov
shl
andb
xor
pusha
sub
mov
pusha
mov
pop
test
xchg
lock
xchg
enter
enter
out
idivl
aaa
and
icebp
out
xchg
outsb
mov
sub
xchg
push
mov
mov
andb
push
cmpsb
andb
cmp
pusha
shrb
bound
pusha
mov
push
push
idivl
adc
int3
stc
cmpsl
test
loopne
mov
ror
fisubrs
xorl
enter
popa
adcl
lea
mov
rcr
fdivr
mov
inc
push
iret
mov
xor
mov
cmc
dec
and
shlb
addb
outsl
aad
shlb
pusha
rclb
or
jg
push
adc
dec
insb
sbb
jl
sub
dec
stos
mov
testl
call
inc
imul
js
ljmp
mov
sbb
push
in
ret
shll
and
pusha
jb
mov
mov
push
push
cld
adc
and
mov
mov
mov
das
addb
pop
xchg
mov
jno
xchg
jle
loopne
test
pop
dec
inc
and
or
fcmovnu
push
mov
xchg
adc
mov
inc
shl
jae
test
pusha
jno
xor
cld
shll
xor
and
add
out
stos
add
and
imul
cmpb
add
leave
mov
fucomi
rolb
cmp
ret
pop
add
sub
loopne
aad
and
pusha
loopne
add
test
ja
push
scas
cltd
xor
and
jo
daa
ss
lds
sbb
fistpll
icebp
outsb
addb
mov
pushf
lods
cwtl
sti
das
inc
jecxz
xchg
mov
add
mov
and
inc
pushf
and
std
sub
pushf
lods
loopne
cmc
fidivl
out
jmp
ret
pusha
lea
ss
std
rcll
aas
fadds
addb
das
xor
dec
andl
xor
loopne
dec
add
mov
inc
inc
ljmp
rol
push
sbb
rcr
addr16
inc
adcb
mov
ret
popa
inc
idivb
jb
pop
and
inc
push
sub
scas
addb
add
int3
push
adc
mov
add
vucomiss
rclb
movsb
mov
fldenv
orl
mov
leave
fucomi
jo
addb
andl
add
js
out
xor
pop
stos
addb
andl
cmp
mov
adc
push
outsb
icebp
fisubrl
mov
cmp
mov
lock
addb
push
pusha
pusha
cli
inc
pop
scas
rcrb
lret
pusha
add
add
movsb
pusha
inc
mov
in
nop
xlat
fnstenv
insb
push
add
mov
enter
roll
xor
dec
rcrl
shlb
into
inc
and
pusha
mov
jae
mov
add
and
aas
cli
fimuls
inc
xor
inc
gs
fisubs
mov
and
subl
pop
jae
mov
jae
sub
adc
cmpsl
add
pusha
lods
test
addb
gs
out
sub
mov
sbb
lcall
xchg
rorl
sti
mov
idiv
adc
mov
fistpll
or
push
loop
jge
hlt
push
pusha
addb
or
cmp
mov
nop
mov
into
insb
jecxz
mov
mov
mov
jnp
mov
push
inc
pusha
xchg
push
loopne
cld
inc
sti
pusha
repnz
das
push
scas
mov
cmp
and
pusha
push
data16
inc
push
popa
sti
jp
hlt
insl
push
xchg
sbb
das
fwait
lods
add
mov
sub
pushf
mov
pop
pop
lods
loopne
cmpl
cld
mov
mov
mov
lods
mov
xchg
cli
cmp
scas
and
push
les
loopne
pop
addr16
out
scas
fildl
add
loopne
push
mov
loopne
inc
pusha
dec
mov
in
cltd
pop
loopne,pn
pop
xor
or
inc
enter
mov
ja
xchg
pop
stos
add
mov
and
inc
hlt
es
cmpsb
inc
and
sub
dec
push
xor
std
popa
and
jle
mov
mov
pop
das
js
inc
add
and
add
les
adc
mov
xchg
mov
popa
andb
push
cmp
sahf
aad
mov
rolb
loope
jo
cwtl
scas
pusha
loopne
loop
dec
or
arpl
mov
push
inc
scas
and
je
paddb
cmpb
pop
add
jle
dec
dec
fmul
sti
call
xor
scas
jnp
sbbl
lods
mov
push
jns
jp
xor
pop
sbb
lock
cld
push
bound
sbb
and
dec
sti
enter
mov
hlt
pop
mov
sbb
mov
dec
scas
pusha
and
inc
shlb
adc
add
rorb
and
loopne
ljmp
shlb
rol
xchg
xchg
or
mov
loopne
lcall
inc
push
in
imul
lds
pop
loop
inc
push
out
cmp
lock
aaa
sbb
andb
pop
sub
cmpb
push
jne
les
inc
pusha
icebp
daa
test
dec
dec
mov
xchg
roll
pusha
pop
jge
mull
fs
mov
cmp
mov
xchg
jp
rolb
je
andb
cli
sbb
pushf
add
loop
jle
or
rorl
pusha
jb
cld
jae
imul
pop
lods
cmp
jb
mov
in
insb
and
adc
jge
xchg
push
in
inc
mov
popl
loope
icebp
out
adc
push
sbb
mov
mov
mov
mov
sbb
test
jecxz
xchg
or
ret
mov
mov
popf
xor
pop
cmpsb
pusha
mov
mov
fsubrl
jbe
add
and
fcoml
mov
jge
out
push
inc
push
or
and
addr16
jg
fidivrl
add
shll
sahf
xchg
sti
aam
jl
dec
leave
dec
sbb
xchg
lcall
cmp
andb
notl
pop
sub
loopne
mov
mov
andb
scas
addb
inc
and
cltd
push
mov
jecxz
cmp
pop
lret
jecxz
or
jne
push
frstor
xchg
imul
xor
sbb
sub
sbb
mov
mov
daa
sub
mov
pusha
adcl
ds
xor
cli
push
insl
mov
popf
pusha
add
mov
xchg
or
popf
pop
push
repz
nop
push
test
ror
int
push
lret
aad
jno
jne
enter
mov
cmp
cmp
loopne
rclb
jl
divl
es
mov
in
daa
and
and
fwait
mov
movsb
add
adc
loopne
push
int3
fs
pusha
adcl
fstpl
add
add
or
mov
and
or
inc
cwtl
sub
sti
loop
leave
mov
rclb
pop
or
mov
xchg
aam
aaa
in
mov
add
xor
pop
push
movsb
and
xor
cli
mov
or
inc
cmp
mov
push
add
addb
out
push
inc
incl
add
and
add
repnz
and
aas
cmpsb
mov
add
jne
add
xor
stos
inc
add
mov
jge
add
sub
adc
pop
pusha
xchg
enter
in
sti
movsl
sti
stos
mov
test
inc
sarb
fadd
fisubrs
sub
add
aad
jle
jbe
and
xchg
mov
dec
daa
xor
pop
and
jp
jae
rol
in
sbb
insw
push
loope
shll
jecxz
negl
scas
jg
cmpsb
mov
pusha
inc
mov
inc
subb
outsb
lcall
loope
mov
subb
pusha
mov
mov
add
and
pop
and
loopne
xchg
add
jnp
dec
pushl
mov
imul
inc
pop
inc
loop
and
adc
mov
movsl
repz
clc
std
bound
inc
dec
push
ss
and
xchg
inc
adc
xlat
cmpsl
fistpl
mov
loopne
and
inc
enter
outsl
inc
jle
and
sarl
out
xchg
ficoml
movsb
pusha
and
jno
ss
les
or
pusha
lcall
repnz
hlt
dec
push
test
fwait
inc
fisubrl
andb
pop
fstps
inc
addb
sahf
pop
cmpsl
push
and
loopne
loopne
push
and
mov
enter
je
push
mov
mov
js
dec
fcomps
jg
out
and
xchg
pop
outsl
cmp
xorl
and
loopne
cwtl
push
and
dec
pop
sub
sbbb
mov
lret
shlb
add
not
inc
push
inc
sbb
les
push
dec
inc
inc
mov
in
addr16
lods
jecxz
mov
xchg
out
inc
inc
test
rolb
cld
ds
lods
scas
mov
pop
sbb
push
loopne
xor
ficoml
adc
inc
fwait
outsl
push
divl
lcall
xor
and
in
inc
ss
lahf
addl
xor
loopne
dec
mov
push
add
push
mov
inc
shrb
fsubs
xchg
or
jecxz
in
cmp
mov
fnstsw
inc
mov
mov
lcall
jg
and
ljmp
mov
inc
stos
sbb
dec
inc
xchg
iret
jmp
push
fwait
mov
lahf
cmpsb
pusha
mov
sbb
loopne
sarb
mov
fcompl
notb
cmp
loopne
nop
cmp
stos
and
sbb
xchg
inc
mov
sbb
loope
mov
sub
add
hlt
mov
loop
repnz
jae
inc
mov
es
ja
xor
jb
mov
or
inc
inc
addr16
popa
stc
mov
or
repz
loop
hlt
gs
jle
bound
andb
xor
inc
add
push
pop
mov
in
mov
dec
cmp
mov
fistps
add
sahf
mov
movb
lcall
add
mov
add
add
insb
xor
stos
cmp
fldcw
push
sbb
icebp
insb
and
mov
or
pushf
mov
and
shlb
pop
inc
push
aad
mov
je
adc
test
inc
add
pusha
daa
pop
repnz
in
into
jg
shl
cwtl
xor
adc
or
inc
sbb
push
sub
rclb
inc
pusha
daa
enter
lods
in
das
scas
and
inc
mov
sbb
loopne
addb
sub
xor
outsb
fcmovne
dec
push
and
xor
inc
sarl
pusha
add
add
pop
xor
push
pusha
rolb
lds
add
inc
pop
addr16
pop
inc
dec
loopne
xchg
negb
pop
pop
xor
test
pusha
sub
subb
mov
inc
rorb
andb
dec
xchg
adc
xchg
sbb
shlb
mov
mov
mov
js
xchg
jp
pop
mov
fwait
addr16
jge
xor
fwait
cmpsl
fcos
push
outsb
dec
sub
sub
add
nop
sbb
cwtl
lcall
sarl
mov
and
dec
ljmp
add
mov
and
rorb
mov
mov
loopne
cmp
dec
push
loope
and
fwait
and
das
out
rclb
mov
dec
cwtl
pop
push
inc
sbb
addb
and
and
pusha
inc
jecxz
xchg
lds
inc
cmp
incl
in
popa
push
pop
bound
sbb
cmc
adc
inc
cmpsb
pusha
mov
adc
out
into
faddl
add
inc
sahf
es
pusha
lea
js
xchg
mov
mov
and
out
sbb
mov
loopne
shrb
pusha
push
adc
push
lods
imul
popa
push
sub
add
loopne
addb
and
push
add
pusha
sub
mov
lahf
or
mov
xchg
xor
lods
lods
inc
rclb
jle
idivb
pop
enter
mov
inc
jl
insl
adc
fwait
addb
dec
jge
xchg
inc
lds
insl
sti
rcrb
scas
and
mulb
pusha
inc
jb
xchg
pop
xchg
or
lea
sub
test
pop
rolb
pusha
push
pusha
and
xchg
cli
je
fisubrl
push
cmp
pusha
pusha
imul
loopne
inc
and
add
add
