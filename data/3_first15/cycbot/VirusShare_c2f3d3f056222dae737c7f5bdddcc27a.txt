add
add
pusha
pusha
add
inc
adc
add
add
adc
adc
jo
xor
xor
adc
add
push
pusha
xor
inc
xor
adc
push
add
inc
xor
pusha
xor
add
and
inc
jo
add
push
and
xor
add
inc
and
xor
and
push
xor
inc
bound
bound
inc
inc
add
jo
push
adc
add
adc
push
xor
add
adc
jo
inc
bound
jb
inc
push
and
xor
and
inc
jo
inc
bound
adc
adc
adc
inc
pusha
pusha
add
xor
xor
push
push
xor
jo
add
pusha
add
adc
jo
push
xor
inc
adc
add
and
inc
add
inc
jo
inc
jb
inc
adc
inc
push
push
and
add
and
and
push
add
pusha
adc
add
push
push
push
adc
jb
and
xor
inc
inc
pusha
add
adc
push
add
add
jo
add
and
add
add
inc
bound
adc
and
xor
inc
adc
add
inc
jo
jo
inc
inc
inc
and
push
xor
push
pusha
add
pusha
xor
bound
add
adc
xor
add
inc
adc
push
jo
xor
push
xor
jo
add
push
pusha
jo
add
inc
inc
add
push
add
jo
xor
jb
adc
pusha
inc
xor
add
adc
jo
push
bound
xor
adc
pusha
add
xor
add
inc
xor
inc
push
add
and
inc
add
pusha
adc
pusha
add
inc
xor
push
pusha
xor
add
add
inc
and
push
adc
xor
push
add
bound
push
jb
inc
add
adc
xor
push
add
pusha
pusha
and
push
jo
xor
push
pusha
add
pusha
jo
inc
and
inc
adc
adc
bound
add
jo
add
xor
inc
push
adc
xor
inc
add
pusha
and
jo
and
adc
inc
push
bound
add
push
and
inc
inc
and
bound
inc
add
inc
add
and
pusha
jb
xor
xor
pusha
pusha
xor
add
and
adc
xor
adc
add
add
adc
adc
xor
jo
xor
push
pusha
and
pusha
pusha
push
inc
inc
pusha
inc
xor
inc
add
and
adc
pusha
and
pusha
inc
push
and
adc
adc
add
inc
bound
jo
inc
jb
bound
xor
add
pusha
and
xor
add
jo
add
and
inc
jb
xor
push
push
push
add
xor
adc
inc
bound
adc
xor
add
pusha
bound
xor
add
inc
jb
inc
add
push
and
add
pusha
add
inc
inc
jb
xor
push
adc
xor
push
xor
jo
add
xor
add
adc
xor
jb
inc
pusha
xor
inc
jo
adc
bound
jo
bound
jo
jo
push
adc
and
jo
inc
xor
adc
add
pusha
and
and
jb
pusha
push
adc
jo
push
and
pusha
add
push
and
push
inc
add
xor
adc
jb
push
add
push
bound
and
adc
jo
inc
pusha
adc
inc
push
inc
push
add
add
xor
jb
push
push
push
and
add
jo
adc
adc
jb
bound
pusha
inc
bound
jo
and
pusha
jo
bound
add
inc
and
jo
adc
jo
add
add
and
inc
inc
adc
adc
inc
xor
pusha
xor
jo
jo
inc
and
adc
push
and
adc
and
and
add
adc
adc
bound
xor
add
push
xor
pusha
xor
add
jo
adc
push
add
adc
inc
adc
pusha
push
adc
add
and
xor
and
xor
jb
add
adc
adc
and
adc
push
add
add
and
adc
adc
xor
push
jo
add
inc
add
jb
bound
add
xor
pusha
pusha
inc
inc
add
xor
pusha
and
add
jo
inc
jo
pusha
adc
pusha
adc
adc
inc
pusha
jb
jo
add
inc
jo
jo
xor
add
push
jo
jo
and
adc
pusha
bound
add
bound
add
adc
inc
adc
add
jo
and
and
xor
and
inc
add
and
and
jo
add
add
push
push
adc
push
add
jb
adc
jo
add
adc
add
xor
add
inc
bound
xor
inc
adc
and
jb
xor
add
adc
push
push
add
bound
inc
push
push
inc
and
jo
push
pusha
xor
jo
jb
xor
add
pusha
bound
adc
add
inc
xor
xor
bound
push
push
and
jo
add
and
inc
adc
inc
inc
adc
and
push
add
bound
add
add
push
push
adc
xor
pusha
pusha
push
push
bound
inc
inc
xor
adc
and
and
and
jo
add
and
add
push
add
xor
pusha
push
push
add
push
jb
jb
jo
push
inc
and
adc
push
adc
push
xor
push
add
pusha
and
add
inc
push
and
pusha
inc
pusha
add
add
and
inc
push
inc
jo
pusha
inc
add
add
push
xor
jb
jb
and
add
adc
add
inc
jb
adc
adc
add
adc
adc
pusha
inc
add
jo
add
bound
inc
xor
jb
adc
inc
xor
add
inc
xor
xor
inc
inc
add
jo
jo
add
jo
adc
pusha
add
pusha
add
bound
adc
push
jb
add
inc
add
inc
inc
jo
xor
inc
add
adc
push
add
jb
inc
add
and
xor
inc
inc
pusha
jb
inc
jo
add
push
add
add
inc
inc
push
xor
xor
bound
inc
push
add
xor
inc
and
add
jb
add
add
and
inc
jo
add
xor
bound
add
and
add
pusha
pusha
inc
push
inc
add
jo
inc
push
jo
add
add
and
jo
add
add
pusha
jb
push
inc
push
xor
and
and
add
add
pusha
xor
bound
pusha
add
add
xor
adc
xor
and
inc
push
pusha
and
xor
xor
push
xor
add
jo
adc
jo
add
inc
jo
add
jb
push
adc
bound
and
pusha
push
inc
jo
jo
push
add
and
add
inc
push
add
jo
inc
add
adc
xor
add
push
inc
and
adc
jo
pusha
adc
bound
adc
push
bound
inc
adc
jo
xor
and
add
push
add
inc
xor
inc
add
pusha
add
xor
jo
xor
jo
add
and
add
bound
push
jb
inc
pusha
add
xor
inc
bound
add
jb
and
add
push
push
and
and
add
adc
pusha
adc
add
add
pusha
push
and
add
xor
adc
add
jo
jb
inc
inc
add
and
adc
push
inc
add
adc
inc
inc
adc
pusha
push
adc
add
and
adc
add
adc
pusha
pusha
adc
jb
xor
add
inc
bound
adc
xor
add
jb
adc
and
inc
adc
add
pusha
add
push
add
push
xor
adc
and
bound
bound
push
push
bound
inc
bound
add
inc
inc
add
xor
inc
inc
and
inc
xor
push
and
add
and
and
and
and
bound
push
add
adc
and
inc
add
adc
xor
add
xor
add
xor
jb
and
and
pusha
pusha
adc
xor
inc
push
pusha
jo
inc
inc
add
add
inc
inc
add
pusha
xor
add
jb
add
inc
add
add
jo
and
xor
add
push
and
and
jb
xor
xor
and
push
and
add
inc
adc
and
and
and
jb
add
inc
pusha
jo
inc
inc
xor
xor
jo
jo
xor
inc
push
add
add
inc
inc
add
inc
jo
push
bound
add
add
adc
add
adc
xor
push
add
and
xor
push
pusha
add
inc
push
inc
add
push
push
bound
add
and
pusha
adc
inc
inc
jo
jo
jo
add
push
add
push
inc
inc
inc
and
adc
add
pusha
xor
push
adc
adc
adc
xor
jo
and
push
push
push
inc
pusha
push
and
xor
add
add
pusha
push
inc
inc
xor
bound
add
pusha
and
jo
inc
xor
add
inc
add
add
xor
add
push
push
add
xor
push
inc
jo
add
and
adc
push
jo
jo
and
and
add
bound
xor
and
push
add
adc
push
and
add
xor
add
pusha
inc
add
adc
xor
inc
bound
xor
inc
add
and
adc
pusha
xor
xor
push
and
pusha
and
add
add
adc
adc
adc
inc
xor
push
adc
push
inc
pusha
add
pusha
inc
push
push
adc
bound
xor
xor
add
adc
pusha
adc
add
pusha
and
push
pusha
add
inc
adc
pusha
and
xor
inc
xor
inc
add
add
xor
add
xor
push
and
inc
and
inc
xor
jo
inc
adc
and
bound
add
xor
push
push
bound
bound
add
and
inc
add
push
xor
and
add
push
jb
jo
and
jo
xor
pusha
and
adc
adc
inc
add
add
adc
and
xor
push
inc
adc
add
add
xor
adc
jb
jo
inc
adc
adc
add
jo
bound
and
xor
inc
adc
adc
inc
xor
add
add
pusha
add
and
xor
adc
push
add
xor
push
and
add
xor
add
and
add
add
adc
add
adc
jb
and
xor
adc
inc
pusha
add
and
jo
inc
add
xor
pusha
push
jo
inc
xor
and
adc
add
and
push
and
pusha
adc
push
add
inc
add
inc
add
jo
add
push
inc
jb
jo
jb
adc
add
bound
add
push
inc
inc
bound
adc
xor
inc
add
inc
inc
jo
and
add
and
xor
add
inc
inc
xor
inc
jo
push
adc
add
bound
and
jo
add
xor
inc
push
and
add
inc
and
inc
adc
xor
push
jo
add
add
pusha
adc
add
pusha
push
inc
xor
add
push
add
push
inc
and
push
inc
adc
jb
and
pusha
pusha
push
pusha
adc
adc
inc
adc
add
and
inc
xor
inc
add
and
pusha
and
add
and
bound
add
push
xor
jo
add
jo
adc
pusha
add
adc
inc
and
and
add
bound
push
xor
jb
jo
inc
adc
add
add
add
add
adc
pusha
pusha
xor
and
and
xor
add
and
jo
adc
add
add
and
jo
inc
inc
add
add
jo
xor
xor
adc
and
add
inc
add
inc
add
inc
jo
xor
jo
add
and
xor
add
and
push
xor
jo
xor
add
pusha
inc
and
adc
push
push
inc
add
and
and
add
and
bound
xor
and
and
xor
add
inc
pusha
bound
add
xor
pusha
add
add
push
inc
and
adc
jb
and
and
xor
push
pusha
and
inc
add
xor
inc
add
add
adc
add
add
jb
inc
pusha
adc
push
inc
jo
and
add
add
add
pusha
jo
add
inc
and
xor
add
push
bound
pusha
jb
jo
and
adc
add
jo
adc
adc
add
add
pusha
adc
add
add
pusha
jb
inc
add
push
add
push
add
inc
and
bound
xor
inc
and
inc
add
push
add
inc
adc
inc
and
push
inc
add
and
adc
add
push
and
pusha
jo
add
jo
push
bound
add
xor
push
push
jo
add
xor
jb
add
inc
inc
jb
push
adc
add
and
inc
push
xor
push
jb
inc
inc
push
add
inc
and
and
inc
inc
and
adc
add
add
add
add
push
xor
jo
push
jo
push
add
add
inc
inc
bound
bound
adc
adc
add
pusha
and
xor
inc
adc
and
xor
adc
add
add
and
push
adc
add
jo
xor
xor
add
jb
adc
add
and
inc
push
push
jo
adc
jo
xor
xor
inc
push
xor
inc
and
jo
inc
adc
add
and
xor
xor
xor
and
xor
xor
add
adc
adc
pusha
add
push
and
adc
add
add
push
and
add
add
pusha
add
add
xor
bound
adc
adc
adc
add
adc
and
xor
add
xor
pusha
add
add
inc
push
bound
add
pusha
pusha
and
add
jb
xor
add
add
push
xor
bound
and
xor
jo
add
jo
pusha
inc
inc
bound
xor
inc
pusha
pusha
jb
add
jo
xor
jb
push
add
xor
push
add
xor
xor
inc
add
inc
jo
inc
inc
add
and
jo
inc
adc
jo
and
add
xor
jo
adc
add
inc
and
and
jo
adc
add
add
bound
pusha
inc
adc
adc
and
pusha
jb
push
add
inc
pusha
pusha
add
inc
pusha
adc
pusha
inc
bound
jo
bound
xor
inc
xor
adc
inc
push
pusha
xor
pusha
push
push
add
add
xor
add
inc
add
pusha
and
bound
adc
inc
pusha
add
and
bound
adc
adc
jb
add
add
inc
and
adc
add
xor
adc
inc
push
pusha
xor
pusha
add
add
xor
adc
add
xor
add
push
jo
xor
xor
adc
push
jb
jo
inc
and
add
inc
add
push
push
add
add
jo
add
add
jo
xor
add
inc
inc
pusha
push
inc
add
xor
add
pusha
add
xor
add
inc
adc
inc
inc
and
add
jb
add
add
inc
inc
jo
xor
pusha
xor
xor
add
add
xor
and
push
adc
adc
add
inc
add
add
add
adc
adc
push
xor
bound
inc
add
inc
and
and
xor
inc
add
pusha
bound
inc
jo
push
xor
add
add
jo
jb
adc
xor
pusha
inc
add
xor
jo
add
bound
inc
inc
inc
adc
inc
pusha
jo
push
jo
push
push
add
add
inc
and
xor
xor
add
jo
inc
jb
push
add
pusha
add
add
inc
push
and
push
inc
xor
xor
push
add
xor
add
pusha
adc
adc
inc
push
adc
jo
and
add
xor
and
inc
xor
inc
jb
inc
jo
inc
adc
xor
push
push
xor
jo
adc
adc
adc
adc
inc
jo
jo
jo
adc
push
xor
adc
xor
add
pusha
jo
push
xor
pusha
pusha
and
xor
inc
add
and
add
adc
push
add
inc
add
and
xor
xor
inc
bound
bound
inc
and
add
inc
jo
and
add
jo
and
xor
inc
push
push
and
push
inc
add
push
add
add
jb
adc
add
adc
push
and
bound
bound
jo
add
xor
inc
xor
push
xor
pusha
add
inc
add
push
add
add
and
inc
and
add
bound
adc
add
and
add
inc
adc
jb
bound
add
add
xor
inc
jb
push
jo
adc
jb
jo
jb
xor
jo
inc
inc
adc
add
pusha
and
add
add
pusha
pusha
jo
add
adc
add
inc
adc
adc
push
push
add
xor
push
jb
push
and
add
add
adc
and
xor
add
add
push
xor
and
push
xor
add
inc
and
add
add
pusha
adc
inc
adc
xor
jb
and
jo
inc
and
add
inc
inc
add
add
xor
xor
jb
adc
xor
pusha
adc
add
pusha
jo
pusha
add
inc
xor
add
inc
add
xor
adc
and
inc
adc
inc
adc
and
add
and
inc
jo
and
inc
xor
jo
add
and
inc
pusha
inc
adc
add
add
adc
pusha
push
add
adc
and
jb
pusha
pusha
inc
and
add
and
and
push
add
jb
xor
push
inc
adc
adc
push
adc
pusha
jo
jo
pusha
bound
and
pusha
add
inc
add
jo
push
xor
add
xor
and
pusha
pusha
xor
xor
adc
jb
push
adc
xor
jb
adc
pusha
and
adc
adc
adc
and
jo
adc
jo
inc
adc
inc
and
bound
jo
pusha
xor
push
push
inc
xor
adc
bound
add
xor
adc
jb
adc
and
and
inc
pusha
bound
inc
add
inc
push
add
add
adc
jb
push
inc
xor
inc
xor
jb
add
xor
xor
and
and
xor
xor
add
adc
and
inc
jo
jb
inc
adc
and
pusha
xor
pusha
add
and
pusha
push
jb
xor
add
push
bound
and
jo
xor
push
xor
and
inc
inc
adc
push
inc
and
jb
and
inc
and
jo
xor
adc
pusha
add
pusha
inc
add
add
adc
jo
add
push
bound
adc
adc
push
push
inc
adc
add
jo
inc
xor
add
pusha
add
xor
add
pusha
jo
adc
push
push
pusha
jo
add
add
inc
add
adc
pusha
pusha
and
inc
jo
add
jo
jo
pusha
and
adc
jo
adc
and
adc
and
inc
and
push
add
xor
xor
and
pusha
jb
push
jo
adc
push
pusha
add
jo
add
xor
push
push
jb
adc
add
jo
push
and
xor
jb
xor
add
adc
push
push
add
jo
inc
push
xor
add
push
xor
add
xor
add
add
inc
pusha
adc
add
xor
push
inc
and
inc
adc
xor
jb
push
xor
push
jo
add
adc
adc
and
add
and
adc
bound
inc
jo
push
pusha
and
and
add
xor
push
and
add
adc
pusha
jo
add
add
push
xor
add
bound
xor
jb
pusha
add
push
and
inc
add
jo
xor
push
add
add
push
jb
xor
push
jo
push
bound
and
inc
pusha
and
add
adc
add
pusha
inc
add
jo
jb
add
xor
pusha
push
add
adc
add
push
jb
jb
push
jo
push
inc
add
and
add
add
adc
push
jo
jo
inc
xor
adc
jb
pusha
and
add
add
add
pusha
inc
inc
pusha
pusha
pusha
inc
add
add
adc
inc
pusha
and
pusha
jo
add
adc
xor
bound
push
adc
and
adc
jo
add
jo
and
adc
add
xor
inc
adc
jb
adc
adc
inc
adc
xor
bound
push
xor
xor
pusha
inc
inc
add
inc
inc
push
add
adc
xor
add
pusha
pusha
pusha
pusha
pusha
add
add
and
add
pusha
bound
push
jb
inc
push
xor
adc
push
inc
bound
add
inc
bound
pusha
inc
pusha
push
add
jo
add
pusha
jb
bound
add
inc
push
adc
push
inc
inc
adc
and
add
push
add
and
adc
add
and
push
and
and
pusha
push
jb
add
pusha
and
and
add
jo
and
inc
bound
xor
jo
add
push
inc
pusha
bound
jo
jo
pusha
inc
add
inc
adc
and
inc
add
xor
jb
add
push
adc
jo
push
jo
jo
push
inc
add
and
pusha
xor
inc
push
add
jo
inc
push
add
push
pusha
inc
jo
add
add
adc
adc
and
adc
inc
and
adc
adc
and
xor
adc
xor
bound
xor
jb
jb
and
adc
xor
xor
push
add
inc
xor
adc
add
add
push
pusha
add
add
inc
xor
add
add
xor
push
add
inc
adc
add
adc
inc
add
adc
add
jo
xor
push
jb
bound
add
inc
adc
add
inc
inc
push
pusha
inc
add
add
and
add
jo
xor
push
inc
inc
xor
jo
xor
add
add
add
push
inc
push
push
pusha
pusha
adc
add
push
jb
add
adc
xor
pusha
add
push
add
xor
and
adc
inc
inc
add
xor
pusha
adc
and
adc
adc
pusha
pusha
add
pusha
and
inc
jo
pusha
adc
inc
push
xor
and
add
inc
adc
and
add
jo
push
pusha
add
jb
bound
adc
add
inc
jb
bound
adc
pusha
adc
add
and
adc
and
and
inc
pusha
jb
xor
xor
adc
bound
add
bound
jo
and
bound
inc
and
bound
bound
bound
push
xor
push
and
and
add
bound
xor
adc
pusha
add
adc
add
pusha
push
push
jo
add
jo
pusha
jo
inc
add
pusha
add
and
add
add
xor
and
and
inc
inc
adc
add
inc
add
pusha
add
push
add
inc
xor
push
add
and
and
and
add
pusha
bound
inc
jo
adc
add
pusha
add
inc
inc
inc
add
and
and
inc
push
bound
adc
push
adc
and
inc
pusha
add
inc
inc
adc
adc
and
jb
push
xor
bound
adc
adc
xor
jo
xor
adc
add
pusha
pusha
and
inc
add
inc
add
inc
jo
bound
and
jo
push
inc
bound
pusha
jo
inc
xor
adc
jo
inc
xor
xor
push
jb
jb
xor
and
add
push
pusha
adc
adc
inc
add
pusha
push
adc
add
adc
push
xor
adc
xor
push
add
push
adc
push
xor
add
add
xor
add
inc
adc
js
dec
lahf
mov
mov
test
add
add
pop
add
and
dec
add
add
inc
xor
inc
movsl
gs
inc
pop
or
xor
es
mov
rolb
mov
xor
imul
lea
add
xor
cmp
dec
sub
add
inc
clc
sbb
inc
in
cmc
mov
add
dec
and
or
add
add
sti
pop
fcompl
sub
add
add
loop
xor
push
xchg
push
stc
xchg
xor
xor
in
sub
mov
aaa
out
clc
mov
mov
inc
push
int3
xchg
mov
mov
jg
mov
lods
gs
cmpsl
dec
loope
dec
add
and
dec
xchg
add
shll
mov
lock
aas
aad
repnz
sbb
mov
push
pop
pop
sbb
mov
aas
add
add
fstpt
insb
add
add
adcb
cmp
add
inc
lahf
aaa
fmul
movsl
inc
add
inc
mov
divl
xor
in
push
xchg
add
push
jo
lcall
jno
fistps
lods
lock
add
and
cmp
aad
sub
ljmp
mov
jnp
imul
push
push
mov
ret
or
xchg
mov
mov
jg
gs
lcall
pop
xor
jb
add
add
cli
pop
rorb
sbb
xchg
insb
add
mov
xor
ds
aaa
popf
mov
stc
sbb
sub
mov
add
ret
sub
nop
stos
pop
xchg
xchg
mov
xor
mov
ss
mov
inc
ljmp
mov
xchg
cwtl
mov
popa
and
movb
add
mov
pop
pushl
pop
pop
pop
mov
enter
aaa
adc
mov
js
icebp
in
sti
sub
mov
rorl
movsl
or
mov
adc
enter
add
push
stos
in
jecxz
mov
mov
cmp
leave
adc
xor
and
mov
mov
stos
insb
add
add
pop
add
mov
xor
xor
arpl
sub
add
add
mov
mov
fbld
mov
jp
and
sbb
inc
inc
jmp
mov
mov
mov
add
jmp
sbb
add
add
pop
inc
xchg
jns
and
mov
xor
in
ror
xlat
ficompl
dec
shr
stos
jae
adc
mov
and
aas
sub
jl
cmpsl
cmp
jg
push
xchg
jbe
pop
lock
xchg
sub
jne
pop
push
les
mov
add
add
xchg
pop
add
mov
into
and
xor
cmp
mov
pop
lret
mov
mov
icebp
pop
push
cmpsb
or
add
add
or
push
jp
adc
ss
ret
add
add
mov
decb
out
in
test
hlt
xchg
xchg
dec
add
add
lret
insl
fadds
mov
cmp
ljmp
and
mov
adc
jmp
insb
add
add
add
gs
and
xchg
push
sbb
add
sub
add
add
add
add
int
fldenv
sub
shll
cmp
xor
inc
push
cmc
in
rcrb
push
imul
add
fldcw
add
sbb
and
adcl
stos
sbb
add
into
push
mov
pop
scas
jmp
mov
xchg
aad
add
add
push
fwait
push
jp
or
add
add
insl
in
ds
pop
add
add
fnstsw
in
call
add
jns
fstp
int3
cmp
pop
push
out
shlb
add
mov
pop
jle
or
add
add
pop
cmp
jg
cmc
lret
add
add
add
and
mov
in
aam
and
test
mov
mov
xchg
push
std
mov
adc
mov
mov
xchg
mov
mov
mov
mov
jo
sbb
push
push
movsl
pop
jecxz
add
add
and
sahf
sub
add
add
fwait
in
test
jmp
dec
add
add
pop
mov
mov
add
int3
mov
dec
dec
loopne
hlt
sub
jg
mov
test
mov
jb
add
loope
pop
clc
cmp
add
push
sub
jb
enter
je
add
add
jo,pt
inc
out
scas
mov
or
mov
add
rcl
push
sbb
daa
stc
lret
std
mov
rcl
shll
in
arpl
addl
add
add
adc
dec
xchg
mov
dec
pop
test
mov
in
shrb
add
add
add
add
mov
in
sub
das
lret
jne
adc
mov
sti
hlt
out
add
ja
mov
orb
cmpsl
pop
or
fildl
out
jns
sub
mov
add
add
popa
outsl
jg
imul
push
push
jnp
ja
in
ret
add
mov
fsubp
stos
add
add
add
push
mov
add
mov
inc
add
sbb
iret
sub
add
add
xchg
mov
cmc
add
shrb
lock
pusha
add
add
pop
and
mov
js
pop
mov
int
mov
mov
pop
and
mov
fldenv
add
int3
outsl
sbb
mov
add
and
mul
pushl
notb
inc
add
add
imul
add
and
add
add
dec
in
adc
out
pop
ja
mov
lret
push
xor
lock
sbb
xchg
mov
add
pop
sbb
xor
mov
lret
inc
pusha
add
adc
jno
arpl
xchg
ds
rclb
or
mov
cltd
mov
add
adc
adc
nop
cmp
xchg
mov
sub
dec
ja
or
add
add
out
out
ss
add
add
lret
nop
arpl
sti
dec
ss
sahf
sub
add
add
cmp
loop
hlt
ret
jno
add
add
aad
stc
mov
push
leave
in
jp
fcomps
pusha
add
cmpsl
sarb
popa
cs
push
dec
xchg
sbb
icebp
imul
loopne
lds
adc
data16
popf
mov
cltd
pop
and
add
push
jns
mov
mov
adc
add
add
xor
xchg
dec
inc
push
mov
add
repnz
jno
add
add
and
mov
xchg
js
shr
cmp
add
push
sbb
repz
add
dec
xor
movsb
imul
out
popa
rorl
add
out
jb
ja
popf
add
sbb
xor
adc
cmpsl
mov
mov
cmp
pushf
decb
mov
jns
clc
cltd
sub
push
psrld
push
and
add
add
popf
xor
aaa
ja
cmpl
mov
jmp
dec
add
add
dec
aaa
and
xchg
sub
mov
rolb
add
push
pop
xchg
aam
mov
add
add
add
jge
dec
add
add
jmp
clc
mov
xchg
outsb
push
cmp
cmp
add
add
add
sbb
add
pop
addr16
bound
add
add
je
test
rcrb
stos
subl
sbbl
dec
add
add
and
popa
hlt
add
add
add
mov
sbb
adcl
mov
fwait
data16
rcrl
add
xchg
push
iret
mov
mov
sub
repz
sub
add
add
add
mov
jae
pop
bound
clc
icebp
pop
inc
ss
xchg
xor
sbb
loop
push
mov
lds
push
lret
sub
add
add
add
xor
ret
jns
fwait
pusha
add
add
xlat
sarb
cltd
lea
jecxz
inc
in
pushf
insl
or
add
add
add
mov
cmp
jbe
add
add
inc
add
add
lds
gs
cmp
in
add
add
cmp
out
push
and
mov
imul
push
mov
jge
pop
and
mov
mull
lods
or
xchg
cmp
mov
das
jmp
jge
popf
mov
out
pop
js,pn
cltd
adc
push
out
mov
or
mov
pop
aad
stos
lret
dec
add
add
push
stc
adc
add
add
add
xchg
mov
add
add
xorb
jb
inc
mov
outsb
push
cmp
stos
push
fsubs
jns
add
add
stos
sbb
lods
aas
bnd
lcall
jg
pop
push
pop
aas
in
xchg
jns
cmp
push
aaa
pop
dec
cmpsl
int3
mov
lret
mov
jnp
sbb
sub
add
add
std
add
add
add
dec
loopne
lock
add
mov
mov
add
add
push
in
icebp
gs
lods
jle
jns
push
enter
add
mov
lahf
pop
mov
jne
add
add
mov
add
fwait
lcall
dec
inc
add
add
call
lock
cmp
rol
cltd
push
cld
add
sahf
mov
add
add
pop
aaa
inc
add
add
icebp
test
loopne
push
cwtl
adc
adc
add
xor
xchg
cltd
fdiv
adc
push
in
xchg
daa
push
mov
xchg
pop
js
aam
cmp
xchg
movsb
push
add
add
add
sub
mov
mov
pop
sub
cmp
rcr
lea
add
adc
inc
and
add
add
mov
jmp
jo
fistpll
add
add
in
pop
sbb
sti
xor
fsts
testb
jae
mov
add
stc
inc
ljmp
add
mov
imul
adc
pop
js
and
add
add
jo
test
cli
mov
add
jo
outsb
repnz
xor
inc
and
rclb
push
cmpsl
mov
fnstenv
js
nop
jo
std
cmpsb
out
adc
imul
add
and
add
add
in
sahf
add
mov
add
mov
rcr
mov
push
cmp
inc
add
add
sub
add
add
pop
outsl
std
push
sahf
xor
add
mov
aas
jns
add
add
inc
push
arpl
add
sub
cmp
cmpsl
fdivs
dec
subb
scas
jbe
adc
movsb
das
nop
enter
js
cltd
scas
daa
daa
into
pop
mov
xchg
dec
addb
add
add
adc
xchg
or
mov
jnp
clc
bound
sbb
add
pop
rcrl
ss
mov
add
add
add
mov
push
inc
add
mov
mov
add
mov
mov
xor
jle
mov
add
add
add
adc
jns
test
rclb
push
cltd
mov
pop
inc
jp
pop
in
add
or
add
add
mov
jge
mov
cld
push
popa
popa
int3
es
add
add
add
or
mov
push
aam
rcll
fistpl
dec
stos
sbb
add
and
dec
push
sub
clc
dec
jg
xchg
sub
in
nop
mov
add
mov
loope
comiss
dec
push
orl
aad
out
push
dec
push
jb
or
mov
shll
cmp
aaa
fnstenv
adc
scas
push
ret
jg
and
dec
jb
nop
sub
jnp
mov
dec
cli
stos
mov
inc
mov
add
add
push
pop
jle
or
add
add
ss
mov
jmp
cwtl
ds
add
jne
outsb
adc
test
xor
xchg
or
mov
je
or
add
add
fwait
xor
and
and
fistl
ror
mov
mov
negl
inc
add
add
push
faddp
outsb
sub
dec
pop
call
add
xchg
sbb
xlat
push
sti
mov
ljmp
int
inc
test
inc
add
jns
cmp
xor
dec
sub
lea
push
cmp
mov
push
xorb
inc
add
add
cmp
ss
mov
add
add
add
insl
and
add
add
add
add
add
add
dec
xchg
nop
sub
mov
aaa
pop
outsb
push
lcall
add
or
push
mov
cmp
jno
dec
mov
add
add
xchg
mov
mov
add
add
and
add
add
test
add
mov
xchg
ds
addb
add
ja
add
adc
or
add
int3
pusha
add
add
cmp
pop
lock
pop
add
das
dec
pop
jnp
mov
lds
ljmp
inc
es
rclb
mov
loopne
out
push
mov
cmp
or
add
add
mov
lret
xor
mov
add
aad
xlat
int
xor
add
add
sub
jg
xchg
pop
pop
cmp
mov
add
add
inc
jo
add
adc
pop
inc
add
add
add
pushf
filds
in
and
ret
imul
add
add
mov
add
leave
je
push
sahf
mov
sbb
cmpsl
in
hlt
mov
test
aaa
adc
hlt
popf
cmc
imul
mov
add
add
mov
mov
gs
mov
ret
mov
dec
xchg
scas
jae
push
add
jmp
gs
jecxz
jecxz
pusha
add
add
test
add
sbb
jmp
add
jg
xor
imul
scas
es
push
lret
mov
or
add
add
test
jnp
add
sti
mov
or
add
add
adc
sub
mov
into
gs
xchg
stos
pop
jmp
sbb
add
sub
mov
or
lea
add
mov
ja
sbb
add
das
sbb
outsb
mov
leave
sbb
popa
ret
and
jp
in
cmp
imul
sub
add
push
mov
sub
cmp
jne
lea
push
push
mov
push
call
or
mov
shr
shr
mov
add
push
push
push
push
push
call
leave
ret
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
not
inc
sub
mov
je
push
pop
add
lea
clc
jmp
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
push
cld
call
test
jne
push
bnd
ss
sbb
mov
adc
mov
add
cmp
mov
xor
sbb
inc
mov
icebp
addr16
add
mov
push
insl
outsl
sbb
cmpb
out
loope
pushf
movsb
dec
add
add
cld
daa
es
jno
sti
test
imul
add
les
imul
sub
or
in
fadds
xor
loope
daa
cmpsl
xchg
aad
stos
pop
push
fcomp
out
mov
es
in
jb
xchg
sub
inc
cmpsb
fwait
push
or
dec
dec
add
add
insl
push
cli
mov
cmpsb
jle,pt
fisubl
add
js
mov
mov
pop
cmpl
cmp
and
imul
stc
daa
mov
lret
test
xchg
inc
std
clc
xchg
lods
lahf
int3
sub
add
add
or
add
filds
cli
insb
add
add
adc
scas
lods
xor
xchg
add
mov
and
sbb
mov
or
mov
push
jno
cmp
test
jmp
add
add
mov
aad
mov
dec
xor
cmpsl
cmp
mov
aaa
push
dec
xchg
mov
add
ror
ret
jl
insb
add
adc
xchg
inc
or
adcb
lret
ds
repz
notb
pop
push
lds
repz
cmp
arpl
enter
sbb
add
add
mov
push
and
cmpsb
stc
clc
imul
lahf
cmp
daa
sahf
das
mov
mov
nop
outsl
cmpsb
mov
shl
add
mov
add
add
ret
test
mov
pop
es
sbb
push
lds
testl
add
add
inc
adc
push
sbb
add
or
inc
hlt
lock
jle
and
sbbl
incl
xlat
mov
lahf
xchg
andb
mov
add
inc
ljmp
bound
cli
and
add
add
dec
add
jne
add
mov
sti
out
xchg
gs
or
add
add
mov
add
add
stos
inc
loope
jmp
in
stos
pop
scas
nop
mov
jnp
and
mov
add
lret
test
push
iret
fwait
in
jb
in
inc
aam
push
fisttps
leave
inc
xorb
sarb
es
popa
pop
out
mov
adc
mov
add
movsl
xchg
push
les
jl
sub
and
hlt
and
mov
or
add
add
jle
mov
dec
add
add
push
cwtl
pop
xor
add
ret
dec
es
dec
cs
pusha
add
add
sub
mov
lods
mov
add
push
stos
push
rcrb
inc
pop
rcrb
add
add
add
xchg
gs
addr16
jl
add
add
insb
add
inc
jmp
outsl
popf
aad
xor
sub
lods
ror
mov
sub
loopne
popa
dec
add
fmuls
add
push
negb
lahf
jbe
jo
push
jl
or
js
shll
mov
pop
adcl
mov
add
nop
mov
lcall
cmp
test
pop
or
add
add
sbb
push
ret
hlt
sbbb
mov
mov
and
add
add
loopne
push
into
jecxz
repnz
andl
test
add
mov
mov
add
je
jle
sti
sbb
add
in
int
psubq
les
mov
add
insl
dec
add
add
movsb
sbb
loope
sbb
ljmp
and
mov
clc
add
mov
mov
ss
dec
sub
adcl
cli
cli
push
xchg
cmp
add
outsb
dec
add
add
roll
inc
notb
mov
adc
in
adc
jecxz
mov
inc
pop
test
dec
sarl
push
xchg
mov
shl
fildll
add
and
mov
scas
or
add
add
mov
or
add
sub
mov
les
jp
cmovp
mov
jle
bound
lock
add
add
outsl
dec
add
sub
mov
jmp
xchg
pop
in
cmc
sahf
xor
sbb
adcb
add
add
out
xchg
in
roll
add
add
cltd
fists
add
and
mov
pop
pop
sti
push
stc
leave
es
adc
and
mov
arpl
mov
add
sub
xor
add
add
add
out
sub
sbbl
dec
inc
std
push
scas
leave
push
das
outsl
mov
mov
adc
add
add
ja
fidivl
dec
icebp
mov
sub
mov
mov
mov
sarb
mov
test
call
nop
push
fcmovb
ds
loopne
in
push
jnp
cmpsl
dec
mov
dec
cmpsb
push
sarb
stc
dec
add
add
push
xchg
lret
scas
inc
and
jo
in
pop
jge
push
pop
push
arpl
jae
xchg
test
inc
leave
jge
fstps
int3
imul
addr16
sbb
push
jae
sbbb
mov
shr
sbbl
add
xor
jnp
rcll
add
add
jbe
sahf
lcall
sbb
and
add
add
xchg
aam
add
add
jnp
add
sbb
clc
inc
insb
add
add
mov
clc
aas
inc
sbb
mov
inc
sub
add
add
mov
loope
popf
xchg
xor
int3
push
xor
adc
add
add
add
xlat
les
test
jge
mov
add
aas
jae
sti
mov
add
add
add
inc
or
add
add
cld
inc
add
shl
pop
mov
cmc
les
jo
mov
aas
dec
ret
inc
ret
adc
dec
push
xlat
punpckhbw
add
add
lods
nop
cmp
mov
out
push
ja
call
fwait
decl
in
inc
and
repz
dec
loopne
xchg
xor
std
leave
insb
add
adc
jmp
push
int3
xchg
popf
lret
add
mov
lret
mov
inc
repz
add
add
cld
jnp
pop
push
fsubs
add
lcall
ret
sbb
inc
mov
or
testl
fldt
lret
insb
add
mov
mov
shll
test
insb
add
mov
fsubl
addr16
add
mov
aas
outsb
hlt
xchg
mov
add
add
add
ret
xor
ja
mov
test
xchg
int
das
sub
out
xchg
loop
cmp
add
js
lret
jnp
cwtl
imul
js
add
xor
pop
loopne
push
loopne
inc
popa
pop
loop
xor
pop
inc
add
add
xor
lahf
fildl
adc
and
pop
mov
add
int
cs
jns
daa
test
shrb
add
add
inc
sbb
add
add
ds
dec
adc
fcoml
pop
xor
pop
loope
adc
fadds
xor
cmpsl
mov
pushf
in
stos
dec
xlat
add
jns
outsb
inc
add
add
add
add
in
lods
jge
cmpsb
test
xchg
xchg
dec
mov
push
ret
fcmovu
insl
sbb
icebp
lods
cmp
jmp
in
movsl
shlb
add
add
sbb
dec
aaa
jb
orl
push
xor
aaa
dec
popa
cmc
aas
cmp
cmp
pop
outsl
dec
and
add
add
orl
mov
add
add
mov
jmp
jo
stc
lock
pop
cmp
mov
xchg
aas
out
sahf
stc
xor
div
adc
mov
and
mov
gs
cmp
outsb
outsb
push
add
push
inc
add
cmp
add
add
xchg
sar
cmp
loope
cmpsl
aad
jmp
lods
mov
pop
mov
mov
int
add
cltd
mov
pop
mov
popf
xorl
leave
sub
addr16
shrl
fidivrs
loop
add
add
add
pop
dec
inc
mov
mov
aas
flds
iret
dec
dec
jmp
nop
push
or
stos
xchg
mov
cmp
jecxz
add
xor
inc
and
adc
popa
add
add
fildll
lret
dec
loop
add
add
ret
add
dec
add
add
push
repnz
mov
add
add
mov
add
add
xor
out
pushf
push
out
add
add
sub
mov
adc
xchg
aas
sbb
sbb
add
enter
mov
xlat
test
incb
pop
pop
jb
jp
lea
inc
dec
inc
pushf
or
add
add
mov
ret
pop
nop
sub
repnz
daa
sbb
xchg
dec
sub
jo
xchg
mov
imul
pushf
lods
sbb
pushf
out
nop
jp
ret
aam
cwtl
ficoms
out
dec
hlt
dec
add
add
add
add
scas
add
loope
dec
jno
and
repz
xor
cmp
in
arpl
add
or
add
add
cli
sub
add
add
shrb
xchg
jae
mov
sbb
jl
jae
or
mov
ljmp
lret
pop
add
out
jl
stc
mov
push
lea
add
into
jbe
out
adc
add
fistps
sub
push
push
in
jo
jno
push
cs
mov
xor
add
add
int
adc
jmp
sub
mov
mov
xchg
mov
mov
inc
add
cwtl
mov
lahf
imul
lock
nop
cmpsl
je
into
outsb
sub
jl
movsb
lods
sub
add
add
outsb
jmp
gs
and
jo
sub
add
mov
mov
add
add
mov
scas
aad
loope
fsubr
ss
cmp
shlb
pushf
loopne
cwtl
sarb
repz
into
jmp
cwtl
mov
mov
mov
or
mov
xor
stc
adc
das
aas
or
pop
lods
into
stos
subl
pop
mov
out
rcl
mov
add
mov
add
ret
andb
xchg
ja
or
mov
icebp
sbb
testl
and
mov
mov
int
jg
pop
or
add
aaa
push
mov
hlt
or
call
aaa
mov
add
add
add
inc
in
int
add
mov
sbb
add
cmp
add
insl
and
xor
sub
out
xchg
mov
add
add
inc
xchg
mov
rclb
sahf
imul
lods
xor
gs
push
insb
add
add
sarl
fwait
jnp
pushf
push
push
jg
movsl
lahf
or
add
sbbb
add
add
imul
add
cmp
mov
popf
push
bound
add
add
nop
hlt
mov
or
ljmp
std
addl
mov
data16
mov
int3
les
add
ds
aad
add
add
mov
jl
lods
ret
xor
dec
adc
icebp
ljmp
ds
sub
push
in
inc
xchg
push
test
add
pusha
add
pop
aam
and
sub
stc
mov
add
add
jle
ficoms
in
sub
add
add
test
bound
adc
fucomi
sub
mov
insl
rcl
sub
add
add
mov
pop
sbb
leave
cmp
in
fsincos
xchg
inc
inc
add
mov
scas
mov
mov
add
outsb
add
mov
daa
lahf
shlb
mov
add
add
inc
cmp
xchg
pop
pop
xor
out
push
push
fisttpl
and
loope,pt
push
xchg
in
rcl
mov
add
jle
stc
rclb
xorb
xchg
sub
add
mov
std
push
cmp
and
add
add
add
outsl
repz
mov
add
mov
fstl
add
loop
dec
xchg
jae
sbb
sbb
adc
dec
inc
aaa
movsl
les
inc
add
sti
xchg
ja
add
add
add
mov
inc
add
add
aas
insl
mov
add
in
je
push
adc
sar
push
pop
inc
das
jmp
pop
pop
pop
sbb
add
fisttpl
xlat
dec
add
add
ja
jmp
outsb
pop
pushf
or
xor
scas
mov
add
add
mov
cmp
rorl
in
movsl
rol
lods
jmp
or
add
add
add
cwtl
sbb
daa
cmpb
popl
test
mov
push
sbb
add
jg
mov
enter
std
jbe
das
jl
add
jo
pop
mov
add
push
push
mov
fwait
imul
lods
insl
stos
cmp
dec
add
loope
test
rol
sbb
mov
fstps
repz
pop
sub
add
and
mov
inc
add
add
mov
cmp
and
add
sub
sti
xor
add
int3
lock
mov
rcrb
jbe
push
dec
mov
mov
xor
xor
jae
add
mov
stc
push
nop
nop
xor
sub
mov
outsb
hlt
pop
clc
cmpsl
inc
inc
pop
scas
sbb
dec
scas
sti
dec
add
addb
add
cmp
add
add
rcll
push
subb
mov
add
cmpsl
outsw
popf
insb
add
add
pop
std
fnsave
lcall
add
sbb
aam
add
add
imull
push
clc
repnz
nop
nop
jae
add
add
add
test
test
rcll
mov
leave
nop
jmp
in
add
dec
data16
sub
leave
gs
clc
repnz
nop
nop
jae
testl
pop
adc
add
xchg
lods
inc
cmp
sbb
clc
repnz
nop
nop
jae
movsl
add
hlt
or
aad
call
inc
add
add
sub
pop
add
dec
xchg
push
mov
xchg
ret
add
adc
jno
add
add
lcall
repnz
nop
nop
jae
add
add
hlt
or
push
clc
repnz
nop
nop
jae
or
mov
cltd
add
jl
add
add
mov
add
add
nop
push
mov
leave
nop
jmp
dec
hlt
pop
add
popa
nop
push
mov
leave
nop
jmp
add
enter
xchg
and
mov
xchg
ret
xor
add
add
loopne
xor
rolb
pop
je
clc
repnz
nop
nop
jae
int3
add
rcrl
rorb
add
nop
push
mov
leave
nop
jmp
add
add
mov
pop
mov
clc
repnz
nop
nop
jae
add
xchg
mov
mov
nop
push
mov
leave
nop
jmp
add
test
dec
in
orb
add
add
mov
clc
repnz
nop
nop
jae
add
inc
add
add
sub
add
sub
clc
repnz
nop
nop
jae
movsl
pop
popa
test
pop
xchg
push
mov
insb
add
cmp
add
add
xchg
mov
mulb
inc
loopne
repnz
nop
nop
jae
pop
jno
add
add
fwait
clc
repnz
nop
nop
jae
mov
add
add
add
mull
mov
sar
repnz
nop
nop
jae
add
pop
add
dec
pop
add
jp
fwait
nop
push
mov
leave
nop
jmp
loopne
add
add
pop
mov
clc
repnz
nop
nop
jae
add
xchg
add
add
add
repnz
nop
nop
jae
repz
add
sub
add
mov
rdpmc
rclb
jbe
add
rorb
add
add
jb
into
add
clc
repnz
nop
nop
jae
xchg
add
imul
add
roll
mov
leave
nop
jmp
sub
es
xchg
sbb
ret
push
mov
leave
nop
jmp
add
add
add
pop
cld
xchg
jmp
add
repnz
nop
nop
jae
sub
jb
dec
test
jae
clc
repnz
nop
nop
jae
pop
adc
movsl
add
or
add
out
fistpl
push
mov
xchg
ret
dec
add
rolb
mov
add
mov
push
mov
xchg
ret
xchg
roll
add
add
movzwl
clc
repnz
nop
nop
jae
pop
add
inc
and
add
jp,pn
lea
clc
repnz
nop
nop
jae
add
add
add
test
pop
push
mov
xchg
ret
xchg
dec
add
add
add
add
stos
xlat
jne
nop
push
mov
leave
nop
jmp
add
add
and
jle
mov
clc
repnz
nop
nop
jae
xchg
jno
add
pop
in
hlt
mov
repnz
nop
nop
jae
add
add
sbb
add
mov
nop
push
mov
leave
nop
jmp
cmpb
xor
orb
imul
pushf
ja
add
inc
add
add
popa
lods
jl
shll
stos
clc
repnz
nop
nop
jae
add
add
dec
jns
repz
and
call
add
push
insl
add
clc
repnz
nop
nop
jae
mov
pop
jno
add
js
mov
clc
repnz
nop
nop
jae
pop
cltd
xchg
cld
add
add
sbb
rclb
push
inc
add
pop
add
pop
or
leave
pop
dec
add
sub
add
add
mov
nop
push
mov
leave
nop
jmp
mov
jns
in
dec
lea
push
mov
xchg
ret
adc
jno
lods
popa
xor
add
xchg
xchg
pop
push
mov
xchg
ret
add
add
or
mov
out
loopne
nop
push
mov
leave
nop
jmp
xchg
add
es
add
jns
mov
clc
repnz
nop
nop
jae
add
add
leave
hlt
add
nop
nop
jae
rolb
pop
add
add
add
push
inc
mov
clc
repnz
nop
nop
jae
hlt
add
xchg
out
pop
clc
repnz
nop
nop
jae
cltd
imull
add
enter
add
inc
aaa
mov
clc
repnz
nop
nop
jae
add
adc
pop
mov
clc
repnz
nop
nop
jae
add
add
dec
popa
add
jno
add
pop
ret
clc
repnz
nop
nop
jae
add
and
stc
xor
jno
lods
into
jl
mov
push
mov
xchg
ret
add
pop
add
add
push
clc
nop
push
mov
leave
nop
jmp
add
add
fldl
add
pop
enter
icebp
call
clc
repnz
nop
nop
jae
into
pop
pop
ror
add
pop
or
repnz
nop
nop
jae
add
add
jns
add
adc
pop
push
inc
add
into
add
sub
add
add
test
push
mov
xchg
ret
leavew
add
rolb
add
fistpl
push
mov
xchg
ret
lods
xor
pop
add
data16
add
jmp
pusha
sldt
es
add
int3
movsl
jb
mov
inc
dec
adc
xchg
inc
nop
push
mov
leave
nop
jmp
add
lods
pop
add
add
xor
nop
push
mov
leave
nop
jmp
xchg
pop
adc
ror
add
test
data16
lahf
mov
clc
repnz
nop
nop
jae
add
jb
loopne
add
imul
mov
add
add
js
mov
mov
xchg
ret
pop
lods
add
add
enter
decl
push
mov
xchg
ret
add
adc
dec
add
data16
adc
cs
nop
push
mov
leave
nop
jmp
add
add
fldl
add
cld
add
push
mov
leave
nop
jmp
sub
mov
fldl
popa
pop
and
nop
push
mov
leave
nop
jmp
add
add
xlat
inc
mov
call
push
mov
xchg
ret
pop
mov
jnp
sbbb
dec
cs
push
clc
repnz
nop
nop
jae
jno
loopne
into
pop
add
sbb
pop
clc
repnz
nop
nop
jae
and
add
movsl
pop
hlt
jnp
add
nop
push
mov
leave
nop
jmp
pop
leave
mov
imul
push
scas
push
ror
push
mov
xchg
ret
adc
adc
inc
xor
es
add
daa
mov
nop
push
mov
leave
nop
jmp
add
dec
adc
sub
push
mov
leave
nop
jmp
add
add
pop
add
add
inc
pop
push
add
add
add
add
cmpsb
rcrb
mov
clc
repnz
nop
nop
jae
pop
add
add
add
add
fistl
repnz
nop
nop
jae
add
xchg
in
jnp
pop
cmp
clc
push
mov
xchg
ret
xor
sub
pop
add
add
xor
clc
repnz
nop
nop
jae
inc
pop
jb
jb
sbb
push
mov
leave
nop
jmp
adc
pop
leave
data16
lods
pop
jno
or
push
mov
dec
add
aas
int
add
shll
mov
add
add
pop
add
jnp
leave
push
mov
xchg
ret
add
hlt
es
adc
add
clc
repnz
nop
nop
jae
jns
add
add
add
push
loopne
repnz
nop
nop
jae
mov
add
add
add
xlat
add
inc
mov
clc
repnz
nop
nop
jae
mov
add
add
sub
fistpl
push
mov
xchg
ret
es
add
add
sbb
fwait
push
mov
xchg
ret
test
repz
jnp
add
cld
insb
add
nop
push
mov
leave
nop
jmp
hlt
add
pop
add
add
repz
push
inc
sbb
repnz
nop
nop
jae
inc
jno
enter
jns
and
jne
push
mov
xchg
ret
xor
add
shrl
shl
dec
xchg
push
clc
repnz
nop
nop
jae
add
pop
or
add
add
ja,pn
sbb
push
mov
xchg
ret
add
add
cld
xchg
xchg
add
mov
nop
jae
roll
cld
imul
add
sub
add
nop
jmp
mov
add
lods
inc
dec
push
mov
xchg
ret
add
or
dec
add
adc
add
jno
ja
clc
repnz
nop
nop
jae
add
or
add
repnz
nop
nop
jae
add
mov
jns
mov
test
repnz
nop
nop
jae
add
pop
add
sbbb
in
dec
xchg
stos
imul
imul
pop
add
insb
str
push
inc
mov
clc
repnz
nop
nop
jae
add
add
pop
enter
mov
std
clc
repnz
nop
nop
jae
or
add
add
add
or
mov
repz
repnz
nop
nop
jae
adcb
into
add
add
dec
and
mov
add
add
cld
nop
nop
jae
add
add
jno
add
pop
pop
test
arpl
repnz
nop
nop
jae
add
add
sub
sub
movb
clc
repnz
nop
nop
jae
mov
add
add
add
gs
clc
repnz
nop
nop
jae
shl
add
adc
add
rep
clc
repnz
nop
nop
jae
add
enter
add
stc
add
sahf
rep
clc
repnz
nop
nop
jae
loopne
add
add
pop
add
add
addl
xchg
ret
add
add
sub
add
test
clc
repnz
nop
nop
jae
mov
xchg
push
xor
push
mov
xchg
ret
add
into
add
add
add
xor
dec
sub
add
repnz
nop
nop
jae
add
adc
xchg
dec
sub
bound
add
or
add
jns
jno
dec
leave
data16
sbb
int3
orl
cmp
ret
leave
mov
jns
jb
pop
test
dec
add
add
add
cmp
cld
nop
nop
jae
pop
add
or
pop
pop
mov
pop
push
add
add
clc
repnz
nop
nop
jae
add
rol
cmpb
mov
leave
nop
jmp
mov
enter
fnsave
icebp
inc
dec
xchg
nop
jmp
add
int3
test
nop
push
mov
leave
nop
jmp
pop
xchg
xchg
pop
adc
add
xchg
add
add
cmpsb
pop
inc
mov
push
mov
xchg
ret
add
leave
mov
test
in
fsts
push
mov
leave
nop
jmp
add
jnp
and
add
add
repnz
nop
nop
jae
add
cltd
in
pop
pop
lods
or
pop
add
repnz
nop
nop
jae
add
add
cmp
mov
test
clc
repnz
nop
nop
jae
add
add
xlat
push
mov
clc
repnz
nop
nop
jae
or
or
add
pop
add
add
stos
mov
mov
clc
repnz
nop
nop
jae
and
add
loope
clc
repnz
nop
nop
jae
add
jno
repz
adc
imul
jae
add
nop
push
mov
leave
nop
jmp
add
enter
rdtsc
add
clc
repnz
nop
nop
jae
in
testl
add
fcompl
clc
repnz
nop
nop
jae
pop
enter
adc
test
fwait
push
mov
xchg
ret
fldl
add
add
add
add
lods
pop
push
pop
clc
repnz
nop
nop
jae
sbb
add
add
add
pop
shr
nop
push
mov
leave
nop
jmp
add
xchg
add
dec
add
add
ret
clc
repnz
nop
nop
jae
mov
cld
adc
adc
add
add
mov
clc
repnz
nop
nop
jae
pop
dec
adc
pop
lods
stc
sbb
jb
push
nop
push
mov
leave
nop
jmp
add
mov
int3
shlb
sub
clc
repnz
nop
nop
jae
add
mov
add
cld
pop
add
xlat
clc
fistl
repnz
nop
nop
jae
add
add
add
add
cld
add
cltd
repnz
ret
add
pop
add
mov
in
dec
sub
xchg
xchg
jnp
popa
popa
push
je
nop
push
mov
leave
nop
jmp
loopne
xchg
pop
add
or
jne
clc
repnz
nop
nop
jae
pop
pop
pop
add
fistpl
clc
repnz
nop
nop
jae
pop
into
add
and
sbb
nop
push
mov
leave
nop
jmp
add
xor
pop
add
mov
clc
repnz
nop
nop
jae
mov
add
cld
lods
add
add
sub
repnz
nop
nop
jae
or
add
sar
push
clc
repnz
nop
nop
jae
add
add
add
dec
add
pop
and
push
mov
leave
nop
jmp
add
add
sbb
inc
add
outsl
push
nop
push
mov
leave
nop
jmp
pop
xor
enter
into
into
pop
test
idivl
push
sub
nop
jmp
enter
into
pop
popa
add
add
loopne
adc
in
leave
nop
jmp
add
add
inc
loopne
add
shr
clc
repnz
nop
nop
jae
add
into
xchg
popa
add
imul
push
mov
leave
nop
jmp
add
add
flds
xor
xchg
ret
add
add
add
rolb
shlb
push
mov
xchg
ret
test
pop
add
cltd
loopne
push
into
and
mov
dec
and
push
mov
xchg
ret
add
dec
jns
add
cld
sub
cld
nop
nop
jae
adc
sub
jno
add
stc
xor
inc
pop
clc
repnz
nop
nop
jae
repz
add
jl
add
loopne
xorb
xor
cmp
ret
xchg
rolb
add
add
out
je
clc
repnz
nop
nop
jae
in
inc
pop
add
lods
dec
add
add
test
in
fs
cmp
mov
xor
add
add
push
jle
add
add
adc
add
adc
add
push
mov
nop
push
mov
leave
nop
jmp
add
add
xchg
dec
inc
add
mov
aaa
push
mov
xchg
ret
add
add
dec
add
sti
push
mov
sbb
add
add
jae
add
cmpsl
filds
je
pop
cmpsb
xchg
flds
push
jb
and
in
leave
nop
jmp
add
hlt
add
and
std
push
nop
push
mov
leave
nop
jmp
pop
xchg
cld
add
jb
mov
mov
xchg
ret
xchg
xchg
jb
add
into
cmpsl
shl
push
mov
xchg
ret
add
add
xchg
mov
leave
nop
jmp
notl
add
add
mov
leave
nop
jmp
dec
add
or
mov
stc
dec
ja
xchg
and
add
repnz
nop
nop
jae
add
mov
add
add
test
repnz
nop
nop
jae
add
add
add
shrb
push
mov
xchg
ret
jno
add
add
add
pop
mov
nop
push
mov
leave
nop
jmp
add
imul
add
popa
jmp
sbb
clc
repnz
nop
nop
jae
pop
dec
adc
add
in
add
mov
push
mov
xchg
ret
add
lods
xchg
popa
add
add
mov
clc
repnz
nop
nop
jae
pop
or
into
adc
add
add
dec
nop
push
mov
leave
nop
jmp
mov
add
or
or
movsl
inc
pop
push
push
mov
xchg
ret
xchg
cld
add
cltd
add
add
mov
inc
pop
cmp
movb
cld
nop
nop
jae
mov
jb
dec
add
add
push
outsb
inc
mov
clc
repnz
nop
nop
jae
dec
shlb
add
inc
pop
pop
or
mov
leave
nop
jmp
add
adc
add
mov
add
pop
cltd
pop
push
mov
xchg
ret
add
repz
jnp
adc
rcll
push
mov
leave
nop
jmp
sbb
or
add
testl
push
mov
leave
nop
jmp
add
testl
mov
mov
clc
repnz
nop
nop
jae
xchg
xor
add
or
mov
clc
repnz
nop
nop
jae
add
sub
jno
pop
add
push
push
mov
xchg
ret
cld
add
adc
into
pop
repz
adc
clc
repnz
nop
nop
jae
adc
xchg
adc
or
add
add
add
nop
push
mov
leave
nop
jmp
mov
add
adc
add
sbb
leave
jne
nop
push
mov
leave
nop
jmp
sbb
leave
add
aad
push
mov
xchg
ret
add
cld
int3
add
jl
jns
add
add
cmp
clc
repnz
nop
nop
jae
dec
in
add
jnp
rorb
nop
push
mov
leave
nop
jmp
add
pop
fstpl
push
clc
repnz
nop
nop
jae
add
add
add
add
adc
popf
pushl
push
mov
xchg
ret
add
add
add
cmpsb
icebp
mov
clc
repnz
nop
nop
jae
test
add
dec
and
cmp
test
add
push
mov
xchg
ret
add
sub
jns
leave
in
jl
in
xorl
clc
repnz
nop
nop
jae
sbb
add
add
clc
repnz
nop
nop
jae
popw
inc
and
add
or
clc
repnz
nop
nop
jae
add
sub
fcompl
movsb
rclb
jmp
add
dec
xorb
add
lods
add
and
add
add
xchg
aaa
mov
push
mov
xchg
ret
add
mov
data16
add
mov
add
pop
and
repnz
nop
nop
jae
sub
into
data16
pop
add
add
mov
leave
nop
jmp
adc
xlat
xchg
stc
adc
int3
add
mov
clc
repnz
nop
nop
jae
int3
cltd
pop
pop
popa
jno
jl
fwait
cmpl
nop
push
mov
leave
nop
jmp
add
test
add
jno
mov
repnz
nop
nop
jae
add
sub
add
dec
cmp
repnz
nop
nop
jae
add
cld
cltd
es
popa
jns
add
mov
leave
nop
jmp
add
mov
xchg
add
adc
xor
mov
xchg
ret
add
addb
add
add
add
add
rcrb
mov
add
repnz
nop
nop
jae
stc
rclb
cmp
push
mov
leave
nop
jmp
jns
cld
add
add
sbb
inc
cmpl
nop
push
mov
leave
nop
jmp
xchg
add
xchg
add
mov
repnz
nop
nop
jae
hlt
add
jb
sbb
ror
in
mov
clc
repnz
nop
nop
jae
loopne
add
add
nop
mov
clc
repnz
nop
nop
jae
hlt
add
add
jno
add
into
add
add
inc
in
call
clc
repnz
nop
nop
jae
pop
add
add
test
xchg
push
mov
xchg
ret
add
repz
stc
pop
add
add
sub
mov
cmp
cld
nop
nop
jae
mov
in
lods
hlt
pop
adc
pop
pop
push
mov
xchg
ret
add
enter
test
add
or
or
add
add
mov
clc
repnz
nop
nop
jae
jns
add
add
adc
fwait
jne
clc
repnz
nop
nop
jae
add
pop
or
add
xor
clc
repnz
nop
nop
jae
lods
adc
sub
mov
imul
pop
add
add
add
jnp
cld
add
or
jns
cld
stc
adc
hlt
ds
loop
clc
repnz
nop
nop
jae
add
add
les
add
repnz
nop
nop
jae
mov
or
int3
enter
lods
movswl
clc
repnz
nop
nop
jae
pop
jnp
xchg
hlt
mov
cld
nop
nop
jae
leave
data16
add
xchg
fld1
push
mov
xchg
ret
sbb
and
add
nop
nop
jae
add
add
xchg
movsl
mov
add
repz
push
clc
repnz
nop
nop
jae
jb
data16
rcrb
pop
add
cmp
repnz
nop
nop
jae
xchg
cld
and
xchg
mov
xchg
ret
add
leave
add
loopne
add
add
nop
sub
add
add
andl
mov
leave
nop
jmp
dec
add
add
add
mov
xchg
ret
add
pop
xchg
jns
lods
adc
cs
add
push
mov
xchg
ret
add
xchg
add
rcll
sub
add
nop
push
mov
leave
nop
jmp
cltd
add
dec
sbb
add
add
repnz
nop
nop
jae
sub
dec
add
add
cmp
repnz
nop
nop
jae
jb
test
or
add
dec
insb
add
add
mov
mov
xchg
ret
pop
pop
jns
add
enter
xchg
xchg
clc
repnz
nop
nop
jae
jb
inc
add
adc
loopne
add
add
mov
add
add
add
rcll
cld
inc
aad
jmp
jp
nop
push
mov
leave
nop
jmp
add
leave
test
sub
push
mov
xchg
ret
pop
add
sub
xchg
or
cld
leave
add
cld
nop
nop
jae
add
add
jl
add
add
into
negb
mov
clc
repnz
nop
nop
jae
add
add
pop
into
add
testl
add
add
mov
movswl
clc
repnz
nop
nop
jae
add
jns
adc
add
pop
pop
fwait
push
mov
xchg
ret
add
cltd
adc
xlat
mov
imul
or
mov
xchg
ret
add
xchg
roll
add
popa
add
movsl
push
push
mov
xchg
ret
pop
lods
cld
sarl
int3
add
add
dec
jae
movb
push
mov
leave
nop
jmp
add
xchg
add
enter
add
add
popl
add
repnz
nop
nop
jae
add
add
add
repnz
nop
nop
jae
add
add
add
lret
add
add
add
clc
repnz
nop
nop
jae
imul
cmp
push
mov
leave
nop
jmp
sbb
into
enter
mov
in
in
popl
rolb
add
cmpsb
movsb
es
adc
fnstcw
faddl
cmpsl
push
push
mov
xchg
ret
add
add
mov
jb
pop
add
movsb
pop
sbb
jge
clc
repnz
nop
nop
jae
xchg
add
add
add
xchg
loope
rclb
jmp
add
adc
jnp
add
add
clc
repnz
nop
nop
jae
add
sub
hlt
xchg
add
sbb
sub
ret
add
sub
and
add
cld
add
clc
repnz
nop
nop
jae
jnp
or
pop
es
sarw
repnz
nop
nop
jae
cld
pop
add
jns
jb
sbb
addr16
push
mov
xchg
ret
hlt
adc
or
add
mov
push
push
mov
xchg
ret
add
add
test
dec
movsl
mov
clc
repnz
nop
nop
jae
add
mov
add
or
dec
mov
clc
repnz
nop
nop
jae
add
testl
or
cld
nop
nop
jae
add
add
dec
pop
jl
add
adc
mov
nop
push
mov
leave
nop
jmp
add
add
popa
pop
inc
jnp
mov
adc
repnz
nop
nop
jae
add
rorl
fwait
mov
clc
repnz
nop
nop
jae
sbbb
adc
pop
sub
popl
clc
repnz
nop
nop
jae
adc
add
inc
add
add
outsl
jmp
add
fldl
popa
add
jnp
into
add
add
add
add
jl
push
push
mov
xchg
ret
xchg
add
add
add
loopne
add
bound
push
mov
leave
nop
jmp
xchg
into
add
xor
add
mov
call
nop
jmp
pop
add
stc
or
popa
clc
or
mov
adc
repnz
nop
nop
jae
adc
add
add
mov
cmp
push
mov
leave
nop
jmp
adc
pop
movsl
add
add
rcrb
inc
sbb
outsb
inc
add
add
add
inc
add
lods
sub
mov
les
mov
xchg
ret
add
pop
adc
pop
add
jmp
stc
add
leave
mov
pop
hlt
adc
enter
add
cld
nop
nop
jae
add
sub
add
into
add
pop
or
enter
repnz
nop
nop
jae
rcrl
pop
int3
add
add
testl
mov
xchg
ret
pop
adc
xlat
pop
in
add
or
nop
nop
jae
pop
pop
add
and
pop
rolb
add
add
add
xor
clc
repnz
nop
nop
jae
add
test
xchg
add
add
clc
repnz
nop
nop
jae
idiv
lods
enter
add
pop
push
push
lea
nop
push
mov
leave
nop
jmp
add
adc
test
mov
add
push
clc
repnz
nop
nop
jae
pop
dec
add
pop
dec
rcll
add
push
mov
xchg
ret
pop
stc
jb
pop
pop
lods
adc
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
fwait
push
mov
xchg
ret
add
add
xchg
add
add
mov
xchg
ret
add
adc
add
adc
jnp
das
push
clc
repnz
nop
nop
jae
xchg
add
stc
add
clc
repnz
nop
nop
jae
add
loopne
pop
add
xor
jae
or
cld
nop
nop
jae
pop
pop
rolb
mov
adc
test
add
clc
repnz
nop
nop
jae
add
sub
mov
call
in
leave
nop
jmp
adc
add
pop
pop
pop
add
add
mov
nop
push
mov
leave
nop
jmp
pop
add
fstl
adc
jl
in
jns
nop
push
mov
leave
nop
jmp
mov
add
xchg
call
clc
repnz
nop
nop
jae
add
jns
add
adc
push
mov
cmp
fiadds
xchg
clc
and
dec
add
daa
sti
insb
add
push
mov
xchg
ret
add
jl
add
add
mul
pop
xchg
pop
inc
fistpl
clc
repnz
nop
nop
jae
add
movsl
add
lods
rep
xchg
int3
xor
nop
jae
pop
add
or
add
pop
popa
add
sub
mov
lret
mov
leave
nop
jmp
hlt
add
leave
dec
add
sub
sbb
push
clc
repnz
nop
nop
jae
add
movsl
pop
xor
adc
add
clc
repnz
nop
nop
jae
adc
sbb
clc
repnz
nop
nop
jae
add
adc
jns
je
clc
repnz
nop
nop
jae
add
add
add
add
sub
clc
repnz
nop
nop
jae
pop
sub
mov
pop
add
add
fwait
nop
push
mov
leave
nop
jmp
pop
adc
stc
cltd
into
add
cltd
add
add
clc
repnz
nop
nop
jae
adc
pop
add
cltd
repz
add
jecxz
clc
repnz
nop
nop
jae
add
pop
pop
add
adc
jecxz
inc
adc
mov
xchg
ret
add
testl
add
jnp
popa
lods
clc
repnz
nop
nop
jae
add
enter
enter
pop
sub
add
push
mov
leave
nop
jmp
add
add
pop
add
int3
mov
clc
repnz
nop
nop
jae
add
add
or
inc
and
repnz
nop
nop
jae
add
and
imul
add
mov
push
mov
leave
nop
jmp
add
roll
cld
add
pop
add
nop
nop
jae
add
dec
add
add
aas
push
nop
push
mov
leave
nop
jmp
add
inc
pop
xchg
xchg
pop
dec
add
mov
push
mov
leave
nop
jmp
pop
add
pop
add
jl
add
add
nop
push
mov
leave
nop
jmp
add
rolb
cld
add
data16
or
cld
nop
nop
jae
or
adc
pop
mov
xor
nop
jae
jnp
add
int3
xor
or
add
and
push
mov
leave
nop
jmp
pop
cld
add
add
in
add
xchg
pfcmpge
nop
jae
mov
jl
add
jae
add
clc
repnz
nop
nop
jae
add
stc
add
pop
test
ja
nop
push
mov
leave
nop
jmp
jl
pop
or
and
add
xchg
jmp
repnz
nop
nop
jae
lods
pop
add
add
and
fnstsw
rcrb
push
push
mov
xchg
ret
dec
add
fldl
cld
shrl
mov
nop
nop
jae
xchg
pop
cld
add
add
add
add
xor
push
mov
xchg
ret
add
add
add
add
add
xchg
pushf
dec
add
add
out
push
mov
xchg
ret
dec
pop
test
add
xor
add
pop
jnp
lds
cld
nop
nop
jae
sub
cld
int3
add
jnp
shrl
repnz
nop
nop
jae
adc
add
lcall
clc
repnz
nop
nop
jae
pop
add
add
pop
imul
add
nop
jmp
xlat
dec
cld
add
add
sub
mov
dec
loope
inc
clc
repnz
nop
nop
jae
and
pop
cld
mov
add
lods
xor
push
mov
xchg
ret
add
add
add
or
mov
push
mov
xchg
ret
pop
popa
movsl
pop
add
sbb
mov
push
add
add
pop
or
add
add
jno
ret
call
clc
repnz
nop
nop
jae
add
add
enter
push
mov
add
test
add
icebp
add
add
mov
mov
mov
jp
jp
mov
jg
clc
repnz
nop
nop
jae
add
imul
cld
add
cmp
nop
push
mov
leave
nop
jmp
add
rcrl
or
loop
push
mov
xchg
ret
stc
xchg
dec
xchg
add
sub
cmp
nop
push
mov
leave
nop
jmp
add
leave
loopne
or
ret
push
mov
xchg
ret
stc
and
enter
pop
add
test
mov
xchg
ret
adc
mov
or
add
or
dec
push
and
stc
mov
cld
jno
add
add
pop
pop
cwtl
mov
add
hlt
add
lahf
add
add
icebp
add
aam
add
add
roll
cmp
xchg
cld
nop
nop
jae
imul
adc
add
test
cli
dec
inc
add
and
stc
frstor
test
idiv
clc
repnz
nop
nop
jae
add
cld
xor
add
push
clc
repnz
nop
nop
jae
add
jl
in
add
not
push
mov
xchg
ret
add
jno
addb
stc
aaa
mov
clc
repnz
nop
nop
jae
sub
add
push
adc
nop
nop
jae
add
adc
lods
mull
data16
add
nop
push
mov
leave
nop
jmp
dec
sub
pop
sbb
arpl
test
clc
repnz
nop
nop
jae
add
pop
add
add
sahf
dec
fcompl
cmpsb
mov
clc
repnz
nop
nop
jae
jnp
add
fldl
sub
es
cltd
dec
add
add
and
nop
nop
jae
mov
xchg
sub
adc
sarb
lea
clc
repnz
nop
nop
jae
lods
shlb
add
push
mov
fnstcw
cld
add
jns
popa
out
sub
jecxz
xchg
cmpsb
mov
in
lods
add
mov
add
clc
repnz
nop
nop
jae
adc
add
add
add
xorb
jb
add
add
add
jnp
testl
repnz
nop
nop
jae
add
in
add
add
data16
mov
push
mov
xchg
ret
mov
pop
add
enter
es
mov
clc
repnz
nop
nop
jae
addb
xchg
add
pop
add
push
sbb
mov
xchg
ret
adc
stc
add
adc
add
roll
repz
cld
nop
nop
jae
mov
inc
add
adc
lea
clc
repnz
nop
nop
jae
or
pop
add
adc
idiv
aaa
add
clc
repnz
nop
nop
jae
pop
add
rcrl
add
add
ja
inc
add
add
xor
add
add
add
dec
or
add
add
mov
leave
nop
jmp
pop
add
add
int3
cld
repz
add
push
mov
xchg
ret
movsl
xchg
or
enter
add
nop
push
mov
leave
nop
jmp
add
add
jns
xchg
add
add
xchg
push
clc
repnz
nop
nop
jae
adc
imul
outsb
data16
repnz
nop
nop
jae
dec
int3
hlt
add
cld
roll
roll
pop
push
mov
xchg
ret
add
adc
mov
pop
jl
jns
xor
clc
repnz
nop
nop
jae
or
add
fsubp
lcall
mov
xchg
ret
add
add
add
lds
add
nop
push
mov
leave
nop
jmp
mov
pop
pop
adc
nop
nop
jae
jns
add
es
add
add
mov
mov
leave
nop
jmp
mov
or
loopne
or
mov
test
clc
repnz
nop
nop
jae
cld
jb
leave
add
mov
xchg
ret
jno
lods
add
jns
add
mov
jb
mov
push
mov
xchg
ret
xchg
pop
add
jno
clc
repnz
nop
nop
jae
sub
jno
pop
pop
add
decl
mov
xchg
ret
add
loopne
adc
repz
mov
jp
inc
push
push
nop
push
mov
leave
nop
jmp
pop
add
add
test
pop
hlt
pop
cld
addb
add
jle
add
adc
xchg
testl
repnz
nop
nop
jae
add
jb
xchg
add
add
add
adc
jne
push
mov
xchg
ret
mov
cltd
loopne
mov
stc
push
clc
repnz
nop
nop
jae
add
sar
add
dec
adc
add
push
xor
mov
xchg
ret
dec
mov
add
adc
add
xlat
sub
add
add
add
repnz
nop
nop
jae
cld
jb
or
add
pop
ret
add
add
or
inc
add
add
imul
rolb
in
xor
clc
repnz
nop
nop
jae
adc
pop
add
stc
mov
push
push
mov
xchg
ret
add
testl
mov
and
push
mov
xchg
ret
add
mov
mov
dec
cmp
push
mov
leave
nop
jmp
movsl
or
cld
adc
and
inc
add
repnz
nop
nop
jae
and
add
pop
loopne
add
mov
repnz
nop
nop
jae
add
repz
inc
or
adc
add
sub
sbbl
add
add
add
repz
mov
les
call
clc
repnz
nop
nop
jae
fldl
in
dec
add
rcll
mov
xchg
ret
xor
add
xlat
add
add
add
fisubrl
push
push
mov
xchg
ret
add
sub
add
adc
ds
pop
clc
repnz
nop
nop
jae
or
add
imul
inc
out
mov
jne
clc
repnz
nop
nop
jae
add
cld
fldl
add
add
inc
clc
repnz
nop
nop
jae
pop
sub
movsl
dec
add
test
nop
push
mov
leave
nop
jmp
pop
add
int3
jl
lods
jl
pop
xor
repnz
nop
nop
jae
add
add
add
add
add
add
clc
repnz
nop
nop
jae
xlat
add
imul
xbegin
jae
add
popa
xor
add
add
cltd
fistpl
clc
repnz
nop
nop
jae
mov
or
pop
pop
push
dec
add
add
add
dec
mov
pusha
clc
repnz
nop
nop
jae
rorb
add
add
add
test
add
rorl
mov
xchg
ret
pop
add
dec
add
adc
popa
fists
in
sub
add
and
mov
add
add
add
add
inc
add
add
inc
add
outsl
mov
clc
repnz
nop
nop
jae
add
popa
add
add
add
clc
repnz
nop
nop
jae
lods
adc
add
mov
mov
in
leave
nop
jmp
add
add
add
cmp
nop
push
mov
leave
nop
jmp
add
leave
xchg
stc
add
fld1
clc
repnz
nop
nop
jae
adc
jns
add
add
test
add
repnz
nop
nop
jae
add
mov
popa
repz
lods
clc
repnz
nop
nop
jae
adc
add
add
add
andl
cld
nop
nop
jae
leave
xchg
loopne
add
add
add
cld
nop
nop
jae
rcrl
dec
addb
add
data16
or
add
add
clc
repnz
nop
nop
jae
add
jb
dec
add
mov
add
repnz
nop
nop
jae
add
es
mov
cmp
push
clc
repnz
nop
nop
jae
mov
mov
add
out
ret
clc
repnz
nop
nop
jae
add
adc
add
lods
add
add
cs
push
mov
xchg
ret
xchg
xchg
enter
lods
inc
xchg
pop
add
pop
push
mov
xchg
ret
jb
add
pop
mov
add
mov
ljmp
inc
add
mov
data16
xchg
push
mov
xchg
ret
movsl
pop
pop
sub
pop
jno
xor
add
test
popa
pop
clc
repnz
nop
nop
jae
dec
adc
loopne
pop
add
add
xchg
mov
push
mov
xchg
ret
add
xchg
pop
add
pop
ja
roll
mov
xchg
ret
add
add
add
add
rclb
nop
jmp
lods
add
inc
add
data16
shl
jp
leave
test
nop
push
mov
leave
nop
jmp
add
add
add
and
fidivrs
and
nop
push
mov
leave
nop
jmp
imul
add
ss
push
push
mov
xchg
ret
add
add
add
add
xchg
sub
nop
push
mov
leave
nop
jmp
inc
add
sub
testl
push
push
push
mov
xchg
ret
add
dec
add
cld
jns
jno
pop
leave
add
add
and
mov
inc
xor
clc
repnz
nop
nop
jae
in
add
add
data16
imul
push
inc
add
movsl
add
test
pop
add
dec
add
jmp
add
pop
xlat
xor
add
add
add
add
add
add
loop
add
lock
add
add
adc
lods
test
add
add
loopne
add
add
add
mov
out
inc
add
test
add
xchg
or
movsl
enter
jmp
pop
add
add
sub
cld
cld
dec
leave
add
sub
stc
xchg
push
pop
mov
nop
push
mov
leave
nop
jmp
add
popa
xlat
xor
nop
push
mov
leave
nop
jmp
adc
add
pop
sbb
pop
dec
fld1
push
mov
xchg
ret
and
in
pop
adc
rolb
add
mov
nop
nop
jae
add
jnp
add
add
cld
xor
and
push
mov
xchg
ret
add
add
or
jne
clc
repnz
nop
nop
jae
addb
add
add
add
mov
mov
add
sbbb
add
or
add
add
jno
pop
add
shr
nop
push
mov
leave
nop
jmp
pop
add
add
and
add
add
mov
clc
repnz
nop
nop
jae
add
repz
hlt
add
jmp
xchg
add
hlt
add
add
add
add
imul
pusha
add
add
mov
add
clc
repnz
nop
nop
jae
popa
add
add
xchg
pop
in
fld1
nop
push
mov
leave
nop
jmp
xor
add
xchg
loopne
pop
xchg
push
push
mov
xchg
ret
negl
add
add
fldl
add
loop
pop
push
mov
xchg
ret
add
add
into
add
add
les
add
andl
in
leave
nop
jmp
adc
or
add
xchg
lock
repnz
nop
nop
jae
jnp
addb
sbb
mov
clc
repnz
nop
nop
jae
mov
add
sub
stos
clc
repnz
nop
nop
jae
sbb
pop
xchg
es
pop
sub
add
mov
sti
nop
push
mov
leave
nop
jmp
cltd
imul
add
add
mov
add
add
mov
incl
cld
add
xchg
mov
mov
rcrl
inc
add
negl
add
mov
es
dec
push
nop
push
mov
leave
nop
jmp
add
mov
loopne
add
or
push
mov
leave
nop
jmp
cld
xchg
add
add
add
cltd
loope
leave
clc
repnz
nop
nop
jae
add
jno
pop
pop
xlat
pop
jns
jl
pop
push
mov
xchg
ret
add
repz
jns
xchg
inc
mov
cmp
nop
nop
jae
roll
add
or
pop
jbe
es
div
nop
push
mov
leave
nop
jmp
jb
pop
pop
xchg
add
roll
add
push
or
repnz
nop
nop
jae
adc
imul
pop
jno
mov
push
mov
xchg
ret
jno
add
mov
inc
adc
pop
sbb
push
mov
xchg
ret
sub
cld
add
add
mov
jne
clc
repnz
nop
nop
jae
add
hlt
test
pop
cld
pop
add
fsts
push
mov
leave
nop
jmp
add
add
add
mov
add
xor
nop
push
mov
leave
nop
jmp
or
add
loopne
xlat
adc
in
add
add
add
mov
add
add
xor
add
clc
repnz
nop
nop
jae
add
stc
movsl
add
add
movsl
jne
rcll
mov
xchg
ret
cld
cltd
add
add
pop
add
leave
add
mov
sbb
add
nop
push
mov
leave
nop
jmp
add
mov
add
add
add
add
mov
cld
nop
nop
jae
pop
sub
add
lods
add
add
sbb
mov
xchg
ret
es
xchg
add
add
clc
repnz
nop
nop
jae
add
sub
add
or
jbe
add
add
xchg
push
clc
repnz
nop
nop
jae
movsl
add
add
add
sbb
mov
xchg
ret
add
or
add
add
into
xlat
mov
inc
call
nop
jae
es
xchg
add
int3
inc
xchg
clc
repnz
nop
nop
jae
xchg
repz
jb
add
inc
add
clc
repnz
nop
nop
jae
add
add
add
inc
loopne
add
sbb
push
mov
leave
nop
jmp
xchg
add
adc
add
add
mov
dec
pop
clc
repnz
nop
nop
jae
add
add
add
add
mov
xchg
fwait
pop
push
mov
xchg
ret
add
in
add
xchg
add
repz
cltd
subl
push
mov
xchg
ret
add
pop
jnp
add
cltd
adcb
repnz
nop
nop
jae
loopne
jno
add
add
and
movsb
xchg
push
clc
repnz
nop
nop
jae
add
add
lods
add
pop
enter
push
clc
repnz
nop
nop
jae
dec
jl
add
leave
rcr
iret
ret
clc
repnz
nop
nop
jae
xchg
data16
add
pop
add
adc
mov
fdivr
repnz
nop
nop
jae
xchg
add
xlat
add
add
pop
inc
add
sbb
clc
repnz
nop
nop
jae
adc
sub
lods
negl
mov
nop
push
mov
leave
nop
jmp
dec
add
pop
imul
cld
clc
repnz
nop
nop
jae
mov
add
adc
addb
cmp
ret
add
sbb
add
add
mov
clc
repnz
nop
nop
jae
add
mov
adc
addl
xor
add
pop
add
loopne
jne
clc
repnz
nop
nop
jae
add
int3
cld
xchg
test
in
leave
nop
jmp
add
xlat
adc
jns
add
add
push
mov
xchg
ret
or
add
adc
pop
add
add
add
mov
leave
nop
jmp
pop
in
dec
test
xlat
and
jnp
test
loopne
clc
repnz
nop
nop
jae
pop
add
pop
add
jnp
cmpl
nop
push
mov
leave
nop
jmp
cltd
cld
add
pop
test
adcl
cld
nop
nop
jae
pop
add
subb
add
add
add
add
mov
mov
leave
nop
jmp
sbb
add
add
add
repnz
nop
nop
jae
rolb
add
push
mov
xchg
ret
add
add
add
dec
add
in
imul
add
mov
add
sub
out
clc
repnz
nop
nop
jae
fldl
add
frstor
xor
add
repnz
nop
nop
jae
data16
adc
pop
sbb
and
add
repnz
nop
nop
jae
cld
stc
mov
cltd
add
add
sti
mov
clc
repnz
nop
nop
jae
add
xchg
and
add
adc
add
add
add
add
imul
add
test
addl
andl
lcall
add
add
loopne
add
jbe
stos
clc
repnz
nop
nop
jae
add
add
movsl
add
add
test
clc
repnz
nop
nop
jae
add
pop
loopne
add
repnz
nop
nop
jae
xchg
into
add
add
hlt
aam
push
jge
jmp
nop
nop
jae
jns
add
add
ds
imul
clc
repnz
nop
nop
jae
add
pop
or
add
pop
add
fwait
nop
push
mov
leave
nop
jmp
adc
add
add
jl
add
add
test
mov
xchg
ret
add
add
add
loopne
add
add
add
pcmpgtb
xor
repnz
nop
nop
jae
inc
repz
movsl
add
jno
jne
clc
repnz
nop
nop
jae
add
pop
jno
jno
add
hlt
enter
push
mov
xchg
ret
add
xchg
add
stc
xlat
add
cld
nop
nop
jae
add
loopne
add
dec
imul
sahf
sbb
pop
pop
clc
repnz
nop
nop
jae
add
add
or
lods
add
add
add
cmp
mov
mov
clc
repnz
nop
nop
jae
add
lods
add
adc
mov
clc
repnz
nop
nop
jae
cld
add
test
add
roll
push
rorl
nop
nop
jae
test
mov
add
push
nop
push
mov
leave
nop
jmp
dec
xchg
add
dec
imul
aad
jbe
clc
repnz
nop
nop
jae
testl
popa
enter
ret
add
clc
repnz
nop
nop
jae
add
add
dec
add
mov
decb
int3
cld
jg
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
int3
leave
xor
add
enter
add
sbb
dec
nop
push
mov
leave
nop
jmp
repz
add
add
inc
xor
clc
repnz
nop
nop
jae
add
cld
add
pop
and
pop
or
xor
enter
repnz
nop
nop
jae
and
stc
add
add
add
scas
push
cwtl
fdivrl
cld
nop
nop
jae
int3
add
rolb
xchg
add
mov
push
mov
xchg
ret
add
add
adc
add
lods
pop
clc
repnz
nop
nop
jae
jl
add
xlat
add
add
add
add
fdivrl
inc
mov
clc
repnz
nop
nop
jae
cld
or
add
test
add
dec
lods
pop
jmp
test
add
sbb
cmpb
add
nop
nop
jae
jnp
add
add
add
add
mov
cld
nop
nop
jae
dec
add
sub
add
add
add
or
cmp
ret
pop
xlat
add
pop
roll
shlb
and
add
add
push
push
mov
xchg
ret
add
sub
pop
or
dec
add
adc
xor
push
mov
xchg
ret
pop
add
xchg
add
enter
pop
out
push
nop
icebp
push
clc
repnz
nop
nop
jae
cld
add
xor
into
mov
repz
clc
repnz
nop
nop
jae
pop
add
add
dec
mov
clc
repnz
nop
nop
jae
sbb
movsl
mov
and
add
add
fmul
mov
clc
repnz
nop
nop
jae
add
adc
add
fldl
mov
add
notl
push
mov
xchg
ret
pop
and
add
rclb
mov
cmp
ret
sub
add
cld
add
add
add
or
clc
repnz
nop
nop
jae
add
cld
xchg
imul
clc
repnz
nop
nop
jae
add
pop
xlat
add
add
add
jno
xabort
cld
nop
nop
jae
pop
add
add
add
add
mov
push
mov
leave
nop
jmp
jnp
add
add
adc
add
push
fld1
clc
repnz
nop
nop
jae
add
add
add
jns
xchg
mov
xchg
ret
add
mov
add
add
add
push
push
mov
xchg
ret
add
add
testl
jb
jge
movb
cld
nop
nop
jae
sub
loopne
add
add
int
pop
jae
repnz
nop
nop
jae
pop
add
roll
pop
jl
add
add
lds
nop
push
mov
leave
nop
jmp
mov
add
leave
push
clc
repnz
nop
nop
jae
jb
pop
movsl
add
jl
adc
mov
je
js
repnz
nop
nop
jae
enter
add
or
xchg
call
clc
repnz
nop
nop
jae
int3
adc
es
xchg
mov
jmp
cld
enter
add
rcll
stc
pop
pop
into
add
outsb
cmp
sbb
add
add
cld
int3
add
pop
add
mov
xchg
ret
jns
add
add
dec
pop
loopne
add
repnz
nop
nop
jae
pop
repz
dec
repz
add
loope
clc
repnz
nop
nop
jae
adc
add
pop
pop
add
add
add
add
add
add
add
add
loopne
call
clc
repnz
nop
nop
jae
sub
shrl
mov
clc
repnz
nop
nop
jae
into
mov
add
adc
or
push
push
mov
xchg
ret
add
lods
cltd
add
add
popa
add
jno
mov
jmp
pushf
add
add
add
loopne
push
icebp
sbb
repnz
nop
nop
jae
adc
add
add
jb
sbb
loope
or
add
nop
push
mov
leave
nop
jmp
add
sbb
data16
add
repnz
nop
nop
jae
cltd
jnp
add
add
sbb
clc
repnz
nop
nop
jae
cld
pop
mov
sbb
jno
push
mov
xchg
ret
or
add
dec
mov
dec
gs
nop
push
mov
leave
nop
jmp
add
add
jl
pop
pop
es
mov
repnz
clc
repnz
nop
nop
jae
in
add
add
add
add
add
repnz
nop
nop
jae
xchg
mov
adc
add
dec
push
mov
xchg
ret
pop
enter
add
jb
xchg
int3
xlat
lds
popa
jge
add
inc
add
imul
js
add
clc
repnz
nop
nop
jae
sub
in
add
xlat
pop
add
adc
mov
clc
repnz
nop
nop
jae
add
pop
pop
add
jns
xor
clc
repnz
nop
nop
jae
add
add
add
rolb
add
mov
xchg
clc
repnz
nop
nop
jae
popa
add
add
add
jno
lods
add
mov
leave
nop
jmp
add
jns
add
dec
xchg
add
lods
lahf
pop
clc
repnz
nop
nop
jae
mov
adcb
mov
add
mov
mov
clc
repnz
nop
nop
jae
xchg
enter
jb
add
push
mov
xchg
ret
jno
add
cld
hlt
sbb
dec
add
add
and
add
add
icebp
cld
clc
repnz
nop
nop
jae
or
lods
add
sbb
mov
clc
repnz
nop
nop
jae
add
rolb
stc
add
adc
add
add
push
mov
add
add
add
or
in
mov
jbe
xor
clc
repnz
nop
nop
jae
mov
add
add
add
movsl
xchg
fistpl
nop
push
mov
leave
nop
jmp
add
or
pop
mov
call
nop
push
mov
leave
nop
jmp
adc
add
and
add
popa
je
clc
repnz
nop
nop
jae
cld
pop
movsl
add
adc
stos
mov
cmpl
mov
leave
nop
jmp
xchg
pop
pop
add
adc
xchg
addb
mov
xchg
ret
add
add
and
add
add
and
clc
repnz
nop
nop
jae
add
rcrb
mov
fld1
clc
repnz
nop
nop
jae
pop
add
add
sub
into
add
icebp
mov
clc
repnz
nop
nop
jae
add
add
cltd
add
fld1
clc
repnz
nop
nop
jae
dec
add
pop
jb
es
lods
pop
jae
loop
push
mov
xchg
ret
dec
cld
add
add
xchg
repz
test
push
clc
repnz
nop
nop
jae
jnp
add
add
cld
add
inc
clc
repnz
nop
nop
jae
add
adc
add
pop
leave
dec
add
add
add
push
mov
xchg
ret
add
in
pop
xchg
mov
xchg
ret
adc
adc
enter
jno
push
push
mov
xchg
ret
dec
stc
stc
and
pop
add
xchg
or
fwait
pop
clc
repnz
nop
nop
jae
add
jb
add
sub
fcompl
jae
push
mov
xchg
ret
pop
add
add
xlat
add
add
add
stos
clc
repnz
nop
nop
jae
inc
roll
dec
add
mov
mov
clc
repnz
nop
nop
jae
pop
add
cltd
add
cld
add
add
and
test
in
clc
repnz
nop
nop
jae
add
mov
lret
fld1
clc
repnz
nop
nop
jae
mov
add
add
add
clc
repnz
nop
nop
jae
add
sub
add
adc
add
add
jmp
add
xchg
and
add
pop
or
sub
loopne
add
push
mov
leave
nop
jmp
add
leave
add
add
pop
popa
adc
pop
sub
add
add
repnz
nop
nop
jae
dec
mov
add
add
or
rclb
adc
add
hlt
stc
add
or
mov
add
add
and
call
nop
nop
jae
add
pop
adcb
in
pusha
add
jg
add
insb
nop
push
mov
leave
nop
jmp
hlt
add
xchg
enter
push
mov
xchg
ret
adc
mov
pop
and
pop
add
add
or
add
lretw
add
clc
repnz
nop
nop
jae
adc
and
imul
xor
repnz
nop
nop
jae
mov
pop
add
push
jle
adc
pop
cmp
mov
xchg
ret
pop
inc
add
fldl
mov
xchg
push
push
mov
xchg
ret
add
movsl
xor
pop
testl
and
addl
xchg
mov
push
ret
clc
repnz
nop
nop
jae
add
stc
pop
add
jns
add
jg
outsl
loopne
repnz
nop
nop
jae
add
add
mov
push
mov
xchg
ret
add
rcrb
add
mov
out
add
clc
repnz
nop
nop
jae
pop
add
or
xchg
out
jne
clc
repnz
nop
nop
jae
stc
add
add
mov
add
inc
mov
xchg
ret
pop
add
int3
add
xchg
add
push
mov
xchg
ret
add
pop
jnp
shl
add
add
in
xchg
clc
repnz
nop
nop
jae
mov
add
xchg
add
add
push
pop
add
push
mov
xchg
ret
mov
dec
add
add
push
cmp
test
cld
nop
nop
jae
pop
add
pop
repz
push
add
push
inc
add
cltd
add
add
add
mov
clc
repnz
nop
nop
jae
movsl
add
cmpb
mov
pop
clc
repnz
nop
nop
jae
or
add
add
pop
test
add
outsl
je
clc
repnz
nop
nop
jae
add
add
lods
add
sbb
repnz
nop
nop
jae
cltd
add
popa
fldl
pop
popa
stc
add
pop
clc
repnz
nop
nop
jae
add
add
add
stc
mov
jns
jge
clc
repnz
nop
nop
jae
add
xor
mov
add
add
jecxz
mov
jmp
add
mov
add
incb
add
and
loope
mov
add
add
push
ror
pop
cli
sahf
jmp
outsb
in
into
mov
mov
and
dec
cmp
mov
daa
les
and
mov
cmp
add
add
and
cltd
call
or
push
push
mov
xor
pop
cmp
je
push
int3
jae
adc
sub
mov
cld
or
arpl
add
add
mov
xchg
add
kunpckwd
or
add
add
inc
movsl
xor
jb
fbstp
xlat
xlat
mov
mov
pop
jno
cmp
mov
sub
pop
das
pop
cmp
add
add
ss
add
movsl
or
mov
add
add
jge
push
jg
mov
mov
mov
jo
hlt
add
add
imul
pop
xchg
mov
and
push
push
push
cs
mov
add
add
mov
hlt
rcl
add
jmp
add
dec
xor
add
popa
mov
dec
outsb
inc
add
mov
add
add
pop
xor
adc
inc
shll
out
not
inc
jmp
in
inc
fiadds
mov
mov
mov
mov
cmc
cld
mov
outsb
pop
stc
mov
mov
mov
add
add
cwtl
ret
push
pop
mov
push
xchg
movsb
pop
and
mov
insb
add
add
push
lods
add
add
add
pop
ficoms
pop
jo
push
pop
inc
add
add
push
or
shl
ja
in
into
pop
ss
filds
addr16
push
or
xlat
jle
adc
add
add
add
addr16
ret
jp
push
fidivrl
call
add
add
lods
lock
arpl
and
jns
add
add
movsl
adc
xchg
pop
std
mov
test
icebp
outsb
aaa
ffree
mov
dec
add
orb
add
loopne
cltd
punpcklbw
add
add
mov
add
cmp
cmp
add
add
add
scas
test
mov
add
add
lret
das
xor
add
std
mov
js
adcl
aam
mov
vpaddusw
push
sbb
xchg
push
inc
add
jne
mov
cmp
lds
add
add
mov
dec
cmp
ljmp
js
lret
jno
imul
inc
add
add
xor
jle
jl
fidivs
adc
aaa
jne
pop
js
mov
call
ret
fadd
rclb
lods
xchg
fdivrs
add
in
inc
and
mov
add
add
and
fisttps
stos
xchg
xchg
push
xchg
and
mov
pop
dec
or
xor
cmp
add
xor
out
into
mov
movsb
scas
out
inc
inc
push
clc
pop
ja
sbb
sbb
add
add
or
mov
and
ret
add
ljmp
sarl
icebp
dec
cwtl
mov
dec
cs
xchg
and
pop
xchg
pop
into
movsb
xchg
fdivrs
ret
cmp
sub
stos
fsts
daa
xchg
aas
mov
or
jmp
icebp
add
xor
xchg
sahf
push
inc
pushf
mov
mov
sbb
testl
add
add
iret
in
pop
mov
push
mov
sahf
adc
cld
ds
xchg
mov
ss
sahf
bts
add
add
add
arpl
mov
fadds
movsl
fcom
xchg
adc
stos
data16
fcmovnbe
mov
push
xchg
fcompl
lods
mov
int
filds
and
sub
paddb
sub
fistpl
and
mov
push
dec
add
jbe
cmp
add
jo
push
in
jg
push
lcall
lods
fdivl
mov
mov
addl
xor
pushf
je
addb
pop
out
push
mov
sbb
add
push
rol
in
xchg
movsl
xchg
xor
repz
stc
enter
push
inc
je
clc
insb
add
jno
add
ss
mov
stc
ja
inc
mov
fnstsw
lret
jmp
adc
jb
add
add
addb
mov
in
icebp
hlt
js
outsb
lcallw
pop
cltd
ds
scas
insb
add
enter
test
aam
mov
lds
ret
pop
gs
xor
dec
add
add
out
cmpsb
jle
jge
mov
fisubrs
aam
adc
mov
js
loopne
cwtl
jbe
sti
nop
jmp
add
add
roll
xor
sub
xor
mov
scas
inc
fadd
add
add
cmp
cmpsl
xor
cmp
mov
add
inc
add
jbe
test
or
xchg
xchg
cmp
lcall
add
add
arpl
outsl
outsb
or
add
add
add
cmc
push
add
inc
stos
xor
test
dec
sub
add
add
jb
push
inc
jbe
mov
and
popa
fsubrs
dec
add
add
add
add
pop
sub
add
stc
jbe
sub
pushf
xchg
adc
cmpl
clc
cmp
cmpsb
lret
outsl
or
sub
pop
xor
cmp
ljmp
pusha
add
in
add
mov
add
mov
lds
jg
sarb
sbb
stos
loopne
add
cwtl
loop
mov
rol
sbbb
pop
imul
push
xor
fisubs
mov
out
loopne
push
pushf
je
add
jb
push
inc
add
add
add
add
aam
cmp
pop
dec
add
add
mov
xchg
mov
mov
xor
iret
push
mov
mov
subl
push
popf
ds
mov
inc
das
jbe
jnp
cld
adc
stos
icebp
imul
into
ljmp
sbb
xor
fwait
jbe
in
or
xchg
mov
xchg
in
pop
push
push
inc
mov
adc
lods
jge
add
add
add
movsl
xchg
adc
lods
rorl
repnz
add
add
add
aaa
clc
lret
add
add
std
repz
jns
mov
xchg
imul
and
add
add
idiv
or
add
add
add
test
jns
xchg
pop
dec
adc
sub
add
add
cmpsb
scas
pop
pop
mov
call
jg
cmpsl
push
adc
push
test
int
cmp
inc
jae
xchg
xchg
cwtl
cmp
push
cmp
out
add
add
iret
fbstp
dec
or
add
add
or
or
cmp
add
es
push
or
mov
inc
add
add
mov
loope
sar
rcrb
cmp
fwait
jae
fwait
dec
sbb
movsl
pop
xor
xchg
add
mov
out
out
lods
fbstp
or
xor
or
and
xchg
mov
daa
iret
mov
sbb
and
add
mov
out
adc
es
lods
add
mov
enter
ret
add
push
jne
scas
sub
lea
sub
adc
sub
mov
in
dec
xor
test
aas
lods
fxch
jl
dec
mov
cmp
out
mov
lcall
add
jbe
sbb
add
mov
inc
add
add
adc
mov
add
add
idivl
in
inc
pushf
inc
scas
xchg
and
add
add
jle
jnp
add
lds
mov
add
add
shl
mov
add
in
xchg
sbb
in
mov
fdivrs
adc
insl
push
pop
arpl
adc
sbb
xchg
scas
cmp
push
adc
xor
pop
cmpsb
add
mov
andb
push
mov
pop
pop
out
cmp
add
push
ret
xlat
push
fistl
mov
test
cmp
push
or
add
add
adc
xlat
xchg
jl
dec
add
add
std
mov
divl
push
ret
mov
cwtl
xchg
add
loopne
shr
add
dec
stos
in
vpacksswb
xchg
add
add
dec
insb
add
add
dec
add
mov
jecxz
jle
or
add
add
add
out
mov
aas
aam
dec
lods
es
or
xor
jmp
jg
mov
sbbb
sub
out
push
pop
adc
popf
inc
mov
gs
push
pop
clc
int3
cmp
add
cwtl
xchg
sbb
xor
out
mov
or
fisubrs
mov
dec
into
in
push
pop
xchg
and
pop
mov
sbb
inc
cmp
push
mov
add
add
mov
pop
mov
add
lcall
push
add
add
push
cwtl
pop
in
ds
add
add
and
mov
mov
push
xchg
fcoms
mov
mov
jo
aaa
ja
add
mov
mov
lock
mov
add
add
lret
pop
push
xchg
add
or
mov
mov
in
dec
mov
cmp
jns
insl
fwait
inc
push
cmp
add
loopne
cmpsl
cltd
cmpsl
sbb
cmc
fistl
test
sub
stos
les
mov
mov
repz
pop
bound
jo
xor
sub
mov
in
stc
jae
add
add
mov
loope
sbb
in
int3
fwait
dec
das
shll
or
fiaddl
out
cmp
pop
inc
cmp
in
push
inc
add
add
add
out
or
add
add
add
add
imul
add
or
xor
push
mov
mov
xchg
mov
sbb
cwtl
dec
add
ret
mov
add
inc
fstpl
push
sbb
add
scas
pop
xor
jnp
xor
in
insl
loopne
fwait
push
mov
pop
outsb
rclb
cmpsb
or
add
rclb
decb
xchg
int
cltd
cmp
xorl
mov
fsub
push
cwtl
fdivs
mov
add
add
sub
add
add
aaa
jno
and
add
sub
mov
pusha
add
scas
xchg
sbb
lock
dec
sub
mov
cmc
jno
or
add
add
test
xor
int
pop
insl
mov
pop
repnz
nop
mov
pop
pusha
add
xchg
add
add
sahf
mov
and
or
and
add
jecxz
fistl
xlat
js
mov
ret
repz
cld
adc
or
cmp
cld
inc
sbb
and
add
add
or
add
loopne
pop
orb
push
data16
cli
mov
jnp
aaa
mov
cmp
mov
daa
dec
add
add
imull
dec
add
add
adc
stc
int3
xor
add
push
in
cmp
jbe
aas
mov
dec
add
mov
mov
add
enter
cwtl
icebp
push
mov
add
call
pop
popf
pop
sahf
add
add
popa
or
add
add
arpl
stos
pop
or
add
add
dec
push
bound
cld
in
addr16
les
add
stc
cmpsl
jge
add
loop
in
testl
stos
insb
add
ss
es
push
and
lcall
in
fsub
lods
xchg
sbb
jecxz
lock
fsub
or
add
inc
jne
test
orl
add
sub
ficoml
inc
add
inc
add
or
lcall
sub
add
add
out
pop
mov
rcrl
lods
and
add
add
int
rcrl
in
clc
sbb
js
lods
lods
loop
sbb
mov
add
jmp
pushf
dec
mov
add
inc
out
jb
add
add
adc
jb
dec
add
repz
dec
ficoml
in
dec
sbb
fnstcw
mov
and
or
mov
adc
mov
add
add
add
jns
pop
xchg
sub
mov
test
rcll
dec
pop
int3
add
lcall
pushf
dec
jle
imul
lods
push
xchg
nop
imul
shl
popa
lahf
mov
jo
int3
cmp
arpl
int3
lret
clc
aad
cmp
add
jge
or
add
add
add
add
xor
cmc
dec
or
insl
ret
arpl
int
repz
mov
xor
popf
ret
test
add
sub
ljmp
movsb
xchg
mov
and
divb
sti
lret
push
mov
add
add
loopne
cmp
jb
imul
ss
cwtl
mov
sbb
add
mov
stos
or
mov
fwait
jmp
dec
inc
scas
xchg
test
stc
add
add
add
add
inc
adcl
ficoms
add
fildll
out
ror
or
shll
mov
les
dec
mov
mov
xor
add
mov
fisttpl
outsb
sbb
scas
mov
sbb
sbb
stos
mov
dec
cltd
out
inc
add
add
cwtl
inc
mov
decb
add
fildll
popa
insl
subl
add
add
pop
rcl
sub
add
add
fwait
in
aaa
fwait
cmpsl
setne
arpl
lods
data16
fidivrl
sbb
dec
sbb
pop
leave
jle
frstor
add
add
add
add
xorl
add
add
ficompl
add
inc
insl
xor
add
into
cmpsl
add
mov
sub
add
sar
sarl
dec
mov
pusha
add
add
shrb
add
es
jle
inc
add
add
cmp
sbb
incb
mov
imul
or
add
add
pop
addb
cmp
dec
rclb
inc
out
jbe
enter
add
addb
jbe
out
ss
stos
mov
add
add
mov
rclb
mov
jecxz
jp
xlat
aaa
adc
lcall
das
jno
sub
in
sub
aas
enter
pop
add
adc
add
pop
cltd
add
sub
mov
mov
int3
or
fsubp
cwtl
stc
das
sahf
loope
mov
push
mov
mov
mov
add
sbb
mov
mov
add
add
add
sub
add
add
aas
enter
scas
mov
add
enter
mov
adc
jns
cmp
xchg
mov
jbe
outsb
pop
lock
add
add
add
mov
and
add
add
enter
pop
jge
add
add
add
xchg
adc
mov
stos
mov
jge
or
pop
ret
les
cmp
test
dec
ret
outsl
mov
aam
lods
jno
mov
in
add
add
mov
sbb
dec
pop
dec
add
add
icebp
loop,pn
ret
mov
add
arpl
dec
add
add
jg
cmpsl
data16
imul
push
lods
enter
dec
add
add
add
jns
adc
adc
out
pop
mov
inc
sub
pop
repnz
xor
or
mov
insl
pop
mov
insl
mov
add
pushf
adc
mov
pop
push
dec
add
add
adc
lret
iret
pop
cs
dec
add
add
cmp
xor
lock
mov
fisubs
inc
loop
dec
popf
das
inc
mov
std
or
das
pop
push
cmpsl
jg
or
fistpl
roll
mov
pop
cmp
mov
add
add
pop
xor
lcall
jl
sub
add
add
push
lock
and
cli
test
add
add
dec
cs
push
pop
popa
rclb
das
out
mov
push
jle
and
incb
mov
cld
pop
dec
int
inc
add
cmpsb
in
bound
cmc
jge
ds
ficoml
cli
xchg
int
push
arpl
idivl
cltd
xchg
push
imul
jno
pusha
add
add
mov
insb
add
decl
hlt
mov
add
mov
pop
and
mov
ss
add
add
add
and
push
movsb
ret
cmp
into
dec
jne
cwtl
push
jge
int
dec
xor
lret
dec
out
cwtl
mov
popf
cmpl
dec
in
cmp
add
add
jle
sbb
mov
loope
pop
push
pusha
add
add
cmp
adc
add
add
pop
fimull
in
pop
les
loope
mov
dec
test
sbb
jbe
jge
pop
sub
ja
dec
movb
add
add
jnp
or
add
add
add
jbe
movsl
pop
sub
xchg
jbe
adc
or
mov
outsb
insb
add
mov
push
add
pop
out
in
scas
mulb
add
add
ljmp
fimuls
add
mov
call
add
cmp
or
mov
or
jp
inc
dec
sbbb
mov
roll
add
or
mov
test
jle
xchg
or
ret
filds
add
add
inc
add
add
lcall
lods
je
xchg
push
icebp
out
fst
or
mov
xchg
xchg
test
icebp
xor
push
inc
insb
add
add
add
in
adc
add
add
pop
es
or
mov
mov
mov
mov
hlt
lret
push
imul
push
lods
add
mov
push
push
adc
push
push
jle
mov
cltd
mov
jmp
cld
pop
sahf
xchg
add
sub
adc
and
add
add
outsb
imul
sbb
les
pop
xchg
aaa
dec
add
add
adc
out
mov
pop
imul
pop
mov
or
mov
sbb
push
daa
sbb
lret
push
xchg
roll
push
call
mov
add
xor
mov
pusha
add
std
fstpl
cwtl
test
add
add
inc
sbb
iret
orb
std
pop
sbb
sahf
mov
lods
mov
mov
loop
cmpsl
push
mov
cmp
or
mov
mov
sub
outsb
dec
adc
mov
in
and
add
movsb
shll
dec
enter
mov
push
sbb
iret
popa
inc
insl
sar
pop
push
fwait
test
fdivrp
add
add
lcall
pusha
add
int3
lcall
push
pusha
add
add
out
imul
xchg
mov
ds
push
scas
jbe
shr
test
dec
add
xor
es
inc
add
add
je
aas
xor
add
add
cld
or
imul
cwtl
dec
jne
nop
aas
mov
lods
push
jmp
cs
add
add
jnp
lret
int
insl
mov
add
add
add
add
ret
mov
inc
lret
mov
add
add
ret
jg
std
sub
xchg
sbb
data16
mov
movsl
pop
cmp
adc
mov
movb
add
repz
es
push
in
aad
mov
int
sti
or
and
add
add
lock
dec
push
cmpl
out
add
sbb
arpl
insb
add
add
add
add
mov
xor
push
push
pop
das
dec
scas
stc
outsb
xchg
xchg
icebp
add
and
or
aam
push
sub
out
or
mov
fistps
sub
mov
xor
fbld
enter
xor
pop
enter
add
mov
push
loope
arpl
xor
cld
movsb
aaa
fistpl
movsb
movsb
sbb
inc
xor
jns
add
add
sub
int3
int3
push
sub
add
out
dec
iret
dec
cmp
add
add
dec
mov
ja
shrb
or
dec
adc
xor
add
shrl
sbb
xor
aam
or
lds
add
imul
leave
cmpl
fcoml
sarl
sbb
jg
addr16
pop
ret
add
add
jle
pmulhw
add
adc
test
sbb
add
sarl
outsb
sub
add
add
mov
rcll
add
add
loop
pop
jo
sbb
fcoms
dec
sbb
sub
add
add
pop
ret
int
in
rcrl
in
sub
scas
data16
add
dec
in
mov
mov
int3
mov
xchg
cmp
subl
bound
jo
sti
jnp
cmp
mov
mov
sbb
mov
call
xor
dec
mov
sub
sub
mov
push
push
pop
arpl
fcompl
add
add
add
xor
sahf
mov
xchg
cmp
cmp
jne
lods
aaa
loop
cs
jg
jge
push
mov
or
dec
push
and
fnstenv
jmp
jle
bound
add
mov
fisttps
jl
int3
cltd
xor
imul
push
cmp
js
out
cmpsl
xor
cwtl
fistl
idivb
or
mov
icebp
pop
inc
jp
out
sbb
fwait
lcall
adc
test
lret
cmp
add
add
jnp
dec
repz
shll
fprem
rclb
movsb
jb
gs
insl
or
add
scas
loop
inc
mov
and
fisttps
pop
rcrl
jmp
push
mov
out
scas
mov
mov
add
add
add
add
and
inc
add
pop
scas
adc
mov
add
cmpsl
mov
es
stc
push
imul
jg
add
add
fisubrl
xchg
daa
call
jns
sub
mov
jp
add
add
push
hlt
adcl
add
fnstenv
test
add
add
movsl
lods
jae
lods
sti
jecxz
jno
pop
out
outsb
idivb
cwtl
adc
ficoms
xor
push
ja
div
mov
popa
adc
jae
mov
das
insb
add
xor
sbb
loope
cmp
sbb
mov
scas
fwait
and
incb
add
mov
push
test
ret
nop
rorb
jecxz
dec
xor
test
add
sbb
mov
mov
inc
xchg
lret
daa
jae
inc
mov
scas
in
sub
adc
jns
cli
push
lods
push
aaa
dec
xor
clc
push
xor
lods
aad
fldenv
add
xchg
jp
adc
movsl
xorl
mov
add
xor
lods
mov
add
add
add
mov
jecxz
das
pop
jae
add
jmp
je
popf
push
outsb
lods
mov
call
mov
add
mov
push
out
das
out
jmp
add
add
fbld
in
ss
pushf
les
das
push
repz
cmp
add
push
fnstsw
in
ficoms
imull
inc
jo
jne
lods
movsb
dec
add
and
and
mov
sbb
pop
into
jg
outsl
sahf
out
rcrb
dec
jo
gs
repnz
push
add
and
mov
add
add
push
lock
fsubrs
mov
add
insb
add
add
dec
add
add
add
pop
jo
add
add
jne
mov
in
out
cmp
dec
icebp
sub
xor
add
dec
add
add
rclb
sarb
outsb
cmpsl
jmp
inc
add
add
fwait
loop
popf
adc
add
inc
xchg
cmp
add
mov
dec
push
xchg
and
mov
jbe
pusha
add
jle
mulb
add
push
clc
or
add
add
mov
mov
fbstp
daa
lret
bound
rorb
push
push
loopne
cltd
pusha
add
mov
add
inc
adc
push
daa
cmp
pop
inc
repz
xlat
fidivrs
mov
xor
lret
test
sbb
inc
in
inc
hlt
sub
mov
repnz
add
add
sub
test
mov
add
jbe
dec
add
add
aam
les
aam
notb
jp
pop
xorl
inc
adc
adc
mov
xlat
sbb
and
add
add
in
mov
lea
in
mov
ret
mov
std
and
add
add
xor
sub
add
add
adc
out
pop
sub
add
add
add
pop
fildl
and
mov
repnz
jae
adc
pushf
xchg
cmp
mov
mov
mov
shll
add
add
push
stc
outsb
fstl
outsl
adc
loopne
movsl
fidivs
add
js
lods
jle
add
cmpsb
lahf
int3
pusha
add
xor
lock
fistps
mov
add
adc
mov
cwtl
or
push
cmp
lret
movsb
mov
push
cmp
pusha
add
add
add
fsubrl
jne
ror
cmpsb
es
shlb
stos
rorl
add
scas
pop
int3
ret
pop
xor
sbb
add
add
stos
mov
adc
repz
mov
xchg
push
ret
jnp
xor
sbbb
mov
mov
and
movb
add
add
hlt
push
jb
inc
and
pop
add
jno
pop
and
mov
add
add
aad
add
add
add
inc
add
add
fwait
cmp
test
jae
cmp
push
jl
push
add
add
xor
jp
push
mov
mov
adc
or
add
push
jl
addr16
popf
inc
and
add
add
mov
add
add
adc
jg
ds
movsl
shll
sahf
mov
ljmp
sbb
push
add
add
sbb
push
nop
jns
mov
insb
add
outsl
sbb
add
add
imul
push
push
aas
int3
je
adc
icebp
mov
pusha
add
add
ljmp
jo
mov
add
rol
xchg
je
cmp
sbb
or
mov
sub
mov
lahf
xchg
imul
leave
movsl
mov
out
sub
add
mov
push
cmpsb
mov
stos
xor
pop
pop
mov
gs
insb
add
add
repz
add
mov
loope
add
mov
add
add
push
or
mov
fwait
xchg
test
and
lret
mov
adc
push
or
mov
in
jle
addb
outsb
inc
lcall
lods
add
jecxz
dec
lods
push
divl
mov
out
adc
incb
adc
add
sahf
dec
inc
jmp
jp
sahf
jno
in
jae
push
adc
push
shl
iret
loop
hlt
or
fwait
iret
push
mov
lahf
rclb
mov
stc
mov
fidivs
bound
clc
mov
add
cmp
jno
int3
xchg
out
mov
pushf
mov
pop
pop
cmpsb
stos
stos
sbb
sti
test
mov
mov
lret
lods
clc
pop
test
xor
fidivs
call
loope
push
and
mov
lds
inc
pop
in
dec
inc
add
adcl
jl
pop
dec
jle
outsl
cld
dec
add
jge
nop
sbb
int
lcall
sbb
aad
repz
out
dec
loopne
inc
xor
mov
sub
add
add
cld
cwtl
mov
mov
xchg
cs
mov
jge
std
mov
stos
inc
sbb
and
add
repz
insb
add
add
dec
lods
insl
cld
mov
push
pushf
imul
xchg
das
or
mov
add
rorl
int
cmp
pop
add
dec
xchg
shlb
sbb
sub
pusha
add
add
adc
ficoms
lods
dec
dec
mov
cmc
imul
in
popa
test
mov
lahf
fcompl
add
mov
add
frndint
es
pop
fstps
dec
lock
jmp
pushf
into
push
sbb
add
std
repz
mov
push
mov
out
bound
add
xlat
pop
xchg
mov
dec
cmpl
lods
test
xchg
mov
inc
add
out
pop
dec
in
movsl
ficoms
out
xchg
pop
std
jl
decb
lods
xor
pop
loopne
popf
out
push
ret
push
out
lea
add
add
push
push
js
imul
add
add
add
and
add
add
lods
push
or
mov
les
add
add
pop
adc
pop
mov
dec
add
add
add
fisubrs
mov
lahf
mov
add
and
mov
mov
mov
loop
rorl
rol
inc
add
add
pushl
test
add
outsl
pusha
add
add
loop
pop
or
add
add
outsb
xor
add
add
movsl
or
mov
pop
mov
and
into
xchg
push
mov
decb
testl
inc
add
add
xchg
cmp
out
jmp
push
ss
orb
mov
sbb
gs
jo
and
mov
adc
xor
cs
add
and
outsl
push
mov
lea
add
add
stos
pop
adc
jb
inc
add
mov
add
aam
push
int
addl
shll
add
xchg
pop
loope
push
jo
lock
inc
add
push
push
in
sub
jg
ss
stos
push
lds
sub
add
rcll
dec
int3
inc
mov
cmpsl
adc
add
imul
cltd
lock
adc
daa
mov
fiadds
add
add
add
push
add
inc
shlb
not
jns
or
ds
ja
pop
and
ror
data16
sbb
add
add
imul
xchg
mov
jmp
imul
add
add
push
out
in
into
aaa
insl
pop
idivl
and
in
lcall
imul
mov
test
cld
sub
push
mov
mov
add
push
leave
push
sarl
and
add
add
jmp
push
xor
xchg
clc
cmpsl
pusha
add
lds
daa
call
sti
push
inc
mov
add
mov
add
add
lret
dec
inc
xlat
inc
cwtl
jnp
mov
cmpsw
shrb
dec
xlat
aad
xor
jo
insb
add
add
dec
mov
push
in
cmp
scas
push
xor
fsubs
push
jg
xchg
pop
and
pop
push
test
cli
jp
mov
das
faddl
push
mov
cld
clc
enter
add
add
sub
mov
and
orl
or
mov
add
add
xchg
adc
add
add
add
lods
push
fstl
aam
push
pop
mov
mov
mov
push
cwtl
xchg
dec
jne
xor
dec
cmpsl
cmp
das
push
fcmovu
mov
mov
aaa
add
mov
lahf
sub
aaa
pop
outsl
pop
push
call
cltd
addr16
popa
pop
dec
push
fsubr
jno
inc
mov
sahf
adc
scas
push
mov
dec
and
jbe
jmp
mov
aam
push
cmp
mov
mov
add
aas
adc
add
cmp
mov
xchg
jge
cs
or
pushf
fidivl
js
dec
xchg
imul
sub
add
add
sub
add
add
imul
insl
mov
movsl
stos
hlt
fidivrl
cwtl
or
mov
push
loope
add
add
lcall
push
pop
test
mov
add
sub
jns
dec
mov
repz
fstl
mov
leave
scas
cwtl
jl
mov
add
pop
cmpsl
ja
es
pop
push
mov
or
add
add
add
add
inc
lahf
sahf
in
idivl
add
or
add
add
insl
and
xlat
push
es
mov
adc
fcomps
add
add
mov
data16
fincstp
mov
and
add
cmp
sbb
fstpl
add
mov
add
add
adc
dec
fildll
add
push
or
adc
into
push
xchg
and
cli
rcrl
pop
test
xor
push
shr
adc
add
lods
xchg
loope
mov
jns
sub
mov
stos
loope
lret
jno
sub
add
add
adc
shr
mov
test
das
ret
adc
mov
mov
mov
in
add
pop
sbb
sub
sbb
dec
xchg
stos
push
out
or
jb
jmp
mov
pop
push
popf
scas
jmp
add
cmp
pusha
add
inc
add
add
jae
push
sub
testb
add
sti
mov
cmp
jb
cltd
andb
add
mov
add
add
jb
loope
add
ss
add
add
lods
fsubl
add
pushf
clc
shl
dec
mov
pop
add
add
add
cltd
stos
dec
inc
pop
sbbb
lahf
cli
add
add
dec
add
add
data16
xor
ffree
in
shrb
adc
sbb
sub
mov
add
add
mov
ja
mov
xchg
faddp
packsswb
add
fcmovnb
pop
xor
or
mov
test
ffree
mov
jg
test
stos
pop
lcall
and
mov
scas
or
xor
xor
add
bound
orl
jecxz
and
inc
jecxz
or
and
mov
xchg
out
and
add
add
mov
jmp
push
xor
cwtl
inc
adc
jl
mov
lock
test
mov
jecxz
push
test
add
imul
add
add
fmul
xor
add
push
outsl
test
xlat
adc
or
cld
inc
cmc
scas
movsl
xor
in
or
fiadds
call
shlb
cmc
mov
add
fwait
iret
jp
mov
add
lret
sub
add
pop
sarl
jbe
push
mov
or
adcb
mov
mov
add
imul
xor
mov
dec
fwait
sbb
inc
js
fisttpll
xor
dec
cmp
ds
inc
add
and
jmp
adc
outsl
jecxz
std
dec
pop
jl
push
adc
add
cmp
or
mov
outsl
pop
jbe
lds
dec
in
xchg
dec
push
and
add
add
ficompl
sub
add
daa
pop
mov
sbb
add
add
mov
xlat
ficoms
rcrb
and
add
add
fwait
sub
add
add
sbb
push
insl
loopne
add
repz
add
add
mov
aas
push
pop
fwait
test
int3
push
data16
std
rcl
testb
jl
mov
into
adc
fiaddl
add
inc
lcall
cmp
add
add
fstps
pop
add
mov
mov
test
mov
lea
xchg
pusha
add
add
cmp
push
dec
push
cmpsb
lret
out
js
lret
pop
call
rorl
add
mov
pop
and
add
add
jmp
add
popa
xor
fbstp
jg
pop
pop
shlb
xchg
mov
ret
mov
lea
sbb
rcll
add
add
int
addr16
add
add
cmp
repz
testb
add
sbb
add
add
lret
jg,pn
inc
or
add
add
fwait
add
mov
xchg
mov
cmpsl
sarl
xchg
jno
adc
movlhps
pop
jmp
jb
pop
inc
add
add
pop
stc
mov
add
add
int3
loop
fdivrl
push
inc
xchg
in
push
dec
clc
mov
inc
add
add
add
add
lret
loop
add
mov
add
add
add
lock
popf
ds
mov
mov
aaa
inc
dec
add
xchg
daa
push
xor
mov
mov
pop
call
pushf
add
jae
fucomi
sbb
mov
sub
add
mov
lret
add
add
pusha
add
add
es
out
xor
and
mov
insl
sbb
aaa
out
sbb
or
add
add
subb
add
dec
bound
mov
jno
pop
std
imul
push
into
movsl
xchg
in
add
lods
xor
jmp
fbstp
add
jge
test
add
mov
push
and
mov
jmp
orl
sub
add
scas
cmpxchg
jb
pushf
lret
inc
pop
sub
jno
enter
movsb
jno
add
fldcw
add
subb
addr16
sbb
xor
into
popa
mov
out
jnp
sbb
cli
fwait
mov
add
add
outsl
loop
add
jp
loope
jle
clc
xchg
push
and
mov
sbb
jo
sbb
mov
jle
out
push
loopne
jmp
and
add
add
cmp
les
and
add
sub
mov
push
in
push
lret
jp
sub
mov
ret
aam
cs
add
add
add
mov
data16
add
add
sbb
std
stc
stc
pop
lds
inc
fmull
pop
mov
and
add
add
loop
sbb
dec
add
add
pop
in
mov
je
add
add
pushf
outsb
out
in
scas
push
leave
clc
rcrl
aad
aaa
idivb
les
icebp
push
movsl
push
jns
add
add
fcompp
pushl
leave
roll
sub
mov
or
in
push
lock
add
xchg
pusha
add
add
mov
mov
add
add
loopne
in
adc
mov
adc
mov
cmp
test
pop
mov
lods
int
mov
jg
mov
add
mov
add
in
fsubl
cmc
adc
xchg
mov
std
fistps
add
ret
inc
add
add
mov
inc
sub
mov
pop
lea
cmp
add
pop
push
out
scas
cwtl
xor
cmpl
shrl
decl
jle
stos
mov
popf
in
pop
insl
ja
test
add
popa
push
mov
in
mov
cmpsb
pushf
fwait
pop
sbb
in
adc
xchg
sbb
xor
movsl
mov
add
add
mov
add
mov
fistl
enter
sbb
neg
in
mov
aaa
insb
add
mov
cmpsl
mov
add
add
adc
mov
mov
pop
ljmp
or
add
add
pop
add
iret
jbe
fidivl
call
mov
sub
lods
mov
sub
mov
fcmovnbe
hlt
dec
add
add
inc
dec
add
negl
sbb
sahf
inc
add
add
inc
push
pop
jae
addr16
xor
add
mov
in
sbb
and
add
dec
out
adc
mov
insl
test
js
repnz
mov
sbb
sbb
push
pop
cmp
rorb
cmp
mov
push
fidivl
pushf
mov
pop
ds
leave
jp
sqrtps
outsl
dec
add
adc
push
mov
add
add
ss
les
xchg
sbbb
mov
jo
xchg
decb
sbb
dec
std
pop
push
sbb
or
add
add
xor
xor
add
mov
add
imul
ret
nop
dec
mov
mov
sbb
rcrl
addb
mov
in
add
int
imul
add
push
sub
mov
fstpt
insb
add
add
out
lcall
cmpsl
ds
mov
add
add
jl
add
add
add
add
cld
dec
lea
into
mov
or
sbb
add
jp
add
inc
mov
push
jge
mov
push
aas
add
add
add
pop
movsl
cmp
or
icebp
shr
sahf
push
andb
sub
add
add
add
call
sub
sub
inc
pop
lea
push
cmpsl
fisubl
test
add
pushf
lods
movsb
or
mov
add
add
pop
fisubl
loopne
clc
lahf
popf
sub
leave
inc
pop
movsl
testl
lahf
stos
jno
add
add
add
das
pop
or
add
add
in
arpl
dec
mov
mov
cmpsl
xchg
in
loopne
jg
movq
rcll
repz
adc
push
or
cmp
push
pop
push
xor
mov
add
add
add
jbe
dec
xlat
cmc
inc
push
push
xchg
leave
fsts
add
add
add
or
sub
test
mov
call
add
add
ret
sti
xor
add
sbb
add
mov
push
popf
xor
out
pop
inc
dec
push
mov
adc
push
xchg
dec
xor
add
popf
js
push
int3
sub
mov
les
add
mov
xlat
jmp
int3
enter
das
mov
and
add
add
test
decb
mov
inc
add
ret
fistpll
pop
dec
iret
push
sub
mov
sub
in
out
mov
aas
dec
les
stc
shl
xchg
jge
add
mov
aad
add
sub
mov
fcmovnu
repz
lods
jle
mov
mov
adc
add
add
pand
loopne
adc
add
add
add
add
xchg
std
xchg
inc
je
mov
out
in
into
mov
daa
out
jb
add
add
into
je
js
sub
mov
xchg
imul
mov
xor
jmp
cli
xor
insb
add
add
adc
jmp
jnp
in
fsts
data16
mov
ss
aam
push
std
mov
add
add
aas
in
das
cmp
mov
bound
inc
enter
mov
enter
cli
pusha
add
aaa
out
ljmp
les
sbb
xchg
loop
dec
fnstsw
js
fisttpll
es
je
xchg
cmpsb
cmc
jae
gs
cmp
out
imul
mov
addl
add
sub
mov
in
and
mov
add
pop
push
ficoml
pop
imul
adc
push
ja
repz
xlat
in
sub
add
add
mov
mov
add
push
cmp
sub
sbb
add
add
add
mov
das
mov
or
add
sbbb
jle
sub
add
loop
pop
pop
mov
inc
add
sbb
orl
int3
aam
xlat
lock
outsl
insl
test
xchg
pushf
jnp
lret
push
fcompl
sbb
dec
ljmp
andb
clc
out
pop
or
mov
mov
mov
xchg
aam
jmp
shrl
jge
pop
dec
add
pop
mov
mov
push
je
pop
ret
sbb
rcl
loopne
push
jecxz
or
mov
cld
push
sarl
and
xchg
aaa
push
aad
mov
lret
or
mov
mov
xchg
leave
lods
nop
dec
inc
add
imul
jnp
aaa
mov
clc
push
movsb
cs
adc
je
out
adc
out
pop
cmpsl
int3
xchg
xchg
mov
push
push
sub
xlat
push
in
aad
test
sbb
sti
xchg
lods
fsubrs
add
add
add
jg
mov
xchg
pushf
xor
test
add
pop
les
cmp
inc
and
lahf
dec
test
add
mov
call
nop
xchg
mov
sub
mov
daa
jl
js
push
icebp
in
cmp
add
mov
add
add
sbb
sbb
pop
fxch
pushw
test
scas
cwtl
cmp
test
gs
mov
in
xor
daa
imul
pop
cmp
lret
jnp
push
xchg
sbb
cmp
add
add
add
mov
or
int3
xor
adc
stc
fwait
or
cmc
adc
jo
cmp
adc
arpl
add
or
or
fcoms
or
add
add
cmp
test
jle
inc
ret
pushf
sbb
add
or
mov
add
add
sub
lods
clc
out
xor
adc
add
add
sbb
add
add
or
mov
cmp
loop
popa
pop
sub
inc
add
add
add
pop
mov
lcall
notl
add
clc
mov
add
add
mov
mov
add
pushw
fstps
out
shr
pop
jle
insb
add
mov
xlat
pop
xchg
push
lods
push
inc
in
xchg
test
fadds
cmpsl
dec
add
add
das
adc
xlat
xchg
mov
and
iret
and
xchg
or
mov
add
pop
into
or
jnp
push
inc
add
add
ret
jg
sub
out
imul
push
movsl
cli
sub
mov
aaa
mov
repz
add
insl
mov
push
jp
mov
add
cmp
subb
call
out
mov
arpl
add
add
iret
pop
add
add
add
lret
mov
fiadds
add
add
mov
xor
fwait
les
push
outsl
scas
fisubl
add
inc
add
ljmp
add
add
dec
ljmp
add
jae
cld
jmp
add
add
add
test
add
add
std
pop
mov
or
jl
arpl
movsl
loopne
orl
cwtl
xchg
mov
stos
outsb
sub
push
dec
add
add
out
jmp
add
add
std
dec
movsb
lds
in
imul
sub
mov
cwtl
pop
repz
inc
lock
jmp
add
push
negl
mov
add
add
add
fsubs
jmp
cld
hlt
lret
rorl
or
add
add
loop
sahf
das
xor
pusha
add
add
aam
cmp
pop
arpl
negb
inc
add
add
lar
add
add
and
pop
loopne
push
jno
shlb
aas
inc
add
add
add
sahf
outsl
jp
mov
ret
sbb
dec
add
mov
add
repnz
adcl
add
add
in
mov
sub
mov
popa
mov
fwait
jno
lods
outsb
aas
ret
dec
sar
insb
add
dec
add
mov
cmp
mov
gs
ret
mov
jno
sti
sub
xchg
loop
aad
ljmp
mov
jge
aam
or
add
pop
mov
and
cmp
xchg
add
and
std
subl
lret
adc
dec
push
cmc
add
movsb
clc
mov
cmpl
ja
add
popf
jge
mov
or
outsl
popa
inc
int3
or
mov
int
aad
sbb
mov
add
add
leave
inc
out
ret
cmp
fiaddl
add
and
rolb
push
dec
popf
inc
add
rcll
inc
cmp
scas
pop
and
pusha
add
add
mov
add
jmp
std
or
sub
mov
pusha
add
stos
popa
lahf
movsl
inc
jbe
pop
stos
or
add
fsubr
in
arpl
clc
data16
add
les
add
add
mov
inc
add
add
aas
rclb
add
mov
mov
cltd
or
add
inc
ds
aaa
rorl
jecxz
in
add
add
outsb
test
sbb
add
mov
add
cld
into
dec
push
je
mov
add
add
add
aas
dec
das
dec
lods
imul
ds
push
sti
jae
xchg
cs
icebp
mov
jb
fldenv
mov
das
mov
push
mov
popf
jnp
xchg
in
sbb
add
add
add
pop
lret
into
fstps
mov
lret
mov
adc
xor
mov
ret
mov
mov
xchg
sbb
dec
xor
mov
aam
imul
add
dec
mov
add
add
data16
push
push
mov
rcrb
out
filds
jb
ss
adc
cmp
pop
popf
or
sbb
xor
cmpsb
popf
sarb
jno
cli
cwtl
mov
jmp
lahf
push
in
add
add
adc
icebp
lea
fsubrs
sahf
sbb
lods
out
setne
iret
pushf
sbb
iret
jp
rorb
in
cmp
add
lods
jae
sub
mov
pop
mov
sub
add
add
pop
enter
push
xchg
out
or
mov
adc
pop
clc
sbb
xchg
int
dec
add
add
in
testb
mov
push
lds
jne
add
push
xchg
idivl
xchg
in
popf
and
mov
sbb
dec
adc
add
pop
sahf
leave
ret
add
add
fsts
dec
adc
xor
jbe
mulb
pop
test
pushf
popa
and
jmp
int3
clc
stc
sti
test
adc
pop
or
mov
imul
xor
movsl
imul
stc
adc
add
or
add
add
or
mov
test
pop
jecxz,pn
mov
mov
test
xor
push
imul
or
mov
loop
popa
test
mov
add
add
jge
mov
aad
xorb
pop
mov
shrb
add
std
push
xor
add
add
add
fidivrl
dec
pop
subl
add
add
add
lahf
fstpt
xor
or
xchg
pop
xlat
stc
pop
or
fbstp
shrb
cwtl
scas
fistps
add
add
add
iret
jmp
add
sbb
pusha
add
add
push
mov
decl
add
add
inc
out
pushf
inc
add
add
or
mov
cmp
into
mov
inc
jo
mov
cltd
and
xor
jmp
push
popf
push
xchg
dec
push
cmp
adc
add
adc
mov
pop
es
out
sbb
mov
in
and
fidivrl
pop
or
add
add
inc
inc
cld
pop
stc
sahf
bound
adc
das
dec
add
add
loope
xor
adc
and
xor
lock
mov
jmp
mov
pop
push
aam
lcall
add
mov
push
push
loopne
ror
add
add
add
push
scas
dec
jecxz
mov
add
xchg
aas
add
add
add
mov
inc
je
and
cmp
add
add
xchg
push
sbb
mov
pop
fwait
sarb
loopne
stos
inc
xlat
and
add
add
adc
xchg
adc
mov
xchg
outsb
lods
pop
aam
addb
arpl
lahf
xchg
jge
and
mov
mov
pop
xchg
insl
xlat
dec
repnz
scas
lret
out
add
mov
push
imul
add
add
sbb
inc
mov
iret
rolb
das
cmpsb
divb
xchg
xchg
icebp
outsl
testb
mov
and
bound
lods
imulb
incb
xor
cmpsl
mov
daa
inc
xor
adc
xor
cld
add
mov
push
loope
sub
add
add
add
cbtw
repnz
rorb
mov
inc
cltd
xchg
std
cmp
mov
mov
jno
mov
int3
mov
cmpsl
xchg
repz
leave
cltd
pop
mov
push
dec
ret
add
add
add
xchg
lcall
add
add
pop
dec
mov
insb
add
add
jns
inc
pop
push
icebp
stos
sbb
rcrl
cmpl
or
data16
sahf
mov
inc
cld
sub
add
sbb
add
add
mov
ret
sbb
xor
popf
loopne
imulb
cmp
repz
popa
sub
adc
shrl
jns
in
outsl
stos
enter
mov
imull
lods
out
mov
shl
or
and
mov
add
add
and
inc
xorb
inc
xchg
mov
jbe
and
fadd
adc
dec
mov
loopne
arpl
fistpll
add
add
pop
pusha
add
add
cli
dec
pop
inc
jl
out
or
mov
ja
add
add
inc
push
mov
add
add
loope
std
push
arpl
add
pop
jo
inc
mov
add
add
mov
fidivrl
add
dec
push
pop
add
xchg
or
add
add
sti
sbb
push
dec
aad
jp
add
mov
subb
std
jae
lds
test
mov
cmc
test
icebp
sub
add
add
mov
call
add
pop
adc
movb
pop
mov
push
dec
inc
add
orb
add
add
lret
mov
mov
inc
vpbroadcastd
cmp
mov
xchg
mov
push
sbb
cmc
dec
add
add
push
push
out
arpl
cld
mov
ficompl
iret
test
xchg
and
add
add
popa
lret
in
int
jle
xor
or
add
add
fnstenv
cmp
or
fmull
test
dec
ds
fdivr
lods
xchg
scas
out
sub
mov
dec
add
xchg
mov
stos
or
add
add
add
add
add
xchg
je
push
mov
outsb
xchg
jge
jmp
bnd
leave
test
sub
or
jne
cmp
movq
fisubs
in
mov
pop
xchg
jge
mov
mov
add
push
leave
fcmovu
call
jle
in
xchg
sub
push
sarb
scas
mov
adc
es
stc
fadds
add
add
cmc
cs
sti
cmpsb
mov
or
hlt
inc
inc
add
add
sub
add
add
ss
aad
mov
add
add
mov
scas
sahf
pushf
insl
out
jae
add
and
loope
mull
movsb
add
add
add
inc
jge
inc
mov
icebp
sub
add
add
je
jmp
push
cwtl
fnsave
pop
cwtl
nop
mov
add
mov
add
mov
arpl
cltd
push
lcall
push
mov
mov
add
add
sub
mov
xchg
cmpsl
jb
imul
xchg
cmp
push
fdivp
jle
stos
out
ret
fiadds
iret
in
add
mov
jne
insb
add
stos
push
int3
bound
or
mov
or
mov
in
mov
je
mov
mov
jg
add
mov
and
mov
jb
push
cmp
add
add
cmp
xchg
inc
leave
inc
fadds
sub
add
add
mov
loop
mov
xor
aas
in
mov
adc
insl
imul
cmc
xor
add
cmpsl
les
outsl
outsb
or
mov
sti
aad
incb
seta
add
add
movsb
sub
add
add
add
push
out
ds
adc
or
xchg
xor
xor
fnstenv
add
jb
lcall
cmp
add
and
mov
lcall
sub
jns
pop
in
dec
lock
popa
jnp
enter
in
add
add
jns
sub
mov
pop
mov
xor
imul
fldt
sub
adc
movsl
cmp
in
in
mov
addb
and
jno
aaa
mov
addr16
cli
jge
or
jne
jge
pusha
add
add
add
mov
xor
icebp
aaa
cmp
xor
das
fstpl
xchg
enter
dec
outsl
add
ljmp
mov
add
aaa
mov
add
add
pop
sub
add
add
add
or
jl
xlat
push
aaa
and
packssdw
ljmp
push
or
add
add
add
add
sub
movsl
dec
add
mov
add
add
sub
xchg
mov
dec
cmp
cmpsl
jp
call
in
hlt
ljmp
adc
bound
sbb
mov
mov
ret
add
add
addb
xchg
in
pushf
xchg
in
fcmovne
cs
fsubl
aam
mov
jl
in
push
push
movsb
fiaddl
mov
inc
xchg
jmp
sub
mov
fmul
cmc
shrb
push
cld
mov
lods
outsb
fcompl
mov
rclb
ja
push
sbb
mov
push
mov
jmp
cld
push
dec
setno
cmp
add
divb
inc
push
pop
and
add
jns
add
lock
shl
cmpsl
mov
xchg
in
idiv
fldt
lods
and
mov
add
inc
in
or
cmpsl
jbe
mov
add
add
jmp
jp
sub
inc
add
add
and
add
stos
cld
fldcw
data16
add
add
pusha
add
cld
xor
lods
or
add
add
fnstsw
pushf
rol
movsl
mov
sub
xchg
sub
pushf
test
stos
sub
js
call
mov
inc
mov
in
stc
push
add
add
add
sub
in
outsb
hlt
insl
mov
mov
mov
sti
mov
add
add
jmp
mov
add
movsl
cmp
xor
mov
sbb
add
jl
xchg
sub
add
add
jg
imul
or
lahf
or
add
mov
inc
add
cld
pushf
outsb
mov
repnz
add
stos
cmp
sarl
cmc
out
in
cmp
mov
fisubrs
nop
add
add
cmp
mov
add
add
in
add
push
mov
inc
jg
and
bound
add
and
xchg
mov
pusha
add
add
popa
mov
sbb
pop
add
add
add
dec
jno
cmp
xchg
das
xor
clc
jg
stc
orb
orl
add
add
mov
ljmp
aad
dec
mov
call
dec
loopne
jg
push
adcb
imul
aaa
ret
pop
and
or
mov
xchg
pop
je
adc
xchg
push
shrl
add
movsl
xchg
cmpsb
in
adc
add
jns
jno
jmp
sbb
cmpsb
add
mov
push
stos
dec
mov
test
inc
jno
imul
push
hlt
jnp
fcoms
jecxz
test
jge
rcrb
add
pop
cmc
add
xor
stos
pop
repnz
clc
scas
inc
add
fwait
adc
out
jp
xor
cld
push
sahf
push
test
add
add
or
add
out
scas
sub
mov
add
add
push
sti
cli
pop
mov
push
cmp
or
add
add
jne
sarl
jbe
into
sub
out
orl
mov
sbb
inc
add
dec
add
xchg
add
add
add
lret
pop
pop
pusha
add
add
cmp
push
or
lock
lock
and
mov
push
mov
jp
add
add
add
add
add
add
mov
arpl
mov
aas
in
jne
lods
fiadds
adc
leave
adcl
negb
mov
fsub
jnp
imull
mov
pop
sbb
fisttpl
add
jb
jno
jmp
scas
or
jns
call
data16
in
orb
sahf
or
pop
pushf
ret
inc
add
add
adc
js
sub
add
add
add
add
mov
js
cmp
pop
xchg
lahf
sub
mov
xor
gs
add
adc
sub
xchg
aaa
cmp
mov
popa
xlat
cld
imul
js
push
xchg
fisubrl
add
shrb
cmp
shlb
add
addl
js
add
add
mov
add
add
imul
arpl
dec
movsb
mov
add
add
xchg
scas
push
fstpl
xchg
rolb
add
pop
sahf
cli
je
in
adc
xchg
dec
add
add
or
jno
push
inc
add
fdivs
xchg
xchg
sub
sbb
popf
sti
outsl
mov
jns
jne
jne
sub
mov
xchg
mov
lcall
add
leave
adc
std
sbb
stc
fsubrs
mov
mov
and
or
add
add
push
out
xchg
std
nop
mulb
mov
shl
testb
daa
or
sti
inc
out
mov
push
addr16
cli
pop
aas
sbb
and
add
push
mov
icebp
push
test
pop
fsubrs
add
add
sub
imul
lock
inc
cmp
cld
lcall
adc
mov
cli
mov
imul
cltd
inc
loop
and
popa
mov
push
xchg
or
mov
pop
fucomp
aad
lock
gs
and
inc
xorl
or
mov
add
add
pushf
cli
cmp
mov
add
nop
push
nop
popa
pop
xchg
int
repz
add
pop
sbb
mov
add
call
fadds
imul
inc
lret
loope
dec
add
add
std
inc
xchg
xchg
pop
addb
jmp
add
mov
sub
pushl
imulb
adc
sub
sbb
testl
jns
es
neg
test
cmp
test
xchg
pop
cmp
add
jno
mov
dec
loopne
add
inc
outsb
nop
sahf
aad
cmp
jns
sbb
cmp
pusha
add
add
jbe
cmp
add
mov
sub
mov
mov
or
popa
loope
in
insb
add
xchg
in
push
add
int
pop
sbbb
add
fsubrp
sub
add
mov
xchg
in
fsubrl
sti
ljmp
dec
data16
mov
mov
into
dec
xchg
inc
lea
shrl
lods
decb
add
xor
je
fiaddl
xor
nop
ror
fcmovnu
mov
sub
add
add
mov
mov
jp
add
lods
mov
add
cmovge
cmp
pop
enter
cmp
mov
les
fcoms
rorl
add
sbb
add
jno
or
add
add
loopne
pop
fimuls
popa
inc
aas
test
mov
sub
lret
testb
jle
add
push
clc
inc
push
inc
sbb
mov
or
pop
pop
dec
add
cltd
add
adc
mov
add
cmp
repnz
xchg
jmp
mov
cwtl
mov
add
mov
add
add
enter
sub
fbld
rol
jmp
add
or
add
dec
xchg
mov
add
add
addb
and
add
add
and
add
add
ljmp
or
sbb
xchg
xor
adc
aam
cmp
mov
cmp
add
add
sbb
push
add
jbe
or
cwtl
daa
lods
movb
and
pushf
mov
push
fsubrl
aas
mov
shlb
add
adc
add
std
call
mov
iret
cmpxchg
ja
scas
rolb
push
gs
repnz
mov
add
pop
insb
add
add
rclb
jl
sub
push
jmp
add
add
push
sbb
push
mov
pop
adc
cmpsb
cmp
bound
adc
leave
cmp
movntps
arpl
add
jns
das
dec
add
rorb
mov
mov
mov
xlat
stos
mov
sbb
jo
push
xchg
clc
mov
les
cmp
mov
lcall
adc
mov
sbb
cmpsb
out
sbb
inc
add
mov
repz
adcl
mov
cld
xabort
cmpsb
pop
dec
push
inc
js
xchg
dec
movsl
arpl
leave
das
dec
add
mov
add
xchg
xor
std
outsb
push
cmp
add
add
add
or
add
add
jl
jmp
add
shl
pushf
inc
xchg
loopne
cmp
cmc
mov
shr
movsl
dec
add
add
add
shl
daa
push
sub
test
or
add
add
nop
icebp
mov
or
pop
cli
shll
int
add
add
mov
xchg
out
dec
inc
add
add
jne
inc
xchg
inc
add
mov
cmp
outsb
gs
pop
orb
dec
jo
mov
add
inc
add
add
add
add
or
stc
xor
pop
ss
stos
xchg
cs
in
jne
es
into
inc
add
test
cwtl
int3
jbe
call
in
ret
pop
movsl
sub
inc
leave
inc
je
scas
cmp
sub
loop
div
sub
scas
stos
push
ficoml
add
add
fistpll
mov
cli
es
rcrl
cltd
mov
mov
jl
push
adc
push
add
shrl
add
add
jbe
addr16
mov
add
call
dec
test
add
ljmp
mov
arpl
in
lret
xchg
xor
jbe
sti
es
cmpsb
jl
xchg
push
mov
and
push
dec
add
add
leave
sti
ret
lods
in
pop
test
fsubs
sub
add
inc
es
cmp
loopne
mov
cltd
lods
push
faddl
dec
add
add
fimull
push
fnstsw
jne
add
add
add
imul
inc
add
ret
iret
inc
aas
movsb
adc
add
aam
jmp
mov
arpl
pop
lcall
into
jnp
dec
movsb
mov
out
cs
mov
add
add
adc
out
lods
push
mov
cmp
add
mov
or
add
add
shll
inc
jg
fimull
mov
push
jne
add
lds
add
cltd
pop
jge
dec
push
mov
dec
xchg
and
mov
xchg
fisubl
add
mov
dec
fnstsw
jbe
add
test
sahf
insl
pop
rorb
push
or
repz
lds
add
inc
fistpll
mov
std
fsubrs
pop
mov
jmp
add
add
jmp
jb
addr16
dec
add
add
push
mov
jecxz
mov
sbb
mov
xor
test
and
clc
jns
add
add
or
add
add
mov
mov
and
mov
pop
stos
dec
add
add
jecxz
out
xchg
or
mov
pop
xchg
int
or
push
xchg
add
ljmp
add
daa
inc
gs
fimuls
add
inc
adc
add
pop
xor
jno
inc
jge
jae
inc
add
add
add
jp
roll
mov
pusha
add
add
sub
mov
in
sahf
sub
add
add
push
add
mov
aad
push
imul
add
add
out
clc
shlb
jb
xor
jo
sub
add
fisttps
add
add
adc
add
add
insb
add
push
enter
adc
dec
in
cmp
clc
mov
enter
lcall
nop
arpl
and
xchg
rorl
imul
mov
add
add
pop
fidivl
mov
sub
add
add
fnstenv
add
add
mov
inc
insb
add
add
add
iret
xchg
popa
xor
lds
jmp
outsb
lcall
add
add
out
pop
xchg
jl
popa
lds
scas
je
mov
cmp
xor
or
mov
lods
sub
mov
add
adc
fsubl
sahf
sti
push
lret
cmc
nop
popa
adc
pop
fwait
sbb
aaa
int3
outsl
sbb
or
push
divps
push
xchg
inc
popf
lcall
mov
out
add
mov
mov
inc
subb
sbb
out
or
iret
xchg
sub
add
add
xchg
jp
pop
pushf
cmp
xchg
pop
push
jmp
cmp
add
add
add
xor
or
mov
add
add
add
xchg
add
add
xor
repz
add
sbb
add
add
test
cmp
call
sub
pushf
adc
or
loopne
xor
repnz
add
mov
stc
push
lods
popf
sub
cmpsb
addr16
ret
nop
xor
add
add
out
movsl
and
add
cmp
sbb
ret
cmpsb
rcrl
out
shlb
adc
repz
add
mov
add
add
mov
adc
add
imull
push
shrl
add
loop
imul
aam
stc
outsb
lods
pop
sub
shlb
sahf
sub
cmp
ret
jecxz
aas
test
push
push
push
mov
adc
mov
jl
repnz
mov
in
mov
inc
out
dec
fisubrl
xchg
shrb
jnp
into
dec
add
add
xor
jecxz
hlt
jnp
sbb
lret
pop
popf
repnz
and
add
add
add
add
add
dec
add
add
aas
or
ret
fstpt
shlb
mov
add
xor
add
xchg
pop
dec
pop
push
adc
mov
sbb
cld
clc
iret
mov
shlb
addr16
addr16
mov
pusha
add
add
test
mov
or
test
xlat
or
push
inc
add
stos
pop
mov
lcall
sub
fsubrl
notb
mov
sub
pushf
fidivs
sti
and
add
add
add
jnp
data16
subl
pop
xchg
loope
lcall
push
sbb
sub
add
add
inc
add
jp
xchg
out
or
add
add
sub
xchg
adc
xor
mov
mov
cli
movsb
divb
ret
ret
jl
mov
insl
xchg
add
add
aad
pushf
fdivrs
mov
jnp
inc
std
and
add
add
mov
jbe
aaa
mov
push
or
add
pusha
add
cmpsl
ds
push
mov
ret
adc
fwait
stos
or
mov
pop
add
add
add
add
add
mov
insl
insl
jno
loopne
mov
add
sbb
and
inc
add
add
pop
mov
mov
cmp
pop
arpl
orb
and
daa
imul
add
mov
jecxz
test
mov
push
push
nop
jne
addr16
lea
arpl
cmpsb
rcrb
add
or
sbb
sarb
push
xor
add
out
insl
sbb
decb
add
add
in
les
data16
mov
adc
lea
mov
stos
mov
xchg
fldl
cmp
push
repz
out
adc
pop
cld
lahf
inc
pop
inc
add
add
mov
and
mov
add
add
insl
mov
add
add
add
shrb
add
add
imul
jno
jno
add
cs
sub
inc
pop
xchg
mov
addr16
dec
push
jg
push
xlat
cmp
dec
add
add
or
fadds
push
stc
mov
fwait
and
add
add
fisubl
stc
lock
push
push
lds
add
and
insl
in
test
leave
or
mov
lcall
push
mov
adc
stos
mov
fisttpll
dec
mov
pushl
pop
arpl
dec
add
add
cmp
subb
inc
add
mov
add
add
inc
pop
mov
pop
ds
lea
hlt
mov
rcrb
stc
dec
clc
into
outsl
jecxz
divl
lods
cmp
lahf
fnsave
add
add
add
je
cmp
push
and
add
add
daa
lods
and
mov
mov
shrl
movsb
and
add
add
add
inc
add
add
add
je
jo
scas
xor
leave
dec
jns
mov
mov
xor
add
add
xor
lods
imul
cmpsl
jecxz
dec
add
add
mov
cld
in
ja
xor
add
add
xchg
movsb
mov
into
rcll
orb
sbb
and
mov
add
add
inc
loop
adc
stos
dec
push
inc
les
mov
lds
cmpl
mov
sub
in
dec
xchg
xchg
adc
push
sbb
add
call
leave
adc
or
repnz
dec
add
mov
aam
xchg
stos
stos
adc
enter
test
out
mov
fidivl
or
adc
xchg
sub
add
add
arpl
fdiv
out
je
jo
outsl
sarl
in
adc
and
add
add
shl
xor
lods
lahf
adc
arpl
push
hlt
lods
fwait
adc
cltd
insb
add
add
dec
dec
add
mov
mov
cmpsb
outsl
dec
mov
mov
or
add
add
sub
add
add
jmp
inc
pop
mov
add
add
enter
xor
call
out
add
aad
push
sbb
and
mov
shl
cmp
jo
xchg
mov
pop
sbb
add
add
add
add
add
mov
int
stos
stc
aaa
mov
adc
or
insb
add
or
mov
and
out
jecxz
mov
das
cli
rorb
les
add
scas
mov
push
jnp
stos
mov
ljmp
test
and
add
add
xlat
pop
jnp
and
or
add
add
add
repz
add
add
jge
inc
xchg
mov
mov
add
lods
insb
add
notl
add
or
mov
add
add
add
push
ds
sub
add
add
pop
cli
idivb
add
jb
cwtl
sti
pop
and
mov
int
mov
jo
jns
mov
push
push
push
leave
xlat
vmread
adc
mov
lcall
gs
cmc
sub
mov
add
add
lods
inc
push
cwtl
and
push
pop
aad
lret
xor
xlat
push
mov
pop
std
xor
add
pushf
imul
cmp
xor
add
add
ss
mov
rol
push
add
add
add
jmp
xor
pop
gs
jo
lods
cld
adc
jbe
mov
xchg
out
cmp
sub
mov
arpl
xchg
roll
lods
cli
pusha
add
cmp
dec
setnp
mov
inc
add
add
lock
adc
add
daa
lds
xchg
fildl
in
push
mov
movsb
movb
dec
sub
mov
lret
sbb
sbb
adc
data16
mov
scas
aad
inc
bnd
mov
scas
bnd
adc
fstpl
clc
or
ss
mov
add
pop
jno
xchg
aaa
lock
stos
jae
out
adc
pop
outsb
push
push
mov
sub
jge
add
add
dec
add
add
add
dec
xchg
xor
in
jl
and
add
subb
dec
add
clc
sbb
mov
ret
jl
and
jge
sbb
pop
repnz
inc
add
add
add
out
cld
dec
push
scas
cmp
cmp
jae
or
and
jo
loope
sbb
lock
loopne
mov
ror
xchg
out
mov
xchg
inc
add
add
add
sub
xor
sub
add
add
mov
nop
adc
pop
sub
mov
sbb
or
mov
add
pop
pop
shlb
pop
xchg
test
pop
inc
adc
add
add
add
shl
ja
mov
or
mov
mov
add
add
add
mov
xor
pop
scas
stos
cli
scas
jl
mov
jae
jge
fistps
mov
add
out
outsb
xor
add
add
jbe
sub
mov
movl
inc
sub
inc
add
and
mov
mov
andl
add
mov
jecxz
add
add
sbb
inc
add
add
dec
push
clc
fldt
xchg
cltd
mov
push
popa
icebp
in
dec
add
cltd
adc
add
add
outsl
inc
int
bound
add
add
mov
js
add
mov
pop
xchg
imul
adc
in
xorl
add
mov
imul
xchg
and
jle
lock
ss
fnstcw
add
hlt
sbbl
mov
and
and
jae
in
testb
mov
add
insb
add
add
add
dec
xchg
or
ja
push
sub
mov
sbb
adc
outsl
cmp
dec
push
aam
jl
jecxz
movsb
lret
loope
pop
jne
push
dec
call
pop
cli
mov
mov
add
add
pop
inc
add
add
cld
out
inc
add
add
mov
mov
leave
lock
lods
lock
mov
mov
jne
ljmp
aas
xchg
lods
cmp
and
and
add
pushf
mov
test
in
fcompl
outsb
mov
add
ds
imul
add
add
add
mov
adc
push
cld
scas
stc
fwait
jne
aaa
das
faddl
stc
push
add
mov
lds
add
aaa
inc
add
arpl
pop
or
sbb
cmc
adc
das
daa
pop
ret
xorb
add
and
inc
cmp
push
rorb
data16
aad
dec
push
pop
jecxz
ret
xchg
sbb
inc
pop
ret
pop
in
pop
add
add
call
cmpsl
adc
cmpsl
fsubs
sub
add
push
rcr
lahf
and
pusha
add
xor
pop
dec
mov
add
add
add
add
add
mov
or
inc
adc
push
and
add
add
cltd
stc
ret
push
mov
and
add
add
aaa
cmpsb
clc
repz
add
jnp
aaa
and
add
add
inc
add
cmp
call
cmpsb
repnz
arpl
ja
inc
add
add
push
dec
xchg
add
jmp
pop
sbbb
cmc
mov
jp
lcall
ds
xor
add
xchg
mov
orl
xchg
add
add
adc
mov
pop
addb
mov
arpl
add
movsl
jecxz
incl
add
cmp
stos
pop
popl
cltd
sbb
pop
xor
mov
sbb
add
add
add
adc
iret
ret
js
push
cmp
and
enter
out
mov
jb
cmp
pop
faddp
int
sub
mov
das
orb
add
into
fsub
push
out
and
add
add
cmp
in
or
lret
pop
std
inc
mov
nop
dec
add
add
mov
push
cltd
arpl
lret
mov
add
add
add
loope
sahf
sub
loop
jnp
and
mov
mov
mov
icebp
xchg
sbb
pushf
test
pop
xchg
lods
xchg
cmp
jl
add
add
lods
xchg
mov
jb
testb
xor
fmuls
add
fstl
cs
dec
lds
sub
mov
and
mov
je
fildll
add
pop
gs
xchg
sub
pop
cmp
mov
fimuls
add
adc
xor
popa
push
pmaxub
imulb
fmuls
add
mov
mov
test
xor
es
sbb
mov
push
out
add
xor
jne
ljmp
add
xchg
sbb
dec
test
mov
clc
mov
xor
dec
xor
ret
cmp
ljmp
sbb
mov
ret
outsb
jecxz
insl
cmp
adc
add
aad
inc
outsl
imulb
add
test
jge
arpl
in
jge
in
sub
add
add
les
add
in
xchg
mov
imul
pop
dec
and
push
dec
neg
loopne
adc
in
cmpl
push
leave
jnp
cmp
add
xor
jmp
outsl
mov
mov
sbb
and
mov
cmc
cli
sub
add
adc
sub
dec
add
add
xchg
mov
add
cmp
mov
mov
jno
iret
gs
push
shlb
jbe
ja
pop
adcb
jp
add
add
push
lea
mov
sub
add
add
mov
pop
movsb
pop
and
add
add
mov
cmp
inc
addr16
add
and
int3
xchg
decb
dec
cld
sub
ja
push
jb
and
scas
add
mov
mov
add
mov
imul
sub
mov
add
mov
mov
xor
inc
add
add
int
loope
shl
sub
xor
pop
scas
out
repz
adc
mov
cmp
xchg
sbb
and
or
jb,pn
das
xor
int3
imul
sub
add
add
and
mov
nop
sbb
loope
add
add
jae
sub
add
add
add
add
mov
add
add
out
neg
pop
fwait
adc
jne
xchg
mov
sub
sarl
adc
mull
and
xor
lret
mov
lods
in
jg
jge
add
sub
sahf
xor
les
testl
mov
cmpsb
lds
sti
repz
ljmp
mov
cmp
movsb
inc
add
stos
call
je
add
add
pop
fsub
mov
dec
andl
in
fwait
nop
xchg
cmpsb
out
inc
lret
jns
mov
test
add
sub
loop
add
add
dec
xchg
mov
jg
insl
jmp
add
lahf
repz
push
adc
rorb
dec
inc
fcoms
test
push
lods
xor
je
out
add
add
add
mov
xchg
pop
add
jns
out
push
call
clc
and
add
shl
and
add
add
faddl
outsl
mov
mov
push
les
loopne
add
outsb
subb
jae
insb
add
and
add
pop
dec
cmc
faddp
xchg
loope
js
imul
cmpsb
inc
mov
lods
jecxz
cmp
jae
mov
add
add
call
roll
add
cwtl
dec
out
shl
insl
push
gs
add
add
add
add
add
mov
xchg
push
ret
jp
fcoml
jecxz
push
int3
cmp
pop
nop
xor
add
notb
mov
cmp
dec
push
add
fisubrl
dec
add
add
lods
lret
or
in
scas
mov
mov
xchg
xchg
call
mov
daa
jo
add
add
mov
xor
jge
mov
xchg
sub
cmp
add
add
and
mov
mov
add
add
xchg
cmp
jne
hlt
cmp
jg
or
sbb
xor
mov
clc
fstps
xchg
jmp
arpl
fwait
sub
mov
mov
xchg
jns
fsubrl
push
cmp
mov
mov
push
and
or
mov
cmpsl
or
bswap
imul
out
xchg
rclb
dec
add
add
sbb
int3
dec
jg
adc
subl
add
inc
pop
mov
add
mov
jae
sbb
popa
xor
call
repnz
jnp
sbb
or
add
add
dec
int3
shrb
jmp
add
addl
mov
or
mov
add
add
aad
dec
scas
jmp
fistl
lods
test
or
add
add
pushf
ret
inc
mov
je
xchg
adc
loop
mov
sub
add
add
and
jbe
dec
xor
jge
dec
add
and
mov
xchg
pop
sub
cltd
push
push
movsl
cwtl
or
add
add
lcall
add
cmp
cs
pop
pop
jl
in
je
mov
push
repz
push
add
add
pop
leave
inc
add
add
jg
aas
out
mov
test
sbb
fsts
cmpsb
or
rorl
add
add
movsl
xchg
and
fcmovnbe
pop
cmp
cmp
out
popf
fmuls
arpl
andb
mov
movsb
inc
mov
mov
add
xor
pusha
add
add
shlb
add
add
inc
roll
mov
ret
xchg
dec
sbb
mov
cmp
xchg
fwait
push
outsl
sbb
leave
inc
add
add
pop
scas
cmp
add
and
int
mov
ret
xchg
jg
jecxz
add
add
sbb
add
add
pop
mov
lock
aas
add
mov
mov
arpl
xchg
xchg
jl
mov
sub
mov
jbe
loop
mov
ret
inc
adc
push
sarb
add
add
add
add
rorb
inc
or
mov
push
lret
scas
adc
cmp
popa
outsb
cmp
inc
add
add
jge
mov
cmp
xchg
mov
int3
add
nop
dec
add
push
or
add
add
sub
add
add
mov
mul
out
fadd
xor
dec
xor
add
ds
clc
mov
lret
sar
pusha
add
andl
add
rorl
mov
ss
fwait
cmp
and
mov
add
add
add
add
push
jmp
pushf
xchg
cmp
and
add
add
add
add
dec
int
fsubl
sahf
in
repnz
out
add
inc
dec
adc
push
dec
pop
popa
sbb
and
sbb
arpl
aaa
lds
xorb
jno
sbb
shrl
mov
mov
dec
xor
add
add
mov
add
fldcw
add
add
adc
mov
cmp
sub
gs
enter
in
popf
jecxz
pushl
popf
xchg
mov
mov
pusha
add
add
dec
add
mov
xor
cli
ret
jmp
jne
add
push
xchg
sbb
mov
sub
cltd
sbb
push
test
repz
aas
or
mov
mov
nop
lds
add
and
repz
mov
sahf
aam
jne
add
add
xor
xlat
mov
push
push
inc
jne
subb
or
cmp
out
inc
mov
xor
test
mov
xor
dec
pop
hlt
or
sub
pop
pop
lods
dec
sbb
cmp
scas
cmc
dec
gs
xchg
ds
rorb
add
add
call
mov
xchg
mov
mov
ret
mov
mull
mov
lods
std
neg
sbbb
leave
inc
sbb
shll
add
pop
push
outsl
or
add
add
mov
add
mov
inc
add
add
push
loope
push
mov
and
adc
pop
mov
rcll
rol
shrb
add
jmp
fdivp
mov
shrb
lcall
mov
lock
mov
inc
dec
xor
add
fucomp
cmp
test
cmp
imul
push
psllw
mov
sbbb
add
add
or
add
add
insl
out
mov
cwtl
pop
int3
lds
xchg
xor
sub
inc
js
leave
sti
push
xchg
cmp
add
pop
lret
cmpsb
cld
sub
xchg
imul
sub
out
xor
mov
pop
sub
jp
addr16
push
fdiv
mov
add
loop
leave
mov
nop
sbb
add
add
add
add
cmp
ret
cmp
add
das
in
mov
add
leave
cmp
test
mov
mov
shll
jbe
ret
xchg
mov
pop
mov
mov
or
pushf
add
jmp
inc
pop
mov
add
xor
rcrb
orl
pop
pop
mov
add
pop
sub
mov
push
cmp
pop
call
add
add
add
mov
add
add
addr16
mov
mov
movsb
popf
sahf
and
lret
ja
push
js
push
xchg
adc
xchg
ss
mov
fsubs
add
insb
add
add
and
inc
mov
enter
xchg
xor
test
add
add
and
rep
mov
cld
lret
push
psadbw
adc
jno
and
add
fwait
push
xchg
das
mov
xor
jno
mov
pop
je
cmp
int
sbb
call
test
add
in
pushf
lods
in
jl
add
dec
jp
jbe
mov
repz
xlat
dec
push
jb
or
dec
add
imul
mov
jmp
add
int3
mov
dec
ja
push
dec
loop
test
dec
iret
repnz
inc
mov
mov
mov
data16
jge
push
adc
mov
mov
lcall
xchg
outsb
test
xchg
lock
adc
mov
and
push
cmp
into
inc
mov
xor
inc
and
add
add
add
cmpsl
or
testb
sbb
xchg
cwtl
cli
lcall
cli
ljmp
jo
lret
sarb
sarl
add
add
les
js
mov
lods
pop
pop
lahf
loop
xor
inc
add
mov
jle
xchg
clc
scas
jo
js
loope
inc
lret
sub
dec
add
add
mov
xorl
sub
mov
lods
mov
sahf
jecxz
sub
or
add
imul
add
mov
mov
dec
jae
mov
xchg
insl
repz
loopne
add
add
out
rcrl
mov
dec
pushf
dec
add
add
push
inc
add
call
sub
mov
pop
inc
into
pop
sbb
xchg
mov
add
add
push
dec
jecxz
jmp
mov
or
mov
pop
insb
add
add
fbstp
jns
in
jnp
in
xchg
cwtl
stos
inc
mov
add
inc
lock
add
cmpsb
or
lea
xorb
xorl
pop
lcall
cmp
cmp
shl
cwtl
mov
mov
add
movsl
stos
push
add
add
add
stos
mov
add
test
add
pushf
out
inc
add
jp
xchg
ja
aam
ret
divl
shrl
aaa
sbbl
arpl
testb
add
add
add
mov
push
or
add
add
andb
xchg
fsubs
push
pop
xor
out
jge
stc
es
adc
rorl
add
add
mov
nop
dec
sbb
sbb
mov
and
frstor
into
leave
dec
push
data16
xor
jne
push
pop
mov
add
add
and
add
add
add
add
sub
or
add
add
bound
ror
jg
pop
sub
cltd
sbb
add
stos
xchg
and
add
add
movq
insb
add
xor
push
xchg
inc
xchg
test
dec
ds
std
mov
ret
out
aas
mov
jge
mov
and
decb
add
xchg
mov
sub
jge
int
xchg
sub
cltd
dec
add
cmp
sbb
aam
adc
fwait
movb
sahf
push
push
add
and
fstl
push
jne
out
popa
sub
add
add
cli
aam
jle
or
xchg
cmpsl
scas
aam
and
mov
jo
adc
cmc
xchg
pop
push
add
mov
push
mov
add
add
repz
bound
add
add
cs
mov
mov
mov
pop
movsb
fbstp
jae
lahf
dec
add
add
inc
add
add
ficompl
movsw
xor
jno
xchg
outsl
add
add
sbb
inc
add
add
push
sub
loopne
lahf
cmp
jns
adc
ja
sbb
mov
and
add
add
jge
fisttps
cmp
add
add
lea
add
add
pop
mov
add
mov
and
mov
aad
out
js
lahf
mov
cwtl
xor
sub
dec
add
add
add
add
dec
popf
sub
mov
in
mov
adc
int
add
inc
cs
and
bound
fadds
mov
cmp
push
cmp
int
ss
mov
stos
andb
pop
mov
mov
ljmp
add
push
sarl
pop
xor
add
and
out
xchg
sti
push
dec
mov
add
cmc
mov
add
xchg
inc
add
mov
push
int
and
mov
add
iret
adc
add
add
mov
ret
add
add
adc
je
loopne
jmp
jae
add
add
push
std
ds
cmp
push
mov
into
lcall
loop
add
xor
pop
jle
lcall
jp
sbb
andb
dec
shll
outsb
gs
mov
push
push
jns
xorl
repz
stos
jo
fstpl
jno
iret
adc
adc
insb
add
fstpt
jge
adc
add
push
stc
and
aad
insl
pop
xchg
push
pop
jge
xchg
cmp
add
mov
out
sbb
add
add
add
lods
movsb
push
in
mov
pop
sbb
add
and
mov
clc
and
fcomip
les
pop
popf
and
mov
sub
push
push
push
lcall
mov
add
mov
stc
xchg
lods
cmovl
mov
js
dec
test
inc
scas
adc
cmp
cli
jbe
mov
pop
pop
mov
enter
rcrl
aaa
jnp
in
into
mov
rclb
rdmsr
add
add
add
cmp
add
jo
inc
iret
scas
push
pop
in
push
inc
cmpsb
arpl
mov
test
imul
mov
adc
rcr
orb
jmp
add
push
pusha
add
clc
pop
pop
xchg
mov
out
inc
dec
mov
shlb
popa
cli
lret
add
add
sub
xor
les
into
rcrl
cmp
mov
rol
fldenv
loope
jle
and
mov
jge
jl
pop
inc
pop
xchg
pushf
out
xor
bnd
add
xchg
jmp
cmc
lock
shlb
imul
pop
mov
mov
pop
cmpsl
cmp
push
ficomps
sbb
add
add
pushf
sub
clc
adc
inc
mov
add
add
add
out
xor
pop
sahf
bound
add
add
add
mov
roll
mov
ja
pop
aas
jbe
test
addr16
xlat
int3
add
add
add
push
nop
mov
fisubrs
mov
aaa
or
xchg
cmpsl
imul
lea
dec
aam
lcall
pop
pop
dec
add
jbe
aas
lret
mov
daa
sub
mov
jae
push
je
inc
add
add
pop
ja
push
xor
test
pop
inc
add
add
and
xlat
adc
ret
pushf
mov
lret
inc
add
fcmovnu
enter
mov
pushf
js
add
scas
movsb
ret
add
add
imul
mov
xchg
adc
pop
lds
pop
fildl
lcall
cmp
fsts
loopne
int
add
or
mov
pop
js
ljmp
xor
push
inc
pop
scas
cld
cmp
aam
mov
push
arpl
test
lock
pop
sbb
add
les
and
inc
xchg
mov
push
jp
insb
add
add
repz
add
icebp
jle
insl
out
in
iret
lahf
push
sub
mov
inc
mov
ret
pop
jno
pop
inc
xchg
inc
iret
cmpsb
mov
repnz
add
add
jno
lret
or
adc
add
add
stos
lret
push
ljmp
out
gs
stos
inc
add
cld
inc
mov
and
add
add
leave
mov
adc
mov
push
push
lods
stc
add
lret
push
xchg
mov
add
push
push
cld
cmpsb
push
mov
data16
push
mov
repz
push
pop
dec
iret
mov
call
mov
add
xchg
adc
xchg
pinsrw
mov
mov
add
bound
imul
jg
gs
fwait
ret
add
add
cmp
push
fsubp
push
mov
lcall
add
add
call
lret
or
jno
popa
add
add
xlat
pop
es
popf
push
xchg
mov
cmpsb
sti
push
shlb
add
add
negb
sbb
ss
or
aaa
ffree
mov
sbb
rclb
popa
mov
mov
jbe
push
or
xchg
in
dec
push
push
into
xchg
out
jo
push
popa
inc
stc
insb
add
add
pusha
add
add
loope
add
cmpsl
lea
rcrb
pop
xchg
xchg
insb
add
add
ljmp
xchg
and
add
addr16
add
add
push
test
shll
and
jmp
mov
loopne
test
fsubs
ds
jg
fnstsw
loopne
mov
lods
cmp
mov
in
add
add
mov
mov
insb
add
mov
out
addb
xor
sbb
xor
dec
movsl
fstps
lea
outsb
mov
cmp
int
add
mov
int3
xchg
inc
int3
pop
lods
loopne
mov
push
xchg
cmpsb
sub
cli
pop
sub
dec
pop
pop
rcrb
lods
test
jne
or
sub
add
add
mov
out
mov
jecxz
xor
std
cmp
adc
stos
and
push
and
add
add
mov
popf
mov
pop
and
add
adc
add
add
pop
sub
popf
push
cmc
cmp
pop
sub
push
negl
in
lret
cmp
rcrb
pop
xlat
insl
or
add
add
dec
aad
rolb
call
add
mov
cmc
add
pop
sahf
pop
out
mov
sbb
add
cmp
arpl
or
mov
arpl
inc
pop
mov
jecxz
loopne
clc
out
dec
cmp
dec
js
iret
jno
movsl
push
sarl
dec
add
add
jle
sti
out
or
mov
enter
scas
adc
pop
les
add
mov
add
push
jo
add
cld
inc
lock
sub
mov
mov
shll
loope
jne
xor
aaa
mov
or
add
add
add
add
mov
add
add
loop
arpl
mov
push
sarb
push
sbb
mov
icebp
inc
addr16
adc
ss
test
push
lret
xlat
sbb
repz
loop
insb
add
add
add
xor
inc
dec
xchg
clc
fidivrs
cmp
int
add
mov
sbbb
pavgb
add
mov
dec
sbb
out
adc
orb
add
add
leave
int
data16
into
add
dec
in
int3
repnz
shrb
lds
fsubr
in
push
xor
push
test
pop
pop
outsb
adc
das
jb
sub
mov
outsb
push
push
filds
sbb
and
or
mov
mov
fsubrs
pusha
add
add
xor
sbb
push
xchg
dec
dec
cmp
push
jnp
add
lahf
xchg
sarb
sti
pop
stc
add
add
add
fldcw
fadd
lea
pop
push
iret
ljmp
loopne
in
push
inc
pusha
add
add
icebp
mov
xor
stc
in
ret
add
mov
xchg
nop
inc
add
mov
repnz
test
sub
add
lock
mov
lret
mov
popa
je
adc
add
add
push
inc
add
inc
xchg
fiaddl
sahf
mov
adc
add
add
add
xchg
divb
adc
jns
sbb
add
add
inc
xchg
jb
add
lock
inc
arpl
fdivs
add
xchg
mov
addr16
pop
cmpsb
arpl
faddp
lret
outsl
pop
je
pop
cmp
filds
sub
out
sub
in
push
sub
dec
jmp
and
pop
sarb
test
shrb
add
mov
and
mov
pop
loop
fiadds
add
je
mov
pushf
mov
add
jge
fcoms
mov
mov
sarl
and
movsb
mov
xchg
mov
int3
sbb
cmc
add
add
add
into
ret
je
or
add
add
jns
dec
scas
xchg
int
push
adc
movsb
cmp
aas
inc
incb
fisubrs
incl
fsubrl
add
add
stc
nop
pop
lcall
out
loopne
pop
mov
stos
mov
pushf
add
add
mov
es
mov
xor
js
xchg
cmpl
mov
mov
xor
pop
stos
inc
mov
add
scas
sbb
xchg
scas
repz
mov
aam
xlat
xchg
add
mov
rcr
pop
cwtl
jb
add
mov
adc
je
outsl
or
fmuls
add
ljmp
or
add
add
xor
inc
pop
pop
std
data16
loop
aad
pop
cmp
mov
dec
add
add
enter
xchg
enter
add
add
add
out
in
add
add
loope
pop
add
mov
sub
add
add
add
push
jbe
insb
add
movsl
inc
es
add
add
lods
in
xor
popf
jge
mov
sbb
xlat
pushf
pop
call
jo
cmp
or
push
into
mov
jecxz
jmp
clc
sub
add
add
mov
and
mov
add
add
jb
add
dec
inc
out
jp
dec
addr16
mov
fstps
mov
xchg
dec
lds
add
add
testl
add
mov
stc
mov
push
sbb
stc
cmp
dec
xor
cs
ja
pop
mov
lock
add
adc
add
pop
rcr
xchg
lcall
dec
frstor
add
add
xchg
push
stos
dec
incl
jb
add
es
and
and
add
mov
das
shll
add
push
adc
sbb
adc
cmp
pop
shl
push
cmp
xor
sahf
nop
add
fwait
or
jmp
add
add
inc
dec
add
popl
sub
lds
aas
ds
xchg
sbb
xchg
adc
jp
cmp
shll
or
add
add
add
add
aam
nop
jecxz
and
push
dec
add
add
cmp
dec
icebp
jno
xchg
push
out
addb
popf
dec
xchg
jp
je
das
mov
add
inc
pop
insb
add
ret
lahf
ret
add
add
add
ret
xchg
pop
xor
add
inc
insb
add
add
test
add
mov
mov
and
add
add
inc
mov
cmp
mov
stc
icebp
ret
dec
inc
das
loopne
xor
popa
and
insb
add
pop
imul
add
add
add
jo
push
cmpsl
mov
add
sahf
and
leave
dec
push
sub
mov
std
mov
sub
add
add
lods
fcoms
cmp
push
fistl
jb
adc
incb
xlat
sbb
pop
int3
add
mov
out
mov
jge
orb
insl
push
in
jl
lahf
mov
rcl
or
sbb
shl
dec
add
add
xchg
lcall
mov
arpl
sub
sbb
add
cmc
aam
sbb
add
das
and
out
mov
movsb
xor
or
add
add
pop
mov
add
add
add
add
dec
add
nop
xchg
out
cmp
add
decb
rol
iret
movsl
test
add
add
lret
pop
cld
jne
repnz
jno
adc
icebp
push
inc
add
mov
xchg
cmp
dec
pop
shl
nop
stos
push
repz
arpl
ret
in
mov
add
jp
lds
sub
cmpsb
cli
xor
push
aad
xor
add
cltd
xchg
mov
add
add
sub
add
sbb
loopne
adc
cmp
pop
in
add
out
iret
jnp
scas
xor
cmp
rorl
mov
test
add
shrb
add
add
add
mov
add
add
mov
cmp
adc
add
add
add
sub
and
mov
push
cmp
sub
addl
push
int3
stc
jmp
repz
and
jbe
imul
and
fwait
adc
pop
add
add
rcrb
pushf
or
push
stos
mov
vpsllq
arpl
push
lcall
in
out
xor
and
mov
sbb
cmp
add
add
icebp
popf
xor
jg
jns
jbe
daa
pop
imul
pop
sbb
mov
mov
mov
and
pop
sub
imul
dec
out
das
mov
add
add
push
jns
pop
scas
lds
rcr
inc
mov
xlat
dec
xor
sbb
adc
stos
fcmove
add
add
shll
std
repz
add
add
add
mov
mov
js
insb
add
add
add
adcb
sub
ds
mov
test
pop
orb
cli
ja
mov
mov
imul
add
add
xchg
mov
mov
jb
pop
aas
pop
jg
aas
sbb
aad
insb
add
add
cmp
mov
add
add
dec
mov
add
adc
jns
add
add
mov
outsl
xor
das
push
movsb
xorl
xchg
clc
sbb
popf
sub
add
add
inc
inc
nop
push
adc
xchg
or
add
add
repz
repnz
dec
add
add
pop
mov
sbb
adc
gs
sub
lds
xor
or
and
push
in
pop
cmc
mov
mov
dec
xor
inc
cmp
mov
adc
adc
dec
add
add
pop
cmc
pop
nop
or
mov
fwait
mov
mov
enter
ljmp
add
int
fisttps
mov
outsb
push
fidivs
pop
in
fsubrs
add
add
xor
jmp
add
fstpl
nop
push
loope
sbb
add
add
sub
mov
and
and
add
add
dec
scas
and
hlt
out
and
mov
add
add
add
cs
add
add
data16
mov
mov
fists
imul
js
mov
stos
mov
imul
les
add
add
shll
mov
sahf
xchg
push
xchg
inc
jns
cmp
add
adc
add
jns
add
add
leave
out
sti
xchg
inc
add
add
in
pop
add
dec
scas
insl
cs
sub
sub
adc
mov
inc
in
add
push
push
adc
xchg
sub
add
add
aad
into
lahf
inc
add
pop
aad
add
test
in
add
lret
mov
inc
add
add
out
or
scas
daa
in
and
mov
fmull
lea
xchg
into
and
mov
inc
cmp
mov
das
mov
xorl
xor
out
push
test
cltd
negb
movsl
int
test
mov
xor
pop
sub
mov
mov
add
add
dec
cs
xchg
adc
add
sub
add
mov
pushf
cli
cmp
dec
andl
inc
pop
repnz
insl
ja
mov
test
bound
fiadds
add
dec
add
xchg
lock
or
and
push
roll
enter
sub
mov
add
add
cltd
js
pop
flds
mov
in
aam
mov
leave
movsb
loop
into
and
add
add
add
add
sbb
imul
cli
addr16
pop
or
mov
xor
rol
movb
loope
xchg
jmp
cs
add
add
in
mov
and
add
add
sub
add
add
mov
lret
cltd
lock
xor
sti
fwait
insb
add
setle
hlt
or
mov
int3
ljmp
into
into
sbb
adc
sub
xlat
lds
mov
jmp
andb
or
add
add
daa
clc
sbb
pop
in
xor
jle
push
and
mov
add
lcall
cmc
mov
add
lret
shlb
cmp
mov
adc
pop
pop
adc
das
mov
add
sarb
in
stos
and
mov
sbb
mov
pop
ss
adc
mov
mov
ret
adc
in
lods
xchg
out
xor
sahf
pop
pop
adc
mov
mov
adc
sbb
add
xlat
lcall
pusha
add
inc
lods
movsb
or
cwtl
outsb
shlb
test
or
jle
push
xchg
push
mov
lods
xchg
addr16
mov
pop
add
clc
sbb
add
pop
mov
lea
add
add
jl
enter
mov
fwait
nop
sbb
mov
test
pushf
push
lahf
scas
inc
out
add
jo
stos
xor
out
jno
rcll
mov
lods
sub
add
add
add
add
mov
fildll
fmul
jne
sub
xor
adc
jne
inc
add
add
push
cmp
sub
call
adc
mov
add
add
push
dec
or
push
sub
add
add
into
inc
arpl
jl
pop
xlat
jl
jbe
jne
mov
jnp
test
add
pop
sbb
jo
out
in
xchg
aad
mov
sub
add
add
add
add
mov
fmull
inc
add
fstps
adc
add
add
cbtw
or
add
dec
mov
mov
jmp
jge
inc
sbb
dec
xor
xor
add
add
in
popf
enter
inc
insl
mov
pop
cmp
lretw
xor
and
mov
stos
inc
jbe
fbstp
add
add
push
or
ja
cli
pop
sahf
fimuls
test
lahf
dec
loopne
add
add
dec
push
outsl
rcll
cmc
sbb
icebp
mov
xchg
adc
adc
cmp
xchg
push
mov
add
push
jmp
push
xchg
mov
or
push
jle
sahf
in
dec
add
or
add
add
xchg
add
add
repz
add
add
orl
sbb
ja
gs
insb
add
add
dec
add
and
mov
pop
cmp
in
fwait
xor
icebp
data16
mov
mov
sti
push
ja
test
adcl
aad
inc
mov
cmpsl
inc
fildll
pop
call
aad
add
add
add
lahf
sbb
xor
add
add
stos
notl
sub
cmp
inc
add
add
pushf
jecxz
nop
ss
ficoml
add
sub
std
lret
sbb
inc
dec
into
push
jl
cmp
fisubrs
push
sub
dec
out
inc
mov
mov
lret
rol
lahf
and
cmc
in
movsb
mov
stos
jbe
xchg
ja
enter
mov
mov
inc
add
add
idivb
orb
pop
xchg
and
mov
add
test
pop
push
sbb
dec
je
jnp
fstps
sub
add
xchg
popl
add
add
add
add
aaa
test
add
xor
pushf
leave
xor
mov
add
in
arpl
add
jmp
adc
shll
mov
out
xchg
pop
dec
aas
sub
add
add
ret
aam
je
push
fstps
add
add
jb
sub
add
add
and
add
add
add
add
add
add
js
pusha
add
aaa
dec
add
lods
and
add
add
fcomps
movsb
xor
fistpll
stos
insw
cmpsb
sbb
out
lret
add
add
and
mov
iret
push
xor
call
add
inc
add
add
fsubrl
mov
daa
cmp
inc
jp
in
movsl
mov
lahf
jo
jle
push
mov
pusha
add
push
jno
out
lock
addr16
add
add
loopne
lret
mov
imul
or
xor
sub
add
add
add
jle
mov
subb
jmp
jne
cld
pop
mov
sbb
or
xor
inc
repz
pop
mov
inc
loopne
and
std
sub
xor
add
inc
push
in
std
xlat
pop
clc
jb
add
add
aas
push
fwait
je
lret
pop
scas
imul
add
mov
outsl
add
add
add
add
add
test
xchg
dec
add
or
add
add
in
test
add
add
cmpsl
or
ljmp
add
ret
je
jo
decb
xchg
clc
mov
or
add
add
mov
pop
sti
enter
mov
add
mov
jb
repz
pop
mov
or
cmpsb
jne
xchg
pop
dec
mov
push
stos
push
addr16
fists
add
push
pushl
jg
sbb
sub
cld
in
popa
mov
cmp
cmpsl
ret
mov
movsb
mov
out
adc
xchg
fistps
divb
bound
lock
cmp
add
fcmovnbe
loope
dec
mov
add
adc
jge
icebp
imul
xchg
outsl
or
mov
push
in
mov
imul
adc
mov
adc
andl
add
add
test
pop
and
mov
cmp
jmp
ljmp
add
pop
xor
lods
insl
xchg
push
lret
into
fstpt
push
movsl
cmp
mov
cmpsb
test
xor
dec
test
add
shll
add
jp
ljmp
xor
in
dec
add
sub
add
add
add
stos
inc
add
add
mov
xor
mov
aas
jmp
mov
xor
add
fistps
movsb
fcoml
pushf
lock
push
int
imul
lods
dec
add
add
fwait
push
jle
sti
dec
add
add
inc
mov
xchg
xchg
jo
push
cwtl
mov
add
and
add
cmp
push
push
lahf
jle
cmpl
notl
push
int3
addr16
pop
jne
mov
mov
pop
test
test
call
mov
add
mov
jns
ds
sub
mov
and
int
test
dec
outsb
stos
dec
jecxz
ds
add
add
mov
lahf
or
hlt
shrl
add
pop
pop
xchg
xchg
out
and
ret
fbld
inc
jo
add
push
add
pop
xchg
adc
and
push
xchg
fstps
aas
aad
call
fistpl
scas
adc
bound
leave
mov
add
add
or
mov
sub
fcmovu
scas
pop
add
xor
push
pusha
add
add
mov
pushf
insl
xchg
ja
add
add
gs
add
cmp
jno
into
mov
rcl
jge
mov
xchg
repnz
mov
jg
or
mov
inc
test
inc
add
mov
dec
push
mov
mov
add
add
add
lds
shll
add
add
adc
jno
adc
add
stos
das
shl
dec
add
aad
add
add
xor
out
xchg
insb
add
in
ss
dec
add
sub
mov
mov
jb
lods
pop
pop
xor
js
in
inc
or
fwait
les
leave
test
push
xor
push
adc
adc
roll
fistpl
xor
es
add
mov
pop
mov
and
bound
scas
sbb
xor
push
std
jmp
pop
xchg
rcll
sarl
add
mov
sub
mov
dec
sbb
out
sbb
fiadds
add
xchg
ds
dec
add
adc
in
and
mov
ret
das
and
sub
scas
adc
mov
add
mov
mov
add
add
dec
add
mov
bsf
adc
xchg
stos
jg
fcomps
insl
or
cs
test
add
sub
mov
cmp
pop
cwtl
or
roll
stc
lcall
lea
push
mov
add
fwait
xchg
pop
fisubl
or
pop
push
xor
cli
sub
imul
mov
sub
das
int
scas
stc
push
cmc
push
adc
sbb
lahf
inc
sbb
lcall
fmull
test
icebp
xchg
ljmp
add
add
add
dec
push
test
jmp
xor
cwtl
xor
loop
sub
cmpsb
lea
je
pop
dec
sub
add
add
lret
loope
gs
rclb
push
pop
push
mov
push
pop
fmull
sbbb
xchg
and
jo
clc
mov
fsubrs
add
add
mov
in
jg
mov
xchg
adc
inc
movsb
fsqrt
imul
xchg
cmp
in
es
mov
push
test
sub
pop
fstl
add
mov
add
add
add
ret
jb
pop
inc
push
rep
cmp
add
add
aaa
gs
inc
add
push
cmp
or
add
add
add
aas
sti
shrb
add
fisubrs
jae
add
push
jp
mov
cmp
mov
jmp
pop
test
in
or
add
add
shll
jne
jne
out
rcl
jb
cmpsl
scas
int3
pop
xchg
outsb
push
adc
jo
xchg
aad
imul
pushf
sahf
fwait
imul
ljmp
inc
clc
pop
lret
cmp
jl
add
mov
add
add
adc
adc
add
add
mov
stc
xor
add
add
push
inc
mov
dec
jg
xor
sti
mov
out
faddl
stc
xchg
shrb
xor
imul
add
add
sub
cld
cwtl
push
shll
add
stos
inc
inc
and
lods
and
add
add
mov
mov
pop
rclb
add
es
add
add
add
add
movsl
cmp
add
add
add
jg
add
mov
out
lds
cmc
pop
add
add
ja
xorb
mov
add
inc
ror
jl
xchg
dec
add
add
add
int3
xlat
bnd
stc
pop
mov
scas
xchg
cmc
ja
sarl
xchg
xlat
dec
add
ljmp
mov
push
sub
add
add
dec
add
fstp
or
add
add
add
or
sti
aas
inc
xchg
jno
jnp
je
gs
sahf
popa
rol
dec
lret
mov
pop
and
lcall
xor
add
add
sarl
in
add
add
pop
push
dec
add
lea
out
mov
andl
leave
dec
and
shll
add
test
sub
mov
push
sbb
and
loopne
rcll
outsl
add
int3
cmpsb
xor
xlat
or
pop
push
lock
aam
xor
add
roll
adc
push
cmovnp
add
adc
inc
sti
insb
add
jno
int3
inc
pop
sahf
movsb
sub
sahf
sub
mov
lret
rorb
arpl
add
add
add
xorl
pusha
add
add
add
mov
add
stos
or
and
add
add
add
mov
mov
ja
int
inc
and
imul
add
ljmp
mov
jo
leave
sub
mov
pop
lahf
jge
decl
out
xchg
sarb
sbb
push
xchg
or
add
add
cld
repz
add
add
insb
add
add
and
add
add
jl
out
lahf
fnstcw
jnp
mov
push
cmc
lahf
rorb
sub
add
push
stos
aaa
ljmp
pop
aad
inc
add
add
pop
add
inc
add
add
or
mov
mov
pop
or
hlt
cwtl
idivb
ljmp
lods
mov
push
das
jo
div
stc
scas
sbb
sahf
dec
add
add
lock
inc
jl
sub
mov
xchg
rorl
cmp
add
ds
inc
jb
addr16
repz
imul
test
cwtl
pop
aas
dec
jbe
inc
pop
xchg
inc
adc
rcrl
add
mov
sub
pop
cmpsb
das
and
mov
xchg
clc
mov
mov
jmp
cli
cmp
test
ret
hlt
xchg
fwait
sub
mov
aam
aaa
aad
cmp
mov
stos
push
mov
add
push
sub
fistl
add
adc
add
pop
lods
cli
sti
lret
sub
js
dec
add
add
out
fcoml
cmp
js
sbb
add
add
cli
jno
mov
shrl
add
add
add
sub
add
add
add
add
in
mov
clc
add
add
add
add
cmp
out
sub
adc
add
out
pop
mov
loope
jmp
in
inc
iret
pushf
cld
sub
xor
ret
add
adc
enter
dec
mov
push
xor
sbb
push
jl
inc
mov
sbb
cmp
add
jns
ja
sbb
xchg
insb
add
add
in
or
jb
sarb
push
mov
mov
outsb
clc
jbe
cmp
pop
stc
out
xor
xchg
pop
mov
or
fwait
pop
les
mov
fcomp
adc
ja
sub
sub
mov
and
jge
pop
test
add
add
mov
dec
stos
cltd
jmp
into
int3
inc
mov
mov
lret
hlt
dec
xchg
jno
mov
jmp
add
add
lret
sbb
sbb
not
je
mov
add
and
mov
aaa
or
insl
pop
add
add
add
cmpsl
add
add
add
add
xchg
push
bound
mov
lret
dec
add
add
add
add
add
add
add
jg
into
mov
lds
stos
fldt
adc
lea
push
jp
in
inc
sbb
add
lret
sarl
add
xor
xor
xchg
pop
shl
in
stos
mov
pop
in
inc
add
add
lret
add
add
cmp
das
movl
ds
sub
add
add
in
lods
pop
xchg
test
add
imul
aaa
nop
pxor
dec
dec
add
push
dec
add
lahf
fsubrl
cwtl
test
jb
aam
fcomip
mov
add
add
add
xor
xor
xlat
scas
mov
sbb
cmp
mov
je
fsub
push
out
pusha
add
add
cli
mov
xchg
push
daa
orl
mov
push
mov
mov
add
cmp
pop
lcall
xchg
jmp
repnz
add
add
add
jecxz
xor
sbb
add
add
jne
jl
ds
divl
xchg
mov
aaa
sbb
mov
sbb
cmp
cmpsl
clc
mov
add
xchg
lret
hlt
orl
aas
fcmove
mov
sbb
in
pop
jg
cmp
lods
pop
fdivr
push
loop
int3
jmp
call
add
jo
pop
cld
cmp
test
cmp
imul
dec
loop
test
mov
jg
loopne
mov
testb
add
stos
mov
add
mov
xchg
xor
in
fnstenv
pop
mov
xchg
mov
cmp
mov
mov
jmp
add
icebp
cli
mov
xchg
jbe
lock
repnz
inc
mov
jno
mov
jmp
rorb
sbb
std
out
inc
into
addl
and
or
dec
lods
mov
mov
repz
and
add
add
out
xor
jmp
cs
inc
lcall
mov
sti
pop
cmpsb
fiaddl
mov
adcb
xchg
sub
mov
lret
sar
imulb
ja
xor
add
add
add
pop
mov
rcrl
mov
jbe
and
mov
sbb
inc
mov
xchg
dec
add
out
xchg
insl
jge
int3
dec
lds
fwait
push
add
pop
fsubp
ss
pop
scas
jne
adc
icebp
cli
mov
xchg
mov
loope
test
and
mov
lret
mov
int
add
cmp
dec
les
lods
lret
cmp
push
mov
stc
rorb
mov
inc
add
jp
cmp
add
and
scas
or
add
add
mov
push
stos
sub
enter
aad
out
push
imul
add
add
les
xor
sar
call
and
add
or
mov
jg
mov
shl
mov
add
add
fsubrs
add
shrb
xchg
push
int3
xor
push
dec
or
xor
mov
cmp
cmpsb
movsb
xchg
add
add
jp
push
and
mov
dec
ds
mov
aad
push
jo
stos
adc
mov
subb
add
sbb
xchg
push
mov
inc
popf
mov
pop
jno
pcmpgtd
incb
adc
mov
inc
jl
sub
mov
or
mov
ret
call
mov
mov
push
xor
adc
pop
add
mov
subl
add
add
sub
jmp
pop
sbb
jl
sub
mov
and
add
mov
add
repz
nop
or
mov
dec
push
int
and
mov
mov
sub
add
add
add
sti
cli
enter
mov
inc
push
loope
mov
cmc
lea
jb
aad
aad
add
add
test
aam
and
lret
or
std
inc
and
data16
sbb
lcall
sub
mov
mov
inc
ret
xchg
add
add
push
in
add
mov
inc
loop
add
add
and
inc
add
add
add
add
pop
cli
rcrb
dec
aam
mov
and
insl
pusha
add
add
cmp
mov
add
add
stos
lahf
mov
add
add
add
pop
add
mov
loope
dec
add
add
gs
mov
xchg
mov
add
inc
dec
push
cmp
test
dec
add
push
adc
mov
add
add
adc
jmp
inc
cltd
inc
mov
les
xchg
sbb
xor
repnz
loope
lret
jg
cmc
enter
ret
xchg
mov
sbb
loopne
sub
mov
mov
jge
shrb
cmp
xor
mov
mov
add
or
add
xchg
jae
jo
jp
adc
inc
add
stc
mov
sub
push
jbe
xchg
push
mov
mov
mov
lahf
movsb
xchg
xchg
cltd
in
xchg
pop
cmp
add
jecxz
mov
int3
ss
push
ds
iret
sahf
mov
dec
in
jb
sbb
ja
pop
iret
dec
mov
stc
aad
mov
imul
mov
imul
xor
mov
add
add
mov
add
add
leave
cmp
pop
data16
mov
popf
cmp
xor
pushf
mov
mov
xchg
push
stc
daa
push
fidivl
pop
add
sbb
add
cli
pop
addr16
sub
sub
xor
repz
mov
mov
outsb
popl
add
add
outsb
adc
pop
fcomps
cld
fiadds
mov
jle
pop
sub
add
add
test
add
mov
mov
cmp
pop
inc
pop
addr16
fsubrp
sti
adc
mov
cmp
dec
mov
pop
insb
add
add
repz
mov
or
push
xchg
and
add
add
shrb
ljmp
sbb
insb
add
scas
into
push
data16
in
xchg
jns
or
jae
repnz
sar
lea
push
adc
jo
inc
cltd
adc
push
testb
xor
add
add
add
jne
popf
mov
jne
sbb
push
negb
inc
or
mov
add
add
sbb
adc
or
dec
inc
je
xor
sub
dec
jp
sbb
fistps
cmp
jmp
divb
xchg
add
mov
add
add
push
add
add
add
sub
mov
stos
movsb
pop
xchg
and
mov
sbb
std
xor
jo
xor
pop
cmp
add
clc
sbb
pusha
add
push
dec
test
mov
xchg
idivl
pop
mov
into
jbe
add
add
push
push
aas
insl
jg
int
fstpt
ret
out
mov
gs
mov
jle
push
mov
add
incb
shl
add
flds
pop
pop
dec
add
add
fwait
xor
adc
flds
add
add
out
cmp
sub
add
add
add
jns
fsts
jbe
cwtl
and
xlat
cli
cwtl
test
xchg
mov
sbb
cld
pop
push
add
rol
push
jecxz
sub
add
add
lret
loope
cltd
mov
sub
add
add
movsb
xchg
repz
mov
cmp
mov
add
in
add
mov
push
and
add
sub
pop
pop
xchg
insl
mov
add
outsb
jge
std
mov
mov
add
mov
in
xor
add
sbb
fmul
dec
ret
push
mov
idivb
movsbl
shll
lea
cld
aad
mov
das
lods
int
mov
or
xor
nop
mov
push
stos
jno
dec
add
add
lock
add
add
add
pop
ljmp
jmp
rcrb
sahf
mov
jmp
fucomp
test
rcll
sarl
int3
repz
cmp
lea
jb,pt
dec
inc
add
pop
or
add
add
pop
xchg
push
adc
pushf
fstps
xor
js
pop
add
bound
sub
pop
or
xor
add
rcl
sub
add
add
mov
pop
mov
lret
pop
jp
add
add
adc
cs
shl
add
sbb
test
add
add
pop
int3
cmp
nop
xor
std
dec
add
add
push
cmpsl
mov
jmp
sub
add
add
enter
imul
sbb
add
sub
mov
push
test
mov
in
inc
aad
data16
mov
mov
jecxz
add
outsb
jbe
jg
push
cs
stc
mov
xor
jg
xchg
fldt
push
sbb
std
mov
jg
add
add
sbb
jg
dec
xor
sbb
dec
add
add
push
lahf
jae
add
add
add
add
mov
xchg
frstor
js
in
clc
daa
dec
add
add
inc
bound
add
addr16
fstpl
arpl
add
in
arpl
xchg
dec
mov
add
jle
loop
push
mov
call
fwait
jne
out
stos
shlb
in
mov
add
add
loope
xor
cmp
xchg
jmp
or
call
xchg
pop
jbe
cmp
inc
lds
mov
rcll
jns
xchg
pop
cmp
es
xor
sbbl
add
lret
enter
push
jno
dec
cwtl
js
dec
xchg
add
fnstsw
inc
add
add
imul
cli
mov
add
add
lahf
add
xchg
nop
loopew
sub
movb
mov
aad
stc
mov
lea
add
add
andb
pop
aas
movsb
sub
mov
push
adc
add
test
inc
cmc
and
int3
push
cmpsl
adc
mov
and
add
sbb
mov
and
sbb
pop
xor
sub
pop
inc
adc
pop
adc
add
cmp
jnp
add
add
add
add
add
sbb
xchg
movsl
xor
cltd
push
or
mov
pop
ret
fistpll
add
sti
or
push
xor
icebp
adc
sbb
test
mov
mov
add
add
mov
stos
lods
xorb
add
xchg
pop
pop
loopne
add
add
cmp
lods
jns
and
mov
cld
adc
add
add
inc
jno
dec
jl
fwait
out
out
iret
aam
pop
cmp
add
mov
add
mov
jge
jnp
mov
add
add
lds
pop
in
and
add
add
xchg
mov
jb
mov
cmp
leave
mov
or
lods
sub
test
jl
adc
sti
pop
idivl
loope
inc
or
ljmp
test
or
add
add
mov
popf
or
add
add
adc
mov
push
outsl
inc
jl
push
push
dec
add
add
mov
shl
jmp
rorl
repnz
add
add
dec
add
add
les
xor
out
les
lcall
add
or
push
loopne
xchg
addr16
clc
and
mov
mov
aas
into
sub
pusha
add
sub
add
pop
adc
pop
sti
add
jge
data16
sahf
orl
add
insl
test
add
add
mov
aaa
xchg
dec
add
bound
add
add
dec
addr16
add
js
mov
scas
outsl
dec
fstl
dec
add
and
mov
test
add
cmp
push
mov
adc
lret
push
lahf
scas
push
imul
pop
sbb
movb
add
mov
insl
push
ret
xchg
int
mov
int3
cmpb
push
ret
roll
push
ja
clc
mov
push
mov
nop
iret
test
or
mov
mov
pop
cmpsb
addr16
int
mov
mov
call
fsubrs
add
iret
rorl
mov
add
loope
mov
popl
add
sub
mov
push
jbe
mov
mov
adc
fdivs
std
xchg
mov
imul
jb
aad
ljmp
add
adc
loop
lret
cmp
fcmovu
push
pushf
fistpl
subl
out
mov
cmpl
addl
mov
test
dec
test
add
add
add
push
sub
cmpsl
aaa
into
mov
add
ret
mov
add
add
add
cmpl
jle
lahf
inc
pop
mov
push
shl
fstl
add
fstl
outsb
add
add
add
add
mov
add
add
ljmp
fdivrp
cmpl
mov
add
add
xlat
xchg
fidivrl
xor
jns
pop
xchg
ret
add
rcrl
ds
xchg
adc
fdivrl
rcrl
pop
bound
lcall
add
add
add
jns
dec
cltd
sub
xorb
add
add
xchg
add
lea
add
inc
orl
add
and
add
add
in
push
mov
into
cmp
push
aaa
js
outsb
scas
cli
jnp
add
cmc
mov
mov
test
xor
add
lea
out
lea
inc
cmp
mov
push
rcr
xlat
fwait
sbb
fdivr
imul
cmc
call
xor
divb
inc
add
mov
aad
mov
hlt
leave
data16
fstl
push
fucom
jno
and
fdivrl
pop
leave
jb
ss
adc
dec
add
stos
mov
lods
xchg
cmc
bnd
pop
cmc
stos
jns
cwtl
jecxz
adc
test
fsubrs
add
push
pop
inc
xchg
mov
add
sub
dec
add
add
add
mov
lods
data16
mov
add
add
add
jo
aad
add
popa
out
iret
addl
pop
push
into
pop
xor
fsubs
scas
add
fcoms
inc
add
add
xor
mov
dec
rorb
add
add
add
add
stos
mov
bound
add
pop
mov
and
mov
test
mov
mov
jo
out
fdiv
inc
push
sub
add
lahf
mov
mov
mov
pop
add
add
xchg
jg
add
add
add
aas
test
rcr
push
mov
scas
or
add
add
sub
xchg
adc
lods
mov
sti
jnp
sbb
add
sub
mov
push
dec
shr
lea
or
fwait
out
lcall
pushf
xor
add
mov
daa
gs
mov
or
add
add
lds
xor
in
dec
hlt
cmpsb
scas
push
mov
mov
dec
mov
or
add
add
pop
push
xlat
dec
shlb
xor
inc
repz
cmp
sti
ret
call
add
and
mov
loope
jecxz
ja
mov
xor
test
adc
sbbl
inc
lret
movsl
pop
mov
add
mov
loopne
xchg
gs
inc
add
sahf
jmp
add
mov
or
add
add
mov
cmpsb
clc
adc
mov
lods
shr
aas
xor
fcomi
iret
push
jns
pop
icebp
dec
cvtdq2ps
sub
mov
inc
xchg
sub
add
pop
stos
adc
fwait
pusha
add
add
ljmp
push
lret
or
lods
or
mov
add
movsl
add
outsl
sbb
loop
addr16
sahf
or
pushf
pushf
push
push
call
lds
add
sub
cmc
inc
jnp
push
cmp
add
repnz
ljmp
sub
add
add
imul
lea
cltd
or
jmp
shl
mov
enter
daa
movb
add
add
add
add
add
add
cmp
push
imulb
loopne
cmp
push
lea
ret
rorl
mov
sti
inc
add
cs
ljmp
or
outsl
push
aas
cmp
add
inc
rclb
jp
jecxz
xchg
push
lret
mov
outsl
sahf
push
xor
xor
aaa
cmp
add
negb
dec
add
inc
cld
test
mov
xchg
jmp
adc
fidivrs
pop
push
jmp
sub
clc
cwtl
jecxz
aad
popa
mov
dec
dec
sbb
add
mov
popf
adc
mov
scas
add
adc
fidivl
pop
mov
mov
add
add
push
imul
out
xchg
lods
movsw
call
inc
nop
fildll
xchg
sarb
or
mov
std
inc
mov
add
add
lcall
mov
inc
mov
xor
daa
leave
xchg
sub
xor
hlt
loopne
mov
xor
cmp
fiadds
cmp
xor
mov
inc
add
loope
imull
cmp
bound
fmul
mov
testb
xor
inc
or
jo
add
add
jo
push
sbb
jne
xchg
je
popa
loop
test
pop
or
mov
lods
sbb
shlb
mov
pusha
add
or
mov
arpl
push
pop
mov
in
mov
leave
in
mov
add
add
lret
imul
add
add
add
mov
adc
pusha
add
add
dec
add
inc
add
add
std
mov
arpl
inc
sub
fmull
add
add
movb
clc
or
add
add
shlb
in
add
lds
mov
or
jns
add
xor
cld
xchg
inc
add
add
xchg
mov
das
cmp
add
xor
or
add
add
jp
call
add
jge
imul
push
es
add
add
shll
add
add
jecxz
mov
xchg
sub
add
add
addr16
imul
mov
or
add
add
or
pop
popa
aam
mov
inc
cltd
jecxz
ds
dec
add
push
fistpl
dec
add
add
add
add
add
add
jae
fcoms
adc
pop
sahf
js
shrb
insb
add
add
idivb
adc
adc
out
outsl
adc
lods
dec
adc
push
mov
add
add
jb
inc
mov
xlat
inc
push
fldl
push
or
sahf
insb
add
add
into
jne
in
jne
fwait
jne
push
jp
adcb
xchg
jp
enter
mov
xchg
jle
inc
adc
mov
pop
xchg
mov
scas
jbe
cld
mov
insb
add
add
push
sbb
sbb
and
add
add
pop
scas
lahf
cltd
xor
jae
shr
gs
adc
add
mov
jle
sub
add
add
outsl
outsb
push
shll
mov
pop
sub
jp
inc
adc
stc
lea
add
add
add
add
arpl
xor
daa
pop
cld
jbe
mov
cmc
sahf
sub
popl
xor
jae
inc
sub
add
add
repz
imul
mov
dec
out
push
and
mov
xchg
add
add
gs
mov
dec
insb
add
in
add
add
dec
add
sub
call
repz
movb
imul
pushf
imul
mov
mov
fwait
push
lock
call
leave
lods
enter
pop
jbe
jp
lods
sub
add
add
inc
mov
push
xchg
add
adc
or
add
add
sbb
adc
daa
sub
mov
addl
ja
fisubrl
pusha
add
add
sub
add
add
mov
add
add
add
and
sub
add
add
mov
pushf
xchg
sbb
js
pop
xchg
xor
mov
stc
adc
jg
scas
data16
in
adc
ds
mov
loopne
xchg
dec
dec
and
repnz
jg
test
rorl
sub
outsb
mov
outsl
insb
add
pop
push
mov
adc
pop
mov
add
sub
jnp
ret
ret
dec
add
sub
push
xor
fcomps
inc
mov
test
inc
jecxz
sahf
jmp
jmp
scas
sbb
aaa
jo
enter
add
add
fcmove
mov
add
mov
xchg
jne
loop
call
xor
arpl
jecxz
add
add
andb
test
adc
add
add
or
add
add
outsb
cmp
test
pop
fnstenv
cltd
arpl
xor
sbb
sbb
jg
push
sub
shll
shr
dec
aam
dec
daa
insb
add
fisubs
add
add
add
scas
inc
add
jecxz
inc
scas
pop
adc
dec
aas
fstpl
fistl
lahf
nop
out
add
add
test
add
cs
std
mov
add
mov
std
pushf
repnz
mov
data16
stos
aam
mov
lret
push
shl
mov
mov
mov
mov
add
cmpsb
fisttps
xchg
pusha
add
add
es
sub
mov
push
ss
daa
sti
dec
add
and
mov
cli
shr
inc
lods
mov
fcompl
mov
movsl
xchg
movsl
mov
shlb
lds
imulb
sbb
inc
add
add
dec
push
add
add
add
add
insl
into
sub
mov
ds
ret
loopne
mov
adc
lods
adc
add
add
add
or
add
add
test
add
add
or
mov
mov
fucomp
xchg
dec
xchg
jle
scas
stos
push
mov
fisubrs
or
mov
inc
dec
sub
cwtl
jns
int3
jnp
push
add
outsb
pusha
add
push
jbe
sub
mov
mov
add
sbb
out
fdivrl
add
inc
add
add
jp
add
sub
add
outsl
andl
add
xor
cli
and
mov
pop
mov
or
mov
fnsetpm(287
shlb
add
cmp
sar
dec
mov
sbb
aad
xchg
mull
add
add
sub
add
add
add
jb
arpl
sti
adc
aas
xor
lods
daa
xor
cmc
and
mov
roll
adc
xchg
pop
imul
loop
fcomip
mov
jb
lods
in
pop
jno
ja
and
add
add
add
scas
xor
psrld
add
xor
inc
xchg
aad
mov
jmp
and
cld
inc
std
inc
pop
leave
rcrl
lea
cmp
mov
mov
xchg
mov
xchg
subl
cltd
arpl
mov
inc
pushf
sbb
push
cmp
and
mov
pmulhw
add
js
stos
xor
and
negb
jno
or
mov
xchg
subl
add
sbb
scas
ss
mov
dec
add
push
or
lods
cmpl
out
add
add
mov
inc
enter
mov
lock
adc
and
aam
xor
sbb
mov
rolb
add
sahf
push
scas
fcmovb
lods
inc
add
bound
cmc
popf
jmp
jb
sub
add
test
add
adc
insl
ss
cld
inc
and
jne
fincstp
and
fucomp
mov
cmp
inc
add
add
js
outsb
push
shl
cmpsl
adc
sub
icebp
repnz
mov
imul
out
jle
cmc
data16
mov
sub
sbb
les
jmp
xor
push
jbe
xor
jmp
pop
mov
add
dec
cmp
add
xchg
stos
inc
dec
add
add
lret
mov
inc
movsl
lret
jbe
push
loopne
jl
dec
add
add
es
mov
add
repz
or
add
add
mov
add
add
add
clc
scas
movsb
jno
shll
ret
pushf
int3
add
out
test
or
mov
add
lret
mov
incb
addr16
mov
mov
mov
cmp
imul
add
add
push
push
pop
lods
inc
and
pop
loope
cs
mov
add
sbb
sarl
pushf
orb
mov
mov
jnp
pop
jnp
fisttpl
test
add
mov
mov
sbb
in
jl
jge
push
xlat
dec
adc
push
push
inc
pop
stos
cli
rclb
adc
mov
add
test
cmpsl
fwait
test
mov
enter
add
fdivs
movsl
and
ret
pop
inc
inc
mov
outsl
clc
enter
push
adc
movsb
xchg
inc
iret
out
imul
pop
add
add
add
mov
loopne
fistl
add
add
or
mov
mov
adc
jbe
outsl
dec
outsb
push
into
xlat
dec
xor
xor
add
adc
dec
adc
mov
add
popf
fnstenv
add
mov
in
add
add
rclb
pop
ds
sub
mov
scas
push
ljmp
adc
add
sbb
xchg
cmp
adc
adc
or
cli
mov
sbb
add
sbb
add
add
jmp
add
add
add
and
mov
lds
or
je
movsl
shlb
pop
add
mov
mov
pop
xor
fnstcw
cmpb
add
or
mov
add
add
out
mov
cmp
lds
push
or
add
add
mov
shl
pop
test
mov
and
add
add
or
lods
mov
sub
lret
inc
out
ja
insb
add
adcb
sahf
mov
cmp
sub
scas
lods
jp
mov
add
mov
xchg
push
adc
xor
or
mov
add
add
xorb
imul
in
or
mov
mov
push
lds
insl
cmp
fidivrs
scas
stos
xchg
notl
jo
jo
add
mov
dec
add
add
int3
push
sti
cli
push
push
loopne
leave
xchg
cmpsb
iret
shl
stos
in
sbb
popf
fistpll
inc
ficoms
icebp
pop
sub
add
mov
sbb
jns
add
add
dec
add
push
jecxz
add
push
push
sub
mov
add
fdivrs
add
add
sub
xchg
pop
jecxz
xor
mov
inc
and
pushf
in
popa
add
shr
xor
jno
lret
sbb
icebp
cs
cld
add
add
pop
push
adc
dec
aad
mov
scas
movsb
mov
pop
pop
inc
add
jl
aas
test
jg
cmpsb
push
inc
mov
or
mov
add
add
add
add
add
add
loope
leave
hlt
aaa
sub
or
mov
mov
add
lcall
mov
incb
add
iret
js
jl
cld
imul
xor
enter
cmpsb
mov
cli
jae
sbb
sarl
push
push
pop
in
pushf
fistpll
lock
rolb
and
inc
xor
cmpsl
cltd
jle
add
enter
int3
mov
sar
cmp
test
sbb
mov
xorb
jle
aam
pop
cmp
movsb
into
popf
int3
add
movsl
mov
mov
add
add
add
mov
jbe
insl
out
xchg
es
pop
pop
push
imul
pusha
add
out
jnp
xchg
outsb
sbb
lret
icebp
push
loope
pop
push
in
jg
inc
or
add
fbld
rcrl
jno
jnp
hlt
sbb
jae
add
add
and
jle
xchg
push
shll
lods
jae
test
fisttps
add
movsl
and
les
xor
pusha
add
cwtl
sahf
jns
sub
out
xchg
cs
add
add
add
sub
adcb
les
cmp
loope
xor
and
mov
adc
loopne
pop
inc
add
stc
ds
xor
inc
stos
fldcw
add
out
push
lahf
in
xchg
jbe
ret
lret
sub
rcrb
cmc
push
inc
xchg
adc
sbb
fcomp
mov
les
pop
adc
cmp
jge
cmpsb
jo
aaa
lea
mov
ljmp
out
xchg
sub
add
add
jns
pop
out
test
fistpl
add
add
notb
jae
jmp
lds
sub
add
add
gs
xchg
sub
lahf
ljmp
pop
mov
clc
pop
xchg
iret
js
or
jnp
ss
mov
mov
mov
and
or
add
inc
ret
add
mov
jle
sub
sbb
sbb
add
cmp
push
inc
fistpl
in
add
push
adc
push
call
add
subb
jge
add
add
cmpsl
insl
sbb
jns
add
dec
mov
dec
lcall
test
mov
adc
rcr
add
add
add
dec
dec
add
mov
jb
in
inc
cld
ljmp
test
shlb
fadds
mov
rcll
imul
loop
sbb
out
fisttpl
inc
add
add
xor
or
arpl
sbb
stc
or
ret
clc
xlat
jmp
add
rcrb
sub
movsl
dec
or
push
xchg
push
sbb
in
in
and
mov
inc
jg
adc
mov
cmp
mov
lods
jp
pop
aad
std
mov
mov
rol
mov
scas
idivl
dec
outsb
fadds
cmp
and
jns
icebp
scas
cwtl
movsb
inc
sbb
add
insb
add
add
ja
push
mov
add
mov
mov
stos
mov
negl
pop
push
inc
mov
cmp
add
cmp
cmp
andb
add
add
clc
and
add
add
sbb
movsb
fidivrs
add
add
jo
xchg
aas
fwait
orl
inc
add
add
xchg
lcall
add
add
add
cwtl
std
insb
add
ja
cmpl
in
dec
add
mov
add
adc
sbb
push
mov
pop
or
or
ss
movsb
dec
pusha
add
jno
ss
cli
lret
and
mov
mov
test
push
add
mov
test
cmp
add
add
fisttpll
fcompl
lahf
lea
lahf
in
lahf
aam
and
pop
cmp
push
cmp
mov
mov
call
add
test
std
inc
xchg
cmp
add
push
nop
jae
jecxz
inc
add
add
ljmp
add
xor
sub
add
sub
clc
mov
cli
outsb
xor
int
sbb
bound
adc
xchg
mov
push
cmp
pop
es
test
jle
pop
mov
lods
cli
mov
add
add
fisubl
outsl
imul
push
js
cltd
or
add
add
add
add
nop
cld
inc
pop
mov
add
add
adc
mov
cltd
push
inc
out
xchg
push
push
mov
add
sahf
push
jb
mov
cmp
ss
movsb
xchg
test
imul
out
outsl
dec
addr16
jo
add
add
loopne
jl
or
sub
add
add
or
jne
pop
pop
cmc
and
jno
notb
mov
add
into
aam
and
test
adc
mov
cwtl
pop
out
jne
cmpsl
in
out
psrlw
xlat
out
popa
pop
pop
xor
adc
inc
add
add
push
jge
pop
xchg
ds
scas
ret
mov
adc
enter
nop
jbe
mov
or
add
test
adc
mov
mov
xchg
jle
hlt
enter
sahf
mov
add
add
in
ss
into
inc
cmc
add
add
add
xchg
dec
push
push
sbb
add
add
inc
pop
and
leave
jmp
mov
mov
mov
orb
add
add
xchg
lock
mov
pop
pop
aam
in
cs
pop
add
mov
popa
cwtl
lahf
test
mov
adc
pop
ljmp
outsb
sub
mov
dec
add
or
mov
fldenv
aam
mov
or
mov
shlb
es
popf
js
and
add
add
sbb
add
add
jp
cmp
or
adc
xchg
mov
push
aad
jne
mov
xchg
cmp
xor
cmpb
pop
imul
mov
lret
aad
dec
add
rorl
add
outsl
cmp
fistpl
js
xchg
mov
mov
int3
add
scas
ds
and
push
xlat
int3
arpl
aam
and
test
and
faddl
add
add
repnz
add
xor
dec
shlb
std
jle
mov
inc
add
add
push
scas
pusha
add
add
je
sub
mov
adc
adc
adc
xchg
aaa
insl
dec
addr16
push
xor
jmp
push
cmpsb
insl
xchg
sub
dec
push
sub
test
hlt
push
jae
dec
jmp
jecxz
pusha
add
add
add
lret
cmc
sbb
mov
inc
add
inc
mov
mov
pop
pop
jle
ret
xchg
test
jae
bound
iret
pop
and
mov
imul
cmp
scas
data16
jns
insl
fistl
pop
dec
enter
hlt
xchg
or
mov
pop
mov
sti
js
add
jmp
add
cmp
jp
or
add
add
scas
stos
inc
lea
sahf
ret
addr16
out
pop
aad
xor
stc
and
pusha
add
add
inc
gs
xchg
push
dec
xchg
inc
mov
stos
outsb
data16
mov
loopne
out
adc
sub
push
je
mov
add
add
pop
ljmp
xor
lret
popa
push
add
add
xor
data16
or
int
sbb
pop
adc
sbbb
xor
test
mov
loopne
stc
mov
dec
xor
movsl
mov
mov
into
sti
adc
nop
fnstsw
ss
mov
cltd
insb
add
shlb
mov
push
cmpb
push
fnstsw
jne
xchg
mov
add
add
or
xchg
ljmp
xchg
test
jns
popf
out
sub
mov
jge
mov
add
push
dec
jo
sbb
mov
add
add
imul
sbb
mov
fdivs
fcom
das
adc
bound
add
add
iret
mov
and
lcall
cmp
and
mov
add
js
add
add
add
add
xor
jo
mov
xchg
hlt
lahf
pop
jmp
mov
mov
pop
stos
jg
in
arpl
pop
loopne
xchg
sbb
lret
add
xor
data16
cmp
cli
pop
faddl
push
mov
imul
lcall
test
mov
add
cltd
push
sub
mov
and
push
pop
rolb
stos
inc
add
mov
add
fnstenv
xchg
imul
lahf
lahf
xchg
jl
ljmp
mov
enter
jae
repnz
add
pop
pop
pop
ret
std
cmp
dec
add
add
xchg
inc
add
aas
add
mov
add
sub
test
femms
xchg
roll
sbb
fwait
dec
loop
mov
addb
jmp
lret
data16
dec
add
xor
add
aad
push
jnp
mov
mov
jge
add
add
xchg
cmp
aas
std
push
add
int3
and
xchg
adc
add
shr
icebp
aaa
cmp
pop
orl
mov
sahf
roll
sbb
mov
int3
dec
ja
xor
xchg
jbe
arpl
add
add
and
add
negb
lret
jmp
dec
add
and
out
cmp
lock
mov
stc
sbb
aaa
push
push
out
loopne
cs
cmp
pop
or
add
add
pop
shrl
push
add
rcll
pop
jl
dec
dec
ljmp
lcall
fmul
lods
jae
and
ret
mov
and
mov
xor
xlat
je
pop
jb
decb
sbb
imul
mov
add
aaa
jno
pop
push
push
ret
mov
adc
sub
mov
insl
mov
daa
mov
xchg
shrb
mov
xchg
lods
lcall
add
in
loop
je
and
add
add
ljmp
sub
mov
call
dec
add
add
push
pmulhuw
arpl
bsf
mov
rcrl
imull
hlt
movsb
and
mov
clc
aad
test
lret
testl
adc
and
cmpsb
sbb
ja
aad
jne
add
add
or
mov
inc
cmp
call
push
xchg
xchg
leave
lock
ret
hlt
lahf
out
or
inc
insb
add
add
adc
cwtl
dec
ja
add
jmp
add
add
loope
stos
xchg
and
add
add
jb
jae
xchg
mov
add
pop
das
xchg
jmp
add
add
add
adc
mov
add
inc
data16
stos
js
cltd
jo
into
sub
add
add
xchg
mov
add
add
repz
testl
pop
jmp
add
std
xchg
adc
nop
int3
repnz
rolb
add
mov
add
and
add
add
and
add
add
int
icebp
mov
xchg
gs
repz
add
add
leave
cwtl
and
mov
les
scas
lret
push
jne
movsb
adc
ja
insl
mov
sbb
sub
mov
outsb
orl
fistpll
adc
xchg
sub
int
lcall
imul
mov
push
out
arpl
cmp
add
adc
shlb
cmc
rorl
mov
es
out
adc
mov
leave
cld
push
aaa
fdivrl
add
add
add
and
add
add
ljmp
cmp
push
repz
inc
xorb
aad
loop
les
cmpsl
xchg
sub
mov
mov
sarb
push
mov
adc
add
add
push
mov
dec
jnp
xor
pop
and
add
sub
add
rcll
stos
test
jno
int3
les
add
add
mov
pusha
add
add
mov
jmp
bound
add
mov
aam
pop
mov
leave
lahf
push
ljmp
inc
mov
xchg
sub
add
add
ret
sub
add
add
mov
pop
add
add
add
iret
fisttpll
add
push
orl
xchg
pop
adc
mov
add
add
add
mov
sub
mov
sbb
cmp
mov
cmpsb
lahf
test
add
add
shr
out
pushf
xchg
roll
pop
cmc
arpl
test
sub
outsl
ret
adc
cld
into
cmp
or
mov
aas
nop
dec
add
add
mov
sub
xor
fistpl
add
fimuls
add
add
fisttpl
sbb
and
push
or
inc
add
fsubrs
add
add
xor
int3
inc
in
mov
lods
out
sbb
cmp
rcl
push
cmpl
in
add
add
cli
xlat
addl
xor
sub
loope
xchg
aam
mov
adc
and
add
add
jnp
sub
mov
mov
nop
mov
add
add
add
pop
jne
aas
mov
add
add
insb
add
fldcw
mov
dec
add
cmp
sbb
and
dec
enter
cmp
es
lds
sahf
adc
jmp
mov
push
xor
mov
subb
add
neg
ret
pop
and
add
popf
fdivs
imul
pop
or
add
add
jnp
addr16
fcoms
ljmp
add
add
add
jbe
jge
out
outsb
fmuls
mov
xchg
cmc
push
rorb
add
add
data16
or
mov
repz
retw
adc
fimuls
outsl
imul
lcall
mov
lea
les
add
mov
jbe
xchg
mov
cmp
scas
dec
cs
cltd
lock
and
std
data16
add
add
retw
cmp
out
dec
cmp
jbe
fdivs
xchg
movsb
ret
pusha
add
sub
lds
das
mov
mov
push
add
cltd
sahf
pop
mov
iret
fisubrs
lahf
pop
inc
xchg
addr16
dec
lds
mov
daa
cli
or
test
stc
cmp
leave
loope
mov
add
add
mov
add
popf
jmp
in
dec
mov
mov
mov
add
add
add
adc
jp
add
repnz
mov
push
pop
inc
dec
pop
push
iret
xor
jge
inc
aam
adc
jne
mov
add
lock
hlt
cmp
out
pusha
add
add
in
bound
fbstp
lods
mov
sub
lret
inc
ret
in
int3
inc
repnz
mov
pop
sbbb
push
push
push
mov
add
ss
dec
and
add
add
lods
xchg
ss
mov
add
sub
add
add
sub
loope
xchg
add
add
inc
add
out
sub
adc
mov
out
mov
adc
inc
add
sbb
in
lret
lcall
and
sub
mov
mov
outsb
pop
and
pop
push
fstps
scas
push
and
mov
jmp
or
aas
dec
enter
inc
cmp
mov
outsb
sub
pop
ja
mov
jmp
xchg
idiv
inc
inc
stc
nop
nop
rol
lock
scas
test
mov
inc
packuswb
add
add
test
or
mov
sub
mov
add
add
mov
fstpt
insb
add
add
adc
and
push
in
jle
sub
in
cmp
out
fsubl
jecxz
pop
pop
fwait
jo
js
fists
add
sbb
pushf
je
inc
shrl
outsl
jno
adc
cmpsb
jne
jns
cmp
xchg
xchg
aad
and
pop
mov
push
popf
push
test
mov
aad
add
test
mov
in
lods
push
push
pop
pop
add
add
add
pushf
testw
cmc
mov
pop
jb
js
test
mov
add
add
mov
ja
add
add
or
pop
mov
lret
and
sbb
and
mov
mov
stos
lock
lcall
je
mov
loope
popf
call
pushf
mov
test
push
cmp
add
add
lahf
insl
adc
add
lahf
push
xor
out
xchg
popf
neg
movsl
cmp
cmc
pop
mov
inc
lret
mov
in
jae
das
in
xchg
xor
cmc
movsb
xchg
lods
push
mov
push
ret
jecxz
cwtl
into
rcrl
ret
fsts
mov
leave
push
xor
jmp
or
add
add
sbb
mov
mov
stc
xor
stc
out
jae
push
sbb
jg
sbb
daa
into
jb
adc
add
add
add
add
push
jg
and
add
add
and
mov
mov
outsl
pop
stc
dec
add
add
add
leave
mov
and
cld
sub
add
add
add
add
aaa
jae
xchg
mov
insb
add
add
jge
pop
in
outsb
ljmp
cs
fucomip
ret
and
add
jns
mov
pop
mov
and
mov
dec
daa
and
mov
fsubrl
in
add
sub
ds
adc
test
add
mov
jo
inc
push
je
sbb
hlt
add
add
xchg
iret
bnd
inc
push
sbb
roll
sub
jle
in
out
xchg
and
mov
adc
jg
sub
and
add
add
adc
es
or
mov
add
add
add
push
addl
orl
add
cmp
je
or
and
mov
push
mov
mov
xchg
mov
aas
scas
shrl
add
add
pop
lds
xchg
ror
lret
jg
fsts
sti
div
lods
cs
and
jne
push
in
mov
movsb
push
push
jmp
sbb
jp
les
adc
addl
add
add
sub
enter
jl
push
enter
test
mov
push
in
sbb
mov
les
sti
ror
in
jae
cmpsl
adc
push
mov
sbb
jno
dec
xor
in
xor
out
xor
sub
mov
cmp
sbbb
mov
xor
pop
cmpsb
xchg
sub
mov
add
add
add
push
pop
stc
or
loopne
jp
or
int3
adc
rorb
inc
push
cs
add
add
add
add
cmp
xor
shl
push
loop
add
add
loop
lock
mov
cmpsl
out
xor
push
in
fcmove
push
sarb
sub
inc
xor
add
rol
sahf
sbb
fsubs
js
push
aad
lods
mov
pop
repz
add
mov
lock
mov
mov
aad
ret
cmp
jle
sbb
adc
mov
mov
mov
aam
repnz
hlt
shrl
adc
push
xchg
cmp
icebp
test
xchg
mov
add
add
sub
stc
jl
lds
mov
rcll
call
add
and
sbb
sub
mov
rcll
xchg
mov
sbb
rolb
mov
mov
adc
mov
mov
ror
or
mov
xor
add
mov
insl
mov
xor
add
xchg
sahf
mov
testl
xchg
int
inc
sbb
dec
fxch
mov
lods
add
mov
pop
nop
movsl
in
enter
out
xchg
lret
push
out
lock
or
mov
jnp
in
into
xchg
lods
loopne
aaa
dec
xchg
inc
jno
mov
mov
add
add
imul
fisttpll
cwtl
dec
push
mov
int3
sbb
scas
sbb
outsb
mov
add
jmp
jmp
dec
lods
fdivrp
pop
cmp
mov
jb
testb
mov
insl
ret
test
mov
pusha
add
add
fbld
fstps
out
scas
jbe
daa
cmc
sti
gs
pop
sbb
xor
adc
and
mov
push
push
nop
hlt
sbb
xchg
int
cmp
mov
ror
add
insb
add
aad
xor
add
mov
add
push
loopne
aad
enter
add
add
add
pusha
add
adc
push
add
imul
insl
dec
mov
mov
hlt
xor
pop
jb
es
scas
outsw
ds
ret
jge
mov
dec
pop
mov
cmp
mov
arpl
cwtl
nop
adc
fmuls
adc
es
jmp
jnp
add
jo
inc
add
add
pushf
sub
dec
adc
ret
into
les
add
imul
inc
cwtl
mov
mov
test
add
add
mov
test
aaa
cmpb
cmp
test
ret
pushf
cmpsl
popa
ss
bound
add
add
shlb
add
add
add
pop
mov
aas
rcrb
add
sbb
mov
or
orb
inc
add
xchg
popf
adc
pop
sub
test
and
lock
pop
inc
add
xlat
sbb
lcall
cmp
in
pop
add
out
jno
or
mov
add
imul
jle
add
add
ss
cld
pusha
add
add
mov
jecxz
clc
fistl
andb
mov
push
mov
xor
mov
add
add
lock
add
subb
fmuls
sbb
nop
ret
test
mov
sahf
sbb
popa
dec
inc
xor
popa
mov
jl
xchg
inc
imul
repz
hlt
cmc
push
loop
xchg
fadds
fistpll
xchg
xor
add
xchg
dec
or
xor
jmp
test
dec
sub
mov
ds
popf
push
xchg
jmp
add
push
int
cmovne
sarb
or
xchg
lods
int3
dec
add
add
add
xor
and
add
add
xchg
cmp
xlat
mov
ret
mov
add
aaa
lea
jmp
sarl
mov
push
xchg
test
add
add
add
sbbb
scas
sbb
fistl
add
sub
es
or
sub
mov
cmpsb
arpl
dec
roll
test
ljmp
adc
fcoms
xchg
xor
fstpt
add
add
imul
mov
push
push
jb
xchg
xchg
xor
mov
daa
mov
cs
outsl
dec
push
and
mov
int
add
jg
xchg
add
add
cwtl
and
jnp
fmuls
mov
fwait
roll
mov
adc
fsubrs
cmp
pop
sbb
add
popf
int
adc
cmc
mov
xlat
dec
sbb
add
mov
xor
sub
add
add
jb
fildl
push
rcrl
fwait
rorl
xor
or
repnz
mov
inc
mov
push
shr
pop
sahf
addb
pop
lods
mov
aas
leave
bound
adc
imul
add
add
xchg
arpl
sub
add
add
cmp
fcoms
push
lods
insl
push
jns
jmp
add
jge
jmp
cmp
sbb
mov
add
add
adc
aaa
in
orl
add
test
add
and
mov
add
add
add
add
add
inc
mov
mov
inc
pop
lahf
aad
in
push
mov
pop
sbb
jecxz
add
popa
in
add
ret
adc
cmpsb
insl
addr16
pop
hlt
xchg
in
sbb
dec
push
mov
pop
std
jns
out
adc
adc
add
add
adc
mul
push
jecxz
repnz
in
pop
frstor
dec
add
cmc
pop
or
sbbb
add
add
add
addr16
add
add
jg
dec
add
add
sbb
sbb
popf
add
push
fildll
add
add
and
push
out
or
add
add
outsl
int3
fcomi
sbb
add
in
dec
add
out
sbb
cltd
mov
xchg
add
push
mov
shll
cld
ss
jmp
push
adc
lea
inc
sbb
xchg
inc
add
add
mov
ror
ret
pop
pop
xchg
mov
or
jge
adc
add
push
in
mov
add
xbegin
cmc
bound
sub
mov
sub
pushf
push
icebp
mov
add
and
mov
xor
add
mov
push
inc
pop
inc
dec
sub
cmp
out
dec
lds
push
cmc
dec
adc
push
xor
add
add
mov
pop
push
push
add
add
pop
and
addr16
arpl
outsl
repz
gs
xchg
sub
jb
jecxz
mov
push
xchg
insb
add
inc
scas
aaa
lea
push
enter
or
xchg
loopne
fdivp
mov
mov
xchg
mov
popf
outsb
lds
pusha
add
and
adc
pop
push
enter
xor
pushf
and
aaa
ret
xchg
loope
mov
stc
add
int
sbb
js
pop
sahf
popa
les
icebp
rcrb
sbb
leave
lock
add
mov
add
sub
add
add
adc
mov
push
repz
daa
add
inc
adc
sahf
int
jns
shrl
rclb
jge
jg
xchg
popf
aaa
xchg
idivb
xchg
sub
rcr
inc
add
jle
rolb
pop
aas
xor
mov
dec
add
popa
mov
jns
repz
sub
mov
add
add
add
lods
repz
inc
nop
fcmovnb
shlb
lret
xor
pop
aam
dec
pushf
or
add
add
cmc
jne
or
add
add
je
xchg
cmpsl
out
into
xchg
xchg
mov
add
mov
add
add
ficoms
dec
add
add
pop
lret
dec
add
add
jp
mov
sbb
pop
aad
les
add
mov
divb
add
std
mov
mov
ret
lahf
add
add
add
mov
jns
pushl
adc
rcll
add
add
adc
sub
dec
test
mov
pusha
add
lret
dec
test
xchg
adc
movsl
mov
inc
btc
add
lahf
xor
fadd
fldenv
aam
inc
popa
aam
jnp
fcompl
rcrb
ret
lcall
inc
push
mov
loopne
lock
mov
iret
test
cmpsl
out
xor
inc
adc
push
dec
add
sti
adcl
pop
es
push
adc
aaa
mul
orb
add
add
add
add
add
dec
add
add
add
das
jp
repnz
jl
push
jp
cld
jg
jns
add
shlb
inc
arpl
push
xchg
push
fldcw
add
popa
dec
add
mov
inc
xchg
addl
ja
daa
add
xchg
mov
push
push
xchg
or
add
add
or
and
mov
add
dec
add
add
pop
mov
pop
jecxz
sahf
in
mov
sbb
or
add
add
add
push
xchg
xchg
cmp
mov
push
xor
sub
mov
lcall
mov
mulps
inc
push
ljmp
add
mov
fildll
lea
lcall
dec
xchg
pushf
xchg
sbb
add
add
popf
adc
add
xchg
or
inc
cmc
loopne
push
xorl
and
xchg
mov
sub
mov
add
add
das
int3
push
decb
insb
add
add
aas
movsb
lss
cli
cmp
xchg
lcall
cmpsl
add
divb
test
popf
mov
push
pop
pushf
inc
add
movsl
scas
mov
lock
cmp
xor
adc
push
jo
sub
les
test
imul
dec
pop
dec
in
arpl
sti
lods
add
add
xchg
mov
add
scas
cmpsb
dec
mov
test
mov
imul
test
pop
mov
pop
sub
repz
pop
pop
add
les
mov
bound
outsb
cwtl
jle
imul
call
cltd
mov
mov
mov
xor
int3
sbb
mov
xchg
add
add
aas
lahf
cwtl
loopne
cld
adc
jl
mov
shll
hlt
in
mov
jo
xchg
mov
icebp
or
stc
or
or
sbb
xor
mov
push
subl
add
xor
add
cwtl
add
aas
inc
sub
add
lcall
mov
pop
cmc
stos
push
popf
mov
idiv
aas
mov
add
das
sub
add
add
test
add
add
add
jl
dec
mov
popf
lret
mov
push
sub
inc
lea
rolb
add
sbb
and
push
out
xchg
loop
add
push
into
cmp
cwtl
ja
nop
bound
das
mov
cwtl
pop
fiaddl
add
mov
push
inc
or
mov
mov
cmp
cmp
add
mov
add
add
std
cmpb
add
adc
add
add
mov
xchg
xchg
testb
add
js
adc
add
int3
idivb
aad
sbb
in
orb
cmpsb
outsb
ss
cmp
xor
adc
sahf
movsl
in
insb
add
push
imul
mov
inc
lahf
ret
pusha
add
lea
add
add
pop
aaa
inc
cltd
ja
mov
and
or
mov
iret
sub
daa
sbb
inc
xchg
pop
xchg
test
add
mov
cmpsb
jge
aaa
push
add
add
add
aaa
iret
pushf
test
rclb
cld
in
jns
pop
mov
std
push
xor
mov
xor
mov
das
add
add
scas
call
cmp
jns
pop
jne
pushf
jmp
add
imul
addr16
lahf
xor
mov
ljmp
hlt
inc
imul
add
dec
sub
add
add
add
xor
imulb
insb
add
add
lea
imul
add
add
add
adc
fdivs
push
inc
push
shrb
mov
add
mov
xlat
lods
xchg
pop
push
sub
mov
test
mov
add
add
mov
adc
dec
and
mov
add
mov
das
out
ret
mov
aam
pop
mov
add
sub
out
and
add
add
add
sbb
mov
xchg
mov
add
add
outsl
lret
pop
push
inc
or
pop
fdivrs
xchg
out
add
add
add
xor
pop
leave
scas
dec
sbb
ljmp
push
jns
inc
cmp
clc
xlat
or
jg
inc
add
add
push
sbb
add
add
add
dec
adc
and
xchg
cld
ds
out
lds
xchg
and
add
insb
add
add
outsl
push
js
push
test
add
fisttpl
cmp
xchg
imul
lcall
sub
adc
inc
jg
adc
out
sbb
movsl
sbb
xor
dec
add
jno
sub
add
add
mov
jge
jo
cmp
pop
mov
add
and
add
add
mov
add
add
add
cmpsb
sub
mov
popa
push
into
in
inc
mov
add
add
clc
insb
add
add
xchg
adc
mov
mov
mov
pushf
aaa
adc
sahf
mov
mov
jmp
nop
xchg
sti
mov
adc
mov
add
add
test
mov
push
push
jmp
add
add
or
add
add
loop
testb
inc
and
ds
add
mov
xchg
popf
jl
mov
test
jb
dec
xor
add
mov
and
negb
cltd
sti
std
jge
lock
pop
sbbl
js
movsl
push
lret
movsb
fdivrp
sbb
or
add
add
dec
xor
inc
add
add
xorl
pusha
add
add
xchg
adc
pop
xchg
lds
jns
call
jge
bound
jge
dec
pop
movsl
ret
add
add
dec
add
add
sbb
add
xor
add
add
add
sbb
mov
add
ja
addr16
add
clc
jle
jae
iret
add
mov
add
add
xor
stos
push
lods
sub
jecxz
popf
cmc
pop
or
add
add
add
pop
adc
add
xor
test
add
jp
test
loop
loop
clc
fcompl
js
sbb
add
les
mov
cmp
mov
adc
sbb
fildll
leave
pop
jg
negb
in
arpl
fidivrs
jmp
add
jg
sahf
push
out
test
test
int
incl
add
xor
ret
std
fiaddl
or
add
add
xchg
out
or
mov
mov
add
add
add
icebp
outsb
fwait
add
movsl
stc
lcall
sti
pushf
fbld
sarl
pop
sub
mov
ret
cli
ror
jmp
shr
jbe
adc
shrl
jo
scas
enter
push
push
cwtl
sub
js
xchg
xchg
sarl
popf
push
cmpsl
xchg
js
push
addr16
cmc
xor
inc
loopne
stos
xchg
jb
push
cwtl
pop
lcall
add
mov
mov
loope
in
in
cmpsb
into
adc
and
jecxz
inc
jno
push
add
mov
inc
add
arpl
push
sahf
add
mov
stc
sub
add
add
lcall
sbb
or
fldl
test
sbbb
rclb
out
and
push
lahf
arpl
add
add
xchg
push
rclb
or
push
push
xor
lret
adc
sub
add
add
add
in
xchg
sub
jbe
xchg
sbb
fsubrs
xchg
iret
jne
and
lods
inc
add
add
lods
mov
inc
lods
mov
or
mov
jno
add
add
movsb
mov
scas
daa
rcr
push
cltd
loop
insl
insl
mov
ss
add
add
sti
pop
push
insl
shrb
mov
pop
cmp
and
and
pop
pushf
scas
jge
test
push
lcall
iret
adc
divl
mov
add
add
fisubrs
pushf
xchg
repnz
lods
scas
sub
add
add
scas
xor
sbb
mov
pop
jnp
lods
int
dec
add
add
dec
dec
iret
arpl
mov
jno
mov
mov
sbb
std
add
add
shll
or
fdivrs
shrb
cs
in
fcmove
imul
xor
jp
ret
push
and
add
add
lret
push
lods
mov
xchg
mov
ret
sbb
sub
lcall
add
add
jl
jge
popf
int
xor
test
xlat
fistpll
add
add
or
fstpt
dec
out
adc
add
add
push
push
mov
lock
lods
push
bound
push
mov
sub
add
add
dec
push
mov
add
push
cltd
arpl
xchg
outsl
and
add
pop
or
xlat
negb
std
lea
push
dec
sub
add
arpl
push
mov
add
add
add
gs
cmpsb
mov
movsl
cmp
mov
das
int3
rcr
fdiv
sahf
pop
pop
sbb
sub
jle
test
dec
stc
es
dec
push
sbb
mov
out
test
dec
push
mov
test
cmpb
fisubrs
js
mulb
or
push
repnz
jge
mov
sub
mov
push
arpl
sub
outsb
out
jbe
add
add
push
insb
add
mov
test
add
fnstsw
inc
add
add
les
add
add
test
mov
sub
mov
clc
daa
bound
add
or
add
add
add
add
fisttpll
lock
imul
inc
mov
xor
add
add
mov
mov
adc
sub
add
add
fdiv
inc
push
dec
xchg
into
push
into
int3
js
xor
add
add
mov
add
xorb
mov
add
add
mov
insl
cmp
imul
mov
repz
xor
lret
mov
jge
shrl
adc
push
sub
mov
mov
xor
add
add
xchg
xor
mov
pop
jb
shrl
mov
mov
insl
test
shrl
push
mov
add
daa
cltd
push
dec
add
scas
pop
stc
inc
cmp
mov
cmp
inc
pop
das
rcrl
les
add
add
push
pusha
add
add
xchg
sub
and
and
pop
jb
ljmp
mov
mov
aad
repnz
mov
xchg
jns
aas
pop
subl
add
add
faddl
jnp
mov
jns
mov
fisubl
into
mov
adc
or
add
add
pop
inc
mov
xchg
xor
pusha
add
add
cmpsl
lcall
jp
jmp
shrb
add
add
mov
mov
inc
add
std
mov
sbbl
mov
adc
xchg
sbb
les
inc
aas
add
add
test
mov
jbe
mov
jae
add
add
mov
add
lret
imul
outsb
mov
add
add
ss
jne
shl
xchg
dec
jg
popf
divl
cmp
and
add
add
add
add
add
sbbb
pop
daa
lods
xchg
scas
ss
out
sbb
stc
loopne
pop
mov
mov
inc
and
add
add
bound
jne
mov
pusha
add
mov
imul
jge
test
movsl
push
jo
cmp
movsb
out
sbb
int
leave
aad
mov
cmp
adc
int
mov
push
cmp
mov
add
daa
mov
int3
dec
or
add
add
test
cwtl
cs
add
rclb
shrb
sub
pusha
add
add
mov
cmpsb
or
add
add
add
ret
adc
cmp
add
mov
inc
sbb
adc
lea
das
pop
jl
cmp
int3
push
mov
loop
xchg
pop
mov
mov
jecxz
adc
xchg
add
movl
fsubr
scas
pop
dec
jno
orb
mov
add
sub
cmp
mov
addr16
add
adc
sbb
mov
test
inc
dec
push
or
add
add
or
pop
xchg
ret
add
add
stos
jno
dec
sub
add
add
add
mov
pop
mov
mov
add
mov
in
inc
add
add
cmpl
mov
test
movl
in
outsb
repnz
push
xor
je
sarl
fcoms
out
mov
imul
jo
gs
gs
rcrb
mov
mov
add
adcb
jb
or
mov
adc
in
push
pop
add
testb
jp
add
insb
add
add
clc
es
std
mov
int3
and
add
test
clc
decb
ficompl
scas
adc
imul
sahf
je
inc
idivb
push
jnp
je
xchg
xchg
jns
push
jns
mov
ret
out
movsl
add
add
rcrl
cmp
mov
add
dec
out
xchg
or
jbe
add
add
add
add
je
pop
mov
push
imul
ffree
popf
add
cmp
in
les
into
jae
popf
lcall
out
addb
add
inc
loopne
ss
repz
xor
mov
and
add
add
sbbl
push
scas
lods
call
and
cmp
add
mov
sub
add
add
mov
sub
mov
cmpsl
bound
sub
add
nop
ljmp
add
inc
adc
add
mov
pushf
aas
stc
jecxz
push
pushf
and
add
add
arpl
fsubrp
jbe
jb
roll
loope
jecxz
add
adc
cmp
out
leave
pop
arpl
cwtl
call
pop
push
fdiv
lock
xor
loop
sub
mov
cli
sub
mov
pop
dec
xor
or
and
mov
lret
inc
out
mov
sub
cmp
add
add
or
sub
in
and
add
add
sub
push
imul
push
in
sbbb
inc
je
mov
aam
add
add
insb
add
add
add
mov
out
mov
sbb
add
add
lcall
mov
push
movsl
int
xchg
jo
lret
lock
mov
mov
cmpsl
fcmove
jnp
add
sub
add
add
cmpb
push
sbb
dec
xchg
mov
scas
cmp
cld
leave
fildll
add
mov
jg
xor
push
jnp
mov
ss
push
faddl
adc
and
add
add
add
leave
repnz
xchg
and
add
add
xor
xchg
pusha
add
mov
mov
lods
jge
sbb
insb
add
and
add
add
lods
adcl
add
into
aas
jge
inc
rolb
mov
xor
add
xchg
mov
pop
add
add
add
notl
and
loope
add
sarl
arpl
into
and
mov
jns
int3
leave
inc
aad
jb
mov
scas
push
mov
inc
in
sbb
fbstp
sbb
ret
add
add
xor
or
mov
rorl
xor
fistps
add
add
dec
ficoms
jp
or
mov
repz
jle
inc
fmull
add
adc
add
sbb
sbb
mov
xor
repnz
push
mov
add
xchg
add
add
add
xorb
sub
mov
sbb
add
push
scas
repz
mov
add
add
add
add
xchg
add
add
add
mov
jbe
pop
call
add
add
add
ss
mov
xchg
les
xchg
movsb
sbbl
lock
xchg
pop
cmp
push
add
add
out
es
dec
jle
mov
add
out
loope
data16
xacquire
ds
mov
cmc
insb
add
add
add
rorl
add
add
gs
or
mov
cmp
mov
test
mov
add
add
add
mov
mov
mov
adc
sbbl
mov
mov
loopne
les
push
pop
sbb
dec
lea
and
lcall
add
add
push
or
mov
mov
and
test
mov
xor
outsl
mov
add
sub
mov
hlt
and
fimuls
xchg
and
loope
popl
inc
nop
lcall
imul
rorb
pop
insb
add
add
xchg
mov
pop
jmp
pop
hlt
sub
cltd
push
pop
lds
mov
mov
xchg
subb
add
scas
call
insb
add
adc
sub
mov
or
add
add
icebp
push
xchg
push
push
cwtl
aaa
pop
jp
add
dec
add
out
out
js
test
add
mov
mov
add
mov
adc
mov
xor
addr16
out
ficoms
f2xm1
sbb
jp
mov
ss
mov
pop
loopne
xchg
add
cmp
dec
dec
sbb
xlat
clc
mov
cmp
add
add
fnstcw
into
sbb
nop
sahf
cld
ret
inc
add
add
xchg
mov
add
add
outsl
decl
or
jmp
dec
mov
js
jecxz
cmp
int3
sbb
cmp
popa
xchg
add
lret
les
mov
or
mov
test
jbe
rcrl
inc
add
add
fsubs
data16
outsl
scas
push
pop
push
cmp
mov
and
movsb
mov
dec
lods
dec
ss
pop
inc
lea
stos
push
dec
inc
add
in
mov
ljmp
add
pop
and
mov
xor
pop
mov
gs
lods
xor
sbb
xchg
sbb
imul
or
cs
sub
lret
in
je
xchg
pop
cmc
stc
cmp
jmp
add
push
push
lret
cmpsl
pop
and
add
test
add
add
add
aaa
jb
int3
cmpsb
mov
xor
rolb
mov
mov
sbb
add
add
cmp
fmull
push
mov
add
add
iret
je
xor
add
mov
in
push
in
pop
sbb
jg
add
add
inc
adc
inc
jp
mov
add
mov
out
sbb
cwtl
xchg
jp
add
pushl
pop
icebp
push
scas
and
mov
mov
pushf
mov
outsb
jnp
or
shlb
cmc
cmp
cltd
mov
add
add
xchg
xchg
or
add
add
add
test
lods
adc
mov
sub
mov
scas
jl
nop
jmp
lea
add
lahf
dec
mov
mov
sub
or
and
add
mov
add
xor
mov
add
es
dec
push
or
add
add
adc
add
popf
push
adc
jo
sahf
push
out
into
arpl
jg
add
inc
add
add
add
fcomps
add
add
add
add
xlat
addr16
xchg
mov
pushf
jg
icebp
pop
mov
idiv
lahf
stos
xor
xchg
repz
lcall
in
push
adc
jl
push
pop
mov
add
add
addr16
add
xor
mov
or
mov
data16
mov
push
push
mov
push
jge
loope
add
add
mov
out
add
jne
imul
inc
fidivrs
subl
push
aas
cwtl
inc
clc
xchg
ja
je
cmpsl
inc
mov
idivl
movb
push
rcrl
jno
add
imul
stos
test
pop
mov
cmp
jb
sub
cmp
movsb
fldcw
inc
out
pop
addr16
add
aas
fildll
push
and
mov
ja
push
sarb
decl
push
int3
rcrl
pop
xchg
sarl
mov
test
xchg
dec
cld
inc
sarb
or
or
add
add
or
mov
pop
rcl
jmp
test
clc
es
in
hlt
pop
mov
movsb
dec
jae
dec
add
add
rorl
int3
gs
dec
adc
fcoms
mov
xchg
ret
jg
test
xchg
fiaddl
pop
cltd
sub
add
add
push
add
add
cmpsl
xchg
div
cli
sbb
push
mov
xor
in
pop
sub
cmpsb
pushf
jp
inc
add
or
jb
ret
add
aaa
or
test
jp
and
mov
sti
and
int
pusha
add
lds
sbb
xchg
lahf
push
sub
dec
add
insb
add
dec
add
add
cwtl
cmp
call
xor
mov
dec
ficomps
cmp
js
push
scas
popf
pop
jge
fwait
lret
inc
adc
jle
mov
add
das
icebp
aam
scas
test
and
cmpsb
imul
pop
cmp
sub
mov
xchg
cli
mov
add
pop
lcall
xchg
popf
rcrl
repnz
add
add
push
mov
add
push
xchg
add
imul
and
decb
mov
sub
out
shrb
es
adc
mov
ja
adc
data16
jae
stc
add
filds
iret
outsb
sub
add
add
push
push
sti
cmc
push
setnp
hlt
insb
add
add
pop
xor
testb
inc
add
add
jmp
cmp
xor
add
bound
dec
jns
mov
add
add
add
mov
jp
adc
mov
jg
inc
jae
cmpsl
gs
push
fisubrl
sbb
add
lret
cmp
mov
gs
mov
mov
add
ja
jne
push
inc
push
lahf
inc
push
push
inc
pop
mov
sub
mov
xor
add
add
add
popa
sar
test
push
xchg
xor
add
jb
imul
sub
je
mov
ds
add
add
add
mov
orb
add
in
add
add
cmpsl
mov
bound
add
add
cmpsb
inc
or
xchg
jmp
cmpsl
sarb
jnp
mov
rcrl
xor
fstp
sbb
mov
add
and
push
inc
test
bound
aas
sbb
sub
pop
lret
int
and
mov
add
xor
into
sti
das
push
fwait
xchg
xchg
and
pusha
add
add
cmpsl
fcompl
int3
mov
rorl
add
add
xor
add
mov
mov
add
add
je
pop
push
cmp
idivl
leave
add
dec
popa
add
push
jecxz
add
add
inc
arpl
mov
xor
pop
cmp
int
sbb
pushl
add
add
add
mov
jae
data16
add
add
repnz
cmpsl
cs
push
popf
push
push
mov
jmp
sub
aas
fistl
add
jbe
divb
std
push
mov
and
mov
dec
jmp
rcrb
or
je
fiadds
add
add
cmp
and
add
popf
mov
movlhps
mov
xor
or
sbbb
adc
mov
sub
es
inc
push
iret
pop
add
scas
push
jecxz
nop
cs
mov
add
add
je
add
xor
clc
aad
mov
fwait
mov
xchg
pop
fsubrs
sarl
jmp
or
xchg
push
ret
fmuls
add
cmp
fdivr
stc
pop
outsb
xchg
push
cmp
mov
mov
mov
add
add
jmp
sbb
push
fdivrs
inc
mov
jo
outsl
shrb
cld
sub
add
add
sub
sub
mov
jbe
mov
add
push
jnp
adc
or
add
testb
add
scas
and
mov
ljmp
pop
jbe
add
xor
dec
jb
dec
add
pushf
inc
loopne
mov
dec
mov
jbe
add
ljmp
add
mov
add
dec
add
add
mov
mov
add
xchg
hlt
jg
xchg
pushf
stos
dec
and
mov
mov
xor
and
add
add
mov
scas
leave
imul
insl
into
loop
pop
adcb
sarl
add
scas
fldenv
add
xor
xchg
xlat
mov
add
popf
adc
test
mov
or
mov
addr16
lods
lods
filds
mov
xchg
in
call
cld
fildl
mov
xor
add
add
repnz
add
insb
add
push
rol
lea
sub
jo
ljmp
cmc
mov
inc
clc
imul
ficomps
int
loop
loop
test
xor
jle
outsb
inc
sti
dec
cmpsb
mov
mov
mov
push
mov
aaa
fprem
in
add
icebp
pop
into
and
rcll
dec
push
mov
add
mov
xor
cmpsb
fnstcw
jae
je
cmp
mov
add
jge
add
add
ficoms
add
shll
add
decb
jns
push
and
mov
adc
add
fistpl
iret
jp
sub
rorl
add
inc
add
add
int3
jle
hlt
sbb
outsb
sti
fwait
mov
push
sub
out
or
add
sub
movsb
inc
add
mov
lds
jb
out
sub
add
add
inc
mov
add
sbb
or
lahf
push
sub
add
mov
loopne
push
stos
cmp
xchg
push
sub
shlb
les
dec
add
and
or
mov
mov
sub
shlb
mov
aam
push
daa
mov
add
je
lods
push
ret
dec
sahf
xor
cmp
jnp
testb
pop
jno
mov
pusha
add
cli
lret
pop
movsb
mov
cmp
add
mov
sbb
mov
addr16
fidivl
pusha
add
add
mov
add
lret
cvttps2pi
mov
sub
mov
add
add
mov
in
jae
add
imul
add
mov
add
add
add
dec
add
push
cmp
mov
mov
add
cwtl
adcl
mov
hlt
out
lds
push
inc
add
add
fcmovnu
add
mov
fldt
rcll
daa
jp
dec
add
add
mov
shlb
or
add
add
and
push
adc
push
dec
mov
popf
push
xchg
xor
mov
push
lds
add
sbb
pusha
add
add
ja
loope
sbb
push
mov
daa
push
pushf
fucomi
push
jg
test
shlb
add
fdivrl
cld
adc
loope
rdmsr
addr16
imul
add
add
hlt
jae
add
add
mov
in
or
mov
cmpsl
int
loope
sbb
std
inc
push
xorl
dec
add
add
out
jge
or
add
add
cld
sub
mov
cs
stos
xchg
outsl
jbe
out
out
adc
sub
sub
add
add
filds
ficompl
mov
pop
into
popa
scas
out
adc
popf
fisubrl
mov
sbb
cmp
add
mov
dec
inc
mov
mov
pop
jae
sbb
mov
pusha
add
add
jp
std
xchg
in
aam
cltd
into
mov
gs
add
cmp
adc
add
push
cld
inc
adc
or
mov
mov
in
and
mov
hlt
cs
mov
cli
xchg
mov
jle
add
mov
ljmp
pop
add
add
cmpsb
push
pop
nop
test
lret
lds
mov
popa
cmp
xor
jmp
in
les
das
mov
pop
xor
or
mov
cmpsl
jecxz
mov
add
js
mov
popf
push
enter
mov
adc
add
push
test
jnp
imull
mov
mov
enter
cltd
scas
les
daa
xchg
xchg
aas
cmp
mov
test
cmp
and
test
or
add
add
sub
add
add
xlat
sbb
mov
lods
mov
fldl
xor
or
add
add
add
add
insl
adc
cmpsl
test
add
cmp
cmpsb
mov
popa
enter
in
aaa
pop
mov
add
addr16
mull
add
add
sub
jo
cli
shrb
mov
jae
pushf
int3
ja
sarb
xor
aam
mov
cmpsb
xchg
lret
mov
clc
xlat
or
mov
mov
mov
sub
add
mov
add
lret
hlt
inc
ret
int3
jo
cmp
or
iret
xchg
xorl
adc
lret
gs
add
scas
jmp
rcl
jb
cmp
out
lods
loopne
mov
add
or
popf
fnstsw
loope
pop
push
push
rcrl
xchg
pop
leave
pop
adc
and
add
lods
adc
movsb
out
jp
nop
fdivs
mov
mov
jp
adcb
adc
add
add
mov
stos
in
jbe
jmp
out
sub
and
arpl
js
aam
out
in
stos
std
in
imul
ds
add
adc
xchg
jp
pop
lods
adc
insl
xchg
jbe
pop
mov
mov
inc
jg
add
dec
lahf
xchg
xor
xchg
pop
mov
ffreep
insl
std
sbb
decl
fisttps
mov
add
add
pop
ds
xchg
lods
loop
mov
or
inc
mov
repnz
fdivl
inc
out
add
mov
add
add
add
dec
push
insl
jne
mov
push
movsbl
fmull
test
sahf
dec
movsl
xchg
das
xchg
inc
add
add
cwtl
mul
enter
add
add
add
fisttpll
hlt
sbb
mov
dec
mov
add
enter
xchg
scas
in
adc
call
ret
fildll
sbb
out
inc
lds
add
add
rclb
fstpt
add
add
add
jb
int3
sub
add
add
icebp
js
orl
sti
xor
bound
or
data16
mov
push
add
sarl
popa
rcrl
mov
add
add
clc
icebp
addr16
fwait
jnp
sub
cmp
out
out
xchg
into
sbb
mov
add
ja
cmpsb
push
dec
jae
push
jmp
mov
dec
shrl
call
add
add
add
outsb
aas
popa
rorl
pop
sub
jmp
rcll
push
lods
mov
mov
cmpsb
addb
add
sar
mov
mov
pop
dec
add
xchg
cld
sbb
mov
jmp
add
mov
mov
xor
add
pop
jae
and
add
stos
mov
dec
int
sbb
sbb
shlb
cltd
mov
adc
aad
push
nop
jecxz
xor
sub
add
add
mov
add
loope
bound
arpl
xchg
sbb
or
cld
iret
mov
sbb
dec
dec
out
aaa
es
add
add
loope
add
pusha
add
add
and
push
push
icebp
bound
xor
mov
add
add
add
mov
push
and
add
add
jbe
nop
jecxz
sbb
jno
fists
adc
add
test
test
repnz
out
pop
stc
add
add
add
hlt
lahf
in
std
pop
js
add
add
repnz
inc
mov
add
add
insb
add
or
add
add
sbb
and
mov
jbe
mov
xor
mov
popf
ja
subb
mull
add
in
popa
mov
test
lret
xchg
add
out
rclb
jmp
loope
es
outsb
sub
mov
mov
add
movsl
out
mov
scas
and
add
add
xlat
sbb
mov
xor
sbb
mov
mov
int
push
add
xlat
adc
add
mov
add
add
or
add
add
dec
sbbl
add
in
pushf
inc
add
inc
lret
inc
jl
and
ret
in
pop
mov
mov
dec
add
add
mov
cmp
dec
dec
dec
add
add
jp
mov
add
cmp
jnp
cmpsl
cmc
rclb
lcall
cwtl
add
add
xchg
pop
mov
jge
jecxz
shr
mov
mov
add
gs
dec
pop
pop
inc
xcrypt-cbc
cmpsl
pop
sub
mov
cmp
lret
cmpsb
fildl
sub
add
add
movsb
outsl
pop
xor
pop
pop
mov
push
push
and
add
add
mov
ret
add
mov
mov
dec
mov
dec
cli
inc
fcomi
and
popa
sbb
mov
add
mov
repz
mov
mov
push
filds
nop
movsb
vcvtpd2ps
mov
add
add
add
add
mov
pop
mov
add
les
add
mov
add
js
sbb
andb
mov
repz
addr16
add
add
cli
cmp
add
add
add
add
sbb
mov
mov
idivb
mov
mov
int
pop
xor
xor
lret
sahf
cmp
xor
mov
add
add
pop
fimuls
add
sub
add
add
jge
shrb
into
xor
jnp
imul
fiadds
xchg
stos
sub
adc
iret
fucom
stos
sahf
push
popa
cmp
cmpsl
aam
leave
xor
fistpll
loopne
leave
int3
jnp
or
fstpt
insb
add
mov
enter
and
add
add
add
xchg
jns
cmp
test
push
sub
add
add
jg
add
pop
add
add
add
repnz
jae
add
xlat
fsubr
sbb
inc
mov
aaa
and
mov
add
add
sub
cmpsl
push
loop
add
add
add
add
decl
mov
data16
sbb
sbb
add
into
dec
xor
or
add
xlat
mov
pushf
rorl
push
push
pop
jo
jp,pn
add
add
ret
adc
rol
clc
iret
in
std
sub
gs
enter
cwtl
adc
push
mov
push
mov
mov
or
cmp
jb
dec
add
add
jb
mov
push
pushf
cs
add
add
cmp
add
add
jle
sbb
daa
cwtl
rcrl
js
xlat
and
gs
int
shrb
push
xchg
mov
into
pusha
add
add
adc
pop
js
push
fadds
sub
add
add
int
mov
cli
call
jae
inc
jg
add
add
cmpb
pop
dec
inc
add
popa
push
and
mov
add
add
xchg
popf
add
mov
shrb
add
xlat
jecxz
dec
add
mov
test
or
bound
sub
add
add
add
adc
ret
mov
cmp
clc
sub
adc
clc
cmpsb
test
aam
add
add
xor
out
inc
add
add
mov
adc
bound
add
mov
xchg
in
mov
add
add
ljmp
adc
test
testl
shll
stos
in
add
fists
movsb
or
add
add
cmc
or
iret
mov
cld
stc
jge
inc
jb
loope
inc
icebp
sub
cwtl
jmp
mov
and
lods
mov
repz
cmp
shll
push
mov
add
cmc
ds
loop
stos
cmp
lods
push
xchg
ljmp
or
shrd
scas
out
push
xchg
lahf
xchg
mov
inc
sub
add
and
add
orl
add
add
and
mov
add
add
test
add
add
adc
mov
mov
fidivl
fcompl
add
lret
sub
add
add
xchg
add
lods
inc
or
add
add
add
and
add
add
cmp
ja
pop
negl
and
mov
add
jg
dec
add
jle
imul
arpl
add
jne
add
add
mov
cmp
push
sbb
add
add
ljmp
add
add
add
add
arpl
or
lock
xchg
dec
ja
ds
popa
sbb
divb
mov
mov
test
xor
mov
xor
add
ljmp
cld
enter
stc
ljmp
mov
dec
and
jo
xor
adc
cmpsl
js
lcall
add
nop
add
dec
xchg
jle
push
jle
pop
pop
hlt
adc
cld
mov
push
cmp
add
sub
add
add
jbe
jecxz
test
inc
scas
mov
add
nop
enter
mov
out
inc
mov
jno
inc
dec
xor
mov
push
in
bsr
loopne
or
mov
push
in
in
out
mov
push
stc
fmuls
xchg
scas
mov
clc
or
add
in
aad
fisubrs
add
ret
dec
xor
add
pop
mov
and
cmpsl
ret
lods
jl
push
stos
cmpsl
sub
add
daa
cld
sub
add
add
in
rolb
out
or
mov
dec
out
pop
ret
mov
sbb
daa
stos
out
xchg
push
fwait
sbb
lock
lea
cmp
cmp
adc
insl
lret
into
sbb
add
jbe
jne
add
pop
lea
cmc
jp
sub
add
add
jge
add
add
push
repz
lcall
xchg
arpl
sbb
mov
scas
dec
add
add
rcr
mulb
dec
add
test
mov
stc
jge
sbb
mov
in
test
push
cmpsb
and
faddl
add
in
sar
mov
add
add
push
xchg
sahf
xchg
adc
ljmp
icebp
pop
insl
lea
jmp
cmovg
es
push
mov
or
mov
lret
je
fidivrl
add
sub
xor
mov
cld
fnstcw
dec
sub
push
mov
push
and
cwtl
and
xlat
lea
xlat
test
mov
add
add
cmp
iret
sbb
push
push
xchg
dec
add
push
mov
add
mov
push
or
or
xor
pop
mov
popf
push
xor
cmp
or
xchg
push
mov
adc
cmp
sarb
sbb
fsave
and
jno
mov
outsl
xchg
arpl
dec
add
add
movl
inc
test
sub
dec
add
inc
dec
icebp
mov
add
jo
cmp
leave
jbe
mov
add
push
dec
add
add
repz
pop
pop
cmpsl
push
and
cvtps2pd
jmp
cli
cld
lock
adc
push
jnp
cld
aam
notl
inc
int3
sub
cwtl
in
neg
mov
pop
inc
xor
cmpsl
cld
dec
add
cmpsl
pushl
mov
mov
mov
add
mov
leave
sbb
push
jnp
add
add
andb
adc
mov
xchg
cld
or
add
add
test
shl
add
mov
movsl
movsb
mov
add
pop
mov
jb
dec
call
sbb
data16
jno
insb
add
add
call
mov
inc
fidivrl
fistpl
cwtl
xchg
repnz
aaa
hlt
and
aam
inc
add
add
inc
mov
sbb
sub
add
insb
add
mov
stos
insb
add
stc
mov
insl
out
or
fdivs
inc
lods
aad
mov
inc
push
sub
add
data16
jns
add
add
lds
fwait
push
push
fiaddl
xor
jg
lret
add
add
cmp
add
sahf
xchg
sbb
icebp
mov
in
fisubrl
int
mov
daa
dec
mov
repz
xchg
xor
xchg
adc
add
add
insb
add
add
lods
dec
ret
out
mov
jle
aas
xor
sub
add
add
daa
fyl2xp1
add
mov
xorb
mov
xor
jg
clc
or
add
add
mov
add
add
dec
cmpsl
loope
into
popf
sbb
add
xor
sbb
stc
pop
bound
add
add
or
mov
ss
mov
outsl
xchg
push
and
mov
inc
rorb
aam
aad
ret
int3
clc
mov
ret
jnp
incb
cs
mov
push
mov
add
add
jb
jb
divl
add
add
movsb
jmp
add
pop
pavgw
add
add
add
push
mov
arpl
add
xchg
or
repz
in
ljmp
and
add
add
mov
aad
adc
push
mov
addb
fldt
mov
mov
cmp
cld
fnstsw
std
mov
es
xchg
xchg
jmp
mov
add
add
jno
cmc
out
hlt
cmp
add
add
mov
mov
xchg
pop
clc
ja
pop
test
push
repz
add
add
sbbb
add
add
mov
cltd
mov
jns
add
mov
jl
das
and
jmp
push
cmc
xchg
push
addb
add
dec
outsb
imul
andl
add
outsl
dec
daa
xchg
std
cmpsl
pop
pop
iret
aad
enter
add
scas
xor
pop
cmp
test
in
loope
cmp
add
add
inc
push
xchg
cmpsb
in
xchg
dec
mov
lea
xor
push
mov
dec
add
je
les
lock
cmp
inc
ja
add
add
test
pop
mov
dec
add
add
mov
add
jg
xor
jle
loopne
leave
rcrb
jnp
iret
or
out
mov
or
loop
repnz
addr16
pop
lret
mov
clc
shll
fldz
hlt
rcll
out
add
add
add
popa
mov
add
int
add
add
sbb
int3
ret
cli
div
aam
jne
repnz
pop
fbstp
dec
add
add
outsl
dec
add
add
mov
ljmp
repnz
iret
popa
movzbl
inc
xlat
adc
and
add
mov
testl
xor
adc
add
add
sahf
add
mov
andl
push
jbe
jle
shll
in
adc
in
stos
cld
cmp
mov
out
fsubs
xchg
sti
in
test
dec
fildl
mov
sarl
jge
add
popa
jne
sbb
dec
sub
rol
sub
mov
mulb
add
add
icebp
int3
mov
add
or
mov
xchg
dec
decb
adc
xchg
dec
add
sbb
stos
std
pop
xor
dec
add
dec
cmp
loope
mov
pop
sti
test
add
imul
out
jle
jbe
adc
mov
aas
mov
push
push
scas
leave
sub
add
out
cmpsl
push
imul
aad
mov
mov
ficomps
add
jge
xchg
es
sub
mov
add
adc
add
int
outsb
pusha
add
add
int
test
insb
add
add
ss
int3
mov
add
mov
add
add
fstpt
fadds
lahf
adc
popl
add
pop
rorb
mov
mov
xchg
pop
test
loop
inc
add
repz
ljmp
dec
add
stos
mov
mov
or
pop
loope
gs
add
add
cmp
push
xchg
add
add
add
in
clc
pop
add
add
mov
add
cmp
push
aaa
sbb
push
inc
repz
out
xchg
stos
icebp
fisttpl
dec
add
add
push
sbb
cld
adc
dec
pop
mov
add
test
xor
nop
mov
pushl
adc
xchg
xchg
jl
xor
mov
andb
add
or
mov
mov
insb
add
add
mov
jno
and
sub
inc
mov
add
leave
xchg
xchg
aam
leave
sahf
xor
push
cli
stos
mov
lods
add
add
add
push
mov
mov
add
xchg
push
ret
in
mov
mov
or
in
int
arpl
push
negb
sahf
ja
scas
push
jle
enter
cltd
jo
xor
mov
out
inc
adc
cmp
jb
mov
add
add
sbb
outsb
mov
add
add
cmp
test
or
add
sbb
or
scas
or
adc
or
xchg
fimuls
add
aas
enter
or
add
add
mov
mov
dec
rorl
orl
push
dec
leave
sarl
add
add
popf
scas
jge
jg
flds
enter
xor
cmpsb
pop
dec
loopne
mov
add
lea
stos
xchg
scas
jno
pop
cmp
sbb
mov
fsubp
mov
mov
add
push
inc
orl
outsl
mov
and
inc
add
loopne
cs
sub
add
add
add
lret
out
dec
aad
xor
addb
andb
enter
add
inc
test
pop
and
add
daa
nop
jne
jns
popf
mov
and
cmc
mov
pop
mov
or
add
add
mov
add
fidivs
or
jns
dec
pop
pop
jnp
out
add
add
push
and
cld
cwtl
fucom
ret
xchg
dec
std
mov
add
and
mov
or
pop
out
xabort
mov
fidivs
xchg
push
addb
cli
mov
jmp
add
mov
push
sub
stos
sarb
es
punpckldq
mov
push
fcompl
xchg
fidivrs
inc
mov
fdiv
inc
data16
xor
stos
jmp
or
add
add
add
arpl
adc
imul
add
mov
push
ljmp
out
fadd
pop
xchg
pop
push
int3
push
dec
test
popf
pushf
adc
jns
daa
adc
push
xchg
mov
xchg
pop
incl
adc
aaa
sarl
adc
sub
roll
les
or
mov
adc
int
das
notl
mov
cmp
add
sub
mov
jae
mov
jbe
in
xchg
xchg
std
cmp
and
pusha
add
dec
jnp
orl
jge
aam
add
add
adc
mov
or
add
inc
jbe
mov
pusha
add
fdivr
xor
add
add
aad
mov
mov
add
out
icebp
mov
ret
adc
cli
inc
push
mov
in
xchg
in
cli
cmovp
xchg
pop
mov
dec
inc
add
add
dec
xchg
sahf
or
add
add
mov
insb
add
add
xor
pushf
mov
out
dec
dec
jmp
out
mov
mov
xchg
dec
add
add
add
mov
out
inc
add
inc
movsl
test
mov
mov
aam
div
outsl
roll
cmc
sbb
jnp
cmp
int
add
add
mov
fisubl
mov
addr16
imul
ret
push
jne
nop
data16
inc
add
add
pusha
add
add
mov
divl
dec
stos
int
cmp
add
add
lods
jg
xchg
dec
addr16
jbe
mov
je
adc
les
adc
sbb
sub
xor
mov
xchg
lahf
and
add
add
lock
dec
decb
arpl
inc
add
add
enter
sub
in
icebp
and
mov
movsb
sahf
lcall
add
cmp
mov
or
add
add
add
add
lods
mov
or
push
mov
adc
mov
sbb
insb
add
mov
popf
dec
add
add
jge
fcoms
hlt
fldt
or
and
inc
jne
in
jno
and
inc
sub
inc
roll
popa
mov
es
ds
inc
fsubs
add
flds
push
shlb
mov
sarl
xchg
add
add
add
outsb
push
popa
adc
pop
sub
mov
ret
mov
fistps
sub
movsb
sbb
and
mov
inc
xchg
mov
popf
sub
add
pop
sbb
mov
clc
push
adc
outsl
cmp
shl
adc
fsubr
mov
dec
add
add
xor
inc
add
xchg
subb
jecxz
shlb
push
aaa
cli
cmp
add
add
in
pop
mov
test
insb
add
test
loope
add
add
shlb
push
lret
pop
dec
jo
xchg
imul
jb
jne
outsb
lahf
mov
int
add
add
mov
int
cld
outsl
notb
lds
add
add
add
and
add
xchg
cmpsb
out
test
sti
cltd
mov
mov
shll
mov
icebp
sub
cmp
dec
add
add
add
mov
jne
adc
popa
xchg
mov
mov
inc
out
mov
aam
add
add
fdivrl
fwait
mov
in
lret
addr16
xlat
sbb
adc
sti
rcrl
sbb
test
or
cmp
lods
cwtl
out
cli
cld
dec
cmp
cmpsb
and
mov
add
add
push
or
add
add
cmp
fnsave
add
add
mov
mov
outsb
in
lock
add
add
inc
mov
jb
add
add
cmp
sbb
add
movsl
dec
xchg
inc
movsl
insb
add
add
jb
lods
pop
out
leave
add
add
mov
sbb
add
mov
add
mov
add
out
outsb
or
jle,pn
int3
lahf
sbb
inc
divb
fld
call
xor
pop
mov
dec
push
inc
out
or
cli
push
pop
cmp
arpl
sub
mov
mov
scas
mov
lcall
add
add
add
adc
jp
add
add
cmp
pop
xor
push
or
add
add
mov
repnz
scas
inc
add
scas
inc
outsb
fdiv
and
pop
jae
mov
aaa
push
jp
adc
push
in
sbb
clc
ljmp
add
cmp
xchg
inc
add
add
sub
add
add
mov
push
push
xor
jmp
pop
jle
add
add
add
add
inc
or
add
add
shlb
lds
pop
fnstenv
in
enter
outsb
jge
cmpb
stos
xor
and
dec
add
add
add
add
add
fldl
and
add
lahf
fdivrp
sbb
add
out
test
adc
mov
pop
jbe
cwtl
in
sub
push
cmpsl
mov
add
add
loopne
add
xchg
mov
jg
dec
add
icebp
jecxz
cmp
push
and
xchg
leave
sub
pop
in
mov
loopne
jle
outsb
dec
loopne
repz
fidivl
out
fcoms
mov
and
mov
mov
pop
push
sub
ficompl
pop
pop
ficoml
add
cmp
push
and
mov
stos
lahf
sbb
add
test
stos
mov
push
or
add
add
in
pusha
add
xchg
mov
shll
mov
out
shrb
insl
pop
aaa
pop
adc
ret
mov
push
jno
push
dec
pusha
add
add
test
xchg
or
push
or
movsb
push
cmp
leave
push
dec
bound
lock
xchg
push
push
cmp
sbbb
mov
sub
mov
mov
add
adc
std
ret
push
ja
sbb
pop
fldt
add
sbb
data16
push
idivl
mov
stos
hlt
lds
stc
dec
stos
and
mov
jmp
in
jne
sub
aaa
mov
add
jecxz
out
dec
sahf
ret
adc
xchg
dec
inc
adc
ret
data16
nop
jo
popa
pop
jl
sub
in
or
add
mov
add
aam
jl
enter
push
cltd
mov
and
mov
call
and
lock
out
add
mov
cmp
sbb
add
leave
cmp
add
add
add
push
sub
adc
inc
push
mov
dec
add
add
stc
sarl
push
pop
xor
dec
add
add
dec
shll
fucomi
jne
or
mov
popl
mov
push
daa
or
mov
mov
jns
out
ret
cmp
xchg
or
add
add
orb
shl
push
ds
out
inc
add
add
hlt
and
lahf
mov
mov
push
push
sbb
cmp
mov
in
or
mov
mov
add
xchg
lcall
lds
push
push
dec
add
test
mov
cmpsb
clc
sub
mov
lret
xchg
xor
add
add
js
push
faddl
push
and
mov
imul
mov
push
and
add
add
jno
mov
mov
add
add
cld
subl
mov
jnp
jnp
mov
fisubl
jp
sti
subl
sub
rcll
mov
mov
iret
mov
mov
lret
addr16
ret
push
out
push
add
add
add
add
aaa
enter
add
mov
sub
lret
mov
add
add
cmpsb
ret
rcrl
sbb
sbb
test
inc
cld
and
sub
dec
add
mov
sbb
mov
adc
scas
rclb
out
je
inc
pop
mov
add
mov
mul
push
fistps
add
sbb
movsb
cwtl
adcb
mov
adc
mov
add
aas
div
sti
sub
sub
inc
sub
ret
call
aas
mov
movsl
pop
mov
mov
inc
add
cltd
xchg
jne
stos
jne
daa
xchg
fcmovne
aam
jp
cld
add
mov
dec
add
add
fcom
push
inc
in
stos
sbb
ja
dec
aam
or
jmp
ds
inc
add
add
sub
mov
mov
xchg
in
iret
fldt
push
push
in
mov
cs
fwait
je
inc
inc
bound
jmp
xchg
xor
cwtl
les
add
je
dec
insl
mov
inc
js
and
add
add
mov
aad
dec
dec
pop
xor
or
dec
mov
sbb
add
aas
adc
call
push
dec
push
mov
push
out
cmp
push
xor
add
mov
loope
and
add
add
jae
int3
push
std
repz
lods
xchg
add
mov
in
or
mov
sub
je
dec
das
push
call
dec
mov
aaa
cmc
push
add
add
add
jbe
mov
add
fidivl
dec
movsl
aam
xchg
out
jmp
mov
add
cmpsb
aaa
out
fdivl
cmp
mov
or
push
ret
mov
icebp
lds
xlat
jmp
ss
xlat
pop
in
jp
fidivl
add
ds
push
int3
movsb
xchg
adc
sub
loope
mov
in
dec
mov
test
add
inc
push
add
sbb
fidivrl
andb
add
repz
jmp
pop
inc
add
add
mov
cwtl
xchg
sbbb
add
mov
sbb
add
shl
dec
push
fildll
stos
addr16
inc
inc
pop
jecxz
movsb
rolb
xchg
bound
stos
pop
popa
dec
or
daa
inc
add
add
jge
mov
xchg
aas
jge
mov
lods
adc
jl
mov
sbb
or
call
add
pushf
repz
gs
imul
add
lods
push
cli
aaa
scas
loop
add
test
fmuls
mov
pop
xchg
xlat
fsubrl
mov
std
or
fsubrs
lahf
ret
lods
cltd
xor
lock
jecxz
clc
leave
sbb
or
xacquire
inc
add
stc
push
mov
pop
imul
add
hlt
push
xlat
popa
cmpsb
test
mov
xchg
scas
incl
add
add
mov
add
add
add
mov
ja
es
loope
es
mov
nop
add
add
xchg
add
add
xchg
js
mov
pop
add
mov
add
add
es
add
in
outsb
fsubp
mov
ret
out
mov
mov
mov
adc
sub
mov
pop
cmp
or
mov
lea
cmp
xchg
andb
pushl
xchg
pop
or
inc
aas
lods
pop
xor
cwtl
outsb
nop
hlt
sub
add
add
std
or
xchg
addr16
pop
xor
movsb
xchg
mov
rcl
das
cltd
jle
or
das
jle
ds
je
sbb
add
test
xchg
push
iret
adc
popf
dec
mov
outsl
add
xor
sub
andl
imul
add
cmp
je
rorl
cmp
int3
lret
dec
or
mov
dec
jb
rorb
movl
sti
inc
mov
jno
nop
clc
mov
xchg
mov
mov
bound
mov
and
mov
or
cmovg
pop
test
adc
adc
add
add
cmp
adc
mov
add
add
icebp
fsubrs
cmpsb
adc
xchg
pop
adc
js
outsb
or
mov
out
sub
push
dec
add
add
fsubs
add
mov
sbb
sub
add
add
sub
push
mov
add
insb
add
push
movsb
dec
inc
add
adc
mov
insl
loope
mov
add
add
add
cld
mov
mov
adc
push
push
sub
xchg
sahf
mov
mov
inc
ljmp
add
lods
or
mov
pop
repz
xor
jno
sub
add
add
xchg
sub
into
cmc
xchg
pop
or
and
add
add
popf
add
pop
mov
sbb
stos
jp
cltd
pop
sub
xchg
cmpsb
add
adc
mov
xor
mov
stc
cmp
fisubrl
push
mov
sbb
inc
push
aam
js
push
add
add
add
add
add
out
add
ret
leave
inc
push
push
popf
xchg
out
cmp
add
std
incl
mov
out
cmpsl
and
jmp
pusha
add
loope
dec
push
sbb
add
je
mov
add
call
add
popf
sub
jae
cld
mov
inc
test
mov
add
add
sbb
lcall
add
scas
sbb
fdivl
in
mov
mov
movsb
js
add
mov
push
xchg
shrl
in
jecxz
call
fcom
xor
xor
adc
js
adc
scas
jae
fisttps
mov
push
ret
invd
add
jo
add
push
mov
fdivs
or
adc
mov
aam
dec
sub
xor
xor
pop
sbb
jns
lea
cmp
add
mov
gs
adc
nop
les
or
fbld
add
add
arpl
mov
movsb
out
pusha
add
mov
addl
add
cltd
adc
jmp
push
xchg
dec
add
push
adc
insl
sbb
dec
cmpsl
push
adc
sub
add
add
push
jp
add
add
lcall
pop
adc
leave
sbb
pop
xchg
mov
add
add
insl
mov
add
push
mov
add
add
leave
pusha
add
add
mov
and
sub
add
add
rcll
xorl
add
xor
jne
leave
popa
inc
mov
das
push
sbb
mov
pushf
jl
inc
jo
aas
jb
or
add
jno
sbb
imul
push
loop
mov
aaa
push
retw
inc
nop
in
inc
inc
add
add
mov
or
add
ljmp
inc
mov
add
add
mov
pop
int3
or
imul
add
add
add
cmp
fisubrl
mov
ja
aaa
push
sub
pop
inc
add
add
outsb
test
add
mov
xchg
lods
shr
imul
rol
popa
out
cltd
lret
mov
cli
call
inc
movsb
jnp
cmpsb
jle
dec
adc
xlat
adc
mov
cmp
cs
sub
icebp
testl
or
jp
lods
out
dec
enter
stc
mov
les
mov
cmp
sbb
xchg
push
test
mov
fnstenv
jno
idivl
int
lcall
lods
jecxz
mov
mov
mov
in
ret
xchg
arpl
adc
lret
or
popl
mov
iret
or
imul
sahf
adc
xchg
ret
std
sub
mov
inc
divb
sub
out
testb
add
add
mov
roll
arpl
add
pop
mov
adc
add
add
pop
lods
ret
jnp
pop
subl
scas
xor
addr16
mov
add
add
ficoms
add
add
lods
adc
pop
fwait
pop
ss
add
lret
cmp
jae
repnz
bound
ja
pop
jae
xor
add
test
mov
xor
add
add
pushf
pop
rcl
and
mov
mov
fstpt
add
lods
pop
inc
xor
dec
add
lahf
in
dec
mov
shrb
add
jo
ljmp
jg
test
std
insl
pop
into
shlb
cmp
cmp
int
add
add
jo
xchg
xchg
stos
daa
rorl
add
add
shrb
mov
cs
or
loop
or
add
add
aaa
ret
sarl
add
xor
sbb
shll
add
push
xor
ja
add
mov
add
out
inc
aam
add
add
lcall
jg
lahf
xor
mov
dec
jne
repnz
lcall
fcomps
mov
push
ficomps
mov
push
stos
jae
test
fstpt
xchg
call
add
jbe
add
dec
gs
ss
add
ds
test
cmp
mov
sbb
pop
mov
add
mov
in
jne
mov
add
lahf
cmp
jmp
mov
enter
sub
add
cmp
pop
testl
add
add
dec
cld
xchg
jae
add
add
stos
mov
or
dec
test
shl
add
mov
or
and
mov
mov
ficompl
adc
outsl
mulb
clc
int3
jno
outsb
cli
xchg
mov
add
hlt
jae
push
cld
push
cmp
pop
popf
loope
add
add
push
ret
add
loope
inc
mov
sbb
xchg
in
call
xchg
jl
push
mov
fdivl
insb
add
sbb
add
sti
dec
movsl
aam
jb
jbe
clc
inc
mov
inc
lock
add
daa
sub
jmp
add
pop
xchg
leave
pop
arpl
adc
dec
add
jl
sub
pop
xor
dec
cltd
std
mov
lock
xlat
sub
add
or
js
fmull
mov
adc
xor
jp
add
add
jg
add
scas
jmp
push
or
cmp
sahf
xor
cmpsb
cmp
add
inc
jo
sarb
and
add
mov
jo
push
cltd
out
sub
mov
test
or
adc
add
add
js
mov
adc
data16
xchg
mov
mov
sahf
mov
mov
insb
add
lahf
and
push
out
shll
add
aas
push
mov
insb
add
add
testl
or
add
add
mov
repz
adc
and
je
aas
push
sub
int
mov
inc
mov
subb
nop
and
mov
mov
adc
cmp
add
mov
push
sbb
add
add
jl
mov
in
in
nop
les
pop
jmp
icebp
or
mov
outsl
fdivrl
pop
push
add
inc
add
add
hlt
cmc
sbb
mov
and
mov
pop
ja
or
add
shll
push
cmpsl
js
stc
xlat
inc
call
mov
inc
in
mov
iret
inc
mov
daa
jb
stos
hlt
and
in
aaa
add
mov
fmuls
in
lcall
mov
fidivs
stc
xchg
push
loopne
jns
stc
sub
ja
pop
clc
std
jns
xlat
pop
ljmp
jno
jmp
incl
ret
xor
test
divb
add
or
popf
pop
lcall
sub
mov
add
lds
orb
js
lock
and
mov
movsb
das
jne
mov
or
mov
push
inc
enter
int
insl
inc
add
outsl
jmp
mov
dec
add
add
adc
push
inc
repnz
xchg
pusha
add
fistps
jnp
pop
int3
mov
add
nop
insl
jp
inc
das
nop
mov
add
mov
cmp
call
xchg
mov
add
int
insl
aam
dec
sarb
cmp
aas
ret
mov
scas
pop
sub
jo
add
add
dec
test
lcall
sbb
mov
ja
jge
add
add
add
or
xchg
and
es
pop
jl
mov
mov
pop
push
cmp
or
add
add
loop
insl
mov
es
mov
testb
mov
sbb
fsubr
push
jg
sbb
hlt
sub
add
add
jg
add
add
stos
es
mov
sub
mov
jecxz
mov
lcall
sbb
push
mov
add
and
push
lea
fdivs
repz
mov
je
mov
add
add
inc
sbb
and
add
cld
pop
outsl
test
je
push
push
jnp
pusha
add
push
out
mov
cld
mov
sub
mov
jecxz
out
xchg
loope
or
add
add
mov
test
dec
sahf
mov
pop
mov
in
imul
mov
add
popa
rcl
js
push
lret
cmpsl
inc
push
es
push
xchg
xchg
xor
cmpsl
aas
cli
or
mov
cmpl
rclb
sar
hlt
in
xlat
sub
test
mov
jle
cmp
sbb
sub
add
add
test
or
bound
add
test
and
add
add
add
xorl
cs
add
add
mov
rcrl
outsb
xchg
fcmovbe
ja
lea
mov
xor
insb
add
int3
mov
add
add
stc
sub
mov
outsb
mov
or
sub
jae
scas
or
pop
mov
pop
inc
dec
add
add
xor
pop
fsubrs
jno
inc
bsr
das
adc
movsl
mov
in
scas
enter
mov
pushf
icebp
mov
pop
inc
test
push
cld
sbb
dec
dec
pop
jo
lea
pop
sbb
addr16
push
jo
xor
test
loopne
out
into
push
push
sub
push
arpl
push
dec
dec
out
mov
pushf
jecxz
or
xor
icebp
rorb
add
gs
mov
xchg
cld
add
adc
pop
inc
lret
add
add
cld
mov
and
sbb
mov
mov
in
inc
add
add
add
xchg
out
pushf
or
mov
lods
mov
xchg
dec
add
add
mov
jmp
mov
mov
jne
push
dec
mov
aam
inc
push
mov
adc
push
insb
add
add
mov
xchg
xor
cltd
or
mov
sahf
mov
nop
imul
shlb
jle
adc
inc
add
ret
add
adc
add
add
add
or
add
mov
lret
pushl
ds
and
inc
fiadds
add
add
adc
repz
in
aaa
fwait
sbb
inc
add
aaa
ja
lcall
add
add
jne
jmp
inc
lock
leave
or
cmc
mov
test
jb
mov
mov
lods
mov
mov
daa
mov
add
add
add
pcmpeqw
insb
add
add
sub
mov
mov
sbb
mov
add
mov
aam
add
add
jmp
inc
fwait
int3
out
cmpsl
dec
inc
fsubp
lret
pop
dec
inc
adc
leave
dec
lcall
ret
or
es
xchg
mov
mov
xlat
or
xor
mov
add
add
cld
js
dec
cmp
lret
add
add
dec
add
add
lea
add
add
add
movsb
sub
inc
leave
add
add
add
add
add
or
add
add
inc
add
add
xor
push
dec
idivl
jmp
add
mov
sbb
loopne
push
adc
sahf
test
inc
inc
fcoms
add
add
icebp
lret
push
aas
mov
test
push
scas
and
add
add
fadd
out
add
sbb
dec
les
dec
iret
pop
rorb
dec
gs
mov
cld
into
int
outsb
mov
pop
test
xchg
rcrb
add
dec
mov
cmc
mov
mov
jo
inc
pop
fadds
daa
into
rcrb
jnp
aam
jl
jmp
mov
add
mov
mov
in
inc
pop
sbb
inc
push
dec
dec
in
sbb
cmc
sub
add
add
pop
sahf
scas
iret
mov
ds
adc
add
divl
bound
add
add
pop
aas
pop
loope
add
add
mov
xor
add
add
mov
sbb
cmp
add
push
xchg
cmp
sub
fnstcw
loopne
add
add
add
or
lock
cmpsl
test
dec
add
in
xchg
int3
cwtl
inc
pop
jo
movntq
les
stos
inc
repnz
mov
add
add
add
add
push
rorb
daa
out
xchg
jae
cmp
imul
and
or
cwtl
and
add
pop
push
add
lock
les
lock
and
stos
inc
sahf
xor
add
inc
push
xor
jns
inc
iret
push
sbb
das
out
les
add
push
adcl
test
sbb
div
push
mul
lock
inc
mov
add
add
les
adc
add
add
aaa
call
mov
add
add
lret
mov
push
inc
add
jne
jle
adc
push
je
les
dec
push
insb
add
add
repnz
lcall
mov
cmc
pop
data16
test
je
mov
pushf
popf
neg
sarb
je
mov
inc
push
mov
dec
fcoml
enter
dec
add
mov
pop
mov
add
pop
ss
mov
out
mov
loope
hlt
and
imul
mov
aaa
movsb
or
add
add
js
push
pop
sbb
divl
push
adc
mov
xchg
mov
aam
mov
add
inc
cmpsl
fwait
jmp
push
ja
rolb
stos
cmp
mov
mov
mov
push
or
mov
mov
adc
add
in
cli
mov
cwtl
bound
mov
outsb
xor
inc
add
add
push
pop
or
popa
mov
pop
leave
leave
ret
jnp
ret
cmpsb
fcomps
divb
jmp
cmp
adc
scas
into
push
push
xlat
sub
mov
shrl
cld
dec
dec
out
popa
sub
push
add
mov
mov
add
add
call
lea
add
aam
mov
add
add
and
add
add
add
add
mov
xor
jns
mov
loop
daa
test
push
jecxz
repz
push
inc
loope
and
dec
add
add
test
mov
jmp
daa
scas
lds
cmc
pushl
mov
mov
mov
test
inc
add
add
cli
fisttps
sub
jg
pop
dec
mov
bound
add
add
popf
das
cwtl
jge
popf
adc
adc
scas
out
or
mov
mov
ret
mov
add
in
mov
add
mov
ja
xlat
outsb
cmp
mov
fcmovnb
test
add
add
mov
xchg
in
mov
jmp
adc
pop
rclb
adc
arpl
add
add
popa
adc
pop
sbb
add
add
pop
jns
je
fbstp
test
hlt
negl
sbb
mov
mov
add
idiv
lahf
push
pop
test
sbb
push
jns,pn
add
dec
mov
sarb
push
jb
fwait
pop
pop
mov
add
add
or
pop
iret
mov
push
test
rcrl
ss
inc
aaa
cmp
iret
pop
mov
inc
add
vmptrst
sbb
mov
out
imul
divl
dec
sahf
sbb
push
fwait
in
jnp
insl
mov
rcll
jl
leave
sbb
sarl
shl
ret
jl
pop
insb
add
add
fwait
ret
push
jp
loope
aam
cmp
pop
cmp
and
mov
cmp
aaa
pop
call
hlt
test
fsubrs
add
add
stc
jae
mov
sbb
lds
push
jae
mov
mov
xchg
pushf
dec
add
jg
js
xor
aad
stc
mov
leave
loope
xchg
push
inc
mov
mov
adc
pop
pop
push
push
pop
pop
test
sbb
mov
fstpl
mov
add
mov
lcall
pusha
add
gs
xchg
mov
ss
rolb
fcomip
aam
and
cmp
add
add
mov
add
push
stos
ret
sbb
add
push
xchg
out
jbe
aas
xchg
add
add
pushf
stos
and
mov
imul
add
add
xor
mov
sub
mov
pop
xor
mov
cmp
dec
adc
mov
jae
fldt
shll
lahf
outsl
scas
outsb
push
pop
jmp
and
jns
mov
shll
mov
mull
xchg
adc
mov
mov
aad
xchg
cmp
jnp
pop
loopne
cmp
sbb
loopne
into
repnz
xchg
dec
add
add
add
cmp
mov
or
add
mov
or
sbb
mov
mov
outsb
cmc
stos
lret
scas
gs
mov
mov
mov
jo
sahf
andb
int3
jmp
das
sub
add
mov
imul
add
or
add
ficoms
insl
rcrb
jp
mov
jno
outsl
incb
jmp
and
call
adc
pop
push
adc
dec
jb
push
add
mov
mov
or
sub
push
adc
sub
mov
outsb
inc
push
push
xor
bound
aad
loop
hlt
adc
ret
pusha
add
andl
xor
xchg
idiv
ds
lock
add
xchg
mov
cmp
daa
out
jl
mov
add
add
add
sub
inc
sub
jmp
adc
add
add
add
cld
add
add
add
mov
arpl
lret
gs
jle
cld
pop
sahf
and
mov
push
int3
lds
cmpsb
add
add
mov
cli
mov
xor
cmp
add
orb
jae
loope
adc
movsl
icebp
js
lahf
int3
lcall
mov
add
jo
cwtl
pop
add
aaa
out
mov
xchg
add
jg
fcmovnb
cmp
push
cmp
out
xor
dec
or
popl
add
add
js
or
dec
add
cmp
pop
or
mov
push
fwait
loope
mov
mov
add
mov
add
xor
or
frstor
popa
inc
addr16
sub
gs
mov
add
xor
jg
xor
mov
cmpsb
test
adc
out
jle
mov
jmp
cmpsb
in
dec
add
add
js
lret
test
or
rclb
shrb
fiaddl
add
sbb
shrl
add
add
jbe
test
repnz
add
cmpsb
add
movsl
aas
clc
call
das
dec
into
add
or
jl
cmc
xor
dec
push
je
fstps
fwait
ror
jg
mov
pop
aad
lock
rorb
stos
addr16
popa
fsts
cmp
pop
inc
or
lea
add
add
push
cs
lea
mov
movsb
jbe
mov
pushl
mov
inc
adc
push
shlb
add
stc
jmp
int3
inc
loope
mov
pop
push
mov
push
cmc
scas
push
rcr
xor
cmc
ds
data16
mov
xor
and
mov
sbb
add
mov
nop
mov
push
xchg
inc
xchg
xlat
aad
mov
roll
and
mov
sahf
mov
adc
sub
insb
add
add
stos
cwtl
aad
ss
int
push
mov
xchg
arpl
inc
addb
addl
cmp
ljmp
int
or
xchg
jp
adc
fisttpl
mov
mov
jmp
je
rol
mov
std
lea
add
add
notb
add
add
add
dec
add
add
xor
add
das
mov
call
xor
sub
add
add
inc
repnz
shl
mov
cmp
xchg
movsl
push
lock
mov
or
mov
jne
sbb
lcall
or
hlt
mov
leave
jp
cmpsl
loopne
mov
mov
add
in
pop
out
iret
or
lods
add
add
add
mov
js
xchg
mov
fildl
int
in
cmp
and
add
add
jae
xchg
sti
cmc
stc
into
insb
add
and
sub
cmpsl
rcl
stos
in
push
out
in
mov
rcrl
stc
dec
sbb
in
xchg
aad
mov
idivl
int3
xchg
adc
add
xchg
sar
shl
xchg
inc
ja
cwtl
test
movl
mov
stos
jbe
faddl
out
jecxz
pop
jmp
dec
adc
insl
sub
mov
mov
jb
aam
cmp
add
loopne
incl
mov
xor
add
add
fldcw
add
xor
decl
je
orl
jmp
rcll
ret
mov
mov
cld
lds
insb
add
add
mov
dec
bound
push
jne
xchg
shlb
add
mov
daa
push
mov
mov
add
add
jnp
sub
add
sbb
xchg
xchg
adc
sub
xchg
and
add
push
aas
ss
mov
add
out
cmp
fwait
ja
xor
xchg
test
push
push
dec
gs
jno
loopne
add
add
xorl
add
lret
leave
fcmovnbe
loopne
sbb
sbbl
add
mov
cwtl
push
scas
and
add
add
inc
xchg
es
cli
or
int3
jo
dec
add
add
mov
or
mov
hlt
sub
sub
add
adc
add
mov
cwtl
jle
inc
sub
add
add
mov
mov
push
sbb
mov
cmp
and
ficompl
push
rorl
mov
jle
insb
add
mov
sub
mov
mov
fisttps
sub
xchg
stc
daa
inc
imul
out
lcall
js
xchg
in
jno
ror
cmp
jno
cmp
inc
outsl
ljmp
and
sub
xlat
fists
imul
xchg
fcoms
jecxz
and
xchg
jl
adc
xor
fimuls
iret
cmpsb
negl
add
dec
sahf
pusha
add
lods
push
mov
xor
sub
xchg
aam
add
sahf
push
nop
cltd
in
sub
add
add
dec
leave
inc
xor
jne
xchg
es
push
jecxz
jnp
data16
insb
add
les
xchg
addr16
sbb
ret
into
or
jg
leave
mov
add
xchg
cmp
xor
jl
sbb
cmc
sub
mov
sbb
add
mov
add
dec
test
call
mov
xchg
add
push
repnz
mov
jbe
push
mov
out
push
mov
ja
add
add
gs
push
bound
jmp
repz
das
inc
add
add
mov
mov
sbb
mov
or
cmp
mov
mov
add
mov
add
add
int3
leave
callw
cltd
roll
xor
fucomp
movsb
repnz
dec
jb
jg
roll
aam
add
subb
add
scas
inc
inc
xchg
mov
je
in
icebp
daa
push
movsl
icebp
mov
mov
and
add
shrb
add
sub
add
add
mov
mov
add
add
jecxz
pop
or
mov
stos
push
lret
cmc
and
xor
ja
inc
pop
dec
add
add
push
aam
dec
test
add
std
sti
ss
icebp
sarl
cmpsl
inc
xor
call
out
cmpsl
inc
add
add
pop
pop
mov
add
add
add
add
sub
mov
int3
insb
add
add
xor
xchg
in
push
pop
and
std
push
das
mov
fwait
test
add
add
xchg
sbb
add
lea
popf
nop
sub
idivl
stc
push
xor
xchg
sbbb
or
mov
mov
lcall
xchg
xlat
adc
jl
xorl
jbe
mov
sahf
stc
mov
dec
add
add
scas
ss
shll
adc
aas
adc
mov
pop
pop
push
pushf
lods
cli
mov
int3
mov
push
xchg
mov
stc
or
add
push
fdiv
out
mov
cmp
imul
pop
movsb
ret
pop
xor
stos
xchg
rcll
dec
inc
add
add
mov
cmp
push
add
add
cs
clc
das
mov
inc
push
mov
sbb
subl
add
mov
add
add
add
in
xchg
push
adc
xchg
les
pop
jle
mov
add
mov
add
mov
stos
ljmp
imul
cmpsb
clc
arpl
loop
outsl
decl
xchg
jb
rorb
cltd
mov
add
je
sarb
jnp
int
ficompl
fildll
add
rclb
test
add
push
out
cmp
insb
add
add
jmp
mov
xor
call
out
bound
in
jb
es
xchg
sbb
flds
add
add
repnz
scas
jb
and
xchg
cmpsb
and
mov
cmp
jmp
mov
cmp
cmp
xor
add
mov
xchg
xchg
xchg
call
dec
sbb
add
sbb
insb
add
add
pushl
add
add
lds
mov
imul
add
sbb
fnstcw
pop
mov
add
add
jg
stos
jb
out
rorl
mov
adc
xchg
pop
cld
mov
fwait
in
pop
mov
push
dec
pop
loope
mov
mov
push
in
sbb
add
add
outsb
lahf
lock
mov
cmp
test
add
xchg
out
cltd
xor
or
add
add
and
std
mov
dec
xchg
cwtl
popf
push
int
aaa
xchg
lahf
add
das
outsb
outsl
xchg
mov
mov
sbb
mov
scas
jb
jp
add
add
xchg
xchg
dec
add
add
and
add
add
fisubs
add
mov
fsubp
mov
pushf
ljmp
pop
mov
jle
sub
mov
hlt
cwtl
cmp
add
add
jo
push
mov
xor
invd
add
add
add
loop
popa
pop
dec
inc
in
add
out
pop
inc
jbe
gs
cmp
enter
sub
or
mov
cmp
and
out
add
add
pusha
add
add
sub
pop
jae
push
fidivrl
repnz
pop
push
xchg
sti
subb
xchg
scas
jne
icebp
sub
call
pop
sbb
pop
mov
ja
gs
jg
out
fcomps
add
jnp
push
aaa
cs
add
add
add
cld
inc
and
jge
add
popf
xchg
push
insl
iret
pop
jae
push
loope
xor
mov
jp
and
xchg
jae
push
gs
movsb
cltd
and
enter
stos
fists
insb
add
repz
in
cmc
jmp
int3
sbb
add
add
inc
pop
push
adc
call
add
add
lds
leave
push
pushf
mov
mov
fst
or
mov
push
jg
jecxz
sbb
mov
ss
mov
push
cmc
xchg
mov
and
adc
sar
pushf
in
loope
orb
add
add
loope
int3
mov
add
dec
test
add
adc
aad
jns
mov
jo
mov
add
dec
cmp
xorl
add
add
add
mov
loop
imul
test
add
add
jae
jmp
out
or
and
mov
inc
add
add
popa
mov
sti
adc
ss
sub
xchg
push
mov
lahf
inc
fisttps
sub
jl
jmp
add
insl
pop
sub
add
mov
inc
mov
mov
outsb
daa
popf
in
sbb
test
mov
mov
mov
push
adc
cmp
mov
pusha
add
add
cld
dec
pop
lds
inc
and
lds
pop
mov
or
movsl
mov
fdiv
stos
jbe
push
push
cmp
mov
xchg
jae
adcl
xchg
inc
lods
mov
cli
mov
inc
aaa
int3
push
sahf
popf
jge
je
mov
sub
add
add
outsb
mov
xchg
add
mov
xchg
sbbl
jmp
lcall
jle
insl
es
inc
pop
xor
insb
add
es
add
add
pusha
add
add
popf
fdivl
add
add
inc
cli
push
cmp
mov
std
and
add
sbb
push
loopne
lods
pop
test
es
xchg
jo
push
xchg
sbb
fimuls
or
dec
add
add
mov
les
stos
shl
jl
mov
les
add
pop
in
cltd
add
es
in
icebp
push
push
mov
popa
xor
aas
rolb
add
push
loop
mov
or
pop
lahf
mov
lock
cmp
jl
xor
mov
inc
lea
add
lods
mov
out
dec
add
add
adc
dec
in
dec
cmpb
int3
cmc
lods
jmp
inc
ja
movsb
xchg
sub
shlb
sub
scas
inc
sub
xor
add
add
and
outsl
and
mov
cmpsb
int
add
add
xchg
mov
jnp
jns
es
jo
pop
mov
shrb
add
add
add
and
add
add
stc
dec
cli
lods
sbb
dec
add
add
scas
jae
jbe
push
push
pop
cmpsl
xchg
inc
dec
mov
lds
fnstsw
mov
mov
leave
cs
fbld
add
add
cmp
ret
and
add
loope
add
popa
ret
jae
jae
add
scas
mov
mov
popa
out
ljmp
inc
add
leave
and
in
fldl
push
clc
jnp
arpl
outsl
mov
rcrb
fmul
rcll
mov
add
cld
movsb
cli
popa
out
push
test
enter
movsl
data16
mov
or
mov
xor
out
sub
add
add
mov
add
add
mov
mov
jmp
add
in
inc
mov
mov
add
add
push
into
push
shlb
test
add
add
add
pop
flds
add
add
mov
push
out
shll
add
xor
clc
call
popa
cmp
add
pushf
ss
dec
adc
shrb
mov
lahf
lods
xor
pushf
jle
stos
fsts
mov
xchg
cs
cli
not
cmp
das
imul
xchg
out
insb
add
dec
popf
cld
rcrl
mov
imul
out
sbb
push
testl
add
add
adc
dec
movsl
cmp
enter
add
or
add
add
pop
jnp
out
test
cltd
std
push
je
cmpb
adc
mov
sub
mov
es
lock
aad
dec
mov
and
shll
int3
xchg
sbb
dec
lods
cmp
cltd
push
and
mov
cmpsb
inc
mov
sbb
dec
inc
adc
add
sbb
pop
ficompl
cmp
xchg
cltd
jb
in
outsl
shl
xor
clc
insb
add
add
in
outsb
movsb
mov
push
nop
movsl
push
sub
test
and
ja
xchg
lret
or
aas
dec
call
sbb
in
hlt
mov
scas
ss
mov
push
enter
add
repnz
push
xchg
mov
fldpi
sub
ret
inc
call
xchg
in
test
sbb
iret
sti
ret
or
mov
jmp
add
add
stos
out
mov
imul
fbstp
mov
pushf
stc
or
mov
add
xor
add
sbb
out
and
push
dec
add
in
dec
pop
jae
outsl
jb
add
mov
aaa
adc
dec
add
dec
add
add
jo
int
push
leave
or
popa
adcb
add
and
loop
mov
mov
xchg
bound
add
add
and
int
jle
xor
add
add
in
das
and
add
adcl
int3
xchg
in
mov
add
add
add
int3
add
insl
ret
xchg
lods
test
les
cmp
jo
add
add
add
pop
push
push
mov
add
lods
mov
inc
and
add
add
jno
mov
bound
mov
add
jno
arpl
je
and
mov
add
add
dec
pop
out
inc
das
les
xor
mov
fidivrs
iret
inc
xchg
inc
sbb
jae
loop
mov
ja
imulb
and
shrl
add
mov
push
cmpb
xor
insl
out
adc
lcall
mov
loopne
pop
pop
xor
das
arpl
xchg
xor
sti
push
inc
icebp
jmp
movaps
pop
addl
pop
xchg
lds
inc
and
mov
add
repnz
mov
sbb
out
adc
xor
add
add
mov
mov
sub
mov
add
lahf
cltd
loop
test
mov
xor
outsb
out
dec
add
test
jmp
add
pop
movsl
pop
jno
inc
add
add
xor
pop
and
out
add
add
add
add
and
add
add
add
in
inc
out
and
cli
rep
inc
shrb
and
mov
popf
fnstenv
mov
scas
sbb
fbld
cld
pop
jmp
les
pop
popa
add
sub
mov
push
pop
in
sbb
or
add
add
insl
push
fstpl
push
hlt
stos
pop
mov
xchg
into
js
hlt
rcr
sbb
into
lds
sbb
add
pop
scas
adc
or
dec
pop
pushf
dec
movsl
or
and
add
add
inc
jmp
sahf
insl
adc
roll
mov
outsl
addr16
push
lahf
jo
pop
push
and
adc
fnsave
cwtl
mov
push
ljmp
sbb
pop
push
daa
out
pop
mov
loopne
push
push
pop
cmpl
and
in
jb
lds
inc
add
add
mov
in
mov
jg
xchg
sub
sub
xor
add
add
add
mov
add
add
lret
add
add
sub
mov
mov
add
add
js
lods
xchg
fstpl
out
sbb
aas
inc
add
add
add
push
jge
add
add
je
jns
pop
insl
add
push
int
adc
sarb
sub
mov
xchg
mov
clc
movsb
mov
cld
inc
adc
mov
add
add
mov
add
add
add
mov
push
and
sbb
inc
inc
add
push
stc
lahf
and
add
add
aad
pusha
add
add
ja
sbb
insb
add
add
add
cmc
pop
add
add
xchg
cmpb
push
lea
push
or
mov
inc
iret
stos
xchg
inc
xchg
aaa
sbb
add
add
or
aad
sahf
mov
popf
jns
mov
mov
mov
in
lcall
add
lahf
enter
loop
add
dec
cmpsl
xchg
push
je
mov
out
ja
cmpsl
push
adc
and
mov
pusha
add
add
bnd
add
add
loope
ss
mov
imul
sub
int3
aaa
inc
xchg
int
sub
add
mov
aaa
mov
not
jmp
and
cld
push
sub
mov
dec
xchg
jl
outsl
and
add
movsl
mov
inc
push
lahf
xor
push
pop
xor
add
lods
or
add
adc
xor
arpl
lods
outsl
mov
add
jns
es
shlb
mov
inc
adc
dec
shl
jp
sahf
clc
or
mov
push
push
push
add
fmull
mov
pusha
add
mov
and
sbb
jmp
mov
int
stos
stc
cmpsb
add
mov
dec
jmp
test
sbb
or
mov
ljmp
inc
adc
xchg
cmp
adc
repz
adc
push
mov
sbb
pop
push
mull
add
add
add
xchg
xor
fmull
add
add
add
push
xchg
add
insb
add
add
push
fsts
add
add
lods
xor
sbb
sbb
test
xchg
ret
add
sub
mov
jne
or
pop
sbb
dec
lods
hlt
lret
je
stc
insb
add
add
add
add
add
cmp
lret
out
add
cmp
sbb
xor
in
sarb
popa
pusha
add
ja
inc
in
add
mov
sbbb
iret
movsb
and
testb
pop
xchg
cmp
shl
mov
adcb
cmc
iret
push
inc
xchg
in
dec
lods
add
out
arpl
sarb
pop
jp
ds
add
add
nop
mov
es
repz
add
nop
faddp
outsb
mov
idivl
jge
fistps
add
roll
add
sub
cli
fsubl
loope
test
mov
or
inc
cwtl
int
stos
rorb
out
push
mov
mov
xchg
faddl
lea
stos
mov
and
add
nop
iret
jne
add
mov
mov
les
fst
movsl
push
xchg
lock
push
inc
add
add
cmp
mov
xchg
lods
stc
add
dec
fcmovnb
add
add
add
push
sti
adc
push
or
out
adc
mov
add
test
mov
dec
add
add
es
xchg
cli
js
adc
scas
sub
jmp
pop
repz
add
add
mov
sbb
iret
xchg
fisubrs
add
xchg
sbb
or
add
movsl
cwtl
out
bnd
ret
dec
pop
jae
or
aas
mov
data16
fstpt
inc
add
add
int
std
rorl
pop
mov
push
mov
stos
fisubrs
add
add
add
sbb
stc
ficoml
add
or
add
add
shll
call
add
dec
add
inc
add
add
add
inc
push
aam
bound
mov
sbb
mov
push
test
add
das
and
push
add
mov
adc
addb
mov
add
add
jg
nop
outsl
mov
inc
add
mov
lret
fld
dec
cmp
add
add
or
mov
jl
sub
add
add
test
jbe
add
out
push
adc
scas
test
push
sbb
and
gs
jge
insb
add
insb
add
add
in
cmpb
scas
ljmp
orb
mov
jmp
mov
mov
cmp
shlb
sbb
in
mov
add
mov
rclb
add
add
add
add
add
jmp
outsb
and
mov
push
in
adc
cmpsl
cmc
dec
add
mov
add
cmpsb
jbe
push
dec
scas
inc
imul
dec
mov
dec
add
add
add
inc
js
xor
xchg
dec
add
add
outsl
push
and
aam
push
dec
add
add
mov
nop
xchg
out
sub
in
xor
lock
xor
add
bound
aas
lret
push
mov
lods
pop
lods
and
test
add
add
and
mov
cmpsb
push
mov
cmp
popf
loopne
js
fildll
xor
int
outsl
mov
push
push
add
mov
mov
cmp
loopne
lea
push
mov
bound
gs
inc
add
add
inc
adc
or
mov
add
cli
sbb
add
xchg
sub
pop
adc
adcb
pop
push
movsl
and
inc
add
add
out
inc
jmp
stos
mov
xchg
pop
clc
mov
filds
hlt
add
mov
cmp
mov
adc
xor
aaa
bound
popl
int
bound
and
mov
or
mov
test
add
xor
nop
sub
adc
insb
add
les
sbb
ds
add
xchg
mov
add
scas
aaa
jb
and
call
add
adc
in
push
jbe,pn
mov
sub
test
inc
add
add
pop
mov
xchg
popf
movsl
shlb
push
push
orl
dec
mov
push
mov
add
gs
hlt
test
addr16
mov
add
add
add
adc
or
fwait
test
mov
add
scas
mov
les
leave
daa
lcall
bound
add
inc
inc
filds
mov
and
add
add
shld
ljmp
add
sub
mov
aas
mov
loope
mov
jge
xlat
fcompl
das
dec
jecxz
xchg
sub
fwait
nop
movsb
stos
adc
and
add
or
leave
imulb
add
out
push
inc
push
jnp
outsl
mov
jbe
or
mov
mov
test
jmp
in
push
xor
ljmp
sub
int3
sub
and
repz
lods
cmp
adc
lret
add
mov
mov
pop
or
or
mov
inc
adc
xchg
pop
jno
fildll
add
xlat
scas
mov
movsb
aam
dec
add
sbb
daa
dec
shll
adc
negl
iret
outsb
int3
loopne
inc
add
add
movsl
xor
xor
jge
outsb
push
insl
lods
cmp
and
mov
pusha
add
add
add
cmpsb
fimuls
into
cltd
mov
xor
in
in
pop
fnstsw
cmp
lds
mov
xchg
mov
scas
cs
mov
dec
es
cmp
loop
incl
add
mov
add
adc
add
pop
xchg
dec
add
add
add
adc
add
add
arpl
popa
es
xor
test
incb
dec
sub
add
add
cmp
xor
lahf
cmpl
push
cmp
sti
jp
lea
add
add
inc
add
aaa
push
jp
movb
inc
movsl
shlb
sub
mov
push
popa
jp
xchg
rorl
pop
and
repz
into
rolb
pop
das
mov
sub
add
add
cli
cli
out
inc
sti
insl
or
adc
jo
add
add
sbb
int3
mov
sbb
stos
cmp
mov
rolb
scas
jp
and
out
int
rolb
outsb
popl
sbb
or
add
add
incl
loopne
add
cmc
es
cld
test
bound
fldl
push
cmp
fwait
pop
ret
fidivrl
dec
add
idivl
mov
and
add
and
push
push
mov
ljmp
add
jnp
pop
push
outsl
mov
mov
hlt
push
pop
mov
inc
sarl
pushf
and
add
add
mov
sti
jl
shlb
and
shll
xlat
pop
mov
aam
mov
dec
call
adc
sbbl
adc
add
add
pop
ret
inc
sub
add
add
push
ret
test
add
add
xor
add
lods
mov
shl
arpl
call
add
dec
jno
lret
fdivrp
pushf
xor
mov
sti
cmp
add
mov
imul
popf
jno
adc
xor
mov
add
sbbl
pop
imul
sti
ret
bnd
xchg
jnp
and
adc
jne
xchg
mov
lods
or
add
push
ret
fnstsw
mov
pop
push
sub
add
add
insl
fimull
jg
sub
xchg
in
jg
sub
xchg
fistl
ror
mov
stos
xor
lcall
das
inc
add
xor
les
add
xchg
inc
mov
mov
popf
mov
xchg
stos
mov
dec
cld
add
mov
sbb
jl
scas
nop
and
add
add
test
mov
add
add
es
mov
add
lea
add
add
subb
cs
dec
punpckhbw
add
add
cmp
add
gs
movsb
outsb
inc
sbb
mov
sahf
mov
jle
into
or
mov
push
ret
push
jne
mov
lret
js
pop
xchg
xor
fimuls
test
fwait
arpl
add
add
add
add
in
aad
adc
push
xchg
adc
add
inc
mov
add
add
shlb
and
mov
ficoml
out
add
add
add
fstpl
jnp
dec
inc
sbb
inc
ljmp
daa
pop
xchg
cmp
xor
repnz
sbb
pop
bound
mov
stos
aas
popf
cld
and
add
add
mov
adc
and
in
xchg
add
add
fwait
sub
add
add
add
sub
pop
repnz
idiv
and
shlb
movsl
std
add
add
test
sbb
add
shlb
cmp
sbb
add
adc
loopne
scas
mov
cwtl
and
lret
rol
jns
adc
mov
pop
std
aad
popf
inc
sbb
xor
popa
cmp
mov
ljmp
aam
xchg
icebp
ror
dec
add
add
into
lret
add
add
add
sub
add
add
dec
add
aam
imul
add
mov
pop
mov
push
out
movsl
and
add
add
call
add
mov
add
add
fnsave
xor
dec
adc
mov
test
add
add
dec
jb
pop
jmp
jno
xchg
fldpi
lds
or
add
add
sub
in
ja
gs
iret
cmpsl
add
xor
sbb
add
adc
add
icebp
ljmp
add
add
inc
add
add
sbb
jnp
sti
sbb
movsb
sbb
aam
add
or
int
lods
enter
xor
adc
nop
cltd
xchg
testl
add
add
stos
fdivl
std
fiaddl
add
jno
into
enter
sbb
add
push
jmp
add
jb
shlb
add
sbb
add
dec
lods
fsubrs
ss
add
add
rclb
dec
and
add
out
pusha
add
add
cltd
dec
jae
xor
fdivs
cli
test
add
lret
divb
pop
ja
popa
jae
std
aad
mov
cmpsb
insl
shlb
pusha
add
aas
movsb
into
or
add
add
mov
and
add
xor
cmp
inc
and
add
add
sar
fmul
repz
aad
mov
add
add
add
movb
add
cmpsb
jb
pop
or
in
je
xchg
ret
cmpsb
jb
insb
add
add
mov
sti
hlt
jecxz
cmpl
add
or
fisubl
popa
fsubrl
mov
push
inc
popa
aas
mov
and
add
add
inc
push
xchg
mov
lods
cmpsl
rorb
rolb
jle
stos
sub
push
sub
fdivrl
fwait
loop
push
cs
jnp
push
stc
test
add
add
add
scas
lcall
leave
fwait
clc
fyl2x
pop
int3
pusha
add
scas
mov
add
mov
add
mov
add
add
add
sub
add
add
stos
daa
pop
or
add
add
jmp
fwait
add
add
add
jg
out
push
mov
sbb
mov
push
aas
cmp
dec
lods
sbb
or
add
add
xlat
sqrtps
sub
pop
xchg
jmp
icebp
push
sub
add
pop
stc
inc
inc
add
mov
xor
icebp
and
adc
and
mov
nop
sahf
mov
cmp
xor
cmc
in
jp
sarb
je
scas
sub
mov
leave
sti
mov
inc
add
clc
cltd
sub
sub
ljmp
popf
xlat
das
pusha
add
mov
mov
push
and
cltd
sub
imul
sti
sbb
dec
mov
lcall
add
cltd
xor
pop
sub
mov
xchg
sbb
mov
mov
pop
in
jnp
sarl
and
and
xchg
cltd
pop
es
imul
add
add
push
data16
mov
xor
xchg
cwtl
imul
pop
bound
pop
xor
push
sbb
xchg
lea
mov
pop
mov
pop
jns
add
lahf
push
xor
mov
add
add
adc
arpl
fwait
add
add
add
ljmp
push
mov
out
mov
stos
cmpsb
mov
cli
out
sti
rcrl
in
insl
loop
xlat
cli
mov
or
mov
in
add
add
icebp
mov
lret
mov
add
sub
mov
in
add
stos
sbb
test
out
dec
jae,pn
pop
cmc
pop
faddl
mov
or
add
add
adc
in
add
add
add
lock
sub
add
imul
mov
jno
subl
xlat
inc
mov
fistps
std
inc
add
and
mov
cmp
pop
sbb
fcomp
dec
push
iret
arpl
adc
mov
xor
fwait
xor
stos
ret
rolb
add
add
jp
mov
int3
mov
xlat
in
sub
rcll
inc
cld
sarl
popf
lcall
mov
add
push
mov
add
add
xor
outsl
add
add
and
shlb
add
in
call
add
popl
dec
cmp
add
dec
add
sub
mov
dec
sub
shrb
add
jo
outsl
pop
mov
inc
es
movsl
cmovns
xor
cmpsl
insl
jg
mov
add
add
or
dec
dec
test
mov
or
imul
loop
fimuls
dec
mov
add
xchg
dec
fcmovnb
jnp
xchg
push
adc
sbb
add
add
sub
add
cld
cmp
add
mov
sbb
xchg
sub
push
jne
mov
jecxz
imul
stos
dec
pop
mov
lea
ret
pop
sbb
xchg
jo
int
ja
bound
lods
adc
add
or
pusha
add
out
mov
mov
dec
add
xor
mov
sbb
inc
mov
test
sbb
add
mov
shll
addr16
mov
push
in
cltd
mov
jb
add
aas
xchg
les
and
shll
sahf
push
imul
lret
subl
add
ljmp
in
neg
les
add
add
xor
pop
outsb
adc
ja
cmpsb
pop
sbbl
in
fnstcw
pop
push
cli
jnp
or
add
xchg
dec
aas
adcb
fistpll
icebp
push
dec
ret
cmpsb
jle
aaa
mov
add
test
pushf
dec
adc
xchg
jmp
inc
push
jl
add
outsl
cs
push
hlt
ljmp
leave
xor
or
stos
jne
add
add
mov
mov
scas
into
xlat
push
cmp
into
shrb
mov
inc
adc
pushf
movsb
shll
test
add
ss
test
mov
stos
push
jnp
add
add
test
inc
add
mov
add
add
push
mov
xchg
mov
cmc
pusha
add
add
adc
mov
pop
rcr
adcl
push
xchg
push
sub
add
add
enter
scas
sub
fdivs
add
add
mov
mov
repz
and
add
add
add
add
add
add
outsb
incb
in
scas
jo
iret
sbb
xchg
xor
jbe
jmp
out
jmp
add
add
in
lods
jg
mov
test
mov
add
jg
fucomp
fcomps
adc
movsbl
dec
add
push
lods
test
jo
and
and
movsl
fisttpl
push
sbb
repnz
sub
push
xchg
ret
cmp
adc
repz
lahf
dec
add
mov
adc
mov
mov
jns
mov
cmpsl
adc
mov
jecxz
fsubrl
inc
add
add
cmpsl
add
adc
pop
push
mov
mov
sub
sbb
pusha
add
mov
dec
rcr
in
sub
mov
add
add
sahf
push
mov
out
adc
jp
xchg
lcall
pop
ror
jl
xchg
daa
mov
bound
jge
mov
pusha
add
mov
cmpsb
and
mov
sub
add
add
mov
dec
cli
push
imul
leave
fiadds
dec
jmp
cmp
pop
mov
mov
pushf
in
daa
inc
movsl
dec
cmp
add
add
mov
loopne
aas
and
mov
and
stc
mov
test
adc
mov
add
adc
pop
pop
push
subb
add
dec
adc
stos
inc
aam
ficoms
or
xchg
mov
mov
and
add
add
aam
xor
outsb
pop
fstps
int
fiadds
ret
cmp
insl
cmp
stos
sub
mov
push
add
mov
testb
fstps
mov
cmc
push
lahf
stc
repnz
outsb
lods
outsb
jne
add
add
stos
lea
pusha
add
add
ja
pop
int3
stos
mov
or
add
add
xchg
jnp
xor
in
loope
shrb
add
add
fyl2x
sub
mov
dec
add
add
nop
xor
lahf
shlb
ljmp
sbb
cmp
test
adc
or
mov
mov
mov
add
add
mov
push
push
mov
in
sbb
mov
add
add
add
data16
mov
xor
rolb
mov
mov
and
jmp
sub
pop
outsw
pop
pop
mov
inc
daa
stc
sbb
sub
add
add
cmp
pcmpeqb
repz
add
add
sub
xlat
add
add
add
imul
add
add
jle
popf
push
imul
pusha
add
add
mov
xchg
push
mov
enter
je
out
pushf
mov
add
xchg
test
mov
ljmp
add
ror
cli
mov
cmc
mov
mov
sub
mov
add
mov
add
add
out
stos
out
jbe
jecxz
cmpsl
lds
push
and
cmp
add
gs
pop
push
xor
jg
loop
add
add
aam
sub
mov
in
fnstsw
mov
jne
sub
pop
arpl
mov
cs
lods
mov
addr16
jb
jbe
dec
in
mov
and
push
inc
mov
and
cmc
out
fptan
sti
ljmp
int
or
mov
sarb
mov
add
scas
cmc
ret
std
cwtl
stos
imul
mov
push
dec
add
add
cltd
adc
adc
mov
call
and
leave
mov
fildl
mov
std
std
rcrb
aas
popa
popa
push
cmc
outsb
test
ret
sbb
loopne
les
fwait
dec
add
add
imul
push
mov
std
adc
call
sub
jl
inc
scas
add
pop
and
mov
enter
add
imul
mov
mov
fstpt
test
sbb
mov
outsl
das
xlat
outsb
or
add
add
jns
and
and
mov
xor
mov
mov
mov
ja
mov
test
and
rol
xor
jp
repz
sbb
mov
mov
add
add
add
add
je
sbb
sbb
dec
add
add
push
ficomps
adc
cmp
xor
xchg
xchg
dec
add
add
add
imul
dec
addr16
into
pop
out
sti
idiv
sbb
jno
push
lods
dec
stos
into
insl
mov
jp
add
add
add
jle
mov
cmp
add
push
ret
push
dec
sbb
mov
mov
shll
inc
adc
add
cmpsb
xor
jne
shll
repnz
add
out
add
add
std
data16
add
add
cmp
push
pop
test
shrb
lock
mov
cmp
scas
out
push
lahf
xor
movsl
mov
add
add
inc
mov
adc
lret
cli
fistpll
mov
inc
add
pop
sub
add
add
call
adcl
jno
cmpsl
mov
xor
xchg
cmp
cmp
add
aaa
pop
mov
es
data16
les
aas
popa
bound
loopne
pop
rol
xor
add
adcl
pop
xchg
pop
mov
add
mov
jne
ljmp
adc
pop
rcll
lock
push
fsubl
addr16
or
xor
sbb
xchg
movsb
lods
sti
mov
xor
add
add
out
cltd
rcrb
mov
loop
rorl
mov
fnclex
add
inc
mov
scas
imul
add
and
stos
dec
adc
jbe
mov
enter
pusha
add
and
add
add
shlb
add
add
mov
and
in
xchg
or
add
scas
repnz
add
rcrb
mov
add
add
mov
popa
pop
push
in
add
data16
xor
out
mov
dec
rorl
dec
std
test
sub
aas
add
add
add
das
pop
xor
dec
std
jbe
mov
dec
add
add
add
repz
and
jg
push
pushf
cmc
iret
das
sub
jne
mov
add
xor
ror
xchg
sti
into
jns
bound
stos
icebp
leave
dec
pop
enter
mov
dec
fsubrs
mov
add
adc
xchg
in
into
push
xor
push
fwait
lds
scas
xor
stc
mov
lock
lahf
sub
mov
add
add
push
and
add
add
add
add
jbe
daa
pop
in
gs
mov
jg
fdivrs
in
movb
add
repnz
js
lret
sub
scas
xor
sbb
xorl
xchg
in
or
xchg
lcall
add
xor
add
dec
add
fidivrs
test
add
add
psadbw
add
add
cmp
pop
daa
ja
sub
add
add
inc
push
repnz
mov
xor
xchg
xchg
jle
popa
outsl
mov
lods
imul
movsl
or
add
add
mov
adc
xchg
lods
lea
mov
in
pusha
add
add
je
js
mov
push
push
mov
mov
cli
inc
dec
add
add
decb
add
dec
xchg
ffree
cmpsb
cli
out
mov
mov
out
and
scas
mov
add
add
add
add
imul
cltd
adc
xor
jb
jecxz
rcll
sub
pop
xchg
es
sbb
ds
adc
mov
pusha
add
mov
cltd
dec
sti
std
cmp
jl
pusha
add
xchg
add
add
test
pushf
pop
shr
dec
add
add
push
ja
stc
jne
clc
and
leave
fisubrs
shlb
loope
add
adc
and
fsub
xchg
add
mov
and
mov
add
add
and
cmc
repnz
mov
add
or
add
add
add
xchg
dec
jmp
daa
push
sub
add
add
in
jl
jb
cmpsl
mov
add
add
cmp
sbb
sub
test
mov
inc
jae
lret
stos
into
add
add
add
xor
dec
push
and
add
pop
add
mov
fidivrl
push
fstl
cmp
add
movsl
jbe
rolb
repz
pusha
add
mov
dec
test
mov
test
add
add
jmp
pushf
mov
add
add
mov
xchg
and
subl
mov
jnp
xor
push
xchg
out
es
jns
lods
imul
or
mov
bound
daa
jne
andl
add
add
pop
mov
adc
mov
mov
lods
daa
xor
repz
fwait
ret
ret
sub
mov
lahf
push
push
cmp
roll
mov
movsb
nop
in
movsb
sarl
or
add
add
add
push
ljmp
xchg
cmp
test
add
and
mov
add
add
jno
mov
mov
fildll
cmpb
push
and
mov
lods
mov
rcrl
adc
push
cwtl
not
pop
data16
out
out
push
popa
push
pop
or
icebp
mov
into
in
jae
movsb
cmp
mov
andb
add
das
push
mov
add
add
mov
sub
add
add
mov
dec
nop
dec
push
sahf
daa
jae
out
adc
adc
into
inc
fisttpl
lds
lods
or
add
add
and
dec
add
sub
mov
pop
mov
imul
cmp
cmpsb
fisubrs
dec
add
add
repz
int
push
addr16
xchg
fwait
inc
inc
add
add
xchg
push
xor
leave
add
xor
jnp
in
and
add
add
push
jnp
mov
add
scas
sub
popf
in
jp
xchg
mov
hlt
data16
pop
xchg
mov
mov
movsl
adc
out
cmp
xchg
enter
mov
sahf
repnz
push
enter
lret
adc
pop
aam
insl
xlat
rclb
cmp
arpl
push
incl
mov
dec
mov
ja
cmp
pop
repz
fcmovbe
and
in
mov
std
stc
xor
mov
add
add
pushf
into
cmp
push
sbb
dec
mov
xchg
cmc
pusha
add
add
ret
ljmp
add
fisttps
mov
cmpsb
jbe
add
nop
js
int
cwtl
das
push
ljmp
add
mov
sbb
add
mov
jp
pop
movsl
daa
push
sub
jmp
inc
add
add
pop
rcrb
in
mov
call
ds
sub
mov
add
cmp
or
pop
fisubs
xchg
push
lock
inc
inc
pop
push
cmpsl
fdivs
in
bound
je
mov
push
jecxz
pusha
add
dec
push
scas
scas
jne
int
and
mov
ficoms
push
add
pop
fstl
inc
add
add
scas
pusha
add
lock
arpl
push
and
pushf
sbb
mov
mov
add
xchg
movsl
or
movsl
test
into
data16
cmp
ror
xor
xchg
mov
dec
mov
jbe
cmpsb
add
mov
xor
push
mov
mov
bound
mov
add
js
push
mov
or
add
sbb
xor
daa
test
fsts
in
fucomip
pushf
rcll
xchg
out
hlt
stos
xchg
mov
loopne
or
jmp
fildl
add
add
add
add
ja
aaa
aam
out
mov
add
mov
in
loop
mov
clc
das
and
add
add
stos
adc
pop
fists
sti
loop
pop
lods
sub
cld
lock
push
arpl
jns
mov
stc
or
mov
dec
dec
loopne
shlb
xchg
daa
cwtl
test
ficoms
loop
daa
xchg
fimull
je
adc
mov
fadds
mov
add
mov
jecxz
add
add
addr16
rolb
inc
cs
inc
test
add
add
in
push
cmp
xor
add
orb
pop
rorb
mov
test
add
push
mov
add
add
add
add
add
push
add
mov
xor
mov
data16
mov
add
add
sbb
daa
in
adc
shrb
pusha
add
mov
mov
add
sbb
sbb
dec
mov
mov
lods
sbb
sar
mov
add
add
rcrb
inc
out
test
mov
inc
pop
dec
add
add
mov
repz
bound
cmc
mov
cmp
jmp
or
and
rcrl
add
add
mov
dec
push
adc
stc
mov
pop
and
add
add
fldenv
mov
add
insl
insb
add
cmpsl
adc
insl
or
jnp
mov
lret
cmpsl
xor
hlt
mov
and
push
int
ftst
cmp
lds
je
out
mov
push
rorl
nop
jb
cmp
jg
mov
popl
decb
orl
inc
stos
loope
xchg
push
idivb
or
add
add
jl
and
cmpsl
cs
insl
push
push
aas
loopne
mov
add
fwait
ss
dec
cld
push
xor
js
cmpsl
or
xchg
cmp
mov
add
cmpsb
cmpb
mov
or
lds
mov
add
add
push
sub
in
mov
add
add
xorb
xchg
xor
jecxz
sub
addr16
jmp
outsb
push
jle
xchg
jge
rcll
mov
adc
adc
lock
hlt
iret
hlt
fildl
jno
lea
mov
icebp
movsl
xchg
and
add
add
add
and
mov
xor
mov
dec
mov
in
aad
mov
lahf
add
mov
cli
cltd
inc
add
add
xor
addb
add
or
mov
inc
call
add
and
mov
cmp
fsubr
enter
jno
adc
add
add
add
in
aam
fmuls
int3
sub
fistpll
mov
add
mov
ss
aam
mov
and
add
add
inc
repz
pop
pusha
add
add
push
mov
clc
cltd
pusha
add
sub
mov
pop
sub
mov
xlat
push
aam
cli
and
lods
das
mov
sbb
pusha
add
lcall
loop
add
add
mov
mov
add
xor
fisubrl
fidivl
leave
jl
mov
xchg
shrl
ret
lds
mov
cmpb
jo
jae
mov
sbbl
add
lods
xchg
mov
icebp
inc
xchg
pop
and
lret
ja
inc
je
jmp
inc
add
add
popf
dec
pushf
cltd
dec
mov
mov
loopne
je
cmc
imul
mov
mov
sbb
add
xchg
jns
jg
js
stc
xchg
jns
add
mov
lods
sbb
cld
xchg
jecxz
add
jbe
sub
mov
mov
or
faddl
add
add
jecxz
add
add
xor
dec
adc
addr16
addr16
push
or
pop
jno
mov
xor
out
mov
pop
stc
cmp
mov
loopne
and
push
fdivs
call
add
add
mov
popa
add
lcall
ret
mov
mov
arpl
mov
add
cli
scas
pop
in
aas
mov
add
inc
add
shrl
xchg
add
mov
and
sti
rcrl
mov
add
add
add
mov
inc
ds
icebp
mov
add
mov
push
mov
add
inc
add
mov
xor
sub
mov
sbb
aam
pop
jge
jge
pushf
mov
add
and
out
movsl
jl
add
add
outsb
hlt
pop
push
scas
lods
inc
xchg
les
push
loop
dec
sub
mov
repz
mov
adc
add
ds
xchg
and
cltd
jns
cmp
mov
data16
bound
int3
adc
popf
lock
adc
jne
es
pop
fnsave
cmp
gs
lret
or
int
ret
mov
sub
pop
je
lods
sbb
dec
add
shll
mov
aaa
jb
fmull
mov
add
mov
sub
push
jmp
testb
jmp
std
inc
roll
add
add
adc
add
add
add
mov
scas
test
sub
mov
adc
add
stc
xor
popa
jns
add
add
imul
pop
or
add
add
cli
das
sbb
cltd
xor
mov
dec
in
and
pop
push
test
test
jbe,pn
dec
ret
lds
sub
add
add
int
sahf
es
sbb
jg
popf
fildl
xchg
mov
add
add
add
mov
mov
sbb
add
or
in
xchg
lret
jae
iret
das
imulb
add
test
fcomps
sub
mov
stos
xchg
push
movb
mov
add
cmp
jl
sbb
add
add
lds
mov
mov
or
add
faddl
xchg
mov
jne
add
add
std
xor
mov
mov
or
push
xchg
fsts
add
call
and
mov
cmpsl
cmp
dec
adcb
push
sub
cmpsl
pop
bound
aas
xchg
ja
into
dec
adc
stos
mov
lock
mov
mov
cmp
les
pop
cld
enter
sub
mov
add
lahf
jl
sahf
rcrl
mov
dec
add
add
add
push
sahf
and
mov
cmpsl
xchg
outsl
xor
xchg
mov
pusha
add
add
aaa
or
pop
movsb
mov
add
jp
mov
sti
fcompl
jecxz
add
add
dec
inc
add
add
xchg
gs
add
add
add
mov
add
add
add
in
and
mov
lret
mov
adc
mov
dec
imul
xchg
and
mov
iret
add
je
xchg
add
mov
lods
mov
jbe
add
add
push
sub
gs
push
cmp
cs
jle
les
sbb
insl
cmp
leave
andl
adc
shlb
xchg
mov
and
add
add
out
rcll
icebp
add
pop
pusha
add
add
pop
es
and
add
add
lods
das
bound
cli
lahf
stos
sub
add
add
adc
mov
gs
mov
lcall
add
sub
cmpsl
xor
xchg
jae
mov
stos
mov
mov
sarl
push
repnz
adc
nop
ljmp
jnp
add
add
xor
inc
add
add
daa
sbb
fsubrl
aad
leave
jo
rcll
add
and
add
cmp
pusha
add
add
pop
ret
ds
jp
das
les
pop
psrlw
add
add
cmp
push
andl
sub
into
leave
and
mov
inc
ljmp
mov
add
add
add
mov
into
pop
fisubl
ja
pop
pushf
xor
rclb
lahf
mov
jmp
add
adc
mov
mov
jl
jb
push
pop
data16
sbb
loopne
stos
mov
push
cltd
fwait
sbb
cs
sbb
add
pop
or
mov
shr
inc
test
sbb
adc
add
loopne
xchg
cli
ret
cmp
add
push
mov
data16
add
add
mov
push
jno
in
and
add
add
adc
stos
iret
dec
add
add
scas
stos
loope
or
pop
cmpsb
stos
mov
test
xchg
sbb
add
add
dec
add
hlt
ret
and
inc
add
add
sub
jns
cli
imul
stc
cmp
add
mov
add
add
insl
aad
mov
sbb
test
cltd
push
adc
cmp
mov
das
aad
in
movsb
ficomps
jp
or
add
add
push
es
push
add
mov
nopl
add
add
sahf
pop
cld
and
push
push
popf
popf
lock
arpl
mov
mov
push
jmp
fisttps
leave
imul
cmp
mov
add
sarb
mov
int3
cmp
sub
add
add
rcll
std
stos
insb
add
add
sbb
lds
mov
push
sub
mov
add
add
adcb
push
xchg
outsb
xchg
cmp
sub
lea
and
pushf
dec
sbb
aas
adc
sahf
xchg
xlat
in
fcomp
ss
xorl
xchg
xchg
add
add
mov
sub
fiadds
mov
add
push
adc
fbld
add
push
aad
ret
mov
dec
add
mov
and
add
add
inc
add
mov
adc
sub
add
add
enter
add
push
push
clc
sub
lods
std
pop
jns
inc
shll
add
add
jmp
ljmp
daa
movsl
jmp
push
sub
add
add
xor
rclb
loope
outsl
mov
jnp
adc
dec
push
sub
add
add
mov
xchg
cmp
xlat
cmc
push
mov
sbbb
add
add
xchg
inc
in
rsm
or
add
add
cmc
mov
add
push
mov
add
add
js
sarb
jg
adc
cli
aas
push
out
inc
enter
mov
cltd
adc
add
push
adc
lods
lcall
fisubl
add
add
pop
dec
and
and
leave
push
hlt
dec
mov
test
mov
mov
jo
add
cmp
daa
repz
mov
add
adc
popf
test
add
mov
mov
mov
cmc
shll
fidivrl
add
cmp
jle
ret
xor
ffreep
xchg
popf
mov
rcl
popf
and
jbe
adc
ret
pusha
add
add
inc
jg
xchg
into
ds
and
int
pop
pop
inc
add
add
add
add
and
mov
out
scas
push
jbe
mov
add
add
sbb
add
lret
cmpsl
lock
add
add
add
sub
out
xor
push
mov
add
mov
or
add
add
jbe
add
xchg
jno,pn
int3
mov
push
mov
lahf
mov
mov
add
mov
add
add
mov
xchg
scas
incl
dec
add
add
ret
inc
pop
outsb
cmp
sub
add
add
mov
xlat
ret
out
cmc
sbb
push
sbb
and
outsl
fmul
scas
outsl
add
out
jae
ds
mov
cmpsw
cwtl
inc
mov
xor
mov
jae
jg
jnp
aad
add
add
add
inc
out
xchg
jge
sbb
add
add
dec
dec
xchg
xor
into
xchg
popa
aaa
mov
in
or
mov
dec
jcxz
xlat
pusha
add
add
inc
xchg
xorl
xor
mov
mov
lods
jecxz
cmp
aaa
jle
push
fmuls
push
dec
stc
cli
xor
in
in
ret
std
xor
add
lret
das
mov
std
arpl
add
add
ret
fsubl
push
lahf
add
mov
fmull
sbb
clc
pop
out
push
mov
or
mov
add
mov
sub
test
push
jns
sub
mov
add
add
movsl
push
es
enter
add
ficompl
or
xor
pop
push
scas
cmp
neg
xchg
push
enter
mov
test
add
lods
pushf
lds
cltd
dec
rolb
mov
daa
xchg
es
out
pop
fidivs
add
xchg
cld
inc
cmpsl
push
movsb
bswap
out
inc
mov
fwait
pop
ja,pn
sbb
xchg
popf
stc
repz
add
add
lea
lret
cld
add
mov
imulb
mov
push
and
add
jl
mov
add
add
fsubl
jnp
out
scas
ret
adc
dec
add
shrl
cmp
lret
sub
add
add
add
add
add
rcll
add
add
xchg
aam
add
aam
inc
scas
negl
mov
add
add
cltd
inc
mov
jo
mov
cmp
cli
rcll
lock
jns
pop
cmp
jo
push
sahf
push
sarb
test
push
mov
pop
cmp
mov
mov
add
cli
sbb
pop
add
cmp
jne
add
mov
cmp
jbe
lock
idiv
jp
xlat
xchg
fistpll
inc
pop
into
lods
xlat
xor
xlat
mov
push
mov
mov
jl
sbb
add
add
push
xor
mov
and
mov
iret
rcr
jmp
jle
in
jne
out
xchg
sti
cmp
pusha
add
xchg
ret
ficomps
inc
loope
or
push
xchg
push
jg
add
add
aam
test
adc
lret
mov
jg
lret
adc
mov
add
adc
mov
fbld
mov
negb
scas
sbb
jmp
pop
inc
test
inc
add
add
mov
test
cwtl
push
movsb
shl
inc
and
mov
dec
loop
pusha
add
ds
cmp
add
add
cmp
cmp
aad
xchg
icebp
jo
jb
repz
daa
mov
test
adc
jbe
cmp
dec
out
subl
popa
lahf
cmp
aaa
cmp
hlt
int3
cmc
mov
add
push
loope
ficoms
add
add
add
add
add
add
pop
push
adc
aaa
jb
add
out
ja
mov
sub
mov
mov
pop
in
inc
xchg
pop
jle
and
xor
test
shrb
mov
add
add
jne
jecxz
out
lret
jmp
daa
movsl
stos
fnsave
shll
in
fdivs
arpl
sub
add
add
push
xor
mov
xor
lods
insb
add
add
add
lock
pop
in
or
mov
push
sub
mov
jne
cmp
lods
inc
jne
fisubrl
dec
lock
rolb
lods
popa
cmc
out
ret
mov
adc
ret
cli
andl
movsl
popf
js
mov
push
and
add
sbb
daa
mov
lock
out
ja
out
xor
imul
add
mov
add
add
sbbb
scas
lcall
das
push
xchg
cmp
jnp
sub
fnstcw
dec
add
movsb
cli
sti
leave
out
scas
xchg
int3
xchg
pop
sub
mov
jle
add
add
push
sti
imul
adc
mov
insl
push
enter
add
add
add
add
ljmp
pop
dec
xchg
adc
add
fwait
sbb
and
add
add
xchg
lcall
mov
dec
sti
jl
cmp
ficomps
add
out
cmp
push
sti
scas
shll
add
xlat
ja
adc
and
icebp
mov
add
add
mov
sub
sbb
and
add
mov
mov
stos
fsubl
clc
mov
xor
xor
or
jp
dec
push
outsb
jge
xchg
mov
add
xlat
xor
lahf
xor
push
out
inc
std
cmp
mov
and
mov
int3
cmpsl
jle
jecxz
or
out
jns
pop
sbb
xchg
sub
xor
ret
mov
pop
popa
nop
mov
add
aam
push
orb
or
pop
inc
aas
cli
in
aad
add
jl
sub
mov
or
add
add
loop
dec
xor
mov
and
js
inc
pop
insl
insl
std
mov
inc
mov
mov
mov
jecxz
xchg
jne
xchg
jge
mov
sti
inc
add
jns
cld
adc
ljmp
cmp
mov
pushf
lods
or
add
add
jecxz
pushf
push
cmc
lahf
pop
ss
cmpsb
dec
add
nop
scas
cmp
test
add
pop
es
sub
mov
and
jno
scas
sub
pop
push
jl
inc
push
shrl
or
inc
add
add
add
fists
add
mov
sarl
jge
mov
jbe
pop
shlb
mov
in
adc
push
and
mov
testl
cld
rcrl
lcall
popf
sub
mov
pusha
add
add
or
add
add
mov
mov
dec
fcoms
add
aaa
pop
push
jl
cmove
mov
xlat
adc
jl
shll
movsl
push
and
mov
mov
lds
decl
lds
sbb
movsl
rolb
rcrl
add
sbb
mov
and
into
mov
push
lock
cmp
mov
add
out
pop
dec
dec
mov
add
pop
xchg
ret
mov
cmp
add
pop
add
sbb
xchg
movsl
es
stos
xor
xor
imul
jg
movsl
jmp
and
not
push
inc
dec
xchg
xchg
popa
mov
add
cmp
add
add
mov
adc
jae
mov
add
shll
push
lods
das
jns
imul
push
mov
mov
add
sahf
sbb
clc
ja
loope
imul
frstor
pop
mov
mov
sub
add
add
or
ficompl
es
outsb
cltd
add
mov
sbb
push
push
mov
inc
add
add
dec
add
xchg
add
add
add
add
inc
mov
add
add
add
add
mov
lahf
arpl
add
or
mov
pop
pop
pop
jg
daa
repz
mov
jge
stos
adc
ds
xchg
jnp
orb
dec
add
add
leave
int
push
pop
or
add
add
das
xor
daa
mov
mov
add
add
pop
das
repnz
or
and
mov
ret
inc
cmp
int3
push
ljmp
xor
add
int
pop
test
rclb
neg
mov
sahf
jne
mov
add
int
cmp
idivl
xchg
xor
add
nop
mov
and
and
loopne
aad
mov
add
add
or
negl
test
mov
popa
dec
add
add
add
filds
inc
add
add
push
push
xor
and
test
in
xchg
add
add
add
add
sbb
inc
imul
mov
arpl
int3
and
imul
pop
mov
jge
and
pop
in
dec
add
mov
aad
pop
inc
pop
arpl
sbb
sahf
in
ljmp
add
add
pop
or
add
add
add
sub
scas
mov
lret
and
sbb
adc
mov
nop
jns
cmp
pop
sub
add
outsb
lock
repz
add
mov
inc
xor
xor
add
add
add
cmpsl
stc
xlat
pop
jae
lcall
add
pop
lret
push
mov
jnp
scas
in
mov
inc
andnps
loopne
dec
xchg
cmpb
pop
cmpl
test
pop
test
push
andb
fwait
in
add
add
add
or
add
dec
loop
rcll
sbb
mov
xchg
outsl
xorl
cmp
inc
rol
inc
cld
pop
xchg
aad
adc
mov
xchg
loope
push
loopne
xchg
jle
push
sbb
jo
jle
movsl
cld
lcall
ds
fidivs
fwait
ds
loopne
adc
jl
mov
ja
shrb
add
add
mov
int
pop
pop
data16
push
cmp
and
add
add
add
aaa
push
adc
or
dec
imul
dec
adc
push
aam
xchg
cmp
push
add
fistl
int3
sub
add
add
mov
inc
lret
add
push
cli
and
mov
xchg
add
add
add
or
leave
movsb
dec
cmp
sbb
pop
mov
ret
inc
mov
add
add
cltd
lcall
push
sub
add
mov
arpl
dec
xor
xor
mov
fildl
add
add
jns
repnz
cmp
out
test
or
and
add
add
loope
inc
mov
js
push
outsb
inc
je
lods
dec
add
add
into
test
push
mov
pop
xor
adc
repz
les
push
je
sbb
in
cmp
xchg
jge
jno
add
add
jge
add
add
mov
add
in
out
dec
add
push
dec
cmp
imul
pop
dec
dec
mov
xchg
inc
push
pop
jae
jg
sub
lea
mov
xchg
sbb
jno
sti
cmp
xor
sbb
addr16
dec
adc
movsl
dec
test
push
das
sti
decb
mov
arpl
or
cmp
or
enter
xor
jno
adc
and
mov
test
or
mov
sub
out
cmpl
jnp
lcall
sbb
pop
jmp
mov
adc
add
add
sarl
add
add
add
add
add
in
dec
sbb
mov
pushf
xchg
sarl
xchg
aam
sub
add
add
scas
dec
call
mov
sahf
sti
ret
add
add
add
add
in
inc
fwait
lret
sub
loopne
mov
jl
movsl
jl
pop
mov
mov
add
cmpsb
cwtl
repnz
xor
push
aad
xor
jmp
cmp
outsb
int3
daa
xlat
pop
lcall
add
stos
cld
scas
xchg
shlb
mov
push
push
scas
push
cld
mov
les
xchg
mov
cmp
xor
add
pushf
jbe
jg
xchg
add
add
in
into
dec
pop
icebp
out
adc
add
in
push
insl
jecxz
add
add
sub
add
add
out
push
lods
loopne
imul
jae
or
loop
jo
add
mov
add
add
add
add
inc
add
add
xchg
inc
sahf
lret
cld
add
mov
xor
xor
mov
add
shlb
add
jp
jae
insl
mov
daa
repnz
push
inc
xchg
roll
ja
push
xor
inc
sarl
sbb
mov
test
pusha
add
mov
or
nop
sub
inc
loop
stc
xchg
pop
dec
add
add
out
push
je
stos
div
roll
add
add
in
push
aas
pop
mov
and
add
add
push
xor
cmp
add
mov
cmp
add
add
stos
adc
add
push
mov
into
inc
jo
xchg
nop
inc
pop
and
xchg
das
sti
jo
lahf
lds
add
pop
stos
insb
add
add
iret
xchg
or
add
add
mov
and
mov
xor
cs
pop
mov
and
out
sbb
xor
xor
fidivrl
or
adc
jae
aam
scas
and
lock
add
mov
stos
or
add
add
outsl
or
mov
jns
xorb
mov
lods
out
pop
arpl
xchg
and
add
add
leave
leave
dec
mov
adc
dec
in
inc
adcl
add
cmpsb
cli
and
stos
and
js
mov
pop
mov
inc
test
xchg
cs
lcall
outsb
cmp
outsb
cmp
outsb
add
add
push
push
dec
add
add
add
ret
fcoms
adc
mov
dec
jnp
sbb
xor
add
lcall
pop
aas
xchg
out
aaa
cltd
daa
mov
add
xchg
addr16
out
adc
jmp
sbb
and
cmp
je
push
mov
cwtl
inc
pop
notb
add
mov
xor
repz
into
sbbb
jmp
cmp
in
fadd
adc
rcr
pop
daa
sbb
cltd
lret
pop
add
jp
inc
sbb
scas
iret
int3
and
mov
aam
inc
pop
lds
mov
add
add
fnstsw
dec
push
mov
dec
jbe
pop
mov
jecxz
mov
add
icebp
popa
mov
pop
loope
ja
cmp
add
add
mov
movsl
and
call
mov
clc
mov
pop
cld
mov
call
adc
xlat
pop
int
adc
in
dec
lods
jnp
jmp
mov
jbe
cwtl
imul
mov
push
enter
xchg
lret
addr16
add
add
pop
cmp
add
add
int
push
lods
in
cltd
arpl
sti
mov
loop
dec
xchg
xlat
cmp
aam
and
push
out
je
movsb
movsb
je
les
mov
out
fwait
negl
rorl
mov
xchg
sbb
mov
and
shll
add
add
ja
pop
scas
into
pop
insl
enter
dec
fadd
and
mov
add
add
mov
les
or
add
sub
fbstp
dec
jecxz
xchg
jae
push
aad
mov
xor
xchg
jne
jbe
pop
adc
mov
mov
hlt
pop
iret
lret
pop
cld
out
or
mov
ret
out
jae
mov
push
dec
mov
xor
testl
pop
fldt
add
add
jmp
pop
xorl
add
xor
jns
sbb
test
mov
mov
jg
add
stos
in
jo
pushf
in
dec
popf
jae
add
test
scas
inc
aas
xchg
push
into
sarl
sub
add
add
int3
adc
push
mov
dec
add
fbld
cld
mov
mov
add
add
mov
add
sub
xchg
ret
movsl
inc
fcompl
add
add
mov
add
mov
das
adc
push
mov
mov
add
pop
jmp
add
push
sti
fcmovnu
imul
add
add
pushf
popf
ds
fcomps
xchg
jl
ret
and
add
add
movsb
inc
pop
pushf
cmp
leave
mov
lods
je
das
mov
sahf
das
insb
add
add
jge
inc
xchg
mov
mov
mov
jb
imul
add
aas
jecxz
leave
mov
push
mov
add
push
push
cmpsl
pop
fadd
push
leavew
add
mov
in
add
xor
test
inc
mov
int3
jns
xor
imul
push
lret
daa
push
xchg
rsqrtps
cmpsl
xchg
fwait
inc
test
fildll
nop
mov
mov
enter
sub
add
add
mov
mov
in
cltd
xor
mov
mov
rorl
gs
lret
xor
hlt
or
add
add
mov
adc
xor
add
cwtl
mov
add
push
inc
dec
dec
adc
add
add
les
inc
shll
pushf
aas
jnp
push
scas
adc
mov
push
bound
pusha
add
push
outsl
sub
dec
and
mov
add
add
lods
jecxz
sbb
je
ja
std
outsb
pop
mov
xor
leave
inc
cmpsb
cmpsb
test
pop
es
xor
or
mov
xor
inc
add
popa
mov
cmovno
ja
adc
xchg
sti
jno
xchg
and
sti
sahf
mov
add
pop
xchg
xchg
test
jo
leave
inc
add
add
movsb
sti
ficoms
into
divb
dec
gs
mov
mov
add
js
stos
out
cli
rcrl
push
enter
in
push
mov
cmc
xlat
push
xchg
cwtl
and
mov
add
add
cmc
cmp
xchg
push
popf
dec
aas
lret
notl
xor
pop
out
lret
xor
inc
dec
cmpsl
popf
mov
add
test
inc
stc
push
icebp
jmp
xor
sub
add
shlb
pushl
or
sti
enter
cmp
inc
andl
and
mov
imul
in
ret
and
mov
mov
sbb
xchg
sbb
xchg
test
jbe
stos
pop
insb
add
loopne
push
mov
rcl
jns
sahf
je
ss
jl
ficoml
lcall
jmp
fidivs
cmpsb
jmp
ja
pop
lds
pop
add
mov
daa
cmpsb
ljmp
sub
add
add
dec
add
add
cmc
loop
and
add
inc
or
add
add
cmp
jb
clc
pop
and
mov
mov
add
xchg
xchg
sub
xor
add
add
sbb
cld
fsts
adc
adc
aad
inc
xor
sub
add
add
xor
or
add
add
pushf
in
add
and
mov
sti
inc
push
cmp
rol
in
add
add
cmp
fsubrs
sbbl
in
mov
push
out
testb
jb
in
mov
jge
test
pop
and
add
add
test
int
repnz
js
xchg
es
mov
mov
xlat
aaa
in
or
add
add
add
dec
add
add
lods
aam
add
movb
xchg
jns
ret
neg
cmp
mov
xchg
jle
loope
push
cli
adc
pop
xor
add
add
mov
add
movsl
add
shr
hlt
shl
push
push
jle
add
add
sbb
jns
jnp
and
mov
cmp
ret
das
je
push
add
mov
pusha
add
add
fisubrl
push
pop
jle
out
dec
jmp
and
mov
add
mov
and
sub
add
add
sub
add
add
add
movsb
sub
jge
scas
jge
out
mov
pop
inc
je
add
add
push
leave
or
mov
push
mov
hlt
mov
inc
add
add
adc
sub
add
add
ss
xor
btrl
cmp
xor
pop
dec
aaa
icebp
pop
mov
add
inc
add
cmpsb
push
sbb
dec
sub
push
jbe
loop
cmp
imul
mov
cmpsl
test
pop
and
sbb
pop
dec
je
or
mov
mov
mov
mov
push
cmp
or
pop
lods
jns
outsb
fmulp
test
clc
mov
or
inc
dec
add
arpl
test
sahf
dec
stc
xor
mov
shrl
or
add
add
lds
mov
in
mov
jg
addr16
mov
mov
jns
getsec
dec
add
add
pop
xchg
fsubrl
mov
loope
lcall
test
or
inc
xchg
dec
loop
sub
or
jle
popf
andb
add
add
popa
sub
cpuid
sti
movsb
scas
clc
jmp
add
mov
jbe
adc
jno
int
dec
pop
xchg
mov
and
mov
cmp
push
scas
or
add
add
mov
negb
test
xchg
jne
inc
add
je
mov
dec
jns
or
mov
mov
jo
xchg
mov
cmpsb
sbb
dec
ret
stos
fdiv
pop
ret
mov
cmp
ficoml
mov
add
dec
inc
imul
sbb
ljmp
push
xor
js
pop
mov
scas
adc
mov
xchg
adc
fwait
lea
ds
aaa
cli
pop
xchg
mov
dec
pop
jbe
ljmp
push
decb
jecxz
or
addr16
add
add
mov
sub
add
add
push
jp
xchg
adc
add
add
xor
mov
in
cmp
enter
fsubl
ljmp
xlat
dec
mov
pop
inc
add
test
shlb
mov
sub
pandn
cmc
in
leave
xchg
pusha
add
add
xchg
mov
ljmp
inc
je
add
add
test
add
add
xor
stos
test
push
xor
add
add
cmpsb
fwait
mov
dec
call
cld
ffreep
cmp
xchg
lret
jae
sbb
push
es
adc
in
mov
movsb
dec
arpl
jg
jg
pop
cmp
dec
lds
lds
add
add
bound
jmp
ret
shll
sarb
add
add
gs
xchg
jno
sbb
fstps
and
or
sbb
inc
sbb
iret
mov
add
cmp
and
add
add
test
add
add
sub
mov
jo
xor
jmp
mov
mov
add
add
ficoml
mov
mov
es
out
jecxz
lahf
scas
mov
dec
add
add
or
add
add
imul
push
mov
insl
sbb
mov
add
add
test
addr16
sub
add
add
and
add
mov
mov
fsubrs
mov
lods
loope
push
sbb
dec
xor
pop
xor
hlt
mov
test
adc
inc
lret
cmp
mov
add
test
inc
add
add
pop
xchg
adc
rolb
jb
add
add
pop
adc
pop
dec
pop
sub
shrl
aad
jp
fwait
sarl
std
xlat
fcomps
mov
mov
int3
iret
insb
add
add
push
xchg
sbb
add
add
add
dec
add
add
and
add
push
push
in
pop
jne
push
popf
je
mov
xor
add
addb
push
stos
jne
mov
mov
mov
add
orl
test
mov
int
orl
ja
add
add
add
dec
sub
mov
lcall
or
mov
or
shll
add
pcmpeqw
push
sub
mov
mov
jbe
add
add
jnp
inc
or
mov
jae
xchg
lds
imul
sbb
pop
sahf
shr
int
insb
add
jnp
sti
mov
mov
jo
gs
pop
sub
mov
dec
inc
pop
cltd
stos
insl
lea
orl
movups
inc
roll
add
mov
fsubrl
add
add
aaa
idivl
outsb
xchg
jo
add
add
push
pusha
add
add
xchg
pop
dec
dec
jp
xchg
fiadds
fwait
xchg
mov
cmp
dec
add
add
push
test
xor
add
adcb
inc
add
add
add
dec
lahf
mov
icebp
rorb
add
std
out
mov
add
in
sbb
add
aas
inc
movzwl
les
inc
mov
add
push
push
test
loop
add
add
mov
mov
ss
jl
sub
xor
pop
mov
or
add
add
add
je
add
add
fbstp
flds
add
add
adcb
pushf
fptan
xchg
data16
sti
add
add
mov
add
shll
leave
scas
fidivrl
sub
add
add
mov
pushf
mov
fadds
sbbl
hlt
popf
xchg
push
cmp
dec
add
mov
inc
add
loop
xchg
in
iret
adc
pop
paddq
add
add
mov
xor
das
dec
icebp
and
mov
repz
pop
movsl
adc
add
add
adc
add
gs
ss
pop
pop
jmp
jle
jg
pop
nop
fistps
adc
fldenv
push
stos
mov
add
jb
insl
inc
add
add
adc
cmc
rcr
mov
and
xchg
add
add
lret
push
mov
add
icebp
inc
jnp
aas
rolb
sbb
jge
push
mov
vpavgb
or
add
shl
pop
aas
int
sarb
add
push
pop
pop
test
pop
insb
add
outsl
jno
pushf
imul
cmp
scas
xchg
inc
shlb
cmpsl
push
out
xchg
mov
dec
add
jmp
imul
adcl
cmp
cmp
push
mov
or
add
loopne
test
dec
add
loop
mov
add
add
add
add
pop
test
xchg
pop
out
mov
adc
jns
cmp
push
out
ljmp
jne
gs
sbb
int3
into
mov
mov
jnp
jae
cmc
jns
sbb
or
dec
jne
popf
push
adc
loope
and
unpcklps
add
fists
sbb
cld
push
mov
loopne
cmp
aaa
push
cmp
cwtl
xor
mov
js
in
les
jl
in
test
mov
add
add
push
test
xor
xlat
nop
ljmp
test
es
data16
pop
iret
cmp
jmp
cltd
push
outsl
inc
jg
cld
sti
jl
mov
add
add
add
add
inc
add
int
cmp
add
mov
lcall
or
add
add
add
das
adc
push
sbb
in
cmpsl
test
int3
adc
push
mov
mov
mov
add
jno
or
cmp
add
repnz
in
test
aas
stos
xchg
adcl
jg
cmp
hlt
or
add
aad
jo
insl
inc
rcl
mov
add
add
push
and
add
add
add
add
dec
in
daa
daa
sarl
sbb
inc
xor
or
mov
jl
xor
mov
add
add
push
repz
and
push
sub
sub
add
add
test
inc
mov
xchg
sub
add
add
mov
mov
xlat
pop
je
add
push
icebp
mov
out
sub
add
add
adc
add
add
pusha
add
incl
out
aam
pop
inc
sahf
dec
fisttpll
dec
pop
icebp
inc
add
in
xchg
push
jp
repz
cmp
mov
mov
insl
rcrl
ds
add
jne
jmp
popf
negb
add
add
jge
push
jae
and
push
push
ret
mov
inc
add
add
cmp
add
add
push
adc
adc
and
js,pn
adc
js
add
xor
test
add
stos
add
add
stos
fsubl
add
add
gs
xchg
les
ret
rcll
mov
mov
push
jl
lahf
add
add
add
scas
and
rolb
pop
pop
mov
call
fdiv
dec
in
push
lahf
cmp
xchg
fnsave
sbb
inc
data16
shlb
add
add
les
or
add
add
iret
sub
pop
insl
test
enter
mov
add
add
add
stos
push
xchg
stos
cmp
add
cmp
add
das
or
es
cmpsb
insb
add
add
mov
pop
add
rorl
inc
movsb
fisttpll
and
xor
lret
mov
add
mov
add
imul
je
add
add
add
cs
inc
add
add
or
ja
lea
out
cmc
std
jmp
pop
push
xlat
sub
mov
xchg
int
dec
stos
sar
popf
pop
test
add
add
and
xchg
push
mov
push
jne
or
mov
add
xlat
lahf
sti
dec
inc
pop
pop
in
fsts
pop
pop
mov
pop
dec
add
js
movsb
mov
add
add
lods
sbb
add
add
add
add
lret
inc
add
mov
pusha
add
add
pop
repz
pushf
xor
js
stc
sbb
fmuls
xchg
and
or
imul
inc
out
ljmp
je
cmpsl
lahf
adc
sbbl
cmp
adc
jbe
dec
idivl
mov
mov
add
dec
sbb
sbb
push
rcr
or
jae
in
pop
sbb
shl
mov
repnz
sub
mov
and
pop
cmp
ja
dec
add
add
and
add
add
leave
cmp
add
xor
mov
das
les
data16
add
fimuls
jb
push
jle
xchg
test
cmpsl
mov
pushf
dec
jno
mov
les
ljmp
jecxz
jae
cli
mov
cs
orb
or
add
imul
call
stos
cld
in
mov
add
add
jnp
cmp
rolb
pop
add
inc
sub
es
dec
add
add
add
inc
gs
mov
es
adc
and
es
mov
add
add
sbb
mov
add
add
lds
xor
add
add
mov
jnp
icebp
test
xor
and
loop
push
outsb
stos
outsl
into
adc
mov
inc
xor
mov
stos
sub
mov
out
fimull
add
ret
hlt
mov
out
popa
mov
insb
add
add
imul
add
adc
inc
rcrl
push
in
addr16
jo
or
imul
mov
add
add
add
inc
and
mov
dec
sbb
mov
add
out
sbb
jmp
xlat
int3
ror
leave
lcall
fmull
lods
out
sti
xorl
mov
mov
mov
hlt
rorl
add
stc
mov
andb
lret
lds
add
add
add
or
add
add
and
sbb
xchg
int
or
mov
cmp
add
pop
out
xchg
mov
sbb
add
push
enter
or
mov
jp
mov
xchg
mov
inc
add
cmp
jmp
mov
adc
xchg
dec
add
add
add
jmp
inc
push
sbb
or
mov
add
add
push
xor
mov
insl
mov
sbb
mov
stc
xor
inc
adc
xor
dec
jmp
xchg
lret
dec
xor
xor
stos
xor
pop
mov
sbb
mov
outsb
fwait
test
or
add
mov
sbb
jmp
cmc
sub
add
leave
fsubl
lock
and
add
les
rclb
push
ret
ds
sarb
mov
pop
fists
inc
sub
mov
ss
pop
push
fistps
add
mov
mov
xorb
roll
pop
fsubrl
jecxz
in
add
add
sub
out
lds
or
mov
add
add
and
xchg
in
call
add
and
lods
out
and
scas
push
dec
xor
sbb
das
int
mov
push
xor
add
add
cwtl
cmp
add
add
add
or
mov
mov
loope
pop
adc
add
mov
mov
pusha
add
fimuls
jne
add
add
sbb
xchg
cmp
add
cmp
rcrl
mov
repz
dec
insb
add
add
add
push
iret
call
aad
push
psubsb
add
out
xchg
mov
xor
lret
jge
pop
jl
xchg
xchg
and
inc
add
rcrb
sbb
pop
mov
xor
add
add
inc
cmpsl
mov
xor
mov
mov
add
pop
fmull
outsl
pop
pop
stos
shll
pop
xchg
enter
scas
push
mov
clc
add
add
scas
jl
rcrb
inc
sahf
sub
out
aaa
mov
add
add
add
pop
push
imulb
adc
add
jmp
add
add
adc
lcall
xor
add
add
loope
dec
dec
pop
out
daa
jmp
jne
xchg
mov
jno
popa
hlt
pop
cmp
in
insl
out
loope
cmp
sbb
push
or
add
add
fdivl
push
cmp
mov
jmp
or
add
addl
add
rorl
add
add
add
add
jae
sub
rcrl
fistpl
cli
add
pop
aam
sbb
add
add
iret
sbb
sbb
inc
add
xchg
shrb
mov
pop
stos
les
shrb
add
sub
add
in
dec
add
add
sub
push
out
inc
add
add
insl
and
dec
lods
addr16
cmc
add
in
rolb
xor
out
cli
repz
add
add
aad
imul
push
decb
mov
xchg
xchg
adc
pop
mov
nop
xchg
outsb
fistpll
ja
add
lock
add
out
test
add
add
add
xchg
movb
mov
mov
push
adc
call
xchg
pop
and
mov
cmpsl
ss
movsl
xchg
adc
add
mov
adc
push
inc
sub
add
add
test
mov
sahf
loope
push
aaa
pop
pop
pushf
jae
push
faddp
jl
ja
dec
add
add
xchg
and
mov
cmp
or
outsb
sbb
and
xchg
insl
in
cmp
push
inc
add
lock
jg
pushf
mov
jg
rcll
push
icebp
rcll
add
and
add
das
xlat
mov
std
fbld
mov
subb
div
rcrb
push
mov
imul
push
jno
mov
mov
popa
sub
mov
dec
jbe
cli
les
enter
jl
sbb
lock
cld
push
ret
xor
jp
lahf
mov
mov
sarb
add
mov
inc
push
sub
mov
sub
jnp
inc
ds
add
add
push
sub
add
add
sub
mov
fnstcw
xchg
push
pop
sti
out
ja
imull
jnp
push
rcll
dec
inc
push
cmp
cld
xchg
cs
sub
mov
mov
pop
inc
add
psadbw
add
add
add
cwtl
inc
add
daa
lods
fimull
mov
xor
sub
dec
xlat
adc
add
add
lcall
ret
pop
pop
fwait
leave
jbe
add
add
add
stos
je
repz
sbb
shl
aam
mov
lds
into
hlt
jl
add
add
dec
add
add
iretw
pop
inc
push
int
out
mov
adc
inc
mov
inc
add
add
sub
add
add
or
add
add
movsb
fcompl
sbb
mov
scas
push
addr16
cmp
sub
and
sbb
loopne
mov
mov
sub
add
add
roll
sbb
test
push
push
mov
insl
mov
cs
sub
add
add
add
add
inc
push
jb
scas
stos
jo
sbb
call
add
stc
jns
aaa
xchg
pop
jmp
imul
std
movsb
ret
aam
mov
mov
adc
mov
mov
or
mov
popa
arpl
loope
mov
cmp
in
add
inc
add
add
aad
add
push
and
mov
lods
pushf
in
dec
repz
sub
mov
add
add
cmp
out
xlat
dec
push
mov
shrb
add
add
fidivrs
sti
in
or
add
outsl
test
in
pop
popf
mov
je
add
add
lods
popa
shrl
mov
push
mov
and
add
ja
add
add
jne
add
jmp
add
add
fcmovu
mov
cmp
add
daa
inc
push
xor
push
cmp
test
imul
add
add
cwtl
pop
gs
jmp
jge
mov
jb
xchg
cmpl
sbb
add
outsb
scas
adc
and
mov
jmp
add
adc
sbb
jecxz
add
enter
and
jle
outsb
mov
fwait
rcll
add
add
inc
lods
xlat
or
add
add
or
pop
add
add
or
jae
add
add
xlat
jo
fsubs
add
cmp
lcall
icebp
stos
test
push
mov
cmpsl
cmpsb
es
add
scas
lods
or
push
fcmove
into
sarl
push
insl
mov
jmp
nop
nop
lea
add
add
adc
orb
add
add
inc
jmp
xor
add
add
sar
daa
inc
cmp
cmp
test
jnp
push
or
add
add
cmpsl
jo
adc
cwtl
fisttpl
fistpll
ret
in
or
test
jecxz
cmp
sbb
ret
push
push
jmp
jns
mov
scas
adc
repnz
sbb
mov
xorl
add
or
sub
mov
sub
mov
add
add
ljmp
dec
add
or
mov
and
add
add
int3
cmp
sarl
lock
mov
add
add
loopne
pop
aaa
push
ljmp
loope
dec
or
mov
addr16
cmpb
out
aas
call
add
mov
aad
xor
add
add
icebp
and
sub
add
outsb
repz
pop
or
xor
jae
ret
jle
mov
lods
cmp
dec
rclb
pop
sbb
mov
jmp
add
or
fcomi
sbb
add
movsl
sub
add
add
and
add
mov
jp
mov
outsb
popa
aas
jecxz
test
sahf
insl
int
push
sbb
cmpsl
sti
bound
dec
xchg
lock
cmp
xchg
lret
xchg
mov
add
add
add
add
lock
dec
stos
xor
add
add
adc
jl
add
dec
lods
scas
dec
add
insl
lea
aam
cmp
dec
loopne
add
mov
cld
in
cmp
or
sbb
add
add
mov
xchg
inc
clc
aam
add
inc
pop
outsl
fmul
repnz
push
and
add
add
cmp
ds
lcall
rcrl
pop
lret
cmpsl
cld
or
cmpb
in
sbb
dec
dec
jl
mov
aas
inc
ljmp
lds
jne
out
in
cltd
dec
jg
mov
xchg
xor
mov
out
fstpl
xchg
jl
xor
mov
add
add
jecxz
and
mov
push
sarb
into
xor
add
add
sub
add
add
add
dec
scas
pop
aad
sbb
retw
pop
pusha
add
outsb
fnstcw
dec
dec
pop
mov
jo
int
xchg
add
add
fdivl
aas
sub
add
add
jae
jbe
mov
out
xchg
mov
add
add
arpl
mov
add
fists
ljmp
push
mov
cwtl
push
xchg
add
mov
add
add
add
dec
cli
and
cmp
mov
popa
push
add
mov
add
mov
add
lret
cltd
or
add
add
out
add
add
pop
inc
add
add
mov
sbb
fadd
stc
test
movsl
std
iret
out
leave
add
add
add
mov
in
adc
mov
jnp
mov
hlt
jb
push
inc
and
scas
cmc
sub
pop
mov
fisttps
popa
adc
repnz
ret
icebp
ds
jbe
pop
sbb
mov
out
sub
aam
add
add
iret
inc
push
inc
add
add
cmp
add
repz
mov
out
xchg
jmp
xor
aam
and
lret
pop
stos
push
cmc
inc
fimull
iret
lret
lock
pop
dec
adc
push
ds
lds
add
add
pop
jnp
fdivrl
or
xor
dec
les
stos
mov
push
add
imul
rcrb
aas
jmp
lods
xor
add
lahf
jns
xchg
data16
pop
jge
and
mov
add
mov
fsubs
inc
add
sub
add
ret
or
add
add
cmpsl
repnz
xchg
xor
jge
sbb
dec
adc
push
inc
add
add
outsl
sub
lret
aas
packssdw
mov
or
mov
or
mov
ret
lea
jns
or
add
add
and
add
add
or
mov
ss
add
in
add
add
push
adc
jmp
add
add
add
mov
dec
js
sbb
mov
pop
mov
leave
data16
aaa
pop
out
lods
movsl
or
adc
xchg
add
mov
nop
jno
add
inc
push
das
dec
add
add
fwait
pop
mov
sbb
shll
or
rcr
lods
sbb
sbb
add
add
add
add
add
add
aam
mov
mov
mov
cmp
mov
out
inc
add
add
inc
lahf
sbb
call
mov
test
hlt
push
jns
daa
sbb
inc
add
ljmp
add
movsl
js
bound
add
xchg
xor
push
push
test
andl
inc
add
add
sub
ret
mov
sysret
ja
cltd
mov
add
inc
dec
xchg
xchg
outsb
dec
add
add
mov
outsb
outsl
loope
adc
mov
add
and
outsl
dec
pop
pop
cwtl
sbb
fsts
cs
lret
mov
aad
mov
push
cltd
pop
scas
pop
movsb
ret
add
add
insb
add
test
mov
sarb
pop
sub
repnz
jno
mov
add
pop
scas
push
dec
inc
shrl
mov
add
add
lea
icebp
fmul
insb
add
cld
cwtl
sub
add
add
mov
mov
insl
stos
mov
pop
and
xor
gs
dec
add
sbb
add
mov
fwait
push
pop
cs
mov
out
dec
mov
jns
rorl
push
lods
xchg
push
dec
xor
and
mov
add
add
xchg
stc
mov
aad
mov
dec
sbb
iret
add
add
add
je
pop
cmc
int3
imul
jo
inc
int
call
mov
shr
ret
in
test
add
add
pop
js
test
sarb
add
pop
adc
ret
inc
add
add
push
lret
jg
add
push
aaa
push
lcall
push
inc
cs
mov
iret
scas
xchg
nop
ja
test
add
loop,pn
sbb
xchg
cmpsb
pop
xchg
pop
adc
xchg
loopne
std
mov
shrb
mov
add
add
mov
mov
mov
out
adc
shrb
add
mov
jp
mov
orl
lret
lds
pushl
mov
movsb
lcall
xlat
mov
std
imull
add
fbstp
cmpsb
push
mov
mov
pop
cwtl
call
popf
call
mov
add
outsl
push
call
add
test
subb
add
bound
or
mov
jo
out
mov
test
mov
add
jbe
xchg
xchg
pop
xchg
add
add
mov
sbb
lcall
xchg
dec
fnsave
fiaddl
shrl
repnz
and
popf
xor
loope
int3
sbb
icebp
fistpll
jl
inc
adc
xor
inc
popa
push
cmp
pop
out
mov
pop
sub
add
aad
popa
cltd
jmp
mov
mov
add
fimuls
add
add
movsl
arpl
add
add
lret
mov
fmuls
stos
lret
xchg
push
in
fwait
add
add
pop
lcall
jbe
outsb
test
push
cmp
imul
mov
xor
fxch
ss
pop
mov
sub
mov
mov
xor
dec
add
add
add
add
add
clc
adc
mov
cmc
shrl
pop
repz
addr16
movsl
inc
push
add
fimuls
sub
add
add
nop
movsl
sub
add
add
sbb
ret
push
mov
lea
mov
pop
or
sub
mov
sahf
inc
add
int3
pop
jns
repz
xchg
xor
cmpsb
stc
xchg
cld
pop
into
out
divl
pop
lret
push
adc
dec
xchg
push
push
lods
arpl
mov
dec
repz
fsubp
aaa
jmp
out
stos
les
popa
mov
adc
and
add
add
das
pop
dec
pop
pop
fwait
movsb
add
ljmp
xor
mov
cmp
lea
add
add
add
mov
push
sbb
add
add
fisubl
or
jp
rcrl
mov
xor
push
jmp
pop
scas
sbb
mov
cmc
add
mov
popf
lcall
add
adcl
add
jo
in
jb
outsl
jmp
sub
add
add
mov
add
adc
bound
add
add
jmp
fwait
and
imul
ret
add
add
jl
pop
in
adc
sbb
inc
cli
add
add
jmp
add
jns
mov
add
or
leave
mov
lret
xchg
mov
pop
push
ja
movsl
pusha
add
add
je
push
jbe
int
add
popa
loop
imul
mov
or
add
add
add
shrl
stc
rcrb
adc
dec
pop
pop
decl
js
fwait
xchg
mov
add
add
nop
xchg
pop
out
pushf
out
dec
add
add
jno
aaa
jle
sar
in
inc
add
add
adc
push
mov
