shl
add
out
or
sub
add
jmp
dec
stos
dec
scas
out
or
or
add
cmp
push
int
add
add
enter
dec
push
cwtl
in
int3
adc
inc
add
add
das
mov
mov
pop
add
jmp
pop
sbb
cmpsl
add
cmpsb
add
lcall
adc
daa
add
add
mov
add
sahf
out
movsb
add
xchg
add
dec
cmp
mov
cltd
roll
add
roll
out
int3
movl
sub
testl
pop
sarl
and
pusha
add
cli
and
and
add
pushl
add
scas
cmp
arpl
mov
mov
bound
scas
stos
mov
inc
add
add
and
sub
into
fwait
dec
scas
jmp
cmp
sub
fcmovnb
add
pop
add
add
xchg
cmpsb
add
lret
cld
pushf
add
push
add
or
je
dec
adc
add
leave
adc
js
pop
scas
sub
or
add
or
shr
int
add
add
add
incl
dec
mov
add
add
cmpsl
add
daa
add
outsl
mov
ljmp
push
cmovg
leave
loop
and
mov
popf
dec
ret
add
cmc
popf
mov
jmp
add
shrl
ret
lcall
or
add
jg
addb
xchg
divb
add
add
lahf
popf
xchg
sub
add
add
inc
add
add
cmp
sub
and
xchg
inc
add
inc
add
xchg
les
scas
mov
mov
pushf
adc
out
and
stc
push
cltd
mov
mov
movsb
add
iret
das
push
ret
clc
daa
add
add
roll
sbb
pushf
add
sti
ficomps
lock
stc
test
incb
and
shlb
xchg
add
incl
popf
incl
call
addb
addl
dec
cmp
mov
incl
ljmp
lock
in
jns
enter
jo
test
sbb
add
add
add
inc
add
decl
fidivl
pop
cmp
sub
out
mov
cmp
sti
xor
out
sub
movl
add
pop
add
jg
inc
add
dec
sahf
scas
sub
cmpsl
add
push
or
or
cmpsb
add
sub
xchg
loop
sub
xor
insl
xchg
or
dec
pop
aas
mov
add
and
imul
push
sbb
ds
add
add
jnp
push
roll
out
arpl
dec
int3
arpl
xlat
push
pushf
lret
int3
bound
inc
add
add
sbb
nop
mov
add
mov
or
add
add
jmp
lds
daa
add
dec
cmp
add
ljmp
inc
add
aam
sub
data16
add
stos
in
pop
push
aad
push
shrl
pop
sbb
movb
std
dec
jnp
add
inc
add
mov
xor
nop
or
push
xchg
inc
add
add
mov
add
fcoml
xchg
and
loope
cmp
std
aas
mov
pushf
fisttpll
add
outsl
mov
js
add
ljmp
fcomip
stc
aaa
pop
shl
add
jecxz
cmp
add
jl
inc
add
ljmp
sarb
insb
jb
xchg
push
pop
rorl
iret
mov
int3
push
pop
sbb
fwait
inc
add
push
and
iret
add
fcmovu
mov
mov
jnp
xchg
cmp
or
test
inc
add
arpl
sbb
xchg
bound
pop
cmp
repz
add
pop
roll
js
mov
or
add
adc
add
jp
fcoml
push
pop
push
sbb
cmp
roll
xor
add
decl
add
test
sub
sahf
movl
mov
jl
popa
add
inc
add
idivl
mov
sub
out
pop
or
int3
outsl
cli
dec
outsl
mov
nop
in
or
jbe
inc
add
pop
iret
addb
test
stc
and
outsb
stos
add
jo
neg
mov
pop
mov
add
data16
add
movl
add
or
ret
add
mov
push
add
add
faddl
add
add
cmc
or
add
pop
inc
add
adc
push
daa
add
add
add
xor
add
mov
mov
pop
xchg
jae
sub
add
popl
ljmp
mov
add
sbb
pop
mov
cltd
or
add
or
add
stos
aam
add
insl
sbb
jge
add
add
adc
outsb
pop
mov
push
add
inc
add
add
ljmp
outsb
jae
add
sub
push
add
cmp
adc
cmp
xchg
add
jmp
add
insb
ret
add
adc
add
aaa
lcall
add
addr16
test
outsl
push
mov
mov
inc
add
add
call
or
incl
ljmp
roll
lahf
mov
fsub
add
jmp
add
pusha
add
divb
add
mov
add
adc
add
add
push
mov
push
test
out
sbb
mov
lahf
inc
add
add
fsub
add
aaa
aas
mov
lret
pop
sahf
or
push
out
cmpsl
add
add
and
sar
int3
inc
add
add
add
js
cli
loope
or
lahf
xor
cld
sub
fwait
or
dec
or
xor
faddl
dec
mov
sub
mov
pop
jmp
fstpt
inc
add
imul
xchg
xor
rolb
cmp
adc
add
addl
jmp
mov
jbe
aaa
mov
pop
pop
push
lock
data16
sahf
inc
add
daa
add
pop
inc
add
jge
add
dec
sub
push
rolb
add
xchg
jae
and
js
add
pop
cmp
sbb
dec
fisttpl
fnstsw
and
pop
rolb
jb
dec
and
mov
decl
aam
pusha
add
sbb
scas
cmp
and
and
roll
add
xchg
std
roll
sub
sbb
mov
add
jns
xchg
jae,pn
add
mov
jg
xor
mov
inc
add
aas
in
stos
dec
add
jmp
sub
scas
addl
sbb
mov
add
inc
add
or
lods
cs
cmp
pop
loopne
cmp
mov
push
es
test
ret
pop
addb
add
adc
cmc
cwtl
stos
int3
fldl
add
jmp
add
add
cli
cmpsl
add
mov
pop
loop
xchg
rcr
jne
adc
outsl
cs
sbb
inc
add
sbb
negb
cmpsb
add
push
dec
dec
and
lods
aaa
loop
jae
faddl
jmp
fadds
sub
popf
sub
jmp
add
aas
mov
add
sub
add
mov
add
lods
in
divl
inc
add
add
xchg
push
out
mov
inc
add
add
insl
ljmp
add
dec
xchg
mov
cmp
jne
pop
mov
add
dec
fimull
ja
add
push
push
jle
bound
xor
cmp
add
xor
add
add
ret
add
cmpsb
add
add
or
mov
cmp
add
jg
push
jl
sub
adc
xor
xor
add
add
dec
shlb
les
push
add
lea
add
add
imul
sbb
xor
int
add
add
pop
jecxz
inc
add
roll
and
addb
test
loopne
fsts
push
test
add
xor
add
dec
inc
add
add
mov
roll
cmp
packssdw
loopne
cmp
cmpsl
add
cmp
pop
sbb
add
imul
mov
addb
sub
inc
add
dec
sub
insl
sbb
hlt
mov
icebp
out
add
fdivrp
imul
rorl
mov
mov
shlb
add
lock
in
sbb
add
shll
push
repz
add
shll
mov
or
bound
ficoml
cmc
add
rclb
int3
mov
mov
mov
movb
or
add
mov
xchg
std
cs
pop
pop
test
cltd
or
loopne
scas
repnz
lods
mov
dec
push
imul
add
sti
movsb
add
fstps
loopne
out
movsl
add
inc
add
sbb
movb
addb
add
push
adc
imul
adc
add
fisubs
push
bound
lods
sbb
add
add
ljmp
add
jge
in
in
nop
nop
sub
out
leave
inc
add
jg
add
cmp
sub
add
mov
add
add
leave
push
popa
add
add
cmc
pusha
add
leave
mov
pop
in
jl
xchg
shrb
push
xor
loopne
cs
fxam
add
pop
les
test
mov
inc
add
movsl
add
adc
inc
add
pushf
jae
loopne
push
mov
push
insl
lea
sbb
movb
addb
add
add
sub
repnz
test
fildl
pusha
add
sbb
xchg
inc
add
gs
inc
add
adc
lds
fstl
add
add
xchg
or
outsl
jp
lds
imul
sub
in
xchg
dec
ret
out
dec
and
lods
mov
adc
add
jp
adc
add
sbb
xchg
pop
out
add
pushl
lcall
add
xchg
push
idivl
add
pop
add
add
rcll
add
add
js
add
jp
add
xchg
ss
push
fistl
addl
cmp
sbb
add
cmpsl
add
ds
cmp
jle
fldt
lahf
cmpsb
add
imul
xchg
push
out
dec
clc
aas
jno
mov
jo
cwtl
jae
fincstp
xchg
loope
test
insb
loopne
hlt
call
movl
loopne
add
dec
mov
add
js
test
sahf
aad
arpl
addl
xor
cmp
push
push
lock
jecxz
enter
int3
pop
cli
dec
lahf
inc
add
add
decl
dec
xchg
dec
xchg
jnp
and
out
stc
outsb
out
call
cs
add
cmc
mov
jg
cmpsl
add
daa
add
cld
clc
lea
push
inc
add
add
add
std
imul
push
incl
xchg
xor
pop
ds
and
test
adc
add
les
out
arpl
jno
addl
add
das
xchg
std
mov
imul
add
pushl
jne
pop
int
shr
fstl
test
add
jns
adc
mov
cmp
add
add
add
out
cmp
adc
pop
add
add
mov
lret
adc
or
add
out
push
leave
inc
add
xchg
lcall
add
sbb
add
sub
shlb
add
add
out
xchg
inc
add
push
out
push
js
push
add
add
incl
incl
add
push
push
inc
add
pop
jg
pop
test
sahf
mov
adc
adc
pushl
inc
add
movb
movsb
add
sbb
mov
push
xor
sub
lds
push
cmp
push
xor
inc
add
ljmp
cmpsl
add
data16
ficoms
cmpsb
add
add
mov
add
call
pusha
add
fildl
xchg
xchg
pop
movl
sbb
jecxz
lock
aaa
dec
push
sub
cmpsl
add
add
pushl
scas
addl
xchg
adc
and
or
sub
fisubrl
jno
mov
daa
add
add
add
adc
add
xchg
and
sub
and
lds
pop
xchg
ret
add
sub
jge
pop
fimull
fbstp
jne
add
popf
sub
jmp
add
decl
outsb
adc
addb
add
push
arpl
pop
add
jo
popa
add
add
ret
addl
adc
xor
dec
cld
sub
imul
out
sti
into
jge
adc
jae
inc
add
or
add
dec
push
sub
mov
dec
lea
inc
add
fidivs
sbb
mov
mov
xor
add
aam
and
sbb
push
pop
add
push
movsl
add
xlat
jns
sbb
imul
and
sub
add
add
adc
add
call
add
inc
add
loopne
xor
outsb
push
insb
stc
sahf
je
sbb
push
mov
or
or
add
push
add
pusha
add
lret
add
mov
fcmovu
aas
jbe
cmc
or
popa
add
mov
add
sub
add
pushl
jmp
add
add
push
pop
pop
leave
call
xchg
ret
add
jg
and
data16
push
add
cwtl
sbb
add
push
xor
add
jbe
js
add
add
aas
adc
jns
add
add
add
pop
jbe
dec
repnz
outsb
aaa
add
call
popf
push
out
pushf
dec
stc
leave
or
sbb
push
ret
or
add
incl
wbinvd
push
add
sbb
js
stos
fnstcw
pushf
jbe
add
lcall
lret
ljmp
add
pop
cmpsl
add
push
rorl
movsb
add
mov
imul
jl
mov
push
jge
fildll
add
jmp
adc
sub
add
add
icebp
call
add
add
data16
add
add
or
int3
xor
add
sub
arpl
push
or
and
add
add
add
outsb
add
mov
jmp
mov
sub
jae
lret
inc
add
inc
add
pcmpgtw
enter
lret
cmp
add
nop
data16
in
xor
out
iret
out
sahf
je
sti
inc
add
rolb
sti
mov
add
add
add
add
movsl
add
mov
add
sbb
rclb
rolb
adc
xlat
or
mov
imul
cmp
mov
daa
add
in
cs
jmp
lret
push
es
and
mov
addb
or
xor
push
add
addl
inc
add
fcoml
add
add
aaa
test
dec
pop
push
jmp
jl
and
or
enter
push
lods
cld
aam
add
ret
cs
iret
imul
sbb
std
jae
add
loop
test
add
add
pushl
and
sub
out
mov
xchg
xchg
xchg
pushf
adc
icebp
insb
fildll
and
gs
sbb
fldenv
adc
fiadds
fsubs
sub
add
add
fsubl
add
xchg
xor
xor
add
xchg
add
adc
repnz
push
adc
popa
add
xor
jmp
pop
cltd
imul
jle
push
jb
add
and
popa
add
into
lret
adc
ret
add
pushl
in
addb
mov
add
add
sti
daa
add
xchg
sub
std
dec
jge
jno
push
mov
sub
fwait
mov
lcall
or
arpl
loopne
aam
add
add
xchg
add
pushl
push
add
stos
mov
sub
add
add
adc
movsl
add
adc
add
push
mov
dec
dec
enter
add
fcom
in
push
mov
xchg
sbb
jecxz
mov
xchg
sub
into
nop
aad
add
lsl
jmp
add
add
jmp
mov
add
shll
add
aaa
add
pushl
dec
cmp
addr16
pop
lods
mov
loope
addl
add
popf
lock
mov
jl
add
push
cld
loop
cmc
xor
add
pop
cltd
dec
lock
add
arpl
mov
ljmp
add
lods
adc
fisttps
mov
hlt
sub
jbe
adc
std
and
roll
add
out
cwtl
test
arpl
in
ss
mov
daa
add
and
add
imul
xor
sub
ret
add
adc
jae
lret
addl
std
and
adc
fcom
int
add
add
add
inc
add
mov
add
add
xchg
add
jns
add
dec
cmp
ret
lds
fstpt
ljmp
add
add
inc
add
in
mov
push
push
add
nop
roll
jge
mov
jp
push
stos
adc
add
add
mov
pop
sub
pop
add
leave
and
movb
notl
xor
mov
mov
and
addb
or
cmpsl
add
fildl
cld
test
test
inc
add
jnp
sbb
add
add
sub
and
imulb
in
sti
push
mov
push
dec
test
add
jl
sbb
xor
nop
adc
dec
jo
call
fucomp
xchg
out
rcrb
xlat
addl
fldcw
aad
ror
sub
add
insl
adc
andps
rorb
add
ljmp
add
cmp
shlb
add
jnp
jb
daa
add
adc
xor
or
add
das
inc
add
out
mov
sub
les
ds
imul
hlt
xchg
lds
jle
jle
roll
push
push
bnd
mov
inc
add
add
cmp
lds
les
testl
or
rolb
add
aaa
pop
push
jp
adc
jmp
add
stos
sub
push
push
add
loop
xchg
lods
jmp
and
sub
add
sbb
inc
add
add
add
add
add
jp
xlat
rcrb
push
xor
add
lds
aaa
or
dec
push
data16
rolb
jecxz
pop
ret
add
jno
add
add
bound
add
inc
add
incl
push
movb
push
and
mov
js
jno
add
xchg
leave
aam
fldpi
dec
jns
mov
les
daa
add
dec
add
mov
push
add
add
adc
xchg
mov
add
testb
outsb
bound
add
jmp
add
clc
ficoms
sub
cltd
call
and
icebp
mov
add
cld
push
cmp
in
movl
add
sbb
rolb
cmp
add
mov
cmpsb
add
lret
aaa
and
rolb
add
xor
fcompl
out
outsl
add
lcall
cwtl
test
or
imul
jl
add
inc
add
insl
aam
sbb
adc
movsb
add
cwtl
icebp
mov
and
in
cmc
lods
pop
jg
mov
mov
out
mov
add
add
push
sub
out
lahf
stc
xor
mov
data16
cmp
add
cmp
std
in
lods
xchg
inc
add
ljmp
mov
insb
ja
stos
cmp
add
add
ljmp
add
lret
fldenv
pop
push
mov
xor
add
incl
ret
daa
add
insb
movb
lahf
inc
add
jecxz
lds
insl
add
inc
add
add
or
mov
pop
add
add
into
xor
in
mov
pop
add
pusha
add
add
jmp
or
mov
dec
clc
dec
push
or
rcrl
add
inc
add
pop
aas
cmpsl
add
loop
xor
mov
add
decl
mov
and
repz
xor
clc
add
or
cmp
xchg
and
push
shrb
add
jno
push
pushf
pop
addl
add
adc
mov
adc
xor
mov
xchg
jg
in
xor
inc
add
jp
xchg
stos
nop
pop
sahf
mov
push
xchg
sub
test
and
dec
xchg
addb
enter
add
inc
add
lcall
add
ljmp
add
add
mov
jp
add
xor
nop
std
mov
add
inc
add
mov
fwait
stos
dec
add
xor
xchg
mull
or
add
dec
mov
add
mov
call
add
push
jecxz
data16
jmp
mov
cmp
or
daa
add
mov
pop
lods
stc
add
clc
cmpsb
add
jo
mov
neg
mov
icebp
mov
add
lods
outsb
ficompl
lcall
add
mov
add
sbb
lahf
adc
pushf
jg
iret
push
add
or
inc
add
cmp
je
add
pusha
add
add
inc
add
add
xchg
in
shr
mov
add
push
inc
add
sub
sarb
mov
sub
add
sti
push
jecxz
mull
add
add
outsb
int3
pop
add
jmp
add
add
adc
sbb
dec
into
sub
lret
stos
jle
add
icebp
lock
popf
roll
mov
pop
mov
dec
hlt
mov
jg
push
dec
in
inc
add
jns
add
cld
ret
add
fsubrl
add
and
sbb
and
xor
xchg
sti
aas
cmp
and
mov
mov
pop
add
mov
add
stos
ja
repz
pushl
in
jmp
and
jo
push
insb
shll
stos
insl
inc
add
push
jmp
aas
data16
add
mov
dec
jbe
add
add
data16
inc
add
in
sahf
stos
cs
test
cmc
push
fisubrl
add
add
mov
ljmp
or
mov
sub
addl
add
mov
addr16
add
les
inc
enter
aas
lar
in
sub
xor
call
and
jne
dec
push
call
test
je
mov
and
add
mov
add
mov
shr
push
push
addl
call
push
call
leave
ret
push
push
pop
push
push
mov
lods
xor
mov
sub
add
mov
add
stos
xor
pop
pop
leave
ret
jmp
jmp
jmp
mov
add
js
add
out
inc
add
in
jae
adc
int
mov
add
xchg
imul
add
dec
and
rcrl
sbb
test
xor
add
sbb
add
add
add
call
out
mov
mov
cmp
xor
mov
add
shlb
add
jle
ds
add
add
inc
add
mov
stc
sub
lahf
adc
inc
add
inc
add
lock
add
add
stos
sub
add
add
push
add
out
shll
add
scas
dec
lods
dec
xchg
mov
lds
mov
fst
shll
sub
out
add
push
js
sbbl
add
pop
outsb
add
xchg
add
addb
adc
push
out
imul
icebp
jae
fisubrl
add
add
icebp
mov
add
movb
stc
loope
enter
push
loop
stc
mov
xchg
ja
add
sub
and
jge
jns,pt
or
add
lea
push
xchg
enter
mov
push
ret
dec
aas
addr16
mov
xor
fildl
add
add
std
push
add
test
fbstp
icebp
sti
paddd
mov
mov
addb
add
jp
add
ljmp
jns
jns
add
jg
add
fistl
mov
add
add
push
and
add
jmp
push
aam
in
jmp
data16
xchg
call
add
sbb
sbb
add
push
cltd
pop
cwtl
dec
jnp
lea
cld
repnz
jmp
xlat
xchg
xor
stos
xchg
int
jbe
cmc
or
lods
mov
dec
add
insb
push
sbb
xor
add
add
aas
enter
repnz
add
push
pop
or
xor
or
das
sub
daa
add
add
jb
add
add
or
lea
add
std
and
mov
xor
aaa
mov
add
add
add
arpl
fimuls
pop
sub
data16
stc
test
add
and
xor
lret
mov
add
add
pop
cmp
jmp
jmp
adcl
outsl
sbb
push
mov
addl
cmc
add
inc
jl
sar
addl
mov
or
jmp
cmp
xor
ja
xor
push
sub
das
imul
and
or
add
mov
jb
xchg
lcall
add
call
adc
inc
add
sub
add
add
add
cld
fistl
lds
ja
add
or
add
cmp
outsl
insl
in
inc
add
lret
insl
adc
aas
enter
mov
pop
out
mov
addr16
xor
ds
imul
das
inc
add
mov
ljmp
add
adc
inc
add
add
lcall
inc
add
adc
mov
scas
hlt
jecxz
iret
add
call
jmp
add
ret
pop
sahf
addl
add
dec
mov
in
in
mov
inc
add
or
cmp
xchg
test
stos
test
or
or
mov
or
add
jb
add
roll
inc
add
scas
or
add
ss
ljmp
and
movsb
add
test
or
je
add
sbb
loop
fistpll
mov
inc
add
mov
in
fcompl
or
sarl
push
sub
das
stos
cmpsb
mov
add
and
movb
fprem
inc
add
adc
das
jmp
loop
push
roll
add
cmp
mov
pop
xor
add
test
cmp
fwait
mov
mov
into
addl
xchg
jns
lret
addl
aas
iret
test
and
inc
add
dec
sbb
mov
mov
fbstp
add
add
fiaddl
les
stos
mov
je
ret
inc
add
add
xor
lcall
add
jno
add
adc
cwtl
test
push
xor
jmp
js
stos
push
arpl
enter
sub
add
lds
fst
sbb
in
mov
add
add
add
adc
lea
adc
dec
xor
add
sbb
aad
addb
mov
je
out
push
mov
add
insb
mov
sbb
mov
fsubrs
add
idivl
add
push
sub
xchg
push
push
fwait
roll
divl
ljmp
add
xor
dec
jb
pushf
ss
gs
fnsetpm(287
add
jns
sub
jmp
push
push
mov
cmp
rcl
mov
enter
fsubl
cmpsl
add
scas
push
dec
and
dec
push
dec
add
jge
repnz
add
jb
nop
bound
add
cmpsb
add
fsubr
mov
outsb
lcall
push
addl
fistpll
fwait
mov
push
sbb
sbb
xchg
ficomps
push
add
mov
fisubl
push
fxtract
mov
add
xchg
sahf
in
cmp
add
outsl
fldl
add
sub
pop
add
inc
add
add
lds
xchg
inc
add
add
jmp
add
lcall
jmp
cmp
mov
xchg
dec
mov
add
sub
add
add
xor
adc
xchg
in
pop
add
add
xchg
xor
inc
add
push
addb
cmpsb
add
mov
add
add
testl
out
xchg
mov
shll
add
notl
push
and
mov
push
cmp
aas
cmp
or
in
push
in
imul
lock
insb
mov
cli
ds
pop
lds
add
lcall
pushl
fwait
pop
fnstsw
dec
push
or
pop
std
jmp
imull
les
and
ret
add
mov
inc
add
bound
sbb
jmp
add
add
or
dec
mov
inc
add
pop
xlat
test
cmpsb
add
add
iret
adc
adc
add
out
call
add
push
jb
lret
mov
test
sbb
fwait
xchg
cmc
xchg
arpl
mov
mov
push
push
add
lcall
dec
push
ret
cmp
jle
dec
aaa
mov
insl
dec
jnp
add
add
negl
inc
add
fidivrl
adc
xchg
sbb
pusha
add
rep
jmp
lods
sbb
ret
add
fcompl
mov
add
dec
xchg
out
inc
add
in
movl
xchg
jle
clc
imul
insl
call
sbb
dec
lods
and
push
loopne
aam
add
lahf
adc
das
ds
mov
popf
mov
test
xor
jmp
jne
rclb
mov
in
mov
add
xor
test
je
movsl
add
ljmp
mov
pop
pusha
add
push
mov
xor
add
stc
bound
xchg
pop
int
pop
adc
movsb
add
add
add
push
xchg
sbb
icebp
inc
add
repnz
int
and
xlat
jns
add
adc
jmp
inc
mov
lcall
test
addb
mov
mov
push
sub
jns
lea
imul
lods
test
insb
lods
mov
in
mov
scas
pop
push
lret
xor
add
mov
dec
sub
movl
scas
mov
jmp
cltd
fdivl
add
iret
xchg
shrb
sbb
or
push
inc
add
add
add
js
ss
pop
mov
popa
add
ja
je
les
and
dec
sahf
stos
and
int3
push
add
xor
xor
add
mov
add
xchg
add
insb
or
popf
loopne
lea
add
and
add
decl
add
dec
lcall
or
add
xchg
cmp
insl
jns
xchg
sbb
adc
add
add
add
jbe
mov
adc
push
pop
add
push
es
test
enter
icebp
cltd
mov
call
movb
mov
addb
push
dec
jl
frstor
ja
pop
xchg
shll
sbb
and
hlt
movsl
add
aas
push
add
dec
into
push
push
repz
add
aas
aas
addr16
ja
dec
mov
enter
enter
movb
dec
cwtl
inc
add
fists
jnp
add
in
add
ljmp
loope
mov
add
mov
add
add
sbb
rcrl
add
mov
ret
add
mov
scas
insb
adc
add
mov
jmp
add
repnz
fisttps
pop
sub
call
popa
add
xor
sahf
adc
inc
add
add
add
add
add
add
push
push
adc
add
xchg
jnp
inc
add
add
add
outsb
cmp
scas
xchg
neg
and
ja
mov
outsl
rorb
shlb
ljmp
mov
cmc
ljmp
pop
add
cltd
test
mov
fwait
inc
add
out
rolb
xlat
xlat
insb
pop
lret
scas
pop
sar
or
xor
pop
mov
mov
ljmp
mov
jmp
dec
and
sub
adc
cli
add
decl
jg
adc
jmp
fucomip
insb
loopw
or
dec
xchg
popa
add
add
incl
roll
mov
xchg
jne
test
jle
push
shrb
arpl
mov
std
jnp
aad
mov
jp
ficoml
or
pop
mov
fwait
sub
ljmp
lret
adc
aam
inc
add
sbb
sti
jp
ret
add
iret
adc
je
push
jb
movb
loope
dec
lods
lods
fs
add
mov
call
mov
cmpsl
add
jmp
imul
das
decl
push
ret
adc
push
mov
mov
jmp
add
adc
xlat
bound
pop
jp
inc
add
call
jmp
sub
sbb
sbb
or
stos
mov
or
insb
push
sbb
add
jmp
mov
mov
negb
or
add
ja
mov
call
push
add
add
push
pushl
shr
sldt
mov
push
push
aam
push
add
fstpl
enter
enter
in
mov
adc
mov
push
cmc
jno
pop
rclb
mov
add
add
mov
sub
xor
lcall
cmpb
ret
dec
add
inc
add
icebp
stos
sahf
out
pop
sub
in
sbb
add
push
xor
cld
lcall
push
fcoml
push
inc
add
add
lea
add
ljmp
or
and
cs
dec
add
decl
movswl
jmp
fbld
push
add
test
or
adc
inc
add
scas
add
inc
add
add
push
jmp
push
push
adc
pop
in
iret
mov
add
xchg
imul
out
cmpsb
add
adc
add
mov
inc
add
dec
jnp
add
add
in
sub
xchg
aaa
cmpsl
add
xchg
repz
jg
mov
jmp
and
cli
jnp
add
mov
jmp
jne
add
add
enter
push
test
jp
or
add
cmp
bound
mov
repz
add
inc
add
addb
xor
mov
sti
sarl
aaa
and
inc
add
scas
mov
ror
cmc
test
mov
push
inc
add
adc
sbb
fs
add
cmp
dec
push
inc
ret
xchg
pop
out
or
addb
in
pusha
add
add
jmp
add
or
add
add
stos
test
mov
movsl
add
add
frstor
add
in
pusha
add
cwtl
pop
add
into
repz
mov
cmp
fiaddl
call
mulb
add
mulb
add
bound
and
movsl
add
add
pop
nop
data16
sbb
cmp
add
sbb
inc
add
xor
fisttps
add
cmpsl
add
add
scas
leave
mov
xchg
ds
push
or
xor
mov
xchg
inc
add
mov
add
pop
enter
pushl
or
add
xchg
test
add
add
add
dec
pop
and
add
add
add
add
push
push
jmp
lcall
add
and
push
pop
add
mov
jp
mov
jbe
movsl
add
add
aaa
mov
rolb
cmp
xchg
sbb
add
add
xchg
pop
lret
loopne
repnz
fimull
jp
je
jmp
mov
add
in
mov
addl
sub
xchg
ss
cltd
or
mov
lret
push
lea
push
ret
xchg
lock
enter
add
add
aaa
jl
add
adc
out
mov
push
add
jmp
sub
nop
cltd
out
rol
add
movb
add
movsl
add
sti
adc
mov
nop
fwait
jge
addl
imul
push
adc
pop
cmp
add
pushl
add
add
sub
xchg
xchg
imul
add
in
inc
add
and
rcr
pop
repnz
incl
in
into
inc
add
add
push
push
inc
add
mov
lcall
push
mov
test
test
xchg
jns
add
decl
inc
add
lret
pop
pushf
pop
fdivr
mov
push
adc
call
fcomi
inc
add
push
pop
add
ss
adc
add
add
fdivl
and
pusha
movsb
inc
add
ljmp
mov
add
inc
add
sub
stos
and
mov
add
jb
add
sahf
cmp
ja
nop
xchg
jp
movb
push
fmulp
mov
mov
sbb
pop
and
sub
add
fldcw
add
imul
sti
mov
or
adc
fnstenv
add
hlt
std
ret
dec
negl
add
sub
mov
inc
add
add
add
aam
mov
add
add
test
xchg
stos
fwait
mov
cmp
add
aas
in
pop
out
out
cmpsb
add
stos
aam
movb
inc
add
pushl
add
cmp
in
aaa
cld
fcoml
in
std
roll
insl
mov
outsb
jns
add
pop
enter
jo
inc
add
jp
aad
inc
add
jecxz
out
xor
aad
and
xor
insl
sbb
add
sub
pop
xor
sti
iret
lds
push
add
add
add
out
push
lahf
cmc
mov
and
inc
add
sub
add
add
pushl
adc
mov
inc
add
sbb
xchg
cpuid
add
add
add
add
mov
mov
sub
add
lods
repnz
xchg
fcomi
test
push
cmpsb
add
mov
push
jmp
dec
aas
jae
add
ja
xchg
scas
add
call
mov
decl
dec
test
out
jle
and
jl
add
out
ret
fidivrs
push
jmp
pop
push
sub
lret
imul
stc
outsl
ss
aad
add
add
ror
jmp
xor
and
add
mov
push
roll
add
pop
sub
fstpt
fidivrs
pop
data16
jmp
add
mov
in
adc
push
adc
lds
les
aaa
dec
into
pop
ja
mov
adc
rolb
leave
and
in
aam
jg
outsl
adc
add
fstl
add
xchg
dec
out
jo
dec
inc
add
clc
xchg
adc
inc
add
add
call
adc
dec
ja
aaa
call
imul
movl
sub
out
cmp
add
aaa
push
sub
scas
outsl
pop
in
daa
add
push
notb
sub
pop
dec
sbb
in
add
les
inc
lock
mov
pop
xor
or
iret
sti
insl
fstps
mov
push
ret
sbb
sub
add
add
lahf
into
jp
arpl
insb
sti
inc
add
rolb
test
add
jmp
dec
xor
add
inc
add
add
add
mov
addl
dec
imulb
aam
push
jge
push
loop
sbb
add
or
mov
inc
add
movl
bound
xchg
jo
addl
add
shrb
add
incl
addb
std
in
inc
add
and
daa
add
add
or
add
push
ret
stos
add
mov
pusha
jmp
mov
cld
xor
dec
add
dec
cmpsb
add
add
lcall
std
ljmp
add
sbb
addr16
and
adc
scas
in
icebp
lea
dec
push
call
outsb
mov
insl
lret
push
and
inc
add
add
ljmp
shrb
lahf
inc
add
push
cld
enter
xchg
add
decl
lock
jb
add
incl
push
jae
add
xor
dec
roll
add
iret
test
push
mov
mov
add
ds
stc
dec
aaa
enter
pop
mov
repz
cmp
push
ret
push
into
and
add
add
xchg
mov
data16
flds
pushl
jo
das
lret
cmc
dec
cmp
add
movl
push
add
adc
addl
sbb
shr
sub
add
lcall
add
push
fidivrs
or
add
push
fistps
movsl
add
ljmp
jae
pop
in
js
addb
add
add
add
insl
aam
jno
dec
adc
pop
aam
in
outsb
or
xchg
movsl
add
mov
push
pop
out
in
mov
adc
or
push
sub
jmp
jb
mov
add
decl
add
add
cld
xor
push
adc
cli
mov
sti
clc
and
nop
sahf
mov
cmp
add
add
dec
clc
push
jno
daa
add
cmp
mov
fisubs
cltd
addl
sub
bound
addb
mov
and
sub
sbb
movsl
jmp
push
push
add
call
jnp
pop
repnz
xor
repnz
mov
adc
push
imul
push
notb
cmp
add
arpl
push
pop
mov
pop
jp
add
mov
lea
add
push
xor
test
rolb
mov
les
adc
daa
add
adc
add
pop
jmp
std
decl
add
add
js
add
add
data16
xchg
nop
jno
call
add
loope,pn
push
push
movsb
add
rolb
add
dec
inc
add
ljmp
jnp
xchg
push
psadbw
push
push
mov
jmp
lcall
xor
push
int
add
cmp
lock
add
add
ficompl
add
and
pop
add
into
mov
add
pushl
jmp
push
jle
mov
mov
dec
imul
mov
sub
ljmp
imul
add
pop
pusha
add
lods
pop
rorb
lods
mov
jmp
inc
cld
cmpl
shrl
test
stos
jl
add
xchg
cmc
mov
add
push
mov
and
xor
mov
xchg
pop
addb
in
bound
aam
sbb
or
mov
add
push
aam
insb
addb
imul
jae
pop
stc
cli
push
fmuls
bound
testb
mov
add
decl
pop
pop
cmc
lret
mov
add
repnz
cmp
and
dec
xchg
adc
jl
ret
stc
and
hlt
mov
leave
adc
add
pop
mov
lods
mov
dec
and
outsl
sub
add
ficoml
lahf
aad
xor
push
xchg
jb
jne
mov
pop
xor
add
adc
xor
roll
add
mov
loope
mov
pop
push
repnz
add
cmp
add
lods
cvtpi2ps
mov
mov
jmp
arpl
adc
sub
push
add
loop
xlat
lods
or
call
xor
mov
jnp
add
mov
std
pop
push
ljmp
sbb
add
or
dec
ljmp
call
stc
xchg
jge
add
ljmp
or
mov
rolb
add
xchg
leave
pop
add
add
mov
sbb
inc
add
mov
jge
imull
xchg
mov
pop
imul
arpl
dec
addl
pop
add
xchg
jmp
imul
add
add
cwtl
movsl
add
arpl
scas
jno
and
pop
outsb
inc
add
call
jp
cmp
add
pop
push
add
add
std
movl
sbb
or
add
addl
jmp
add
and
ljmp
rorb
xor
test
aaa
mov
roll
jb
add
jl
clc
sahf
or
in
or
xchg
pop
mov
add
call
push
ljmp
add
or
inc
add
pushf
mov
add
or
fdiv
push
jg
lret
in
test
loop
xor
ja
scas
or
add
dec
stos
imul
in
xchg
lds
mov
mov
add
mov
inc
add
pushf
xor
in
mov
iret
mov
add
adc
cmp
dec
in
pop
fdivs
shll
mov
push
loope
shlb
js
inc
add
insl
stc
outsl
dec
sahf
mov
sahf
or
xor
pop
xchg
dec
icebp
sub
test
jne
add
stos
inc
add
leave
mov
lea
mov
add
jne
cmpsl
add
sub
add
movsl
add
outsl
sbb
jmp
test
sbb
add
inc
pop
add
inc
aad
add
cmc
adc
notl
mov
sbb
add
movb
add
xor
mov
adc
inc
add
pop
jmp
or
jns
add
lcall
add
push
jmp
add
or
jns
repz
enter
xchg
pop
xchg
ficompl
repnz
push
fcoml
loopne
outsl
pop
mov
mov
and
xlat
stc
repnz
decl
sbbb
push
enter
ret
add
jno
sbb
inc
add
or
mov
push
ret
mov
dec
push
add
add
and
xor
add
push
push
pop
pop
xor
insl
addl
add
push
push
add
mov
jno
add
mov
ss
add
call
jmp
add
add
add
dec
test
pop
push
add
jmp
push
insb
xor
push
mov
in
xchg
jb
rol
add
test
sbb
add
cmp
add
jecxz
adc
add
rclb
add
int3
adc
add
movl
add
push
mov
add
mov
push
jmp
xchg
xlat
sub
add
xchg
cli
pop
mov
add
push
add
pop
mov
add
dec
and
in
int
hlt
xchg
inc
add
xor
add
fstp
ss
add
add
xchg
lods
jge
insb
push
jmp
dec
cmp
data16
adcl
ss
nop
jno
add
add
add
sub
dec
add
cli
ret
add
popf
mov
cmp
push
rolb
outsl
pcmpgtw
mov
fcomip
jl
and
mov
outsb
jg
or
jge
pop
jne
add
lret
sub
incl
add
pop
fstps
dec
and
push
mov
jmp
mov
testb
or
or
and
ja
mov
pop
xlat
cltd
out
add
jmp
add
mov
lods
sbb
add
add
xchg
cmp
add
test
dec
jmp
out
test
cmp
push
ret
or
ds
fnstcw
add
adc
add
aaa
dec
mov
xchg
js
push
data16
dec
roll
call
cwtl
mov
add
sub
push
sub
into
dec
xor
lock
addb
add
add
add
test
add
push
insb
jmp
idivb
jecxz
loopne
mov
lods
cs
cmp
cmp
in
int3
stc
xchg
add
fdivl
fmull
lret
mov
and
int3
addb
or
jecxz
loope
addb
out
mov
add
lea
sub
xlat
dec
jg
push
jmp
divb
push
leave
sub
in
lret
jmp
add
pushl
jmp
add
addr16
movl
test
pop
les
inc
add
jmp
jmp
cmp
add
adc
mov
push
sub
dec
sbb
shr
data16
cmp
ljmp
test
outsb
push
push
xchg
pop
mov
add
sub
pop
jl
fistl
add
shll
pop
push
mov
add
add
je
jmp
dec
je
ljmp
jmp
dec
cmp
add
jmp
aas
pop
lock
add
sub
inc
arpl
ret
add
add
add
jno
aas
dec
cmp
repz
jmp
add
bound
dec
jb
into
push
add
dec
sub
in
cmpsl
add
lods
popl
stos
out
xchg
push
mov
fwait
add
xlat
xchg
cwtl
fwait
lds
inc
add
pop
xchg
xor
add
lcall
sbb
lds
lds
movsb
add
add
jno
dec
rolb
mov
std
or
add
frstor
pop
xor
add
fsubr
cld
or
add
or
jecxz
cmpsl
add
or
add
push
fisubrs
push
sbb
push
adc
or
jge
add
push
and
addl
add
ljmp
add
incl
add
aaa
fwait
fwait
mov
add
rcrl
add
std
addb
loope
out
xor
add
pushl
pushl
xchg
dec
addb
fdivrs
inc
add
aad
sbb
sub
add
lcall
add
add
add
dec
cld
ret
add
jge
add
push
jno
inc
add
push
push
and
jmp
adc
push
jmp
inc
fcomip
and
jo
mov
add
inc
add
or
add
and
and
addl
add
jbe
add
mov
les
push
add
inc
add
mov
add
mov
add
inc
add
add
mov
cmpsb
add
hlt
pop
pop
add
fbstp
in
jecxz
imul
mov
pop
lds
add
adc
icebp
daa
add
fimull
int
add
or
push
sub
pop
shrl
dec
pop
fimull
xchg
inc
add
add
popa
add
push
add
mov
fdivrl
ret
add
ja
inc
add
xchg
sbb
pop
push
ret
mov
movl
imul
sbb
mov
add
inc
add
add
jmp
add
cwtl
sub
dec
popa
add
hlt
out
and
xor
scas
sbb
and
and
mov
pop
rolb
movsl
add
xchg
loope
pop
push
xchg
ret
or
and
popf
ja
xchg
data16
addb
mov
mov
add
add
ljmp
roll
xor
add
add
out
sbb
pop
mov
add
jmp
aam
xor
mov
add
push
mov
add
add
lds
xchg
scas
pushf
xor
cmpsb
add
fbld
inc
add
add
lcall
jb
xor
lret
leave
roll
stos
hlt
sbb
mov
sub
push
add
jb
inc
mov
and
jmp
cld
push
popa
push
cmp
add
popf
add
fcomps
push
loope
xchg
mov
or
push
mov
push
jo
add
add
iret
or
inc
add
add
mov
add
add
imul
adc
cmp
fucomip
xchg
mov
popl
ret
push
arpl
sub
or
das
adc
je
jmp
add
in
add
add
adc
scas
popf
xor
push
add
sbb
cmp
or
add
pop
mov
incl
add
fbstp
xlat
inc
add
loope
jae
add
roll
in
addb
inc
add
movl
nop
addl
scas
xor
add
sbb
mov
xor
adc
jne
lods
mov
jmp
pop
lcall
lahf
les
imul
add
add
decl
roll
mov
repz
es
add
mov
pop
mov
adc
add
fisttps
sbb
dec
stc
or
test
add
lcall
out
sti
sahf
idivl
out
or
add
add
add
fnstsw
sub
cs
add
mov
jb
inc
add
imul
add
jmp
add
add
sarb
notl
test
add
add
add
js
inc
add
inc
add
adc
cmp
push
add
jmp
ljmp
inc
add
jge
pusha
jmp
push
dec
sub
and
mov
test
and
push
xchg
mov
mov
add
lock
loop
mov
mov
mov
imul
or
xor
cmc
out
faddl
popa
add
leave
xchg
icebp
movb
push
jmp
push
or
mov
add
xor
push
sub
call
shr
cmpsb
jmp
call
dec
and
add
test
inc
add
iret
jl
mov
repnz
push
add
les
dec
mov
movsb
add
sub
hlt
loop
pop
push
xchg
adc
sbb
jbe
sub
add
add
xchg
xchg
mov
mov
add
je
push
data16
sbb
pop
test
ret
push
xor
add
mov
jmp
push
insb
test
ret
add
mov
inc
add
adc
inc
add
in
push
adc
jno
rolb
data16
cltd
imul
mov
cltd
pop
add
jmp
and
jmp
add
inc
add
add
incl
cmp
mov
push
mov
enter
xlat
mov
mov
outsb
bnd
les
or
sbb
add
add
add
push
add
jmp
sub
jb
xor
add
cmp
push
fwait
mov
and
adc
mov
pop
sbb
add
std
cld
mov
ret
roll
add
fmuls
out
jle
jb
mov
or
mov
add
in
cmp
add
pop
xchg
inc
add
ljmp
stos
dec
fsubl
add
nop
jae
add
jbe
and
jp
jp
iret
xchg
sub
mov
scas
sub
add
in
adc
add
sbb
pop
cmp
add
test
xchg
test
enter
imul
stc
roll
test
jne
jmp
in
sub
iret
ret
add
add
repz
popa
add
jno
hlt
push
add
lea
divl
add
lods
sbb
add
push
lret
add
addb
add
lods
add
ljmp
lret
adc
cmc
mov
jns
add
or
xchg
popa
add
test
outsb
addl
mov
add
fcomps
add
call
ficoml
sub
cmpsl
add
sbb
add
aas
cmc
xchg
xchg
xor
fcomip
push
mov
push
xchg
into
ss
cmp
add
xor
add
and
xchg
in
mov
jle
add
xchg
movsb
add
ret
add
mov
add
movsl
add
mov
jp
add
fs
repz
or
push
push
add
pop
add
sub
call
push
add
incl
xlat
lods
inc
add
dec
popa
stos
push
cmp
lock
mov
enter
aaa
sbb
in
jo
and
les
jb
add
add
ljmp
sbb
cs
sbb
or
fistl
add
mov
ss
cmp
das
inc
add
and
add
add
add
push
add
cli
xor
mov
add
add
ljmp
jae,pn
add
mov
sub
addb
pop
ja
xchg
sub
add
cmp
mov
in
movsl
add
add
add
jmp
ljmp
mov
add
rclb
sub
fsubs
data16
jmp
jmp
add
push
into
ret
inc
add
fcomps
push
fcoms
test
inc
add
cmc
xchg
pop
lcall
xor
add
push
mov
pop
aam
xchg
adc
sbb
add
filds
dec
xchg
ffree
add
add
add
and
mov
incl
test
add
pop
roll
dec
aas
roll
add
sub
mov
lods
into
int3
xor
call
add
or
push
out
mov
test
push
adc
sbb
add
aad
add
mov
xchg
roll
add
decl
push
addb
add
in
pop
jl
add
add
adc
push
xor
incl
data16
rolb
cmc
pop
sub
inc
add
or
sti
sub
and
std
nop
xchg
cmpsl
add
sbb
fcoml
fldcw
in
rcll
pop
cmp
add
fisttpll
mov
add
dec
repz
addl
call
into
mov
sbb
xchg
test
cmp
jne
mov
push
js
add
js
adc
add
int
add
int3
ret
add
pop
outsl
loopne
daa
add
cmc
test
mov
add
jmp
push
test
add
sub
dec
call
and
add
adc
outsl
std
das
add
pushl
push
mov
iret
out
js
push
sub
add
cmp
dec
push
xchg
cmp
js
add
test
in
into
bound
push
ljmp
clc
fisubrl
cli
push
xor
push
mov
add
sbb
jmp
push
and
cmpsb
push
push
mov
jp
add
pop
add
add
sub
xchg
adc
add
jmp
sti
movsb
add
call
in
jae
add
jnp
enter
mov
and
jp
mov
push
push
ret
push
push
addl
add
and
adc
xchg
mov
add
mov
add
add
add
add
fldenv
lret
push
jbe
cmp
imul
mov
pop
sbb
push
pop
inc
add
or
push
sbbl
add
add
xlat
inc
add
lods
jmp
std
push
cli
rolb
add
mov
add
lahf
lret
insl
loopne
jbe
mov
mov
fdivrl
in
test
add
add
add
push
ret
pop
mov
push
add
sub
xchg
sbb
cmp
pop
add
push
add
add
popf
adc
xchg
adc
sub
lock
add
xchg
mov
mov
add
pop
add
push
add
xchg
add
call
rolb
sbb
in
mov
add
add
popl
rcrl
xchg
xchg
add
inc
add
jnp
incl
int3
lods
ja
call
add
add
mov
or
pop
repnz
mov
push
add
cmp
and
sub
and
mov
adc
mov
add
dec
pushf
outsb
lea
push
loope
into
xor
add
add
add
mov
add
bound
test
lea
div
jmp
fbstp
push
push
sbb
mov
add
push
and
cld
xor
sbb
xor
in
or
add
arpl
and
lods
repnz
pop
mov
ja
cltd
xor
aad
imul
add
add
xchg
aas
call
inc
add
dec
push
push
movl
adc
xchg
fsubl
add
lret
mov
jnp
jbe
fdivp
mov
add
add
das
inc
add
add
cltd
rcll
add
jmp
mov
sub
add
jns
mov
xor
add
add
jecxz
jnp
and
xchg
xchg
push
movl
ret
add
sbb
rolb
add
add
add
call
int3
xor
add
push
mov
push
sar
xchg
jg
push
push
ret
fsts
or
hlt
insl
add
decl
inc
add
outsl
mov
jl
stos
out
and
mov
sub
mov
mov
cmc
push
add
cld
roll
cmp
enter
and
jmp
mov
decl
add
mov
addb
popa
add
call
adc
loope
xchg
sti
sub
sub
pushf
movsl
add
lahf
arpl
xor
iret
rolb
std
cs
add
incl
push
fists
mov
aam
hlt
lret
call
mov
ja
rcr
add
pushl
push
sbb
add
loopne
cmpsl
add
pop
pop
lock
jo
lds
outsl
xlat
pop
push
add
jp
test
cmp
lcall
adc
add
dec
push
cld
lcall
mov
call
add
mov
pop
xor
xchg
mov
sub
cld
rcrl
add
add
lods
cmp
add
dec
push
ret
inc
push
pop
stos
dec
push
push
test
xor
add
xlat
roll
in
std
or
add
jmp
sub
cs
imul
add
add
mov
lahf
inc
add
arpl
jo
push
mov
mov
add
add
aaa
pop
ret
or
shrl
shl
cmp
mov
add
xchg
push
dec
mov
add
lcall
mov
roll
je
jp
nop
repnz
add
mov
lret
inc
add
movsl
add
mov
xor
and
je
pop
decl
icebp
incl
cmp
add
test
roll
out
lahf
jne,pn
dec
push
inc
add
jecxz
fnop
icebp
rcr
mov
cli
int
add
incl
movsl
add
add
out
flds
les
and
and
arpl
and
cmp
inc
add
mov
dec
pop
into
pop
cmp
mov
jmp
push
cmpsb
aam
mov
add
lahf
xchg
mov
or
lods
sti
sub
cwtl
cli
pop
daa
add
add
pushl
jne
jmp
ljmp
in
je
mov
rolb
xchg
and
das
clc
data16
pop
or
mov
inc
add
jl
ljmp
ficomps
in
addl
ljmp
jl
insb
addl
rorl
add
add
lock
push
jmp
sub
sbb
out
jmp
xor
or
add
inc
add
mov
into
arpl
pushf
sbb
dec
repnz
adc
inc
add
add
add
adc
add
icebp
fldl
lods
dec
add
pushf
hlt
xor
add
add
lods
pop
pop
in
pop
mov
mov
push
jmp
in
ljmp
pop
mov
repz
xchg
lods
xor
mov
sti
jl
repnz
fcoms
mov
mov
insl
xor
clc
das
aam
scas
pop
outsl
aaa
enter
int3
scas
clc
imul
testl
sbb
sbb
xlat
movsb
add
in
push
add
mov
add
loope
fcmovnb
add
mov
push
fildll
push
jp
pushf
and
pop
xor
add
inc
add
xor
stc
lret
mov
inc
add
add
add
mov
push
mov
out
jmp
add
fcmovbe
ljmp
or
leave
popa
add
add
pop
iret
xor
xor
loop
adc
rorl
mov
std
aaa
out
repz
add
push
pop
add
cmp
sub
add
add
push
push
ret
ret
aas
add
incl
movb
cmp
add
shlb
ret
add
adc
ret
add
sarl
add
add
bound
iret
js
adc
add
push
jmp
add
adc
jns
add
pop
jl
xchg
popf
cwtl
frstor
aaa
push
ljmp
inc
add
pop
xchg
stc
cwtl
sbb
fldenv
add
mov
sub
stc
inc
add
add
add
pop
cld
fidivrl
scas
and
shlb
pushf
add
push
mov
push
ret
push
sbb
or
add
aad
pop
leave
fisubs
bound
mov
push
lret
jmp
in
sub
dec
testb
push
mov
mov
add
clc
imul
add
pushl
sbb
es
push
add
jbe
jmp
add
pushl
addb
xor
and
push
add
pop
mov
cmpsb
add
push
fistps
popf
repnz
xor
lcall
or
add
sbb
and
push
push
cwtl
cmc
cmp
mov
add
movsb
add
push
negl
cmp
fdivrs
mov
jmp
add
imul
or
add
mov
int
imul
mov
iret
mov
dec
out
enter
pushf
mov
add
cmp
jmp
ljmp
pop
pop
lea
lds
in
imul
add
push
repnz
out
sub
add
and
add
add
add
jns
push
mov
add
xchg
int
mov
add
outsl
cmp
xchg
adc
inc
add
aam
cmp
int
xor
jo
and
aad
je
pop
dec
add
jmp
add
mov
sahf
leave
jle
mov
add
mov
push
jmp
jmp
push
mov
add
sub
add
insl
xor
pop
popf
cmpsl
add
adc
jae
add
enter
add
sarl
pop
mov
sub
arpl
aas
jecxz
repz
add
push
add
sub
dec
in
test
std
xor
add
into
movsb
add
add
rep
movb
add
add
xor
addb
add
sbb
lock
and
push
mov
jmp
imulb
hlt
dec
xor
icebp
scas
jge
jmp
les
into
adc
mov
add
push
push
add
sbb
xlat
lret
sti
cs
adc
sub
add
je
shll
dec
sahf
mov
mov
lcall
xchg
mov
push
add
push
dec
cmc
cwtl
les
pop
sti
sub
xchg
leave
stos
adc
add
xchg
mov
add
dec
adc
xchg
mov
mov
rolb
push
add
add
lods
movl
add
jecxz
lret
sbb
mov
push
lock
add
sbb
add
inc
add
fwait
jno
adc
add
mov
xor
push
pop
sbb
add
js
xchg
and
or
add
insb
aas
inc
dec
rcrl
add
cmp
add
mov
add
inc
add
or
dec
mov
scas
pop
push
stos
fwait
cs
sarb
into
mov
xlat
shll
mov
call
push
ret
arpl
add
inc
add
dec
loopne
inc
add
inc
add
ficoms
inc
add
sbb
ret
add
jns
xchg
mov
mov
clc
add
rolb
bound
mov
add
lcall
sub
ret
add
rolb
pop
push
mov
xchg
and
mov
add
jge
add
cltd
mov
jle
jae
xchg
pop
mov
add
mov
add
mov
leave
jo
push
mov
add
add
add
cli
lcall
add
sub
dec
lcall
sub
mov
ja
fldenv
pop
add
jmp
stos
inc
add
cmp
mov
add
fnsave
decl
aam
cmp
int3
add
stc
lods
mov
xchg
mov
xchg
mov
pop
add
enter
adc
and
dec
dec
mov
mov
mov
jmp
add
mov
mov
dec
jl
push
add
sarb
shll
jl
fnstcw
lcall
adc
add
sbb
add
ljmp
popf
sbb
mov
push
addl
jl
lea
movb
gs
mov
pop
pop
xlat
adc
les
mov
mov
pusha
add
add
add
sbb
xchg
mov
add
addl
aaa
inc
add
std
rolb
add
add
add
test
mov
gs
push
inc
add
or
add
add
test
add
lds
in
or
aam
add
add
cs
inc
add
jno
or
dec
or
dec
push
add
cltd
inc
add
fldpi
xor
add
add
iret
cs
sub
ds
std
push
stos
jmp
cmc
js
lcall
pop
add
mov
sbb
mov
add
inc
add
mov
add
jne
call
dec
outsb
add
incl
push
add
data16
xchg
xchg
cltd
cmp
ljmp
jo
mov
imul
add
call
push
ret
push
aas
push
xor
cmc
dec
addl
sahf
jmp
popa
add
and
mov
cmp
cmpsb
add
enter
and
je
adc
add
bound
fadd
add
adc
pop
jmp
into
insb
xor
loop
das
aam
addb
add
and
push
push
xchg
mov
icebp
in
popf
sub
push
roll
add
jl
add
push
mov
push
add
sbb
add
xor
nop
xchg
std
add
fsubl
add
add
lret
test
add
lret
movsl
add
xchg
int
fisubrl
cmp
add
popa
add
ret
add
add
jmp
mov
test
add
into
and
xor
mov
add
addb
add
dec
dec
or
pusha
add
push
add
add
mov
test
in
movl
mov
fidivrl
add
mov
jmp
cmp
add
add
add
aam
jg
jne
outsb
xchg
hlt
or
or
add
add
ljmp
inc
add
popf
dec
ss
call
sbb
add
xchg
add
jmp
sub
add
pop
jae
or
dec
lods
aad
add
insl
cmp
ljmp
ljmp
add
add
inc
add
int
add
sub
add
jl
add
jns
jg
testb
call
lods
xor
xchg
push
or
push
inc
add
insb
pop
mov
cmpsl
add
xor
sti
xchg
test
add
dec
pop
dec
stos
xchg
cltd
cmp
cmp
mov
sbb
add
add
into
mov
inc
add
call
add
loope
scas
int3
pop
sub
jmp
arpl
ret
jmp
sub
fisubrl
arpl
lcall
push
ret
add
call
dec
xchg
xor
pushf
dec
pop
dec
xchg
cmp
inc
add
add
push
add
xchg
dec
mov
add
mov
stos
xchg
stos
pushf
jnp
mov
xchg
add
fnstcw
add
sbb
fsts
js
into
jle
add
push
and
jno
aam
dec
bound
push
inc
add
call
jmp
enter
addb
add
call
add
pop
add
call
or
outsl
xchg
lds
js
add
add
add
cmp
jmp
add
scas
xlat
rolb
aas
sbb
add
and
pop
sbb
aaa
ljmp
add
in
cmp
mov
jmp
addl
neg
sbb
ds
sbb
clc
jmp
xchg
jne
pop
in
sub
shrl
rolb
rcrl
or
sub
push
loopne
outsl
popa
add
push
xchg
data16
hlt
daa
add
mov
add
sub
sbb
add
mov
outsb
loope
xor
xor
movsl
add
add
out
or
jnp
cld
cwtl
pop
daa
add
cmc
inc
add
iret
xlat
adc
addl
movsb
add
add
pop
jl
and
mov
aas
and
sbb
push
in
lods
pop
inc
add
arpl
xor
in
or
fimuls
aam
or
add
add
push
dec
dec
movsb
add
pop
push
pop
imul
add
and
adc
enter
sub
add
nop
jbe
mov
xor
cmp
cltd
rcl
pop
fbld
mov
jle
add
out
sarl
add
mov
mov
js
mov
add
adc
and
test
mov
repz
ja
ret
add
leave
out
int3
xlat
mov
mov
push
sti
sub
scas
and
aam
sbb
adc
sti
xchg
shlb
add
mov
jne
jmp
sbb
ds
addl
mov
cmpsb
add
add
jmp
rcrb
jmp
push
addr16
add
cmp
call
movswl
add
jns
mov
outsb
outsl
add
jmp
inc
add
push
jecxz
roll
mov
aam
xchg
sub
mov
jae
add
inc
aas
jle
lods
inc
add
loope
fmuls
adc
and
into
aad
adc
sahf
call
lea
and
movsb
add
iret
inc
add
jge
push
pop
push
pop
sarb
movsl
add
xchg
cli
sbb
xchg
loope
cmp
or
dec
mov
add
add
push
and
movb
push
inc
add
psubsw
mov
add
add
daa
add
adc
aaa
addb
add
jmp
add
jne
jmp
orl
add
add
das
sbb
test
call
add
push
addr16
pusha
add
cltd
sbb
and
inc
add
pop
jne
popf
stc
inc
add
add
add
popa
add
mov
mov
jmp
mov
xchg
out
data16
xchg
mov
add
mov
inc
add
clc
or
divb
push
fdivrp
scas
add
add
add
rol
add
mov
je
add
ss
push
mov
add
outsb
sbb
bound
popa
add
jmp
push
or
sbb
fneni(8087
add
sub
jo
adc
dec
shlb
outsl
decl
or
add
fdivrs
mov
add
jb
push
mov
add
cltd
addl
mov
cli
push
outsb
dec
inc
add
popa
push
enter
movsl
add
dec
add
call
mov
add
loope
xlat
fisubs
hlt
js
repz
mov
roll
xchg
push
add
adc
out
push
dec
mov
dec
addl
push
push
jmp
sub
addr16
cs
adc
mov
add
cmp
in
inc
add
insl
sbb
cmp
addb
or
aas
cmpsb
add
in
mov
ret
cli
in
adc
sub
jmp
add
or
repz
aam
mov
add
jmp
push
je
pop
add
or
cmc
mov
cs
xchg
enter
sub
pop
int3
in
cs
incl
decb
add
insb
push
arpl
add
dec
je
inc
add
clc
jmp
add
jmp
or
sub
out
into
jl
scas
repz
roll
add
outsl
out
pop
jne
mov
add
add
xchg
aaa
jne
adc
add
js
add
addl
lds
ss
out
xchg
insb
sub
xchg
mov
add
add
add
add
adc
or
add
add
lahf
dec
add
push
adc
iret
stos
mov
cmp
mov
stc
adc
shll
add
mov
push
push
adc
sub
sbb
add
dec
sub
add
incb
decl
sub
mov
add
add
fnstsw
jecxz
rolb
mov
ss
test
mov
add
lods
js
xchg
sarl
test
add
aad
loope
pushf
sbb
add
push
push
add
in
outsb
pop
je
add
call
jge
sti
mov
add
repz
aam
jbe
xchg
dec
pop
add
jnp
dec
adc
and
fisubrl
ds
mov
outsb
repz
ds
cli
dec
ss
cmc
cld
lock
add
add
jmp
push
pop
push
push
imul
dec
lds
mov
and
add
cmp
push
enter
mov
add
jle
or
adc
inc
add
cmc
mov
fwait
adc
cld
pop
leave
mov
add
xchg
fimuls
add
push
add
xchg
mov
cmp
add
cmp
pushf
push
call
jmp
push
or
imul
mov
jne
jmp
imulb
cltd
xchg
loop
mov
add
push
xlat
sbb
add
xor
lret
add
add
add
mov
cmp
cmpsb
add
call
add
fwait
mov
add
add
mov
lcall
ljmp
fwait
lock
dec
or
adc
pop
call
xlat
adc
xchg
insb
dec
nop
ljmp
out
inc
add
mov
jmp
mov
mov
cwtl
cmc
dec
xchg
addl
xchg
bound
add
cli
in
adc
add
pusha
add
inc
add
or
add
jno
scas
cmp
into
jnp
xstore-rng
cmpsl
add
xchg
mov
aas
add
insb
arpl
mov
push
ret
mov
add
lock
jg
movl
add
mov
aad
add
inc
jmp
insb
mov
popa
add
hlt
sbb
push
lret
or
add
sbb
jns
adc
or
inc
add
mov
add
mov
add
add
ss
lods
cltd
popf
leave
fildl
jb
add
add
jbe
pop
add
push
adc
ss
aaa
xchg
cmp
inc
add
arpl
mov
test
mov
data16
mov
lock
push
and
xor
xchg
jb
jmp
mov
add
jmp
push
lock
mov
push
mov
mov
add
push
add
out
aaa
mov
test
add
jae
movsl
add
sahf
lods
decl
in
call
aas
mov
xacquire
adc
dec
ljmp
xor
pop
in
add
call
pop
xchg
lahf
adc
insl
ja
add
push
pop
mov
or
xchg
aas
and
pop
mov
pushf
rolb
jle
add
cmpsb
add
add
pop
dec
jge
cwtl
dec
cs
jge
add
jbe
add
xchg
das
mov
sbb
loope
push
cmp
mov
cwtl
cmp
inc
add
push
stc
mov
add
jbe
xor
jmp
add
pop
jmp
mov
xchg
mov
in
call
push
or
call
push
ret
ljmp
cmp
repnz
xchg
pop
lods
pop
movmskps
push
test
psrlw
add
jmp
push
aam
inc
andl
fnstenv
cmp
add
xchg
jl
dec
jle
add
sub
loope
into
scas
imul
call
inc
add
sarl
scas
mov
pushl
cmp
add
add
xor
dec
js
add
lcall
dec
adc
out
dec
addl
data16
add
arpl
xor
test
clc
ss
test
add
jmp
mov
add
add
mov
xor
add
adc
scas
fsubrp
and
add
enter
bswap
popf
mov
sub
lods
into
ljmp
push
push
push
das
push
sbb
add
add
mov
and
in
push
add
or
call
test
lock
std
xchg
add
dec
xchg
fwait
out
jmp
cli
xchg
add
xor
add
add
add
addl
add
add
js
dec
fnop
mov
lea
cmpsl
add
add
add
mov
cmp
mov
cmp
add
pop
pushf
push
mov
push
ret
push
sbb
push
mov
int3
mov
push
inc
add
xchg
stc
aad
add
aam
add
jmp
and
xchg
jns
add
mov
imul
add
enter
leave
mulb
add
add
cmpsl
add
pusha
add
rolb
das
jg
add
add
decl
add
movl
add
mov
jo
out
outsb
push
pop
movl
jae
addb
mov
add
mov
xor
dec
loopne
or
decl
loop
cmp
jns
add
cmp
pushf
int3
push
add
add
add
punpckhbw
add
jle
push
adc
add
das
imul
add
inc
add
int3
cmp
add
insl
outsl
sbb
in
ljmp
sbb
hlt
adc
adc
add
adc
scas
jge
ja
add
add
push
or
xor
add
mov
mov
mov
jmp
adc
hlt
jne
add
sbb
and
push
add
pushl
push
gs
mov
add
fildl
add
sbb
call
pop
add
call
add
add
push
popf
jmp
arpl
push
push
sub
fidivrl
add
add
or
add
addb
add
pop
or
add
pop
pop
fadds
add
mov
or
jge
pop
add
int3
out
icebp
add
jns
sbb
popa
inc
add
mov
enter
add
mov
mov
test
mov
push
dec
jae
add
jge
fmul
or
xchg
dec
lods
je
add
sbb
or
add
cmp
fistpl
and
mov
add
decl
jmp
arpl
popa
xor
adc
lea
test
dec
sti
add
mov
adc
push
push
aam
call
insb
push
mov
lock
stos
xchg
push
pop
in
push
xchg
les
ret
aaa
or
add
scas
jnp
add
jl
push
rolb
xchg
push
add
mov
xchg
dec
ficompl
insl
or
ss
in
cwtl
sbb
push
les
int
frstpm(287
add
aas
test
roll
pop
cltd
bound
stos
adc
je
dec
das
sahf
xlat
push
dec
std
movl
cli
ljmp
push
adc
gs
add
lcall
or
or
add
aad
add
pushl
out
mov
sub
add
push
xchg
adc
add
mov
add
mov
bound
fsubl
stc
mov
negl
in
dec
hlt
or
pop
jmp
sbb
cmp
insb
stos
inc
add
insb
out
push
das
add
outsb
cwtl
arpl
and
dec
dec
inc
add
std
or
and
test
mov
pusha
add
xchg
roll
pop
lea
add
add
and
in
clc
movsb
add
add
loop
ds
add
mov
ljmp
add
arpl
ss
test
add
add
sub
adc
add
cmc
fsts
dec
jnp
add
push
add
incl
xor
add
and
je
inc
add
repnz
roll
cld
mov
fldl
cmpsl
add
push
sar
call
push
shl
jns
or
add
mov
xchg
sub
pushf
sub
cwtl
in
and
and
mov
loop
ds
add
mov
idivl
add
cmp
add
xchg
jecxz
imul
add
rolb
call
adc
les
inc
add
add
pop
hlt
fistpll
mov
test
inc
add
addb
fstpt
mov
add
push
push
sub
jle
add
pop
insl
stos
daa
add
cmc
incb
js
cmpsb
add
add
mov
add
add
xchg
cmp
in
test
push
out
cmc
xor
jmp
decl
rcr
outsb
test
fists
add
mov
inc
add
addl
jg
add
pop
and
cmc
add
call
or
pop
add
addl
add
fisubrs
sti
cwtl
push
xchg
jmp
add
movsb
add
push
test
inc
add
sub
add
push
into
jae
jecxz
cmc
bound
jmp
inc
add
add
lods
pop
lds
sub
add
add
call
lock
jg
xchg
insl
roll
cwtl
ret
add
sub
mov
in
jbe
cmpsl
add
lods
jecxz
mov
imul
mov
add
add
lcall
add
add
or
mov
stc
inc
add
push
push
aas
inc
add
enter
xlat
mov
add
call
fildl
add
sub
add
push
push
push
cld
cmpsl
add
push
lock
movl
ljmp
adc
mov
loop
push
mov
inc
add
sub
roll
adc
add
add
add
and
shr
test
addb
add
add
pusha
add
jmp
add
xor
add
fisubl
add
adc
add
mov
out
jb
push
mov
in
out
punpckhdq
add
fdiv
push
cmp
mov
push
xor
jmp
push
push
iret
pop
dec
loop
cmp
push
and
out
adc
aas
ljmp
sbb
add
sbb
push
sbb
add
incl
mov
mov
into
or
mov
jmp
mov
jb
addl
call
int3
adc
test
add
xor
dec
push
test
pop
loopne
jmp
add
add
ljmp
adc
pushf
add
add
imul
push
daa
add
addb
inc
add
lods
jns
in
jl
xor
aas
dec
inc
add
fnsave
pushf
and
loope
std
mov
add
jecxz
or
test
stc
xor
add
cmove
cmp
mov
add
popf
adc
add
ljmp
add
lcall
addl
roll
lahf
jae
add
pusha
add
push
fidivl
add
and
add
push
add
call
mov
decl
adc
xchg
add
add
mov
add
add
add
jmp
cld
push
inc
push
add
bound
addl
add
movb
push
pusha
add
xor
test
xchg
mov
in
je
adc
sub
pop
shl
add
add
jmp
add
pop
xor
sub
imul
add
lcall
pop
mov
clc
call
ljmp
pop
inc
add
popa
mov
and
inc
add
pop
push
pusha
add
rorl
lods
pop
fidivs
rclb
add
or
jecxz
push
sub
jmp
push
cmpsb
arpl
add
in
fwait
and
cmpsb
add
sub
pop
add
mov
pop
cltd
dec
jp
xchg
lea
mov
test
addb
repnz
jb
mov
into
jnp
add
xchg
push
dec
xchg
data16
inc
add
add
push
loope
pop
scas
mov
inc
add
jmp
mov
push
and
xor
das
add
call
call
add
insb
cmp
inc
add
cld
mov
movsl
add
cmpsl
add
insl
ljmp
rolb
inc
add
repz
sbb
outsb
mov
add
call
adc
sahf
mov
pop
jnp
add
mov
jb
add
add
add
cmp
aas
ret
add
mov
push
jmp
sub
cmpsb
sbb
xlat
aas
add
mov
add
call
xchg
test
jnp
in
sbb
lock
push
ret
lcall
and
xor
cs
lcall
add
mov
addb
dec
lahf
lea
add
cmp
call
loop
cmp
cmp
mov
xor
or
out
mov
ljmp
add
ret
add
add
cmp
decl
xchg
js
fnstenv
data16
push
push
jl
jmp
jle
sti
ficoms
je
add
add
outsb
ss
inc
add
into
push
add
add
fmull
or
roll
popf
jg
xchg
xor
add
add
mov
adc
add
add
cmp
add
iret
push
popa
jmp
and
add
aam
out
addl
sub
movl
in
mov
add
push
lcall
jae
dec
xchg
lcall
lock
sti
xchg
outsl
shlb
dec
test
add
pop
mov
pop
repz
decl
push
push
cmp
bound
or
add
js
adc
add
mov
add
add
add
es
mov
jmp
jb
jle
sub
dec
mov
mov
add
add
lcall
gs
imul
ficoml
cmp
xchg
add
push
leave
dec
dec
mov
cmp
sbb
or
add
and
movl
add
add
add
add
out
scas
adc
add
cmp
call
in
sub
fsubrp
sbb
add
cld
adc
or
add
mov
add
pop
sub
mov
add
push
ljmp
jbe
and
jae
movsb
add
stos
inc
add
les
pusha
add
stos
popf
sbb
aaa
dec
dec
mov
add
int3
fwait
hlt
jp
mov
mov
mov
mov
add
jge
add
leave
cltd
xor
pusha
add
cmp
lcall
add
out
sub
add
ret
xlat
xchg
movsb
add
pop
pop
push
mov
add
jmp
mov
pop
push
add
leave
jne
push
add
loop
imul
cld
cmp
sbb
jo
sbb
shll
rcrl
pop
mov
mov
mov
fistl
push
daa
add
cmpsb
push
push
push
push
push
test
or
sti
sbb
inc
add
rcrl
aaa
add
jmp
sub
push
add
pusha
add
rolb
or
in
data16
cwtl
out
mov
ficomps
add
add
cmp
xchg
fwait
push
push
mov
add
jne
ljmp
push
xlat
push
mov
jmp
movl
inc
add
xor
dec
bound
int3
add
or
mov
push
aas
pop
cmp
jle
mov
xchg
push
and
or
jmp
add
sub
push
jmp
mov
das
mov
add
movsb
add
add
add
cli
mov
jo
pop
sbb
add
shrl
push
scas
mov
call
inc
push
jp
add
aam
cli
push
mov
sub
add
incl
addb
jge
dec
xrelease
ljmp
mov
mov
test
iret
push
fs
mov
add
add
loope
push
push
mov
jo
mov
pop
mov
sub
or
jl
mov
cmp
mov
addl
mov
in
inc
add
or
add
add
adc
iret
xchg
imul
rolb
stos
xchg
int
push
insb
or
add
add
sub
xchg
adc
xor
in
les
pop
in
addl
adc
dec
sub
mov
paddsb
push
das
nop
mov
add
cmp
pushf
xor
xor
jns
popa
add
pusha
add
ljmp
repnz
jge
mov
sbb
add
add
mov
pop
or
outsb
jb
sub
nop
sub
mov
mov
add
mov
push
dec
mov
xor
add
add
add
stos
lret
jmp
js
sub
popa
leave
das
and
xchg
arpl
das
adc
add
add
test
and
das
xchg
push
push
icebp
xchg
adc
sub
add
inc
add
imul
cmc
cmc
push
xor
sbb
and
call
insb
lds
nop
cli
fsubl
pop
test
add
add
jle
dec
cmc
and
fdivl
fbld
xor
push
add
lds
scas
adc
add
adc
addps
dec
adc
push
test
jg,pn
push
jo
add
add
and
jbe
icebp
fistpl
je
jmp
pop
mov
push
cltd
mov
sub
add
dec
imul
sub
out
jnp
add
lock
xchg
je
xchg
jb
push
test
les
mov
mov
pop
add
mov
add
ja
fmuls
push
stos
mov
in
or
cmp
pusha
add
jne
add
adc
imul
mov
add
sub
add
push
mov
bound
addb
xchg
mov
cmp
push
dec
inc
add
int3
lods
js
or
xchg
mov
add
push
dec
scas
scas
in
jmp
imul
mov
imull
icebp
inc
add
ljmp
add
ljmp
stos
es
jp
cli
jo
add
lret
clc
push
fcomi
xchg
mov
sti
pop
std
mov
sbb
cli
call
push
add
adc
add
inc
add
aas
stos
lret
lret
add
fnstenv
sahf
cmp
addl
mov
stc
mov
js
mov
sbb
pushf
push
cwtl
addb
add
add
push
sub
addr16
add
loopne
xor
push
add
jmp
add
les
cwtl
push
inc
add
inc
add
dec
sub
add
add
and
xchg
inc
add
pop
jmp
stc
inc
add
jmp
into
mov
push
inc
push
prefetch
lds
xchg
ljmp
pusha
add
jbe
cmp
add
jne
jmp
push
push
addb
cli
xchg
jae
addb
add
cmp
js
add
add
add
jbe
sbb
aam
cmp
outsl
je
jmp
sbb
mov
inc
add
xchg
xchg
dec
mov
test
inc
add
imul
jmp
lock
jb
mov
addb
loop
lret
aas
inc
add
add
stc
scas
movb
push
mov
mov
sti
pop
add
mov
push
stc
add
call
outsl
cwtl
dec
cmp
xor
or
lods
mov
sub
stos
dec
ret
hlt
in
add
jmp
cmp
add
mov
repnz
add
jg
push
add
jmp
pop
push
push
push
testl
mov
mov
xchg
lret
sahf
xor
and
xchg
dec
addl
nop
add
xchg
xor
cmp
loope
jns
add
push
mov
repz
mov
xor
mov
mov
push
in
dec
ss
cmp
out
es
add
or
aam
decl
add
jmp
xor
add
hlt
pop
pop
rclb
fsubl
add
add
pop
addl
jmp
icebp
movsb
add
stos
fisttpl
mov
stos
arpl
and
mov
add
jge
inc
add
add
aas
stos
fldl
add
cmp
ret
ljmp
outsl
sahf
lret
sbb
add
add
add
das
pushf
jl
addl
sahf
cmpsl
add
lahf
mov
aam
imul
add
out
pop
jge
fistpll
sahf
roll
mov
cwtl
outsl
js
gs
add
ljmp
cmpsb
add
add
scas
and
push
jmp
int
xor
add
jg
mov
popl
ds
int3
addl
push
mov
dec
in
test
and
xor
jmp
pop
sahf
ss
mov
mov
push
movsl
add
jmp
add
push
add
jmp
push
idiv
cmpsb
mov
mov
add
sbb
add
jg,pt
add
add
aaa
imul
adc
pop
xor
add
aaa
xchg
xlat
cld
add
add
test
jnp
dec
dec
mov
cmpsl
add
add
cli
repz
add
sahf
shl
add
add
inc
add
add
std
ds
mov
mov
test
add
call
fwait
dec
and
add
add
shll
fiaddl
loope
mov
add
lahf
mov
add
fcompl
xchg
fwait
daa
add
sbb
or
add
add
add
xchg
int3
cwtl
call
add
addl
iret
loopne
ret
add
add
decl
jmp
push
in
insb
xchg
cmp
add
into
xchg
sarb
cli
ds
ljmp
loop
mov
ret
add
lret
notb
push
cltd
or
add
add
mov
jns
enter
inc
add
cs
or
sub
push
sbb
mov
mov
jmp
jle
mov
out
push
jnp
mov
sti
lods
loop
cs
outsl
out
mov
mov
add
incl
jmp
dec
push
test
addb
add
push
jmp
inc
cmpsb
adc
push
jb
add
mov
add
mov
lret
cmp
sub
adc
add
into
lods
xchg
cmp
jae
add
mov
add
jmp
add
or
or
lret
cmpsb
add
mov
mul
add
push
push
test
adc
add
add
add
pop
daa
add
pop
jge
cmp
add
enter
jne
fwait
cwtl
lret
cltd
mov
mov
jae
stos
jmp
add
cmp
push
mov
xor
sub
daa
add
add
das
fmuls
mov
arpl
pushf
addl
test
daa
add
push
add
and
repnz
inc
add
inc
in
call
add
pop
jae
add
clc
pop
inc
add
mov
cmp
fidivs
lods
pop
cltd
add
ljmp
scas
dec
mov
jno
addl
aam
cwtl
mov
adc
mov
fdivrl
add
pushl
jge
xchg
pop
sub
push
add
fadds
add
or
add
sbb
add
xor
lret
out
mov
fbstp
in
pop
ljmp
idiv
dec
fldcw
add
incl
lods
insl
into
test
add
out
scas
xchg
add
incl
jns
add
inc
add
ja
or
add
mov
push
pop
stc
paddq
add
pop
xor
hlt
test
push
mov
out
lcall
in
ljmp
jg
mov
and
testb
add
inc
add
fwait
adc
add
lret
or
sub
cmc
leave
push
add
push
sub
popa
add
add
leave
lcall
rcrb
add
and
ficompl
push
adc
mov
js
push
push
xchg
addl
push
sbb
sub
add
add
aas
inc
add
scas
stos
rol
add
in
mov
inc
or
pushf
movsl
jmp
dec
or
add
out
sbb
mov
icebp
call
fistpll
pop
xchg
inc
add
xchg
push
xor
pop
dec
repnz
mov
jmp
cmpsb
push
cld
push
ret
xchg
lods
adc
addr16
add
add
jge
clc
pop
add
outsl
mov
jo
ljmp
addr16
lock
push
fcoms
mov
movsb
add
add
jp
fidivs
cs
decl
test
out
out
adc
add
add
sbb
add
pop
mov
or
add
scas
rolb
test
enter
jno
add
aaa
mov
add
add
mov
add
int
push
push
add
add
lcall
or
xchg
decl
test
out
jmp
jb
movsb
add
add
mov
in
push
movb
sahf
rep
push
clc
lcall
sub
dec
pop
mov
fs
add
jmp
fsubr
and
xchg
clc
enter
pop
push
loop
mov
ja
xor
das
adc
arpl
cwtl
or
lds
sub
pop
inc
add
add
pop
addl
pop
cld
addl
add
jp
add
or
jecxz
fmulp
xchg
stos
adc
fdivr
decl
and
sub
aas
xchg
in
rolb
cli
jnp
add
fimull
fwait
cs
out
or
add
fists
mov
add
pushl
add
add
negl
test
call
dec
clc
inc
add
testl
add
mov
stos
add
mov
add
std
stos
rclb
add
bswap
repz
sbb
imul
add
mov
push
ret
push
sub
add
add
test
xchg
jg
cmp
icebp
pop
pusha
add
add
lret
mov
xchg
sahf
pushf
xchg
push
out
cmp
sub
aas
adc
fidivl
aaa
fidivl
push
lods
jmp
ret
ffreep
pop
out
add
pushl
aas
push
ret
add
lds
xor
add
dec
pusha
add
lcall
dec
or
add
decl
push
daa
add
lcall
out
fildll
add
arpl
adc
lea
mov
pop
cmp
loopne
lods
jns
sub
repz
add
pop
xchg
cli
pop
popa
add
jmp
jmp
add
add
add
add
add
lret
mov
add
add
jmp
push
in
lods
inc
add
loopne
bound
mov
dec
imul
insb
ret
add
ja
aaa
cmp
icebp
cmp
add
dec
lret
dec
xor
add
add
repz
push
arpl
add
xchg
loop
repnz
mov
stc
jne
rol
add
stos
xchg
pop
add
in
mov
cmpsl
add
or
call
insl
popa
add
loop
imul
adc
add
jg
add
add
ljmp
jmp
sbb
sbb
sub
incl
dec
xchg
jb
ret
sti
push
push
add
add
imul
or
adc
cmp
mov
add
xchg
pusha
add
mov
add
add
and
push
dec
add
add
push
xor
push
add
jno
add
sbb
add
xchg
jg
pusha
add
add
cmc
fs
jle
call
add
mov
add
negb
aam
add
add
aam
fstpt
or
call
push
add
add
data16
imul
or
cmovnp
mov
movsb
add
inc
add
fisttpll
add
mov
push
mov
call
out
lock
cs
call
jg
mov
in
mov
or
jns
fmull
mov
stc
mov
add
dec
call
test
add
add
out
inc
add
pop
add
ljmp
and
xchg
xor
lods
cmpsl
add
add
push
sub
add
enter
add
fisttpl
jb
stos
jnp
cmp
cmp
add
jnp
lea
jmp
add
mov
add
add
add
xor
decl
fstps
adc
mov
add
add
enter
push
js
push
std
add
or
add
mov
push
ljmp
xor
dec
dec
and
call
add
in
jmp
sbb
mov
mov
add
add
add
or
sub
sbb
xchg
pop
int3
xor
int3
jno
dec
imul
push
ret
inc
add
add
movsb
jmp
ljmp
mov
fs
add
add
fwait
xor
add
add
mov
scas
arpl
pop
shl
jne
mov
inc
add
popf
idivl
cmp
pop
add
add
inc
add
mov
xor
add
add
cmp
bound
pop
mov
pop
push
loopne
repz
mov
les
xchg
movl
imul
add
addb
stc
idivb
add
cmpsl
movsb
inc
add
cmpsb
ljmp
jle
je
push
ret
jle
jne
push
ret
shlb
sbb
add
call
jmp
jmp
add
stos
pop
add
loop
cmp
add
out
adc
add
test
add
add
add
fisttpl
inc
add
mov
add
loop
decl
jmp
push
subl
cmpsl
add
or
sahf
cmp
add
aaa
lea
add
repnz
sbb
sub
add
sub
test
insl
mov
in
sub
jns
pop
scas
pop
repz
arpl
pusha
add
xchg
movb
add
dec
mov
lods
cmpsb
add
push
shr
aaa
ja
or
mov
daa
add
push
push
js
xchg
inc
add
insb
xor
and
inc
add
rorl
cmp
pop
flds
jmp
mov
sbb
imul
mov
xchg
fsubrs
add
ljmp
mov
push
sub
enter
push
fldl
call
add
aaa
dec
test
in
mov
or
pop
add
push
cmpsb
inc
jle
add
lret
mov
push
add
add
pushl
add
or
add
push
das
std
leave
or
fstpt
imul
adc
mov
add
add
add
jge
add
add
xchg
pop
repnz
add
cltd
mov
imul
loope
sbb
jp
inc
add
push
push
dec
push
mov
xor
push
or
adc
in
mov
add
movsl
add
stc
clc
lea
ret
adc
arpl
lds
cmp
add
insl
adc
push
data16
in
aas
and
loopne
jp
add
rcrl
addb
add
add
push
add
sub
stos
in
xchg
ret
and
cmp
add
fiaddl
jnp
imul
cwtl
mov
add
lret
mov
enter
lcall
inc
add
push
add
add
fistpl
add
bound
inc
add
cld
out
js
add
and
xchg
sbb
pop
sub
pop
add
stc
in
mov
cmp
outsl
std
in
sub
push
xchg
flds
mov
ja
xchg
or
decl
mov
addl
push
xor
bound
push
mov
fwait
arpl
jb
add
ret
sub
and
add
xchg
stos
adc
shlb
into
les
dec
add
jmp
push
fcos
call
dec
add
sub
add
data16
in
push
and
dec
pop
stos
xor
out
lds
pop
aaa
jne
in
movsl
add
add
jmp
mov
cmc
xlat
addl
add
or
pop
outsb
ja
add
mov
sub
xchg
cld
loop
xchg
jmp
jmp
mov
cmp
add
add
push
leave
push
aam
and
sbb
scas
dec
call
clc
cmp
sub
add
add
outsb
push
xchg
sbb
xchg
dec
add
imul
adc
out
loop
sub
ljmp
push
out
in
jno
add
pop
std
pop
cs
xchg
cmp
mov
inc
add
out
sub
mov
pusha
add
aad
pop
add
iret
test
shll
add
add
test
jb
add
push
pushf
iret
movl
addl
add
add
jmp
cmp
push
fsubrl
sbb
add
add
popf
push
into
or
jg
cmp
add
push
stos
jne
cmp
daa
add
add
jmp
into
and
std
cs
pop
sub
mov
add
jmp
push
jecxz
xchg
sub
or
in
insl
ljmp
shll
push
clc
arpl
jmp
add
xor
arpl
pop
add
sub
leave
iret
mov
js
lock
pop
rclb
fdivs
dec
mov
add
sbb
jmp
push
and
push
aad
cmp
jmp
mov
fnstenv
sub
inc
add
mov
fwait
push
rolb
xchg
lret
std
jecxz
mov
int
loope
sub
add
out
aam
jns
or
xor
shrb
les
cmp
cmc
icebp
cltd
inc
add
add
jmp
add
mov
pop
repnz
add
mull
push
icebp
test
adc
add
mov
sahf
xchg
jb
iret
out
ss
inc
add
inc
add
mov
cmp
add
cmp
roll
dec
jge
fbld
add
and
jno
pop
mov
jmp
add
push
lcall
mov
lods
dec
in
sub
sbb
push
addl
ret
add
arpl
cwtl
ret
mov
mov
mov
mov
jmp
push
inc
push
ret
into
cmpl
and
cmc
adc
inc
add
rolb
lret
mov
cmpsb
add
mov
jmp
addr16
or
add
outsl
arpl
call
or
faddl
aad
cmc
mov
pop
pop
lock
add
cmpsb
add
push
add
sbb
cltd
fildl
decl
push
ret
add
pushf
sub
addl
add
data16
jecxz
addl
adc
outsl
mov
leave
add
ljmp
add
pop
push
in
pop
outsb
fstpt
sti
stc
pop
add
jne
jmp
cld
addb
stos
push
add
loope
push
je
push
ret
negl
add
jmp
fstps
ljmp
ja
add
mov
addl
xchg
cli
outsl
cmc
out
dec
pop
pop
pop
stc
mov
and
add
lcall
incb
loop
aas
cld
testb
adc
mov
int3
nop
xchg
pop
jecxz
cmp
aam
add
jge
pop
aas
mov
mov
push
mov
test
or
pop
in
add
add
ja
and
pop
add
pop
push
push
sbb
push
call
jb
cmp
out
or
scas
jg
aas
outsb
push
and
add
into
or
or
push
lret
push
sbb
add
dec
bound
push
je
dec
repnz
add
mov
nop
test
add
insl
dec
call
inc
repnz
adc
cltd
inc
add
sub
loop
or
bound
push
sbb
add
imul
sub
pushf
leave
arpl
add
lcall
pop
mov
add
testl
sti
xor
xchg
mov
cld
mov
mov
sarb
add
add
add
movl
mov
jmp
mov
or
stos
divl
add
addb
adc
add
add
jmp
xchg
je
mov
cs
lods
out
clc
jo
lods
adc
cld
cmp
jns
push
add
add
add
pop
or
call
dec
inc
add
loopne
fbld
add
mov
mov
fdiv
je
and
push
xchg
mov
addl
inc
add
jb
cmp
mov
add
jmp
push
push
push
aas
dec
inc
add
xchg
mov
sub
test
jmp
mov
sbb
dec
push
jmp
push
das
cld
push
pop
testl
mov
adc
push
or
fcomps
addb
and
xchg
jnp
jo
cmpsb
add
mov
add
loope
dec
ret
add
sbb
ljmp
push
push
sbb
mov
pop
push
clc
int3
aam
inc
add
dec
add
pushf
sbb
add
mov
test
iret
and
dec
or
adc
cmp
or
add
repz
mov
aaa
sbb
je
mov
movsb
add
mov
pop
mov
test
add
add
push
pop
inc
add
mov
xchg
or
cs
xor
adc
xor
pop
fisttps
sahf
fcompl
add
mov
add
lret
std
insl
hlt
mov
inc
add
or
add
mov
add
add
ljmp
add
add
mov
inc
add
cs
inc
add
push
fsubrs
ss
jne
add
cltd
pop
loopne
loopne
sti
jno
clc
in
stos
inc
add
pop
cmpsl
add
mov
mov
add
ljmp
push
add
inc
add
loope
push
add
decl
push
ftst
add
cwtl
or
or
cmpsl
add
add
and
pop
addb
scas
jae
mov
jmp
add
add
add
dec
rolb
out
cmpsb
add
add
add
push
pop
pop
mov
xor
jo
out
push
add
loop
xor
inc
add
add
add
sti
js
pop
dec
loope
pop
mov
fisubl
call
sbb
add
add
stos
imul
add
cmp
pop
pop
movsb
add
addl
cmc
int3
inc
add
mov
mov
js
add
and
imul
je
sbb
adc
mov
add
push
add
aaa
xor
notl
jmp
push
inc
in
clc
cmpsb
add
add
add
pushl
pop
jbe
add
mov
lret
xor
push
jno
call
add
add
cld
jge
and
fcomps
repz
xor
test
stos
jecxz,pt
and
push
clc
cmc
xchg
addb
arpl
aaa
xchg
sbb
movsb
jmp
adc
mov
add
decl
test
sbb
mov
pop
or
js
xchg
test
add
add
add
jo
xchg
add
call
cmp
mov
loop
mov
call
call
lahf
jmp
dec
sub
push
push
std
or
add
jge
cmc
push
pop
add
std
sti
cmova
enter
pop
je
pop
mov
or
inc
add
sahf
adc
rol
add
fdivrs
call
add
sub
add
mov
add
imul
pop
das
mov
fisubrs
aam
neg
push
mov
add
xlat
notb
push
rolb
mov
add
add
addb
fwait
dec
jne
add
add
stos
std
call
add
pop
in
mov
call
insb
push
sub
roll
mov
jmp
aas
fstpl
addl
jmp
mov
jmp
fldenv
dec
add
js
xchg
into
lods
push
gs
push
insb
xor
fisubrl
cmpsb
add
scas
xchg
ds
fnstsw
call
mov
push
ror
and
add
mov
iret
pop
add
hlt
ss
fiaddl
add
leave
xlat
mov
ja
and
push
add
push
sub
js
jmp
in
bound
out
cmp
add
cmp
ds
add
mov
sub
inc
add
rolb
xchg
pusha
add
add
xor
add
and
pushf
jo
add
int3
xor
add
and
fstpl
add
lcall
into
push
pop
movl
add
dec
mov
iret
xchg
or
push
xchg
popf
rol
add
xor
add
mov
pop
test
addl
addl
jnp
add
cmp
iret
js
xchg
incb
pusha
add
add
jo
repnz
pop
test
popf
addl
test
push
decl
dec
adc
pop
imul
sbb
add
xchg
add
mov
mov
jmp
and
push
adc
dec
push
ret
pop
push
popa
or
js
add
adc
nop
push
in
enter
add
inc
add
add
add
add
jmp
aam
push
ret
fidivs
movups
jne
jmp
into
addl
pandn
or
cmp
xchg
enter
aas
in
movsl
add
or
pop
add
les
aad
and
insl
shr
loop
xchg
mov
jecxz
jmp
mov
in
dec
dec
or
cmp
or
dec
xor
data16
loope
iret
adc
sbb
jbe
movsl
add
sbb
pop
cmpsl
add
add
icebp
jno
in
xor
mov
jmp
mov
fstpl
xchg
repnz
xor
cmp
and
mov
lock
ss
and
mov
lods
paddusw
out
roll
clc
insl
sahf
inc
add
in
jp
add
push
jg
jnp
rolb
add
sub
cmp
lds
lret
mov
adc
sahf
or
fdivs
mov
das
add
jmp
add
shl
push
rcrb
xor
jmp
dec
sub
mov
lods
cltd
gs
fcmovne
roll
pushf
sbb
jmp
incl
cmp
bnd
je
repnz
push
mov
xchg
lret
add
jg
mov
jp
in
xor
movsb
add
xchg
and
mov
jmp
push
stos
fcmovnu
enter
lcall
add
xchg
add
rcl
and
emms
jnp
xchg
mov
add
or
pop
mov
sub
and
add
pop
test
add
jmp
add
sahf
fistps
je
jmp
aam
daa
add
std
decl
push
and
stos
das
shll
add
and
stos
and
clc
lea
roll
jge
add
add
add
fisttpll
lret
in
inc
add
pop
sbb
jle
pop
xor
push
add
add
add
clc
cmp
dec
repz
neg
sbb
insl
mov
mulb
dec
mov
add
rolb
jp
push
pop
and
mov
pop
js
add
pop
sub
fldenv
fsts
les
cld
and
add
pushl
in
ficoms
add
lea
push
push
pop
mov
fmul
popa
add
pushf
cmc
repnz
jae
add
sbb
mov
inc
add
jge
in
sub
shll
jl
dec
jp
shrb
lods
iret
push
mov
cmp
jne
sub
add
mov
add
iret
or
insl
adc
outsl
daa
add
inc
add
aad
push
sub
push
add
add
add
and
sub
dec
ljmp
roll
cmp
bound
lahf
outsl
insb
jns
add
adc
xlat
pop
dec
and
cmp
or
add
pop
popa
add
cmp
stos
ja
mov
add
in
into
pop
lods
notl
pop
push
add
frstor
mov
add
mov
jno
add
leave
sub
add
jl
add
add
cmp
data16
adc
add
xlat
xor
sete
jl
add
sbb
icebp
xor
add
add
lea
imul
inc
add
shrd
sub
sbb
add
jb
add
repnz
mov
push
mov
add
and
cltd
repz
sub
pop
mov
mov
in
jecxz
popa
add
add
jmp
inc
push
aas
push
fnstenv
out
xchg
pop
enter
enter
add
rolb
add
addb
out
jg
out
stos
js
ds
sbb
iret
ret
dec
sub
sbb
jmp
jle
dec
in
inc
add
xchg
push
inc
add
push
aas
subl
add
lcall
dec
xchg
dec
xor
addl
add
addb
xchg
add
lcall
out
sbb
mov
jne
mov
add
adc
add
mov
add
movsl
add
icebp
mov
les
push
ret
push
push
or
adc
add
lret
cld
ljmp
aaa
fbld
push
nop
xchg
loop
inc
add
inc
add
sub
and
leave
adc
inc
add
cmp
mov
repnz
sub
mov
mov
or
ja
add
add
add
add
jge
push
sahf
int
add
add
fcomi
out
hlt
sti
jge
lock
jmp
add
sbb
ja
movsl
add
roll
call
test
mov
jmp
cmp
inc
pop
xchg
cmp
dec
jne
add
add
add
adc
push
data16
ljmp
add
aas
mov
jnp
insl
mov
dec
out
push
call
mov
cmp
lds
je
or
into
sbb
add
add
cmp
fldenv
loopne
imul
js
add
add
out
mov
xchg
mov
pop
adc
add
and
and
adc
int3
leave
add
mov
popa
add
adc
push
decl
add
cmp
ret
movb
add
frstor
and
mov
hlt
daa
add
fcoml
add
or
fiadds
mov
push
dec
daa
add
add
add
add
add
add
dec
div
lock
movb
add
mov
pop
xchg
jne
int
push
push
xor
hlt
mov
add
loop
pop
sbb
ljmp
movsb
add
push
push
add
fists
add
mov
add
daa
add
pop
sbb
pushf
xchg
mov
incl
pop
lock
into
shll
mov
or
add
mov
mov
repz
mov
popa
add
add
add
dec
cmpsb
add
xchg
pop
in
roll
dec
dec
es
add
sbb
adc
fisubl
add
lret
loopne
addb
popf
xor
aaa
insb
jne
mov
je
add
xor
add
add
dec
dec
aas
dec
stc
test
mov
sbb
ret
add
out
mov
push
jmp
lcall
out
ret
add
xchg
mov
repnz
mov
add
enter
leave
std
test
in
push
pop
or
ljmp
in
arpl
test
push
add
add
and
push
ss
addl
add
decl
ja
add
in
xor
dec
adc
jecxz
and
stos
mov
cltd
ret
add
mov
xor
push
mov
es
add
add
mov
scas
neg
mov
push
mov
add
cmp
add
add
cltd
push
ficoml
addb
daa
add
popa
add
dec
lret
mov
les
dec
mov
jmp
push
fisttps
test
aam
ljmp
xchg
ret
push
mov
movsb
add
cmc
cmp
add
dec
cltd
in
cli
xchg
test
add
call
push
jmp
adc
loope
or
rcrb
mov
add
cltd
jns
adc
pusha
add
push
mov
or
loope
cli
xchg
push
xchg
sar
lcall
mov
add
dec
adc
pop
push
xchg
repz
mov
shr
call
insb
mov
and
xchg
push
insl
rorb
jns
cld
xor
cmp
cmpsl
add
xchg
add
lcall
scas
and
dec
mov
xlat
xor
cmp
nop
add
xor
mov
fisubs
add
cmp
pushl
lcall
ret
add
adc
pushl
jmp
add
popa
inc
add
or
jne
dec
jmp
cmp
bound
test
add
add
cmp
inc
add
cmp
dec
push
addl
lret
xchg
pushf
and
xor
adc
clc
xor
out
inc
add
xchg
mov
pop
scas
aam
sbb
add
lret
test
and
mov
or
inc
add
jmp
inc
add
out
sub
add
add
mov
adc
xchg
push
mov
add
stos
pop
xchg
out
sub
add
push
loopne
shlb
fidivl
push
cmpsl
add
add
add
das
add
sbb
or
std
movd
insl
in
push
out
addb
add
pushf
and
jp
add
pop
imul
cmp
call
push
jb
sbbl
add
add
inc
add
rep
jmp
inc
das
in
push
cmp
inc
add
mov
add
stos
or
inc
add
es
loop
jbe
icebp
setp
imull
int3
fstps
and
jo
or
add
arpl
ds
jmp
add
adc
add
rolb
out
mov
pusha
add
aaa
fbld
out
add
inc
add
daa
add
add
add
clc
dec
xor
pop
or
jns
add
pop
clc
or
xchg
xchg
test
decl
jmp
push
push
push
das
push
jmp
aas
push
sub
mov
jmp
stos
pop
push
pop
mov
scas
arpl
mov
data16
lcall
push
adc
enter
push
into
addl
adc
nop
inc
add
clc
test
push
and
mov
sbb
push
push
ret
push
add
stos
fwait
sub
xchg
push
xchg
mov
sbb
pusha
add
jae
add
pop
add
pushf
rcr
mov
cmc
adc
in
dec
lahf
jns
add
mov
inc
add
mov
je
add
jmp
mov
aam
add
test
add
jge
mov
call
fxch
cmc
test
aam
sahf
popa
add
enter
int
add
incl
xor
dec
lock
add
add
add
lcall
imul
add
add
mov
fldenv
ss
mov
add
fmulp
jo
jge
cwtl
jne
popf
test
movb
jecxz
out
gs
pop
ljmp
outsl
popa
fs
arpl
or
xchg
imul
in
pop
mov
or
add
ljmp
ja
add
loopne
jnp
je
push
ret
push
test
add
add
add
jmp
add
lods
lods
sub
add
add
xchg
xchg
popa
add
test
ja
or
add
movl
push
incl
inc
cmp
ret
aam
inc
push
xor
cmpsb
add
add
push
dec
sarl
dec
dec
sub
std
mov
add
lds
jecxz
sbb
jmp
push
cmc
out
and
dec
xor
add
cltd
js
fdivrs
ret
add
add
test
decl
roll
jp
push
sub
std
les
enter
loop
dec
fwait
dec
sahf
mov
add
push
das
loopne
jno
add
dec
dec
clc
dec
xor
add
xchg
xor
sub
add
divb
inc
add
sub
add
add
cmpsl
add
add
mov
data16
stc
xchg
sub
push
testl
jmp
cmp
jp
fcom
data16
add
sti
loope
or
cld
dec
and
cmp
sub
sub
loope
push
pop
dec
rcll
add
or
adc
add
jg
call
int3
jmp
jg
lea
cmp
movb
inc
add
add
add
mov
jmp
popa
xor
addb
js
sbb
push
add
ljmp
jp
push
addb
add
add
jmp
add
imul
pusha
add
mov
jbe
jno
shll
daa
add
pop
mov
add
push
inc
add
lds
dec
pop
add
dec
mov
xlat
rolb
decl
fwait
test
inc
add
nop
out
mov
call
add
rcll
add
clc
mov
inc
add
cmp
pop
loop
pop
add
decl
decl
cmp
das
mov
sbb
fldcw
jns
jp
enter
add
add
add
jns
add
inc
add
mov
push
pushf
dec
adc
imul
outsl
arpl
fisubs
adc
arpl
nop
mov
loope
rclb
add
lea
or
and
dec
and
fcoml
xchg
cs
or
nop
pop
pop
test
fldt
mov
push
pop
int3
jae
mov
call
inc
add
dec
push
push
test
pushf
out
pusha
add
xor
pushl
adc
sbb
aam
mov
imul
add
jae
pop
sti
push
and
push
cmp
out
inc
add
or
lea
add
xchg
movsl
add
js
sub
xchg
pop
sub
iret
daa
add
add
jb
push
jne
sbb
jbe
enter
add
add
add
cmp
mov
int3
icebp
push
pop
push
std
lock
cmp
xlat
inc
add
aas
enter
lods
or
add
mov
mov
ds
movsb
add
fbld
mov
mov
cld
inc
add
pop
ljmp
leave
xchg
shl
add
pop
jmp
or
fistpl
sbb
add
jo
mov
repnz
nop
or
js
add
daa
add
add
aas
xor
repz
add
add
add
jnp
fisttpll
out
xor
jb
insb
into
dec
adc
sti
movb
cmp
flds
jmp
ljmp
popa
insb
push
jmp
mov
fwait
pusha
add
outsb
enter
add
add
lret
scas
jns
add
iret
xchg
loope
pusha
add
loope
lahf
mov
add
add
lods
pop
call
push
ret
mov
add
pop
sbb
ret
add
mov
incl
add
aaa
bound
ds
and
or
add
add
inc
add
add
call
pop
enter
xchg
and
fildll
inc
add
add
cmp
jbe
out
ftst
add
add
xchg
lods
xchg
lahf
jl
test
hlt
mov
add
loop
movl
add
test
sub
add
add
add
fstl
xchg
out
push
mov
dec
or
sub
inc
add
mov
addr16
cmp
pop
inc
add
scas
enter
mov
add
jns
stos
bound
outsb
popf
jb
in
les
popl
hlt
pop
add
jp
out
push
mov
daa
add
pusha
add
inc
add
add
fs
add
icebp
sub
mov
xor
pushf
jae
sub
add
iret
cwtl
mov
add
inc
add
aam
dec
mov
mov
mov
lea
mov
btcl
cmp
jp
cmpsb
add
push
int
fidivl
jmp
add
addb
test
mov
xchg
jno
sbb
xchg
push
adc
sub
jp
or
mov
push
roll
add
add
pop
inc
add
lods
fwait
bound
in
lds
and
repnz
add
xor
and
dec
inc
add
dec
jle
sub
add
loop
fisubrl
notb
add
push
ret
pop
enter
pop
out
lahf
jbe
add
out
addb
mov
push
in
clc
add
mov
push
fimull
addl
hlt
push
cmc
mov
jmp
add
loopne
pop
add
pop
mov
mov
jbe
in
aad
ja
push
fcmovu
add
insb
xor
mov
out
add
push
sbb
add
adc
mov
lds
xor
jb
add
ljmp
jmp
inc
addr16
jle
or
mov
jne
jmp
inc
test
pop
sub
xchg
clc
jns
xlat
jo,pn
pop
gs
add
inc
inc
add
inc
and
dec
push
jae
pop
cmp
add
add
mov
dec
ja
add
inc
add
add
mov
out
shld
sub
sub
jne
add
mov
add
cmp
ljmp
mov
jbe
lock
and
aas
or
lock
inc
add
lock
inc
add
hlt
loope
jmp
xor
cmpl
jmp
pop
pop
mov
fistps
xor
jae
add
xchg
lahf
ret
add
rorl
test
add
repnz
movsb
add
jg
add
lds
mov
and
pop
push
lret
test
stc
jp
aaa
into
les
sub
aad
mov
jp
push
xchg
push
push
inc
add
or
push
insl
push
insl
cmp
inc
add
sub
lock
fcmovnu
inc
add
add
pop
push
std
add
and
movsb
add
or
pop
jne
jb
add
out
xchg
push
add
push
ret
push
das
pop
lcall
movb
add
jmp
aam
notb
sbb
ljmp
jmp
addr16
imul
jmp
jb
add
aad
mov
add
push
lods
jmp
push
andl
push
add
inc
add
cmp
mov
test
and
loopne
test
pop
inc
add
cld
xor
decl
jmp
sbb
das
arpl
mov
pop
jne
pop
mov
aaa
push
inc
add
jb
add
das
imul
adc
add
add
addb
insl
addb
push
mov
sbb
mov
loop
jae
pop
daa
add
mov
add
jg
shl
add
push
mov
rcrb
imul
push
sbb
fistpll
jp
incl
push
out
mov
add
pop
mov
add
shll
xor
pop
rorl
add
addb
dec
les
inc
add
scas
lods
mov
cmp
iret
lods
adc
icebp
xor
fstpt
iret
pop
add
add
add
popa
add
psrlw
jmp
xor
fidivrs
xchg
add
mov
dec
mov
add
jnp
lds
sbb
add
add
add
or
push
mov
std
lahf
mov
leave
bound
jne
add
add
addl
mov
inc
add
jmp
push
push
push
mov
inc
add
push
jne
jmp
add
inc
add
lea
pop
les
mov
lcall
add
adc
bound
mov
pop
in
das
push
out
incl
push
push
push
sub
add
push
call
push
enter
push
dec
ja
add
incl
jp
icebp
call
decl
incl
and
push
add
or
add
jmp
in
add
push
add
add
pop
and
loope
fcomps
sahf
ret
add
jl
add
add
sub
push
je
jmp
push
cmp
and
mov
les
sub
push
inc
add
aad
add
stos
imul
xchg
roll
push
jns
add
push
xchg
jg
add
jmp
jge
add
xor
add
add
inc
add
push
dec
sbb
jbe
xchg
push
add
hlt
mov
sbb
iret
lea
inc
add
push
mov
lahf
adc
add
inc
add
and
sbb
dec
arpl
stc
adc
xor
pop
cs
fs
add
jmp
mov
sub
and
jne
mov
add
sub
xchg
pop
xchg
rcll
aam
int3
lret
mov
popf
dec
lds
sbb
add
add
test
sbb
pop
sbb
popf
jecxz
jecxz
add
sti
pop
pop
add
out
cld
xchg
adc
xchg
xchg
adc
push
arpl
test
lock
xchg
dec
xor
stos
cli
xor
les
cmc
jl
add
rorl
xor
add
push
jmp
push
add
add
mov
daa
add
rolb
mov
out
fimuls
les
iret
fs
addb
into
jmp
outsl
cmp
add
addl
mov
dec
jp
neg
addl
add
add
add
out
lahf
enter
add
add
stos
testb
add
call
lret
add
mov
add
std
into
loop
int
pop
loopne
aam
add
pop
add
pop
lods
and
inc
add
mov
rolb
int3
dec
movsl
add
add
movl
or
push
push
mov
in
pop
sub
cmpsl
add
ljmp
push
xchg
jmp
fsts
push
push
lds
dec
pop
sbb
das
pushf
aaa
sub
pusha
jmp
aas
aam
mov
add
test
shlb
or
add
mov
lods
add
adc
add
incl
mov
add
in
xchg
add
add
push
cltd
mov
add
js
inc
add
add
or
cwtl
sahf
cmp
popa
jmp
push
subl
xor
out
jne
jne
jmp
xchg
aaa
shl
add
add
push
gs
aas
idivb
add
add
add
data16
out
jecxz
outsl
movsb
add
mov
pushf
mov
jbe
jnp
mov
fcos
decl
jge
fiadds
sub
jb
add
xor
add
stos
ret
add
add
mov
les
push
das
cmp
adc
add
mov
add
addl
fisubrs
pop
jbe
pushf
ja
testl
inc
add
add
decl
test
les
call
and
add
call
nop
xchg
test
cmpsb
add
push
int3
test
daa
add
ja
add
loop
push
sbb
lods
mov
dec
inc
add
jmp
push
jb
jle
ljmp
jg
add
add
jne
inc
add
int3
movsb
add
into
jge
out
jl
lea
lret
inc
add
ret
popf
or
dec
daa
add
test
scas
push
xchg
mov
jbe
push
jmp
jle
inc
mov
and
push
add
cs
add
in
rolb
sub
add
dec
add
adc
push
sbb
cmp
and
addb
add
idivl
mov
in
bound
add
ljmp
mov
push
cli
add
jg
add
out
cmp
movb
push
movsl
add
jmp
and
add
cmp
call
mov
sti
dec
lods
jmp
adc
mov
and
addb
add
add
cmc
ret
pushl
pop
add
incl
jmp
dec
and
push
sbb
sarb
in
xor
int3
popf
cli
jb
sub
jmp
push
aas
sub
cmp
lods
xor
add
pop
data16
das
sahf
loop
data16
add
add
adc
add
into
xchg
int3
push
xor
add
adc
ret
ljmp
push
push
cmc
test
bswap
jnp
test
pop
xchg
cmp
xor
inc
add
sub
lret
addl
and
ljmp
loop
jmp
mov
add
movb
xor
cmpsl
add
push
mov
ljmp
mov
std
roll
das
push
aad
add
flds
add
out
mov
add
and
or
add
pop
cmpsb
add
or
adc
add
pop
xor
mov
dec
dec
adc
pusha
add
inc
add
jb
sbb
decl
push
das
add
ljmp
shrb
out
inc
add
dec
sbb
cmpsl
add
sbb
sbb
insl
add
jmp
inc
add
imul
lods
scas
adc
jmp
lret
xchg
add
aaa
loope
lea
int
add
repnz
sub
mov
sahf
cs
dec
cmp
fists
cmp
adc
mov
imul
and
sti
and
mov
mov
add
add
inc
add
jne
jmp
into
adc
aas
jle
incl
fiadds
les
imul
roll
hlt
push
mov
loop
inc
add
clc
aas
mov
insb
daa
add
icebp
push
ds
mov
push
ret
ret
push
in
xchg
jno
xchg
pop
push
add
xlat
xchg
sub
in
xor
add
mov
daa
add
mov
outsb
jnp
add
bound
xchg
and
in
loope
lret
or
out
add
inc
add
ja
cmpsb
add
outsb
mov
cmp
add
or
xchg
adc
rolb
out
sub
cmpsb
add
xchg
sbb
stos
mov
adc
in
add
pop
mov
loopne
dec
sub
add
sub
push
imul
xchg
das
xor
mov
mov
inc
add
enter
clc
addl
in
repnz
lret
add
fmulp
mov
pop
cmp
lret
push
cld
stos
in
adc
int
dec
aaa
pushf
mov
inc
add
add
rcr
call
out
xor
pop
test
push
popf
movsb
add
add
stos
movb
add
addb
mov
out
add
pop
cmp
push
jb
xchg
lret
jge
add
add
cmp
call
and
xchg
mov
add
add
in
jae
clc
fnsave
add
pusha
add
pop
faddl
int3
fnstsw
fs
stos
lcall
mov
xchg
sbb
add
cmpsb
add
cmp
jmp
push
sbb
push
add
adc
shll
jbe
add
add
lods
push
pushf
loop
lcall
push
dec
push
mov
jmp
sbb
xor
add
push
bsf
pop
into
movb
sub
mov
int3
fiaddl
icebp
lods
xchg
xchg
mov
cwtl
inc
add
add
jmp
push
add
mov
xchg
pusha
add
mov
add
push
push
ret
sbb
popa
js
push
fidivrl
push
mov
add
pop
jae
add
jno
sbb
sti
mov
jmp
sub
pop
inc
add
mov
sub
sti
add
leave
push
fildl
sbb
jp
xor
jmp
popa
jb
push
push
adc
aas
cmpsb
add
jle
aam
mov
adc
mov
add
decl
pushf
inc
add
mov
js
add
call
ja
mul
add
mov
jmp
push
dec
arpl
cmp
add
xchg
mov
add
call
jmp
fistps
lock
add
in
roll
pushl
add
scas
push
adc
xor
add
xchg
jecxz
adc
fisubrs
dec
jne
repz
xchg
fiadds
sub
iret
dec
pushf
xchg
dec
inc
add
into
adc
cs
adc
add
aad
add
call
std
sbb
std
and
insl
cld
push
daa
add
or
movsl
add
dec
mov
ret
add
adc
std
inc
add
sub
add
js
adc
xor
push
ret
adcl
dec
stos
ss
ljmp
mov
jmp
xchg
addr16
lcall
lcall
add
sub
insb
outsl
push
lds
nop
or
add
not
roll
dec
pop
fimull
xchg
clc
mov
rolb
mov
mov
sti
adc
adc
pop
jl
push
xor
mov
lahf
mov
popa
add
roll
add
add
fdivl
mov
ljmp
push
jmp
stos
adc
pop
mov
clc
adc
inc
add
mov
jmp
mov
add
imul
mov
add
rorl
dec
and
push
loope
cld
cmp
push
hlt
addl
and
push
cli
mov
and
cmpsb
add
add
roll
add
push
nop
addl
add
add
jecxz
sbb
js
negl
add
jmp
sub
popa
push
fld1
test
jb
mov
mov
add
add
inc
add
push
inc
add
inc
add
mov
push
add
jmp
sub
mov
push
ret
arpl
gs
lcall
repnz
dec
jge
adc
jo
out
jae
add
sbb
cmpsb
add
adc
add
add
pop
scas
out
mov
lret
dec
push
or
mov
cs
jmp
jno
sbb
add
pushl
push
add
outsb
out
mov
add
cs
loop
enter
jg
and
xor
nop
add
add
stos
arpl
cmpsl
add
add
dec
data16
pop
cmpsb
add
jmp
filds
js
div
push
jns
add
mov
and
aad
test
add
jmp
cmp
pop
push
jmp
add
rclb
and
jecxz
roll
add
mov
xchg
or
mov
or
mov
push
cmc
mov
xchg
jl
fldenv
inc
add
add
insl
mov
add
jmp
pop
push
enter
out
mov
jmp
sub
pop
or
fcomps
mov
test
iret
fisubrs
idivl
inc
add
add
mov
loope
ss
fsubrs
jp
add
jmp
xchg
add
sbb
add
fcoml
xchg
pop
leave
jb
jle
add
lods
xchg
push
and
xchg
lock
pop
shlb
xchg
ljmp
ret
push
mov
push
add
dec
mov
rep
push
ret
add
add
add
daa
add
push
pop
inc
add
sub
cli
mov
jno
lcall
popf
fisttps
push
ret
add
les
movb
add
jmp
push
push
cld
insb
fisubl
add
stos
or
mov
cs
or
icebp
mov
add
cmpsb
add
or
cs
cmp
adc
add
add
inc
add
xchg
cmpsb
add
ret
add
ficoml
or
adc
call
adc
lods
inc
add
mov
hlt
pop
add
pop
out
les
clc
and
cli
inc
add
into
imul
add
nop
movl
jmp
push
insb
or
push
and
jmp
push
aam
enter
cmp
add
add
jmp
add
add
add
add
loop
repz
mov
call
fwait
adc
decl
jo
fistpll
ret
add
add
add
dec
push
jne
jmp
push
mov
add
add
add
cld
ds
add
ljmp
add
movl
repnz
jmp
add
xlat
mov
cltd
or
sub
add
pop
add
push
push
add
dec
and
push
ret
arpl
mov
arpl
add
jmp
repz
movb
call
in
stc
test
mov
ret
loop
hlt
js
ret
add
lcall
jl
add
add
pop
rclb
addb
mov
jmp
add
add
insb
cmc
add
sti
inc
add
popa
add
mov
sbb
call
sbb
add
cmp
add
call
call
add
jb
pop
push
sbb
cwtl
add
add
aaa
mov
xor
jnp
scas
mov
and
into
add
add
add
inc
add
add
not
ja
call
and
sub
fs
cmc
hlt
les
lods
cs
sahf
decb
add
test
hlt
je
clc
clc
add
mov
jp
mov
mov
fldt
add
lret
ffree
add
lcall
in
push
pop
add
out
sbb
xchg
shlb
loop
nop
sbb
fisttps
add
ljmp
add
add
add
add
stos
xchg
adc
sbb
lock
add
sbb
push
sub
xchg
xchg
ja
fists
or
xor
dec
mov
lcall
outsl
cmpsl
add
add
test
push
cld
add
imul
roll
das
fstpl
aas
bound
std
add
sti
fldcw
dec
cmp
loopne
cmc
int
inc
add
data16
add
in
inc
add
add
lea
ds
jae
add
sbb
add
add
jmp
add
sub
add
add
lcall
inc
add
lahf
call
pop
dec
sub
push
movsbl
lret
gs
add
lods
adc
xchg
cld
addb
sahf
and
out
arpl
roll
mov
and
push
sahf
sub
lods
leave
dec
stc
repnz
scas
insl
pop
push
insb
or
cmp
js
sbb
roll
add
jno
into
dec
ja
mov
inc
add
daa
add
repnz
cmp
fisttpll
movsl
add
and
movsb
add
add
xchg
xor
pop
sub
jnp
push
js
repz
js
push
inc
add
pusha
add
add
mov
jo
add
std
push
pop
iret
mov
cld
jmp
lods
ret
add
lea
call
fs
dec
mov
add
add
fsubp
add
add
add
mov
add
sub
cld
push
add
add
ret
add
pop
sub
data16
movb
push
mov
lcall
rcrl
nop
push
push
xor
push
adc
icebp
sbb
mov
aas
add
mov
add
or
das
test
add
ljmp
ret
add
jns
popa
add
add
or
movsl
add
mov
cmp
test
add
pushl
imul
fsubs
idivl
dec
ss
mov
add
pusha
add
dec
jnp,pn
scas
ljmp
mov
or
rolb
je
setl
add
mov
lret
pop
add
call
cmp
mov
das
xchg
dec
int
fildl
jle
add
cli
mov
sub
inc
add
ljmp
fisttps
inc
add
sub
add
imul
xchg
xor
add
repnz
fimull
bnd
dec
imul
int
add
addb
and
add
xchg
pushf
movsb
add
add
out
bound
mov
sbb
push
mov
frstor
int
inc
add
lds
je
add
addl
adc
fldl
pop
mov
mov
add
pushl
cltd
cmp
icebp
pop
pop
xor
stc
daa
add
movb
sti
fcomi
and
sahf
sbb
test
add
testl
add
mov
or
and
in
lock
adc
mov
jecxz
adc
mov
add
cld
rep
ret
add
add
xor
aad
add
movsl
add
aam
add
cltd
cmove
mov
mov
cmpsl
add
mov
xchg
lret
pop
push
sub
out
ret
add
jo
add
inc
add
mov
inc
add
add
inc
add
outsb
sub
lds
jmp
xor
add
push
xor
push
mov
add
stc
jecxz
je
pop
jg
add
add
jnp
inc
add
movl
sbb
add
dec
mov
add
cmc
adc
add
in
dec
stos
lret
inc
add
pushl
inc
add
addb
ret
add
or
cltd
pop
pop
ja
add
jne
add
sarl
xor
xchg
std
push
sbb
inc
add
cmp
mov
rolb
jmp
jmp
add
mov
loop
xchg
insl
fbld
add
jb
sbb
daa
add
add
out
dec
add
or
mov
adc
and
js
jmp
sbb
push
add
in
mov
add
fucomp
icebp
lret
mov
push
movb
lahf
addb
push
call
jae
scas
and
mov
push
dec
jae
out
adc
test
sub
in
aas
adc
movl
mov
push
sarb
addl
add
cld
icebp
mov
add
add
pop
and
adc
ret
add
add
add
add
push
and
scas
pop
movb
add
rcrl
rolb
add
mov
add
push
add
push
xchg
push
and
push
outsb
sub
and
xchg
pop
sti
out
stos
lret
push
add
add
addl
mov
xor
push
add
mov
cmp
sarl
push
jp
nop
cmpsl
add
add
add
dec
popa
add
add
out
hlt
data16
sub
add
lret
mov
add
faddl
es
xor
push
inc
add
lahf
shl
add
out
cld
insb
out
cs
scas
imul
jge
xchg
xor
add
jl
jmp
add
lahf
fadds
jmp
add
adc
ljmp
addl
add
or
add
sbb
mov
add
ficompl
lcall
xchg
lds
xor
sub
cli
rolb
add
and
loopne
rolb
add
add
adc
add
dec
loop
loop
pop
push
jecxz
xchg
jae
add
sub
clc
addl
cs
add
add
movl
jns
jmp
insl
in
inc
add
jno
and
add
call
fstps
cli
ficoms
pop
clc
pop
sbb
icebp
xor
mov
cmp
sbb
cs
add
aas
pusha
add
outsb
mov
add
ja
add
out
and
dec
test
jl
xor
xor
into
fidivrl
inc
add
xchg
pop
xor
fisubrs
adc
cmpsb
add
push
and
xchg
add
pushl
mov
lahf
in
adc
mov
jno
add
xor
addb
mov
f2xm1
cmc
mov
adc
roll
xchg
xchg
mov
insl
add
decl
push
add
movsb
add
or
push
ret
aas
test
data16
dec
call
mov
stos
in
pop
jl
pushf
xchg
inc
add
test
daa
add
ret
add
jnp
mov
add
test
pop
add
lock
mov
adc
js
jbe
pop
sahf
insb
push
xchg
icebp
stos
sbb
add
push
cmp
add
add
test
push
icebp
xchg
movsl
add
hlt
out
dec
add
add
xor
jge
push
sbb
out
in
xor
cmpsl
add
add
repnz
ds
aaa
js
dec
insb
pop
inc
add
movb
mov
adc
negb
add
dec
test
or
push
pushl
jle
mov
add
pop
cmpsl
add
add
add
xchg
mov
jmp
add
or
scas
cli
cli
addl
jbe
addb
cmp
add
cmp
and
jg
cmp
ds
jmp
add
cltd
cmp
ljmp
test
add
pop
mov
add
xchg
cmp
add
lds
les
imul
scas
mov
xchg
stos
pop
xchg
add
enter
fistpll
ror
hlt
xchg
aam
cltd
pop
jbe
es
mov
add
loope
les
jno
xchg
mov
mov
ja
push
pop
roll
cmpsb
add
push
ljmp
pushl
xchg
push
xor
in
add
add
pushl
xor
add
dec
xor
call
sarb
inc
add
fs
push
loopne
mov
outsb
mov
imul
add
loopne
add
inc
add
or
xchg
ret
add
dec
sbb
fnsave
add
adc
in
popa
add
add
inc
add
out
stos
xor
inc
add
ljmp
addl
add
lcall
ds
cmp
push
sti
cmpsl
add
inc
add
inc
add
mov
iret
addr16
inc
add
sub
add
mov
test
sub
mov
cli
push
cmp
add
sub
lods
inc
add
adc
movl
add
add
sub
addr16
loope
mull
out
lock
hlt
js
sahf
push
push
addr16
repnz
movsl
add
sbb
fsubs
add
ds
xchg
mov
and
cmp
lds
pop
add
cmp
test
addb
add
rclb
add
mov
add
pusha
add
addb
add
pop
pop
add
fidivl
scas
push
sbb
lahf
aad
add
mov
call
xor
cmp
add
les
cmpsb
add
or
add
js
lret
add
and
jo
add
and
je
add
nop
mov
push
add
add
add
notl
add
pop
xchg
sbb
push
xor
or
add
add
add
mov
les
daa
add
jns
lods
adc
aas
adc
stos
fxch
repz
add
add
or
push
clc
mov
add
adc
int
add
enter
pusha
add
add
incl
and
nop
aad
add
add
repz
sub
js
mov
add
test
fcos
mov
insl
xor
xor
stc
cld
lcall
ficoml
call
push
aad
add
jne
push
add
ljmp
add
cmp
repz
and
mov
jbe
out
xchg
xchg
rolb
enter
decl
cld
fsub
add
jg
pop
outsl
sbb
add
and
dec
mov
fmulp
cmp
add
add
add
add
aaa
scas
iret
xlat
adc
cmp
scas
cmpsl
add
call
add
lcall
push
test
mov
incl
roll
mov
pop
add
daa
add
outsl
sbb
adc
add
movsb
add
adc
and
cmp
fs
mov
jne
sub
imul
inc
add
push
add
incl
jb
add
add
ret
add
mov
inc
add
add
add
dec
bound
jmp
add
push
pop
inc
add
mov
nop
cwtl
je
clc
or
mov
push
enter
js
scas
ljmp
adc
add
add
mov
add
xor
fisubs
add
sbb
aad
mov
dec
pop
shrl
idivb
bound
add
call
add
adc
sbb
push
xor
ja
inc
add
cmp
add
adc
dec
leave
mov
lea
sbb
aas
lods
sub
inc
add
scas
xchg
adc
imul
fcmovnbe
out
cmpsb
add
and
adc
add
or
ret
add
push
jg
add
jge
add
push
xchg
int
call
or
adc
and
aam
stos
jl
add
mov
add
add
add
add
add
mull
jecxz
jl
movb
add
insb
inc
add
cmp
add
movl
add
fdivl
xor
push
cmpsb
add
repnz
or
sbb
xchg
ret
fs
cmc
pop
add
movsb
add
arpl
jbe
ja
fwait
push
and
movl
inc
add
add
adc
inc
add
sbb
add
clc
mov
or
push
gs
jg
sub
in
add
mov
add
add
and
fmuls
or
add
add
add
xor
emms
xor
mov
rol
add
add
cmp
xchg
fmuls
mov
push
repnz
adc
add
cmc
aad
add
add
ja
decl
adc
jle
pop
je
inc
add
push
add
sarb
push
or
push
add
add
add
lahf
push
add
fisubrs
daa
add
sbb
mov
add
in
adc
addl
xlat
loop
or
add
mov
xor
rolb
adc
xchg
adc
pop
sub
data16
addl
lcall
mov
add
push
jne
jle
add
inc
add
add
mov
inc
add
jge
add
int
sar
jp
lea
dec
inc
add
incl
test
jne
add
in
rorb
outsb
push
pop
mov
jg
add
pop
xchg
adc
add
mov
lret
ds
xchg
xor
add
ffreep
add
cmp
sbb
ret
add
or
cmp
add
stos
xchg
dec
push
aad
dec
sbb
jae
xchg
jge
jno
add
jb
push
int3
fwait
and
outsb
jno
add
add
call
adc
add
imul
test
mov
adc
add
and
xchg
aaa
icebp
pop
inc
add
addb
add
sub
add
xor
lods
mov
sbb
icebp
scas
xchg
adc
cmp
fwait
aad
jg
jne
jmp
add
stos
stos
jp
add
sub
std
call
dec
nop
jno
add
cmp
addb
inc
add
in
cltd
mov
aas
mov
xchg
dec
jne
add
or
add
fdivr
je
mov
cmp
mov
cmp
jmp
adc
sbb
add
mov
mov
push
stos
iret
scas
push
sub
push
add
cwtl
roll
fidivrl
push
test
stos
into
lahf
fcmovnb
add
sub
cwtl
mov
aaa
adc
adc
add
add
add
mov
add
les
sub
in
or
inc
add
call
and
std
push
dec
push
pop
mov
pop
inc
add
add
push
les
push
icebp
sbb
roll
add
pop
lea
xlat
pop
or
and
add
or
mov
add
jmp
push
loopne
cmp
lret
roll
add
in
scas
hlt
test
adc
add
jbe
push
stos
mov
pop
adc
jns
push
sbb
ror
ret
add
or
ret
push
sbb
add
test
xor
stc
push
add
decl
and
add
cmp
addb
neg
loopne
add
xchg
movl
pusha
add
add
incl
lcall
cwtl
outsl
test
jbe
pop
jle
add
and
scas
cmp
shrl
and
add
sbb
jo
loop
cmp
xchg
roll
inc
add
pop
test
push
inc
add
jns
rcll
add
jno
dec
sbb
add
mov
add
add
xor
add
stos
pop
xor
add
pop
add
dec
and
mov
mov
add
xchg
in
shlb
test
add
jbe
adc
mov
dec
aaa
pop
dec
push
cmp
add
pop
add
jae
xor
sbb
add
adc
fistpll
outsl
insb
dec
mov
pop
cmp
add
and
lcall
add
lret
add
xchg
ret
add
add
add
add
add
inc
add
add
pushl
sbb
jo
movb
ds
add
add
call
and
cli
into
sub
cmp
sub
incl
call
movb
sub
fmuls
add
mov
pushl
ret
add
repz
in
push
or
cmp
jmp
add
push
jge
adc
in
daa
add
mov
ja
lahf
les
sahf
mov
add
add
mov
pop
mov
and
mov
add
lods
rorl
jae
mov
sbb
cmp
and
jmp
add
mov
pusha
add
in
xor
mov
add
add
push
add
jb
fisttpl
mov
add
call
add
adc
insl
pop
out
jge
add
decl
adc
add
jne
cmp
fdiv
shll
and
ret
add
xchg
jle
jmp
roll
outsb
dec
test
dec
adc
push
lds
or
add
add
lea
add
aaa
cmc
out
sub
pop
jge
xor
shll
aam
mov
cmp
push
in
xchg
int
add
or
loope
shlb
lea
pushl
mov
and
dec
lds
xchg
mov
stc
lret
push
js
add
insl
addl
xchg
shlb
add
pop
add
inc
add
nop
xor
add
or
int3
xchg
add
push
pop
xor
pop
ja
addr16
mov
jmp
fdivr
icebp
push
test
push
adc
leave
inc
add
cwtl
popa
add
sbb
dec
out
mov
pop
push
jl
arpl
pop
push
xor
add
mov
pop
add
bound
push
pop
jno
xor
les
aam
add
and
mov
sub
adc
xlat
sbb
cmc
fidivs
lcall
lea
mov
movb
add
xlat
cltd
add
incl
push
cwtl
out
lahf
adc
add
add
pop
add
add
insl
or
stos
mov
adc
dec
ret
loope
mov
add
lcall
add
jnp
cs
stc
add
fxch
add
jge
data16
inc
add
mov
add
xor
inc
add
in
aas
outsb
popf
mov
add
jbe
stc
repz
sub
add
aas
leave
mov
add
lcall
add
lds
mov
add
jo
testb
and
jns
dec
xchg
mov
add
add
call
mov
repnz
test
jns
mov
roll
add
add
outsb
enter
add
add
call
nop
push
add
dec
jno
pop
jmp
add
or
mov
push
mov
shl
add
and
mov
mov
sarl
scas
addl
and
jns
loope
in
fwait
xlat
lds
inc
add
inc
add
add
stos
call
fcmovnu
mov
add
pop
or
aam
decl
add
mov
add
add
into
sbb
jl
jne
add
je
das
popa
add
and
add
sub
add
pop
add
sub
mov
add
mov
add
add
mov
inc
add
iret
dec
sbb
pop
sbb
add
mov
add
out
sbb
push
ds
idivl
xchg
inc
add
fldcw
jmp
push
jno
dec
movsb
add
add
xor
outsb
pop
repz
jp
ret
jmp
add
inc
add
cmc
lock
ja
lea
add
pusha
add
pop
enter
xlat
cltd
fnstsw
aaa
out
mov
add
lret
xor
mov
add
les
mov
mov
xor
add
add
ss
loopne
jae
add
jae
js
cmp
pushf
je
cmp
out
fs
jno
dec
pop
ds
stos
xor
int3
adc
stos
lods
jl
push
jb
cltd
pop
xor
leave
cltd
add
lcall
jl
add
add
call
movl
push
xchg
cmp
xchg
sbb
dec
cmp
aad
add
lahf
decb
add
loope
push
popf
js
out
mov
inc
add
in
adc
test
test
roll
daa
add
mov
sub
xchg
lret
fsubp
add
add
jmp
mov
jg
pop
pop
add
movl
outsb
lock
add
pop
pop
call
inc
add
scas
jmp
decl
scas
add
jmp
add
add
adc
mov
imul
mov
sti
pop
pop
sbb
roll
enter
add
decl
adc
bound
xchg
push
add
les
fadds
add
mov
shrb
add
xor
jnp
scas
and
mov
add
out
add
and
push
sbb
jnp
add
enter
add
push
out
cmp
add
add
in
cmc
or
addb
xchg
adc
fcompl
mov
adc
into
popl
into
mov
push
mov
xchg
xchg
adc
cmp
add
stos
add
dec
in
jge
jmp
ret
add
mov
pop
sbb
push
or
xor
pop
dec
imul
jo
or
cmc
fisubrs
push
imul
inc
add
pop
cmp
add
add
add
add
inc
add
add
in
lret
mov
add
cwtl
adc
push
mov
add
test
mov
add
add
call
dec
sarl
cld
add
jmp
xor
mulb
pop
and
mov
fstl
mov
call
add
add
fucomi
push
pop
mov
add
jl
add
movb
mov
stos
xor
pusha
add
mov
mov
adc
pop
add
aaa
push
in
imul
insl
out
pop
add
enter
add
add
add
mov
fstpt
add
adc
xor
mov
xchg
xor
cmpsb
add
xchg
inc
add
pop
imul
arpl
push
out
jecxz
imul
sbb
lods
and
insb
dec
sbb
mov
mov
aam
or
insb
nop
sbb
movl
lea
mov
inc
add
data16
sub
push
sub
cld
testl
or
jae
cmp
push
std
addl
add
add
sub
pop
jmp
add
mov
xor
add
stos
fidivrl
jle
add
sbb
scas
pop
test
pop
cmpsl
add
add
xor
cmp
xor
add
cmp
add
cmp
addl
cli
lret
int3
xchg
sub
add
jo
sbb
lods
cmc
addb
xlat
push
add
lods
scas
stc
xor
in
mov
mov
decl
add
mov
or
ljmp
add
dec
scas
inc
add
inc
add
add
sub
fcoms
add
add
cmp
clc
stos
xchg
movsb
add
daa
add
add
in
cli
mov
add
fsubrs
enter
mov
add
add
cmpsl
add
push
mov
lock
adc
in
lret
add
mov
push
roll
add
imul
mov
dec
jp
add
sbb
cmp
sti
movl
xchg
cld
cmp
add
ljmp
add
enter
xchg
xor
add
lods
lock
push
cltd
add
cmp
outsl
mov
ja
mov
stc
test
and
jno
loope
shl
add
add
cmp
mov
scas
push
jmp
add
and
jo
add
lods
and
jmp
mov
fsubrl
pop
jge
add
fisubrs
add
and
fisubl
push
addb
jecxz
xlat
mov
add
xchg
mov
mov
add
adc
mov
jg
sbb
sub
add
enter
popa
add
mov
add
rolb
jb
cs
add
or
add
add
inc
add
adc
push
mov
add
incl
add
add
and
dec
mov
add
sub
xchg
data16
and
inc
add
cmp
cmp
out
jb
hlt
xor
ja
add
or
inc
add
rdmsr
xor
nop
mov
mov
sub
add
xchg
popf
push
push
push
addb
sub
mov
rorb
adc
cli
int3
int3
pop
add
add
addl
dec
lahf
jo
insl
push
into
imul
lock
jg
shll
hlt
cmp
pop
call
test
fldcw
jno
cmp
adc
nop
mov
scas
xor
lods
xchg
repz
movsl
add
pop
addl
decl
out
pop
sbb
addl
add
push
jns
jmp
mov
sub
add
dec
mov
arpl
das
xchg
loop
in
sub
add
decl
dec
das
fwait
das
movsb
add
add
add
and
in
out
mov
inc
add
add
add
cmp
add
sub
lds
test
adc
add
add
add
add
out
add
sbb
inc
add
adc
imul
fsubrs
mov
insb
push
pop
add
push
cmp
add
pushf
mov
out
jb
lret
sub
push
outsl
cmpsb
add
lret
xchg
and
mov
std
insb
adc
pop
mov
add
pop
or
hlt
jo
jmp
dec
add
divb
add
push
lds
and
push
push
js
add
nop
fwait
adc
mov
cmp
add
imul
sti
sub
adc
adc
add
decl
out
insb
push
xor
decl
push
xor
mov
add
add
add
insl
xor
add
add
stc
add
stos
jmp
mov
ret
add
add
cwtl
push
add
shll
sbb
sbb
pop
mov
addb
clc
xchg
mov
popf
adc
lret
clc
mov
xchg
cli
adc
je
add
jge
mov
stos
dec
rorl
or
fisubs
cld
cmpsl
add
add
sub
cmpsb
add
cmp
test
adc
mov
cmp
add
jge
jecxz
imul
lcall
inc
add
arpl
cmp
int
cmp
mov
add
movl
adc
clc
push
mov
mov
daa
add
out
cmp
add
insl
ja
ret
or
dec
addb
iret
jge
sbb
test
add
add
dec
and
rolb
jmp
add
loope
mov
add
sbb
inc
add
add
incl
add
push
icebp
imul
movsb
add
add
add
jmp
pop
add
xchg
and
sbb
sub
push
daa
add
cltd
sahf
imul
aam
add
add
or
add
repnz
or
add
mov
fdivr
xlat
or
enter
add
sbb
add
jge
add
push
add
fisubs
sbb
push
loope
aas
lret
ret
add
incl
dec
and
push
cmpsb
add
mov
and
push
pushl
and
push
pusha
add
insl
and
jbe
add
xchg
inc
add
add
sub
rolb
adc
aas
and
sbb
xor
scas
mulb
xor
fdivs
add
add
xchg
adc
add
arpl
lcall
or
add
aad
add
fistpll
add
mov
xchg
cwtl
mov
and
or
popa
add
push
hlt
inc
add
cld
cld
je
test
movb
daa
add
add
add
jae
arpl
pop
mov
fldcw
dec
dec
xor
add
out
loopne
sbb
jle
add
add
pop
add
xchg
inc
add
add
add
js
mov
xor
cltd
addb
in
pop
outsb
les
imul
xor
jns
xchg
and
xchg
js
sbb
pop
mov
add
mov
jne
lock
add
push
stc
arpl
and
mov
cld
xchg
int
add
xchg
data16
adc
add
add
out
mov
mov
xchg
sub
add
out
int3
fstpl
push
jbe
aad
add
fsts
dec
out
inc
add
scas
and
add
cmc
test
incl
lcall
sub
fsubr
jno
pusha
add
mov
les
loope
in
hlt
loope
cmpsl
add
xor
add
add
daa
add
dec
cltd
mov
test
sub
mov
add
sub
add
scas
add
xor
incb
add
bound
adc
movsl
add
roll
or
cmp
stos
xchg
xor
addb
mov
add
xlat
ret
add
and
add
add
fisubl
add
int3
dec
push
add
mov
in
test
jmp
add
add
outsl
cmp
xchg
addb
adc
scas
enter
mov
in
pop
xchg
add
call
jno
add
xchg
ds
add
movsl
add
ret
shl
fstpl
add
sbb
rcr
ljmp
sarl
fnstenv
mov
add
add
add
add
adc
inc
add
outsl
and
sub
add
jmp
jle
mov
ret
add
jecxz
rcrb
idivb
repnz
mulb
add
enter
arpl
mov
add
add
xor
jp
cltd
roll
lret
test
inc
add
add
jb,pt
add
movsb
add
add
dec
mov
inc
add
test
fimuls
sub
add
and
and
and
cmp
test
sbb
push
leave
rolb
insl
cmp
add
dec
test
or
in
int
imul
mov
mov
movl
xchg
out
shl
call
lods
addb
push
push
fs
outsb
popf
shll
push
jns
ljmp
les
stos
add
ljmp
xchg
jnp
jmp
jmp
insb
nop
lcall
test
out
sar
pop
leave
icebp
loop
mov
pushl
mov
mov
lods
xor
add
and
pop
jle
aad
sbb
cltd
sti
cmp
adc
add
incl
add
sti
imulb
add
call
add
push
inc
add
add
out
sbb
hlt
sbb
imul
push
frstor
add
test
add
xchg
or
roll
mov
jmp
and
stc
shll
push
ficoml
sub
bound
addb
xlat
aam
inc
add
push
push
data16
flds
sbb
leave
cli
mov
mov
add
push
in
enter
add
xchg
sbb
sti
xor
sbb
je
sub
push
bswap
in
ret
mov
stos
out
repz
cli
loope
dec
leave
cmc
jno
mov
roll
push
fldt
in
mov
stos
in
test
icebp
iret
mov
cwtl
ret
add
cwtl
xchg
push
pushf
and
cs
test
dec
dec
lods
imul
call
xchg
mov
add
jmp
push
gs
lods
adc
call
addl
or
jge
mov
mov
enter
add
adc
mov
les
push
inc
add
int
jne
push
inc
add
repz
imulb
out
movl
ja
notl
mov
jp
out
sarb
pop
in
movsb
add
pop
lea
add
add
sub
push
cmp
pop
daa
add
sbb
not
addb
test
add
jmp
add
dec
xchg
arpl
cwtl
mov
rorb
dec
insl
push
inc
add
add
sub
aas
and
rolb
add
xlat
jne
and
add
add
les
int
enter
add
in
mov
push
add
or
and
pop
sahf
add
lcall
sub
addl
test
mov
lea
inc
add
outsb
cwtl
xor
mov
mov
mov
add
test
sub
sub
call
add
xor
inc
add
add
add
cmc
jle
pop
in
lcall
mov
pop
add
pop
add
aaa
pop
mov
add
mov
incl
in
xchg
dec
rclb
stos
jo
pop
test
dec
daa
add
mov
add
jle
sbb
pusha
add
xchg
cmpsb
add
inc
add
mov
pusha
add
mov
sti
arpl
push
mov
in
imul
repnz
hlt
sub
cltd
jecxz
mov
jle
add
xchg
pop
js
std
bound
push
out
xor
jb
xchg
imul
incl
push
xchg
and
push
xchg
push
cwtl
push
fldcw
jecxz
enter
sbb
inc
add
mov
lar
dec
xlat
lods
fimull
add
add
lahf
dec
imul
add
lret
xor
add
incl
sub
adc
out
enter
ret
clc
loopne
cltd
xchg
dec
mov
lret
ret
pop
inc
add
add
imul
add
add
out
xchg
adc
jo
fstps
addb
add
push
dec
loop
daa
add
add
cmp
inc
add
add
sub
test
out
popf
addl
mov
add
inc
add
adc
add
ud2
outsb
jl
add
mov
js
lds
icebp
or
movb
add
jge
add
add
add
add
into
rolb
mov
and
lret
inc
add
mov
add
fcoms
js
add
add
dec
and
shl
add
dec
addl
xor
xchg
jo
enter
add
add
dec
fmul
push
xor
fdivs
cmp
test
repnz
loop
mov
mov
adc
dec
push
dec
clc
cmp
pusha
add
jnp
mov
jle
pop
popa
add
add
and
xchg
pop
popf
sub
jp
sub
decl
add
shrb
mov
popa
add
pop
push
movl
jo
add
add
call
add
add
add
xchg
dec
loope
mov
add
imulb
cli
push
ss
leave
sbb
aad
add
pop
mov
xor
std
sub
xor
and
jl
cmpsl
add
cmp
ss
mov
add
stc
pop
mov
and
xlat
cmp
add
push
jge
push
imul
test
aas
push
inc
add
mov
jge
hlt
inc
add
push
cmpsl
add
gs
aad
push
dec
fwait
cli
or
aam
add
and
lods
xchg
stc
sbb
add
scas
pop
sbb
jns
cli
ret
add
add
mov
cmp
and
mov
incl
mov
lods
push
fmuls
or
add
mov
add
add
add
repz
jns
add
push
or
jmp
std
or
xchg
mov
decl
and
add
mov
push
mov
lock
cmpsl
add
lret
add
sahf
xchg
ja
sbb
xchg
jmp
mov
xchg
inc
add
xor
add
fs
lea
mov
std
loope
fldl
mov
inc
add
pushl
or
movb
fldcw
movl
add
xchg
jle
add
sub
add
lods
cmpsl
add
xor
push
pop
popa
add
jns
xor
nop
dec
add
push
add
ljmp
and
les
or
add
mov
stos
mov
sar
or
mov
aam
add
inc
add
cmp
insl
mov
cmp
and
arpl
fdivl
add
inc
add
add
les
cmp
pop
jmp
popa
add
pop
stos
stc
jmp
add
std
test
dec
sub
jmp
mov
clc
lea
adc
scas
inc
add
pop
sub
mov
mov
or
dec
xor
xor
add
add
push
imul
add
add
dec
jnp
add
add
inc
add
scas
add
hlt
popf
aas
xchg
pop
add
add
push
shll
add
add
mov
mov
add
adc
iret
pop
sub
push
fisubrl
mov
ret
add
adc
pop
cld
sub
or
add
out
jno
and
inc
add
hlt
dec
loope
ja
iret
xchg
adc
lock
bound
mov
add
add
and
lret
mov
cwtl
dec
mov
out
or
push
mov
add
mov
leave
outsb
fnstcw
iret
adc
mov
idivb
add
insb
mov
jmp
aas
sarb
add
movsb
add
adc
fadds
inc
add
cli
mov
je
decl
cmp
enter
add
mov
fwait
xor
int3
xchg
rcrl
ljmp
add
in
test
add
adc
mov
pop
popf
divb
dec
sub
cmp
shlb
mov
test
lahf
cmp
popl
call
push
mov
add
lret
out
les
xor
bound
lock
add
mov
out
cltd
incl
call
roll
adc
add
imul
mov
push
aaa
pop
cld
sti
stos
pop
pushf
mov
dec
outsb
push
add
mov
add
add
lret
repnz
imul
mov
sub
mov
add
ja
push
out
mov
clc
es
add
jecxz
lock
add
dec
leave
popf
or
incl
jmp
mov
ljmp
aam
add
add
test
add
inc
add
mov
je
xor
out
fsubl
or
xor
cmp
add
loope
test
movsl
add
decl
aad
xchg
sub
out
insb
push
push
dec
lcall
add
incl
mov
aad
add
jb
jae
incl
add
add
xchg
and
sub
mov
and
mov
jle
add
xchg
jp
add
mov
aad
mov
add
push
sti
xor
add
icebp
sti
jecxz
inc
add
or
add
pushl
push
hlt
outsl
push
sub
jl
add
inc
add
out
popa
add
lret
call
testl
add
add
xor
add
and
pop
add
call
cmpsl
add
movl
into
sbb
out
mov
xor
js
mov
mov
push
les
fwait
movsl
add
add
lret
je
inc
add
add
fcom
loope
lahf
idivl
repnz
call
jbe
pop
add
add
add
push
xor
repz
mov
dec
jg
or
xchg
push
outsl
mov
and
cmpsl
add
add
push
xchg
fildl
stc
and
or
std
inc
add
ja
add
loop
fldenv
bound
add
lahf
and
xchg
pusha
add
cmp
push
stos
aaa
xchg
into
add
out
sub
jns
pusha
add
stos
mov
add
neg
test
adc
xor
inc
add
add
add
ljmp
movl
sbb
or
pmulhuw
or
dec
jbe
mov
popf
cmp
je
add
add
add
cmp
add
add
lods
movsl
add
jmp
mov
xor
and
add
push
inc
add
add
js
inc
add
sbb
call
sbb
lahf
lret
int
mov
sub
xchg
push
jno
add
call
mov
add
xchg
xchg
das
add
ret
add
lds
fmull
not
shl
push
push
addl
out
add
incl
adc
push
fldcw
clc
inc
add
add
add
sub
add
jg
add
adc
add
leave
and
pushf
xor
test
pop
fadds
comiss
add
sub
gs
mov
out
pop
adc
daa
add
add
in
add
add
mov
mov
add
add
or
addl
xlat
cld
cmp
pop
add
aas
lods
jo
pop
add
loopne
test
out
movsb
add
pop
imul
xor
jle
add
add
test
fists
pop
clc
inc
add
movsl
add
xor
inc
add
in
xchg
into
sbb
cwtl
adc
pushl
les
pop
mov
add
jnp
jae
or
fwait
scas
repz
or
add
add
call
cs
int3
pop
push
scas
icebp
mov
movsl
add
add
lds
ud0
fbstp
mov
mov
add
add
mov
sti
lods
mov
loopne,pt
test
cli
xchg
mov
inc
add
mov
repnz
add
pminsw
lock
test
add
mov
add
popf
dec
adc
push
sbb
addb
ljmp
inc
add
movsl
add
inc
add
notl
push
clc
repnz
daa
add
jg
movl
pop
sbb
add
and
add
pusha
add
dec
mov
push
xchg
sub
sub
add
lds
push
sub
lea
pop
out
neg
cmp
lret
test
jbe
add
pop
xlat
movsl
add
ja
sub
add
and
lods
ss
in
sbb
dec
pop
insl
dec
bound
popa
add
call
push
add
add
add
add
push
sub
jmp
adc
push
jo
jge
inc
add
jnp
add
add
loope
out
aad
add
mov
add
add
rcrb
add
pushl
inc
add
pop
les
cmp
sub
and
rorb
out
out
fwait
in
sti
cmp
add
inc
add
sbb
add
cltd
and
push
mov
jge
xlat
or
out
ja
add
add
decl
inc
add
mov
inc
add
add
mov
jne
dec
sbb
add
inc
add
mov
popa
add
cs
add
mov
sar
cmp
and
out
shr
mov
add
test
inc
add
fildll
xor
outsl
int
outsb
je
xchg
cwtl
jo
add
movsl
add
ret
xchg
stos
mov
cmp
jae
add
and
pop
adc
cmp
pop
cmpsl
add
add
jnp,pt
add
out
adc
lock
roll
mov
add
mov
adc
sbb
ja
add
add
ljmp
add
test
mov
stc
scas
sbb
add
nop
jb
movb
imul
rolb
add
add
jp
les
pop
inc
add
movswl
adc
out
aaa
lret
push
add
addl
push
popa
add
bound
cs
ja
push
xchg
mov
arpl
inc
add
std
jg
add
call
stos
mov
mov
cmpsl
add
add
cmp
push
pop
add
jmp
add
dec
frstor
add
add
mov
adc
lods
mov
dec
stos
mov
pop
push
aam
add
leave
xchg
repz
dec
xchg
inc
add
add
pop
pusha
add
fcoms
push
dec
hlt
jg
add
add
call
test
fstps
add
lds
das
fldt
inc
add
addb
push
mov
clc
push
test
frstor
int
cmpsl
add
rolb
or
movb
add
ss
sbb
into
data16
sbb
shld
add
pushl
push
and
pushf
hlt
mov
push
sub
pop
pop
add
int3
sbb
addb
cltd
rclb
jnp
push
push
test
cmp
jmp
lahf
inc
add
add
mov
xor
add
jne
add
sbb
inc
add
jecxz
or
ret
adc
sahf
add
mov
xor
add
dec
mov
add
in
fisubrs
stos
das
xor
mov
sub
loopne
pop
cmpsb
add
dec
dec
jnp
add
add
dec
insb
adc
add
jo
add
pushl
inc
add
add
xchg
mov
push
mov
flds
inc
add
add
add
jl
jno
add
mov
push
fs
sbb
int
xchg
in
scas
push
sub
je
and
sub
dec
lock
sarl
mov
xor
add
fmull
cmp
movsb
add
add
push
ss
pushl
add
arpl
mov
mov
lods
es
movl
jle
add
not
loopne
divb
fisttps
sti
outsl
add
decl
add
lds
movb
cmc
push
or
out
scas
lret
add
add
bound
sbb
mov
fdivl
movsb
add
add
add
add
sub
lds
xchg
mov
add
outsl
icebp
clc
xor
inc
add
sbb
add
or
out
loope
mov
sbb
les
imul
dec
int
ds
jno
add
add
test
or
xchg
sahf
je
fstps
add
out
stc
add
dec
push
scas
in
aad
movb
dec
xchg
je
pushl
mov
mov
add
add
pop
cltd
mov
add
mov
push
mov
cwtl
pusha
add
lret
or
inc
add
push
jnp
add
test
xchg
rolb
jecxz
mov
out
or
add
jmp
inc
add
add
or
dec
jae
daa
add
or
add
xchg
std
pushf
rolb
pop
arpl
mov
add
pop
pop
pop
sbb
push
dec
iret
adc
ss
into
jbe
sbb
loopne
add
dec
scas
dec
push
jb
stos
cmpsl
add
or
push
inc
add
add
add
addl
inc
add
push
aam
lret
cmp
lahf
mov
push
aad
dec
cli
push
in
mov
sbb
pop
repnz
test
mov
iret
das
and
inc
add
mov
pop
add
incl
addl
loopne
push
clc
pop
lret
sbb
jne
add
mov
cmpsl
add
addb
add
mov
add
popl
js
stos
sub
out
lock
push
sbb
pop
add
adc
jno
add
add
addb
insl
addb
pop
xchg
lock
ds
push
xor
sarl
lcall
inc
add
movsb
add
push
push
jl
mov
pop
mov
mov
xor
add
mov
fdivl
jnp
roll
ret
lret
add
popa
add
add
jg
jle
movsl
add
incl
add
adc
lret
addb
sub
xor
add
sti
inc
add
sahf
dec
mov
mov
dec
insb
pop
add
data16
aaa
mov
add
add
mov
decl
cmp
jmp
push
ss
mov
sbb
jbe
add
mov
sti
cmp
dec
test
lcall
or
mov
idiv
jnp
xlat
add
ljmp
ljmp
int
add
jge
add
daa
add
outsl
jne
add
neg
sahf
xor
arpl
xor
add
inc
add
stos
iret
lcall
xor
add
cld
adc
rep
cmp
jle
add
mov
add
cmp
add
in
jbe
jge
jbe
inc
add
fldt
xchg
pop
ret
add
movsl
add
cltd
sti
fwait
dec
sbb
negb
movb
in
movsb
add
add
lcall
sbb
add
add
add
dec
or
jmp
fmull
pop
insb
mov
dec
mov
add
mov
loop
pop
push
inc
add
fldcw
add
adc
adc
dec
repz
add
shlb
int3
sub
out
lds
cli
jmp
jmp
lret
rolb
jl
push
mov
mov
psubusb
push
lds
rcl
test
jnp
xor
cmp
add
in
scas
push
ja
add
or
add
mov
cmp
ret
or
jmp
add
call
add
lahf
je
sub
push
jp
cmpsb
add
nop
addl
loopne
les
xchg
ds
add
mov
mov
pop
add
mov
inc
add
inc
add
add
stos
sbb
or
push
xchg
aas
jns
mov
jo
add
mov
cmp
mov
add
fdivrs
add
push
mov
call
neg
cmp
roll
ret
add
add
add
add
mov
roll
add
movb
sub
outsl
je
popf
popa
add
inc
add
roll
add
add
insl
pushf
cmpsl
add
add
or
xchg
lcall
scas
lret
sub
dec
cmp
popf
jl
mov
pop
push
data16
add
inc
add
inc
add
dec
ja
js
add
int3
sub
jbe
add
sub
inc
add
xor
fistps
and
or
fcmovnu
mov
fsubr
fdivl
insb
and
push
add
mov
lds
xchg
add
dec
mov
add
push
mov
mov
icebp
insb
sar
lahf
aas
mov
jle
jecxz
bound
cmp
cmp
movsb
add
add
xchg
sbb
sbb
xor
icebp
jg
add
nop
sub
add
jno
loopne
into
js
mov
aaa
pop
mov
ja
push
sarb
rorb
jmp
jg
mov
pushf
fldl
pop
scas
pop
cld
lret
inc
add
add
pusha
add
add
pop
addb
dec
push
roll
add
push
call
pusha
add
and
dec
mov
adc
adc
add
mov
lcall
add
dec
scas
add
decl
cmp
add
add
jbe
add
lea
add
movl
lock
add
inc
add
mov
dec
insl
push
add
adc
cmp
add
pop
in
mov
in
jge
inc
add
aas
fisttpl
add
loope
int3
psubb
dec
js
scas
inc
add
add
jbe
add
mov
adc
adc
cmpsl
add
jo
add
popa
add
cmp
test
inc
add
les
arpl
add
mov
rolb
inc
add
add
pop
adc
jecxz
mov
jo
dec
testb
xlat
sub
dec
scas
jb
test
addb
add
insl
mov
inc
add
jmp
add
add
das
stos
xchg
aaa
ljmp
cmp
test
imul
test
fisubs
int3
sbb
nop
jle
mov
addb
and
jle
cmp
xchg
cmp
cltd
and
add
jns
jle
addl
add
dec
add
call
je
add
movsb
add
sub
xor
call
and
dec
jae
stc
or
dec
add
stos
add
lcall
add
add
jle
bound
sbb
clc
xor
sbb
add
add
add
pop
jmp
push
hlt
sub
add
or
mov
cmp
sub
sub
add
add
js
jne
aad
adc
push
fidivl
aaa
lcall
mov
or
stos
cmpsl
add
add
