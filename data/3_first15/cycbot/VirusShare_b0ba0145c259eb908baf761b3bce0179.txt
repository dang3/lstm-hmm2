into
in
in
loope
in
in
in
in
in
in
in
call
loop
test
loop
jmp
loop
aas
in
in
loop
in
jecxz
in
call
loop
mul
loop
sahf
in
in
out
in
call
loop
pop
out
in
in
in
in
in
call
loop
sub
loop
loopne
loop
pop
out
in
in
in
call
loop
cwtl
out
in
out
in
in
in
in
in
loop
in
call
loop
xchg
in
in
in
in
jecxz
in
loop
in
loop
in
loop
in
call
loop
sbb
in
in
loop
in
call
loop
sbb
call
loop
cmc
call
loop
inc
in
in
out
in
jecxz
in
loop
in
jmp
loop
sub
loop
sti
jecxz
in
loope
in
in
in
in
in
out
in
out
in
jmp
loop
jl
loop
sbb
loop
je
loop
mul
loop
ds
in
in
in
loop
in
out
in
in
in
out
in
out
in
in
in
jecxz
in
jecxz
in
in
in
jecxz
in
jmp
loop
lock
in
call
loop
adc
loop
loopne
loop
push
jmp
loop
lods
in
in
call
loop
sub
loop
cmpsl
in
in
loope
in
loop
in
in
in
loop
in
jecxz
in
out
in
jecxz
in
jecxz
in
out
in
call
loop
shl
loop
addr16
in
in
in
call
loop
inc
out
in
jecxz
in
in
in
in
in
call
loop
mov
loop
stos
in
in
in
in
in
in
out
in
in
in
loop
in
jecxz
in
call
loop
sahf
call
loop
test
loop
mov
in
in
out
in
loop
in
loope
in
jmp
loop
xor
loop
cmp
loop
shl
loop
jecxz,pt
in
jecxz
in
jecxz
in
out
in
jecxz
in
in
in
out
in
in
in
jecxz
in
in
in
jecxz
in
jecxz
in
in
in
jecxz
in
loop
in
out
in
in
in
loope
in
in
in
call
loop
nop
call
loop
cltd
in
in
out
in
out
in
jecxz
in
jecxz
in
call
loop
dec
in
in
call
loop
push
out
in
in
in
loope
in
call
loop
imul
in
in
in
in
in
call
loop
fs
in
jecxz
in
in
in
loop
in
call
loop
sbb
loop
inc
in
in
loop
in
out
in
call
loop
xor
loop
pop
call
loop
test
loop
and
in
out
in
out
in
call
loop
jmp
loop
loop
into
in
in
loope
in
out
in
jecxz
in
out
in
in
in
in
in
jecxz
in
jecxz
in
loope
in
call
loop
dec
out
in
jecxz
in
in
in
out
in
jmp
loop
mov
in
in
call
loop
pop
loop
in
loop
in
in
in
out
in
jecxz
in
in
in
jecxz
in
call
loop
fsub
loop
jae
loop
lret
in
in
in
out
in
loop
in
call
loop
iret
loop
in
jecxz
in
loop
in
in
in
out
in
loop
in
jmp
loop
jns
loop
arpl
loop
cmpsl
in
in
out
in
call
loop
call
loop
in
in
in
in
in
in
in
jmp
loop
mov
loop
insl
loope
in
call
loop
arpl
loop
gs
in
in
in
in
in
jecxz
in
out
in
call
loop
mul
loop
dec
call
loop
cmp
call
loop
mov
jecxz
in
in
in
loop
in
call
loop
out
loop
xchg
in
in
loop
in
out
in
jecxz
in
out
in
out
in
in
in
out
in
call
loop
push
in
in
jmp
loop
dec
in
in
in
in
out
in
jecxz
in
in
in
out
in
jecxz
in
in
in
loop
in
in
in
jecxz
in
out
in
in
in
loop
in
in
in
out
in
out
in
loop
in
call
loop
or
jecxz
in
jecxz
in
out
in
jecxz
in
call
loop
popf
loope
in
loope
in
out
in
in
in
out
in
loope
in
jecxz
in
loop
in
call
loop
xor
loop
stos
call
loop
and
loop
add
loop
stos
in
in
out
in
jecxz
in
out
in
jmp
loop
je
loop
cmp
loop
cli
out
in
out
in
in
in
call
loop
sti
out
in
in
in
call
loop
daa
loop
in
out
in
call
loop
out
in
out
in
in
in
call
loop
int3
call
loop
mov
in
in
out
in
out
in
loop
in
loop
in
call
loop
fucom
loop
pusha
in
in
in
in
jmp
loop
and
loop
add
loop
xchg
loope
in
out
in
loop
in
loop
in
out
in
loope
in
jmp
loop
xor
loop
and
loop
in
in
in
jecxz
in
in
in
jecxz
in
out
in
jecxz
in
call
loop
jg
loop
sub
out
in
loop
in
loop
in
in
in
in
in
call
loop
inc
out
in
in
in
in
in
in
in
call
loop
cmpsl
loop
in
jecxz
in
out
in
loop
in
jmp
loop
mov
loop
push
jecxz
in
jmp
loop
mov
loop
in
in
in
in
in
in
in
jecxz
in
in
in
out
in
call
loop
jae
loop
xchg
jecxz
in
loop
in
loope
in
jecxz
in
loop
in
loope
in
call
loop
pusha
call
loop
inc
jmp
loop
cmpsb
loope
in
call
loop
callw
and
loop
ljmp
in
in
in
loope
in
in
in
call
loop
insl
out
in
in
in
out
in
out
in
out
in
call
loop
xchg
loope
in
in
in
out
in
loop
in
in
in
loope
in
jecxz
in
in
in
loope
in
jecxz
in
out
in
jecxz
in
out
in
jecxz
in
out
in
jmp
loop
loope
loop
dec
call
loop
and
loop
outsb
in
in
jecxz
in
loop
in
in
in
call
loop
test
loop
mov
loope
in
jmp
loop
ja
loop
ja
loop
dec
out
in
out
in
jecxz
in
loop
in
jmp
loop
std
in
in
out
in
out
in
out
in
jmp
loop
dec
jmp
loop
ss
loop
xor
loop
push
loop
in
out
in
jecxz
in
out
in
loop
in
out
in
out
in
loope
in
out
in
in
in
in
in
loop
in
out
in
jecxz
in
out
in
in
in
jmp
loop
inc
out
in
in
in
jecxz
in
call
loop
push
out
in
loop
in
out
in
in
in
loop
in
call
loop
popf
out
in
call
loop
test
loop
jmp
loop
loopne
loop
ds
in
call
loop
sbb
loop
insl
in
in
in
in
jmp
loop
shr
loop
and
jecxz
in
out
in
loop
in
out
in
jecxz
in
out
in
out
in
loop
in
in
in
in
in
in
in
jecxz
in
in
in
call
loop
add
loop
stos
loope
in
out
in
call
loop
cld
call
loop
xchg
loop
jecxz
loop
or
loop
mov
loop
pop
out
in
jmp
loop
fucom
loop
xor
loop
inc
jmp
loop
enter
sub
loop
in
in
in
in
in
jecxz
in
loop
in
jecxz
in
loop
in
in
in
jecxz
in
out
in
out
in
jecxz
in
in
in
in
in
jmp
loop
mov
loop
es
in
jecxz
in
call
loop
jbe
loop
xor
loop
pop
out
in
call
loop
and
out
in
in
in
call
loop
shl
loop
mov
loop
inc
call
loop
lods
out
in
out
in
in
in
out
in
call
loop
cmp
loop
imul
loop
push
out
in
in
in
in
in
loop
in
in
in
jecxz
in
loope
in
call
loop
shl
in
out
in
jecxz
in
out
in
in
in
loop
in
in
in
in
in
in
in
out
in
loop
in
in
in
out
in
jmp
loop
int3
call
loop
add
loop
inc
call
loop
adc
loop
lahf
in
in
in
in
jecxz
in
out
in
out
in
call
loop
and
loop
or
loop
or
jmp
loop
loopne
loop
mov
loop
leave
in
in
call
loop
sub
loop
and
in
in
in
jecxz
in
in
in
jecxz
in
out
in
out
in
in
in
in
in
loop
in
in
in
jmp
loop
dec
out
in
out
in
call
loop
js
loop
lret
in
out
in
jecxz
in
jecxz
in
call
loop
imul
in
out
in
in
in
out
in
out
in
out
in
out
in
in
in
out
in
out
in
loop
in
loope
in
loop
in
jecxz
in
loope
in
in
in
in
in
in
in
in
in
jecxz
in
call
loop
aaa
in
in
in
in
out
in
loop
in
in
in
in
in
loop
in
out
in
in
in
in
in
loope
in
out
in
loop
in
in
in
jmp
loop
pushf
out
in
out
in
in
in
loop
in
out
in
out
in
in
in
loope
in
call
loop
xchg
in
in
loop
in
in
in
in
in
jmp
loop
push
in
in
out
in
in
in
jecxz
in
jecxz
in
in
in
out
in
in
in
jmp
loop
xor
in
in
loop
in
loope
in
jecxz
in
in
in
out
in
loope
in
in
in
out
in
loop
in
out
in
jecxz
in
in
in
in
in
out
in
loop
in
loope
in
in
in
jecxz
in
in
in
loop
in
call
loop
cld
in
in
in
in
loope
in
in
in
call
loop
fld1
loop
call
loop
cmc
out
in
in
in
call
loop
push
call
loop
test
loop
icebp
out
in
jecxz
in
loop
in
loope
in
out
in
in
in
jecxz
in
out
in
loop
in
out
in
loop
in
call
loop
sbb
loop
pusha
loope
in
in
in
call
loop
aas
out
in
jmp
loop
mov
in
in
out
in
loope
in
in
in
call
loop
lock
loop
sub
loop
adc
loop
lcall
in
jecxz
in
call
loop
scas
loop
in
in
in
call
loop
inc
call
loop
mov
loop
dec
out
in
out
in
out
in
in
in
jmp
loop
push
jecxz
in
loop
in
out
in
loop
in
call
loop
mov
loop
loop
cs
loop
mov
in
in
jmp
loop
lcall
in
in
in
in
in
jmp
loop
or
loop
dec
out
in
in
in
jecxz
in
out
in
out
in
loop
in
call
loop
pusha
in
in
in
in
in
in
out
in
jecxz
in
loope
in
loop
in
in
in
loop
in
call
loop
pusha
in
in
in
in
jmp
loop
sub
loop
inc
jecxz
in
call
loop
jbe
loop
loop
in
out
in
loop
in
loop
in
in
in
in
in
jecxz
in
in
in
out
in
jmp
loop
out
in
in
out
in
jecxz
in
out
in
jmp
loop
addr16
in
loop
in
out
in
loope
in
jmp
loop
jmp
loop
sub
loop
sbb
loop
cld
loop
in
loop
in
out
in
call
loop
lahf
in
in
in
in
out
in
jecxz
in
in
in
in
in
call
loop
imul
loop
mov
in
in
call
loop
jecxz
loop
outsb
out
in
loop
in
call
loop
sbb
out
in
in
in
in
in
in
in
out
in
out
in
jecxz
in
jecxz
in
in
in
in
in
call
loop
mov
in
in
loop
in
loop
in
in
in
loop
in
jecxz
in
out
in
out
in
call
loop
pop
jecxz
in
in
in
in
in
jmp
loop
imul
loop
dec
out
in
in
in
out
in
in
in
jecxz
in
out
in
out
in
out
in
out
in
loop
in
call
loop
mov
loop
imul
loop
push
in
in
out
in
in
in
call
loop
add
jecxz
in
jmp
loop
scas
out
in
jecxz
in
out
in
out
in
out
in
in
in
out
in
out
in
jecxz
in
in
in
jmp
loop
push
in
in
loop
in
in
in
jecxz
in
jmp
loop
movsb
jecxz
in
in
in
jecxz
in
loope
in
out
in
loop
in
loope
in
jecxz
in
jmp
loop
jl
loop
jb
loop
lods
call
loop
cmp
loop
pop
call
loop
es
in
in
in
loop
in
loop
in
out
in
call
loop
push
in
in
loop
in
loop
in
in
in
loop
in
in
in
loop
in
out
in
loope
in
call
loop
out
in
in
in
in
in
in
in
in
in
out
in
in
in
in
in
loop
in
loope
in
call
loop
jo
loop
xchg
loop
jg
loop
mov
loop
and
loop
sbb
loop
sbb
loop
in
out
in
out
in
in
in
out
in
in
in
out
in
loope
in
jmp
loop
mov
loop
out
loop
clc
loop
in
out
in
loop
in
in
in
jecxz
in
out
in
loop
in
in
in
loop
in
out
in
out
in
loop
in
jmp
loop
aaa
loop
in
in
in
jecxz
in
loope
in
jmp
loop
loopne
loop
or
loop
mov
loop
xchg
loop
int
loop
ss
loop
jmp
loope
in
out
in
call
loop
mov
loop
aam
loop
xchg
loop
xor
in
in
in
in
in
in
call
loop
xor
loop
push
in
in
call
loop
into
loope
in
loope
in
in
in
loop
in
in
in
jecxz
in
out
in
in
in
in
in
loope
in
out
in
out
in
in
in
out
in
in
in
in
in
loop
in
out
in
out
in
loope
in
out
in
call
loop
cmp
loop
daa
loop
in
out
in
loop
in
loope
in
loope
in
out
in
loope
in
in
in
out
in
in
in
jecxz
in
in
in
in
in
call
loop
mov
loop
sub
loop
cmp
loop
dec
call
loop
and
in
in
in
jecxz
in
call
loop
xchg
loop
jp
loop
mov
loop
test
loop
movntq
out
in
out
in
loop
in
jecxz
in
in
in
jecxz
in
jecxz
in
in
in
jmp
loop
out
loop
in
jmp
loop
popa
loope
in
loope
in
jecxz
in
in
in
out
in
loope
in
loop
in
out
in
jmp
loop
push
jecxz
in
loope
in
in
in
jecxz
in
out
in
in
in
call
loop
jns
loop
jp
loop
mov
loop
icebp
out
in
in
in
loop
in
jmp
loop
pop
out
in
out
in
jecxz
in
jecxz
in
call
loop
imul
loop
pop
in
in
jecxz
in
in
in
out
in
jmp
loop
out
in
out
in
out
in
loope
in
jmp
loop
mov
call
loop
sahf
call
loop
xor
in
in
in
in
loop
in
jecxz
in
jecxz
in
out
in
loop
in
loop
in
out
in
in
in
out
in
in
in
call
loop
push
in
in
loop
in
out
in
in
in
jecxz
in
loop
in
out
in
jecxz
in
out
in
loop
in
out
in
in
in
out
in
jecxz
in
in
in
out
in
in
in
in
in
out
in
call
loop
mov
out
in
loope
in
loop
in
loop
in
loope
in
jecxz
in
in
in
loope
in
call
loop
insb
out
in
out
in
loope
in
jecxz
in
in
in
out
in
in
in
loope
in
in
in
jecxz
in
out
in
out
in
loop
in
jecxz
in
in
in
loope
in
call
loop
adc
out
in
jecxz
in
in
in
in
in
in
in
jecxz
in
out
in
out
in
in
in
out
in
call
loop
push
jecxz
in
in
in
in
in
in
in
call
loop
sbb
loop
or
loop
mov
in
in
call
loop
and
in
in
in
out
in
call
loop
pop
loope
in
out
in
call
loop
fs
in
out
in
call
loop
popf
in
in
out
in
jecxz
in
in
in
loope
in
in
in
out
in
in
in
out
in
call
loop
mov
jmp
loop
jmp
loop
add
loop
jb
loop
cmp
loop
out
in
in
in
in
loope
in
loop
in
jmp
loop
in
loop
pop
in
in
in
in
loop
in
loope
in
out
in
jecxz
in
out
in
in
in
in
in
in
in
call
loop
add
loop
cmc
in
in
jecxz
in
in
in
out
in
in
in
jmp
loop
data16
in
out
in
jecxz
in
loop
in
out
in
jmp
loop
mov
out
in
out
in
loope
in
in
in
in
in
out
in
jmp
loop
jp
loop
sub
loop
jl
loop
dec
in
in
jecxz
in
loop
in
in
in
out
in
in
in
out
in
call
loop
push
in
in
loop
in
jmp
loop
add
jecxz
in
out
in
in
in
in
in
jecxz
in
out
in
in
in
out
in
out
in
out
in
in
in
jecxz
in
jecxz
in
loope
in
out
in
call
loop
shl
in
call
loop
sub
loop
ss
loop
mov
loop
in
in
in
loop
in
out
in
loop
in
out
in
in
in
loope
in
loop
in
loop
in
jmp
loop
xchg
call
loop
pop
in
in
jecxz
in
in
in
out
in
out
in
in
in
jecxz
in
out
in
loop
in
out
in
in
in
out
in
out
in
jecxz
in
in
in
in
in
out
in
out
in
loop
in
jecxz
in
jmp
loop
jle
loop
sub
loop
add
in
in
jecxz
in
out
in
loope
in
out
in
loop
in
in
in
clc
testl
adc
add
add
add
add
flds
add
add
add
add
mov
xor
add
add
add
add
rolb
add
add
add
add
push
add
adc
dec
push
clc
add
add
add
add
clc
add
add
add
xchg
or
add
out
add
add
and
add
cmp
mulb
sar
clc
push
clc
mov
add
mov
jnp
dec
pop
add
add
inc
add
jge
clc
outsb
mov
clc
adc
add
add
es
sar
std
add
add
lods
cwtl
inc
add
or
add
add
mov
test
sbb
pushf
adc
add
sbb
rcl
cmp
adc
add
lods
cmp
clc
nop
sbb
pushf
mov
clc
dec
loop
mov
shlb
clc
fbstp
clc
cmp
sbb
add
roll
mov
mov
clc
mov
cmp
add
nop
cmp
mov
pop
mov
cmp
add
sub
add
mov
cmp
clc
mov
nop
sbb
mov
jmp
clc
adc
add
stos
xlat
mov
push
add
clc
push
add
inc
add
add
add
clc
and
add
add
add
movsl
clc
std
xlat
cwtl
mov
clc
and
add
add
sub
cwtl
mov
and
add
add
gs
loope
push
aad
add
jb
add
add
add
add
lods
and
add
add
pusha
add
inc
add
movsl
clc
cwtl
cmp
add
add
add
add
mov
fsubs
add
cmp
add
xchg
lahf
mov
mov
add
test
mov
add
movsl
clc
sbb
clc
cwtl
push
add
push
clc
push
add
add
lock
add
cltd
mov
add
aaa
add
add
push
clc
cwtl
sub
add
add
mov
js
xor
add
add
xchg
jo
add
xor
add
add
imul
or
add
clc
xchg
sar
dec
and
add
add
in
into
cwtl
or
pop
add
add
cwtl
faddl
add
add
add
int3
cwtl
cmp
js
add
aad
aam
clc
pusha
add
pop
add
add
pop
pop
add
add
into
into
cwtl
loopne
push
add
add
add
rcrb
inc
clc
add
add
clc
adc
add
cwtl
test
inc
clc
add
add
sbb
cwtl
pop
popf
inc
clc
add
add
mov
inc
clc
add
add
clc
aam
mov
add
add
adc
in
inc
add
add
add
cwtl
clc
icebp
inc
add
add
add
xlat
cwtl
add
add
add
inc
clc
add
add
add
adc
add
add
add
mov
add
test
inc
clc
add
add
inc
clc
daa
clc
add
add
xabort
cwtl
sarb
dec
add
add
add
push
add
dec
add
add
popa
add
dec
loopne
jle
rsm
pop
stos
dec
add
add
and
add
clc
dec
add
add
add
lods
jne
add
movsl
clc
sub
clc
dec
add
add
pavgw
cwtl
cwtl
pop
dec
loopne
mov
push
ljmp
add
cltd
fmulp
cwtl
mov
add
aad
ficomps
add
add
inc
add
fistps
add
xchg
jns
cwtl
cmp
jge
clc
imul
add
jbe
add
in
push
loop
cwtl
enter
add
pop
cmpsb
clc
jecxz
cwtl
mov
add
add
nop
inc
add
jns
add
pop
ret
cwtl
add
add
add
add
aad
clc
negl
add
add
dec
fs
add
add
cmc
clc
cwtl
pusha
add
inc
add
push
add
add
repnz
mov
pop
add
add
clc
and
add
pop
add
add
das
adc
fcom
pop
add
add
xor
add
add
add
cwtl
and
add
add
add
add
pop
xchg
lock
js
fs
add
add
stc
cwtl
cmp
add
xchg
add
add
clc
sar
add
add
cwtl
mov
add
add
add
add
inc
clc
in
cwtl
push
add
arpl
add
add
add
cltd
aaa
ficomps
stos
add
add
cwtl
cmp
add
add
add
inc
clc
lock
fdiv
jl
add
adc
clc
xabort
add
add
clc
push
cwtl
add
add
add
add
fnstcw
std
cwtl
fdivrs
or
add
add
add
add
cltd
and
add
pushf
add
add
repnz
cwtl
cwtl
stos
pop
add
add
movsb
clc
add
add
add
add
clc
cwtl
sar
jbe
add
imul
mov
clc
mov
add
cwtl
dec
stos
nop
add
add
xor
cmp
sar
add
test
shrl
cltd
adc
add
add
add
pop
inc
clc
push
cwtl
cmp
mov
push
add
adc
add
add
mov
xchg
add
add
xchg
and
add
xchg
add
add
clc
sbb
and
add
cmp
add
in
addr16
in
cwtl
test
imul
pop
nop
cmp
clc
pop
out
stos
sahf
mov
add
add
mov
add
mov
jle
clc
hlt
out
cwtl
fs
cmp
add
add
pop
cwtl
es
adc
add
inc
add
or
xbegin
test
clc
xchg
or
sub
outsb
ficomps
add
adc
add
push
add
pop
cltd
xor
add
cs
clc
inc
add
xbegin
sub
adc
add
int3
je
mov
add
xor
fcoms
clc
mov
add
gs
outsb
or
clc
dec
cmp
mov
clc
xchg
imul
fdivp
cmc
int
cmp
push
leave
xbegin
lea
enter
hlt
cmpsb
clc
xabort
fadd
clc
jmp
lock
clc
xchg
call
add
pop
in
xchg
in
push
push
fistpl
clc
push
mov
clc
enter
add
dec
stc
and
add
mov
add
clc
in
popf
jns
es
rol
clc
lcall
add
add
add
out
imul
cmpsb
clc
mov
ss
movsb
clc
aas
cmp
sub
ficoms
jne
xor
nop
call
ljmp
hlt
add
sbb
fcomip
lock
xabort
clc
cmp
xchg
xchg
push
mov
or
iret
mov
movsb
clc
pop
xchg
mov
push
pop
mov
clc
nop
lea
sar
lret
sbb
sbb
arpl
add
sub
jmp
clc
mov
add
add
xchg
mov
mov
clc
pop
adc
add
clc
and
add
fdivs
add
add
add
pop
inc
add
movsl
clc
aad
loop
repz
cmp
cmp
clc
pop
sbb
repnz
fiaddl
rcrb
inc
add
push
add
mov
clc
notl
test
xchg
push
add
xchg
imul
mov
add
pop
xchg
sbb
clc
loopne
xor
add
add
add
add
add
clc
and
add
scas
push
xchg
sub
add
stos
inc
clc
mov
jne
add
sbb
add
scas
inc
add
jmp
popa
add
ss
mov
cmp
sub
and
add
fisubrs
call
mov
mov
add
out
and
add
mov
add
int3
clc
dec
mov
clc
in
repnz
ret
clc
xchg
xlat
nop
lret
ret
add
mov
mov
sub
sahf
mov
xor
add
mov
jge
fisubs
add
cwtl
call
add
add
add
aad
add
in
xor
add
pop
pop
xchg
push
mov
int
cmp
mov
add
lods
imul
cmp
mov
lcall
into
mov
mov
cmp
mov
sbb
add
cs
nop
rcr
popf
ljmp
mov
addr16
mov
in
push
sub
push
push
push
push
push
call
es
push
mov
and
xor
not
test
es
nop
nop
loop
pop
lea
xor
sub
xchg
not
es
ss
pop
add
movzbl
es
push
or
and
push
mov
add
add
push
mov
push
push
call
push
call
leave
ret
lea
sub
mov
lock
lea
lock
ret
and
je
and
sub
test
nop
nop
nop
nop
nop
push
push
je
mov
adc
test
jne
ret
andl
mov
lea
push
push
push
push
push
mov
push
lret
call
cmp
sub
sbb
mov
add
dec
push
sbb
push
inc
clc
dec
jbe
xchg
xchg
je
ja
xchg
inc
clc
int3
xor
add
and
sub
clc
aad
clc
sub
clc
mov
push
sub
add
add
add
js
int
dec
movsl
clc
push
clc
jge
mov
add
mov
add
cmp
in
cmp
push
clc
icebp
sbb
add
int
and
cmp
clc
ds
or
out
aas
or
clc
mov
xor
sbb
lret
xchg
dec
xbegin
xchg
inc
add
pop
ret
add
xchg
in
mov
or
lods
loope
je
clc
lods
push
clc
sbb
sub
clc
in
dec
call
pop
mov
jecxz
inc
clc
mov
gs
sbb
adc
add
add
clc
xor
add
add
ss
add
cmp
sti
and
add
hlt
add
clc
jmp
cmp
roll
add
add
add
add
icebp
mov
shrl
clc
inc
add
fisubrs
popf
ja
dec
jmp
add
xor
dec
mov
aam
clc
cmp
inc
add
push
add
add
mov
ret
add
mov
mov
xchg
mov
outsl
push
cmp
clc
ds
clc
and
add
dec
cmpsl
clc
in
icebp
mov
inc
clc
outsb
scas
aam
pop
or
pop
clc
sahf
cmpsl
clc
add
add
gs
mov
add
clc
add
sbb
ret
clc
mov
add
aas
pop
adc
add
stos
loop
cmp
add
xbegin
and
sub
add
sub
clc
dec
xor
mov
add
cld
insb
add
jne
fdiv
xchg
mov
clc
loop
loop
jl
es
sub
cmp
add
mov
add
add
add
add
add
add
jb
add
out
adc
add
push
addr16
lods
std
icebp
mov
cmp
add
fs
inc
clc
je
pusha
add
mov
clc
pcmpeqd
in
outsb
clc
daa
clc
adc
jmp
out
pop
and
mov
mov
add
fsubrl
lods
cmpsb
clc
pop
clc
add
lock
push
add
ret
das
adc
clc
movsb
clc
mov
push
add
jae
add
sar
clc
jl
cmp
xchg
data16
mov
clc
filds
sbb
jl
daa
clc
jge
pop
int3
mov
add
pusha
add
mov
sbb
add
clc
int
sbb
test
cltd
jbe
sar
xchg
mov
div
inc
add
clc
sub
add
jle
data16
aad
sbb
pushf
dec
out
cmp
into
adc
add
scas
pusha
add
mov
or
xor
add
data16
or
mov
jmp
repz
fisubl
cmp
clc
push
add
jae
add
sar
cmpsb
clc
pop
sbb
mov
push
add
jp
out
xchg
push
jecxz
fdivrp
shll
add
jb
add
test
add
push
sar
enter
clc
pushf
jge
push
mov
in
jg
pop
pushf
inc
clc
dec
add
add
cmp
loop
insl
jnp
clc
dec
loope
test
mov
clc
stos
lret
push
add
fildl
mov
adc
add
in
fs
mov
ret
clc
in
inc
clc
dec
inc
add
push
clc
pop
adc
add
lods
push
xlat
mov
add
jns
mov
clc
mov
xlat
addr16
fistps
add
pop
cmp
pop
clc
mov
sub
sbb
add
dec
mov
hlt
or
adc
add
sub
lock
add
out
jns
add
sbb
test
pop
mov
lret
push
enter
cmp
dec
in
pushf
sbb
inc
add
jae
add
add
mov
or
nop
pop
sub
xor
add
xchg
cmp
clc
xchg
sbb
add
scas
mov
clc
pop
clc
xor
add
pop
or
clc
sub
add
mov
add
dec
adc
pushf
daa
clc
das
sbb
add
add
out
push
add
ss
imul
mov
inc
add
in
insl
pusha
add
jmp
and
add
add
push
or
or
mov
cmp
clc
cmpsb
clc
push
jle
and
add
add
dec
mov
or
leave
dec
add
add
add
out
push
nop
ret
clc
shl
fs
jl
xchg
dec
stc
enter
push
insl
xabort
clc
mov
hlt
inc
add
lahf
fs
fisttpl
es
clc
cmp
clc
loopne
mov
add
clc
out
xchg
aad
add
in
or
add
outsb
sub
cs
xchg
ja
add
add
stc
cltd
ret
mov
clc
loope
aas
rorb
add
sub
add
sbb
push
add
test
clc
movsl
clc
es
insl
rorb
icebp
loopne
test
aas
lea
clc
dec
xchg
fidivs
add
inc
clc
aaa
int
add
mov
clc
and
add
and
add
icebp
jg
jbe
aam
addr16
adc
add
imul
push
enter
add
add
push
add
out
stos
mov
add
jp
add
gs
and
add
inc
add
in
xchg
mov
xor
clc
cli
lods
loopne
sub
and
lea
add
xchg
push
fucomp
jns
clc
aam
clc
ss
clc
nop
or
add
add
leave
push
or
clc
or
clc
fst
push
cwtl
dec
scas
xchg
stos
stc
mov
adc
add
and
add
sub
add
aam
xlat
cmp
imul
popa
add
dec
and
insl
xchg
sbb
or
test
add
and
add
clc
push
xor
add
add
aaa
mov
fidivl
xor
clc
xor
add
or
inc
clc
and
add
test
push
xchg
aam
and
clc
inc
clc
clc
movsl
clc
or
mov
mov
lret
sahf
push
add
add
cld
test
clc
add
add
hlt
add
push
xor
mov
sub
test
stc
insl
xabort
add
xchg
mov
scas
std
loopne
jl
pop
or
clc
inc
clc
push
into
cs
cmp
mov
cmp
loopne
pop
fisubrl
loopne
aad
cmp
add
mov
xchg
lea
adc
add
movsb
clc
pop
or
pop
test
push
jg
insl
pop
and
cld
pop
mov
movsl
clc
out
decb
lcall
and
add
add
or
mov
fs
adc
add
ss
clc
xor
add
enter
aad
sbb
add
data16
int3
imul
int
pop
pop
fdivr
add
add
add
mov
mov
pushf
lret
add
add
fcompl
clc
and
adc
add
mov
clc
fs
icebp
insl
or
clc
and
add
and
add
add
dec
sets
clc
vmread
mov
add
in
adc
add
cmp
clc
ds
mov
sub
push
sahf
lahf
jecxz
pop
push
cmp
or
mov
add
sub
clc
aam
shll
add
jno
add
mov
add
add
sbb
fwait
xabort
clc
sub
pop
inc
add
push
fwait
bound
add
pusha
add
movsb
clc
sub
clc
add
push
xor
add
jp
mov
mov
jae
add
pop
mov
clc
sbb
jbe
sub
xor
add
mov
rcrl
inc
add
inc
add
pop
clc
and
cmp
xor
add
add
js
clc
lods
mov
add
in
jmp
clc
xlat
add
iret
dec
xor
add
add
clc
and
push
data16
in
dec
jns
lcall
pop
inc
clc
cmpsl
clc
mov
test
ljmp
jbe
adc
dec
jecxz
in
loopne
vmwrite
clc
lret
jp
ljmp
rolb
test
lahf
push
add
int3
test
add
add
xor
add
add
fnstsw
clc
hlt
mov
clc
push
mov
gs
fs
mov
and
add
pop
adc
add
add
sti
pop
test
lods
dec
jb
add
iret
xor
add
add
xchg
mov
movsl
clc
cli
dec
xor
clc
mov
lcall
loope
mov
jno
add
xchg
and
add
sbb
add
push
add
add
add
mov
out
pop
dec
or
push
clc
imul
clc
test
sub
add
xchg
pop
jl
popf
int3
icebp
insb
or
pop
cmp
mov
cltd
out
ljmp
aaa
mov
add
add
ss
clc
mov
clc
fidivl
sub
mov
pop
lret
pop
mov
shlb
clc
daa
clc
enter
clc
fs
push
xbegin
jmp
clc
or
fisttps
sbb
negb
bound
add
add
fisubrl
jmp
add
adc
gs
icebp
xor
add
add
cmp
dec
pop
lock
inc
clc
cmp
clc
adc
clc
movsb
clc
or
clc
dec
lcall
mov
add
jno
add
add
cmp
add
push
insl
scas
inc
add
jbe
out
xchg
sub
dec
data16
push
add
xor
add
add
in
xor
add
add
add
push
dec
jb
add
jno
add
xlat
inc
clc
test
dec
test
and
add
or
mov
out
push
add
cmp
cld
push
or
jb
add
xchg
mov
push
add
test
loop
mov
js
das
inc
add
xor
add
inc
add
lods
or
add
pop
shrl
in
dec
push
add
sarb
clc
shrb
sub
clc
jecxz
and
clc
cld
lods
jae
add
add
enter
clc
mov
repz
add
add
pop
cmpsb
clc
xchg
sti
ret
clc
lret
clc
mov
fidivs
add
xlat
movsl
clc
mov
add
mov
mov
mov
int3
or
lods
test
dec
pop
and
add
or
shll
cltd
stc
sahf
push
clc
cmp
add
test
mov
add
fidivl
test
push
sahf
scas
fadd
clc
aas
xchg
jmp
sbb
xchg
and
add
nop
clc
loope
movsb
clc
out
push
or
add
sbb
outsl
adc
dec
fmull
or
add
sub
clc
mov
add
xor
add
add
jmp
add
fildl
add
xor
add
add
or
sub
sub
add
ret
clc
and
add
clc
push
clc
cwtl
sar
fwait
cmp
add
cmc
push
add
cmpsb
clc
jge
clc
sbb
clc
cmpsb
clc
mov
add
xchg
pop
ss
sbb
lcall
and
add
cmp
add
and
popf
in
call
pop
ds
xor
add
add
and
add
xchg
push
clc
adc
mov
clc
add
add
sarl
clc
int3
pop
clc
dec
ss
mov
add
fdivrs
clc
add
imul
add
xchg
loope
push
cmp
ret
clc
clc
icebp
mov
or
add
or
clc
bound
add
xlat
jno
add
dec
aas
sbb
pop
dec
jae
add
lods
js
mov
mov
out
pop
data16
daa
clc
mov
clc
jbe
add
in
cwtl
mov
clc
dec
push
xor
add
add
add
test
push
add
hlt
sbb
clc
jge
or
add
push
clc
xchg
inc
clc
dec
cmp
dec
sub
test
clc
xchg
jb
add
pop
clc
jne
inc
add
jge
insb
mov
clc
sub
clc
mov
inc
clc
mov
mov
add
outsb
lret
push
add
pusha
add
cmp
and
add
add
add
add
iret
mov
jns
fabs
clc
cmp
clc
lret
cmp
out
int3
inc
add
mov
cmp
leave
cmc
shll
fmul
cld
jno
add
cmp
test
clc
push
clc
xlat
cwtl
xchg
adc
add
add
stc
inc
add
scas
add
add
add
add
jno,pn
add
add
or
outsl
push
sub
clc
fdiv
das
mov
pop
push
or
add
jecxz
movsl
clc
jmp
clc
outsb
sbb
xchg
pusha
add
sbb
mov
clc
push
fsts
add
ss
cmp
inc
clc
ss
ret
adc
clc
or
clc
cmp
push
movsb
clc
or
cmp
addr16
pop
inc
clc
fiadds
add
mov
sub
clc
test
enter
mov
lcall
add
out
fwait
xor
add
lock
scas
out
aas
outsl
aaa
xor
mov
mov
clc
clc
imul
fstpl
clc
or
aaa
ja
das
mov
clc
xchg
sbb
jl
divb
repnz
aaa
pop
cmp
xbegin
outsb
push
clc
jp
mov
add
add
mov
mov
fsubrl
clc
pop
push
mov
jp
add
jecxz
cmp
hlt
mov
cmp
clc
cld
lret
jnp
fs
ret
clc
pop
adc
add
dec
adc
add
add
add
mov
enter
test
clc
movsb
clc
mov
xor
add
cs
clc
test
lea
push
call
clc
movsb
clc
inc
clc
cmpsb
clc
cmp
imul
pop
xor
add
lea
fisubrs
pop
lock
xchg
pop
stos
mov
clc
ret
lcall
mov
jae
add
clc
mov
pusha
add
push
clc
xor
add
mov
push
xchg
idivb
or
addr16
xchg
push
jnp
insb
rcrb
push
out
jbe
add
std
lahf
lock
clc
pop
jmp
add
jnp
movsl
clc
pusha
add
push
add
mov
add
adc
add
add
add
add
repz
add
jecxz
mov
add
hlt
ret
test
and
aad
clc
scas
mov
clc
in
mov
clc
clc
xor
add
repnz
clc
lea
add
add
push
ja
fcmovb
clc
adc
add
jg
mulb
in
push
add
push
sbb
clc
dec
fists
add
clc
sub
add
cmp
in
pop
cli
mov
clc
jb
add
mov
and
add
std
je
and
add
add
sub
inc
add
cld
push
add
lods
mov
add
shrb
scas
clc
in
stc
inc
clc
or
adc
add
pop
int
clc
loopne
sar
add
xor
and
mov
clc
call
sahf
jecxz
mov
imul
mov
out
xchg
out
adc
add
jp
cmc
push
pop
neg
data16
jmp
mov
aas
cmp
mov
add
sub
clc
cmp
addr16
cmp
sbb
clc
test
pushf
lret
repnz
cmp
add
call
cmp
clc
shr
loop
fistpl
scas
dec
push
mov
mov
pop
loopne
hlt
xor
or
jecxz
jg
jecxz
fiadds
fstp
sti
pop
std
push
add
aam
clc
decb
lods
mov
cmp
adc
add
adc
add
icebp
pop
clc
mov
addr16
or
pop
clc
addr16
and
add
test
push
pusha
add
jmp
and
repnz
xor
add
icebp
sbb
clc
incl
mov
pusha
add
jnp
sub
add
fiadds
add
pop
mov
adc
add
mov
add
inc
add
push
add
mov
add
add
out
data16
jno
add
add
insb
ss
add
sahf
xor
aaa
mov
clc
mov
mov
clc
cmp
clc
mov
cmc
pushf
push
fnstcw
mull
clc
push
movsl
clc
cli
push
mov
clc
addr16
out
pusha
add
in
xor
add
adc
leave
cmpsl
clc
test
mov
clc
decl
mov
add
shlb
clc
fs
push
fdivr
mov
add
add
mov
cmp
jno
add
arpl
add
ja
dec
fldl
add
sar
add
cmp
cmp
xor
aam
lea
test
clc
inc
clc
jo
add
mov
mov
sbb
clc
or
clc
frstor
add
or
test
test
pop
mov
add
gs
ret
out
mov
add
xor
clc
jle
mov
cmp
clc
jp
aam
dec
aam
clc
lahf
mov
clc
cmp
add
add
xor
add
push
add
scas
add
add
cmc
mov
out
mov
push
add
lods
inc
add
mov
add
lret
jae
add
gs
or
cmp
into
mov
add
ret
clc
imul
add
lock
fidivs
ss
xchg
call
push
testl
add
adc
clc
loop
test
fisttpll
cmc
jne
call
dec
jg
xchg
data16
test
add
adc
add
clc
push
sbb
add
add
add
mov
pop
cmp
clc
mov
add
stos
int
adc
add
clc
fnsave
add
add
int
add
aaa
mov
cwtl
ret
clc
jl
mov
add
add
jae
add
or
xchg
loopne
ret
clc
and
add
imul
sbb
gs
clc
push
sub
xor
cli
pop
add
fidivl
add
arpl
add
das
sbb
loop
enter
clc
icebp
lahf
das
out
leave
mov
sub
jbe
clc
idivb
xchg
stos
call
leave
test
flds
cmp
push
clc
jp
clc
mov
imulb
mov
pop
mov
pusha
add
cmp
clc
xchg
clc
imul
push
sbb
mov
add
xchg
movsb
clc
dec
mov
ja
xchg
xchg
and
add
mov
test
xor
push
add
cmpsb
clc
dec
rorb
push
add
xchg
add
or
clc
cmp
dec
xchg
pop
ficoml
add
clc
fcmovbe
sbb
jbe
push
es
inc
clc
rcr
jae
add
clc
lret
add
add
sub
clc
jae
add
jecxz
test
mov
sub
clc
mov
add
jns
in
inc
add
stos
dec
enter
add
or
cmp
shlb
add
cmpsb
clc
adc
add
fabs
clc
mov
sahf
outsb
pop
cmp
clc
aam
clc
cmp
call
ja
adc
add
pop
pop
push
clc
and
add
pop
jl
mov
or
add
mov
mov
pop
lods
enter
clc
lea
push
test
clc
imulb
add
or
clc
test
mov
movsb
clc
push
iret
bound
add
clc
rcrb
idivl
pop
xchg
xor
mov
inc
add
cmp
clc
test
add
call
add
lahf
mov
mov
inc
clc
popf
stos
mov
add
clc
sar
rcrl
pop
mov
dec
fdivr
movsl
clc
pop
clc
or
scas
adc
add
inc
add
add
add
clc
lcall
add
push
sahf
test
ljmp
clc
and
add
sub
mull
inc
clc
lret
sub
sub
test
add
leave
or
clc
nop
aam
test
aam
clc
push
fbld
push
popa
add
fs
sti
cmp
mov
add
push
out
out
xchg
cltd
dec
push
add
add
add
add
add
add
cmp
iret
stos
cs
ss
push
xchg
imul
es
mov
add
jmp
clc
jmp
push
lock
add
lea
insb
stc
mov
push
ss
clc
xchg
ljmp
out
lods
sub
cmp
add
clc
test
mov
pop
jb
add
add
or
jno
add
add
in
sahf
mov
in
mov
add
push
add
dec
push
add
cmovns
adc
add
push
add
fdivr
pop
push
add
or
mov
clc
cmp
icebp
and
push
shlb
hlt
cmc
cmp
clc
fsubrl
leave
popf
sar
jl
dec
cmp
clc
sar
cwtl
jp
xor
add
in
data16
stos
mov
clc
in
pop
sub
ss
clc
inc
clc
dec
xchg
xchg
and
add
add
jl
fisttpl
rolb
add
mov
movsl
clc
push
add
std
pop
jnp
add
jecxz
sub
mov
add
mov
add
mov
xchg
add
movntq
out
bound
add
js
mov
pop
clc
ja
mov
clc
lock
lret
clc
test
add
or
xor
add
add
xabort
add
dec
xabort
jg
clc
dec
cwtl
fwait
bound
add
xchg
cmp
clc
sbb
jbe
jp
mov
add
mov
push
add
sub
xchg
popf
aaa
push
dec
xchg
sbb
pop
xor
push
and
add
clc
in
lods
push
add
push
repz
roll
clc
lret
jg
sub
add
incb
push
xchg
adc
add
xor
add
clc
adc
dec
inc
clc
mov
mov
add
mov
clc
js
add
mov
clc
inc
clc
fsubl
add
or
test
add
xor
add
and
add
mov
pop
popa
add
stc
and
add
fiaddl
jl
cmp
mov
push
add
jecxz
jnp
add
xchg
cmp
clc
push
nop
xor
add
cld
test
iret
cmp
ja
ss
pop
pusha
add
popf
or
xchg
mov
mov
jae
add
add
add
js
add
mov
setg
and
add
add
mov
add
hlt
sbb
adc
clc
cli
xchg
add
add
sbb
je
clc
cltd
mov
aas
pushf
lahf
lcall
add
add
insb
mov
mov
cmp
add
cmpsb
clc
jnp
clc
ja
nop
loopne
mov
add
add
xor
add
add
and
pop
mov
clc
adc
add
test
add
xor
add
clc
or
push
outsb
add
sub
add
lea
movsl
clc
dec
cmp
mov
call
dec
jmp
add
jg
sar
imul
add
add
jno
add
clc
iret
add
add
mov
sub
cmp
xor
enter
add
cmp
add
call
fcomps
jle
adc
add
movsb
clc
iret
sar
clc
pop
adc
stos
test
clc
jns
clc
ljmp
add
clc
xchg
hlt
sahf
push
adc
add
shll
add
adc
add
fcoml
pop
clc
adc
push
fcmovnb
clc
ret
pop
dec
mov
mov
add
lods
and
add
pop
das
mov
sub
into
inc
add
mov
and
scas
xbegin
sub
clc
and
add
mov
pop
movsl
clc
xchg
dec
push
mov
icebp
inc
add
mov
add
cmp
xabort
ljmp
add
data16
sbb
add
stos
add
add
clc
and
add
jbe
lea
xchg
or
add
add
leave
push
add
mov
clc
data16
pop
adc
add
add
or
add
divb
add
adc
add
add
jle
cmpsb
clc
jb
add
cmp
sar
popa
add
mov
clc
repz
xchg
sbb
sub
ja
cli
push
push
dec
icebp
cltd
movsb
clc
sbb
clc
out
inc
clc
ljmp
jecxz
mov
loop
jae
add
rol
clc
push
clc
mov
jecxz
fildll
fcoms
add
cmp
clc
js
clc
cld
pop
and
fbld
add
clc
imul
cmp
add
popa
add
mov
add
add
lock
add
add
cmp
inc
clc
push
add
pop
mov
mov
sbb
mov
movsl
clc
sub
clc
xlat
mov
outsb
loope
and
add
xor
xchg
pop
push
xchg
push
add
add
pop
je
add
loopne
out
loope
call
clc
das
fidivl
cli
lret
mov
das
push
clc
push
or
clc
cmp
add
add
es
aas
jnp
cmp
clc
sub
add
or
pop
int
xchg
sub
add
inc
clc
cmp
add
mov
clc
push
add
leave
addr16
mov
clc
mov
add
addr16
dec
pop
pop
mov
jb
add
and
add
in
mov
clc
hlt
xor
add
add
ret
clc
add
add
add
shrl
lods
clc
xchg
dec
inc
add
pop
in
fs
jb
add
insl
inc
clc
sbb
cmp
pop
mov
clc
cmp
addr16
pop
stc
pop
mov
pop
pop
mov
jb
add
stos
cmp
clc
insb
dec
pop
push
add
xor
clc
push
mov
adc
add
add
test
jecxz
cmpsb
clc
mov
clc
cmp
add
pop
addr16
or
add
imul
clc
pop
jmp
lret
jnp
xor
add
adc
add
sbb
sbb
add
add
add
cmpsl
clc
out
cmp
push
clc
fistl
add
mov
add
xor
add
clc
cwtl
dec
frstor
clc
cmpsb
clc
mov
jl
xchg
push
clc
dec
cmp
clc
mov
clc
xchg
sub
mov
mov
mov
clc
aad
clc
xchg
xabort
clc
jae
add
rcr
jge
add
fnstcw
add
jbe
adc
add
xor
popa
add
sbb
int
add
insb
pop
clc
xchg
jecxz
pop
fdivs
push
incb
add
cmp
out
dec
stc
cmp
clc
sbb
or
clc
cmp
sbb
clc
dec
inc
add
sbb
add
lock
add
jno
add
jbe
clc
fisubl
adc
add
xor
add
cwtl
call
popa
add
test
divb
jo
add
mov
clc
xbegin
imul
pop
out
icebp
sti
repz
dec
push
jae
add
cmp
mov
clc
mov
add
cmp
xor
add
jbe
loop
sbb
jno
add
dec
mov
sbb
repz
ja
inc
add
aam
inc
add
mov
or
dec
push
sbb
and
jecxz
addr16
cmpsb
clc
pop
inc
add
js
mov
add
bound
add
ds
call
add
in
imul
clc
xchg
push
add
stc
bound
add
clc
aas
pusha
add
fnstenv
mov
pop
and
add
ret
clc
dec
jb
add
xchg
cld
jge
clc
push
divl
add
xchg
outsl
cmp
insl
lahf
stos
cmp
clc
jnp
pushf
or
add
add
fsubrl
data16
inc
clc
xchg
sub
clc
fists
add
or
jecxz
lret
sub
fistl
add
add
add
out
inc
add
xlat
fstpl
loop
test
or
clc
cmp
mov
xor
add
repnz
shrb
jns
pop
lods
mov
jle
push
stc
mov
clc
fsubrl
xchg
popa
add
fsubrs
add
out
inc
add
jno
add
clc
js
mov
sbb
or
xchg
dec
xchg
mov
and
add
add
scas
xchg
sarb
clc
out
ret
clc
mov
clc
shr
fsub
clc
or
ja
add
out
push
pusha
add
incb
clc
aaa
push
add
jns
clc
ss
xor
add
test
icebp
mov
jb
add
dec
pop
sub
mov
and
add
add
jbe
xchg
cmp
dec
xabort
sbb
movups
add
sub
xchg
push
add
divb
ja
hlt
cmp
push
fst
mov
add
clc
xchg
cmp
jecxz
pop
clc
insb
jne
cmp
sub
add
sub
clc
adc
add
aad
stc
mov
mov
add
add
je
add
addr16
cmp
add
repnz
mov
das
cmp
imul
aad
clc
imul
clc
and
add
inc
clc
stos
cmp
cmpsb
clc
jmp
push
filds
and
add
sub
mov
clc
or
clc
outsl
and
rcrb
or
xor
add
clc
cmp
dec
lods
mov
add
mov
fld
clc
cli
jns
clc
and
add
test
mov
decl
add
add
mov
clc
sbb
adc
add
clc
sar
cltd
xor
loopne
js
jae
add
add
gs
xchg
cltd
push
clc
push
sub
stos
ja
add
push
add
cmp
add
iret
int
add
sbb
clc
cmp
out
push
dec
pop
enter
cmpsl
clc
fmull
adc
clc
push
add
loope
popf
out
push
lea
add
sbb
add
push
cmp
fnsave
add
in
imull
clc
xchg
sub
dec
jo
add
push
add
xor
add
sbb
mov
clc
lret
mov
daa
clc
add
add
adc
add
and
add
clc
add
add
clc
mov
repnz
clc
push
push
clc
jbe
aad
inc
clc
shrb
add
dec
push
push
add
insl
jb
add
adc
add
add
push
clc
mov
push
add
adc
add
adc
add
clc
arpl
add
add
fcompl
cmp
add
lods
mov
fsubrs
add
push
clc
movsl
clc
in
in
lahf
mov
clc
iret
movsb
clc
cld
and
insl
shll
sar
or
push
clc
mov
add
or
add
jg
jne
add
mov
push
add
add
cmp
sub
cltd
adc
add
sar
add
dec
into
jecxz
cmp
cmp
clc
xchg
cmp
pop
movsl
clc
mov
clc
pop
mov
in
jno
add
sbb
lods
push
lret
sub
push
pop
clc
xchg
testl
add
clc
mov
mov
jo
add
ds
and
add
add
add
add
add
and
add
pop
pop
adc
clc
mov
add
mov
mov
clc
mov
out
btl
mov
add
dec
pop
cmp
dec
cmp
pop
iret
add
add
or
xbegin
add
and
sub
mov
add
cmp
call
test
enter
and
stos
sub
mull
clc
fucomp
add
add
xchg
pop
or
jge
sbb
xor
add
clc
dec
fisttps
cld
cmp
add
push
inc
add
clc
add
add
fisubrs
clc
or
clc
fcoms
xchg
adc
add
add
clc
fwait
dec
mov
push
jbe
std
loope
icebp
adc
add
clc
or
cmp
popf
mov
xchg
jnp
addr16
lahf
cmp
mov
dec
sbb
clc
push
add
call
push
add
mov
cmp
test
clc
cwtl
or
push
xbegin
sub
add
lcall
add
xchg
push
dec
mov
xor
add
add
add
and
add
xchg
call
lret
add
add
imul
pushf
adc
add
adc
add
insb
test
pop
xchg
in
sar
sbb
ja
clc
jne
pop
repnz
add
add
pop
fsts
mov
clc
push
shr
xchg
cmpsl
clc
pusha
add
ljmp
in
addr16
dec
jo
add
mov
pop
sbb
add
jo
add
add
add
cmp
clc
insb
xchg
arpl
add
popa
add
mov
aam
xbegin
mov
lods
outsl
sub
iret
lea
fldenv
add
add
in
aaa
sub
mov
xor
add
add
imul
clc
xlat
pusha
add
add
adc
add
ret
pop
sbb
add
add
add
mov
pop
clc
sbb
inc
add
cwtl
sbb
aas
sub
mov
mov
inc
add
dec
cmp
clc
pusha
add
pusha
add
add
adc
add
sbb
clc
or
lock
and
add
push
xabort
roll
add
add
or
clc
aas
std
clc
xchg
pop
pop
xor
add
in
popa
add
xbegin
mov
cmp
out
xlat
sti
sub
xchg
pop
adc
add
clc
cli
cmpsl
clc
js
repnz
add
movsl
clc
mov
jge
in
or
xchg
pusha
add
test
xchg
movsb
clc
sbb
fdivrs
mov
jecxz
add
adc
add
clc
pop
clc
pop
mov
add
mov
add
add
mov
clc
xchg
and
add
add
and
add
fiaddl
clc
insb
pushf
mov
clc
lea
push
test
mov
rolb
jb
add
dec
int3
sub
inc
add
push
sbb
clc
out
test
aaa
out
js
push
add
bound
add
clc
in
cmp
xor
add
rcrb
test
xabort
add
jb
add
cmp
or
sbb
clc
mulb
clc
jg
clc
leave
fmull
cmp
clc
xchg
roll
clc
sbb
add
das
xor
add
int
clc
xchg
jb
add
into
xlat
dec
jno
add
in
add
add
out
call
addr16
ret
clc
jle
add
adc
xchg
dec
pop
into
xchg
int3
jnp
mov
add
add
mov
stos
int3
loopne
into
addr16
push
clc
cmp
clc
sbb
pop
jno
add
add
add
clc
aas
test
clc
addr16
add
inc
clc
jp
adc
movsl
clc
repz
add
jecxz
daa
clc
xlat
jns
iret
std
or
lea
xchg
cmp
pop
mov
add
add
mov
add
or
or
dec
sub
add
adc
mov
mull
add
xchg
shl
sub
add
inc
clc
jmp
clc
and
add
jb
add
add
imull
or
or
clc
out
xchg
enter
out
push
pop
jno
add
mov
clc
inc
clc
aaa
rclb
cmp
add
hlt
cmp
add
xor
add
mov
clc
test
xchg
dec
mov
repz
mov
add
add
add
add
mov
inc
add
filds
add
popf
adc
add
add
pop
clc
pop
mov
and
add
add
mov
mov
clc
jnp
clc
adc
vmulps
rorl
clc
inc
clc
loopne
dec
adc
add
clc
mov
adc
add
into
dec
stos
lock
lret
push
xchg
fwait
scas
sbb
add
das
inc
add
fsubrs
sub
dec
mov
push
frstor
add
inc
add
repz
add
lea
adc
add
inc
clc
adc
add
push
add
bound
add
cwtl
and
mov
mov
clc
mov
add
aam
cmpsb
clc
cmp
clc
fadds
fwait
jo
add
pop
adc
add
clc
inc
clc
ds
pop
loop
mov
push
data16
aam
pusha
add
scas
cmc
adc
add
push
aad
ret
fimuls
cli
data16
in
jecxz
ds
cmp
sub
int3
ja
in
bnd
mov
clc
xlat
inc
add
push
clc
xor
add
clc
sub
clc
mov
mov
clc
pushf
adc
add
fst
pop
and
add
add
clc
mov
clc
and
add
clc
mov
inc
add
sub
bound
add
add
clc
sub
clc
jg
add
add
clc
clc
adc
add
ljmp
divb
fadd
clc
in
pop
pop
insb
mov
clc
ljmp
clc
cmp
sub
add
cmp
pop
clc
data16
sub
clc
sbb
mov
bound
add
clc
mov
aad
adc
add
sub
push
add
mov
mov
pop
mov
hlt
jno
add
push
clc
xbegin
inc
add
cmc
xabort
sbb
fldt
adc
add
clc
xchg
jge
clc
mov
add
add
scas
clc
ret
clc
cmp
add
int
aad
lock
sub
cmpsb
clc
or
mov
or
add
add
out
aam
clc
xchg
xchg
mov
mov
ja
cmp
lcall
inc
clc
movsl
clc
or
xchg
aad
add
mov
sub
push
push
add
mov
add
xor
add
push
cmp
clc
xchg
xor
add
push
add
lcall
mov
int
jle
pop
insb
fwait
sub
das
adc
add
add
pop
push
sbb
cmp
add
or
clc
test
clc
push
add
xor
add
jmp
mov
ret
ret
clc
rclb
clc
xabort
sar
aam
add
mov
sub
jbe
iret
and
add
outsl
dec
imul
outsl
cwtl
fiaddl
jmp
nop
and
add
mov
add
mov
mov
gs
jge
inc
add
sti
int
loopne
push
clc
dec
mov
repnz
add
clc
sbb
shll
cmp
dec
leave
mov
imul
mov
sar
fmul
je
je
clc
je
push
add
scas
push
add
cmp
das
ret
clc
mov
add
mov
inc
clc
xor
and
add
clc
sub
add
xchg
stc
inc
clc
test
clc
jo
add
cs
imul
add
add
xchg
adc
mov
add
scas
pop
insl
cs
add
sbb
dec
sti
ret
cmp
sti
cmp
mov
jle
clc
filds
loope
test
hlt
inc
clc
faddl
mov
scas
sbb
add
xchg
dec
jle
ljmp
xbegin
add
add
ret
push
clc
sar
icebp
icebp
std
in
jo
add
clc
push
repnz
jp
add
add
push
add
scas
inc
add
adc
add
add
mov
fisttpl
sub
lock
mov
clc
fists
jle
add
mov
clc
sbb
stc
sti
das
adc
add
jle
add
jb
add
adc
add
push
and
add
push
add
cmp
add
push
xor
mov
cmp
and
add
and
push
mov
add
mov
sub
sbb
int
clc
out
pop
sub
xor
add
jno
add
clc
add
add
clc
insb
dec
xchg
xchg
push
mov
push
inc
add
xchg
mov
add
add
mov
clc
cmp
mov
sarb
in
outsb
mov
add
add
clc
sar
clc
sub
add
or
and
clc
cmp
scas
jmp
lret
in
fs
fisttpl
repnz
clc
loope
out
inc
clc
pop
sub
and
mov
cmp
clc
test
or
faddl
add
push
add
push
mov
ds
outsb
adc
lahf
cmp
cmp
ret
clc
dec
in
in
and
add
jb
add
inc
clc
push
inc
add
xchg
xor
dec
jle
outsl
aaa
pop
lock
add
xor
add
or
sar
mov
add
add
pusha
add
int
mov
push
int
mov
add
mov
test
xor
popf
cmp
clc
gs
jmp
add
xor
add
add
dec
xchg
aas
or
cmp
sar
dec
leave
inc
clc
in
das
ret
add
loope,pt
aam
xchg
int
clc
mov
add
pop
lods
or
dec
push
add
test
out
xbegin
mov
fcmovnb
clc
cmp
aas
xor
add
fistps
jle
ret
clc
ffreep
clc
mov
add
pop
clc
add
cmp
out
cmp
data16
inc
clc
push
fsubr
fsubrs
test
out
popf
add
add
clc
or
adc
mov
jmp
clc
movsl
clc
popa
add
push
inc
clc
cmpsl
clc
and
add
daa
clc
push
xchg
fcomp
xlat
test
vmovlps
add
clc
jl
clc
sahf
xor
add
add
or
adc
add
jecxz
mov
add
add
sbb
sbb
mov
clc
xor
mov
das
nop
aam
cmp
add
add
int
insl
imul
clc
psllw
clc
pop
mov
lea
add
pop
xlat
in
jecxz
cli
push
or
aad
clc
jl
clc
outsl
dec
dec
jae
add
clc
or
inc
add
mov
ja
fbstp
cld
cmp
rcrb
test
xabort
clc
rcl
xabort
add
or
clc
int
jo
add
pop
mov
add
stc
xchg
jge
and
add
mov
xchg
mov
push
clc
xabort
sbb
add
mov
mov
out
imull
mov
push
xchg
adc
imul
clc
push
add
inc
clc
pop
pop
sbb
clc
cmp
clc
push
clc
xbegin
push
pop
push
add
out
dec
mov
dec
pop
clc
or
ljmp
push
clc
sub
push
or
jecxz
dec
js
add
inc
clc
dec
cmp
xor
add
addr16
icebp
adc
add
test
and
add
adc
and
add
mov
jno
add
lret
leave
sti
mov
lods
mov
dec
jb
add
adc
add
lock
in
in
ret
push
arpl
add
aam
push
clc
dec
pop
jecxz
adc
add
xor
add
std
fcmovnb
clc
das
fs
lret
xchg
cmp
jge
clc
dec
das
jno
add
add
add
push
lods
cmp
clc
lea
add
insl
mov
loopne
mov
inc
add
adc
add
add
add
add
add
mov
clc
dec
in
jno
add
mov
jmp
clc
ret
clc
iret
mov
pop
pop
clc
in
push
add
pause
out
scas
out
data16
push
in
nop
mov
sbb
xor
xor
add
out
ret
clc
sti
in
sti
fdivs
add
cld
xor
add
push
or
jecxz
popl
add
add
clc
dec
pop
cmc
inc
clc
or
clc
gs
xchg
dec
mov
mov
stos
dec
jo
add
add
adc
fwait
into
push
clc
sub
jno
add
cmp
imul
test
push
add
add
pop
push
add
imul
cmp
clc
push
cmp
add
sar
and
add
sbb
add
cmp
clc
mov
jns
clc
xor
nop
jns
clc
pop
sbb
sub
add
add
xchg
add
add
sub
push
or
add
xor
add
clc
lahf
mov
aad
dec
scas
cmpsl
clc
dec
iret
mov
or
add
clc
xchg
ds
xor
adc
add
push
addr16
sbb
and
jae
add
sub
add
clc
cwtl
dec
clc
jle
mov
adc
add
dec
ljmp
loope
jbe
clc
int
or
add
daa
clc
cs
sar
cli
fdiv
add
add
add
sar
clc
cmp
clc
or
add
adc
add
add
lcall
push
add
fnstcw
into
mov
mov
push
mov
pop
fstpl
and
jne
add
add
add
stc
fcompl
adc
add
clc
int3
testl
clc
int
mov
icebp
xchg
fsubl
add
ljmp
sub
mov
nop
mov
xlat
jns
add
dec
out
popa
add
std
xor
add
clc
jge
addr16
scas
fstps
add
cmp
js
add
aam
dec
notb
pop
jo
add
cmp
add
sbb
add
repz
cmpsb
clc
test
xchg
cwtl
fidivrl
add
xchg
xchg
fmull
dec
sub
sub
mov
mov
xbegin
gs
adc
add
lret
call
dec
clc
xor
clc
lods
jno
add
clc
mov
int3
sub
clc
jae
add
adc
add
cmpsb
clc
loopne
cmp
jbe
clc
int3
xchg
sbb
clc
mov
enter
aad
add
ret
jno
add
clc
imul
xchg
icebp
scas
enter
cld
pop
clc
sub
lret
dec
mov
clc
sbb
idivl
div
pop
clc
push
add
data16
imul
clc
push
clc
pop
pop
adc
add
clc
sbb
add
dec
or
jnp
clc
out
sub
clc
fnsave
dec
push
clc
jae
add
insl
sub
add
rolb
add
aam
divl
add
sbb
xchg
xor
add
gs
cmp
sbb
mov
add
std
pop
cmp
pop
cmp
sub
jo
add
pop
pop
clc
adc
mov
pop
daa
clc
ja
vmovaps
add
sar
add
add
pop
clc
sub
lret
inc
add
dec
jb
add
js
xchg
mov
add
cwtl
lods
push
add
jno
add
clc
xchg
int3
movsb
clc
sbb
mov
cmp
mov
jmp
fcompl
pop
ja
mov
cmp
mov
push
add
lods
daa
clc
adc
add
jnp,pt
clc
mov
add
add
cmpsb
clc
loopne
jle
xbegin
add
sbb
adc
add
inc
add
mov
add
out
mov
and
mov
xchg
fiadds
jge
clc
stc
icebp
scas
out
jecxz
aad
add
mov
clc
ret
clc
data16
jo
add
add
add
add
mov
sbb
add
into
clc
fmulp
push
cmp
and
add
add
add
add
clc
push
mov
nop
adc
add
push
add
jbe
sbb
dec
xabort
enter
mov
mov
ds
push
add
jae
add
add
jge
into
nop
movsl
clc
inc
add
imul
add
movsl
clc
repnz
clc
das
jp
in
js
and
add
clc
getsec
xchg
and
add
test
clc
add
xchg
mov
clc
jae
add
add
add
jge
add
jle
sbb
add
rcrb
clc
pop
mov
add
pop
push
xor
sbb
je
std
das
int
clc
push
aaa
kmovw
movsl
clc
and
xchg
sub
cld
int3
movsb
clc
cmp
sub
clc
mov
dec
mov
pop
clc
stos
aas
aad
clc
pop
lock
mov
clc
push
ffree
clc
push
add
pop
pop
pop
xor
add
jg
fs
pop
clc
jecxz
mov
add
clc
add
add
add
add
sar
clc
bound
add
mov
push
pop
insb
xchg
mov
clc
push
add
scas
imull
add
add
add
and
add
add
jecxz
outsb
mov
mov
test
sub
clc
and
add
jbe
xabort
cmp
add
insl
jb
add
add
add
jecxz
xchg
out
sub
cmp
gs
outsl
xor
add
fists
add
es
mov
add
mov
jl
jle
clc
js
ja
clc
mull
add
stos
insl
cmp
pop
sbb
hlt
dec
cwtl
outsb
push
xor
add
add
cmp
sub
cmp
data16
add
add
and
add
add
mov
lahf
push
push
sub
jne
clc
test
mov
imul
or
mov
push
add
inc
add
jbe
inc
add
xchg
adc
add
cmp
clc
xbegin
clc
mov
loope
push
push
adc
add
add
in
stos
mov
das
lods
scas
jmp
mov
clc
push
into
sub
add
imull
and
mov
cmp
sti
mov
ss
cmp
mov
add
bound
add
mov
stos
mov
adc
mov
jl
push
add
data16
pop
in
pop
int
and
add
push
add
mov
clc
push
idivb
mov
add
ja
out
cmc
xor
add
add
popf
inc
clc
inc
clc
jbe
out
repz
ja
pop
lret
push
adc
jg
in
push
mov
insl
je
clc
fimull
add
popf
push
clc
mov
cmp
sti
scas
lods
popa
add
arpl
add
adc
add
shlb
xchg
jb
add
cmp
add
cmp
clc
outsl
cltd
add
aam
fdiv
push
test
aas
xchg
nop
xor
pop
out
mov
scas
jns
jmp
add
add
adc
add
clc
push
pushf
addr16
popf
cli
push
sbb
test
je
jbe
adc
cli
mov
add
add
add
inc
add
sbb
jns
xchg
xbegin
sar
fs
xchg
xor
add
clc
popa
add
mov
clc
test
pop
and
add
add
aam
adc
add
xchg
or
add
clc
das
das
and
pop
clc
js
bound
add
add
add
out
add
imulb
add
add
vxorps
ja
add
push
add
cmp
lahf
sub
add
push
mov
test
add
xchg
sbb
clc
dec
sbb
add
push
xchg
add
sar
add
fcoml
push
xlat
mov
add
xchg
cmc
pushl
add
out
data16
imul
inc
add
inc
clc
jns
cmp
add
mov
roll
add
lea
add
clc
fst
push
pop
mov
call
add
add
jne
add
adc
add
mov
mov
add
cmp
sbb
xchg
push
clc
sbb
inc
add
pop
jl
in
in
sbb
cs
xchg
cmp
es
mov
sub
or
mov
cwtl
and
add
mov
jne
dec
cmp
adc
add
cmc
pop
pop
adc
add
add
add
mov
inc
add
ficoml
add
or
mov
sub
add
mov
clc
lock
sbb
add
fcmovnu
xor
add
add
fadd
clc
push
add
ja
clc
xchg
ret
clc
pop
pushl
add
sbb
ljmp
dec
out
xor
sub
scas
outsb
and
add
xor
scas
or
add
add
add
adc
add
sub
add
push
add
mov
sbb
in
lahf
mov
pop
push
mov
out
sub
or
clc
or
add
daa
clc
hlt
xor
add
clc
imul
push
add
cmp
clc
mov
mov
add
sbb
lret
inc
clc
cmp
push
push
push
add
cmp
add
jne
clc
sbb
repz
clc
cltd
xbegin
clc
or
clc
icebp
test
nop
cmp
and
add
add
pop
clc
cmp
cmp
clc
jo
add
jl
cmp
aam
mov
lret
loope
xbegin
mov
add
add
int
clc
cs
clc
dec
pop
loope
mov
lods
pusha
add
stc
pop
pop
jno
add
imul
xor
add
inc
clc
jo
add
dec
sbb
adc
add
add
pop
clc
xbegin
dec
insl
iret
pop
clc
inc
clc
and
add
mov
mov
add
add
add
pop
aaa
adc
add
test
or
cs
adc
add
add
add
das
or
mov
jl
sbb
xor
add
clc
sub
lods
cmp
inc
add
unpckhps
add
enter
dec
out
xchg
fwait
addr16
jmp
arpl
add
mov
popf
xchg
sub
pop
add
clc
xchg
mov
aad
add
jle
sub
rcrl
sub
add
int
xchg
mov
mov
inc
clc
mov
inc
clc
mov
add
jnp
jo
add
shll
add
das
sahf
vmovaps
add
fwait
pop
jnp
sub
nop
mov
jno
add
clc
pushf
cltd
mov
sub
hlt
cmp
clc
jo
add
mov
fistl
add
mov
loop
dec
pop
fs
fcoms
add
std
shrl
rcl
cmp
add
add
mov
add
push
add
add
add
mov
dec
cmp
lock
ja
fldenv
in
push
out
lods
cwtl
loope
mov
or
add
or
jae
add
loop
mov
add
in
xlat
jg
into
sub
arpl
add
clc
push
clc
cmp
arpl
add
mov
or
pop
call
mov
clc
mov
dec
jb
add
add
out
xchg
pop
leave
stos
dec
or
jle
ret
clc
punpcklwd
add
std
pop
out
or
mov
nop
mov
pop
jl
clc
mulb
xchg
inc
add
cmp
clc
or
or
add
aad
clc
mov
clc
push
add
lock
add
rclb
pop
mov
fwait
cmp
clc
enter
add
and
add
jmp
sti
sub
add
sti
fistl
sub
add
mov
dec
cmp
stc
xor
in
mov
clc
fistps
outsl
xchg
add
add
push
add
sub
xchg
imull
cmp
insl
lods
mov
or
clc
push
pop
clc
adc
add
xor
add
add
cmp
out
daa
clc
mov
mov
clc
pop
sbb
push
add
mov
push
out
cmp
dec
push
add
cli
xor
clc
lret
mov
jp
add
and
add
add
add
add
fistpll
add
push
xchg
aam
ds
sar
cld
into
xchg
push
xbegin
add
mov
sarb
scas
mov
mov
xlat
dec
sub
fs
pop
test
add
add
arpl
add
clc
in
sbb
add
ret
jne
jno
add
cmp
clc
mov
aam
cli
xlat
xor
add
dec
mov
add
ret
clc
in
and
add
jmp
insb
es
mov
das
call
repz
push
add
jg
pop
fcompp
rcll
mov
clc
cmp
repz
mov
clc
fisttpll
add
xchg
jnp
xor
add
dec
or
dec
mov
rclb
inc
clc
mov
adc
add
test
xchg
inc
clc
inc
clc
hlt
sbb
add
lcall
add
add
xchg
adc
add
cmpsl
clc
testb
mov
clc
push
add
xchg
fimull
mov
dec
push
xchg
fnstsw
outsb
insl
mov
mov
mov
xchg
aas
mov
clc
xchg
data16
fs
fnstenv
enter
movsb
clc
mov
or
cmp
test
clc
cmp
add
xor
add
and
add
cmp
clc
test
pop
xlat
and
add
clc
and
add
mov
scas
add
clc
jbe
insl
hlt
addr16
pusha
add
cmp
pop
test
pop
push
mov
add
cwtl
jne
add
lods
jle
pop
out
cmp
jo
add
xchg
or
add
push
clc
mov
scas
mov
inc
clc
clc
add
add
sbb
mov
dec
pop
clc
sbb
frndint
sar
clc
cmc
mov
jl
sub
clc
clc
leave
into
std
aaa
data16
bound
add
mov
jp
bound
add
add
das
std
test
inc
add
jb
add
add
mov
fstpl
lea
add
pop
sar
repz
clc
sub
xchg
mull
add
add
jbe
into
sbb
clc
push
pushl
mov
inc
add
mov
add
sub
xchg
adc
add
add
add
add
icebp
data16
cmp
clc
jbe
add
or
add
add
add
add
xchg
icebp
inc
clc
pop
push
and
sar
sbb
xlat
rcrb
sti
xor
add
inc
clc
mov
sbb
jae
add
xor
sbb
add
js
add
dec
pushf
mov
insb
gs
stc
cmpsb
clc
lahf
fldenv
sbb
cmp
lea
cli
sbb
shr
cmp
clc
iret
jge
aas
sub
clc
and
add
add
repz
jne
push
cmp
add
pop
clc
sti
lret
mov
mov
add
mov
clc
or
repz
out
movsb
clc
cmp
in
inc
clc
shr
mov
or
pop
out
cmp
add
int3
inc
add
push
add
mov
jl
add
repz
leave
test
or
mov
pop
xlat
int
inc
add
xlat
in
cltd
cmp
push
inc
clc
add
add
movsl
clc
mov
cmp
and
add
leave
test
jmp
clc
movsl
clc
lea
xor
add
clc
aas
mov
bound
add
jbe
mov
add
push
push
es
and
add
xchg
push
mov
clc
js
mov
clc
pop
cld
inc
add
pop
bound
add
mov
nop
dec
lods
ljmp
adc
add
add
out
imul
add
das
xor
clc
sti
dec
inc
add
lea
bound
add
lods
cmp
adc
add
test
push
add
repnz
adc
add
iret
push
in
fldl
clc
clc
pop
pop
fwait
adc
add
mov
sar
inc
add
pop
scas
add
add
jno
add
outsb
enter
in
enter
dec
movsl
clc
ss
pop
sar
add
cs
test
cmp
ds
add
mov
sbb
lcall
add
clc
mov
push
pusha
add
sub
inc
add
cmp
clc
inc
clc
xchg
and
movsl
clc
mov
add
pushf
sbb
sub
mov
sbb
in
out
add
cmp
add
dec
dec
fisttpll
mov
gs
mov
lea
add
dec
stc
lcall
add
in
sbb
xor
add
cmp
clc
in
mov
mov
stos
ficompl
or
cmp
or
clc
push
add
inc
clc
xor
add
add
jg
adc
add
add
out
xlat
xor
add
mov
mov
rcll
adc
add
clc
fwait
imul
dec
xor
add
pop
add
add
cmp
add
pop
arpl
add
and
in
enter
aad
jns
xchg
mov
clc
dec
ret
clc
sub
mov
pushf
or
ljmp
leave
jns
clc
out
cmp
or
sahf
fidivl
fwait
pop
adc
add
push
cmp
or
mov
jl
enter
clc
iret
cltd
pop
clc
add
push
add
pop
popa
add
cmpsb
clc
push
clc
sbb
clc
inc
add
mov
clc
or
clc
inc
clc
jg
sub
add
xchg
ss
mov
add
int3
jmp
clc
push
add
mov
cli
pushf
cwtl
pop
in
sar
dec
xchg
test
lods
lcall
out
sbb
push
pop
sbb
das
jecxz
xchg
clc
aam
mov
add
jnp
add
dec
inc
clc
pop
jmp
imul
clc
xor
add
add
adc
add
clc
icebp
push
add
cwtl
mov
dec
addr16
mov
clc
jl
and
fisttpl
jnp
cmp
clc
sub
loopne
stos
hlt
fbld
add
add
lahf
aas
and
add
clc
jne
mov
and
add
add
jmp
add
loopne
sub
add
or
inc
add
lret
jp
cmp
add
leave
mov
cmpsb
clc
xchg
sti
imul
sub
jmp
nop
daa
clc
jb
add
add
clc
jp
ds
ss
fiadds
clc
add
add
mov
mov
jne
jnp
push
add
mov
ret
clc
adc
add
jle
sub
clc
js
sub
inc
add
inc
add
inc
add
sti
cld
sub
insb
scas
xabort
mov
add
test
jl
pusha
add
rcl
in
mov
or
mov
in
fstl
aaa
mov
cmpsb
clc
pop
iret
add
add
clc
adc
add
adc
add
fisubl
add
sbb
clc
cmp
clc
mov
add
ds
dec
add
add
mov
incb
cmp
test
lock
in
dec
jmp
data16
sbb
inc
add
movsl
clc
xabort
mov
xchg
cmp
push
mov
icebp
and
add
add
clc
in
fwait
int3
repz
outsl
xchg
addr16
sbb
jmp
clc
cs
fcoms
add
xlat
or
push
pushf
or
xor
add
lods
imul
sub
push
pop
aaa
mov
push
add
pusha
add
movsl
clc
sahf
shlb
add
jp
inc
clc
and
add
xor
xor
add
lahf
repnz
imulb
clc
nop
jno,pt
add
add
cmp
fildl
or
vmaxps
pop
fbld
add
insb
push
rcrl
add
test
jno
add
add
add
sub
clc
xchg
add
add
cs
add
fwait
ljmp
es
fldcw
and
add
lahf
fistl
clc
sbb
add
test
dec
add
add
or
or
add
lods
jecxz
mov
stos
lcall
clc
sbb
or
cmpsl
clc
mov
pop
adc
add
or
mov
sbb
add
and
dec
nop
movsb
clc
stos
cmp
add
mov
sbb
pop
clc
xchg
add
add
mov
out
pushf
movsb
clc
and
add
or
jg
fdivrs
call
je
scas
out
push
cmpsb
clc
repz
add
clc
xchg
mov
sar
xor
add
mov
cmp
repz
arpl
add
sub
pushf
xchg
xor
cli
cmp
clc
xor
add
clc
int3
dec
enter
in
hlt
lret
jp
add
cli
jo
add
mov
sarb
imul
push
add
enter
jge
clc
jb
add
add
add
xor
add
insb
xor
adc
clc
push
push
xabort
clc
mov
cs
stc
lret
add
mov
inc
add
mov
clc
shl
lea
sub
add
cmp
in
mov
rcr
jecxz
jne
daa
clc
repnz
jge
add
cmp
clc
xchg
jae
add
int
lret
fwait
sar
adc
add
movsb
clc
sbb
cmpsb
clc
fistpl
dec
pop
cmc
scas
shrl
cmp
clc
cmp
add
dec
sbb
inc
add
frstor
add
xchg
jg
das
mov
dec
loopne
inc
clc
pop
sahf
add
cltd
xabort
jle
aad
clc
dec
mov
clc
es
add
add
clc
addr16
stc
inc
clc
cmpsb
clc
xchg
repnz
jne
bound
add
add
mov
clc
es
cwtl
mov
cmpsb
clc
std
imul
add
mov
add
cs
cmp
sub
add
push
dec
fsubrp
sub
rcl
fdivs
dec
outsb
dec
mov
xor
add
clc
dec
push
scas
leave
add
mov
or
mov
xchg
mov
add
pop
and
add
add
mov
stos
movsl
clc
push
add
push
add
xchg
sub
cmp
add
pop
hlt
inc
add
jns
add
adc
add
fisttps
loopne
jg
dec
adc
add
fldl
add
push
ret
add
mov
clc
jge
repnz
xchg
aaa
rol
clc
arpl
add
pop
mov
jne
cmpsb
clc
cmp
fcoms
add
add
add
and
aad
lock
add
mov
clc
inc
add
cmpsl
clc
mov
add
scas
in
cmpsb
clc
aad
inc
add
fdivrp
and
or
popf
clc
cmp
ds
clc
push
mov
ret
clc
or
or
clc
loop
scas
cmp
add
clc
sbb
add
sub
adc
jno
add
add
je
repnz
add
negl
jmp
add
mov
clc
xor
add
jmp
add
and
add
pop
mov
jbe
das
dec
stos
sub
jno
add
call
fidivrl
clc
aam
std
out
mov
add
pop
lcall
out
in
cli
mov
push
mov
test
pop
jb
add
push
add
daa
clc
lret
jne
cmpsb
clc
xlat
xbegin
add
cmpsl
clc
add
add
clc
cmp
sbb
mov
mov
mov
clc
sub
add
ret
iret
mov
clc
cwtl
divl
add
pop
or
cmp
clc
or
in
mov
jns
inc
clc
pop
clc
push
clc
hlt
test
ror
jnp
clc
and
add
push
add
std
fidivrs
cs
pop
mov
clc
aad
clc
or
jno
add
clc
xbegin
add
dec
movups
add
add
add
cmp
clc
mov
out
dec
nop
daa
clc
jp
in
cmp
add
inc
add
sub
xor
add
lods
cmp
sub
add
clc
into
iret
out
popa
add
adc
jle
pop
ss
mov
add
mov
pusha
add
je
test
adc
nop
jne
gs
in
cmp
add
into
and
add
xchg
xor
in
iret
jmp
jp
adc
add
insl
push
add
add
pop
inc
add
lret
mov
daa
clc
xchg
mov
add
sti
sbb
clc
ja
mov
add
lret
daa
clc
dec
mov
sbb
clc
xchg
add
call
add
cmc
xbegin
add
cs
mov
dec
decl
sbb
push
mov
cld
cmp
add
clc
repz
add
add
push
clc
xchg
mov
clc
aaa
hlt
loope
jno
add
loope
pusha
add
sub
add
add
cmp
leave
mov
ja
jle
add
je
add
fnstenv
bound
add
push
add
movsl
clc
sar
addr16
and
add
jae
add
es
je
add
xchg
das
cmp
dec
or
ret
mov
push
add
cmp
es
jb
add
add
clc
sbb
mov
cmpsb
clc
mov
clc
mov
add
ret
clc
iret
cwtl
xchg
cmp
mov
pop
dec
pop
sarb
push
repz
add
add
pop
inc
add
shlb
add
add
mov
imul
sbb
movsl
clc
adc
jno
add
mov
jecxz
or
mov
add
add
add
jge
clc
jae
add
pop
ss
in
adc
add
add
add
jle
and
popf
mov
mov
xchg
into
dec
sar
xbegin
adc
mov
mov
icebp
jo
add
or
fadds
push
add
sti
arpl
add
clc
pop
mov
add
add
mov
gs
loopne
xchg
jge
movsb
clc
mov
add
add
dec
ljmp
sbb
clc
cmp
add
cmp
mov
out
lret
jp
clc
movsl
clc
jbe
cmp
add
add
add
loop
pop
jns
in
fs
mov
add
jbe
cmpsb
clc
pop
jnp
add
or
fstp
push
pop
lret
sub
sbb
inc
clc
push
or
add
jne
xor
add
push
add
sub
or
imul
jmp
add
aaa
std
sar
add
pushf
inc
add
xchg
and
add
icebp
ja
inc
add
insb
aas
and
add
inc
add
je
test
lods
ds
int
inc
add
stc
shll
add
add
clc
dec
in
insb
pop
or
add
add
add
pusha
add
and
lcall
push
add
mov
clc
push
mov
adc
add
add
mov
clc
stos
test
jb
add
data16
fnstcw
and
shll
add
es
shlb
aad
clc
int3
daa
clc
xchg
cltd
repz
push
fwait
sub
mov
add
adc
add
in
pop
push
add
cmpsb
clc
into
jns
clc
xor
add
adc
scas
adc
add
add
or
mov
sub
add
pop
clc
out
inc
add
sub
and
add
add
add
add
outsl
adc
iret
xlat
add
insl
es
insl
lcall
cmp
xchg
addr16
or
push
xchg
sbb
clc
cmp
add
xor
add
adc
add
xchg
sub
push
clc
fadds
clc
push
ljmp
dec
mov
clc
xor
rcl
aad
push
lods
sbb
add
push
xchg
insl
rolb
add
xabort
mov
rorb
clc
push
add
push
add
add
add
ljmp
imul
frstor
mov
lret
ficoms
sub
jbe
clc
bound
add
clc
jmp
add
iret
or
and
add
jp
pop
sub
emms
clc
mov
mov
or
clc
jl
add
push
clc
mov
std
cmp
dec
or
ljmp
clc
adc
add
clc
push
add
cmp
push
mov
clc
sbb
pop
rcll
test
pop
mov
and
add
clc
xabort
clc
add
add
lret
mov
sub
mov
adc
add
fbld
mov
add
jl
ljmp
sub
clc
sbb
mov
in
mov
clc
push
mov
clc
or
add
inc
add
mov
sar
mov
sahf
int3
arpl
add
out
xlat
js
mov
dec
cmc
mov
jle
clc
pop
clc
cmp
add
inc
clc
aas
mov
add
add
add
add
add
add
clc
in
repz
adc
add
or
fs
fdivl
add
sub
clc
test
adc
add
add
add
cmp
push
dec
mov
inc
add
or
pop
das
ss
mov
xchg
test
mov
clc
mov
inc
add
xchg
sti
pop
mov
mov
clc
std
adc
add
enter
clc
daa
clc
dec
imul
cmp
add
pushf
mov
pushf
test
test
jae
add
add
pushf
dec
pop
clc
insb
pop
in
xchg
pop
mov
mov
cmpsb
clc
sahf
iret
add
add
dec
in
mov
jne
jb
add
pop
std
cmp
adc
add
mov
mov
push
loope
jae
add
mov
clc
cmp
clc
add
add
cmp
clc
lock
fwait
mov
add
clc
fsubs
add
add
add
cmp
add
pop
aam
fnstsw
mov
push
add
jmp
pop
arpl
add
cld
daa
clc
gs
enter
sbb
clc
inc
add
sbb
imul
mov
sub
addr16
fwait
sahf
in
mov
lret
mov
mov
sbb
clc
xchg
cmc
add
add
add
clc
cmp
xor
add
add
inc
clc
scas
clc
out
pop
inc
clc
sub
clc
fstl
add
push
iret
xchg
cmp
inc
clc
sub
cmp
clc
aad
add
push
dec
pop
sbb
jne
clc
stos
cmp
mov
and
add
add
or
xchg
mov
add
inc
add
sbb
add
add
add
clc
inc
clc
adc
and
add
cli
loop
push
mov
nop
jmp
mov
add
ret
clc
loop
pop
cmpsb
clc
and
mov
nop
inc
clc
dec
outsl
fldcw
mov
add
jge
xchg
sar
sbb
cmp
cmp
jo
add
add
pop
mov
out
dec
lcall
cmp
fs
dec
outsb
stos
jno
add
jmp
add
scas
sbb
jg
repz
add
clc
add
add
push
js
clc
xchg
sbb
mov
nop
jmp
xor
dec
out
test
inc
call
add
in
arpl
adc
add
mov
clc
push
add
cmp
dec
sahf
mov
add
add
clc
nop
mov
pop
loop
insl
arpl
add
add
cmp
adc
add
nop
jmp
cmp
lahf
test
cmp
xchg
adc
add
add
clc
sbb
or
add
cltd
test
mov
jge
outsb
js
inc
add
push
add
mov
jge
imull
pop
cli
xchg
test
add
pop
dec
hlt
loop
add
mov
clc
enter
clc
inc
clc
sbb
or
jmp
pop
xor
arpl
add
mov
rclb
inc
add
clc
mov
jnp
loop
nop
dec
mov
jno
add
push
add
cmp
cmp
pushl
nop
jmp
mov
test
add
sbb
add
add
test
clc
cmp
add
dec
xor
add
add
add
xchg
adc
clc
testb
clc
xor
add
xor
add
ret
mov
aas
and
add
fistpl
add
pop
sar
fmull
clc
fwait
shlb
add
dec
pushf
jl
clc
mov
dec
mov
pop
sbb
clc
mov
clc
aad
loopne
out
testl
add
and
add
xlat
jp
xchg
test
pop
js
pusha
add
pop
cs
clc
lret
jno
add
clc
daa
clc
push
call
popa
add
inc
add
jle
xchg
or
inc
add
clc
jmp
nop
jmp
test
mov
clc
mov
jecxz
add
add
add
add
add
pop
push
lret
add
add
pusha
add
js
pushf
ret
clc
hlt
sar
popa
add
or
clc
xor
idivb
clc
ljmp
clc
jne
push
jp
aaa
data16
mov
int
add
cmp
xor
add
decb
adc
add
and
pop
xchg
xabort
cmp
clc
pop
mov
or
in
inc
clc
lcall
clc
lock
add
dec
jnp
clc
mov
clc
and
add
popf
and
xchg
mov
clc
sub
into
sbb
push
test
add
add
add
mov
xchg
or
and
add
clc
popa
add
insb
in
ss
scas
sub
add
loopne
lret
fiadds
add
mov
sti
mov
jecxz
sub
fsubp
clc
fs
cmp
pushf
xchg
ds
add
nop
jmp
dec
adc
push
add
mov
fidivs
push
lret
sbb
nop
jmp
repz
mov
clc
jb
add
and
adc
mov
add
inc
clc
mov
and
pop
outsl
or
mov
jmp
test
push
nop
inc
add
repnz
add
lea
add
clc
add
dec
sbb
clc
scas
add
add
repnz
xchg
imul
and
add
out
in
aad
sarl
pop
clc
and
and
movsl
clc
dec
xchg
es
jl
out
or
pop
mov
loop
mov
add
xchg
loope
incl
jmp
xchg
sbb
mov
int3
or
mov
lea
xbegin
and
add
std
mov
dec
cltd
ret
loopne
in
mov
ljmp
nop
jmp
add
xor
add
dec
cmp
jbe
add
mov
push
push
mov
xchg
ret
add
lods
cmp
mov
stos
sar
xbegin
mov
rorl
in
mov
fldt
push
cmp
cli
test
jp
add
jo
add
mov
clc
adc
add
add
sbb
mov
in
lea
clc
adc
add
add
push
and
add
aaa
pop
push
notb
cmp
mov
xchg
ret
outsb
cs
cmp
jge
add
inc
add
ss
clc
pop
mov
aas
or
add
sbb
add
add
push
clc
vcomiss
inc
clc
test
sbb
mov
pop
clc
dec
xchg
lea
rcrb
clc
and
add
xchg
aam
and
add
sub
pop
mov
clc
loopne
std
mov
add
sbb
mov
dec
mov
add
lods
cmp
pop
xor
add
and
add
add
add
push
or
dec
mov
jne
add
mov
clc
fistpll
mov
add
add
sub
inc
clc
jne
setbe
cli
add
out
mov
add
xchg
icebp
into
jns
or
clc
or
add
daa
clc
int3
pop
daa
clc
out
out
jbe
clc
int
xlat
sar
addr16
mov
dec
js
adc
add
add
sbb
add
add
imul
sbb
add
sbb
dec
mov
mov
jmp
mov
add
add
add
je
or
inc
or
add
add
test
sar
clc
mov
clc
jle
mov
cmpsl
clc
lock
add
add
add
pop
lock
push
test
nop
jmp
scas
fwait
sbb
pand
clc
mov
dec
xchg
aaa
outsl
dec
cmp
add
pop
aam
push
mov
nop
jmp
add
mov
add
stc
push
add
and
jnp
add
scas
icebp
cmpsl
clc
adc
add
xabort
into
xlat
mov
lods
fistl
add
pop
clc
clc
fimull
mov
and
add
pop
pop
and
stc
or
clc
mov
leave
push
mov
xchg
ret
call
inc
add
test
mov
mov
cmpsl
clc
mov
clc
movsb
clc
jne
nop
jmp
push
lods
add
or
jo
add
add
and
add
fcom
mov
clc
dec
stc
cmp
clc
lahf
sahf
scas
add
add
or
jl
jns
fisttpl
inc
add
xbegin
call
clc
sbb
jno
add
clc
dec
mov
add
nop
jmp
into
jle
sbb
add
jl
add
sub
inc
add
jl
add
cli
jae
add
and
add
add
mov
je
clc
xor
add
clc
data16
xchg
or
add
pop
shr
adc
add
add
sub
clc
jge
clc
inc
add
sbb
clc
mov
add
add
aad
clc
lea
jmp
dec
lods
add
jle
fildl
add
adc
add
add
add
add
nop
jmp
cmp
add
clc
pop
add
add
aad
clc
or
jp
into
or
mov
mov
data16
das
popa
add
push
clc
push
imul
and
jmp
xchg
ss
add
lret
add
mov
clc
test
mov
daa
clc
push
add
push
clc
ret
clc
cmc
xchg
jae
add
sbb
js
test
decl
xor
add
pop
test
add
je
add
inc
clc
sbb
clc
movsb
clc
mov
in
ds
setbe
add
in
mov
add
shlb
sbb
mov
outsb
cmp
adc
inc
add
xchg
mov
add
add
clc
gs
mov
pop
and
add
or
mov
add
clc
mov
xchg
je
call
movups
add
mov
adc
push
add
nop
jmp
dec
add
clc
dec
xchg
pushf
add
add
mov
mov
push
lock
mov
add
jmp
mov
mov
add
clc
push
or
mov
xchg
push
add
data16
push
add
aam
into
inc
add
data16
call
clc
pop
fidivs
pusha
add
rcrb
ret
nop
jmp
push
lods
repz
dec
jge
inc
add
xchg
xchg
lods
xor
add
add
push
add
mov
cmpsb
clc
mov
push
add
xchg
push
clc
shrl
inc
clc
inc
clc
pop
pop
xabort
clc
add
add
ss
and
add
xor
add
pop
pop
push
mov
cmp
push
mov
xchg
ret
pop
jle
add
pop
je
idiv
xchg
cmp
pop
mov
vmovups
add
add
nop
jmp
xchg
add
leave
clc
xor
add
sub
sar
clc
mov
clc
push
push
add
daa
clc
movsl
clc
and
lods
fwait
sub
jmp
jne
scas
test
dec
mov
insb
xor
adc
add
xchg
sub
xor
add
clc
in
jnp
clc
mov
fmull
mov
das
test
mov
add
add
sbb
pop
clc
shll
cmp
clc
xor
add
adc
add
xor
add
jb
add
ret
add
gs
or
test
enter
push
push
nop
jmp
imul
call
xor
add
add
xor
leave
or
add
adc
add
push
add
mov
xor
add
add
or
clc
xchg
fmull
fiaddl
lock
clc
stos
or
mov
add
nop
jmp
dec
dec
dec
cmp
add
add
js
dec
jmp
add
or
add
addr16
or
add
out
sub
clc
mov
clc
jo
add
das
in
test
rcll
lret
nop
jmp
sub
jne
repz
into
xchg
dec
mov
add
sbb
jmp
dec
hlt
add
fstpt
sbb
add
or
or
pop
test
inc
add
fnstcw
mov
movsl
clc
clc
lret
add
mov
mov
nop
jmp
push
in
aaa
incl
add
add
add
enter
mov
add
or
xor
add
clc
mov
jo
add
add
nop
jmp
arpl
sbb
div
gs
cli
cmpsl
clc
jmp
fucomip
adc
sub
xabort
lret
add
add
dec
cmp
cmp
clc
in
std
sahf
sbb
hlt
pop
pop
bound
add
dec
or
add
add
jbe
add
pop
jne
clc
repnz
dec
outsl
xabort
int3
stos
dec
jmp
add
add
pop
xor
int3
adc
add
inc
add
lret
cmp
fimuls
das
daa
clc
or
faddl
xlat
xchg
xlat
clc
popf
movups
add
add
mov
fistpl
and
add
int
lock
inc
clc
dec
mov
add
in
jl
push
int
adc
add
cltd
sar
add
xabort
mov
jno
add
adc
add
clc
cmc
jg
jge
clc
inc
add
xor
add
sbb
xchg
insl
inc
clc
ja
add
inc
add
cwtl
fdivrs
cmp
rcrb
adc
add
clc
scas
push
add
dec
push
sbb
popa
add
sub
pusha
add
mov
pusha
add
test
jmp
clc
xchg
jg
dec
push
clc
mov
add
jl
add
lea
add
add
lods
xabort
cmp
dec
cmp
add
js
mov
cld
sbb
sbb
add
add
add
nop
jmp
repz
xchg
dec
push
push
sarb
cmp
jl
clc
xchg
enter
inc
clc
add
add
test
mov
or
add
cmp
ss
add
add
scas
adc
add
insb
xor
add
nop
jmp
add
push
jbe
add
push
jmp
jne
cmp
cmp
sbb
sahf
pop
clc
push
add
cmp
out
pop
dec
shlb
xlat
stos
pop
loopne
das
idivb
add
nop
jmp
jle
mov
clc
adc
add
add
dec
push
sbb
js
lods
inc
add
pusha
add
jns
push
add
in
in
push
scas
jge
clc
add
add
fcomps
add
ret
clc
add
add
pop
dec
in
shrb
adc
add
sbb
pop
pop
and
add
add
cli
fdivrs
rorb
xchg
jecxz
sarb
sub
add
in
or
clc
test
jl
add
jbe
nop
fs
pop
clc
sbb
add
sub
jmp
sub
clc
sub
jb
add
inc
add
nop
jmp
sub
add
clc
jecxz
iret
in
nop
cmp
loope
in
popf
add
add
add
loop
or
push
add
divl
mov
jmp
clc
and
jg
add
and
add
cmpsl
clc
call
faddl
xchg
dec
mov
mov
clc
fsubr
lret
push
inc
add
sar
add
mov
nop
adc
add
xbegin
add
cmp
pop
mov
push
clc
mull
add
xor
add
add
add
nop
jmp
dec
scas
xchg
clc
sbb
aas
sbb
add
in
xchg
lcall
jmp
clc
repz
xor
nop
jmp
dec
ss
add
incl
add
stos
testb
mov
cmp
je
clc
ss
add
add
add
jl
xchg
fs
fcompl
clc
jg
inc
clc
adc
add
test
jno
add
loope
dec
int
clc
fnstcw
xbegin
add
or
clc
pop
mov
mov
jecxz
or
add
clc
adc
add
mov
xor
add
clc
pop
stc
and
add
clc
xchg
cmp
dec
pop
sub
push
shll
jecxz
xchg
pop
fists
add
clc
fildl
push
add
adc
fldt
sbb
clc
stos
out
popa
add
stos
mov
add
push
arpl
add
jp
clc
into
gs
ret
clc
daa
clc
push
add
dec
jbe
add
cmp
add
jno
add
pop
clc
test
inc
clc
ficompl
add
dec
and
cs
xor
add
adc
add
lcall
jmp
dec
test
dec
sbb
into
push
cmp
jmp
push
sbb
dec
mov
sar
cli
dec
stos
or
add
cwtl
jnp
test
int3
clc
mov
or
add
insl
pop
add
aad
dec
cmp
add
cmc
fwait
aas
xor
add
add
incl
dec
cmp
jmp
mov
jbe
cs
clc
cmp
add
jae
add
cmp
jmp
pop
add
sbb
jbe
mov
lock
push
int
clc
inc
clc
push
add
nop
jmp
add
repz
xchg
mov
adc
add
clc
add
add
nop
xabort
mov
clc
int3
test
das
mov
nop
jmp
ss
push
dec
xor
clc
call
clc
adc
add
pop
sarb
add
lret
mov
nop
jmp
add
stc
xor
add
xabort
insb
xchg
cld
push
add
nop
jmp
repz
fs
clc
jge
mov
push
add
adc
add
clc
loope
dec
xor
add
add
add
sub
add
push
mov
testb
clc
cmp
mov
jno
add
icebp
mov
xor
add
dec
sbb
dec
nop
jmp
mov
sub
sbb
sub
push
mov
xchg
ret
fs
add
pop
cmp
imulb
insl
repz
add
insb
pop
mov
add
jb
add
lods
jns
scas
sub
sahf
sahf
idivl
add
mov
fisubrl
fnsave
add
clc
push
adc
add
cltd
aaa
lods
add
clc
in
sar
clc
aam
dec
sub
mov
add
adc
add
fildll
add
aad
xchg
mov
testb
je
inc
clc
roll
add
add
in
fisttpl
sub
bound
add
add
es
pop
into
addr16
adc
add
sbb
dec
stos
aad
movsb
clc
xor
add
pop
movsb
clc
mov
std
nop
out
inc
add
inc
add
or
clc
loop
xchg
enter
add
enter
clc
es
in
out
dec
outsb
push
data16
add
push
dec
sub
cmp
push
mov
xchg
ret
mov
mov
add
or
inc
clc
roll
fcompl
xchg
lods
inc
add
pop
jae
add
mov
or
clc
or
or
add
scas
dec
jnp
add
mov
test
jo
add
xor
add
add
or
add
add
clc
leave
lcall
je
cmp
hlt
sbb
jmp
xchg
add
lods
add
sbb
cmp
push
mov
xchg
ret
dec
sbb
xchg
nop
sub
sub
add
add
mov
xlat
sti
test
pop
mov
clc
push
clc
xbegin
das
xor
add
vucomiss
cmc
test
pop
jl
xchg
cwtl
sub
mov
add
add
jae
add
rolb
clc
push
clc
xor
add
out
inc
clc
popa
add
pop
ja,pt
clc
pushf
mov
div
nop
jmp
insl
dec
jecxz
mov
xor
mov
sub
clc
pop
sar
lcall
clc
push
add
cltd
sub
imulb
out
cs
jle
clc
rclb
xor
add
add
add
adc
add
clc
into
mov
adc
add
dec
insl
add
push
add
dec
mov
or
cmp
add
add
call
jmp
push
add
cltd
push
cmp
clc
lret
add
add
add
nop
jmp
cltd
jne
sbb
aaa
mov
and
add
add
and
add
loope
or
pop
pop
clc
sar
mov
inc
add
cmp
mov
insl
mov
or
dec
cmc
jg
sbb
clc
loopne
inc
clc
popf
cmc
cld
das
movsl
clc
mov
add
jbe
fwait
mov
add
cmp
nop
jmp
incl
lods
jg
clc
loopne
cli
popf
fs
aas
lcall
xchg
lahf
int
fildll
fdivrl
mov
mov
or
cmp
nop
jmp
lods
dec
cmp
lret
add
loope
xor
add
mov
clc
inc
add
adc
add
and
add
add
iret
mov
xor
sub
ret
push
add
pop
jns
mov
mov
clc
fimuls
pusha
push
mov
xchg
ret
jg
pop
pop
sbb
add
add
clc
outsb
push
jmp
mov
fwait
add
add
aad
mov
add
or
clc
iret
adc
add
xor
clc
mov
sti
nop
jmp
in
dec
jne
lods
add
fcomps
add
fucomp
jbe
cmp
add
inc
clc
and
add
clc
adc
add
add
mov
out
push
rep
nop
jmp
add
jg
pop
add
call
mov
xchg
ret
dec
dec
lods
aaa
pop
push
mov
nop
jmp
jg
into
sbb
clc
and
jb
add
add
cwtl
stos
xchg
cmc
cmpsl
clc
jae
add
add
add
clc
xor
clc
repz
add
clc
mov
cmpsb
clc
push
jmp
push
into
dec
mov
cld
into
enter
mov
add
mov
cmp
sbb
jmp
test
outsb
push
hlt
mov
add
add
imul
add
lods
add
mov
cmpsb
clc
push
adc
add
jmp
clc
xor
add
cmp
inc
add
mov
add
aad
in
ds
add
add
add
sbb
pop
jo
add
in
add
add
mov
icebp
mov
dec
pushf
lahf
and
add
push
xabort
xor
rol
clc
repnz
cmp
add
and
add
clc
into
inc
add
pop
clc
test
push
add
movsb
clc
cwtl
sub
add
inc
add
xor
add
add
jl
add
nop
jmp
add
into
imul
cltd
ja
out
cwtl
movsb
clc
add
push
add
fucomi
add
add
jb
add
add
mov
xor
cmp
call
pop
mov
gs
sub
dec
mov
outsl
sbb
clc
test
aam
movsb
clc
cmp
adc
add
add
or
jae
jmp
sbb
xor
mov
nop
jmp
lods
test
cmp
add
movsb
clc
cltd
and
add
mov
bnd
cmpsl
clc
pop
push
lods
add
add
add
xchg
push
add
adc
add
rcrl
es
in
jp
loop
pusha
add
loopne
jge
add
cmp
out
clc
popf
in
clc
sub
clc
clc
mov
pop
xchg
jge
dec
inc
clc
dec
inc
clc
push
rcr
cmp
sbb
add
imul
mov
cmp
xchg
fisubs
add
pop
sar
mov
add
add
idivb
add
add
add
fcompl
jg
mov
xor
add
cmp
dec
cmc
jb
add
aad
inc
add
es
jmp
ja
fists
sti
dec
test
insl
cmpsl
clc
adc
add
add
add
clc
dec
add
add
dec
xchg
or
adc
in
cmp
clc
adc
add
clc
test
dec
push
add
arpl
add
add
add
ret
clc
stc
lods
sbb
into
outsb
movsl
clc
dec
fs
cld
jne
jno
add
sbb
clc
repz
add
mov
add
mov
mov
adc
nop
pop
pusha
add
pop
sbb
decl
mov
add
add
insb
add
add
je
clc
decb
fldl
clc
leave
inc
add
and
add
pop
or
add
shll
xchg
adc
add
lods
adc
push
add
test
jno
add
add
imul
clc
sti
gs
push
cmp
push
rcrl
loope
mov
mov
clc
into
mov
pop
nop
jo
add
cltd
arpl
add
clc
aam
xchg
mov
movsb
clc
jo
add
pop
repnz
js
repz
fistl
add
rcr
mov
repz
add
add
ljmp
inc
add
push
add
cmpsb
clc
lret
add
cli
lcall
jbe
clc
sbb
nop
jmp
push
test
lods
loopne
rorl
add
jg
xabort
fistl
and
pop
pop
pushf
cmp
add
jle
inc
clc
js
fcoms
add
mov
add
add
xchg
stos
lcall
mov
jne
add
lahf
dec
or
mov
roll
cmp
scas
add
add
mov
clc
xchg
dec
xchg
insl
cmc
call
sub
add
jbe
push
xabort
clc
mov
mov
push
outsb
in
add
add
inc
add
mov
fs
shl
clc
sbb
rclb
add
ss
lods
dec
daa
clc
jmp
push
clc
sbb
nop
jmp
push
dec
into
jecxz
sbb
xchg
adc
nop
jmp
test
pop
dec
mov
pop
dec
scas
mov
movsb
clc
xor
add
cs
clc
jbe
cmp
push
clc
incl
jmp
cmp
add
loopne
filds
xchg
lahf
sub
clc
outsb
repz
arpl
add
add
cwtl
push
movswl
nop
jmp
xchg
dec
sbb
sbb
and
add
jg
fs
mov
cmp
xor
add
clc
clc
leave
mov
test
sbb
add
jecxz
pop
clc
push
mov
nop
jmp
push
xor
and
ret
clc
in
hlt
cmp
clc
push
add
adc
clc
ret
clc
dec
out
out
dec
sbb
fs
hlt
push
outsl
stos
loope
int3
movsl
clc
iret
dec
and
add
sahf
mov
out
call
insb
sbb
add
add
clc
xabort
or
add
hlt
mov
inc
clc
xbegin
add
pop
xor
add
lea
pop
in
into
jne
clc
push
add
cwtl
xor
add
lcall
jae
add
fisttpll
enter
insl
je
mov
add
clc
sar
clc
imul
ss
stos
mov
add
loope
mov
or
push
add
nop
sahf
jae
add
add
gs
add
movsl
clc
jae
add
icebp
in
ja
add
pop
and
add
inc
clc
jmp
add
in
test
clc
pusha
add
imul
sub
jge
clc
outsb
jno
add
aam
push
jl
jp
add
or
add
add
add
mov
nop
jmp
pop
xor
mov
nop
jmp
sbb
inc
add
test
jns
add
popf
sub
clc
std
sbb
and
xchg
aaa
push
xchg
cmp
ret
mov
clc
sar
clc
int
add
aaa
xbegin
jmp
xbegin
xor
add
jecxz
sub
add
mov
pop
clc
xor
add
mov
icebp
jle
add
and
add
aas
dec
das
xchg
mov
pop
clc
lods
fldl
add
clc
pop
xchg
mov
clc
inc
add
loop
dec
cs
clc
dec
push
clc
imul
ja
inc
add
mov
dec
ja
add
enter
repz
clc
xor
sbb
pop
ret
clc
xchg
sbb
clc
sub
scas
adc
add
push
xchg
mov
repz
stc
inc
clc
sar
xchg
pop
pop
fsubrl
add
roll
add
add
call
adc
sub
repz
add
aaa
stos
inc
add
sub
clc
cltd
fsubrs
leave
push
add
aaa
or
clc
clc
jecxz
xabort
ja
and
fmuls
clc
and
add
dec
int3
out
inc
clc
inc
add
mov
clc
ss
lcall
add
inc
add
mov
fidivs
test
inc
add
push
or
outsb
loopne
leave
dec
out
stos
gs
es
pushf
xor
nop
jmp
push
dec
add
clc
decl
data16
add
jg
repz
inc
clc
sbb
clc
adc
add
clc
lret
cmp
dec
out
repnz
aam
decb
mov
dec
or
add
ss
xchg
or
dec
sub
lods
outsl
mov
mov
sbb
xor
add
cmp
clc
lret
sub
clc
nop
jge
jae
add
push
clc
test
shrb
idivb
clc
gs
leave
test
test
or
add
fdivrs
out
adc
add
push
xor
or
cmp
add
add
jmp
clc
sub
clc
push
add
nop
jmp
add
lods
jle
xchg
fs
mov
add
adc
push
nop
jmp
sbb
cltd
into
add
jle
adc
add
jp
clc
stc
mov
mov
mov
xchg
ret
test
mov
cmp
and
add
scas
in
mov
push
cmp
lock
shrb
jmp
cld
mov
lods
jg
inc
add
sub
add
clc
or
inc
clc
mov
xor
add
fisubrs
clc
test
adc
add
add
push
add
mov
pop
adc
jns
and
add
sbb
push
ljmp
dec
push
nop
jmp
fs
jg
fwait
add
insl
popf
xchg
mov
and
add
nop
jmp
jg
add
pop
add
clc
jo
add
fnstsw
test
clc
mov
sub
call
jmp
adc
imul
add
and
add
add
pop
pop
mov
clc
add
add
clc
loopne
push
add
sbb
dec
sub
mov
push
pop
cmpsl
clc
and
mov
xor
add
jb
add
jnp
add
imul
paddsw
fisubrl
add
clc
pop
loope
mov
clc
cmp
add
loop
push
adc
add
mov
ja
iret
data16
and
sbb
ret
clc
inc
clc
outsb
fnsave
add
stos
int
add
cmpsl
clc
leave
ja
jne
daa
clc
xlat
push
pop
fcmovbe
ja
ss
clc
sbb
clc
lock
sub
test
clc
lock
adc
clc
sti
clc
jae
add
clc
push
es
decl
push
and
xchg
ret
outsb
mov
inc
add
xchg
mov
clc
xor
addr16
js
clc
int3
hlt
and
and
inc
add
popf
push
icebp
in
jb
add
pop
dec
mov
clc
or
add
xchg
jp
stc
mov
and
or
xchg
ret
clc
test
cs
int
div
test
gs
push
sub
add
testb
mov
add
cmp
int
clc
test
or
outsl
leave
push
add
movsb
clc
push
add
leave
push
add
sbb
loopne
add
add
add
inc
clc
mov
xor
fldenv
add
js
add
jge
bound
add
in
ja
mov
cs
add
add
xor
add
clc
ljmp
js
out
mov
inc
add
or
add
mov
add
cld
gs
in
adc
add
add
fldl
add
jno
add
jne
clc
pop
loope
inc
add
lea
xlat
clc
mov
cwtl
jl
mov
add
add
int3
mov
push
mov
clc
inc
add
xchg
xor
add
gs
pop
gs
bound
add
push
add
xor
add
xchg
idivl
add
adc
add
clc
push
add
jns
clc
gs
shr
jp
clc
inc
clc
ja
out
sar
lcall
mov
imul
jle
lods
into
add
mov
hlt
out
sub
clc
in
push
or
adc
add
add
xor
add
jae
add
add
or
clc
cmp
lret
add
daa
clc
dec
test
jb
add
bound
add
sti
sub
cmp
dec
popf
sub
sbb
clc
scas
jnp
push
add
push
and
add
mov
inc
add
pop
mov
andnps
repnz
sar
imul
push
mov
nop
jmp
cmp
jbe,pn
xchg
jb
add
add
js
lods
push
xlat
push
jmp
add
push
add
popf
mov
call
add
aaa
test
shr
nop
jmp
mov
cmp
into
add
mov
add
fwait
data16
cwtl
pop
dec
xchg
fnstsw
lock
cmp
xor
add
xchg
test
fsts
or
cmc
sahf
mov
int3
push
add
pushf
ljmp
push
jmp
add
mov
jmp
add
addr16
lret
push
mov
inc
clc
sub
rclb
add
mov
xor
add
push
cmp
int
inc
add
mov
jb
add
gs
decl
jmp
cs
aaa
jecxz
xchg
lods
adc
add
sbb
add
mov
add
xor
add
frstor
add
xor
add
gs
lret
cs
jge
out
mov
loope
test
add
add
sbb
iret
push
add
clc
bound
add
mov
lea
setg
jecxz
sub
mov
fmuls
shrb
add
add
clc
xor
ret
cmp
add
add
test
sbb
test
sbb
pop
add
add
adc
dec
fistl
add
sbb
divl
add
int
jne
clc
xchg
aad
clc
or
add
leave
ja
daa
clc
loop
cmp
add
add
add
clc
scas
ljmp
xchg
adc
clc
xabort
clc
popf
sub
mov
add
add
push
clc
add
sahf
dec
roll
pusha
add
out
loope
adc
add
pop
adc
add
xor
add
add
sar
clc
xor
add
clc
mov
add
sub
decb
push
clc
sti
or
push
clc
sub
imul
clc
push
add
push
add
nop
jmp
dec
add
push
mov
push
nop
outsb
stos
dec
inc
add
sub
cld
add
add
clc
cltd
xlat
das
mov
jmp
mov
add
push
clc
in
sub
push
push
mov
xchg
ret
add
mov
aad
test
push
push
add
cmpsl
clc
imul
sub
add
sbb
inc
add
push
xchg
push
in
lret
cmp
adc
add
scas
sub
int3
cmpsb
clc
push
add
aaa
jmp
clc
cmp
clc
cmp
adc
add
add
add
add
sbb
outsb
jo
add
lock
mov
nop
jmp
add
lods
dec
dec
sbb
aad
add
or
ret
pusha
add
mov
inc
clc
sbb
cmp
lcall
mov
xchg
ret
xchg
mov
dec
sahf
inc
clc
cmp
add
push
fwait
inc
add
sbb
sub
clc
mov
nop
jmp
sbb
jmp
clc
pop
pop
outsb
and
add
add
add
push
lea
push
mov
xchg
ret
xor
push
push
push
mov
xchg
ret
jecxz
cmp
mov
clc
stos
jns
sbb
clc
inc
add
pop
clc
enter
adc
scas
ss
add
xchg
stos
pop
lods
test
or
add
cmpsb
hlt
inc
add
mov
aaa
gs
add
adc
data16
add
add
insb
ljmp
clc
out
push
add
inc
add
fisttpl
clc
lock
jl
add
divl
add
addr16
ss
jge
add
out
incb
mov
fisubl
clc
std
mov
sti
popf
fisubrl
loop
ljmp
add
inc
add
bound
add
add
popa
add
jg
clc
and
aaa
ds
pop
clc
inc
add
cmp
pop
jo
add
repz
add
add
sbb
clc
inc
clc
inc
add
fs
inc
clc
jno
add
add
mov
enter
or
ds
out
imulb
mov
sar
clc
mov
add
xchg
inc
add
psrad
mov
add
add
nop
jmp
add
scas
test
outsb
cs
jbe
clc
test
mov
lods
dec
jg
sarl
jo
add
clc
mov
clc
scas
data16
outsl
sbb
movsl
clc
inc
clc
fwait
lea
add
test
xor
mov
into
push
and
add
mov
mov
and
and
add
add
add
in
pop
cmp
arpl
add
add
jmp
nop
jmp
dec
add
lods
inc
clc
mov
add
mov
jmp
imul
pushl
add
or
clc
pop
lock
mov
clc
mov
add
call
lret
add
xchg
aaa
fs
int
sbb
sbb
lods
inc
add
call
test
jecxz
enter
add
mov
fsubrl
pop
incl
test
mov
cld
mov
clc
jae
add
add
clc
lea
add
xchg
cmpsl
clc
es
add
add
adc
add
loope
mov
mov
add
jmp
jge
jl
add
dec
or
sti
inc
clc
stos
mov
shlb
sbb
test
add
jb
add
dec
sahf
mov
add
ss
or
clc
mov
add
dec
enter
add
shr
add
mov
dec
pop
add
add
adc
pushf
mov
sarb
hlt
inc
add
mov
clc
out
insl
stc
xor
add
popa
add
and
add
clc
inc
clc
mov
add
test
cmp
lcall
clc
iret
push
insl
add
add
jno
add
out
adc
add
xchg
aas
into
repnz
add
in
out
and
add
clc
xor
add
push
mov
lock
add
mov
adc
add
int
das
out
sbb
jae
add
clc
dec
xchg
movsb
clc
jl
aaa
sub
movsb
clc
dec
push
dec
nop
jmp
dec
repz
adc
repz
jae
add
add
sahf
aas
xor
add
clc
jb
add
add
arpl
add
clc
dec
mov
lret
arpl
add
repnz
add
add
jmp
clc
pushf
pop
in
sbb
clc
mov
cmp
inc
add
insl
push
test
js
adc
add
xlat
or
push
add
dec
cmp
clc
push
add
xlat
or
stos
shr
add
add
sarb
jb
add
clc
push
add
test
ja
xbegin
mov
clc
cmp
add
adc
add
clc
mov
add
add
add
ljmp
mov
add
sub
popf
enter
jno
add
add
jp
fisubl
add
rol
clc
cmp
inc
clc
fistpll
clc
push
enter
clc
push
add
and
add
fbld
jns
add
and
add
push
push
mov
xchg
ret
pop
pop
scas
hlt
jge
jp
pop
cmc
xchg
cmpsl
clc
nop
mov
lods
out
cmp
clc
sar
lock
add
push
add
add
cmp
dec
pop
cmp
loopne
and
push
push
inc
add
add
aaa
adc
add
imulb
add
or
mov
clc
jne
cmp
cltd
jnp
add
push
inc
clc
cltd
hlt
mov
inc
clc
mov
add
mov
cmp
ljmp
jecxz
shll
clc
mov
sahf
dec
adc
add
push
pop
pop
push
add
icebp
jno
add
sbb
clc
call
mov
xchg
fs
scas
icebp
mov
clc
aas
in
push
jecxz
aad
clc
push
jne
nop
jmp
add
lods
or
jae
add
clc
int
clc
pop
inc
add
or
add
ss
inc
clc
jns
add
cmp
aaa
jmp
add
mov
mov
hlt
cmp
add
cmp
cld
popf
sahf
ja
sar
or
clc
adc
add
mov
xchg
ret
add
cmp
add
add
add
mov
popa
add
sub
pop
and
add
clc
add
add
jae
add
clc
clc
cmp
jb
add
clc
jge
cmp
js
clc
fs
and
add
add
clc
dec
enter
add
js
clc
cld
push
lods
xchg
lret
pop
dec
mov
add
add
call
push
mov
nop
jmp
xchg
into
add
jmp
clc
sti
sarb
loopne
nop
jmp
cmp
clc
cmp
xor
add
scas
xor
add
pusha
add
fs
jp
fsts
add
pop
cs
xchg
add
add
clc
ds
and
add
fldcw
popl
add
enter
xlat
addr16
or
add
adc
add
clc
sbb
adc
add
arpl
jne
arpl
clc
adc
ja
int3
popf
in
cmp
clc
repnz
ds
ja
clc
xor
add
enter
mov
add
mov
inc
call
jmp
add
jecxz
ss
clc
xor
add
add
add
out
ret
and
ret
xor
add
mov
add
in
jl
mov
lock
scas
push
adc
clc
dec
and
inc
add
dec
aam
nop
sub
xchg
mov
shrb
rclb
mov
mov
pop
adc
add
add
ljmp
clc
add
add
add
mov
popa
add
xor
push
mov
add
add
add
add
sti
aas
mov
clc
fidivrs
cmp
add
dec
fnsave
add
out
mov
and
add
clc
scas
in
dec
shr
xchg
dec
cmp
lea
loopne
mov
push
testl
mov
clc
or
clc
sbb
clc
lock
fsubrs
clc
rcr
mov
fmull
adc
add
inc
add
rorb
add
xor
add
clc
enter
cmc
xchg
ljmp
insl
jl
out
mov
clc
or
clc
xor
sbb
lock
pushl
popl
cmp
add
mov
arpl
add
faddp
clc
out
push
add
imul
add
fldz
dec
loope
mov
clc
aam
cmp
shlb
add
add
add
icebp
add
clc
cmp
movsb
clc
push
push
decl
nop
jmp
dec
aaa
pop
lods
jle
cwtl
cmp
nop
jb
add
add
lcall
mov
xchg
push
call
nop
jmp
jecxz
dec
add
imul
add
add
add
pop
jne
clc
inc
clc
cmpsl
clc
je
add
negl
inc
add
add
add
xchg
lea
clc
rolb
add
add
idivl
sbb
clc
int3
xor
add
mov
add
js
imul
push
mov
jnp
clc
movsl
clc
lret
sub
mov
add
lahf
aam
add
add
es
or
pop
es
and
add
push
dec
jg
add
fidivs
dec
stc
sub
test
clc
or
pop
clc
jo
add
add
add
jg
lock
lea
add
push
add
das
pop
push
jmp
nop
jmp
dec
add
adc
lret
mov
xchg
nop
cmp
dec
mov
sti
faddl
add
jl
lret
mov
push
add
xchg
aam
cmp
and
add
push
push
mov
xchg
ret
dec
mov
aaa
cltd
dec
cmp
mov
mov
add
mov
add
cmp
clc
jge
rorb
clc
mov
mov
pop
push
cmp
ljmp
jg
in
js
clc
add
add
jns
add
add
jp
clc
xchg
test
or
add
sub
mov
rcrb
add
and
add
fistpl
xchg
cmp
clc
xor
clc
cmc
lock
add
icebp
ret
jb
add
xor
add
sti
pop
clc
push
add
xchg
movsb
clc
push
cmp
add
clc
adc
add
add
adc
add
jg
nop
jmp
add
pop
lods
scas
nop
test
mov
mov
xchg
ret
add
jne
clc
pop
jbe
add
inc
add
jl
add
mov
and
add
add
clc
dec
fisttpl
add
mov
mov
mov
xchg
ret
popl
ljmp
add
iret
push
add
in
pop
xabort
in
cmpsb
clc
jnp
push
jmp
add
add
repz
test
or
add
xchg
aam
es
xchg
dec
add
add
lods
xchg
sbb
inc
clc
in
cmp
clc
xor
add
jg
nop
jmp
mov
xchg
out
sahf
cmc
jmp
clc
mov
data16
cmpsb
clc
mov
clc
aam
and
add
add
ja
int3
xchg
xor
jns
dec
inc
add
sbb
test
add
add
xchg
xor
sahf
dec
data16
je
clc
dec
adc
insb
xchg
add
add
cli
hlt
fs
mov
add
jae
add
add
inc
add
mov
imull
push
nop
jmp
sub
add
add
add
mov
stc
mov
addb
jne
xor
sub
push
push
stos
das
cmpsl
clc
add
add
cmp
push
or
sbb
fnstsw
add
inc
clc
imul
into
adc
add
xchg
mov
sbb
jmp
popl
mov
cmp
outsl
bound
add
jecxz
dec
je
mov
clc
imul
add
and
xchg
add
mov
clc
ret
clc
test
sub
lahf
add
add
add
outsl
push
add
sbb
sbb
pop
sub
jg
test
xchg
call
std
dec
cmp
sbb
cmp
and
nop
jmp
xchg
cmp
ja
inc
clc
addr16
and
or
xchg
lods
xchg
push
fcos
pop
push
mov
xchg
ret
mov
inc
clc
out
loop
cmpsb
clc
jge
nop
mov
add
add
shrb
mov
add
mov
push
mulb
in
fdivr
dec
and
add
add
add
dec
xor
add
iret
and
loopne
xchg
adc
add
xchg
mov
fnstsw
cmp
jg
mov
mov
sbb
mov
add
jne
dec
xchg
pop
ds
add
ret
clc
call
add
clc
cmp
je
clc
int3
mov
clc
xor
push
jmp
cltd
add
clc
ss
adc
push
fwait
ljmp
cs
mov
lods
js
fnsave
cmpsb
clc
repnz
add
sub
jns
adc
clc
xchg
mov
daa
clc
movsl
clc
int3
push
jle
stos
je
push
or
inc
clc
pop
or
adc
add
movsb
clc
xchg
jae
add
clc
rclb
inc
clc
mov
fs
popa
add
adc
add
clc
ja
or
clc
inc
clc
loope
jg
mov
cmp
clc
cmp
scas
mov
add
add
cmp
sbb
dec
add
nop
jmp
mov
jns
xchg
dec
jne
add
addr16
out
push
loop
incl
cld
outsb
jle
test
pop
add
inc
clc
data16
cmp
clc
and
adc
cwtl
jns
clc
bound
add
pop
clc
sbb
jmp
cmp
clc
imul
ficoml
inc
add
pusha
add
cmp
add
nop
jmp
adc
add
sbb
cmp
cmp
add
ss
out
push
inc
clc
sub
clc
test
clc
push
jne
nop
jmp
outsb
add
mov
and
or
aas
inc
add
aas
add
jbe,pt
add
into
icebp
push
add
addr16
push
cmp
push
add
stos
pop
jle
clc
in
mov
clc
jl
test
popa
add
dec
mov
add
add
mov
sbb
outsl
sub
inc
add
aas
push
lret
add
gs
push
and
test
lahf
sbb
jmp
lcall
jg
dec
add
clc
aad
sub
mull
xchg
or
in
outsb
add
add
add
cmp
push
add
mov
out
bound
add
sub
clc
or
clc
in
xor
add
lock
add
and
add
clc
fnstenv
add
clc
ficompl
dec
add
add
aaa
add
add
mov
add
mov
add
sbb
clc
stos
pop
jecxz
fdivs
mov
clc
imul
and
jmp
dec
dec
xor
push
repz
clc
popa
add
insl
mov
nop
jmp
sub
add
add
lcall
cmp
clc
repz
aaa
or
mov
add
inc
clc
pop
xor
clc
jo
add
clc
sub
cmp
or
or
cmp
aad
fmul
dec
sub
add
test
dec
loopne
ret
inc
add
pushf
sub
out
jb
add
fisttpl
pop
stos
adc
add
dec
call
stos
inc
clc
sbb
jmp
cld
mov
dec
cltd
js
testl
nop
jmp
hlt
sbb
insb
jne
clc
and
jo
add
in
mov
fildl
add
add
jns
mov
jne
add
hlt
cltd
sub
add
repnz
clc
pcmpgtw
lods
dec
push
test
mov
lcall
leave
out
rorb
sub
mov
jnp
aaa
or
sbb
add
push
clc
arpl
add
jbe
dec
repz
mov
push
mov
xchg
ret
dec
dec
ljmp
add
clc
in
dec
gs
pushf
or
sub
fistl
mov
push
add
mov
mov
sub
sbb
add
hlt
mov
clc
js
add
xor
das
stc
and
add
shll
add
add
add
xor
add
cmp
clc
cmp
pop
push
add
or
outsb
mov
incl
rcll
call
sbb
jbe
pop
or
dec
push
nop
jmp
test
pop
arpl
dec
push
clc
xchg
pop
lahf
jns
clc
pusha
add
xchg
jno
add
mov
mov
xchg
ret
mov
lods
sub
push
add
pop
jp
stos
push
add
hlt
push
clc
xor
clc
loope
stos
movsl
clc
ja
cs
testb
xor
add
add
add
xchg
fcoml
add
clc
dec
mov
add
sub
pop
clc
pop
sti
pop
fnstenv
in
xchg
dec
fiadds
add
xabort
clc
mov
xor
add
push
clc
mov
dec
loop
sti
es
repnz
int3
push
push
add
jp
clc
inc
add
xchg
and
add
add
divl
add
pop
xchg
loopne
adc
mulb
clc
cmp
clc
fwait
adc
add
xchg
movsb
clc
jns
add
in
js
xor
add
lock
xor
add
cwtl
shlb
clc
or
mov
nop
jmp
jle
jne
fs
insl
bound
add
add
js
adc
jbe
loop
loope
movsb
clc
xor
add
mov
insl
cmp
clc
loopne
loop
aas
bound
add
add
pop
cmpsb
clc
insb
test
sbb
clc
jae
add
ss
bound
add
add
cmp
xlat
lret
lahf
clc
cmp
sar
add
lods
pusha
add
fs
mov
mov
xchg
fldenv
out
arpl
add
clc
mov
out
rclb
add
push
add
push
add
or
sub
add
mov
cmp
leave
mov
lret
test
lcall
repz
outsb
mov
and
xabort
jns
clc
cmpsl
clc
jns
in
scas
int
clc
fcomip
rolb
rorl
add
add
pxor
add
sar
clc
js
lods
cmpsl
clc
aaa
dec
insb
pusha
add
in
inc
add
lods
insb
movsb
clc
aas
pusha
add
sarb
xchg
add
or
ja
lods
cmp
incb
cmp
add
and
add
arpl
jmp
adc
ss
xchg
test
je
fadd
clc
pop
leave
sub
clc
bound
add
add
pop
cltd
cld
clc
jo
add
cmp
adc
add
sti
mov
clc
pop
jp
hlt
dec
xbegin
clc
ret
clc
arpl
add
jge
mov
clc
jne
add
aam
clc
js
sub
scas
jne
clc
xor
cwtl
add
data16
jge
clc
rep
sahf
test
lods
pop
pop
and
add
jmp
in
lods
cmp
nop
jmp
add
jg
add
push
jl
pop
sti
jo
add
rcrb
xchg
pushf
cld
sbb
add
in
cmpsl
clc
inc
add
cmp
or
das
int
mov
nop
jmp
sub
mov
cmp
add
pop
iret
jno
add
add
bound
add
mov
and
add
sub
add
jecxz
mov
jmp
pop
psadbw
add
add
xchg
test
sbb
es
xor
add
cmpsb
clc
sub
clc
sbb
add
fwait
adc
mov
sbb
daa
clc
xor
add
push
add
lods
clc
xor
mov
add
mov
add
int
pop
bound
add
clc
cmp
clc
clc
sub
sub
jmp
mov
repz
clc
xchg
mov
add
add
push
add
mov
clc
fwait
in
push
test
mov
adc
add
add
xor
or
add
mov
lcall
push
add
ljmp
clc
adc
add
add
in
push
js
clc
fcoml
add
mov
fnstsw
fldl
shrb
add
xchg
ret
clc
mov
roll
add
sbb
jmp
test
dec
mov
add
add
and
add
jge
lock
inc
clc
cmp
mov
cmc
and
add
push
lret
call
add
push
clc
dec
pop
xor
add
out
aam
clc
dec
jle
clc
cmpsb
clc
lea
add
imul
imul
loope
js
add
cmc
ret
clc
and
add
add
clc
lock
sbb
mov
add
mov
cmp
imul
clc
and
add
cld
fsubrs
clc
xor
add
jnp
insb
data16
cwtl
insl
mov
data16
es
aaa
mov
add
add
or
pop
fwait
mov
add
adc
leave
add
clc
dec
mov
js
arpl
add
clc
fbld
loopne
mov
add
xor
lcall
xchg
xchg
test
clc
loop
lret
dec
cmp
xabort
clc
and
add
mov
nop
jmp
add
add
push
scas
cmp
sbb
mov
dec
out
cmc
out
mov
shll
pop
nop
jmp
sbb
add
clc
mov
out
pop
scas
ficomps
scas
mov
add
dec
mov
add
mov
push
mov
xchg
ret
pop
add
add
clc
jge
clc
pop
lret
test
sar
clc
inc
clc
cmp
scas
push
add
popa
add
xchg
jle
clc
jns
gs
sub
ja
xor
add
movsl
clc
out
popa
add
sbb
push
mov
nop
jmp
fwait
mov
call
ss
adc
js
push
jmp
jg
jg
add
clc
mov
aaa
jge
add
jl
push
icebp
fstpt
leave
int3
jecxz
add
add
into
push
add
sub
clc
cltd
inc
clc
dec
lods
popf
cmp
arpl
add
clc
stos
jo
add
jb
add
clc
bound
add
add
clc
xor
add
push
add
add
inc
clc
insl
ret
clc
xor
add
push
add
dec
and
sbb
add
xor
add
or
stc
push
mov
clc
inc
clc
add
add
leave
nop
jmp
xor
add
lret
int
push
clc
push
add
sub
movsb
clc
or
cmp
inc
add
pushf
icebp
or
add
inc
clc
inc
add
or
sub
nop
jmp
test
mov
push
add
adc
add
faddp
clc
cmpsl
clc
pop
pusha
add
aaa
or
nop
jmp
add
test
clc
dec
pushl
rclb
fwait
jbe
cs
dec
inc
clc
dec
cld
xor
add
xchg
adc
add
add
clc
push
cld
lret
push
in
div
and
add
clc
test
sub
xchg
cmc
inc
clc
or
xchg
xor
js
mov
in
testb
clc
mov
sti
cmp
cmp
or
stos
push
inc
add
fldt
clc
pop
add
lods
outsb
clc
push
jno
add
or
mov
aaa
out
xchg
adc
add
add
fsubl
outsl
and
sbb
mov
xlat
ret
clc
sbb
mov
add
clc
xbegin
mov
add
add
clc
and
add
clc
out
pop
clc
cmp
add
aam
jmp
add
add
addr16
ss
mov
nop
jmp
cld
add
dec
scas
add
add
into
cmpsl
clc
cli
dec
mov
sar
js
clc
adc
add
clc
and
add
add
or
cld
push
jne
inc
add
and
add
add
add
add
clc
imul
add
pop
dec
and
jns
fildll
mulps
fmull
add
adc
add
clc
adc
add
inc
clc
dec
lret
push
or
mov
jg
call
sar
xabort
inc
clc
xlat
push
add
testb
je
jg
add
addr16
int3
jnp
leave
inc
clc
outsb
cmpsb
clc
xchg
lock
lahf
or
add
enter
adc
add
out
push
insb
pop
mov
or
xor
add
cmp
ja
pushf
insb
adc
add
pushf
ljmp
dec
cmpsb
clc
cli
lcall
add
jmp
cmp
xchg
lods
hlt
push
mov
nop
jmp
cltd
test
add
xor
jecxz
or
dec
jecxz
out
mull
mov
loop
mov
add
inc
clc
in
pop
clc
xbegin
pop
clc
mov
xabort
add
sbb
mov
xchg
ret
pop
push
dec
xchg
pushf
adc
out
adc
add
sub
add
xabort
add
nop
aam
clc
xchg
mov
add
mov
lret
cmpsl
clc
sbb
sbb
push
add
rorl
loope
lret
shl
clc
sbb
add
pushl
hlt
dec
add
push
cmp
mov
mov
daa
clc
ror
addr16
clc
pop
clc
pushf
pop
dec
iret
xchg
jecxz
add
repnz
add
mov
inc
clc
or
out
sbb
add
cmp
push
push
mov
xchg
ret
imul
lret
out
mov
loope
push
rcrb
push
add
push
mov
xchg
ret
scas
sub
cs
mov
jg
adc
add
clc
and
add
dec
fwait
mov
add
nop
jmp
mov
xchg
mov
mov
imul
add
lea
clc
nop
inc
clc
sbb
fwait
popf
into
jmp
clc
ja
mov
push
mov
xchg
ret
cltd
lods
xchg
add
clc
or
in
add
nop
jmp
add
ss
lock
jle
imul
push
dec
xabort
pop
jne
es
or
clc
xor
cltd
add
xchg
add
dec
xor
jle
xchg
xor
mov
fidivrl
sbb
nop
jmp
add
cmp
lret
add
std
push
clc
aaa
gs
fwait
clc
mov
pop
and
xchg
add
test
leave
mov
adc
add
add
mov
add
cmp
mov
dec
cmp
dec
push
inc
add
mov
clc
mov
cmp
pop
sbb
clc
dec
aaa
sbb
bound
add
clc
mov
clc
dec
insl
frstor
add
ljmp
fcomps
cmpsb
clc
imul
jns
add
push
add
pop
je
clc
aas
imul
es
test
add
and
add
jb
add
add
call
add
xchg
mov
insb
xchg
add
add
push
clc
add
sti
dec
test
dec
pusha
add
stos
cmp
clc
mov
clc
sub
dec
pop
cmp
enter
inc
add
jb
add
mov
push
hlt
xchg
add
sar
mov
nop
jmp
push
pop
test
test
negb
call
jge
xchg
inc
add
fwait
dec
xchg
cmp
cmp
jne
jge
inc
clc
cmp
rorb
push
add
add
push
enter
sub
ret
test
xlat
mov
sbb
rclb
add
add
fs
jbe
out
mov
cmp
icebp
stos
cwtl
mov
add
or
clc
mov
mov
clc
pop
dec
xchg
adc
add
sub
clc
daa
clc
dec
or
add
cmp
adc
add
fidivrs
pop
nop
jmp
into
jecxz
push
dec
mov
add
gs
xchg
or
call
cmp
add
inc
add
arpl
add
add
clc
jmp
xchg
test
cltd
sbb
mov
mov
clc
dec
inc
clc
mov
add
jmp
xchg
aaa
xor
and
add
add
mov
adc
add
lret
outsb
fxch
or
adc
add
mov
shll
add
js
clc
jbe
add
mov
sbb
clc
in
adc
mov
push
inc
add
cmp
repnz
pop
clc
add
add
add
mov
lods
push
add
ficomps
addr16
clc
push
add
int3
es
mov
dec
cli
mov
nop
jmp
imul
jl
add
scas
jp
clc
call
mov
clc
dec
scas
popa
add
cmp
loopne
xor
clc
ss
add
testb
add
and
add
add
outsl
imul
jae
add
sar
push
add
jne
dec
scas
mov
sar
call
dec
insl
test
clc
pop
mov
add
jne
add
inc
add
fisttpl
jb
add
xchg
adc
add
clc
sub
add
add
fsubp
clc
add
add
clc
cmp
jecxz
std
loop
lock
mov
ret
mov
xchg
ret
jecxz
test
int
add
je
jl
daa
clc
mov
adc
xchg
cltd
jmp
sub
adc
clc
and
add
fs
adc
add
push
daa
clc
mov
add
lcall
mov
out
push
add
cmp
fadds
add
sbb
adc
add
inc
add
push
jle
pop
sub
pop
cltd
in
jno
add
pop
dec
std
or
clc
fimuls
stc
jns
stos
cmp
fdivp
call
jle
dec
sbb
ret
clc
cmp
add
clc
je
add
pop
hlt
test
sar
add
aad
sub
clc
sarb
clc
sbb
aad
xor
pop
lock
add
imul
sbb
cmp
or
clc
ss
in
inc
clc
mov
add
jle
je
clc
test
add
cmp
jbe
arpl
add
mov
nop
jmp
aaa
cmp
add
ss
mov
push
add
pop
jb
add
bound
add
inc
add
jmp
jmp
lods
test
pop
cs
xchg
scas
jb
add
adc
clc
pop
clc
cmp
dec
or
lret
ljmp
add
xchg
test
sub
sbb
mov
mov
push
je
sbb
clc
test
adc
add
clc
cmp
adc
add
outsb
cli
cmp
pop
clc
jnp
or
push
sahf
add
stos
mov
sub
out
jne
sub
clc
push
pop
popa
add
fucom
clc
fcomps
ja
mov
add
jne
in
or
clc
js
add
push
clc
push
leave
fdivrp
lcall
mov
inc
add
and
sub
add
pop
pop
ret
clc
lock
cmc
outsb
dec
fisttpll
clc
loope
jp
add
jne
clc
data16
sub
cmp
push
mov
xchg
ret
lods
cmp
je
xchg
mov
push
clc
fwait
cmp
sbb
add
add
jbe
ret
rcrl
out
jmp
clc
leave
push
mov
mov
push
mov
xchg
ret
add
in
inc
clc
or
clc
in
add
add
fdivrp
jle
mov
lods
push
add
int3
repnz
sub
cmpsl
clc
mov
cli
mov
mov
mov
in
cmp
push
add
or
xor
add
clc
dec
sub
push
clc
enter
clc
popf
fwait
xchg
movsb
clc
std
aas
push
aad
sub
xabort
sbb
cmp
fucom
clc
stos
push
add
jge
clc
cmc
jg
xbegin
out
sbb
pop
mov
clc
comiss
xor
add
clc
cmp
add
ss
push
add
incl
clc
nop
jmp
insl
pop
sub
repz
cmp
clc
aas
imul
add
xchg
adc
clc
into
mov
and
add
clc
cmp
clc
xchg
ret
push
clc
cmp
xor
cmp
adc
add
add
bound
add
mov
nop
jmp
arpl
add
pop
or
jle
mov
inc
clc
ret
clc
sbb
adc
push
pop
cmp
jp
hlt
xor
mov
nop
jmp
dec
mov
clc
mov
add
adc
pop
clc
dec
in
sbb
cmp
add
adc
pop
scas
jb
add
add
pop
ljmp
xor
add
or
clc
sub
gs
aad
jecxz
aad
inc
clc
cmp
clc
or
clc
cld
xbegin
clc
hlt
mov
mov
pop
xbegin
clc
fstl
jle
mov
jl
clc
push
fs
sbb
add
add
mulb
add
or
clc
sub
lret
int3
and
add
xchg
adc
add
add
add
add
sbb
in
int3
mov
mov
out
cmp
cmc
je
add
cmp
push
add
add
add
xabort
clc
adc
clc
mov
test
fstpl
or
adc
test
rol
clc
jg
leave
mov
inc
add
jp
cld
rorl
or
or
fwait
imul
nop
jmp
dec
repz
aas
cmp
jb
add
call
fiaddl
add
add
jle
mov
inc
clc
add
test
push
mov
mov
jns
add
mov
add
adc
add
clc
pop
clc
into
ds
or
add
dec
or
add
clc
xchg
push
lret
imull
xlat
mov
clc
clc
xabort
mov
mov
push
mov
xchg
ret
pushl
sub
add
icebp
cmp
push
das
fcoml
add
or
cmp
dec
add
clc
jecxz
testl
sub
add
clc
aas
movsl
clc
pusha
add
inc
clc
sub
clc
movsb
clc
pop
mov
popa
add
lcall
fs
mov
stos
jae
add
std
push
sbb
xchg
ret
push
cmp
mov
pop
outsl
fs
flds
add
push
imul
pusha
add
mov
add
je
clc
sub
jb
add
clc
mov
clc
dec
scas
adc
add
add
gs
addr16
inc
add
sub
and
mov
scas
mov
add
pop
ljmp
in
jns
add
cmc
xor
add
clc
inc
clc
mov
cmp
fnsave
and
add
jns
cmp
adc
add
pop
cmp
add
pop
mov
adc
add
add
add
fistps
mov
clc
mov
clc
inc
add
mov
add
sbb
add
sbb
nop
jmp
add
push
stos
mov
nop
jmp
mov
add
push
jle
decb
mov
out
pop
bound
add
xchg
jns
into
shlb
clc
push
add
mov
clc
into
and
or
in
inc
clc
add
ret
cmp
adc
add
mov
jae
add
sub
jge
das
mov
mov
in
ret
clc
leave
roll
mov
inc
add
dec
mov
mov
jl
test
adc
add
add
mov
clc
and
add
xchg
fmuls
adc
add
lret
aad
dec
je
add
add
mov
adc
add
lods
jge
xor
aam
fsubrl
stc
or
clc
bound
add
and
push
add
mov
clc
test
cltd
dec
mov
icebp
std
sub
or
push
pusha
add
xchg
in
pop
ficoms
daa
clc
inc
clc
fidivrs
loope
gs
mov
clc
fwait
cld
cs
cs
ret
clc
in
pop
cmp
push
add
sbb
in
add
add
in
cmpsb
clc
jnp
inc
add
lock
test
jmp
xchg
arpl
add
clc
mov
xchg
or
outsb
sar
sub
mov
dec
adc
add
clc
sbb
mov
cld
pop
clc
rol
clc
mov
sub
add
nop
jmp
repz
fwait
add
push
add
xor
add
xchg
and
add
mov
or
jmp
sub
jecxz
add
and
add
in
es
mov
stc
xchg
leave
dec
test
sbb
or
clc
fwait
push
clc
and
lea
nop
jmp
add
push
add
aam
add
es
jg
clc
shll
or
add
cmp
clc
jmp
bound
add
add
out
hlt
pop
xchg
je
add
jae
add
sar
decl
test
sti
call
add
pop
pop
jp
add
xchg
dec
arpl
add
push
add
cmp
clc
mov
aam
addr16
push
ficoml
add
clc
fisttpl
es
adc
add
fwait
in
scas
inc
add
xor
add
loope
jno
add
mov
sbb
lock
inc
clc
sub
mov
clc
gs
xor
add
add
clc
mov
add
lcall
jne
dec
sahf
dec
cmp
mov
add
and
add
mov
add
add
je
movsl
clc
mov
cmp
cmc
mov
clc
dec
test
cwtl
fadd
clc
cmp
add
add
mov
call
add
clc
and
push
add
repnz
js
lret
pushf
pop
out
in
pop
clc
mov
scas
or
clc
fisttpll
sti
mov
add
aaa
xchg
mov
mov
ficoms
xchg
stos
clc
lret
mov
clc
mov
je
pop
push
clc
cmp
clc
adc
add
add
ret
clc
aad
mov
mov
cmc
je
test
jg
outsl
or
data16
cmp
push
clc
movsb
clc
pushf
add
add
repnz
fildll
add
push
add
dec
dec
sub
lock
lods
mov
rorb
clc
aaa
or
and
add
adc
add
xchg
mov
clc
mov
mov
inc
clc
fildl
pusha
add
pop
mov
add
add
in
pop
repnz
ret
clc
sti
adc
add
add
clc
mov
ret
clc
and
mov
aaa
add
cltd
lods
mov
mov
push
add
mov
clc
mov
sbb
clc
add
mov
cmp
sbb
cmp
add
add
lods
aaa
adc
clc
lret
int3
int3
or
cmp
add
dec
cmp
add
outsb
enter
add
dec
and
add
xor
add
xchg
xor
add
shlb
add
add
mov
inc
clc
and
add
sub
repz
add
add
popf
leave
inc
clc
addr16
adc
add
add
inc
add
sbb
mov
xchg
ret
jne
add
mov
das
and
add
jle
push
nop
jmp
cmp
add
mov
clc
cmp
xor
add
pop
mov
clc
out
lahf
sub
push
add
jp
js
push
jecxz
push
add
sub
add
inc
add
mov
clc
movsb
clc
pop
ret
clc
mov
push
clc
out
jg
push
nop
jmp
add
sub
pop
clc
jb
add
add
dec
fwait
mov
push
add
xchg
dec
sub
leave
sub
add
add
sti
adc
cmp
add
xchg
and
inc
add
stos
cmp
inc
clc
push
out
loope
jne
add
in
insb
outsl
push
clc
xbegin
in
add
add
add
sbb
add
aaa
pop
inc
clc
lods
xor
add
int3
pop
jecxz
dec
mov
add
dec
mov
pop
je
mov
loopne
mov
clc
push
clc
inc
loop
nop
jmp
arpl
hlt
xchg
cld
and
add
clc
or
sub
pop
push
mov
nop
jmp
test
dec
jg
add
in
and
add
clc
sbb
inc
add
and
add
test
mov
add
add
inc
add
dec
inc
add
sar
sbb
mov
add
clc
in
leave
fldcw
out
mov
add
mov
clc
or
rclb
clc
clc
pusha
add
mov
add
add
nop
jmp
jg
sbb
clc
fwait
jg
movsl
clc
aaa
jl
clc
ret
clc
add
add
fsub
clc
inc
clc
inc
clc
addr16
mov
popa
add
insl
push
clc
fistpl
clc
jns
mov
dec
jne
clc
and
add
addr16
sbb
nop
jmp
fwait
xchg
inc
clc
int
adc
add
jg
nop
jmp
add
ljmp
add
add
and
add
outsb
dec
sbb
rcll
jbe
lods
fs
jg
cmp
cmpsb
clc
test
mov
aam
push
add
jns
add
stos
push
imull
ja
and
cmp
jae
jmp
dec
add
pop
cmp
pop
inc
add
popf
outsl
scas
inc
add
dec
fwait
lea
xbegin
add
sahf
pop
sub
add
addr16
mov
inc
add
insl
rcrl
icebp
sahf
cltd
cmp
fisttpll
clc
mov
ret
data16
out
test
aaa
mov
jmp
nop
jmp
mov
push
sbb
pop
cwtl
jne
add
jae
add
xor
add
jo
add
add
cmp
add
iret
pop
pop
cmpsl
clc
pop
dec
daa
clc
sub
cmp
pause
mov
dec
out
out
sar
clc
scas
pop
dec
mov
clc
mov
mov
movsl
clc
jmp
fsubs
xchg
jge
clc
loop
push
add
fadd
clc
sub
mov
stos
data16
testl
imul
add
add
fsts
add
adcb
dec
cmp
add
pop
mov
add
add
mov
sar
enter
enter
das
add
outsb
into
xchg
add
pop
sbb
add
inc
clc
xor
add
sahf
inc
add
repz
lcall
push
xor
pop
cmp
jmp
add
std
mov
mov
clc
test
adc
pop
xchg
int
sar
sbb
clc
inc
clc
aas
mov
mov
add
cs
cmp
pop
push
ss
jno
add
add
add
xchg
push
in
rclb
enter
add
xor
push
fcompl
push
add
clc
stos
pop
movsb
clc
sub
clc
ret
add
jle
clc
xor
add
cs
add
add
sbb
lods
cmp
mov
loop
test
clc
sbb
mov
and
test
jmp
lret
add
add
cmc
mov
es
xor
add
add
add
mov
add
xchg
lea
pop
test
xchg
add
add
jbe
clc
xchg
fcompl
xor
add
mov
ret
jns
clc
jo
add
fstl
add
jl
and
add
out
das
sub
clc
stos
add
add
add
xor
add
or
clc
push
sahf
and
add
clc
add
dec
sar
out
jmp
add
nop
jmp
mov
scas
outsb
mov
push
add
push
mov
clc
lcall
cwtl
mov
clc
jns
push
xchg
xchg
cmp
clc
xchg
ret
clc
adc
mov
add
js
add
jbe
clc
jl
loopne
insb
ja
and
add
clc
jae
add
aaa
int
jbe
out
sbb
jmp
and
add
in
fcmovbe
cmp
clc
dec
push
mov
add
cmp
pop
mov
cmp
add
clc
xchg
ret
clc
push
add
sar
flds
mov
add
add
jecxz
bound
add
xchg
add
add
cmp
add
push
add
in
mov
xchg
mov
add
push
in
jmp
add
push
add
dec
lcall
rcll
clc
pop
mov
and
fwait
loope
test
cmp
enter
clc
xlat
aam
add
mov
insl
fnstenv
mov
call
add
outsb
cmp
fdiv
ret
clc
jl
insb
adc
add
in
push
add
push
sub
xchg
mov
test
adc
add
scas
cltd
pop
stos
cld
sar
mov
add
pusha
add
push
nop
cmp
xlat
jno
add
clc
cmp
add
pop
je
bound
add
cmp
push
add
in
cmpsb
clc
fdivl
xchg
xchg
pop
push
xchg
nop
jmp
add
sub
lods
dec
xor
clc
mov
dec
push
add
dec
xchg
and
add
add
add
nop
jmp
push
imul
aad
add
push
cmp
adc
iret
mov
add
mov
nop
jmp
dec
cmp
dec
aas
and
add
inc
add
sub
add
add
add
mov
add
pop
jl
add
ja
lods
xlat
aas
fs
cmp
push
pushf
scas
in
mov
add
nop
jmp
jne
add
std
cmp
xchg
insl
clc
push
mov
nop
jmp
incl
add
push
aaa
in
xor
add
xor
add
push
sbb
je
add
push
clc
mov
add
rcrb
and
sub
int
inc
add
into
cmp
stos
das
add
push
add
inc
clc
and
add
pop
jo
add
stos
push
mov
xchg
ret
test
inc
clc
sub
lcall
xor
add
jnp
loope
jae
add
clc
aam
mov
clc
push
add
scas
cmp
cmpsl
clc
and
add
rorb
add
add
push
cmp
imul
adc
add
fimull
lret
cmp
or
cld
sar
clc
pop
lcall
add
popf
or
clc
sar
add
inc
clc
xchg
and
add
jne
mov
data16
aas
mul
clc
popa
add
mov
clc
or
add
cmp
add
lods
xor
add
mov
clc
notb
clc
adc
add
clc
data16
adc
add
je
mov
pop
mov
daa
clc
lods
jl
clc
adc
add
fidivs
add
test
or
clc
lcall
scas
mov
clc
test
pop
sar
into
ret
clc
and
add
cmp
inc
clc
mov
clc
inc
add
data16
fadd
clc
add
add
clc
add
add
rcrl
js
cwtl
lods
es
rclb
add
add
and
sub
aaa
pop
pop
xor
clc
fmulp
jno
add
add
clc
mov
mov
adc
add
stos
xor
mov
sbb
dec
sub
pusha
add
mov
mov
add
jae
add
ja
add
loopne
cmp
clc
xchg
ret
enter
adc
add
aas
or
add
outsb
sbb
bound
add
fldenv
add
inc
add
push
test
call
xabort
clc
xchg
pop
sbb
mov
lret
mov
nop
jmp
imul
add
clc
push
nop
jmp
add
jg
in
pop
push
mov
xchg
ret
add
pop
jne
add
inc
add
xchg
outsl
pusha
add
jns
in
fnstcw
ret
xchg
dec
or
push
add
loope
ss
cmp
nop
jmp
test
lret
js
clc
mov
mov
xchg
ret
push
dec
and
add
lods
nop
jmp
arpl
cld
adc
fwait
add
and
push
adc
add
pop
pusha
add
lods
sti
or
mov
nop
jmp
dec
xchg
popl
aam
clc
int
xchg
push
add
ss
clc
iret
mov
jmp
into
dec
cmp
mov
xchg
or
fcomip
ret
push
jmp
add
add
nop
jmp
dec
jecxz
dec
pop
jne
add
mov
clc
lock
vmovhps
nop
jmp
jg
test
push
adc
sub
ret
jbe
add
in
add
add
das
sbb
add
xchg
js
clc
push
mov
add
nop
jmp
dec
pop
add
mov
pusha
add
mov
add
mov
or
mov
outsb
push
nop
jmp
add
add
jg
movswl
nop
jmp
add
mov
clc
gs
stos
mov
cmpsl
clc
aad
int3
mov
mov
popl
clc
push
adc
add
jns
dec
add
add
cmp
cmc
leave
mov
sar
sar
clc
cltd
cmp
sub
add
hlt
test
jb
add
fwait
hlt
daa
clc
inc
add
movsb
clc
punpckhwd
xor
add
add
inc
add
iret
jp,pn
clc
stos
mov
clc
adc
add
add
adc
clc
stos
testb
insb
mov
js
push
mov
and
add
clc
dec
clc
fbstp
sub
add
adc
add
add
clc
push
clc
xchg
clc
xchg
jmp
mov
add
popa
add
add
and
add
adc
add
dec
lret
clc
jo
add
add
mov
sar
lahf
in
test
cmp
push
gs
push
mov
jmp
xchg
jbe
mov
add
clc
push
lea
nop
jmp
jecxz
in
jg
cmp
clc
adc
add
add
add
arpl
add
clc
xchg
mov
xbegin
test
add
xor
add
iret
shrl
cltd
fmull
stc
arpl
add
add
cltd
mov
add
mov
pop
inc
add
call
leave
es
cltd
mov
lock
add
add
fstpt
sbb
jl
and
add
xchg
cmp
mov
push
or
xchg
ret
cltd
add
outsb
mov
add
mov
jecxz
mov
inc
add
loop
inc
clc
xor
int
test
fimull
add
imul
adc
mov
mov
add
je
clc
mov
clc
test
add
sar
je
jae
add
enter
call
clc
mov
add
sbb
lods
pop
mov
clc
xchg
faddl
add
adc
add
cmp
pop
jl
fs
fidivrs
add
outsb
push
add
aad
cmp
lods
push
clc
jne
clc
addr16
sarl
add
push
mov
xchg
ret
dec
imul
popf
cltd
aam
clc
js
clc
cwtl
and
sub
jne
add
fdivrs
pop
out
mov
inc
clc
cltd
push
add
mov
add
lea
add
add
clc
nop
sbb
adc
clc
fwait
sti
pop
pop
cmpsl
clc
call
stos
data16
cmp
inc
clc
mov
add
fadd
clc
cmpsl
clc
cld
or
dec
mov
add
xor
out
dec
and
add
sbb
jnp
clc
adc
add
inc
add
mov
sar
push
add
xor
add
clc
cmp
add
ja
daa
clc
lods
sub
cmp
clc
sbb
enter
cmp
add
pusha
add
cmp
jo
add
clc
mov
or
mov
nop
jmp
mov
test
repz
lock
add
xor
add
add
cmp
mov
xchg
mov
add
mov
sub
xor
dec
and
add
push
shrb
add
roll
clc
xchg
mov
cmp
nop
dec
pop
add
testb
dec
lods
jno
add
inc
clc
nop
fs
sbb
add
clc
fsubrp
cltd
jne
add
jg
clc
test
pop
cmp
ret
clc
ret
add
and
add
clc
jmp
pop
clc
lea
add
jns
jg
add
add
add
clc
sub
clc
mov
cmp
jae
add
cli
xor
inc
clc
pop
mov
clc
in
pop
lret
add
cmp
test
and
add
inc
add
mov
clc
xchg
or
add
imul
jb
add
int3
sbb
add
pop
insb
cwtl
sub
clc
add
add
out
pop
and
add
or
push
jns
add
out
adc
add
clc
test
inc
add
xor
add
add
adc
fcoms
add
clc
push
add
test
clc
jnp
clc
ret
clc
add
add
call
das
test
clc
outsl
add
add
mov
clc
pop
shl
inc
clc
mov
sbb
test
jmp
sbb
mov
add
dec
cmp
add
pop
push
mov
aad
mov
incl
add
sbb
pop
cmp
mov
sbbl
popa
cli
incl
movsl
clc
or
clc
test
mov
mov
sar
addr16
hlt
lcall
add
ja
inc
add
call
xor
add
notb
xor
add
popa
push
mov
xchg
ret
in
jbe
xor
clc
jl
mov
clc
loopne
sub
clc
pop
lods
pop
pop
jb
add
mov
cmp
jl
push
add
mov
jecxz
cmpsl
clc
call
mov
sub
loop
nop
jmp
jle
jg
dec
mov
pop
lret
clc
jl
jae
add
inc
add
ds
cmp
add
add
inc
add
fs
lcall
inc
clc
sub
nop
jmp
xchg
lods
add
add
cmc
mov
pop
ja
data16
adc
add
add
push
add
mov
push
add
xlat
mov
clc
dec
inc
clc
or
add
dec
dec
xlat
stos
je
clc
mov
mov
add
push
clc
ds
mov
mov
lods
dec
movsb
clc
fmull
clc
xor
add
clc
jmp
jmp
sbb
dec
pop
add
test
xbegin
clc
inc
clc
mov
jb
add
add
adc
clc
inc
add
daa
clc
fwait
hlt
jne
int3
test
cld
or
mov
clc
repz
clc
pop
test
clc
xchg
sbb
add
enter
movb
jmp
xchg
fwait
imul
mov
jnp
ds
xchg
push
inc
add
outsl
daa
clc
inc
add
add
add
cmp
add
jo
add
clc
sti
inc
clc
cmp
sbb
jmp
add
dec
dec
push
add
movsl
clc
inc
add
rcr
pop
fs
xchg
jle
lret
cmp
clc
sbb
pop
adc
clc
stos
hlt
push
add
test
add
add
icebp
cmp
mov
data16
adc
add
inc
iret
or
add
aaa
dec
scas
popl
mov
daa
clc
xchg
xabort
scas
cmp
out
mov
mov
nop
jmp
fs
add
fstps
dec
scas
movsb
clc
cmp
es
sahf
repz
add
pop
insb
mov
clc
cmpsl
clc
sbb
les
add
mov
clc
lahf
out
mov
arpl
add
clc
aas
push
ja
xor
nop
jmp
jne
dec
outsb
cmp
sub
movsb
clc
xchg
mov
cwtl
nop
jmp
xor
add
xchg
nop
jmp
mov
pop
dec
xchg
sbb
out
rcrb
push
mov
xchg
ret
mov
clc
sub
dec
fcomi
and
add
clc
xchg
sar
mov
sub
divl
push
clc
aaa
fs
in
cld
adc
add
clc
repz
add
mov
nop
jmp
cs
xchg
mov
add
data16
call
adc
add
ficompl
aaa
imul
add
or
add
cmp
push
mov
nop
jmp
pop
add
sbb
cs
dec
sub
in
ja
xchg
imul
mov
add
push
clc
xchg
add
add
int3
and
add
add
clc
jno
add
jl
push
add
mov
clc
test
shll
adc
add
inc
clc
data16
adc
repnz
sub
clc
fnop
cmp
clc
mov
call
clc
or
insb
cmp
and
add
add
lret
sar
sub
aad
clc
into
add
add
push
mov
xchg
ret
jne
jbe
clc
sub
sbb
mov
cmp
clc
inc
clc
mov
add
sbb
addr16
fstl
add
jns
clc
xchg
cmp
mov
add
nop
jmp
xchg
mov
clc
loopne
arpl
add
jbe
xchg
es
sub
and
push
cld
pop
clc
frstor
add
add
clc
or
icebp
add
xor
add
clc
inc
add
mov
inc
add
test
ret
clc
pushf
pop
or
clc
loopne
sbb
movsb
push
mov
xchg
ret
jecxz
add
icebp
fdivr
sbb
pop
fs
inc
clc
cli
cmp
push
mov
repz
fs
pop
das
test
jno
add
clc
ja
clc
scas
out
cmp
sub
add
fistl
add
fs
cli
push
push
clc
js
pop
jl
arpl
add
add
sub
addr16
inc
clc
sub
clc
push
clc
jl
std
sub
or
shll
add
add
jb
add
clc
shr
jns
mov
dec
or
stc
arpl
add
jg
adc
add
inc
adc
hlt
dec
add
dec
repz
add
clc
mov
cmc
fimuls
jl
add
mov
clc
push
add
into
and
xchg
cmp
fsubp
clc
test
clc
pop
xchg
add
add
dec
add
add
clc
cmp
pusha
add
cwtl
sub
clc
lock
clc
inc
clc
add
add
push
add
insl
out
and
mov
clc
xchg
dec
faddl
clc
inc
clc
scas
mov
nop
jmp
cld
ss
in
push
test
clc
nop
lcall
or
add
fistpll
clc
sbb
cvtpi2ps
add
cwtl
movsb
clc
lcall
xor
fimull
pop
dec
test
std
hlt
add
add
ret
cld
dec
dec
jns
jno
add
nop
jmp
dec
add
imul
clc
push
add
mov
pop
push
add
dec
fcomi
negb
clc
inc
clc
cmp
es
or
mov
push
add
clc
or
sub
cltd
inc
clc
cmp
es
cmp
arpl
add
mov
cmp
clc
xchg
cmp
jg
xchg
cmp
ret
clc
in
sbb
jo
add
add
ret
clc
mov
clc
fildl
add
cmp
in
mov
clc
lret
jle
mov
mov
push
xchg
aad
xor
add
jb
push
mov
xchg
ret
insl
push
sbb
adc
xor
aad
sbb
test
call
jmp
pop
jp
add
iret
dec
and
nop
jmp
dec
push
lods
jne
xchg
xchg
mov
dec
sar
clc
jmp
dec
call
clc
jne
mov
mov
mov
clc
xchg
or
add
call
sub
xchg
cltd
in
and
add
mov
clc
dec
lcall
mov
nop
jmp
cld
mov
cld
add
add
clc
in
out
mov
loopne
push
mov
hlt
repz
jno
add
adc
add
clc
push
clc
fidivl
add
popa
add
jae
add
add
iret
dec
cwtl
xor
add
mov
clc
mov
or
inc
clc
lcall
add
jb
add
jge
sub
or
add
lea
loope
fs
icebp
sub
faddl
test
loopne
pop
push
and
add
add
mov
mov
push
clc
cmp
test
jp
pop
pusha
add
das
pop
fdivs
pop
and
cmp
add
outsl
into
dec
mov
clc
pop
cmp
cmp
es
loopne
dec
movsb
clc
adc
add
rorb
dec
test
fdivl
fwait
es
adc
add
mov
add
add
pushl
xchg
add
xlat
add
xor
add
adc
inc
add
mov
clc
pop
pop
lock
aad
add
adc
dec
clc
cmp
push
mov
xchg
ret
jg
jbe
sub
add
repnz
cmc
aam
push
add
or
clc
adc
add
add
fidivs
jae
add
and
add
clc
jmp
dec
and
add
add
adc
add
leave
pop
push
cmp
pushf
scas
stos
scas
loope
movsb
clc
sbb
and
add
add
clc
xchg
insl
and
add
pop
clc
lahf
pop
js
push
nop
jmp
jg
test
add
push
add
adc
add
push
add
jg
lods
test
stos
and
add
add
jl
add
lcall
add
add
jne
add
sub
clc
shl
mov
in
pop
push
ret
ds
clc
mov
clc
out
test
dec
adc
add
mov
pop
xor
add
add
clc
mov
xor
call
iret
xor
add
hlt
jbe
xchg
cs
test
enter
out
daa
clc
dec
sbb
and
add
into
and
add
ret
clc
xchg
mov
cmc
insl
pop
clc
mov
fs
mov
cmp
add
stos
pop
lret
cmp
add
add
mov
das
lahf
bound
add
or
and
add
or
sbb
push
cmp
pop
test
pop
imul
clc
xor
clc
cmp
clc
fsubl
add
test
and
add
add
xchg
push
sub
add
add
inc
add
add
add
push
nop
jmp
add
fwait
push
fs
pop
xor
js
add
sub
int
pop
js
shl
nop
jmp
mov
pop
pop
test
cs
test
aam
push
loopne
push
subl
push
mov
xchg
ret
add
add
jbe
xchg
push
clc
jno
add
adc
add
xchg
nop
jmp
dec
sbb
clc
fsubs
add
bound
add
add
nop
jmp
test
adc
add
sar
clc
mov
mov
repnz
lcall
dec
push
out
test
mov
nop
jmp
add
add
clc
mov
push
clc
lock
add
std
and
add
clc
sub
testl
adc
push
add
jle
mov
add
add
add
add
incl
jg
aaa
jbe
push
add
loope
dec
jo
add
lea
add
add
enter
add
jecxz
pop
js
clc
push
push
push
mov
xchg
ret
insl
insl
pop
mov
enter
cmp
outsb
sbb
jp
lods
test
mov
cmp
mov
nop
jmp
jle
aaa
scas
hlt
xchg
bound
add
clc
aad
out
xchg
stos
jecxz
inc
clc
mov
clc
sar
clc
dec
and
pop
loope
cmp
adc
add
pusha
add
sahf
shl
ss
sbb
cmp
pop
pop
dec
mov
or
test
popf
call
call
and
jmp
mov
ss
iret
jg
in
jne
sbb
and
mov
rol
clc
jmp
clc
jecxz
jnp
add
lret
test
add
ss
mov
and
mov
imul
mov
add
sar
mov
add
call
inc
add
sbb
mov
or
test
adc
add
add
sar
clc
push
push
nop
jmp
sbb
add
sbb
push
pop
jne
cltd
add
add
xchg
scas
je
add
dec
mov
pop
xchg
incl
mov
aas
add
cmp
jae
add
or
clc
into
ja
daa
clc
sub
clc
jnp
enter
mov
nop
jmp
cld
repz
insl
add
mov
jne
nop
jmp
cmp
add
clc
daa
clc
push
add
inc
add
ja
in
lret
adc
pusha
add
and
add
add
clc
pop
clc
nop
xabort
clc
adc
lahf
pop
aaa
add
add
mov
leave
lcall
ss
clc
jno
add
mov
mov
add
clc
ss
push
das
jae
add
xor
add
movsb
clc
lret
clc
scas
push
ss
cmpsb
clc
pop
int3
repz
insl
pop
cs
mov
nop
jmp
jg
sbb
xchg
ds
add
xchg
jl
clc
pop
ljmp
idivl
cmp
adc
add
sub
sbb
and
add
add
je
test
rcrb
clc
stos
add
add
clc
dec
fistl
add
clc
ja
pusha
add
mov
lods
dec
cmp
add
cmp
and
jmp
xchg
dec
dec
dec
lods
jecxz
sbb
faddl
add
sub
mov
xor
add
add
inc
clc
inc
clc
push
add
test
mov
hlt
add
add
clc
scas
pop
cmp
cmpsb
clc
loopne
push
adc
add
clc
push
shl
nop
jmp
xchg
xabort
clc
jbe
cwtl
pushf
pushf
leave
pop
dec
daa
clc
push
jb
jmp
dec
test
sbb
clc
mov
decl
jmp
dec
repz
sbb
lods
and
imul
jne
cld
jne
sub
xchg
call
add
clc
outsb
lock
divl
dec
jno
add
xor
nop
jmp
xchg
mov
sbb
add
add
cmpsl
clc
and
add
ljmp
dec
and
add
add
push
movsl
clc
insb
rclb
add
add
clc
xor
add
leave
jg
push
aas
outsl
jge
rcrl
and
sub
adc
add
push
add
dec
in
pop
add
add
add
mov
add
ficomps
inc
add
shl
loope
jns
mov
je
clc
sub
xor
add
sub
fisttps
jnp
push
mov
lods
xor
add
aad
clc
cwtl
ret
xchg
pop
lahf
add
add
add
add
clc
mov
pop
and
add
inc
add
or
inc
add
fbld
fcoml
cmc
jno
add
clc
add
scas
arpl
add
insb
movsl
clc
outsb
xlat
out
mov
jl
mov
clc
cmp
sbb
add
fistpll
stc
pop
sbb
jne
nop
jmp
mov
mov
mov
sub
clc
push
push
mov
xchg
ret
sbb
push
adc
add
jl
add
insb
mov
add
in
iret
xchg
dec
adc
dec
mov
mov
sub
nop
jmp
add
dec
in
push
cmp
clc
aas
cmpsb
clc
cltd
or
or
jmp
pop
cmp
mov
mov
add
nop
jmp
in
jne
loopne
bound
add
add
scas
dec
outsb
hlt
test
xchg
dec
push
jmp
arpl
cld
add
fstl
add
faddl
add
and
add
xor
add
or
add
jb
add
add
sar
incl
inc
cmp
jmp
xchg
jg
push
cmp
jge
cltd
lret
int
dec
xor
add
cmp
outsb
xchg
ret
clc
shrl
test
xchg
jbe
popa
add
jns
cmp
pop
aam
js
clc
jmp
clc
mov
nop
jmp
dec
outsb
cmp
outsb
mov
clc
testb
mov
clc
xchg
pop
push
and
aas
fisttpl
sar
adc
pop
nop
jmp
sbb
test
xchg
insl
fwait
pop
dec
jb
add
clc
adc
add
rcr
mov
gs
pop
ja
xchg
ss
mov
sbb
mov
xchg
ret
jg
add
and
add
add
leave
inc
add
loopne
aaa
xchg
xchg
inc
clc
je
hlt
jo
add
add
mov
xchg
cmp
lret
pop
ds
clc
push
loop
incl
fwait
sbb
jg
add
xchg
call
and
in
inc
clc
push
push
das
cmp
push
lret
in
ret
cmp
lcall
adc
add
pop
push
xor
add
sti
or
sahf
inc
clc
push
xchg
mov
add
add
clc
xlat
jge
xor
add
nop
jmp
cmp
into
popl
sbb
mov
clc
jmp
js
or
es
imul
jne
clc
ljmp
nop
jmp
jbe
xchg
fwait
mov
push
dec
xchg
pop
lret
setl
xchg
nop
jmp
aaa
mov
insl
sub
insl
and
add
clc
push
add
add
addr16
aas
pop
xchg
out
push
pop
xor
add
das
lock
nop
cmp
mov
xchg
rclb
pop
xchg
insl
mov
xchg
out
rorl
sub
clc
xbegin
sub
add
xlat
adc
add
rcr
pop
and
add
and
add
push
add
push
add
add
mov
push
add
sub
push
sar
add
pop
cld
jecxz
sbb
leave
enter
mov
pop
scas
cmp
add
dec
loope
loopne
stc
dec
push
clc
test
clc
call
add
sar
adc
add
pusha
add
movsb
clc
xor
add
fcoms
data16
inc
clc
hlt
mov
movsl
in
incl
add
jns
cmp
clc
data16
sti
sbb
cmp
sbb
mov
xchg
ret
mov
or
je
push
push
or
add
fs
cmp
add
cmc
xor
and
add
add
jbe
clc
xchg
sub
add
and
add
clc
add
add
add
add
pop
mov
clc
dec
push
jecxz
inc
add
int3
mov
icebp
movaps
add
add
pop
clc
cmpsl
clc
fmull
clc
dec
lods
xor
add
loopne
inc
add
cltd
pop
xor
add
clc
xchg
sti
lcall
fsubl
add
fs
imul
sub
clc
test
fcomps
lock
cmpsl
clc
insl
insb
mov
add
clc
jl
add
movsl
clc
outsl
lods
in
incl
jmp
jmp
jg
add
mov
add
nop
jmp
add
mov
push
push
clc
xchg
cmp
push
or
push
xor
add
jmp
test
add
scas
adc
mov
add
cmp
clc
cmp
or
add
and
add
mov
in
cs
test
clc
xor
add
aas
xor
inc
clc
push
add
add
add
out
mov
inc
add
decl
mov
push
xbegin
add
loopne
lods
cmp
cmp
sub
stos
insb
add
add
mov
clc
jno
add
clc
pop
push
mov
clc
jno
add
add
add
add
sbb
cmp
clc
cmp
aam
add
kmovw
cmp
dec
mov
mov
push
pmaddwd
in
mov
cmp
nop
jmp
push
dec
dec
add
clc
or
sub
movsl
clc
inc
add
insb
mul
clc
push
sbb
mov
in
call
mov
add
sub
std
and
add
scas
pushf
or
clc
leave
jne
jle
pusha
add
push
clc
test
adc
clc
xchg
and
clc
push
push
push
mov
xchg
ret
push
cmp
add
cmp
xabort
add
es
sbb
jne
xor
add
add
scas
and
adc
add
push
mov
nop
jmp
in
jne
adc
inc
add
mov
int3
adc
add
fwait
adc
clc
jb
add
jle
dec
jp
sahf
arpl
add
clc
push
clc
movsb
clc
gs
mov
inc
clc
pusha
add
lock
pop
jp
clc
xor
or
add
add
gs
loopne
repnz
add
push
sub
add
pop
add
add
clc
fucomi
fimuls
loope
xabort
clc
cwtl
lods
lcall
sub
mov
mov
sti
pop
inc
clc
xor
add
add
jl
int3
roll
jmp
scas
mov
clc
fildll
clc
addr16
fsubs
add
jno
add
cmp
cmp
and
mov
sbb
add
daa
clc
int3
aad
mov
add
add
push
dec
bound
add
mov
push
clc
pop
or
movsb
clc
pop
clc
fs
push
or
dec
and
add
inc
clc
add
xchg
rcrb
cmp
add
jbe
pop
fwait
and
add
add
xor
add
add
jl
daa
clc
jmp
xchg
pop
cmp
clc
dec
int
sub
sub
jmp
clc
imul
push
sti
cwtl
out
test
in
outsb
inc
add
xchg
dec
cmp
clc
push
add
es
adc
add
cmp
clc
push
clc
cmp
add
pushf
dec
mov
jne
push
xchg
outsb
fstps
pop
pushf
cmp
push
clc
testl
jp
cmc
push
clc
cli
cmp
add
and
mov
sbb
clc
aam
xor
rclb
add
jb
add
iret
jae
add
pushf
je
mov
cmp
inc
add
dec
mov
add
xchg
lret
cmp
clc
mov
outsl
ret
clc
test
sbb
xor
add
jo
add
add
out
lcall
add
mov
jb
add
clc
adc
add
jmp
test
mov
rep
aaa
test
xchg
sbb
add
mov
clc
add
add
sbb
clc
pop
mov
dec
mov
add
es
pop
pop
push
test
dec
cmp
sbb
cmp
xchg
out
dec
ja
incl
pause
jmp
dec
xor
xor
inc
clc
out
push
jmp
test
dec
pop
mov
add
rcrb
dec
stos
xor
add
add
aaa
pop
test
pop
xchg
xor
call
add
call
xor
ljmp
xchg
mov
add
hlt
sbb
cltd
jmp
repz
add
call
jmp
repz
add
xchg
mov
add
arpl
add
or
fidivrl
sub
clc
popf
dec
lods
pop
add
add
cli
outsb
pusha
add
je
lea
ret
clc
jbe
clc
and
add
add
scas
scas
pop
es
xlat
adc
add
add
outsl
js
in
outsb
leave
paddsb
xor
add
dec
stos
pop
clc
dec
cmp
clc
fsubs
clc
mov
lock
clc
xchg
nop
ficomps
nop
pop
inc
add
pop
clc
ret
clc
ret
clc
adc
add
mov
dec
mov
ljmp
frstpm(287
clc
adc
add
clc
gs
add
js
adc
xchg
pop
mov
add
cmp
insb
or
add
fstpl
sub
lcall
sub
sbb
data16
pop
mov
add
in
cmp
clc
push
int3
or
push
add
sti
sub
into
popf
inc
add
out
popf
sar
clc
and
add
aas
cwtl
aas
pop
sub
mov
nop
jmp
add
mov
xlat
cmpsb
clc
je
clc
rorl
add
mov
jmp
jne
pop
mov
add
lods
xchg
divl
ret
clc
sbb
mov
add
pushf
into
lods
and
loopne
repz
pop
and
add
add
push
out
daa
clc
test
sub
inc
clc
fdivrl
clc
nop
popa
add
push
dec
loop
call
lods
dec
jb
add
pop
xchg
push
xchg
out
sub
clc
adc
add
add
mov
clc
test
jecxz
add
pop
popa
add
aad
movsl
clc
or
add
in
mov
insb
xchg
cmpsl
clc
mov
add
mov
clc
out
rcll
add
cmpsl
clc
vcmpps
outsb
fnsave
clc
pop
clc
cmp
clc
sar
outsb
inc
add
adc
clc
outsl
fidivs
add
push
aas
or
mov
cmp
aam
add
inc
clc
mov
clc
scas
loopne
xor
add
lods
jo
add
std
lods
pop
mov
ljmp
fldenv
repz
push
mov
xchg
ret
push
dec
add
xlat
dec
add
add
cmpsb
clc
cmp
cmp
add
add
add
add
adc
add
sbb
pushf
lcall
mov
or
bnd
jae
add
in
js,pt
in
cmp
aaa
pop
clc
cmp
add
mov
or
add
nop
jmp
incl
add
mov
jo
add
add
add
add
dec
and
add
add
mov
and
push
je
nop
jmp
lods
sbb
lea
mov
clc
push
test
add
cltd
sub
push
cmp
cld
fwait
test
pop
push
add
jnp
clc
inc
add
test
jno
add
enter
das
and
or
ret
clc
outsl
pop
xchg
dec
into
insl
leave
mov
add
sub
clc
pop
clc
mov
clc
mov
clc
lret
rcl
cmpsl
clc
mov
pop
push
push
push
mov
xchg
ret
cmp
add
add
mov
clc
add
add
bound
add
in
gs
or
add
sub
jmp
mov
add
add
add
icebp
aaa
xchg
jmp
add
sti
insb
fcomps
add
clc
pop
clc
mov
jo
add
das
shrl
neg
call
jmp
jno
add
add
cmp
add
loopne
pop
xchg
mov
or
cmp
clc
ljmp
repz
add
and
add
insb
iret
testl
mov
fstl
add
dec
push
outsb
inc
clc
add
xor
imul
add
push
adc
add
add
clc
ret
inc
clc
sub
mov
push
add
mov
push
cmp
pop
addr16
ljmp
into
out
pop
push
add
fsubrl
add
dec
xor
add
in
sbb
add
adc
add
in
data16
aam
test
dec
jo
add
sbb
test
add
data16
addr16
push
add
cli
cmpsl
clc
jo
add
add
test
and
add
add
ret
nop
jmp
add
add
xor
incb
fs
scas
fcmovbe
dec
sbb
outsl
sub
bound
add
or
jae
add
mov
inc
add
pop
inc
add
xor
add
add
inc
add
adc
cmp
subl
push
mov
xchg
ret
fwait
lods
dec
add
loopne
fistps
rcrb
add
pop
test
dec
cmp
push
push
nop
jmp
sub
cld
add
push
test
add
cmp
add
mov
shll
add
lret
cmp
pop
cmp
add
clc
lods
pop
jbe
add
cmp
clc
and
add
clc
xor
cwtl
cwtl
inc
clc
call
push
add
mov
add
xor
clc
and
sar
clc
mov
add
test
add
xor
adc
add
lock
xchg
xor
add
fld
clc
and
add
add
das
movsb
clc
sahf
jecxz
pop
aam
clc
pop
mov
ds
sbb
mov
cltd
cmp
clc
cmp
add
arpl
add
inc
clc
inc
clc
jecxz
xor
flds
add
fwait
and
add
repz
add
mov
jo
add
mov
add
sbb
clc
or
pop
clc
cmpsb
clc
pop
mov
cmp
push
ucomiss
sar
jo
add
add
ds
add
xchg
inc
add
addr16
cmc
out
mov
cmpsb
clc
jno
add
clc
aas
inc
add
xor
add
clc
pop
sbb
clc
adc
add
clc
clc
inc
add
mov
ret
clc
and
add
in
imulb
lods
scas
arpl
add
test
jmp
add
add
mov
clc
push
pop
pop
aad
add
xchg
fisttpll
clc
mov
das
cmp
int3
sbb
clc
out
add
add
add
sti
test
cmpsb
clc
and
fcoml
jge
mov
mov
cli
pushl
dec
mov
jle
mov
jmp
and
add
clc
pop
inc
clc
mov
cwtl
mov
clc
push
clc
xor
add
jecxz
jb
add
add
mov
add
lock
call
pushl
push
mov
xchg
ret
aaa
add
xor
add
adc
adc
rorl
clc
push
add
cmp
sub
clc
push
add
nop
jmp
mov
dec
jl
addr16
cmp
clc
jle
clc
into
int3
sub
clc
push
adc
mov
clc
mov
cmp
popf
ljmp
add
popf
ds
mov
nop
jmp
add
hlt
mov
pop
ficoms
pop
int
dec
sar
fs
sbb
xor
add
push
clc
mov
clc
cmpsl
clc
xchg
lret
push
clc
shll
icebp
push
mov
incl
mov
dec
repz
cli
scas
pop
dec
cmp
in
pop
sub
fbld
mov
add
add
movsl
clc
fiaddl
cmp
das
arpl
add
clc
push
add
stc
fcomip
popa
add
decl
test
add
add
cld
pop
add
push
add
dec
popl
add
xchg
bound
add
clc
repnz
dec
cmp
clc
mov
xchg
divl
add
add
clc
xchg
lea
aam
add
test
and
dec
jb
add
add
add
dec
sahf
aaa
adc
add
mull
add
xor
add
clc
ret
clc
in
out
xchg
lret
cs
pop
push
mov
nop
jmp
xchg
push
lods
cltd
sahf
inc
add
push
fcomi
cmove
loop
add
add
jp
clc
jecxz
cwtl
xchg
push
aam
clc
lea
add
dec
jb
add
pop
jae
add
clc
add
roll
adc
add
sar
imul
mov
push
fadds
add
push
add
and
pop
daa
clc
bound
add
fidivrs
add
mov
nop
jmp
arpl
mov
push
clc
cmp
add
fs
mov
add
dec
lea
add
fcompl
xchg
pusha
add
pop
add
add
dec
int
test
mov
inc
clc
add
addr16
or
jb
add
imul
call
cmp
arpl
xchg
aam
cld
mov
xor
add
dec
or
add
clc
data16
mov
clc
adc
mov
movsl
clc
outsl
add
add
mov
adc
hlt
mov
imul
dec
sahf
push
rdpmc
add
mov
add
add
cmp
js
and
add
clc
sub
add
in
vmovaps
mov
cmp
add
inc
clc
mov
push
mov
xchg
ret
add
cmc
dec
mov
clc
mov
push
add
shl
xlat
jnp
lock
bound
add
clc
mov
jno
add
add
jo
add
add
pop
fs
pop
outsb
push
xor
add
pop
pop
out
ds
out
lock
icebp
jne
clc
mov
jl
inc
add
push
add
push
popl
nop
jmp
add
clc
into
jmp
add
or
clc
sbb
mov
xchg
ret
jle
mov
clc
mov
clc
pop
loope
stos
cltd
lahf
leave
sub
clc
lock
add
lahf
xchg
leave
nop
adc
add
clc
insb
test
push
jno
add
add
clc
inc
clc
mov
int
into
cmpsb
clc
xor
mov
lea
call
jmp
pop
outsb
lods
xchg
add
add
add
jnp
add
inc
clc
out
out
cmc
or
clc
test
sahf
adc
add
clc
rcrb
mov
nop
jmp
lods
add
jmp
jbe
nop
jmp
dec
fwait
test
clc
ret
cltd
sub
add
je
clc
or
add
mov
clc
jnp
adc
int3
aam
aam
add
int3
lods
ret
clc
test
ret
clc
cmp
std
test
sarl
jl
vmread
cwtl
pop
jle
xor
nop
jmp
xchg
into
add
pusha
add
sete
mov
pop
sub
push
xor
add
lods
lods
pop
add
jne
clc
outsl
jl
clc
mov
pushl
push
mov
xchg
ret
add
repnz
and
pop
into
sub
popa
add
lahf
xor
add
jg
jno
add
cmc
mov
clc
int
cmp
dec
sbb
mov
adc
jmp
mov
fs
add
add
add
push
loopne
inc
add
test
sahf
rcrl
add
cmp
add
jmp
xchg
mov
icebp
push
jmp
nop
jmp
add
dec
pop
addr16
inc
add
adc
add
sar
clc
pmaxsw
clc
mov
in
and
clc
jl
clc
push
add
inc
clc
pushf
mov
out
xchg
pop
xbegin
clc
xor
add
mov
popf
ror
dec
jns
push
add
lcall
ret
mov
add
decl
test
call
add
hlt
xchg
cs
mov
jge
clc
xlat
inc
clc
or
dec
fwait
mov
lea
adc
add
add
push
add
pop
iret
push
pop
mov
add
addr16
repnz
push
clc
xabort
mov
hlt
cmc
inc
add
and
add
loop
pop
fdivr
adc
add
add
inc
clc
push
mov
xchg
ret
push
add
cmp
push
add
cmp
clc
adc
add
jno
add
clc
aaa
in
cmp
jmp
clc
push
add
dec
icebp
lods
pop
scas
test
add
or
cmp
clc
mov
add
sub
leave
test
clc
repnz
add
add
stc
push
add
inc
clc
daa
clc
arpl
add
add
nop
jmp
jg
add
flds
add
or
clc
insb
adc
add
xor
cs
xchg
scas
adc
add
rep
nop
jmp
test
add
fwait
jg
fadd
clc
dec
test
sub
cld
stos
lret
mov
sldt
into
add
jne
mov
jmp
push
mov
pop
sbb
lret
incl
repz
clc
std
add
add
lods
fmuls
clc
dec
testl
push
push
push
mov
xchg
ret
xchg
sbb
mov
insl
fsubs
sub
rcrl
lahf
jo
add
in
mov
cmp
sahf
cmpsl
clc
iret
dec
cmp
add
add
push
mov
xchg
ret
dec
pop
jb
add
pusha
add
enter
add
scas
or
pop
std
sub
push
cmp
pop
push
add
xlat
scas
clc
and
add
add
adc
loopne
pop
mov
add
inc
clc
or
clc
xabort
out
mov
je
nop
jmp
dec
test
test
clc
mov
mov
add
pop
jne
push
lods
test
cmp
add
cmc
push
mov
push
mov
xchg
ret
cs
loop
add
add
shrb
add
aaa
cmp
out
mulb
or
popa
add
cmp
push
add
mov
cli
stc
jne
clc
push
add
icebp
sahf
pop
decl
jmp
dec
test
jle
mov
xchg
adc
clc
jae
add
add
test
clc
cmp
jne
nop
jmp
add
lods
fdivrs
xor
cmp
clc
sub
clc
bound
add
nop
jmp
add
add
push
mov
mov
add
inc
add
cmpsl
clc
xor
add
xor
add
iret
mov
pop
nop
jmp
add
sub
mov
cmovo
add
add
add
adc
xor
add
add
mov
nop
jmp
in
lods
pop
out
outsb
das
and
add
clc
hlt
mov
add
cmp
add
lcall
pop
sbb
jmp
add
xchg
fwait
testl
fs
xchg
ljmp
lret
nop
jmp
dec
add
test
xbegin
lcall
ds
push
dec
nop
mov
ret
clc
fldcw
rolb
jmp
add
lods
add
imul
xlat
cmp
push
call
add
cmp
dec
xchg
out
pop
clc
and
add
xchg
xchg
imul
clc
pop
push
fnstsw
mov
or
mov
ret
inc
clc
in
dec
push
add
jmp
push
inc
add
clc
jge
xchg
popa
add
outsb
fldl
add
add
mov
add
jbe
iret
pop
sbb
add
rol
clc
in
xor
add
cmp
add
dec
xbegin
stos
adc
add
mov
leave
je
clc
adc
add
push
cmp
daa
clc
cmp
add
add
pop
ja
xchg
fistl
adc
add
pushl
in
add
das
jp
push
and
add
add
add
mov
adc
add
add
push
add
inc
add
push
clc
xchg
pop
sahf
stos
or
clc
xchg
enter
clc
inc
add
clc
jno
add
add
clc
push
xbegin
add
add
add
xchg
jge
arpl
add
clc
jne
clc
pop
lock
or
repz
and
add
nop
jmp
dec
add
push
mov
fwait
inc
add
cmpsb
clc
xor
add
clc
jae
add
sbb
movsb
nop
jmp
jecxz
add
test
pop
adc
add
xchg
das
sar
add
cmp
clc
adc
mov
nop
jmp
lods
cs
incl
push
cltd
adc
add
xbegin
nop
jmp
mov
test
ss
lret
fsubrl
add
xchg
and
add
shr
push
mov
xchg
ret
test
jl
in
adc
aam
add
add
clc
mov
cmpsl
clc
inc
clc
aam
outsl
and
mov
xor
ljmp
nop
jmp
arpl
jo
add
sbb
add
push
add
push
icebp
arpl
add
jg
xor
clc
jmp
popf
add
push
or
clc
cmp
std
ss
mov
mov
sub
cs
add
es
out
jl
add
insb
xchg
add
add
clc
adc
add
sahf
bound
add
clc
shll
in
jnp
je
clc
xchg
mov
add
xchg
sub
clc
mov
clc
push
in
daa
clc
flds
cmp
inc
add
mov
mov
nop
jmp
mov
dec
aaa
outsb
add
clc
xor
xbegin
add
add
add
adc
add
loopne
pop
mulb
add
sub
roll
sub
hlt
aad
push
ret
nop
jmp
add
outsb
cs
mov
dec
cli
sar
clc
clc
ja
push
fsubl
clc
mov
push
lea
nop
jmp
fs
scas
repz
mov
and
add
aaa
xchg
jne
ret
add
nop
ret
add
cmp
pop
repnz
xchg
leave
xabort
loope
and
add
clc
xchg
test
mov
add
jo
add
jle
add
mov
dec
sbb
add
sbb
clc
je
add
ds
or
add
sbb
inc
add
add
add
lock
ret
add
lret
pop
xchg
cmc
dec
cmp
jge
clc
adc
add
mov
clc
dec
mov
clc
mov
mov
clc
cltd
insb
lcall
mov
call
ljmp
mov
clc
ljmp
adc
add
inc
add
add
mov
jecxz
add
add
clc
mov
add
mov
popa
add
mov
push
add
ret
clc
push
or
sbb
mov
add
into
inc
clc
jmp
clc
decb
xchg
add
add
clc
and
add
in
mov
pop
or
add
cltd
cmp
xor
add
mov
frstor
add
mov
icebp
aam
cmp
lahf
push
clc
into
xlat
lock
clc
aas
dec
xlat
add
add
add
pop
mov
mov
inc
clc
xchg
lods
or
add
add
cmp
jno
add
push
sbb
push
enter
clc
push
add
jo
add
clc
mov
outsl
nop
jmp
jg
mov
sub
add
and
add
add
gs
out
ja
push
add
add
clc
cmpsl
clc
and
add
jp
cmp
mov
add
xor
add
sahf
xchg
or
add
inc
add
mov
jne
jle
arpl
add
add
add
leave
inc
clc
mov
add
je
clc
inc
clc
pop
clc
inc
clc
cmpsb
clc
inc
add
mov
push
cmp
jmp
dec
test
inc
clc
ds
sub
push
jp
mov
push
dec
call
fcompl
loop
fcmovu
lods
js
push
filds
test
cmc
test
repnz
decl
and
dec
push
jg
aad
clc
mov
add
add
lods
jo
add
and
add
add
xor
add
aam
add
xor
add
add
mov
push
add
insb
sub
or
fdivrl
add
ljmp
clc
dec
mov
add
and
add
add
mov
cmp
cmp
clc
in
xchg
ret
clc
out
xchg
es
movsl
clc
add
add
jbe
cmp
test
inc
add
push
loopne
xchg
push
fists
add
jg
add
clc
add
add
add
sbb
adc
jle
aaa
push
add
sahf
xor
push
les
jne
lods
test
mov
ja
clc
cmp
add
cltd
mov
inc
clc
data16
out
mov
mov
in
iret
sub
add
addr16
cmp
clc
mov
dec
pop
cmp
jp
fdivrp
cmp
clc
xchg
lahf
jb
add
add
test
dec
cmp
clc
fsubrp
mov
bound
add
mov
pop
mov
pop
xchg
pop
cmp
es
insl
sbb
sti
movsl
clc
ja
or
add
out
dec
mov
addr16
movsl
clc
cmp
pop
push
or
movsb
clc
push
add
aad
test
dec
sar
xor
add
add
dec
lahf
scas
cmp
push
nop
jmp
push
lods
adc
sub
mov
mov
or
pop
loop
push
add
dec
jbe
clc
push
mov
cs
clc
jg
clc
ret
sbb
rclb
pop
xchg
xchg
ljmp
rorl
leave
xchg
inc
add
xchg
adc
add
insl
dec
xor
add
jmp
movups
add
data16
in
cmp
sbb
test
add
sub
sub
clc
rorb
add
fnstcw
out
iret
jae
add
sbb
add
nop
jmp
xor
add
cmp
clc
mov
jnp
fistpl
push
sub
ja
jae
add
clc
xbegin
add
xor
fdivrs
aam
leave
jno
add
inc
add
xchg
lret
adc
add
clc
pop
jae
add
add
xchg
popa
add
js
clc
jb
add
clc
jge
and
loopne
rorb
imul
mov
fucomip
mov
push
add
jne
add
jge
mov
stos
das
loope
sub
clc
jb
add
inc
add
push
add
jb
add
and
add
aaa
sub
add
sar
psubusb
clc
xchg
sti
push
and
add
add
mov
add
push
dec
fisubrl
popa
ret
nop
jmp
into
hlt
cmp
test
sub
add
add
add
out
pop
mov
add
fidivrs
sti
ds
es
or
or
clc
out
add
add
add
xchg
test
stc
push
pushf
sbb
aad
clc
push
jnp
aad
add
dec
icebp
push
add
push
mov
xchg
ret
fs
push
add
nop
jmp
outsb
jbe
add
cltd
shl
stos
adc
add
jmp
test
add
aad
clc
jne
clc
cmpsl
clc
fcoms
add
dec
mov
add
enter
shr
mov
add
arpl
add
sub
add
clc
imul
jl
pop
lret
xor
add
xchg
rcl
icebp
add
add
add
lret
add
movsl
clc
sub
sarl
dec
push
and
sbb
add
sbb
clc
xor
add
pushf
sub
cmp
fs
and
add
mov
xor
add
add
push
shl
clc
xor
add
inc
add
lcall
nop
jmp
sbb
jg
lods
mov
push
pop
lea
clc
add
out
ss
clc
pop
fcmovu
pop
int3
das
inc
add
cmp
add
addr16
sbb
xchg
or
add
mov
pop
jl
jne
clc
sbb
cmpsl
clc
pushf
mov
pop
clc
cmpsb
clc
push
jmp
xchg
add
add
aad
add
or
clc
mov
mov
clc
inc
add
adc
add
cltd
arpl
add
mov
sub
fcmovne
call
jmp
push
movsl
clc
ret
lret
add
jp
pop
clc
jecxz
push
imul
sbb
cmp
jns
clc
jae
add
xchg
dec
cmp
push
mov
and
pop
ret
add
je
add
cli
imul
clc
xor
add
fisubrs
popa
nop
jmp
test
scas
add
xor
clc
scas
cltd
mov
fs
jmp
mov
arpl
lret
add
push
clc
and
add
clc
loopne
int3
movsb
clc
or
clc
je
cmpsb
clc
arpl
add
add
add
or
add
fcoms
add
clc
gs
sbb
cmp
jmp
nop
jmp
dec
mov
mov
movsb
clc
ja
mov
lret
leave
mov
cmp
clc
adc
add
add
pop
push
clc
and
add
add
idivl
stc
xchg
pop
pand
stos
mov
mov
adc
add
add
shll
clc
mov
clc
add
add
clc
out
std
pop
add
cmpsb
clc
xlat
jno
add
add
xlat
cmp
add
inc
clc
or
ret
add
loope
cmp
dec
aam
add
icebp
lahf
fs
imul
popa
add
dec
iret
aas
mov
pushf
aaa
mov
int3
cmp
and
cvttps2pi
dec
cmp
data16
mov
adc
push
inc
clc
jnp
fdivr
xchg
lret
fadds
mov
add
clc
es
clc
cltd
in
pop
push
clc
imul
add
mov
int
cmpsl
clc
fcmovnu
pop
insl
cmp
sar
clc
or
add
int
add
push
add
dec
inc
add
fadds
add
clc
xabort
mov
add
or
add
lods
imul
xchg
jg
popf
xor
add
clc
xor
add
add
sbb
call
sar
daa
clc
push
add
or
das
insb
or
stc
xchg
out
inc
clc
imul
jno
add
inc
clc
pop
and
add
int3
insb
push
add
push
add
sbb
pop
lahf
pop
jae
add
jmp
loop
xchg
or
jmp
add
outsl
cmpsl
clc
loopne
inc
add
cmp
add
adc
clc
inc
add
cmp
aaa
das
inc
clc
or
mov
das
int3
pop
cwtl
in
fiaddl
add
clc
jmp
sbb
bound
add
add
clc
xor
add
pop
jb
add
clc
or
sub
mov
add
in
add
add
push
push
add
pop
dec
hlt
scas
push
mov
aaa
add
add
clc
aam
or
iret
scas
lahf
inc
add
cmc
addr16
jae
add
inc
clc
test
or
clc
cmp
sbb
xor
fldl
push
add
pop
push
or
data16
adc
add
clc
and
add
sub
stos
jge
stos
push
call
pushl
mov
add
out
sarb
enter
mov
inc
clc
in
cmp
push
pop
push
cmp
push
mov
xchg
ret
mov
clc
xor
add
mov
sub
aam
inc
add
movsb
clc
mov
add
xor
fs
ficompl
push
cmp
sbb
add
lock
call
add
clc
aaa
xbegin
outsb
inc
clc
cwtl
lahf
sub
add
inc
clc
push
add
shrb
inc
clc
mov
arpl
add
add
add
add
clc
mov
adc
add
sub
clc
jle
clc
cli
jns
add
insb
pop
scas
adc
add
clc
and
or
clc
mov
add
sbb
inc
clc
std
sub
or
xchg
adc
clc
jle
ss
clc
fcmovnb
clc
popa
add
push
push
clc
clc
push
add
data16
jl
int3
mov
clc
cmpsb
clc
enter
mov
enter
sbb
add
in
push
hlt
call
loope
xabort
clc
addr16
push
mov
dec
loope
add
push
add
push
clc
movsb
clc
jo
add
std
mov
push
push
mov
xchg
ret
jne
ss
clc
loop
xabort
clc
push
jbe
xor
mov
xchg
cmpl
cmp
aam
clc
sub
add
insb
stos
mov
add
jle
and
add
add
and
add
clc
mull
push
clc
das
fmull
pop
push
push
ret
nop
jmp
dec
jle,pn
sbb
add
outsl
fbld
xchg
stos
daa
clc
jge
clc
mov
sub
add
add
mov
adc
scas
pop
clc
and
popf
std
popl
je
add
inc
add
enter
adc
add
clc
pusha
add
push
mov
push
mov
xchg
ret
lods
lods
pop
fldcw
push
jmp
cmp
adc
jne
clc
mov
clc
cmp
clc
imul
aam
jo
add
jmp
adc
add
sbb
cmpsb
clc
lods
dec
mov
or
sbb
rorb
and
add
das
icebp
nop
mov
lcall
jg
int3
outsb
pop
popa
add
in
add
mov
mov
add
mov
xchg
fists
add
clc
jecxz
jmp
inc
add
es
and
add
jno
add
jne
add
xor
add
jl
out
or
popf
push
adc
ficomps
push
sti
test
mov
jae
add
out
cwtl
out
mov
jg
jmp
add
xchg
and
nop
jmp
add
add
and
add
pop
into
lret
in
std
fisttpll
int
cmp
clc
mov
clc
add
add
jns
inc
clc
xor
add
clc
jb
add
cli
int3
cmp
push
pop
push
mov
xchg
ret
cmp
mov
clc
add
and
add
jo
add
add
out
push
add
and
add
xchg
or
pop
fadds
add
add
mov
cs
cmp
shl
clc
mov
add
test
stos
mov
adc
add
clc
mov
ret
xchg
ret
lods
cmp
add
add
mov
push
mov
xchg
ret
add
mov
add
cmp
add
sbb
sub
clc
sbb
and
add
ljmp
int3
stos
inc
add
sub
jg,pn
pop
cmp
xor
insb
jp
cmp
bound
add
clc
xor
add
pop
xchg
lea
or
jl
add
pop
mov
sub
add
leave
jae
add
sbb
adc
add
clc
cmp
cmc
cmp
add
mov
fistps
adc
and
add
mov
add
pop
jge
clc
rorb
sahf
ja
push
mov
nop
jmp
dec
dec
aaa
add
add
pop
ret
xchg
xor
add
sar
scas
ljmp
add
imul
stc
xchg
xchg
movsl
clc
jb
add
jo
add
dec
leave
fcompl
mov
xor
clc
loopne
stos
call
clc
jle
js
sub
aaa
cmp
fwait
push
mov
mov
add
cwtl
add
sub
or
push
inc
add
hlt
add
inc
clc
sbb
inc
clc
aad
fsubrl
add
fs
out
pop
scas
push
add
test
clc
dec
cmp
clc
pop
clc
xlat
frstor
movsb
clc
fidivrl
loop
cmp
cs
add
out
jbe
and
add
xlat
pusha
add
inc
add
jno
add
add
je
adc
ds
insb
push
fiadds
add
pop
add
push
add
incl
jbe
jecxz
clc
xchg
in
inc
clc
imul
dec
mov
add
xchg
lea
jae
add
scas
lods
xor
add
mov
mov
inc
add
xor
add
cmp
clc
jo
add
and
arpl
add
add
sarl
jmp
loopne
or
cmp
inc
clc
add
add
mov
ficoml
mov
and
push
js
add
jbe
dec
add
add
cmp
jmp
nop
jmp
dec
outsb
dec
jecxz
add
fisttpl
push
add
xor
add
call
clc
imul
sub
clc
iret
lock
enter
test
cltd
dec
xlat
jbe
mulb
add
daa
clc
repnz
scas
lahf
test
arpl
add
clc
adc
push
fmull
clc
inc
clc
mov
clc
or
xor
clc
pop
push
or
add
lret
pop
or
movsl
clc
adc
add
add
push
add
push
add
push
add
mov
ss
clc
cmp
stos
jle
xor
add
clc
jnp
inc
add
std
sbb
clc
mov
mov
add
pop
pop
sbb
jmp
dec
jg
add
mov
aaa
gs
jbe
clc
cmp
mov
or
cmc
push
add
ja
push
add
cmp
add
sbb
dec
and
add
adc
add
clc
into
mov
lea
insl
dec
jnp
xor
add
pop
ret
clc
insl
jno
add
clc
push
add
or
clc
xchg
xchg
fistps
mov
clc
mov
dec
jl
je
clc
jge
in
pop
gs
ss
mov
clc
jo
add
clc
stc
push
push
call
nop
jmp
jg
cmp
aad
icebp
inc
add
insl
iret
iret
push
cmp
int
ss
rol
clc
cwtl
loopne
xchg
in
lahf
mov
movsb
clc
shrb
sbb
icebp
adc
xchg
inc
add
pop
xbegin
loope
add
sti
movsb
clc
mov
inc
clc
imul
xchg
gs
jne
add
loop
cmp
add
push
mov
sbb
fsubs
add
clc
add
add
sbb
add
mov
stc
and
add
add
mov
decl
lock
add
mov
fdivl
add
clc
cmp
xchg
mov
inc
clc
add
and
xchg
kmovw
clc
daa
clc
loop
mov
clc
jmp
nop
jmp
add
in
push
in
jecxz
add
adc
mov
clc
out
popa
add
jno
add
enter
leave
xchg
and
imul
lock
cmp
push
xchg
arpl
add
sub
bound
add
pop
clc
out
lahf
pop
pop
cld
sahf
sub
clc
fldcw
inc
add
cmp
or
ljmp
xor
add
push
pop
nop
jmp
mov
xchg
pop
add
and
add
adc
adc
add
clc
inc
clc
ret
clc
dec
jno
add
lea
inc
add
dec
dec
and
add
jnp,pn
inc
clc
xchg
mov
mov
sub
push
clc
iret
dec
inc
add
lahf
inc
clc
es
mov
sti
xor
add
pop
cltd
and
add
fisubrl
clc
pop
pop
popa
add
push
push
push
mov
xchg
ret
lods
pop
aaa
hlt
aaa
cmp
and
loop
mov
clc
xchg
fstpl
and
add
push
mov
or
add
rep
nop
jmp
cltd
repz
xchg
pop
mov
mov
add
mov
add
and
lea
clc
push
push
add
in
dec
and
add
mov
clc
pop
pop
adc
add
jmp
xbegin
xchg
rcrl
sar
fsts
add
or
js
outsl
add
add
clc
nop
inc
add
jae
add
rorb
adc
add
notl
add
rorl
pop
or
enter
fmuls
test
fdivl
clc
je
cwtl
inc
add
cmp
iret
out
add
add
pushf
aas
fdivrs
leave
and
add
jno
add
mov
jle
iret
cmpsl
clc
mov
or
int
add
jle
das
mov
clc
cld
cmp
clc
jecxz
stos
es
jae
add
sub
nop
jmp
test
cld
pop
fiaddl
add
jp
add
sbb
push
push
incl
jg
jne
loopne
cmp
jg
clc
fildl
add
ja
fldcw
arpl
add
pusha
lret
mov
imul
gs
sub
pop
adc
add
clc
xor
add
add
sub
xabort
jo
add
repz
and
add
add
push
clc
sahf
call
pop
jg
enter
add
clc
inc
add
xchg
outsl
dec
push
clc
in
imul
inc
add
mov
add
cwtl
xor
add
ror
nop
jmp
lods
adc
add
clc
pushl
call
pushl
mov
add
sbb
clc
xor
add
pop
movsl
clc
stc
cltd
xor
add
xchg
cmp
clc
and
push
popf
mov
jmp
cld
cs
add
inc
add
imul
loope
and
jno
add
decl
mov
sub
ret
dec
jbe
jae
add
sahf
jb
add
dec
mov
or
inc
add
aas
push
ret
clc
xor
add
jp
mov
cmp
push
sbb
clc
out
aaa
push
data16
jae
add
inc
add
scas
testb
add
xchg
and
clc
dec
pop
dec
sbb
pause
jmp
hlt
add
sub
add
out
push
jle
clc
push
or
add
sbb
adc
add
mov
lcall
add
arpl
jg
movsb
clc
mov
cmp
clc
or
imul
add
test
inc
add
xchg
ja
inc
clc
cmp
add
mov
cmp
add
fmull
cmp
clc
push
lahf
sarl
ljmp
mov
icebp
adc
add
add
add
xor
lret
leave
dec
or
add
mov
add
add
cmp
mov
mov
clc
in
popa
add
sub
clc
cli
inc
clc
insb
dec
push
lcall
shr
nop
jmp
jg
hlt
adc
mov
clc
mov
cmc
inc
add
cmp
iret
sbb
cs
repz
scas
lret
in
test
lock
in
loopne
test
add
cmp
xor
ret
nop
jmp
add
add
fwait
push
pop
mov
lret
xor
ret
clc
mov
jbe
adc
add
movsb
clc
xor
or
clc
daa
clc
sub
sbb
fistl
out
scas
cmpsb
clc
aam
add
test
fidivs
clc
adc
loope
add
add
test
sub
pop
inc
clc
mov
and
pop
or
push
mov
clc
mov
je
clc
and
repz
or
in
cmc
and
mov
clc
sub
clc
adc
add
icebp
pop
inc
clc
pop
xor
add
gs
jno
add
add
clc
xchg
dec
cmp
call
and
add
add
mov
cld
popa
add
pushf
lcall
fldt
ja
clc
popf
xbegin
call
push
mov
xchg
ret
cmp
or
test
ja
cmp
pop
dec
aaa
cs
mov
lock
add
sbb
sbb
add
mov
jmp
cmp
push
cltd
jecxz
rol
clc
xabort
dec
sub
clc
aam
clc
cmc
mov
add
add
dec
aaa
cmp
dec
bound
add
cld
or
sti
data16
xlat
lcall
push
mov
xchg
ret
cmp
xor
add
inc
clc
dec
sbb
mov
add
add
clc
pop
nop
jp
clc
movsl
clc
into
mov
sub
add
mov
adc
add
mov
aad
fdivr
and
add
inc
clc
scas
sub
nop
jmp
lods
mov
add
add
add
mov
add
loope
fwait
gs
dec
cmpsb
clc
jp
dec
inc
clc
jo
add
add
push
add
jno
add
mov
clc
rcrb
mov
push
mov
xchg
ret
add
pop
clc
test
push
add
mov
repnz
add
sub
push
push
nop
jmp
test
push
dec
add
sarl
sub
add
aaa
xabort
das
sbb
in
push
pop
popl
add
sub
add
xor
add
clc
or
xor
add
call
arpl
push
sti
das
push
add
xor
add
mov
nop
jmp
mov
vmread
jmp
jbe
add
add
outsb
pop
push
sbb
mov
xchg
ret
add
lods
jecxz
clc
dec
mov
pop
cmp
clc
fsubs
add
add
add
imul
add
test
cmc
mov
add
fs
mov
decl
test
jne
call
ljmp
jg
out
mov
add
or
clc
movsb
clc
add
add
add
add
lods
lods
in
scas
into
xchg
mov
into
imul
adc
add
sar
add
pop
aam
clc
adc
adc
add
add
sar
clc
popa
add
jae
add
push
add
ret
clc
cmp
cld
push
add
ljmp
add
push
push
add
push
mov
xchg
ret
test
addr16
push
clc
push
popf
incb
add
rcll
ds
aam
ret
sbb
mov
popa
add
sbb
cmc
add
xchg
ret
sub
mov
jbe
add
mov
add
and
xchg
cmp
sub
add
scas
push
xor
add
js
push
lock
add
add
lea
mov
xchg
ret
push
add
add
out
sar
clc
testl
clc
xchg
mov
xabort
jbe
mov
fcmovnb
clc
jle
sbb
add
aad
jne
clc
lahf
scas
cltd
lock
inc
clc
fs
push
lcall
mov
add
add
add
add
xchg
cli
cmp
mov
clc
sbb
add
ljmp
add
add
repz
cltd
lock
add
mov
jno
add
inc
add
shlb
mov
add
push
test
pushl
cltd
dec
add
clc
lret
enter
incl
js
nop
jmp
mov
push
sub
jne
loope
out
sub
add
lea
fisubrs
xchg
push
jmp
ss
dec
lods
cs
adc
add
bound
add
pop
sar
hlt
mov
pop
inc
clc
or
arpl
add
lea
mov
outsl
mov
mov
cmp
hlt
jg
clc
mov
add
add
mov
ret
add
add
sub
ret
push
sub
or
push
sbb
clc
call
clc
sub
xor
add
test
pop
jne
clc
rcrb
mov
mov
add
xor
clc
mov
arpl
add
add
sub
clc
fcoml
add
and
add
arpl
add
cmp
mov
nop
jmp
test
xor
jne
cmp
jmp
fwait
cld
add
dec
xchg
aaa
jecxz
clc
add
add
stos
nop
jmp
xchg
dec
add
jg
add
push
insl
jb
add
mov
nop
jmp
sbb
dec
aaa
outsb
stos
movsl
clc
mov
clc
sar
clc
mov
nop
jmp
add
into
ds
data16
mov
jne
pop
xchg
popa
add
add
popf
add
add
dec
repz
add
dec
sbb
jno
add
dec
lods
xbegin
cmp
add
dec
xchg
shll
add
add
add
sub
pop
fs
pushf
aam
repz
gs
pop
clc
loope
pop
clc
jno
add
clc
test
lods
jno
add
mov
lea
popa
add
pop
add
outsb
pop
gs
mov
clc
shlb
add
mov
fdivl
clc
inc
clc
push
clc
xor
add
add
sbb
sahf
xchg
push
in
ja
clc
insb
enter
add
add
add
fnstcw
mov
pop
mov
add
ret
add
pop
jge
clc
cwtl
in
cs
mov
push
cmp
xchg
fwait
addr16
xchg
mov
clc
jmp
cmp
mov
sar
add
int3
fs
cmp
clc
xchg
push
add
fisttps
dec
push
xchg
je
add
dec
adc
add
add
cli
loop
mov
push
and
add
pop
sbb
adc
add
loope
jg
clc
pop
and
add
add
test
inc
add
inc
add
dec
dec
pop
stos
pop
mov
nop
jmp
jbe
dec
imul
and
add
add
add
jns
sub
add
add
clc
outsb
loop
inc
add
iret
imul
add
test
jno
add
lods
bound
add
pop
mov
ljmp
lret
imul
mov
lret
lea
loop
cmp
jns
add
cmp
sahf
and
cwtl
lods
cmp
pop
jbe
clc
xlat
aad
inc
add
lods
mov
clc
xchg
loopne
testl
add
dec
cmp
clc
adc
add
aad
sub
gs
jne
clc
and
add
cmp
cmp
pop
pop
push
aas
stc
sbb
jbe
add
inc
clc
sbb
fstl
rorb
dec
and
addr16
jne
clc
xchg
xbegin
fisubrs
mov
lock
stos
loopne
jo
add
fnstsw
lret
nop
jmp
jle
add
mov
mov
cmp
ljmp
je
inc
clc
lcall
call
cld
add
jbe
enter
sar
loopne
add
add
add
call
clc
adc
add
call
bound
add
xor
add
add
mov
add
add
clc
jo
add
clc
push
clc
test
adc
add
clc
jb
add
add
scas
mov
add
jl
sbb
dec
or
aam
jmp
rcrl
filds
adc
add
pop
dec
clc
cli
push
pusha
nop
jmp
xchg
cltd
cmp
add
dec
in
loop
sub
clc
push
add
sub
add
lock
xchg
mov
xabort
inc
clc
loop
xchg
into
popl
pop
push
mov
xchg
ret
test
clc
test
cmp
sahf
xchg
dec
mov
sub
dec
jecxz
push
add
xchg
jne
clc
dec
xchg
movsl
clc
jg
xchg
xor
sub
clc
or
add
add
repnz
clc
cmp
fistl
add
gs
push
add
inc
clc
xor
clc
or
int3
out
sub
or
clc
dec
add
add
bound
add
cltd
test
add
mov
add
add
add
add
jl
test
in
dec
adc
add
sub
adc
add
nop
jmp
dec
add
lahf
bound
add
jmp
call
add
add
lock
fs
test
mov
pop
stos
pushf
es
popf
sbb
sbb
add
add
seta
add
dec
sub
pop
test
aad
mov
add
aam
clc
call
add
mov
sub
add
jae
add
dec
sti
pop
xabort
out
dec
pop
aas
cmc
jecxz
cmp
fstpt
cli
jmp
mov
movsb
clc
push
es
sar
clc
fimuls
push
testl
mov
stos
push
add
js
inc
add
pusha
add
sub
add
test
popf
das
xor
add
pop
xchg
push
pop
jb
add
clc
lods
in
inc
clc
lock
test
cmp
and
jno
add
push
mov
xchg
ret
push
lods
mov
or
mov
nop
jmp
add
mov
cmp
int
lahf
add
add
add
add
loopne
in
mov
mov
add
add
add
clc
loope
cltd
dec
pop
sahf
enter
fcoml
add
scas
jecxz
loope
mov
in
mov
mov
xchg
ret
dec
sub
add
es
and
xabort
add
sbb
xchg
jl
add
inc
clc
insl
aas
mov
xchg
pop
fistl
clc
bswap
adc
add
add
and
add
stos
out
mov
sarb
push
add
fcmove
in
stc
add
add
xbegin
add
dec
lock
cmp
nop
jmp
xchg
add
clc
jecxz
dec
push
cmp
clc
or
xor
add
push
cmp
xbegin
clc
leave
mov
adc
add
lods
jle
repnz
jmp
push
mov
xchg
ret
pop
add
lods
loopne
jnp
aam
int
testb
adc
add
add
mov
add
push
cwtl
inc
add
outsb
jg
mov
add
pop
fs
mov
add
mov
clc
sbb
dec
sarl
ljmp
and
add
cmp
ret
jl
add
push
iret
dec
mov
mov
lock
lret
clc
addr16
pop
gs
mov
and
add
add
stos
jecxz
cmp
add
cmp
add
mov
cmp
add
stos
push
incl
cltd
jne
dec
lock
jmp
xchg
test
xor
hlt
sbb
es
iret
cmp
jno
add
push
mov
mov
fs
into
cwtl
xor
rcr
ja
sbb
mov
clc
aad
add
mov
add
add
add
push
add
es
jns
loope
push
jne
nop
jmp
into
ss
ja
xchg
lcall
fs
and
add
cli
mov
clc
fstps
icebp
push
xabort
sahf
sbb
jns
call
decl
cmp
hlt
popa
add
outsb
push
mov
add
in
pop
push
push
push
mov
xchg
ret
dec
pop
sbb
notb
add
inc
clc
add
add
xchg
push
add
mov
sub
add
add
ud0
mov
add
repz
jg
xor
clc
fcoml
pop
cmp
adc
dec
cmp
aaa
pop
aas
stos
dec
loop
sbb
or
nop
jmp
dec
pop
lods
add
sbb
rclb
lods
leave
inc
add
jg
add
add
pop
clc
or
jg
bound
add
add
popa
add
push
mov
cmp
clc
and
adc
add
xchg
insb
mov
add
loope
xchg
push
add
xlat
imul
add
push
and
fbstp
xabort
nop
xlat
fidivrs
adc
add
jle
sbb
aad
mov
inc
add
cwtl
xchg
insb
in
sar
sar
lods
sbb
add
mov
add
pusha
add
stos
gs
sar
add
aaa
bound
add
in
push
add
lock
std
add
add
add
add
xchg
inc
clc
add
add
and
inc
clc
loop
push
je
mov
clc
jo
add
cmp
jbe
clc
dec
and
add
add
xbegin
nop
jmp
lods
add
out
xor
add
add
add
inc
clc
ja
icebp
xabort
push
jne
pop
hlt
dec
mov
xchg
xchg
inc
clc
dec
xor
add
jle
fiadds
ljmp
xchg
in
std
and
js
mov
sahf
inc
add
stc
aas
shufps
jne
nop
jmp
adc
add
add
sbb
cmp
outsb
into
add
sbb
sbb
add
dec
pop
clc
push
add
mov
rcrb
add
test
mov
pushf
pop
jae
add
clc
test
test
inc
clc
inc
add
cmpsb
clc
nop
sarl
cltd
sub
popa
nop
jmp
lods
add
jne
add
clc
mov
lcall
add
mov
xchg
hlt
mov
add
sbb
leave
push
dec
dec
sub
dec
dec
mov
xor
mov
jne
je
nop
jmp
add
adc
add
xor
add
mov
nop
jmp
dec
lods
cmp
add
add
push
mov
nop
jmp
repz
outsb
push
aaa
ret
clc
lahf
jg
popa
add
jbe
push
jbe
add
arpl
add
clc
mov
pusha
add
fmuls
clc
cmp
clc
pop
xor
add
lock
clc
pop
pop
pusha
add
add
add
dec
mov
add
add
pop
mov
jmp
je
push
xchg
xabort
clc
pop
clc
dec
pusha
add
in
jl
clc
inc
add
dec
push
push
nop
jmp
add
push
fwait
outsb
imul
clc
scas
xor
add
sub
sub
movsl
clc
sar
xchg
mov
mov
lods
lcall
mov
push
mov
xchg
ret
pop
mov
xabort
clc
xabort
jne
repnz
aas
xchg
test
nop
repnz
mov
add
outsl
xor
or
popl
clc
sub
clc
and
pop
das
push
clc
sub
out
xor
add
add
scas
xor
add
xchg
cmova
add
add
scas
out
jge
clc
mov
ja
mov
vmread
aam
idivb
clc
shll
add
add
add
ljmp
add
aas
mov
add
add
add
test
jge
fimull
imul
add
pop
outsl
push
inc
add
jp
insb
pop
aas
inc
add
push
mov
push
mov
xchg
ret
repz
add
imul
jne
jge
cmp
mov
jb
add
add
fsub
clc
es
push
mov
adc
add
xchg
adc
das
pop
clc
or
clc
mov
cmp
clc
popf
push
add
fnstcw
xchg
es
add
or
or
cmp
aaa
ret
clc
loope
sbb
std
jo
add
xchg
jne
sbb
mov
divb
loopne
in
pop
adc
add
add
xor
or
cmp
mov
jmp
add
cld
push
add
cltd
add
mov
push
add
ret
aas
mov
scas
mov
xchg
ret
push
mov
mov
adc
jmp
ss
adc
add
out
dec
jg
stos
and
add
xchg
cmp
add
clc
mov
add
mov
clc
push
add
lods
cs
cwtl
push
sti
sub
inc
clc
ret
clc
repz
out
sbb
outsb
mov
pushf
or
test
add
scas
sbb
add
jp
add
or
xor
push
nop
jmp
pop
add
ja
hlt
xor
add
mov
sub
adc
add
inc
add
stos
mov
add
sbb
das
sub
clc
cmp
inc
clc
mov
add
sub
push
add
pop
loope
cld
adc
add
inc
add
fistps
sub
nop
jmp
sbb
mov
mov
cmp
ret
clc
fmull
test
clc
inc
add
add
add
clc
push
or
or
pop
leave
test
hlt
and
add
clc
mov
call
nop
jmp
mov
or
stc
aam
add
movsb
clc
add
call
divl
repz
cmp
push
add
push
add
loopne
add
add
aaa
mov
clc
mov
cmp
pop
rorb
test
dec
push
push
clc
fcoml
add
or
clc
mov
clc
and
push
pop
add
add
clc
add
add
add
gs
mov
lret
or
add
adc
stc
aas
out
cmp
clc
push
clc
xlat
pop
clc
and
add
fwait
ds
dec
int3
lods
inc
add
repz
addr16
movsl
clc
and
add
push
mov
cwtl
ja
roll
fiaddl
jecxz
add
aaa
cmp
inc
add
pushl
inc
add
and
add
add
adc
add
xchg
ret
add
add
add
sar
add
fs
mov
std
adc
and
add
mov
add
xor
add
push
cmpsl
clc
pop
ds
jl
push
add
inc
clc
pop
adc
add
dec
push
mov
cld
call
clc
xchg
cmp
mov
jmp
inc
add
cmp
mov
ja
hlt
outsl
popa
add
loope
push
adc
clc
dec
js
insb
cli
inc
add
repnz
dec
mov
cmp
clc
aam
cs
ljmp
sub
cmp
add
bound
add
clc
loop
rcrb
dec
outsl
mov
push
movsb
clc
xchg
iret
repz
into
in
jne
add
cmpsb
clc
lcall
mov
xchg
xchg
fnstcw
jnp
clc
loope
cmp
and
add
addr16
or
xchg
sar
add
pop
push
insl
jne
dec
data16
ja
rcrb
clc
je
clc
stos
xor
add
add
dec
cwtl
xlat
mov
clc
es
stos
cwtl
js
add
rorl
xabort
out
or
and
add
clc
mov
add
fadds
add
fiaddl
add
mov
adc
add
sbb
clc
repnz
stos
repnz
lods
and
add
add
add
add
add
jecxz
xchg
or
add
adc
add
dec
fdivl
add
addr16
int
push
clc
push
pop
imulb
jb
add
popf
cmp
clc
push
cli
lcall
add
inc
add
xor
out
outsb
sub
cmp
clc
aaa
lock
dec
mov
adc
add
mov
and
add
clc
mov
mov
clc
repz
add
push
add
je
arpl
add
gs
iret
cmpsl
clc
xor
adc
clc
xabort
sub
add
push
int
add
jp
add
cmc
push
add
sbb
and
add
mov
test
rorl
mov
jno
add
out
mov
mov
rcll
add
sbb
clc
enter
ja
imul
test
outsl
add
add
test
and
add
not
push
lret
sbb
sub
add
cmpsb
clc
xor
dec
xor
add
clc
sbb
add
pop
aas
and
sub
clc
jo
add
pop
mov
fnstenv
jns
clc
jg
mov
pop
stc
test
movsb
clc
js
dec
sar
add
add
inc
clc
rcrl
add
add
rcrb
add
clc
aad
mov
clc
xchg
out
adc
add
clc
xchg
test
add
xchg
mov
xchg
fisttpl
imul
jbe,pn
test
sbb
test
sbb
add
popa
add
mov
gs
cmp
adc
mov
or
push
add
jmp
clc
mov
xlat
loop
ds
add
data16
pop
clc
fadd
clc
and
mov
or
cmp
sbb
xlat
jle
clc
and
dec
jp
scas
mov
xchg
and
add
dec
cmp
adc
add
lret
xchg
cmp
add
std
hlt
pop
or
add
dec
out
sbb
add
insl
xchg
outsl
adc
add
cmp
cmp
fnstcw
add
sub
lret
push
pop
fisubl
add
cmp
clc
dec
mov
push
add
bound
add
popa
add
adc
add
leave
inc
add
mov
cmp
int3
or
pushf
clc
and
sub
sahf
sbb
clc
and
add
iret
pop
sbb
nop
pop
scas
xchg
in
dec
loope
xor
add
add
inc
clc
and
add
fstpl
jmp
cmp
push
clc
lods
mov
pop
pop
sbb
gs
pop
jbe
push
lret
loope
cmp
add
es
xor
add
clc
cmp
xchg
in
sub
fiadds
dec
or
add
rcrb
clc
in
inc
add
cmp
add
das
jl
imul
mov
add
add
lahf
rcrb
sar
cmp
or
push
add
jmp
add
sub
add
cmp
clc
sub
jecxz
push
add
add
cwtl
mov
clc
adc
daa
clc
push
out
test
mov
imul
clc
adc
add
mov
mov
add
jle
add
mov
add
fwait
es
loop
ljmp
push
insb
dec
mov
jns
imul
add
xchg
hlt
mov
clc
mov
cmp
fs
loop
jno
add
xor
xabort
clc
cmp
jae
add
add
pop
mov
clc
nop
js
clc
in
push
and
sbb
icebp
decl
jg
inc
clc
dec
xor
xor
add
clc
int
clc
lret
pop
clc
bound
add
add
and
sbb
clc
cmp
pop
jecxz
sbb
adc
add
and
add
clc
std
push
add
mov
jg
sub
int3
xchg
enter
push
push
add
xor
jne
add
push
clc
xchg
jo
add
add
mov
ss
cmp
sti
sbb
clc
out
jno
add
mov
add
add
mov
lods
xchg
insb
dec
cmpsl
clc
push
incl
add
add
add
add
xchg
arpl
add
test
xor
add
add
clc
add
add
ja
cmp
clc
je
lcall
data16
push
xchg
fidivrs
cmc
lock
sbb
push
clc
lret
mov
add
xor
add
clc
or
aas
imul
adc
out
fxch
ret
fwait
scas
jnp
clc
xor
clc
xabort
pop
mov
cmp
ficoms
out
int
mov
cmc
data16
out
and
add
add
jb
add
clc
repz
jo
add
add
jns
je
clc
dec
and
data16
dec
fincstp
mov
aas
ret
clc
ja
and
add
mov
rolb
add
stos
mov
hlt
jo
add
cmp
pop
clc
test
je
clc
movsb
clc
or
fwait
outsb
mov
in
inc
add
aad
clc
leave
sub
inc
clc
pop
xor
add
stos
mov
sahf
jle
pusha
add
jbe
cmpsb
clc
inc
clc
sbb
idivb
loope
roll
mov
clc
pop
jae
add
mov
add
fisttpl
cmc
aas
jne
add
add
dec
adc
add
adc
push
add
and
add
mov
add
push
adc
add
jnp
mov
clc
sti
dec
mov
clc
push
add
push
sbb
dec
insb
xor
add
add
pop
popa
add
addr16
push
sub
xchg
inc
clc
or
mov
dec
mov
xchg
int
dec
hlt
pop
clc
mov
add
cmp
das
add
add
inc
clc
xchg
mov
add
in
loop
fincstp
out
sub
dec
addr16
mov
stos
mov
mov
clc
fcoml
out
or
clc
cmp
cmp
test
cmpsl
clc
push
inc
add
iret
movsl
clc
imul
inc
clc
sar
xor
mov
fwait
push
clc
outsl
and
add
clc
pushf
cs
jecxz
push
dec
or
add
cmp
daa
clc
xor
add
add
movsb
clc
idivb
sbb
clc
cli
add
add
cmp
ja
call
jns
loopne
lcall
push
add
xchg
push
jns
lcall
cmp
bound
add
fcoms
add
cmc
push
add
jno
add
insb
and
xor
add
inc
clc
sub
data16
mov
add
add
xchg
sbb
add
mov
inc
add
ficoms
ja
or
lods
fildll
jbe
clc
dec
adc
clc
inc
clc
aam
clc
push
jb
add
or
mov
xor
clc
adc
add
add
clc
pop
clc
xor
add
and
cmpsl
clc
mull
add
cs
sahf
es
fnsave
add
out
insl
adc
add
daa
clc
mov
clc
xchg
mov
shr
sahf
inc
add
push
add
mov
add
mov
adc
add
lock
clc
into
pop
ljmp
clc
or
inc
clc
leave
gs
xchg
xor
add
add
test
mov
add
fwait
and
add
daa
clc
popa
add
jno
add
std
xchg
pop
mov
clc
sar
clc
mov
fdiv
sbb
repnz
gs
hlt
jecxz
outsl
mov
add
xor
push
clc
push
add
clc
stc
sub
fwait
and
add
or
add
add
add
add
add
jnp
int
aaa
movsl
clc
jbe
jnp
add
jbe
add
mov
shl
clc
addr16
xor
add
sgdtl
add
clc
aas
fisttpl
xabort
ja
cmp
clc
mov
loope
fimull
push
sar
sbb
pop
dec
xor
rolb
add
inc
clc
push
mov
add
mov
pop
addr16
cmp
mov
inc
add
push
cmp
add
stc
or
mov
or
lock
add
inc
clc
test
in
and
add
add
add
mov
lea
jo
add
cs
scas
push
push
add
jns
clc
data16
mov
sbb
out
pop
add
add
clc
jl
scas
loope
jecxz
push
add
cld
mov
add
xchg
pushf
sbb
clc
jle
mov
fdivrs
lods
pop
cmp
or
pop
aam
inc
add
dec
cmp
xor
sbb
sbb
pop
fwait
lahf
jg
clc
adc
clc
inc
clc
xchg
push
clc
mov
cmp
lahf
push
add
addr16
pop
rcrl
hlt
dec
adc
add
sub
notl
pop
test
insb
cmp
add
cmp
in
adc
add
clc
jg
clc
or
lea
add
cmpsl
clc
xchg
std
je
or
sub
xor
add
clc
fld
clc
movsl
clc
and
add
or
add
add
cmp
xchg
pop
cld
in
push
add
add
popa
add
sbb
xchg
adc
add
sahf
je
mov
add
mov
fwait
push
aam
ja
data16
jmp
clc
fisttps
test
mov
clc
sar
clc
cmp
jne
mov
add
add
add
cmp
add
cmc
jl
add
jl
dec
ficomps
in
ja
xchg
out
sub
clc
sbb
clc
dec
inc
add
cmpsl
clc
add
add
add
add
pop
clc
imul
pop
dec
cmp
add
mov
cmp
clc
or
fistpl
adc
add
sbb
pop
pop
jg
add
adc
add
inc
clc
jecxz
mov
add
inc
add
and
add
clc
adc
add
and
add
add
jne
decl
cmp
cs
jle
sub
clc
icebp
or
clc
push
clc
movsl
clc
xchg
jmp
jbe
test
enter
pop
bound
add
je
jb
add
clc
je
add
adc
add
adc
add
clc
mov
and
jl
shll
add
ja
insb
xchg
add
add
enter
insb
pop
pop
outsl
add
add
setp
add
add
push
jmp
pushf
pusha
add
into
rcrl
xchg
je
inc
clc
push
add
add
add
push
sub
in
sbb
add
add
add
push
pop
or
in
sub
inc
add
int
clc
jle
and
add
or
clc
jns
clc
in
inc
clc
dec
sti
mov
jo
add
arpl
add
cmp
clc
inc
clc
call
mov
add
xchg
test
rorb
cli
fs
xchg
mov
adc
inc
clc
mov
add
in
fwait
xor
pushf
push
loopne
pushf
out
dec
cwtl
mov
add
push
add
fs
add
add
and
add
xor
add
add
add
mov
clc
xchg
jl
fbld
clc
ja
out
cmp
add
sbb
add
test
dec
or
clc
push
data16
mov
add
add
jbe
test
dec
popa
add
mov
aad
clc
aas
or
clc
xbegin
xchg
mov
add
add
add
cmp
cwtl
cmp
jns
ret
clc
leave
pinsrw
fcomps
stos
adc
add
pop
sub
add
jl
jne
jecxz
xchg
clc
sbb
clc
inc
clc
jmp
clc
std
pop
mov
lods
lea
ja
add
sbb
clc
sub
push
clc
dec
add
add
add
data16
insb
and
add
push
inc
add
and
add
cld
cmc
sub
clc
cmp
add
add
dec
lcall
add
cs
shr
fistl
je
clc
arpl
add
in
add
inc
clc
and
add
idiv
ja
clc
jne
clc
cmp
mov
push
jbe
mov
sub
add
fwait
sub
clc
cmp
arpl
add
clc
mov
test
add
call
add
xbegin
sbb
xor
add
cmp
jle
or
cmpsl
clc
push
cmp
mov
adc
clc
dec
lock
sbb
clc
in
aam
clc
mov
jle
push
stos
daa
clc
cwtl
int
inc
add
xor
add
add
out
sub
push
add
mov
jo
add
add
arpl
add
dec
sbb
out
ljmp
add
add
or
push
add
lock
inc
clc
neg
mov
clc
loopne
add
add
clc
adc
add
add
js
add
inc
add
mov
dec
cmp
clc
dec
push
add
cmp
add
push
add
inc
clc
sub
add
jg
add
push
add
lret
cmp
add
mov
clc
dec
and
add
ljmp
mov
outsl
inc
clc
loope
mov
daa
clc
data16
icebp
mov
clc
push
jae
add
add
pop
sbb
sbb
add
test
xchg
push
add
sbb
mov
icebp
in
mov
jmp
sbb
clc
call
pop
rclb
xor
clc
push
add
xor
inc
add
jp
push
jae
add
xchg
loopne
adc
add
add
cld
jl
add
cwtl
mov
or
test
mov
out
or
inc
add
add
add
test
jbe
inc
add
sbb
add
push
add
or
fnstsw
sbb
movsb
clc
stc
pop
clc
cmp
pop
inc
clc
pop
or
and
add
inc
clc
cmp
dec
xor
add
mov
pop
fnstcw
clc
call
cwtl
sbb
add
data16
imul
xchg
fisubrl
add
btc
pop
int
xchg
adc
dec
ret
clc
sub
add
xchg
ja
mov
xor
clc
jns
clc
and
cld
mov
add
sbb
js
clc
movsb
clc
fadd
clc
xchg
xchg
mov
mov
lea
xor
add
push
add
cmp
add
add
add
xchg
mov
clc
nop
mov
clc
fcoml
sbb
sbb
mov
or
jmp
add
ja
mov
jge
out
xchg
jle
and
add
add
dec
fadds
clc
movsb
clc
fisubrs
jne
clc
mov
cwtl
and
mov
mov
add
add
mov
add
aam
aas
aad
and
add
hlt
cmp
clc
ss
and
add
inc
add
xor
lret
cmp
stc
adc
add
inc
clc
sar
mov
add
mov
mov
cli
pop
ss
clc
mov
add
inc
add
xchg
nop
ja
lcall
clc
sub
imul
or
call
mov
js
push
dec
push
insl
int3
aad
jecxz
lahf
mov
add
adc
add
xchg
fildll
rcrl
pop
insb
mov
insb
sub
loope
insl
adc
add
inc
add
cmp
push
add
inc
add
fld
clc
inc
clc
int
clc
insl
sub
clc
sbb
cmp
push
add
insb
inc
add
dec
cmp
or
aas
or
add
or
into
xchg
push
add
iret
iret
insl
inc
clc
js
and
add
clc
mov
clc
out
inc
clc
mov
add
add
jne
lret
ret
clc
fisttps
add
xor
adc
add
clc
int3
aad
mov
add
adc
and
add
xabort
inc
clc
add
add
push
add
fsincos
push
aad
into
pop
sahf
cmpsb
clc
mov
xchg
mov
js
jb
add
add
mov
clc
inc
clc
pop
arpl
add
add
ret
xchg
fldcw
add
clc
clc
ljmp
push
add
loop
in
pop
aad
adc
add
clc
inc
clc
in
adc
add
or
clc
sbb
clc
stc
or
cltd
inc
add
fsubs
clc
xor
add
push
add
repz
add
daa
clc
push
xor
add
add
loope
dec
cmp
add
movsb
clc
push
sub
int3
push
mov
adc
add
sub
jmp
inc
add
jae
add
add
mov
mov
clc
mov
repz
add
enter
and
add
sub
push
add
fs
stc
int
clc
jl
add
cli
push
add
sub
pop
jb
add
jle
cmp
add
jmp
clc
sub
bound
add
insb
lret
sub
clc
test
out
out
add
popa
add
jo
add
add
xchg
mov
mov
loop
int3
clc
sbb
push
pusha
add
or
add
push
bound
add
insl
sahf
movlps
add
add
inc
add
or
clc
inc
add
jns
pop
adc
add
jnp
clc
add
outsl
mov
sub
dec
ret
clc
cwtl
mov
add
inc
add
push
and
add
mov
xchg
fisubrs
xchg
clc
add
arpl
add
mov
add
adc
add
add
xlat
dec
mov
add
or
and
pop
add
push
sbb
add
inc
add
xor
add
clc
pop
sbb
clc
cmp
jle
add
dec
dec
jge
xor
add
inc
clc
or
clc
stc
mull
xor
ja
and
add
push
clc
mov
out
push
add
stos
adc
dec
jmp
outsl
fmull
add
clc
pop
stc
add
add
inc
clc
and
add
clc
sub
add
sub
clc
into
cmp
jle
clc
arpl
add
clc
jne
add
cmp
clc
dec
sbb
sar
ret
xchg
adc
add
mov
clc
lock
push
add
leave
xchg
dec
mov
clc
inc
clc
mov
adc
add
int3
cltd
add
add
xchg
stc
aad
clc
adc
add
clc
pop
push
add
adc
add
cmp
mov
repnz
sbb
lret
leave
aas
jne
leave
iret
or
stos
jle
or
test
stos
mov
pusha
add
or
xor
add
test
inc
add
xor
add
scas
adc
add
fnstenv
stc
dec
jbe
fstps
clc
and
add
ret
add
in
not
or
clc
add
add
add
lahf
dec
push
add
cld
out
cltd
outsb
cmp
std
cmp
add
mov
add
mov
add
mov
icebp
dec
mov
inc
clc
xchg
cmp
push
inc
clc
loopne
inc
clc
mov
clc
iret
sar
push
lods
imul
add
add
mov
mov
test
clc
mov
add
outsl
stos
push
add
pop
out
sub
clc
in
daa
clc
aam
lea
scas
pop
clc
add
add
add
and
add
add
clc
das
xbegin
adc
add
clc
push
mov
push
add
inc
clc
mov
add
add
add
mov
adc
add
sbb
clc
test
fistl
add
stc
xchg
cmp
cmpsl
clc
leave
jl
aas
repnz
add
cmp
clc
int
pop
fs
cmp
cmp
sbb
mov
clc
ja
out
cld
in
add
add
add
loope
mov
jge
or
add
dec
leave
mov
clc
push
fsubr
mov
clc
movsb
clc
add
ja
test
jns
add
clc
inc
clc
or
adc
add
add
xchg
xchg
or
mov
add
out
inc
clc
popf
push
mov
add
adc
add
add
mov
add
clc
xchg
lahf
inc
add
mov
out
mov
add
mov
add
add
jnp
xor
add
rolb
mov
add
icebp
lret
add
add
sar
add
push
add
cmp
clc
imul
clc
mov
add
test
dec
imul
int
cmp
clc
add
mov
add
lods
mov
out
aaa
insl
jb
add
clc
rcl
dec
cmp
add
cmp
add
adc
clc
xchg
in
ss
scas
movsbl
out
push
cmp
ret
pop
test
clc
push
add
add
mov
ficoms
sbb
add
cmp
nop
addr16
cmp
jle
adc
add
clc
cmp
pop
mov
fucomi
cmp
add
testb
clc
cli
sar
push
cmp
mov
sahf
mov
mov
cmp
jbe
clc
mov
xchg
mov
inc
add
pop
mov
add
movsb
clc
push
add
inc
clc
lods
jl
fistpl
clc
inc
add
and
add
add
inc
clc
add
add
std
sbb
je
jbe
movsb
clc
out
sub
mov
push
adc
add
clc
mov
cmc
lret
hlt
aaa
inc
add
fidivrs
test
aam
jecxz
mov
xchg
jl
cli
jo
add
clc
sub
inc
clc
mov
add
je
mov
jo
add
cmp
lock
clc
in
push
adc
lret
fcoml
fdivs
popf
out
ret
icebp
or
cmp
add
roll
add
push
cmpsl
clc
out
sbb
push
jle
clc
pusha
add
mov
cli
mov
cld
and
xchg
push
sti
jecxz
or
cltd
xor
add
add
repnz
out
add
add
jle
data16
test
add
add
add
sub
add
fdivl
add
xlat
mov
xor
add
push
add
dec
mov
clc
pusha
add
jle
bound
add
cld
xlat
imul
into
add
add
xor
add
and
add
mov
fsts
cli
lea
xchg
inc
add
or
ja
clc
and
add
add
jle
cltd
or
clc
push
mov
clc
inc
clc
lods
cmp
cltd
or
add
cmp
fs
fcomi
sbb
or
clc
faddl
add
xchg
pop
cmp
clc
lods
pop
std
adc
add
add
push
clc
icebp
jo
add
add
add
pop
clc
das
pop
sub
outsl
out
xchg
xor
out
inc
add
sbb
jl
clc
pop
adc
add
mov
clc
pushf
lcall
decb
sbb
add
cmp
in
xchg
mov
add
add
xor
xor
add
add
cmp
add
jns
add
pop
clc
xor
add
add
add
add
jmp
clc
or
mov
add
es
popa
add
lods
mov
popa
add
or
add
sbb
add
gs
loope
lcall
ja
add
leave
add
roll
add
lcall
mov
mov
pop
mov
clc
sahf
mulb
add
or
add
pop
aaa
push
clc
sbb
add
xor
add
push
and
cmp
or
clc
ret
jb,pn
add
clc
mov
in
cld
pop
es
push
std
jle
xor
add
lcall
pop
aas
or
add
cli
shll
clc
or
add
add
clc
jecxz
cli
add
add
call
mov
clc
call
inc
add
enter
adc
out
mov
out
add
push
mov
dec
inc
clc
push
xor
add
or
mov
pop
outsb
sub
or
push
xor
mov
cmp
inc
add
xor
add
cld
in
cmp
clc
inc
add
sub
add
add
add
xor
clc
pop
clc
fwait
add
add
push
clc
sbb
dec
pop
fiaddl
add
sbb
jno
add
sar
push
add
sbb
clc
cmp
fildl
add
push
in
xor
add
add
add
clc
xor
add
adc
add
ljmp
adc
add
cmp
add
cmc
add
add
sbb
clc
mov
add
jecxz
pusha
add
mull
mov
mov
add
sbb
fimull
inc
add
push
add
sti
dec
ds
add
test
dec
adc
add
sub
add
mov
clc
cmc
add
add
cmp
add
mov
dec
into
cmpsl
clc
add
add
clc
jo
add
insb
sbb
mov
clc
call
clc
inc
clc
or
add
cs
xor
pusha
add
cmp
pop
lahf
cmpsb
clc
xor
add
add
add
fdecstp
add
add
test
out
jl
cmp
pop
cmp
clc
imulb
aam
clc
mov
and
add
adc
add
add
pop
push
lret
cmp
clc
xchg
jne
clc
insl
xchg
pop
push
clc
or
bound
add
add
adc
add
imul
xchg
cld
fisubrl
pop
mov
fs
popf
push
cmp
add
mov
mov
clc
inc
add
cmp
jle
inc
add
rcll
clc
or
test
imul
int
clc
and
add
loop
or
add
add
add
add
add
shl
and
add
shr
mov
add
add
jno
add
add
xor
add
clc
into
pop
fwait
fs
stos
rcll
out
cmpsb
clc
dec
jmp
pop
add
clc
adc
add
mov
mov
clc
mov
add
clc
sar
push
add
test
jle
clc
mov
lahf
xabort
pop
sbb
imul
add
and
add
or
push
add
jns
in
jl
imul
add
inc
add
imul
dec
sbb
sbb
out
xchg
push
clc
pop
cmp
xor
add
pushf
std
add
add
insl
fmull
imul
clc
dec
or
clc
add
add
es
int3
iret
jecxz
cltd
imul
lock
inc
clc
mov
jne
sbb
clc
pop
or
or
fisubl
bound
add
push
add
sub
add
add
ficoml
add
cld
pop
clc
pop
push
pop
clc
daa
clc
out
push
add
push
inc
clc
push
add
js
dec
cmp
imul
clc
insl
cmp
fs
psubd
clc
imul
add
mov
jne
clc
jb
add
mov
popa
add
adc
add
add
clc
or
jo
add
ret
add
lods
aas
xabort
push
add
cmp
sbb
push
clc
push
cmp
clc
icebp
mov
clc
aaa
cmp
mov
je
test
test
adc
add
clc
inc
clc
inc
add
nop
add
add
add
cltd
lret
aaa
sahf
dec
hlt
sub
aaa
call
jbe
xor
add
clc
mov
mov
adc
add
cmp
pop
inc
add
mov
jmp
dec
daa
clc
das
sbb
ret
add
adc
sar
add
xchg
bound
add
add
add
cmc
ljmp
pop
and
add
clc
cli
push
jl
jo
add
dec
pop
clc
mov
clc
test
pop
clc
insb
add
add
clc
in
test
into
inc
clc
jmp
or
add
add
mov
sar
clc
lods
or
notb
add
shll
add
sub
clc
fadd
clc
aad
clc
xchg
rolb
or
pop
clc
jb
add
add
clc
jb
add
clc
xchg
shll
clc
aam
mov
clc
jae
add
clc
push
add
pushf
test
sbb
xchg
pop
sbb
clc
mov
add
push
mov
add
push
enter
xchg
js
add
popf
xor
add
clc
add
add
jb
add
push
adc
add
clc
xbegin
add
add
add
or
clc
es
dec
xchg
lods
mov
nop
adc
add
mov
inc
clc
mov
add
clc
daa
clc
sbb
clc
and
xabort
add
xchg
and
xchg
nop
xor
add
add
cltd
jae
add
xchg
mov
jge
es
xor
add
jg
pop
jne
xchg
mov
inc
clc
je
pop
add
add
clc
xor
add
cwtl
fidivs
add
xchg
testb
clc
or
inc
clc
repz
push
add
popf
cmp
sub
cmp
faddl
add
fmuls
xchg
jns
clc
sub
inc
add
push
or
mov
add
mov
inc
add
je
add
push
sbb
subss
add
pusha
add
call
jg
add
gs
mov
lahf
cmp
loope
sbb
mov
push
add
adc
add
add
test
lret
jmp
add
dec
adc
add
add
roll
add
test
pop
jno
add
movsl
clc
xbegin
xlat
stos
adc
add
clc
loopne
inc
add
jge
add
mov
clc
cmp
add
add
fs
sub
xor
add
hlt
xor
add
dec
or
mov
leave
movsb
clc
push
gs
push
movsb
clc
cld
dec
aas
int3
jmp
clc
ja
adc
add
clc
push
add
jbe
jp
jmp
add
lods
popf
pushf
js
sbb
mov
clc
sbb
test
add
push
jae
add
mul
clc
cmp
lahf
and
add
dec
dec
mov
inc
clc
loope
hlt
lahf
sbb
mov
jbe
cmpsb
clc
ds
add
popa
add
pop
sar
add
inc
add
inc
clc
mov
inc
add
jns
add
fildl
iret
inc
clc
rol
clc
call
inc
add
dec
inc
add
push
add
inc
add
jle
push
clc
aam
inc
clc
out
call
add
mov
inc
clc
jno
add
mov
add
out
jns
mov
add
in
fnstcw
loope
sub
ljmp
sahf
mov
clc
ljmp
clc
es
adc
add
xor
add
clc
sub
lock
mov
and
add
adc
add
sbb
jb
add
add
popa
add
movsb
clc
xchg
jne
clc
das
sbb
xbegin
jo
add
loopne
xor
add
cmp
jns
cwtl
sti
js
cs
test
clc
dec
mov
imul
clc
pop
or
sbb
clc
scas
js
xchg
mov
add
lea
sar
add
lret
and
fwait
mov
push
mov
push
clc
cmp
popf
xor
add
and
add
xor
mov
mov
mov
or
loope
pop
dec
or
mov
add
clc
dec
repz
mov
clc
push
add
jae
add
out
insl
xchg
xor
add
loope
sahf
popf
xor
add
test
clc
sbb
lahf
jg
xor
add
shrb
out
test
pop
cmp
clc
cmp
ret
inc
add
test
clc
pop
cmp
dec
pop
clc
mov
in
ljmp
insb
mov
mov
and
add
clc
or
scas
adc
clc
movsb
clc
push
add
sub
clc
mov
lods
mov
mov
movsl
clc
outsl
push
cmp
cmp
sbb
add
xchg
inc
add
dec
pop
push
call
add
pop
jp
clc
sbb
clc
push
rcrb
in
pop
adc
es
inc
clc
pop
jno
add
mov
xchg
push
lea
add
add
leave
add
add
clc
sar
sar
add
ret
clc
push
aad
add
mov
in
sbb
clc
sarl
adc
add
pop
pop
jns
sbb
aad
add
xchg
in
test
clc
mov
add
sub
xor
add
fdivs
iret
xabort
add
cwtl
push
mov
xabort
nop
mov
or
xchg
mov
xor
add
jbe
add
mov
mov
call
clc
ret
add
addr16
xor
add
clc
stos
pop
stc
xor
add
clc
dec
add
add
mov
add
test
add
add
add
add
mov
add
add
add
sub
int
add
pop
mov
jl
jae
add
inc
add
vandps
clc
aam
shll
clc
loopne
and
inc
clc
cwtl
push
fst
iret
testb
fmull
dec
mov
inc
clc
out
data16
loopne
jecxz
and
xchg
jge
add
lcall
xchg
cmpsl
clc
xchg
imul
clc
outsb
adc
add
sbb
mov
add
add
clc
imul
add
lret
add
adc
add
lea
mov
clc
inc
add
pop
clc
push
test
pop
clc
loopne
or
add
daa
clc
jnp
cmp
push
add
mov
pop
aad
clc
push
adc
add
clc
add
add
add
or
aam
jle
and
add
jge
clc
cmp
outsb
cmp
add
or
clc
push
add
movsb
clc
pop
sub
and
add
xchg
inc
add
mov
adc
add
add
lahf
fisttps
cld
xor
clc
and
sgdtl
add
xchg
cmp
clc
mov
push
fisubrs
fwait
fs
and
add
add
push
inc
clc
in
push
add
inc
clc
cmp
add
or
add
or
pop
clc
cld
sar
clc
pop
xchg
leave
cmp
repz
add
sbb
insb
jae
add
pushf
test
in
daa
clc
ret
clc
jo
add
jb
add
clc
mov
frstor
leave
push
pushf
inc
clc
int3
in
pop
bound
add
popa
add
std
cmp
add
sar
clc
in
movsl
clc
cmp
add
xchg
cwtl
adc
add
mov
icebp
add
add
cmp
xchg
imul
incb
rol
clc
negb
popa
add
xor
add
xchg
adc
mov
add
ss
rolb
add
cs
add
push
add
ret
clc
imul
lods
fcomip
and
add
inc
clc
push
clc
ja
mov
add
mov
sti
cmp
mov
adc
add
pop
inc
clc
cmc
mov
pop
repz
clc
ja
imulb
or
in
push
push
sar
mov
cld
in
movsl
clc
adc
inc
add
mov
adc
mov
addr16
xchg
jle
clc
pop
mov
add
jg
cmc
pop
pushf
pop
aaa
mov
cmp
xabort
stos
movsl
clc
cmpsb
clc
call
add
out
cwtl
jmp
mov
clc
insl
bound
add
fiadds
clc
imul
pop
sbb
popa
add
sbb
sub
clc
inc
clc
lea
dec
push
add
or
popa
add
pop
clc
addr16
js
jp
in
mov
in
add
add
lods
ret
clc
sti
xor
add
sub
clc
push
lcall
mov
pop
clc
mov
mov
scas
mov
jmp
clc
fsts
add
sti
dec
inc
add
std
aam
and
add
movsb
clc
testb
jle
ret
clc
mov
icebp
and
out
mov
and
add
cmp
lea
add
jg
incb
add
in
inc
clc
movsl
clc
cmc
enter
inc
add
in
loop
xlat
out
ret
clc
add
add
add
dec
outsl
add
push
loop
jg
dec
lods
js
clc
test
bound
add
clc
pop
in
adc
and
ja
aas
mov
clc
lock
and
add
add
fcomp
sub
das
cli
lret
add
add
stos
out
jnp
jecxz
inc
clc
or
clc
jge
push
pushf
xor
add
clc
adc
add
jl
clc
push
add
xlat
and
inc
add
imulb
jne
add
in
fs
dec
pop
popf
sub
sub
add
and
add
cmp
fdivrs
add
add
cmp
push
add
mov
and
or
clc
inc
add
repnz
pusha
add
ds
jb
add
arpl
add
cwtl
cmp
add
add
xchg
xchg
cmp
jne
add
add
movd
jmp
add
dec
push
lea
repz
push
add
push
add
add
lods
ss
add
mov
add
or
add
mov
add
add
add
add
dec
fisttpl
add
clc
ds
repnz
popf
ficoms
add
adc
push
add
mov
add
faddp
clc
js
add
lock
pop
and
add
sub
xchg
cmp
ret
clc
push
add
and
add
add
bound
add
mov
add
clc
xor
mov
clc
cmp
add
mov
add
loope
aam
popf
xor
add
clc
dec
add
clc
fs
inc
clc
pop
sbb
in
aas
aad
add
fisubrl
stos
das
push
add
push
add
dec
jg
clc
fwait
inc
clc
adc
add
mov
clc
repnz
jbe
jmp
clc
xabort
jp
jns
xchg
int3
ficoml
add
jae
add
add
lret
popf
int
data16
fs
movsb
clc
clc
push
add
ds
jnp
outsb
mov
add
sub
pushf
cltd
xbegin
aad
push
pusha
add
mov
or
clc
add
add
shl
clc
incl
add
push
lcall
inc
add
jno
add
out
aam
dec
dec
mov
add
adc
add
add
insb
imul
clc
mov
cmp
pusha
add
jne
in
sar
jl
add
pop
cmp
add
adc
and
add
add
jno
add
adc
add
add
fstps
xchg
and
inc
clc
mov
jecxz
mov
clc
pop
push
mov
add
push
rcl
sar
insl
sub
int
push
and
add
mov
add
clc
jno
add
add
add
add
lods
mov
add
add
and
add
clc
dec
ja
add
inc
add
fcompl
mov
xchg
mov
add
and
add
push
add
cmp
sub
inc
add
add
pop
xlat
jns
pop
adc
add
clc
imul
sti
inc
clc
clc
xchg
xbegin
cmp
aas
cmc
xabort
add
lea
mov
xor
add
add
sbb
add
je
add
sbb
jb
add
add
popf
repnz
add
lret
mov
add
clc
sbb
add
insb
xchg
xabort
add
clc
pop
xchg
sub
add
add
xchg
push
add
in
fidivs
clc
lret
pop
clc
out
xlat
sbb
add
std
cmp
clc
pop
sbb
decb
clc
mov
sub
cmp
add
sub
clc
xchg
xchg
mov
pop
lahf
leave
aam
fs
jno
add
clc
add
and
mov
hlt
mov
mov
add
mov
fists
loop
fistl
push
add
imul
je
cltd
sti
cmp
cs
popf
or
mov
scas
sub
adc
add
clc
xchg
in
ds
lret
inc
clc
cmp
add
or
push
mov
repnz
jne
clc
mov
add
add
sub
mov
xchg
add
add
add
add
pop
mov
add
sub
push
sti
cmp
add
sbb
jb
add
dec
jp
clc
clc
inc
clc
jmp
sub
bound
add
cmp
test
add
pop
and
add
es
shrb
clc
add
add
add
mov
clc
test
xbegin
clc
and
add
cmp
clc
outsb
ret
clc
dec
or
add
xchg
inc
clc
jg
add
add
adc
add
mov
fs
jle
cmp
add
or
add
clc
inc
add
nop
xchg
iret
fs
hlt
add
add
add
mov
dec
jmp
push
add
adc
mov
movsl
clc
inc
clc
loop
jge
mov
pusha
add
cmp
jbe
add
add
add
imul
inc
add
fs
cmc
testb
push
pop
jg
add
fstps
xchg
std
cmp
outsb
or
add
clc
imull
lods
push
add
add
popa
add
or
xor
add
clc
sti
inc
add
insb
hlt
dec
and
add
insb
lock
inc
add
lret
add
add
std
or
add
add
fisttpl
clc
xchg
icebp
sbb
clc
push
cmp
clc
in
popf
rol
clc
mov
xor
add
clc
or
hlt
jge
push
clc
pusha
add
inc
add
fldcw
clc
mov
add
mov
cmp
and
sub
clc
inc
clc
test
leave
movsb
clc
cmpsl
clc
pop
into
loop
movsb
clc
rclb
add
cs
clc
je
cmp
add
or
clc
scas
and
add
cmp
add
add
sub
add
mov
add
cwtl
xchg
jno
add
add
clc
sub
cmp
iret
cmp
cltd
inc
add
xor
add
clc
loopne
adc
add
adc
add
insb
imul
mov
add
adc
add
push
clc
add
nop
jo
add
jl
add
call
clc
sbb
clc
pop
sbb
clc
pop
hlt
mov
mov
mov
clc
mov
clc
push
add
add
add
dec
es
add
add
jo
add
add
add
mov
jecxz
sbb
clc
mov
int
lods
cmp
and
clc
jns
jnp,pn
clc
arpl
add
add
push
jbe
add
lret
cmp
scas
xchg
icebp
scas
hlt
pop
mov
clc
imul
pop
test
add
sbb
jo
add
data16
sbb
push
pop
test
call
add
test
push
add
int
clc
pushf
cmp
pop
test
pop
clc
jle
add
imul
xor
add
pop
sar
xchg
sbb
jg
and
inc
clc
add
add
clc
sbb
sbb
add
icebp
wrmsr
add
dec
mov
clc
hlt
fadds
dec
data16
insb
or
stos
scas
jns
clc
push
xchg
inc
clc
and
add
clc
add
fdivrp
mov
xor
sub
xchg
clc
pop
push
add
jbe
cmp
jb
add
add
arpl
add
clc
lea
nop
push
add
pop
and
add
stos
out
sub
jns
clc
or
sbb
cmp
dec
pop
sahf
mov
and
add
or
and
add
clc
jge
or
js
scas
loope
and
add
add
add
add
pop
xbegin
pusha
add
bound
add
arpl
add
clc
xchg
jnp
add
out
jae
add
loope
faddp
clc
sub
add
clc
int
xchg
out
outsl
jp
cmp
in
pop
push
add
mov
jns
add
adc
add
jnp
lret
push
adc
clc
clc
pop
adc
jns
clc
arpl
add
add
add
add
clc
test
add
add
xbegin
nop
xchg
dec
loopne
dec
xchg
scas
mov
hlt
sar
adc
push
sbb
leave
push
add
jne
dec
loope
xchg
repnz
repnz
pushf
add
add
sbb
push
add
sub
mov
movsb
clc
mull
clc
out
and
add
clc
repz
sub
clc
inc
clc
mov
xchg
xchg
jge
add
jbe
clc
mov
adc
add
xchg
cli
inc
clc
mov
int
and
add
mov
dec
test
mov
add
das
mov
sub
mov
add
imul
lods
dec
add
push
jmp
clc
shll
add
ja
jae
add
push
clc
jg
mov
clc
mov
jo
add
jno
add
clc
mov
jge
out
dec
cmp
cmc
sbb
inc
clc
cmc
and
add
imul
add
xchg
cmp
clc
xor
and
mov
mov
push
cmp
pop
in
push
add
or
clc
pusha
add
cmp
jl
inc
add
sarl
mov
add
dec
cli
int3
xchg
test
insl
jge
push
int
mov
cmp
imul
add
testb
clc
add
add
rorl
or
mov
out
clc
rcll
add
data16
jmp
lock
call
xchg
dec
push
loopne
dec
push
mul
clc
xchg
sub
add
mov
aaa
add
add
add
jo
add
lahf
stc
lret
xchg
ss
insl
inc
clc
inc
add
fcompl
out
lcall
mul
clc
xor
add
jb
add
inc
clc
test
cmpsb
clc
inc
clc
add
add
lock
push
out
inc
clc
push
xor
xor
sub
add
push
mov
or
add
fwait
inc
add
in
cmp
aaa
icebp
adc
add
cmp
clc
clc
aaa
push
push
cmp
clc
int3
xabort
sti
mov
std
arpl
add
lea
add
popa
add
loop
push
add
xchg
mov
add
movsl
clc
push
lock
push
dec
add
adc
add
adc
add
add
dec
push
lods
ja
imul
jns
clc
sar
fwait
jo
add
test
or
jo
add
in
or
add
xchg
in
mov
xor
add
in
xchg
lret
push
or
clc
adc
repz
shrb
clc
or
jg
lock
sbb
cmp
cmp
add
test
outsb
hlt
cmp
clc
hlt
fldt
sub
push
rorb
inc
clc
inc
add
out
xchg
repz
leave
sub
mov
add
jae
add
clc
mov
sbb
mov
xchg
arpl
add
add
sub
push
add
shll
clc
fisttpll
pop
in
cmp
push
inc
clc
mov
clc
mov
add
add
or
add
pop
sub
clc
stos
ret
add
outsb
cltd
int3
cmp
push
cmc
dec
mov
adc
add
hlt
pop
pop
pop
test
xchg
push
add
and
add
mov
je
xchg
loope
mov
clc
rcr
in
ret
clc
aad
clc
test
sbb
add
into
jnp
hlt
xchg
cmp
mov
stc
pop
mov
clc
in
or
lea
add
jb
add
clc
dec
push
xchg
push
jge
push
add
inc
add
xor
add
add
adc
add
add
adc
add
insl
sbb
add
adc
add
and
add
xabort
add
xor
add
mov
lret
sti
or
clc
data16
dec
cmp
mov
clc
lods
pop
mov
clc
int3
movsl
clc
mov
cs
add
scas
jns
cmp
cli
iret
fldl
add
insl
mov
popf
pop
push
add
out
mov
xchg
addr16
or
add
in
test
test
sar
fldt
and
add
add
add
clc
rolb
add
inc
clc
loopne
icebp
cmc
loopne
sub
add
xor
add
clc
in
scas
leave
int
shrl
mov
clc
lock
sar
clc
mov
clc
push
push
cmp
jle
adc
add
pop
cmpsl
clc
rcrl
clc
xchg
xbegin
dec
push
call
jmp
inc
clc
cmp
add
cmp
push
mov
and
add
test
lock
add
push
cmp
xlat
nop
arpl
add
mov
mov
test
mov
xchg
inc
add
aaa
filds
pop
nop
sub
inc
add
xchg
push
add
cmp
mov
add
push
add
fldl
mov
clc
cmp
add
nop
push
add
fs
fwait
clc
lahf
inc
clc
hlt
cmpsl
clc
jbe
jg
cmp
sbb
add
pop
jns
repnz
add
in
in
in
out
outsl
fidivrs
ss
jg
clc
cmp
iret
imul
push
aaa
jne
clc
lret
add
lcall
xchg
lret
ljmp
sbb
clc
cmpsl
clc
clc
xlat
clc
xbegin
jecxz
mov
clc
and
add
pusha
add
leave
pop
ss
jl
sti
push
fsubrs
push
cmp
sub
add
clc
xor
add
mov
sub
clc
rcrl
inc
clc
xchg
inc
clc
mov
clc
enter
clc
jae
add
sbb
add
add
push
push
inc
clc
cld
ljmp
mov
outsl
sub
mov
push
add
out
jp
pop
clc
call
mov
mov
pop
xchg
inc
add
outsb
add
add
outsb
pop
fistps
mov
or
add
jge
add
mov
clc
dec
inc
add
xchg
fldcw
dec
jae
add
clc
fistl
add
dec
jae
add
idivl
add
shll
add
outsl
xchg
mov
clc
cmpsb
clc
xchg
repnz
inc
add
lret
add
add
ficoms
clc
fs
cli
adc
jmp
add
jbe
call
sbb
clc
fsts
add
jb
add
add
scas
popa
add
daa
clc
test
cmp
clc
scas
shrl
int
clc
push
mov
loop
jae
add
clc
clc
mov
add
sbb
add
in
push
add
repnz
inc
add
mov
add
loopne
sahf
inc
add
adc
leave
adc
mov
push
add
icebp
rclb
add
jne
add
cli
repz
in
sti
cs
cmp
add
jb
add
add
jo
add
xchg
cli
in
inc
clc
sar
sub
add
or
clc
lret
or
clc
mov
cmp
clc
push
fiaddl
or
aam
pop
sub
add
add
push
add
cmova
cmp
out
sbb
clc
add
add
push
aaa
push
add
add
add
mov
clc
aas
cmp
add
pop
clc
repnz
outsl
pop
push
clc
fnsave
vcvtdq2ps
add
push
and
add
data16
or
or
clc
stos
mov
mov
js
clc
cmp
inc
clc
mov
in
xchg
call
cmp
dec
cmp
fs
imul
cli
jge
aas
push
or
xor
sar
test
cmp
mov
and
add
mulb
jo
add
sub
clc
test
push
xor
je
push
enter
add
add
clc
ljmp
add
sub
clc
mov
enter
dec
xor
add
dec
ret
clc
int3
xchg
mov
mov
clc
mov
clc
xchg
inc
add
and
in
sub
lret
insl
and
lock
shlb
add
sbb
clc
inc
clc
js
rcll
add
sub
add
pop
into
aaa
in
cmp
je
add
mov
mov
pop
clc
fs
add
add
adc
add
hlt
pop
pop
in
inc
add
or
add
mov
mov
add
sbb
outsl
dec
popf
dec
loopne
mov
clc
and
sbb
lods
jmp
aad
lock
add
iret
sbb
clc
imul
add
mov
dec
popa
add
scas
mov
clc
xor
rorb
stos
or
clc
xor
or
mov
insl
std
mov
mov
add
das
lods
pop
mov
mov
add
mov
add
add
and
add
add
add
push
es
incb
lods
fistps
xchg
sub
add
xchg
mov
bswap
xor
add
add
and
insb
pop
mov
xchg
pop
call
fdivr
sub
nop
cmpsl
clc
xchg
popa
add
stos
jp
sbb
xor
add
mov
add
sar
clc
mov
add
add
test
pop
pusha
add
xchg
add
add
sahf
adc
add
lcall
clc
or
xchg
sub
bound
add
dec
in
adc
add
ficompl
inc
clc
mov
loope
dec
sbb
dec
xchg
jp
or
lods
inc
clc
add
add
clc
insb
sbb
add
adc
add
add
add
out
sbb
loopne
mov
shll
mov
clc
popf
scas
fwait
push
test
add
add
add
add
xor
add
add
jp
cmp
pop
dec
sarl
inc
clc
mov
add
fst
inc
add
push
in
cmp
out
jg
clc
fdivrs
popf
ret
clc
cmp
mov
add
clc
bound
add
add
ret
clc
aam
clc
repz
hlt
testl
xchg
mov
adc
add
push
add
add
jmp
neg
jb
add
add
and
add
push
fcom
and
pop
xor
inc
clc
lock
mov
jbe
clc
adc
add
cld
leave
ja
jecxz
ja
enter
cmpsl
clc
pop
clc
dec
or
lods
mov
test
and
add
adc
add
or
clc
daa
clc
insb
pop
and
add
js
add
mov
add
add
mov
xchg
test
lret
ret
clc
mul
clc
int3
or
lcall
push
clc
loop
jmp
clc
lods
ret
clc
pop
popf
js
lcall
sub
sahf
push
jmp
mov
add
out
es
inc
clc
sub
sbb
add
fmul
inc
clc
out
push
mov
insl
mov
add
or
push
add
cltd
jns
clc
mov
add
movsl
clc
or
mov
cld
std
inc
add
xor
add
add
roll
add
clc
sub
adc
bound
add
add
loope
mov
enter
pop
mov
add
clc
and
add
clc
notb
jecxz
sub
clc
inc
add
scas
and
add
repz
leave
and
jmp
sub
mov
xor
add
js
stos
mov
popa
add
outsb
fidivl
mov
add
add
xor
scas
dec
cmc
mov
cmc
mov
clc
lea
add
add
icebp
lock
add
add
adc
add
clc
and
add
ja
or
and
add
clc
fisttpl
fcmovnu
sar
add
push
xor
add
daa
clc
xchg
push
add
lock
leave
jmp
cmp
ljmp
add
pop
cld
mov
cmp
in
jno
add
add
clc
pop
arpl
add
roll
into
lret
add
push
adc
add
clc
aas
xor
add
xbegin
sub
aaa
mov
sbb
pop
pop
adc
add
add
add
or
add
clc
inc
clc
xchg
add
add
add
fsubr
sbb
pushf
xchg
imul
clc
and
add
xor
add
add
mov
add
and
add
aaa
adc
add
clc
or
clc
pop
ret
clc
xlat
clc
pop
mov
outsb
lock
add
jns
add
inc
add
cmc
cmc
mov
cmp
add
lahf
mov
clc
pop
lea
add
shlb
add
inc
add
mov
mov
shl
clc
mov
test
pop
test
clc
cmp
adc
clc
xchg
dec
dec
jae
add
add
scas
dec
je
inc
clc
test
leave
xor
add
inc
clc
lret
add
lea
pop
adc
add
je
aam
out
mov
xchg
cli
sub
clc
idivb
inc
add
int3
sahf
leave
aam
xchg
push
add
out
ret
clc
cmp
cmp
in
cwtl
ret
clc
jbe
clc
addr16
or
add
clc
inc
add
and
add
push
add
sbb
clc
mov
sub
jo
add
adc
add
imul
xchg
cmp
sub
xchg
dec
in
mov
add
and
add
clc
sbb
add
bound
add
repnz
push
xor
add
push
add
inc
clc
push
add
sar
dec
adc
add
jge
adc
shlb
add
add
sar
jbe
add
push
xor
add
add
pop
sub
clc
push
xor
xchg
cmp
ret
clc
cmc
mov
or
clc
xchg
fimuls
in
pusha
add
stos
pop
daa
clc
aaa
push
add
pop
and
add
fwait
inc
add
negb
clc
out
sar
clc
shll
jle
loop
outsb
sbb
clc
add
add
add
add
das
jns
clc
xabort
clc
push
dec
jl
add
fisubs
add
pop
addr16
hlt
inc
add
scas
sti
sub
test
cmp
sbb
clc
shlb
adc
add
add
and
add
sbb
je
imul
popa
add
or
sub
sahf
push
mov
add
fdivl
add
jae
add
imul
pusha
add
add
add
dec
and
add
add
cmp
add
clc
pop
fadds
add
sub
add
clc
add
add
adc
add
or
add
fisttps
js
add
dec
dec
cltd
pop
cmp
faddp
clc
jbe
imul
lcall
xabort
push
add
lret
adc
add
and
add
clc
cmpsb
clc
out
fs
in
push
test
clc
or
add
test
mov
push
adc
add
add
test
aas
loop
stc
add
add
add
add
rclb
inc
add
rcrb
add
mov
add
or
mov
add
stos
lcall
add
clc
jbe
jge
push
clc
aaa
js
clc
xchg
or
jmp
add
repz
mov
adc
add
dec
fstps
and
push
push
clc
lea
sbb
clc
dec
push
add
ljmp
add
fcoml
aam
jmp
add
adc
add
add
add
and
add
xchg
jecxz
lea
clc
cmp
add
mov
add
clc
and
push
add
pop
xor
add
clc
add
add
jnp
clc
cmpsl
clc
test
sub
add
add
mov
dec
jne
lret
add
mov
clc
fwait
jecxz
jp
push
or
add
pop
int3
pop
mov
push
mov
out
xor
add
aas
data16
dec
arpl
add
inc
add
or
mov
add
add
stos
mov
add
sub
enter
add
and
add
clc
sbb
bound
add
cmp
clc
push
clc
pop
clc
sub
sbb
clc
arpl
add
mov
clc
jmp
push
insl
sub
push
sar
add
rclb
in
add
add
lahf
jge
inc
clc
fsubl
dec
pop
lods
pop
in
stos
test
push
add
mov
add
mov
leave
test
aam
pop
jbe
clc
dec
mov
mov
hlt
push
test
lret
iret
mov
add
clc
xabort
jp
mov
mov
mov
and
add
shlb
add
add
add
aas
adc
add
pop
jg
pushf
adc
and
add
clc
add
push
clc
add
add
clc
jbe
mov
cmp
push
clc
flds
sbb
out
and
add
add
add
add
rclb
cmp
or
push
jae
add
add
add
add
dec
cld
call
sarb
mov
stos
pop
arpl
add
adc
add
add
push
fdivs
add
push
add
cmp
scas
xabort
mov
cld
fwait
sbb
xchg
push
push
and
add
test
lahf
imul
add
or
xchg
clc
mov
mov
out
and
add
clc
cmp
vunpckhps
push
add
clc
inc
add
in
mov
cmp
sub
add
es
hlt
adc
add
or
add
pop
push
int
mov
push
push
pop
cmp
clc
xchg
adc
add
inc
add
test
and
add
clc
jnp
clc
stc
jecxz
lahf
xor
add
jle
clc
fistps
add
add
into
mov
dec
ljmp
mov
jl
clc
push
clc
dec
and
add
clc
lret
call
rol
clc
cmp
add
add
cwtl
sub
sub
add
lods
jmp
pop
dec
fdivs
in
repnz
add
clc
enter
stos
stos
dec
jnp
pusha
add
stos
dec
adc
add
inc
clc
lods
cli
xor
add
jo
add
in
jbe
insb
gs
xbegin
push
imul
clc
aad
pop
sar
pop
lahf
xchg
int
and
add
vunpcklps
sbb
jg
jnp
aas
or
clc
dec
test
jle
add
push
out
or
clc
int
out
push
add
add
inc
add
mov
loopne
or
clc
es
inc
clc
sahf
sub
xlat
dec
lock
outsl
pop
clc
sbb
pop
test
jne
add
clc
ja
clc
jae
add
clc
sub
clc
sub
clc
outsb
fistps
shlb
add
mov
xor
add
dec
js
lods
js
test
mov
cmpsb
clc
add
add
shlb
add
cmp
push
ja
clc
sub
aas
test
ja
adc
add
mov
clc
iret
stos
sbb
clc
cmp
add
test
xor
add
inc
add
xor
add
jp
add
push
add
xor
fs
dec
sbb
das
enter
in
or
sbb
mov
vfrczps
ret
clc
mov
mov
add
xchg
and
add
add
mov
movsl
clc
cmpsl
clc
dec
sub
clc
fimuls
jbe
pusha
add
lock
add
jns
outsb
filds
add
clc
push
int3
jnp
sbb
inc
clc
loopne
daa
clc
push
sahf
push
jg
sub
clc
imul
or
pushf
pop
ficoms
add
ljmp
popa
add
cmpsl
clc
or
adc
add
and
jl
cwtl
scas
fstp
icebp
jl
clc
in
clc
sar
add
push
add
or
mov
clc
lods
addr16
loope
mov
insl
and
add
add
clc
int
push
adc
add
negl
add
add
add
scas
insl
cmp
sbb
push
je
pusha
add
aas
jb
add
xor
add
loop
outsb
jge
enter
ljmp
in
pop
pop
push
add
mov
inc
clc
dec
enter
out
int3
ret
in
stos
clc
aas
add
add
pop
in
test
xor
add
add
clc
pushf
stos
add
pop
or
clc
sbb
aaa
and
add
add
out
sarl
xor
add
clc
jno
add
add
test
push
jmp
pop
pusha
add
int3
inc
add
xor
add
add
add
add
add
int
push
add
fcoms
and
add
shlb
cld
push
mov
mov
loopne
push
add
push
rcl
out
inc
clc
cmpsb
clc
sar
sar
clc
sub
xchg
inc
add
shll
dec
pop
xchg
fcmove
inc
add
inc
add
mov
clc
push
add
loope
cli
cs
jmp
add
aad
push
sbb
clc
mov
clc
stos
scas
ret
clc
into
loop
insb
xchg
push
add
in
inc
add
push
push
add
dec
xchg
xor
cmp
clc
add
xchg
outsl
in
cmp
test
dec
aas
int3
jne
sbb
xchg
imulb
add
fxch
add
add
add
inc
clc
scas
jo
add
fidivs
inc
clc
pop
jbe
clc
and
mov
add
cmp
and
jl
add
pop
lods
pop
inc
clc
xlat
jp
clc
stos
push
clc
jno
add
mov
clc
das
cmp
add
sub
mov
add
inc
clc
js
mov
add
add
jnp
clc
pop
dec
and
add
sar
clc
es
xchg
and
add
ss
or
sub
sti
enter
fucomip
movsb
clc
inc
add
sahf
jo
add
clc
repnz
pop
sar
clc
lahf
and
sub
adc
dec
push
mov
clc
je
das
or
adc
add
xchg
adc
addr16
sar
jge
fisttps
clc
adc
add
clc
mov
mov
clc
sub
mov
lret
or
jg
insb
jo
add
clc
cwtl
mov
clc
out
add
add
xbegin
ds
out
leave
daa
clc
data16
lahf
cld
or
add
push
mov
push
add
aad
add
pop
test
dec
fstpl
adc
add
clc
jns
sar
dec
dec
push
add
in
dec
and
mov
cmp
clc
push
add
cmc
or
ja
shlb
add
add
cmp
fisttps
gs
clc
lea
lods
mulb
add
clc
imul
add
insb
int3
stc
imul
add
fdivrl
add
add
fcompl
lahf
sub
add
test
jbe
or
sub
add
mov
hlt
push
clc
cmp
cwtl
repz
clc
jo
add
adc
stc
test
arpl
add
out
dec
loop
sbb
data16
pusha
add
dec
mov
clc
inc
add
xlat
cmp
add
pop
daa
clc
clc
mov
push
fsubrp
push
cmp
clc
fisubrl
sub
add
add
roll
sarl
mov
add
add
add
add
aas
cmp
push
xchg
pushf
aad
clc
pop
and
add
and
push
lea
xchg
pop
jne
sub
add
add
cltd
mov
add
adc
add
xor
add
or
mov
xor
jbe
into
cmpsb
clc
push
add
hlt
pusha
add
mov
and
int3
push
pop
xor
jle
add
or
ret
clc
add
or
add
int
add
xchg
int3
cmpsl
clc
lea
clc
lahf
add
add
inc
add
sbb
xchg
ret
add
jns
clc
mov
clc
jo
add
add
xchg
iret
or
clc
loopne
adc
add
clc
xor
add
add
sar
dec
out
loop
jl
sub
clc
jbe
add
push
add
sbb
and
add
outsl
ss
clc
add
aas
xabort
sahf
popa
add
push
adc
add
add
mov
stos
pop
sbb
add
add
add
cmp
add
adc
add
clc
je
add
add
add
cmp
fmuls
pop
out
in
mov
add
add
mov
out
sbb
jge
clc
lods
icebp
clc
cmp
xbegin
add
call
clc
movsl
clc
aad
aam
dec
enter
movd
sub
clc
ljmp
fcomps
xchg
es
in
adc
push
xchg
pop
int3
xchg
stc
xchg
ja
or
fnstcw
cmp
add
aaa
rolb
rolb
data16
imul
add
jnp
add
lock
dec
mov
test
icebp
xchg
aam
clc
xor
add
mov
in
jne
add
test
mov
movsb
clc
xlat
sub
movsl
clc
ljmp
push
or
clc
dec
pop
mull
dec
cmp
add
add
adc
cmp
jmp
xchg
loopne
out
in
xor
leave
icebp
into
push
das
jecxz
or
adc
add
jge
xbegin
xchg
aad
dec
adc
add
mov
clc
and
add
pushf
xor
add
clc
cmp
push
push
add
mov
popf
into
mov
sahf
je
add
inc
add
je
mov
clc
sbb
adc
jnp
fwait
pushf
sub
sar
add
lret
aad
clc
jge
mov
stc
mov
sub
add
enter
jmp
add
mov
fimull
push
add
pop
pop
jb
add
mov
lcall
xchg
or
stos
mov
mov
jnp
clc
lahf
push
add
inc
clc
xor
mov
pop
test
testl
hlt
push
add
cmp
cld
sahf
fcomp
adc
add
add
clc
aas
cmp
add
in
jb
add
insb
or
clc
ljmp
inc
add
aad
clc
dec
adc
bound
add
xor
add
test
mov
mov
and
add
jb
add
insl
and
add
add
mov
add
adc
add
add
and
add
add
add
xor
add
clc
clc
and
add
adc
add
clc
cmp
mov
movsl
clc
adc
add
sub
add
in
mov
add
push
dec
mov
clc
fisubs
clc
adc
add
fdivs
clc
ja
mov
pusha
add
jbe
add
repnz
inc
clc
es
mov
loopne
push
jne
add
shll
inc
add
adc
add
stos
jnp
test
lret
adc
add
clc
mov
mov
in
xor
add
pop
js
clc
clc
nop
in
mov
lea
bound
add
add
gs
loop
add
add
push
clc
test
fsubs
clc
jmp
clc
pop
int
add
sbb
aas
mov
clc
mov
clc
pop
inc
clc
dec
and
add
arpl
add
movsl
clc
call
leave
in
imul
push
or
xor
add
inc
add
mov
cltd
mov
clc
hlt
mov
cmc
xor
movsb
clc
cs
btr
push
push
lahf
rcrl
mov
pop
icebp
lock
add
cmp
sahf
cmp
clc
jae
add
movsb
clc
out
jl
mov
add
sub
dec
sub
add
in
or
mov
cltd
inc
clc
aad
add
fnstsw
test
fmull
sbb
jecxz
cmc
leave
xchg
cmp
loope
ret
clc
mov
clc
fiaddl
clc
outsb
inc
add
inc
clc
xor
clc
add
adc
xchg
inc
add
outsb
cld
cmp
add
mov
jno
add
add
mov
nop
test
xchg
jle
clc
enter
bound
add
mov
add
or
gs
or
add
and
add
sarb
adc
xor
int
add
xor
add
lea
add
add
adc
add
cli
loopne
jbe
cli
bound
add
adc
add
fs
daa
clc
cmc
data16
sub
clc
push
clc
inc
clc
mov
add
cmc
cltd
fs
jmp
imul
clc
jbe
add
hlt
adc
add
sar
add
xchg
sub
clc
or
scas
xchg
inc
clc
or
add
add
add
push
add
data16
outsl
inc
clc
cmc
pop
inc
add
add
add
adc
clc
dec
insb
jmp
cmp
jmp
add
adc
add
adc
add
popf
adc
clc
out
int3
sti
test
jne
clc
fidivs
add
addr16
out
push
mov
pop
je
add
lock
add
daa
clc
pusha
add
sbb
add
mov
in
push
xchg
add
add
add
loope
gs
push
add
add
lahf
arpl
add
clc
sti
pusha
add
mov
popf
push
in
push
add
js
clc
in
flds
dec
lods
int3
fmulp
and
add
mov
jae
add
adc
add
add
xor
add
gs
sahf
xor
add
clc
mov
adc
movsl
clc
out
pop
clc
paddw
dec
incb
add
push
clc
stc
cmp
add
jmp
add
aad
adc
add
clc
push
clc
or
push
pop
clc
jge
adc
int
add
lea
push
pop
ja
add
fcomps
add
mov
add
lock
ret
clc
lcall
add
add
clc
out
mov
push
add
js
es
mov
out
mov
mov
adc
enter
fisttpll
add
aam
in
adc
add
leave
inc
clc
sti
mov
add
ds
cmp
outsb
movsb
clc
ss
stos
or
add
add
add
mov
sbb
ret
clc
mov
pop
sar
lods
xchg
rclb
mov
add
and
add
add
push
inc
add
xbegin
add
into
lods
sub
inc
clc
xchg
sahf
xchg
pop
push
clc
adc
add
das
repz
add
add
aam
sub
jne
add
mov
pop
push
outsb
mov
clc
aam
add
das
mov
clc
into
push
and
add
add
lock
add
fsts
add
movsb
clc
icebp
xchg
and
iret
gs
xchg
or
add
cmp
imul
inc
clc
push
mov
add
dec
or
xchg
mov
add
pop
mov
aas
pop
and
mov
add
pop
sbb
imul
bound
add
clc
and
add
add
dec
jl
fsts
inc
clc
pop
clc
cld
sub
lods
dec
push
add
out
fiaddl
xlat
sbb
es
pop
icebp
push
add
mov
add
loop
mov
clc
lahf
lea
and
or
clc
adc
add
out
cltd
fsts
clc
lock
or
inc
clc
add
add
jno
add
clc
add
add
cmp
add
add
add
add
xbegin
sbb
clc
mov
add
repz
add
mov
xchg
iret
lret
cld
push
mov
add
es
popa
add
cltd
or
clc
loopne
sahf
into
add
add
sub
add
in
or
push
test
aas
push
xchg
jnp
add
jmp
clc
dec
xbegin
add
xor
add
add
and
add
pop
push
clc
mov
outsl
jp
adc
add
cmp
or
clc
push
mov
leave
or
xor
add
enter
add
add
add
add
add
ret
clc
test
push
sarl
or
push
add
jmp
jg
fs
push
add
xchg
in
cmp
xchg
call
pop
fcompl
clc
pusha
add
push
clc
repz
clc
pop
rcll
daa
clc
ret
clc
mov
clc
jno
add
xor
add
ret
clc
fldcw
clc
pushl
add
add
imul
add
push
cmp
clc
pushf
dec
movsb
clc
sbb
or
fistl
jae
add
ss
out
fiadds
clc
adc
add
clc
mov
es
and
add
add
out
sbb
push
test
jle
add
ret
clc
push
add
add
add
into
lods
clc
pushf
ret
clc
cs
jp
fs
lahf
add
add
clc
inc
add
jg
push
xor
sub
xor
add
clc
pop
stc
push
push
add
cwtl
js
mov
add
out
pop
push
lock
jmp
add
add
dec
movsb
clc
dec
jle
add
sub
mov
mov
jl
inc
add
mov
clc
mov
clc
fcomps
clc
clc
xchg
ss
rorb
add
hlt
cmpsb
clc
push
clc
out
negl
xchg
xchg
add
add
lret
fucomp
jo
add
add
xor
add
add
inc
clc
loopne
sbb
pop
cmp
mov
popa
add
inc
clc
or
add
clc
loopne
sarl
add
hlt
mov
add
pop
pusha
add
push
add
test
dec
dec
cmpsb
clc
sbb
shlb
add
mov
mov
jg
clc
cmp
je
add
push
clc
cmp
xor
add
add
add
clc
mov
pop
pop
incl
add
clc
dec
ljmp
movsb
clc
lods
icebp
mov
cli
sahf
jg
out
cld
lret
add
add
ljmp
cmp
pusha
add
inc
add
push
clc
test
sbb
mov
clc
data16
dec
movsb
clc
inc
clc
mov
clc
out
dec
jge
pop
cmp
btr
clc
cmp
repz
jge
imul
add
pop
pushf
and
cld
loop
jns
clc
push
add
insb
mov
add
rolb
add
xchg
xchg
int3
cmp
jne
clc
leave
pop
jne
movsl
clc
and
add
cs
in
sar
dec
jecxz
rcrb
and
add
cmp
add
clc
inc
clc
push
ret
clc
push
add
cmp
jge
insl
push
add
dec
xor
mov
addr16
add
lahf
dec
pop
ds
enter
clc
fs
pop
aaa
aas
fwait
pop
idivb
cmp
xchg
hlt
lods
jb
add
sbb
add
push
mov
lret
add
add
outsb
cmp
adc
add
push
add
movsl
clc
mov
add
lods
jae
add
pop
clc
mov
clc
jns
clc
mov
clc
xor
add
clc
leave
repnz
clc
call
ja
push
pop
push
enter
mov
sbb
clc
ror
out
adc
clc
repnz
clc
cli
jnp
add
push
jg
push
inc
add
xchg
pop
f2xm1
fisubrs
pop
cld
add
test
stos
push
mov
aaa
sar
push
clc
imull
xor
add
lahf
pop
mov
add
in
mov
or
popa
add
push
add
fbstp
add
cmpsb
clc
add
or
and
in
dec
sbb
daa
clc
add
data16
xchg
test
clc
xchg
push
cmp
outsl
stc
fldl
add
leave
and
add
add
and
add
sub
cmp
xor
add
add
add
push
nop
and
add
mov
cmc
push
add
add
add
add
add
add
imul
add
addr16
pushf
in
sub
clc
es
mov
in
inc
add
mov
add
shrb
mov
add
lea
push
push
xchg
call
jecxz
loopne
push
add
fisubl
add
arpl
add
push
mov
add
mov
or
fdivl
fmull
sar
dec
xchg
pop
xor
add
shll
pop
call
into
push
gs
pop
mov
add
leave
sbb
add
int
inc
add
push
inc
clc
pop
jno
add
cmp
push
fisubl
aas
add
ljmp
lret
sbb
clc
dec
mov
popf
sbb
out
or
std
js
movsl
clc
sahf
mov
add
out
sbb
xor
add
jg
add
sar
mov
cmp
inc
add
nop
cld
mov
push
xchg
cmp
enter
clc
inc
clc
ret
movsb
clc
jecxz
ljmp
pop
add
add
lahf
cmpsl
clc
jae
add
clc
clc
push
xor
push
sbb
mov
aaa
ret
clc
pop
sbb
loopne
or
insb
popf
arpl
add
add
sahf
ja
pop
clc
imul
add
clc
repnz
add
add
add
sub
mov
mov
clc
xchg
fucomp
rolb
lahf
mov
push
add
add
add
clc
jp
es
sub
add
add
or
add
xchg
lret
push
jnp
inc
add
pop
or
or
xabort
ret
adc
add
and
cwtl
sub
jo
add
clc
sbb
cmp
inc
add
xor
add
jnp,pt
out
add
inc
add
cmp
add
mov
cmp
clc
inc
add
cmp
sub
sub
clc
scas
clc
repnz
and
add
clc
add
add
mov
test
pop
cmc
jle
xchg
cmp
roll
loopne
notl
add
ja
xor
clc
fldenv
jg
add
cmp
or
inc
add
lea
and
add
or
clc
adc
add
add
sar
test
not
daa
clc
call
clc
cmpsl
clc
cmp
clc
jbe
mov
in
in
enter
add
mov
stos
add
sbb
jno
add
xlat
mov
clc
xor
add
sub
data16
pusha
add
int
cmpsl
clc
cmp
hlt
rcll
add
clc
fnsave
add
sbb
jae
add
inc
clc
lock
add
pop
leave
test
mov
and
add
and
add
sub
sar
xchg
or
add
adc
xchg
xor
add
loope
lea
add
add
xor
clc
mov
push
outsl
pusha
add
adc
mov
push
sub
test
pop
int3
loop
dec
xchg
int
add
add
in
mov
jecxz
lret
sbb
sub
clc
fstpt
push
add
cmp
add
jecxz
xabort
add
fs
add
add
cmc
test
test
insb
cmp
mov
adc
add
add
mov
add
clc
dec
test
loope
xor
pushf
inc
clc
push
xor
pop
jns
add
mov
mov
in
xabort
clc
push
mov
add
mov
clc
add
add
add
lahf
aam
lahf
adc
add
aam
call
cmp
idivb
jp
outsb
aam
adc
add
add
mov
rcll
add
add
clc
sahf
shrb
mov
ds
push
cmp
lea
add
or
cmc
cmp
add
je
nop
fidivs
aad
clc
lods
arpl
add
add
lods
pop
pop
fs
add
cmc
xchg
push
mov
stos
xchg
cmp
mov
sbb
add
daa
clc
ret
clc
movsb
clc
jo
add
sub
xchg
pusha
add
lods
test
jnp
mov
leave
add
add
add
or
add
cmp
add
clc
mov
pop
mov
add
sub
cltd
or
clc
push
out
xor
add
in
jo
add
add
pop
inc
add
fld1
mov
clc
leave
mull
add
ret
clc
sbb
and
add
out
pop
xchg
in
int3
jmp
int
pop
sbb
icebp
int
cmpsl
clc
jo
add
insb
sub
and
add
jnp
mov
xor
add
clc
imul
ret
clc
jge
pop
xor
push
mov
add
cli
addr16
fdivs
xchg
cli
fdivr
jp
js
sub
pop
aaa
and
xchg
dec
sbb
ljmp
jae
add
mov
arpl
add
xchg
push
clc
sub
add
clc
push
mov
push
add
add
loope
loopne
outsl
pop
clc
xchg
mov
add
cmp
xchg
movsb
clc
inc
clc
xbegin
clc
int3
inc
add
loopne
sbb
or
clc
pop
sub
sub
add
clc
pop
lea
mov
clc
mov
sar
stc
sub
clc
in
inc
clc
dec
cmp
clc
out
and
add
xor
add
clc
fstpl
xor
add
mov
push
jl
clc
out
xchg
xchg
or
clc
push
add
clc
pop
mov
clc
shrb
sbb
mov
adc
iret
jo
add
cmp
add
fs
adc
ret
clc
cmp
xlat
sbb
in
aas
mov
cld
xor
jmp
and
add
aaa
lahf
call
inc
add
scas
jbe
cmp
add
fildl
clc
fs
sbb
inc
add
push
clc
cmp
dec
xor
add
and
bound
add
clc
jge
add
jmp
lret
dec
or
ret
clc
dec
clc
push
lock
fcom
push
lods
push
or
add
inc
clc
mov
sbb
out
adc
add
clc
cmp
ja
vucomiss
ljmp
cmp
jo
add
inc
add
js
add
mov
clc
xor
xchg
cmp
inc
clc
inc
clc
pop
in
dec
js
push
mov
add
pop
clc
cmp
das
ss
mov
mov
add
cmp
jne
add
dec
sarb
fwait
jns
mov
clc
xchg
cmp
mov
add
movsl
clc
ds
insb
insb
xchg
ljmp
in
rorb
xchg
dec
ds
clc
mov
mov
add
inc
clc
inc
clc
mov
fst
cmp
adc
add
stc
fstpt
shrl
adc
add
fdivl
add
mov
pushf
lret
clc
gs
and
and
add
push
or
and
add
mov
lock
jbe
mov
and
add
fldt
dec
iret
shlb
add
add
add
nop
call
mov
lea
jnp
in
inc
add
xchg
push
dec
insb
adc
cmp
jle
pusha
add
test
inc
add
fcomp
push
scas
es
es
jle
push
insl
or
add
out
adc
add
xchg
and
add
clc
movsl
clc
add
add
clc
sahf
sub
and
add
add
add
sbb
mov
fptan
cltd
gs
sti
repnz
add
ret
or
add
xor
add
clc
notl
add
mov
clc
in
mov
pop
adc
add
add
ja
clc
xor
xchg
shrb
xor
add
clc
clc
or
add
aad
or
add
daa
clc
add
jae
add
shrb
mov
clc
stos
fs
xchg
out
mov
push
add
and
add
ficoms
add
scas
jno
add
shl
stc
push
jbe
clc
xabort
push
add
sti
or
xchg
xchg
popf
fsub
clc
xchg
pusha
add
movsb
clc
add
xlat
cmp
add
and
push
xchg
dec
mov
mov
add
jae
add
add
clc
pop
pop
mov
add
filds
loopne
cmp
int
inc
add
cmp
clc
sti
xor
add
imul
fsts
add
lret
add
stos
jle
out
cmpsb
clc
imul
test
repz
rcrb
add
out
dec
or
daa
clc
jo
add
mov
mov
sar
fnstenv
add
add
xabort
push
clc
xchg
xor
clc
repnz
cmp
aad
data16
mov
xlat
sub
or
cmp
clc
jae
add
sbb
dec
sar
movlps
add
std
lret
add
cmp
hlt
pop
and
xbegin
add
push
insl
mov
rclb
clc
inc
clc
mov
add
call
add
jle
xchg
mov
sar
mov
mov
sar
add
or
clc
call
add
inc
clc
jmp
clc
loope
mov
cmp
xchg
mov
clc
push
sahf
insb
gs
dec
mov
or
clc
push
add
scas
sar
ja
clc
adc
add
add
inc
add
add
add
dec
sbb
add
add
dec
bound
add
mov
add
push
fnstsw
clc
adc
jb
add
add
loop
cld
sub
mov
add
dec
jo
add
jle
insb
dec
xor
cmp
stc
mov
cmp
mov
add
xchg
mov
or
add
add
adc
imul
adc
add
add
pop
inc
add
clc
jnp
fildll
cmp
inc
clc
mov
add
dec
jo
add
clc
mov
scas
mov
pop
clc
adc
add
jne
ja
clc
mov
clc
sbb
add
fmull
sub
ret
cmp
dec
fstp
push
clc
lcall
negl
jecxz
add
add
cmp
jg
lea
nop
add
add
xor
add
mov
add
fadds
cwtl
jb
add
add
pushf
sbb
lret
lcall
add
imul
or
add
add
fwait
sar
clc
in
inc
add
mov
test
sbb
out
xbegin
clc
jle
mov
clc
ja
fisttpll
sahf
repz
add
faddl
dec
orps
add
xor
add
pop
lock
test
jl
clc
xchg
cmp
xor
add
add
testl
fimuls
pop
mov
inc
add
xchg
sub
or
lcall
cmp
scas
inc
add
mov
jl
dec
call
add
add
div
push
add
cmp
clc
test
loope
jp
sbb
add
lea
clc
cmp
movsl
clc
jg
ss
cmpsl
clc
mov
xchg
and
add
arpl
add
adc
add
es
loop
and
add
push
mov
add
clc
add
add
repz
clc
mov
scas
out
hlt
pusha
add
cmp
add
and
add
sar
repnz
cmp
and
add
cmp
dec
sbb
clc
add
add
sbb
movsl
clc
sbb
xchg
lods
push
add
jl
clc
lahf
push
in
add
clc
test
add
mov
add
and
add
push
dec
cmp
jno
add
clc
fcomps
das
dec
es
je
or
push
pop
push
lock
mov
jmp
clc
call
fcmovnb
clc
scas
cmp
loope
call
and
add
icebp
jl
faddl
add
clc
jmp
adc
add
pop
mul
clc
jmp
mov
std
jbe
clc
jbe
push
or
inc
clc
add
add
push
add
jb
add
je
shrb
add
add
inc
clc
adc
add
bound
add
inc
clc
lea
clc
add
add
sti
adc
add
cmp
add
lea
push
repz
adc
add
push
mov
clc
add
sbb
mov
add
inc
add
ror
popf
test
outsb
xlat
mov
pop
and
add
sub
xlat
mov
add
jl
mov
xlat
adc
clc
in
out
int
push
clc
and
add
xchg
push
add
mov
add
jne
clc
ds
inc
add
and
add
pop
mov
cmp
pop
hlt
in
aad
inc
clc
sbb
jne
imul
add
and
stos
mov
clc
lods
push
cmp
add
test
mov
adc
add
clc
addr16
jb
add
dec
mov
pop
clc
xor
add
inc
add
pop
das
in
mov
xchg
je
clc
out
add
add
add
clc
jmp
pop
jne
clc
loope
cmp
imul
add
cmp
shrl
clc
and
add
clc
adc
mov
xchg
mov
in
insb
xchg
insb
pop
mov
test
or
add
fisttpl
daa
clc
mov
fsubrs
iret
cmc
jne
adc
add
clc
jb
add
popf
aam
cld
or
add
xor
add
add
add
jno
add
clc
cmp
xor
add
add
int3
sbb
xchg
lret
sub
add
add
add
in
xlat
mov
add
add
clc
or
mov
sub
pop
push
gs
ss
in
ja
xbegin
aad
add
mov
arpl
add
xor
add
xor
add
cmp
clc
loope
dec
dec
push
add
jae
add
jl
fcomip
std
fs
dec
pop
lock
clc
mov
add
fdivl
insl
out
xor
add
xchg
es
sar
clc
in
sbb
pop
outsb
inc
clc
frstor
clc
pop
jp
cli
push
clc
sbb
scas
push
adc
add
in
and
add
add
mov
sbb
clc
pop
clc
cmp
clc
data16
mov
add
add
adc
add
add
inc
clc
inc
clc
dec
xor
add
test
clc
ja
or
clc
jmp
imul
cmp
add
xchg
gs
mov
clc
xchg
cmp
inc
clc
ljmp
xchg
sbb
add
jecxz
mov
add
aam
adc
add
es
popa
add
push
add
add
dec
mov
mov
daa
clc
test
add
add
cmp
xlat
out
push
push
sbb
test
add
imul
fstpl
clc
pop
fldt
and
add
out
adc
add
add
add
sbb
xchg
pop
mov
adc
add
push
sar
add
add
add
mov
push
fildl
add
jae
add
add
enter
push
clc
add
add
or
clc
pop
cmp
pop
xchg
mov
push
pop
jno
add
mov
fadd
clc
push
add
cmp
mov
add
aaa
and
add
push
mov
clc
push
add
cli
or
add
add
clc
cwtl
xchg
inc
clc
xor
add
add
add
sbb
inc
clc
ss
das
or
popa
add
sti
dec
faddl
inc
add
gs
hlt
cmpsb
clc
mov
clc
lods
mov
lea
es
push
add
push
add
and
add
add
adc
scas
sbb
mov
movsb
clc
add
add
add
or
clc
adc
jg
int3
sub
add
xor
add
adc
add
xchg
mov
clc
mov
add
add
mov
xchg
repz
lods
fnstenv
clc
clc
mov
clc
or
clc
test
pop
clc
clc
imul
mov
mov
inc
clc
add
add
add
divb
add
xor
add
clc
add
add
pushf
jne
cmp
movsl
clc
xchg
sub
sbb
addr16
scas
out
fwait
shll
clc
leave
sub
dec
mov
clc
lret
clc
cltd
out
push
add
popl
xlat
test
inc
add
sbb
add
inc
clc
mov
cs
add
add
outsl
sub
push
add
adc
add
inc
clc
jb
add
daa
clc
mov
push
add
adc
data16
or
pop
clc
loop
mov
lea
mov
clc
and
push
lea
push
std
fisubrs
add
cmp
add
inc
add
mov
and
push
sub
sbb
add
or
or
add
sar
or
add
and
add
add
popf
vunpckhps
clc
test
test
loope
lods
push
add
or
clc
lret
rclb
lret
dec
mov
mov
add
add
fnstenv
ror
dec
movsb
clc
data16
xchg
dec
lret
pop
xabort
ret
clc
dec
dec
jmp
xor
add
icebp
imul
pop
pop
fwait
jecxz
inc
add
push
movsl
clc
scas
sbb
into
dec
pop
clc
bound
add
mov
jp
add
add
mov
dec
into
cmp
or
clc
arpl
add
clc
addr16
rol
clc
xor
add
or
jo
add
add
dec
icebp
mov
or
pushf
cmpsb
clc
inc
add
mov
add
clc
fidivs
add
add
jae
add
clc
mov
iret
adc
add
dec
jge
push
outsl
xor
push
add
stc
outsb
fisttps
clc
jbe
add
adc
add
add
rorb
xabort
clc
es
in
hlt
mov
add
jmp
mov
jecxz
pop
jg
add
add
add
add
adc
pop
xchg
rorl
repz
clc
aad
clc
mov
jp
xchg
int
xor
add
in
jnp
lret
mov
imul
inc
clc
push
cmp
ret
clc
sar
sub
add
xor
add
loopne
sub
loopne
pop
je
clc
fistpl
cli
mov
sahf
pop
icebp
add
clc
xchg
jne
mov
clc
jo
add
add
cmp
mov
xchg
rol
clc
data16
movsb
clc
int
clc
push
add
clc
sahf
fucomi
and
add
out
inc
clc
call
sti
cmp
dec
es
mov
add
je
clc
clc
add
add
add
xchg
or
add
cmpsb
clc
jne
inc
add
cmp
clc
ret
clc
test
clc
cmc
in
dec
fwait
out
dec
mov
add
bound
add
cwtl
ret
cmp
pop
mov
clc
sub
mov
mov
clc
jnp
mov
add
mov
scas
insl
sub
in
mov
sub
outsb
push
add
cld
mov
add
add
scas
push
clc
icebp
lock
dec
imul
sar
add
nop
jle
cltd
repz
add
mov
js
xbegin
add
sti
mov
xchg
repnz
mov
or
jo
add
add
lcall
cli
cmc
mov
out
je
daa
clc
dec
add
add
add
lret
mov
lea
inc
add
ret
mov
inc
clc
sbb
clc
dec
push
sbb
testb
hlt
dec
push
add
jmp
clc
push
clc
inc
clc
popa
add
pop
es
lret
jp
clc
push
add
jno
add
lock
clc
and
add
add
mov
add
jne
xabort
add
push
add
daa
clc
xabort
inc
clc
fadds
add
xchg
incl
add
clc
jb
add
add
pop
push
out
cmpsl
clc
mov
push
loopne
or
jle
mov
test
fisttpl
add
add
inc
clc
add
add
cmp
cmp
mov
call
cmc
dec
xor
lods
cmp
clc
mov
pop
popa
add
mov
add
pop
add
add
fcmovnbe
jbe
test
shlb
loopne
sarl
clc
mov
add
pop
iret
push
add
je
xchg
dec
xchg
xchg
or
add
add
xchg
movsl
clc
or
add
fists
add
dec
mov
fistps
cmpsl
clc
sar
clc
pushf
cmp
clc
jl
inc
add
or
pop
stos
xchg
lret
add
mov
and
add
test
ds
cmpsb
clc
in
daa
clc
cli
push
outsb
xchg
das
sar
mov
cmp
cmp
add
add
mov
leave
adc
add
jecxz
test
cmp
cmp
clc
daa
clc
fnstcw
sar
idivl
cmp
add
add
sub
cmp
add
xchg
push
sbb
add
adc
jne
nop
aad
clc
xchg
push
jp
add
scas
inc
add
xchg
fsubrs
dec
outsl
shrl
clc
mov
xor
add
test
clc
daa
clc
push
test
clc
dec
pop
outsl
pop
aas
and
add
add
ss
add
in
jg
add
xchg
xchg
xchg
loopne
jge
clc
lret
cmp
clc
inc
add
and
add
sbb
add
and
cmp
clc
xor
add
add
in
mov
xchg
xor
add
repnz
ljmp
add
mov
clc
cmp
push
scas
xor
add
add
lock
add
cmc
add
add
add
sbb
clc
sahf
cld
call
clc
int
add
jge
sub
add
cld
popf
add
add
and
add
add
mov
clc
push
add
and
add
data16
jge
ficomps
aaa
inc
add
jo
add
add
in
jno
add
add
clc
fisttpl
push
jmp
clc
xchg
lcall
or
clc
loopne
jp
jl
add
call
dec
dec
mov
xor
add
test
adc
add
push
clc
outsl
and
add
call
add
push
pushf
in
inc
add
xchg
test
adc
add
add
aas
inc
clc
fadds
cmpsb
clc
clc
xor
add
pop
clc
iret
adc
add
dec
mov
sub
add
pusha
add
add
and
add
cmc
pop
inc
add
sbb
es
aas
clc
sub
add
add
fabs
clc
int3
dec
sbb
fs
insl
xabort
push
clc
enter
jecxz
loop
fs
push
add
mov
xabort
leave
or
add
clc
mov
dec
into
sti
cli
mov
dec
xor
add
ds
pop
mov
push
pop
inc
add
out
mov
jl
mov
sbb
add
mov
adc
mov
pop
clc
fs
mov
add
push
add
add
add
mov
add
aaa
jne
dec
jns
pushl
add
sti
mov
clc
and
add
pop
sub
mov
sbb
add
mov
inc
clc
lret
pop
xor
add
add
iret
pop
clc
icebp
xor
add
add
out
push
clc
cmp
mov
or
test
pop
clc
sub
or
cld
cmp
add
pop
fbld
clc
leave
stos
adc
add
pop
and
add
add
cmp
clc
flds
add
clc
cmovp
xchg
jle
adc
add
clc
insb
mov
icebp
jb
add
loop
aad
aaa
inc
clc
imull
es
xchg
push
cmp
stos
jge
loop
push
inc
add
xbegin
add
xbegin
mov
clc
mov
and
add
add
add
cmpsb
clc
ss
jp
add
sar
inc
clc
xor
add
add
adc
add
jge
mov
push
add
push
icebp
adc
add
pop
add
add
jae
add
add
ret
js
xor
add
pop
mov
clc
xchg
mov
sub
clc
mov
aam
add
gs
pop
inc
add
ljmp
mov
ret
clc
imul
add
clc
clc
push
sbb
sub
adc
pop
pop
sbb
clc
and
add
add
xchg
clc
xabort
cmp
sar
data16
test
mov
inc
clc
test
pushf
mov
fiadds
jg
inc
add
scas
mov
add
mov
add
sub
fisttps
pop
clc
cmp
add
cmp
add
push
sub
mov
xbegin
sub
test
sbb
adc
clc
idiv
testb
add
add
or
pop
mov
clc
ljmp
add
add
clc
and
add
xchg
outsb
xor
add
in
test
outsb
mull
add
insb
iret
test
or
add
mov
push
clc
sbb
add
add
ffreep
clc
loop
test
xlat
fsubl
and
pop
add
xabort
mov
inc
add
in
clc
push
pushf
and
add
add
insl
cld
xabort
add
xor
clc
lcall
cmp
clc
stos
cmc
jne
enter
clc
cmp
add
mov
clc
and
add
mov
add
std
or
mov
arpl
add
int3
mov
out
js
clc
sar
jecxz
adc
add
bound
add
add
faddl
add
into
xor
add
push
cmp
addr16
or
jg
clc
mov
clc
inc
clc
cli
out
jns
push
add
adc
add
pop
lock
movsl
clc
test
jno
add
add
imul
adc
adc
add
leave
jae
add
addr16
pop
cmp
inc
add
cmpsb
clc
idivl
lea
push
pop
rcrl
cmp
push
or
sbb
add
pop
pop
mov
push
add
cmp
test
xchg
push
pop
pop
add
add
add
add
clc
add
add
add
lock
add
or
arpl
add
add
movsb
clc
stos
push
add
pop
push
add
xchg
loopne
xchg
cmp
dec
cs
add
ret
cmp
push
add
stos
xor
clc
pop
fistps
leave
and
jb
add
add
mov
xor
add
clc
push
add
mov
add
nop
mov
inc
clc
cmp
clc
mov
clc
adc
add
pusha
add
mull
jnp
mov
clc
push
add
test
xchg
add
add
dec
stos
mov
jno
add
fldl
add
aas
fwait
repnz
fsubs
clc
xchg
adc
add
clc
push
add
jl
clc
rorl
dec
cmp
cltd
mov
clc
ja
sub
add
sub
sub
add
imul
pop
adc
add
add
push
je
lods
push
iret
cmp
add
jnp
clc
add
or
cmp
je
mov
xlat
nop
in
cmp
clc
aam
add
mov
cltd
sbb
clc
fwait
adc
nop
ljmp
pop
jne
jp
comiss
test
add
cmp
add
xbegin
add
add
clc
mov
dec
cmp
clc
ret
push
mov
mov
bound
add
mov
add
test
sar
bound
add
add
add
fs
dec
and
add
add
pop
sub
clc
sbb
jp
clc
aam
clc
lods
sbb
clc
faddl
pop
inc
clc
test
ds
fbld
add
jbe
add
add
sarl
out
jg
lea
clc
insl
rcrb
mov
add
mov
xchg
mov
add
lock
cmp
jle
clc
mov
mov
icebp
js
call
mov
scas
sar
add
notb
add
loop
dec
dec
mov
out
nop
mov
add
or
and
add
clc
pop
ret
clc
add
cmp
clc
cld
jl
cmp
clc
mov
lods
ret
add
mov
and
add
xchg
js
stos
inc
clc
cmp
add
sub
add
xor
cld
frstor
fdivrl
push
add
ds
out
ret
add
or
insl
pop
pmaxsw
rcrl
lret
clc
xlat
je
lea
cmp
jmp
inc
clc
mov
jg
add
add
push
add
add
add
je
loopne
out
cmp
mov
add
sbb
cmp
and
cmp
adc
add
lret
scas
mov
add
cwtl
push
add
add
clc
test
clc
mov
ret
clc
call
out
cmp
clc
mov
add
add
clc
mov
add
das
popa
add
cmp
add
xchg
dec
jp
inc
clc
pop
lcall
mov
mov
clc
jb
add
dec
or
add
and
in
out
xor
add
add
add
sbb
loope
jmp
mov
clc
aaa
inc
add
repz
add
cmp
test
leave
add
add
cmpsl
clc
negb
leave
fs
jl
add
adc
add
clc
adc
add
into
push
add
push
add
lea
sub
jle
test
dec
das
sub
add
test
xlat
cmp
aas
fsubrp
shlb
cli
imul
add
sti
sub
mov
imul
clc
cmp
pushf
daa
clc
dec
push
xlat
xchg
test
mulb
clc
and
add
ss
clc
psllq
cmp
mull
or
clc
fwait
cmp
add
aam
mov
imul
das
xchg
stos
test
shrl
or
flds
push
out
push
fnsave
clc
dec
mov
xchg
dec
das
dec
aaa
adc
add
add
out
rorl
clc
cmp
inc
add
xchg
push
fs
mov
clc
xchg
push
add
and
add
add
test
cmp
clc
inc
clc
outsl
fwait
mov
ljmp
sub
clc
pop
dec
mov
outsb
je
clc
in
into
mov
add
aaa
setns
clc
adc
add
clc
ror
int3
mov
in
dec
sahf
test
pop
in
loopne
repnz
stos
sub
inc
add
out
cmp
clc
fldt
add
cli
mov
jns
clc
ret
lret
add
xchg
popa
add
jnp
lahf
mov
clc
sbb
test
mov
hlt
xabort
cltd
sub
dec
sti
push
add
xabort
sub
add
ljmp
add
clc
in
xchg
adc
jne
clc
jle
xor
add
add
inc
add
clc
ds
mov
cwtl
cs
clc
pop
clc
add
add
inc
clc
cmp
clc
iret
push
add
jne
mov
inc
add
aas
xchg
out
sar
in
and
add
clc
jb
add
insl
jmp
mov
dec
in
repz
lahf
ret
clc
sbb
add
fimull
dec
pop
jmp
pushf
sub
inc
clc
add
push
xor
add
inc
add
enter
sarb
add
ret
clc
jbe
push
clc
xlat
pop
mov
scas
es
jge
clc
roll
cmp
clc
arpl
add
clc
out
jnp
add
jne
add
repnz
clc
mov
xchg
xor
addr16
jg
gs
sub
add
sti
std
outsl
ss
add
or
or
clc
dec
add
add
add
cmp
xor
add
sti
dec
call
in
xor
sar
clc
add
clc
sahf
cli
mov
add
push
push
enter
clc
sar
cmp
repz
mov
inc
add
add
pop
xor
clc
mov
adc
add
adc
add
pop
push
and
add
add
clc
sub
push
movsb
clc
sbb
pop
inc
clc
xchg
adc
add
clc
cmp
pushf
scas
add
pusha
add
int
dec
mov
mov
or
push
ret
insb
sar
cwtl
sub
mov
sti
mov
add
add
add
pop
sub
or
add
add
jp
add
add
xor
add
add
insl
int
clc
push
nop
xlat
add
add
add
add
add
fistl
lea
sbb
adc
add
add
adc
repnz
clc
fucom
clc
scas
pop
frstor
inc
add
sub
sub
clc
sahf
mov
clc
lcall
push
std
xchg
fsubp
clc
cmpsl
clc
add
add
add
clc
mov
push
cmpsb
clc
repz
add
in
bound
add
clc
lret
add
mov
mov
add
cmp
es
aad
clc
pop
push
xor
add
pop
testb
add
adc
add
fdivs
fdivl
mov
add
cmp
clc
test
jl
clc
aas
fistpll
outsl
xchg
stos
inc
clc
adc
add
add
and
add
pop
xchg
jle
jo
add
loope
cwtl
dec
sbb
clc
stc
inc
add
xor
add
add
add
dec
mov
add
jae
add
ds
insl
mov
adc
add
shl
clc
aam
pushf
push
mov
clc
fs
mov
ret
clc
out
push
loop
mov
add
or
jecxz
mov
popa
add
bound
add
jg
pushf
loopne
mov
mov
bound
add
in
mov
out
cmp
add
call
pop
clc
push
cmp
sbb
clc
test
clc
sub
scas
pop
sarb
clc
cmp
clc
movsl
clc
std
aas
cmp
ficomps
dec
mov
push
add
push
or
pop
pop
or
pop
std
clc
mov
clc
data16
cmp
sar
and
add
jle
clc
cmp
adc
add
mov
mov
add
std
mov
xchg
xchg
dec
hlt
dec
outsl
loop
cmp
dec
and
add
add
lret
sbb
xor
add
xabort
jo
add
clc
mov
adc
add
cmp
xor
hlt
sub
mov
add
mov
clc
call
sbb
and
outsb
pop
cli
sub
or
mov
fxch
push
sbb
add
add
cli
add
add
cmp
clc
clc
dec
adc
add
clc
mov
bnd
pop
stc
pushf
xchg
aam
clc
clc
mov
push
clc
mov
outsl
jbe
cmp
call
adc
add
fidivs
push
data16
xchg
sbb
mov
add
clc
fcmove
and
jo
add
fidivs
dec
and
test
fldl
xchg
xchg
popl
push
loop
cmp
clc
inc
add
ret
clc
in
xchg
imul
sbb
ja
clc
push
das
sbb
fmuls
push
sbb
lret
adc
add
mov
pop
mov
clc
push
clc
popf
lods
icebp
inc
clc
arpl
add
xbegin
and
add
add
rol
clc
push
adc
add
add
add
add
loopne
add
add
pop
push
add
mov
clc
push
mov
loope
out
and
xchg
sar
stc
pop
sbb
xchg
in
cmp
shlb
cmp
xchg
mov
add
loop
imul
add
and
add
xchg
arpl
add
mov
add
cmp
ja
clc
insb
jne
and
mov
repnz
loopne
sbb
mov
add
add
push
add
add
inc
clc
fadds
sbb
add
add
leave
nop
sbb
clc
dec
push
add
ljmp
stos
add
pop
or
mov
fisubrs
lock
clc
xabort
scas
int
out
adc
add
jo
add
xchg
sbb
adc
add
clc
cmp
ficoms
add
ljmp
clc
jbe
ret
clc
inc
clc
lods
test
inc
add
push
clc
in
inc
clc
outsb
pop
dec
sub
clc
mov
mov
pop
mov
sub
push
add
out
cmp
sbb
fwait
jo
add
jp
inc
add
pop
mov
test
clc
dec
sub
out
divl
add
in
and
add
add
mov
add
clc
add
clc
in
sar
add
add
mov
add
push
in
sbb
fs
mov
clc
loopne
in
jno
add
imul
clc
imul
cmp
sub
jbe
fs
cld
lcall
je
add
repnz
clc
or
clc
push
push
pushf
leave
mov
das
and
in
xor
add
add
inc
clc
sbb
clc
stos
cs
pop
movsl
clc
jge
clc
aad
out
inc
clc
cmp
test
add
xchg
and
push
add
push
mov
add
sarl
pop
sti
cltd
in
aaa
insl
cmp
and
add
pop
je
gs
dec
ficomps
push
clc
mov
mov
clc
repnz
clc
dec
rcrb
mov
add
movsl
clc
or
sbb
ja
add
inc
add
jb
add
lods
add
add
cmp
clc
or
add
jmp
clc
push
add
insl
popa
add
and
inc
clc
pcmpeqw
clc
ret
clc
jle
clc
aaa
addr16
in
push
mov
sbb
dec
add
add
add
mov
push
xchg
cwtl
dec
sbb
ds
and
add
add
add
add
add
push
mov
clc
sub
testl
xchg
jmp
test
mov
dec
mov
pop
jbe
inc
clc
sti
in
je
pop
add
add
clc
stos
in
lret
and
cmc
rclb
add
clc
imul
push
add
loopne
and
add
clc
icebp
dec
insb
mov
clc
xor
add
clc
icebp
inc
add
bound
add
add
add
cld
in
test
clc
aad
clc
mov
mov
ret
clc
or
add
repz
sub
add
in
push
bound
add
or
add
lea
and
add
cltd
dec
lcall
test
inc
clc
sbb
push
sbb
dec
sahf
pop
std
dec
cmp
add
test
and
add
stos
ljmp
clc
je
add
lods
dec
push
pcmpgtd
call
clc
adc
clc
jle
clc
out
inc
add
and
inc
clc
ds
sub
add
sbb
lret
stc
or
cltd
pop
and
sahf
mov
mov
jge
jno
add
addr16
test
movsb
clc
and
add
mov
leave
iret
and
add
stos
stc
lcall
add
add
add
ja
cmp
test
dec
pop
stos
mov
stos
push
jns
daa
clc
push
add
jle
and
add
cmp
cmp
fistpll
and
add
clc
mov
jae
add
sahf
dec
jne
or
fnsave
add
mov
aas
imul
cmp
push
nop
jae
add
bound
add
mov
clc
es
pop
or
inc
add
jecxz
out
sbb
clc
stos
cmp
push
add
mov
dec
cs
add
imul
add
cmp
mov
cwtl
sub
in
gs
ds
sub
clc
dec
sbb
add
fisttps
aad
add
jle
adc
add
add
outsb
mov
scas
pusha
add
call
add
into
fs
push
xchg
jnp
add
inc
clc
add
aad
clc
and
sbb
repnz
mov
std
cmp
add
jmp
adc
add
jae
add
cmp
add
test
mov
clc
es
jo
add
fsubrl
dec
gs
cmp
mov
sar
into
mov
pop
scas
imul
xchg
push
test
fimull
cltd
jg
add
shlb
mov
clc
fadds
dec
call
jne
sbb
add
cmp
out
sahf
call
add
clc
sbb
clc
push
insb
sbb
rcll
sar
clc
sub
add
rol
clc
std
mov
clc
sub
adc
add
add
arpl
add
clc
daa
clc
mov
sbb
add
push
add
lods
dec
cmp
clc
jno
add
clc
cmp
add
jecxz
xchg
ds
clc
mov
push
pop
cmp
dec
jge
adc
clc
sbb
clc
out
cmp
clc
clc
jp
cmp
ret
clc
sbb
fisttpll
dec
rorl
sbb
add
mov
adc
sbb
iret
pop
jle
clc
daa
clc
cli
outsb
mov
or
mov
add
inc
add
push
clc
fwait
es
nop
cli
insl
adc
add
mov
mov
jecxz
sub
mov
xchg
in
sub
adc
aam
sbb
pop
imul
sub
clc
clc
out
or
add
push
push
std
mov
lret
clc
rcrb
add
adc
add
mov
mov
out
adc
scas
jbe
clc
jnp
clc
enter
add
aas
cmp
clc
mov
add
clc
mov
clc
data16
jle
ret
clc
jo
add
clc
test
add
mov
es
cld
add
add
add
pop
cli
push
adc
sbb
add
add
add
insl
cmp
add
dec
out
xchg
lret
push
es
jmp
push
add
das
clc
pop
and
fwait
dec
and
pop
clc
fdivl
js
clc
lea
or
cmp
add
in
pop
clc
dec
outsb
pop
mov
clc
xchg
inc
clc
xor
add
inc
add
popf
es
sbb
lahf
pop
fcmove
outsb
push
mov
mov
clc
jle
mov
mov
mov
mov
sub
clc
jae
add
add
jbe
mov
or
fbld
clc
sbb
sti
sti
mov
inc
clc
mov
add
sub
adc
add
add
cltd
lret
icebp
xchg
mov
lock
call
pop
cmp
mov
loope
ss
xchg
jmp
data16
loopne
inc
add
sbb
popa
add
lret
xor
add
js
cmp
cmp
push
shlb
add
add
dec
xor
add
lcall
add
add
inc
clc
test
mov
add
or
clc
mov
jnp
or
ljmp
xor
add
clc
cmp
add
cs
cltd
adc
add
xor
add
add
jge
clc
shlb
add
add
add
lods
stos
push
add
add
fists
xchg
sbb
enter
loop
sar
clc
jo
add
dec
loope,pt
jmp
xor
add
add
sar
clc
adc
mov
clc
xchg
ss
clc
inc
clc
xor
add
or
mov
clc
add
lods
clc
cmp
lcall
add
mov
out
pop
clc
push
xabort
out
insb
sub
clc
cmova
pop
inc
clc
xchg
or
jns
add
xor
add
add
cmp
push
add
or
sar
clc
cmp
clc
cmp
dec
mov
ss
arpl
add
add
call
add
insb
jmp
cmpsb
clc
test
je
mov
hlt
je
add
pop
es
xor
add
stc
sbb
pop
clc
dec
loope
mov
shr
loop
rclb
add
cmp
add
inc
clc
dec
xor
add
clc
push
push
dec
inc
add
inc
add
jmp
clc
add
add
daa
clc
push
out
repnz
enter
mov
clc
xor
add
mov
pushf
stc
push
add
mov
fwait
pop
cmp
clc
xor
add
add
repnz
xor
faddl
outsl
dec
jo
add
xor
cmp
clc
mov
clc
cmpsl
clc
mov
aam
or
add
jmp
clc
out
xabort
clc
cmp
inc
add
add
add
fidivs
push
clc
mov
clc
push
cmp
clc
das
xchg
insl
scas
xor
add
clc
hlt
pushf
fwait
pop
jae
add
clc
pop
out
push
fldl
clc
in
popf
aas
scas
out
adc
add
add
int
clc
hlt
push
add
aam
clc
fwait
imul
int3
add
add
clc
movsl
clc
sti
pop
jbe
sar
clc
push
add
sbb
clc
mov
add
leave
js
mov
add
xor
add
clc
mov
inc
clc
sbb
clc
inc
add
xchg
xor
add
stos
mov
cmp
aam
clc
in
mov
leave
pop
jb
add
adc
add
gs
xbegin
sub
sub
clc
mov
add
xchg
test
dec
je
popl
clc
inc
clc
int3
sarb
mov
clc
push
xor
add
clc
bound
add
frndint
aaa
mov
aas
add
add
push
clc
into
lahf
int3
mov
clc
and
add
je
lahf
mov
clc
dec
add
add
pop
inc
add
xchg
sti
mov
dec
sub
mov
inc
clc
pop
sar
roll
jns
leave
push
pop
stc
push
push
add
jbe
clc
icebp
xor
movsb
clc
jne
dec
sub
imul
sub
add
pusha
add
movsl
clc
rclb
clc
cmp
push
add
repz
add
cltd
push
add
fisubrl
add
test
adc
add
stc
cmp
js
clc
mov
adc
add
add
sar
clc
mov
mov
add
pop
clc
sar
mov
xbegin
clc
in
mov
mov
mov
cmp
inc
clc
jb
add
jb
add
add
push
clc
test
mov
clc
sbb
add
inc
add
insb
xor
clc
xchg
daa
clc
stc
sub
sbb
sbb
clc
in
and
push
roll
add
adc
add
add
jmp
mov
push
add
icebp
adc
clc
or
mov
clc
mov
fldcw
fldt
cmc
xlat
sar
push
inc
add
fcmove
sub
adc
add
clc
mov
fiadds
gs
leave
pop
pop
mov
aad
add
xchg
pop
clc
xchg
fiadds
mov
ljmp
clc
sti
in
or
sar
lret
clc
loop
test
leave
inc
clc
sar
mov
clc
push
add
add
add
cmp
clc
cmp
inc
add
mov
pop
clc
ficompl
sbb
and
add
sar
fldcw
shll
popa
add
add
push
in
cmp
sub
clc
and
add
add
sar
xchg
and
ljmp
pop
pop
jnp
sbb
add
dec
xlat
popf
pop
js
test
cmp
jae
add
aas
cmp
dec
cmp
clc
mov
or
mov
cmpsl
clc
bswap
and
add
test
push
fisubrl
or
clc
fidivrs
leave
int
cld
cmp
clc
push
add
mov
add
loope
or
mov
clc
push
add
adc
xchg
jno
add
sub
xlat
popf
out
out
cmp
je
add
mov
lcall
lea
add
push
add
js
add
sbb
in
movsl
clc
lods
jnp
stos
cmp
clc
mov
add
lret
mov
clc
insl
lods
fisttps
pusha
add
sbb
add
cmp
clc
scas
push
push
pop
or
clc
fisubl
sbb
sub
outsl
aad
mov
clc
jo
add
lods
mov
cmpsl
clc
add
cs
cmp
add
fmull
js
dec
push
clc
inc
clc
aaa
mov
add
dec
push
inc
add
push
movsl
clc
call
add
mov
fiaddl
add
sbb
lods
repz
out
das
pop
jae
add
add
movsl
clc
clc
aaa
mov
sbb
sub
jp
bound
add
outsb
scas
cld
adc
add
add
add
scas
push
or
add
and
add
add
lods
mov
add
movsb
clc
clc
jae
add
pop
clc
mov
xor
add
leave
inc
clc
mov
cmp
outsl
jmp
fidivs
add
aaa
jae
add
mov
clc
xchg
and
add
add
mov
cmp
jo,pt
add
into
fistl
repz
cs
and
xchg
mov
jae
add
pusha
add
fimuls
sbb
xchg
sbb
out
ret
cli
pop
cmp
jg
loopne
jne
sar
or
add
push
gs
ss
lret
mov
add
mov
ds
push
xor
add
clc
jle
bound
add
add
pop
cmp
lret
xor
add
ret
add
cmp
or
test
clc
add
lcall
into
add
clc
push
inc
add
mov
xor
add
add
test
jnp
add
xchg
mov
lret
clc
loope
pop
mov
add
and
add
mov
sub
xchg
dec
and
add
cmpsl
clc
cmpsb
clc
and
add
and
add
jecxz
dec
cmp
mov
sbb
pop
loopne
mov
jp
add
popf
lret
pop
push
add
sahf
mov
mov
add
insl
out
jno
add
imul
into
cmp
jge
mov
lock
clc
cmp
pop
lea
es
fwait
push
ds
sarb
sbb
popf
dec
fcmovbe
aaa
dec
clc
push
add
cmpsl
clc
push
es
push
aaa
outsl
mov
sbb
repz
clc
add
add
or
clc
imul
cmp
std
xchg
jae
add
idiv
test
xchg
clc
repz
clc
and
add
add
dec
addr16
icebp
imul
clc
push
add
cmp
mov
arpl
add
add
dec
push
add
testl
ret
inc
add
aas
jp
clc
adc
add
clc
sar
cmp
jmp
lock
or
movsb
clc
add
shll
clc
pop
hlt
hlt
jle
add
add
push
add
sbb
clc
test
sbb
add
cmc
nop
or
cmp
push
add
add
cmp
clc
aam
lock
clc
pop
lret
jne
fldz
jle
cltd
mov
clc
or
clc
daa
clc
and
sar
add
sub
clc
jns
mov
inc
clc
sbb
jmp
adc
add
sbb
add
and
add
xchg
xor
add
add
inc
add
hlt
xor
add
inc
clc
mov
ret
clc
or
divb
add
gs
cmp
pop
imul
add
lock
pop
sub
das
clc
and
mov
mov
clc
cmp
fisttpl
add
pop
jne
test
pop
dec
sar
lock
clc
pop
paddb
jge
clc
cmp
add
jb
add
clc
lahf
or
clc
add
add
pop
ds
fcoml
add
mov
add
add
clc
bound
add
clc
mov
cwtl
xchg
adc
add
add
loope
push
add
js
cmpsl
clc
sbb
add
pushf
adc
clc
int3
and
add
mov
mov
clc
pop
test
or
pop
pop
xchg
cmp
dec
mov
cmp
clc
fdivl
mov
test
clc
ret
clc
cmp
lods
push
clc
xor
clc
mov
xchg
cmp
clc
insl
xabort
pop
push
add
push
pop
int3
cmp
sbb
add
sbb
clc
and
add
ljmp
inc
clc
ss
jnp
loop
mov
xchg
cmp
xchg
mov
clc
push
or
sahf
dec
jg
dec
inc
add
popa
add
daa
clc
sar
adc
add
jg
data16
repnz
clc
and
add
dec
aas
push
add
push
dec
push
clc
add
add
add
add
adc
add
xchg
lods
out
pop
cmpsl
clc
aaa
cld
and
push
and
add
test
cmpsl
clc
pop
clc
inc
add
frstor
add
daa
clc
xchg
mov
and
add
add
add
add
xor
cmpsl
clc
xor
add
clc
cmp
inc
clc
push
cltd
jle
mov
add
jbe
add
clc
pusha
add
loop
sub
mov
cmp
add
pushf
ss
test
add
add
in
xbegin
add
mov
dec
pop
arpl
add
mov
fs
jo
add
sbb
jae
add
cmp
outsl
lock
test
cwtl
and
clc
shll
add
push
cmp
add
leave
add
mov
push
add
add
add
addr16
gs
push
leave
or
clc
add
cld
ds
xchg
cwtl
mov
add
test
in
scas
xor
add
clc
cmp
test
sub
test
clc
fisubrs
xchg
das
daa
clc
and
add
inc
clc
push
ds
add
outsb
ret
clc
pop
stos
shrb
clc
push
sbb
add
inc
add
pop
iret
jg
ss
pop
inc
add
push
add
xchg
cltd
in
popa
add
adc
add
add
pop
or
add
jecxz
mov
jb
add
dec
ror
dec
in
sahf
push
clc
xabort
jmp
and
pusha
add
pushf
xchg
clc
int3
mov
clc
inc
clc
cmpsl
clc
fmull
mov
push
add
ljmp
push
cmp
cmpsl
clc
pop
xchg
or
movsb
clc
movsl
clc
dec
adc
add
cmp
ss
mov
add
shlb
add
add
clc
scas
repnz
jp
xchg
mov
scas
xor
add
add
clc
pop
dec
testl
clc
cmp
add
mov
add
jmp
xor
add
sub
dec
add
add
xor
add
inc
add
adc
add
mov
mov
add
fimuls
fwait
mov
and
add
sar
inc
clc
push
pop
fnstenv
add
movsl
clc
pop
push
out
xchg
cmp
stos
jae
add
jne
fbld
clc
jecxz
lea
xchg
adc
add
adc
add
push
testl
lcall
cmp
add
push
add
cmpsl
clc
scas
test
push
xor
add
add
add
arpl
add
stos
sbb
or
jmp
scas
js
ja
sbb
xchg
inc
clc
dec
lock
add
clc
bound
add
xbegin
movsb
clc
pop
jp
jo
add
cmp
jb
add
or
add
pop
or
clc
and
mov
sbb
clc
cmp
lret
lea
add
push
ret
fists
call
test
or
aad
fsubrs
pop
adc
cmp
pop
clc
xor
add
insl
notl
add
cmp
lock
clc
jp
jg
clc
sub
cmp
sti
pop
clc
jns
dec
shl
addr16
push
xchg
pusha
add
adc
add
lahf
adc
add
xchg
sti
in
dec
test
sbb
clc
inc
clc
dec
xlat
addr16
and
add
push
clc
shll
add
lock
ret
clc
push
in
xor
add
clc
icebp
jmp
mov
add
inc
add
sbb
sbb
call
add
aas
mov
mov
add
and
add
lock
clc
pop
cld
mov
xchg
aad
inc
add
push
add
inc
add
push
add
lock
clc
in
add
jl
aas
add
add
pop
bound
add
add
adc
add
mov
add
icebp
and
add
clc
addr16
pusha
add
inc
add
cmp
bound
add
clc
sub
add
adc
add
insl
or
clc
mov
push
add
cmp
add
inc
add
jbe
pushl
add
stos
mov
mov
sbb
cmp
xabort
clc
imul
sbb
xchg
push
inc
clc
loope
dec
js
xor
clc
xchg
mov
je
daa
clc
addr16
dec
lcall
aam
clc
and
add
shlb
clc
pop
push
add
pop
rorb
mov
out
push
add
cld
mov
add
test
in
cmp
add
add
ret
clc
adc
add
add
sar
add
jno
add
push
lret
add
je
insb
jne
add
es
sub
add
int
push
adc
add
sbb
jp
clc
xchg
movsl
clc
or
sub
mov
mov
scas
scas
into
cmp
cmp
fcomip
sbb
sub
popa
add
jp
push
add
cmp
add
add
rorl
add
pop
clc
cmpsl
clc
push
add
xlat
into
aad
leave
movsl
clc
jmp
add
clc
mov
mov
clc
inc
add
push
clc
call
leave
leave
pop
enter
mov
xchg
mov
sbb
add
sar
clc
lock
add
sub
push
xor
add
xbegin
clc
lock
cltd
lahf
pushf
jne
xor
clc
push
push
add
or
adc
add
shll
ja
fisttps
outsb
add
jns
clc
fwait
cli
jo
add
push
clc
lock
mov
add
mov
add
xor
add
adc
clc
sti
or
add
aad
add
jb
add
add
add
mov
lock
pop
xchg
mov
popl
add
clc
and
add
in
inc
add
lret
es
fs
ja
push
mov
shl
clc
jae
add
add
add
out
cmp
popa
add
or
clc
sub
mov
lret
daa
clc
into
xor
add
clc
push
clc
repnz
add
jmp
clc
mov
add
xchg
sub
mov
add
xchg
push
add
mov
add
clc
js
add
and
add
mov
add
jl
push
outsl
stc
popf
out
aaa
lret
xchg
gs
inc
add
xchg
xabort
mov
clc
pop
insl
gs
sub
jb
add
jne
mov
clc
dec
mov
cmp
push
add
stos
mov
xbegin
adc
add
and
add
xor
cmp
aad
clc
lret
mov
icebp
das
jno
add
clc
mov
aas
jmp
out
mov
cmp
add
fwait
cld
push
je
sbb
clc
cld
pop
jp
aad
data16
dec
sbb
mov
cmp
mov
add
adc
add
jecxz
add
add
xchg
sbb
and
add
arpl
add
clc
xchg
leave
inc
add
sub
mov
dec
lock
mov
mov
in
aad
pop
hlt
push
add
add
add
xchg
jo
add
dec
leave
sbb
add
inc
clc
loope
jne
testl
add
test
push
xor
add
cmp
mov
imul
mov
clc
push
or
add
add
add
test
add
jle
inc
add
pop
je
stos
into
jp
ja
scas
adc
add
jbe
jae
add
add
clc
js
clc
stos
fdiv
dec
sar
ja
mov
clc
mov
shl
adc
add
cwtl
jo
add
jle
ds
into
and
add
aas
cwtl
aas
inc
clc
scas
or
clc
push
es
mov
mov
mov
cmp
adc
outsb
adc
add
cli
mov
add
fildll
lret
call
adc
clc
das
je
pop
xor
add
inc
add
std
adc
add
add
stos
xbegin
xor
add
popl
clc
test
shl
xabort
popa
add
test
dec
scas
enter
push
hlt
imul
add
clc
ror
push
add
test
fidivs
add
mov
mov
sub
clc
movsb
clc
jae
add
add
adc
add
mov
sbb
xor
add
clc
sbb
xor
clc
mov
fs
jp
pop
inc
clc
and
add
add
add
clc
or
decl
clc
out
aad
xor
test
dec
int
bnd
add
add
clc
cmp
pop
and
add
mov
clc
and
add
inc
clc
mov
add
add
pop
clc
mov
add
mov
clc
stos
xchg
push
fwait
push
sbb
hlt
add
clc
out
fsubrl
popf
and
pop
sub
add
cwtl
inc
add
and
add
add
mov
jo
add
add
sar
clc
sub
clc
adc
add
sbb
xchg
jp
inc
add
and
add
aas
dec
aaa
ret
adc
mov
mulb
add
push
pop
js
clc
push
clc
std
scas
shlb
mov
and
add
mov
push
add
psubsb
add
mov
stos
push
pop
xlat
lahf
nop
push
xbegin
add
add
add
lahf
out
cmp
es
cmp
or
clc
or
jecxz
pop
fs
pop
test
xchg
popf
in
movsl
clc
mov
cmp
and
add
push
xlat
notl
add
pop
lea
sbb
add
add
loop
mov
clc
push
icebp
fdivs
add
dec
test
xabort
push
in
mov
add
add
sar
clc
mov
add
or
loopne
jnp
cmp
incl
add
mov
add
clc
sti
jle
mov
add
test
fwait
arpl
add
push
mov
clc
fs
aas
xchg
add
pop
mov
push
add
mov
lcall
sbb
add
sti
cmp
and
add
std
pop
outsb
inc
add
pop
push
add
mov
xbegin
add
xlat
cs
add
mov
fdivrl
inc
add
sub
repz
iret
cli
dec
movsb
clc
fldt
ret
clc
or
add
cmp
pop
clc
aam
js
clc
in
cmp
add
cs
push
clc
ret
clc
pop
lea
dec
push
je
int3
push
cmp
and
add
ret
xchg
xchg
mov
push
add
test
loopne
jne
push
sub
add
inc
add
xor
hlt
in
data16
pop
iret
sbb
or
add
fs
ret
clc
cmp
clc
fnstsw
add
js
add
add
add
rorl
cli
mov
add
mov
stos
loope
or
add
inc
clc
adc
mov
clc
fiadds
add
or
cmp
pusha
add
dec
or
or
clc
scas
out
jmp
clc
sub
push
add
xor
add
divl
jno
add
clc
daa
clc
mov
lods
or
add
or
inc
add
das
je
xchg
add
add
clc
mov
clc
in
jge
nop
lods
leave
sbb
mov
add
je
jne
clc
sub
add
add
clc
inc
clc
jmp
clc
cld
fcoms
jp
add
add
test
mov
cmp
clc
mov
lret
jmp
cmc
pop
mov
jbe
clc
sub
clc
or
aam
dec
inc
add
rorb
mov
add
repz
add
add
add
add
cmp
clc
push
add
aas
and
add
cli
push
add
add
push
add
cmp
add
mov
add
dec
add
add
clc
cmpsb
clc
push
add
push
add
cmp
cli
ds
clc
or
movsl
clc
fwait
mov
dec
add
mov
clc
and
add
add
enter
out
add
add
jne
cli
cmpsl
clc
adc
add
pop
mov
add
data16
fidivrl
clc
and
add
add
fdivr
popa
add
adc
add
and
add
jb
add
add
jmp
clc
ret
clc
xor
add
clc
icebp
decl
pop
mov
adc
add
mov
clc
cmp
xchg
insl
out
int3
psllw
add
xchg
adc
add
push
jbe
inc
add
loope
sar
push
add
test
or
inc
clc
xor
mov
add
dec
ja
clc
mov
addr16
sbb
cmp
jne
enter
xchg
mov
aas
cmp
inc
add
faddl
stc
movsb
clc
mov
inc
clc
clc
inc
add
dec
jne
clc
inc
clc
sub
clc
lret
pop
clc
mov
add
add
cmp
dec
sti
outsl
jl
or
add
repnz
add
clc
sub
and
sub
clc
test
sbb
add
cs
clc
cmpsb
clc
inc
add
cmp
fbld
add
aad
add
add
and
add
sar
fldt
push
int3
mov
xbegin
clc
or
pop
clc
pop
jb
add
shrb
clc
ss
mov
push
add
cmp
add
cld
xabort
nop
pop
add
push
add
push
add
fisttps
clc
or
mov
clc
sbb
add
and
add
clc
pop
jmp
dec
fs
add
mov
cmpsl
clc
fldenv
sbb
add
sub
out
xor
add
js
clc
lcall
cmp
clc
adc
add
clc
sub
and
and
cmp
stos
fstps
clc
mov
add
jecxz
jl
test
add
xor
add
adc
add
data16
or
clc
mov
xor
add
or
clc
inc
add
mov
clc
inc
clc
scas
jecxz
jge
clc
lea
cmpsb
clc
add
add
loop
fdiv
ret
clc
sub
je
clc
push
add
add
imul
mov
lcall
imul
vminps
add
cld
sar
outsl
cmpsl
clc
in
or
clc
scas
aas
cmc
add
sbb
dec
mulb
add
xor
loopne
mov
or
or
dec
mov
or
add
fsubs
fiaddl
add
dec
shlb
add
clc
sub
clc
mov
clc
mov
scas
push
add
push
rcrb
jnp
mov
xchg
cmp
clc
loopne
cmpsb
clc
jns
lods
or
pop
pop
and
add
clc
mov
add
jno
add
clc
nop
lods
loopne
aam
push
fidivrl
fimuls
inc
add
sti
mov
cltd
xchg
cmp
add
mov
add
cmp
add
xchg
imul
cmp
add
adc
add
clc
xor
or
jg
inc
add
aaa
fildl
mov
xchg
imul
or
add
shrl
jg
mov
test
add
cmp
lret
and
push
ficompl
data16
or
cmp
add
sub
cmpsb
clc
add
clc
mov
add
xchg
push
add
lods
push
add
pop
pop
clc
into
icebp
cmpsl
clc
dec
cwtl
cs
push
xor
and
add
in
std
cmp
add
stos
in
xabort
add
sbb
sbb
es
mov
or
sbb
sbb
pusha
add
dec
dec
or
cltd
shrl
add
js
test
adc
add
test
pop
mov
and
add
add
popl
add
enter
adc
sbb
inc
clc
leave
sub
add
add
mov
imul
clc
lahf
fstps
cmp
in
cmp
clc
adc
add
popl
mov
clc
imul
clc
or
mov
dec
xchg
pop
clc
jns
rcr
jp
lahf
jg
clc
push
fisubrl
cmpsl
clc
adc
add
fists
add
sbb
dec
fwait
test
iret
pushf
in
adc
add
add
in
jg
clc
jl
add
or
loopne
in
push
dec
divl
add
lret
mov
add
add
add
mov
fldl
add
or
add
add
add
sbb
xor
add
pop
stos
or
dec
icebp
inc
add
mov
cmpsl
clc
mov
add
and
add
adc
add
cli
adc
add
clc
jbe
jns
clc
insl
pop
or
add
add
dec
jp
add
out
ret
push
stc
xabort
clc
mov
xchg
aaa
shr
inc
add
mov
cmpsb
clc
mov
xor
add
pop
xchg
jns
xchg
cmp
add
ja
xchg
stc
loop
add
add
inc
add
lcall
dec
jmp
jnp
clc
sbb
sub
out
sub
int3
mov
fldl
clc
cmp
clc
mul
clc
and
add
clc
dec
clc
imul
mov
push
fcom
bound
add
sbb
clc
aaa
fs
nop
add
cmp
add
add
add
adc
add
hlt
sub
xor
add
mov
clc
into
inc
add
icebp
scas
ret
add
ja
mov
clc
push
mov
or
add
push
test
jmp
add
ret
loope
sarl
add
pusha
add
cmp
adc
add
cmp
push
add
mov
and
add
add
pop
and
add
loop
outsl
hlt
xor
add
dec
add
add
add
add
movsl
clc
sub
or
add
js
clc
scas
push
add
sbb
pop
mov
xor
add
add
das
and
add
ds
in
cmp
scas
icebp
repz
clc
jae
add
push
test
add
sbb
cwtl
add
add
sbb
cmp
mov
add
add
mov
mull
add
ret
lret
or
clc
outsl
adc
add
in
mov
es
lret
dec
sbb
insl
push
and
cwtl
adc
add
fimull
dec
jmp
movsl
clc
xchg
dec
mov
add
push
or
add
jns
and
add
ja
cmp
ds
add
das
cmp
add
inc
add
pop
xchg
sbb
add
clc
cmp
add
inc
clc
pop
sub
clc
mov
clc
adc
add
push
add
lcall
loop
movsl
clc
pop
pop
fstps
xchg
arpl
add
arpl
add
add
je
clc
mov
add
jg
inc
add
xchg
ds
gs
imul
cmpsl
clc
push
dec
xchg
sub
clc
or
add
add
mov
movsb
clc
jne
jnp
clc
aaa
test
mov
fisubl
dec
xor
sbb
add
add
add
data16
popa
add
pop
clc
loope
outsb
sbb
adc
cmp
clc
icebp
xor
add
add
and
push
add
lods
pop
and
add
add
xor
xabort
inc
clc
mov
icebp
push
add
mov
clc
inc
clc
jmp
or
clc
cmp
add
cmp
mov
clc
pop
dec
mov
int
fucomp
xor
add
push
adc
add
add
aaa
xlat
test
add
test
popf
test
sar
imul
push
jmp
mov
add
or
adc
add
clc
xor
add
clc
mov
mov
sub
mov
xchg
push
clc
pop
cmp
clc
pop
aam
clc
xchg
pop
and
add
mov
add
sub
push
add
sar
clc
daa
clc
push
lods
das
outsb
movsb
clc
push
inc
add
sti
js
sub
inc
add
add
add
add
test
add
cmp
in
mov
and
clc
loope
and
add
add
fiadds
add
imul
add
imul
clc
movsb
clc
push
and
clc
cmp
push
clc
mov
add
clc
mov
add
clc
stos
dec
sbb
mov
push
hlt
ds
clc
mov
add
sub
add
add
adc
add
cs
or
cmp
pop
adc
add
add
push
add
jno
add
add
push
add
clts
clc
test
xbegin
pop
push
aas
ror
xchg
nop
pop
cmp
jae
add
mov
arpl
add
add
mov
cmp
add
loopne
mov
clc
in
push
add
sub
clc
and
add
push
daa
clc
scas
mov
sbb
imul
outsb
sbb
mov
add
push
stc
sbb
xor
add
fiaddl
clc
cmp
add
xor
add
jmp
and
add
and
add
cwtl
into
pop
push
add
pop
fsubrp
icebp
jl
dec
je
clc
divl
add
es
jno
add
test
and
add
sbb
lahf
lock
adc
mov
rcl
lods
add
add
add
leave
adc
sar
outsb
mov
add
and
add
clc
fldt
pop
fisubrs
es
mov
add
add
icebp
push
add
fbstp
imul
add
cli
dec
fwait
push
fldl
je
add
ret
clc
inc
add
lods
xor
add
popa
add
lcall
mov
add
sbb
cmp
clc
dec
cs
jg
xchg
clc
pushf
jae
add
xor
or
clc
ljmp
clc
js
jl
and
xor
add
add
add
ds
clc
gs
fs
sbb
add
and
add
clc
and
add
sub
mov
clc
sbb
clc
xchg
jmp
xchg
inc
add
repz
add
enter
clc
cmp
mov
cmp
dec
push
daa
clc
rcr
imul
add
add
insl
out
jmp
mov
repnz
pop
adc
add
data16
cmp
or
clc
sub
imul
add
clc
jae
add
ror
jge
push
add
inc
clc
test
sar
daa
clc
clc
jmp
push
lahf
lahf
insb
mov
clc
push
cmp
pop
out
push
fcmovb
clc
mov
add
jg
mov
add
push
clc
add
lcall
fdivr
sarb
scas
or
popf
pop
clc
arpl
add
add
pop
sub
clc
insb
cwtl
cmp
clc
or
add
clc
dec
imul
add
testl
add
add
mov
add
stc
mov
shrb
mov
push
add
xor
add
jl
clc
cli
int3
xor
add
cmp
in
cltd
and
add
clc
mov
add
mov
jne
mov
add
jbe
sbb
out
push
add
test
imul
xchg
lcall
clc
leave
cs
mov
ret
clc
push
and
add
mov
add
pusha
add
or
fldl
add
add
das
or
jbe
clc
in
out
hlt
sti
ljmp
jge
adc
cwtl
xor
add
cmp
pop
jle
in
je
clc
sbb
pop
pusha
add
xlat
cmpsb
clc
push
push
pop
jle
mov
add
jle
xor
add
add
add
add
add
mov
add
add
clc
add
add
fsubrs
std
push
add
mov
in
push
clc
aaa
cmp
clc
jb
add
sar
clc
pop
aad
mov
xchg
iret
xor
and
cmpsl
clc
mov
inc
add
ss
push
push
mov
std
sahf
in
js
add
cmc
pusha
add
jno
add
clc
dec
sbb
clc
shrl
pop
fs
incb
cmp
out
pushf
mov
mov
clc
cmp
add
enter
push
lcall
clc
leave
or
mov
ret
clc
mov
jg
push
add
inc
clc
mov
add
fidivs
inc
add
aaa
push
jne
xchg
jns
pop
clc
es
mov
add
xchg
leave
pop
into
jmp
clc
mov
clc
jp
sub
clc
push
std
sbb
add
push
push
add
clc
sub
cli
cmp
add
icebp
out
ret
clc
bound
add
dec
addr16
jl
jmp
pop
dec
test
pop
or
inc
clc
add
xchg
mov
imul
clc
data16
shl
clc
jno
add
stos
inc
add
clc
dec
push
clc
aad
in
test
clc
or
add
clc
call
std
adc
add
clc
fidivrl
gs
test
jnp
cmp
clc
add
add
clc
pop
add
pop
iret
inc
add
sar
pop
je
in
lcall
push
clc
add
add
add
sbb
xchg
cmp
clc
filds
add
pop
icebp
cmc
out
ret
clc
inc
clc
test
in
mov
sar
add
or
clc
lock
js
cs
iret
dec
decb
dec
mov
jo
add
fcoms
adc
add
clc
in
push
pusha
add
test
clc
sahf
pop
push
or
lret
clc
mov
clc
add
add
dec
sbb
and
add
add
loop
add
add
add
xor
add
clc
fsubrl
imul
add
popf
das
mov
negl
clc
movsl
clc
add
lret
sbb
bound
add
add
dec
cmp
jbe
clc
das
mov
jne
xchg
aad
jne
mov
in
scas
jle
add
test
out
addr16
inc
add
aas
push
clc
push
push
xchg
jmp
inc
add
push
sub
push
leave
inc
clc
insb
pop
add
cmp
add
dec
jecxz
sbb
xchg
lret
add
add
jne
insl
loope
push
das
sub
add
jle
mov
or
add
dec
jp
add
add
stc
pop
pop
and
arpl
add
add
mov
js
clc
test
cmpsb
clc
in
xor
add
incl
add
dec
jae
add
lret
mov
int3
arpl
add
jno
add
movsb
clc
adc
add
add
add
movsl
clc
js
clc
pop
rorl
cmp
lahf
lock
pop
push
push
push
add
pop
jne
clc
in
and
add
clc
push
clc
mov
in
push
add
movsb
clc
outsb
sub
mov
clc
aad
clc
loopne
cmp
add
and
mov
adc
add
xchg
aad
cmp
add
daa
clc
cmpsl
clc
inc
add
push
mov
push
lcall
jle
out
popa
add
daa
clc
mov
xabort
ss
stos
out
fldpi
fcmovb
clc
and
add
add
clc
out
out
mov
mov
add
cmp
mov
clc
std
cmp
push
sub
cmpsb
clc
in
and
add
add
cltd
mov
add
into
aas
inc
add
imul
clc
xchg
sti
nop
lcall
in
test
aas
movsl
clc
out
stc
xor
add
xor
add
add
add
sbb
push
in
jo
add
dec
xchg
mov
push
xor
add
adc
add
clc
xbegin
test
jns
push
clc
inc
add
xlat
sub
clc
fwait
int
jmp
jle
jns
xlat
mov
cmp
clc
push
add
xchg
je
add
add
clc
inc
add
lods
pop
inc
add
inc
clc
mov
fcomps
clc
es
sub
clc
outsl
call
clc
dec
ss
clc
pop
push
add
pop
xor
add
out
fidivl
add
aas
mov
pop
cmp
clc
pop
fildll
xor
clc
out
push
mov
cmp
dec
int3
cmp
cmp
mov
and
add
add
add
enter
clc
cmp
int
movsl
clc
test
js
jno
add
add
sub
or
add
and
mov
adc
add
add
add
add
js
clc
arpl
add
add
mov
mov
mov
clc
lcall
add
scas
popa
add
es
mov
add
clc
mov
pop
aas
sbb
cli
cmp
inc
clc
fs
jp
js
scas
adc
add
cmp
add
fisubl
sub
outsb
mov
insl
mov
daa
clc
adc
add
or
clc
mov
add
sub
add
cmp
or
dec
jbe
add
cs
mov
clc
test
aas
push
add
movsl
clc
mov
mov
mov
imul
clc
ljmp
xchg
pop
xor
inc
clc
mov
loope
cmp
dec
nop
lcall
jecxz
neg
cltd
inc
clc
fcoms
clc
push
imul
add
mov
add
mov
push
clc
mov
clc
repnz
mov
mov
add
jo
add
add
sub
lcall
clc
and
push
cmp
pop
add
add
mov
jo
add
adc
test
add
jb
add
push
add
test
clc
push
push
mov
xlat
mov
push
add
ljmp
das
pop
rcrl
adc
cmp
cli
xor
add
add
add
mov
mov
mov
clc
dec
out
test
xor
add
daa
clc
mov
add
add
add
sub
add
clc
scas
int
cld
push
add
mov
clc
cmpsb
clc
aad
add
add
cmp
out
xbegin
cmc
mov
and
jg
xchg
mov
clc
jnp
add
xlat
ret
clc
mov
adc
adc
add
add
cmp
add
jmp
pop
clc
in
jbe
clc
mov
daa
clc
xchg
bound
add
push
clc
out
or
out
push
add
mov
in
mov
jmp
add
add
imul
add
ret
clc
ret
clc
push
add
lock
add
clc
fmuls
add
jno
add
adc
add
iret
insb
dec
xbegin
clc
inc
add
cmp
lret
popf
sbb
add
dec
sbb
inc
add
popa
add
pushf
fcmovne
mov
pop
push
mov
clc
ss
fwait
dec
loope
xchg
cmc
cmc
adc
add
clc
sub
add
inc
clc
pop
xlat
cmp
pop
js
clc
punpckldq
add
insl
mov
aaa
stc
push
add
dec
inc
clc
xbegin
movsb
clc
das
movsb
clc
xchg
addr16
movsl
clc
fiaddl
add
lcall
inc
add
loopne
int
push
add
hlt
mov
add
clc
cmc
cmc
or
jmp
popf
out
das
mov
clc
sarb
clc
xlat
lret
test
clc
cmp
add
add
add
clc
adc
sub
add
divb
add
xlat
push
add
sub
jb
add
clc
cmp
fs
xor
add
data16
sub
add
jb
add
add
sbb
add
add
add
xbegin
scas
add
add
clc
je
clc
daa
clc
mov
imull
icebp
adc
push
add
sbb
add
jmp
add
adc
add
clc
inc
clc
clc
hlt
mov
hlt
outsl
cmp
push
dec
fiaddl
jns
insl
lahf
call
adc
add
ja
into
repz
cmp
clc
pop
js
inc
add
lods
imul
mov
clc
mov
loope
push
dec
leave
push
add
push
push
clc
add
add
pusha
add
cwtl
dec
loope
jae
add
add
sub
clc
repz
sahf
repnz
add
pop
mov
dec
add
add
add
outsl
sbb
push
add
or
add
dec
xchg
shlb
clc
mov
loope
shrl
cmp
call
cli
xchg
rolb
add
clc
xchg
movsl
clc
mov
mov
adc
add
add
add
push
clc
es
notl
xchg
ret
clc
jp
push
adc
add
add
lods
xor
add
add
dec
cmc
and
add
add
pop
clc
sub
jo
add
lahf
cmp
push
add
fidivrs
jp
cmp
stos
sar
add
or
outsl
loope
jnp
add
push
clc
icebp
popf
cmp
jmp
add
lret
into
cmp
clc
repnz
cmp
std
mov
add
adc
add
add
add
add
jl
add
xor
ljmp
inc
add
push
xchg
push
cmpsl
clc
adc
add
dec
mov
pop
sti
outsb
cltd
stos
ljmp
lret
jne
clc
jo
add
add
add
icebp
push
adc
add
add
mov
clc
hlt
cwtl
inc
add
add
add
add
push
add
cmpsl
clc
dec
stc
dec
ja
add
push
loope
add
add
add
add
add
push
out
insl
or
add
dec
incl
and
add
aaa
or
mov
sarb
sbb
out
aam
sub
pop
pop
test
aam
clc
iret
es
and
add
push
cmp
push
push
add
jb
add
cmp
clc
adc
add
pop
stos
push
outsl
sbb
mov
mov
data16
jnp
add
icebp
mov
ficoms
sbb
cmp
arpl
add
add
ret
clc
mov
and
add
stos
jne
mov
stos
push
nop
nop
jno
add
clc
pop
mov
add
add
add
int3
leave
push
clc
xlat
jecxz,pn
rorl
add
add
add
xor
add
mov
inc
add
mov
xor
add
clc
push
inc
clc
or
out
mov
add
ret
clc
sub
clc
cmp
rep
mov
pushf
add
add
sti
cli
jo
add
pop
clc
xchg
ljmp
mov
add
dec
movsb
clc
mov
clc
negb
xor
data16
nop
lock
pop
bound
add
dec
cli
js
mov
sti
mov
push
add
push
push
add
xor
add
mov
xchg
jg
clc
inc
add
mov
clc
lods
mov
inc
clc
jbe
mov
repz
add
adc
add
clc
shl
clc
fs
mov
lret
xchg
mov
push
sub
add
push
jmp
add
fists
add
sahf
mov
jnp
dec
jecxz
adc
das
add
jb
add
xor
add
add
cmp
sbb
xchg
add
add
inc
add
xor
add
clc
mov
mov
mov
test
clc
xchg
sub
pop
popf
mov
out
cmp
cmpsl
clc
icebp
dec
sub
cmp
add
xor
add
add
test
xor
add
clc
fldcw
clc
fnstcw
testb
add
push
lock
push
call
sbb
pop
clc
pop
or
clc
and
nop
push
cmp
clc
pop
inc
add
sub
aad
jo
add
inc
clc
push
sbb
pop
mov
clc
ficompl
clc
mov
add
pop
sub
xor
add
clc
cmp
clc
lret
xchg
sub
add
add
inc
clc
inc
add
aas
scas
daa
clc
xor
add
add
add
in
xbegin
pop
clc
push
addr16
or
mov
or
or
gs
and
add
push
pop
xor
add
add
jecxz
jecxz
movntq
out
mov
out
pusha
add
movsb
clc
mov
adc
add
adc
add
dec
imul
and
add
or
add
addr16
pop
inc
clc
in
dec
jp
xbegin
clc
xabort
push
clc
ss
punpckhdq
sarl
dec
in
div
fsub
clc
hlt
cmp
pusha
add
dec
jmp
push
add
mov
imul
mov
sub
add
push
add
jl
add
aam
clc
pop
pop
add
add
add
xchg
or
shr
mov
add
dec
mov
inc
clc
aaa
loope
adc
nop
dec
or
and
test
dec
inc
add
push
pop
sbb
jmp
adc
dec
and
add
clc
cmpsb
clc
call
add
lcall
fiadds
mov
cmpsb
clc
dec
fdiv
xabort
clc
add
add
leave
mov
fsts
ret
clc
or
aam
clc
lahf
pushf
jle
cmpsb
clc
outsl
push
add
push
xor
loopne
leave
mov
aaa
aas
cwtl
dec
adc
add
stc
mov
std
in
or
add
mov
add
add
and
add
add
bound
add
adc
clc
es
movsb
clc
pop
movsl
clc
pop
clc
loopne
out
lods
daa
clc
cwtl
xbegin
sbb
sbb
loopne
sbb
xchg
ljmp
mov
add
cmp
daa
clc
bswap
jb
add
add
clc
fcmove
in
pop
sbb
add
jae
add
sub
push
add
stc
and
add
clc
dec
out
xor
add
adc
add
or
int3
inc
add
insl
cmp
or
add
and
add
data16
mov
and
clc
sbb
add
ret
clc
or
add
add
sub
iret
iret
sar
clc
lahf
push
add
inc
add
inc
clc
sub
shrb
cmpsl
clc
out
add
adc
add
add
sti
pushl
std
inc
add
dec
or
add
out
es
call
pushf
inc
add
pop
clc
xchg
xbegin
aam
shll
scas
stc
js
clc
lods
push
xor
add
push
jmp
scas
addr16
ss
add
gs
loope
lock
add
add
jecxz
cmp
clc
cmpsb
clc
jp
xchg
or
clc
js
sub
pop
sub
clc
xchg
stos
add
add
inc
add
jecxz
sub
lret
jecxz
pusha
add
in
lock
lahf
pop
jg
clc
call
pop
cmp
mov
mov
mov
cwtl
xor
add
in
mov
rcll
add
add
clc
dec
mov
xor
add
add
repz
stos
jbe
or
inc
add
iret
pop
cmp
xor
add
cmp
aaa
pop
dec
adc
add
push
cwtl
inc
add
addr16
dec
mov
in
outsl
aam
mov
iret
dec
push
ja
add
or
add
clc
or
add
jecxz
test
scas
pop
clc
in
clc
cmp
add
shl
pop
jns
clc
cmp
add
test
clc
cmp
fwait
adc
add
out
mov
sub
xor
clc
add
cmpsb
clc
cmp
loop
xor
sbb
xchg
sbb
sbb
in
fdivrl
mov
pusha
add
jo
add
inc
clc
xchg
push
clc
sub
add
aas
and
xchg
or
push
xor
add
add
repnz
loopne
xor
add
clc
mov
test
or
pop
push
pusha
add
pop
in
lock
dec
or
dec
xor
add
movsl
clc
adc
add
add
clc
pushf
push
mov
push
aaa
mov
clc
lcall
movsl
clc
ds
test
lea
clc
lahf
mov
insb
dec
xchg
mov
shrb
xor
add
clc
ds
xchg
repz
jbe
add
mov
xchg
jg
and
rcr
bound
add
add
ret
inc
add
pop
dec
sbb
push
xchg
sbb
clc
sub
add
add
inc
add
lock
add
or
call
aas
pop
scas
jae
add
add
mov
enter
add
dec
dec
sbb
clc
adc
add
push
sbb
clc
aam
mov
cwtl
arpl
add
jl
add
add
clc
sub
pop
clc
movsb
clc
cmp
add
mov
add
mov
fsubr
inc
clc
adc
add
add
sar
clc
dec
pop
ja
sub
add
cmp
scas
leave
test
out
sbb
clc
xor
add
dec
incb
jp
jne
sahf
jne
clc
rcr
and
add
mov
clc
scas
jmp
cwtl
repnz
adc
add
data16
stos
inc
add
xchg
popf
or
clc
rol
clc
cwtl
or
push
clc
rol
clc
jo
add
mov
into
mov
mov
clc
lret
out
roll
add
push
inc
clc
dec
aam
cld
sahf
and
xor
add
movsl
clc
rcrl
cmp
add
add
enter
data16
test
clc
mov
push
jp
adc
add
add
add
outsl
adc
lea
push
add
mov
clc
lret
add
add
mov
add
add
pop
cmpsl
clc
adc
add
cmp
xor
repz
add
lods
cmp
sar
clc
xabort
cli
repnz
dec
bound
add
add
dec
push
add
adc
add
cmp
clc
xchg
cmp
clc
leave
hlt
ss
jo
add
aad
clc
std
mov
clc
pop
mov
enter
push
jge
lahf
push
jg
clc
sar
add
lock
repnz
mov
add
mov
pop
stos
inc
clc
js
add
mov
inc
clc
lods
test
sbb
add
cmp
jp
mov
add
call
das
jg
pop
dec
push
add
aam
clc
es
pop
lcall
pop
test
add
out
xor
add
add
add
push
pop
xor
ret
jns
dec
sbb
jmp
add
std
push
std
sbb
add
dec
jmp
clc
ds
mov
pushf
or
mov
aaa
bts
mov
clc
rcrl
imul
add
clc
inc
clc
cmp
add
add
clc
lret
popa
add
or
clc
jb
add
clc
mov
xor
add
add
lahf
and
add
ficompl
inc
clc
mov
jmp
clc
clc
push
clc
fcmovu
dec
dec
push
jbe
clc
push
clc
add
mov
clc
adc
add
dec
or
stc
cmpsb
clc
add
fisttpll
add
imul
add
pop
pop
clc
add
add
stc
lea
xchg
xor
add
in
cmpsl
clc
push
pop
dec
leave
jecxz
inc
add
sub
add
add
cli
pop
cmp
fwait
cld
std
pop
add
add
aas
inc
clc
or
mov
rcrl
lret
insl
pop
clc
or
lahf
and
add
pop
or
cmp
inc
add
sar
sahf
sbb
mov
add
add
mov
shrl
clc
push
add
stos
into
mov
int
ja
push
sub
mov
add
push
jge
pop
in
scas
dec
push
test
or
es
out
or
pop
clc
ja
clc
test
dec
or
sub
jnp
add
sbb
cmp
clc
clc
xchg
and
add
cmp
add
push
push
xor
add
pop
sbb
adc
add
xor
add
jle
clc
or
add
clc
xor
fsts
add
cmp
mov
add
lret
pop
add
add
fmull
jmp
dec
inc
clc
je
test
cmp
aaa
nop
es
dec
out
xchg
daa
clc
push
add
stc
push
add
xchg
ffree
clc
js
out
movsl
clc
sbb
mov
push
add
es
mov
lret
in
pop
clc
cmp
fs
push
mov
add
test
clc
sbb
iret
loop
scas
sar
cmp
add
lret
xchg
add
add
clc
je
clc
xor
fsubs
add
popf
cmp
jl
add
add
repz
add
loop
mov
dec
add
add
cmp
add
int
cmp
xor
clc
pop
jae
add
iret
pop
jg
sbb
fsub
clc
pop
pop
add
inc
add
cmp
add
push
clc
xchg
repnz
clc
ret
adc
clc
mov
jno
add
push
add
pop
aad
add
cld
cwtl
xchg
loop
add
dec
cmp
add
push
add
dec
scas
mulb
out
sti
or
clc
mov
add
enter
inc
clc
daa
clc
mov
ja
add
pop
clc
stos
out
xchg
out
mov
add
dec
lahf
std
xchg
add
add
sbb
or
clc
push
push
sub
clc
cmp
ljmp
add
arpl
add
add
aas
push
clc
adc
add
sub
pop
ret
pop
mov
add
sub
aas
or
popf
sub
clc
inc
add
xchg
inc
clc
cmp
add
vunpcklps
jbe
add
jno
add
clc
inc
add
mov
push
mov
in
in
mov
lea
mov
imul
push
or
add
push
add
leave
cs
push
xor
clc
enter
add
cmc
cmp
clc
sbb
pmulhuw
adc
dec
fwait
xchg
mov
and
add
pop
clc
iret
int3
add
add
clc
aas
jmp
and
add
add
call
adc
add
lret
shrb
or
add
mov
mov
clc
xabort
in
xchg
lret
mov
adc
add
add
data16
test
xor
add
xor
add
add
mov
dec
jg
add
inc
add
cmpsb
clc
or
cs
clc
mov
int3
cmp
xlat
jmp
add
push
add
test
stos
aas
cmp
nop
int3
xor
xchg
test
or
xchg
popa
add
test
or
notb
clc
dec
add
cmp
add
daa
clc
and
mov
add
gs
xor
add
inc
clc
cmp
addr16
mov
adc
jo
add
inc
add
adc
add
cmp
add
jb
add
mov
add
or
add
loopne
adc
cmc
test
decb
add
push
clc
dec
cmp
add
test
xbegin
test
bound
add
cli
nop
mov
mov
mov
mov
mov
add
mov
add
ja
add
decl
and
add
clc
aas
sbb
test
or
or
xchg
dec
notb
sbb
clc
clc
rdtsc
add
adc
mov
push
add
fprem1
jo
add
mov
xor
add
add
xabort
clc
and
popf
and
popa
add
lock
clc
lods
xchg
aam
clc
je
clc
push
jle
repnz
ror
fisubs
mov
xor
add
push
add
push
out
sub
xchg
or
inc
add
xchg
fsubs
add
sub
clc
cmp
add
add
sbb
mov
clc
sub
add
pop
push
add
fisubs
add
mov
cmp
clc
or
cmp
add
cmp
clc
push
push
add
sbb
push
add
fadds
or
add
add
clc
fisubrl
cmp
add
sbb
xchg
das
pusha
add
sti
jp
clc
dec
popa
add
mov
add
add
and
sahf
mov
clc
jno
add
fdivrl
stos
popa
add
cmp
add
mov
add
mov
aaa
xchg
push
add
push
add
out
xbegin
mov
pop
cmp
push
add
loopne
ret
clc
mov
sbb
sub
pop
add
add
in
sarb
jmp
clc
mov
bound
add
enter
clc
dec
cmp
sub
push
clc
or
clc
gs
in
jo
add
in
cmp
clc
add
xor
clc
roll
clc
xbegin
xchg
add
cltd
mov
aaa
mov
cmpsl
clc
cmp
sar
and
add
lea
and
add
pusha
add
in
push
add
hlt
xor
mov
adc
add
fcoml
push
js
add
out
sbb
add
cwtl
mov
add
shlb
add
popa
add
mov
ja
add
and
add
xchg
or
lock
add
jo
add
add
push
add
and
mov
pand
ds
push
cmp
xbegin
add
sar
clc
pop
movsl
clc
mov
int3
popa
add
and
add
daa
clc
test
in
test
es
js
xchg
cmp
clc
cmp
clc
sar
xchg
in
sbb
in
inc
add
dec
mov
add
scas
inc
add
jne
int
clc
cmp
xchg
add
add
add
clc
xabort
adc
add
ljmp
je
pop
cmp
aas
or
jb
add
rclb
inc
clc
mov
and
mov
push
data16
int
sbb
add
dec
fdivl
lods
mov
add
add
add
push
lock
outsb
fistpll
out
cld
outsl
sar
repnz
clc
dec
sbb
pop
ss
cmp
clc
sti
or
add
inc
add
or
pop
std
cmp
jbe
push
xor
or
mov
add
gs
cmp
fistl
adc
add
sti
adc
add
push
cmp
add
add
ja
add
jp
fldenv
add
mov
cmovbe
jecxz
add
mov
aaa
fimull
das
and
add
clc
cld
insb
data16
lea
pop
clc
cwtl
add
add
mov
pop
mov
dec
jb
add
add
and
out
xabort
hlt
jg
xchg
mov
add
pusha
add
xabort
add
lahf
flds
clc
and
add
in
or
add
xor
clc
xor
add
push
add
movsb
clc
add
in
sahf
inc
add
adc
add
push
test
mov
xchg
inc
add
push
add
test
lods
mov
clc
dec
lcall
pop
clc
lret
clc
addr16
test
pop
xor
add
push
and
sar
push
lret
or
add
mov
push
xlat
je
clc
push
mov
add
xor
add
cmp
xchg
or
movsl
clc
xabort
repnz
dec
iret
mov
add
add
vzeroupper
adc
add
aaa
decb
dec
push
clc
es
hlt
dec
xchg
lcall
repnz
add
xchg
pop
cld
adc
add
fsubp
clc
push
add
push
clc
jmp
sub
add
stc
dec
movsl
clc
stos
sar
jl
cld
mov
nop
sbb
dec
adc
add
adc
add
clc
in
add
add
adc
cmp
clc
xchg
sub
ss
inc
add
pushf
insl
push
add
add
clc
mov
add
rcrl
sbb
lea
inc
clc
cwtl
mov
mov
cli
mov
add
js
clc
cltd
jmp
clc
imulb
add
imul
cld
cmpsl
clc
mov
cmp
clc
pshufw
xchg
popa
add
pop
sbb
sbb
jo
add
test
sbb
xchg
pop
ja
mov
sub
add
fnstcw
dec
enter
pop
clc
ret
clc
xor
add
or
adc
add
pop
imul
clc
ret
clc
in
xor
add
jmp
lea
push
add
push
add
sub
je
clc
pop
mov
stos
mov
clc
mov
pop
clc
imul
xlat
sub
enter
clc
mov
lods
loope
cmp
add
mov
clc
mov
ret
mov
sub
call
add
mov
clc
in
mov
pop
mov
mov
test
clc
xabort
fcoml
jp
clc
jae
add
scas
dec
adc
add
inc
add
sbb
cmp
mov
jmp
xor
add
mov
mov
jns
lods
sbb
mov
add
push
xchg
gs
js
pop
xchg
scas
xor
add
outsb
adc
add
add
rorl
xor
data16
xor
test
rcl
dec
outsb
or
mov
stc
outsl
and
add
fists
cmp
sbb
js
into
flds
push
add
and
add
cmp
imul
rcl
push
sub
sbb
sti
insl
cmc
repz
add
cmp
add
pop
je
xor
add
mov
movsl
clc
mov
stc
mov
stos
out
lcall
and
add
add
ljmp
add
mov
push
clc
mov
out
sbb
outsl
push
clc
popa
add
xchg
leave
int
sbb
clc
ss
add
xor
add
jmp
add
push
xchg
inc
clc
cwtl
sbb
clc
cmpsl
clc
adc
add
xchg
sub
add
add
add
add
add
test
add
aad
out
xlat
aad
hlt
cwtl
mov
inc
add
add
inc
clc
or
clc
inc
add
jl
out
push
inc
add
nop
push
cmp
clc
popa
add
pop
sub
xchg
mov
es
xchg
and
add
xchg
in
mov
cmp
dec
pop
clc
adc
sar
in
adc
add
add
clc
clc
cld
jmp
clc
insl
sbb
add
lahf
in
push
clc
sub
add
mov
clc
pop
test
lret
jl
das
cmp
sti
mov
mov
add
add
int3
fmuls
cmp
pop
clc
mov
in
js
xor
and
add
xchg
add
add
add
or
clc
jno
add
popa
add
js
sub
add
push
das
mov
hlt
mov
push
clc
test
fs
out
lock
mov
clc
outsl
daa
clc
pop
clc
cmp
add
push
xor
add
mov
add
arpl
add
pop
add
add
out
test
clc
adc
add
add
scas
jle
int
loopne
push
lock
lods
and
sbb
paddd
mov
repnz
test
mov
arpl
add
test
add
stos
mov
movsl
clc
xchg
stos
js
add
push
add
and
add
add
sbb
inc
clc
into
xchg
jmp
hlt
jne
out
inc
add
cli
jae
add
add
gs
mov
sar
imul
sub
xchg
in
repz
or
clc
mov
cmp
add
into
push
pop
imul
add
push
jmp
test
pop
mov
sub
add
ret
clc
dec
add
add
stc
jb
add
clc
sub
push
jb
add
clc
pop
xchg
aas
mov
mov
ret
clc
push
cmpsb
clc
or
rcl
ljmp
pop
ljmp
add
mov
xrelease
mov
add
xchg
sar
mov
stos
icebp
jae
add
add
cmp
clc
iret
mov
push
add
jno
add
sahf
test
xchg
sar
add
mov
xchg
cmp
xor
add
push
clc
jno
add
clc
movsb
clc
push
mov
inc
clc
mov
or
jge
iret
icebp
sub
cmpsb
clc
mov
jns
xchg
test
data16
pop
adc
add
add
cmp
clc
jge
xbegin
xchg
repz
sbb
sar
mov
jge
clc
push
add
cltd
lret
hlt
jle
popa
add
loope
pop
xchg
add
add
or
nop
add
add
add
inc
add
mov
addr16
xchg
xbegin
clc
dec
xchg
cmp
or
adc
add
mov
scas
aad
pop
push
repnz
clc
push
dec
ficomps
clc
clc
ffreep
clc
cmp
add
stos
add
push
cmc
loope
xbegin
fiadds
inc
add
lret
xchg
xchg
fisubrl
lret
jge
clc
fldl
clc
pusha
add
pop
cmp
clc
test
cli
aas
xlat
shrl
cmp
add
add
add
cwtl
and
jbe
push
dec
ds
add
add
in
or
add
jno
add
mov
xor
add
push
xor
add
add
add
add
jmp
clc
into
xchg
addr16
lret
add
shll
or
jecxz
sub
add
cmp
dec
and
add
add
ja
clc
test
add
cmp
mov
adc
add
pop
push
clc
in
jge
clc
dec
inc
clc
bound
add
jmp
mov
mov
in
clc
ret
clc
pop
dec
out
leave
adc
clc
add
pop
clc
pop
bound
add
dec
adc
add
cmp
cmp
cmc
xchg
dec
mov
add
add
add
sbb
and
add
clc
mov
int3
pop
mov
fnstcw
clc
add
das
dec
push
in
mov
lods
movsb
clc
sahf
dec
hlt
test
jno
add
jge
jg
jne
cmp
sbb
ss
push
mov
stc
add
add
add
lret
inc
add
jl
sub
xchg
sub
clc
in
sbb
test
jbe
cli
adc
add
lcall
clc
jp
push
add
add
mov
cld
mov
add
sbb
js
jbe
inc
add
xbegin
lock
and
add
clc
mov
clc
xor
add
adc
add
add
dec
ret
clc
mov
push
add
pop
clc
sbb
add
add
xchg
pop
xbegin
popa
add
pop
jbe
leave
inc
add
icebp
out
test
stc
loope
push
add
inc
clc
js
dec
loop
xlat
mov
popf
jae
add
mov
clc
xchg
jnp
add
push
add
cld
aam
sar
fisttps
inc
add
mov
ret
clc
xabort
xchg
bound
add
add
mov
clc
or
and
add
add
ss
aad
mov
clc
loope
sbb
push
jge
xchg
mov
add
push
stos
push
bound
add
aaa
jge
nop
or
int
add
lods
dec
daa
clc
sbb
clc
add
add
clc
or
hlt
sub
xchg
lea
cmpsl
clc
nop
mov
jp
rcll
movsb
clc
push
clc
dec
in
xchg
sbb
pop
clc
xbegin
add
inc
add
inc
clc
mov
mov
into
cmc
push
add
sub
xchg
jno
add
inc
clc
in
sub
mov
push
add
mov
clc
sbb
add
dec
dec
or
movsl
clc
adc
aaa
pop
aad
add
pusha
add
jmp
clc
mov
clc
in
lods
push
clc
or
add
xchg
xchg
cs
scas
cwtl
mov
lock
nop
push
mov
push
shll
add
clc
into
mov
pop
push
cli
add
hlt
out
leave
inc
add
mov
clc
jge
ds
cwtl
sarl
clc
nop
out
cmp
clc
jg
add
add
mov
dec
sbb
push
clc
std
pop
add
clc
mov
aaa
imul
inc
add
sbb
add
push
jo
add
add
arpl
add
inc
add
push
add
xor
add
push
nopl
sub
aaa
dec
pop
cmp
and
add
add
add
cmp
clc
movsb
clc
mov
mov
mov
clc
shlb
add
pushf
out
sub
inc
clc
nop
dec
ret
clc
int
das
push
lcall
inc
add
cmp
jmp
jns
cmp
add
flds
add
mov
add
mov
sbb
cmp
clc
imul
add
mov
jb
add
clc
jo
add
clc
jmp
sbb
clc
enter
xbegin
movsb
clc
int
enter
or
clc
adc
add
clc
cmp
clc
xabort
and
add
ret
clc
and
add
cwtl
hlt
adc
lock
clc
xlat
jno
add
scas
adc
add
fiadds
add
xabort
stos
fcmovb
clc
xor
aam
clc
pop
and
add
push
jno
add
add
in
ja
clc
xor
add
cwtl
mov
xchg
mov
push
inc
add
mov
imul
enter
clc
add
add
in
push
imul
sub
clc
cwtl
jnp
add
add
add
inc
clc
cmp
in
cmpsl
clc
xchg
push
mov
je
dec
shrl
and
aad
mov
push
mov
scas
movsb
clc
sti
movsl
clc
rorl
std
jg
clc
mov
add
xor
add
jle
clc
xor
add
or
mov
scas
xor
add
mov
clc
repz
pop
mov
add
cmp
clc
aas
test
add
lock
push
sbb
push
clc
faddl
in
int3
out
jp
daa
clc
jg
clc
imulb
adc
add
clc
mov
dec
xor
clc
je
inc
clc
insb
movsb
clc
sar
xor
add
add
clc
imul
fisubl
outsb
je
mov
add
scas
or
test
notl
add
sbb
clc
mov
sub
clc
jb
add
pop
sar
ret
clc
mov
stos
imul
and
add
jae
add
add
imul
mov
add
daa
clc
or
mov
and
mov
jecxz
xbegin
add
add
add
shlb
loopne
cs
repz
add
push
push
cs
repz
jae
add
clc
dec
mov
clc
adc
add
enter
outsl
xchg
mov
ss
icebp
in
add
add
add
xchg
clc
pop
clc
dec
push
mov
clc
dec
xor
decb
push
add
pop
sbb
add
clc
or
add
movsb
clc
leave
pop
xbegin
insb
sbb
filds
clc
mov
sub
sbb
cmc
xor
add
aad
ss
add
xbegin
sub
add
int
dec
xor
add
xbegin
add
mov
inc
add
sahf
in
and
add
fs
jnp
clc
cmp
push
lea
clc
cmp
add
sbb
in
lods
mov
add
mov
clc
and
add
push
clc
inc
add
sbb
dec
fwait
xor
add
pop
aaa
jns
push
add
sub
mov
add
test
outsb
fildll
stc
or
clc
lods
jmp
add
push
fidivrl
mov
and
add
clc
std
in
enter
dec
std
inc
add
mov
mov
clc
aad
popa
add
sub
clc
clc
mov
add
or
ficomps
adc
add
add
add
push
add
xor
lahf
repnz
add
shll
add
push
add
add
fstl
adc
add
add
cmp
or
cli
leave
xchg
mov
clc
dec
jno
add
xor
add
rcrl
pop
clc
pop
shrb
jno
add
insb
or
add
icebp
mov
or
shl
into
mov
inc
add
inc
add
ja
pop
outsl
and
data16
inc
add
aas
dec
mov
clc
push
cwtl
mov
clc
dec
jecxz
pop
cltd
fdivp
test
mov
adc
add
shrl
push
add
fnstsw
clc
rcrb
and
add
clc
data16
sub
add
jbe
and
add
ret
clc
stos
mov
cli
push
test
std
add
add
mov
add
or
pop
or
leave
mov
clc
adc
add
clc
jp
clc
add
add
clc
data16
clc
pop
sarb
add
or
add
sbb
test
lahf
jmp
clc
dec
aas
std
push
inc
add
lea
clc
adc
add
add
clc
loope
aad
pop
and
add
sub
add
pop
cld
out
dec
xchg
das
mov
in
jno
add
add
add
add
mov
add
add
cmp
and
mov
call
fstpt
xor
add
ds
cmpsb
clc
pop
dec
mov
adc
or
xchg
dec
in
cmp
repnz
sbb
and
add
clc
push
clc
lcall
inc
add
or
sub
add
inc
add
cwtl
in
ljmp
pop
clc
sahf
push
sbb
je
mov
cwtl
add
xchg
xchg
fldl
clc
sarb
mov
clc
mov
cs
jno
add
clc
movsb
clc
xchg
insl
imul
mov
in
out
pop
jbe
adc
add
das
arpl
add
add
or
adc
jne
scas
xor
add
cltd
es
adc
clc
sub
add
push
pop
inc
add
inc
add
push
clc
cmp
adc
clc
cmp
add
add
repnz
imul
push
cmp
pusha
add
mov
add
inc
add
in
testb
add
add
add
add
push
inc
add
clc
xor
add
adc
clc
aad
sar
adc
add
pop
inc
add
push
push
add
test
add
mov
or
add
mov
xlat
fwait
mov
add
clc
xchg
lods
cmpsl
clc
mov
shlb
shlb
clc
sar
sub
lret
fisttps
cmpsl
clc
mov
into
or
in
sub
adc
clc
pop
pop
pop
data16
inc
add
add
add
add
xchg
push
clc
inc
add
pop
or
add
inc
clc
lahf
aaa
push
lcall
fld
clc
sbb
lahf
mov
inc
add
jns
jecxz
shlb
jo
add
xor
add
add
add
clc
out
sahf
icebp
adc
add
xchg
cmp
add
pop
xor
fcmovnb
clc
pop
pop
adc
add
clc
out
test
fisubrl
dec
adc
lea
mov
adc
add
jae
add
sub
push
lods
adc
add
push
clc
fdivl
jmp
push
cmp
rolb
add
sti
jg
push
add
jo
add
pop
clc
jl
nop
mov
clc
outsl
mov
clc
mov
nop
xchg
inc
clc
and
add
mov
mulb
add
xabort
clc
jno
add
popf
in
fmul
pop
fsub
clc
movsl
clc
paddsb
das
sar
fs
cmc
dec
sbb
push
xchg
add
in
add
add
jno
add
cmp
es
add
add
add
sbb
add
mov
cwtl
jl
lods
mov
add
add
lock
xor
add
dec
pop
xchg
cmp
clc
xchg
lret
push
clc
push
clc
mov
es
jb
add
clc
cwtl
lcall
sub
ss
vcvtdq2ps
gs
pop
es
out
sbb
add
push
add
and
fbld
add
in
mov
inc
clc
sbb
mov
pusha
add
cmp
int3
es
jae
add
add
ss
clc
vmovups
add
test
xchg
ja
aad
clc
pop
push
add
roll
add
dec
xabort
movsb
clc
adc
add
pop
add
add
clc
sbb
clc
scas
sub
clc
in
mov
clc
mov
clc
xor
movsl
clc
loopne
sar
add
add
clc
xor
add
add
cmp
add
xor
add
xchg
xor
add
fstps
add
jo
add
mov
pusha
add
dec
push
add
cmpsb
clc
or
add
mov
cmp
aas
add
add
dec
add
add
mov
outsb
and
jbe
push
pop
clc
insb
lcall
lahf
test
dec
jmp
clc
leave
lea
add
mov
mov
add
add
add
add
gs
cmp
mov
clc
jmp
out
sub
clc
add
add
add
lods
pop
xabort
add
dec
xor
add
add
clc
leave
mov
iret
pop
jo
add
add
add
add
or
cmpsl
clc
xchg
jb
add
lods
repnz
add
clc
inc
add
lods
dec
sub
fldl
adc
cmp
add
jae
add
add
xor
add
adc
roll
or
clc
leave
std
add
add
jbe
pop
clc
into
lcall
inc
clc
mov
shl
clc
mov
leave
ds
clc
mov
pusha
add
std
and
add
pop
or
idivb
add
repz
mov
xchg
enter
or
sahf
xchg
repnz
mov
aas
cmc
movsb
clc
jl
add
jmp
in
jno
add
or
inc
clc
popf
cmp
clc
jnp
clc
jb
add
add
add
clc
pop
clc
jle
mov
inc
clc
jne
lods
js
push
mov
add
add
stos
sub
stos
sub
xor
add
testl
das
jmp
and
add
clc
push
imulb
mov
out
inc
add
pop
xbegin
int
add
cli
out
je
sub
jae
add
test
add
cmp
clc
mov
or
test
xchg
outsl
adc
sbb
mov
clc
icebp
adc
add
mov
mov
das
mov
fcmovnbe
enter
add
decb
or
add
add
add
fcoml
or
sbb
clc
sar
aas
xchg
icebp
imul
out
mov
add
das
and
add
clc
in
scas
aad
clc
xchg
sub
outsl
aaa
iret
xbegin
leave
lcall
add
xchg
and
inc
add
in
dec
aas
fwait
or
add
adc
add
push
add
and
bound
add
dec
je
mov
cld
pop
jbe
add
dec
mov
add
dec
mov
divb
add
add
sub
clc
push
mov
add
clc
xor
add
bswap
mov
sub
add
or
add
push
add
push
add
and
add
add
xabort
clc
push
or
add
xchg
sub
push
clc
jne
stos
or
add
cmc
cwtl
or
jne
pop
dec
jbe
loopne
sub
clc
fdivrl
clc
sub
xlat
mov
mov
sub
add
icebp
inc
add
fcomps
or
add
mov
add
sub
clc
test
sbb
mov
sub
add
jns
ret
clc
ss
add
jbe
clc
ja
aad
add
jns
add
or
fwait
cld
or
add
sub
inc
add
popf
ficoml
clc
cs
clc
and
add
mov
inc
clc
in
jmp
or
sti
mov
inc
clc
dec
push
fimuls
add
or
mov
js
clc
inc
clc
fwait
mov
pop
jecxz
inc
add
sar
dec
pop
inc
clc
out
jns
clc
push
add
dec
sar
push
add
hlt
mov
dec
mov
je
clc
scas
shrl
divb
add
mulb
pushf
mov
cli
fwait
mov
cmp
das
negl
clc
cmp
push
add
add
hlt
in
push
fidivs
add
dec
mov
sub
sub
mov
pop
xor
add
mov
add
push
or
test
mov
mov
add
add
add
clc
sbb
clc
sbb
int3
mov
add
jo
add
inc
add
adc
jns
jae
add
adc
add
mov
clc
push
adc
sbb
add
push
ljmp
stos
mov
sbb
clc
pop
hlt
inc
add
sbb
mov
cmc
sub
cli
je
mov
inc
add
mov
add
jle
mov
add
pop
or
mov
mov
clc
pop
jg
test
mov
add
add
insb
xor
add
add
adc
add
clc
mov
add
add
clc
push
stos
sub
clc
lods
insb
ljmp
add
xchg
xchg
cmp
jb
add
inc
add
add
cld
insl
mov
clc
addr16
and
add
add
sbb
add
out
pcmpeqw
add
fmuls
xor
add
cs
ficoms
clc
dec
xchg
mov
clc
dec
push
add
divb
mov
add
adc
add
clc
xor
add
dec
or
clc
shrl
jecxz
sti
jg
popa
add
xchg
push
insl
adc
inc
clc
pop
or
add
ss
out
jae
add
add
add
add
add
sar
in
push
in
push
pop
and
add
clc
xor
add
ret
sbb
iret
jle
mov
insb
cwtl
loopne
push
add
mov
pop
mov
clc
inc
clc
sar
add
shll
add
and
dec
insb
sar
add
jl
push
add
iret
addr16
dec
inc
clc
popa
add
ss
dec
mov
dec
lea
clc
sub
clc
add
add
clc
add
add
clc
xor
aam
clc
push
clc
mov
clc
xor
leave
push
add
fdivp
hlt
jp
cmp
sub
cmp
clc
pop
cld
pop
mov
clc
jne
jmp
clc
aad
mov
out
shll
add
xor
sub
push
add
es
mov
dec
gs
addr16
jecxz
pop
clc
mov
cmc
cmp
filds
sub
aas
fisubrs
clc
lcall
movsl
clc
aaa
cmp
or
xor
xor
add
and
add
cmpsl
clc
adc
add
add
add
push
clc
inc
add
xor
add
dec
cmp
movsl
clc
and
add
push
add
mov
sub
sbb
clc
mov
or
cmp
clc
int
xabort
or
int3
mov
clc
out
dec
push
bound
add
jbe
xor
jmp
dec
xor
add
daa
clc
inc
clc
inc
clc
test
clc
jle
clc
cwtl
outsb
je
dec
pop
lods
jne
sub
mov
ret
clc
lea
mov
aad
out
out
mov
clc
mov
jg
dec
fs
xchg
cs
adc
add
jae
add
add
outsl
cmp
clc
arpl
add
and
add
icebp
xor
add
cld
sti
iret
mov
jmp
pop
in
sbb
cmp
je
clc
sbb
sarb
clc
sar
add
fs
popf
mov
push
adc
add
clc
mov
inc
clc
add
sar
pusha
add
push
add
not
scas
loop
addr16
mov
add
pusha
add
int
jns
insl
or
push
add
dec
popa
add
jle
mov
sbb
pop
sar
clc
fsubr
js
jecxz
pop
cmp
ret
clc
scas
push
sbb
clc
sbb
clc
and
add
inc
clc
inc
clc
outsb
ret
clc
push
test
or
dec
repnz
add
int3
dec
inc
clc
gs
pop
add
add
fidivl
mov
clc
dec
dec
xchg
pop
hlt
nop
pop
insb
cmpsb
clc
inc
clc
gs
sbb
clc
mov
sti
jle
clc
inc
clc
pusha
add
jmp
mov
add
inc
clc
insb
xor
add
aaa
popf
fcoms
add
cmp
sub
clc
mov
clc
outsl
xchg
jle
outsl
fnstsw
push
xchg
and
add
sbb
pushf
push
call
xchg
jne
add
add
cmp
add
add
clc
push
movsb
clc
xor
clc
pop
cmp
cmp
clc
push
add
add
jnp
add
sub
push
cmp
cmp
insb
push
add
add
cli
aad
add
in
add
add
pushf
dec
sub
sbb
out
sub
add
add
inc
add
or
imul
mov
insl
and
add
clc
cmpsb
clc
inc
add
inc
add
ja
add
ret
clc
cmp
add
sar
dec
sbb
add
inc
add
push
clc
jne
clc
push
add
aaa
cli
pusha
add
std
leave
icebp
mov
add
add
and
add
clc
xchg
ds
dec
roll
clc
push
mov
clc
or
adc
add
in
mov
sbb
mov
loop
mov
sar
out
push
mov
pusha
add
or
mov
pushf
popa
add
mov
fcom
scas
sub
jmp
mulb
clc
push
add
mov
add
or
clc
inc
clc
push
shrb
clc
negb
clc
clc
insl
mov
cmp
add
mov
clc
cmpsl
clc
cmp
fcoml
add
pop
mov
lock
inc
clc
aam
jne
test
add
add
dec
sbb
add
adc
add
clc
cmpsb
clc
inc
add
add
add
bound
add
repnz
jns
rorb
and
add
clc
jb
add
push
add
xchg
clc
inc
clc
xchg
outsb
stc
add
add
mov
lahf
sar
add
js
and
in
out
xor
add
add
syscall
clc
push
add
dec
gs
mov
add
pop
add
mov
clc
testb
mov
pop
test
clc
mov
aas
roll
add
sub
in
es
xor
add
add
clc
jno
add
xor
add
push
loope
dec
mov
mov
jo
add
push
add
sbb
add
cmovbe
push
add
cmp
clc
dec
jb
add
add
pop
dec
cli
xor
add
add
ud1
sub
clc
outsb
mov
movsl
clc
negl
cmp
push
pushf
in
icebp
cmp
adc
inc
clc
adc
das
data16
icebp
jo
add
mov
in
movsb
clc
pop
inc
add
dec
add
add
clc
mov
adc
add
loope
add
add
and
add
nop
gs
das
sub
clc
jmp
inc
clc
arpl
add
sub
sbb
fs
popf
add
cmp
clc
out
mov
enter
add
es
jg
mov
lahf
jle
or
test
add
or
clc
jmp
pop
repnz
arpl
add
add
add
mov
xchg
test
popa
add
mov
add
dec
and
add
add
enter
mov
pop
mov
pop
and
pusha
add
ljmp
add
add
dec
call
push
fisubrs
call
in
push
add
rcr
cmp
loope
outsl
rolb
add
push
add
jg
add
jle
xchg
push
add
adc
add
jo
add
clc
sar
add
mov
std
pop
ficoml
xbegin
dec
sbb
and
sbb
add
imul
add
or
add
mov
push
dec
or
clc
xchg
fs
jle
fs
xchg
bnd
clc
and
add
je
rorl
add
xlat
sbb
inc
add
and
add
clc
jb
add
add
pop
jnp
push
add
cld
xchg
add
add
mov
cmp
push
push
add
mov
cmp
sar
clc
push
clc
in
jmp
in
adc
add
add
add
stos
push
dec
adc
add
clc
out
popa
add
sar
clc
enter
rclb
add
je
clc
push
xchg
sar
es
cmp
xor
add
push
mov
clc
mov
inc
clc
xbegin
clc
fs
fmuls
mov
add
mov
cmp
clc
mov
clc
lock
hlt
pop
mov
pop
add
add
popf
xor
add
and
add
xor
and
add
clc
jle
mov
add
es
dec
sub
sub
clc
push
add
std
or
dec
mov
or
xchg
das
aaa
push
clc
mov
iret
pop
clc
jmp
pop
inc
add
movsl
clc
dec
movsb
clc
aad
add
into
xlat
jmp
add
mov
clc
lea
clc
pop
and
add
add
xor
add
add
es
cld
push
add
jle
dec
xor
add
cwtl
mov
incb
inc
clc
xchg
dec
stos
in
scas
or
add
lea
add
push
add
xchg
mov
add
cmp
and
add
clc
pop
lcall
add
pop
cmp
clc
jb
add
push
add
notl
adc
cld
or
mov
or
popf
or
or
clc
es
daa
clc
xchg
stc
adc
movsl
clc
add
cmc
ret
clc
pop
add
push
add
jns
test
clc
aaa
and
add
cmp
clc
ficompl
add
adc
pop
clc
mov
sar
das
pop
das
stos
and
add
adc
add
pop
pushf
or
jne
clc
cwtl
push
add
jmp
clc
jne
clc
push
mov
popl
clc
cli
fcmovb
clc
jp
clc
lahf
ret
inc
add
rcrb
sub
clc
stos
push
add
push
stc
sbb
and
add
testb
stos
test
xchg
dec
push
sti
daa
clc
cld
push
add
push
cmpsb
clc
rcr
sub
clc
stc
pusha
add
push
add
fwait
insl
jne
clc
es
or
clc
or
add
clc
inc
clc
dec
pop
xbegin
cmp
insl
movsb
clc
loopne
xchg
inc
add
leave
int
test
cmp
clc
cmp
clc
add
add
clc
mov
add
mov
daa
clc
mov
inc
add
xlat
bound
add
clc
add
add
and
sub
in
lods
cmpsl
clc
jnp
inc
add
xbegin
push
mov
clc
and
aaa
adc
add
addr16
insb
sbb
clc
stc
xlat
dec
adc
add
inc
add
cld
push
add
or
mov
dec
mov
xchg
mov
clc
stc
or
repz
lcall
add
xchg
pushl
and
and
add
pop
out
dec
jge
shll
clc
add
add
add
ds
jae
add
add
clc
mov
add
xor
out
ret
add
outsb
jmp
cmp
add
add
push
ret
popf
aam
add
ficompl
adc
add
mov
pop
mov
add
clc
cmpsb
clc
mov
mov
aas
inc
clc
nop
rcrb
xchg
xchg
push
add
push
dec
shrl
jno
xbegin
inc
add
jmp
clc
out
and
add
lods
mov
adc
push
and
jae
add
add
add
inc
add
je
popa
add
std
sbb
clc
int3
lods
rol
clc
jno
add
pop
add
and
cmp
sub
add
add
sub
add
enter
xchg
leave
leave
push
add
add
inc
clc
xor
add
js
clc
ret
clc
repz
ret
clc
add
add
pop
js
pop
cmp
jmp
pop
dec
jae
add
iret
push
add
add
call
add
pop
push
lcall
adc
add
add
cltd
push
add
cmp
dec
rep
cmp
sbb
shll
push
add
add
jbe
add
inc
add
adc
testl
clc
sub
push
add
inc
add
fistpl
sub
cmc
xchg
cwtl
xchg
mov
into
add
jbe
clc
inc
clc
sti
xbegin
sbb
ret
cmp
or
add
test
sub
lea
xor
add
inc
add
dec
scas
daa
clc
push
add
xor
add
clc
dec
mov
fcompl
push
add
inc
add
xor
add
dec
sub
jecxz
mov
push
clc
mov
shlb
add
add
or
mov
xchg
jle,pt
mov
lret
movsl
clc
loop
add
add
aam
sub
popa
add
dec
lods
std
test
std
sbb
add
xchg
lahf
cld
lret
shll
mov
add
je
add
xor
insb
popf
push
clc
jae
add
mov
clc
out
clc
fcoml
sbb
sbb
xor
add
or
scas
repz
clc
add
add
clc
inc
clc
into
lahf
add
add
add
sbb
add
add
inc
clc
push
loop
jl
dec
test
cmp
cmp
push
push
and
xchg
shlb
add
mov
inc
add
mov
or
clc
xbegin
cmp
push
sbb
xchg
pop
xchg
ds
ss
hlt
sub
cmc
or
mov
sahf
pop
icebp
inc
add
sub
movsl
clc
push
clc
push
xor
add
or
int
dec
cli
aam
mov
ret
add
add
and
xor
fs
shr
adc
add
clc
sbb
push
outsl
imul
out
lock
add
imul
lret
clc
gs
mov
clc
push
frstor
test
add
add
fldt
fldl
add
fld
clc
and
add
sar
dec
ja
hlt
xbegin
adc
add
and
clc
and
add
pop
pop
fdivl
sbb
add
nop
popa
add
or
sub
adc
add
clc
sar
clc
mov
add
add
clc
xor
add
test
inc
add
sti
push
out
lea
pop
adc
xchg
push
clc
in
mov
push
cs
jns
push
ljmp
pop
jnp
dec
push
clc
std
adc
add
loopne
sbb
ljmp
pop
pop
fisttpll
in
jg
test
xchg
jnp
fstpt
and
ficomps
add
and
add
add
add
xchg
popf
jno
add
add
shrb
clc
cmp
add
clc
sbb
cld
cmp
clc
xchg
das
pmaddwd
add
add
add
cmpsl
clc
cld
sbb
push
clc
mov
clc
mov
mov
repnz
mov
aaa
mov
loope
sbb
add
std
daa
clc
clc
cmp
insb
sti
pop
sub
pop
fnstsw
jle
add
stos
jo
add
push
lcall
adc
add
jg
add
xchg
mov
clc
test
gs
jnp
add
mov
clc
cmp
adc
clc
sar
add
push
arpl
add
cmp
sub
inc
clc
mov
in
pop
scas
icebp
pop
jg
add
lods
test
clc
loopne
jmp
clc
adc
push
clc
fistps
test
nop
jecxz
push
add
and
add
in
and
cmc
adc
add
nop
jno
add
inc
clc
popf
cmp
add
clc
in
inc
add
lret
xor
add
cmp
sub
hlt
call
clc
out
mov
clc
mov
or
xor
add
push
clc
sti
sbb
out
cmpsb
clc
add
add
add
add
add
xchg
imulb
rclb
clc
in
cld
fimull
pop
cld
aas
sahf
adc
mov
sarb
loop
fimuls
xor
out
sub
add
aad
add
or
add
sub
sti
stc
cli
lret
outsl
push
add
xbegin
clc
lret
clc
je
ret
lods
or
xor
add
add
add
stc
add
xchg
xchg
lret
clc
lahf
fnstcw
dec
adc
add
in
cwtl
imul
test
or
clc
add
sub
add
add
aad
add
xchg
loope
dec
test
clc
sbb
mov
mov
add
pop
lock
loop
imulb
adc
add
jno
add
xlat
jne
aas
stos
push
clc
cmp
lods
mov
sub
add
xabort
sbb
call
add
aam
add
add
push
pop
mov
add
push
mov
cmp
lods
dec
test
inc
add
lret
clc
mov
fwait
jmp
mov
outsl
xor
add
push
add
xchg
mov
clc
aas
pop
jb
add
clc
clc
loop
cs
ret
addr16
lea
add
stos
insl
mov
test
addr16
lods
nop
push
push
clc
daa
clc
stos
ret
sahf
leave
push
clc
or
clc
and
add
ret
in
xchg
out
test
repz
clc
js
jns
add
and
add
add
bound
add
add
add
sbb
shll
add
clc
xor
add
add
je
ds
cmpsl
clc
test
cmp
cs
add
inc
clc
mov
hlt
in
sar
add
loop,pn
lods
xor
clc
outsl
inc
clc
xor
jns
adc
hlt
xor
add
mov
inc
add
push
jns
pop
cmp
ret
dec
mov
clc
sub
jnp
clc
mov
pushf
lea
call
call
add
add
inc
clc
inc
clc
shrb
sub
xchg
and
add
add
pop
inc
clc
inc
add
xor
add
add
loopne
or
loopne
popa
add
inc
add
and
dec
cmp
add
mov
add
or
or
mov
cld
out
sub
add
mov
clc
sbb
and
and
clc
in
pushf
sub
inc
clc
cmp
clc
sbb
hlt
cmp
rcr
cmp
mov
mov
add
pop
mov
add
or
popa
add
aas
dec
inc
clc
mov
add
int3
hlt
xor
add
sub
clc
sar
clc
lods
in
mov
inc
clc
xchg
dec
sub
dec
and
fsubr
in
mov
or
nop
jle
add
ret
clc
and
add
cmpsb
clc
repz
imul
mov
add
pushf
push
jno
add
clc
lods
and
add
adc
int
clc
cmp
clc
cwtl
mov
rorl
popf
pushf
in
mov
sub
ljmp
sub
ret
clc
jno
add
add
xor
lret
lea
mov
cli
inc
clc
mul
clc
jo
add
clc
mov
add
mov
clc
inc
clc
sar
push
add
xabort
cmp
clc
pop
clc
sbb
iret
push
push
sub
jl
clc
stos
lock
add
inc
add
fiadds
out
repz
in
divb
add
fs
aaa
cltd
or
fcompl
clc
pop
call
clc
mov
add
sub
scas
int
inc
add
sbb
ljmp
cli
pop
or
add
sahf
dec
movsb
clc
inc
clc
sbb
add
sub
mov
or
movsb
clc
dec
and
add
clc
aas
test
pop
mov
sar
loope
jmp
mov
clc
gs
movsl
clc
mov
xlat
test
fwait
aas
inc
clc
dec
mov
ficomps
add
push
dec
in
inc
add
push
or
xlat
fistl
jae
add
movsb
clc
cmp
xchg
push
add
pop
xor
add
cmp
clc
scas
push
adc
add
dec
push
add
rclb
add
fisttps
add
adc
add
mov
arpl
add
push
add
add
add
movsl
clc
movsl
clc
out
xchg
cmp
cmpsb
clc
fstpl
out
pop
clc
cmp
mov
cmpsb
clc
cld
sbb
jge
in
sar
cld
lcall
add
pop
mov
mov
sub
popf
adc
add
add
mov
mov
add
add
push
jg
mov
dec
xor
clc
mov
or
clc
out
push
add
or
jbe
add
add
cwtl
and
add
jns
clc
mov
scas
adc
add
xlat
cltd
cwtl
pop
imul
pop
inc
add
push
lea
add
loopne
stc
sbb
hlt
gs
mov
add
sbb
add
add
fisttpl
add
test
in
testl
cmp
mov
inc
clc
mov
repnz
ret
ljmp
mov
clc
push
add
push
pushf
das
xor
rcrl
mov
jo,pt
add
mov
ja
ds
enter
jg
fwait
dec
sbb
in
xor
add
stc
ljmp
int
int
mov
add
lods
mov
sbb
clc
mov
jp
stos
pop
insb
pop
sarb
mov
clc
inc
clc
add
add
add
cld
aam
clc
aas
dec
cli
ljmp
dec
fldenv
add
enter
test
sarb
mov
ja
lock
sub
cmp
stc
insb
and
cmp
clc
sub
add
lret
push
bound
add
lahf
lods
cmp
sbb
add
test
pusha
add
dec
sbb
out
push
add
arpl
add
fisubl
jp
ja
lea
seta
add
adc
add
add
mov
adc
loop
icebp
mov
adc
add
add
clc
jno
add
shrd
sub
inc
clc
ss
clc
mov
jno
add
clc
shlb
clc
adc
clc
or
lahf
sbb
push
pop
xor
outsl
sub
and
add
sbb
add
and
add
add
sub
int3
add
add
dec
cmp
clc
cli
rcrb
sub
clc
jne
fstpt
clc
cmp
add
add
xchg
cmp
das
mov
push
or
je
push
add
repz
add
and
add
fiadds
clc
dec
pop
cmp
clc
pop
pop
mov
xor
add
adc
jbe
mov
clc
cmp
dec
pop
mov
add
loope
jns
repz
ja
mov
add
roll
or
pop
xor
testb
clc
enter
add
addr16
adc
add
xchg
popa
add
cltd
in
add
clc
aas
push
xchg
cmp
add
scas
add
add
mov
mov
ljmp
adc
add
mov
add
add
nop
jl
clc
mov
add
in
xchg
pop
adc
add
xchg
jge
mov
sbb
add
stos
imul
clc
cmp
ud0
push
add
sbb
clc
push
cmc
or
ror
mov
inc
add
call
push
add
add
push
ret
pop
in
cmp
and
add
inc
clc
cmp
stos
imul
clc
mov
add
add
dec
or
clc
dec
xchg
cmp
clc
sbb
cmp
clc
insb
sub
pop
push
jns
add
test
pop
insl
imulb
add
fmull
clc
inc
clc
incb
hlt
mov
sbb
std
icebp
add
leave
adc
add
es
loop
xor
add
push
test
test
pop
push
clc
or
add
cmp
clc
das
je
out
cmp
clc
xadd
mov
add
add
clc
add
add
add
cmc
fbstp
add
hlt
jnp
cmp
add
in
and
add
add
sbb
mov
clc
aad
or
cli
ret
clc
loope
pop
clc
lods
jns
add
inc
clc
cmp
clc
xchg
mov
sub
aam
outsl
ss
jge
cmp
cs
clc
inc
clc
jno
add
clc
xchg
shlb
add
mov
std
or
cmp
add
jp
mov
testl
leave
push
add
cmp
add
fmuls
hlt
cmp
mov
arpl
add
data16
mov
add
cmp
fs
mov
clc
lea
clc
pusha
add
xchg
mov
fnstcw
fsubs
add
dec
add
add
add
push
cmp
add
ret
clc
outsl
xlat
jb
add
dec
scas
outsl
xchg
mov
clc
add
add
xor
add
clc
push
add
xchg
inc
add
cmp
sub
repz
clc
lea
clc
push
add
mov
push
add
jecxz
aaa
popf
out
dec
mov
xor
add
clc
int
lea
fsubrl
clc
test
adc
clc
inc
add
push
mov
data16
adc
aas
js
add
add
add
add
cmp
fnsave
add
std
mov
xor
clc
sub
clc
inc
clc
add
stos
mov
cli
cmp
int3
jl
ficoml
add
add
enter
xor
add
test
roll
xchg
cmpsl
clc
sar
clc
push
add
add
add
fisubrl
clc
xchg
mov
outsl
cmp
ficompl
mov
add
cmc
int3
popa
add
pop
cmc
dec
jge
mov
xor
add
add
stos
adc
add
clc
xchg
sub
pop
xor
add
insl
scas
repnz
mov
test
add
add
in
jne
add
sar
add
jns
clc
mov
add
outsl
sbb
jecxz
inc
clc
popa
add
mov
cmp
inc
clc
pop
sarb
adc
in
arpl
add
add
sub
clc
arpl
add
sar
mov
js
dec
xor
clc
push
add
push
xchg
xchg
fnsave
cmp
add
imul
dec
addr16
mov
mov
shlb
add
sahf
dec
ret
jl
outsb
call
inc
clc
pusha
add
sbb
mov
imul
add
fstpt
mov
jge
cmp
add
pop
stos
and
add
sbb
jns
clc
stc
ds
cli
push
jns
ffreep
clc
pushf
and
add
inc
add
clc
push
clc
stos
adc
add
add
cmp
clc
cmpsl
clc
fs
mov
pusha
add
cmp
dec
mov
add
into
pop
pop
scas
inc
clc
cmp
clc
xbegin
cmp
mov
cld
aam
cmpsl
clc
or
fistpll
clc
pop
clc
in
dec
dec
pop
gs
xchg
pusha
add
iret
pop
clc
into
mov
mov
clc
dec
rolb
and
mov
cmp
cmp
clc
cmpsl
clc
xbegin
add
inc
add
jne
dec
jbe
in
mov
clc
push
out
or
add
insb
xchg
ret
clc
movsl
clc
lea
xchg
call
mov
outsl
dec
xor
add
out
lods
mov
rolb
add
xor
aas
mov
add
add
clc
addr16
sar
add
push
add
fiaddl
out
xor
add
clc
imul
add
mov
incb
add
push
call
add
insl
dec
scas
inc
add
or
call
clc
add
add
clc
mov
inc
add
test
fimuls
fwait
cmp
outsl
sub
arpl
add
adc
add
mulb
sub
insb
out
xor
into
or
jge
sbb
hlt
cwtl
fnstenv
dec
add
add
clc
mov
clc
push
add
pushf
jns
js
clc
sub
xor
add
add
clc
and
add
add
std
cmp
clc
loop
lods
or
fcomp
mov
in
mov
imul
add
fs
jmp
xchg
push
fs
jge
int3
xor
jno
add
stos
repz
push
hlt
mov
sbb
add
or
jl
push
clc
enter
push
add
mov
add
je
sub
add
aaa
fucomi
clc
and
add
clc
fbld
cld
loop
cmp
clc
aad
rcrl
clc
cltd
clc
add
mov
add
push
add
cmp
and
adc
add
gs
mov
xor
jne
clc
xchg
mov
add
gs
outsl
mov
sub
test
in
lods
cmp
or
leave
in
push
sub
add
fsts
add
add
clc
jo
add
add
adc
add
clc
sbb
add
mov
or
add
add
add
add
add
fnstenv
int3
sti
jge
xchg
aaa
and
pminsw
pop
sub
cmpsl
clc
ds
push
clc
mov
stos
enter
clc
popa
add
mov
sbb
clc
sub
cmp
mov
and
mov
sarl
sub
add
adc
add
mov
sub
pop
dec
cmp
inc
add
jl
dec
test
xchg
add
xor
sar
fucomp
sar
clc
adc
add
push
jae
add
pop
mov
shlb
mov
clc
xchg
push
clc
mov
sub
pop
loope
xor
add
je
clc
xor
adc
pop
insl
jmp
addr16
cmp
cwtl
lods
jl
fisttps
es
lret
clc
lea
add
clc
xor
add
add
add
int
sbb
inc
add
addr16
pop
dec
fs
xchg
testb
add
cmc
clc
mov
cmc
sbb
into
dec
dec
adc
add
nop
push
add
sub
xor
add
push
add
mov
cmp
clc
pop
cld
gs
shl
clc
fwait
or
add
xbegin
mov
clc
aad
sbb
add
aad
add
mov
shr
add
movsl
clc
nop
inc
add
sub
add
arpl
add
jae
add
dec
sbb
cld
test
arpl
add
das
cmc
push
add
or
sub
clc
sbb
lret
add
mov
add
push
cld
dec
mov
into
mov
mov
pop
push
add
pop
mov
xbegin
mov
aaa
cmp
inc
clc
jb
add
or
test
mov
add
add
cmpsb
clc
mov
add
add
add
loope
or
cmp
jmp
sub
clc
or
into
mov
clc
repz
mov
in
movsb
clc
clc
in
fcoms
clc
and
add
add
add
aam
clc
add
add
clc
xchg
sti
repz
hlt
xchg
fstps
cltd
push
es
push
repz
push
ficoms
in
fildll
clc
clc
ret
clc
jbe
add
cmp
and
add
out
mov
clc
clc
jo
add
add
adc
add
adc
add
lret
or
daa
clc
adc
add
ds
cmpsb
clc
fcomps
stos
mov
cmp
test
cli
jno
add
add
add
mov
add
cmc
dec
mov
adc
add
add
mov
filds
inc
add
in
pop
daa
clc
xor
add
add
push
mov
out
pushf
test
jbe
scas
popa
add
cmp
imul
js
clc
cmp
xchg
inc
add
and
pop
fnclex
clc
xor
add
cmp
clc
push
cltd
and
add
sbb
enter
pop
sarl
or
pop
aad
xchg
sub
add
push
mov
add
add
jb
add
hlt
adc
clc
pusha
add
movsl
clc
push
clc
add
add
add
push
mov
clc
pop
sub
add
add
add
repnz
clc
xchg
inc
add
in
jg
add
lods
test
scas
adc
add
add
add
add
jge
repz
out
add
add
add
add
add
add
inc
add
add
add
lea
imul
divb
add
add
xchg
mov
clc
popa
add
cmp
in
out
ljmp
addr16
jo
add
or
adc
add
add
cmp
clc
add
add
clc
or
clc
cmp
clc
fwait
jecxz
lcall
or
mov
add
add
and
fldt
jb
add
add
xor
add
add
test
cmpsb
clc
cmp
add
out
cmp
add
shlb
jnp
add
lods
bound
add
into
adc
add
add
add
jns
add
aaa
cmp
add
mov
add
add
cmp
add
clc
sub
add
add
aam
jl
sar
xchg
lcall
int
mov
add
add
sar
out
pop
push
sub
mov
add
add
or
xor
add
clc
das
and
add
clc
sbb
add
sarl
mov
add
add
add
ja
iret
notb
je
add
test
cmp
enter
add
mov
add
leave
mov
ds
leave
cmpsl
clc
xor
add
inc
add
inc
clc
outsl
cmpsb
clc
jns
icebp
jecxz
jbe
push
add
xchg
pushl
mov
jg
push
add
imul
mov
add
mov
cmp
add
dec
mov
clc
ljmp
std
aaa
out
push
push
and
add
mov
xor
add
add
cmp
scas
and
add
add
or
push
clc
insb
out
fiadds
add
daa
clc
cld
out
push
test
pop
rcll
add
clc
mov
pop
clc
aad
sbb
clc
xchg
inc
add
xchg
stos
in
jb
add
inc
clc
in
pop
clc
pop
test
push
sbb
xchg
in
fsub
clc
jg
dec
stos
push
add
add
clc
or
sahf
out
out
and
leave
insl
test
add
out
test
cmp
add
inc
add
fidivrl
clc
icebp
sar
mov
push
int
fnstcw
clc
sahf
add
out
gs
cwtl
and
jo
add
clc
cmp
shll
add
add
iret
sar
mov
add
add
lock
xchg
mov
clc
sbb
clc
scas
popf
div
jae
add
clc
jl
movsb
clc
imull
mov
add
addr16
fdivs
add
sbb
jmp
in
sub
inc
clc
sti
hlt
add
add
std
int3
imul
mov
cmp
jmp
add
jl
cmp
add
dec
cld
insb
lods
inc
add
aaa
outsb
enter
add
add
sub
gs
imul
mov
aam
clc
call
add
aas
cmp
sar
in
imul
je
sbb
clc
lea
hlt
jno
add
adc
add
clc
popf
pop
pop
xlat
pop
clc
and
add
or
clc
pop
dec
inc
clc
movsb
clc
jg
inc
add
cmp
clc
jae
add
inc
add
in
imul
inc
add
xor
add
inc
add
clc
pop
lret
mov
rorb
out
into
out
pop
adc
add
add
add
loop
push
cs
clc
adc
add
sub
jnp
inc
add
out
outsl
adc
fwait
xor
add
push
jge
shll
add
add
mov
add
clc
push
adc
add
xchg
cmp
bound
add
mov
jb
add
insl
outsl
fisubs
add
popa
add
xor
in
sbb
add
mov
stc
jg
and
dec
test
fwait
mov
clc
iret
sbb
add
and
loope
push
fldz
xchg
pop
in
imul
loope
xchg
fcomip
inc
add
stc
mov
clc
jns
add
xchg
mov
out
inc
clc
sahf
mov
add
repnz
scas
cmp
add
push
repz
mov
add
cmp
add
add
mov
add
cmp
aas
mov
es
nop
jbe
add
sbb
clc
js
clc
push
data16
push
add
movsb
clc
cli
mov
add
sbb
aam
aad
mov
and
insl
bound
add
jg
add
fs
cmp
add
clc
fs
push
lods
cltd
cmpsb
clc
xchg
jae
add
clc
push
add
mov
add
jae
add
cli
adc
or
mov
xchg
decb
outsl
pop
fs
sar
clc
out
inc
add
inc
clc
push
add
testl
dec
mov
nop
cli
js
xor
add
or
xchg
cmp
out
and
add
movsb
clc
repnz
sbb
pop
sar
data16
cmc
xor
add
add
bound
add
sub
pop
cmp
std
testb
mov
add
jns
xchg
out
mov
add
add
jne
mov
clc
add
add
pop
in
inc
add
mov
jo
add
jae
add
cmp
sar
das
stos
push
pop
jg
and
inc
clc
mov
and
add
jmp
clc
push
jle
clc
sbb
jns
scas
xlat
scas
mov
outsb
sar
sbb
add
add
add
clc
pop
clc
fwait
cmpsl
clc
int3
ds
loop
push
add
xchg
lods
jecxz
mov
add
jl
clc
fildl
add
and
add
out
mov
add
pop
bound
add
loopne
enter
in
scas
dec
mov
clc
mov
clc
xchg
or
hlt
xchg
test
jg
nop
cmpsl
clc
rcr
repnz
add
clc
pop
push
cmc
lret
add
clc
jns
clc
mov
xchg
cmpsl
clc
gs
notl
mov
adc
add
add
cmc
and
add
jp
add
add
clc
repnz
inc
add
shlb
mov
sbb
fstpl
mov
add
push
add
daa
clc
cmp
clc
popf
push
stos
mov
add
adc
movsl
clc
repnz
jb
add
add
mov
add
add
xchg
and
add
add
clc
pop
clc
ja
adc
add
jnp
jp
out
in
add
sti
stc
aad
lret
clc
dec
push
fdivl
add
mov
in
icebp
cmp
sub
mov
mov
dec
lret
clc
or
inc
clc
fsubrs
add
test
std
push
jecxz
pop
push
add
mov
clc
ret
clc
lods
jb
add
clc
dec
punpckhwd
add
add
add
cmc
jge
cmp
add
mov
clc
fisttpll
sbb
clc
stos
jl
add
add
mov
clc
jne
xchg
sbb
lahf
or
xchg
fucomp
jbe
aad
or
add
add
inc
clc
pop
mov
mov
stos
insl
jae
add
sub
clc
mov
pop
clc
sar
mov
fwait
jno
add
clc
scas
push
pop
dec
test
inc
add
xor
or
cli
pop
icebp
mov
mul
clc
pop
frndint
fdivrl
out
sub
jno
add
vpshaq
clc
js
pop
mov
clc
inc
clc
aas
ret
clc
out
sahf
int3
cld
xchg
jl
movsb
clc
push
clc
mov
add
jbe
clc
sbb
lret
xor
add
clc
in
test
jno
add
and
add
push
pop
jne
dec
add
add
add
jbe
imul
cmp
nop
pop
or
add
dec
sbb
mov
add
in
test
movsb
clc
sub
pop
sbb
add
add
add
insb
call
clc
jne
jo
add
clc
ss
push
clc
clc
xchg
pop
enter
jne
clc
in
mov
add
mov
sti
sub
clc
xchg
cmp
shlb
add
insb
pusha
add
mov
xor
add
add
jmp
clc
mov
clc
fcomi
push
xchg
cmpsb
clc
xor
add
add
test
pop
scas
rcrl
jp
cs
clc
xchg
pop
add
add
add
add
adc
add
mov
sahf
inc
add
hlt
mov
push
add
fsubrl
fucomi
mov
jne
add
js
jl
in
out
sub
push
add
idivl
outsl
fucom
clc
test
clc
out
cmp
jb
add
clc
cmp
xor
add
dec
into
mov
lods
pop
cltd
push
in
sub
sbb
adc
and
ss
and
adc
add
push
add
add
cmp
mov
add
sub
clc
dec
adc
add
in
xchg
xchg
fisttpl
in
lock
or
sbb
clc
push
add
leave
js
mov
out
shrb
inc
add
sbb
push
add
xchg
mov
dec
hlt
hlt
jg
icebp
lods
jecxz
xchg
mov
mov
clc
add
add
add
cli
lret
cmp
clc
cwtl
stc
jle
in
aad
add
into
jp
jnp
adc
clc
push
inc
add
xchg
mov
add
sbb
icebp
imul
dec
icebp
sbb
sbb
test
dec
pop
hlt
repz
add
add
push
mov
clc
adc
sub
clc
pop
dec
pop
jge
clc
sub
and
add
stos
call
ja
loope
inc
add
dec
das
pop
or
jp
clc
jo
add
clc
sahf
cmp
push
add
mov
imul
clc
lcall
decb
pop
push
add
inc
add
dec
es
mov
add
push
add
leave
jl
push
mov
addr16
fstl
add
sub
clc
mov
clc
lods
fstpl
clc
sar
clc
sub
mov
push
lcall
clc
enter
add
sar
add
cmp
clc
clc
aad
mov
add
push
pop
inc
add
lods
fbstp
aas
and
add
lea
clc
or
insl
insb
xchg
push
or
add
clc
lcall
adc
add
push
add
test
cmp
loopne
pop
clc
popf
movsb
clc
fs
setae
aam
xbegin
push
add
je
mov
ret
clc
bound
add
add
and
add
clc
xchg
xor
add
mov
inc
clc
sub
popf
in
int3
aas
add
cmp
xlat
mov
inc
clc
push
jecxz
pop
push
mov
add
lods
cmp
mov
add
add
xor
add
out
mov
jns
pop
lods
pop
xor
clc
pop
loop
cmpsl
clc
xlat
mov
scas
sar
frstor
add
clc
pusha
add
adc
add
add
dec
daa
clc
sub
add
and
dec
or
add
lcall
push
inc
clc
test
clc
gs
icebp
inc
add
outsb
data16
popf
je
loope,pn
int3
popf
test
pushf
mov
pop
mov
rcr
or
sbb
testl
cmp
aad
push
clc
inc
clc
insb
pop
mov
sbb
add
cmp
test
add
sar
loope
mov
add
jae
add
jecxz
imul
xor
add
lcall
das
adc
add
add
movsl
clc
xchg
add
add
outsl
in
fidivl
clc
mov
lret
sbb
add
mul
clc
pop
and
add
add
add
and
sets
pop
clc
mov
clc
sar
imul
ss
mov
std
pusha
add
cmpsb
clc
dec
fidivrl
roll
clc
in
xor
repz
add
sub
sbb
mov
jg
mov
mov
mov
mov
dec
sbb
add
sar
ds
fcoms
add
push
add
loopne
push
cmpsb
clc
imul
scas
inc
add
and
add
pop
int3
xor
add
clc
popf
clc
adc
add
push
out
inc
clc
js
adc
add
pop
cmp
pop
pop
mov
pop
cmp
clc
or
clc
rol
clc
xor
add
adc
add
add
add
jae
add
insb
pop
xchg
aam
stos
cmp
add
pop
hlt
xabort
jl
mov
clc
sub
pop
xchg
scas
out
dec
test
sub
inc
clc
xor
add
clc
fs
test
stc
pop
fidivrl
bound
add
add
imul
push
bound
add
cwtl
loopne
sbb
push
clc
test
fstl
add
cmp
sbb
cmp
fs
insl
dec
mov
add
ds
test
sar
clc
push
std
fcomip
pop
jne
and
add
push
add
dec
fildl
add
fs
ja
mov
mov
pop
leave
jae
add
add
add
cmpsb
clc
mov
and
mov
clc
inc
add
cmp
add
out
rorb
test
mov
out
adc
add
xchg
clc
and
add
clc
insl
aam
clc
xchg
xchg
lock
add
mov
in
out
bound
add
add
leave
js
jl
mov
clc
or
nop
popa
add
aaa
cmp
sbb
js
clc
icebp
jbe
add
rolb
clc
inc
add
jno
add
insl
adc
clc
jns
cli
imul
ja
into
sbb
clc
test
and
add
pop
inc
add
sar
clc
pop
inc
add
mov
pop
jp
jne
cmp
push
push
add
stos
push
pop
pop
test
shl
clc
sbb
cld
int
mov
add
add
clc
push
movsb
clc
mov
add
inc
add
sub
or
and
add
clc
je
ds
je
clc
fistl
add
xlat
jecxz
adc
add
add
clc
pop
repnz
aas
dec
dec
stos
sbb
add
mov
js
insb
mov
test
int3
jecxz
sub
add
sub
add
sbb
lahf
cmp
clc
dec
pop
dec
sbb
dec
iret
mov
clc
xchg
je
paddd
cmp
adc
add
sbb
sbb
add
idivb
xchg
dec
pop
xchg
or
xchg
add
add
add
xabort
mov
sub
add
clc
or
dec
mov
test
jne
movsb
clc
sub
mov
hlt
mov
clc
push
push
add
scas
ret
clc
fld
clc
and
add
and
add
add
mov
ja
add
outsl
cmp
clc
sub
add
jns
idivl
clc
jecxz
or
adc
add
cmp
fadd
clc
loop
js
jo
add
int3
push
dec
aaa
dec
loopne
inc
clc
xabort
clc
mov
add
aad
lret
xchg
cltd
xor
add
sub
clc
cld
or
clc
add
in
mov
add
jb
add
add
mov
add
push
inc
clc
pop
mov
test
add
dec
adc
add
push
xor
add
pop
push
inc
add
mov
idivl
clc
and
popf
xchg
jmp
jne
add
jb
add
add
or
es
and
add
in
mov
fdivrl
or
add
mov
inc
add
mov
xor
in
pop
xchg
mov
clc
leave
push
add
loopne
push
add
pop
xchg
xchg
ficompl
push
clc
cmp
clc
out
mov
add
cmp
clc
in
push
add
push
clc
or
mov
rcr
jae
add
clc
mov
repz
outsb
push
add
sar
fadd
clc
cmp
clc
loopne
ret
mov
add
add
clc
jbe
mov
clc
outsb
hlt
mov
clc
mov
add
adc
add
add
in
jo
add
cmp
clc
jno
add
clc
mov
clc
data16
inc
add
cmp
xchg
test
fadd
clc
ja
clc
mov
mov
jnp
add
mov
add
pop
push
add
in
inc
clc
push
out
lods
mov
inc
add
icebp
ss
push
dec
cld
xchg
cmp
add
fisubrs
pop
loope
cmpsl
clc
ret
clc
inc
add
adc
clc
sti
movsl
clc
inc
clc
mov
mov
add
add
add
ss
fnsave
add
jb
add
fnstcw
adc
add
clc
je
sbb
add
cmp
clc
jmp
sbb
jg
clc
cld
inc
clc
hlt
or
fwait
push
mov
lock
sub
fcoml
add
add
cmp
in
das
mov
pop
lahf
sbb
out
lock
sbb
aam
repnz
sub
clc
lret
jno
add
mov
cmp
clc
call
clc
xor
push
mov
add
out
rorl
inc
clc
outsl
mov
xabort
xor
adc
add
rcrl
add
jno
add
loop
or
clc
adc
add
movsb
clc
sub
and
or
int3
jmp
clc
fstps
clc
push
xor
add
ljmp
pop
clc
repnz
add
clc
roll
push
fs
out
cmp
add
lahf
dec
cmp
clc
ss
add
xchg
or
sub
clc
insl
jbe
xchg
cmp
add
cwtl
sahf
or
pop
fs
or
clc
xchg
lock
add
lret
enter
add
adc
aaa
dec
xchg
mov
imul
clc
ret
clc
hlt
add
add
or
add
filds
or
add
insb
xchg
jl
add
fsubrp
fldenv
add
ss
clc
xchg
ret
pop
mov
pop
and
clc
xchg
dec
push
clc
jae
add
leave
or
add
repz
add
and
xor
add
leave
inc
add
sbb
add
icebp
in
jo
add
add
add
add
fsubrp
lock
dec
dec
or
pop
clc
mov
dec
cmp
ja
clc
ss
clc
fbstp
add
fwait
nopl
dec
sar
clc
xchg
pusha
add
mov
jae
add
add
mov
pop
adc
add
inc
clc
int3
and
add
rcll
add
clc
cmp
test
es
movsb
clc
shr
inc
clc
jno
add
push
add
out
mov
hlt
mov
jbe
sub
sti
fbstp
add
add
sahf
sar
adc
add
add
scas
xor
add
add
xchg
lcall
jbe
clc
outsl
and
and
add
jns
adc
add
cmp
clc
pusha
add
in
movsb
clc
dec
inc
add
sar
clc
jbe
sar
cmp
sbb
mov
mov
add
clc
and
add
hlt
xlat
adc
add
push
je
push
add
xchg
cmp
push
cmp
clc
cmp
insb
xor
add
adc
add
insb
pushf
mov
add
gs
pop
xabort
jg
clc
into
test
jle
dec
int
clc
insl
test
sub
into
fsubrp
outsl
lods
aam
jno
add
ljmp
add
add
out
xor
insl
shrb
sub
mov
adc
add
inc
add
in
or
clc
in
popf
and
add
add
add
add
and
add
pop
clc
cmp
dec
out
arpl
add
push
add
xchg
xor
add
xchg
insl
xchg
cmp
clc
and
add
cmpsl
clc
pusha
add
mov
adc
iret
add
add
add
jge
add
mov
clc
cmc
cmc
mov
leave
cmc
push
clc
test
test
js
add
lret
jae
add
test
shrb
mov
ret
cmp
add
ds
mov
int3
nop
pop
stos
push
cs
imul
mov
enter
xor
add
mov
cmpsb
clc
fwait
pushf
mov
sbb
cmp
add
jge
xchg
in
jae
add
mov
clc
pushf
jno
add
cmp
int
add
das
mov
call
clc
lods
push
inc
clc
push
add
mov
xor
add
fnstcw
sub
mov
clc
pop
mov
hlt
inc
add
adc
fs
aad
sahf
mov
clc
call
adc
add
test
es
imul
and
add
jp
dec
xchg
inc
clc
movsb
clc
js
clc
out
mov
test
sar
clc
inc
clc
insb
xchg
xor
xbegin
movsl
clc
xor
clc
xor
add
clc
or
fidivl
add
sub
fwait
jb
add
add
popf
dec
adc
add
cld
push
push
clc
push
add
sbb
mov
xor
add
clc
or
add
sub
xor
sar
jne
std
lahf
loop
bnd
inc
clc
xchg
loopne
or
add
movsb
clc
ret
clc
sbb
jbe
mov
in
mov
xor
add
in
xchg
leave
bswap
daa
clc
or
cmp
add
add
pushf
mov
sub
add
pop
lahf
or
clc
cmp
add
fs
xbegin
shll
add
in
rorl
cli
mov
pop
stos
fcoml
add
pop
sub
je
in
cltd
repnz
add
clc
cli
inc
add
cmpsb
clc
sbb
clc
out
sar
inc
clc
or
clc
and
add
jne
clc
cmp
cmp
clc
stos
jg
lcall
mov
fnstenv
cmp
mov
pop
in
repz
add
test
clc
movsl
clc
lcall
lods
cmp
call
clc
in
push
insl
and
add
pop
stos
in
mov
clc
into
sbb
jne
clc
shll
cmp
je
clc
or
add
add
add
add
popf
mov
add
inc
add
sbb
lahf
neg
imul
clc
in
pop
in
gs
or
clc
sub
add
ja
mov
clc
lret
add
jnp
ret
clc
sub
add
into
das
sub
data16
pop
jecxz
sbb
and
add
mov
ss
clc
out
add
add
add
sub
pop
int3
loopne
dec
aad
mov
cmp
cmp
clc
ret
clc
in
pop
xchg
pop
cwtl
push
add
mov
ret
pusha
add
cmp
clc
adc
clc
push
repnz
clc
or
add
add
add
pop
js
dec
mov
sub
jbe
mov
hlt
mov
inc
add
nop
out
push
add
mov
mull
add
jmp
cmp
arpl
add
add
add
add
aam
fcom
out
ljmp
movsb
clc
movsl
clc
sbb
ds
mov
clc
leave
add
add
cmp
clc
add
mov
clc
sahf
push
or
inc
add
xchg
stc
mov
add
add
add
jg
add
inc
clc
xchg
and
add
mov
push
sub
inc
add
xor
add
add
clc
jno
add
add
or
clc
ds
fs
cmc
imul
add
repnz
clc
test
das
stos
syscall
clc
in
fisubl
xchg
cltd
and
aam
sbb
aad
push
into
stc
pop
add
stc
mov
mov
je
sbb
clc
adc
add
in
mov
xbegin
or
fwait
cli
xchg
cwtl
aad
sub
rcr
inc
add
jno
add
mov
cmp
loop
fildl
add
sub
add
jo
add
ret
clc
js
xbegin
inc
add
mov
add
lret
clc
jo
add
jecxz
mov
imul
add
add
add
shrl
jge
jecxz
pop
cmp
clc
mov
add
rcll
add
stos
xchg
jmp
add
adc
add
mov
xor
inc
clc
insb
stc
ljmp
pop
sub
mov
inc
add
pop
xbegin
inc
clc
mov
and
add
add
mov
bound
add
cld
push
shl
fxch
cmp
xor
int3
mov
pop
add
mov
sub
add
gs
clc
ficompl
add
add
pop
jbe
clc
fbstp
dec
loopne
mov
pop
call
fiaddl
lods
mov
clc
adc
clc
cmp
sub
gs
lea
add
inc
add
cmp
inc
add
lahf
mov
add
imul
shrl
cmp
loope
add
add
add
sub
vmovaps
jno
add
call
sub
jl
ljmp
clc
roll
add
fs
call
push
add
sbb
fs
xchg
xchg
or
sbb
add
aas
fisubrl
call
mov
add
clc
mov
mov
cmp
inc
add
pop
xchg
je
clc
loop
sbb
shrl
add
pop
push
imul
add
mov
add
xor
add
pop
lcall
cmp
fistps
bound
add
out
mov
mov
add
pop
in
push
add
add
mov
cmp
sbb
mov
clc
pop
int3
xchg
sub
add
mov
and
add
add
ljmp
data16
and
add
test
ficoml
add
sbb
clc
pop
push
lret
bound
add
add
cmp
add
mov
add
and
add
icebp
pop
loope
sbb
fldcw
dec
push
add
push
mov
cmp
add
sbb
add
test
dec
scas
push
inc
add
push
mov
clc
push
add
lahf
or
cmp
add
push
in
or
add
add
clc
fdivs
sti
cmp
leave
aad
clc
mov
mov
clc
ret
clc
push
je
add
xlat
jae
add
sbb
inc
add
pop
mov
fnstsw
movsb
clc
or
dec
cmp
add
add
xor
add
add
inc
clc
jae
add
add
adc
add
dec
adc
add
mov
jmp
add
cmp
in
mov
jns
adc
jo
add
sbb
pop
sar
bnd
loop
push
clc
add
add
add
in
in
ja
clc
int
mov
clc
ja
push
mov
add
lret
mov
addr16
hlt
cmp
out
cmc
or
pop
jle
add
xchg
push
mov
clc
dec
pop
cmp
mov
adc
add
sub
push
outsl
fcmovnu
cmp
in
pop
jo
add
jb
add
clc
adc
or
add
add
add
outsl
jp
adc
add
pop
mulb
jne
xchg
pop
xchg
ret
clc
mov
outsl
fs
movsl
clc
lret
data16
ds
and
add
add
add
clc
mov
cmp
clc
sub
ss
xor
add
add
and
add
add
div
out
rolb
popf
xchg
or
add
sub
mov
aad
xbegin
in
inc
add
mov
clc
mov
clc
pop
pushf
xlat
je
dec
cwtl
or
add
es
xchg
sub
insl
mov
dec
xabort
and
add
clc
clc
adc
add
and
mov
dec
cld
adc
add
cli
push
add
dec
icebp
cmp
add
xchg
gs
mov
jbe
je,pn
jae
add
dec
mov
es
sbb
adc
add
add
add
jmp
and
add
clc
sbb
jl
xchg
cmp
jo
add
add
xor
add
add
cmp
push
add
test
xchg
or
scas
dec
inc
clc
mov
clc
xchg
lods
mov
xchg
int3
inc
add
cmp
add
add
outsl
and
inc
clc
push
and
add
stos
or
dec
pop
jle
add
outsl
in
pop
push
in
ja
clc
sub
push
lahf
cmc
mov
pop
mov
loop
cmp
add
scas
xchg
jne
dec
nop
call
imul
adc
xlat
test
sbb
add
mov
clc
imull
aas
scas
jbe
dec
rcrl
jbe
js
mov
mov
sub
outsb
bound
add
test
and
add
clc
sbb
in
mov
add
adc
lret
clc
cmp
add
xbegin
add
add
rcrl
xor
xor
aad
add
repz
clc
adc
add
add
sbb
and
add
mov
add
mov
gs
mov
imul
or
mov
lret
and
xchg
sbb
clc
pop
aas
stos
int3
adc
add
clc
shrb
cmp
mov
clc
dec
mov
add
clc
and
add
cltd
xor
add
mov
add
or
clc
test
lea
lea
dec
and
add
clc
in
sub
cld
inc
clc
cmp
clc
and
add
cld
mov
add
lods
repz
add
or
mov
mov
idiv
cmp
adc
push
lods
and
add
xchg
adc
add
jl
push
add
bound
add
clc
sar
mov
sti
xchg
popa
add
ds
cwtl
add
add
fwait
outsb
loopne
ret
clc
aad
clc
mov
ds
dec
jmp
adc
add
insl
or
pop
xchg
aas
aad
add
push
mov
add
out
hlt
cs
adc
add
int3
sbb
cli
pop
mov
adc
add
clc
mov
clc
out
clc
outsl
xchg
stc
outsl
int3
icebp
dec
dec
mov
xchg
iret
imul
add
add
mov
clc
pusha
add
push
cmp
inc
clc
cmp
ds
clc
add
xor
sbb
add
cmp
clc
ficompl
push
add
mov
add
jae
add
clc
jg
and
pop
daa
clc
push
cmp
cmp
add
clc
dec
mov
add
add
clc
sbb
add
adc
imul
pushf
jne
add
cltd
gs
data16
incl
add
add
or
ret
clc
jecxz
lret
add
adc
add
shlb
add
add
loopne
xchg
pop
decb
mov
add
pop
mov
jns
push
push
enter
cmp
add
add
add
dec
pop
aad
dec
mov
xchg
mov
imul
test
and
add
das
sub
xbegin
adc
add
push
mov
add
add
add
add
je
add
and
call
clc
cwtl
pop
jp
add
popa
add
or
add
add
into
bound
add
cmp
cmc
dec
je
mov
imul
cmp
xchg
fidivrs
adc
mov
push
add
mov
and
inc
clc
mov
clc
dec
xchg
or
je
add
std
mov
clc
sub
add
shrb
inc
clc
loope
mov
stc
or
faddl
clc
testb
div
ljmp
xchg
fiadds
clc
lea
adc
ds
xchg
mov
add
add
or
xor
add
add
adc
add
mov
add
aas
mov
mov
lods
cmp
cmp
test
rcl
add
add
jle
add
pop
or
aas
mov
sub
add
int3
adc
add
add
loopne
adc
lods
push
clc
jle
add
jle
loop
sbb
clc
xlat
pop
mov
mov
pushf
inc
add
jp
cmp
xabort
in
or
clc
or
mov
clc
and
add
cmp
clc
add
add
add
mov
add
add
jecxz
arpl
add
clc
push
jo
add
aad
clc
dec
xchg
pop
jmp
push
add
and
divb
jg
dec
jo
add
add
inc
add
cmp
iret
jae
add
pusha
add
sub
inc
clc
pop
add
add
add
clc
fwait
mov
jae
add
clc
sub
xbegin
pop
cli
sbb
jnp
cld
lret
inc
clc
mov
xor
add
bound
add
fisttps
mov
add
test
push
pushf
xchg
ja
clc
cs
clc
stc
jge
clc
ljmp
cmp
out
data16
aaa
sbb
pusha
add
push
push
leave
add
add
cmp
clc
repnz
ret
clc
pop
pop
in
mov
add
mov
call
add
cmp
xor
fsts
imul
add
sti
addr16
cmp
cmp
clc
ficomps
pop
mov
jne
jge
lods
xchg
dec
xor
xchg
sti
shr
in
stos
and
add
adc
shrl
add
or
clc
dec
test
outsl
xchg
movsl
clc
enter
dec
mov
test
inc
add
sar
add
nop
lcall
scas
and
add
add
jnp
add
pop
xchg
cmp
clc
sub
cmp
mull
arpl
add
add
clc
loope
loope
and
add
add
jge
add
or
addr16
and
add
add
push
adc
add
clc
fldl
add
clc
in
and
add
popf
xor
add
push
sahf
mov
int3
aaa
push
add
incb
or
pop
clc
sub
add
push
leave
cmp
clc
mov
clc
data16
jl
push
jge
sar
cmp
pop
loopne
gs
add
add
sbb
add
sbb
cmp
add
icebp
ja
add
loop
rcrb
clc
cmpsb
clc
fs
jl
call
clc
out
lret
sub
sar
clc
mov
adc
add
clc
fldln2
xor
fstl
mov
mov
add
xor
add
bound
add
jne
scas
or
sbb
clc
xor
add
test
popf
jbe
lret
add
roll
clc
inc
add
es
push
add
lea
xor
or
clc
mov
jmp
dec
pop
enter
mov
pop
movsb
clc
jecxz
test
stos
push
add
repnz
leave
or
clc
test
add
fdivr
push
jb
add
dec
adc
push
add
sahf
push
xchg
dec
pop
sar
clc
scas
sub
clc
fwait
in
adc
add
add
mov
add
sub
cmp
add
fnsave
clc
adc
add
add
movsb
clc
outsb
das
enter
cmp
cmp
add
add
pop
jecxz
push
add
adc
add
xchg
adc
add
clc
xor
add
clc
test
push
sti
bound
add
cmp
clc
in
xchg
adc
add
add
dec
cld
dec
jl
push
imul
add
add
arpl
add
clc
rcr
enter
clc
push
pop
lods
mov
add
xchg
push
push
add
out
push
jg
and
loope
lahf
cmp
fmuls
ret
je
clc
ja
xchg
mov
add
clc
jmp
mov
pop
inc
add
hlt
je
sbb
mov
clc
in
sbb
pop
add
add
add
in
fstpt
cmp
test
aam
cmpsl
clc
or
lret
add
pop
out
loop
imul
sahf
rcrb
inc
clc
mov
scas
inc
add
push
mov
adc
clc
lods
add
add
int3
jge
xabort
add
ja
clc
jno
add
clc
mov
clc
pop
clc
sbb
lods
adc
out
test
cmp
clc
outsb
mov
xchg
lock
add
add
add
fimull
cmp
test
int3
dec
je
add
ud2
cli
xor
add
xlat
adc
add
pop
aas
or
clc
stos
mov
out
leave
push
clc
enter
or
fistpl
or
add
add
repz
jle
push
or
out
ret
clc
cmc
cmp
sahf
mov
dec
and
add
add
jno
add
add
xchg
pop
clc
inc
clc
xchg
jo
add
movsl
clc
jmp
push
dec
mov
and
sbb
into
cmpsl
clc
ja
push
mov
add
enter
add
clc
xchg
cmp
xor
dec
je
add
adc
add
ficomps
es
dec
js
pop
fdivr
clc
cmp
repnz
add
data16
mov
add
jmp
add
mov
clc
outsl
mov
add
cmp
add
and
add
cld
popa
add
xbegin
add
lods
inc
clc
out
mov
xlat
sub
cli
stos
cmp
icebp
movsl
clc
sar
clc
mov
ret
clc
fwait
in
sub
push
add
loop
push
bnd
clc
std
or
sub
dec
add
add
flds
aas
pop
je
add
or
cmp
push
add
inc
clc
xchg
in
arpl
add
or
cs
clc
or
sbb
pop
in
mov
sub
sbb
jmp
xor
add
xchg
iret
mov
add
xchg
push
xor
add
daa
clc
imul
add
add
in
cltd
or
add
ret
mov
movsl
clc
xbegin
add
add
pop
clc
add
cmp
outsb
jge
mov
clc
inc
clc
outsb
fildll
clc
je
call
add
jae
add
in
jae
add
jmp
add
push
add
push
add
bound
add
loopne
jp
enter
push
dec
arpl
add
add
mov
sbb
xchg
aad
enter
dec
fs
addr16
mov
or
sbb
jns
dec
add
add
add
and
add
cmp
push
clc
aaa
mov
add
inc
clc
mov
gs
loopne
test
data16
push
add
pushl
mov
add
add
add
add
pop
push
nop
xchg
and
xor
add
mov
push
add
mov
pushf
testb
and
add
jne
clc
stos
call
clc
sarl
clc
arpl
add
loope
jb
add
scas
jl
insb
arpl
add
add
and
or
clc
mov
clc
push
add
aad
xor
clc
movsb
clc
sahf
std
mov
clc
jae
add
add
add
sbb
clc
out
fisttps
push
scas
sbb
xabort
int
aam
clc
push
mov
add
push
add
sub
add
test
push
and
push
add
aaa
jnp
test
movsb
clc
cmp
add
xchg
loope
inc
clc
xchg
lahf
mov
push
add
clc
sbb
ret
jl
inc
add
sahf
jmp
xabort
adc
add
sti
sar
ror
addr16
add
add
clc
shll
add
clc
das
loopne
xor
mov
clc
jmp
ret
clc
mov
add
aam
add
shl
xchg
jo
add
clc
loop
ja,pn
add
and
add
mov
add
add
xlat
sbb
add
add
add
clc
scas
mov
outsb
popa
add
out
mov
xor
add
cmp
lods
adc
add
pop
xchg
pop
pusha
add
lea
dec
out
adc
add
mov
add
scas
jnp
sub
add
dec
and
je
dec
mov
sar
add
pop
jo
add
add
sahf
mov
stos
cs
dec
fld
clc
mov
or
add
add
add
aam
inc
clc
and
add
mov
adc
fnsave
clc
ret
clc
push
lea
mov
clc
mov
and
add
lret
pop
mov
add
scas
cmp
mov
addr16
sar
xor
test
mov
xor
add
adc
add
clc
shl
leave
adc
add
add
mov
clc
addr16
mov
mov
mov
fs
flds
inc
clc
cld
add
add
test
dec
lods
out
fildl
add
ret
add
fsubs
mov
inc
add
clc
add
add
decb
inc
add
xor
and
add
mov
clc
test
mov
mov
cmp
or
fwait
data16
jecxz
inc
add
ror
push
insb
xchg
fcoml
add
add
sbb
clc
or
cmp
add
insl
sbb
mov
clc
pop
clc
test
aaa
jne
enter
cmp
outsl
fidivl
clc
hlt
je
pop
pushf
mov
push
aad
cmp
clc
and
add
clc
sar
push
out
int3
xchg
ret
clc
push
mov
clc
test
clc
cltd
adc
add
rcrl
add
add
mov
add
inc
add
cmp
xabort
and
add
clc
jp
add
add
pop
clc
sbb
clc
jmp
clc
cmp
clc
gs
and
add
ja
add
add
outsb
test
lods
xchg
sbb
clc
sbb
clc
js
sbb
aaa
aaa
sbb
add
sbb
shl
fcoml
sahf
sbb
mov
jge
inc
clc
xabort
xor
or
shlb
clc
push
add
dec
fimull
adc
add
clc
xor
add
cld
repz
sub
add
cld
mov
clc
stc
sub
pop
pushf
fsts
add
lret
and
add
pushf
jne
mov
clc
es
cmp
clc
in
loopne
cmp
xlat
jbe
rcrl
loope
hlt
lcall
clc
jge
mov
clc
dec
adc
add
cwtl
xlat
dec
clc
insb
pop
int3
lods
clc
adc
add
or
add
scas
cld
mov
add
add
mov
add
add
and
rcll
add
add
jecxz
in
xor
add
mov
xlat
or
adc
add
or
outsl
push
add
sar
sub
add
add
lea
out
xchg
daa
clc
or
pusha
add
and
add
test
js
jecxz
adc
add
add
add
xchg
inc
add
pop
decl
add
lret
add
mov
jge
fiadds
pushf
push
ja
in
clc
and
add
aam
xchg
lahf
mov
adc
repz
inc
clc
cmp
add
mov
addps
insb
dec
movsb
clc
jge
cmc
stos
cmp
clc
and
or
clc
fs
in
stc
pop
cs
mov
loopne
and
add
lock
repnz
pop
mov
insl
dec
mov
fsub
clc
pop
pop
lret
iret
push
jno
add
and
add
add
add
outsb
outsl
data16
sub
sub
je
jbe
clc
lods
mov
test
popf
rdmsr
add
pop
xbegin
xchg
outsl
cmp
xlat
lods
adc
add
add
clc
ret
clc
jb
add
mov
test
clc
inc
add
inc
clc
dec
scas
xchg
jo
add
loop
fucomip
outsl
and
add
add
std
flds
cmp
sbb
pop
imul
cwtl
xbegin
mov
movsb
clc
pop
lods
jae
add
add
repz
add
jg
add
mov
mov
imul
xchg
cli
mov
add
mov
mov
add
push
add
fs
mov
in
push
clc
lret
push
mov
clc
inc
clc
arpl
add
adc
cs
adc
add
popa
add
daa
clc
aam
std
mov
popf
xchg
pop
test
sti
inc
clc
pop
mov
add
mov
arpl
add
mov
add
pop
aas
in
lea
xor
add
dec
cmp
out
jns
clc
cmp
cmpsb
clc
or
jno
add
sbb
cmp
div
or
clc
clc
push
push
clc
enter
mov
mov
imul
xlat
ja
clc
dec
mov
clc
data16
dec
xchg
fidivs
dec
stos
or
ds
add
inc
clc
sar
hlt
ja
dec
xchg
nop
xlat
add
add
mov
int3
fmuls
scas
mov
sub
cwtl
jmp
test
jnp
push
add
cwtl
in
imul
or
nop
inc
add
xchg
xchg
mov
fidivrs
clc
out
mov
clc
std
cmp
clc
cmp
add
cmp
cmp
sbb
jg
adc
add
sbb
clc
cmpsl
clc
fadds
adc
add
or
int
cmpsb
clc
push
add
jns
fcomip
outsl
mov
out
cmp
test
sub
jp
int
xbegin
pop
jp
out
loopne
and
clc
cmp
clc
jbe
clc
mov
add
movsb
clc
pop
push
add
jne
clc
and
jl
cmp
add
pusha
add
pop
pop
test
roll
cs
adc
jns
sub
add
psubusb
daa
clc
pop
adc
add
add
add
bnd
sbb
mov
lret
clc
pop
test
mov
loopne
jecxz
sub
enter
add
pop
clc
in
outsl
loop
and
add
cltd
push
mov
lret
pop
ljmp
sahf
mov
mov
add
rcll
add
pop
cmp
add
sar
cmp
xor
add
add
lock
add
push
add
es
add
add
add
or
sbb
clc
shl
dec
push
sub
mov
add
and
add
clc
mov
adc
add
mov
mov
clc
lret
aam
clc
dec
sbb
cmp
fs
cmp
clc
mov
ja
push
call
jne
hlt
push
add
jg
ss
test
cmp
mov
clc
inc
clc
es
xabort
xor
add
add
call
add
divps
clc
jo
add
into
cmp
clc
sbb
es
cmp
dec
inc
clc
lret
add
jb
add
push
xor
add
clc
testb
xor
add
xchg
aas
outsl
ja
clc
jb
add
pop
jp
cmp
stos
pusha
add
cmpsl
clc
pop
mov
clc
xor
pop
movsl
clc
bound
add
ret
add
add
clc
add
lret
adc
add
clc
jnp
clc
xor
add
jbe
add
arpl
add
xchg
jbe
adc
add
clc
shrl
fimull
test
add
mov
add
xchg
mov
clc
pop
clc
inc
clc
movsb
clc
clc
xchg
mov
lea
sbb
clc
mov
add
inc
clc
jmp
adc
add
add
test
xor
cmpsl
clc
outsb
sub
repnz
add
clc
sub
int
cmp
add
int
push
jb
add
clc
scas
repnz
movsb
clc
ret
clc
dec
cmp
jl
push
jne
lods
cmc
sahf
rclb
add
adc
add
lods
inc
clc
and
add
mov
add
loope
pop
mov
clc
pop
sahf
pop
push
add
add
clc
push
mov
and
add
adc
add
fisubrl
mov
and
add
inc
add
data16
hlt
mov
add
add
sub
ret
clc
xchg
gs
loopne
aad
push
push
repz
stc
ret
clc
out
std
sub
clc
xor
add
out
adc
mov
add
sahf
and
add
clc
rcll
add
add
sub
mov
mov
cmp
pop
lret
out
lock
mov
clc
cld
js
inc
clc
scas
pop
sub
mov
es
sbb
pop
pop
ret
jp
fstpt
add
arpl
add
add
mov
or
dec
testl
add
int3
mov
lret
cmp
test
clc
fcmovb
clc
outsl
shl
outsb
dec
ds
test
add
inc
clc
in
push
inc
add
adc
add
clc
xchg
mov
add
xchg
pop
clc
xchg
test
in
sar
add
and
pop
sbb
add
fs
push
mov
jne
pop
outsb
push
dec
test
data16
mov
or
clc
add
sbb
fmuls
and
add
mov
clc
cmp
clc
stc
movsb
clc
sarb
mov
rcl
mov
cmpsl
clc
add
lret
xor
add
add
cmp
xor
add
add
lret
add
add
clc
jl
nop
popf
outsb
mov
add
push
mov
mov
add
repz
add
add
mov
add
sarb
sbb
out
pusha
add
out
mov
mov
rcll
idivl
icebp
jne
mov
sbb
clc
pop
cld
jecxz
mov
pop
ljmp
add
out
sub
add
cmp
clc
mov
add
and
add
enter
add
lock
jne
push
pop
lods
dec
cmc
cmp
pop
fcmovnu
cwtl
add
add
add
clc
insb
fidivs
add
out
ret
clc
pop
push
ret
mov
jne
clc
lahf
pop
mov
test
clc
mov
notl
add
mov
xchg
push
and
mov
clc
jl
clc
sahf
or
clc
mov
add
cmp
int3
test
mov
push
call
mov
add
sub
push
sbb
add
add
in
inc
clc
mov
fmul
push
add
clc
js
lock
mov
shl
clc
or
lret
add
repnz
pop
test
jne
sar
lock
add
add
clc
in
mov
pusha
add
or
ja
xlat
cmp
xor
clc
lret
add
pushf
sbb
scas
fwait
loopne
xchg
sub
enter
add
int3
es
cmpsl
clc
cmpsb
clc
mov
mov
mov
je
add
add
imul
or
pop
push
jnp
pop
fucomip
xchg
mov
cmp
clc
push
add
mov
fisubrl
lahf
cmp
add
add
clc
icebp
lret
popa
add
and
add
add
testl
add
test
add
add
jge
seto
or
mov
sti
stc
iret
lea
movsl
clc
outsl
loope
jbe
clc
int
mov
push
es
fs
push
adc
add
add
stos
es
pop
mov
mov
clc
int
clc
clc
lods
das
icebp
lea
add
mov
clc
cmp
enter
fldt
xbegin
aas
add
add
add
call
cmp
fcoms
cmp
clc
cld
push
add
xchg
inc
clc
or
clc
dec
cmpsl
clc
fistpl
and
add
stos
ja
add
cmp
xchg
add
add
test
jle
clc
push
into
fcmovb
clc
lahf
aam
add
outsb
aam
and
add
mov
inc
clc
xchg
push
insl
dec
adc
add
add
push
or
sbb
ss
add
mov
add
clc
cmpsl
clc
push
lea
mov
clc
pushf
test
clc
push
add
mov
aam
mov
jle
clc
push
jmp
clc
aaa
sub
add
cld
mov
clc
lret
sar
lret
es
je
add
clc
push
fstps
clc
es
loopne
or
clc
mov
fwait
imul
jo
add
je
add
loopne
adc
add
add
push
mov
clc
ret
popa
add
icebp
pop
or
add
dec
cmp
inc
clc
xchg
xor
add
clc
xor
clc
dec
xchg
cs
push
mov
cmp
stc
test
cmp
jle
sub
clc
mov
add
push
add
inc
clc
sti
mov
mov
add
xbegin
cmc
mov
clc
jb
add
out
hlt
data16
pop
insb
bound
add
test
clc
sbb
pushf
add
add
add
xchg
push
enter
add
sbb
inc
clc
cmc
mov
stos
push
daa
clc
mov
arpl
add
inc
clc
jnp
clc
out
clc
or
std
js
mov
add
faddl
add
cld
leave
fnsave
mov
dec
sahf
xchg
adc
add
and
cmc
mov
shlb
add
clc
adc
add
repnz
push
add
mov
add
add
xor
add
mov
mov
clc
inc
add
mov
cs
push
cwtl
bound
add
lods
pop
adc
clc
jge
lcall
clc
addr16
bswap
dec
inc
clc
js
inc
clc
repz
mov
clc
sar
or
clc
and
add
clc
call
dec
cmp
pop
loopne
pop
cmp
cmc
bound
add
or
cmc
mov
fs
inc
add
outsb
cs
stos
test
clc
sar
cmp
clc
pop
dec
sar
add
push
inc
clc
pop
jmp
dec
or
jle
sub
xchg
xchg
jae
add
sbb
jne
cmp
clc
loopne
dec
push
push
add
int3
add
add
lock
add
ret
clc
pop
cmp
or
jmp
aad
xchg
dec
jmp
clc
add
add
add
mov
push
clc
in
inc
clc
int3
cmp
add
pop
sub
clc
test
aas
push
sar
clc
addr16
ds
cwtl
adc
add
iret
cmp
cmp
shlb
add
mov
jg
sar
scas
sub
add
addr16
clc
divb
sarb
clc
adc
add
lock
das
pushf
loope
mov
out
lret
adc
add
add
add
es
xchg
inc
add
out
iret
jns
add
mov
adc
add
clc
imul
sbb
clc
inc
clc
lods
lret
jmp
clc
out
or
nop
repnz
cmp
mov
cmp
add
jne
clc
outsl
test
xor
add
clc
mov
fisttpll
add
loop
es
xchg
fs
gs
pop
stc
add
add
mov
aad
clc
loopne
or
add
fldcw
xor
add
cmc
cli
arpl
add
add
pop
xor
add
add
clc
lock
add
leave
notb
add
jno
add
leave
jnp
test
call
add
popa
add
xchg
sub
clc
sub
data16
xor
add
adc
dec
call
fistpll
in
jb
add
loopne
out
rorb
popf
sahf
sbb
add
ljmp
add
add
push
and
add
add
clc
divl
mov
add
clc
inc
add
test
repnz
clc
add
add
add
lock
in
repnz
cmp
clc
push
add
mov
rcr
dec
ret
clc
mov
mov
sbb
dec
mov
inc
add
rcl
dec
inc
add
lods
arpl
add
inc
add
test
cmpsb
clc
xchg
loope
aaa
or
add
movsb
clc
or
sar
add
jo
add
add
add
add
sub
fcoms
add
mov
cmp
fucomp
incb
dec
or
clc
mov
add
push
add
jne
fcmovne
pop
jo
add
pop
jno
add
push
add
add
clc
pextrw
clc
push
lods
ds
add
lret
mov
clc
inc
clc
dec
push
add
or
clc
adc
add
sbb
add
add
or
cwtl
mov
shrb
clc
xchg
dec
and
add
xchg
lcall
jb
add
push
add
leave
dec
nop
inc
clc
push
stos
mov
add
mov
adc
add
lods
andps
pop
movsl
clc
or
stos
inc
add
and
push
add
lock
add
and
mov
sar
ret
clc
push
fists
clc
dec
inc
clc
call
clc
push
clc
mov
jo
add
add
pop
cmp
add
mov
imul
mov
popf
pop
clc
imul
add
clc
cmp
inc
clc
cltd
divl
add
xchg
dec
xabort
testb
clc
jne
out
jb
add
pushf
or
add
fwait
sub
lahf
jge
clc
inc
add
sbb
pusha
add
clc
movsb
clc
inc
clc
lahf
call
aaa
mov
sbb
add
xchg
xchg
jbe
clc
xor
add
fdivrp
mov
scas
js
sar
imul
cmp
clc
mov
in
outsl
xchg
call
inc
add
sub
clc
int3
pop
dec
xor
stos
push
clc
push
inc
clc
adc
add
in
in
insb
aam
add
add
movsl
clc
sub
clc
in
adc
add
inc
add
and
add
out
js
clc
push
xchg
cs
jp
add
pop
jnp
jle
fidivs
add
mov
push
lret
clc
xchg
nop
mov
clc
pop
add
add
out
sub
mov
clc
arpl
add
repnz
jb
add
clc
push
test
add
cwtl
outsb
pop
sub
add
out
xlat
dec
adc
clc
bound
add
cmp
pop
lods
jl
cmc
xor
add
lcall
clc
js
dec
sbb
lock
clc
add
add
adc
dec
jb
add
in
or
clc
mov
xor
add
add
and
add
jnp
sar
cmp
add
push
add
jg
clc
cltd
jge
cmp
xabort
clc
pop
pop
decb
sbb
add
aad
or
push
add
mov
aam
xchg
inc
add
mov
add
sub
clc
dec
int
xor
add
add
jo
add
add
add
clc
test
popa
add
and
add
pop
jnp
or
inc
add
in
and
add
jb
add
add
or
push
leave
lcall
adc
add
jmp
out
scas
inc
add
daa
clc
cmp
add
rclb
add
stos
testl
add
adc
inc
clc
inc
add
bound
add
test
add
je
add
sbb
mov
dec
sbb
outsl
adc
mov
add
scas
pop
sub
add
into
add
add
flds
dec
mov
clc
xor
add
adc
add
add
and
clc
jge
add
or
mov
ffreep
clc
push
adc
add
or
jno
add
nop
stos
jno
add
clc
mov
clc
roll
add
notb
add
clc
xchg
push
add
lcall
and
add
add
imul
add
jp
or
clc
daa
clc
add
add
inc
add
add
add
clc
sahf
divb
add
xor
add
add
mov
mov
push
int
nop
cmp
add
or
clc
into
or
clc
jo
add
fsubrl
push
cli
jo
add
jne
and
add
clc
sub
ret
outsb
stc
cvtpi2ps
inc
clc
jno
add
add
fsub
clc
adc
add
dec
iret
inc
clc
jge
clc
data16
cwtl
cmp
xchg
push
clc
cli
mov
clc
mov
cmp
popf
add
add
sahf
movsl
clc
fnsave
add
femms
lret
jno
add
in
inc
add
inc
add
inc
add
cmp
fldcw
shlb
out
or
push
add
pushf
iret
pop
mov
jmp
jo
add
dec
xchg
mov
loop
mov
add
aam
clc
rcr
lea
clc
sub
jb
add
cmp
jge
lea
bound
add
add
clc
jle
clc
lods
cmp
add
adc
add
jne
cmp
cltd
stos
stos
xabort
push
add
mov
and
add
shrb
add
push
adc
add
clc
mov
mov
sbb
inc
clc
into
xchg
pop
gs
popa
add
xchg
sbb
stos
in
stos
lret
lods
movsb
clc
pop
inc
add
pop
xchg
scas
imul
cmp
scas
xchg
dec
bound
add
int
clc
fidivrl
mov
clc
sub
sbb
add
inc
add
lcall
clc
stc
iret
push
ret
clc
cwtl
adc
add
add
fwait
decl
or
clc
xchg
mov
jne
add
jecxz
sub
into
test
faddp
clc
xchg
pop
adc
add
and
in
cmp
mov
cli
xor
add
clc
or
clc
fs
xchg
or
add
xchg
mov
testb
testl
loope
imul
add
int3
lahf
lahf
push
add
xchg
add
inc
add
jecxz
fadd
clc
adc
mov
ror
ret
in
cmp
test
pop
add
add
add
mov
rcrl
adc
out
ret
add
clc
cmp
add
push
clc
leave
jo
add
clc
imul
cmp
inc
add
cltd
xor
add
jo
add
decb
shr
mov
ljmp
test
aad
clc
cmp
mov
mov
cmp
mov
int3
push
adc
clc
sti
lods
jae
add
lods
xchg
xor
add
fcompl
hlt
stc
sar
jge
add
push
dec
dec
gs
add
add
mov
daa
clc
pop
clc
adc
clc
fcmovnbe
mov
loop
in
sub
cmp
fcoms
xor
add
cmp
push
cmp
fisubs
add
xor
add
xor
add
add
dec
stos
test
adc
add
inc
add
pushf
sub
sub
add
add
xchg
movsl
clc
aad
mov
add
aas
sbb
add
mov
cmp
push
lcall
out
jae
add
add
or
clc
mov
and
insb
and
add
add
dec
repz
add
mov
adc
sbb
add
test
clc
daa
clc
adc
xchg
lods
imul
push
clc
addr16
popl
add
stos
xchg
pop
pop
xor
add
mov
or
aaa
mov
pop
pop
jae
add
dec
nop
iret
decl
clc
or
pusha
add
adc
add
shrb
into
pop
jecxz
push
push
add
stos
imul
cmc
mov
test
xor
add
add
xabort
mov
cmpsl
clc
pop
sub
cmp
add
pop
insb
lods
jl
inc
add
outsb
ljmp
mov
add
add
clc
xchg
aaa
sbb
push
mov
push
xor
add
inc
clc
data16
jg
cmp
clc
pop
outsb
jge
clc
insl
mov
rcrb
push
dec
test
xor
add
clc
add
add
add
xchg
aas
cmp
add
adc
add
xor
add
popa
add
loopne
gs
jb
add
addr16
in
push
add
loop
pop
jb
add
mov
mov
not
xchg
bound
add
pusha
add
sar
or
add
clc
jmp
das
sbb
and
add
or
lret
sar
sbb
jl
add
sub
add
inc
add
and
jno
add
add
add
ja
sahf
dec
xchg
mov
add
mov
ret
add
loop
pop
mov
adc
rclb
add
inc
clc
fsubs
add
daa
clc
mov
add
adc
mov
nop
push
clc
imul
pop
int3
outsl
cmp
in
scas
sti
imulb
in
xchg
mov
inc
add
mov
cmp
test
fdivp
add
add
add
jns
adc
add
dec
sub
test
xlat
add
arpl
add
add
mov
clc
dec
stos
arpl
add
add
add
add
add
push
jo
add
add
data16
sti
lods
jge
clc
inc
add
aas
clc
stos
jmp
je
or
inc
clc
ret
cmp
pop
outsl
lods
and
add
and
fwait
inc
clc
in
arpl
add
xlat
hlt
dec
enter
clc
into
fs
or
data16
mov
add
dec
mov
clc
mov
add
clc
lahf
xor
add
add
and
and
mov
mov
clc
or
inc
add
xor
mov
add
in
imul
daa
clc
adc
clc
daa
clc
gs
jle
xbegin
mov
jle
in
and
mov
add
fldenv
push
pushl
add
mov
es
xor
add
clc
dec
fldl2t
sbb
or
sar
xchg
cmp
push
cmpsl
clc
inc
add
pop
jecxz
ja
jmp
or
call
add
clc
push
mov
sbb
mov
out
inc
add
fcoms
xchg
fstps
pop
add
add
and
pextrw
push
add
lea
mov
movsb
clc
clc
mov
and
add
sbb
pop
test
dec
hlt
adc
add
add
cltd
pusha
add
inc
clc
cmp
fwait
mov
clc
das
sldt
add
pop
clc
clc
repz
clc
cmpsb
clc
ss
cmp
int3
xor
add
mov
clc
aaa
cmp
cmp
mov
inc
clc
mov
add
push
mov
ss
pop
jl
addr16
popf
repnz
pop
jbe
sub
add
inc
clc
adc
add
push
sub
imul
call
add
cmp
add
cmp
add
sti
mov
test
loop
mov
add
iret
pusha
add
aad
imul
clc
dec
xchg
in
jne
cs
fimull
or
lods
data16
push
mov
add
xchg
push
add
jb
add
aad
jmp
clc
jp
xchg
push
fmull
fwait
adc
add
push
add
mov
add
add
mov
mov
sbb
clc
adc
movsb
clc
jecxz
fsubrs
or
cmp
or
aas
and
mov
add
adc
add
clc
cmc
add
add
loope
mov
add
test
pop
clc
mov
add
and
mov
adc
add
pusha
add
jae
add
add
dec
inc
clc
push
lret
sbb
mov
and
add
add
cmp
add
add
mov
add
add
clc
mov
add
scas
shr
imul
add
push
aam
pop
cli
pushf
repz
dec
cmpsb
clc
outsl
scas
sar
clc
testb
add
add
test
clc
mov
mov
push
cmp
jg
sti
pusha
add
call
inc
add
in
xchg
arpl
add
clc
xor
add
add
sarl
push
add
and
add
add
cwtl
mov
fstpl
sbb
data16
sahf
mov
add
pop
mov
mov
xchg
jae
add
add
sarl
clc
jge,pt
add
and
add
add
xchg
dec
lea
test
add
loope
popa
add
and
add
add
in
add
mov
add
insb
lret
lret
jns
add
cmpsb
clc
mov
ficoms
clc
push
push
add
inc
add
sar
adc
add
es
push
add
add
clc
stos
movsl
clc
lods
pop
imul
arpl
add
add
bound
add
add
adc
add
xchg
outsb
aaa
push
add
aaa
stc
pop
or
add
cmp
cmp
mov
clc
jl
clc
dec
mov
jmp
jae
add
add
add
and
add
add
dec
mov
inc
add
out
jae
add
cltd
mov
add
clc
pop
jecxz
sti
lret
clc
cmp
add
fsubr
fisubs
add
outsb
add
mov
je
out
jge
add
sbb
clc
jb
add
lret
and
add
clc
add
mov
sahf
jg
add
mov
aas
movsb
clc
insb
mov
cwtl
mov
jbe
jo
add
add
dec
lods
push
enter
clc
and
add
add
mov
jb
add
loope
jl
add
popf
sti
sar
clc
xchg
adc
add
mov
clc
mov
add
add
sarl
inc
clc
call
push
xchg
out
loope
sub
add
xchg
dec
aaa
inc
add
insb
cmp
sbb
bound
add
clc
repz
clc
jb
add
je
nop
iret
dec
lahf
xchg
in
mov
pushf
sub
fadds
jge
pop
icebp
inc
add
pop
push
movsl
clc
fistpll
add
jg
add
mov
add
addr16
fs
lock
sub
pop
pusha
add
push
xor
mov
inc
add
inc
clc
or
dec
icebp
addr16
sbb
add
jg
jne
fdivp
adc
add
sti
stos
fisubrl
clc
popf
push
fucomip
mov
add
mov
jne
sub
clc
testb
add
or
add
sub
test
mov
clc
xchg
daa
clc
mov
cmp
clc
or
clc
push
aam
repnz
add
jp
stos
popa
add
sar
clc
sbb
inc
add
movsb
clc
push
cmp
jae
add
jl
add
add
jbe
clc
repz
clc
pop
xchg
fdivl
add
jmp
xor
add
and
add
mov
pop
ss
daa
clc
mov
in
imulb
add
adc
cli
mov
ss
sar
clc
hlt
nop
dec
mov
icebp
mov
clc
xchg
aaa
sub
clc
shll
add
add
add
or
pusha
add
sbb
add
add
into
outsb
add
add
lea
xchg
icebp
cmp
and
add
fcomps
cmp
jle
add
pop
sub
or
clc
test
xor
add
adc
add
and
add
add
cmp
mov
je
mov
movsl
clc
jo
add
pushl
add
mov
loope
sub
mov
pop
jbe
and
add
cmp
clc
dec
cmp
movsb
clc
nop
scas
cmp
adc
add
clc
stos
test
mov
mov
outsb
push
add
inc
clc
sahf
or
lret
repnz
scas
int
xlat
dec
and
add
xchg
mov
clc
pop
dec
add
add
add
lock
into
inc
clc
mov
xbegin
mov
adc
add
add
add
pop
sbb
mov
push
call
pop
fdivl
mov
enter
add
clc
sub
and
add
clc
push
das
jmp
dec
push
add
pushf
mov
add
and
add
je
mov
add
push
aam
add
push
mov
clc
mov
test
and
add
clc
sahf
dec
leave
aam
pop
pop
lcall
pop
or
cmp
add
adc
add
inc
add
pushf
movsl
clc
rcrb
clc
loope
adc
xchg
dec
or
aaa
std
cltd
shrl
push
pushf
xchg
mov
add
pop
mov
out
or
xchg
fbld
inc
add
test
clc
jb
add
add
scas
lea
clc
loop
bound
add
notl
add
pop
mov
add
fs
ret
clc
je
inc
clc
adc
add
and
add
cmp
add
cmpsb
clc
or
cmpsb
clc
pop
jp
add
mov
and
add
add
push
add
mov
out
xlat
dec
sar
dec
std
and
add
or
scas
std
adc
add
adc
add
aad
push
push
jge
je
add
mov
add
popf
cwtl
and
add
sbb
add
into
or
clc
test
pop
mov
loopne
pop
xchg
adc
add
add
icebp
aas
xchg
pop
cwtl
rolb
add
sub
mov
add
ret
aas
xchg
es
or
add
push
add
bound
add
sbb
push
add
dec
sub
sub
clc
pop
lods
push
sbb
rcrl
stos
xor
add
sub
sub
mov
xor
add
loop
out
stc
clc
pop
fistps
mov
sarb
jle
sbb
mov
enter
jle
mov
clc
pop
hlt
jb
add
push
adc
add
add
clc
cmp
and
add
push
lahf
movsl
clc
pushf
push
clc
pop
enter
add
sbb
adc
add
bound
add
insb
jnp
add
mov
add
je
imul
dec
loope
adc
add
or
mov
clc
cmp
sti
or
add
jns
mov
mov
or
add
cmpsl
clc
je
xchg
xor
add
push
add
imul
xchg
add
mov
clc
cmp
add
push
mov
jmp
test
mov
adc
add
cmp
jae
add
clc
sub
cmpsb
clc
loopne
inc
clc
push
leave
cmp
xchg
not
dec
lock
pop
jg
data16
xchg
je
call
loop
sub
cwtl
jecxz
mov
jmp
sar
sub
cmpsb
clc
mov
add
add
gs
push
in
daa
clc
cmp
imul
sarl
clc
or
add
xchg
fs
mov
push
inc
clc
lahf
filds
clc
or
add
jno
add
mov
out
inc
add
loopne
es
fisttps
add
out
fsub
clc
and
add
and
xchg
xor
add
sbb
popf
cmp
clc
add
ret
clc
or
mov
clc
mov
mov
clc
loope
xchg
mov
jg
es
lea
push
add
mov
mov
mov
and
add
pop
test
test
add
add
add
xchg
leave
jg
dec
insb
gs
loopne
sar
dec
or
clc
fidivrl
add
add
cmc
xabort
pop
clc
sub
add
sbb
jle
sbb
add
add
add
pop
std
data16
test
mov
xor
add
aam
pop
adc
add
push
or
clc
cs
clc
popa
add
shll
and
add
add
movsb
clc
pop
xor
add
sbb
clc
mov
add
outsl
pop
fs
sarb
hlt
ffree
clc
mov
sbb
jmp
add
add
or
or
clc
cmp
jns
jecxz
mov
mov
clc
hlt
or
mov
add
mov
and
cmp
jo
add
ss
jmp
repnz
pop
push
jbe
stos
nop
mov
adc
add
add
add
loopne
dec
push
dec
addr16
and
add
lahf
addr16
int3
dec
call
inc
add
push
jno
add
clc
xchg
testl
mov
push
add
push
add
test
clc
add
add
push
sbb
add
and
adc
sbb
clc
repz
clc
cwtl
ss
clc
mov
xchg
pop
shll
sbb
es
adc
add
push
je
add
add
ss
mov
lret
dec
adc
add
lret
xchg
outsl
cmp
jl
fistpl
cmp
loop
and
add
sahf
mov
lret
clc
loop
and
add
xchg
leave
xor
add
add
xchg
sub
xchg
push
call
adc
add
add
add
add
sbb
sbb
cmp
inc
clc
jb
add
clc
push
clc
add
std
outsb
in
cmp
js
in
xor
xchg
and
add
stc
insb
imul
mov
jg
dec
xchg
sbb
pop
cld
xchg
ret
clc
xchg
test
lahf
mov
gs
popa
add
adc
add
clc
or
sbb
add
pusha
add
pushf
cmpsb
clc
xchg
in
cmp
clc
aad
inc
clc
xor
add
out
fwait
bound
add
add
xchg
js
scas
sar
mov
mov
xchg
jl
test
push
jo
add
andnps
adc
jecxz
mov
imul
xchg
pop
lods
jns
cltd
sub
clc
cmpsl
clc
cmp
aam
mov
inc
clc
fcmovnu
push
cmp
add
fisttpll
clc
insb
push
clc
add
add
inc
add
and
add
add
xor
aaa
jmp
xabort
add
fstps
int
mov
clc
fstl
add
ret
xor
add
xor
add
sar
and
add
clc
xor
add
or
push
mov
jle
inc
add
push
test
dec
add
add
sbb
cmpsb
clc
dec
popf
sub
fldcw
popa
add
jle
mov
clc
jnp
ficoml
add
adc
add
ret
clc
call
out
xbegin
clc
add
add
mov
clc
cmpsl
clc
outsl
popf
je
in
cmpsb
clc
cmp
mov
or
je
inc
clc
js
clc
lods
cmp
add
inc
clc
test
mov
add
cld
cmpsl
clc
jne
pop
clc
push
add
xchg
cmp
lret
sahf
xor
dec
loope
pop
shrl
in
test
fildll
lret
data16
sar
add
fcmove
adc
enter
dec
xor
add
add
add
fistpll
daa
clc
inc
clc
cmp
into
inc
clc
push
addr16
push
xchg
outsb
mov
add
mov
clc
lret
sti
fs
sarb
data16
lods
and
add
jno
add
mov
add
mov
pusha
add
jnp
sbb
add
mov
push
ss
sbb
clc
pushf
shl
inc
add
jl
clc
pop
cltd
test
sar
xor
add
mov
cmp
mov
cmp
add
mov
cmp
cmp
add
test
clc
gs
xchg
jg
aam
ffreep
clc
jns
and
add
in
cmp
add
xor
add
cmp
stos
inc
add
or
test
clc
outsl
or
add
lock
add
cmp
add
gs
int3
xor
add
leave
jecxz
jo
add
dec
lahf
cld
std
add
add
cltd
mov
clc
insl
jg
add
mov
clc
stos
insb
mov
jne
arpl
add
push
sbb
push
xchg
push
add
xchg
lods
rcrl
stos
sub
clc
cmp
pusha
add
sub
or
mov
clc
mov
aam
pop
xchg
lret
clc
push
jmp
add
add
xor
add
add
add
and
test
add
push
addr16
mov
xchg
ret
clc
dec
jge
clc
adc
inc
clc
lret
mov
clc
scas
pusha
add
cmpsb
clc
repnz
clc
dec
loope
cmp
xor
add
mov
add
add
and
add
add
inc
clc
mov
cmp
fcompl
xor
add
clc
dec
pop
rorb
imul
xor
mov
push
mov
add
add
add
clc
or
aad
xchg
outsb
cmp
add
je
mov
cmp
pop
mov
clc
xchg
jmp
sub
mov
pop
dec
scas
cmpsl
clc
dec
mov
test
addr16
cltd
push
add
add
rclb
add
push
js
clc
lcall
das
xchg
jne
test
ja
clc
xor
add
clc
pop
mov
in
or
in
loope
mull
mov
add
mov
clc
or
mov
ret
sub
clc
and
add
cwtl
cmp
into
inc
clc
pop
sarb
mov
xlat
ds
xchg
stos
and
add
clc
sub
sbb
add
add
leave
pop
lea
add
inc
add
leave
pushf
jbe
pop
test
clc
inc
clc
hlt
mov
data16
mov
add
xor
add
fsubrs
push
add
repz
clc
push
add
sub
add
pop
popf
stos
dec
or
incb
clc
sub
mov
clc
and
add
repnz
cmp
add
adc
add
add
push
clc
and
add
popf
cmp
fistpll
dec
or
ds
clc
cwtl
lods
fdivs
add
cmp
add
push
or
clc
or
cmp
cmp
jns
jb
add
stos
movsl
clc
iret
sbb
cmpsb
clc
push
lahf
aaa
daa
clc
xchg
adc
push
imul
or
jge
jge
aad
clc
sar
clc
decb
popa
add
scas
pop
add
push
add
pop
daa
clc
addr16
dec
scas
push
add
mov
mov
ficoml
add
mov
clc
mov
stos
mov
ret
or
rcl
sbb
pop
add
add
add
int3
or
ficompl
add
add
add
pop
xchg
inc
clc
adc
add
clc
scas
mov
add
add
xchg
mov
inc
add
cmc
bswap
cwtl
dec
jbe
fwait
sub
lret
add
add
add
add
add
leave
lret
in
out
jb
add
xlat
scas
xchg
xchg
adc
int
mov
lea
clc
dec
xlat
fs
push
add
enter
xlat
dec
push
clc
mov
jbe
add
push
add
repnz
sub
clc
cmpsl
clc
lea
sbb
add
dec
fsubrp
cmp
add
ds
add
add
add
pop
clc
aam
add
xor
add
add
or
dec
lcall
and
sub
add
mov
clc
push
pop
fsubrl
loopne
stc
fildl
xchg
inc
add
sbb
add
aas
and
add
add
add
in
sar
add
inc
clc
xor
add
sub
mov
add
sub
and
add
add
inc
add
es
adc
add
clc
cmp
sti
addr16
int
add
fld
clc
cltd
cmc
icebp
add
add
int
or
fwait
leave
and
add
sub
in
dec
stc
movsl
clc
sbb
cwtl
pop
clc
lret
clc
mov
ds
enter
add
leave
sbb
jae
add
adc
add
aaa
in
iret
dec
dec
jmp
add
cltd
pop
in
lahf
stc
add
clc
hlt
int3
ret
add
and
add
add
mov
iret
mov
or
mov
push
add
ret
clc
and
add
clc
lret
inc
clc
xchg
pop
test
push
mov
sub
pusha
add
adc
clc
push
mov
clc
dec
pop
bound
add
movsb
clc
cmp
clc
push
push
dec
mov
cmp
or
lods
lods
add
xbegin
in
xor
add
clc
shlb
xor
add
clc
add
popf
ja
mov
fistl
add
sahf
into
or
clc
imul
fs
push
cmp
push
add
mov
inc
clc
leave
ljmp
add
push
clc
out
cmp
sar
fcmovnu
push
sbb
clc
jg
lcall
push
jmp
clc
mov
clc
das
jnp
adc
add
add
add
xor
add
fisttps
or
leave
lahf
in
sti
daa
clc
fdivl
dec
xor
add
lods
ret
clc
mov
clc
inc
clc
cli
sarl
clc
xchg
xchg
push
in
mov
clc
std
inc
clc
cmp
outsl
jg
clc
mov
mov
add
jmp
lahf
lods
sbb
nop
push
adc
sar
mov
scas
js
add
mov
pop
adc
xchg
xor
add
ficomps
sahf
pop
xor
add
clc
cld
das
nop
pusha
add
sbb
aam
mov
mov
sub
pop
fwait
lcall
movsb
clc
mov
clc
sub
add
jnp
scas
mov
add
jg
addr16
xor
add
lock
mov
loope
jp
in
aad
mov
clc
jno
add
jns
inc
clc
mov
pop
add
add
clc
add
lock
add
add
data16
adc
add
clc
ds
xchg
decb
push
mov
add
add
inc
add
add
add
add
jge
mov
mov
es
ret
add
add
add
sar
pop
mov
sbb
add
stc
mov
cmp
inc
add
pop
stc
jb
add
add
add
cmp
clc
and
add
clc
or
test
mov
add
pop
clc
aad
jmp
aad
clc
or
add
pcmpeqd
insb
rcrb
dec
xchg
movsb
clc
test
imul
cmp
inc
clc
sbb
clc
adc
clc
cmp
clc
xor
add
push
add
mov
or
cltd
fstps
push
add
jge
add
ja
clc
mov
add
mov
add
mov
add
add
pop
pop
mov
adc
add
add
lcall
scas
ss
int
add
push
fisubrl
clc
fwait
imul
clc
arpl
add
add
mov
clc
inc
add
dec
mov
xchg
incb
fwait
xor
add
es
xchg
cmc
sahf
lods
sahf
push
enter
add
xor
add
add
cmp
cmp
add
add
cmpsl
clc
cmp
push
notb
sbb
pushf
sbb
ret
clc
mov
jns
clc
scas
cwtl
jnp
mov
mov
xchg
pushl
dec
xor
cmp
test
sbb
clc
push
add
jg
xbegin
cwtl
test
sar
mov
add
mov
xchg
add
or
scas
in
pop
shll
add
adc
add
clc
test
add
add
add
int3
dec
add
cmp
clc
or
add
add
add
popl
add
add
jmp
clc
xchg
xchg
sti
dec
ficoml
aad
cmp
jge
stc
push
xchg
fwait
xchg
es
scas
cmp
add
add
push
stc
leave
mov
add
add
add
push
add
js
clc
lea
das
mov
add
fs
mov
or
jl
mov
lret
loopne
test
wrmsr
add
jno
add
sub
mov
clc
xlat
loope
xchg
out
bound
add
jnp
cmp
lea
add
xor
add
add
mov
dec
adc
lcall
pop
cmp
sar
clc
jnp
in
outsl
mov
mov
cmp
add
ss
sub
add
sub
loopne
push
mov
je
add
jmp
mov
mov
add
and
add
in
xbegin
ljmp
xor
add
sbb
xor
add
das
loope
outsb
xor
stc
rcrb
mov
inc
add
nop
mov
add
ss
cmp
loopne
and
add
clc
push
and
add
call
in
ljmp
add
push
xchg
cmp
pop
jb
add
popa
add
sar
lret
loopne
fmuls
out
dec
pushf
pop
testl
mov
pop
add
add
dec
pop
clc
push
add
addr16
fistpl
dec
arpl
add
adc
clc
xor
mov
clc
pushf
cltd
jmp
add
lret
and
add
outsl
jl
clc
sbb
cmc
ror
mov
ficoms
clc
sub
in
scas
cltd
in
call
nop
popa
add
cld
shll
add
push
or
push
cmp
lret
sbb
inc
clc
inc
add
sbb
add
icebp
bound
add
in
mov
clc
aaa
pushf
cmp
xlat
fstl
add
mov
add
sbb
clc
and
add
fimuls
in
pop
xabort
add
js
add
in
mov
clc
pop
xchg
mov
outsl
or
ljmp
add
mov
mov
and
add
adc
add
ja
inc
add
mov
addr16
mov
aam
dec
loop
pop
and
add
pop
clc
jne
clc
xor
add
dec
jb
add
xbegin
in
pop
clc
pop
pop
inc
add
cli
rcrl
notb
js
add
add
push
add
aad
lret
data16
aaa
xchg
pop
xor
add
add
push
xchg
fmuls
cwtl
mov
add
sar
cmp
add
add
loop
scas
push
add
insl
mov
dec
fcoml
add
and
add
add
xchg
in
xor
clc
xchg
mul
clc
jns
cmp
clc
je
add
cmpsl
clc
jl
clc
push
mov
add
pop
add
add
mov
cmp
vsubps
push
add
bound
add
fadd
clc
mov
jmp
sti
or
addr16
inc
add
clc
cmp
sar
clc
xchg
inc
clc
mov
inc
clc
mov
add
xchg
stc
jne
pop
mov
push
add
push
clc
sar
outsb
push
pushf
add
add
clc
mov
add
xor
add
and
add
je
jne
ja
push
add
out
mov
clc
ficoms
imul
mov
ja
aad
sub
mov
mov
insb
dec
mov
fs
loope
loope
int
hlt
jge
scas
push
fucomp
mov
clc
pop
xbegin
inc
add
imul
xor
add
pop
sub
clc
xor
clc
sub
add
jp
mov
clc
jns
jmp
and
dec
mov
add
add
es
out
xor
add
and
mov
nop
pushf
cmp
and
add
pop
sub
xor
add
jno
add
ret
clc
push
pop
and
add
xchg
push
mov
cli
adc
add
mov
cmp
dec
insb
dec
mov
push
cli
fmul
sar
add
add
add
or
mov
jo
add
clc
cmp
clc
cmp
dec
test
aas
xbegin
xor
add
add
movsb
clc
push
popf
std
das
dec
xchg
jmp
jmp
clc
or
sar
xor
add
lret
sub
add
sub
mov
sarl
lret
sti
add
pop
mov
push
jmp
jle
enter
out
outsl
fs
pop
jp
imul
dec
fs
adc
inc
clc
push
adc
add
xlat
pop
dec
loope
data16
fimuls
icebp
pop
xor
nopl
pop
repz
add
mov
add
gs
clc
cmp
shrl
push
cmp
fiadds
add
pop
cmp
cld
stos
sti
std
stos
or
lods
push
mov
jecxz
sahf
ret
clc
sub
test
mov
xchg
stos
je
loope
push
clc
and
add
bound
add
data16
call
push
ss
xchg
stos
add
add
aam
repnz
clc
outsl
je
mov
clc
fildl
add
sbb
xchg
test
pop
pop
mov
mov
add
mov
xabort
pop
or
add
or
add
sbb
jecxz
add
push
add
int
fwait
negl
clc
movlps
add
rorb
out
xchg
xor
add
jecxz
repz
inc
clc
gs
hlt
xchg
inc
add
sbb
clc
mov
test
adc
add
add
jl
add
add
clc
add
add
call
cld
js
lods
fs
rcrl
cwtl
dec
movsl
clc
mov
fwait
mov
jns
insl
ret
add
pushf
inc
add
enter
dec
mov
add
dec
enter
pop
jbe
xchg
sbb
sub
notl
add
fcompl
add
lods
imul
es
or
clc
mov
clc
leave
out
mov
clc
leave
jne
add
insb
ja
lea
add
fiadds
clc
clc
fwait
loope
mov
xor
add
lret
outsl
cmp
clc
sti
rcrl
mov
cmp
clc
arpl
add
adc
add
clc
sub
clc
and
add
loopne
xchg
pop
clc
and
add
lods
xabort
mov
mov
push
sbb
add
fistps
scas
xchg
dec
adc
add
inc
add
mov
cmpsb
clc
loopne
xchg
ret
clc
je
clc
scas
push
add
cmpsl
clc
scas
inc
add
xlat
mov
add
in
pop
jmp
pop
das
push
add
iret
cld
lods
push
in
out
sbb
clc
imul
push
add
out
aam
clc
cmpsb
clc
sub
push
movsl
clc
pop
stc
lret
enter
add
or
jge
stc
jne
out
jl
mov
add
clc
outsl
mov
add
lret
into
popf
and
add
sbb
insb
push
shrb
add
add
add
or
clc
sbb
or
cmp
pop
incl
in
arpl
add
add
xchg
mov
add
xor
add
add
xchg
mov
repz
jne
xor
add
clc
int3
data16
icebp
mov
dec
or
lods
and
add
pop
sahf
sar
mov
js
pop
push
sbb
add
add
add
rolb
insl
jnp
sbb
fidivrl
jae
add
jp
clc
mov
xchg
push
leave
sub
cmp
mov
add
das
push
add
or
iret
in
enter
xor
daa
clc
fidivrs
add
clc
sbb
mov
fwait
mov
data16
add
add
clc
paddw
push
and
add
pop
into
pop
xor
clc
mov
add
add
add
or
add
xchg
sub
add
xor
adc
add
add
loopne
lcall
or
add
lods
addr16
dec
call
inc
clc
das
mov
clc
xchg
lock
fnstenv
rorb
in
cmp
inc
clc
or
sbb
ds
adc
clc
loopne
mov
mov
dec
push
add
jge
clc
push
nop
add
cmp
add
add
lea
add
lock
sub
cwtl
ret
jnp
mov
mov
scas
clc
lcall
and
add
xchg
lea
test
clc
jb
add
or
clc
sahf
xchg
add
add
fs
repz
add
cmp
add
clc
stc
xor
add
add
add
push
push
add
inc
clc
mov
and
add
cmpsl
clc
push
add
jo
add
add
clc
and
add
add
arpl
add
push
clc
cmp
add
mov
clc
pop
out
movsb
clc
add
imul
fisttps
fs
loope
rcrb
add
sar
test
ja
clc
mov
clc
sti
cwtl
jne
mov
pop
and
std
or
stos
sbb
adc
add
clc
cmp
add
add
pusha
add
adc
add
mov
stc
iret
in
bnd
int3
mov
jmp
mov
test
leave
jmp
clc
pop
push
add
insb
std
sbb
add
push
mov
cmp
ja
rclb
add
enter
clc
imull
add
add
das
js
clc
ret
cmp
sti
sti
pop
lea
pushl
add
adc
add
clc
xchg
ja
inc
add
ljmp
and
add
add
bound
add
jmp
sbb
sub
adc
add
or
clc
lods
inc
add
push
insl
cmpsb
clc
mov
loop
imul
jl
clc
dec
dec
out
mov
clc
stos
sbb
dec
or
pop
dec
outsb
jno
add
or
cmp
add
pop
add
add
clc
nop
data16
cmp
popa
add
je
add
addps
jb
add
add
js
adc
add
je
out
ljmp
mov
add
add
clc
stos
movsl
clc
aaa
sbb
add
dec
cmpsl
clc
sar
clc
mov
add
add
mov
xchg
test
sbb
insl
fwait
jecxz
dec
pusha
add
sbb
clc
jg
sub
add
stos
jmp
xchg
sbb
add
xchg
int3
ljmp
add
daa
clc
lea
add
lods
imul
add
lret
sbb
pop
inc
clc
lock
clc
or
dec
sub
mov
clc
jo
add
pop
filds
add
clc
lret
clc
mov
sahf
xlat
sub
xbegin
sar
mulb
cmpsb
clc
mov
clc
lret
xchg
xabort
jmp
mov
adc
ret
clc
push
add
push
add
xor
push
add
and
add
ret
clc
and
add
add
repnz
jo
add
clc
mov
or
clc
sub
add
jle
mov
lcall
clc
aaa
and
add
clc
mov
add
push
add
jge
sti
mov
add
add
sbb
xchg
enter
clc
push
dec
mov
dec
pop
scas
inc
add
scas
xor
add
stc
lahf
shrl
ret
lods
ljmp
sub
mov
fisttpll
ja
sub
clc
dec
iret
add
add
adc
mov
je
inc
clc
in
push
add
and
push
clc
push
jmp
mov
clc
push
and
add
xor
add
add
push
xor
add
movsl
clc
pop
jno
add
pop
sti
mov
clc
ret
clc
jl
out
mov
add
lods
inc
add
pushf
mov
ret
clc
addr16
dec
adc
add
fmull
cs
jns
add
mov
add
mov
clc
fsubs
clc
bound
add
jae
add
mov
stos
mov
mov
jb
add
fbstp
add
cmc
fcmovbe
das
sub
movsb
clc
lret
mov
jp
add
add
clc
test
clc
scas
cmp
inc
add
lahf
sub
lcall
mov
add
add
clc
xor
popf
cmp
out
repz
enter
add
add
sar
je
add
sub
jmp
add
loopne
and
add
aam
add
pop
lods
notb
add
ljmp
pop
filds
jae
add
das
sbb
add
sbb
in
aas
loopne
test
cmp
push
add
jecxz
add
add
add
mov
test
mov
jno
add
icebp
jmp
push
mov
add
js
add
add
add
jmp
pop
in
and
add
fcmovnbe
jae
add
add
imul
mov
add
fs
icebp
mov
mov
push
clc
inc
add
fwait
bound
add
add
jmp
add
add
clc
push
jge
cmp
clc
jle
jl
push
clc
into
or
sarb
mov
gs
je
lret
add
add
sar
mov
inc
add
xabort
insb
and
add
or
lcall
fcompl
cmp
jno
add
int3
pop
jmp
popf
xabort
xor
fcoms
add
fs
xbegin
fmulp
inc
clc
gs
repz
jbe
or
add
add
add
lret
add
movsl
clc
sti
cld
dec
sar
adc
add
adc
add
mov
add
mov
clc
pop
faddl
clc
mov
dec
aam
clc
add
add
add
icebp
add
add
xchg
sbb
fcoms
adc
mov
cmp
stc
decl
fs
scas
mov
ds
xor
add
lahf
jle
add
mov
clc
iret
inc
clc
int
push
mov
push
sub
sbb
mov
jle
xchg
stos
or
clc
inc
clc
sbb
xchg
adc
scas
or
clc
xor
add
inc
add
clc
mov
test
and
add
mov
data16
call
add
jl
xabort
scas
jbe
clc
cmp
dec
sar
or
clc
lods
ja
mov
mov
jns
cmp
dec
call
push
add
inc
clc
loopne
cmp
stos
inc
add
mov
add
pop
add
cld
add
add
adc
bound
add
add
pop
xor
add
clc
pop
sar
icebp
inc
add
cld
aam
clc
test
add
stos
jle
clc
mov
clc
mov
loop
ret
clc
push
add
mov
clc
sar
jae
add
push
add
dec
cmpsl
clc
xchg
mov
test
or
sbb
add
mov
clc
pop
ret
clc
fsubr
sar
clc
sub
das
push
clc
test
cltd
lock
add
fnclex
clc
rclb
add
mov
or
loop
test
std
mov
adc
add
clc
loopne
cmp
clc
and
inc
clc
push
add
rolb
add
sar
ret
lods
stos
xor
mov
add
imul
js
enter
outsb
lock
add
or
gs
ljmp
xrelease
std
push
rol
clc
or
stc
aaa
aaa
nop
mov
mov
add
mov
mov
fdivl
add
pushf
inc
add
or
test
pop
xor
add
popa
add
outsb
add
add
mov
add
pop
shlb
test
mov
ret
clc
adc
add
std
or
add
clc
pop
stos
pop
cmpsl
clc
xchg
notl
adc
add
add
add
in
adc
add
add
jl
shrl
add
pusha
add
xchg
pop
iret
adc
dec
cmp
xor
add
loop
int
clc
pusha
add
dec
mov
adc
add
clc
pop
mov
outsl
mov
mov
add
add
mov
sub
clc
pop
and
add
int
push
punpckhwd
sub
push
add
out
repz
sysenter
lret
clc
cmp
pop
clc
adc
add
daa
clc
popa
add
xchg
mov
add
aam
int
shrb
clc
add
add
pop
push
clc
sbb
mov
clc
push
xchg
push
cmp
outsl
add
add
and
add
add
push
add
xchg
mov
add
pusha
add
or
clc
js
clc
popf
cmp
clc
or
ds
mov
jo
add
sub
clc
insl
pusha
add
pop
cmp
lods
fstps
sub
dec
fiaddl
add
jecxz
and
add
pop
clc
clc
xlat
or
test
in
ror
mov
inc
clc
iret
rcrl
cmp
test
jge
mov
jnp
cmpsb
clc
loop
movsb
clc
adc
inc
clc
sar
add
fildl
jae
add
add
add
add
cmp
sti
cmp
push
fs
mov
push
add
loope
jb
add
add
mov
lret
fs
push
dec
mov
dec
jecxz
in
cmp
cmp
xchg
mov
outsb
jmp
imul
test
sub
xor
jno
add
add
sarb
jecxz
mov
pushf
xor
add
cmp
add
mov
shll
js
test
sahf
ss
add
js
jns
add
das
arpl
add
clc
xor
ficoms
add
mov
jno
add
fldl
aad
add
fs
inc
add
inc
clc
ds
adc
xchg
mulb
add
imul
clc
enter
inc
add
movsl
clc
sbb
cmp
cld
sbb
clc
and
clc
push
pop
cmp
xchg
insl
inc
add
cmp
inc
add
aas
xchg
fs
inc
add
xchg
push
inc
clc
mov
add
jl
xchg
xor
clc
jo
add
inc
clc
sar
clc
call
out
jecxz
mov
dec
jmp
sub
push
jae
add
rolb
add
add
add
jns
mov
imul
nop
iret
pusha
add
sub
in
and
in
push
adc
add
clc
arpl
add
inc
clc
int
inc
add
cmc
fwait
std
mov
xor
add
add
enter
and
add
add
jecxz
xchg
jo
add
or
pushf
inc
clc
test
clc
cmpsb
clc
pop
lock
push
add
add
adc
add
lea
add
or
sbb
clc
cmp
add
decb
push
add
jns
dec
aas
sbb
clc
rolb
clc
inc
clc
stos
lock
clc
inc
clc
je
inc
clc
or
add
in
add
lret
outsl
test
mov
lea
addr16
or
clc
mov
enter
xchg
sahf
xchg
jb
add
cmp
jp
clc
clc
jae
add
gs
xchg
cld
push
add
outsl
sub
insb
adc
add
clc
cmp
clc
lret
add
fs
mov
and
enter
sbb
xchg
adc
sub
jmp
mov
jne
clc
sbb
add
add
clc
mov
add
in
popa
add
out
mov
xor
add
sbb
aas
add
add
clc
jg
out
jnp
mov
add
jecxz
jmp
jl
inc
clc
decl
add
xchg
add
add
sar
add
loope
inc
clc
add
add
jle
clc
iret
xor
add
call
cmp
clc
xchg
clc
xchg
jo
add
aas
or
add
div
pushf
inc
clc
cmp
das
mov
add
clc
cmp
add
dec
add
jnp
ljmp
push
cmp
lcall
add
add
mov
cmp
add
sub
stc
cmp
or
jb
add
clc
or
add
mov
mov
xchg
adc
clc
or
sar
add
cmp
mov
lock
sar
sbb
xor
add
lock
xor
clc
lcall
add
add
cmc
outsl
enter
clc
jl
pop
sub
add
sahf
mov
out
xchg
test
clc
das
mov
lea
add
popf
je
push
mov
clc
pop
pop
clc
xchg
mov
clc
outsb
fcmovu
mov
aaa
mov
clc
xabort
adc
clc
clc
add
inc
clc
lods
je
clc
test
dec
adc
add
cmp
mov
clc
test
loope
push
add
into
mov
add
jle
or
clc
push
clc
pop
bound
add
clc
jne
clc
sub
cli
insl
dec
clc
pushf
aad
xor
leave
pop
jl
push
add
sar
clc
jb
add
clc
ret
jns
add
lret
cmp
mov
fchs
clc
pop
clc
sbb
lods
cli
push
xbegin
add
clc
lock
add
xor
adc
add
add
clc
lret
scas
pop
out
test
add
fmul
addr16
mov
insb
dec
inc
add
xchg
das
adc
add
clc
imul
xchg
dec
push
add
add
add
add
sub
mov
mov
lea
add
and
insl
cwtl
push
or
add
cmpsb
clc
loope
pop
push
add
cmp
add
add
clc
outsl
or
xchg
pop
adc
add
sahf
fidivl
add
cld
cltd
pop
cs
dec
incb
ss
pop
clc
or
clc
dec
dec
cld
inc
clc
dec
ficompl
test
loopne
or
add
fidivrl
out
inc
add
scas
xchg
cmp
add
imull
cmp
pop
adc
add
add
stc
incl
clc
jo
add
clc
xor
scas
jp
add
add
mov
aas
mov
clc
inc
clc
add
pop
out
adc
add
out
or
mov
dec
mov
jnp
out
mov
pop
clc
pusha
add
jae
add
add
repz
adc
add
add
jo
add
out
insb
leave
test
and
add
sti
add
add
cmpsb
clc
sarb
push
add
push
add
mov
clc
push
mov
clc
mov
add
aad
clc
dec
or
add
sbb
aaa
popf
lret
mov
jg
push
add
cmp
lods
dec
sar
sub
push
or
add
xor
add
clc
sti
aas
jo
add
add
add
inc
clc
sub
sub
clc
or
das
mov
add
xchg
jbe
clc
ss
adc
dec
or
jnp
test
jae
add
add
mov
or
clc
push
push
jg
or
ljmp
cmp
xor
mov
or
out
stc
std
and
clc
mov
clc
mov
add
popa
add
jno
add
movsb
clc
dec
test
or
add
cmp
cli
mov
daa
clc
and
add
repnz
mov
pop
push
xchg
fidivrl
mov
ret
clc
hlt
je
add
xor
add
bound
add
pop
sti
mov
repz
clc
lret
hlt
ret
push
loop
push
add
mov
nop
push
test
lret
in
mov
xor
add
js
inc
add
sbb
dec
mov
xchg
cs
into
xor
jae
add
arpl
add
clc
cmp
add
fmuls
clc
jge
add
in
sti
xchg
push
push
cmp
add
push
jp
push
push
add
cmp
scas
xlat
pusha
add
pop
sbb
pop
xchg
or
xchg
popa
add
stc
test
fst
push
add
dec
jle
add
adc
add
xor
cmp
clc
pusha
add
fsubp
clc
xchg
pop
push
or
test
clc
aaa
adc
add
pusha
add
mov
mov
cwtl
sub
dec
in
ret
enter
test
clc
inc
add
mov
mov
or
add
rcrl
push
rclb
add
clc
mov
ljmp
flds
add
test
push
incl
push
add
add
loope
sar
pushf
cltd
or
pop
test
clc
xor
add
clc
int
mov
mov
xchg
clc
popf
xchg
sar
add
cmp
dec
push
add
in
inc
add
adc
xor
in
mov
mov
fwait
xchg
and
add
add
fsubr
cmp
sbb
push
add
and
or
out
mov
pop
mov
clc
xor
add
clc
sbb
test
sbb
clc
loopne
add
inc
clc
sub
ja
enter
popl
inc
clc
sub
mov
or
add
xchg
push
dec
sar
mov
stos
inc
clc
cltd
add
fwait
rol
clc
popf
imul
or
or
idiv
mov
ljmp
push
and
add
mov
pop
movsb
clc
in
mov
clc
leave
jne
nop
pop
xchg
add
add
pop
test
mov
add
mov
add
add
mov
mov
sbb
add
outsl
sti
push
add
adc
or
add
add
push
inc
add
repnz
add
enter
push
add
movsb
clc
clc
mov
ficomps
and
add
add
push
and
add
add
mov
hlt
cmp
sar
cmovle
clc
gs
cmp
clc
and
add
clc
into
xchg
pop
clc
clc
jb
add
add
add
outsl
loopne
scas
jbe
fsubrp
and
add
cltd
lret
clc
pop
test
inc
clc
cmp
mov
add
mov
sarb
add
add
add
inc
clc
sbb
add
add
add
jbe
clc
divb
add
add
movsl
clc
loopne
adc
add
add
clc
or
sub
add
add
cmpsl
clc
outsl
sbb
add
jo
add
sub
cmp
clc
repz
push
clc
xchg
jecxz
dec
xor
add
jae
add
add
or
loop
arpl
add
cmp
add
cwtl
js
clc
add
add
clc
mov
xor
add
scas
daa
clc
xchg
push
or
add
in
jg
clc
jle
sub
js
and
add
add
mov
clc
mov
clc
mov
data16
add
add
lret
data16
and
sub
jno
add
divl
add
mov
add
add
dec
and
add
add
add
cmp
loopne
jb
add
aas
je
add
cs
push
jmp
clc
mov
sar
add
cld
cmp
add
mov
cli
cmp
inc
clc
sub
add
sbb
loopne
sar
xchg
out
or
add
dec
cwtl
and
add
push
clc
sarl
loopne
and
push
push
pop
out
add
add
cmp
mov
mov
cmp
sub
push
jmp
pop
and
jle
cmp
push
mov
add
push
add
add
mov
mov
add
clc
pop
out
iret
fcoms
add
enter
test
setg
add
add
and
add
clc
xchg
int
and
add
add
lret
dec
mov
dec
xabort
mov
pop
mov
add
lahf
xor
adc
add
rorb
js
xor
into
popf
clc
mov
add
jns
clc
push
add
ljmp
into
stos
js
clc
mov
test
xchg
rcrl
jbe
outsb
clc
and
fistps
and
add
mov
add
clc
insl
outsb
jmp
mov
lods
filds
add
xchg
leave
and
add
clc
push
add
or
stos
gs
add
add
add
add
pop
in
inc
add
popa
add
mov
and
clc
and
adc
add
jb
add
in
fcmovnu
jbe
or
add
xchg
xchg
vmovaps
push
jg
mov
xabort
test
inc
clc
iret
jno
add
sti
mov
add
repz
add
adc
cmpsb
clc
jl
jno
add
lea
jo
add
movsb
clc
add
add
fucomi
mov
mov
pop
dec
mov
clc
xchg
pop
push
or
jge
add
mov
mov
lods
push
add
fs
or
mov
cmp
add
add
add
push
clc
or
sahf
add
add
divb
test
loope
repnz
loop
push
cmp
add
push
and
add
cmp
clc
jns
clc
cmp
ret
ret
add
stos
fcoml
cs
fsts
add
mov
cmp
or
mov
into
mov
xchg
mov
add
dec
cs
clc
push
add
in
adc
add
hlt
dec
lahf
mov
fldl
fsts
add
adc
jne
jno
add
xor
add
clc
dec
cld
xchg
cmp
push
cltd
pushf
cmp
std
add
add
adc
add
or
clc
lret
lcall
add
mov
mov
add
mov
sub
xlat
add
add
lock
jb
add
sub
add
add
add
add
call
fisubrl
mov
jg
repz
clc
push
add
mov
addr16
cmp
aad
clc
and
add
jae
add
xchg
xchg
adc
add
stos
mov
vshufps
cld
push
clc
pop
clc
and
add
mov
mov
add
sub
adc
add
mov
fs
je
sbb
jnp
clc
sbb
pop
cmp
stc
fsubs
loop
shr
push
lods
psubusb
add
jbe
cmp
lods
inc
add
fwait
sar
stos
mov
ret
cmpsb
clc
xchg
outsl
jmp
mov
clc
cmpsl
clc
clc
push
clc
pop
clc
loopne
cmp
or
addr16
adc
add
xabort
add
hlt
push
add
nop
js
test
daa
clc
aas
in
int
add
inc
add
cmp
stos
jnp
jns
sub
dec
rorl
sub
mov
mov
mov
mov
lods
mov
imul
clc
xor
jl
add
mov
clc
popa
add
clc
js
push
add
sbb
mov
add
shrb
inc
clc
lahf
inc
add
sbb
clc
xchg
fisubl
ret
clc
pusha
add
push
clc
dec
and
clc
add
add
std
inc
add
data16
mov
jl
mov
fiadds
and
xchg
mov
clc
mov
ficoml
int3
ret
clc
pusha
add
pop
fdivrl
jmp
adc
mov
clc
pop
add
popf
cmp
mov
clc
loopne
stc
mov
add
fidivrs
clc
test
mov
add
inc
clc
or
clc
xchg
dec
sub
add
clc
pop
cmp
xor
add
add
fldl
add
inc
add
xor
mov
pop
cli
pushf
adc
add
add
inc
add
jp
adc
jmp
push
jg
clc
sub
xchg
popf
cmp
das
fildll
in
int3
mov
clc
push
add
add
mov
ret
dec
push
xlat
mov
adc
add
clc
mov
lea
mov
clc
xchg
and
pop
lods
cmp
pop
aam
mov
add
data16
mov
add
pusha
add
gs
cli
adc
inc
clc
cmp
jns
or
add
dec
pop
shrb
movsl
clc
pop
std
test
push
add
sarl
clc
cli
xabort
xor
add
pushf
lcall
bound
add
nop
jb
add
add
adc
add
sub
cmpsb
clc
enter
add
data16
adc
add
clc
in
aad
lods
mov
xchg
mov
inc
clc
xchg
jne
add
or
clc
clc
fwait
rol
clc
dec
cmp
or
ret
inc
clc
or
dec
bound
add
adc
add
cmp
clc
push
in
mov
inc
clc
fiadds
cmp
stos
add
add
xor
call
clc
xor
add
add
add
add
jge
clc
pop
stos
add
add
sub
clc
adc
add
add
aaa
xchg
cld
call
and
add
add
clc
mov
cmp
dec
in
mov
sbb
clc
sbb
clc
or
clc
xor
add
or
in
adc
add
clc
push
clc
std
add
jle
pop
aas
push
clc
xchg
or
and
lock
lcall
push
xchg
pop
negb
cmp
clc
fildll
xor
lret
jmp
test
xchg
xor
add
push
jmp
clc
cmp
pop
xchg
inc
add
jnp
ret
clc
cmp
pusha
add
fiaddl
clc
push
add
std
leave
xor
add
dec
sar
outsb
loope
push
add
rsqrtps
add
pop
pop
clc
enter
cmp
fxch
cmp
jb
add
add
push
sar
xchg
add
add
das
push
clc
add
add
push
in
cmp
pop
or
pushf
cmp
pop
or
clc
mov
jbe
clc
out
out
insb
or
dec
je
xor
add
cmp
mov
mov
and
add
imul
add
cmp
add
clc
fldt
and
add
jmp
sub
add
add
dec
sahf
sar
push
add
add
add
cmp
clc
cmp
push
add
and
add
adc
add
mov
xor
add
xor
clc
add
add
add
add
iret
xbegin
mov
add
cld
pop
mov
add
cmp
add
adc
add
xabort
mov
pop
fidivrl
clc
or
mov
jmp
dec
inc
add
xor
add
add
test
add
mov
insb
pop
xchg
and
add
add
jnp
idivb
add
mov
inc
clc
jb
add
cmp
clc
mov
mov
stc
ljmp
clc
mov
sub
pop
test
pushl
clc
or
jmp
add
sub
add
mov
imul
add
mov
add
dec
cmp
mov
and
add
jge
add
sbb
clc
jmp
clc
dec
pop
pop
scas
xor
add
add
clc
mov
jo
add
clc
imul
insl
xor
add
into
stos
inc
clc
dec
mov
inc
add
or
sbb
and
add
mov
clc
or
imul
add
add
jg
es
xchg
icebp
cmp
test
in
ds
pop
push
add
icebp
adc
mov
add
xbegin
clc
lcall
clc
shl
dec
cmp
test
or
clc
adc
add
sub
cltd
mov
clc
mov
je
std
jle
push
daa
clc
pop
stos
call
add
shl
or
data16
push
loopne
mov
add
push
add
or
push
sbb
clc
lods
sahf
mov
add
clc
bound
add
push
add
add
push
cmp
sub
clc
bound
add
in
ror
sbb
nopl
pop
dec
loope
popf
int3
clc
jg
ljmp
cmp
xlat
lcall
add
jb
add
add
pop
mov
clc
in
repnz
cmp
push
add
leave
test
mov
mov
rcrb
mov
add
xor
clc
cmp
sbb
clc
stos
cmp
clc
insb
add
clc
sar
clc
mov
add
int3
mov
cmp
ret
clc
out
push
in
dec
sub
loopne
push
negb
jnp
cmp
add
adc
add
clc
test
addr16
push
vsqrtps
add
mov
clc
xabort
add
push
add
and
xchg
dec
ss
sti
cmp
std
pop
clc
sbb
pop
clc
repz
xor
add
jae
add
dec
fs
adc
add
daa
clc
cmp
add
sub
mov
cmp
add
add
clc
push
bound
add
add
sar
cmp
mov
fs
ds
inc
add
out
mov
add
xchg
xchg
xchg
test
jno
add
mov
add
in
push
clc
xbegin
data16
or
dec
sbb
add
jne
mov
add
jl
clc
out
js
xchg
rolb
add
sub
ss
add
add
addr16
outsl
shlb
clc
pop
fadds
pop
add
add
enter
test
clc
test
dec
or
test
push
add
inc
clc
cmp
jp
add
sbb
clc
icebp
je
xchg
ja
clc
dec
lahf
push
clc
fdivp
xor
add
clc
jle
clc
daa
clc
int
jg
cmp
mov
mov
push
add
test
divl
add
aad
clc
xchg
movsb
clc
dec
inc
add
hlt
sub
clc
call
cmp
sbb
add
enter
mov
dec
jg
sub
jbe
lock
outsb
fisubl
add
add
jg
push
or
add
stc
data16
inc
clc
icebp
bnd
add
clc
or
clc
add
stc
sub
std
cmp
add
add
fs
push
adc
add
xchg
popl
stc
clc
negl
jo
add
imul
mov
add
add
aam
inc
add
push
test
gs
cmp
mov
addr16
rcrl
nop
jge
pop
sysexit
push
add
in
mov
add
out
cli
cmp
add
jle
clc
jle
fsubp
clc
add
add
cmp
sar
clc
loope
or
clc
shlb
lods
add
add
jp
test
sahf
mov
clc
cmpsl
clc
mov
add
xchg
pop
mov
add
mov
rorb
inc
add
movsl
clc
cmp
adc
add
add
pop
dec
lods
mov
cli
lods
push
aam
clc
push
mov
and
in
add
add
lods
add
add
push
dec
fmuls
pop
out
lcall
xor
add
popf
mov
cs
std
test
clc
xbegin
jmp
clc
mov
or
xor
add
aas
cmp
clc
sub
add
sub
add
push
push
add
jl
add
pop
fcmovb
clc
cmp
shlb
add
add
data16
sub
packssdw
clc
or
jmp
clc
fld
clc
addr16
inc
clc
and
aad
popf
sar
clc
jle
or
clc
js
clc
xchg
jbe
clc
rol
clc
xor
clc
mov
add
add
scas
addr16
adc
add
out
mov
jbe
xbegin
add
ds
add
push
fmuls
inc
clc
in
sbb
add
push
add
notb
add
mov
add
clc
arpl
add
clc
cmp
loop
sbb
clc
jne
add
add
add
pop
cmp
adc
add
out
inc
add
je
add
aad
gs
clc
mov
add
add
add
clc
xchg
add
repz
addr16
sub
dec
out
and
ss
sbb
add
nop
imul
add
push
clc
pop
stos
testl
lret
xchg
hlt
jmp
ljmp
clc
cs
shlb
add
cmp
clc
stc
and
add
pop
clc
scas
es
pop
fwait
in
xchg
fnstcw
clc
xchg
cmp
pop
clc
lahf
sub
idiv
or
in
dec
sbb
add
lods
loop
mov
bound
add
clc
adc
add
jp
es
and
add
xchg
mov
clc
popf
add
clc
aas
cmpsl
clc
xor
clc
lods
dec
shll
dec
add
add
scas
mov
sbb
xchg
iret
mov
add
jmp
add
add
clc
jno
add
add
or
inc
add
push
sbb
add
and
add
clc
cmp
push
xor
add
add
cmp
add
mov
test
add
fwait
jnp
clc
mov
shl
mov
sbb
push
mov
add
inc
clc
adc
add
addr16
mov
xlat
lret
jb
add
mov
lods
or
xor
add
push
cwtl
push
test
pop
jne
adc
add
clc
lods
std
inc
clc
sbb
cmp
clc
cmp
jnp
ret
push
aad
jne
add
cmp
faddp
clc
knotw
imul
add
jmp
push
add
loop
dec
xor
add
clc
jl
clc
fstpl
mov
int
push
add
xor
add
add
sub
fnstcw
mov
or
jl
movsb
clc
xbegin
clc
mov
add
pop
ds
xchg
jb
add
hlt
lods
popa
add
xor
pop
jnp
clc
insl
push
and
add
add
xor
add
or
fisubs
xbegin
add
sar
inc
add
addr16
in
pop
push
cli
dec
and
cmpsb
clc
xchg
mov
or
add
out
xchg
gs
out
xchg
add
ja
loopne
add
ss
call
jmp
sub
sar
add
in
jmp
clc
mov
add
jbe
xor
add
and
add
addr16
adc
clc
loopne
popa
add
mov
add
out
sub
in
sarb
cmc
scas
call
dec
jno
add
call
clc
in
movsb
clc
test
in
aam
popl
add
add
cmpsb
clc
dec
push
add
shrl
dec
jb
add
jmp
inc
add
pop
imul
sahf
pavgb
cmp
ljmp
clc
fdivr
cmp
mov
inc
clc
shl
lret
adc
add
lea
into
divl
dec
lods
mov
lods
fildl
xchg
jp
clc
outsb
xchg
xor
add
std
int3
mov
add
popa
add
imul
clc
xor
add
cmp
clc
outsb
cld
sub
add
add
call
clc
insl
xchg
fsubp
clc
dec
loope
in
jae
add
jne
fs
pushf
mov
loopne
dec
aad
fsubrl
jle
add
jp
sbb
ja
or
add
add
add
add
dec
or
clc
xabort
clc
push
jg
push
ds
gs
xor
add
mov
aam
or
jl
and
add
addr16
int
and
add
add
jecxz
pop
mov
in
imul
adc
add
add
add
add
cld
and
add
add
sbb
add
cwtl
lock
fiadds
mov
stc
jns
add
dec
xor
add
add
stos
jo
add
clc
or
clc
and
clc
pop
adc
aad
out
call
movsb
clc
adc
add
in
stc
add
xor
add
jge
pop
push
xor
add
clc
inc
add
adc
add
fsubs
add
cmpsb
clc
mov
clc
xchg
sbb
pop
lahf
jge
add
pusha
add
inc
add
pop
push
add
gs
xchg
in
sub
add
mov
add
fs
and
add
clc
push
sar
hlt
mov
jmp
add
negl
clc
mov
jl
clc
dec
sub
clc
mov
add
inc
clc
sar
lods
or
add
cmp
nop
ret
clc
inc
clc
xchg
cmp
mov
insb
daa
clc
or
pop
sti
nop
xchg
mov
and
add
lods
mov
outsb
mov
push
add
xchg
xchg
xchg
sbb
mov
add
fmul
cmpsl
clc
and
add
add
sub
sahf
adc
clc
movsb
clc
mov
clc
cltd
out
or
sar
repnz
adc
add
roll
jo
add
lret
sub
pusha
add
ds
nop
jbe
add
and
add
icebp
fwait
mov
clc
daa
clc
imul
clc
aaa
or
clc
std
inc
clc
xchg
in
lods
sete
add
out
dec
mov
pop
cwtl
xbegin
je
inc
add
pusha
add
sub
fsubp
clc
enter
xor
add
mov
mov
clc
jno
add
clc
dec
repz
mov
clc
push
add
push
fdivl
add
sbb
jmp
clc
int3
jo
add
add
shr
test
mov
mov
cmp
jbe
clc
cld
jns
int3
lock
data16
icebp
add
add
clc
xor
add
xor
add
adc
add
add
cmp
xor
jnp
or
jo
add
add
aaa
lock
clc
int3
ja
jp
push
add
mov
add
cmp
mov
add
jae
add
clc
aam
clc
outsb
out
mov
clc
jl
clc
adc
clc
and
outsb
scas
or
clc
xor
add
outsl
and
add
add
mov
sbb
clc
or
mov
clc
cmp
jle
cmp
test
xchg
xchg
inc
add
jp
js,pt
jge
mov
dec
add
add
mulps
clc
jnp
clc
das
je
add
and
popa
add
movhps
fstpl
cmp
je
insb
gs
ror
sar
call
adc
add
mov
add
xlat
xabort
call
xor
add
lods
lcall
xor
cmp
add
xchg
fs
mov
add
clc
ds
add
pop
loopne
lock
add
pop
mov
pop
clc
push
mov
push
add
add
or
add
scas
mov
lods
mov
pop
shrb
cmp
das
insl
ss
push
adc
clc
or
and
add
testb
clc
ss
xor
add
jne
pop
sti
insl
test
fldt
inc
add
xchg
xchg
pop
dec
cmpsl
clc
mov
in
jae
add
in
mov
or
add
add
add
in
mov
add
xchg
mov
clc
jno
add
pop
sbb
cmp
mov
in
xor
add
push
jb
add
clc
mov
add
clc
pop
xchg
add
add
add
ja
cwtl
repnz
mov
mov
aam
clc
scas
mov
xchg
insb
vmread
clc
pop
sub
clc
lret
in
into
out
inc
clc
lahf
xchg
pop
clc
xchg
mov
jno
add
pop
cs
xchg
mov
adc
lahf
sub
sub
pop
out
pop
sar
add
in
jns
clc
inc
add
stc
push
add
popa
add
mov
fnstcw
mov
and
add
lods
sbb
imul
clc
sar
clc
mov
clc
bound
add
add
ja
clc
dec
movsl
clc
cmp
pop
xchg
pop
clc
or
cltd
ja
jns
test
mov
clc
push
add
lahf
or
sahf
pusha
add
inc
add
shll
push
adc
add
jg
cwtl
outsl
add
add
add
jbe
add
out
lea
add
and
add
pop
in
adc
sbb
cmp
xchg
out
cmp
clc
mov
sbb
sub
std
sbb
enter
sub
sbb
lods
outsl
in
sub
mov
mov
clc
movsb
clc
stc
movsb
clc
fstps
lret
clc
jns
sub
inc
clc
hlt
push
mov
jne
and
add
pop
clc
sar
push
inc
add
or
ss
pop
hlt
add
add
dec
lret
ss
nop
dec
lods
popa
add
push
adc
add
incl
push
jne
clc
dec
aad
clc
xor
mov
cmp
cs
bound
add
fidivrl
xbegin
add
sti
inc
add
xchg
pushf
push
clc
imul
inc
add
fistpl
xor
add
add
push
add
pop
dec
clc
repz
add
add
insl
lock
stc
cld
jns
clc
xchg
or
jns
lret
mov
push
clc
repz
clc
fmul
insb
jle
inc
clc
mov
sahf
call
pop
hlt
push
clc
sub
add
add
jnp
cmp
xlat
inc
add
cmp
clc
dec
jg
add
sar
lock
clc
stos
inc
clc
imul
clc
mov
shrl
jo
add
push
jecxz
sub
clc
repz
add
pop
shrl
add
inc
clc
mov
packsswb
add
add
mov
and
add
mov
add
sbb
push
add
in
stc
leave
jp
sbb
add
add
add
xchg
in
insl
cmp
clc
pop
xabort
lea
jp
int
and
add
clc
repnz
mov
ret
clc
mov
inc
clc
cmpsb
clc
or
clc
push
insl
lahf
into
mov
insb
outsl
mov
add
outsb
out
mov
fs
fs
cmp
add
movsb
clc
push
add
pop
clc
test
add
mov
add
pop
ret
clc
jmp
add
cmc
pop
rclb
cmp
enter
pop
push
or
and
add
fs
and
add
repz
clc
mov
add
sar
add
push
stos
xchg
cltd
cwtl
xabort
add
fs
xor
add
jne
cmc
mov
add
push
add
jle
adc
add
dec
and
add
clc
push
add
mov
aad
add
add
add
clc
rcr
push
add
and
push
test
addr16
fcoms
ret
clc
xchg
pop
cmp
jle
push
add
scas
in
hlt
scas
add
add
clc
and
sub
add
add
daa
clc
inc
clc
insl
add
add
clc
repz
mov
clc
sbb
insb
xchg
inc
clc
mov
pusha
add
out
nop
movsl
clc
xor
arpl
add
add
enter
xchg
in
enter
add
cwtl
sbb
cmp
clc
mov
aaa
mov
cmp
or
add
bound
add
scas
lock
clc
adc
clc
dec
stos
sbb
sar
clc
push
clc
loopne
dec
xchg
or
add
jg
data16
pop
test
clc
imul
clc
push
xchg
dec
xchg
leave
jo
add
fcmove
xlat
and
add
cld
jl
clc
int
add
push
add
dec
push
fidivrs
and
pusha
add
out
adc
add
add
clc
inc
add
test
fdiv
iret
and
add
push
outsb
mov
sub
sbb
add
icebp
jnp
pusha
add
mov
into
mov
add
add
xchg
lea
xchg
mov
iret
mov
ss
add
push
add
insl
and
add
fwait
sahf
cmp
add
mov
xor
clc
xor
add
add
arpl
add
add
clc
ret
and
clc
push
add
xor
add
clc
pushf
xchg
call
fs
add
add
mov
sarl
add
dec
add
add
test
add
imul
cs
iret
push
add
push
add
lods
mov
mov
sbb
fld
clc
int
outsb
mov
clc
dec
ja
imul
scas
int3
nop
int3
or
sar
rorb
jne
clc
add
add
add
jle
or
cmp
jae
add
cmp
lock
pushl
add
xor
add
repz
or
add
clc
mov
clc
movsl
clc
jo
add
add
add
pop
movsl
clc
xor
add
clc
and
add
in
ror
pop
outsl
cmp
mov
lods
sub
and
add
lret
data16
mov
loop
aaa
and
add
jae
add
fdecstp
loope
lahf
pushf
xor
jo
add
add
add
push
sahf
inc
add
rorb
jbe
iret
in
insl
movsb
clc
data16
mov
push
ret
clc
mov
iret
and
int3
ret
clc
repz
mov
clc
jge
mov
cmp
and
add
sbb
add
and
add
xor
iret
sbb
add
clc
out
sar
cld
jb
add
adc
add
and
add
cmp
cmp
push
inc
add
xchg
cli
push
clc
cmp
add
icebp
xor
add
mov
dec
or
clc
lahf
pop
dec
xor
nop
or
xchg
pushf
and
add
clc
mov
cwtl
mov
clc
popf
push
add
pop
cmp
jb
add
add
xchg
test
sahf
or
clc
xor
add
add
add
add
push
add
add
clc
hlt
ret
clc
mov
push
add
add
add
clc
out
push
ljmp
add
xor
add
test
clc
add
add
or
mov
add
mov
sub
clc
jmp
dec
bound
add
add
add
clc
test
mov
add
dec
cmp
inc
add
pop
clc
rcrb
push
add
pop
push
add
rorl
add
arpl
add
push
mov
jns
pop
fwait
or
decl
jb
add
add
add
sub
add
data16
add
jmp
clc
or
lcall
or
adc
add
add
add
add
add
inc
clc
fildl
aad
cmp
clc
movsl
clc
sub
cmp
in
fsubrs
push
add
mov
mov
dec
xchg
cmp
add
jecxz
std
ds
sbb
add
out
iret
ret
add
aas
call
xor
add
clc
dec
jg
mov
popa
add
push
add
pop
dec
or
mov
or
clc
arpl
add
mov
negl
insl
gs
fdivs
add
push
add
pushf
xabort
pushf
icebp
mov
lods
sahf
xchg
jo
add
sahf
adc
add
add
pop
dec
fisubs
loope
or
jo
add
cmp
add
mov
mov
jno
add
add
add
xchg
sub
xor
inc
clc
mov
and
sub
push
daa
clc
incb
add
out
scas
dec
push
clc
jb
add
add
or
int3
jmp
add
add
sahf
xor
add
mov
movsl
clc
xchg
and
cld
cmp
clc
cmp
and
add
clc
sub
add
add
sub
jns
pop
push
mov
dec
mov
push
lret
dec
cmp
in
adc
add
add
lods
arpl
add
cmp
clc
int
jae
add
clc
xchg
cmp
xchg
mov
sbb
clc
xor
add
xor
add
mov
clc
lods
fmuls
push
repz
clc
jmp
push
outsb
cmp
clc
cmp
cld
cmp
push
add
mov
pop
add
add
add
pop
es
mov
clc
mov
js
clc
jge
clc
mov
popf
push
mov
call
cmp
jmp
clc
outsl
sbb
mov
gs
clc
pop
insl
cmp
aad
call
sub
int3
or
clc
cs
dec
sbb
dec
divl
add
add
stc
mov
xchg
ret
sub
jo
add
jns
shrb
clc
loopne
xchg
jl
clc
mov
add
xor
add
dec
daa
clc
pop
sub
clc
mov
add
sub
add
out
xchg
push
add
fists
jns
xor
add
es
mov
gs
or
mov
sub
sar
out
add
jns
fwait
xchg
xor
add
add
aad
jmp
clc
cmp
and
int3
xchg
push
add
mov
dec
sub
insl
imul
mov
add
add
bound
add
pop
push
add
and
add
mov
dec
inc
clc
jmp
insl
iret
jo
add
clc
sbb
aaa
xabort
sahf
hlt
push
add
mov
adc
add
data16
clc
jp
clc
ret
clc
test
cmp
add
int3
add
pop
add
push
fists
add
add
add
sbb
out
dec
fisubl
add
and
add
cmpsb
clc
aad
int
cld
mov
push
adc
add
cmp
jmp
aad
xor
add
add
mov
sahf
mulb
hlt
xabort
clc
adc
add
inc
clc
cmp
loopne
mov
add
jge
inc
clc
mov
add
data16
inc
add
xchg
jge
aam
pop
fisttps
mov
std
adc
dec
mov
add
xor
add
ficoms
add
mov
cmp
clc
mov
mov
push
int3
lods
insl
jg
add
sub
scas
aaa
dec
aam
adc
add
add
popa
add
das
nop
aam
mul
clc
je
pop
mov
push
lods
nop
stos
js
add
and
add
mov
cmp
xchg
clc
stos
lret
mov
pop
loopne
addr16
out
das
daa
clc
inc
clc
insb
into
hlt
push
add
adc
clc
dec
int3
nop
das
xor
add
cmp
out
lret
add
fs
fwait
pushf
cmp
gs
adc
and
imul
outsb
jns
clc
mov
clc
xor
add
mov
add
clc
xchg
mov
lods
jb
add
mov
pusha
add
xchg
pop
jmp
mov
and
mov
xor
add
clc
push
add
push
add
repnz
clc
loopne
mov
add
cmp
je
clc
and
stos
or
add
rcrl
clc
or
aam
cmp
push
fisubl
clc
outsb
pusha
add
dec
cmpsb
clc
push
add
inc
add
or
add
clc
leave
data16
cmp
lret
jo
add
jne
add
sar
add
add
mov
je
fwait
jp
add
and
add
and
add
clc
addr16
insb
jne
xchg
sbb
push
leave
add
add
clc
jae
add
add
jmp
fs
std
mov
jl
dec
inc
add
divl
add
add
add
pop
js
add
adc
add
add
aas
lea
pop
sub
mov
add
or
clc
sti
lea
adc
add
clc
nop
xchg
js
leave
cmp
out
and
add
inc
add
cmp
mov
add
clc
in
dec
fbld
movsb
clc
lea
pop
popf
xchg
push
lret
out
push
mov
or
inc
add
clc
and
add
add
inc
clc
insl
aaa
push
addr16
sub
jp
test
adc
add
clc
stos
pop
adc
push
add
mov
pusha
add
fsubp
clc
std
mov
mov
add
cmpsb
clc
inc
clc
and
xchg
add
jo
add
int3
mov
jns
ret
or
add
mov
test
fisubl
clc
pop
adc
mov
repnz
pop
clc
adc
add
mov
add
jb
add
nop
pusha
add
imul
fs
sub
push
mov
mov
push
in
sbb
and
inc
clc
test
into
dec
enter
pop
cmp
add
mov
clc
cmp
mov
enter
add
fs
pop
adc
insb
repz
mov
lods
mov
popf
insl
ja
clc
in
sub
jmp
xchg
out
aas
xor
add
xor
add
clc
inc
clc
rclb
add
mov
add
sub
xor
add
lahf
dec
pop
pop
lahf
repnz
mov
mov
outsb
insb
cmp
add
sti
sub
dec
cmp
add
fnstenv
add
cwtl
jo
add
push
pop
jno
add
repz
add
js
cmp
clc
test
in
xor
add
faddl
add
xor
add
jb
add
scas
or
mov
pop
daa
clc
push
push
add
mov
pop
out
pop
bnd
cltd
sbb
jge
daa
clc
jmp
sar
inc
add
mov
repz
test
clc
fs
cmp
imul
clc
push
xchg
xbegin
test
xchg
sub
adc
add
dec
mov
xchg
adc
add
push
into
mov
xor
add
cmpsl
clc
int3
push
clc
inc
clc
shlb
add
pop
push
clc
scas
aad
mov
xchg
aad
loop
addr16
pop
inc
clc
ja
pusha
add
pop
scas
cmpsb
clc
das
mov
clc
jl
pop
dec
mov
das
pop
fs
jp
pushl
add
add
mov
dec
dec
xor
add
inc
clc
test
push
lock
das
test
adc
add
dec
mov
add
inc
clc
and
mov
clc
je
lcall
clc
cmp
mov
clc
xor
add
out
mov
aaa
clc
sar
clc
inc
add
and
add
add
clc
adc
add
xchg
repz
hlt
dec
mov
add
xor
add
repz
fmull
aam
imul
or
clc
or
mov
add
pop
clc
dec
push
add
adc
add
idivb
clc
hlt
mov
clc
lods
scas
imul
fistl
imul
scas
imul
out
gs
sbb
add
add
xbegin
xchg
and
add
sahf
int3
jbe
xor
add
clc
aam
xor
iret
inc
add
pop
clc
cmp
clc
mov
xchg
cmp
push
lock
add
push
insl
stc
cmp
add
rclb
add
out
loope
stos
push
sub
xchg
ss
xchg
addr16
add
add
mov
mov
jno
add
add
test
cmp
call
add
lods
push
sub
adc
add
adc
add
add
add
add
movsb
clc
ret
mov
mov
add
inc
add
sub
cmp
clc
pop
movsb
clc
add
push
push
add
xbegin
clc
and
sbb
add
add
or
add
add
add
adc
add
add
cmp
jge
add
dec
pop
sub
add
mov
pop
je
movsl
clc
push
add
add
mov
mov
clc
aas
data16
add
add
add
add
inc
add
mov
add
mov
mov
sub
iret
mov
pop
int3
or
insl
jo
add
clc
nop
cmp
xchg
jge
and
add
push
clc
pushf
popf
pop
icebp
mov
movsb
clc
lea
push
add
ljmp
push
hlt
lods
cmp
hlt
mov
and
int
add
mov
dec
lods
adc
add
clc
imul
leave
inc
clc
iret
enter
add
fistl
clc
int
pop
psrlw
clc
adc
add
clc
aam
mov
clc
stc
add
add
movsl
clc
adc
add
add
loope
push
xchg
insl
in
xchg
imulb
xchg
xchg
pop
clc
call
dec
and
clc
mov
mov
in
hlt
cmp
add
add
dec
cld
sar
or
add
clc
push
lcall
add
add
xlat
dec
push
add
jge
int
push
add
adc
lods
push
push
mov
cmp
cmp
clc
mov
add
test
and
add
add
lock
add
clc
shl
clc
lods
pop
adc
add
cmp
push
inc
clc
insl
inc
clc
dec
jg
test
clc
jmp
add
mov
add
push
data16
push
add
mov
pop
cli
jnp
mov
add
dec
movsl
clc
jae
add
push
jp
sbb
arpl
add
repnz
xbegin
arpl
add
jp
popa
add
bound
add
add
imul
sar
lea
sahf
jmp
iret
or
add
sti
mov
clc
pop
inc
clc
lahf
add
add
mov
add
addr16
psllq
or
in
add
add
add
sbb
lods
popf
sub
cmp
push
add
push
add
mov
fiadds
add
clc
mov
js
inc
add
sahf
in
aam
cs
mov
ret
clc
cli
sbb
add
fcompl
push
sub
lock
fwait
xchg
and
add
scas
outsl
popa
add
lahf
test
mov
add
rcrl
push
add
fiadds
cmp
sbb
add
xchg
fsubrl
faddl
cld
arpl
add
add
add
addr16
xchg
inc
clc
or
sub
clc
loopne
pop
loopne
xor
add
lcall
es
dec
pop
push
clc
loop
clc
data16
test
pop
cmp
xchg
push
add
pop
scas
in
mov
int3
sar
clc
bound
add
add
add
mov
jecxz
fldenv
add
clc
add
add
inc
add
push
test
clc
sar
movsl
clc
cwtl
cmp
xchg
ljmp
add
aaa
ret
clc
push
ljmp
adc
out
jp
clc
sahf
lahf
adc
add
rclb
test
pop
mov
clc
xchg
cli
imulb
ret
insb
daa
clc
inc
clc
lahf
or
add
sbb
xor
add
clc
test
dec
in
stc
mov
add
add
add
addr16
repz
pop
mov
mov
add
jne
clc
enter
add
add
clc
js
xchg
out
mov
mov
clc
add
add
jmp
add
cmp
clc
sar
adc
clc
daa
clc
gs
dec
cmp
clc
mov
xchg
jbe
into
ja
clc
cmp
stc
mov
xchg
incl
ret
clc
inc
add
and
add
cltd
clc
leave
and
imul
clc
xchg
imul
or
clc
ja
cs
add
fs
cmp
clc
nop
xbegin
jae
add
clc
dec
xbegin
ficompl
clc
push
outsb
loopne
add
add
add
test
and
add
gs
jne
push
cltd
adc
add
push
clc
xchg
add
jb
add
pop
dec
push
cmp
add
add
lcall
add
cmp
add
xlat
mov
and
shrl
cmp
gs
lcall
test
into
xor
add
clc
iret
mov
neg
mov
insb
rol
clc
inc
clc
out
addr16
add
add
test
add
into
sub
mov
add
cs
mov
add
add
mov
add
add
mov
add
std
enter
clc
jg
pop
call
cs
out
ret
clc
jnp
clc
jbe
jmp
dec
xor
testb
call
push
bound
add
mov
dec
outsl
test
clc
xchg
sub
jbe
mov
clc
daa
clc
jo
add
add
push
imul
add
xlat
movsl
clc
fdivs
aaa
dec
addr16
pop
sbb
add
mov
mov
clc
cli
mov
arpl
add
clc
in
pop
movsl
clc
sbb
clc
lock
cltd
ss
add
xor
add
and
add
push
clc
ret
add
add
clc
xchg
repz
push
mov
clc
add
add
push
push
add
js
cmc
mov
rclb
mov
in
mov
xchg
mov
adc
add
mov
clc
sbb
add
das
call
imul
clc
pop
aad
arpl
add
mov
push
add
lods
fiadds
clc
clc
pop
jo
add
data16
ss
vmovups
add
add
xor
jne
add
dec
shlb
add
cltd
add
add
inc
add
cmp
clc
sbb
cld
insl
dec
mov
clc
into
pusha
add
sub
hlt
pushf
ljmp
fs
stos
hlt
mov
add
xchg
aas
push
cwtl
dec
insb
push
add
and
add
clc
popf
dec
and
add
add
push
add
mov
add
movsl
clc
mov
clc
and
add
inc
add
jmp
add
nop
jns
add
add
add
ja
cmp
out
mov
inc
clc
sar
mov
clc
add
add
aam
add
mov
dec
lock
gs
sub
sbb
add
add
inc
add
pop
repnz
bound
add
out
jne
add
sbb
js
add
sub
xor
add
add
aas
cmpsl
clc
add
push
mov
pop
insb
mov
dec
cmp
clc
movsl
clc
iret
aam
clc
and
add
mov
clc
loopne
mov
lret
xchg
sbb
adc
add
push
fidivs
add
inc
clc
jle
inc
clc
je
push
mov
adc
add
setp
mov
clc
cmp
clc
lahf
sbb
and
add
clc
outsb
xor
add
clc
ficoms
in
jbe
cli
int
add
xchg
dec
pop
insb
cmp
inc
add
ret
clc
jae
add
dec
xor
add
ljmp
clc
adc
and
mov
data16
adc
add
add
in
stos
xchg
shlb
fmuls
sbb
int3
fwait
or
push
sbb
cmp
ss
xor
enter
in
mov
or
dec
clc
add
add
mov
sub
clc
je
flds
or
add
xchg
aas
ret
loopne
mov
clc
adc
add
xor
add
sar
add
imul
cli
cmp
clc
pop
movsl
clc
mov
mov
clc
push
add
inc
clc
jg
add
push
add
mov
sub
sub
cmp
clc
push
mov
add
jnp
add
scas
cmp
push
cmp
cltd
jbe
clc
sbb
loopne
push
add
cmp
clc
jle
add
push
cld
mov
daa
clc
fcoms
xor
xchg
push
out
pop
push
cmp
add
int
clc
mov
clc
xor
sbb
clc
repz
adc
add
pop
dec
push
inc
add
xor
add
jns
adc
add
aam
xor
add
clc
jns
clc
cwtl
mov
inc
add
nop
fbstp
ss
and
add
xchg
ret
clc
cmp
add
cmpsb
clc
mov
clc
shrl
and
add
add
popa
add
cmp
add
xchg
int
ljmp
clc
js
ja
add
pusha
add
sar
add
and
add
cmc
ja
jp
clc
jp
add
add
lcall
data16
push
add
xlat
push
test
cld
cmpsl
clc
inc
clc
sbb
add
jno
add
in
ds
mov
add
fdiv
jb
add
lret
repnz
cmpsl
clc
and
test
fnsave
add
pop
jmp
add
add
into
cltd
jge
sbb
push
jbe
sub
add
stos
mov
clc
jno
hlt
and
add
testl
push
fwait
ret
add
mov
in
cmc
xchg
push
mov
add
leave
int3
in
sarb
mov
jnp
lea
jle
clc
pop
lods
push
add
jbe
mov
jnp
clc
cmp
inc
clc
jp
test
outsl
cmp
add
add
or
push
jo
add
add
loop
nop
pop
jl
lcall
in
adc
add
fiaddl
add
lahf
mov
xchg
mov
cmp
ds
jecxz
iret
lret
mov
add
out
aam
inc
add
test
inc
add
test
xor
add
in
cmp
int
loop
jl
ds
dec
or
jno
add
clc
lcall
add
jg
cmp
mov
add
adc
add
clc
cli
jl
pop
je
mov
cmp
add
jae
add
clc
hlt
cmp
clc
in
lods
add
jb
add
push
clc
dec
out
jno
add
add
mov
add
add
out
sbb
xbegin
adc
add
jns
push
sbb
add
popf
and
add
mov
dec
jle
mov
sar
xabort
mov
call
clc
scas
in
loop
cmovns
add
or
add
add
add
add
lcall
mov
xor
add
inc
clc
push
clc
jge
data16
cmp
out
out
test
cmp
clc
sub
clc
mov
or
das
add
fidivs
fwait
add
add
add
clc
mov
add
add
ds
test
clc
cs
cmc
or
aas
mov
incl
clc
aaa
bnd
add
add
mov
clc
lock
cmp
or
mov
pop
add
aad
dec
enter
add
psubusb
and
mov
clc
mov
out
push
jb
add
push
add
or
mov
sub
clc
clc
cmp
push
add
imul
jge
jp
add
mov
clc
aas
pushf
repz
push
clc
adc
add
add
dec
scas
inc
clc
push
ja
enter
add
and
add
add
add
add
push
movsb
clc
dec
inc
clc
mov
add
add
push
inc
clc
jne
add
or
lret
lahf
fistpll
cmp
clc
sbb
inc
add
adc
add
movsb
clc
pop
scas
inc
clc
jg
jnp
in
fcom
push
lods
pop
xchg
adc
add
cmp
add
mul
clc
cmp
sub
insb
iret
aas
fnstcw
or
add
mov
add
add
add
and
add
mov
lret
or
xchg
gs
iret
mov
cmc
add
add
sub
hlt
and
xchg
lock
clc
out
rolb
clc
inc
clc
cs
sar
and
ljmp
jns
add
pop
lods
mov
out
dec
hlt
cmpsl
clc
push
add
loop
out
in
clc
push
std
rep
movsl
clc
pop
jbe
add
adc
add
clc
add
adc
add
inc
add
inc
clc
xchg
inc
clc
mov
add
call
add
pop
notb
inc
add
inc
add
scas
jg
das
push
push
cmp
clc
out
mov
ret
cmpsb
clc
dec
add
or
push
add
push
mov
clc
jmp
add
add
add
sub
clc
dec
repz
clc
jne
mov
jno
add
add
addr16
in
icebp
sarb
push
add
repz
gs
push
std
sar
inc
clc
aaa
cmp
clc
add
add
rep
lret
jne
clc
dec
jp
push
clc
imul
hlt
repnz
hlt
test
adc
add
cld
insl
pusha
add
mov
cli
sub
fbld
add
jae
add
xchg
sar
mov
push
stc
aas
cmp
clc
add
add
clc
fcoms
add
add
gs
xchg
push
add
addr16
div
mov
imul
cmpsb
clc
mov
iret
cmp
mov
jnp
lods
repz
clc
aas
push
sar
mov
xchg
sbb
add
add
lods
pop
sub
clc
jbe
add
add
add
mov
insb
std
add
or
add
pushl
jmp
xchg
inc
clc
gs
jmp
add
inc
add
ret
dec
leave
jmp
add
shrb
or
add
push
push
cmpsb
clc
xchg
or
nop
jecxz
xlat
ljmp
shll
clc
ficomps
xchg
in
idivb
aas
mov
push
clc
std
mov
add
clc
jp
nop
adc
add
lods
lret
arpl
add
fst
fisttpl
clc
xlat
jo
add
or
cmpsl
clc
imul
mov
mov
mov
add
cmp
shr
iret
outsb
mov
pusha
add
adc
add
cmp
push
add
push
push
add
xchg
bound
add
clc
scas
rol
clc
fisttps
data16
add
add
add
in
push
add
mov
add
jmp
adc
dec
in
and
add
add
lcall
clc
popf
and
dec
leave
mov
xabort
lret
jmp
out
inc
add
pop
clc
stc
sub
add
test
or
adc
add
in
sub
xor
add
into
ret
clc
clc
inc
clc
lock
dec
cmp
push
adc
add
mov
add
cmpsb
clc
test
paddusw
pusha
add
lods
xor
sbb
add
in
inc
add
aaa
imul
sub
add
pop
notl
add
add
ss
lcall
pop
shrb
add
push
test
mov
insl
push
nop
mov
dec
enter
clc
sahf
cs
clc
shrl
add
data16
outsl
adc
add
repnz
cmp
clc
sahf
insb
push
add
fs
movsl
clc
xor
add
pop
or
xchg
pop
outsb
jmp
sub
add
inc
add
and
adc
add
push
iret
dec
inc
add
fwait
mov
pop
or
xor
add
xchg
add
cmp
push
push
add
add
add
sub
inc
add
ret
add
adc
rcrl
lods
push
push
push
aas
mulb
add
mov
cwtl
pop
clc
pop
clc
fisubl
pop
mov
add
adc
add
mov
xor
clc
stos
or
fisubrl
pop
xchg
outsl
mull
stos
mov
imul
clc
and
add
movsl
clc
fnstsw
ret
clc
xor
ss
add
jp
add
cmp
pop
clc
loopne
data16
inc
add
stos
lods
push
pop
or
out
jmp
ja
push
add
adc
add
add
std
inc
clc
nop
hlt
push
mov
add
xor
add
lods
idiv
out
enter
clc
mov
decl
cs
add
inc
add
call
ja
clc
stc
push
test
and
gs
js
add
aam
test
pop
pop
push
inc
add
xor
add
add
mov
in
inc
clc
sbb
rolb
clc
cmp
jno
add
adc
add
add
add
add
test
xchg
aam
dec
xabort
dec
loop
xchg
hlt
push
clc
fisubrl
leave
data16
ljmp
inc
add
outsb
jne
add
fwait
cmp
pop
push
add
jb
add
ss
fucomp
clc
xchg
aaa
and
add
xor
test
add
clc
lret
clc
sar
xabort
add
add
push
mov
sti
push
add
or
cmp
jmp
clc
add
add
mov
cmp
or
xlat
adc
add
cwtl
or
add
mov
add
mov
or
add
jg
sti
sbb
add
clc
pop
cmp
sub
or
cmp
sbb
clc
cmp
xchg
add
add
or
mov
lock
xor
add
add
clc
dec
movsb
clc
sub
add
xchg
pop
jmp
clc
xor
add
clc
sub
add
add
mov
mov
clc
mov
in
stos
int
clc
add
cmc
insb
repnz
add
rorb
mov
clc
fildll
add
fidivrs
decb
hlt
xchg
pop
add
add
rclb
add
push
enter
push
fcoms
pop
sar
clc
mov
add
add
cmp
pop
mov
dec
int3
xchg
cmp
push
add
push
dec
jg
add
inc
add
jb
add
clc
cmc
or
cmp
add
xchg
pop
clc
scas
mov
jmp
add
lahf
aam
inc
add
xor
add
add
mov
add
add
clc
sar
test
pop
clc
call
fndisi(8087
clc
cli
mov
clc
mov
cmp
lahf
cmp
inc
add
movsl
clc
and
je
and
jne
add
mov
add
mov
test
add
int3
lods
xor
jns
nop
cmp
clc
cmp
add
or
jge
and
add
decl
add
push
cmp
adc
add
cmpsl
clc
cmc
sahf
test
clc
push
add
or
add
jo
add
stc
xchg
jl
xchg
adc
add
clc
cmp
rorb
clc
out
cmp
add
clc
pop
pop
ja
xchg
aas
stos
sub
add
dec
es
mov
add
push
clc
xchg
pop
sbb
xchg
adc
movsl
clc
xchg
aad
clc
xor
add
mov
jno
add
fidivs
dec
inc
add
cwtl
sbb
add
fistpll
and
add
add
add
add
jp
fwait
jge
add
push
add
fistps
mov
adc
add
add
ja
repnz
add
adc
add
add
add
int
push
cmp
aad
cmc
fidivl
add
gs
nop
lret
xbegin
add
adc
add
mov
out
inc
clc
adc
add
add
push
jmp
push
mov
mov
cld
pop
je
clc
dec
pop
popf
pop
pop
sbb
add
sub
add
jmp
scas
movsl
clc
fwait
stos
in
xchg
add
add
push
shl
clc
ljmp
mov
fbld
add
imul
std
inc
clc
stc
pusha
add
ss
inc
clc
add
insb
shlb
pop
lea
mov
clc
add
add
clc
mov
int3
add
add
add
jg
add
or
sub
add
sub
add
push
clc
call
cs
cltd
cwtl
mov
into
cmp
push
clc
pop
call
mov
or
clc
fwait
pop
adc
lcall
pop
clc
vucomiss
mov
mov
add
push
cmp
clc
nop
or
clc
in
loop
fcoms
add
fwait
adc
mov
add
push
push
jecxz
je
sbb
add
add
inc
add
jmp
clc
xlat
popf
sbb
testl
and
add
add
lods
daa
clc
movsl
clc
xchg
repnz
lea
xlat
mov
call
pop
in
inc
add
or
xchg
push
cmp
or
add
jge
arpl
add
inc
clc
sub
clc
push
push
lret
add
imul
jae
add
add
clc
fwait
jne
cmp
lahf
pavgw
sbb
clc
aaa
sub
imul
test
mov
out
mov
xchg
sbb
pop
mov
xchg
mov
mov
clc
repnz
pop
cmp
pop
clc
cmp
xlat
or
dec
movsb
clc
scas
incl
clc
stc
jnp
cmp
add
cmp
cltd
gs
aad
bound
add
push
mov
xor
xchg
add
add
adc
add
out
mov
cmp
imul
outsb
add
mov
jmp
leave
jns
cmp
mov
adc
add
clc
xor
clc
aaa
add
add
clc
pop
dec
inc
clc
or
sbb
sahf
out
push
add
es
in
int3
clc
cmp
in
xchg
scas
pop
xor
add
push
cli
es
add
add
clc
sub
call
loop
jl
insb
out
ljmp
popa
add
scas
push
add
sub
ret
and
add
add
fcom
mov
clc
cmp
pop
pop
cmp
xchg
adc
add
clc
clc
mov
clc
mov
push
pushf
push
clc
mov
sar
sarb
and
add
xor
jnp
outsl
mov
hlt
cli
rorb
imul
aam
and
pop
aam
clc
xor
jo
add
add
in
inc
clc
rcr
aaa
jecxz
dec
mov
mov
add
data16
mov
add
jle
cli
fs
movsl
clc
dec
std
mov
out
aaa
cmp
test
sub
adc
add
add
hlt
mov
clc
sar
outsl
push
add
mov
add
inc
clc
daa
clc
js
clc
addr16
insb
jmp
add
cs
push
fwait
dec
push
clc
pop
lea
cmp
test
or
decl
push
cmp
add
sub
xlat
popa
add
hlt
cmp
add
mov
pop
ss
add
jp
or
clc
mov
sub
add
incl
sub
cwtl
pop
mov
mov
cmp
shll
cwtl
shll
add
out
xlat
adc
add
daa
clc
pop
fisubs
fwait
adc
data16
mov
clc
cmp
add
aam
clc
inc
clc
push
cmp
add
cli
or
add
cmpsb
clc
or
add
adc
add
clc
cld
mov
xor
add
add
push
mov
sbb
cs
in
cs
ret
add
xor
inc
clc
xor
testb
clc
outsb
mov
stc
dec
mov
dec
lcall
add
daa
clc
mov
in
cmp
dec
pop
aas
or
shr
dec
lret
mov
sar
icebp
push
add
inc
add
cli
adc
add
add
pop
mov
shll
mov
lods
push
jecxz
sar
adc
ret
clc
and
xlat
mov
clc
nop
pop
fs
cmp
sbb
add
add
and
add
add
mov
mov
je
pop
and
rorb
clc
das
push
ficompl
mov
add
into
cmp
add
add
popa
add
iret
dec
sub
add
call
and
pop
dec
and
gs
stos
lret
or
and
add
add
incl
add
ja
clc
shlb
int3
add
add
in
aam
xabort
popa
add
push
dec
pop
cmpsb
clc
adc
add
pushl
add
xlat
cmp
add
inc
clc
notb
add
or
je
add
insl
imul
add
sbb
out
mov
aaa
mov
mov
clc
das
mov
clc
call
clc
jp
add
or
clc
test
sarb
hlt
and
inc
add
push
clc
or
add
loopne
xor
inc
add
or
ss
lea
clc
mov
dec
jp
clc
jmp
clc
xor
add
mov
add
mov
inc
add
das
inc
clc
cmp
add
jmp
fs
mov
add
lahf
push
or
and
xor
add
clc
mov
es
or
in
inc
clc
dec
xor
add
cmp
lret
sti
jle
fidivl
add
add
or
inc
clc
insb
mov
mov
xor
add
add
xchg
push
add
rcr
xlat
sub
lahf
pop
inc
add
loope
push
add
test
sub
clc
dec
mov
add
ljmp
imul
lahf
adc
push
push
mov
movd
push
add
and
jmp
insb
cmp
add
gs
push
push
cmp
add
and
jne
clc
mov
clc
enter
clc
add
add
push
jns
clc
int
clc
mov
jmp
add
popa
add
mov
test
cmp
loope
sbb
inc
clc
adc
add
add
add
xlat
mov
jmp
lret
add
add
add
nop
cmp
pushf
and
add
int
add
add
add
inc
add
add
add
and
add
dec
outsl
cmp
add
sbb
jp
clc
loopne
fs
pusha
add
fwait
and
add
clc
lret
mov
in
add
add
data16
or
add
out
xor
cmp
add
cmp
lcall
in
test
xor
cmp
add
scas
ret
clc
and
add
clc
clc
push
add
idiv
mov
add
out
jb
add
pop
and
add
add
cmp
lret
pop
dec
aas
je
mov
hlt
imulb
add
ret
push
sbb
add
push
sbb
add
scas
test
mov
add
clc
pop
movsl
clc
lods
push
add
dec
mov
add
dec
cld
imul
xchg
xchg
inc
clc
inc
add
loope
dec
add
add
push
xlat
and
add
add
or
clc
mov
loop,pt
addr16
mov
xchg
mov
arpl
add
add
jbe
push
add
mov
jno
add
clc
inc
add
cmp
sub
sbb
xchg
add
add
add
shll
add
add
fcoml
and
add
dec
aam
fcompl
popf
mov
insl
insb
mov
xor
add
and
add
ss
add
jge
add
jle
add
loopne
jmp
call
leave
repz
into
btr
leave
test
test
cmp
mov
pop
mov
clc
clc
sar
fimuls
cmp
hlt
scas
insl
es
jmp
clc
movsl
clc
stos
push
add
mov
add
js
stos
add
add
arpl
add
add
test
stos
and
add
aas
pop
clc
sbb
sub
add
aaa
cmp
jo
add
pusha
add
fildll
and
add
inc
clc
outsb
cmp
mov
pop
outsl
fcoms
lods
addr16
inc
add
push
add
rclb
add
dec
push
cli
sbb
clc
add
in
call
inc
add
or
xor
add
xor
add
clc
mov
and
pop
clc
shlb
sbb
cli
dec
inc
add
add
add
dec
in
add
add
push
rcl
cmp
add
add
add
dec
xchg
mov
xabort
cmp
inc
clc
fisttpll
je
add
sbb
add
jmp
pop
mov
test
sbb
mov
add
lret
mov
clc
push
lret
xchg
mov
aam
add
and
add
push
bound
add
dec
inc
add
or
add
add
cmovb
add
sub
inc
clc
in
cmpsb
clc
mov
scas
outsb
test
adc
loopne
push
add
pop
sbb
clc
stos
mov
add
iret
xchg
aas
sbb
push
stc
jmp
add
je
cmpsb
clc
pop
lock
clc
jae
add
dec
pop
cmp
aad
in
jmp
add
aam
clc
and
add
test
std
lock
outsb
cmp
add
rorb
push
aas
rdtsc
add
pop
jle
sbb
mov
clc
das
mov
add
call
fisttpl
jecxz
sar
gs
push
cmp
dec
sbb
mov
clc
fdivrs
dec
cltd
mov
mov
pusha
add
int3
xchg
dec
outsb
fwait
jge
in
add
cmp
jl
xor
add
add
dec
fcompl
clc
ja
add
mov
ret
add
test
jmp
push
clc
mov
std
xchg
mov
fucomip
or
inc
add
std
inc
clc
xchg
mov
clc
inc
clc
cmp
add
add
add
movsb
clc
ds
leave
dec
mov
add
and
add
clc
cmp
xor
add
sub
clc
jmp
pop
add
add
or
cmp
cltd
xbegin
sbb
xchg
push
add
pop
lock
gs
xor
add
xchg
sar
je
js
add
push
cmp
in
dec
pop
cmp
mov
outsb
int3
xchg
xor
add
mov
test
mov
clc
xchg
imul
add
jae
add
push
add
rclb
add
ljmp
add
pop
ret
clc
dec
cmp
add
clc
jecxz
xor
add
aad
scas
cmp
or
ljmp
add
sbb
mov
dec
jecxz
or
clc
mov
add
jbe
clc
sbb
or
push
movsl
clc
and
add
call
mov
and
add
add
shll
add
add
rclb
add
cmc
sub
clc
je
add
sub
aam
add
add
cs
add
adc
push
scas
add
add
jne
xchg
and
add
jo
add
add
mov
sahf
or
cmc
pop
int3
sub
mov
clc
jae
add
mov
clc
inc
clc
jbe
fdivl
ror
push
adc
add
xlat
scas
xchg
pushf
arpl
add
add
rclb
mulb
xchg
mov
add
sar
xchg
inc
add
xchg
std
or
sub
jb
add
push
clc
cli
or
add
add
add
clc
mov
mov
add
pop
push
add
jno
add
dec
cmp
clc
or
and
add
outsl
fdiv
sub
fucomip
or
adc
add
fs
movsb
clc
loope
inc
add
and
add
aad
loope
aas
mov
int3
insb
xbegin
clc
inc
add
inc
add
jno
add
pop
xchg
cld
xchg
jecxz
xchg
int3
or
add
clc
call
loope
mov
mov
scas
mov
clc
xchg
xchg
sar
clc
mov
add
xor
push
push
cwtl
sub
sub
add
xor
add
push
sbb
push
add
hlt
cmp
test
aas
lock
add
jnp
xchg
add
add
add
add
insb
xchg
jecxz
js
add
or
clc
aad
add
clc
lret
filds
clc
shrb
mov
add
movq
and
add
pop
sti
repz
lods
inc
clc
mov
loopne
movsb
clc
sbb
add
testl
clc
or
jno
add
mov
or
add
dec
mov
addr16
pusha
add
iret
inc
clc
or
es
shrb
add
lock
test
lahf
sbb
clc
outsl
adc
add
clc
jg
add
fimuls
add
aad
mov
clc
pop
test
push
std
roll
ficoml
outsl
mov
sti
arpl
add
xchg
xchg
loopne
or
pop
xor
clc
pop
add
add
scas
ret
clc
sbb
clc
sar
scas
lcall
cs
clc
fldenv
clc
js
push
lret
cmc
test
nop
lea
push
int
jns
or
add
cld
push
mov
xor
add
add
sbb
add
mov
sbb
sub
clc
rorl
imul
ret
add
lock
jmp
dec
es
cs
push
in
bound
add
add
mov
out
aaa
jne
and
cmp
dec
pop
mov
add
test
add
fcmovu
and
jge
ljmp
clc
cli
add
add
xchg
dec
xchg
push
add
add
add
sub
decb
add
mov
cmp
ja
icebp
popf
and
add
int
clc
mov
loope
sar
faddl
add
add
add
data16
in
add
add
nop
outsb
sub
and
add
xchg
das
jns
mov
mov
bound
add
xchg
lods
stos
adc
clc
sahf
bound
add
popf
leave
sti
cmp
cwtl
ret
clc
mov
lcall
add
add
add
xbegin
clc
sbb
jo
add
lret
add
mov
mov
cmp
mov
nop
mov
and
add
add
add
add
xabort
clc
fs
push
jbe
push
mov
mov
clc
pop
add
add
loope
neg
cwtl
out
scas
int
xor
add
add
add
jle
pop
push
sub
add
clc
sbb
rcrb
clc
cmpsb
clc
mov
add
add
add
inc
clc
pop
outsl
int3
and
add
cmpsb
clc
adc
add
cmp
cltd
xabort
mov
movsl
clc
fcomps
or
pop
add
add
pop
imul
clc
mov
inc
clc
xchg
jne
std
fs
addr16
into
xchg
mov
xabort
add
xchg
pop
xor
add
repnz
add
add
add
clc
loop
int
clc
test
sub
pop
incl
pop
clc
xchg
paddusw
sahf
data16
sti
pop
mov
in
fwait
dec
frstor
add
inc
clc
jae
add
aas
loope
jnp
jge
clc
push
mov
and
add
adc
xor
clc
lods
test
xlat
add
mov
add
ret
clc
enter
add
mov
add
jae
add
cli
lods
imul
in
mov
push
dec
aas
clc
push
add
data16
push
popf
inc
clc
push
sub
test
sbb
lods
inc
add
mov
clc
add
add
sahf
ja
push
clc
insb
nop
fisttps
arpl
add
add
sbb
add
add
add
add
add
clc
cmp
add
movsb
clc
out
lods
not
aas
jnp
mov
add
mov
mov
xchg
lods
xchg
lods
mov
jmp
add
push
dec
out
movsb
clc
jae
add
add
or
add
iret
jbe
shlb
add
add
inc
add
xabort
clc
and
add
clc
xor
add
add
clc
rorl
cmp
fimull
dec
push
add
pop
clc
inc
add
insl
in
fwait
mov
add
jg
jp
clc
arpl
add
cs
add
add
lock
pop
testb
hlt
or
add
fistl
add
add
pop
inc
clc
inc
add
ja
insl
fdivrs
clc
mov
insb
scas
clc
shrd
lahf
xbegin
add
dec
sahf
imull
sbb
push
sar
dec
mov
cmc
ror
jbe
loopne
testb
cmp
cmp
add
adc
add
xabort
add
push
in
mov
and
add
and
jl
test
xchg
out
sub
add
clc
ljmp
test
adc
add
clc
mov
adc
add
add
kmovw
add
jb
add
cmp
iret
ret
cmp
clc
pop
clc
repz
pusha
add
xchg
cmp
clc
add
add
cmp
add
mov
add
mov
mov
out
ficoml
inc
clc
cmp
add
add
das
cmp
lcall
add
mov
add
sub
clc
add
or
clc
sbb
jo
add
clc
jo
add
mov
xchg
lcall
add
add
ljmp
add
add
cmp
clc
mov
cmp
loopne
dec
xbegin
add
xchg
loopne
mov
ret
clc
mov
mov
jno
add
in
test
imul
add
idivl
jecxz
arpl
add
add
pop
arpl
add
outsl
pusha
add
and
add
pusha
add
pop
clc
loopne
outsb
repnz
add
inc
add
cli
iret
icebp
sar
fucomip
rcrb
mov
cmp
mov
add
dec
jo
add
cld
dec
pop
es
test
dec
std
aam
stc
sbb
outsl
aaa
cmp
xlat
cmp
clc
aas
out
scas
xor
add
mov
mov
cwtl
mov
clc
pushf
scas
adc
add
aad
dec
cltd
pop
clc
lock
xchg
testl
add
popl
dec
pop
dec
pop
and
add
cltd
mov
jmp
add
add
add
inc
add
pop
xor
add
sar
clc
in
ljmp
lea
add
add
insb
and
add
dec
add
add
sar
out
jge
clc
sub
aam
cmp
mov
add
cmp
pop
push
clc
clc
cmp
add
xor
clc
xor
xabort
jns
clc
incl
push
add
or
add
scas
movsb
clc
mov
add
add
and
add
or
xchg
dec
add
add
jbe
ss
call
add
clc
add
add
clc
and
fisttps
add
mov
clc
sub
sbb
xor
decl
pop
sbb
xchg
or
cmp
mov
pusha
add
cmp
cmc
sbb
cld
push
pop
call
add
add
add
clc
mov
fidivrs
clc
fildl
add
jecxz
bound
add
add
cld
fistl
jne
push
fildl
mov
sahf
mov
cmpsb
clc
or
sar
gs
sub
aas
add
add
jne
or
clc
mov
dec
mov
clc
fimull
clc
jmp
scas
loope
ret
clc
dec
fnstcw
mov
jae
add
add
sbb
or
shll
sbb
dec
push
add
leave
imul
repnz
jecxz
cmp
je
add
add
add
icebp
int3
pop
push
out
jge
add
arpl
add
es
dec
mov
inc
add
lods
inc
clc
dec
jns
shrl
lahf
sub
mov
and
add
add
xchg
iret
sbb
dec
xbegin
clc
add
add
lock
dec
popa
add
mov
insb
pop
call
push
push
sub
stos
xchg
inc
clc
xlat
sub
cmp
aam
pop
mov
add
call
ficomps
dec
dec
loope
sar
mov
add
jg
repz
mov
add
add
or
clc
int
add
pop
std
jl
dec
adc
clc
fs
icebp
or
lock
xchg
jns
add
add
xabort
aam
clc
lret
hlt
xabort
clc
in
js
insb
addr16
xlat
popf
jl
clc
outsl
mov
outsb
sub
clc
arpl
add
clc
sbb
in
adc
add
cmpsb
clc
xor
add
loope
or
push
repz
mov
mov
lods
movsb
clc
sar
mov
add
add
scas
ljmp
pop
jo
add
aas
add
xchg
or
cmpsl
clc
bound
add
lret
fnstenv
add
ror
cmp
push
idiv
pop
xchg
cli
lock
mov
dec
mov
lods
sbb
jle,pn
in
outsb
xor
clc
es
fldt
cmpsb
clc
popf
fisttps
pop
pop
fnstenv
jnp
rcrb
sahf
xchg
and
add
add
dec
dec
jae
add
inc
add
pusha
add
mov
xor
add
xor
xor
mov
clc
xor
add
adc
clc
sub
cmp
xlat
aad
add
pop
fwait
mov
int
lret
mov
push
add
cmp
lods
mov
fs
xabort
test
bnd
clc
add
add
aas
dec
test
fwait
ret
xchg
gs
push
jle
xchg
adc
add
clc
push
add
sbb
clc
inc
add
adc
insl
lahf
gs
and
add
repnz
clc
xor
add
bound
add
jp
jno
add
sahf
pop
daa
clc
dec
jg
xor
add
clc
push
adc
add
or
and
add
fcoml
add
sahf
and
add
mov
fidivl
add
test
inc
clc
dec
ljmp
call
inc
add
xabort
test
test
lods
or
mov
cli
inc
add
xchg
cltd
js
clc
lret
add
add
stc
test
clc
insb
mov
add
jns
cmpsl
clc
ljmp
or
sarl
xor
add
push
mov
shr
push
add
cmp
add
sar
pop
adc
add
add
mov
repz
cltd
js
clc
lret
mov
add
sahf
mov
jae
add
or
outsl
push
fcos
das
in
jl
clc
adc
add
add
add
cmp
clc
nop
jne
jno
add
clc
mov
clc
mov
add
cltd
in
das
sar
clc
jae
add
cmc
pop
stos
cmp
push
js
inc
clc
and
clc
lea
add
add
add
dec
cwtl
mov
imul
clc
pop
xchg
sub
push
jbe
push
add
jo
add
mov
add
cli
dec
mov
add
or
mov
mov
clc
cmp
clc
repz
hlt
jne
cmp
clc
out
in
adc
add
sub
fnstcw
jle
jmp
add
mov
mov
popa
add
pop
sbb
dec
lock
pop
clc
or
aaa
int3
mov
clc
xchg
and
int3
pop
mov
adc
add
add
xchg
mov
push
add
fsubs
clc
shll
add
sbb
clc
xchg
imul
addr16
add
inc
clc
or
add
add
xchg
or
jl
add
sub
clc
or
sar
push
xor
add
insl
add
pop
add
add
sti
or
and
pop
and
add
add
in
repnz
push
add
dec
outsl
lods
ficompl
cmp
pop
scas
adc
lcall
out
cwtl
xchg
xchg
pop
add
add
add
pop
adc
xor
add
add
add
mov
clc
or
pop
cmp
into
insb
mov
mov
add
clc
cvtps2pd
clc
sbb
clc
lcall
add
add
mov
ss
add
cmp
bound
add
adc
add
test
cmp
clc
add
add
insb
jp
add
inc
clc
enter
add
clc
jg
dec
inc
clc
xlat
decl
clc
mov
sub
sahf
movsl
clc
adc
add
xchg
push
jb
add
clc
outsb
jo
add
add
repnz
and
add
clc
mov
clc
add
add
out
movsl
clc
push
imul
addr16
and
add
js
clc
pop
mov
add
sub
xor
add
jp
mov
dec
int3
aas
outsb
std
or
add
filds
clc
cmp
add
xbegin
je
mov
add
clc
out
mov
clc
xchg
cmp
clc
pop
clc
inc
clc
push
add
add
push
add
cmp
add
std
mov
add
in
jle
dec
outsb
adc
add
xchg
mov
lods
push
add
es
hlt
scas
lret
punpckhwd
aaa
push
add
pop
add
add
clc
clc
jecxz
adc
clc
out
ds
and
fists
jbe
clc
addr16
iret
popa
add
sub
dec
mov
or
clc
je
or
clc
mov
add
add
cmp
mov
or
insb
mov
roll
add
xabort
fistpl
xchg
xor
add
adc
add
clc
xchg
fildll
pop
inc
add
cmp
clc
sub
add
clc
ljmp
dec
insl
iret
and
add
ds
jb
add
clc
addr16
mov
add
add
add
sub
push
dec
cmp
scas
test
inc
clc
cmp
or
aas
loopne
or
call
mov
push
xchg
mov
stc
icebp
test
cmc
mov
inc
add
push
add
pop
push
add
dec
ret
clc
xchg
push
sbb
mov
or
data16
outsl
sbb
add
sbb
enter
sar
clc
shufps
xchg
pop
clc
sarl
add
mov
jmp
push
inc
add
arpl
add
clc
jno
add
or
or
jae
add
clc
pop
add
add
mov
or
push
mov
outsb
rcr
ret
clc
adc
add
dec
mov
outsl
fadds
xlat
enter
mov
and
add
add
mov
adc
add
add
clc
mov
clc
mov
mov
fcmovnbe
cld
ljmp
rol
clc
jns
fdiv
mov
outsl
fldpi
cmpsl
clc
lods
jnp
clc
inc
clc
dec
xor
clc
cmpsl
clc
sbb
inc
add
or
xchg
lcall
dec
mov
clc
mov
add
add
dec
dec
push
out
int
clc
and
add
sbb
add
mov
push
add
mov
clc
mov
cmpsl
clc
cmc
insl
es
jno
add
xchg
pop
clc
add
add
mov
cmp
call
add
add
mov
add
cmp
add
fcmovb
clc
jl
clc
dec
push
mov
jle
add
mov
sub
sbb
push
add
add
clc
mov
clc
jne
jno
add
pusha
add
push
add
inc
add
mov
add
clc
xlat
fnstcw
clc
out
adc
cwtl
mov
add
mov
test
scas
sub
decl
clc
cld
cmp
roll
add
mov
insb
sub
clc
xchg
xor
add
and
add
shll
xor
add
add
gs
and
add
faddl
push
or
ja
add
nop
pop
loop
mov
cmp
mov
cmp
pop
shlb
add
sti
cltd
test
int3
sar
jmp
adc
add
add
add
imul
scas
mov
dec
pop
sub
clc
mov
insl
mov
data16
dec
repz
in
mov
jno
add
add
clc
and
add
mov
mov
loopne
cmp
add
add
cmp
clc
and
add
test
in
stos
and
cmp
in
xor
add
add
xchg
or
lcall
lcall
bound
add
clc
jae
add
add
lock
lret
aas
bound
add
clc
dec
mov
push
add
push
cmp
out
adc
add
add
mov
add
and
shlb
add
fdivl
xor
add
jno
add
sti
xchg
inc
add
lea
insb
fs
ds
std
push
mov
movsl
clc
pop
fdivrp
bound
add
fistl
add
add
clc
lahf
push
mov
bound
add
add
das
divl
add
popf
dec
pop
xchg
jbe
mov
cmp
clc
adc
add
add
add
repnz
sub
add
out
pop
outsl
ficomps
push
rclb
add
ud0
jno
add
fiadds
add
push
mov
or
pop
iret
sub
add
sbb
add
cmpsb
clc
fiaddl
mov
cmpsl
clc
or
add
jae
add
add
jno
add
sub
inc
clc
xchg
scas
push
sub
cmpsl
clc
xor
add
data16
mov
and
mov
clc
push
add
sbb
leave
idivb
mov
add
push
mov
arpl
add
outsl
adc
inc
clc
mov
mov
js
stos
mov
dec
jae
add
add
add
add
sbb
add
sub
clc
shlb
add
add
mov
cmp
add
add
mov
clc
jo
add
xor
add
pop
sub
mov
add
cmp
clc
adc
jl
imul
cli
outsb
faddl
add
add
add
and
stos
jns
add
pop
cmpsb
clc
cmp
mov
dec
bound
add
add
or
in
leave
clc
int3
loop
mov
add
dec
push
je
push
mov
add
int
out
and
add
add
data16
xor
add
add
sub
add
clc
jl
pop
cmp
clc
rcrb
clc
lcall
cmp
clc
add
add
clc
adc
add
push
loop
test
pop
mov
sbb
arpl
add
inc
clc
cwtl
sub
flds
add
fs
outsb
push
hlt
push
add
pushf
pop
imul
add
add
add
stos
lods
ds
sub
clc
mov
mov
xchg
mov
xchg
loope
push
and
std
mov
clc
out
mov
xor
add
fldz
clc
pop
clc
sar
xabort
pop
insb
mov
add
push
movsl
clc
call
add
mov
add
fbstp
cwtl
loope
pop
gs
pop
data16
jb
add
add
clc
pop
adc
add
fs
push
push
xchg
lods
cmpsb
clc
stos
inc
clc
add
add
js
sbb
into
xor
add
imul
jo
add
clc
aad
jmp
clc
xlat
jmp
ja
pushf
jecxz
lea
add
add
call
insl
inc
add
mov
popf
outsl
stos
xor
mov
adc
add
add
push
sbb
clc
jno
add
repnz
xchg
out
push
add
out
push
sbb
jl
add
arpl
add
xchg
jmp
adc
add
aam
sar
repz
push
add
xbegin
clc
dec
push
dec
or
and
add
