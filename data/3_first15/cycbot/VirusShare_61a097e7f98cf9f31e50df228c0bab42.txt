add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
add
or
or
or
or
or
add
or
add
or
or
or
add
or
or
add
add
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
or
or
or
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
or
or
or
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
add
or
add
or
add
add
add
or
or
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
or
or
or
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
or
add
or
add
or
or
or
or
add
or
add
or
or
add
or
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
add
or
or
add
or
add
add
add
or
add
or
add
or
or
or
or
add
add
or
add
or
or
add
add
add
or
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
or
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
or
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
or
or
or
or
add
or
add
add
add
add
add
add
or
add
or
add
or
or
or
add
add
or
or
add
add
or
add
or
add
add
add
or
add
add
or
add
or
add
add
add
or
add
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
or
add
add
or
add
or
or
or
add
or
add
add
add
add
or
or
add
add
or
or
or
or
or
add
or
add
or
add
add
or
add
add
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
or
or
add
or
or
add
add
or
or
add
add
add
or
add
or
add
add
or
or
add
add
or
or
or
or
or
add
add
add
add
add
add
or
add
or
add
add
or
or
add
add
or
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
add
add
add
add
or
or
or
add
add
or
add
add
add
or
or
or
or
add
or
add
or
or
or
add
add
or
add
or
add
or
add
or
add
or
or
add
add
or
add
or
add
add
add
or
add
add
add
add
or
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
or
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
or
add
or
add
add
add
or
add
add
add
or
or
add
or
add
add
add
add
or
or
or
add
add
add
add
add
or
add
or
add
add
add
add
add
or
or
or
add
or
add
add
or
add
add
add
add
add
add
add
or
add
or
or
add
or
or
or
or
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
add
or
or
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
or
or
or
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
or
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
or
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
or
or
or
or
add
add
add
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
or
add
or
add
or
add
add
add
add
or
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
or
or
add
add
add
or
add
or
add
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
add
or
or
add
add
or
or
or
add
add
add
add
add
add
or
add
or
add
or
add
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
or
add
or
or
or
add
add
add
add
add
or
add
or
or
add
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
add
or
add
or
or
add
or
add
add
or
or
or
add
add
add
add
add
add
or
or
add
add
or
add
add
add
add
add
add
or
add
or
add
or
or
add
add
or
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
or
or
add
add
add
add
add
or
add
or
add
add
add
add
or
or
add
or
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
add
or
add
or
add
add
add
add
add
add
add
or
or
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
or
or
add
add
add
or
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
or
or
add
add
add
add
add
add
add
or
add
or
or
add
add
or
add
add
add
add
or
add
add
add
or
or
or
or
add
add
add
add
add
or
add
add
add
or
or
or
or
add
add
add
add
add
or
add
or
or
add
or
add
or
add
or
add
add
add
add
or
add
add
or
or
add
add
add
add
or
add
or
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
or
add
add
or
add
or
add
or
add
or
add
or
add
add
or
add
add
or
add
or
add
or
add
add
or
or
add
or
add
or
add
or
or
add
add
or
add
add
add
add
add
add
or
add
add
or
add
add
add
or
or
add
add
add
or
add
or
add
or
add
or
add
add
add
or
add
add
or
add
add
or
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
or
add
add
or
add
or
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
or
add
add
add
add
add
add
or
or
add
or
add
or
or
add
add
add
or
add
or
or
or
add
or
or
or
add
or
or
add
add
add
add
or
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
or
add
or
add
or
add
add
or
add
add
or
or
add
add
add
or
add
add
add
or
add
add
or
or
or
add
add
add
or
or
add
add
add
add
add
or
add
add
add
add
add
or
add
or
add
or
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
or
add
add
or
add
add
add
add
or
add
or
add
add
or
add
add
add
add
add
or
or
add
add
add
add
or
or
add
or
or
add
or
add
or
add
add
or
add
add
add
or
add
or
or
add
add
add
add
or
add
or
add
or
add
add
add
add
add
add
or
add
add
add
add
or
add
or
add
add
add
add
add
add
or
or
add
or
add
or
or
or
add
or
add
add
or
add
add
add
or
add
add
add
or
or
add
add
add
add
add
add
add
or
add
add
add
or
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
or
add
or
add
add
add
add
or
add
or
or
add
add
add
add
or
or
or
add
or
or
add
or
or
add
add
or
add
add
or
add
add
add
or
add
add
add
or
add
add
add
add
add
or
add
or
add
add
add
or
add
or
add
or
add
or
add
or
or
or
add
add
add
add
add
add
add
or
add
or
add
add
add
add
or
add
add
add
add
add
add
add
or
add
das
stos
fnstenv
pop
decl
add
add
lods
pop
rolb
and
roll
jl
cmp
mov
adc
into
cmpsb
pushf
pop
sti
icebp
add
add
add
lods
pop
add
test
fisttpl
add
add
push
stos
cmp
lods
fiaddl
pop
jle
mov
fwait
arpl
inc
mov
shl
pusha
add
add
sub
add
add
xchg
imul
int
loopne
lds
out
xor
add
mov
mov
mov
add
or
insl
nop
pop
ds
popl
pop
push
mov
jne
sahf
push
pop
push
xchg
add
add
add
push
popf
aad
into
xchg
adc
push
rolb
jo
or
sarb
xchg
push
test
cmp
inc
call
lods
lods
sbb
xor
sbbl
inc
mov
xor
push
push
loopne
inc
jne
loope
adc
cmpsb
xchg
xchg
lock
or
mov
popa
scas
call
lods
mov
mov
xchg
scas
rcll
push
pop
clc
pop
imul
cld
pop
scas
in
mov
subl
mov
das
jmp
xor
fwait
mov
jae
mov
in
sub
pop
push
adc
pop
repnz
pop
inc
lahf
inc
es
divl
ret
clc
pop
test
pcmpeqd
lcall
mov
cltd
lea
add
jo
mov
insb
add
add
push
mov
pop
lcall
push
adc
out
sub
add
add
xchg
add
adc
jg
mov
adc
loop
mov
add
incl
sbb
pop
outsl
out
fildll
fchs
stc
bound
cmp
add
mov
call
mov
mov
rcrb
mov
push
xor
stos
jp
fstpt
ret
loop
inc
mov
aas
mov
and
jne
xchg
xchg
xchg
sub
cmp
mov
mov
jp
add
add
sub
addr16
aaa
jae
shrb
add
or
cmc
loop
in
loop
push
nop
add
dec
mov
fnstenv
mov
in
nop
or
add
add
sarl
fadds
bound
add
cli
cld
inc
lods
int
xlat
hlt
stos
lret
aam
lods
repz
xchg
push
lcall
push
pop
jl
arpl
adc
inc
clc
dec
enter
mov
pop
inc
mov
cmpl
scas
popf
scas
jecxz
adc
scas
outsl
dec
and
hlt
in
pop
jmp
jmp
adc
or
add
add
rcll
dec
and
add
add
add
add
sub
add
add
sbb
add
add
jcxz
js
adc
xchg
out
adcl
cs
inc
sbb
add
add
daa
fwait
push
sti
push
loope
xor
fisttpll
pushf
or
push
mov
pop
test
inc
fsubrl
popf
into
cmpsb
shlb
js
data16
mov
ja
test
das
and
jb
mov
mov
add
add
add
mul
jbe
or
insb
mov
popf
loopne
sarl
or
adc
add
add
pop
jnp
push
mov
add
icebp
push
sub
fadds
repz
and
mov
add
add
ja
add
add
add
ds
mov
adc
fbld
add
add
sbb
add
add
mov
notl
xchg
add
in
add
add
daa
add
loopne
push
andb
call
add
add
add
add
xor
push
cmp
cld
jg
cmp
adc
pop
ret
hlt
stc
mov
sub
jo
aas
add
aas
or
add
add
add
add
jl
jle
ror
sbb
mov
push
or
adcl
aas
ret
jle
cltd
mov
xor
jecxz
or
inc
sahf
jecxz
push
sbb
mov
xchg
fisttpll
push
xchg
dec
cmp
add
add
fsubrs
add
popa
in
cmpl
imul
sub
cmp
mov
hlt
enter
rcrb
insl
adc
push
loope
push
add
add
add
add
add
mov
mov
inc
mov
mov
adc
into
and
ja
sub
rorl
push
repz
stc
jge
mov
sbb
inc
jp
add
mov
lods
sub
add
add
jecxz
xchg
and
add
add
add
ss
and
add
add
pop
je
clc
js
mov
add
add
aam
jge
add
dec
mov
jno
imul
mov
or
aas
test
test
cmpsb
cs
aam
ret
xor
pop
or
ljmp
add
add
add
enter
loop
hlt
enter
fdivrl
dec
pop
inc
inc
mov
sbb
jns
push
dec
mov
mov
mov
or
shlb
and
add
add
ficomps
mov
in
inc
int
aam
inc
mov
pushf
flds
data16
dec
add
add
lods
aad
test
jp
pop
popf
xchg
mov
into
and
jp
pop
pop
cmp
cmp
mov
sbb
icebp
mov
add
cmpsl
mov
adc
int
ja
or
xchg
lock
fcmovnbe
dec
lods
push
jmp
xlat
adc
pop
in
or
add
add
rcrb
add
test
mov
js
inc
jle
mov
aam
sub
add
cmp
push
cmpsl
mov
sbb
movsl
stos
push
fwait
das
mov
mov
add
add
add
adc
mov
add
jae
xchg
call
mov
neg
sbb
outsl
mov
push
mov
aam
daa
test
fwait
pop
inc
adc
inc
out
xchg
ss
out
shl
mov
lock
mov
pusha
mov
aad
dec
sbb
add
add
xor
add
add
clc
rolb
or
lock
push
dec
imul
mov
les
sbb
push
push
in
pop
lret
sub
add
add
andl
and
add
add
add
add
xchg
mov
movsl
aaa
lods
push
out
fdiv
push
mov
mov
mov
orl
jne
cmpsl
testb
mov
mov
inc
or
xor
add
add
ret
arpl
adc
lods
aas
fld
sub
add
add
adc
inc
das
adc
rolb
mov
pop
jo
jo
addr16
lock
add
add
add
xchg
push
jp
mov
mov
in
mov
inc
mov
fisttpll
add
add
add
das
xchg
add
es
mov
repz
mov
mov
fimuls
jo
cli
mov
or
mov
jae
ss
add
add
into
int3
xlat
shlb
jae
cmp
ret
mov
jmp
pop
int3
mov
insl
xchg
js
std
cmp
add
add
lret
inc
sahf
cltd
dec
add
add
push
sbb
add
lcall
add
cmp
leave
testb
das
stos
push
push
jo
fiadds
into
fistpl
cmp
add
stc
movsb
mov
add
dec
mov
mov
xchg
add
add
xlat
cmpsl
nopl
add
add
add
andb
add
add
sub
gs
adc
mov
jp
out
scas
in
lret
jmp
out
adc
in
ss
push
push
jp
push
dec
add
add
xchg
clc
insl
mov
dec
jmp
jne
jae
sahf
aad
dec
add
add
cld
xlat
mov
hlt
cmp
add
add
add
cwtl
adc
jne
ljmp
push
pop
mov
aas
hlt
stos
mov
andb
add
add
push
mov
outsb
fdivrs
outsl
push
push
jb
sahf
mov
pushl
push
lea
mov
mul
test
add
add
pushf
or
sahf
mov
test
and
loope
je
shl
inc
cwtl
pop
dec
dec
sahf
shll
add
add
cmp
dec
into
mov
push
dec
cwtl
xchg
mov
cmp
cmp
mov
add
add
add
add
add
add
outsl
nop
jno
loop
arpl
stc
dec
sbb
xor
cwtl
mov
neg
sub
add
add
xor
ja
pop
jecxz
cmp
pop
jb
in
out
dec
sub
ficompl
in
xlat
pop
mov
pop
in
adc
cli
mov
fiadds
rcl
in
push
push
cwtl
jno
pop
pop
mov
cmp
xchg
lcall
es
ja
cmp
mov
mov
imul
arpl
into
lods
inc
jns
lret
and
inc
xor
ljmp
inc
lock
and
add
add
out
sbb
dec
mov
cli
xchg
mov
adc
mov
pop
out
test
loop
mov
add
mov
popf
push
or
ror
sub
add
add
inc
ljmp
push
inc
add
jg
cmpsl
dec
cmp
fwait
ljmp
xor
xchg
add
add
sub
mov
xchg
pop
popfw
push
cmpsl
test
add
add
popf
push
cs
add
add
fildll
xor
fs
pop
mov
push
scas
test
mov
push
and
mov
sbb
fldenv
sub
add
add
mov
inc
sub
mov
dec
xchg
dec
push
sbb
jmp
cld
push
ljmp
add
or
or
mov
cmp
sub
add
add
xchg
cmp
ds
into
lds
mov
xchg
xchg
ja
pop
xor
add
mov
out
adc
pop
popa
notl
jg
lea
inc
test
and
xchg
mov
cwtl
arpl
test
das
push
and
push
and
add
add
out
adc
mov
sahf
sti
mov
cwtl
jb
pop
jecxz
pusha
add
add
sbb
ret
adc
pushf
pop
in
adc
mov
push
enter
sbb
mov
or
add
add
inc
lahf
adcl
je
call
mov
add
dec
mov
stos
jmp
test
popf
fwait
cltd
jnp
test
add
add
dec
mov
mov
mov
add
add
add
ret
mov
push
dec
push
pop
jg
mov
or
mov
cmpsl
cltd
jns
scas
subb
cmp
jno
icebp
es
gs
jmp
shlb
pop
push
imul
movsl
lock
pusha
mov
stos
mov
mov
pop
adc
aam
int
push
loope
adc
in
jecxz
sbb
add
xorb
xchg
into
jb
in
jge
and
sahf
lods
and
lods
je
lcall
xor
adc
inc
jge
mov
add
add
add
outsl
scas
cmpsb
xchg
pop
xchg
cwtl
cmp
sbb
mov
stos
add
outsl
push
call
add
add
aaa
sub
add
add
aam
andb
xlat
ficoms
repz
in
add
add
lods
out
popl
mov
dec
adc
shll
es
lods
stos
into
jns
out
int
data16
xor
add
add
push
cmc
andb
mov
jae
shlb
iret
sbb
mov
pop
shr
xor
dec
jl
cmc
or
jno
dec
rorb
fimuls
icebp
pop
sub
add
add
fucom
enter
movsl
push
shlb
inc
movsl
mov
and
ret
jge
cmp
das
jge
into
iret
fsubs
insb
mov
xchg
add
push
xor
pop
sarb
stos
fs
or
add
add
jb
cmp
aas
movsb
hlt
cmc
dec
pop
fstp
std
jb
test
add
fldlg2
sub
bound
les
sub
add
add
cmp
add
sbb
clc
add
add
add
cltd
xchg
pushf
xlat
mov
cmc
mov
add
pop
or
add
add
test
sbb
gs
add
add
jbe
or
out
cmp
sbbb
jo
add
add
pop
mov
stc
and
add
add
xchg
adc
mov
push
in
repz
in
imul
out
iret
mov
or
lahf
lahf
ret
out
es
add
mov
jo
push
shlb
or
add
add
insb
mov
mov
roll
mov
mov
add
cmp
cmp
mov
add
add
rol
dec
adc
add
add
add
add
add
mov
mov
sbb
add
add
and
add
add
cltd
push
mov
lock
or
adc
mov
shl
cmc
fistpll
cmp
mov
inc
mov
xor
add
add
xor
mov
pushf
popf
sbb
scas
xchg
mov
add
add
add
stc
test
mov
pcmpgtw
add
add
add
lds
xchg
shlb
inc
mov
out
inc
mov
ss
pop
test
jmp
bound
mov
add
rcrl
push
inc
das
inc
cmp
arpl
lds
popa
call
add
add
stos
dec
mov
cmpsb
push
mov
inc
or
add
add
mov
mov
imul
mov
out
bound
xchg
mov
lcall
fiadds
add
add
in
pop
dec
adc
outsb
outsl
les
push
xchg
data16
mov
imull
and
add
add
ljmp
add
add
fstpt
in
repnz
fsub
das
inc
lret
movsb
mov
push
add
add
add
mov
add
add
dec
add
add
pop
mov
add
dec
and
add
add
add
add
sub
loopne
jmp
flds
jl
cmp
addl
dec
push
lret
inc
add
add
imul
cmp
add
jg
push
adc
add
add
shl
or
mov
aas
push
adc
mov
sub
add
add
or
aas
xor
add
lods
cld
sbb
mov
mov
cmp
stos
out
push
hlt
jno
inc
or
add
add
jb
dec
mov
add
add
adc
jae
aaa
sub
add
add
stos
jge
fidivs
inc
add
add
cmpsb
mov
arpl
sub
mov
mov
pop
mov
jne
cwtl
pop
jb
adc
das
std
repnz
jnp
mov
xor
mov
mov
loopne
jno
jbe
ret
mov
xchg
loop
daa
mov
push
cwtl
arpl
adc
icebp
orb
add
dec
adc
add
mov
xorl
lret
ror
fsubrp
mov
add
add
mov
ljmp
add
add
mov
in
leave
add
les
xor
insb
mov
lcall
add
mov
add
xchg
cmovae
or
add
add
push
xlat
push
shll
in
mov
and
add
add
xlat
xor
in
xchg
pusha
mov
scas
cld
scas
mov
ret
sub
and
pusha
add
add
xor
xchg
clc
pop
xor
add
add
mov
ficoms
imul
add
add
roll
pop
xchg
add
sbb
aaa
add
add
add
ret
and
sub
fists
inc
stos
addr16
inc
gs
sahf
ss
xor
add
sub
cmp
arpl
in
mov
sub
add
add
aam
dec
push
aaa
lcall
scas
fists
jno
mov
add
iret
push
xchg
movsb
mov
sbb
dec
and
add
add
add
add
add
push
sub
add
add
nop
xor
xchg
mov
mov
add
loope
pushf
xchg
adc
les
mov
adc
adc
pop
sbb
push
sbb
sbbl
lcall
add
add
mov
mov
mov
mov
lcall
bound
dec
push
add
add
add
or
add
add
aad
cld
dec
mov
add
add
sub
inc
push
mov
movsb
sub
add
xor
je
mov
pop
inc
add
add
cmp
add
add
mov
mov
test
add
add
mov
adc
lcall
add
add
into
repnz
fdivrp
repz
sbb
cmc
sbb
shl
push
jmp
cmp
outsl
push
adc
loop
mov
push
sbb
iret
xor
out
daa
mov
pop
sbb
inc
cltd
leave
pop
cmp
repz
adc
push
mov
iret
loopne
add
and
add
add
jb
out
add
add
add
insl
dec
call
xor
nop
or
add
add
cmp
pop
stc
pop
pop
inc
pop
dec
xchg
mov
cmp
loope
add
add
lods
add
repz
imul
xor
lahf
es
sub
lret
add
lcall
add
arpl
xor
push
fwait
loope
cli
xor
fbld
and
inc
mov
pop
mov
dec
cmp
aaa
jbe
stc
in
lods
dec
dec
mov
adc
aam
mov
sub
mov
popf
inc
das
sahf
dec
xchg
jle
out
and
xchg
sbb
pop
or
out
pop
and
cmc
js
pop
cmp
aad
xor
add
and
add
add
testb
push
mov
mov
adc
pop
cltd
sub
add
add
cmc
jns
popa
jo
int3
inc
adc
jae
jmp
ret
loopne
mov
pop
shll
popa
rorb
test
mov
sarl
sub
add
add
clc
sbb
and
mov
mov
cmpsb
stos
outsl
add
out
popf
mov
cmpsb
fldenv
xchg
aad
mov
adc
dec
popa
dec
or
movsl
addl
or
add
add
je
mov
cwtl
mov
jne
rorl
add
add
ss
adc
gs
adc
sti
loopne
fsts
rorb
add
sbb
int3
add
add
mov
mov
mov
inc
scas
das
xchg
out
movsl
add
into
or
add
add
mov
pop
mov
enter
stc
in
pop
cmp
dec
out
push
mov
jno
scas
movsb
ficompl
add
fwait
popa
in
cmpsl
std
scas
mov
add
repz
ss
add
sbb
pop
arpl
add
push
sbb
sbb
or
in
and
push
daa
add
jo
mov
lret
sbb
add
addr16
mov
xchg
popf
mov
jmp
fwait
xchg
jae
jnp
loop
dec
aas
or
xor
popf
inc
adc
add
stos
push
sbb
inc
cmp
cmpsb
sbb
cli
dec
mov
jo
jo
movsl
push
pop
mov
xchg
je
int3
mov
shll
scas
mov
adc
mov
dec
add
add
fisttpl
cmp
sbb
or
jae
and
les
add
add
out
rcrl
or
mov
xchg
push
push
pusha
mov
mov
mov
loope
mov
dec
mov
ss
hlt
xor
jecxz
subb
jecxz
push
stos
and
add
add
stos
stos
pop
fs
ds
lahf
orl
shr
jno
push
cli
pop
insb
mov
dec
add
add
das
fwait
xchg
sbb
in
addr16
ljmp
add
add
add
sahf
pop
ja
jge
cmp
dec
jae
int
add
add
lahf
mov
dec
mov
repz
add
cmp
cmp
mov
loop
add
add
push
aam
push
in
pop
fwait
lahf
adc
sarl
mov
dec
xor
add
add
add
dec
mov
mov
adc
popa
lock
add
add
repz
xchg
imul
add
cs
mov
incl
cmp
push
insb
mov
repnz
mov
dec
ja
push
lcall
loope
mov
test
mov
sbb
add
add
mov
cmp
scas
dec
jo
setg
out
add
add
add
test
cmp
dec
pmaxsw
pop
cmp
push
in
dec
adc
add
sbb
mov
mov
ror
push
movsb
mov
lret
out
xchg
dec
outsl
faddl
out
nop
and
stc
leave
dec
inc
add
add
mov
lods
cmpsl
mov
divb
hlt
je
or
jae
aam
fstps
pop
shll
popa
sub
call
in
sub
call
cmp
jne
lea
push
push
call
or
mov
shr
mov
add
push
push
push
push
push
call
leave
ret
mov
mov
mov
or
cld
lea
lea
sub
shr
lock
mov
je
mov
add
lea
clc
jmp
ret
ret
push
mov
sub
lea
movl
movl
push
push
push
push
push
cld
call
test
jne
push
call
jmp
pop
sbb
add
add
push
sbb
imul
mov
add
inc
sbb
mov
add
mov
in
sahf
sub
add
add
adc
arpl
adc
sbb
push
push
scas
das
enter
add
add
enter
aad
cmp
add
add
add
fucomip
xchg
pop
mov
lds
pop
insb
mov
jp
xor
add
js
mov
or
jnp
roll
add
lock
movsb
enter
add
add
ljmp
fiaddl
add
add
add
add
test
ret
movsb
ret
or
test
sbb
lds
addb
mov
mov
fsubs
std
push
clc
in
int3
incl
jecxz
adc
mov
das
mov
add
dec
mov
jo
sbb
mov
sahf
in
and
mov
clc
sbbl
push
stos
popa
ficompl
xor
call
add
cmp
jmp
add
add
add
add
add
add
test
js
or
add
add
scas
push
fidivrl
jns
movb
addb
and
shll
lods
enter
nop
xor
imul
push
xchg
je
sub
pop
mov
add
add
daa
sti
lret
push
loope
and
add
add
sub
add
add
sti
dec
ret
inc
ficoms
adc
call
mov
adc
add
add
mov
add
dec
add
add
mov
mov
mov
xor
add
add
or
xor
mov
ds
rclw
stc
loopne
cmp
mov
add
add
add
mov
add
je
add
add
lods
or
add
insb
add
add
and
loopne
jb
je
xchg
or
add
add
mov
mov
mov
pop
rol
mov
push
enter
push
shr
push
int3
cmpb
in
push
cmp
mov
mov
or
add
in
sbb
add
inc
inc
push
push
mov
add
cmpsb
clc
pushf
xor
dec
adc
dec
mov
mov
add
add
add
xor
add
mov
sub
push
mov
cmp
push
scas
jge
scas
stc
dec
mov
and
rclb
ret
out
cmp
xlat
and
add
add
inc
cld
rorl
add
add
std
movl
loop
mov
push
jecxz
test
jl
xor
mov
adc
dec
inc
lods
lahf
dec
mov
into
sub
add
add
into
inc
bound
pavgw
or
loope
add
add
cs
insb
add
add
mov
xor
jp
addl
add
mov
xorl
push
out
sbb
into
je
or
incb
adc
aas
xchg
pop
jg
mov
push
cmp
cmp
es
movsl
fmull
loope
outsl
or
adc
mov
dec
cmp
mov
pop
pop
test
xchg
jecxz
mov
add
add
pop
mov
insb
mov
fcmovbe
mov
aad
add
add
loop
insl
addr16
xor
inc
shlb
xchg
repz
xorl
mov
inc
repz
push
rol
inc
mov
out
das
jle
xor
sbb
and
pop
pop
mov
loopne
inc
sub
add
add
push
outsl
dec
lahf
sbb
inc
add
add
mov
cmp
add
sarl
fisubrs
mov
iret
mov
lcall
adc
xchg
mov
add
add
push
or
test
daa
dec
mov
cmp
enter
fnstsw
cmp
scas
lret
sub
mov
pop
ss
loop
loope
pop
scas
xlat
mov
call
sbb
jg
lods
add
jge
dec
mov
sti
pop
push
clc
xor
iret
shll
nop
subb
add
jp
lret
sub
xor
mov
mov
in
pop
jle
sbb
rol
pop
xlat
push
xchg
lods
cs
nop
jl
fcompl
add
add
ret
sbb
inc
xor
fsts
add
outsl
orl
add
rcl
adc
add
aad
sbb
mov
add
out
cli
lea
or
add
add
mov
mov
jge
jp
pop
aam
aad
leave
mov
or
xchg
repnz
dec
cmpl
add
add
orb
push
lcall
adc
or
add
add
jae
jl
loopne
adcb
dec
add
add
fsubrs
insb
add
add
inc
test
jecxz
mov
adc
xchg
fcomps
imulb
fwait
inc
add
add
lock
add
add
icebp
xor
jo
int3
mov
cli
test
xchg
subb
outsb
loopne
orb
xor
add
add
sbb
add
add
fiadds
add
stos
mov
cltd
mov
scas
dec
sbb
cmc
jg
mov
iret
inc
sbb
xchg
fcomps
stos
pop
dec
mov
adcl
add
pop
mov
hlt
cmp
fistl
lea
outsb
add
pop
add
add
call
add
pop
push
pop
iret
mov
sub
mov
mov
push
dec
out
sub
add
add
pop
sbb
loopne
fcoml
dec
dec
pop
push
daa
insb
mov
repnz
icebp
ljmp
push
dec
iret
gs
add
add
addl
add
add
add
push
loopne
scas
or
imul
or
ss
out
cmp
rorb
test
aam
fwait
ja
fwait
dec
mov
dec
push
add
add
push
inc
xchg
pusha
mov
out
jp
mov
out
add
aaa
loop
mov
decl
in
push
jl
adc
icebp
sbbb
xchg
cltd
jge
xchg
dec
sbb
xchg
add
add
sub
add
add
add
mov
dec
add
add
stos
loope
movsb
or
add
add
in
repz
add
add
add
sbb
add
je
loope
jmp
mov
mov
dec
mov
push
jg
jb
sub
add
in
push
mov
push
jle
fstpt
add
add
enter
mov
cmp
jae
mov
movb
add
add
push
movsl
pop
xor
and
mov
mov
mov
ljmp
mov
xchg
rorl
nop
test
fmull
add
sbb
enter
add
add
add
mov
add
add
or
mov
add
daa
mov
jno
inc
push
repnz
pop
iret
repnz
xchg
pop
sub
mov
inc
dec
mov
push
adc
add
jp
rcl
jb
lahf
aad
std
loop
repz
rolb
sahf
mov
mov
xchg
test
mov
add
add
jmp
mov
fdivrl
mov
sbb
lea
mov
push
mov
jb
mov
cmovl
fildll
add
xor
xor
cmpl
mov
ja
push
pop
sbb
bound
add
add
scas
inc
mov
mov
xchg
jb
inc
test
pop
jmp
inc
mov
xor
ficomps
iret
mov
or
push
jp
int
inc
fisttpll
mov
mov
pop
popa
in
out
mov
mov
mov
add
add
or
mov
cs
lcall
add
add
movsb
jge
ja
mov
decb
int3
jle
lret
in
xchg
das
es
out
xor
lods
jo
or
add
add
in
pop
fdivs
icebp
out
or
and
add
add
or
pop
shld
cmc
out
pusha
mov
mov
jp
add
add
adc
push
lret
jne
data16
jne
loopne
xchg
lahf
sbb
or
push
or
aaa
lcall
mov
movl
aaa
and
and
add
mov
call
shlb
mov
out
outsb
loope
sbb
gs
jmp
mov
inc
add
add
shr
mov
lret
sub
xchg
add
add
adc
add
add
pop
fnstenv
jle
neg
jnp
in
dec
mov
cld
xchg
xchg
enter
mov
dec
push
out
mov
and
add
test
or
imul
push
pop
ficoml
sub
add
add
dec
fyl2xp1
mov
ljmp
mov
es
inc
jbe
cmpsl
jp
loope
test
out
lock
cmp
cmpsl
sbb
addb
jge
mov
cli
inc
outsb
cltd
mov
push
cli
popf
or
add
push
popf
push
aad
add
add
cli
and
add
add
add
add
cmpl
fwait
rorl
je
dec
movsb
aas
mov
test
into
scas
and
add
sbb
lods
push
icebp
adc
cs
mov
mov
xchg
mov
sub
add
add
cli
sbb
add
add
lock
ffreep
gs
jnp
or
add
add
add
add
or
adc
mov
add
and
stc
hlt
xor
les
int3
rolb
and
add
cmp
popf
in
mov
mov
push
xchg
mov
push
inc
stc
je
popf
mov
pop
and
add
adc
ret
inc
add
add
repnz
fcmovnu
into
jle
adc
mov
insb
add
add
mov
mov
and
jmp
dec
jp
pop
and
mov
mov
and
add
add
sub
mov
adc
and
mov
rol
pop
mov
cmp
inc
add
add
cld
inc
add
push
xchg
cwtl
outsl
xlat
mov
mov
xor
push
pop
adc
in
mov
adc
mov
inc
shl
movsl
stc
add
add
add
cmpb
add
sub
add
add
movsb
mov
cmp
mov
out
mov
loop
adc
cltd
sub
add
add
andb
fwait
inc
roll
inc
lret
add
add
add
add
xchg
sub
add
add
jae
mov
out
lods
push
cltd
cmp
lret
jg
jbe
mov
repnz
imul
add
and
in
cmc
pop
pop
push
cld
pop
hlt
push
push
pop
jp
jmp
in
sbb
in
jns
adc
cmp
mov
jnp
lds
out
mov
mov
call
sub
pusha
mov
mov
mov
and
not
lds
pop
fwait
into
fdivrs
into
fmuls
sar
addr16
fyl2xp1
dec
cmp
add
jae
and
xor
into
dec
movsb
mov
adc
pop
or
mov
mov
repnz
add
add
loopne
ljmp
mov
pop
adc
mov
mov
inc
mov
imul
add
cltd
sbb
int3
ror
jmp
add
add
lret
sbb
add
and
in
mulb
lgs
jecxz
repnz
out
cmp
adc
rorl
add
loop
mov
sub
add
add
jo
jne
push
cmp
push
xchg
stc
test
mov
mov
cmc
xor
and
adc
mov
sub
out
mov
add
add
addr16
jp
ror
mov
or
mov
add
fbstp
mov
fildl
add
jmp
lahf
inc
push
arpl
inc
add
add
sub
es
in
arpl
dec
push
popf
in
mov
test
dec
add
add
rcrl
test
push
jecxz
mov
pop
mov
add
and
add
add
jge
jne
mov
add
fdivr
push
jl
outsb
dec
faddl
adc
rolb
add
mov
insb
add
add
cmp
mov
add
add
inc
push
shll
add
add
pusha
add
add
push
lock
popa
jecxz
test
lret
sub
mov
aas
push
mov
add
add
lds
out
pop
movsb
jmp
inc
add
add
ret
add
add
add
add
movsb
xor
sti
xchg
mov
lock
fucomp
mov
add
add
add
cmp
scas
xchg
push
mov
add
add
pop
push
popa
add
add
insb
mov
adc
call
add
or
jmp
xor
jg
cltd
mov
add
add
cmp
pop
and
add
add
add
or
jnp
push
xor
aaa
dec
int
mov
or
outsb
fdivr
jb
lea
add
push
mov
mov
sub
add
add
mov
add
jnp
and
add
add
sub
add
add
pop
mov
adc
add
add
mov
jno
pushf
data16
mov
andl
add
add
cmp
mov
add
add
movsb
pusha
add
add
frstor
imul
add
dec
dec
arpl
push
aas
mov
decl
lds
pop
mov
cmp
dec
scas
cmpsb
int3
test
sbb
leave
sbb
add
add
mov
movsl
push
clc
repnz
nop
nop
jae
add
cmpsb
add
add
stos
jl
push
mov
add
pop
sub
add
sub
push
add
out
adc
clc
repnz
nop
nop
jae
dec
test
add
sub
xchg
subl
clc
repnz
nop
nop
jae
in
jnp
add
add
xchg
push
icebp
xorl
clc
repnz
nop
nop
jae
add
add
xor
push
mov
xchg
ret
cmp
add
mull
add
add
mov
push
mov
xchg
ret
and
add
add
add
mov
mov
incl
add
add
add
add
add
jecxz
cld
or
cmpl
nop
push
mov
leave
nop
jmp
add
movsl
add
shr
jle
jmp
stos
add
add
jecxz
add
jecxz
add
push
add
add
and
add
nop
jmp
int3
add
adc
xor
dec
je
nop
push
mov
leave
nop
jmp
mov
add
stc
clc
repnz
nop
nop
jae
xchg
movsl
add
add
add
add
pusha
add
add
pop
or
call
inc
add
fbld
mov
dec
push
call
clc
repnz
nop
nop
jae
add
add
add
mov
clc
repnz
nop
nop
jae
je
add
add
add
add
cld
nop
nop
jae
int3
add
add
inc
cld
add
clc
repnz
nop
nop
jae
decl
add
adc
add
repnz
nop
nop
jae
jle
fsubrp
add
in
jne
clc
repnz
nop
nop
jae
cmp
or
addb
jnp
xchg
dec
push
nop
push
mov
leave
nop
jmp
add
cld
fmull
lret
push
clc
repnz
nop
nop
jae
outsb
add
add
sub
clc
repnz
nop
nop
jae
testl
mov
add
aas
mov
clc
repnz
nop
nop
jae
add
add
add
xchg
add
clc
repnz
nop
nop
jae
add
add
cmp
fstpl
add
ja
add
call
cmc
add
push
add
loopne
inc
add
jecxz
add
leave
hlt
add
cli
jecxz
cmp
add
add
jbe
add
mov
add
sub
add
test
add
add
nop
nop
jae
add
hlt
jno
add
push
stos
clc
repnz
nop
nop
jae
add
add
xorb
jle
dec
add
add
add
add
add
fildl
in
leave
nop
jmp
add
add
mov
add
add
clc
repnz
nop
nop
jae
lret
add
add
add
pop
add
push
mov
xchg
ret
leave
add
add
add
add
push
clc
repnz
nop
nop
jae
xor
add
add
add
xor
add
push
mov
leave
nop
jmp
out
add
add
add
push
nop
push
mov
leave
nop
jmp
fiadds
add
jno
xchg
add
movsb
clc
repnz
nop
nop
jae
add
add
add
or
fs
and
repnz
nop
nop
jae
add
faddl
add
fimuls
add
jg
add
add
cld
fcoml
add
xor
mov
leave
nop
jmp
add
mov
add
pop
push
clc
repnz
nop
nop
jae
in
mov
jle
add
add
sar
repnz
nop
nop
jae
add
add
jp
add
add
popf
call
nop
push
mov
leave
nop
jmp
faddl
sti
int3
add
add
clc
repnz
nop
nop
jae
in
or
add
add
pop
add
int3
xor
repnz
nop
nop
jae
lret
sub
and
add
mov
mov
xchg
ret
out
add
dec
or
add
mov
leave
nop
jmp
divl
add
testl
int3
dec
add
add
ret
mov
clc
repnz
nop
nop
jae
sub
add
or
add
add
and
mov
xchg
ret
test
add
filds
add
jp
fnstenv
add
clc
repnz
nop
nop
jae
test
int3
hlt
jecxz
imul
nop
jmp
test
jmp
incl
fdivl
add
jb
dec
nop
push
mov
leave
nop
jmp
sti
fs
sub
hlt
fucomip
add
fwait
mov
clc
repnz
nop
nop
jae
leave
incl
add
add
repnz
nop
nop
jae
leave
add
add
cmpb
outsl
sub
clc
repnz
nop
nop
jae
filds
out
leave
addb
cld
jp
cmp
add
push
int
cmp
int3
cmp
add
outsb
pop
add
add
add
sti
push
inc
add
push
and
popl
incl
stos
aaa
mov
push
mov
xchg
ret
ds
cmp
add
add
add
pop
shr
clc
repnz
nop
nop
jae
add
jle
add
jnp
in
push
clc
repnz
nop
nop
jae
add
popf
cmp
aad
aaa
push
clc
repnz
nop
nop
jae
jno
int3
jnp
cmpb
add
sub
add
add
repnz
nop
nop
jae
add
add
add
cmp
push
adc
repnz
nop
nop
jae
cld
add
add
inc
ds
mov
clc
repnz
nop
nop
jae
ja
add
aam
add
sub
add
es
clc
repnz
nop
nop
jae
lret
hlt
add
or
add
add
in
cmp
mov
leave
nop
jmp
add
cli
add
leave
jno
mov
clc
repnz
nop
nop
jae
cld
jle
add
add
stos
jno
in
test
mov
xchg
ret
hlt
aam
pop
add
push
add
add
or
sbb
clc
repnz
nop
nop
jae
add
cmpsb
add
movsl
popf
xchg
add
aas
add
nop
push
mov
leave
nop
jmp
add
fdivrl
xchg
add
jmp
lret
add
add
xor
clc
repnz
nop
nop
jae
dec
add
add
sti
call
clc
repnz
nop
nop
jae
ds
add
ds
outsb
fists
mov
xchg
ret
sti
mov
push
inc
jno
or
add
add
nop
nop
jae
add
cli
xchg
add
mov
inc
popa
add
subb
add
add
decl
push
mov
xchg
ret
add
xchg
jno
add
or
add
mov
add
nop
jmp
add
test
movsl
jle
inc
add
add
arpl
dec
cmp
push
mov
leave
nop
jmp
add
add
xchg
int3
add
leave
inc
ret
je
nop
push
mov
leave
nop
jmp
jecxz
or
hlt
cmpsb
add
and
add
repnz
nop
nop
jae
ds
popa
add
mov
push
mov
leave
nop
jmp
add
add
add
add
push
loop
nop
push
mov
leave
nop
jmp
mov
add
int3
je
xor
pop
add
clc
repnz
nop
nop
jae
in
add
add
ja
stos
adc
in
leave
nop
jmp
add
ds
and
fs
mov
push
clc
repnz
nop
nop
jae
mov
add
mov
or
nop
jae
add
add
add
test
nop
nop
jae
xchg
add
and
fcompl
fs
adcl
adc
add
dec
test
add
add
fwait
mov
fwait
in
or
pop
cmp
add
repnz
nop
nop
jae
push
in
insl
shr
clc
repnz
nop
nop
jae
int3
add
push
aam
rorl
nop
nop
jae
add
add
add
add
in
push
nop
push
mov
leave
nop
jmp
add
cld
add
add
dec
add
outsb
ja
clc
repnz
nop
nop
jae
add
add
test
call
clc
repnz
nop
nop
jae
add
add
cmpsb
jno
push
mov
clc
repnz
nop
nop
jae
aam
fdivl
add
jle
fwait
nop
push
mov
leave
nop
jmp
add
mov
xor
inc
lcall
sbb
and
add
testl
mov
mov
mov
sti
dec
push
mov
xchg
ret
add
jle
add
cld
aad
push
jp
mov
push
mov
xchg
ret
add
add
faddl
add
add
add
ficoms
sbb
push
mov
xchg
ret
sub
cmp
cmp
out
add
jle
push
mov
mov
xchg
ret
add
add
sub
add
add
add
sub
add
out
add
sti
xor
in
xchg
popf
neg
test
add
add
iret
push
push
mov
xchg
ret
add
add
ja
add
out
in
hlt
add
rep
clc
repnz
nop
nop
jae
int3
add
ja
out
dec
cmp
push
mov
xchg
ret
cmp
je
add
lret
mov
or
add
add
add
out
hlt
add
push
add
xor
add
clc
repnz
nop
nop
jae
lret
leave
add
add
pushf
mov
mov
imul
add
add
add
add
loope
xor
xor
and
add
popl
add
add
cmpb
push
mov
leave
nop
jmp
aad
add
add
int3
add
add
sbbl
jae
popf
popa
int3
mov
pop
add
fcoml
repnz
nop
nop
jae
dec
add
add
popf
movsl
add
cli
jbe
je
nop
push
mov
leave
nop
jmp
popa
jecxz
add
add
jecxz
lret
clc
repnz
nop
nop
jae
add
mov
add
out
mov
mov
clc
repnz
nop
nop
jae
dec
add
fimuls
add
cli
inc
add
add
inc
add
add
adc
repnz
nop
nop
jae
add
add
jecxz
xchg
add
int
push
mov
xchg
ret
add
add
jp
je
jne
clc
repnz
nop
nop
jae
out
jmp
xor
orb
sub
and
popf
sti
add
add
add
je
xchg
or
insl
mov
clc
repnz
nop
nop
jae
add
add
hlt
outsb
add
subb
add
clc
repnz
nop
nop
jae
cld
aam
je
xchg
cmpsb
add
outsb
imul
addl
mov
aam
add
inc
cld
adcb
xchg
bound
xchg
ret
mov
add
add
fimuls
sti
add
bound
dec
nop
push
mov
leave
nop
jmp
add
add
xchg
dec
leave
jnp
add
cld
push
mov
xchg
ret
in
add
xor
out
jno
add
insb
push
add
out
jecxz
cmp
add
add
add
add
mov
inc
add
add
add
or
add
stos
clc
repnz
nop
nop
jae
add
cmpb
jecxz
add
add
repnz
nop
nop
jae
int3
inc
add
cmpsb
add
add
movsl
pop
push
mov
xchg
ret
add
cmp
je
mov
clc
repnz
nop
nop
jae
add
filds
xchg
jnp
xor
cmpsl
push
push
mov
xchg
ret
popf
je
outsb
add
jmp
pop
add
or
push
mov
leave
nop
jmp
outsb
add
cld
jle
add
test
mov
leave
nop
jmp
add
aam
cli
add
add
hlt
and
add
add
mov
clc
repnz
nop
nop
jae
inc
add
idivl
xchg
add
jecxz
shlb
add
add
cmp
nop
push
mov
leave
nop
jmp
outsb
cmp
add
xchg
add
jge
clc
repnz
nop
nop
jae
outsb
popa
add
dec
je
mov
cmp
repnz
nop
nop
jae
add
aad
add
add
add
fsubp
pop
call
clc
repnz
nop
nop
jae
jle
and
add
sti
add
add
nop
push
mov
leave
nop
jmp
addb
out
add
gs
clc
repnz
nop
nop
jae
dec
add
and
add
add
add
add
add
or
add
add
clc
repnz
nop
nop
jae
push
aam
add
popf
int3
add
outsb
add
shl
clc
repnz
nop
nop
jae
add
add
add
xor
popa
push
push
mov
xchg
ret
in
filds
fmull
mov
add
or
pop
clc
repnz
nop
nop
jae
cmpsb
in
jle
add
out
or
bound
nop
nop
jae
push
cli
faddl
add
add
clc
repnz
nop
nop
jae
add
faddl
xchg
fildll
add
mov
pushl
clc
repnz
nop
nop
jae
mov
add
aad
add
hlt
mov
idivb
push
mov
leave
nop
jmp
add
int3
add
add
add
jbe
mov
push
mov
xchg
ret
in
add
add
hlt
fs
popa
outsb
mov
mov
add
int3
insb
add
add
mov
jge
add
jge
clc
repnz
nop
nop
jae
cld
add
lret
pop
or
jmp
clc
repnz
nop
nop
jae
add
add
idiv
add
add
mov
cld
nop
nop
jae
add
add
jnp
popa
add
xchg
add
nop
jmp
cld
add
push
or
push
mov
leave
nop
jmp
add
or
add
jg
clc
repnz
nop
nop
jae
out
add
filds
add
add
add
add
push
mov
leave
nop
jmp
out
or
dec
cli
lret
xchg
outsb
shrb
repnz
nop
nop
jae
add
add
outsb
cmpsb
jno
xchg
cmp
inc
clc
repnz
nop
nop
jae
popa
jnp
add
add
jmp
add
add
lods
push
mov
xchg
ret
add
sub
add
push
cld
out
add
jecxz
les
clc
repnz
nop
nop
jae
movsl
cmp
add
add
repnz
nop
nop
jae
andb
in
jmp
cld
outsb
mov
cld
nop
nop
jae
lcall
inc
popa
mov
xchg
nop
push
mov
leave
nop
jmp
add
dec
add
add
lock
push
mov
leave
nop
jmp
popa
add
add
test
cmpsl
add
push
mov
xchg
ret
je
dec
out
add
inc
add
insl
mov
clc
repnz
nop
nop
jae
add
add
push
mov
xchg
ret
jle
jle
add
add
test
repnz
nop
nop
jae
add
add
jecxz
inc
pusha
mov
mov
push
push
mov
xchg
ret
add
cli
dec
add
add
test
movzwl
clc
repnz
nop
nop
jae
add
add
cmpsb
ss
stos
clc
repnz
nop
nop
jae
add
outsb
add
add
cmp
and
pop
sub
push
mov
leave
nop
jmp
out
add
fdivl
sar
cld
nop
nop
jae
stos
or
add
dec
mov
inc
xor
clc
repnz
nop
nop
jae
cld
add
add
add
add
jge
nop
push
mov
leave
nop
jmp
fiadds
int3
add
add
xchg
outsb
mov
mov
xchg
ret
add
add
outsb
add
push
add
ficomps
add
add
push
insl
stos
push
mov
xchg
ret
add
hlt
cld
jle
cld
xchg
add
aam
add
xor
clc
repnz
nop
nop
jae
lret
aam
leave
add
fistpl
clc
repnz
nop
nop
jae
cmp
add
add
mov
add
add
iret
push
push
mov
xchg
ret
add
add
test
add
add
out
inc
mov
add
nop
push
mov
leave
nop
jmp
or
add
jle
leave
out
jp
out
push
clc
repnz
nop
nop
jae
add
add
or
add
mov
popa
clc
repnz
nop
nop
jae
add
add
outsb
fildll
add
leave
enter
xorps
xchg
ret
mov
cld
mov
add
les
test
nop
push
mov
leave
nop
jmp
add
add
repz
clc
repnz
nop
nop
jae
add
add
leave
into
mov
in
leave
nop
jmp
add
ja
in
xchg
ds
push
push
mov
xchg
ret
stos
xor
jle
xchg
aam
faddl
testl
pop
iret
mov
clc
repnz
nop
nop
jae
leave
add
out
add
fsubr
pushl
nop
push
mov
leave
nop
jmp
ds
push
sub
dec
add
nop
nop
jae
push
add
jnp
add
add
add
add
nop
nop
jae
add
and
out
add
mov
clc
repnz
nop
nop
jae
cld
hlt
push
popa
add
add
push
mov
xchg
ret
fiadds
hlt
ds
mov
clc
repnz
nop
nop
jae
add
add
movsl
add
add
or
clc
repnz
nop
nop
jae
add
add
add
add
call
jbe
inc
add
outsb
filds
aam
xor
sub
jnp
out
into
xor
ss
add
clc
repnz
nop
nop
jae
jecxz
add
mov
inc
adc
mov
xchg
ret
add
add
push
testl
dec
aas
ret
clc
repnz
nop
nop
jae
add
in
add
add
and
cld
add
xor
mov
pop
inc
add
add
cld
add
add
add
add
cld
orl
nop
nop
jae
add
popl
cli
outsb
add
addb
out
add
clc
repnz
nop
nop
jae
add
faddl
leave
jecxz,pt
add
add
clc
repnz
nop
nop
jae
add
add
add
add
push
xlat
fld1
clc
repnz
nop
nop
jae
add
in
add
cmp
add
nop
push
mov
leave
nop
jmp
add
jp
add
fildl
pushf
pop
inc
add
add
jle
cmpsb
fs
add
add
add
popf
fld1
push
mov
xchg
ret
add
xor
dec
hlt
xchg
popf
adc
call
clc
repnz
nop
nop
jae
test
add
add
add
nop
push
mov
leave
nop
jmp
jecxz
add
movsl
cmpsb
je
pop
add
fistpl
clc
repnz
nop
nop
jae
add
add
push
add
shr
clc
repnz
nop
nop
jae
addb
xchg
fildll
jp
aam
ljmp
nop
jae
add
ja
add
jnp
add
add
pop
mov
jl
clc
repnz
nop
nop
jae
add
or
add
outsb
pop
rcrl
push
pop
inc
add
popl
lret
push
popf
xchg
add
incl
xchg
inc
add
add
add
dec
add
out
out
push
push
mov
xchg
ret
faddl
add
faddl
add
add
cli
add
clc
repnz
nop
nop
jae
add
add
outsb
add
add
add
cld
nop
nop
jae
cmp
add
push
dec
fisubrs
add
or
and
dec
add
dec
or
xchg
in
fiadds
add
mov
push
mov
xchg
ret
add
jp
sub
mov
hlt
mov
inc
mov
imul
add
mov
aam
add
add
add
test
mov
xchg
ret
aad
add
test
mov
call
clc
repnz
nop
nop
jae
fdivr
outsb
in
incl
add
mov
clc
repnz
nop
nop
jae
cmp
add
cmpsb
add
popa
mov
push
mov
xchg
ret
cld
test
add
xor
dec
push
clc
repnz
nop
nop
jae
andb
outsb
ja
cmpsb
hlt
add
or
add
add
xchg
cld
nop
nop
jae
add
xchg
add
add
add
nop
push
mov
leave
nop
jmp
ja
ds
add
movsl
add
add
cwtl
jno
imul
incl
add
add
add
fld1
push
mov
xchg
ret
mov
fiadds
add
xchg
cmpsb
add
xchg
add
ret
cld
clc
repnz
nop
nop
jae
jle
add
movsl
movsl
out
add
add
sbb
test
clc
repnz
nop
nop
jae
dec
add
add
cmp
add
add
add
mov
xchg
ret
push
add
cld
pop
cmp
xor
nop
nop
jae
add
add
add
add
mov
clc
repnz
nop
nop
jae
xchg
faddl
jecxz
push
pop
fistpl
clc
repnz
nop
nop
jae
add
pop
cld
add
testl
stos
mov
clc
repnz
nop
nop
jae
hlt
add
add
in
xchg
add
call
movb
ret
add
add
add
dec
add
add
lret
nop
push
mov
leave
nop
jmp
mov
add
hlt
call
add
jo
rep
clc
repnz
nop
nop
jae
jle
add
cmp
add
mull
not
push
mov
xchg
ret
add
xchg
dec
add
or
add
sti
dec
mov
adc
xor
clc
repnz
nop
nop
jae
add
add
add
add
push
push
mov
xchg
ret
add
add
add
in
add
add
mov
clc
repnz
nop
nop
jae
or
xchg
xchg
cmp
cmp
jge
cli
clc
repnz
nop
nop
jae
add
jnp
cli
cmpsb
cld
dec
pop
cmpsb
mov
push
clc
repnz
nop
nop
jae
fs
xchg
popf
add
mov
push
in
xchg
cmp
push
mov
leave
nop
jmp
int3
add
in
add
add
jnp
cmp
cld
nop
nop
jae
cmp
xchg
add
movsl
leave
add
je
nop
push
mov
leave
nop
jmp
popf
jle
add
add
xor
mov
add
add
add
add
mov
push
mov
xchg
ret
cli
add
xchg
aam
fisttps
movzwl
nop
push
mov
leave
nop
jmp
filds
push
dec
add
and
or
repnz
nop
nop
jae
jp
add
incl
cmc
push
push
mov
xchg
ret
xchg
leave
add
aam
out
add
add
es
add
add
movsl
push
nop
push
mov
leave
nop
jmp
fs
testl
cmpsb
add
int3
add
add
add
add
add
div
nop
push
mov
leave
nop
jmp
ja
popf
push
jp
outsb
faddl
test
popl
xchg
ret
mov
cld
add
add
cmp
xchg
add
push
mov
xchg
ret
add
mov
ljmp
clc
repnz
nop
nop
jae
addb
in
ja
add
add
and
mov
leave
nop
jmp
add
or
mov
add
filds
mov
inc
mov
clc
repnz
nop
nop
jae
aad
dec
in
add
xor
push
mov
xchg
ret
add
in
mov
inc
mov
sti
add
add
push
push
mov
xchg
ret
add
mov
add
out
xchg
or
nop
nop
jae
fisubs
add
orb
mov
xchg
ret
add
or
add
jp
fisttps
add
scas
fisttps
repnz
nop
nop
jae
add
sti
mov
mov
clc
repnz
nop
nop
jae
int3
add
add
out
or
add
clc
repnz
nop
nop
jae
add
dec
add
sub
insl
rol
clc
repnz
nop
nop
jae
stos
in
mov
add
mov
add
add
nop
jmp
xchg
add
add
add
sub
nop
push
mov
leave
nop
jmp
popa
add
add
hlt
jmp
mov
xchg
ret
push
add
popa
xchg
movsl
out
fimuls
loop
pop
clc
repnz
nop
nop
jae
add
add
outsb
add
call
clc
repnz
nop
nop
jae
add
jno
add
add
mov
mov
push
mov
leave
nop
jmp
add
add
add
add
lret
push
jne
clc
repnz
nop
nop
jae
cli
add
fiadds
add
repnz
nop
nop
jae
outsb
dec
addb
dec
add
push
mov
xchg
ret
pop
add
outsb
mov
jecxz
add
xor
nop
nop
jae
test
add
cmp
add
add
scas
test
push
mov
xchg
ret
add
add
cmpsb
add
mov
clc
repnz
nop
nop
jae
outsb
fdivl
jle
add
clc
repnz
nop
nop
jae
mov
add
xchg
add
xor
clc
repnz
nop
nop
jae
add
add
add
add
mov
push
les
imul
cmp
ret
add
test
mov
popa
add
add
ja
push
clc
repnz
nop
nop
jae
adcb
pop
mov
add
and
repnz
nop
nop
jae
mov
add
lret
insb
add
add
fcomps
cltd
jne
clc
repnz
nop
nop
jae
outsb
lret
inc
cmpsb
leave
jl
lea
clc
repnz
nop
nop
jae
out
stos
cmpsb
add
stos
cmpsb
add
sbbl
call
cmp
ret
jno
mov
out
jle
jno
jno
cmp
repnz
nop
nop
jae
fs
fdivrl
mov
clc
repnz
nop
nop
jae
aad
aad
mov
push
add
clc
repnz
nop
nop
jae
add
add
aam
add
outsb
movsl
aad
cmp
pusha
clc
repnz
nop
nop
jae
add
add
fisttps
cld
add
jle
clc
fistpl
inc
add
outsb
add
add
add
add
je
nop
push
mov
leave
nop
jmp
ja
add
add
call
inc
add
dec
add
add
outsb
pushf
inc
xchg
clc
repnz
nop
nop
jae
pop
add
add
movsl
fcomps
push
push
mov
xchg
ret
outsb
and
add
inc
jnp
sub
add
add
fstp
call
nop
jae
ja
ds
dec
add
sti
dec
imul
test
nop
push
mov
leave
nop
jmp
add
dec
xor
add
repnz
nop
nop
jae
fsub
mov
add
stos
adc
movzwl
clc
repnz
nop
nop
jae
add
or
fcomps
cld
nop
nop
jae
fdivr
faddl
lret
add
add
push
mov
xchg
ret
add
add
add
cld
test
sub
clc
repnz
nop
nop
jae
sti
je
test
fs
mov
mov
clc
repnz
nop
nop
jae
jmp
add
faddl
add
add
add
ja
nop
push
mov
leave
nop
jmp
neg
add
mov
add
mov
repnz
nop
nop
jae
mov
test
dec
lret
out
lret
fistpl
clc
repnz
nop
nop
jae
lret
cmpsb
lret
xchg
add
jmp
movsl
push
add
add
cld
add
lret
add
hlt
outsb
dec
add
cld
dec
add
mov
repnz
nop
nop
jae
xchg
int3
popa
add
dec
add
aad
mov
call
inc
add
xchg
add
add
incl
mov
std
add
push
mov
xchg
ret
or
add
xchg
out
add
cmp
jne
clc
repnz
nop
nop
jae
xchg
jnp
movsl
add
mov
push
mov
xchg
ret
or
add
xchg
add
push
mov
push
popf
mov
lcall
fnstenv
add
add
nop
imul
cld
nop
nop
jae
add
aad
add
cmp
jp
addr16
clc
repnz
nop
nop
jae
jno
int3
and
add
jecxz
jecxz
ds
jbe
clc
repnz
nop
nop
jae
dec
add
fidivrs
jle
xchg
pop
cmp
std
jne
clc
repnz
nop
nop
jae
mov
popa
popa
add
das
add
clc
repnz
nop
nop
jae
dec
add
add
add
pop
push
mov
xchg
ret
xchg
add
add
jmp
sub
nop
nop
jae
and
add
add
add
cld
nop
nop
jae
ds
add
add
add
fwait
clc
repnz
nop
nop
jae
je
jp
add
add
add
repnz
nop
nop
jae
add
xor
faddl
cmp
nop
nop
jae
add
add
test
inc
add
jecxz
push
sarl
repnz
nop
nop
jae
add
xchg
je
aad
lods
push
mov
xchg
ret
push
add
add
jbe
xor
clc
repnz
nop
nop
jae
mov
faddl
rclb
jb
add
faddl
hlt
add
add
push
lcall
mov
leave
nop
jmp
mov
sti
add
jp
add
clc
dec
inc
nop
push
mov
leave
nop
jmp
xor
add
ds
nop
jae
outsb
and
outsb
add
add
mov
pop
nop
push
mov
leave
nop
jmp
add
add
and
jp
cld
popa
add
pusha
add
add
mov
ret
nop
push
mov
leave
nop
jmp
inc
dec
add
sti
add
adc
addb
cld
nop
nop
jae
xchg
int3
add
fidivs
jecxz
loopne
clc
repnz
nop
nop
jae
add
int3
add
add
xchg
add
jnp
add
ja
add
cmp
add
cld
nop
nop
jae
popa
add
add
jnp
aad
xchg
int3
aam
add
clc
repnz
nop
nop
jae
cmp
add
add
xchg
add
add
push
mov
xchg
ret
jecxz
movsl
dec
add
ja
add
out
fwait
push
mov
xchg
ret
incl
mov
movsl
add
out
add
add
clc
repnz
nop
nop
jae
add
add
add
add
push
mov
xchg
ret
add
popa
add
add
cld
aad
dec
push
clc
repnz
nop
nop
jae
add
jp
filds
dec
add
test
xor
push
mov
xchg
ret
mov
add
mov
add
movsb
loope
push
mov
xchg
ret
dec
add
add
add
jnp
add
cld
hlt
mov
vpsubb
cld
nop
nop
jae
popl
add
movsl
add
push
pop
add
add
xchg
cmc
mov
push
mov
xchg
ret
cmpsb
ja
add
sti
aam
mov
add
clc
repnz
nop
nop
jae
dec
fistpll
add
out
xor
cld
nop
nop
jae
add
add
add
add
mov
nop
push
mov
leave
nop
jmp
push
aam
add
push
add
clc
repnz
nop
nop
jae
mov
out
add
xchg
jbe
add
in
add
add
add
test
add
mov
xchg
ret
jmp
in
add
popa
cmpb
inc
popl
test
nop
jae
add
add
in
add
faddl
inc
cltd
pop
clc
repnz
nop
nop
jae
inc
sub
fdivr
xchg
jnp
mov
in
leave
nop
jmp
in
add
mov
add
je
clc
repnz
nop
nop
jae
push
add
lock
ja
clc
repnz
nop
nop
jae
add
testl
movsl
push
push
mov
xchg
ret
orb
fs
and
cmp
iret
mov
clc
repnz
nop
nop
jae
add
add
add
leave
add
jmp
stos
or
add
add
nop
nop
jae
add
add
int3
add
aad
into
movsb
add
sbb
clc
repnz
nop
nop
jae
je
aad
add
out
add
dec
or
add
add
add
xchg
clc
repnz
nop
nop
jae
and
outsb
add
add
push
clc
repnz
nop
nop
jae
idiv
add
add
cld
cmpsb
lret
add
nop
push
mov
leave
nop
jmp
jecxz
add
add
add
in
inc
push
adc
clc
repnz
nop
nop
jae
add
add
popf
xchg
aad
dec
add
add
mov
pop
inc
add
add
push
jecxz
movsl
add
add
int3
outsl
cmp
push
mov
xchg
ret
add
add
int3
jle
add
fsubrl
add
nop
jmp
add
movsl
popa
add
add
or
repnz
nop
nop
jae
aad
sub
pop
add
cmpsb
idivl
nop
fsubs
sbb
nop
jmp
push
mov
aad
add
popa
xchg
xchg
ret
jecxz
int3
je
add
cli
cld
add
add
pop
imul
clc
repnz
nop
nop
jae
add
add
add
add
or
jp
sub
push
add
fistpll
xchg
cmpsb
add
fsubrp
fdivl
mov
xchg
ret
lret
add
add
mov
xchg
add
sbb
push
mov
xchg
ret
jnp
mov
mov
add
add
push
mov
clc
repnz
nop
nop
jae
lret
add
faddl
add
add
clc
repnz
nop
nop
jae
add
in
add
ja
test
out
dec
add
add
les
add
add
add
clc
repnz
nop
nop
jae
xchg
addb
xor
dec
jne
clc
repnz
nop
nop
jae
add
jp
xor
add
jns
pop
cmp
mov
xchg
ret
add
jno
add
add
add
add
nop
push
mov
leave
nop
jmp
push
add
cmpsb
inc
or
popl
sub
cs
clc
repnz
nop
nop
jae
push
add
aad
add
push
nop
cmpsb
sbb
sbb
clc
repnz
nop
nop
jae
add
add
ja
mov
clc
repnz
nop
nop
jae
add
add
xchg
add
add
fs
sbb
clc
repnz
nop
nop
jae
fildll
xorb
add
ret
clc
repnz
nop
nop
jae
cmp
out
jno
or
or
add
es
repnz
nop
nop
jae
add
add
aad
add
mov
clc
repnz
nop
nop
jae
add
add
add
mov
call
clc
repnz
nop
nop
jae
jecxz
mov
jmp
je
clc
repnz
nop
nop
jae
jno
or
popa
clc
repnz
nop
nop
jae
pop
outsb
add
add
in
cld
in
in
xor
clc
repnz
nop
nop
jae
add
add
add
jmp
add
sub
add
add
add
xchg
add
jecxz
pop
push
clc
repnz
nop
nop
jae
mov
fdivrl
aad
cmp
and
push
push
mov
xchg
ret
add
add
add
test
clc
repnz
nop
nop
jae
in
cmpsb
add
add
add
mov
nop
push
mov
leave
nop
jmp
add
out
je
fsubrl
cli
js
stos
push
mov
xchg
ret
cli
aam
dec
add
add
filds
jp
fld1
push
mov
xchg
ret
add
in
add
aam
add
add
add
clc
repnz
nop
nop
jae
add
add
mov
test
push
push
mov
xchg
ret
fmull
add
push
push
push
mov
xchg
ret
popf
add
add
mov
mov
repnz
nop
nop
jae
cld
add
or
add
incl
fs
mov
nop
push
mov
leave
nop
jmp
leave
xor
faddl
filds
add
add
insb
mov
push
clc
repnz
nop
nop
jae
add
add
fiadds
add
ja,pt
inc
add
add
push
sub
add
add
push
push
mov
xchg
ret
add
mov
push
mov
repnz
nop
nop
jae
add
add
imull
subl
mov
leave
nop
jmp
je
add
add
clc
repnz
nop
nop
jae
add
ja
add
add
push
push
clc
repnz
nop
nop
jae
push
fildll
add
add
add
push
push
std
fwait
clc
repnz
nop
nop
jae
add
sub
lret
add
add
cmp
fbld
mov
xchg
ret
and
add
add
cmp
push
mov
leave
nop
jmp
pop
jmp
add
xchg
and
or
or
sbb
repnz
nop
nop
jae
leave
or
add
filds
dec
in
add
push
mov
xchg
ret
cmpsb
jle
xchg
jle
add
sub
add
add
add
addr16
nop
push
mov
leave
nop
jmp
outsb
add
pop
add
xchg
xchg
shrb
jmp
push
mov
leave
nop
jmp
add
fs
nop
push
mov
leave
nop
jmp
jle
add
addb
add
xchg
sub
clc
repnz
nop
nop
jae
add
add
push
add
and
push
mov
leave
nop
jmp
stos
dec
xchg
hlt
aam
addb
cli
loop
cmpl
nop
push
mov
leave
nop
jmp
add
add
movsl
movsb
or
stos
push
inc
add
add
add
add
ds
jno
imul
nop
nop
jae
outsb
filds
jp
add
add
clc
repnz
nop
nop
jae
add
add
add
sub
add
mov
mov
xchg
ret
add
ds
outsb
cli
xchg
ja
dec
push
mov
xchg
ret
sti
test
test
faddl
jle
repnz
outsl
xor
clc
repnz
nop
nop
jae
push
sub
add
out
add
push
mov
xchg
ret
add
add
add
add
add
movsl
hlt
test
testl
nop
push
mov
leave
nop
jmp
push
lret
add
inc
retw
inc
lock
repnz
nop
nop
jae
popa
add
add
mov
fistps
mov
xchg
ret
movsl
add
add
add
mov
add
incl
add
repnz
nop
nop
jae
add
add
and
in
dec
jne
nop
push
mov
leave
nop
jmp
add
ja
aam
fiadds
mov
test
clc
repnz
nop
nop
jae
in
pop
add
lcall
repnz
nop
nop
jae
movsl
add
out
jle
cli
mov
test
clc
repnz
nop
nop
jae
dec
add
add
add
fs
add
clc
repnz
nop
nop
jae
add
out
add
xchg
adc
xchg
sub
jecxz
jle
add
jp
add
push
insb
gs
push
mov
leave
nop
jmp
lret
faddl
add
in
jmp
jno
cli
add
add
sub
add
mov
push
clc
repnz
nop
nop
jae
add
xchg
adcb
cmpsb
cltd
mov
nop
push
mov
leave
nop
jmp
add
outsb
fistpll
incl
jns
inc
loope
clc
repnz
nop
nop
jae
add
jle
add
xchg
push
bound
nop
push
mov
leave
nop
jmp
add
aad
add
mov
mov
in
cld
push
mov
xchg
ret
or
add
push
or
out
mov
nop
push
mov
leave
nop
jmp
faddl
add
add
jg
clc
repnz
nop
nop
jae
add
aad
add
jecxz
add
fisttpl
test
clc
repnz
nop
nop
jae
testl
add
add
add
add
cli
mov
add
add
add
pop
out
and
nop
nop
jae
add
add
xor
je
mov
inc
clc
repnz
nop
nop
jae
jnp
fiadds
faddl
div
mov
clc
repnz
nop
nop
jae
add
jp
hlt
inc
inc
jmp
repnz
nop
nop
jae
add
add
add
ret
inc
push
mov
xchg
ret
add
cmpsb
add
in
outsb
fdivl
jecxz
arpl
clc
repnz
nop
nop
jae
jmp
decl
add
outsb
lret
out
clc
repnz
nop
nop
jae
mov
add
clc
repnz
nop
nop
jae
add
add
add
add
fisubs
adc
repnz
nop
nop
jae
ds
int3
mov
fsub
push
nop
push
mov
leave
nop
jmp
add
stos
cmp
or
cli
cmpsb
add
add
mov
clc
repnz
nop
nop
jae
je
dec
add
add
add
add
out
iret
mov
push
mov
xchg
ret
push
fsubl
cld
cmp
add
rclb
cld
nop
nop
jae
xchg
add
je
aam
lret
pop
pushf
clc
mov
jo
add
repnz
nop
nop
jae
xchg
jecxz
add
call
repnz
nop
nop
jae
outsb
add
outsb
add
jmp
xchg
push
dec
ljmp
in
leave
nop
jmp
add
je
push
int3
or
jmp
dec
movswl
clc
repnz
nop
nop
jae
add
xchg
outsb
hlt
or
add
outsl
pop
clc
repnz
nop
nop
jae
jle
xor
int3
add
pop
fsubl
cltd
sbb
nop
push
mov
leave
nop
jmp
xchg
cmpsb
aad
add
in
dec
cvtps2pd
repnz
nop
nop
jae
add
out
add
fsubp
add
idivl
pop
push
mov
xchg
ret
add
stos
jecxz
add
add
add
cld
nop
nop
jae
cmp
je
jp
add
add
adc
cld
nop
nop
jae
and
in
add
add
add
leave
jno
clc
repnz
nop
nop
jae
popa
mov
fiadds
push
clc
repnz
nop
nop
jae
add
jle
out
add
test
pushl
push
mov
xchg
ret
int3
jmp
dec
dec
xchg
add
aad
in
push
mov
add
pop
xchg
add
imul
in
add
add
add
mov
repnz
nop
nop
jae
ds
add
add
add
push
test
cs
repnz
nop
nop
jae
add
dec
add
add
sub
add
add
push
pop
inc
add
add
outsb
add
add
notl
xchg
scas
call
clc
repnz
nop
nop
jae
add
add
jmp
push
mov
xchg
ret
add
outsb
je
add
rorl
mov
xchg
ret
push
add
add
outsb
faddl
push
clc
repnz
nop
nop
jae
leave
out
add
aam
add
lret
test
mov
leave
nop
jmp
cli
add
add
ret
sbb
nop
jae
add
in
add
add
add
sbb
lret
xor
clc
repnz
nop
nop
jae
popf
xchg
add
add
int3
cmpsb
das
call
clc
repnz
nop
nop
jae
sub
add
popa
add
add
xor
ljmp
xchg
dec
add
add
filds
add
xchg
xchg
add
add
add
xchg
nop
push
mov
leave
nop
jmp
add
jno
jecxz
add
imull
leave
mov
clc
repnz
nop
nop
jae
add
popf
ja
add
add
sub
mov
leave
nop
jmp
add
add
jp
sub
popl
add
xchg
shr
nop
push
mov
leave
nop
jmp
cli
add
add
popf
outsb
out
jle
mov
clc
repnz
nop
nop
jae
cmp
add
fcompl
mov
xchg
ret
sub
jno
xor
stos
outsb
push
xor
clc
repnz
nop
nop
jae
add
out
add
outsb
add
jb
add
clc
repnz
nop
nop
jae
jecxz
inc
add
add
in
leave
nop
jmp
add
add
mov
xchg
sub
add
add
into
push
shl
push
mov
xchg
ret
push
inc
add
xchg
push
aad
js
add
clc
repnz
nop
nop
jae
add
add
cld
test
es
and
jbe
add
addb
xchg
cmp
aam
int3
add
fcomip
dec
fistpl
clc
repnz
nop
nop
jae
sub
popl
or
mov
nop
inc
add
add
add
outsb
add
add
filds
fiadds
add
add
clc
nop
push
mov
leave
nop
jmp
incl
add
cli
add
cmp
in
add
nop
push
mov
leave
nop
jmp
add
out
add
add
add
and
clc
repnz
nop
nop
jae
add
add
add
jp
dec
repnz
sbb
add
jno
add
imull
add
add
cli
adc
test
push
mov
xchg
ret
jno
je
add
add
sti
inc
add
loope
clc
repnz
nop
nop
jae
jle
push
cmpsb
add
cld
inc
outsb
stos
add
cmp
jae
repnz
nop
nop
jae
add
add
cmp
and
roll
repnz
nop
nop
jae
add
cmpsb
add
jno
push
jne
clc
repnz
nop
nop
jae
sti
outsb
add
add
add
push
mov
push
inc
add
cld
cli
xchg
adc
in
cli
add
add
sub
add
add
mov
nop
push
mov
leave
nop
jmp
fdivl
jnp
mov
movswl
clc
repnz
nop
nop
jae
xchg
dec
add
xor
add
aas
test
nop
push
mov
leave
nop
jmp
xchg
filds
push
and
add
nop
nop
jae
cld
aad
outsb
aam
or
add
andb
mov
jmp
mov
xchg
ret
add
popa
or
xchg
or
sub
sbb
repnz
nop
nop
jae
out
push
pop
xor
add
cli
lea
in
leave
nop
jmp
in
add
add
add
add
add
pop
xor
in
leave
nop
jmp
add
add
fcoml
fistpl
push
mov
xchg
ret
xchg
add
addb
popl
outsb
add
add
add
lahf
fistpl
clc
repnz
nop
nop
jae
leave
sti
jno
add
nop
push
mov
leave
nop
jmp
push
mov
out
lds
scas
enter
nop
nop
jae
add
add
cld
add
popa
mov
clc
repnz
nop
nop
jae
add
add
add
movsl
add
add
adc
add
repnz
nop
nop
jae
add
add
movsb
add
add
add
add
pushl
clc
repnz
nop
nop
jae
fcoml
add
sub
mov
nop
push
mov
leave
nop
jmp
stos
add
call
test
mov
nop
nop
jae
and
cmpb
leave
popf
push
add
jle
fwait
clc
repnz
nop
nop
jae
je
jno
popa
add
outsb
lret
push
mov
add
lret
test
cld
sub
mov
out
cmp
add
add
and
add
add
faddl
mov
xor
jecxz
add
pop
add
fwait
jne
clc
repnz
nop
nop
jae
faddl
jmp
add
mov
lea
clc
repnz
nop
nop
jae
out
add
add
mov
nop
push
mov
leave
nop
jmp
fbstp
or
outsb
fsubr
or
push
mov
leave
nop
jmp
add
add
cmp
sub
or
add
inc
adc
repnz
nop
nop
jae
add
add
pop
add
stos
dec
shrb
add
push
mov
xchg
ret
add
and
add
add
movsl
leave
push
push
mov
xchg
ret
or
add
lret
add
push
es
jecxz
repnz
nop
nop
jae
add
xchg
outsb
add
add
je
add
or
add
add
add
addb
jp
pop
nop
push
mov
leave
nop
jmp
add
pop
push
add
inc
xchg
add
add
clc
repnz
nop
nop
jae
add
leave
xor
add
popa
sti
cld
mov
nop
nop
jae
outsb
aam
add
add
sti
add
outsb
add
pop
cmpl
nop
push
mov
leave
nop
jmp
add
jno
mov
dec
cmp
repnz
nop
nop
jae
cmp
add
add
mov
pop
push
mov
xchg
ret
ja
add
movsl
or
outsb
jnp
out
add
cmc
lea
nop
push
mov
leave
nop
jmp
xchg
add
add
xchg
jnp
jle
cwtl
fidivs
pop
clc
repnz
nop
nop
jae
add
add
popa
jp
sti
add
ja
push
lods
xchg
jne
clc
repnz
nop
nop
jae
xchg
add
add
clc
repnz
nop
nop
jae
leave
or
jecxz
add
call
add
nop
push
mov
leave
nop
jmp
add
int3
hlt
add
stos
jecxz
icebp
clc
repnz
nop
nop
jae
xchg
add
leave
add
cli
popl
clc
repnz
nop
nop
jae
add
out
jecxz
cmpsb
mov
clc
repnz
nop
nop
jae
add
add
mov
cld
movsl
add
mov
add
repnz
nop
nop
jae
cli
xchg
xchg
cmpsb
push
add
xor
push
mov
leave
nop
jmp
add
mov
movsl
add
xchg
ffreep
imul
xchg
ret
popf
jnp
inc
and
hlt
cli
ja
mov
sbb
push
mov
xchg
ret
mul
cmp
add
add
stos
ja
orb
push
clc
repnz
nop
nop
jae
add
mov
push
out
add
gs
push
mov
xchg
ret
add
add
xchg
leave
add
add
addr16
clc
repnz
nop
nop
jae
add
mov
add
cmp
mov
add
std
loope
add
xor
and
in
add
mov
aas
adcl
add
add
ror
add
pop
add
add
xor
xchg
xchg
pushl
sbbb
jp
jbe
nop
push
mov
leave
nop
jmp
add
aad
fiadds
cmpsb
add
std
push
mov
leave
xchg
adc
mov
in
rorl
add
movsb
sub
mov
mov
xchg
ret
push
aam
pop
filds
int3
add
lcall
repnz
nop
nop
jae
call
or
push
jge
inc
cmp
mov
xchg
ret
add
movsl
add
add
sub
test
clc
repnz
nop
nop
jae
jp
out
add
aam
clc
repnz
nop
nop
jae
mov
add
int3
cmp
xchg
xor
mov
xchg
ret
hlt
add
jle
add
je
push
push
mov
xchg
ret
cmpsb
add
add
add
or
fwait
clc
repnz
nop
nop
jae
cld
add
mov
outsb
add
add
push
clc
repnz
nop
nop
jae
mov
add
jno
push
icebp
push
mov
add
jbe
add
lahf
fistpl
add
icebp
sub
mov
add
mov
in
leave
nop
jmp
and
cmp
jle
mov
add
push
clc
repnz
nop
nop
jae
lret
jecxz,pt
or
mov
lods
and
clc
repnz
nop
nop
jae
add
cli
add
hlt
add
add
sub
nop
push
mov
leave
nop
jmp
add
add
add
ja
pop
clc
repnz
nop
nop
jae
add
add
mov
add
call
clc
repnz
nop
nop
jae
add
jnp
enter
nop
push
mov
leave
nop
jmp
out
add
in
add
clc
push
inc
add
mov
dec
add
add
mov
clc
repnz
nop
nop
jae
outsb
mov
add
test
add
add
push
xrelease
clc
repnz
nop
nop
jae
add
add
aad
add
add
push
mov
xchg
ret
add
mov
hlt
scas
mov
cld
nop
nop
jae
push
pop
add
add
add
sti
lret
outsl
test
nop
push
mov
leave
nop
jmp
add
add
or
pop
repz
clc
repnz
nop
nop
jae
add
add
add
add
xchg
inc
mov
clc
repnz
nop
nop
jae
out
add
add
add
sub
add
push
mov
xchg
ret
add
add
mov
add
push
mov
xchg
ret
test
or
add
add
pop
mov
nop
push
mov
leave
nop
jmp
add
xchg
add
inc
pop
clc
repnz
nop
nop
jae
add
jno
add
add
push
cmp
push
mov
xchg
ret
sti
add
movsl
add
add
movsl
xchg
add
nop
push
mov
leave
nop
jmp
add
jecxz
out
jno
sti
pop
jp
mov
add
cli
sbbb
out
add
push
mov
xchg
ret
and
add
add
dec
add
add
push
clc
repnz
nop
nop
jae
outsb
filds
test
add
cmp
xchg
add
clc
repnz
nop
nop
jae
dec
add
sti
jno
push
and
add
add
xchg
jne
clc
repnz
nop
nop
jae
add
je
mov
clc
repnz
nop
nop
jae
adc
hlt
add
or
add
aam
cmp
nop
push
mov
leave
nop
jmp
add
jle
add
jmp
outsl
fwait
clc
repnz
nop
nop
jae
dec
aam
out
add
cmp
test
mov
push
mov
xchg
ret
test
ja
cli
add
fsubrl
fdiv
punpcklbw
repnz
nop
nop
jae
or
jle
add
add
mov
mov
leave
nop
jmp
add
in
add
clc
repnz
nop
nop
jae
and
add
jp
aad
out
dec
stos
clc
repnz
nop
nop
jae
out
add
inc
sti
add
pop
movb
clc
repnz
nop
nop
jae
aam
and
stos
add
add
add
add
sti
lea
nop
push
mov
leave
nop
jmp
popf
jecxz
int3
cld
add
jno
add
mov
jge
add
popa
cld
ja
push
cmp
add
jbe
push
clc
repnz
nop
nop
jae
mov
add
add
shr
clc
repnz
nop
nop
jae
add
outsb
cmp
outsb
add
dec
and
je
call
nop
jmp
add
add
sarl
clc
repnz
nop
nop
jae
ja
mov
add
nop
nop
jae
add
xchg
add
cld
add
aam
jmp
fs
add
ja
add
add
xchg
sti
or
add
add
add
insl
mov
clc
repnz
nop
nop
jae
outsb
out
leave
add
add
push
mov
and
or
add
bound
dec
add
out
add
mov
add
add
in
lret
mov
nop
push
mov
leave
nop
jmp
add
leave
popa
add
push
clc
repnz
nop
nop
jae
xchg
jp
lret
xchg
pop
add
add
pop
sub
mov
push
mov
xchg
ret
add
mov
add
and
clc
repnz
nop
nop
jae
add
fbld
add
fcmovnu
call
nop
jae
fsubl
pop
jp
popl
add
cmp
jnp
nop
push
mov
leave
nop
jmp
add
add
push
sti
add
repnz
nop
nop
jae
mov
pop
add
add
add
add
or
clc
repnz
nop
nop
jae
add
add
fcoml
push
roll
mov
inc
add
or
aam
popa
xchg
dec
dec
push
xor
repnz
nop
nop
jae
add
add
add
cmp
jecxz
clc
repnz
nop
nop
jae
add
test
aad
jp
push
inc
push
nop
push
mov
leave
nop
jmp
jmp
add
add
push
pop
sbb
andl
nop
nop
jae
jecxz
ljmp
jmp
add
jl
rcr
nop
push
mov
leave
nop
jmp
add
popa
add
add
add
popa
adc
scas
clc
repnz
nop
nop
jae
popa
xchg
add
add
add
cmpsb
mov
repnz
nop
nop
jae
xchg
add
popa
jp
add
jnp
add
push
push
mov
xchg
ret
add
leave
add
add
add
adc
add
repnz
nop
nop
jae
add
xchg
je
outsb
je
and
repnz
nop
nop
jae
dec
incl
add
add
int3
ds
fwait
push
mov
xchg
ret
cmp
add
movsl
add
fdivr
xor
fisttpl
nop
nop
jae
add
cmp
mov
cld
add
fldt
xchg
xchg
clc
repnz
nop
nop
jae
xchg
in
faddl
sahf
je
rep
clc
repnz
nop
nop
jae
push
add
out
add
or
outsl
nop
push
mov
leave
nop
jmp
xchg
mov
add
fidivl
mov
aaa
mov
clc
repnz
nop
nop
jae
or
add
add
mov
dec
leave
xor
clc
repnz
nop
nop
jae
cli
jp
add
add
jnp
jle
mov
clc
repnz
nop
nop
jae
add
popa
add
call
clc
repnz
nop
nop
jae
add
xor
cmp
add
add
and
repnz
nop
nop
jae
add
mull
add
add
je
push
pop
push
mov
xchg
ret
mov
add
andb
int3
add
mov
clc
repnz
nop
nop
jae
cld
inc
hlt
stos
add
add
fimull
add
mov
cld
nop
nop
jae
add
add
add
aam
rep
push
mov
xchg
ret
stos
pop
add
add
add
sub
repnz
nop
nop
jae
dec
add
add
add
cmpsl
jmp
popa
inc
add
add
xchg
incl
filds
fists
add
add
add
clc
repnz
nop
nop
jae
pop
sub
and
fisttpl
cld
nop
nop
jae
and
add
add
leave
cld
test
push
cmp
pop
push
mov
xchg
ret
cld
add
cmpsb
popf
jp
add
add
ja
call
clc
repnz
nop
nop
jae
add
jnp
leave
je,pt
ss
fsts
repnz
nop
nop
jae
xor
add
add
incl
inc
add
dec
mov
push
mov
xchg
ret
add
hlt
popa
add
mov
xor
add
add
lret
test
call
nop
jmp
add
add
add
clc
repnz
nop
nop
jae
add
movsl
cmpsb
mov
dec
add
push
nop
push
mov
leave
nop
jmp
add
mull
mov
out
leave
add
add
push
mov
sub
sti
dec
add
adc
ja
aam
popa
movb
or
call
cld
pop
insl
lret
sub
add
add
xlat
adc
sbb
ss
fwait
fs
mov
into
xor
mov
add
sahf
ljmp
dec
pop
jne
mov
inc
mov
add
add
repnz
dec
loope
pop
inc
mov
or
add
add
out
inc
pop
xor
lock
sub
scas
scas
mov
push
pushl
mov
pop
sub
mov
mov
add
sub
xchg
sbb
clc
out
insb
add
add
jae
sti
fwait
dec
add
add
cwtl
out
inc
or
sbb
scas
ljmp
int
hsubps
addr16
xchg
add
pop
idivb
cltd
stos
mov
jae
xchg
test
mov
add
add
add
sub
xchg
mov
xchg
pop
mov
idiv
push
orb
add
push
mov
add
loop
pop
and
add
add
add
add
addl
jmp
mov
andl
stos
mov
mov
mov
pop
fdivrs
jge
mov
mov
imul
adc
mov
adcl
cmp
loope
rorb
push
mov
xor
dec
add
mov
into
lcall
mov
or
stc
mov
inc
xchg
inc
and
mov
outsl
mov
and
jg
adc
cli
push
ret
push
test
pop
xor
jmp
jbe
in
xlat
lock
and
push
in
in
clc
pop
sbb
add
mov
js
leave
es
je
push
add
add
js
mov
es
cmp
dec
add
add
inc
hlt
mov
inc
dec
pop
fdivrs
insb
add
add
cmp
add
mov
movsb
cmc
mov
pop
lret
add
hlt
adc
fwait
aas
or
add
add
test
xor
or
push
lods
cmc
icebp
in
dec
cmp
add
ja
outsl
cmp
out
cmpsb
icebp
fists
mov
xchg
cmp
add
push
lcall
and
sbb
insl
xchg
and
repz
stc
fidivs
add
addb
add
jbe
movsl
fwait
mov
sub
add
add
jmp
pop
lret
add
add
aam
mov
add
pusha
add
add
cmpb
xchg
fisubl
dec
cmp
cs
add
add
out
mov
out
add
lea
mov
mov
mov
jp
insl
jb
loope
js
pop
add
jg
mov
shl
add
add
add
movsb
movsb
inc
pop
pushw
daa
inc
mov
ja
subb
ljmp
add
add
xor
add
lcall
dec
mov
jbe
and
add
add
jb
mov
add
cmp
psllq
icebp
bound
fimuls
lret
mov
mov
pop
movsl
in
sahf
out
aas
mov
fstpt
mov
cld
push
add
dec
mov
add
in
nop
mov
mov
lcall
mov
and
xor
xor
int3
lcall
xchg
iret
jb
std
clc
test
cmpsb
push
cwtl
popf
pop
or
add
add
repnz
adcl
cmpsb
xchg
mov
les
xchg
push
pop
aas
inc
sahf
jae
stos
movsl
adc
in
shll
mov
addb
add
add
mov
ljmp
add
add
mov
repz
jp
sub
mov
dec
inc
imul
mov
pusha
mov
loopne
int
das
andb
pusha
add
add
push
jns
aaa
sub
fdivl
sbb
leave
mov
xchg
push
adc
inc
mov
mov
add
add
in
or
add
add
sub
mov
dec
aas
sub
add
add
and
add
add
sbb
mov
in
shll
lods
out
inc
pusha
add
add
adc
mov
hlt
xchg
add
jg
cmc
push
les
fstl
cmp
iret
rcl
inc
movsb
fadds
add
add
sti
fwait
mov
mov
adc
mov
xchg
test
mov
push
pusha
mov
xchg
push
test
mov
pop
jo
dec
into
cmp
or
add
add
lock
outsl
std
jg
sbbb
movsb
cmp
popf
call
lods
xor
push
lret
fistpll
lret
cmpb
mov
in
push
xchg
sbb
mov
fisubrs
stos
daa
xchg
xor
jnp
dec
add
add
push
mov
popf
mov
cmp
dec
movsl
je
mov
mov
pop
or
dec
and
add
add
rorl
pushf
pop
repz
mov
jmp
mov
into
outsb
outsb
or
insb
mov
daa
cmp
jle
add
add
imull
mov
and
add
add
push
mov
or
call
test
push
pop
inc
jmp
xchg
pop
push
pop
stos
pop
orb
mov
subl
push
popa
xor
mov
lahf
jo
pop
xor
lahf
jecxz
sub
add
add
mov
sub
out
mov
mov
push
push
cltd
cld
inc
sarb
fbld
mov
pop
mov
and
add
cltd
add
add
add
iret
clc
out
pop
mov
pop
je
inc
mov
xor
add
add
add
ret
adcl
add
mov
add
jnp
dec
mov
testb
dec
push
inc
dec
mov
cmp
loopne
sahf
sub
add
add
add
add
ret
mov
lcall
inc
inc
mov
in
pop
or
fstpt
cli
push
out
in
cs
xor
jne
push
or
out
xor
lcall
push
sub
add
add
mov
lds
add
sub
add
add
iret
jo
mov
cmp
add
mov
add
mov
mov
add
add
fnstenv
mov
add
add
or
add
add
jo
nop
and
add
add
mov
adc
mov
es
add
add
push
shlb
mov
lret
stos
adc
pop
dec
mov
add
cmp
jle
inc
add
add
push
in
jp
xor
adc
sbb
in
mov
add
add
and
xchg
cltd
pop
xchg
data16
je
sub
xor
jle
pop
inc
mov
fcmovne
loope
jmp
inc
mov
pop
jns
and
mov
inc
cmp
enter
add
add
xchg
ror
and
lret
add
add
call
sbb
in
xchg
scas
xchg
sbb
pop
or
add
add
add
add
cmpsb
mov
mov
mov
popa
rcrb
push
scas
inc
mov
or
pop
jmp
flds
cmpsl
fsubr
cmpsl
pop
push
dec
mov
addl
push
mov
cmp
add
sub
add
add
inc
inc
fst
daa
sub
jle
ds
add
add
movsl
cmp
push
leave
in
adc
add
add
int3
pop
xor
adc
loop
movsb
sbb
mov
add
add
scas
mov
cmc
jno
mov
and
pop
je
dec
add
add
loopw
out
lret
das
xchg
fsub
iret
fstp
jae
fildl
add
add
add
add
mov
push
and
add
add
add
add
sbb
insb
add
add
insb
mov
pop
inc
cmp
add
nop
mov
cmp
push
xchg
je
add
add
xchg
imul
xchg
mov
ds
daa
jl
int
leave
inc
mov
add
add
add
out
fwait
xchg
push
inc
add
add
pop
dec
xchg
cld
mov
or
arpl
pop
add
sti
sarl
jno
mov
sar
xchg
or
aad
cmc
jo
lahf
test
aas
sub
mov
pop
lcall
add
and
fcomps
cmp
xor
inc
inc
call
push
push
sti
loop
cmpsl
cmp
dec
mov
mov
pop
pop
out
inc
mov
xor
xor
sahf
mov
push
lock
lock
lods
out
inc
inc
ds
mov
leave
jge
lret
xchg
adcb
push
fwait
pop
xchg
dec
sub
and
lods
adc
inc
add
add
xlat
rcll
add
popa
or
sbb
adc
add
add
push
mov
cmp
mov
leave
sub
jo
mov
sahf
jbe
pop
jge
pop
neg
aaa
aam
push
jae
ror
frstor
cli
ds
xor
aam
aas
jl
add
add
or
int
inc
cmpsl
outsl
xor
loop
outsl
not
push
xchg
add
push
cmp
icebp
inc
xchg
mov
mov
cmpsb
movsb
push
pop
pusha
mov
cmpsb
imul
push
andnps
add
clc
or
add
add
icebp
add
ja
inc
mov
lret
fildll
iret
movsb
call
xchg
dec
add
add
mov
push
sbb
movsl
arpl
jle
sub
add
popf
popa
jecxz
dec
and
add
add
inc
push
shl
pop
in
scas
in
imul
enter
xor
push
arpl
dec
add
add
fucomp
mov
add
pushf
mov
stos
inc
mov
leave
mov
int
xorl
mov
sbb
out
cmp
mov
pop
mov
add
add
movsb
cmpsb
xor
adc
data16
fsubs
mov
mov
push
push
push
cli
jg
stos
mov
clc
push
sti
cmp
add
add
cmp
mov
xchg
or
pop
push
ret
cmp
pop
inc
add
add
fldt
inc
mov
mov
dec
add
add
cltd
xchg
les
int3
pop
ret
sub
gs
rorb
mov
lret
mov
rol
sahf
call
outsb
or
fcos
sub
not
dec
mov
js
sbb
data16
push
imul
add
and
mov
or
sbb
inc
aam
mov
or
ljmp
jecxz
rcll
les
mov
ret
sub
add
add
rclb
addr16
cld
ds
xchg
pusha
mov
sub
out
stc
inc
add
add
inc
push
push
pop
outsl
inc
sbb
hlt
pusha
mov
outsb
mov
aaa
mov
add
loope
add
add
mov
imul
pop
and
sub
cmp
adc
xor
add
cmp
ror
stc
stos
cmpl
sahf
pop
addr16
int3
outsb
fdivs
inc
repnz
cmp
xchg
and
inc
mov
xchg
in
push
add
mulb
pop
mov
adc
filds
pop
lods
or
stos
ret
sahf
icebp
dec
mov
mov
jne
mov
push
add
push
pushf
add
cli
cltd
or
ss
stos
out
dec
sbb
add
out
cmp
scas
jmp
push
fidivrs
gs
fstpl
push
pop
lret
add
fldenv
jl
push
rolb
mov
or
test
arpl
add
add
mov
pop
pop
xchg
add
lods
inc
xchg
js
mov
add
add
loop
and
jae
dec
xchg
ja
dec
cwtl
or
add
add
nop
sbb
je
cmpsb
iret
dec
ljmp
mov
xchg
push
ljmp
loopne
fisttpll
dec
mov
lods
mov
cs
mov
in
rcr
cmp
pop
push
add
add
add
test
mov
nop
cmp
push
dec
into
xchg
add
xor
test
mov
add
add
xorb
mov
add
add
inc
lret
add
add
dec
mov
xchg
inc
adc
add
xchg
and
add
add
xor
cmp
xor
add
add
test
notb
iret
movb
add
aas
std
and
cmp
int
adc
mov
ss
cmpsb
arpl
jmp
das
sbb
je
adc
mov
lods
decl
xchg
xchg
pop
dec
mov
and
test
fimull
sub
add
add
add
add
ret
add
pusha
add
add
in
mov
dec
or
xor
add
add
mov
pop
push
add
add
imul
adc
adc
xchg
in
stc
mov
cmp
mulb
add
add
das
push
andb
or
pop
adc
xchg
pop
lock
sbb
pop
jl
and
mov
pop
faddl
in
dec
add
add
cmp
mov
mov
addr16
jg
stc
addr16
fldcw
pop
sbb
inc
xorb
or
rolb
xchg
dec
dec
xchg
outsb
dec
or
and
pushf
aas
push
in
cwtl
pop
fiaddl
mov
call
mov
inc
das
mov
dec
pusha
mov
neg
sub
add
add
xchg
dec
stos
ds
loop
add
add
mov
loop
aam
jle
fidivrs
dec
cmp
push
loope
mov
add
add
add
mov
mov
call
nop
notb
in
mov
aam
movsb
cmp
std
jae
mov
loope
cmp
popf
mov
insl
push
lods
adc
sarb
mov
jns
inc
add
add
xor
adc
cmpb
sbb
shlb
xchg
add
cmp
add
add
add
add
sbb
mov
add
test
push
std
arpl
or
add
add
insl
int3
push
mov
or
jecxz
in
outsb
adc
shrl
dec
add
pop
cltd
and
cmpsb
repz
and
fnstcw
ss
jp
mov
jge
pop
cmc
or
sbb
cli
imul
dec
stos
rcrb
loope
dec
insl
mov
std
add
add
cmp
inc
mov
jno
in
xorl
add
add
add
add
cmp
mov
stos
fwait
out
mov
jns
xchg
in
cli
jbe
cmp
ret
xor
cli
arpl
dec
push
int
mov
sbb
mov
test
add
add
shr
aas
sub
xor
inc
test
leave
xchg
xchg
pop
sub
popf
std
cld
mov
and
cmpsb
aam
jb
imul
add
add
xchg
fisubrl
rcl
adcl
sbb
xchg
push
mov
pop
push
or
data16
fs
gs
out
pop
mov
mov
jmp
popf
mov
add
dec
add
add
pop
fwait
jnp
mov
mov
outsl
orl
add
push
mov
inc
inc
cmp
imulb
sti
pop
les
mov
std
lds
add
add
call
adc
ja
lahf
add
jmp
xchg
ja
mov
xchg
fbstp
inc
mov
jge
call
cmpsl
add
add
out
add
pop
and
adc
sbb
ljmp
push
jnp
cmp
dec
cltd
call
nop
xchg
in
mov
mov
dec
out
jns
loope
sbb
or
leave
mov
mov
mov
das
push
sub
sub
push
bound
add
jns
add
add
out
jo
pop
mov
test
inc
adc
mov
outsl
scas
cmc
add
push
shll
add
add
retw
dec
lea
mov
add
add
add
add
scas
or
or
add
add
sub
stc
mov
clc
in
adc
cs
add
pushf
in
lds
das
pop
fwait
cmp
dec
push
sti
adc
fldenv
add
add
jle
mov
les
es
and
decl
testb
add
add
sub
add
add
add
aaa
movl
inc
add
add
xchg
push
push
cmc
mov
mov
add
add
aas
repz
inc
cmp
mov
fiadds
loopne
mov
add
out
xorl
add
jecxz
mov
mov
leave
fsubl
pop
inc
add
add
pop
adcb
add
cmpsl
mov
iret
xor
iret
and
fsub
adc
jl,pn
xor
add
jle
jno
add
add
dec
mov
sbb
test
stos
xlat
das
sbbb
pop
and
xchg
adc
sbb
add
add
push
mov
subb
add
xor
mov
sub
clc
fldt
fistps
add
lahf
and
out
push
clc
mov
je
test
add
add
lods
sahf
gs
cltd
repnz
sti
pop
es
fisubrl
mov
fcmovnbe
push
adc
ja
fisubrs
add
jnp
or
cmp
or
add
ds
in
mov
cld
mov
out
mov
xchg
ja
jle
add
sub
add
xorl
repz
jns
add
add
aaa
push
out
sub
add
mov
inc
or
add
add
cwtl
leave
adc
mov
jg
push
sbb
lcall
pop
dec
das
int3
or
in
add
add
add
add
add
mulb
add
inc
call
imul
add
push
mov
xor
add
daa
mov
xchg
cmc
mov
lods
out
jnp
fdivrs
aad
sub
mov
scas
and
xchg
shrb
mov
push
je
gs
movsl
and
add
sub
add
add
sbb
sti
xor
pop
push
inc
mov
popf
loope
shrl
add
aad
fldt
jmp
push
andb
add
cs
scas
inc
adc
inc
mov
add
add
imul
add
push
xor
add
add
pop
jl
inc
jmp
repz
or
add
add
cmp
movsb
mov
or
out
ret
daa
sub
add
mov
fwait
je
adc
sti
xlat
sahf
mov
enter
sahf
fists
add
add
add
mov
or
cld
sub
xlat
xchg
mov
pop
dec
mov
ljmp
dec
shl
inc
cmp
vshufps
inc
add
add
mov
add
shll
jp
imul
shrl
cld
sub
mov
pop
dec
frstor
clc
les
add
mov
outsl
scas
sbb
add
add
sbb
out
or
scas
xchg
jno
add
add
mov
loop
mov
in
and
mov
mov
mov
cmp
negl
mov
js
aam
sub
add
andl
out
cmpsl
mov
jno
cmp
and
add
add
ret
push
cmp
jecxz
movsl
push
and
sub
pop
jb
add
add
mov
mov
and
insl
sahf
in
dec
xor
add
cmpsl
lock
xor
flds
sarl
out
fisttps
add
add
negl
shl
push
pop
clc
js
scas
stc
arpl
mov
add
jecxz
add
fisttpll
aam
leave
out
cmp
mov
lret
xor
add
enter
add
add
pushf
mov
lods
iret
add
and
add
add
dec
icebp
lds
mov
sub
sahf
add
cwtl
outsb
jne
jge
icebp
insb
add
add
mov
testb
mov
add
add
cmpsb
mov
fstpl
add
add
adc
call
hlt
mov
sysenter
arpl
sahf
xor
mov
hlt
out
movsb
dec
scas
sbb
add
fcoms
mov
add
add
push
mov
adc
icebp
stos
mov
outsl
repnz
mov
ret
test
mov
jp
fimull
addr16
pop
mov
fstl
xchg
mov
out
js
movsl
add
add
add
aas
dec
test
mov
decb
add
xor
xchg
mov
add
add
dec
decl
in
sub
add
add
mov
push
and
add
add
out
push
sbb
shll
cmp
or
mov
orl
add
add
mov
mov
lds
add
add
js
rorb
mov
das
cmp
lods
mov
cmpsb
out
sbb
out
inc
add
add
movsl
cmpl
add
add
add
fwait
mov
sub
add
add
fldt
add
and
mov
int
inc
shl
addr16
int3
outsb
cmp
lods
push
mov
add
add
or
and
add
add
shl
and
cltd
adc
pop
adc
pushf
and
add
add
pop
pop
ljmp
adc
test
outsb
pop
lcall
pop
mov
add
lcall
mov
mov
int
inc
mov
in
jns
cltd
cwtl
pop
or
add
add
mov
out
inc
add
add
ljmp
scas
leave
mull
jns
add
add
fnstsw
mov
adc
mov
call
xchg
outsl
push
push
xchg
dec
jae
dec
ret
pop
pop
inc
dec
aaa
inc
pop
xchg
dec
sub
adc
push
and
add
add
pop
outsl
jb
fadd
aaa
add
popf
fisubl
add
add
adc
sbb
mov
add
add
pop
insb
mov
or
add
repz
mov
inc
push
sbb
cmpsl
mov
sbb
push
and
add
rorb
jb
jne
scas
xchg
scas
dec
add
add
inc
or
add
add
add
sbb
dec
fmull
xor
iret
test
sub
mov
add
ret
fsubrl
push
jno
int3
mov
jns
addl
jmp
add
add
rcll
aad
sub
xor
js
addb
and
sub
add
add
jno
xchg
int3
pop
cmp
mov
pop
adc
scas
adc
add
add
sarl
xor
sbb
outsl
push
xchg
pusha
add
add
sbb
xor
call
jg
faddl
mov
pop
mov
cmpb
cmpsl
xor
or
add
add
bound
icebp
push
xor
lds
xor
pop
cmp
dec
gs
xchg
xchg
sub
bound
jno
jae
addl
pushf
in
or
mov
dec
popf
push
sti
insl
adc
mov
scas
arpl
or
add
add
mov
cmp
lret
or
add
add
int3
pusha
add
add
push
in
dec
scas
cmpsl
fstps
add
mov
and
cltd
repz
cmc
fwait
or
addr16
lods
mov
lock
sbb
mov
mov
loope
clc
xor
jns,pn
into
mov
mov
dec
enter
jnp
fiadds
add
add
mov
add
add
add
cmp
pop
arpl
leave
decl
scas
jecxz
add
jnp
or
fxch
dec
sub
jmp
add
add
testb
and
add
add
dec
cs
imul
icebp
enter
add
add
add
add
icebp
daa
das
mov
les
pop
pop
mov
repnz
add
or
add
add
add
rorb
add
add
mov
xor
mov
jnp
add
aas
outsl
xchg
sti
loopne
mov
clc
xchg
and
mov
mov
mov
add
add
add
add
lret
mov
xchg
sti
adc
sub
fimull
cld
or
inc
jne
add
add
leave
lds
mov
int
stos
mov
mov
test
rcll
add
add
sub
add
add
sub
add
add
or
add
add
xlat
or
add
add
sub
ss
roll
jge
stos
dec
ja
xchg
jne
or
add
add
xor
or
add
add
add
es
inc
add
add
rolb
inc
and
push
lock
mov
fldl
and
inc
mov
push
imul
scas
push
jne
xor
movsb
dec
mov
mov
sbb
repnz
inc
add
add
stc
mov
gs
mov
sub
ret
cmp
push
es
movb
fmuls
add
add
push
sbb
mov
adc
sub
add
add
jne
out
ljmp
leave
in
fdivrl
cmp
cmp
outsl
std
inc
sahf
iret
xchg
mov
popf
inc
clc
clc
adc
cld
add
pop
push
and
add
add
inc
popf
xchg
push
bound
add
mov
outsl
out
aad
mov
loopne
lret
andl
add
mov
mov
mov
sub
add
sarl
aad
cld
sti
cmc
mov
icebp
mov
jg
cmp
mov
inc
pmaddwd
add
xchg
sbb
add
add
xor
add
addr16
movsl
int
pusha
mov
add
add
pop
popf
fcmovnu
movsl
aam
call
bound
add
jbe
mov
inc
cmpsl
xchg
jge
lea
clc
mov
and
add
ljmp
add
add
dec
jbe,pn
fs
mov
sbb
jecxz
lcall
add
add
jle
cmp
adc
repz
in
test
pop
leave
xor
xchg
mov
iret
aam
mov
mov
sub
fsubs
xor
sub
sbb
das
push
xor
mov
cmpsl
enter
fimull
push
pop
notl
add
add
sub
jmp
mov
pop
pop
fdivs
mov
mov
notb
in
jno
add
jb
mov
add
add
cmp
push
pop
lret
popf
mov
imul
int
stos
pushf
or
js
push
sub
push
rorb
add
add
out
mov
mov
add
push
pop
jns
jg
jo
cmp
cmp
mov
adc
add
add
xlat
sti
out
hlt
out
int3
iret
mov
push
cmp
pop
push
outsb
pop
test
add
sub
or
add
add
test
movsl
fnsave
mov
xchg
xlat
dec
and
scas
mov
rorb
add
add
or
imul
cmc
inc
lahf
cmp
add
add
add
add
fcomp
lahf
imulb
add
add
jae
scas
dec
xchg
sbb
push
mov
dec
mov
mov
adc
dec
dec
les
cmp
pushw
mov
push
jnp
xchg
mov
clc
sub
rcl
and
loopne
pushf
outsb
arpl
std
mov
inc
mov
popa
jge
mov
add
add
cmp
jnp
dec
dec
or
push
xchg
push
testb
imul
sub
das
jecxz
dec
mov
int3
hlt
mov
outsb
aad
dec
sahf
clc
pop
nop
lret
mov
out
push
lods
cmp
or
sarl
stc
into
test
add
cmp
cmp
mov
xor
mov
push
xchg
dec
in
loopne
inc
pop
ljmp
xor
pop
movsb
or
add
add
jp
popa
adc
loop
test
xor
cli
xor
je
fwait
or
add
add
jnp
adc
mov
mov
mov
cmp
mov
mov
add
add
add
xchg
out
cmp
icebp
sbb
rcll
insl
xor
mov
jbe
pop
xchg
push
cmp
mov
inc
xchg
push
inc
add
add
push
icebp
lds
add
add
or
scas
jo
scas
jae
fisttps
mov
cmp
pop
lock
lods
or
add
add
and
add
add
jg
mov
push
mov
and
imul
cmp
jl
fstps
push
popf
add
xor
inc
add
add
test
jmp
inc
fwait
sub
sub
int3
sbb
int3
jg
lock
adc
fldenv
sub
add
mov
add
ret
fwait
loope
roll
add
sub
cmp
insl
cmpsb
dec
rclb
mov
sar
sub
add
nop
mov
ja
adc
std
loop
mov
fstpl
shll
xchg
jno
idivb
andl
sub
add
add
in
xchg
fimull
in
jae
pop
sub
lock
pop
mov
and
add
add
nopl
xlat
divb
sub
xchg
jb
outsl
dec
xchg
push
psrld
sbb
lods
ja
loop
mov
jle
sahf
loop
add
add
call
lods
pusha
mov
or
add
add
inc
add
add
sbb
dec
xor
sbb
test
add
jb
hlt
mov
add
aam
dec
mov
inc
pop
stc
hlt
mov
mov
es
add
add
rclw
jge
in
cs
movb
sbb
push
push
mov
xchg
outsb
xchg
dec
shll
cmc
call
add
leave
xor
enter
add
enter
fisubrs
inc
js
jp
inc
mov
mov
in
fidivrs
pop
inc
jge
jp
repnz
mov
xchg
lock
mov
pop
cmp
sub
push
mov
int3
jg
out
sbb
fmuls
outsl
and
mov
mov
stos
icebp
into
pcmpgtw
ss
sbb
xor
add
xor
add
mov
adc
jle
mov
mov
cmc
add
add
cs
sbb
negb
adc
add
add
cmp
insb
add
add
inc
xchg
fdivr
jnp
add
add
fldlg2
out
add
add
add
xchg
jecxz
mov
xor
mov
addr16
add
pop
cmp
pop
pop
and
dec
aam
sbb
add
jb
push
in
mov
rorb
lods
mov
stos
jmp
scas
fildll
dec
lret
sbb
add
add
or
or
push
inc
xchg
xchg
sbb
sub
add
add
scas
inc
xchg
cmp
add
fstps
test
push
insl
nop
loopne
cmpsb
or
add
add
or
add
add
pusha
add
add
aas
test
popl
jnp
inc
subl
enter
loopne
jmp
sahf
sbb
sub
int
adc
cmpl
test
mov
enter
mov
add
add
xchg
icebp
mov
cld
push
jp
inc
cmp
repnz
mov
popf
orl
shl
ljmp
or
pop
aas
lahf
push
movsl
rcll
fldl
out
mov
loope
inc
add
add
inc
test
rol
jo
out
add
add
pop
pop
mov
xchg
and
lock
daa
mov
mov
mov
pushf
xor
jl
push
sbb
cltd
mov
out
int3
cli
jbe
add
add
or
add
add
pop
cmp
pop
mov
popa
jge
mov
into
mov
mov
andb
rorl
sbb
jns
or
notb
je
add
clc
loop
sbb
mov
fstp
out
dec
mov
add
inc
mov
push
cmp
xchg
jb
int3
hlt
mov
xchg
test
and
or
jbe
ret
lds
hlt
push
cltd
mov
not
mov
cmp
mov
pushl
mov
out
mov
pop
mov
lods
mov
pusha
mov
add
add
add
adc
pop
cmpsl
inc
pop
or
sbb
mov
je
adc
add
aam
mov
adc
loopne
mov
dec
mov
pushf
iret
mov
or
add
jle
hlt
movsl
rol
sub
scas
scas
lds
test
jge
subb
inc
mov
sbb
aaa
adc
add
add
out
inc
mov
xor
pop
push
jnp
inc
shlb
mov
sbb
mov
add
pop
jle
data16
mov
shll
test
or
add
mov
and
add
cltd
jg
mov
popa
dec
decl
add
ds
popa
mov
mov
xor
add
lock
mov
push
mov
adc
sbb
fisttpl
add
fcmovu
dec
mov
stc
dec
push
sub
sti
sbb
mov
test
test
pop
or
add
add
or
add
add
adc
je
fildll
jno
jbe
out
and
cli
dec
add
add
push
mov
pushf
pop
push
adc
add
add
pop
inc
mov
or
dec
dec
stos
outsb
mov
aaa
cmpsb
add
add
add
repz
jb
test
add
add
inc
shl
das
inc
push
ret
cmp
out
add
jnp
in
xchg
mov
add
add
not
and
cmp
fldl
or
pusha
add
add
cmp
ss
xor
out
idiv
pop
add
add
add
cltd
push
push
or
lret
loopne
cmp
add
add
out
fstps
jnp
jge
and
inc
mov
and
add
add
or
mov
and
mov
ret
add
leave
and
jns
dec
jge
dec
add
add
icebp
movb
stos
ret
ds
movsb
push
xor
repz
cld
and
or
add
add
stc
or
outsb
inc
sub
mov
push
movl
add
add
out
arpl
lahf
es
cli
mov
or
mov
lahf
jmp
pushf
mov
xor
dec
add
add
cmp
add
add
mov
fs
cld
push
add
add
add
add
add
dec
mov
xor
mov
ljmp
mov
pop
mov
add
lahf
dec
mov
addl
mov
and
or
pop
mov
add
sub
mov
fisubrl
mov
lret
bound
mov
lret
mov
sbbb
in
sbb
pushf
andb
add
ret
aad
inc
jecxz
push
stc
cmp
sbb
lret
cmp
mov
add
scas
jno
pmaxsw
add
nop
xchg
pop
arpl
add
aam
push
push
xor
xchg
add
add
jne
inc
mov
addr16
add
add
int3
xchg
inc
ljmp
add
add
jb
cmp
add
add
xchg
mov
rcr
cltd
mov
jnp
lods
out
clc
outsb
cltd
dec
dec
xor
inc
mov
or
add
add
pop
pop
or
loopne
inc
ja
push
jg
fwait
mov
loop
mov
lods
jle
das
clc
jmp
add
sbb
push
lcall
xor
dec
icebp
xchg
clc
mov
repz
jmp
cmp
movsl
shrl
vpsllq
into
inc
aam
lret
roll
movb
xor
subl
mov
xor
outsb
dec
push
mov
xor
jb
dec
push
mov
shlb
sbb
cmp
sbb
cld
out
movsl
jbe
mov
xchg
mov
push
jbe
cmp
sahf
and
ret
sub
add
add
in
pushf
sbb
insb
add
add
xor
rorb
add
adc
xchg
outsl
inc
add
add
pop
sbb
add
in
mov
mov
aas
or
sub
out
daa
stos
lcall
add
add
push
jbe
inc
add
add
es
arpl
inc
les
add
add
in
jbe
into
lcall
cmp
ss
mov
jmp
repz
cmp
shr
mov
fildl
adc
pop
bound
mov
daa
adc
xor
push
cmp
add
and
sbb
addr16
aaa
cmpb
out
imul
test
add
scas
sahf
sahf
icebp
test
add
lock
mov
add
sub
push
adc
cmp
mov
add
add
inc
mov
icebp
mov
dec
mov
adc
aaa
xchg
xor
add
add
jnp
jge
dec
aas
lods
lds
add
mov
ret
ja
inc
add
add
test
mov
and
or
add
add
lret
outsl
xlat
inc
add
push
jnp
movsb
ficoml
lret
jle
in
fsts
push
out
inc
movnti
sbb
loopne
ret
jle
mov
xchg
movsl
mov
jne
in
and
push
arpl
cmpsb
push
pop
mov
jge
xchg
push
aas
sbb
pop
loope
xchg
sbbb
xor
pop
xchg
and
cmpsb
lcall
cmp
cwtl
cmpsl
mov
push
movsl
pop
out
add
test
adc
in
inc
mov
js
call
xchg
cwtl
xor
cmp
adc
insl
pop
mov
jne
and
add
add
or
fcmovu
scas
repz
sbb
sarb
inc
imul
jno
iret
sbb
adc
sti
popf
add
add
add
or
add
add
xchg
mov
repz
adc
mov
pop
jns
addr16
mov
xchg
shr
and
add
add
sbb
xchg
push
sarb
jl
jno
in
loopne
push
stc
lcall
gs
jne
push
into
pop
out
lods
hlt
xchg
sti
stos
bound
pop
sub
aad
dec
mov
data16
xchg
adc
add
jmp
push
mov
movsb
mov
mov
pop
add
or
sbb
inc
sahf
cmc
jge
je
out
ja
test
shl
push
xchg
pop
movsb
test
mov
adc
add
add
and
jno
xchg
sahf
inc
scas
fildl
mov
inc
mov
add
jae
rcr
jl
nop
mov
push
insb
mov
xor
icebp
pusha
add
add
nop
dec
add
add
mov
lahf
aad
mov
sub
jo
jb
mov
cmp
int
sbb
and
add
add
and
fisubrs
jns
dec
mov
roll
daa
or
add
add
jae
mov
add
jecxz
xchg
mov
add
je
mov
push
shlb
adc
sbbb
adc
cmp
add
add
div
movsl
insb
add
add
lods
dec
cmc
pop
or
fmul
arpl
test
insb
mov
inc
test
add
fwait
or
cli
mov
add
add
bound
mov
jnp
jo
add
dec
jno
add
add
sahf
jae,pt
jb
and
add
add
fucom
adc
xor
push
arpl
imull
xor
mov
and
jmp
mov
jmp
add
mov
movb
dec
pushf
cmp
sbb
add
add
rcl
mov
inc
cmc
sub
add
add
xchg
lock
jecxz
cmc
fcoms
xchg
aam
ds
xchg
sbb
cmp
cmovp
add
or
lods
and
add
add
dec
decl
add
in
pushf
mov
in
ret
inc
orb
aam
push
xchg
cld
hlt
es
mov
pop
std
cmpsb
xchg
cmp
fildll
lea
adc
dec
jle
lods
add
cmp
push
inc
add
add
outsb
daa
add
add
outsl
xor
adc
add
add
daa
xchg
test
sbb
or
nop
iret
jno
mov
inc
hlt
adc
js
pop
sarb
movsb
inc
dec
mov
xchg
or
stc
sub
out
scas
or
add
add
xchg
jle
popf
scas
xor
sarl
mov
sbb
jne
push
sbb
push
les
xor
cmp
add
pushl
mov
lret
add
xchg
out
jp
dec
adc
cs
mov
sbb
add
add
call
add
add
cli
nop
jecxz
jg
enter
data16
pop
out
bound
push
lcall
cld
roll
iret
scas
jl
stos
xchg
enter
push
add
cmp
inc
sub
ret
lahf
movsb
pop
inc
jp
cli
push
fistpll
jmp
add
loope
jl
mov
mov
jnp
xchg
leave
cmp
movsl
xchg
iret
test
jg
int
add
add
add
inc
dec
xlat
notl
or
inc
sbb
std
loopne
ds
push
aam
dec
cmp
mov
add
add
add
sbb
sahf
cmp
add
add
das
dec
fistpll
xor
mov
add
dec
mov
or
mov
and
sub
add
add
test
loope
scas
jecxz
push
mov
cwtl
dec
outsb
push
dec
add
add
lcall
scas
mov
push
loope
hlt
loop
xor
daa
dec
add
add
ja
dec
popa
cmpsl
fdivl
inc
jecxz
dec
mov
mov
dec
xchg
xchg
jl
outsl
movsl
dec
mov
xchg
sbb
push
es
sar
sub
pop
push
xchg
paddq
bound
scas
filds
popa
movsl
xor
mov
mov
icebp
data16
mov
int
xchg
fisttpll
les
add
ljmp
mov
dec
cltd
cld
test
int3
cmpl
outsl
cmc
jmp
xchg
inc
mov
pop
lret
rol
fidivrs
inc
inc
dec
mov
mov
fs
adc
pop
mov
out
or
mov
aaa
jnp
sahf
adc
cmpb
and
adc
mov
roll
add
or
adc
jno
add
add
cmpl
flds
addr16
mov
pop
inc
mov
cmpsl
inc
inc
mov
inc
mov
repnz
cmp
jmp
xchg
repnz
js
std
and
jge
js
mov
mov
frstor
sub
fcompl
cmp
mov
xchg
adc
add
lcall
fstpt
notb
popa
or
add
add
adc
scas
inc
xchg
sbb
pop
imul
in
push
stos
insb
add
add
cmp
out
movl
add
add
cmpb
add
add
add
add
xor
mov
mov
negb
adc
inc
movsl
xchg
std
xchg
cld
sarb
ss
add
add
sahf
arpl
jmp
mov
popf
outsl
rcll
fs
mov
mov
push
test
dec
mov
sub
outsb
int
repnz
mov
sub
sbb
dec
mov
mov
imulb
add
pop
cmp
and
pop
push
rcr
fucomi
leave
call
lcall
inc
lea
lret
dec
push
es
pop
xchg
mov
pop
sbb
mov
push
or
add
add
jno
or
add
add
jp
repz
jge
test
test
add
add
dec
add
add
mov
sbb
std
add
lcall
mov
daa
adc
add
sar
repz
mov
add
add
add
add
fdivl
mov
add
mov
inc
add
add
inc
insb
mov
ret
lods
inc
mov
lcall
jp
negb
push
subb
add
insb
add
add
out
lock
repnz
and
mov
cmp
or
add
inc
lret
in
mov
filds
add
add
add
add
push
test
js
inc
mov
in
mov
ljmp
pusha
add
add
aad
push
add
add
add
inc
pop
cmp
lods
dec
dec
push
push
mov
lahf
loopne
add
lds
test
repz
or
push
fsubrs
add
daa
shlb
rcrb
int
jg
test
in
ret
aaa
movsb
rclb
fsubrl
daa
pushf
sbb
addr16
jge
mov
mov
clc
and
add
add
inc
xor
jle
sub
add
add
add
sbb
dec
mov
fstps
mov
push
in
js
xor
ret
xor
mov
cmp
sbb
sub
add
add
add
add
add
add
in
std
sbb
xor
adc
in
test
push
fimull
aad
std
xor
js
mov
push
cmpb
bound
add
add
dec
and
fildl
add
add
shr
and
test
scas
inc
fldln2
lfs
add
add
stc
or
add
add
add
add
shll
loopne
lcall
jno
add
and
lock
xor
scas
xor
in
mov
test
lret
arpl
xchg
inc
pop
xor
add
mov
inc
adc
mov
aam
cmc
xlat
xchg
jmp
or
lock
push
push
sub
in
lods
notb
dec
lcall
add
add
add
add
pop
subl
cmp
decl
nop
shll
imul
cmpl
insb
mov
mov
and
add
add
pushf
movsl
lcall
in
insl
lods
cmp
mov
add
add
ja
std
pop
push
inc
mov
mov
push
dec
add
add
pop
sbb
inc
stos
cld
cmp
adc
add
add
in
cmc
jae
inc
rolb
or
add
add
cld
pop
in
xchg
out
movsb
sbb
outsl
fldcw
daa
mov
pop
dec
imul
push
dec
in
jns
add
add
shlb
mov
les
add
sbb
add
add
and
and
xor
inc
add
add
shl
and
icebp
insb
mov
dec
push
sbb
add
stos
inc
xor
xchg
xor
mov
push
notb
es
pcmpgtw
cmp
add
shrd
xchg
mov
inc
adc
fcoml
mov
in
xchg
mov
loopne
stos
sub
stc
fcompl
jnp
adc
pop
icebp
jbe
pop
or
lods
add
add
pop
jbe
push
mulb
sarl
divl
add
mov
add
std
jns
dec
in
mov
add
es
sahf
insb
mov
push
push
mov
add
add
jnp
pandn
mov
invd
add
add
jmp
dec
add
add
inc
scas
mov
outsb
sarl
adc
repnz
addr16
mov
add
pushf
dec
mov
xchg
mov
inc
pop
xor
pop
mov
dec
push
dec
jg
xorb
out
inc
mov
mov
add
add
lret
or
cmp
aaa
icebp
scas
mov
jg
iret
subb
mov
push
cmp
jg
push
sbb
cmp
inc
mov
dec
insb
add
add
repz
adc
add
lods
ljmp
mov
sbb
cltd
out
pop
sbb
cmp
sub
add
add
lret
cmc
jae
pop
cld
push
xchg
das
and
fnstcw
sub
pusha
add
add
jmp
rcll
add
and
add
add
add
pop
mov
pusha
mov
shr
lods
cmp
aaa
popf
bound
mov
ret
das
adc
shll
hlt
jns
mov
cmpsl
mov
fucomip
jmp
add
add
das
icebp
dec
rcrl
nop
or
add
add
or
add
add
daa
and
add
add
add
add
out
fsubr
out
and
add
add
leave
mov
aam
mov
bound
outsl
inc
cmp
in
mov
mov
cmc
stc
outsb
aas
mov
shlb
orl
addr16
push
sti
or
push
movsb
push
cmpsb
sbb
or
rcll
xchg
dec
jbe
add
add
add
in
dec
cmp
std
push
fs
hlt
clc
xor
add
add
dec
mov
jle
cmp
push
add
add
add
pop
push
jnp
lea
cmpl
popf
mov
ror
sbb
enter
arpl
scas
pusha
add
add
int3
push
cmp
pop
mov
adcb
pop
pop
lcall
lret
push
dec
cmc
nop
pusha
mov
mov
sbb
push
shl
add
and
scas
and
fldt
xor
icebp
int
std
add
test
vunpcklps
add
add
stc
xor
add
add
add
add
jno
push
mov
lods
or
gs
mov
inc
mov
push
js
lea
lret
and
mov
adc
and
add
add
sbb
scas
dec
pop
divb
push
rcrb
adc
add
imul
jo
adc
add
aaa
nop
aas
loopne
mov
add
sbb
lock
cmp
out
mov
add
add
xor
mov
add
stos
xchg
adc
out
lock
out
xchg
dec
add
add
fcomps
sbb
adc
jno
and
jp
ror
and
mov
stos
int3
in
push
add
add
add
lods
push
movsb
outsb
movsl
jecxz
pop
mov
inc
mov
xchg
adc
popa
xor
xchg
xchg
outsb
insl
stos
adc
dec
push
fimull
push
shr
imul
cmpsl
push
lret
mov
push
insb
mov
push
push
outsl
bt
sub
adc
push
sbb
mov
lods
sub
out
jge
in
adc
stos
sub
and
mov
mov
aaa
mov
add
mov
mov
shl
cmc
repnz
jne
stc
add
add
add
loope
sarb
mov
inc
dec
mov
loope
mov
repnz
jge
cs
mov
cs
inc
add
add
mov
add
add
aaa
ljmp
mov
xchg
adc
fwait
cmpsl
mov
push
pusha
mov
add
add
sbb
inc
in
hlt
push
xor
ss
cwtl
xchg
testb
xchg
mov
mov
pop
adc
cmp
xlat
insb
add
add
push
aad
jo
xchg
nop
rcll
mov
push
xor
dec
push
cmp
lea
mov
mov
add
mov
add
aad
jnp
shll
clc
outsb
bnd
mov
test
adc
add
add
add
adc
push
pop
add
add
add
test
and
add
add
js
add
mov
jp
mov
jae
jecxz
jg
mov
inc
std
lods
imul
mov
adc
shrl
add
add
sahf
gs
test
jle
jb
xor
add
je
pop
adc
inc
aas
inc
push
in
xlat
scas
imul
or
add
add
mov
sahf
cmpsb
adc
xor
enter
dec
fld
ja
test
data16
addr16
jecxz
insb
mov
dec
and
add
add
imul
and
loope
loop
lods
punpckhwd
or
rcrl
lret
inc
ficomps
clc
lds
ret
dec
dec
jne
add
add
inc
mov
add
add
cmp
mov
mov
xchg
push
ja
add
nop
sbb
mov
add
jmp
fisubrs
xchg
pop
push
leave
int3
xlat
into
js
popa
mov
fadd
or
add
add
mov
dec
cmpsl
jne
sub
add
add
sarl
add
add
mov
push
inc
sub
add
jecxz
insl
cmp
mov
and
add
ja
inc
add
add
mov
or
xor
mov
cmp
insl
jmp
fstl
add
xorb
ret
xor
add
add
mov
imul
add
add
subl
jmp
ja
lds
out
lods
arpl
add
fcmovnu
cmp
cltd
inc
das
jnp
rol
aas
sbb
loopne
out
mov
insb
mov
das
push
sub
add
add
addr16
adcb
cmc
testb
ret
fstps
test
xchg
pop
cmp
mov
mov
les
mov
ret
in
pop
in
in
std
sbb
add
mov
into
test
jne
mov
fcmovnbe
clc
xor
xor
dec
xchg
mov
mov
pop
jnp
jmp
pop
push
in
push
rcll
adc
mov
lret
out
pop
and
mov
dec
cltd
mov
sub
pop
data16
inc
scas
js
into
out
rcrb
in
mov
add
add
sub
mov
inc
add
add
cs
xor
jecxz
cmpsb
mov
insl
pop
xchg
sub
xchg
stos
test
add
add
cmpsb
jmp
sub
add
add
dec
add
add
rcrb
test
sarb
insl
addl
xlat
movsb
jbe
ja
iret
lds
xchg
xor
push
test
lock
daa
das
sub
sbb
add
add
stc
pop
lea
push
lea
jge
mov
add
pop
sahf
mov
mov
add
mov
in
add
add
add
jo
mov
fldt
add
sub
dec
push
push
in
lock
loop
je
sub
into
stos
dec
cmp
add
scas
loope
imul
mov
add
jmp
xor
pop
cld
push
xor
loope
inc
lcall
add
ljmp
shll
adc
mov
test
clc
lods
push
xor
aaa
fnstenv
or
in
shll
pop
sub
add
add
stos
inc
scas
call
push
pop
cmpsl
scas
jmp
shll
sub
add
add
mov
ljmp
pop
ss
push
icebp
out
and
add
xlat
movsb
in
jns
sbb
scas
xor
xchg
push
mov
sbb
cmp
pop
jns
inc
mov
je
push
call
lret
scas
push
xchg
mov
dec
lods
sysexit
cli
xor
mov
pushf
mov
add
add
add
mov
sti
mov
movb
sbbb
aaa
mov
and
inc
rorl
add
add
popa
push
dec
idivl
sub
add
add
add
add
ljmp
add
add
mov
jnp
jge
push
push
mov
mov
cld
lret
cmc
fwait
scas
jge
shrl
add
add
mulb
xchg
add
add
pop
subb
xchg
add
cmp
jmp
lret
pushf
add
subb
push
add
sub
sub
add
add
cli
and
scas
push
jle
sti
sub
add
add
add
xor
xchg
or
rolb
sahf
inc
sub
fisubrs
add
int3
xchg
xchg
fldenv
hlt
add
aas
inc
shrl
add
add
das
jle
mov
pmaddwd
add
sbb
jns
adc
repz
inc
xor
divl
pop
and
push
fisubrl
pop
push
adc
add
add
xchg
xchg
loop
pop
xlat
iret
aas
mov
adc
popf
pop
pop
mov
dec
mov
mov
sarl
push
roll
sub
add
add
mov
mov
add
add
test
push
popf
leave
cmp
sbb
std
cs
jno
hlt
or
add
cltd
rclb
sub
aad
add
add
add
adc
hlt
lds
jmp
fstl
lds
in
fucomp
mov
push
enter
cltd
push
mov
add
add
push
cmpsl
in
pop
dec
pop
mov
add
ja
inc
mov
jmp
cmp
mov
pop
insb
mov
arpl
add
add
arpl
mov
sub
mov
inc
mov
dec
mov
iret
xchg
std
sar
test
mov
add
push
or
add
add
test
mov
add
xor
cwtl
inc
outsb
add
pushf
fidivl
add
add
mov
add
repz
test
xchg
mov
add
testl
idivl
lock
testl
add
stos
xlat
sbb
mov
xor
or
add
add
xchg
aad
add
add
add
add
pushf
sbb
xchg
add
add
outsl
popf
jnp
xchg
inc
pop
and
inc
in
rclb
jbe
mov
and
inc
lods
sbb
jo
loope
inc
inc
cmpsb
fstps
mov
icebp
imul
lret
and
add
add
push
cltd
xchg
cltd
jbe
stc
movl
mov
adc
cmpsl
jne
mov
rol
push
sub
mov
aad
iret
aas
fcoms
imul
add
add
add
add
popf
cltd
movsl
enter
mov
lret
mov
les
xlat
andl
sar
xchg
push
cld
cltd
mov
fidivl
mov
add
add
add
sub
add
repz
adc
lods
ficoml
mov
push
into
sub
add
add
add
add
add
jge
sbb
ljmp
icebp
jp
popa
pop
pop
pop
je
ret
pusha
add
add
rolb
add
lock
mov
es
in
call
xor
add
jne
mov
push
lea
es
shll
dec
mov
stos
add
add
or
cltd
mov
fstl
mov
ret
aad
sub
add
add
outsl
cmpsb
jne
adc
pop
dec
cmc
xchg
xor
movsl
mov
mov
add
xchg
cmc
test
sub
add
add
add
daa
push
insb
add
add
iret
faddl
add
in
bound
insl
mov
mov
dec
aaa
push
adc
bound
mov
mov
add
sbb
add
add
adc
stc
cltd
popl
add
js
repz
cmp
add
inc
leave
xor
add
jne
dec
xor
mov
bound
hlt
pop
js
mov
add
add
add
add
mov
adc
push
sub
ffreep
orl
add
adc
add
cmc
mov
lahf
sbb
ficomps
add
add
scas
in
cmc
sub
rclb
sub
sbb
jl
cmp
add
jle
mov
fcoml
test
add
push
test
out
lcall
add
add
movsb
and
mov
inc
mov
stos
into
xor
sub
and
rclb
fwait
inc
fxch
mov
xchg
cmp
or
hlt
fnop
jbe
xchg
out
cltd
dec
imul
shll
pop
xor
in
or
in
out
fidivs
or
add
loopne
push
in
icebp
mov
or
pop
push
test
add
add
add
inc
mov
movsb
in
sbb
sarl
ret
nop
test
rcrb
leave
inc
jbe
jns
jl
int
cmpsb
and
add
add
fdivrl
add
lock
lret
inc
stos
and
out
roll
dec
adc
mov
and
call
jmp
mov
mov
mov
mulps
sbb
roll
xor
cs
pop
sar
xor
js
pop
pop
insb
mov
pop
int
push
mov
loope
mov
add
add
add
out
arpl
jp
mov
add
adc
scas
sub
mov
lea
mov
mov
pop
js
fnstcw
add
add
xchg
out
sahf
push
repnz
push
test
sti
and
add
add
add
add
add
sub
add
lock
adc
outsl
pushl
lods
icebp
dec
roll
in
enter
add
dec
and
add
add
inc
outsb
test
addl
iret
dec
mov
mov
cmp
sahf
repz
or
pop
imul
shl
insb
mov
and
sbb
test
lods
mov
mov
mov
add
add
in
insb
mov
pop
in
cmp
fldenv
cmp
inc
add
add
shll
add
add
mov
scas
insl
out
fwait
and
sahf
add
add
add
push
add
add
add
xchg
inc
sbb
pop
add
add
add
or
in
xlat
mov
add
add
add
cmp
sbb
jo
lds
mov
add
push
pop
iret
enter
int
mov
add
add
add
or
add
add
add
add
xor
lods
add
add
add
xchg
decl
add
add
mov
fmulp
in
jmp
mov
add
xchg
mov
jle
or
es
roll
push
jns
inc
sbb
or
pop
fisubs
lret
loope
cmc
xor
xlat
fcomi
mov
in
std
xchg
sahf
mov
add
or
stos
lods
std
imul
lcall
xor
pop
ss
ret
fistps
ja
fstpt
cmp
pop
shll
xchg
sub
popf
in
std
fstps
dec
sbb
add
add
pop
sbbb
adc
push
push
js,pt
add
add
add
add
add
cmp
push
mov
xchg
cmpsl
push
xchg
enter
jo
pop
or
add
add
stc
test
hlt
cmp
sahf
sbb
adc
add
add
cmc
pop
das
mov
xor
adc
cmpsb
cmc
fwait
outsl
xchg
test
jo
out
sbb
int
andl
mov
or
add
add
add
add
ja
pop
cs
mov
add
add
sbb
into
pop
fstpl
push
jecxz
xchg
mov
push
out
mov
cwtl
mov
xchg
add
adc
sub
mov
inc
add
add
xchg
push
mov
hlt
push
jno
mov
xlat
fucomp
mov
pop
dec
add
add
mov
adc
cmc
out
mov
xchg
dec
add
add
adc
ss
jae
push
jne
inc
shll
push
sbb
fwait
mov
les
add
add
and
add
rcr
xchg
pop
push
imul
out
repz
ja
es
lahf
push
lds
int3
sbb
mov
inc
add
add
dec
xchg
xorl
jge
adc
sbb
adc
add
and
movsb
or
add
add
add
mov
cmp
aaa
negl
xor
or
pop
cmpl
cmpsb
add
sbb
std
das
rorb
lods
xchg
fsubr
mov
add
add
rcl
gs
dec
daa
int3
pop
jl
mov
enter
sub
add
add
or
out
adc
fcomip
fldcw
and
sub
shl
out
jno
shl
mov
xlat
mov
mov
fists
jmp
cwtl
push
jo
mov
add
add
scas
pop
repnz
daa
cmp
mov
push
sub
mov
sbb
jae
sub
lahf
sti
mov
sarl
jecxz
jne
mov
dec
arpl
mov
mov
sbb
dec
mov
sbbl
adc
sbb
add
add
lods
jae
sub
sti
jecxz
roll
sub
dec
jnp
enter
cli
dec
mov
sbb
xchg
add
mov
out
pusha
mov
icebp
push
push
clc
ljmp
jo
mov
pop
push
pop
ja
mov
push
adc
xor
jns
mov
aaa
pop
movsb
icebp
aaa
xchg
adc
sub
add
add
add
add
pop
aaa
into
pop
lret
jb
out
fcoml
mov
inc
add
add
pop
adc
add
add
xor
sbb
and
jle
inc
test
shl
andb
repz
add
add
aam
cmp
push
mov
dec
dec
mov
dec
add
add
jecxz
call
push
std
add
add
add
ds
test
cmp
cltd
icebp
lods
xchg
add
je
push
mov
aad
call
fcoml
mov
add
add
icebp
sub
add
add
cmpsb
mov
stos
hlt
gs
push
popf
imul
scas
mov
ljmp
mov
add
add
or
sub
movsl
mov
xor
dec
mov
add
add
inc
pand
dec
pop
sbb
adc
cmp
xlat
idivl
int
push
pop
dec
inc
mov
lock
popl
adc
push
or
addl
out
mov
ficompl
mov
add
add
movsl
gs
jg
adc
push
adc
add
add
ffree
and
add
add
cmpl
add
add
add
imulb
push
inc
movlps
dec
push
aam
cwtl
dec
pop
push
or
add
add
add
add
cmp
sub
add
add
jp
and
subb
hlt
xor
add
lea
dec
mov
xor
mov
leave
stc
sub
add
add
inc
add
add
adc
mov
add
add
ret
test
adc
mov
sbb
mov
int
push
dec
mov
lahf
out
xlat
sbb
add
add
movsb
add
add
add
mov
aam
sub
pop
mov
adc
mov
insb
mov
rorb
push
stc
fadd
mov
cmc
xor
push
xchg
push
mov
mov
rorl
add
add
fdecstp
hlt
and
push
pop
fisubrl
add
add
add
mov
and
add
add
cmp
sbbb
add
add
add
lock
cmp
jg
mov
sbb
and
add
add
mov
cmp
add
add
push
sub
xchg
push
xchg
cmpb
dec
xchg
std
mov
aaa
daa
data16
mov
add
out
adc
add
adc
jmp
add
add
into
adcb
add
add
add
add
popf
in
loopne
das
loope
sarl
add
pushf
push
sub
add
lcall
lret
fadd
xchg
xchg
add
add
jb
sbb
bound
jg
cmp
fisttpl
or
pop
aaa
lahf
mov
cmp
mull
stos
or
repz
mov
add
shll
adc
jle
hlt
out
stos
scas
ret
inc
adc
add
dec
sub
cmpsb
xor
pop
cmp
cmp
jle
jmp
add
add
movsl
pop
lahf
lods
cmp
das
mov
mov
leave
pop
fdivp
mov
add
add
xor
sbb
mov
adc
mov
add
add
mov
add
insl
mov
mov
scas
or
add
add
lcall
jp
les
add
imul
add
push
xchg
or
inc
icebp
add
sub
jnp
cld
sub
cwtl
out
push
push
lret
icebp
cmp
xor
xor
imul
aad
jno
pop
mov
hlt
popl
sub
xor
push
in
ss
jo
adc
lahf
xchg
pop
push
fimull
pop
and
sahf
movsb
add
add
add
jae
mov
mov
in
icebp
sbb
pop
add
xor
sub
xorb
xlat
sub
shr
movsb
dec
daa
in
icebp
pop
pop
fimull
push
inc
andb
fucomip
rol
cmp
xchg
pop
clc
push
inc
mov
mov
cmp
sti
push
arpl
pop
clc
or
add
add
mov
das
mov
xchg
xchg
adc
add
or
add
add
popa
lret
rclb
popf
adc
hlt
pop
js
inc
add
add
sub
sbb
add
add
add
fcomps
add
or
add
add
sbb
ljmp
add
and
aaa
sbb
fwait
lahf
inc
jl
jns
mov
add
add
and
add
add
mov
add
add
xchg
sbb
add
gs
out
sub
bound
jae
mov
mov
xor
add
add
lcall
out
push
mov
pop
test
cwtl
xchg
dec
sub
fistps
push
cs
add
add
sub
mov
loopne
mov
add
subl
and
add
add
rcl
roll
sbb
adc
add
pusha
add
add
mov
fwait
ds
shrb
cmc
xchg
ss
aas
mov
and
dec
add
addr16
pop
xchg
push
clc
sarb
mov
xchg
add
cmp
fmuls
sahf
mov
pop
mov
mov
push
les
inc
mov
sbb
dec
add
add
pop
sbb
inc
cli
aam
add
add
mov
sbb
add
add
jmp
add
add
push
out
sbb
dec
loopne
ss
jbe
xorps
xchg
clc
and
xchg
stc
aaa
testl
insl
cwtl
adc
or
xchg
cmp
pop
jg
movb
in
and
add
add
sub
pop
subl
nop
adc
add
add
out
push
jns
push
aad
push
push
into
lahf
push
mov
icebp
not
movl
pop
xor
aam
add
add
mov
stc
bound
push
mov
notl
pop
cmpsl
and
or
mov
and
jp
mov
jnp
aas
and
fisttps
xor
and
enter
add
mov
add
add
add
fiaddl
add
add
test
pushf
out
dec
mov
xor
dec
cwtl
mov
add
add
jmp
and
movsb
and
stc
sbb
pop
mov
add
add
add
xor
mov
mov
push
lods
pusha
add
add
jo
mov
sbb
sar
push
push
movsl
pop
mov
enter
add
adc
inc
add
add
inc
aad
and
add
repz
cmc
outsl
cltd
mov
dec
in
mov
rorl
lds
add
or
add
add
add
add
add
add
fisttpl
fimull
push
repnz
add
out
pop
das
sbb
mov
or
test
sub
mov
or
dec
pop
iret
sbb
add
add
scas
add
mov
mov
add
out
outsb
mov
pusha
mov
jno
sbb
out
mov
scas
xor
mov
or
sub
add
sub
in
mov
mov
fstps
mov
sbb
pop
sbb
outsb
sub
push
cmp
fcmovnbe
sahf
push
cmpsb
xor
jle
insl
cmp
arpl
xchg
xchg
pop
insl
xchg
and
add
add
jge
add
mov
movsb
jle
cmp
imul
addl
js
push
push
mov
shrl
and
add
add
xchg
cmp
ds
add
push
popa
int
sub
stos
xchg
aam
iret
es
adc
and
add
add
cmp
adc
mov
push
pop
test
int3
sbb
add
scas
insb
mov
inc
and
add
add
aad
pop
xchg
dec
ljmp
add
add
jle
fldt
add
shlb
loope
push
mov
ljmp
mov
or
add
add
cwtl
sub
cmp
loop
sahf
mov
dec
repnz
adc
cs
imulb
sbb
sbb
add
add
pop
sbb
or
push
mov
insl
fildll
jg
sub
int
xor
cli
mov
decb
pop
ss
xor
sbb
mov
or
mov
pop
aaa
fidivrs
jbe
loope
cmp
xor
and
add
and
add
add
add
push
call
mov
add
add
add
add
add
mov
jb
or
das
add
push
scas
and
and
or
jmp
mov
es
add
mov
xchg
mov
cld
leave
cs
add
add
cld
sbb
push
in
fs
mov
sub
lds
pop
icebp
les
inc
mov
fbstp
std
or
les
cmpl
push
lds
pop
and
lods
mov
add
and
aad
sbb
scas
cmp
cmp
push
add
mov
or
add
add
lods
push
outsb
jae
jg
mov
sti
stos
into
jne
jmp
out
adc
add
sub
mov
xchg
mov
pop
mov
add
add
fs
nop
mov
add
add
add
add
add
mov
data16
lods
or
xchg
adc
fimull
adc
aas
adc
cwtl
int
scas
dec
add
add
sub
out
add
add
pop
inc
repnz
lret
dec
loopne
pop
xchg
mov
dec
xorl
aam
sbb
cmp
shrl
stos
xor
add
popa
xchg
pop
push
pop
imul
and
add
fidivl
fstl
add
lahf
and
add
test
mov
addl
cld
jno
add
add
sub
lcall
jnp
mov
pop
out
dec
mov
cmp
imul
dec
or
add
add
jecxz
cmp
cmp
xor
push
movntq
stos
sti
inc
scas
lods
xchg
out
sbb
sbb
add
arpl
sub
mov
mov
and
add
add
add
add
add
cmp
out
adc
add
or
push
add
fsts
es
out
mov
cmpl
add
add
or
add
add
add
popf
sti
cmpsl
jg
cmc
jns
inc
add
add
mov
jp
mov
xchg
add
add
add
hlt
fwait
or
pop
dec
inc
mov
pop
lods
jle
cs
insl
jb
pop
clc
lcall
xor
jmp
add
dec
outsl
pop
repnz
leave
adc
in
test
mov
dec
stc
mov
inc
fidivl
xor
dec
mov
outsb
cltd
test
dec
out
cmp
add
add
pusha
add
add
or
mov
stc
ja
cmp
sub
xchg
jle
mov
call
mov
scas
jg
inc
jmp
in
aad
or
add
popf
test
or
mov
xor
add
lahf
adcl
add
inc
mov
rcll
add
mov
sbb
add
add
repz
add
add
imul
and
bound
and
add
add
push
faddl
jne
sbb
pop
outsb
ljmp
inc
arpl
in
and
jl
jmp
add
call
pusha
add
add
arpl
cmpsb
outsb
sub
lds
pop
jge
mov
mov
fwait
ds
into
fdivrs
xchg
cmc
notl
add
sbb
inc
mov
add
add
add
rorl
add
add
jbe
fisubrl
add
add
movsb
flds
int
adc
pop
stos
xor
repnz
adc
push
sbb
in
or
add
add
cli
and
pop
adc
add
add
add
add
cs
test
or
add
add
stc
cmp
add
add
xchg
shlb
mov
xchg
adcl
xor
insb
mov
aaa
pop
aaa
inc
mov
inc
pop
js,pt
out
mov
mov
push
mov
test
add
jg
icebp
push
add
add
adc
in
adc
add
add
sysenter
fbld
jb
andnps
cmpsl
ficoml
pop
cltd
xchg
push
cmpb
pop
in
xchg
out
scas
cmpsb
sti
or
add
add
mov
addr16
and
add
add
inc
icebp
push
ss
leave
mov
jle
test
das
divl
scas
sahf
fcmovnu
out
push
push
negl
movsb
pop
jmp
or
popa
imul
data16
imul
mov
lret
imul
mov
inc
loope
sbb
xchg
push
stos
lds
push
shl
or
add
add
or
or
add
add
or
leave
push
les
add
xchg
repz
cmp
inc
mov
add
fwait
in
cmp
xor
mov
push
arpl
add
add
add
jle
mov
add
cmp
mov
add
push
xchg
ja
nop
xchg
popf
lret
dec
xchg
mov
and
add
add
push
into
stos
xor
mov
add
divl
loope
pop
inc
pop
and
add
add
shrl
jno
push
mov
jle
ret
add
add
cltd
sbb
add
jbe
rcrb
push
cmp
jnp
xor
jp
add
add
ret
add
add
xchg
dec
ficompl
dec
frstor
add
push
jno
xor
in
mov
add
and
sbb
xchg
stc
sub
mov
mov
cltd
add
sub
push
cmp
push
out
add
and
pop
jle
ds
movsb
lock
iret
dec
add
add
xchg
dec
mov
dec
mov
das
andl
push
orb
add
dec
mov
and
add
add
add
in
mov
mov
add
jns
dec
inc
shlb
insl
xor
cmc
sbb
add
add
test
sar
mov
sub
shr
mov
sbbl
add
add
fbld
push
mov
int
ja
dec
loope
mov
dec
add
add
ljmp
pop
adc
cmc
sbb
insl
mov
jns
loope
push
loope
lods
adc
mov
into
sub
mov
add
add
stc
call
cmp
mov
xor
imul
decl
or
add
add
loope
and
mov
imul
add
dec
das
jle
pop
sbb
mov
ret
push
loope
sbb
push
imul
mov
int3
xor
add
add
xchg
add
add
stc
outsb
push
mul
je
inc
outsl
pop
lret
and
fcoml
roll
es
movsb
pop
push
inc
or
sbb
and
insl
sub
jae
inc
jg
or
add
add
sbb
xchg
jnp
mov
pop
stos
cs
insl
jp
sub
je
add
insb
mov
xor
incb
inc
in
xchg
jg
mov
in
add
add
mov
repnz
pop
je
test
imul
add
je
arpl
add
sbb
lret
add
andl
insb
add
add
std
arpl
stos
addl
add
add
pop
addr16
xchg
sbb
add
add
mov
out
mov
icebp
in
pop
popa
mov
add
fcmovu
lea
mull
add
cs
add
add
mov
xchg
lahf
lods
mov
test
popa
jl
jg
pop
fwait
or
xor
mov
lahf
int
inc
stos
push
or
mov
or
inc
ss
sbb
jl
mov
add
jbe
cwtl
mov
gs
xor
mov
add
add
add
add
xchg
ljmp
pop
jmp
fnsave
ffreep
dec
mov
add
clc
in
cmp
mov
jmp
add
add
push
push
ja
cltd
in
jnp
je
pop
ljmp
adc
mov
inc
add
add
sbb
movsl
sbb
sti
nop
push
pushf
jmp
sbb
mov
ds
cmp
pop
sbb
adc
std
lods
andl
add
mov
hlt
pop
test
or
jg
in
add
xchg
push
bound
lods
imul
add
inc
sub
add
add
jne
mov
jg
aad
cmp
cli
pop
push
add
incl
repz
addr16
mov
add
mov
pop
test
add
add
clc
fs
add
add
sbb
and
jecxz
cmp
mov
cmp
loope
sbb
add
fs
mov
cmp
sbb
mov
inc
add
add
add
out
xor
lock
add
jae,pn
add
add
add
xchg
push
pop
shr
inc
ja
xchg
jmp
add
xchg
ja
mov
and
and
add
add
add
add
cmp
add
xchg
add
mov
mov
add
sbb
and
pop
sbbl
xor
jns
xor
pop
or
sub
add
add
test
jne
sub
add
add
into
mov
xor
xchg
pop
int3
sbb
iret
cmp
frstor
ss
mov
subb
xchg
or
lods
cmp
mov
inc
jb
cmp
gs
jns
icebp
sub
mov
dec
mov
mov
mov
gs
sbb
testb
ret
pop
sarb
add
add
mov
ret
pop
jp
clc
ret
adc
xor
sti
aaa
mov
jge
fimull
add
add
or
arpl
loope
cmpsl
mov
add
les
into
dec
push
xchg
sub
mov
lret
mov
movsl
inc
jne
jmp
je
add
add
or
add
add
inc
cwtl
mov
das
add
add
imul
or
xlat
cmp
mov
stos
sbb
ljmp
add
jl
inc
mov
add
jae
or
add
add
sti
ljmp
notl
mov
pop
mov
inc
jmp
aaa
xchg
jge
xor
mov
stos
popf
shrb
mov
mov
fdivs
fsubrl
mov
repz
inc
hlt
mov
inc
pusha
add
add
or
add
add
out
inc
lcall
xor
frstor
add
add
pop
adc
push
arpl
lock
aad
enter
inc
mov
mov
xor
add
mov
pop
inc
jae
push
jl
cmp
add
jb
in
stc
or
sub
push
xchg
shlb
es
pop
cltd
fmull
xchg
jns
mov
sarl
adc
mov
gs
lock
push
sbb
add
add
hlt
scas
shlb
incl
add
ret
jl
xchg
pop
push
jmp
aaa
les
dec
sub
sbb
mov
push
pop
leave
pushf
shl
cmp
js
jo
push
adc
sub
jb
jnp
lods
push
mov
loopne
dec
mov
jbe
cmpsl
aaa
ss
or
mov
dec
mov
lock
les
jb
mov
mov
sarb
pop
fucom
push
test
or
add
add
cmp
addl
outsl
adc
jecxz
popf
daa
jne
add
add
pop
call
cmp
mov
add
test
orl
int3
or
add
add
jmp
pop
add
add
jo
mov
cld
loopne
pusha
add
add
mov
out
mov
add
adc
rcll
inc
add
add
fsubrs
mov
popf
outsb
imulb
mov
arpl
test
add
outsb
xchg
popa
out
mov
cs
add
add
dec
push
and
and
mov
add
xchg
add
popf
mov
push
stos
cmp
push
mov
jmp
xor
adc
mov
pop
ljmp
add
add
add
add
add
add
adc
xchg
add
add
add
out
loop
add
mov
inc
pusha
mov
popa
lods
sbb
mov
add
mov
add
hlt
test
ret
pop
jo
lods
jge
out
rep
mov
test
rcr
fidivs
jle
fsubrl
movsl
mov
hlt
das
mov
sub
test
inc
mov
add
add
xchg
iret
je
mov
ds
mov
mov
jp
add
add
pushf
incb
mov
loopne
xchg
daa
push
or
add
add
pop
out
cmovge
xor
stc
inc
or
mov
xor
pop
pop
xchg
out
lcall
mov
jnp
ljmp
call
add
or
pop
dec
cld
or
add
add
jp
and
roll
mov
add
add
add
xor
add
add
add
je
repz
dec
jecxz
js
pop
add
lods
jo
popf
or
movsb
ds
inc
add
add
rcr
stc
test
mov
lods
adc
and
sti
test
add
add
jg
and
add
add
nop
popw
push
inc
out
sbb
js
sbb
leave
add
add
scas
lds
push
ror
inc
sbb
popf
sub
push
pop
imulb
xchg
jmp
stos
repnz
xor
cmp
add
mov
add
test
aas
je
pop
aas
pop
shrl
xchg
xchg
dec
mov
sbb
imul
jb
int3
ret
xchg
jmp
clc
inc
daa
in
push
mov
into
ja
out
push
fcomps
jns
fxch
dec
push
mov
mov
mov
fisttpl
add
add
call
jae
loopne
xchg
sahf
cmpsl
add
add
add
pushf
push
sahf
rclb
shrb
or
jg
cmp
inc
shll
out
push
push
je
fmuls
mov
sbb
jle
ret
adc
pop
loope
rcll
outsb
xchg
push
mov
int
addl
insl
inc
xchg
dec
mov
add
add
add
cltd
jp
cs
fldcw
cmpsl
es
push
jge
roll
add
iret
mov
xor
fists
sub
add
add
add
bound
xor
shl
mov
add
add
add
cltd
dec
fistl
xchg
pop
sub
add
add
out
repz
stos
test
pop
repz
add
add
add
add
mov
dec
in
jb
lahf
or
fnstcw
xor
cmp
xorb
shld
add
add
push
sub
addr16
sub
mov
addr16
jno
push
nop
lret
xchg
test
inc
add
add
mov
pop
xor
adc
jle
div
std
inc
jb
pop
pop
jne
and
adc
and
add
add
pop
cmp
add
and
clc
sub
add
add
or
lds
mov
lcall
ljmp
mov
xor
testl
mov
adc
cld
dec
sbb
jle
rorb
add
push
or
dec
daa
add
add
movsb
dec
xor
add
subb
popf
in
lcall
dec
out
sbb
rorb
ljmp
inc
xchg
les
add
add
je
mov
cld
fisubrl
add
add
repz
dec
add
add
stos
std
or
rorb
add
add
sbb
cmp
dec
lods
and
mov
jg
ret
pop
std
loop
sub
push
mov
adc
test
jp
mov
add
add
mov
and
mov
cld
jle
rcrb
movb
jb
fs
fwait
add
add
add
mov
inc
pop
faddl
mov
mov
mov
lret
loop
push
cli
xchg
and
aam
adc
cmp
push
lods
nop
push
rcll
inc
hlt
add
sti
xor
in
mov
cld
call
sub
stc
adc
push
enter
dec
mov
call
popa
push
cld
sbb
jle
or
jp
adc
or
mov
aam
cmp
jbe
dec
mov
cli
mull
push
fwait
jno
push
sub
add
or
sti
pop
lret
pop
dec
mov
lods
jge
out
mov
add
es
xchg
push
fs
in
sbb
ss
mov
add
add
add
jne
in
add
add
clc
add
fists
into
jmp
out
pusha
mov
add
pop
mov
sbb
add
add
popa
ds
sub
xor
xor
pop
ljmp
add
inc
mov
lods
or
test
stos
xchg
in
outsb
pop
inc
add
add
scas
cs
adc
add
mov
fisttps
mov
dec
jae
popf
mov
imul
add
add
fwait
in
orb
add
add
xchg
dec
mov
lret
xchg
dec
add
add
push
mov
mov
adc
call
jge
push
or
add
pop
mov
pop
mov
push
mov
inc
jp
fwait
jno
aam
fwait
int
or
add
add
inc
bound
add
mov
add
add
repnz
sub
jge
rorl
add
add
mov
mov
imul
add
sub
dec
pop
out
subb
xchg
incb
inc
sub
jae
test
adcb
mov
les
pop
call
mov
mov
dec
mov
sub
add
add
pop
std
cmp
decb
push
cld
mov
pusha
add
add
jmp
cmc
jbe
pop
jb
ljmp
les
cmp
lahf
jno
cld
jbe
add
add
jmp
inc
inc
in
jo
cwtl
mov
aam
mov
das
or
add
add
adc
mov
enter
pop
int3
dec
xor
and
lods
pop
or
jne
jg
xor
lods
daa
jne
rcl
mov
add
add
sbb
add
add
add
add
add
lret
nop
pushf
dec
negb
aaa
xor
out
imul
insb
mov
lcall
mov
inc
js
popa
call
aas
push
fiadds
test
sbb
add
insb
add
add
cwtl
insl
daa
xchg
scas
outsb
arpl
in
rclb
sbb
jmp
enter
xchg
int3
insb
mov
movsl
jg
sub
mov
jp
pop
jmp
cmp
add
add
or
or
add
add
add
push
push
lock
add
add
cmp
insb
add
add
std
in
adc
insl
pop
ret
std
lret
sbb
fs
insb
mov
mov
add
xchg
sti
push
add
push
int3
push
or
add
cmp
lret
add
out
mov
add
imul
insb
mov
xchg
xchg
cld
push
cmc
icebp
or
xchg
pop
xor
dec
xor
push
mov
rolb
popl
arpl
or
frstor
adc
mov
out
fsts
mov
out
movsb
sbb
mov
add
xchg
dec
sub
add
push
bound
lret
mov
scas
inc
or
or
mov
or
into
mov
stos
jno
inc
dec
das
ret
arpl
add
add
add
bound
pop
aas
push
insb
add
add
shl
adc
mov
add
add
add
xchg
leave
sbb
sbb
add
adc
pop
xor
mov
inc
jmp
xchg
xchg
out
lahf
jge
add
add
jmp
cmp
pop
jae
jle
outsl
mov
roll
rolb
add
add
dec
cli
popf
adc
add
add
inc
bound
shll
lret
add
add
into
mov
mov
add
cli
hlt
fs
pusha
mov
add
pop
adc
add
add
repnz
sbb
addl
rcrl
clc
repz
cmpl
out
dec
add
movsb
dec
push
push
popa
iret
dec
loopne
shll
mov
mov
sub
or
add
add
mov
mov
mov
cli
popa
push
loopne
pop
jb
arpl
dec
and
andb
add
repz
add
add
add
add
les
adc
add
add
dec
mov
insl
rcll
repz
jl
shlb
add
std
mov
out
lret
or
add
add
mov
mov
xor
cmp
add
jle
cld
stos
pop
ja
mov
xchg
mov
out
jmp
sbb
ret
in
cmp
xor
inc
lcall
or
ret
fcmovnu
xor
mov
or
dec
sub
jmp
add
add
into
mov
sahf
mov
cltd
cs
add
out
stos
loop
jg
pop
sbb
and
xor
ret
push
xor
mov
mov
call
or
add
add
aam
fcomps
xchg
loop
xor
cmp
xchg
xchg
test
and
pop
push
dec
add
add
ret
dec
add
add
jp
mov
mov
dec
add
add
outsl
shll
add
add
notb
add
mov
mov
call
addb
add
jg
popl
xchg
sbb
sub
stos
outsb
js
add
add
call
into
xor
xchg
jl
jp
push
adc
call
mov
and
add
stos
mov
inc
sahf
add
add
add
syscall
xchg
add
add
cmp
jmp
add
and
jp
cltd
aad
sti
cmp
xor
ja
in
or
mov
mov
xchg
jbe
adc
insl
cs
sbb
out
popa
pop
imul
and
addr16
jmp
mov
jbe
outsl
mov
add
subb
add
and
sub
push
mov
add
add
fmuls
stos
popf
into
adc
sahf
xchg
aad
xor
sub
movntq
mov
add
jle
es
clc
mov
aam
insb
mov
sub
add
add
adc
add
add
scas
ja
cmp
es
dec
pop
js
add
add
decb
cli
jns
arpl
add
test
aam
xor
add
call
adc
leave
insb
add
add
sbb
xchg
lahf
jge
sub
mov
popf
cmp
add
add
mov
adc
daa
pop
mov
mov
jae
loop
xchg
mov
add
add
jae
in
mov
addl
lahf
xor
mov
bound
mov
pop
ret
pop
inc
add
and
sub
add
add
imul
or
out
cmp
inc
jbe
rorb
std
pop
mov
add
mov
mov
cmp
inc
int3
enter
dec
idivb
push
jg
test
ljmp
mov
rol
repz
sbb
and
add
add
cmp
add
push
adc
pop
push
outsl
cmp
iret
adc
outsb
mov
dec
push
dec
push
and
add
lret
ret
sbbb
cmc
mov
xchg
xchg
push
xor
pop
pushf
ret
hlt
push
ret
or
mov
inc
idivl
sbb
lods
push
fsubrs
shll
dec
xor
push
dec
sbb
outsl
mov
mov
out
std
or
scas
pop
outsl
xor
mov
add
add
out
jge
dec
add
add
lods
int3
call
pushf
xchg
inc
jo
or
jg
sub
sahf
push
jle
rdpmc
movsb
in
and
mov
dec
scas
mov
les
jge
test
push
scas
pop
rcll
push
movsl
push
add
xchg
out
mov
movsb
rcrl
scas
insb
add
add
push
rorb
xchg
mov
out
call
dec
outsl
mov
mov
mov
sbb
cmp
fstps
out
ret
mov
mov
movsb
push
or
loop
or
jmp
dec
mov
cli
dec
rorl
mov
or
add
add
add
ljmp
add
in
mul
repz
inc
aam
push
repnz
stos
mov
add
add
cld
lods
sbbb
cmp
fistpll
sub
aas
sub
add
add
or
in
push
and
push
sti
into
fidivs
mov
inc
pop
pop
mov
or
push
pop
into
insb
add
add
das
addr16
into
test
mov
movsl
fistpl
jbe
nop
jecxz
jb
loopne
jo
add
add
add
push
dec
mov
mov
pop
inc
mov
and
add
add
add
add
mov
mov
lds
fwait
push
scas
enter
lods
jle
mov
cmpsb
cmp
add
add
mov
mov
loop
adc
cmp
xchg
hlt
fimuls
and
jg
out
and
int
and
inc
push
scas
cmpsl
sub
sti
popa
sbb
inc
movsb
mov
subb
add
icebp
xchg
fdivrs
fdivl
cmp
and
xchg
cmc
xchg
cmpsl
aam
jecxz
out
add
add
sbb
test
loopne
cmpsl
adc
push
xchg
jge
andb
mov
mov
push
mov
xchg
dec
mov
mov
jecxz
arpl
dec
xchg
hlt
jl
bound
add
add
add
adc
rcrl
ja
into
sub
add
add
int
nop
in
sarb
cmpl
mov
test
aad
mov
loop
push
cmp
mov
out
mov
jge
add
add
add
leave
xchg
stos
fsts
pop
pop
sub
lods
or
mov
mov
fwait
mov
cmc
cmp
dec
nop
jle
lahf
xor
add
imul
mov
scas
push
mov
cli
pop
loope
in
cmp
stc
dec
add
add
sbb
mov
add
add
lock
add
add
xor
push
or
add
add
and
sbb
data16
pop
fistpll
aas
out
push
mov
shll
xlat
xchg
scas
call
push
stos
sbb
mov
push
loope
and
cmp
lret
sbb
add
ret
cmp
mov
scas
popf
aas
pop
inc
notb
int3
rcll
fisttps
mov
daa
push
mov
scas
jl
mov
repz
test
dec
xchg
jnp
int
loope
scas
or
add
add
shl
adc
add
lret
push
ljmp
add
add
add
jo
mov
adc
add
aaa
xor
shrl
add
jne
sbb
cmpsl
mov
jae
sub
add
add
sahf
mov
xchg
out
repz
fwait
cmp
add
add
out
add
add
fsubr
pop
mov
mov
add
add
pusha
mov
xlat
cmpsb
xchg
test
adc
sbb
xchg
iret
dec
dec
getsec
push
test
ss
or
xchg
bound
and
jmp
outsb
jge
pushf
mov
inc
mov
pop
push
sti
cmp
stc
fistl
test
lds
adc
add
loop
les
inc
push
adc
orl
xchg
popa
insl
movsl
jae
ret
pop
and
add
das
imul
in
imul
push
ljmp
fisubl
inc
mov
fimull
add
add
cmc
fmuls
lods
outsl
arpl
call
xchg
test
cmpsl
movsl
jecxz
push
mov
add
dec
das
pop
or
cmpsb
adc
add
add
add
lret
hlt
xor
pop
pop
push
in
sbb
dec
sahf
jae
push
jge
mov
out
mov
jecxz
pop
and
add
add
add
or
cs
mov
pop
pushf
mov
rcrb
in
mov
mov
xchg
je
ficomps
add
add
add
and
add
add
jb
mov
fisubrl
add
add
xchg
sbb
cmc
mov
push
xchg
fadds
jecxz
hlt
fsts
adc
jbe,pn
sbb
int3
lds
repnz
popa
rcrb
sub
dec
das
out
je
fistpll
add
add
lea
test
jno
dec
fsts
mov
push
xchg
popa
and
add
add
sbb
iret
sahf
call
add
cmp
scas
dec
sbb
add
add
sahf
mov
popf
testl
movsl
jp
das
loop
mov
add
fwait
push
cmp
add
xor
add
mov
cmp
in
es
push
andb
sti
stc
cmp
add
add
int
dec
lahf
adc
pop
xchg
rcll
inc
mov
xor
and
xchg
fiadds
add
add
cmp
jno
push
lahf
mov
mov
mov
sbb
push
push
out
push
mov
and
jle
out
shlb
pop
dec
popf
or
addr16
mov
into
mov
jo
ds
fidivs
repnz
inc
add
add
je,pn
in
stc
sahf
mov
lods
stc
cmc
fnsave
jmp
add
add
sbb
rcll
pop
push
fsubr
inc
cmp
add
add
push
iret
int3
mov
subl
mov
add
add
adc
imulb
fldt
add
add
xchg
aam
sbb
mov
pop
inc
shlb
loopne
stos
orb
shlb
mov
xchg
cmc
jecxz
mov
or
loop
movsl
lret
sbb
les
dec
ja
mov
rcrl
jge
inc
add
add
lods
xchg
cld
fwait
xor
add
add
add
enter
add
add
push
or
add
xchg
inc
inc
add
add
push
insl
mov
mov
dec
mov
icebp
lret
sbb
loop
or
adc
jo
test
movsl
stos
jo
cld
xchg
ficoml
int3
and
add
add
fcmovbe
jle
inc
arpl
cltd
inc
arpl
add
jle
mov
je
rcll
fmul
pop
test
cmp
int
fcomp
sbb
test
into
sub
lret
insb
add
add
and
fdiv
push
popf
mov
sbb
jb
push
add
jns
pop
cmp
call
pop
and
outsb
loopne
push
jmp
push
mov
add
add
cmp
call
shlb
or
movsb
lea
cwtl
pop
pop
dec
inc
inc
inc
add
add
push
adc
inc
adc
pop
cs
xchg
add
add
add
imul
and
add
add
add
sbb
dec
mov
xor
lods
sahf
dec
sbb
jae
or
rorb
xor
and
dec
add
add
repz
xchg
add
lock
icebp
and
or
add
add
divl
mov
inc
sub
add
add
in
cs
mov
push
inc
mov
ja
push
add
add
add
dec
sarl
xchg
popf
loop
push
in
lahf
inc
mov
jle
xchg
nop
push
popf
clc
mov
out
pop
int3
shrl
add
add
testb
mov
inc
or
mov
stos
xor
push
cmp
xchg
sub
jnp
push
cmc
push
shr
ficompl
xor
add
add
mov
xchg
or
add
add
pop
pop
adc
into
in
mov
add
test
add
add
enter
xchg
sbb
addr16
inc
imul
jae
mov
jmp
mov
push
pop
sahf
push
leave
cmp
mov
add
lahf
fiaddl
popl
movsb
cmpsb
pop
xchg
add
out
mov
loop
or
in
push
add
add
gs
test
out
adcl
add
add
loope
add
daa
jg
xlat
jg
mov
push
push
add
stc
mov
ss
inc
add
add
pusha
mov
and
or
test
aam
cmp
pop
popf
js
ficomps
test
jg
cmp
and
add
add
in
lret
fcmovnbe
out
outsb
pop
sbbb
les
cmp
ljmp
mov
inc
jno
jle
pop
pusha
mov
xor
add
add
sbb
sbb
cmc
mov
mov
repz
mov
add
in
cmc
xchg
push
xchg
push
orb
or
add
jle
dec
mov
mov
and
or
sbb
add
add
add
je
loopne
xchg
movsl
insl
mov
dec
mov
add
add
fidivrs
cmc
jge
out
xor
movsl
mov
cli
push
adc
popa
push
push
fisubrl
pop
mov
lods
add
add
sub
sbb
leave
mov
add
add
pop
les
mov
xchg
mov
scas
cwtl
mov
pop
cmpsl
icebp
not
or
mov
mov
repnz
push
inc
dec
push
aad
adc
cmp
fsub
add
loope
mov
pop
jmp
lods
or
mov
aaa
or
shll
xchg
xchg
and
sahf
push
push
sbb
add
add
out
xlat
lea
push
sbb
wrmsr
cmp
test
add
add
mov
adc
xor
test
pop
imul
push
xor
xor
icebp
xchg
push
test
test
mov
mov
and
ss
ja
and
xchg
fcomp
or
sub
add
add
add
dec
add
add
pop
std
fmulp
xchg
jb
notb
add
add
inc
add
add
shrb
testb
adc
add
add
mov
out
push
xor
fidivs
mov
mov
mov
push
jno
clc
sbb
cmpsl
pusha
mov
fildll
add
add
mov
lret
lcall
adc
in
je
into
sub
jns
data16
or
or
stos
xor
adc
stos
sbb
test
jmp
push
outsb
fcompl
aas
push
hlt
cmp
pop
inc
xchg
adc
cmp
insl
mov
shlb
inc
mov
mov
jl
push
add
add
add
push
iret
scas
xor
outsb
fists
rclb
add
and
mov
movsl
adc
push
mul
leave
sahf
daa
ja
pop
adc
fbld
fstpl
xchg
push
adc
out
mov
push
cmp
lock
push
enter
pop
std
in
fs
xchg
and
popf
into
pop
int
call
cld
jne
mov
mov
xlat
das
jmp
mov
jbe
mov
mov
add
add
add
movsl
daa
into
into
mov
mov
aam
push
lea
mov
gs
rolb
test
inc
mov
dec
xchg
xlat
sbb
dec
mov
aaa
mov
and
jo
or
add
add
popf
faddl
stos
pusha
add
add
adc
cld
pop
inc
add
add
add
test
cs
jnp
outsl
stos
jns
push
addr16
fwait
push
add
add
jmp
inc
ret
lret
jl
dec
data16
and
mov
mov
add
add
in
scas
cmp
xor
push
jae
aam
add
add
testl
jge
test
add
add
xchg
or
add
add
scas
lret
mov
loopne
cmpsl
call
in
outsb
pop
adc
and
add
add
int3
shl
xchg
xor
addb
add
bound
scas
dec
scas
mov
ror
push
subl
add
sub
cmc
jno
mov
add
fsub
push
add
adc
int
inc
mov
ds
xor
repz
xchg
xchg
dec
and
add
add
test
aaa
push
push
repnz
xor
push
out
pop
cwtl
sbb
aam
aad
cwtl
sti
rcl
and
mov
sub
mov
int
xchg
xor
and
add
add
push
mov
push
lret
lcall
dec
dec
shl
dec
pop
or
add
add
imul
mov
mov
nop
xchg
call
shrl
add
jbe
mov
adc
add
add
mov
add
add
jno
adc
dec
fimuls
rol
jecxz
pop
stos
mov
add
in
lea
xlat
je
sub
js
stos
call
push
lds
fsubs
jne
test
jge
popf
mov
cld
pop
fxch
dec
add
add
jo
adc
jp
cmp
fisubs
add
add
mov
mov
add
add
fdivrl
mov
and
dec
add
add
jb
outsb
orl
or
dec
dec
in
mov
fistl
or
or
add
add
mov
shrb
insl
decb
clc
mov
mov
ret
mov
ja
push
inc
stos
addb
mov
fbld
adc
mov
mov
outsb
jb
xor
pop
inc
and
pusha
add
add
xor
sbb
cmp
rclb
jae
out
pop
push
mov
cmp
cld
hlt
into
clc
lock
jg
scas
popa
jne
imul
lret
cmp
inc
jmp
mov
rcrl
ret
sub
add
dec
inc
mov
icebp
sbb
lret
mov
add
inc
pop
fwait
mov
cmp
xchg
pushf
mov
arpl
fisttps
jecxz
lcall
add
cltd
loopne
cmp
jb
addb
add
add
dec
sahf
daa
lods
mov
xor
push
lods
fsubs
inc
add
add
sub
lahf
cld
xchg
mov
aam
sbb
insb
mov
jp
push
loope
add
sub
test
stc
mov
in
pop
mov
les
jo
xor
or
mov
adc
mov
dec
fs
je
inc
add
add
adc
int3
arpl
call
adc
push
mov
mov
xchg
vaddsd
bound
outsb
mov
hlt
aas
push
sub
mov
add
xchg
sbb
push
sbb
shrl
scas
orb
gs
lds
add
add
popf
jle
lods
xor
xchg
push
mov
int
fidivrs
rep
mov
mov
icebp
repz
addb
lcall
jbe
cmc
push
sub
sbb
add
in
xor
xchg
or
add
mov
inc
jecxz
mov
pusha
add
add
sub
add
add
add
add
js
push
pop
or
jl
pop
dec
xchg
adc
add
add
cltd
mov
movsl
push
outsb
pop
inc
sbb
mov
add
add
add
adc
push
outsl
or
add
add
mov
cmp
movsb
lock
push
mov
mov
mov
cwtl
pop
adc
add
add
add
add
faddl
and
adc
add
add
mov
cmpsb
cwtl
jle
add
add
push
pop
or
inc
add
add
mov
jge
pop
dec
mov
add
add
dec
jb
dec
pop
fnstcw
arpl
shlb
cmpsb
mov
test
mov
adc
add
add
add
pop
fsubl
clc
out
mov
setb
xor
inc
mov
iret
push
lea
add
add
popf
in
mov
xchg
rcrb
push
or
add
xchg
jb
std
sub
push
xor
aam
pop
mov
add
add
add
mov
mov
push
cs
sahf
jb
icebp
inc
not
and
xor
fwait
jp
mov
dec
mov
fstpl
add
add
add
add
cld
jg
mov
dec
fstps
das
test
pop
push
sbb
jmp
add
add
add
add
sub
mov
outsl
pop
jmp
cmp
xor
in
sarl
gs
mov
jl
add
add
or
add
add
dec
jmp
jle
mov
mov
add
add
add
fbld
mov
int
repnz
push
or
add
add
test
es
inc
mov
cmp
lcall
out
js
push
jg
inc
add
add
lea
add
gs
ljmp
add
std
dec
add
add
repz
cmp
in
jl
outsl
push
pop
xchg
bound
mov
pop
xchg
xor
in
fwait
sarl
push
repz
sbbb
add
add
add
jb
sbb
xor
nop
mov
pop
pop
fstp
les
push
movsl
jp
outsb
imul
jge
test
test
xor
sbb
xchg
xor
adc
add
add
adc
add
add
test
dec
add
add
add
jge
aaa
pop
sbbb
repz
push
das
ret
ss
mov
dec
add
add
fsubrp
ret
sbb
inc
arpl
adc
mov
ror
sub
sbb
add
inc
add
add
push
xchg
out
jne
sarl
add
add
cwtl
jae
ret
mov
sub
int3
pop
jle
cmp
xchg
pop
cltd
loop
sbb
mov
mov
rcr
fdiv
jns
lret
gs
mov
cmp
daa
mov
add
add
jmp
mov
dec
push
push
loop
mov
cmpb
add
jo
jg
movsb
add
dec
into
fsubr
int
xchg
shlb
fimuls
sub
jns
jns
es
mov
and
xlat
stos
or
xchg
dec
adc
add
add
mov
cmpsb
daa
or
lods
sbb
jae
inc
jb
push
mov
rolb
daa
jae
add
add
add
add
add
add
std
cmp
add
add
and
add
pop
mov
jbe
ds
inc
fimuls
push
push
mov
lods
and
fldcw
sub
add
and
xchg
add
std
rclb
add
add
or
cwtl
xchg
jg
cmpsb
pop
jmp
inc
adc
add
sbb
push
xlat
inc
popf
repnz
and
cmp
mov
add
add
fwait
dec
sahf
out
call
push
pop
outsl
int3
scas
adc
test
aam
aam
xchg
pop
arpl
iret
mov
pop
nop
cs
shr
aam
cmp
inc
add
add
ret
lret
gs
movsb
xor
mov
jecxz
addl
cld
inc
lock
hlt
dec
shrb
movsb
sar
fidivl
push
jmp
pushf
outsb
add
cmp
add
clc
aas
repnz
cmc
or
pop
out
stc
or
add
add
jge
mov
push
and
add
add
sub
add
add
stos
imul
pushf
inc
aaa
xchg
mov
filds
add
dec
mov
mov
jmp
and
push
jge
nop
lret
std
ja
dec
xlat
xchg
aad
mov
add
or
mov
mov
mov
mov
mov
popa
xchg
hlt
xchg
jo
mov
cmp
add
in
in
and
pusha
add
add
and
add
add
mov
pop
xchg
add
cmp
pushf
add
xchg
xor
cmp
and
and
mov
and
insb
mov
ljmp
mov
cwtl
push
cmp
add
add
jbe
add
add
push
loope
ljmp
movsl
inc
add
add
adc
jne
leave
mov
imul
add
mov
mov
mov
dec
mov
cwtl
add
add
add
mov
mov
add
add
and
jg
xchg
int3
jae
testb
pop
or
into
jmp
add
mov
add
add
xor
add
add
into
mov
lret
lret
xor
mov
loop
inc
mov
out
dec
and
arpl
xchg
ret
cmp
movb
xor
and
add
add
std
dec
fnsave
add
add
add
jb
clc
inc
mov
ds
dec
stos
jbe
test
cmp
adc
and
mov
call
mov
mov
repnz
popf
test
add
enter
mov
fwait
add
ds
notl
add
add
push
into
mov
in
pop
dec
sub
or
add
add
cmp
sub
ret
mov
and
mov
cmp
pop
mull
mov
inc
add
add
xchg
es
jge
cmp
pop
add
add
adc
jg
mov
repnz
add
add
int
and
mov
add
add
test
scas
data16
out
mov
out
shll
fldcw
add
movsl
stos
test
mov
popf
fsubrl
add
add
and
call
mov
jl
or
add
add
fldt
sbb
sub
add
add
ffree
pop
xor
add
cmp
pop
sti
out
mov
mov
fidivrs
loopne
push
outsl
aad
cmp
jecxz
push
mov
loop
cli
movsl
repz
add
add
add
push
push
dec
pop
mov
inc
add
add
add
lods
outsl
cmp
jmp
mov
and
jge
test
mov
mov
stos
aaa
loopne
jne,pt
add
lret
mov
mov
int3
mov
testl
pop
mov
rcrl
and
add
add
mov
add
add
dec
inc
add
add
repz
out
mov
pop
sbb
mov
in
xchg
mov
mov
ss
pushf
int3
cmc
xchg
aaa
pop
sub
test
jl
pop
inc
mov
mov
add
add
add
lahf
iret
addr16
jns
cltd
out
lods
aaa
pop
or
add
add
scas
testl
testb
in
cmp
sub
add
add
mov
jb
lds
and
jp
data16
mov
into
ret
jno
xor
cmp
add
int3
cmp
hlt
into
pop
inc
xlat
call
cmpsl
test
sbb
shlb
cmp
inc
movsl
ljmp
sub
add
add
out
stc
pop
jmp
aas
mov
add
fmul
xchg
jne
add
loop
dec
xchg
outsb
sbb
out
lods
sbb
jbe
faddp
sub
push
jg
filds
add
add
mov
add
add
and
add
add
add
add
add
add
add
jge
cmp
iret
shlb
imul
or
add
add
inc
adc
das
and
cld
mov
ret
xchg
add
mov
es
mov
add
add
xor
lret
je
add
sub
ja
mov
cmpsb
aaa
movsl
jecxz
xlat
sbb
xor
xor
or
add
add
aaa
sub
add
mov
push
repz
sarl
sbb
into
cld
cmp
fdivrl
js
push
test
sbb
shlb
mov
add
iret
pop
stos
and
fstpt
add
add
add
sub
pushf
mov
xor
mov
loope
mov
jmp
lret
std
jnp
jge
lret
and
add
add
dec
mov
jae
cli
sbb
xchg
imul
sub
fsubs
push
cltd
mov
inc
fsubrs
cmp
fstpt
dec
add
add
add
jle
pop
sbb
jo
lahf
movsl
jnp
push
pop
mov
add
mov
aas
mov
cld
adc
shlb
nop
add
or
add
lahf
push
mov
mov
bnd
add
add
sbb
sub
fidivrs
xlat
jg
sbb
idivb
sub
xchg
inc
andps
add
add
leave
xchg
in
mov
sbb
jge
add
add
add
add
add
inc
pop
xchg
mov
mov
pop
push
outsb
xchg
adc
add
add
jnp
mov
inc
mov
pop
xchg
and
fcmovnbe
es
loopne
add
push
mov
add
dec
mov
sbb
stc
enter
pop
xor
add
add
mov
adc
into
or
jp
fisttps
mov
in
sarb
inc
lods
inc
mov
xor
iret
sub
xchg
in
cmp
sbb
mov
add
add
jb
pop
int
ret
add
add
add
mov
shlb
rorl
jge
daa
lods
pop
outsb
ja
movsb
jbe
ret
icebp
mov
jbe
add
add
mov
cmp
out
rcl
rorl
mov
dec
dec
mov
aaa
jbe
adc
and
pusha
mov
imul
push
pop
push
int3
add
add
cmp
cmp
add
flds
std
pop
and
bound
iret
test
cltd
mov
sub
add
add
dec
dec
add
add
mov
add
pop
fsubl
add
mov
test
lcall
jmp
rcrb
lcall
add
fwait
mov
pop
test
les
ss
or
out
push
in
rclb
add
add
xchg
mov
xchg
mov
push
das
cld
aas
hlt
adc
fsub
xchg
pop
and
add
add
xchg
nop
and
shrb
add
add
add
ret
aaa
add
add
add
bound
add
add
push
lds
je
jno
and
fbstp
stc
insb
add
add
push
cmpsb
jno
xor
jnp
push
jge
inc
imul
pop
jne
aas
and
std
xor
rolb
add
xchg
adc
adc
jb
adc
xchg
std
xor
xor
push
imul
xor
jno
xor
mov
jns
fcoms
add
add
mov
and
out
sbb
sbb
sbb
or
xchg
jge
mov
fisttpll
testb
add
xor
or
lea
sbb
idivl
cmp
cmpsl
out
fisttpll
jbe
xchg
cmp
sti
test
fisttpl
jecxz
mov
lcall
xlat
sub
mov
cmp
add
add
add
ja
test
add
add
sarb
out
icebp
and
add
add
add
adc
fisttpl
or
add
add
push
adc
cmp
inc
cmp
shr
iret
fidivrs
add
add
jmp
mov
lahf
jmp
loopne
cmp
push
cmp
ret
push
pop
sbb
lret
mov
outsl
lods
leave
enter
xlat
mov
add
dec
fldenv
cmp
xor
add
add
cmp
cli
mov
inc
mov
lret
popf
mov
stc
das
sub
add
add
filds
add
add
bound
pop
insb
mov
or
sub
sub
xor
test
inc
xchg
mov
mov
add
mov
adc
or
rolb
subb
sar
leave
jmp
fistps
stc
lods
pop
hlt
cmc
test
add
add
or
add
add
mov
push
mov
sbb
sub
loop
cmc
jecxz
incl
cs
test
xchg
movsb
jnp
icebp
jno
mov
xchg
and
add
add
shrl
xlat
repnz
add
add
in
mov
adc
and
mov
ljmp
popf
loopne
les
xchg
xchg
mov
xor
iret
addr16
test
sti
movsl
add
cmp
call
in
add
add
lret
inc
jno
leave
loopne
jns
fcoms
pop
mov
mov
pop
int3
scas
imul
popa
into
fdivl
cmpsl
ficoml
ja
cmp
or
lahf
adc
and
subb
popl
pop
xchg
cmp
xchg
stc
sub
xchg
sbb
and
add
add
push
push
cltd
adc
popf
arpl
je
sub
pushf
pusha
add
add
push
pop
or
add
add
lcall
fsts
aad
add
add
pushf
jne
imul
dec
xor
mov
or
mov
mov
add
into
cwtl
add
jmp
sub
mov
xchg
icebp
sub
jl
and
ljmp
stc
cmc
dec
clc
xor
add
arpl
xchg
pcmpgtd
or
add
add
jae
mov
inc
in
ds
inc
mov
add
push
fldl
add
add
or
add
add
mov
adc
and
xor
scas
sbb
daa
in
or
lret
idivb
cli
cld
inc
or
add
add
jnp
and
jo
movsb
sbb
add
lcall
rorb
dec
sbb
add
push
clc
fwait
mov
xorb
and
cmp
dec
fs
scas
pop
mov
out
lock
add
add
aaa
stos
fcmovnbe
xlat
int
stos
or
mov
add
xchg
imul
add
add
sub
add
add
inc
and
pop
sarl
sub
add
add
outsl
inc
add
add
ficoml
rclb
add
out
pop
lret
inc
add
add
clc
or
add
add
mov
jp
fiaddl
sub
movsb
test
addr16
adc
in
xor
push
pusha
add
add
xchg
dec
fidivrl
repz
xchg
mov
and
add
repz
fistps
xor
add
add
xchg
pmaxub
adc
xchg
nop
rorb
pop
leave
cld
adc
pop
mov
in
adc
cmpsb
es
lret
lods
xor
sbbb
jno
ja
pop
popl
jl
fildll
add
add
scas
mov
loopne
add
into
lret
outsl
int3
xchg
jge,pn
stc
adc
add
outsl
sub
add
sub
in
mov
test
sarb
pop
pop
stc
pop
xchg
xor
inc
rcrb
pop
out
fidivs
stos
add
cmp
inc
cmpb
xor
test
adc
daa
jno
jbe
rcr
js
mov
mov
inc
int3
add
je
add
jns
shll
xor
aas
or
aad
shrl
clc
daa
inc
mov
pop
mov
add
add
int3
inc
icebp
shr
inc
sbb
arpl
hlt
dec
mov
fmul
mov
mov
adc
dec
jmp
pop
imul
add
add
add
mov
add
sahf
mov
and
add
add
lock
gs
adc
add
add
int
xor
jge
dec
sub
add
add
xchg
push
lods
lahf
in
dec
cld
lds
and
xor
call
std
dec
fstpl
mov
fldenv
add
add
add
sub
sbb
daa
xchg
js
sbb
and
call
shll
xlat
xor
inc
insl
mov
sbb
lods
sbb
mov
rol
lock
add
add
mov
add
xchg
sub
aas
or
add
add
push
and
pop
cmp
pop
daa
dec
lret
and
fstl
hlt
push
sub
add
add
add
cmpsl
inc
test
fmull
mov
das
pop
fdivl
cltd
test
adc
or
ja
stos
movsl
sub
or
adc
daa
insb
add
add
dec
cmc
aas
popf
fs
test
rolb
adc
mov
les
imul
cltd
or
add
add
xchg
xchg
ljmp
adc
or
fisttps
add
pop
je
sbb
xchg
xor
push
aas
scas
xchg
adc
mov
jle
out
lods
enter
cmpsl
sbb
sahf
fldt
sbb
add
add
popa
lods
and
sbbb
inc
pop
push
mov
add
add
pop
dec
sub
shrl
mov
add
imul
cli
js
dec
add
add
xor
add
add
mov
jo
std
add
add
add
imul
fmuls
cmpsl
inc
jae
scas
je
cmpb
mov
out
mov
rol
xor
mov
jb
cmp
pop
test
arpl
adc
pop
pop
mov
mov
cwtl
xchg
sbb
ret
add
add
jns
or
add
add
outsl
mov
mov
adc
mov
mov
mov
xchg
in
add
add
test
inc
mov
mov
out
ret
cmpsb
outsl
pop
sub
adc
jg
cmp
adc
je
xacquire
mov
fadds
mov
push
mov
jp
lcall
ret
mov
ljmp
add
xchg
icebp
jge
xchg
call
dec
add
add
lds
mov
lock
pop
cltd
imul
cld
mov
or
testb
push
sahf
sbb
add
add
push
movb
add
enter
imulb
sbb
repz
push
pop
cmp
jmp
add
sbb
arpl
repz
outsl
rorl
push
dec
xchg
js
sub
add
add
loop
aad
jo
inc
mov
mov
sbb
sub
add
add
jmp
and
cmc
xchg
inc
lods
out
rsqrtps
cmpsl
sbb
xchg
and
add
add
sbb
adc
bound
mov
mov
or
add
add
add
add
add
lcall
aam
dec
or
out
loope
push
stos
out
ja
incl
mov
adc
jnp
repz
imul
or
clc
fnstenv
jne
add
add
cltd
xor
pop
cmp
add
pop
mov
js
xlat
lods
mov
and
cmp
add
add
adcb
mov
push
out
ret
cmp
add
add
mov
mov
adc
fidivs
fisubrs
add
add
pop
push
add
pop
xchg
pop
mov
mov
mov
jns
pop
addl
add
add
adc
xchg
mov
inc
adc
xlat
jne
sub
sbb
and
test
and
add
aad
iret
lods
and
add
add
add
cmc
and
testl
push
fildll
popf
outsb
into
pop
sti
and
cmp
scas
ret
fisttpll
aas
jecxz
mulb
xor
mov
xlat
dec
mov
jnp
mov
mov
add
add
repnz
push
push
movsb
lock
xor
lahf
gs
push
xchg
fistl
inc
mov
dec
dec
add
lods
fadds
add
add
pop
loopne
add
fnsave
fwait
adc
push
push
je
stos
sub
outsl
pop
shll
jno
push
inc
push
sub
cld
add
iret
orb
add
test
popf
jae
mov
cmpsb
mov
lea
adc
movsb
sub
xchg
pop
out
push
push
out
add
mov
and
push
mov
add
dec
add
add
icebp
test
jo
mov
nop
andb
int3
outsb
shlb
add
add
cld
cmp
mov
pop
adc
loopne
xor
sub
dec
mov
mov
inc
fnstcw
jne
in
cld
imul
sti
test
jg
mov
mov
dec
xchg
sbb
pop
ds
rolb
std
sbb
jnp
fidivrl
add
add
sbb
or
mov
popf
pop
mov
fildl
out
rcrb
imul
add
add
sub
lea
loopne
fwait
popf
sbb
movsb
sbb
mov
adc
mov
add
sarl
push
lea
sbb
xchg
and
add
add
and
js
scas
js
movsb
arpl
cmp
shl
pop
test
lret
mov
add
and
push
pop
jecxz
or
add
enter
mov
jae
lcall
popa
lods
scas
test
pop
adc
bound
sub
push
push
bound
ds
dec
add
add
sub
stos
dec
add
add
insb
mov
ret
stos
call
out
and
or
add
add
arpl
add
xchg
and
dec
add
add
or
add
add
add
je
adc
push
mov
arpl
jecxz
lock
jp
rol
lods
xor
push
xchg
xchg
mov
in
sub
add
add
fsubrs
jae
pop
push
in
inc
mov
in
sub
add
add
jle
mov
jp
jno
push
in
mov
int
inc
out
xchg
push
test
fwait
into
mov
insl
jecxz
ret
rorb
add
add
lds
push
xor
xchg
cmpsb
pop
cltd
adc
divl
testl
out
lods
xchg
mov
xchg
test
add
add
shrl
or
add
add
add
mov
lahf
in
fisubs
cmp
ja
add
add
ss
add
sbb
or
or
or
xchg
outsl
mov
inc
dec
add
add
out
mov
pop
push
mov
or
add
add
ds
aad
mov
add
popf
pop
mov
add
nop
int
call
xchg
mov
mov
adc
cltd
in
clc
testb
mov
mov
add
gs
data16
inc
aaa
lret
lock
mov
sbb
fst
lea
inc
mov
mov
lret
mov
mov
jbe
dec
jno
mov
mov
ljmp
cmp
es
push
and
out
andl
daa
mov
add
add
sbb
push
imul
mov
aas
mov
mov
xor
popf
mov
add
push
sbb
mov
scas
inc
xchg
pop
repnz
mov
loop
sahf
ja
adc
adc
imul
jo
ljmp
adc
in
jecxz
mov
mov
clc
xchg
and
jo
fisubrl
mov
sti
mov
mov
sbb
inc
sbb
add
adc
das
or
add
add
dec
mov
repz
jns
mov
ret
push
sub
add
add
les
sahf
fldenv
add
add
lcall
mov
add
add
mov
push
sbb
cmpsl
int3
mov
xlat
push
xchg
add
xchg
int
sbb
add
add
jae
pop
and
gs
mov
mov
xchg
in
jae
daa
adc
mov
pop
jl
shrl
pusha
add
add
pusha
mov
xor
xchg
outsl
mov
jmp
mov
jnp
imul
sub
add
add
jmp
into
fisubrl
cmc
pop
push
jecxz
jnp
int
add
add
sbb
lock
ss
dec
mov
repz
mov
mov
sarl
sarb
ljmp
add
mov
add
lds
leave
sbb
mov
out
or
into
pusha
mov
pop
mov
sub
add
add
xchg
sub
imul
add
lahf
scas
sub
xchg
adc
add
jae
hlt
adc
scas
andl
loope
xor
xchg
mov
icebp
mov
mov
push
out
pushw
add
rclb
push
lahf
fsubs
add
add
fwait
push
popa
cmp
mov
mov
xchg
movsb
cli
rorb
dec
mov
fistpll
push
pop
mov
mov
jecxz
mov
imul
and
add
add
xor
mov
shlb
add
add
xchg
push
mov
loope
lahf
push
cs
mov
sbb
mov
cmp
add
add
cmp
cmpb
add
jbe
adc
pop
pop
mov
pop
out
push
adc
loopne
lahf
cli
mov
fdivrl
xor
add
add
in
rcr
adc
divl
call
mov
aas
cmovns
mov
add
ret
sub
pop
mov
add
add
stos
cld
cmp
mov
aaa
test
add
add
push
rcrl
push
cmp
mov
add
shl
xorl
or
add
add
push
push
pop
adcl
pusha
add
add
push
push
sub
adc
int
sub
add
add
lret
jle
mov
cli
adc
add
add
fisubs
adc
and
fsubs
mov
inc
jne
jg
sbb
sahf
loop
lret
icebp
dec
xchg
pusha
mov
mov
and
adc
jp
inc
mov
cmpsb
icebp
testl
or
mov
add
mov
mov
pop
call
jp
int3
xchg
adc
add
add
add
pushf
xchg
jle
mov
idivl
and
add
call
add
js
lahf
pop
out
mov
add
enter
lret
mov
jmp
mov
int3
or
add
add
inc
ds
mov
and
xchg
sub
pop
cmp
pop
push
xor
enter
add
imul
sbb
add
add
fisubs
and
lcall
add
jmp
std
cmp
mov
or
in
lea
push
inc
xor
add
add
sbb
cmp
add
cmp
add
add
mov
inc
mov
imul
fstl
or
add
add
add
ja
and
jae
mov
jns
xor
mov
inc
inc
add
add
mov
inc
or
lret
insl
pop
jle
int
and
add
add
movsl
cmpsb
popa
mov
sbb
mov
fsubrp
jne
add
add
bound
xor
add
add
add
fstpl
out
lock
push
xor
pop
test
mov
enter
cld
xor
push
inc
and
lock
xchg
repz
imull
sub
incb
add
sub
jae
stc
mov
sub
add
add
out
int3
sub
mov
pop
cmpsl
mov
mov
push
sbb
add
or
jmp
pop
stos
scas
stos
sbb
add
add
pop
xchg
mov
adc
xor
mov
add
add
sbb
mov
add
add
add
add
mov
cmp
sub
out
in
loope
add
push
iret
fnstenv
jge
imul
enter
pushw
add
repz
add
add
cmpl
outsl
add
cmp
add
add
add
lods
add
add
add
ss
mov
imul
xchg
dec
mov
mov
daa
popa
pushf
aaa
ljmp
push
inc
add
add
fmuls
movsb
mov
cmp
ret
adc
inc
insb
add
add
bound
add
add
popf
aam
push
aam
cltd
mov
xor
mov
imul
xorb
insl
or
aad
cmp
sahf
dec
dec
sbb
fsubs
mov
pop
cmp
sbb
cmp
adc
fs
mov
data16
add
and
sbb
cli
rorl
movsb
pop
iret
outsb
lds
orb
add
add
pushf
in
mov
scas
add
add
add
xchg
movsl
lods
jecxz
int3
rorb
xchg
jmp
scas
mov
js
lret
jbe
fs
inc
mov
stos
dec
orb
nop
iret
or
add
add
inc
mov
push
inc
in
sub
fmuls
test
leave
and
add
mov
les
mov
mov
cli
fistpll
mov
cli
andb
lcall
push
fwait
adc
xchg
in
or
add
xor
mov
out
push
inc
in
mov
push
aaa
cli
out
repnz
add
add
js
xlat
push
jmp
pushf
outsb
pop
mov
add
or
out
out
sbb
xor
mov
test
sub
fcomi
inc
xchg
inc
loope
out
mov
dec
repnz
push
cmp
add
adc
xchg
adc
add
add
mov
dec
mov
mov
aam
and
cmp
clc
cltd
mov
push
nop
mov
or
loop
test
jl
ret
test
push
cli
insl
stos
push
jecxz
push
cmp
add
add
rcrb
mov
popa
test
in
adc
stos
jge
sahf
xchg
jmp
insl
in
and
adc
out
aad
ljmp
test
stos
stos
and
mov
dec
pop
cmp
rclb
fs
fldt
jbe
push
and
jae
cmp
and
aam
imul
xor
aam
rolb
add
add
or
sbb
xor
sbbb
mov
stos
outsl
movsl
jbe
push
or
std
test
ret
mov
mov
int3
out
jle
sbb
add
add
das
xchg
mov
add
jecxz
xchg
fadds
aaa
push
and
daa
adc
add
cmp
and
add
das
enter
dec
jge
push
and
add
add
add
add
adc
jmp
add
add
mov
xlat
repz
scas
cmpsb
aas
mov
pop
dec
add
add
popf
sbb
adc
jns
test
add
arpl
add
add
xchg
jg
sbb
f2xm1
leave
pop
sub
add
add
sti
fdivl
push
lds
aad
enter
cli
out
cmp
cmp
dec
inc
repz
add
add
ret
mov
add
mov
add
add
addr16
jbe
xchg
push
add
push
xor
stos
lahf
push
cli
cmp
out
sub
adc
lret
sbb
add
negl
push
cld
scas
adcb
sti
xor
inc
movsl
mov
mov
repz
out
addb
imul
add
mov
ja
dec
pop
test
fldcw
mov
push
clc
movq
mov
mov
push
shrb
pop
arpl
and
add
add
push
aam
mov
cmp
out
sti
scas
lods
xchg
and
add
ss
mov
xor
imul
pop
xchg
loopne
mov
ret
push
imul
add
add
xchg
fdivl
xor
int3
sahf
loop
add
add
xchg
or
pop
xor
call
add
imul
mov
test
and
add
add
divb
mov
dec
mov
jnp
sbb
je
aas
xor
pop
push
xor
mov
mov
loop
scas
push
cmp
out
dec
jnp
lods
cli
inc
lcall
add
movsl
add
je
add
add
cmp
lahf
inc
push
pusha
mov
jne
xchg
lea
pop
fstps
jmp
sbb
decb
add
add
es
add
add
dec
mov
js
pop
loope
stos
cltd
or
movd
pop
jp
cmp
jbe
lods
add
imul
push
cmp
xchg
in
scas
movsl
negl
clc
ret
jne
or
sub
xor
cmp
fisttpll
xor
mov
lcall
filds
dec
mov
bound
icebp
add
sbb
push
loopne
stc
add
xor
add
sti
ret
cmp
push
mov
insl
mov
pop
pop
or
outsb
dec
sbb
add
add
loope
inc
sbb
cmpsl
inc
dec
stos
pusha
add
add
lods
mov
xor
mov
and
mov
dec
mov
xor
sbb
mov
mov
cmpsb
push
dec
add
add
lret
jnp
inc
and
repnz
cld
addb
mov
into
loope
mov
pop
clc
lds
sbb
scas
jecxz
shll
add
add
add
add
add
add
xor
push
xor
push
leave
dec
mov
pusha
mov
psrad
pop
mov
inc
pop
ret
add
add
stos
xchg
scas
fs
mull
mov
push
outsb
or
aaa
adc
aaa
hlt
and
mov
mov
jmp
add
dec
imul
add
add
in
incb
sarl
sbb
sub
andl
ss
push
popa
fldcw
lahf
stc
cmp
and
loopne
dec
add
pop
mov
add
add
mov
add
call
arpl
mov
shl
inc
pop
into
dec
inc
inc
inc
pop
mov
or
movsl
or
add
add
add
pop
push
inc
xchg
inc
mov
test
mov
fdivl
test
push
lds
sub
pop
and
fbstp
icebp
push
add
dec
mov
movsl
lret
int3
push
subl
cli
scas
mov
mov
xbegin
sarl
mov
mov
es
add
mov
ljmp
decl
jmp
sarb
lret
sub
push
lods
push
loopne
mov
fdivrl
xchg
cmp
mov
xchg
sub
jl
cmp
loopne
sbbb
adc
push
insl
enter
scas
cmp
mov
add
icebp
push
icebp
xchg
sbb
jp
push
imul
movsb
int
xchg
add
add
pop
jmp
rcll
aad
ret
test
xor
hlt
mov
rep
lock
xlat
outsb
cmc
rorl
add
add
push
sti
and
rsm
mov
popl
stos
out
pushf
pushf
adc
mov
imul
push
out
loopne
add
add
cmp
aam
loopne
arpl
xor
push
pop
xor
insl
sbb
jb
jle
sarb
add
mov
add
jo
repz
lock
fwait
mov
push
jmp
aam
cmpsb
mov
ret
outsl
out
in
xchg
std
repnz
dec
adc
in
les
dec
inc
mov
add
add
cmp
in
sub
test
std
test
pushf
and
add
add
pusha
add
add
dec
dec
xor
mov
add
add
pop
xor
mov
push
aam
mov
ret
adcb
cmp
jno
cmc
jae
mov
sar
sub
add
add
inc
mov
xchg
shll
je
push
push
jle
loope
mov
cmc
fsub
xchg
call
insl
push
ret
imul
xchg
push
rcr
mov
mov
popf
dec
add
add
cld
mov
cld
fsubrs
fiadds
dec
mov
adc
push
fnstcw
and
add
add
mov
add
add
mov
push
in
and
sub
outsb
cmp
xchg
mov
mov
add
jp
in
pmuludq
outsb
pop
mov
test
adc
lods
rcrb
bound
and
add
add
sub
int
testl
add
add
mov
test
inc
mov
scas
rcll
leave
ret
or
mov
add
out
mov
ret
xchg
pop
jge
fyl2x
aaa
add
int
ret
add
mov
dec
mov
mov
lcall
add
add
loopne
ljmp
add
out
dec
mov
in
leave
mov
aad
lret
push
lods
in
add
add
jnp
jg
cmpsb
insb
add
add
mov
test
or
add
mov
scas
movsb
mov
testb
ret
mov
push
test
div
ss
push
cmp
repz
add
add
out
ja
dec
push
mov
cld
xchg
pop
mov
mov
add
jle
sbb
pop
or
movsl
int
aaa
jns
repz
std
shll
cmp
leave
sub
jne
ficomps
dec
mov
mov
lea
fdivrl
add
mov
cmp
aaa
iret
dec
add
add
lock
mov
add
sub
push
sbb
push
fisubrl
dec
add
add
jb
scas
mov
scas
xor
rcr
xor
jp
pop
pop
leave
call
ja
add
sbb
loopne
sbb
mov
sub
pop
cmpsb
test
cmpb
repz
cld
les
pop
jmp
mov
popl
sbb
add
hlt
mov
mov
dec
int3
jo
add
add
decb
sbb
cmp
out
or
loope
negb
pop
push
cwtl
rol
into
mov
and
push
xchg
sub
add
add
mov
or
add
add
pop
js
sbb
pop
cmc
mov
pushf
mov
nop
loope
or
pop
cld
sahf
push
xchg
inc
les
ljmp
xchg
xor
add
jb
mov
pop
xchg
sbb
sbb
mov
xor
or
add
add
outsl
adc
pop
push
int3
push
adc
scas
xlat
into
cmp
dec
and
ja
fwait
add
adc
in
pusha
mov
xor
cwtl
dec
xor
jnp
sbbl
xchg
push
cmpl
aas
les
cld
in
mov
adc
add
xchg
mov
out
fstpt
arpl
outsl
or
add
add
mov
mov
add
add
pushf
pop
leave
pop
mov
push
sahf
sub
sbb
sub
fildll
add
repnz
inc
mov
jno
shlb
mov
mov
mov
in
sbb
pop
pop
push
mov
push
incl
pop
inc
mov
pushf
mov
add
in
cmp
push
xchg
mov
out
jns
out
inc
aam
pusha
add
add
ret
jg
fdivl
lea
add
inc
add
add
jle
mov
mov
adc
inc
enter
cmp
sub
add
add
push
mov
mov
xchg
rcrb
xor
add
shrl
mov
imul
add
sub
add
add
pop
gs
lcall
mov
push
out
cmp
xor
cmp
add
add
and
mov
shlb
add
add
xchg
mov
frstor
xchg
mov
add
addr16
or
add
add
mov
xchg
pop
mov
push
mull
cmp
popa
and
add
add
mov
adc
add
add
cmp
adc
dec
xchg
out
dec
pop
stos
mov
clc
js
mov
sarl
test
xchg
fsubs
add
cltd
nopl
jp
mov
pop
and
add
add
filds
sbb
inc
lahf
xchg
bnd
aas
cmp
andl
cmc
xor
add
add
cld
fsubrs
into
scas
xor
jmp
stos
adc
jns,pt
lcall
add
clc
pop
adc
leave
fiadds
pop
xor
add
add
push
push
cmpsb
lahf
xchg
dec
jne
nop
mov
and
jl
fidivl
cmc
dec
sub
fisubs
ljmp
dec
mov
cwtl
lret
sub
add
add
xchg
jp
fidivl
mov
mov
mov
push
pop
xchg
and
fs
mov
jg
mov
shrl
lahf
or
push
jl
add
cmp
add
fldcw
add
add
out
ret
dec
add
add
cmp
scas
outsb
popa
inc
push
jge
cmpsb
je
int3
adcb
and
and
add
add
in
lock
mov
push
xor
out
arpl
push
lds
test
add
push
jno
test
adcl
inc
cmpsb
scas
bound
add
add
sub
xchg
xchg
jg
and
stos
ficomps
std
and
sbb
enter
add
popa
mov
mov
daa
lret
sarl
fimuls
popa
dec
push
ljmp
add
add
add
jmp
xchg
jns
add
add
add
add
out
es
and
hlt
lahf
jmp
out
int
mov
mov
push
xor
hlt
xchg
pop
and
add
xchg
aad
adc
jo
cmp
mov
mov
xor
jmp
mov
mov
xor
sbb
add
add
jno
ret
inc
xchg
repz
push
push
inc
lret
daa
xor
add
add
xorl
and
or
loopne
add
add
sbb
add
add
mov
mov
mov
fbld
mov
dec
mov
sub
add
add
fildll
and
notb
ss
adc
jo
inc
inc
in
aas
stc
jmp
jmp
fidivrl
aas
enter
add
add
add
cmp
out
sub
jb
jge
adc
cmp
sahf
xchg
mov
sbb
pushf
js
pop
ljmp
icebp
inc
lock
mov
add
rcrb
add
or
add
add
inc
xor
cmp
xchg
jmp
in
data16
repz
cmp
mov
repz
aaa
outsb
adc
fdivp
sub
add
add
dec
mov
addr16
adc
dec
inc
xor
pop
addr16
xchg
add
add
add
sti
pop
jae
sarl
hlt
and
rclb
push
ret
adc
jns
mov
movsb
int
jno
cld
into
xchg
adc
add
add
test
iret
xorl
cmp
xor
nop
adc
mov
jb
jne
mov
lds
xchg
inc
movsl
enter
fcmovu
add
ja
push
jle
mov
mov
and
inc
add
add
jno
ror
pusha
add
add
pop
sub
add
add
sbb
cli
inc
leave
cmp
add
add
sbb
push
add
int
inc
je
scas
pop
inc
cmp
mov
sahf
dec
add
add
or
mov
mov
adc
add
add
cmc
mov
in
mov
mov
inc
ret
out
and
add
add
pop
pop
jb
lds
jbe
mov
jo
sbb
push
ret
xor
mov
push
fwait
js
mov
push
push
sbb
add
add
lcall
out
stos
mov
add
and
ss
and
add
add
add
daa
test
and
mov
and
cld
ret
jecxz
push
es
add
add
call
int3
jle
aad
mov
adcl
add
add
lods
pop
into
jle
dec
stc
ljmp
fwait
outsl
pop
sti
xchg
sub
add
add
mov
lea
fimull
xchg
dec
cmpsl
outsb
and
mov
fsubl
insb
add
add
and
push
rol
dec
cmpb
imul
add
and
mov
jnp
push
stos
pop
xor
push
ljmp
ds
pop
movl
push
aaa
cmpsl
cld
push
loopne
dec
add
add
and
pop
aam
movsb
push
pop
icebp
pusha
add
add
adc
mov
and
add
mov
mov
lea
jb
es
pop
sbb
add
add
mov
cmp
add
add
xchg
out
sbb
icebp
fcomp
roll
aam
cmp
adc
fidivrl
add
add
movsl
mov
pop
insb
mov
call
add
push
add
add
adc
mov
xchg
cltd
cwtl
pushf
ljmp
or
ss
pushf
out
in
dec
add
add
insb
add
add
push
dec
test
add
add
mov
add
add
add
sub
add
add
pop
dec
fisttpll
pop
test
lcall
lahf
xor
push
push
xchg
shll
pop
sbb
xor
movsl
adc
push
out
jmp
pushl
fistl
push
xchg
scas
pop
xchg
and
dec
mov
fs
out
inc
fcmovb
int3
or
dec
add
add
outsb
sub
mov
mov
push
in
add
add
cmp
std
or
dec
add
add
adc
mov
push
mov
icebp
push
and
add
shr
scas
jecxz
and
lret
push
mov
shr
jl
mov
push
xlat
pop
imul
out
pop
cmp
aad
mov
inc
add
add
pop
loope
out
mov
add
sub
add
add
mov
or
jo,pn
or
xchg
shll
mov
fcmovb
hlt
mov
enter
add
add
mov
add
mov
push
stos
ud1
std
cmpl
push
lcall
test
sbbb
sub
and
nop
cmpsb
push
iret
fiaddl
push
aad
scas
clc
xchg
xchg
push
dec
imul
fxch
mov
and
shll
jno
lods
mov
movsl
insl
cli
xor
sbb
imul
mulb
pop
xor
dec
mov
data16
call
in
fdivl
lret
lahf
ret
pop
add
mov
cmp
mov
jae
push
fnsetpm(287
stos
jbe
mov
popa
cmp
subb
mulb
fs
or
cmp
and
cwtl
inc
mov
sbb
imul
xchg
and
add
add
mov
lods
jmp
add
add
push
inc
and
test
adc
enter
pop
add
sub
daa
fildl
lds
xlat
sub
aaa
orl
add
cld
mov
in
push
fabs
int
jp
lock
dec
sbb
push
mov
test
add
add
adc
mov
cltd
sar
movsb
aad
inc
negb
out
int3
stc
cmpsb
mov
imul
ret
xchg
add
add
jae
jae
outsl
mov
push
mov
jl
mov
dec
cmp
pop
gs
adc
add
add
and
add
add
popa
addr16
sahf
aad
cs
cmpsb
pushf
mov
fwait
int
xor
scas
lods
es
arpl
cmp
and
add
rorb
mov
add
fistps
cltd
push
cmp
jno
mov
lahf
test
mov
add
add
pop
mov
sbb
movups
movl
add
mov
sarl
xchg
ja
das
mov
mov
cmpsb
rcll
xchg
inc
or
outsb
aad
pop
jp
mov
dec
iret
push
popa
and
sub
mov
xorl
xor
add
mov
xchg
imul
add
add
repnz
subb
cmpsl
sub
add
add
dec
in
add
stos
fs
add
add
pop
sahf
sbb
in
xlat
inc
mov
mov
aad
jne
int3
sub
xchg
mov
xchg
mov
pop
adc
and
icebp
sbb
stos
xchg
add
add
movsb
inc
cmpsl
mov
mov
gs
repnz
inc
mov
sbb
dec
adc
dec
add
add
mov
inc
dec
in
xor
mov
fs
xorb
repnz
lret
or
adc
pop
lcall
add
xlat
leave
cmp
pop
adc
cld
xchg
iret
jecxz
test
lret
xchg
fistpll
sahf
adc
into
out
inc
mov
pusha
add
add
divl
mov
mov
mov
mov
push
pop
mov
add
xor
leave
xchg
or
cld
aaa
and
cli
adc
pop
negl
add
add
mov
addb
add
sbb
mov
rol
dec
jb
push
in
or
int
add
adc
jmp
sbb
push
out
pop
test
cwtl
push
jns
lret
adcl
add
add
xchg
shlb
sbb
push
cmp
ret
xor
mov
mov
mov
scas
xor
scas
push
cltd
pop
mov
stos
mov
jno
call
add
mov
dec
push
mov
adc
add
add
add
add
sbb
scas
ret
sarb
mov
test
mov
cld
nop
not
popa
mov
imul
loope
nop
std
pusha
add
add
divl
in
shlb
jmp
add
add
xchg
jne
test
xor
dec
mov
mov
add
add
add
add
loop
add
add
fiaddl
nop
xorl
sub
fwait
mov
data16
push
jb
mov
js
cmp
push
xchg
addb
mov
out
mov
add
add
or
add
add
xor
mov
add
fwait
pop
cmp
xchg
test
add
add
xor
inc
adc
loopne
push
iret
jge
test
cs
ss
push
add
add
popf
cmpsb
mov
aaa
mov
mov
sub
mov
jo
popf
out
out
pop
push
test
jge
test
jne
stos
negl
pushf
js
rclb
in
pushf
xlat
mov
jns
add
rorl
movsb
mov
add
add
cs
aam
push
pop
arpl
decb
xor
xor
add
add
std
imul
mov
mov
mov
inc
mov
mov
or
cmp
stos
stos
pop
xchg
pushf
cmpsl
std
dec
mov
mov
xlat
lret
dec
in
jns
xor
ret
push
jmp
mov
sub
add
add
in
sub
or
add
add
or
add
add
clc
ljmp
sub
rorb
mov
mov
mov
xor
or
add
add
pop
lret
add
add
add
mov
jg
rclb
into
out
sub
sahf
insb
add
add
popa
inc
pop
xlat
mov
add
add
mov
cmc
out
aas
push
mov
adc
dec
shlb
in
lods
test
icebp
ret
popl
add
clc
xchg
jae
pop
pushf
das
ljmp
lret
push
cmpsl
sbb
rcrl
sub
sti
push
fidivrl
loopne
or
xor
inc
movsl
push
dec
clc
aaa
cmp
add
iret
aaa
out
insb
mov
mov
mov
stc
push
out
jbe
call
cmp
inc
mov
mov
mov
aas
push
pop
push
insb
mov
mov
hlt
xchg
sbb
dec
adcb
xchg
dec
mov
into
sbb
inc
out
popf
cmp
fwait
mov
fcomps
fwait
push
mov
xor
pop
idivb
adc
icebp
pop
mov
jae
mov
add
add
in
xor
aaa
in
jbe
cmp
add
add
mov
es
push
xor
push
sub
add
add
jnp
sub
add
add
add
add
in
sti
clc
scas
std
into
jmp
dec
mov
scas
mov
add
psrld
daa
push
rcl
jl
adc
add
mov
enter
push
jnp
push
cli
out
jns
xchg
arpl
sub
nop
sbb
sub
xchg
hlt
sti
outsb
aad
push
lret
xchg
mov
add
add
add
mov
pop
jnp
lods
mov
and
add
add
push
jmp
cmp
fistps
mov
xor
add
mov
ljmp
push
scas
lods
mov
popf
mov
sbb
adc
adc
add
add
xchg
popa
stos
out
mov
add
add
js
cmc
jns
stc
mov
inc
jnp
test
add
frstor
lods
fnstcw
scas
insl
cmpsb
ja
jb
xchg
xchg
jmp
andl
xchg
sbb
mov
adc
mov
or
lds
jmp
cli
scas
xor
inc
mov
fcmovbe
xchg
or
jecxz
add
add
movsb
xor
fistps
pop
dec
hlt
xchg
mov
add
adc
add
add
leave
push
sbb
loope
add
mov
xchg
aaa
xor
enter
add
add
jge
mov
mov
sub
add
add
mov
in
repz
iret
jp
mov
test
push
sarb
aas
out
or
dec
subb
sbb
outsl
jg
inc
fcomps
scas
add
imul
xor
xchg
pop
jbe
scas
in
cmpsl
mov
add
lock
xor
and
mov
pop
inc
dec
pop
movsb
and
add
fcmovnb
xchg
lods
idiv
loopne
push
je
cmp
inc
aam
sarb
pusha
mov
dec
lret
pop
cmp
inc
jp
add
idivb
test
xlat
aad
jmp
mov
and
xchg
add
add
outsl
mov
aad
sbb
cmp
cmpsl
ret
mov
out
dec
enter
sti
sbb
add
dec
jge
pusha
mov
lahf
lea
test
add
sub
xchg
sbb
cwtl
lcall
add
mov
or
jns
jmp
repz
adc
sbb
add
add
ja
mov
sub
stc
lds
shr
pop
xor
mov
movsb
sbb
mov
pop
jne
inc
inc
jae
aam
jo
cmp
lods
jnp
inc
icebp
mov
jmp
xor
inc
inc
inc
mov
mov
sbb
push
push
cmp
pop
fisubrs
jecxz
ja
aad
push
out
jmp
adc
pop
cvtdq2ps
ds
mov
inc
mov
ljmp
add
add
repnz
or
cmpsb
mov
pop
jae
lahf
pop
aam
add
add
push
and
inc
cmp
mov
add
lds
add
add
xchg
std
sbbl
out
dec
mov
push
inc
mov
lret
outsb
mov
lahf
jno
cs
dec
add
add
mov
and
or
add
imul
add
sbb
js
in
jg
mov
push
repz
mov
test
adc
add
cmpsl
inc
sub
add
xchg
push
lcall
mov
es
mov
sarl
mov
mov
cwtl
and
inc
cs
mov
mov
add
add
mov
sub
push
and
xchg
push
outsb
pop
mov
add
popf
mov
fwait
push
gs
jae
fistpl
imul
cmpsb
je
xor
lret
pop
push
mov
xchg
adc
fisttps
dec
cmc
imul
adc
loop
clc
loope
push
cmp
sub
add
add
xor
add
daa
pop
push
xchg
adc
adc
cmp
sbb
jmp
data16
daa
add
mov
scas
jae
jne
mov
leave
mov
jge
popf
mov
push
je
jge
test
mov
ret
mov
ss
jns
popf
xchg
jae
jns
mov
les
es
push
xchg
add
add
dec
pusha
add
add
push
dec
xor
mov
cli
xor
xor
int
xchg
fwait
in
sub
pop
icebp
jno
sub
pushf
movsb
pop
aam
pop
cmp
add
add
pop
xor
add
in
insl
clc
mov
clc
and
cmp
mov
bound
xor
add
das
mov
add
xchg
das
std
into
push
test
std
pop
inc
push
daa
imull
mov
scas
cmp
call
insl
mov
and
add
add
aad
push
xor
cs
add
add
dec
jle
inc
xchg
dec
mov
fsubrs
sbb
fs
inc
inc
fsubrs
mov
add
add
add
iret
sub
je
sub
xchg
cmpsl
xor
mov
test
and
fistps
cmp
jge
push
mov
ror
rcrb
mov
test
mov
cmpsl
mov
stos
cmpsb
jns
adcl
sub
push
repz
loop
lahf
iret
test
mov
cwtl
sub
add
add
inc
mov
clc
xor
test
mov
and
popf
sub
mov
jl
aam
cmp
stos
mov
pop
cmc
push
imul
loope
mov
mov
mov
dec
mov
or
add
add
fucomip
mov
add
sti
fscale
sbb
movsb
or
rcll
sti
mov
add
add
xchg
mov
mov
add
add
dec
test
add
cmp
adc
add
add
mov
inc
pop
mov
sub
imul
dec
out
repz
test
xchg
add
stc
xchg
ficomps
lcall
add
into
fidivl
int3
mov
xchg
sbb
rclb
rclb
jns
lods
xor
mov
xchg
push
add
add
loope
xor
les
add
add
push
movsl
fcmove
inc
mov
jle
popf
jns
jno
rorl
xchg
push
lock
mov
ljmp
mov
sbb
mov
outsl
cmp
push
cmp
insb
mov
fs
add
add
jb
int
add
hlt
sbb
fxch
add
enter
push
mov
sbb
mov
data16
in
jp
pop
pop
inc
mov
mov
fstpl
sbb
mov
add
adc
loope
xor
sbb
dec
and
add
add
or
add
add
jl
leave
sti
mov
jp
rcrl
xchg
xor
xchg
nop
mov
and
add
add
out
or
imul
mov
jge
cld
add
add
jae
adc
or
or
push
jecxz
dec
add
cmp
imul
nop
xor
fisttpll
dec
pop
sar
and
ljmp
jo
mov
movl
mov
or
add
add
add
add
iret
or
inc
bound
daa
cs
add
add
outsb
jae
loopne
pop
dec
add
add
pusha
mov
inc
adc
and
add
add
mov
jne
jo
pop
add
pop
pop
nop
push
call
fiadds
add
cwtl
adc
push
shl
mov
push
xchg
int3
mov
push
imul
jb
pop
pop
xchg
call
xor
shrb
jge
insl
add
add
add
adc
aas
cli
in
repz
cmpl
inc
movsl
or
mov
inc
cmp
out
test
mov
and
movsb
push
test
pop
ss
mov
and
add
add
add
dec
sbbl
decb
add
jb
movsb
insb
mov
or
add
add
aas
fwait
test
add
fsubrl
arpl
pop
icebp
adc
add
mov
dec
jne
orb
scas
in
cmp
mov
pop
pusha
mov
mov
arpl
ret
test
mov
add
loope
mov
cmpsb
push
mov
mov
int
inc
cltd
mov
push
aaa
mov
lret
lcall
xchg
cmp
icebp
out
icebp
dec
or
add
daa
cmp
lahf
loopne
add
add
add
add
mov
xor
xchg
mov
add
add
loop
mov
mov
jg
lods
push
cmp
and
add
add
push
jne
stos
push
lcall
adc
adc
mov
add
notb
lea
out
stos
int3
push
rorl
movsl
loopne
fldl
leave
orb
add
lods
fxch
mov
add
int3
in
jmp
fmuls
add
mov
sbb
sbb
ret
dec
scas
adc
sbb
arpl
dec
xchg
push
lahf
addl
fsubrp
shlb
mov
mov
dec
add
add
mov
nop
mov
inc
ficoms
iret
insb
add
add
adc
pop
scas
push
in
jnp
cmpsb
shll
jne
xchg
sub
sahf
loopne
lret
jbe
cli
rcr
mov
add
popa
cmc
shl
aad
ss
xor
pop
lret
push
shlb
or
sbb
cwtl
mov
sbb
add
mov
inc
jo
cmp
into
ljmp
aas
sub
pop
push
insb
add
add
cmp
incb
mov
scas
cmpb
mov
jo
push
adc
in
dec
sbb
jns
movsl
iret
jmp
movsb
lcall
sub
add
int3
xchg
push
push
mov
push
jb
ret
add
add
add
add
outsb
sbb
pop
in
cli
das
cmp
ret
push
jl
jb
mov
cmp
js
push
out
stc
popa
jno,pn
sbbb
mov
xchg
sub
add
add
push
mov
rcl
in
cltd
lret
test
cmc
cmp
aas
ret
cmpsl
aas
dec
jno
lds
add
mov
mov
out
mov
xor
push
test
xor
cmp
add
fcom
jecxz
add
xchg
sub
add
fnstenv
faddp
out
sbb
test
lock
mov
add
add
lods
lahf
imulb
sub
sarb
sub
add
add
dec
call
add
add
or
cmpb
add
dec
sahf
loope
add
add
sub
push
mov
stos
xlat
in
inc
mov
in
cwtl
in
push
jecxz
xor
aaa
jl
cmpsl
test
negl
sub
movsb
push
mov
inc
mov
outsl
insl
into
dec
add
add
pop
outsb
dec
stc
add
pop
adc
mov
inc
and
add
add
sub
inc
shrb
sarl
sti
jo
mov
sar
and
add
add
jle
insb
mov
push
dec
ss
out
mov
add
add
add
mov
arpl
xchg
cwtl
dec
add
add
cmc
mov
or
sbb
push
mov
and
add
add
call
xor
cmpl
aaa
ds
jne
fsubrs
outsb
loopne
in
lods
xor
jmp
sbb
loopne
aam
rclb
int
fcmovu
xchg
fwait
inc
out
jecxz
cld
repz
add
add
or
cwtl
repz
shl
mov
cmp
cld
icebp
cmp
add
sbb
mov
add
add
xchg
inc
pop
pop
jne
mov
into
sbb
mov
add
add
loope
add
add
push
xchg
pusha
mov
jmp
bound
jmp
xchg
mov
sar
call
cmp
mov
bound
push
test
fiadds
push
or
add
add
hlt
data16
int3
es
hlt
loopne
gs
mov
jno
mov
add
add
add
mov
ljmp
cmpsb
sub
orl
mov
inc
sbbb
mov
push
jnp
aas
lea
mov
mov
xor
add
repz
jmp
mov
add
adc
dec
pop
int
adc
stc
pop
loope
mov
mov
aaa
mov
xchg
icebp
daa
push
in
mov
xchg
push
bound
in
sbb
and
lods
add
add
add
aad
pop
mov
or
add
add
mov
add
mov
dec
bound
add
add
xor
enter
push
and
or
iret
pop
dec
mov
inc
dec
mov
add
add
mov
sub
add
add
cltd
lahf
push
xchg
test
pushfw
call
dec
inc
adc
lret
push
lock
or
add
mov
roll
add
add
xor
stc
sub
addr16
jecxz
shr
push
negb
push
out
js
xor
insb
add
add
cmp
in
lret
lahf
adc
add
add
add
or
add
add
aam
test
addr16
add
add
sub
add
add
inc
add
add
in
xchg
mov
pushf
inc
xchg
loopne
sub
add
add
orl
cltd
ficomps
sub
mov
push
or
push
adc
add
stos
pop
xor
fcomps
cmp
cltd
dec
mov
mov
enter
jb
and
add
add
sti
fwait
cltd
or
fisttpl
push
js
inc
add
add
mov
out
add
add
add
pop
scas
movsl
dec
aam
mov
xor
lock
inc
xor
add
add
ja
push
sub
imul
roll
add
stc
hlt
int
mov
sbb
int
dec
mov
mov
push
push
int3
mulb
mov
in
mov
jmp
push
js
lret
xchg
cmp
mov
mov
add
inc
add
add
dec
fs
xor
aad
fstps
push
scas
or
mov
pop
loopne
pop
jo
jnp
fstps
pop
imul
inc
mov
jge
stc
add
add
add
imul
ret
lods
nop
xor
xchg
push
jo
cmc
cmp
add
cmp
xor
fistpll
test
xlat
mov
enter
loop
and
fisttpll
push
pop
bound
push
test
jo
mov
sub
add
add
mov
or
or
fucomi
dec
pop
mov
int3
es
orl
jle
mov
xchg
cmp
xor
or
add
add
cmp
popa
pop
inc
addl
add
fsubs
dec
add
add
and
sahf
in
jle
add
add
andb
push
rolb
enter
mov
add
lret
in
xor
mov
jno
out
mov
add
add
add
mov
add
add
cmp
insl
in
ljmp
daa
jbe
xor
leave
dec
cmpsl
scas
imul
add
add
add
add
mov
add
repnz
push
daa
dec
add
add
dec
cmp
adcl
mov
push
jmp
cmpsl
ficoml
sbb
stc
adc
test
fcoml
add
mov
mov
jnp
jmp
cmp
or
add
add
xchg
out
cmpsb
mov
add
add
add
aas
enter
jp
fcmovu
sub
add
add
xor
mov
in
mov
add
dec
ja
adc
inc
mov
xchg
std
ja
out
test
adc
lods
mov
popf
mov
lea
loope
mov
lahf
cmp
decb
leave
fcoms
add
add
ret
call
fcoml
cmp
pop
mov
aas
in
xchg
jmp
mov
xchg
ret
aaa
cmpsb
fistps
repz
divb
sbb
push
cli
cmpsb
pusha
add
add
decb
div
pop
jo
pop
pop
adc
dec
pop
lahf
push
ret
fimuls
mov
lahf
es
and
add
mov
mov
aam
pop
fwait
xchg
jae
std
pop
sti
out
xchg
aaa
stc
out
pop
mov
lods
or
add
add
pusha
add
add
jmp
push
out
and
jge
adc
cld
adc
cmp
mov
pop
mov
jle
mov
lock
add
add
mov
xchg
les
ss
repnz
add
loopne
lock
std
push
les
stos
lods
jg
popa
lock
fdivp
enter
push
xchg
jb
dec
enter
add
lcall
lods
lds
add
add
xchg
and
sub
into
xlat
mov
inc
adc
and
add
add
ret
fdiv
in
mov
push
jmp
inc
outsb
mov
ret
add
add
add
jle
imul
rclb
ret
mov
popf
repnz
add
add
mov
xchg
loope
fcomi
mov
xchg
rcl
adc
in
dec
ficoml
add
add
mov
ret
test
outsb
jnp
jg
dec
cmp
add
filds
test
jmp
inc
call
add
jne
pop
mov
adc
xlat
push
std
popa
mov
fwait
push
inc
sahf
cltd
dec
mov
push
cmp
sbb
jp
adc
pop
jmp
enter
mov
add
add
clc
cmp
inc
jmp
adcl
leave
sub
mov
and
and
add
add
add
add
test
jb
popf
or
add
cmpsl
out
add
mov
adc
adc
shlb
aad
je
dec
mov
call
aas
xchg
loope
addb
das
xchg
frstor
mov
sti
inc
push
and
add
add
in
out
pop
dec
adc
add
dec
cmc
cs
aas
cmp
jl
jo
add
add
or
test
int
inc
mov
lcall
add
add
fisubs
jnp
stos
das
xchg
fsubs
aas
cld
jecxz
fldenv
sti
outsl
out
ret
adc
dec
add
add
imull
jns
sub
lods
cmp
into
shll
leave
insb
mov
jle
mov
add
ss
in
incb
jle
nop
jo
sti
push
xchg
mov
mov
cmp
adc
xor
fsubrl
test
add
hlt
push
pop
fucomip
push
xchg
ljmp
add
add
add
add
imul
dec
fcmovb
cmpsb
clc
xor
or
cltd
adc
dec
mov
lahf
jp
test
or
data16
jb
push
rclb
add
mov
out
inc
lock
imul
int3
mov
sub
sti
repz
xchg
sub
add
add
int3
mov
add
mov
xor
add
push
jle
dec
add
add
stc
and
cmc
and
jmp
std
and
sahf
in
sbb
setns
dec
mov
enter
or
add
add
push
sbb
insb
mov
andb
add
add
lods
lcall
loop
or
out
cltd
test
leave
or
xlat
lahf
pop
loop
mov
dec
rol
cmp
push
adc
ds
xor
dec
push
inc
popf
lea
jmp
mov
mov
sbb
mov
mov
cli
iret
leave
sbb
stos
daa
and
add
add
dec
xor
sbb
test
add
sbb
xchg
movsb
push
les
ret
js
xchg
jecxz
cwtl
mov
add
add
add
sub
add
add
and
add
add
ja
or
add
add
ret
sub
aas
scas
mov
xchg
inc
mov
xchg
jb
cmp
pop
fs
jbe
push
inc
push
scas
cmp
pop
xorl
mov
aaa
mov
dec
enter
adc
and
rep
mov
shl
mov
gs
inc
mov
cld
mov
xchg
je
mov
push
iret
mov
add
mov
cmp
mov
call
inc
mov
call
inc
jo
or
add
add
add
add
push
mov
mov
inc
shr
pop
loope
push
outsb
ja
jp
mov
xchg
dec
push
push
in
loopne
pop
push
out
imull
loope
cmp
sarb
push
stc
adc
inc
jo
cmp
push
repnz
dec
mov
jle
lock
cld
and
add
add
cmp
add
add
ljmp
mov
and
add
add
dec
mov
xchg
and
pavgw
fwait
mov
pop
sarb
mov
inc
xor
jne
inc
add
cld
mov
mov
outsl
out
cmp
iret
out
push
out
and
mov
jge
fwait
xor
cwtl
dec
mov
addb
jo
mov
fidivs
data16
jae
movl
add
xlat
adc
add
add
mov
mov
imul
fnstenv
or
cwtl
push
sub
lock
test
test
add
add
add
add
add
stos
repz
bound
pop
lahf
movsl
mov
jne
repz
je
and
mov
in
das
ret
mov
fiadds
mov
add
add
or
add
add
mov
sub
cld
mov
pusha
mov
repnz
sbb
cmp
sub
sub
add
fwait
es
xor
mov
add
fbstp
mov
or
pop
test
xor
int
clc
jno
fdivrs
insb
add
add
sahf
fstpt
std
sub
ja
cltd
mov
enter
add
add
lahf
out
ss
rcrl
stos
and
add
add
add
add
sub
add
add
shr
adc
iret
and
xor
and
mov
mov
jl
jo
inc
add
add
add
ficoml
dec
addr16
subl
xlat
sbb
add
add
add
add
add
rolb
pop
adc
xor
imul
sub
xor
or
add
add
cmc
ja
movsb
ljmp
aas
mov
add
add
mov
add
add
and
add
jge
adc
repz
sbb
jmp
mov
add
add
add
dec
sub
add
add
mov
fisubl
add
add
rolb
add
add
hlt
adc
push
icebp
daa
jnp
jp
jo
cmpsl
xchg
xor
jg
test
nop
dec
adc
insb
add
add
push
jbe
fisttpl
push
int
pop
mov
loop
cmpsb
and
push
lret
aaa
or
fisubl
das
dec
rdmsr
clc
jne
and
add
add
pop
js
sub
add
add
popa
lds
mov
clc
jle
add
add
dec
mov
or
aas
push
and
push
mov
in
ror
data16
inc
testb
add
add
mov
hlt
fisttpll
and
out
in
push
adc
add
add
and
add
add
and
in
cmpsb
cmc
jl
cmc
mov
sbb
mov
out
jge
int
lret
outsl
xor
rclb
add
daa
sbb
mov
jecxz
xor
mov
mov
add
enter
arpl
sbb
mov
add
sub
add
add
shlb
jns
cli
pop
daa
mov
call
daa
test
test
lret
push
and
nop
adcl
pop
mov
out
dec
xor
adc
scas
repnz
add
add
fsub
sbb
imul
add
add
add
or
pop
test
push
popf
leave
out
sahf
and
dec
imulb
outsb
sub
lret
and
cwtl
xchg
shr
fnsave
add
dec
push
shl
mov
adc
rcr
idivb
test
add
add
clc
add
add
add
add
pusha
mov
xor
les
movsl
push
jae
arpl
adc
mov
jmp
into
push
incb
push
jle
sbb
add
add
aas
mov
mov
sbb
lret
jg
pop
dec
jno
popf
mov
fistl
add
add
add
push
or
mov
int
stos
or
mov
ficomps
add
xor
cltd
jmp
xchg
sub
mov
or
xchg
subl
add
sbb
aaa
fisubrl
mov
daa
pop
push
push
xor
or
and
xor
imul
adc
mov
xchg
add
add
xchg
xchg
xchg
or
in
push
les
sbb
push
adcl
in
scas
in
fs
cwtl
push
sbb
jno
stos
lock
popf
leave
sub
add
add
xor
add
add
mov
or
add
add
add
add
add
mov
lret
sub
pop
and
add
cmp
cltd
mov
mov
je
adc
iret
or
int3
jl
jno
out
fwait
sub
stos
je
or
scas
daa
pop
mov
mov
call
popl
pop
fdivr
cmp
mov
cltd
mov
dec
fcomps
loopne
out
fldenv
fcmovnb
pxor
mov
add
add
inc
test
xchg
jo
add
negb
sbb
and
pop
cmpsb
xlat
or
mov
add
popf
mov
pop
scas
sub
lods
outsl
scas
imul
pushf
pop
mov
cmp
rcrl
mov
sub
add
add
pop
xor
mov
fcomip
jo
xchg
adc
ja
fcmovbe
loope
cld
inc
mov
add
fdivrl
in
sahf
fs
stos
sub
jb
popf
sbb
jne
or
and
pop
inc
cmp
inc
imul
cmp
jnp
in
add
add
imul
xchg
cmp
mov
fisttps
add
iret
nop
stos
clc
enter
testb
add
or
add
add
movsl
add
add
add
into
xor
mov
aam
push
in
or
pop
xchg
pop
xchg
add
inc
add
add
hlt
or
hlt
fnstcw
insl
cmp
pop
clc
mov
add
add
or
and
add
or
cmpsb
inc
aas
loop
sub
adc
scas
push
push
ret
pop
push
pusha
mov
sub
leave
xlat
inc
cmp
add
add
add
aas
shufps
gs
scas
outsl
jnp
sbb
pop
stos
mov
add
jmp
xor
and
add
add
add
out
push
xor
add
mov
push
jns
shlb
add
sub
push
add
add
add
add
add
add
dec
movsl
jb
fnsave
xor
xor
add
add
hlt
test
inc
stc
push
incl
rcll
imul
xor
rcr
or
out
test
add
jb
fstpt
movsl
int3
mov
ljmp
mov
iret
add
mov
push
int
pop
lods
and
dec
mov
in
push
sub
add
add
push
int
mov
sarb
loope
lret
add
or
mov
jecxz
repz
add
add
adc
add
imul
jl
or
add
jnp
mov
push
fcomps
lahf
icebp
pop
inc
lahf
pop
test
push
inc
mov
add
add
xor
rclb
push
repnz
jae
bound
pop
inc
mov
rorb
add
add
add
add
stc
xchg
dec
movsb
cli
mov
and
jae
aad
ss
ljmp
xor
pop
mov
add
add
adc
aad
jmp
adc
std
dec
lea
xor
cltd
repz
push
ljmp
fdivr
fwait
add
js
ds
dec
add
add
push
int3
ljmp
test
stos
rcll
popa
jmp
cmpsl
sub
add
add
aas
movb
add
add
call
adc
fimull
popl
mov
stc
testl
mov
xchg
mov
xchg
fidivrl
xchg
test
hlt
scas
fsubs
xlat
xorl
sub
add
add
push
fdivrs
or
add
add
bound
mov
pop
add
hlt
dec
lcall
add
add
notl
aaa
inc
pop
jg
add
add
mul
stos
add
add
add
add
add
fstpt
xorl
stc
fidivrs
rorb
mov
aad
jmp
loop
pushf
sete
jmp
add
add
add
push
insl
sub
add
add
cmp
add
cmp
xchg
cltd
and
xor
dec
in
or
add
add
add
add
dec
xchg
fistl
and
push
js
rclb
push
adc
aas
out
rclb
rcl
jno
arpl
sbb
dec
mov
jg
mov
lcall
mov
add
add
and
mov
popf
das
add
add
icebp
cmc
push
cmp
xor
aad
inc
add
add
sbb
pusha
add
add
ss
add
add
mov
add
or
cmpsb
fnsave
pop
popf
inc
mov
fcomps
pop
aam
arpl
pusha
mov
xchg
adc
lea
leave
cmp
icebp
aad
push
cmp
mov
add
out
jae
mov
add
add
mov
mov
xor
add
fnstsw
pop
cwtl
pop
push
jecxz
xchg
das
pop
pop
and
lret
aam
mov
pop
xchg
int3
push
je
mov
outsb
pop
adc
add
add
add
mov
adc
ficoml
outsb
in
ja,pt
inc
sub
es
mov
add
add
jno
icebp
xorb
mov
xchg
call
pop
int
gs
adc
add
call
inc
mov
pop
lcall
push
mov
add
mov
mov
stc
xor
jle
add
or
add
add
popf
out
adc
sbb
and
add
add
iret
mov
mov
add
add
stos
push
add
add
add
and
add
add
and
add
add
adc
jo
add
add
mov
cmc
mov
add
dec
mov
pop
cld
lcall
fsubl
sti
bound
xchg
pusha
mov
mov
repnz
sbb
mov
aas
push
jmp
arpl
sub
cmpsb
jge
push
mov
add
test
add
add
into
shlb
adcb
add
adc
add
add
in
jl
mov
dec
movsl
pop
jne
adc
jno
mov
imul
fldt
inc
loopne
dec
sub
add
add
pop
xchg
jge
mov
add
mov
cmp
shr
pushf
push
cmc
ds
sub
add
add
or
add
add
xchg
sahf
test
xor
xor
add
repnz
mov
jnp
inc
mov
push
dec
add
add
test
adc
add
add
jne
faddl
add
jmp
add
add
addr16
je,pn
xchg
cmp
jo
sub
mov
shrl
subl
add
sub
add
add
enter
mov
inc
lds
jns
mov
mov
sbb
sub
add
add
xor
je
mov
outsl
shr
dec
dec
sbb
add
add
in
fisubs
aam
dec
mov
mov
sub
push
cwtl
rcrl
jno
sbb
add
int
fbld
add
add
add
nop
inc
mov
lods
ja
add
mov
dec
pop
pop
mov
adc
xchg
or
add
xchg
adc
add
add
mov
fs
xchg
sbb
mov
add
add
add
mov
ret
out
cmp
mov
lcall
add
add
jg
sub
in
nop
leave
xor
lret
insl
out
pop
ja
mov
daa
shl
popl
mov
adc
es
repnz
frstor
xchg
andb
add
mov
jecxz
addr16
add
add
loope
pop
mov
add
add
add
and
mov
insl
xchg
das
push
jg
clc
out
add
push
mov
mov
lds
add
add
daa
sbb
subb
add
push
test
sub
add
add
pop
jecxz
lea
imul
test
add
rol
pop
icebp
xchg
xchg
sbb
repz
or
pop
cmp
add
stc
push
aad
data16
add
inc
push
cs
fs
cwtl
iret
repz
dec
adcl
fsubrp
sub
mov
outsl
add
add
add
xchg
mov
cmp
lcall
add
mov
in
sub
add
add
adc
and
add
add
sub
inc
stos
inc
cmpsb
xchg
sub
add
add
sub
incl
mov
adc
jbe
mov
adc
xchg
jmp
cmp
mov
ud2
mov
mov
enter
scas
mov
mov
ret
and
add
add
xchg
and
test
fnstsw
lods
pop
cmp
scas
push
dec
add
add
or
mov
cltd
mov
flds
outsl
gs
mov
int
insb
add
add
shr
mov
pop
outsb
cmp
sti
loope
test
add
or
out
out
mov
xor
add
scas
push
mov
fmull
xor
mov
mov
int3
arpl
ficoml
jnp
gs
mov
sahf
sub
outsb
in
jo
lock
arpl
subl
add
push
mov
lcall
outsl
rcll
cmp
decl
add
add
repz
add
add
add
add
xor
lds
add
add
mov
inc
mov
add
add
add
cmc
xor
orl
jb
imul
cld
pop
mov
mov
dec
add
add
dec
sbb
pop
mov
mov
pushf
inc
add
add
faddl
cwtl
adc
pop
push
rorb
ret
add
add
rcrl
in
aas
popa
cmp
test
iret
inc
mov
fnstenv
sbb
push
js
or
xchg
mov
push
dec
mov
call
jne
sub
pop
int
mov
add
sbb
xor
insl
jg
insb
add
add
jle
jnp
xlat
add
sti
mov
mov
cltd
mov
bound
dec
push
push
xor
inc
add
add
cmp
cmp
dec
add
add
cmp
xchg
xlat
add
das
pop
pushf
lock
lods
shll
pop
hlt
sbb
add
stos
minps
add
add
add
mov
add
add
mov
mov
jne
mov
add
ds
xor
cmp
dec
rorl
push
push
subl
call
outsb
xor
shlb
lcall
lea
add
add
or
loope
mov
fildl
test
cltd
push
clc
stc
lcall
sbb
fs
aaa
push
and
daa
xorb
shlb
aaa
cmpsb
aas
sti
dec
ret
imul
cmp
pushf
rolb
add
mov
jl
jmp
jl
add
add
add
in
mov
shrb
add
add
add
xor
imul
and
mov
cmp
add
and
add
cmp
loopne
clc
fmuls
and
sub
mov
mov
xchg
and
loopne
mov
xchg
cmp
inc
lret
adc
test
add
and
push
int3
adc
push
lret
ds
xor
pop
in
ss
mov
pop
mov
cmpsl
add
imul
inc
movsl
xchg
and
dec
mov
lret
xor
add
daa
cmp
push
dec
mov
adc
out
inc
test
adc
add
add
in
jne
dec
xchg
mov
pop
mov
sub
add
add
ficoml
mov
lods
mov
sub
add
add
je
loope
pop
movsl
sub
add
sar
fistps
insl
jne
sar
popf
mov
scas
add
add
enter
add
add
hlt
lahf
mov
xchg
cmpsl
nop
fisttpll
mov
inc
push
leave
test
out
dec
shll
add
add
mov
ret
mov
xchg
xchg
scas
or
add
add
push
and
mov
dec
mov
adc
mov
fcoml
cmp
jmp
or
in
pop
icebp
inc
lods
sbb
std
add
push
aaa
js
mov
push
imul
sub
rorl
ficompl
outsb
adc
push
cmp
or
mov
cld
mov
pop
pop
inc
gs
pop
ret
iret
sub
add
add
mov
mov
pop
sbb
fmull
lahf
int
ds
inc
jp
push
add
add
add
in
sarb
in
add
add
ss
test
lea
stos
push
inc
dec
repz
xlat
xor
and
cwtl
mov
sub
fisubl
pop
sar
mov
jp
aaa
or
add
add
dec
arpl
ret
push
loope
inc
hlt
add
add
add
divb
mov
mov
mov
mov
sahf
jl
insb
add
add
jmp
cmpsb
mov
mov
and
add
add
out
test
xchg
adc
inc
insl
sbb
mov
or
add
xor
and
add
add
add
movhlps
sub
push
sub
test
mov
mov
lcall
jns
outsl
push
repz
stc
aas
mov
data16
mov
sbb
dec
psrlw
cmp
add
dec
mov
mov
push
xor
sbb
adc
add
arpl
cmp
in
mov
add
add
test
pop
pop
cmp
add
add
push
testb
mov
push
in
inc
cld
xor
sub
fimull
mov
stc
repnz
add
add
and
and
testb
cwtl
aam
stos
shr
div
adc
push
shll
and
inc
mov
xor
lahf
shlb
shl
mov
mov
cmp
sahf
or
add
add
and
insl
les
test
jmp
lods
es
push
sub
sahf
add
add
add
inc
xor
add
add
add
add
xorb
movsb
aad
jns
mov
jbe
bnd
mov
add
add
fnstenv
popa
mov
icebp
mov
cmpsl
push
data16
xchg
pop
pop
mov
imul
fstpl
add
add
jp
mov
sub
mov
mov
sub
int3
cmpsb
pop
call
ja
out
jp
mov
add
cmpsl
arpl
mov
dec
xchg
cmp
fcmovnb
xlat
arpl
movsl
adc
outsl
nop
sbb
jb
xor
sbbl
add
add
add
into
cmp
add
sbb
push
jbe
jb
push
sti
lds
repz
cmp
incl
insb
mov
jns
jne
lods
test
push
inc
cmpl
out
mov
dec
add
add
mov
mov
xor
push
push
and
dec
loope
or
jbe
sbb
add
add
mov
std
int3
popf
popf
dec
add
add
lcall
mov
sbb
add
add
insl
clc
test
pop
mov
sub
imul
jl
lret
adc
mov
lss
clc
mov
sub
add
xor
add
loope
xor
pushf
push
scas
jge
mov
inc
test
pop
ret
das
mov
pop
rolb
and
mov
xchg
insl
xchg
stc
inc
mov
int3
icebp
pop
popf
lods
xchg
addl
add
xchg
orl
faddl
add
add
cld
mov
popf
jecxz
dec
sahf
adc
in
cmpsl
dec
in
mov
mov
js,pt
mov
add
add
mov
clc
mov
mov
xor
mov
mov
mov
lret
mov
mov
xor
add
clc
inc
and
fisttps
add
call
xchg
cmp
loope
das
sti
jmp
xchg
or
add
add
xor
imul
inc
add
add
cmp
push
and
neg
js
cs
test
scas
adc
mov
push
insl
add
xchg
pushf
mov
ret
in
clc
or
dec
sbb
ror
clc
scas
pop
repnz
mov
into
imul
mov
dec
mov
sbb
mov
add
add
jne
sbbb
cmpsl
insl
xor
jmp
add
xor
es
cltd
imul
sbb
mov
pop
ret
sub
add
cmp
mov
adcb
pop
test
inc
icebp
shll
add
adc
addb
add
inc
addr16
add
cld
mov
lret
rcr
mov
nop
xchg
lea
add
push
jecxz
js
fcoml
pop
inc
shlb
mov
add
mov
add
pop
xor
push
push
ss
jb
add
add
fidivrs
nop
jle
xor
cwtl
shlb
je
cli
nop
in
repnz
sub
stos
push
mov
mov
pop
cmp
xchg
cli
xchg
test
mov
movsb
push
outsl
insb
add
add
test
add
pusha
add
add
jb
enter
jae
jnp
stos
nop
pop
add
mov
leave
fildll
int3
mov
repnz
scas
adc
movsb
mov
xor
dec
inc
adc
fidivs
adc
in
lods
jbe
test
jge
aas
lea
push
ret
xor
or
add
add
mov
add
add
iretw
lahf
mov
fiaddl
pop
cmp
mov
adc
orl
movsl
adcl
aam
in
imul
jmp
ret
pop
test
add
fmul
push
dec
cmp
dec
mov
mov
and
cmp
call
push
jo
or
push
dec
ds
dec
sub
xor
cmpsb
mov
stos
mov
out
adc
sub
xor
cwtl
stos
sahf
jg
mov
xchg
lea
adc
pusha
mov
mov
test
inc
jns
lds
add
add
std
cmp
jnp
dec
add
add
push
add
lret
jnp
pop
fcoms
or
add
add
mov
cmp
or
add
add
jo
lret
callw
adc
add
add
fldt
fs
popw
bound
cmpsl
in
push
ljmp
imul
mov
cmp
jecxz
jge
jae
add
add
dec
stos
xchg
out
aam
popa
lret
les
add
add
ljmp
add
testb
push
sub
mov
movlps
push
movsb
addr16
outsb
mov
mov
push
or
xor
popl
add
cmpsb
pop
aaa
xor
in
mov
outsl
sbb
mov
cmp
add
enter
faddl
add
add
mov
cmp
sub
jl
or
mov
cmp
lret
add
add
lods
out
mov
je
je
fwait
cmp
jge
inc
add
add
cmp
cmpsb
push
add
ljmp
add
push
outsb
cwtl
notb
push
jno
sub
mov
mov
ret
or
jl
push
xchg
pop
hlt
test
lds
cld
test
inc
mov
les
sbbl
or
rol
adc
jmp
push
leave
gs
push
pop
stos
bnd
add
jg
sbb
add
add
push
or
int3
mov
adc
add
add
mov
sti
negl
int3
adc
mov
and
add
add
and
clc
js
aas
loope
addl
insl
icebp
cmp
std
lret
loop
or
enter
pop
cwtl
dec
leave
pop
push
lods
or
add
fs
dec
pop
dec
mov
xchg
daa
lahf
jbe
cmp
jnp
mov
punpcklwd
add
int3
rolb
xchg
dec
pop
leave
xchg
mov
pusha
add
add
adc
jecxz
popa
push
pop
pop
dec
cmp
add
add
push
in
push
das
test
out
int3
xor
add
add
int3
ds
pop
inc
repz
dec
cmp
mov
and
adc
ror
mov
add
add
xor
mov
mov
les
pop
adc
add
add
add
hlt
xchg
cs
mov
add
add
jle
movsb
lahf
aas
or
add
add
mov
adc
add
add
push
addr16
jl
jae
out
out
mov
int3
rcll
into
cli
daa
sahf
push
dec
sbb
cli
shlb
cwtl
and
add
add
add
add
out
sub
xor
add
add
add
add
cmp
lcall
cld
shl
xchg
pop
push
test
cmc
insl
sub
add
add
mov
jecxz
in
xor
outsl
sub
push
xchg
insl
or
es
das
mov
mov
sub
aad
push
xor
gs
jg
pop
imul
add
add
shll
mov
stos
lea
daa
inc
add
add
or
fwait
rolb
add
int3
es
sub
loope
ret
aam
test
rcrb
sbb
mov
es
js
incb
leave
int3
push
aam
add
add
add
add
add
jne
fsts
mov
hlt
fdivrl
loopne
movsb
dec
movsb
cmp
push
mov
push
je
fistpll
pop
mov
pop
xchg
stos
adc
lret
or
aam
mov
xor
testb
xchg
lret
aam
arpl
mov
dec
add
add
aam
xlat
dec
push
lret
dec
adcl
outsl
mov
xor
mov
add
imul
out
iret
movsl
cmp
das
inc
inc
aas
mov
add
and
add
daa
xchg
fs
out
push
decl
scas
adc
imul
dec
mov
cmpsb
scas
lock
imul
add
push
addr16
add
add
lods
sub
add
add
test
inc
dec
ljmp
push
popf
hlt
xor
mov
inc
mov
and
dec
aaa
or
outsb
imul
insb
mov
jg
xchg
lcall
out
out
dec
xlat
test
repz
jecxz
fdivrl
add
add
push
stc
aaa
sahf
roll
xchg
cmp
mov
mov
jno
inc
shlb
add
stos
popa
ljmp
loop
mov
sbb
or
jle
dec
jne
mov
clc
aaa
test
out
inc
addr16
push
mov
push
daa
call
inc
add
add
cwtl
push
test
xorb
aaa
cltd
and
out
cmp
adc
inc
add
mov
ss
out
dec
add
add
mov
add
mov
addb
ret
add
add
mov
mov
or
add
add
jno
das
sti
add
adc
add
cli
testl
cmp
into
cmpsb
xor
add
add
push
into
jbe
in
push
orb
xlat
dec
xor
add
scas
sbb
add
mov
dec
mov
sbbl
add
add
test
mov
add
push
dec
mov
mov
mov
add
push
lret
lock
dec
int
loop
addr16
push
sub
add
add
dec
jle
fstpt
in
jno
xchg
test
cmp
push
add
add
roll
add
add
push
mov
cmp
cmp
jne
into
jp
jecxz
push
ret
sbb
pop
push
cli
jl
push
scas
xchg
jbe
cmpsl
out
pushf
xor
dec
add
add
sbb
add
add
lea
mov
cltd
stos
xor
or
xchg
out
mov
mov
mov
jae
dec
inc
cs
xchg
mov
push
jmp
push
and
add
add
mov
and
stos
lods
add
add
add
sub
dec
into
add
add
xchg
pusha
mov
cs
das
add
call
add
ret
das
or
push
jo
iret
outsb
push
jno
sbb
adc
int
pop
sbb
add
loop
mov
pop
addb
lock
xchg
fcomps
pop
adc
dec
mov
pop
aad
mov
and
add
mov
add
call
inc
sbb
dec
and
sub
add
add
enter
and
add
add
fsubs
add
xor
daa
stos
imul
push
mov
sti
mov
dec
add
add
push
mov
add
add
sarl
add
add
add
sbb
test
ret
mov
xchg
dec
repnz
mov
sbb
roll
add
add
ret
push
xchg
adc
push
loopne
xchg
arpl
add
movsb
mov
cwtl
add
add
add
pop
pop
lds
add
push
xor
xchg
ds
push
repz
mov
scas
ljmp
pop
xchg
mov
push
inc
add
or
pop
sbb
add
mov
mov
or
enter
add
xor
sbb
sahf
sbb
push
cmp
add
add
sub
movsl
mov
jnp
pop
add
add
add
pusha
add
add
add
lock
and
pop
shr
push
test
adc
sub
mov
popa
lea
add
add
jbe
in
jmp
leave
lods
call
pop
sub
mov
iret
jns
add
add
mov
add
jno
loope
loope
dec
xchg
dec
add
add
out
adc
add
push
xchg
adc
xchg
fwait
inc
mov
aam
add
add
jp
clc
xor
xor
push
daa
cmpl
pop
or
add
iret
fldl
mov
pop
fwait
nop
fiadds
fwait
mov
out
aad
mov
push
mov
pop
negl
int3
xlat
and
mov
add
add
add
add
pushf
and
daa
insl
xor
enter
push
cmpsl
xchg
sti
cmp
out
ds
shlb
aaa
and
add
add
mov
adc
push
iret
icebp
sbb
mov
imul
add
and
add
add
mov
popf
in
mov
stos
push
icebp
aas
or
mov
out
ljmp
loop
dec
mov
std
sub
adc
xchg
and
add
add
loope
push
loope
sti
mov
jb
sbb
inc
add
add
pop
or
add
add
jb
sti
inc
repnz
pushf
mov
push
push
insl
jg
and
add
add
xchg
repnz
test
sub
loope
test
ret
add
add
cmpb
dec
dec
xor
mov
push
ret
jnp
push
lods
xchg
fidivl
xor
push
dec
lods
dec
in
pushf
mov
add
add
hlt
daa
test
icebp
scas
or
imul
mov
push
mov
jge
xchg
push
push
jbe
inc
arpl
ds
repz
loopne
pop
in
icebp
sub
into
arpl
xchg
addr16
xlat
fisubl
sub
in
mov
xorb
push
jle
iret
test
shrl
inc
add
add
fcomps
mov
faddl
mov
mov
nop
push
push
add
lcall
les
out
bound
add
popa
sbbb
push
rcrb
lret
push
add
into
dec
pop
or
lret
and
insl
push
cmpl
popa
mov
dec
cs
loop
mov
xchg
and
or
lret
out
stc
or
mov
mov
cli
sbb
jnp
add
add
lahf
into
sbb
add
add
in
push
add
mov
pop
mov
int
xor
insl
sahf
cmovle
imul
dec
add
add
jnp
sub
add
add
add
add
arpl
jp,pt
cs
add
sub
lahf
and
dec
mov
out
les
add
add
mov
dec
add
add
out
mov
fisttps
add
add
inc
add
add
mov
addl
test
arpl
add
add
add
xchg
push
test
out
lahf
sahf
dec
in
inc
fimull
add
sbb
shrl
mov
add
add
add
rcr
dec
jl
add
add
xchg
xchg
je
repz
insb
add
add
lds
loop
lret
jbe
mov
mov
sahf
ret
rcrl
jbe
inc
or
push
out
pop
cmc
fcompl
fidivl
out
or
hlt
lcall
add
divb
adc
inc
test
les
push
push
mov
add
popa
ja
lahf
fadds
add
mov
rolb
mov
sbb
add
add
add
pop
xor
add
add
add
add
movsb
out
pushf
cmc
or
add
dec
and
neg
xchg
cmp
mov
sbb
jmp
add
lret
mov
pop
popf
fidivl
iret
jns
rorl
add
in
shll
int
add
add
adcb
aas
mov
sub
add
add
jbe
and
inc
outsb
dec
add
add
cs
push
jns
add
sbb
fnstenv
sbbl
imul
jo
decl
add
rcrl
jg
sbb
mov
xchg
mov
lock
inc
sub
add
add
sahf
dec
mov
nop
outsl
pop
inc
push
inc
jno
int
int
in
out
js
ljmp
sub
add
add
add
jns
add
ret
pop
add
add
add
jno
sub
jle
inc
add
add
xchg
or
out
pop
loope
dec
mov
cwtl
je
mov
ret
or
in
push
mov
add
add
dec
xchg
push
incb
mov
mov
insl
sahf
int3
xchg
add
test
mov
pop
lret
xor
add
mov
pop
je
jp
sub
add
add
jb
sub
mov
add
add
push
into
repnz
and
push
in
mov
cmp
arpl
imul
out
mov
leave
xchg
lock
adc
and
cmp
xor
shr
orl
loopne
adc
jp
pop
bound
fs
jg
add
add
cmp
inc
mov
add
cmpsb
push
ret
xchg
mov
sbb
add
add
add
push
add
add
add
int
ficomps
pop
int3
nop
dec
fistpl
into
bound
add
add
pop
adc
icebp
inc
out
and
lods
sahf
jg
dec
dec
mov
or
add
add
subb
jmp
inc
mov
and
add
push
push
jp
xchg
add
fists
xchg
addr16
push
xchg
xor
cmp
es
jecxz
sub
add
dec
das
jmp
jo
or
add
add
lret
test
fistl
outsb
sub
adc
fwait
pop
push
das
xchg
sub
add
cmp
mov
mov
dec
mov
cmpsl
in
inc
add
add
jg
mov
popf
out
push
insl
popf
aas
adc
mov
mov
mov
push
jo
insb
mov
inc
in
or
lahf
outsb
jnp
sbb
add
add
mov
mov
arpl
pop
dec
add
add
mov
and
bound
into
pop
test
add
sub
add
add
mov
xchg
fisubrl
out
clc
xor
mov
andb
add
lds
fdivrl
rcll
mov
jp
rcl
xor
adc
out
fsubs
mov
mov
xor
add
xor
test
mov
cmpsb
mov
je
sahf
rcrb
in
stos
fdivrs
cli
add
add
add
add
push
xlat
push
stc
fdiv
xor
pop
cmpl
pusha
add
add
jmp
insb
add
add
sub
mov
ret
pop
push
pop
outsl
mov
test
jno
mov
stos
xchg
dec
mov
cmp
fidivrs
sub
lsl
pop
jge
xor
hlt
push
or
add
add
xchg
sti
mov
rorb
repz
and
add
add
push
inc
mov
aas
jns
test
fwait
push
test
push
movl
add
add
and
lods
xchg
testb
test
lret
add
xor
addr16
and
inc
mov
mov
mov
clc
add
fidivrl
mov
mov
cmp
add
decl
lcall
push
das
pushf
das
test
cmpsb
inc
js
add
add
daa
add
add
add
mov
add
pop
ljmp
add
cmpsb
jnp
dec
mov
ds
mov
mov
rorl
test
add
cmp
ja
icebp
call
add
cmp
pop
sete
add
add
cmp
jnp
test
adc
push
sarb
inc
outsl
faddl
adc
sub
sbb
pop
call
adc
xchg
adc
popl
clc
or
mov
pop
xchg
scas
mov
xchg
mov
add
add
daa
cli
xchg
and
xor
in
outsb
dec
add
add
scas
mov
mov
lea
mov
fildll
dec
test
mov
push
xor
repz
mov
sti
lahf
cmp
pushf
adc
push
inc
inc
adc
push
scas
add
add
add
mov
xor
add
add
add
ss
mov
bound
dec
int
mov
nop
je
fstl
mov
mov
add
add
mov
test
adc
add
sti
ret
mov
pusha
mov
aad
mov
xchg
push
js
or
enter
movsl
shll
mov
pop
leave
enter
add
add
jae
inc
jge
xchg
add
add
iret
hlt
insl
fistl
cmp
dec
in
sub
add
add
add
add
add
cmp
and
test
jmp
cmp
mov
inc
mov
cmp
mov
shl
fwait
sbb
xor
xchg
xchg
and
ljmp
int
add
jnp
in
lcall
add
add
outsb
and
lret
push
inc
add
add
mov
dec
outsb
jg
gs
add
add
mov
inc
mov
daa
sub
add
add
or
add
add
rcl
lahf
aaa
xor
add
add
imul
add
mov
jns
mov
popa
inc
cwtl
movsb
or
add
add
mov
cmpsl
shrb
fs
insb
mov
cmp
std
negb
add
pushf
xchg
xchg
mov
loopne
jno
bound
add
mov
pop
cmpsb
leave
popf
mov
adc
jb
adc
dec
into
movsl
push
jne
std
xor
or
add
add
mov
push
lock
or
lds
jns
std
dec
lcall
mov
push
sub
mov
mov
dec
scas
mov
mov
pop
cmp
ficoml
sti
ljmp
add
add
add
or
jmp
xlat
jns
xor
repz
xor
stc
idivl
test
xor
dec
mov
repz
sbb
jg
xchg
pop
fisttps
add
add
mov
push
lcall
or
and
cltd
rcrb
add
or
add
add
or
inc
out
mov
leave
and
add
add
testb
add
dec
ljmp
jb
or
add
add
call
out
jae
lea
mov
loope
add
hlt
jl
inc
jl
and
add
add
mov
fisttpll
fdivrs
movsl
lock
fwait
lret
xorl
jle
jb
mov
cs
and
cmp
inc
dec
in
xor
fadd
repz
jge
mov
sub
xor
cltd
cld
mov
push
stc
mov
cld
inc
or
dec
adc
add
add
js
push
jl
mov
add
sarl
imul
cmp
pop
jp
psrlq
jmp
add
add
sub
jecxz
std
roll
int3
push
push
mov
inc
aaa
push
mov
sub
lods
iret
call
sbb
mov
icebp
lock
pop
aad
jno
pop
es
xor
aad
mov
mov
mov
push
inc
cs
sub
xchg
test
jg
jno
lea
dec
mov
push
sbb
movsl
jbe
push
or
push
fwait
cmp
mov
jno
or
add
add
clc
daa
xor
icebp
ljmp
add
add
sbb
add
pop
sysenter
mov
add
jmp
sub
and
add
add
cwtl
pop
icebp
push
icebp
xlat
mov
add
add
sub
insb
mov
jg
push
mov
inc
ljmp
add
add
fisttpll
jne
sub
notb
mov
repz
add
add
jecxz
inc
add
add
add
dec
push
loopne
cli
pusha
add
add
jb
cmp
mov
sbb
xorl
push
std
mov
cmp
and
mov
test
sub
add
add
icebp
addr16
mov
cmc
or
fwait
popa
popf
add
scas
pop
or
add
or
add
add
push
std
jne
loope
shll
mov
adc
add
loop
and
mov
sbb
xchg
lahf
mov
lret
push
arpl
mov
cmp
shrl
xchg
jl
ss
lahf
mov
or
dec
add
xor
mov
add
add
mov
push
addr16
sbb
add
fldl
fcoml
mov
cmp
ja
rcrb
sub
add
add
push
insb
add
add
mov
bound
push
xor
sub
add
xlat
mov
or
add
add
sbb
adc
mov
jp
push
icebp
lcall
xchg
stos
jle
aam
add
add
jne
movsl
jnp
or
sub
push
push
inc
jmp
cwtl
stos
mov
pop
addr16
xor
rolb
scas
arpl
in
test
add
outsl
mov
test
lret
pop
icebp
dec
xchg
push
clc
movsb
icebp
jmp
jl
cltd
add
mov
push
dec
cmp
add
add
add
add
mov
into
cwtl
movsl
andb
dec
addb
mov
lret
imul
add
sbb
mov
cmp
arpl
and
add
add
rcll
and
stc
sub
cmp
xchg
imul
pop
jbe
mov
mov
inc
andb
ja
in
hlt
popa
bound
add
sub
and
add
jo
in
mov
dec
pop
outsb
add
and
add
add
cld
sbb
mov
js
xchg
cmp
add
add
cmp
sub
enter
testl
push
sub
jecxz
dec
cmp
cwtl
mov
fwait
stos
scas
mov
pop
iret
out
sub
add
add
adc
jge
adc
add
mov
sahf
or
cmp
mov
clc
xlat
ja
sub
add
add
fistpl
jnp
out
insb
mov
add
mov
outsb
pusha
mov
fsts
lahf
test
iret
mov
rcll
push
pushf
pop
push
int
jl
mulb
add
dec
mov
fnstcw
iret
in
push
fisubrl
add
add
xor
sub
add
add
push
sub
add
add
scas
fnstsw
cwtl
popf
adcl
add
cli
popf
push
or
add
add
add
add
rolb
add
int3
in
inc
loopne
fcmovnbe
cmc
pushf
pop
add
add
add
ljmp
mov
add
add
add
test
imul
test
mov
les
shufps
mov
icebp
lods
rol
or
add
add
mov
add
nop
negl
xor
pop
nop
sub
jb
fs
ds
dec
or
cmpsl
mov
add
dec
fdivl
mov
popa
pcmpgtw
inc
add
add
xor
push
pop
movsl
aaa
pop
inc
xchg
fwait
jne
dec
add
add
aam
dec
jl
scas
dec
add
add
lret
out
xor
lods
fldcw
add
adc
cmpsb
out
loope
or
inc
xor
dec
push
cld
jb
xchg
das
lret
mov
ret
pop
dec
add
add
in
adc
xchg
dec
stos
sbb
mov
add
je
mov
jg
movsb
iret
sbb
jmp
lea
jbe
jecxz
arpl
cmpsl
and
inc
ret
or
les
or
lds
mov
sub
xchg
pop
stos
dec
sub
mov
mov
pop
fsubl
xlat
inc
mov
jae
cmpsl
push
mov
movb
addb
add
add
jne
push
gs
push
ja
mov
adc
je
mov
cli
insl
adc
push
push
popa
and
dec
popa
test
jnp
mov
cmp
test
rorl
sub
add
add
add
add
icebp
fldcw
mov
int3
imulb
inc
push
stos
jge
jne
pop
fwait
lds
jg
add
sbb
pop
cmpsl
xlat
es
mov
mov
arpl
add
add
add
mov
jbe
int3
mov
lea
xlat
mov
cwtl
aaa
sub
mov
repnz
pop
push
cs
xchg
adcl
xchg
dec
lahf
pusha
add
add
test
cld
mov
dec
add
add
add
jo
pop
hlt
outsl
adc
cs
add
add
pop
inc
pop
leave
shr
cld
cmpl
cmpsl
cmp
mov
add
cmp
sti
outsb
fstp
xor
call
cld
lahf
rcrl
inc
push
movsl
or
add
add
sbb
dec
push
ficoml
cmp
gs
lods
push
cmp
shrl
fcomi
cs
clc
jmp
inc
adc
dec
cs
sbb
add
xorb
fbld
pop
mov
add
cmpsl
js
xor
add
add
jnp
in
pop
push
sub
imul
add
add
pop
iret
dec
push
lahf
mov
push
addr16
add
add
icebp
xchg
inc
adc
jbe
daa
call
stos
adc
insb
mov
and
mov
js
xchg
shl
sbb
pop
rcrl
mov
das
mov
cwtl
out
mov
mov
idivb
icebp
je
jb
ror
pop
sets
ret
cmp
mov
adc
add
add
fistl
push
jb
popf
loopne
fcoms
fmuls
add
mov
push
xor
xchg
rcl
or
mov
mov
add
add
fimull
repnz
rcrb
sbb
sarb
push
xchg
jb
push
sub
add
add
add
sti
and
add
add
test
and
into
adc
jl
xchg
lds
and
cld
sbb
mov
push
cli
pushf
lock
fwait
adc
sub
aam
push
sbb
fldl
cmc
mov
mov
push
sti
test
xlat
aaa
add
add
add
out
lock
fbstp
sbb
add
add
imull
out
orl
and
xchg
decb
add
sub
shrb
pop
xchg
test
out
jnp
push
add
sub
ds
sub
add
add
xchg
fnstsw
mov
into
add
xor
and
add
add
testb
and
adc
dec
add
ja
pushf
fwait
sti
pusha
add
add
cmp
pop
movsb
mov
or
add
add
mov
out
and
dec
mov
iret
fwait
jp
aaa
sbb
movsl
js
sbb
add
andb
push
outsb
pusha
mov
jmp
add
inc
mov
out
cmp
xlat
jb
mov
adc
xor
roll
popf
sub
jbe
push
repnz
add
cli
adc
outsb
sbb
pop
cld
jb
lahf
aam
cs
out
jae
pop
inc
push
cmpsl
aaa
test
aam
shll
adc
ja
inc
add
add
aaa
cld
mov
ret
cld
outsb
loope
dec
add
add
mov
andb
mov
sub
xchg
test
inc
cmp
add
sub
add
add
add
pop
sub
xchg
jle
ret
dec
scas
mov
sbbb
or
mov
or
add
rclb
nop
fdivl
sub
cmpsb
dec
mov
cwtl
jp
mov
push
xor
add
add
dec
push
ja
mov
jmp
xchg
and
adc
fstl
outsl
push
repz
pushf
xor
add
add
sarl
jbe
mov
hlt
fidivrl
pop
nop
in
push
or
mov
lods
rorl
xor
sbb
outsb
mov
pop
fmull
add
add
add
add
aaa
mov
cmpb
fistpl
out
add
add
sbb
lret
jbe
pop
push
int
xorb
ljmp
xor
stos
or
add
add
add
and
add
add
add
add
in
pop
out
push
mov
mov
adc
mov
add
push
dec
add
add
out
imul
push
xchg
mov
adc
add
add
xor
sbb
arpl
imul
stos
xchg
pop
mov
add
lods
psrad
aaa
aad
ret
or
add
add
push
push
xor
in
lret
push
rcrb
mov
popa
js
das
or
js
xchg
filds
mov
cwtl
cld
jns
xor
lcall
add
add
popa
lock
loope
fdivrp
dec
pusha
add
add
int3
jmp
ja
mov
or
adc
xorl
add
add
add
fwait
mov
xchg
mov
add
sub
cld
aad
jmp
inc
mov
xor
and
push
push
pop
stos
mov
add
add
and
add
add
add
add
dec
fistl
ret
or
add
add
and
adc
int
mov
push
push
pop
xchg
ud1
jmp
loop
movsl
jmp
pop
test
cmp
repnz
cmp
sbb
shlb
movsl
pop
in
popa
add
add
jmp
mov
movsl
mov
xchg
lcall
cmp
pushf
call
sarb
pusha
add
add
or
add
push
adc
dec
daa
mov
test
dec
mov
inc
mov
add
xor
add
add
jae
nop
int3
addb
push
js
enter
and
add
add
sbb
push
cs
icebp
lcall
pusha
mov
decb
add
test
add
push
xchg
push
mov
cwtl
cmp
add
add
sbb
xchg
pop
and
dec
mov
lds
repz
push
xor
movb
xor
pop
aas
adc
fstpl
mov
jne
fsubrs
mov
add
push
in
pop
stos
cs
push
movsl
pop
mov
mov
add
dec
mov
test
in
mov
in
dec
inc
and
add
add
add
repz
xor
push
adc
pushf
data16
into
out
cld
cwtl
jns
fsts
jmp
push
cmp
add
add
xor
dec
ljmp
mov
add
add
dec
add
add
add
inc
xchg
ficoml
jp
lret
and
movsb
xchg
pop
dec
add
add
adc
dec
add
add
jp
dec
aam
and
add
add
sub
adc
add
inc
jp
fstl
aas
jmp
dec
push
enter
sti
in
and
add
add
mov
outsl
jg
mov
loope
pop
push
dec
push
insb
mov
out
daa
in
stos
daa
mov
es
add
add
adcb
mov
sbbl
das
push
sarl
add
cmp
mov
jne
mov
test
test
mov
add
add
js
mov
lret
shrb
pusha
add
add
and
add
add
xor
pop
orl
push
adc
aaa
push
add
cmpsl
je
mov
scas
out
pushf
dec
ret
mov
sti
sbb
push
dec
mov
sbb
jmp
add
add
mov
test
or
xchg
int
add
add
xor
mov
xchg
fcmovbe
popw
lret
inc
mov
add
add
pusha
mov
adc
pop
enter
xor
ds
xlat
lahf
or
fsubp
mov
add
add
faddl
add
add
dec
pop
mov
mov
daa
cmp
ds
sbb
in
dec
mov
mov
mov
mov
idivl
cld
cmp
add
pop
rcrb
or
xchg
and
loop
hlt
sub
add
add
or
das
test
negl
and
popa
jge
add
add
add
mov
in
dec
mov
lcall
add
push
add
mov
push
inc
cld
loop
push
cmpsl
inc
mov
aaa
lret
sbb
imul
mov
mov
inc
cs
add
add
mov
insl
mov
push
jb
lods
mov
js
cmpsl
cmp
adc
add
mov
jle
xor
adc
add
add
rorl
xlat
or
xor
shll
loop
or
add
dec
loope
mov
jp
outsl
add
add
add
shrl
and
cmp
add
ret
pop
add
add
add
xchg
or
add
add
cmp
repz
xor
insb
add
add
xchg
cltd
cmp
cmp
xor
out
call
addb
mov
in
mov
sar
push
sub
add
add
sub
add
add
add
jg
jge
mov
lea
add
add
dec
negb
sbb
inc
cmc
shlb
lcall
lret
pop
shrb
das
pop
and
add
add
add
push
xchg
xchg
call
cmc
les
in
in
add
add
add
add
add
subl
inc
rclb
add
cltd
addb
inc
mov
mov
mov
or
add
movsl
xchg
dec
ret
push
cld
repz
push
push
inc
mov
mov
stos
fwait
insb
mov
or
mov
push
out
and
xor
lcall
fstpt
roll
add
add
jne
cwtl
inc
jns
mov
test
mov
mov
or
pusha
add
add
dec
add
add
test
mov
lret
int
fidivs
and
inc
xchg
out
fisttpl
dec
pcmpeqb
xchg
jmp
adc
push
pushf
shl
call
dec
fwait
pop
stos
push
mov
aaa
xchg
push
adc
add
add
xor
in
mov
add
add
rclb
in
ds
push
shrl
dec
push
int3
std
add
mov
test
sub
popl
mov
add
add
mov
fdivl
cmp
test
or
add
add
xlat
pop
pop
mov
sbb
add
inc
mov
adc
or
add
add
daa
popf
push
inc
pop
mull
add
add
sbbb
daa
mov
xor
sub
add
add
pushf
xor
add
mov
pop
inc
cmp
jo
pop
repz
jns
add
xor
jae
hlt
popa
push
mov
add
ss
negb
add
add
das
andl
mov
jb
in
rorl
add
add
xor
add
leave
jbe
push
std
pop
pop
sbb
add
and
bound
inc
cmpsl
adc
stos
jmp
es
mov
enter
dec
sbb
addl
cmp
int
imul
ss
push
ljmp
mov
cltd
xor
ficoms
xchg
jmp
mov
cld
fneni(8087
lcall
test
push
or
cmp
and
and
and
add
add
pop
inc
popa
dec
xchg
das
les
xchg
mov
push
push
push
test
fisttpll
faddl
out
ficoml
or
mov
sub
xchg
dec
add
add
sbb
cmp
and
add
add
int
icebp
adc
lea
add
add
add
test
jg
nop
adc
add
xchg
out
mov
sub
aaa
js
adc
add
add
and
js
cld
sbb
popf
mov
jae
xor
add
add
add
add
push
and
mov
cmp
mov
jnp
lods
and
aaa
xchg
jae
jp
es
enter
cmp
cmp
adc
test
mov
mov
add
push
mov
push
push
xor
add
add
mov
lds
add
sub
add
add
ljmp
sub
inc
jg
pop
in
les
mov
lock
adc
or
sub
add
add
cmp
fwait
sub
add
add
in
ljmp
add
add
jbe
and
add
jb
ljmp
aad
push
pop
mov
push
imulb
mov
loopne
sahf
dec
scas
adc
pop
fdivs
add
dec
mov
mov
mov
testb
add
lds
stc
or
add
add
add
das
mov
les
add
xchg
cmpsb
and
leave
int3
hlt
outsb
push
popa
inc
mov
or
sub
add
add
mov
out
adc
movsl
test
cmc
out
in
hlt
in
stos
xor
movsb
mov
add
add
mov
outsl
loope
leave
mov
add
sub
add
add
pop
mov
movsl
mov
mov
sbb
pop
repnz
mov
jbe
dec
pop
pushf
dec
mov
outsl
shll
fnsave
shlb
call
lock
inc
hlt
aaa
aaa
and
add
add
push
and
daa
push
or
inc
jg
negl
pusha
add
add
mov
and
shlb
sar
fisttpll
add
mov
fcoml
rcrb
roll
or
sub
xor
mov
or
add
add
repz
push
lods
adc
pop
jnp
jg
mov
roll
ror
js
call
loope
mov
stos
and
jne
fildl
add
lods
cmp
mov
add
add
mov
add
add
push
daa
xlat
sbbl
adc
mov
mov
cmpl
cwtl
xchg
inc
adc
std
adc
jl
cmp
scas
fucomp
mov
mov
aam
sub
add
add
test
dec
idivb
jb
adc
add
add
add
add
loopne
insl
and
cmp
push
jbe
push
lock
xor
dec
mov
sbb
fcmovnu
scas
loopne
sbb
add
add
insb
add
add
pop
lods
and
sbb
ljmp
jge
add
add
mov
dec
inc
and
xchg
mov
jmp
aam
push
jb
xchg
xchg
xchg
or
add
add
add
add
or
mov
dec
mov
ljmp
fwait
jns
xchg
pop
into
mov
icebp
mov
cmp
out
test
rclb
sti
rcrl
jecxz
aam
sbb
jle
dec
in
pop
or
loopne
mov
add
add
mov
or
add
add
push
iret
int
js
cmpsl
popf
stos
inc
pop
cltd
jns
fucomp
lcall
add
add
mov
jl
repnz
dec
xchg
inc
jb
gs
mov
and
aad
js
pop
xchg
cmp
mov
xchg
xor
test
add
mov
aaa
arpl
dec
and
icebp
out
jbe
sub
mov
add
in
ss
popf
xchg
outsl
bswap
out
xorb
mov
mov
hlt
or
ds
ds
repz
out
and
sahf
inc
mov
in
mov
push
jns
pop
jp
incb
cmp
jo
add
add
add
dec
jns
sub
adc
sbb
xchg
jge
rclb
mov
repnz
adc
adcl
shl
pop
mov
aaa
cld
movsl
dec
xor
jae
sbb
mov
mov
push
push
sbb
decb
add
add
pop
call
lods
xor
or
add
add
mov
cmpsl
in
lock
lods
xchg
jle
popa
push
test
fmull
popf
cmpsb
xchg
pmuludq
mov
cltd
cwtl
push
xchg
sbb
add
add
cmpsl
fidivrl
aam
sub
add
add
push
lds
lahf
cli
int
gs
xchg
out
jmp
aad
fisubl
inc
add
add
cltd
xor
pop
arpl
pop
pop
loopne
jge
adc
dec
lea
js
into
cmc
or
add
add
lock
pushf
fs
imul
cmp
call
inc
inc
cmc
scas
sbb
popa
sbb
ja
sbb
lods
or
xchg
lret
cld
inc
jmp
or
add
add
jle
mov
ss
pop
add
stos
xor
push
xor
or
or
push
subl
xchg
adc
les
icebp
push
mov
cmpsb
jle
fisttps
add
add
adc
push
cwtl
push
sbb
dec
or
adc
add
add
outsl
mov
mov
mov
mov
std
test
lcall
cs
gs
rclb
add
add
orl
shr
add
add
add
jecxz
add
add
cmp
adc
mov
or
add
add
mov
int3
outsb
shlb
mov
mov
sbb
push
mov
xchg
cmp
push
mov
xchg
push
push
cmpsl
mov
jae
sar
call
negl
out
xlat
sbb
cmp
push
mov
mov
xor
setns
xchg
jmp
add
add
inc
aam
and
add
add
repnz
pop
lret
adc
add
add
lret
adc
ret
das
mov
add
dec
fwait
add
add
adc
ja
push
sbb
rorb
pop
cld
dec
shlb
test
movsb
jnp
cmc
add
jp
add
add
ret
adc
mov
popa
or
add
add
bound
add
add
mov
dec
mov
or
movsb
imul
subb
add
dec
add
add
add
xchg
packssdw
add
add
inc
aam
add
jecxz
mov
fimuls
and
mov
inc
add
add
addr16
cwtl
jae
sti
inc
lock
jno
scas
pop
xor
cld
cmp
das
adc
and
add
add
cmp
add
push
dec
jg
pop
aas
fs
add
add
add
cli
inc
adc
push
dec
mov
mov
out
ret
je
cmpsl
cli
push
mov
inc
push
pop
clc
and
jo
add
repnz
add
or
ret
and
add
add
add
adc
push
xchg
mov
cli
jge
mov
xchg
push
pop
mov
js
add
add
fsts
test
add
add
add
sbb
je
sub
add
add
cmp
jle
add
mov
add
add
ret
out
test
mov
add
adc
test
lcall
add
imul
add
add
add
add
fdiv
push
std
mov
jo
or
jo
push
and
xor
mov
jbe
mov
dec
cmpsl
push
inc
mov
add
add
cmp
pop
loop
fnsave
cmp
cmp
mov
xlat
lahf
mov
mov
adc
nop
pop
sub
cmpsb
sbb
hlt
xor
das
ds
insl
outsb
mov
loopne
rolb
iret
mov
sub
add
sub
add
add
mov
je
movb
mov
add
fcmovnu
pop
adc
adc
test
out
iret
xchg
jnp
dec
add
add
ja
pop
sbb
das
test
leave
push
cmc
pop
pop
ds
sub
xchg
or
sbb
push
add
orl
xlat
xor
inc
daa
sbb
aad
mov
push
stc
dec
les
loopne
add
add
icebp
dec
add
add
adc
or
add
add
pop
fistps
imul
shlb
jmp
mov
aas
dec
or
add
add
mov
and
sahf
mov
dec
nop
pop
and
push
outsb
pop
popf
and
mov
clc
scas
sbb
add
movsl
push
push
repz
cmp
mov
outsl
jg
push
lods
fwait
bound
add
repnz
cwtl
add
je
jge
loop
mov
add
add
in
out
loopne
inc
stc
sbb
add
mov
xor
stos
rcr
xchg
fsubrl
mov
pushf
inc
and
mov
jb
xor
pushf
andb
int3
repz
icebp
mov
out
out
or
add
add
jecxz
movsl
pop
movsl
lret
sub
add
add
cmp
mov
rcll
bound
mov
mov
sbb
loop
xchg
pushf
and
mov
imul
cmpsb
xlat
mov
lds
data16
mov
stos
sub
add
add
in
sub
cmpsl
jg
cli
add
sbb
scas
mov
lds
iret
sub
push
out
push
scas
cmpl
fbstp
or
add
add
add
jge
addb
out
pop
lret
scas
push
dec
adc
lods
cld
sub
and
sbb
bound
add
add
cs
mov
add
add
insl
sbb
imul
int3
cmp
arpl
jnp
clc
test
add
add
into
les
or
mov
insl
dec
xchg
dec
xchg
ss
cmp
enter
sahf
push
stc
adc
gs
test
adc
dec
or
mov
mulb
add
mov
add
ret
mov
test
add
add
mov
add
popf
test
add
add
cs
test
sbb
add
add
bound
inc
setg
or
add
add
das
fistpll
movsl
gs
add
add
add
fildll
lret
pusha
mov
cmp
leave
mov
add
add
movsl
testl
add
mov
add
xchg
int
cmc
mov
xchg
xchg
lret
cld
add
add
add
push
push
sbb
add
jmp
lods
push
xor
sbb
jae
xchg
xlat
dec
aad
scas
daa
mov
iret
dec
fsubl
mov
mov
addr16
pop
pop
mov
cs
mov
mov
xor
add
push
sub
adc
movsl
pop
test
pop
jmp
pop
xorb
shr
or
add
add
add
add
gs
loop
or
cmc
lds
add
add
or
fs
add
xor
add
xchg
pop
jle
je
inc
cltd
clc
jnp
cmp
add
add
je
js
and
add
and
add
add
repnz
pop
push
dec
pop
mov
fs
push
push
xor
out
xchg
add
add
add
push
jo
insb
add
add
cli
cmp
cmp
mov
xchg
sub
add
add
add
out
or
cmp
add
inc
dec
jecxz
js
nop
cli
mov
inc
xchg
xor
jne
stc
out
dec
es
or
movsb
rorl
mov
xchg
lods
std
or
adc
push
and
add
adc
pop
push
lds
fwait
loop
dec
test
push
or
add
add
mov
lahf
aas
ret
mov
cmp
xor
lea
sub
xchg
icebp
sbb
pop
and
lds
xchg
hlt
push
sbb
lcall
mov
push
hlt
push
daa
iret
dec
cs
add
add
das
add
add
add
add
cmpsb
inc
in
adc
mov
lds
xlat
or
cmp
jge
rcrl
add
out
leave
push
subl
mov
in
xlat
sub
add
add
fnstcw
mov
mov
movb
add
add
add
aas
push
es
ljmp
iret
fildll
cmp
scas
push
pop
or
fiaddl
add
add
adc
jge
sub
add
add
mov
nop
jp
add
add
outsb
mov
add
test
jo
dec
test
mov
mov
dec
mov
pop
lret
xor
add
cs
inc
repz
mov
add
push
nop
aam
shrl
daa
dec
add
add
jle
outsb
sbb
sub
add
add
mov
int
mov
cltd
push
test
dec
xchg
cmp
pop
lods
sub
add
add
mov
stos
pop
dec
mov
jmp
xlat
cmp
loop
xor
mov
lock
cmpsb
ja
sub
int
and
mov
imul
lods
in
xchg
mov
fs
in
fldcw
adc
orl
push
cmp
out
add
add
in
pop
in
rcl
add
add
movb
cwtl
addr16
push
sbb
out
mov
mov
dec
push
imul
or
mov
add
pop
sub
mov
out
lahf
stos
ret
loop
cmp
sub
add
add
mov
cmpsl
push
add
cmp
ficomps
sbb
or
sbb
mov
add
add
or
add
pop
repnz
lcall
add
add
data16
add
add
mov
fldl2e
fbstp
add
jecxz
mov
add
int
xchg
fnsave
add
sub
xor
push
shrb
insb
mov
lock
shl
and
rolb
push
sbb
inc
push
mov
lcall
sbb
xor
dec
add
add
inc
mov
mov
fwait
in
out
jno
arpl
test
outsl
cs
lahf
cmp
pop
dec
cmp
cld
or
popa
mov
lcall
cltd
jecxz
inc
sub
add
add
inc
clc
xchg
dec
inc
mov
fcomps
cmp
stc
ds
mov
inc
shrl
cmp
add
add
add
adc
xchg
nop
rorl
aam
sbb
add
xor
mov
jns
lea
add
add
add
imul
pushf
nop
add
add
and
xor
add
add
rep
leave
mov
in
ret
insl
or
in
out
xor
iret
nop
scas
mov
mov
pop
and
add
add
jb
sar
jp
loopne
push
out
sbbl
das
xchg
hlt
subb
mov
add
mov
xchg
das
in
mov
cmp
add
add
add
movsb
mov
add
adc
add
add
lods
outsb
fiaddl
inc
add
lods
in
mov
add
add
pushf
sti
fidivrs
in
add
dec
add
add
ds
inc
lods
sahf
pop
mov
add
inc
jecxz
pop
in
mov
mov
mov
mov
fcmovbe
scas
jle
jg
push
sar
cltd
add
add
add
cmpsl
rorl
add
addr16
int3
pop
cmc
dec
mov
add
add
cld
push
das
rol
adc
test
add
add
mov
stos
sub
subb
lcall
loopne
mov
push
push
dec
sub
mov
pop
jno
sarb
mov
popf
bound
jns
cld
adc
stos
and
add
add
mov
or
add
add
popf
xor
stos
xchg
cwtl
push
push
cmp
cmpsl
xchg
jno
insb
mov
ja
data16
add
add
flds
mov
mov
mov
jne
xor
mov
mov
add
xor
lds
outsl
mov
add
jge
sub
add
add
fstpl
sub
add
and
xor
addr16
out
cs
loop
adc
mov
arpl
subb
add
enter
add
jbe
shlb
push
push
jb
cli
dec
mov
lret
decb
add
add
cmc
testl
mov
add
add
imull
dec
add
add
mov
in
in
faddl
push
ret
insb
add
add
add
js
jb
or
icebp
pop
cmp
mov
jp
xchg
ljmp
ror
outsb
mov
mov
movsb
jmp
cmp
in
sbb
movsb
sub
sub
bound
mov
sub
xchg
xchg
out
mov
adc
xchg
in
cwtl
xchg
cmp
scas
jno
lret
lock
mov
es
adc
mov
out
or
xor
movsl
test
insb
mov
push
inc
addb
jp
shlb
push
jl
ret
jns
int3
add
cmp
mov
adc
mov
add
add
add
xchg
mov
add
pop
mov
out
loop
sub
add
add
inc
add
add
push
xor
add
gs
adc
jb
int3
jmp
or
or
in
movsl
adc
adc
mov
dec
mov
enter
add
add
pop
lock
cmpsb
pop
inc
xchg
xchg
add
rolb
arpl
outsl
frstor
loop
rorb
ds
push
xchg
push
ja
cmp
lcall
cmp
out
call
add
mov
xchg
arpl
add
add
add
bound
shrl
adc
mov
and
add
add
xchg
dec
xor
adc
push
sub
add
add
mov
jmp
int
mov
fidivrl
aad
ret
stos
popf
adc
mov
pop
jg
imul
stc
hlt
out
enter
pop
lods
leave
jae
inc
sahf
xor
sbb
daa
cmp
add
mov
fstl
cmp
andl
add
cmp
sub
add
add
ss
inc
popf
popa
push
arpl
add
add
mov
mov
sub
xlat
fcoms
mov
xchg
dec
add
add
xlat
sbb
sub
mov
lods
push
cmp
cmpsb
or
jno
pop
fistl
pop
mov
add
lea
xor
add
cmp
mov
push
lcall
cmp
mov
add
lods
mov
std
scas
out
popl
add
add
push
sar
std
mov
into
cmc
aas
sbb
fsubr
sub
scas
jg
stos
fmul
cld
shl
adc
xlat
xchg
adc
in
xchg
mov
ffree
pop
fbld
sub
inc
mov
ret
rolb
inc
popf
cmp
mov
popf
and
insl
cmpsl
push
inc
lds
inc
xchg
adc
xlat
repz
jmp
cltd
movsb
imul
fldl
enter
mov
mov
aas
jbe
jg
or
outsl
cmpsb
ss
xor
mov
add
add
jp
and
imul
test
imul
add
lods
xor
mov
jne
add
add
decb
cs
or
mov
and
ja
outsb
jecxz
mov
rclb
test
pushf
je
mov
addr16
push
jbe
repnz
ficomps
push
sub
popf
cli
and
add
add
dec
jbe
adc
imul
pusha
mov
jns
inc
sahf
or
int
push
pop
andl
fmuls
xchg
cs
jp
imul
nop
mov
mov
xor
cmp
add
add
mov
add
add
inc
les
cs
lret
ret
sbb
in
je
and
mov
outsb
add
add
adc
push
insb
add
add
fdivrl
les
add
enter
mov
call
stc
fdivr
into
xor
xor
add
fs
loope
rol
inc
xchg
mov
dec
lds
mov
es
popa
xor
add
ss
mov
divb
cmpsl
xchg
sbb
add
add
mov
lock
in
fs
inc
test
sub
mov
mov
jne
mov
fsubrs
aaa
enter
sahf
loope
mov
add
idivb
mov
addr16
inc
in
pop
push
push
push
jnp
in
mov
roll
repz
add
add
shrb
out
dec
les
cwtl
in
sub
int3
daa
je
aam
sub
gs
fwait
loope
cld
test
lds
xchg
rcl
lods
add
add
cld
mov
push
scas
xlat
popa
hlt
testl
mov
ficoms
xor
mov
sub
repnz
mov
movsb
push
aas
mov
jnp
inc
add
add
enter
xchg
int3
idivb
vmread
mov
push
es
pop
adc
leave
xchg
sbb
or
add
add
mov
leave
clc
outsb
test
roll
out
push
ret
mov
inc
mov
stos
je
cmp
sub
add
add
xchg
mov
add
mov
call
add
add
push
mov
jae
sbb
add
jge
adc
push
fabs
cmp
jl
lret
out
jae
lret
mov
jl
out
test
ret
jae
mov
mov
movsl
push
inc
mov
add
sahf
out
push
xlat
daa
sti
data16
jo
inc
divl
mov
cs
in
ret
add
add
les
xlat
mov
cmp
sbb
js
and
add
add
dec
cmp
jge
adc
clc
xor
lds
outsl
xor
std
inc
pop
sbb
outsb
dec
hlt
xor
add
add
add
sub
add
add
popa
into
stos
mov
negb
add
movsl
inc
loope
dec
add
add
xor
jb
dec
mov
add
add
jmp
imul
stc
fistpl
add
popf
xor
push
test
insl
ja
pop
ror
lea
sbb
cmp
push
aam
lret
mov
pop
scas
pusha
mov
xchg
lock
pop
test
dec
add
add
scas
loope
add
add
cmpsb
adc
sete
jo
xchg
pop
repz
inc
add
add
jp
mov
inc
fbld
sub
jle
pop
cmp
mov
lds
loopne
and
mov
ficompl
cltd
fnstcw
push
pop
fs
mov
push
cli
dec
pop
ja
ret
aas
fnsave
sbb
mov
add
add
fwait
xchg
inc
add
add
or
add
add
xchg
call
add
fcoml
add
add
mov
add
mov
mov
add
stc
cmpl
popa
enter
cwtl
lock
jp
imul
sbb
mov
cld
lods
push
lahf
ss
sbbl
int
pop
adc
add
add
nop
in
mov
test
push
inc
sub
subl
loop
out
push
mov
mov
scas
add
in
lods
cmp
add
insb
mov
push
add
add
add
add
add
mov
push
sete
jl
fcmovu
fs
rolb
add
add
sbbl
xor
out
insb
mov
xchg
call
jmp
js
sub
add
add
aaa
mov
xor
xchg
out
sub
outsb
jno
ljmp
dec
pusha
add
add
pop
or
xor
sarb
aam
into
adc
mov
cmp
dec
inc
mov
sbb
and
sbb
jl
mov
add
add
mov
add
lods
sti
lret
fisttpll
push
add
add
insl
add
cmpsb
lods
adcl
cmpsl
je
pop
ja
out
test
add
jne
jg
sbb
add
jns
cmc
movsl
mov
test
mov
mov
aas
out
xor
mov
mov
add
ja
daa
test
mov
and
dec
ja
cmp
add
lcall
ficomps
popf
sbb
mov
and
add
add
add
add
add
adc
cwtl
jg
pop
bound
mov
dec
pop
jg
fistps
dec
mov
test
inc
add
add
mov
movsb
sbb
or
add
add
jne
loop
daa
rorb
jnp
test
repz
daa
out
mov
jge
pop
inc
add
add
cmpsb
dec
mov
add
jne
pushf
es
sub
xchg
shr
adc
add
push
cmpsb
dec
mov
add
add
xor
add
add
add
add
lds
push
mov
mov
mov
mov
mov
sub
lods
push
mov
push
lret
lret
test
aam
daa
adc
iret
imul
icebp
les
outsb
xchg
lea
shll
imul
divb
cld
cld
xchg
or
cmp
adc
sbb
insl
loope
clc
fisttpll
dec
cmp
sub
mov
aas
in
std
inc
push
and
xor
cmc
shll
xchg
stos
dec
mov
into
arpl
sub
or
mov
out
mov
mov
mov
jne
fucomip
jns
add
mov
sahf
xchg
push
push
fidivs
dec
add
add
sbb
pop
addb
sub
or
mov
and
pop
fbld
add
mov
rorb
loop
push
dec
jge
call
dec
add
add
pusha
mov
aas
gs
pop
lods
ret
imul
add
sub
add
add
jmp
fisttps
cs
mov
inc
sbb
pushf
mov
leave
jnp
ficoml
add
mov
sbb
lds
add
lcall
add
add
mov
jae
sub
add
add
cmp
inc
mov
movsl
pop
das
test
fldenv
fcoms
jo
xlat
jae
jnp
mov
add
add
xchg
lock
inc
sbb
ret
pusha
add
add
jg
cli
pop
int
punpcklwd
jbe
adc
cmpsb
movsl
pop
fwait
arpl
mov
popf
pop
dec
mov
and
xor
add
add
add
rorl
add
dec
jo
rclb
aas
mov
mov
das
mov
jbe
cmp
fwait
mov
ja
xchg
sbb
xor
daa
ss
sub
add
fwait
mov
add
ds
fldl
into
pop
repnz
or
out
lock
in
and
ljmp
add
jp
enter
adc
mov
add
add
xchg
sbb
add
mov
les
dec
daa
sbb
jp
add
add
dec
add
add
mov
push
jmp
add
xchg
gs
movb
add
jnp
rolb
notb
sub
mov
cmp
loope
mov
mov
mov
popf
push
xor
pop
mov
gs
les
mov
sub
dec
xchg
add
push
jge
pop
push
insl
sub
hlt
cmp
cmp
testl
mov
add
xor
inc
and
add
add
test
subb
testb
insl
aaa
lcall
pop
and
inc
sub
inc
aam
jecxz
andb
jne
ds
cmpsb
sbb
mov
inc
cmp
in
adc
push
add
repnz
mov
inc
andb
sbb
push
xchg
mov
fildll
pop
mov
out
fisttpl
out
movsl
cmp
lret
gs
push
sahf
jne
int3
nop
push
mov
mov
aaa
jnp
pop
into
or
add
add
das
cmpsl
jge
sahf
out
cltd
outsb
sub
lahf
mov
lahf
jb
pop
clc
movsl
outsl
ds
mov
mov
scas
and
mov
js
stos
es
push
mov
add
add
sub
gs
aas
xchg
push
pop
sub
sbb
xchg
sar
and
mov
es
jmp
xchg
aas
add
jl
ret
or
arpl
in
es
mov
pop
out
outsl
add
add
add
xor
inc
mov
outsl
lret
loopne
cmp
mov
add
add
xchg
popa
mov
add
add
xchg
or
jne
into
cld
aaa
lret
jle
call
push
setns
popa
outsb
hlt
pop
or
add
add
mov
add
add
cmp
dec
push
add
mov
inc
add
add
push
fadd
repz
das
and
inc
ds
push
mov
mov
add
add
lea
add
movsb
ss
push
icebp
push
loopne
mov
jmp
mov
push
clc
push
dec
add
add
xor
mov
ret
hlt
outsb
jl
and
mov
out
xor
mov
add
lret
fisttpl
add
add
jecxz
rcrb
add
imull
push
mov
inc
andl
aaa
xchg
test
add
add
in
js
mov
push
or
add
add
repz
cmp
or
mov
jbe
fdivl
rcrb
cmc
subb
mov
pop
les
shll
and
clc
cld
ja
mov
mov
add
add
rep
sub
dec
add
add
add
add
js
jb
pop
xor
and
add
imul
ret
xchg
mov
sti
jge
push
sahf
sbb
mov
push
cmp
enter
aaa
add
sub
mov
imulb
test
push
cli
adc
inc
daa
xor
aad
cmc
xlat
rcll
andl
add
add
add
mov
cmp
les
cmp
xchg
pop
psubw
xchg
mov
cmpsb
dec
fwait
loope
push
outsl
mov
mov
loopne
push
mov
popa
jle
in
dec
inc
dec
adc
pop
into
insb
mov
negl
xchg
jbe
add
ficompl
scas
imulb
add
stc
push
fisubrs
add
add
add
add
add
sbb
popw
sbb
loope
add
add
pop
mov
jge
xor
pop
inc
add
add
add
add
inc
or
movsb
inc
mov
test
add
add
mov
pop
xchg
inc
lea
lods
scas
in
iret
dec
mov
lahf
test
fs
push
fwait
ds
cld
jno
or
cmpsb
mov
xchg
ret
jl
cli
xchg
pop
scas
aas
shlb
mov
jns
std
fistpll
add
dec
mov
push
sbb
pop
mov
sub
aaa
cmc
sbb
cmp
xor
aas
jo
clc
arpl
add
add
sbb
add
rorl
loop
mov
pushf
lret
cmp
idiv
int
enter
or
add
fistps
mov
ret
jge
fs
push
xor
andl
leave
sahf
add
add
add
ret
add
add
mov
mov
and
ret
pop
and
pop
adc
inc
clc
mov
pop
cmp
into
js
cwtl
ret
pop
int3
dec
add
movsb
cld
mov
loope
adc
dec
in
cltd
cmp
add
and
pop
xor
push
xor
pop
push
adc
sub
add
add
xchg
xchg
xchg
xchg
aad
dec
add
add
das
jne
jge
mov
notb
mov
add
add
mov
in
ja
xchg
add
add
or
loop
sub
mov
mov
pusha
add
add
sbb
add
xchg
xchg
push
push
gs
jle
cmp
rcll
add
jbe
sub
add
add
add
pop
pop
adc
add
mov
cli
ret
mov
mov
fstl
sbb
sbb
sub
out
and
mov
mov
stos
xor
mov
lods
pop
xchg
mov
cwtl
rcr
jle
mov
adc
loope
scas
adc
sbb
sbb
adc
push
sbb
es
imul
sbb
jp
mov
push
jecxz
push
or
idivb
mov
jecxz
loop
es
out
call
sahf
nop
push
push
lcall
lahf
scas
movsb
mov
mov
addr16
lcall
cmp
jge
lock
fwait
jb
sub
inc
add
add
mov
mov
jns
xchg
jae
test
pop
add
add
add
inc
add
add
add
mov
mov
pop
sarb
adc
add
dec
and
add
add
imul
add
add
cmp
pushf
push
and
mov
out
pop
mov
lahf
cmp
lea
inc
mov
mov
mov
testb
add
jecxz
in
cmpsl
and
ljmp
add
inc
mov
mov
add
rolb
mov
pop
fsubrp
out
adcl
mov
pushf
dec
mov
xchg
inc
mov
mov
mov
adc
xor
ss
rolb
rorl
add
add
add
fistl
test
mov
mov
fwait
sbb
add
mov
pop
daa
xchg
xor
pop
inc
mov
jle
xor
dec
jne
pop
shll
in
das
mov
daa
test
aas
idivl
xchg
dec
mov
testl
add
xchg
inc
fcoml
lea
add
add
sub
stc
pop
mov
add
es
cmpsl
je
xchg
jnp
std
sub
jae
add
loope
mov
out
mov
inc
add
add
or
push
lcallw
inc
pusha
add
add
adc
les
popa
neg
cmpsl
sbb
scas
sub
add
add
mov
xchg
sbb
shll
out
sbbb
jno
fsubl
add
in
adc
mov
push
jbe
ja
add
add
inc
rolb
xchg
push
fdiv
cwtl
lock
or
add
add
mov
dec
mov
sbb
add
add
push
scas
push
test
add
pop
jmp
dec
sub
inc
add
add
mov
test
int
mov
xor
xchg
adc
cmp
les
xor
inc
push
hlt
sub
mov
or
add
add
sub
outsb
mov
add
add
arpl
add
imul
add
add
inc
push
adc
lock
add
add
popa
sbb
mov
add
add
insb
add
add
icebp
dec
lock
dec
add
add
adc
int
mov
add
push
push
jnp
imul
xchg
sbb
mov
xlat
jge
or
add
add
add
add
in
imul
add
add
les
add
add
add
shll
pop
pushf
push
out
outsb
rcr
int3
pop
xor
insl
cli
iret
mov
mov
cmc
test
je
mov
mov
std
sahf
imull
add
add
add
inc
pop
fadds
xchg
cmp
bound
jle
push
inc
mov
mov
pop
xchg
loopne
xlat
mov
mov
dec
add
add
outsl
sti
add
add
add
add
add
add
add
mov
add
add
stos
mov
mov
mov
and
insb
mov
lea
into
aaa
fbstp
jno
and
add
add
subb
in
and
add
add
push
fidivrs
add
add
cvtdq2ps
push
cltd
into
fsubrp
mov
orb
inc
insl
dec
pushf
data16
sbb
incb
call
sbb
add
add
add
bound
add
dec
mov
pop
xlat
adc
add
adc
and
cmp
push
jns
dec
push
push
mov
lock
adc
out
mov
scas
and
add
add
pushf
mov
out
outsb
add
add
imul
mov
mov
sti
dec
decb
add
add
push
test
in
in
fimuls
add
lcall
add
or
add
add
or
adc
mov
stos
cmc
ds
in
pop
gs
test
add
scas
repz
sbb
imul
cmp
dec
es
mov
push
pop
xchg
push
push
sarl
pop
cmp
add
add
lahf
dec
add
add
adc
xchg
daa
cmp
mov
sbb
inc
sahf
mov
mov
lret
scas
sahf
je
add
add
outsb
jl
mov
jp
mov
sbb
mov
loope
add
add
into
movsl
fildll
lret
lret
fwait
sub
add
add
add
inc
mov
rol
xchg
xchg
mov
in
or
jo
data16
mov
fmul
addb
add
add
add
mov
xchg
adc
loop
push
jl
mov
dec
sbb
outsl
rcl
cmp
add
xchg
push
jmp
jge
add
sub
add
add
stos
sub
add
add
add
fcmovu
stc
outsl
add
ss
arpl
add
add
add
sub
scas
mov
add
lahf
push
add
mov
cld
push
pop
stc
mov
lock
outsl
cmc
dec
xchg
inc
xor
rorl
add
add
rcrb
test
cli
xchg
xor
sbb
into
sbb
dec
mov
xor
sub
add
add
dec
cmc
sbb
add
add
dec
mov
or
add
add
xchg
arpl
aaa
sti
push
lret
jle
je
incb
mov
mov
add
scas
data16
fbld
dec
negl
arpl
pushf
jne
imul
add
add
loop,pt
fldcw
lcall
push
dec
mov
add
mov
jns
repz
add
add
test
fcmovnb
add
xchg
adc
add
add
push
and
insb
add
add
scas
mov
jbe
adc
push
in
pop
push
push
movl
and
add
add
jo
lea
mov
aaa
daa
lds
in
mov
icebp
mov
fbld
add
pusha
mov
in
push
incb
xchg
mov
or
leave
mov
push
mov
leave
and
or
test
xor
xchg
push
gs
lock
aaa
in
jne
lods
push
jno
test
add
add
mov
mov
add
add
add
mov
add
or
add
add
and
inc
mov
pop
cmp
es
and
push
int3
xor
inc
cwtl
cmpsb
movsb
cmp
adc
cwtl
jae
add
add
and
add
add
push
pop
out
add
add
stc
or
fwait
xlat
imul
add
add
add
xchg
add
add
sub
pop
xor
sbb
push
adc
imul
repz
cld
repnz
rolb
xchg
mov
xchg
push
mov
jbe
lret
popf
inc
cmp
mulb
cmpl
adc
mov
loopne
mov
sti
mov
mov
add
stos
xchg
mov
add
xchg
test
mov
mov
mov
lea
mov
jp
es
mov
cltd
shlb
lds
sti
aas
cmp
pop
sub
ret
movl
int3
incb
xchg
mov
sub
mov
push
dec
mov
int3
cmp
stos
jno
adc
adc
aam
mov
jg
mov
xchg
mov
cmp
add
add
add
int
mov
or
add
add
add
add
xchg
cld
mov
incb
mov
mov
repz
adc
add
add
mov
add
movsb
mov
sbb
xchg
outsl
push
outsl
es
out
and
and
push
iret
jbe
inc
and
jmp
add
add
add
add
xchg
add
jns
sbb
mov
push
xchg
or
add
add
jae
and
stos
jnp
movsl
in
xchg
aaa
repz
hlt
push
dec
pop
add
popa
fcompl
jb
and
aaa
outsl
or
push
mov
xchg
adc
cwtl
inc
cmpsb
sbb
aam
pusha
add
add
sbb
cld
adc
jg
add
add
ret
out
rcl
mov
lret
test
push
mov
cli
push
xchg
sti
out
add
lea
add
xlat
int3
inc
mov
pop
and
inc
invd
add
add
data16
lds
adc
xchg
cmpsl
loop
push
sub
pop
add
cmp
and
add
add
add
add
iret
test
stc
and
add
add
iret
mov
dec
divb
inc
aas
call
xchg
add
inc
addr16
jns
add
std
mov
in
adc
out
sub
add
add
add
add
out
fisubrs
lock
push
jecxz
push
ffree
mov
jle
mov
add
add
out
push
add
inc
mov
jo
loop
push
out
add
add
add
sbb
jb
cmp
xor
add
inc
mov
int3
mov
add
add
inc
push
add
out
mov
add
add
in
popf
sbb
jbe
pop
ret
fisttps
insb
add
add
movsb
adc
adc
push
sarb
jmp
sbb
add
add
inc
mov
test
add
add
inc
fisubrl
add
cmp
call
pop
mov
push
cmp
pop
inc
mov
add
lcall
mov
or
inc
mov
inc
fwait
insl
sub
add
add
sub
loopne
dec
dec
cmp
add
add
add
add
mov
add
add
es
cmp
add
jecxz
gs
add
add
outsl
jecxz
cmp
pop
mov
sub
movsb
and
push
rorl
mov
xchg
cli
pop
scas
out
cmp
dec
add
add
idivb
call
add
add
jb
push
pop
adc
cli
jg
push
test
push
push
or
add
add
jb
add
or
add
add
adc
scas
aaa
mov
inc
adc
sub
add
add
and
mov
in
addr16
dec
aaa
add
add
add
add
add
adc
xor
cmp
cs
into
jge
or
add
or
mov
aaa
aad
or
add
add
jge
sbb
std
enter
daa
test
mov
jnp
shll
push
mov
inc
mov
lret
mov
bound
adc
push
push
ja
xchg
dec
add
pop
inc
add
add
ret
add
sub
add
add
mov
xcrypt-ofb
cmpsl
sub
add
add
mov
std
inc
jl
mov
dec
or
out
xchg
les
mov
mov
cwtl
mov
mov
push
mov
add
add
sbb
pop
fists
dec
inc
mov
and
mov
pusha
mov
lahf
push
xchg
pop
xor
inc
and
add
add
sub
addb
add
add
mov
mov
hlt
mov
cmp
jnp
mov
jecxz
mov
sbb
add
or
add
add
jge
mov
sub
sub
add
add
pop
jle
imul
add
cltd
inc
jnp
loope
jmp
pop
repz
pop
popa
add
lock
and
repz
mov
pop
jp
lahf
mov
sub
push
mov
stos
mov
fwait
leave
jge
mov
aaa
adc
add
xchg
mov
sub
add
add
imul
fistps
dec
mov
jne
stos
je
cmp
js
mov
stos
mov
addr16
leave
orl
add
lods
sarb
push
aad
dec
pop
stos
push
imul
push
icebp
push
mov
sbb
cltd
aad
push
icebp
andl
shr
jecxz
and
add
push
mov
jne
popa
jno
sti
sbb
inc
and
mov
pop
add
add
int3
nop
std
int
pushf
loop
adc
scas
jno
dec
xchg
lds
arpl
ret
mov
or
sbb
mov
dec
ja
mov
mov
add
and
cmp
mov
lcall
test
and
call
decb
push
xor
aam
jnp
lods
data16
imulb
add
or
inc
mov
add
sbb
rorb
mov
js
sbb
sbb
push
subl
clc
jmp
mov
cmp
dec
into
jno
outsl
packsswb
xor
mov
mov
xchg
ljmp
fwait
push
xor
xor
sub
add
add
int3
jae
aad
addr16
add
xchg
inc
cmp
clc
jge
test
cld
mull
fistpl
mov
cli
mov
inc
xor
sbb
fnstcw
leave
jb
add
add
add
sub
add
add
pop
mov
push
fwait
mov
inc
test
sti
jecxz,pn
std
mov
add
pushf
hlt
xchg
mov
lock
stos
cmp
daa
movsl
and
add
mov
or
hlt
pop
out
stos
jl
mov
sub
mov
xor
add
add
loopne
jp
add
add
out
mov
push
dec
mov
cmc
mov
hlt
pop
xor
into
loope
push
cmp
or
add
add
inc
add
add
add
rcll
mov
shlb
mov
leave
rcrl
hlt
push
addb
notb
clc
pop
jo
sub
sub
xchg
and
add
add
rclb
mov
loope
mov
add
add
inc
add
add
inc
ja
aaa
add
cmpsl
or
add
add
mov
or
in
and
xor
sub
xlat
pop
iret
test
and
add
add
and
or
add
add
imul
xchg
inc
clc
js
mov
add
add
leave
scas
pop
mov
xchg
shlb
pop
bound
mov
mov
adc
test
jno
mov
dec
jo
push
xchg
add
sub
mov
push
outsl
stos
test
addr16
clc
xchg
pop
and
into
jbe
dec
adcb
mov
bnd
mov
add
add
lahf
cmc
adc
mov
stc
pop
popf
cmp
push
popa
or
add
add
cwtl
pushf
and
mov
add
fcomp
sbb
mov
mov
mov
jns
scas
pop
push
pop
aad
out
in
dec
add
add
adc
push
jae
enter
and
or
xor
sub
aam
xor
mov
mov
out
sar
mov
jne
xorb
inc
push
push
mov
add
add
add
sub
add
add
add
add
aas
mov
xchg
cs
lods
and
and
add
add
lods
scas
cmp
aad
mov
test
lods
aam
add
add
sbb
adc
imul
add
add
jne
movsb
push
and
add
add
test
inc
jne
add
add
pop
pop
jns
fstpt
sbb
add
add
xor
or
addr16
shl
sbb
add
add
imul
jns
cmp
out
leave
les
das
icebp
mov
add
inc
mov
ja
adc
cmp
add
add
std
stc
movsb
dec
add
add
nop
xchg
add
add
add
cs
popa
or
int3
xchg
andl
jno
test
jno
rcr
iret
ret
jg
imul
lea
jns
ljmp
cmpsb
xchg
ds
int
inc
inc
mov
add
add
ja
test
pusha
mov
jno
popf
rclb
std
dec
add
add
mov
mov
rorl
ljmp
scas
push
pusha
add
add
out
shrb
in
push
inc
inc
popa
rcll
pop
and
outsl
mov
xchg
xchg
xchg
sbb
mov
ss
dec
add
add
cmpb
cmc
repnz
pop
arpl
xchg
mov
lret
add
add
jns
les
add
add
insb
mov
dec
inc
scas
imul
adc
lds
out
hlt
jb
rcl
insb
mov
aam
add
add
sbb
add
pushf
mov
xor
add
mov
or
leave
push
dec
cmp
insl
inc
cmp
and
add
add
paddw
test
sbb
add
mov
rorl
add
add
jbe
lock
pop
fmul
shrl
mov
and
outsl
jns
gs
xchg
cmp
add
add
sub
cwtl
and
add
xor
add
dec
add
add
loope
dec
mov
mov
add
add
fildll
ds
js
push
mov
and
test
mov
add
add
xchg
bnd
orl
sbb
cmpsb
out
mov
mov
add
add
sub
popf
sbb
xchg
cltd
negb
cli
push
lods
adc
sbb
sub
add
mov
pop
push
test
jns
insb
mov
inc
mov
mov
test
cmp
shlb
mov
sub
iret
bound
in
add
add
add
jl
xchg
xor
jb
ror
jg
stos
mov
jne
push
or
xchg
mov
test
xchg
shll
pop
lods
xlat
out
insb
add
add
push
sub
and
outsl
stos
in
jb
je
aad
or
testb
add
add
xor
es
add
add
add
add
mov
add
add
lods
sub
add
add
add
add
das
add
add
add
add
add
xor
decl
repnz
jno
xor
or
add
add
add
add
mov
add
daa
bnd
mov
pop
adc
add
add
mov
pop
gs
mov
jo
jae
mov
or
add
add
add
and
mov
inc
dec
sahf
pop
add
lods
lock
lcall
add
sbb
inc
fimuls
xchg
push
sbb
add
add
scas
sub
or
pop
xchg
sbb
fcomps
sbb
xor
sbb
aaa
adc
and
or
add
add
lea
mov
and
ss
push
mov
fstpl
cld
movsb
movsl
cmpsb
mov
subb
add
pop
in
pusha
add
add
jge
pop
ja
mov
sbb
sub
add
add
stos
fcoml
sbb
add
add
mul
lock
mov
stos
pop
add
add
mov
aas
add
add
add
add
cmp
jecxz
add
add
adc
or
mov
or
add
add
dec
out
xor
mov
arpl
dec
test
mov
sarl
aam
inc
jns
pop
push
add
add
add
das
icebp
leave
inc
loop
add
add
out
mov
or
add
add
push
lea
insl
mov
sub
fwait
inc
fsub
inc
test
mov
pop
into
subb
push
popa
shlb
fisttps
adc
dec
test
mov
xchg
sub
add
add
xor
jbe
mov
add
add
hlt
ljmp
orl
rep
pop
xchg
shl
enter
mov
test
add
add
push
or
dec
lcall
dec
add
add
add
and
mov
lods
in
sti
push
repz
and
mov
and
ja
or
add
add
and
pop
jo
cmpsl
dec
mov
aas
cmp
aam
lret
lock
add
or
add
add
stos
dec
mov
push
clc
mov
test
ret
pop
mov
add
add
push
sub
add
add
push
pop
dec
mov
test
add
add
lods
andb
inc
mov
pop
test
add
add
fcoms
and
sub
add
add
inc
push
sbb
jnp
in
adc
mov
inc
mov
add
add
inc
cmp
fdivp
pop
xchg
ffreep
and
aaa
repz
rclb
lahf
setle
dec
push
std
rol
cmp
xchg
cli
and
add
add
sub
dec
mov
into
call
pop
mov
jno
enter
sub
in
mov
dec
imul
lcall
add
push
loopne
xlat
mov
shlb
ffree
jg
push
xchg
testl
xchg
xor
push
inc
add
add
cli
xor
sub
xor
in
pop
mov
mov
test
xchg
fwait
movsb
fstpt
pushl
add
add
test
and
jne
sbb
add
add
sti
dec
inc
push
sbb
add
add
test
pop
fildll
clc
popa
jbe
inc
wbinvd
push
icebp
cld
pop
popa
xchg
add
add
and
sbb
inc
insb
add
add
push
mov
shll
add
add
and
add
add
add
out
test
add
add
xchg
cmp
jg
add
add
sub
add
add
cmpsl
lret
xor
stc
push
dec
or
insb
mov
ret
inc
push
nop
pop
and
add
in
out
mov
mov
sbb
mov
and
in
js
addr16
mov
xor
add
push
ljmp
sub
repnz
sar
mov
clc
in
cmp
push
jp,pt
imul
inc
mov
jo
mov
lock
or
loope
fcmovnu
icebp
inc
mov
lock
call
xchg
movsb
inc
aaa
aas
pop
or
loop
mov
stos
mov
push
ljmp
outsl
push
add
sbbl
sub
imul
icebp
es
jl
xchg
pop
jne
jns
pushf
push
add
test
repnz
stos
mov
cmp
jne
jo
call
xlat
mov
ret
dec
fs
xchg
fmuls
inc
bound
or
lea
scas
mov
jmp
push
xor
in
lods
push
mov
add
add
sbb
sbb
leave
repnz
out
dec
mov
xor
lahf
mov
sub
add
idivb
adcl
mov
mov
scas
mov
or
mov
les
mov
xchg
pushw
movsl
addr16
pop
sub
add
add
add
add
add
popf
sbb
jnp
xchg
add
repz
fbstp
mov
cld
dec
imul
adc
lods
xchg
pop
icebp
and
add
add
and
add
add
xchg
xchg
mov
mov
in
mov
push
ficoms
mov
mov
notl
and
jp
push
orb
add
add
cmp
imul
add
add
fdivrl
cmp
inc
inc
mov
orl
mov
iret
mov
cmpsl
lds
cmp
movb
and
cmp
popf
or
dec
mov
aas
cmp
pop
cmc
jl
xchg
fcomps
mov
add
add
test
popa
xchg
loop
loopne
mov
jno
scas
jg
jge
jge
mov
and
mov
leave
popf
dec
mov
inc
mov
fiadds
add
add
dec
mov
push
fimull
add
add
popf
repz
add
andb
add
add
add
add
lret
mov
sub
aad
pop
inc
ret
pusha
mov
jno
mov
mov
addr16
jl
sbb
stos
pop
insb
mov
xorl
mov
mov
xor
add
add
call
add
add
mov
add
add
cmp
fistps
aad
popf
test
mov
add
add
cltd
call
nop
add
enter
imulb
add
add
adc
test
inc
inc
add
add
pop
xchg
and
mov
mov
jle
repnz
notb
aad
mov
cmpl
sti
mov
add
add
insb
mov
pusha
mov
xor
lock
and
add
add
add
add
mov
jp
rorl
xorb
mov
dec
add
add
mov
add
push
sub
add
add
add
cmp
adc
aam
rclb
pop
cvtdq2ps
cmp
aaa
dec
loope
loopne
aas
mov
xchg
jnp
push
jnp
jge
lcall
rclb
xor
push
mov
add
add
add
enter
xchg
lods
ljmp
add
add
lcall
lea
add
or
push
sub
cmpsb
nop
aaa
xor
pop
cmp
ja
out
xlat
push
fstpt
xor
arpl
dec
add
add
lock
add
adc
pop
adc
mov
add
xchg
add
and
add
add
jg
or
add
add
and
add
add
or
add
add
data16
add
add
nop
andl
scas
xchg
or
lcall
mov
jp
imul
and
dec
or
and
add
add
fistps
add
decb
adc
jns
sub
inc
jecxz
scas
xlat
mov
repnz
mov
xchg
test
add
mov
add
add
push
mov
add
add
ret
shll
es
push
lods
jne
mov
jo
sub
dec
mov
add
mov
ss
or
add
add
sbb
cld
in
int
adc
sub
add
add
les
sub
add
mov
add
xor
mov
mov
xorb
repnz
sbb
pop
sbb
mov
pusha
add
add
lods
aas
in
sub
push
dec
pop
jmp
jmp
xlat
hlt
push
sub
test
ljmp
add
add
add
add
ljmp
sbb
bound
sub
mov
xchg
and
ss
adc
fs
jg
shll
and
into
xlat
aaa
sub
movsb
push
cltd
pop
pop
and
int3
bound
xchg
out
push
mov
pop
test
leave
cmp
add
add
scas
dec
jmp
dec
gs
add
add
inc
mov
popa
add
mov
sub
xchg
inc
and
lsl
es
mov
mov
test
add
add
or
pop
loopne
xor
xor
add
add
cmp
add
add
repz
add
outsb
inc
in
or
xchg
sub
icebp
cmpsb
pushf
push
xchg
scas
xchg
mov
or
aaa
pop
xchg
aaa
cld
ror
pop
adc
mov
in
mov
cmp
adc
cs
mov
jmp
rolb
add
iret
xchg
mov
rolb
ljmp
pusha
mov
mov
add
add
stc
xchg
ss
add
add
cmp
cmp
mov
sbb
ljmp
sub
cs
ficoms
cwtl
or
add
imul
lcall
and
fwait
mov
rcrl
add
add
xor
inc
out
push
or
push
adcl
adc
add
sbb
in
mov
sbb
or
inc
decb
add
add
shl
mov
adc
adc
in
mov
add
shrb
ja
push
xor
sub
sbb
add
add
mov
sahf
and
pop
or
pop
jmp
add
add
cld
push
jmp
jecxz
add
test
hlt
push
xchg
insl
cmpsl
rcll
pop
cli
aam
jo
mov
shlb
and
add
stos
inc
scas
shrl
stos
ret
jmp
add
dec
sub
add
add
add
mov
sub
adc
add
and
add
add
add
add
cmpsb
dec
jns
lret
add
add
jmp
bound
sti
jmp
add
add
incl
mov
lahf
push
popf
adc
movb
addr16
icebp
inc
push
mov
mov
add
add
or
pop
lea
dec
mov
ss
into
into
xor
jae
jmp
mov
inc
mov
dec
sub
push
add
pop
mov
mov
adc
xlat
js
mov
push
mov
out
adc
mov
inc
inc
push
outsl
and
add
add
ds
cld
or
and
add
add
mov
std
xlat
or
add
jae
sbb
imul
and
pmullw
add
mov
insb
mov
fildll
daa
push
jmp
outsb
out
mov
dec
fldt
and
repnz
or
pop
out
pop
cmc
in
mov
mov
add
add
add
add
add
add
test
add
add
lahf
sbb
jb
inc
cli
push
sub
add
add
sub
add
add
lea
add
xor
adc
add
add
out
mov
mov
or
add
in
mov
add
add
xor
mov
and
jbe
test
push
out
sub
sub
mov
inc
mov
push
or
add
add
lret
jo
subb
add
add
test
lods
gs
jl
pop
xchg
popa
cli
stos
mov
shrb
push
inc
test
lahf
push
sbb
int
inc
test
add
add
lock
test
and
ret
jae
sub
iret
or
add
in
push
mov
adc
outsb
jecxz
loopne
push
add
add
inc
pop
ret
pop
mov
push
out
push
repnz
lods
or
inc
push
lods
cltd
mov
mov
add
and
jo
shlb
loop
inc
mov
and
sbb
movsb
out
inc
mov
stc
nopl
loopne
pop
or
adc
mov
insl
cmpsb
mov
ds
mov
add
mov
addl
xlat
push
add
add
add
iret
cmpsb
adc
ljmp
push
stc
adc
test
aaa
push
out
ret
test
add
pop
jnp
mov
in
inc
mov
daa
pop
je
add
add
sbb
fildl
pusha
add
add
xchg
sbb
jb
pop
ret
pop
mov
add
pop
push
xor
test
add
add
mov
push
std
push
stc
lcall
xchg
push
lea
and
or
pop
shll
add
pop
adc
les
dec
jbe
sbb
xorl
push
ljmp
pop
fs
call
adc
inc
cmp
xchg
fisubrl
jno
notl
jl
xor
inc
mov
stos
aaa
std
jbe
push
add
dec
loop
lret
sub
cltd
and
add
add
mov
out
ret
sub
add
add
add
add
ret
test
add
addr16
dec
fwait
xchg
sbb
push
out
pop
dec
add
add
dec
mov
mov
arpl
aaa
jge
and
push
xor
add
push
iret
jle
cmp
mov
or
outsb
aas
mov
jo
into
addb
lret
lock
mov
inc
insb
mov
ljmp
add
add
adc
std
mov
xchg
lods
adc
lods
sarb
ret
leave
sbb
sub
push
nop
cwtl
push
mulb
lods
in
jl
mov
popa
leave
xor
pop
mov
sbb
popf
out
cltd
clc
out
mov
jp
sub
sub
and
mov
mov
push
xchg
cmc
jnp
pusha
add
add
fnsave
lcall
add
add
shlb
pop
loop
and
jb
call
imul
lret
mov
les
mov
push
and
pop
xchg
addb
imul
lcall
lret
je
lea
es
enter
add
lret
cltd
fistpll
in
mov
insl
xchg
mov
cmp
add
jo
cmpl
xchg
mov
sbbl
cmp
jne
das
dec
jle
add
add
or
add
add
push
xchg
pop
inc
es
enter
les
add
add
repnz
add
pusha
add
add
mov
add
add
add
add
cmp
inc
push
sbb
leave
sub
jns
subb
sbb
add
add
dec
mov
inc
loop
adc
fdivr
add
push
cmc
dec
sub
adc
mov
aaa
fistl
add
add
dec
add
add
inc
in
in
shl
sub
jmp
mov
adc
mov
ljmp
insl
xchg
mov
or
mov
out
inc
sbb
xor
add
mov
nop
xor
add
add
and
xor
add
add
inc
sub
add
add
repnz
loope
and
xchg
lea
jp
test
xlat
int
fcomp
pop
std
jno
je
add
add
fwait
xchg
xchg
in
imul
mov
add
scas
in
fbstp
inc
mov
arpl
sar
arpl
mov
mov
int3
out
xor
pop
jnp
xor
add
and
cs
sbb
add
and
or
xor
add
in
scas
inc
xchg
push
in
pop
mov
out
cmp
mov
aas
sub
xor
bound
mov
xor
add
add
add
xor
stos
jns
outsb
pop
call
add
push
pop
mov
mov
sbb
shll
ds
mov
das
test
mov
outsl
loope
test
loope
test
add
push
pop
and
pushf
sahf
lea
pop
lea
xorl
jl
das
ret
add
add
imull
hlt
punpckhdq
jl
adc
js
mov
push
hlt
and
push
jge
stos
sub
out
test
movl
cmpsb
aam
faddl
cmp
and
add
add
cmp
xchg
inc
out
pop
lcall
add
cmpsb
add
sub
mov
jo
dec
loope
pop
lea
mov
inc
in
inc
add
add
add
mov
ja
jmp
and
in
or
add
add
cmc
mov
cmp
sbb
add
loope
cmp
push
ljmp
push
repnz
add
subl
loope
out
sub
mov
sahf
cmp
lret
push
out
pop
mov
jge
sbb
cmc
xchg
mov
mov
add
mov
leave
and
loop
dec
sbb
sbb
loop
mov
inc
outsl
jl
adc
and
sbb
mov
mov
out
dec
add
add
add
xchg
pop
pop
clc
and
xor
add
add
out
and
aam
xor
jl,pn
mov
mov
jle
mov
add
xchg
push
test
add
add
xchg
xchg
fcmovb
inc
jne
les
xor
jle
bound
mov
push
adc
mov
push
mov
add
add
into
push
mov
xchg
test
xchg
cli
rorl
mov
sbb
pop
iret
mov
repz
xor
mov
add
insb
add
add
mov
cmc
pop
xchg
fsubl
int3
movl
pop
subb
icebp
stos
inc
mov
add
jno
repz
mov
test
sbb
add
add
push
pusha
add
add
inc
add
add
xchg
cli
fistpll
fsubrs
jb
ret
shll
cmp
mov
ret
mov
stos
jno
setp
adc
jp
cmpsl
add
push
and
add
add
gs
add
add
sar
sbb
pop
and
add
add
sbb
add
add
sbb
add
adc
in
sub
add
insb
mov
test
add
aad
clc
aad
fbld
psubb
sti
lret
ljmp
orps
aaa
inc
insb
add
add
jbe
xor
mov
cmc
mov
push
dec
mov
aaa
or
add
add
mov
add
js
inc
mov
push
jb
and
add
add
mov
shll
enter
add
mov
popa
mov
add
aam
cmpl
add
add
repnz
or
add
ret
js
lds
imulb
cmp
lcall
int3
dec
out
dec
sbb
pop
inc
cwtl
xchg
mov
mov
pop
and
rcl
pop
sub
fiadds
xchg
pop
jmp
pop
jbe
jb
mov
push
xor
xchg
fsubl
ret
aad
push
cmp
mov
add
add
outsb
test
scas
vcvtps2pd
stos
cmp
test
add
add
xchg
inc
push
into
pop
test
lahf
in
lods
hlt
rcll
repz
push
dec
mov
xor
add
add
mov
add
add
add
cli
push
mov
push
adc
in
ja
jecxz
push
jl
push
mov
add
add
adc
scas
ljmp
xchg
pop
mov
xor
sbb
mov
xchg
jecxz
jnp
js
mov
pop
push
xchg
add
add
add
and
add
add
sbb
add
pop
mov
push
popf
cmp
add
stos
and
add
add
mov
pop
jp
push
lcall
adc
add
add
add
add
mov
incb
stos
mov
scas
sub
dec
add
add
rol
mov
and
sbb
xchg
pop
cmpsl
push
icebp
iret
das
push
cmpsb
movsl
inc
add
add
aad
push
add
add
add
nop
fistpl
and
add
add
dec
add
add
jbe
es
out
xor
ds
les
jmp
add
add
add
add
mov
sub
inc
mov
dec
out
in
ret
test
mov
xor
popf
cmpl
add
cltd
and
add
imul
nop
mov
cmp
cltd
fbld
cmp
pop
lcall
icebp
dec
ficoms
or
push
add
add
mov
pop
xchg
fisubl
ja
repnz
add
lcall
mov
jns
pop
dec
or
mov
add
add
add
add
xchg
dec
dec
test
push
bound
loopne
xchg
or
popa
push
jo
dec
pop
mov
scas
adc
add
add
jnp
dec
cltd
pop
xchg
loope
aas
add
add
add
add
add
and
lock
push
jg
mov
add
add
add
mov
repz
loope
aas
push
add
add
dec
negb
adcb
daa
fcom
out
mov
add
mov
arpl
push
or
inc
lea
stos
push
xor
loopne
and
add
add
pop
mov
scas
test
jg
rcll
mov
jmp
jle
mov
add
add
in
inc
add
cwtl
mov
lock
push
sbb
lahf
push
push
xchg
imul
dec
cmp
sub
sbb
das
push
inc
addb
rcl
jae
pop
rorl
add
add
add
add
push
cmpsl
cmp
add
subb
add
add
in
mov
add
add
add
xchg
fmull
mov
jg
dec
and
push
int3
jne
xchg
jbe
cltd
lahf
lods
xchg
js
xor
xchg
iret
jo
arpl
mov
or
mov
das
mov
push
xchg
add
pop
fucomp
xchg
je
call
scas
jnp
mov
adc
aas
pop
and
cmp
add
add
add
enter
jbe
mov
pop
jb
movsb
popa
mov
cmp
inc
adc
lods
scas
mov
cmpsl
add
add
add
xchg
jle
and
cmpsb
in
cli
pop
xchg
sub
add
add
mov
add
add
sub
or
dec
dec
lret
mov
mov
jae
idivb
sub
add
add
rorl
or
ffree
ficomps
sti
aad
mov
into
ss
inc
loopne
je
mov
dec
mull
dec
add
add
mov
push
aaa
ret
add
push
mov
jmp
inc
add
add
scas
sbb
or
cltd
push
push
mov
or
adc
add
add
in
test
sbb
xor
add
scas
out
popf
inc
popf
mov
cltd
clc
pop
push
inc
add
add
jnp
add
add
xchg
jmp
lods
fidivl
lea
mov
push
push
add
xlat
mov
jg
add
add
push
xor
inc
xchg
leave
mov
rep
gs
fbld
cmp
add
xchg
push
ret
adc
dec
sti
mov
cmpsl
stc
cld
mov
mov
std
xchg
xchg
xor
cmp
popf
mov
ficompl
insb
mov
add
add
inc
add
add
xchg
xor
mov
andb
lods
dec
mov
mov
mov
add
bound
je
cmp
mov
mov
add
add
xchg
je
int3
or
insl
mov
add
mov
cmc
jg
test
fidivrl
mov
add
lds
push
test
cwtl
or
or
roll
jo
shll
std
in
cmp
rolb
cwtl
push
loop
cmpl
pop
leave
jp
sub
add
add
pushf
fs
loope
sub
add
add
fistps
add
add
cmp
jge
fbld
add
add
add
mov
mov
inc
addr16
stos
mov
jecxz
daa
out
jmp
mov
add
add
add
jmp
jp
cmp
hlt
jb
or
es
cmpsl
ds
add
add
pushf
lcall
push
ds
sub
dec
mov
add
add
js
or
add
add
push
std
dec
jmp
mov
or
cli
sbb
icebp
mov
add
xchg
hlt
lods
cld
lcall
adc
and
mov
repz
mov
fcoml
jmp
add
hlt
out
test
ror
sahf
dec
stc
lods
push
dec
outsl
mov
dec
test
push
xlat
mov
movl
dec
ret
ja
movsl
je
ja
mov
add
mov
int3
inc
scas
add
pop
inc
cmc
inc
imul
mov
pop
fisubrs
mov
dec
cpuid
mov
mov
xor
jnp
jae
mov
mov
gs
add
add
fst
cmp
adc
dec
add
add
out
insl
lock
add
add
add
add
lahf
int
loopne
cmp
mov
inc
int3
gs
xor
stos
dec
mov
sbb
imul
cmovns
add
jae
dec
cltd
lcall
inc
push
shll
jle
inc
xor
icebp
pop
push
push
push
cs
loope
repz
and
insl
mov
int3
bound
mov
ret
fsub
shlb
sbb
add
add
xor
push
repnz
sbb
jp
out
jg
lea
dec
fcompl
shrl
mov
adc
jb
lods
fs
imul
sub
add
add
push
or
leave
je
adc
xor
add
pop
std
es
je
gs
in
dec
mov
push
out
mov
test
movsb
mov
cmc
repnz
mov
push
sbb
mov
rcrl
in
stos
mov
xchg
stos
insl
lods
daa
or
adc
inc
mov
sbb
add
lods
int
cwtl
push
sub
inc
paddd
add
add
jmp
icebp
and
add
add
pop
pop
outsl
mov
movsb
cld
fwait
aad
jl
adc
cld
movsl
movsl
jbe
mov
dec
mov
add
dec
add
add
test
push
stos
mov
inc
lods
out
push
adc
jno
sbb
pop
cmc
mov
mov
cs
fwait
sbb
cld
out
add
mov
mov
cwtl
lods
cld
sti
add
add
add
and
pop
cltd
adc
push
fisubrs
mov
adc
push
mov
fidivl
mov
add
add
mov
xor
sbb
or
add
add
add
add
out
aad
cmpb
aam
xchg
shll
mov
sub
add
add
loop
stc
cld
adc
cmp
add
add
loop
push
rcll
enter
or
movsb
xchg
xchg
dec
mov
add
add
add
rorb
add
mov
add
lret
cmp
rcll
jnp
inc
cli
mov
repz
push
pop
sub
xchg
push
pusha
mov
hlt
repz
adc
xchg
pop
jns
add
add
add
xlat
sbb
pushf
push
mov
rorl
cs
insb
mov
pop
cli
aam
std
leave
movsb
std
loope
and
add
add
add
add
inc
rol
jmp
mov
push
into
mov
shlb
cmc
xor
imul
or
add
add
add
add
add
xor
add
add
adc
xor
dec
jmp
push
pop
rcll
pop
xchg
test
add
add
mov
lock
add
jbe
add
jo
jle
jns
clc
ds
mov
out
cmpsl
dec
jne
std
test
mov
pop
mov
add
in
mov
shrb
hlt
movsl
fnstenv
xchg
sub
jp,pt
mov
cmpsl
sbb
arpl
add
xorl
pop
pop
or
dec
in
js
lods
ret
sbb
dec
add
add
inc
stc
test
sbb
dec
mov
stc
xorl
bound
bound
add
pop
mov
lea
cmpsl
sbb
pop
daa
mov
test
push
mov
xor
mov
popa
jle
inc
jg
data16
enter
push
mov
add
pop
pop
inc
cld
add
mov
stos
jno
jge
sbb
add
add
leave
ds
scas
ret
xchg
push
outsl
pop
adc
add
ljmp
mov
add
fldenv
and
or
adc
call
add
add
mov
cmp
pop
cmp
hlt
add
pusha
add
add
xor
repnz
sub
add
add
cmp
ds
shl
xchg
loop
cmp
lods
out
add
add
add
pop
add
add
add
mov
or
add
add
nop
pop
inc
add
add
out
dec
out
dec
mov
ja
mov
adc
fdivr
gs
mov
inc
add
pop
lods
mov
xorb
cmc
pop
cmpsb
inc
insb
add
add
stc
pop
xorl
inc
fs
add
add
shll
add
add
rorb
push
and
xorl
mov
or
lahf
pop
rclb
aad
test
xchg
xor
or
add
add
mov
dec
mov
and
add
add
scas
and
mov
mov
pmulhw
or
mov
hlt
stos
mov
arpl
mov
add
add
hlt
add
add
add
jnp
aad
shll
sub
cmp
add
add
pushf
sbb
xor
mov
add
add
sbb
mov
and
scas
ret
add
add
sub
add
arpl
jmp
outsb
add
js
lcall
dec
cmp
setnp
jne
outsb
aad
repnz
jecxz
and
add
add
cwtl
mov
add
add
jge
mov
in
dec
add
add
add
insl
nop
out
adc
add
mov
adc
inc
inc
js
fwait
imulb
cmp
in
test
cli
jo
jnp
cmp
mov
repnz
add
add
add
je
loope
add
add
push
mov
add
add
adc
add
and
cmp
ret
icebp
mov
add
add
mov
or
mov
adcl
jp
outsb
cli
push
jb
std
loop
add
add
mov
lods
les
jae
sbb
test
pushf
push
lds
xchg
test
mov
icebp
sahf
mov
sbb
mov
out
xchg
add
add
push
aaa
inc
out
fdivl
mov
inc
mov
xorb
mov
outsl
inc
pop
aas
pop
adc
mov
add
add
mov
xchg
in
mov
pop
or
icebp
lahf
xorl
mov
add
add
mov
loope
pop
repz
mov
sub
add
add
test
popa
out
mov
andb
stos
xor
addb
test
pop
jae
mov
add
repz
jmp
xchg
lea
mov
dec
mov
pop
lods
outsb
xchg
cmp
mov
mov
add
out
or
je
fwait
dec
das
pop
xor
repnz
ljmp
mov
jmp
int3
dec
add
add
add
call
rclb
add
add
xor
shlb
pop
fldt
shlb
add
add
add
cld
add
out
jae
mov
adc
shrl
push
stc
rorl
add
es
scas
sbb
leave
test
mov
test
add
add
add
add
and
add
add
lahf
inc
mov
pop
scas
xchg
add
add
cmp
sub
add
add
push
rcll
cmp
or
sbbb
aaa
add
inc
aad
seta
inc
mov
test
outsl
jae
shrl
mov
pop
or
add
add
pop
leave
pop
pop
fiaddl
or
mov
pop
cmc
and
ret
test
in
lds
inc
lret
lock
inc
and
mov
cmpsl
cwtl
jo
pop
mov
clc
dec
mov
jnp
dec
add
add
xchg
xor
mov
add
and
mov
push
jae
sbb
fisttpl
out
add
cmp
add
stos
mov
clc
cmp
pusha
mov
push
cmp
add
add
addb
into
stos
mov
into
dec
or
inc
sahf
push
and
inc
outsb
insl
jp
mov
jne
fdivs
in
test
rcr
dec
add
add
enter
mov
add
add
aad
add
mov
mov
out
cmp
mov
fcomp
fwait
or
xor
mov
ljmp
mov
sub
add
add
add
mov
rclb
add
dec
dec
lock
out
adc
mov
xor
int3
mov
cmp
nop
cmp
repz
or
push
lret
add
and
lds
aad
dec
mov
mull
sbb
push
sub
add
add
mov
mov
xor
and
add
add
fcoms
in
and
add
add
inc
add
add
xchg
or
add
add
ret
dec
mov
inc
add
add
aaa
test
outsl
shll
add
add
sub
add
add
push
push
mov
add
in
lret
iret
divl
rorb
and
pop
hlt
les
pusha
add
add
fnstcw
daa
fwait
add
add
dec
popa
movl
idivb
aaa
or
lds
jle
push
movsb
xlat
ss
sub
add
add
and
data16
push
mov
add
or
icebp
in
out
sub
imul
add
add
iret
call
mov
mov
push
xor
jecxz
cmp
addb
cmp
jl
xchg
imul
sub
iret
mov
movsl
xor
movb
inc
lea
repnz
jecxz
dec
jo
mov
jae
cmp
popf
xchg
int
mov
mov
jae
mov
sahf
lods
sti
icebp
lock
mov
mov
sarb
cli
out
jbe
and
lcall
lods
loopne
sbb
push
loopne
nop
ret
bound
add
add
add
add
inc
mov
mov
add
xor
xor
push
lods
sub
add
add
push
test
mov
push
fsubr
push
out
cmp
jne
andb
pop
dec
add
add
movsl
nop
xor
cmp
and
jecxz
aas
test
stos
out
mulb
pop
mov
movl
add
das
adc
dec
lcall
pusha
add
add
inc
subb
pop
movsb
stc
push
ret
adc
pop
dec
xor
xor
sub
add
add
repnz
test
add
add
add
inc
jnp
and
sti
pop
test
fsubs
imul
jp
sub
add
incb
arpl
add
add
add
jae
out
aas
mov
daa
xchg
mov
pop
outsb
cmp
out
mov
fildl
add
add
jl
lods
mov
repnz
int
dec
mov
mov
add
add
daa
fsubrl
inc
add
add
push
sub
test
add
xchg
mov
add
mov
xlat
mov
sbb
cmpb
push
fistl
push
xor
das
dec
notb
or
dec
iret
lock
das
dec
or
pop
cmp
sbb
jo
jmp
stos
mov
or
in
push
arpl
ja
fwait
mov
out
nop
jnp
adc
add
adc
mov
flds
sbb
daa
sub
cltd
mov
int3
pop
enter
sbb
out
in
mov
xchg
and
add
add
mov
out
cmp
ss
mov
add
add
ja
movsl
shl
xor
test
add
loop
mov
add
add
orps
inc
add
add
test
rep
imul
nop
add
test
out
jp
add
add
add
shlb
test
add
add
add
and
lcall
cltd
push
in
iret
inc
mov
push
sbbl
frstor
mov
inc
ret
imul
lret
stos
arpl
mov
cmp
jns
aam
jmp
mov
mov
aad
pop
sub
add
add
add
add
test
aas
int
jne
int3
cmc
inc
mov
mov
das
pop
fdivrl
pop
in
push
push
mov
fcmovnbe
push
mov
push
mov
ss
push
push
test
gs
sub
je
aad
shlb
insl
xchg
imul
repz
rolb
lea
jecxz
int3
jge
gs
jne
adc
addr16
adc
lret
jae
mov
jo
aaa
jle
and
insb
mov
mov
movsb
adc
int3
and
mov
pop
insl
or
lods
je
shll
add
push
lcall
sub
in
lds
mov
adc
push
add
xchg
mov
das
adc
add
adc
xor
add
add
rcrb
mov
jge
inc
inc
mov
add
xor
sbb
or
mov
add
add
pop
xchg
jg
fidivrs
js
add
add
or
add
add
add
cmp
push
inc
add
add
test
mov
mov
push
not
cmp
add
dec
fisttpl
roll
add
xor
insb
add
add
faddl
ficoms
and
ficompl
clc
pop
mov
add
add
cwtl
add
push
jno
cwtl
mov
subl
pop
mov
ds
pop
in
out
xchg
sub
add
add
shr
fistpll
cmp
xchg
jle
outsb
xchg
cmp
cmp
jge
dec
xor
add
push
mov
and
std
xchg
push
xchg
outsb
cmp
into
bound
imul
fisttps
add
leave
popl
cmp
in
ficoml
ficomps
jnp
pop
sub
test
cmp
fdivrs
and
cwtl
dec
or
add
add
es
in
daa
popf
gs
jae
push
lcall
and
ljmp
fstpl
mov
add
add
add
jge
lods
adc
movsb
imul
imul
into
xor
out
push
ds
jo
pop
ret
xchg
stc
inc
hlt
andb
add
mov
add
add
xor
lahf
fsubrs
add
add
inc
add
add
push
in
push
test
mov
pop
mov
cltd
fdivl
push
fwait
movsb
lea
xor
test
cltd
insb
add
add
push
and
add
add
pop
arpl
lock
or
mov
and
or
cltd
xchg
xchg
xor
mov
or
sub
inc
pop
mov
push
jp
push
jns
sti
fmuls
js
adc
mov
push
frstor
in
add
add
xchg
inc
je
mov
je
int
mov
or
add
add
adc
jl
mov
mov
jbe
lret
push
out
stc
xchg
pop
je
pop
imul
xchg
xchg
rol
cmc
test
add
add
add
icebp
xor
mov
shrb
imul
sarb
imul
add
test
adc
enter
add
add
add
inc
adc
or
sbb
scas
jecxz
push
dec
movsb
jns
push
decb
push
pop
addr16
or
loop
lahf
dec
dec
add
add
sub
add
add
push
push
xchg
daa
push
cwtl
sbb
sbb
pop
jno
jne
sahf
mov
and
xchg
mov
jns
sub
push
cmpl
mov
mov
add
in
outsb
cmp
dec
shll
shlb
jbe
cmp
mov
add
add
pop
push
jecxz
sahf
push
xchg
insb
mov
jp
push
test
inc
inc
or
add
add
push
imul
add
add
add
ret
mov
mov
xchg
sub
popa
je
filds
call
sti
mov
shlb
jl
pop
push
jle
dec
add
add
mov
add
cmp
sbb
add
fs
lcall
mov
jmp
cmp
xor
jp
xor
adc
push
lcall
fsubrs
jno
fistpll
ficomps
test
sub
add
add
cmpsl
adc
add
lret
xor
add
int
dec
in
cmpsl
jp
sub
add
add
popf
push
sbb
sub
dec
jle
int3
lock
imul
xchg
insb
add
add
ret
lret
xlat
add
or
add
jae
mov
xchg
pop
xchg
mov
inc
mov
push
push
jno
inc
mov
in
jecxz
jmp
iret
out
dec
testl
sarb
add
add
cs
xchg
cmp
dec
add
add
std
icebp
pop
lahf
dec
sahf
sahf
xorb
xor
push
je
mov
mov
clc
cs
cs
jle
mov
add
lods
and
add
add
add
cmp
pop
xor
pop
push
inc
add
add
je
push
cld
xor
lock
sub
add
add
loope
dec
xchg
movsl
sbb
dec
gs
lahf
sub
and
add
add
sub
add
add
loop
cwtl
sahf
or
sbb
sbb
rorb
add
add
lret
fisubs
mov
xchg
cmp
inc
dec
fcoms
in
and
dec
mov
insb
add
add
int3
push
imul
add
add
sbb
dec
push
sti
mov
fidivs
mov
add
rorl
add
mov
into
shr
jae
sub
add
add
call
fucomp
ret
fdivr
test
enter
and
into
popa
outsl
imul
push
or
lret
mov
push
dec
mov
cmc
arpl
xchg
xor
add
add
xchg
dec
mov
mov
icebp
cmpsl
xor
imul
aaa
mov
add
add
mov
int
pop
popf
push
fdivp
cmp
add
add
shl
xchg
subb
and
mov
pop
adc
pop
add
add
add
flds
xor
pop
leave
mov
jle
xor
sahf
push
repnz
popa
mov
adc
inc
mov
int
lahf
cmpsb
cltd
cmc
sarl
mov
test
fistpl
in
lcall
add
push
gs
dec
jmp
mov
mov
outsl
or
push
sub
add
push
mov
fidivs
into
ja
lods
mov
or
add
add
test
shl
inc
add
add
movsl
inc
xchg
add
add
add
arpl
fsub
adc
inc
les
add
add
add
add
add
add
add
add
push
cmpsb
in
dec
and
rorl
push
xchg
sar
push
in
mov
add
add
sbb
add
xchg
idivb
std
loopne
lcall
mov
outsb
lods
movsb
daa
mov
mov
mov
add
add
negl
sahf
xor
jecxz
into
jbe
add
add
add
rcl
or
mov
rclb
cmc
lds
std
pop
inc
inc
mov
xor
sub
add
add
adc
insb
add
add
pusha
mov
pop
iret
sbb
into
test
lcall
add
test
setnp
add
sub
insb
mov
in
fnstsw
add
or
add
add
lcall
sbb
add
add
or
sbb
popf
add
add
aas
push
mov
or
call
add
ss
sahf
enter
push
mov
ljmp
fnstcw
push
mov
jno
mov
jl
out
push
aas
mov
test
stos
int
mov
jp
cli
sti
test
xor
andl
shlb
call
sbbl
sbb
mov
jp
add
add
pop
aam
sub
mov
add
adcl
add
add
pop
enter
insb
add
add
call
popf
xchg
insb
add
add
rcl
lret
or
mov
leave
mov
mov
mov
or
mov
add
repnz
add
add
pop
sub
add
add
add
mov
xlat
push
mov
add
dec
add
add
mov
push
cmc
test
lea
mov
adc
pop
pop
ficoml
cmp
mov
pop
hlt
data16
mov
add
jnp
stos
jno
cmp
add
sbb
in
hlt
sti
sub
lea
fcoml
js
out
test
push
dec
insl
dec
xchg
mov
xor
movb
add
add
test
add
add
pop
mov
pop
inc
dec
mov
add
sbb
add
enter
mov
repnz
sahf
daa
xchg
and
add
add
add
inc
lcall
inc
sbb
xor
pop
fstpt
xor
notb
lcall
and
js
mov
ret
sarl
mov
add
cmp
xchg
sub
add
add
push
test
dec
add
add
push
cmpsl
adc
adc
loope
cmp
js
sbbb
aaa
push
add
pop
mov
in
pop
fdivl
in
stc
aad
cmpsb
and
inc
add
add
adc
mov
cmp
cld
pop
sub
lea
pop
inc
xchg
aaa
sahf
xchg
inc
jnp
icebp
adc
aas
cmp
cmpsb
cwtl
inc
pushf
repz
jo
call
mov
xchg
cmc
jns
movsb
and
add
add
dec
mov
fidivs
jne
mov
mov
add
sbbl
xchg
pop
xlat
pop
cli
movsb
and
bound
add
add
inc
mov
inc
jp
mov
jns
push
push
mov
in
movsl
dec
inc
lret
mov
stos
orb
out
add
and
outsb
popf
hlt
mov
bound
dec
hlt
inc
fwait
push
sub
xor
dec
pop
jge
xor
int3
xor
cmc
mov
jb
xor
nop
push
adc
adc
lret
push
dec
add
add
loopne
push
mov
out
lods
mov
add
mov
mov
mov
or
mov
sub
sub
add
add
add
add
add
add
xchg
rorb
roll
mov
orb
add
pushf
push
add
add
repz
out
jge
test
sbb
rorl
psrlq
das
inc
movsl
sub
int
add
adc
xchg
loope
jg
xchg
clc
and
xlat
push
lock
rcl
mov
cmp
xor
movsb
add
dec
mov
lret
pop
ret
dec
mov
pop
test
test
dec
shll
out
lea
in
jge
mov
cmp
in
mov
push
push
cmp
fisubl
mov
pop
cmpsl
in
mov
xchg
mov
mov
popa
mov
mov
or
add
scas
lods
add
stc
incb
rolw
and
popl
data16
int
repz
lahf
adc
loop
sub
add
add
add
mov
push
icebp
pop
div
loop
xor
lds
jle
repz
imul
adc
xchg
and
add
add
and
sti
or
mov
add
fldcw
cs
nop
xor
mov
inc
inc
mov
add
add
xlat
pushf
clc
sub
add
add
dec
inc
pop
pop
xor
scas
mov
add
lahf
jp
in
outsb
pop
inc
mov
aaa
jo
std
fcomi
fnstcw
jo
cld
test
shrb
cmp
cmp
cltd
add
add
add
and
and
imul
repnz
mov
add
add
add
sbb
pop
lcall
dec
dec
push
jae
negl
in
sbb
or
push
fwait
push
insb
add
add
test
add
add
stos
cmp
push
sbb
add
xchg
pause
ja
pop
mov
pop
aad
inc
mov
sub
push
add
add
fxch
dec
add
add
arpl
sub
scas
xchg
sbb
jo
xchg
adc
pop
and
iret
cwtl
mov
dec
pop
push
add
add
add
adc
or
insl
pop
lcall
leave
sub
add
add
in
cmp
es
cmp
mov
pop
daa
iret
mov
imul
sbb
sbb
xchg
nop
and
add
add
mov
lcall
add
add
pop
test
xchg
sbb
mov
jg
in
cmp
cmp
mov
xorb
inc
add
add
pop
shlb
add
add
test
out
lret
sbb
sbb
xor
popf
xchg
and
mov
or
hlt
pop
sbb
sub
ja
mov
into
out
dec
jne
in
adc
mov
inc
mov
jg
xchg
out
mov
cmp
add
fwait
ss
mov
cmp
xchg
dec
out
arpl
cli
mov
add
je
insb
mov
add
dec
push
mov
es
aad
lahf
jmp
call
cmp
es
pop
sub
xchg
nop
hlt
ret
inc
scas
add
add
add
mov
outsb
hlt
mov
pop
std
sbb
push
ss
stos
xchg
dec
aas
mov
add
inc
fmuls
mov
pop
loopne
inc
fcoml
sub
sub
ljmp
add
add
sbb
add
imul
inc
ds
test
cmp
in
xchg
mov
add
add
add
jmp
jo
xor
add
add
add
std
pop
sbb
pushf
sar
dec
repnz
div
mov
out
lahf
std
xlat
mov
paddb
add
push
mov
les
psrlq
fwait
sbb
loop
mov
cmp
xlat
sub
dec
lret
mov
fildll
xchg
daa
loop
mov
adcl
add
filds
insl
stos
mov
xchg
mov
add
add
cmp
jge
in
lods
and
adc
xlat
aam
test
add
add
pop
fldl
or
add
add
push
sbb
imul
adc
add
add
lret
clc
mov
shlb
sbb
cmpsb
andl
add
inc
pop
cmp
lods
pop
xor
in
mov
adc
pushf
call
dec
orb
add
add
pop
jp
dec
xchg
push
adc
mov
xlat
xor
cmc
sbb
dec
lods
fsubrl
cmpsb
andb
aaa
mov
mov
add
add
xchg
daa
mov
add
int
cwtl
sub
xlat
dec
in
push
adc
add
gs
cmp
add
add
add
jg
divl
rcrb
lahf
int3
xchg
cmp
in
scas
or
push
cs
jmp
popf
loop
xchg
mov
test
ds
pop
jae
sub
add
add
repnz
dec
xor
dec
mov
dec
add
add
inc
out
push
inc
pop
aad
fsubl
add
add
loopne
arpl
dec
jb
pop
addr16
and
hlt
jbe
add
add
jl
test
mov
mov
lods
xor
add
cwtl
sub
dec
add
add
insl
hlt
sbb
add
pop
or
add
add
mov
fcom
xchg
inc
movsl
xchg
xchg
in
add
cmp
add
aaa
xorl
add
jp
adcb
sub
sbb
call
int3
and
aas
jnp
sahf
fwait
test
ret
stos
cli
pushf
mov
adc
xor
arpl
xchg
int
dec
pop
pop
pusha
add
add
ds
fists
js
xlat
push
push
jmp
adc
dec
test
loope
lods
shll
sti
lods
or
add
clc
push
mov
add
jnp
repz
jnp
mov
adc
xor
sub
enter
sbbl
add
add
add
push
add
pop
lods
adc
sbb
out
sbb
xchg
and
mov
xchg
in
mov
sub
add
add
pop
dec
cmp
pushf
std
cmpsl
jge
jl
aad
int
sub
mov
int
pushf
xor
out
test
pop
leave
jns
inc
pop
sbb
add
add
sbb
add
add
add
or
adc
and
sbb
mov
xchg
and
dec
add
add
mov
int3
push
mov
mov
add
mov
sbb
stc
push
inc
call
add
add
sti
add
add
add
lods
clc
add
push
orb
add
stos
inc
ret
movsb
les
dec
add
add
xchg
pop
outsb
shrb
add
fiadds
outsl
imul
mov
adc
add
mov
and
add
add
xor
xchg
add
add
inc
inc
add
add
pop
pop
sub
inc
cmc
xchg
les
test
dec
xchg
sub
add
add
outsb
jg
hlt
sub
add
add
imul
aas
repz
pop
xchg
xorl
stos
scas
and
sub
add
add
add
mov
fisttps
dec
cmp
stos
jge
fcomip
bound
sub
add
add
push
aam
adc
aad
test
popa
add
push
add
add
testb
test
adc
xchg
jl
mov
movsb
clc
stc
pop
outsb
imul
add
mov
mov
add
add
xchg
sub
xor
setl
outsl
repz
add
movsl
or
push
daa
cmp
lods
sub
jmp
mov
jo
push
or
mov
fldt
add
add
gs
ror
xchg
cmpsl
bound
jbe
xor
adc
sub
hlt
xchg
dec
mov
jbe
mov
icebp
popf
add
add
inc
out
xchg
pop
nop
dec
or
mov
mov
push
pushf
mov
neg
test
sbb
out
push
in
lods
lods
sub
in
jb
icebp
or
add
add
stos
fsubl
adc
add
add
xchg
jae
xchg
je
add
add
xchg
cltd
ds
jno
pusha
mov
push
mov
mov
add
add
sub
sub
add
add
push
mov
sarb
bound
lret
xor
imul
shrb
sti
and
add
add
add
add
jae
ffreep
mov
sarb
adc
imul
pop
aaa
jns
cmp
add
add
in
popl
movsb
and
or
clc
xchg
fstps
jo
mov
sahf
testb
add
pushf
sbb
sub
lods
pop
mov
out
aam
push
jns
add
int
lea
jnp
js
add
add
cmp
add
jae
leave
and
add
int3
fcomps
cmp
sub
rolb
push
rolb
add
sub
add
dec
add
add
jns
scas
rol
sub
add
add
adc
imul
imul
sbb
fimuls
add
xchg
sbb
xchg
das
test
stos
or
int3
vpsrld
mov
add
adc
lock
pop
add
adc
and
add
add
rcll
adc
enter
jne
pop
lret
pop
push
jecxz
xchg
fbstp
xchg
icebp
fidivs
mov
xchg
adc
imul
add
pop
out
aaa
xor
xlat
mov
push
jp
andl
pop
in
xor
aam
xor
xor
jge
popf
xchg
xchg
orl
and
add
ret
outsl
inc
mov
add
add
add
pop
mov
out
sub
dec
add
add
xor
add
loopne
mov
inc
test
push
cwtl
pop
ret
aam
clc
hlt
out
pop
sbb
test
xchg
jno
xor
notb
dec
aad
push
jge
or
add
add
int3
sub
add
add
pop
adc
in
stos
leave
jb
add
lcall
push
lods
mov
push
mov
sub
add
add
add
pusha
mov
shlb
cs
xchg
jle
pop
push
cltd
outsl
sbb
int
rcll
into
cltd
cmp
jle
outsl
or
add
add
incl
lods
push
fstpl
xchg
jns
add
sbb
xor
dec
mov
and
dec
fisttpll
loope
push
sub
add
add
testl
adc
add
add
mov
inc
add
add
inc
mov
xchg
into
xlat
mov
pop
inc
jmp
icebp
and
add
add
mov
mov
out
xchg
dec
jnp
mov
add
cltd
lods
loop
sbb
lods
push
repz
add
add
add
out
and
nop
mov
add
jno
jne
mov
sub
mov
xor
iret
dec
push
xlat
pop
jno
add
mov
add
add
scas
arpl
mov
xchg
iret
jns
push
push
shrb
into
fnstcw
and
xor
sti
add
add
in
xchg
divb
add
push
and
add
add
ret
jmp
out
aad
mov
jmp
pop
adcb
jmp
pop
xchg
stos
cmc
clc
sar
fmull
lock
daa
push
in
mov
sub
divb
lcall
pushf
fwait
cli
loopne
mov
add
add
fsubp
adc
mov
ret
ret
imul
add
xchg
jno
lahf
jle
lcall
jbe
cltd
and
add
add
jnp
mov
jo
xchg
xor
pusha
mov
jmp
call
add
push
ss
jo
add
add
sub
inc
push
xchg
test
inc
xlat
dec
dec
sub
add
add
outsb
rcrl
lods
repnz
mov
fadd
sub
xor
cmpsb
xor
adc
or
popf
cmp
push
push
sbb
ret
mov
inc
loopne
shrb
icebp
mov
fdivrl
std
mov
in
xchg
or
add
add
js
cli
sahf
xchg
pop
jns
sub
ja
outsl
sub
add
add
lods
lds
cmp
lods
ss
test
mov
cmpsb
push
jecxz
jb
mov
mov
iret
je
loop
sti
pop
mov
mov
add
add
imul
jb
pop
int
xor
add
and
add
or
scas
inc
xor
jb
dec
lods
xor
add
cltd
adc
xchg
cmpsb
inc
in
add
pop
andl
adc
cmp
mov
xchg
sub
mov
test
fistl
xchg
mov
neg
test
and
jb
mov
std
mov
pop
pop
mov
mov
inc
xor
mov
mul
xchg
add
add
add
mov
fwait
cmpsl
jns
add
add
add
mov
iret
shl
aaa
add
sbb
push
hlt
jb
daa
rorb
ljmp
jne
xorl
sti
mov
call
mov
mov
lds
mov
and
in
jbe
rcl
adc
add
add
fildll
add
add
adcb
inc
fimuls
add
add
add
add
mov
lahf
aaa
loopne
mov
cmp
mov
out
mov
push
mov
dec
ret
aad
scas
push
js
xchg
mov
arpl
xor
xor
push
cmp
cmc
xchg
pop
je
test
cmp
aaa
popa
push
lods
mov
iret
ffree
dec
lcall
and
ljmp
push
out
adc
out
inc
mov
add
add
in
imul
int
xchg
rorb
add
add
push
mov
inc
ret
mov
mulb
pop
lcall
mov
cmp
daa
shlb
add
add
mov
add
add
sbb
or
jmp
sahf
mov
loopne
jno
add
add
je
fscale
icebp
lret
push
shr
popf
shll
pop
mov
jne
push
je
push
fsubrs
mov
stc
xchg
jle
test
or
add
add
push
pushf
adc
pop
addr16
pop
iret
imul
mov
adcl
adc
cs
lods
cmc
cmpsb
call
add
mov
inc
mov
movsl
pushf
add
dec
inc
cmp
lcall
push
loop
imul
add
add
jge
in
lea
mov
cmp
add
add
rclb
andl
sub
nop
out
jnp
out
pop
and
test
leave
push
nop
imul
add
cltd
mov
jecxz
lock
push
dec
test
mov
add
add
rorb
imul
pop
repnz
ret
fidivrl
inc
movsl
loop
jge
push
daa
out
or
add
add
sbb
add
add
subl
mov
lods
dec
mov
fiaddl
test
add
arpl
lret
push
or
cltd
xor
lret
push
lock
rcr
cltd
mov
sahf
dec
mov
add
mov
jle
pop
pop
mov
add
mov
pop
clc
mov
pusha
mov
jae
stos
pusha
add
add
mov
cmp
add
add
stos
rcrl
lock
roll
data16
pop
lcall
jecxz
inc
dec
and
jp
mov
loope
mov
add
and
add
add
mov
add
jbe
leave
sub
adc
add
add
add
add
add
jbe
repnz
cmp
outsl
clc
data16
movsb
jo
push
aaa
cmpb
inc
std
xchg
mov
mov
add
icebp
and
push
roll
cli
fwait
ljmp
sub
add
add
clc
dec
rcll
cmp
fldl
pop
stos
arpl
mov
in
test
push
pop
push
mov
in
add
add
inc
in
stc
mov
add
add
adc
jge
test
bound
aam
mov
out
sub
pop
pop
and
add
add
cmp
out
lret
outsb
aad
push
dec
xor
fdivl
in
pop
dec
mov
add
add
mov
jp
cmp
notl
xchg
xchg
push
cmp
inc
sti
or
jecxz
sti
sub
add
add
mov
and
push
fs
mov
xchg
mov
adc
add
out
jns
mov
hlt
repnz
cmpsb
scas
rcrl
add
add
push
jg
lcall
or
add
or
das
adc
in
xor
imull
mov
cld
nop
or
add
add
mov
fsub
shrb
add
add
in
inc
test
mov
mov
add
add
add
rorl
int3
xor
addr16
pop
sti
xor
stos
ljmp
out
es
push
stos
sbb
add
rcrl
test
xchg
ret
inc
mov
adc
idiv
icebp
int3
rorb
clc
mov
sbb
and
add
add
add
add
mov
jae
ja
ret
pop
mov
mov
add
cmp
mov
xor
dec
lret
adc
add
cld
sub
add
add
mov
add
add
fs
rdmsr
xchg
mov
cmp
aam
ljmp
pop
sbb
movl
hlt
or
idivb
mov
jno
adc
cmpsb
jp
loopne
andl
xor
inc
mov
push
jo
insl
enter
sub
mov
add
add
sbb
mov
jo
in
lea
mov
jecxz
sbb
push
dec
push
lods
mov
push
jl
cmp
sub
add
add
or
dec
dec
mov
inc
adc
repz
push
fwait
das
rcr
out
cmp
add
add
add
add
xchg
stc
and
add
sub
lret
add
add
add
add
je
mov
mov
mov
add
out
add
add
sbb
test
in
or
fwait
jne
movsl
out
arpl
push
cltd
mov
imul
add
push
adc
in
shlb
add
sbb
mov
add
add
add
icebp
mov
into
mov
rorb
xor
sub
in
jg
xchg
adc
cli
arpl
paddq
jg
aam
inc
or
xchg
mov
repnz
push
sbb
lret
and
sbb
ds
lds
add
dec
ret
push
daa
sbb
jmp
mov
cmpsb
into
mov
adc
iret
and
mov
inc
push
bound
xor
adc
mov
sbb
xchg
dec
xrelease
jne
out
cs
cld
shrl
push
mov
mov
addr16
dec
mov
orl
xchg
dec
lahf
sahf
sub
out
pushf
jo
or
add
add
pop
and
call
jns
out
xchg
iret
adc
add
add
add
add
je
mov
jo
mov
jae
das
lcall
lahf
dec
adc
sub
mov
sub
cmp
hlt
das
adc
mov
mov
add
add
add
add
adc
jg
in
sbb
mov
fucomip
inc
pusha
mov
rol
pop
rcrl
xor
popa
mov
pusha
add
add
pop
push
pop
into
fucomip
sbb
and
cmpb
out
add
add
add
arpl
add
add
repz
lret
pushf
jo
je
xor
stos
pop
push
lock
cmp
scas
dec
inc
push
lock
dec
inc
mov
jns
in
jl
push
call
andb
cmc
mov
add
add
add
add
jl
and
add
add
add
add
jmp
add
ret
sahf
in
pop
mov
dec
arpl
add
call
fstpl
pop
push
hlt
xchg
or
fmulp
orl
mov
ja
sub
mov
add
movsb
pop
aas
popa
mov
mov
jl
sub
leave
mov
mov
cmpb
ss
lock
fstpl
add
add
sbb
cmovle
add
fs
push
mov
je
sub
add
push
icebp
bound
repnz
xchg
mov
add
add
inc
cmp
mov
jp
stc
inc
js
pop
jae
das
mov
adc
xor
sar
iret
jb
mov
lods
mov
data16
int3
jb
cmpsl
mov
jge
and
push
push
ret
mov
add
add
ret
cmp
jecxz
adc
sbb
lret
popa
lock
xor
add
add
and
mov
cld
icebp
mov
leave
clts
cmp
or
add
add
mov
out
scas
shr
dec
mov
adc
pop
mov
inc
pop
out
bound
sbb
mov
mov
dec
notl
pop
xchg
sti
roll
jg
in
xchg
cmpsb
jg
or
out
cmc
pop
insb
add
add
pop
xchg
shrl
lret
adc
or
mov
mov
lea
lods
dec
loopne
ja
mov
lea
cmp
mull
je
xor
mov
mov
add
dec
je
pop
sbb
push
addl
ljmp
mov
addr16
add
add
xlat
out
icebp
mov
pop
xor
add
add
sub
sbb
insl
inc
jmp
mov
ljmp
adc
add
add
add
nop
inc
pop
and
fwait
sbb
mov
sub
mov
std
xchg
gs
dec
repz
das
sbb
pop
pusha
add
add
or
lahf
lock
mov
cmp
sbb
sbb
jl
pop
mov
push
ds
jl
adc
dec
testl
add
insb
mov
push
fucomip
call
push
mov
test
std
xchg
iret
movsb
sti
in
pop
bnd
aad
xor
pop
xcrypt-cfb
cmpsl
in
add
add
jo
and
add
add
push
jnp
and
dec
mov
lds
push
and
add
add
pushf
cmp
loopne
je
mov
add
add
push
das
xchg
ds
sahf
and
add
add
ds
mov
ja
sub
repnz
adc
stos
movsb
test
int3
cld
push
lcall
sti
orl
in
add
ja
fwait
pop
push
in
mov
add
add
add
aad
push
sbb
xlat
add
cmp
cwtl
iret
call
push
sub
add
add
inc
mov
add
mov
lahf
mov
lods
sbb
inc
mov
iret
adc
mov
es
jge
add
rcll
sub
loopne
push
out
or
add
add
insb
add
add
ds
jns
addr16
sarw
jne
inc
pop
dec
ret
dec
das
add
dec
imulb
inc
lock
mov
and
push
mov
or
or
add
add
add
ja
pop
ds
insl
mov
mov
add
mov
js
cmp
add
add
or
add
add
out
clc
pop
mov
add
dec
or
add
add
sbb
xchg
loopne
or
cli
adc
jmp
mov
cmp
repz
jl
dec
or
call
xchg
inc
mov
je
mov
add
add
push
add
sub
mov
mov
std
jo
fs
mov
add
add
add
das
mov
mov
add
stos
jbe
add
add
out
mov
or
mov
fsts
jecxz
sub
jne
insl
pop
mov
ret
jmp
mov
cmp
iret
call
or
push
stos
lods
fistpll
push
cltd
jae
add
add
add
mov
add
add
lods
clc
js
pop
xor
dec
xchg
push
fchs
not
cs
add
add
add
sti
pusha
mov
bound
mov
jbe
mov
stc
mov
adc
daa
js
mov
dec
mov
mov
mov
mov
shll
iret
push
js
out
icebp
popl
add
jae
pop
or
aaa
gs
sbb
add
and
add
in
mov
fwait
inc
push
and
add
add
dec
fildll
or
imul
and
add
add
mov
mov
fucomi
ja
push
test
js
sbb
inc
mov
jo
mov
hlt
xchg
xor
mov
add
stos
cmp
jno
jmp
xor
inc
push
push
mov
decb
add
add
add
add
ja
adc
cmc
pop
cmp
mov
out
into
cmpsl
sub
mov
push
in
insl
insl
push
repnz
mov
rcll
aaa
push
subl
xor
xchg
pop
ficomps
leave
cwtl
dec
xchg
stos
cmp
mov
icebp
push
outsb
jmp
jmp
add
add
push
adc
cmp
shrl
add
dec
add
add
add
mov
add
add
mov
pop
mov
and
out
iret
aam
add
add
aas
or
add
add
mov
lret
lahf
mov
add
add
add
inc
xchg
in
in
out
sahf
into
or
adc
add
add
dec
adc
push
sub
jno
add
or
mov
jb
inc
add
add
iret
jne
insl
mov
xchg
dec
fadd
imul
dec
xchg
or
pop
sbbl
push
mov
adcb
sbb
jno
push
fnop
out
push
pop
pop
jl
xchg
scas
movsb
test
push
dec
pushf
push
jmp
sub
out
scas
es
mov
imul
inc
cli
xchg
sbb
iret
pop
int3
xor
mov
push
xor
loop
fadd
dec
popf
icebp
inc
push
fwait
movsb
into
rclb
jg
or
mov
xchg
push
jb
out
xchg
jo
mov
and
add
add
add
lret
mov
rol
ja
mov
lods
sub
add
shll
aas
mov
or
jmp
mov
adc
test
push
pop
test
fistpl
pop
in
nop
movsb
add
rep
scas
xlat
fldl
pop
subl
push
test
hlt
fists
jno
cmc
pop
sub
mov
leave
or
add
add
in
mov
gs
add
add
fsubl
mov
sub
adcb
mov
mov
add
add
add
sahf
jl
ficompl
mov
xchg
repz
mov
aad
xchg
ds
jl
das
mov
add
add
add
mov
pop
lcall
or
sti
jo
dec
enter
and
add
data16
mov
add
int3
in
xchg
pusha
add
add
jp
addr16
scas
cmpsl
adc
sbbb
xchg
outsb
jns
gs
ljmp
add
add
shrb
and
add
add
push
fcompl
ret
sub
mov
mov
shrl
add
push
adc
repnz
sub
test
push
scas
push
rcr
xchg
lods
sbb
in
rolb
add
xor
lret
or
sbb
scas
xlat
adc
pop
in
add
add
mov
add
add
add
add
push
xor
repnz
xorb
movsb
push
sbb
add
add
xor
add
add
add
jmp
int
ret
mov
xchg
mov
add
call
xor
and
out
dec
mov
icebp
or
jae
adc
loope
xorb
cmpsl
jo
bound
ja
cltd
adc
test
pop
adc
dec
mov
pop
repz
int3
pop
pop
or
and
add
add
xor
fwait
mov
sarb
jmp
mov
add
