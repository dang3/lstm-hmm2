sbb
add
mov
mov
cmp
popf
cmp
cmp
imul
sahf
cmpsb
in
push
xchg
jbe
lret
mov
rol
sbb
jo
sbb
and
shl
xor
mov
rcl
ret
add
pop
out
daa
inc
mov
shll
add
dec
add
and
and
xorl
dec
pop
ret
fucomi
sub
xor
nop
out
int3
sarb
adc
filds
or
add
ret
push
xor
je
push
xchg
push
lahf
jnp
mov
pop
sub
jmp
adc
shrb
jo
fwait
lock
jbe
iret
xchg
add
insb
aad
cli
dec
ljmp
cmc
fwait
push
les
add
jne
inc
dec
in
xor
cmc
loopne
bound
cmc
xor
popf
cli
jno
mov
xchg
push
mov
sub
hlt
jp
mov
leave
pop
inc
pop
jns
xchg
gs
jmp
sbb
pop
data16
sbbl
mov
std
xchg
in
lods
sbb
lds
imul
mov
call
rolb
xor
lea
and
loopne
pop
or
enter
call
cmp
lret
test
loop
xchg
test
pop
mov
mov
es
jecxz
fisttpll
imul
jmp
push
enter
mov
add
stc
jne
enter
int3
xchg
sub
pop
or
adc
sub
dec
mov
fbld
outsl
jnp
xchg
jae
iret
hlt
loopne
add
lea
jnp
inc
int3
add
mov
push
fnsave
lahf
ror
pop
aas
fsubrl
fdivrl
xor
cmp
int3
ret
inc
push
mov
pop
enter
sbb
cmpsl
jno
xor
in
clc
adc
cmc
and
ret
ret
sbb
cmc
xlat
push
mov
dec
or
call
and
outsl
or
outsb
addr16
fstpt
incb
add
inc
ljmp
mov
jp
sub
or
in
adc
add
call
call
jno
mov
arpl
imul
mov
add
push
gs
xchg
sbb
cmp
sub
lea
sbb
inc
add
int3
xor
cmc
dec
xadd
test
in
sbb
fiaddl
jne
into
cld
cmc
mov
xlat
in
and
cltd
stos
pop
sti
and
adc
and
xchg
sub
dec
and
mov
or
icebp
mov
and
or
fs
test
dec
mov
ret
insl
push
and
xchg
jne
insl
clc
xor
dec
mov
inc
sub
add
xchg
loopne
mov
stc
hlt
adc
hlt
cmpsb
push
push
pandn
xchg
in
ss
mov
rcrb
das
push
sbb
fsubs
dec
sbb
in
out
mov
icebp
shlb
fstpt
and
popa
incl
push
xor
hlt
inc
xor
pushf
fmuls
rcrl
jno
jp
or
pop
cmc
mov
xor
adc
test
call
xchg
sti
mov
shrb
mov
sti
out
scas
pop
mov
and
movsb
aas
jl
jp
fadd
das
sbb
push
pop
dec
in
mov
incl
gs
repz
fcoml
add
cli
pop
jb
andb
jmp
and
fnsave
mov
jns
shl
push
outsb
push
shl
dec
add
lea
xor
js
adc
divb
mov
fisttps
loope
sbb
mov
insb
push
in
inc
mov
fidivs
scas
dec
mov
rolb
or
sbb
sub
and
fsubl
insl
fisubl
jle
sub
into
cli
cmc
dec
jl
dec
test
mov
ret
cmpsl
inc
aam
mov
dec
ficoml
fstps
shlb
and
fwait
inc
mov
mov
les
gs
stc
push
bound
scas
pop
jnp
xchg
pop
and
or
jl
out
dec
loop
mov
movsl
sbb
cs
nop
sub
pop
cmp
out
or
aas
out
aam
xor
inc
sub
fldenv
sbb
testl
push
pusha
cld
popa
xor
add
addr16
push
roll
mov
pop
inc
lret
clc
scas
mov
int3
push
adc
or
cwtl
movsl
add
loop
scas
mov
fstps
insl
jns
nop
mov
jmp
lds
mov
mov
mov
nop
push
mov
stos
mov
fisttpl
insl
inc
outsb
aas
repnz
mov
repnz
test
xor
lahf
mov
inc
lods
push
sbb
fistps
movsb
lret
cltd
shll
xor
mov
and
push
out
sbb
fcomps
fsubrs
sub
les
inc
call
dec
jns
xchg
inc
cwtl
test
dec
xor
sub
and
mov
pop
inc
cld
or
lret
cld
and
push
aam
ds
ljmp
into
scas
in
cli
outsb
sbb
mov
sbb
sbb
daa
inc
mov
out
jb
pop
add
test
jno
in
movsl
outsl
movsb
out
mov
dec
sub
mov
xchg
xor
je
mov
jmp
cmp
adc
dec
mov
in
and
ljmp
icebp
lea
shrb
imul
pop
xchg
xor
inc
fldl
pop
dec
adc
jne
popf
mov
sub
addr16
int3
sbb
xor
aad
xor
or
shlb
ss
rorb
imul
sti
push
jmp
and
or
fwait
xlat
out
cmp
mov
scas
push
mov
arpl
cmp
sbb
insb
ret
iret
and
lea
sbb
inc
mov
add
push
cmp
pop
sbb
xor
fnstenv
repnz
xorps
and
idiv
xor
mov
mov
pop
cmp
mov
sub
lret
cltd
mov
dec
sub
ss
dec
mov
fmulp
roll
cmp
out
rcrl
xor
mov
jbe
in
jl
dec
pushf
mov
sahf
movsl
and
cmp
fucomp
cmpsb
push
xor
dec
adc
fnstcw
das
lds
mov
add
and
gs
inc
shlb
sahf
mov
insl
cli
mov
xor
adc
sub
cld
loope
in
xchg
test
xor
inc
aaa
push
fwait
xor
lret
gs
inc
xor
jo
xor
xor
addr16
jns
ljmp
sub
rcrl
jne
ret
xchg
push
push
insl
insl
cmp
mov
popf
jns
and
sub
popa
in
mov
sub
mov
scas
jecxz
adc
data16
xchg
in
mov
push
mov
sbbl
cmp
bound
sbb
or
jnp
jne
xor
pop
dec
aad
jmp
mov
loop
in
mov
or
iret
mov
out
or
sub
or
inc
sub
lret
and
pop
lea
lea
arpl
sbb
mov
into
sub
movsl
pop
mov
or
aad
call
pushf
inc
test
xchg
jp
xchg
add
mov
pop
into
cli
add
adc
cmp
xor
jns
outsb
dec
int3
mov
inc
cltd
ret
inc
lcall
sbb
popf
mov
cmpsl
or
aam
or
repz
inc
test
cmp
lret
cli
inc
mov
lods
push
punpckhdq
aam
stos
and
popf
loopne
inc
fisubs
ret
out
dec
xor
push
cltd
aaa
inc
cltd
addr16
icebp
fadd
cld
ficomps
ss
idivl
ljmp
movsb
push
iret
mov
pop
sbb
loopne
fildl
rcl
or
sub
test
je
shll
jne
daa
scas
lock
pop
add
xor
icebp
lock
rcrb
xchg
dec
mov
aad
and
and
sbb
les
fimull
push
push
push
xor
stos
loop
das
pop
stc
inc
rep
out
mov
mov
add
dec
stc
ror
cmpsl
xchg
jne
pushf
xchg
mov
lcall
cltd
into
hlt
data16
add
mov
xchg
inc
sub
roll
jmp
push
subl
fmuls
clc
inc
push
mov
pop
inc
das
mov
fstpl
xor
aaa
xor
cltd
push
stos
test
scas
fisttps
pop
pop
lds
cld
nop
cmc
mov
lahf
fisubrs
movsb
jecxz
movsb
mov
sahf
add
pop
jp
out
xchg
adc
es
push
js
dec
ficompl
sbb
data16
xchg
jge
mov
cmp
int3
cmp
inc
fistps
pop
gs
jge
adc
and
or
rcr
adc
lds
std
push
ja
cmp
pop
fwait
out
xchg
inc
call
in
aaa
xlat
cmp
sbb
sarb
jp
push
mov
push
xlat
xchg
into
pop
nop
pop
fists
gs
adc
loop
mov
ret
xlat
jg
popa
int
fnsave
and
cmc
jge
outsb
sarl
test
and
adc
stos
loop
mov
je
lods
mov
fwait
sti
push
lcall
outsb
sub
iret
xlat
adc
insb
sub
pop
adc
dec
xchg
jno
mov
push
jno
loope
mov
cli
pop
add
les
adc
pop
jnp
push
pop
sahf
mov
imul
pcmpgtd
fimull
pusha
adc
hlt
clc
dec
movsb
inc
je
mov
es
pop
dec
jb
jnp
sub
aas
lock
xchg
adc
and
mov
iret
fisubrl
mov
incb
fwait
int
jmp
push
repz
clc
sub
fwait
insb
mov
dec
or
sbb
mov
xchg
test
lods
movsb
in
sahf
ja
sahf
fcomps
add
xchg
dec
and
in
pop
or
cld
lret
roll
int
mov
cmp
imul
dec
lahf
xchg
dec
or
int
aad
pop
dec
mov
fwait
pop
xor
daa
repnz
or
add
test
sub
jbe
jp
clc
pop
mov
jge
or
addr16
pavgb
int
pushf
sti
aam
mov
jle
push
in
sbb
out
int3
pop
xchg
push
mov
jne
rcrb
pusha
mov
nop
push
fwait
pushf
pusha
cli
ja
adc
or
jnp
cltd
outsl
cmpsl
add
js
stc
mov
mov
insb
into
aad
iret
sub
mov
pop
adc
and
xor
fidivrl
mov
mov
adc
jecxz
mov
jae
bound
lea
adc
jae
push
test
adc
repnz
push
stos
mov
pushf
or
shl
xor
andl
jge
inc
scas
mov
and
scas
adc
lcall
cs
into
shll
dec
pop
sarb
sub
jle
pushf
fstpl
or
ds
push
in
mov
xor
dec
and
xchg
loope
stos
into
rcrb
std
inc
int
dec
cli
add
rorb
rclb
sbb
inc
test
mov
xor
in
xchg
lock
push
repz
mov
xchg
sub
clc
add
addr16
in
xor
or
sbb
les
jge
shlb
xchg
mov
jae
loopne
repnz
iret
xor
xorl
rclb
out
dec
sti
inc
scas
push
or
fdivl
cmp
add
cmp
pop
and
gs
scas
roll
cmp
lret
xchg
push
pop
adc
xchg
mov
xlat
daa
jb
inc
imul
lds
repz
pop
cmpsb
data16
mov
stos
in
pop
mov
xchg
lret
ja
mov
cmp
loop
andb
xchg
icebp
sbb
test
xchg
mov
gs
mov
movl
shrl
add
or
mov
adc
int3
iret
jbe
sti
addr16
cld
pop
sarl
xor
repnz
test
int
scas
scas
movb
js
xor
aam
fadd
cmc
jecxz
je
or
aam
cmc
call
inc
cmc
repnz
int
adc
in
push
test
xor
push
cmp
push
das
cmpb
mov
jl
inc
inc
lahf
pop
or
sbb
xor
jo
xchg
je
cmp
mov
jecxz
cmp
call
mov
sub
iret
jg
mov
xchg
and
mov
lret
clc
sub
cmpsb
enter
jo
sub
sub
xchg
xchg
pop
ret
jno
cmp
jo
xchg
cwtl
adc
sbb
and
outsb
xor
jnp
sub
out
aaa
xorl
or
int3
mov
jg
ret
push
ret
mov
pop
fwait
sbb
dec
add
mov
aad
sbb
cmp
loop
pop
sbb
and
sbb
rcr
sub
sbb
outsl
ja
pop
inc
mov
or
out
je
jno
gs
test
mov
cltd
aaa
xor
andl
lods
pop
jne
arpl
flds
pop
pop
shl
push
xchg
or
cs
ja,pn
and
and
je
push
add
xchg
xchg
cmp
xchg
sahf
push
idivb
xchg
sahf
and
xorl
out
jecxz
mov
flds
push
cmp
pop
mov
cld
aaa
jbe
sbb
xchg
add
dec
div
daa
mov
dec
insb
subl
cmp
ljmp
cmp
pop
add
cmp
and
mov
sbb
or
repnz
cmc
xchg
inc
outsb
clc
mov
mov
pop
add
mov
jno
enter
xchg
and
and
insb
lea
pusha
push
add
or
rorl
cmpsl
dec
fucomip
add
call
arpl
xchg
adc
sub
lret
or
dec
insl
pop
pop
aas
or
cmp
lahf
daa
incl
inc
adc
cltd
cwtl
imul
lods
sbb
or
movsl
test
mov
ret
sahf
jne
jle
iret
ja
int
inc
inc
popl
mov
fdivrp
inc
adc
and
int3
jnp
ret
mov
add
and
inc
mov
idivb
ss
xchg
jp
adc
xchg
test
push
jecxz
test
adc
iret
ret
dec
icebp
sarb
dec
int3
adc
lock
fnstcw
inc
xchg
xor
lret
jmp
add
jo
and
pop
xchg
nop
mov
lods
mov
movsb
lock
mov
jno
mov
mov
mov
mov
push
sub
xchg
stos
test
mov
jne
inc
mov
fildl
int
stos
sub
dec
add
imul
imulb
xlat
mov
test
push
xor
imul
lock
adc
stc
ret
push
dec
call
inc
add
mov
aaa
cmpsb
imul
or
inc
adc
int3
inc
pop
push
xchg
pop
add
pop
into
cmc
adc
pop
jbe
add
pop
mov
loopne
pop
repnz
popf
add
dec
or
repz
mov
daa
movsl
push
fstpl
shlb
in
cwtl
inc
jns
lods
sbb
add
fildll
lahf
fisubrs
call
and
clc
in
xchg
cmp
es
or
mov
push
jns
cmp
pusha
pop
cmp
inc
into
inc
dec
sub
fwait
lret
sar
pop
in
xor
loop
popa
les
lods
push
and
push
mov
fs
shl
test
adc
push
mov
sub
pop
aad
dec
js
push
jp
mov
rcll
fsubs
aaa
pop
mov
mov
push
push
push
cmpsl
jmp
arpl
dec
aaa
je
ret
and
sub
xor
cmpsb
or
jns
loopne
mov
pop
add
sti
and
jo
push
mov
push
jne
mov
jle
pushf
add
mov
mov
int
lods
add
dec
imul
push
cld
inc
div
pusha
push
inc
xor
sbb
mov
movsl
int3
jmp
add
test
xchg
sahf
mov
jns
mov
fs
pop
or
repnz
rcrb
stos
fisubl
sub
cmp
and
fs
dec
mov
test
cmp
or
arpl
call
push
insl
push
inc
shlb
pop
fs
out
sub
orl
jecxz
in
pop
dec
jb
inc
outsl
pop
add
aas
sub
fidivl
mov
out
scas
and
inc
ja
xor
imul
adc
sbb
dec
push
ss
mov
in
push
cmp
imul
push
int3
sub
push
addr16
out
push
fdivl
cmp
daa
in
mov
mov
inc
pop
outsb
arpl
sbb
cwtl
mov
jne
flds
mov
mov
leave
jno
mov
jno
dec
add
fsub
pop
jno
or
std
xor
test
and
mov
sbb
in
mov
rol
sbbl
jns
je
dec
mov
orl
aaa
xchg
fnstcw
dec
pop
in
push
cmpsb
gs
mov
mov
add
mov
clc
mov
mov
cmp
pop
mov
inc
dec
fs
jecxz
ret
mov
in
mov
mov
fnsave
pop
leave
imul
inc
adc
movsb
pop
test
aam
sarb
xchg
loopne
dec
loope
das
mov
popa
or
pop
push
imul
je
sbb
negb
clc
inc
xchg
cwtl
push
xor
and
cli
xor
dec
mov
dec
rolb
mov
mov
pop
icebp
pop
insb
add
addr16
inc
mov
movsb
inc
mov
inc
or
loop
pop
pushf
lret
sub
add
movsb
fdivrs
mov
imul
adc
jne
cmp
push
mov
mov
jge
out
mov
icebp
jmp
lods
add
mov
mov
pop
popa
aas
fadds
add
adc
frstor
and
inc
pop
jae
subl
es
mov
insb
pop
sbb
add
dec
test
jg
xchg
fidivl
ja
adc
movsl
std
fsubrl
pop
or
sub
rorl
mov
repnz
clc
ljmp
push
out
loope
stos
add
cld
movsl
ret
mulb
test
push
sbb
pop
lahf
sub
outsb
popf
scas
popa
rcll
mov
aam
mov
gs
jp
mov
fstpt
cmp
lock
add
sub
push
insb
jns
pop
movb
loop
pop
test
dec
sbb
sbb
dec
test
in
sub
or
xor
mov
fcompl
push
pop
cld
inc
rol
sub
add
jb
fnsave
sbb
mov
addr16
sub
int3
add
sti
xor
mov
ret
cmp
adc
mov
call
lds
mov
jmp
cmc
and
mov
push
sbb
pop
stos
xchg
fcoml
js
imul
ret
fnstcw
cmp
popf
test
movsl
jecxz
jecxz
push
dec
daa
pop
inc
stc
dec
fdivrs
push
mov
data16
push
jbe
sbb
or
push
xchg
push
and
xchg
sbb
in
cmpsl
xchg
outsb
shlb
das
sbb
loop
ljmp
add
adc
jp
data16
xchg
push
adc
fildll
cltd
and
add
and
icebp
or
scas
sbb
push
inc
sub
pop
cli
xlat
pop
test
mov
outsl
cmp
fdivrp
adc
jle
and
inc
push
xor
push
cmp
test
jg,pn
jne,pn
add
xor
cmc
pop
gs
dec
int3
or
imul
add
adc
sarb
mov
shrb
aaa
dec
mov
into
fadd
push
cmp
imul
xchg
push
push
mov
push
dec
loope
pusha
movsb
cmpsl
dec
mov
out
xchg
sahf
add
js
xor
std
cltd
popf
stos
sub
push
mov
push
in
sub
mov
pop
mov
push
jnp
mov
dec
popa
cmc
in
xchg
push
into
xchg
es
out
and
cmp
dec
gs
jne
mov
push
push
mov
fbstp
lds
pop
sbb
rclb
inc
cmp
rcrl
jecxz
sahf
call
dec
lret
dec
pop
mov
dec
inc
sub
jne
pop
jbe
stos
ss
outsl
mov
fcmovne
adc
int3
sub
pop
mov
or
orb
dec
imul
dec
sahf
andl
mov
lock
pop
addb
add
enter
sbb
lea
mov
jle
sbb
in
sbb
subb
push
fisttps
mov
negb
jns
mov
jnp
aaa
pop
mov
movsl
sbb
cltd
adc
and
rclb
js
fldl
push
mov
cmp
dec
enter
or
fsubr
rorb
sbb
loop
shl
not
jge
or
adc
test
mov
cld
fnstenv
fstl
popa
lea
loopne
dec
pushf
les
pusha
jl
arpl
mov
lret
inc
movsl
shrb
sub
mov
imul
jnp
mov
hlt
xchg
aas
lret
add
in
test
shl
shl
mov
jne
adc
jl
insb
pop
repnz
fidivl
fimull
and
scas
aam
lock
jmp
sub
mov
nop
push
jne
mov
out
add
dec
lock
mov
jnp
jnp
mov
jno
mov
push
xlat
mov
and
sar
stos
in
xor
xchg
leave
das
sub
les
pusha
adcl
sub
aad
pop
mov
ret
out
jne
in
ficoms
mov
out
lods
test
hlt
cmc
mov
or
jns
dec
mov
orb
daa
mov
pop
mov
nop
adc
scas
adc
les
sbb
inc
stos
push
fmuls
lods
lea
sub
adc
xor
fisubs
push
lret
push
je
and
loopne
sti
and
push
mov
sbb
adc
insb
xor
fcom
pop
mov
or
adc
mov
mov
mov
push
jecxz
xchg
pop
push
cmp
mov
pop
aaa
adc
enter
pop
xchg
lock
ret
mov
cmpsl
rcrl
mov
mov
ds
aam
xor
cmp
sbb
mov
dec
sub
push
call
cltd
push
mov
aas
or
lret
xchg
jo
dec
push
cmp
popf
sub
inc
test
movl
das
outsb
insl
sub
nop
jp
mov
jg
mov
leave
push
cmc
mov
es
repnz
push
rorb
js
dec
jno
sahf
and
sbb
lods
mov
mov
lahf
xchg
xchg
adc
mov
jp
into
ror
jecxz
add
xchg
pop
sahf
aad
insl
xor
cmp
adc
shlb
push
push
and
mov
cs
test
adc
stc
ss
andl
pusha
adcb
cld
aaa
xor
mov
sahf
or
fwait
push
test
out
popa
pusha
mov
pop
gs
dec
dec
xor
in
pop
inc
sub
loop
add
int3
lahf
or
inc
or
mov
in
testb
lret
scas
xchg
xor
xchg
mov
xor
mov
add
mov
adc
test
pop
or
mov
sub
add
adcb
les
and
dec
mov
xor
sub
mov
mov
inc
arpl
mov
imul
and
call
jns
arpl
adc
xchg
out
push
sub
and
pop
mov
lret
push
hlt
aas
nop
jno
mov
hlt
mov
negl
les
fwait
sbb
or
push
cmp
push
insl
or
pop
push
xor
push
aam
jle
pusha
ret
or
fstpt
mov
lods
shll
and
inc
xchg
mov
cmp
xchg
cmp
dec
sbb
fbld
sub
sbb
push
cwtl
jae
pop
mov
xchg
xor
xchg
popa
icebp
push
imul
push
icebp
sti
in
sahf
xor
testb
neg
or
movsb
adc
fwait
jbe
adc
sbb
out
ds
or
loope
scas
jno
cmp
dec
rcl
andb
mov
jbe
push
pop
pmaddwd
lcall
mov
stos
das
cmp
mov
mov
out
scas
into
rorl
push
add
sbb
or
outsl
pop
ficoms
fnsave
shrl
jne
ficoml
scas
lea
inc
add
lret
imul
dec
add
arpl
loope
pop
mov
pop
pop
sbb
cli
push
jecxz
lock
iret
jecxz
testb
out
test
cmp
mov
xchg
lret
mov
push
cltd
leave
dec
push
and
mov
pusha
or
outsb
or
movsbl
add
mov
xchg
jbe
adc
ds
cmpsb
adc
cli
push
bound
xchg
fs
pop
xchg
lret
dec
shl
scas
fmul
pop
push
insl
fmull
sub
arpl
popf
or
push
dec
pop
jne
lock
icebp
and
pop
pop
aaa
sbb
mov
stos
test
xchg
jecxz
ret
push
jo
jbe
leave
mov
popa
jmp
jbe
adc
les
dec
in
sbb
stos
ret
enter
loop
or
jne
ljmp
mov
cmpsb
jg
sahf
cmp
mov
sub
mov
xchg
xchg
loope
xchg
mov
lahf
jmp
aaa
pop
jp
and
popf
inc
jg
jno
sub
stos
bound
jecxz
gs
loopne
push
out
push
aaa
outsl
loop
and
pop
inc
jo
shrl
xchg
insl
cli
lret
fldenv
mov
shlb
mov
pop
xor
nop
push
inc
push
movsb
or
xor
out
clc
insl
xchg
cmp
sti
in
in
or
cmp
test
or
mov
jo
stc
loope
lds
arpl
psadbw
nop
mov
jl
cmp
xor
jecxz
cmp
movsb
test
lock
mov
pop
jae
push
or
scas
lahf
imul
pop
mov
ljmp
sbb
push
pop
mov
jb
jge
js
dec
loope
push
cmc
xchg
and
pop
shl
mov
sbb
outsb
icebp
imul
mov
lcall
cwtl
ds
jns
mov
adc
inc
push
and
movsl
stos
adc
mov
adc
in
push
xor
sub
jbe
sub
push
insb
mov
out
sub
rcll
ret
imulb
cmpsb
fs
xchg
in
fucom
xchg
stos
fstpl
data16
xchg
mov
mov
dec
out
int
xchg
add
jge
cld
push
jge
and
push
andb
fisttps
xchg
xor
inc
addl
dec
xchg
repnz
mov
mov
enter
andb
out
leave
push
dec
hlt
push
mov
push
ljmp
leave
test
sub
daa
dec
xchg
sub
dec
mov
jae
pop
iret
fildll
mov
mov
shlb
push
dec
loop
jb
sar
orb
incl
push
cmp
lahf
testl
add
adc
mov
dec
dec
inc
lods
int3
sub
adc
xchg
cli
lods
dec
vpaddsw
repz
mov
or
fwait
shll
aad
lods
nop
stc
dec
dec
xor
jnp
sbb
out
xchg
int
mov
cmpsb
pop
sbb
cltd
jbe
jbe
mov
mov
xchg
dec
rcll
sub
sub
outsl
je
push
adc
into
mov
jecxz
jns
std
sbb
inc
add
xor
fdivs
and
mov
add
scas
mov
jb
daa
push
xchg
xor
push
loopne
sub
notl
sbb
jne
jle
ds
mov
adc
lods
fwait
push
mov
xchg
sbb
test
mov
fsubrs
dec
lds
or
insb
or
push
std
xchg
arpl
xor
jo
sbb
arpl
adc
ficoml
je
popl
outsl
cli
rcl
cmp
sub
out
jp
mov
cmp
mov
dec
inc
and
loope
int
sub
mov
dec
int
mov
ret
fnstsw
and
sbb
out
enter
and
lcall
xchg
cmpsb
and
lretw
aaa
pop
xchg
mov
call
aas
dec
sbb
pop
push
push
push
test
sub
aaa
jbe
test
jle
jnp
repnz
xor
adc
mov
adc
cmp
js
xor
das
bound
rcll
sbb
cwtl
mov
jns
mov
test
mov
loop
push
and
mov
out
fwait
leave
push
shll
push
dec
mov
mov
shr
lcall
fcomp
add
fdivs
jmp
jno
pusha
call
pop
push
mov
ljmp
inc
dec
sti
imul
fwait
sarl
xor
sbb
adc
jae
push
test
fucomip
or
sahf
xchg
inc
or
push
cmp
test
xchg
nop
xchg
push
subb
clc
fsubs
test
adc
mov
adc
div
loop
pusha
sub
lea
mov
or
push
fdivr
jbe
mov
mov
imul
cmc
add
in
add
movl
stos
mov
add
ja
push
shll
jb
add
in
sti
dec
jle
pop
xchg
aad
sub
add
movl
push
imul
and
cs
inc
inc
mov
jbe
or
ljmp
outsl
cmp
lret
gs
jne
sbb
imul
repnz
sarl
xchg
adcb
xchg
popa
jmp
xchg
jbe
inc
hlt
or
out
popa
iret
jle
addb
mov
les
imul
push
imul
add
int3
fs
cltd
pop
int3
into
adc
mov
add
testb
xchg
mov
jp
aas
addr16
xor
xorb
jbe
fmulp
cmc
fndisi(8087
push
mov
clc
jmp
mov
cmpsl
mov
shll
shll
pusha
mov
es
jmp
jg
ja
fists
roll
loopne
lods
ljmp
insb
rcr
add
xor
je
adc
int
mov
js
insl
ds
jle
dec
dec
pushf
call
enter
in
jb
fdiv
ljmp
jo
bnd
inc
sub
dec
push
repnz
jno,pn
loop
jae
mov
xor
jnp
stos
or
or
push
out
adc
sbb
subl
ja
mov
cmp
fidivrs
mov
inc
test
ds
and
cmc
dec
int
ds
mov
cmp
inc
fbstp
pop
mov
lcall
push
push
and
and
lea
xor
cmc
fsub
mov
cwtl
cltd
fninit
aad
imul
sbb
outsl
leave
cmpb
inc
sub
sbb
mov
mov
loop
xchg
mov
xor
push
xor
fistps
sub
lret
mov
jno
bound
loop
mov
stos
xchg
mov
jmp
cmc
pop
sub
cmc
mov
and
inc
sbb
enter
and
outsl
sarl
cmp
inc
fwait
leave
test
jge
cli
lcall
mov
sub
pop
mov
out
push
adcl
mov
xchg
sub
or
test
cmp
adc
addr16
dec
test
lret
cmc
loope
push
cmp
sbb
stos
adcl
pop
mov
sbb
push
push
cmp
jnp
mov
mov
stos
jl
dec
inc
cmp
xor
insb
xor
movsb
imul
ljmp
dec
shll
jno
or
repnz
pop
mov
mov
jns
mov
shl
stos
sub
pusha
mov
dec
pop
mov
xchg
cmp
cmp
fidivs
rol
mov
lcall
pusha
push
and
rol
fs
and
test
xchg
jne
stc
inc
cld
mov
and
mov
iret
loope
push
pushw
adc
add
mov
push
loopne
stos
nop
mov
test
jmp
mov
shrl
xlat
push
sub
mov
pop
iret
lret
xor
push
jne
nop/reserved
mov
insb
xor
hlt
cmp
lret
nop
dec
mov
repnz
add
push
sub
xor
pop
icebp
cltd
adc
cmc
xchg
inc
lret
outsb
and
push
inc
sarl
mov
xor
in
cwtl
pop
dec
or
ljmp
mov
xchg
mov
lret
cmpsb
in
xor
jg
jnp
imul
and
iret
cli
pop
and
inc
in
jl
adc
insb
jl
out
push
cmpsb
test
xchg
clc
fildl
or
cmpsl
mov
popf
cltd
dec
hlt
std
mov
repnz
jecxz
cmp
mov
popf
push
inc
xchg
adcl
jnp
push
les
insl
leave
test
sub
leave
xor
leave
pop
xchg
lea
lahf
iret
and
xchg
out
in
gs
and
dec
dec
scas
je
enter
pop
popa
dec
sub
sub
push
xlat
add
cmpsl
mov
cmp
cmc
push
push
cmp
imul
jl
mov
sub
int
decb
cmp
xor
into
and
int
test
leave
or
cwtl
cs
adc
push
push
jns
setbe
nop
jg
adc
cmp
xchg
dec
orb
dec
jbe
cmp
jmp
mov
shlb
fdiv
adc
rolb
out
das
cmp
mov
jge
fnsave
movsb
mov
xor
fists
jns
mov
insl
rcrl
ret
fdivl
test
fwait
ret
outsl
dec
fldenv
cmpsl
dec
insb
les
add
outsb
nop
or
pop
mov
push
jl
adc
mov
rol
daa
xchg
add
lret
cvttps2pi
test
scas
loopne
sub
xchg
repnz
and
push
mov
fmulp
mov
repz
divb
adc
sbb
test
mov
sar
push
mov
inc
sub
adc
or
mull
push
mov
or
dec
xor
cmova
in
inc
lahf
mov
cmp
data16
mov
and
or
loop
andl
scas
outsl
and
and
mov
push
enter
loop
rol
gs
fnsave
mov
outsb
lret
lret
cli
or
or
subb
mov
stc
fucomip
data16
inc
jmp
mov
add
inc
pop
sub
xor
insl
dec
rorb
dec
jae
add
adc
pop
adc
xchg
or
dec
mov
mov
dec
dec
repnz
arpl
call
fstl
ja
inc
lret
and
lea
cltd
mov
in
xor
mov
dec
aaa
jno
dec
lods
enter
in
dec
dec
lcall
and
jo
enter
push
lock
jns
xor
cmp
xor
and
add
lret
dec
out
insb
in
out
xchg
and
dec
pop
mov
xor
loopne
mov
dec
adc
out
or
ljmp
jnp
dec
xor
or
call
fists
cs
movsl
scas
dec
add
mov
push
bound
jecxz
pop
hlt
jns
and
sbb
divb
jle
int
mov
xor
adc
cltd
cld
or
jbe
jmp
movb
mov
and
mov
clc
add
mov
in
mov
mov
inc
sbb
inc
sub
mov
dec
cmp
inc
int3
mov
push
push
repz
xor
in
in
inc
cmc
es
sub
fsts
sub
cwtl
aas
negl
adc
imulb
dec
dec
stc
xchg
sbb
stc
gs
loopne
dec
enter
pop
decb
out
mov
sbb
test
pushl
jne
in
cmpb
pop
cmp
aad
insl
loopne
movsl
cmpsb
mov
mov
gs
add
jle
inc
sarl
sub
int
jg
imul
out
push
jae
das
mov
movsl
pop
sbb
imul
test
add
mov
mov
mov
sub
sbb
dec
inc
fildll
add
repz
cmp
fwait
cld
pop
int
mov
adc
adcl
enter
adc
dec
ucomiss
decl
sub
mov
lret
or
jle
inc
int3
mov
cs
cmp
adc
fs
aad
fs
ret
cwtl
sbb
nop
jns
cmpsb
pop
rcrl
rclb
adc
loope
mov
dec
sbb
mov
mov
movsb
test
arpl
and
inc
adc
stos
or
dec
jmp
mov
fists
mov
loope
xor
lds
shrb
adc
add
fsubl
mov
das
subb
sub
mov
rcl
inc
sub
xor
fldcw
xor
mov
and
cld
xchg
pop
cmc
pop
jle,pt
aas
jl
push
pop
mov
subl
pop
xor
insl
outsb
int3
jl
or
push
mov
sbb
inc
ja
inc
out
pop
mov
pop
and
lods
cld
addr16
mov
mov
fnstcw
adc
mov
cmp
das
dec
cmp
jmp
add
dec
mov
cmp
inc
add
sub
or
fidivl
mov
jno
xchg
mov
push
push
cmp
add
andps
repz
push
jmp
and
stos
int
addr16
and
xchg
lods
cmp
mov
sub
fnstcw
pop
fcompl
mov
outsb
test
jno
xor
test
jne
int
out
iret
xchg
sbb
xor
push
test
cs
pop
fcmovnu
punpckhbw
lcall
out
scas
adc
inc
mov
nop
or
pop
mov
fwait
mov
mov
scas
pop
inc
ror
adc
or
or
xor
int
and
cltd
int
lods
mov
mov
leave
add
stc
orl
sbb
test
or
push
push
or
bound
subb
mov
shll
sbb
cmp
roll
jecxz
pusha
xchg
daa
aas
iret
pusha
inc
fwait
scas
fwait
add
jle
jmp
mov
pop
stc
std
test
int
sub
mov
scas
jne
stos
pop
xchg
lea
push
mov
mov
mov
jmp
out
lret
and
shl
xchg
adcl
mov
repnz
lods
movsb
adc
xor
pop
leave
std
js
xlat
out
mov
cmp
inc
test
movsl
lahf
xor
rcpps
nop
push
andb
icebp
lock
and
int3
das
mov
cmp
push
adc
mov
inc
imul
pop
sub
fistpl
mov
arpl
and
mov
xor
sbb
ss
jp
insl
les
push
mov
aad
xchg
add
pusha
stc
push
loope
dec
pop
dec
add
dec
call
dec
cmc
inc
dec
xorl
and
cmpsl
or
jmp
scas
adc
jg
mov
push
jbe
xchg
bound
xchg
arpl
or
subl
push
or
sbb
iret
hlt
cmp
aad
add
or
jo
out
jbe
xlat
fnstenv
fisttps
pop
add
sub
pop
mov
fldt
dec
cmc
aas
loopne
sbb
ds
push
bound
cmp
popf
aaa
adc
rcl
and
pop
lahf
stc
xor
cwtl
sbb
scas
aas
adc
push
hlt
inc
xchg
scas
hlt
mov
addl
int3
cli
es
mov
inc
aas
xchg
movsb
in
mov
fucomip
lcall
pushl
pop
push
mov
inc
push
in
imul
aad
mov
adc
lret
lods
addr16
aas
ljmp
jmp
test
xor
push
pop
or
jnp
pop
inc
fdivrl
cmp
iret
aas
pop
add
mov
pop
sub
adc
dec
xor
jmp
cmp
outsl
xchg
stos
jo
cli
jle
loopne
sbb
add
repnz
mov
sub
bound
and
xor
lret
push
ljmp
mov
orl
repnz
mov
add
adc
push
jle
enter
mov
add
pop
pop
outsb
scas
pop
pop
sub
ret
pop
xchg
xchg
pop
les
cltd
clc
sub
jle
inc
shrl
ret
insb
pop
mov
sub
movsl
in
loope
push
push
add
fnstenv
sub
push
xor
cmp
inc
pop
btc
add
in
or
or
mov
lods
mov
and
sbb
dec
icebp
dec
enter
imul
push
xor
pushf
frstor
inc
loope
stc
cmpsl
cmpsb
aas
int3
and
mov
mov
inc
jecxz
xchg
sbb
into
sahf
add
clc
lods
sahf
mov
loopne
stc
cltd
loope
mov
mov
pushf
add
xchg
or
and
and
out
xchg
dec
jb
sbb
dec
mov
cmp
xchg
mov
fwait
lods
adc
adc
pop
push
and
rcll
inc
stc
nop
aad
js
out
hlt
and
scas
mov
imul
sbb
shl
push
pop
jno,pn
sub
arpl
inc
push
adc
xor
lahf
ja
jb
xor
adc
out
pushf
lods
outsb
pop
push
push
mov
mov
mov
iret
outsl
les
mov
inc
call
mov
rorl
in
popa
pop
mov
fdivrp
mov
rorl
rcl
mov
push
out
cmpsb
sbb
movsb
out
mov
push
push
pushf
sub
je
push
pop
inc
andl
stos
lods
or
mov
sub
push
mov
and
mov
arpl
sbb
test
mov
test
ss
clc
sub
jecxz
pop
inc
pop
inc
xlat
xor
push
rcrb
sub
mov
shrb
dec
shrl
lock
mov
jge
pop
mov
lret
leave
outsl
pop
sub
jp
dec
into
fidivrl
mov
inc
sub
cmc
adc
lret
cld
das
in
lret
xor
pusha
xor
in
pop
inc
cmp
push
enter
mov
clc
mov
jge
and
fadd
gs
iret
sbbl
jns
aas
jno
dec
xchg
sbb
stos
pop
movsl
ss
xchg
inc
imul
aad
mov
imul
imul
test
js
jp
jg
inc
test
mov
das
lods
movsl
pop
xchg
add
jnp
xchg
adc
inc
aas
sub
mov
mov
nop
or
in
into
mov
mov
outsl
add
mov
mov
imul
and
dec
inc
xchg
xchg
fwait
cmp
adc
sub
icebp
mov
jp
fs
xor
mov
ljmp
fidivs
mov
sub
lahf
outsl
mov
push
ss
and
dec
addb
adc
cmp
movsb
loope
inc
mov
push
insl
cmp
pop
push
add
jecxz
push
sub
arpl
mov
dec
mov
test
vpaddq
add
add
in
xor
mov
movsl
iret
popf
ljmp
call
icebp
pop
add
repnz
cmp
xor
inc
inc
and
push
add
test
add
sti
std
push
inc
pop
xor
push
stc
fmull
cld
fsubrl
stos
jp
push
sti
daa
popf
adc
sub
xorw
push
push
dec
adc
shrl
cmc
faddp
loope
arpl
inc
and
ds
into
pop
mov
int
ror
inc
xchg
mov
aas
sbb
fildll
lods
jl
mov
aam
push
xor
xor
cmp
and
das
xor
lahf
adc
dec
ds
sub
dec
xor
adc
xchg
test
push
sbb
inc
cltd
sbb
xchg
lcall
pop
in
rolb
call
jecxz
cwtl
es
lret
sbb
and
pushf
mov
sbb
mov
sub
or
daa
sub
enter
subb
and
int3
push
sub
nop
xchg
pop
dec
mov
rorb
mov
jp
popf
dec
cs
jnp
push
sti
aaa
shlb
pop
mov
pop
testb
xchg
daa
daa
aaa
push
js
ret
lods
into
xor
out
xchg
arpl
jns,pn
and
ljmp
call
lods
or
push
dec
addr16
pop
scas
inc
clc
dec
sub
icebp
imul
mov
dec
cmc
add
fimuls
sub
mov
inc
add
adc
mov
out
sub
mov
cltd
int
out
jnp
in
into
enter
js
xchg
fwait
adc
jae
push
scas
clc
repnz
pop
aad
add
lock
pop
loop
sub
mov
fwait
lea
repnz
movsb
ret
and
imul
ds
inc
pop
jecxz
lahf
shrb
negb
mov
jbe
adc
xchg
ds
push
pop
sti
clc
xchg
jns
push
leave
je
xor
sub
dec
cmp
pop
xchg
jnp
adc
lods
test
xchg
adc
sahf
lods
es
adc
inc
lds
sbb
jp
mulb
mov
aam
ret
outsl
and
icebp
adc
js
push
aam
gs
les
aaa
pop
and
fstl
fwait
sub
in
push
dec
fwait
sub
repnz
dec
cwtl
pop
dec
enter
call
arpl
scas
imul
xchg
mov
stc
sbbb
cld
mov
ficomps
add
adc
lahf
adc
fbld
div
mov
sbb
adc
inc
push
pop
sahf
out
in
pop
push
push
add
add
cmc
mov
test
js
sbb
jb
xor
mov
das
test
out
loop
aaa
mov
imul
scas
daa
sub
imul
dec
add
push
xor
lods
jno
fdivl
je
or
xor
push
lock
jp
jo
push
pop
scas
dec
xchg
mov
adcl
or
mov
mov
pop
cmpsb
dec
xor
or
mov
sub
jp
sbb
and
cli
xor
pop
cs
or
shll
or
imul
ret
or
pusha
push
mov
lret
shr
dec
ja
adc
fdivrs
inc
les
xor
dec
scas
and
cmp
mov
gs
ljmp
mov
lea
enter
xor
call
xor
xchg
inc
cmc
add
call
jne
push
popl
mov
xor
mov
mov
dec
inc
and
sbb
shrl
in
aaa
lods
mov
fildl
jb
inc
fnstsw
repz
test
pop
leave
in
or
push
in
mov
lds
adc
add
std
rorl
leave
xchg
xor
dec
arpl
mov
enter
int3
and
add
sahf
cmp
cli
cmp
pop
xchg
jbe
call
mov
scas
ficoms
sub
jno
push
fnstenv
clc
xor
mov
outsb
fsubrs
insb
xor
outsl
mov
popf
lcall
jbe
mov
push
or
jp
vsubps
xlat
jg
xchg
imul
cmp
dec
lahf
jno
mov
or
ret
push
inc
and
mov
xchg
gs
mov
cltd
mov
fcmovb
pop
cmp
dec
lods
imul
arpl
mov
adc
sub
or
nop
pop
xchg
jge
hlt
sub
pop
adc
sub
shlb
push
call
sti
pop
ret
jae
push
ja
jl
test
in
cwtl
sbb
loopne
jge
mov
adc
test
mov
clc
cltd
mov
inc
scas
mov
push
mov
dec
push
xor
movsl
test
iret
xlat
and
es
inc
rcl
mov
cmp
inc
enter
fiadds
xor
mov
lock
sub
xor
faddp
mov
sti
jmp
push
mov
jne
adc
xor
daa
mov
jae
ljmp
inc
cmp
ret
je
mov
mov
mov
pop
mov
cmp
test
push
inc
sub
xchg
xchg
push
fisttpll
mov
stos
sub
sub
cmp
outsl
ljmp
insb
cmp
dec
aaa
std
mov
pop
sub
fists
jl
in
repnz
aas
mov
sub
repz
popf
fimull
lret
add
or
xchg
cmp
sub
pushl
fmull
loope
pcmpgtd
bound
jl
jb
out
js
pop
ret
rcrb
cmp
pop
in
cmp
pop
fildll
or
loopne
cli
lods
lds
out
mov
mov
arpl
pop
sbb
ret
xchg
pop
cmpsl
cmp
es
sbb
push
pop
jb
aas
loope,pt
push
and
cmc
mov
xorb
scas
xchg
pushf
leave
sub
fwait
mov
lahf
or
lea
sbb
ret
ljmp
mov
pop
inc
sbb
push
jno
stos
and
and
mov
add
xchg
add
xchg
cmpsl
xor
mov
cs
aaa
aam
in
mov
adc
nop
std
xor
dec
ds
dec
subl
lahf
mov
and
lcall
jae
js,pn
test
pop
popa
std
pusha
or
cli
pop
push
out
dec
push
sbb
pop
push
mov
add
push
ljmp
addr16
pop
loop
dec
dec
sbb
and
mov
sbbl
int3
icebp
insb
xor
inc
mov
clc
ret
and
cmpsb
loopne
xor
adc
push
fsubr
xchg
pusha
pop
sub
mov
dec
outsl
mov
jns
jecxz
jbe
loop
cmpsb
push
das
jecxz
mov
push
xchg
out
or
lds
movsb
pop
andl
outsl
pushf
xor
shlb
bound
fildll
dec
fs
repnz
int
lods
test
testb
push
mov
fidivrs
push
addr16
data16
pop
int
clc
adc
cmp
ds
push
push
dec
cmp
out
xor
jne
aam
sbb
pop
pop
sbb
shlb
mul
outsb
mov
and
cmp
push
mov
iret
mov
test
int3
aaa
mov
inc
jbe
pusha
jp
arpl
and
data16
jecxz
push
mov
les
dec
fsub
cmp
mov
in
pop
mov
roll
mov
dec
cmp
push
add
lcall
cmp
iret
pusha
fistpl
inc
pop
mov
adc
lods
fbld
test
divl
jle
mov
pop
pop
int
sti
sbb
add
sub
dec
adcb
pop
sbb
jns
cmp
shlb
ljmp
inc
fbstp
mov
je
shl
jge
iret
in
mov
sub
fadds
xor
rep
jl
cmc
xchg
cmp
adc
fistl
out
lret
bound
dec
clc
mov
scas
cltd
jae
cmp
sbb
iret
cmp
dec
jne
hlt
inc
orb
ja
test
in
jle
out
cmpsb
push
sub
dec
or
test
xor
mov
mov
dec
add
stc
jg
mov
mov
push
sub
out
add
bound
outsl
sub
aad
je
loope
xchg
stos
pop
fidivrl
ud1
push
in
adcl
xorb
pop
mov
in
mov
and
int3
outsl
outsb
and
pop
adc
imul
aam
push
mov
mov
arpl
data16
lds
or
int3
or
jae
or
sahf
callw
aam
call
mov
xor
iret
xchg
push
jmp
jns
shll
js
cld
mov
in
cmp
dec
and
loop
mov
es
or
push
bound
test
jae
xor
cmp
pop
adc
sub
xchg
inc
sbb
pop
aad
fists
add
mov
scas
dec
fcmovne
in
dec
adc
sti
push
repnz
cmpsb
out
jno
sbb
ja
shlb
rclb
mov
push
shrb
add
xchg
cmp
sub
test
testl
lret
shlb
imul
cwtl
jecxz
jp
cld
test
std
and
pop
jno
mov
mov
cmp
push
repz
daa
dec
in
call
in
jno
mov
in
sbb
jg
pop
cs
sub
push
mov
mov
test
ja
jge
cmp
mov
adc
clc
cmpsl
imul
cmp
sub
jns
or
je
pop
pop
mull
xchg
cmpsb
sbb
and
mov
cmp
jbe
mov
or
in
mov
gs
test
enter
shrl
and
fiaddl
mov
inc
dec
and
stos
jnp
inc
pop
fbld
clc
pop
xchg
mov
mov
test
cwtl
ja
adc
cmp
cmp
add
in
mov
sbb
je
sub
sti
push
push
xlat
pop
leave
pop
inc
imulb
xor
mov
jmp
inc
cmp
sub
inc
mov
cmp
mov
sbb
push
aaa
int3
adc
sub
out
xorb
sbb
push
and
je
mov
out
cwtl
leave
pop
pop
icebp
inc
mov
sahf
and
leave
ret
test
les
data16
push
mov
adc
lock
jg
mov
stc
push
fcoms
sbb
int3
adc
test
scas
popa
jg
dec
jl
das
sub
enter
and
xchg
mov
aaa
shrb
mov
mov
mov
sbb
addr16
dec
mul
daa
and
xor
push
pop
jmp
aas
lret
into
pop
and
cli
and
and
idivb
test
jge
dec
call
fwait
push
mov
pop
into
lods
es
xchg
aaa
xchg
sahf
and
addr16
xor
pop
enter
out
shlb
lcall
inc
mov
jae
imul
push
sbb
mov
addr16
test
mov
mov
jno
cmp
rcll
jge
shl
cwtl
mov
orl
std
or
xor
ss
mov
orl
adc
rolb
jne
loop
jnp
stc
sub
xorl
mov
push
es
or
cmp
push
shlb
or
insl
out
insl
sbb
mulb
testb
in
dec
jne
dec
pop
insl
sahf
xlat
ret
in
pop
lcall
inc
xor
std
push
lcall
mov
push
xchg
push
inc
mov
bound
pop
sbb
flds
mov
daa
mov
repz
xchg
or
inc
mov
les
xchg
aad
mov
rol
push
mov
or
inc
popa
cli
cwtl
aaa
mov
jecxz
leave
xor
mov
push
ja
inc
push
inc
jns
and
sahf
or
jl
mov
arpl
mov
jg
flds
in
cs
fstps
jl
sarb
sub
outsl
jl
adc
cli
adc
pop
adc
adc
cmp
or
or
adc
jle
pop
adc
pop
mov
mov
cmpsl
push
xor
insb
mov
imul
fucom
mov
mov
andl
loopne
push
dec
bound
div
cli
xchg
cmp
imul
ret
push
jae
rcrb
push
cmpb
xor
xchg
in
arpl
scas
and
sbb
or
xchg
lahf
or
inc
loop
push
sti
rolb
ja
bound
fldenv
bound
jns
in
mov
jg
mov
fistl
movsb
stos
lcall
push
popw
pop
mov
icebp
mov
dec
mov
loopne
cwtl
push
stc
xchg
into
fdivs
loop,pn
mov
xchg
add
pop
into
fadds
fucomi
js
loop
sbbb
cmp
mov
imul
inc
sub
shlb
xchg
push
cwtl
push
mov
enter
or
push
out
scas
in
aam
notl
sub
fdiv
sbb
aad
ljmp
jl
adc
enter
jo
in
out
xor
jnp
test
push
pop
cmp
mov
xchg
cmp
test
lock
sub
outsl
addr16
cli
aam
in
mov
cwtl
call
fisubrl
adc
mov
fiaddl
xchg
mov
adc
das
sub
xchg
ret
jnp
or
mov
or
and
mov
push
lds
movsb
in
jle
and
adc
int
inc
dec
add
dec
shll
inc
mov
dec
mov
add
inc
cmpsb
pop
and
or
aaa
inc
test
push
jp
push
mov
sub
imul
repnz
mov
and
loop
icebp
dec
pop
cwtl
xorl
sub
cmp
enter
cmp
cs
mov
and
inc
in
cld
xor
mov
out
loopne
fwait
mov
adc
xor
loope
sbbl
xor
jb
outsl
mov
add
inc
lock
fdivl
sbb
cmp
push
xchg
mov
cmp
pop
insl
out
cmpsb
jge
shrl
movsb
mov
jecxz
std
xchg
loopne
lret
arpl
cli
pushf
ret
xchg
lret
xchg
out
mov
ret
fisttps
adc
imul
aaa
add
pop
push
int
lahf
dec
ror
xchg
jg
inc
jae
dec
adc
fwait
jne
jg
push
int3
lods
iret
xchg
dec
in
push
lea
in
das
addr16
lcall
adc
test
add
xchg
test
sbb
or
or
dec
out
xchg
add
ss
or
pusha
rorl
cmp
inc
mov
add
or
and
scas
fstpt
loop
cmp
pusha
ss
sbb
pushf
push
clc
lcall
mov
add
inc
mov
jns
jl
xchg
jno
ret
imul
jg
pop
xor
into
push
popf
rolb
divl
pop
sbb
xchg
pop
pop
pcmpeqw
daa
xchg
adc
cld
out
cmp
cmp
nop
insl
inc
lret
movsb
insl
into
xchg
fidivrl
push
insb
mov
mov
xor
out
in
inc
sbb
mov
mov
stos
xchg
dec
pop
repnz
std
inc
lods
xadd
mov
sbb
pop
daa
arpl
mov
sbb
jg
sti
leave
sbb
sbb
fwait
xchg
cmp
adc
inc
xchg
inc
mov
sub
call
mov
inc
inc
das
jmp
and
iret
jo
popa
mov
xor
mov
xor
add
lods
dec
and
les
add
dec
aam
test
or
xchg
mov
mov
inc
jl
rcrb
shll
pop
out
mov
fld
mov
xorl
push
mov
fisttpll
das
mov
es
and
std
sub
jb
test
cld
xchg
int
fstpl
leave
fnstsw
in
pop
push
test
incb
xchg
shrl
negb
adc
and
push
leave
sub
hlt
mov
int
fldcw
sbb
jg
push
cmpsl
inc
ljmp
mov
leave
push
fidivrs
out
ret
xchg
cmpsb
dec
cmp
push
and
in
test
pop
mov
leave
arpl
dec
jae
push
fmuls
mov
shlb
add
inc
push
mulb
cld
mov
mov
outsb
enter
in
gs
mov
dec
mov
cwtl
out
scas
inc
or
pop
xchg
pop
pop
mov
ss
jnp
loope
out
jne
add
dec
dec
mov
push
gs
xor
jp
sahf
dec
and
sub
stos
int3
insb
fistpll
or
sub
push
notl
and
int3
clc
add
mov
aas
adc
rcrl
std
dec
test
sbb
add
sbb
je
inc
int
pop
ret
ret
mov
popf
das
out
daa
jne
test
in
dec
xor
add
loop
outsb
mov
inc
add
or
adc
and
loopne
mov
sub
push
push
in
insb
pop
arpl
pop
sbb
in
iret
sub
and
dec
sub
je
lret
jecxz
sbb
aad
xor
add
ret
cmp
xor
dec
fists
adc
mov
nop
adc
hlt
pop
mov
cmp
cmp
into
iret
ljmp
adc
add
fldl
insl
sti
iret
mov
and
fcoml
lret
jne
inc
mov
jmp
dec
mov
xorb
inc
xchg
jnp
data16
fidivrl
aaa
push
mov
ja
xchg
sub
aaa
adc
div
add
aaa
xchg
stos
bound
sbb
rol
out
xchg
scas
pop
and
jne
pop
jnp
imul
fcoml
js
fldenv
and
cmp
xlat
push
mov
cwtl
fsubrs
cld
les
nop
push
imul
ja
test
das
mov
std
das
pop
roll
das
inc
rclb
imul
jl
and
divb
xlat
int
dec
push
imul
or
mov
jp
cmc
jl
or
inc
pop
inc
pop
xlat
mov
xor
mov
sbb
pop
shrl
mov
dec
arpl
aas
inc
fbstp
in
jns
push
fldl
add
cmp
mov
shll
dec
mov
iret
stos
inc
mov
inc
jge
stos
mov
clc
fidivrs
mov
cmp
add
pop
mov
dec
loope
je
mov
ljmp
adc
push
push
movsl
xor
jb
dec
int3
in
cmp
hlt
push
jne
push
cmpb
and
leave
and
test
xchg
push
lcall
xor
cltd
lcall
jnp
dec
cmc
cmp
sbb
mov
ret
mov
shr
enter
jg
jae
fildll
pop
pusha
insb
gs
and
fsubrl
movsb
lret
shlb
inc
push
popf
or
movsb
rorl
inc
shlb
dec
push
jb
xor
fadds
lahf
lds
mov
inc
pop
fwait
out
imul
andb
repz
gs
inc
test
out
lahf
mov
repnz
hlt
xchg
push
mov
hlt
data16
sbb
xchg
or
sarl
and
inc
in
fsubrs
movsb
int3
test
or
loope
or
cmpsb
mov
xlat
dec
or
xor
mov
repnz
icebp
vpmulhuw
or
subl
dec
jecxz
es
jge
pusha
xchg
mov
rorl
cmp
sub
fcmovnu
arpl
ret
pop
pop
repz
pop
bound
mov
push
jmp
push
sbb
aam
push
xchg
ja
dec
push
pop
enter
and
rolb
cmpsb
lea
imul
std
fmulp
cmpsb
iret
out
popf
stos
inc
push
pop
pop
and
mov
push
mov
bnd
rcll
mov
sub
gs
cmp
mov
or
int
dec
pop
insl
jno
pusha
cmp
sub
dec
insl
fbld
cmp
xchg
push
lcall
lds
clc
int
out
repnz
and
movl
les
leave
xchg
rorb
adc
scas
icebp
jae
sub
movsl
add
std
cmp
cmp
loopne
adc
or
cmpb
das
mov
lret
sti
outsl
lds
push
sti
and
and
out
push
cmp
dec
sub
dec
lea
or
int3
inc
push
mov
push
sbb
imul
xchg
pop
sahf
aas
out
cmpsl
inc
cmp
test
enter
ja
push
mov
xchg
cld
or
enter
mov
push
dec
xchg
pusha
int3
popa
inc
mov
out
repz
jb
inc
push
sub
aad
cmc
adc
insb
ljmp
xchg
mov
dec
pusha
scas
jnp
into
or
pusha
xchg
push
imul
pop
in
push
pop
aas
and
js
arpl
pop
adcl
mov
stos
mov
out
mov
dec
insl
es
insb
xchg
cwtl
jne
mov
sbb
xor
repz
sbb
test
add
cmpsb
stos
pop
inc
stc
xchg
jns
jmp
inc
iret
movsb
mov
repz
adc
lock
fisubs
repnz
sarl
jl
add
aam
and
cmp
fisttpl
or
ret
mov
std
push
test
mov
aam
in
fiadds
jb
outsl
adc
push
pop
scas
test
ret
cld
ds
les
into
clc
xchg
imul
jo
jl
shlb
rol
in
ret
cmp
or
leave
fs
xchg
test
xchg
imul
pop
rolb
cld
mov
jae
fldcw
icebp
mov
aam
fcmovnbe
int3
leave
cs
mov
mov
xor
pop
add
mov
mov
pop
mov
call
jmp
or
scas
push
mov
divb
dec
addl
jl
in
cmp
jbe
sahf
inc
inc
xor
pavgw
bound
or
cld
loopne
jb
pop
jle
inc
mov
mov
mov
and
dec
dec
xor
in
mov
inc
mov
shl
push
push
dec
aaa
sub
ret
sbb
lahf
mov
ljmp
in
int
xor
mov
testb
adc
xlat
in
scas
inc
inc
ret
push
sbb
cld
pop
inc
add
add
dec
mov
rclb
cmpsl
pop
jno
stc
inc
inc
pushf
mov
lret
inc
xchg
ds
sub
dec
mov
pusha
add
add
cmp
out
aaa
sub
mov
lret
adc
test
mov
movsl
xchg
lods
add
insl
hlt
jecxz
or
jo
ret
cltd
rclb
xchg
and
insb
daa
push
iret
lock
pop
push
mov
and
push
out
ljmp
jp
sahf
fbld
and
out
popa
pop
xchg
mov
fucomip
fildl
mov
fldenv
mov
cs
mov
xchg
dec
insb
push
ja
rcll
and
pop
cld
stc
mov
adc
jg
test
stos
lods
inc
add
lret
xchg
sub
mov
insl
pusha
inc
pop
sub
stos
mov
cmpl
adc
pushf
shll
cli
dec
jg
mov
fwait
mov
nop
dec
push
push
cmpsl
jmp
stos
fwait
adc
inc
aad
out
jne
mov
movsl
test
addr16
mov
cmp
clc
cwtl
leave
add
cs
lods
mov
mov
aaa
cmp
je
lahf
clc
dec
xchg
stos
adc
icebp
mov
das
ljmp
std
or
arpl
popf
dec
inc
mov
int
rcll
or
gs
lods
xor
sub
jge
shll
cmpb
jl
or
cmp
push
daa
adc
cmpsb
shrb
ljmp
or
movsl
xorb
pop
hlt
fs
cli
inc
out
push
push
aas
test
loope
data16
jne
or
mov
faddp
xchg
pop
dec
into
test
mov
insb
push
xorl
cmp
mov
mov
push
cli
mov
outsl
aam
cmp
or
push
dec
popa
test
sbb
adc
xor
and
push
test
roll
push
aaa
pop
mov
add
mov
adc
mov
lret
inc
std
popa
insl
sub
mov
adc
jecxz
fistl
or
sbb
dec
std
int3
fs
sbb
scas
test
dec
ss
inc
push
mov
and
inc
lcall
enter
or
cmp
notl
lret
lods
sahf
mov
adc
mov
cmpsb
dec
mov
cmp
movsl
cmp
or
call
add
pop
roll
xchg
leave
pop
lret
jecxz
ja
sbb
mov
aad
int
dec
dec
rcll
push
lods
jbe
mov
dec
insb
jne
jmp
cmpl
in
lahf
sub
xchg
sub
adc
jno
mov
ret
mov
xor
sbb
shlb
int3
and
dec
dec
or
jle
jno
into
and
test
xchg
dec
cmp
les
inc
push
add
lds
push
adc
push
insl
xchg
sbb
or
push
pop
cmpsb
fs
aad
jb
mov
mov
jns
mov
fsubrp
call
aas
sti
sbb
cmc
loope
aam
jl
xor
pushf
sbb
push
movntq
push
and
xchg
fprem
xchg
mov
dec
scas
pop
cmc
std
lahf
jo
pop
and
adc
mov
incb
out
sub
imul
leave
sub
fcoms
push
inc
dec
and
repnz
and
xor
mov
bound
imul
push
loop
insl
setno
mov
lretw
sub
and
mov
jle
lcall
jmp
into
daa
and
lret
popa
sbb
pop
or
sbb
insl
push
mov
mov
add
int3
add
loopne
js
mov
pop
cmp
dec
lds
push
and
movsl
and
mov
ljmp
scas
xchg
push
int
gs
add
dec
rorb
aaa
ljmp
dec
shrl
mov
adc
sbb
mov
sub
scas
mov
icebp
sbb
cli
add
test
push
xlat
cmp
jl
or
lods
pop
mov
mov
std
xor
sbb
inc
mov
out
xor
push
xchg
stos
jo
clc
push
lret
iret
mov
ret
es
jno
imul
andl
test
fwait
xor
add
divl
jge
push
test
cwtl
mov
js
mov
xchg
jecxz
xchg
inc
aaa
testb
or
into
movsl
pop
and
adc
lret
add
pop
mov
mov
push
test
pushf
scas
sarl
js,pt
stos
jge
cmp
fmul
mov
xor
ja
stos
xor
dec
cmpsb
pop
or
bound
sub
add
stos
xor
aaa
jnp
xchg
dec
rcrb
fcompl
xchg
inc
lahf
cmp
lcall
and
shlb
jg
mov
sbb
test
aad
dec
je
cld
adc
mov
jle
xor
dec
nop
aad
ret
mov
lods
into
push
loope
popa
mov
xchg
roll
rcrb
loop
in
pop
dec
or
popa
rcrl
fsubl
mov
mov
xchg
outsl
mov
pop
mov
or
das
lods
xor
or
fstps
js
cld
jmp
cwtl
std
es
mov
mov
xchg
inc
ffree
jbe
add
jle
xor
sub
outsl
cmpb
mov
xchg
dec
dec
mov
pop
jno
lret
cmp
mov
movsl
mov
jo
ljmp
dec
add
inc
fwait
popa
pop
sub
mov
xor
inc
adc
mov
ret
cmp
mov
fbstp
xchg
sub
jl
cmp
pop
jge
fisubs
sub
inc
call
lea
jmp
call
dec
add
push
add
cltd
adc
js
out
mov
in
push
or
xor
sub
cltd
popa
out
mov
notl
inc
dec
xchg
js
cmc
or
int3
cmp
jno
xchg
pop
jae
pop
stc
jge
les
mov
fstps
sahf
xchg
cmp
mov
in
test
add
outsb
xor
test
in
push
cmp
pop
mov
lods
xor
ret
das
cltd
xchg
scas
sub
lret
mov
in
cmp
mov
mov
add
mov
adc
dec
mov
lds
sbb
in
mov
scas
xchg
icebp
das
imul
hlt
pop
lods
cmp
mov
mov
mov
adc
mov
mov
push
xor
stos
mov
sub
or
sahf
mov
loop
fildl
jb
mov
jmp
jmp
leave
outsb
jg
mov
lar
icebp
cmp
aam
mov
ficomps
repnz
std
xchg
adc
clc
lods
xchg
pop
mov
jno
loop
add
es
inc
mov
add
lcall
xchg
cmpl
mov
ljmp
adc
lcall
lock
imul
je
leave
fidivl
test
lahf
pop
cmp
inc
ds
push
shlb
mov
push
ss
jl
jecxz,pn
lret
in
inc
fsubrs
cmp
cmp
push
std
shll
loopne
adc
aaa
out
dec
test
testb
cmp
jne
mov
mov
and
mov
xor
out
rcl
outsb
aad
push
sti
mov
lcall
adc
sbb
dec
jb
outsb
pop
jmp
not
imul
mov
xchg
cmp
inc
inc
xchg
jno
out
outsb
pop
mov
insb
ljmp
and
xchg
cmp
dec
inc
adc
lods
cmpsb
cld
mov
jl
aam
xor
dec
scas
roll
push
loopne
push
jp
adc
repnz
out
cli
xor
and
pop
push
lods
pop
xchg
mov
mov
out
push
jo
jp
inc
xor
clc
mov
imulb
in
popf
test
adc
test
pushf
sub
jae
push
sarl
sub
xor
mov
jecxz
jnp
sahf
jmp
mov
sub
pop
mov
pop
in
jg
test
mov
insl
pop
js
stos
sbb
jns
mov
into
fildl
push
mov
cmp
mov
into
mov
repz
dec
arpl
inc
xchg
and
decb
push
rorl
inc
push
cmp
push
in
cs
adc
imul
xchg
js
lahf
idiv
dec
sbb
sub
and
jae
icebp
or
ljmp
imul
jne
les
jb
mov
mov
jl
inc
xchg
cwtl
cmpsb
push
bound
pop
aam
pop
js
bound
pop
dec
xchg
outsl
sub
fildl
out
jle
mov
mul
out
jae
sub
push
lret
xor
jge
lods
xchg
imul
cmp
jb
add
dec
in
iret
lret
imul
mov
xchg
xor
lret
comiss
cld
jbe
out
mov
mov
outsb
cmpsl
mov
sti
jne
mov
gs
dec
pop
enter
aad
orl
xchg
push
imul
daa
jle
out
sbb
mov
js
push
dec
sub
fistpl
xchg
adc
cs
mov
ret
push
xlat
xchg
mov
mov
mov
push
jge
xor
and
out
ljmp
leave
call
stc
test
mov
pop
inc
int3
sub
lods
loopne
in
push
jnp,pn
rorl
movsl
jecxz
das
and
pop
sub
das
imul
sbb
mov
scas
pushf
cld
jns
dec
mov
ja
sbb
lcall
sub
outsl
dec
pop
jg
aam
mov
int
mov
mov
mov
inc
mov
xchg
ret
add
mov
cs
dec
pusha
inc
clc
cld
mov
insb
inc
stc
mov
push
fidivl
into
xor
xchg
loopne
fdivr
fs
scas
sbb
mov
push
mov
fwait
in
adc
ret
addr16
lret
jne
or
jnp
inc
sti
adc
cmp
sbbl
xor
push
icebp
jle
sub
fdivrp
int
inc
scas
pop
inc
cli
xchg
loope
fsubrs
movsb
mov
popf
or
loop
daa
mov
leave
popa
add
in
lret
lret
add
pop
daa
sub
fsts
rorb
xchg
sub
mov
int3
into
and
daa
ret
mov
test
or
sbb
mov
out
mov
jmp
inc
cld
testl
das
sbb
dec
sarl
push
fcmovbe
add
mov
sub
push
cmp
dec
and
xor
xor
push
outsl
inc
mov
je
das
bound
pop
jmp
dec
stos
push
sbb
test
pop
dec
in
pop
inc
ficomps
scas
and
xchg
add
out
inc
and
loop
in
loopne
dec
mov
xchg
cmp
jmp
inc
mov
xor
or
sub
orl
mov
ds
dec
lret
xchg
cmp
fwait
insl
fstpt
dec
pop
popa
xor
mov
jp
loopne
cs
fs
inc
ror
adc
stos
call
sub
out
push
mov
inc
int
cs
xchg
jno
scas
cmpl
jns
sarb
pop
fistps
push
add
mov
jnp
lods
mov
and
cltd
or
sub
jecxz
lsl
pop
ror
leave
jecxz
faddl
cmp
int3
mov
mov
cmp
mov
inc
mov
jb
adc
pop
xor
xor
cmpsl
lea
push
mov
jmp
add
stc
testb
lods
mov
aas
jg
pop
daa
arpl
imulb
sbb
mov
and
pusha
xorb
cmp
cmp
dec
lret
xchg
mov
mov
ljmp
ds
mov
jecxz
lea
jo,pt
int3
adc
and
in
addr16
mov
and
enter
fimuls
scas
cmp
dec
sarb
lcall
pop
or
insl
sbb
and
sbb
and
dec
lods
pop
dec
push
loopne
cmpsl
popf
mov
cli
sub
rcr
rorb
xor
nop
fs
jmp
push
cwtl
stos
or
cmc
subb
cmp
arpl
imul
push
push
dec
sub
loope
pushf
test
or
jl
dec
aaa
stc
add
jno
pop
repz
jae
popa
rorl
inc
pop
xchg
inc
mov
int
sub
adc
or
sub
and
aam
mov
push
and
mov
je
icebp
pop
cmc
hlt
push
xchg
jl
jg
xchg
lret
lcall
rorl
adc
push
jge
xchg
cmp
jnp
mov
adc
mov
xchg
stc
jg
repnz
add
and
mov
sbb
stos
aaa
xchg
pop
test
je
shl
sbb
stos
ja
outsl
push
jns
sub
add
int
mov
push
or
inc
mov
and
and
pop
and
xlat
jge
mov
popa
or
mov
ljmp
test
push
les
les
inc
outsl
xchg
inc
lods
inc
inc
fldenv
mov
subb
div
inc
mov
test
dec
xchg
dec
fcmovb
sub
sbb
nop
mov
sub
cld
push
sbbl
inc
orb
mov
addr16
test
fsts
mov
and
pop
pop
add
dec
bound
scas
out
cmp
xchg
push
fdivrl
xchg
mov
out
dec
movsl
mov
fidivrl
xlat
loop
mov
push
stc
out
ljmp
les
xor
mov
and
push
loop
push
loope
pop
lock
xchg
cli
lods
pusha
outsb
sbb
mov
cmp
jg
push
jo
test
shrl
push
fsts
stos
pushf
adc
fsubp
cld
sub
dec
mov
pop
out
insl
and
mov
fdivrl
sbb
ficompl
dec
mov
cmp
jmp
jecxz
pushf
push
imull
fiaddl
xlat
ss
test
or
adc
jb
insl
es
jbe
or
cs
mov
inc
repnz
adc
mov
enter
sbb
push
loop
pop
das
daa
xchg
push
xchg
add
cmc
mov
movsb
or
adc
sbb
loopne
jp
sbb
je
ret
cmp
or
sub
adc
mov
push
out
mov
es
orl
and
pop
jecxz
xor
mov
iret
mov
adc
imul
pop
xor
or
int3
jne
adc
icebp
rorb
mov
jbe
pop
cs
fdivrl
leave
mov
ret
cwtl
push
in
mov
arpl
xchg
scas
nop
sbbl
stos
cmp
adcb
cmp
decl
loop
pushf
clc
lods
xor
out
shrb
push
inc
xchg
mov
mov
and
adc
shll
or
pop
push
mov
inc
adc
mov
add
or
repnz
sub
sbbl
test
mov
mov
xchg
sarl
fcomip
sub
pop
pushf
cmc
dec
add
jae
or
mov
mov
adc
cmp
cmp
jmp
adc
movsb
mov
cli
inc
sbb
pop
into
sbb
mov
dec
xchg
xor
xor
inc
clc
jle
lds
clc
xorb
pop
movsb
test
xchg
jp
sub
decl
icebp
xor
imul
out
lahf
dec
add
daa
aam
shrb
clc
pop
inc
adc
lret
adcb
sub
je
adc
insb
int3
sbb
adc
ljmp
in
clc
sbb
cld
out
xchg
clc
or
in
sahf
jg
popa
jb
cs
push
scas
movswl
add
pop
mov
xchg
pop
pop
lahf
sbbb
filds
mov
test
dec
enter
push
lods
mov
aam
int
bound
xor
cltd
stc
and
andb
adc
call
dec
ss
cltd
jb
pop
and
shl
cs
in
sub
into
xchg
mov
shrl
push
outsb
aaa
mov
push
clc
cmp
jne
mov
aam
test
xchg
mov
sbb
sbb
xlat
ret
hlt
jge
sub
pop
daa
or
pop
lret
mov
jo
in
and
aaa
imul
sub
fs
xor
ja
aad
push
xlat
jnp
sahf
or
popf
cmc
adc
bound
decb
pusha
mov
or
insl
mov
jo
sbb
lods
je
aas
jle
data16
cmp
test
hlt
add
dec
sbb
clc
and
mov
cmp
inc
orl
test
movsb
mov
test
cmovbe
loopne
int3
push
int3
and
out
jle
mov
dec
dec
push
xor
arpl
sub
mov
inc
mov
imul
mov
pop
scas
cmp
or
loopne
mov
jb
loop
aam
mov
in
shlb
insl
pop
into
rclb
mov
adc
push
pop
test
push
sub
out
push
push
popf
mov
adc
and
push
adc
mov
jo
rorl
or
test
xor
int
push
loope
ds
cli
testl
and
pop
out
ret
mov
xchg
stos
divb
int
adc
das
ret
in
xchg
add
sub
xchg
add
mov
jnp
test
mov
adc
aaa
daa
test
mov
xchg
jl
or
mov
dec
adc
hlt
dec
push
jnp
das
out
pop
fwait
adc
cmp
repnz
mov
jmp
in
or
push
sbb
enter
jl
xchg
fisttpl
stos
cmp
sarb
cmp
jnp,pn
clc
push
lea
and
fldl
or
cmp
xor
cmp
xchg
inc
add
jo
imul
andl
pop
popa
xchg
imul
loopne
std
add
lcall
sbb
adc
xlat
aam
xor
loopne
and
pop
or
and
inc
sbb
mov
cmc
or
xor
rolb
clc
or
push
ljmp
push
push
pop
sbbl
in
test
mov
in
pop
push
xor
xor
mov
cmpsl
fistpl
fst
and
push
sub
adc
mov
ret
repz
aam
and
inc
inc
es
cmp
jp
mov
insl
mov
out
sbb
jo
inc
mov
out
mov
rorb
call
mov
adc
jecxz
fsubrs
xchg
add
inc
xchg
adcl
bound
mov
icebp
test
xchg
or
insb
dec
sub
sbb
mov
pop
dec
ficoms
sbb
and
inc
mov
scas
jp
sbb
sub
mov
scas
fstl
sub
or
popf
jo
cmp
mov
aaa
mov
xor
movsl
mov
push
ds
jne
in
loop
inc
inc
jecxz
mov
dec
in
push
in
mov
out
jge
or
xlat
aad
push
mov
xchg
xor
xorl
jns
dec
inc
outsl
cmpb
sahf
sbb
aaa
dec
shrb
inc
xchg
cmp
mov
and
call
test
movsl
jbe
js
fsub
add
mov
cld
jb
fld1
add
pusha
fldt
mov
sbb
outsb
xchg
movsb
fucom
and
clc
pusha
push
and
stc
dec
aas
sbb
in
cs
sbb
jno
pop
js
mov
es
orb
mov
pop
into
mov
inc
je
je
mov
jno
js
sbb
orb
icebp
dec
xor
in
mov
fstpl
xchg
push
fisubrl
dec
xchg
cmc
lds
jp
mov
cs
xchg
push
xor
mov
and
jo
ss
lods
cmp
and
int
xchg
inc
fnsave
in
inc
mull
sbb
mov
sahf
sub
mov
lods
les
movsw
call
cmp
hlt
or
insb
lahf
pop
nop
push
subb
push
pop
call
out
xor
cmp
xor
je
fs
ret
mov
inc
add
xchg
in
push
jne
popw
addr16
sbb
dec
mov
cmpsb
dec
mov
dec
mov
adc
dec
adc
sarl
fcmovnb
pop
pop
inc
pop
aaa
in
icebp
push
dec
jbe
mov
push
and
in
and
shll
or
aam
iret
lods
push
test
pop
mov
fsts
xor
pop
aas
add
movsl
sbb
fadds
add
sbb
aas
nop
mov
or
push
adc
xlat
sbb
aad
cmpsb
popa
int
sbb
mov
fs
out
shr
sbb
faddl
mov
in
mov
push
push
lock
into
in
sbb
xchg
popa
jnp
push
or
bound
das
mov
mov
mov
and
push
clc
push
xor
mov
push
shrb
pop
and
inc
mov
lahf
mov
out
push
pop
mov
pushf
mov
pop
rclb
xchg
jno
addr16
mov
mov
pop
or
lret
scas
fnsave
mov
adc
cmpsl
jge
dec
andl
pop
mov
pop
bts
pop
fs
bound
jmp
addr16
dec
scas
jp
movsb
in
mov
mov
in
rcr
and
pop
shlb
mov
xor
mov
dec
cmp
adc
or
or
cmp
dec
push
popf
out
sbb
cmpsl
mov
popa
fdivrs
or
loop
or
cmp
enter
popa
dec
scas
mov
jg
mov
pop
loopne
lds
xor
push
fs
cld
test
hlt
pop
or
sub
loopne
xor
nop
pop
testb
fcomps
sbb
sub
or
dec
push
scas
xchg
flds
jl
aaa
clc
sub
repnz
arpl
xor
inc
mov
iret
pop
js
jno
stos
mov
push
sbb
push
stos
adc
mov
insb
or
and
aas
rcll
push
outsl
adc
inc
dec
inc
rcl
inc
lock
mov
in
lea
jbe
mov
divl
bound
or
pop
rcl
push
mov
mov
shl
cltd
jns
xchg
das
leave
lods
jecxz
cmp
mov
inc
jb
dec
sahf
in
lcall
add
jmp
cli
ljmp
mov
imul
idiv
test
loop
and
mov
aad
lea
pushf
add
pop
ret
scas
stos
fs
inc
sbb
roll
inc
ret
scas
inc
add
pop
das
das
out
inc
push
jmp
mov
mov
aam
mov
sbb
mov
sub
xchg
cmp
xchg
push
movsb
jmp
or
fwait
imul
addr16
imul
xchg
mov
or
ss
or
jae
mov
cmp
test
add
daa
or
out
loop
jbe
out
das
sbb
jnp
jnp
jnp
add
dec
adc
and
sub
sub
das
addr16
pusha
sti
movsb
cwtl
push
into
out
dec
lret
sub
test
xor
add
jge
shrb
xchg
aaa
jno
fmul
jb
addl
jmp
cmpb
mov
lods
fdivs
mov
nop
mov
pop
movsb
add
sub
add
subl
mov
stc
mov
xchg
fs
cmpsb
stos
dec
ror
clc
cmc
mov
sub
adc
enter
mov
adc
cmp
cmp
das
pop
cmp
xor
shrl
lret
mov
add
stc
rolb
cmp
pop
cmc
and
mov
mov
scas
fldt
jns
dec
dec
into
popf
pop
or
scas
out
lock
gs
icebp
cmpb
out
inc
jo
mov
push
arpl
fisubl
in
push
loop
push
xor
popa
dec
test
repnz
mov
pop
mov
xor
mov
cmp
sahf
mov
mov
inc
imul
xor
sub
push
cmc
and
push
mov
jp
stos
adc
cmp
sti
sub
pop
and
sbb
clc
test
mov
pop
dec
jle
rclb
jp
mov
and
leave
scas
xchg
cltd
jl
adc
xchg
mov
sahf
sets
sbb
mov
loope
imull
sub
xor
popf
push
pop
sub
in
mov
hlt
pusha
sbb
and
int
pushf
xchg
dec
mov
xlat
cltd
lahf
test
cltd
stc
and
inc
sub
ret
into
outsl
movsl
sub
fcmovnbe
or
sbb
pop
dec
nop
test
jg
lods
ljmp
imul
mov
ret
imul
jno
cmpsb
add
push
aaa
movsb
repnz
lds
loop
test
arpl
and
add
inc
into
mov
push
jl
call
mov
add
cs
fimull
int
or
adcb
push
adc
cli
fsts
xor
daa
out
fisttpl
repnz
fnstenv
jge
sub
add
and
cmc
dec
iret
ret
and
push
add
pop
sbb
and
loopne
ljmp
inc
adc
mov
ja
and
sbb
out
rorl
ss
mov
stc
inc
out
push
push
pop
push
pop
les
mov
movsl
pop
mov
jbe
xchg
and
sti
imul
fwait
adc
cmp
mov
xor
insl
pop
push
xchg
jp
xchg
mov
sub
jno
repz
lret
dec
pusha
popf
stos
pop
ror
mov
cmp
lahf
mov
call
dec
and
jp
mov
add
test
or
js
shll
jge
cmpsb
mov
mov
les
push
adc
adc
cwtl
and
xchg
jmp
jge
enter
jo
mov
xchg
fwait
stos
test
mov
sbb
loop
fcomp
loop
ds
push
or
lcall
mov
fs
adc
cmp
aam
pop
push
jmp
mov
movsl
stc
jne
lock
mov
call
inc
xor
std
pop
xor
inc
push
out
rclb
daa
je
loop
dec
xchg
pop
les
cmp
into
cmp
enter
mov
adc
sarb
into
or
repnz
pop
jnp
or
lods
in
jae,pn
icebp
pop
jbe
sbb
adc
mov
ljmp
mov
lret
or
movsl
enter
aam
adc
insl
cmp
adc
sbb
lock
stos
pop
leavew
icebp
xchg
xor
stos
cld
dec
insl
and
orb
je
movsl
out
sub
or
fimuls
das
push
mov
fwait
je
mov
das
mov
rcrb
sbb
add
pop
gs
in
psadbw
dec
sbb
and
aam
imul
rcl
sahf
call
inc
pusha
inc
sbb
mov
loope
mov
pop
pop
insb
cli
fcomps
fcomps
adc
push
fldt
cmpl
imul
inc
ja
push
outsb
ljmp
addr16
or
in
cmp
scas
sbb
sbb
fistpll
push
mov
insb
push
jb
testb
jge
stos
pushf
push
sarb
lret
es
sub
popa
dec
test
pusha
icebp
repz
push
mov
mov
sub
sti
dec
pop
stos
nop
pushf
loop
or
mov
or
dec
adc
movl
adc
ret
pop
sub
ss
pushf
add
dec
lret
imul
mov
in
adc
imul
adc
in
jl
xchg
rclb
dec
mov
sub
stos
fwait
sub
lock
sbb
inc
insb
ljmp
sbb
jae
loope
sub
xchg
stos
cmp
xor
and
mov
bound
in
jns
jo
pusha
clc
and
mov
jg
aad
and
imul
dec
and
out
mov
fs
jnp
push
add
outsl
mov
ds
mov
and
pop
jb
xchg
mov
sbb
sbb
jae
mov
jnp
adc
clc
xor
inc
jne
stos
cmc
mov
dec
mov
or
cmpsb
mov
incb
pop
movsl
insb
xchg
sbb
cmp
sub
pushf
sbb
add
cmpsl
test
negl
sbb
aad
jno
test
insb
inc
inc
cmp
jb
and
and
ljmp
daa
fwait
sbb
cmp
push
sti
cmp
push
pop
mov
pop
fiaddl
jmp
push
clc
xor
loop
sub
cmpsb
faddl
outsb
mov
fdivp
and
inc
ds
rcll
dec
inc
arpl
dec
adc
xchg
insb
adc
mov
lods
mov
push
pop
dec
lret
push
xchg
sti
sub
rcrl
je
pop
pop
int3
jnp
jae
inc
mov
in
inc
aas
inc
test
mov
shl
inc
movsb
std
xchg
push
cmp
xor
in
xlat
dec
fidivrs
mov
sar
xorb
inc
jns
xchg
bound
pop
out
mov
or
and
xchg
sub
cmp
scas
sar
inc
rcrl
test
jo
cmpsb
inc
jp
cmp
sub
xchg
mov
mov
push
test
or
hlt
xchg
dec
sub
outsb
inc
call
xor
jb
shl
xchg
mov
and
jne
add
leave
push
sti
ret
cmp
jne
or
insl
xchg
fwait
mov
or
cmpl
mov
push
push
pop
mov
sbb
shrb
mov
add
cmp
rolb
sarl
les
mov
mov
mov
adcl
push
adc
push
jl
push
movsb
int3
paddw
pop
divb
pop
mov
bound
out
inc
lahf
mov
adc
xchg
xor
adc
mov
fidivs
out
jmp
mov
add
test
repnz
xchg
adc
sbb
jecxz
adc
fiadds
aaa
cmp
cmp
shll
cmp
out
add
sub
negb
push
pop
inc
cmp
roll
dec
pop
popf
pop
out
pop
xor
enter
mov
mov
or
outsb
cmpsl
mov
sub
notb
xchg
mov
out
inc
out
mov
jle
divl
jnp
aaa
aaa
xor
jae
and
xchg
add
xor
and
ss
jl
mov
jbe
xchg
mov
scas
push
sbb
fwait
xor
in
jl
jmp
aam
lret
mov
pop
inc
add
xchg
mov
push
test
pop
inc
xchg
mov
fwait
xchg
add
out
mov
lock
mov
lahf
xchg
dec
adc
int3
ja
mov
into
mov
or
jns
loop
repnz
adc
sti
xchg
sbbl
pop
mov
fcmovnbe
repz
xchg
enter
mov
ss
pop
dec
push
cmp
or
xor
hlt
mov
cmc
pushf
inc
scas
lods
pop
enter
xchg
int3
push
xchg
and
fiadds
in
test
cmp
or
fwait
outsb
fcmovnbe
in
adc
incl
ss
sbb
arpl
mov
mov
js
xor
hlt
cwtl
bound
sti
add
and
xchg
adc
dec
test
mov
sub
inc
xchg
rclb
dec
fldt
mov
cmp
les
xor
dec
xchg
mov
add
mov
pop
mov
jno
loopne
out
cmpsb
mov
daa
mov
adc
pop
fidivrl
and
push
rcrl
cmp
jg
add
add
mov
shrl
testl
mov
inc
sti
mov
and
xor
js
in
push
movsl
hlt
sub
out
or
aad
cmp
jl
jnp
xor
xlat
pop
lock
cld
mov
or
mov
mov
or
imul
mov
cli
popa
sbb
imul
cmp
iret
push
aam
gs
cltd
aaa
push
pop
xor
test
jecxz
stos
in
jl
inc
mov
popa
lds
loopne
movsl
into
xor
idivb
test
jle
outsl
lret
mov
ss
sbb
push
xchg
xor
and
xor
int3
inc
mov
cmpsb
clc
arpl
jae
mov
idivl
test
adc
xchg
scas
pushf
mov
mov
sub
xchg
cli
fisubs
xchg
cli
cmp
add
push
fisttpll
or
aad
sarl
daa
je
mov
dec
or
sub
fwait
dec
les
xchg
sahf
lods
jecxz
imull
push
pop
icebp
lods
ja
mov
sti
es
sbb
cmp
inc
in
loopne
mov
cmc
adc
sub
dec
mov
addr16
dec
nop
dec
out
aam
jle
arpl
mov
rorb
and
sbb
mov
insb
insl
xchg
dec
pop
pop
jb
dec
stos
test
jno
inc
jge
and
je
adc
push
jb
push
pop
jl
mov
xor
leave
xor
outsl
das
or
fcompl
mov
and
mov
movsl
cltd
cmp
lods
dec
outsl
ljmp
xor
pushf
and
popf
inc
mov
lcall
iret
and
xlat
shlb
les
ficoml
ficoml
out
sbb
push
ds
pop
adc
pop
xor
addl
fbld
add
add
int
leave
lods
cwtl
repnz
jno
or
ljmp
lret
mov
adc
push
sbb
mov
test
out
shlb
adc
insb
pop
lds
xchg
leave
jnp
push
test
nop
mov
mov
pop
push
icebp
mov
mov
out
sub
sbb
rcl
adc
xchg
testl
dec
pop
sti
out
lock
xchg
dec
aaa
jle
mov
jo
xor
roll
and
inc
lods
pop
dec
lock
mov
loop
cmp
jo
jno
cmp
pop
je
adc
mov
cmp
add
push
daa
into
jbe
dec
and
cmpsl
out
sub
pop
fdiv
xchg
inc
push
ljmp
cli
mov
cmc
fisttpl
inc
daa
or
sahf
clc
scas
add
sub
sub
fmull
sahf
add
lea
jbe
mov
jle
cmc
sti
sbb
je
mov
jnp
dec
fdivrs
gs
push
rcrl
stos
mov
adc
and
outsl
into
dec
dec
fmuls
lock
push
adc
test
mov
gs
cmpsl
lock
sbb
mov
mov
fistl
decb
xchg
and
adc
jno
aaa
gs
leave
or
in
jl
cs
insb
adc
pop
jo
lahf
inc
inc
lret
js
sbb
mov
int
cwtl
fistps
push
fsubrs
pop
xchg
xchg
out
dec
scas
lods
sub
pop
repz
divb
negb
jg
sub
cwtl
xor
dec
mov
or
mov
test
ret
repnz
into
push
das
out
leave
cmc
mov
outsl
jecxz
jecxz
fsub
mov
hlt
sbb
test
movsb
sbb
arpl
pop
inc
mov
mov
fwait
add
push
popa
inc
xor
add
or
shl
fs
cli
hlt
sbb
outsb
xor
xchg
pop
push
ljmp
stos
test
pop
or
out
inc
imul
test
shlb
xor
popf
lods
or
daa
xor
xchg
out
cmp
add
ret
xchg
xchg
xchg
xchg
cwtl
sbb
scas
inc
aam
les
js
pop
adc
jecxz
mov
push
or
in
mov
test
cmp
scas
pop
shll
popf
rcrl
or
push
ret
out
push
or
fwait
dec
daa
in
out
xchg
pop
data16
and
cld
and
ljmp
jmp
insb
xchg
orl
add
iret
std
jge
cltd
scas
idivl
jg
adc
rolb
jp
pop
subb
ja
or
mov
leave
mov
bound
arpl
push
adc
ficoms
xor
jecxz
mov
sbb
ret
xor
imul
push
mov
insb
dec
ja
pop
pusha
pop
in
dec
psubb
push
add
sub
outsb
xlat
add
sbb
adc
imul
cmp
xchg
cmp
stc
mov
push
mov
adc
ss
out
dec
das
adcb
imul
inc
andl
stos
in
cmc
pusha
xchg
push
movsb
inc
mov
sbb
lcall
imull
aas
mov
and
jmp
ror
jo
into
xchg
mov
jl
inc
or
loopne
inc
movsb
test
adc
test
leave
sub
je
xor
out
add
addr16
cmp
adc
jge
pop
adc
xchg
and
adc
inc
out
xchg
ret
scas
inc
out
cmpsl
es
xor
xchg
ret
pop
jno
pop
lds
pop
cmp
out
or
gs
dec
lcall
cltd
fiaddl
stos
or
mov
add
ret
icebp
jne
loopne
sub
mov
js
sub
jb
std
fimuls
cs
decl
andl
or
jge
sub
pusha
jo
les
xchg
gs
mul
addl
test
movsb
sub
enter
sub
mov
add
ret
add
add
mov
pushf
and
mov
push
and
icebp
mov
cmp
jp
arpl
shlb
in
pop
sub
dec
inc
rorb
lea
hlt
push
icebp
repnz
loopne
imull
leave
sub
stc
cmp
cmp
inc
pop
mov
sbb
clc
dec
in
jbe
repz
sub
push
insb
jp
popa
inc
xchg
pop
inc
dec
test
jmp
fidivrl
pushl
add
mov
arpl
and
popa
loope
xchg
ljmp
inc
lods
outsb
add
fwait
xchg
clc
in
add
mov
sub
pop
imul
ret
mov
test
push
sub
mov
cmp
insb
pushf
outsl
and
icebp
rcl
sahf
lock
and
test
add
xlat
pop
test
mov
xchg
ja
lret
fistpll
xchg
jae
mov
cmp
movd
rcrl
jnp
cmovle
mov
cmp
insl
xchg
call
add
std
fsubrl
push
inc
xchg
cwtl
jb
pushf
pop
add
cmpl
sub
dec
xchg
stc
adc
dec
push
jge
adc
or
xchg
sub
pop
or
cmp
aad
test
jge
aaa
mov
mov
std
xor
adc
andl
inc
fisubrs
repnz
nop
outsl
cmc
pusha
mov
inc
xchg
iret
mov
jo
iret
and
cltd
add
pushf
imul
inc
int
out
jmp
insl
push
inc
dec
xchg
stc
push
lods
das
xchg
fs
out
pop
scas
pop
cmp
out
push
aaa
inc
sub
dec
jp
insl
lea
mov
and
xchg
jmp
test
cld
leave
lock
stos
mov
xchg
or
mov
xchg
mov
lods
aaa
stc
lock
jp
add
test
lahf
std
push
dec
ficompl
xchg
aaa
sbb
sahf
test
sbb
ret
push
js
daa
cmp
movsb
cltd
pushf
mov
inc
fst
aas
test
jno
cmp
add
jecxz
aam
insb
dec
xor
add
or
cwtl
xchg
xchg
ja
std
push
push
inc
sub
outsl
lods
mov
pusha
out
mov
or
jl
pop
xchg
mov
scas
push
inc
lea
cltd
mov
jbe
mov
sub
test
adc
jg
ret
jae
xor
push
testb
jmp
add
ret
stc
mov
adc
lds
mov
cli
jae
mov
rcrb
js
notb
je
sub
xchg
push
jecxz
jns
pop
xor
cmp
pop
popa
jno
mov
arpl
jae
inc
fmulp
cs
inc
jecxz
movsl
stos
xlat
xchg
xchg
jnp
mov
test
mov
sti
push
mov
xchg
js
ret
mov
xchg
hlt
jp
pop
stc
movsb
xchg
push
fnstsw
xchg
xor
movsb
nop
xchg
mov
aaa
and
xchg
insb
push
imul
call
jnp
mov
ret
pop
sbb
push
jl
jle
add
push
in
ret
js
add
cmpl
pop
test
pusha
jnp
stos
jge
mov
pusha
cld
sarl
in
xor
xchg
mov
sbb
sar
add
cmp
pop
pop
popf
add
idiv
mov
lock
cmpsb
mov
das
sbb
lods
pop
loop
sbbb
cwtl
sbb
sub
lods
inc
cmpsl
mov
in
aam
notb
mov
dec
mov
adc
add
out
js
test
sahf
and
push
or
negb
jge
stos
mov
jno
insb
cs
scas
leave
cltd
xor
scas
gs
test
xor
stc
fsubrs
dec
lock
adc
ja
mov
adc
inc
pushl
cwtl
cltd
bound
test
jle
dec
and
test
loopne
lods
add
call
test
sahf
and
outsb
fucomp
jae
sarl
je
mov
push
std
fdivl
fidivl
nop
or
xor
gs
lds
inc
pushf
add
pop
cmpsl
sbb
cmp
fcompl
ret
enter
cli
loopne
pop
push
jne
jge
rcrb
inc
dec
rcrl
frstor
imul
jecxz
imul
add
shll
jns
ljmp
dec
loope
sub
divl
dec
push
adc
leave
adc
scas
push
or
sub
inc
pop
inc
je
shrl
bound
cltd
cmp
in
mov
fcompl
jl
pushf
mov
pop
jl
outsb
push
out
mov
adc
adc
pop
mov
mov
add
inc
mov
imul
insl
in
sbb
icebp
cltd
pop
mov
pop
stos
xchg
test
cmc
dec
cmovge
shrl
pop
inc
dec
xorb
inc
aam
fdivs
dec
dec
lock
ds
mov
shll
dec
repnz
jo
lods
pop
mov
iret
push
jp
daa
push
cmp
xlat
cmp
or
mov
cmpsl
xchg
mov
mov
mov
xchg
sbb
addb
adc
hlt
or
xchg
mov
cld
xchg
jno
mov
push
ret
stc
sbb
inc
out
mov
je
xchg
push
inc
mov
pop
adc
loope
lsl
sbb
dec
push
js
push
call
jmp
fnstenv
mov
imul
lock
lcall
rcrl
ss
push
xor
lcall
addl
imul
dec
mov
fnstcw
mov
int
mov
adc
aad
mov
add
cmp
mov
dec
mov
jne
test
cmc
xchg
and
sub
in
repnz
aad
xor
push
adc
pop
or
mov
orb
ss
mov
and
test
add
sbb
push
jb
fcomps
mov
cli
in
lret
push
das
add
jge
or
push
mov
cmp
lds
leave
andl
push
add
mov
test
mov
bound
sbb
lcall
sub
insb
std
stc
insl
pop
push
mov
xchg
les
into
ret
fwait
cmp
rorb
stos
mov
push
cltd
ja
push
pop
pop
dec
dec
cmp
xor
pop
clc
shl
loop
pop
sub
aad
mov
jnp
mov
jle
lret
push
or
cmp
imul
fistl
nop
enter
xor
and
xor
es
nop
popf
insb
pop
bnd
popa
faddp
mov
xlat
cmpsl
cmp
pop
ja
xchg
mov
jo
fdecstp
movsb
int3
push
test
shlb
cmp
xchg
pop
xor
inc
sbb
jmp
orb
icebp
movsb
pop
test
aam
out
pop
shrb
out
push
int3
dec
movsl
fsts
mov
rcl
cmp
xchg
movsl
cmp
jmp
or
jne
movsl
adc
mov
xchg
gs
imul
dec
out
pop
into
popf
sbb
jbe
jl
or
fucom
in
push
into
into
xor
je
insl
inc
or
xor
push
mov
jmp
outsb
into
or
xchg
int
rorl
adc
sbb
dec
pushl
xchg
scas
lcall
inc
cmp
fiadds
mov
cmp
xchg
int3
or
imul
mov
hlt
pushf
arpl
mov
fst
xchg
adc
cmp
lods
xchg
mov
add
mov
and
ret
into
pusha
aam
mov
push
test
rclb
fidivl
dec
xchg
xchg
lods
pop
in
or
push
pop
and
call
or
movsl
sbb
mov
je
lock
loop
mov
push
xchg
fisubs
xchg
and
call
rcrb
pop
sbb
push
lods
aaa
or
fisubrl
cs
cmp
jae
xchg
inc
and
out
dec
adc
movsl
test
mov
je
mov
sbb
cmp
push
adc
and
inc
xchg
loopne
js
aaa
scas
fwait
sub
into
jae
rolb
mov
jnp
add
fildll
lret
hlt
push
xchg
push
fdivr
xchg
sbb
pop
ret
clc
mov
lea
mov
cmp
and
pop
inc
jp
adc
pop
mov
subb
les
jns
and
sbb
push
and
mov
pop
leave
mov
cltd
xor
int
xchg
cmp
mov
lcall
out
mov
adc
adc
xor
insb
sub
mov
iret
adc
and
into
xor
dec
sti
xor
popf
xchg
push
clc
fdivl
push
cmp
or
xor
stc
imul
cmp
pop
fcmovnbe
inc
jae
ljmp
and
jecxz
cmp
or
jge
cmp
jmp
adc
outsb
sbb
in
mov
or
mov
repz
sarl
fwait
lods
pop
push
aad
cmp
jns
fidivrs
add
inc
xor
popl
shlb
or
or
arpl
push
cli
fnstenv
jge
lcall
sbb
adc
cmpsb
out
fs
loope
in
leave
xchg
daa
cmp
pushf
add
in
mov
push
ljmp
les
mov
imul
nop
sub
jb
sub
stos
pop
sub
push
loope
clc
jl
xlat
pop
jns
mov
push
fisttpl
pusha
mov
cmp
test
popa
sub
fstpt
lods
cmp
mov
jbe
decl
out
or
out
or
dec
pop
xor
add
test
dec
adc
mov
std
jb
out
pusha
fwait
and
push
jb
mov
repz
push
mov
mov
rcl
insl
inc
ss
adc
dec
test
fnstenv
bound
lea
cld
ljmp
cli
and
mov
sarl
add
loopne
mov
jecxz
int
lret
mov
aad
jns
mov
mov
xchg
fdivs
int
stc
xor
mov
je
mov
out
cmp
loopne
mov
sahf
or
out
stos
adc
xor
cmp
add
mov
gs
insl
mov
lret
jecxz
out
lods
push
adc
mov
mov
stc
daa
mov
lcall
ja
popa
jno
adc
sti
out
inc
call
dec
mov
testb
dec
push
xor
xchg
lret
bound
andb
inc
jno
sbb
and
in
lods
icebp
inc
lcall
jo
ret
adc
mov
inc
cmc
pusha
cmp
and
or
movsb
xchg
add
mov
mov
mov
pop
sbb
jns
mov
xor
add
add
cmp
cmp
fsubl
cmp
out
ljmp
les
or
es
sar
or
and
cmc
daa
icebp
push
sub
or
or
loopne
xchg
pop
arpl
add
adc
cltd
jne
repnz
arpl
cmp
cmp
cmp
dec
and
add
and
test
push
sub
push
cmp
add
addr16
push
sbb
and
mov
lret
or
out
xchg
mov
das
lea
sti
mov
ret
cltd
loop
or
lcall
dec
iret
adc
mov
outsl
rcrb
jns
sbb
test
pop
mov
cmp
jbe
pop
and
mov
jp
icebp
jnp
push
pop
pop
xor
aam
stos
xor
jno
push
jle
ret
pop
mov
out
mov
test
popf
mov
cmc
sbb
xchg
sub
pusha
push
adc
jnp
into
ljmp
sbb
loop
xchg
pop
int
sbb
xor
pushl
rcll
out
sub
mov
dec
push
jp
imul
ret
pop
jns
push
jp
mov
mov
jno
xor
ss
dec
popf
outsl
pop
das
push
cmc
fmul
xor
mov
sub
in
nop
or
lock
jne
call
push
aam
fisubrl
dec
mov
xchg
mov
std
loop
cmp
call
cmp
aaa
xchg
inc
mulb
mov
xorb
nop
flds
scas
push
ljmp
or
push
adc
adc
cld
xor
sbb
adc
jns
jg
rclb
jo
sbb
xlat
in
lret
mov
sbb
xor
fwait
in
mov
lret
aaa
jo
outsl
mov
notb
xor
push
mov
jne
dec
and
push
add
cmp
loopne
enter
mov
ja
stos
jp
push
pop
imulb
sbb
pop
mov
jns
lods
adc
dec
mov
ja
or
int
xor
out
data16
scas
adc
push
sbb
mov
loop
sub
fs
jno
stos
push
sub
insb
imul
into
xor
mov
in
movsb
add
repz
xchg
and
inc
pop
pop
xor
pop
in
push
pop
cmc
dec
jnp
outsl
clc
sbb
xchg
clc
in
pushf
cmpsb
shlb
pop
loope
jge
mov
lahf
pop
ljmp
jo
imul
xor
jle
or
lods
inc
mov
pusha
mov
dec
xchg
jae
pop
mov
lret
ret
jl
outsl
inc
pusha
cs
xchg
addl
inc
and
xchg
inc
adc
sti
pop
out
icebp
xchg
dec
enter
adc
dec
out
imulb
rcrb
fnsave
push
cmc
xlat
clc
lret
mov
sbb
xor
sti
inc
pop
into
addb
cmp
add
mov
fcmovnbe
jae
ja
cmp
mov
mov
imul
mov
mov
adc
or
test
outsl
pop
push
stos
popa
prefetch
dec
out
ret
dec
inc
test
sbb
shll
and
pop
mov
imul
scas
imul
into
push
dec
rcrl
jg
cs
jecxz
lods
dec
or
and
sarl
and
pop
pop
add
iret
int3
lret
ss
icebp
push
jne
idivb
mov
data16
jno
dec
mov
add
sub
inc
les
push
inc
xor
stos
and
insl
shll
sub
inc
cmp
cwtl
add
push
ja
rcll
jecxz
loop
aad
pop
xor
xchg
fcompl
jmp
jno
xchg
pop
dec
in
popf
enter
lcall
in
test
ficoml
lock
popa
cs
int
dec
lock
shlb
out
mull
inc
js
vpand
insl
pop
divb
add
mov
adc
sub
iret
jp
mov
mov
jecxz
flds
dec
ret
push
cltd
cwtl
dec
loopne
push
adc
xchg
push
xchg
push
add
or
jo
adc
sbb
mov
imul
rolb
jb
pop
jle
sbb
sbb
jecxz
mov
mov
subl
iret
mov
mov
inc
into
fs
inc
aas
enter
fwait
sbb
imul
add
pop
dec
pop
inc
test
sbb
hlt
scas
adc
addb
add
scas
mov
daa
jl
ljmp
in
loop
add
into
test
jbe
movsl
std
mov
push
cmpsb
insl
mov
dec
jbe
lds
in
xchg
jnp
popa
nop
in
jecxz
out
outsb
mov
dec
call
movsl
iret
cli
cmp
and
xchg
sub
sar
ss
sub
fxam
add
int
into
jl
adc
pop
imul
in
sub
xor
adc
cmpl
repnz
ret
jle
mov
dec
cwtl
dec
jmp
ljmp
and
jns
fnstenv
and
xchg
adc
mov
sub
push
es
insl
divl
add
xchg
imul
push
jge
dec
pop
aam
mov
jl
popa
push
std
test
rcrb
inc
aaa
or
mov
push
movsb
or
mov
dec
adc
push
enter
add
leave
in
js
xadd
cmpl
loope
popa
mov
insl
pop
scas
xchg
push
cmp
pop
adc
xchg
adc
lea
cld
sub
adc
xor
or
int3
in
cld
fcomps
in
xchg
lcall
mov
stos
shrl
neg
dec
aad
nop
rcrb
call
pop
or
sbb
and
shll
and
jbe
xor
cmpsb
stc
icebp
imul
push
dec
test
pop
out
sbb
outsl
push
sbb
mov
adc
adc
js
jb
cmc
push
add
sub
je
fldenv
test
ss
dec
or
push
xchg
xor
ret
sti
mov
leave
inc
in
xchg
test
mov
and
out
shl
mov
sbb
sbb
shrb
nop
add
sub
sti
mov
cld
add
or
cmp
lods
test
repz
push
push
daa
js
les
roll
inc
push
mov
push
lcall
scas
rcrb
adc
dec
repnz
inc
xchg
lahf
sub
xorb
mov
andb
inc
mov
jecxz
clc
xchg
sub
inc
sbb
jle
mov
out
lret
jb
push
push
mov
lahf
push
jns
movsb
pop
movsb
cmp
pop
xchg
jno
jle
pop
and
repnz
ss
sub
pop
cmp
test
fistpll
imul
cmp
stc
andl
dec
push
gs
xchg
xchg
lret
adc
mov
cmp
mov
loope
in
clc
leave
divb
push
fistl
xchg
lock
fcoms
shll
sbb
arpl
aam
stos
es
addr16
xor
cmp
daa
aaa
pop
cmpsb
mov
loopne
jp
out
in
dec
or
in
dec
fcomps
aam
out
add
jmp
mov
adc
and
aaa
cld
mov
stc
mov
inc
fstpt
cmpsb
in
push
and
les
jne
gs
jae
imulb
sbb
test
ret
leave
jb
mov
jb
adc
and
divb
in
scas
sub
jnp
cmpsl
sarl
lretw
adc
icebp
mov
jbe
and
movsl
stos
in
test
sub
jle
mov
push
inc
mov
pop
pop
jl
frstor
cmp
in
test
lcall
and
nop
int3
dec
cmp
push
sub
out
mov
ljmp
pop
sbb
incl
jp
aas
js
in
test
fucom
insb
jmp
add
push
loope
jnp
lret
sub
jne
jmp
xchg
mov
ja
mov
in
fs
lahf
pop
stc
xchg
cmp
stos
push
movsl
sbb
and
out
mov
ljmp
add
scas
inc
fimull
pop
movsb
adc
lock
js
pop
jae
jb
sbb
cltd
mov
dec
fcompl
jmp
xchg
sub
sbb
icebp
mov
fisttps
insl
cmp
or
dec
scas
inc
mov
mov
je
xor
in
push
das
out
pop
test
iret
jle
adc
les
xlat
out
nop
and
inc
clc
repnz
ljmp
sbb
mov
testl
jbe
shr
mov
jmp
outsb
push
fsubr
outsl
sub
jmp
fnstcw
mov
pop
lods
pop
sub
xchg
mov
or
dec
or
les
push
cmc
cmpsb
sub
push
adc
sub
jp
or
add
scas
lea
adc
inc
inc
test
push
mov
popf
mov
bound
lret
imul
jo
lcall
mov
push
test
aas
je,pn
mov
sarl
mov
rolb
pop
mov
mov
jae
mov
cli
fadds
inc
cmp
in
pop
mov
cltd
addb
pop
pop
jb
xor
push
sahf
mov
adc
adc
movsl
dec
xchg
imul
xchg
les
imul
scas
pop
add
push
clc
insl
lods
test
jecxz
mov
fidivl
cmc
sub
int
and
sub
add
cltd
add
gs
mov
pushf
rcr
push
mov
jge
in
int3
popa
dec
in
fsubr
mov
clc
or
push
loope
cmc
or
adc
push
jecxz
sub
xor
gs
mov
sbb
fildl
in
insb
enter
pushf
int
cmp
cld
rcll
loop
pop
jle
test
mov
push
ret
adc
movsl
movb
aaa
jno
sub
repnz
or
and
pop
popf
insl
or
and
lahf
test
mov
or
rcrb
cmpsl
mov
hlt
aaa
insb
mov
pop
xchg
stc
ss
ficoms
call
in
fnstcw
xor
and
dec
cmp
les
movsl
cld
jns,pt
lods
jns
add
sbb
inc
sbb
jecxz
fstl
adc
or
sub
xchg
push
add
jle
xchg
test
into
lods
test
movsl
cli
into
fldl
fnstenv
mov
sbb
cmp
sub
mov
lcall
test
push
in
pop
add
jno
fwait
call
cmp
push
and
xchg
lcall
push
jb
xor
test
push
inc
pop
ja
push
pushf
push
pop
xorl
push
in
adc
or
pop
adc
lea
nop
enter
pop
movsl
divl
push
jg
push
sbb
loope
xor
scas
lea
add
cli
fmulp
lock
lock
outsl
out
push
lret
rcl
cmp
ret
adc
mov
popf
mov
push
dec
pusha
haddps
ljmp
addr16
mov
hlt
jecxz
and
negb
hlt
cld
jno
cli
mov
push
pop
les
inc
js
sbb
in
or
sahf
inc
jle
movsb
andl
leave
out
stc
pusha
mov
movsb
imul
xchg
or
push
push
sub
mov
sbb
mov
movsl
push
ret
sub
pop
test
daa
sub
mov
fistpll
ljmp
leave
loopne
mov
jne
sub
mov
in
push
jge
or
gs
push
test
test
in
icebp
test
pop
lods
fwait
pop
jbe
mov
pop
jg
adc
push
lods
xchg
repnz
ds
push
cmp
sbb
mov
insb
data16
aas
ret
push
dec
lds
jno
inc
aam
inc
in
ffreep
sbb
xchg
sub
add
enter
ret
in
adc
stc
andl
xor
inc
adc
jo
pop
and
push
sub
push
enter
shll
iret
sahf
shrb
test
pop
negl
xor
cmp
insb
jg
outsb
imul
cmpsb
pop
in
or
dec
fwait
fisttpl
xchg
push
pop
cmp
or
push
mov
adc
mov
mov
or
or
outsl
mov
pop
scas
in
lods
or
push
sbb
scas
adc
in
or
xor
mov
ret
leave
xor
nop
mov
mov
inc
or
fiadds
lea
jecxz
pop
jnp
orl
sti
push
mov
jbe
aam
xor
loope
mov
adc
xchg
js
rcrl
cltd
adc
cmp
cmp
adc
inc
adc
shl
rolb
add
add
out
scas
loope
lret
shlb
sbb
leave
lret
push
es
sbb
lret
cmp
jmp
lret
lea
movsb
leave
jl
lcall
cli
ljmp
adc
sbb
jbe
jnp
leave
arpl
movsb
mov
movsl
in
ss
aam
xchg
repz
inc
enter
fcomps
mov
pop
imull
out
mov
cli
nop
adc
pop
push
xchg
fwait
std
xchg
jae
pop
inc
mov
push
popa
jbe
mov
jae
xor
jl
outsl
imul
stos
out
nop
sbb
add
iret
adc
ds
dec
pop
nop
and
adc
test
gs
pop
aas
cmc
lea
push
pusha
lret
out
adc
mov
out
loopne
mov
test
addr16
ret
ja
mov
dec
push
xor
lea
sbbb
mov
dec
ds
movsl
add
push
mov
adc
pop
out
jbe
test
inc
inc
insb
pushf
or
mov
test
or
mov
aam
mov
dec
stos
xlat
out
inc
addb
rclb
push
xchg
fimuls
call
add
sbbb
loop
pop
sub
movsl
sbb
cmp
cld
add
mov
imul
pop
sbb
mov
or
les
and
fadds
mov
pop
and
fwait
aaa
pop
mov
adc
in
jne
adc
stc
loopne
jg
imul
sub
out
lock
push
movsb
cmp
add
lret
fidivs
clc
dec
and
sbb
push
loop
mov
cltd
push
dec
aaa
cmp
mov
sub
or
sbb
cmp
or
rorl
pop
add
in
push
stc
pusha
mov
add
cmp
js
sahf
gs
sub
dec
push
mov
nop
call
popa
sub
inc
fwait
xlat
std
data16
mov
adc
cmp
insl
mov
and
loope
bnd
out
mov
cwtl
sub
out
insl
add
fcmovne
or
pop
out
int3
dec
shl
lret
fsubl
loopne
push
dec
aas
hlt
scas
dec
jl
push
jecxz
mov
cmpsl
adc
mov
adc
imul
mov
xchg
aas
aas
ja
jg
pop
int
dec
ja
pusha
dec
lret
ljmp
or
add
lret
dec
xchg
xchg
xchg
incb
xchg
sub
adc
rol
fcomps
test
mov
sahf
in
js
mov
rcl
data16
enter
clc
jae
push
das
cmpsb
sbb
mov
mov
jo
test
jo
jmp
inc
inc
stos
sbb
push
sub
dec
or
popa
dec
xchg
xadd
fidivl
xchg
imul
and
cmp
in
jbe
xor
andl
mov
repnz
shlb
out
xchg
ret
inc
sbb
xchg
xor
jecxz
rolb
daa
inc
loop
ljmp
adc
inc
cmp
xor
xor
repnz
dec
mov
sarl
out
pop
pop
test
pop
bound
ljmp
repnz
pusha
xchg
filds
out
in
inc
aad
jle
pop
pop
mov
insb
sbb
sbb
mov
cmp
pop
dec
push
test
cwtl
xor
mov
out
mov
popa
scas
inc
mov
xor
mov
sbb
pop
mov
xchg
inc
daa
iret
ja
mov
adc
int
fisttpl
sbb
xlat
push
cmp
mov
test
add
mov
es
aas
xor
fwait
xchg
add
jno
mov
mov
mov
mov
data16
sub
aam
or
fninit
xor
pop
stc
pop
mov
mov
cmp
iret
cmp
sbb
out
aaa
mov
int
enter
jb
nop
scas
scas
xchg
dec
popa
or
pop
ret
shr
das
mov
das
test
sbb
sarb
xor
cmovno
sti
int
lds
xchg
les
leave
dec
mov
pop
lcall
xlat
inc
push
mov
push
stc
jns
xorl
movsb
sbb
lahf
pusha
gs
fcmovne
adc
insb
adc
mov
push
ljmp
jnp
pop
jne
gs
cmp
jmp
inc
call
mov
push
mov
aaa
outsl
xchg
jmp
and
aam
dec
sbb
fwait
les
notb
je
int3
data16
xor
pop
sub
jns,pn
sub
call
push
inc
xchg
movsl
in
hlt
dec
pop
push
sub
in
pop
in
push
cmp
adcl
std
mov
or
xor
xchg
inc
cmpsl
sub
jae
and
stc
or
pop
jae
imul
push
mov
iret
add
add
gs
mov
ret
lea
aad
adc
add
fsubrl
loop
sbb
popf
call
test
mov
mov
arpl
xchg
incb
push
scas
imulb
loop
pop
testb
pop
test
cli
mov
aaa
movsl
add
scas
ds
cltd
sbb
or
out
push
push
adc
stc
test
mov
dec
inc
or
sbb
cmp
ja
insl
add
aaa
pusha
cmp
stc
loopne
or
pop
lds
mov
cmp
pop
mov
jb
sub
mov
push
pop
xchg
sbb
lcall
inc
mov
shll
stc
ljmp
sub
imul
inc
test
xchg
and
sahf
mov
jmp
and
pop
loope
cmp
sbb
les
cs
push
addr16
out
insb
adc
fmul
sahf
idivl
xchg
add
jb
popa
push
add
add
mov
xchg
mov
outsl
push
mov
sbb
insb
mov
mov
xchg
cmp
sub
mov
pop
pop
cmp
cmpsb
jae
out
mov
xchg
shll
fidivrl
rorb
mov
aam
enter
inc
rolb
data16
push
out
dec
pop
dec
jp
iret
jl
cmp
jmp
hlt
cli
cld
pop
xchg
outsl
fs
push
adc
cmp
lcallw
aaa
adc
popf
jns
repnz
or
test
xchg
dec
inc
daa
je
mov
dec
sti
cmp
mov
jne
loopne
insb
daa
stc
in
jg
or
aas
add
pop
stos
or
cmp
jg
test
in
jno
mov
inc
andl
insb
xchg
pop
sub
sbb
inc
jb
rolb
push
lret
into
out
outsb
xlat
pop
adc
pop
aas
loope
shlb
ja
aad
fldenv
inc
push
push
dec
fcmovu
ret
test
cmpl
out
and
cmp
jns
push
or
iret
jae
out
mov
mov
es
adc
add
pop
outsl
es
sbb
add
push
shl
mov
cltd
mov
pop
push
add
shrl
std
enter
into
out
btc
cltd
mov
stos
loope
int
lods
shr
pop
sbb
inc
mov
int
popa
std
movsb
cwtl
popa
sbb
popf
clc
push
std
adc
lret
es
subb
in
mov
fbstp
push
int3
xor
jns
dec
icebp
push
stc
ds
test
in
xor
and
insl
pushf
mov
mov
dec
mov
std
clc
or
cmp
lds
aam
xlat
xchg
sti
adc
andl
sarb
iret
aas
jge
ret
pop
mov
mov
push
shll
dec
inc
pop
xor
lock
push
mov
xchg
inc
in
xlat
xchg
stc
sub
insb
testl
adc
mov
adc
mov
lahf
adc
mov
sbb
xlat
bound
pop
push
add
inc
test
sar
xchg
ret
sub
lock
filds
sbb
and
xchg
jge
test
inc
mov
in
aaa
pop
pop
scas
popf
ja
jo
sub
imul
sbb
cwtl
xor
and
imul
mov
mov
shlb
jmp
mov
inc
xchg
push
and
shl
loop
dec
mov
int3
inc
mov
jbe
lds
mov
adc
or
push
jg
mov
xor
push
mov
sbb
ljmp
insb
lret
fwait
addr16
aam
cmp
mov
sbb
cmp
nop
jno
pop
stos
repnz
jecxz
adc
jmp
inc
imul
jo
xor
cmp
popf
mov
push
push
ffreep
repnz
or
enter
mov
add
xchg
sbb
mov
cmpsb
or
pop
clc
jg
mov
cmpsb
push
sub
mov
scas
lahf
stos
mov
cmpsl
inc
xchg
out
incb
or
popf
add
faddl
ss
icebp
fs
int
pop
inc
mov
mov
mov
cwtl
mov
daa
or
pop
lods
mov
gs
or
outsb
cmpsl
loope
int3
pop
cmpsb
out
in
loope
pop
fildll
push
xchg
arpl
inc
add
add
ss
test
or
loopne
adc
add
and
xchg
lock
testl
xchg
cltd
test
les
or
sbb
mov
sbb
out
fsubrl
xlat
mov
stos
mov
mov
loope
cli
lret
fwait
mov
mov
ja
jbe
cli
sub
push
icebp
cld
mov
leave
fsts
adc
pop
ss
lods
mov
lret
inc
xor
xchg
lahf
cmp
jge
sub
je
imul
es
jp
roll
popa
repnz
js
loopne
mov
dec
mov
add
pusha
enter
fsubl
add
dec
sbb
pop
sub
sub
scas
cltd
adc
aas
test
lock
ja
in
push
adc
iret
or
xorl
jns
lds
jo
pop
loopne
xchg
repnz
test
mov
test
lahf
out
into
dec
stc
mov
hlt
and
sub
push
xchg
mov
adc
mov
pop
test
sbb
xor
negb
pop
add
push
pop
ret
pop
iret
aad
iret
inc
pop
aas
outsl
mov
mov
pop
mulb
jbe
mov
cli
mov
rcrl
into
cs
mov
ds
xchg
cmp
mov
and
mov
pushl
add
dec
shrl
xchg
push
and
lret
inc
pop
ret
scas
lret
inc
push
sub
out
movsb
outsl
das
in
sbb
pushf
ret
enter
lods
jg
test
aas
outsb
lods
mov
out
hlt
dec
repz
add
shrb
bound
pusha
int3
out
pop
jns
insl
adc
and
inc
dec
repz
cmp
jecxz
adcb
callw
push
std
sub
in
sub
inc
inc
into
fildll
push
fsubs
add
shll
test
addl
mov
adcb
cli
out
enter
sub
mov
fwait
xlat
shr
cmp
xor
mov
pushf
mov
push
sbb
jbe
out
outsl
inc
or
faddl
and
or
push
in
test
popf
movsb
adc
int
dec
cmc
ja
outsb
xor
lds
das
add
movsb
js
pop
loopne
in
jo
adc
js
sti
aaa
cmp
mov
test
cmp
movsb
mov
dec
cs
fdivp
lods
push
jle
xchg
jo
mov
sub
mov
mov
sbb
and
adc
add
dec
pop
xor
cld
bound
cmpsl
idivl
mov
pop
mov
and
sub
fst
add
and
lcall
add
nop
js
mov
or
js
dec
lds
jne
orb
inc
dec
idivb
dec
stc
movsb
pop
stos
popf
cmp
push
xchg
imul
xor
fdivrp
sbb
fucomi
out
sbb
mov
jge
adc
sbb
mov
mov
pop
cmp
dec
sbb
sti
and
test
mov
inc
sarb
mov
outsb
xor
push
je
test
sbb
or
cmovnp
lods
mov
sbb
cmp
in
inc
fwait
add
test
repnz
xchg
mov
cmp
mov
lcall
cltd
les
mov
push
leave
cmc
mov
jbe
shll
sbb
test
sbb
arpl
push
aaa
loope
mov
adc
inc
pcmpeqd
jge
stc
cmp
cmp
push
out
fdivrs
pop
push
je
or
lds
dec
jmp
loope
shr
or
mov
pop
ds
mov
ficoms
fnstenv
shrb
add
push
hlt
repnz
jbe
scas
pop
leave
daa
xor
es
xorl
stos
mov
cwtl
xchg
jle
cs
xor
dec
leave
dec
xchg
loop
add
mov
fnsave
or
mov
mov
dec
inc
mov
arpl
addl
ret
pop
in
cmpb
cmp
rcrl
imul
test
loop
sbb
inc
push
jb
into
xchg
mov
mov
fists
faddl
mov
cs
shll
push
decl
dec
push
lcall
inc
inc
in
jnp
sbb
xchg
adc
push
out
fisubrs
es
xchg
loop
sub
lock
add
pushf
sub
cmc
push
push
dec
sti
inc
js
fsubr
mov
inc
xchg
sub
movsb
push
fstpt
jg
test
push
rolb
inc
fxam
mov
pop
aad
sahf
ret
inc
pop
gs
cmp
test
push
push
jo
and
rep
dec
test
in
xchg
repnz
and
and
pop
cmp
clc
inc
add
sbbb
or
jmp
jp
imulb
lock
pop
leave
dec
jae
call
sub
loop
xlat
push
push
loope
mov
cli
dec
adc
push
or
push
lret
mov
push
rolb
mov
fdivrs
sub
pop
pusha
sbb
inc
ret
loop
jns
sub
jno
imulb
pushf
ds
sahf
lods
lods
out
imul
in
negb
sub
nop
sbb
jmp
ret
mov
fisubs
mov
xchg
mov
outsl
mov
adc
sub
or
pop
test
bound
add
adc
ror
sbb
sub
bound
cld
repz
andb
and
sub
mov
popf
nop
add
add
ds
ror
ss
sbb
rclb
subl
fsubs
mov
or
in
xchg
icebp
stos
pop
push
lds
push
lcall
mov
je
xor
pop
cmp
in
bound
cli
push
push
mov
aad
inc
clc
mov
mov
idivl
adc
sbb
sbb
leave
sbb
mov
pop
pop
outsl
and
pushf
push
iret
pop
adc
mov
xchg
add
les
cmp
gs
jb
push
push
mov
cmp
cs
cmp
arpl
dec
bound
xor
inc
xchg
sub
and
push
push
int3
aaa
or
rcrl
sahf
loopne
sbb
xor
cmc
cmpsl
jmp
sub
cltd
sti
dec
mov
cmpsb
sub
sbb
xchg
int
in
aad
dec
arpl
sahf
xor
dec
out
cmc
and
mov
ret
dec
push
aam
ret
push
sub
inc
jo
mov
cli
push
jnp
adc
out
lcall
jne
push
cmp
movsb
outsl
dec
call
int3
test
pushf
jae
dec
in
dec
push
xorb
dec
out
adc
sub
outsb
paddw
scas
pop
das
dec
test
out
int
mov
mov
cmpsb
mov
inc
cmp
lds
lds
inc
les
jnp
lret
jmp
push
scas
je
add
sub
add
mov
cli
xchg
int
push
outsb
das
into
mov
or
pop
push
je
sub
adc
xlat
cmp
sbb
xor
mov
movsb
lret
movsb
or
sbb
mov
mov
in
mov
add
ds
push
sbb
sti
add
mov
inc
or
sbb
enter
test
popf
mov
fcmove
mov
iret
test
jmp
daa
adc
sti
mov
loop
jmp
adc
and
popa
icebp
mov
xor
cmp
pop
add
cmp
movsl
arpl
ja
mov
fdivr
push
jns
in
shll
loope
jnp
lds
mov
mov
scas
dec
cmp
clc
xchg
cwtl
imul
aad
sbb
sub
mov
inc
arpl
addl
inc
push
je
cmp
add
mov
mov
xchg
int3
bound
ficoms
mov
lds
xor
das
xor
nop
mov
dec
out
pop
add
cmpsl
mov
xchg
sub
out
or
vmovd
rorl
int3
inc
cmp
push
insb
jle
lods
std
and
pop
insb
xchg
dec
ret
std
imul
mov
xchg
sub
cmp
jnp
sub
mov
mov
push
sarl
clc
add
cmp
sub
fcomps
int
xlat
pusha
lcall
cwtl
inc
mov
and
add
and
xor
ds
jle
lahf
dec
and
inc
and
xor
cltd
mov
and
sub
inc
mov
xorl
jne
stos
and
jno
insb
out
repz
int3
push
add
and
loope
dec
test
jae
lcall
adc
xchg
mov
insl
push
int3
sbb
adc
adc
das
dec
push
fimuls
out
xchg
repnz
dec
xchg
dec
sbb
pop
mov
or
mov
je
je
pop
gs
adcb
das
mov
push
adc
icebp
cmp
lret
daa
sub
add
jne
test
lea
outsl
jnp
or
fdivs
decl
test
cmp
movsl
mov
lds
lcall
outsb
and
imul
notb
lahf
imulb
test
mov
mov
push
cli
fidivs
out
mov
mov
mov
bound
sbbl
cmpsb
repz
mov
sbb
push
inc
sbb
inc
or
jb
or
lret
jp
cmp
pusha
je
jecxz
or
push
adc
std
xchg
jne
inc
inc
jecxz
popf
jo
jns
sahf
insl
sbb
jo
loopw
xchg
add
sbb
arpl
jmp
and
mov
mov
jbe
mov
dec
push
int
outsb
jle
rorb
dec
cld
mov
subl
jne
jb
pop
pop
outsb
call
sbb
ja
push
inc
pop
jmp
push
pop
lock
je
push
scas
addr16
mov
pusha
nop
mov
lgs
sti
test
push
inc
jg
call
and
dec
xor
jl
jnp
rcll
sub
dec
cmp
pop
loope
loop
fcomps
int
frndint
jecxz
dec
fwait
mov
xchg
rep
in
ja
jo
xchg
aad
push
push
pop
xor
lods
in
xchg
xchg
sub
jecxz
xchg
cmp
pop
jmp
pop
or
ljmp
push
daa
iret
hlt
xor
int
dec
mov
mov
pop
mov
cli
out
cltd
orb
cmp
cmp
pop
and
mov
call
mov
jae
test
inc
out
or
cmp
mov
clc
mov
insl
pusha
push
movsb
into
outsb
es
pushf
adc
cmp
jbe
cltd
arpl
rorl
xchg
mov
dec
out
inc
pop
mov
push
stos
mov
ficoml
idivb
repnz
xor
dec
and
mov
mov
jle
popa
inc
cmp
push
jmp
aaa
cmp
jp
mov
adc
imul
xorl
scas
ss
mov
insb
mov
loopne
jmp
adc
stos
hlt
sub
inc
into
mov
lahf
ds
fisubl
icebp
cmp
in
cmp
imulb
out
sarb
mov
out
adc
loop
sub
mov
lea
cltd
mov
sub
stos
rclb
cli
jg
imul
jb
stos
scas
cltd
or
out
add
pop
sbb
push
call
mov
lods
data16
out
stos
pushf
jno
cmp
lret
in
mov
dec
push
sub
mov
inc
push
icebp
ja
lea
cmc
cmpsl
xchg
aas
pop
outsb
hlt
shlb
push
sub
mov
popf
fisttpll
xlat
sahf
mov
sbb
push
loope
cli
or
pop
push
pop
mov
rorb
adc
xchg
push
and
inc
sbb
push
pop
xor
xor
push
cmp
mov
negl
jnp
dec
lcall
push
sub
sub
js
scas
add
ja
sub
stc
push
mov
lret
pop
push
mov
mov
das
mov
pop
je
stos
xchg
gs
das
mov
adc
in
add
jne
cwtl
jp
add
test
adc
or
push
pop
adc
cmp
xor
out
push
mov
sub
jg
xlat
jnp
xchg
xor
lods
jno
jmp
xor
adc
sub
ret
andl
std
jno
push
pop
xchg
cltd
lock
xor
mov
shr
rolb
and
sbb
mov
jle
inc
add
scas
int3
les
push
icebp
xor
jne
stos
sbb
or
sub
cli
mov
or
test
test
cwtl
push
inc
add
mov
xor
test
dec
cwtl
test
lret
lret
xchg
xchg
jge
cmp
jle
and
andb
cmp
int3
jg
stc
jo
je
outsl
xchg
jae
push
bound
popa
test
dec
adc
test
mov
mov
rcl
repnz
mov
inc
or
mov
dec
jb
scas
sub
inc
das
dec
xchg
sbb
shl
imul
leave
test
mov
xchg
jne
into
loopne
icebp
out
xor
test
mov
pop
je
call
pop
jmp
popf
ret
or
jge
mov
fcomp
popl
das
cmpsl
cmp
mov
inc
adc
shll
cmp
imul
cmp
aaa
subl
cmpsb
shll
cmpsl
mov
jl
scas
imul
jg
fimull
pop
jl
roll
fisubl
addb
popa
pushf
and
mov
faddl
scas
pop
out
scas
sbb
xchg
pop
int3
orl
popl
movsl
insl
xchg
cmc
popa
test
subb
push
mov
xchg
mov
xchg
and
sahf
adc
adc
sub
imul
mov
fsubp
test
stc
les
fcomp
jns
arpl
int3
pop
xor
mov
int3
test
or
pop
xchg
cli
cwtl
int
add
xchg
jns
xchg
inc
stc
xor
popf
xor
test
repnz
adc
adc
loop
mov
mov
out
or
jmp
pop
add
or
jb
cmp
add
cmpl
aam
sub
sbb
xchg
and
mov
and
imull
insb
sub
std
sbb
jecxz
adc
pushf
inc
cli
repz
and
shl
into
jmp
daa
pushl
adc
push
cwtl
cld
xchg
mov
out
inc
pop
lret
bound
xchg
sub
daa
dec
nop
push
testb
es
mov
aam
or
sbb
add
dec
ret
inc
imul
out
jns
fwait
inc
mov
repnz
pop
inc
fsin
test
mov
fldcw
jno
addr16
insl
hlt
scas
inc
jecxz
addr16
scas
xor
add
and
mov
xor
push
dec
int
gs
decb
or
mov
stos
stos
leave
fldl2t
int
les
and
push
xor
sahf
lds
daa
mov
loope
cwtd
les
das
xchg
inc
xor
arpl
std
and
adc
dec
cmpsl
dec
or
inc
addr16
daa
das
push
jns
icebp
outsb
adc
jo
mov
iret
outsb
mov
mov
mov
sub
fists
push
in
out
sub
or
fdivl
push
sbb
movsb
dec
test
jbe
push
lcall
and
inc
pop
in
push
movsl
pop
dec
cwtl
shl
or
in
sbb
mov
and
addr16
aad
scas
mov
into
sbb
push
or
pop
push
imul
fs
xchg
pop
jo
shlb
js
inc
push
dec
sbb
inc
push
in
push
add
xor
test
clc
dec
xchg
test
and
or
and
xchg
fists
rorb
inc
mov
in
jl
dec
sub
icebp
push
and
shll
dec
mov
inc
pop
rolb
xchg
loopne
inc
ret
or
push
dec
das
jne
hlt
push
push
mov
notb
insb
jo
idivb
in
lock
jb
cmp
and
fnsave
dec
test
push
or
lea
push
in
mov
mov
sbb
pop
fcmovnb
shrl
xor
aas
sub
jg
fidivl
mov
dec
movsb
in
inc
inc
adc
xor
repnz
pop
push
fsubrs
lret
aam
leave
jge,pn
pusha
pop
aas
nop
orb
ja
or
adc
pushf
test
cs
divl
aam
sbb
xchg
repnz
aaa
mov
flds
push
cmp
xchg
or
js
into
adc
push
pop
dec
orl
lods
pusha
adc
gs
imul
push
jb
loope
iret
or
sbb
cmp
xor
hlt
mov
xor
test
scas
stos
es
cs
lea
adc
mov
loopne
mov
test
mov
ja
rol
stos
push
inc
sahf
pop
popa
aam
dec
jl
daa
jmp
push
or
sub
aaa
xlat
test
bound
mov
std
insb
push
int3
adc
xor
and
icebp
sbb
ljmp
loope
inc
mov
in
push
jmp
jg
or
fsubrs
jbe
bnd
cmpsb
in
lret
sbb
int
jns
cmp
pop
cmp
sahf
loope
cmp
push
stc
sbb
push
or
sbb
int
mov
cmc
lcall
or
insl
fwait
jns
add
dec
imul
and
sub
ljmp
xchg
pop
or
insb
arpl
mov
shl
mov
div
jb
xor
es
mov
jae
xor
xchg
mov
enter
jmp
pop
cmp
sbb
movb
out
xchg
das
inc
mov
jns
aad
scas
xchg
rcll
adc
pop
xor
stc
leave
roll
aad
pushf
call
push
push
xchg
sbb
data16
jne
or
das
cmpsl
aam
mov
outsb
push
sub
jbe
lcall
repnz
mov
xor
xor
call
cmpb
jle
ja
xchg
jne
push
xor
lret
pop
dec
lretw
or
sub
xchg
cltd
cmp
lret
sbb
mov
push
push
xchg
xchg
xchg
subb
arpl
inc
out
push
jnp
stos
loopne
js
loopne
dec
fwait
popf
out
hlt
or
inc
in
addb
fcmovu
aad
cld
jae
push
push
in
mov
lret
add
loope
mov
push
cmp
mov
es
sbb
dec
xchg
loop
aam
mov
aas
pop
cmc
aad
xor
loop
out
mov
xchg
pop
pop
imul
aad
insb
sbb
insb
imul
fisubl
cmp
cwtl
sahf
xor
jge
call
push
out
sti
fmuls
push
rorl
ss
sbb
lods
lds
mov
out
das
rolb
mov
or
ja
xchg
dec
jmp
int3
sbbb
stos
inc
add
jl
insl
push
push
dec
or
test
mov
cltd
orb
mov
dec
push
lahf
cs
lock
aam
mov
and
cltd
xchg
cwtl
mov
inc
adc
leave
iret
fld
push
dec
inc
adc
pop
adc
mov
xor
cwtl
pop
cmp
add
enter
cmpsb
cmp
dec
stc
dec
es
adc
jno
jp
xor
mov
iret
mov
adc
xlat
fcmovne
int3
ret
lret
lret
sbb
push
xor
xchg
inc
mov
mov
xor
fstpl
movsb
dec
sbb
cmpsb
ds
pop
gs
test
mov
mov
imul
idivl
sbb
repz
cmp
mov
pop
roll
jle
pop
add
arpl
stos
dec
loope
test
lods
cmpsb
out
sub
xlat
jns
lds
inc
int3
ja
inc
mov
xorl
dec
cli
test
adc
ljmp
xchg
xor
mov
fildl
adc
mov
fisttpll
xor
jle
bswap
jecxz
vpackuswb
js
mov
pop
or
movlhps
inc
out
es
fadds
aas
and
stos
lcall
lods
adc
addr16
fmulp
or
daa
andb
xchg
test
mov
xor
scas
stc
jp
push
mov
add
lret
xchg
aas
ret
sbb
cmpsb
fucomi
pop
pop
aam
insl
clc
xchg
add
dec
shrb
adc
dec
jne
jae
xor
aaa
rorb
mov
pop
mov
sbb
xchg
cld
or
fstps
xor
xchg
inc
push
sub
pusha
or
xor
xorb
roll
lea
adc
cs
nop
outsl
aad
jnp
push
pop
ljmp
cld
fists
cld
fwait
loope
loop
cmp
jp
iret
xchg
call
jne
xchg
int3
xor
lret
addr16
fwait
or
add
sahf
rcrl
shrb
dec
sar
std
rcrl
jge
notl
mov
mov
leave
sub
scas
in
hlt
xlat
incl
je
inc
dec
bound
add
lcall
sbb
xchg
push
jnp
xorb
mov
lods
mov
adc
hlt
cmc
mov
sbb
fists
shl
sub
enter
inc
insl
mov
xchg
movsl
push
fsub
jbe
sub
not
pop
test
xor
movsl
push
fucomip
and
dec
stos
andnps
nop
shl
mov
pusha
and
mov
out
insb
mov
xchg
hlt
jecxz
inc
mov
cld
aad
fcompl
inc
xor
fucomip
or
adc
fwait
push
inc
icebp
mov
xchg
out
jnp
ds
mov
inc
movsl
xchg
stos
fistpl
pop
cltd
rcrb
jl
sbb
pop
dec
das
pop
mov
movsb
dec
mov
fbstp
dec
add
xlat
out
popf
or
inc
cmp
in
daa
pop
pop
pop
lcall
cmp
cwtl
pop
shll
loop
mov
ret
fsubrp
push
jnp
inc
lea
and
xchg
fwait
out
or
inc
cld
push
push
pop
push
adc
add
fwait
pop
push
out
nop
pop
push
test
test
lock
nop
mov
arpl
sub
and
pusha
je
js
adc
add
inc
jnp
cmpsb
or
or
jecxz
jg
stos
and
pop
xor
fdivrl
repnz
call
insl
push
int3
mov
addr16
stos
pop
out
xchg
ficoml
enter
mov
mov
popf
cmp
jbe
stos
mov
aam
movsb
loope
cmp
imulb
sbb
jmp
xchg
iret
es
fldcw
out
cmpsb
and
sub
or
cmp
das
daa
aad
out
pop
pop
fsubp
mov
pushf
in
outsl
stc
and
jns
inc
or
outsb
imul
repz
mov
mov
call
sub
jg
cwtl
sbb
inc
fimuls
fs
cmp
fldl
cmp
loope
and
gs
xor
or
out
in
xor
add
mov
dec
gs
or
sahf
stos
daa
jb
out
sbb
fs
and
sbb
mov
es
fildl
or
xchg
fs
lahf
cmp
pusha
or
pop
vshufps
and
pop
jae
mov
inc
add
inc
lahf
sbb
pop
and
jns
cmpsb
and
jnp
and
push
jmp
or
or
jbe
pusha
jle
jbe
mov
xchg
cs
mov
inc
fisttpll
movsb
out
push
push
sub
inc
xchg
mov
mov
pop
cmpsb
cmp
mov
lds
arpl
mov
rcrl
mov
clc
cmpl
fisubs
outsl
int
dec
mov
inc
mov
or
xchg
xor
sub
out
and
insl
leave
or
pop
sub
push
fbstp
sahf
pop
outsl
push
lods
or
or
mov
push
pop
mov
pusha
xlat
je
and
push
hlt
mov
jmp
dec
das
jno
xchg
stos
arpl
cltd
jnp
jp
nop
add
cmp
fmuls
inc
jb
pop
sbb
push
or
xorl
jl
fsubl
aaa
shrb
sbb
cmp
or
mov
and
or
and
adc
sbb
ret
mov
les
test
mov
dec
enter
test
mov
pop
lds
ret
jecxz
dec
mov
mov
mov
cmpsb
jno
mov
push
pop
data16
out
call
sbb
imul
mov
mov
add
inc
pop
rclb
imul
dec
das
sub
in
fisttps
adcb
jp
mov
fwait
ss
out
dec
ret
pop
insl
adc
lods
ret
push
pusha
icebp
push
into
int3
shlb
mov
movsb
jns
dec
xchg
pop
clc
mov
insl
add
mov
rclb
test
adcl
inc
push
lods
pop
push
mov
mov
mov
jns
jge
inc
outsb
adc
sub
push
or
pop
fisubs
mov
pop
xor
xor
and
mov
jo
mov
add
jp
test
adc
mov
jge
addl
sbb
push
rcl
jge
in
xor
test
in
push
sub
pushf
push
out
mov
cs
scas
lds
icebp
out
divl
push
inc
aam
add
pop
inc
sub
and
sahf
loopne
add
mov
cmp
jp
int3
ficoml
test
jecxz
in
jle
fistpll
sub
mov
mov
gs
push
std
mov
pusha
ds
push
xchg
pop
mov
xor
ffree
clc
or
or
or
pop
mov
leave
push
mov
sub
sbb
insl
pop
xor
iret
cld
aam
das
nop
pusha
cmp
jns
jbe
xchg
and
mov
mov
dec
in
mov
lahf
popa
ss
inc
sti
lret
xor
and
xchg
sahf
rcl
int
fld
xchg
stos
ret
scas
rcrl
cmp
or
adc
cmp
mov
in
cmc
xorb
stos
sbb
imul
lret
mov
lcall
aad
lret
sub
sarl
arpl
testl
pop
mov
adc
or
jmp
idivl
aaa
sbb
xor
addr16
jns
push
jg
mov
and
jno
jo
push
mov
lods
jmp
cmp
mov
jae
sets
mov
clc
adc
int3
jp
inc
fdivs
cwtl
cmp
test
cli
adc
daa
sub
out
push
dec
lcall
jno
fcompl
add
fwait
ljmp
fsubrs
mov
cmp
and
cmp
cmc
sahf
jg
xor
mov
dec
xchg
mov
dec
xchg
das
test
arpl
out
aaa
sti
sahf
cwtl
or
mov
inc
mov
or
jnp
popl
cmp
mov
push
loopne
pushf
es
mov
lret
xadd
in
lea
incl
inc
pushf
sbb
and
cmc
mov
fs
cmc
jmp
push
inc
stos
mov
add
stos
jns
or
inc
adc
dec
push
stos
cwtl
imul
insb
mov
cmc
notb
dec
lcall
fwait
enter
push
cmpsb
mov
xor
push
mov
imul
jns
inc
out
mov
mov
jnp
lret
jl
xchg
jg
mov
scas
xchg
sahf
cmpsl
jnp
hlt
mov
jnp
push
imul
or
inc
pop
inc
jmp
pop
and
jmp
in
mov
dec
mov
aaa
push
sbb
xchg
decl
ds
es
sbb
and
cmp
mov
fnstsw
pop
xlat
mov
mov
xor
in
shrl
ret
not
jns
out
push
cmp
je
pushf
jnp
push
add
clc
jo
pushf
in
dec
mov
push
in
out
inc
or
pusha
int
push
data16
or
mov
push
mov
push
stc
fwait
test
enter
push
test
sarb
sub
mov
or
adc
cmpsl
stos
insb
and
aas
test
sbb
aad
and
ljmp
les
scas
popa
das
aad
scas
cli
pop
je
xlat
pop
insl
adc
adc
arpl
fisttps
pop
sub
mov
jo
or
mov
dec
or
int
sub
arpl
mov
cmpl
inc
xor
sbb
scas
inc
sbb
enter
jmp
out
movsb
loop
lret
ss
setno
xchg
jecxz
out
inc
jne
fldenv
inc
rcrb
stos
cmp
jge
push
cmp
paddsw
xor
sahf
fistpl
sbb
or
xchg
stc
mov
lret
mov
arpl
add
bound
mov
mov
js
movsb
push
dec
xchg
xchg
lock
sub
fdiv
into
fidivl
sti
mov
xor
jbe
mov
pop
fadds
std
sti
adc
lock
jmp
orl
dec
js
cmp
mov
test
call
or
call
xor
inc
xor
jle
pop
push
mov
cs
aaa
xchg
nop
push
xchg
enter
test
fs
mov
addr16
int
sarl
mov
dec
imul
lock
mov
adc
pop
sub
mov
js
loopne
mov
daa
xchg
pop
nop
xor
imul
mov
outsb
mov
inc
push
pop
mov
cmpsb
pushf
add
push
ret
mov
jns
fstpt
xor
movaps
push
mov
mov
xchg
push
imul
mov
data16
fadd
es
push
test
mov
add
je
dec
in
fmulp
lahf
js
inc
sub
paddusb
jb
xor
sti
and
mov
sub
frstor
cmpsb
mov
sbb
loopne
xor
adc
jo
mov
inc
sbb
or
cmp
cmp
fwait
cli
sub
adc
test
shll
push
mov
mov
jp
add
jg
out
imul
pop
sahf
dec
sbb
stos
sub
mov
divb
repz
dec
lods
test
in
jle
and
xchg
dec
push
stos
inc
cwtl
push
jno
push
shl
push
call
shlb
dec
dec
test
in
and
jnp
rorb
push
out
int
pusha
stc
popa
fnsave
push
pop
outsb
fsubrp
xorl
roll
mov
lods
pop
dec
outsl
xor
iret
adc
adc
imul
push
push
sbb
pop
push
mov
ds
sbbb
push
clc
adc
imul
mov
cmpb
mov
adc
inc
pslld
pop
or
mov
fnstenv
shr
cmp
adc
push
fldt
mov
rcl
jno
push
loopne
into
das
mov
fnsave
cmp
shr
inc
cli
cmp
cmp
in
inc
dec
aaa
jo
pop
fwait
pop
mov
jp
fstps
loop
imul
out
in
xor
sbb
jecxz
out
mov
nop
lds
inc
je
mov
outsb
inc
jl
fmuls
mov
xchg
mov
and
cmpsb
addl
or
imul
loop
jg
stc
test
dec
mov
out
aaa
ja
and
add
dec
cmp
adc
push
andb
add
movsb
test
mov
xchg
xlat
xor
ret
pop
cmpsl
xlat
jge
sti
sti
push
mov
xchg
rcrl
mov
push
shrb
cmp
push
das
rcll
push
add
dec
push
mov
mov
push
add
pop
js
ljmp
xlat
mov
jmp
mov
jnp
imul
outsb
cmpsb
rcrb
mov
aam
popa
pusha
int
xchg
sbb
loope
out
sbb
dec
repz
pop
jle
pusha
xor
sbb
inc
sub
xchg
inc
icebp
pop
aaa
mov
bound
sbb
insb
mov
loop
adc
cli
dec
adcb
shlb
ja,pn
imul
mov
imul
push
mov
outsb
int
fs
scas
mov
sub
jo
ret
lcall
popa
push
sarb
pop
lds
fildl
add
mov
in
cmp
mov
dec
stos
sub
inc
pop
sub
xchg
aad
fcmove
les
sub
ds
insb
mov
adc
jnp
dec
sbb
mov
stos
mov
call
mov
std
out
xor
mov
or
add
inc
jmp
jmp
mov
push
adc
and
fmull
ja
addr16
dec
lcall
jbe
xchg
mov
ror
lea
std
int3
and
std
xorl
insl
xchg
sbb
dec
nop
stos
stos
or
push
fcoml
aas
pop
out
dec
cmpsb
sbb
jl
lock
lea
scas
mov
xor
cwtl
mov
pop
sti
lcall
mov
mov
and
sbb
popf
xor
stos
popf
ja
add
or
lock
cmpsl
cmpb
dec
test
push
ffreep
dec
leave
sbb
mov
sahf
push
sahf
in
sub
gs
sbb
sti
je
repnz
insl
rolb
mov
ja
and
pop
dec
cmp
shrb
push
je
les
push
cmp
mov
enter
xchg
pop
mov
mov
outsb
std
fstl
mov
or
jg
cmp
xor
adc
cli
popf
mov
mulb
push
stc
xchg
icebp
add
in
cmpsb
mov
ror
xchg
int
pop
add
xchg
push
loope
in
mov
mov
mov
cwtl
dec
xchg
addr16
pushf
mov
insb
push
fwait
jbe
xor
in
fadd
inc
xlat
push
add
fwait
cmpsl
jge
mov
push
xchg
or
lret
xchg
xor
mov
pusha
test
push
xchg
or
jp
and
je
int3
push
cmp
pop
inc
inc
xor
jecxz
push
out
mov
cmpsb
sbb
ret
jne
testl
and
xor
xor
andl
daa
jp
shlb
sahf
mov
sub
subl
cmp
fcoml
iret
mov
push
jle
flds
mov
or
push
jmp
push
enter
mov
inc
mov
sub
loope
lcall
je
shlb
mov
shlb
cli
fistl
jb
test
dec
push
lahf
orl
add
adc
clc
add
xor
dec
sbb
loope
adcb
inc
inc
and
rcl
into
ss
test
pop
lock
push
out
push
sti
lret
sbb
mov
xor
push
sbb
aas
mov
xor
and
ficoml
mov
das
out
bound
ficoml
aaa
shrb
in
jle
push
xchg
mov
dec
xchg
hlt
icebp
xor
shll
pop
leave
imul
jnp
lcall
scas
clc
pop
cmc
ret
push
xchg
loop
cs
mov
es
cmp
roll
push
pop
add
fcompl
lcall
rclb
cwtl
inc
cmpsl
fldcw
and
cwtl
mov
aam
pop
mov
cmp
xchg
mov
jle
jo
mov
cmp
fwait
in
mov
push
sub
shlb
ja
and
test
inc
sbb
lock
xchg
outsl
add
sahf
mov
repz
out
clc
adc
cmp
inc
icebp
repz
scas
jg
imul
xchg
fadd
ret
stos
stos
sbb
mov
xlat
push
lds
fldt
and
sub
sbb
test
push
and
pop
mov
out
roll
loop
aaa
ficoms
mov
cli
mov
dec
xlat
imul
sbb
push
xor
fcomp
pop
and
adc
out
sub
add
pop
or
lret
loop
xchg
sbb
das
sti
fiaddl
ds
adc
into
mov
xchg
in
add
pop
sub
scas
cmpsb
negb
jle
mov
add
mov
xlat
add
dec
mov
ror
imulb
push
into
jmp
mov
sbb
imul
xchg
and
into
imul
outsl
sbb
or
pop
pop
and
outsb
cmp
push
sarb
mov
add
sbb
repnz
add
loop
pop
inc
add
lods
sub
cmp
int3
test
mov
stc
stos
dec
cltd
and
std
add
or
shld
pop
es
xchg
dec
cltd
xlat
cwtl
cmp
cmp
jns
iret
pop
push
jbe
mov
xacquire
mov
sub
ds
fists
cmp
push
or
adc
ret
adc
dec
xor
dec
add
shll
arpl
jle
xchg
cmp
cmp
or
xor
cvtdq2ps
fsubl
inc
cmp
push
xchg
push
xor
jecxz
pop
insl
ss
adc
rorb
stc
addr16
lret
lret
mov
mov
push
lds
stos
ss
lock
cmpsl
scas
stos
out
adc
and
mov
stc
movsb
mov
icebp
mov
add
lds
mov
inc
pop
mov
xchg
xor
push
cmpsl
imul
push
mulb
fcompl
andb
in
nop
mov
decl
mov
out
icebp
scas
mov
ficoms
mov
fbld
imul
dec
insb
data16
cmpsb
jecxz
test
in
jmp
roll
xchg
ret
mov
scas
fstpt
add
stc
jmp
cmp
ret
ljmp
fisttps
lcall
add
out
setnp
rcr
xor
aaa
cmc
sahf
mov
fldl2e
pop
dec
adc
imulb
xlat
dec
shll
popa
sub
mov
mov
addl
mov
pop
xor
or
shlb
mov
cmpsb
lock
je
stos
test
fucomp
stos
fsubrl
rolb
pop
cmpsl
loop
fcoml
pop
or
cmp
cmc
test
lods
and
ljmp
pop
das
xchg
stos
hlt
push
movsl
mov
arpl
and
in
add
lret
push
mov
dec
inc
sbb
inc
xor
cwtl
fstpl
call
int3
enter
cmp
bound
mov
add
xchg
mov
sbb
in
outsl
shl
pop
xchg
dec
or
add
and
loopne
shrl
push
or
mov
sbb
ret
xchg
popa
cmp
scas
sub
scas
iret
enter
je
cmpsl
jl
andl
rcrb
mov
xor
outsl
loope
dec
and
adc
lods
aad
js
cld
into
pop
push
xor
ret
xor
jg
mov
lds
sbbl
mov
negl
ret
xchg
pop
inc
sub
das
rolb
jns
inc
leave
push
pop
sub
mov
stc
cs
push
pop
clc
in
pop
fwait
dec
stc
cmp
insb
int3
inc
test
ja
or
adc
mov
fwait
push
push
dec
sbb
test
adc
mov
loop
sub
inc
adc
hlt
pusha
shll
pusha
lcall
aaa
dec
cmp
add
pusha
dec
mov
mov
testb
icebp
cwtl
iret
jbe
mov
stos
movsl
clts
lea
and
dec
fwait
and
mov
or
adc
sbb
sub
subb
ljmp
add
popf
ljmp
add
loopne
std
xor
cmp
cmp
or
xchg
adc
addr16
jno
stos
ljmp
mov
push
rclb
in
sub
stc
xchg
aas
adc
jne
pop
iret
dec
pop
std
mov
xor
xor
jle
movsl
jnp
add
arpl
dec
fisttps
cltd
push
and
add
pop
leave
push
jmp
xor
cmp
mov
aaa
mov
sbb
pop
std
icebp
fiadds
push
shrl
int
jb,pn
aad
or
stc
mov
xchg
jb
inc
sub
ret
frstor
sbb
xlat
cmp
mov
jno
push
and
fldcw
pop
dec
jge
mov
fs
jmp
in
cmp
jge
dec
popa
jg
cld
pusha
imul
roll
lahf
cmc
jae
inc
adc
in
cmp
inc
pop
and
sub
mov
cmc
mov
jbe
loop
cmp
test
iret
cld
jmp
cmp
movsl
stos
pop
cli
lock
sub
cmpsl
mov
adc
pop
cmp
dec
fcomps
popl
aad
addr16
das
pusha
sub
data16
nop
mov
push
enter
inc
lods
ret
xchg
jp
mov
sbb
in
dec
adc
push
js
mov
ret
dec
mov
jp
mov
movsl
insl
and
stos
add
dec
mov
imul
out
push
mov
sbb
mov
lret
jnp
pop
cmpsl
push
aad
jmp
int
outsl
push
movsb
xchg
pop
mov
std
and
mov
jne
xchg
mov
into
inc
fildl
rorl
push
ds
cmp
sbbb
xor
mov
je
lods
sarb
dec
xor
push
cmp
xchg
lahf
cmpsb
and
add
lds
imul
bnd
inc
loopne
pop
pop
sub
mov
aaa
inc
lock
loopne
test
mov
add
orb
adc
into
xor
es
adc
bound
aas
ljmp
jb
sub
popf
xchg
test
gs
pop
push
adcl
stos
enter
mov
pop
inc
insl
fidivl
sub
add
dec
loope
mov
shlb
mov
lcall
sbb
fldt
push
sti
sbb
xor
clc
and
push
lcall
mov
dec
jne
stc
loope
gs
pop
and
je
mov
pushf
fbld
xchg
cmp
xor
push
out
xorb
inc
mov
popa
mov
outsl
pop
aaa
cmpsb
ss
and
in
jnp
lods
jae
jno
cmp
sbb
mov
repnz
fidivrs
lret
mov
nop
inc
scas
mov
iret
fs
enter
mov
dec
ror
sti
and
dec
daa
mov
into
adc
movl
add
push
pop
ja
and
xor
test
cmpsb
mov
inc
ret
fdivrp
xorb
inc
adc
testl
jns
mov
push
jbe
add
nop
ss
jo
add
push
ljmp
imul
fs
dec
and
mov
push
inc
int
mov
jle
push
ds
cld
fwait
imul
ret
xchg
arpl
push
lock
ficomps
lret
in
fisubrs
fmuls
xchg
outsl
dec
push
push
stos
sub
mov
or
xor
cmc
test
or
lods
cmp
xchg
pop
int
push
jns
shlb
jl
or
in
cmp
jle
or
popf
pop
cmpsb
nop
es
orb
sub
fcmovne
xchg
ret
loopne
scas
mov
xchg
enter
pusha
push
fidivs
xchg
mov
lahf
call
test
fstpt
js
outsb
cmp
das
pop
test
cwtl
popf
mov
push
mov
mov
cmp
loope
fwait
xchg
iret
and
jb
insl
addr16
fcoml
ret
addr16
push
jb
hlt
cmp
cmp
ror
incl
gs
ja
inc
aaa
dec
shll
mov
pop
mov
jno
xor
or
cwtl
movsb
pop
adc
ficoml
cmpl
icebp
into
jo
ljmp
jmp
sub
out
lret
push
scas
push
mov
es
arpl
int3
inc
jp
daa
jg
and
jecxz
push
ja
mov
cltd
inc
cld
stos
enter
into
jno
shll
push
mov
pop
clc
in
lahf
lahf
pop
mov
add
pop
repnz
mov
jcxz
lret
scas
in
mov
filds
out
icebp
pop
dec
adc
jmp
jb
bound
pushf
imul
and
add
pop
dec
loopne
test
in
sbb
pop
outsb
pop
repnz
int
jg
lret
frstor
sarl
sub
movsb
or
and
adc
mov
xor
xchg
mov
mov
insb
sti
sub
cmovge
sbb
push
filds
and
gs
xchg
add
dec
mov
pop
mull
in
data16
jge
or
pop
shr
sub
mov
int
mov
cmp
xchg
mov
xor
push
jle
jae
jle
mov
adc
add
arpl
ss
sub
nop
and
mov
mov
sub
in
sbb
sbb
xlat
icebp
jge
xchg
xor
in
and
xchg
in
xor
stos
dec
push
dec
pop
or
loopne
ds
jl
repnz
shl
cli
adc
adc
in
movsl
sub
vunpcklps
dec
push
xor
push
inc
mul
push
dec
outsl
mov
or
inc
inc
lret
jl
push
jae
bnd
mov
sahf
test
fisubrl
lret
add
sbb
mov
lods
inc
inc
arpl
call
in
mov
negb
adc
cs
mov
out
ss
movsb
xchg
outsl
test
stos
jbe
add
push
gs
mov
addr16
movsl
or
adc
int
sub
fldenv
dec
lds
aaa
fsubs
shrb
sbb
out
pop
inc
aaa
pop
lahf
jno
pop
aad
push
push
lahf
hlt
jb
cs
push
outsb
cmp
scas
out
es
outsb
mov
jne
mov
pop
and
inc
stos
test
lret
addr16
icebp
mov
adc
nop
jecxz
or
test
pop
pushf
xchg
sub
out
cmp
in
adc
xor
push
jns
or
pushf
rcrl
cs
data16
sbb
cwtl
dec
sbb
adc
je
popa
add
xor
dec
cvtps2pi
hlt
stos
ret
mov
clc
push
jnp
mov
mov
and
add
orb
scas
test
imul
push
clc
inc
mov
push
ret
mov
imul
cmp
ret
sbb
sub
or
in
xor
in
push
lcall
lds
xchg
pusha
test
push
les
mov
sbb
xlat
jns
adc
adc
jge
jnp
notl
test
lahf
xchg
bound
popf
add
or
jbe
cmpsb
cmp
jbe
pop
and
xchg
testb
ret
pop
daa
inc
imul
xchg
add
shrb
xchg
imul
pop
mov
xor
leave
xchg
enter
hlt
and
ret
jp
jp
loope
clc
pop
fstpt
frstor
push
ljmp
jecxz
mull
push
lods
mov
shlb
mov
ja
cmp
aaa
lret
std
mov
and
push
push
das
mov
inc
sbb
mov
xchg
aaa
push
das
js
add
leave
aaa
cmp
shll
mov
and
fucomip
dec
sub
mov
jae
jns
jp
mov
push
imul
xchg
nop
mov
inc
xchg
sbb
clc
out
mov
fiadds
xlat
jle
pop
iret
jae
les
cmp
movsb
clc
cmp
mov
pop
lock
shlb
jg
jb
xor
fstpt
xor
rcrl
rorl
test
inc
mov
push
aam
fcomps
cmpsb
aam
popa
std
xlat
cmp
push
dec
repz
cmpb
dec
in
test
sbb
pusha
pop
pop
push
cmp
jns
mov
cs
sahf
and
pop
add
arpl
scas
clc
out
mov
hlt
add
movsl
fstp
dec
xor
xorl
out
cmp
les
insl
orb
cmp
or
int
and
xchg
pop
hlt
xchg
int3
push
dec
xchg
push
test
jmp
outsb
std
mov
loopne
jmp
push
sbb
ja
cmp
ficoml
jo
ljmp
lcall
adc
sbb
bound
fs
mov
sahf
jo
idivb
mov
push
int3
mov
shrb
in
jno
add
inc
push
fisubl
fcmovb
jecxz
mov
insl
imul
mov
sub
push
ficomps
mov
xor
mov
inc
ss
mov
lahf
xchg
or
call
sbb
cld
stos
pop
cmp
add
mov
push
jo
add
jg
sub
xor
mov
push
inc
in
and
icebp
sbb
xchg
popf
jecxz,pn
adc
pop
jp
sub
jmp
cmp
dec
xchg
mov
jg
int
lea
xor
cmp
pop
add
mov
nop
enter
out
cmp
ror
xchg
adc
xchg
sbb
jo
fldenv
insb
jge
and
js
mov
mov
sbb
dec
mov
push
inc
cwtl
outsb
lret
sbb
jge
cld
cli
loopne
loope
negb
insl
dec
lea
mov
aad
pop
push
mov
mov
out
ret
shrb
fs
out
push
aaa
and
add
lcall
or
inc
fildl
sarl
xchg
sbb
adc
and
mov
test
aam
fcompl
add
popf
mov
sub
sahf
bound
add
nop
es
in
loope
mov
push
pop
outsb
fcoms
xchg
add
pop
mov
scas
sub
xchg
leave
aam
push
lret
add
or
sub
sbb
cwtl
adc
cmc
jmp
aaa
dec
int
mov
popa
push
das
dec
mov
popf
and
insb
xor
pusha
xchg
jns
push
sub
cli
imul
stos
insb
sub
cmc
lds
sbb
cmp
push
pop
outsb
add
xor
push
out
imul
out
pop
xor
stc
or
stos
inc
xchg
or
out
mov
dec
pop
js
and
lock
loop,pn
jmp
jmp
test
insb
repnz
call
out
faddl
in
loop
xor
jp
jmp
pop
lods
jg
popf
jae
mov
ss
xchg
dec
push
pop
ror
ds
stos
jnp
cmp
adc
xor
pushf
movsl
aam
cli
fnstenv
inc
pushf
inc
fbstp
loopne
inc
loop
popf
out
xchg
add
negb
lret
dec
outsl
mov
add
gs
push
call
repz
or
adc
gs
loop
iret
out
push
or
adc
mov
sbb
in
daa
fdivr
mov
xchg
divl
push
ficoml
fucomi
push
mov
mov
push
aaa
dec
shll
loope
sub
loope
outsl
ror
movsb
inc
inc
mov
outsl
or
push
mov
xor
mov
lea
push
cmp
xorl
cld
clc
adc
ret
outsb
repz
xor
mov
and
outsb
stc
popf
push
daa
cmp
xor
push
push
enter
jp
sub
sub
ds
add
push
mov
stc
mov
dec
xchg
mov
mov
daa
add
xchg
push
fsubrl
popl
aaa
inc
popa
mov
xchg
outsl
loop
cmpb
insb
xchg
pop
iret
movsb
dec
mov
cmpsl
xchg
sbb
lahf
je
repz
pop
popa
push
lods
scas
or
add
bound
sbb
sub
jbe
or
xor
add
jns
and
pusha
xlat
fcmovnb
mov
mov
adc
pop
dec
popf
fsubr
test
mov
fcomps
mov
cmpsb
stos
cld
lock
idivl
mov
mov
mov
rcr
mov
jmp
push
fsubl
jg
sar
idivb
sti
inc
pop
out
pusha
mov
mov
imul
adc
and
mov
push
pop
into
mov
cltd
lock
mov
inc
imul
mov
pop
push
cmp
jno
movsl
jl
loopne
pop
or
cmp
mov
cld
imul
sbb
pushf
mov
shll
jge
test
adc
mov
and
mov
xchg
fstpl
in
or
sarb
jecxz
jno
in
out
test
push
mov
aad
out
adc
fs
inc
addr16
push
loop
cmp
repnz
lahf
mov
scas
xchg
mov
lret
xor
jb
and
in
jnp
out
add
cwtl
leave
popl
call
xchg
xor
out
jns
pop
xchg
mov
std
jg
pop
ja
stos
cmp
jnp
loop
fwait
arpl
jbe
sub
orl
and
imulb
jp
lahf
fs
pusha
movsb
xlat
adc
inc
mov
adc
aad
pop
jmp
fstps
insl
insb
cmpsb
sub
adcl
arpl
es
adc
or
fwait
sbb
push
xchg
pop
sbb
mov
std
mov
pusha
popf
jo
dec
inc
mov
cld
add
sub
pop
aad
inc
jg
scas
fldl
or
out
mov
daa
in
push
loope
loope
add
lds
sub
sbb
mov
addb
push
sub
das
sbbl
fwait
mov
jg
dec
xchg
test
jecxz
in
sbb
push
ss
add
push
xchg
mov
mov
dec
sub
pop
cmc
or
and
popa
popa
lea
insb
add
cmp
cmp
cld
xor
int3
xchg
or
gs
cmp
lods
out
xor
inc
mov
repz
jnp
dec
imul
stos
les
jne
mov
ficoms
jbe
aas
stos
not
test
scas
testb
push
lods
push
repz
push
enter
stos
lcall
push
sub
cmp
dec
jg
mov
xchg
test
mov
pop
out
cmp
in
je
lret
xchg
mov
inc
and
sbb
dec
and
test
inc
sarl
cmp
pop
mov
xor
fst
cmp
xchg
insl
in
mov
sbb
mov
jno
je
aas
imul
bound
mov
cmp
add
mov
xor
lods
pop
gs
sbb
icebp
add
mov
and
push
lahf
std
aaa
lods
dec
lods
and
sub
stos
rol
les
mov
sbb
inc
mov
mov
cmp
imulb
arpl
lahf
inc
xchg
mov
inc
sbb
jl
and
cld
add
ljmp
pop
int
mov
mov
test
xor
subl
test
sbb
sbb
dec
imul
dec
add
push
daa
lods
adc
xor
add
sbb
scas
stos
aas
dec
pop
xchg
xchg
scas
jecxz
mov
sub
out
pop
ss
testb
testb
mov
jno
insl
fimull
jno
jl
and
mov
lea
js
or
fsubrp
stc
js
les
and
mov
mov
push
movb
sub
inc
jno
push
les
add
sahf
sti
push
fs
mov
jo
call
push
sub
les
out
xlat
xchg
std
arpl
sub
std
ret
sub
negb
jno
mov
xchg
dec
xchg
push
repz
fidivrl
xchg
add
cmpsl
inc
xor
inc
fwait
jl
cwtl
jb
dec
ror
fsubs
pop
inc
fs
mov
or
les
rorl
out
push
xlat
das
push
sti
fs
xadd
mov
std
sub
test
cmp
lahf
sbb
outsb
ljmp
push
movsl
cmp
pop
loope
andl
adc
inc
test
movsb
mov
mov
jle
mov
jecxz
out
popf
push
test
fsubrp
push
les
dec
push
adc
sbb
adc
jge
loopne
stos
add
sbb
js
jge
push
mov
mov
and
rolb
mov
inc
mov
inc
push
jl
and
imul
loope
fidivl
mov
xor
test
and
sar
mov
int
mov
roll
pop
push
shll
lcall
push
mov
jmp
push
pop
inc
in
jmp
outsl
pop
mov
dec
lcall
pop
lds
aam
jno
fstpl
sbb
mov
jbe
xchg
sti
ret
mov
sub
adc
and
cld
adc
imul
or
mov
testl
push
adc
cmp
mov
fnstsw
add
in
sbb
lods
fadd
jp
pop
lret
mov
adc
fidivrl
imul
pop
repz
mov
sbb
stc
mov
mov
pop
outsl
push
add
pop
sbbb
or
leave
aas
test
insb
imul
test
inc
mov
nop
nop
adc
fstps
xchg
addb
or
dec
sbb
mov
popa
in
arpl
or
xor
mov
std
sub
fwait
cld
lret
scas
imul
mov
add
push
clc
je
popa
inc
arpl
subb
jno
rol
mov
test
shrl
mov
push
adcl
sbb
and
push
jge
mov
lret
push
or
inc
push
clc
ss
je
test
pop
cli
in
dec
test
cmpsb
inc
lea
fldenv
pop
popf
sub
scas
ficompl
les
jnp
fstps
mov
mov
xor
or
adc
out
lods
mov
inc
pop
outsb
dec
fidivs
frstor
lret
into
lcall
js
sub
mov
pop
incl
imul
cmpsb
mov
aam
out
sub
adcb
cmp
dec
jl
inc
mov
xor
fnsave
push
xor
add
stos
push
fstpt
mov
mov
movsb
aaa
arpl
repnz
xor
sbb
or
jp
hlt
xchg
xchg
aas
insl
gs
loope
scas
push
xchg
mov
push
fucomip
jno
enter
mov
lods
lahf
push
mov
mov
aaa
bound
es
mov
or
mov
cmp
lret
push
lcall
stos
dec
lcall
insb
dec
andb
sub
fstpt
icebp
idiv
es
stos
or
popf
pusha
cli
sub
mov
add
std
test
shrb
cld
shl
push
divb
add
ss
bound
ffree
jnp
lret
xor
and
test
loop
mov
cmp
sarb
in
shlb
jle
and
cmpsb
sbb
sub
test
mov
mov
lret
xor
rclb
cmp
lahf
jl
or
adc
jge
jo
xchg
xchg
mov
les
push
aad
inc
insb
mov
jnp
push
mov
and
loop
arpl
cmp
push
adc
test
fwait
sbbl
mov
js
mov
mov
or
rclb
mov
dec
adc
stos
out
cmp
mov
aad
rcll
xchg
test
cmpl
fwait
out
jbe
pop
xchg
adc
dec
mov
rorb
mov
pop
cmovnp
adc
sbb
and
and
movsb
mov
rol
shrl
ficoml
sub
loopne
sub
sbb
fcmove
clc
pop
fldt
enter
jns
mov
jmp
cmp
mov
push
insb
lods
aas
xchg
aas
push
fcoms
shrb
outsb
jns
inc
xchg
std
cmp
fistpll
pop
js
lret
stos
lea
inc
add
dec
into
dec
and
iret
add
aad
test
push
jns
inc
lds
daa
mov
mov
sbb
jecxz
dec
pushf
mov
nop
call
outsl
or
mov
in
pop
xor
sub
cwtl
mov
xchg
cmp
cli
jno
mov
lds
ljmp
push
jo
cld
andl
mov
sub
and
add
jnp
divl
add
inc
xchg
jecxz
dec
ds
stc
jns
jle
cmp
test
push
sbb
mov
mov
sti
out
jp
jle
imul
inc
ret
les
loope
shlb
and
shr
in
std
adc
hlt
push
pop
xchg
inc
fcmovbe
and
test
push
ret
ja
sub
jnp
cld
sbb
repz
lahf
aam
ret
mov
js
cld
fidivrs
pop
sub
cmpsb
pop
jl
mov
scas
push
lock
arpl
dec
lahf
cmpsl
out
loopne
sub
fwait
jns
movsl
mov
ret
test
out
pop
push
loopne
mov
mov
movsb
sub
or
and
lds
hlt
lods
leave
pop
pusha
sub
fldl
loopne
icebp
test
dec
sar
sub
aad
orb
pop
test
dec
cltd
adc
fldcw
pop
std
pop
popl
movsl
and
mov
or
out
mov
scas
inc
jbe
enter
in
xor
rorl
rcl
add
popf
shl
in
push
jp
or
mov
pop
mov
addr16
inc
aad
unpckhps
push
mov
scas
mov
mov
sub
adc
mov
test
jmp
iret
dec
dec
lret
or
inc
jl
sbb
xchg
fsub
push
add
lahf
addr16
dec
push
in
arpl
xchg
pop
lock
cltd
ret
add
jns
jne
mov
shll
push
add
push
test
test
or
add
cmp
dec
hlt
add
outsb
sbb
neg
or
addr16
fmull
stos
addr16
sbb
fisubrl
std
mov
test
jno
or
sbb
loop
mov
jne
popf
xchg
cld
jge
test
or
aad
jp
or
and
xor
mov
clc
add
sub
jecxz
sub
cmp
insb
into
js
stc
je
mov
hlt
pop
out
scas
movsl
loopne
adc
sbb
push
fs
rclb
or
imul
lret
lods
cmp
fdivrl
popf
shlb
sarl
ljmp
pop
mov
add
xor
repz
push
or
mov
sarl
in
dec
cmpsl
xchg
add
adc
fld
dec
adc
sti
insl
fs
mov
cmp
mov
iret
add
ret
pushl
adc
push
adc
out
inc
aas
fs
mov
mov
les
sub
std
jmp
fadd
aam
shll
add
mov
lcall
push
addb
subb
jno
push
inc
mov
xchg
shrb
or
test
and
aad
push
ret
popa
outsl
inc
xorb
push
movsb
pushf
mov
sbb
sbb
movsb
cs
mov
pop
lods
cmpsb
push
mov
adc
jb
cmpsb
lods
inc
or
lcall
dec
fisttpll
inc
pop
sbb
loope
shrl
nop
push
imul
ds
data16
sbb
adc
xchg
sbb
loope
hlt
add
das
add
mov
aam
mov
jo
and
loop
daa
add
pushf
sbb
cmpsb
xchg
in
push
push
mov
inc
jp
push
add
jns
xor
inc
lret
in
push
stc
sub
bnd
test
xlat
dec
lods
pop
out
arpl
inc
pop
std
xchg
call
js
daa
pop
jl
cmp
sbb
jg
stos
gs
ret
add
ss
pop
cmp
imul
push
jecxz
loopne
xchg
testb
sbb
push
jmp
cwtl
clc
je
inc
push
and
js
fdivl
outsl
push
loopne
pop
pushf
sub
cmp
mov
mov
adc
pushf
pop
pop
mov
cmp
xchg
pop
lods
sbb
lret
shrb
mov
sbb
adc
dec
lods
leave
mov
sub
mov
cmp
mov
aam
nop
into
dec
in
pop
adc
sub
sub
mov
lods
mov
sub
jno
mov
mov
push
sbb
mov
aaa
fadds
sbb
add
cmp
fdivrl
pop
adc
lea
xchg
xor
inc
cwtl
mov
inc
dec
fbstp
xchg
in
test
sbb
stos
pop
in
insb
pop
inc
jle
cwtl
int
test
sbb
add
mov
imul
fdivrs
dec
out
clc
push
add
xor
imul
cmp
mov
mov
adc
pop
cmp
lock
sub
add
sbb
mov
aam
pusha
sbb
das
dec
insb
daa
push
ljmp
cmp
and
in
push
mov
and
gs
sbb
shl
jle
leave
call
int3
outsl
dec
xor
pushf
adc
arpl
lods
nop
std
xor
clc
test
fs
lds
adcl
sbb
xchg
push
fwait
rcpps
mov
mov
pop
ficoml
pop
mov
lret
mov
cmovo
or
add
dec
lds
mov
cld
mov
lret
ja
mov
iret
sbb
lcall
inc
mov
das
mov
or
js
jg
cwtl
ljmp
sbb
inc
lret
xchg
xchg
jp
lcall
out
sub
lret
fidivrs
dec
jnp
je
in
in
add
add
or
imul
fldenv
jcxz
jnp
ret
test
sub
stos
hlt
mov
sbb
es
es
jbe
fimuls
jo
jg
xchg
rcll
out
nop
mov
cs
out
cmp
xor
xchg
aad
into
shrb
push
push
jno
out
test
jo
ss
xchg
xor
mov
pop
loop
repnz
and
dec
or
inc
or
jns
cmp
test
sahf
pop
add
mov
inc
repz
and
xchg
sub
andl
daa
mov
xor
push
aad
pop
mov
sbb
xor
jnp
sbb
cmc
mov
dec
add
rcrb
mov
pusha
xor
push
dec
and
out
pop
fwait
and
ror
cs
inc
sbb
push
fwait
dec
mov
add
add
or
std
aas
mov
nop
fst
jge
mov
cmp
and
scas
mov
in
mov
ror
clc
dec
cmp
pop
in
or
mov
xor
imul
es
mov
fildl
lock
insb
add
add
cli
inc
push
out
faddl
orl
mov
dec
out
and
data16
or
sbb
out
mov
jmp
xchg
loope
jae
test
inc
xor
dec
cltd
mov
cmp
cmc
lcall
push
cmpsl
addb
clc
mov
xchg
stc
mov
cli
mov
jge
pshufw
mov
jns
aad
push
outsb
call
cmp
imul
sbb
or
xor
push
adc
mov
inc
rcll
add
lahf
mov
test
cli
test
and
scas
lret
push
ja
mov
gs
xchg
dec
xor
shl
enter
shr
out
jl
sti
popf
dec
and
push
aas
push
add
mov
out
xor
rorl
pop
xor
into
enter
outsb
xchg
shll
and
mov
js
mov
mov
movsl
xchg
call
adc
je
push
inc
jo
lcall
xchg
xchg
cmc
push
je
mov
fnop
jl
dec
js
jge
sub
jb
cmpl
push
adcb
es
sarb
mov
push
lock
into
or
in
push
jae
mov
xlat
and
dec
imul
aad
dec
jnp
fmull
mov
and
push
fsts
inc
mov
xchg
xor
lods
inc
dec
cmp
mov
pop
fs
cmc
test
push
adc
push
pop
mov
xor
orb
out
xchg
stos
push
mov
addr16
lcall
int
jl
fs
adc
adc
sub
repnz
fstps
sub
mov
xor
push
pop
out
pop
jp
pop
push
sub
sub
fbstp
mov
and
movb
stos
fldl
add
or
addr16
xor
popa
mov
and
addr16
xor
paddb
icebp
mov
add
jge
push
sbb
testb
sbb
push
mov
jae
push
pusha
bnd
ja
fnstenv
sbb
rcll
js
jg
lcall
test
jne
jae
lods
cwtl
out
sbb
jge
mov
pop
fcmove
sbb
xchg
aam
mov
cmp
jnp
jb
adc
jne
inc
aam
jecxz
xor
push
xchg
loopne
mov
clc
jne
jle
mov
fs
orl
adc
xor
daa
mov
sub
fwait
out
jecxz
mov
push
pusha
push
sub
pop
dec
in
add
push
xchg
pushf
pop
jmp
enter
pop
mov
jle
test
ljmp
mov
dec
cli
adc
loopne
add
popf
test
push
xchg
lcall
fimuls
addr16
mov
and
mov
js
and
jecxz
gs
jmp
xlat
lea
sub
add
leave
out
jae
mov
sbb
je
mov
jecxz
push
jns
lcall
pop
lret
add
in
pop
mov
bnd
test
dec
movb
jns
stc
or
testl
xchg
xchg
movb
xchg
jle
lds
adc
into
inc
loopne
popa
or
jnp
gs
sub
xchg
idivl
mov
les
mov
add
shlb
aaa
pusha
or
pusha
cmpsl
out
fbld
test
push
dec
aaa
outsb
test
addr16
sti
addl
mov
cs
cmc
jle
int
cmp
dec
mov
ret
mov
insb
shl
push
jno
inc
lret
sahf
cmp
or
std
fs
bound
movl
inc
movsl
mov
push
popa
push
push
daa
xchg
and
es
sbb
push
pop
xchg
shl
push
xor
push
fstl
cltd
cmp
scas
sub
mov
pop
ss
push
ds
ret
jg
dec
inc
insl
or
and
scas
les
ljmp
repnz
daa
es
push
add
adcl
dec
jmp
push
pusha
cmpsl
adc
mul
lret
xchg
out
pop
aas
push
mov
push
mov
pop
inc
or
lcall
lcall
movsl
and
sbb
push
xchg
pop
cld
mov
xchg
add
imul
leave
xchg
int
inc
daa
xchg
mov
mov
or
movsb
cmpb
xchg
mov
sbb
fists
jae
fsubl
jl
jmp
es
inc
cmp
dec
insb
fsts
hlt
mov
inc
cmc
arpl
push
adc
stos
inc
pop
test
arpl
pop
or
test
sub
orl
outsl
push
sbb
fidivrl
in
pop
dec
mov
xchg
add
mov
dec
aad
mov
or
xchg
dec
xor
mov
xchg
popaw
dec
imul
mov
clc
jns
ja
stc
cwtl
cwtl
sbbl
test
pop
nop
lea
jmp
andl
js,pt
popa
xor
cmp
push
orl
push
fistl
cmpsb
mov
push
pop
sub
xor
jns
xor
pop
fstpt
out
pop
cmp
and
loopne
in
add
call
mov
scas
shl
inc
loop
rcl
and
decb
push
xchg
mul
push
adc
mov
mov
sub
push
xor
mov
cmp
vunpcklps
push
call
out
mov
nop
pop
pop
data16
fstp
clc
push
sbb
outsb
cld
mov
int3
jb
jns
test
lretw
cmp
gs
push
and
push
cli
jb
repnz
sbb
decl
add
mov
sbb
jne
mov
pop
dec
repnz
push
lock
arpl
mov
mov
repnz
lock
sub
pop
rorl
jle
mov
lcall
pop
stos
jo
in
add
data16
out
pushf
fcompl
into
jle
mov
pusha
clc
les
mov
xchg
sub
imul
cmp
aam
fbstp
or
and
push
dec
push
popf
push
adc
sub
cmp
test
or
out
jg
mov
lahf
xchg
mov
lods
push
mov
push
shll
push
ret
rcrb
mov
je
not
xor
lea
dec
or
sub
push
cmc
cli
pop
lret
sahf
mov
les
loopne
push
or
rolb
sub
adc
mov
adc
repz
scas
popf
mov
dec
outsl
loopne
divl
in
fsubl
sub
icebp
or
and
cmpsl
sbb
imul
xchg
pop
push
jmp
sub
cltd
mov
pop
repz
outsl
xchg
pop
movb
je
pop
fcmovbe
fcomps
adc
and
pop
int3
mov
or
lods
xlat
stos
dec
mov
xchg
fimuls
rcl
insl
mov
push
jge
dec
jle
in
insl
lods
cmp
popf
repnz
mov
subl
shlb
push
jnp
outsl
dec
inc
inc
loope
popa
and
repz
jp
push
push
jne
hlt
add
icebp
pop
mulb
push
aam
dec
dec
dec
mov
aad
in
mov
shlb
pop
sbb
shlb
lret
cld
imul
icebp
call
sbb
test
iret
jbe
push
aaa
sub
or
mov
dec
push
jns
pop
push
outsb
xchg
stc
ja
js
mov
bound
roll
mov
outsl
sbb
mov
lret
mov
sub
and
xor
push
push
in
test
and
pusha
xchg
sub
mov
cmpsl
loop
pop
and
push
dec
mov
rcr
xor
or
test
cmp
pop
testl
mov
sub
add
sbb
xorl
ficoml
stos
lds
push
mov
or
pop
lods
mov
pop
xorb
pop
or
pop
pushf
aad
mov
jl
push
rolb
imul
ja
push
inc
mov
adc
adc
cmp
int3
aam
mov
stos
sub
in
fidivrl
flds
dec
push
rcrl
fucom
mov
pop
and
in
sub
addr16
jecxz
jecxz
lahf
cmp
and
aad
and
je
add
pop
xor
xchg
push
pop
je
int
inc
and
cmpsl
xchg
push
sub
add
push
in
popa
mov
sbb
daa
ficompl
or
testb
push
and
and
ljmp
xor
dec
int3
mov
adc
inc
inc
loope
outsl
jp
sbb
xchg
pop
clc
enter
in
dec
ficomps
mov
das
jge
stos
popf
push
scas
xchg
adc
in
inc
sub
clc
push
jne
xchg
adc
pop
mov
fdivl
int
loop
into
push
cmp
xor
mov
ret
lahf
and
imul
adc
repnz
lock
pop
rorb
mov
repz
loopne
fiadds
pop
cmp
jge
test
aam
xor
scas
adc
hlt
fldcw
pop
push
and
fisubs
sbb
push
cld
adc
jae
dec
xchg
jp
gs
shrb
ja
dec
mov
sub
lcall
shr
js
jle
ljmp
loop
push
xchg
push
arpl
sbb
jb
cmp
mov
stos
leave
imul
call
loope
movsl
insl
lock
scas
outsb
cmp
jbe
dec
jmp
cmp
pop
jl
sbb
sub
cltd
push
aad
and
push
fiaddl
bound
jl
pop
pusha
sbb
shlb
inc
addr16
dec
push
mov
xor
sub
adc
pop
push
jns
aaa
xor
or
mov
mov
test
imul
fnsave
jns
or
push
outsl
div
push
push
xchg
adc
pop
jmp
cld
sub
lea
push
bnd
jge
ja
insl
push
sub
adc
stos
pop
push
adc
push
push
jne
test
in
mov
fs
sbb
dec
jp
jne
rcrb
mov
and
xchg
sub
popa
lods
dec
mov
daa
jne
fstps
mov
inc
sub
es
push
fisubs
lret
fmuls
fdiv
adc
std
daa
lcall
mov
loope
cli
jnp
mov
xorl
in
das
loopne
sti
lret
xchg
pop
pop
mov
inc
outsb
les
mov
or
outsb
movl
xchg
lds
icebp
loope
shlb
pop
in
test
mov
sbb
cmpl
fistpl
loope
push
jbe
mov
xor
rorb
popa
sti
xlat
pusha
and
sbb
cmpsb
cmp
sahf
or
inc
movsl
jae
pop
mov
push
das
aam
cmc
jne
pop
in
das
push
push
xor
mov
push
arpl
or
pop
mov
stos
out
arpl
lods
adc
les
sbb
xor
add
and
cmp
es
jae
sub
out
popa
xchg
jb
dec
sub
vmovapd
ret
std
lret
adc
jae
lock
fsubrl
pop
enter
adc
dec
cmp
ret
test
xchg
jo
jae
push
jecxz
jnp
xchg
pusha
ss
test
or
addb
push
dec
clc
mov
fsin
xchg
pusha
lock
daa
repnz
jae
cmp
out
dec
sbb
andl
in
popf
cmc
popf
iret
ja
outsl
jae
lea
lcall
out
das
add
mov
mov
adc
push
or
int
mov
jbe
aas
enter
mov
sbb
or
out
mov
int
stos
jge
pop
scas
xlat
nop
ljmp
mov
cmpsl
mov
mov
mov
nop
popa
mov
aas
test
mov
push
in
insb
xchg
mov
xchg
int3
jp
or
sub
inc
and
sub
loop
add
and
push
ja
scas
mov
push
shlb
xchg
dec
sahf
mov
into
loope
push
out
mov
mov
cmp
add
adc
adc
out
xor
adc
shrb
mov
stos
xchg
scas
mov
or
repnz
adc
jle
mov
sub
sbb
loopne
pop
incl
xor
jl
subl
in
subl
push
xor
sub
fcoml
jl
loope
adc
inc
sahf
in
test
mov
enter
rcrb
lcall
xor
jecxz
pop
cld
push
lea
sub
push
jnp
inc
xchg
adc
outsl
in
mov
mov
insb
sbbl
int3
and
inc
cmp
push
sahf
inc
orb
lret
mov
stc
mov
loopne
clc
jno
mov
pop
sahf
pop
mov
popa
aas
daa
mov
hlt
das
inc
sub
pop
fnstsw
mov
out
and
js
mull
data16
fstp
sbb
sub
pushf
pop
dec
jl
inc
mov
out
cs
and
mov
pop
or
stos
jne
jp
jnp
mov
js
push
mov
sbb
sub
es
adc
addr16
fstps
jg
enter
dec
xchg
xchg
stos
out
adc
cmp
test
call
mov
bnd
and
add
jle
lret
adc
cmp
mov
inc
pop
stos
jne
jns
ljmp
in
jne
push
jno
loop
push
cmc
sahf
mov
inc
pop
jnp
iret
or
cmp
mov
jp
dec
sbb
sbb
xor
sbb
sub
cmp
inc
inc
mov
roll
jle
jecxz
jle
jns
pusha
add
push
pop
push
push
jnp
mov
mov
mov
es
cli
lods
les
repnz
arpl
lret
insb
xchg
test
fstpt
push
adc
adc
daa
loope
sbb
aaa
imul
movsb
add
in
push
push
and
xlat
in
cmpxchg
jmp
fisttpl
aaa
mov
enter
or
mov
xchg
fnstsw
rclb
xchg
fldl
ss
fwait
test
or
mov
dec
xor
dec
lret
das
xchg
icebp
sahf
pushf
cmp
jns
mov
jl
mull
rol
xor
cld
movsw
scas
sbb
cmp
jno
out
inc
adc
fldl
pop
mov
adc
or
xchg
push
pop
mov
aam
lods
adc
aad
xchg
pushf
imul
sub
mov
xchg
std
scas
pop
push
mov
leave
add
ss
dec
mov
aas
imul
xor
mov
inc
loop
xchg
sahf
pop
adc
int3
mov
xlat
mov
jnp
imul
mov
inc
pop
test
mov
movsb
divps
test
arpl
pop
dec
mov
inc
int
in
cmpsl
jns
mov
mov
mov
pop
jle
inc
sbb
das
int
aam
mov
popf
in
jecxz
movsb
and
mov
sub
adc
sub
adc
pop
ljmp
add
vpcmov
aas
dec
daa
sahf
pop
cltd
dec
cs
iret
cmpsl
mov
mov
adc
adc
xor
in
lds
pusha
jns
lock
fistl
inc
pop
test
mov
aad
sub
fsubs
and
sub
or
jno
movsl
push
push
pop
sbb
xor
mov
stos
pop
les
cmc
inc
xorb
mov
xchg
pushl
cltd
lret
gs
inc
jmp
pop
icebp
mov
cmpsl
leave
repnz
sbb
sub
or
xchg
fimuls
xor
daa
jno
out
rorl
inc
mov
cmpsb
add
lahf
push
xchg
loope
repz
inc
xorb
adc
xchg
daa
stos
repz
aas
xchg
es
xlat
mov
sub
or
dec
mov
adc
out
xor
jo
or
cmpsb
jo
stc
inc
sbb
scas
in
mov
xor
mov
call
jl
push
sbb
divl
jno
repz
xchg
rcrl
dec
push
pop
mov
int3
repnz
imul
adc
adc
jg
xchg
mov
pop
bound
and
clc
mov
testb
outsl
dec
push
movsl
jl
popa
lret
dec
int3
pop
int
call
add
xorl
add
test
or
and
pushl
or
xor
test
add
int
cwtl
in
inc
imul
loop
bound
adc
pusha
bound
insl
sbb
sti
adc
clc
mov
mov
out
cmp
ficomps
dec
loopne
jl
xchg
in
mov
jp
pop
mulb
stos
jne
insl
lods
cmp
sahf
sub
je
ljmp
cmpsl
adc
lods
lcall
mov
pop
fmull
cs
jno
les
outsl
cmp
daa
xchg
clc
pop
adc
jmp
sub
ret
out
je
in
mov
mov
test
or
jmp
xor
sbb
and
hlt
insl
pop
into
mov
fnstsw
outsl
push
jbe
test
lahf
push
mov
push
add
shrl
dec
xlat
dec
stos
push
popf
aas
jmp
popf
mov
sub
dec
push
xchg
inc
adc
hlt
outsl
iret
push
adc
and
lahf
push
adc
lea
pop
dec
push
push
cmp
mov
jae
jbe
es
outsb
pop
in
dec
scas
xchg
movsb
int3
stos
repz
xchg
fucomip
insl
adcb
push
clc
cmpsl
in
push
cmp
out
in
dec
in
popf
mov
test
mov
jg
stos
imul
xchg
dec
leave
popa
ficompl
test
into
sbb
adc
sub
pop
cmc
inc
adc
sbb
sbb
data16
in
fwait
cmpl
imul
jg
xchg
inc
neg
out
nop
mov
test
les
push
cmpsb
mov
xchg
mov
or
insb
adc
mov
shrl
jne
icebp
pop
sarl
mov
fwait
add
jno
imul
imul
push
ficoml
adc
jmp
ljmp
jle
pop
jae
div
clc
hlt
insb
sar
pop
cmpb
std
and
sbb
push
jae
push
adc
jl
aad
test
stc
mov
inc
sti
lds
adc
and
roll
imul
scas
jne
cli
leave
ret
xchg
in
roll
push
push
fs
xor
sahf
pushw
mov
push
outsb
mov
loopne
data16
or
jmp
xchg
push
cwtl
mov
mov
push
call
inc
imul
enter
addr16
pop
das
test
ret
in
xchg
mov
or
and
pushf
adc
push
dec
leave
inc
adc
add
sbb
push
data16
or
inc
rcr
fistps
mov
mov
mov
pop
jnp
cmp
mov
cmpsb
fucom
sbb
lahf
ds
fcompl
enter
mov
mov
ficoml
int3
ret
pop
pushf
mov
iret
stos
mov
inc
pop
pop
cmp
mov
cld
push
xor
in
jecxz
in
sbb
jmp
daa
jecxz
mov
sbbl
cld
fisttpl
push
pop
jo
repz
mov
outsb
shrl
fisttpl
pop
sub
mov
mov
aad
jge
std
xor
imul
aad
push
sbb
inc
mov
jmp
es
add
dec
adc
sahf
sub
shll
dec
jge
sbb
mov
mov
mov
jne
divl
inc
stc
jnp
dec
or
mov
mov
mov
sub
adc
push
test
or
bound
adc
xchg
std
out
xchg
mov
add
aam
test
cltd
test
mov
out
ficomps
xor
cmpsl
cmpsl
cmp
mov
stos
aaa
ljmp
and
bound
mov
addr16
xchg
ret
or
je
pushf
call
dec
mov
ds
in
out
mov
shll
dec
fisubl
xchg
pushf
and
add
fbstp
mov
mov
dec
jg
iret
cmp
sarb
dec
xchg
mov
cltd
sbbb
xorb
push
and
icebp
and
and
call
lret
popa
test
lea
test
pop
sub
fnstcw
hlt
fcompl
in
inc
ficoms
leave
adc
hlt
les
fcoms
sahf
roll
fwait
xor
bound
sbb
fiadds
enter
xor
movsb
xorb
inc
adc
fs
ja
les
mov
add
sbb
or
nop
inc
mov
sbb
call
jae
inc
jo
add
xchg
mov
ljmp
ror
jno
cmpsb
mov
mov
dec
add
push
inc
push
stc
xor
xor
mov
and
hlt
std
out
jle
push
sbbb
pop
mov
dec
sbb
xchg
test
adc
inc
mov
and
or
int
xorl
jecxz
sbb
roll
push
sub
cmc
test
stc
lds
cmp
enter
push
dec
pop
repnz
xchg
es
adc
pop
push
inc
mov
fstl
cmpsb
rol
xchg
xor
rcrl
popa
sbb
pop
xor
cmp
inc
fmulp
push
xor
nop
pop
pop
jge
std
int3
scas
data16
mov
ljmp
sti
sbb
mov
scas
mov
cmc
push
std
inc
js
mov
test
cmp
sub
cmpb
daa
mov
fldcw
fcomi
mov
cmp
mov
aas
cmpb
or
aad
icebp
pop
jmp
fidivrl
xor
push
and
into
fs
xchg
add
leave
cmpsl
push
jns
insb
xchg
roll
mov
or
mov
push
pop
fimuls
popf
repnz
pop
je
fmulp
sbb
lods
mov
insl
xlat
rorl
repnz
pusha
mov
mov
std
push
loopne
hlt
mov
xor
jae
dec
cli
lock
loope
xchg
adc
cmp
jo
movsl
push
xor
sar
ret
mov
adc
lret
insb
mov
cmpsl
inc
nop
xor
stc
inc
xor
je
mov
dec
dec
mov
adc
mov
xor
xchg
adc
dec
inc
arpl
ss
sbb
xchg
scas
mov
mov
add
pop
xor
dec
dec
out
sti
loope
dec
out
push
or
fcoml
xlat
cwtl
pop
sahf
int
mov
shl
inc
xchg
aam
es
daa
insl
xchg
or
sbb
fnstsw
sbb
icebp
add
sub
pop
fs
loope
dec
cmc
cmp
jmp
jle
or
inc
push
lahf
loope
loope
cmpb
dec
push
xor
insl
cmpsl
xor
pusha
in
push
inc
pushf
fdivs
ja
cmp
test
std
pop
xor
out
dec
js
mov
mov
fdiv
adc
fbld
fwait
mov
sbb
std
fsubp
pop
ss
xchg
mov
cmpsl
loope
leave
std
ss
pushf
pop
jns
xor
sub
push
test
xchg
repnz
negl
stc
inc
jmp
out
repz
cmpsl
dec
jg
ja
out
out
mov
add
xor
insl
inc
aaa
sbb
sub
pop
xor
sbb
data16
sbb
sub
dec
sub
stc
call
out
or
lods
mov
repnz
sub
fadds
iret
add
sub
lds
fistl
in
inc
cltd
mov
sbb
enter
inc
inc
sub
add
mov
push
icebp
sub
pop
ljmp
or
rcr
mov
dec
out
cwtl
fistl
mov
pushf
incb
pop
mov
jecxz
addr16
scas
rclb
test
mov
xor
push
or
js
outsl
push
cld
inc
xlat
adc
subl
cmp
dec
xchg
das
dec
mov
imul
lea
cld
dec
negb
mov
adc
jecxz
adcl
jmp
mov
push
cmc
xchg
fs
ficoml
xchg
ss
fs
shl
cld
mov
or
pop
pop
sbb
rorl
mov
not
rclb
add
aaa
dec
mov
pop
sahf
dec
pop
jbe
adc
roll
mov
push
negl
adc
jnp
mov
or
loopne
dec
mov
testb
inc
sbb
int
enterw
aad
adc
and
inc
mov
outsb
add
adc
jnp
mov
inc
mov
pop
cli
or
test
loop
pushf
dec
cwtl
jbe
xchg
sub
test
mov
xor
movsb
dec
std
mov
daa
xor
mov
flds
pop
inc
movsb
test
inc
jge
into
test
fstps
fwait
aam
mov
icebp
cmp
pop
jmp
insb
cmp
fmull
stos
push
cmc
xchg
cmp
pop
fldenv
and
leave
dec
sbb
add
cli
and
call
or
sbb
pop
je
stos
cmp
push
mov
push
mov
loop
push
js
adc
popf
aaa
or
lcall
add
xchg
inc
imul
mov
and
mov
push
mov
fisubrs
jg
mov
push
call
scas
mov
jae
or
clc
in
mov
dec
divb
push
hlt
fimuls
xor
push
or
shll
andl
xlat
icebp
dec
or
xor
pop
lea
and
adc
clc
ret
pop
fstl
repz
sbb
mov
xchg
lahf
out
in
das
xchg
sahf
es
sahf
daa
add
aas
ljmp
out
cld
mov
mov
scas
sti
jae
pop
mov
in
mov
cwtl
lock
fs
xor
clc
push
mov
jp
xor
pop
call
movb
out
push
aam
js
out
cmc
cmp
test
inc
inc
sbb
subl
sbb
scas
cmpsl
inc
dec
jno
loopne
mov
jle
sub
mov
sahf
mov
or
xchg
xlat
pop
mov
jae
addl
cld
test
ror
aaa
lahf
dec
pop
popa
dec
cltd
out
xlat
jbe
lret
rol
dec
cld
imul
jp
push
sbb
mov
sub
cmpsb
xchg
mov
xchg
out
mov
mov
or
lcall
add
jge
xchg
push
mov
inc
push
stos
call
aaa
ljmp
dec
js
arpl
mov
inc
sub
test
adcb
imul
lods
xorl
sub
shrl
addb
cmpsb
orb
pop
jno
pop
mov
jmp
cmp
daa
imul
push
push
inc
mov
in
lock
lock
xor
jne
roll
jo
add
loope
inc
pop
mov
xchg
mov
sti
jno
shrl
mov
sub
mov
in
mov
xchg
jle
mov
add
jne
test
or
int3
adc
sti
push
add
int
mov
push
inc
xorl
xor
pop
push
mov
or
dec
jno
hlt
call
sub
in
hlt
xchg
scas
pop
ja
repnz
cmp
cmp
repz
mov
sub
in
or
dec
enter
sub
cmpsb
dec
mov
or
xor
jo
and
cwtl
pop
popa
mov
ja
fwait
xchg
lret
sbb
ljmp
xchg
sub
aam
js
fldt
push
or
daa
mov
or
mov
into
push
xchg
int
and
xchg
and
sub
jp
add
fisttps
jge
add
mov
popa
jl
cld
sti
add
push
js
neg
icebp
mov
or
repnz
jle
cmp
mov
dec
add
fsubrs
xor
sbb
inc
addr16
xchg
or
sti
stos
dec
ss
xchg
fwait
mov
or
adcb
pop
mov
or
inc
ror
aaa
ror
shrl
adc
push
into
out
jecxz
outsl
pop
test
mov
pusha
push
sub
mov
dec
or
push
iret
push
rcll
insl
adc
inc
dec
mov
icebp
in
xchg
or
dec
fwait
mov
mov
mov
xchg
xor
xchg
xchg
pusha
pop
lret
cmp
js
out
add
cmp
popa
nop
int
ret
xchg
scas
or
ss
leave
mov
enter
imul
cmp
xchg
scas
test
sahf
pusha
mov
xor
dec
inc
cmpsl
push
jle
nop
testb
fbld
stos
fmul
or
add
in
shlb
jnp
adc
clc
arpl
lret
outsl
jo
mov
ret
lea
inc
je
and
and
lahf
add
cmp
ret
mov
es
pop
jg
gs
push
pushf
xor
mov
inc
out
inc
outsb
fwait
adc
and
aad
push
lahf
xchg
jb
hlt
fs
xchg
bndstx
mov
fdivs
out
and
add
and
ret
icebp
sti
loop
xor
add
std
gs
xchg
mov
or
addr16
pop
mov
push
roll
stos
xchg
test
xbegin
fwait
xor
mov
add
fwait
nop
mov
xchg
cmpl
aaa
in
push
xchg
inc
outsl
mov
mov
mov
inc
mov
and
pop
sahf
xor
adc
stos
mov
add
leave
enter
ds
or
mov
leave
push
dec
les
inc
pushf
jbe
jo
pop
mov
cmp
jmp
add
xchg
jbe
mov
std
or
add
sbb
and
or
mov
pop
in
pop
test
aas
jp
adc
test
and
dec
mov
pusha
mov
xchg
imul
or
adc
dec
fidivrs
jno
mov
pop
adc
in
or
sub
lods
ficoms
mov
scas
cs
sub
inc
push
push
xchg
mov
jecxz
int
inc
jbe
or
mov
mov
xchg
pop
out
icebp
daa
imul
in
ds
xor
inc
daa
mov
movsb
inc
add
mov
and
sub
leave
adc
and
scas
mov
and
sahf
sub
jb
imul
inc
push
jb
subb
dec
test
daa
add
mov
aaa
jp
xor
repnz
or
int3
xor
loop
adc
xor
lret
xor
and
add
aad
in
gs
or
fs
aaa
xchg
lret
pop
or
out
adc
adc
aam
aam
sbb
orl
lods
test
movsl
push
mov
inc
in
jne
push
test
jno
lahf
repz
orb
or
or
out
fnstsw
lcall
cmpsb
push
in
imul
push
add
ljmp
test
cmp
jns
cmpsl
insl
add
shr
sbb
mov
repnz
push
add
xchg
xchg
hlt
sbb
dec
push
out
jae
cld
nop
pusha
loopne
mov
aad
roll
push
adc
aas
and
test
pushf
arpl
fidivl
loope
and
mov
pop
fisttps
daa
and
mov
jno
es
mov
jmp
lcall
mov
jne
lds
inc
mul
insl
popf
sub
and
inc
scas
xor
inc
movsl
stos
add
scas
cli
mov
push
or
mov
loopne
aam
in
in
xchg
push
jo
cmp
into
xor
xchg
imul
or
mov
jmp
mov
stc
jno
int3
mov
aad
inc
imul
daa
sub
xlat
aam
cli
rolw
stos
test
cld
jno
popf
iret
out
lret
add
icebp
js
xchg
fists
push
movsl
or
fsts
mov
in
xorl
cltd
fbld
das
cmp
sub
mov
orb
arpl
bound
mov
mov
and
nop
insb
nop
sub
adc
and
and
mov
psubsb
outsb
pusha
or
dec
push
sub
in
rol
arpl
or
in
pop
out
sarl
stos
sub
add
lock
push
cmp
xchg
dec
push
in
lock
cltd
arpl
push
mov
rcrl
sbb
popf
xchg
push
inc
iret
shll
inc
push
dec
add
out
jbe
popa
add
aad
inc
mov
and
inc
ss
flds
pop
push
push
push
mov
jge
jne
xor
jb
lret
mov
push
xchg
inc
mov
jle
adc
jnp
das
es
neg
mov
pop
adc
and
mov
xor
add
mov
addl
movsl
test
aaa
sub
mov
bound
fistl
add
jno
or
mov
sbb
mov
mov
xor
in
stc
imul
nop
adcb
cmpsl
imul
aas
xlat
daa
or
out
imul
lods
xor
xor
sub
sbb
dec
push
popf
pop
test
lcall
push
sbb
jle
jmp
jno
or
cmp
push
jns
mov
je
sarb
xorb
xchg
pop
inc
or
rorb
lret
xor
test
inc
orl
push
jge
loopne
mov
add
sbb
sbb
rcrl
jge
cwtl
mov
in
ljmp
mov
push
jns
xchg
int
popa
dec
cmp
out
mov
cltd
push
int
mov
mov
lds
add
movsl
test
imul
jmp
loopne
fcmove
movsb
lret
ficomps
repz
mov
xchg
inc
testl
jl
push
and
mov
cmp
mov
xchg
pop
xor
mov
pop
gs
dec
xchg
aas
pop
das
and
add
push
add
xchg
imul
xchg
mov
test
mov
std
and
insl
push
jp
cwtl
push
les
cmp
addr16
add
inc
dec
adc
test
dec
sub
loope
fcomps
add
popa
sahf
pop
pop
cmp
pushf
and
mov
out
mov
sbb
mov
les
clc
sbb
xor
mov
roll
mov
add
rorb
clc
call
jns
pop
sub
mov
and
insb
mov
bound
xor
xchg
mov
shl
lods
inc
jbe
jne
sub
mov
xor
call
subb
cmp
xchg
in
shll
and
dec
push
cmp
fcomip
push
mov
ja
insl
movsb
aas
jnp
sub
cmp
mov
or
lret
lret
and
xor
inc
push
mov
push
jl
push
mov
sub
leave
js
test
or
dec
int
adc
aaa
pop
dec
movmskps
xchg
mov
scas
out
outsb
sub
fildll
push
mov
inc
and
rol
out
pop
imul
jb
cmp
cmp
jnp
popf
adc
call
and
xlat
ljmp
inc
inc
pop
cli
or
mov
pop
rcll
test
adc
ret
jge
out
xor
push
add
sbb
cmp
dec
dec
lret
shl
or
ja
jmp
outsl
lret
pushf
cmpsb
fcomps
sbb
and
call
cs
dec
out
mov
jb
fcoml
xchg
push
std
popf
xlat
imul
icebp
cmpsl
xchg
sub
insl
push
lcall
aam
sub
inc
pop
mov
loop
movsb
fists
int
adc
jbe
outsb
mov
js
fcoml
cwtl
cmp
gs
push
in
popf
cmp
jmp
repz
cs
adc
lods
add
sbbb
mov
std
popf
ret
aaa
mov
loop
push
lock
cmc
les
push
add
xchg
pop
xchg
ja
imul
ss
cmp
ret
xor
pop
jb
negl
test
mov
in
out
push
fsubl
push
inc
jg
add
arpl
push
enter
push
mov
shrb
popl
mov
mov
scas
sarl
sub
inc
movsb
inc
and
jecxz
or
dec
add
cmp
repnz
jno
insl
arpl
dec
popf
add
rorl
lods
out
push
lods
fdivr
mov
out
xor
jle
dec
das
inc
jecxz
mov
div
mov
adc
cmp
cli
fnsave
sti
mov
sahf
xchg
and
andl
xchg
xor
rclb
iret
fdivl
aad
movsl
push
lods
dec
insb
and
mov
movsb
add
mov
stos
pop
std
add
arpl
dec
and
cwtl
sub
cmp
mov
lahf
inc
xor
add
aad
jns
test
test
mov
mov
insb
mov
xor
mov
sub
jp
pushf
jb
adc
inc
fistpll
push
sbb
xor
mov
sub
xchg
test
push
popa
mov
out
cmp
mov
xchg
dec
jecxz
std
or
xchg
out
push
push
adc
xchg
add
mull
inc
sbb
push
in
cmp
adc
mov
mov
adc
xchg
mov
mov
and
xchg
adc
inc
insb
loopne
lret
repnz
out
xchg
dec
shlb
and
pop
stos
pop
jo
cwtl
negl
dec
repnz
pop
data16
jae
pushf
test
lahf
outsl
pop
rcrl
fists
inc
sbb
jbe
pop
sti
in
test
sbb
sti
ja
out
xchg
out
add
pop
mov
push
bound
push
mov
jo
negl
inc
lods
and
pop
push
pop
imul
mov
rcll
leave
lods
add
xor
and
scas
or
shrb
xchg
mov
jmp
js,pn
xor
xchg
xchg
inc
mov
imull
dec
iret
fstpt
mov
mov
ds
xlat
lds
pop
fsubrl
cmc
mov
push
mov
jmp
push
mov
pop
mov
push
and
mov
or
leave
sbb
cld
sbb
lret
lcall
inc
push
xor
jl
cli
or
dec
popa
jmp
sbb
dec
dec
cmp
xchg
sub
icebp
fldt
mov
xchg
shl
aam
or
xor
pop
sub
and
or
cmp
fisubs
mov
mov
push
mov
js
outsl
or
mov
fdivrs
pop
push
es
addr16
ljmp
jmp
inc
push
push
leave
mov
pusha
scas
jl
mov
sbb
popf
movsl
cli
adc
cli
addr16
jge
sub
mov
hlt
cmp
pop
ss
ljmp
fs
mov
push
jb
and
sub
scas
jge
jne
popf
cli
push
sub
sub
lods
pop
jmp
pop
aad
add
jg
cmpsl
xor
cs
and
shl
stc
test
stos
dec
repz
mov
nop
jnp
xchg
call
insb
addr16
outsb
xorb
dec
add
sbb
xchg
add
in
scas
jecxz
pop
push
cmpsl
clc
pop
idiv
ds
iret
popa
test
add
xchg
int
cmpsb
xchg
adc
mov
das
bound
mov
into
stos
es
mov
and
mov
pop
mov
xchg
lds
call
cmp
xchg
sub
dec
out
imul
loopne
aam
dec
add
xchg
push
cld
mov
and
je
dec
push
aas
outsb
inc
cmp
push
fldcw
call
xor
xchg
adc
in
mov
push
push
xchg
jns
cmp
inc
xchg
mov
fs
dec
lcall
mov
lcall
jno
js
xor
dec
lock
push
movsb
pop
cmp
push
cmp
inc
scas
outsb
mov
je
sbb
jp
mov
mov
push
hlt
mov
lods
xor
xlat
mov
shr
fistl
pop
sub
and
fnstcw
out
add
fldl
lods
push
cmpsl
and
and
mov
xchg
jl
add
mov
push
dec
test
xor
inc
std
cltd
cmp
xchg
xchg
cmp
pop
dec
jno
add
cwtl
adc
sti
mov
xchg
aad
das
inc
popa
incl
push
outsb
add
add
movl
inc
xor
cli
shr
mov
arpl
scas
cmp
xchg
stos
jb
bound
clc
mov
sub
jl
mov
mov
out
mov
addr16
jne
xchg
pop
fwait
xchg
scas
out
adc
cmp
cltd
scas
ss
jo
xor
popa
cmp
fistl
lods
or
ja
out
push
fwait
arpl
out
popf
shl
mov
dec
and
xchg
insl
sbb
xchg
adc
lret
sbb
ret
rcr
pushl
inc
and
or
out
inc
lock
loop
xor
push
mov
addb
arpl
fldt
mov
shrl
cltd
jecxz
push
xlat
fwait
jmp
and
xor
lods
pop
mov
xchg
add
jle
in
add
jne
icebp
lods
insb
out
dec
jle
out
dec
lea
push
cli
shld
mov
cwtl
or
jl
sub
es
sub
mov
and
stos
jecxz
and
sub
call
xchg
mov
mov
outsb
repnz
sbb
rcr
enter
add
mov
push
mov
sub
cli
stc
lcall
dec
jnp
bound
or
ds
xchg
sub
lahf
lods
jno
push
int
repz
int3
add
pop
dec
sti
mov
jg
int
push
aad
call
cmp
and
lret
ds
dec
jg
pop
mov
lcall
push
pushf
addr16
xor
imul
sar
mov
lods
insl
inc
cmpsb
jne
loopne
push
mov
dec
mov
rcr
lea
push
cwtl
sub
int
push
loope
int3
in
stc
push
jns
cmpsl
sub
popf
in
cld
xchg
push
bound
xor
fs
pop
fdivs
cmp
inc
insl
pop
outsb
inc
std
scas
xlat
xchg
xchg
jle
mov
test
pop
cmp
dec
frstor
lds
push
sbb
push
dec
xchg
out
data16
dec
sbb
lret
mov
pop
sbb
pop
jnp
jnp
add
in
fidivrl
ret
inc
test
les
jge
sub
adc
inc
stos
or
sub
mov
and
fst
pop
test
gs
and
stc
xlat
nop
add
jle
rcrb
mov
cmp
inc
psllq
xchg
cmp
aad
inc
sub
movsb
xchg
lea
pop
popa
mov
xor
xor
pop
xchg
xchg
push
aas
insl
bound
stos
out
std
jne
or
mov
pop
xchg
incl
mov
outsb
mov
jl
fldenv
mov
inc
ja
imull
jne
mov
mov
in
pop
repnz
xchg
adc
fucomi
leave
xorb
xchg
je
test
mov
ja
push
push
popf
push
pop
xor
repnz
ror
adc
sub
arpl
idivb
shrl
es
or
dec
and
push
push
mov
cwtl
pop
pop
lods
pop
xor
and
mov
mov
testb
xlat
mov
ja
push
xor
pushf
dec
int3
aam
ret
pop
rcrl
rorb
orl
pop
ffreep
pop
xchg
mov
mov
add
adcl
neg
add
dec
xchg
int
add
nop
popa
adc
push
and
outsl
ret
pushf
inc
inc
push
nop
sub
or
mov
add
mov
inc
movl
sbb
pop
jne
cmp
scas
int
adc
pop
jns
push
mov
call
jae
lods
or
stos
lods
inc
inc
ret
mov
sbb
sti
push
clc
add
push
jl
out
fldt
gs
lods
fcompl
insb
scas
scas
xor
outsl
insb
push
mov
xchg
jg
jnp
loop
push
xchg
jns
inc
cmp
jae
loopne
push
xor
push
hlt
inc
push
and
xchg
mov
inc
inc
and
sbb
mov
and
mov
jo
or
cmp
xchg
out
sbb
out
jp
rorb
push
xor
xlat
xchg
data16
mov
imul
daa
push
xchg
xor
pop
mov
xchg
cmpsl
fucomi
push
xor
push
fstpl
int
and
cmc
inc
adc
add
fidivrs
or
fbstp
lods
pop
inc
icebp
jae
mov
push
lea
mov
lret
add
inc
sti
stos
arpl
cmc
xorl
xchg
clc
pop
cmp
adc
add
fists
jo
filds
jb
dec
sarb
xchg
outsl
add
mov
xchg
cmpb
outsl
inc
cmc
xor
mov
cmp
addr16
or
fisttps
rolb
loopne
inc
scas
adcb
rcrb
iret
or
inc
mov
or
inc
mov
and
fdivp
cmp
jae
jge
or
fwait
pop
or
cmpsb
mov
out
icebp
icebp
fs
adc
rorb
pop
push
jl
in
daa
lods
orl
aad
cmc
movsb
insb
cmp
dec
push
sti
sub
lret
ja
xor
sahf
aam
out
fists
scas
jns
sub
js
mov
sbb
pop
sbb
in
out
popf
mov
out
aam
mov
xchg
shl
push
lods
ficompl
in
imul
push
adc
sbb
dec
mov
mov
cltd
scas
xchg
cmp
fistpl
adc
fistpll
jns
jnp
sub
cmpsb
loop
stos
and
mov
jge
push
xchg
movsb
cld
push
sbb
xchg
popa
jecxz
nop
insl
jne
outsb
hlt
sub
cmp
xchg
lea
out
push
cmp
and
lds
ljmp
lock
addr16
mov
movsl
enter
or
xchg
inc
jno
push
mov
pop
xchg
loopne
cltd
leave
mov
test
cmpsb
jg
push
or
cli
jecxz
xchg
in
insb
es
or
mov
mov
inc
sar
add
shl
mov
ja
adcl
clc
and
cmpsl
in
lret
cmp
inc
jo
xchg
dec
inc
pushf
sbb
shrb
sub
cmpsb
sub
test
les
xchg
ss
pushf
jge
bound
jg
mov
push
mov
outsl
jne
leave
cmp
or
push
adc
adc
aad
pushf
xchg
lahf
xor
mov
or
lret
ficoms
adc
std
out
lea
jp
xor
shll
add
dec
aad
ret
sub
mov
mov
stos
mov
jns
sub
push
aam
pop
sub
mov
jle
xchg
push
scas
mov
mov
dec
hlt
inc
and
add
repnz
inc
stc
mov
mov
pop
and
xor
mov
or
mov
iret
xor
out
js
dec
mov
and
popa
mov
pop
xchg
or
inc
clc
jmp
lods
mov
loopne
xchg
sub
dec
jp
xor
mov
ljmp
addr16
test
mov
cmp
dec
sti
test
lods
mov
mov
mov
jns
cmp
add
mov
lcall
pop
xchg
jmp
jecxz
cli
leave
mov
adc
stc
dec
push
adc
jns
sub
xor
or
pusha
cltd
mov
daa
enter
aam
lahf
cmc
mov
and
jecxz
es
imul
rorb
jmp
aas
sbb
std
outsl
add
and
dec
xchg
hlt
pop
lret
mov
shl
stc
push
xor
test
cltd
punpcklbw
jbe
push
lea
pop
mov
sbb
pop
push
aas
rclb
test
or
mov
and
rcll
std
js
insl
inc
push
mov
fisubrl
dec
bound
cmpsb
test
xchg
add
scas
cmp
das
loope
or
push
lahf
inc
pushf
mov
lods
or
leave
insb
jb
loopne
pop
mov
dec
jo
sbb
lcall
and
repz
test
pop
push
fisubl
dec
add
dec
insl
jb
fs
mov
mov
std
shlb
loope
data16
pop
lret
gs
adcl
sub
xchg
insl
pusha
jl
and
scas
mov
inc
int3
mov
mov
adc
jae
out
mov
into
mov
xor
mov
adc
dec
mov
and
les
subl
or
das
aad
cmp
cwtl
push
lea
clc
in
scas
cs
js
hlt
je
scas
push
fsts
pop
sub
ds
pop
mov
inc
mov
sbb
xor
fimull
testb
push
push
jnp
pop
ljmp
mov
adc
imul
xlat
mov
and
out
leave
scas
popa
add
test
push
mov
mov
popf
imul
add
push
sbb
test
stos
rorl
jmp
mull
and
cmp
sub
or
push
ret
les
int
sbb
pop
les
hlt
pop
popa
mov
mov
dec
mov
outsl
pop
cmp
mov
pop
bound
scas
sub
and
clc
jns
fcomps
push
xor
out
or
dec
jb
jl
xor
outsb
popa
lahf
or
add
push
jb
or
inc
pop
push
jo
pushf
jo
mov
in
adc
hlt
iret
fsubr
xor
shl
sarl
xor
or
aas
sub
fmul
test
leave
hlt
jno
daa
rcrb
je
and
shlb
lret
ss
xchg
imul
inc
arpl
or
in
mov
icebp
cs
jecxz
inc
inc
adc
aam
fisttpll
pop
js
cmpb
enter
push
into
std
mov
mov
push
hlt
lret
pusha
xlat
xchg
pop
dec
push
dec
arpl
mov
jne
mov
cmc
sarl
dec
clc
or
xchg
cmp
inc
ja
cmp
jnp
in
cwtl
popf
arpl
or
out
pop
fsubrp
adc
ficomps
ret
ja
out
and
ljmp
mov
dec
bound
bound
xchg
pop
mov
mov
inc
add
mov
cmp
sti
enter
xor
dec
inc
xchg
mov
push
sub
sub
xor
shlb
addl
ja
repnz
xlat
lret
into
pop
jg
addb
imul
dec
stos
insl
and
cmpsl
mov
xchg
mov
inc
adcl
pop
es
ja
rclb
mov
stos
or
je
fdivrp
fists
in
sub
insl
inc
xchg
scas
jbe
adc
jp
shl
lahf
les
add
pop
mov
dec
outsb
mov
jbe
leave
jb
or
inc
loop
lock
sbbl
push
jae
jno
lods
les
mov
stos
stos
fimull
or
jge
scas
xor
lahf
nop
je
push
imul
push
cmp
cmp
test
xchg
mov
imul
test
rcll
js
es
mov
cs
loopne
adc
adc
out
fsubrl
mov
iret
sbb
pop
mov
aaa
cmp
cmp
adc
mov
ljmp
iret
sub
cwtl
mov
and
mov
cwtl
pushfw
adc
mov
dec
out
shrl
inc
lahf
hlt
mov
cmp
pop
popf
test
adc
jmp
inc
fs
mov
je
loopne
mov
or
outsl
dec
out
add
xor
loop
andl
movd
in
xchg
ljmp
in
rorb
cmc
mov
or
push
scas
mov
inc
int
sub
and
mov
sub
test
das
add
push
push
add
or
or
lea
adcb
rcll
out
push
insb
sbbb
xor
push
sarl
bound
adc
push
dec
xchg
pusha
enter
xchg
sbb
je
lret
stos
pop
sbb
xchg
shr
sub
lods
stos
addr16
nop
loopne
jp
flds
aam
addr16
pop
xor
fistps
mov
adc
xorl
movsb
cld
arpl
ret
dec
adc
adc
sbb
dec
aad
arpl
cltd
sub
outsb
bound
popf
repz
dec
and
iret
sbb
dec
mov
mov
fistl
push
mov
sbbb
cmp
mov
lahf
push
cmp
mov
dec
mov
inc
int3
pop
push
dec
aaa
insl
push
jecxz
es
mov
mov
jbe
shll
fsubrl
mov
pop
lds
sub
jecxz
inc
sub
pop
lock
push
sub
hlt
jp
dec
jns
xchg
mov
lea
cltd
bound
pusha
cmp
xor
xlat
repnz
xchg
xchg
popa
in
pop
pop
iret
mov
pop
sbb
ret
lcall
mov
mov
dec
insl
addr16
ret
xchg
cwtl
push
shlb
stos
inc
mov
pop
push
popf
mov
outsl
xor
mov
cwtl
les
ficomps
mov
cmp
stos
lahf
add
ja
cmpsb
and
pop
cwtl
leave
xor
mov
loop
lock
or
arpl
sbb
dec
in
inc
pop
in
mov
jp
rclb
andl
mov
push
in
push
adcb
and
leave
jp
and
cmpsl
push
adc
je
inc
xchg
stc
mov
shrl
jb
mov
sti
xlat
jmp
dec
pop
nop
scas
mov
fcmovnu
fldenv
pop
adcl
nop
or
sbb
jl
sbb
movsl
imul
mov
sarl
mov
sub
pop
xor
add
aam
insl
jo
jmp
push
hlt
mov
cmp
ret
push
enter
jae
adc
sbb
pop
adc
orl
test
stc
cltd
pop
lods
and
loop
movsb
push
push
sarb
mov
sbb
int
xchg
xchg
loop
cs
rolb
mov
insb
jg
rcrb
mov
push
cmp
or
fistpl
xchg
ja
pop
stos
push
and
lea
outsl
cmp
pusha
repz
shll
insb
xchg
fnop
jmp
cs
stc
out
xor
lock
aas
inc
adc
or
lock
shrl
xchg
rcll
test
xchg
xchg
push
aaa
mov
fxch
jae
pop
cmp
cwtl
xchg
dec
mov
pop
in
fisttpl
es
int3
mov
pop
cmpsl
iret
pop
adc
pop
pushf
test
stos
and
sbb
sbb
push
jmp
mov
mov
sarl
ja
insl
mov
daa
push
adc
and
into
int3
cltd
cmp
pop
inc
pop
mov
adc
mov
imul
pop
push
mov
sub
ja
pop
mov
and
inc
push
dec
lods
mov
jae
pop
push
popf
push
bnd
fs
out
sbb
mov
pop
arpl
popa
lcall
mov
inc
mov
inc
mov
fiaddl
pop
scas
dec
nop
push
fucomi
lods
loope
cs
pushf
pushf
mov
lret
sti
outsb
das
xchg
call
rorb
dec
inc
outsb
mov
jo
sar
fcmovu
pop
jge
sbb
adc
xchg
pop
xor
add
xor
dec
pushf
addb
jmp
mov
push
pop
sahf
je
ljmp
or
mov
dec
jp
jnp
and
test
rcrl
je
pushf
pop
fcmovnu
pushf
in
outsl
cmpsl
lar
pop
xor
jle
test
aas
cmp
clc
shrb
or
xchg
sub
mov
test
and
push
into
cli
xorl
push
inc
adc
sahf
lods
add
xchg
out
int
in
arpl
arpl
fcmovb
and
das
hlt
imul
stos
std
xchg
data16
out
or
scas
cmp
movsl
xlat
pop
and
into
fisttps
daa
in
ret
push
inc
sbb
lcall
cmp
das
dec
es
sbb
pop
ret
out
cmpsl
shl
push
adc
popf
test
sub
nop
mov
cltd
xchg
xchg
dec
popa
sbb
dec
loope
mov
imul
mov
test
jle
xchg
fiadds
hlt
cs
add
mov
xchg
into
push
out
js
shl
repz
scas
out
fwait
xlat
add
sbb
in
mov
jno
mov
pushf
fs
sub
int
or
repz
push
loop
lds
dec
bound
jno
scas
push
or
xchg
xchg
incb
cwtl
push
mov
xor
dec
dec
xor
jmp
das
nop
repz
mov
dec
sahf
pop
outsl
lock
cmp
cmpsl
ret
sub
movsb
fldcw
pop
jns
jbe
notb
xchg
or
jne
stos
adc
stc
ficoms
mov
jno
stos
add
js
jmp
sbb
ret
mov
inc
inc
jbe
rorl
repz
inc
loope
and
mov
mov
std
mov
xor
in
xchg
insb
mov
jecxz
mov
rolb
inc
cmp
add
cltd
insl
data16
inc
dec
sbb
xchg
mov
mov
cmp
inc
arpl
cmpsb
inc
int
mov
mov
or
pop
mov
jmp
add
hlt
jge
cli
pop
mov
mov
cmpsb
enter
adc
dec
ja
cwtl
mov
push
and
shlb
and
jmp
adc
jl
xchg
xchg
push
inc
jp
lods
inc
adc
xchg
sbb
test
push
subb
xchg
add
mov
xchg
repnz
xchg
sbb
mov
pop
cwtl
scas
cmp
jb
sbb
sti
lea
in
mov
jle
test
lds
out
cmp
sbb
std
xchg
adc
jmp
sbb
xchg
push
scas
insb
fistps
test
push
out
subl
cmp
or
or
adc
xor
fisubl
popf
jae
fcmovbe
in
out
test
sbbl
jmp
xchg
out
inc
xor
pop
sbbb
iret
adc
stos
push
mov
sbb
push
addr16
xchg
jmp
imul
fstl
incb
add
int
push
es
mov
stos
mov
ret
dec
add
jecxz
lock
stc
gs
inc
mov
loop
and
rclb
sbb
call
sub
push
insb
or
and
lods
sub
imul
sub
dec
popf
int
cmpl
mov
fsubrl
mov
jl
jb
xor
sub
push
shlb
es
lods
jl
shl
xchg
cmp
inc
stc
add
nop
repz
fld
test
xor
cmc
test
dec
sbb
inc
incb
fisubs
es
lods
adc
or
push
cmp
xchg
dec
and
int3
inc
xor
imull
sub
add
push
xor
popa
loopne
lcall
insb
add
loopne
sub
ljmp
clc
divb
lret
mov
outsl
shrb
xchg
mov
dec
inc
inc
jp
pop
shrl
das
jp
es
jge
jg
fwait
daa
pop
test
add
pmuludq
stos
rolb
dec
dec
dec
add
dec
jge
rcrl
inc
aad
je
je
and
push
aaa
push
or
add
or
mov
and
or
arpl
in
or
mov
testb
nop
test
jecxz
push
or
cltd
sub
and
sub
cmpb
mov
sti
js
testb
xchg
test
and
sahf
jg
mov
mov
jne
dec
xor
sbb
std
cmp
je
mov
pop
adc
repnz
popl
inc
not
add
adc
stc
xchg
add
pop
sbb
xor
in
xchg
and
mov
xchg
out
bound
call
inc
lock
mov
shrb
jmp
inc
bound
xlat
mov
arpl
inc
mov
fisubrl
data16
pushf
adc
fiaddl
and
cltd
mov
dec
push
jg
das
push
add
icebp
addr16
aam
and
lahf
mov
xor
enter
mov
sti
scas
xchg
and
xchg
sbb
call
arpl
push
lahf
fcom
xchg
sbb
out
ret
sub
andl
ds
loope
push
fildll
nop
movsl
lcall
dec
repz
aam
mov
push
leave
xchg
ficoml
leave
adc
sbb
jo
push
xor
jne
lods
fwait
cli
fs
ljmp
or
adc
xchg
ror
int
xchg
aad
adc
pop
ljmp
xor
add
or
add
insl
or
push
sbb
add
les
and
dec
mov
jle
add
mov
out
aas
shrb
xchg
push
sbb
je
pop
test
cmpsl
test
dec
xchg
xor
mov
push
adc
ja
push
inc
cmp
or
fwait
lret
sbb
std
es
popa
xchg
cpuid
mov
pushf
repnz
push
or
mov
in
xor
popf
xor
insl
mov
scas
push
or
leave
ljmp
popf
pop
add
jmp
mov
lock
pushf
fisubrl
loope
jg
in
lds
out
and
cmpsl
fisttpll
stc
imul
stos
lods
adc
inc
movsb
test
and
jne
fdivr
jb
or
cli
mov
push
mov
fcmovbe
vmovaps
sahf
outsb
jg
dec
stos
jl
pop
mov
les
fmull
pop
dec
mov
aam
xor
jg
fwait
shr
fimull
jmp
jnp
dec
fucomip
xchg
or
jnp
int
rcrb
mov
aaa
inc
push
leave
mov
adc
cmp
xchg
sub
enter
mov
cltd
mov
inc
in
outsb
movsb
push
repz
mov
lret
lea
mov
jns
cmp
out
into
inc
push
mov
push
xchg
push
test
fbld
imul
daa
stos
dec
mov
xchg
int3
gs
add
mov
incl
jmp
int3
and
shrb
mov
orb
push
mov
cmp
dec
mov
inc
out
sub
dec
and
xor
cmp
mov
into
xor
cmp
mov
cmp
arpl
sub
add
stc
cmp
add
inc
jno
push
jns
push
arpl
pop
inc
dec
xchg
sbb
lock
lea
xchg
lods
and
and
dec
cmp
js
ret
xchg
stos
popf
xchg
loope
fstps
xlat
sbb
ffree
inc
mov
jle
add
and
outsl
xchg
popa
std
out
inc
or
xor
inc
jne
mov
mov
cltd
inc
punpckldq
cmp
dec
int
imul
sub
daa
mov
js
add
jmp
pop
repz
jg
pop
mov
fdivp
js
mov
pop
inc
leave
in
cwtl
xchg
xchg
stc
dec
mov
xor
aad
sbb
xchg
cltd
ljmp
xor
sti
in
pop
push
cwtl
int
cs
lea
lahf
call
fwait
ret
movsl
xchg
add
mov
pop
cmpb
pop
dec
insb
or
inc
fldenv
mov
fsubrl
into
or
outsb
sbb
rcrl
xchg
add
loop
pop
fstps
pop
aas
adcl
xlat
fs
cli
nop
incl
add
sub
mov
fistpll
jmp
cmpsb
xchg
iret
aad
cmp
test
int3
dec
out
lods
aaa
aam
pop
dec
xor
mov
pop
mov
jnp
sbb
push
push
or
in
out
leave
loope
cmp
jb
incl
inc
call
xchg
fcomps
pop
test
lea
cld
pop
dec
or
xor
popf
xchg
fbstp
in
lea
clc
das
testl
out
mov
mov
es
imul
add
add
test
test
xorl
adc
sub
mov
pusha
out
adc
loop
rorl
scas
inc
mov
addb
pop
mov
mov
fs
lock
xchg
loop
shr
rcl
xchg
add
gs
fsubrl
jle
stos
or
push
lods
jbe
lods
enter
mov
jl
inc
push
aad
lret
pop
xchg
cmp
aam
jmp
mov
pop
pop
xor
inc
dec
or
mov
xor
sbb
shrl
sahf
xchg
mov
mov
ljmp
outsb
sub
sub
pop
out
mov
jae
add
adc
pop
fs
cmpsb
pop
inc
fwait
stos
sar
lret
mov
aam
in
loopne
fsubs
mov
jp
add
xchg
push
mov
popa
xor
cmp
adc
stc
cwtl
ror
mov
pop
mov
ret
inc
pop
mov
shll
test
push
mov
pop
mov
xchg
cmpsl
jmp
fidivl
xor
outsl
call
pop
sbb
mov
cmp
mov
popa
dec
pop
sub
or
dec
test
stos
or
jp
scas
mov
leave
movb
lahf
insb
out
inc
mov
xor
mov
pop
cmc
in
push
out
jecxz
dec
dec
rcr
inc
add
iret
push
in
and
push
and
dec
pop
adc
xchg
sbb
rolb
fdivrl
inc
sbb
pop
pop
pop
jg
jmp
iret
adcl
xlat
sbb
data16
jge
int3
inc
lret
mov
xor
imul
notb
push
fs
pop
dec
pop
cs
jns
lret
aam
lret
iret
stc
sti
cli
sub
cmpsb
sti
popa
scas
push
cmp
out
xor
mov
jne
repnz
dec
mov
ja
out
out
pop
pusha
and
cmp
loopne
data16
in
sbb
jbe
mov
orb
lret
faddp
sbb
test
sbb
mov
dec
mov
dec
ss
mov
lcall
outsb
or
fcoms
cmp
mov
lock
dec
mov
fwait
adc
mov
xchg
inc
adc
loop
addb
out
jbe
cmp
adc
jae
jnp
xor
scas
mov
out
dec
arpl
lahf
or
in
mov
loopne
sub
jecxz
mov
mov
test
enter
js
cld
jne
les
sbb
lahf
mov
stos
push
jb
adc
int3
mov
out
loopne
int
pop
xchg
orl
xchg
mov
adcl
jne
mov
add
sbbl
jge
cmp
fisttpll
fsts
outsb
push
add
sub
adc
pop
push
je
dec
gs
lock
jns
or
mov
addr16
xor
fsubrl
mov
add
mov
nop
repnz
xor
lods
fidivrl
push
ss
inc
xor
jge
cmp
aaa
mov
jae
mov
scas
and
out
popa
aad
push
rcrl
push
icebp
inc
outsl
mov
xor
out
aas
fbld
roll
in
xchg
jne
cmp
push
jo
xor
and
cmp
jns
and
out
sbb
sti
shlb
loope
out
andl
lods
fs
lcall
add
cmp
sub
jno
push
repz
repz
out
lods
cmc
push
popf
cmp
mov
aas
add
nop
add
movsb
jge
jp
rcrl
imull
dec
scas
push
mov
scas
pop
cs
bound
sbb
sub
shrl
mov
inc
xchg
xor
xchg
cwtl
inc
xchg
insb
sti
in
lret
pop
call
fstl
testb
inc
mov
lds
test
stos
jo
addr16
mov
hlt
sub
push
lahf
mov
imul
mov
sbb
rcll
iret
clc
mov
fcoml
mov
cmp
loopne
mov
popf
push
sbb
mov
pop
fisttpll
vpsraw
jge
lret
iret
ljmp
fdivl
xchg
les
stc
repnz
xor
xchg
cmp
pop
fcmove
addr16
dec
inc
xor
mov
jle
and
scas
sub
cmc
xchg
adc
fcompl
add
xchg
nop
mov
jne
xor
and
mov
lea
in
add
daa
enter
mov
mov
xor
pop
cmp
lea
je
pop
orb
lret
scas
mov
jmp
test
ret
cmp
pop
movsl
and
pop
mov
shlb
inc
call
mov
inc
fldcw
xchg
mov
sbb
movsl
iret
iret
xchg
pop
cmp
sub
ljmp
out
xlat
je
mov
push
enter
stos
xchg
pop
insb
nop
inc
or
mov
lods
adc
mov
xor
ret
cvtdq2ps
add
sbb
lret
sahf
or
dec
fisubs
xchg
nop
scas
xor
icebp
mov
les
les
movsb
pop
vmwrite
adc
mov
imulb
into
movsb
jl
lods
enter
int
push
imul
rclb
fisubl
sti
mov
ficoms
fsts
mov
dec
daa
sahf
lods
cmpsl
sbb
cmp
mov
lret
loope
ljmp
sti
daa
xor
inc
mov
mov
imul
ret
out
test
test
popl
inc
xor
xor
xor
insl
movsl
out
add
push
arpl
mov
imul
arpl
xor
movsb
sub
repnz
add
jecxz
jecxz
pop
push
push
es
pop
push
mov
pop
add
and
outsl
movsb
mov
adc
call
mov
popa
imul
nop
fyl2x
test
sar
mulb
mov
insb
movsl
cmc
lret
inc
rclb
xchg
sti
jne
xchg
into
je
mov
push
pop
push
gs
loope
xor
pop
cmp
jg
pop
test
divb
jnp
scas
ret
movb
jge
xchg
mov
stc
shl
fcoms
jno
cmp
dec
scas
insl
mov
and
pop
jns
cmp
gs
and
add
jl
adc
hlt
push
les
jg
test
mov
lret
add
inc
scas
ret
push
mov
inc
sti
xor
rcrb
mov
les
xchg
stos
test
outsl
mov
jle
or
mov
fwait
insl
adcl
xor
sbb
out
movb
inc
das
or
insb
ss
mov
mov
or
adc
or
rcrl
push
out
xchg
dec
loope
in
push
jns
xchg
jnp
sub
fstps
stc
dec
imul
jns
mov
pop
daa
sub
jge
cmc
cwtl
push
iret
ret
sbb
daa
leave
pop
hlt
sub
aam
sub
ljmp
inc
ja
push
push
xorb
wbinvd
pop
add
pop
sbb
cmc
inc
movsl
jae
push
data16
lret
ret
loope
cs
sarl
sub
or
inc
mov
push
hlt
or
sub
icebp
mov
dec
mov
xchg
mov
inc
and
cmp
loopne
push
xchg
bound
test
ret
dec
jle
sti
test
fs
xchg
iret
xchg
dec
xor
or
mov
jmp
mov
cmp
mov
push
in
adc
sub
mov
add
sbbl
mov
cmp
pop
mov
movsb
cmp
arpl
adc
jnp
std
jb
sbb
dec
out
mov
sbb
stc
adc
cli
int3
ljmp
sti
nop
out
pusha
dec
fimuls
das
adc
stos
gs
into
sbb
sub
lahf
in
ja
pop
dec
dec
xor
aaa
lock
dec
imul
nop
fwait
and
js
shrb
mov
xchg
aam
adc
rol
mov
xor
jecxz
repnz
std
scas
jge
pop
fbstp
dec
scas
sub
pusha
lcall
mov
mov
adc
addb
mov
rolb
lret
mov
ja
mov
add
cmpsl
addr16
xor
mov
dec
cmp
pop
pop
test
adc
mov
aaa
mov
or
mov
mov
xchg
adc
bound
notl
cli
cmp
lret
and
sub
scas
std
pop
bound
xchg
into
pop
add
sbb
scas
or
lret
mov
mov
loope
std
sarb
lret
sub
jns
or
gs
sub
cmp
aas
inc
stos
daa
inc
nop
mov
mov
mov
push
dec
out
or
std
lahf
xchg
dec
lods
lret
leave
xor
outsl
adc
imul
add
mov
adc
inc
lea
xor
mov
adc
stc
lods
rcrb
cmp
movsb
or
and
pop
cld
sbb
ret
pop
or
addr16
addr16
jmp
xor
arpl
push
add
sub
cwtl
xchg
iret
inc
dec
jge
pop
pop
gs
add
out
pop
aam
inc
mov
xchg
fisttpll
fstl
cmp
les
clc
mov
lock
fwait
js
out
adc
ret
jge
std
scas
jb
mov
add
cmp
add
xor
imul
js
out
jnp
sub
shrl
dec
mov
xchg
dec
frstor
sbb
mov
lock
cmpl
in
fists
gs
mov
xor
repnz
push
arpl
mov
or
outsl
ss
imull
rorb
mov
mov
mov
ds
push
lret
cld
jnp
cmp
lret
imul
jne
xorl
jne
sarb
sub
inc
jae
mov
jb
popf
pop
cli
sbbb
add
in
in
in
or
std
fidivs
stos
lods
pop
popa
sahf
sub
out
sub
jno
fsubrs
call
scas
daa
cltd
in
and
jnp
ja
cmpsb
lock
ljmp
lret
ret
or
xor
test
dec
sarb
push
mov
cmp
mov
aas
or
stc
xor
and
pop
lds
jmp
and
js
insl
sub
pop
call
cmp
and
xchg
push
and
repnz
sub
sub
sbb
nop
mov
aaa
out
dec
sahf
mov
mov
jnp
xor
push
xchg
mov
cmpsl
andb
mov
jmp
lods
lock
in
nop
jmp
shll
movsb
leave
inc
clc
mov
fdivrs
icebp
hlt
fs
inc
rorl
xchg
add
mov
or
adc
push
jo
into
cmp
test
test
call
cltd
fstps
loope
scas
fldpi
cld
and
icebp
into
popa
jecxz
sbb
inc
adc
jl
lock
mov
imul
sbb
jl
mov
xchg
xchg
xchg
lea
adc
jae
mov
mov
outsb
sarb
pop
push
loope
xor
mov
inc
mov
mov
inc
xor
vcvttsd2si
and
pop
je
dec
jmp
sbb
sub
repz
jno
push
xlat
ja
jmp
xchg
stos
push
fucomip
fcmovnu
stc
pushf
leave
fcmovnu
pushf
mov
mov
aam
add
aam
icebp
out
hlt
cmpsb
pop
mov
mov
in
xchg
sbb
jle
jb
pop
jge
inc
movsl
jmp
xorb
cwtl
push
shll
mov
push
lret
addr16
cmp
or
es
fs
add
mov
roll
adc
dec
icebp
movsl
or
stc
lods
outsb
inc
insb
xor
int
xchg
in
add
loop
into
jbe
mov
mov
pop
out
jns
inc
sar
jmp
aaa
mulb
les
jp
push
out
mov
movsl
fs
push
out
lret
out
mov
push
sub
iret
cld
pop
shlb
jg
hlt
dec
out
lds
dec
sbb
pop
dec
aad
cltd
pop
stc
mov
push
test
sbb
cmp
movsl
lods
push
xchg
test
dec
jecxz
jmp
pop
pop
jle
xchg
cmpsb
cld
sti
xor
in
ja
insb
scas
les
loope
push
outsb
sub
inc
fcmovnbe
lods
inc
cmp
inc
push
hlt
lea
push
fldl
push
idiv
fisubl
dec
imul
cmp
jle
in
frstor
or
out
rclb
pop
dec
call
stos
lret
pusha
shl
add
das
fcomps
xchg
or
addl
mov
dec
sti
cmpsl
pop
mov
and
and
push
lea
add
ljmp
subb
sbb
pop
cld
movsl
xchg
sbb
mov
inc
cmpsl
dec
xchg
mov
jns
cmp
lret
or
jbe
dec
pop
lret
xor
mov
xor
insb
sub
loop
xor
cmp
cmp
lock
pop
out
cmp
push
loope
adc
dec
ss
out
ds
or
scas
imul
cmp
out
jns
in
shll
adc
dec
arpl
push
push
imul
jmp
pop
outsb
sub
fisttpl
jno
rorl
je
xchg
push
inc
jmp
cmc
mov
dec
jle
inc
stos
xchg
lds
inc
dec
test
dec
ret
ja
jne
aas
xlat
sbb
push
btcl
dec
or
popf
pop
or
loope
pop
lock
in
dec
rcr
jne
out
dec
arpl
mov
pop
add
cmpl
loopne
and
test
out
push
das
jnp
pop
fisubrl
ja
mov
mov
std
adc
jge
adc
sub
hlt
pushf
mov
fs
push
arpl
shll
jo
cmpsl
ret
clc
add
fcoml
ss
aad
pop
adc
jg
or
mov
inc
xor
rclb
testb
mov
daa
jns
in
xlat
ficoml
mov
dec
xor
and
lret
xor
xchg
test
out
pushf
movsb
fdivr
loopne
mov
jecxz
insl
rcrl
pop
jno
push
lds
dec
mov
notl
divb
enter
cltd
fmuls
mov
adc
or
movsb
test
test
pop
ss
gs
or
data16
lret
call
sub
sti
mov
fnsave
ficompl
jne,pn
xchg
std
andb
dec
or
stos
jle
inc
das
push
ret
dec
sbb
stos
jge
adc
sbb
hlt
pushf
mov
into
lahf
adc
fwait
mov
stos
sub
mov
loop
mov
cmc
dec
lret
xlat
and
cli
inc
loope
mov
test
adc
rcr
pop
jmp
and
insb
xor
mov
pop
jmp
xor
jle
ljmp
xchg
adc
sbb
adc
push
hlt
mov
lds
lahf
movsb
les
jg
and
fst
faddl
addr16
inc
jo
jl
push
movsl
out
or
push
ljmp
and
pop
aad
outsb
imul
mov
sub
jbe
inc
cmp
dec
out
xor
iret
xchg
mov
or
fildll
pop
cmp
xchg
add
iret
or
cli
das
jmp
push
fisttpll
js
sub
sarb
in
inc
into
lahf
sbb
ret
stos
cld
jl
mov
add
cs
xlat
pop
pop
sbb
fidivs
adc
mov
icebp
sub
dec
into
aas
sti
mov
xchg
aam
data16
jp
mov
mov
mov
clc
add
notl
mov
xchg
jecxz
into
and
push
fidivs
shll
xor
xchg
mov
adc
dec
gs
xchg
cmp
push
shlb
sbb
stc
jge
xor
shrb
dec
in
sub
pop
xchg
cmp
lcall
mov
adc
sbb
fisubrs
xchg
mov
cmpsb
mov
insl
jmp
mov
jmp
es
dec
data16
dec
mov
cmp
or
add
dec
sbb
iret
imul
and
inc
push
arpl
les
xor
cwtl
dec
adc
xlat
or
ljmp
xor
cmp
add
daa
pushf
dec
jl
xorl
ljmp
and
loope
sbb
sbb
movsb
mov
scas
mov
lret
xlat
ss
sbb
sbb
add
xor
jnp
call
mov
mov
inc
out
mov
mov
jg
inc
pushf
in
psraw
push
jle
add
ljmp
rolb
push
inc
mov
jns
cmpsl
repnz
or
pop
lods
or
ret
inc
fisubl
cmp
xchg
jge
sub
sub
leave
xchg
sahf
addr16
mov
jae
je
pop
mov
jb
xchg
repz
shlb
filds
xchg
aam
and
xlat
iret
ds
cmpsl
pop
push
and
addl
jg
inc
addr16
push
inc
fildll
imul
inc
jae
aas
add
popa
or
cs
fsubrl
push
xchg
push
orl
mov
mov
sahf
out
pop
xor
imul
ficomps
add
dec
jae
dec
addl
nop
int
jne
bound
push
jne
xor
and
jle
and
int3
lahf
cmp
hlt
xor
stc
int3
lcall
insl
adc
mov
lods
add
xchg
sti
pop
popaw
or
orb
mov
lret
out
add
add
jecxz
mov
jno
cld
inc
sub
mov
inc
dec
mov
jb
daa
add
sbb
subb
cvtps2pi
or
jo
lds
nop
xchg
js
jno
add
push
dec
bound
sahf
jne
cs
xchg
arpl
jmp
lgs
rcrb
movsl
lret
out
mov
xchg
dec
mov
dec
arpl
xor
lods
iret
mov
sbb
push
xchg
push
inc
mov
add
test
push
shll
mov
and
out
mov
fcmovne
mov
push
les
aaa
lods
loop
sub
xor
adc
xchg
out
loopne
mov
pop
in
push
iret
add
js
icebp
push
pop
aad
aas
cmp
and
andl
inc
jl
jb
sbb
imul
fucomip
in
sub
push
rolb
bound
test
or
dec
sbb
push
jbe
mov
adcb
in
or
push
lods
mov
mov
push
mov
lock
push
fcomps
pushf
enter
sbb
test
cmp
inc
jne
mov
add
lret
int
sbb
push
cld
leave
cmc
sbb
inc
in
mov
outsb
mov
xor
mov
cmpsb
add
test
dec
cmp
jp
lods
sbb
jecxz
in
dec
shll
insb
or
mov
push
xchg
adc
leave
jle
movsb
lds
aas
shlb
or
into
imul
dec
jae
add
inc
cmp
sbb
stos
mov
inc
xchg
movsl
lahf
add
call
sbb
rcrl
in
lret
sub
in
push
movl
jp
cmp
push
jecxz
lods
stos
rcr
in
into
mov
cs
mov
lcall
repz
nop
dec
popa
imul
dec
sti
out
mov
pop
mov
xchg
pop
or
lock
jns
mov
lahf
sub
test
cmc
xchg
pop
outsb
fsubr
insl
add
sbb
out
sbb
adc
sub
ja
addb
cmp
mov
fisttpl
or
ds
addr16
fdivs
push
mov
daa
out
cmp
lods
inc
mov
gs
sub
stos
mov
push
sbb
cmp
mov
jo
jl
int
inc
adc
push
dec
or
jge
pop
mov
stc
jp
adcl
decb
and
dec
adc
jle
test
push
rolb
clc
dec
sbb
fwait
pop
xorl
push
jle
dec
int3
ljmp
pop
imul
sbb
add
dec
les
jge
push
cmpsb
or
fnsetpm(287
sub
jae
popf
cmp
subl
or
xchg
addr16
cmp
cld
push
xchg
mov
cmp
xor
adc
jge
or
and
ret
sub
shll
push
movsb
pop
ret
rcl
sbbb
inc
cwtl
hlt
pop
insl
mov
mov
mov
or
adc
inc
rcr
mov
lcall
cmpsl
into
or
adc
adcl
lods
sbb
mov
cs
mov
mov
aas
pop
or
test
xchg
push
jbe
sub
pop
mov
sub
sahf
test
adc
adc
loop
mov
fs
negw
sbb
cwtl
aas
mov
push
xorb
or
xor
add
mov
lcall
jl
xchg
push
sahf
pop
mov
xor
fistl
xor
fldcw
pop
mov
movsb
test
push
rclb
sahf
daa
jecxz
ja
adc
iret
ja
cmc
adc
enter
add
daa
js
jno
jle
cs
notb
sbb
fidivl
and
mov
test
call
fcmovnu
add
xchg
inc
cmp
hlt
cltd
stc
xor
out
mov
stos
xchg
cmpsb
xchg
push
icebp
pop
xchg
popf
add
pop
adc
add
mov
cmpsb
je
rcrl
or
jnp
popf
cld
add
outsb
decb
and
imul
mov
adc
xchg
push
je
inc
lock
imul
sti
sbb
xlat
pop
add
adc
movsb
mov
aas
push
mov
cmp
jmp
jbe,pt
cmpsl
sub
rcll
int3
cmc
cwtl
cmp
jns
rorl
xor
aam
mov
mov
sbb
inc
mov
pop
cmp
cmpsb
mov
or
stos
lahf
xor
lods
inc
lods
pop
or
mov
push
lods
shl
ror
es
jb
clc
cmp
jb
jp
add
imul
jl
push
insl
in
subb
aam
ret
mov
mov
jo
xor
sbb
dec
test
lcall
pop
shll
fstp
in
cmp
cmp
mov
inc
and
cld
fcompl
daa
dec
xchg
rcl
mov
mov
cwtl
and
and
ss
inc
lock
adc
sub
lock
fimull
xor
xchg
andb
sub
xchg
push
sbb
pusha
out
push
ror
inc
jnp
iret
inc
lods
inc
add
adc
loop
mov
sub
push
add
aam
dec
push
cwtl
incb
jne
aaa
mov
cmp
stc
out
mov
mov
or
push
test
cld
add
cltd
pop
iret
fstpl
xor
xor
sbb
notb
lret
xchg
mov
pop
add
adc
fwait
mov
add
ss
and
sbb
jmp
sub
push
add
mov
dec
mov
cld
and
lahf
mov
fs
lret
push
push
insl
jge
cld
call
cmpsb
mov
and
or
cmp
jp
mov
loop
sbb
das
sub
cmp
cmp
mov
test
adc
push
xor
adc
sbb
sbb
mov
cmp
addr16
out
fisttpll
fsub
cld
aad
out
mov
xor
dec
out
jno
je
jnp
cld
cmp
repz
popa
jg
add
mov
mov
add
addb
xor
lds
xchg
jno
xchg
fdivrs
push
ja
mov
pushf
int3
movsb
ss
fsubrs
sub
mov
fdivs
popf
push
adc
fisubrl
pop
icebp
push
orb
jb
sbb
out
cli
dec
cmpsl
xchg
mov
xchg
mov
cmp
pop
fmuls
mov
test
lods
movsl
sbb
push
inc
xor
push
loopne
sub
test
mov
pushf
mov
add
test
mov
sbbb
mov
cmp
std
cmp
jnp
dec
in
or
enter
mov
nop
xor
test
push
shrb
mov
cld
jge
inc
icebp
mov
ja
dec
xor
ds
cmp
fidivl
or
adc
add
add
jl
faddp
push
inc
mov
dec
mov
enter
lcall
outsb
mov
fmuls
adc
test
mov
cld
sub
xchg
popf
sahf
pop
push
cmpsb
inc
jae
jp
jmp
cmpsl
inc
mov
pop
sbb
stc
add
les
xchg
fucomip
leave
test
xchg
jo
push
out
xor
mov
movsl
sarb
and
fistpl
and
les
mov
xor
pop
lds
idiv
scas
jo
xchg
stos
mov
mov
nop
inc
add
aaa
repnz
add
enter
mov
sub
jnp
lods
sub
cmp
pusha
xor
fmul
call
xor
mov
xlat
movsl
int
bnd
and
add
lods
arpl
push
js
and
addr16
mov
inc
adc
mov
icebp
aaa
rorl
sahf
mov
not
or
cmp
popf
pop
or
das
lret
push
dec
push
into
out
gs
push
loopne
push
and
mov
jnp
insl
pop
fdiv
sub
cmp
mov
scas
insl
push
movsl
sbb
push
aaa
loopne
and
lods
and
cmp
mov
std
mov
mov
and
xchg
inc
cs
xor
cmp
insb
mov
je
jmp
inc
xchg
cmp
cmc
or
pushf
insb
push
divb
pusha
cmpsb
sub
push
orb
push
bound
in
adc
nop
mov
sub
in
lods
push
cmpl
test
jg
dec
cmp
sub
xor
mov
xor
aaa
or
stos
adc
ljmp
push
adc
divb
fdiv
imul
mov
mov
hlt
lds
jmp
inc
mov
mov
xor
sahf
pop
pop
push
mov
push
inc
movsl
mov
icebp
or
lret
fcomps
repnz
push
pop
scas
ret
std
dec
sti
inc
pop
jo
cmpsl
mov
lret
cld
xchg
clc
jl
xchg
xchg
repz
dec
rolb
sbb
shrb
or
sbb
out
push
fcmovnbe
rcr
loopne
cmp
adc
ret
popf
jbe
cli
shrl
inc
stos
mov
pushf
fld
xor
in
popf
jns
es
or
xchg
mov
movsl
pop
xorl
add
jno
jmp
mov
lock
lcall
inc
sub
jbe
jbe
dec
xor
sub
cltd
and
dec
jg
aad
push
cmpsl
add
jmp
enter
mov
bound
cmpsl
aam
or
pop
scas
js
add
clc
mov
ret
push
push
mov
cmp
jae
test
imull
and
sub
add
movsb
mov
cmp
dec
addr16
jno
jns
cmp
adc
iret
dec
xchg
pop
mov
out
orb
test
lods
and
out
dec
mov
fstpl
mov
and
and
pop
cmpl
insl
sbbl
je
xchg
shll
add
xor
sarb
sub
or
hlt
ret
gs
xor
inc
cmp
sub
pushf
addr16
sti
or
into
cmp
mov
push
xor
mov
mov
push
pop
xor
cmc
inc
jbe
jecxz
push
push
jge
ljmp
sbb
xor
pop
push
mov
and
xchg
jg
mov
int3
pop
stos
mov
inc
inc
lret
xchg
add
add
sbb
dec
push
xchg
cmp
mov
push
pushf
imul
iret
mov
jge
jmp
clc
loopne
stos
popa
jecxz
pop
leave
cs
jp
add
mulps
icebp
add
pop
dec
jmp
inc
mov
call
in
cmpsb
push
sub
insl
xor
mov
repz
cmp
xchg
sarb
cmc
scas
jmp
aas
pop
sbb
lock
xor
or
stos
xor
xor
out
inc
repnz
xchg
or
mov
cmpsl
xchg
popf
test
sub
and
mov
emms
mov
mov
into
divl
daa
loop
arpl
or
outsb
sbb
and
arpl
les
ss
push
loope
push
out
xor
dec
lret
leave
jmp
cltd
inc
jl
out
adcl
pop
inc
xchg
movb
fcoml
pop
fsubr
jo
and
or
jno
into
jne
jo
or
or
ljmp
addl
int
jecxz
mov
mov
icebp
mov
rcrb
fisubs
iret
sarl
cmp
mov
icebp
sbb
jnp
lea
mov
out
sub
and
jle
dec
repnz
jae
jnp
lock
enter
pop
sub
lret
ret
mov
lock
push
and
pop
sub
or
and
sub
adc
icebp
xor
or
mov
ss
js
js
jns
arpl
cli
or
mov
or
cmp
sbb
test
mov
push
nop
cmp
outsb
std
and
jg
mov
sub
jb
mov
add
and
add
sarb
push
movl
xchg
or
push
sbb
hlt
adc
je
mov
jbe
mov
cli
xchg
sub
mov
popa
mov
xchg
scas
push
test
adc
in
mov
dec
inc
imul
pop
jmp
ror
jae
push
wrmsr
lret
std
es
xchg
mov
aad
test
dec
or
sub
mov
dec
add
out
xor
scas
add
dec
or
pop
repz
imul
xchg
xor
lret
mov
dec
bound
out
inc
dec
lcall
insb
cwtl
js
sub
jecxz
xchg
inc
mov
add
pop
push
jae
decb
roll
dec
stos
adc
or
loopne
in
lock
adc
mov
push
mov
mov
cmp
push
cmpsl
mov
aam
loopne
stos
or
push
pop
test
adc
inc
push
sub
lds
dec
ret
xor
lcall
std
xor
jo
mov
push
adc
in
lahf
sbb
mov
faddl
mov
jo
push
add
popf
inc
cmc
adc
dec
outsl
stc
hlt
in
xor
cltd
add
or
mov
dec
test
pop
cwtl
push
out
or
mov
add
sbb
sub
push
add
cli
jne
and
adc
gs
sbb
pop
lods
xor
mov
std
sbb
pop
jecxz
jb
push
xlat
push
sub
mov
out
sub
inc
fcomps
lcall
mov
inc
pop
dec
inc
add
cmp
in
insb
popa
xor
repnz
ja
ljmp
mov
mov
cmc
or
imul
bound
or
ja
fwait
xchg
mov
jae
mov
mov
cmp
or
mov
and
lcall
and
xchg
lret
test
mov
adc
pop
pop
popw
les
pavgb
pusha
imul
push
sahf
add
mov
pop
in
sbb
cwtl
cmp
test
and
mov
or
jb
lea
in
dec
inc
loop
adc
push
dec
mulb
xlat
je
sub
insl
movsb
fwait
icebp
sbb
adc
ret
ret
cmp
arpl
sbb
cli
inc
mov
xchg
sbbl
dec
repz
sbb
sbb
jmp
mov
mov
add
mov
cmpsb
push
mov
jmp
and
dec
cmp
ror
push
push
dec
scas
addr16
inc
into
into
inc
fimull
bound
outsl
fnstenv
cmp
sahf
mov
add
push
pop
jp
inc
das
push
cwtl
arpl
inc
or
dec
pop
call
cwtl
sti
dec
push
push
jp
daa
loope
and
and
lea
ja
push
fnstenv
stos
dec
cwtl
xchg
jb
ja
or
jmp
das
pop
loop
shll
cmp
mov
repnz
cmp
cld
mov
cmp
es
fwait
or
insb
movsb
mov
mov
dec
mov
push
lds
pop
dec
cmp
sub
sub
dec
and
push
call
lcall
ja
xchg
dec
shrb
shll
push
dec
fs
sub
mov
mov
cmpsl
jnp
into
nop
cld
inc
sbb
push
lahf
aaa
push
popl
dec
icebp
pop
mov
inc
js
icebp
aas
or
mov
icebp
aaa
test
scas
pop
dec
and
pushf
inc
popa
in
xchg
rcll
cmpsl
adc
inc
out
dec
or
push
cmpsb
sahf
pop
sbb
in
inc
popa
mov
das
shl
xchg
jle
sub
lret
iret
popf
icebp
aad
pop
inc
cmp
xor
fwait
nop
xchg
pop
or
dec
dec
xchg
add
dec
test
jmp
outsb
dec
je
xlat
jo
xor
add
jp
jecxz
jo
fwait
xchg
fisubs
hlt
fstl
data16
push
push
cmp
stos
or
lea
test
push
repz
xchg
and
fidivl
in
jae
fdivl
pop
or
call
je
sahf
lds
xchg
aad
sub
push
dec
jp
idivl
cmp
enter
fsts
pop
jae
mov
jmp
sbb
sbb
adc
and
and
fsubs
or
pop
cwtl
insb
sbb
divb
and
xor
out
sbb
mov
sub
lea
mov
cmp
aam
jns
enter
cmp
jp
int
mov
iret
popf
jne
push
jl
cmp
je
mov
add
or
das
mov
pop
inc
cmp
mov
iret
dec
jg
push
jle
icebp
gs
pop
push
xor
js
sub
jl
movsl
addr16
test
xchg
and
xor
jne
stos
dec
daa
aam
xor
andb
pop
fistpl
in
outsl
mov
push
lret
sbb
jbe
popf
movl
scas
in
and
xchg
xor
ljmp
xor
lret
insl
push
movsb
out
jge
mov
mov
je
ds
ret
rcrl
or
ficoms
xor
pop
ret
mov
inc
xor
es
gs
cs
mov
icebp
xor
xor
cmp
cmp
xchg
daa
dec
mov
std
imul
test
push
int
data16
sbb
mov
ljmp
cltd
sti
sub
into
mov
mov
sub
push
loop
push
movsb
fwait
sbb
iret
sub
jbe
mov
roll
adc
movsl
cmp
pop
or
hlt
push
mov
cmpsl
pop
push
and
es
ret
lods
cld
or
sub
jmp
add
jne
cmp
loope
jae
cwtl
call
scas
test
push
mov
out
das
inc
add
xchg
sbb
fisubs
cmp
mov
xor
jmp
into
mov
or
xchg
cmpsb
cmpb
test
and
xor
aad
xchg
fcoml
ss
mov
mov
or
jo
dec
in
and
outsl
push
pop
mov
mov
unpckhps
mov
sbb
mov
push
hlt
adc
mov
xchg
jge
sbb
sub
daa
sub
test
inc
sbb
repz
mov
cmp
mov
xor
sub
mov
and
and
test
stc
sbb
xchg
or
push
sub
push
add
sub
push
add
nop
sbb
xor
enter
pop
ja
roll
or
out
sbb
push
or
mov
jno
pop
ljmp
in
roll
push
xchg
sbb
es
mov
push
mov
adc
cmp
loopne
inc
std
out
mov
flds
adc
dec
adc
dec
jne
aas
popa
nop
icebp
mov
dec
ret
cmp
in
push
add
jmp
cmp
mov
mov
adc
divb
dec
add
imul
in
movsl
mov
sbb
lret
mov
lcall
int
mov
mov
cmp
ret
pusha
jmp
les
fsubrs
and
mov
popl
mov
lret
inc
shlb
lea
int3
lret
mov
sbb
aaa
xchg
pop
scas
or
and
popa
sbb
sub
out
inc
sub
cs
dec
scas
ss
pop
sarb
insl
sbb
mul
fcmovne
stc
cmc
adc
add
dec
mov
int
add
jns
insb
cmp
sbb
add
mov
push
sarl
nop
es
mov
jbe
mov
mov
xor
int3
push
mov
xor
pop
mov
lea
roll
pop
dec
pop
adc
movsl
sbb
test
add
xchg
push
idivb
js
in
push
fwait
testb
movsb
xchg
fldl
in
pushf
sbb
lock
inc
into
jo
test
mov
jmp
int
sub
scas
mov
repz
movsl
mov
mov
xchg
or
popa
int3
cmp
inc
add
push
cmp
push
iret
inc
imul
scas
sti
addr16
mov
data16
cwtd
or
and
mov
js
movsl
leave
in
gs
mov
int3
fdivrs
sbb
lahf
popa
ja
dec
and
cmc
addl
adcb
adc
int
aaa
idivl
ret
out
lahf
enter
mov
ss
ljmp
push
jmp
pop
and
mov
cmpsb
or
sbb
lock
in
aas
scas
imul
fcoml
sub
cmp
pop
mov
cwtl
pop
cmp
push
lds
outsb
cmp
adc
mov
icebp
mov
sbb
jb
dec
repz
inc
push
xchg
andb
lds
pop
stos
into
inc
test
hlt
sub
push
mov
add
repnz
pop
mov
mov
jmp
lret
jl
stos
sbb
pop
hlt
pop
cmp
sub
add
out
push
adc
pop
fildll
sar
test
aaa
and
ja
cmp
push
jmp
out
sbb
cli
popa
in
push
xchg
or
call
xchg
mov
sub
fldcw
mov
inc
pop
flds
lock
sub
sub
mov
push
aaa
dec
fisubrs
dec
js
iret
sub
cmp
sahf
shll
js
cltd
into
mov
out
shl
mov
add
xor
mov
dec
outsl
pop
sub
push
xlat
fisttpll
cmpsl
add
lcall
push
sbb
xchg
jnp
dec
xchg
jnp
push
pop
fs
xor
ret
decl
cmp
push
lea
mov
fstps
fcoml
ds
mov
mov
or
add
xchg
test
pop
xchg
or
lcall
mov
add
lret
lcall
fcoms
out
xchg
mov
fwait
cmc
imul
je
xchg
mov
aas
in
lret
js
fwait
loope
or
imulb
out
aas
outsl
jb
or
scas
mov
stos
aaa
addb
sbb
imul
scas
xlat
sub
cmp
pop
aaa
add
lds
jmp
jge
add
jno
dec
xchg
jo
lret
bound
mov
mov
test
mov
div
mov
and
mov
ficomps
mov
mov
dec
or
sub
xchg
mov
rclb
sub
mov
push
xchg
jb
je
jmp
or
mov
adc
outsl
shl
add
jbe
xchg
int
dec
movsl
cltd
lods
cmpsb
xor
and
jne
sbb
out
jnp
ss
lods
push
adc
jnp
test
pop
ljmp
sti
push
int
out
mov
stos
push
loopne
xor
mov
jmp
cld
mov
mov
mov
iret
das
jmp
fbld
cmc
mov
mov
cmp
cmp
push
icebp
out
stos
jns
clc
es
mov
cli
nop
cmpsb
xorb
adc
inc
dec
fabs
fsubrl
xor
cmp
or
nop
addr16
ds
lahf
movsb
mov
loop
daa
fimull
xor
mov
and
adc
shrb
cmp
pusha
pop
outsb
gs
lea
sarl
push
data16
dec
cmpb
sbb
loop
and
imul
or
cwtd
jge
sbb
push
push
or
gs
xchg
mov
pop
push
into
iret
and
enter
stos
jns
fnstcw
xor
lret
sahf
inc
cmp
jecxz
pop
pop
mov
pop
fcomp
outsb
nop
pop
jo
push
cld
popf
fs
pushl
cwtl
popa
mov
bound
scas
or
enter
jbe
mov
dec
jmp
mov
push
lock
shll
leave
in
sbb
fdivrs
or
aad
mov
aaa
mov
jo
jmp
mov
shrb
testl
out
cmp
flds
jae
insb
or
into
mov
cmp
int
sub
fwait
mov
or
test
mov
lea
mov
dec
cmc
movsl
negb
pop
test
xchg
sbb
in
pusha
pop
out
add
lock
cmp
nopl
in
aas
and
dec
xchg
push
bound
addr16
cli
mov
pop
pop
inc
cs
inc
fisubs
loope
leave
pushf
cmp
mov
cmp
inc
sub
lahf
pop
jo
in
mov
adc
negb
add
xchg
stos
dec
mov
sar
cmp
mov
repnz
scas
push
in
dec
std
mov
pop
cmp
pop
sbb
mov
dec
mov
jmp
inc
mov
add
nop
fldt
fwait
mov
daa
mov
cmpsl
and
and
mov
adc
add
fdivrs
xchg
xchg
fsubs
mov
jo
jle
or
clc
and
dec
lcall
jp
jle
cmp
call
and
sub
mov
pop
add
sbb
xor
inc
jns
testl
adcl
ljmp
sbb
pop
outsb
push
into
jne
les
stc
and
xchg
push
movsl
stos
arpl
lea
mov
popa
adc
mov
dec
mov
mov
pop
xchg
mov
loop
pop
rcl
inc
adc
cld
mov
jb
dec
dec
jmp
dec
ss
ja
int
inc
add
push
arpl
or
jp,pt
pop
mull
mov
pop
sub
or
ds
imul
lds
dec
push
mov
pop
clc
push
cli
jp
int
jae
sbb
imul
jle
mov
rcrb
jo
xchg
scas
stos
test
movsb
add
in
rcrb
scas
pop
pop
mov
add
pushf
and
add
sub
fwait
inc
xor
inc
mov
les
fisubrl
xor
mov
wrmsr
push
pop
xor
fiadds
mov
xorl
test
jle
imul
aam
movsb
cmpsl
les
std
ljmp
leave
scas
xchg
or
add
sahf
subb
out
jp
or
in
cwtl
or
out
cld
jo
dec
sub
and
jno
sub
pop
xchg
jmp
test
xchg
xchg
jle
insl
push
fistl
adc
je
mov
cmc
xchg
daa
or
fadds
adc
xchg
nop
and
shlb
xor
into
cmp
dec
or
mov
mov
lea
jbe
xchg
lcall
enter
loope
pop
ja
push
inc
fildl
mov
jl
dec
mov
aaa
lcall
arpl
std
or
lret
repz
sbb
mov
dec
sub
rorb
xorb
movsb
xor
in
ret
nop
adc
sbb
dec
mov
pusha
jns
cld
dec
pop
mov
arpl
inc
xlat
cli
push
bound
cmpsl
out
popa
dec
jae
cmc
jnp
lcall
mov
gs
lcall
in
int
xchg
loop
ds
pushf
xlat
dec
stos
push
mov
push
lcall
jns
xchg
add
push
push
sbb
fnsave
mov
je
xor
push
jge
sub
je
hlt
push
sub
push
push
mov
xor
jbe
insl
mov
sub
xchg
in
jo
or
jnp
mov
push
out
and
inc
push
xchg
lret
rorl
ljmp
fnstcw
test
inc
bound
and
cmpsb
pop
repnz
jno
xchg
outsw
adc
push
je
out
mov
and
mov
mulb
sub
or
sbbl
enter
push
and
dec
xchg
or
scas
inc
daa
aas
dec
and
pop
sub
outsl
les
test
push
sahf
es
cs
cmc
shrb
xor
or
shlb
mov
sub
data16
jl
addr16
jnp
pop
fwait
inc
dec
lock
cmp
sub
push
sbb
cmp
inc
xchg
xor
sti
cmpb
xchg
or
mov
sbb
mov
push
aam
jmp
dec
outsb
sbb
shrl
xor
clc
lret
in
test
pop
and
leave
shrl
add
imull
ja
in
cmp
cltd
and
flds
in
fsubl
shrb
xorl
xchg
mov
flds
jb
xor
push
movsl
rcrb
sub
push
inc
addl
imul
clc
sahf
adc
arpl
pop
pop
xor
mov
rorb
inc
lret
stos
xlat
clc
in
and
out
jge
cmp
rcr
jns
fwait
jae
pushfw
arpl
mov
add
add
mov
push
rcrb
test
idivb
mov
add
push
rcrb
pop
and
xor
ss
sub
xlat
loop
xor
mov
sahf
roll
addr16
movsb
shlb
and
mov
notb
rorl
adc
iretw
push
pusha
xchg
fists
aam
sar
rdmsr
stos
push
jo
fxch
adc
pop
dec
cmp
dec
out
cmpsb
xor
pop
data16
push
pop
mull
or
sub
stos
mulb
scas
mov
call
je
jp
and
mov
out
ret
ljmp
out
xchg
or
push
addr16
daa
out
mov
pop
cmp
subb
jbe
xor
call
sub
fisubl
cmp
jp
mov
pushf
lret
clc
shlb
imul
or
addl
int
outsb
lods
fdivrl
insl
mov
jns
sub
push
adc
ljmp
dec
sub
pop
call
in
lcall
mov
xlat
loop
sub
std
or
fstpt
mov
push
cmc
mov
fidivl
shrb
pop
push
ss
enter
xchg
xor
fists
mov
dec
jbe
dec
mov
push
pop
fld
mov
clc
cwtl
test
fcoms
test
jbe
xor
jmp
mov
out
push
jl
data16
mov
or
mov
rcr
cmpsb
jle
imul
mov
repnz
popa
lock
in
ficoml
cmpsl
adc
xchg
mov
push
mov
rolb
stos
loop
repz
and
or
ss
inc
aaa
jbe
insl
or
adc
fstpt
jmp
cli
xorb
mov
in
out
push
lret
inc
sbb
stos
out
sub
add
mov
sub
stc
cmp
or
sbb
add
cmp
xor
push
fwait
enter
add
arpl
andps
jno
sub
inc
dec
and
imul
sub
fucom
push
dec
add
in
repz
imul
lock
sarl
push
dec
ds
or
jb
adc
hlt
jl
push
outsb
adc
scas
adc
mov
lods
cmp
mov
lcall
in
sub
mov
mov
scas
jae
dec
les
xchg
filds
outsb
add
ljmp
inc
adc
sub
push
fsubs
dec
or
push
mov
sub
test
mov
bound
les
lods
xor
push
faddp
xor
adc
aas
jae
mov
sbb
cmp
or
movsb
shr
push
fsubrp
push
imul
xchg
mov
mov
inc
mov
jecxz
inc
test
mov
push
jg
sbb
xchg
inc
les
iret
mov
xchg
lods
scas
pop
cmp
jne
dec
pop
add
pusha
mov
push
test
mov
dec
xchg
stc
push
cmpsl
xchg
mov
scas
lcall
mov
xchg
mov
push
loopne
xor
jb
cmp
repnz
inc
xor
dec
inc
decl
dec
mov
and
adc
add
xchg
ds
dec
sbb
in
sbb
ss
add
push
and
or
insl
sbb
stc
cli
and
ret
sahf
std
pop
dec
xchg
xchg
push
or
ja
sub
loopne
leave
jbe
mov
cmp
stos
mov
push
mov
pop
js
xchg
xor
test
stos
lods
sti
test
rolb
dec
mov
daa
mov
movsl
fsincos
xorb
jbe
sbb
test
lods
addr16
dec
mov
loopne
xchg
mov
cmp
mov
sar
mov
leave
leave
mov
repz
mov
mov
sbb
enter
loop
subl
aaa
sub
int
dec
fstp
fnsave
mov
pop
xchg
stos
das
jns
sti
les
mov
imul
jnp
xchg
sbb
mov
or
jno
in
leave
gs
push
lods
into
xchg
mov
dec
das
inc
mov
ds
idivl
cmc
jno
in
pop
fwait
leave
fisttps
ds
mov
inc
push
pop
insb
push
push
stos
je
call
gs
mov
leave
mov
adc
ficomps
mov
cmp
mov
out
mov
push
mov
mov
cmpsl
fstpt
in
js
add
mov
cmp
push
out
push
or
stos
fwait
popa
add
pop
ds
jae
jb
sub
jmp
xor
imul
or
stc
fidivl
xchg
or
in
aad
sbb
and
jbe
or
and
rolb
mov
in
push
jg
push
cmp
je
or
add
test
or
dec
jne
cli
fiaddl
push
lcall
jg
arpl
into
pop
out
pop
cs
rcr
das
js
sbb
mov
aad
sarl
lods
push
mov
push
int
dec
jne
out
jge
jl
mov
lock
je
inc
pop
shrb
into
xchg
es
jge
sbb
cli
shlb
ja
inc
adc
lods
cmp
out
pop
mov
push
into
adc
jo
push
jne
mov
mov
nop
jo
and
outsb
repz
inc
imul
gs
xchg
mov
mov
dec
cmp
mov
sbb
xchg
cmp
subb
test
ja
popf
rcrl
xchg
cwtl
stos
pop
sbb
dec
ds
add
push
jge
insb
sub
inc
add
sbbl
mov
adc
pop
lret
lods
pusha
bound
dec
cmp
or
shr
gs
mov
mov
pop
sub
xchg
mov
lret
pop
inc
ss
mov
pop
in
test
push
test
clc
pop
mov
ret
fidivrs
sbb
cmp
je
ds
into
ffreep
lock
shr
es
push
push
or
scas
jnp
adc
adc
push
lret
cmp
and
mov
call
repnz
inc
sub
pop
sub
mov
inc
mov
fdiv
pop
les
jo
xor
iret
and
fnstsw
adcl
jb
cs
test
dec
xor
test
lret
enter
sarl
push
aas
push
sbb
adc
sbb
icebp
sub
push
es
inc
or
inc
pushf
sbb
aam
popa
int3
arpl
insl
shrl
stos
xor
ja
test
call
xor
mov
loop
and
lds
add
add
arpl
add
add
sbb
stos
lret
sbb
add
test
pop
xchg
lods
dec
cmpsl
adc
jb
sbb
push
test
sbb
pop
enter
jp
or
repnz
popf
sbb
stos
movsb
arpl
cmpsb
movsb
fcmove
cmpsb
fistps
orb
repz
mov
push
jne
dec
adc
mov
and
mov
dec
stos
loop
and
lods
rclb
mull
pop
pop
mov
rcll
ret
add
ljmp
cmp
dec
in
pusha
or
sub
icebp
test
aaa
pop
add
loop
jb
xor
mov
idivl
push
add
sbb
fstps
fsts
xchg
xor
mov
stos
iret
out
testb
cwtl
sahf
mov
dec
pop
jp
pop
cmp
xchg
sbb
jle
dec
push
loopne
pop
pop
pop
sub
jg
int
int
les
add
ja
in
sub
cmp
gs
aas
leave
inc
adc
in
mov
or
and
push
jo
push
mov
scas
orb
xor
mov
ret
aas
fst
mov
lock
jno
fistpl
inc
or
lock
push
push
out
std
push
push
jg
adc
xchg
sub
insb
loopne
clc
cmp
push
or
pop
pop
lcall
pop
decl
inc
jae
inc
imul
mov
and
inc
xor
jecxz
xchg
xchg
cmp
xor
out
and
or
lret
dec
push
data16
sbb
mov
mov
rcr
mov
imulb
aaa
nop
adc
cmp
in
cmc
xor
mov
das
push
xor
fcmovbe
lret
cmp
je
mov
shll
and
fiaddl
mov
and
pop
xor
xchg
mov
outsl
cli
fstl
mov
pusha
mov
shll
mov
shrl
mov
shrl
xchg
push
jb
cmp
inc
pushf
icebp
movsb
jbe
pop
in
or
xor
out
fiadds
movsl
ljmp
or
mov
or
js
nop
ret
mov
dec
hlt
pop
or
movsl
cmp
das
mov
mov
bnd
or
or
psubsw
stc
popa
push
mov
cld
inc
iret
aam
cmp
divl
sbb
push
add
rol
cmpsl
mov
ja
xor
jnp
xchg
fstpl
test
and
push
or
xchg
xchg
cli
scas
push
and
rol
cmp
test
outsb
dec
jne
lock
mov
movsl
push
ret
hlt
cmpsl
lret
pusha
or
sub
aaa
pop
sub
sti
adc
push
inc
and
jecxz
out
sub
push
or
popf
dec
mov
fwait
xchg
sub
sub
xchg
pop
xchg
scas
or
ja
mov
jb
neg
in
ds
cmp
gs
and
std
xchg
mov
daa
scas
mov
inc
les
sub
xchg
adc
insl
cmc
add
faddp
insb
pop
or
cmp
jge
push
cmp
dec
xchg
popa
stc
and
cmp
pop
xchg
add
pop
or
inc
inc
or
xchg
in
call
in
gs
add
ss
enter
mov
mov
xor
adc
adc
and
xor
scas
inc
ret
cmp
and
sbb
dec
ret
push
push
into
mov
out
mov
jb
insb
into
icebp
mov
mov
jno
scas
add
sbb
in
ret
jmp
mov
xor
loope
fcomps
out
out
cltd
les
sub
add
inc
loopne
fdivrl
xchg
mov
xchg
stc
enter
push
mov
mov
xchg
je
jmp
push
cmp
sti
std
inc
add
jne
push
inc
jo
cmp
ss
cmpsb
xchg
int
inc
rcrl
test
dec
push
popf
add
adc
adc
out
cmpsl
xchg
mov
add
and
dec
ret
or
mov
int
sub
lods
push
addr16
leave
pop
and
xor
or
cmp
icebp
xor
add
sbb
aas
push
sbb
cmc
fists
push
orl
xchg
xchg
and
adc
adc
sub
inc
mov
lods
xor
add
aas
xchg
lret
mov
pop
stc
push
sbb
sarl
out
cmp
mov
dec
push
flds
lret
push
pop
ret
subl
cmp
in
fistl
fnstenv
sbb
push
loopne
in
movsb
and
shlb
in
add
imulb
and
loope
lret
sub
fisttps
out
dec
cmpsl
sbb
stos
gs
xor
imul
mov
and
cmc
push
xor
inc
je
xor
inc
xchg
arpl
aas
lret
or
xchg
jmp
aad
ljmp
xchg
xor
jns
outsl
ss
pop
leavew
sbb
adc
movsb
jo
data16
inc
inc
push
cmp
into
adc
cmp
in
out
lret
and
pop
jecxz
leave
push
in
mov
cltd
lret
dec
mov
out
pop
jbe
ret
roll
out
adc
lods
xchg
mov
dec
jns
sbb
ret
sbb
pop
test
mov
fsubrl
cmpsl
xchg
mov
daa
dec
sub
lcall
add
xchg
insl
inc
add
mov
mov
int
sub
adc
in
out
loope
fdivl
imul
adc
aam
cmp
lea
push
pop
nop
fisubs
push
movsl
addr16
jo
lahf
rclb
test
jbe
mov
mov
shlb
or
stos
enter
mov
and
adc
pop
ja
ds
arpl
jne
inc
jge
sbb
in
cwtl
cmp
hlt
hlt
xor
neg
cmpsb
and
addb
imul
in
and
sub
mov
add
sub
out
pop
mov
xorb
insb
mov
pop
out
add
mov
jecxz
add
cmc
iret
mov
and
stos
scas
mov
push
jp
test
flds
xor
pop
test
adc
mov
iret
dec
nop
arpl
inc
arpl
pop
ds
cmpsl
push
sub
jmp
xchg
jg
scas
dec
push
xor
es
adc
sub
rcrb
mull
in
and
test
popa
jnp
out
ljmp
sbb
hlt
jbe
adc
or
mov
shlb
loop
xchg
pop
xchg
add
jbe
or
jo
adc
mov
pop
mov
aam
push
pop
hlt
js
ds
sahf
cmp
add
dec
jae
mov
or
gs
out
jbe
lahf
push
das
push
mov
sti
add
int3
test
xor
mov
sbb
dec
in
adc
aaa
and
pop
xchg
mov
mov
test
xchg
jno
insb
shl
lds
int
shll
call
xchg
stos
xor
lahf
sub
jno
mov
inc
sub
mov
mov
icebp
popf
mov
mov
loope
adc
mov
cmp
loop
shll
inc
cltd
sbb
push
sti
mov
push
mov
adc
pushf
pop
cmp
xor
stc
ss
add
ljmp
arpl
cmp
and
cli
jp
cmp
xchg
sbb
ljmp
mov
cmp
push
mov
lret
add
stos
sbb
vpmacsswd
inc
sub
jl
push
xor
pop
outsl
jne
mov
mov
icebp
hlt
pop
fistpll
jle
sub
jle
pop
lods
pop
push
inc
dec
cmc
sub
cmp
or
and
push
fisubl
ret
jl
push
cmp
jo
push
daa
mov
cmpsb
fidivs
xchg
shr
pusha
cmc
pop
or
aas
frndint
in
ds
mov
imul
mov
or
mov
cmpl
push
fs
pop
insl
inc
sub
scas
add
mov
fsts
pop
mov
divl
rolb
cmpsl
dec
aaa
pop
pop
and
pop
sub
or
je
gs
or
push
mov
stos
call
dec
mov
mov
cmp
cwtl
cmpsl
mov
inc
push
pop
aam
dec
sub
int3
cmpsb
sarb
stos
mov
add
xchg
mov
ror
fcomps
insl
ljmp
pop
xchg
fisubrl
add
and
inc
repz
push
cwtl
jl
pop
lds
sub
cltd
cmp
movsl
mov
sub
out
add
sbb
pop
idivl
mov
cmp
jmp
xlat
add
xchg
adc
mov
clc
push
xchg
out
add
xor
shrl
lahf
arpl
and
aas
inc
test
bound
cmpl
pop
push
incb
adc
adc
push
or
mov
outsl
push
sub
mov
ret
sbb
sub
or
in
in
insl
sti
mov
push
or
mov
in
pop
popa
insl
int3
out
and
fildll
sahf
cli
out
xor
lock
jo
adc
cwtl
inc
add
pusha
push
sbbb
inc
sub
aaa
mov
mov
arpl
pop
inc
jns
push
xlat
fisubl
xchg
outsb
je
fcoml
pop
jno
adc
ljmp
rcrl
insb
fwait
push
inc
push
cmpsb
inc
sbb
ficomps
xchg
jns
mov
inc
lods
push
cli
or
or
out
popa
push
and
push
in
or
pop
dec
je
sub
lret
lahf
inc
jl
das
outsl
add
mov
fdivr
xor
das
icebp
and
fimuls
pushf
repz
arpl
lock
jmp
push
out
mov
jbe
mov
jmp
stos
enter
cmp
ja
clc
aad
out
push
xchg
mov
add
jmp
push
sub
pop
dec
aas
sub
sbb
and
ret
dec
jg
xor
icebp
jg
in
fidivrl
sbb
ss
fistps
inc
stos
cmp
jle
fiadds
sti
sub
shll
push
sub
fbstp
xchg
loopne
inc
jle
xchg
jns
and
add
ljmp
test
jb
jl
and
xchg
aam
mov
mov
mov
movsb
dec
es
push
mov
int3
add
testb
dec
push
sbb
push
lret
mov
bound
repnz
inc
icebp
ja
xchg
xchg
cld
add
inc
movsb
dec
cmp
jne
pop
add
icebp
and
stc
fdivr
cmp
inc
andl
loop
xor
jg
xchg
adc
mov
mov
lea
xchg
scas
test
shrb
lret
insl
jge
jne
lret
mov
sub
dec
inc
popf
pushf
call
mov
fdivrl
cld
jl
addr16
jecxz
push
sarb
subl
push
lods
sahf
addb
out
sub
and
std
dec
lret
rcrb
mov
ljmp
std
in
sbb
mov
stos
das
int3
pop
sub
cmovg
fisttpll
adc
stos
aad
std
popf
das
xor
movsl
hlt
mov
lahf
dec
xor
cwtl
les
mov
pop
popf
push
mov
outsl
leave
and
insb
fildl
pop
push
sti
mov
jecxz
rolb
dec
ljmp
std
je
imul
mov
loop
sbb
add
std
add
add
fstpt
cmpsb
dec
outsb
mov
cmp
inc
cmp
test
fstpl
adc
hlt
out
das
insl
pop
cs
jecxz
mov
dec
xchg
xchg
cmp
sbbb
xchg
add
mov
add
and
lods
mov
mov
aam
mov
clc
inc
aam
mov
mov
push
aas
dec
test
jb
loop
jnp
jne
pop
cmp
and
push
and
ja
rcrb
jmp
push
sub
adc
jecxz
lock
fidivl
jnp
nop
and
fs
stos
imul
nop
pop
lods
imul
and
out
sub
inc
xchg
clc
jne
jge
sahf
mov
rclb
imul
sbb
insl
cmp
aam
sbb
cwtl
imul
cmp
sbb
mov
aaa
push
data16
orb
mov
pop
hlt
cld
sbb
mov
lock
xlat
mov
rcrl
jp
push
ds
scas
jbe
and
push
out
or
inc
push
icebp
test
xor
adc
or
lock
cwtl
push
out
insb
cli
rcrl
cmp
ficoml
std
jns
or
pop
sbb
adc
sarl
div
push
xchg
orb
out
adc
insb
or
or
mov
cwtl
fistps
sub
or
mov
es
mov
fidivl
pop
inc
jns
repz
or
mov
sbb
cs
jo
xor
jno
lret
push
clc
xchg
push
lret
push
imul
or
push
lock
ljmp
push
jno
push
je
imul
rolb
jnp
repnz
or
or
xchg
mov
outsl
mov
push
xchg
leave
fstpl
fnstenv
or
add
mov
out
repz
sub
cli
mov
hlt
aaa
mov
add
jg
dec
imul
icebp
inc
leave
xchg
test
fisubs
sbb
cli
test
jnp
push
aad
lods
adc
repz
inc
insb
mov
inc
push
icebp
mov
enter
loope
mov
push
push
mov
imulb
addl
outsb
cmc
call
shlb
sbb
pop
sub
mov
inc
xchg
gs
lret
add
lods
in
xor
jecxz
js
int
and
jmp
jmp
and
adc
inc
fdiv
dec
add
dec
roll
cmpsl
push
pop
add
push
cmp
sbb
ds
cmpb
js
sarb
pop
cmp
arpl
jecxz
fstpt
pop
leave
adc
fisttps
fwait
sub
movsl
pop
jp
inc
sub
push
aas
out
fisubrs
repz
insl
mov
mov
cmp
cwtl
cli
inc
mov
add
pop
sub
adc
daa
xchg
mov
dec
hlt
jae
negl
les
lret
fsubrs
test
popf
or
cli
loope
popa
sub
fbld
arpl
dec
fwait
push
stc
lods
cmp
mov
lea
inc
mov
arpl
mov
pop
jg
push
inc
lods
ficomps
adc
jae
and
lea
mov
scas
pushf
cmp
xchg
imul
sub
imul
mov
or
jae
fstl
into
mov
ret
popw
shlb
dec
jbe
mov
jmp
cld
push
andl
ja
sbb
mov
sub
dec
std
xchg
sbbb
xchg
push
mov
fld
add
rclb
add
pop
dec
out
insl
decl
ljmp
dec
mov
rcrl
mov
sub
scas
pop
mov
lcall
mov
outsb
mov
cs
fisubrl
sub
ss
add
pushl
cltd
jg
insl
mov
movsb
andl
xchg
sub
test
xchg
adc
xchg
add
add
sub
cmp
adc
jae
enter
jmp
clc
inc
ret
jl
adc
mov
mov
cmp
das
dec
sub
jge
pop
out
cwtl
jo
lahf
orb
icebp
mov
das
mov
outsb
cltd
in
jmp
ss
jb
cmp
out
repnz
pop
xchg
test
xor
push
arpl
sub
call
mov
aas
roll
stos
or
dec
mov
inc
call
push
int3
rcrb
mov
pop
clc
pop
out
inc
sbb
sub
push
addb
bound
jbe
dec
pop
stc
xlat
xchg
jbe
iret
xor
sub
outsl
push
adc
fistpl
cld
pop
xor
cwtl
cs
nop
aad
fsubl
lcall
pop
mov
mov
push
push
pop
xor
sahf
push
imul
in
dec
insb
ss
dec
sub
mov
lahf
ljmp
mov
pop
mov
cld
xor
and
mov
sbb
mov
push
pop
cld
and
push
inc
lea
mov
add
addr16
push
lret
test
les
les
inc
mov
out
xchg
lcall
js
adc
fcmovu
sbb
adc
ljmp
xchg
and
shlb
pop
sbb
dec
lods
cmp
pop
fstl
mov
push
rorl
cmp
stos
cltd
lea
in
sub
mov
pop
sarl
cmpsl
std
xor
into
dec
or
popf
xlat
fdiv
orl
sarb
push
aas
scas
rolb
je
imulb
sbb
outsb
push
aas
jmp
sub
dec
mov
pop
lds
ljmp
mov
sub
mov
shl
cwtl
movsb
adc
cmc
mov
enter
mov
rdmsr
fsubp
jl
xchg
sbb
xor
push
test
lcall
idivl
cmc
ss
mov
dec
in
pop
ljmp
sub
mov
cmpl
sub
scas
adc
fld
pop
test
movsl
popf
mov
out
cmpsl
je
xor
je
cwtl
aad
mov
fstpt
pop
cmp
push
mov
dec
jmp
and
jo
ljmp
push
inc
and
in
mov
jo
push
pop
xchg
push
repz
outsb
cmp
test
addr16
mov
ret
cmp
jo
gs
dec
push
inc
sarl
hlt
push
sub
add
push
aaa
and
mov
xchg
push
out
sbb
jge
lret
stos
pop
fs
in
xlat
imul
mov
fsubrl
std
push
mov
mov
mov
fists
lock
ret
xor
mov
jge
sub
pushf
push
lods
aad
push
or
jo
add
jno
daa
and
xchg
rolb
add
sbb
xchg
xorb
xor
jmp
popa
push
push
subb
js
push
mov
dec
xchg
aas
lds
iret
xchg
loopne
scas
out
push
lock
inc
test
es
int
xlat
adc
shl
cmpsl
jecxz
adc
pop
fsubr
fisubl
ret
movsb
pop
sbb
or
imul
and
lahf
fldt
add
mov
sbb
push
in
cmp
mov
jnp
js
addr16
and
xlat
mov
out
shr
adc
ja
pop
inc
xor
popf
cmc
xrelease
jne
xchg
pop
dec
rcrb
xor
popa
iret
rclb
sub
je
mov
inc
xor
pop
jb
das
adc
jb
add
lcall
inc
pop
int3
cmp
lds
push
jno
pop
pop
jp
stos
lcall
mov
test
inc
cltd
push
lods
movsl
fadd
fcompl
push
pop
aas
jg
or
mov
and
cltd
adc
mov
xchg
xchg
popa
cltd
ss
sub
jecxz
adcl
sti
scas
push
lcall
push
outsl
inc
movsl
sbb
dec
hlt
cmp
add
nop
mov
jno
inc
inc
lret
cli
or
scas
mov
adc
sbb
das
adcl
lods
adc
cld
dec
aad
aas
sub
jmp
negl
call
cmpsl
mov
pcmpeqw
sub
test
ret
lods
mov
lods
or
xchg
push
outsb
inc
fnstenv
into
stos
cmp
dec
xlat
cmp
push
hlt
xor
icebp
push
imul
in
outsl
std
push
sbb
pop
enter
mov
dec
adc
add
lock
lock
jge
push
jmp
movsb
and
setnp
xlat
movsb
cpuid
fst
jge
ss
xchg
adc
xor
cmp
pop
cmp
test
pop
add
mov
xchg
sbb
or
mov
inc
inc
in
cmp
movl
icebp
int3
sahf
jp
xor
sbb
adc
adc
rcrl
int3
sub
sub
fildll
fcmovnu
fstpl
and
add
xor
imul
aaa
sbb
sbb
xlat
popf
cmpsl
incl
fldt
push
iret
sub
scas
test
dec
bound
movsl
and
xor
sbb
xor
leave
xor
lods
or
mov
je
cmp
ds
jmp
inc
mov
lods
stc
and
inc
data16
mov
std
pop
rol
je
cmp
xor
data16
sbb
xor
push
xor
out
fadd
and
mov
sahf
mov
and
lret
sbb
test
fs
loope
int3
pushf
push
shr
pop
repnz
jo
sti
mov
dec
pop
push
clc
arpl
shlb
fucomip
inc
in
xorb
jo
sahf
xchg
add
jge
out
and
rcrb
sub
jb
xor
mov
or
or
mov
std
les
xchg
shrb
mov
cmpsl
mov
pop
sbb
test
push
decl
jbe
out
pop
pushf
inc
sub
cs
jo,pn
popf
push
or
ret
ret
pushf
cwtl
iret
jecxz
sub
pop
xchg
jns
xchg
ret
test
jmp
sarl
xchg
sub
popa
jmp
popa
sub
ret
arpl
and
sahf
lahf
fsubp
rcrl
inc
movsl
xor
outsb
jns
cmp
insb
cmpsb
lds
pop
mov
xchg
cltd
out
fwait
mov
pop
pop
cltd
aad
mov
xchg
stos
imul
hlt
adc
mov
rcrb
pop
rorl
mov
cmpl
lods
out
cwtl
and
cmc
push
int
repnz
mov
cwtl
dec
rclb
mov
fiadds
jecxz
dec
push
hlt
rcrb
pop
lcall
pusha
insb
push
addb
jge
repnz
mov
outsl
fcomi
scas
dec
mov
shr
mov
pop
pop
rcrl
ljmp
lock
push
xchg
pop
daa
daa
loope
mov
imulb
inc
sub
or
out
out
sub
sbb
cmc
sti
jg
hlt
mov
aad
inc
mov
fimuls
lahf
jecxz
psubw
push
setl
push
and
fistps
pop
sub
fxch
xor
dec
stc
loope
dec
or
daa
loop
pop
mov
fwait
ss
imul
sbb
jecxz
out
dec
inc
sbb
es
or
adc
sub
daa
or
stc
dec
push
pop
inc
pop
mov
dec
stos
push
das
pop
loop
into
and
stos
mov
and
jg
mov
lcall
xchg
inc
cmpsb
mov
ret
ja
arpl
incl
cmp
dec
shl
jb
cmpsl
xchg
popa
pop
loopne
adc
das
testl
sub
xor
imulb
andl
in
sbb
aad
lcall
sarb
pop
insl
lds
add
and
imul
nop
fldt
lea
pop
jle
xchg
push
daa
jne
dec
sbbl
xorb
push
mov
mov
in
mov
scas
xchg
dec
xchg
lahf
pop
lods
cmp
aaa
ja
jns
cltd
xchg
popa
jne
sub
xor
dec
fmuls
rolb
jp
mov
or
mov
test
fwait
sub
lods
fsts
xor
pop
fwait
nop
jae
popa
jg
pop
dec
xchg
push
and
xor
sub
mov
ja
hlt
popa
xchg
xchg
xorb
idivb
add
test
pop
out
dec
xchg
shlb
sbb
into
mov
ljmp
les
shll
pop
ja
std
add
adc
and
int3
mov
lea
pop
sbb
push
in
ss
cmp
shlb
mov
xor
roll
push
popf
jg
sub
inc
fisttpll
mov
push
inc
xor
xor
mov
adc
sub
ss
ja
mov
ret
rorl
repnz
add
das
xchg
cli
test
pop
test
fs
mov
push
fsubp
cmpsl
lahf
in
aas
hlt
rolb
xor
sub
jmp
push
nop
and
fidivrl
xlat
push
fists
out
inc
mov
loopne
jl
mov
lahf
mov
jae
out
in
jg
sub
push
scas
and
adc
aas
rolb
fistps
loopne
inc
dec
popf
nop
add
outsb
adc
fisttpl
mov
pop
imulb
xchg
rcrl
test
insl
cmp
mov
push
cld
cmp
ja
xchg
pop
out
int3
jge
repz
pop
mov
adc
pop
dec
sbb
lret
nop
cmp
outsl
pop
fwait
enter
adc
jmp
jg
and
stos
aam
inc
xchg
mov
mov
mov
int
or
jecxz
in
sbb
es
xor
nop
shrl
dec
jo
adc
gs
xor
adc
sub
adc
mov
pop
add
shl
lahf
sbb
xchg
bound
push
shl
mov
cs
push
mov
cmpsb
stc
xchg
outsb
lret
add
faddl
out
add
push
add
bound
mov
inc
dec
and
mov
xor
sub
pushf
and
push
mov
push
xchg
loopne
lret
add
mov
cmc
jno
int3
pop
aad
movsl
popf
mov
ja
out
xor
and
xchg
inc
cmp
addl
rcrb
inc
ret
mov
es
div
fstpl
loope
shlb
sbb
or
and
dec
and
push
or
sbb
xchg
xchg
jno
popl
scas
mov
shrl
push
mov
cmp
inc
aaa
std
popf
into
and
repnz
jl
jp
xchg
xor
ja
push
leave
xlat
daa
fisttpll
mov
inc
add
mov
clc
dec
sbb
pop
movsl
and
je
push
repz
add
xchg
inc
add
leave
shlb
daa
sub
push
xor
pop
mov
xchg
push
dec
mov
mov
daa
shrb
sub
mov
inc
pop
push
aam
fs
add
lock
scas
loop
es
cmpsl
retw
cmp
fsubl
cmc
mov
mov
pushf
pop
in
bound
int3
jno
fcoml
imul
add
inc
mov
loop
mov
jo
mov
jne
mov
lret
loopne
cmp
and
dec
push
sub
mov
test
scas
jmp
jbe
mov
aaa
sarl
jge
xchg
insb
int
lea
enterw
add
bound
pop
xchg
cmpsb
dec
cwtl
cmp
pop
out
sub
push
leave
pop
mov
cmp
jge
mov
dec
inc
sub
rorb
push
jp
jl
lods
jb
jp
push
pusha
fwait
sbb
pop
mov
movsb
xchg
mov
nop
cmc
addr16
xchg
mov
mov
insl
mov
mov
mov
fidivl
push
in
aad
inc
dec
jp
push
push
push
or
xchg
cmc
popa
sbb
mov
push
cmp
pop
insb
or
loopne
pop
xorl
out
divb
push
push
icebp
ret
jbe
ja
mov
mov
ds
ret
stos
and
adcb
movsb
xchg
inc
int3
rol
cmpsl
inc
sbb
fs
mov
xchg
mov
push
incb
mov
mov
inc
push
or
lret
and
add
inc
imul
mov
sahf
pop
pop
pop
dec
add
sbbl
data16
xor
mov
jns
mov
mov
push
sbb
pop
lods
cwtl
pop
out
adcb
fisubl
sahf
push
mov
repnz
xchg
push
idivl
jmp
das
or
dec
cmovg
pop
je
rcrl
mov
adc
push
adc
inc
rorb
mov
fildll
pop
stos
repz
jb
fwait
xchg
xchg
cmpsl
xor
out
into
test
jmp
test
push
je
xor
loopne
xlat
loop
cmp
adc
sbb
sub
aad
fstp
lret
test
xor
gs
into
pop
ficoms
mov
cli
dec
cli
fistpll
fsubp
movsl
push
roll
jae
xlat
jecxz
or
or
fiaddl
push
add
in
sub
mov
cmp
pop
pusha
jns
xor
orb
dec
loope
push
cmp
jo
xor
icebp
rcll
xchg
sahf
in
or
mov
dec
std
mov
jb
dec
jmp
sbb
in
xchg
jnp,pn
insl
imul
stos
mov
dec
pop
sarb
and
ss
sub
pop
insb
cmp
cmp
int
in
leave
jbe
sbb
aaa
int
push
movb
insb
cwtl
xchg
pop
mov
fcompp
divw
dec
enter
sub
pop
daa
movsb
lds
fadd
lret
insb
stc
jae
outsb
xlat
xchg
pop
in
and
pop
sbb
fisttpl
je
or
jecxz
jp
add
add
cmpsl
das
sti
fistpl
jle
lahf
xchg
jg
or
push
out
fisubrl
jp
shl
int
movsb
adc
mov
decl
xor
loope
jns
je
lds
cltd
sub
jne
mov
arpl
mov
mov
loopne
adc
das
dec
and
hlt
lea
rcrb
sub
sub
pop
mov
std
xor
push
mov
cmpsb
stos
cmp
push
in
lret
or
xlat
sahf
sbb
pop
xchg
mov
mov
push
out
pop
mov
lods
push
sbb
inc
cs
push
imul
mov
add
xor
cltd
inc
xchg
and
pushf
sub
fbld
insl
aam
dec
mov
xor
icebp
sbb
les
inc
mov
inc
add
lods
daa
std
rol
pop
xchg
inc
test
lds
xchg
test
add
mov
std
mov
jmp
adc
fiadds
lods
mov
xor
dec
push
xor
lret
aaa
or
shrb
cmp
mov
push
lock
ret
xchg
inc
or
push
inc
adc
xchg
sbb
in
popa
pop
lcall
adc
add
movsl
shlb
fists
fisttps
loopne
jo
adc
push
xor
push
and
push
adc
xlat
pop
mov
out
push
push
mov
repnz
adcl
adc
popf
sahf
es
addl
pop
icebp
jo
lds
inc
in
dec
loope
cltd
dec
sub
dec
mov
hlt
inc
test
scas
imul
sbb
adc
mov
test
xchg
out
ret
and
push
sbb
mov
pop
rorb
dec
sub
xchg
movsl
sbb
inc
out
or
inc
push
aam
pop
inc
pop
xchg
addb
adc
adc
or
lcall
test
xchg
mov
mov
push
mov
out
xor
push
sarb
int
in
pushf
ret
mov
dec
jg
mov
sub
out
out
sti
mov
je
rolb
nop
xor
and
fdivl
lea
or
push
pop
shrb
inc
jle
sub
das
aad
inc
inc
mov
int
mov
adc
pop
push
ret
sti
xchg
push
cmpsl
test
mov
adc
dec
inc
es
push
push
out
or
rcll
leave
ljmp
mov
call
pop
stos
test
inc
cmp
adc
hlt
aad
xchg
inc
lods
push
ss
lods
mov
cld
push
add
mov
xchg
sub
clc
xchg
cmp
mov
lock
mov
imul
adc
iret
cmpsb
jbe
add
jo
test
sub
in
push
xchg
xor
mov
ret
cmp
mov
sub
bound
clc
rcll
mov
pushf
aam
loop
push
addr16
xchg
sub
aad
or
mov
aaa
sub
cs
sub
cmp
rol
jno
lahf
or
inc
cmp
jne
je
jns
enter
loope
or
mov
jge
push
cmp
pop
pop
lods
sbb
inc
pop
sbb
aad
shll
popf
enter
adc
out
xchg
inc
cmp
sub
add
scas
inc
ds
jb
fidivs
daa
dec
push
mov
sub
aas
mov
cmp
jmp
push
push
push
and
popl
andb
lcall
movsl
in
sarb
shll
ficompl
mov
and
pop
pusha
jle
imul
inc
mov
popa
mov
cltd
push
inc
gs
adc
mov
and
dec
fwait
mov
mov
das
lret
je
xchg
addr16
xchg
dec
inc
jae
ret
sub
pushf
push
sub
mov
addr16
dec
aaa
fwait
cwtl
out
sbb
loope
dec
mov
mov
sarl
xchg
jo
outsl
pusha
jo
mov
addl
dec
and
mov
adc
add
adc
ljmp
subb
sub
loope
cwtl
mov
sahf
xor
fistpll
lods
xchg
insb
rcl
test
ret
mov
pop
or
cmp
xor
push
sub
pop
lret
push
test
in
out
and
xchg
shll
jne
inc
ljmp
mov
push
lcall
cmp
loope
or
push
jle
lea
pop
leave
jbe
imul
sub
sub
xchg
adc
nop
xor
rcrl
sbb
mov
ljmp
in
push
nop
pcmpgtd
icebp
sbb
jnp
outsb
mov
pop
mov
dec
jbe
and
insb
sub
aad
add
cmp
in
std
xchg
es
cmc
sub
mov
in
test
scas
rcll
push
jge
xor
and
loopne
pop
lods
outsl
xor
dec
pop
pop
jae
mov
fdivr
xchg
pop
insb
mov
sub
addr16
enter
mov
mov
cmpb
jno
sbb
mov
adc
inc
and
xor
sub
call
xchg
jp
roll
add
outsb
xchg
cld
mov
adc
sbb
jno
sbb
or
jge
cmc
daa
adcb
mov
mov
js
cltd
mov
fs
in
mov
pop
push
lret
and
fwait
sub
hlt
aam
mov
cmp
fldl2t
inc
push
popf
loopne
into
push
push
jb
dec
call
lea
popa
sbb
or
adc
ss
or
cmc
xchg
mov
sub
fcoml
in
test
mov
test
into
mov
xor
les
sbb
dec
loope
add
enter
pop
out
xor
scas
out
inc
push
inc
test
ret
in
aaa
sbb
stos
mov
es
in
fs
mov
jnp
repnz
adcl
cs
xchg
ja
sbb
sub
xchg
addl
mov
inc
test
and
jmp
loope
mov
subb
in
mov
push
jb
mov
dec
mov
jne
insl
and
stos
add
adc
cmpsb
mov
rcl
ret
pushf
xchg
pop
outsb
or
pop
mov
push
popl
add
into
adc
movsl
add
movsb
dec
jmp
jge
jmp
and
movsl
insb
pop
mov
dec
push
dec
pop
cmp
js
xchg
xorb
xor
or
or
leave
in
adc
in
push
pop
fistpll
fbld
add
mov
loopne
nop
into
fcoml
sbb
push
sbb
xchg
shrl
sub
cmpsb
cmpsl
mov
mov
adc
jg
or
sbb
pop
sahf
push
lods
cmp
xor
fwait
jle
adc
mov
lahf
out
inc
testb
xchg
out
xchg
por
lahf
lret
pushf
addr16
lds
test
movsl
sti
xchg
in
xchg
rorl
repz
cs
jmp
mov
jae
insl
jnp
adc
mov
mov
sub
inc
adc
stos
add
xor
dec
fisttpl
das
fbld
fiaddl
pop
mov
pushf
sub
fidivs
jl
xchg
pop
adcb
fidivrl
xchg
ds
xchg
cli
pop
call
sub
in
out
push
dec
jge
push
cmpsl
mov
lcall
inc
cmc
jl
push
call
pop
ds
hlt
sbb
sub
int
dec
push
jbe
bound
mov
repnz
cmc
lods
ss
jecxz
pop
lcall
xchg
mov
fdivs
or
test
sbb
sub
js
int3
testb
and
data16
cltd
push
add
lods
push
inc
inc
mov
das
enter
into
aas
inc
dec
insl
inc
pusha
rclb
mov
pusha
add
adc
add
and
notb
cmp
jg
shll
sub
jnp
xorb
cmp
lcall
jnp
add
imul
sub
mov
scas
or
add
lahf
inc
cmp
std
dec
rclb
push
or
add
pusha
paddusw
jae
test
rcrl
sbbl
imul
mov
sbb
mov
and
test
push
out
lret
add
push
repnz
cmp
pop
lret
mov
aam
shlb
dec
aam
shl
sub
ror
imulb
push
ja
jno
mov
jecxz
sub
inc
pop
clc
gs
lds
cmp
out
jg
and
mov
sahf
xchg
and
mov
pop
push
scas
iret
xor
jbe
mov
ss
jne
cli
repz
mov
adc
push
dec
ret
jno
pop
mov
or
jo
lret
leave
sub
xchg
mov
repz
xchg
testl
jmp
mov
adc
and
or
inc
nop
aas
mov
pop
insl
fld
jl
addr16
sub
subb
fisubl
data16
push
bound
out
and
jp
les
xchg
out
jae
mov
adc
sar
rcll
xor
jg
inc
call
lods
cmpsb
dec
add
fidivrl
pusha
pop
sti
in
shll
leave
xchg
rcrb
insb
sbb
imul
scas
lret
cmp
or
cwtl
cmpsl
push
jmp
lods
test
iret
push
loop,pn
movsl
push
push
rorl
and
add
scas
fldl
adc
lods
scas
or
dec
les
enter
sbb
imul
push
or
int
sbb
xor
sub
shlb
loop
jno
enter
jnp
xor
addb
clc
cmp
pop
adc
pushl
push
fldt
icebp
sub
in
cmc
push
dec
inc
and
scas
jbe
adc
fadd
mov
cmp
repz
ja
dec
sbb
ja
mov
mov
test
mov
popa
or
dec
push
stc
xor
jbe
dec
pop
sbb
xchg
cwtl
jmp
clc
cli
iret
cmp
push
cwtl
pushf
daa
mov
sbb
jmp
lret
jns
xor
std
ja
test
cmp
sahf
les
lds
data16
out
pop
cli
jp
mov
cli
std
imul
cltd
out
inc
mov
scas
push
bound
pop
push
xchg
dec
push
stos
mov
int3
sti
adc
or
dec
scas
push
ljmp
pushw
pop
dec
movsl
in
sub
xor
leave
pop
cmc
popf
filds
ret
rcrb
xlat
lret
mov
xor
push
iret
fprem
and
jbe
mov
jne
mov
cmpsl
and
dec
mov
cwtl
push
test
cmp
dec
sbb
or
adc
je
pop
pop
mov
xchg
sahf
push
ret
xor
mov
stos
or
adc
pop
mov
jbe
in
sbb
push
dec
outsl
dec
out
rorb
and
cwtl
bound
repz
push
je
movsl
lret
lock
and
out
or
es
movsl
pop
jns
and
ljmp
cmp
jae
jecxz
les
inc
push
popf
std
or
mov
jl
mov
sub
clc
data16
add
int
inc
push
fidivrs
fiadds
mov
ljmp
ds
mov
sub
jl
cmp
out
sub
dec
mov
fdivrl
jne
cmpsl
jns
cmpsb
inc
movsl
push
sbb
push
push
add
or
add
pop
mov
insb
popa
mov
cmpsb
les
lcall
test
popf
or
xor
add
push
mov
sub
ja
int3
cmp
sub
push
sarl
xlat
movb
js
data16
test
in
cmp
push
mov
dec
scas
bound
sti
dec
adc
mov
mov
shl
mov
adc
mov
lahf
in
push
inc
out
jle
imul
int
call
pusha
test
cmpsl
scas
xchg
inc
cmpsb
les
shrb
mov
ljmp
lcall
or
jb
xchg
out
jb
pop
ficomps
data16
fldenv
push
insb
inc
mov
cmp
sbb
in
pop
dec
fimull
sub
mov
mov
test
mov
push
repnz
leave
and
fcompl
jmp
cmp
inc
iret
mov
jbe
repz
out
scas
orb
pop
cmp
push
sbb
loope
rorl
mov
add
cmpsb
loopne
dec
test
mov
out
sub
rorb
jecxz
and
xor
adc
lcall
cli
pop
repz
mov
push
inc
cmp
mov
je
xchg
cltd
jae
mov
sub
aam
or
push
je
dec
subb
inc
jb
enter
imul
dec
pushf
pop
icebp
xchg
icebp
lods
lock
aam
sub
push
cwtl
int
cmp
xchg
out
cmpsb
mov
xor
mov
fistps
jmp
jnp
popf
sarb
in
cmpsb
out
mov
fiadds
pop
movsl
call
int3
jnp
add
cmp
cwtl
das
dec
add
call
or
push
push
lcall
cmp
jbe
adc
xchg
sbb
lcall
fiadds
test
add
push
call
xor
pop
dec
decb
pop
inc
div
loop
cmpsl
in
dec
jg
jne
in
add
sbb
fisubrs
mov
mov
dec
rclb
sar
xor
sar
leave
add
lock
xorl
cmc
pop
scas
adc
jl
scas
inc
cld
dec
adc
adc
inc
inc
sbb
popa
jp
fisubrs
outsl
add
shrb
repz
xor
shlb
xchg
outsl
mov
out
sbbb
clc
pop
loopne
and
call
cli
rcrl
adc
dec
loopne
push
in
or
mov
cwtl
aam
mov
cmp
mov
pop
fdivr
cmpl
test
pop
fnstcw
jge
jns
push
in
add
repz
push
jns
in
mov
pop
pushf
push
lea
mov
sub
xchg
fimuls
push
int3
mov
stos
inc
xor
sub
fdivr
push
sub
pop
jne
mov
rcrb
orl
mov
sbb
test
inc
jns
add
cmpsl
pop
sub
scas
iret
cmp
int
ja
xchg
dec
std
repnz
add
aad
add
pop
inc
inc
loopne
mov
pop
div
pop
je
sti
test
fcoms
fucomip
cmovp
xchg
or
dec
mov
cs
insl
and
cmp
mov
cmc
cmpsl
std
xchg
sti
sti
sub
pcmpgtb
loop
popa
lds
mov
pusha
popa
cltd
jnp
scas
ja
iret
mov
xchg
mov
adc
pop
mov
movsb
or
pop
dec
mov
jbe
push
je
jo
sbb
mov
xor
sbb
xchg
stc
sbb
add
in
jb
push
imulb
lahf
mov
iret
push
js
movsb
out
popf
scas
ret
imul
lret
mov
iret
lods
jae
insb
adc
pusha
push
adc
jle
out
jg
xor
popa
loopne
sub
sbb
movsb
int
hlt
xchg
inc
movsl
rol
icebp
push
pop
aad
fdivp
popl
and
sub
jbe
imul
mov
jnp
gs
push
dec
sub
push
dec
xor
xchg
dec
fmuls
xchg
aam
push
lcall
lcall
mov
mov
dec
push
gs
pop
and
pop
jg
test
xchg
lret
adc
mov
imul
xchg
xchg
xor
inc
repz
add
and
push
pop
std
inc
and
xchg
outsl
scas
jecxz
dec
push
xchg
cltd
arpl
movsb
add
sub
pusha
leave
fcomi
inc
mov
les
xor
call
lret
or
data16
fwait
mov
inc
mov
std
inc
int
in
lret
and
pop
pop
sub
jo
dec
jne
popf
repz
cmp
mov
mov
sbb
pop
out
mov
cmpsl
xor
dec
scas
lock
pop
push
xchg
mov
dec
or
jle
negl
loopne
test
inc
adcl
lahf
jb
ds
add
xor
mov
sbb
in
aas
push
jecxz
int
test
pusha
mov
movsl
push
in
pop
ja
push
popa
xor
jno
and
insb
in
mov
and
iret
mov
mov
rorb
pop
push
aas
mov
lahf
or
mov
dec
or
test
sbb
xchg
adc
pop
jo
mov
mov
hlt
mov
xchg
mov
cmp
mov
das
inc
je
inc
cli
fldcw
test
lcall
sbb
pop
or
mov
das
push
inc
sub
fwait
aad
and
and
cld
in
sub
out
shl
pop
xor
cmp
push
and
and
jmp
mov
mov
aaa
sub
icebp
add
ljmp
aaa
lret
push
clc
jnp
xchg
pusha
aas
iret
repz
aam
and
jp
sahf
out
ds
rolb
push
icebp
and
add
scas
sub
into
in
jg
sti
in
jno
movsl
mov
stos
push
push
orb
adcl
add
push
fcoms
and
sbb
fwait
mov
fistps
pusha
pop
shl
js
add
or
sbb
test
sbb
loope
call
mov
sub
jmp
repz
outsl
dec
cmp
mov
in
cli
adc
xchg
jg
jns
fisubrs
shr
inc
stc
add
sti
jecxz
and
ljmp
into
subl
sub
jnp
cltd
mov
sbbb
stos
and
jb
xor
inc
or
sahf
lret
stc
mov
test
mov
insl
jbe
loopne
mov
mov
xchg
js
jae
nop
lcall
fidivrl
mov
mov
test
je
pop
inc
pop
inc
popa
in
cmpsb
add
inc
ja
je
rorb
pusha
cmp
jecxz
inc
push
add
jp
pop
jne
pop
das
ret
xor
test
jo
in
push
fdivr
loope
adc
rcr
push
mov
mov
test
jmp
dec
in
jp
pop
pop
rorl
xor
rcll
sbb
mov
aad
fldenv
cmp
xchg
mov
jg
lods
xchg
inc
in
lods
adc
xor
daa
cmp
push
lahf
sbb
lods
pop
test
adc
test
rclb
aaa
jg
mov
and
add
push
testb
pushw
jnp
and
insl
cli
test
dec
jl
adc
push
or
loopne
push
fnstsw
push
rclb
in
push
ret
lods
movsl
or
dec
xchg
xchg
testl
outsl
mov
cltd
mov
xor
popf
cld
out
aas
adc
cwtl
dec
mov
scas
outsl
pusha
pop
add
sarb
lcall
cvtps2pd
lea
in
cmp
mov
popa
xchg
je
sti
aad
dec
pusha
sar
popa
cltd
mov
cs
outsl
cmp
sbb
push
fdivrl
rolb
adc
popf
cmp
shll
jmp
xorb
xchg
mov
sub
pop
mov
adc
int
out
lea
or
je
movsb
testl
std
lret
sub
mov
xor
aad
xchg
stos
fwait
cmp
push
and
sahf
mov
aam
sti
push
in
fnstenv
pop
push
dec
mov
cmc
repz
in
in
sub
xchg
test
mov
xor
je
je
sarl
push
popa
aaa
mov
jb
les
add
leave
mov
push
addl
fcomps
adc
ret
imul
ret
out
push
and
mov
xchg
adc
or
sti
out
inc
pushf
jl
push
ja
mov
add
ret
inc
addr16
cmp
mov
sbb
roll
add
js
in
shll
std
sahf
jbe
addl
jmp
test
dec
or
jge
sbb
aaa
cmp
lret
aaa
jl
dec
fisubrl
jnp
mov
cld
rorl
sbb
sub
adc
sbb
or
dec
xchg
rcr
sub
in
bound
jns
daa
jmp
xor
bnd
je
mov
jl
inc
and
sbb
cwtl
outsb
jecxz
cs
xchg
es
test
or
add
pop
fistps
adc
lret
lahf
js
sbb
and
pop
cmp
push
mov
cmp
push
dec
dec
dec
testb
mov
mov
int3
jb
aam
mov
adc
jge
out
mov
add
jns
dec
push
enter
or
jecxz
pop
ja,pn
push
adc
in
clc
es
fisubrl
xchg
and
or
sti
lahf
hlt
mov
jbe
repz
mov
jne
inc
adc
lret
in
lcall
sti
and
andl
mov
mov
push
mov
stc
mov
out
dec
roll
nop
rcl
daa
stos
adc
punpcklwd
cmp
xor
sub
fisttpll
mov
push
in
add
mov
jp
or
aaa
in
jp
mov
loopne
xchg
out
cwtl
sbb
push
xchg
lds
outsb
rol
dec
out
jb
adc
mov
cwtl
test
mov
aas
rcrl
into
rcl
or
cs
popa
sar
jae
jmp
loope
jg
xchg
mov
pop
insl
dec
xchg
pop
xorl
out
fcoml
jl
jp
sbb
sbb
imul
mov
insl
mov
xchg
iret
mov
cmpb
cs
into
pusha
je
mov
insl
cmp
jbe
sub
inc
cmp
sub
into
dec
lret
sbb
cwtl
call
cld
pop
les
mov
insl
testl
je
in
adc
pop
dec
movsb
push
lret
shr
inc
adc
subl
pop
insl
xchg
dec
xchg
insl
adcl
or
lds
sub
sbb
ss
je
and
addr16
stc
andl
in
and
imul
ja
rolb
jmp
jno
outsb
gs
cmp
pop
jb
rolb
xchg
sahf
jns
jmp
mov
push
adc
rol
xchg
dec
nop
andb
mov
shll
xorb
hlt
push
loope
scas
fiadds
sub
in
loope
js
adc
and
jne
or
fucomp
push
mov
cli
xlat
int
fnsave
enter
xor
pusha
loope
test
emms
sar
pop
imul
jl
add
sub
dec
in
stos
je
dec
popa
push
iret
pop
pop
mov
outsl
cmpsl
rcll
out
test
jecxz
fdivl
xor
mov
mov
repnz
in
loopne
pop
outsb
loop
hlt
sarl
outsb
cmp
lret
sahf
fs
leave
sub
fstpl
subl
popa
pop
inc
out
sbb
ja
js
lock
push
inc
mov
xchg
mov
ds
es
sbb
inc
push
cld
lods
or
mov
pop
jmp
cmp
ret
cmpsl
imul
jle
dec
in
mov
lahf
les
leave
dec
out
in
ss
mov
xor
and
mov
lods
jbe
add
bound
xorb
add
fldl
les
push
mov
add
lds
iret
jp
movsb
cmp
stos
pop
repnz
ret
shrb
mov
push
and
adc
jecxz
dec
dec
lods
xorb
pop
dec
ret
mov
or
in
inc
xor
jge
fwait
mov
ja
movsl
out
rcrl
shll
sti
out
cmpl
inc
xchg
mov
aaa
sbbb
loop
in
repnz
arpl
mov
adc
outsl
andb
pop
jo
xor
call
sub
aam
cld
lods
popf
xor
lahf
sti
sbb
jmp
mov
imul
add
cmp
push
icebp
dec
push
repz
int3
mov
jae
stc
rol
add
cmpl
shrb
cmc
roll
fstl
add
and
add
cmp
jne
stos
addr16
iret
pop
mulb
inc
std
aam
clc
or
dec
sbb
sbb
ja
in
loop
mov
cmp
clc
inc
ss
insb
push
mov
aaa
out
neg
and
stos
jg
int
fs
pop
test
push
or
inc
inc
popa
daa
popf
js
mov
rclb
out
or
adc
popa
push
add
or
mov
jbe
lret
insb
ficoms
mov
sbb
mov
inc
test
in
jl
mov
inc
push
pop
aam
jle
inc
xchg
in
and
push
aad
cmp
scas
and
inc
into
rcrl
fstpt
jle
inc
enter
sub
outsl
push
inc
xchg
lcall
and
in
push
push
jo
cli
imul
or
mov
cmpsb
arpl
fnstcw
mov
lret
or
notb
in
lods
lcall
repz
jmp
push
mov
cmp
xor
add
cmpsb
dec
aas
and
sbb
mov
jmp
and
or
jle
pop
mov
adc
inc
dec
and
out
push
stos
lahf
or
lods
icebp
pop
push
imul
mov
sub
add
sub
mov
fistpll
mov
test
cmp
lret
aas
dec
into
push
xor
push
imul
sbb
test
scas
mov
pop
xchg
sbb
gs
xor
add
xor
pop
add
std
loop
cmp
insl
push
aad
lock
mov
push
daa
inc
in
inc
push
pop
mov
jo
pop
jmp
in
lcall
dec
dec
std
add
daa
movsb
mov
xchg
sbb
mov
or
push
insb
rcrb
ret
das
cmp
mov
mov
push
push
push
ja
in
push
rorb
sub
outsl
cld
sub
mov
jmp
adc
clc
repz
push
mov
sub
lret
push
hlt
pop
loop
mov
push
or
out
inc
add
xlat
jns
pop
mov
dec
addr16
push
jnp
and
fcomp
and
inc
sub
push
mov
push
cld
dec
sbb
adc
xchg
dec
inc
sbb
jmp
pop
adc
mov
les
fildll
push
xchg
xor
insl
jp
jns
fsts
push
jne
lahf
jns
iret
xor
cmpsb
into
xchg
mov
sub
push
inc
mov
sub
rcr
jae
dec
stc
call
lods
into
cmp
cmpsb
rcrl
sbb
leave
or
int
jo
in
push
add
cmp
stc
mov
inc
fsubrp
push
mul
pop
add
xor
adc
test
and
sbb
movsl
pop
ljmp
pop
insb
mov
subb
pop
lret
mov
adc
or
push
rcl
addr16
pop
xchg
inc
lcallw
push
pop
xor
adc
icebp
shlb
xor
je
pop
ds
push
dec
mov
out
fcom
inc
cmp
mov
inc
shll
jbe
push
cmc
mov
lods
cmc
in
stos
fildll
rorb
adc
add
insl
add
jbe
push
mov
jne
daa
mov
in
test
es
mov
popf
inc
xchg
cld
pop
xchg
add
cltd
into
mov
js
xor
lahf
aaa
cmp
negb
repnz
test
aam
xor
stos
and
sbb
test
pop
je
lcall
or
push
inc
mov
pushf
and
negl
jp
cwtl
jnp
jbe
loop
xor
outsb
mov
fimull
subb
mov
sbb
mov
test
imul
push
and
push
pop
mov
cltd
sbbb
jmp
pop
test
mov
xchg
int
pushf
xchg
pop
call
mov
or
add
add
stc
repz
hlt
movsb
rcll
mov
divl
enter
mov
scas
scas
sub
jmp
test
leave
pop
mov
add
nop
xchg
ds
push
push
or
jb
mov
cmpsl
cli
aaa
clc
mov
pushf
insb
outsl
sbb
movsl
lahf
and
sub
dec
xor
push
jp
lea
int
push
push
xchg
sub
push
cmp
call
jae
inc
or
xor
bound
add
fimull
xchg
insb
push
fdecstp
das
jae
inc
out
idivl
inc
dec
div
mov
shlb
push
xchg
lods
pop
cld
and
rcll
loope
das
aam
lcall
jge
lret
rcrb
xchg
adc
mov
cltd
cmpsl
fisubs
cmc
push
nop
inc
in
dec
loopne
mov
mov
andb
sub
cmp
mov
bound
in
jmp
lea
das
je
xor
inc
pop
sti
jg
es
out
es
std
xor
and
dec
xor
push
cltd
xor
test
mov
mov
jp
icebp
mov
daa
pop
cmp
imul
bnd
inc
cltd
popa
xchg
push
inc
cmp
gs
out
lods
dec
inc
push
sub
mov
jo
pop
fisubl
ss
popf
ljmp
movsbl
js
pushf
int
inc
jle
mov
daa
in
sub
jne
lods
dec
leave
test
push
rcll
lret
push
js
lods
mov
mull
cmp
lret
fadds
sbb
mov
into
mov
and
in
mov
pusha
movsl
inc
repnz
faddl
dec
push
adc
pushf
xor
lods
mov
lods
sub
push
dec
cmp
cmc
dec
stos
xchg
in
loope
lcall
push
inc
inc
adc
push
sub
sahf
andl
dec
scas
lcall
pop
jmp
jmp
insb
adc
stos
push
add
bound
dec
std
incb
leave
in
test
xor
test
scas
fwait
xchg
xor
jmp
int
lahf
shlb
nop
pop
lahf
or
pop
xlat
stos
in
sbb
dec
mov
daa
inc
fmul
imul
insl
sarl
and
aaa
cld
or
pop
dec
dec
sar
shrb
xchg
cmp
add
imul
pop
ret
or
or
sub
push
hlt
jno
jg
sub
aas
cmp
mov
gs
outsl
mov
test
shrb
ffree
push
in
xchg
ds
add
push
and
rcr
pop
push
scas
cmpl
xor
call
lret
push
cmc
xor
repnz
adc
and
repz
dec
mov
cmpsb
xlat
add
jp
xchg
pop
inc
cmpsb
cmp
std
js
repnz
mov
adc
repz
js
mov
fdivp
cs
mov
inc
data16
pop
cmp
mov
cld
test
add
dec
out
mov
sarb
iret
push
insl
fisubrl
call
pop
pop
bswap
addr16
push
sub
xor
dec
in
cld
jo
xor
fs
pop
fdivrl
mov
aas
loop
mov
fsubrs
test
inc
mull
inc
xchg
dec
and
data16
lret
mov
xchg
movsb
pop
cmp
aam
outsb
add
aas
imul
imul
pop
movsl
mov
jno
xor
pop
outsb
rorl
out
enter
fbld
stos
repz
cltd
fnstenv
test
jb
lods
ret
push
sbb
push
or
nop
loopne
jnp
ds
push
fs
ja
adc
push
mov
and
mov
mov
mov
mov
roll
jo
stc
sbb
jle
lea
cmp
dec
leave
cld
orb
mov
aas
mov
cmc
fsubs
push
lret
inc
cmp
pop
push
lock
mov
inc
lret
in
cmc
xchg
aad
lahf
js
loope
ds
arpl
jae
push
lds
pop
dec
dec
std
testb
cmp
jg
mov
cmp
lea
inc
xchg
inc
inc
jne
mov
pop
dec
mov
and
dec
push
dec
dec
adc
jns
ret
ror
fsts
fwait
shlb
xchg
call
pop
jp
jle
push
ljmp
jbe
daa
in
test
mov
inc
movsl
in
popf
mov
mov
pop
cmp
insl
gs
jmp
jg
cmp
test
inc
clc
push
push
pop
popf
ret
or
insl
daa
cmp
jbe
enter
inc
daa
jne
adc
lret
push
jb
loope
test
or
push
inc
data16
dec
into
notl
cmp
pop
out
mov
mov
lock
mov
xor
js
jnp
mov
jge
ljmp
lea
or
cmp
add
cmp
popa
adc
sti
iret
movsl
xchg
pushf
daa
cmp
bound
mov
rcrb
pop
adc
subw
jg
sahf
mov
mov
cld
push
jbe
pop
mov
dec
xchg
mov
int3
cmp
data16
sahf
lods
cmp
cwtl
xor
dec
stos
or
mov
jg
rolb
aas
nop
mov
cmpps
pop
std
add
dec
js
xor
jns
dec
lock
lods
cld
push
jecxz
lret
cli
fnstcw
mov
pop
loop
mov
jo
mov
rolb
cmp
dec
add
push
dec
cmp
int
push
out
cld
adc
movsl
push
mov
nop
jno
in
push
pop
or
lea
push
push
mov
add
pop
and
inc
or
cwtl
push
mov
pop
bound
pusha
and
test
push
lret
xchg
in
shl
mov
mov
adc
leave
imul
mov
mov
mov
repnz
js
js
or
xor
pop
fstpt
jg
push
pop
test
push
jnp
xor
les
jne
jmp
sub
fwait
mov
jge
aad
add
lock
cmp
popa
xor
div
pop
in
lahf
orl
movl
shll
sub
arpl
rorb
mov
std
push
insl
jge
jl,pn
push
fs
mov
inc
and
daa
jp
and
sbb
cli
test
and
arpl
push
mov
push
mov
divb
and
dec
fsubs
iret
pop
outsb
jns
or
movl
int
loop
je
aam
int3
inc
xor
push
jle
or
adc
clc
pop
xchg
xor
shlb
push
sahf
push
add
cmp
pop
cld
jge
enter
fsubp
mov
out
andl
popa
adc
ret
test
js
ds
mov
lea
jns
in
icebp
add
jg
sub
loopne
ds
and
imul
mov
gs
sub
jmp
shrb
add
push
mov
mov
in
mov
dec
mov
rcrl
sub
sub
dec
mov
outsl
cli
out
jle
cmp
jp
insb
std
fcmovne
shrb
daa
jne
rol
cmp
jecxz
lods
dec
sahf
outsl
sub
jnp
mov
mov
sbb
cmp
and
adc
scas
and
lea
cwtl
bound
mov
pushfw
sbbb
xor
jns
sahf
inc
fldcw
push
push
scas
push
out
dec
or
pop
mov
sahf
or
stc
scas
xchg
and
sub
insl
jns
and
sub
lea
mulb
cli
in
test
push
sub
sub
cmp
enter
xorl
mov
and
dec
push
mov
xor
push
repz
mov
push
jp
jb
push
mov
sti
jge
sarb
cmp
jmp
sub
mov
pop
push
or
sub
hlt
sbb
nopl
xlat
testb
call
rorb
popl
daa
sub
ret
sarl
inc
adc
js
cmc
imul
push
or
push
sub
add
mov
mov
push
or
mov
sub
movsb
xor
fists
or
push
inc
xor
pop
mov
outsl
rorb
add
into
data16
scas
orb
mov
outsb
loop
push
mov
pop
xorl
enter
push
push
lret
enter
adc
sbb
xor
sub
jle
loope
cld
movb
lret
xchg
movsl
lds
std
je
in
sbb
imull
je
les
sbb
xchg
nop
mov
das
fwait
xchg
inc
and
push
outsl
scas
lahf
aas
ret
pop
leave
insb
leave
sbb
mov
jne
lahf
js
xchg
or
cmp
ljmp
daa
and
addl
icebp
call
stos
lcall
inc
shlb
mov
mov
subb
jo
ret
push
jo
fsub
jmp
ret
and
xchg
xor
pop
or
add
mov
and
cmp
xor
in
fucomp
and
jmp
dec
jo
subb
adc
pop
push
lea
add
in
addr16
and
stos
stos
lock
out
adc
adc
push
sub
dec
mov
mov
and
ljmp
push
test
aad
rorb
jge
mov
shlb
jmp
cmpsl
jp
inc
imul
fisubrl
push
js
sub
adc
or
sub
aaa
rcr
jb
or
scas
xor
lcall
sbb
fwait
bound
jne
std
jns
push
and
sub
test
or
cmp
je
es
and
test
lret
mov
cmp
cmp
sbb
xor
cmc
xchg
ljmp
jl
mov
mov
cmc
mov
sub
jb
pop
inc
das
nop
cmp
mov
or
sar
xor
dec
push
rolb
or
mov
das
mov
and
bound
add
lds
out
mov
and
stos
push
jnp
inc
rcr
jb
inc
nop
fstpl
sahf
shll
cwtl
imul
or
lds
dec
jbe
xor
aaa
sub
mov
subl
and
adc
and
sub
cmp
aas
or
inc
cs
dec
cmc
psubq
cmp
cmpsl
fcom
cmp
jo
fwait
aas
mov
push
pop
repnz
lock
js
push
push
sahf
dec
inc
sbbl
mul
in
mov
enter
fs
loopne
fidivl
std
push
cli
sub
popf
fnstcw
cmpsl
fisubrs
imul
mov
cmp
xchg
adc
sub
jnp
icebp
insl
inc
bnd
mov
in
stos
xor
dec
mov
mov
cltd
mov
rol
cmc
xor
pop
adc
in
int
xchg
gs
sarl
jno
xor
inc
cwtl
cmc
push
das
jl
test
fildl
dec
jb
leave
or
orl
rcl
mov
cmpsb
sbb
jae
push
mov
jns
push
pop
mov
sub
cltd
rcll
xor
jmp
add
xor
inc
sub
mov
jns
inc
mov
shll
sub
sbb
mov
push
cmpsl
mov
adc
lock
push
pop
scas
dec
inc
mov
and
insb
mov
mov
dec
cld
mov
push
pop
and
imul
mov
mov
inc
push
push
mov
mov
push
fsts
stos
gs
ds
ds
mov
add
fs
sbb
movsb
in
addr16
sub
xor
xchg
pop
bound
and
xchg
dec
cmp
push
mov
sbb
add
sarl
bound
mov
mull
inc
mov
xor
mov
push
cmp
fcomps
iret
cmp
jae
data16
ljmp
lret
xchg
inc
pop
xor
ret
pop
cmp
decl
sti
mov
pusha
push
pop
and
and
mov
cmp
inc
cmp
cmp
push
jmp
mov
lcall
sub
cli
pop
inc
test
xchg
inc
cmp
lret
in
push
mov
enter
ljmp
stos
cs
orb
inc
inc
std
jecxz
stos
std
and
jle
stos
mov
jmp
push
pusha
or
pop
push
daa
movsb
lds
inc
outsb
popf
sahf
dec
inc
jne
cld
sub
cli
scas
mov
cmpsl
xchg
jae
mov
sbb
pop
pop
rcll
call
push
add
scas
adc
sahf
fsubl
xlat
inc
sbb
insl
push
fcoms
fmuls
repnz
fiaddl
jp
mov
pop
pop
xchg
xchg
xchg
mov
stc
pop
fcomi
mov
xrelease
out
shrl
mov
testl
adc
cmp
xor
lcall
push
js
test
inc
outsb
rolb
inc
dec
icebp
imull
in
xchg
inc
sbb
dec
jg
data16
xchg
rcll
repnz
xor
add
mov
js
iret
nop
js
cmpl
cmp
outsb
rorb
sub
aas
sub
fisubrs
lahf
out
mov
sarb
jns
jg
dec
add
jno
xchg
inc
jno
xor
dec
mov
jecxz
pop
dec
aaa
sbb
das
pop
mov
popa
sub
inc
nop
cmp
movsb
jp
ds
push
add
and
sub
adc
mov
mov
xchg
xchg
popf
subb
sub
and
int3
mov
testb
fimull
roll
xor
inc
push
inc
push
jbe
and
xor
push
push
xor
sahf
dec
jl
push
adcb
mov
xor
ret
arpl
ficoms
aas
clc
mov
sbb
push
out
nop
outsl
mov
xchg
ljmp
inc
adc
and
lret
fstpl
mov
mov
mov
or
jno
data16
mov
adc
cmp
or
rorb
sub
sbb
pusha
filds
dec
pop
out
popf
sbbb
mov
xchg
pop
mov
add
lock
out
cmp
dec
pop
xchg
fsub
inc
nop
add
lods
push
sbbb
popa
shrl
fbld
mov
fisubrl
ficoms
dec
roll
pop
sbb
ret
jmp
test
fwait
aad
cmp
test
lods
aas
xchg
or
push
js
jg
jecxz
cmpl
inc
popa
adc
mov
and
cltd
add
mov
stos
das
fcmovnb
mov
popa
add
loope
insb
stos
insl
mov
aam
stos
cmp
mov
fidivrs
sarl
mov
dec
inc
aas
or
gs
dec
jb
test
mov
lret
loope
mov
leave
sub
pusha
cmc
aas
cmpsl
lahf
int3
mov
dec
in
decl
add
test
mov
push
pop
add
xor
fsubrs
in
leave
and
inc
jae
sahf
stos
mov
imul
clc
fucom
pop
outsl
fs
sub
ffree
adc
dec
or
clc
jne
mov
decb
cwtl
push
int
push
nop
in
in
int
ljmp
outsb
mov
loop
push
mov
outsl
push
lahf
pop
mov
adc
fisubrs
push
movsb
scas
jbe
dec
sbb
data16
hlt
gs
cwtl
cmp
loopne
repnz
sar
jo
insl
arpl
mov
orl
jno
fbld
sbb
ret
sub
cmp
lea
ret
jae
fidivl
xchg
mov
into
and
cmc
in
aaa
dec
fsub
cmp
insl
pop
push
mov
into
and
je
imul
push
mov
rclb
sbb
mov
jp
push
pop
test
push
mov
sub
cmp
out
or
iret
stc
addr16
ja
in
jg
push
inc
mov
repz
adc
sbb
add
sbb
jae
pusha
push
test
loopne
rcrb
loope
mov
scas
subb
int3
cli
xlat
and
push
cmp
push
lods
cmovb
cmp
jp
inc
jb
loope
inc
adc
cmp
jl
mov
out
xor
imul
pop
mov
push
dec
cwtl
inc
fmuls
push
push
stos
jmp
dec
mov
mov
xchg
dec
adc
and
ja
jbe
loope
fidivs
sbb
push
lret
js
bound
sar
or
and
test
mov
cmp
xor
fldcw
pop
mov
dec
inc
iret
add
pop
or
push
cmpsb
jae
ljmp
push
mov
and
shl
dec
mov
mov
imul
fnstenv
mov
das
sarw
inc
loope
sbb
pop
lret
and
addr16
fwait
xchg
lea
in
mov
inc
dec
inc
xor
shrl
stc
les
add
pop
andl
push
ss
data16
jmp
and
and
mov
mov
adc
leave
insb
sub
inc
lds
aam
dec
add
in
xchg
inc
push
push
sbb
aam
ret
add
pop
mov
aaa
aaa
mov
and
or
jnp
cltd
xchg
sbb
mov
das
cmp
xor
jns
xchg
xor
add
lds
xor
js
ss
call
je
cmp
lock
sub
rcrb
in
push
arpl
in
adcl
add
loope
repz
fwait
pop
sbb
cmp
mov
or
add
popa
mov
add
sbb
xchg
sub
sbb
dec
out
add
jg
fisttpll
jge
xchg
add
repnz
push
les
inc
and
mov
adc
cli
sbb
cmc
rcr
fadd
test
mov
pop
jp
and
xor
arpl
jne
testb
adc
and
jl
or
arpl
jns
dec
mov
xor
nop
repz
sti
mov
pushf
push
mov
sahf
jbe
lret
xchg
adc
cltd
fisubrl
rolb
mov
in
push
sub
lret
mov
into
shll
push
cmp
sub
clc
push
dec
push
dec
mov
cmpsb
mov
cmp
mov
xchg
inc
xchg
iret
xchg
adcl
cld
jecxz
lahf
jbe
sbbl
insl
mov
lods
hlt
jmp
arpl
sti
repz
out
insl
mov
in
sub
test
push
icebp
loopne
ss
xchg
sbb
mov
cmpsl
adc
pop
ljmp
push
pop
dec
lret
mov
xchg
jge
jnp
iret
ss
imul
inc
jae
cld
add
and
fisubrl
xor
adc
mov
stc
lret
push
jmp
stos
cmovbe
jecxz
movsb
aas
outsb
ss
ret
movsb
and
or
notb
cmp
jo
push
or
push
add
xor
insb
and
pop
or
push
dec
push
iret
inc
add
cmp
pop
pop
dec
pushf
xchg
orl
and
push
adc
out
pop
mov
int3
mov
xchg
xchg
shrb
fs
mov
testb
adc
xchg
and
push
pushf
into
push
clc
lods
sbb
sub
lret
push
out
test
lret
lds
stos
into
and
jae
fisttpl
push
lock
dec
inc
popa
daa
dec
lock
mov
pop
hlt
daa
arpl
pusha
imulb
cmp
inc
and
mov
xchg
push
mov
addl
dec
loope
psllq
inc
xor
lcall
inc
pop
jle
pop
or
mov
sub
push
jbe
jl
fisttpl
gs
cmp
int3
xor
mov
pop
jl
jbe
mov
inc
mov
imul
jl
push
ret
lds
inc
adcb
push
push
data16
pop
ds
adc
fmull
inc
aad
mov
jmp
xchg
enter
dec
idivb
iret
mov
rcll
pushf
cmp
in
inc
jns
add
movsl
icebp
pop
fsubl
inc
das
cmp
int
ljmp
add
dec
xrelease
in
sub
xchg
xor
mov
enter
sbb
je
inc
sahf
mov
adc
add
cmpsl
cs
sbb
repz
adc
jle
rcll
mov
pop
popf
ds
fmulp
xor
roll
fsubl
loop
in
and
add
pop
bound
les
fildl
aam
in
sahf
add
dec
sbbl
push
jb
jne
xor
jl
lret
push
leave
ret
test
fisttpll
nop
shrb
xor
mov
mov
sti
pop
xor
addr16
shr
add
cmp
movsl
scas
mov
daa
cmpsl
push
mov
sub
out
sbb
push
mov
aaa
insl
and
fldt
incb
cmpsl
jp
les
out
jp
push
jb
daa
mov
jno
adc
lds
or
mov
push
es
lret
repnz
ret
push
pop
dec
jmp
cli
and
mov
push
mov
insb
fstl
mov
inc
and
push
sub
mov
mov
insl
ja
subl
iret
dec
pop
jnp
andl
pop
jp
scas
jo
sub
mov
std
nop
dec
push
mov
sub
cmpsb
and
mov
xor
sub
aaa
fistl
xor
outsb
xorl
lcall
xchg
mov
je
pop
push
jmp
cmpsl
jg
in
adc
lret
ds
or
daa
cmc
fbstp
push
mov
out
call
add
scas
iret
xchg
xor
push
push
loope
loope
inc
mov
or
shrb
or
loop
xor
je
cmpsl
mov
fwait
icebp
pop
inc
push
jmp
iret
and
xchg
xchg
je
cmpsb
int
or
pusha
daa
mov
lds
mov
inc
in
in
popa
jle
and
jl
mov
or
int3
jb
test
jge
lcall
rolb
push
js
bound
xor
loopne
push
call
lahf
lcall
dec
rorb
inc
test
cmp
push
cmp
mov
cmp
fldl
mov
mov
sbb
cmpsb
stos
in
out
jo
xor
es
dec
movb
xor
xchg
cmp
add
ret
xchg
sub
jge
adc
fsubl
pop
mov
flds
or
rorl
pop
mov
sub
out
mov
fistps
add
cmpsb
sbb
adc
dec
push
mov
aam
std
xorb
cmc
adc
ss
repnz
aaa
and
jmp
fildll
sahf
stc
mov
dec
add
ss
ljmp
cmp
and
lahf
lea
dec
int3
sub
ds
ret
jmp
jp
cmpsb
sub
mov
mov
cmp
push
adc
pop
out
sub
popf
test
adc
pop
push
mov
in
dec
cs
or
movsl
adc
rcr
sbb
adc
mov
in
shlb
adc
movsb
loopne
cmpsb
daa
sbb
and
push
push
xchg
mov
cmp
fmul
pop
test
dec
stos
adc
lahf
aam
cwtl
mov
or
jbe
cmpsl
mov
add
adcb
call
data16
sbbb
out
sarl
fs
push
int
test
iret
int
xchg
rcrl
push
pop
fsubs
adc
xor
and
cmp
lret
mov
stos
push
mov
or
mov
push
mov
test
add
fldt
sbb
popa
fldl
inc
bound
in
mov
mov
in
cmp
mov
xor
pop
aas
mov
pop
mov
jno
sarl
or
test
xchg
sbbl
enter
jle
inc
fcmovu
jmp
inc
out
test
xchg
add
mov
ljmp
mov
xor
rcr
sbb
or
popf
insl
rcr
add
iret
add
daa
push
pop
add
mov
push
mov
xchg
sbb
xchg
sub
ds
cmp
sub
aaa
inc
push
out
dec
jp
mov
rorb
mov
sti
cmpsl
xor
xor
mov
outsl
popa
xchg
lret
xor
xchg
movsb
pop
leave
dec
pop
addl
mov
ss
push
rorb
inc
jge
movsb
xor
cld
std
and
aaa
cwtl
outsl
out
mov
lods
mov
fisubl
inc
js
mov
fnstcw
sbbb
not
inc
inc
decl
jns
lahf
adc
fsubr
stc
mov
data16
mov
pop
shlb
mov
jg
outsl
call
mov
dec
mov
adcl
roll
sub
js
sub
out
cmc
sahf
pop
jno
sti
leave
adc
dec
outsb
jb
test
iret
or
inc
or
lea
mov
jbe
inc
mov
cmp
cmp
aam
cs
insb
aam
stos
js
xchg
ja
inc
inc
and
xchg
repnz
clc
subl
sbbb
xor
mov
scas
fwait
lcall
add
mov
or
jecxz
popa
iret
pop
lret
cmp
fistpll
pop
or
inc
outsb
andl
mov
in
lds
mov
shlb
add
adcl
ljmp
pop
stos
leave
dec
cli
int3
cltd
insl
lock
imul
stos
mov
xchg
inc
mov
dec
lock
dec
dec
inc
pop
add
lds
mov
cltd
lock
in
push
sbb
scas
push
bound
mov
jnp
lret
imul
pusha
push
add
mov
shll
call
mov
add
adc
push
ds
cltd
sbbl
pop
arpl
cld
xchg
icebp
push
pop
inc
sub
sub
mov
xchg
jl
cmp
lahf
out
lret
adc
popa
cmp
bound
jne
cmp
xchg
jno
push
mov
cs
mov
in
mov
cmp
push
sahf
push
pop
inc
stos
adc
inc
stos
int
dec
test
in
divb
sbb
cmp
test
push
sbb
and
mov
subl
clc
mov
inc
xor
mov
jp
jno
fwait
movsl
jb
dec
in
adc
es
xchg
lea
fs
jo
popa
xchg
sub
mov
das
push
insl
pop
mov
jbe
mov
mul
cmp
loop
and
subl
push
popf
fwait
sbb
xor
cld
jl
je
int
or
loope
addr16
mov
adc
sahf
rcrb
pusha
out
or
movsl
cmp
and
sub
jbe
jbe
scas
data16
subb
andl
lahf
jbe
xchg
jl
scas
push
aam
repnz
mov
std
in
ljmp
fs
shrl
and
faddl
and
iret
pushl
inc
call
dec
fiadds
fistpl
imul
cmpsl
pop
decb
cmp
inc
test
addr16
popa
mov
jne
fucom
rclb
mov
jne
lods
cmp
test
mov
orb
sub
cmp
popf
andl
stos
adc
sbb
hlt
push
ja
push
or
hlt
in
cmp
inc
je
sub
sub
add
pop
loopne
lods
das
push
mov
pop
out
scas
xor
mov
push
xor
jb
and
mov
xchg
xlat
mov
xchg
aad
push
aas
push
push
adc
divb
imul
lahf
inc
mov
daa
sub
xor
pop
sahf
push
sbb
out
es
shrl
mov
dec
and
ret
lahf
xorb
mov
mul
pop
call
fstps
pushf
push
or
cs
adc
imull
popf
mov
add
add
push
pop
push
mov
mov
and
inc
insl
loop
xchg
test
mov
int3
mov
test
cmpsl
mov
xor
adc
push
test
cmp
aaa
pop
mov
inc
scas
cli
pusha
es
ss
pop
lret
mov
pop
out
sub
mov
lahf
xor
ret
xor
xor
sbb
inc
gs
call
pop
int3
mov
lock
xor
ljmp
xchg
pop
mov
push
loop
mov
enter
lret
pop
jae
and
dec
mov
cmp
jo
out
sub
mov
jo
clc
cwtl
mov
testl
cltd
add
dec
and
imulb
add
and
xlat
and
mov
clc
and
jmp
call
sbb
xchg
scas
pop
pop
mov
jnp
out
rorl
and
ret
sub
iret
call
inc
in
push
pop
adc
sti
fidivrl
inc
rcrl
shll
sub
fidivs
lea
or
adc
imul
repz
xor
fwait
jmp
push
cmp
and
lock
repz
cmpsl
xchg
dec
cmpsb
repnz
xchg
jns
inc
adc
push
push
out
push
mov
sbb
aas
inc
ret
push
push
popa
aas
call
sahf
fstpl
out
pop
adc
jb
stos
sub
or
mov
xlat
or
pushf
xsavec
mov
xchg
cmp
xchg
adc
iret
addl
rclb
cmp
loopne
jg
mov
fadd
adc
test
inc
cmp
sub
cmpsl
popa
adc
pop
mov
test
sbb
dec
sub
mov
lods
aad
jns
stos
push
imul
in
jae
add
pop
push
mov
decb
push
cmp
xchg
mov
sbb
push
addr16
xchg
adc
mov
stos
adc
js
mov
les
stc
mov
xor
pop
mov
ja
and
push
into
add
loope
fs
sub
sbbb
cmc
orb
lret
xchg
insb
mov
stc
xlat
ljmp
ds
xor
inc
repz
push
cmp
out
sub
std
fs
push
aad
imul
and
xor
movsb
icebp
xchg
loope
cmpsb
movl
sub
decb
call
cmp
test
fld
sbb
cmp
iret
cmp
mov
mov
mov
mov
mov
cmpsb
cmp
jno
add
es
lock
mov
iret
stos
les
xchg
shll
push
cld
repz
cltd
daa
test
repnz
mov
mov
inc
mov
jl
sbb
ret
es
sub
hlt
push
rcrl
lea
mov
lods
dec
push
stos
jle
orl
scas
lods
cmpl
and
xchg
push
sbb
xor
xchg
dec
mov
mov
daa
fdivrs
mov
and
adc
inc
out
je
xor
push
cmp
repz
adc
add
pusha
int
mov
les
push
push
push
xchg
lods
mov
mov
or
lret
pushf
xor
jecxz
cmp
jo
repz
hlt
cmp
lods
inc
test
xlat
jp
scas
and
cmc
adc
and
mov
out
sahf
jae
pop
movsb
xchg
mov
and
jmp
out
mov
mov
lock
mov
pop
mov
mov
jb
fldt
jno
xchg
dec
cli
sti
sub
testb
insb
cmp
aaa
fwait
mov
stc
nop
cmp
aam
cmp
fiaddl
inc
adc
fs
out
lds
pop
std
xchg
jg
jmp
pop
pop
outsl
add
dec
fwait
jl
rorl
shrl
ds
push
rcl
scas
shr
lods
js
test
aaa
xchg
xlat
inc
test
pop
sbb
mov
mov
out
out
repz
jp
into
ret
ja
outsb
idivb
pop
cmp
sbb
adc
insb
xchg
incl
repnz
push
leave
aaa
mov
dec
jecxz
or
inc
or
jnp
loop
cmp
popl
out
push
nop
push
jno
faddl
sbb
xor
popf
and
push
inc
aad
jns
mov
xor
and
push
push
enter
sbb
cmc
loop
xor
outsl
inc
dec
xor
mov
or
out
ficomps
imul
adc
jno
xchg
cmp
and
xchg
test
xor
jge
icebp
xchg
decb
sub
xor
pop
push
mov
add
pop
pop
cmp
popa
imul
fisubl
call
mulb
ret
push
les
inc
fistps
add
lds
bound
jb
pop
sub
fs
push
mov
jae
fs
mov
dec
test
mov
stos
sub
std
nop
sub
xchg
jae
jmp
cmp
jns
rcr
dec
mov
pop
lret
fcomp
cmp
sub
jge
frndint
dec
mov
jl
pushf
stc
sbb
cmpsb
outsb
rcr
in
cmp
stos
mov
inc
pusha
shrb
out
inc
iret
cli
int
inc
arpl
add
aam
lods
lret
push
xor
lret
in
and
aas
lods
xchg
mov
fwait
stc
push
mov
xor
aad
call
xchg
lods
movsb
mov
outsl
or
les
xchg
mov
sub
add
lahf
sbb
repnz
dec
stc
out
cmp
dec
jo
add
js
xor
inc
sbb
test
fsubr
inc
ss
jbe
mov
pop
or
inc
pcmpgtb
dec
sub
insl
or
in
jnp
adc
fcmovne
mov
push
add
aaa
imul
jns
lahf
addr16
adc
push
fidivs
add
mov
rcrb
lea
lcall
test
lods
in
mov
sti
pop
xchg
mov
and
ja
mov
push
inc
xor
cmp
jmp
xlat
adc
out
das
jne
scas
mov
pushf
addr16
call
fcoml
fsub
loope
jo
stos
scas
fiaddl
xchg
push
sbb
in
sub
xchg
mov
out
xor
sbb
mov
adc
cmc
mov
inc
fsubr
xor
clc
lret
lods
and
cld
add
insb
pop
cmpsb
mov
pop
es
dec
subl
fnstsw
jecxz
test
fstps
mov
jmp
and
popa
mov
ret
jp
xchg
mov
mov
dec
inc
jb
dec
out
icebp
xlat
mov
push
sbb
in
xchg
sbb
add
mov
jle
jge
add
fs
sub
mov
xchg
repz
enter
sahf
or
inc
insb
mov
mov
sub
inc
loope
int
push
adcl
sub
lods
dec
pop
jl
ret
js
stos
mov
pushf
inc
and
insl
add
lret
cs
mov
and
jecxz
aad
mov
cvtdq2ps
fsubs
pop
ds
repnz
xchg
sbb
and
cmp
cwtl
aad
hlt
ljmp
xor
rorb
cmpb
mov
inc
sub
push
add
or
aaa
fistps
sbb
sub
fcmovnb
pusha
dec
and
mov
dec
rclb
mov
addr16
xor
mov
sub
sbb
cs
shlb
daa
push
jnp
leave
push
push
loop
das
movsb
popa
loop,pt
xlat
cmp
outsl
adc
add
enter
in
call
adc
sbb
sbb
aas
and
lea
add
std
cmp
pop
pop
or
push
jge
out
lcall
stc
mov
add
pop
xchg
xlat
aas
mov
pop
sbb
loop
sub
sbb
ss
aas
insb
push
fstpt
test
in
push
adc
xor
adc
into
rcrb
xchg
cmp
cmp
dec
cmovg
push
in
mov
or
sub
xor
or
inc
fidivrl
rorb
adc
cmp
rclb
fidivrl
mov
rolb
pop
imul
inc
stos
jl
add
xchg
lods
dec
or
imul
mov
mov
add
in
dec
jne
pop
ret
ss
push
ljmp
cltd
or
inc
mov
jle
add
push
sub
xor
mov
jmp
cmp
pop
jge
xchg
cs
or
insb
adc
imul
add
jecxz
fbld
outsb
jb
lcall
test
sbb
cmp
xor
and
mov
aam
lea
pop
cmp
pop
xchg
and
pop
pushf
pop
xor
sub
cld
pop
nop
push
scas
roll
or
adc
push
int
pushf
push
fwait
mov
leave
lods
mov
cmp
inc
and
scas
ds
mov
pushf
in
sbb
stos
sahf
jle
cmp
dec
jnp
push
iret
into
aas
and
lret
add
mov
dec
les
rorb
jg
enter
ja
scas
inc
scas
push
mov
fisubs
xchg
loope
ds
xor
insb
dec
xlat
nop
les
cmp
push
and
jno,pn
testb
ds
cli
jmp
stos
jp
stos
push
jp
pop
xchg
push
mov
sbbb
outsl
sbb
shlb
mov
adc
xor
jle
es
out
pop
jne
mov
fidivrl
faddp
xchg
scas
je
ljmp
loopne
or
cmc
inc
inc
xchg
pop
inc
imul
lahf
lea
cltd
int
pop
mov
pop
jg
mov
andl
mov
mov
cltd
rorb
or
lcall
cmc
push
inc
insl
xchg
mov
gs
push
shl
stc
lods
mov
test
lcall
addr16
push
fcmovne
cmpsl
clc
add
xchg
push
cli
ret
lret
setne
push
and
mov
lods
das
in
jae
sbb
jecxz
into
pop
push
mov
rorb
sti
cmp
mov
cmpsb
ds
cltd
clc
mov
jae
jne
xchg
jne
out
sbb
cwtl
sbb
or
and
and
mov
dec
sbb
popf
pop
jb
pop
inc
mov
inc
mov
lods
mov
sub
pop
sbb
and
push
in
std
jo
mov
xor
div
jbe
pop
dec
mov
gs
cmp
insl
jne
scas
add
push
inc
sbb
jle
stos
sbb
fldl
test
push
pusha
cmpsb
push
jle
repnz
sbb
loop
pop
test
mov
inc
jp
mov
and
jne
jle
insl
jge
inc
sub
mov
pop
pusha
test
sub
jle
add
les
and
imul
xor
inc
call
pop
add
leave
ss
mov
lods
in
dec
mov
mov
jge
xchg
jmp
iret
fmul
pop
repz
loop
loopne
or
push
adc
shll
nop
or
scas
dec
xor
inc
pop
jo
int
sub
mov
popf
test
sbb
insl
pop
js
out
lods
clc
dec
stos
cmpsb
lock
ficoms
add
xor
dec
roll
xchg
mov
cmp
fsub
out
xchg
xor
cli
add
xchg
adc
mov
xor
mov
mov
push
leave
xor
jle
mov
sub
rclb
fs
lcall
in
std
inc
inc
jbe
push
inc
mov
pop
std
popa
add
xor
rorl
or
sub
mov
pop
je
lret
adc
add
stos
into
pop
addl
mov
xor
aam
fs
add
mov
push
pop
outsl
xchg
or
xchg
inc
mov
dec
movsb
gs
xchg
insl
inc
lock
das
mov
outsb
or
outsl
sbb
xlat
sbb
mull
inc
sbb
insb
inc
clc
js
jle
adc
sub
dec
dec
xor
jmp
push
jns
mov
test
dec
into
jo
pushf
push
sbb
cld
loopne
inc
rorb
clc
test
push
push
jae
mov
inc
xor
lcall
dec
cmp
fidivrs
push
fs
adc
mov
ds
or
xor
test
xchg
popf
inc
push
xchg
fisttpl
push
push
into
pop
popf
jl
xchg
scas
insl
insl
loope
xchg
sbb
imul
push
outsb
stc
sbb
sbb
shl
fiadds
int3
rclb
and
adc
adc
lods
into
shlb
pushf
push
mov
jl
dec
movsl
and
aas
cwtl
es
add
push
mov
scas
cmp
aam
mov
outsl
jle
mov
xor
pop
push
hlt
sub
aam
mov
mov
cmp
mov
pushf
stos
daa
daa
fcmovb
xchg
rcr
imul
inc
mov
rep
xlat
adc
fdivs
xor
inc
push
pop
test
stc
inc
mov
mov
mov
in
cwtl
or
xchg
scas
pusha
adc
push
pop
or
loope
inc
lods
add
cmc
shlb
adc
rorl
ja
in
push
push
mov
mov
mov
jp
fisubl
lods
adc
cmpl
inc
jle
mov
jns
fsubs
sbb
ret
pop
and
xor
mov
xchg
cmp
pop
inc
pop
dec
lock
jns
loopne
leave
in
push
cmp
or
loopne
jmp
inc
add
mov
xorl
mov
push
sub
mov
sub
xor
fidivl
mov
mov
xor
add
bound
sbb
sarb
mov
xchg
jmp
or
jecxz
enter
inc
out
dec
rolb
fcoms
mov
push
jne
pop
mov
mov
das
jne
push
jo
movsl
sub
outsl
lea
mov
push
cmp
push
sahf
cmpl
and
aad
data16
or
push
jns
test
or
in
je
pop
fs
jns
loop
push
xor
and
mov
push
pop
xchg
cmp
cmp
loopne
inc
inc
xor
in
repz
add
cli
in
icebp
les
adc
push
shlb
adc
push
rcl
and
jg
mov
cmp
mov
jg
fcmovnb
xchg
sub
lods
daa
fisubrs
aad
push
lcall
push
xor
les
out
dec
push
xchg
stos
rcll
sub
rclb
and
or
std
daa
shlb
sbb
jns
cmpsb
shl
mov
jl
dec
or
or
insb
xor
mov
or
loopne
leave
push
and
and
or
sub
mov
scas
mov
xchg
movsb
les
stc
and
rorl
sbb
jge
clc
out
push
scas
fsubs
dec
insb
test
mov
stos
mov
pop
aam
mov
mov
outsl
dec
testl
mov
stc
sub
xchg
ja
lock
imul
add
sbb
mov
mov
dec
adc
add
push
pop
shll
leave
jg
jae
sub
jmp
ds
xchg
push
cmp
movsb
xor
sub
stos
sub
cmpsl
adc
xor
fsub
add
pushf
cmp
add
jmp
jae
adc
xor
imul
fldcw
and
mov
add
inc
roll
aam
nop
jle
movsl
scas
push
adc
xor
cmc
cmp
pop
adc
dec
xchg
in
add
sub
adc
iret
adc
repz
test
dec
jecxz
out
in
lock
popa
sub
mov
inc
add
sub
das
ss
dec
or
sbb
popf
mov
push
dec
daa
sub
jg
testl
shlb
cmp
xchg
ds
sbb
movsb
or
lret
jecxz
pop
cmp
fwait
cmp
cmc
mov
out
push
mov
mov
adc
jge
call
jns
sbb
bswap
mov
sti
jno
or
xor
out
jg
inc
rclb
push
or
mov
mov
cmp
or
xlat
xlat
add
sub
inc
cmpsb
mov
mov
mov
jl
add
xor
pop
ds
call
dec
shll
push
or
dec
pop
sub
or
nop
fiadds
pop
in
add
mov
shl
into
rclb
mov
in
mov
data16
add
jle
and
sub
mov
add
ror
dec
dec
loopne
orl
pop
inc
js
dec
sbb
sbb
sub
arpl
arpl
sahf
sub
cs
cltd
push
mov
ret
leave
test
jnp
xchg
sahf
sub
add
jnp
jne
out
push
lds
scas
fidivrs
add
sub
mov
mov
testl
adc
inc
jo
in
into
sbb
mov
es
xchg
xor
cmp
xchg
push
pop
push
fiaddl
adc
mov
popf
add
aaa
ror
cmp
movsb
cltd
std
and
and
mov
insl
icebp
mov
jge
mov
or
pop
out
dec
leave
stos
mov
dec
mov
push
ret
aaa
lahf
sahf
jle
pop
ficoml
hlt
sbb
xor
mov
sub
dec
push
xor
add
adc
and
test
fldt
pop
jp
insb
jb
hlt
xor
xchg
test
add
daa
pusha
bndstx
dec
and
pop
std
sub
jge
push
mov
pop
xchg
add
inc
loope
push
repnz
jp
inc
das
leave
fwait
xor
sbb
mov
fsubrl
sub
inc
lcall
xchg
jns
scas
add
je
push
shr
mov
sbbb
xchg
decl
sub
pushf
mov
mov
pop
pop
xchg
add
out
sbb
fcmove
je
sar
jl
xchg
pop
xor
fstpl
cmp
and
mov
out
push
call
mov
call
stc
push
fistpll
and
lret
mov
mov
adc
enter
xor
test
sbb
movl
push
xchg
and
or
jge
loopne
add
test
es
pop
xor
lahf
mov
xchg
push
jnp
mov
sarb
inc
and
inc
and
sub
fsubrp
cltd
and
and
loop
insb
leave
rorl
ds
sbb
int
adc
cmp
xchg
dec
pmaxub
adcl
sbb
sub
inc
pop
pusha
xor
fdivrl
popa
std
dec
popa
call
mov
xchg
cmp
xchg
divb
popa
cmpsl
aas
xor
cltd
xor
dec
jmp
lcall
push
ret
in
mov
sub
inc
sub
repz
adc
jg
mov
ret
add
mov
jmp
loopne
inc
cwtl
cmpsl
stc
and
jle
adc
adc
add
lods
repz
dec
ljmp
xor
inc
xchg
jg
xchg
mov
push
les
test
or
movsl
mov
fadd
test
push
sub
dec
inc
mov
sub
mov
cmpsl
push
icebp
mov
test
dec
lds
insl
sbb
jno
sbb
jne
insb
outsb
xchg
sub
cmp
outsb
dec
out
mov
imul
rol
add
add
cltd
mov
mov
mov
imul
icebp
data16
int
repz
outsl
shl
push
cli
mov
es
or
bnd
add
fld
fmuls
push
aad
insl
xorb
es
or
sub
lahf
jmp
sbb
cld
xor
jp
fcmovbe
lahf
js
cmp
pop
cmp
rcr
add
rcrl
mov
xor
stc
sub
movsl
ret
inc
xchg
fnstsw
add
adc
movsb
sub
insb
cld
sahf
out
lcall
adc
push
loop
test
movsl
js
mov
repz
and
add
das
insb
lcall
call
pop
mov
cmc
mov
clc
or
iret
movsl
inc
sbb
enter
push
cmpsl
cli
lcall
mov
movsl
xchg
test
pusha
fstpt
div
in
inc
jbe
popa
or
xor
je
roll
xor
stc
dec
aad
mov
test
inc
leave
imul
lret
int3
jae
ja
jns
cmp
add
sti
mov
mov
rcll
mov
scas
cmp
or
fcompl
or
rcrl
cmp
push
add
sahf
ss
sub
dec
test
xchg
movsb
add
ljmp
push
sbb
mov
xchg
je
mov
xchg
xchg
add
fcomps
inc
out
adc
cmpsl
pushf
or
pop
inc
push
popa
enter
mov
pop
cmp
das
mov
sub
and
mov
add
dec
daa
inc
movsb
mov
xor
mov
negl
inc
adc
xchg
push
lds
aam
outsb
rcrl
add
or
cmp
push
test
sub
and
repnz
xchg
rolb
int
pushf
push
into
ficoms
push
push
push
das
scas
pop
std
ret
push
and
sbb
lods
outsb
fwait
or
mov
pop
xor
add
xor
jno
inc
push
xor
popa
adc
rcrb
inc
xlat
popf
pushf
mov
dec
xor
xchg
xchg
es
cwtl
mov
adc
sti
sbb
jae
cmp
prefetchwt1
mov
xor
pop
add
dec
adc
cmc
insb
inc
push
sbb
xchg
inc
sub
jmp
js
mov
xor
xor
mov
inc
pusha
imul
jno
movsb
negb
repnz
xchg
fcoms
push
mov
mov
mov
ret
scas
lods
jae,pt
mov
pusha
stos
push
mov
cmp
andl
ret
dec
inc
inc
scas
pop
push
fiaddl
lret
or
push
inc
lea
dec
dec
inc
icebp
dec
inc
mov
push
cmpsl
scas
pop
sub
jbe
movsb
ja
lock
adc
pop
jmp
fwait
dec
xchg
sbb
push
inc
add
aaa
das
xchg
imul
addr16
outsb
xor
dec
push
or
xor
fmul
sbb
out
push
mov
xchg
out
bound
adc
xchg
cmp
shl
jg
in
push
pop
je
rcll
mov
push
pop
mov
out
outsl
je
pop
push
add
scas
sub
ds
xchg
lods
lock
loopne
addr16
dec
sti
ret
push
stos
ja
push
nop
mov
aam
add
dec
mov
js
test
lds
jmp
outsb
jmp
mov
dec
xchg
les
mov
rcrb
sub
rorb
mov
jge
movsb
push
out
lods
pop
pop
ret
addr16
int
xchg
shlb
xor
cld
pop
pop
inc
fstl
popa
lds
mul
cmp
subb
sarb
cwtl
pop
rdseed
adc
cmovne
or
sub
js
lds
sbb
push
or
mov
dec
cmp
daa
or
and
jns
ficomps
arpl
cs
jmp
sahf
stos
insl
add
lret
xchg
and
pop
rolb
jb
je
adc
aaa
enter
sahf
push
jns
imulb
cltd
lea
push
test
sub
jp
xchg
dec
dec
lahf
xchg
jno
dec
mov
cmp
test
fcompl
ret
cld
pop
and
in
pop
sub
pop
cmp
mov
movnti
jle,pn
mov
repz
loop
insl
jns
dec
mov
lret
test
das
sahf
lea
jbe
dec
aad
pusha
dec
xchg
lret
fildl
inc
aas
lods
and
ja
jb
cmp
aam
adc
pop
stos
dec
ud1
in
shlb
int
push
jbe
add
push
fs
xorl
sbb
lea
sub
repz
sbb
test
push
cltd
push
mov
jae
cs
push
mov
adc
dec
mov
adc
popa
add
leave
mov
in
out
sti
shr
cmp
push
cmc
stc
popf
xchg
adc
adc
mov
shll
in
jb
sbb
push
lods
inc
out
inc
push
mov
icebp
sub
dec
cmc
and
int
dec
sbb
push
adc
cwtl
fsub
lods
in
enter
push
jle
dec
inc
out
add
inc
out
testl
enter
xorb
je
mov
je
pop
or
dec
mov
add
adc
test
inc
inc
out
cs
lods
xor
sub
add
pop
lahf
mov
mov
dec
push
adc
int
xchg
or
aas
lret
dec
adc
inc
xchg
stos
push
test
movsl
mov
and
inc
repz
negl
ret
rclb
out
xor
add
out
sti
pop
and
jo
dec
dec
mov
scas
or
inc
push
movsl
pop
or
rorb
stos
jg
dec
int3
shr
aad
adc
mov
pop
sbb
outsb
out
push
sub
aas
ss
jmp
int3
movsl
cmpsl
jg
cmc
sahf
cmp
and
dec
push
push
cmc
dec
add
sti
xor
sbb
divl
ds
xchg
inc
pop
addr16
icebp
adc
mov
jb
pop
jmp
les
ds
imul
neg
push
push
pop
cwtl
sub
out
cmp
repnz
sub
fists
scas
xchg
push
lret
or
stos
inc
xor
rcll
pop
add
jl
jo
cwtl
sti
mov
test
pusha
xchg
test
cmpsb
push
cmp
out
add
sub
leave
andl
mov
push
daa
and
adc
addr16
and
pusha
mov
jno
fstps
or
out
insl
adcb
cwtl
mov
xchg
push
aas
fldl
push
mov
pop
jmp
popf
cmpsb
ljmp
cwtl
adc
sti
insb
xchg
out
push
and
cmp
jmp
push
or
loope
add
push
adc
inc
inc
addr16
lods
push
lret
in
pop
mov
and
push
pop
dec
cmp
sub
xlat
push
push
mov
push
inc
mov
cmp
aas
xchg
or
lock
adc
pop
push
out
fwait
in
lcall
sub
stc
xor
sub
bound
mov
add
pop
mov
dec
jns
loop
fnstsw
inc
jo
scas
cmp
jbe
sub
ljmp
add
out
sahf
jle
data16
add
lock
xchg
sub
lcall
pusha
push
sub
inc
or
cmp
push
xor
and
xor
mov
enter
aaa
xchg
stos
mov
cmp
out
mov
push
rorb
icebp
or
aas
and
ret
adcl
fwait
out
mov
add
push
adc
jecxz
sbb
cs
test
aad
rcll
xlat
jl
pop
test
cmpsb
dec
lret
and
or
lahf
cmp
sbb
sbb
daa
sub
lret
aad
daa
cli
inc
xor
jae
rcrb
push
shrl
lret
mov
inc
sbb
ucomiss
les
leave
ret
lds
or
dec
xchg
mov
daa
data16
jg
ficompl
mov
out
outsb
adc
jp
mov
addr16
subl
mov
adc
inc
pop
push
outsb
xor
in
fs
dec
out
push
sbb
sub
repz
call
xlat
adc
add
add
sbb
cmp
std
mov
call
inc
xchg
or
pushf
mov
mov
inc
or
inc
imul
adc
jle
sbb
imul
xlat
fdivrs
mov
inc
and
rcl
xchg
test
add
xor
neg
add
pop
push
pop
fistl
inc
push
and
mov
jns
xor
push
in
clc
lret
daa
shrb
mov
push
rcll
test
aam
std
into
in
dec
sbb
cwtl
testl
jb
pop
mov
fcomp
add
mov
sbb
sbb
fiadds
sbb
jmp
push
jb
pusha
dec
inc
movsl
decl
pushf
jmp
adc
push
fbld
sub
inc
adc
idiv
mov
xor
aaa
pop
jno
cwtl
pop
adc
test
aad
dec
mov
testb
sbb
inc
outsl
lcallw
fdivrp
cltd
mov
loope
push
or
jb
cmpsl
incl
imul
loopne
sub
mov
xchg
mov
sub
sahf
lea
and
xchg
lock
stos
les
out
stc
dec
or
outsb
test
mov
in
les
push
fstl
fcomps
addr16
jmp
jne
movsl
cmpsl
and
or
xor
pop
mov
adc
sub
popa
mov
sbb
fwait
lahf
mov
cmp
mov
push
push
ds
and
lods
xor
push
dec
pop
push
mov
in
adc
xchg
lret
fsubr
mov
pop
and
dec
add
cmpl
cmc
xlat
xchg
jnp
sbb
jne
add
jmp
js
das
mov
scas
lcall
dec
mov
mov
add
pop
in
inc
push
sub
add
mov
mov
bound
push
mov
adc
dec
test
pop
rcr
pop
scas
dec
movl
scas
cld
mov
pop
pop
jge
lods
aas
push
lcall
nop
dec
fists
inc
mov
sbb
fnstcw
sti
xor
sysret
jno
add
and
int3
ljmp
movsl
aad
or
movl
cmc
lea
lods
loopne
jmp
mov
pushf
push
divl
mov
cmp
and
add
ret
stos
lods
in
cli
cltd
test
outsl
jb
mov
dec
lods
testl
cmovl
sbb
and
push
icebp
mov
cmpsl
push
into
xlat
bound
adc
mov
movsb
addr16
ret
mov
shrl
aaa
dec
mov
sub
das
scas
outsb
or
aad
lcall
jmp
fs
int
loope
sbb
hlt
cltd
out
popf
lret
mov
cmp
fistps
loope
xchg
and
addr16
loopne
pop
adc
dec
mov
and
in
notl
mov
and
sbb
cmpsb
in
mov
adc
mov
movsbl
mov
cli
lods
mov
sti
addr16
ret
jne
imul
test
shll
mov
fcoml
andl
adc
daa
inc
inc
addr16
sbb
xlat
mov
dec
sbb
andb
out
push
mov
scas
dec
mov
jbe
mov
adc
mov
subb
dec
add
fbld
push
or
pop
or
push
les
fwait
dec
and
xchg
scas
out
and
int3
xchg
xor
scas
popa
sub
clc
and
rorl
lret
test
mov
daa
or
das
pop
pop
jmp
out
aaa
xlat
test
xchg
test
adc
mov
idivb
xor
lret
clc
iret
mov
scas
mov
fsubs
pop
outsb
mov
mov
pop
stc
inc
call
arpl
xor
test
leave
push
out
mov
clc
or
jp
js
push
stos
push
mov
and
xor
xchg
addr16
vxorps
lea
push
mov
orb
jns
xlat
or
dec
scas
test
aaa
mov
add
lock
int3
sti
sbb
sub
dec
lahf
xorl
mov
lock
mov
lds
xchg
add
fwait
adc
test
push
push
push
inc
sub
test
xchg
test
xchg
mov
push
mov
adc
xchg
pop
mov
xor
cltd
in
mov
mov
push
pop
fnsave
ja
gs
push
imul
lcall
push
or
adc
push
sbb
sub
mov
jg
pop
push
cmp
xchg
push
push
jl
add
adc
or
aaa
inc
jl
in
movsb
pop
pop
fsubrs
jle
xchg
nop
pop
sbb
sti
push
sbbl
inc
cmpsb
je
mov
mov
test
xchg
xchg
test
mov
outsl
cmp
or
icebp
out
add
adc
add
lcall
cmp
fstpl
orb
inc
in
lods
sub
adc
hlt
cmp
or
mov
jne
idivb
in
sub
sbb
jle
or
pushl
add
out
pop
xchg
mov
cmp
mov
stc
sbb
cltd
dec
stos
fdivp
xlat
jl
mov
mov
ret
clc
jge
incb
sbb
call
mov
or
out
ljmp
call
in
push
mov
outsb
fstl
sbbl
xor
lds
cmc
mul
lock
fldl
or
shlb
sub
aad
sbb
xchg
jbe
in
cmpsb
inc
sub
xchg
rcrl
vsqrtsd
mov
lret
push
imul
sbb
add
sbb
testb
ljmp
pop
mov
int3
scas
mov
int
clc
cmpl
js
lret
dec
dec
xchg
push
xorb
mov
or
mov
fisubrs
push
pusha
sub
push
fwait
adc
push
addr16
add
testb
push
lock
inc
loopne
sahf
shrl
inc
subl
fs
or
popf
jge
rcrb
jb
rcrb
sarl
and
call
mov
dec
and
dec
ret
sbb
ret
std
mov
fadds
and
and
imul
rcrl
dec
mov
or
cmc
je
xor
sti
sbb
pop
bnd
dec
icebp
inc
pop
xlat
adc
push
jl
popf
das
ja
jno
inc
fnstsw
pop
mov
cmc
test
iret
push
lods
jp
dec
movl
mov
sbb
add
mov
insb
lret
inc
push
push
dec
test
enter
pop
xor
aas
inc
xchg
arpl
dec
and
xor
into
mov
push
xor
enter
pusha
cld
fisubl
inc
or
cmp
and
data16
dec
aaa
dec
pop
nop
sub
pop
notb
inc
xor
dec
dec
push
pop
int3
push
add
mov
out
out
lods
rcpps
inc
jle
jne
mov
push
cltd
mov
cmp
adc
cmpsl
fisubrl
out
cltd
adcb
and
inc
outsb
xchg
add
popf
out
mov
sbb
cltd
xchg
aad
jge
mov
repz
pop
xchg
cwtl
pop
clc
fisttpl
jmp
out
out
cmpsl
ss
dec
add
iret
sbb
js
jp
insb
xlat
cmp
xor
sbb
lock
fdivrs
sub
jne
lret
sub
jnp
test
adc
cmpl
bound
mov
insl
push
movsb
mov
mov
not
xor
daa
sub
xor
add
sbb
test
cmp
cmp
lea
orl
fistpl
outsl
cmp
subl
shll
jno
xchg
fiadds
in
rorl
in
rcrl
daa
lcall
mov
stc
jo
pmullw
lods
pop
fsubp
clc
loope
stos
push
movsl
cwtl
or
push
pop
xchg
sub
jae
jns
dec
add
sbb
lea
aad
fnsave
stos
addl
testb
mov
iret
out
data16
out
jmp
add
dec
xor
stos
push
popf
mov
mov
pop
sarb
insl
adc
daa
push
stc
gs
push
sar
outsl
or
lods
leave
xor
jge
xchg
insb
inc
adc
outsl
stos
lods
cmp
pop
cmp
icebp
xlat
fadd
sub
mov
sarl
mov
movsb
pop
mov
cmpsb
jp
aas
add
popa
adc
lods
sbb
lret
or
cwtl
cmp
push
cwtl
jmp
dec
adc
add
add
lret
lds
cmpsb
sbb
sub
sub
insb
ja
push
insl
xchg
jecxz
jns
adc
xor
jl
mov
xor
inc
xchg
xchg
jmp
adc
and
jmp
mov
scas
stos
cmp
and
aam
add
ret
jp
clc
mov
sub
dec
inc
and
push
mov
or
xchg
jge
mov
out
jecxz
cmpsl
fnstenv
sbb
xor
push
hlt
pushf
and
les
sbb
jmp
xor
xchg
fists
cmp
adc
pop
loop
cmpsl
mov
cld
fdivrs
das
adc
inc
fdivrl
outsl
je
pop
es
mov
dec
icebp
and
jecxz
xor
mov
and
adc
push
xchg
xchg
xor
jle
out
push
push
jmp
das
andl
cwtl
jo
loope
inc
jmp
push
mov
lods
in
aad
int
add
lret
jae
loope
stos
sbb
mov
pop
movd
sahf
sub
loopne
pop
scas
out
leave
je
cmp
add
add
inc
imul
mov
es
out
pusha
push
fldcw
fildll
call
push
cs
adc
sar
ja
cmpsb
jmp
pop
fsubr
into
xchg
popa
or
cmp
xchg
das
jmp
cli
lods
cmp
mov
jne
dec
cmc
jnp
push
lret
jno
cmpb
repnz
inc
daa
and
jge
jo
cmp
jmp
fists
push
mov
adc
enter
mov
or
imul
mov
jb
xlat
jnp
rcll
fdivl
scas
xchg
test
mov
ret
gs
mov
out
sarb
sbb
subl
imul
add
push
mov
or
inc
jo
subb
cmp
pop
cld
lret
push
sbb
and
movsb
mov
adc
cwtl
and
mov
or
mov
mov
push
mov
xor
fiadds
mov
jae
out
shrb
sbb
pop
lock
pop
pop
jp
xor
add
mov
push
jns
cli
hlt
jmp
movsb
clc
fimuls
call
and
and
mov
stc
je
inc
add
int
xor
xor
pop
sbb
pop
cmpsl
cmpsl
mov
pop
test
in
filds
lcall
or
sub
mov
and
mov
popf
pop
mov
shl
add
add
cmp
lods
jge
lcall
xchg
jecxz
mov
pop
sub
lock
lret
cmp
add
and
jae
divb
insb
sbbb
xchg
push
test
jmp
push
jg
jp
jnp
mov
aad
inc
jmp
jp
rolb
loopne
inc
mov
ficompl
jecxz
xchg
jl
stos
daa
or
pushf
insl
xchg
les
mov
fldt
mov
adc
mov
xchg
dec
cmp
leave
cwtl
int
pop
out
dec
ljmp
nop
adc
jl
dec
mov
enter
xor
test
stos
push
add
pop
xchg
sahf
movsb
add
add
dec
outsl
clc
je
push
iret
cwtl
movsb
in
mov
out
daa
insb
hlt
mov
test
jb
add
movsl
call
pop
xchg
jne
fistps
fcoml
push
mov
xchg
cmpsb
and
cmpsb
cli
cltd
loope
cmp
mov
lock
jo
and
pop
jge
inc
mov
in
pushf
push
addb
push
call
stos
loop
cltd
jmp
cltd
or
imul
loope
loopne
adc
ds
daa
inc
mov
xlat
adc
or
movsl
lock
insl
int3
idivb
cmc
fwait
sub
imul
inc
push
mov
mov
and
in
loope
sub
cs
fwait
stos
inc
jmp
repnz
sbb
adcb
dec
jmp
xchg
int3
mov
pop
ljmp
inc
test
out
jns
popf
int3
sbb
xorl
push
ljmp
lods
std
inc
push
jl
mov
loope
aas
ret
dec
rorb
sbb
sub
cli
xchg
jle
pop
adc
cld
das
cmp
sarb
std
xchg
push
pop
xlat
push
lock
mov
mov
push
mov
xorb
sub
xor
stc
mov
les
push
lods
add
or
sub
mov
sbb
shll
daa
in
inc
les
scas
dec
pushf
das
sbb
jb
test
push
inc
xchg
fsubs
sub
dec
push
call
int
pop
ds
fsubs
arpl
sbb
sub
mov
push
lret
mov
cmc
xchg
mov
sbb
adc
inc
dec
fisubs
jg
stos
lds
repz
xchg
push
out
inc
in
jl
push
rcll
js
dec
inc
repz
dec
ja
es
jge
pop
adc
jecxz
jne
xchg
inc
hlt
jno
inc
insb
jmp
and
fwait
sbb
imul
insb
popl
add
popf
push
cltd
loop
pop
xchg
pop
gs
mov
jo
loop
scas
xor
lock
jl
xchg
ficoml
rorb
fldenv
adc
fwait
je
add
pop
cli
sbb
pop
test
aaa
mov
xchg
bswap
jl
cmpb
sbb
sub
lret
sbb
jge
cmpsb
xchg
inc
shlb
std
jns
and
or
push
sbbl
pop
loop
pop
gs
das
addb
lods
cld
and
sub
inc
int
and
jmp
cli
lcall
mov
jge
mov
stos
push
mov
and
push
push
pop
mov
in
bound
inc
ja
pop
lahf
or
dec
js
pop
fwait
inc
vmovd
jle
aaa
lret
popa
sbb
out
ja
mov
adc
push
push
test
sbb
shlb
clc
addb
out
push
std
adc
mov
mov
imul
into
into
scas
movsb
mov
pop
out
sbb
test
xlat
lods
out
loop
inc
jnp
dec
int
push
sarb
or
pop
add
fsubrs
push
mov
pop
mov
lods
ret
stc
mov
dec
mov
aas
in
add
sti
repnz
popf
shlb
add
adc
popf
aaa
iret
sbb
pop
mov
cli
or
jns
jl
sub
inc
cmp
ret
inc
mov
out
es
jae
add
fists
xlat
cmp
aad
fisttpll
fprem1
in
fistpl
jno
fsubrs
loopne
dec
cmp
stos
add
mov
adc
mov
dec
lock
xchg
xchg
and
jmp
pusha
pop
fsubl
cmp
add
jl
in
xor
movsl
jmp
jg
fistpll
mov
mov
xchg
xor
loopne
xchg
and
dec
sbb
lcall
jp
outsl
ds
cltd
mov
jno
push
add
int
pop
lahf
xor
loope
insl
xlat
mov
in
negb
lcall
out
mov
aas
dec
clc
int3
and
call
jno
or
pop
add
aam
in
push
imul
jno
ror
xchg
sbb
pop
clc
add
or
cmpsb
push
movsl
and
into
and
data16
inc
imul
mov
cmp
jecxz
cmc
lds
in
pushf
xchg
push
insb
add
xor
mov
mov
add
push
arpl
adc
shrl
lret
lahf
or
inc
pushf
push
aas
ds
xchg
mov
fildll
add
ret
pusha
in
fidivs
fs
movsb
dec
mov
jns
aas
pop
or
xor
or
addr16
xorb
jno
mov
ljmp
inc
inc
pushf
aad
daa
and
add
ds
jle
pusha
sub
inc
fs
jmp
lahf
pop
or
scas
pop
mov
je
add
and
cld
in
push
and
sahf
out
test
aaa
dec
notl
rolb
in
arpl
inc
sbb
mov
call
pop
ret
fstpt
sbbl
jecxz
test
mov
outsb
jp
xchg
dec
mov
mov
inc
fbstp
mov
sub
jno
lret
mov
loopne
rcrb
xor
add
xor
test
and
stos
scas
pop
push
inc
jl
cld
jne
rcr
and
movsl
out
pusha
fsubrs
addr16
dec
fcoml
push
nop
sub
cwtl
and
gs
mov
cmp
push
mov
sbb
in
xchg
sti
fidivrl
roll
xlat
mov
xorb
inc
mov
aas
sbb
mov
mov
fnclex
cmp
clc
les
mov
adc
jns
daa
shrb
adc
lahf
mulb
iret
loopne
int
push
mov
aad
mov
mov
xor
and
pop
mov
cmpsb
jle
inc
and
rolb
lea
loope
push
pop
std
dec
std
pop
div
push
inc
dec
mov
push
push
fdivrs
scas
bound
in
mov
jp
sub
dec
flds
aad
out
mov
les
cmp
cld
mov
inc
jge
aad
and
decb
out
fldl
and
imul
arpl
jb
test
inc
or
enter
or
and
movsb
add
jle
mov
xchg
mov
stos
push
push
sub
jg
out
andl
pop
pop
pop
pop
and
dec
jge
xchg
pop
pop
pop
pushw
out
inc
dec
xchg
jp
std
inc
mov
inc
jbe
jmp
sbb
call
mov
adc
mov
nop
dec
fstpt
inc
xchg
les
call
push
jnp
jl
test
ror
insl
xor
popf
mov
inc
mov
imul
mov
repz
xchg
outsb
pop
mov
push
or
sbb
fidivrl
int
push
pop
push
add
fmulp
push
add
sbb
lea
repnz
push
in
fnstcw
cmp
aaa
jl
jp
and
adc
cmp
xchg
je
incl
jmp
fidivrl
dec
lods
inc
dec
test
loopne
pop
cmp
fldcw
test
mov
push
lods
and
repnz
inc
add
jg
push
addb
loop
popa
test
sbb
nop
stos
xchg
fldcw
mov
dec
lret
mov
rorl
inc
mov
mov
cmp
lret
out
push
push
or
push
fdivr
fnstenv
cmp
stos
rcrl
adc
push
gs
imul
lcall
call
mov
jmp
adcl
sti
imul
iret
inc
outsb
mov
cmp
in
push
sbb
inc
cmp
cs
sbb
cmpsl
xchg
xlat
fists
stos
flds
cmp
pop
xor
repnz
mov
jnp
and
insl
push
sti
jmp
mov
xchg
jp
sahf
mov
jnp
aas
dec
sbb
aam
sbb
lahf
in
in
mov
or
nop
cmp
sbb
jl
push
ret
popf
mov
sub
inc
push
pop
sbb
xor
xchg
mov
inc
dec
fsub
sub
xchg
cltd
lcall
inc
xor
push
sub
push
xchg
sbb
and
jmp
sti
stc
imul
addr16
das
mov
sti
in
xchg
cmpsl
int3
lock
lret
or
fistps
arpl
cld
pop
xlat
jecxz
out
adc
and
dec
add
test
push
jp
mov
mov
popa
gs
mov
imul
leave
adc
cmpsl
das
test
movl
mov
sbbl
dec
jge
shr
inc
mov
test
mov
cmpsb
mov
ffree
cmpsb
movsl
dec
sti
push
cmp
inc
xchg
jmp
cmp
scas
push
incb
push
mov
ja
sub
lret
mov
es
xor
scas
or
cmp
lahf
or
push
nop
push
fwait
sti
mov
xor
call
xchg
enter
aaa
adc
push
ja
mov
jecxz
mov
fstps
std
rcrb
jle
push
not
sub
cmp
pop
mov
and
lret
mov
insb
mov
lods
xchg
cmp
cmp
and
dec
pop
xor
mov
paddsw
jp
in
or
out
mov
mov
or
daa
lcall
xchg
sbb
cmpsl
enter
test
outsb
add
sti
leave
outsb
lret
icebp
mov
sbb
add
jno
xchg
push
lea
add
stos
pop
pusha
int3
roll
scas
in
fnsave
enter
mov
lods
mov
or
push
cli
testb
or
xor
xchg
xor
cli
sahf
jb
bound
ret
push
test
pop
lea
sub
xor
enter
js
in
jae
aam
xchg
add
adc
and
leave
iret
push
stos
fwait
and
xchg
cmpsl
out
cltd
ret
ljmp
jp
adc
cmp
xor
push
mov
in
jo
test
xchg
mov
lret
jbe
into
dec
mov
in
mov
test
int3
call
push
xchg
xchg
adc
xchg
jo
in
out
or
jae
mov
jl
aas
jno
dec
data16
pop
std
ret
fdivp
fdivrl
mov
adc
movsl
add
push
push
hlt
iret
fisttps
mov
lods
mov
or
in
inc
fwait
clc
jmp
pop
enter
sub
lahf
or
cmp
jg
sub
dec
in
push
cmp
inc
out
dec
pop
imul
fists
out
sub
dec
mull
dec
movsb
ljmp
fwait
lsl
cwtl
je
cld
pop
inc
xor
subl
inc
pop
jp
mov
jae
mov
mov
push
mov
cmpsb
sub
fdivr
pop
jecxz
out
jmp
push
insl
sbb
mov
or
cmp
imull
cmc
fisubs
dec
popf
mov
cmp
arpl
clc
dec
mov
pushf
sub
test
and
inc
jnp
cmp
cmp
pop
gs
call
mov
push
sbb
stc
sbb
shlb
pushl
mov
sub
push
aaa
test
push
xchg
xchg
xchg
dec
sub
fwait
and
lock
xor
jno
lods
jp
jbe
int
scas
hlt
xor
jecxz
iret
ret
mov
scas
testl
fldl2t
xor
jne
push
mov
in
xchg
sbb
sub
xor
push
mov
mov
sub
mov
jbe
pop
fbstp
call
xchg
mov
test
jbe
push
stc
push
push
out
in
sbb
mov
push
icebp
mov
ret
lds
dec
ds
cmc
inc
xlat
sub
add
and
scas
fisttps
adc
xchg
test
add
aam
xor
stc
inc
adc
lds
js
add
out
adc
mulw
dec
sub
hlt
int
inc
test
and
out
or
fucomi
sbb
ss
jns
xchg
lret
mov
imul
shlb
mov
and
popa
fdivrp
xor
xor
mov
nop
and
jle
arpl
mov
xor
and
xor
std
mov
imul
and
les
cmp
dec
mov
testb
inc
ja
ds
cli
cmp
lock
xchg
lods
pop
popf
xchg
add
addl
rcrl
pop
or
pushf
scas
imul
push
jp
ss
mov
or
adc
push
stos
add
enter
lea
pop
mov
es
movsl
jno
mov
mov
cmpsb
and
int
add
and
out
mov
inc
lret
xor
mov
out
mov
jo
mov
push
dec
pop
or
repz
xlat
addb
cmp
sub
outsl
cmp
hlt
adc
aas
push
lret
dec
je
push
mov
mov
fmulp
inc
faddl
aaa
and
adc
movsl
push
mov
fsubrs
shlb
xchg
and
outsb
scas
jl
cmp
outsl
mov
inc
mov
push
inc
inc
jne
js
scas
flds
stc
sbb
stos
add
mov
adc
insl
push
inc
xchg
xor
sbb
xor
mov
xchg
ljmp
std
sbb
cmp
or
aas
mov
cmp
fadds
mov
std
out
adc
xor
sahf
xchg
call
jl
mov
xor
lods
add
mov
int3
imul
leave
lret
sub
and
mov
out
sbb
ret
mov
mov
dec
jno
pop
lret
xchg
xor
push
popa
push
or
jg
adc
mov
push
mov
inc
out
cli
dec
pop
enter
xchg
and
jo
push
sbb
sti
popf
scas
into
xor
inc
aaa
lcall
or
xor
rcr
jle
out
enter
adc
cmp
mov
int
sbb
cmpsl
or
test
out
mov
jp
dec
sbb
or
mov
xchg
or
jno
hlt
adc
jnp
int
les
or
or
or
lret
faddl
pop
mov
insb
adc
xlat
movsbl
add
adcb
dec
pop
cmc
sbb
adc
inc
sahf
push
into
popf
jl
cld
into
sahf
inc
sbb
addb
xor
jg
addr16
xchg
test
ds
mov
push
sti
push
push
cmp
insb
test
testl
cmpsl
fwait
mov
aam
cmp
mov
int
pop
xor
mov
hlt
mov
xor
mov
jbe
mov
pop
in
and
adc
mov
cwtl
push
sub
inc
jl
ret
inc
xchg
xchg
cmp
sub
mov
push
adcl
mov
mov
jg
sub
xorb
sub
ret
adc
push
aam
and
les
js
ficoml
pop
aas
inc
mov
jbe
nop
bndldx
sub
xchg
daa
sahf
and
pop
dec
in
mov
imul
div
shlb
pop
lock
in
out
shlb
sbb
fld
push
cwtl
loop
fcomps
mov
xor
sbbb
cmpsb
and
scas
ret
mov
inc
fbstp
adc
lcall
push
idivl
cmp
cmp
orl
idivb
daa
xchg
test
push
scas
adc
xor
xor
jmp
push
and
push
mov
mov
sub
outsl
nop
rcl
pop
sti
cmc
push
push
jecxz
sbb
push
loop
push
mov
push
jbe
mov
or
mov
add
pop
stos
xor
into
in
jns
xor
rorl
sub
jnp
addr16
pop
jne,pn
jg
sbb
cmp
jle
mov
sbb
stos
and
mov
je
lock
dec
loop
sub
mov
daa
or
out
adc
ds
cmp
xchg
cmc
mov
cmpsb
in
mov
out
ds
es
dec
cmova
jge
out
test
mov
stc
arpl
and
adc
sub
mov
inc
pop
addr16
xor
cld
lock
das
pop
pop
push
es
cmp
mov
mov
pop
or
in
add
bound
fldcw
lock
sti
cmp
jl
xor
cmp
aam
jne
lcall
bound
jl
shlb
cmpsl
sub
push
das
mov
mov
mov
xor
cmp
xor
nop
nop
xchg
push
int3
cwtl
getsec
push
shrl
stc
repnz
pop
xor
sbbl
mov
cmp
js
push
out
inc
imull
inc
dec
or
addr16
mov
iret
lds
js
cltd
add
xchg
pop
sbb
arpl
out
xchg
cmp
pop
in
int
out
xchg
or
ret
pop
mov
neg
call
mov
lods
jle
mov
iret
test
mov
shlb
arpl
ja
jle
or
sub
add
sbb
fadds
push
gs
dec
adc
xchg
cmp
cmc
data16
mov
jecxz
push
dec
imul
nop
popa
push
mov
xor
int3
cli
add
cmp
sbb
push
sahf
add
das
sbb
xor
adc
push
lcall
push
inc
cmp
jb
loopne
adc
int3
pop
stos
sub
cmp
cld
enter
sahf
inc
mov
add
and
push
sbb
cmp
nop
scas
pop
leave
pop
sbb
inc
test
scas
add
orl
aam
push
js,pt
add
mov
jle
fisubrl
mov
add
push
hlt
inc
add
sbb
lods
adc
pop
popa
mov
loope
shlb
sbb
xchg
cld
mov
pusha
or
mov
clc
sub
bound
pop
je
cmp
hlt
mov
pop
cmp
test
jae
lahf
inc
cmp
ja
jno
ds
insb
push
xlat
in
dec
push
lea
fiaddl
lea
loope
lea
scas
aad
mov
sbb
cmp
xlat
sub
outsl
aam
mov
ffreep
lahf
dec
sbb
gs
lret
or
and
inc
xchg
mov
les
cs
sbb
mov
add
iret
pop
mov
call
lods
add
xorb
fwait
mov
cli
je
adc
jmp
mov
loope
pop
push
adc
mov
lret
cltd
sbb
xor
int3
adc
jb
xchg
lods
sub
cmc
jb
and
lods
lock
cld
mov
pop
lods
icebp
mov
and
pop
aad
out
repnz
mov
decl
cmp
push
out
jns
pop
aam
fldenv
cltd
lcall
sbb
push
cmp
call
ss
pop
mov
sbbb
sub
mov
jno
jno
jbe
mov
sub
cmp
or
adc
adc
jecxz
dec
bound
and
mov
pop
add
daa
mov
pop
shll
int
jge
push
push
movl
nop
pop
int
sahf
pop
nop
mov
rolb
and
sbb
clts
pushf
mov
loope
or
aam
mull
adc
pop
cmp
xchg
adc
negl
add
and
mov
bound
pusha
cs
fs
cwtl
jbe
in
fwait
cltd
mov
fbld
in
fisubrl
sub
fisttpll
shrl
mov
mov
cltd
jns
mov
adc
icebp
cld
sarb
es
cmp
fs
jle
daa
cmpsb
mov
push
pop
push
stc
in
pusha
icebp
test
push
lret
fmuls
add
stos
std
and
adc
mov
je
loope
icebp
clc
loopne
mov
pop
cli
test
outsl
in
sbb
sub
arpl
ljmp
mov
and
xor
pusha
mov
imull
push
adc
ss
push
mov
mov
in
push
xlat
rclb
inc
mov
hlt
sahf
or
movsb
xlat
negl
scas
sbb
dec
mov
es
imul
decl
pop
loope,pt
push
fcomps
add
mov
imul
iret
popf
daa
clc
jnp
xchg
call
and
cmpsl
aaa
imul
jge
sahf
sub
lods
loope
cmpsb
mov
stos
insl
int
and
mov
push
jle
mov
mov
fidivl
mov
inc
push
sbb
cmp
jl
jmp
mov
imul
add
push
mov
shrb
cmp
mov
in
xchg
push
sbb
push
aas
lret
js
or
ljmp
sub
sub
pusha
dec
inc
lcall
jnp
mov
dec
push
in
dec
xor
xor
mov
lock
xchg
aam
xlat
rcrb
xor
lahf
movsl
mov
ljmp
xchg
lret
sbb
daa
test
mov
add
add
cmp
mov
push
mov
nop
testb
dec
inc
mov
push
add
mov
mov
mov
xchg
cmp
mov
mov
adc
lahf
xchg
ljmp
into
in
mov
cmpsb
pop
or
pop
xchg
in
fidivl
scas
mov
push
int
pop
dec
jne
dec
inc
cmp
bound
repnz
push
inc
fwait
movsb
out
jle
imul
jo
jb
stc
cmpsl
cmovns
ret
and
sbb
push
pop
dec
imull
ret
dec
mov
and
dec
fwait
jbe
sti
testl
pop
or
xchg
mov
stos
int3
aad
leave
lahf
jmp
aas
adc
fists
loop
lods
pop
xor
jne
mov
pop
imul
pop
sbb
cmpsl
imul
cmp
cld
jne
aam
inc
jae
js
mov
ss
cmpb
mov
lods
ret
test
aam
push
insl
mov
lods
andl
mov
arpl
aaa
adc
adc
daa
cs
ds
and
push
mov
fstsw
pop
mov
adc
movsb
pushf
dec
cmp
hlt
fldenv
das
scas
outsl
adcl
imul
mov
add
xchg
sub
daa
add
dec
ficoms
les
fisttpll
outsb
mov
mov
xlat
fisttpll
adc
inc
int3
add
pusha
inc
dec
fists
in
dec
mov
lea
testb
add
jge
mov
add
fldenv
xor
test
mov
es
sbb
cmp
jge
ss
xchg
xchg
rcr
mov
jl
lods
outsl
sub
and
cmp
hlt
cmp
repnz
add
test
out
movsw
ja
movsl
inc
outsb
nop
pop
pop
aam
lahf
aam
lods
test
test
inc
pop
lcall
mov
outsb
das
adc
mov
shlb
roll
jge
push
mov
sti
test
xor
sub
and
call
shll
fsubrp
pop
pop
cmp
adcl
iret
gs
mov
jno
or
jge
sbb
xor
inc
icebp
gs
dec
dec
jl
inc
xchg
scas
daa
adc
hlt
cmc
cmpsb
add
in
pop
mov
push
and
xchg
repz
pop
add
movsl
cmpsb
ds
and
xor
call
cmc
loopne
cltd
dec
js
ljmp
mov
jno
aaa
sbb
fnstenv
ja
sub
sub
fdivs
pop
pop
push
sbb
inc
sbb
nop
ja
pop
mov
lcall
cs
aas
xor
add
jno
mov
call
and
jo
mov
add
dec
jb
cmpsb
cld
popa
ret
pop
dec
pusha
enter
ret
cmp
nop
ret
cmp
fsubrp
and
inc
jno
les
jbe
popa
or
inc
pop
push
xchg
mov
push
ss
in
sar
xor
nop
pop
mov
test
mov
clc
dec
insb
jmp
loop
sub
mov
sub
int
cmpb
fimull
or
jp
clc
popf
jecxz
das
xlat
loope
scas
jle
push
add
mov
mov
loope
lds
push
or
pop
scas
jo
pop
dec
repz
lahf
xorl
aaa
testl
xlat
xchg
fnstsw
dec
out
lahf
jae
roll
cli
pop
and
jmp
cmp
in
bound
in
loope
sbb
push
lds
lahf
test
aad
inc
sub
push
movsl
pop
iret
cli
xchg
arpl
call
insl
aaa
adc
sub
adc
and
and
lock
out
jno
dec
xor
inc
mov
push
and
dec
and
cmp
gs
es
xchg
xor
xchg
fmul
jl
jmp
add
add
popa
mov
inc
mov
negb
inc
or
and
pop
inc
xchg
pop
cs
loopne
or
jbe
mov
rcrb
sbb
js
push
xor
or
cmp
rcll
jno
aaa
mov
aas
stos
sbb
ljmp
rorb
cld
sbb
add
sub
in
aas
mov
mov
mov
pop
mov
push
adc
rorl
scas
in
outsl
nop
jge
add
in
inc
out
aad
orl
rolb
xorb
mov
out
or
jmp
sub
leave
mov
ja
nop
push
dec
test
mov
sub
jns
pop
pusha
push
dec
adc
cmp
daa
lds
fimull
repz
cmpsb
cmpsl
nop
jecxz
loopne
and
aas
dec
pop
nop
scas
imul
adc
rol
inc
popa
adc
call
sbb
xor
push
jle
mov
sbb
mov
iret
add
shl
shll
pop
jl
sbb
add
xor
jl
and
push
sub
std
and
loope
test
mov
stc
mov
fdivrs
push
pop
or
jg
or
ret
xchg
sub
add
add
jmp
fstpl
sub
push
adc
mov
stos
add
jnp
or
cmc
cltd
sbb
lret
dec
aam
insb
adc
aam
xlat
adc
dec
in
cmp
cmp
cld
mov
icebp
insl
xor
sbb
sub
nop
xor
fnstcw
sbb
add
pop
gs
stc
loope
dec
bound
rclb
pop
or
cmpsb
mov
movsb
xchg
add
xor
xor
andl
sub
jbe
loopne,pn
rolb
and
popf
xchg
call
adc
fwait
aad
inc
insl
cmpb
pop
sub
push
cmp
xchg
xor
pop
push
push
popa
frstor
ss
ffreep
rcll
imul
sub
push
mov
std
movsb
ret
subb
pop
je
jge
stos
mov
push
movsl
mov
cmp
push
lret
in
cltd
mov
sub
and
jp
sub
icebp
mov
sbb
pop
stc
pusha
push
xacquire
mov
insl
inc
mov
mov
fnstenv
inc
pushf
jns
sbb
pop
dec
push
sub
lret
ret
stos
clc
mov
xor
dec
sub
ss
cmpsb
jae
pop
roll
mov
sti
mov
mov
jge
mov
divb
mov
xor
cmp
xor
xor
push
lds
cmp
mov
out
insl
inc
mov
movsl
hlt
jmp
fimuls
mov
sbb
outsl
jmp
pop
sub
out
push
mov
or
stos
mov
push
loopne
dec
xchg
push
fucomi
xlat
jbe
and
xor
jge
shrl
pop
pop
xlat
in
aaa
cmpsb
sbb
neg
icebp
fisubrl
xor
bnd
and
push
leave
adc
icebp
in
pushl
fidivl
neg
ds
xchg
imul
xchg
out
and
and
orl
adc
dec
int3
inc
adc
push
lar
cs
mov
dec
cmpsl
movsl
addr16
mov
fcoms
jl
shlb
and
sub
stos
fxch
dec
add
jmp
jecxz
push
cmp
dec
addr16
fucom
out
fidivl
sub
xor
or
jbe
out
xchg
dec
fisttpll
mov
sti
sbb
fwait
mov
push
add
std
jp
and
fst
ret
dec
lret
js
xchg
dec
imul
xchg
pusha
aaa
icebp
xchg
mov
sub
outsb
adc
lock
lret
mov
lods
jbe
inc
adc
or
xchg
insb
ror
movsb
int
aam
sahf
dec
xchg
lods
lcall
sub
xor
rolb
adc
xchg
leave
test
pushf
push
fnstenv
js
jmp
and
sbb
mov
loope
js
and
loop
cmpsl
clc
cmp
or
inc
loop
clc
sbb
insb
inc
sbb
push
jp
popf
cmp
out
lret
xchg
xlat
cmpsl
xor
cmpsl
andb
mov
ret
sbbl
pop
dec
pushf
or
mov
push
mov
sub
xchg
fists
insl
lret
int
shll
ljmp
sbb
sahf
sbbb
push
push
and
loopne
mov
xchg
fsub
fadd
jge
aaa
mov
cmp
mov
out
loop
mov
xor
sbb
jle
out
inc
cmpsb
stos
out
mov
adc
es
rclb
jae
pop
xlat
lock
lea
mov
xor
jl
jle
in
and
inc
aas
sub
fcom
negl
sub
pop
adc
pop
dec
inc
sub
lods
cmpsb
aam
dec
stc
adc
mov
xor
cmc
cmp
add
cmp
push
sub
sbb
jo
aaa
bound
stos
stos
int
loop
imul
adc
repnz
adc
out
lahf
aam
stos
or
cs
loope
sbb
xchg
mov
addb
xor
add
lea
cmp
sub
nop
pusha
pop
sub
ljmp
lods
ds
scas
dec
aad
popa
and
in
push
pop
adc
addl
aas
rclb
fnsave
lret
adc
xchg
scas
lock
jo
icebp
in
jns
pusha
das
and
int3
push
sub
and
mov
test
iret
mov
jg
loop
lods
jb
ss
inc
xor
call
jne
into
shr
ret
cli
and
loopne
sbbb
dec
loope
or
sti
cld
cmp
andl
mov
push
jl
out
rcrb
mov
dec
fisubs
mov
fiadds
rcll
inc
aam
out
notl
fwait
cmp
xor
xchg
pop
mov
call
add
mov
cli
and
inc
xchg
test
fistl
inc
cmp
inc
in
jno
vmread
aam
mov
dec
xor
adc
pop
incl
mov
adc
mov
adc
incl
adc
mov
jns
sarb
xor
int
cltd
add
pop
mov
int
jg
dec
or
dec
xchg
inc
inc
xchg
loope
adc
jne
lods
sub
xchg
js
mov
outsb
cmp
inc
push
adc
mov
and
sub
enter
into
test
adc
pusha
dec
addr16
push
bswap
xor
rolb
aad
or
sbb
sub
repnz
cmp
lods
and
dec
push
pop
movsb
pop
stos
mov
jb,pn
sbb
stos
fisttpll
push
cltd
sahf
dec
mov
mov
lahf
stos
inc
inc
push
mov
pop
sub
jb
inc
mov
dec
xchg
pop
inc
mov
dec
mov
mov
test
xor
xchg
cmp
or
sub
mov
sbb
sbb
out
xchg
rcll
mov
xlat
xor
divl
sub
int3
clc
mov
call
sub
and
mov
push
mov
xchg
dec
jge
push
inc
jge
popa
xor
xor
shrb
jno
lds
mov
fnstsw
pushf
push
stos
scas
imul
and
adc
dec
insl
in
call
pushf
dec
mov
scas
pop
scas
cmpl
or
add
jno
ret
adc
jge
mov
test
mov
and
in
jb
lret
jecxz
das
int3
loopne
mov
mov
adc
and
lret
mov
mov
mov
sbb
pop
adc
cwtl
or
and
add
dec
xor
dec
pop
dec
dec
cld
shl
sbb
add
push
push
jae
sbb
mov
addr16
pushf
test
mov
and
adc
mov
imul
test
fwait
jbe
mov
lret
imulb
cs
mov
jae
dec
or
aas
lock
pop
mov
aam
sbb
jp
pop
aad
scas
sbb
scas
int
xor
dec
jl
lret
movsb
movsbl
icebp
and
lea
inc
push
jle
mov
cltd
xor
test
inc
mov
gs
loop
pushl
push
adc
mov
push
inc
ret
and
rdpmc
mov
pop
push
cltd
pop
sahf
push
inc
push
cmpl
xchg
push
xor
inc
cmp
stc
sub
cs
xor
sti
js
insb
movsl
in
mov
xchg
adc
insb
ss
and
ljmp
mov
neg
mov
or
mov
cmp
sti
xchg
js
mov
in
into
iret
fisttpl
orl
lods
jae
fs
dec
jmp
adc
add
jle
push
bound
shl
jne
ret
sbb
fwait
mov
je
mov
or
add
jge
inc
ljmp
arpl
dec
into
mov
scas
sahf
hlt
lods
mov
xor
xor
push
sub
addr16
aaa
sub
ja
clc
ds
push
xchg
jp
out
arpl
mov
cli
ljmp
add
push
cmp
adc
sub
fwait
ret
cltd
out
test
loope
mov
lret
cwtl
ljmp
and
mov
jge
setg
es
inc
jle
xor
pop
cwtl
jne
fldt
xchg
loop
daa
std
clc
sub
xor
mov
dec
stos
mov
popa
orl
vfnmadd231pd
lret
cmp
mov
repz
int3
and
int
sub
cmp
jecxz
out
mov
in
mov
lahf
outsb
insl
or
insl
adc
shlb
adc
int3
fisttps
mov
pusha
sbb
add
mov
push
pop
sahf
arpl
mov
rcrb
fadds
pop
push
push
data16
push
sub
mov
out
ficompl
cmp
outsb
lahf
mov
shll
lea
mov
rcll
adc
int
add
jge
shl
sub
pop
ret
or
dec
jnp
enter
xchg
xchg
pop
cmp
std
sub
and
pop
and
xor
dec
or
idivl
pop
inc
push
dec
es
int3
sbb
push
sti
call
mov
cmc
ret
movsb
mov
cwtl
stos
cltd
xlat
in
imul
test
jns
aam
inc
fs
fnstcw
scas
out
cmpsb
les
repnz
lret
inc
ror
ljmp
add
popf
jns
push
pop
pop
sbb
add
or
jne
out
call
push
and
fwait
mov
fidivs
and
and
aas
jg
xchg
push
outsl
test
pushl
hlt
imul
lahf
orl
ret
sbb
stc
lods
and
pop
jecxz
sub
mov
cmp
lcall
stos
imul
inc
ss
movsb
loope
aam
cwtl
je
test
insl
jo
or
sub
scas
pop
fstps
test
arpl
push
xchg
test
nop
inc
push
mov
hlt
cmp
popf
addr16
cltd
imul
scas
jg
lds
jbe
jg
pop
add
push
xchg
bound
ja
add
xorl
push
in
xchg
scas
mov
movsl
mov
repnz
cmp
iret
mov
mov
fs
mov
test
jne
jae
xchg
in
repnz
adc
rcr
mov
add
shlb
mov
imulb
xor
pop
sahf
pop
and
jmp
adc
jae
inc
mov
or
inc
cltd
xor
fwait
je
fmull
mov
js
fnstsw
push
mov
and
out
scas
mov
adc
xchg
das
jge
xchg
movsb
dec
pop
imul
sub
aad
sbb
sbb
pop
je
push
adc
and
inc
push
stos
iret
ss
push
push
inc
into
xor
test
adc
sbbb
aas
sub
popf
test
add
ret
popf
ret
pop
sbb
pop
icebp
jae
xor
mov
stos
movsl
mov
fcom
test
nop
pop
sub
push
pop
bound
pop
mov
je
rorl
mov
add
adc
push
jbe
mov
mov
daa
adc
pop
scas
jnp
mov
insl
push
mov
clc
lea
jns
gs
cmp
push
test
push
and
add
cmp
fdivs
mov
xor
inc
aas
add
int
and
shrb
cmp
dec
push
xor
iret
dec
pop
imulb
imul
mov
fdivr
mov
jge
mov
pop
popa
xchg
in
daa
jb
test
adc
stc
icebp
nop
mulb
mov
pop
in
add
icebp
sbb
mov
jg
or
scas
jmp
mov
lcall
jecxz
pop
mov
ficoml
cmp
test
cmp
mov
pop
daa
mov
mov
inc
push
mov
clc
lcall
sar
cmp
in
mov
outsb
cmp
orl
pop
adcb
out
or
mov
jecxz
inc
mov
and
inc
js
jns
xchg
or
aam
andb
or
jae
sbb
inc
pop
adc
inc
dec
and
ss
push
jmp
mov
lds
ret
cwtl
cld
out
jmp
add
and
mov
add
addr16
jae
push
call
cmp
pop
rcrl
inc
mov
xchg
ljmp
cmp
mov
imul
jmp
push
push
inc
sub
outsl
mov
mov
mov
adc
xorl
cmpsl
stos
out
movsb
cmp
xchg
mov
ja
mov
dec
das
adc
data16
lea
icebp
fdivl
jb
cmpsb
xor
pop
sub
mov
xchg
sub
daa
lock
xchg
es
dec
cmp
movsl
xchg
inc
bound
mov
adc
pop
push
sub
xchg
mov
cmpsb
and
fwait
in
leave
pop
jb
movsl
aam
dec
fdiv
pop
sbb
or
lret
inc
xchg
add
popa
mov
jae
cmp
jae
in
xchg
jle
loope
in
mov
xchg
and
mov
mov
cmp
rol
dec
add
cmp
add
repnz
and
jo
mov
mov
mov
xlat
std
mov
fcomi
shrl
shlb
xchg
out
inc
mov
rcr
rolw
into
jle
rol
push
jmp
nop
sub
push
les
sbb
mov
mov
xor
repz
push
stos
pusha
and
pushf
pop
popf
sti
leave
cmp
push
push
daa
test
sbb
scas
jbe
push
and
aam
les
xor
sbb
pop
or
jg
addr16
lea
pop
xchg
into
cmpsl
mov
push
xchg
test
adc
sbb
rolb
dec
rolb
jns
leave
in
std
sbb
rcrl
mov
scas
cli
lcall
and
aas
imul
xor
push
cli
push
imul
push
or
inc
or
arpl
jl
cvttps2pi
aad
test
adc
test
xchg
mov
repnz
rol
pop
sbb
sahf
sub
xchg
stos
mov
or
xchg
and
shrl
sbb
push
ret
pop
test
inc
xchg
pusha
pusha
dec
movsl
aam
xchg
jbe
ss
push
jge
fistpl
mov
inc
enter
jns
shld
mov
insl
flds
push
mov
mov
std
mov
pop
mov
enter
dec
dec
or
sbb
shl
xlat
lcall
pop
push
es
jbe
repz
sahf
inc
adc
cmp
arpl
xchg
add
shrl
mov
incb
jo
xchg
xlat
adc
mov
inc
jnp
xchg
sahf
jbe
jo
std
mov
daa
sbb
jnp
cmp
lret
mov
push
jns
sarb
xor
mov
fnstsw
mov
int
orb
sub
mov
mov
je
mov
loope
rcr
mov
pop
jae
pop
mov
int
mov
rclb
jb
dec
pop
sbb
add
lret
or
or
test
fldt
int3
mov
mov
dec
ds
mov
sar
gs
push
iret
je
lret
jl
aad
inc
xor
shrb
inc
cmp
outsb
loopne
test
cwtl
adc
jge
xor
jmp
adc
jo
arpl
movsl
leave
xor
scas
xor
cltd
push
das
jl
lea
sbb
je
xor
mov
dec
mov
xchg
insl
jle
mov
push
adc
cmpsb
fadds
popf
inc
mov
push
in
fbstp
ret
mov
jmp
pop
fcmovne
sub
stos
ret
mov
sub
jne
leave
and
lods
sti
aas
fs
pushl
sbb
icebp
adc
dec
mov
adcb
in
mov
xchg
xchg
aam
nop
mov
mov
sbb
outsl
nop
jno
in
sub
cmp
xchg
in
mov
and
xor
cwtl
pop
aam
inc
loopne
mov
lock
aad
cld
arpl
lret
into
xor
or
pop
jb
jg
xchg
or
int
mov
hlt
sub
imul
adc
jg
pop
sub
xchg
pop
jl,pn
mov
cmp
pop
pop
xchg
rorl
xchg
pop
in
jp
sbb
jp
adc
pusha
xor
js
inc
out
jl
cmpsb
jecxz
mov
dec
dec
xchg
add
sub
and
add
lods
dec
and
int3
insl
push
mov
shrb
mov
sbb
mov
add
push
ret
int
dec
fwait
and
out
or
subb
fnsave
arpl
ja
adc
pushf
lret
push
mov
add
lret
arpl
jne
loope
test
rcll
test
adc
adc
mov
sub
mov
fwait
pop
adc
inc
jb
in
lret
arpl
popf
sbb
pushf
popf
insl
xchg
mov
mov
xchg
cmpsl
sbb
pop
push
pop
jmp
adc
mov
mov
xchg
int
mov
rol
leave
loopne
sub
add
jbe
fstps
or
outsb
sbb
sbb
fucomp
cmpsb
rcrb
je
xor
mov
mov
mov
div
pop
lret
es
lcall
xchg
add
imul
les
imulb
dec
sahf
enter
arpl
jno
fimull
push
mov
lock
movsb
imul
cmp
add
mov
movsl
movl
std
fcomi
and
push
scas
out
mov
push
cltd
cmp
insl
mov
adc
xlat
or
hlt
hlt
jb
pusha
dec
jmp
in
pop
arpl
jl
xor
call
cmp
fistpll
sub
xchg
inc
jmp
mov
push
cmpsl
cmp
inc
dec
push
mov
push
sbb
dec
pop
out
enter
int
mov
xchg
jno
add
cld
aam
testl
aam
inc
popa
dec
pusha
clc
push
mov
cmp
ret
imul
push
les
ljmp
cmc
or
cmp
and
mov
insb
iret
inc
add
ret
sti
mov
pop
int3
iret
iret
aam
loope
jno
mov
xchg
mov
push
adc
das
jns
push
and
cltd
sub
xor
mov
lret
rcr
fwait
stos
mov
test
jecxz
sbb
xor
ljmp
jae
push
dec
pop
jo
cltd
add
mov
and
inc
ja
rcrl
pop
inc
mov
pop
aad
cmp
lock
mov
test
stos
jne
push
mov
in
dec
inc
sbb
ficoml
pop
sarb
mov
sub
insl
add
daa
in
sub
lret
arpl
dec
dec
in
out
arpl
mov
js
mov
js
mov
push
dec
pop
add
scas
fmull
mov
sub
int
dec
into
sbb
push
sarb
imul
sbb
add
mov
fwait
jl
icebp
xchg
repnz
mov
jno
pop
mov
dec
mov
and
jl
das
arpl
sub
xchg
xlat
cmp
leave
into
inc
mov
add
and
ret
addr16
mov
es
xchg
andl
inc
bound
mov
mull
push
cmp
xor
test
adc
jecxz
inc
add
push
outsb
add
nop
dec
subl
or
ljmp
jge
leave
jnp
out
mov
jno
jbe
adc
out
out
pop
fdivrl
jmp
movl
pop
into
dec
fcmove
shlb
jmp
jae
push
movsb
mov
test
mov
sub
add
adc
cmp
ja
std
out
rorl
int3
adc
push
bound
push
or
mov
jl
lcall
and
pop
ljmp
ljmp
mov
sti
je
lahf
xchg
scas
jo
stos
out
pop
cmpsb
das
jno
je
or
xor
jmp
adc
jbe
add
daa
xor
jae
fcomi
xlat
mov
fdivrs
cltd
mov
sbb
dec
xor
sub
in
pop
movb
cwtl
ja
and
add
je
enter
movsl
lods
ds
sub
xchg
jg
test
mov
add
dec
sti
inc
and
in
mov
fdiv
leave
rcrl
adc
cmpsb
inc
out
test
out
rolb
cmp
and
jns
jno,pn
xchg
xlat
outsl
push
fisubrl
pop
lea
stc
sahf
je
jo
repnz
push
xchg
push
add
sbb
adc
stc
push
xchg
in
or
lock
sub
hlt
and
pop
movsl
jl
cs
repnz
je
adc
push
push
sbb
fisttpll
push
das
das
out
mov
push
jp
les
mov
lcall
pop
mov
aaa
cmp
aaa
rclb
out
arpl
jge
xchg
ret
mov
and
jl
mov
mov
in
mov
push
adc
mov
or
fdivl
cmp
dec
test
out
sub
adcb
sbb
ds
out
pop
xchg
in
mov
loope
out
lea
out
fiaddl
cltd
push
pop
sbb
fstps
test
aad
cmp
xor
movl
adc
ret
push
fists
pushf
push
pop
xchg
call
orl
mov
adc
jl
repnz
test
lret
popf
adc
cli
scas
fstl
or
insb
adc
sbb
dec
insb
int
or
loop
mov
push
jg
sub
jb
ficomps
and
jnp
jno
adc
cmp
nop
dec
and
repz
jno
add
call
repnz
push
fisttpll
lcall
inc
insl
in
mov
adc
movsl
dec
xor
fisubl
lea
lret
pusha
sbbl
dec
mov
dec
pop
xor
dec
push
jl
jns
sub
vpxor
out
data16
div
leave
sbb
jp
pop
xchg
jg
leave
pop
push
jnp
jecxz
mov
push
insl
out
add
movsl
pusha
cmp
out
cmp
addr16
shlb
int
adc
test
mov
insb
lock
popa
cmp
outsb
arpl
repnz
push
fnstenv
stos
je
movsb
jp
or
inc
mov
adc
std
add
and
cmpsb
popa
dec
mov
mov
out
test
lahf
xchg
psrlw
in
pop
mov
mov
icebp
xchg
sbb
aas
fisttps
sarb
dec
xor
call
shlb
adc
std
mov
lods
mov
dec
xor
cmpsl
outsl
ret
and
div
ss
jl
dec
daa
push
dec
xor
fidivs
ret
adc
popa
aaa
dec
es
jbe
jg
insl
jbe
push
jb
sbb
je
inc
jae
pop
adc
or
push
and
pop
lock
xchg
cmp
sarb
testb
in
rcll
sub
fstps
std
rolb
mov
shrl
add
pop
inc
pop
test
xchg
mov
enter
inc
push
dec
jge
rcl
pop
jmp
mov
xor
mov
popa
stos
aam
dec
scas
xor
icebp
sbb
add
adc
mov
jnp
test
mov
faddl
push
lods
sti
cmpsb
mov
sti
iret
or
sbb
mov
adc
xor
mov
push
in
xchg
xchg
push
mov
mov
xchg
addb
andb
lahf
lret
mov
and
mov
inc
shrl
loope
addr16
xchg
sbb
or
xchg
std
mov
and
in
sbb
sub
adc
xchg
movsb
das
ret
pop
cmp
jns
stos
mov
bound
pop
mov
xchg
leave
push
xor
in
clc
cli
jge
and
jmp
dec
mov
adc
in
xchg
fs
insb
stc
jns
adc
sub
shl
loop
sti
jecxz
mov
lea
and
mov
iret
ret
or
xchg
jo
shlb
rcll
outsb
jb
loopne
xor
jne
loopne
mov
or
stos
jp
lcall
aaa
pop
rcll
mov
xchg
loopne
mov
xchg
jg
adc
out
dec
test
xorl
pop
cltd
push
in
add
fdivp
push
popf
mov
xchg
jle
ficomps
or
sbb
or
out
jnp
or
sbb
scas
icebp
icebp
fstpt
jecxz
aam
mov
jmp
test
in
fstps
mov
mov
out
adc
jecxz
loopne
mov
or
xchg
hlt
adc
or
push
fcomps
mov
je
mov
lock
mov
pop
mov
push
mov
sub
fwait
push
inc
sbb
test
jecxz
mov
push
imul
xor
js
mov
sub
pop
sub
mov
mov
pop
test
mov
push
push
push
ds
sub
lods
loop
xor
and
xor
out
data16
jp
xlat
cwtl
fcomps
std
push
iret
ficomps
rdtsc
push
mov
jnp
inc
fwait
testw
int
jp
lods
ja
decl
sbb
push
xor
adc
and
xor
pop
stos
xor
daa
sbb
and
mov
je
lock
dec
js
les
inc
inc
pop
sbb
jnp
sub
mov
lahf
dec
out
gs
stos
outsb
int
movsl
or
or
pop
lahf
mov
and
repnz
xchg
shlb
pop
sub
and
dec
repnz
push
dec
mov
jo
inc
pop
insb
or
mov
mov
ds
sub
push
lods
mov
add
push
mov
pop
jne
fistl
fnstcw
lods
jns
add
and
dec
jno
mov
lea
add
inc
dec
push
dec
out
lahf
dec
pop
dec
in
ret
add
addb
and
add
or
cmpl
push
pusha
sti
and
and
imulb
lret
aas
cmp
xorb
adc
hlt
cltd
xor
imul
xchg
cpuid
mov
dec
outsb
mov
or
jb
mov
dec
push
push
cmp
add
je
inc
ss
daa
outsb
shr
xchg
push
test
cwtl
lock
test
negb
xor
int3
xor
sbb
jl
out
pop
mov
xchg
test
lahf
cmp
mov
xchg
ss
sub
in
jo
loop
outsb
roll
movsb
xchg
cmp
mov
xchg
rorb
in
into
in
imul
inc
fwait
into
pusha
ds
mov
stos
cmp
jmp
sub
mov
ret
sar
in
loope
push
movsl
xor
scas
pop
nop
cmp
or
pop
dec
or
push
in
xlat
jle
mov
dec
leave
cmpsl
and
cmp
scas
scas
notl
push
sbb
xor
mov
fldt
lds
inc
lahf
out
sbb
insb
mov
pop
xchg
ljmp
inc
xchg
stos
dec
inc
push
outsb
jo
jl
mov
cmp
data16
inc
and
xchg
and
stos
cmp
testl
cli
mov
mov
sub
xor
adc
pop
jle
mov
cmp
sbb
arpl
push
into
fwait
call
inc
inc
inc
xor
lea
or
pop
mov
fdivl
and
xlat
jae
std
or
pusha
xlat
mov
jno
sbb
sbb
xor
repz
repz
cltd
mov
les
icebp
call
xor
inc
push
dec
push
inc
test
xchg
mov
iret
outsl
dec
outsb
mov
mov
scas
fwait
xor
test
test
dec
jbe
in
mov
fcomps
cmp
add
and
stc
inc
nop
cltd
in
daa
and
cld
ret
inc
sbb
xchg
inc
mov
xchg
jne
push
mov
out
jb
jl
lds
mov
or
aad
cmp
xor
add
push
lret
push
sbb
push
mov
dec
pusha
stos
subl
fidivs
sbb
outsb
inc
packsswb
insb
mov
cmp
mov
insl
fistpl
movsb
inc
lret
mov
pusha
imul
push
test
pop
xchg
or
and
sti
inc
int3
pop
int
lret
dec
aaa
add
ret
push
lods
jge,pn
add
test
movsb
popf
arpl
popa
adc
or
stos
sbb
sub
xchg
lds
call
xchg
fistpl
cmp
xchg
test
aaa
cwtl
cmp
push
mov
pop
mov
cld
ja
cltd
and
aad
hlt
push
pop
xor
add
lods
dec
push
mov
sbb
lret
or
jo
fldpi
ret
xchg
cmpsl
pop
fsubs
push
pop
sub
mov
xorb
out
sub
inc
adc
xchg
sub
lock
dec
sahf
cwtl
jno
testb
and
push
xchg
pop
nop
cltd
sbb
mov
xor
cwtl
inc
aaa
xchg
dec
pushf
mov
add
dec
cmpsb
jle
mov
mov
push
ljmp
ja
pop
cmp
sbb
mov
fdivr
pop
ja
mov
push
and
add
mov
rorl
mov
call
jb
or
pop
lea
jge
scas
or
lods
xchg
cmp
outsb
in
dec
jle
test
loope
mov
and
inc
in
mov
test
mov
xor
loopne
pmullw
shlb
push
jnp
mov
xor
and
mov
movsb
and
and
stos
pop
push
scas
dec
pop
addr16
popl
cmp
jnp
in
inc
sub
lret
pop
negl
dec
jb
lret
cmp
es
pop
insl
pop
xorl
lcall
lods
xorl
mov
push
mov
xchg
out
and
outsl
pop
dec
xchg
and
and
out
int3
addr16
dec
pop
cld
mov
xor
dec
and
push
jp
testl
pop
cmp
test
and
jnp
xchg
insb
adc
test
push
cmc
out
xor
mov
je
xor
cmp
inc
daa
mov
int3
mov
rclb
es
add
push
jne
mov
shll
lcall
cmpsl
fidivs
aam
and
xor
push
outsl
add
shlb
xlat
jmp
dec
loope
jmp
pop
inc
inc
sub
push
in
dec
xor
and
call
mov
in
xor
scas
jns
inc
add
ja
push
inc
jbe
adc
lret
jns
jno
and
dec
xchg
and
pop
daa
es
mov
and
test
xor
xlat
lcall
inc
xchg
xchg
push
rolb
cmp
xchg
mov
sbb
pop
dec
jmp
cmp
jl
lock
push
in
adc
stc
sbb
popa
ja
mov
mov
leave
gs
das
mov
push
mov
xchg
jae
std
ja
or
xchg
xchg
bound
ret
push
sbb
adc
jnp
add
test
push
lods
ja
das
pop
push
jb
leave
popa
jnp
mov
mov
dec
sti
adc
sub
sub
sbb
lock
dec
pop
pusha
ja
push
xchg
mov
gs
inc
sbb
xchg
fwait
dec
add
insl
mov
les
inc
cli
insb
mov
stos
sahf
adc
mov
bound
imul
inc
lods
lret
lods
mov
adcb
cltd
jb
outsb
inc
fsubl
pop
pop
xchg
stos
idivb
inc
xor
and
sbb
in
mov
and
xchg
jmp
into
pop
lods
jg
inc
mov
fimuls
ja
loope
fidivrs
sbb
push
roll
aas
pop
jge
inc
lahf
loopne
iret
inc
cmc
je
and
adc
cmp
cmpsl
aam
lea
mov
mov
dec
je
push
rolb
out
loopne
lods
sub
pop
xchg
and
pushf
xchg
cmpsl
dec
ror
jnp
dec
rolb
push
sbb
lret
pop
je
xchg
fsubrl
pusha
adc
xchg
or
inc
lahf
mov
add
dec
jbe
inc
lret
adcl
xchg
xor
push
cmp
insl
loopne
stos
xchg
mov
xchg
into
imul
sbb
cmp
dec
test
ljmp
sti
outsl
pop
mov
imul
loope
pop
push
xchg
push
stc
clc
adc
or
cmc
xor
pushf
jne
and
ja
cvtdq2ps
mov
mov
daa
scas
xchg
loop
mov
or
fistpl
jo
pop
cs
data16
jne
loopne
sbb
ss
movsb
test
enter
notw
mov
jbe
pop
repnz
xchg
jae
cwtl
fs
popf
outsl
jne
outsb
es
lret
lcall
xchg
or
enter
and
push
insb
mov
mov
pop
inc
movb
xchg
pusha
push
sbb
and
fisttps
adc
sbb
xor
mov
sub
dec
lret
mov
out
mov
lcall
popa
outsb
fadd
sub
push
push
enter
iret
cs
in
mov
jo
xchg
mov
aad
insb
sbb
dec
aad
dec
jbe
in
in
clc
push
cmpsl
jp
mov
push
adcb
jns
leave
cmp
mov
rorl
mov
adc
out
nop
shlb
lcall
lods
aaa
in
outsl
mov
mov
push
sbb
cmp
outsb
mov
imul
iret
mov
out
daa
xchg
pop
jbe
or
jp
push
xor
mov
add
xchg
mov
stos
movsb
mov
dec
pop
lock
scas
pusha
add
xlat
push
js
cs
xor
pop
pop
in
inc
dec
std
sbb
enter
int3
stos
cli
imul
test
xor
nop
subl
movb
sub
mov
in
xlat
scas
outsl
repnz
jb
and
or
rcrb
cmp
jbe
dec
inc
sub
ja
sbb
and
cmpsl
lahf
scas
cmp
push
pop
ret
dec
cmp
inc
and
and
mov
arpl
push
jb
mov
and
ficoms
xchg
xlat
out
or
faddl
mov
mov
ret
mov
mov
mov
adc
arpl
stos
fdiv
adc
shl
dec
rol
lock
repnz
mov
push
pop
jae
imul
fists
cmpsb
pop
and
popf
je
into
adc
int3
cmpsb
fcomps
push
lcall
pop
xor
fistl
lods
mov
inc
lock
aaa
dec
push
dec
jecxz
xchg
and
repnz
out
dec
sub
jl
jae
sbb
cmp
mov
bound
stos
xor
mov
dec
in
mov
dec
sbb
xchg
pop
cmp
sbbb
pop
sub
gs
sbb
inc
push
call
lods
enter
mov
cltd
inc
ss
fistps
inc
pop
push
pop
repnz
repz
cltd
xor
push
movsl
cld
lods
push
adc
movsl
adc
xchg
push
nop
inc
pop
mov
out
sub
mov
addb
xor
inc
js
mov
lret
mov
shl
and
jge
inc
and
jnp
jo
into
testb
aad
aad
jnp
sub
jno
dec
jb
push
pop
xchg
xbegin
testb
clc
pushf
clc
pop
xchg
inc
std
and
fsts
inc
pop
push
adc
add
pop
or
jle
cld
lock
stos
icebp
insb
adc
test
clc
dec
sub
scas
mov
push
test
jae
sahf
stos
xlat
add
mov
sub
push
pop
popf
leave
sub
dec
div
cmp
sub
popa
data16
mov
loope
cmp
push
int
sub
aad
fdivl
dec
fnstsw
stos
inc
pushf
xor
in
mov
lea
or
push
mov
lea
cli
imul
test
mov
adc
fnclex
aaa
inc
mov
or
sbb
lahf
and
push
mov
rorb
jmp
js
push
jno
mov
inc
loopne
or
scas
sub
cmpl
pusha
cli
mov
jo
push
adc
xchg
and
dec
decl
shl
ss
pop
dec
into
mov
imul
push
std
shlb
dec
orl
outsl
pop
je
pop
ljmp
push
arpl
push
fstp
gs
jae
mov
andb
and
insl
pop
dec
sbbb
rcrl
cwtl
xchg
bt
xchg
aaa
lods
ret
addr16
into
sti
arpl
add
fs
push
add
inc
inc
adc
xor
es
jbe
or
fprem
sub
and
jge
pop
leave
idivb
out
incb
cmc
testl
ss
lret
pop
sub
test
xchg
pop
pop
rcl
mov
fs
sti
outsl
or
repz
xor
sbb
test
mov
mov
jmp
outsb
add
fs
and
pop
cmp
mov
cmp
ds
ret
lds
movb
xchg
add
sbb
sarb
dec
cmp
push
popa
out
jb
je
lock
mov
leave
lret
fnstsw
int3
mov
ljmp
mov
movsb
sbb
mov
mov
mov
mov
push
or
mov
pop
repnz
push
mov
sbb
dec
adc
dec
repz
xor
fcmovb
pusha
scas
in
rcr
movsb
pop
cmp
cli
xchg
and
jbe
adc
push
gs
lret
inc
and
lret
popa
repz
adc
scas
cs
xchg
add
mov
xor
or
popa
stos
sub
cld
cmp
mov
mov
fwait
add
xor
ds
inc
jg
mov
and
or
testl
aas
pop
add
inc
in
add
xchg
xor
cmp
test
sbb
jne
stos
movsl
lods
push
add
outsb
push
pop
pusha
stos
adc
inc
dec
and
cmp
inc
std
aaa
lahf
dec
aad
pop
push
sub
loope
fiadds
stos
pop
fwait
inc
jo
dec
stos
sahf
mov
repnz
ljmp
repnz
jle
push
mov
sahf
and
out
mov
or
cmp
das
push
mov
and
dec
cwtl
mov
sbb
gs
dec
pushf
push
cltd
jb
aad
loopne
xor
lahf
shrl
cld
ja
out
add
jno
repz
in
push
std
xchg
lods
pop
cmp
lret
mov
gs
dec
jg
sti
ds
xor
mov
mov
adc
cmp
sbb
ret
mov
mov
hlt
push
adc
lds
or
ja
pop
xchg
mov
test
mov
sbb
stos
js
sahf
loop
imul
jmp
and
ja
mov
enter
fnstcw
add
add
pop
ja
hlt
xchg
imul
outsb
jl
mov
rorl
inc
pop
or
inc
jmp
test
mov
jnp
and
rclb
stc
shrb
add
xor
ss
aad
ja
fnstenv
scas
sub
add
shll
loopne
mov
imul
in
js
jge
mov
cmc
push
mov
icebp
push
jne
sarb
and
arpl
in
fwait
idivb
xchg
outsl
insl
addr16
scas
mov
addr16
or
cwtl
repnz
fs
cld
subb
mov
rol
jnp
jnp
test
dec
test
push
gs
mov
jne
dec
leave
xor
xchg
aaa
xlat
mov
mov
into
push
out
xchg
push
outsb
pop
jno
dec
outsl
stos
insb
pop
push
mov
ss
cmpsb
test
sbb
jg
insb
loopne
jg
dec
pop
mov
ljmp
add
xchg
daa
xor
lcall
or
in
sti
enter
std
loop
fcomip
jmp
shll
xor
test
mov
ja
add
loop
or
pop
mov
flds
aad
cmc
mov
pop
and
push
mov
jbe
daa
push
scas
add
jle
mov
js
js
push
jle
into
sub
jmp
call
imul
cld
mov
faddl
xor
dec
test
cmpsb
test
xor
pop
pushf
jp
pushf
cld
or
pop
mov
stc
and
or
mov
push
in
xchg
sbb
ficompl
mov
mov
xchg
cltd
jne
sahf
je
add
jmp
sbb
sbb
test
test
aad
test
inc
mov
in
push
fwait
push
pop
insb
test
pop
lds
stos
ret
mov
sub
jae
mov
pop
and
aaa
je
cli
fsubr
mov
cmp
xor
pop
mov
and
adc
dec
push
call
mov
aas
inc
push
imul
xor
lret
icebp
out
sub
cmpsb
call
adc
int3
dec
scas
xor
push
pop
scas
lahf
mov
cmp
mov
mov
jge
jns
xor
in
repnz
adc
insb
idivl
sahf
stc
mov
leave
gs
cmp
jge
cmp
pop
aad
insb
mov
loop
test
adc
subb
popa
outsl
ret
mov
ss
repnz
push
addr16
mov
fnstenv
lcall
and
jo
mov
int3
xchg
pop
aam
outsb
dec
jge
jmp
dec
inc
data16
fists
mov
inc
add
lods
cmp
push
push
dec
inc
adc
sbb
ret
cmp
leave
sub
fwait
ret
jbe
ss
insl
mov
jp
fwait
mov
jne
mov
es
sub
mov
adc
cmp
addr16
testb
mov
mov
adc
ret
imull
into
ljmp
xor
lock
insb
jmp
pop
or
xor
mov
outsl
jle
dec
fldl
mov
fldenv
addb
ljmp
mov
dec
cmovge
or
xor
insb
and
mov
sti
mov
gs
xor
imul
mov
and
js
cli
leave
dec
mov
sbb
pop
bnd
ljmp
xchg
mov
cmpsl
ficoms
and
out
sbb
shll
cmpsl
in
stos
lret
or
cltd
inc
mov
fiadds
rorb
xchg
ret
std
ja
movsl
mulps
mov
insb
cmp
mov
aaa
dec
out
and
pusha
arpl
lods
ret
out
fdiv
test
mov
dec
or
adc
testb
mov
jle
xlat
pop
nop
outsl
add
or
stc
hlt
and
insb
popf
cmp
ds
fsubs
jg
fimuls
dec
jno
lahf
scas
lret
mov
lret
addb
jne
popa
icebp
mov
aad
cld
icebp
and
test
psrad
out
test
ja
mov
shl
cltd
push
ja
arpl
and
mov
lret
ss
sbb
addr16
sbb
insl
subb
fistpll
ds
cmp
insl
mov
hlt
stos
int
icebp
dec
mov
mov
jne
jns
movsb
jge
clc
outsb
mov
push
mov
imul
loope
aas
xor
movsb
bound
pop
lods
adc
mov
aam
pop
dec
push
out
inc
inc
mov
adc
scas
lods
test
push
ja
pusha
imul
cmp
mov
lcall
lds
out
mov
dec
and
leave
push
add
shl
repz
push
push
lock
fsubr
pop
xchg
test
cmp
mov
adc
xchg
das
test
inc
jge
jns
dec
mov
cmp
arpl
cmp
dec
mov
pusha
fs
aam
mov
cmp
mov
loopne
sti
daa
addr16
mov
and
or
xorl
xor
mov
sbb
lods
hlt
pop
jle
dec
or
insl
and
test
sbb
adcb
lds
imul
jbe
cltd
inc
scas
stc
xchg
shll
inc
jmp
jns
xchg
dec
outsl
or
das
xchg
jmp
shlb
outsl
pop
das
scas
pop
pop
mov
push
mov
loope
jb
test
mov
xor
fnstsw
xlat
bound
sbb
mov
test
loopne
push
movsl
cmp
mov
mov
inc
data16
test
lahf
in
lcall
les
inc
or
push
mov
outsl
ror
push
lret
mov
int3
mov
in
loope
sbb
testl
rcrl
lea
aad
out
inc
pop
das
cmp
adc
retw
pop
adc
and
cmc
xchg
xchg
mull
ja
xor
mov
mov
sbb
dec
rol
mov
add
cltd
xor
pop
jae
pop
mov
adc
lret
sar
mov
pop
shll
shl
ret
int
xchg
push
mov
jmp
jbe
mov
pop
and
and
icebp
insl
ret
add
push
ret
push
lea
fdivrs
xor
shll
and
sub
cli
sub
cmpsb
add
movsb
cli
push
and
rclb
mov
cwtl
push
clc
pop
inc
in
xchg
icebp
mov
push
out
push
xorb
pop
jnp
and
mov
cmpsl
mov
xlat
repz
mov
test
fwait
dec
adc
inc
sub
repz
push
jns
cmp
cld
jg
nop
cmp
icebp
lcall
jo
in
or
movsl
inc
jbe
icebp
lea
push
sub
lock
pushl
fistps
addb
or
jmp
daa
dec
push
pop
inc
add
mov
or
and
in
adc
cmp
lcall
mov
sbb
or
fistl
cld
or
cmp
push
or
fstps
mov
mov
outsl
pop
xor
xorb
repz
lret
into
stos
test
xchg
lcall
cld
mov
repz
fisttps
aam
sarb
jnp
xchg
imul
mov
inc
or
sbb
enter
dec
rcrl
rolb
jbe
push
lahf
cmp
data16
decl
cltd
lret
push
movsb
push
insb
xchg
fldenv
adc
lcall
stc
int3
pop
cmpsb
pop
popf
push
jns
test
push
pop
mov
cli
mov
pop
mov
or
icebp
mov
pop
xor
add
jle
lock
arpl
push
add
mov
pop
into
xchg
test
inc
xor
rorb
adc
rcr
div
inc
xor
add
js
push
push
mov
add
jp
mov
cs
push
mov
xchg
push
dec
imul
add
movsl
mov
sbb
push
lods
mov
ret
aaa
xchg
movsb
add
jno
and
sbb
fildll
or
xor
test
add
pop
fcoms
notl
add
or
bound
mov
xchg
pop
adc
pop
je
shll
outsl
pop
out
fnstenv
pushf
sti
fisubrl
arpl
adc
inc
jp
std
aas
xchg
pop
push
gs
adc
mov
inc
in
repz
adc
in
enter
mov
js
stos
out
pop
mov
aad
call
jo
xor
adc
and
pop
test
out
inc
shrl
data16
cmp
and
xchg
adc
dec
jle
mov
jge
inc
rclb
jl
jmp
and
mov
lret
je
add
mov
pop
das
stos
cmpl
mov
xor
mov
stc
inc
mul
addb
cmp
leave
and
fdivs
dec
test
arpl
xchg
inc
test
aam
xchg
ds
cmpsb
repnz
xchg
fisttpl
lds
in
nop
inc
nop
mov
push
sahf
cli
inc
repnz
ds
jb
arpl
sub
insb
outsl
dec
test
push
adc
adc
adc
stos
ret
lods
fcmovu
cmp
add
mov
adc
imulb
pop
mov
mov
sub
mov
lret
mov
xlat
divl
push
pushf
sahf
sbbb
idivb
sub
enter
xor
cmpsl
dec
out
test
and
mov
pop
and
jno
lock
aad
in
cld
repnz
mov
add
mov
pop
adc
xlat
inc
dec
loopne
pop
sahf
ljmp
pusha
and
out
and
push
sbbl
test
or
test
dec
imul
xor
stc
sbb
jb
cmp
int
fildll
jb
and
adc
sub
mov
loop
pop
iret
mov
adc
lcall
sub
xchg
pushf
pop
pop
addl
push
es
push
xor
out
mov
leave
pop
imul
cwtl
mov
xchg
pop
and
add
call
js
cmpl
ret
jl
jp
mov
loop
mov
push
imul
push
push
std
fcom
testl
dec
mov
repz
mov
daa
insb
sbb
or
add
enter
or
xchg
cwtl
daa
mov
insb
cmp
hlt
jp
mov
gs
fs
add
pop
sub
sub
movsl
jmp
fstpt
xor
sbb
mov
out
stc
mov
push
mov
mov
jo
fmuls
cli
or
adc
sahf
stos
adc
call
sbb
fadds
insl
and
sahf
and
testb
pop
dec
in
add
lods
add
mov
in
icebp
pushf
mov
sbb
dec
sbb
mov
jl
fldpi
mov
sbb
int3
imul
je
pushf
xor
xchg
sub
loop
arpl
jbe
push
jmp
int
mov
mov
ja
mov
cmp
incl
mov
aas
add
daa
push
jae
loop
in
jno
jbe
ret
pop
out
cld
movsb
lahf
out
adcl
push
or
mov
pushl
push
aad
mov
push
cmp
xor
sbb
jge
dec
pop
jle
adc
cmpsl
mov
aad
into
mov
movsl
dec
add
mov
jle
jg
xchg
mov
pop
xchg
stc
test
jnp
xchg
push
ret
xchg
inc
std
pop
mov
hlt
int3
push
loopne
jnp
in
negb
ret
loopne
inc
sbbl
xorl
clc
ljmp
fisttps
push
int3
and
mov
dec
rclb
dec
mov
add
push
pop
jge
hlt
or
jb
jmp
lahf
cmp
rorl
pop
enter
stos
add
xor
jne
data16
mov
cmp
dec
mov
push
ja
sbb
sub
sahf
sbb
sahf
xchg
lods
fcompl
mov
fimull
jl
xchg
lock
mov
mov
fcompl
adc
push
mov
lret
fldenv
jns
mov
add
sbb
les
inc
fiadds
add
rcl
sub
mov
dec
data16
rorb
cmp
mov
les
push
mov
or
lret
lods
outsl
fld
xchg
jle,pn
lock
mov
jae
pusha
adc
scas
and
mov
and
cmp
ret
test
movsl
cmpsb
mov
lcall
dec
popf
sbb
fsubs
fiaddl
xor
scas
xchg
dec
fwait
mov
sub
call
data16
push
inc
inc
pop
lds
and
sbb
and
sahf
in
popf
cmp
xchg
dec
jl
mov
pop
dec
nop
clc
cmp
add
mov
dec
sbb
addl
adc
dec
imul
dec
icebp
out
test
or
mov
pop
rolb
mov
mov
dec
out
js
std
std
pop
mov
pop
in
pop
data16
pop
rcrl
fnsave
sbb
call
in
imul
aas
dec
mov
in
sub
jl
adc
add
cmc
div
rcr
sbb
mov
cmc
xchg
in
push
pop
gs
inc
xor
jbe
adc
lock
std
shll
push
jge
sbb
or
jbe
leave
sub
or
int
lcall
orl
loop
dec
add
pop
sub
xchg
mov
es
jmp
jl
loope
into
outsb
hlt
xor
xor
jo
inc
pop
add
out
dec
in
dec
cli
ja
push
imul
cmp
sub
cmpsb
jno
jns
insl
cld
mov
inc
scas
xor
push
mov
pop
out
js
mov
mov
leave
cli
js
jl
adc
push
jge
adc
bound
jp
sub
jl
inc
xchg
xor
pusha
xlat
andb
loope
jae
aad
repnz
pop
rcrb
push
cltd
sbb
adc
in
sub
or
mov
cltd
cmc
scas
pop
stc
xor
pop
inc
sti
xor
cmp
out
fmull
or
fistps
adc
sbb
sbb
loopne
dec
inc
ficomps
idivl
addr16
pop
xor
sbb
and
sub
aaa
lret
cmp
jecxz
test
outsb
mov
mov
cld
xchg
cmp
cltd
cmc
mov
test
rcl
outsb
push
mov
fmuls
subb
sub
xor
sub
cmp
push
ja
cmp
pop
add
dec
cwtl
or
mov
popa
stos
jp
mov
mov
mov
xor
bound
and
scas
shll
lock
test
jecxz
mov
add
push
add
test
jge
lock
inc
cmp
je
ret
daa
mov
lret
inc
xchg
sbb
add
push
cmc
xor
ds
int3
notb
test
fistps
add
sbb
sub
out
cmp
fs
loope
stos
icebp
insl
fsubrl
inc
mov
cmp
sub
pop
fwait
jmp
or
int3
loopne
clc
or
or
sbb
sub
filds
leave
mov
add
test
mov
arpl
lret
push
add
ljmp
movsl
fimull
add
outsl
std
or
mov
push
pop
out
stos
jl
cmc
pusha
adc
mov
cli
shrb
nop
cmovp
nop
sub
insb
xor
je
outsl
loope
inc
dec
insb
out
movsl
dec
lods
pop
outsl
pushf
stc
pop
popf
lock
scas
movsb
mov
lcall
imul
es
add
add
jae,pt
flds
sub
shl
mov
dec
jge
and
aaa
stos
and
call
jge
adc
aad
in
rcrl
int
in
mov
xchg
into
inc
stos
sbb
push
sbb
add
sbb
pushf
pop
movsl
xchg
sbb
and
push
mov
mov
xchg
dec
daa
mov
add
lahf
mov
imul
cmp
in
repz
xchg
mov
and
test
in
xchg
gs
iret
out
dec
imul
mov
cmp
dec
inc
xor
adc
jae
lcall
xor
sub
add
or
into
pop
gs
jns
icebp
mov
and
cmp
mov
mov
out
cmpsl
shll
outsl
mov
js
cmc
daa
mov
sti
insl
lods
push
addr16
das
mov
mov
lods
leave
int
xchg
mul
or
or
fucom
rorb
aaa
pushf
cmp
dec
out
mov
int3
add
sub
mov
xor
je
inc
mov
jbe
pop
das
das
fstpt
add
and
adcb
or
adc
cmp
leave
jg
hlt
clc
add
mov
cmp
sbb
xchg
scas
rorl
out
lods
test
lea
push
in
cmp
add
sbb
sbb
aas
imul
xor
std
cmp
push
int3
dec
sub
jo
mov
jle
negb
and
in
xchg
sahf
hlt
adc
adc
push
aam
popa
mov
out
stos
sbb
cmpsb
adc
lahf
mov
shlb
dec
sbb
shll
inc
cmp
int3
cld
ret
mov
push
test
or
inc
xchg
imul
dec
mov
xchg
or
mov
mov
outsb
add
mov
sub
or
jmp
push
js
mov
pop
pop
movsb
daa
mov
decb
outsl
and
imul
push
pop
shlb
dec
jno
push
push
mov
mov
arpl
popa
and
rcl
out
bound
leave
fstpl
dec
mov
and
pop
fistpll
sub
inc
addr16
ja
lods
jae
sbb
in
cmp
out
cld
jnp
or
dec
in
or
adc
xor
mov
sub
fnsave
lret
adc
cmp
out
aad
dec
shlb
out
add
cmp
hlt
mov
idiv
rcrb
xor
mov
ljmp
push
adcl
push
mov
cmc
rorl
int
cmpl
mov
jo
dec
cs
repz
jl
jle
scas
iret
dec
mov
xchg
push
insb
jno
push
dec
sub
iret
cmp
sub
push
nop
mov
fwait
repz
divl
adc
fwait
add
imul
pop
insb
xchg
je
adc
xchg
sbb
push
mov
mov
xor
aam
xchg
inc
cmp
lods
pop
gs
pop
jb
mov
in
adcb
jg
repnz
sub
cmpsb
int
add
add
pop
lods
rcll
fisubrl
mov
fstl
push
pop
add
mov
mov
and
lds
divl
lods
mov
lcall
lds
inc
jl
fst
mov
push
or
int
mov
loope
pop
je
ret
xchg
mov
das
inc
out
sti
inc
xor
loop
popf
add
mov
into
sbb
mov
sbb
sahf
add
popa
jae
out
inc
aas
adc
xchg
mov
jl
cmc
jo
sub
dec
or
jg
jo
in
xchg
fxch
pop
clc
insb
pop
jecxz
push
sub
jg
in
in
mov
fildll
xchg
mov
sub
jbe
je
dec
push
pop
setns
outsb
xchg
addr16
mov
int3
mov
xchg
jge
mov
jnp
in
insb
insl
int
repnz
lret
dec
out
rol
mulb
mov
push
sbb
and
cld
add
cld
sbb
outsb
divb
sub
jecxz
or
inc
vpaddq
dec
mov
int
xchg
lock
ss
pop
mov
popf
sub
shlb
and
inc
mov
adc
mov
inc
or
xor
popf
mov
adc
test
bound
push
iret
test
stos
cmc
adcb
test
push
out
pop
scas
xchg
lret
xor
push
adcl
xor
ljmp
mov
inc
test
lret
inc
jbe
imul
lods
insl
push
and
aas
out
push
xchg
jg
gs
mov
mov
push
repz
les
repz
jns
iret
or
das
pop
rorl
nop
fcmovbe
xchg
inc
dec
lret
xor
nop
mov
roll
lock
mov
adc
adc
rolb
jbe
xor
pusha
or
cmpsl
xlat
cmp
cltd
sbb
pop
pop
mov
xchg
lret
or
sbb
jb
scas
fdivl
push
mov
mov
in
popa
outsb
ss
and
mov
imul
pushf
or
mov
jo
aaa
test
subl
das
repnz
dec
sbbl
adc
or
rcr
push
xchg
mov
xor
xor
push
or
jmp
push
out
pop
add
or
stos
xchg
test
out
cmp
test
push
mov
mov
sbb
sbb
adc
push
movsb
lods
leave
mov
mov
and
ds
das
addr16
mov
pop
in
sbb
mov
scas
loop
insl
arpl
sub
sbb
mov
mov
les
jns
jns
rol
out
ret
out
xchg
push
or
mov
aam
xchg
test
es
inc
inc
push
lahf
add
in
test
pop
and
dec
and
jg
lds
ret
icebp
cmp
push
outsl
inc
or
add
mov
push
bound
repnz
sub
and
gs
adc
mov
test
into
and
or
mov
lds
scas
jg
dec
push
ret
inc
jns
or
les
das
bt
push
mov
pop
dec
call
adc
push
add
push
nop
call
repnz
and
scas
mov
mov
cmp
sbb
inc
push
and
dec
lcall
gs
lods
mov
cmp
insb
xor
lods
cmpsb
ret
jae
mov
mov
pop
pusha
inc
lds
lcall
mov
add
jp
cwtl
aam
adc
sbb
test
inc
and
cmp
mov
pop
and
loope
pop
pushf
fisttpll
idiv
pop
adc
idivl
cmc
cmpsb
dec
popa
dec
cmp
mov
insb
ja
mov
adcl
cmp
lret
mov
push
out
hlt
jae
roll
mov
add
in
inc
xchg
add
dec
jne
cmp
jne
sub
inc
ss
inc
cmp
lahf
scas
mov
lods
push
mov
jp
insl
xchg
jmp
and
xchg
push
movsb
ret
repz
xchg
push
or
mov
scas
mov
inc
popf
leave
mov
daa
cmpsl
mov
mov
and
xchg
cld
xchg
icebp
test
adc
adc
js
sub
into
mov
jno
std
adc
cmpsl
add
rol
fidivl
bound
mov
sbb
es
mov
test
push
pop
pop
sti
subb
pop
dec
or
mov
sub
push
push
ret
jne
jecxz
jo
aas
push
mov
inc
sbb
out
stc
jo
xor
or
loop
xchg
popf
andl
lods
push
mov
test
subb
or
jae
push
es
sub
out
mov
sub
lcall
loope
pusha
sahf
dec
js
add
xchg
mov
pop
jno
mov
into
sti
jge
mov
scas
sub
rcr
push
dec
cmp
lods
loopne
enter
cmp
out
pop
sarl
leave
fs
jle
sbb
xor
jne
dec
or
dec
and
add
mov
mov
test
dec
jns
pop
pop
lret
clc
push
add
and
cli
cli
ffreep
cs
out
push
cmpsb
repz
ficoml
ss
ja
push
ljmp
pop
bound
movsl
rclb
xchg
jl
test
or
out
cmp
aad
or
sbb
sub
ret
sbb
lret
iret
push
add
xlat
dec
pop
push
cwtl
sub
enter
in
stc
jb
inc
ja
int3
xor
xor
lods
xor
cmpsb
cli
daa
pop
cmp
das
movsl
je
pop
lock
lods
jmp
loop
out
inc
adcl
daa
js
into
cltd
aad
jbe
outsl
or
es
push
jno
pop
adc
out
insb
divl
cmp
adc
pop
cwtl
pop
stos
testb
leave
cmp
orl
call
inc
test
adc
pop
dec
xchg
shll
jno
test
xor
in
push
xor
sbb
mov
fs
mov
jns
cs
pop
mov
dec
inc
ret
sbb
testl
inc
push
lcall
fnsave
lahf
fistpll
sbb
hlt
pop
and
dec
add
pop
adc
rol
sub
sub
xor
or
icebp
fdivrl
pop
mov
xor
movsl
mov
rolb
imul
jb
lods
mov
adc
sub
shrl
stos
movsb
mov
adc
inc
pop
sub
test
fistpll
jmp
sbb
outsb
sub
inc
inc
mov
xorl
sub
mov
cld
popf
xchg
sub
leave
das
aad
lock
xchg
int3
jmp
cli
inc
adc
pop
xlat
movsb
mov
sub
icebp
ja
loopne
enter
jnp
adc
dec
adc
sub
xor
xorb
fs
add
sbb
arpl
loopne
mov
or
sub
out
xchg
ljmp
pop
push
push
enter
test
mov
ss
test
mov
imul
dec
adc
mov
pop
stc
mov
test
mov
sbb
sbb
mov
pop
ljmp
inc
shlb
push
dec
mov
and
push
mov
scas
pop
lret
add
ffree
push
fsubrl
je
std
inc
sbb
mov
lahf
or
cmc
negl
mov
jge
push
ret
jo
loop
fisubs
stc
sbb
jne
sbb
push
test
or
adc
push
inc
xchg
sbb
icebp
in
mov
movsl
jne
jns
in
xchg
lret
stos
fstps
nop
jnp
sub
adc
or
mov
aas
dec
imul
push
das
lea
ret
iret
or
lods
jmp
sub
push
add
inc
push
pop
ljmp
seta
mov
sub
bound
jne
test
movb
ficoml
fildll
cmp
inc
in
add
insb
bound
push
adc
out
xor
fisubl
push
idivl
xchg
jle
jne
fimull
mov
or
jg
dec
notl
adc
add
arpl
fwait
mov
add
test
fmul
sbb
mov
jl
out
stos
add
pop
test
mov
daa
movsb
xchg
rolb
fstpl
aas
xchg
and
inc
pop
ds
dec
rolb
insb
or
fisubs
xchg
decl
cmp
and
mov
sbb
int3
fists
and
jne
stos
jge
fildl
dec
xor
ret
and
inc
xchg
xor
cmp
ret
xorb
mov
xchg
mov
jle
jg
push
push
cltd
sar
fwait
imul
mov
loope
std
outsl
out
cmpsl
push
divps
out
into
mov
mov
adc
notl
jns
push
and
add
adc
push
pop
sub
stos
cmpl
xchg
fwait
sahf
out
gs
xchg
mov
notb
movsb
adc
lods
xchg
nop
adc
and
sbb
pop
daa
addr16
xchg
ja
test
leave
rcrl
movsl
jnp
out
lret
and
into
or
daa
pop
outsl
lds
fidivl
sub
and
popf
mov
punpcklwd
inc
mov
sbb
pop
outsl
mov
xchg
or
dec
mov
cltd
mov
hlt
subb
fs
inc
inc
sahf
cli
ret
inc
fwait
lds
pop
mov
cli
pop
xor
out
je
fstl
pop
test
sbb
adc
shl
daa
aam
int3
stos
sbb
scas
push
mov
inc
mov
dec
fwait
rorl
sub
in
in
lea
or
jno
popa
shr
add
lahf
cmp
xlat
mov
mov
xor
lock
fidivrl
mov
faddl
push
cmpsl
and
pop
insl
fcompl
ret
rorl
stos
push
insb
pop
arpl
jg
sbb
outsl
push
pop
imul
lret
cmp
dec
or
push
sbb
jns
aaa
stos
das
sbb
sub
xor
ja
insb
dec
stos
add
daa
push
mov
xor
push
pop
sub
mov
inc
add
lods
inc
flds
or
pop
inc
pop
imul
pop
mov
in
xchg
aad
cmc
sar
jle
outsb
adc
mov
sbbb
adc
fstp
or
and
dec
mov
xchg
jnp
cld
mov
lret
loop
jbe
cmpsl
lret
fcomps
leave
sub
mov
js
cmpsb
add
xchg
mov
aaa
int
xor
cmp
mov
minps
xlat
out
insl
pop
out
jne
and
cwtl
scas
call
adc
cltd
mov
sub
dec
add
cmc
mov
xor
dec
dec
jne
sub
fucomp
dec
lods
int3
iret
movsl
or
jae
xor
fwait
gs
test
dec
flds
sbb
arpl
movsl
add
aaa
mov
popa
pop
cmpsb
loope
xchg
cmp
sbb
shrl
add
dec
mov
pop
nop
orb
repz
push
bound
jb
and
and
adc
mov
push
jne
sahf
jb
sbb
push
addr16
sbb
mov
inc
push
dec
xchg
pop
sbb
adc
cmpl
lock
xchg
fnstsw
push
adc
push
inc
mov
icebp
cltd
xchg
sbb
aas
or
mov
ja
mov
sahf
out
popl
mov
les
push
imul
jne
jl
lods
mov
movsl
xor
test
call
mov
ret
movsb
scas
cltd
mov
adc
cmp
jb
and
cld
pop
mov
out
lea
pop
mov
pop
jp
test
or
inc
fsubrs
xor
cmc
and
fwait
aas
mov
mov
dec
loope
pop
repz
ja
ret
shr
les
in
fadd
inc
xor
shrl
in
mov
lcall
cmp
lods
leavew
enter
jbe
bound
movsb
mov
inc
fld
inc
nop
cmc
add
fs
pop
xor
ret
inc
jmp
pop
xchg
push
cmpl
cltd
push
or
arpl
div
mov
xor
in
clc
mov
dec
fucom
push
ret
int3
inc
push
jp
fiaddl
mov
jg
xor
sub
inc
inc
fisubl
aam
repnz
xlat
ret
fs
dec
repz
and
push
popa
fdivr
cltd
jno
jnp
test
andl
adc
jbe
inc
xchg
or
push
mov
ja
je
and
or
mov
leave
xor
mov
adc
mov
push
pop
add
jl
dec
loope
adc
mov
insl
out
xchg
add
xlat
imul
shlb
jg
cmc
pop
js
xor
add
xchg
push
mov
hlt
lret
jge
cmpsb
in
mov
push
cmp
mov
or
dec
stos
push
fcoml
mov
or
outsl
leave
pop
mov
popf
movsb
xchg
je
iret
adc
xchg
lock
sbb
cmpsl
mov
pop
loopne
push
dec
sti
movsb
mov
daa
jmp
test
cmp
push
and
or
xor
pop
mov
xor
adc
cltd
sub
ljmp
dec
fcoms
int
fs
dec
clc
in
mov
cmp
inc
popa
shlb
mov
arpl
fstl
shl
loop
daa
fildll
daa
mov
push
sbb
mov
add
repz
inc
sbb
and
pusha
stos
cmovge
sub
divl
outsb
or
dec
and
lea
pop
jg
stc
mov
jns
sub
cmp
xor
pop
jne
push
ljmp
pop
inc
xor
pop
bound
xchg
push
dec
xchg
push
push
pop
imul
pmaddwd
out
inc
cld
jl
dec
push
pop
mov
pop
nop
fildll
dec
mov
fs
jmp
or
adc
nop
into
xchg
ss
sub
mov
or
popa
out
inc
inc
jp
pop
pop
jb
push
repnz
fisubl
inc
mov
pop
fsub
add
std
xrelease
xchg
add
jns
adc
test
xchg
sub
jb
aad
inc
cmc
sarb
xchg
mov
inc
das
bound
mov
and
adc
fs
cmc
scas
stos
dec
mov
inc
jg
pop
mov
bound
ja
mov
sbb
rorb
pushf
push
fiaddl
push
cli
xor
cs
das
mov
sbb
fucomp
add
loop
mov
fiadds
mov
mov
jo
ds
pop
gs
fimuls
jp
sahf
dec
cld
aaa
movsl
lds
cs
ret
mov
outsb
pop
cs
lods
pop
loopne,pt
dec
inc
cmp
mov
fistl
gs
daa
movsb
dec
pop
shlb
cltd
mov
in
int
xlat
iret
and
mov
add
out
ret
js
mov
pop
sbb
aam
inc
inc
dec
xchg
in
aam
popf
ja
inc
int
mov
inc
enter
fistpl
jns
dec
push
ds
cli
js
cmp
outsl
cwtl
xor
js
leave
fidivs
jge
lret
cld
jge
push
pop
andb
popa
cmpsb
pop
jo
jecxz
pop
sarl
mov
idiv
adc
push
push
test
jg
jecxz
out
jne
sub
mov
fstl
fldenv
adc
loopne
inc
popa
xor
xor
insb
xor
out
pusha
mov
into
stc
push
lock
sbb
jecxz
in
push
stos
push
jbe
out
jp
sahf
xchg
adc
inc
push
fisttpl
dec
mov
scas
outsb
nop
fimull
idivb
pop
add
push
jmp
jbe
push
push
leave
test
rol
pop
sub
js
shr
pop
inc
jle
icebp
push
rol
jmp
stos
inc
mov
mov
bound
aaa
les
and
scas
outsb
adc
fwait
xor
push
iret
nop
insl
in
int3
adc
and
sub
lods
and
xor
lock
add
push
rcrl
xchg
jl
xchg
jmp
imul
arpl
sarl
mov
push
cmp
mov
in
out
dec
das
cld
mov
add
iret
movsl
leave
in
test
add
loop
mov
dec
mov
ss
imul
les
jmp
jb
inc
dec
out
dec
jae
push
sbb
shr
jbe
hlt
push
arpl
stos
orl
push
shll
push
sub
mov
bound
pop
lods
push
pop
xchg
lods
pop
and
xchg
cmp
inc
cmp
movsb
cmc
mov
aam
mov
jg
int3
lock
cli
cmp
popa
mov
inc
out
mov
sbb
xchg
scas
dec
lret
andl
lret
push
lahf
sub
inc
jg
push
lods
xchg
cld
mov
dec
test
rcrb
or
sub
orl
or
cld
lret
sbb
add
lods
nop
mov
push
aaa
iret
pop
push
mov
pop
ja
jmp
stos
and
pop
sbb
mov
imul
and
sub
pop
mov
sti
inc
push
inc
push
xor
in
pushf
mov
add
mov
jg
jge
push
xor
clc
test
jb
stos
mov
mov
xlat
js
xchg
jno
nop
dec
jmp
shl
ss
lds
out
outsl
notb
sbb
push
cmc
test
in
mov
cltd
pushf
sahf
cltd
lret
cmp
dec
shlb
mov
lock
fisubrs
add
into
or
jecxz
sbb
dec
fsubs
xchg
pop
push
insl
fldl
dec
and
push
cmpsl
push
inc
mov
inc
leave
mov
sbb
fildll
pop
inc
add
mov
inc
mov
lcall
sub
pop
pop
sahf
mov
out
scas
xchg
movsb
pop
fldl
mov
adc
push
cmp
dec
jne
mov
push
std
out
pop
stos
pop
pop
add
mov
add
cld
aas
cmp
xor
addr16
jmp
shld
fwait
inc
lds
lret
pop
das
cmp
mov
push
addr16
imul
aam
aaa
data16
inc
aas
inc
pop
mov
mov
mov
jmp
scas
fsubr
xor
jns
pop
lods
add
xor
or
push
xor
mov
xchg
sbb
outsb
pop
inc
repnz
xor
aaa
sub
negl
leave
sub
mov
ja
in
ret
imul
sar
pop
mov
jge
cmc
push
adc
and
and
and
mov
and
add
sbb
push
xor
cmpsl
cld
push
js
sub
imul
popf
mov
dec
shl
shlb
jno
decb
cltd
repnz
push
mov
xor
testb
and
iret
mov
popf
test
decb
outsb
mov
and
xchg
je
dec
push
sti
mov
xchg
mov
cmpsl
loopne
mov
das
nop
push
jnp
or
jg
incb
jmp
cmc
ror
push
out
add
pusha
aaa
dec
xor
mov
dec
xor
dec
stos
jb
dec
pop
jg
fsubs
mov
stos
pop
outsl
adc
mov
daa
jle
inc
or
out
adc
xor
test
in
lea
fnstcw
aam
out
sub
repnz
popf
cmp
std
and
mov
dec
test
data16
cmp
fmull
mov
xchg
push
push
add
test
xor
jne
mov
push
xchg
arpl
add
sarb
repnz
push
inc
into
xor
call
sahf
pop
jge
jbe
or
test
adc
insl
stc
adc
aad
faddl
movl
movsb
popf
jbe
cmp
and
lcall
arpl
xor
loope
nop
jp
add
in
push
mov
sahf
ret
mov
and
or
cs
cmp
test
std
dec
push
or
cwtl
push
into
addr16
cltd
nop
xor
mov
cmp
aas
mov
mov
imul
fmul
pop
cmp
scas
jmp
out
popa
fsubl
adc
inc
inc
shrl
das
stos
and
mov
fisubrl
jg
in
adc
push
dec
sub
mov
xor
fistpl
xor
push
mov
jb
cld
insb
jae
xor
cmp
lret
jl
daa
hlt
jecxz,pt
jmp
out
test
jp
pop
test
xor
nop
orl
pop
lods
in
and
jge
stos
imul
mov
repnz
jmp
lods
js
jg
dec
ret
jmp
push
or
jg
mov
imul
mov
adc
js
and
mov
jge
icebp
jae
xchg
mov
int3
cmp
arpl
mov
lret
int3
mov
lds
rcl
loopne
sar
imul
cltd
sub
sbb
les
aad
adc
pop
shll
mov
inc
push
daa
cmp
fwait
idivl
popa
out
cmp
stc
imul
shlb
sbbl
push
xor
in
dec
les
js
mov
pop
clc
jne
push
cli
dec
adc
adc
leave
cmc
jle
jmp
and
lcall
push
dec
test
repnz
mov
gs
movsl
test
nop
lock
loope
testl
sbb
in
test
rol
cmp
or
jecxz
fistpl
xor
nop
cmpsl
and
imul
xchg
fldt
aaa
jnp
out
pop
inc
jle
jecxz
aas
jmp
push
xor
adc
shrb
imul
ja
jns
adc
lods
mov
test
stos
lds
mov
cmp
or
pop
enter
mov
dec
cmp
mov
or
popf
lock
mov
lds
inc
xchg
xor
out
insl
in
xchg
enter
nop
and
shlb
pop
std
dec
xchg
imul
mov
xchg
push
xlat
fs
std
rclb
fidivrs
daa
or
mov
mov
push
jp
outsb
or
arpl
jno
mov
je
out
or
enter
insl
rorb
sbb
lods
setge
leave
rorb
outsl
jp
cmp
mov
jl
xor
into
mov
jmp
popa
pop
cld
fcompl
outsb
lods
movl
adc
imul
adc
mov
cmp
sbb
add
cs
das
popa
daa
dec
jbe
mov
das
mov
test
pop
xchg
negl
or
out
leave
inc
arpl
dec
mov
and
shl
and
cmp
dec
jne
sub
int
les
or
mov
pop
scas
adc
cmpsl
into
adc
arpl
mov
stos
pop
sti
lcall
in
lock
sbb
outsl
mov
and
cltd
sbb
popa
add
mov
testl
push
or
jno
xchg
jb
scas
dec
lods
ja
mov
in
xchg
add
stc
pop
mov
jl
shrb
jl
mov
inc
scas
xorl
pop
test
sahf
cmp
sbb
dec
gs
xlat
inc
sbbl
arpl
loop
dec
lcall
jle
pop
aas
cld
popa
inc
fdivrl
xor
test
filds
aad
cmpsb
push
out
mov
in
std
pop
mov
stos
in
or
adc
sbb
aam
cmp
mov
add
cwtl
jne
lret
cmp
mov
lock
cwtl
xor
push
int
sahf
xchg
mov
or
imul
test
ja
adc
jle
or
adc
cli
decl
bound
mov
cli
xor
les
sahf
jge
push
adc
xor
or
cs
pop
out
fdivr
leave
xchg
stos
cmp
aas
jecxz
sbb
add
lods
or
sbbl
imul
imul
std
sbbl
in
pop
push
xor
xlat
loop
ljmp
outsl
dec
pop
sahf
push
cwtl
out
push
fwait
imul
pop
lods
jmp
xchg
xchg
loopne
orl
out
cmp
faddp
push
fwait
jae
xchg
mov
scas
nop
xchg
int3
jmp
fldcw
xor
sahf
stos
mov
pop
jo
ja
xor
fstps
cld
mov
cmc
decl
add
fmuls
mov
out
pop
mov
loop
push
xchg
sti
rclb
fs
fstps
and
int
pop
fbld
mov
sahf
fs
and
mov
mov
cmc
test
pusha
push
mov
test
jo
or
sub
fdivs
mov
in
pop
stc
jg
les
jbe
push
subl
add
loop
insb
lods
push
inc
pushf
cmp
addr16
push
pop
jns
stos
mov
adc
dec
mov
dec
das
inc
add
or
cmp
int3
jge
fstpt
repnz
mov
sub
loope
mov
cli
shlb
inc
lcall
aam
add
adc
cwtl
jnp
inc
ja
sbb
out
movsl
mov
loop
inc
bound
icebp
aas
pop
sub
gs
cmpsl
jnp
mov
int3
sahf
pop
into
fs
jle
lods
repz
cmp
xchg
jmp
pop
mov
mov
loopne
mov
icebp
dec
lcall
push
pop
negb
icebp
loopne
jb
xlat
and
test
and
push
fnsave
jne
push
into
ss
sahf
jae
add
xchg
mov
test
aad
mov
hlt
insb
cwtl
add
mov
cli
ljmp
xchg
das
stos
fnstsw
rcrb
fnstsw
xor
mov
push
fidivrl
movsl
hlt
out
test
data16
cmpsb
int
push
in
inc
sbb
sbb
sti
xor
push
add
je
js
sbb
adc
popa
fcmovb
fld
xor
pusha
jecxz
push
js
ffree
fnsave
sti
in
mov
inc
fwait
ja
scas
jle
in
mov
xchg
stos
push
xor
mov
adc
cli
mov
mov
dec
mov
fisubs
shrl
sbbb
xchg
xchg
cmpsb
jg
rol
clc
jno
xlat
into
loope
push
lret
ljmp
fs
dec
jecxz
insl
lret
rol
ffreep
outsb
fwait
xchg
cmp
fstp
or
insl
je
cld
outsb
mov
shll
cmp
sub
aas
mov
es
cmp
sub
lcall
dec
jne
dec
xor
xchg
lret
lods
pop
and
mov
outsb
addr16
mov
stos
mov
aam
mov
inc
xchg
out
mov
aam
lret
dec
scas
stos
push
xchg
aam
pop
or
pop
pop
int
and
xchg
push
js
or
lcall
mull
mov
lods
or
pop
mov
stc
mov
rclb
bnd
int3
ljmp
mov
das
and
inc
cli
cwtl
add
adc
mov
fcoml
pop
test
sbb
inc
divl
jno
mov
mov
mov
aad
inc
mov
movsb
pop
pushf
sub
adc
xor
jb
icebp
leave
mov
inc
das
add
xchg
subl
cmp
call
push
fisubrl
pushf
mov
or
pop
jge,pt
lcall
mov
xor
test
filds
clc
xchg
push
and
xchg
ret
inc
lea
dec
mov
gs
sbb
sub
cmp
inc
dec
clc
in
popf
xchg
sub
pushw
imul
or
and
pop
mov
jge
and
int3
test
cmp
fidivrl
jnp
add
lahf
push
dec
mov
inc
orl
sbb
xchg
xchg
push
lds
dec
hlt
rcl
rorl
push
lret
mov
jae
jecxz
aam
adc
sub
int
lcall
imul
outsb
test
push
sub
rcll
loop
ss
test
xchg
pop
xor
adc
dec
mov
inc
outsb
fdivrp
aaa
and
lret
push
xor
push
mov
push
out
xor
rorb
data16
jmp
icebp
jl
sub
xchg
lods
push
sbb
fwait
in
cmp
icebp
daa
mov
mov
inc
inc
push
push
call
jnp
das
loop
adc
insb
out
push
pop
sbb
aad
hlt
test
push
push
idivb
pop
loope
mov
ds
sbb
mov
mov
xchg
adc
mov
fisubl
data16
das
in
and
adc
out
add
outsl
ret
jp
gs
loope
or
decl
ljmp
out
jbe
push
mov
dec
iret
inc
xor
cmp
repnz
ja
add
aam
cmp
fwait
test
inc
jmp
sub
mov
dec
hlt
les
mov
call
in
jp
or
cmp
xchg
cli
xchg
xchg
jo
pop
jle
xchg
inc
lret
sub
fimull
clc
shll
cld
fnsave
outsb
sub
pop
jmp
jb
ficoml
push
arpl
or
xlat
add
xchg
ret
popf
pop
ss
lcall
arpl
sub
dec
stc
fbstp
push
je
sbb
sub
push
das
dec
cld
jl
adc
repz
ret
test
sarb
push
js
and
popf
mov
mov
jl
inc
xchg
rcll
into
mov
jo
aaa
data16
xchg
sti
in
add
fldz
add
sahf
stos
and
mov
sbb
and
adc
mov
inc
cmpsl
cwtl
adc
pop
sub
push
rclb
and
mov
mov
sub
cltd
xchg
xchg
cli
pop
les
leave
imul
ja
mov
out
xor
jge
pop
pop
shll
xchg
xor
popa
mov
dec
dec
jae
jmp
mov
out
push
pusha
push
rcll
jmp
pop
sbb
stos
loope
roll
pop
inc
je
mov
or
movsb
mov
pusha
jmp
pop
ds
xor
sub
push
fstps
mov
push
push
jge
mov
repz
frstor
popf
pop
mov
iret
bound
lahf
js
jbe
sub
loopne
xchg
andb
into
in
iret
jecxz
or
jmp
jno
jno
test
mov
pop
mov
jmp
and
repz
cwtl
pop
jae
movsb
imul
pop
cli
leave
cmp
je
sbb
dec
fdivl
or
sub
mov
ljmp
sahf
or
inc
xchg
push
pop
cmp
inc
scas
dec
xor
ljmp
pop
adc
je
lock
and
xor
xchg
in
sbb
mull
call
ret
fnstsw
lods
adcl
push
cmp
int
xchg
popa
jle
or
ret
out
jle
sbb
test
fldl
aas
sahf
push
dec
inc
out
jo
push
dec
shl
js
cmp
xlat
pop
fucom
sbb
jge
inc
mov
fisttpl
loop
add
xchg
addl
cmc
test
pusha
mov
push
xchg
test
and
cli
mov
push
scas
loop
dec
jno
test
loop
xchg
dec
xor
xchg
mov
cmp
stos
rorb
sub
pop
sub
std
push
add
mov
es
pop
fdivrs
fdivs
pusha
pop
stc
popf
lretw
jb
sub
fwait
dec
divb
loop
xchg
aas
sbb
xor
sbb
scas
loopne
jo
mov
adcl
push
imul
ficomps
push
mov
mulb
test
dec
fadds
ja
add
jmp
nop
out
stos
pop
jle
lret
jmp
cmp
adc
lods
out
mov
into
imul
in
dec
add
cmp
mov
sub
std
adc
push
idivl
adc
sbb
adc
insb
or
jo
jle
xor
div
xor
cmpsb
dec
movsl
lahf
xor
inc
push
sbbl
inc
jge
pop
push
mov
adc
push
aas
mov
jns
xor
or
lcall
dec
sub
imull
xchg
lcall
sbb
xor
dec
stos
invd
mov
scas
lret
cmp
mov
loop
bndstx
andl
cld
ret
roll
test
sub
sub
push
in
data16
in
test
lea
push
xchg
clc
out
cmp
sub
dec
xchg
cmp
sbbb
mov
out
xchg
push
lahf
imul
mov
or
mov
js
inc
pop
add
push
and
shlb
mov
inc
cs
lret
mov
out
jmp
dec
or
push
int3
lock
pop
in
add
mov
or
cmc
dec
insb
pop
sets
addr16
add
ja
popa
jno
mov
mov
cmp
xor
in
test
aad
pop
enter
mov
dec
fdivrp
inc
lods
adc
rolb
pop
xor
and
scas
outsl
fs
or
insb
shlb
fwait
mov
add
add
in
mov
push
repnz
shll
xchg
in
push
outsl
std
ret
mov
ucomiss
in
dec
xor
enter
and
push
stos
jg
imull
jno
rolb
push
push
add
xor
flds
inc
lods
mov
dec
sbb
push
mov
dec
scas
inc
xchg
mov
lds
out
xorb
inc
aam
mov
push
jnp
jno
jbe,pn
push
stos
jbe
mov
mov
or
pop
sbb
mov
adc
push
jp
pushf
or
pusha
dec
sbb
sub
mov
pop
cs
fcomps
scas
adc
inc
fsubs
cmp
lret
out
sbb
push
ret
aad
push
shl
pop
pop
mov
into
dec
jae
gs
dec
ss
dec
cli
ds
sub
jo
js
cmpl
or
vmovaps
mov
rcl
push
in
das
inc
arpl
push
adc
clc
loope
mov
mov
push
stos
cltd
xchg
push
ficoml
mov
inc
jp
inc
scas
xchg
mov
test
push
jne
repz
adc
pusha
sub
mov
arpl
sbb
pop
pop
and
rorb
dec
insl
add
adc
insl
add
pop
cltd
mov
imul
sarb
sbb
insl
popa
adc
in
outsb
icebp
cmp
and
xor
xchg
jecxz
sub
push
enter
jae
nop
mov
add
pop
out
aam
pusha
notb
into
std
cmpb
ret
dec
out
jecxz
or
or
mov
push
enter
je
dec
clc
pop
mov
repz
inc
mov
call
repnz
mov
int3
lods
sbb
nop
frstpm(287
sbb
int3
loop
mov
mov
ficompl
clc
scas
decl
test
jp
cmp
jl
sbb
fwait
lret
cwtl
and
add
in
pusha
insl
movb
sbb
outsl
nop
mov
shll
sbb
ljmp
inc
ret
outsl
mov
sahf
jns
xor
xor
jmp
movb
mov
imul
arpl
mov
mov
xor
out
jl
inc
mov
sarb
mov
xor
ds
sbb
inc
mov
ret
and
rcll
mov
mov
pop
and
dec
movb
push
mov
xchg
jbe
rcll
test
xchg
mov
mov
sub
adc
data16
lods
repz
xchg
icebp
fs
sbb
xchg
cmp
or
push
in
daa
mov
mov
imul
mov
inc
add
into
push
movsb
popf
int3
adc
int3
xchg
push
mov
dec
cmp
pop
bound
sub
fisttps
push
push
outsl
loop
mov
push
lock
cs
sahf
dec
push
sub
jb
cmp
pop
dec
or
pushf
aas
addr16
sbb
cmpsl
xchg
pusha
adc
sub
and
cmpsl
fldcw
imul
pop
or
dec
xor
sbb
pop
out
ss
dec
loopne
cld
cld
hlt
std
mov
inc
repnz
pop
inc
pop
pop
xchg
and
or
mov
hlt
js
pop
mov
lock
cmp
in
stos
fcmovbe
jmp
lret
popf
sbb
mov
xchg
mov
leave
arpl
les
aaa
xor
mov
stc
ret
xor
cmpsl
aam
mov
aaa
sbb
fs
mov
repz
adcl
daa
fmuls
in
jecxz
jae
push
sbb
mov
add
stos
test
in
cli
xchg
sub
mov
lods
mov
xchg
mov
loope
jmp
pop
mov
mov
sub
negl
int
or
cmp
pop
sahf
push
adc
add
sarl
les
addr16
lahf
insl
add
adcl
pop
xchg
dec
or
ficompl
ret
hlt
xchg
insb
add
adc
das
pop
sub
mov
xchg
push
inc
xchg
push
popa
or
scas
dec
and
bnd
mov
dec
mov
pushf
sbb
jp
and
pop
arpl
jge
mov
lods
mov
mov
inc
cli
mov
inc
jb
dec
mov
push
aaa
mov
xor
push
xor
dec
neg
out
pop
enter
cmp
stos
jmp
call
jmp
fisttpl
xchg
loop
sbb
mov
xor
arpl
xor
in
mov
lea
out
imull
lret
jae
outsl
push
loopne
ficoms
xchg
xchg
xchg
mov
push
inc
cmpsl
gs
add
insl
jmp
addr16
push
adc
or
xor
jne
fs
out
jno
int3
mov
jo
out
sub
or
mov
dec
and
sahf
cmpsb
mov
jb
fistl
out
ds
xchg
ljmp
sub
pop
loope
dec
mov
inc
subl
testb
xchg
subb
xchg
pop
jmp
in
xchg
xchg
and
lcall
and
add
ret
mov
cli
fldl
movsb
popf
loopne
xchg
shrl
subb
ds
mov
andl
outsl
dec
add
xchg
mov
xlat
fldcw
jbe
lea
pop
iret
jp
push
cmp
xor
pop
mov
js
aam
sub
mov
aam
cmp
adc
dec
jecxz
inc
sahf
idivl
call
dec
adc
jae
ret
mov
in
xchg
mov
and
inc
push
jmp
es
add
mov
rcl
dec
jp
psrlq
popw
icebp
cmc
js
loopnew
lods
dec
fcomps
dec
rorl
lea
test
mov
insb
lock
mov
clc
fildll
xchg
cli
xlat
stos
or
adc
aad
rorb
cmp
inc
sahf
mov
insl
pop
mov
cmp
inc
aas
aam
stos
ljmp
fists
dec
aad
push
decb
mov
loopne
push
pusha
jbe
pop
pop
unpcklps
adc
jmp
dec
xor
or
xor
xchg
insl
add
das
movsl
sahf
iret
cmpsb
dec
hlt
xchg
xor
dec
divl
shl
popf
push
xchg
sti
jg
fwait
test
cwtl
sahf
fisttps
lock
out
or
js
mov
repz
cmp
and
cmc
in
mov
push
fs
push
adc
mov
push
xlat
sti
mov
imul
and
xchg
dec
jo
insb
mov
add
sahf
jg
les
test
sbb
out
jecxz
sbb
stos
lods
bound
int
rolb
cmp
cmpsl
sti
sub
adc
loopne
adc
or
dec
xchg
mov
adc
push
ret
in
into
adc
adc
stc
mov
push
sar
pop
jl
pop
ror
cmpl
and
lods
pop
aad
scas
in
xor
cmp
rclb
add
adc
int
int
or
mull
mov
sahf
cmpsl
sub
incl
nop
fsts
imul
jmp
sub
test
mov
xor
icebp
daa
inc
popf
mov
sbb
js
and
movsb
stos
std
add
xchg
fdivr
push
testl
or
or
movsl
push
lcall
cmp
or
ljmp
push
jl
fwait
ljmp
add
jg
xchg
ficoml
aam
mov
lcall
loope
mov
xchg
pop
repnz
jno
lods
mov
stos
movsl
inc
mov
and
movsl
push
sub
cmp
mov
add
pop
cmp
mov
shll
or
dec
mov
popf
mov
mov
jp
sub
je
add
jg
mov
repz
adc
daa
les
std
jo
ja
lahf
fwait
sub
sbb
xor
mov
mov
insl
xor
loope
pop
cmpsl
mov
outsb
dec
in
icebp
cmpsl
inc
sarb
inc
mov
into
aas
repnz
pop
or
inc
lahf
cltd
stos
mov
dec
push
dec
or
call
push
leave
push
clc
outsl
aas
push
lret
mov
inc
mov
stc
xor
in
pop
div
cltd
xchg
sub
mov
aam
mov
psubsb
dec
cmp
jg
insb
fdivp
pmullw
orb
push
js
cmc
pop
je
pop
mov
push
mov
mov
and
xchg
daa
cld
pop
inc
fcoml
fisttps
bound
push
lock
jp
test
jae
addr16
ficoml
imul
lahf
adc
pop
insl
lcall
dec
add
jmp
pop
leave
cltd
mov
aaa
mov
sub
sbb
dec
xorb
or
sbb
push
fadds
jns
inc
out
in
xlat
mov
cmp
cmpsl
sub
cmpsb
iret
or
pop
cli
loopne
iret
cmp
and
rcrb
push
shlb
fisttpl
lods
pushf
repz
stos
push
mov
stc
mov
sub
stos
stos
stos
stos
negb
dec
sub
std
int3
pop
push
outsl
insb
jbe
jecxz
add
adc
dec
push
sbb
addr16
dec
movsl
adcl
fcmovne
ds
xchg
out
cli
jno
loopne
daa
in
jle
xchg
xor
push
and
rcr
ret
js
outsl
pop
mov
fldt
push
jl
test
pop
pop
lods
adc
mov
xor
ret
loopne
negl
cwtl
sbb
fs
sbb
lods
mov
cmp
out
xchg
sti
int
add
jmp
neg
or
ss
mov
testb
and
add
adc
or
arpl
sub
xsha256
cmpsb
adc
stos
jns
dec
cmp
stos
mov
xchg
minps
ds
ss
pop
insl
pop
int
push
mov
outsb
cmpsl
scas
adc
std
jge
xchg
sbb
mov
cmp
or
loopne
mov
inc
lret
pop
xlat
gs
xchg
aas
jg
lods
lea
sbb
inc
or
mov
xor
jecxz
sbb
dec
subb
insl
cmp
mov
or
ljmp
aam
dec
in
call
inc
bound
mov
stos
sbb
lret
stc
pusha
les
sbb
loopne
or
lahf
js
ds
push
inc
inc
in
mov
mov
fdivrs
inc
push
fdivs
mov
add
stos
aam
ja
or
mov
clc
lret
into
push
add
cmp
mov
sar
movsl
push
fistps
add
mov
xor
pushf
ljmp
mov
js
mov
inc
lock
out
mov
not
add
std
aas
adc
into
push
subl
xchg
jnp
mov
xchg
pushf
push
inc
jno
cmc
mov
test
stos
add
push
xor
data16
push
adc
mov
cwtl
jge
shlb
jns
mov
push
push
ret
cmp
sbb
jns
lcall
aaa
lods
push
jb
lds
push
mov
incb
sbb
popf
stos
jo
pusha
or
mov
insl
cmp
sbb
jp
pop
scas
imul
std
imul
adc
add
jbe
push
addr16
out
inc
xchg
fdivrs
shrb
pop
into
mov
inc
jne
mov
ja
leave
adc
insl
push
in
cmp
pop
cmpsl
add
out
push
ljmp
or
aam
inc
mov
mov
or
push
scas
test
outsl
mov
pusha
mov
jo
mov
popa
xchg
jno
imul
movsb
adc
pop
popf
or
sbb
jecxz
imul
les
and
mov
sarb
shll
push
lock
cmp
or
mov
into
cmpl
ljmp
inc
push
loopne
xor
and
pop
leave
xchg
mov
popa
clc
push
lahf
fsubs
ds
push
out
lea
jg
mov
and
mov
int
es
or
pop
add
sub
sub
xchg
jae
mov
adcl
je
jb
push
daa
sbb
sub
mov
pop
xor
pop
cmpsl
inc
or
mov
lahf
jne
dec
lods
adc
sbb
push
test
xchg
jnp
mov
aaa
pop
lcall
cmp
pop
into
icebp
lret
mov
addr16
cltd
lock
pop
fidivl
mov
cwtl
jnp
mov
incb
loope
sahf
ss
faddl
imull
dec
mov
sbb
shl
outsl
ret
das
sbb
insl
lods
lods
test
movsb
je
mov
test
in
decl
insb
popa
rcrb
jp
insb
sub
and
sub
pop
push
scas
mov
test
stos
dec
mov
xchg
sbb
int3
pop
es
sarl
gs
sub
inc
shll
push
xor
dec
imul
ja
pop
in
test
mov
sub
jb
xchg
mov
pushf
test
jns
mov
dec
aaa
insl
push
inc
pop
lock
sub
mov
jecxz
movl
lods
movsb
pop
cmc
cmp
pop
cs
jmp
mov
mov
cmp
mov
fdivrs
push
in
mov
mov
jno
jp
xor
sbbb
out
pop
jnp
and
adc
and
icebp
inc
shr
fwait
sbb
mov
jne
and
test
add
push
sub
sub
pop
and
jb
sbb
out
subl
sub
mov
pop
cmp
dec
repz
push
sub
push
mov
jecxz
mov
nop
lret
mov
test
xchg
add
int3
popf
imul
ret
js
and
sbb
and
lods
adc
pop
push
filds
scas
in
lahf
notl
pop
aaa
xchg
sbb
rcll
repz
cmp
lcall
movsb
pop
insb
das
loope
sarl
or
add
and
push
and
add
cmp
sbb
vpmullw
jle
mov
adc
and
dec
nop
push
in
lds
dec
test
notb
pop
push
int3
mov
loop
mov
adc
jns
lock
pop
sbb
push
test
push
mov
pop
and
dec
lahf
adc
xchg
and
pop
add
into
nop
cld
daa
sbb
mov
mov
mov
or
and
and
adc
sbb
aad
fnstcw
sub
roll
and
imul
mov
outsb
pop
xor
mov
shrb
popf
in
cs
mov
sub
jl
push
fstl
aad
xchg
enter
std
es
sbb
fisttpl
ja
pop
sbb
test
leave
loope
mov
movsb
adc
push
sbb
repz
mulb
sbb
cmp
lea
or
addl
lahf
add
sub
nop
rcrl
mov
rcrb
mov
dec
or
cmp
shl
push
fwait
repnz
ljmp
sub
mov
adc
sub
ret
int
das
cmp
mov
into
xchg
test
lock
inc
or
xchg
in
or
sbb
push
lahf
push
inc
cmpsb
pop
sub
cmpb
pop
ljmp
fisubl
mov
enter
movsb
xchg
test
and
enter
and
mov
das
lcall
adc
or
ds
cmp
aam
cmp
pop
lods
jb
mov
insl
mov
int
xor
xchg
xchg
or
adc
jo
shll
add
jl
loop
in
into
dec
xchg
push
jecxz
cmc
sbb
dec
out
cwtl
jg
movsb
mov
jp
pop
es
lds
imul
ret
test
and
sbb
sub
je
sub
push
pop
movsl
sub
cwtl
js
jnp
jmp
mov
daa
jae
push
sub
dec
sbb
adc
mov
jge
nop
lock
cli
lock
jle
shl
inc
push
arpl
xor
push
fstps
add
andb
push
leave
cld
dec
dec
lock
fists
mov
pop
pusha
andl
shl
loopne
test
sub
loopne
dec
hlt
loope
ss
jecxz
in
mov
js
lcall
mov
fwait
mov
in
mov
scas
test
daa
arpl
orl
fldcw
xchg
repz
push
out
movsl
cmp
insb
or
imul
sbb
mov
xchg
shlb
aam
in
ret
insb
jnp
cmp
mov
mov
punpckhdq
xchg
data16
cwtl
jo
lds
jb
sbb
stc
arpl
hlt
out
push
jmp
jnp
outsb
mov
push
mov
loopne
push
ret
das
add
es
mov
xchg
push
inc
in
mov
lret
add
and
repnz
in
dec
dec
pop
jnp
mov
sub
xchg
push
sbb
ja
orl
iret
test
cmpsl
je
ret
mov
and
push
pop
push
outsb
inc
les
sbb
pop
and
xor
inc
and
jae
pop
xchg
std
scas
jmp
sub
mov
jmp
cmp
movsb
jne
xor
stos
ficomps
mov
push
sbb
add
jecxz
std
outsb
out
jge
dec
aas
sub
fmull
push
shll
lret
imull
imul
and
mov
xor
imul
aam
div
int
inc
out
dec
repnz
mov
loop
in
cmpsb
mov
mov
mov
xor
mov
jle
divb
movsl
dec
push
xchg
test
or
mov
push
inc
mov
inc
adc
movl
dec
shll
push
and
add
pushf
dec
jle
ss
fistpll
jo
pop
je
jo
ret
dec
pop
push
mov
mov
xor
repz
mov
packssdw
aaa
gs
mov
dec
jge
je
imul
out
mov
jmp
xchg
sub
add
jae
in
repz
or
dec
cmp
jne
or
jmp
dec
cmp
sbb
movsl
movl
mov
sti
mov
add
out
mov
daa
scas
xchg
mov
jl
icebp
push
jp
inc
mov
adc
mov
leave
lret
dec
notb
sti
lret
sub
imul
sbb
and
mov
mov
in
dec
loopne
mov
sub
enter
sbb
push
mov
push
sub
xchg
int
mov
mov
add
jg
cwtl
insl
fcmovnb
hlt
xchg
loop
test
ss
sub
mov
push
push
sbb
xlat
add
sub
mov
and
inc
inc
cmp
push
sbb
jo
jge
cmp
inc
mov
sahf
test
aas
test
mov
pop
les
cmp
test
loopne
mov
mov
sti
fsubp
mov
lods
imul
sub
aad
and
lea
jns
je
mov
mov
push
mov
dec
imul
imul
add
sbb
add
xchg
cltd
inc
icebp
stos
jecxz
sub
add
cmpsl
mulb
shlb
and
jbe
lret
mov
cltd
and
sub
add
xchg
add
cld
push
ds
clc
mov
inc
adc
mov
imul
imul
cmp
repz
icebp
push
mov
arpl
sub
nop
xlat
mov
mov
xchg
pushf
push
ds
cmp
std
inc
mov
pop
xchg
jl
jl
ret
sti
cmc
popf
ss
cmp
andps
fdivs
mov
lahf
imul
jp
stos
rcr
addr16
jle
xchg
scas
aaa
out
jge
mov
in
je
scas
in
pop
xor
pop
add
xchg
incl
daa
imulb
pushf
inc
clc
mov
test
sahf
cmp
sub
jmp
clc
and
lock
add
lock
icebp
pop
in
cli
sbb
inc
addl
bound
sete
in
bound
cmp
pop
stos
adc
daa
adc
dec
xchg
add
cmpsl
xchg
loop
inc
lods
lods
shlb
cwtl
lds
aad
std
sub
daa
repnz
movsb
push
pop
mov
mov
ljmp
adc
add
pop
mov
ja
mov
and
cmp
jl
dec
add
xor
rorl
flds
lahf
test
dec
divl
out
xor
and
pop
sbb
aam
jmp
dec
xor
bound
inc
dec
mov
jge
in
jo
cmp
and
cmpsl
push
scas
bound
push
add
dec
hlt
in
push
lret
cwtl
in
pop
lret
jae
notb
std
jp
sub
mov
inc
or
mov
hlt
cmpsb
xchg
jmp
sbb
jb
dec
out
push
xor
xorb
lods
in
push
pop
mov
test
mov
mov
dec
xchg
pop
loopne
and
cmc
enter
xchg
pop
xchg
addb
inc
fisttps
mov
push
xchg
push
scas
pop
test
jne
mov
xchg
jmp
add
arpl
mov
test
cmp
push
adc
jl
jne
push
in
ret
jle
fmull
add
mov
mov
es
lcall
imul
sub
mov
aas
arpl
orl
adc
xor
pop
mov
mov
mov
mov
insl
mov
dec
imul
jmp
cmp
out
fidivrl
insl
dec
jmp
clc
lcall
pop
xchg
pop
or
push
nop
jo
sahf
mov
fs
movsl
mov
aaa
and
movsb
push
inc
xor
mov
or
lds
fcoms
cmc
adc
sbb
push
mov
mov
adcl
scas
ficomps
xor
mov
clc
out
jbe
lret
cmp
nop
loop
jae
sub
adc
sub
lods
out
cs
test
ljmp
lea
sbb
das
jae
pop
es
rorb
ja
dec
out
pusha
cmp
fwait
pop
fistl
ja
clc
stos
push
or
lods
mov
inc
ret
push
or
adc
mov
and
decl
mov
pusha
inc
mov
bound
ja
mov
mov
jecxz
mov
pop
ja
jp
cld
jge
inc
loop
stc
clc
xchg
and
es
stc
rorl
xchg
pop
dec
xchg
bound
ret
fidivl
cwtl
xor
ljmp
push
out
iret
jns
stos
adc
and
and
and
loope
daa
xor
in
divl
or
jnp
loopne
inc
xchg
add
inc
js
sub
mov
shr
fnstsw
fisubrs
push
xor
out
scas
out
cltd
out
mov
movsb
mov
dec
jecxz
mov
jge
lock
fdivl
aas
or
or
imul
call
daa
lahf
lods
jnp
daa
mov
int3
mov
lock
sub
cltd
divb
fwait
loope
sbb
scas
jp
imul
xor
aas
pop
enter
jge
leave
adc
in
in
dec
daa
mov
insb
fadds
pusha
sub
adc
in
push
loop
pushf
jle
leave
xor
jge
lods
sti
lds
mov
leave
test
mov
jae
push
xor
mov
lock
fistps
outsl
xchg
hlt
xchg
sub
xchg
cmp
inc
daa
les
mov
and
lret
lods
xlat
gs
addb
sub
idiv
sub
insl
sahf
test
and
scas
sub
leave
mov
sub
int
sub
subb
pusha
mov
test
fists
out
jno
fcmovnu
push
lods
mov
jmp
xchg
call
jns
mov
xchg
stos
pusha
out
leave
mov
mov
pop
cmpl
out
repnz
jae
push
mov
cmp
push
js
xlat
dec
jns
jp
test
das
adc
movb
push
rorb
mov
pop
into
fnstcw
mov
test
aam
jecxz
nop
fiaddl
popl
xchg
repz
addr16
ret
cmpsl
adc
jo
pop
push
sbbl
movsb
sahf
push
or
mov
pop
cmp
sbb
loope
addb
in
add
aas
pop
and
mov
rcr
dec
push
jo
mov
xchg
mov
jl
pop
cmp
dec
lods
push
pop
aas
pop
fs
xor
cwtl
test
mov
data16
out
xor
or
out
add
xchg
mov
fstp
fdecstp
std
roll
arpl
add
xchg
lea
lahf
bound
sbb
jnp
ret
xchg
push
jb
pop
int3
in
inc
cwtl
mov
or
inc
outsl
push
test
jbe
add
sbb
les
add
nop
sbbb
xchg
repnz
cmpsl
push
js
imul
clc
sub
mov
pop
stc
push
icebp
lds
loope
daa
popa
push
xchg
or
test
repnz
fwait
mov
add
sub
mov
pop
inc
sbb
mov
and
dec
and
jb
lods
mov
fsubrs
xor
push
and
test
loope
shlb
stc
in
test
mov
out
xor
lea
and
lahf
loopne
repnz
dec
imul
xor
fs
push
fisubrl
sbb
pusha
mov
jmp
inc
or
sbb
push
pushf
or
mov
adc
mov
loopne
movsl
ja
hlt
inc
jae
pop
cmpl
cltd
aad
and
aas
insb
mov
push
neg
mov
push
rol
das
repz
dec
mov
and
mov
lea
dec
push
adc
push
jnp
or
sti
andl
shlb
in
xor
andl
cmp
jne
aaa
rcrb
xchg
lock
jns
jl
pop
mov
dec
pop
pop
lods
jne
jns
jbe
mov
jmp
xlat
xor
inc
aas
dec
sub
sub
pop
outsb
pop
outsl
adc
cmc
and
js
add
out
cmp
les
mov
push
ret
cli
or
arpl
mov
and
hlt
jmp
subb
sbb
data16
imul
out
jge
sbb
iret
dec
xor
mov
mov
dec
sarl
jbe
mov
xchg
mov
sbb
fmull
sub
jg
stos
push
dec
notb
sbb
fisubs
inc
hlt
or
push
setne
xchg
lcall
or
inc
cwtl
fstps
iret
sub
loopne
ret
sbb
push
pop
in
aad
adc
inc
mov
cwtl
inc
cltd
jbe
aad
dec
pop
je
lods
je
jmp
nop
mov
push
cmp
pop
dec
or
std
mov
mov
hlt
roll
push
test
xchg
negb
jbe
sahf
ljmp
sub
pop
push
inc
dec
bswap
mov
adc
or
sarb
loop
lret
add
out
divps
in
sbb
inc
push
stc
mov
cmp
mov
jp
adc
dec
mov
cli
js
pop
aad
subb
mov
xchg
or
arpl
ljmp
mov
aad
and
cli
cmp
bound
jl
adc
pop
xchg
scas
dec
xchg
sub
fwait
lods
push
std
xchg
movsl
cs
aad
enter
fwait
cld
ds
out
mov
mov
cmp
into
das
and
cmc
mov
push
push
adcl
repz
or
int3
test
lahf
in
stc
push
sub
repnz
cmp
mov
pop
fmull
loopne
sub
jge
xchg
das
and
imul
rorl
mov
mov
push
cmp
xchg
popf
ret
xor
pop
cli
mov
rol
call
adc
filds
dec
cwtl
sbb
sbb
jae
repz
dec
sahf
mov
dec
mov
lock
in
cmpsb
jae
clc
add
adc
mov
or
mov
clc
popa
cmpsl
mov
pop
gs
sub
jb
test
mov
pop
mov
cmpsl
lea
inc
dec
jl
cmp
dec
adc
cmp
sub
and
cmp
pop
xchg
into
es
dec
add
fcomi
popa
fadds
js
add
xchg
lcall
jl
pop
or
or
cmpl
xlat
xor
popw
adc
adc
dec
cwtl
mov
in
sbb
xchg
shl
mov
inc
in
and
inc
pop
xchg
cmp
popa
imul
cmpsl
outsl
jae
jo
xor
ret
xlat
mov
sbb
push
inc
cs
inc
adc
sub
dec
mov
loopne
mov
mov
push
dec
sti
push
inc
jno
out
xchg
jecxz
out
pop
add
jb
jge
in
xor
sbb
add
pushf
push
fdivrp
cmp
movsl
xchg
jo
sbb
repz
stc
push
inc
pop
gs
add
xchg
out
pop
loope
in
jb
mov
daa
lods
xchg
out
fisubrs
mov
inc
xchg
dec
call
lock
add
mov
icebp
cmpsl
insl
push
out
add
aam
ljmp
scas
sbb
shl
push
xor
push
push
cltd
std
andb
repnz
add
xchg
add
mov
push
dec
ja
xor
fisttpll
in
mov
mov
mov
pop
cltd
pop
mov
jge
pop
mov
rcrb
or
orb
adc
sub
iret
jmp
int3
addr16
imul
and
or
sar
clc
daa
mov
mov
sub
mov
dec
dec
rolb
jecxz
sarb
jb
pop
mov
aad
cmp
push
stc
and
xchg
shr
cmp
xchg
mov
subb
push
pop
int
flds
mov
icebp
push
scas
cwtl
cmp
push
lea
mov
mov
push
xor
repz
cli
jmp
xchg
push
xor
mov
mov
add
mov
lcall
xorl
sbbb
scas
jb
nop
mov
es
push
mov
adc
lea
jns
push
mov
inc
mov
add
cmp
xchg
cmp
pop
ror
stos
dec
add
xchg
jp
je
mov
mov
xor
pushf
insl
jmp
or
pop
gs
cmp
push
mov
fildl
sarl
add
cmp
sti
dec
push
add
int3
call
cmp
scas
pop
inc
jp
and
psrld
add
push
xor
mov
dec
stc
fcmovnu
inc
mov
mov
dec
aad
lret
push
sbbb
pop
outsb
pusha
scas
inc
repz
xchg
push
aad
mov
jnp
test
in
loop
push
jne
call
xchg
sub
mov
test
mov
sti
in
test
gs
inc
imul
and
dec
jmp
insl
xchg
or
push
jmp
shrl
enter
cs
adc
sub
mov
decl
add
aas
adc
mov
das
and
adc
jmp
lcall
sbb
cmpb
fs
ljmp
cmp
xor
pop
mov
mov
xchg
data16
cmp
add
cltd
jb
jecxz
cmp
mov
addl
cltd
sarb
nop
pop
lods
imul
mov
pop
xlat
cltd
jmp
or
mov
xchg
push
aaa
pop
fwait
int
aam
jg
scas
dec
lea
sub
in
cmpsl
mov
shlb
pusha
or
cwtl
xor
fnstenv
aaa
or
add
rorb
jecxz
mov
cmc
or
mov
jp
add
hlt
mov
ljmp
fcoml
inc
sbb
gs
pop
ret
cmp
fidivrs
pusha
sbb
scas
mov
pop
push
shlb
lcall
xchg
cmc
in
jle
and
mov
or
push
xor
sbb
add
xchg
sub
les
movsl
pop
scas
jg
cld
jne
inc
add
xchg
shlb
add
mov
fs
mov
decl
cmpsb
arpl
fcom
or
mov
lds
into
aam
mov
add
inc
out
movb
movsl
psllw
add
dec
lds
mov
sub
mov
cmc
andl
in
sbbb
push
mov
inc
xorl
or
popf
xchg
shll
push
xchg
mov
sub
fadds
test
cltd
add
mov
mov
or
mov
fs
and
and
lods
sbb
adc
inc
in
push
xchg
push
addr16
jae
sub
mov
xor
push
jmp
imul
enter
fdivr
cmpsb
jg
inc
lret
mov
mov
scas
jmp
sub
push
add
clc
adc
dec
stc
and
pop
fmull
dec
push
aas
and
andb
popl
mov
mov
push
xchg
push
inc
add
push
cmp
xchg
mov
pop
xchg
mov
cmp
andb
jg
xchg
gs
lcall
arpl
test
arpl
js
dec
mov
or
jo
lods
test
shrb
ret
sub
movsl
dec
popa
fdivl
xchg
xchg
push
outsb
movsb
mov
mov
mov
xor
in
or
xchg
cmp
lret
and
sub
mov
test
fldl
jmp
mov
mov
bound
pop
or
bound
pop
stc
cmp
fstpl
popf
adc
push
daa
rorl
inc
mov
inc
andl
sub
jae
dec
mov
aas
push
fdivr
jl
xor
rorl
push
push
dec
fs
jne
cs
jno
ret
and
and
repnz
daa
aam
xor
mov
addl
arpl
mov
pop
stc
push
insb
stos
cmp
and
lcall
stos
dec
stos
jl
dec
outsb
ljmp
mov
jns
sahf
push
out
nop
scas
adc
scas
imul
int
jbe
cltd
lea
mov
mov
dec
cmc
mov
add
lds
filds
xor
mov
or
add
negl
cmpsb
dec
in
imul
inc
scas
sbb
cs
mov
adc
testb
test
push
push
and
or
pop
testb
lret
mov
jmp
and
std
pop
push
fiaddl
jo
stos
adc
out
mov
imul
add
mov
out
mov
testb
sub
jp
in
jnp
mov
mov
xor
cltd
lret
mov
sub
or
je
lea
xor
cwtl
xchg
xor
mov
ja
push
inc
mov
pop
sub
inc
push
and
xor
mov
mov
push
mov
mov
sbb
adc
aas
inc
insb
sti
shr
push
repz
jle
test
xchg
aad
jp
fsubr
or
hlt
xlat
fistpll
and
test
into
aad
pop
movsl
outsl
pop
shr
fld
stos
test
cmpsl
inc
xchg
adc
xorb
pop
je
mov
adc
inc
leave
or
or
sub
test
cmpsb
or
pusha
lahf
test
jmp
addl
cmp
icebp
cld
les
pop
jle
aad
leave
fcomps
cmp
or
sub
lds
dec
jge
insl
pop
sbb
xchg
xchg
into
push
lock
sbb
mov
mov
push
sbb
inc
icebp
jle
testb
dec
imul
outsl
mov
ret
pop
pop
out
sub
xchg
or
fisttpl
sbb
and
in
cmp
mov
cwtl
aas
je
xor
mov
dec
add
inc
fiaddl
add
pop
xchg
cmc
fisubs
stos
or
lods
mov
mov
in
pop
outsb
inc
add
outsb
mov
push
pop
inc
pop
or
out
push
mov
push
dec
rolb
sub
dec
js
jno
ret
movsl
in
dec
mov
sti
stc
mov
out
push
add
pop
xor
cmp
data16
cli
into
jl
xchg
pop
cmp
push
nop
xor
in
cmp
ret
pop
lret
enter
jmp
aad
mov
pop
imull
nop
aad
jl
in
push
nop
bound
xchg
pushf
mov
inc
jnp
rcr
testb
pop
adc
clc
mov
add
xchg
out
sbb
pop
sbb
icebp
sbb
mov
lret
shlb
xor
dec
pop
ds
mov
lcall
xor
jecxz
ret
mov
aad
xor
ja
jge
mov
mov
into
clc
outsb
imul
iret
inc
mov
out
inc
lds
test
in
sub
nop
pop
lods
inc
lret
in
pop
test
cmpb
rolb
push
push
sarb
xchg
ja
outsb
mov
xor
lods
xchg
xlat
int3
aas
ja
jp
xchg
dec
std
bound
je
cmp
sbb
lods
repz
sub
loopne
inc
cmp
into
mov
mov
mov
sub
xor
lahf
addr16
shll
push
jmp
data16
mov
push
adc
dec
pop
mov
cmp
ja
popf
jg
inc
inc
rcl
std
out
in
and
xor
push
mov
test
shl
fsubl
cmp
xchg
xor
push
dec
pop
dec
cs
and
imul
mov
adc
mov
inc
mov
push
aad
mov
cltd
shrl
mov
sbb
dec
cwtl
jl
cs
orb
push
sub
mov
xchg
cmpsl
add
idivb
outsl
sti
pop
lahf
sbb
fisttps
and
pop
or
insl
mov
jbe
imul
lea
shlb
cwtl
pop
call
imul
aad
pushf
cli
popa
push
jg
jge
subb
push
popf
lock
arpl
push
mov
je
shlb
sbb
movsb
and
mov
jae
cmpsb
addr16
pop
pusha
aas
sub
jns
add
adc
call
test
sahf
xlat
dec
sub
mov
fldenv
in
jecxz
xchg
mov
je
xchg
ret
insl
mov
add
es
adc
fs
notb
jp
mov
or
add
stos
rolb
dec
pop
mov
sbb
jo
push
mov
loope
sbb
push
imul
pop
insb
imulb
in
jns
xchg
and
in
xor
sahf
dec
mov
pushf
cld
push
stos
das
in
add
jmp
in
rorl
fldcw
scas
add
repnz
mov
leave
fsubs
jge
lods
mov
repnz
cmpsb
ds
pop
cmpsl
js
dec
aad
and
xor
cmp
mov
push
and
add
mov
push
inc
cmp
lods
je
loop
mov
aam
pushf
into
jl
push
popa
dec
int
pop
adcb
sti
fisubrl
mov
mov
lcall
mov
testl
sbb
cs
mov
inc
fwait
int
test
nop
imul
push
sbb
jg
das
sbb
aad
and
imul
stos
xor
out
sub
testl
ds
mov
pusha
jle
loop
arpl
xchg
jnp
sub
stc
xor
cmp
mov
sbbl
cmp
sbb
dec
lcall
gs
fucomi
xor
subb
pop
pop
es
clc
inc
shrl
imul
xchg
into
aaa
arpl
pusha
mov
mov
sbb
movsb
cld
arpl
add
scas
pop
test
mov
sub
adc
or
mov
ds
pusha
ret
in
adc
sbb
push
push
fsubs
dec
mov
test
xor
ret
mov
push
mov
push
fs
mov
mov
mov
loope
fimull
hlt
mov
out
jmp
jmp
mov
xchg
pop
repnz
out
adc
aas
lcall
shlb
add
pop
dec
jmp
ljmp
stos
xor
insb
cmp
xor
xor
fcoms
mov
add
adc
int
xor
stos
into
fsubrs
adc
push
xchg
mov
mov
sub
ljmp
mov
in
mov
adc
xor
rorb
mov
fisttps
mov
jne
or
dec
inc
mov
add
mov
cmp
mov
shlb
neg
pop
sub
mov
add
lock
out
jo
add
mov
mov
cs
inc
aam
cmp
or
xor
cld
cwtl
pop
and
jbe
mov
test
popf
push
push
push
xor
mov
add
xlat
lahf
mov
out
add
sub
sub
add
testl
inc
push
pop
add
jno
jge
lcall
out
ds
icebp
push
jo
and
lahf
adc
enter
stc
xchg
xchg
out
inc
ss
push
pop
mov
ret
or
scas
mov
jno
test
dec
sahf
sub
lret
inc
xchg
sti
test
and
sbb
pushf
jb
sbb
pop
adcb
mov
ljmp
data16
movsl
cld
and
shlb
outsb
push
cld
adc
xchg
jle
pop
jns
xor
negl
imul
adc
or
sbb
ret
pusha
push
sarb
test
sbb
pop
xchg
pop
xchg
cmpl
lret
in
mov
outsb
mov
mov
sub
into
mov
or
push
mov
js
pop
or
or
push
cmpsl
subl
jmp
or
mov
aad
sbb
cmp
fdivr
adc
xor
push
rclb
push
cmc
sbb
push
mov
cmp
repnz
das
outsb
leave
idivb
int
lods
jg
add
push
js
add
sti
jle
add
loop
faddl
sub
push
pusha
mov
xchg
movsb
sbb
push
xchg
xchg
insb
cmpsl
mov
adc
arpl
xchg
popf
lds
movsb
inc
pushf
mov
push
cltd
mov
jo
mov
dec
dec
push
not
jbe,pt
push
shrb
cmp
xorl
ljmp
ds
cmpsl
jle
mov
jge
das
adc
imul
lret
mov
repnz
notb
scas
push
cmpsl
outsl
not
notl
and
dec
stos
out
leave
fistl
rorl
inc
mov
out
insb
cmp
stc
adc
mov
mov
and
ljmp
xchg
jmp
mov
fisubs
push
cltd
or
sub
mov
sbb
call
lret
pusha
test
inc
popf
imul
lahf
push
cvtdq2ps
push
ret
xchg
sbb
inc
push
repz
inc
sti
mov
mov
sub
popa
xchg
leave
std
cmp
jmp
mov
shrb
test
inc
mov
mov
jns
pop
js
push
les
cmc
cltd
xchg
fwait
les
daa
pop
push
inc
aad
jne
push
cmpsb
aam
mov
mov
inc
inc
loope
cmp
in
sub
fbld
push
or
push
inc
orb
les
popf
sbbl
cmpsb
in
cmc
mov
xchg
jbe
mov
fcomps
add
arpl
cmc
mov
enter
into
sub
xor
nop
fisubrl
imul
mov
jl
adc
mov
hlt
lods
ficompl
lock
shl
imul
scas
cltd
repnz
das
hlt
sahf
or
push
sahf
or
scas
cmp
sbb
leave
pop
cmpsb
xchg
mov
mov
xchg
ret
push
je
frstor
loop
jge
inc
notl
push
xor
or
xchg
adc
mov
fwait
xchg
dec
hlt
sub
fiadds
loopne
adc
je
lods
cwtl
adc
xchg
mov
lock
mov
subb
add
loope
fwait
lea
lods
jle
test
push
xchg
push
les
daa
lods
mov
add
push
adc
pusha
add
adc
cmpl
clc
pop
out
aas
test
ret
je
sbb
cs
mov
adc
pop
cli
ficompl
in
mov
cmp
cmpsl
lds
sub
sbb
push
call
jp
push
adc
popa
pushf
jl
imul
dec
lds
xchg
test
push
cmpsb
call
iret
jmp
subl
nop
icebp
add
sbb
repnz
xor
in
push
daa
mov
clc
shll
imul
testb
aam
test
push
mov
and
in
cs
and
aad
cmp
add
pop
adc
test
movsl
xchg
xchg
lret
fstps
out
or
push
inc
das
mov
pop
mov
jb
dec
add
dec
sahf
test
fcomps
fnstenv
fmull
jecxz
or
aam
imull
pop
xchg
out
orl
clc
lret
mov
xchg
pop
sbb
add
jecxz
in
xor
jl
cltd
pop
lock
xlat
loop
fwait
mov
sbb
out
gs
cmp
inc
mov
mov
jmp
in
int
or
arpl
xor
add
ret
and
or
les
xchg
cvtps2pi
loop
sbb
pop
in
outsl
jo
lcall
adcb
icebp
sub
inc
xor
movsb
cmpsb
ljmp
push
insb
mov
les
fs
clc
inc
sbb
pop
sbb
les
fnstenv
insb
movb
arpl
lods
cli
sbb
imul
aam
rol
adc
mov
pushl
push
jne
fisubrl
inc
pushf
jb
adc
add
jecxz
stc
movsl
ret
mov
lods
rcrb
xchg
loope
mov
lret
loopne
dec
sub
xchg
fcmovbe
mov
cmp
ja
mov
push
insb
imul
push
insl
jnp
test
ret
in
ja
hlt
popf
nop
les
fwait
popa
adc
cli
cmpsb
adc
inc
daa
and
adc
lret
int3
dec
mov
push
lret
jle
mov
aam
adc
nop
xor
in
mov
or
mov
jle
mov
dec
jo
xor
dec
shrl
in
dec
jge
gs
cld
and
sub
mov
cmp
mov
divl
aaa
mov
clc
enter
fadd
inc
inc
xor
ds
movsb
popa
cltd
pusha
cld
ljmp
mov
pop
mov
inc
stos
mov
jnp
ja
mov
call
adc
dec
push
inc
mov
test
mov
cmp
and
insb
call
xchg
inc
and
icebp
or
mov
mov
shlb
hlt
mov
mov
lock
cmp
or
dec
mov
dec
popf
mov
es
test
mov
out
orb
imull
in
je
inc
mov
das
loopne
jg
mov
xor
int
arpl
xchg
daa
and
arpl
mov
sbb
jmp
out
outsb
and
mov
orb
dec
sbbl
stc
loope
mov
pop
sahf
add
inc
mov
lock
push
push
cwtl
int
cmpsb
sbb
xor
js
and
add
jmp
mov
dec
push
in
add
nop
loope
mov
loope
mov
pop
loopne
test
push
ss
pushf
jmp
add
in
pop
cmpsl
out
in
lahf
dec
stos
and
jb
movsl
shll
sbb
mov
iret
rcl
xor
sbb
mov
clc
pop
xor
mov
cmp
sahf
out
in
xor
mov
mov
int3
or
out
lds
repz
xchg
or
cmp
sub
faddl
pop
cmp
and
inc
mov
sti
cmp
fstpt
push
pushf
sub
shrb
and
adcb
jl
sub
enter
push
push
dec
sbb
dec
mov
fimull
fwait
pop
inc
outsb
fiaddl
mov
int3
in
sub
std
pop
xor
add
mov
ret
jne,pn
push
push
adc
hlt
out
je
fists
pop
jmp
pop
call
sahf
lahf
pop
ljmp
mov
shl
sbb
ret
lahf
dec
add
les
jmp
sarl
mov
lock
rorb
notb
mov
shrb
movsb
aam
or
jl
inc
hlt
ljmp
inc
lds
fcmovne
dec
inc
stos
cmp
in
adc
js
mov
leave
mov
ds
jmp
cwtl
push
fs
adc
push
aad
inc
push
push
xchg
or
push
push
add
into
ficoms
std
outsb
fcoml
insb
cwtl
fs
mov
fsubrl
sahf
pop
enter
movsb
adc
cltd
lcall
xchg
daa
test
add
int3
mov
mov
mov
mov
sbb
sub
dec
jp
leave
jnp
mov
push
ret
adc
and
jg
gs
fdivrl
pop
push
repnz
pop
mov
mov
ret
push
mov
push
and
mov
mov
out
push
clc
fcoms
enter
loope
cmpb
imul
bound
pop
xchg
test
rclb
cmp
je
mov
adc
sbb
pop
scas
js
sub
mov
ret
or
xor
rorb
mov
pop
add
mov
mov
ss
or
push
scas
fisubl
stos
mov
xchg
mov
xchg
ss
inc
in
adc
sub
fists
lret
and
stos
mov
pusha
cltd
xor
cmp
scas
cmp
push
clc
fstl
inc
mov
push
test
xor
mov
fwait
jle
sarb
out
loopne
add
pop
mov
cmpsb
mov
inc
pop
idivl
push
fwait
lock
cmpsb
push
rclb
or
iret
sbb
adc
inc
jo
lods
push
test
xchg
daa
xchg
out
mov
inc
xor
pop
inc
fsubs
sub
push
mov
push
adc
ja
adcl
out
xchg
adcb
jne
jo
jns
inc
inc
iret
pop
inc
lcall
mov
insb
sub
add
sti
test
mov
ds
add
repz
daa
xor
mov
push
pop
stos
add
dec
je
sbb
out
xor
shrb
fcmovb
sbb
dec
inc
cmp
lock
jp
lods
out
shrl
and
inc
pop
popl
xor
cmp
jo
out
xor
sti
dec
lods
mov
xchg
sub
lret
mov
xlat
divb
leave
imul
jp
iret
inc
xchg
arpl
xchg
fdivrl
mov
xor
push
push
mov
jae
loop
xchg
push
jmp
enter
cmp
push
pop
cmp
ss
in
xchg
sub
fs
push
sub
test
pusha
in
push
mov
and
jns
je
cmp
jl
fucomi
subl
and
lret
dec
mov
dec
cmp
out
mov
dec
adc
rorl
in
mov
push
mov
out
push
lea
or
pop
fs
pop
daa
leave
jb
data16
call
sbb
andl
add
test
pop
imul
sub
popf
xchg
dec
mov
push
xchg
or
or
fwait
out
xchg
and
jae
xchg
dec
stos
js
das
xchg
je
and
test
cltd
fnstenv
cmp
movsl
loope
mov
add
inc
mov
cmp
inc
cmp
cmp
mov
xor
insl
xchg
fdivl
dec
lock
adcb
mov
insb
push
add
cmp
insl
mov
or
out
imul
js
push
or
movsl
pop
aam
and
jnp
adc
mov
jo
in
sbb
xchg
cs
popl
inc
sub
ds
insb
cmp
repnz
arpl
hlt
fs
jae
pop
mov
push
pop
adc
into
jecxz
jae
stos
pop
stos
shll
les
imul
push
loopne
ret
cltd
jbe
push
into
push
ds
adc
mov
push
xchg
lea
into
nop
and
je
call
fldcw
popf
pushf
sbb
in
out
incl
fidivs
sbb
sbb
std
fcmovnu
dec
rolb
out
inc
stos
pop
aad
rcrb
int3
jp
add
lcall
orl
inc
test
popa
loopne
mov
adc
repz
push
hlt
pop
inc
xchg
lret
nop
imul
movaps
movsb
add
jne
pop
mov
or
aad
or
ja
jo
in
ljmp
lods
idiv
xchg
into
dec
iret
xor
fisttpll
loop
popf
xchg
shl
cwtl
sbb
call
sarb
inc
sbb
stos
mov
xchg
pusha
in
sbb
or
les
xor
adc
sub
mov
cmp
and
shrl
xchg
inc
loope
repz
sub
lahf
and
mov
jge
mov
fisubrl
inc
push
icebp
int
pusha
xor
or
xlat
movb
dec
inc
sub
add
or
xor
repz
xchg
pop
outsb
xchg
sahf
adc
in
in
cmpsb
dec
pop
cmp
enter
and
adcb
sub
mov
add
push
sbb
jns
adc
push
mov
scas
inc
jno
in
iret
xchg
jae
adc
adc
aam
inc
rcr
sub
inc
or
push
xor
out
imul
iret
sahf
xchg
rcll
cmpsb
push
xchg
outsb
xor
lret
sbb
cmp
out
fimuls
sbb
push
or
and
std
push
dec
jns
pop
or
mov
out
push
pop
nop
adc
sbb
jnp
cmpsb
mov
je
call
adc
jmp
dec
cld
pop
and
jno
jb
sub
test
sub
pop
cwtl
add
inc
dec
sbb
movsb
enter
jl
daa
mov
aam
mov
test
mov
sar
sub
imul
insl
adc
shlb
ss
xor
lret
push
add
cli
pop
lods
push
mov
stos
sbb
fs
not
pop
iret
or
mov
addr16
je
daa
push
js
push
adc
ret
sbb
xor
ficompl
icebp
ss
inc
lods
sbb
shll
repnz
cmp
ljmp
push
mov
out
fcoms
pop
xchg
stc
jp
mov
adc
fidivrl
lret
or
xor
push
add
ss
jno
dec
mov
stos
fsubl
out
sub
mov
arpl
pop
push
cmp
fs
adc
cmp
decb
sbb
lcall
jl
hlt
dec
add
out
cld
mov
adc
fsts
orl
les
mov
mov
jbe
jmp
mov
daa
mov
mov
fisttpl
test
jl
mov
lcall
mov
mov
lret
imul
adcl
xor
push
bound
xchg
or
stos
push
cmp
popa
inc
rolb
pop
int3
in
add
test
push
mov
add
add
popa
enter
add
and
jle
mov
adc
push
loope
outsb
div
fwait
mov
pop
stos
push
movsl
ja
and
insb
inc
in
fnstsw
pop
div
jmp
add
inc
mov
jne
xchg
inc
xchg
leave
cmpsb
cmp
lret
sub
mov
mov
loope
and
pop
in
in
inc
pop
mov
sub
pop
arpl
scas
mov
mov
and
data16
out
and
xchg
jo
push
loop
negb
repnz
add
lock
sahf
push
push
in
ljmp
stc
mov
loop
sub
in
and
jmp
xor
jmp
cmp
mov
js
dec
sbb
mov
and
add
sub
mov
pop
xchg
insl
push
aam
push
loop
dec
sub
rcll
lret
jbe
cmpsb
push
fwait
mov
fidivrs
sbb
or
jb
add
loop
or
jg
imul
cmp
imull
cmp
bound
outsb
pop
cld
dec
mov
xor
or
incl
jg
outsb
jecxz
and
mov
clc
dec
jae
push
ret
sbb
sub
dec
sbb
cmpsl
jne
mov
or
lcall
inc
xchg
mov
rorl
fisubrl
lret
jnp
fsts
dec
xor
mov
xor
push
bnd
imul
ret
cmp
repnz
adc
fwait
push
repz
js
sbb
mov
mov
mov
cmpsb
inc
lds
sbb
xchg
cmp
arpl
add
arpl
insb
movsb
lods
xor
sti
add
in
push
mov
scas
jmp
jnp
sbb
cs
and
lock
adc
add
pushf
push
sarb
add
sbb
sbb
les
fs
leave
cmp
jns
inc
xlat
pop
push
adc
inc
mov
mov
pop
push
dec
mov
and
ljmp
fwait
xchg
sarl
cmpsb
cmp
shlb
mov
es
sahf
jnp
sbb
test
ficomps
fcomps
cmp
cmc
sbb
inc
mov
pop
jo
sub
push
push
pushf
adc
jo
gs
outsb
in
inc
mov
inc
int
jg
push
repnz
sub
mov
adc
xchg
push
mov
fidivl
mov
and
iret
xchg
ret
dec
jmp
jecxz
cmpsb
adc
ror
loopne
dec
mov
test
mov
aam
ret
xor
push
pop
xor
push
pop
roll
imul
mov
pop
adc
outsb
xor
adc
bound
lock
pop
add
add
mov
mov
mov
xchg
daa
mov
inc
pop
test
loopne
cli
sbb
movsb
adc
int3
dec
inc
dec
iret
notl
dec
adcl
mov
lcall
or
sub
movsb
push
mov
out
ss
pop
bound
cmc
mov
inc
cmp
push
sahf
jo
add
xchg
mov
into
jo
jns
sbb
cmp
jmp
fists
ficomps
sub
push
mov
xlat
js
bound
mov
test
dec
movsb
adc
cwtl
aam
subb
arpl
or
das
sub
test
push
lret
mov
in
jle
jne
adc
lret
enter
sbb
nop
and
mov
ss
fstpl
js
cltd
mov
sub
jbe
ja
daa
pop
ljmp
aaa
lock
push
repz
mov
jmp
icebp
bnd
push
push
xchg
push
imul
repnz
push
fs
fcoml
pop
dec
jmp
test
fsubrl
popf
and
les
mov
cld
cmp
shll
enter
dec
in
cmp
pusha
daa
sub
enter
xorb
clc
call
cmp
sbb
xchg
mov
lcall
inc
sbb
or
dec
lahf
mov
in
xor
jno
mov
sbb
cmp
cmp
popf
and
sbb
sbb
xor
or
mov
jge
or
inc
outsb
popf
jmp
xchg
ret
dec
jg,pt
sbbb
dec
hlt
test
cmpxchg
in
filds
pop
push
fildll
loop
cli
test
sub
sub
cmp
xchg
nop
sub
and
nop
lds
jmp
negl
sub
lret
xchg
aas
mov
jl
shlb
xchg
mov
sub
sti
stos
adc
js
xor
dec
mov
and
lcall
shll
inc
xchg
das
sub
lds
test
pop
pop
ja
add
into
int3
fsub
push
outsb
xchg
inc
loop
popf
cmp
dec
es
pop
push
iret
dec
fmul
sub
loop
loopne
frstor
out
mov
icebp
cmp
lea
jne
aaa
loope
add
aad
das
jecxz
mov
push
mov
iret
mov
clc
xchg
movsl
and
lret
pop
mov
mov
stc
inc
ficoml
jo
mov
mov
adc
pop
lods
xchg
and
stc
lds
or
icebp
push
jle
push
or
in
xchg
movsl
jo
std
jmp
pop
addr16
sarl
decb
sub
push
sub
dec
test
je
insb
cmpsb
dec
push
mov
mov
pop
inc
daa
jns
loop
outsl
add
or
negl
fxch
xchg
sbbb
and
es
subl
or
cmp
add
xchg
mov
mov
push
xor
addl
and
inc
or
lea
pop
sbb
into
subl
int
sbb
mov
shll
inc
xchg
jae
clc
mov
test
rcl
cmp
je
nop
ljmp
mov
sub
out
popf
xor
daa
out
or
and
call
push
xchg
out
sub
and
andl
clc
lock
sarb
std
loop
pandn
not
jb
test
dec
fwait
pop
add
movd
orl
xchg
jecxz
dec
lret
int3
adc
xor
fdivp
adc
aad
adc
aam
cmp
sub
test
cmp
in
shll
clc
mov
rcrb
and
jno
sahf
hlt
add
push
mov
lretw
push
out
inc
mov
bound
xchg
bound
outsl
das
xchg
mov
out
push
int3
lods
mov
scas
xchg
mull
insl
movsl
repnz
xor
stc
inc
pop
jg
jnp
pushf
mov
cmp
jmp
and
mov
fmull
push
addr16
push
dec
lcall
mov
pop
push
out
pop
dec
or
adc
icebp
or
cmp
xor
jno
add
cmp
xchg
push
jo
mov
xor
sub
dec
or
lcall
cmp
icebp
gs
lcall
das
mov
data16
cmp
in
mov
sub
lods
jmp
push
xchg
jae
mov
fcompl
mov
aaa
lahf
xchg
shlb
std
pop
adc
mov
mov
jno
cld
icebp
sahf
mov
fmuls
inc
push
mov
stos
push
stos
add
jle
cmp
popf
sbb
repz
orb
incl
mov
sub
xor
xlat
popf
xchg
cmp
jge
dec
push
imul
ds
loope
gs
test
inc
sbb
sub
and
xchg
jmp
mov
popa
jns
insb
dec
adc
je
movsb
or
idivb
push
dec
and
stc
pop
and
dec
movsb
aad
icebp
push
xor
outsl
cwtl
daa
shlb
ja
iret
test
cld
jp
jo
sub
xchg
mov
jb
mov
and
hlt
fs
shll
cmp
cmp
neg
jns
and
test
out
pop
push
test
lods
xchg
mov
dec
lret
mov
sahf
xchg
inc
jae
mov
test
enter
sub
daa
movsb
pop
out
or
jp
xchg
scas
mov
cwtl
xchg
sub
sub
sarb
sbb
jp
mov
push
cs
int
mov
ja
out
and
xchg
pop
je
dec
rol
push
cmp
xchg
push
je
ret
ret
inc
push
mov
sbb
push
push
in
adc
shl
xlat
pop
dec
js
fisttpll
sbb
shll
cmp
and
loopne
loop
out
mov
mov
pop
cmpsl
fistpl
mov
xor
scas
ja
pop
insl
pop
adc
lea
andl
and
lea
clc
cmp
fwait
rorb
pop
repz
mov
loop
xchg
stc
test
popa
xlat
cld
and
add
xchg
fstpt
imul
and
adc
inc
and
adc
in
jp
or
sti
fsub
pushf
add
sbb
inc
jae
aad
add
leave
or
pop
jbe
dec
sbbl
dec
push
lcall
or
mov
out
decl
push
cmp
adc
pop
loopne
insb
addb
or
mov
jmp
or
pop
pop
outsb
ret
lock
mov
inc
and
sub
mov
rorb
mov
in
hlt
gs
std
xor
ss
mov
loope
push
push
nop
repz
add
aam
mov
push
push
mov
pop
mov
push
push
rcll
push
stos
pop
push
pushf
cmp
push
pop
push
out
lds
scas
inc
out
daa
inc
cwtl
jns
lock
mov
loopne
inc
sbb
or
mov
pop
mulb
dec
mov
add
loope
test
fldcw
mov
push
clc
cmp
sbb
and
jp
pushf
sub
lret
loop
fidivrs
push
adc
and
inc
pop
fimuls
and
fimull
adc
stc
fldl
add
fmull
push
adc
cmp
jmp
cmc
sbb
adc
mov
xor
sub
mov
xchg
insb
push
loope
and
xor
cs
shl
mov
fwait
das
jecxz
mov
dec
and
repnz
jg
int3
add
insl
pop
push
sbb
xchg
imul
loope
push
sub
xor
popa
imulb
fidivrs
stc
shrb
cmp
pop
imul
mov
lcall
inc
je
jnp
mov
mov
add
int
push
push
add
push
mov
lcall
popf
mov
data16
std
jmp
and
pop
dec
data16
sahf
cld
xlat
js
xlat
lahf
loop
cltd
aad
mov
rcll
push
dec
cmp
int3
pop
or
stos
sbb
mov
outsb
out
sbb
push
jmp
sbb
push
fdivs
test
or
or
out
push
fidivs
jo
mov
xor
out
push
inc
xlat
sbb
outsb
movl
mov
push
jbe
inc
dec
lds
nop
movsb
loope
mov
repz
jno
inc
and
inc
popa
mov
insl
mov
stos
adc
sbb
pop
add
push
adc
adc
pusha
jle
testl
shlb
or
movsl
imul
and
das
inc
jae
mov
dec
imul
jb
push
or
pop
push
hlt
add
mov
push
test
and
mov
out
arpl
push
test
sbb
pop
dec
jle
jmp
add
shlb
mov
mov
pop
addb
je
sbb
leave
dec
mul
and
push
inc
imul
dec
int3
xchg
dec
adc
sub
out
push
jge
jp
into
push
sub
cmpsb
flds
ja
js
mov
aad
call
aaa
inc
sub
adc
mov
out
in
ja
loop
or
iret
adc
aad
outsb
ja
cmp
movsl
out
fstpt
loope
frstor
jno
sub
mov
sti
mov
cltd
mov
mov
dec
pop
xchg
daa
stc
mov
add
pop
cmp
inc
mov
subl
je
mov
subb
scas
jg
scas
cs
outsl
in
idivb
push
or
aad
movsl
ljmp
ret
xchg
mov
xor
pop
push
xchg
and
aam
and
jge
lods
dec
shlb
test
xor
mov
fld
rorb
test
adc
push
mov
push
jmp
mov
sbb
mov
xor
ds
jecxz
fldcw
xchg
jo
mov
push
fdivl
lods
lock
sbb
dec
dec
pop
aad
insb
mov
push
or
push
mov
pushf
cmpsb
sbb
jb
loop
sbb
insl
cmp
aad
dec
push
test
lods
jle
mov
inc
adc
aaa
cmp
dec
inc
aaa
jle
mov
in
jb
inc
out
pop
arpl
adc
adc
loop
add
gs
pop
pop
test
ret
jns
sbb
addr16
mov
sbb
cmp
xor
xor
xchg
pop
data16
movsb
cmpsl
out
out
push
cmp
jmp
lea
rorb
stos
cltd
push
inc
repnz
lods
neg
repnz
in
sbb
sub
pop
rolb
cld
xor
sbb
and
arpl
pop
sahf
test
push
xchg
fwait
dec
ljmp
push
and
mov
push
sub
test
outsb
cmp
lock
jb
mov
pop
sbb
lods
add
inc
lea
scas
hlt
incl
lods
adc
add
dec
jb
or
je
xchg
leave
mov
lea
pop
fsubrs
sar
call
and
or
fiadds
lods
imul
push
insl
scas
negb
psubsb
xor
mov
or
add
or
mov
add
ret
and
xor
fiaddl
dec
adc
iret
cmp
xchg
fsubl
into
movsl
insl
out
insb
loopne
push
push
pop
inc
or
mov
fisubrl
out
je
lret
faddl
daa
pop
add
push
ss
or
add
repz
pop
cli
lret
in
xchg
xchg
fwait
aaa
push
push
add
inc
sarb
cmpb
cmpsl
mov
push
adc
stos
pop
lahf
fcoms
cwtl
in
dec
pop
pushf
fcomps
movsl
gs
mov
or
jnp
xor
mov
cmp
popf
xor
jmp
inc
and
stos
dec
cmp
sahf
jg
or
sbb
lea
or
icebp
jne
rclb
or
fdivrs
mov
pop
push
shlb
leave
pushf
sub
sti
lods
adc
ret
adc
in
cmp
icebp
push
inc
cmp
jno
loope
mov
xchg
stc
enter
and
gs
sti
in
or
mov
sub
shlb
lods
jb
pop
in
scas
jg
sbb
pop
lods
fdivl
jg
neg
adc
outsl
xlat
in
jp
push
adc
cmpsl
cmc
lcall
xchg
sahf
ds
sub
ficoml
arpl
imul
mov
dec
dec
jl
shl
frstor
and
xchg
enter
pop
int3
test
daa
pop
add
and
sarl
movsl
sti
add
icebp
mov
and
insb
hlt
inc
inc
addr16
sub
enter
add
testl
rclb
mov
cld
sti
dec
lcall
arpl
popf
lret
push
arpl
dec
or
inc
xchg
sub
pop
mov
leave
fimuls
rorb
xor
jcxz
rcrl
clc
sbb
cmp
bound
jmp
xchg
test
pop
pop
icebp
mov
rcrb
in
mov
iret
push
pop
clc
adc
or
loopne
hlt
cmpl
xlat
inc
aas
sbb
mov
int
add
outsb
mov
scas
stos
xchg
jmp
jae
ficompl
sbb
xchg
push
pop
cmp
mov
js
ljmp
xchg
adcw
and
lcall
or
outsb
pop
push
or
jecxz
sbbb
ret
jno
gs
lret
leave
mov
loopne
or
push
adc
xchg
inc
pop
test
ret
mov
jo
out
xor
or
leave
out
pusha
dec
icebp
daa
inc
jmp
cmp
sub
xchg
aad
jns
in
sbbb
or
adcb
mov
test
push
cmpsl
xor
insl
jmp
dec
mov
push
xor
hlt
or
cmp
xchg
sbb
in
outsl
fidivrs
inc
pop
lahf
or
loope
frstor
arpl
mov
xor
sub
jg
inc
or
push
cmp
rorb
mov
push
sahf
xor
fs
pop
xchg
push
repz
insl
fs
adc
xchg
lods
sbb
inc
in
or
mov
dec
in
mov
xchg
outsl
inc
addr16
mov
jnp
push
adc
into
loopne
push
insl
sarb
mov
shl
dec
and
inc
dec
lea
xor
jne
xor
jno
divb
push
adc
dec
mov
insb
lods
rorl
lret
pop
stc
out
inc
pop
ds
mov
adc
shr
mov
mov
push
sub
sti
loopne
pop
popf
in
sub
jmp
pusha
sbb
mov
jno
mov
aaa
sbbl
xchg
mov
push
imul
push
js
ret
and
js
cmpsb
jp
filds
hlt
mov
addr16
push
dec
adc
cwtl
pop
cld
mov
xorb
ds
arpl
mov
xchg
es
insb
pop
mov
frstor
call
sub
loopne
daa
mov
lods
push
jo
jecxz
and
out
movzwl
movsl
pop
jmp
add
push
inc
or
dec
inc
mov
lahf
lods
inc
repnz
sub
popa
dec
outsb
pop
stc
xor
lods
mulb
mov
fidivrs
lcall
fs
mov
loopne
sbb
insl
mov
and
movsl
mov
js
jnp
mov
ret
shlb
std
std
mov
rorl
or
push
xchg
pop
loopne
lahf
ret
sbb
dec
xchg
jg
or
xor
int3
ss
shrb
pop
xchg
xlat
dec
mov
lret
cs
xor
mov
sti
ljmp
jecxz
nop
jae
push
les
mov
hlt
out
jmp
sub
push
xlat
sbb
paddw
pop
mov
aam
mov
add
imul
movsb
dec
mov
repnz
mov
mov
ljmp
inc
inc
mov
mov
fadd
mov
or
lea
leave
hlt
adc
int3
pop
lret
xchg
cli
inc
adc
cld
repnz
fsubrs
ds
test
cli
addl
ds
add
dec
mov
repz
cmp
inc
int3
insb
pusha
scas
popf
pop
test
aad
dec
and
cmp
sbb
fdiv
pop
and
inc
pop
xchg
dec
push
sub
addr16
add
enter
dec
popa
cwtl
sub
scas
xchg
test
jne
mov
adc
stc
add
xor
ret
pop
int3
cmp
mov
pop
xchg
add
jnp
bound
cmp
jmp
cmp
sbb
mov
mov
pop
daa
mov
outsb
gs
hlt
dec
loopne
sub
or
mov
pop
pop
inc
push
or
lock
lock
and
adc
push
fstp
jno
jmp
xchg
xor
pop
cmp
aam
call
data16
and
loopne
lret
mov
mov
xor
dec
aad
loope
mov
xchg
cs
mov
xor
into
loop
push
xorb
adc
daa
mov
or
cmp
add
add
sub
cltd
push
lret
jecxz
ror
or
push
fisubrl
popa
lds
leave
push
adc
loop
or
sub
inc
and
sbb
mov
inc
test
xchg
add
test
addr16
xor
lock
popa
sarl
fidivs
xchg
cmc
adcb
jmp
or
xlat
cwtl
pop
movsb
pop
mov
mov
mov
outsb
pop
or
cli
pop
push
pop
push
cmp
sub
icebp
loope
sub
or
mov
outsl
xor
xor
ljmp
out
xor
orl
adc
xchg
mov
aas
mov
or
leave
jne
stos
pop
out
or
fsubs
adc
cmp
xchg
push
je
dec
push
xor
sub
and
or
push
dec
pushf
ret
lock
add
sbb
enter
into
sub
pop
aaa
sbb
lea
xchg
adc
push
push
jns
pop
push
mov
cmc
mov
xchg
xchg
nop
jno
in
cmc
adc
sub
and
pushf
inc
inc
js
sub
xor
fisttpll
xchg
clc
push
lods
outsb
jp
loopne
cmp
mov
sub
jnp
pop
xor
test
sub
jge
mov
pop
and
iret
add
pop
adc
pop
mov
cs
xlat
sbb
scas
mov
div
scas
mov
mov
out
int3
enter
sbb
adc
out
lea
xor
adc
leave
popa
jmp
dec
xor
xchg
loop
int
cs
push
nop
xor
popa
iret
shll
sti
push
push
aam
clc
jo
popf
aaa
mov
cli
repnz
mov
and
jg
ss
es
and
dec
sub
cmc
sarb
into
dec
sbbl
or
movsl
pop
ljmp
and
mov
ret
push
les
push
pop
mulps
lret
sbb
xor
mov
lcall
in
lea
push
dec
mov
jo
jl
inc
dec
xchg
movsb
jns
imul
mov
popa
repz
in
out
xchg
jno
dec
sub
pusha
out
push
nop
sbb
pop
lahf
pop
nop
lock
mov
bound
pusha
pop
notl
int
rcrb
stos
or
aam
data16
scas
loope
jp
popf
push
inc
movsl
mov
pop
les
loopne
sbb
xchg
enter
xchg
mov
and
lods
das
pusha
mov
fs
addr16
push
shlb
jp
add
dec
mov
push
cmp
or
gs
push
sbb
out
pmaddwd
pop
ja
test
loopne
pop
cmp
lock
push
ja
leave
adc
pushf
xchg
inc
lcall
outsb
test
xor
mov
fiadds
mov
int
cmp
scas
mov
imul
movsb
push
sbb
stos
inc
inc
leave
inc
stc
cmp
jb
sbb
jne
repz
int3
or
adc
sbb
pusha
sti
cmp
aam
pop
gs
pop
sbb
jle
aas
addl
xchg
mov
nop
cli
dec
inc
je
cmp
xchg
and
sbb
cmp
jg
mov
mov
jo
add
sbbl
bound
mov
pop
jno
or
mov
xchg
sbbb
push
mov
jo
pop
pusha
call
popf
cmp
data16
add
ret
fwait
lahf
bts
mov
aas
dec
ret
inc
lods
mov
ljmp
loop
orl
call
mov
push
sbb
aaa
cmp
push
insb
fsubrs
pop
pop
mov
fsubrs
mov
cmp
jge
popa
push
and
pusha
test
test
xor
scas
pushf
dec
sti
repnz
fsubl
shrl
fdivrs
lods
outsb
mov
pop
leave
test
pushf
js
int
test
loope
sub
jmp
pop
aas
pop
cwtl
mov
jge
fildl
jno
test
cli
int3
fsubl
xchg
mov
sbb
add
pop
inc
hlt
push
lock
cmp
ds
sub
or
shl
mov
scas
call
lock
push
cs
jecxz
sub
mov
and
lahf
pop
xor
lock
stos
sub
sbb
je
pop
mov
aad
dec
add
jbe
mov
lea
jecxz
sub
sub
xchg
inc
sub
add
mov
clc
outsb
push
push
repnz
fwait
es
rol
mov
jno
jmp
dec
jl
ss
adc
add
mov
in
and
xor
cli
or
sub
push
push
adc
ret
dec
hlt
xchg
pushf
hlt
stos
pusha
mov
out
and
mov
icebp
sbb
test
push
jecxz
xor
or
rolb
std
and
pop
push
xchg
pop
jg
mov
sbb
movsb
mov
cli
inc
mov
cmp
and
aas
dec
xor
test
in
push
es
add
jo
adc
push
and
mov
xor
imul
jae
in
fs
pop
sub
sub
mov
loope
aaa
test
ror
loopne
movsl
push
ljmp
xchg
xor
lret
movb
aad
repz
sub
sbbl
fsubr
loope
xchg
loopne
mov
subb
xchg
fidivs
sub
push
or
cltd
jp
mov
cmpsb
f2xm1
adc
pop
adc
lds
mov
int
out
mov
pop
xor
push
fxch
adc
mov
mov
pop
push
enter
lret
fsubrs
ds
orl
popf
mov
bswap
mov
cli
sbbl
dec
jg
pushf
adc
lods
js
add
and
lock
sub
cmp
xor
cmp
jae
es
mov
dec
movsl
cmpsb
sbb
out
xor
lret
add
adc
jge
sbb
mov
mov
and
enter
mov
sub
in
fcomip
mov
cmp
or
adc
inc
fisubrl
pop
sub
lds
subl
in
pop
xchg
and
xlat
cmp
dec
or
imul
xor
icebp
xor
pop
xchg
cmc
out
cmp
and
mov
insl
decw
add
andb
std
mov
inc
cmp
je
add
pop
push
ficomps
jge
push
push
cmp
sub
ja
pop
aaa
sbb
adc
xor
pop
xor
data16
test
int
push
add
xchg
neg
arpl
ret
insb
inc
in
enter
sub
xor
outsb
out
call
out
dec
sarl
lcall
xchg
jge
arpl
sbb
push
sbbb
out
movl
push
stos
dec
loop
enter
xorl
jb
sahf
add
shrb
outsl
addr16
out
push
clc
mov
les
lahf
je
jne
sar
jne
push
dec
movsb
cmpsl
adc
mov
icebp
pop
out
shlb
pushf
sbb
ds
in
std
scas
mov
sub
fcom
xchg
enter
icebp
mov
mov
sub
es
jmp
in
push
stc
xchg
xchg
xchg
ljmp
mov
mov
mov
and
pop
pop
shrl
out
das
jb
aam
subb
mov
push
cmp
pop
shrl
inc
xchg
mov
and
insl
xor
inc
test
jg
pop
jns
xchg
push
jb
and
rol
pop
push
shr
shlb
cltd
sbbb
sub
sbb
cmp
and
xchg
aam
jo
mov
gs
or
sub
dec
aad
mov
mov
ficomps
sti
pusha
mov
sbb
pop
mov
mov
fwait
or
push
or
add
shll
inc
icebp
pop
lock
add
or
jae
lods
sbb
insb
imul
ror
shl
lahf
mov
add
xor
lods
and
inc
jns
orl
xchg
hlt
inc
shl
xor
lret
sub
and
pop
out
andw
xchg
xchg
int3
inc
jbe
push
addb
sub
xchg
js
lahf
sub
xor
call
inc
fsubl
xor
jne
pop
insl
fs
loop
or
push
jae
jne
std
jle
insl
leave
test
xor
cmp
xor
xor
enter
lock
dec
in
add
xchg
cmp
inc
dec
jns
test
xlat
sub
mov
in
or
add
fwait
and
pop
adc
inc
rcl
pop
push
ja
test
int3
icebp
mov
or
xchg
dec
or
popf
cmp
sbb
in
pop
mov
mov
in
shrl
xor
adc
mov
movsb
dec
sbb
cmpsl
bound
mov
mov
inc
std
dec
add
nop
ret
fists
xor
out
ja
sbb
pop
sbb
xor
mov
inc
or
dec
les
xor
push
movsb
rol
clc
sbb
jg
out
std
jg
loope
es
dec
add
lret
mov
jns
xor
mov
adc
sbbb
xlat
jb
adc
ficomps
arpl
inc
popa
dec
int
out
push
mov
fdivrp
push
fnstcw
fistps
lods
push
inc
sahf
scas
mov
mov
or
mov
or
cmp
or
popf
mov
fldcw
mov
sbb
fbld
aam
cwtl
cli
shll
ret
xchg
or
lods
lret
mov
dec
push
movsl
lret
lds
fisubs
ss
inc
cmp
test
lret
ja
sbb
repz
adc
jb
rolb
or
cwtl
jmp
lret
sbb
stos
out
orb
lahf
jg
mov
cmp
aaa
dec
cmp
fsts
gs
sbb
rorl
scas
cmp
mov
pushf
add
fnstsw
and
cmpsl
pop
lret
pop
test
xor
ret
sbb
xchg
xchg
pop
sarb
mov
iret
xchg
adc
dec
or
mov
cmp
lret
js
or
and
rcrl
push
mov
pop
jge
jg
xor
add
ss
rcll
cltd
xor
inc
lock
xlat
mov
aad
pushf
jecxz
or
sub
cmpsl
cs
imul
daa
lods
in
arpl
push
test
sbb
and
xlat
adc
es
cmpsb
in
jmp
add
cmc
xchg
enter
xor
cltd
pop
test
pop
and
sub
or
shl
clc
dec
fsubrs
in
in
add
sub
mov
xchg
mov
sbb
xchg
outsl
dec
fldl
sbb
and
pop
cmp
mov
fists
test
push
sbb
fwait
sub
mov
cmpsb
sarl
xor
popa
std
cmpsl
int
push
dec
out
xchg
fucomip
cli
mov
lret
push
sbb
push
push
aam
imul
add
mov
mov
js
stos
xor
lret
fcomps
lock
and
ss
imul
adc
jnp
rolb
adc
or
aas
push
cmp
jecxz
jp
dec
mov
jl
push
test
bound
pop
cli
sbb
popw
fldcw
mov
cli
inc
fdivl
test
cwtl
insb
ja
out
pop
push
rorl
into
mov
das
sbb
mov
mov
pop
loopne
add
mov
jne
sahf
push
xor
fidivrl
cmp
xor
call
mov
repnz
inc
cli
jg
mov
cs
xor
xor
fmul
mov
je
incb
dec
pop
cmc
mov
xchg
jnp
lret
inc
inc
in
sub
js
and
mov
adc
pop
ret
cmp
cmc
enter
push
cli
jmp
fdivrs
cmp
mov
or
jb
xor
xchg
cwtl
and
popa
mov
push
dec
scas
lds
dec
inc
xchg
int
call
pop
cmp
pop
insl
sahf
mov
nop
cwtl
inc
rcrl
adc
pop
jle
and
xchg
pop
xchg
push
pop
and
sbb
jo
adc
orl
adc
addr16
or
dec
out
jg
in
xor
xchg
movsb
ja
cmpl
jb
int3
sub
push
cli
mov
addl
pushf
xchg
xchg
pusha
jl
inc
gs
inc
incl
test
mov
popa
mov
inc
push
mov
cmp
out
mov
insb
enter
add
leave
jmp
sub
imul
add
insl
insb
xchg
adc
clc
in
jle
insb
adc
pop
mov
adc
pop
inc
mov
stc
lock
and
pushf
sti
or
pop
add
cmp
inc
rcrl
dec
pop
rcrb
mov
jo
or
jmp
loop
das
sbb
scas
cwtl
stos
orl
aad
insl
mov
xlat
mov
mov
clts
ret
jno
or
mov
sahf
add
insl
pop
jae
mov
mov
xor
subl
lret
cs
out
add
pop
adc
sbb
in
cmp
sub
pop
xchg
mov
mov
je
pushf
imul
andb
loope
xchg
cmp
out
shll
cmp
dec
test
sbb
gs
sub
mov
mov
addr16
add
pushf
push
or
jl
stc
or
cmp
sbb
xor
add
outsb
and
mov
cs
push
push
std
aas
pop
faddl
scas
mov
fimull
nop
sub
out
add
mov
inc
dec
xchg
dec
push
jge
bound
sub
mov
punpckldq
jb
mov
sub
enter
sub
push
and
scas
out
push
mov
inc
int
mov
jmp
xchg
jle
xor
sbb
mov
gs
addr16
test
cmpb
ljmp
pcmpeqd
xchg
arpl
out
dec
fmulp
cmpsb
shrl
cmp
sti
and
das
insl
rorb
pop
or
stc
outsl
imul
xor
inc
xor
pop
stos
xchg
sub
mov
cmp
aas
test
push
push
clc
loopne
push
aas
xlat
mov
push
jnp
mov
cwtl
seto
fnstenv
mov
bound
sar
lret
push
push
testb
jo
push
out
in
cmpsb
jne
andl
xor
lcall
xor
cmc
xor
sbbl
mov
jge
cmp
lods
outsl
adc
leave
xchg
mov
jecxz
jle
mov
cltd
xchg
loop
inc
fbld
inc
lahf
adcb
push
outsb
mov
icebp
cmp
dec
repnz
aad
notl
sub
adc
pop
addr16
popf
sti
sahf
cmp
jns
lds
inc
sub
leave
mov
mov
mov
daa
mov
sbb
and
xchg
push
pop
dec
sarl
lahf
movsb
cmp
in
adc
in
mov
mov
int3
jmp
sub
cmp
outsl
ss
push
orl
xchg
mov
inc
push
push
subl
and
std
jnp
repnz
mov
jge
or
dec
mov
cmp
sub
sti
cmp
filds
xchg
sbb
adc
dec
imul
subl
scas
mov
jmp
insl
jne
aas
imul
jns
shlb
dec
or
mov
scas
push
imul
add
or
fisubrs
test
and
and
mov
inc
xor
loope
dec
jle
out
and
push
xchg
ss
mov
mov
mov
cmp
cmp
push
sbb
adc
mov
rclb
push
add
xchg
stc
stc
sub
adc
outsb
pop
jg
push
sbb
push
mov
sbb
movb
out
rcl
xor
outsl
int3
jnp
dec
cmp
lods
arpl
push
mov
test
ret
sub
lods
push
xchg
inc
mov
inc
sub
inc
jp
adc
or
or
and
cmc
in
xlat
adc
or
outsb
inc
jno
xor
es
mov
test
cmp
call
inc
or
popf
enter
out
test
mov
aaa
push
push
mov
xchg
lret
in
jae
adc
sti
jns
push
test
addr16
push
adc
push
jl
xchg
testb
xor
and
fcomps
fcoml
mov
or
jb
jmp
sub
xor
ja
or
ds
or
ja
and
push
gs
inc
inc
scas
arpl
cwtl
and
stos
test
lds
shl
aaa
pop
dec
jle
lret
mov
dec
sahf
sub
enter
test
and
push
dec
movsb
shrl
aaa
cmp
mov
movsb
or
or
int3
test
or
push
shlb
xor
add
cmp
xchg
hlt
and
mov
xchg
push
fnstcw
cmc
jmp
sbbb
fs
mov
int3
pop
mov
in
inc
leave
xchg
mov
int
push
fadd
shll
sbb
sub
add
cmp
mov
xchg
adc
rol
in
cmp
daa
pop
incl
addr16
mov
cwtl
mov
adc
lock
js
jecxz
leave
sub
mov
mov
adc
inc
xorl
mov
fs
adc
xchg
push
test
loope
js
hlt
or
mov
je
rclb
inc
push
push
add
add
adc
repnz
lods
in
pushf
out
pushf
xchg
mov
xchg
ret
das
cmp
push
xor
data16
sub
out
inc
loop
lods
mov
and
cwtl
xor
mov
inc
fists
pop
mov
inc
mov
push
pop
push
jo
jge
xchg
mov
or
add
stos
sub
out
and
sub
xchg
cmc
pop
xchg
rsm
test
mov
fnstcw
fsubs
pop
popa
out
notb
cmp
out
inc
leave
add
imul
test
xchg
hlt
mov
xchg
xchg
jmp
push
mov
mov
lret
data16
lret
rep
or
sub
push
xchg
lock
out
imul
sub
sbb
cli
adc
cmpb
mov
dec
imul
sahf
sub
push
inc
push
ret
xchg
and
fs
repz
pushfw
adc
xor
dec
mov
out
sub
lret
out
sub
mov
fisubs
repnz
or
lret
push
push
adc
insl
add
sub
push
gs
add
cmp
dec
sub
mov
mov
mov
shll
lods
cli
mov
test
adc
sbb
pop
jns
push
adc
cmpsl
addr16
flds
outsb
pop
int
adc
jp
in
nop
in
mov
je
aas
or
lahf
clc
imul
subb
test
fmul
or
push
pop
add
mov
mov
xchg
jnp
jmp
mul
outsb
mov
mov
inc
outsb
iret
sub
dec
movsl
cltd
add
ds
add
sbb
inc
btc
repz
scas
push
sub
dec
xchg
or
sbb
push
lea
dec
leave
dec
loop
mov
ret
mov
stc
pushl
inc
sbb
sub
jae
stos
mov
sbb
stc
mov
cmp
out
cltd
std
mov
addr16
arpl
pusha
das
in
mov
xor
xchg
lret
insl
repz
cmpsl
dec
cs
fistps
cmpsl
sub
test
xchg
jo
push
dec
jns
ficompl
and
xor
or
shlb
inc
pop
push
xchg
lock
and
rolb
add
push
call
cmp
dec
pop
ret
push
cmp
icebp
inc
xchg
inc
in
popf
ret
cmp
mov
push
push
shrb
testl
stos
mov
mov
mull
and
testb
inc
setge
ja
nop
and
icebp
adc
push
or
cmp
push
sti
jle
sahf
sub
leave
bound
out
pop
shrb
pop
loop
mov
popf
mov
jno
sbb
mov
dec
pusha
mov
cmp
out
outsl
rcll
out
add
movb
rcl
push
cmpsl
das
dec
push
addr16
call
xchg
arpl
data16
jnp
cmp
dec
mov
dec
dec
lret
and
test
pop
sti
xchg
movsl
andb
and
cmp
cmpsl
mov
enter
lods
add
cmp
enter
ss
repnz
cmp
rclb
rol
lock
dec
js
jl
pop
sbb
add
stos
lcall
adc
stos
pop
adc
jns
idivl
pop
jp
jo
imul
insl
mov
mov
inc
jbe
js
fldt
add
pushl
dec
pop
mov
rcll
sbb
mov
enter
insb
xor
test
jmp
dec
ljmp
das
bound
mov
movb
rcrl
add
add
lahf
xor
clc
sahf
add
inc
push
aad
push
decl
aad
das
fmuls
jae
xchg
jne
add
xchg
aas
fisttpl
sbb
push
rcrb
push
cltd
jne
jmp
outsl
lahf
add
test
sbb
jb
push
out
mov
inc
xchg
lock
pop
inc
mov
in
scas
movsl
xor
aam
mov
sbb
in
inc
sbb
nop
push
popa
test
dec
sbb
adc
dec
dec
lret
xlat
mov
pop
mov
jae
cmp
jle
xor
mov
arpl
dec
pop
mov
mov
lods
scas
lcall
dec
imul
and
movsl
dec
fwait
subl
scas
mov
sbb
inc
push
stc
dec
mov
out
xor
push
gs
inc
outsl
divb
test
cld
or
fldcw
add
mov
add
out
int
add
push
fwait
add
sub
shl
int
jb
js
pop
pusha
lret
imul
aaa
ja
pop
jns
and
rcrb
std
jle
mov
aaa
inc
out
outsl
xor
xchg
les
rorl
jae
add
cmp
jne
sub
cmp
jbe
ret
mov
data16
and
cli
mov
xchg
mov
mov
ret
repz
add
inc
add
jmp
sbb
sub
jge
or
push
scas
stc
jb
cmp
xor
mov
ja
sub
ja
and
add
dec
mov
jae
mov
int3
sub
jns
or
inc
jne
mov
and
add
mov
inc
test
sbb
dec
jnp
xor
ficompl
sahf
push
leave
ret
xchg
aaa
add
test
aad
leave
pushw
sub
popf
out
mov
out
inc
imul
push
cld
xchg
pop
cltd
lret
mov
inc
push
enter
or
fstpl
pop
xor
out
mov
hlt
icebp
mov
pushf
stos
fldt
test
adc
jae
dec
adc
call
daa
mov
dec
stos
inc
mov
dec
dec
cmpsb
in
lock
jo
in
lock
cmp
fxch
mov
clc
loop
fsub
fisubrl
scas
mov
test
mov
lock
jnp
xchg
cmp
movsb
dec
lret
aaa
xor
add
mov
testl
lods
mov
xchg
outsl
cmpsl
sub
loop
in
xor
in
scas
insb
stc
imul
cmovae
inc
add
adc
lret
daa
xchg
std
xor
xor
xor
jns
lea
ret
stos
adc
xor
aas
cwtl
mov
cmp
lds
in
out
inc
jbe
mov
je
js
xor
imul
sub
test
adc
xor
xchg
leave
mov
roll
add
imul
movb
test
sahf
mov
scas
mov
sbb
das
in
inc
in
enter
push
push
pop
sbb
cmpsl
aad
xor
sbb
inc
ret
xchg
pop
jo
icebp
sbb
cwtl
sub
or
mov
daa
push
test
aaa
cli
out
pop
enter
mov
dec
fidivrl
jecxz
jge
jp
cltd
sti
mov
fwait
xor
add
jns
mov
aad
mov
fucomi
into
mov
xlat
shll
add
lock
or
or
jecxz
imul
out
dec
mov
mov
cmp
dec
jle
mov
jle
sbb
pop
int
sub
cmc
cmp
pop
jae
outsb
cltd
cmp
out
mov
or
addr16
aas
sub
and
xchg
mov
xlat
lret
xchg
pop
inc
shl
pop
addr16
sub
inc
in
xchg
dec
xlat
xor
cmp
and
mov
fsubl
xchg
rcl
out
sbb
and
out
mov
lock
xor
enter
mov
pop
outsl
aaa
xchg
es
jl
inc
daa
pop
mov
fistps
xchg
dec
pop
cmp
iret
add
dec
mov
sarb
pop
fisttpll
pop
pop
clc
xchg
leave
js
jl
xchg
seta
mov
out
cli
mov
cmp
cltd
popf
sub
outsl
mov
scas
test
push
add
in
movsl
push
inc
or
or
add
jo
xor
push
loop
insl
xchg
pop
pop
mov
mov
ja
sbb
inc
and
insl
in
jne
clc
js
or
xor
aad
ret
test
out
data16
stos
daa
sarb
or
repnz
mov
addl
test
push
dec
pusha
fidivrl
mov
ret
or
mov
rcrl
imul
and
xchg
mov
insb
ljmp
cmp
xchg
ds
loopne
test
mov
fyl2xp1
dec
jnp
dec
jp
mov
push
insb
in
dec
daa
pop
aas
push
adcl
push
sbb
mov
sbb
or
push
jg
pop
stos
push
sub
frstor
imul
and
sub
push
mov
inc
push
outsb
xchg
jae
jo
rcl
or
mov
in
inc
pop
lods
ficompl
stos
idiv
repz
jno
ret
push
and
jnp
popa
pop
xchg
popa
fldt
imul
adc
ficompl
out
xchg
setns
mov
out
nop
push
lods
insb
lret
jo
lret
sub
js
jg
enter
fs
push
cmp
mov
outsl
push
lods
dec
lea
call
je
std
movsl
sbb
aaa
add
jecxz
fdiv
fimull
lret
and
rcrb
outsb
pushl
repz
cwtl
roll
pop
int
and
xchg
shll
push
and
lock
cs
leave
jge
inc
gs
lods
push
out
sbb
mov
fcomip
stc
shl
call
cs
mov
cmp
daa
push
mull
in
loop
aas
mov
xor
inc
lods
mov
imul
xchg
sbb
dec
mov
inc
or
fistps
adc
cwtl
pop
inc
adc
scas
xor
popa
push
push
push
sub
dec
sbb
dec
sbb
outsl
sarl
adc
jecxz
xor
pusha
mov
or
mov
mov
push
jbe
mov
sub
jns
add
cmp
mov
xchg
xor
pop
mov
shlb
mov
rcr
rcrl
dec
fstl
inc
scas
pushf
xchg
jg
inc
fcom
or
pop
sub
xor
mov
jg
dec
pop
pop
ret
movsl
inc
jns
rcrl
mov
sub
imul
jb
dec
cmpsl
insl
push
jbe
aad
call
mov
add
ffreep
pop
pushf
jmp
xchg
outsb
dec
inc
mov
xchg
jnp
les
mov
dec
xchg
cwtl
cltd
repz
mov
add
push
rclb
cltd
ror
loopne
cmp
les
inc
gs
push
bnd
fstpl
pushaw
add
pop
stc
std
outsb
or
adc
push
mov
rcl
iret
je
jns
push
mov
or
mov
in
fs
mov
fmull
xor
jp
shlb
xchg
adc
add
mov
jbe
shrl
xchg
je,pt
es
into
bound
nopl
or
fdivr
dec
rolb
sbb
call
cwtl
sub
sbb
fwait
cmp
cmpb
es
push
xchg
fnsave
or
scas
mov
aam
push
cmpl
lods
ror
aad
clc
push
enter
lret
icebp
test
inc
sub
mov
sbb
cmp
push
pop
ja
adc
rorl
int
push
pop
inc
mov
test
pop
pop
jnp
aam
or
mov
lds
pop
addl
int
push
sbb
push
clc
lret
iret
das
sbb
shlb
pop
sti
out
add
mov
lahf
lock
and
mov
lods
xchg
jecxz
adc
push
icebp
out
adc
inc
or
sub
xchg
movsb
sub
adc
cmp
fwait
mov
add
cmpsb
mov
pusha
jo
lahf
xlat
or
inc
cltd
in
jmp
mov
sti
push
cmp
mov
sub
ret
lret
ja
inc
cs
lods
mov
xchg
das
jne
fsubp
bound
popf
add
mov
dec
fsubl
testl
mov
cmpsl
xchg
cmp
int3
lods
out
data16
pop
adc
xor
mov
adc
xchg
xor
cmp
lret
insl
jmp
inc
cmpsb
imul
cmc
call
push
cmp
push
adc
ret
stos
xchg
pop
xor
cmp
in
pusha
testl
push
out
cmpsl
jno
pop
js
push
popf
or
les
jo
or
ljmp
sub
push
mov
sub
adc
cmp
jae
mov
cmp
xchg
pop
and
and
push
std
sbb
js
in
pop
dec
inc
sub
jg
xor
nopl
lret
dec
xchg
xchg
notl
mov
inc
pushf
std
sub
sbb
lock
add
pop
or
push
in
ljmp
xchg
icebp
inc
loop
mov
imul
js
aaa
mov
imul
mov
into
lcall
push
xor
movsl
data16
jo
push
icebp
cmp
or
repz
loopne
pminub
mov
mov
in
pushf
xchg
int
stos
repnz
int
data16
popf
aam
push
aaa
int3
in
sbb
movsl
jge
js
jno
shl
aas
dec
leave
js
gs
outsb
scas
popa
push
decl
es
scas
pop
negb
and
fldcw
int
add
adc
sar
outsb
mov
inc
mov
fstp
mov
cli
imul
fstp
cli
pop
cltd
stos
test
mov
iret
mov
jae
popf
test
popa
cmpsl
mov
inc
loope
nop
cmp
xchg
cld
int3
fucom
or
leave
in
xor
push
sub
xchg
adc
inc
pop
imull
adc
adc
pop
mov
mov
and
mov
in
mov
mov
loope
jne
adc
sbb
hlt
cmp
cmp
test
jecxz
pop
jne
insl
pop
lret
lret
imul
jb
inc
xlat
int
fstps
dec
and
gs
lock
push
outsl
dec
nop
push
arpl
sub
xchg
jl
dec
stc
pop
sbb
loope
rcrl
dec
cwtl
cltd
xor
mov
jns
mov
push
adc
gs
mov
dec
push
mov
push
aaa
dec
mov
pusha
jmp
jne
adcl
pop
mov
scas
cmc
bound
sbb
xor
or
jo
mov
jne
fidivrl
lret
sub
pop
mov
jbe
in
adc
mov
mov
ss
fs
rorb
mov
out
loop
and
ja
and
dec
push
in
inc
outsb
and
sarl
subb
fstpt
xor
aam
pusha
cmp
push
test
sahf
lahf
add
rorl
fdivrs
adc
sub
inc
test
mov
jp
loopnew
add
push
push
mov
inc
add
or
mov
mov
push
pop
mov
or
jmp
push
sub
aad
push
mov
push
testl
sub
xorb
leave
ljmp
lea
dec
ja
repz
cmp
cmp
aaa
lods
xor
jp
cmpsb
mov
jnp
sub
jecxz
and
dec
and
jae
jmp
mov
jecxz
sbb
data16
inc
push
adc
mov
lret
jp
push
lcall
jp
jp
add
nop
adc
lds
orb
das
jno
cmp
out
loop
mov
int3
lahf
jns
loop
stos
int3
or
mov
xor
xchg
mov
pop
xchg
xor
int
sub
je
mov
mov
xchg
add
pop
imull
roll
and
push
mov
imul
cmp
adc
popf
push
xchg
xor
push
popl
cmp
rorl
fildll
dec
addr16
orl
cmp
lret
notl
push
or
test
aas
pop
les
incl
int
pop
stos
inc
cwtl
lods
pop
mov
or
rorl
fdivrl
pushf
pusha
out
fsubl
int
xchg
sub
add
ja
push
stos
adc
int3
fwait
xchg
push
popl
fisttpll
popf
mov
popf
cs
adc
mov
jmp
push
inc
jb
outsb
adc
cld
out
out
lock
int3
repz
out
mov
jl
jae
cli
mov
adc
inc
fsubrs
popf
es
lods
mov
fisubrs
push
jns
xor
je
xchg
mov
xor
pop
rcrb
mov
orb
pop
push
sbb
enter
ds
xchg
rcrl
test
fcom
inc
scas
dec
mov
lret
mov
jns
mov
mull
adc
and
xchg
outsb
pop
push
push
mov
dec
mov
push
int3
jle
xor
pop
adc
loopne
daa
fsubs
clc
insb
fcmovne
lea
icebp
inc
push
jp
push
stc
loopne
iret
jge
int
in
inc
outsl
jecxz
mov
ja
shlb
pop
insl
fstpl
out
mov
sbb
rorb
fs
fbstp
pop
mov
cmpsb
insb
pop
jmp
shl
ja
int
mov
std
mov
dec
jmp
jg
xchg
andb
push
sahf
push
dec
push
xor
lods
and
arpl
in
flds
repnz
in
popf
mov
stc
or
jl
push
ja
add
xor
aam
nop
jecxz
scas
push
cmp
adcb
call
jle
lret
testl
add
mov
dec
test
dec
andl
add
dec
push
into
dec
xchg
jbe
mov
pop
cmpb
mov
mov
inc
jne
mov
sarl
js
je
jge
push
bound
push
push
dec
in
rcll
scas
in
lea
out
sbb
add
inc
rolb
mov
sub
push
mov
pop
gs
xor
xchg
pop
inc
dec
and
add
lahf
rorl
add
int3
xor
insb
pop
pop
imul
mov
pop
std
jnp
mov
push
imul
mov
in
arpl
mov
movb
jmp
jle
in
adc
inc
mov
aas
add
cmp
out
aad
jne
sub
sbb
dec
cmp
cmp
xchg
cmp
repnz
cmp
out
pop
pop
scas
movsl
mov
stc
call
in
adc
xor
or
sub
xchg
pop
jae
inc
jns
dec
inc
mov
jmp
push
loop
pcmpeqw
out
lahf
scas
mov
mov
mov
or
fsubrl
lahf
cli
cmp
fiaddl
sti
xor
xor
je
sbb
iret
and
or
push
rcrb
roll
mov
inc
jo
pop
out
pushf
daa
mov
mov
mov
xchg
outsl
and
adc
and
pop
mov
je
rclb
arpl
outsl
stc
aad
loopne
and
insl
imul
mov
inc
xor
xlat
aas
pop
fdivrs
ret
scas
insl
sub
inc
mov
mov
cli
mov
or
push
fisttpl
pusha
dec
pop
orb
dec
out
into
pop
cmc
cmpsl
fidivs
sbb
lods
pushf
loope
fiaddl
mov
push
inc
mov
ret
sub
int
push
outsl
add
lds
push
sbb
or
jb
push
adc
into
sbb
inc
int
aad
dec
dec
adcl
popf
fistpll
pop
repnz
add
push
test
mov
sbb
mov
mov
ja
or
in
mov
js
mov
push
ss
inc
leave
fsubr
cmpb
test
xlat
cld
and
dec
ret
mov
mov
orb
fldcw
jmp
sbb
imul
mov
or
jae
negl
loopne
mov
dec
shll
fcoms
call
push
outsb
mov
mov
imul
scas
push
mov
shrl
shll
mov
ffreep
cld
pusha
add
push
in
sub
cmp
xor
jecxz
repnz
subb
movsb
ds
cmp
sbb
pop
loopne
in
push
scas
in
sbb
nop
stos
jns
lret
repz
sbbl
cmp
bound
sbb
pop
pop
pop
icebp
popf
or
xchg
sbb
mov
pop
mov
insl
sub
or
cmc
movd
pop
jle
sti
popa
shl
outsl
mov
outsl
out
dec
add
inc
adcb
mov
inc
lahf
xchg
movsl
push
rclb
dec
lret
sbb
insl
xchg
das
sbb
jl
das
nop
les
inc
into
add
jae
adc
js
adc
bound
lret
pusha
xor
and
pop
hlt
sub
jg
mov
les
mov
mov
cmp
imul
inc
xor
sahf
jo
cwtl
push
mov
ljmp
mov
shlb
ss
rcr
les
lock
and
in
sub
dec
into
xlat
std
lcall
sarl
or
repz
xchg
mov
mov
mov
lcall
dec
shlb
mov
test
pusha
lret
aas
xor
outsb
into
adc
mov
mov
in
mov
lea
rclb
enter
mov
fiaddl
es
test
lock
repz
mov
pushf
xor
and
mov
pop
add
push
mov
out
xor
lahf
sbb
aam
jecxz
pop
cmp
sahf
add
and
cmp
jmp
mov
fistps
into
dec
or
add
mov
cli
dec
xor
fsubp
cli
dec
mov
mov
jl
jp
dec
xor
sub
aas
pop
add
mov
and
inc
jp
je
jns
mov
mov
aad
xlat
fstl
sbb
xor
jge
stos
stos
and
mov
or
leave
gs
dec
inc
jno
outsb
pop
fs
dec
ror
leave
adcb
xchg
dec
pop
push
cmp
test
cld
nop
add
ret
je
jecxz
jae
ljmp
cmpsb
jae
jb
dec
xlat
and
inc
cmp
subb
stos
shlb
cmpsb
and
ret
stos
out
std
and
jne
push
jl
hlt
pusha
mov
mov
rcr
int3
test
stos
pop
lret
cmp
push
add
ljmp
out
bound
jne
repnz
and
xchg
inc
xor
repnz
arpl
xor
cmp
inc
jl
lret
xchg
mov
rcl
cmp
stos
and
jg
xchg
aas
xchg
movsl
popa
or
mov
scas
jae
mov
fimuls
adc
je
push
pop
push
dec
inc
cs
rcll
ja
in
aas
inc
jle
sub
aam
cs
push
mov
loop
jns
nop
mov
cmc
orb
xor
sbb
xchg
sbb
sar
pop
sahf
aas
lods
int
shll
push
push
sub
push
adc
inc
repz
lahf
sarb
xor
push
stos
sbb
mov
in
dec
jbe
sub
and
imul
push
scas
sub
mov
lds
movsl
pop
push
outsb
or
pop
ljmp
cmp
lret
sub
loope
in
jge
jb
fistpll
cmp
xchg
sbb
sbb
call
push
push
push
enter
xchg
pop
xor
leave
or
dec
cmpsb
imul
add
fwait
pop
cmp
mov
inc
mov
dec
xor
push
sub
cmp
xor
jmp
jnp
push
or
js
sub
loop
lods
xor
popa
les
xor
sbb
jge
mov
or
mull
lret
push
inc
or
push
int
rcrb
xchg
push
int
inc
insb
cmp
dec
into
mov
movsb
call
xchg
int3
cmp
test
aaa
push
je
test
leave
stos
nop
pop
jb
sub
mov
mov
push
dec
sub
and
aam
or
xor
hlt
sub
pop
icebp
sbb
imul
mov
ret
outsb
dec
mov
lds
pop
flds
cmc
push
imul
das
mov
cmpsl
add
or
rorl
imul
pop
dec
dec
lret
fwait
mov
push
jb
pop
subl
add
push
dec
out
das
les
cltd
shrl
fnsave
iret
lods
jne
inc
in
jmp
jno
inc
push
stos
jmp
iret
sbb
push
jnp
or
or
dec
cmp
out
cltd
mov
ljmp
cmp
jecxz
outsl
pusha
pop
pop
jns
push
jnp
loope
loopne
popa
dec
pop
bound
dec
mov
adc
mov
insl
adc
mov
or
dec
push
adc
mov
movsl
add
lea
dec
lahf
out
xchg
inc
cmp
or
pop
push
cmp
xchg
push
sbb
cmp
sub
sbb
ljmp
add
dec
icebp
jb
imul
mov
std
pushl
xchg
and
mov
cltd
jns
jo
xor
xchg
sti
imul
jmp
lahf
inc
inc
dec
adc
repz
xchg
jb
bnd
pop
loop
add
push
push
add
xchg
push
add
daa
pusha
mov
add
pop
xchg
lahf
adc
jg
cld
add
ljmp
inc
xchg
sbb
xor
mov
outsb
outsl
leave
aad
lret
aam
mov
mov
inc
mov
dec
in
lods
sbb
dec
xchg
sahf
mov
fidivs
or
fidivrs
sub
lods
or
rolb
cs
mov
repz
addr16
out
iret
add
jnp
inc
addl
ja
shll
jmp
jo
mov
or
ja
cmp
in
cmp
adc
mov
pop
gs
loopne
lret
xor
fcoml
mov
lahf
fdiv
pusha
repz
or
gs
js
dec
test
jno
test
xchg
add
cmc
xor
in
out
sbb
mov
mov
adc
push
mov
icebp
cmpsb
adc
xchg
icebp
and
push
inc
xchg
jmp
xor
mov
xor
mov
or
mov
movsb
cmp
fdivs
xchg
add
sub
mov
add
sbb
adc
pop
pop
scas
inc
fldcw
sbb
or
and
jns
imul
mov
iret
loop
hlt
jb
popa
pop
xchg
lods
inc
fcmovb
push
mov
mov
ljmp
out
ljmp
in
andl
popf
in
inc
fldenv
mov
ja
test
into
dec
xorl
mov
pushf
int3
or
sbb
jp
out
fs
xchg
and
cwtl
jmp
mov
dec
inc
sbb
sub
jno
xchg
inc
rcrl
xor
inc
aas
pop
es
into
or
mov
repz
stc
xchg
xchg
lods
sub
sub
push
adc
add
ljmp
push
insl
xor
std
push
lret
lods
jno
jne
push
xchg
xchg
and
imul
int
xchg
out
sbb
jmp
test
adc
in
sbb
test
mov
fiaddl
cwtl
mov
cltd
inc
jmp
test
lods
pop
push
xor
into
cmp
add
xor
push
stc
addr16
or
loope
sbb
adc
push
xchg
and
insb
lock
xor
arpl
jge
daa
movsl
enter
das
dec
aaa
setno
and
icebp
les
cmpsl
daa
cmpsb
pop
filds
or
sbb
leave
sbb
fdivl
add
aam
add
mov
shll
test
mov
cmc
and
jmp
jp
mulb
adc
xchg
fwait
pop
jecxz
lcall
inc
push
add
adc
test
jecxz
dec
pop
and
mov
push
in
pop
js
sarl
mov
dec
cmp
dec
fimull
and
ret
inc
mov
mov
mov
aam
repnz
test
fucomip
ljmp
out
arpl
jae
lock
xor
xor
jo
clc
inc
je
inc
repnz
jmp
outsl
ret
and
inc
dec
seto
sub
sbb
inc
fs
aam
sahf
mov
mov
repz
lcall
aas
repnz
xchg
pushf
loope
and
fimull
jle
nop
shlb
outsb
push
add
les
sbb
push
imul
xor
jle
push
mov
stos
into
xor
mov
mov
mov
and
mov
mov
mov
call
test
nop
pop
into
and
in
cmp
lods
sahf
sub
shrl
rcrl
inc
cmp
and
lret
and
inc
dec
xchg
sbb
jne
inc
mov
in
pop
cltd
jmp
cli
jmp
xor
xchg
rep
pop
ds
xchg
and
add
sbb
cmp
and
mov
subb
pop
shl
xchg
cmp
stos
jecxz
mov
pop
jge
outsl
inc
push
pushl
pop
loopne
cmp
hlt
out
or
sbb
jg
test
data16
shrl
jno
fisttpl
xchg
negb
xor
sub
stos
or
adc
gs
xor
mov
rcrl
mov
neg
leave
or
jmp
mov
js
pop
shll
jns
into
repnz
fists
stos
mov
dec
jno
shrb
mov
out
jg
testb
sub
or
xchg
push
sbb
aad
subl
les
fldt
mov
ret
dec
movsb
call
pusha
add
push
lods
lahf
add
mov
cmp
pop
sbb
xor
jb
in
test
push
add
mov
adc
add
mov
sti
jo
adc
dec
xchg
jne
jne
or
mov
mov
out
inc
loopne
clc
sub
dec
push
mov
dec
or
mov
adc
cmpsl
iret
xchg
sbb
add
cmp
fistpl
add
xor
xchg
pop
cmp
and
and
pop
icebp
push
xchg
pop
mov
pop
shrb
jle
push
out
mov
sbb
fdivrl
imul
xor
movsb
dec
ja
movsb
pop
int
mov
jecxz
pop
repz
xchg
and
in
addr16
das
dec
inc
imul
imul
push
pop
adc
out
test
and
je
inc
cmp
cli
cmpsl
push
xchg
add
out
ret
ljmp
repz
fstl
lcall
or
adc
fstps
push
dec
pop
inc
mull
mov
cmp
pop
nop
ret
xor
imul
aad
cli
cwtl
cmc
dec
cmp
jp
rcl
dec
sbb
fnstcw
nop
mov
and
rcrb
jecxz
in
imul
add
mov
test
jle
mov
xchg
jmp
clc
sbb
xor
push
repnz
lahf
or
in
testb
rorl
out
sbb
jle
xor
mov
and
stos
xorb
and
lea
jnp
ficomps
mov
insb
xchg
add
inc
push
mov
mov
cmp
xchg
mov
add
jnp
pop
inc
inc
sub
jbe
leave
sub
inc
add
outsb
sbb
mov
scas
ljmp
enter
cwtl
push
popf
test
cmp
repz
jl
push
dec
lret
rcl
mov
add
dec
adc
aaa
sub
xlat
pushf
sub
xor
mov
xorb
ja
jnp
in
mov
xor
sbb
fsts
mov
xchg
shrb
xchg
inc
mov
fstpl
mov
mov
into
cmc
sub
mov
sub
adc
pop
fucom
std
fwait
push
lea
cltd
ret
jo
or
popf
jg
mov
arpl
mov
xor
fisubl
jo
fcmove
adc
insl
xchg
dec
or
jb
lcall
mov
mov
mov
les
push
jp
and
in
scas
mov
enter
loope
xor
test
sub
ss
test
inc
dec
sub
or
xchg
idiv
sti
and
sbb
xor
scas
inc
pop
fsubp
sub
std
cltd
xchg
icebp
adc
xor
repnz
pop
and
inc
int
mov
test
mov
pop
sub
stos
inc
in
adc
push
jne
xchg
and
cmp
ret
cmpb
sbb
or
inc
es
insl
aad
out
push
cltd
mov
test
cld
mov
xor
leave
mov
cmc
orl
mov
jmp
stos
jae
push
push
lods
cltd
scas
int3
test
imul
mull
jecxz
cmp
cltd
sub
aas
inc
pop
pop
jge
push
pop
dec
ss
dec
ret
arpl
push
fcoml
loope
imul
addr16
xor
aas
fildll
jb
jecxz
sub
pusha
mov
xchg
cmp
mov
mov
out
outsb
sbb
and
push
fucom
and
pop
sbb
inc
in
icebp
jl
mov
adc
jl
das
push
imull
mov
xchg
jbe
jns
jecxz
dec
cmp
push
dec
cld
mov
and
addr16
cld
pop
dec
push
or
fnstsw
add
sbb
sub
dec
cli
icebp
out
add
rorl
xor
push
jle
pop
cwtl
je
popa
or
mov
lahf
inc
add
push
mov
xchg
mov
push
in
push
bnd
pushf
mov
in
repnz
mov
fs
in
mov
mov
loopne
movsb
ficoms
sahf
lds
push
add
pmaxub
cmp
sti
or
aam
test
inc
xor
ja
xlat
fisttpll
fs
push
stc
push
ret
aas
or
mov
xor
fdivs
adc
pop
cltd
loop
cmc
sbb
pop
xor
ja
rclb
outsb
add
sub
ljmp
cmp
cmpsb
lret
aam
dec
xchg
and
out
out
or
sbb
and
setl
push
lret
shl
fsubrl
ljmp
and
dec
dec
or
inc
cmc
rcr
sbb
aam
inc
cli
jl
sbb
clc
in
jp
std
ljmp
push
mov
sbb
or
inc
push
test
iret
and
aad
mov
pop
mov
jno
lcall
sbb
cmc
fisttpl
fadds
dec
cmp
rcrb
dec
das
loop
sub
das
dec
dec
xchg
mov
push
lods
lea
push
loopne
xchg
ja
cmp
outsb
call
xchg
data16
mov
js
shlb
pop
jl
aas
icebp
jl
xchg
and
test
mov
push
xchg
mov
sbb
push
insb
add
pop
rcr
xchg
test
insl
push
push
and
lahf
xchg
push
push
lahf
pop
dec
setae
jne
xchg
pop
adc
pop
cld
into
leave
mov
inc
movsb
or
push
xor
mov
xor
test
dec
xchg
mov
lds
and
mov
ffreep
and
or
mov
dec
dec
test
sub
ds
xchg
pop
scas
dec
mov
rcrl
fs
cltd
gs
sub
lock
loope
scas
xchg
mov
xchg
nop
cmp
shl
aam
js
pop
mov
adc
and
add
mov
mov
lods
pop
mov
loopne
inc
iret
out
mov
xor
fbstp
mov
lcall
je
pop
xchg
ret
or
sub
sub
adc
jnp
lods
test
xor
test
stos
pop
mov
dec
mov
std
inc
int
add
fsubrs
xchg
insb
nop
call
sub
mov
in
xor
cwtl
add
and
mov
dec
inc
pop
adc
pop
mov
push
xor
sbb
addr16
sti
xor
fmull
shl
mov
test
pop
and
fimull
adc
inc
ret
jbe
mov
add
cmp
jb
or
mov
jbe
adcb
mov
xchg
outsl
push
pop
sub
jo
cmp
enter
add
cmp
loop
in
sahf
fbstp
ss
sbb
add
popf
enter
test
jne
mov
lds
outsb
mov
cld
xchg
fstl
sub
iret
jb
mov
and
lcall
cmpb
into
aaa
pushf
mov
test
xlat
fcomip
add
aam
test
pop
sbbb
rcr
loope
add
dec
subl
push
stc
inc
jae
enter
sar
or
loopne
xchg
push
repz
aam
popf
inc
stos
mov
push
aaa
dec
cwtl
imul
pusha
outsb
out
pusha
mov
xchg
inc
rcr
cmp
fnstcw
mov
xor
lcall
push
xchg
push
jg
cmp
mov
daa
test
out
lds
jb
mov
fldt
test
call
loopne
js
add
std
pop
mov
adc
hlt
test
stc
xchg
cmc
mov
addr16
sbbb
imul
vcvtdq2ps
cmp
and
cmp
inc
mov
sahf
push
mov
xor
xchg
data16
jle
pop
jmp
mov
mov
adc
and
xchg
jmp
push
scas
add
das
lods
rcl
push
mov
cltd
pop
jge
mov
mov
aam
mov
repz
ljmp
sub
jp
sub
xor
dec
insl
sbb
repnz
icebp
mov
imul
bound
xor
mov
cwtl
ss
add
sub
dec
lock
lock
xchg
dec
scas
inc
jno
ret
xlat
outsl
stos
sbb
cs
hlt
cld
xor
in
mov
jle
xor
xor
clc
and
test
pop
adc
and
mov
sti
mov
lock
pop
cmpsl
jne
ds
dec
test
or
movsl
dec
adc
sahf
cld
je
rolb
sub
std
movsb
and
xor
pop
movsl
push
or
mov
adc
mov
xor
or
iret
inc
int3
inc
or
mov
not
js
dec
mov
jno
int3
rcrl
sbb
jo
sub
rorb
cmp
mov
dec
mov
test
faddl
nop
and
les
push
popa
jae
lcall
lock
iret
mov
sub
lcall
mov
lods
xor
imul
arpl
pop
jl
fsubp
push
dec
dec
cmp
test
inc
popf
cmc
faddp
jnp
das
and
bound
pop
shrb
pop
inc
gs
cmp
iret
and
lret
lea
dec
cs
das
lock
hlt
pop
cmpsl
dec
addr16
mov
das
lret
dec
fistpl
or
into
es
xor
repnz
mov
sbb
push
xchg
mov
mov
mov
adc
inc
mov
jp
push
mov
ss
js
dec
mov
pusha
fnsave
jne
xchg
daa
jns
lea
repz
jae
lods
movsb
cli
je
faddl
test
adc
in
push
or
imulb
inc
test
enter
push
mov
cmp
add
adc
fildl
adc
in
leave
das
bnd
push
imul
inc
lahf
xorl
ljmp
icebp
lods
xlat
adc
mov
mov
ret
loopne
mov
cltd
push
or
cmpsl
inc
fsubs
jge
aaa
cltd
aaa
push
inc
daa
mov
push
lret
mov
les
push
fwait
out
ret
daa
out
scas
ja
add
lret
ror
and
jno
mov
xlat
and
add
gs
mov
ljmp
fsubrs
cltd
xor
out
and
fsub
hlt
push
or
dec
push
imul
mov
sub
fists
xchg
mov
sbb
test
orb
mov
mov
dec
test
cmc
in
sbb
daa
cmp
jo
cmp
in
cmpsl
stc
sbb
adc
adc
or
lods
test
pop
sbb
jno
xabort
mov
add
xchg
lret
push
inc
jp
sub
fcmovu
in
or
lret
pop
iret
mov
push
push
outsb
in
loope
push
xor
or
jno
mov
je
rol
lods
add
loopne
test
cld
push
sub
ror
shl
lret
inc
xchg
cmp
mov
sub
sahf
in
inc
cmp
or
pop
pop
movsb
inc
add
fsqrt
test
xchg
mov
cmp
movsb
loopne
pop
xchg
xchg
dec
inc
out
rolb
rcrl
imul
inc
stc
push
int
lret
jb
into
in
rclb
ds
data16
xlat
scas
lret
ja
stos
mov
adc
and
sbb
mov
or
out
jbe
imul
inc
add
inc
mov
inc
pop
mov
cmp
mov
pop
sbb
sti
jge
gs
fsubrl
fcmovbe
inc
movsb
jae
push
sahf
jne
in
xlat
daa
pusha
pop
loopne
xchg
scas
adcl
in
lret
in
pusha
push
mov
imull
es
inc
loop
js
lds
xchg
xor
and
push
les
sub
pop
cmp
enter
jg
sbb
pop
inc
jo
leave
or
adc
leave
mov
sbb
xchg
push
xchg
js
cmp
sbb
or
xlat
ret
fsubrs
push
shlb
mov
and
inc
fdivr
and
in
push
bound
mov
xchg
mov
push
gs
movsb
ds
push
jecxz
lahf
pop
daa
dec
sbb
mov
mov
negb
fmulp
inc
xchg
ljmp
dec
add
loopne
jbe
xchg
xchg
fwait
lret
pop
adc
push
jl
mov
scas
fdivrp
mov
dec
pop
push
mov
jecxz
cmpsb
and
and
inc
mov
mov
in
aad
xchg
ret
mov
mov
sub
loopne
les
test
loop
int
outsb
adc
mov
lret
xchg
in
inc
jl
or
std
or
push
clc
sbb
mov
test
aas
sbbb
in
mov
xor
push
pop
inc
pop
ret
add
in
add
push
cld
aas
adcb
xor
cmp
dec
nop
cmp
mov
or
sub
arpl
repnz
sbb
call
push
in
pusha
inc
jne
insl
mov
por
jecxz
sti
loop
imul
adc
ss
mov
out
sti
std
ja
icebp
jo,pt
sbb
in
in
into
leave
stos
stc
fs
dec
lock
cld
sbb
mulb
or
mov
fdivrp
xorl
in
or
mov
daa
and
dec
sub
jecxz
mov
lret
xchg
loope
cmpb
xor
xor
hlt
adcb
jp
cmp
sti
arpl
test
or
inc
shll
pop
mov
aad
cwtl
pushf
int3
mov
adc
and
mov
push
iret
dec
mov
mov
mov
fcmovnbe
xor
insl
push
jne
xchg
jae
xor
xor
imul
inc
adc
rclb
aam
pushf
cmp
mov
rclb
jns
inc
xor
or
mov
arpl
std
push
xor
jp
xor
ffree
add
aam
xor
sbb
fstps
aaa
adc
shl
out
add
fildl
mov
xlat
cs
pop
loop
bound
mov
jmp
push
scas
mov
jo
aad
cmp
cmp
mov
ss
test
js
fbld
push
sti
add
icebp
inc
dec
pop
call
int3
jb
jmp
dec
pop
aas
or
sbb
xor
fldl
sbbb
lods
mov
pushf
sahf
loope
jae
sbb
push
push
mov
fcomip
movl
jle
adc
sub
mov
mov
mov
jne
jmp
adc
jmp
fisttps
std
das
imul
adc
imul
cmp
cmp
lret
push
jnp
outsl
cs
lods
xchg
cli
pop
icebp
jmp
dec
pop
inc
adc
jo
inc
insl
ret
pxor
add
mov
lock
lcall
in
lcall
incl
add
test
mov
adc
call
mov
iret
sbb
inc
pop
pshufw
cmp
xchg
dec
into
fst
adc
ds
es
cmp
lcall
not
mov
stc
cltd
cmp
call
sub
pop
pusha
shll
pop
add
outsb
bound
sahf
push
and
push
cli
daa
stos
push
aam
fdivr
dec
loop
add
shlb
jl
popa
xor
cli
pop
adc
pop
xor
push
sbb
popa
lret
fisubrl
ss
inc
pop
inc
outsb
rcll
dec
iret
out
leave
decl
in
mov
popf
cld
push
js
add
or
and
aam
sub
and
je
push
stos
push
push
daa
and
mov
push
jns
or
ret
jecxz
sub
and
sbb
lea
push
adc
mov
aam
pop
rolb
fs
dec
and
jge
mov
test
xor
push
add
jle
mov
rcrb
xchg
shr
inc
cli
mov
mov
rolb
or
or
lcall
or
xor
add
cltd
dec
repz
clc
jg
cmp
inc
mov
cmpsl
andl
mov
sbb
in
fstl
mov
ss
or
pop
int3
xchg
inc
hlt
into
lea
pusha
jecxz
fcmovb
xor
int
mov
jle
adc
loopne
or
add
shl
jg
cmp
sbb
lret
cmp
ret
mov
xor
das
mov
daa
sbb
jo
mov
jae
add
out
pop
rclb
shl
sub
sbb
ds
jp
insl
or
fimuls
in
jp
int
pop
insb
and
push
popa
jo
and
in
test
gs
lret
mul
popa
adcl
std
inc
or
jle,pn
push
into
dec
jnp
stc
xor
or
xchg
fwait
in
pop
mov
mov
or
or
sub
jb
lods
stos
xor
push
pop
in
jnp
dec
sbb
scas
jnp
xchg
jecxz
jg
sub
fnstsw
sub
dec
imul
out
jge
ljmp
push
push
cmc
sub
adc
neg
sub
dec
jl
lea
push
xchg
fwait
cmp
mov
xor
and
test
jg
fwait
in
insb
pop
iret
mov
rclb
pop
fldenv
ret
mov
xchg
mov
sbb
or
inc
sti
and
stos
fldcw
sbb
sbbl
lods
clc
jl
jno
int
je
jo
adc
adc
inc
mov
mov
dec
cmp
jne
jmp
push
mov
mov
test
push
outsl
inc
sbb
movsb
fnsave
sbb
mov
loope
stos
pop
sbb
fisubl
lods
fidivrs
cmpsl
pop
icebp
popf
cmp
inc
dec
lret
out
xchg
sub
je
lods
dec
mov
cmp
sbb
sahf
jl
aas
xchg
sub
stos
insb
xor
shl
out
and
dec
rorl
insl
notb
mov
loopne
les
mov
out
test
add
shll
test
sbb
xchg
fisubs
imul
sbb
ret
lock
leave
mov
xor
das
jmp
in
inc
jmp
sarb
sbb
adc
mov
in
xchg
cmp
xlat
xchg
sbb
xchg
pop
int3
jnp
inc
jecxz
cmp
sbb
in
inc
testl
jecxz
push
pusha
out
sub
lods
outsl
jne
mov
jb
pop
pop
aam
test
call
jmp
inc
cmpsw
cmpsb
js
mov
sar
jge
inc
out
imul
inc
xchg
pusha
dec
pop
xchg
in
and
push
enter
fildll
push
sub
ja
xorps
ftst
dec
xor
or
jo
pop
adc
mov
sbb
push
jle
xor
shll
repz
loop
adc
pop
mov
cwtl
and
pushl
sub
out
ss
enter
and
xchg
ret
inc
sub
iret
fs
icebp
outsl
cmc
stos
popf
dec
add
xor
add
xlat
lea
bound
nop
add
lahf
cmpsb
daa
and
jae
cs
ret
pop
mov
add
sub
xchg
stc
dec
fdiv
pop
push
push
xor
cmp
outsl
adc
out
bound
dec
mov
xorl
mov
ja
movsl
mov
repnz
and
les
pusha
jge
lods
push
mov
aad
mov
push
sub
nop
outsb
and
lods
sub
jb
stos
sub
add
gs
fcmovb
fdivrp
mul
scas
jg
insl
xor
aam
mov
mov
fisubrl
add
dec
test
pop
es
aaa
sub
ret
out
cs
gs
int
push
jle
aad
das
fdivl
push
int3
or
adc
dec
in
cli
mov
mov
push
mov
rorl
mov
ja
out
fwait
not
fisubs
jecxz
push
sub
mov
cld
repnz
mov
pop
sub
das
xor
clc
nop
into
fdivs
fucom
test
loop
outsl
jmp
repz
push
push
pushf
sbb
out
out
mov
and
imul
jg
js
mov
aam
pop
addr16
outsb
mov
lcall
mov
inc
repnz
mov
pop
jle
push
popf
sbb
int
adc
adc
inc
jne
adc
in
mov
or
add
and
js
push
orb
ffreep
shrb
pusha
loopne
int
push
jp
mov
adcb
push
fdivl
add
repnz
mov
xchg
in
pop
mov
push
rcrb
sbb
es
sbb
dec
dec
fnsave
jecxz
orl
jae
dec
mov
cmp
xor
repz
dec
mov
inc
aaa
rcr
jnp
bound
push
aam
mov
or
and
adc
les
mov
adc
imull
rcrb
sub
and
mov
pushl
lahf
stc
jbe
dec
mov
nop
sbb
xchg
in
mov
add
cmp
mov
adc
jmp
insl
mov
adc
sahf
xor
rorl
stc
mov
cltd
rcrl
loopne
pop
sar
lahf
mov
enter
xchg
clc
pusha
and
pop
cmp
std
movsl
push
mov
fmull
fsts
arpl
mov
idivb
cld
js
sbb
mov
pop
bswap
push
sbb
mov
sbb
jb
mov
pop
xlat
dec
pop
lds
xchg
xor
inc
iret
lea
out
adc
pop
jecxz
sbb
ret
mov
xchg
paddd
shlb
push
mov
notb
pop
ljmp
lret
mov
push
xor
cmc
pusha
inc
inc
add
pop
in
xor
aas
xor
sbb
pop
imul
jnp
xchg
pushf
ss
mov
dec
fldt
lock
mov
dec
test
movsb
out
push
testl
inc
pop
adc
cs
jp
mov
xchg
xchg
xor
inc
jp
lea
add
pop
fidivs
jae
or
in
sub
scas
rcrl
clc
sar
sbb
call
sbb
xor
jne
adc
repz
icebp
loope
xchg
arpl
mov
mov
sbb
jle
movsb
inc
add
push
icebp
pop
notl
xor
pusha
adc
mov
cmpsl
das
adc
push
add
cmp
and
push
sub
mov
cmp
cld
bnd
in
sub
sbb
jo
or
cmp
sub
lods
mov
pop
lods
popa
adc
aam
sbb
scas
mov
lcall
repz
in
push
xchg
xchg
sbb
iret
test
sub
add
fsubl
enter
ret
iret
hlt
les
dec
cwtl
sub
mov
clc
js
push
jnp
inc
inc
rep
xchg
cmpsl
pavgw
out
les
ret
or
adc
pushf
dec
int3
inc
sbb
xchg
sbb
shll
arpl
shll
fdivrp
fcmovnb
fwait
test
lret
daa
ret
je
xor
mov
push
mov
fstp
sbb
adc
into
dec
inc
daa
fcmovbe
mov
hlt
inc
iret
lea
inc
add
sub
stos
int3
les
stos
pop
imul
ds
loop
cld
leave
paddsw
inc
mov
aam
fstpl
mov
cmp
enter
mov
dec
inc
inc
pop
aad
out
cltd
lret
mov
out
jl
out
imul
jmp
and
jmp
test
cmpl
bound
aaa
dec
cld
or
dec
dec
lds
mov
xorb
mov
cmp
or
mov
jno
pop
ljmp
dec
stc
mov
ror
sbb
sbb
sbb
cli
xchg
sti
lea
mov
jp
mov
push
repnz
jmp
add
xor
dec
sub
lea
adc
mov
adc
dec
sub
mov
jle
xor
cwtl
aaa
das
jne
insb
mov
mov
mov
xchg
inc
stos
pop
mov
push
negb
int
sub
out
repnz
es
mov
adc
xchg
add
push
ss
cmpb
xchg
ret
jp
lret
nop
mov
mov
xchg
cmpsl
mov
and
js
test
popa
imul
xor
cmp
inc
je
test
jp
int3
push
cmp
ljmp
enter
xchg
popa
inc
mov
push
push
gs
xor
js
inc
push
mov
push
xor
push
xor
loopne
xchg
inc
xchg
lret
mov
mov
and
and
xor
out
jo
cmp
fdivrs
push
int
sbb
jg
adc
adc
outsl
push
dec
lret
data16
ds
inc
hlt
cmp
sub
jo
sbb
mov
movhps
std
out
sub
out
pop
lods
xchg
in
xchg
stos
pop
fidivrl
out
scas
cmp
sub
push
test
sub
and
jo
movsb
push
push
and
lods
xor
test
fcoml
subb
pusha
pop
stos
and
mov
lcall
stos
js
add
shll
js
adc
test
mov
ds
mov
xchg
push
mov
inc
cmp
dec
or
fbld
mov
aas
adc
fcomi
iret
dec
stc
sbb
repz
mov
cmpsb
and
stc
inc
jmp
mov
lcall
cmpb
inc
mov
mov
push
xchg
orl
mov
and
ret
add
xchg
mov
icebp
inc
into
out
dec
pop
gs
data16
movsl
test
dec
pop
in
xchg
call
mov
das
js
cmc
stc
nop
sbb
je
or
lods
das
cmp
mov
jp
ljmp
hlt
jne
aam
in
int3
scas
lods
or
addl
mov
lock
sub
inc
rcll
and
flds
cwtl
pop
and
xrelease
xor
mov
fistpll
xchg
xor
jb
mov
call
sbb
loope
push
cmp
aad
out
bound
xchg
lds
dec
fxch
push
sti
movsl
add
inc
dec
cltd
xchg
test
lods
cmp
dec
xchg
shl
xchg
sbb
xchg
pushf
jnp
cmp
mov
andl
sbb
dec
jecxz
dec
lds
push
out
fwait
inc
inc
xor
inc
aaa
jb
dec
mov
cld
out
inc
lods
bound
call
gs
xor
jae
cmpsb
lcall
shll
pop
in
shlb
push
or
mov
decl
jns
stos
cmp
dec
xchg
ljmp
mov
imul
and
in
or
mov
in
sub
in
mov
xlat
pop
cli
les
das
shrb
jge
dec
push
adc
dec
ret
or
outsb
adc
loope
xlat
int3
test
xor
cmpsb
push
lcall
or
xchg
mov
mov
xlat
push
mov
push
clc
lods
xor
addr16
xor
test
or
in
sbb
mov
inc
cwtl
add
mov
xlat
mov
fdivrs
fimull
mov
dec
cs
cmp
lods
jnp
fsubrp
sub
sti
imul
cli
inc
mov
xchg
xlat
push
vpextrw
lds
andb
push
fmull
push
mov
ret
xlat
shrl
jae
fidivrs
pop
test
mov
dec
loope
fiaddl
or
scas
pop
pop
arpl
pop
jbe
lock
out
and
movsb
sbb
push
push
rorb
gs
jnp
pop
and
cmpsl
mov
or
xchg
je
add
pop
outsl
in
or
mov
inc
mov
and
fdivrs
pop
in
shlb
mov
pop
push
loope
ja
xor
pop
cmp
and
adc
xchg
dec
lock
cli
outsb
ret
sub
fwait
lahf
jmp
mov
jmp
mulb
sub
stos
jns
jno
mov
mov
push
sarl
loope
xor
jno
xchg
xchg
scas
inc
or
push
lods
mov
out
imul
in
into
cmpsb
int3
and
jb
outsb
scas
icebp
xor
js
xor
mov
test
jno
mov
push
cmc
pop
stos
loop
lahf
ljmp
jns
cltd
sbb
sbb
outsb
lahf
nopl
nop
ljmp
addb
pop
loope
xlat
mov
pop
in
test
idivl
outsb
jl
mov
push
aaa
push
push
movsb
nop
lahf
push
cld
push
inc
mov
cli
dec
mov
scas
and
aas
or
sub
decb
clc
into
push
cmp
mulb
lock
jo
adc
xchg
push
xor
jae
xor
add
mov
dec
mov
mov
adc
xchg
inc
pop
mov
xor
lcall
rcl
xchg
pusha
pop
mov
or
xor
inc
loop
icebp
adc
out
lcall
sti
std
dec
outsl
mov
xor
scas
fistps
pop
inc
iret
add
fisttps
mov
mov
decb
aas
jno
aam
fisubrl
into
push
aad
ror
je
call
push
pop
cli
scas
mov
divb
dec
fcompl
cmp
iret
decb
mov
jp
xor
loop
mov
mov
das
rcrl
lahf
ret
add
xchg
fs
cmp
jb
sub
mov
jge
push
fistps
add
pop
cmpsb
shrl
repnz
sub
jnp
xchg
int
decb
enter
repnz
lret
jp
repz
pop
sbb
ret
jno
sarl
lock
xchg
xor
insb
or
and
les
sbb
sbb
orb
or
imul
mov
arpl
pop
push
fisubs
jae
add
fidivrl
xchg
icebp
scas
ds
fstps
jae
call
js
into
in
lods
mov
jecxz
pusha
popa
mov
insl
inc
stos
push
inc
add
cmp
test
and
cmpsl
pop
and
mov
sbb
xchg
xor
mov
cmc
lock
in
xchg
stos
pushf
and
and
into
test
adc
push
sbb
frstor
bound
add
and
out
jb
dec
inc
mov
sub
pop
ljmp
shrb
pop
sub
test
add
push
out
clc
and
lret
shl
out
push
hlt
mov
sbb
mov
xchg
push
bound
aas
and
test
xchg
mov
add
xlat
loop
add
and
mov
xorl
mov
inc
or
jbe
mov
ljmp
fiadds
add
mov
and
out
pop
cmpsl
sahf
lea
inc
mov
mov
fldl
jno
jbe
andb
loope
lret
fwait
jmp
fstpt
mov
jmp
fbld
mov
mull
sbb
push
mov
xor
dec
fdivp
inc
xlat
push
mov
jae
cmp
and
es
iret
push
pop
fs
fs
je
outsl
push
lock
stos
mov
add
mov
inc
xchg
dec
pop
lret
movl
into
pushf
fldl
sti
inc
mov
popf
dec
test
jp
mov
jle
ret
jae
dec
ds
std
jne
pop
pusha
sub
mov
lock
outsl
dec
fisttpll
xchg
jb
ret
or
add
xchg
and
xor
enter
rol
ds
iret
fs
mov
dec
sbb
adc
add
gs
scas
fists
fidivrs
sub
jns
lds
xor
mov
sub
mov
pushf
cltd
mov
ret
jnp
jle
pop
lcall
test
dec
sub
cmp
mov
mov
out
jp
inc
div
push
daa
cmpl
out
or
ret
rcll
loopne
or
in
sub
and
jecxz
mov
lret
mov
es
sub
cmp
jge
mov
dec
mov
std
dec
push
push
push
dec
pop
push
sbb
jbe
adc
gs
sub
dec
jae
mov
xchg
inc
pop
dec
dec
sarb
hlt
add
je
shlb
fidivs
dec
mov
cmp
and
push
adc
sub
fdivs
add
lcall
leave
mov
push
cmp
cli
loope
test
jns
jne
out
fistpll
inc
outsl
hlt
or
test
jbe
lcall
jno
jnp
ja
mov
pop
dec
aam
repz
lret
pop
xlat
dec
and
je
mov
cmp
ds
xorb
je
inc
pop
mov
js
fisubrs
sti
stc
pop
pusha
js
movsb
ret
jns
inc
sub
jp
aaa
mov
ds
or
popf
inc
push
mov
pop
pop
sbb
popa
cli
ss
push
xacquire
push
inc
test
adc
dec
pop
pop
push
sub
lods
mov
xlat
shll
fistl
sbb
or
mov
xchg
pop
push
aas
divl
pop
lcall
pusha
movsb
fcoms
aam
gs
icebp
and
jle
xor
pop
mov
int3
jo
enter
shlb
xor
iret
or
fwait
xchg
sarb
jmp
icebp
adc
mov
sahf
or
mov
mov
xor
mov
and
inc
push
push
add
sahf
lea
outsb
jbe
mov
arpl
jge
ret
into
out
mov
leave
mov
mov
or
fstps
sar
lcall
repnz
jl
in
sub
test
fsub
hlt
or
push
cmpsb
leave
push
sbb
outsl
inc
xchg
jle
sbb
inc
mov
add
mov
cwtl
sub
xor
mov
dec
sbb
das
dec
or
adc
adc
pop
jmp
mov
xor
arpl
notl
add
mov
and
aad
xlat
fistpll
mov
jecxz
dec
rorb
aas
test
sbbl
subl
adc
mov
popa
or
test
dec
daa
call
lahf
sub
and
xchg
sub
lahf
sub
inc
icebp
xchg
enter
mul
sarl
mov
inc
fwait
mov
movsb
subps
sahf
aam
lock
icebp
loopne
into
in
mov
dec
adc
xchg
push
shlb
cs
not
mov
cmp
mov
mov
push
xor
or
enter
push
xchg
mov
dec
movb
adc
lcall
std
add
and
jnp
mov
cs
into
in
outsb
fisttps
xor
popf
add
cmc
pop
xchg
cmp
test
add
pop
jnp
stos
push
shlb
in
jle
sti
xor
mov
js
xchg
inc
das
mov
cmc
popf
stos
ror
sbb
xor
movsb
std
js
jno
and
leave
aaa
pushf
ljmp
cmp
int
cmp
and
and
jmp
sub
stos
stc
xchg
xchg
mov
in
ret
sub
arpl
adc
bswap
mov
mov
aad
inc
mov
jge
and
sahf
pop
sbb
jg
mov
loop
add
enter
ret
hlt
fwait
int3
dec
cmp
rcr
and
data16
pop
and
mov
mov
movsb
enter
in
mov
xor
lock
sarb
js
xchg
mov
mov
out
xchg
jmp
popf
sbb
adcl
dec
add
dec
push
outsb
movntq
pop
dec
xor
pushl
xlat
mov
jns
stos
mov
jmp
mov
pop
aad
clc
orl
fdivs
jnp
pusha
dec
in
pusha
fildll
add
and
verw
dec
and
and
and
outsb
popa
dec
mov
test
inc
nop
mov
into
icebp
and
test
loopne
hlt
mov
pop
jo
mov
out
inc
inc
mov
pop
ret
or
xchg
fsts
cmpsl
shrl
push
decb
sti
push
jo
inc
addb
jl
cltd
insl
inc
pushf
fcomi
clc
fld
out
stos
xchg
cmp
xchg
xchg
or
push
cmp
push
rcrl
scas
mov
mov
rclb
cmp
lret
sbb
ds
ss
mov
fisttps
jo
aad
jge
mov
popf
xchg
cmpsl
mov
mov
pop
xchg
jl
lea
dec
mov
mov
pop
xchg
fsubr
scas
add
xchg
jae
fnsave
adc
and
and
jnp,pn
jg
hlt
mov
ret
add
sub
mov
cmp
jg
jnp
xchg
jl
mov
mov
cmp
dec
and
cmp
push
mov
testb
ja
lods
mov
mov
cmp
jle
fsubrs
adc
jbe
add
rorl
dec
sete
fnstcw
inc
idivl
jnp
mov
fdivl
adc
add
mov
pushf
lcall
push
lret
push
pop
mov
jnp
sbb
mov
mov
in
mov
mov
out
pop
and
pop
inc
xor
sub
mov
adc
add
and
sub
fwait
inc
jge
sub
adc
pop
mov
jmp
insb
xlat
insb
sbb
loope
rcll
fcmovb
push
lock
mov
push
fmull
pop
mov
pop
inc
lds
add
test
adc
sub
sbb
dec
inc
call
ja
or
lahf
orb
mov
rol
dec
fsubr
sbbl
jbe
inc
into
adc
and
inc
fdivs
inc
jg
adc
cmp
imul
mov
je
xor
out
gs
lock
cmpsl
cltd
jmp
mov
jae
stos
pop
lock
cmc
lahf
scas
inc
cmp
or
dec
sub
mov
dec
mov
stos
cmp
fdivp
mov
popa
add
out
ljmp
mov
push
xor
sub
fwait
decb
dec
push
aam
scas
jne
push
jg
and
dec
out
dec
ja
dec
and
rorb
movsl
push
jb
cwtl
jp
aas
repz
int
cs
cmpb
push
jmp
ucomiss
add
ja
insl
adc
inc
int3
adc
das
sbb
dec
jnp
negl
mov
xchg
aaa
js
dec
aam
and
scas
lods
xchg
icebp
lods
lcall
mov
in
mov
jg
out
pushf
adc
inc
das
lcall
sti
iret
push
cmp
pusha
pushf
jl
xchg
pop
je
fcoms
aaa
dec
add
push
mov
xchg
adc
iret
dec
inc
cmp
push
sub
jge
shl
xchg
push
lods
adc
lret
push
jp
sub
fimuls
sarl
nop
xchg
add
rclb
inc
ljmp
push
lods
call
mov
aaa
jne
rorl
add
xor
jmp
lods
pop
fbstp
lret
aad
repnz
sbb
repz
ret
fs
push
dec
pop
cmpsl
fcoms
lods
sarb
loope
cmp
push
fs
mov
popf
popf
jp
add
out
sahf
lret
adc
or
insb
or
mov
orl
dec
pop
out
enter
sahf
mov
outsb
or
outsl
fcoms
fimull
dec
repz
loop
xor
add
ja
mov
bound
test
aam
lock
loop
sbb
and
add
je
int
mov
pop
cmp
add
iret
jnp
inc
test
stc
cmc
jle
inc
push
into
fistps
movsl
out
in
fstps
imul
int
sub
mov
pop
and
ret
push
call
and
mov
add
push
mov
xchg
negl
std
lods
cld
xchg
add
les
int3
mov
sub
or
xchg
add
add
les
xchg
push
jne
fwait
mov
cmpsl
xlat
lret
iret
pop
adc
in
dec
inc
push
scas
push
lods
mov
add
hlt
jae
push
mov
mov
push
mov
xchg
in
lcall
cmp
pop
inc
jne
stos
adc
cmpl
xchg
xchg
jle
xchg
in
aam
fmul
imul
mov
outsl
xor
out
fidivrs
pop
mov
popa
lret
clc
rclb
loop
out
outsb
cltd
in
cmp
aaa
repnz
stos
aaa
pop
push
sbb
sbb
jbe
push
loop
stc
cmp
int
cmc
dec
or
xor
push
roll
lea
ret
push
pop
bound
sub
inc
popf
jnp
aas
jge
mov
mov
pop
push
fs
ljmp
push
push
or
rorl
sub
sub
fstps
test
sbb
dec
xchg
mov
jle
ret
pushf
cmp
aaa
sub
mov
xchg
out
push
shrl
or
adc
fucom
imul
mov
scas
mov
fdivrl
js
imul
addb
sub
rcrl
mov
scas
sub
pusha
sbb
jnp
enter
xor
cmp
jle
popa
and
out
mov
add
mov
push
ss
xor
movl
fdivrs
push
inc
test
jbe
jl
aad
decl
ret
cmpsl
cmp
stc
aad
gs
movsb
fmul
dec
or
mov
xchg
mov
xlat
add
mov
sub
cli
enter
xor
xchg
inc
std
push
repz
add
popf
push
sub
scas
stos
push
adc
xchg
dec
std
imul
add
and
xchg
filds
jle
idivl
cmp
dec
xlat
sbb
loope
iret
fs
pop
sub
aam
inc
mov
mov
sahf
jle
inc
leave
adc
les
xchg
jmp
sbb
divl
cmpl
add
add
xor
leave
or
sbbb
inc
rcl
mov
dec
push
addr16
sbb
mov
int3
sbb
xor
dec
xchg
ja
jmp
and
xor
stos
shl
mov
cmp
mov
adc
pop
push
and
pop
push
jl
les
hlt
xor
dec
sbb
enter
int
subl
dec
mov
jmp
push
push
and
push
and
lret
mov
stc
sub
or
call
cmp
sbb
sub
adc
cmp
pop
cmp
dec
sub
mov
test
dec
push
fldl
cmp
in
mov
or
int3
jne
fsubs
std
jmp
xchg
adcb
incl
fmul
push
jb
das
out
jecxz
or
repz
mov
xchg
mov
test
xor
pop
popa
inc
jg
push
pop
ret
and
test
pop
lds
fstl
xor
in
pop
sahf
mov
shlb
mov
push
or
pop
jge
xchg
outsb
leave
test
fidivl
out
in
mov
xchg
cmp
mov
leave
jo
push
leave
out
addr16
nop
js
mov
pop
out
int3
mov
mov
jecxz
std
xor
lods
add
pop
sahf
aas
int
inc
pop
addr16
pop
sbb
repz
stos
cmp
repnz
push
or
mov
sub
mov
cmp
mov
loope
pop
sbb
popa
sbb
hlt
jp
pop
mov
sub
popl
hlt
sbb
inc
shl
jns
cmp
push
push
mov
movsl
call
divb
push
dec
insl
lods
xchg
sbb
cmpb
sub
jle
adcl
jp
add
mov
push
push
mov
pop
in
loop
adc
shl
mov
sub
pop
push
jbe
pop
and
push
das
sub
stc
push
and
add
das
cmp
adc
adc
aaa
ja
cmpsl
ret
iret
mov
imul
xchg
shl
jg
and
pop
mov
or
enter
call
inc
ja
fdivr
in
or
mov
jae
lahf
test
fwait
in
decl
in
andb
jae
scas
aam
daa
jnp
push
loope
movsb
faddl
sbb
scas
cmp
rorb
ss
and
xor
loop
adc
imul
push
dec
mov
cmp
dec
xchg
push
mov
std
mov
stc
movsl
icebp
insl
call
adc
jbe
mov
mov
lods
xchg
dec
shl
test
sahf
mov
lret
insb
pop
mov
mov
jae
or
xor
jno
iret
aad
call
xchg
sub
aas
into
sub
or
adc
rolb
bswap
xchg
loope
xchg
mov
or
bound
push
out
jns
cmp
mov
or
xor
cmp
mov
int3
pop
mov
in
into
push
jno
adc
push
test
and
fisubl
repnz
dec
test
out
adc
or
call
dec
call
adc
mov
and
dec
fidivrl
out
inc
jns
xchg
or
pop
mov
sbb
pushf
mov
xor
fucomi
enter
mov
insb
pop
dec
and
xor
jne
clc
shrl
arpl
fdiv
mov
popf
outsb
shr
dec
xor
test
xor
ret
xor
mov
subb
sbb
dec
push
hlt
jmp
mov
pop
sbb
mov
lret
xchg
roll
ja
mov
pop
popa
push
jle
push
in
mulb
xchg
mov
xchg
fistpll
push
inc
lret
scas
sbbb
pushf
lret
in
lcall
adc
push
dec
out
add
mov
int
sbb
or
cmp
aad
mov
sub
mov
pushf
mov
cmpsl
out
inc
pop
xchg
shll
pop
iret
test
push
mov
xchg
add
xchg
jbe
pusha
inc
mov
jne
shll
jo
jg
cltd
aam
xor
mov
inc
jo
std
cmp
cmp
sbb
ret
outsl
bound
sti
hlt
pop
jnp
stc
jnp
and
nop
push
sub
inc
rcll
cltd
cmp
lock
mov
mov
xchg
or
orl
ret
push
cltd
lods
adcl
outsl
ret
hlt
lods
cli
lods
lret
add
push
xchg
add
pusha
cmc
fsubl
jae
push
mov
cs
xor
dec
xor
scas
xchg
test
sub
lods
sub
outsb
stos
lds
mov
jecxz
scas
sbb
test
mov
es
test
lods
sbb
out
or
in
loope
mov
cmp
addr16
push
push
adc
cmc
mov
mov
cmc
mov
pusha
jle
lea
xor
in
push
in
popa
mov
pop
xor
mov
push
out
dec
cmp
imul
sub
mov
sub
jns
dec
push
movsb
dec
pop
rorb
in
jecxz
les
xor
hlt
lret
je
sbbb
popl
loope
pop
xchg
inc
mov
inc
push
ja
jne
lods
ljmp
lock
xor
dec
and
inc
mov
or
stos
int
xor
push
test
sbbl
sbb
repnz
notb
cmp
sub
push
sub
lcall
xlat
sbb
push
push
mov
jnp
notl
inc
pop
lds
mov
addr16
xor
fcoms
lret
aam
fcompl
xor
push
cmp
shlb
cmc
mov
or
mov
dec
test
les
daa
adc
cmp
test
cli
ljmp
ret
mov
cmc
sub
mov
dec
js
int3
out
fcompl
js
scas
std
imul
out
and
adc
pop
test
pop
jns
scas
addb
imul
test
fcomi
rolb
mov
dec
mov
pop
outsl
adcl
jge
loop
xor
push
imul
xchg
xorl
pop
daa
ret
aad
movsb
div
sahf
push
incl
inc
cmp
cmpsb
push
popf
rcrb
outsl
cmpl
jbe
test
xchg
imul
dec
rcll
mov
cmp
push
xchg
lcall
popf
adc
add
clc
jae
xchg
popa
shlb
imul
fwait
jg
jb
inc
fstpt
add
inc
fcoms
pop
ret
stos
aad
add
or
cmpsb
cltd
pop
es
fs
in
hlt
cmpsb
into
adc
xchg
pop
lea
xchg
jbe
jecxz
iret
push
mov
sub
adc
in
ss
push
dec
test
push
sbb
outsb
in
mov
lret
and
sub
inc
fcmovb
or
dec
repnz
call
inc
xlat
incb
cmc
test
sar
in
sbb
ja
and
test
jle
mov
fistpll
sub
setle
pop
pusha
mov
movsl
push
adc
cmp
mov
pop
ret
xorb
inc
add
add
xchg
xchg
adc
pop
jbe
call
inc
jecxz
ljmp
lock
mov
ror
xor
movsl
xor
pop
movsb
outsb
jb
dec
inc
push
daa
ljmp
xchg
das
push
mov
mov
andl
add
inc
add
shlb
xchg
imul
adc
test
nop
jg
mov
mov
shll
mov
movsb
xchg
fisttps
cli
nop
add
or
mov
repz
lods
jbe
flds
inc
sub
mov
test
negb
repz
stos
lea
or
imul
jle
add
fcoms
push
inc
mov
dec
icebp
pushf
pop
fs
cmp
test
in
jge
das
imull
aaa
mov
cltd
ss
pop
sub
and
lock
imul
or
hlt
jl
ss
add
mov
pop
mov
out
pop
mov
xchg
ss
repz
mov
bound
iret
pop
lock
aaa
leave
pop
and
jo
data16
lea
jecxz
jo
ret
add
inc
lods
mov
sub
mov
xchg
mov
test
ss
push
sbb
scas
mov
jle
cmp
xchg
adc
popf
stos
pop
and
inc
lret
lods
fistps
sub
enter
hlt
adc
call
aad
fmuls
ja
sub
or
lahf
sub
push
sbb
popf
lret
cmpl
lret
dec
mov
cmp
push
shrl
mov
lods
arpl
jae
out
cmp
mov
adc
pusha
xchg
xchg
in
mov
mov
xor
mov
pop
sbb
mov
xchg
or
push
add
bound
scas
mov
cwtl
outsl
ret
call
insb
mov
add
dec
mov
adc
inc
inc
push
add
cmp
xchg
or
aaa
push
test
cmp
popa
les
adc
push
pushf
sbb
jg
aaa
xor
adc
pop
hlt
sub
pop
jge
xor
idivb
xor
dec
lahf
rclb
stos
and
test
addr16
adc
mov
loop
mov
out
test
mov
cltd
mov
cli
xor
and
add
xor
mov
push
mov
sbb
mov
xor
or
pop
and
icebp
add
sub
cli
imul
loope
inc
int3
fcomps
jnp
jnp
int
inc
mov
inc
jge
je
loope
cmpsb
mov
pop
inc
adc
pop
lea
int3
cmp
arpl
in
jne
loopne
arpl
xor
sti
dec
push
test
xor
pushf
mov
and
jne
mov
sarl
cld
stc
mov
outsb
in
mov
jle
sub
pop
dec
adc
loop
lahf
es
cmpsb
sahf
scas
ljmp
xlat
jns
int3
jmp
call
shll
pop
jae
sahf
cmp
aam
mov
jnp
pop
scas
movsb
aam
pusha
scas
dec
xor
xor
add
add
sub
loope
cltd
dec
lcall
sub
xchg
dec
adcl
clc
sbb
imul
fstl
or
mov
scas
sbb
jmp
add
dec
add
or
mov
mov
leave
pop
mov
js
cmp
xchg
push
and
push
je
cmp
xor
lods
divb
std
xchg
ja
mov
nop
mov
jno
insb
push
sbb
xchg
andb
inc
shll
jbe
or
push
add
lods
fs
mov
gs
das
mov
repz
push
mov
cmp
aad
mov
lock
adc
cltd
dec
std
mov
sahf
sub
shrl
in
mov
imul
fs
xor
insb
add
cmc
test
ds
aaa
bound
dec
into
loop
jl
push
insb
add
lret
lahf
sbb
repnz
fisttpl
in
jmp
mov
call
sbb
mov
lcall
cmp
mov
sub
cmp
fidivl
fadds
rcll
inc
sub
dec
mov
mov
stos
pusha
mov
fwait
inc
mov
xlat
cmpsl
mov
lret
ss
sbb
inc
mov
pusha
js
adc
cmpsb
test
nop
mov
dec
rcrl
in
out
pusha
mov
sub
lret
lds
into
lock
sub
test
cmpsl
or
xchg
pop
fidivs
iret
sbb
cmp
sub
push
and
cmpsb
je
and
int3
outsb
inc
adc
lret
pop
xchg
inc
jae
cmp
flds
xchg
mov
imul
loope
les
hlt
dec
xor
sarb
pushf
cwtl
rcll
sub
jl
sbb
rol
or
cs
mov
and
mov
pop
ret
fsts
xor
dec
mov
repz
pop
lcall
or
cmp
ljmp
jo
adc
cli
pop
pop
jle
es
mov
add
and
pusha
push
jae
je
sbb
push
das
fsts
fldl
cmp
or
rcll
mov
ja
mov
out
cmp
and
enter
leave
sbb
mov
mov
test
mov
daa
adc
daa
cwtl
loop
popa
ss
ret
sarl
loope
push
cld
lcall
pop
orl
mov
rdtsc
nop
push
js
xor
push
leave
adc
test
push
test
mov
jle
add
stos
push
out
movsl
adc
push
ret
insb
xor
cmp
cmp
mov
pop
add
sub
mov
fld1
push
cld
sbb
jg
jno
pop
sar
mov
outsl
jb
inc
icebp
sub
pause
sbb
add
mov
fisttpl
xor
fimuls
sub
xor
push
lds
pushf
sbb
mov
jmp
in
or
mov
fcoms
mov
mov
mov
xchg
pop
xor
cwtl
and
filds
xor
xor
aaa
push
mov
lea
loopne
out
push
imul
movsl
jmp
adc
push
popa
dec
mov
mov
int
sub
je
or
out
add
and
dec
pop
inc
mov
fsubrl
xchg
xor
cmp
pushf
cmpsl
pop
and
clc
xor
jbe
inc
pop
pop
xlat
fs
sub
pop
stc
push
loope
insb
lahf
push
scas
dec
int3
sub
or
mov
and
push
xchg
repnz
les
mov
and
add
inc
jae
pop
fsubs
popa
lcall
lock
jle
sub
mov
lret
pop
push
xor
push
lret
mov
leave
fcomi
push
sbb
addb
pop
inc
data16
popf
iret
jno
sahf
fwait
xchg
cmpsl
sbb
out
cs
imul
or
add
mov
xchg
xchg
push
mov
or
cli
movsl
sub
inc
fidivs
and
cmp
sub
cmc
aad
orb
in
sbb
mov
imul
or
lret
test
jg
mov
cmp
add
pop
or
push
fwait
notb
pop
imul
fstl
fadd
test
fidivs
cltd
xor
push
sbb
mov
sub
insb
outsb
mov
rcrb
stos
out
or
mov
xlat
add
push
xchg
inc
push
and
lahf
cmp
arpl
jns,pn
in
mov
push
xchg
jo
insb
scas
lods
inc
mov
sahf
mov
mov
xor
push
sbb
xor
xor
and
cmp
ss
divb
mov
subb
jae
pop
iret
pop
pop
inc
stos
xchg
push
movsb
bound
inc
adc
jle
fisubrs
mov
movsb
xor
test
pushl
mov
adc
fistpl
push
cmc
or
loop
sub
std
int
out
icebp
test
cmp
and
inc
outsl
pop
pop
jnp
rolb
fwait
aaa
lea
inc
les
loop
sbb
pop
add
lahf
out
sbb
pushf
adc
repnz
repnz
pushf
dec
and
lds
or
in
add
mov
push
push
fildl
out
not
jmp
mov
mov
push
in
mov
adc
dec
sbb
adc
mov
xchg
pop
fwait
mov
cmp
mov
sbb
pop
ljmp
cli
in
push
jno
rorb
dec
stc
aam
bound
mov
mov
xchg
imul
je
mov
xchg
loop
push
pop
adc
or
in
sub
sub
jbe
gs
clc
mov
out
mov
xor
pop
xchg
es
mov
repz
js
inc
leave
push
mov
xchg
out
imul
push
ljmp
icebp
std
into
sub
inc
pusha
inc
in
push
push
mov
cmpb
mov
pop
add
cmp
or
out
inc
arpl
jb
xchg
cmpsb
or
and
popf
jne
sub
mul
xchg
in
xlat
sbb
and
push
xor
push
mov
add
hlt
inc
dec
jnp
or
dec
mov
test
in
js
popa
mov
daa
sub
dec
int3
sbbb
mov
add
mov
sbb
push
xor
addr16
cmp
mov
xor
dec
adc
repnz
test
cli
dec
aas
add
jno
jae
dec
or
xchg
mov
jl
pop
sub
lret
daa
imul
outsl
call
mov
jne
lcall
cmpl
adc
xchg
adc
int
repnz
inc
cmpsl
push
jnp
mov
jno
xor
shll
mov
pop
sets
add
dec
div
in
call
cmpsl
lret
mov
and
mov
mov
jg
out
icebp
mov
xor
cltd
into
lock
or
arpl
test
mov
lret
jg
xchg
shll
xor
push
js
inc
aas
ljmp
scas
out
dec
pop
dec
pop
pop
test
jmp
jle
hlt
sahf
mull
add
aaa
fnstsw
inc
cmp
fimull
mov
in
push
stc
cmp
flds
inc
lds
mov
or
adc
or
mov
iret
jecxz
test
jbe
leave
add
pop
xlat
das
sbb
cltd
insl
sub
dec
pop
sbbb
jae
xchg
stos
jge
mov
pop
mov
pop
inc
cli
mov
lret
ret
inc
loope
sbb
cwtl
sub
sub
mov
adc
add
push
sarl
xchg
icebp
fs
stos
xlat
add
fdivl
idivb
mov
xchg
pop
stos
or
push
stos
repnz
jno
sub
ljmp
mov
xor
add
xor
aam
mulb
fsubrl
leave
cwtl
fldcw
mov
fistps
fisubrl
dec
dec
shll
mov
imull
repz
xchg
lret
and
in
enter
jp
mov
pop
or
pusha
inc
stos
and
addb
xor
xlat
mov
cmp
inc
xchg
xor
dec
mov
adc
out
push
cmpsb
aad
dec
sub
xchg
add
das
and
pop
push
inc
lea
inc
lods
data16
fbstp
in
push
sbb
repnz
push
push
cld
cmc
scas
lahf
pop
or
mov
push
sbb
xchg
sahf
leave
inc
jge
idivl
dec
in
jae
data16
int
movsb
adc
cltd
call
lds
mov
mov
sub
or
or
in
lret
xor
outsl
add
addl
mulb
shrl
pop
pusha
mov
aas
adc
jns
adc
mov
push
notb
out
jae
ja
jnp
or
jecxz
dec
int3
cmp
pusha
add
jno
aad
add
pop
fwait
lret
mov
jg
dec
mov
insl
aas
rorl
mov
jb
pop
and
mov
imul
cmp
cmp
xor
lds
jns
stc
rcrb
pop
pop
stos
xchg
push
push
imul
dec
stos
rcll
out
cwtl
inc
adc
cmpsl
cwtl
sahf
dec
inc
jnp
pop
or
nop
cmp
add
xor
cmp
push
push
mov
jle
and
inc
cld
addr16
mov
pop
fidivs
sub
cmp
mov
leave
sbb
mov
inc
outsl
testl
fs
testl
ljmp
adc
sub
adc
ret
in
inc
push
pushf
lret
notl
sub
daa
sti
dec
xor
push
call
outsl
or
push
fistps
add
inc
ja
jno
mov
or
orl
std
lahf
dec
add
mov
jge
mov
push
xchg
jbe
adc
mov
pop
mov
pop
ds
pop
push
rcl
int3
outsb
sbb
cld
stos
jp
lods
arpl
insl
pop
cld
xchg
mov
sti
and
adc
rclb
cmpsb
mov
pusha
mov
pop
add
mov
pop
adc
cmp
or
mov
dec
lock
mov
adc
xor
loopne
fsubs
or
insb
push
outsb
out
mov
add
jmp
adc
cwtl
xor
and
push
stos
in
push
call
sbbl
lahf
lcall
cmpb
sub
inc
pop
sbb
push
popl
loopne
hlt
jle
daa
sti
inc
xchg
sub
pushf
push
and
push
pop
sub
xor
xchg
mov
fmull
cmp
pop
rol
icebp
jge
jnp
addr16
bound
in
mov
leave
cs
setp
sbb
test
shll
das
and
andb
mov
xchg
out
mov
leave
mov
push
xchg
mov
push
iret
mov
sbb
sar
outsl
das
mov
aam
sarl
inc
sub
inc
push
cs
sbb
xchg
sbb
arpl
pop
mov
pop
inc
out
punpckhdq
cmp
test
xchg
ljmp
stos
sub
ds
mov
jge
jg
jl
jbe
sahf
int
xor
push
es
jg
and
lods
mov
sbb
mov
mov
testb
notb
daa
xlat
jmp
jg
idiv
enter
or
adc
sub
mov
xchg
lahf
pop
push
mov
and
stc
imul
dec
sbb
and
mov
cmp
xchg
pop
mov
in
cltd
xchg
cmp
int
push
sti
mov
pop
lret
mov
scas
lahf
and
data16
dec
mov
xchg
dec
and
sub
xor
out
push
mov
sti
sti
incb
adc
xchg
cmc
in
jmp
cmp
outsb
jnp
lods
lret
test
test
jne
jns
xor
jmp
dec
sti
xchg
push
sub
mov
pop
add
adc
ljmp
cmp
xchg
push
pop
add
pop
icebp
lcall
dec
push
sti
movsb
xor
aam
xchg
mov
fsubl
sti
popa
stos
sub
xorl
xchg
cmp
ljmp
cmp
add
add
jnp
dec
cmpsb
clc
sbb
or
mov
or
xchg
and
jge
push
mov
mov
out
cmp
leave
inc
mov
into
mov
in
fdivp
push
outsl
cmp
shll
clc
push
cmp
lods
repnz
cmpsl
clc
insb
pop
sarb
outsl
cmpsl
stc
jecxz
jge
out
negb
mov
fnsave
cmp
jbe
int
outsl
arpl
je
aaa
dec
enter
mov
repnz
cmpb
mov
jg
loopne
into
inc
mov
mov
icebp
push
pusha
jle
mov
pop
mov
rcrl
jmp
mov
shl
jbe
subb
inc
add
ss
imul
xchg
pop
sub
aaa
mov
cltd
xchg
hlt
clc
sub
stos
leave
xor
inc
sub
rcrl
cmp
xor
mov
dec
sub
inc
sub
sbb
mov
rclb
fsubl
or
mov
mov
jecxz
rcrb
adc
pop
mov
out
test
pop
ret
xchg
add
aam
pushf
fwait
and
xlat
rcrl
inc
iret
and
add
test
or
xor
and
inc
aad
mov
cmp
outsl
push
mov
sbb
and
xlat
cltd
inc
dec
jge
sub
pop
sbb
push
pusha
sub
in
aad
mov
jno
xchg
rclb
xor
push
xchg
mov
jnp
lahf
adc
mov
insb
int
push
sub
inc
inc
cmp
add
dec
xor
cmp
cmp
outsb
gs
or
cs
testl
in
cld
xchg
or
jb
pop
pop
lcall
xchg
or
das
insl
cmp
xchg
pop
jle
cli
mov
in
enter
loope
aas
sti
xchg
or
movl
pop
out
mov
inc
inc
stos
mov
pop
mov
ret
pusha
xlat
ds
cmp
or
stos
dec
mov
jp
cmp
push
popa
mov
mov
stc
jbe
xlat
xchg
adcb
arpl
dec
push
jmp
out
shlb
out
cmp
mov
or
dec
mov
adc
mov
or
pop
xchg
inc
loop
xor
sub
and
dec
loop
adc
mov
dec
cmpsl
repnz
sti
mov
int3
les
xor
ljmp
lret
popf
jmp
sti
lods
ret
jmp
sub
cmc
sahf
and
in
push
idivb
sub
lods
stos
dec
mov
das
inc
lret
aam
push
cld
mov
mov
test
stc
sub
lret
loop
ficoms
je
das
or
movsb
addb
mov
aaa
pop
or
ret
shlb
das
push
jmp
mov
push
scas
rcrb
add
and
lret
cwtl
movsb
sub
cmp
adc
movsb
scas
ljmp
add
lds
mov
and
and
orb
test
fwait
mov
decl
pop
adc
jmp
movsl
jae
dec
mov
ret
jno
sbb
ss
ljmp
pop
loope
imul
ja
loopne
pop
in
jge
stos
mov
push
ds
jbe
data16
pop
outsb
shll
mov
leave
lock
out
fisubrs
sbb
add
nop
add
shl
movsw
and
iret
cwtl
test
and
inc
rorb
adc
fdivs
cmp
je
push
shl
xor
lahf
dec
pop
stos
xor
mov
cmp
stos
hlt
mov
scas
sbb
int
xor
fcoms
push
push
loope
inc
xlat
jae
jmp
jne
fidivrl
pop
lods
jno
sub
mov
mov
add
jae
add
fwait
icebp
fisubrl
jno
fisubrs
mov
push
popf
or
aam
ret
daa
mov
or
lock
pop
fxch
lods
sbb
lods
jbe
in
add
out
mov
cmp
shlb
cld
mov
stos
jl
lcall
xorb
fmull
cld
and
test
xor
outsl
ret
insb
movsl
pop
inc
ret
xor
xchg
sbb
int3
adc
jae
mul
sub
orb
repz
jg
xor
mov
sarb
jno
scas
je
sbb
out
add
pop
fistpl
je
dec
xchg
aas
aam
cmpsl
jmp
add
jp
push
sarl
push
dec
aaa
xchg
add
das
mov
int
mov
dec
ja
jp
fisubrs
and
xor
jge
pop
adc
push
adc
es
ds
cmp
mov
es
inc
sub
xchg
mov
cmpsb
imul
xor
sbb
fadd
adc
imulb
out
and
movsl
mov
cmpl
adc
stos
int3
xor
pop
lret
dec
jg
xchg
icebp
arpl
jp
pop
lods
add
and
mov
add
mov
aad
aas
inc
loopne
xor
sub
in
adc
jb
sbb
pop
xorl
imulb
jno
andb
repnz
call
icebp
xchg
fs
lea
cltd
js
push
mov
and
mov
gs
add
mov
mov
test
jbe
imul
dec
and
in
pop
or
test
adc
mov
rolb
inc
push
fnstsw
lods
mov
jb
xchg
cltd
sti
clc
add
sub
popa
pushf
mov
mov
leave
or
mov
mov
sbb
rcr
test
cmpsl
jb
xlat
push
or
cmp
dec
mov
mov
lret
pop
xor
jp
mov
rcl
and
add
aad
cmp
pop
mov
stos
and
repz
xchg
sbb
cmp
in
inc
adc
adc
cltd
rcrl
jmp
cmc
loopne
rcll
push
jl
stc
or
pop
and
mov
dec
adc
scas
jb
xor
jl
daa
or
mov
ret
mov
call
xchg
sub
stc
aas
hlt
shll
jmp
rcrl
fimuls
sub
aad
cmp
leave
xlat
cmp
xchg
mov
loop
pop
push
adc
sti
ret
add
mov
test
dec
inc
sahf
dec
inc
enter
sub
and
in
push
or
rcrl
mov
lcall
jl,pn
cmp
xor
mov
rcrb
cmp
push
aas
pop
loop
jb
fidivl
mov
lcall
cmp
mov
nop
out
movsb
test
jnp
call
pop
es
xor
adc
add
je
cld
popa
pop
outsb
xor
bound
std
mov
loope
inc
jbe
arpl
jb
into
cmp
or
in
repz
arpl
sahf
mov
push
popf
movsb
add
or
mov
sti
ljmp
ror
pop
mov
enter
mov
fnstenv
cmp
add
in
xchg
xchg
xor
aaa
adc
aaa
fldl
outsb
jno
mov
pop
inc
bound
jns
or
pop
xchg
sub
sbb
pop
in
imul
mov
mov
jno
sbb
loopne
jl
cmp
dec
add
int3
push
in
and
shrl
movsb
int
jne
hlt
mov
mov
insl
push
mov
lods
inc
call
mov
xchg
in
sbb
ss
fwait
inc
gs
scas
jns
mov
inc
jne
sbb
iret
stos
outsl
clc
fdivrs
dec
sub
ret
adc
mov
bound
flds
cmpb
and
call
lret
fcompl
pop
push
shrl
sbb
fidivs
xchg
outsl
and
mov
cmc
pop
or
and
sub
rcll
mul
jns
data16
ficoms
outsb
loop
mov
jle
pop
pusha
test
je
inc
lds
call
jmp
lret
nop
test
sbb
and
sbb
popl
lods
inc
jle
mov
cld
mov
jge
or
call
xchg
or
dec
arpl
mov
imul
push
jnp
add
mov
out
and
jecxz
mov
sub
push
xchg
les
hlt
in
inc
sub
int
mov
cmp
xchg
inc
xor
addr16
pop
mov
push
subb
ja
fldt
ret
pusha
xchg
fdivr
mov
icebp
ja
jp
mov
movsb
js
je
mov
aas
stos
loope
xor
into
pop
dec
jge
mov
sub
or
mov
mov
mov
jl
inc
dec
clc
mov
xor
les
push
fwait
nop
add
jmp
mov
jg
cmc
mov
cmpb
pop
flds
int
ja
or
lret
movsb
jp
cmpsb
lods
loopne
xor
stos
xchg
fwait
sub
sub
mov
notl
fwait
add
cld
shll
cmp
jne
test
jecxz
int3
mov
dec
mov
add
cwtl
and
sbb
adc
sub
jne
mov
pushf
adc
mov
testl
icebp
mov
nop
aam
in
push
jmp
fcomi
pop
xchg
leave
pop
imul
and
pop
inc
addb
and
push
cmp
rcrb
xchg
fisubl
lods
popa
test
xchg
push
lds
xchg
sbb
out
xorb
incl
adc
xorl
call
xchg
fsubrp
push
push
subl
std
daa
sbb
ja
pushf
stos
ror
adc
jg
mov
ja
pushf
fcmovbe
daa
cmp
xor
jo
xorl
and
and
add
inc
xchg
loop
loope
push
mov
and
leave
push
lods
mov
cs
bound
jne
mov
out
cmp
push
inc
or
cmp
daa
popf
outsl
cld
jne
in
ja
sbb
adc
xor
arpl
cmpsl
dec
icebp
dec
rolb
shrb
imul
jecxz
xchg
insl
jmp
loope
sahf
shll
test
mov
push
stc
xor
or
push
fnstenv
or
cmp
sub
dec
sahf
dec
inc
mov
and
mov
pop
lahf
inc
inc
movsl
pop
xlat
lods
dec
out
aaa
movsl
sbb
sahf
push
vshufps
fildl
lods
es
push
inc
repnz
int
dec
sbb
flds
lea
mov
cmp
aaa
sub
into
loop
adc
mov
pop
fwait
sbb
cmp
mov
insl
mov
loop
jbe
pop
xor
sub
pop
xchg
lock
std
lds
dec
xchg
mulb
jno
add
out
inc
jne
mov
ja
push
stos
cmp
inc
scas
out
pop
sub
cltd
pop
or
sub
hlt
mov
cmpsl
lcall
xor
cwtl
leave
mov
scas
and
lret
inc
xor
aas
jbe
loope
dec
and
mov
dec
gs
data16
push
cs
inc
test
leave
lods
out
fld
jg
outsb
cs
mov
bound
mul
rcl
jae
js
and
push
ds
pop
add
xlat
pop
cli
shl
std
fs
out
sbb
cmc
mov
sarl
xor
dec
out
mov
aam
pop
bound
mov
adc
jmp
push
jo
sub
addr16
cltd
jno
orl
mov
lea
xor
or
incl
loopne
xchg
pop
mov
pop
add
repz
or
mov
negl
xlat
ret
and
xchg
pop
cltd
sub
cmc
cmp
inc
pop
ds
or
or
cmp
mov
inc
loop
inc
mov
pop
cmp
stc
mov
jecxz
xor
arpl
movsl
sub
dec
pop
dec
xor
adc
movsb
fidivl
es
loop
in
sbb
xor
rolb
fnstenv
jbe
xor
lret
data16
sbb
pop
fsts
pop
cltd
shlb
mov
outsb
jbe
fwait
lock
sbb
sbb
imul
jle
adc
movsl
push
lea
cmp
inc
push
and
mov
cwtl
xor
pop
xchg
xor
pop
add
adc
clc
int3
mov
insb
ret
push
loop
stc
out
mov
cmp
cwtl
mov
fistl
xchg
and
lds
pushl
mov
sbb
lcall
fcmovnbe
mov
sbb
push
cmp
inc
mov
fstpt
iret
cs
jp
or
dec
xchg
mov
sbb
cltd
out
sbb
test
mov
adc
add
mov
jnp
adc
repz
push
mov
lds
push
jb
xchg
add
shlb
bswap
dec
outsl
pushf
movsb
movsl
imul
pushf
iret
das
outsb
lret
sub
jns
push
or
push
lahf
call
add
test
fistpl
loop
jle
lcall
jb
stc
ja
or
cmc
mov
inc
rolb
movsl
sbb
pop
adc
adc
jmp
lcall
sub
sahf
xor
push
es
frndint
stc
fbld
push
insb
aam
pop
mov
incl
filds
repnz
xchg
f2xm1
in
jmp
iret
and
lods
loopne
push
pop
movsl
dec
inc
in
inc
jns
rcrb
stc
add
insb
pop
aas
stos
icebp
mov
add
mov
cwtl
inc
push
jae
mov
stos
cmp
int3
pop
cmp
mov
dec
fiadds
mov
jecxz
jg
movsb
adcb
add
sub
xchg
movsb
inc
fwait
mov
pushl
cmp
and
and
repz
add
jmp
add
mov
dec
mov
adc
adc
push
popa
mov
jge
jmp
inc
inc
jae
lods
add
ds
pop
jae
cmpl
popa
mov
les
lret
ret
mov
add
pop
jno
cmp
faddp
cmpsl
push
mov
fstps
test
cmp
or
mov
imull
jnp
std
sbb
cmp
out
adc
test
dec
jecxz
sub
add
mov
enter
push
sbbb
jnp
pop
xor
cltd
outsl
test
loope
fimuls
jp
clc
in
xorl
jecxz
fwait
iret
clc
rol
gs
adc
sub
ja
sub
in
shlb
sub
push
mov
pop
xor
push
mov
or
sti
dec
fists
push
and
out
dec
xchg
fisubs
add
jp
sbb
and
or
sbb
push
js
lret
cwtl
or
aad
jge
loopne
mov
lahf
add
xorb
add
fsubrp
xor
shl
push
cmpb
jmp
xor
push
dec
fisttps
lock
inc
xchg
pop
arpl
jo
aad
add
or
push
aam
icebp
add
or
xor
cltd
andb
push
aas
cmp
out
and
seto
pop
into
dec
mull
inc
dec
loop
out
test
bound
ret
jb
sbb
xchg
push
or
cmpsb
rolb
pop
stc
pop
pushf
aaa
xor
inc
push
mov
cmp
jp
rcr
xchg
test
mov
aaa
inc
jbe
push
inc
ljmp
repz
sbb
sbb
jno
jne
mov
clc
pop
or
gs
mov
adc
add
pop
in
adc
inc
dec
mov
or
push
fdivl
es
cld
fs
or
and
mov
sbb
sub
push
andb
or
pop
mov
jns
pop
push
pop
popf
stc
dec
xchg
nop
xor
mov
iret
or
xchg
loope
xchg
movl
cld
sbb
dec
imul
adc
xchg
hlt
cmc
scas
in
mov
leave
cs
or
insb
out
imull
pop
pop
test
in
insl
inc
sahf
mov
xor
cmpsb
jno
test
xchg
xchg
addr16
pop
push
xor
mov
mov
out
push
lods
xchg
sbb
lods
add
lods
jmp
xchg
jne
fldl
push
xchg
and
ljmp
and
arpl
jecxz
and
je
cmpsl
aam
xchg
daa
xchg
gs
clc
jge
push
fildl
inc
jno
mov
dec
push
cmpsb
jb
push
mov
fsubr
and
or
testl
cmc
mov
mov
fbstp
xchg
shll
mov
hlt
imul
call
fisubs
repnz
or
dec
nop
and
add
inc
jbe
cmp
ds
ficompl
mov
and
iret
insb
call
xor
icebp
cmp
fnstsw
cmpsb
adc
dec
imul
sahf
sar
leave
and
js
das
divl
and
xchg
lock
pop
pop
popa
subb
xlat
stc
test
mov
mov
outsl
cmp
lret
mov
cmp
jnp
inc
outsb
ror
mul
call
aas
in
lahf
dec
cmp
lret
mov
jns
addr16
lock
loope
dec
sub
and
sti
out
repz
mov
xchg
daa
je
sbb
dec
adc
adc
cltd
jb
fdivrs
pop
pop
mov
out
aad
or
dec
scas
test
ds
repz
mov
xor
jno
rclb
test
xchg
clc
test
add
dec
ficompl
mov
jg
xor
jns
xor
sbb
sbb
sbb
aaa
in
sub
shrb
repnz
nop
dec
int3
aaa
stc
je
xchg
inc
rcrl
inc
shl
inc
mov
jl
fs
je
xchg
jp
jecxz
pop
pusha
rcrl
mov
ss
je
daa
dec
arpl
add
arpl
xor
lret
lock
xor
sub
sub
and
or
cmc
push
push
sub
aas
std
int
and
in
cmpsl
test
jg
loopne
popf
aaa
sbb
mov
add
lods
push
fsubrp
movl
sbb
inc
cmp
and
scas
jg
sarl
jecxz
or
mov
add
test
fstp
daa
mov
and
repnz
inc
pushf
data16
icebp
add
pop
xchg
scas
out
push
icebp
jo
mov
mov
subl
outsl
adc
sti
push
mov
lret
fnstenv
lock
adc
shll
xchg
ret
push
lcall
push
lahf
inc
add
das
xor
icebp
push
in
dec
jb
addr16
mov
cli
adc
and
push
fcomi
inc
shll
stos
pop
shl
imul
shrb
pop
add
clc
mov
scas
push
lds
mov
mov
xchg
adc
dec
shlb
fcomp
sub
or
sub
lds
adc
icebp
jne
mov
outsb
inc
lahf
out
orb
cs
jae
cld
iret
mov
sub
push
movsl
jle
mov
data16
arpl
out
push
popa
add
xor
mov
cmc
jo
aad
sbb
cmp
mov
xor
cwtl
adc
mov
mov
sub
or
ds
push
push
push
aad
jb
adcl
cltd
pop
sbb
mov
iret
pop
popf
bswap
mov
test
dec
pop
cmp
outsl
pusha
add
adc
sbb
mov
mov
cs
setb
sti
decl
xchg
push
insb
inc
xlat
je
and
jmp
inc
call
test
adc
jns
bound
mov
stos
mov
cmpsl
test
inc
fadds
or
pop
push
push
xor
xor
fdivrl
cmp
std
cmpsl
in
sbb
jp
sahf
pusha
push
fs
mov
dec
cmp
lcall
dec
mov
mov
and
lods
mov
mov
adc
sahf
jae
sbb
or
add
and
dec
cmpsb
xchg
sub
mov
dec
add
test
imul
jno
fcmovne
push
inc
mov
or
pop
call
cmc
push
fcoms
add
lods
xor
das
mov
mov
and
or
aam
loop
jg
fistps
mov
adcl
jecxz
dec
add
movsb
popa
mov
push
sub
or
cmc
mov
out
cmpsl
iret
cmp
mov
movb
xchg
cmc
adc
mov
ds
mov
xor
insb
xchg
test
mov
ja
add
cs
xchg
ss
shl
mov
push
stos
dec
sub
pop
je
fwait
jp
cld
dec
adc
add
testl
dec
push
testb
dec
lret
js
pop
aaa
mov
jb
fcoms
xchg
dec
push
sub
jae
lcall
inc
mov
loopne
loopne
aaa
inc
add
stos
jb
sar
pop
int
dec
fbstp
aas
jge
push
cs
pop
sbb
mov
inc
cwtl
inc
mov
rolb
lods
hlt
adc
add
cltd
shl
lahf
imul
xchg
fcmovbe
xchg
add
xor
bound
mov
out
daa
sbb
rorb
sub
iret
xchg
imul
adc
fadds
icebp
xchg
fsubl
inc
cmpl
jl
fs
int
mov
adc
in
mov
lods
add
pusha
mov
gs
movl
pop
inc
mov
lcall
cld
fildll
inc
mov
or
inc
and
jl
testb
insb
loope
movsb
push
lret
dec
inc
sub
imul
insb
stos
lret
aad
and
inc
sbb
idivb
pushf
and
cmpsl
xchg
jne
andl
cmp
inc
mov
repz
mov
test
stos
lret
ja
jne
jbe
test
mov
mov
idiv
int
cmpsl
add
ret
jge
mov
jmp
faddl
jnp
fildl
fadd
sarl
in
out
movl
mov
leave
cld
sbb
ljmp
icebp
dec
mov
stc
arpl
fs
aas
pop
jne
add
cmp
fcompp
xchg
and
mov
pop
loop,pn
cs
or
imulb
push
je
xchg
jmp
int3
inc
jp
fsts
xorb
lret
in
imul
movsb
sub
cmp
sub
scas
inc
outsb
adc
xlat
aaa
outsl
mov
popf
sbb
push
out
xchg
pop
add
cmp
xchg
and
test
test
pop
dec
mov
jns
shlb
lods
hlt
jno
pop
mov
leave
sub
iret
mov
stos
jle
loope
into
dec
sbb
sub
lcall
test
imul
repz
ja
add
das
mov
mov
push
insl
cmpsb
outsl
sahf
sub
xor
dec
push
xor
add
jecxz
pop
mov
ret
mov
mov
push
lret
sub
rcll
scas
js
xchg
and
jle
ret
inc
sbb
nop
pop
lcall
mov
push
ror
ja
out
inc
pop
and
sbbl
adc
add
and
xchg
es
mov
sbb
sbb
mov
sbb
je
inc
int
cmp
xlat
movsl
cltd
sbb
jl
mov
jmp
mov
shll
sub
dec
adc
vaddss
add
dec
in
les
insb
rcl
sbb
mov
setno
pop
inc
neg
movsl
xchg
sub
test
dec
adc
aas
ljmp
adcb
adc
int
add
loopne
sbb
leave
idivl
shlb
fcoms
cli
and
mov
mov
adc
mov
movsl
add
pop
lock
insb
lretw
and
jne
xorb
xchg
or
pop
push
loope
sbb
ja
push
xchg
pop
dec
mov
clc
cs
or
js
fbld
mov
in
or
jnp
cmp
jle
ds
stc
sub
adc
add
xor
adc
mov
pop
jnp
fisubrs
mov
add
adc
jne
ds
sbb
inc
push
sbb
cmp
lret
scas
testl
cmp
sub
imul
aad
or
xchg
out
sti
pop
hlt
mov
or
jbe
rorb
movsl
hlt
arpl
add
pop
add
arpl
inc
in
sti
dec
xorb
push
imul
mov
xchg
jmp
or
xchg
pop
sub
int3
lcall
or
fsubrl
repz
pop
rcrb
ret
mov
push
pusha
fsubrs
aad
push
repz
stc
mov
and
mov
subl
pop
sub
push
cmp
add
or
lahf
imul
stos
imul
ror
pop
mov
leave
and
and
mov
icebp
jg
jle
add
sbb
jns
mov
movsl
cmpsw
stos
fwait
jle
int
mov
out
int3
loop
out
hlt
icebp
cld
sub
pop
test
mov
subl
jl
ret
mov
inc
sahf
inc
push
fistpl
mov
movsl
jg
jmp
xchg
pop
jl
in
sbb
scas
insb
mov
negb
mov
push
cmc
pusha
jl
mov
mov
andb
test
push
mov
lahf
lret
inc
popf
stc
outsb
pop
dec
test
push
jbe
xchg
xchg
xor
stos
movq
outsb
popa
mov
add
mov
adc
mov
enter
jmp
pop
negl
sbb
xlat
insb
xchg
loope
into
dec
out
push
lret
scas
call
pop
nop
jno
mov
dec
fwait
xchg
jbe
sbb
inc
das
scas
insl
aas
jecxz
stc
sub
pop
pop
sbb
jmp
or
ds
xchg
xor
sub
adc
xorb
shrl
mov
dec
int3
out
lcall
jl
sub
push
sarl
push
cmpsb
mov
dec
rorl
mov
das
js
cmpsl
dec
testb
fs
ss
sub
push
sbb
ljmp
cld
push
xor
js
ficoml
adc
inc
sahf
aad
lcall
stos
loopne
lahf
xchg
pop
int3
jno
outsb
xor
add
int
out
push
ljmp
das
clc
clc
pushf
lret
pop
xchg
inc
iret
fwait
dec
xor
in
lea
notb
flds
mov
int3
mov
mov
adc
les
dec
paddsw
mov
or
ret
sti
xor
jmp
pop
mov
mov
push
repnz
lds
rcr
sub
bound
sub
push
push
dec
mov
ljmp
xchg
arpl
mov
mov
xchg
cwtl
rcll
mov
call
and
lods
imul
mov
neg
cmp
xchg
add
pop
js
popf
lods
inc
mov
or
sub
insb
add
xchg
dec
and
or
subl
sub
out
mov
inc
int
dec
test
int3
cmpb
xchg
mov
ja
aam
push
data16
cld
loop
adc
adc
cmc
repnz
jecxz
push
out
xchg
mov
or
loopne
and
fidivrs
insl
xor
push
dec
sbb
add
push
inc
pop
and
enter
mov
jg
dec
jl
aam
das
and
mov
inc
push
cmp
push
push
repnz
cmp
mov
inc
rol
sti
sbb
xor
insl
lret
pop
pop
roll
outsb
incl
scas
mov
in
lea
je
xchg
and
push
dec
test
dec
ss
das
mov
cmp
mov
xadd
jmp
xchg
push
outsb
dec
pop
fs
add
jbe
rcrl
xchg
xchg
sbb
mov
or
xchg
negl
cwtl
mov
pop
mov
inc
or
xchg
inc
push
lea
lcall
addr16
inc
pop
push
movl
repnz
push
or
sbb
adc
push
jno
xor
fldenv
jbe
cmc
pop
mov
imul
push
lods
mov
dec
scas
dec
xchg
or
cmc
loope
cmp
pop
jno
movsl
mov
add
rcr
rol
cmpsb
jg
cltd
js
cmpsl
or
pop
scas
mov
out
ds
aas
xchg
xor
movsl
pop
test
jmp
mov
push
in
xchg
mov
popl
mov
or
mov
push
and
push
mov
sub
jmp
sahf
pop
daa
add
mov
sub
xchg
mov
or
mov
pop
or
adc
lahf
pop
jns
adcb
and
mov
in
mov
mov
sbb
fistpl
js
popf
cmp
sub
inc
adc
cmp
out
dec
cmp
icebp
test
pop
ss
in
popa
lahf
out
jno
loopne
lret
stos
es
cmpsl
add
fsubl
aad
xor
mov
jns
jne
push
jbe
push
arpl
fdivs
sub
mov
jb
pop
add
xor
and
add
dec
aad
aam
lods
dec
dec
nop
mov
mov
xor
das
int
mov
jb
arpl
cmp
sub
lcall
loopne,pn
cmp
jno
adc
call
lods
push
dec
mov
cmp
pushf
sbb
or
mov
jbe
sub
cmc
push
in
stc
movsb
hlt
xor
mov
mov
inc
cmp
jecxz
xchg
xchg
dec
dec
mov
mov
mov
lret
in
sarb
or
and
cmp
mov
mov
sub
dec
fimuls
insb
rorl
push
mov
add
lea
cmp
cmp
xchg
stc
in
lock
xor
cmp
imul
cmpsl
ss
and
sbb
orl
into
fldl
ss
mov
test
push
pop
pop
jle
inc
lock
out
imul
shll
clc
add
cmp
push
mov
dec
dec
jg
pop
adc
decl
fadd
mov
adc
enter
movsl
lcall
mov
insl
mov
ret
xor
cltd
scas
ds
fcoml
pop
roll
shll
dec
xchg
lahf
aas
loope
test
pop
add
pushl
sbb
daa
mov
cmp
or
nop
xchg
dec
les
stos
fildll
jp
pop
push
cmc
mov
pop
out
sbb
push
xor
jne
pusha
xchg
popa
pushf
mov
ss
aam
neg
jg
pop
push
xlat
jge
adc
pop
add
negl
in
cmpsl
in
push
mov
adc
sbb
pop
pop
mov
lahf
push
cli
lods
mov
pop
in
xchg
mov
or
adc
and
insb
mov
cmpsb
add
push
cli
dec
pop
ss
xchg
addb
mov
xor
popa
rorl
push
adc
mov
xchg
out
cli
or
mov
mov
and
xor
fwait
imulb
hlt
mov
aas
scas
rol
lret
jmp
test
adc
insb
xlat
rcrb
repnz
push
sbb
adc
lret
daa
out
xorb
fwait
cmpsb
inc
pop
jae
push
ja
xchg
jge
push
xor
adc
jae
cmp
fdivr
cs
jae
fbld
fcoml
ss
dec
ret
jnp,pt
pop
mov
or
mov
adc
push
leave
lcall
js
insb
mov
setb
movsl
leave
in
xor
sar
jge
push
push
pop
mov
mov
pop
rcrb
call
sub
cmp
mov
jno
xchg
or
fcom
pop
pop
loope
jns
mov
mov
ds
insb
test
ds
mov
push
es
test
int3
pop
leave
es
xchg
dec
lods
xor
add
lods
fsubs
out
loope
mov
aas
repnz
jne
movsl
xor
orl
add
sub
mov
jne
std
lcall
das
sbb
mov
movsl
xor
mov
cmp
and
lea
stos
add
inc
out
ljmp
push
push
imul
out
xchg
scas
in
mov
ds
fnsave
scas
jo
xlat
pop
adc
mov
mov
mov
fdivrp
or
pop
outsl
push
jl
add
in
movsl
lret
inc
es
cs
insl
add
jle
outsb
mov
stc
push
add
and
xchg
push
mov
pop
sbb
stc
push
sbb
inc
jl
lock
mov
addr16
adc
popl
or
pop
push
sub
mov
mov
and
shll
movsl
out
adc
push
fmuls
mov
fcoms
or
sbb
lods
lods
xchg
xor
or
daa
out
sar
pop
jp
popf
sti
mov
mov
jmp
das
inc
mov
mov
mov
xlat
lahf
add
push
ljmp
js
call
movsb
sahf
pop
or
xchg
in
dec
stos
or
mov
fwait
rolb
addr16
in
xchg
push
loopne
or
dec
push
dec
xchg
std
into
jl
call
xor
or
jne
pop
out
jmp
push
pop
sbb
lret
adc
es
mov
sub
filds
push
push
cmpsl
push
add
int3
ret
push
ret
clc
mov
jecxz
aas
ret
shlb
mov
out
jl
add
jge
mov
ja
repnz
fildll
nop
loope
push
cmp
popa
aam
cmpsl
movsb
imul
fmull
cmp
inc
jp
and
or
mov
mov
adc
insl
xor
mov
ret
popa
or
lahf
jnp
mov
cmpsb
add
ret
lgs
pusha
int3
jl
fisubrl
aaa
push
cwtl
lret
jne
leave
cmp
lret
inc
cmp
mov
inc
add
leave
daa
sub
add
xchg
sbb
das
pushf
fstp
push
test
andb
imul
xor
sbb
stos
or
ds
ret
add
sub
lcall
dec
cld
sub
mov
and
pop
in
adc
cmp
rorl
push
and
lret
cltd
dec
out
clc
jno
or
and
cmp
mov
int3
mov
cltd
inc
jae
pop
je
addr16
sbb
cmp
popa
cld
xchg
push
icebp
jmp
pop
add
adc
int
or
mul
inc
inc
lock
sub
pop
ds
mov
mov
ds
mov
scas
int3
call
fstl
inc
and
aas
in
pushf
push
xor
pop
push
mov
sbb
std
loop
repnz
xor
push
leave
lea
imul
daa
mov
pusha
and
adc
ljmp
es
mov
push
or
cli
xchg
or
and
fwait
mov
mov
adc
push
sarb
ret
call
ljmp
fbld
arpl
insb
jno
orb
push
clc
scas
imul
mov
in
mov
xlat
xchg
mov
fdiv
adc
xchg
cs
and
movsb
sahf
mov
rcr
push
xchg
insl
out
or
xor
in
cli
mov
ret
inc
imul
inc
xlat
rcrb
xor
push
cmp
and
or
jae
ds
push
dec
nop
or
lods
divb
mov
and
dec
adc
adc
movsl
loope
lock
sub
add
cs
sbb
in
sub
add
jecxz
xchg
out
out
std
or
insb
repnz
sbb
and
outsl
divb
dec
and
jle
pusha
out
cmp
jge
pop
mov
dec
imul
dec
lods
pushl
xor
jge
mov
inc
lcall
in
fs
mulb
jae
fsubl
hlt
ret
jmp
ja
repnz
idivl
lds
test
dec
lcall
jle
dec
mov
mov
mov
push
inc
roll
addr16
adc
cmp
loop
in
cmpl
stos
add
in
nop
ljmp
shrb
nop
fwait
aaa
popf
lea
or
xor
cmp
shrb
mov
dec
sub
and
daa
stc
push
inc
add
xlat
scas
sub
ret
adc
adc
je
add
dec
clc
cmp
sbb
push
or
mov
xchg
int3
inc
in
es
insl
jb
ds
cmc
repnz
addb
pop
cmc
rorb
fldl
adc
push
lcall
outsb
mov
push
mov
xchg
jo
aaa
nop
sbb
jle
cld
gs
aam
mov
mov
ss
and
sbb
cmp
push
decb
fists
mov
test
sub
loop
icebp
xchg
mov
add
add
adc
xor
cs
push
sub
adc
insb
sbb
push
mov
je
mov
ja
cs
xor
add
or
pop
mov
int3
pop
mov
pop
jbe
pop
mov
xor
dec
dec
inc
mov
in
adc
jecxz
jg
mov
sbb
cwtl
and
xchg
jns
xchg
mov
ret
mov
bound
fimuls
jo
push
sbb
js
std
test
mov
popf
mov
mov
shrl
repnz
stos
fs
xchg
cmp
stc
cmc
and
mov
push
lahf
cmp
ficoml
shlb
loopne
outsl
sub
jb
ds
jns
and
fs
test
inc
mov
xchg
repz
jle
sbb
mov
sub
pop
xchg
movsl
je
ror
mov
jg
adc
das
cmp
adc
lret
out
inc
sti
cmpsl
pop
les
outsb
jne
sbbl
push
jmp
xchg
lret
and
rorb
pushf
mov
inc
roll
mov
xchg
mov
or
in
pop
es
out
mov
repz
and
jne
ss
lds
aaa
pop
sarb
inc
addr16
rol
pop
push
mov
fldl
mov
sub
xor
loopne
dec
ret
mov
adc
mov
sbb
xchg
fstpl
dec
cmp
pop
inc
std
leave
test
mov
jp
jb
int
movsl
into
push
sti
testb
dec
loope
mov
inc
or
gs
imulb
shl
and
xchg
cmpsl
jno
loope
sti
cmc
and
xchg
xor
cli
ficompl
rorb
cmc
xchg
mov
add
mov
xchg
xchg
lcall
mov
mov
ljmp
leave
popa
pop
ss
jbe
mov
or
test
sub
xchg
mov
bound
outsl
notb
xchg
test
and
mov
outsb
lods
xchg
in
cmovp
jno
ret
xchg
push
aaa
shr
mov
insl
sbb
popa
test
dec
inc
add
jge
daa
test
dec
sbb
or
or
sub
push
push
cmpb
enter
sub
and
adc
addr16
adc
push
scas
movsb
inc
push
adc
pop
pop
adc
xchg
xchg
clc
gs
dec
nop
loopne
jb
cmp
insl
divb
jbe
jae
jl
ds
pop
xor
imul
mov
jmp
test
mov
pop
into
and
add
pop
cmpsb
sub
arpl
es
adc
dec
inc
aas
into
enter
clc
dec
and
in
clc
das
outsl
jo
and
lahf
adc
data16
cmp
fsubl
xchg
ficompl
xlat
mov
fistps
loope
dec
fdivrs
mov
and
loop
shrl
cld
inc
enter
arpl
xchg
push
pop
loope
test
xchg
call
xor
addr16
mov
jbe
sti
cmc
mov
cmp
adc
jl
fsts
push
adc
mov
outsb
lods
pop
xor
lea
ds
mov
out
and
adc
fisubs
xchg
add
mov
jl
ljmp
cmp
insb
lods
xorl
inc
cmp
mov
jbe
mov
mov
stc
icebp
push
sub
jl
adc
loop
enter
sbb
lret
xchg
xor
rolb
xchg
pop
xchg
scas
mov
push
ss
out
mov
or
push
inc
icebp
js
je
gs
sbb
xchg
arpl
jge
addr16
stos
adc
lods
mov
shr
jae
jo
inc
cmpl
stos
sar
push
adc
sub
movsl
xor
mov
lds
add
es
fsts
movsb
push
cmp
mov
xchg
dec
pop
push
mov
jp
jbe
lock
xchg
test
push
jl
add
enter
push
xor
sbb
and
mov
aad
cmp
mov
push
fstp
jns
cmp
jp
lahf
xchg
mov
aad
dec
or
mov
mov
rolb
mov
pop
pushf
test
xor
sub
add
cmc
cld
scas
out
leave
xchg
push
xchg
outsl
cmp
ret
mov
shrb
cmpsb
pop
mov
xchg
shlb
pop
sarb
iret
and
mov
lock
lret
sbb
cmpsb
jg
and
jb
leave
out
xor
mov
in
dec
lret
fwait
xchg
adc
xor
inc
sbb
xchg
pop
mov
sbb
std
dec
out
imul
sub
ljmp
jp
adc
xchg
pushf
sbb
push
push
dec
subb
mov
pusha
rclb
outsb
xor
or
mov
push
or
faddl
js
adc
fisttps
pop
lock
and
push
icebp
popa
jo
push
dec
stc
rolb
popa
mov
fbld
fmull
int
dec
fmuls
inc
test
shl
ds
bound
sub
pop
jmp
mov
pushf
aaa
es
fsubl
inc
inc
inc
xchg
or
mov
sub
fs
cwtl
mov
mov
dec
ljmp
jb
out
bound
loop
mov
daa
jae
sarl
std
dec
or
mov
inc
into
icebp
xlat
cltd
mov
notb
out
cs
scas
push
cli
jnp
sbb
dec
fimull
inc
sbb
inc
icebp
push
testl
xor
pop
and
jle
fldl
sub
es
cmp
les
inc
aam
jmp
lea
lahf
arpl
icebp
loop
pop
jo
mov
shr
es
jmp
ret
mov
fistl
testb
cmp
clc
movsl
pusha
mov
or
and
outsb
jmp
testl
push
ret
mov
xchg
hlt
lret
shlb
lock
loopne
je
mov
xchg
xchg
in
inc
gs
bound
sub
jno
sahf
movsb
mov
je
hlt
jp
ljmp
mov
pop
ret
nop
xlat
xor
pop
pop
call
enter
int3
sub
inc
sbb
mov
fisubl
dec
aas
dec
insb
jae
fsubl
cmp
adc
xlat
mov
jae
int
pop
adc
sbb
nop
arpl
enter
add
enter
xchg
jno
push
jae
lcall
xchg
lods
mov
aad
jne
lret
jae
icebp
sbb
add
pop
std
cmp
mov
mov
sub
inc
xchg
jmp
int
out
add
pop
mov
shlb
dec
lret
in
mov
ds
out
mov
movsb
push
loop
dec
test
repz
repz
add
daa
mov
xor
ret
and
inc
and
shll
mov
add
popf
sbb
jne
loop
mov
jmp
icebp
mov
orb
mov
push
es
mov
xchg
loopne
lds
pop
insb
or
stc
dec
push
mov
cmp
imull
push
lods
cwtl
xchg
addr16
xor
repnz
jae
je
or
sub
sbb
das
or
out
orb
push
jl
ja
add
lahf
or
popa
cwtl
aad
arpl
adc
insl
dec
jbe
enter
dec
push
xor
and
fldl
xchg
jno
pop
in
mov
or
out
inc
fadds
jo
lods
dec
outsl
mov
inc
movsl
dec
inc
or
jecxz
sbb
dec
jbe
lahf
xchg
cmp
push
xchg
jg
mov
pushf
pop
mov
fsubs
push
out
inc
clc
in
out
adc
sub
subl
adc
das
mov
pop
imul
div
mov
std
inc
xchg
cmp
mov
push
ret
push
adc
mov
or
mov
ds
lock
fldt
incl
js
and
in
das
test
daa
or
bound
or
int
jecxz
dec
in
shll
jmp
pop
lock
add
adc
nop
std
mov
mov
lahf
xorb
test
pop
xor
es
mov
sti
movsb
sbb
adc
es
pop
repnz
shll
movsl
adc
push
scas
inc
xchg
loop
mov
hlt
cmp
je
sarl
xor
pop
in
sbb
rorb
dec
push
adc
es
ret
jo
subl
push
add
inc
xchg
push
leave
lret
ja
push
sub
push
divb
sub
cmp
adc
and
xchg
dec
or
push
test
popf
fdivrl
movsb
dec
lret
cmc
mov
ret
jns
dec
jl
out
xor
aad
mov
xchg
cmpsl
enter
pushf
stos
arpl
test
cmc
rcrb
int3
sbb
xchg
and
pop
xchg
add
sub
out
in
mov
es
cmp
and
lea
add
mov
pop
adc
les
insb
in
test
insl
sub
and
pop
fldcw
pop
sbbb
addl
repnz
mov
fs
and
adc
push
aad
fcomi
aad
out
mov
or
je
and
sti
cmp
pop
inc
mov
xor
dec
sbb
clc
mov
or
and
mov
hlt
xor
mov
push
rcrl
jge
xchg
xor
dec
inc
adcl
mov
das
adc
ss
or
or
or
cmp
iret
ljmp
loop
xchg
mov
inc
out
sti
lods
aam
sbbb
loopne
mov
or
add
scas
movsl
pop
scas
sahf
std
xor
inc
ficoms
xor
out
cltd
xchg
shlb
out
int3
xchg
aas
xor
fisttps
ljmp
mov
test
sub
sub
test
je
dec
mov
jecxz
sbb
scas
sub
push
lret
mov
sbb
mov
fldl
push
push
outsb
xor
sbb
in
or
push
rcll
ret
test
jp
pop
iret
dec
mov
cwtl
idiv
int3
xchg
push
dec
xchg
dec
cltd
mov
xchg
add
test
adc
imul
mov
sbb
fiaddl
inc
lea
dec
cli
aam
test
cwtl
or
leave
movsb
iret
jge
sbb
dec
int3
dec
or
arpl
xchg
mov
mov
pop
adc
into
leave
cmp
add
pop
mov
idiv
push
add
mov
dec
mov
xchg
push
push
int3
lret
mov
push
add
push
arpl
ret
adc
jmp
dec
pop
outsl
pop
scas
xchg
inc
dec
mov
ds
or
jns
stos
lret
mov
pop
pushfw
rolb
in
mov
scas
icebp
inc
jmp
fstl
ret
sub
pushf
sub
imul
cli
inc
std
into
rorl
and
push
pop
inc
jmp
dec
mov
aaa
jg
pop
dec
cmp
int
xchg
or
mov
mov
or
dec
cltd
and
jb
fistps
cli
add
mov
cwtl
ljmp
and
push
jns
adcb
fs
and
mov
sbb
pop
or
pop
push
mov
add
push
inc
sub
or
sub
imul
stos
push
mov
icebp
mov
int
dec
xor
lods
sti
xlat
lock
push
repnz
pusha
test
movsb
or
xchg
push
test
mov
push
add
pop
xchg
adc
daa
adc
cltd
or
scas
xchg
scas
dec
mov
cwtl
test
mov
xchg
or
jmp
data16
xchg
adc
and
add
sbb
scas
sahf
ficoml
aas
xchg
scas
shll
hlt
sbb
inc
add
ljmp
sub
jmp
lcall
arpl
fimuls
mov
icebp
pop
sub
fstpl
into
push
cli
mov
pushf
lods
jbe
stos
je
repz
cmp
js
fcomi
add
scas
xchg
insb
push
pop
push
xor
mov
ror
and
mov
mov
xchg
leave
mov
and
mov
fsts
pop
outsl
out
dec
addl
movb
es
push
jb
sub
xor
testl
push
pusha
iret
int3
mov
mov
cmp
add
faddl
mov
sub
out
sub
or
push
pop
mov
mov
test
push
iret
add
pop
int3
int
mov
ljmp
test
outsl
inc
jle
xor
in
mov
mov
sbb
fldl
ret
cmp
add
add
mov
in
insb
scas
call
shrl
in
or
testb
test
mov
adc
dec
xor
nop
mov
sub
xchg
add
lds
pop
ds
call
enter
lret
hlt
mov
mov
jo
sub
jle
push
pop
mov
adc
test
call
call
inc
add
pop
and
push
sub
xchg
lret
jae
mov
aad
cs
sbb
sahf
sbb
or
cmp
dec
xor
mov
dec
xchg
test
xchg
lret
lock
push
mov
arpl
adc
fadd
popa
rcl
mov
aas
cltd
and
xor
movb
sbb
sub
cmpsb
add
arpl
std
lret
mov
xchg
add
lcall
ret
data16
sbb
cmp
jo
rolb
mov
and
mov
das
dec
push
push
ret
or
mov
popa
xchg
push
mov
inc
mul
cld
sbb
test
add
into
xor
fiaddl
popa
mov
std
add
decb
bnd
dec
inc
mov
int
inc
test
mov
das
mov
mov
stos
mov
mov
int3
in
push
dec
sbb
mov
inc
add
ljmp
fdiv
inc
and
pop
sets
and
inc
inc
repz
mov
push
push
mov
xchg
aas
lea
pusha
fidivs
fimull
pop
cmc
pop
sti
aam
cwtl
jecxz
inc
cmp
nop
shll
call
fcomp
cwtl
push
scas
sub
rcl
lea
call
xor
mov
imul
cld
xor
mov
or
or
rcr
xchg
data16
popf
imul
add
into
pusha
and
and
jne
and
push
cltd
subl
outsb
shr
jmp
repz
insl
or
clc
in
jb
stos
imul
xchg
adc
add
and
outsb
decl
std
cmpsb
out
sbb
mov
xchg
sbbb
xor
mov
lea
aaa
pop
clc
dec
idivb
aaa
sbb
ja
jnp
gs
imul
scas
out
dec
sti
add
xchg
inc
leave
enter
inc
push
shl
aad
imul
cli
sbb
rcll
pushf
lods
inc
ret
fists
fs
dec
push
push
incl
jmp
ss
addr16
adc
daa
add
add
mov
sbb
mov
adc
sub
lret
xor
rcll
gs
xor
in
pop
enter
movsl
push
in
js
les
fcom
inc
imul
mov
loopne
jmp
jns
add
fldl
add
jp
push
mov
mov
movsl
xor
jge
nop
clc
pop
jp
sub
scas
inc
lea
std
imul
mov
xchg
por
and
rolb
ret
sub
push
adc
fldt
lret
into
lods
data16
add
out
lea
cmc
adc
fs
inc
sub
xor
lcall
mov
je
into
dec
ljmp
insb
xor
mov
popa
stc
add
adc
aad
mov
dec
repnz
mov
inc
cmp
or
outsb
fistl
pop
or
pop
std
adc
popa
fs
imull
and
test
mov
jns
stos
push
mov
cmpsl
in
push
ja
popa
inc
aad
jmp
and
aaa
mov
and
jne
subl
mov
jecxz
mov
shll
mov
xchg
je
leave
fdivs
ret
xchg
scas
and
je
cli
inc
xchg
xor
aam
xchg
sti
cmp
jbe
sbb
jl
cmp
add
insb
sbb
mov
mov
push
cltd
lock
mov
filds
popa
insl
add
push
add
and
xor
jg
inc
scas
adc
or
cmp
push
mov
jecxz
daa
insl
xor
xchg
inc
push
pop
push
and
and
mov
xchg
mov
xor
repnz
lea
arpl
rcrb
test
cmp
outsl
mov
in
mov
adc
rcll
sub
sub
das
adc
jle
push
jbe
mov
xor
and
les
or
adc
mov
mov
mov
jmp
pop
enter
xor
jae
cmpsb
mov
rcll
push
lods
mov
inc
jns
pop
jae
push
sub
sbb
cwtl
lcall
sub
xchg
sbb
scas
loopne
or
pop
lods
xor
mov
out
pop
push
xor
push
push
jmp
or
std
movsl
sbb
mov
mov
sti
cmp
insl
fucomp
lock
int
mov
jl
in
ds
icebp
call
fscale
cltd
and
jmp
inc
fwait
stos
scas
loope
xor
test
xchg
push
mov
in
xor
sub
sbb
movsb
loope
lea
sahf
push
in
les
stos
andb
sub
xlat
inc
lcall
pop
movsb
xchg
les
jno
ja
xor
out
push
cmpsb
sub
in
stc
call
insb
sub
ret
push
mov
push
mov
in
mov
xchg
gs
dec
fsubs
and
adc
push
xchg
hlt
stos
movsb
js
rclb
frstor
test
lahf
repnz
ds
adc
mov
xorb
xchg
push
icebp
out
adc
jne
mov
mov
adc
mov
loope
push
dec
sub
sbb
lods
jmp
sub
and
adc
inc
scas
and
dec
jne
xchg
into
daa
js
cli
outsl
cs
dec
in
cmp
inc
rolb
lock
lahf
in
jns
inc
out
dec
test
leave
mov
and
dec
enter
scas
popf
repz
mov
leave
mov
or
adc
xchg
stos
xchg
repnz
lcall
orl
xchg
test
fadd
notb
test
add
pop
incl
fisttps
lahf
push
pop
in
mov
dec
cld
add
into
cltd
inc
inc
iret
mov
hlt
int3
rorb
stos
repnz
repnz
sbb
lcall
sahf
mov
jl
xor
into
cmp
pushf
sub
jne
sbb
jg
push
cmp
and
neg
dec
cmpsb
mov
stos
fwait
xchg
out
inc
cmp
xor
cmc
hlt
loop
js
cld
aaa
fldt
mov
inc
mov
lret
pushf
ss
aam
jecxz
cmp
nop
or
test
mov
testb
es
outsb
test
js
xchg
adc
scas
popf
inc
push
or
insb
adc
jle
unpckhps
lret
scas
adc
enter
lret
int3
adc
jecxz
push
jg
fidivl
sbb
mov
popf
in
lcall
testb
and
xor
bound
in
stos
daa
sub
out
xor
xor
and
push
jmp
mov
aas
loopne
sarb
push
or
xchg
jno
add
in
rolb
cmp
or
repnz
lea
inc
pop
into
enter
ss
les
cmc
pop
das
inc
aam
cmpsl
mov
fstps
inc
jae
push
xchg
repz
int3
and
mov
mov
jle
jl
clc
ljmp
add
inc
jge
mov
cld
insl
adc
cmc
pop
sub
rcrl
and
lea
repz
out
mov
addr16
das
loop
clc
in
adc
addr16
scas
dec
push
fucomp
push
out
mov
add
mov
out
dec
dec
mov
push
imul
jb
mov
sbbl
push
popa
incb
out
mov
lock
lret
cmp
push
into
adc
sbb
xchg
and
fnsave
arpl
dec
cwtl
cmp
mov
sbb
lahf
repz
ret
and
push
fwait
loop
fsubl
inc
xchg
orb
out
cltd
pop
loop
aaa
test
jl
pushf
add
cmc
pop
or
jne
mov
pop
jmp
push
jbe
adc
cmpsb
pushf
push
jl
or
cmpsl
stc
int3
mov
stc
mov
pop
xlat
nop
idivb
into
andb
pop
lods
push
sahf
icebp
call
mov
sub
xchg
adc
enter
sbb
jno
shrb
jmp
inc
ljmp
push
mov
out
aaa
sbb
into
xchg
std
jno
xor
pop
jmp
add
cmpsl
xlat
xchg
cmp
shr
test
xchg
dec
pop
xchg
add
jae
rcrb
fwait
insb
cmp
fwait
xor
jbe
loope
notl
std
dec
icebp
xchg
shll
push
sbb
lds
xor
adc
cmp
inc
mov
cmp
sub
lcall
leave
push
stc
mov
push
and
jne
mov
push
adc
dec
and
xchg
aaa
cmp
push
adc
fildl
mov
add
push
insb
jae
das
adc
cltd
cmp
pop
aad
mov
push
and
push
call
stos
in
into
dec
cmp
mov
add
mov
les
dec
jnp
or
jle
test
push
enter
push
imul
pop
stos
das
add
ja
sub
or
stc
pop
scas
add
pop
xor
fcomp
xlat
lret
jecxz
adc
fptan
jle
into
mov
stos
add
jnp
xchg
fadds
xchg
pusha
sbb
dec
les
add
xor
push
in
mov
lods
dec
in
into
in
insb
mov
insl
jo
lock
enter
out
mov
dec
mov
adc
aad
sti
and
push
std
pop
mov
and
sbb
idivb
aam
cmp
ja
mov
adc
scas
mov
mov
loope
cmp
cmp
sbb
inc
mov
cs
testb
pop
jle
adc
cmp
mov
push
negb
mov
sub
icebp
fwait
nop
mov
lock
stos
xchg
mov
and
xchg
mov
movsb
mov
and
enter
icebp
and
js
mov
and
xlat
stc
pushf
divb
je
jno
inc
fidivrl
lcall
xchg
xchg
cmpsb
adc
or
push
push
out
inc
movsb
inc
popa
xchg
mov
cli
cmp
and
daa
std
dec
inc
cmc
fisubrs
aad
das
inc
bound
mov
dec
dec
mov
inc
movsb
xchg
int3
lds
in
xor
push
sub
insb
pop
xor
inc
leave
or
shlb
cmp
xchg
js
loopne
shl
fbld
mov
cld
and
sub
in
mov
xor
js
nop
mov
jp
fisubs
pop
mov
inc
sbb
lock
push
enter
jl
add
aaa
inc
or
mov
loope
adc
into
pop
stos
jmp
ja
mov
push
push
ret
imul
pop
ss
mov
stos
in
loopne
lret
pop
lods
in
shll
sbb
pop
arpl
insl
rolb
ds
stos
sub
mov
mov
arpl
jno
roll
pop
fcoms
or
jmp
cmpsl
adc
cmp
jbe
jg
xchg
std
iret
add
insb
ljmp
cwtl
mov
xchg
lcall
mov
cmp
scas
mov
and
mov
in
jp
push
mov
popf
lret
icebp
cltd
mul
enter
lods
orl
es
mov
xor
mov
aam
adc
test
lods
adc
sub
insl
jge
lahf
mov
sub
cmpl
pop
mov
ljmp
or
loopne
xor
arpl
cmc
shl
jge
pop
out
repz
xchg
movsb
cmp
xor
popa
pop
cmp
inc
push
lret
test
ret
push
add
adc
lock
inc
sahf
mov
sub
add
pop
xor
mov
hlt
out
dec
sar
pop
mov
xchg
mov
xor
int
adc
aam
cwtl
inc
xchg
mov
sbb
lds
inc
fstpl
mov
mov
repz
mov
and
in
sbb
sub
fcompl
mov
mov
rcrl
int
cmc
lret
xor
imul
cmp
aam
ljmp
inc
sbb
mull
pop
sbbb
aam
mov
or
andb
xchg
xchg
sub
ljmp
jne
iret
in
mov
cmp
and
xchg
pop
orb
and
lock
ret
ja
pop
orl
add
add
mov
movsb
ljmp
lods
js
and
cltd
stc
sub
cwtl
xchg
test
mov
xor
push
push
es
imul
imul
pop
xchg
xchg
push
mov
sbb
ret
pop
adc
add
or
pop
fs
stc
mov
into
xor
popa
xor
loopne
mov
sahf
and
adc
inc
shlw
and
lahf
imul
inc
sahf
jmp
push
jne
mov
pop
in
andl
js
lock
repnz
lahf
cmc
inc
mov
cmpsb
addr16
inc
out
cmpsl
mov
mov
dec
cmp
mov
call
daa
jp
mov
sub
dec
push
add
xchg
ds
sahf
loop
popf
mov
adc
std
push
mull
lods
mov
mov
test
int
pop
push
push
xlat
movswl
dec
xchg
push
cs
pop
xchg
push
jmp
das
jecxz
mov
mul
loope
popa
xchg
in
mov
dec
mov
or
sbb
xor
or
push
jo
stos
xchg
or
xchg
xchg
xor
add
jp
out
les
dec
dec
test
xlat
es
mov
mov
in
std
sahf
daa
js
bound
adc
jb
ss
sbb
rclb
enter
jno
sti
jl
pop
xchg
lcall
adcl
sub
adc
dec
enter
ds
movsb
in
xchg
inc
or
adc
popaw
mov
push
lret
jno
fsubrs
in
inc
cs
sub
mov
mov
dec
pop
mov
orb
add
lret
nop
aad
flds
jp
jmp
mov
jp
push
popa
jnp,pt
push
mov
fadd
mov
in
sarb
cs
daa
add
pop
cmp
sbb
dec
mov
mov
adc
ljmp
insl
mov
pushf
sub
stc
mov
js
push
push
out
mov
add
int
test
xchg
jno
pusha
mov
sarl
arpl
js
pop
jnp
shll
xchg
mov
loopne
into
outsb
adc
pop
xchg
dec
mov
roll
pop
and
and
xchg
in
test
lret
sti
sti
pop
cmp
ficomps
jecxz
mov
inc
jbe
repz
cmp
xlat
aam
outsl
add
lret
les
push
cmp
xchg
clc
inc
shr
hlt
cmpl
xor
subl
movsb
cwtl
daa
xchg
in
fstl
data16
icebp
out
adc
out
or
movsl
add
in
imulb
pop
adc
sti
xchg
sbb
inc
mov
mov
jne
call
cmp
test
jmp
mov
data16
cmpsl
jmp
cs
pop
push
ss
cmp
inc
mov
fbld
loop
mov
out
movb
dec
lds
aaa
cs
xchg
mov
mov
mov
push
dec
adc
push
ljmp
inc
test
sbb
cmp
mov
inc
pop
stos
cli
aad
adc
test
fcmovne
pushl
mov
movsb
xchg
add
cmp
mov
shlb
mov
add
nop
sbb
pmaxsw
leave
test
xor
cld
sbb
cmpsl
or
enter
push
fst
jl
dec
or
negb
das
shrb
icebp
adc
push
inc
mov
insb
and
adc
mov
sbb
movsb
xor
or
imul
inc
sub
add
mov
mov
movsl
sahf
mov
push
push
pop
cmp
movsb
sar
lea
pop
in
push
je
add
iret
loope
sahf
xor
pop
loope
pop
pop
push
loope
pop
in
lea
jle
mov
sub
movb
push
push
and
pop
mov
testb
cld
cmc
lret
lock
adc
cmp
in
add
mov
sbb
addr16
and
cmpsb
lock
dec
fsts
cli
lea
push
jge
leave
jne
ds
cwtl
xchg
xchg
mov
push
jp
or
idivl
sbb
pop
outsb
dec
push
sbb
aam
pop
jl
into
rclb
jl
jp
push
hlt
cmp
iret
stos
iret
pop
xor
push
cmpsb
push
mov
fsubrs
mov
add
push
xor
pop
mov
add
cmpsl
add
push
movsl
addl
cmp
out
jecxz
xchg
sub
ds
ss
and
and
adc
and
scas
das
pushf
je,pn
mov
jmp
sar
sub
cmpsl
dec
sub
rcrb
shlb
push
test
aad
stc
add
jnp
cli
int
dec
cld
dec
pop
call
adc
xorb
out
shrl
stos
inc
dec
push
lds
int3
call
cmp
lret
pop
fcmovb
xor
or
in
fs
stos
pusha
lock
mov
xchg
add
or
test
or
mov
pop
fdivl
push
loope
mov
es
cwtl
add
mov
and
sub
dec
fs
add
and
or
fwait
mov
ja
rcr
sbb
in
ja
cld
cmpl
ret
jne
dec
clc
inc
lea
or
xchg
cltd
pop
outsb
inc
fdivrs
and
rol
test
mov
push
ds
sbb
imulb
fisubs
out
out
cs
in
cmp
jne
mov
adc
or
xlat
aam
int3
or
out
movsb
mov
xor
xchg
nop
out
pop
or
ljmp
es
sarl
dec
lcall
xor
cld
xor
xor
movsl
cli
dec
test
fdivrl
mov
sbb
repnz
out
xor
out
mov
pusha
mov
push
test
lcall
ficomps
pop
iret
cmpsb
dec
cli
or
xlat
push
inc
xor
jb
jae
inc
mov
pop
cwtl
lock
std
shll
mov
add
mov
adc
rolb
cli
mov
rcrb
sbb
adc
dec
rcrb
xor
and
dec
addr16
jnp
aaa
jecxz
and
mov
arpl
ficoms
test
leave
jne
push
shll
test
mov
xor
int3
xor
push
inc
mov
mov
sub
and
insl
vmovaps
cwtl
out
stos
fisubl
lea
mov
add
xchg
lret
mov
cmp
lahf
xor
jns
repz
stos
out
arpl
cli
in
push
pop
push
cmp
addr16
js
scas
cld
out
pop
sub
mov
mov
lret
sbb
or
inc
pop
pop
cmc
ss
imul
mov
stos
daa
push
push
int
push
sbb
pop
inc
sub
xchg
cli
fwait
and
dec
or
push
std
movsb
mov
push
insb
xor
popf
xchg
test
outsl
pop
fstpt
call
setae
pop
push
add
inc
test
arpl
dec
cmc
pusha
in
inc
orl
in
fidivrs
gs
cmp
test
push
popf
lret
jg
and
push
faddl
sub
mov
and
fildl
mulb
ljmp
scas
mov
push
ljmp
aam
in
gs
decb
jo
insb
loop
xor
fnsave
mov
cld
jmp
or
sub
jno
fists
daa
jae
mov
push
cmpsb
rorl
jnp
popf
xlat
push
stos
dec
mov
inc
out
xlat
mov
jnp
mov
nop
xor
int
daa
call
fwait
push
pop
add
test
cmp
and
loop
or
stos
ret
sub
insb
push
pop
je
xor
xchg
or
push
aaa
rcrl
jl
add
or
je
shrb
test
sub
cmp
adc
aaa
xlat
ret
pop
int
add
jne
inc
xchg
lds
mov
cmpsl
sarb
mov
fwait
scas
int
sti
mov
pop
test
inc
cli
sbb
xchg
xchg
in
push
fdivs
cmp
inc
lds
dec
inc
adc
add
mov
js
faddl
fstpl
dec
push
or
mov
xor
popf
out
jl
cli
pop
fadds
icebp
roll
push
cld
mov
mov
add
in
jge
test
mov
mov
and
lock
imulb
fcmovnb
jle
mov
mov
jae
pop
imul
stos
cmp
pop
int
test
xor
std
enter
inc
sbb
push
inc
je
fwait
test
sub
lds
rcr
addl
into
sahf
push
xchg
loope
fxch
pop
mov
push
push
jo
lret
enter
adc
ror
lods
sarl
mov
lea
jl
jno
pop
clc
jmp
mov
insl
in
iret
dec
adc
adc
sbb
cmp
out
leave
iret
sub
cmpsl
xchg
sub
enter
push
das
dec
ds
push
je
xchg
mov
inc
jb
test
lret
std
xlat
push
in
insl
fs
mov
sbb
pusha
lcall
stos
mov
inc
subl
das
push
pusha
icebp
loope
test
mov
dec
add
outsb
mov
push
xor
dec
in
dec
stc
nop
in
adc
cltd
jb
mov
mov
mov
sbb
sbb
cmp
test
push
ss
inc
jne
into
adc
jns
pop
pop
in
jnp
push
fs
outsb
mov
ljmp
sbb
aaa
insb
xchg
dec
pop
cli
fists
test
xchg
push
js
dec
sub
cmp
push
mov
sbbl
jno
sub
add
fildll
jb
mov
inc
xchg
das
add
fs
daa
sarl
js
inc
call
andb
hlt
mov
cmp
and
mov
mov
mov
stc
stc
jmp
dec
scas
lods
xor
lds
in
push
popa
jmp
les
inc
xor
repz
xchg
or
xor
xor
orb
jbe
inc
or
cltd
sub
ret
out
fcoml
xor
lock
in
xchg
and
sbb
sbb
mov
lock
nop
loope
aaa
mov
sahf
jae
mov
repnz
test
cwtl
and
push
lea
mov
addr16
jecxz
xor
loope
popa
imul
fs
addr16
ret
clc
addr16
add
ret
scas
mov
faddl
femms
shrb
outsl
xchg
lcall
push
fists
inc
fisttps
inc
dec
lcall
aad
xchg
gs
adc
insb
inc
not
xchg
cmpsl
mov
push
xchg
adc
lock
sbb
jge
lds
loopne
fsubl
jne
popl
inc
mov
mov
aad
or
xor
fistpl
push
into
mov
xchg
xchg
cmp
xchg
adc
call
shrl
mov
lret
add
testb
adc
ds
pop
or
ss
divl
xchg
jns
push
pop
mov
das
dec
sub
stos
or
jl
pop
je
movsb
cmp
lret
adc
and
cmp
xor
lods
mov
sbb
mov
inc
pop
mov
adc
pop
in
enter
mov
aas
xor
loopne
popf
mov
shll
cmp
add
dec
push
and
xor
popa
sbb
adc
leave
aas
les
pop
jo
mov
mov
sub
adc
or
aam
sub
push
dec
callw
jno
and
stc
sub
xchg
push
xor
outsl
je
adc
xor
setne
adc
repz
xchg
mov
pusha
jno
push
mov
jbe
dec
adc
xchg
pop
pminub
sub
mov
mov
lcall
subb
out
cltd
sti
shll
sub
add
popa
in
jne
test
mov
sahf
pop
push
addr16
bound
lods
jns
adc
insb
sbb
cvttps2pi
mov
test
leave
push
dec
out
rorl
adc
andb
pop
pop
cmp
cmp
das
movsb
push
divl
pop
fdivrs
test
mov
add
mov
jl
push
stos
lods
and
nop
push
cmp
or
rolb
dec
movsb
jb
xlat
pop
into
jp
out
lea
xchg
and
push
ret
bound
aad
inc
mov
or
cmc
xor
pop
sahf
popw
mov
push
lods
arpl
insb
push
mov
mov
jmp
xlat
or
mov
adc
push
cmc
mov
cltd
inc
sbb
enter
outsb
cmpsb
out
dec
pop
sub
xchg
cmp
mov
int3
xor
lret
aaa
mov
push
cmp
das
cmp
or
jno
rcrl
insl
pop
ret
int
test
in
std
lock
xchg
cmc
inc
inc
mov
mov
mov
mov
sbbb
test
sub
imull
and
jle
and
jmp
add
decl
iret
inc
lods
sub
pop
leave
dec
shrl
and
push
or
push
aam
test
cld
stos
mov
sbb
mov
lods
mov
adc
int3
pop
jg
ficoml
sub
rcll
and
xorl
das
sub
data16
insb
xchg
out
shlb
sbb
dec
daa
test
clc
inc
out
add
sub
aaa
inc
loop
pop
stos
dec
mov
jecxz
popa
repz
mov
xchg
enter
test
lock
testl
dec
mov
cmp
loopne
cmp
daa
pushf
jb
ss
inc
mov
mov
jns
inc
pop
sbb
add
adc
dec
arpl
clc
adc
cmpsl
movsl
cmp
bound
icebp
lret
pop
aam
push
repz
jnp
lret
mov
push
jg
xchg
pop
sahf
jecxz
xchg
or
xor
lds
dec
sarb
adc
mov
xchg
and
xchg
cli
mov
lahf
pusha
sub
hlt
call
aas
hlt
push
mov
or
mov
test
mov
add
loop
pushf
pop
and
ljmp
jo
pop
push
jnp
clc
jbe
dec
xchg
aad
shl
shl
cmpl
xchg
jne
sbb
xor
and
add
les
fcom
movsl
fcompl
imul
bound
fwait
adc
cs
sbb
fadds
sti
add
jns
and
or
cmpsl
sahf
out
sbb
inc
insl
cmp
bnd
sbb
or
cmp
pop
roll
gs
lock
lds
push
or
or
test
mov
xchg
push
xor
pop
or
aas
mov
cltd
dec
dec
xlat
xor
push
fcompl
mov
jns
sbb
dec
mov
fsubrs
add
fldenv
push
mov
loopne
ret
push
nop
add
insb
mov
pop
fdivrs
mov
lret
push
xchg
add
mov
fnstenv
pop
mov
xchg
adc
daa
imul
xchg
mov
lahf
pop
pop
movsl
popa
push
fstpt
insl
add
pop
push
mov
mov
inc
mov
xchg
mov
pop
push
jecxz
push
dec
movsb
pop
fwait
movsl
push
enter
adc
or
sub
xchg
sbb
or
data16
cwtl
add
cs
sbb
jmp
clc
sahf
movsl
mov
dec
addr16
subb
lds
pop
lret
xchg
and
in
mov
iret
in
test
sbb
insb
arpl
movsl
xor
sub
scas
gs
repnz
xchg
into
fwait
lahf
cmp
out
sbb
fsubrs
shrb
test
test
inc
cmpb
addr16
and
call
out
xor
in
xchg
mov
xchg
xor
dec
sub
or
add
aad
sbb
rcll
out
data16
pop
cli
pop
scas
clc
xlat
pop
decb
nop
mov
xlat
rorb
out
dec
xchg
insl
sbb
cmp
xorl
or
dec
ret
aad
sbb
jmp
addr16
pop
test
xor
mov
cmp
repz
and
xchg
icebp
insl
or
imul
cwtl
test
std
jae
enter
add
movsl
shl
ds
pop
cmc
and
in
mov
iret
sbb
and
xchg
enter
out
mov
orb
pop
cmc
divb
or
push
repz
jecxz
inc
mov
popf
in
in
mov
jl
aam
and
test
lods
add
lret
jg
lock
mov
scas
dec
enter
and
filds
test
cmp
lea
out
test
fnstcw
popf
decl
je
push
popf
push
in
cmpsb
int3
pop
adc
mov
cmp
push
lcall
mov
popf
pop
stos
push
sbb
das
xor
xlat
into
adc
mov
scas
xchg
push
jo
adc
fxch
jecxz
popa
aad
scas
dec
push
xor
jecxz
test
cmpsb
aam
pop
mov
jmp
xor
mov
xor
int3
lods
orb
out
sbb
sbb
es
add
mov
les
push
jl
sbb
shll
jge
loopne
xchg
push
cwtl
les
addr16
cmp
mov
inc
push
outsb
and
movsb
popa
insl
stc
push
je
leave
mov
cli
adc
mov
push
jecxz
fistl
mov
stos
daa
pop
mov
fs
and
cmp
xor
daa
and
pusha
cld
and
mov
jnp
scas
cmp
mov
arpl
leave
and
sbb
dec
addr16
or
and
movb
xchg
mov
jo
subb
sbb
inc
mov
push
ret
jbe
ffreep
jns
leave
cmc
push
movsl
or
cmp
daa
inc
xor
jge
mov
sahf
mov
cli
mov
mov
orl
lds
xchg
add
scas
cmp
scas
fldcw
push
inc
mov
push
cmpsb
cmp
lods
xor
sbb
dec
add
or
or
jle
sbb
sarl
sub
jno
dec
mov
insl
mov
cltd
jp
jecxz
sbb
mov
mov
int3
push
jp
sub
jnp
lret
add
mov
push
push
fnstenv
push
int3
out
cmpb
and
sub
cmp
push
movsl
or
popa
jmp
mov
cmpsb
dec
ds
lock
inc
dec
data16
aad
fsubrl
das
cmp
or
mov
push
scas
and
lock
imul
xor
inc
adc
or
sub
jo
mov
in
mov
bound
mov
lret
icebp
adc
lods
adc
cmpsl
add
dec
and
push
fiadds
jle
adc
rcrl
sbb
popf
push
subl
jo
xchg
enter
andl
scas
adc
sub
dec
icebp
cmpsb
pop
mov
push
mov
pop
gs
xor
scas
lcall
aaa
call
pop
int3
adc
adc
jnp
add
mov
js
lret
add
xor
bound
inc
and
sub
jle
push
and
dec
enter
test
sahf
int3
aad
fbstp
repz
dec
pop
iret
xchg
xchg
cld
mov
outsl
cmc
push
mov
inc
jnp
add
popf
adc
stc
sahf
jbe
inc
or
push
lods
fucomp
bound
test
nop
or
cli
pop
and
fcompl
push
cmp
dec
jne
xor
mov
insb
in
xchg
bound
xchg
jecxz
mov
addl
fwait
and
push
outsl
push
jo
rclb
out
lea
mov
xor
pop
cmpsl
scas
push
ret
outsl
lds
fisttps
repz
fiaddl
dec
jnp
lods
mov
loope
jmp
jbe
mov
adc
mov
sub
push
mov
jle
fucomp
addl
mov
push
repnz
xor
pop
dec
ret
jmp
cmp
pushf
movsl
movsb
adc
adc
outsl
or
mov
sahf
popa
xchg
in
ret
pushf
call
ja
nop
xchg
aad
and
repz
ja
fadd
cmp
lret
mov
mov
fsubl
xor
push
test
cmp
inc
test
cmpsl
inc
push
cmp
adcb
pushf
add
dec
mov
fisttpl
popa
or
mov
aad
lods
dec
call
das
ss
repnz
mov
stos
aam
mov
lret
push
xor
xchg
mov
int
mov
mov
cmp
mov
popa
call
adc
add
nop
cmp
push
xor
test
loopne
xchg
aam
jbe
sbb
pop
ret
out
imul
test
mov
push
pop
jo
cmp
mov
push
push
lahf
ss
xor
loope
orb
aam
and
push
rep
cwtl
xchg
add
sbb
cltd
and
outsb
add
lods
test
push
pop
lock
shrb
xchg
adc
fldt
insb
stos
cmp
sub
jno
and
xchg
xchg
mov
xor
mov
insb
inc
es
xor
cltd
stos
loopne
cmp
faddp
jae
sub
es
sbb
stos
cmpsl
fiaddl
icebp
repz
mov
mov
jno
or
int3
mov
pop
je
jb
ss
sub
outsb
xor
mov
sub
fisttpll
xchg
out
aad
mov
cmpb
js
in
mov
lds
inc
aaa
push
and
sub
and
push
sti
test
cmp
lcall
mov
jb
in
inc
xor
mov
ret
test
jp
cmp
fs
inc
flds
push
add
xor
cmp
test
test
or
mov
push
pushf
rcrb
daa
pop
repz
out
fcompl
push
testb
mov
adc
sbbl
lret
repz
pop
dec
aam
loop
adc
dec
or
jl
and
cmc
sbb
mov
fisttpll
cmp
test
pop
lods
nop
cmp
leave
fs
and
pop
popa
rol
adc
insb
mov
outsb
xchg
adc
push
bound
push
inc
imulb
cwtl
mov
mov
push
mov
in
inc
ret
negb
pushf
mov
sub
fildll
pushf
fisubs
ret
mov
in
sub
incl
or
jns
mov
scas
xor
ret
xchg
jmp
pop
fbstp
sahf
jo
loop
push
loope
imulb
out
frstor
popf
cld
pop
les
rolb
adc
sbb
push
xor
dec
subb
jp
pop
add
outsl
fwait
jns
dec
fldcw
addr16
insb
mov
xor
mov
mov
mov
imul
gs
in
test
shrb
mov
insb
jmp
mov
shll
and
sbb
rol
jecxz
out
fldt
ds
add
dec
adc
les
dec
test
push
jae
stc
add
sub
dec
aam
lds
xchg
push
mov
into
and
lea
ret
mov
lock
and
aam
lods
pusha
notl
loop
clc
adc
lods
jp
popf
push
and
jno
fimuls
outsl
xchg
mov
pop
shrl
and
sub
or
xor
jno
jecxz
push
cmp
xchg
cwtl
pop
inc
push
repnz
push
mov
sarb
mov
mov
jp
bound
enter
movb
iret
xor
cmpps
add
stos
jae
mov
inc
push
cmp
xor
mov
xlat
cmp
rcl
mov
mov
fsub
cld
jg
das
xchg
push
outsl
lahf
and
test
imul
call
sbb
test
stos
fistl
mov
gs
nop
insl
xchg
je
addr16
cmp
mov
mov
mov
sarb
jno
push
mov
sub
clc
add
xor
push
js
in
fidivs
dec
test
fiadds
fdiv
cmpsl
add
into
or
movsb
and
xor
test
inc
or
push
aam
inc
sbb
pop
negb
cld
faddl
mov
insl
lods
sub
std
dec
push
sbbl
call
add
std
test
inc
daa
jmp
mov
xchg
jnp
hlt
out
add
jmp
cmpl
out
pushf
enter
data16
movsb
xor
lcall
shl
mov
cwtl
mov
inc
cmc
mov
jnp
mov
dec
jmp
fcmovb
ljmp
std
sbb
je
mov
jbe
mov
xchg
adc
sti
bound
jns
jnp
mov
mov
pop
imul
addr16
dec
jp
fisubrs
movsl
hlt
nop
fcoms
stos
cmp
push
mov
and
lods
mov
jb
and
mov
xor
mov
mov
jmp
mov
lods
or
inc
bound
sbb
inc
sbb
cmp
loope
mov
jmp
out
sub
aad
test
adc
xchg
popf
das
mov
ss
andb
push
push
jg
mov
jle
dec
shll
push
cmp
daa
rclb
pop
gs
mov
inc
shrb
inc
or
mov
std
jmp
and
outsl
xorb
sti
cli
xor
inc
outsb
mov
aaa
es
or
jns
xchg
ror
cld
xor
mov
das
jbe
test
push
fildll
xorl
inc
mov
add
mov
inc
scas
fs
xchg
sbb
and
es
pop
lret
aad
cmp
dec
mov
xor
stos
shlb
sub
fists
jno
mov
out
and
shlb
push
jns
jo
test
pusha
xor
inc
nop
add
rolb
outsl
jle
add
mov
push
jae
popa
negb
test
fwait
movsb
mov
dec
or
sbb
push
movsl
mov
shr
jns
je
adc
loopne
jle
lock
iret
lea
loopne
push
or
pop
dec
xchg
aam
push
push
test
icebp
jp
sbb
nop
bound
dec
fcomps
into
pusha
mov
adc
xchg
fcomps
pop
and
pop
fistpl
sar
icebp
aam
add
jnp
push
ds
push
cmp
cmp
and
dec
ror
rol
or
gs
test
cmp
cli
jns
rcrl
cmp
or
pop
mov
out
mov
mov
lcall
jmp
ja
adc
data16
sub
mov
cmp
xchg
fwait
xchg
scas
jbe
bnd
fdivl
loope
inc
inc
clc
lods
decb
iret
sub
jbe
dec
pop
mov
cmp
insb
and
int
xchg
add
pop
loopne
push
clc
push
lea
push
ljmp
pop
lods
in
cmpsb
xchg
imul
mov
cmpl
xchg
mov
push
arpl
xchg
jo
gs
scas
add
sub
mov
sbb
hlt
sub
cld
and
add
cmp
in
insb
sarl
mov
mov
sub
in
stos
lcall
xchg
int3
jge
repnz
jnp
ret
sub
jae
dec
in
or
lock
aas
mov
cltd
jp
mov
mov
lds
test
add
mov
xchg
sub
or
cwtl
ja
pop
dec
imul
cld
mov
outsb
sub
fstpl
cmp
jge
dec
clc
inc
sbb
mov
add
mov
nop
jmp
jne
add
mov
add
xchg
call
testb
and
xor
movsl
pop
cld
add
mov
or
out
lret
cltd
repnz
mov
repnz
ret
mov
inc
jne
inc
addr16
in
repnz
and
xchg
aam
mov
cltd
and
jbe
repz
insl
test
jnp
daa
push
pusha
pcmpgtd
and
fbstp
and
mov
jbe
push
jbe
ret
xchg
inc
push
adc
cmc
jp
imul
testl
js
out
mov
test
dec
jmp
outsb
in
popa
std
out
sbb
rclb
sti
mov
orb
clc
enter
dec
push
ds
xlat
int3
jmp
push
inc
enter
mov
mov
pop
test
inc
outsl
jns
pop
xor
dec
mov
push
adc
sbb
mov
cmp
and
fwait
lock
in
in
xchg
fcomip
mov
mov
pop
test
in
jae
mov
loopne
mov
shrl
lock
repz
pusha
pusha
arpl
mov
cwtl
push
into
notl
add
xorb
ret
cli
add
out
push
lret
and
int3
in
pop
ss
outsl
loop
movzbl
pop
mov
arpl
aad
mov
stc
add
repnz
xor
pop
or
rcl
jb
push
xchg
outsb
add
int3
mov
fadds
iret
inc
cli
lods
xchg
cmpsb
jo
pop
adc
out
lcall
mov
jns
add
outsl
sbb
out
setae
test
jle
add
pop
jo
xchg
cmpsb
fisubl
mov
shlb
rcll
call
ffreep
loopne
les
out
sub
xchg
or
pop
cmp
outsl
push
inc
int
inc
pop
testb
and
sub
pop
add
icebp
inc
aad
popa
push
inc
pop
fsubrl
dec
lock
inc
jne
cmpsb
negb
mov
mov
negl
mov
sbb
cmp
push
rcl
fiadds
lret
inc
push
jmp
dec
cmp
and
add
shlb
lret
pop
cmp
adc
sbb
jns
mov
jmp
mov
dec
pop
mov
int
aas
mov
xor
mov
xchg
shll
push
mov
and
cmp
and
je
dec
loope
in
and
jb
jns
in
out
sub
dec
mov
lahf
data16
jp
sahf
sbb
sbb
or
mov
test
fs
rol
popa
cltd
pop
outsl
sbb
int
jecxz
lahf
ret
dec
or
mov
mov
aad
pushf
mov
cmp
xchg
in
mov
loop
roll
jecxz
test
je
dec
popa
mov
inc
jp
xor
mov
aas
sarl
fidivl
dec
call
push
dec
andb
mov
pop
sub
xor
push
push
roll
pop
push
jle
jp
js
xchg
lret
push
push
andb
repz
int
inc
shr
andl
out
jle
lods
cwtl
pop
test
ficomps
add
in
inc
sti
add
mov
das
lcall
push
or
push
xchg
ja
adc
subl
hlt
sub
dec
popf
push
imul
andl
mov
std
fiadds
stos
outsl
fisttpll
push
call
sub
aaa
icebp
test
testl
mov
in
push
inc
push
jne
add
hlt
mov
ss
aaa
into
fstpl
int
stos
nop
add
arpl
mov
lahf
jmp
jp
sti
test
sub
add
mov
xor
out
fidivrs
ret
ss
cmp
fwait
or
sarb
ffree
icebp
incl
in
adc
or
test
outsl
or
cwtl
bound
xor
push
jo
clc
jmp
xchg
xchg
dec
mov
cld
add
adc
dec
add
ljmp
int
call
ja
cmc
sbb
adc
test
pop
dec
cmpsl
jno
das
movsb
or
xchg
cmp
faddl
rol
jge
fstl
sarl
bsr
loopne
mov
push
pop
mov
std
inc
push
dec
imul
and
adc
inc
daa
mov
clc
jge
mov
jae
shlb
lea
pop
outsl
adc
dec
in
jb
adc
int
xchg
add
adc
and
jg
sti
jge
outsl
dec
adc
test
mov
add
sub
xor
mov
out
and
sub
add
inc
jb
add
test
movsl
nop
movsb
sub
jo
or
pop
sbb
cltd
inc
testb
mov
push
mov
outsb
nop
dec
ja
out
dec
and
and
jno
dec
repz
dec
out
stc
pop
jae
pop
rorl
xor
popf
movsb
hlt
xchg
cltd
or
rolb
pop
sub
mov
and
mov
int
mov
mov
sub
jae
icebp
pusha
mov
jecxz
push
push
sub
popf
add
lahf
sbb
jg
out
and
movsl
xchg
pop
xor
sub
stos
das
in
jns
daa
je
repz
xchg
nop
sbb
cmp
int3
jne
cmp
inc
lods
mov
xor
sub
and
scas
fists
jo
enter
jecxz
sbb
stos
cmpsb
mov
insb
xlat
jmp
cmp
fistpl
outsl
movsl
xor
mov
les
mov
add
dec
stos
int3
xor
xchg
jbe
jl
push
inc
sub
adc
and
out
and
scas
jbe
sbb
lea
adc
xorb
flds
and
inc
jae
popf
inc
mov
sahf
xchg
call
mov
xorb
cli
jl
lods
in
cmp
int
faddl
and
cmp
rclb
test
push
inc
or
cmp
dec
mov
sub
nop
fisttps
mov
fisubl
xor
jb
cmp
mov
and
jecxz
adc
adc
and
std
popa
fdiv
xchg
aaa
mov
mov
scas
xchg
or
call
rcrl
sbb
inc
and
mov
mov
arpl
mov
push
roll
sbb
pop
xchg
adc
pop
js
push
int
std
adc
or
adc
cmp
ret
pop
inc
in
shlb
push
aad
stc
ss
and
inc
das
push
ljmp
nop
enter
fnstenv
pusha
sub
add
aas
enter
mov
xchg
and
and
cltd
inc
ja
ret
repz
dec
scas
rol
mov
std
push
mov
lock
ret
mov
aad
add
imul
nop
ret
imul
jl
xor
filds
mov
inc
call
sub
add
dec
mov
test
xlat
push
fldcw
ret
adc
dec
cmp
inc
push
aam
loope
mov
testb
jnp
rcrl
jne
mov
jmp
adc
movsl
test
dec
lcall
xlat
ss
cli
sti
mov
xchg
dec
xlat
fstpl
pushf
jb
inc
out
add
xor
inc
cmp
adc
stos
int
add
sbb
jle
sbb
or
push
in
sbb
out
xchg
cmp
out
fadd
adc
ficomps
sbb
xor
je
and
sub
add
aam
push
lret
sub
cmp
or
sub
pop
jmp
fcoms
ret
cmp
loopne
mov
cwtl
dec
mov
jmp
sub
adc
pop
sub
mov
dec
cmpsb
and
pop
push
sarl
test
dec
add
mov
push
sbb
mov
gs
in
lods
clc
push
cmp
add
and
xor
out
movsb
mov
inc
fwait
mov
enter
sti
cmp
push
fidivl
push
pop
pop
sbb
aad
cltd
leave
inc
push
fiaddl
stos
aaa
shlb
xor
scas
push
jl
ljmp
sbb
divb
mov
arpl
mov
mov
dec
mov
les
or
add
jp
bound
cmc
cmpsb
and
and
pop
mov
xor
dec
dec
subb
add
push
pop
fwait
add
iret
mov
nop
mov
or
sti
dec
or
mov
add
sbb
imul
mov
jns
mov
xchg
push
insl
jp
aad
push
pop
inc
xor
dec
pop
inc
jecxz
xlat
mov
or
push
sbb
arpl
jp
mov
add
rclb
add
lret
and
lea
cs
in
adc
add
jno
repnz
sbb
lret
das
pop
lret
out
cwtl
cmp
popa
adcb
mov
int
or
adc
shrb
scas
test
fld
repnz
ja
push
push
test
pop
stc
imull
mov
jmp
add
inc
mov
mov
cmp
jne
adc
sbb
jnp
mov
cli
shlb
push
xor
daa
cld
inc
xchg
rcr
jne
mov
mov
sub
xchg
ljmp
pop
into
adc
add
pop
xchg
movsb
fbstp
jl
adcl
or
inc
std
dec
jae
pop
popa
ds
fdivl
mov
test
les
shll
orb
mov
cltd
in
repz
cmp
movsb
jno
orb
loop
mov
pop
repz
popf
dec
pop
cmpsb
xlat
mov
lods
push
adc
aad
loopne
pop
dec
or
outsl
xor
and
mov
out
in
fdivrl
shrl
add
xor
loope
clc
loope
jle
ret
sub
sti
lret
xchg
scas
test
rcrl
decl
mov
pop
sub
and
scas
js
inc
lea
sub
sbb
jne
in
leave
imul
sar
mov
adc
pop
outsl
mov
or
imul
jbe
int
adc
push
xchg
sub
shll
scas
cmp
mov
es
lret
mov
loope
sub
idivb
jl
insl
jbe
mov
jg
push
pop
rcl
call
mov
cmp
testl
xor
add
and
push
in
jne
push
inc
mov
xor
push
ficoml
scas
dec
jb
or
or
divl
mov
mov
icebp
insb
out
adc
dec
in
lahf
leave
jbe
push
dec
push
mov
imul
mov
or
lds
js
push
test
sti
mov
pop
aam
xchg
loop
dec
sub
call
das
mov
mov
inc
lret
lods
enter
jae
imul
mov
imul
ds
mov
mov
xor
xorl
sub
xchg
inc
das
rcr
out
mov
inc
je
lcall
push
sbb
rorl
inc
rcl
icebp
cmp
test
mov
repnz
lret
and
cmpsb
flds
popf
jo
cli
stos
test
ret
jmp
xchg
dec
out
ds
inc
dec
and
shll
stos
xorb
lods
mov
divb
outsl
test
adcl
addr16
ret
in
mov
and
repnz
pop
xchg
push
lods
popf
orb
out
mull
push
push
or
loopne
sub
test
jl
push
mov
mov
jbe
stos
incb
mov
or
div
inc
lds
sub
aad
cmpsl
cmc
call
lds
mov
sub
fs
outsb
mov
test
adc
jl
int
insl
rcl
leave
enter
enter
aad
ret
movsb
or
jae
and
fdivs
jmp
int
jp
repz
push
mov
xchg
xchg
test
mov
rol
push
cli
imul
cmp
xorb
or
lret
idiv
sbb
sub
xor
cmp
push
push
lea
xor
add
addr16
or
mov
sub
pusha
pop
push
fstl
popa
lods
cmpsb
into
fs
mov
pop
adc
xor
xchg
int
ficomps
data16
lahf
push
daa
cmpsb
loop
mov
jecxz
inc
push
leave
inc
fimull
fcmovnu
scas
scas
dec
sub
xlat
imul
cmpsl
ljmp
mov
dec
aas
push
mov
cli
xorl
sub
cmpsb
dec
pop
mov
sbb
loope
into
xor
imul
inc
mov
cld
xchg
add
jl
je
mov
pop
dec
cmp
jecxz
cmp
sbb
jmp
fwait
and
jecxz
add
out
adc
xlat
das
in
push
in
inc
movsb
cmpsl
jl
sbb
mov
and
mov
jns
popa
pop
xchg
rorb
dec
loopne
push
ds
icebp
mov
push
inc
popa
jne,pt
and
adc
push
cmp
scas
call
insb
xor
cmp
mov
cmp
or
xchg
adc
popa
xchg
and
pop
ds
pop
mov
xor
sahf
fdiv
shll
ret
mov
out
ficompl
rorb
push
mov
pop
cmpsb
repz
hlt
imul
xchg
je
pop
sub
in
xchg
int
repnz
pusha
cmp
lea
int
sbb
cltd
xor
add
imul
cmpsb
daa
jge
xor
jnp
sub
nop
lods
jne
and
push
push
fldenv
jmp
add
xchg
rorl
jle
lods
pop
leave
mov
and
push
lock
and
adc
imul
mov
mov
push
mov
pop
mov
mov
ds
pop
mov
imul
arpl
mov
inc
jb
fs
cmp
sbb
jmp
or
mov
push
mov
mov
dec
xchg
popa
or
xor
ja
aad
repz
icebp
popa
imul
cli
push
popf
xor
std
dec
aad
mov
sub
test
ss
mov
push
mov
addr16
out
or
inc
and
out
inc
jecxz
xchg
scas
dec
insb
ljmp
fdiv
dec
sub
pop
in
mov
or
dec
stos
xchg
xor
imul
jae
inc
mov
les
jne
sbbl
push
mov
jo
ficomps
and
sub
push
gs
or
pop
mov
jp
cmc
pusha
sbb
lds
mov
push
cmp
enter
fcompl
arpl
mov
push
test
push
add
and
pop
mov
call
mov
pop
push
repnz
dec
movl
scas
adc
scas
das
or
imull
sub
mov
inc
cmp
fadds
daa
arpl
or
or
mov
shr
add
stos
pop
cwtl
mov
adc
testb
repnz
imul
inc
test
sti
inc
inc
shll
or
ss
pop
lret
pop
sub
outsb
subl
inc
lock
scas
adc
fsubrl
xor
cmp
ljmp
push
sub
xchg
subb
dec
scas
xorb
bound
or
jp
sti
out
in
mov
push
mov
sub
mov
bts
sbb
movsb
jns
xchg
leave
sbb
lods
dec
xor
lods
push
dec
hlt
jmp
movsb
dec
imul
sub
das
sbb
das
loopne
pop
sbb
and
inc
loop
mov
inc
imull
cmpsb
jno
sub
xor
inc
cltd
jecxz
and
sub
pop
mov
lods
xchg
pop
mov
hlt
repnz
sub
mov
mov
xchg
shrb
sub
add
mov
out
and
out
lret
mov
insl
clc
jns
cmp
add
fildl
js
jno
std
imul
es
lcall
fst
pop
sub
adc
cltd
mov
fildll
sbb
shrl
lock
daa
jecxz
mov
lods
call
mov
fistps
pop
mov
aad
pop
lret
cli
mov
cli
jle
sahf
xor
mov
fmull
cmpsl
clc
jg
scas
outsb
imul
ja
movsb
repz
dec
sbb
cltd
shl
lock
push
cmc
mov
or
or
das
loop
adc
or
mov
xchg
xchg
and
mov
or
pop
dec
cmpsb
stos
data16
xor
test
adc
outsb
cmp
cmp
out
lret
cli
inc
cmpsl
test
push
mov
cmpsl
pop
ret
cmp
scas
pop
fildl
push
inc
ret
jbe
jnp
mov
pop
xchg
inc
cmp
rolb
sub
mov
mov
out
and
pop
adc
pop
pop
jp
sub
sub
mov
adc
into
jg
lock
pop
pop
and
imul
imulb
ljmp
mov
or
mov
ret
mov
xlat
push
mov
push
subl
push
or
xor
inc
sub
push
ds
pop
decl
test
cmp
pusha
lret
adc
hlt
out
add
not
mov
sahf
xor
rolb
pop
jg
mov
pop
pop
cmpsb
fs
fiadds
jp
push
jo
lods
sarb
push
mov
or
adc
sub
push
add
test
lea
dec
push
lahf
dec
cmpl
xchg
icebp
frstor
cmp
dec
cli
push
and
out
movsb
into
dec
addr16
jno
daa
in
sub
lock
icebp
adc
and
es
or
or
mov
sub
out
adc
cltd
xchg
cmp
xor
js
lock
sbb
pop
mov
call
mov
es
stc
inc
pusha
clc
arpl
lea
pop
xchg
mov
or
std
lahf
leave
and
inc
push
jno
xchg
outsb
movsl
jnp
mov
or
dec
push
mov
nop
fmull
scas
jne
ja
loope
fs
or
clc
mov
ss
std
insb
push
fs
jmp
mov
repnz
or
and
outsb
enter
in
dec
pop
and
lods
jo
mov
jb
dec
sbb
aas
push
out
add
pushl
ja
lcall
jge
and
add
in
cmp
lods
mov
in
pusha
sti
test
mov
stos
pop
cld
rorb
push
sbb
sub
sub
push
shll
push
popl
mov
push
aaa
sahf
mov
xor
pop
or
cmp
and
or
adc
sbb
add
js
icebp
jmp
adc
sub
push
xchg
decl
nop
and
ss
pusha
push
jo
ljmp
adc
loop
outsl
mov
push
in
and
fiadds
mov
test
mov
sub
imul
bound
mov
daa
int3
sub
sbb
push
jecxz
dec
add
std
lods
aam
ds
xchg
mov
ret
imul
xor
orb
mov
sti
sahf
mov
mov
stos
cld
out
jae
add
cmp
sbb
fsubp
pushf
jne
pop
cmpb
dec
mov
mov
fwait
mov
repz
test
pop
mov
add
or
in
jp
fldz
sti
call
lods
aam
mov
sbbb
jne
mov
cmp
add
jne
cmp
xchg
ror
popf
mov
arpl
sub
sti
out
fldt
js
jle
push
ret
lret
mov
pusha
jnp
int
std
jp
scas
add
and
inc
gs
fisttpll
and
lcall
sbb
and
stc
mov
pop
mov
fisttps
and
aam
stos
mov
andb
icebp
and
push
jbe
shrb
inc
daa
rcrb
and
mov
cwtl
repz
pop
fldcw
adc
or
movsl
hlt
cmpsb
cmc
stos
xor
arpl
dec
cli
sub
testb
insl
dec
xor
loope
mov
jp
jg
cli
jb
xchg
lods
aad
inc
test
addr16
push
cmp
and
push
mov
nop
jb
xor
cmp
mov
pop
subb
inc
xchg
mov
das
xchg
les
xchg
and
aas
and
or
mov
shrb
ret
pushf
das
nop
pop
sub
mov
pop
cmp
cmpsl
jne
jb
test
movsl
out
inc
mov
lds
imul
out
shlb
out
jg
fsts
add
loop
mov
pop
adc
mov
adc
or
inc
pushf
cmp
mov
dec
sbbb
cmc
push
and
fldenv
dec
int3
dec
repz
mov
stos
inc
movsl
test
xor
aam
lock
sub
fwait
and
pop
jnp
jns
push
mov
and
lret
lret
mov
xchg
lcall
mov
jne
inc
lock
mov
popf
xchg
jmp
xchg
pop
and
sub
data16
push
js
fisubrl
xor
fistpll
xor
fs
int3
xchg
jno
out
int3
movsb
inc
mov
xchg
and
jo
xor
aas
imul
je
inc
jno
test
or
mov
repnz
movsl
test
push
sbb
imul
stc
sub
dec
sbb
fcomps
mov
sbb
inc
jno
dec
add
dec
in
es
aad
xchg
std
subl
int3
dec
stos
mov
pop
scas
cwtl
jne
dec
mov
push
inc
inc
dec
insb
fldl
gs
mov
inc
push
jle
sbb
mov
cmp
es
aaa
scas
ret
push
arpl
xchg
mov
bnd
and
adc
add
int3
or
mov
dec
mov
mov
je
adc
fistpl
lahf
sub
add
scas
popf
mov
iret
movsb
repnz
lods
sub
inc
push
ficoml
mov
sti
adc
sub
divb
pop
jno,pn
out
jbe
in
scas
mov
imulb
jns
push
pop
dec
add
icebp
mov
sub
mov
jl
es
add
dec
loope
insb
test
push
clc
xchg
dec
cmc
add
jge
or
iret
mov
mov
lret
mov
outsl
xor
cmp
leave
sub
addr16
inc
add
mov
jnp
js
rclb
fwait
jmp
inc
loopne
testb
fs
dec
mov
sub
push
mov
movsl
in
out
fcmovnbe
mov
frstor
pop
jmp
pop
jp
mov
push
jae
add
add
addl
mov
repz
repnz
push
cmp
enter
sub
int3
shlb
inc
inc
push
mov
sub
or
int3
jnp
mov
fs
iret
hlt
add
insl
arpl
sbb
pop
repnz
repz
lret
sbb
inc
decl
adc
aaa
xor
inc
xor
adc
orl
sahf
les
xlat
insl
inc
dec
add
add
sub
lcall
loopne
insb
dec
mov
negl
add
imul
lahf
pop
mov
repz
aad
mov
add
adc
mov
stc
into
pop
bound
jl
cmp
bound
xor
sbb
add
sub
sbb
push
loop
test
or
divb
imulb
daa
ss
xor
loop
add
push
push
adc
cltd
jg
jl
pop
lahf
dec
and
and
dec
call
test
xchg
stc
and
or
pop
xchg
sbb
loopne
into
cmpsb
push
or
push
cmp
icebp
mov
cmc
movsl
aas
lahf
jl
jp
nop
mov
shlb
cmp
inc
imul
sub
les
mov
xor
mov
ja
loope
inc
sarl
test
mov
jg
cli
inc
addr16
in
xlat
push
pop
and
mov
sub
and
push
movsl
cmpsl
or
ret
mov
push
sub
adc
iret
xlat
mov
movsb
dec
add
sbb
mov
cwtl
jnp
popf
mov
je
mov
sbb
adc
inc
push
popf
movsb
clc
stc
fdivrs
pop
enter
aaa
xchg
arpl
jg
jno
sub
cmp
sub
jecxz
xchg
xchg
outsl
mov
lahf
and
shl
outsb
push
sti
andl
iret
mov
stos
pop
mov
adc
and
sbb
xor
push
xlat
adc
inc
mov
and
mov
scas
daa
inc
psllq
push
shll
jecxz
push
popa
jbe
jecxz
pop
push
push
movsb
xchg
sub
cmc
imul
jp
mov
jne
add
jmp
inc
mov
xor
jmp
stc
cld
int3
aaa
and
sarl
mov
push
ds
nop
inc
mov
insb
inc
xlat
sahf
mov
loopne
arpl
xor
push
xor
pop
ret
cmpsl
push
xchg
jp
push
fadds
push
sbb
adc
sub
add
aad
xchg
adc
fsubs
pop
ret
gs
push
cmovge
sub
sahf
mov
fdivs
dec
icebp
or
pop
fcompl
insl
hlt
lret
jmp
push
pushf
push
jl
xor
in
int
out
cmp
sbbl
addb
sbb
or
jns
xor
mov
sar
aaa
lret
or
and
hlt
cmpsb
dec
sti
adc
fildll
ss
sbb
outsl
jae
add
out
mov
mov
in
aaa
pusha
dec
mov
pop
call
pop
clc
nop
adc
push
xchg
push
mov
mov
test
fisubrs
ficoms
negb
lock
add
mov
push
jo
insl
fdivl
ljmp
scas
dec
xchg
gs
test
in
or
stc
mov
std
mov
fidivrl
fwait
xchg
push
adc
sbb
pop
sbb
sbb
sub
mov
jmp
in
push
sbbl
adc
pushf
jo
jae
add
xchg
xor
adc
mov
fdivrs
jae,pn
pop
and
dec
shr
xchg
fnstsw
cmp
lods
iret
sti
adc
aad
sbb
cli
outsb
sti
xchg
xor
test
fdivrs
adc
aaa
lret
mov
xor
mov
pop
sbb
outsb
mov
jle
lods
leave
jo
dec
sub
inc
popa
or
adc
jbe
in
cltd
xchg
cmp
dec
popf
cmp
cmp
add
xor
dec
enter
sub
sub
shl
int
push
mov
pop
sub
mov
adc
sbb
in
push
adc
orb
orl
fdivrs
mov
icebp
lret
call
xor
dec
bound
loopne
jmp
scas
clc
xchg
test
jo
sti
jne
lods
push
out
sti
cwtl
je
hlt
cmp
mov
add
fcoms
xor
mov
or
lret
xchg
lods
push
sub
pop
enter
xchg
inc
nop
into
sbb
mov
push
push
mov
fisttpl
adc
add
sub
sub
cltd
popa
loopne
ret
xor
enter
add
cmpl
xchg
mov
cmp
cmpl
inc
xchg
add
fistps
lahf
pushf
jecxz
mov
cmp
out
or
adc
sbb
faddp
daa
cmp
mov
movl
push
sub
test
loope
fucomi
bound
test
xchg
mov
mov
add
cltd
arpl
pop
mov
xor
lock
mov
xchg
neg
icebp
push
popl
ficompl
cld
inc
mov
pop
pop
test
adc
shlb
lahf
rcr
sbb
cltd
outsb
out
sub
dec
push
sbb
jbe
daa
jb
jl
ljmp
ja
adc
inc
orl
mov
mov
or
ljmp
sbb
jo
or
or
in
or
push
mov
mov
xchg
and
jg
push
es
leave
sub
jle
push
inc
mov
xchg
cwtl
add
dec
pop
sub
cmp
in
lea
pusha
cmpsl
push
sbb
jns
sahf
push
mul
inc
lds
das
popf
jns
subb
out
je
pop
sbb
cmpl
sub
aaa
sahf
in
out
push
cmc
pop
out
or
or
dec
insb
or
inc
add
sbb
mov
stos
stos
add
pop
pop
mov
mov
sub
lret
pop
adc
idivb
ret
xchg
xchg
inc
lret
cwtl
sahf
outsl
jb
lahf
stos
sbb
cmp
xchg
mov
or
mov
or
imul
ss
notb
cmc
sbb
add
pop
sub
jmp
jp
es
addr16
sub
push
mov
cmpsb
scas
xchg
add
fcom
cmpsl
xor
andb
xchg
fmull
lods
push
dec
mov
jle
mov
mov
pop
fdivr
mov
add
sub
movsl
insb
inc
test
push
pop
xor
fs
pop
fcmovu
aas
out
or
xchg
cmc
and
inc
mov
movsb
add
xor
repz
mov
fmul
push
inc
push
inc
popf
pop
popf
imul
in
push
inc
and
loope
and
je
cmc
enter
dec
je
adc
pop
addr16
push
dec
mov
sub
lock
inc
dec
flds
mov
sbbb
xchg
dec
add
mov
insb
push
push
sub
fadds
push
push
btc
jae
sbb
adc
outsb
mov
inc
add
or
jae
push
push
push
fdivrs
test
outsb
push
imul
push
mov
dec
push
xchg
dec
mov
add
jno
fld
loope
daa
movb
push
jns
mov
test
mov
pop
sbb
cmpsl
arpl
cmp
or
bound
mov
jo
fnstsw
imulb
data16
cmp
mov
jecxz
dec
in
add
mov
xchg
xor
imul
sub
pop
sub
xchg
or
test
mov
inc
test
out
push
mov
adc
fnstsw
loopne
add
add
out
push
jp
xchg
mulb
cld
pop
hlt
push
outsl
loopne
negl
fwait
movsb
pop
jbe
xlat
mov
jp
hlt
and
dec
sbb
inc
add
jns
sarb
sbbb
or
repnz
xchg
dec
inc
fs
push
vpshad
out
adc
mov
imul
ret
push
dec
xor
stos
mov
xchg
orl
dec
mov
lds
test
or
mov
push
push
or
fcmovb
daa
cmp
inc
fidivrl
stc
repz
pop
pusha
and
xchg
mov
mov
sub
lahf
jo
popa
gs
div
adc
lret
mov
or
or
ficoms
mov
aad
xchg
push
sbb
xchg
fs
repz
sub
movsl
mov
lahf
push
inc
xor
cmc
bound
pusha
test
ja
adc
pop
insl
sahf
or
mov
mov
xchg
mov
clc
push
inc
shrb
cmp
mov
sub
pop
adc
cli
mov
cmp
lcall
mov
cmc
sbb
cmpsb
or
popa
ljmp
lea
outsb
daa
inc
popf
fidivs
das
sub
lea
repz
movl
clc
in
scas
or
divb
int3
out
int
pop
imull
es
int3
fbld
add
mov
data16
std
push
in
sub
in
sbbl
and
mov
test
mov
lods
cmp
mov
dec
jno
sahf
negb
cli
fdivrs
mov
jo
xor
lret
outsb
stc
cli
xor
jmp
mov
sub
jae
imull
pop
ret
add
sar
push
out
ret
fsub
pop
inc
lock
popf
pushf
pop
int3
arpl
jmp
mov
cmp
dec
push
test
xor
popa
cmp
adc
test
ja
cmc
leave
sbb
add
lods
add
mov
adc
mov
xchg
or
movsb
imul
pop
cmp
dec
push
fs
dec
jp
xor
inc
cmpsl
mov
cld
sub
adc
clc
rcrb
sarl
pop
sub
xchg
jne
cmpsb
cwtl
and
jg
popf
repnz
pop
dec
and
in
mull
stos
cli
enter
js
jl
jnp
sarb
jmp
in
fs
fs
fwait
mov
push
jmp
fldenv
mov
push
mov
cli
fdivrs
les
mov
les
cmp
xor
mov
movsl
mov
shll
jl
cmpsb
inc
inc
divb
jecxz
das
lock
aad
pushf
aad
xchg
sbb
out
icebp
test
jecxz
inc
add
pop
ficoms
xor
out
lock
out
aas
cmp
jmp
outsb
rcrl
jbe
pushf
test
rolb
inc
imul
cs
inc
pop
mov
sub
xor
pop
dec
ja
xchg
xchg
mov
in
xchg
jecxz
adc
push
jb
sarl
xor
or
and
mov
fmull
pop
jg
adc
fyl2xp1
imul
jp
fsubrs
or
xchg
sub
stos
mov
test
das
cmp
push
call
dec
or
in
aaa
in
or
imul
pushf
test
push
mov
pushf
gs
xchg
pop
cltd
cmp
rcrb
mov
cmp
jecxz
xchg
pop
or
jmp
mov
repnz
fdivl
xchg
mov
fldenv
movsl
sti
cli
mov
push
hlt
lea
cmp
lret
inc
ds
js
pop
roll
pop
loop
xchg
mov
ss
fs
pop
jne
stc
cmp
xchg
fildl
dec
adc
push
in
lods
mov
jb
lods
inc
stos
adcl
xlat
iret
mov
mov
jae
out
outsb
adc
adc
lahf
scas
adc
xchg
bound
or
sub
into
mov
jmp
cwtl
dec
mov
sbb
ds
pop
push
rcrb
cmp
inc
notb
dec
add
push
insb
pop
push
das
pop
adc
add
mov
push
ds
shrb
sbb
lock
aam
mov
outsl
push
into
lea
insb
jo
adc
je
scas
sbb
divl
imul
sbb
sti
adc
gs
mov
jg
fisttpl
add
ds
mov
lcall
lock
imul
adc
and
negl
out
mov
xchg
push
int
mov
das
inc
inc
outsb
scas
xchg
out
dec
mov
mov
scas
ljmp
int3
pushl
testb
cmp
add
push
fsubrs
mov
lods
stos
movb
adcl
ficoms
sbbl
cmp
mov
jge
mov
dec
pop
sub
pop
mov
shl
and
imul
sub
and
jl
pop
and
je
out
mov
sub
and
or
loopne
jmp
cmpb
jbe
rol
sub
jo
scas
cs
adc
cmpsb
repz
enter
pop
pop
fmulp
adc
xor
mov
xor
lahf
insb
aaa
outsl
popf
cmp
outsb
sub
aas
xor
js
loope
mov
add
cmp
stos
inc
cltd
addr16
adc
movd
cmp
out
sbb
sub
sbb
data16
scas
push
dec
pushf
adcl
lret
sbb
add
test
add
inc
add
or
sti
adc
mov
divl
sbb
cld
jecxz
ror
scas
dec
call
xlat
in
cvtpi2ps
in
out
adcb
scas
lcall
in
mov
sbb
push
adc
adc
inc
and
fimull
adcb
pop
out
fisubs
mov
jg
mov
mov
xchg
testb
mov
repnz
mov
jo
adc
mov
test
idivb
aad
shlb
aam
sbb
xchg
pop
loopne
cld
movsl
fidivs
movsb
jmp
and
dec
push
push
insb
lods
fstps
int3
aam
enter
mov
mov
mov
mov
jnp
in
sub
add
mov
ljmp
and
fiadds
sbb
iret
jle
cmc
mov
popf
xor
fcomps
sti
xchg
out
roll
pop
pop
mull
jbe
pop
lahf
movsl
nop
fcoml
push
mov
cmovnp
stc
fidivl
xlat
psubsw
jnp
stos
push
frstor
fcmovnbe
push
or
and
push
shlb
ds
sub
push
addb
cwtl
xor
xlat
add
xchg
mov
leave
inc
fdivs
mov
js
in
inc
xchg
add
cwtl
ret
dec
loop
jns
ret
xor
loopne
push
mov
imul
js
mov
fwait
mov
or
test
shlb
pop
cltd
mov
push
mov
clc
push
sub
push
mov
mov
and
cmp
pop
shll
mov
mov
rol
arpl
push
inc
dec
sub
mov
xchg
dec
jecxz
je
lea
pop
cmp
and
pop
adc
push
push
aam
sub
xor
cli
test
pop
aam
add
rclb
mov
fs
subl
dec
jo
sub
mov
out
push
sahf
sahf
aad
fisubrs
xchg
in
adc
lods
sti
lods
push
and
add
cmc
sbb
popf
push
inc
push
aaa
call
and
pop
push
inc
rep
sarb
jns
add
pusha
or
mulb
ret
lock
add
in
mov
ret
xor
cmp
cwtl
lahf
mov
push
push
add
pop
into
mov
ficoml
sbb
movsl
aad
fwait
insl
sbb
sti
jns
out
push
mov
jbe
mov
or
ss
notl
orl
outsl
lret
movntq
test
jmp
test
pop
iret
out
mov
cmpsb
xchg
loope
xchg
mov
sub
in
jmp
jo
pop
mov
gs
popf
sub
ljmp
lods
sbb
mov
shr
fwait
hlt
jl
push
push
mov
hlt
lods
push
mov
leave
and
add
loope
sahf
and
sahf
nop
sub
and
loope
pop
rorb
cmpb
lcall
or
mov
insb
and
xchg
sahf
xchg
and
or
mov
pop
jp
pushf
sti
aaa
jmp
mov
jecxz
and
pop
gs
sub
mov
inc
rorl
push
loope
fldcw
sbb
jecxz
sub
inc
imull
mov
add
jle
inc
xchg
jmp
cmp
add
or
jle
mov
jge
mov
mov
loopne
lret
jne
push
invd
adc
js
vmwrite
daa
jmp
fldenv
shrl
and
pop
dec
sub
jmp
aad
inc
notb
xchg
ret
inc
xor
mov
arpl
or
ds
aas
icebp
scas
out
xor
jge
push
pop
cmpsl
or
insb
dec
es
les
stos
popa
ret
mov
jle
or
push
dec
mov
xor
test
mov
mov
adc
insb
sbb
xor
sbb
test
lea
fildl
into
sbb
xor
mov
test
fs
cmp
cld
pop
add
rorl
xlat
aam
pop
pusha
mov
jae
inc
push
js
inc
lock
in
cmp
add
fdivrl
insl
cmp
not
lea
and
in
mov
mov
sub
mov
xchg
xor
test
or
push
imul
jmp
loop
add
pop
mov
fstpt
mov
outsb
in
repnz
jbe
sbb
push
pop
arpl
fbld
add
xor
fisubs
stc
fnstenv
insl
daa
and
out
xlat
pop
rorl
lret
jmp
insl
inc
cwtl
dec
cmp
lock
mov
sub
jle
push
jbe
mov
loop
cmp
outsb
push
je
aas
mov
inc
repnz
insb
fstl
movsb
loop
jmp
pop
fisubl
out
add
push
imul
repz
pushl
adc
subl
dec
sub
std
mov
push
mov
inc
shll
in
or
push
or
dec
push
mov
movsl
jmp
daa
movsl
shll
xchg
in
aaa
cmpsl
lahf
dec
inc
bound
jge
mov
push
in
mov
fmuls
adc
xchg
cmpsl
cwtl
bound
or
test
imul
cltd
xor
inc
pop
clc
es
bound
iret
jmp
push
mov
dec
das
leave
sub
mov
add
dec
cwtl
punpckhbw
test
scas
aaa
lods
in
inc
dec
adc
sahf
icebp
mov
and
jecxz
aas
insb
sub
jno
xchg
pop
fnstcw
cmp
leave
aad
or
enter
sub
xor
mov
mov
rol
inc
dec
sahf
fidivrl
inc
xor
push
pop
mov
scas
sub
stc
jecxz
mov
mov
lcall
shr
add
mov
cmp
rolb
fld
rcl
add
sbb
stos
lds
repnz
pop
jge
jecxz
daa
mov
pop
sub
pop
lods
lret
mov
xchg
jmp
mov
dec
dec
jb
adc
sbb
xchg
into
lods
pop
stos
in
hlt
sarb
jmp
inc
sbb
shll
cmp
lret
dec
into
fcmove
push
cmp
dec
xor
or
fmuls
mov
mov
call
aad
sub
sbb
rcrl
push
std
push
xchg
cmpsb
dec
sub
loope
lods
das
cmp
pop
xchg
or
js
enter
call
jle
test
lods
inc
xchg
xchg
push
es
cli
adc
xor
call
push
mov
clc
mov
lea
inc
jl
jbe
cltd
mov
fs
std
push
sub
jbe
int3
adc
mov
push
cltd
cmpsl
push
adc
enter
mov
addr16
lods
jmp
mov
stc
into
add
mov
mov
cmc
and
imul
lret
cmpsb
fwait
jmp
push
xor
shll
mov
dec
insb
iret
push
leave
outsl
aam
and
push
ja
pushf
adc
pop
mov
mov
jge
xchg
mov
cmp
repz
xor
adc
mov
jmp
or
call
fwait
cmp
fstpt
jns
adc
jbe
rorb
xor
aad
lea
ja
incl
cmc
jnp
cmp
xor
shl
out
cltd
or
or
mov
and
es
xlat
out
pop
lahf
enter
push
psubsw
jns
pop
out
or
sub
push
pop
aaa
jo
imul
out
das
ret
or
pusha
call
add
mov
mov
jmp
dec
mov
push
testb
mov
mov
cmpsb
mov
dec
sub
int
out
lock
cmp
pop
mov
jle
rcrl
or
xchg
lods
popf
cmp
out
mov
sub
or
outsb
push
rorb
int
shlb
sub
enter
jbe
out
jns
jns
test
jl
into
jo
mov
mov
pop
cmp
stos
int3
idivl
scas
in
nop
iret
add
aam
dec
rol
xor
ljmp
lods
mov
mov
sub
xlat
inc
jl
push
sbb
push
mov
pushf
adc
jb
sub
xchg
lods
push
decl
scas
fcoms
sbb
jnp
leave
dec
cmp
mov
cmpsl
sub
int3
jnp
ss
enter
mov
push
or
ret
mov
jl
adc
pop
lret
sbb
cwtl
sahf
inc
lods
push
inc
or
out
mov
fldl
stc
fwait
outsb
fldenv
das
les
mov
pop
stc
popf
cmp
loop
je
push
ret
test
imul
adc
andb
lock
popa
mov
bound
stos
dec
cmp
adcb
movsl
dec
test
test
aaa
xchg
dec
mov
stc
scas
movsb
xor
pusha
ljmp
rclb
or
pop
out
ret
lahf
jmp
mov
cmpsl
lret
push
js
shrl
in
sub
xchg
mov
pop
andl
sub
xor
push
jae
mov
es
or
or
mov
pop
outsb
mov
popa
xchg
xchg
ljmp
pop
xchg
lds
jnp
bound
or
xchg
pop
aaa
shl
mov
outsb
movsb
inc
iret
or
jecxz
xchg
lret
jns
faddl
push
idivb
sub
enter
add
push
out
dec
jno
and
stos
xchg
and
jns
mov
jecxz
cmp
mov
xchg
fistps
xchg
jge
and
test
cmp
ret
mov
lret
movsb
inc
inc
lock
cli
fwait
loop
inc
xor
lea
push
test
add
xor
ljmp
adc
push
cmpsl
clc
sub
fidivrl
mov
dec
clc
mov
loopne
popf
imul
imul
outsl
inc
push
outsb
mov
jae
xchg
lds
xchg
outsl
repz
negl
mov
cmp
sbb
cmpsl
dec
mov
xchg
cmpsl
cltd
clc
mov
in
je
sub
sub
xchg
popf
xchg
mov
jo
fldcw
pusha
sub
insl
sbb
xchg
sub
test
imul
add
scas
jno
fildl
push
test
add
push
subl
xchg
enter
jb
scas
cmp
dec
dec
pushl
jns
dec
sahf
daa
pop
or
or
mov
out
jo
sar
inc
vsqrtss
sub
push
jo
pop
rcr
ss
inc
loope
lock
test
pop
addr16
push
push
push
sbb
icebp
xchg
insl
scas
xchg
popf
mov
adc
aam
cmpsb
insl
push
or
ret
xor
imul
mov
int3
sbb
clc
in
lret
adc
jl
insb
test
pop
xchg
pop
xchg
lret
cli
fildl
push
xor
in
sarl
pop
bound
jnp
pop
orl
incb
fistpl
xchg
lds
in
pop
xchg
cmp
imul
mov
jnp
stos
in
outsb
sbb
sub
push
add
sub
jg
jge
in
jbe
dec
mov
xchg
outsb
dec
push
lcall
jbe
mov
lods
jae
ret
mov
aas
push
xchg
push
jno
aad
sub
test
jo
ss
ljmp
ret
xor
inc
imul
xlat
into
adc
lds
ret
add
inc
and
fists
in
lods
insb
jge
xor
mov
addr16
bnd
lods
inc
xor
pop
and
xor
mov
dec
aam
lods
push
adc
or
clc
inc
dec
ret
repz
push
xlat
fwait
cmp
ret
pop
loope
inc
sbb
roll
bnd
pushf
ja
into
or
push
push
jno
imul
mov
pop
dec
pop
aam
add
xchg
pop
lret
mov
push
jmp
push
ret
cwtl
sub
lea
xchg
sub
mov
mov
mov
sbb
adc
andb
ss
stos
fdivl
addr16
scas
jb
or
aaa
xor
jno
or
in
ljmp
inc
rcll
addb
sub
pop
dec
gs
int
adc
mov
lds
movsl
xor
icebp
mov
and
sub
mov
pop
loop
push
pop
orb
daa
sbb
dec
out
xchg
cmc
xchg
outsl
aam
insl
sub
xor
fimuls
jb
faddl
dec
push
lret
pop
jecxz
and
push
fs
push
xchg
inc
lcall
and
mov
je
jnp
lcall
push
cmp
daa
out
jb
dec
xchg
sbb
adc
int3
dec
push
push
into
jns
icebp
xor
cmp
jae
inc
mov
mov
jle
lret
test
sbb
pop
cld
xchg
xchg
clc
sarl
mov
xor
cmpsl
loop
in
mov
in
mov
cwtl
in
jae
and
insb
jnp
test
shrb
aas
das
pop
jno
mov
gs
mov
xor
and
fiaddl
mov
jbe
mov
sub
test
mov
imul
jae
in
dec
gs
mov
mov
inc
inc
jno
stos
loop
mov
in
push
iret
negb
mov
pop
pop
dec
out
inc
inc
stos
clc
cmpsb
cmp
sbbl
jne
lods
call
ja
fcomps
pusha
fstps
xchg
push
sub
call
dec
filds
mov
sub
test
pusha
jne
push
popf
sbb
int3
jle
std
das
pusha
cmp
xchg
inc
and
xor
push
pop
mov
cmpsl
bound
stos
fcomip
aam
xchg
imul
loopne
lods
flds
dec
in
or
dec
add
les
jl
ljmp
xor
cmp
mov
fwait
lret
mov
jl
cmc
stos
iret
or
hlt
dec
inc
adc
stc
aad
and
mov
mov
mov
jge
aas
adc
push
in
cmp
inc
outsl
inc
mov
jb
or
sbb
inc
int3
aad
mov
mov
sbb
jecxz
gs
ret
push
lods
mov
cmpsb
movsl
or
into
sub
mov
or
cmp
mov
test
test
jbe
cmp
add
add
jecxz
loop
data16
in
ljmp
push
pop
repnz
xchg
cmp
adc
pusha
jae
ret
and
pop
push
push
mov
push
xor
mov
jae
mov
mov
rolb
mov
subl
jae
jg
push
dec
adc
sbb
and
inc
adc
mov
enter
sbb
mov
inc
sbb
movsl
fcomps
cmp
nop
mov
pop
and
adc
cwtl
movsb
in
jle
pop
jmp
negl
xchg
rcr
jo
inc
ret
sub
inc
in
dec
push
xor
ljmp
cs
shr
outsb
iret
in
xchg
stos
pop
cltd
insb
ljmp
sar
push
movsb
scas
or
dec
sti
add
xorb
jmp
outsb
imull
movb
jmp
cmp
inc
sti
mov
cmp
xchg
mov
mov
mov
mov
paddusw
bound
cmp
mov
movhps
fisttpl
mov
daa
lcall
and
imulb
stos
pop
fwait
mov
aam
orb
daa
rorl
fstpl
dec
inc
sbb
rcrl
add
popf
cmp
sub
pop
and
and
mov
les
push
enter
pop
imul
fstp
push
xchg
fcomps
lcall
mov
fs
nop
cltd
xchg
mov
sub
mov
xor
add
repz
in
cmpsb
pop
cmp
adc
xchg
push
lock
push
mov
push
cmp
mov
addr16
inc
out
inc
dec
insb
jecxz
popf
sti
mov
fnop
inc
push
fldt
dec
inc
push
ljmp
stc
pusha
hlt
andb
cmc
cmpsl
cmpsl
in
mov
fcmovnb
dec
pop
pop
jle
in
dec
out
lret
notb
cmp
pop
faddl
scas
dec
pop
adc
pusha
push
fsubrl
lcall
loope
push
ds
or
mov
jne
je
fsubs
mov
mov
mov
lods
inc
scas
test
cltd
out
mov
sub
sarb
insb
addr16
jb
sbb
jle
shll
add
in
adc
jmp
push
xor
sub
xchg
xchg
xchg
cmp
xchg
or
clc
ss
aaa
add
sub
sbb
shll
popa
add
jne
sbb
out
push
xor
mov
sub
xor
sub
sbb
ret
hlt
fldenv
imul
mov
out
imul
push
lahf
fs
sbb
pop
orl
push
outsl
sarl
ljmp
and
in
outsb
inc
dec
push
mov
fimull
mov
or
cmp
in
cmp
stc
add
loopne
lret
and
testl
sbb
scas
lcall
push
fwait
cmp
aam
inc
in
push
cwtl
leave
insl
cmp
add
je
xchg
daa
out
sti
rcrb
sub
jmp
pop
ljmp
xchg
adc
sbb
mov
or
dec
jae
gs
mov
lcall
sub
push
lds
mov
mov
cs
mov
pop
paddd
sub
push
adc
pop
fnstsw
mov
pop
lcall
jns
xor
insb
jno
and
lea
out
clc
decl
jg
adc
lock
pop
and
inc
ljmp
je
jp
and
outsb
or
scas
lahf
fisubrl
incb
mov
mov
adc
adc
mov
xor
mov
inc
mov
int
jns
lahf
repz
and
imul
lock
test
ret
sub
mov
mov
std
adc
into
xchg
jno
imul
int3
jo
mov
ret
lcall
mov
imul
jb
xor
xchg
jbe
sti
fbstp
cmc
xor
mov
pop
pop
xchg
jnp
roll
jg
push
push
lods
or
bound
sub
repz
inc
jle
xor
ret
push
arpl
test
dec
push
add
xor
jge
clc
sbb
lock
outsl
insl
add
les
test
fs
push
lret
jp
jecxz
xor
pop
es
cmp
add
mov
mov
stc
int3
fcomi
fdivrs
in
push
inc
mov
xchg
insl
mov
mov
dec
les
cwtl
jno
fstl
sub
imul
iret
push
arpl
push
lret
jbe
push
jno
iret
add
xor
jo
mov
movsb
add
out
dec
lea
andl
stos
fwait
test
sbb
mov
jns
mov
pop
cmp
pop
lock
mov
ss
leave
inc
pushf
jecxz
loop
fnstenv
addb
imul
nop
pop
push
mov
outsb
shrb
arpl
push
and
sahf
or
insl
fstpl
lea
xchg
fwait
into
add
push
add
mov
xchg
push
loop
dec
loop
inc
ret
shlb
scas
sbb
popa
cld
shl
mov
pop
test
xorl
sub
dec
stc
add
pushf
test
inc
push
aad
mov
sub
push
orb
xlat
mov
dec
ret
add
int
pop
mov
rclb
arpl
scas
adc
or
subb
xchg
je
or
xchg
pop
mov
repz
repz
or
out
out
test
mov
popf
out
stc
jl
or
out
stos
dec
xor
out
and
ljmp
mov
sbb
dec
push
mov
pop
cmp
cmp
or
and
stos
scas
sbb
jecxz
jp
or
int3
imul
push
stos
out
sbb
sub
movsb
lahf
mov
ficompl
jne
push
dec
mov
push
ss
cmc
inc
ljmp
data16
into
inc
cli
ja
mov
pop
dec
fidivrs
int3
jo
adc
sbb
jp
mov
stos
out
dec
fisttps
push
jne
movsb
in
dec
lods
mov
scas
pop
or
xlat
xlat
aad
dec
sub
daa
add
sti
sbb
and
push
mov
addr16
fwait
mov
mov
or
add
mov
int
or
jmp
lods
aaa
daa
mov
test
out
pop
mov
mov
adc
mov
jl
sub
into
test
push
inc
dec
ljmp
dec
jbe
cltd
xchg
sahf
add
rcrb
add
cmpb
xor
mov
je
push
out
cmp
ret
lods
les
and
repnz
fiadds
xchg
mov
pop
cwtl
rorb
sbb
sbbb
lret
xorl
pop
xchg
xchg
add
jo
mov
ljmp
sbb
sub
mov
outsl
mov
in
cmp
and
jp
mov
mov
lret
mov
mov
lcall
jnp
jl
lcall
test
in
push
mov
sahf
add
mov
out
scas
push
add
cmp
sub
fs
pushf
cld
out
jb
dec
sbb
bound
ljmp
mov
lock
pop
mov
sarl
jns
into
outsb
lea
stc
test
push
or
insb
pop
jmp
mov
adc
add
dec
fdivr
add
je
fcompl
aas
mov
inc
iret
pop
sbb
mov
in
cli
mov
jae
dec
lret
scas
je
hlt
sub
and
ror
mov
mov
rcrl
out
xor
add
pop
in
insb
andb
mov
std
repnz
popa
icebp
push
out
fs
in
cltd
mov
push
sbb
jl
sbb
cwtl
xchg
cmp
jno
xor
fisttpll
shlb
js
adcb
add
jb
iret
bound
loop
repnz
lcall
cmp
inc
sbb
or
push
prefetchw
or
mov
hlt
push
call
iret
test
mov
fildl
fwait
add
pop
lock
lret
adc
aad
pop
pop
pop
icebp
cs
xchg
mov
stos
and
push
mov
push
pop
hlt
xor
das
pop
jo
lahf
icebp
fnstsw
repnz
jle
outsb
and
jg
ret
fstpt
push
insb
push
inc
ss
and
int3
es
mov
aad
sahf
sbb
das
dec
fwait
mov
jcxz
lret
sub
lret
sbb
fwait
mov
sbb
jae
cmp
popf
sbb
or
and
sbb
mulb
aad
sbb
mov
je
inc
pop
jne
imul
xlat
fldenv
adc
shll
mov
roll
dec
jp
dec
cmp
push
mov
pop
jno
pop
dec
nop
fisubrl
adc
jnp
xlat
test
stos
mov
lahf
cmpsb
mov
out
push
cmp
push
jb
int3
iret
lret
icebp
lret
dec
aad
in
movsl
xor
add
push
xor
int
lret
and
out
hlt
mov
push
imul
cltd
sahf
xor
cmp
xor
lock
ds
push
in
xor
jo
jecxz
pop
mov
push
cmp
mov
clc
pushf
xchg
imull
dec
scas
leave
or
pusha
outsl
dec
imul
and
outsb
jg
test
mov
xor
mov
clc
jmp
mov
pushf
xchg
inc
fst
cltd
cmp
jo
ja
sbb
mov
lcall
mov
aas
inc
dec
mov
int3
int3
sarl
dec
xchg
cmp
ret
mov
dec
mov
add
lods
lock
fistpll
mov
fdivs
pop
push
ficompl
pop
add
ja
or
stc
xchg
data16
js
jg
pushaw
out
bnd
push
rcr
arpl
mov
xor
insb
cmpsl
sahf
loopne
stos
imul
pop
adc
and
bound
rclb
lea
add
jle
push
int3
loop
pop
push
adc
pop
cmpsl
and
push
pop
in
psraw
lret
les
add
repz
inc
pop
mov
push
pusha
sub
pop
stos
repnz
xor
adc
pop
sub
inc
ljmp
rdmsr
mov
dec
andl
pusha
xor
xchg
cmp
add
inc
inc
shrl
or
fldl
add
fbstp
negl
xor
aam
dec
imul
bnd
pop
outsl
cltd
fdivs
push
push
push
xchg
shll
and
lcall
pushf
sbb
into
imul
mov
push
mov
ljmp
pusha
shlb
inc
aaa
and
mov
mov
pop
sbb
jg
mov
jns
test
test
hlt
scas
mov
adc
dec
lods
into
test
dec
aaa
sbb
ucomiss
lea
daa
mov
std
pop
shll
mull
sbb
fidivl
imul
in
inc
cmp
les
movsl
sbb
push
inc
cmp
dec
daa
popa
scas
out
dec
ja
mov
dec
jns
mov
das
lret
inc
ret
mov
cmp
mov
xor
push
bound
sub
arpl
mov
xchg
mov
addb
inc
and
and
daa
inc
mov
xor
push
testb
sub
jb
mov
sti
jecxz
pop
inc
jne
imul
mov
lahf
xorb
arpl
icebp
xlat
push
push
xchg
dec
dec
push
inc
gs
add
cwtl
xor
pop
mov
xor
inc
jl
jp
push
inc
aaa
adc
fs
aas
outsl
push
es
push
out
fldt
push
loope,pn
push
adc
cmp
mov
sub
insb
sub
xchg
sbb
sub
cwtl
mov
out
adc
jno
fs
test
mov
sti
adc
push
clc
push
lret
jmp
adc
in
stos
fdivs
or
pop
aas
add
rcrl
sbb
sub
or
and
push
inc
fcom
imul
fmull
mov
mov
mov
imul
lods
sub
js
cmc
ret
cli
je
cmp
xchg
and
in
dec
and
movb
pop
shlb
repz
cs
lods
sub
jo
mov
sbb
xrelease
mov
pop
aaa
pop
in
addb
cmpl
pushf
jno
xchg
mov
lock
mov
shlb
mov
icebp
adc
aad
mov
or
pop
add
aad
jns
mov
stos
fwait
pop
psubusw
out
and
hlt
int
aam
lahf
mov
out
mov
xchg
mov
imul
sbb
and
or
movsl
sbb
mov
rorb
pushf
add
loop
jp
xor
pop
popa
out
push
inc
jge
hlt
pop
mull
decl
xor
loope
xchg
cmp
push
imul
mov
jp
stc
out
mov
or
je
cltd
adc
pushf
lods
jnp
dec
les
call
xchg
aam
inc
sub
adc
outsb
sub
sbb
loopne
sbb
dec
fwait
inc
aaa
pop
int3
scas
sbbl
sub
pop
adc
imulb
mov
test
lock
js
pop
mov
pop
mov
mov
push
stos
adc
mov
outsb
push
inc
cli
jge
lea
insl
dec
jbe
int
test
jge
lods
dec
add
mov
frstor
mov
add
outsb
adc
fs
inc
ret
mov
sbb
mov
xorb
sbb
xchg
pushf
pushf
test
xor
sub
aad
add
outsl
inc
xor
fcmovnb
test
cmp
adc
mov
jae
aad
movsl
or
and
cwtl
sub
or
push
repnz
or
aas
fldt
lods
pop
add
jmp
es
mov
aad
lret
add
xor
stos
call
loope
cmpsl
mov
es
mov
fcom
fidivs
negb
lcall
mov
pop
pushf
push
iret
mov
cli
push
xchg
lcall
dec
icebp
cmp
xchg
lret
ret
stc
icebp
fistps
pop
lods
scas
mov
andb
fistps
sub
lcall
movl
cs
scas
rorl
adcb
enter
pop
pop
add
jg
mov
pop
xchg
and
push
jle
jbe
push
loopne
mov
mov
mov
mov
out
rol
sub
xchg
cmp
xlat
jle
cmp
std
inc
and
lahf
push
insl
test
mov
jmp
stos
hlt
mov
dec
push
mov
es
cmpsb
int
mov
mov
cmp
das
and
lcall
shrl
out
movsl
test
mov
out
dec
fistps
sbb
sub
lods
pop
ja
xchg
sub
cld
cmpsb
mov
jae
mov
add
jge
lea
dec
inc
jge
fisttpll
adc
testl
lods
xor
int3
pop
aas
and
dec
ja
adc
jle
shll
lods
mov
rcl
xchg
mov
fcmove
hlt
xorl
pop
mov
orb
aad
dec
inc
or
push
and
cmpsb
cltd
inc
inc
popf
add
into
cmp
xchg
push
bound
fwait
ret
outsb
pushf
push
add
test
jp
pusha
xchg
add
int
popa
sub
sbb
mov
imul
arpl
xchg
aas
sahf
scas
setnp
sub
mov
or
mov
int
sbb
mov
jl
xchg
bound
scas
jne
loopne
pushf
mov
mov
mov
gs
push
push
and
jecxz
das
clts
into
ds
insl
mov
rcll
add
mov
fistl
adc
xchg
scas
cs
ja
fdivs
adc
movsl
or
out
inc
loope
rcrb
add
mov
scas
inc
daa
sbb
test
arpl
arpl
fdivrs
jo
mov
add
in
mov
xor
add
add
stos
fdivs
dec
pop
sub
outsl
jge
xor
lahf
dec
mov
mov
adc
mov
sub
inc
das
ret
xchg
xchg
add
or
mov
xlat
lahf
xor
fs
test
push
add
and
xchg
or
push
cmp
mov
je
dec
lcall
in
mov
add
pop
jp
popf
cmpsl
mov
pop
ds
and
test
pop
add
mov
ljmp
stos
clc
sarl
add
mov
mov
out
adc
popf
mov
je
mov
stos
pop
insl
test
cmc
xchg
rorl
cs
insl
adc
mov
movsl
imull
sub
xor
popf
add
jno
xchg
rolb
jge
movsb
add
push
or
jecxz
jno
out
insb
add
pop
adcl
inc
adc
pop
lcall
aam
lea
or
xor
mov
xchg
adc
inc
pop
lahf
jnp
in
jmp
push
pop
xlat
jg
add
sahf
cld
sbb
jecxz
sti
sbb
aad
mov
insb
fcomps
loope
rcll
shll
jl
mov
and
pop
jne
lcall
pop
xor
gs
jbe
mov
push
dec
scas
mov
dec
xchg
xchg
xor
mov
push
imul
and
sarl
or
xchg
gs
testl
scas
mov
jbe
dec
inc
mov
lcall
popf
or
sbb
sub
je
mov
mov
cltd
jne
or
mov
mov
div
sub
icebp
cmc
pop
pusha
ljmp
xor
sbb
outsb
mov
xor
ljmp
lret
je
pop
adc
adc
jns
aad
jge
cmp
lret
cmp
xchg
clc
adc
pop
or
cmp
outsl
mov
nop
pop
sbb
xor
cmpsl
jge
imul
stos
outsl
pop
ret
iret
imul
adc
cmp
xlat
scas
mov
xchg
mov
and
xchg
mov
sarl
add
cmpl
pop
dec
loop
push
int3
outsb
sub
dec
xchg
in
fmul
push
mov
stos
ds
notb
cli
jns
pusha
and
mov
push
pop
rolb
cmp
rclb
pop
scas
adc
mov
or
mov
add
sbb
jp
sub
jno
dec
sub
dec
pop
roll
fisttpll
mov
mov
rorb
es
push
push
push
adcl
mov
sti
mov
push
scas
push
add
push
adc
or
pop
stc
push
popa
and
in
mov
sbb
scas
mov
jno
cmp
dec
dec
hlt
dec
in
out
push
test
std
enter
movl
mov
inc
fcmovnb
cld
sbb
leave
jg
rol
pop
test
arpl
add
jl
rorl
scas
jp
cs
push
mov
ret
adc
dec
sbb
in
mov
or
push
hlt
cmp
sub
jb
sbb
fucomip
divb
cli
mov
scas
aas
out
jge
mov
adc
and
and
mov
mov
mov
std
adc
call
adc
shll
outsb
mov
mov
push
mov
jns
mov
vhaddpd
ds
sub
fsub
sub
push
enter
mov
test
sub
jge
push
ret
notb
pop
pushf
adc
add
add
mov
pop
das
aam
dec
cmpsb
neg
and
xchg
or
aaa
imul
loope
fidivs
pop
mov
dec
push
xchg
jmp
orl
pushf
mov
sarl
cld
je
nop
lret
notl
in
cli
les
inc
imul
sub
push
jno
jge
push
repnz
mov
xchg
pop
mov
pop
xor
dec
pop
sub
enter
push
mov
push
int
test
inc
xchg
cli
das
leave
int3
and
cmc
loopne
sbb
lds
jg
hlt
ja
test
mov
retw
mov
lret
mov
repnz
ret
scas
jo
cltd
leave
sbb
mov
in
call
pushf
outsl
scas
jmp
lret
xor
push
mov
pop
mov
xchg
js
xchg
add
mov
dec
push
pop
iret
adc
lods
and
movsl
shlb
fisubrs
sbb
or
imul
jnp
mov
jns
pushf
inc
push
imul
push
sahf
jge
jg
std
test
lock
adc
jae
push
pushf
xchg
aam
dec
aaa
in
test
ja
push
pop
loope
mov
pop
sti
or
test
xor
dec
inc
in
pop
cmpsl
nop
jo
pop
cld
pop
dec
push
arpl
sbb
out
out
movsb
jb
stc
push
add
push
sub
ds
pop
loopne
mov
icebp
pop
ss
jbe
lods
push
mov
inc
xlat
dec
fnstsw
sub
stos
in
lcall
or
push
inc
lods
xorb
ja
sahf
pop
addr16
xchg
lahf
push
stos
jbe
ffreep
shrl
nop
sbb
out
dec
sahf
jle
hlt
ss
adc
dec
fsubr
cmp
and
fisubs
inc
jb
psubw
push
mov
push
test
jns
test
xor
push
ds
loope
fwait
and
je
inc
mov
mov
fs
dec
push
sbb
popa
jg
ljmp
inc
pop
push
les
sub
mov
push
push
mov
pop
cs
movsl
lcall
mov
and
xor
mov
repnz
push
mov
mov
jnp
aam
or
mov
cltd
lods
imul
add
push
sub
lds
hlt
mov
push
cmp
add
addr16
pop
and
jo
loope
mov
mov
outsb
mov
mov
dec
xchg
sbb
ret
addl
enter
jp
push
adc
aaa
mov
pop
xchg
std
scas
ja
ret
add
sub
subl
xchg
iret
adc
mov
cmpsl
xorb
imul
mulb
stc
mov
mov
sub
add
and
push
xchg
dec
popf
pop
jns,pt
stos
jnp
mov
jp
xchg
fisttps
mov
sub
jle
sub
cmp
gs
loopne
sub
mov
jnp
lret
faddl
outsl
push
fistpl
outsb
inc
outsl
push
add
or
vprotw
cld
into
cmc
outsb
aad
adc
push
repnz
sub
sub
movsl
xorb
ret
popa
jle
mov
enter
sahf
cmp
adc
popa
iret
pop
sub
push
xor
mov
add
cmpsl
bound
roll
shll
or
inc
push
sub
jo
fidivrs
xchg
cmp
loope
xor
inc
push
mov
cs
adc
sti
mov
pop
mov
xor
jle
js
pusha
adc
std
enter
dec
repz
jmp
inc
jecxz
add
adc
mov
pusha
cld
mov
pop
sbbl
xor
out
or
cmp
dec
fsts
subl
xor
inc
outsl
frstor
sub
fldenv
adc
mov
mov
in
mov
inc
push
sbb
cmp
sbb
inc
sub
jno
daa
cmp
sbb
jns
adc
jb
cmp
popf
fs
sti
repnz
jmp
nop
pop
xor
and
mov
sub
adc
cmp
lods
adc
sub
pop
repnz
cwtl
icebp
in
jg
ljmp
add
inc
mov
jp
cmp
pop
aam
ljmp
sub
ds
jne
add
mov
fistpll
pop
xchg
mov
in
pop
mov
sbb
pop
mov
mov
and
loopne
pop
push
mov
sahf
mov
jo
subb
enter
mov
mov
adcb
pusha
xchg
iret
mov
sub
dec
pop
fldl
or
fwait
mov
int
pop
insb
cmp
pop
lret
lcall
add
rolb
sbb
push
pop
mov
mov
mov
cmp
rorb
js
cmp
int3
sarl
popf
mov
shr
xlat
mov
mov
mov
dec
sub
push
cmpsl
hlt
icebp
or
push
cwtl
test
stos
cmpb
push
and
xchg
cmp
mov
test
push
dec
call
add
push
and
fstp
mov
popf
testl
jecxz
and
jns
and
xor
mov
xor
rcrb
ljmp
mov
int
jmp
cmpsb
mov
cwtl
adc
into
fistpl
and
test
cltd
jmp
aaa
jle
lock
or
push
adc
push
and
xchg
lods
mov
aas
fs
xor
mov
mov
aad
mov
mov
pop
std
mov
loopne
mov
aad
shrl
call
fnstsw
cmpsb
xor
sahf
add
push
movsb
xchg
add
out
or
data16
loope
add
data16
dec
sub
sub
and
mov
xorps
mov
inc
jge
pushl
sbb
sub
cwtl
dec
or
imul
mov
popa
adc
dec
jmp
out
mov
insl
ljmp
popf
in
jl
mov
aad
gs
push
pushf
repnz
jbe
data16
or
jo
add
adc
outsb
sub
hlt
and
xorb
in
jg
pop
test
mov
sbb
mov
fcmovnbe
pop
mov
test
jecxz
push
scas
push
mov
jp
sbb
out
or
and
xchg
mov
movsb
daa
popw
pop
xchg
sub
inc
out
inc
stos
jmp
mov
mov
jne
das
fwait
jp
les
and
dec
sub
outsl
sub
xchg
rorl
in
ja
inc
add
and
or
push
pop
js
pop
and
lods
shll
pop
in
xor
or
imull
xchg
in
and
ds
jle
mov
addb
lret
xchg
mov
sub
fimull
popa
imull
je
pop
inc
rorb
insb
push
adc
cmp
js
loop
pop
pop
mov
fcomps
sbbl
ss
fxch
fisttpl
sub
in
clc
imul
jmp
sahf
addl
mov
sbb
jg
push
stos
or
das
gs
ret
mov
test
push
test
cs
jbe
jmp
pop
add
and
std
mov
jecxz
stos
js
pushf
cmp
cli
mov
cld
adcl
insb
addl
sbb
fstpt
push
es
imul
add
pop
mov
jnp
leave
pop
ret
lahf
lds
and
mov
sub
sbb
sub
mov
iret
hlt
loop
lahf
pop
cwtl
in
mov
fadds
rcrb
pop
mov
shlb
out
xchg
sbb
and
inc
sub
loope
arpl
sub
or
std
xchg
pop
lahf
arpl
lret
cmp
sub
ret
ds
jne
insb
dec
jb
or
into
xor
mov
mov
lcall
sbb
lcall
xchg
mov
or
test
jbe
and
int3
mov
sbb
gs
sbb
sti
and
aas
stos
cmpsb
jmp
insl
lea
loop
inc
aam
ljmp
jle
scas
fsubrl
lahf
pop
cwtl
mov
rcll
stos
aad
aam
dec
lcall
sub
gs
mov
stos
in
adc
imul
or
mov
push
lock
je
mov
fcmove
mov
mov
dec
pop
jge
insl
or
scas
xchg
lods
mov
push
cmp
xor
nop
mov
push
les
jne
push
pslld
push
leave
mov
inc
jge
xchg
jno
andb
aas
mov
dec
test
xchg
and
xchg
xor
out
push
negl
loop
mov
and
mov
loop
mov
xor
loope
dec
pop
mov
mov
push
mov
mov
push
xor
gs
push
inc
or
rcll
cmp
in
xchg
sbb
cli
pop
pop
inc
repz
popf
mov
cmc
movsl
xorl
push
inc
cmp
fdivrp
push
ret
hlt
test
dec
mov
sahf
loop
popf
test
cmc
add
clc
dec
ret
push
orl
lret
clc
adcb
fwait
test
movsl
mov
add
sti
xchg
inc
pop
adcl
adc
xor
sub
ret
xor
fldt
push
pop
ja
loop
adc
rcrb
push
jbe
enter
cmp
inc
sub
psubusb
add
push
adcb
mov
and
mov
mov
inc
lret
pop
lock
ljmp
leave
lods
cmp
addb
ss
mov
outsl
push
pop
xlat
xchg
sub
pop
inc
cmpsl
out
jae
inc
fcmovnbe
sub
cmpsb
repnz
mov
jns
js
adc
into
inc
iret
mov
or
sbb
adc
popf
jmp
dec
out
lcall
jle
fiadds
adc
xor
mov
fmuls
in
add
arpl
jmp
cmpsb
rcr
and
xchg
xor
add
push
addr16
inc
sub
jb
mov
out
inc
insl
cmpsl
push
xor
push
cmp
lcall
jle
xlat
cmp
mov
cmp
aas
add
pop
xor
test
ja
pop
clc
xlat
fimull
fists
push
das
leave
and
and
gs
daa
clc
sbb
mov
fwait
icebp
and
and
push
sbb
xchg
push
test
stos
xor
popa
repnz
pop
dec
aaa
dec
pop
rcrb
inc
xchg
push
jp
in
loop
nop
sbb
bound
adc
jp
pop
test
je
xchg
dec
cmc
add
lret
xchg
nop
shrl
push
mov
movsl
xchg
push
andb
adc
push
pop
fs
das
cmp
xor
dec
sub
gs
and
jg
pop
aas
sar
push
aas
es
rolb
rcl
cmp
pop
sti
insb
push
nop
stc
insb
out
call
enter
mov
cmp
loope
adc
stc
or
leave
movsb
push
scas
cmp
in
jno
adc
rcl
popa
imul
mov
inc
int
inc
ss
jae
pop
aam
push
fnstcw
or
stos
pop
sub
imul
inc
and
push
sub
fimuls
inc
mov
out
lea
aaa
out
mov
sar
lret
sub
jns
xor
add
xchg
jl
xor
insb
add
pop
pop
pop
pop
loop
cs
mov
pop
dec
je
sub
insb
push
sbb
add
sarb
out
into
mov
push
sbb
stos
mov
xor
lock
mov
xorb
jb
jae
and
dec
lea
push
dec
jge
and
pop
xchg
lods
cmc
je
inc
xchg
mov
mov
mov
sbbb
hlt
and
mov
sbb
xchg
xchg
mov
and
jp
ljmp
sub
cmc
cmpsl
fmulp
rcrb
and
mov
push
push
std
repz
sahf
leave
cmpsb
push
adc
dec
or
ret
push
in
int3
out
push
cmp
fdivrp
mov
fstpl
cmp
or
cmp
into
adc
cmp
mov
lret
lds
adc
xlat
and
cmp
fldl
mov
push
xor
mov
fistpl
adc
jns
insl
mov
sub
cmp
inc
cmp
xor
mul
call
sub
dec
cmpsl
scas
dec
push
mov
mov
bndldx
pusha
iret
ret
or
ret
mov
hlt
scas
bound
xor
and
test
int3
pop
inc
mov
out
es
aam
int
xor
sub
adc
scas
stos
std
dec
push
add
lock
out
or
arpl
adc
mov
push
pop
or
ja
push
sar
test
rcll
stc
cmpsb
jo
cs
daa
mov
xchg
xchg
sbb
outsl
jg
lret
ja
vmwrite
inc
push
sbb
lods
in
sbb
adcb
scas
aaa
mov
es
repnz
das
call
pop
fs
and
outsl
outsb
add
mov
sub
mov
test
push
lds
mov
mov
cmp
lret
inc
push
inc
aas
stc
cmpsb
and
cltd
or
ss
mov
mov
mov
mov
cmp
dec
lret
sahf
pushf
jbe
push
movsb
iret
jno
lods
int
cld
mov
cmp
test
loopne
loope
pop
clc
imul
jne
leave
aaa
jnp
sub
dec
cmp
cltd
jp
lret
ret
adc
mov
mov
mov
scas
dec
or
call
mov
ret
dec
jmp
fwait
xchg
stos
test
push
xchg
mull
imul
mov
and
lods
push
push
pop
dec
inc
adc
aad
lods
jle
mov
cmp
arpl
popf
outsb
or
inc
mov
addl
in
xchg
xor
jnp
lods
sub
mov
and
jns
lahf
push
mov
scas
mov
sbb
fists
imul
cmpsb
lea
fdivrl
in
jns
cli
sbb
cmpsb
xor
cmp
test
jmp
push
pop
popa
pop
fwait
xchg
je
adc
loope
rolb
dec
imull
or
add
jp
fistpll
iret
sbb
daa
mov
js
jnp
mov
jae
stos
into
sarb
mov
fucomip
adcb
pop
cltd
nop
call
stc
sbb
push
aas
mov
ds
jge
rclw
mov
push
add
add
jno
icebp
out
sahf
call
mov
dec
pop
outsb
hlt
ret
jge
cmc
sub
push
sbb
dec
lret
daa
test
mov
add
rcll
jae
lds
add
push
mov
and
and
pop
cwtl
xor
iret
scas
popf
push
jb
mov
inc
leave
push
adc
into
aas
lcall
xor
sbb
ret
loop
jge
jl
in
scas
rorb
xchg
lret
xlat
dec
mov
repnz
mov
xchg
mov
push
adc
gs
sbb
xor
pop
mov
inc
mov
sbb
pushf
loope
cltd
jmp
negb
adc
mov
add
pushf
cmp
and
movsl
jecxz
sbb
adc
popa
sub
mov
add
jle
fsubrs
cmpsl
sti
pop
push
mov
das
push
pop
or
mov
loop
test
adc
inc
sbb
into
xchg
add
sbb
outsb
fidivrs
inc
fwait
dec
aas
pop
jns
jo
mov
mov
sub
push
and
add
enter
clc
dec
lock
icebp
mov
sbb
and
fs
xchg
cmpsb
xchg
xor
repnz
jg
testl
dec
mov
or
xchg
mov
out
pushf
icebp
int3
rcr
outsl
xor
je
push
int
push
movsb
mov
mov
mov
inc
sbb
xchg
mov
cmp
gs
cmp
xor
mov
or
mov
sub
movsb
pop
sbb
add
test
aas
push
clc
lods
or
dec
xor
loopne
leave
enter
cmp
fs
jmp
sbb
cmp
cmp
mov
notl
enter
mov
adc
mov
cli
out
lcall
or
fmuls
mov
shl
adc
out
push
xchg
pusha
adc
xorb
out
filds
and
xchg
xchg
faddl
add
jno
xchg
jl
scas
inc
jge
rcr
scas
lds
movsl
int
call
xchg
stos
adc
xlat
loope
dec
push
scas
shlb
es
in
loopne
xor
pop
lds
xchg
sub
sarb
aaa
mov
jno
xchg
ja
jne
pop
test
mov
fldenv
sub
dec
push
push
hlt
outsl
fcmove
mov
and
out
ds
les
sub
or
push
shrl
xchg
xchg
add
sub
xchg
out
lods
shr
push
xor
xchg
mov
mov
jo
jne
add
push
loop
movb
mov
mov
idivb
dec
xchg
lods
icebp
dec
popf
jg
mov
add
cmpl
push
adc
cmp
jbe
lahf
jle
jb
fs
pop
pop
and
popf
lds
pop
inc
lret
pop
mov
aad
roll
test
cmc
mov
pop
rclb
adc
out
lock
insl
cmp
fisttpll
ror
lahf
popf
xchg
outsb
or
faddl
xor
ss
mov
pop
hlt
sbb
pop
xchg
sbb
addb
ljmp
out
pop
aaa
call
xor
jbe
adc
popf
mov
mov
sub
inc
mov
jmp
popf
push
ja
cmp
leave
add
call
lods
outsb
pop
and
std
fs
sbb
xor
cmp
call
adc
mov
addr16
dec
clc
mov
mov
dec
xlat
or
xor
ficompl
and
cmp
cli
lods
jle
nop
rorl
xor
mov
pop
mov
push
pop
inc
pop
dec
inc
das
adc
loope
call
push
int
pop
xchg
dec
mov
mov
js
mov
mov
push
xchg
inc
xchg
vpmulhw
imul
pop
insl
ret
or
inc
rorb
lds
adc
xchg
cmp
sub
jae
mov
adc
in
cmp
jns
add
or
loopne
pop
dec
mov
mov
mov
shr
adc
or
cmc
push
dec
in
jp
inc
out
dec
cmp
pop
or
jp
jge
and
enter
loop
in
and
xor
enter
icebp
cli
popa
or
xchg
push
sub
cwtl
pop
add
imul
lahf
out
push
jns
mov
cli
jae
lock
jae
inc
xchg
movsb
pop
and
lock
cwtl
inc
adc
and
repz
clc
sub
xor
popl
inc
mov
push
mov
sahf
sbb
repz
push
ret
cltd
jae
jecxz
andl
cld
pusha
in
dec
pushf
out
mov
aam
mov
mov
dec
stc
xor
mov
mov
rcll
test
sbb
lea
scas
loope
lahf
in
sbb
xchg
data16
jno
int
cmp
push
clc
movsb
fwait
add
pop
mov
test
nop
fmull
inc
add
lods
mov
xchg
std
or
out
rolb
aaa
test
mov
sbb
or
xor
mov
jno
popa
mov
dec
cltd
jecxz
pop
fbstp
pop
adc
popa
and
mov
xor
ds
fisttpll
pop
push
adc
addr16
xchg
mov
cmp
sahf
xchg
insb
das
sub
aad
icebp
xlat
outsb
sbb
nop
lcall
add
das
mov
scas
push
lret
rcrl
cmp
push
dec
int
or
push
rcrl
cmpsl
lock
inc
dec
sbbb
cmpsb
in
in
cmc
jnp
dec
dec
lods
adc
out
lcall
and
test
jne
lret
out
adcl
test
lahf
xchg
pop
adc
arpl
jle
bound
lock
or
int
out
cmpsl
mov
push
lock
and
stos
mov
dec
outsl
cltd
dec
push
jmp
mov
rorl
inc
cmp
jne
addb
cmp
xor
mov
ret
pop
mov
or
fistps
mov
mov
ljmp
ficoms
cmpsb
mov
jp
inc
add
bound
xlat
add
sahf
data16
mov
add
les
push
bound
push
ds
imul
and
std
cmpb
lret
sbb
out
or
leave
jge
or
gs
jmp
stos
adc
mov
jne
dec
scas
push
xchg
jno
xchg
mov
sbb
scas
or
sub
pop
movsl
mov
les
andl
mov
mov
dec
pop
xor
or
lods
aam
push
xchg
pop
xchg
mov
jae
test
mov
in
std
pop
jp
daa
xchg
imul
movsb
pop
xchg
call
leave
mov
outsl
mov
je
daa
std
out
dec
das
jmp
dec
jno
cmp
cmp
add
test
flds
cmp
mov
push
xor
jnp
or
and
add
mov
dec
out
enter
mov
add
push
es
mov
imul
lods
cmp
enter
pushf
jp
test
mov
inc
popf
mov
add
xchg
dec
roll
outsb
inc
lcall
test
pop
dec
sbb
rclb
cmp
arpl
sub
inc
dec
jo
cmp
push
negb
rcrl
jne
pushf
js
iret
imul
ret
cld
push
jo
fimull
mov
jmp
mov
les
imul
sahf
in
push
aad
and
shrl
inc
jo
aad
lods
call
cmp
outsb
add
mov
pop
cmp
or
sbb
push
xchg
sbb
fisubrs
jg
aaa
mov
or
scas
cmp
cmc
sbb
xor
into
js
cmp
sub
movsb
stos
call
cmpl
push
repz
test
and
mov
mov
mov
fisubl
mov
lret
xor
cli
pop
aaa
dec
lcall
jnp
inc
mov
ds
clc
popa
push
jmp
xchg
ss
scas
test
xchg
xchg
sub
and
or
xchg
jns
scas
push
pop
mov
jnp
cmp
roll
ror
adc
pop
mov
mov
inc
imul
dec
sub
aas
dec
xchg
ficompl
mov
mov
sbb
jmp
fsubrs
jnp
jae
repz
je
notl
jmp
xchg
in
mov
dec
sbb
push
push
jne
push
repnz
mov
leave
imul
mov
xor
or
pop
fstpt
das
outsb
in
insb
icebp
cltd
jecxz
mov
into
dec
add
jmp
sub
arpl
cmpsl
mov
leave
cld
xchg
and
ficomps
push
and
shl
add
cltd
bswap
in
cmp
hlt
push
fidivl
xchg
ljmp
std
or
push
or
xor
sbb
xor
xor
inc
andb
xchg
dec
cld
xchg
ret
adc
inc
stc
lods
xor
es
push
pusha
test
adc
lret
sti
xchg
mov
jg
idiv
lea
scas
and
sbb
xchg
into
pop
inc
fcom
pusha
pusha
jle
aas
mov
inc
pcmpgtb
and
in
outsl
lret
push
inc
push
fildl
ret
xor
shll
cmp
aaa
pop
dec
mov
mul
jae
pop
in
cs
lea
inc
les
or
adcl
mov
les
add
and
in
pop
add
in
jo
sub
xchg
pop
sbb
add
mov
sbb
add
cmp
push
cmpsl
ffree
mov
or
xor
dec
iret
movsl
add
or
mov
out
xchg
xchg
idivl
stc
sarb
jns
mov
cmp
xor
and
shll
les
loopne
pop
cli
mov
dec
ljmp
xchg
add
jne
cwtl
xchg
adc
jae
mov
sbb
mov
xchg
outsb
or
or
add
clc
rcrb
mov
and
mov
cli
hlt
adc
out
jbe
pushf
notb
lret
cwtl
lcall
movsl
lret
and
packssdw
nop
es
enter
sub
sbb
mov
lds
fsts
adc
xchg
outsl
lock
sbb
add
js
xor
inc
mov
add
jno
addr16
and
dec
mov
decl
pop
fiaddl
inc
mov
sbb
rorb
mov
ret
test
jne
cwtl
or
jl
push
and
mov
js
mov
and
or
popf
stos
jecxz
ret
cwtl
add
lcall
pop
xchg
aad
in
xlat
aas
mov
jnp
lcall
das
push
xor
std
or
sbb
popf
iret
cmp
int
sbb
inc
sub
daa
repnz
mov
jp
setl
mov
ja
pop
mov
xchg
jle
jb,pn
nop
push
or
mov
xchg
call
scas
arpl
mov
ss
arpl
jl
pop
aad
xor
sub
cmp
gs
cmp
push
cwtl
sbb
imul
xor
fdivrl
clc
les
mov
xor
xor
out
call
add
frstor
test
inc
pop
xchg
out
sbb
pop
fwait
fs
push
cmc
pop
cmp
lods
mov
dec
jp
push
addr16
leave
mov
fists
pop
lea
shrb
cli
sbb
adc
mov
pop
jo
scas
pop
mov
pushf
scas
fs
int
jg
sbb
js
imul
cmp
movsb
out
adc
in
bound
data16
outsb
mov
and
mull
inc
jnp
loope
jmp
ja
inc
loop
xchg
cwtl
sti
xchg
sbb
jb
shll
mov
es
push
imul
sbb
fsubl
repz
clc
pop
pop
mov
lods
push
ljmp
out
cmove
pop
pop
ja
out
aaa
lahf
int
xor
jle
jo
sbb
insl
mov
sub
inc
mov
add
mov
push
push
xlat
fsubrp
mov
repnz
sub
push
movsb
jae
stos
xor
out
ret
jo
jno
es
fcompl
add
int3
mov
mov
mov
xchg
rorb
cmp
leave
and
mov
cmp
mov
in
or
xor
jnp
jns
push
adc
and
and
test
cmpsb
lahf
pushf
in
cli
dec
pop
rcll
jg
add
cwtl
mov
cmpsb
cmp
jl
in
movsl
ror
aad
aam
and
push
nop
out
lods
jns
lret
sbb
rcrb
outsl
divl
cmp
clc
les
adc
cmp
out
push
sbb
dec
cmp
out
sub
sbb
popa
je
mov
iret
push
inc
sub
mov
push
call
jecxz
add
das
push
inc
std
add
adc
fisubrl
lods
mov
out
or
mov
movsl
loop
mov
sbb
sahf
jmp
movsl
mov
rorl
movsl
sti
stos
lret
sub
lea
fstl
or
ret
adcl
dec
xchg
xor
adc
cmpsb
inc
mov
pop
fadd
push
fiaddl
imul
in
mov
negb
stos
shr
mov
fisubrl
test
call
andb
cmc
fsubs
int3
mov
ret
pop
cmp
enter
sarb
and
ljmp
fcmove
fimuls
cmp
mov
sub
jne
mov
stos
ret
orb
pop
cmp
fsin
adc
repz
mov
cmpsl
and
movsl
xchg
fimuls
rcll
andb
loop
push
and
push
sahf
sub
jle
mov
loope
mov
adc
or
bound
fdivrl
push
inc
cmp
int3
jmp
test
std
pop
int
addr16
addl
push
test
push
pop
sarl
data16
popa
add
daa
aam
loope
inc
or
pop
test
rcll
pop
div
lcall
sub
enter
mov
scas
mov
jge
ds
xor
adcb
inc
addr16
outsb
test
xchg
loope
lock
pop
fsubl
ja
mov
add
jmp
pushf
call
in
ret
repz
movsb
push
push
sbb
xor
jge
aaa
mov
dec
xor
lea
test
jmp
lock
arpl
dec
fbstp
adc
add
imul
dec
mov
insl
push
mov
pop
loopne
jg
mov
or
jl
cwtl
xor
cmp
mov
jl
add
mov
aaa
cmp
les
repnz
call
js
loop
xchg
orb
or
push
jnp
pop
adc
sarb
rcr
fs
pop
sub
push
inc
mov
push
js
cltd
daa
inc
xor
aas
enter
adc
adc
call
imulb
repnz
add
loope
inc
push
lret
cmpsb
ret
in
push
sub
pusha
pop
pop
or
pusha
lods
add
jno
mov
mov
push
inc
movsl
and
or
fstl
lret
call
jecxz,pn
mov
cmpsl
push
sahf
xchg
adc
mov
mov
lcall
push
enter
adc
test
dec
insb
hlt
pop
dec
cmpsb
mov
repz
jg
pop
aad
add
loop
xor
and
jo
cld
in
inc
push
mov
xor
filds
jne
je
pop
mov
imul
push
cli
loopne
repz
push
repnz
mov
and
scas
aaa
xor
dec
add
push
fistpll
add
fdivs
testb
inc
mov
mov
pop
adc
cmp
adc
xor
cltd
xchg
ja
fmull
push
pop
push
jbe
jns
mov
dec
pop
xchg
and
fwait
jl
fisttpll
inc
sti
or
loop
and
dec
loopne
dec
pop
xchg
int3
jo
xchg
cmp
mov
cmp
je
test
pop
sbbl
pop
push
loopne
and
dec
mov
ds
jne
into
sarl
lock
and
rcr
dec
js
cmpsb
sub
xor
popa
lea
mov
les
stc
or
or
test
test
movb
mov
jle
add
pop
cld
xor
insb
fdiv
std
adc
xchg
xor
shr
in
mov
xorl
iret
inc
and
enter
fsubrs
sbb
arpl
repnz
fs
hlt
push
xchg
adc
scas
and
adc
xor
mov
and
or
repz
jecxz
mov
sub
mov
mov
xchg
popa
lods
in
cmp
lods
dec
mov
cli
mov
add
popa
cmp
jb
add
aad
dec
mov
adc
mov
xchg
int
mov
push
inc
push
cmp
test
add
daa
imul
nop
test
cmp
test
sbb
mov
or
sub
xor
dec
test
rorb
adc
mov
pop
mov
lret
cltd
out
mov
xchg
sub
call
mov
xor
shrl
jb
push
mov
out
data16
mov
fmull
dec
fiadds
dec
cmc
mov
popf
dec
sbb
mov
call
jg
mov
or
imul
dec
add
sbb
jbe
outsl
jecxz
ret
fwait
icebp
adc
es
pop
loopne
xchg
pop
lock
ljmp
popf
jae
push
xchg
mov
ret
jae
push
popa
imul
dec
das
dec
outsl
jbe
mov
jb
dec
push
xor
adcb
sub
push
aad
push
mov
jecxz
aad
aas
pop
in
frstor
imul
jp
and
pop
pop
sub
or
sub
scas
xor
mov
shl
push
mov
xchg
jns
test
adc
xchg
sub
jp
out
cmp
adc
fildl
push
sub
test
push
insl
imul
or
daa
cli
loope,pn
adc
xchg
test
adc
adc
dec
insb
and
xor
dec
push
jnp
and
sahf
stos
mov
inc
lret
orl
outsb
mov
pop
ja
flds
xchg
add
scas
pop
jbe
or
push
push
mov
cwtl
xor
mov
out
jge
cmp
into
in
adc
push
punpcklwd
jecxz
jl
jo
xor
pop
dec
push
cwtl
cmpsb
in
repnz
adc
into
cmp
outsb
scas
xor
out
xor
ret
ljmp
pop
xchg
jnp
xchg
and
jle
push
sub
or
pop
movzwl
fwait
pop
loop
insb
lods
ds
stos
fildl
lods
ds
pop
mov
out
rol
inc
and
sub
dec
dec
sbb
fiadds
fimull
insl
cmc
inc
mov
mov
mov
or
nop
rorl
sbb
in
lret
jbe
in
sub
ret
repnz
push
cmpl
or
mov
mov
sub
inc
adc
xchg
fistpll
mov
les
or
pop
sbb
orb
cmpsl
jnp
dec
sbb
shlb
adc
shrl
jo
fwait
cmp
in
lret
sub
mov
cmp
xchg
shll
cmc
fbstp
enter
or
ret
or
jnp
jnp
push
in
cli
stc
xchg
jae
jecxz
cmp
movsb
lea
or
xchg
adc
or
mov
mov
pop
push
mov
es
cmpsl
lods
outsb
mov
cwtl
mov
and
pushf
push
or
fsubs
pop
pop
xchg
pop
test
aas
inc
sbb
aad
test
in
outsb
popl
xchg
lea
push
into
ja
add
sub
jns
test
jae
cmc
shrb
mov
sub
roll
jge
xor
xor
test
sbb
repnz
mov
jle
sbb
or
andb
fildll
fisubl
je,pn
fldt
cwtl
aam
imul
iret
or
push
mov
testl
das
loope
xor
adc
stc
jmp
roll
insl
cmp
lea
clc
and
inc
sahf
out
push
xchg
test
in
scas
pop
nop
and
add
fwait
jge
inc
jmp
gs
xchg
das
sub
jns
dec
addr16
push
dec
mov
ret
and
fnsave
xor
sbb
lods
push
pop
scas
das
test
jecxz
cmp
pop
cltd
sub
jno
in
mov
push
or
or
jmp
scas
add
fs
mov
xor
cmp
sbb
adc
shl
ss
das
testb
movsl
and
fldenv
sub
dec
adc
sbb
xor
xor
movsl
add
add
adc
pop
cmp
fdivrs
sub
lret
fstl
add
cwtl
mov
cmpl
adc
cmp
adc
rcrb
or
xor
dec
dec
scas
push
and
xchg
sub
inc
imul
lods
mov
xlat
push
movsl
pushf
adc
mulb
je
inc
or
lds
pop
test
insb
jo
inc
xor
fxch
es
mov
in
jmp
insb
pop
lods
scas
stos
adc
cmp
cld
popf
lds
test
lods
cli
cmp
or
ss
jle
sbb
inc
stos
dec
push
adc
loope
je
jecxz
mov
push
xchg
popa
in
xlat
sti
push
pop
pop
aas
and
test
mov
test
mov
fwait
insl
ret
inc
js
test
les
rorl
nop
cwtl
push
mov
xor
mov
int
mov
mov
andb
push
or
xchg
outsl
mov
popf
ret
cmp
push
mov
rcll
mov
test
mov
sub
sti
inc
push
or
outsl
inc
inc
jmp
fldl
push
mov
cmp
rcrl
mov
jo
xchg
xchg
and
comiss
into
pop
xlat
call
mov
hlt
mov
iret
mov
mov
rcll
push
push
sub
sub
or
movsb
sarl
test
mov
imul
testb
ret
cmpsl
cs
ret
inc
pop
jns
adc
mov
movsl
cwtl
or
test
das
hlt
push
and
adc
adc
mov
adc
decl
daa
es
shl
push
in
sbb
fcoml
dec
jb
ret
fxch
movsl
xlat
xchg
pop
jg
fcmovne
inc
insb
mov
cli
dec
mov
cli
push
cmp
jno
cmp
dec
push
es
ret
divl
pop
arpl
mov
cmp
push
lcall
xchg
cmp
jp
lahf
sub
or
and
ljmp
pop
test
mov
pop
sbb
sub
push
inc
subb
stc
or
cmp
adc
aaa
mov
dec
dec
push
sub
inc
cmpsl
xchg
aaa
pop
or
xor
sbb
pop
jae
aaa
mov
int
jecxz
lods
dec
imul
fwait
insb
movsl
jo
loop
leave
xor
popa
aaa
xor
push
rol
jns
gs
mov
jno
enter
fadds
jno
std
xor
loopne
movb
addr16
cmp
je
mov
sbb
mov
jl
inc
jns
int
inc
ss
fdivrp
add
fsub
and
fmull
rolb
imul
cmp
push
inc
push
jno
les
mov
inc
test
cmpsl
adc
mov
mov
push
add
je
cld
cmp
mov
push
sbb
push
leave
enter
pop
push
ret
std
cmp
dec
gs
add
loop
iret
and
rep
inc
f2xm1
jb
mov
icebp
add
insl
dec
jmp
in
add
sbb
orl
aas
dec
shlb
jge
mov
inc
sub
mov
fdivrp
xor
xchg
mov
arpl
cmp
fwait
inc
ss
daa
fildl
xchg
dec
and
sbb
mul
and
lods
test
jns
ljmp
lret
jge
ror
into
insb
sahf
push
scas
pop
adc
add
dec
pop
stos
clc
lods
shl
add
dec
xchg
repnz
shll
outsl
sub
icebp
mov
in
vmwrite
lret
mov
mov
test
andb
dec
sahf
ss
lcall
fwait
dec
fsts
mov
divl
pop
cmp
cmp
pop
pushf
push
les
jno
movsl
jecxz
jb
test
mov
enter
fistl
test
add
pop
lret
hlt
add
fs
xchg
addl
aas
sbb
pop
adc
push
imulb
and
jno
xor
insl
bound
mov
push
jnp
add
test
adc
cmpsb
dec
mov
scas
loope
andb
sbb
pusha
sbb
test
lock
inc
out
sahf
xor
push
fcompl
pop
mov
xor
and
add
and
sub
rclb
out
jle
jl
xorb
mov
in
shll
push
jne
push
ret
imul
sbb
iret
mov
jns
pop
and
pop
mov
jnp
mov
fnstsw
add
push
stos
test
ret
cmp
jle
dec
or
adc
loope
cmpps
push
repnz
adc
jns
cmp
fisubrl
rolb
xor
test
sub
add
push
or
movsl
jbe
xor
inc
shlb
cld
sti
arpl
inc
sub
push
xchg
xor
adc
movsb
dec
rorb
inc
mov
dec
outsl
lcall
ss
roll
inc
dec
popf
stc
pop
jge
and
jne
or
icebp
add
das
sbb
mov
notl
insb
jecxz
mov
jg
lret
mov
mov
pop
adc
hlt
mov
or
sub
mov
pop
jmp
out
jp
xchg
inc
dec
mov
ljmp
jb
lret
stc
sahf
and
sbb
add
or
mov
xlat
les
mov
mov
les
in
int
lcall
in
adc
fnstenv
adc
jle
je
push
mov
lahf
adc
out
call
in
xchg
loopne
xor
test
pop
push
push
hlt
sahf
lret
pop
sub
lods
sbb
test
mov
xchg
xor
cmp
clc
add
push
enter
push
clc
mov
inc
jl
adc
and
lods
xchg
outsb
mov
xchg
aad
leave
popa
dec
mov
test
or
int3
cmp
mov
pop
aas
mov
cmpsl
mov
cld
scas
adc
ss
test
mov
xchg
ret
repz
loope
pop
je
outsl
xor
or
mov
adc
out
dec
lods
push
adc
cmpsb
clc
add
mov
cmp
stos
fs
and
or
mov
jl
xchg
push
aas
cs
ficomps
and
adc
rep
inc
enter
rol
pop
in
add
shrb
sbb
adc
sbb
pandn
xor
mov
push
loop
call
scas
iret
dec
ljmp
stos
fisubrs
ss
in
cmc
sub
ja
mov
push
cli
aaa
icebp
or
jnp
cmc
fstl
fnstenv
cmp
cmp
sbb
mov
outsl
outsb
fisubrl
mov
rclb
outsl
lret
movsb
xor
inc
test
test
or
outsb
jl
out
out
fldcw
mov
popa
jl
mov
sub
fsub
movsb
into
pop
sub
out
gs
ds
xor
push
movsl
shlb
stc
jne
cs
ret
jno
lods
xor
pusha
inc
pop
cmp
mov
jno
pop
or
or
xchg
jno
or
inc
inc
xchg
fstp
in
clc
les
add
out
lret
sbb
iret
adc
ss
cmp
sub
adc
mov
and
jo
das
pop
mov
xchg
mov
xor
test
lahf
gs
and
das
inc
pop
stc
mov
faddp
sub
sbb
lret
sub
jb
cmpl
subb
rcrb
lahf
mov
dec
insb
mov
dec
adc
inc
jnp
mov
inc
cmp
inc
mov
cmpsl
lods
pop
push
adc
xor
sbb
lock
xchg
arpl
ss
lock
or
mov
and
jmp
mov
fstpl
insl
and
add
pop
iret
and
and
imul
ret
leave
cmp
and
jl
push
mov
mov
push
aam
xlat
cmp
jns
jne
imul
aad
cmc
repz
std
xchg
out
and
lcall
xchg
mov
cmp
fldt
addr16
leave
xor
rcrl
insl
incb
loopne
jo
pop
test
jp
iret
fxch
repz
fldl
inc
push
and
cmc
in
insl
cmp
ror
mov
div
add
ffreep
inc
loop
push
xchg
mov
sbb
aaa
clc
mov
sbb
je
jle
sub
fdivl
inc
fs
push
xor
adc
inc
aaa
dec
push
les
ljmp
les
push
inc
pop
sub
imul
stos
dec
in
aas
ret
push
mov
sub
add
in
std
mov
push
inc
clc
inc
addr16
fbstp
into
popf
mov
loope
js
cmpsl
scas
sub
lea
xor
in
cmc
mov
jle
int
sub
shl
insb
and
mov
lret
inc
dec
lds
out
and
cmp
test
add
jb
add
clc
es
and
pop
movsb
cmp
adc
pusha
or
test
xchg
adc
push
movsb
mov
add
int
outsb
dec
and
sahf
push
outsl
int3
enter
cli
adc
test
stos
adc
out
mov
mov
fs
das
mov
fs
pop
inc
cmpsl
fimuls
js
fisubrs
daa
je
push
sbb
cli
out
mov
test
cwtl
fdivrs
mov
mov
stos
jo
inc
xchg
sub
decb
mov
cmp
xorb
inc
loop
dec
add
inc
in
add
mov
add
pop
mov
sbb
orl
cmpsb
incl
sbb
pusha
aad
ret
and
cmpsb
jbe
cmpsb
loop
inc
outsb
xchg
ljmp
pop
inc
cmp
jnp
adcb
push
mov
jg
sahf
jp
mov
lods
out
mov
daa
enter
xlat
notb
pop
add
inc
adc
stos
cmp
lea
cld
add
xchg
repnz
gs
xor
addr16
mov
clc
mov
shrl
jae
in
aam
cmpsb
adc
sbb
inc
stc
mov
inc
mov
sti
push
cmp
aaa
sub
dec
inc
mov
sbbb
pop
or
movsb
clc
inc
in
xchg
test
sub
jns
xor
adc
xchg
inc
loopne
inc
imull
out
int3
lret
pop
push
dec
pop
jp
inc
push
pop
fldt
jne
fildll
ret
or
iret
test
xchg
dec
inc
imul
insl
test
hlt
ja
lret
test
push
dec
mov
cmpsb
mov
nop
rep
sub
imul
jbe
in
out
cwtl
scas
mov
clc
add
xlat
dec
add
aaa
lods
outsl
mov
jmp
mov
and
jle
mov
das
mov
cmc
mov
or
fsubrl
cs
imul
and
xor
jp
push
mov
lcall
loopne
fnstcw
xor
mulb
cmp
push
ss
int3
cli
imul
mov
fcomp
and
pop
fildll
xchg
adc
dec
movsb
outsb
pop
pop
jae
or
cwtl
gs
inc
xchg
ret
jl
push
jns
ljmp
jbe
and
insl
mov
jb
cltd
hlt
pop
xor
nop
aam
mov
popf
lcall
inc
out
inc
cs
push
aaa
popl
dec
pop
js,pn
scas
pop
imul
push
mov
dec
in
imul
fstpl
les
push
enter
aaa
sub
pop
xchg
imulb
aad
and
dec
jb
jo
and
xor
adc
pop
xchg
and
fsubrs
fs
sbb
daa
ja
sbb
cmp
jp
daa
mov
push
sub
in
cmp
inc
mov
or
add
bound
xchg
add
adc
imul
shll
inc
pushf
je
sti
xor
ret
scas
loop
or
jmp
inc
cwtl
cmp
sbb
xchg
test
cmpsl
cmc
aam
fstps
addl
mov
loope
or
out
cwtl
pop
fisubs
jl
and
imul
push
pop
mov
xor
getsec
pop
push
cli
sbb
push
les
dec
pop
cmpsb
mov
pop
and
bswap
repz
stos
out
inc
pusha
ret
jo
jg
in
ljmp
int3
lock
out
mov
out
inc
push
jb
outsl
dec
ffree
mov
stos
jbe
dec
pop
dec
pop
pop
in
mov
stos
adc
repz
rcrb
add
popf
mov
xchg
mov
sub
push
in
scas
dec
adcb
xchg
xor
inc
push
cmp
pop
pusha
jle
and
outsl
and
jge
xchg
jle
inc
aad
xchg
das
inc
push
in
iret
sbb
jbe
dec
adc
insb
nop
mov
inc
mov
inc
repnz
mov
jge
out
and
xor
add
fwait
xor
sub
rorb
insb
dec
mov
repz
lahf
bound
adc
icebp
scas
ret
sbb
pop
pop
imul
mov
nop
sbb
test
popa
mov
push
xchg
xor
pop
popf
mov
sub
sub
aaa
jecxz
dec
addr16
in
popa
imul
cmp
nop
mov
arpl
clc
cli
and
movsl
add
cmc
pop
sbb
lock
in
xchg
mov
std
mov
or
outsb
pusha
xor
decb
stos
subb
dec
or
jnp
adc
sub
sbbl
mov
mov
sub
or
jge
cmp
dec
add
outsl
es
mov
mov
test
dec
nop
aad
sahf
bound
call
cld
test
inc
inc
cmp
out
pop
mov
push
xor
xor
movsb
scas
loope
push
jne
rcrl
pop
fnstenv
jb
add
pop
mov
in
sbb
mov
lds
sbb
adc
or
adc
stc
out
push
mov
inc
cli
dec
mov
xchg
lret
stc
add
cmp
mov
inc
push
sub
les
push
shrb
inc
movsl
pop
mov
sbb
aaa
dec
mov
mov
sahf
ret
cwtl
loopne
xchg
push
mov
je
andb
int
jo
out
out
mov
mov
aaa
in
pop
stos
es
es
xor
mov
fiaddl
cmp
sti
inc
mov
repnz
sti
adc
cli
xchg
stc
push
gs
insb
dec
cmp
movsl
sub
mov
loope
sub
xor
sbb
test
mov
push
out
xchg
test
inc
addr16
and
mov
leave
cmp
lret
mov
mov
cltd
mov
pop
andb
xor
cwtl
jnp
sbb
sbb
cltd
fs
in
inc
inc
mov
int3
out
stos
int3
sarb
pusha
call
xchg
pop
xor
sbb
nop
dec
xchg
push
mov
jae
and
enter
mul
inc
lea
stos
dec
jne
stos
jge
in
jb
das
push
or
jmp
fnstsw
out
or
into
adc
iret
out
fsubl
push
scas
xor
out
ja
fbld
mov
and
stos
adc
test
ja
sbb
pop
xorb
add
push
xchg
iret
call
popa
sub
pop
jecxz
pop
and
enter
es
inc
sub
lret
in
mov
aaa
jmp
dec
stos
movsl
jbe
mov
sub
xor
sarb
mov
cmp
not
push
ret
sub
push
mov
insb
and
cmp
xor
dec
xor
jmp
icebp
xchg
inc
enter
add
push
mov
adc
pop
mov
mov
lock
push
data16
aad
cmc
add
and
sbb
sbb
popf
and
gs
test
icebp
clc
cmpsb
sbbb
faddl
insl
aaa
fs
gs
push
dec
es
shll
cli
sti
pusha
pushf
jns
inc
adc
jl
dec
push
cmc
mov
ret
sbb
sub
jns
pop
jbe
mov
mov
inc
mov
addl
push
xor
mov
sbb
xor
pushf
ret
dec
int3
jl
imul
or
pop
jne
cmpsl
push
shlb
push
add
push
xchg
hlt
jmp
hlt
aas
pop
inc
popa
pop
mov
adc
cmc
in
scas
xor
xchg
jnp
adc
aas
jo
out
int
movsb
orb
test
jle
pop
mov
cmp
jg
lods
out
mov
repnz
ljmp
and
mov
test
dec
push
aam
movsl
fistps
test
adc
dec
fldln2
in
mov
dec
movsl
cli
int
xchg
cmpsb
mov
sub
mov
sbb
xor
aas
popf
add
jno
sarb
add
push
in
mov
sbb
push
popf
in
xchg
or
xchg
sbb
jp
mov
pushf
cltd
inc
je
mov
es
push
mov
mov
popf
mov
inc
shl
xor
pusha
xor
mov
jmp
fdiv
mov
pop
sub
or
adc
int
pop
test
mov
dec
sbb
rcl
inc
gs
pop
cs
jmp
push
cld
std
sub
test
mov
sub
lret
mov
or
mov
pop
ja
jge
or
dec
imul
xor
dec
push
dec
faddl
add
mov
push
inc
inc
push
mov
jg
jae
scas
mov
mov
sbb
mov
leave
shll
cmp
bound
push
adc
ret
adc
daa
les
cld
fwait
movsb
hlt
add
loopne
out
push
dec
pop
mov
into
in
sahf
add
jle
scas
pop
xchg
jg
out
push
add
pop
popf
and
mov
and
scas
cmp
and
push
clc
pushf
cltd
arpl
inc
xlat
hlt
mov
xchg
pop
sub
test
aaa
sbb
out
mov
cmp
or
cmp
mov
fnsave
into
imulb
lcall
shrb
out
jp
fsubp
xor
out
cld
jl
inc
mov
aaa
scas
and
inc
jg
inc
cmpsb
shlb
scas
pop
test
into
lods
jl
adc
cmp
add
xor
push
repnz
mov
cmpsb
out
pop
pop
or
push
fmul
sub
sub
xor
sbb
ud2
jbe
xlat
push
fists
push
sub
push
mov
and
and
fwait
xor
lret
sbb
or
scas
xor
add
push
push
lcall
push
sbb
xchg
insb
je
into
jno
lods
xor
lods
shll
mov
pop
mov
xchg
dec
mov
jno
add
cmpsl
mov
and
lcall
push
pusha
and
mov
mov
xchg
push
fstp
mov
jmp
push
je
pushf
aas
mov
icebp
cwtl
inc
out
adc
adc
lcall
leave
and
into
js
adc
int
call
int
xchg
and
mov
mov
mov
and
stc
std
aaa
je
ljmp
test
int3
sbb
add
xor
cmp
rorb
les
sub
loopne
jl
ja
lret
cmpl
cmp
and
jecxz
mov
inc
orb
mov
aad
les
mov
cmpsb
push
insb
leave
ret
loopne
icebp
fcmovnu
inc
ljmp
jecxz
lock
fucompp
mov
movzwl
mov
orps
inc
mov
lock
in
mov
enter
aad
mov
push
mov
mov
mov
cli
mov
mov
mov
cmp
inc
adc
int3
icebp
or
jae
jo
loopne
lret
mov
fdivp
cmp
js
adc
out
xchg
in
dec
mov
pop
mov
hlt
dec
or
mov
or
push
adc
mov
out
xchg
cmc
mov
inc
mov
xchg
ljmp
stos
mov
nop
inc
test
add
daa
jl
incl
insl
ret
mov
movsl
jb
lea
mov
js
sub
scas
inc
dec
mov
lea
mov
ficoms
add
sbb
inc
xor
popf
push
into
or
clc
std
mov
xchg
mov
xchg
jp
pop
shl
out
mov
dec
lock
and
scas
movb
jecxz
ds
dec
xchg
into
and
xchg
push
cmpsb
and
xchg
add
xor
push
call
mov
movsb
scas
push
inc
or
jl
cld
cld
movsb
scas
test
fwait
mov
test
mov
in
adc
push
mov
jb
aaa
lods
out
adc
xor
scas
sbb
sbb
mov
jns
inc
xchg
lahf
inc
dec
jno
adcb
fisubl
leave
jnp
bound
arpl
mov
mov
dec
sub
xchg
mov
add
sbbb
fiadds
inc
fsts
cwtl
ficomps
sahf
mov
test
int
dec
sarb
pop
stos
and
or
aam
and
into
inc
mov
negl
addr16
in
mov
loop
fnstenv
int3
add
lea
cmpb
popa
and
dec
out
pop
mov
ja
mov
arpl
ret
inc
mov
ret
cmp
sbb
xchg
mov
add
dec
jge
ret
inc
add
movsb
mov
push
xchg
xchg
jne
cli
mov
inc
mov
cmpsb
lea
jl
ss
adc
test
xor
inc
fdivl
in
dec
mov
or
sbb
jecxz
xor
stos
jl
or
mov
push
clc
decb
add
std
jno
mov
std
sbb
lahf
push
imul
mov
mov
push
pop
cmp
loopne
and
aas
and
mov
rorl
xor
ret
fdivrp
or
jecxz
hlt
or
outsb
xor
cltd
ljmp
mov
xchg
pop
ja
in
loop
or
mov
cmp
pop
pop
mov
in
insb
push
and
push
cld
sti
cs
xchg
loop
mov
cli
xor
shlb
ret
pop
xchg
mov
dec
testl
pusha
inc
mov
xchg
push
cmpsw
daa
andl
hlt
cltd
lahf
gs
cwtl
sti
jmp
lahf
add
xchg
mul
ja
lahf
jbe
ret
pushf
test
lret
adc
iret
cmpsb
cmpsb
iret
int3
rolb
testl
scas
ljmp
mov
mov
mov
sub
push
lods
repz
hlt
lret
mov
xor
or
ds
shlb
xor
pop
mov
pop
insb
inc
and
mov
rcll
jo
in
stos
push
sbb
push
shlb
and
push
imul
shlb
fsubr
adc
or
jl
cli
loop
ds
repnz
dec
xchg
inc
add
fcomps
aas
mov
popf
sahf
leave
push
aas
in
and
pop
jge
call
repnz
loopne
sahf
push
imul
xchg
inc
add
stos
out
add
fists
stc
idivl
xor
loop
lcall
xor
pop
shrb
and
or
adc
sub
out
cmpsl
jns
jecxz
inc
jg
and
bnd
fcmovnbe
xor
and
adc
xchg
mov
mov
outsb
mov
mov
xchg
jge
scas
repnz
mov
cmpsb
mov
mov
xor
popa
repz
call
push
cs
pop
cld
sbb
fcmovbe
insb
lahf
iret
jmp
movsl
mov
sbb
xlat
ret
mov
rcrl
js
mov
jbe
mov
ss
jb
pusha
mov
insb
push
insl
xor
cmp
mov
stos
sti
aam
fiadds
dec
push
dec
mov
divl
iret
mov
rcr
popf
ficomps
cld
adc
ret
js
cmp
roll
fildl
add
clc
xor
fdivp
jmp
cmp
repnz
adc
addr16
add
in
cmpsl
inc
xor
push
movl
nop
popf
and
push
or
mov
ficoml
sbb
mov
loop
jp
inc
in
std
mov
dec
sub
insb
sub
and
ss
dec
mov
stc
mov
sub
das
fwait
aaa
xchg
mov
in
add
sbbl
scas
jp
cmc
cli
cwtl
mov
xor
pop
sahf
ljmp
pop
cmp
cmc
mov
fcomps
out
push
fcom
sbb
xchg
imul
or
and
push
lahf
nop
pusha
xlat
sti
ret
int
outsl
fisubrs
bound
into
push
repz
push
inc
movsb
lahf
shll
dec
dec
outsl
in
pop
add
push
dec
mov
jae
icebp
lods
and
aad
sti
and
int3
pop
cmp
xchg
mov
adc
push
xor
add
mov
stc
or
pop
push
lock
arpl
cmpsb
jnp
ficoms
lcall
out
jns
cld
pop
insl
cmpsl
sbb
inc
lret
mov
mov
lea
adcb
or
into
xorl
les
out
outsl
call
jge
shll
adc
dec
lods
add
push
xchg
popa
adc
nop
fdiv
fstpl
jo
pop
leave
lods
pop
shlb
adc
cmp
in
mov
stos
cltd
push
pop
pop
push
les
sub
mov
rcrb
or
dec
xchg
mov
mov
aam
pusha
sbb
sub
or
into
xchg
push
xchg
jecxz
sbb
fnstsw
fldl
rcrl
xchg
fnstsw
mov
fs
dec
inc
dec
shrb
jge
sub
cli
faddl
jnp
sub
adc
xor
ss
int
lock
daa
push
jle
jb
cmp
dec
loop
outsb
lods
movsl
sub
icebp
pop
fistps
sbb
inc
mov
imul
ja
jb
shr
clc
sbb
call
adc
in
lea
mov
lahf
inc
loopne
push
cld
int
mov
insb
ljmp
mov
push
jbe
xchg
ret
movsb
adc
sbb
js
cmp
sub
daa
cli
mov
out
and
push
and
xlat
in
fwait
jno
jl
js
jp
addr16
cmp
ficoml
orb
mov
xchg
sarb
xchg
cmp
inc
mov
pushf
inc
sarl
pop
sahf
mov
xchg
pop
orl
shrl
and
pop
js
adc
xor
xlat
xchg
ds
fidivrl
icebp
mov
out
xor
arpl
mov
push
and
fimull
sub
fs
sti
jecxz
cwtl
test
add
popa
stos
inc
fidivs
adc
test
cltd
dec
xchg
les
aad
rclb
push
pop
sbb
idiv
xchg
outsb
in
push
fs
ss
popa
cwtl
fisttpl
rorb
and
sub
mov
pop
cmp
popa
fwait
call
mov
imul
cmp
inc
cmpsl
sbb
push
jecxz
stos
xorl
and
or
pusha
xchg
sbb
xor
mov
insb
xchg
mov
lds
data16
cmpsb
adc
sbb
xor
inc
push
loope
rorl
mov
out
ja
jno
mov
mov
movsb
in
fstl
jbe
sub
pop
sbb
out
cltd
aad
or
cs
jp
cmp
mov
cmc
mov
aas
mov
inc
and
test
jne
jne
flds
outsl
pop
xchg
ret
adc
inc
cwtl
xchg
xor
or
dec
cmp
enter
pushf
lret
pop
in
push
xorl
enter
call
notb
nop
and
pop
sub
imul
inc
fcmovnu
dec
add
dec
add
popa
dec
xchg
push
xchg
loop
or
lret
arpl
pop
inc
int3
add
jae
mov
push
ficoms
fildll
pusha
insl
lcall
rcrb
aad
out
sub
add
fbld
arpl
fmull
sbb
push
and
xor
js
inc
jge
fbld
add
out
jmp
scas
testb
xor
adc
cmpsl
or
imul
out
into
fwait
data16
lods
mov
loopne
aam
xor
mov
out
push
lods
inc
jp
pop
ret
xchg
adc
and
adc
and
mov
in
dec
pop
jb
mov
inc
daa
mov
sbb
cmp
add
mov
mov
test
mov
xor
and
std
mov
popa
cltd
xor
push
hlt
and
jne
xchg
push
jnp
lods
jp
lods
inc
mov
jge
push
aad
push
insl
ss
jg
dec
imul
scas
icebp
sarb
outsb
movsb
rolb
sbb
and
add
add
jecxz
dec
mov
repnz
in
divl
cmpl
jo
cmc
xor
or
aas
lock
flds
aaa
test
mov
pushl
mov
dec
lea
and
mov
dec
push
dec
inc
or
push
mov
xor
push
dec
jne
mov
nop
insl
and
dec
mov
ss
loopne
cmp
inc
imul
stos
out
dec
jmp
or
lcall
or
jle
xlat
cmp
and
jle
es
into
or
in
cli
int
mov
or
mov
sub
jne
push
fbstp
imul
xor
xor
int
mov
in
mov
test
mov
dec
daa
std
ljmp
or
xor
cs
sarb
cmp
pop
cmpsb
cld
xchg
nop
pop
mov
test
jns
xor
outsb
je
lret
stos
inc
inc
jnp
int3
and
xchg
push
ds
mov
and
shlb
repnz
mov
test
addr16
data16
inc
mov
test
out
mov
call
mov
aas
jno
call
xor
rol
bound
lahf
fdivl
inc
pop
adc
ds
js
sbb
mov
inc
orb
jnp
xor
mov
imul
adc
sub
lcall
das
cmp
stc
xchg
pop
inc
jns
and
and
lahf
daa
push
into
jle
loopne
add
cwtl
or
and
inc
subb
mov
push
and
adc
fnstsw
out
jl
call
inc
mov
arpl
scas
push
ja
pop
cmc
sbb
pop
daa
jbe
jno
das
and
aam
popf
lea
test
pop
mov
out
jae
xor
or
cmp
mov
adc
ljmp
jge
mov
aaa
or
hlt
imul
cld
enter
cmp
or
push
sbb
xchg
subb
dec
outsl
ljmp
inc
add
int3
out
adc
sub
popf
jo
test
rorb
dec
test
mov
fisttps
jno
ret
push
iret
add
mov
sub
inc
cltd
fiaddl
inc
dec
inc
leave
aam
decb
push
loope
in
ret
loope
dec
les
cmp
add
push
mov
test
incb
out
imul
cmpsb
or
jp
sbb
push
daa
cmp
loop
dec
sbb
pop
sbb
aas
movsb
rcrb
int
sahf
add
movsb
push
add
fs
jns
test
mov
cmp
push
lea
fucom
scas
jl
shlb
out
inc
sbb
les
and
jb
addb
out
jns
fisubrs
push
pop
sbb
loop
push
jae
xchg
xor
loop
repz
or
sti
loop
lock
push
cmpsb
adc
out
rcrb
xchg
fmuls
mov
daa
push
fs
mov
lret
int
jbe
lods
stos
cmpl
test
push
inc
outsl
push
sbb
sti
pop
into
mov
mov
pusha
lahf
mov
lods
lds
rcrl
or
int
test
mov
dec
and
mov
std
test
xchg
pop
push
rorl
add
inc
fnstsw
xchg
adc
xrelease
cs
add
shrl
ror
xadd
aas
and
mov
out
jle
mov
hlt
mov
sbb
dec
xchg
int
and
sub
dec
outsb
add
pusha
add
push
sbb
and
nop
data16
and
mov
stc
rorl
cmpsb
xchg
loop
push
gs
mov
inc
mov
lods
ja
xor
fwait
jnp
push
and
push
inc
mov
dec
insb
mov
cmpsl
decl
cld
movsl
test
sub
in
cwtl
pop
iret
stc
push
movsb
ss
test
push
roll
dec
cltd
out
jle
xchg
dec
dec
cli
das
push
mul
push
pushf
cmpsl
mov
sarb
in
imul
cmp
bound
dec
jmp
mov
dec
mov
push
jo
jne
jno
icebp
lcall
imul
aad
mov
aas
fimull
pop
ret
int3
iret
sbb
and
mov
iret
stos
repz
mov
lret
mov
in
dec
jb
orl
std
jb
test
mov
push
sbb
xchg
jns
dec
dec
mov
faddl
mov
fwait
aaa
stos
cmc
in
icebp
jno
bound
add
mov
ret
test
push
std
fxch
inc
nop
and
sar
orl
mov
test
cwtl
cmovnp
repz
inc
dec
in
jle
or
jnp
mov
mov
dec
rol
outsl
dec
and
jne
sti
push
mov
dec
mov
leave
add
dec
fmuls
movsl
aad
or
xor
hlt
dec
push
and
mov
mov
mov
cmp
add
call
cmpsl
xor
pop
out
cmc
rorb
sbb
push
lret
scas
pushf
ret
cltd
adc
adc
inc
repz
iret
pop
sub
dec
inc
loop
adc
inc
adc
jb
pusha
inc
nop
jg
jg
cmp
dec
mov
push
xchg
test
imul
push
mov
and
rcll
dec
push
xchg
pop
ds
xor
or
add
dec
std
js
in
mov
or
test
les
xchg
sub
push
addb
stc
aas
mov
test
xor
push
push
jne
addl
sub
mov
xchg
pop
and
cmp
sahf
mov
sbb
cmp
mov
hlt
lret
jnp
xor
dec
lock
adc
or
add
mov
and
push
fistps
imul
jae
insb
loope
mov
shlb
lahf
pusha
cmp
mov
or
std
shll
and
into
push
mov
pushl
es
or
fildl
call
cmp
fisttps
movsl
data16
aas
ja
insb
notb
in
fcmovu
push
push
sbbb
mov
sub
aam
psubusw
adc
jg
cmp
mov
sub
dec
xchg
fwait
scas
sbb
je
mov
cmp
std
xchg
scas
insb
pushf
sub
cmp
cmpsb
sub
test
mov
push
push
hlt
repnz
pop
inc
xor
gs
test
hlt
insl
xor
fadd
testb
sbb
xchg
imul
pop
or
xchg
mov
xchg
sbb
cmc
push
add
push
cmpsl
mov
jne
rcrl
and
push
pusha
and
dec
mov
stos
insb
fistl
sbb
popa
inc
outsl
jmp
jl
jb
jns
add
aam
xchg
adc
mov
aas
cmpsb
movsl
nop
inc
lea
mov
mov
push
fistpl
imul
pop
sub
cmpb
dec
cmpsb
lcall
mov
mov
dec
fnsetpm(287
into
das
outsb
fildll
cs
sub
inc
xchg
dec
push
mov
pop
mov
imul
jno
mov
jmp
in
add
scas
inc
cmpl
mov
sti
sbb
imul
ljmp
push
ljmp
cmpsb
jbe
jbe
mov
aaa
lods
sub
jae
and
sub
in
jb
push
in
and
jnp
sub
fldpi
lcall
pusha
xchg
stc
jp
xor
aam
jno
push
ljmp
pushf
mov
sbb
sbb
jecxz
sbb
addr16
push
push
stos
data16
movsl
sub
inc
sub
xlat
cmc
jnp
sbb
fs
shll
cmp
ret
adc
cmp
leave
and
xchg
xchg
jno
repz
xor
xchg
rorb
add
repnz
or
repz
pop
sbb
sbbl
jns
pop
adc
lcall
jge
mov
mov
sub
push
sub
jg
mov
sahf
push
lods
xor
icebp
pop
loop
adc
sbb
repz
cmp
cmpsl
mov
mov
or
adc
pop
lret
fisubl
xor
ljmp
lea
pop
mov
sbb
fistpl
pop
mov
rcl
mov
in
adc
or
lods
and
mov
int
cs
adc
pusha
leave
testb
shrb
mov
dec
stos
bound
adc
aam
sub
aam
lock
lds
ss
dec
add
inc
mov
mov
sahf
lods
sub
push
pop
sti
fldl
sbb
cmp
or
in
repnz
cmpb
fiaddl
call
pop
shl
test
dec
jne
in
mov
pop
popa
push
decl
mov
mov
data16
jo
sarb
inc
push
dec
mov
jnp
adc
pop
sub
out
add
xor
push
fwait
pop
sub
sbb
aaa
pop
loope
lock
dec
jge
mov
pop
mov
and
mov
test
ret
lahf
sbb
mov
scas
push
jl
xlat
jmp
jb
in
push
pushf
xor
cmp
and
and
mov
cmp
sbb
adc
sub
or
add
into
inc
jns
adc
jl
lea
lea
adc
mov
mov
xchg
in
ljmp
push
xchg
mov
addl
push
add
fwait
in
mov
in
lods
mov
inc
arpl
jno
test
test
mov
push
jmp
cmc
cmp
sbb
mov
xchg
cmpsl
dec
test
add
aaa
sub
inc
mov
pop
push
sub
and
cmp
ret
inc
in
lds
cs
xor
sub
stc
fs
and
jb
imul
imul
in
dec
sti
dec
out
stos
int
or
jle
loope
jae
cwtl
jg
ds
xchg
fsubs
adc
xor
inc
pop
popa
cld
mov
fsts
pop
xchg
out
jle
enter
cmp
mov
inc
and
fdivrl
xchg
into
xor
jle
sbb
fs
adc
cs
inc
or
sub
pop
mov
jbe
sbb
in
fsubrl
pop
xor
mov
jns
pop
pop
and
sub
xchg
aas
js
popf
test
inc
xchg
adc
add
jge
push
push
pop
ss
sti
jns
cmpsl
xor
jns
lods
ret
lret
pop
dec
idivb
xor
cld
fwait
loop
and
jmp
jb
into
or
xchg
inc
cmp
stos
dec
leave
push
movsl
xchg
and
lret
jb
lret
pop
add
add
or
inc
mov
aad
push
add
jge
cmp
mov
leave
xchg
out
popf
xchg
out
pop
mov
xor
pop
ret
test
lret
jns
stc
push
movsb
test
and
js
ss
mov
icebp
in
scas
jbe
les
pop
cmpl
or
in
cmp
sarl
xor
ja
fwait
mov
adc
call
sahf
clc
dec
cltd
pusha
inc
mov
vmovaps
push
push
movsl
pop
lods
pop
scas
xchg
out
adc
cmp
adc
pop
sub
cmp
fisttpll
cmp
inc
loopne
pop
insl
inc
leave
xchg
cmp
push
jnp
out
cld
pop
xchg
mov
out
xchg
loope
xor
push
je
repnz
pop
je
or
xchg
repz
add
out
mov
daa
insb
ficompl
mov
iret
test
data16
nop
pop
fdiv
loope
pop
and
ret
aad
lahf
mov
ja,pn
push
fimull
xor
loope
cmp
xor
adc
int
pusha
out
mov
cmp
jl
lods
popa
mov
lahf
pop
insb
pop
cmpl
fs
inc
insb
negl
in
ficoms
sarl
lods
sub
insb
cmp
fcmovnbe
inc
fldcw
mov
rcll
nop
cmp
mov
push
jbe
fdivrl
imul
lret
push
and
fldenv
bound
ret
iret
push
xor
mov
idiv
dec
imul
sahf
enter
jb
mov
xor
jle
outsl
sarl
outsl
jmp
mov
loop
pop
add
cmp
adc
ja
mov
ds
and
cwtl
mov
sub
in
mov
sbb
in
pusha
subl
jge
or
pop
outsb
sbb
shl
cmc
sti
rcll
jg
mov
js
pop
xchg
mov
fldcw
repz
gs
inc
cvtps2pd
lods
hlt
leave
inc
fdivrl
addr16
xchg
push
pushf
jg
test
inc
xor
aam
mov
test
decb
leave
movsl
xchg
les
lret
lods
jno
scas
cli
movb
paddq
cwtl
repz
or
pop
in
lret
dec
jae
movsl
mov
sbb
inc
cmp
adc
test
nop
pop
ret
adc
into
shrb
sub
sahf
fisubrl
xchg
adc
loope
stc
and
push
aad
out
cmp
and
xchg
rcrb
rol
push
mov
ljmp
push
xlat
test
jle
jge
int
hlt
out
jp
enter
mov
ja
leave
stos
sub
fstpl
or
pusha
mov
dec
lea
enter
adc
add
jge
ret
movl
sbb
dec
add
rcrb
mov
jns
mov
xchg
cli
mov
dec
pop
fdivs
xor
inc
jl
into
outsb
lret
mov
ffreep
sub
xor
addr16
or
sahf
divb
and
mov
push
pusha
add
jae
mov
insb
cltd
sub
test
cli
pop
or
cmp
pop
es
push
push
dec
arpl
in
fildll
push
jp
pop
cmp
xor
ss
outsl
cmc
adc
fldlg2
cmp
or
pop
cwtl
jle
mull
jbe
pusha
jmp
cmp
repnz
sbb
fistps
rcll
aam
add
sub
xor
loopne
add
mov
xchg
pop
lock
ljmp
roll
mov
mov
dec
insb
das
cli
lret
std
pop
mov
xchg
xor
dec
shll
out
adc
bound
fcomip
jo
mov
ja
popa
ret
add
lahf
xor
shrl
mov
rol
mov
pop
sub
arpl
jge
sbb
push
dec
aam
pushf
xor
test
xchg
ljmp
add
fistpll
xchg
push
scas
jge
sub
cmpb
sbb
adc
lahf
in
inc
or
ss
xor
mulb
lss
aaa
daa
adc
les
repz
mov
insb
out
and
adc
sub
mov
ss
add
clc
xor
aaa
mov
js
add
mov
test
dec
daa
mov
jg
mov
jae
add
dec
sbbl
int
repz
cltd
out
dec
lcall
movsl
icebp
scas
xor
dec
hlt
testl
addl
out
les
mov
cmpsb
sbb
mov
jne
jnp
movsl
cld
sbb
sti
cmc
mov
dec
push
les
notb
mov
and
adcl
add
inc
hlt
lods
mov
cmp
rcr
pop
shlb
in
icebp
loopne
mov
subb
sahf
or
jb
int3
mov
adc
jp
idiv
xor
mov
pop
je
adc
xor
mov
ret
mov
or
int3
xchg
in
dec
dec
mov
in
sub
mov
hlt
fldenv
pushf
mov
scas
push
lcall
inc
in
cs
aad
cmp
lret
and
sbb
dec
mov
push
jecxz
jne
pop
xor
sub
dec
lods
pop
pop
xor
call
pop
shrl
rcr
clc
jns
push
jns
arpl
cmp
pop
jmp
jg
or
inc
push
cmp
orl
jg
repnz
pop
mov
mov
or
mov
mov
mov
jne
leave
mov
lret
mov
push
inc
push
mov
sbb
outsl
mov
jbe
push
mov
cmp
xor
add
data16
lock
push
xlat
aam
int3
fnstsw
fsubrp
mov
and
insl
stc
push
push
adc
mov
add
lret
sbb
cli
push
lcall
cmp
jmp
xchg
enter
ss
xchg
out
dec
hlt
lods
cmpsl
mov
or
push
push
jb
xor
and
pop
or
in
adc
and
push
sti
mov
push
divb
in
scas
filds
and
int3
pop
xorl
dec
xor
inc
sub
lret
decb
adc
das
add
sbb
ss
stos
push
or
sbb
mov
imul
out
push
je
dec
inc
jb
rol
dec
or
or
jb
jb
mov
dec
stos
lds
cmp
jle
pop
xchg
in
lods
test
mov
lret
aad
test
xor
xor
mov
jle
in
mov
pop
sbb
jge
test
sahf
push
inc
lahf
jp
push
cwtl
imul
and
add
mov
mov
or
sbb
push
enter
subl
cmp
xchg
adc
roll
mov
push
std
mov
fyl2xp1
insl
cld
mov
push
ss
xor
push
fldcw
mov
addr16
jns
sub
lcall
sub
adc
test
cmc
inc
loope
xor
popf
das
push
hlt
xor
mov
xchg
pop
jle
cltd
jl
pop
xchg
xor
and
lea
mov
inc
dec
xchg
and
push
xchg
leave
dec
xor
cmp
sahf
sbb
push
jno
shll
ret
dec
scas
test
jecxz
push
shrb
iret
lods
xor
jnp
fcomip
pop
mov
icebp
lahf
inc
gs
cltd
add
mov
lret
or
inc
imul
xchg
movsb
imul
nop
adc
subb
icebp
mov
ljmp
adc
clc
aas
cmp
push
xchg
mov
lret
in
xchg
repz
dec
push
inc
dec
jg
xor
sbb
add
pop
jne
repz
push
mov
inc
xchg
inc
xorl
xor
mov
or
rcrl
movsb
lahf
nop
or
mov
sbb
mov
hlt
jo
push
fdivr
lods
aas
inc
lcall
pop
jae
xor
imul
shr
push
aas
adc
pop
inc
adc
ds
fucom
pop
xlat
dec
mov
adc
into
imul
jbe
aas
pusha
mov
adc
add
movsl
push
dec
cs
or
test
ret
push
mov
add
xlat
pop
cmp
pushf
mov
push
sbb
sub
xchg
inc
jl
xchg
xchg
rolb
inc
outsl
pop
jle
and
pop
ljmp
clc
ljmp
cmpsl
mov
cmp
imul
repz
dec
xor
repz
shll
mov
jg
inc
cwtl
mov
and
add
push
sbb
inc
sub
mov
int
pop
in
inc
mov
scas
mov
dec
lock
sbb
and
cmp
cwtl
add
cmpb
ljmp
pop
sbbb
xchg
aas
adc
scas
jb
cmp
cli
mov
mov
mov
lea
sbb
jbe
movsl
cltd
adc
inc
movsl
mov
daa
mov
xchg
add
out
sahf
jo
inc
fidivs
fnsave
inc
shr
fsubp
mov
mov
addl
xchg
dec
mov
jg
push
shl
test
orps
xor
scas
movsb
push
cld
inc
sbbl
nop
adc
sub
sub
movb
pushf
dec
in
xchg
sub
cmc
pusha
lret
imul
ret
test
stos
mov
inc
pop
cli
not
push
repz
fisttps
movsl
mov
loop
jo
out
inc
xchg
inc
dec
xorb
push
paddq
dec
dec
mov
sub
push
stos
ljmp
sbb
pop
test
out
fwait
aas
cmp
lock
lahf
js
out
fcmovnu
dec
rcr
fistl
sti
xor
jl
dec
pushf
pop
dec
frndint
sbb
jg
xchg
and
push
cmpl
sub
js
jno
jmp
sub
aas
data16
sbb
xchg
push
mov
stos
repz
stc
ret
push
stc
xor
inc
xchg
loope
incl
or
push
clc
fxch
loopne
or
and
mov
xchg
popa
sub
add
ljmp
ja
and
mov
push
fdiv
xlat
mov
ss
scas
pusha
sbb
es
push
jae
dec
push
and
xor
enter
mov
mov
sbb
out
jns
mov
sub
pushf
xchg
incb
das
add
pushf
or
movsb
divl
jb
sub
pop
aaa
stc
and
mov
dec
jecxz
or
sbb
pop
dec
sbb
je
mov
pop
call
mov
pop
add
fwait
push
test
xor
int3
cld
mov
stc
adc
insl
mov
pop
jns
aad
sbb
repz
mov
lahf
and
test
imull
jge
repnz
push
pop
icebp
loop
mov
ret
enter
into
cmpl
loopw
icebp
inc
push
and
dec
dec
das
xor
pop
int
data16
push
jns
loop
or
in
and
sub
rorb
push
mov
pop
nop
aad
push
out
out
in
inc
xor
mov
mov
dec
xchg
jb
shl
sub
addr16
pop
ret
stc
in
in
mov
imul
es
push
mov
inc
inc
enter
call
sbb
int3
sbb
push
shr
mov
mov
xchg
adc
fdivrs
mov
lea
adc
stos
push
ss
fmuls
sbb
xor
jae
stos
cmp
cmp
xchg
pushf
mov
pop
in
pushf
int3
or
cmp
ds
ja
and
dec
call
sbb
jp
test
arpl
pop
adc
mov
iret
mov
fsubrs
add
or
mov
pop
mov
shrb
in
daa
and
push
dec
or
movsl
sub
mov
push
xorl
fcmovbe
inc
xchg
js
negb
and
ret
jg
addb
shrl
fdivl
mov
lahf
mov
addr16
fwait
lods
imul
lods
fcompl
mov
test
fdivrs
ljmp
xchg
std
movsl
orl
pop
mov
aam
ss
or
jno
xor
in
rorb
jge
xchg
mov
imul
mov
repnz
jp
push
fs
sahf
popl
dec
clc
xor
mov
jb
fcmovnu
jo
xlat
push
or
movb
repz
jo
jge
mull
sub
dec
into
xchg
inc
mov
shl
or
dec
mov
mov
add
pop
and
mov
xor
pop
in
push
out
xchg
dec
mov
lds
arpl
jmp
push
lcall
pop
add
aad
jns
loop
mov
call
cwtl
leave
test
sbb
pop
jge
mov
out
mov
pop
into
scas
push
lcall
add
mov
and
arpl
adc
out
jno
cmp
dec
adc
orb
cmp
or
push
jecxz
stos
mov
jns
jb
das
mov
shrb
jl
outsl
push
fs
repnz
shl
sahf
shlb
iret
movsb
fwait
out
mov
dec
push
fnsetpm(287
mov
sbb
sub
push
stos
lods
mov
dec
leave
sbb
sbb
mov
clc
or
push
test
dec
lret
inc
fnstsw
cwtl
out
pop
or
ds
cltd
inc
insb
mov
inc
fwait
lahf
std
pop
sub
mov
enter
stos
adc
hlt
bound
fmull
jne
scas
inc
call
scas
data16
and
sub
and
pop
jmp
sub
pop
fisubl
iret
inc
shl
ds
jbe
cld
sub
cld
mov
scas
mov
push
in
pop
pusha
arpl
aaa
jg
mov
push
xchg
test
in
jp
leave
imul
inc
sbb
fs
mov
mov
mov
movsb
cmp
idivl
negl
xor
jmp
xchg
push
mov
cwtl
lret
adc
leave
fildl
repnz
jne
rorb
repz
sbb
ja
sbb
push
aad
movsb
lea
mov
jg
and
movsl
push
push
popa
push
mov
mov
and
add
xor
mov
mov
lea
adc
inc
push
fsubl
leave
popa
int3
out
das
ds
cli
in
lahf
dec
int3
mov
hlt
mov
inc
cli
inc
pop
xchg
repnz
and
jl
sub
fldt
adc
cmp
pop
das
outsl
enter
inc
stos
push
push
pop
mov
fs
ljmp
mov
js
shlb
pop
push
mov
dec
ljmp
dec
in
lret
xchg
repnz
xor
mov
cmp
jge
lea
aam
adc
and
add
jl
adc
lock
cmpsb
inc
imul
es
iret
fimuls
lea
sub
add
or
cmp
jbe
clc
mov
mov
aam
mov
adc
dec
dec
mov
mov
sub
push
jmp
mov
outsb
shrl
fistps
cmpsb
push
or
dec
dec
push
cmpsl
xchg
fsubp
clc
pop
pop
xchg
adc
loop
scas
jp
test
xchg
jnp
hlt
xor
mov
repz
out
ds
pop
fdivrl
movb
fsts
out
pop
inc
push
inc
call
jp
shr
mov
in
popf
orb
xchg
enter
lahf
mov
aad
jae
aam
lahf
repz
jns
nop
popl
mov
xchg
mov
in
push
call
iret
bound
cmpsb
inc
push
leave
pop
xor
sbb
popa
pop
test
mov
cs
mov
mov
push
xorl
les
inc
gs
sub
in
out
pop
in
push
mov
loop
cmp
lret
push
sub
les
adc
mov
sbb
scas
mov
inc
stc
mov
xchg
push
push
push
sub
aad
cli
in
dec
jmp
dec
bound
mov
mov
bound
pop
mov
aad
loop
out
pop
pop
ret
mov
rcll
pop
mov
mov
mov
out
cli
dec
div
jmp
shlb
jmp
filds
mov
leave
sti
ret
sbb
jne
shl
xchg
add
int3
pop
out
fstpl
bound
aas
sbb
mov
shlb
ret
fwait
jp
movsl
stos
mov
xchg
fists
lods
mov
fstp
sbb
aad
pop
insb
add
xor
push
push
imul
xchg
add
fistpll
aad
xor
adc
shrb
jmp
sub
xchg
push
mov
lods
and
popf
mov
lret
pop
enter
loop
sub
es
add
dec
loop
cld
adc
pop
push
ds
ja
es
push
call
incl
sub
xor
sub
into
add
push
lods
mov
lahf
int
ficoms
cmp
cmp
and
stc
incb
mov
je
xor
push
cs
cmpsl
cmp
fnsave
sti
bound
sbb
js
or
gs
xchg
mov
mov
lods
or
xchg
pop
and
and
dec
mov
sti
mov
add
cmpsl
cmpsl
pop
and
sub
lods
xor
insl
fistl
out
dec
sahf
jmp
cli
insb
jmp
pop
ret
mov
les
cmpsb
jle
loop
dec
fistpll
les
ss
jno
mov
jb
dec
icebp
out
jmp
sbb
ja
test
adc
popaw
cmp
fildll
ljmp
cmpsl
cmp
jns
out
in
mov
lods
pop
inc
in
sbb
lock
mov
inc
insb
sarb
mov
fisubrs
sub
push
loop
xor
mov
js
iret
inc
xchg
and
mov
or
jmp
repnz
test
out
repz
or
popf
outsl
or
std
dec
inc
mov
sahf
int3
xor
in
imul
inc
add
pop
icebp
rolb
or
sub
mov
push
mov
xchg
dec
xchg
bound
fistpl
inc
and
add
jne
clc
sub
lds
add
sbb
sbb
sbb
mov
pop
aam
cmp
lahf
jns
test
and
pushf
adc
add
jg
jl
xor
xchg
sbb
add
rcl
aaa
and
les
mov
aad
push
in
outsb
bnd
out
imul
jecxz
mov
les
sarb
enter
sbb
or
jne
pop
push
lret
or
lock
fwait
pop
mov
int3
xor
mov
sub
loopne
lret
aad
fbstp
sub
push
cmp
inc
fcoml
aas
and
inc
es
mov
in
and
cmp
pop
add
mov
ret
pop
mov
cmc
push
pop
xchg
out
cmpsb
sbb
jns
popf
pop
and
jl
mov
lret
inc
xor
jbe
mov
xor
xor
fisubs
mov
jno
push
pop
xor
fs
xchg
leave
sbb
lods
cmovne
jp
dec
or
test
jp
sbb
cld
mov
push
fst
pop
cmc
or
push
xchg
cmpsb
xor
mov
or
stos
push
je
mov
jmp
push
test
mov
inc
push
arpl
xchg
popf
int3
imul
jmp
testl
add
cmp
push
mov
in
gs
dec
scas
popf
mov
out
add
loope
add
enter
loop
jns
imul
test
xchg
sub
std
popf
adc
in
test
inc
lea
inc
pop
mov
adcb
fdivrl
cltd
lret
jb
pop
or
insl
ret
ljmp
sbb
and
jecxz
hlt
push
lods
lock
mov
push
xchg
mov
and
mov
adc
xlat
push
jg
pop
or
inc
xor
lret
mov
inc
imul
data16
or
gs
cwtl
insb
and
jle
xchg
ss
call
aam
push
sub
or
jge
insl
mov
mov
addr16
fadds
xor
sbb
sbb
xchg
jbe
add
sbb
adc
in
pop
test
mov
iret
aam
add
dec
cmovb
int
loope
fwait
xor
popf
mov
nop
sub
xchg
pop
test
jl
add
mov
lea
adc
shrb
scas
add
inc
inc
js
or
or
mov
or
sub
ficompl
rcrl
jge
xchg
jle
push
in
addr16
outsb
scas
push
fisubl
push
xlat
and
xor
sbb
mov
sub
mov
leave
and
mov
insl
inc
repz
int
lea
fcompl
imul
mov
jb
or
or
outsl
xchg
mov
jmp
adc
inc
sbb
pop
sti
shrl
fdivrs
adc
popf
insl
lcall
loopne
xchg
pop
js
or
popa
jnp
aad
sbb
adc
xlat
mov
fildl
pop
out
or
cmc
enter
lcall
dec
negb
mov
pusha
adc
sbb
sti
push
test
push
test
mov
test
stc
rcl
mov
inc
pop
in
cmp
cmp
mov
add
std
mov
push
stc
call
cmp
sbb
mov
and
inc
mov
insb
popf
add
in
sbb
lcall
push
imul
repz
pop
mov
bound
mov
pop
test
adc
call
xchg
scas
daa
sbb
outsb
fwait
sub
mov
in
push
jl
mov
cwtl
push
test
jb
bound
xchg
push
hlt
leave
fildl
icebp
aaa
shll
mov
pop
in
out
inc
loope
hlt
ss
pusha
out
insb
shlb
mov
fwait
ret
sbb
mov
dec
sub
loopne
inc
jno
xor
orb
dec
int3
movsb
dec
popa
mov
pop
jnp
cmpsl
es
data16
fwait
jo
cmpsb
popl
cs
mov
dec
mov
mov
stc
cs
xchg
lea
je
xlat
loope
adc
pop
lock
in
push
cmc
mov
pop
mov
mov
out
js
sub
fldcw
int
andl
pusha
enter
and
add
test
sti
lcall
insb
mov
ja
pop
popa
cmpsb
sti
sbbl
ds
xor
inc
ss
and
pop
lods
pop
insl
xlat
mov
dec
dec
or
xor
mov
stos
pop
rcl
scas
push
bound
jno
lahf
outsl
sbb
insl
cmp
xchg
mov
adc
stos
sbb
xor
pop
addr16
sahf
sbb
push
jp
jmp
imull
aam
out
fdivl
sbb
fstpt
sbb
in
test
cli
push
sbb
imul
mov
test
xchg
dec
shll
fwait
xchg
mov
stc
pop
scas
rcll
inc
lret
pop
or
lea
arpl
add
mov
pop
mov
adc
pusha
in
hlt
cmp
or
push
jl
scas
std
mov
int3
mov
ret
jbe
rorb
push
pop
popf
mov
cmpsl
into
xchg
mov
adc
mov
test
mov
or
xor
out
mov
and
arpl
and
leave
push
in
mov
mov
popa
into
xor
aaa
mov
xchg
xor
push
xchg
add
cmp
mov
pushf
insl
shlb
push
pop
pop
repnz
test
scas
fxch
sti
imul
lea
pop
pop
push
xchg
into
aad
mov
mov
cmp
mov
add
aaa
out
icebp
push
rol
insb
les
mov
and
icebp
xchg
push
aaa
ss
cmc
gs
call
test
or
jg
scas
into
pop
pusha
les
mov
movsl
clc
in
aam
xchg
mov
hlt
loopne
aad
xchg
es
test
lahf
adc
xor
mov
out
or
adc
pop
or
push
mov
fstpt
mov
jmp
mov
lahf
mov
cs
iret
cmp
push
out
mov
xchg
fisubl
and
nop
push
sbb
hlt
imul
jno
mov
scas
popf
xchg
test
jp
cmp
insl
lods
fistpl
outsb
xchg
pusha
outsl
mov
sti
lds
sub
push
mov
mov
adc
sbb
cmc
sahf
cmp
dec
repz
sbbl
ret
adc
push
push
daa
stc
mov
rclb
in
pop
in
movsb
cmp
push
in
out
into
push
test
icebp
jno
lods
insl
and
jl
aam
or
pop
les
jae
xlat
push
jmp
inc
dec
inc
sarl
int
dec
xor
pop
pop
push
fs
jl
fs
and
out
mov
stos
and
scas
cmpl
jb
cli
mov
int3
orb
stos
not
xor
xchg
das
pop
inc
not
dec
or
bnd
fdivrl
repnz
call
repz
adc
cmp
out
xor
in
xchg
push
pop
jnp
fisubrl
lret
fs
enter
xchg
leave
aad
arpl
mov
xchg
aad
inc
mov
dec
sub
in
fwait
enter
lock
outsb
adcl
daa
mov
jle
lods
xchg
dec
pop
int
cmovp
jbe
enter
cmc
cmp
push
js
std
cli
pop
rorl
mov
es
les
pop
popa
jo
movsb
fisttpll
in
es
cld
mov
jl
xchg
inc
insl
adc
inc
fidivs
or
ffree
adc
ljmp
shr
mov
cmp
addr16
cmpsl
adc
movl
pushf
mov
lretw
mov
mov
add
jp
dec
pop
lea
jnp
lret
xchg
out
loope
and
cli
loope
xor
ficoml
mov
das
movhps
jne
sbb
mov
xchg
dec
lock
stos
idivl
mov
push
stos
mov
arpl
insl
sub
adc
jge
adc
or
push
mov
gs
addb
push
dec
ds
jge
mov
inc
push
jmp
int3
add
lods
js
bswap
cld
inc
push
xor
rcrb
imul
movsl
call
mov
push
xchg
cmp
mov
pop
mov
pop
cmp
les
push
ja
push
mov
jo
outsl
clc
fnstenv
inc
jnp
sub
fwait
mov
dec
jb
fstps
push
popf
xor
mov
bound
scas
cmpsb
arpl
or
loop
cmpsl
outsl
adc
pop
push
out
xor
lods
ret
push
jo
pop
mov
cmc
xorl
lahf
jo
in
imul
jne
inc
scas
stos
int3
jo
xchg
mov
test
shlb
push
mov
jne
scas
pop
les
push
adcb
sub
fisubrl
les
push
mov
addl
mov
and
xchg
xchg
mov
ljmp
adc
inc
push
les
or
aas
cmpl
jns
fcomp
push
adc
cmp
and
ss
cmp
mov
aas
ds
push
bound
in
add
outsl
dec
sti
cltd
js
pop
cli
or
jle
sbb
and
test
negb
mov
xor
lds
test
pusha
xchg
loope
jne
adc
addr16
dec
push
sub
adc
loope
cmpsl
cld
jne
imul
int3
ja
call
sti
jno
and
aaa
dec
mov
mov
inc
loopne
jle
loope
lods
nop
in
mov
je
mov
rclb
mov
aaa
mov
cmp
test
repnz
jmp
jle
xorb
out
shll
mov
das
stc
mov
mov
xchg
jne
xorl
inc
xor
clc
dec
sub
cmp
or
subl
mov
into
xor
dec
data16
mov
cmp
inc
cmp
mov
addb
jl
ret
movsb
mov
popf
test
loope
pop
add
std
mov
pop
pusha
or
lock
inc
adc
popa
mov
rclb
cmp
imul
dec
sbb
cltd
sub
js
add
cli
aad
rcr
out
and
lods
jmp
lret
push
inc
ds
adc
mov
lock
icebp
mov
xor
repnz
sbb
andb
and
cmp
mov
xor
cmp
push
inc
cmp
insb
or
cltd
imul
addr16
xchg
mov
popf
test
and
testb
call
push
adc
xchg
or
stc
xchg
push
popf
lds
pop
out
ret
mov
enter
dec
call
out
push
mull
jo
scas
ret
mov
js
push
jnp
or
cmp
icebp
ljmp
clc
stos
jne
mov
xchg
xchg
sahf
dec
sbb
ljmp
jg
sub
arpl
leave
xor
inc
xchg
sbb
xor
jne
out
fstl
scas
adc
inc
mov
push
mov
sbbb
in
mov
std
lods
scas
rcrb
add
test
pop
test
add
stc
fadds
enter
or
mov
add
mov
mov
pop
or
jecxz
lcall
imul
mov
xchg
fwait
subl
jnp
test
inc
lret
arpl
cld
mov
cmpsb
xor
xchg
aaa
pop
adc
pop
cmpsl
adc
shlb
push
js
test
pop
pop
jne
cmpsl
shll
test
xor
sub
scas
mov
jmp
sub
sbb
add
jecxz
fcmovnb
pop
jmp
jle
inc
mov
xor
mov
stos
repz
sub
jle
and
xor
mov
xchg
lods
mov
arpl
xchg
shll
jl
movsl
push
and
add
imul
pusha
pop
sti
sub
sub
xor
mov
ds
ret
mov
out
repnz
jo
sahf
ret
push
pop
push
adc
nop
jno
or
cltd
imul
mov
jmp
cld
xchg
mov
inc
push
adcl
jnp
stc
jo
or
inc
movsb
scas
xorl
pop
mov
add
dec
mov
cmp
ret
or
mov
repnz
dec
lcall
data16
lods
nop
into
xchg
push
fistpll
jns
xchg
ljmp
pusha
inc
lea
or
xchg
popf
mov
jle
daa
push
push
inc
adc
push
add
jmp
out
jno
cmp
xchg
dec
lds
mov
pop
mov
or
xor
dec
cld
cmp
mov
cmp
loop
jge
ds
mov
aas
in
inc
mov
iret
pop
cmpsb
int
xchg
loopne
jl
loopne
mov
sub
mov
pop
or
or
das
sub
hlt
mov
imul
cmc
mov
push
lods
pop
rolb
add
sahf
mov
data16
je
add
aam
jae
test
pusha
subb
xchg
mov
stc
out
inc
lods
jp
repnz
aaa
shll
adc
sahf
add
fstpl
xor
pop
fwait
outsl
mov
dec
push
nop
push
daa
js
dec
jbe
int
jnp
xor
jne
testl
add
pop
xor
rorl
roll
xorl
call
pop
bound
cs
pusha
xchg
sbb
xor
test
movsl
mov
mov
stos
jo
mov
arpl
ret
push
sub
rorl
lods
add
popl
mov
sbb
xor
mov
daa
lcall
add
test
fwait
push
push
cmp
fsubrs
sahf
bound
xor
int
aas
stc
push
cmp
test
ja
lret
and
test
jns
jp
and
mov
loop
cmpsl
daa
jmp
add
filds
rcl
inc
jno
and
sub
aas
xchg
and
jp
lods
fisubrs
in
xor
dec
mov
rcl
xor
icebp
lcall
sbb
ja
inc
xchg
into
push
bound
sub
aas
xor
pusha
dec
scas
nop
jp
insl
inc
mov
push
jns
xorl
inc
push
js
sub
push
cmp
cwtl
in
cmp
mov
cmp
loopne
lock
sbb
sti
and
push
loop
lods
insb
cmc
out
adc
jecxz
lods
mov
rolb
stos
aam
adc
jmp
les
add
add
adc
jae
cwtl
lock
data16
dec
out
or
hlt
add
mov
hlt
adc
add
push
cltd
or
fnstenv
dec
call
stc
inc
pop
scas
lea
in
or
mov
and
mov
jecxz
lcall
dec
stos
pop
sarb
rep
and
inc
adc
xor
add
and
aam
sbb
movsl
mov
adcb
mov
lcall
jl
pushf
push
fwait
mov
push
sbb
les
scas
repnz
out
adc
add
add
jnp
xor
lcall
push
push
dec
jmp
loop
pop
inc
add
int
shrb
pop
lods
cltd
fbstp
pop
mov
jno
ljmp
jecxz
fdivrs
jmp
jns
sub
cmp
dec
fildll
dec
inc
cmpsl
lods
jae
mov
mov
and
mov
or
test
imul
push
jno
int3
scas
aas
loopne
mov
ljmp
fsubl
stc
ret
push
andb
mov
stos
orl
fdiv
int3
mov
jne
roll
repnz
dec
shrl
stos
xor
nop
jle
popl
cmc
adc
mov
inc
stos
xchg
negb
cmp
push
cmp
cld
pop
ja
sub
imul
int3
pop
ja
adc
scas
or
fcoml
sbb
pop
repz
imul
and
mov
and
mov
jl
in
xor
in
data16
jp
sahf
mov
sub
or
fstpt
filds
xchg
int
gs
in
and
or
sbb
push
xor
or
outsb
xchg
pop
sub
dec
jmp
and
repz
inc
pop
cs
out
ffreep
stc
cmp
inc
out
xlat
mov
les
lahf
inc
push
in
cmp
es
outsl
pop
daa
add
inc
inc
jnp
je
xchg
arpl
inc
jmp
in
cmp
xor
jecxz
inc
sti
jecxz
ret
pop
stos
int3
jmp
xchg
imul
fldt
imul
pop
or
jmp
push
loop
fisttps
adc
xchg
inc
xchg
cmp
in
fwait
jg
xchg
lds
outsb
dec
or
insb
ljmp
push
fiadds
das
jo
sbb
pop
sbb
cmp
shll
mov
mov
cmpsl
int
stos
add
sbb
shl
stos
adc
xor
push
repnz
push
mov
mov
xchg
int3
mov
cmpsl
sub
pop
add
test
cs
and
in
out
mov
in
fnsave
fmull
gs
mov
jae
or
leave
loope
or
mov
cltd
and
cmp
dec
jecxz
dec
popf
out
mov
fsubrs
mov
bound
sbb
data16
cltd
pushf
pop
mov
adc
mov
inc
pop
mov
or
add
pop
mov
mov
push
mov
in
fimull
test
out
les
pusha
fs
cmp
inc
adc
loopne
mov
out
test
daa
adc
xor
xorl
and
jl
je
mov
sbb
repnz
xchg
ss
mov
mov
xor
xchg
and
movsl
cli
lock
fadd
lret
or
adc
adc
mov
int3
dec
cmpsb
push
js
xchg
fsub
js
xlat
imul
push
enter
adc
sub
fcoml
inc
adc
frstor
xchg
stc
xchg
mov
scas
or
cmpb
sbb
jb
cwtl
xor
ret
loope
ljmp
sbb
cmp
mov
dec
lea
out
fucomi
jns
inc
mov
repz
push
lods
testb
not
into
popf
cltd
fdiv
xchg
adc
push
test
scas
int
mov
test
or
mov
mov
push
test
jo
and
pushl
cmp
lds
lret
or
pop
sti
mov
xchg
sub
stc
sub
fwait
popf
sub
or
inc
js
pop
outsl
push
gs
data16
js
popf
test
dec
scas
int3
push
jns
xchg
cmc
lock
push
sbb
cmc
cmpsb
pop
daa
xchg
sub
add
push
cli
xor
aas
cmp
imul
es
sub
add
cmp
out
or
and
popf
orb
imul
xchg
and
lds
lea
pop
fadds
sbb
aam
or
das
adc
or
pop
les
and
push
and
add
jecxz
je
rclb
lods
nop
mov
cmp
mov
mov
mov
cs
sub
ss
mov
mov
pop
cli
repnz
jns
xor
push
imul
outsb
out
jnp
sbb
dec
cmc
into
pop
jle
jmp
dec
std
adc
inc
xchg
jne
nop
inc
pushf
pushf
cmp
inc
xchg
mov
inc
dec
jg
mov
mov
xchg
popa
xchg
frstor
push
test
das
test
adc
jo
add
insl
inc
lds
mov
inc
imul
stc
cmc
pop
jnp
xor
lcall
sbb
out
mov
ja
jnp
sahf
push
popa
jecxz
add
inc
push
sysenter
fstpt
ds
mov
loop
call
jne
das
and
std
jl
mov
add
movhps
ljmp
and
out
add
cld
in
mov
icebp
jno
mov
mov
push
cmp
mov
cmp
pop
push
mov
cld
mov
loope
and
push
stos
insl
mov
push
mov
mov
mov
enter
daa
test
orl
or
pop
dec
sahf
xchg
mov
mov
jns
movb
inc
or
xor
loop
adc
cli
cmp
loop
lret
dec
subl
movl
repnz
lods
push
mov
or
fimull
dec
or
or
add
adc
lret
mov
rcrb
pop
dec
adc
outsb
cmp
pop
out
adc
push
sub
xor
jecxz
sbb
insl
std
cmpsb
cmp
std
addr16
jp
ret
sarl
scas
cmp
pop
pop
or
push
jp
inc
add
mov
mov
mov
test
test
inc
bound
and
arpl
sbb
adc
jno
iret
push
push
sub
mov
fsub
jns
call
mov
hlt
xor
aad
bound
jne
in
sbb
movsl
in
sub
sub
out
adc
mov
push
stc
sub
stc
cvttps2pi
inc
ret
sub
xchg
mov
xchg
pop
lods
out
sub
out
out
cmp
or
inc
jge
add
dec
add
hlt
jecxz
dec
fistpll
mov
imul
insb
mov
in
adc
and
loopne
fwait
clc
jge
out
sub
enter
scas
dec
mov
cmp
test
sub
or
fs
adc
lods
and
jmp
divl
sbb
dec
rorl
sub
dec
fisubrs
or
ret
lahf
les
out
iret
ret
test
xchg
mov
jl
imul
inc
adc
jne
ja
or
push
mov
data16
out
test
mov
adc
and
mov
andb
pop
sub
mov
loop
adc
push
rorl
fwait
xchg
jb
push
cmp
push
jbe
adc
pop
jmp
rorb
in
add
and
or
rdmsr
popw
fxch
fildll
es
or
das
mov
in
mov
adc
xchg
pop
or
sub
ss
pop
sbb
mov
sub
and
test
pop
add
mov
xchg
xlat
les
xlat
pop
out
mov
lea
adc
fwait
add
xchg
mov
dec
push
jl
hlt
test
and
pop
mov
adc
push
imul
pop
stos
in
pop
xor
jge
mov
sbb
dec
sub
ret
cwtl
arpl
pusha
mov
and
dec
mov
and
pop
mov
icebp
rclb
insb
inc
cltd
imul
sbb
fwait
mov
lcall
fisubrl
les
sbb
jge
lea
or
mov
xchg
cmpsl
add
xchg
mov
or
mov
nop
out
mov
mov
sbb
sbb
data16
fisubrs
mov
xor
sub
adc
jne
repz
insb
sbb
ficoml
outsb
out
or
popf
sub
dec
das
outsl
add
pop
cmp
hlt
negb
pop
mov
imul
adc
inc
scas
lahf
and
jo
or
and
ds
aam
psadbw
inc
in
pusha
push
inc
jns
dec
jg
dec
xchg
daa
cmp
push
mov
lods
sahf
test
lds
icebp
dec
pop
push
fiadds
enter
ss
dec
jnp
pop
mov
pop
xchg
pop
in
adc
jl
inc
pop
loopne
xor
ljmp
pushf
xchg
or
push
outsl
xchg
lods
fcoml
shlb
pop
cmp
push
sub
sbbl
xchg
xor
fadds
enter
cmp
mov
shlb
mov
push
push
shl
movl
iret
nop
sahf
int3
rolb
sub
add
or
ret
pushf
shl
testl
sahf
scas
xor
das
jecxz
repz
mov
cltd
loop
stc
sarl
hlt
and
js
test
test
jbe
rol
enter
stc
sti
add
xor
jp
mov
push
jno
inc
xorl
arpl
popf
das
xchg
stos
xor
mov
nop
test
ror
lods
mov
jle
adc
push
cmp
push
add
add
add
insb
add
cli
sbb
or
pop
mov
dec
sbb
cmp
mov
dec
jg
rcll
inc
ja
cmp
leave
mov
xchg
jl
xchg
adc
push
cs
ficoms
push
xchg
lock
and
xchg
test
jge
std
jmp
bound
sub
dec
or
hlt
mov
adc
mov
and
faddl
sub
dec
pop
jno
iret
xor
xchg
nop
bound
and
sub
stos
pop
icebp
out
lods
addr16
push
add
divb
sbb
lahf
stc
mov
xorl
js
insb
rclb
sub
repz
lret
out
aam
jl
or
cmpsb
gs
sub
aam
jge
inc
mov
push
clc
pusha
int3
or
adc
outsb
jl
inc
xchg
daa
jae
into
xchg
imul
jns
in
ret
divb
pop
jl
in
xchg
jge
movsl
fcomp
lds
stos
test
jle
stc
lods
pop
sub
out
jge
mov
test
cmc
sub
ret
and
movsb
mov
xchg
outsl
aas
cltd
ret
fadds
sarl
ljmp
or
adc
add
inc
in
test
inc
xor
inc
fucomp
test
xchg
or
pop
mov
das
dec
adc
cmp
push
movsl
ja
cmpsb
lcall
jmp
pop
insl
and
or
jl
ret
pushf
imul
cmp
jno
dec
in
jno
fnstcw
mov
dec
mov
pop
inc
fisubl
mov
cmp
mov
aad
aas
push
add
scas
enter
inc
je
xchg
in
sbb
lret
xor
inc
std
dec
xor
sbb
repz
push
call
stc
cwtl
movsl
fwait
add
sub
test
es
add
mov
out
roll
or
xchg
jnp
jmp
popf
cmpsl
mov
or
addl
dec
dec
imul
dec
pop
pop
xchg
ror
and
arpl
leave
sbb
popa
or
je
xor
faddp
xchg
dec
mov
call
and
shll
test
or
aam
frstor
jecxz
sub
in
out
inc
add
imul
jae
fidivrl
outsb
leave
cltd
or
popa
push
xor
pop
xor
cli
sub
lcall
push
xor
fistps
sub
loopne
inc
lahf
push
movsb
sti
sbb
push
and
mov
xor
mov
icebp
outsl
test
lods
jecxz
js
and
shlb
inc
mov
jae
imul
dec
inc
or
xor
dec
mov
sub
cld
test
and
pop
adc
popf
out
and
arpl
repz
out
and
lahf
push
stos
add
and
and
pushf
inc
popf
subb
pop
out
mov
dec
inc
push
fmulp
mov
fcoms
lods
out
aam
shl
mov
jp
insb
lcall
adc
dec
push
mov
fs
push
and
cmp
xchg
jne
jne
shrb
data16
mov
in
mov
int
jo
push
aaa
jg
sub
imull
outsb
into
push
or
iret
incl
sub
sbb
push
adc
in
fs
fsubr
dec
cltd
notb
xchg
pop
cmp
pop
mov
repnz
int
mov
icebp
aad
and
cmp
sub
mov
call
pop
adc
and
mov
push
dec
jb
sub
out
inc
test
xor
sub
es
call
push
cld
test
pop
cs
icebp
push
xchg
push
mov
pop
bound
int
and
lods
pop
into
outsb
push
xor
cltd
inc
ficoms
xchg
or
mov
in
shr
ss
mov
xchg
add
push
mov
outsl
mov
dec
iret
cld
push
iret
sbb
mov
scas
shrb
mov
cli
inc
scas
push
xchg
rol
xchg
push
add
push
pusha
lods
lea
mov
jle
icebp
das
fldt
cmpsl
adc
or
xchg
mov
movsl
leave
push
mov
sahf
jp
les
xchg
out
and
dec
fidivs
aaa
or
xor
out
xor
lds
mov
enter
adc
jns
dec
cld
ljmp
mov
shrl
add
lock
stos
clc
std
inc
bound
nop
cmpsb
dec
loop
cmpsb
push
shl
outsb
call
push
xchg
dec
in
mov
lock
inc
xchg
insl
or
mov
scas
vcmpps
push
push
sbb
jnp
aaa
push
inc
pop
pop
loop
cmp
and
push
push
mov
jns
mov
mov
orb
xchg
out
pop
lret
cmpsb
jb
xchg
sub
loopne
mov
ljmp
xor
lahf
inc
and
stos
add
dec
inc
and
imul
jne
mov
add
push
dec
xchg
push
mov
rclb
lds
scas
mov
dec
jmp
push
mov
sahf
dec
or
hlt
push
sti
jbe
orl
cmpsb
cli
xchg
sub
cmp
mov
dec
cmc
push
dec
pop
cmp
out
mov
andb
pop
xor
les
int3
in
stos
or
jg
daa
inc
push
lods
call
emms
mov
fwait
jae
decb
int3
pop
test
addr16
fdivs
and
mov
cld
sub
arpl
scas
xor
ror
pop
cltd
sub
mov
pop
aad
scas
xor
hlt
fnstcw
mov
jmp
test
xchg
in
lcall
adc
sbb
mov
cmpsb
or
mov
mov
into
mov
sbb
mov
mov
insb
and
sbb
enter
aas
out
cmc
xchg
leave
and
arpl
push
add
add
mov
js
xchg
cmp
mov
das
jns
or
mov
or
out
cmpsb
dec
out
out
xchg
bound
mov
ret
mov
push
sti
out
mov
out
jno
push
imul
mov
test
mov
test
mov
jge
loopne
jne
stos
lea
jle
gs
sub
or
or
xor
push
push
flds
or
ret
pop
daa
sub
adc
push
or
adc
xchg
loop
ljmp
loopne
nop
mov
push
int
push
repnz
adc
mov
dec
and
mov
pop
xchg
orb
push
mov
pop
sub
shrl
push
and
mov
push
dec
stos
aad
orb
push
fstl
push
sub
cld
xor
lds
pop
ret
cmpl
xchg
jnp
dec
xor
or
mov
pop
popf
jae
outsl
inc
push
dec
pop
cltd
test
subb
lret
xor
xchg
mov
xor
test
test
outsl
call
mov
sti
fstps
testb
push
movsb
inc
cltd
push
xorb
loopne
sbb
ds
sbb
in
leave
repz
insb
and
jle
out
dec
ffreep
mov
or
xchg
sbb
jne
mov
cmp
xchg
cld
outsl
sbb
mov
push
fimull
loopne
imul
xchg
jns
cli
cmp
mov
in
jne
fistps
fnsetpm(287
sbb
dec
mov
inc
test
xchg
sarl
shrb
test
or
and
jle
jmp
decb
inc
ss
fistpll
inc
ljmp
fidivl
ret
popa
add
mov
lds
rorl
and
sti
ds
and
test
cmp
inc
fcoms
inc
cld
int
xor
mov
inc
out
mov
out
fists
stos
dec
stos
into
sahf
lock
into
dec
pop
and
shll
je
xor
fists
push
jnp
push
scas
and
idivl
fisubrs
sbb
pop
pop
pop
sub
int
cmp
inc
jmp
and
push
repz
or
mov
out
sbb
hlt
or
stc
dec
jg
pop
add
cwtl
nop
mov
jo
ficoml
jno
orl
xchg
test
sbb
cmp
xor
nop
adc
dec
shlb
or
hlt
dec
mov
loope
dec
inc
lea
push
enter
insb
daa
sbb
stos
mov
pop
cmp
loope
inc
in
mov
shlb
hlt
repnz
mov
pop
jns
pop
dec
push
test
jl
das
mov
imul
std
mulb
mov
mov
pop
push
pop
mov
pop
cwtl
xchg
lods
jmp
jp
cmpb
cmp
jno
fbld
add
mov
jns
sub
out
mov
push
mov
subl
jge
ret
cmc
sub
mov
out
dec
jbe
push
dec
call
es
aad
out
call
pop
adc
mov
jp
add
push
fs
pop
add
std
test
pop
test
mov
adc
repnz
int3
jmp
mov
cli
fst
cwtl
fwait
xor
dec
aad
in
jcxz
insb
adc
sub
mov
pop
testl
loopne
sahf
sub
idiv
imul
rol
into
lahf
notb
mov
cmpb
pushf
push
cmp
push
adc
js
subb
pop
das
aas
test
movsl
xchg
add
sbb
filds
mov
pop
fxch
pop
test
xor
ret
sahf
mov
pushf
mov
mov
push
jecxz
repnz
test
jbe
insl
and
xchg
jg
xchg
xchg
xchg
cmp
fildll
das
inc
mov
pop
sub
repnz
int3
daa
push
mov
out
ficoms
lea
sarb
imul
shl
add
push
loope
or
dec
mov
mov
push
mov
sub
jnp
lret
lea
aad
clc
cmp
ja
inc
jmp
cmpsl
adc
testl
adc
in
push
sti
imul
cmp
movsl
shll
ret
out
lret
mov
jmp
fs
or
dec
push
and
sub
rcll
cs
loopew
movsb
adc
and
pop
int3
pop
sub
data16
sub
push
xchg
stos
and
adc
jge
lods
mov
xorl
jns
imul
sub
dec
jle
icebp
dec
xor
ret
xchg
xchg
pop
add
sub
icebp
arpl
scas
imul
jb
lods
fs
call
shrl
jmp
cmpb
flds
rol
sti
cmc
xchg
daa
out
pop
movsb
pop
inc
sti
in
mov
fsub
mov
adc
jo
mov
sbb
cld
je
dec
pop
cld
pushf
and
mov
adc
cmp
scas
dec
cs
mov
mov
or
in
aam
mov
mov
pop
ror
adc
icebp
push
cmp
aad
les
sbb
pushf
test
fdivs
pop
add
adc
mov
daa
mov
push
jae
push
pop
scas
pop
aam
movsl
adc
outsb
xchg
das
arpl
xor
test
dec
inc
sbb
xor
cmp
cmp
xchg
push
sub
fldcw
movsb
dec
subl
xchg
inc
inc
jno
push
or
dec
into
in
xor
inc
int
in
push
dec
dec
in
ljmp
das
jp
sub
sahf
xchg
mov
fldpi
xor
inc
mov
or
jl
aam
push
mov
and
popa
insl
lods
movsb
pop
mov
inc
fwait
pop
into
xor
and
and
jnp
cwtl
in
sub
or
xchg
fimuls
cmp
pop
cltd
push
cmp
dec
add
cltd
push
cmc
jle
rcrl
dec
pushf
push
cmpsb
int3
jmp
push
dec
aas
pushl
xlat
pop
jge
test
xchg
aam
ret
mov
outsb
or
in
mov
mov
adc
out
sbb
jp
cmp
cltd
rol
sub
jo
xor
push
pop
fists
aaa
jno
cmp
arpl
dec
clc
jnp
push
or
loopne
jnp
dec
and
ljmp
adc
sub
adc
rcrb
mov
adc
int3
add
hlt
out
test
jge
xchg
enter
and
xor
push
push
push
ret
outsl
jp
shrb
sbb
lock
or
lods
or
pushf
sub
pop
mov
adc
adc
adc
push
cmpsb
rcr
push
adc
shrl
cmpsb
sub
push
out
clc
push
jne
out
movsl
scas
pop
jo
rcrb
shrb
push
or
cmp
sbbb
dec
add
and
orb
pop
outsb
mov
jg
cmpsb
aas
sub
cmp
lahf
ret
push
or
mov
imul
pusha
out
pusha
jb
dec
xor
pop
jae
call
mov
mov
repnz
sub
sbb
insl
aam
cli
mov
mov
call
sub
jl
mov
jge
lds
xchg
aaa
std
hlt
stc
inc
out
lods
cmp
sbb
out
mov
mov
rclb
fstps
pop
out
sbb
mov
push
test
jge
lock
xor
imul
decb
and
repz
push
sub
sub
in
outsb
and
imul
mov
mov
aad
or
add
outsl
icebp
pop
dec
mov
rcll
mov
and
dec
insb
cwtl
cmp
arpl
jge
mov
jae
test
dec
or
dec
mov
push
push
mov
dec
or
outsl
adc
push
xchg
lea
jae
mov
sbb
fs
inc
into
pop
mov
int
mov
loope
jnp
int
or
adc
or
add
xor
test
and
std
in
push
daa
fiadds
cmovo
repz
sti
jge
pop
stos
xchg
mov
je
dec
dec
ja
inc
jne
outsl
aad
mov
and
inc
xchg
add
and
loop
cmpsl
outsl
daa
sbb
cwtl
fistpl
outsl
jle
in
inc
adc
aas
ds
sti
sub
mov
mov
imul
shrb
push
or
les
repz
lock
aam
mov
idiv
lret
xor
push
gs
sti
push
icebp
ljmp
xchg
sub
addr16
lock
mov
pusha
cltd
mov
je
lret
inc
imull
sub
mov
stc
test
in
pushf
inc
cwtl
mull
je
lods
jg,pt
ds
cmc
cmp
mov
lea
xchg
jp
xchg
xor
sub
cltd
sub
arpl
sub
aam
xchg
lock
inc
cmp
enter
call
cmp
or
fs
cmp
xchg
rol
inc
inc
jo
fildl
pop
sub
ja
jnp
pop
clc
pop
outsl
lret
jae
js
adc
sbb
push
mov
adc
dec
and
mov
jle
clc
sub
inc
mov
jmp
sub
dec
sbb
sbb
loopne
imul
testb
enter
push
fstp
scas
outsb
pop
outsb
and
daa
pop
jb
movsl
out
lds
adc
xchg
xor
dec
insb
dec
add
and
push
out
and
shlb
mov
or
push
xchg
lcall
vmread
movb
fiaddl
xor
push
mov
xchg
or
cmp
sub
punpckhwd
jmp
rcl
js
cli
jg
adc
test
inc
mov
add
adc
leave
mov
cld
mov
inc
insb
jg
dec
adc
push
pop
xchg
cmovb
mov
cmpsb
or
lret
repnz
cmp
stc
aas
sbb
negb
jnp
or
cmpsb
pop
inc
pop
cmp
aas
shll
sub
insl
mov
test
push
and
sti
sahf
push
sbb
jecxz
mov
dec
lods
into
sbb
out
add
andl
lock
or
call
enter
addl
loope
jmp
test
sbb
imul
popa
or
jne
dec
xor
inc
jg
and
mov
dec
rcll
jg
mov
pop
push
or
movsl
stos
and
lcall
pop
lods
sub
pop
nop
imul
adc
jno
imul
mov
dec
lods
enter
push
test
xchg
popf
clc
int3
cmpsl
cmp
dec
sub
adc
decl
mov
pop
push
jns
mov
jnp
out
xor
or
in
adc
jl
rcll
cld
in
push
push
mov
and
add
js
add
mov
or
push
sidtl
insb
test
dec
stc
jo
test
sub
addl
or
es
mov
jae
inc
jg
bound
mov
mov
mov
jge
add
mov
mov
cmp
and
or
scas
jmp
mov
mov
sbb
jbe
lods
and
cmpsl
xor
mov
push
out
and
mov
mov
inc
dec
mov
aas
or
xor
and
adc
cmp
sbbl
mov
xlat
aas
je
xchg
adc
sub
add
sbb
dec
movsb
fwait
icebp
pop
pop
push
scas
dec
mov
pop
loop
xchg
lods
adc
pushf
sbb
pop
mov
sub
cs
testl
pop
jne
push
loope
pop
sbb
dec
leave
dec
adc
xchg
add
scas
cmp
pop
ds
arpl
int3
cwtl
mov
testb
push
inc
lret
inc
movsl
shlb
sti
adc
jecxz
shl
fwait
mov
cmpsb
xchg
mov
outsb
rcll
orb
and
mov
pop
pop
cmpsl
mov
dec
xchg
ficoms
int
into
int
add
je
shlb
xlat
cmpxchg
out
mov
mov
sub
dec
adc
out
jg
out
inc
dec
ret
lcall
jmp
add
xchg
mov
jne
pushf
into
repz
jle
pop
shrl
or
fldcw
adc
push
gs
sbb
add
in
data16
ret
add
daa
mov
icebp
or
jnp
repz
xlat
xchg
cmp
and
arpl
data16
add
arpl
sub
ret
ljmp
imul
cmpsb
repz
inc
icebp
cmp
jnp
das
shl
push
xchg
adc
jg
jnp
xchg
adc
sbb
jle
shl
push
test
out
xor
dec
aas
push
arpl
mov
stos
mov
fisubs
sbb
mov
imul
call
popf
mov
pop
fsubp
xchg
pop
pop
push
lods
popa
mov
push
xchg
loope
add
jbe
insl
inc
mov
jge
mov
mov
jge
mov
pop
lea
mov
imul
push
mov
push
loop
lds
lcall
ret
jno
ljmp
mov
cmc
jecxz
cli
notb
out
xlat
arpl
repnz
inc
add
cmp
outsb
pop
test
xor
or
test
xchg
aaa
dec
cwtl
push
xor
mov
inc
sub
push
jp
push
jb
mov
push
jmp
fiadds
dec
sbbl
mulb
xchg
es
jno
out
lret
shlb
push
mov
out
cmp
ljmp
cmp
js
xchg
xchg
pop
sbb
jp
scas
clc
insl
mov
push
push
push
push
cmp
lret
lahf
add
lds
dec
fsubrl
fildl
ret
jne
cmp
adc
jo
inc
xchg
out
icebp
cld
fistpll
mov
sbb
mov
pop
mov
cmp
cmp
repz
jae
or
icebp
xchg
gs
cmc
fcomps
loop
andl
leave
incl
mov
sbb
movl
inc
sbb
dec
jmp
xor
in
js
adc
mov
pop
std
pushl
mov
in
cmc
movsb
je
cltd
pop
adcl
jbe
fildll
inc
fldenv
inc
and
cmpsb
adc
sub
add
aad
into
in
repnz
push
cmp
inc
jo
mov
lret
pop
fwait
sbbb
cmp
pop
xor
cmpsl
test
stc
mov
push
lahf
jecxz
fnstenv
cmp
push
and
mov
test
and
sbb
stos
lahf
pop
repz
push
pop
bound
lods
lret
aaa
mov
push
and
xchg
in
mov
sti
xchg
and
arpl
leave
mov
popl
fisubl
dec
jp
jbe
jnp
dec
adc
aam
fwait
jp
das
mov
ss
mov
in
ficompl
into
add
scas
loopne
mov
loope
sub
jmp
mov
pop
mov
iret
dec
addr16
jmp
or
call
sbb
test
iret
aaa
jg
pop
mov
imul
push
sub
dec
sbbb
rcrb
dec
out
lock
data16
and
test
mov
inc
jg
js
xlat
test
push
xchg
mov
xchg
xlat
shrb
mov
icebp
sub
sahf
jl
mov
leave
jbe
movsl
jmp
rcll
xchg
test
repnz
jae
pushf
es
or
mull
mov
jb
jb
xchg
ds
and
fdivrl
xchg
mov
or
nop
xorl
and
or
mulb
fsts
jg
call
div
push
in
cmp
push
mov
mov
mov
xchg
push
and
and
repnz
fistpll
out
icebp
sti
xor
cmc
orb
add
mov
or
jmp
mov
xor
cmp
xchg
clc
pop
sbbb
pop
xor
sbb
sub
ds
lcall
mov
data16
bound
jl
jno
out
mov
adc
bound
push
pop
pop
ss
shlb
xor
push
ret
adc
or
in
fbstp
jae
dec
pop
push
ja
jb
fs
or
mov
enter
shr
mov
mov
jecxz
sub
in
add
sbb
stc
jl
mov
ja
push
not
push
add
xchg
out
dec
rorl
jecxz
sarl
pop
idivb
icebp
push
xchg
cmc
adcl
pop
fldl
enter
pop
lahf
popa
shrl
outsl
push
dec
scas
popa
inc
xlat
mov
cs
loop
adc
fisttpll
inc
mov
cmp
fmuls
push
mov
mov
cld
sbb
and
ss
pop
mov
fists
or
es
xchg
inc
push
sbb
shr
in
cmc
sbb
add
xchg
dec
xchg
leave
or
jg
or
xor
push
iret
idivb
movsl
rorb
das
add
and
fldcw
movsl
push
adc
je
sbb
mov
and
cmpsb
add
ss
cmp
adc
inc
lret
or
out
push
mov
lods
out
dec
xchg
imul
sub
sbb
ja
enter
pop
das
xor
in
rolb
push
stos
dec
dec
pop
sbb
test
ss
shlb
lock
push
rolb
push
bound
sub
jbe
ja
es
mov
push
shlb
cs
call
fwait
sbb
fcoml
xchg
pop
ds
gs
and
movl
aas
movb
fs
jmp
bound
or
lods
mov
lods
fisubl
push
pop
xor
and
ret
test
test
outsl
push
mov
ljmp
cmc
jnp
inc
mov
mov
mov
or
or
push
or
rcrl
and
cmp
jne
or
out
sbb
sub
jae
cmp
mov
mov
inc
lods
es
pop
push
repnz
push
add
pop
adc
or
sbbb
pusha
mov
loopne
fisttps
fwait
leave
int
je
cmpsb
sub
sub
xor
ret
outsb
mov
pop
clc
and
mov
notb
in
outsb
xchg
jns
enter
push
daa
dec
sub
mov
mov
loope
arpl
fstpt
sti
iret
movsl
mov
test
lock
cltd
aas
mov
xor
orl
mov
rcrb
mov
sbb
cmp
xor
sbb
cmpsb
pusha
or
xchg
shrl
push
jne
and
jns
arpl
inc
xchg
in
fstps
add
cld
roll
adc
sub
or
push
mov
mov
cmpsb
inc
push
mov
lahf
push
and
mov
pop
loop
cmc
pop
pop
push
push
push
pop
aam
xchg
mov
mov
cmc
adcl
mov
test
pop
inc
jns
dec
cmp
dec
pop
iret
les
xor
shrl
pusha
and
fimuls
in
test
mov
jg
xchg
hlt
ret
lods
test
push
fsubs
fiadds
jmp
test
sahf
aaa
lret
mov
jl
clc
xchg
xchg
insl
xor
fisubl
push
mov
test
call
or
dec
jb
add
or
lods
pop
cmp
xor
inc
or
sbb
notl
mov
aad
pop
xor
inc
dec
pop
mov
cmp
inc
movsb
pop
mov
popf
xchg
mov
inc
clc
add
scas
pop
out
and
inc
in
mov
sbb
stc
scas
call
jnp
into
pop
scas
sahf
cmp
jbe
jno
imul
testb
xlat
sbb
out
imul
ljmp
mov
fwait
in
popa
ret
push
xchg
cmp
xchg
push
lea
sbb
fwait
xor
push
sub
ret
jge
xchg
out
loop
push
ficomps
push
cli
xor
lods
push
dec
dec
inc
mov
std
addl
pop
ja
inc
xor
pop
cltd
push
jno
call
cmc
roll
and
xchg
or
xorb
int3
adc
jp
jp
loopne
icebp
repz
and
jnp
inc
dec
imul
stc
pop
cltd
lahf
pop
stc
ja
into
and
adc
call
push
in
push
add
cmp
mov
out
stc
cmp
mov
test
in
inc
and
push
imul
in
hlt
mov
pushf
cld
add
pop
jle
call
or
add
fldcw
inc
push
inc
jno
push
and
stc
inc
pop
jno
push
cmp
clc
dec
mov
cmp
hlt
stos
jecxz
int
mov
jb
fwait
test
cmc
xchg
mov
in
pop
je
ds
xchg
pop
xchg
test
xchg
mov
or
in
leave
outsb
adc
mov
gs
imull
cmp
inc
aad
fldenv
or
jecxz
js
scas
imull
sbbl
in
int
push
ret
loope
scas
nop
or
xor
repnz
push
push
mov
adc
in
testl
lea
jno
adc
sub
jns
int
fmulp
into
das
je
mov
sbb
mov
ss
insl
push
call
sub
mov
notb
mov
mov
xor
jle
stc
sub
xchg
notl
cmp
adc
xlat
dec
stc
jne
iretw
fiaddl
in
mov
xchg
loop
dec
mov
sahf
adc
xchg
fmull
je
mov
popf
jle
inc
push
ljmp
push
cmp
fisttpl
cmp
cmpsl
inc
shll
test
popf
inc
sbb
daa
fmuls
jae
sub
in
popf
fcompp
dec
into
jg
aad
and
xchg
and
out
pusha
loopne
add
scas
xor
mov
ror
inc
aam
leave
mov
xchg
mov
mov
cld
int3
or
push
in
mov
fcmovnbe
xor
rorl
mov
pusha
push
andb
cmpsl
mov
lock
enter
lea
xchg
push
adc
mov
push
add
xor
lods
aas
jl
xor
shrl
and
xchg
push
add
imul
test
scas
rsqrtps
in
dec
mov
lcall
out
stos
xchg
cmp
mov
in
inc
xor
test
insl
ja
dec
inc
pop
dec
outsl
lret
add
mov
jecxz
cmp
mov
dec
mov
dec
leave
lods
xor
lea
addl
dec
pusha
mov
ds
test
adc
pop
jns
cltd
fwait
mov
aaa
aaa
jbe
pop
xor
es
incb
xlat
shlb
filds
cli
aad
pop
xchg
test
leave
cmp
fists
imulb
push
pop
test
stos
xchg
and
adc
jnp
cmp
sbb
mov
inc
add
pop
punpckldq
add
or
jne
dec
add
mov
cmp
mov
jg
and
xchg
nop
js
sub
rcrb
fisttps
add
filds
stos
outsl
movsb
cmp
adc
xchg
mov
mov
repnz
and
and
insl
aad
add
push
fsubs
cltd
xor
jns
imulb
inc
test
movsl
xchg
cwtl
fdivrs
jno
push
dec
push
mov
mov
mov
mov
xchg
lcall
pop
xlat
mov
push
cld
mov
or
dec
divb
mov
rorl
sbb
and
stos
sub
hlt
or
orb
movsl
push
inc
mov
lods
std
pop
js
mov
mov
pop
mov
sbb
mov
mov
sti
fwait
push
jmp
xchg
lret
xor
push
and
insb
sub
mov
aas
sub
iret
inc
or
or
loope
adc
sbb
push
je
pop
scas
adc
int3
das
data16
cwtl
lock
sub
push
or
rcrb
dec
pop
or
hlt
jg
add
lods
das
xor
hlt
and
hlt
dec
xchg
in
adc
test
shlb
shrb
mov
lret
adc
insl
push
jle
adc
sarb
adc
data16
ljmp
push
xor
loopne
stc
fwait
jne
mov
inc
or
fidivrs
sbb
mov
add
mov
pop
push
jbe
pop
pop
xor
push
xchg
imul
dec
aaa
push
nop
mov
sub
mov
enter
inc
enter
mov
popf
sti
xor
inc
mov
cli
enter
inc
sub
pop
push
sub
lret
sub
neg
loopne
cmp
push
js
cltd
cmp
std
hlt
inc
jmp
xor
ss
ss
or
pusha
pop
daa
ds
push
pop
rcll
add
xor
loopne
ret
xchg
gs
cmp
stos
cmp
lahf
gs
jo
mov
jae
push
jbe
pop
or
pop
scas
dec
mov
mov
mov
adc
jle
adc
pushf
xor
jae
leave
add
mov
rcrb
cmp
aas
or
scas
xchg
loopne
bound
dec
and
jle
lock
push
popa
xchg
addr16
sti
mov
insb
lret
or
mov
jno
lahf
cmp
mov
xor
imul
mov
inc
ret
mov
pop
cld
fistps
ja
cmpsb
pop
or
push
loop
mov
mov
mov
fcomi
aaa
repz
add
mov
adc
movsb
pop
jge
fwait
jg
pop
test
adc
add
data16
add
std
cltd
mov
cmp
idiv
adc
push
pop
pop
xor
call
sub
push
push
shlb
sub
jl
mov
mov
pop
push
fnsave
push
iret
sbb
xor
jmp
std
fcomi
xchg
adc
dec
sbb
xchg
loope
inc
stc
jecxz
cli
loop
mov
jp,pt
pop
shlb
mov
fnstsw
push
arpl
inc
out
adc
xchg
jnp
into
fiaddl
push
mov
mov
movsb
mov
mov
hlt
rorb
push
std
xchg
ljmp
outsb
pop
jb
inc
push
test
mov
cs
hlt
lahf
aas
pushl
int3
dec
push
mov
fdivrp
clc
fdivrs
add
bound
fnstsw
xor
xorb
sbb
mov
or
jns
fsubr
iret
idiv
push
jg
pop
push
incl
xchg
fnstsw
mov
pop
xlat
pop
out
xchg
mov
xchg
sub
sub
xchg
inc
fcompl
and
and
mov
cmp
out
pop
stos
sub
in
mov
sbb
arpl
les
jnp
iret
aam
dec
ds
xlat
sbb
cmp
aad
pop
push
addr16
dec
cmp
or
xor
dec
push
aad
xorb
mov
repnz
cmp
mov
mov
fwait
repnz
push
lret
fildll
jmp
adc
adcb
addps
mov
lds
into
cwtl
lock
sbb
mov
test
loopne
pop
jne
mov
mov
cmp
in
js
cmpsb
gs
and
and
cmpsb
lds
cmpsb
jnp
xchg
loope
ljmp
mov
xor
jg
dec
xchg
add
xor
push
sbb
jecxz
inc
mov
imul
jmp
fs
mov
pop
es
xchg
jle
cmp
dec
test
sti
bound
ret
jnp
testl
mov
lret
std
ljmp
mov
jl
mov
sahf
int3
xchg
inc
pop
push
into
dec
out
popa
mov
sub
mov
ret
loope
arpl
jmp
sub
or
jns
inc
push
push
loop
jnp
pop
inc
inc
fildl
shrl
imul
push
mov
das
mov
int
sarl
out
cmp
jmp
out
insb
stos
pusha
dec
mov
insl
push
inc
fidivrl
inc
sbb
es
je
mov
outsb
mov
fdivr
pop
ljmp
sub
notb
stos
mov
in
and
ficoml
mov
fwait
cmpsl
dec
pop
xchg
arpl
add
jmp
mov
ss
jecxz
test
sbb
jne
fistl
sub
mov
inc
add
sbb
in
sarb
dec
pop
fstpt
add
add
or
push
test
test
js
imul
mov
hlt
mov
shlb
mov
test
out
mov
nop
xor
mov
mov
outsl
mov
ss
out
cmpsb
imulb
cli
jecxz
push
jae
cmpsb
test
mov
mov
hlt
stc
das
or
dec
cmp
dec
xchg
jmp
cld
dec
adc
fmull
ret
sub
in
rcll
adc
mov
cmp
push
xor
icebp
sub
adc
sbb
ret
lret
daa
sub
push
adc
rcrb
scas
xchg
cmpb
sbbb
cmp
cmp
sub
repnz
sub
insb
in
shl
xor
mov
sahf
jnp
sbb
outsb
shl
pop
cmp
aaa
pusha
dec
mov
adc
mov
add
jecxz
add
push
xchg
lock
ja
dec
adc
or
int
and
xor
popa
or
rorb
add
jo
mov
sbb
arpl
clc
lods
or
push
jne
cltd
fcoml
mov
int
lcall
in
popf
jbe
cmp
dec
dec
adc
popa
in
aad
and
sbb
add
out
mov
and
sub
jns
or
inc
mov
popa
xchg
sysret
in
push
jp
or
xor
push
cld
cmp
dec
cmp
pushl
pusha
sbb
or
aad
data16
xchg
mov
cli
mov
aaa
mov
xchg
or
add
sub
xlat
in
dec
testb
movsb
dec
sbb
jp
push
cld
iret
mov
pop
mov
mov
aad
mov
ret
mov
test
jge
jge
fstpt
repz
movsl
es
test
dec
test
xchg
jle
test
loope
add
sub
insb
ljmp
sahf
subl
loop
roll
fisubrl
dec
lea
lock
jmp
fsubrs
repnz
jecxz
pop
int
adc
call
pop
dec
jle
sarb
inc
jb
sub
xor
jbe
xor
xor
pop
repz
in
fnsave
outsl
sub
inc
fidivl
push
add
mov
sub
pusha
xchg
dec
dec
sbb
mov
fidivrs
pop
cmp
pusha
outsl
or
mov
jmp
xchg
mov
or
cmc
cwtl
xchg
sub
ret
sub
outsl
nop
inc
ret
xchg
cmp
data16
fcomps
cmpsb
ror
xchg
xor
push
add
push
stos
xor
movsb
cmp
mov
xor
les
mov
int
aam
pop
xor
mov
mov
jnp
lahf
insb
test
les
leave
out
push
pop
xor
testb
je
pop
into
in
test
pop
mov
lods
push
jg
adc
xor
inc
mov
lds
inc
fs
or
scas
scas
es
leave
and
sahf
mov
aam
mov
adc
mov
outsb
pop
pop
repnz
cmpsl
adc
pop
push
call
ds
icebp
enter
inc
bnd
mov
mov
pop
lahf
mov
adc
jmp
scas
xchg
gs
cs
mov
aad
inc
les
pop
pop
fwait
es
push
mov
sbb
shrl
popf
popa
hlt
dec
and
sbb
retw
sti
out
sar
pop
jp
and
push
mov
cmpsl
xor
out
leave
cmp
out
cmp
push
mov
imul
insl
imul
pop
adc
xor
lret
add
je
mov
xlat
inc
jmp
adc
lret
loopne
cld
sub
hlt
pop
nop
scas
ret
push
outsl
out
leave
xchg
ret
mov
fidivrs
jmp
popa
adc
xchg
cmpsl
cmpsl
dec
int
push
jle
test
gs
adc
out
sbb
outsl
sbb
in
adc
jb
cs
jo
adcl
hlt
loope
xlat
inc
das
xchg
cmp
loop
je
xor
inc
iret
test
insl
call
ljmp
mov
sbb
push
push
cld
xchg
sub
jo
and
push
mov
cmpsl
or
ret
lock
xlat
into
xchg
dec
js
loop
or
mov
idiv
push
out
loopne
mov
les
xor
rcr
jae
icebp
orb
mov
fdivr
ficomps
dec
loop
idivb
aas
clc
test
shl
add
imul
add
add
sub
into
mov
xor
mov
ja
cmp
push
outsl
mov
stos
pop
push
in
lea
icebp
rclb
test
adc
or
cmp
mov
fsubrp
sbb
cmp
jb
or
and
outsl
lea
jne
pop
cld
xchg
mov
mov
pusha
add
adc
push
loopne
mov
xchg
jg
cmp
mov
aad
sbb
loopne
das
sub
add
lods
push
sbb
pop
das
and
in
lods
adc
xchg
sub
cwtl
popf
xchg
fcoms
fnstcw
ss
sti
xchg
adc
dec
pop
rcll
test
sbb
test
mov
rol
adc
dec
sbb
inc
out
push
mov
int3
xchg
jp
pop
popf
sub
rcll
popf
jbe
imul
insl
mov
sbb
or
out
push
icebp
cmp
mov
call
imull
mov
cmovno
mov
mov
sub
push
xor
push
outsl
sahf
shlb
es
jnp
insb
clc
fcmovnbe
les
int3
xlat
out
fsubl
je
xchg
push
shlb
popa
js
out
pop
pusha
dec
xlat
pop
outsb
out
adc
jge
idivb
dec
xchg
fisubs
or
test
shll
pop
in
mov
hlt
or
xor
pop
mov
repz
pusha
or
push
jbe
movsb
add
adc
adc
mov
rcr
jp
fnstenv
in
mov
dec
je
or
dec
xchg
enter
mov
xor
jecxz
scas
fadds
mov
jge
or
cmpsl
in
mov
add
or
mov
ret
jge
divb
mov
sub
push
jnp
jnp
imulb
jle
inc
imul
fwait
in
cld
loop
outsb
dec
enter
lods
popa
xchg
int
sbb
lcall
insb
adc
daa
mov
lret
jo
jp
scas
add
enter
sbb
lcall
xor
std
xchg
pop
mov
hlt
orl
mov
das
push
or
fstl
imul
push
mov
pop
mov
in
sbb
add
enter
daa
es
in
call
loop
stc
imul
aaa
and
aaa
xor
mov
stos
in
test
mov
into
imul
xchg
inc
xor
hlt
fmull
pop
adc
push
out
dec
fstps
adc
mov
mov
into
cmp
cmp
cmc
ss
cmp
cld
rorb
popf
test
decl
ret
sti
cli
test
fisubrl
sbb
adc
nop
in
cli
dec
xchg
outsb
les
or
negb
mov
mov
add
fisttps
add
call
add
cli
add
inc
mov
sbb
fmuls
insl
xor
cld
pop
sbbb
cmp
mov
dec
inc
bswap
aam
adc
push
jbe
outsb
push
or
mov
hlt
roll
jp
std
bound
push
cmc
fldl
ljmp
jl
sbb
cs
jg
lock
push
popf
icebp
jns
fcoms
xchg
fs
stos
or
jae
mov
and
mov
lahf
pop
push
mov
sbb
jno
jge
lahf
popf
mov
mov
jo
mov
clc
aaa
lahf
adc
insb
loope
inc
iret
xchg
xor
aam
pop
out
xchg
into
push
fcmove
lods
les
push
dec
dec
mov
cmp
in
and
repz
test
pop
mov
cmp
dec
jne
hlt
cmc
aam
cmpsb
dec
ret
push
insb
cmp
js
dec
xor
testl
jl
imul
leave
push
fidivl
enter
xor
fwait
cld
and
out
dec
adc
dec
xor
in
repz
ljmp
shrl
mov
es
lods
clc
inc
fnstenv
adc
push
dec
js
or
fwait
lret
ds
mov
push
inc
mov
outsb
push
imul
mov
ss
inc
push
popf
push
lahf
lcall
or
or
sub
les
shl
mov
jnp
mov
push
xchg
inc
mov
xor
mov
ds
insl
jle
jecxz
push
mov
xchg
or
nop
in
cmp
dec
int
sbb
test
cltd
jl
dec
enter
lcall
in
inc
call
or
fcomp
test
or
jge
in
sub
add
pop
xchg
dec
and
jg
cltd
hlt
bound
add
nop
pop
hlt
ljmp
shl
fadd
cmp
fisubs
mov
popa
sarl
ficompl
es
mov
dec
push
pop
stos
push
subb
xor
rclb
cmc
pop
mov
push
mov
xor
pop
inc
inc
push
lock
inc
subl
stos
mov
std
ljmp
scas
xorl
rclb
aaa
cmpsb
je
int3
imul
sbb
fisubs
imul
pop
and
popf
int3
popf
adc
jg
cltd
mov
stc
data16
es
clc
je
fidivrl
mulb
je
adc
ret
pusha
jno
xor
rcr
jge
push
out
push
pop
cmp
in
jbe
sub
in
mov
sahf
add
jno
enter
sbb
mov
fmulp
int
xchg
shll
add
mov
int
inc
lds
daa
cmp
mov
mov
cld
loopne
test
sti
xchg
mov
push
addl
push
jns
arpl
movl
jno
mov
mov
push
rcl
and
mov
pop
push
pop
fs
or
out
mov
push
test
pop
xchg
pop
nop
cmp
scas
jns
fimuls
aam
push
sti
je
ja
push
repnz
xor
or
cli
cwtl
sbb
mov
in
out
sub
jmp
daa
int3
lahf
or
dec
xor
xchg
iret
leave
add
push
lods
fbld
sbbb
int3
test
fsubr
aam
push
mov
xchg
fistps
ret
fsub
pop
insb
mov
fstl
mov
das
jno
push
cld
ret
mov
shrb
adc
and
push
xchg
std
push
clc
movsl
sti
arpl
xor
and
imul
xor
add
mov
enter
xor
xchg
enter
ficoms
out
xchg
daa
push
ret
aas
inc
lods
mov
xchg
sbb
outsb
xchg
xchg
imull
lods
push
and
clc
jmp
dec
jecxz
jmp
out
pop
mov
cmp
daa
andb
jnp
fstpl
adc
cmp
in
cmp
push
mov
pop
sarl
or
test
jno
bound
in
push
les
cmc
add
mov
jp
xor
inc
cwtl
add
pushl
and
es
aam
pop
sahf
in
mov
dec
call
ds
mov
lea
out
dec
out
lret
testl
in
das
pop
jns
or
lea
in
cmp
or
or
stos
js
jecxz
movsl
cmp
je
adcl
adc
or
inc
push
aad
popf
add
cmp
inc
and
scas
popf
or
int3
cmp
push
fs
movsl
pop
faddp
jno
cmpsl
cltd
inc
loopne
pop
imul
pop
orl
push
add
dec
les
jmp
iret
mov
dec
int
or
jp
inc
icebp
ja
xor
sbb
xor
pop
sbb
fisubl
aaa
fwait
enter
adc
cld
les
xchg
out
out
or
push
pop
andb
imul
hlt
adc
repnz
mov
pusha
lret
icebp
lcall
push
pop
jg
cmp
xor
or
dec
sti
push
and
push
cli
push
test
mov
xor
xchg
les
in
xor
cmp
adc
and
fdivs
sbb
or
inc
cli
rcrl
rorl
push
adc
and
mov
jle
adc
dec
jne
pop
cmc
xchg
fimuls
cltd
pop
push
fldcw
rclb
mov
or
pop
mov
push
or
les
pop
fstpt
xor
scas
in
movsb
mull
cltd
clc
push
out
jb
scas
push
pop
data16
mov
mov
dec
shll
add
es
mov
cmp
movsb
mov
notl
subb
repnz
orl
pop
notl
xchg
aaa
out
sbb
repz
fadd
fcomps
mov
ret
movsb
xor
sub
jnp
push
jnp
or
negl
andb
inc
cmc
jmp
push
das
jae
xchg
mov
cmp
fsubrs
mov
jnp
stos
mov
mov
aaa
sbb
push
push
or
mov
cli
lock
dec
decb
mov
rorb
jne
shrl
add
rorl
arpl
out
pusha
push
push
test
add
inc
jne
adc
lea
je
sub
stos
lcall
mov
pushf
push
sarb
xlat
dec
mov
fstps
jo
lret
icebp
hlt
xchg
movsb
and
push
movsl
fs
js
cmp
gs
add
jo
mov
enter
mov
xor
cmp
mov
push
popf
adc
ret
inc
dec
adc
orl
sub
push
pop
adc
fcompl
out
jg
adc
sbb
mov
xor
popa
push
ss
cltd
and
sub
adc
imulb
dec
addr16
or
ficoms
or
lea
push
jge
sbb
sbb
cltd
mov
lea
and
mov
scas
cmpsl
mov
in
add
loop
jecxz
mov
popf
pop
inc
xchg
dec
push
lods
adc
mov
xor
fwait
fwait
and
rorl
mov
sbb
outsb
xchg
cmc
fildl
popa
repnz
pushf
shrb
dec
lods
inc
sar
xor
mov
cld
push
sub
sahf
mov
int3
and
and
pop
sbb
inc
ret
xchg
mov
fs
dec
jnp
imull
ss
push
scas
inc
sbb
imul
mov
or
mov
xor
adc
mov
shl
and
jle
in
outsb
ljmp
mov
ljmp
sbb
mov
std
in
pushl
jns
mov
mov
cmp
push
cmp
lea
icebp
and
gs
stos
adc
dec
iret
fstps
and
jbe
es
jae
dec
jmp
dec
es
and
dec
fwait
mov
xchg
push
popa
scas
inc
stc
mov
sub
mov
lods
in
arpl
adc
stos
mov
mov
mov
mov
jg
clc
add
ljmp
lahf
push
adc
pop
or
inc
adc
mov
sub
sbb
sti
push
xor
in
dec
jno
push
push
repnz
xor
sarl
lea
xchg
lret
and
jmp
in
aam
xchg
lods
ds
rcl
push
decl
sbb
mov
jo
sbb
or
icebp
xor
mov
cli
mov
imull
out
pop
and
adc
cmovb
xor
mov
xchg
push
outsl
test
sbb
and
movsl
loopne
adc
pusha
fsts
je
adc
dec
sbb
adc
xchg
mov
push
fidivs
scas
xor
xchg
mov
xor
mov
xor
pushf
mov
int3
mov
cmp
or
mov
ror
pop
sub
mov
jae
out
ret
aas
out
jbe
or
aam
xchg
dec
xchg
imul
push
and
mov
push
push
jno
aas
xchg
mov
inc
or
add
aaa
add
inc
das
ret
out
xchg
scas
out
mov
inc
cmp
mov
notl
out
dec
hlt
cmpsb
repnz
call
xchg
adc
xchg
faddl
ud1
xchg
rclb
lahf
or
fcoml
cmpsb
push
sbb
mov
jae
jmp
push
rcll
movsl
loop
js
mov
sti
push
bound
mov
in
mov
nop
push
push
in
popa
mov
rorb
lret
insl
int
ret
lods
cltd
lds
mov
xchg
pop
push
xor
add
adc
insl
cs
xlat
sbb
and
les
lods
jno
ret
pop
mov
cli
je
xor
xor
data16
sub
xchg
aas
adc
mov
fcompl
cmp
shl
sbb
loop
and
andl
and
ja
mov
add
xor
xor
clc
cwtl
push
shrb
xor
sbb
mov
xchg
outsl
shr
xor
scas
scas
arpl
es
popf
mov
imul
jmp
add
aas
or
and
insl
xchg
xchg
jbe
cmp
mov
push
add
pop
movsl
mov
popa
mov
mov
in
fsubrs
dec
fistl
adc
in
mov
push
test
lea
insb
arpl
mov
dec
lock
pop
sti
sbb
fdivrs
test
lret
mov
sbb
push
or
or
rcll
mov
imul
push
cmp
fdecstp
lds
out
sbb
push
pop
pop
js
mov
push
inc
xchg
xchg
or
outsl
dec
inc
jecxz
add
notl
aaa
sbb
sbb
push
sbb
add
and
mov
push
cltd
mulb
into
push
dec
cmp
adc
shll
push
lods
adc
fldl
mov
mov
loop
and
inc
rcrl
std
sub
xchg
jle
popf
dec
les
jge
jae
sbb
int3
and
repz
jecxz
push
push
inc
sbb
cmpl
sbb
clc
sbb
int3
mov
das
pop
adc
dec
xchg
pop
sub
rcll
xchg
lock
lods
xchg
test
jne
rolb
sbbl
shufps
sbb
mov
jnp
xchg
es
sub
adc
mov
cmpsb
fwait
push
sub
and
push
add
dec
xor
mov
and
or
popf
nop
lret
or
push
and
lods
aam
fcomps
jp
mov
es
xor
cs
rcrb
sbb
pop
and
adc
repz
xor
sbb
cwtl
popa
out
inc
mov
out
movsl
inc
popf
mov
adc
push
in
jo
rol
mov
or
dec
cmp
data16
test
mov
test
mov
or
sbb
jle
fdivs
push
dec
rolb
enter
divb
rcrl
jae
test
js
mov
xor
cmpsb
mov
pop
out
or
icebp
out
xchg
sbb
aas
cmp
pop
movsb
je
push
dec
popf
xchg
scas
fdiv
or
out
mov
incb
xchg
xchg
adc
lods
dec
pop
inc
shlb
js
testl
sbb
lods
out
stc
mov
arpl
jo
fistl
cmp
insl
jg
mov
dec
cwtl
push
sbb
hlt
pop
aad
addb
jnp
out
movsb
xor
iret
xchg
mov
stos
jmp
cltd
sahf
add
xchg
push
push
add
hlt
xor
jb
jecxz
cmp
xor
cld
push
adc
into
aam
negl
aas
fdivrl
mov
cs
loopne
les
adc
fstpl
pop
sbb
pop
xorl
xor
push
enter
leave
test
testb
popa
mov
fs
fcomi
bound
das
aaa
cmp
xchg
es
or
insl
scas
fistpl
xor
in
scas
stos
ret
jg
push
xor
sub
ljmp
push
or
ss
leave
jp
add
mov
out
xchg
cmp
jp
repnz
inc
push
adc
or
and
add
inc
push
sub
or
lds
xorb
loopne
fs
add
adc
jl
sahf
arpl
out
inc
imul
fcomi
js
arpl
data16
pop
out
jle
dec
pop
das
jge
cs
fisttpl
add
add
xchg
in
inc
mov
sub
push
add
jle
jge
pop
pop
xor
pop
push
cmp
cmp
out
jg
mov
inc
push
addl
cpuid
pop
or
pop
jg
test
test
cmp
mov
sahf
jb
fadds
push
outsb
jge
or
xchg
outsb
mov
popl
cmp
fbstp
push
pop
pop
and
cmpsl
movsb
and
pop
or
xor
cwtl
outsl
movsl
mov
stos
xchg
mov
adc
push
lods
test
cwtl
stos
adc
int3
addr16
xchg
sbb
insb
fidivs
xchg
xchg
rorb
jno
ja
clc
lds
mov
and
lcall
sbb
push
int3
xor
lds
pop
cmp
inc
inc
push
add
sub
out
popa
mov
popa
jnp
xorb
leave
fisubrs
jecxz
jb
xchg
sahf
adc
fcomp
or
pop
in
push
and
jo
cmp
scas
sbb
mov
jne
lods
int
rcr
adc
loopne
jno
xchg
pop
insb
pop
dec
stos
and
xchg
punpckldq
jne
lods
xchg
xor
and
je
mov
insb
jp
imul
cmp
cmp
ljmp
and
mov
aas
and
loope
jnp
rcl
cmp
popf
aaa
js
ja
ljmp
fcomps
dec
dec
ror
outsl
arpl
and
push
push
mov
inc
sub
xor
sbb
xchg
mov
fsts
imul
cld
cli
pop
into
pop
add
mov
and
and
sbb
lods
fisubs
mov
orb
sub
aam
negl
pusha
jbe
rorb
mov
popf
popf
cmp
sbbb
pop
push
and
lahf
popa
shlb
movl
ja
sbb
dec
dec
out
xchg
test
push
mov
mov
pop
stc
rclb
stc
aam
jbe
push
xchg
inc
add
dec
sub
mov
outsl
dec
jno
sub
mov
sbb
sub
sbb
push
je
cmc
ds
aas
inc
sbb
mov
test
ret
sub
add
mov
mov
pop
mov
rcrl
push
push
aas
dec
add
xlat
mov
jg
mov
sbb
xor
bound
jnp
inc
xor
mov
int
cmpsl
test
jl
mov
mov
lret
fucomip
stc
dec
mov
add
dec
xor
inc
lret
cltd
pop
lret
pop
loop
dec
int
call
daa
aaa
call
enter
xor
mov
in
in
pop
mov
in
cmp
bound
or
add
les
negb
bswap
test
leave
inc
je
xchg
je
sub
or
aad
je
in
pop
adc
cmp
sbb
insb
and
inc
loop
shlb
sub
ss
stc
xchg
data16
aad
sub
xchg
jb
ljmp
sbb
loope
cmpsl
add
cmp
jne
ret
incb
mov
std
call
adc
inc
cwtl
icebp
fdivrl
inc
scas
jb
xchg
push
mov
sub
in
movb
mov
mov
popf
or
add
dec
pop
dec
stos
aam
into
add
gs
mov
dec
dec
and
ja
mov
push
stos
xor
mov
cwtl
pushf
icebp
jbe
xchg
std
pop
jp
lahf
sahf
stc
dec
push
push
loop
hlt
dec
loope
mov
mov
ljmp
mov
es
xor
sub
lods
push
mov
int
cmc
mov
push
inc
pop
lret
scas
out
bswap
cltd
pop
in
mov
ret
push
les
clc
movsl
pop
push
jmp
mov
or
lea
sbb
movsb
out
rolb
add
shlb
dec
xor
xchg
jmp
gs
add
mov
dec
sub
mov
aam
xchg
icebp
fbstp
shrb
cld
and
jle
jge
in
push
pop
mov
lock
or
sbb
bound
jge
imul
adc
pop
popf
in
dec
andb
pop
aad
cmpsb
xchg
outsl
sub
ret
push
inc
mov
mov
cmp
sbb
jne
test
and
test
and
je
mov
loopne
mov
adc
incb
fwait
loope
clc
xchg
xchg
popf
popa
push
int3
iret
aad
insl
xor
dec
ss
mov
mov
lret
loop
and
gs
dec
bswap
add
mov
push
adc
cwtl
push
xchg
cmpsl
decb
ficoml
jb
fs
in
fcompl
movsl
add
sub
shrl
mov
add
push
out
enter
or
pop
push
bnd
arpl
add
or
lcall
popf
ljmp
mov
fwait
in
adcb
fistl
dec
aad
jb
out
push
shlb
lods
xchg
jmp
inc
inc
mov
hlt
pop
cmp
xchg
int3
cmp
xchg
jae
lods
bound
jecxz
or
mov
mov
jle
test
pop
add
dec
mov
jae
dec
dec
dec
repnz
cmc
or
cmpb
imul
mov
mov
aas
jmp
cmp
push
mov
in
xchg
cltd
sbb
jg
outsl
outsl
lcall
pusha
jnp
repnz
ss
addb
stc
push
mov
inc
les
inc
cwtl
lahf
mov
xchg
addb
xchg
data16
les
mov
xor
int
in
es
jp
pop
push
mov
ret
rorl
add
xor
mov
mov
ret
ss
mov
pop
or
imul
das
push
lret
xchg
mov
imul
xchg
fisttps
rcrl
or
inc
lcall
ja
inc
adc
or
dec
ljmp
pop
sti
mov
jmp
mov
testl
btr
mov
cld
and
push
testl
inc
pop
cmp
push
jne
add
cmp
jle
sub
in
dec
es
mov
adc
arpl
es
pop
dec
pop
imul
rorl
cld
icebp
or
lods
sbb
pop
lods
mov
leave
ret
jne
pop
int3
adc
out
jae
stos
mov
addr16
orl
lahf
lcall
inc
ds
push
iret
jno
adcb
popf
popa
dec
das
xor
stos
jns
jmp
jle
pop
divl
jbe
jmp
aas
roll
mov
push
insb
lods
les
cmp
lock
js
cmp
cli
jns
adc
pop
loop
mov
inc
and
push
add
cmp
fildl
push
mov
or
push
jmp
and
cmp
mov
push
addl
dec
shlb
inc
leave
xchg
cmp
hlt
rclb
xchg
sarl
jns
adc
jge
push
inc
xor
pop
jl
cmpl
pushf
fistl
scas
cltd
xor
addr16
push
dec
jl
mov
xlat
pop
stos
ss
pop
fisubrl
fsubp
clc
add
int
or
jns
sub
imul
fst
inc
dec
jo
mov
loope
lret
ret
xchg
pop
imul
aad
xor
aaa
push
xor
push
sub
mov
mov
sbb
lret
lahf
bound
mov
adc
imul
ret
cmp
add
clc
scas
add
mov
movsl
xchg
xchg
sahf
pop
push
in
out
mov
mov
pop
mov
jmp
push
cwtl
pop
and
mov
cs
inc
imul
daa
xchg
out
clc
mov
rolb
les
bound
jmp
dec
into
stc
push
and
mov
popf
in
aam
xor
mov
jb
scas
mov
scas
addb
adc
or
data16
repnz
push
cmpl
orl
adc
adc
cmp
cmp
std
orl
sahf
mov
jae
sbb
and
pop
in
jbe
pop
shll
mov
pop
mov
and
std
mov
sub
adc
lock
test
sub
mov
sahf
cmp
mov
mov
sbbb
addr16
loope
push
lret
insb
stos
nop
sbb
js
pusha
sti
dec
jo
jle
or
or
data16
cs
in
call
fsubrs
insl
mov
xchg
std
mov
out
mov
push
xchg
jl
rcrb
cwtl
and
stos
mov
adc
jl
jnp
xchg
mov
mov
mov
outsb
mov
xchg
lcall
data16
les
in
xor
fdivl
bound
xlat
or
jnp
xchg
incl
fucomi
lds
aam
lods
pop
mov
dec
enter
sub
xor
xlat
aaa
dec
xchg
adc
sahf
pop
clc
jb
pop
in
xor
ljmp
fimuls
aaa
mov
xchg
and
xor
lahf
or
stos
sub
jo
push
iret
je
fisubs
add
inc
pusha
inc
cmpl
dec
jns
sbb
push
jns
sub
xchg
adc
icebp
fldpi
adc
mov
dec
in
adc
xchg
shlb
dec
mov
in
movl
adc
sub
subl
mov
adc
mov
sub
leave
inc
cwtl
sub
mov
mov
mov
std
push
ret
xlat
xchg
mov
fwait
cmp
jle
scas
sub
out
clc
jno
dec
loope
mov
pushf
aad
lds
pusha
lods
out
xchg
push
lahf
xchg
loop
ret
aaa
sub
xchg
jp
lret
cmp
xor
mov
dec
shrl
cmc
inc
js
or
sub
jge
out
dec
mov
in
imul
pmuludq
xchg
jns
pop
adc
sub
cld
xlat
lret
and
mov
inc
cltd
xor
sarl
lds
add
cmp
ds
and
out
push
jo
testl
hlt
mov
leave
xchg
subb
pop
inc
and
adc
mov
jecxz
fs
push
and
adc
xlat
popa
clc
hlt
dec
mov
daa
add
sub
cwtl
xchg
lods
lahf
mov
sub
cmp
in
adc
pop
fdiv
lahf
adc
cwtl
sub
mov
jno
sbb
mov
jmp
sbb
xor
insb
js
dec
pop
icebp
cmpsl
rolb
mov
mov
xchg
out
enter
sbb
lahf
or
insl
push
add
jmp
fdivrl
cld
sbb
jno
adc
int3
pusha
orl
mov
add
test
sbb
lret
push
stc
insb
jg
lret
mov
ja
xchg
push
leave
cmpsl
jae
lcall
xchg
dec
sub
and
mov
adc
xchg
xor
mov
es
in
cmp
cwtl
xchg
js
inc
inc
das
popa
xor
fmuls
popa
adc
sub
and
jae
dec
mov
mov
sbb
fmul
sub
cli
mov
aam
in
dec
cmp
lcall
push
daa
sti
push
pop
es
clc
shrl
sbb
jg
notl
xor
adc
lock
mov
stos
xor
incb
aad
insl
mov
or
clc
es
jne
add
scas
pop
add
outsl
adc
push
andl
stos
outsb
add
bound
xchg
push
pusha
call
out
mov
xor
mov
out
test
xchg
pop
lds
pop
loope
in
enter
adc
popf
je
mov
push
pop
sbb
fcomp
inc
push
mov
mov
rcl
adc
out
hlt
cmc
insb
outsl
sbb
ljmp
xchg
adc
mov
jg
xor
mov
outsb
push
sbb
jl
jmp
fwait
xor
sbb
subl
mov
and
sbb
mov
mov
mov
insb
adc
inc
dec
cld
and
lret
add
xor
adcl
pusha
jle
loope
mov
imul
ficoml
xchg
dec
cmp
mov
mov
add
mov
outsb
fcoml
sbb
mov
push
test
mov
jns
jecxz
ljmp
jno
dec
mov
adc
ljmp
sub
jno
lock
das
push
jmp
push
mov
lcall
xor
inc
nop
push
lds
and
push
cs
out
adc
jp
lock
fildll
and
pop
xor
ret
adc
xchg
sbb
outsl
cmc
inc
addl
jo
arpl
jae
jns
enter
push
dec
int
lds
lds
push
js
mov
add
es
shll
ja
cmp
dec
cltd
insl
xchg
mov
rclb
shl
inc
mov
aad
inc
cmp
inc
outsb
sub
shrb
pop
in
arpl
sub
and
mov
pop
and
xor
add
and
sub
jnp
mov
jbe
dec
in
bound
inc
push
pop
decb
roll
add
mov
shrb
iret
test
lods
push
repz
lret
add
ret
shr
lods
jle
mov
mov
cmp
loopne
mov
cmovb
fwait
jns
mov
and
or
push
nop
cwtl
add
xor
fwait
test
clc
dec
mov
sub
lea
jns
lret
pop
mov
scas
lret
repz
push
and
xor
push
xor
jae
jae
pop
add
imul
jae
rclb
mov
out
adc
jae
stos
icebp
fs
sahf
je
or
sub
sbb
adcl
jge
xor
push
fsubs
subb
jo
cmpsl
inc
xchg
pop
gs
xor
xor
mov
inc
push
push
lret
xorl
xor
mov
adc
pop
xchg
jae
dec
in
push
mov
into
fimull
push
shl
mov
jae
jl
lret
pop
in
xor
mov
mov
dec
pop
test
imul
test
xorb
lcall
cld
lods
xchg
add
lods
int3
out
loopne
mov
push
xchg
sbb
loope
pop
test
cli
mov
xor
and
fidivrs
push
sahf
fnsave
cmc
sti
imulb
add
call
repz
dec
jne
int3
push
add
imul
cmpsb
pop
jne
outsl
imul
pop
sub
jns
nop
imul
js
bound
roll
mov
sar
inc
mov
and
lods
test
cmp
dec
stc
in
push
fsubl
daa
ret
add
sbb
push
xchg
inc
and
mov
fs
sahf
pusha
mov
adc
cltd
lods
adc
mov
scas
mov
push
pop
addr16
xchg
in
sbb
xchg
xor
add
cmp
out
cmp
rclb
dec
lea
lret
sbb
xchg
pop
lods
fisttps
push
xchg
movl
imul
xor
sub
push
pop
call
pushf
scas
ja
pusha
xor
sbb
out
adc
fwait
jmp
aad
pop
shr
sub
outsb
pop
sub
jmp
xchg
sbb
lret
pop
mov
xchg
xor
lods
mov
jo
mov
sbb
xchg
fiadds
cs
lods
into
and
inc
jge
je
stos
xor
inc
addr16
fmuls
imul
push
mov
xlat
mov
call
mov
pop
int
arpl
lock
jns
inc
inc
sub
loopne
pop
fistpll
lods
inc
aaa
sub
stos
xchg
mov
sub
mov
xchg
shll
mov
lahf
push
dec
mov
sbb
mov
je
out
lcall
push
adc
jno
mov
stos
xchg
inc
insb
icebp
mov
out
je
mov
mov
enter
xchg
push
mov
add
pop
fldz
mov
cmp
jae
lcall
add
mov
jg
jo
mov
out
rcl
inc
inc
mov
pop
sahf
pop
add
pop
jo
rcl
and
pop
jmp
pop
mov
mov
sub
mov
mov
mov
inc
dec
das
subl
test
or
sbb
jl
push
inc
inc
push
lahf
ror
adc
loop
push
jbe
ret
xchg
in
add
movsb
dec
loop
or
adc
mov
sub
and
or
mov
js,pn
push
test
les
cs
movsl
in
inc
lret
repnz
jl
fiaddl
outsl
loopne
es
lahf
pop
lret
popf
xchg
jmp
pop
int3
adc
mov
mov
mov
in
popf
mov
test
push
push
inc
testl
lcall
sbb
xlat
clc
jg
cltd
or
xor
lods
leave
jo
dec
mov
das
mov
jbe
pop
or
mov
xor
shll
in
push
inc
in
ficompl
pop
sbb
mov
inc
fstpl
insb
mov
out
jg
dec
sub
sarl
fisubrl
adc
push
cld
add
push
gs
mov
cltd
xor
xchg
cld
fildll
arpl
call
push
push
jno
mov
lahf
add
push
fucomp
and
les
jo
out
in
popa
jg
call
dec
clc
xchg
push
js
mov
das
outsl
pop
jl
mov
mov
mov
dec
mov
inc
mov
and
mov
add
push
fxch
xor
notb
fdiv
andl
lahf
mov
and
sub
loop
sar
mov
jg
aas
pop
jp
shlb
addr16
push
scas
inc
out
sub
test
adc
outsl
xchg
or
mov
push
es
xchg
inc
mov
xchg
push
sbb
sbb
pop
movsl
cmp
aad
insb
xlat
sahf
fbld
in
cmp
or
into
xchg
sub
or
repz
call
xchg
cmp
call
jbe
mov
xor
mov
sbb
cmp
pop
or
mul
jae
pop
or
jnp
xor
jmp
nop
aaa
and
or
mov
ss
imul
adc
cmpsb
or
rcrl
shr
push
mov
dec
jg
add
add
insb
or
jmp
movsb
call
mov
xchg
ret
and
testb
jg
pop
add
jnp
mov
mov
fsubrl
sub
mov
pop
adc
test
sahf
jle
sbb
mov
mov
imul
das
scas
sub
in
dec
jae
in
mov
cmpsl
cmp
push
and
mov
mov
or
inc
inc
test
pop
ret
shrl
pop
xchg
pop
fldt
ja
insl
mov
jbe
out
fs
outsl
daa
jo
jl
arpl
rolb
or
insb
and
xchg
sub
and
es
in
lcall
sbb
xchg
xor
loope
jae
pusha
rorl
scas
fistl
cmpsl
repz
add
xchg
mov
mov
or
popf
fldcw
pushf
je
aas
cmp
push
out
pushf
jle
loop
enter
enter
cmp
call
loopne
loope
jmp
mov
mov
aam
lcall
push
adc
insb
add
std
loopne
scas
popf
loopne
daa
sub
iret
nop
pop
and
push
lock
aas
add
lods
rcrb
sub
pop
scas
xchg
jecxz
cli
iret
sbb
push
in
es
inc
insb
scas
jmp
adc
sub
cmpsb
out
std
js
or
or
rclb
subl
fisubl
in
jae
jmp
pop
mov
lret
daa
or
push
sahf
mov
ret
sbb
mov
mov
test
jnp
nop
stc
shl
jae
test
cmp
cmp
mov
ss
pop
jp
loopne
xchg
jno
and
movsl
dec
dec
mov
add
jg
cmp
sarb
or
imulb
int3
leave
pop
psrlq
inc
addl
dec
sub
xchg
sti
push
xchg
xchg
je
rclb
divb
inc
cmpsb
dec
push
ret
or
loop
sub
push
xor
xor
pop
sbb
dec
inc
fldl
in
out
fsubl
or
out
cld
mull
jg
push
and
lcall
js
lods
aam
xchg
cwtl
bound
or
loopne
arpl
cmp
mov
std
roll
popa
cmp
push
xlat
xor
inc
xchg
jae
and
stos
lods
test
in
pop
idivb
test
push
and
xchg
adc
xor
ret
into
dec
in
jne
andb
xor
mov
mov
push
and
inc
push
xchg
lea
jno
xchg
iret
sub
cli
pop
fistpl
cwtl
or
stos
pop
sub
es
int
outsb
cmp
cmp
negl
pop
fildll
pushf
xchg
scas
sbb
mov
pusha
jae
movsl
aas
jp
das
cmpsl
sahf
cmp
cwtl
das
sub
cs
jge
incb
dec
add
insl
rorl
sub
pop
or
or
movsb
in
dec
movsl
int
lcall
shl
push
lea
cld
pop
sub
mov
sub
sub
mov
test
adc
pop
mov
lods
aaa
icebp
in
mov
sahf
mov
gs
mov
cs
cs
not
sub
mov
hlt
pop
shlb
lahf
inc
lock
lds
mov
fisubl
lahf
in
stc
pop
dec
xchg
mov
test
xchg
mov
test
sbb
adc
sub
aas
sbb
inc
int3
pushf
pop
jo
dec
add
das
xchg
pop
mov
mov
push
xchg
insb
and
push
xor
push
in
scas
inc
cmp
mov
pop
lret
test
aaa
insl
popf
cmp
add
mov
dec
movsb
jne
hlt
or
xchg
cmc
jbe
iret
fs
jmp
fstpt
mov
inc
dec
dec
pop
inc
fidivrl
sbb
pop
jge
sub
xchg
mov
sub
sub
adcl
jo
test
call
xchg
cmp
xchg
inc
dec
gs
mov
rclb
aad
repz
in
cmp
jge
adc
adc
adc
mov
adc
or
add
add
cmp
je
push
or
or
cmpsb
push
add
mov
sbb
dec
cmp
mov
mov
dec
jne
inc
sub
or
add
lods
sub
adc
js
pop
dec
es
pushf
pop
outsl
sti
xchg
ljmp
in
test
lds
pop
pop
push
aas
push
movsb
mov
mov
cs
sbb
adc
pusha
push
pop
icebp
out
mov
cmp
ljmp
or
dec
mov
mov
xlat
xor
dec
dec
fildl
or
lock
nop
sub
xlat
loopne
aam
mov
into
mov
push
push
xchg
and
mov
popf
xchg
mov
inc
jbe
arpl
sub
adc
das
mov
and
lea
sbb
and
repz
pop
lcall
cmp
int3
movsl
push
jae
add
js
jle
test
cltd
ret
and
pop
clc
pop
push
add
call
xchg
ret
stc
xchg
ja
inc
out
mov
jg
push
xchg
mov
inc
pushf
out
sarb
cld
aam
or
sbb
fsubrp
mov
jg
cltd
pop
push
sub
adc
jno
mov
ljmp
and
popa
dec
popf
xchg
xchg
mov
sti
inc
sbbl
int3
push
cmp
mov
js
or
insb
aas
jnp
es
dec
cmp
or
daa
mov
xor
bound
sti
lea
pop
xor
out
mov
ljmp
lds
clc
cmc
cld
mov
sti
push
mov
int
into
mov
out
pop
jecxz
sbb
jns
ja
sub
aas
aam
repz
movb
popf
pop
cld
jmp
sarb
or
les
mov
jo
pop
lcall
mov
adc
xchg
mov
enter
fnstenv
push
mov
aad
dec
lea
push
daa
cwtl
push
loopne
scas
sbb
rorl
hlt
arpl
fisubs
lea
icebp
push
cmp
dec
lahf
subps
lahf
lcall
ret
clc
mov
dec
sub
xor
addr16
enter
jp
pop
repnz
adc
stos
stos
pop
hlt
leave
lods
and
sbb
xor
cld
loopne
cmp
mov
jne
data16
jmp
test
xchg
cld
jp
xchg
mov
scas
movsb
sub
cltd
add
xchg
pop
mov
pop
mov
loop
sbb
int3
adc
lds
cmpsb
pop
xor
add
aaa
ljmp
insl
data16
add
orb
mov
dec
add
add
mov
fdivrp
loop
jb
sub
lret
mov
shlb
fnstcw
sub
sub
lock
pop
adc
repz
sbb
fldenv
inc
jp
xchg
icebp
cmp
dec
aaa
jns
mov
add
jge
nop
outsl
adc
in
outsl
xchg
adc
adc
ds
int
in
clc
xchg
xor
decl
xor
into
imul
mov
lock
xor
out
inc
or
test
cli
pop
aaa
sub
outsl
cs
cmc
in
xchg
movsl
add
rcrb
stos
pop
aam
sbb
cmp
and
pusha
adc
mov
mov
xor
ljmp
fisubs
xchg
push
xor
push
mov
fwait
or
shrl
cli
mov
repz
inc
xchg
push
mov
pop
lea
les
iret
add
in
xchg
xlat
xor
and
test
int3
adc
mov
lret
cltd
cmpsl
xchg
daa
sub
ja
test
cltd
loope
cwtl
ljmp
mov
ljmp
fcoml
inc
xchg
iret
aaa
fcomi
and
pop
xchg
int
push
les
adc
shll
mov
xchg
sbb
js
jge
mov
or
or
mov
test
mov
divl
lahf
sub
movsb
idivl
pop
lahf
sub
xchg
dec
repz
notb
loopne
pop
push
test
jne
and
mov
movsb
push
filds
leave
mov
adc
test
or
popf
sahf
jg
loope
dec
outsl
test
outsb
andl
popa
pop
cmpsl
mov
sahf
lret
bound
dec
movsl
jge
sbbl
daa
mov
sti
ds
cmp
dec
lods
jno
jo
mov
in
dec
jge
jae
xor
mov
sub
push
shll
mov
mov
int3
xorl
dec
jo
mov
push
jne
aam
xchg
mov
insb
sub
sbb
loop
mov
test
sahf
sub
int3
mov
movsb
sbb
das
pop
into
popa
add
pop
mov
cltd
add
mov
mov
adcl
mov
jp
stos
mov
in
pop
lahf
mov
jnp
lock
cwtl
dec
xlat
mov
or
in
jbe
test
les
push
rdmsr
xlat
mov
scas
or
sbb
jp
jmp
and
cmp
xchg
mov
jmp
cwtl
adc
mov
loope
xchg
int
movsb
mov
cmpsb
jo
mov
fninit
js
int
fwait
xchg
dec
push
imul
or
aam
imul
push
jp
push
cs
sub
lahf
xor
hlt
xchg
push
cmpsl
inc
test
or
xchg
mov
in
dec
cwtl
repnz
jge
popa
sub
sbb
xchg
in
mov
add
cmp
popa
out
and
and
xor
cmpsl
ret
std
in
out
add
push
xchg
mov
fcompl
jmp
into
cmp
fisttpll
pop
xchg
lret
aaa
adcl
insl
fs
push
push
mov
mov
cmc
xchg
and
xor
and
stc
mov
cmp
sti
adc
xor
test
rcrb
xorl
std
jb
fiaddl
movsl
xchg
mov
movsb
sti
push
xor
jnp
pop
dec
out
jb
jle
fwait
rol
mov
iret
rcl
shl
mov
mov
andb
dec
and
xchg
cmp
push
dec
sbb
orl
cmp
jle
std
xchg
jo
xchg
shrl
fisubs
pop
jecxz
jp
pop
lahf
mov
mov
pop
and
loop
ret
mov
inc
lock
dec
stc
cmpsb
cwtl
jmp
sbb
call
cmp
out
push
push
push
cld
subl
sbb
ss
inc
aad
jl
inc
jb
mov
push
nop
or
enter
shll
pushf
repz
sbb
imul
sti
arpl
fldl
aas
les
out
sbb
cwtl
aad
in
xchg
std
jmp
jle
push
sbb
int3
push
fmull
jmp
lds
add
inc
jle
dec
pop
push
pop
jge
shrl
dec
xor
stos
mov
jmp
ljmp
mov
sahf
push
stc
lret
into
mov
mov
dec
je
mov
testl
jnp
add
setb
rcrl
inc
add
mov
add
jge
xchg
in
aaa
or
inc
call
fbld
add
movsl
jecxz
jae
and
je
mov
ror
mov
test
mov
jp
in
xchg
xlat
lds
push
ds
pushf
push
test
in
sbb
scas
sbb
jp
outsl
movsl
jmp
setl
or
xor
arpl
sbb
and
adc
lds
cmpl
popa
test
stos
daa
aas
jmp
clc
jb
loop
add
and
movsb
pushf
popf
loop
frstor
add
std
jo
xchg
xor
sbb
pushf
pushf
frstor
bound
pop
and
jg
sbb
jae
mov
insl
jb
mov
in
dec
add
popa
ljmp
iret
dec
test
ds
ja
pop
shl
mov
and
and
xchg
sbb
adc
jmp
inc
int3
push
xor
popf
add
dec
add
pop
or
xchg
mov
adc
imul
inc
scas
xor
jecxz
jne
dec
cmc
es
paddd
dec
pusha
pushf
jle
mov
cmpsl
fwait
push
in
and
push
setb
imul
arpl
xchg
lahf
push
inc
popf
ljmp
cmp
mov
lods
dec
xchg
mov
icebp
mov
fs
popf
mov
aas
ljmp
lahf
or
and
inc
lahf
out
cmp
jle
lret
fwait
adc
iret
icebp
repz
xchg
mov
mov
add
iret
dec
mov
jbe
mov
pushf
fdivl
leave
sahf
in
fsubrl
mov
stos
test
add
push
pop
fiaddl
push
and
mov
mov
cmc
mov
push
xlat
test
mov
shll
sub
and
test
jae
sub
pop
add
pop
aaa
xchg
out
fnsave
adc
xchg
repnz
add
sahf
test
mov
lret
lds
sub
nop
jnp
sbb
pusha
jl
lds
and
pop
pop
push
lods
adcl
jae
popf
arpl
mov
push
pop
outsl
inc
addr16
lcall
cmp
inc
nop
mov
loop
push
test
mov
sbb
cltd
push
and
daa
xor
out
mov
mov
out
insl
addb
ljmp
push
call
cmpsb
test
mov
adc
inc
cmpsl
jg
inc
scas
cmp
popf
ja
cmpsb
stos
out
iret
mov
and
aam
jle
jbe
adc
xchg
adc
inc
inc
mov
push
push
fdiv
inc
and
sub
push
ret
stos
int3
pusha
push
jbe
pop
jbe
xchg
out
mov
repz
fisubrs
les
sub
lock
and
inc
sbb
dec
jb
fistpl
call
jmp
rcl
mov
enter
stos
jno
loope
jae
pop
loope
jg
test
sarb
xchg
or
mov
repnz
xor
xor
mov
out
scas
mov
js
dec
les
cmp
cmpsb
std
or
imul
sbb
stos
ja,pn
out
sub
repnz
push
xor
jmp
cld
andb
push
lret
xchg
lret
lcall
pusha
repz
outsb
xor
sbb
xor
mov
imul
sub
test
sbb
pop
into
mov
mov
pop
std
cmc
push
test
adc
shl
rcrb
dec
in
sahf
addr16
dec
imul
xor
rcll
stc
scas
mov
fcomps
lahf
in
xchg
xchg
or
pop
ja
jle
sub
cmp
pop
dec
dec
adc
jno
mov
dec
repnz
pop
pop
inc
pop
sbb
sbb
lret
ret
lcall
sbb
cmp
int3
test
dec
outsl
js
jns
adc
pusha
pop
stos
in
incb
sub
xor
ret
outsl
cmp
push
or
sbb
dec
xor
xor
xlat
ror
test
pushf
push
dec
aad
pop
fs
xlat
sbb
cltd
stc
and
into
int3
fisubrs
mov
fprem1
push
xor
sbb
loope
fs
aad
out
add
or
pop
adc
dec
pop
push
adc
sbbb
mov
jp
xlat
jo
lcall
sub
adc
mov
jmp
rcrb
dec
xlat
lods
xor
push
mov
mov
xchg
jl
ss
pop
clc
ret
inc
stos
jae
lds
pushf
add
leave
fs
std
mov
repnz
sbb
push
and
sbb
pop
in
or
push
or
pop
enter
in
sub
sub
aad
mov
xor
mov
push
in
lea
daa
rcr
pusha
adc
push
pop
jge
popa
mov
cmc
aaa
imul
rcrl
stos
out
sti
out
in
daa
cmpsb
cmp
push
push
sbb
lods
std
ss
cmp
vpand
lret
add
ds
sbb
mov
sub
inc
xor
test
jae
xchg
xor
mov
inc
cmp
sahf
sbb
outsb
loopne
int3
pop
fldenv
cmpb
jo
sbb
sbb
scas
or
inc
jle
jne
mov
cwtl
cs
std
cmp
pop
dec
loop
dec
xlat
leave
sahf
mov
sbb
dec
jle
int
filds
xor
pop
xor
jp
dec
jo
pop
scas
mov
cmp
icebp
cmp
idivl
or
push
shl
mov
lds
dec
inc
mov
loope
add
stc
jmp
clc
pop
push
mov
pop
xchg
pop
add
mov
mov
scas
cmp
sbb
push
subb
or
push
stos
scas
push
lock
out
mov
loope
shl
jmp
push
lahf
fidivl
and
xor
imul
cs
lret
lods
jb
lcall
test
jmp
jne
aaa
push
mov
push
inc
sbb
jne
add
lahf
je
dec
cmc
mov
loopne
aas
lock
add
loopne
cmp
jae
pop
shrb
int3
or
repnz
mov
sub
mov
movsb
lods
sahf
out
lods
pop
or
and
xchg
xor
xor
call
push
adc
xchg
xor
pop
and
cmp
push
fsubs
mov
cmp
mov
cmp
daa
pusha
in
lods
sbb
idivl
out
repnz
add
xchg
jno
sbb
shl
mov
mov
in
divb
or
mov
or
push
ficoms
xchg
xchg
inc
filds
stos
fldl
mov
jns
xor
and
popf
outsb
aas
insb
xchg
push
arpl
pop
lret
icebp
cld
int
or
lods
clc
fcomps
out
mov
cld
sub
aam
push
adc
mov
pop
stos
lods
add
mov
and
imul
push
insl
lock
jecxz
xchg
shlb
xchg
add
jo
push
sub
nop
rcrl
xor
std
and
cmpsl
pop
push
mov
sarl
xor
aas
sti
in
sti
aas
shlb
addr16
rcll
loop
or
js
pop
adc
icebp
aad
or
fwait
pop
sub
adc
fistps
out
outsl
jns
daa
jbe
pop
leave
outsb
mov
adc
push
inc
stc
ret
jns
lret
inc
test
test
leave
ja
lods
dec
popa
add
adc
sub
outsl
xchg
cmp
sti
enter
clc
xchg
adc
or
push
mov
scas
or
call
jae
pushf
test
cmp
int3
aaa
sbb
imul
sbb
inc
jp
push
cld
pushf
and
fbld
fwait
iret
mov
adc
js
and
or
jns
mov
or
jo
push
mov
out
mov
pop
xchg
stc
xchg
mov
ret
jo
std
aad
mov
jl
test
cmc
jl
dec
adc
adc
cmp
into
ficoms
pop
push
xor
sbb
mov
scas
bound
adc
dec
arpl
sub
mov
add
sub
sub
jp
aam
add
inc
cmp
jne
dec
and
push
push
nop
sbb
jne
or
pop
int
in
xchg
pop
and
jns
sbb
add
pop
mov
add
std
add
cmpb
sub
push
add
add
or
cmpb
xor
fldpi
pushf
lods
cld
call
and
out
in
sbb
lcall
movb
sbb
sbb
popf
cmp
fs
adc
mov
jns
or
addr16
fistpll
iret
dec
mov
test
cmp
jnp
ss
popf
out
push
shrl
enter
and
jno
jbe
dec
orb
sti
mov
in
adc
and
push
lcall
clc
stc
insl
test
push
cli
cmp
jno
flds
and
ds
cltd
fs
sub
lea
in
ljmp
add
xchg
test
jecxz
out
xchg
sub
fucomip
test
xchg
xchg
pop
clc
fsubr
addb
or
push
mov
dec
mov
dec
pop
xchg
cmp
repz
clc
iret
mov
cmp
lahf
nop
push
addb
mov
jne
shl
in
icebp
xor
shrl
mov
push
push
dec
jle
leave
mov
out
ss
xchg
das
testl
pop
stc
faddl
push
push
fnstsw
sbb
add
mov
imul
jo
jno
pop
push
inc
lods
mov
insb
jg
cmp
aas
mov
cmc
and
mov
xor
mov
mov
notb
push
scas
dec
adc
lcall
cmp
dec
sahf
in
pop
dec
cmpsb
loopne
jle
push
ret
or
sub
fldcw
ror
movsb
push
into
jl
push
lea
orb
xor
push
testl
in
leave
sub
call
pushf
insb
mov
xor
shrb
out
aaa
movsl
add
dec
inc
push
jp
imul
aad
or
inc
or
mov
inc
imul
shrb
stos
insl
call
test
push
dec
mov
jno
lods
xchg
mov
push
sbbb
out
addl
test
add
push
addl
sub
and
cmpsb
ja
and
test
dec
push
fidivs
and
pop
loop
mov
jns
ljmp
xor
mov
xchg
xchg
shrl
mov
mov
lea
jp
xchg
mov
xchg
ja
fstpt
int
jecxz
cmp
shll
jmp
sub
icebp
scas
lods
mov
test
add
xchg
pop
arpl
push
cmp
fiaddl
bound
sub
repz
xor
lret
fstpt
pusha
in
adc
xabort
push
or
lcall
movsl
sbb
xchg
gs
shrl
pushf
xchg
or
dec
jg
sahf
inc
adc
push
push
in
and
mov
adc
scas
xor
mov
bsf
mov
cmpsb
out
dec
pop
sbb
push
xor
gs
cs
les
andl
roll
orl
cmp
inc
and
repnz
mov
lds
push
jg
pop
xchg
sti
outsl
insl
pop
jmp
ja
adc
mov
fcos
ds
jae
lahf
std
movsb
xor
cmp
sub
push
inc
test
add
xchg
mov
cmp
imul
imulb
out
popf
stos
sbb
gs
cld
mov
sub
dec
inc
inc
movsl
and
data16
iret
pop
pop
xlat
aam
push
cmp
cmpsb
insl
and
stos
es
cmpsb
mov
adc
in
lahf
mov
pop
clc
ds
lahf
lahf
pop
inc
rcll
xor
aas
movd
ljmp
add
sar
jb
adc
xor
stos
leave
shl
inc
pop
mov
insl
cltd
inc
in
adc
dec
sub
sub
or
xchg
mov
push
call
mov
sbb
clc
shll
mov
and
stos
xchg
jecxz
mov
mov
in
sti
sbb
mov
mov
fdivl
dec
sbb
pop
test
inc
push
cmp
mov
jl
movsb
cmp
pop
aam
insb
fwait
ds
push
sub
sbb
cmp
stos
add
mov
sbb
or
filds
mov
flds
ror
push
adc
sbbb
leave
shlb
cld
divl
out
and
clc
xchg
push
or
and
das
icebp
dec
xchg
test
xchg
cmp
inc
xor
and
in
sbb
test
adc
into
jmp
mov
mov
jg
movsl
adc
adc
jne
mov
cmp
pop
mov
inc
add
repnz
mov
cmp
std
test
jg
adc
rcr
push
scas
mov
fldl
aaa
mov
dec
nop
outsl
sbb
adc
test
pop
and
push
jo
popa
loopne
shrl
aad
dec
pop
shr
ja
pop
sbb
xor
fstl
in
sbb
push
iret
cmp
jge
sbb
sub
ret
lahf
out
pop
cmp
mov
xchg
outsb
subb
xor
iret
lret
mov
push
iret
pop
hlt
cltd
adc
fs
or
ljmp
iret
dec
outsb
lock
add
and
and
add
scas
lods
aas
sbb
inc
sbb
andb
mov
out
pop
cwtl
sti
adc
and
sti
dec
pop
lods
fidivrl
test
adc
out
jg
bound
cli
lods
stc
push
repnz
mov
daa
xchg
jl
add
cmp
inc
sarb
push
dec
nop
aas
insl
sbb
icebp
xorb
push
add
lret
leave
rcrb
xor
cld
mov
popa
in
imul
test
and
mov
dec
jl
sub
mov
aam
xchg
xor
push
mov
adc
mov
negb
add
mov
dec
cmp
xlat
sbb
jg
sbb
imulb
dec
adc
lcall
outsl
aas
mov
lret
and
dec
ljmp
jb
inc
mov
dec
cs
xchg
rcrl
pop
lods
inc
or
popa
pop
cmp
stos
out
cmp
push
punpckhdq
lock
bound
int3
out
jg
in
dec
cmpsb
or
aam
add
outsl
std
xor
add
cmp
jg
sbb
jae
ret
test
aas
sub
add
cmp
cs
xlat
addb
cmp
dec
mov
inc
into
orl
sahf
sbb
pusha
int3
push
mov
xchg
out
jo
or
dec
add
mov
int
xor
aad
enter
mov
or
adc
rolb
loop
cmp
adc
xchg
andl
sub
gs
pop
push
pop
scas
imul
mov
xor
aam
dec
xchg
mov
iret
jecxz
rorl
pop
inc
dec
push
jmp
outsb
popa
mov
mov
or
ret
xchg
loop
cmpsb
aam
or
leave
ljmp
cld
lahf
mov
sti
lock
loope
rclb
pop
xchg
loop
push
xchg
mov
daa
cmp
cmp
mov
dec
ja
aas
jo
jo
sub
pop
jns
test
mov
sub
xorl
jb
cmp
jae
inc
xchg
pop
sbb
sub
rol
and
lcall
sahf
imul
mov
and
jb
mov
sub
sbb
xchg
scas
mov
mov
test
les
or
rclb
cmp
add
push
fmull
in
jno
cwtl
ds
outsl
lods
mov
imul
push
mov
mov
in
push
adc
inc
lret
inc
rcr
or
push
shrb
pop
jmp
adc
clc
xor
push
test
les
cli
jl
pop
xchg
lcall
sub
mov
repnz
pushf
pop
outsl
es
pop
insl
loopne
sbb
mov
fs
pop
jl
push
xchg
cwtl
sbb
push
adc
ljmp
xor
inc
mov
mov
pop
and
or
jecxz
data16
daa
rcl
js
cmp
add
dec
sbb
mov
dec
ds
sub
neg
das
std
cltd
adc
repz
sbb
mov
orb
pop
and
imul
pop
adc
outsb
xor
pop
add
mov
inc
aad
int
push
lock
sub
mov
push
ficoml
pop
aas
lds
data16
jmp
insb
int
test
lahf
gs
and
push
push
jae
dec
js
xchg
cmp
popa
jge
lret
push
cld
sti
xor
mov
jg
data16
sbb
lret
jae
and
stos
xor
aas
hlt
icebp
or
iret
sbb
test
pop
mov
pop
insb
decl
xor
dec
jbe
xor
flds
pushf
pusha
jnp
test
test
repz
jnp
out
call
jno
mov
sub
lcall
dec
push
adc
mov
xor
in
fwait
jo
or
mov
rcll
adc
aas
fisubs
int
pop
arpl
rolb
je
and
adc
mov
jp
cmp
out
jge
pusha
pop
es
inc
out
push
adc
aad
test
ficomps
sti
inc
lea
lea
mov
aaa
sub
insl
sub
lds
dec
jg
and
aam
xchg
fst
mov
rcrb
or
mov
jnp
cmp
sub
mov
mov
push
out
mov
shrl
std
in
mov
int
cwtl
psrad
lcall
loope
out
cwtl
in
xchg
fldcw
add
sub
xlat
loopne
test
test
fwait
mov
aaa
std
push
or
lea
test
xchg
add
fsts
mov
popf
mov
jge
vmovaps
push
mov
pop
jle
mov
pop
pop
ror
dec
sti
sahf
mov
mov
js
mov
outsl
in
jb
xor
stos
xchg
push
dec
andl
push
add
cmpb
jo
dec
mov
sbb
sub
pop
addl
cli
ja
push
jmp
jg
mov
fs
movsb
scas
pop
xlat
out
jno
lock
dec
int3
push
cmp
in
jmp
xchg
xchg
pop
inc
dec
jge
inc
lods
ja
jg
add
fmul
mov
gs
xchg
out
mov
fistpl
mov
pop
es
dec
cmpsl
jno
jge
jmp
fnstcw
in
jl
adcl
xchg
inc
imul
dec
xor
xchg
jo
cmp
jl
add
jle
mov
jge
ret
inc
inc
sub
xchg
and
roll
movsl
push
in
leave
repz
dec
mov
sbb
dec
dec
mov
lods
inc
fucomp
std
add
push
and
lret
out
ljmp
dec
and
fs
cwtl
adc
xor
sbb
jg
addl
push
xor
and
push
in
push
test
dec
push
push
jb
stos
into
xchg
in
into
mov
jg
addr16
pop
xchg
sti
add
lret
push
orb
jnp
out
inc
repz
and
fists
lcall
stos
js
mov
jmp
add
fmul
cmpl
inc
sub
into
add
into
pop
sarb
adc
hlt
push
pushf
loopne
mov
mov
dec
xchg
aam
push
leave
jmp
ror
movl
mov
std
fnsave
mov
scas
cltd
push
or
push
movsb
dec
hlt
push
das
inc
cmc
mov
outsb
or
loope
pop
in
lock
fstpl
dec
inc
test
and
movb
cltd
pop
jl
loope
test
bound
in
push
sub
ret
sbb
fcmove
pop
out
mov
adc
inc
ss
sbb
push
lret
or
adc
fwait
insb
nop
push
dec
out
inc
cmpsl
fsubr
stc
imul
add
shlb
push
pop
bnd
push
icebp
jecxz
ljmp
out
mov
push
jo
ror
rcll
jno
mov
leave
cmpsl
stc
adc
outsl
and
std
jo,pn
or
pop
in
dec
sbb
lahf
mov
les
das
cltd
and
fdivr
outsl
enter
jbe
jmp
aaa
mov
add
stos
enter
movsb
jp
jne
and
aaa
lret
xchg
daa
sub
in
xor
sub
or
lcall
mov
pop
hlt
ja
jecxz
sbb
xchg
fmuls
je
cvtdq2ps
inc
add
mov
mov
ljmp
sbb
xor
jmp
outsb
data16
lods
mov
xchg
les
jmp
jnp
xchg
xchg
push
cmp
hlt
xchg
pop
sub
dec
dec
stos
pop
pop
push
inc
push
cmp
xorb
push
mov
jp
movsb
rorl
outsb
xor
sub
sub
in
ret
jae
cmpsb
andb
mov
mov
jl
xor
sbb
repnz
jg
imul
push
rep
aad
inc
push
pop
in
sub
stos
les
mov
add
test
mov
dec
das
mov
pop
adc
mov
inc
popa
cltd
jmp
push
sub
fnstcw
xchg
xchg
mov
xor
push
ds
and
fdiv
js
mov
out
and
mov
repnz
mov
add
add
pop
mov
testb
bound
fdivs
sarb
ss
mov
xor
and
loopne
cmpsb
push
pop
iret
aas
jmp
test
icebp
cmp
jl
or
ficompl
dec
arpl
mov
xchg
mov
call
out
jg
gs
into
test
xchg
or
cmp
sub
or
rol
cmp
in
mov
inc
movsb
dec
pop
dec
adc
jo
js
test
out
add
jg
sub
scas
icebp
lds
add
sub
fadds
mov
push
out
loop
out
inc
ja
cmp
cmp
repnz
adc
inc
adc
xchg
jge
rclb
pop
sbb
test
inc
repnz
push
cwtl
mov
xor
add
push
pop
jge
push
add
lods
push
bound
xlat
pop
push
mov
mov
test
pop
daa
mov
sbb
pop
fldl
test
or
or
dec
out
adc
imull
scas
loopne
adc
inc
xor
nop
xor
dec
and
mov
loopne
push
daa
mov
std
cmp
xchg
jo
adc
push
mov
jl
scas
cmp
lea
pop
testb
inc
sbb
jb
jl
hlt
xchg
shlb
pop
fmull
and
pop
mov
sub
or
stos
or
inc
mov
adc
test
nop
std
adc
cmc
adc
das
adc
incb
cmp
xchg
add
dec
loopne
dec
mov
jge
into
jne,pn
shrl
mov
js
jle
pop
inc
fiaddl
and
add
movb
push
fcompl
or
stos
or
mov
mov
insb
sbb
push
xchg
lea
push
dec
ret
cmp
fwait
jbe
shr
pop
or
xchg
dec
jno
mov
push
sub
jle
iret
xor
and
repz
push
mov
mov
push
push
sub
dec
inc
push
push
jle
scas
fcomi
sub
jae
fadds
mov
xchg
fsubrs
lret
je
rcrb
push
notl
pop
adc
sti
rcrl
leave
dec
arpl
sbb
js
sub
and
flds
lret
cltd
lods
jecxz
xlat
and
mov
into
addb
mov
mov
xor
mov
xor
mov
stos
adc
hlt
sbb
roll
mov
pop
pop
push
sbbb
jno
cs
loopne
ja
out
rol
push
add
dec
sahf
repnz
out
pop
in
mov
stos
add
les
xor
or
jns
pop
lods
icebp
jns
mov
xor
sbb
sbb
movsl
jb
xor
jl
stc
cmp
in
jbe
and
imul
leave
fstpt
mov
push
cvtps2pd
inc
test
test
in
into
xchg
btr
in
and
loopne
in
pusha
ds
and
jb
stos
xchg
aaa
cld
add
imul
mov
pop
jo
or
and
push
xor
enter
subl
jg
cld
mov
mov
mov
mov
aas
pop
fwait
jne
or
lcall
in
cltd
xchg
mov
mov
xchg
jle
lock
pushf
mov
adc
jnp
dec
cmp
clc
adc
test
push
int
and
sub
mov
cmpsb
ret
data16
popa
xchg
imul
xor
popa
cmp
dec
and
jb
lcall
das
ds
idivb
enter
pop
sbb
sub
adc
pop
mov
adc
es
popf
loop
jl
sbb
push
cmp
fstl
inc
scas
add
fnsave
sbb
out
add
push
adc
pop
popf
cs
icebp
add
mov
sbb
or
outsb
sbb
add
sbbb
mov
dec
mov
xchg
xchg
fs
pop
dec
push
and
rorl
xor
xor
popa
rol
repz
ficoms
test
jne
and
sbb
lret
rcrl
sbb
stos
xchg
fst
pop
imul
popf
hlt
cmpsb
nop
cs
daa
pusha
push
and
imul
mov
inc
clc
or
mov
cli
and
mov
xor
xchg
mov
mov
xchg
pop
and
mov
cmc
adc
pop
mov
cmp
and
xor
repnz
cmpsl
cltd
mov
aaa
je
xor
sbb
out
inc
and
aam
dec
mov
aad
jecxz
imul
jbe
stc
dec
jae
mov
cmpsb
pop
xchg
movsb
and
insl
pxor
sbb
jmp
pushf
fiadds
mov
add
adcb
mov
or
subb
mov
sbb
cmpb
push
outsl
pop
fs
xchg
movsb
in
popf
or
or
sbb
lret
arpl
cmp
jp
stos
mov
std
andb
jp
clc
ficompl
push
incl
mov
mov
sbb
rcll
pop
cli
adc
push
repnz
dec
scas
stos
mov
push
pop
push
repnz
jb
rcr
mov
orb
arpl
sbb
mov
push
push
outsb
mov
fstpl
test
and
and
cmp
mov
dec
jge
cli
sbb
out
mov
fcompl
cmc
or
push
test
lock
ds
nop
mov
pop
push
push
jmp
or
inc
push
out
aam
aaa
mov
jle
das
push
xchg
loopne
xchg
test
push
in
xchg
fdivs
scas
add
or
vmovq
daa
in
fidivl
cmp
iret
cmp
mov
insb
fldenv
add
cmpsb
insl
ret
xchg
mov
int3
pop
pop
jl
pusha
jle
pop
or
pop
mov
or
pushf
jecxz
fwait
outsb
pop
mov
mov
sbb
lret
loopne
daa
leave
push
aam
mov
cmp
fsubp
mov
sbbb
xor
dec
iret
jl,pn
sarb
xchg
insb
xchg
lret
jbe
jle
lods
fcmovne
std
hlt
jo
out
fcoms
pop
into
pop
cwtl
or
in
out
dec
push
mov
push
inc
imull
cmpsb
inc
jns
dec
mov
mov
xor
sbbb
sbb
arpl
jmp
aaa
fwait
pop
cmc
iret
push
cmp
adc
mov
sub
xchg
push
lret
pusha
and
or
cmp
mov
pop
xchg
pop
xor
or
outsb
inc
add
pop
into
js
outsl
enter
pushf
sub
pop
lods
sbb
or
imul
xor
test
ffreep
data16
mov
dec
inc
aas
push
xor
pop
nop
paddsw
test
test
into
or
sahf
xor
adc
icebp
sub
negl
xchg
jo
ss
cmc
jae
sahf
mov
jo
mov
pop
add
dec
xor
and
js
mov
and
cmp
adc
call
fcoms
idivl
xor
xchg
cltd
xchg
fs
es
pushf
test
lods
hlt
dec
ret
mov
aad
xchg
jo
xchg
into
js
and
idiv
rcrl
int
ds
in
sbb
fnsave
js
scas
insb
outsl
pop
les
mov
insl
enter
stc
das
daa
repnz
sub
pop
sbb
stos
inc
cmp
mov
mov
roll
pop
sub
in
mov
or
bnd
lods
dec
push
xchg
insb
fnsave
and
push
add
push
popa
xorb
shrb
sahf
cmpsb
pop
and
rcl
mov
enter
sti
scas
cmpsb
pop
pop
sahf
sbb
mov
pushf
ds
xor
pop
fst
and
dec
mov
xchg
stos
mov
mov
mov
mov
pop
inc
lret
push
xchg
outsl
daa
orl
lahf
mov
popf
scas
cwtl
stos
aas
je
xchg
jne
in
lods
aaa
jne
leave
testl
popf
ljmp
in
adc
cbtw
pusha
xor
mov
sbb
cld
mov
out
aad
insl
subl
jo
jne
test
test
mov
lods
sti
lea
and
test
fnstsw
movsl
pop
xchg
fldenv
or
cmp
and
rol
fadd
fdivl
mov
add
sub
jl
ljmp
pop
les
insb
aam
ja
mov
loop
xchg
imul
cmpsl
jmp
sbb
fnsave
iret
or
push
dec
stos
lcall
adc
testb
dec
mov
lods
int3
mov
test
pusha
lods
push
lahf
repnz
enter
in
outsb
xor
sbb
cmp
mov
in
std
cmpsl
test
in
sbb
sbb
cmovge
lods
rol
mov
dec
loope
inc
cmp
outsb
fldenv
lret
and
sub
cs
cwtl
sub
ljmp
cltd
in
mov
xchg
inc
and
mov
stos
dec
clc
xchg
jne
pop
test
clc
rcl
xchg
repnz
pop
dec
popa
jb
pop
scas
into
lods
ja
ljmp
cmp
pop
inc
sub
scas
ficoms
xchg
incl
cmpsl
pop
shl
mov
xor
outsl
test
push
jo
sub
test
in
sbb
stos
push
pop
mov
mov
stos
add
mov
or
jecxz
cmp
loope
lock
imul
xor
sbb
pop
cmpsl
in
rorb
mov
ja
movsb
sti
add
jecxz
pop
xor
sbbb
jnp
ljmp
icebp
std
ret
in
mov
ret
sbb
cmp
imul
mov
scas
sahf
fs
xchg
jae
test
mov
sub
and
add
fisubrs
add
xchg
push
mov
cmp
xchg
fwait
mov
jl
cmp
pop
xchg
nop
imul
lds
push
leave
mov
push
mov
in
loope
pop
jb
loop
add
inc
and
fwait
sahf
mov
inc
in
sbb
out
ret
hlt
rcr
jmp
push
ja
cmp
cmpsb
sbb
cld
shl
jb
or
pop
dec
std
dec
dec
sub
leave
cmp
std
loop
sbb
fwait
or
sti
xor
dec
loop
aas
jae
lea
sub
cmp
mov
xchg
push
mov
xrelease
rcrl
push
mov
out
pop
xchg
lahf
cli
clc
inc
daa
iret
dec
aas
xchg
adc
pop
arpl
mov
xchg
mov
inc
repnz
inc
dec
and
or
leave
add
jmp
aam
sub
imul
loopne
jmp
in
mov
icebp
mov
ss
sub
sbb
dec
testb
hlt
push
leave
loop
cs
cmpsb
add
in
and
push
clc
cmp
push
es
inc
xlat
sti
or
lock
lret
mov
jae
jns
mov
inc
fisubrs
std
inc
das
adc
outsb
lahf
jae
push
addr16
xchg
inc
stc
testl
je
icebp
cmp
push
sbbb
xchg
adc
lods
arpl
cltd
ret
inc
ss
cld
jl
add
add
mov
mov
mov
imul
xchg
ja
loop
shrl
mov
lret
cli
sbb
sbb
shrl
fs
jg
in
pop
mov
mov
sbb
lods
sub
out
dec
mov
les
pop
xor
mov
jmp
mov
aam
dec
inc
fs
insl
cli
ror
fs
push
shlb
dec
dec
or
push
lds
mov
push
movsl
ja
ss
push
imul
inc
pop
xchg
dec
clc
hlt
cmp
mov
test
cltd
and
clc
sbb
jmp
pop
subl
fwait
out
pop
inc
ljmp
fisubl
mov
jns
push
cld
out
stos
ret
jbe
or
xor
inc
in
pop
push
inc
xlat
mov
sub
in
loope
imul
stos
inc
cwtl
addl
push
xchg
shrl
pusha
scas
int3
inc
jns
scas
rol
xchg
movsl
repnz
das
fisttpl
scas
and
or
fimuls
xor
int
jmp
outsl
sete
int3
dec
inc
push
inc
lods
ret
pop
js
jae
shlb
ljmp
sbb
mov
mov
jbe
sti
cmp
daa
nop
inc
insb
into
push
adc
xor
push
mov
loop
jae
imul
sbb
xchg
fsubs
adc
add
adc
mov
pop
ljmp
mov
lock
aaa
movsb
cld
mov
lcall
mov
aad
hlt
test
mov
mov
mov
enter
pop
out
mov
pop
fs
pop
fwait
sub
add
arpl
cmc
cmc
xchg
test
pushf
bound
cmp
cmp
push
dec
xor
out
out
mov
adc
pushf
pop
adc
pop
inc
cmp
jp
sub
xchg
inc
push
xchg
fisttps
dec
insb
push
pop
xlat
xor
test
je
mov
out
dec
fsubr
cmp
scas
lods
dec
xchg
pop
imul
xchg
pop
sbb
sarl
in
xchg
fwait
mov
mov
test
push
mov
cmpsl
in
fildll
inc
cmp
mov
imul
and
mov
add
inc
repz
pop
dec
pop
xlat
inc
and
sbb
mov
out
sub
lahf
xor
lret
sbb
pop
inc
scas
mov
scas
sub
data16
sbb
inc
add
subb
push
push
mov
add
fidivs
ja
mov
mov
in
call
lahf
test
fistpl
mov
bound
aaa
xor
adc
xor
out
mov
test
mov
sbb
mov
inc
rol
sbb
clc
xor
pop
adc
negl
int
shrb
addb
jne
enter
insl
inc
jg
inc
sti
scas
or
enter
call
fcmovnb
or
stc
mov
push
insl
add
jb
stos
arpl
xor
aas
ret
sbb
leave
pop
xchg
mov
loopne
icebp
jp
movsb
pusha
inc
push
negl
sub
xor
and
mov
mov
xorl
inc
or
call
push
inc
inc
pop
sbb
mov
mov
notl
in
lret
popa
outsb
xchg
leave
add
in
xchg
push
push
cmp
jp
fistl
mov
insl
xchg
bound
mov
cmp
in
sub
jmp
movsl
push
cmp
test
adc
mov
enter
add
sub
add
sti
mov
mov
cmp
jne
mov
xchg
test
or
mov
popf
mov
xor
mov
movsb
mov
mov
clc
addr16
mov
shr
outsl
push
dec
sarb
aaa
fnstenv
es
sti
ds
scas
mov
ret
adc
repz
add
pop
add
cmp
push
jnp
cmpsl
xlat
ljmp
mov
mov
jb
out
sbb
add
dec
xchg
cmpsb
xchg
pop
mov
push
hlt
call
test
lds
dec
pusha
out
and
ss
rolb
mov
push
add
inc
sub
lret
sbb
rcl
mov
inc
add
ds
fdivrs
insb
cmp
fadds
insb
sub
shll
jmp
ficoms
ja
fdivrl
jnp
xor
xor
in
cli
clc
or
leave
loope
sub
cmpb
outsl
jb
cmpsl
fwait
sbb
xor
mov
mov
jnp
pusha
cmp
sub
add
enter
idivb
sti
std
xor
push
push
ret
xorl
cmpsl
cmpb
xchg
adc
aas
xchg
shll
scas
out
scas
dec
xchg
add
mov
xchg
stos
xchg
or
into
adc
aam
cltd
notb
push
or
test
lahf
mov
je,pt
clc
lock
xchg
in
outsb
xchg
subb
enter
lods
in
dec
adc
jge
jns
shlb
xlat
push
push
mov
pop
dec
mov
pop
cltd
loopne
mov
xlat
add
fldl
pop
cltd
imul
cmp
jns
add
loope
dec
data16
and
cmpsb
or
mov
inc
jl
cmpb
inc
je
adc
pop
push
cli
jbe
mov
push
bound
lods
dec
mov
out
xchg
imul
lahf
ds
and
jbe
fld
xchg
pop
xchg
icebp
pop
push
adc
sbb
pop
inc
cli
leave
sahf
neg
adc
mov
scas
cltd
repnz
pushf
adc
fiadds
push
xchg
stos
aaa
sub
ret
gs
xor
lahf
loop
xchg
rclb
push
jmp
jp
jecxz
fwait
inc
fs
cmpb
rcll
dec
mov
xchg
fcompl
aam
or
orb
add
out
pushf
sbb
dec
mov
xchg
inc
int
fs
lea
pop
xor
and
push
out
mov
enter
jle
xor
or
mov
popa
jp
stos
sti
loopne
or
jae
jmp
popa
sbb
xchg
enter
push
andb
cmp
mov
ljmp
fcmovbe
out
inc
push
sbbb
aas
jmp
jl
jno
shl
jp
out
frstor
xchg
inc
lods
add
mov
insl
rorl
jnp
aam
and
pop
cwtl
dec
fldcw
lods
or
pop
and
adcl
rol
arpl
mov
xchg
adc
movsb
mov
stos
and
nop
or
xchg
inc
clc
insb
fstpl
in
nop
pushw
fstpt
add
or
inc
arpl
lret
xchg
pop
mov
movl
repz
arpl
jbe
jb
push
dec
fstpl
jge
jmp
xor
data16
adc
stos
mov
std
icebp
in
lock
xchg
es
fptan
ja
fiadds
loop
mov
mov
xor
and
clc
mov
enter
mov
cmpl
and
cmp
in
push
xor
aaa
leave
mov
xor
push
mov
shll
mov
ljmp
mov
lea
jne
push
lcall
call
pop
in
inc
add
orl
ja
xor
mov
dec
push
ja
cwtl
aam
jbe
push
daa
pusha
stos
xor
adc
loopne
jmp
dec
push
das
lcall
stos
shlw
dec
pop
mov
icebp
jl
outsb
test
sarb
mov
cmp
adc
inc
add
fistps
data16
fmulp
sbb
repnz
fsubrl
push
testb
pop
fldenv
aad
movsb
mov
data16
push
loopne
or
scas
add
xchg
cs
popf
bnd
jp,pn
subb
in
cmpsl
push
mov
and
sub
push
sbb
cmp
data16
int
outsb
imul
or
pop
nop
xor
xlat
sarl
rcll
clc
fisubrs
jmp
and
inc
es
loopne
sbb
cmp
ja
in
jge
xor
ret
int3
xor
daa
xlat
popa
data16
dec
test
adc
jp
and
pop
insl
add
call
hlt
add
pop
sub
popa
pop
ja
xchg
or
push
jb
dec
dec
adc
lret
faddl
pop
sbbl
xchg
ficoms
dec
repz
ljmp
fwait
rorl
mov
sub
loopne
or
cmpsl
js
jle
lods
iret
fldt
adc
test
and
xchg
movsl
pusha
push
lcall
xor
mov
mov
push
sub
mov
test
call
xor
sbbb
in
in
adc
cmp
in
xchg
sub
mov
adc
sbb
loopne
mov
push
popf
sbb
ret
add
leave
jg
sbb
and
or
add
add
or
fbstp
add
jmp
flds
jbe,pt
ja
rclb
fcoml
pusha
loopne
dec
jecxz
jp
pop
ret
push
fcomi
in
lahf
jg
mov
out
std
xor
aas
adc
movsb
ror
mov
test
pop
xor
xchg
pop
scas
xchg
ret
xor
pop
ja
jl
jbe
xchg
xchg
cmp
fbstp
ds
lods
xchg
jg
mov
orl
xor
cmp
sbb
sub
sbb
bound
pop
dec
inc
cmpsb
sub
inc
js
sahf
xor
pop
pop
dec
lock
cmpsl
xchg
in
push
jp
xor
cmp
sbb
int
sub
lods
repnz
out
jne
jo
fldenv
sub
test
or
add
out
mov
sbb
out
mov
lods
xchg
sbbl
and
out
or
lds
push
jecxz
fs
jno
xor
cmc
lods
outsl
dec
mov
sbb
mov
cld
mov
mov
xchg
push
popa
insb
data16
imul
push
xchg
mov
and
push
jns
jnp
dec
mov
jle
sbb
pop
enter
outsb
mov
fwait
push
sbb
sub
repz
mov
iret
inc
movsl
addb
popa
mov
fwait
pop
in
addr16
pop
pop
jb
lahf
push
adc
and
hlt
inc
ds
lods
xlat
and
pop
xor
fisubrl
fwait
or
jnp
fnstenv
fldt
adc
inc
jg
xchg
push
xchg
popa
movsb
icebp
mov
icebp
xor
sbb
pusha
icebp
pop
pop
cltd
xchg
mov
stos
xor
mov
cmpl
mov
dec
test
push
dec
das
jg
sahf
aas
mov
fdivrs
filds
pop
cmpsl
rorb
jl
push
cmp
sub
les
lahf
mov
test
xor
inc
adc
nop
push
test
push
popa
test
ja
fs
test
mov
xchg
jns
sbb
xchg
imul
xchg
push
jle
jns
shl
add
call
xchg
roll
ds
sahf
in
xchg
arpl
test
ret
lahf
jae
int3
popf
push
xor
dec
xchg
out
add
data16
xor
imul
jge
push
lcall
cmpsb
sahf
nop
push
js
mov
fldenv
data16
cmpb
loop
mov
pushf
cmpsb
fs
sbb
jg
xchg
add
cmp
stc
or
in
mov
xchg
xchg
lods
jnp
loopne
es
stos
imul
and
push
inc
into
loop
mov
and
push
mov
lcall
mov
pusha
fwait
mov
stc
xchg
cld
aas
out
push
add
inc
icebp
ret
mov
sahf
loope
enter
push
xchg
jb
push
mov
mov
stos
out
bound
scas
out
mov
add
add
xchg
cltd
jae
push
xchg
in
sub
icebp
mov
xlat
movsb
out
adc
or
adc
push
mov
pop
fdivrl
loope
stos
pop
push
sbb
in
insl
arpl
frstor
jnp
and
add
stos
fistps
sbb
or
cmpsb
pushf
int
es
leave
mov
cwtl
fwait
pop
movsl
xlat
js
mov
stc
inc
ds
sbb
pop
jle
sahf
and
popa
dec
shlb
frstor
push
js
shlb
and
stos
pop
jb
data16
sbb
push
push
push
imul
fadd
lock
add
imulb
add
test
add
iret
shlb
inc
in
fdivl
xchg
xchg
aam
fistpl
lret
push
stos
add
cmp
jle
icebp
or
adc
push
lret
cs
ljmp
pop
add
cmpsb
imul
cmp
dec
icebp
sub
arpl
roll
pusha
fimuls
fistpl
mov
test
rorb
dec
mov
pop
xchg
lret
sbb
add
das
addr16
sbb
add
imul
aad
mov
xchg
push
or
jle
in
in
inc
cmp
out
es
repz
and
add
or
pop
imulb
ljmp
mov
ret
mov
in
ret
jo
js
ja
ja
les
lods
xor
sbb
and
mov
push
not
adc
or
mov
push
push
sbb
push
push
outsl
xchg
lock
aam
ss
xchg
test
sbb
fcom
push
jae
arpl
mov
sub
scas
lret
and
sbb
jg
mov
lods
mov
mov
cmp
hlt
jge
cmc
arpl
outsb
cli
outsb
dec
imul
pop
arpl
and
mov
mov
daa
cmp
cltd
cmp
push
and
insl
xlat
adc
cmpsl
sub
push
and
mov
mov
leave
jno
xor
cmc
dec
in
loopne
add
out
lock
adc
int3
inc
loope
push
aam
aad
fidivs
test
inc
push
mov
adc
scas
xchg
pushf
xor
in
arpl
lock
inc
arpl
rorb
dec
cld
jge
loop
jmp
icebp
out
mov
shlb
xor
cmp
loop
xchg
lods
cmp
sbb
mov
cmp
aad
pushf
xchg
mov
mov
sub
addr16
mov
or
ret
adc
sbb
pusha
push
out
or
les
pusha
fidivs
outsl
sbb
mov
mov
jne
xor
sbb
and
mov
inc
fnsave
repz
notl
outsw
fldt
cltd
jo
mov
mov
loopne
movsb
fwait
imul
mov
pop
push
cmpsl
sbb
mov
jp
push
push
enter
clc
cmp
add
dec
enter
je
push
sub
subl
dec
ljmp
dec
xchg
mov
sbb
ss
xchg
ds
sbb
aas
cmc
lock
int
out
jle
add
aas
lcall
sbb
outsb
dec
jl
or
cmp
cmp
sbb
outsb
pop
push
fisttps
insb
fcoms
pop
sti
aaa
in
cmc
lods
dec
pop
dec
clc
negl
push
or
in
dec
sbbb
loop
dec
js
add
hlt
ret
mov
sbb
or
popf
call
popa
mov
gs
xchg
mov
pushf
pop
dec
mov
out
cld
xchg
dec
xchg
pop
lahf
mov
hlt
imul
cmc
xor
jmp
xlat
add
jb
lahf
movsl
sarb
shll
aad
out
inc
push
fs
aaa
mov
popa
loop
push
imul
std
insl
rcr
sbb
enter
incb
lahf
inc
dec
sbb
push
test
cmpsl
or
int
sbb
pop
lea
jl,pt
pusha
mov
mov
je
jmp
andb
jnp
mov
testl
push
movntq
adc
scas
push
sub
adc
clc
xchg
sub
lods
adc
aam
or
pop
negl
ss
mov
sub
nop
inc
sbb
and
dec
mov
call
and
xchg
in
inc
cmpsb
test
add
aas
mov
mov
adc
call
pop
insb
and
xchg
mov
push
and
push
mov
mov
inc
dec
xor
jo
out
mov
mull
or
dec
into
shlb
mov
inc
jecxz
and
das
mov
sub
rcrb
or
stos
cmpsl
inc
jo
lea
fisubrl
jo
mov
loop
mov
push
popa
xor
sub
pop
xor
add
add
pushf
es
or
insb
jae
lahf
fucom
ds
push
adc
or
cmpb
dec
shrb
imul
loope
sahf
shll
mov
inc
nop
mov
in
xchg
jns
inc
sbb
dec
mov
loope
fldlg2
lahf
sub
cmp
in
lods
scas
xchg
pop
lods
inc
add
push
xor
pop
mov
in
ficompl
push
lret
scas
xchg
mov
jbe
cmp
imulb
out
add
pop
pushf
adc
adc
sub
insl
adc
push
pop
lcall
js
jp
sbb
sarb
xchg
jb
push
fninit
cs
cmp
lahf
stos
pop
es
push
in
jns
inc
sub
lea
sbb
aas
lods
cmc
push
sub
pop
ds
sub
sub
inc
fidivs
in
xor
unpcklps
dec
insb
cli
mov
ds
in
enter
loopne
bound
jno
lea
in
inc
pop
test
fcoms
lcall
sti
aaa
dec
or
incb
inc
mov
gs
inc
stc
mov
ljmp
fsubr
notb
and
in
mov
jo
jno
leave
sbb
inc
cmp
test
cli
addr16
bound
push
dec
inc
inc
into
mov
xor
or
push
sub
ret
xchg
std
insb
xchg
arpl
faddl
out
int
stos
mov
or
mov
incb
and
stc
jl
bound
mov
dec
inc
cwtl
adc
ljmp
rcll
pop
add
imul
lret
xchg
dec
mov
rol
dec
xchg
and
xchg
jle
xchg
inc
mov
sbb
sti
or
push
clc
or
stos
cltd
icebp
pusha
push
mov
inc
and
leave
push
cltd
mov
xchg
and
pop
xchg
out
inc
and
rorb
nop
xor
sbb
or
out
push
cmp
pop
xchg
or
pusha
add
push
xchg
bound
insb
or
xchg
iret
push
es
add
pop
pop
push
jo
sbb
and
xor
lret
cmp
rcll
dec
cld
scas
loopne
xor
in
bound
test
ljmp
inc
pop
icebp
jns
lret
std
mov
loopne
stos
jns
cli
sub
ja
cmpsb
adc
jo
jne
mov
in
clc
mov
jns
leave
mov
and
cmpb
out
out
roll
jnp
push
xor
jbe
inc
ret
push
fidivrs
push
arpl
sbbl
pushf
inc
mov
xor
mov
sbbb
std
mov
leave
ljmp
sub
cmp
inc
dec
ret
inc
sbb
addb
ja
in
fadd
fcompl
jo
fisttpll
cs
je
movb
push
aas
mov
aas
sub
repz
leave
xchg
or
cmp
sbb
xor
jbe
loop
jmp
mov
inc
mov
movsl
jno
rolb
add
stc
add
es
and
lcall
scas
scas
lcall
inc
sbb
aas
adc
outsl
sbb
mov
cs
xchg
push
je
mov
push
cmc
inc
cmp
xchg
inc
add
negb
mov
out
cli
dec
pop
xor
sbb
pop
jo
or
inc
cmp
mov
and
jecxz
mov
std
mov
inc
cld
jp
aas
test
inc
push
xchg
or
pop
jle
sub
cs
lahf
add
jne
std
sbb
lock
cmpsb
aad
xor
inc
loopne
movsb
fnstenv
imull
out
gs
lods
mov
adc
or
dec
jns
jns
push
push
adc
push
cld
add
dec
mov
cmp
xchg
lcall
shr
push
sub
sub
ret
jno
std
out
push
rclb
fdivs
jl
fsubl
sub
call
lcall
lds
mov
jno
ljmp
xor
mov
rorl
cli
out
xor
rcrl
imul
push
jo
insb
lods
in
push
in
in
les
cld
mov
mov
fdiv
mov
jmp
ja
pop
pop
icebp
pop
inc
xchg
ja
movsb
adc
jbe
pop
jne
fcoml
adc
sub
shll
pop
jl
pusha
push
mov
pop
scas
test
sti
gs
xchg
or
ss
xchg
repnz
dec
push
xchg
sub
call
push
mov
jo
add
mov
add
je
dec
mov
mov
cmpsb
or
outsb
push
mov
js
les
xchg
pop
insb
and
lret
sti
sbb
std
test
dec
mov
jge
jecxz
push
cmp
addr16
cld
pushf
call
jbe
cmp
in
fisubs
push
inc
mov
std
fstpt
inc
and
mov
leave
loop
cmp
frstor
mov
sub
jle
mov
mov
movsb
repz
dec
add
mov
insl
and
lret
mov
push
mov
pop
movsl
leave
xchg
addl
addr16
rcr
daa
jnp
cmpsb
iret
out
mov
add
data16
mov
adc
sti
sbb
stos
jno
xor
mov
xor
push
and
gs
jle
rorl
cmp
popa
push
inc
pusha
lcall
fucom
xchg
mov
mov
add
mov
or
lahf
adc
stos
mov
xor
in
adc
or
int3
mov
mov
movsb
jno
cmpsl
jns
mov
xchg
lcall
jae
jnp
sahf
mov
mov
cmc
fidivs
inc
and
mov
jne
das
sub
daa
sub
or
popa
loope
xor
sahf
add
mov
fistpl
adc
movl
lds
inc
outsl
jb
cltd
cli
out
loop
ret
and
cmpsl
lock
cltd
or
dec
adc
xchg
es
adc
mov
pop
xchg
nop
fimull
add
or
js
pop
xchg
dec
inc
fidivs
mov
adc
push
mov
loop
sbb
inc
cwtl
jnp
mov
cli
adc
andb
jno
test
dec
jg
loope
push
ljmp
aaa
std
jecxz
sub
lock
mov
jbe
daa
mov
ljmp
mov
add
and
dec
aad
jbe
xchg
aam
in
add
vmovups
mov
dec
and
inc
addr16
inc
imulb
cmpl
sub
cmc
mov
jne
sbb
in
test
mov
sarl
stos
xchg
cmpsl
call
jmp
xor
into
dec
dec
dec
push
pusha
test
enter
adc
mov
jmp
cld
sbb
push
int
scas
fsub
enter
pop
out
jmp
jge
addr16
cld
sbbl
mov
movsb
dec
adc
cmp
ljmp
jno
adc
rclb
mov
mov
je
cld
lea
and
rolb
sub
xlat
mov
push
loop
ja
sbb
push
adc
cld
mov
fistpl
mov
out
call
rcrl
xchg
dec
xchg
jecxz
js
ror
push
ret
inc
adc
shll
cmpsl
cmpsb
aad
insl
and
sbb
dec
add
inc
cmp
add
fstpt
or
xchg
push
cmp
mov
arpl
andb
lret
popf
sbb
movb
movsb
inc
dec
cmpsb
cld
stos
mov
add
xor
cmp
add
jo
dec
mov
negb
pop
testl
dec
ss
sbbb
jle
mov
shlb
jno
sbb
pushf
repnz
mov
addr16
test
test
imulb
out
lea
mov
popf
iret
jno
ret
inc
jecxz
inc
mov
in
addr16
cmp
ds
mov
int
cmp
dec
jb
cmc
mov
mov
into
pop
sbb
xchg
fbld
imul
and
insl
cmp
cmp
jle
jl
dec
cmp
out
add
insl
pop
dec
lea
and
pushf
mov
stos
psadbw
xchg
into
mov
int3
std
and
mov
pop
in
xorb
add
test
mov
fdivp
mov
push
mov
sbb
ds
insl
inc
aas
dec
mov
jg
into
movsb
subb
addr16
jo
push
rorl
or
scas
sub
sbb
cmp
xchg
rorb
fucom
add
loopne
xchg
fsubs
js
sub
addb
mov
dec
sbbb
add
push
aam
mull
or
rolb
mov
add
iret
dec
mov
sub
addb
push
sahf
lahf
sahf
lahf
sbb
lahf
dec
aaa
sbb
pop
xchg
stos
movsb
mov
push
rcrb
inc
xorl
dec
imul
mov
test
movsb
das
mov
lods
cmp
and
pop
xor
sub
fwait
push
in
sbb
jle
bound
mov
icebp
dec
jg
push
cmp
push
clc
sbb
mov
cmpsl
out
movsb
movsb
dec
and
mov
add
adc
loop
stc
push
insb
arpl
mov
add
sbb
les
addr16
sbb
lahf
mov
dec
mov
add
add
aas
mov
shr
push
mov
push
xchg
pop
enter
inc
les
rclb
jbe
stos
mov
imul
sub
jl
cmpsb
pop
mov
jg
lret
push
bswap
xchg
add
ds
jno
loope
gs
loop
inc
mov
ss
xchg
mov
sub
jmp
cmp
mov
inc
iret
cs
cmp
add
xchg
and
push
roll
lds
outsb
pushf
fmuls
pop
enter
jne
sti
and
sbbl
cmp
mov
dec
jne
cs
adc
insb
jb
lods
and
std
call
add
fdivr
adc
cmp
pop
scas
dec
mov
std
add
lahf
and
scas
push
jns
pop
xor
adc
mov
pop
pop
cmp
mov
sbb
sahf
in
aad
xchg
inc
lret
in
mov
lret
subb
cmp
sub
insb
add
imul
test
pavgw
ds
push
in
cmp
popl
sbb
or
lahf
xchg
fistps
ret
sbb
jnp
mov
popf
adc
test
clc
sbb
es
and
inc
jge
pop
in
adc
movsl
push
lds
jb
jo
imul
jne
dec
and
ljmp
pop
cmp
fisubrl
mov
mov
aaa
out
mov
sbb
test
cmpsb
mov
xor
sub
rolb
fxch
mov
insb
aam
and
dec
repz
into
adc
mov
call
sub
fcomps
cmpsb
pop
pop
inc
dec
mov
mov
mov
sbbb
sub
or
xchg
mov
enter
mov
cmpsl
js
push
mov
scas
jns
xor
jl
jns
ret
sti
push
stos
int
xor
fildll
pop
nop
sti
mov
clc
scas
daa
adc
in
call
xlat
sbb
xor
clc
setnp
shr
push
idivl
xor
call
addr16
ds
dec
and
sarl
push
ljmp
push
push
clc
shll
out
and
pop
leave
sub
adc
iret
rcrb
sub
xor
push
mov
or
lahf
sub
mov
and
jmp
mov
xchg
ret
xlat
adc
or
loop
flds
cmp
or
inc
cs
pop
fmull
dec
jbe
jmp
popl
jecxz
repz
sub
pop
ret
mov
add
data16
and
out
in
mov
leave
dec
add
addl
fs
inc
push
jne
xchg
dec
lock
lret
es
mov
jle
or
jno
ret
in
dec
lahf
cmp
mov
mov
push
addr16
insb
aam
push
jge
push
or
sub
cld
int3
lret
sbb
test
inc
into
and
jecxz
mov
mov
adc
cmpl
testl
test
cmp
test
adc
jmp
int3
mov
sub
adc
adc
bound
mov
faddl
mov
jge
nop
ja
mov
xor
sbb
imull
inc
add
hlt
das
and
inc
mov
mov
int
and
ja
jp
or
pusha
leave
dec
sub
push
aaa
pop
mov
cmp
xor
push
es
mov
cmp
mov
aam
insl
hlt
pop
push
inc
dec
jl
push
adc
pop
or
pop
aas
and
imul
rolb
xchg
push
pop
cmpsb
pushf
jbe
fiaddl
fs
xchg
ja
jmp
insb
scas
sti
ljmp
test
test
lods
adc
and
negl
add
cmp
stos
pop
add
insb
cmpsl
lods
cwtl
inc
mov
xchg
aas
repnz
adcl
int
cld
push
add
into
ficomps
cmc
jo
push
pusha
adc
pop
insl
push
mov
sub
ljmp
mov
jmp
adc
or
outsb
adc
outsb
add
xlat
ds
sbb
test
mov
push
mov
add
into
sub
bound
leave
push
sbb
fstpt
sub
mov
fimull
mov
xchg
dec
dec
inc
andl
xchg
and
popf
jecxz
xor
pushf
icebp
xor
ds
xchg
pop
xchg
aad
outsb
cmp
fst
mov
dec
aad
fists
push
movsb
cmp
shrl
repz
out
jl
and
pcmpgtd
dec
pusha
cmp
push
inc
jbe
aaa
rolb
data16
js
popf
test
shll
rclb
xchg
adc
sbb
dec
loopne
adc
icebp
jo
iret
insb
nop
pop
and
mov
dec
push
ret
arpl
insb
mov
or
repnz
xor
lret
push
out
addr16
std
jae
out
mov
dec
shlb
imul
fimull
loope
push
popa
loop
lock
movsl
dec
js
insl
stos
mov
in
enter
or
cmp
test
cmpl
mov
jns
mov
mov
push
cmp
lahf
cmp
les
and
sub
fisttpll
cmpsl
cwtl
mov
push
add
scas
repz
push
call
popf
push
inc
pop
sbbb
pop
aas
mulb
cmp
push
mov
jns
js
loopne
push
mov
icebp
icebp
cli
mov
stos
rcrb
fldcw
cmp
xchg
mov
ficomps
add
push
cs
subl
repnz
decl
ljmp
out
ljmp
push
stos
jp
jp
sbb
test
in
lret
pop
cmp
push
mov
push
bound
dec
jmp
pop
dec
pop
fwait
insl
jo,pn
push
inc
sar
push
rcll
mov
jno
shll
je
pop
cmp
rclb
ljmp
mov
xor
clc
lds
nop
cmp
add
dec
lahf
out
out
adc
add
xchg
movsl
das
aad
in
mov
stos
lahf
jl
jmp
icebp
pop
dec
dec
mov
mov
mov
and
cmp
fsub
dec
xchg
stos
iret
mov
sbb
add
icebp
aas
lock
aas
xor
enter
ret
aam
jns
inc
push
and
cmp
sbb
inc
shlb
adc
and
fisubrs
sub
movsl
sbb
adc
xor
jmp
in
lahf
ja
cmp
and
dec
and
jne
loopne
inc
pop
popa
sub
jo
mov
out
xchg
inc
push
test
outsb
jg
push
rclb
mov
mov
nop
gs
add
xchg
int
sub
mov
call
pusha
lcall
sbb
stc
inc
fadds
nop
xchg
sti
dec
and
push
and
jmp
aas
lods
jmp
sub
sahf
pop
mov
push
xorl
ja
scas
jnp
mov
sbb
and
jnp
and
jns
ss
mov
pop
leave
ds
pushf
push
mov
outsl
push
int3
jns
cmp
xor
pusha
test
fcomip
bound
sbb
sbb
sti
or
lea
mov
imull
sarb
pop
fmull
pusha
andb
iret
movsb
mov
ss
or
ss
leave
shrb
repz
stos
std
fsubrp
loop
fisubrl
pop
inc
test
mov
pop
stc
lret
flds
iret
leave
add
repz
movsb
jns
movsb
ds
in
jge
mov
jns
movb
dec
cmp
pop
ljmp
push
xchg
pusha
shl
fdiv
testb
repz
xor
mov
lret
adc
pushf
ficoml
std
sub
mov
test
sub
stos
jno
fwait
or
cmp
loop
repz
in
push
pop
loopne
fisubs
loop
movsl
sub
clc
push
fbstp
inc
push
in
jns
mov
stos
outsl
sbb
lea
aaa
cmpsb
inc
ret
or
stc
push
xor
pop
aas
pusha
xor
outsl
or
je
mov
hlt
jmp
push
inc
adc
cld
insl
jb
pop
push
clc
xor
inc
popa
xor
fistps
cli
aaa
cltd
outsb
enter
cwtl
sbb
je
out
pop
adc
pop
cltd
mov
out
loope
add
mov
jno
jbe
sbb
ss
dec
cli
fucomi
shl
movd
fldl
xor
and
cmp
push
cmpsl
xchg
subl
dec
jns
imul
lods
ret
test
inc
leave
pop
mov
sbb
test
mov
xchg
lock
mov
mov
xchg
test
mov
in
xchg
setbe
pusha
lcall
rolb
pop
in
out
push
testl
xor
test
arpl
testb
cs
xchg
nop
lcall
cmpsb
add
lods
and
cmp
cmp
test
fldt
dec
push
or
fisttpll
pop
and
cli
pop
or
fs
das
jb
das
dec
sbb
je
add
je
or
or
mov
cmpsl
add
movb
mov
ss
loopne
cmp
xchg
dec
je
sbb
jl
push
out
aam
sub
filds
fimull
cmp
pop
cmpsb
call
aad
add
mov
test
or
repnz
dec
sbbl
test
push
aad
inc
add
cmpsb
int
icebp
addr16
jp
inc
mov
and
lret
sahf
jle
fs
sbb
sbb
iret
aad
shrl
outsl
rclb
dec
pop
jns
sbb
loope
mov
adc
hlt
sub
jge
loop
iret
xchg
loopne
aad
cmpsb
jecxz
cmp
cmpsl
jmp
or
insb
shll
into
mov
jno
sahf
cs
movsl
lea
add
sahf
loope
mov
push
bound
and
aas
sbb
pop
repz
movsl
ret
mov
mov
jne
int3
rolb
and
mov
cmpsb
rcll
sbb
add
adc
les
mov
insb
sbb
and
mov
adc
or
push
enter
mov
add
imull
stos
aad
out
movsb
dec
addr16
dec
mov
enter
in
insb
push
inc
mov
mov
dec
cmpsl
ret
jg
rolb
xchg
loop
xor
ret
mull
push
xchg
lods
movl
sub
pop
dec
ret
lret
pusha
adc
jmp
mov
mov
xlat
out
mov
sbb
xchg
fwait
ja
test
movsb
insb
pop
aas
and
mov
cmp
sar
push
shrb
inc
inc
jns
aas
and
loopne
daa
testb
subb
lods
jae
das
sbb
mov
int
xchg
mov
test
sbbb
fwait
in
ljmp
insb
fwait
sbb
cmp
stc
adc
out
add
mov
mov
es
jnp
call
cmp
mov
mov
pop
or
bound
clc
push
insl
pop
lcall
lods
pop
add
out
mov
ret
xchg
pop
gs
js
popf
cltd
jns
push
mov
xchg
sub
lcall
push
orl
mov
ds
mov
out
jo
in
and
hlt
scas
mov
repnz
sub
stc
jns
sbb
fs
add
cmpb
outsb
dec
dec
fwait
dec
add
movsl
fsubr
cld
push
mov
ret
mov
and
test
jbe
jno
adc
leave
mov
push
or
push
add
jbe
pop
dec
xchg
push
xchg
sbb
mov
cmp
adc
mov
fsubrs
mov
or
push
jo
mov
imul
sub
dec
inc
stos
jb
or
roll
pop
mov
fyl2x
xor
push
push
loope
je
xor
dec
fs
mov
adc
idivb
sub
add
sbb
cmpsb
jae
mov
pop
clc
fst
lcall
push
in
pop
adc
inc
ljmp
fbstp
push
mov
in
sbb
lock
inc
repz
js
push
mov
neg
cmp
movntq
fwait
pop
test
in
ret
loop
repnz
jmp
push
mov
inc
inc
push
fsts
lret
xchg
lret
xor
shll
mov
lods
pop
mov
pop
cmp
insb
jl
fnstcw
fdivrl
adc
jmp
stos
daa
mov
bound
lods
ljmp
repz
bound
and
cwtl
bound
daa
test
push
push
xor
push
es
adc
jns
cmp
adc
cmc
mov
lods
cmp
ss
jae
aad
jge
or
jg
inc
or
xor
pop
push
loope
rolb
jg
aas
mov
inc
xchg
jecxz
and
mov
sbb
jl
mov
push
imul
imul
xchg
adc
mov
mov
push
insl
jl
push
mov
push
xor
adc
mov
mov
cmp
jb
aaa
ss
in
push
adc
pushf
or
repnz
sub
lock
fs
jne
addr16
leave
mov
mov
jmp
ja
out
test
es
scas
and
lahf
lahf
add
sbb
sub
popaw
add
lds
lcall
cmc
sbb
ds
iret
push
and
sub
adc
ret
jp
insl
sub
ftst
mov
out
pop
pop
and
pop
xorb
and
rolb
xlat
sbb
in
pop
sub
jb
ss
cwtl
inc
int3
mov
mov
repnz
xchg
pop
aam
mov
mov
pop
insl
pop
iret
iret
jns
pop
pop
add
stos
cmc
cmp
push
xchg
push
in
rcrb
and
lods
pushf
sbb
stos
pop
in
add
mov
mov
repnz
sub
imull
outsb
sahf
rcrb
pop
rcrl
fnstsw
push
popf
mov
cmpsl
ret
ja
cmp
sbb
inc
mov
xchg
and
inc
rol
movsl
ds
loopne
adcl
cltd
dec
push
popf
xchg
rcrb
sti
repz
test
mulb
sbb
movsb
imul
aaa
mov
stc
into
adc
fimull
and
pop
dec
mov
imul
or
repnz
add
out
cltd
lcall
adc
ja
ds
cmp
les
dec
xchg
pop
cmp
in
test
pop
sbb
je
rcll
adcl
call
xchg
je
cmpsb
ja
sub
icebp
insb
js
lods
and
test
imul
jnp
fimull
iret
in
movsb
dec
pop
clc
sbb
push
shl
sbb
xor
outsl
xchg
ficompl
jg
dec
in
gs
push
fcmovnu
hlt
mov
mulb
faddl
addr16
mov
ret
dec
xor
call
imul
push
cld
or
cmp
inc
pop
jns
xor
mov
lahf
rclb
push
dec
cmc
rolb
inc
ds
into
fstpl
add
or
pushf
xor
in
push
cmp
mov
fiaddl
inc
jb
test
pushw
xor
sbb
dec
pushf
fistps
movb
faddl
cmpsb
sbb
shrl
jo
or
xchg
cmpsb
jne
out
aas
push
nop
inc
push
adc
iret
and
imul
xchg
fldt
adc
lret
dec
cmp
aam
mov
push
popf
out
add
bt
push
or
int
ret
mov
out
pushf
sarb
xchg
inc
sub
xchg
mov
dec
push
fidivrl
push
stc
push
mov
or
je
leave
sbb
add
into
or
pop
add
jno
jl
or
jo
out
dec
jp
popf
popf
lahf
mov
ror
imul
sub
or
inc
and
rcrb
fcmovnu
inc
sub
pop
adc
dec
xor
jne
sub
mov
js
mov
dec
leave
sarl
and
or
push
xchg
sbb
lret
push
arpl
mov
jae
dec
ret
sub
dec
insl
jbe
test
movsb
jne
and
dec
xchg
cmp
cld
cmp
roll
xlat
insl
inc
cmc
jmp
popa
test
test
push
push
roll
add
lea
sbb
jb
ja
imul
aad
mov
adc
ret
inc
out
mov
add
xlat
xor
pop
test
push
out
rolb
arpl
fsubrp
push
and
jae
addr16
nop
iret
iret
int
addl
cmpb
pop
and
aas
push
cs
xchg
add
addb
mov
adc
xchg
out
pusha
ficoms
jg
arpl
andb
out
mov
xchg
loopne
mov
jae
clc
mov
sbbl
aas
std
addl
dec
adc
mov
jg
jnp
loopne
test
aaa
sti
inc
sub
xchg
mov
inc
fcoml
in
mov
scas
fsubl
dec
or
jbe
ror
push
push
xchg
inc
aad
jnp
mov
sbb
rclb
clc
roll
adc
sbb
mov
mov
loopne
push
mov
inc
mov
pop
add
mov
les
enter
cltd
repnz
sub
pop
cmp
add
std
mov
push
mov
mov
push
and
mov
or
cli
mov
sub
cli
or
lods
es
inc
dec
repz
pop
push
ret
add
xchg
inc
iret
sti
pop
add
cmc
push
sub
push
jmp
repnz
popl
mov
imul
loopne
out
and
dec
rcrb
cmpsb
cmpsl
jno
out
dec
xchg
inc
data16
mov
adc
cmc
test
mov
ljmp
mov
movsb
adc
and
popa
jmp
test
cwtl
jne
mov
cmp
jl
and
and
lahf
js
ret
push
in
cmp
sub
and
jnp
jecxz
mov
ficompl
cmp
add
js
dec
fs
mov
movsl
inc
stos
es
cmp
cmp
jl
mov
jae
or
fisttps
xchg
fcoml
testl
mov
and
mov
push
dec
or
cmpsb
jns
adc
inc
add
iret
inc
add
xor
xchg
mov
out
inc
mov
inc
inc
fistpl
inc
sub
push
adc
adc
cmp
cwtl
lods
jb
mov
cmp
adc
fdivs
imull
shlb
into
sbb
pop
repnz
fistpl
xor
testl
mov
std
lcall
sbb
mov
outsl
cmp
sub
pop
xor
stos
mov
lcall
push
xchg
call
or
decl
je
adc
imul
xlat
dec
mov
jge
mov
in
popa
sub
inc
jno
fwait
mov
mov
jne
cmp
mov
sbb
or
aad
push
mov
aam
or
les
sub
test
sub
pop
or
aaa
jge
jecxz
mov
push
decb
insb
push
mov
jg
stc
adc
ja
subb
pop
bound
dec
push
xor
das
cltd
pushf
fadds
xchg
mov
or
rol
outsl
out
les
push
jbe
aad
pop
xchg
mov
imul
xor
cmpl
pop
imul
ss
pop
bound
shlb
leave
push
lock
sub
ja
or
into
cmp
push
push
jg
xor
pop
jb
stc
pop
jne
ror
insl
inc
test
pop
mov
test
jge
lea
add
lock
out
pop
lea
push
les
push
mov
add
popf
bound
add
mov
push
pop
mov
sbbb
sub
or
jmp
data16
ficoml
ja
inc
and
push
loopne
flds
add
cltd
inc
cli
mov
pop
fnstsw
xor
scas
cmp
inc
cmp
sbb
fistpll
cmpsl
push
mov
cmp
in
dec
sbb
inc
inc
mov
aam
push
jnp
scas
in
lds
cltd
dec
enter
mov
jnp
clc
and
sbb
fcomps
sbbb
not
add
out
lods
lods
lcall
lods
jl
movmskps
sub
sub
pop
xchg
cmp
xchg
pop
negb
mov
in
test
mov
ja
imul
lcall
pop
cli
mov
inc
sub
xor
repnz
pushf
xchg
mov
sub
add
inc
shrb
loopne
cmpsl
adc
jae
mov
ret
adc
dec
inc
hlt
inc
xchg
aad
mov
lods
sbb
sub
mov
sub
popa
cmp
xchg
lds
fs
push
mov
cli
jbe,pt
in
and
scas
insb
xor
das
sub
out
xchg
adc
fmul
sbb
xchg
add
dec
jle
mov
test
sub
cli
dec
add
fildl
test
bound
inc
mov
push
inc
cmp
and
mov
and
push
sbb
ss
leave
mov
cmpsl
lods
repz
jbe
mov
pusha
sbb
sub
xor
adc
sub
jg,pt
aad
jns
mov
movsb
pop
jae
sub
jo
int3
mov
inc
mov
movsb
imul
dec
or
es
adc
pop
mov
dec
jae
xchg
das
into
or
mov
out
sbb
aad
insb
and
shlb
sub
dec
xchg
mov
mov
ja
mov
jmp
push
adc
ret
xor
test
fsubrl
popa
pusha
nop
add
cwtl
rcll
sbb
jbe
sahf
jae
dec
mov
mov
and
lahf
xor
jae
clc
jb
lods
jmp
leave
imul
scas
pop
xchg
movsb
cwtl
pop
pusha
sti
jmp
xchg
pop
push
cmp
cwtl
std
mov
adcl
adc
lods
fadds
scas
pop
and
into
std
and
ja
fdivrs
lret
das
lods
xor
pop
ss
mov
ja
pop
rclb
test
imull
std
sti
add
push
or
cmp
cmp
push
shll
pop
sar
inc
enter
andl
jmp
in
fsubs
cmp
jnp
sub
out
push
xchg
out
nop
cmpsl
iret
xor
loope
xorb
es
inc
sub
lds
sbb
cli
jg
aaa
fdivs
adc
mov
enter
loop
sub
loop
adc
and
mov
add
adc
push
test
pop
push
fstpl
inc
fldt
out
jl
movsl
movsl
dec
inc
cmp
or
sbb
push
outsb
pusha
cmp
jnp
sub
xchg
pop
jns
sbb
sub
int3
jge
mov
pop
cli
lea
jns
rcrb
adc
lret
out
mov
fcmovb
jne
imul
dec
shll
pop
in
test
out
out
pop
les
xor
xchg
adc
ss
pop
mov
and
inc
push
add
dec
loopne
pop
aaa
out
inc
sahf
inc
cmp
lea
in
push
cmp
dec
movsb
pusha
and
je
sbb
cwtl
mov
nop
enter
lods
andl
xchg
inc
cltd
sbb
bound
sbb
pop
lds
bound
mov
dec
sbb
jmp
ss
mov
push
or
aad
into
aad
and
sbb
mov
adc
aaa
out
subl
scas
enter
dec
cld
mov
aam
cmp
and
pop
xchg
lcall
pop
cmovbe
adc
push
outsb
pop
sub
dec
pop
in
ljmp
cmp
add
mov
lock
ret
ret
insl
cld
mov
test
clc
addr16
push
fdivrp
lds
adc
jo
jno
inc
fsts
hlt
mov
mov
mov
sub
popa
adc
mov
mov
loopne
cmpb
inc
mov
xor
cmp
xor
jno
mov
imul
jbe
mov
test
cld
sbb
cli
xchg
mov
add
push
lds
sub
add
testl
mov
les
push
xor
inc
insb
pop
outsb
push
xchg
jnp
imul
add
pop
dec
loope
jl
mov
test
jge
xor
cld
cmp
mov
dec
mov
sub
ficoml
mov
or
sub
or
jmp
das
mov
js
push
aad
sub
scas
push
adc
mov
mov
xor
arpl
dec
repnz
fwait
imulb
or
ss
ficoml
das
aas
scas
out
and
inc
mov
aam
icebp
xchg
outsb
std
ja
scas
push
out
xchg
add
jo
add
in
stc
callw
sbb
push
stos
nop
out
sarl
inc
js
loopne
push
fs
mov
imul
loop
sahf
pop
and
fildll
adc
pop
sbb
sbb
rcll
cmp
dec
rcrb
jmp
fdivrl
push
dec
mov
test
mov
dec
mov
mov
jae
js
cmp
jge
jne
scas
lods
cmpl
pop
push
ret
call
xchg
jg
fdivr
jbe
jmp
into
add
jge
add
cli
dec
daa
and
mov
ljmp
ljmp
les
vrsqrtps
pusha
jae
pop
mov
xchg
data16
adc
jmp
enter
mov
mov
in
push
pminub
adc
inc
and
sbb
shrl
fsubl
fldl
push
jmp
pop
leave
jle
xor
mov
scas
js
mov
sarb
aaa
jl
pop
cmc
cmp
push
xchg
out
mov
cs
adc
inc
jmp
dec
push
push
ljmp
mov
jnp
mov
sbbl
loope
inc
icebp
nop
outsl
scas
jp
mov
mov
test
push
xchg
fisubs
movsl
mov
popa
out
insb
ss
sub
daa
sub
push
inc
and
push
aad
incl
dec
mov
or
out
pop
cmc
mov
jl
icebp
stc
adc
push
addr16
sahf
and
push
in
xor
or
jmp
lock
xlat
dec
adc
addr16
std
adc
and
xor
xchg
je
mov
lcall
lds
dec
dec
inc
pusha
xor
test
outsl
dec
data16
xchg
je
sub
mov
idiv
jecxz
sti
notl
popf
cmp
jmp
in
aam
mov
adc
xchg
mov
jmp
mov
scas
cmp
xchg
inc
subl
jnp
sbb
cmpl
ljmp
mov
pop
xorl
mov
cltd
outsl
aas
jne
ljmp
jle
mov
and
pop
pop
cmp
icebp
ror
cmp
sahf
inc
pop
iret
xchg
scas
cmp
pop
ret
pop
movsb
idivl
push
xor
shrl
dec
pop
push
test
jl
sub
mov
ficoml
mov
in
pop
mov
fadds
adc
stos
jae
sub
stc
push
fidivrl
push
jo
gs
mov
lahf
mov
icebp
loope
lcall
mov
xchg
loopne
mov
js
loop
inc
mov
xchg
sub
into
jae
loop
mov
jnp
adc
and
jp
in
cmp
adcl
inc
loopne
es
mov
loope
pushf
repnz
mov
pushf
stc
fucomp
shl
and
mov
sbb
xchg
mov
rep
stc
sbb
loopne
inc
roll
xchg
ja
sbb
fbstp
movsb
mov
push
int3
into
out
and
cs
pop
incl
adc
test
jbe
xchg
lea
sbb
loopne
add
arpl
jne
popf
js
cwtl
dec
imul
and
adc
cmpsl
jle
cwtl
cld
xchg
fimull
cld
jae
idivl
popa
pop
xchg
imul
add
pop
mov
fwait
gs
cli
fcoms
mov
fwait
jl
or
lahf
xor
add
mov
pop
mov
fldcw
xchg
leave
xchg
arpl
call
cmp
rcll
push
fidivs
dec
lea
stos
sbb
push
call
dec
pop
and
adc
adc
push
iret
data16
fnstsw
fisttpl
je
inc
scas
add
mov
ds
xorl
das
insl
mov
jp
sbb
xor
jmp
dec
add
stos
test
mov
cmc
mov
shlb
push
fnstenv
mov
outsb
mov
push
add
sub
dec
mov
cld
ret
mov
repz
daa
mov
movsb
out
or
and
cmp
test
sbb
daa
mov
repnz
adc
push
std
icebp
xor
cmp
jl
mov
jmp
cmp
xchg
cmp
cmp
mov
lods
sarl
leave
and
dec
inc
inc
jp
test
mov
inc
stos
cwtl
int3
orb
outsb
sub
inc
mov
cmp
push
mov
push
cmpsl
dec
mov
push
int
dec
pslld
test
or
jbe
pop
movsl
insl
jge
stc
mov
std
aas
inc
cmp
setg
roll
dec
and
push
sub
push
je
mov
inc
mov
pop
rolb
je
repz
mov
jp
xchg
mov
jl
mov
roll
xchg
repnz
or
xor
sbb
jnp
aam
std
push
sub
loope
and
sbb
jne
stc
jbe
xor
jns
push
iret
dec
fmuls
xlat
hlt
push
cli
sahf
ja
pop
jmp
sub
subl
dec
insl
data16
mov
sti
mov
jle
negb
or
cld
xor
pop
and
jbe
or
dec
pop
push
insb
push
mov
mov
xor
repnz
xor
popf
pushf
mov
mov
sbb
push
jns
scas
mov
dec
xor
dec
mov
xor
xor
das
in
mov
and
inc
or
jb
dec
test
arpl
pop
outsl
sahf
fistpl
icebp
ret
cmp
insb
mov
adc
cmpsl
in
out
or
les
scas
dec
and
testb
pop
inc
sbb
inc
mov
loope
loope
lock
aad
add
mov
xchg
das
iret
sub
sbb
sub
dec
mov
loop
and
add
inc
sub
fbld
fnstsw
xchg
xor
arpl
add
scas
mov
fwait
inc
mov
mov
hlt
push
adc
jns
sub
and
pop
test
lret
dec
hlt
and
pop
mov
and
icebp
add
mov
lods
push
scas
pop
popf
clc
popa
aas
dec
testb
popf
sub
adc
push
sbb
ret
aam
push
mov
ss
sub
repnz
and
fidivl
int
out
roll
cmp
lcall
cmpsl
pop
push
lock
sbb
dec
pop
test
push
inc
rcrl
sbb
loope
icebp
loopne
pop
push
jecxz
iret
cmp
pop
bound
adc
out
pop
sub
xor
cmp
push
or
sbb
outsl
xchg
fdivrl
popf
fnstsw
dec
outsb
daa
cmp
fistpl
addl
aas
scas
lahf
push
orb
and
push
fs
add
sub
or
or
lahf
jmp
pop
inc
xor
pop
cmp
int3
cmp
sub
add
inc
add
dec
push
repz
add
adc
push
ret
icebp
mov
xor
mov
xor
sbb
cmp
aad
push
jb
adc
andb
rcrb
jo
add
test
sbb
lret
mov
or
imul
cltd
inc
inc
repnz
mov
and
xor
sti
push
and
scas
dec
mov
add
pop
testb
in
stos
mov
and
fcompp
dec
int
fiadds
or
ljmp
or
push
sub
or
mov
out
mov
dec
test
loopne
scas
mov
cmpl
sbb
dec
lds
mov
or
loope
in
adc
adcl
mov
call
jmp
mov
sbb
adc
aaa
add
and
or
add
cmp
push
pop
shll
mov
sti
rclb
lods
addr16
gs
jmp
mov
jae
out
cmp
jne
inc
loope
mov
bound
mov
aam
add
popf
shrb
push
jl
cltd
adc
mov
adc
fwait
aam
test
xchg
loop
arpl
cmp
and
and
inc
rcrb
xchg
movsl
ss
mov
mov
gs
jnp
dec
and
fwait
jle
push
cs
sub
sub
mov
jecxz
daa
fmuls
jle
dec
aas
xor
add
dec
sbb
push
rorl
push
aam
mov
mov
aaa
jne
add
mov
jle
xor
cmpsl
aam
stc
xchg
mov
test
xor
mov
shl
sbb
mov
pusha
or
or
dec
jecxz
inc
adc
mov
push
cmpsb
out
lret
aam
pop
fiaddl
push
dec
test
sbb
loop
in
or
imul
icebp
cwtl
dec
jb
gs
pop
shll
imul
mov
and
loop
adc
loop
xchg
pop
daa
out
xor
mov
daa
add
mov
pushl
addr16
aaa
pmullw
je
rclb
stc
stos
adcb
mov
shll
fsubp
add
push
ds
andb
push
mov
add
fwait
and
inc
neg
sub
js
imul
test
addr16
xchg
push
jmp
pusha
fbld
ja
lds
pop
call
lods
sub
adc
lcall
imul
xchg
mov
or
dec
aam
bnd
sub
fildll
sbb
sub
out
in
mov
dec
out
or
jle
jno
mov
dec
mov
daa
ret
popf
out
lahf
dec
jle
xlat
sbb
daa
mov
enter
and
mov
ja
xchg
das
lea
xor
or
les
enter
mov
jae
imul
cwtl
or
inc
paddusw
jle
push
fldl
lea
dec
leave
or
cmpsl
pop
aaa
push
sub
sbb
push
loopne
andb
mov
js
add
push
sub
roll
shll
add
aam
incb
sub
push
das
mov
and
jo
repz
pushf
inc
mov
mov
insb
test
cmp
clc
popf
jl
push
out
out
cmp
adc
notl
sarb
imul
rclb
rolb
cmp
or
arpl
jmp
loope
jnp
rcrl
popf
test
or
cmp
bound
xchg
loopne
adc
fwait
sbb
out
push
cltd
fisubrl
push
pop
mov
xchg
add
inc
lds
pop
push
lret
pop
and
dec
push
jp
sbb
cli
loop
inc
out
in
mov
ds
add
in
pop
data16
push
jno
dec
out
jno
sub
xor
pushf
and
pop
jae
dec
fidivrs
and
pop
rcll
jle
xor
nop
cltd
jns
sub
add
pop
shlb
push
ret
fnsave
mov
les
sbb
and
adc
pop
stc
cli
cli
mov
sti
sbb
dec
es
mov
xchg
xchg
stos
add
in
inc
push
sahf
sub
leave
mov
jecxz
mov
xor
imul
iret
icebp
push
pop
fwait
cmp
icebp
push
xor
xchg
dec
jg
jmp
icebp
and
sahf
es
add
pop
fsubrl
inc
addr16
add
dec
xchg
int
movb
rcr
dec
sub
cmpsl
dec
mov
dec
xchg
sub
sub
and
dec
and
fiaddl
cmp
pop
sub
sbb
aam
jns
call
pop
jecxz
packssdw
inc
enter
mov
cwtl
cmp
cld
mov
xchg
jmp
push
cmp
pop
outsl
imul
xlat
cmp
insl
sbb
out
fcompl
fsubl
fs
bound
andb
mov
popa
aam
cmpsl
or
fwait
mov
cmp
scas
add
or
dec
idivb
shrl
ficoms
dec
push
outsb
mov
sub
cmpsl
jmp
sub
sub
mov
ljmp
loop
clc
imul
out
sub
add
adc
dec
mov
dec
inc
xor
data16
adc
jae
pop
testb
dec
push
das
push
call
scas
or
cmpsb
fs
mov
loope
mov
lret
and
aaa
mov
push
aas
jl
add
ficoml
in
cltd
pop
mov
dec
jecxz
inc
enter
dec
inc
dec
push
add
sbbl
xchg
shl
mov
pop
xor
cmp
les
fdivs
addr16
push
fwait
clc
sbb
insb
jbe
out
pop
mov
cld
xor
shl
or
jle
adc
int
add
inc
dec
stos
cmp
lret
lcall
add
pop
xchg
in
mov
cmp
cmp
loop
enter
or
test
bound
stc
cmp
jae
jge
jb
fidivs
inc
sbb
ljmp
and
loope
int3
add
out
jae
mov
mov
mov
ljmp
add
frstor
adc
lahf
call
and
mov
sub
movsl
xor
scas
mov
out
mov
add
cmp
stc
cld
nop
add
in
movsb
inc
ljmp
mov
jb
jbe
outsl
sahf
mov
fdivs
repz
lahf
and
sar
inc
stos
subl
fincstp
inc
test
inc
iret
sbb
xor
add
mov
int
mov
mov
jnp
mov
jg
jl
xchg
dec
fwait
sbb
mov
rclb
lock
sub
xchg
js
lods
scas
pop
ficompl
fmulp
dec
mov
movl
add
jbe
jo
fsts
add
inc
inc
cmpsl
push
jl
xchg
xlat
sbb
cs
xchg
cmpsl
dec
fistps
adc
pop
cmp
in
fcmove
lea
push
fisttpl
ljmp
sub
jp
mov
push
mov
fstpl
dec
sti
inc
push
test
jns
push
jge
mov
fcompl
out
push
mov
adc
mov
add
and
ja
adc
icebp
outsl
mov
mov
rolb
mov
dec
stos
stos
pop
pop
push
mov
pop
sbb
inc
sub
repnz
lock
mov
call
imul
jae
dec
xchg
xchg
push
stos
idivl
outsb
out
mov
call
xchg
mov
imul
xor
push
ret
add
std
mov
insl
pop
popa
lods
fnstsw
pop
outsl
js
mov
xchg
movsb
jp
xchg
add
dec
push
stos
inc
das
divl
test
jno
outsb
xchg
imul
mov
mov
push
es
enter
xchg
aam
out
xor
popf
cmp
subb
in
sti
jmp
pop
pop
rcrl
repz
movsb
outsb
inc
add
mov
stc
add
xor
outsl
jmp
in
jp
mov
jnp
push
outsl
cmp
mov
gs
push
push
inc
push
cmc
pushf
mov
aas
cmpsb
push
rclb
lret
add
push
fisttpl
arpl
mov
mov
mov
cmp
xchg
push
addb
mov
sbb
jge
sub
mov
mov
jbe
dec
dec
ficompl
ret
xchg
and
sub
test
fnstsw
pop
jbe
enter
lcall
mov
adc
and
repz
out
subl
dec
subb
jmp
lods
mov
push
dec
xchg
xor
sbb
xor
int
testb
jb
stc
cmc
inc
adc
jmp
inc
hlt
sub
push
fdivrp
xor
xchg
hlt
filds
ret
xor
pushf
loopne
cmpsl
arpl
add
mov
mov
out
sub
stc
andl
or
jmp
mov
jnp
mov
sbb
and
mov
into
add
mov
xchg
xchg
or
int
push
and
fdivl
outsl
rol
push
mov
loope
iret
mov
add
dec
sbb
dec
sbb
in
lret
fadds
add
push
jge
fwait
adc
sbb
xchg
adc
loop
add
gs
ficoml
jl
je
push
arpl
xor
xor
xchg
es
inc
xchg
shr
cmpsl
mov
mov
outsl
or
push
push
mov
cmp
and
arpl
loop
popf
mov
les
jne
or
inc
daa
outsl
and
movsb
inc
sti
stos
xchg
mov
and
jns
mov
aaa
out
inc
pop
pop
or
xor
fsubrl
xchg
imul
mov
les
inc
xorl
aaa
lahf
or
or
sbb
test
inc
sti
xchg
mov
stc
mov
xor
das
adc
popa
mov
test
xchg
mov
jl
xchg
jg
jg
repz
jns
adc
lods
xor
push
sbb
or
lods
cltd
or
lock
cwtl
sub
les
shr
push
and
jg
mov
dec
push
dec
ret
xchg
mov
clc
jle
imul
add
adc
lahf
and
push
adc
and
or
in
and
stos
lret
lea
mov
jl
aam
push
mov
icebp
outsb
jge
jle
jae
movsb
inc
stos
or
negl
shl
fidivs
xchg
pop
and
sbb
jle
add
aaa
push
and
inc
adc
stos
repz
pop
mov
pop
arpl
cld
mov
jns
hlt
out
lcall
dec
or
fwait
popf
testl
mov
mov
lret
in
add
mov
add
cmp
sub
pop
shll
imul
fidivl
lock
mov
insl
insb
js
out
sbb
cld
call
sub
adc
jno
mov
movsl
push
or
cmpl
dec
jp
jl
push
movsl
pop
rorb
xor
xor
mov
divl
mov
mov
notb
mov
jmp
gs
xchg
inc
and
xchg
ficompl
mov
loope
clc
jne
and
jl
in
fisubl
inc
jg
inc
mov
std
add
cs
les
or
mov
rcll
imul
stos
clc
mov
sarb
adc
dec
lods
and
and
xchg
sbb
mov
sbb
adc
imul
jg
sti
push
inc
roll
jp
mov
inc
dec
xchg
add
mov
dec
adc
mov
jge
loope
sbb
sub
imul
sub
mov
ds
add
leave
insb
gs
andl
out
ss
sub
xorb
es
sub
lcall
dec
add
inc
loope
cmp
stc
lcall
xor
mov
fsub
loop
aaa
stos
sub
inc
out
pop
and
jae
and
scas
enter
sbb
iret
add
ljmp
pop
cmpb
xor
inc
xchg
fisttps
lcall
jae
gs
shll
xchg
das
scas
jno
es
dec
mov
sbb
call
cmp
jl
inc
pushf
icebp
movsl
ljmp
xor
sbb
pusha
daa
mov
sub
mov
imul
jns
lret
sbb
cmpsb
popa
out
enter
mov
in
ret
jo
mov
sbbl
cmp
inc
mov
sbb
daa
mov
call
pop
add
popa
outsb
cwtl
stos
cld
mov
subb
stos
add
ret
sub
loope
rcrl
lock
lcall
lock
jecxz
pop
mov
test
enter
mov
cmp
sub
jae
jg
inc
out
xchg
add
repnz
and
push
jne
lock
aad
inc
mov
add
out
in
or
jl
out
in
sbb
jne
lock
shll
cmc
test
jo
jp
jmp
push
and
into
sub
push
shl
add
mov
sbb
adc
cmp
stos
out
jecxz
mov
fdivrl
mov
stos
hlt
jo
inc
and
inc
add
movsb
jne
leave
xchg
push
mov
hlt
sbb
and
mov
xchg
jne
ret
jp
mov
mov
mov
cmp
hlt
sub
ds
add
aas
adc
nop
repz
stos
and
mov
mov
sub
xor
js
mov
mov
movsl
cmp
dec
daa
cwtl
fadds
dec
arpl
into
jl
roll
lahf
jge
mov
imul
dec
inc
xlat
cli
sub
ljmp
in
outsb
clc
jns
sarb
fnstenv
inc
fnstenv
cmpsb
push
inc
dec
sub
stc
xor
dec
in
xor
aaa
scas
cmc
mov
inc
add
addr16
arpl
xor
int3
adc
inc
cltd
pop
adc
xor
notb
xchg
jge
add
insl
js
das
mov
xchg
adc
pop
imul
lret
add
sarl
or
cld
xor
ret
ret
xor
out
xor
push
scas
sub
pushf
sbb
fcomps
jbe
cs
repnz
addr16
outsb
dec
leave
push
ficompl
shlb
inc
loopne
adc
fnsave
in
inc
or
sar
ret
sbb
add
ret
aam
inc
ds
add
lods
jg
into
xchg
lret
pop
sub
push
loope
xchg
inc
pop
fdivs
ljmp
sahf
jno
les
sbb
mov
push
cmpsl
stos
jp
mov
add
das
xchg
cmp
mov
arpl
add
fsub
adc
mov
clc
sti
cmp
pushf
fs
shlb
or
loope
cltd
mov
push
and
inc
sub
jge
shrl
mulb
mov
notl
lret
scas
xor
mov
push
jl
jbe
jge
pop
inc
sub
cs
inc
ss
in
sub
xchg
push
cmp
out
or
add
movsl
add
fwait
ror
xchg
mov
cmp
cltd
sbb
cmp
mov
into
jns
and
testl
insb
stos
ja
jmp
mov
dec
inc
cmp
lret
cmp
leave
clc
adc
inc
push
hlt
add
xor
daa
lahf
sbb
pop
je
adc
pop
dec
mov
mov
stos
fs
pop
sbb
insl
or
or
scas
pop
cmp
cmp
into
add
fnstenv
ds
or
and
rcll
mov
inc
ljmp
adc
popa
ja
mov
enter
mov
xchg
lahf
cmp
cltd
xor
insl
sti
fists
xlat
inc
pushf
addr16
and
insl
pop
push
lcallw
lret
dec
aad
dec
jmp
pop
push
cltd
mov
in
sti
hlt
dec
ds
dec
mov
xchg
fidivrs
xchg
pop
out
lock
jle
scas
stc
fnstenv
and
cs
xor
bound
aas
dec
stos
sub
mov
jns
pusha
push
cmpb
jg
sbb
pop
scas
adc
sbb
and
lods
test
cmp
shrb
adc
mov
lret
mov
push
es
mov
cli
pop
xor
dec
mov
cmc
sub
xchg
fnsave
cmc
push
sub
pop
inc
mov
inc
xchg
jl
sub
sbb
sbb
bound
adc
lcall
outsl
ja
and
fs
sahf
adc
and
rcrb
jmp
push
jmp
bound
pushf
xchg
or
jl
rcl
push
sub
jo
ret
imul
fsts
repnz
fistpl
dec
pop
in
push
ss
ret
mov
cs
sub
cli
mov
movsl
cmp
xor
sbb
andl
lahf
adc
test
and
xchg
test
jl
push
call
or
scas
fildll
sbbl
js
scas
bound
test
subl
in
or
ljmp
jae
out
clc
shll
inc
jb
dec
add
repnz
lcall
pop
dec
shlb
and
pop
and
push
push
aas
aad
stos
sti
iret
mov
in
jno
xchg
sub
xchg
mov
jg
dec
repnz
or
pop
mov
pop
push
adc
scas
sub
out
mov
mov
mov
mov
push
dec
dec
inc
jle
rorl
shrb
and
mov
fwait
test
dec
cmp
mov
dec
fldt
inc
sbb
ficoms
aaa
enter
mov
stc
jno
dec
lahf
mov
sub
jbe
das
push
popf
ds
popa
lret
fstps
pop
push
lods
iret
rolb
loopne
sub
hlt
aam
pop
push
xchg
pop
inc
aad
push
adc
jp
mov
xor
sub
pusha
mov
bound
stos
cltd
mov
je
add
push
out
in
inc
and
inc
stos
mov
dec
dec
les
out
cmp
fisttps
ret
in
insb
icebp
pop
lret
jae
dec
mov
xor
xchg
sbb
jae
jmp
les
push
dec
stos
insl
insb
lret
dec
sarl
fcompp
inc
test
pop
cwtl
fs
cli
in
enter
pop
and
aas
scas
pop
mov
inc
into
sbb
xchg
jno
insl
pushf
filds
gs
xor
hlt
repz
cmc
dec
mov
xchg
dec
add
inc
ret
and
leave
insl
dec
icebp
sub
out
jle
push
mov
fistps
mov
sahf
fisttps
xchg
push
or
ret
mov
push
cmp
fcoms
mov
test
xchg
dec
int3
push
hlt
out
scas
mov
pusha
stos
sti
int3
fisttpl
jo
push
imul
clc
mov
in
inc
fiadds
and
iret
add
sbb
dec
push
inc
ret
cmp
mov
test
outsb
dec
mov
jle
dec
testb
imulb
sar
and
fimull
dec
jmp
mov
xor
dec
aas
xor
lret
lods
adc
dec
idivb
cmpsl
xor
xchg
xor
mov
push
mov
push
out
imul
push
dec
insb
dec
imul
in
and
in
mov
cmp
xchg
repnz
sub
stc
and
test
loop
xchg
add
cmp
ja
mov
inc
jl
sarb
jb
dec
dec
cmp
dec
leave
mov
ljmp
cwtl
mov
outsl
jp
cmp
jb
dec
ret
repnz
sahf
or
xchg
ja
sub
fisttpll
cmp
inc
pushf
cmp
inc
cwtl
int3
inc
xchg
loope
sub
mov
mov
cltd
adc
fbld
cwtl
inc
das
sbb
loopne
int3
jg
lds
insl
aas
js
push
out
hlt
mov
loopne
int3
icebp
xchg
pusha
das
xor
mul
mov
nop
cmc
push
cli
xor
adc
sbb
cld
pop
enter
movb
fs
jno
lods
sub
jo
jbe
add
inc
sbb
daa
or
imulb
or
inc
dec
sti
cmp
push
aam
adc
rorb
push
arpl
and
mov
xor
xor
adc
lods
cmp
js
mov
xchg
dec
sub
cmpxchg
or
imul
out
jnp
jo
fcomps
rcrb
adcl
shl
jge
pop
adc
push
or
iret
sbb
cmpsl
repnz
loopne
mov
xlat
inc
cwtl
lret
jno
sub
push
pop
data16
lahf
imul
mov
out
or
mov
xchg
scas
test
ret
decb
sbb
sub
or
in
test
fcmovnu
inc
divl
insb
pop
push
repnz
jne
add
in
jge
cmp
gs
shrl
sbb
and
ret
pop
inc
add
jnp
repnz
mov
popa
xor
int3
sub
mov
cmp
jge
shrb
cli
push
testb
rclb
je
sub
push
out
mov
jmp
and
jnp
cmp
push
pop
mov
cld
outsl
mov
ja
or
loopne
sbb
push
hlt
arpl
loopne
test
or
adc
inc
xor
out
mov
into
shl
mov
stos
mov
pop
mov
pop
pushf
jmp
out
sbb
fistpl
mov
inc
or
jae
dec
andl
sbb
push
fadd
xchg
push
jns
cmc
dec
in
int
rol
jl
sbb
push
int3
gs
and
inc
xlat
mov
add
jo
sbb
adc
pop
dec
add
gs
adc
sub
lahf
rorl
lcall
or
sbb
les
xlat
jo
dec
test
fsubs
or
dec
xlat
add
push
loopne
mov
rcpps
sbb
xchg
sbb
mov
shll
out
jnp
testb
push
mov
inc
neg
in
std
fbld
mov
add
adc
add
jae
bound
mov
jns
lret
sub
mov
mov
inc
inc
dec
xor
bound
loopne
cmpsl
daa
mov
sub
out
mov
add
jo
push
cmp
int
aad
out
outsl
pop
ret
sti
inc
mov
inc
pop
xchg
subl
mov
lods
mov
out
cmp
push
push
fistpll
sti
jl
jg
sub
sbb
xchg
mov
fldl
pop
jo
out
std
mov
into
push
shll
cmp
pop
idivb
or
jmp
fstp
push
std
pusha
mov
add
and
cltd
and
jno
sbb
ds
sbb
out
mov
mov
pop
out
lcall
cli
and
adc
inc
inc
hlt
movsb
xor
leave
sub
and
push
ror
xor
xchg
xor
pop
mov
jnp
add
push
push
ret
repnz
jp
cmp
data16
andb
test
cli
inc
add
loope
cmp
and
and
push
out
fisttps
stos
leave
out
stos
pop
mov
sysenter
loop
inc
push
mov
test
adc
es
std
insb
xchg
pop
mov
rcrb
call
push
xchg
rclb
les
push
and
inc
movsb
jnp
loopne
mov
stos
or
ljmp
cwtl
jp
fildl
push
inc
adcl
mov
mov
lods
fildl
scas
or
xchg
push
push
enter
mov
loopne
mov
jmp
mov
add
das
xchg
sub
arpl
or
sub
push
push
bound
dec
data16
push
imul
add
cltd
sub
ds
push
mov
cmp
bound
ja
xor
cmc
mov
movl
sti
xor
lahf
ret
test
pop
mov
js
hlt
decb
jecxz
imul
mov
add
loope
cmp
sub
pop
mov
nop
ret
mov
adc
add
push
add
inc
sub
xor
mov
andl
push
fwait
aad
fsts
push
cltd
xor
jle
test
dec
xor
mov
ret
push
pop
cmp
out
je
pop
push
jb
cmpsb
nop
cmpsb
popa
cltd
pushf
in
push
stos
aam
mov
stos
repz
scas
test
jl
xchg
outsl
rcrl
jne
mov
inc
scas
xor
sub
sbb
out
add
jb
fwait
dec
sub
lahf
push
mov
add
or
imul
jne
pushf
and
or
lds
xor
mov
mov
test
popa
adc
sbb
sub
sub
xor
loopne
int
adc
insl
loop
push
xchg
int3
or
sbb
sub
insb
out
dec
loope
fstpl
cwtl
jle
loop
jns
jns
jecxz
lahf
jb
lret
mov
jl
push
jne
bound
cmp
mov
dec
mov
inc
rcrl
sub
add
imulb
outsl
pop
add
mov
and
pop
fs
mov
in
fists
dec
jmp
loop
mov
or
inc
lea
mov
mov
pop
mov
jne
push
xchg
pusha
insb
dec
mov
aaa
jne
xchg
jle
addr16
pop
jl
pushf
icebp
add
xchg
out
hlt
pop
iret
and
popf
mov
jmp
andl
push
rcll
or
lds
mov
imul
pop
fcompl
or
jmp
push
dec
ja
mov
xor
inc
push
ds
mov
mov
pushf
add
clc
dec
jbe
lret
es
sbb
adc
lods
cmpw
ret
xlat
sbb
pop
adc
rclb
inc
mov
out
fwait
pop
orb
scas
push
int3
dec
rcr
out
sbb
fsub
sub
push
int3
sub
sub
xchg
push
fmull
mov
hlt
in
inc
movsb
sub
sbb
add
pusha
ret
sbb
mov
in
xchg
in
xchg
cmpsb
test
lahf
cmpsl
cltd
inc
jae
ja
sbb
add
pop
dec
arpl
dec
call
std
mov
add
ret
push
add
cld
mov
mov
and
cmp
cli
sbb
scas
adc
dec
nop
into
adc
cmp
pop
xor
mov
popa
mov
sub
out
fisubs
mov
sbb
and
lahf
sbb
rolb
addl
es
xchg
test
jae
out
push
cmc
mov
and
ljmp
xchg
adc
cli
les
mov
mov
dec
xorl
sub
push
pop
add
outsb
sub
xor
jle
shl
inc
test
sbb
xchg
movsb
mov
mov
adc
pop
into
and
jl
stos
das
dec
inc
adc
lahf
xor
ds
jmp
nop
bnd
mov
lds
pop
jle
gs
mov
cmpb
fldcw
jno
or
cwtl
test
pop
enter
mov
gs
call
ret
cmpsb
jo
jp
jo
mov
and
xchg
repz
mov
pusha
das
dec
xchg
daa
push
push
aad
and
fwait
out
sub
mov
adc
or
adc
pop
outsb
sbb
adc
test
outsb
cmpsb
adc
out
imul
xchg
jp
dec
add
ja
repnz
imul
xchg
sbb
repnz
mov
cmc
or
mov
inc
xor
mov
xlat
inc
mov
pandn
jle
sbb
sub
nop
insb
xchg
jmp
pusha
cld
mov
xchg
mov
pop
sti
fisubl
mov
mov
imul
int
dec
insb
cmpsl
data16
shlb
push
fs
push
adc
add
outsl
mov
mov
orl
xchg
bound
adc
sbb
outsl
lds
in
popf
sarl
jmp
xchg
cmpsb
mov
xchg
mov
jb
ficoml
and
mov
or
in
xor
xor
out
scas
mov
adc
and
rolb
mov
mov
jmp
xchg
cmp
movsl
loopne
roll
jge
xchg
mov
fwait
scas
adc
es
out
xor
adc
push
add
inc
rol
inc
dec
negl
mov
jmp
cmpsl
or
cmovg
aam
rol
xor
push
fwait
add
mov
xor
inc
and
int3
das
test
xchg
xchg
sub
loopne
fs
pushf
in
inc
mov
push
enter
dec
mov
and
mov
xchg
sub
rclb
add
xlat
addb
jbe
add
sbb
mov
pop
fcmovb
jne
push
shrb
repnz
shrl
ret
mov
ret
fistpl
adc
mov
lock
js
iret
mov
arpl
fs
xor
lret
add
jg
dec
sbb
divb
add
mov
shrb
cli
mov
int
repnz
rcrb
dec
mov
xor
mov
dec
es
nop
and
or
dec
xchg
or
fwait
mov
addl
les
xchg
int3
or
ja
ljmp
ds
or
gs
pop
movsb
out
ljmp
fucomp
jns
push
test
sbb
int3
fimuls
cltd
lcall
fmuls
add
in
movsb
inc
jno
ds
sub
out
call
mov
or
and
sbb
ds
fcoms
push
ss
mov
dec
add
xchg
sahf
dec
fdivl
mov
push
clc
inc
or
aas
pop
je
xchg
shll
pop
inc
int3
sub
sbb
xchg
push
cmpsl
cmp
adc
and
test
or
xchg
inc
and
dec
xchg
fidivrs
push
add
bound
ret
ds
xor
and
clc
sub
insb
enter
das
je
push
inc
jmp
mov
mov
pop
sbb
inc
cmpsl
sbb
int3
insl
imul
popf
lock
ror
iret
xchg
jnp
testl
cwtl
jnp
mov
test
jge
xorb
ja
test
in
in
xchg
mov
xor
mov
or
xor
scas
cmp
push
and
mov
out
lods
push
mov
add
cmp
lock
xchg
pop
pop
cld
cwtl
push
call
pop
ljmp
dec
cmp
mov
popa
shll
inc
mov
dec
jle
or
adc
into
addr16
test
test
call
in
jnp
xor
fstps
pop
out
add
sti
lea
pop
clc
lods
shlb
push
xor
sub
in
xor
or
aas
mov
inc
adc
mov
ficompl
aaa
call
repnz
lret
xor
xchg
out
lock
or
shll
push
nop
push
inc
arpl
mov
repnz
ret
test
cmp
mov
or
out
mov
xchg
cmpsl
out
xor
cwtl
pop
jae
lcall
jl
pop
jb
lret
cmpsl
ret
cmp
dec
lods
cmpsb
lea
out
aas
adc
movsb
cmp
cmp
or
dec
insl
and
pushf
pop
jg
cld
jne
cmp
jnp
push
fs
ficoms
jne
or
outsb
adc
jo
es
jb
or
dec
and
stos
pop
sub
inc
xchg
sbb
ret
push
out
ror
bound
cmpsl
cmp
dec
popf
and
iret
pushf
inc
call
js
popf
stos
cmp
popa
xor
std
insb
pop
stc
and
lret
adc
fsub
inc
or
or
sub
repz
xchg
pop
xchg
jno
xor
pusha
xor
jno
ror
xchg
dec
aad
jnp
xchg
call
ret
pushf
into
adc
mov
sub
and
mov
jmp
xchg
sbb
pop
mov
sbb
xchg
pushf
fcoml
pusha
inc
mov
push
cli
jmp
jno
mov
dec
rolb
arpl
pop
and
and
pop
xor
lock
jmp
jg
pop
add
xchg
aas
mov
aas
enter
cmpb
arpl
cwtl
les
dec
test
push
lahf
xlat
mov
scas
ljmp
push
nop
jmp
lds
pop
or
mov
dec
fwait
xlat
xor
das
pop
jo
xchg
aas
pop
cwtl
roll
sub
addr16
sahf
mov
mov
xor
xor
cmc
popf
jno
xor
push
dec
pop
cmpsl
into
mov
out
mov
xor
out
pop
ret
xchg
fs
adc
xor
sahf
mov
push
fwait
lock
push
sbbl
jae
ss
push
fiaddl
mov
pop
repnz
cmp
sarb
mov
jg
sar
repnz
jg
and
jo
push
lods
jp
cld
sub
pop
roll
inc
scas
enter
scas
jbe
es
xchg
rorb
aam
shlb
fcomps
cmp
or
movsb
sbb
lahf
xchg
mov
or
outsb
mov
aaa
lret
add
aas
vcmpss
shl
add
scas
and
loopne
out
nop
sub
imul
adc
pop
and
dec
xor
mov
adc
sahf
movsb
or
sbb
arpl
sbb
mov
test
lock
fcmovu
and
mov
in
pop
jecxz
adc
rclb
sbb
test
lret
fwait
or
sub
mov
mov
loopne
jle
in
push
data16
addr16
das
pop
adc
jge
scas
push
jmp
mov
into
push
adc
add
test
mov
cltd
imul
mov
xchg
pop
and
add
cltd
inc
mov
sbb
mov
mov
mov
mov
repz
fwait
adc
in
mov
aam
cs
outsb
and
mov
fld
stc
pop
and
fwait
sbb
mov
push
adc
enter
pop
cmp
mov
lea
pop
rcr
or
pop
dec
hlt
xchg
jp
ror
mov
mov
ds
ljmp
loopne
add
or
add
cmp
fldt
enter
jg
xchg
xchg
adc
xor
mov
cmp
and
shrb
sti
fdivs
fcompl
cmp
fld
xchg
mov
popa
push
sbb
cld
xchg
xchg
scas
loop
shl
movsl
and
scas
movsb
push
test
lahf
xchg
cs
loope
ret
cmp
fwait
or
inc
fs
jge
je
aad
cld
xlat
fcom
nop
loope
push
sub
mov
add
filds
in
mov
testb
jno
fstpt
adc
xor
xlat
leave
pop
cmp
mov
pop
jg
rcr
ja
dec
sbb
jle
pop
xchg
mov
ficomps
outsl
dec
bound
mov
into
fisttpl
mov
icebp
adc
adc
jnp
ljmp
cmp
rorl
push
cld
jecxz
jae
in
nop
cltd
rcrl
scas
dec
popf
dec
xchg
jmp
xorl
or
push
push
sub
stos
pusha
shl
and
pop
push
lahf
or
xor
xchg
inc
push
pushf
mov
into
test
lods
sbb
jl
insl
push
fsubs
out
push
aas
aas
sar
fwait
aas
jle
mull
adc
xchg
push
stc
add
sub
int3
test
xchg
pop
pop
lds
das
test
sub
out
int
mov
ljmp
add
xchg
lret
testb
jl
mov
aam
adc
add
cmp
xchg
subb
inc
push
push
jnp
mov
add
pop
pop
arpl
fimull
arpl
or
shll
cltd
aam
cli
out
lcall
cltd
mov
jne
add
pushf
cld
int3
add
adc
pop
dec
sub
mov
jmp
dec
jbe
sbb
ss
xorb
dec
add
mov
dec
jno
adc
stc
loop
fldt
dec
mov
mov
jbe
leave
inc
mov
sub
outsb
pop
pop
push
lock
sarl
push
lahf
in
cmp
xor
aaa
mov
inc
sub
shll
fldcw
jno
icebp
int3
adc
loope
xor
js
mov
lcall
or
in
inc
arpl
or
outsb
mov
daa
test
mov
addl
fcoml
add
inc
dec
enter
shll
xchg
cmp
pop
repz
and
fdivp
pop
inc
in
mov
outsb
mov
out
mov
hlt
loope
mov
xchg
add
fimuls
sub
sub
rorl
cmc
rcrl
lcall
loope
iret
js
adc
xchg
fs
jbe
xor
cmp
jb
jnp
sub
outsl
lods
imul
or
nop
enter
or
lock
inc
mov
pop
rol
sub
dec
mov
push
inc
leave
aaa
xchg
ret
xor
dec
xchg
push
cmp
mov
push
lret
ret
jp
or
pop
stos
aaa
sbb
jo
mov
cmp
sub
adc
cmp
aas
cmp
and
jno
push
sbb
movsl
dec
pop
lods
sub
mov
mov
lcall
add
push
xchg
out
adc
xchg
insl
dec
outsb
sub
xorl
adc
andl
xchg
test
mov
jle
jns
lea
inc
into
mov
imul
cmp
jnp
clc
icebp
jmp
dec
cmp
adc
and
sub
jmp
inc
or
add
mov
mov
cmp
push
sbb
mov
xchg
insb
aad
aaa
mov
lods
inc
leave
dec
dec
or
sarb
into
fmul
jae
sti
shlb
xchg
fisttpl
clc
pop
cwtl
xor
dec
aaa
xchg
push
adc
xchg
mov
clc
mov
rep
jg
ret
mov
fmulp
in
ds
cmpsl
xchg
sub
sub
ss
insl
pop
loop
les
je
inc
adc
data16
sbb
push
add
popf
and
jno
mov
cmpsb
int3
fistps
shll
inc
jmp
add
je
std
adc
repnz
nop
std
subl
add
roll
rcrb
jb
sbb
sbb
sbb
push
inc
adc
jg
add
sub
rorb
xchg
inc
ljmp
dec
movsb
xchg
imul
loop
cmc
mov
out
inc
loopne
and
ret
pop
int
xchg
clc
mov
mov
mov
dec
jmp
ds
in
and
fwait
mov
or
insb
sbb
lods
mov
bndldx
std
pop
jno
dec
stos
insb
or
lock
mov
xor
sti
xchg
and
add
addr16
mov
jo
aam
dec
inc
lods
cmpsb
outsb
fmull
nop
std
jno
sahf
pop
sub
stos
out
mov
jl
xor
insb
pop
inc
fiaddl
inc
outsb
stos
daa
xchg
inc
ljmp
mov
nop
aaa
mov
ss
lods
sub
notl
jno
pop
imul
loopne
stos
movsb
inc
or
fstpt
inc
lds
xchg
sbb
cmp
xchg
ljmp
cmp
aas
adc
mov
adc
popf
push
lds
rorl
sub
fsubrp
rcl
popa
xor
xchg
and
ja
lret
add
imul
inc
push
xchg
cli
cmp
or
sti
call
add
out
pop
sbb
push
add
pop
rcrl
sub
add
popf
fwait
in
mov
jo
dec
je
nop
adc
xor
jae
add
negl
lret
dec
sub
xchg
stos
xor
cmc
in
pop
popa
or
pop
sarl
mov
mov
dec
nop
push
fs
xor
lods
or
cmp
ljmp
and
xorb
dec
mov
sbb
lods
mov
add
and
adc
in
mov
ja
pop
and
rcr
into
mov
dec
fs
insb
popa
stos
popa
es
xor
xor
scas
pop
les
sub
xor
addl
sub
lea
mov
repnz
test
aad
xchg
std
nop
loopne
sbb
loopne
int
or
dec
jnp
add
mov
push
lock
and
aam
cmp
mov
mov
test
mov
outsl
xchg
mov
mov
jns
xchg
je
movsl
inc
addb
dec
and
jb
xor
xor
xor
and
leave
fcompl
sub
adc
and
out
cwtl
jge
xchg
cmp
mov
lret
pop
cmpsl
gs
test
cmp
and
add
cmpxchg
fdivl
jo
jno
adc
push
xchg
xchg
push
mov
enter
lea
inc
xor
jne
pop
jmp
movsl
sub
andl
aad
int
push
adc
push
icebp
aam
shlb
push
roll
push
jp
ficomps
cmpsb
or
mov
fwait
imul
push
and
mov
lcall
push
mov
daa
cltd
push
pop
jmp
mov
and
push
clc
jno
inc
pop
scas
push
aad
repnz
push
mov
adcb
pop
int
and
dec
jnp
repnz
sbb
inc
clc
decb
and
and
mov
in
mov
stos
xor
into
push
insl
mov
dec
loopne
xchg
jns
pop
add
add
mov
mov
add
dec
test
jns
frstor
pop
mov
inc
cld
int
mov
adc
and
insl
loope
lret
out
repz
hlt
icebp
ss
cmp
mov
sub
xor
sbb
xlat
pop
loop,pt
movsb
mov
lahf
sbb
xor
insb
subl
pop
inc
scas
mov
dec
loope
mov
fstl
out
gs
movsl
jns
test
mov
push
jne
fninit
insl
pop
and
mov
xlat
lret
and
ja
cmp
adc
ds
push
sti
shlb
mov
add
and
mov
jle
and
lods
cmp
jg
mov
aas
movsl
pop
cli
jo
cmpsl
ljmp
sub
dec
js
inc
add
aad
pop
dec
jnp
scas
mov
das
or
sbb
divl
jp
stos
and
pusha
scas
pushf
lock
pop
lret
pusha
jns
xchg
outsl
add
std
mov
lcall
fucomp
and
push
lret
adc
inc
aam
loop
loop
cmovl
sbb
jle
push
push
sbb
lods
and
data16
dec
repz
inc
dec
mov
fcmovbe
or
xor
sub
jbe
xor
hlt
insl
faddp
popf
hlt
sub
enter
aas
in
push
cmp
sub
sbb
push
leave
sbb
fstps
out
mov
rorl
pushf
inc
int3
and
adc
fisttps
mov
fidivrl
cmp
lahf
lahf
mov
push
xchg
mov
jmp
vmovlpd
out
data16
sub
int
add
mov
or
test
repz
lret
inc
rorb
or
pop
sahf
loop
idivb
out
push
xor
xor
mov
pop
outsl
cli
fsubrl
dec
rcl
insb
xor
xchg
iret
fsubr
jg
lods
jl
and
cmpb
arpl
ror
mov
addb
sbb
or
ret
xchg
mov
stos
popf
mov
insl
jmp
jae
cmc
mov
fsub
xchg
cmp
sti
adc
xchg
fs
push
or
popf
push
test
mov
jp
shr
cmp
mov
clc
stos
movsl
mov
mov
imul
lahf
mov
std
xchg
pop
sub
jb
cmp
xor
test
pop
xchg
testl
je
fdivrs
clc
jns
cli
sbb
out
cmp
inc
adc
clc
ret
add
sub
push
loope
jge
xchg
mov
psllw
mov
push
in
jnp
mov
or
test
in
popa
xor
enter
nop
mov
mull
mov
jo
dec
stos
ss
add
sbb
mov
fs
xlat
xor
inc
pop
cmp
aad
sub
shl
adc
add
sbb
mov
cmpsb
icebp
daa
cltd
outsb
bound
mov
orb
mov
inc
lock
ret
mov
jmp
push
fs
push
lods
pop
push
xor
fucomp
jae
shlb
lds
nop
mov
int3
adc
orb
adc
cwtl
pop
inc
mov
mov
cmp
lods
sbbb
pushf
lret
into
xor
rcll
cmp
lods
jecxz
scas
nop
xorl
inc
cmpsl
into
jno
mov
inc
mov
outsl
int3
adc
sub
repz
out
ucomiss
outsb
jbe
sbb
aaa
xchg
cmp
mov
sbb
xor
rolb
xor
shll
mov
imul
push
jno
jb
outsb
sub
fisttpl
sbb
dec
xor
mov
je
sbb
imul
dec
xlat
fists
sbb
repz
lods
adc
cmp
jle
jp
addr16
adc
sub
filds
mov
ss
mov
test
add
pop
sub
aad
pop
clc
rclb
mov
mov
jns
pop
pop
mov
rcl
lods
divb
adc
jae
pop
int3
adc
and
int
mov
push
sahf
jge
fcomps
xor
jno
stos
xor
enter
mov
pop
into
hlt
mov
jg
jg
mov
fdivr
aas
outsb
cwtl
jne
lds
push
mov
sbb
inc
pop
sbb
stos
push
or
mov
inc
call
xchg
mov
xchg
lea
fwait
pushf
add
icebp
xchg
movsl
dec
hlt
mov
and
adc
and
and
xor
roll
in
inc
jo
push
and
in
rep
push
fmull
or
jno
sub
out
pop
inc
xchg
lahf
pop
xchg
mov
ret
mov
dec
leave
jnp
popa
ret
push
xor
mov
mov
push
xchg
bound
dec
leave
pop
aas
dec
pop
mov
pop
movsb
sub
or
shl
shrb
outsb
mov
inc
negl
jp
push
push
mov
sub
scas
xchg
jo
ljmp
test
je
test
mov
cld
es
push
cmp
sbb
addr16
cmp
push
dec
jb
sarl
cmp
pushf
pop
loopne
push
jl
test
pop
lock
ficoms
xchg
and
ret
out
mov
ds
and
mov
push
popf
mov
fs
gs
cmpsb
push
jecxz
sbb
push
rclb
ja
sbb
shlb
and
mov
call
mov
lds
adc
dec
pop
stos
inc
push
sub
lods
and
or
push
cmpb
dec
inc
lcall
or
sub
or
test
sbb
js
push
arpl
mov
adc
sbb
mov
out
pop
xchg
inc
cmpb
call
mov
data16
mov
mov
mov
jmp
mov
xor
sbb
leave
mov
dec
xchg
mov
add
lcall
sbb
jecxz
lahf
test
out
fldt
inc
arpl
mov
outsl
gs
daa
test
decl
es
sub
pop
adc
aam
cmp
test
xchg
sbb
ljmp
mov
sbb
gs
mov
sub
nop
mov
and
adc
rcrl
cmp
sbb
repz
jo
add
push
inc
fld
jecxz
daa
leave
nop
fildll
punpckldq
int3
cmc
jl
push
xor
cmpsl
mov
sbb
inc
data16
jecxz
add
adc
sub
imul
decl
clc
xor
jecxz
call
xor
mov
add
sbb
loop
rcrb
lds
or
pop
daa
jge
xor
nop
and
and
jg
aad
xor
sub
fisttps
and
sub
mov
arpl
leave
xchg
aaa
ss
std
daa
xchg
lea
xor
lock
mov
leave
ss
xchg
test
rol
mov
sub
push
fstpt
sbb
or
xchg
sbb
sbb
cmc
aam
jmp
add
mov
jne
mov
sarb
mov
push
dec
in
mov
hlt
adc
rclb
loope
pop
mov
leave
repnz
mov
mov
dec
scas
cmp
push
out
fstl
add
fisttpll
sbb
push
arpl
and
std
cmp
lcall
test
in
xor
push
mov
mov
cmpsb
ss
jge
icebp
xchg
lcall
arpl
fimull
mov
ds
testl
hlt
negl
sbb
or
push
mov
stos
insb
mov
cmpsl
sbb
push
aam
pop
cmp
clc
jmp
push
adc
sub
pop
loope
mov
rorb
xor
or
loope
test
repnz
adc
mov
data16
lret
jne
pop
movsb
jecxz
aam
or
cli
push
push
imul
push
mov
pushf
xchg
inc
aaa
jbe
adc
mov
push
repz
push
stos
out
cli
inc
bound
incb
out
std
and
mov
sbb
shll
mov
and
sbb
sub
sub
dec
jae
orb
xlat
or
es
scas
inc
cmc
ds
sbb
imul
andl
pop
lret
pop
rorb
pop
cltd
push
mov
jecxz
sarl
imul
lret
mov
jecxz
leave
subl
lret
out
xchg
sbb
mov
rcrb
jge
xchg
std
push
xor
scas
xlat
mov
lock
ficoms
mov
loopw
xor
out
or
lds
insb
add
jno
or
pop
aad
in
sbb
add
add
xchg
cmp
scas
xchg
ss
mov
or
inc
lds
mov
insl
fmuls
outsl
jbe
inc
dec
push
cmc
rorb
push
sbb
insl
adc
xchg
mull
inc
xchg
or
add
lret
lods
add
jmp
pop
xchg
insl
imul
or
in
int
imul
inc
mov
das
mov
xchg
enter
sbb
cmc
lret
data16
std
es
stos
sbbl
popa
out
push
mov
lods
outsl
cmpb
add
push
jbe
iret
imul
mov
cli
and
cs
cmp
decl
iret
push
mov
sbbl
js
idiv
dec
sbb
jne
dec
push
int3
mov
mov
mov
mov
lock
insb
aaa
xchg
lcall
mov
sahf
mov
imul
sub
jecxz
icebp
xchg
iret
sub
stc
add
push
cmp
push
dec
xchg
add
or
and
xor
iret
in
xchg
shrl
roll
jmp
je
xlat
loopne
or
dec
lods
push
mov
xchg
ss
in
scas
in
mov
mov
out
das
and
sbb
stc
jg
fimuls
cmc
dec
pushf
into
mov
adc
shrb
repnz
xor
mov
dec
leave
pop
shll
mov
inc
insl
add
lret
jno
hlt
je
dec
in
dec
jne
cmp
xchg
cmpl
rorl
in
mov
xchg
fists
mov
popf
adc
mov
pop
sub
add
fistl
jnp
jbe
dec
outsl
pop
sbb
mov
sarb
cs
inc
imul
test
pop
mov
xchg
sbb
mov
pop
pop
cmp
lret
lahf
xchg
cmp
pop
std
iret
dec
call
sub
cltd
xchg
push
and
pushf
mov
sbb
stc
loop
ret
movsb
mov
stc
mov
mov
sbbl
inc
and
mov
pop
js
adc
nop
in
pop
das
cwtl
fwait
and
aas
adc
pop
cmpb
lea
and
in
ds
inc
xor
cli
loopne
out
scas
in
add
or
js
and
mov
xor
and
aaa
adcl
out
pop
call
ds
push
adc
iret
xchg
push
shll
out
xchg
jmp
pop
mov
ljmp
aaa
lret
and
leave
in
cmp
jge
cwtl
mov
sbb
add
outsl
push
inc
adc
xchg
adc
mov
mov
or
xchg
call
loop
cltd
jbe
or
gs
popa
sub
adc
sahf
push
xchg
shlb
and
out
sarl
mov
into
add
lret
sub
mov
jge
mov
sbb
cltd
jno
sbb
call
ret
jp
jecxz
push
arpl
push
xor
loope
pop
sub
push
mov
dec
mov
xchg
inc
lahf
int
icebp
add
lret
aam
xor
sub
outsl
sahf
loopne
xlat
testl
jl
mov
jmp
fs
stos
aam
iret
xor
iret
sbb
aad
jmp
outsl
stc
bound
jg
mov
pop
gs
js
cwtl
je
mov
inc
out
fs
jne
adc
fdivs
xor
aam
push
inc
sar
dec
or
sti
xchg
pop
and
mov
mov
adc
xlat
mov
imul
mov
push
sbbl
jmp
imul
fs
cltd
fisubs
add
add
sbb
sbb
inc
sbb
enter
xchg
jns
jle
pop
adc
ja
lods
inc
cs
mov
sbb
sub
loopne
out
push
pushf
xor
cmp
int3
out
iret
arpl
cmp
mov
cmp
and
xor
imul
pusha
imul
xlat
idiv
jnp
pop
shrl
sar
aad
push
sbb
mov
xchg
xchg
push
adc
jge
sub
dec
rcll
cmp
fwait
mov
jg
insb
movsb
pop
aaa
sbb
adc
mov
imulb
pop
sbb
and
jecxz
icebp
push
fisubl
pop
cwtl
pop
jmp
insb
push
fimuls
xlat
pop
adc
push
shll
test
jle
pop
mov
xchg
jb
scas
and
and
rcr
or
popf
mov
sub
sbb
decl
push
sbb
rorb
sbb
inc
dec
sbb
pop
mov
mov
cmp
ret
lea
hlt
in
cld
fildll
mov
scas
sub
les
mov
push
sbb
ja
xchg
inc
sub
lea
cmc
cmpsb
insb
adc
sbb
ds
inc
adc
jmp
xchg
test
pop
cwtl
push
addr16
and
mov
or
std
pop
out
pusha
inc
into
sub
jle
sbb
shll
push
jbe
push
ss
rcll
mov
pop
dec
out
sar
int3
enter
mov
cmpl
mov
jno
or
jmp
js
jbe
in
inc
iret
or
pop
sub
mov
mov
xor
mov
xchg
enterw
sbb
stos
jbe
aas
xchg
insb
push
nop
data16
ss
jmp
ret
mov
add
fdivs
test
jnp
jl
cmpsb
stos
movsb
push
pop
fucom
mov
push
jno
mov
sub
mov
push
push
punpcklbw
lock
rcll
fisttpll
add
sbb
out
mov
sbb
outsl
popa
icebp
push
lds
mov
xor
mov
mov
ud1
enter
and
pop
sbb
or
data16
xor
mov
jle
jbe
fcompl
xchg
fs
ds
daa
jb
jl
adc
ret
cmp
cwtl
pop
jg
in
xor
out
mov
add
cmpsl
xchg
dec
movsl
xchg
aam
push
sbb
lds
pop
mov
mov
push
mov
sub
add
inc
jno
cmp
pop
inc
fidivs
mov
divl
out
pushf
dec
dec
in
mov
test
mov
lock
in
sahf
lods
sbb
pop
stos
push
jl
cwtl
mov
push
es
lahf
push
pop
enter
sub
push
loope
cmc
in
iret
leave
push
or
outsb
nop
xor
test
sbb
pop
lret
mov
scas
in
xchg
lret
and
cltd
jp
and
mov
pop
pop
push
into
sbb
fabs
mov
pop
fdivrs
mov
pushf
mov
popf
mov
dec
roll
pop
call
pushf
add
and
dec
cmp
mov
imul
cmp
lds
test
movsl
sub
mov
xor
mov
pop
loop
push
mov
jne
loopne
pop
push
mov
outsl
lods
movsb
daa
in
shll
push
adc
shll
push
insl
scas
or
shll
test
sbb
mov
inc
fwait
divl
jecxz
ret
aad
dec
cmp
sbbb
jle
jb
stos
jl
out
mov
pop
mov
mov
data16
add
mov
movsl
out
jnp
cmc
push
cmpsb
push
or
push
push
push
loope
ret
sbb
shll
and
or
pop
inc
pushf
fnstcw
sub
std
push
cwtl
and
push
or
sub
insl
sbb
pop
and
sub
lea
or
int3
outsl
sub
cmc
cmp
push
xor
mov
nop
cmp
adcl
push
xchg
stos
sbb
inc
clc
frstpm(287
popf
mov
sahf
sub
enter
test
int3
cmc
cmp
xchg
inc
pop
push
push
jae
jae
das
nop
jno
dec
ljmp
gs
popf
xchg
mov
push
xchg
fwait
or
iret
add
push
xor
vcvttsd2si
mov
push
cmc
pushf
icebp
and
lds
fldl
lods
xorl
jne
aaa
add
int
jmp
ret
jg
das
xchg
pop
adcb
rcl
push
push
pop
in
xchg
push
test
mov
cmp
pop
xor
aas
push
pop
pop
xchg
push
mov
inc
stos
fdivrl
cmp
daa
js
ds
lret
shlb
or
lcall
js
popf
mov
pop
cwtl
rol
push
lcall
and
int3
jbe
sub
add
push
inc
sar
mov
xor
in
adc
repz
sbb
and
xchg
xchg
pop
pop
add
jp
iret
mov
cmp
pop
or
push
and
add
dec
nop
push
dec
add
inc
mulps
lcall
fyl2x
dec
aad
inc
std
fisttpl
int3
nop
push
in
loopne
mov
icebp
orb
jae
sbb
in
insl
dec
mov
sub
mov
mov
ret
and
sbb
and
fsub
jno
push
inc
add
xchg
or
cmp
sub
xchg
pop
call
sbb
nop
mov
mov
andl
inc
into
fidivrs
push
mov
ret
out
jecxz
mov
paddq
and
cli
nop
jae
jae
xchg
popa
mov
notl
sub
in
and
push
inc
shlb
mov
jle
gs
dec
sub
xor
icebp
and
popf
arpl
dec
daa
aas
sub
xor
jmp
jge
xchg
fbstp
addr16
pop
pop
dec
adc
push
fcmovb
int
mov
or
pop
mov
push
out
xor
mov
subb
cmp
and
cltd
mov
sub
xchg
lods
pop
and
fst
cltd
and
fnstsw
and
loopne
pop
gs
xor
sti
stc
mov
scas
jbe
xchg
xchg
and
imul
mov
jmp
out
push
mov
insl
xchg
mov
cld
pop
push
push
insl
adc
fs
daa
and
inc
fdivs
dec
xchg
out
pop
mov
and
xchg
push
in
loop
fcmovnbe
sahf
add
add
cwtl
jb
ds
outsl
sarl
scas
pop
shrl
int3
jbe
std
aad
cld
mov
dec
lret
jns
clc
test
sub
sub
ret
xchg
sub
popa
divl
jle
xchg
and
xchg
xchg
ja
add
clc
push
sbb
xchg
cmp
test
mov
and
es
sbb
movups
mull
jbe
mov
loope
in
add
push
add
or
enter
movsb
ds
xchg
orl
pop
loope
inc
mov
test
and
jge
mov
loopne
inc
pop
dec
sub
hlt
jno
jmp
ss
test
sbb
inc
sub
scas
cmpl
test
and
push
roll
lods
je
pop
xchg
and
jg
add
add
xor
js
adc
das
xor
xchg
pop
xchg
std
pop
sbb
int
dec
into
cmpsb
jbe
fidivrs
adc
cs
imul
mov
jp
inc
mov
cmp
inc
dec
repnz
jp
cmp
add
loope
notl
testb
aaa
lods
dec
push
add
inc
inc
add
icebp
cmpsb
ljmp
inc
stos
fmuls
xor
mov
sub
ljmp
push
mov
stc
push
xchg
and
sbb
jb
sbb
fldt
jmp
mov
mov
testl
xchg
aas
dec
jp
sub
mov
sub
bound
sbb
mov
in
mov
push
out
pop
lret
push
mov
and
sti
xor
out
xchg
pop
enter
push
xor
cli
ljmp
adc
mov
int3
push
ja
addr16
stc
jmp
inc
cmp
pop
cwtl
dec
pop
xor
pushf
add
mov
push
cmp
dec
daa
testb
add
insl
inc
add
scas
adc
in
push
jo
mov
cmpsl
je
mov
pop
push
mov
test
mov
jno
in
pop
rorl
mov
cltd
or
in
out
cwtl
scas
or
xchg
add
out
pop
adc
mov
leave
out
or
cwtl
outsb
push
out
mov
add
outsb
inc
xchg
and
lods
popf
push
xlat
data16
jle
sub
call
mov
gs
out
daa
mov
scas
push
cld
hlt
and
inc
rclb
adc
repnz
shlb
jge
and
cmp
inc
xchg
mov
and
mov
in
int
xchg
jmp
jne
sbb
xchg
rclb
lea
stos
pop
cli
pop
imul
add
add
add
jo
or
orl
and
cmp
dec
push
or
push
mov
lcall
dec
imul
push
inc
call
sti
cli
sub
push
adc
push
jecxz
jmp
add
cs
into
loope
pop
sub
adc
imul
sbb
imul
cmp
sti
inc
movsb
ret
add
push
and
sbb
dec
xor
pusha
mov
dec
notb
cld
push
sbb
add
mov
cmpsb
fdivl
mov
cmp
sub
in
mov
insb
jecxz
push
arpl
jno
sub
cmpsl
pop
ss
fld
mov
xor
inc
jle
out
mov
sbb
sbb
mov
sahf
mov
xchg
icebp
or
xor
loopne
jp
mov
push
stos
pop
jg
cmpsl
cld
dec
jne
cmp
movsb
pushf
cmp
ss
jmp
push
mov
mov
fsubr
addr16
sub
push
hlt
pushl
orl
clc
inc
inc
and
xchg
lods
push
and
ficoml
cmp
sub
pop
sub
sbbb
sbb
and
cmp
xor
inc
xchg
push
jne
pop
mov
mov
std
or
test
fsts
enter
and
lret
adc
repnz
std
xchg
mov
mov
add
xchg
pop
jecxz
cltd
js
jmp
jg
ret
sti
cmp
ss
add
xor
ret
inc
aaa
aaa
xchg
add
stos
pop
adc
dec
add
dec
test
or
and
dec
es
cs
cmp
push
add
test
jmp
loopne
out
frstor
inc
lods
movsb
mov
inc
in
out
cmp
xchg
pop
cs
rolb
shrl
fwait
mov
mov
mov
xor
scas
incl
out
dec
in
icebp
or
dec
out
loope
aad
divl
sti
pushf
es
fwait
mov
push
jle
mov
fdivp
push
pop
fsub
fsubs
shll
fwait
inc
jbe
add
jae
lahf
int
sbb
js
or
cmp
sub
mov
dec
pop
add
out
xor
and
or
sahf
out
out
dec
je
push
pop
jle
xchg
mov
mov
fistpll
inc
push
mov
int3
stos
scas
push
mov
cmp
cltd
xchg
mov
adc
ret
or
ss
add
or
loope
cmp
add
or
add
mov
dec
sbb
ja
imul
or
out
rorb
sub
add
fwait
jp
sub
imul
in
xchg
lahf
js
pop
jnp
jge
xor
jge
xor
mov
sbb
scas
std
xchg
in
push
xchg
or
ds
push
cmc
cltd
jnp
flds
imull
mov
mov
jmp
js
cs
jle
inc
xchg
mov
icebp
xor
aad
push
xchg
int
mov
dec
dec
dec
pop
and
xchg
add
add
push
pop
dec
shlb
daa
hlt
xor
fdivr
ljmp
pop
ljmp
jb
aaa
outsl
cli
push
fadds
sbb
call
adc
pop
mov
ret
dec
pop
and
push
xchg
mov
loopne
test
ljmp
lods
xor
in
nop
imul
int
leave
xor
mov
rcrl
lcall
aaa
xchg
jbe
dec
add
mov
xchg
pop
mov
sbbl
iret
int3
sub
pop
cwtl
mov
gs
aaa
inc
mov
or
push
out
xchg
cmp
sbb
mov
arpl
adc
adc
sbb
nop
push
insl
xchg
mov
int
in
outsl
sub
mov
pop
xor
stos
imul
push
cld
leave
sbb
push
into
adcl
repnz
sbb
mov
and
sti
in
aas
or
cmp
inc
jne
stos
mov
std
jp
leave
lock
push
xchg
cmc
jmp
lock
inc
adc
jb
jne
mov
lret
and
mov
xor
add
mov
jne
or
mov
cmp
fs
push
pushf
pusha
jmp
mov
mov
pop
mov
ffreep
popa
push
rolb
dec
out
fwait
out
and
cmp
pop
cmpsb
sub
add
sbb
cwtl
addr16
lcall
int
or
loop
sahf
stc
out
repz
imul
movl
ljmp
shrb
lds
pop
jno
shl
and
mov
imul
dec
sub
stos
iret
lea
cmp
mov
lods
add
mov
push
popf
xor
mov
jbe
loope
ds
repnz
push
jbe
sub
jbe
add
xor
rorl
pop
into
outsl
xor
mov
mov
xchg
xchg
hlt
xor
aaa
xchg
pop
js
lods
into
lods
dec
pop
mov
push
js
ja
mov
and
insb
jmp
out
or
pusha
sti
and
mov
mov
xchg
inc
pop
adc
insb
inc
lds
outsl
cmp
fwait
xchg
or
and
cmp
xchg
add
jge
inc
sti
mov
ss
and
pop
outsb
adc
cwtl
int3
fidivrl
lcall
in
enter
dec
addl
dec
jae
mov
adc
sub
or
jmp
mov
outsb
cli
mov
push
mov
sti
rcrl
movb
xchg
push
clc
xchg
sub
ss
sub
popf
or
fisttps
push
repz
fldcw
push
aaa
lock
dec
push
int
popa
pop
mov
rcr
outsb
ds
shlb
adc
lea
imul
cmp
mov
icebp
aaa
popa
add
jg
fsubrl
push
sbb
or
cld
lods
stos
bound
pop
negb
and
push
mov
fcmovbe
mov
mov
dec
js
pop
xlat
mov
cmpsb
push
call
xchg
cmc
jg
in
xchg
xchg
cmpsb
inc
sbb
jno
repnz
mov
cmp
js
roll
cmpsl
or
sub
add
pop
push
repz
inc
mov
mov
outsb
push
lret
jecxz
xchg
test
ror
adc
dec
cmpps
inc
adc
lods
xchg
je
cmpsb
dec
adc
cli
rorb
cs
loope
mov
mov
mov
gs
fnstsw
pop
push
in
adc
lea
and
js
or
push
pop
cwtl
xor
and
xchg
mov
mov
and
pop
push
xchg
fisubs
cmpsl
aas
mov
sub
push
xor
test
xor
movsl
fcmovnu
xchg
mov
dec
lods
adc
lahf
or
cmp
data16
das
outsb
sbbl
cmp
into
sub
jcxz
jmp
sbb
jl
imul
int
aam
cwtl
pusha
inc
xchg
je
mov
psubusb
movsb
pop
test
add
fs
fildl
inc
jne
mov
cmc
rorb
xor
jp
mov
nop
rolb
stos
jne
add
lds
lret
pop
repz
ret
dec
int3
lock
int3
mov
sbb
lock
xchg
jecxz
inc
and
aas
mov
push
loop
stos
loopne
xchg
pop
dec
jns
or
fistps
fwait
lahf
add
test
inc
ljmp
jmp
push
and
jno
jae
sbb
inc
pusha
loop
call
push
rcrb
xchg
cli
mov
movsb
jmp
adc
fxch
sbb
and
xor
xor
les
gs
mov
mov
notl
dec
mov
xchg
ljmp
or
das
test
test
push
add
xchg
lahf
cmp
dec
insb
dec
push
mov
test
insl
mull
inc
xlat
xchg
mov
and
cmp
sbb
push
rol
pop
push
dec
pop
mov
mov
push
xor
xor
mov
lea
rcrb
cmp
inc
mov
js
push
xchg
pop
sub
or
add
cmpsb
sbb
loope
adc
jnp
cltd
cmp
fstl
fdivrs
xor
ljmp
ljmp
xchg
add
std
es
xor
jg
adc
arpl
mov
jp
out
xchg
aam
insb
add
sbb
xor
sbb
clc
into
lods
push
xchg
cmp
lods
repz
fcompl
xchg
aam
mov
rcr
lret
in
push
aam
and
add
pop
sarl
cmp
cmp
fidivrl
mov
dec
mov
lods
adc
mov
ja
int3
xor
stos
cmp
cmp
cmp
sub
rolb
mov
sbb
cli
xor
jg
mov
loope
and
pop
test
xchg
dec
pop
and
out
std
push
arpl
hlt
cli
cmp
pop
cld
aaa
xchg
adc
lahf
pop
fs
insb
stos
out
pop
aad
cmp
leave
ds
and
ss
push
pop
inc
mov
imul
and
xchg
ror
gs
or
pop
mov
ret
pop
shr
push
std
dec
fists
mov
insb
scas
pop
add
aas
mov
and
js
push
xchg
idiv
lcall
int3
inc
mov
fnstenv
addr16
xlat
ret
xor
mov
test
sub
lret
mov
fadd
mov
sahf
pop
loop
subl
in
loop
inc
lcall
mov
lods
int
dec
sbb
mov
push
sbb
out
xor
hlt
stos
dec
test
data16
mov
scas
arpl
cs
push
lcall
movsb
inc
dec
ja
sarl
push
popf
mov
int3
dec
jp
mov
dec
inc
mov
mov
xor
push
into
add
mov
jle
inc
push
jle
popa
mov
inc
push
add
ficomps
pop
lods
rcll
xor
sbb
out
sbb
cmpsl
into
cmp
out
xchg
fcmovnu
daa
nop
pop
test
inc
sbb
jl
jl
les
out
jmp
or
push
mov
scas
add
leave
es
nop
sub
shr
jecxz
aaa
dec
imul
into
arpl
dec
repz
adc
dec
jle
inc
leave
das
mov
lldt
cli
loopne
aad
push
cmp
adc
out
rcl
dec
cmp
inc
pusha
sbb
cmp
and
lock
adc
movsl
xor
jb
iret
or
xlat
imul
das
repz
sub
pop
jbe
fyl2x
and
push
je
sahf
mov
aas
imul
pop
loopne
mov
jne
movsl
movsb
out
ja
loope
clc
arpl
enter
pushf
out
daa
pushf
sub
stos
sub
inc
aam
sbb
cmovb
mov
ja
and
sbb
daa
lcall
push
pushf
cltd
push
mov
push
cmc
mov
cltd
xchg
add
fwait
mov
cli
cmp
pop
or
cmp
or
xchg
jns
jl
loop
arpl
scas
stc
bound
ret
lret
mov
in
test
int3
xchg
js
f2xm1
push
pop
aam
cmp
xchg
sbb
out
jb
cmp
popa
mov
popf
mov
lock
icebp
adc
cli
shr
jno
cmp
ja
mov
cli
lea
jle
stos
and
scas
shrb
mov
push
mov
fs
mov
out
cmpsl
jb
out
lods
dec
adc
or
filds
add
jmp
mov
aaa
fcompl
fcmove
lods
out
mov
std
sub
test
rcl
pop
aaa
je
pushf
out
les
and
jl
aad
test
scas
dec
ss
inc
jmp
cmpsb
jmp
leave
cmp
lods
in
jo
push
push
out
lods
jg
cld
lods
cmp
add
mov
inc
lcall
push
xchg
loop
adc
mov
pushf
stos
fstpt
mov
mov
sub
int
imul
pushf
jnp
into
outsl
lahf
adc
in
push
dec
div
xchg
xchg
add
and
push
fstps
arpl
cltd
push
daa
jae
dec
xchg
cmc
dec
push
add
bound
lcall
mov
insl
sbb
push
jmp
pop
dec
cmp
movsl
add
jmp
cmp
mov
outsb
sarl
sub
jle
add
jle
ja
ds
cmp
out
das
outsl
or
add
lds
or
test
jbe
xlat
inc
scas
out
call
add
and
lea
mov
int
ret
xor
adc
insb
in
shrl
hlt
jl
imul
les
cmpsl
cmpsl
pop
imul
xor
cmpsb
lock
aad
mov
call
jb
dec
sub
mov
testl
rcll
sbb
jmp
xchg
push
pop
dec
shr
sub
push
push
dec
orb
mov
pop
shlb
leave
mov
mov
or
div
dec
cmp
lahf
mov
ret
out
fisttps
frstor
push
mov
lret
repnz
xchg
addb
enter
clc
pop
mov
aas
outsl
out
jns
and
roll
adc
arpl
lahf
xor
sub
jg
out
xchg
inc
xor
mov
clc
add
shr
mov
jle
out
push
push
stos
bound
mov
lret
mov
cli
mov
mov
jnp
lods
push
fisubrs
fidivrs
fwait
or
pushl
jmp
mov
xchg
in
packssdw
jno
adc
sub
dec
adc
test
sub
lea
adc
or
lret
push
popa
inc
pop
push
fiaddl
and
paddd
repnz
stc
jnp
shll
addr16
dec
and
in
mov
repnz
jmp
shll
or
mov
cld
lahf
cmpb
cli
and
popf
or
int
jecxz
and
mov
aas
jae
rcrb
rorb
enter
cs
outsl
push
jnp
fimuls
in
js
js
scas
xor
mov
inc
jle
xor
xchg
sub
jg
idivb
in
lds
loopne
pusha
popf
ja
xchg
loope
mov
test
or
pop
pop
xor
mull
pushfw
mov
dec
pushf
sub
insb
outsl
pop
ljmp
pop
mov
xchg
repz
sub
sbb
jnp
push
sbb
adc
adc
imul
and
sub
dec
dec
and
rorb
shlb
add
xchg
adc
aaa
daa
jnp
mov
jno
mov
and
mov
and
inc
mov
in
repz
cli
push
iret
popf
mov
jo
cld
mov
daa
jmp
lds
movl
iret
and
jmp
js
fstpt
mov
and
mov
mov
stc
pop
pop
lods
pop
bound
hlt
cmp
fstl
aad
sbb
in
fiadds
jbe
sbbl
dec
sbb
xor
nop
sbb
cmp
inc
mov
sbb
or
insl
and
mov
sbb
push
mov
addr16
add
repz
rorl
mov
fstpl
in
cld
bswap
adc
bound
xor
mov
insl
out
fsubrp
dec
xchg
lcall
sbb
jns
sub
mov
or
adc
xchg
adc
and
mov
or
mulb
lret
add
mov
rcr
jne
pop
adc
xlat
jno
rcl
mov
or
lea
jb
xchg
scas
mov
jbe
mov
pop
shrl
mov
mov
or
and
sbb
mov
push
add
cmp
aas
jno
jge
rolb
jne
clc
test
and
mov
jl
call
icebp
dec
bound
xor
outsl
push
jo
add
loopne
pop
dec
addr16
lahf
dec
mov
adc
xor
fwait
aaa
imul
subl
cs
popa
xchg
das
add
pop
mov
push
adc
adc
cltd
sbbl
jmp
cltd
cld
shl
mov
cmp
and
xchg
outsl
xchg
add
sbb
clc
inc
popa
xor
add
lahf
arpl
jmp
scas
loop
push
mov
xor
adc
sub
push
imul
scas
lods
mov
cmp
jmp
mov
cmpb
lret
outsb
loope
pusha
popa
jnp
mov
inc
cld
rcrl
inc
add
mov
mov
test
add
push
in
fsubr
pop
sub
and
dec
adc
lret
push
adc
les
jg
mov
mov
add
mov
int
dec
jns
addr16
xchg
mov
jb
call
shlb
cmc
nop
enter
in
cwtl
jecxz
jb
loope
jmp
adc
or
push
rcrb
cmp
in
popf
loopne
cmp
jecxz
push
push
jnp
in
xchg
xchg
xor
push
popf
pop
sarb
pop
stc
push
mov
cmpsl
pop
sub
lea
popf
pop
movsl
out
pop
cmp
jne
ja
mov
add
lret
mov
sbb
mov
cmp
adc
push
pusha
mov
push
adc
adc
call
ds
jns
and
scas
outsl
fabs
xchg
xorb
loope
fsubr
pop
into
std
mov
sbb
inc
mov
repz
fdivl
ret
cltd
push
mov
push
mov
cmpsl
inc
jno
adc
xor
dec
adc
jl
mov
cli
lds
push
push
xor
cs
push
repz
jbe
imul
out
mov
dec
in
push
insl
rorl
pop
repnz
sbb
imul
or
adc
in
loope
jnp
test
fs
and
nop
outsl
in
fdivs
mov
cmc
sub
nop
in
cmp
lea
ja
fwait
and
adc
push
movsl
les
shl
add
sbb
xor
pop
pop
sbbl
out
popf
inc
addr16
orl
mov
movsl
xor
or
cltd
imull
pop
test
bound
or
mov
test
stos
jbe
sbb
cmp
adc
cmp
jne
mov
cmp
mov
adc
pushf
cmpl
das
ljmp
sub
mov
push
pop
movsb
les
ja
mov
xchg
sub
mov
xor
shl
je
mov
xor
adc
shrl
out
in
into
mov
jecxz
xchg
dec
mov
mov
pop
dec
sbb
mov
loope
dec
inc
adc
or
test
xchg
psubusb
jmp
and
adcb
lock
inc
sbb
ljmp
xchg
adc
shlb
sub
and
cmpsl
lock
push
mov
loopne
add
ficoms
out
imul
cmpl
stc
out
mov
or
andl
push
and
in
pop
mov
cltd
jmp
es
cld
js
sub
mov
mov
push
and
sbb
mov
pusha
and
pop
in
jne
insb
pop
adc
cld
mov
clc
inc
lea
dec
into
lcall
stos
jle
daa
imul
push
es
lcall
inc
add
xor
repz
dec
cld
inc
enter
out
cltd
fstp
aam
pop
push
shll
out
inc
lret
movl
jno
inc
jae
adc
add
push
cmc
les
cli
sub
enter
pop
and
xor
jl
and
adc
pushf
pop
ror
sub
mov
xchg
fiadds
cld
add
xchg
cltd
push
inc
test
dec
lock
das
cmp
sbb
int3
lahf
mov
xlat
jge
fimuls
in
add
loope
arpl
jnp
test
fiadds
xchg
or
pop
pop
in
jae
cmpl
jo
push
jg
inc
and
leave
mov
jae
in
add
lock
lret
or
xlat
inc
xchg
push
les
jl
rcrl
lcall
stos
fdivs
push
adc
negl
add
xorl
or
sbb
mov
das
xchg
or
adc
xchg
add
adc
sbb
push
cmpsl
ret
push
ret
mov
jg
push
xor
popf
js
mov
pushl
scas
push
ds
pushf
lret
inc
sub
je
jl
push
clc
ret
aad
ret
popa
sti
mov
cmpsb
push
or
push
std
jecxz
aam
aad
subl
hlt
mov
arpl
stos
prefetch
or
mov
fwait
pop
or
aas
cld
out
rolb
inc
hlt
or
scas
faddl
cmpsb
sub
or
les
mov
cmp
mov
rcrl
mov
movsl
inc
popa
ss
icebp
cwtl
sarl
sbb
popa
bnd
jecxz
loop
inc
cmpsb
dec
dec
outsb
loop
fwait
and
pop
sbb
nop
subb
frstpm(287
aas
push
push
push
inc
loopne
mov
mov
jae
or
test
fs
push
cli
adc
movsb
inc
popf
sub
mov
and
subb
cmp
sbb
cmc
inc
and
mov
mov
xchg
lret
mov
cmp
fbld
cld
add
dec
cltd
xchg
and
roll
adc
sbb
adc
jmp
dec
lret
xlat
in
sub
push
stos
pop
dec
sti
jo
adc
in
push
pusha
mov
or
jae
xor
out
lods
fidivl
enter
mov
in
mov
xchg
xor
mull
fnstsw
xor
insl
lea
mov
add
cmp
andl
idivl
in
jl
inc
icebp
jns
xchg
and
jno
push
movb
dec
jne
into
mov
mov
mov
aam
mov
pop
out
nop
lret
pop
nop
jge
add
jmp
jecxz
sub
sbb
pop
jecxz
pusha
mov
mov
bound
popf
cld
cmp
or
adc
outsl
repnz
ds
or
mov
mov
mov
and
loope
int
or
push
cmp
das
mov
xchg
pop
cmp
cmp
shrb
jl
pop
and
mov
xchg
or
pop
aas
repz
add
sti
xchg
xchg
shlb
outsl
pop
fmulp
dec
sbb
repnz
icebp
xorb
sti
sbb
fsubl
popa
bound
sbb
or
ret
jp
pop
and
mov
push
pop
addr16
in
push
adc
jno
dec
cmp
fcmove
xchg
cmpl
and
xor
fwait
cs
cmp
clc
pushf
rorl
pop
mov
ljmp
sti
push
movsb
data16
sbb
jo
ja
add
dec
xlat
jne
jge
push
scas
arpl
mov
fcoms
pop
or
sub
mov
sbb
outsl
mov
rolb
xor
push
dec
popf
lea
xchg
and
cmc
imul
and
add
shll
mov
add
pop
xor
daa
in
aad
xchg
xchg
repnz
inc
sub
mov
popf
lds
mov
xor
or
pop
notb
rcpps
es
out
inc
jmp
dec
xchg
aam
loopne
sub
mov
loope
jo
in
mov
flds
mov
jnp
and
mov
sub
stc
inc
in
fnsave
cmp
mov
mov
fsubrl
lock
or
iret
sbb
cmc
in
ds
mov
push
fidivl
mov
or
aas
add
lock
add
js
shrd
cmp
test
movsl
enter
js
xchg
les
pop
jo
pop
in
push
jo
jecxz
incb
das
int
jmp
push
shlb
push
or
sub
add
jno
jne
push
into
iret
mov
mov
xchg
addb
xchg
pop
mov
jle
jmp
mov
or
dec
lods
mov
loope
xchg
pop
mov
inc
lahf
jns
jo
cmc
jbe
subb
push
test
sub
insb
bound
mov
and
and
pop
xor
out
sbb
or
xchg
mov
es
sub
mov
popa
inc
jmp
push
ljmp
stos
repz
inc
push
cmp
popa
stos
lea
inc
mov
xor
cmp
fldt
inc
jecxz
test
jb
cmpsl
xor
icebp
and
add
jnp
fisubs
lods
mov
jns
or
or
push
inc
nop
js
push
cmpb
and
les
lcall
int3
inc
adc
pop
sahf
push
or
pop
aad
insb
aas
stos
mov
cwtl
fcmovnbe
loopne
adc
mov
push
hlt
rclb
fcmovnu
cli
lea
ret
pop
pusha
js
jmp
imul
fsqrt
inc
cs
leave
or
es
jae
clc
mov
xchg
jle
push
mov
repz
mov
inc
push
jo
rorb
scas
scas
or
sti
sub
fstpl
fwait
add
je
pop
clc
cltd
cmp
shll
stc
xor
cmp
sub
in
lods
and
clc
icebp
mov
cmpsl
sbb
mov
sti
test
push
jmp
in
nop
data16
lcall
lret
add
cmp
xlat
dec
xor
call
adc
xchg
jbe
iret
cltd
sub
popf
fisubrs
inc
pop
add
dec
and
sbb
test
pop
fwait
sbb
fwait
xchg
or
cmp
push
mov
fists
lods
inc
std
sub
push
fadd
sahf
pop
mov
subl
mov
or
pushf
jae
dec
inc
ss
add
js
ret
cmpl
ficompl
rcrb
push
xor
sbb
popa
mov
and
dec
jle
jo
jno
push
mov
dec
adc
loopw
push
cld
push
int3
cmp
xlat
cwtl
aad
mov
pop
xchg
jae
push
incb
xchg
aad
fdivp
aad
fcomps
jmp
mov
pushf
fsubr
into
push
fs
cli
cmp
lret
pusha
dec
sub
xor
lcall
call
cld
mov
pop
push
aas
push
repnz
sbb
add
jno
stc
and
mov
dec
lahf
inc
sub
sbb
shrd
push
fwait
xchg
push
add
mov
or
xchg
adc
mov
je
lcall
push
sub
push
xchg
dec
and
jle
mov
mov
in
orl
adc
mov
dec
loopne
mull
lahf
pushf
pop
xor
cltd
mov
mov
icebp
jg
mov
in
inc
xor
push
repnz
and
xor
bound
int
add
outsl
mov
imul
sbb
jb
stos
xchg
repz
dec
in
lcall
pop
pop
pushl
pushf
out
lods
sub
int3
pop
jge
mov
mov
test
fwait
dec
notl
cwtl
pushf
or
cmp
cmpb
lock
mov
cmp
and
pop
xor
in
mov
sbb
scas
in
sub
out
mov
dec
es
les
mov
mov
fdiv
popf
mov
inc
push
shll
push
xchg
mov
sbb
test
stos
xchg
adc
imul
and
test
leave
popa
lods
jg
fildll
fs
jecxz
fnstenv
push
jns
pop
sub
add
or
xchg
loopne
ret
test
xlat
push
jne
dec
fwait
push
mov
ja
cli
xor
not
cltd
lcall
sub
movb
lea
push
mov
fisttpl
test
nop
dec
fnstenv
imul
mov
add
into
inc
jmp
bound
divl
cmp
push
push
out
test
xor
push
add
stos
dec
xchg
mov
dec
loope
add
sub
dec
orl
and
popa
outsb
inc
sbb
bound
xchg
sbb
in
shrl
psrad
adc
push
fistl
fadds
ret
cmp
in
mov
mov
imul
stos
jne
cld
insl
adc
mov
mov
test
xchg
neg
inc
rcrl
mov
sub
mov
nop
push
adc
mov
mov
xchg
xchg
pushf
lods
jmp
cmp
fimull
scas
mov
repz
lret
push
inc
mov
insb
pop
xchg
aam
sbb
jle
sbb
mov
xor
mov
and
pop
addb
jbe
out
push
mov
mov
cmp
test
cmp
sbb
or
fildll
out
pop
subl
jle
mov
mov
fnsave
cltd
shrl
mov
ficomps
adc
sub
arpl
idivb
inc
loopne
cmp
mov
dec
imul
inc
sbb
cmp
cmp
lock
adc
lods
adc
pop
aaa
cmp
and
dec
push
adc
leave
nop
push
dec
mov
sub
cmp
mov
out
cld
mov
cmpb
js
bound
insl
lcall
push
mov
call
sub
divb
mov
inc
leave
xchg
rcrb
inc
or
push
cs
push
mov
mov
mov
repnz
fst
adc
popa
sub
sbb
jge
clc
mov
fisttpll
aam
mov
cmpsb
popa
pop
popf
inc
lods
adc
mov
int
hlt
sub
cltd
pop
fnstsw
mov
int3
fs
push
iret
fsubr
aas
cmpsl
adc
sub
add
je
push
imul
stos
adc
ja
fadd
and
jecxz
mov
aaa
pushf
xor
adcl
arpl
loopne
adc
divb
leave
mov
push
adc
jb
jp
sbb
pop
mov
xor
insl
adc
jbe
lods
fs
xor
popa
iret
xor
repz
jecxz
and
xchg
cmp
push
fs
pop
xchg
adc
shr
cmp
aas
mov
jg
fidivs
sbb
mov
in
mov
push
push
inc
fldcw
cmp
in
dec
xor
pop
adc
inc
test
or
mov
mov
arpl
sub
cmp
mov
call
fwait
adc
gs
bound
and
dec
adc
sbb
xor
xor
in
or
jp
or
jmp
ljmp
insl
xchg
sbb
aad
cs
adc
lea
inc
lcall
daa
jo
lret
jg
sub
pop
out
jmp
pop
push
jnp
gs
dec
sbb
pushl
lds
dec
decb
add
xchg
xlat
or
les
lea
inc
fldl
clc
fbld
and
movsl
dec
sub
sbbb
jl
mov
push
xchg
push
jae
das
out
dec
add
inc
mov
lahf
mov
test
mov
lret
mov
xchg
sbb
outsl
das
fistpl
sbbl
jecxz
and
adc
xchg
sti
xchg
cmpsb
aas
js
push
loop
cltd
add
and
jnp
lods
aas
icebp
mov
lods
pop
xlat
sub
out
adc
iret
jge
sbbl
sahf
hlt
ficoms
mov
incb
out
lahf
jg
mov
je
sbb
lahf
jbe
sbbl
ja
insb
pop
ljmp
stos
push
xchg
xchg
bound
xchg
frstor
pop
aaa
inc
xchg
mov
sub
dec
and
cmp
ja
scas
aas
sbb
mov
std
sub
or
sbb
lods
and
sbb
mov
xlat
sbb
cmpsb
sahf
and
cmp
mov
add
mov
push
loope
mov
dec
and
xchg
mov
dec
fwait
or
popf
mov
stos
hlt
inc
bound
jl
sbb
push
dec
stc
xor
cwtl
in
int
sbbl
sbb
add
push
lcall
ss
leave
or
inc
jae
sar
dec
out
push
inc
das
jg
movsb
or
and
xor
iret
push
pop
fimuls
sbb
mov
sub
sub
push
rolb
shrl
aam
jo
or
pop
ljmp
xchg
cltd
movsb
cli
popa
movsb
jbe
xorb
sti
aaa
jns
mov
frstor
les
jp
insb
jle
lods
mov
sub
jbe
in
adcb
sbb
pop
cwtl
dec
test
imul
lcall
or
inc
mov
mov
sbb
loop
in
test
push
sub
pop
mov
cltd
daa
loope
inc
je
aad
lcall
adc
mov
jno
mov
mov
sub
cld
jne
imul
or
mov
xor
jp
dec
dec
repz
mov
nop
jne
cltd
dec
sub
mov
mov
mov
outsb
enter
outsb
aad
mov
icebp
lods
mov
push
push
mov
mov
sub
test
xor
jp
int3
jo
xor
ljmp
mov
out
lods
pop
shlb
push
dec
subb
push
lods
dec
jl
jmp
gs
inc
push
imul
xchg
jle
inc
xchg
fiadds
sub
push
out
jmp
pushf
add
xor
movl
xor
sbb
mov
xor
mov
lahf
push
fbstp
scas
and
subb
dec
inc
movsb
in
and
imul
xor
aaa
mov
inc
cmpsl
into
inc
out
divl
stc
dec
adc
inc
xlat
je
jo
enter
fistl
call
inc
lea
adc
and
test
or
mov
repnz
sbb
imul
push
loope
cmpsb
and
aaa
jecxz
aaa
add
fldenv
pop
ret
fcompl
inc
insb
mov
and
xor
por
xchg
pushw
or
mov
lods
push
out
lahf
mov
adc
mov
enter
and
cmpsb
cmp
hlt
and
xchg
fwait
lahf
add
jecxz
mov
sbb
pop
data16
pop
sub
sbb
jne
sahf
sbb
outsl
jecxz
add
mov
lods
pop
outsb
xorb
inc
inc
push
rorb
in
js
out
xor
inc
or
dec
xchg
push
cmc
dec
cmp
dec
pop
sbb
push
mov
or
imul
inc
dec
sub
lret
mov
inc
mov
mov
jns
jo
push
nop
cmp
repz
movsb
jbe
lods
scas
hlt
add
pushf
push
loop
sub
leave
add
add
cmp
adc
adc
mov
mov
push
sbb
daa
movsb
mov
mov
inc
fs
xchg
xchg
in
outsl
dec
inc
jno
cmpsl
test
mov
and
in
jae
push
dec
int3
push
inc
push
jp
lret
cmc
add
pop
lahf
addb
mov
in
jp
cmp
jbe
repnz
jge
and
lret
ficoms
test
or
mov
push
repnz
pop
push
fsubr
add
adc
fisubrl
jg
jge
lcall
subl
test
add
call
jne
sbb
dec
push
inc
xchg
dec
out
lea
sbb
je
rcll
jl
mov
pop
mov
mov
push
pop
and
fidivl
add
inc
mov
scas
dec
pop
jge
out
int3
popf
xlat
pop
hlt
ljmp
xchg
jmp
mov
lock
pop
movsb
leavew
icebp
cwtl
push
imul
add
les
rclb
add
loopne
mov
sbb
pop
jle
pop
pop
repnz
jo
xor
inc
shlb
in
imul
jg
test
push
mov
mov
imul
mov
ret
pushf
pop
cmpb
insb
add
push
sub
and
push
mov
mov
inc
ret
stos
sub
leave
xor
stc
mov
fisttpl
shrl
lock
mov
inc
add
fwait
mov
push
dec
enter
es
jae
insl
test
ret
test
or
aad
cmp
testl
jo
jge
arpl
sti
or
dec
dec
jnp
cmpsb
mov
jne
inc
push
ss
dec
mov
loop
imul
cmp
sub
dec
push
inc
shlb
cmp
sbb
stos
test
add
divl
aam
push
sahf
sub
or
ss
inc
jns
sub
std
jae
inc
pop
cltd
dec
sbb
jbe
inc
jl
add
and
js
into
jp
sbb
jbe
scas
fwait
push
cli
mov
repnz
rcl
mov
xchg
xchg
sti
je
es
push
mov
pop
mov
mov
jbe
add
in
or
test
mov
cmc
pop
push
sub
pusha
push
lcall
fucomi
xchg
mov
add
mov
lea
out
mov
push
xlat
inc
xor
adc
daa
mov
std
sbb
insl
jp
mov
imul
mov
adc
outsb
adc
cwtl
mov
add
mov
inc
enter
xchg
push
ret
mov
inc
imul
add
cwtl
cmp
je
movb
xor
inc
cmpsb
pop
aas
mov
sbb
dec
call
mov
mov
xchg
sub
push
mov
cmc
mov
and
or
clc
es
cmp
shlb
cmp
lods
leave
mov
fcomi
cmp
in
pop
sbb
out
aad
mov
and
inc
imul
in
in
ret
mov
shll
sub
sbb
aad
aad
xor
stos
idivl
ss
loopne
xor
pop
scas
sbb
xchg
je
jb,pn
sahf
aas
xchg
cmp
aas
pop
loopne
pop
mov
mov
loopne
fcmove
stos
xor
inc
imul
pusha
mov
daa
pushf
jae
xchg
mov
jle
daa
test
cmp
jbe
add
inc
cmpsl
das
add
das
mov
call
lods
mov
testb
xlat
inc
ljmp
push
mov
jnp
jne
push
sub
hlt
out
jmp
mov
xchg
shll
sbb
cmpsb
mov
test
fdivl
mov
mov
and
rorl
or
testb
xorl
push
fcompl
sbb
and
dec
or
test
std
das
loop
dec
aas
push
add
push
ljmp
in
pop
repz
decb
int3
stos
jmp
pop
rol
fmuls
mov
stos
mov
mov
dec
xorl
mov
adc
gs
pop
test
inc
popa
mov
push
push
mov
pop
rorl
in
push
js
xchg
dec
cmp
nop
test
cmp
dec
cld
xchg
jl
dec
jg
mov
cmp
add
mov
cmp
xchg
ss
fcoml
outsl
pop
mov
pop
pop
fdivrl
out
pop
pop
cmpsl
test
push
lods
mov
es
insl
das
loope
or
in
fists
add
test
jmp
orps
cmp
call
lods
pop
cmp
inc
dec
push
insl
lods
pop
push
lea
cmc
mov
fisubrs
lods
iret
shrb
fbld
xlat
mov
sub
fcmovne
ret
shll
lock
dec
dec
xchg
pusha
jbe
jg
scas
sbb
sbb
xchg
dec
mov
fmuls
mov
push
loopne
test
fisubrl
xor
and
mov
fcoms
mov
lock
push
sbb
aas
cld
and
xchg
mov
filds
mov
and
xchg
stos
jmp
push
sti
push
cmp
pop
decl
xchg
jbe
xor
test
xor
cmpsb
jmp
mov
xchg
and
jne
add
push
mov
jnp
pop
aam
outsb
push
scas
iret
jmp
data16
add
stos
ret
filds
sbb
dec
jae
mov
push
pop
xor
jno
xchg
or
add
mov
aam
dec
cmp
cmp
fwait
push
fdivl
jecxz
mov
cld
and
bound
ja
iret
rcrl
jno
outsb
mov
jae
and
and
or
xchg
sahf
jae
add
pop
push
ret
and
mov
xchg
pusha
rcrb
jmp
fsubp
les
insl
mov
sub
sbb
inc
adc
pop
cmpsl
sbb
dec
cmp
repz
pop
ljmp
pop
mov
insl
mov
inc
mov
lret
xchg
xchg
adc
or
cmp
nop
xchg
and
into
out
or
sbb
push
inc
mov
ret
orl
cld
in
gs
add
xor
test
int
xchg
out
adc
mov
inc
mov
sbb
imul
sub
or
xor
cmp
movsb
sarb
xchg
dec
jmp
lock
xlat
loop
lret
jne
iret
sbb
lods
lock
repnz
mov
ljmp
mov
mov
mov
xchg
push
stos
movsb
inc
dec
dec
or
add
fs
nop
insl
inc
insb
push
sti
mov
shr
mov
mov
lret
ss
shrl
lcall
mov
cmpsl
and
std
pop
pop
leave
cltd
sti
stos
add
cwtl
cmc
outsl
add
lahf
repnz
decl
pop
mov
shrl
xchg
cmp
sbb
mov
roll
push
cmp
shll
mov
out
mov
mov
pop
in
out
mov
roll
push
es
jne
shrl
in
mov
push
mov
movsl
pop
or
std
jecxz
sub
sbb
cmc
push
push
jns
push
aad
xor
jecxz
xchg
inc
and
pusha
lcall
daa
ret
movsb
fnsave
jo
in
sub
loope
jns
cwtl
inc
xor
or
push
dec
xlat
test
push
push
dec
sub
cli
aaa
jl
popf
shrl
es
aad
adc
or
imul
jp
aas
pop
mov
push
dec
js
mov
lea
cld
and
dec
sbb
dec
testb
sub
adc
movsl
xchg
rorl
fbld
movsb
lds
push
push
jbe
xor
dec
ljmp
cmp
in
jno
adc
pop
ds
mov
js
ljmp
imulb
cmp
das
in
ja
or
inc
cli
icebp
sub
lea
or
push
jmp
push
adc
xchg
es
fsubrs
mov
jno
dec
xchg
je
inc
dec
and
scas
roll
pop
pusha
add
push
add
mov
shr
addr16
out
ja
shrl
xchg
jb
pop
call
cmp
cld
mov
pop
adc
mov
int
enter
jne
push
pop
out
pop
mov
mov
pop
sub
dec
xchg
rclb
test
pusha
fcomps
dec
std
jp
cld
gs
movsl
cld
xor
fsubr
icebp
insb
mov
mov
push
mov
lahf
in
cmpsl
cmp
cli
mov
jmp
jb,pn
sub
sbb
test
add
subl
repz
sbb
in
shll
xor
nop
jg
in
in
divl
movsl
lock
dec
popf
push
inc
lahf
xchg
jg
aaa
nop
xchg
dec
push
pusha
nop
add
mov
ffreep
xchg
add
adc
popa
cmp
cmp
jmp
inc
xlat
insb
jne
pop
dec
pop
mov
bound
xchg
mov
jns
cmp
jne
sub
xchg
sbb
mov
and
pop
jns
test
loope
nop
in
dec
fisubrl
test
cwtl
add
sub
adc
jle
mov
or
imul
adcl
imul
jae
sub
sti
loop
fs
scas
outsl
inc
testb
pop
mov
negb
pop
xchg
cltd
pop
divl
aas
idivl
orl
leave
pop
and
ljmp
ja
roll
push
mov
sbb
sbb
fisubl
mov
pmullw
jbe
jae
mov
nopl
inc
mov
addr16
xor
pop
aam
shl
fstpt
xlat
dec
jle
pop
cmpsb
repnz
incl
sub
xchg
lock
fisttpll
cmpl
dec
loopne
jae
sub
push
imul
mov
push
pop
lea
sub
jno
das
out
xchg
jae
inc
pop
lret
outsl
mov
cmpsb
daa
xor
mov
push
fs
mov
inc
ficomps
clc
xor
xchg
mov
dec
stos
mov
inc
ja
lret
jno
popf
mov
arpl
and
add
pop
in
mov
mov
or
fs
push
jne
out
js
xchg
ret
cli
or
loopne
sahf
push
jo
push
mov
push
push
sti
fsubrl
int
je
fsin
aam
push
rcll
pop
pop
and
test
add
lahf
gs
mov
cmpsl
pop
into
adc
pushf
fs
js
out
out
add
dec
sahf
mov
jmp
mov
test
cmpsb
xchg
add
fnstenv
push
repnz
cmpsb
sarb
sarb
pop
lahf
cmp
sbb
mov
test
lods
repz
or
pop
test
xor
mov
movsb
pop
mov
ret
jnp
enter
ds
imul
into
lahf
pop
and
int3
arpl
sarl
pushf
jg
pop
aad
mov
insl
jmp
cli
add
pop
dec
ds
add
fmull
loopne
mov
inc
push
mov
pop
lcall
or
rcrb
jge
dec
or
cwtl
jp
leave
cltd
inc
mov
jge
pop
imul
pop
dec
adc
inc
movsl
jp
aas
jmp
sub
sbb
mov
mov
cmp
or
sbb
or
lock
mov
push
movsb
add
mov
mull
mov
ret
insl
fimull
jno
sub
sub
add
lahf
mov
jae
pop
xchg
inc
sub
icebp
dec
adc
jb
jg
xchg
imul
dec
fisttpl
iret
xchg
sbb
lret
fldenv
mov
mov
aad
test
hlt
adcl
mov
xchg
imulb
adc
jecxz
ret
leave
inc
push
shrb
xor
pushw
or
mov
shlb
dec
dec
push
mov
inc
ffree
pusha
xor
fsubrp
pop
lret
repnz
js
aaa
xchg
or
inc
js
xor
xchg
mov
dec
stc
inc
xor
pop
sub
and
cmc
stos
sub
filds
cwtl
nop
sbb
inc
add
fs
mov
xchg
cli
bound
jp
cmp
sbb
xchg
push
and
cmpsl
addr16
pop
lods
mov
sub
sub
mov
imul
notl
cmp
out
and
shll
or
jg
mov
sub
inc
out
sahf
popf
std
gs
jo
insl
je
xlat
nop
les
shll
xchg
xor
sub
and
lock
fldl
aas
mov
addr16
out
fyl2x
xchg
scas
push
mov
std
pop
mov
jae
imul
movsb
ret
xor
aam
addr16
add
mov
cmpsb
iret
out
jg
xor
cmpsl
push
mov
pop
push
sbb
and
inc
and
lret
xchg
or
dec
mov
sub
push
xchg
cmpsl
fadd
fdivrs
push
sub
xor
outsl
sub
mov
outsl
adc
push
lret
xor
repnz
pushl
sub
mov
dec
sbb
sbbl
inc
inc
pop
cmp
es
data16
cmp
fdivs
hlt
ss
frstor
xlat
jl
pusha
int
aas
adc
in
adc
in
mov
les
mov
pop
std
out
pushf
sub
cmpsb
dec
and
dec
inc
imul
repz
mov
scas
mov
outsl
sbb
ljmp
mov
jbe
dec
dec
cwtl
sub
cltd
mov
cmp
xchg
jle
xor
insl
mov
dec
push
jge
pop
and
xor
das
jle
mov
sub
adc
xlat
outsb
shlb
push
or
mov
push
push
bound
push
cmp
cld
subl
jmp
scas
stos
repz
call
jecxz
outsl
in
pop
fildll
or
test
pop
push
sub
popf
push
filds
mul
int
pop
adc
es
popa
xlat
ljmp
in
xchg
jl
push
xchg
cmp
lods
lods
ret
dec
mov
xchg
mov
inc
xlat
cmp
dec
sahf
rorl
fadd
lahf
mov
pusha
lea
inc
add
push
fisubl
aas
push
mov
sti
jmp
popa
mov
js
sub
lcall
lret
data16
and
cmp
sbb
rol
pop
xor
push
arpl
les
mov
xor
jp
and
andl
loop
or
int3
push
mov
sbbl
dec
fwait
inc
or
addr16
and
sbb
outsb
mov
mov
mov
xchg
inc
int
xor
fcomp
xchg
jl
insl
pop
scas
or
test
jne
stc
shl
std
mov
lret
add
xchg
sbb
dec
jns
insb
push
test
call
xchg
pop
xor
sar
jp
xchg
xor
in
adc
mov
mov
or
shll
jb
mov
mov
aam
adc
aaa
cmpsl
fisubs
cmp
lret
add
mov
lcall
sub
data16
mov
or
in
sbb
or
fwait
repnz
adcb
stc
mov
mov
aad
imul
adc
push
sahf
hlt
mov
dec
movsb
sub
mov
dec
mov
push
jnp
pop
clc
int
mov
dec
scas
adc
ret
adc
or
sub
dec
inc
sub
bswap
lea
cmp
pusha
test
outsl
lret
rorb
fs
mov
out
dec
addl
imul
add
inc
inc
adc
lahf
test
xor
cmp
xchg
add
sbb
cmp
mov
jg
inc
pop
inc
cmc
xchg
mov
pop
mov
adc
iret
inc
jne
dec
pop
arpl
cmp
mov
std
dec
and
inc
push
dec
jmp
jns
popf
dec
inc
cmp
mov
inc
sbb
fmull
hlt
lods
popa
or
mov
rcll
aam
cmp
mov
jg
inc
jle
jae
sti
push
mov
or
inc
cmp
push
lret
mov
rclb
adc
mov
jle
mov
lock
in
xchg
push
scas
dec
dec
inc
xacquire
cld
popl
xor
out
pop
rcr
nop
outsl
jg
aas
movsl
push
out
mov
out
jg
or
mov
gs
fnsave
mov
test
pusha
cmp
je
xchg
jp
int
and
mov
and
xor
sbb
pop
gs
fmull
pop
es
push
stos
pop
lahf
adc
aam
inc
fninit
mov
popf
mov
stos
scas
std
push
jp
xchg
mov
or
in
in
xchg
ja
jo
out
xchg
push
jb
inc
add
mov
mov
mov
add
inc
fwait
subb
and
push
push
subl
cmc
inc
jecxz
subb
push
aas
add
mov
pop
push
add
push
lret
lods
ret
lahf
lock
imul
add
xrelease
adc
lea
ret
scas
fdivrs
xor
sub
inc
push
call
hlt
fsubl
mov
push
dec
fcoms
je
jp
xchg
lret
mov
mov
push
icebp
mov
adc
push
mov
test
pop
ljmp
cltd
mov
repz
mov
fisttps
fsubl
es
push
jbe
into
dec
sti
jo
xchg
or
aas
pop
outsb
pop
jmp
sub
js
leave
in
xchg
xor
sbb
add
xchg
ret
in
lds
lods
jp
ret
adc
push
mov
push
mov
jno
call
movsl
fadd
jp
pop
mull
cmp
mov
mov
scas
mov
jge
inc
aad
jmp
lret
sbb
arpl
dec
roll
cld
mov
mov
data16
dec
rclb
push
pop
std
ret
adc
mov
ret
fsubrl
jecxz
inc
sub
and
cld
xchg
xchg
in
adc
ja
inc
mov
movsl
unpcklps
std
inc
cmp
mov
mov
aaa
aam
iret
rclb
mov
pop
int
sub
insl
cwtl
aas
push
aad
cwtl
xlat
or
push
add
xor
pop
add
mov
out
xlat
push
cmpsb
pushf
add
fcompl
push
cwtl
mov
insb
and
scas
imull
arpl
lods
in
movsl
fidivrs
shr
popw
mov
out
loopne
cmp
ja
cli
mov
adc
sbb
int3
add
push
dec
mov
mov
mov
sbb
popa
ljmp
out
ljmp
pop
cmc
pop
and
jnp
loop
outsl
lea
pop
jb
shll
xchg
fadd
test
out
jmp
gs
xchg
or
pop
inc
push
fwait
or
jae
and
repz
push
push
div
jge
adc
add
jbe
fwait
jb
xchg
fsts
cwtl
clc
xchg
hlt
dec
or
inc
inc
repnz
pop
or
in
xchg
xchg
pusha
call
mov
and
out
dec
cmp
inc
mov
and
xor
sub
cmpsb
mov
loopne
fst
sarl
push
jne
and
cs
shll
outsb
cmp
xchg
pop
or
inc
cmp
push
inc
jmp
pop
cmpsb
test
mov
adc
loope
enter
out
loop
mov
mull
pop
call
ljmp
popf
sbb
sahf
neg
dec
aas
or
push
cwtl
shlb
add
xor
lret
push
cli
int
or
adc
add
pop
adc
and
mov
stos
pushf
push
mov
sbb
mov
nop
xor
loopne
push
sub
into
xchg
jp
fwait
jns
in
cmp
or
dec
addr16
cmp
adc
pop
jbe
fidivrl
aas
cmc
and
lcall
ret
ds
in
test
xor
push
test
push
mov
jg
das
jg
push
decb
mov
mov
das
cmp
or
ret
adcb
popf
out
popa
scas
xchg
pusha
imul
push
xor
stc
into
ret
or
and
test
push
in
or
scas
sub
dec
or
and
std
xchg
xor
nop
mov
push
push
push
mov
add
fidivs
fistl
pop
xor
sub
outsb
xchg
in
bound
sbb
idivl
fmuls
ljmp
out
arpl
test
imul
sbb
fidivs
or
mov
mov
pushf
jle
mov
icebp
idivb
ret
shl
xor
clc
mov
imul
sub
roll
in
cmpb
cmp
xchg
push
sub
mov
cmp
push
mov
lds
pop
out
orb
pop
jo
add
xor
and
enter
mov
aam
aas
fstpt
std
loope
jecxz
in
xlat
scas
push
pop
gs
adc
jo
daa
mov
lods
js
mov
or
dec
loopne
fdivr
jecxz
rclb
inc
mov
fisttps
add
popf
add
lcall
pop
jb
imul
stc
jns
and
push
jmp
cmp
dec
loopne
pop
or
and
cmp
inc
inc
mov
sub
sbbb
js
jnp
fldl
mov
cmp
ljmp
dec
cmp
mov
inc
cmp
popf
popa
cmp
jge
xor
cmp
mov
aad
fstps
push
and
jp
pusha
xchg
test
subl
clc
push
jl
pop
movsl
js
mov
lock
dec
movsb
and
outsb
mov
dec
int3
rolb
clc
js
pop
cmp
push
mov
push
divb
jb
ja
cmp
pop
mov
and
pop
dec
push
lods
push
push
cs
jg
pushf
imul
clc
sub
or
mov
fidivs
mov
inc
xor
sbb
fnstenv
ret
aas
dec
inc
xor
xorl
push
ljmp
imul
jg
pop
mov
inc
or
push
jb
push
rcrb
or
push
into
bound
xor
jmp
cmpsb
push
inc
push
jnp
sbb
test
xor
loopne
fbld
scas
fcom
add
rcl
cli
roll
stc
std
inc
xor
sbb
stos
mov
mov
adc
inc
iret
sbb
fists
add
mov
jns
pop
jnp
jnp
daa
hlt
ret
adc
lods
push
cwtl
repnz
or
nop
jns
push
push
pop
mov
or
icebp
sahf
jmp
gs
jg
or
jmp
maxps
or
outsl
mov
dec
aas
pop
mov
rcll
imul
pop
hlt
mov
push
push
cs
out
mov
aad
adc
push
lahf
dec
jmp
imull
pmaxub
xchg
jbe
xchg
dec
aas
sub
call
pop
xor
and
push
sbb
aas
sub
xchg
xchg
pop
pop
repnz
js
out
sbb
or
imul
inc
and
loopne
hlt
jno
push
add
arpl
mov
rcl
mov
daa
mov
scas
ret
pop
into
dec
jmp
scas
int3
icebp
cli
mov
lea
cmp
data16
push
sub
loope
mov
fldcw
scas
bound
jl
push
adc
inc
adc
bound
xor
mov
inc
repnz
sub
dec
sub
sbb
dec
jg
and
subl
iret
sub
add
sub
xor
dec
push
fwait
test
cmpsb
fst
imul
push
sub
shl
pop
pop
js
ficoms
add
out
test
sbb
into
ds
sbbb
pushf
icebp
lods
adc
test
xchg
sbb
aas
adc
xor
mov
sbb
js
outsl
inc
mov
gs
jo
xchg
sub
aam
test
inc
adc
pop
lcall
and
ljmp
mul
add
pusha
out
outsb
dec
jge
je
cmp
sub
andb
add
lahf
mov
rcrb
xor
sbb
rcr
outsl
fisubl
dec
dec
adc
int
fisubl
cltd
jmp
xchg
sub
mov
cmp
xlat
pop
movsl
dec
in
adc
pop
lea
sub
cmp
inc
shl
pop
push
adc
lahf
jo
adc
pusha
outsb
test
dec
inc
xor
jle
xchg
ss
sbb
mov
mov
sbb
push
data16
dec
push
and
xorb
out
cwtl
cmp
cmp
xchg
cltd
or
sub
jno
jbe
insl
jb
test
inc
mov
mov
roll
mov
jle
xchg
popf
popf
dec
jne
imulb
push
mov
push
push
fists
fstl
notb
push
jbe
ret
mov
push
in
rorb
mov
in
inc
stos
pushf
bound
fidivs
out
adc
rorb
out
aad
add
addr16
test
inc
inc
sbb
dec
mov
sub
push
sbb
cmp
xorb
popf
inc
pop
rcrb
pop
pop
std
xchg
mov
xor
sub
mov
xor
xlat
icebp
inc
pop
roll
lds
mov
push
lods
jns
mov
lds
mov
dec
jne
add
icebp
mov
fwait
cwtl
test
push
sbb
dec
fidivrl
lods
ret
xchg
adc
idiv
movsl
jg
dec
cli
notl
jp
mov
adc
popf
mov
pushf
addb
fisttpll
inc
add
fistl
inc
xchg
pusha
pop
std
fxch
xchg
mov
fcmovne
ss
outsl
xchg
push
add
adc
shll
push
and
leave
sbb
xchg
shlb
or
mov
cltd
or
fucomi
mov
fstps
lock
sbb
add
cmpsl
xchg
movsb
fs
mov
and
ss
sbb
or
shr
test
mov
lahf
std
stos
cli
xchg
mov
jmp
mov
outsb
insb
and
and
test
or
mov
lcall
fimuls
mov
aaa
in
popf
push
popa
pushf
sbb
and
stos
rorb
adc
push
mov
sti
xor
dec
mov
xor
lahf
xor
push
lea
xchg
daa
loopne
fisubs
push
xchg
ror
push
inc
out
mov
lods
sti
jecxz
push
sub
pop
push
inc
loope
data16
mov
sub
mov
ss
cmp
mov
movsb
push
movb
xchg
repnz
ficoml
popf
in
rclb
nop
sub
outsb
negl
push
fsts
xor
mov
cld
cmp
in
orb
pop
je
pop
and
call
sbb
insl
xchg
add
jl
dec
push
mov
js
scas
int3
in
mov
xorb
in
mov
push
das
dec
cmp
ljmp
inc
fldcw
push
fsubr
test
xchg
sbb
xchg
ret
cmp
shlb
xchg
movsl
out
jl
pop
mov
xchg
inc
lods
mov
or
out
jl
pop
mov
sbb
orl
xchg
sbb
cwtl
subb
push
inc
sahf
outsl
or
arpl
jo
sbb
mov
es
adc
add
call
cs
mov
push
inc
fldl
push
dec
scas
jbe
push
leave
xor
push
adc
into
int3
test
mov
cmp
test
and
mov
lods
outsb
xor
mov
scas
mov
idivl
inc
orl
aam
repz
jle
mov
in
scas
or
daa
sbb
rorl
cli
pop
lock
lea
or
and
adc
sbb
add
or
icebp
sahf
prefetch
or
and
pop
lock
into
jae
adc
arpl
jb
scas
pusha
push
stc
sbb
inc
dec
sbb
or
push
lahf
cmpsl
jg
aam
popl
push
adc
orb
lds
mov
cmp
enter
stos
cs
jno
sub
inc
jmp
mov
sbb
sub
dec
adc
dec
add
or
nop
rcl
adc
xor
cmpb
mov
lods
and
icebp
andl
imul
insl
scas
push
xor
scas
les
mov
sbb
ret
popf
and
fnstsw
xor
sub
aaa
pop
js
shl
jo
jb
int
rcrb
and
cmp
inc
cmc
xchg
adc
pop
lods
inc
add
add
push
stos
sahf
adcl
jmp
sarl
lret
cmp
in
jg
clc
add
cmpsl
repnz
or
pusha
xchg
adc
testl
in
push
sub
pusha
jmp
mov
repnz
and
dec
push
ja
and
gs
cld
scas
testb
cmp
mov
sbb
pop
das
dec
cmpl
movsb
mov
test
push
push
imul
int
cmp
ss
xor
mov
xchg
into
xlat
push
clc
cmpl
xchg
mov
shlb
inc
scas
lret
mov
lods
pop
or
jnp
mov
sahf
mov
or
add
addr16
and
adc
xlat
movsl
icebp
sti
sbb
pop
xchg
out
jmp
int
xchg
adc
sub
push
jecxz
xor
pop
divb
out
jnp
mov
add
icebp
std
add
xchg
icebp
icebp
sub
daa
lock
adc
in
stos
and
rdpmc
subb
pusha
lock
ss
sbb
in
je
xlat
hlt
fcomi
neg
imul
dec
and
fwait
addl
rolb
jp
pop
cmpsb
ror
aam
popa
ss
dec
into
stc
pop
cmc
adc
pop
iret
fsubrl
xlat
jp
sahf
fnsave
add
adc
fidivl
mov
adc
test
mov
or
cli
xchg
add
pop
pop
mov
mov
lds
and
jg
dec
lret
jmp
mov
sarb
scas
add
cmp
subb
inc
pop
pusha
xchg
pop
dec
ljmp
cmp
fcmovu
mov
sub
cld
cmp
push
repnz
enter
push
cltd
dec
inc
pop
push
mov
adc
and
pop
scas
nop
jae
imul
cs
daa
fcompl
je
mov
je
fisubs
loop
fs
fldenv
sbb
xchg
daa
fwait
mov
fmulp
es
dec
lock
jle,pt
mov
push
jb
inc
mov
rcll
xchg
ret
cmp
mov
sti
cmpsl
lds
fcomp
pop
js
loopne
adc
sbb
roll
mov
in
xchg
stc
mov
les
icebp
mov
dec
out
sbb
js
in
push
inc
xchg
mov
cld
fiadds
xchg
adc
lret
scas
fwait
orb
mov
lea
jns
popl
xlat
mov
jle
into
insb
push
add
shl
sbb
sbb
sti
imul
mov
aaa
lods
jae
lret
pop
out
out
and
jne
daa
cmpsb
inc
or
addl
jmp
mov
lock
pop
mov
testl
lock
pop
in
mov
inc
add
aad
rcrl
aaa
sub
mulb
adc
jnp
mov
lahf
cmp
mov
mov
stos
aad
negb
and
xlat
arpl
pop
movsb
ja
or
pop
into
je
xor
jbe
add
pmullw
test
fwait
into
sbb
sti
sbb
mov
outsb
movsl
int
xchg
rcr
fdivp
stos
cld
movb
mov
pusha
xor
mov
orl
data16
in
xlat
sub
adc
in
loope
jae
push
out
jmp
rcll
aad
and
inc
fs
lret
int
insl
arpl
sbb
mov
xchg
and
add
mov
or
leave
and
das
cmp
std
xchg
lea
mov
mov
xchg
mov
sub
sbb
ret
data16
and
cwtl
jp
das
jg
jecxz
rorl
push
rcr
adc
push
addr16
out
jg
clc
mov
mov
hlt
sub
mov
mov
jns
mov
dec
push
mov
push
xor
mov
adc
pop
fadd
fstpl
jcxz
xchg
xor
xor
pop
in
pop
mov
cmp
and
cwtl
add
inc
fiaddl
shlb
out
shlb
xchg
mov
adc
mov
repz
add
sub
in
aad
jle
inc
add
pusha
mov
add
sbb
fildl
sub
std
out
xor
mov
sbb
ja
inc
adc
mov
fdiv
enter
das
push
pop
sub
ljmp
inc
mov
shrl
mov
sti
outsl
das
xchg
shlb
sahf
jecxz
xor
out
test
addr16
int3
movsb
xor
sub
adc
nopl
insb
inc
push
shrl
jo
dec
dec
into
out
cmp
mov
sahf
add
arpl
xlat
push
sub
out
test
xchg
cmp
stc
mov
dec
pop
mov
test
or
out
rcl
out
std
sub
in
mov
dec
xor
out
out
cli
cmp
cmc
addb
mov
pop
push
out
adc
addr16
sbb
or
add
sub
and
xchg
add
pop
cmc
xor
lods
adc
cmp
gs
mov
push
fistpll
mov
add
sbb
les
into
add
clc
mov
pop
fldenv
push
sti
push
out
clc
mov
push
test
or
cs
pop
sub
aad
das
ret
aam
cs
pop
xor
add
or
enter
jnp
pop
test
sti
fs
pop
fidivs
and
aas
leave
movsl
sub
rcr
adc
mov
movsl
bound
or
int3
sub
gs
lock
jno
dec
xchg
insl
pop
inc
mov
sbb
arpl
in
dec
addr16
xchg
pop
in
dec
jmp
js
push
cmpsb
mov
pop
xchg
mov
sub
or
hlt
jge
aas
xorb
jne
cld
repnz
fmuls
add
mov
out
jne
mov
add
js
lea
stc
mul
dec
ffreep
mov
xchg
pop
mov
lcall
adc
int3
cmp
push
cwtl
mov
ds
mov
jge
scas
or
loope
lret
and
sahf
mov
mov
iret
ss
mov
push
rcrl
jnp
inc
xlat
in
xchg
popa
add
orl
inc
adc
daa
je
pop
mov
push
fldl
push
ret
in
lock
sub
cltd
jmp
jecxz
test
jbe
out
test
xor
push
xor
sahf
jnp
insl
dec
push
repz
cmp
das
cmpsl
aaa
push
stc
std
pop
pop
ds
aas
div
js
out
xchg
mov
call
or
pop
fidivrl
lods
cmc
outsl
aaa
std
jb
or
add
inc
inc
adc
icebp
test
repz
xor
push
cli
mov
cmp
xchg
jns
lret
and
shr
rcll
pop
push
flds
test
insb
test
adc
cmc
sbb
notl
sub
add
dec
add
into
adc
sub
and
das
inc
push
popf
in
adc
cmp
xor
rcr
call
mov
dec
stos
cmp
mov
popa
ret
cmp
sbb
imul
and
gs
insb
mov
aas
mov
pop
das
add
pop
pushf
std
daa
dec
out
out
lods
sbb
cld
sahf
scas
xor
jge
test
jne
push
out
jmp
lret
scas
leave
adc
add
dec
outsl
xchg
push
add
rcrl
lods
orb
shlb
ljmp
or
push
push
dec
cmp
xorl
dec
mov
sti
pop
adc
push
sbb
pop
and
jmp
mov
xchg
push
dec
pop
push
sbb
sarl
mov
je
sete
inc
sbb
jno
sbb
xchg
push
cmp
gs
loope
gs
stos
and
cmp
xchg
or
mov
orl
outsb
xchg
and
in
sbb
mov
push
leave
movsb
incl
mov
sub
xor
std
mov
inc
inc
adc
loope
push
mov
inc
push
fcompl
inc
loope
cmp
adc
out
fdivs
mov
aas
and
adc
in
lret
sahf
out
jno,pn
fsts
addb
addl
dec
cmpsb
mov
into
std
lret
divl
mov
mov
cmpsl
push
add
popf
ret
out
cltd
sub
dec
test
fsubs
dec
hlt
fistl
fstl
add
mov
mov
xor
mov
xor
push
fiadds
or
or
cmpsl
imul
sahf
inc
mov
lret
icebp
pop
lahf
adc
ror
icebp
repz
or
gs
lahf
scas
aam
mov
movsb
xor
fs
stos
xchg
cli
sub
leave
repz
arpl
adc
movsl
js
rorb
jbe
dec
xchg
mov
fldcw
scas
sub
mov
jbe
xchg
imul
xor
fcomp
add
jmp
xor
enter
test
pop
jmp
repz
mov
mov
insb
xor
cmp
ret
scas
rcr
adc
bound
add
imul
mov
pop
loope
dec
xor
scas
jge
xor
ss
int3
push
add
icebp
inc
hlt
jle
mov
sbb
pop
cmpsw
aaa
hlt
sub
sub
or
pushf
mov
push
out
sub
adc
fucomip
repnz
es
fcomip
lods
push
jne
pop
push
xchg
addb
push
sbb
sbb
push
pop
stc
pushf
dec
daa
inc
dec
jmp
fwait
pop
xor
jae
lret
ficomps
lahf
xor
jl
jmp
mov
or
dec
sub
push
test
sub
fistps
std
ljmp
cwtl
hlt
jo
std
jl
push
mov
dec
les
sti
mov
out
out
xlat
movsl
add
inc
or
xor
sub
out
lret
pop
mov
leave
push
sar
cmpsl
shrl
xchg
hlt
stc
out
cli
repnz
pop
repnz
or
js
dec
into
cltd
mov
sti
xor
jne
fimull
adc
sahf
je
aad
mov
out
inc
call
mov
cmp
or
jns
ss
mov
push
jae
add
addr16
push
pop
sub
pop
xchg
xor
aam
fistps
dec
lahf
xchg
mov
lds
xor
in
loope
xchg
pop
lahf
fnstenv
adc
subl
adcl
pop
inc
add
iret
shl
mov
or
out
addr16
add
stos
ja
mov
xor
mov
int
xor
jne
adc
pop
inc
ret
adc
sbb
jbe
xor
pop
stos
call
or
add
inc
shll
push
shlb
call
dec
lcall
sbb
dec
test
inc
les
xor
fists
push
push
mov
xchg
jnp
xchg
int3
frstor
mov
cmpl
call
test
cwtl
ficoml
aaa
and
mov
nop
test
dec
scas
add
xchg
xchg
xchg
xlat
and
cmc
pop
inc
dec
movsl
mov
mov
dec
imul
cmp
xor
loopne
or
aad
xor
and
mov
lret
dec
push
xchg
mov
stos
mov
mov
lock
repz
fmull
mov
dec
test
jp
mov
frstor
push
push
arpl
push
loope
add
jp
out
aam
leave
push
mov
inc
mov
fnstcw
aaa
xchg
cs
lock
mov
repz
sub
lret
bound
dec
dec
test
ljmp
or
add
adc
xor
xchg
inc
dec
fiadds
shll
lret
inc
inc
aad
aam
dec
and
test
mov
cmp
lods
shrb
iret
fisubrs
jnp
shlb
add
les
clc
sub
mov
dec
outsl
push
cmpsb
test
or
test
dec
adcb
xchg
in
movzwl
hlt
cmp
jns
shlb
add
stos
add
jb
or
jbe
and
or
iret
inc
ss
fwait
out
sub
cmp
xchg
lds
mov
cwtl
mov
cs
push
imul
inc
and
mov
mull
outsl
sbb
fisttpll
lods
ret
push
adc
cmp
mov
jo
cltd
bound
in
les
mov
dec
mov
gs
xchg
lds
jbe
dec
test
xchg
dec
cmp
mov
pop
ss
mov
add
int
jns
inc
out
cs
and
and
mov
lods
mov
ljmp
pop
cmpsb
sbb
movsl
push
mov
idivb
xchg
daa
les
dec
cmpsb
call
cmp
aas
mov
pop
test
or
repnz
cs
sbb
push
stos
and
and
cs
in
imul
and
mov
enter
loope
xchg
inc
in
jbe
outsb
in
ljmp
xchg
div
les
sub
mov
outsb
mov
mov
xor
ret
scas
mov
loope
xchg
mov
cmp
subl
mov
enter
cltd
fdivrs
fisubrs
daa
mov
fsubl
xor
lcall
shll
inc
loopne,pn
stos
out
push
mov
std
xlat
adc
mov
add
push
lcall
jl
std
inc
mov
pop
cmpsl
in
jne
add
pop
shr
jb
addr16
inc
mov
sbb
cmp
xchg
jnp
and
outsl
pop
inc
fcmovnu
xchg
cmp
mov
pop
jnp
mov
negb
cmp
pop
jno
xchg
and
mul
push
sahf
pop
fcom
scas
outsb
subl
xor
int
adc
in
dec
ja
xchg
dec
and
addr16
cmp
jle
dec
rolb
add
fwait
movsl
in
jl
in
push
shll
rorl
or
fimuls
cmp
push
clc
push
and
repz
jb
insl
in
loope
mov
mov
dec
mov
mov
xor
aam
mov
subb
dec
adc
jle
or
imul
cs
xchg
mov
add
add
ljmp
sti
gs
or
cmpsb
pusha
push
push
mov
popf
test
jg
mov
lahf
pop
in
roll
nop
call
mov
cmp
sub
push
dec
or
sub
outsl
cltd
or
cmp
xchg
dec
out
icebp
mov
xchg
into
clc
cmpl
loopne
mov
movsl
sahf
xorl
loop
xchg
adc
popf
ljmp
movsl
and
fdivr
aad
std
arpl
test
inc
out
xchg
into
out
fstpt
cmp
inc
data16
dec
cmpb
adc
fidivrs
or
ret
das
dec
jg
mov
mov
inc
cmp
test
add
mov
jle
ret
stos
sbb
shll
imul
adc
adc
enter
data16
sbb
ficoml
icebp
add
popf
sbb
clc
mov
sarb
mov
in
cmc
cld
mov
stos
scas
add
out
bound
lahf
aas
adcb
repnz
sbb
imul
jecxz
std
dec
xchg
je,pt
push
mov
out
addr16
xchg
mov
fsubrl
jae
jae
xor
mov
test
adc
inc
ror
cmp
sbb
mov
imul
fsubrp
test
jns
ret
pop
lcall
fucomp
stos
hlt
inc
movb
cmp
adc
sub
jb
data16
add
mov
jne
and
mov
fdivrl
xchg
ja
jb
and
push
std
fs
divl
loop
les
jle,pt
xlat
sbb
fbld
cmp
pushl
js
xor
push
inc
or
in
bound
jge
jle
sub
add
and
mov
notb
sub
mov
dec
jbe
out
mov
sub
and
inc
shrb
push
cmp
shll
lcall
ss
aas
mov
out
cmpl
cmc
mov
inc
jns
inc
aam
inc
pop
gs
and
addr16
inc
int
jbe
or
fcom
xor
fldenv
in
xor
repz
je
stos
lock
push
add
pop
or
pop
push
xor
jecxz
imul
push
push
jns
dec
push
into
xor
xchg
in
mov
push
stos
lds
push
into
fisubrl
push
inc
xor
pop
push
mov
or
mov
inc
sbb
jl
out
jns
testb
in
in
test
jge
loop
sub
imul
idivl
jecxz
add
push
push
cmp
fldenv
mov
ret
jo
xchg
adc
roll
or
push
sbb
xor
push
cmp
js
adc
push
inc
mov
jp
push
aad
xor
cmpsb
ljmp
mov
xchg
inc
adc
sbb
cmp
scas
cmp
test
inc
xor
and
icebp
inc
cltd
iret
jl
std
xchg
mov
pop
loopne
aam
shll
in
sub
mov
fs
adc
leave
stc
call
dec
iret
fdivrl
or
sub
cmp
inc
pop
fidivl
aam
jecxz
mov
loope
test
xchg
cmp
mov
stos
pushf
dec
arpl
cmp
xor
xchg
fcomp
int
into
mov
stc
push
mov
cmpb
int
pop
out
call
adc
mov
es
filds
cmp
sbb
cmp
xor
in
bound
dec
in
mov
cmp
icebp
or
jge
out
jg
push
pop
test
inc
mov
shrl
lea
adc
inc
adc
fsubl
lcall
xchg
mov
outsl
or
out
enter
mov
mov
pop
into
aas
pop
test
mov
and
mov
rolb
add
into
adc
loope
lcall
dec
int3
jo
mov
adc
out
cmp
mov
xchg
adc
popa
cmp
ds
cli
mov
js
xor
sti
jl
mov
les
sbb
loop
push
jmp
rorl
mov
mov
stos
cmpsb
xchg
lock
cld
cmpb
cmp
inc
shrl
cltd
add
mov
icebp
mov
imul
outsl
lahf
loop
imul
cmp
sbb
jne
fs
dec
jmp
std
or
jecxz
inc
adc
test
push
sbb
fsubrl
jno
fs
arpl
jmp
stos
inc
mov
inc
faddp
rcrl
xchg
inc
loopne
insl
jns
sub
cmp
adc
xor
and
add
sub
xchg
adc
fldenv
mov
dec
sub
xchg
and
cwtl
ja
arpl
mov
ret
add
dec
inc
test
cmp
repz
mov
mov
out
cwtl
cmp
les
and
push
lods
lods
mov
fidivrl
dec
mov
js
lods
sbb
popa
mov
adc
testb
inc
outsl
shr
add
push
xor
ljmp
fisubrl
and
adc
pop
mov
not
clc
mov
mov
js
loopne
scas
dec
dec
jo
jno
inc
stc
mov
jecxz
dec
insb
cmc
lea
repz
fldenv
cld
mov
push
aam
lods
shl
xchg
xchg
mov
mov
jno
aam
les
scas
sbb
mov
and
and
mov
push
add
div
jmp
stc
stos
add
jl
and
fsubrl
shrl
imul
pop
add
pop
addl
pop
pop
ficomps
sbb
into
insb
xchg
ret
jo
inc
mov
icebp
rdmsr
push
repz
jmp
sbb
mov
lret
adc
insl
pop
or
cltd
mov
test
popf
filds
push
ja
iret
fcmovnb
jmp
into
pusha
push
sbb
repnz
ror
enter
loopne
adc
mov
in
mov
xchg
adc
push
ror
sbb
inc
fdivr
jo
ss
cltd
xor
call
in
js
sbb
dec
ret
leave
mov
sbbl
xchg
xor
push
add
and
stos
xor
pop
jl
inc
add
int3
adc
cmc
ljmp
pop
lret
jno
push
mov
lods
mov
mov
aaa
or
adc
icebp
cld
mov
cmp
dec
addr16
popf
jp
xchg
pop
cmp
inc
stc
push
imulb
inc
jmp
test
pop
jl
pusha
cmp
dec
add
jge
pop
inc
inc
inc
inc
int
dec
nop
jbe
mov
mov
fisttpl
pusha
push
dec
sahf
ret
push
inc
daa
je
and
in
sarl
in
jno
test
sahf
add
pop
lcall
cli
aam
leave
idiv
mov
cmp
pop
popf
mov
and
daa
pop
mov
add
fcomps
ret
mov
xor
jecxz
adc
fcoms
mov
in
sbb
lea
jne
fistpll
inc
and
pop
outsb
mov
push
loope
push
pop
inc
cmp
insl
aas
int
push
add
xchg
fsubs
or
cmp
rcll
xchg
fisubrs
jl
jmp
out
notl
add
std
insl
rolb
add
addr16
aam
push
push
loop
rorl
add
stos
adc
cmpsl
inc
cmp
jns
movsl
js
out
xchg
jl
mov
cmp
lods
xor
out
imul
xlat
sub
bswap
dec
bnd
adc
std
cmc
iret
stc
dec
dec
mov
imul
ffreep
sbb
or
mov
sti
and
sbb
and
cmpsb
cmc
insl
mov
mov
outsl
adc
cmp
in
ss
add
aam
cmpsb
jmp
lcall
jle
adc
sub
inc
and
lea
cmp
js
outsb
aam
jl
outsl
lret
icebp
sbb
jo
inc
addr16
test
insl
add
leave
jmp
mov
push
mov
mov
mov
in
test
add
ror
pop
cmc
dec
pop
lods
push
and
dec
or
or
sbb
popa
sarb
mov
rorl
xchg
cmp
cmp
xor
inc
iret
pop
inc
inc
push
pushf
mov
mov
pop
xchg
jb
test
adc
sbb
jae
dec
sub
or
jp
addl
or
sbbb
outsb
xchg
lods
cmp
stc
enter
dec
sti
and
mov
push
jecxz
mov
popa
int3
leave
mov
or
loopne
sbb
orb
or
mov
mov
push
int
sti
aas
and
push
pushf
pop
inc
sbb
lret
push
in
jg
movsb
jmp
or
pop
jb
lods
repz
sarl
push
lahf
dec
sti
and
jp
xor
jge
icebp
scas
and
lods
sub
int3
out
mov
imul
sti
repnz
add
mov
lods
dec
lret
js
js
push
push
pushf
into
loopne
js
push
mov
outsb
push
mov
push
hlt
xchg
repnz
inc
xorps
inc
cmp
or
and
jmp
loop
push
mov
dec
and
xlat
push
push
sub
jg
roll
mov
and
ret
int3
pop
fidivrl
shlb
inc
cld
pushf
dec
push
cli
fildll
cmpsb
jp
xor
xorb
xor
leave
pop
in
int3
pop
sub
push
jmp
nop
pop
jp
and
addl
mov
cmp
or
cli
push
mov
add
cmpsl
enter
xchg
and
movsl
clc
cli
icebp
dec
clc
ficomps
in
and
rcl
pop
sbb
mov
and
and
fdivrs
pushf
stos
xchg
push
dec
inc
adc
lods
mov
mov
gs
push
push
ss
mov
hlt
sahf
dec
les
addr16
xchg
cmp
sbb
jmp
in
adc
pop
push
int3
mov
insl
ret
inc
cmp
xor
and
jno
xlat
pop
mov
jl
or
or
pop
pushf
add
cmp
cmp
shll
repz
cld
pop
hlt
lock
insl
pop
cmpsb
sub
sbb
popf
mov
arpl
dec
rcrb
jo
or
adc
dec
call
push
xorl
mov
and
leave
ljmp
hlt
insl
pop
sub
push
in
into
mov
xchg
mov
movsb
push
and
push
int
addl
mov
dec
ss
cmp
mov
stos
int3
roll
inc
repz
fstpt
cmp
shll
jge
xlat
jg
sub
cmpsl
adc
in
push
pop
out
inc
fwait
repnz
pop
minps
or
stc
lods
test
je
mov
aaa
stos
in
bound
movsl
add
xchg
adc
aas
popa
in
arpl
sub
add
repnz
fs
stc
push
sbb
call
insb
inc
jnp
xchg
adc
cmp
jle
or
das
int3
xor
popa
adc
or
inc
xor
test
in
loope
jbe
movsl
mov
loope
lock
loopne
inc
test
push
cmc
adc
aad
jp
adc
movsl
dec
sahf
aaa
inc
push
fiadds
mov
sbb
push
cs
mov
xchg
aas
arpl
das
pop
cmp
je
mov
pop
scas
in
push
jl
add
push
cmpsb
ss
rcrb
xchg
push
stos
jg
xchg
ja
xor
shlb
xor
sub
test
enter
sbb
and
mov
rcl
rcr
add
imul
testb
repnz
xor
sub
das
or
xorl
movsb
imul
inc
mov
pop
dec
lock
push
rcrl
repz
aaa
sbb
mov
les
or
dec
arpl
cmp
das
jne
push
cmpsb
outsl
fldenv
xchg
fldt
outsl
negb
sbb
movsl
test
dec
popa
mov
in
sub
mov
popa
dec
jae
mov
testl
fdivl
jecxz
stc
imul
movsb
clc
adcl
adc
inc
mul
shll
imul
sbb
pop
sbb
adc
or
mov
outsb
repnz
sbb
sub
mov
mov
es
adcl
cmpb
nop
jmp
adc
ret
pop
adc
repz
shlb
or
cs
js
mov
sbb
int3
cmp
enter
jo
and
xchg
nop
fwait
jge
xchg
out
xchg
mov
js
cmp
mov
out
cli
out
aam
testl
jo
mov
je
pushf
xchg
cmp
cwtl
xchg
fs
fbstp
sub
test
popa
shr
pop
inc
cmp
sub
sarb
push
push
pusha
test
scas
dec
shr
pop
inc
addr16
cs
sub
mov
jae
pop
int3
mov
pushf
subb
adc
mov
int
pop
push
mov
adc
insb
scas
dec
jmp
test
aaa
stos
scas
inc
in
or
ffree
in
jmp
sbb
sbb
cmp
cmp
pop
pop
andl
xchg
rolb
lcall
mov
shrl
repz
jae
push
test
ret
jae
ret
movsb
lahf
mov
xor
icebp
mov
into
or
lods
loop
dec
push
xchg
imul
popf
pop
sub
ss
arpl
inc
pop
xchg
xchg
popl
inc
mov
leave
sbb
add
inc
test
mov
xchg
fmuls
mov
in
mov
mul
jl
repz
inc
dec
lea
inc
jns
jno
loopne
mov
sub
and
and
mov
push
ret
add
jge
xor
pop
push
ds
cld
sub
faddp
xlat
and
xor
adc
movsb
mov
push
mov
cld
pop
dec
xchg
nop
mov
test
mov
and
pop
stos
or
lahf
and
jae
mov
mov
mov
add
or
dec
push
repz
mov
mov
sub
insl
cwtl
test
loope
push
fdivr
mov
jnp
mov
cwtl
pop
bound
pop
push
adc
mov
orb
test
jns
inc
ret
call
int
xorl
negb
js
inc
and
push
push
adc
mov
clc
aam
jo
xchg
shlb
ljmp
fidivrl
lds
hlt
mov
movsl
or
inc
adc
je
fcomps
or
movsb
sub
aaa
es
mov
loop
jne
ret
or
clc
test
cmc
xchg
iret
jmp
or
mov
add
mov
dec
inc
push
mov
mov
sub
dec
mov
rcrb
repz
scas
mov
stc
test
xor
fidivl
in
stos
movsl
push
sbb
pop
loopne
loope
jno
jno
and
xchg
lods
nop
cld
ss
sbb
add
pop
das
jmp
testb
fs
je
add
mov
jl
lock
xor
addb
outsl
push
mov
daa
shlb
push
js
or
daa
mov
inc
mov
sbb
or
addr16
fldt
mov
stos
xchg
sbb
imul
int3
push
in
inc
inc
loop
fidivrl
cmpsl
and
sahf
ja
add
inc
lock
aas
push
dec
js
pop
sbb
mov
and
mov
dec
ret
jge
or
cmpsl
or
addl
leave
jg
aam
and
in
inc
mov
dec
cmp
mov
inc
push
fcmovnb
pop
push
cwtl
xchg
mov
popf
loope
lcall
adc
mov
adc
data16
arpl
ss
xchg
shrb
or
clc
lcall
gs
sti
popa
add
sbb
das
jbe
pop
pushf
push
insl
aam
insb
mov
jbe
xchg
adc
mov
and
cltd
dec
dec
addr16
sahf
push
enter
pop
repnz
fs
sbbb
adc
test
ret
mull
hlt
sub
mov
mov
icebp
sbb
fs
adc
inc
cmp
stos
aas
or
mov
lcall
inc
or
outsb
scas
ja
loopne
mov
cmp
stc
outsb
subb
jl
fisubrl
cli
mov
adc
pop
lods
jo
mov
sbb
adc
scas
aam
jbe
sbb
rcll
cmpsl
pusha
dec
push
push
jnp
or
hlt
jge
cmp
mov
outsb
lea
pushf
fstps
aas
sti
xlat
lods
push
lahf
repz
adc
popf
cli
sti
in
pop
leave
dec
lods
cli
stos
std
and
pop
mov
pop
inc
or
rcrl
cld
push
lods
mov
pop
pop
mov
jno
roll
mov
xor
jne
insb
sub
std
je
fidivl
rolb
adc
in
icebp
cltd
jbe
stos
and
mov
test
add
loop
adc
inc
in
mov
into
enter
mov
add
std
mov
inc
cmc
aaa
in
mov
int3
stc
and
stos
insl
push
aaa
test
pop
mov
cli
sbb
or
lret
sbb
xchg
fisubl
out
pop
xchg
xchg
int
enter
add
pop
test
or
sbb
mull
je
jno
fnstenv
xor
imul
popf
test
fildll
jge
mov
sub
lds
add
cmp
lret
outsb
or
or
bound
in
add
aad
mov
addr16
pop
mov
decb
nop
sarl
cmpsl
push
gs
jns
adc
insb
xor
stos
test
mov
lret
mov
cs
cs
idiv
push
xchg
push
loope
cld
fnstenv
shlb
xor
mov
cmp
cmpsb
jmp
sti
pop
sahf
jecxz
stc
stos
stos
add
mov
push
cmp
mov
cli
jne
loopne
jmp
adc
leave
dec
sbb
push
mov
stos
add
shrb
push
insl
stc
stos
dec
sbb
add
int3
or
aaa
lods
mov
inc
and
push
mov
es
or
es
xchg
push
jb,pt
repz
jle
sbb
jne
mov
idivb
add
or
repz
sub
jb
lock
mov
pop
mov
sbb
test
jae
xor
jp
fisubrl
shlb
xor
xchg
mov
call
lret
jle
cmp
dec
sbb
add
sub
and
test
pop
sahf
fbstp
fists
movsl
icebp
out
xor
cvtpi2ps
sub
pop
and
push
add
cmpsl
xchg
xchg
popf
jp
or
adc
leave
adc
das
mov
jecxz
fstps
push
sahf
sbb
sbbb
jb
or
jg
loope
push
xlat
repz
shrl
add
sbb
mov
cmp
add
test
xchg
add
mov
lods
pop
sbb
std
dec
push
mov
jle
xchg
sbb
push
cmp
and
addr16
mov
mov
out
fistpl
movups
jnp
test
or
in
imul
xchg
mov
jnp
idivb
jmp
sbb
dec
lea
in
or
inc
sbb
add
aas
pop
xchg
sbb
inc
or
xor
cmp
jns
in
insl
test
jecxz
daa
xchg
xor
fidivl
adc
sub
sar
sbbl
jmp
push
fninit
mov
inc
xchg
outsl
mov
push
pop
call
sbb
into
inc
inc
icebp
mov
dec
out
pop
into
xchg
add
lahf
les
jne
testb
icebp
xchg
adc
movsl
shll
or
sbb
jecxz
inc
pop
or
aam
dec
cltd
adc
scas
mov
and
sub
dec
lods
jae
sub
loope
in
repz
jno
nop
pop
jl
cltd
jno
imul
xchg
and
int
cmp
ret
call
loop
xor
xor
lds
pop
xchg
mov
pushf
push
popa
sbb
inc
test
sub
in
sbb
sub
sbb
aam
xchg
lds
lods
push
imul
cmp
adc
add
adc
into
std
iret
loop
sbb
cmp
enter
and
shlb
mov
cs
xchg
mov
adc
dec
sarl
test
jle
scas
xchg
lahf
dec
mov
pop
loop
adc
push
adc
dec
dec
ja
adc
ja
shll
xor
mov
mov
icebp
inc
rorb
sti
cltd
jmp
repz
out
pop
shlb
fbstp
sahf
not
jns
or
pop
insb
jl
imul
sbb
stc
sbb
hlt
fisttpll
lods
pop
loopne
cmc
scas
mov
mov
xorb
fstpl
fnsave
imul
stos
push
mov
add
pusha
sti
aam
or
and
loop
sbb
daa
inc
xor
inc
xor
lahf
or
outsl
lret
push
inc
sub
mov
adc
icebp
pop
sub
out
fsubs
scas
fiaddl
push
lcall
push
mov
xor
out
test
sub
aas
mov
mov
sub
testl
in
xor
adc
jnp
repnz
xchg
stc
pop
xchg
rorl
add
dec
or
and
xchg
pop
clc
mov
cmp
adc
sub
int
fcomip
das
jp
and
jg
xchg
xor
gs
das
push
pop
jae
les
pop
sbb
fsubs
push
inc
add
shl
ret
xchg
jle
xor
mov
outsb
daa
lahf
mov
xchg
mov
inc
ljmp
inc
mov
push
sub
fs
int3
pop
and
or
int3
cld
cs
sub
xchg
cltd
les
pop
push
aad
dec
adc
jmp
dec
rcrb
sbb
ret
lea
add
les
insb
xchg
mov
std
sarl
jmp
popa
arpl
in
cmp
ljmp
mov
jae
insb
xchg
pusha
loope
jl
push
add
ja
int
sbb
negl
test
jecxz
jle
jg
cmp
cmc
pop
cmc
lret
sti
push
sti
or
pushf
push
adc
or
ror
xchg
jg
sub
fsubrs
je
pop
inc
adc
xor
push
mov
push
rcrb
mov
jmp
mov
mov
cs
lea
pop
fisttpll
xor
pop
ret
sbbl
xchg
lea
fcmovnbe
popf
mov
insl
fists
xchg
pop
int3
inc
mov
push
pop
sub
inc
dec
pushf
sbb
push
leave
scas
xchg
sbb
jns
add
mov
push
push
inc
push
mov
push
adc
push
btc
push
dec
or
push
mov
xchg
lock
inc
fwait
cmp
in
or
fstpt
mov
push
or
pusha
sbb
sbb
lods
xor
lret
xchg
into
sub
xchg
stos
pop
retw
mov
cs
or
jae
shl
hlt
xchg
push
outsl
dec
mov
outsl
pop
scas
fnstcw
popf
adc
and
jae
cmp
and
sarb
test
lcall
movsb
inc
jb
xchg
push
jecxz
scas
pusha
cmc
inc
movsl
inc
pop
in
sbb
dec
xchg
out
ret
inc
stos
stos
mov
dec
inc
loopne
out
sub
rclb
jb
push
cmc
inc
push
mov
cltd
xor
push
push
mov
inc
movsb
add
inc
and
or
pop
cltd
lret
lret
mov
xor
shll
and
sahf
add
data16
lret
rorb
inc
mov
into
inc
xorb
fiaddl
dec
mov
aaa
xlat
repz
fwait
in
mov
xor
cld
xchg
push
dec
icebp
je
push
sahf
fldcw
push
mov
ret
jb
cmpsb
push
sub
push
fwait
in
fisttpl
dec
inc
add
lock
imul
aam
mov
in
xchg
mov
nop
imul
fnstenv
pop
loopne
mov
jnp
adc
sbbb
xchg
data16
int3
iret
adc
push
cltd
into
ret
dec
js
mov
adc
jnp
test
out
stos
lock
push
mov
push
pop
imul
or
jmp
fwait
popa
test
mov
sbb
mov
xchg
es
adc
shll
or
inc
sbb
cmpb
mov
sub
pop
and
add
xor
mov
cmp
jg
mov
mov
rol
jl
mov
loope
mov
pop
stos
inc
xorl
push
sbb
mov
xlat
xor
push
jb
sarb
xchg
ljmp
cmc
not
jge
aad
push
ss
sti
sbb
std
out
sbb
add
loopne
test
and
pop
mov
aad
push
mov
dec
cmp
mov
popf
mov
ljmp
aaa
cmpsb
test
pop
and
and
push
or
xor
jb
xor
cmpsl
or
jmp
mov
in
mov
cmp
data16
xor
mov
pop
ljmp
cwtl
jle
jns
pop
lahf
add
inc
lcall
ss
fadd
fidivl
in
test
scas
sti
cmp
mov
sub
jne
das
aam
xchg
dec
aad
sti
sbb
das
int
scas
outsb
push
rorl
mov
outsl
ror
jecxz
xor
or
sub
xchg
test
aad
or
dec
aad
sbb
push
cltd
loope
lds
xor
subb
divb
jns
cwtl
jno
jp
scas
in
shrb
test
or
setns
inc
rclb
movsl
or
sarb
repz
add
fidivrl
push
inc
movsl
sub
shll
push
in
pop
mov
add
rcl
aaa
into
sub
shll
aas
xchg
jp
sub
fnstsw
cmp
sbb
pop
pop
push
cmp
loop
add
dec
dec
push
pusha
jecxz
dec
dec
cmp
movsb
push
mov
xchg
rorb
or
adc
ret
sarb
or
mov
jp
inc
jae
cmp
jae
mov
pushf
dec
hlt
sbb
sub
dec
add
fistps
jae
test
popa
mov
scas
cmp
push
lahf
inc
pop
aad
mov
repz
or
movsl
insl
cs
test
mov
loopne
push
fisubl
adc
push
sub
adc
pop
iret
cvtps2pi
inc
das
test
add
fidivrs
push
add
dec
push
pop
inc
enter
icebp
adc
sbb
cmp
pop
cmp
sub
cmp
mov
xor
andl
pop
jle
fldl2t
pop
lods
cs
push
out
sbb
jle
pop
and
sbb
rcl
out
sbb
mov
push
mov
xor
cmpsb
leave
lods
xor
pop
cmp
xchg
stos
pop
loope
clc
xchg
shlb
enter
push
popf
mov
adc
loopne
dec
orl
imul
daa
test
adc
addb
scas
pop
ret
cmpb
clc
stos
fstps
pop
sti
push
repz
pop
orb
gs
aaa
inc
add
and
mov
jg
test
xchg
loop
rcrl
dec
jbe
dec
pop
or
hlt
mov
mov
push
scas
pop
mov
es
lcall
arpl
dec
negl
pop
js
dec
jno
es
and
adc
xorb
loope
popa
int3
cs
aad
popa
ljmp
xor
fcomip
add
cmpsb
add
popf
inc
jecxz
les
inc
jbe
in
daa
imul
loopne
aas
fcmovnb
xor
nop
insb
mov
lea
repz
mov
adcb
jle
sbb
add
aad
xor
in
les
ret
je
lahf
jns
cmp
lahf
pop
mov
sub
jl
xor
sbb
dec
ja
jecxz
popa
pushf
pop
xchg
cmpsb
add
mov
js
jle
sbb
orl
add
pop
jp
jmp
jae
or
iret
xor
adc
sbb
or
aam
push
sbb
iret
aad
int3
outsb
inc
pop
rolb
call
xchg
mov
xchg
aas
push
roll
fidivrl
push
lcall
insb
adc
lcall
popf
popw
cwtl
gs
adc
fisttps
pop
inc
xor
leave
in
jb
out
xlat
mov
arpl
shrb
xlat
jl
xlat
mov
cmp
lea
sbb
pop
sbb
and
cmpsl
mov
daa
aas
out
les
cmpb
js
insb
call
mov
fs
push
loope
jmp
sbb
out
inc
sub
inc
aam
and
push
repnz
sub
incl
popf
movq
dec
test
push
xor
ds
je
imul
js
lods
xchg
aaa
jbe
mov
mov
insb
jp
aam
xchg
outsb
sahf
add
repz
mov
push
jo
push
cmp
lods
mov
mov
outsl
int3
jo
mov
call
sub
clc
mov
rclb
fists
xchg
fmulp
dec
test
xor
dec
insl
jle
movsb
cmp
xchg
rcrb
mov
cld
into
push
je
lahf
insb
js
stos
adc
inc
add
popf
ret
cld
push
lret
fs
mov
add
mov
dec
dec
insl
cmp
jecxz
daa
leave
adc
push
imul
jge
sbb
ss
xor
out
leave
popf
les
daa
call
add
adc
mov
loope
ret
loope
xor
or
cltd
xchg
inc
sbb
push
in
dec
xchg
add
aas
jnp
sbb
ret
in
iret
cmpsb
mov
out
jle
dec
icebp
data16
inc
test
frstor
inc
xchg
mov
daa
pop
fiadds
scas
scas
sti
jb
dec
and
inc
adc
daa
daa
outsb
push
mov
arpl
push
cmp
dec
cwtl
sbb
dec
shlb
sub
rcrl
add
push
dec
jne
clc
mov
jo
push
pop
xor
and
fwait
inc
dec
out
rorl
xchg
in
jns
push
leave
je
jle
decb
add
lock
push
jo
mov
xchg
mov
cli
ljmp
xchg
mov
in
add
cli
jecxz
pop
icebp
xor
test
rcl
pop
out
mov
mov
xorl
arpl
dec
pop
xor
mov
or
pop
dec
leave
mov
push
mov
jl
cmp
adc
mov
pushf
xchg
cld
push
insb
adc
mov
mov
and
shrl
xchg
jae
inc
jno
or
xor
or
jae
test
and
dec
aaa
inc
scas
jecxz
xorb
test
aad
andw
push
fiaddl
jp
shrb
test
sbb
lcall
sbb
xchg
or
jb
test
inc
xchg
xor
pushf
and
arpl
cmpsl
xchg
adc
push
push
xor
int3
lds
shl
jge
add
js
pop
lds
mov
push
lret
jo
call
mov
sti
jne
scas
or
add
ljmp
rcrl
out
push
xchg
sahf
xchg
imul
lock
cmpsb
ja
xchg
fdivrs
cmpsl
fldl
or
mov
cltd
pop
or
dec
pusha
sarl
js
xor
cltd
pop
lret
das
shlb
aad
test
jb
sbb
insl
push
shlb
fnstcw
sub
cmp
mov
mov
inc
in
cmp
jne
adc
ret
inc
movsl
mov
jle
out
fldenv
call
xor
jbe
loope
loope
and
push
cmp
out
shrb
imull
jge
enter
sbb
pop
add
xor
aad
mov
out
inc
sbb
loopne
cmp
adcl
out
sarb
pmaxub
iret
push
mov
pop
push
adc
pop
push
and
mov
orl
cmp
clc
orb
push
cmpsb
jno
subl
push
jae
add
test
shl
cmpsb
adc
push
scas
cmp
pop
sub
repnz
daa
or
stos
lret
es
shrl
gs
xlat
aaa
xchg
cmp
dec
popf
mov
das
adc
push
xchg
lock
call
jp
fnstcw
popf
adc
push
jnp
repz
lods
loopne
xchg
ficomps
push
sbb
mov
ja
pop
fwait
roll
inc
imul
subb
popa
leave
and
or
inc
pop
pusha
pop
dec
mov
push
mov
cmpsb
jge
hlt
xchg
pusha
dec
sbbl
fsub
lods
xchg
or
aas
inc
add
in
lds
cmpsb
test
and
pop
mov
cmp
leave
pop
adc
xor
push
std
push
cmp
pop
leave
inc
notl
mov
mov
xchg
adc
data16
movsl
test
cmp
jmp
inc
inc
daa
mov
cmp
cmp
loopne
cwtl
mov
jns
sbbb
popf
dec
xchg
hlt
mov
or
cmpb
mov
xorb
inc
jnp
pop
shll
adc
mov
sbb
stc
cmp
sub
adc
fidivrl
es
jle
subl
and
enter
xchg
push
xchg
inc
insl
jne
aam
shll
hlt
icebp
pusha
or
mov
aaa
push
dec
mov
adcb
dec
fsubl
or
mov
rol
negl
fmuls
ja
rol
push
push
pushf
sbb
sbb
pop
clc
push
xchg
jae
lahf
pop
cld
filds
dec
mov
pop
push
jg
ret
pop
mov
stos
lock
mov
push
dec
stos
inc
imul
lret
mov
inc
mov
jae
mov
pushf
pop
mov
sub
jg
movsl
std
ret
sub
adc
and
scas
add
scas
pop
jge
cmpsl
outsb
in
hlt
mov
bound
push
data16
sbb
push
push
mov
ljmp
sbb
and
sbb
cmc
scas
std
and
mov
jae
and
cmpsl
pop
cwtl
push
mov
arpl
push
jo
mov
xchg
enter
in
in
aam
testb
jl
fstpl
dec
push
iret
adc
pusha
popl
dec
and
aaa
fisttps
stos
insl
xorl
lret
les
ret
divl
outsl
xor
test
rcrb
push
subl
in
dec
mov
in
fistl
xlat
jns
push
mov
and
jbe
or
add
mov
pop
pop
sbb
sbb
fldt
shl
stos
int
inc
aam
add
icebp
pop
xor
ds
sub
add
xchg
rcrb
xchg
out
pop
inc
out
lcall
js
mov
rcll
add
iret
das
xchg
repz
jnp
adc
mov
js
test
jo
mov
scas
add
sbb
repnz
mov
pop
dec
int3
xchg
testl
mov
jbe
mov
sub
repnz
sub
lcall
xor
scas
sbb
push
std
aam
pushf
pop
out
or
rorl
jnp
mov
jae
inc
mov
out
xchg
dec
test
mov
cmp
aam
add
lds
sub
pop
stos
or
cs
fistps
mov
xchg
cmp
jg
in
xor
mov
imul
jmp
loop
mov
out
loop
inc
lds
and
addr16
pop
cmp
xchg
cmpsb
pop
dec
repz
icebp
pop
stc
cmpl
leave
and
mov
ss
push
jno
sbb
icebp
scas
fdivrs
jp
jnp
xor
and
andl
pop
aas
out
add
int3
fdivrs
loope
out
cmp
scas
add
sbb
inc
and
mov
iret
and
xor
out
xchg
inc
es
dec
fnstcw
mov
je
in
outsb
out
loop
xor
push
pop
scas
adc
xchg
xchg
dec
jno
lret
iret
mov
imul
and
test
out
sti
test
stos
or
xor
repz
inc
or
dec
or
or
mov
stos
cmp
xor
jno
pop
inc
cmp
inc
mov
call
xor
movsl
mov
imul
ret
mov
inc
and
hlt
cmp
add
test
xor
jb
add
or
out
shl
adc
cmp
push
jecxz
scas
mov
stos
mov
mov
push
push
inc
lahf
cmp
test
push
xor
xor
movsl
loope
stos
imul
inc
sbb
sub
aas
in
jle
test
jecxz
jp
add
das
pusha
ret
push
ret
pop
aad
push
fsubrl
outsl
xchg
in
aad
pop
test
mov
xchg
xchg
lcall
jmp
int
hlt
add
dec
mov
push
rcrb
jg
sarb
pop
or
xchg
pushf
sbb
mov
push
jecxz
or
lods
rep
xor
jb
or
jne
jbe
mov
add
enter
sti
pop
cmp
add
mov
or
sub
dec
xchg
repnz
out
adc
loop
ja
icebp
push
ret
mov
or
cmp
or
mov
jg
jb
fs
cmpsb
mov
insl
shlb
pop
mov
add
xor
dec
dec
aad
mov
or
stos
add
sub
mov
adc
pop
shll
xor
in
out
fmul
fmulp
inc
sti
scas
pushf
adc
or
repz
mov
mov
fldenv
or
js
jbe
decl
aaa
loopne
cmp
lahf
pop
mov
gs
pop
imul
pop
cmp
iret
mov
inc
mov
movsb
adc
pop
lahf
mov
add
mov
imul
jle
out
pushf
lahf
mov
jmp
lock
dec
push
repnz
mov
add
add
or
pop
sub
bound
add
into
ds
shrb
lods
movsl
es
mov
inc
das
mov
and
pop
test
stc
in
jne
sbb
xchg
gs
mov
jecxz
pop
add
dec
push
out
scas
xor
decb
cmp
push
sbb
inc
sbb
push
jmp
ret
mov
and
outsl
pop
inc
jb
jg
aad
push
mov
mov
jo
lods
mov
dec
out
sbb
push
lcall
movaps
in
fidivs
xchg
cmp
push
aas
cmp
dec
jne
popf
fists
loop
mov
je
inc
xor
insb
dec
mov
in
xchg
pop
enter
into
adc
sarb
andl
clc
cmp
leave
insl
lods
jbe
xor
lret
push
fdivrs
out
sbb
pop
inc
xchg
insl
sbb
loopne
je
fs
into
mov
push
icebp
add
cmp
push
pop
out
mov
or
hlt
jg
cltd
mov
jbe
testl
sahf
or
shll
sbb
daa
ljmp
adc
loope
loopne
inc
or
fsubr
cmc
mov
fsts
fs
xchg
int3
dec
stos
imul
mov
dec
ret
xchg
cmp
dec
fwait
adc
or
jno
repz
movsl
mov
push
pop
in
inc
aam
or
pop
cwtl
sub
cmp
and
xlat
mov
and
xchg
adcb
lret
leave
repnz
add
xchg
inc
and
push
ret
inc
in
and
sub
fmull
inc
sbb
xor
into
fldl
or
out
sar
shl
jae
push
shll
fdivr
jle
pop
sbb
int
out
or
aas
xor
sub
mov
mov
stos
xor
jecxz
rorl
aad
ffree
add
pop
js
ds
cmp
js
fstl
shl
cmp
sub
cs
shl
pop
dec
sub
test
movsl
in
sahf
sub
lds
in
mulb
and
std
clc
testb
mov
cmpsl
imul
adc
mov
rorl
popa
xor
outsl
push
movsl
xchg
jo
fwait
stos
shrl
cmp
dec
mov
mov
hlt
loop
lahf
cwtl
xor
negb
cmovb
jns
push
mov
mov
jae
push
push
mov
mov
enter
test
xchg
inc
inc
mov
insl
shlb
push
and
dec
xchg
icebp
ss
jmp
push
lret
movsl
ds
inc
pop
js
add
cmp
pop
les
cmp
sub
in
adc
in
dec
mov
out
xor
loop
mov
fdivr
testb
sub
dec
mov
push
jg
cli
inc
clc
or
sti
cmp
xchg
xchg
jmp
les
daa
jmp
insb
jle
test
dec
push
add
repnz
loope
add
nop
mov
adc
jo
fcomps
fs
insl
sbb
out
inc
push
cmp
cld
or
and
xchg
add
xor
cld
bound
mov
stos
fs
jns
sar
fisubs
xchg
stc
clc
iret
movb
int3
push
or
xchg
pop
in
rcll
mov
cmp
and
mov
add
jo
fwait
sbb
xor
out
decl
push
cmp
call
mov
jb
inc
rorb
or
clc
xchg
mov
fstpl
subl
stos
push
jg
mov
rcr
rorl
xchg
xchg
cmpsb
jno
jae
imul
ret
jno
cmp
lea
jns
jns
jb
jecxz
pop
mov
aaa
scas
or
dec
cmp
sub
xor
cs
sbb
lds
shl
popa
pushf
pop
jecxz
idivb
and
scas
rcrl
mov
push
jg
mov
jae
dec
inc
adc
fimuls
dec
dec
movsl
fistpl
push
test
pop
lea
and
sub
psubusw
mov
push
stos
loopne
test
js
jge
jae
dec
imull
test
adc
xor
adc
cmp
adc
icebp
les
out
cmp
jne
pop
out
mov
mov
and
push
jns
cltd
repz
jae
cwtl
mov
ret
dec
mov
and
dec
test
jb
mov
xchg
and
pop
int3
mov
and
sbb
sub
jb
xchg
xor
mov
push
ficomps
les
repz
mov
dec
jae
arpl
inc
inc
outsb
std
pusha
gs
push
ljmp
aam
cmp
push
adc
lods
mov
and
ret
cwtl
sub
add
cwtl
push
hlt
sub
and
add
and
into
mov
pop
imul
sbb
dec
xor
orl
sub
mov
pop
scas
push
dec
leave
push
lahf
mov
jecxz
and
icebp
lock
je
movsl
ljmp
out
loopne
icebp
pusha
adc
push
bound
ret
jae
pop
test
and
andb
outsl
xchg
inc
or
outsl
addb
leave
mov
jne
mov
fistl
inc
aas
test
sbb
jmp
push
push
pop
jae
iret
add
and
xchg
inc
outsl
bound
jo
jecxz
mov
cwtl
test
xorb
mov
xor
in
clc
pushf
cmp
in
out
jmp
xor
push
or
xchg
jb
std
mov
cmpsl
pop
loopne
shl
fwait
out
jne
stc
out
adc
addb
sub
push
sbb
pushf
stos
jno
jecxz
insb
adc
cmpsb
mov
xor
cmp
stos
mov
jmp
jo
jae
lret
jae
xorl
sbb
fwait
daa
in
fisubs
push
inc
test
fstpl
cmp
pusha
mov
cmpsl
mov
sbb
cmp
je
pushf
mov
fcompl
iret
scas
mov
sub
adc
daa
push
push
mov
lea
les
inc
std
xor
mov
or
xchg
test
popa
fdivrp
push
xor
jecxz
mov
jne
mov
lods
mov
ficomps
sbb
dec
fidivrs
lods
lahf
sbb
pop
rcrl
mov
pop
in
mov
testl
cwtl
jmp
mov
sti
jno
jle
rcrb
add
mov
mov
iret
dec
jl
into
cmpsb
push
repnz
cmp
xchg
jbe
testb
push
cltd
adcb
lds
popf
jnp
fs
push
mov
or
js
lock
lret
cmp
inc
and
std
cmpsb
cmp
lock
sti
dec
dec
pop
xorl
addl
mov
es
inc
into
jo
and
push
dec
adc
pop
pop
cld
cmp
imul
cmp
mov
ret
mov
xor
stc
aad
jge
xchg
loop
jg
sub
xchg
ljmp
push
mov
mov
les
pop
scas
fisubl
adc
in
dec
and
sbb
and
mov
pop
out
fldln2
loopne
push
inc
sub
inc
stos
pop
push
push
cs
xlat
gs
dec
enter
mov
and
subl
scas
xchg
cmpsl
pop
jno
addr16
test
mov
bnd
stc
fdivrs
cmp
lret
movsl
pop
mov
js
testl
ret
inc
jle
push
out
pop
mov
add
enter
sub
jge
out
vxorpd
or
mov
mov
xchg
scas
je
ljmp
and
aad
jo
pcmpeqd
mov
lds
jp
sbb
jg
pop
fwait
in
imul
lahf
iret
pop
addb
dec
adc
hlt
push
jmp
mov
ret
loope
rclb
sub
enter
gs
pop
mov
mov
push
adc
loop
jno
js
dec
int3
arpl
leave
mov
add
sub
mov
xchg
xchg
inc
mov
icebp
or
cltd
incb
mov
ss
pushf
addr16
dec
push
push
call
pop
sub
scas
ficompl
in
cmpsl
inc
add
add
mov
add
repz
pop
sub
push
movsl
xor
loope
fidivrs
mov
into
push
xor
sahf
test
fidivrl
es
xor
pop
imul
jo
add
rclb
mov
mov
mov
test
movsb
and
clc
scas
mov
pushf
jecxz
aad
add
out
std
mov
mov
xor
getsec
push
iret
xor
andb
inc
jg
push
es
orb
cmc
mov
sti
xchg
out
scas
rclb
inc
adc
or
pop
adcb
mov
addb
cmp
sbb
mov
jno
stos
rorl
lcall
cmp
pop
mov
test
hlt
ret
mov
mov
and
sub
push
push
inc
outsl
ja
xchg
clts
cmp
cmpl
and
mov
stc
int3
and
sbb
cmpsl
jno
mov
push
pop
mov
sub
adc
mov
push
mov
fimull
fwait
lods
xchg
ficomps
popf
sub
outsl
lock
pushf
in
jae
dec
add
cwtl
push
scas
dec
les
in
mov
mov
in
fistl
gs
stc
ljmp
inc
arpl
aas
sti
jecxz
push
call
adc
movsl
adc
aam
xor
mov
sbb
cli
outsb
jle
andb
jle
and
adc
jns
enter
sub
movsb
pop
xor
imul
push
into
cld
push
out
xor
or
lds
scas
cwtl
mov
movsl
fstpt
lock
call
push
outsb
test
shlb
adc
mov
loop
ret
sub
mov
xchg
add
imul
jnp
icebp
punpcklwd
cmp
adc
addr16
iret
hlt
out
mov
dec
lock
into
mov
push
out
out
popf
lods
fwait
scas
adc
adc
xchg
adc
fisttpll
inc
das
cmpsl
mov
inc
imul
ss
call
fwait
jmp
rcll
dec
mov
test
add
mov
mov
mov
js
dec
pushf
in
jne
cmpsb
and
lea
lods
inc
jmp
subl
add
scas
loope
jmp
mov
and
xchg
push
sub
xor
pop
lea
dec
adc
sarb
adc
dec
insl
dec
sbb
cld
cmpl
adc
mov
xchg
xchg
outsl
jge
dec
aaa
ja
les
ret
lahf
push
jne
cmp
popf
pop
and
roll
pop
or
adcb
out
ds
inc
push
mov
into
and
jecxz
mov
xchg
in
ds
xor
xor
pop
in
add
sbb
dec
das
test
jb
mov
jno
mov
aas
dec
pop
pop
dec
cmp
mov
mov
push
cmp
inc
outsl
mov
fsub
dec
inc
scas
les
das
adc
add
lret
into
add
or
sbb
pop
movsl
jo
test
jmp
test
fdivrs
push
cmpsl
mov
insb
cmp
or
cmpsl
xchg
push
add
lock
popa
or
push
mov
dec
mov
push
pop
jbe
lds
push
sbb
xor
push
cs
adc
push
xlat
int
addl
inc
and
or
cmpl
andb
jnp
clc
jmp
pop
jecxz
fisttps
ljmp
jb
nop
lea
push
dec
data16
sti
stc
rcrb
repnz
pushf
mov
adc
pop
repz
or
jle
fadds
sti
fcmovne
sbb
adc
dec
xchg
jno
pop
sbb
out
inc
outsb
inc
add
push
int3
inc
sbb
xchg
fldl
inc
xor
push
pop
stc
dec
lock
adc
in
mov
adc
sbb
aaa
stos
out
xor
imul
sbbl
jp
jo
js
cmp
sbb
outsb
mov
repnz
mov
clc
test
add
mov
jle
not
jl
push
adc
inc
clc
xchg
lds
pushf
sub
stos
decb
and
adc
jb
xorb
and
or
xchg
fimuls
adc
outsl
adc
stc
lret
call
test
or
mov
sbb
inc
call
or
lock
popa
stos
dec
das
xor
sub
pop
cwtl
testb
imul
inc
insl
iret
push
jo
jecxz
add
cmp
jmp
inc
or
data16
xor
push
popf
movsl
dec
cmp
jle
push
sarl
pusha
cmp
and
pop
sub
leave
mov
add
in
scas
mov
daa
ret
jae
and
push
addb
pand
rcl
add
out
xor
stos
jl
mov
jp
jbe
adc
pushf
push
inc
xchg
imul
or
iret
ficomps
movsb
aad
out
and
cs
fbld
pop
es
movsl
sbb
lahf
or
xchg
lahf
xchg
clc
mov
add
and
jmp
xor
sti
orl
add
mov
mov
add
arpl
and
daa
andl
mov
das
cmp
daa
push
sbb
jno
inc
mov
cmp
dec
adc
fimull
pop
incl
pop
cmp
lods
push
or
les
addr16
fwait
gs
adc
dec
mov
popf
sbb
inc
out
xlat
repnz
out
in
outsl
pushf
cmp
lods
lods
push
push
orb
sti
pop
dec
mov
jp
add
sbb
jp
mov
scas
hlt
into
xchg
push
sub
mov
in
sub
xchg
pushf
xorl
adc
mov
pop
mov
fs
push
inc
xor
inc
inc
jle
dec
orl
test
testl
shlb
xchg
sbb
ljmp
dec
push
popa
cmp
inc
sbb
adc
and
cmp
and
aas
dec
jl
push
test
sar
shr
adc
lret
fcoms
cmp
ss
adc
stc
push
xor
lcall
fidivrl
xlat
pop
and
and
adc
sbb
jo
fcompl
in
xchg
jl
jecxz
mov
test
xchg
mov
jne
adc
hlt
sbb
pop
test
pop
adc
lret
xor
aaa
sbb
aad
fsubr
push
rclb
adc
push
and
jg
pop
sub
cli
sbb
dec
mov
pop
add
ret
jg
cmp
rcrb
push
and
xor
pop
arpl
mov
dec
jno
shlb
xchg
divl
fcoms
add
xchg
cmp
pop
mov
or
scas
mov
add
mulb
mov
hlt
call
sahf
jns
jne
out
pop
fsubp
and
cmpl
sbb
repz
cmp
add
xchg
out
idivb
test
stos
dec
push
and
mov
jl
scas
pop
inc
hlt
push
rol
ja
ss
and
mov
ficoml
outsb
movsb
popf
add
xor
inc
and
sub
test
or
cmp
mov
fsubrl
and
orl
add
mov
pop
ficompl
inc
inc
stos
or
xor
fnstsw
ja
sahf
mov
xor
push
lahf
add
popa
jmp
push
sub
pop
sbb
mov
inc
fs
sbb
push
fs
or
pop
std
insb
add
outsb
xor
inc
aaa
sahf
or
jmp
or
dec
in
inc
subl
dec
jp
imul
mov
add
aad
xchg
scas
outsl
jne
dec
or
insb
jo
fdivrl
cmpl
repnz
jmp
add
jl
cmpsl
pop
out
scas
pop
or
lret
call
fs
jnp
arpl
sbb
adc
mov
fadds
lods
push
insb
sub
push
test
pop
addr16
push
pop
ss
repnz
or
pop
mov
in
xchg
scas
mov
push
stc
rorb
cmp
dec
popf
das
mov
jecxz
les
stc
fs
adc
fucomip
pop
cmp
xor
aaa
popa
push
rclb
stc
and
push
mov
mov
cmp
push
stc
aas
cs
dec
push
mov
xor
mov
inc
push
mov
adc
iret
and
ret
and
jo
cmpsb
xchg
std
jae
cmp
inc
xchg
pusha
loop
dec
jnp
sti
dec
arpl
cmp
loope
and
mov
lcall
xchg
cmp
fsubrl
xchg
and
and
xlat
repnz
in
pop
mov
xor
inc
add
test
je
dec
push
scas
xor
cmp
loop
leave
jl
aam
dec
dec
xor
add
mov
es
or
rclb
je
test
test
push
xor
lcall
cmp
fimull
xchg
daa
dec
lea
pop
outsl
clc
and
mov
jl
jmp
hlt
les
jno
cmp
xchg
inc
mov
mov
out
jl
xor
jmp
mov
movsl
rcll
das
fldenv
mov
jns
jno
ds
icebp
sub
push
in
ljmp
mov
loope
adc
add
lods
in
inc
or
loope
xor
adcb
insb
pop
lods
leave
cwtl
ss
or
push
les
insl
mov
clc
mov
das
dec
mov
outsb
cmp
icebp
mov
mov
mov
mov
dec
jb
xor
in
inc
cmp
enter
in
push
sub
pop
scas
add
leave
jne
cs
mov
or
add
add
lret
aam
and
and
ljmp
imul
rcrb
xchg
push
jp
sbb
or
ljmp
lret
push
stos
and
imul
xor
sbb
nop
cmpsl
and
movsb
xchg
inc
in
adc
dec
sub
nop
or
movsb
mov
cwtl
lods
pop
cmpsl
jo
add
std
push
ret
loop
pushf
js
orb
fdivr
jg
flds
and
jne
pop
cmp
mov
loopne
leave
mov
data16
jge
sub
lcall
dec
mov
imul
add
pop
mov
aaa
iret
mov
or
pop
jmp
lcall
push
push
popf
inc
negb
adc
xorb
cmp
lea
jbe
mov
xor
push
test
repz
out
jae
add
movsl
sahf
jg
mov
test
xchg
lds
mov
cld
test
imul
in
test
pop
mov
pop
sbb
out
and
and
push
or
ss
push
fidivrs
ror
or
lea
in
fsub
jle
shll
push
jo
in
arpl
in
int
xorb
and
xor
cld
adc
mov
xor
mov
sub
aad
and
mov
xor
jne
mov
hlt
sbb
mov
orl
nop
or
sub
cmpsl
sbb
push
pop
push
cwtl
lods
jb
test
andl
cld
xor
xor
sarb
pop
sahf
out
or
xchg
cmp
scas
xchg
les
popa
repz
idivl
test
es
sub
shll
notb
fistpl
pop
and
ja
xchg
inc
adc
cmpl
outsl
xor
ja
dec
xor
inc
xchg
jns
addb
lret
push
addr16
lcall
stos
aam
dec
lcall
jp
push
rorb
stos
inc
pop
stos
xchg
mov
jo
push
sub
in
pop
adc
cmp
sub
push
lods
hlt
pop
add
lea
lods
cld
mov
inc
pop
gs
adc
add
xchg
aas
ss
and
adc
mov
pop
mulb
sbb
mov
loope
jp
sbb
fs
xor
into
push
fs
xchg
in
jl
sahf
jge
push
mov
dec
daa
insb
cmpsl
jmp
sub
std
jae
pushf
inc
aad
adc
xlat
outsb
mov
stos
and
mov
or
and
pop
jnp
fstpt
pop
pushl
arpl
push
outsl
mull
push
xchg
jns
stc
daa
mov
jo
pop
xor
cwtl
push
push
cmp
sub
sub
faddp
jno
insb
shrl
mov
cmc
mov
ss
xor
mov
mov
das
mov
sarl
dec
test
or
movaps
jno
mov
mov
adcb
mov
and
cwtl
mov
pop
and
jecxz
outsl
sarl
iret
jbe
dec
or
int
pop
testb
push
jno
mov
in
and
lods
xor
scas
sub
out
andb
mov
push
es
or
aas
and
clc
cwtl
xchg
movzwl
adc
xor
jns
bound
or
fisttpl
stc
cmpsb
push
pop
inc
mov
lahf
jns
sbb
out
repnz
add
imul
jnp
hlt
outsb
add
lret
sub
mov
xchg
and
adc
xchg
and
inc
xor
xchg
lock
loope
cmp
rclb
or
adc
movsl
aam
and
mov
leave
lods
dec
bnd
inc
imul
sbb
fldt
sbbl
pop
aaa
mov
jecxz
or
cmp
push
int
push
jmp
xor
xchg
sahf
mov
jle
nop
mov
or
in
mov
stos
jge
sub
push
mov
fistpll
sub
lret
xchg
ja
repz
cld
jae
or
popf
xchg
inc
sbbl
lods
add
or
test
shrl
leave
std
mov
sarb
test
outsl
pop
mov
loop
movsl
out
pusha
sbb
pop
gs
xor
xor
lods
mov
adc
cmpl
loop
mov
pop
test
mov
mov
sub
jmp
xor
test
dec
push
mov
addr16
add
stos
loop
adc
mov
movsb
jmp
in
jno
aam
pop
or
sbb
xchg
leave
mov
and
out
xor
xor
sbb
add
sub
je
push
and
dec
dec
mov
push
daa
imul
add
jl
data16
xchg
movsb
jae
push
lcall
leave
adc
add
test
adc
das
mov
pop
sahf
mov
cmp
out
pop
imul
adc
jmp
dec
in
cmp
mov
cmpl
push
std
xchg
cmp
inc
push
popf
mov
pop
push
push
adc
and
test
xor
mov
add
cli
pop
dec
push
jno
into
push
pop
movb
push
xchg
push
fidivs
outsb
hlt
add
dec
fstps
sbb
pop
mov
jb
mov
stc
jl
xor
icebp
int3
pop
push
inc
pop
vmulsd
and
into
push
pop
nop
loopne
dec
mov
push
dec
pop
adc
or
pop
dec
cld
sbb
dec
sub
test
ss
rcll
or
jmp
push
or
mov
test
jg
mov
mov
cli
lock
sub
test
jno
xchg
mov
mov
xlat
cmpsl
fistps
xor
shr
dec
adc
xor
mov
leave
or
mov
cmc
jns
push
cmp
push
cltd
inc
add
out
mov
pop
push
xchg
jnp
inc
adc
lods
mov
addb
out
jo
stos
cmp
clc
add
sahf
mov
mov
jge
push
mov
out
add
push
xor
cld
addr16
les
jbe
jbe
mov
je
in
dec
or
mov
test
fstp
rcrl
or
jecxz
aad
dec
stos
mov
mov
and
sbb
pusha
rcr
mov
mov
cs
pop
dec
cmp
leave
pushf
or
mov
jmp
mov
mov
sarb
rol
pop
push
sub
dec
mov
stos
test
mov
pop
cmpsb
fldenv
sub
jns
std
mov
lea
sub
data16
jecxz
arpl
xchg
dec
lea
sbb
sbb
mov
sbb
out
icebp
push
gs
cli
sub
stos
out
xchg
dec
stos
aam
jge
xchg
fdivs
adc
pop
int
push
and
or
cmp
mov
movsw
inc
and
mov
out
je
lea
push
fcmovne
pushf
jg
pop
mov
push
jns
das
cmp
rclb
mov
and
or
pop
iret
lds
push
xor
pop
cmpsb
cmpsl
xlat
test
fnstcw
push
mov
mov
jb
nop
mov
dec
shll
vmovdqa
out
cmp
jle
jno
pop
cltd
xor
mov
loope
xchg
push
orb
jo
jo
dec
movq
into
or
push
nop
pop
xchg
out
mov
popa
add
hlt
mov
mov
adc
incl
cmp
ljmp
sbb
scas
fstps
popf
sbb
xchg
out
inc
daa
cmp
cmp
cwtl
sub
jp
in
in
shll
jge
popf
out
xchg
or
out
push
lods
decl
je
aaa
jle
stos
push
pushf
dec
cmpsb
mov
xchg
adc
out
xchg
es
subb
pushl
scas
jb
jno
ret
aam
cmp
leave
mov
outsl
or
aas
cli
pop
daa
jne
das
jmp
jb
mov
jae
lods
jb
mov
xor
add
lock
dec
push
dec
mov
inc
jns
mov
out
aaa
cld
sub
clc
notb
mov
push
mov
imul
push
daa
sahf
into
mov
adc
cmpsl
jmp
mov
rcrb
fdivp
inc
sahf
jmp
jle
dec
lds
xor
pop
pop
jns
ss
iret
sahf
mov
int
loop
xchg
notl
test
clc
sbb
rolb
iret
push
fwait
scas
repnz
xor
sahf
mov
mov
or
mov
pop
mov
ljmp
xor
push
mov
dec
dec
shlb
xor
pop
shlb
rcrl
int3
push
ljmp
imul
mov
sub
cli
push
inc
dec
sbb
mov
mov
xor
lret
xlat
dec
xchg
jnp
pop
and
test
js
adc
pop
ret
pop
xor
ret
das
fcomps
xchg
popa
fimull
mov
pop
xchg
and
sti
loope
mov
pop
mov
add
sbb
and
jbe
aad
inc
stos
push
out
aam
add
ret
or
in
popf
add
inc
pusha
xor
inc
and
pop
push
in
adc
add
inc
in
push
test
mov
xchg
cmpsb
mov
pop
or
xor
aam
xor
gs
add
xchg
push
jnp
cwtl
xlat
pop
dec
adc
data16
pop
loop
push
xchg
mov
jne
pop
popa
je
daa
push
xor
xchg
mov
jecxz
sub
or
fildll
cwtl
mov
pop
xchg
cmp
popf
pop
cmp
xor
clc
stc
pop
xchg
dec
addr16
pop
ds
loopne
mov
iret
pop
cmpsl
fdivp
sbb
jp
jb
clc
or
mov
mov
pop
jmp
stc
test
xor
lock
fwait
cmp
fcmovu
imul
aas
repnz
inc
jbe
dec
pcmpeqw
sub
mov
ljmp
inc
sbb
daa
in
icebp
ret
cmc
adc
xlat
sqrtps
into
popf
jge
es
repz
rcl
enter
mov
std
pop
mov
popf
and
mov
xor
scas
mov
nop
notb
push
ret
cmp
dec
xchg
cwtl
and
jmp
lret
cmc
pop
xchg
jne
and
sbb
es
xor
popf
mov
out
mov
adc
mov
add
pushf
inc
dec
xor
dec
cltd
rorb
lcall
mov
lea
mov
shll
adc
cmp
lea
jmp
jmp
xchg
sbb
inc
xchg
mov
incl
dec
movsl
pusha
in
mov
sub
idiv
adc
aad
and
fwait
sahf
xchg
adc
mov
jns
fisubl
cltd
adc
hlt
xchg
shlb
xchg
add
add
jg
pop
jmp
movsl
or
cli
repz
aas
adc
jae
and
and
adc
mov
lods
mov
int3
jnp
pusha
jp
sub
lods
xor
sub
cmp
rclb
js
mov
dec
mov
lret
movsl
inc
out
pop
int
loop
lret
sub
ror
lods
subl
sub
cli
test
push
jbe
stos
mov
sbb
mov
or
mov
outsl
lea
aas
mov
seta
add
push
lcall
sub
out
cmp
adc
adc
sub
pop
adc
or
enter
mov
dec
in
fs
arpl
arpl
js
mov
xchg
sbbl
lea
and
mov
mov
push
xorb
mov
inc
sbb
daa
aad
dec
in
push
inc
ss
mov
jmp
inc
adc
rclb
rcll
ret
and
push
jmp
addr16
movsl
cmp
aas
inc
mov
fnstcw
sbb
dec
lret
mov
adc
xchg
out
mov
jae
fsubrl
std
jns
dec
fsubl
fbld
lcall
in
inc
lds
mov
ljmp
mov
jmp
pop
idiv
movsb
xlat
mov
mov
xchg
test
add
in
ja
test
out
jns
pushf
movsb
dec
fwait
hlt
inc
sbb
in
arpl
xor
add
cmp
loopne
lods
shlb
dec
jmp
fadd
insl
cwtl
sbb
mov
or
mov
mov
mov
add
push
xchg
push
gs
out
and
repz
sbb
sub
or
enter
pop
shl
fbstp
xor
sbb
decl
dec
bound
pusha
sarl
mov
mov
outsb
xor
mov
flds
dec
lret
sbbb
movsl
xor
jl
addb
out
jp
pop
xor
sub
or
sub
jns
push
daa
jp
es
add
movsl
mov
lds
add
inc
fdivr
lods
loop
or
arpl
xor
out
push
add
popa
int3
sarl
xchg
gs
adc
push
mov
ret
decb
add
add
mov
xchg
mov
sub
movsl
jae
dec
sub
nop
lods
fsubrl
aam
outsl
aas
in
push
pop
out
mov
sub
sbbb
test
sbb
jmp
in
mov
fidivrl
out
xor
pop
fstpl
out
daa
shll
pushf
fdivr
xchg
sub
dec
push
push
fs
push
cmp
fucomp
addr16
sub
sub
push
ljmp
or
mov
ss
xor
sub
icebp
pop
sahf
jp
sub
jle
inc
icebp
sub
xor
mov
xor
stos
add
data16
mov
into
shl
mov
sbb
jnp
cmp
daa
imul
icebp
sti
jbe
push
pop
es
movsb
jmp
mov
and
pusha
fidivs
xor
or
sub
out
push
adc
dec
out
jns
cmpsb
cmp
push
fs
subb
and
aam
pop
adcl
adc
xor
adc
mov
bound
mov
inc
mov
add
mov
xchg
cmpsb
mov
and
mov
xchg
pop
mov
jmp
inc
mov
and
cli
fstpt
flds
sbb
test
pop
in
sub
in
pusha
jecxz
clc
notb
in
or
test
sbb
adc
inc
sbb
in
jp
mov
sbb
shll
rorb
cmpsb
sbb
je
adc
scas
sub
ror
push
shld
je
loop
push
or
leave
aam
fnstenv
hlt
not
cmp
cmp
pop
push
aam
in
mov
push
mov
cmp
cli
shrl
jge
push
inc
test
lret
movsb
addr16
mov
in
fcomip
test
xor
lds
cmp
or
sub
out
call
cwtl
dec
adc
or
test
imulb
inc
pop
mov
adc
sbb
mov
xor
insl
mov
dec
popa
call
js
pusha
mov
mov
loope
stos
dec
cmp
sub
orb
inc
or
push
test
iret
and
rcrl
jno
mul
pushf
out
lar
int
rcrl
enter
sub
dec
mov
and
insb
sti
aam
mov
inc
xchg
sarl
mov
inc
mov
loope
add
popf
div
es
ljmp
iret
inc
push
jae
and
fdecstp
outsl
or
or
xchg
orl
cld
aam
into
dec
lods
inc
pusha
cmpsl
fisttpl
scas
mov
stos
xchg
jp
sub
inc
aad
mov
je
mov
adc
fwait
lock
push
filds
xor
test
cs
enter
inc
inc
dec
sub
xchg
cmp
imul
inc
out
repz
xchg
scas
sbb
inc
aas
aad
mov
adc
mov
sbb
out
xchg
sti
lret
int3
shll
aas
sub
xor
mov
add
arpl
pop
ss
sbb
movsb
pusha
cwtl
pop
addr16
cmp
sub
in
push
aad
ror
cmpsl
cmpl
cmpsl
inc
mov
aam
ret
ljmp
inc
xor
dec
push
mov
xchg
iret
inc
xor
les
and
insl
std
mov
mov
push
mov
xor
pop
push
fsubrs
adc
dec
push
in
dec
in
and
mov
fbld
ljmp
ja
loop
out
into
ret
std
popa
arpl
push
dec
lahf
mov
push
or
mov
test
or
push
leave
cli
shll
pop
pop
or
mov
pop
test
push
lcall
xor
add
fsubs
mov
push
xchg
inc
loop
adc
pop
mov
mov
out
out
mov
mov
pushw
cmpsb
ret
dec
sub
sbb
popa
mov
fistpl
hlt
mov
add
ljmp
addr16
fidivl
xor
out
jge
out
repz
or
int3
or
fsts
or
out
dec
pop
and
daa
fcompl
int
ljmp
mov
push
xchg
lods
cs
cmp
mov
mov
mov
jne
into
or
cmpsl
dec
mov
in
dec
adc
in
dec
mov
mov
loope
pop
sub
cmpsl
adc
push
dec
repnz
aaa
pusha
testb
jne
mov
fwait
imul
loope
sub
mov
dec
dec
or
mov
mov
mov
mov
in
sti
es
sbb
mov
xchg
inc
xor
pusha
pop
outsl
mov
es
lret
sarb
stc
dec
xchg
fdivrl
clc
pop
or
movsb
mov
cmp
aam
mov
mov
aaa
xor
ljmp
mov
aam
jmp
or
iret
mov
insl
inc
std
dec
or
cmpsb
or
imul
dec
push
xlat
cmp
arpl
cmp
push
sti
aam
std
mov
mov
rcr
push
cmc
jg
jecxz
pop
icebp
jbe
mov
mov
out
sbb
sub
add
adc
lcall
in
lcall
push
ja
cs
sub
or
scas
add
inc
bound
xor
jl
mov
dec
repnz
negl
xchg
jae
mov
pop
nop
out
or
je
cmpsl
mov
push
or
inc
mov
mov
and
xchg
loopne
xchg
cmp
aad
adc
xor
and
pop
data16
push
in
jns
and
in
pop
fstl
mov
add
fs
add
addr16
test
inc
into
inc
shl
mov
sti
lret
icebp
mov
test
and
sbb
pop
add
xchg
mov
sub
pop
mov
out
pop
sbb
std
mov
mov
xchg
bnd
mov
push
xor
je
je
pop
bound
push
repz
andb
mov
and
outsb
add
sbb
nop
addr16
push
mov
add
adc
sarl
fmul
negb
xor
scas
cmp
sub
enter
sub
gs
sub
fistpl
adc
icebp
out
push
lds
int3
adc
test
rorb
add
outsb
pusha
mov
jb
xor
add
pop
dec
mov
cmc
stos
enter
adc
stos
inc
in
inc
mov
push
movsl
mov
jl
addr16
mull
adc
dec
outsb
mov
xor
push
xor
cltd
ficoml
std
clc
pop
mov
test
xchg
xor
mov
lods
inc
or
fnstsw
out
jbe
push
imul
movsb
inc
mov
mov
jb
xchg
std
xchg
xlat
shll
insb
inc
lods
cmc
xchg
outsl
adc
pop
orb
pop
shrb
daa
jg
inc
push
mov
jp
add
lcall
mov
add
xchg
nop
jmp
fsts
mov
cltd
push
dec
imulb
mov
push
sub
int
idivl
scas
dec
add
cltd
pushl
enter
rcr
pop
ficompl
xchg
fidivs
mov
dec
stc
mov
out
mov
inc
adc
jo
push
sti
fcmovnb
test
or
mov
es
dec
sub
jae
dec
dec
mov
inc
call
fildll
stos
pop
inc
lods
xchg
fnstcw
and
lret
xor
dec
out
nop
dec
mov
inc
jecxz
mov
gs
leave
das
jmp
enter
aam
cmp
pop
loop
pop
or
rol
push
out
cmpsb
cmc
aad
popf
out
jl
push
jbe
lds
mov
xchg
pushf
int3
fwait
stos
lret
cltd
icebp
fcomps
add
hlt
jae
enter
lods
cmp
stos
std
push
jp
and
cwtl
cmp
mov
jl
pop
imul
arpl
mov
push
or
aas
es
mov
les
push
push
sub
mov
test
scas
sbb
sub
cmp
xchg
mov
imul
inc
xor
repz
ljmp
fisubl
call
jo
arpl
mov
stos
mov
and
movsl
daa
imul
mov
lret
int3
outsb
insl
dec
sbb
sti
jne
jo
not
ret
cmp
sub
sti
jo
push
sti
xchg
push
add
jns
scas
push
adc
push
xchg
outsl
inc
bound
imul
jno
ror
scas
icebp
push
aaa
dec
mov
je
or
mov
sbb
xchg
imul
mov
jmp
fisttpll
int3
enter
hlt
dec
xor
scas
sub
adc
push
rcr
cmp
ljmp
jg
jle
xor
loope
dec
jg
pop
push
pop
aam
cmpsl
gs
xor
popa
mov
xchg
js
adc
fstpt
in
cmpsb
lret
or
sbb
cs
int
imul
mov
lea
jns
xchg
cmpl
stos
mov
cmp
fstps
out
mov
rcl
add
adc
pop
ds
or
add
push
insl
stos
fwait
aas
mov
pop
jle
lret
cld
add
sahf
inc
mov
pop
in
inc
aam
mov
pop
pop
xor
cwtl
push
arpl
movsl
rcll
clc
lcall
push
fcompl
scas
lahf
mov
add
lods
pop
leave
adcb
xchg
ljmp
sub
push
frstor
push
and
xchg
jl
inc
dec
insb
bnd
push
dec
popf
mulb
inc
idivb
jns
mov
mov
xchg
push
push
inc
xchg
aas
hlt
mov
pop
push
insl
daa
xor
out
fs
sbb
sbb
add
std
jecxz
repnz
pop
das
mov
mov
and
jge
push
sub
cld
xor
mov
and
lods
or
icebp
sub
ret
adc
cmp
clc
add
f2xm1
ja
cli
mov
lret
pop
negb
int3
notb
mov
jp
in
fisubl
mov
cmp
sub
xchg
popf
je
pop
mov
inc
add
das
sbb
push
repz
mov
dec
sahf
ljmp
push
jge
pop
in
arpl
add
ja
inc
rcl
pop
faddp
xchg
cld
jle
push
dec
inc
jle
int3
push
add
dec
inc
sub
popf
fisubrl
sahf
jno
out
es
push
movl
loop,pt
xchg
aas
mov
push
and
out
push
sub
push
sub
clc
dec
fisubl
xchg
stos
into
or
out
outsb
jmp
stos
into
mov
ret
or
jmp
in
subb
adc
sub
cmc
ja
bound
hlt
cld
push
pop
fcomps
data16
out
shll
scas
xor
xchg
and
pop
loopne
stos
dec
fisubrs
xchg
shll
pop
lods
mov
dec
cmc
cmpsb
mov
stos
out
lcall
lods
adcb
das
test
jbe
aaa
int
stos
or
push
push
or
subb
idivb
ror
notl
inc
imul
mov
jmp
lcall
add
or
mov
dec
sarb
xrelease
inc
cld
cmpb
out
xor
mov
loop
and
arpl
loop
or
js
test
pop
push
add
pop
mov
test
cmpsl
mov
shll
pcmpgtd
mov
mov
sarb
dec
jle
daa
jno
js
cmp
pushf
push
or
xchg
push
into
pop
ss
adc
pop
les
test
mov
daa
xlat
mov
sbb
sti
xor
inc
cmp
mov
mov
loop
push
inc
inc
and
jg
int
pop
ret
lods
mov
add
ret
xchg
das
imul
mov
mov
sub
mov
dec
xchg
int3
mov
fmulp
inc
cmp
cmpsl
push
enter
lcall
push
sub
fisttpl
pop
out
fwait
popa
inc
mov
ds
lds
xor
push
in
hlt
movsl
movsl
aas
imul
jne
loopne
mov
sbb
enter
dec
in
dec
xlat
lock
ljmp
sahf
jnp
fs
pop
insb
inc
sbb
jmp
jo
subl
xorb
and
cmp
test
jge
out
mov
jo
mov
loop
loope
mov
xchg
test
jno
sbb
mov
mov
mov
testb
icebp
mov
ss
jecxz
stos
push
mov
jno
fdivl
and
push
cmp
mov
loope
cmpsb
xor
daa
push
pop
js
shl
mov
xchg
lods
mov
in
sbb
xor
nop
es
fisubrs
in
in
les
cmc
pop
sbb
fsts
sub
xlat
sahf
fistl
adc
sbb
dec
mov
xchg
jne
sub
jl
pop
mov
add
mov
pushl
push
mov
cmpsb
push
scas
dec
mov
jmp
mov
push
in
push
pop
push
cmp
stc
cwtl
out
sbb
jnp
jnp
push
mov
pop
cmpsl
jno
cmp
pop
clc
out
data16
cmp
inc
xor
aam
and
or
jecxz
popa
nop
daa
cmc
cmp
outsl
sbb
in
verw
add
fcmovb
negl
das
mov
jecxz
fmul
inc
cwtl
sub
push
sahf
pop
stos
mov
and
addr16
inc
into
mov
aaa
sbb
push
mov
lock
xor
test
stos
xor
adc
sub
mov
scas
cmp
roll
lods
mov
ret
sub
mov
xchg
xchg
push
pop
fstps
in
and
sub
mov
std
jecxz
cmp
push
jbe
jl
ret
mov
sbb
xorl
jno
jmp
jg
ficompl
ja
sub
inc
mov
pop
lret
pop
mov
push
and
mov
sub
jno
add
test
ljmp
mov
xchg
sti
xlat
add
not
popa
cmpl
or
stos
cmp
fst
sbb
or
mov
outsl
inc
pop
jne
daa
test
push
enter
jb
int
insb
orl
aam
loopne
pop
call
imul
repz
ret
jmp
mov
dec
adc
or
push
stc
call
bound
mov
inc
sub
pop
mov
outsb
subl
icebp
test
push
mov
pop
in
roll
and
ret
jl
rcrb
je
pop
fldcw
out
sti
or
jecxz
lret
jmp
mov
push
inc
fadds
mov
push
rolb
wrmsr
popf
enter
les
das
dec
mov
movsb
repz
mov
xor
jecxz
pcmpeqw
mov
xor
adc
pop
lret
adc
add
mov
add
push
sahf
popa
mov
xor
push
ret
adc
mov
add
js
sbb
pop
or
sbb
inc
cmp
sub
sbb
and
adc
sbb
mov
leave
scas
add
push
sub
ret
xchg
dec
sbb
jp
shl
insb
mov
inc
xchg
jnp
xlat
insb
sbb
fldcw
aaa
lret
cmp
inc
dec
pop
add
aaa
jmp
pop
xchg
es
jl
jnp
jmp
dec
fmuls
push
inc
cmp
and
leave
popa
dec
hlt
and
dec
sbb
cmpb
mov
add
push
sub
scas
fstps
imul
or
lods
rclb
jae
stos
mov
mov
jno
push
fistpl
js
cs
jle
int3
pop
fisubrl
xchg
lcall
jmp
into
loope
push
mov
test
es
cmp
adc
fsincos
cmp
stos
mov
js
aam
push
pop
push
adc
cmp
adc
call
xor
push
adc
cmp
fs
aaa
pop
jo
cmpsl
ss
ljmp
mov
pop
aad
sbb
push
stc
adc
push
xlat
cmpsb
lock
aas
aad
imul
insb
sahf
xchg
push
pop
jnp
inc
aas
aam
xchg
sbb
jecxz
pop
push
or
js
jg
inc
mov
and
in
rcrl
cli
mov
xchg
sbb
xchg
or
movsb
jg
bound
shr
mov
pop
cltd
adc
call
int
push
fdivrl
out
mov
scas
int
cmp
and
data16
js
bound
into
test
push
adc
sub
out
sub
cmp
ljmp
je
das
int3
repnz
orl
mov
xchg
xchg
jnp
lea
fbstp
sbb
mov
cwtl
push
xchg
add
cmp
push
fwait
xor
xchg
cmp
mov
hlt
or
cmpsl
cmpsl
cmp
sahf
std
xor
and
gs
ljmp
aas
lds
repz
es
test
mov
inc
imul
sti
sbb
lods
xchg
or
push
mov
insl
aas
leave
ss
nop
leave
pushf
push
aas
sbb
rorl
ficompl
add
xchg
lret
les
inc
push
mov
add
stos
add
pop
or
inc
cmc
xor
aam
outsl
xchg
js
lahf
jbe
rcll
and
xchg
lret
mov
lret
jmp
sub
dec
test
dec
jne
mov
jnp
xchg
or
in
repnz
xchg
push
ss
outsb
ret
dec
dec
test
and
lret
adc
mov
xchg
sub
or
movd
push
mov
call
or
insb
jbe
cli
pop
xor
shl
fcmovnbe
mov
lret
mov
arpl
pop
push
insb
adc
jbe
lret
test
add
jmp
leave
loop
mov
movsb
rorl
outsl
xlat
pop
sti
adc
fcomp
dec
adc
sbbb
leave
pop
inc
and
icebp
sbb
inc
or
std
into
jns
mov
push
insl
xor
or
popf
push
out
push
insb
stos
sub
clc
cmpsb
test
cmpl
into
mov
and
jmp
and
pop
mov
xchg
scas
sbb
pop
adc
sarl
subl
jg
das
imul
pop
xor
push
lret
mov
mov
movsl
or
fsub
call
outsb
mov
ret
hlt
dec
or
mov
out
inc
out
dec
cwtl
dec
or
mov
sbb
push
xchg
adc
call
dec
inc
test
push
xchg
cli
cli
sbb
xor
and
push
iret
mov
outsb
push
push
push
aas
testl
test
push
dec
fnstcw
iret
or
popa
jbe
std
adc
hlt
sarb
jbe
pop
jl
inc
cs
aas
sbb
addl
push
pop
out
fbld
imul
cmc
mov
andl
cmc
add
mov
cwtl
cld
cmpsb
sbb
mov
mov
inc
insl
shlb
jne
inc
out
xchg
rcr
shlb
negl
xchg
adc
pop
push
fsubs
jg
mov
inc
nop
cmp
bound
xchg
mov
cwtl
dec
jp
mov
stos
cli
lcall
mov
inc
fwait
fs
push
and
xchg
and
aam
cli
cmp
pause
mov
les
lahf
aaa
jne
inc
loopne
xor
adc
popa
lods
shr
mov
mov
cmp
xchg
push
dec
sbb
fsts
cmp
sbb
test
sbbl
push
inc
jp
pop
inc
jns
jno
lcall
shll
loopne
loope
sub
xchg
negl
sbb
add
inc
mov
lcall
adc
xor
jle
mov
push
out
push
shlb
mov
test
pushf
js
imul
mov
push
jle
cld
fwait
lods
popf
lock
xchg
movl
xor
sbb
cltd
jno
sbb
lock
sbb
mov
pop
jge
loope
mov
add
hlt
shll
mov
imul
pop
add
push
lcall
jne
pop
and
push
ljmp
cmpsb
push
jge
pushf
add
ljmp
shrb
rcll
rorl
test
int3
dec
adc
mov
inc
lret
cmpsb
in
rorb
push
or
xchg
fcoms
mov
adc
mov
push
inc
cwtl
ja
and
fisubl
popa
ss
sar
push
or
subl
mov
daa
repz
imul
arpl
fwait
scas
mov
aad
leave
in
adc
lret
xchg
stos
pop
xor
pavgw
or
jo
pop
outsl
xchg
jne
fcom
add
pusha
push
shll
push
stc
aam
push
mov
inc
aas
inc
insl
add
add
popf
lds
dec
andl
scas
jl
addb
adcb
xchg
pop
mov
xchg
std
jp
cwtl
mov
lret
ljmp
js
add
jns
scas
insl
cmp
aas
or
mov
pop
pop
movsb
and
fisubrl
dec
pop
add
dec
add
sub
imul
cmpsb
daa
inc
pop
subl
adc
cmc
mov
aaa
data16
push
jne
xchg
adc
dec
stos
shll
fimull
sbb
lret
pop
and
cs
xchg
adc
loop
add
dec
or
fs
mov
rolb
mov
push
in
cmp
dec
push
lea
pop
rorb
lret
sti
mov
mov
cmp
jecxz
or
fstps
cmc
xor
xchg
mov
ficoms
movsl
xchg
adc
fldt
mov
incl
mov
xchg
sub
jno
inc
xor
push
out
testb
sub
xchg
adc
and
push
cltd
mov
js
outsl
inc
add
cmp
roll
push
clc
pop
addr16
pop
xor
rcrb
bound
xchg
in
loopne
cmp
test
dec
nop
test
popf
outsl
mov
pushf
add
shlb
mov
dec
inc
insl
dec
cmc
jo
xor
push
cmp
and
fildll
dec
sbb
jp
adc
sbb
xchg
or
xchg
fiaddl
add
aam
inc
pop
jb
adc
out
cmp
pop
jno
inc
stos
cmp
fs
sbb
jne
adc
xchg
jge
test
scas
clc
xor
and
xchg
inc
sahf
mov
jnp
aaa
call
leave
mov
nop
test
je
jnp
xlat
push
cmp
sub
in
xchg
int3
nop
call
mov
cmp
push
mov
mov
pop
cmc
aad
mov
pop
pop
lods
xchg
push
mov
sub
jmp
mov
ret
pop
and
push
cmp
xchg
call
pop
add
outsl
cld
aas
pmulhuw
lods
and
es
dec
sbb
mov
outsl
sbb
out
into
leave
insl
daa
xor
add
inc
mov
push
scas
out
cmpsl
callw
dec
inc
jne
scas
cltd
call
xor
dec
ljmp
pop
inc
in
mov
or
mov
leave
std
pushf
fs
jge
sbb
call
mov
dec
mov
lea
cmc
adc
and
sub
cmp
ret
push
fwait
lock
jns
cltd
in
stc
int3
and
mov
jns
loopne
sbb
imulb
jnp
jge
pop
roll
pop
or
push
stc
repnz
mov
mov
xchg
adc
inc
bt
lea
push
xacquire
push
mov
popa
jne
dec
scas
mov
adc
mov
negb
pop
mov
pop
xchg
cmpsb
jbe
cmc
sti
inc
fmuls
fidivs
pop
pop
sbb
fidivs
hlt
fnstenv
mov
xchg
inc
out
aaa
xchg
ja
popa
xchg
mov
mov
out
fisttpll
pop
in
int3
lods
xchg
xchg
jo
and
adc
in
cwtl
adc
rorl
stos
jg
es
mov
rorl
scas
sub
pushf
lret
dec
jns
push
adc
mov
lcall
jae
pushf
push
test
ss
jl
stos
ficompl
pop
into
mov
jbe
lret
outsb
shrl
ja
inc
mov
jnp
adc
cmp
lret
jo
fsubrs
pop
or
mov
shlb
mov
jp
aad
mov
cli
push
mov
adc
cmp
jle
repz
jp
int
xchg
and
out
inc
adc
in
js
push
and
mov
sbb
and
add
mov
pop
pop
out
sub
mov
adc
add
xchg
xchg
int3
or
pop
jl
cwtl
add
lahf
loopne
cld
loopne
and
or
sar
rcll
xchg
fcompl
xor
aaa
push
popf
jb
movsb
inc
das
lcall
out
and
sub
popa
orb
jns
sub
scas
xchg
push
test
sahf
mov
mov
in
inc
sti
pop
addr16
adc
sub
mov
xchg
outsl
mov
xor
imul
call
cltd
je
push
jae
fs
test
xchg
clc
std
mov
pusha
mov
and
xor
and
sbb
dec
in
enter
mov
xchg
enter
icebp
push
dec
mov
clc
xchg
inc
shrl
push
ss
mov
or
std
jecxz
pop
mov
popf
adc
inc
jge
cmc
pushf
pop
xchg
pop
sub
shrb
mov
rol
cmpsl
add
mov
cmp
mov
stc
hlt
cli
jl
mov
inc
inc
mov
inc
scas
fwait
mov
addr16
in
adc
outsb
xor
xorl
jne
push
inc
std
lds
dec
adc
and
jl
mov
dec
iret
jg
sbb
jno
or
inc
cmc
push
ljmp
in
idivl
adc
ja
imul
bound
data16
iret
jne
adc
pop
popa
test
test
iret
sub
sbb
loope
pop
xchg
stc
xchg
adc
or
cltd
cmp
mov
stc
lods
add
xor
insb
int
lret
sub
pop
sub
cmp
xchg
cmp
leave
ficomps
cmp
lea
mov
loopne
cmp
mov
int
inc
cmp
hlt
mov
lds
adc
insb
orl
mov
dec
dec
ds
sub
scas
fnstsw
or
arpl
std
clc
das
stos
mov
dec
push
adc
mov
out
int3
lods
mov
xor
cli
cmp
cltd
or
lret
xchg
push
jo
sbb
rcll
lds
sbb
fstpt
je
sahf
sbb
mov
inc
jae
inc
and
jmp
xlat
lret
push
adc
dec
mov
test
add
add
mov
add
inc
ss
push
cmp
mov
pop
rorl
fsubp
mov
stos
dec
stos
icebp
dec
stos
inc
pop
sbb
or
jl
stos
mov
dec
jne
fsub
dec
out
imul
push
jmp
sub
and
pop
jns
lock
sub
inc
dec
iret
cmp
xor
sahf
xor
icebp
test
jmp
cwtl
sbb
hlt
add
repnz
shlb
push
mov
inc
hlt
in
pop
mov
jmp
adc
push
in
jne
xchg
xchg
pop
les
pop
push
lds
push
div
bound
jg
mov
xchg
xor
sbb
mov
mov
dec
aad
cld
mov
call
int3
fisubl
ljmp
cmp
hlt
scas
fwait
nop
addr16
enter
adc
les
add
imul
faddl
ss
pop
jb
jne
sub
popa
iret
out
shr
mov
addr16
inc
test
xlat
inc
inc
dec
jle
cmp
cwtl
inc
cmp
cli
xlat
int3
or
push
sub
cmp
ja
pop
mov
sti
cmp
popf
adc
rclb
fsubp
mov
imul
movsb
js
pop
out
into
push
lret
xor
lods
imul
bound
and
cmp
inc
ficoms
subl
mov
testb
jge
out
mov
orb
stc
loop
aam
inc
lods
and
sbb
push
xor
popf
inc
mov
sub
xor
lahf
fistps
inc
push
out
pop
or
mov
lock
int3
mov
test
xor
add
and
cmp
idiv
mov
xor
mov
add
mov
scas
sahf
lcall
mov
cwtl
mov
sub
sti
daa
sub
jg
popf
mov
cmpsb
in
in
mov
cmpsl
cmp
test
xchg
add
mov
xchg
or
dec
mov
rcrl
dec
in
add
cltd
cmp
iret
test
pop
jmp
push
inc
sub
pop
cmc
and
push
mov
cltd
sbb
mov
push
mov
aam
mov
jne
mov
add
cmp
js
std
pop
aaa
movb
mov
xchg
btr
adc
jbe
and
mov
pop
clc
inc
pusha
lock
std
ror
xchg
dec
orl
ret
mov
pop
insb
fmuls
inc
ficoml
hlt
jno
insl
enter
mov
pushf
cs
insb
jl
jbe
push
inc
push
std
clc
mov
sub
jno
xchg
xchg
jb
and
out
or
or
dec
add
jns
xor
pop
scas
rclb
cmp
pop
clc
es
enter
sbb
cmp
or
mov
hlt
sahf
les
and
setp
ret
scas
aas
icebp
jle
js
inc
leave
jecxz
sub
arpl
sbb
dec
jmp
ret
hlt
xor
dec
mov
or
popf
decl
xchg
dec
xchg
cmp
arpl
sbb
cmp
ret
cmc
jne
js
iret
es
sbb
xor
into
push
cmpsl
cmpsl
lret
adc
loop
mov
add
mov
pop
or
jl
xchg
pop
in
lret
jnp
in
iret
sub
andb
lds
jmp
outsl
xchg
dec
mov
stos
pop
sar
out
es
inc
lock
mov
out
jne
pop
dec
jns
fs
push
push
fldt
insb
call
scas
adc
int3
daa
outsb
mov
call
dec
mov
jl
add
inc
mov
jbe
xor
push
aad
clc
arpl
test
dec
jno
shlb
inc
mov
xor
call
push
push
mov
inc
sti
xor
mov
cmp
mov
inc
and
rorb
jecxz
inc
push
pop
jno
lods
xor
arpl
scas
or
mov
fisttpl
add
push
stos
ljmp
or
jns
in
popa
cmpsb
pop
dec
es
inc
repz
test
adc
mov
ret
ud0
pop
mov
sub
push
push
sub
repz
sub
adc
ss
pop
fdivrp
xorb
mov
into
test
mov
lods
sbb
sub
mov
or
test
mov
sbb
into
das
addr16
flds
int3
xchg
hlt
in
test
pop
imul
pop
mov
add
push
loop
sbbl
loopne
into
sbb
pop
arpl
xchg
pusha
test
rcl
xchg
cmp
aaa
push
std
popa
call
rcl
mov
sbb
push
in
lea
jp
test
lahf
xchg
fxtract
lahf
call
dec
xorl
mov
cmp
inc
sbb
fs
mov
outsb
fwait
push
and
sbb
iret
addl
out
push
hlt
dec
cmp
hlt
mov
mov
sub
adc
xor
cmp
movsl
int3
in
push
mov
test
inc
das
loope
arpl
xchg
cwtl
xlat
xor
imulb
fistpl
je
out
ffreep
in
test
mov
push
icebp
xchg
mov
scas
xorl
pop
mov
dec
xor
xchg
add
test
sbb
cld
inc
xchg
nop
mov
or
adc
pextrw
insl
aad
push
pop
inc
lods
or
ret
fists
sbb
imul
stos
js,pt
mov
mov
pop
imul
fwait
in
mov
and
push
mov
sub
popl
add
sub
mov
sub
mov
out
jno
imul
in
mov
or
jnp
cmp
std
mov
cs
adc
loope
clc
data16
mov
mov
add
popf
cld
adc
xor
push
fsubs
adc
or
rorb
ljmp
popa
mov
lds
push
sbb
ret
jnp
xchg
fiadds
stos
jb
push
mov
xchg
mov
icebp
xchg
pop
sbb
outsb
mov
sub
lods
outsb
lret
test
cmp
scas
xor
pop
and
sub
inc
inc
push
sbb
ss
int3
xor
xchg
stos
sub
push
mov
cli
adcb
dec
xchg
sub
in
mov
push
dec
mov
jnp
ret
stos
jb
push
jle
enter
adc
cmp
push
fsubrp
pop
aad
int
jno
xchg
mov
cmp
sub
mov
add
dec
jb
nop
ror
sub
or
pop
xchg
jo
mov
aas
in
xor
adc
lock
cmp
xchg
pop
mov
test
cmpsb
inc
sti
arpl
add
loop
in
repnz
jg
cmp
dec
in
loope
jg
xor
fisubs
inc
mov
xor
sbb
rclb
jae
je
stos
out
subb
or
movsl
out
inc
pusha
pop
lcall
arpl
sti
out
adcl
mov
mov
push
xchg
add
lret
cs
insb
sbb
cwtl
fnsave
aaa
mov
cmpsl
mov
dec
scas
rcr
mov
clc
fnstcw
cld
sbb
dec
and
inc
ret
loopne
cmp
push
stos
cld
push
jmp
mov
jae
inc
jp
rclb
pop
out
loopne
pop
push
mov
push
test
jnp
push
xchg
sahf
test
iret
sbb
adc
dec
int
arpl
loopne
stos
xchg
mov
mov
cmp
jo
sahf
and
fcomps
popa
mov
popa
add
daa
testl
fistl
push
lret
xchg
int
push
or
ret
jne
ds
rol
outsb
sbb
cmp
dec
and
jle
fistpll
pop
adc
fxch
loope
int3
xor
loope
push
lods
pop
cld
xchg
js
xor
rcrl
mov
or
movsl
neg
pop
cmpsb
xor
mov
cmp
popf
pop
cmc
push
pop
les
sbb
imul
add
xor
sarb
jg
outsb
xchg
outsl
xlat
enter
mov
jo
push
bound
dec
lahf
ljmp
mov
adc
jmp
sti
jne
mov
lock
ret
sub
fcomp
add
stos
addr16
ljmp
ret
nop
ret
movsb
xchg
push
or
fistpll
jbe
sub
mov
inc
xchg
adc
and
and
fadds
int3
add
fwait
out
pop
std
dec
pop
sub
adc
data16
scas
cmp
into
cld
test
popa
xchg
dec
js
je
sbb
pop
lds
icebp
cwtl
mov
xor
mov
fiadds
push
mov
and
jae
push
lret
cmp
pop
lcall
mov
cmp
inc
pop
dec
inc
ficoms
jle
adc
pop
je
push
cmpsl
inc
mov
jb
or
dec
fistps
dec
incl
pop
repz
push
leave
int3
iret
mov
push
enter
loope
sbb
ffree
jge
pop
sub
mov
jne
cmpsl
or
xor
aam
aad
outsb
jb
ljmp
add
loopne
add
adc
imul
dec
pop
add
sahf
adc
sub
outsl
pop
cmp
mov
and
sbbb
mov
scas
imul
cli
cmc
add
repz
pop
out
jp
test
lea
jp
das
clc
dec
sbb
lret
adc
aad
inc
sbb
aas
daa
mov
mov
jmp
fwait
out
stc
lock
sub
or
sbb
add
inc
push
inc
rol
cmp
lahf
dec
xor
mov
popa
jp
adc
outsb
add
dec
pop
ret
mov
ss
movsb
fbld
xor
repnz
je
imul
or
fdivr
and
or
push
in
popa
test
xor
stc
pop
mov
mov
ljmp
adc
outsb
xor
jl
dec
inc
adc
in
sub
int
jl
test
xchg
or
loop
mov
inc
mov
das
or
in
or
adc
adc
dec
and
jmp
mov
cmpsl
push
and
test
test
pop
aaa
int
int3
call
fidivrs
add
mov
cmc
lock
xchg
jbe
push
sarl
mov
aad
jbe
xor
xor
xchg
mov
jp
add
cld
mov
ljmp
leave
loope
push
outsl
sti
jl
cmc
jno
jecxz
xchg
mov
sub
mov
fs
std
adc
pop
fwait
sub
ss
int
out
xchg
fsts
daa
sbb
adc
lods
add
sub
shrb
push
out
icebp
xchg
nop
test
movsb
xchg
sbb
xor
icebp
call
mov
xchg
adc
cmpsb
sbb
sbb
mov
stos
adc
sub
lret
inc
push
popa
dec
frstor
mov
mov
mov
mov
or
lret
icebp
adc
adc
repz
pop
xchg
aad
ljmp
mov
jns
in
xor
mov
cld
cmp
cli
ja
pop
std
sub
daa
stc
imul
cmp
das
dec
mov
mov
scas
cmpsl
jo
mov
lock
out
fimull
mov
mov
mov
mov
mov
out
mov
add
xor
xchg
mov
loopne
outsl
or
push
jmp
aas
dec
pop
test
sbb
daa
push
lods
stos
or
loope
xchg
sub
and
fistpll
or
xor
stos
cmp
sbb
xor
pop
and
mov
faddl
xchg
stos
mov
fdivrl
inc
aad
xchg
push
and
inc
arpl
pop
mov
dec
sbb
icebp
xor
push
fs
sbb
cmc
repnz
stos
fsubs
mov
cmp
fstpl
mov
add
mov
inc
jmp
testl
sbb
in
repnz
or
jp
arpl
xchg
popa
gs
iret
scas
out
psllq
push
cmp
outsl
je
std
adc
dec
cmpsl
dec
xchg
test
test
mov
pop
lods
mov
xlat
dec
mov
pop
and
ret
dec
mov
rorb
inc
ss
mull
ret
scas
aam
jecxz
xchg
mov
push
xlat
mov
or
out
adc
cltd
adc
insl
dec
push
scas
push
lods
push
lcall
dec
gs
and
aas
mov
sbb
dec
mov
lcall
mov
movb
divl
call
adc
jle
xchg
mov
sti
jp
les
jle
pop
pop
imul
movsb
fcmovne
test
repz
jbe
sbb
dec
ud1
arpl
dec
andb
sub
mul
fldenv
int
popf
nop
sub
adc
ljmp
inc
mov
inc
popf
inc
push
scas
xchg
mov
sbb
lods
sbb
sahf
repnz
mov
out
sub
mov
rcrb
popa
lds
xchg
ret
lea
into
mov
mov
mov
ljmp
pop
xchg
jb
movsl
cli
adc
push
push
js
into
adcl
jnp
fucomi
insl
cmpb
orl
negl
das
pushf
or
aas
add
out
pop
ja,pt
nop
stc
jbe
pop
popf
aas
and
xor
pop
pop
inc
ja
xchg
test
stos
lahf
les
lods
xlat
or
bound
jg
add
jle
inc
sbbl
js
mov
or
lahf
xchg
imul
cmp
in
addr16
lods
mov
or
jo
fcompl
sbb
or
mov
int
loop
xor
mov
ret
sti
pop
jnp,pn
jns
subb
repz
fistps
rep
je
sbb
jae
in
cmc
sub
pop
pop
clc
ret
add
xorb
push
cmpsl
scas
pop
jl
or
dec
insl
push
and
mov
shrl
sub
popa
repz
movsb
adc
movsl
stos
popf
sbb
sub
mov
test
les
popa
xor
jnp
dec
jb
pop
test
mov
xchg
sub
inc
push
test
pop
push
xor
repz
pop
dec
sub
mov
sbb
add
inc
movsl
or
add
mov
add
pop
jp
ret
pop
mov
jo
sbb
add
shrb
sti
stos
sbbl
xchg
mov
mull
mull
stos
adc
adc
movsl
cli
jmp
pop
in
imul
ss
cmpsl
jmp
test
sbb
mov
ret
lahf
sbb
aaa
aam
sub
adc
cmc
inc
mov
mov
add
mov
dec
cmpsb
cmc
mov
and
add
inc
negl
dec
daa
test
stos
or
sub
ret
xchg
mov
adc
out
jp
andb
mov
mov
sbb
mov
push
test
sbb
lea
pop
in
mov
adc
xor
fcompl
xor
push
imul
je
cmp
sub
shll
or
xor
mov
inc
movsl
xchg
xor
push
hlt
push
xor
mov
and
xchg
mov
shrb
movsl
imul
inc
adc
xchg
cmpsl
cld
aad
inc
fisubrl
ret
cmpsb
xchg
jg
push
daa
fcompl
cmp
pop
jle
aad
mov
mov
mov
pop
test
ja
xchg
and
cli
push
lds
xor
jp
dec
out
xchg
test
xor
lahf
stos
clc
jb
rolb
testl
data16
cs
pop
popl
jns
mov
pop
lea
js
andb
pop
jge
inc
mov
xchg
insl
insb
or
xlat
adcl
xchg
insb
stos
fisubrs
leave
cmpps
sbb
sahf
xor
fisttpll
mov
dec
lods
sbbb
das
sub
xchg
jp
repnz
push
push
repnz
sbb
push
and
arpl
outsl
jmp
dec
sub
sub
int
call
div
cwtl
mov
mulb
inc
jle
ret
test
cmp
test
xor
mov
jle
mov
sbb
jbe
dec
dec
cmp
std
xchg
cld
out
xchg
pop
leave
xchg
fadds
xchg
shll
mov
push
mov
sahf
dec
push
xor
inc
out
hlt
into
fwait
push
mov
fwait
incl
push
popf
test
push
les
xchg
test
loop
and
or
kmovw
pop
cwtl
dec
scas
ficoml
mov
jmp
movsl
call
add
xchg
leave
mov
scas
insb
mov
pop
push
jg
aaa
dec
shlb
mov
mov
mov
ds
push
test
xchg
add
fwait
mov
mov
mulb
dec
cmc
ficoms
sub
arpl
xor
sub
pop
add
test
mov
rolb
out
add
lcall
or
ret
and
or
gs
insb
add
in
push
jle
dec
mov
cli
mov
pop
test
lds
ret
arpl
push
or
mov
out
call
jno
pop
and
push
adc
into
adc
cmpsb
enter
cld
call
icebp
mov
lret
xor
push
ret
pop
adc
out
push
mov
push
push
pushf
sub
fisubrl
mull
sub
popa
pushf
sbb
std
dec
adc
xchg
adc
int3
adcl
loop
and
pushf
sub
jp
stos
mov
pop
imul
ss
xchg
repnz
jno
mov
test
mov
out
test
in
lock
xor
data16
popa
fwait
jae
mov
and
xor
inc
popa
lods
push
movups
rorb
xchg
sbb
or
popa
inc
jo
mov
aaa
sbb
leave
shrb
cmp
stc
jb
xchg
jno
adc
pushf
int
out
scas
neg
pop
out
cmp
xor
aad
inc
jb
push
mov
sub
call
mull
inc
mov
add
jb
adc
push
sbb
inc
mov
mov
scas
scas
insl
mov
add
lret
repz
mov
mov
and
mov
pop
addr16
jle
sbb
mov
lods
lret
sbb
and
cmp
ss
std
test
sbb
jns
jbe
pop
in
xchg
jno
cli
pushf
in
mov
repz
call
imull
dec
cwtl
shll
testl
push
aad
sbb
cmpsb
fisubl
and
out
mov
xchg
scas
rorb
iret
pop
xor
pop
xor
cmc
xchg
subl
fdivl
xchg
mov
ljmp
cltd
in
in
popf
icebp
cmp
shl
and
test
pop
cmp
lcall
add
sbb
mov
ljmp
and
int
adc
mov
pop
mov
inc
shlb
mov
push
jns
inc
hlt
aaa
jl
sub
push
jge
movsl
loope
and
cmpsl
jp
and
fucomp
cwtl
add
sti
xor
jp
or
fistpl
loopne
lods
jns
lret
dec
adc
rorl
scas
push
cmc
xchg
sub
jmp
daa
xor
xor
mov
out
jmp
adc
out
cs
gs
dec
push
pop
cmovbe
imul
xchg
rcll
mov
loope
adc
sarb
das
repnz
push
stos
xlat
jle
cmp
push
add
mov
push
sbb
sbbb
pop
aad
data16
sub
dec
inc
aam
push
les
aas
xchg
loope
push
test
add
loope
adc
rcll
in
mov
imul
cwtl
cwtl
div
outsb
dec
xchg
and
jecxz
adc
or
notl
loopne
cltd
outsl
pop
dec
insb
dec
sub
xor
inc
jae
cltd
pop
test
sbb
jmp
sbb
fxch
cwtl
mov
loopne
mov
xor
xchg
mov
leave
lahf
mov
sbb
scas
in
sub
fstl
fdivs
test
cmp
push
jbe
inc
mov
cmp
mov
mov
inc
vdivsd
cmp
inc
pop
jle
cs
movsb
jmp
jecxz
inc
sub
lret
mov
fsqrt
jecxz
adc
pop
shrl
cwtl
out
ljmp
mov
mov
sub
stos
lods
pop
outsl
test
or
mov
dec
push
xchg
fimuls
lock
mov
das
add
jp
mov
adc
mov
outsb
fidivrl
rcll
and
dec
nop
addr16
jecxz
lock
ds
fs
sub
adc
add
pusha
out
test
mov
sub
or
sub
fwait
sub
or
repnz
lock
dec
pop
mov
ret
sarb
stos
lret
adc
leave
pop
call
andl
xchg
in
or
cmp
out
jno
and
lret
je
xorl
test
jns
stc
fldl
ljmp
push
cs
jne
add
loop
dec
pop
xchg
lcall
out
fistpl
cmp
push
push
dec
daa
push
rolb
mov
cwtl
iret
addb
jg
jmp
pushw
in
addr16
pop
in
or
jle
sbb
inc
ret
jp
imulb
cmp
dec
mov
loop
mov
sub
mov
in
push
out
xchg
insb
shrl
ja
add
push
js
rcrb
adc
cs
adc
and
jp
or
mov
sub
out
jle
cmp
loope
mov
jl
insb
mov
mov
push
mov
sub
pop
fsubs
add
test
jnp
int3
push
aas
jne
jl
insl
stc
lock
sub
inc
jbe
mov
xor
fistpl
mov
lock
mov
xor
aaa
ljmp
mov
into
scas
adc
push
mov
and
daa
aad
xor
test
mov
and
test
sarl
mov
pop
mov
lds
xchg
sbb
xor
adc
ret
in
lret
lcall
call
fisttps
imul
mov
subl
jns
je
jl
mov
les
mov
add
add
dec
les
jne
mov
inc
out
mov
pop
test
lods
xchg
xor
cmp
dec
loopne
std
xchg
jns,pt
fs
mov
cmp
jge
or
push
jl
lahf
dec
rorb
outsb
jge
fstpl
push
insl
imul
inc
insb
and
out
mov
popf
push
icebp
mov
lcall
cmp
sub
cwtl
dec
bound
aad
scas
fadd
cmpsb
sub
jle
mov
lret
and
cwtl
xchg
sbb
imull
lods
dec
jno
jg
arpl
in
pushf
sbb
jl
lds
xchg
xchg
stos
popa
js
dec
lods
ljmp
mov
add
mov
adc
ds
es
imul
outsl
add
test
xlat
insl
lods
push
call
movsb
lret
cltd
push
in
mov
cwtl
mov
mov
jge
mov
jp
in
pop
jp
xor
mov
add
in
cmp
or
insl
inc
rcr
jle
dec
pop
jmp
pop
je
mov
es
jb
xchg
and
push
sub
popa
pop
pusha
pop
lods
lds
adc
xor
addr16
adc
out
xchg
or
mov
xor
pusha
stos
mov
nop
insl
mov
repnz
xchg
ljmp
push
jns
and
ss
enter
cs
sbb
mov
jmp
push
xorl
add
test
push
cs
and
xorb
and
jae
aaa
lcall
mov
lcall
jo
push
lods
cmc
or
lock
jge
hlt
jg
and
nop
and
test
and
mov
sti
data16
or
push
mov
pop
aas
lock
sarb
jge
xchg
mov
and
adc
arpl
cltd
rorl
mov
les
inc
and
lea
mov
sbb
divb
stos
xor
inc
in
dec
ljmp
stos
cli
jne
rcrb
cmc
shll
add
adc
dec
and
ds
fnsave
roll
enter
mov
cli
jbe
xchg
sahf
mov
mov
inc
ret
in
jno
mov
mov
xchg
popa
mov
mov
inc
int3
cmp
in
mov
sbb
lahf
sbb
std
jmp
movsl
fldpi
jno
jmp
fnstsw
adc
inc
jmp
sbb
adcb
sahf
loopne
cmp
add
insl
fists
test
pop
mov
mov
rcrl
cltd
iret
pop
scas
pop
in
mov
mov
icebp
jl
adc
xor
sbb
inc
or
cmpsb
or
add
shrb
out
sbb
into
mov
js
mov
mov
jecxz
inc
cmp
leave
mov
or
hlt
xorl
inc
push
inc
adc
dec
lods
mov
decl
or
mov
nop
int3
push
nop
add
bt
sahf
jl
push
push
lret
add
fisttpll
bound
out
sbb
repnz
or
in
mov
dec
shll
inc
ljmp
dec
push
sbb
mov
int3
cmp
xchg
int
imul
hlt
xor
mov
push
sbb
les
loope
jg
inc
inc
adc
pusha
push
enter
mov
jne
add
movsl
cwtl
push
cltd
fisttpll
iret
stc
jne
pop
sahf
mov
xor
push
or
aas
jmp
test
mov
insl
daa
mov
ljmp
adc
mov
jg
or
dec
lahf
loopne
lea
inc
xchg
dec
jecxz
lret
lret
fistpl
pop
loope
jl
jo
mov
xchg
or
mov
mov
cmp
movsl
popf
cli
sar
inc
push
loop
fwait
jmp
mov
mov
dec
adc
dec
mov
mov
jno
xchg
mov
cmpsl
cwtl
fwait
add
and
xor
nop
sbb
sbb
sub
std
int
push
cmp
popf
negb
mov
out
call
xchg
xor
push
rcrl
cli
or
das
adc
jne
push
bound
jecxz
pop
test
cmp
out
mov
mov
pop
je
inc
mov
pop
cld
add
sub
xchg
lods
das
cltd
xor
repz
xchg
or
lea
loopne
cmp
sbb
mov
adc
pop
or
loop
xchg
aaa
jbe
mov
es
mov
ret
and
xor
xlat
iret
push
clc
sbb
cmp
pusha
dec
dec
cli
cld
mov
lret
popa
mov
cs
aaa
mov
cmp
add
pop
xor
jmp
cmpsb
inc
cs
repz
loopne
sub
sbb
jge
lcall
adc
pop
js
sub
dec
stos
lcall
sbb
adcl
inc
mov
ret
mov
insb
es
movsl
mov
mov
jl
mov
pop
pop
add
jecxz
aas
test
test
out
push
mov
cmp
inc
mov
jo
mov
call
in
test
pop
aad
ljmp
mov
gs
push
fsubrs
inc
into
dec
lods
adc
inc
or
lods
adc
pop
cld
or
in
jae
jle
dec
movsb
add
mov
cmp
mov
dec
int3
xor
add
jnp
cwtl
mov
mov
movsb
out
hlt
int3
adc
cwtl
mov
lcall
lret
pop
sbb
cli
or
pop
cmp
mov
mov
ret
xlat
pushf
movsl
mov
ds
jecxz
ja
jl
imul
stos
aam
je
jae
mov
cmp
shrb
lcall
cmc
popf
into
outsl
or
adc
sti
xchg
sbb
mov
dec
or
push
gs
insl
rolb
inc
in
or
mov
repz
cs
pop
jp
sahf
push
int
cld
mov
cmp
inc
mov
or
xchg
outsl
lahf
sbb
jno
adc
sahf
idivl
cmp
push
outsl
dec
rcrb
hlt
inc
test
pop
fsub
cli
pop
xchg
mov
and
ja
mov
popa
push
mov
mov
push
xchg
ret
inc
jg
cmpsl
repz
inc
inc
scas
cmpsb
in
xor
jp
jmp
pushf
mov
pop
hlt
mov
iret
add
outsl
cs
xor
and
aas
pushl
mov
scas
push
or
jp
int3
inc
jmp
xchg
mov
mov
jnp
in
push
sub
jbe
sbb
mov
cmp
adc
xlat
test
lcall
pushf
scas
xor
pop
outsl
rcr
cltd
dec
in
mov
mov
jb
adc
mov
pusha
xor
icebp
mov
xchg
adc
cs
lods
jae
pop
into
jb
dec
adc
aad
hlt
lahf
xchg
les
orl
and
sbb
xor
lret
jbe
xlat
scas
and
mov
cmpsl
js
cmp
jle
sbb
push
mov
cmp
enter
mov
and
ljmp
int3
mov
pop
mov
frstor
sbb
mov
xchg
fdivrs
loope
push
jecxz
push
and
jg
jmp
mov
xlat
mov
fucom
dec
mov
mov
outsb
icebp
mov
push
cmp
cld
fs
push
push
into
icebp
and
adc
cld
push
and
lahf
dec
jns
movsb
repnz
cmc
adc
int
or
mov
hlt
add
dec
pusha
das
das
push
bound
fdivr
push
pop
or
das
jno
cmp
sar
or
xor
cld
push
push
mov
aas
xor
xor
cld
ds
inc
and
sub
lret
pop
cld
push
mov
test
xchg
out
icebp
std
xor
ja
sbb
cli
pop
jnp
cs
cmp
movsb
stc
test
sub
bound
rcr
sub
inc
lret
gs
cmp
fwait
xchg
sbb
sub
ret
xchg
test
jle
shll
xor
pop
jae
mov
shll
xchg
jl
jno
shl
daa
iret
mov
cli
xor
push
aad
sahf
pop
mov
and
pop
mov
sbbb
pop
insl
adc
xchg
cmovs
sub
pop
clc
mov
adc
xchg
or
dec
out
outsl
fdivs
push
xchg
jmp
mov
stos
cmp
addr16
lods
push
mov
lds
sbbl
ret
add
dec
fs
enter
inc
cmp
xchg
sbb
sbb
jne
out
scas
jle
js
sub
mov
clc
dec
pop
icebp
sub
sar
sbb
jge
stos
mov
jl
xchg
mov
sub
and
or
loop
or
add
jmp
push
mov
ss
sbb
pushf
outsb
hlt
jne
addr16
scas
scas
jae
rcrl
push
aam
xchg
cmpsb
xchg
mov
mov
cmp
aaa
cmpsl
mov
lcall
xchg
out
lods
lcall
test
xchg
adc
mov
pushf
scas
or
push
mov
fwait
aad
mov
mov
outsb
stos
ret
adc
xor
test
in
mov
sarb
dec
shl
lds
add
ficomps
in
outsb
push
dec
add
ret
cmp
push
pop
rcrb
sub
xlat
add
and
out
adcb
mov
fcmovnu
nop
je
and
into
subb
icebp
repz
cli
mov
xchg
in
imul
popa
aad
scas
aad
sub
inc
jmp
in
jle
out
jle
add
aas
das
push
aad
cmp
nop
xchg
inc
ljmp
ja
test
jb
mov
xor
lods
mov
mov
pop
fwait
xor
and
inc
out
push
push
mov
bound
jecxz
idivl
jl
jl
push
insl
sbb
int3
jb
int
cmp
fnstsw
and
jg
xchg
stos
aas
push
xchg
jo
push
sbb
xchg
and
mov
int
into
enter
icebp
je
ja
jge
dec
dec
mov
fildl
js
mov
shlb
mov
xor
adc
insb
mov
and
movsl
fildll
insl
ss
sbb
mov
xor
fwait
lock
sbbb
icebp
xor
mov
lods
outsl
push
lods
cmpsl
clc
pop
jae
cltd
mov
cli
mov
xor
test
mov
lcall
lret
aad
lods
cmp
loop
sbb
fmull
push
addr16
pcmpeqd
jcxz
popf
lds
push
or
call
loope
js
sbb
inc
cmp
xorl
fcmovb
das
sub
stos
ja
lods
mov
out
or
xchg
outsb
pushf
jb
outsl
imul
cs
or
xor
jne
aas
clc
cmp
scas
inc
sbb
add
scas
repnz
rol
faddl
jnp,pn
js
outsl
mov
daa
push
mov
sub
les
xchg
jp
or
and
sbb
aam
das
das
inc
and
xchg
fcomps
lret
inc
arpl
dec
adc
cmp
mov
data16
js
cmpb
adc
loop
test
cs
test
cmp
js
test
push
ljmp
popa
xchg
sub
cmp
jo
mov
aad
loopne
push
jg
cmp
divb
stos
inc
std
cmp
cli
mov
out
add
clc
aam
ficoms
call
fdivrs
xchg
adc
mov
fdivr
ret
mov
pop
ret
lahf
mov
or
pop
lret
xchg
aam
shll
inc
sub
mov
stos
dec
gs
out
lods
sbb
mov
outsl
adcb
test
ja
mov
cmp
movsb
int3
sti
jbe
or
insb
lods
jl
mov
inc
sub
dec
pop
stc
mov
xor
out
cmc
scas
addr16
orb
add
mov
or
mov
push
setb
test
lret
sub
fnstsw
rolb
fisttps
adc
aas
lds
dec
pop
pop
aam
and
sub
call
cli
mov
icebp
inc
mov
add
sti
das
loope
mov
add
pop
jae
pop
mov
jle
and
repnz
add
pushf
push
and
jle
mov
pop
cmp
icebp
aas
jns
push
cmp
jecxz
mov
dec
daa
sub
sbb
push
dec
jnp
insb
insb
lock
add
icebp
pop
inc
xor
jecxz
inc
dec
adc
xor
call
fldenv
ja
insb
pop
jmp
jae
cli
adc
in
pop
add
gs
out
insl
add
adc
loopne
mov
sub
sbb
ss
andl
adc
push
idiv
pop
pop
push
outsb
test
or
add
pop
mov
je
xor
push
jae
jecxz
pop
js
sbb
scas
cld
sbb
inc
push
adc
sub
ljmp
and
jle
sbb
dec
inc
push
jp
mov
idivb
jbe
mov
rorb
push
test
xor
mov
push
imul
test
xchg
daa
movsl
outsl
outsb
or
adc
push
jns
mov
repz
sar
mov
inc
jmp
or
pop
xchg
adc
or
lods
fnstenv
xchg
leave
insl
lahf
daa
pop
ficoml
subb
lock
sti
cmp
into
mov
rclb
inc
hlt
xor
ja
jp
cli
inc
gs
adc
fisubrs
notb
adc
xor
sbb
xor
mov
stos
pop
sbb
inc
jecxz
mov
imul
loop
jmp
inc
inc
dec
jl
jns
das
mov
subl
mov
popa
sub
iret
das
insb
ss
mov
sbb
mov
or
inc
mov
jg
xorb
xor
and
ja
xchg
mov
test
scas
btr
or
dec
lock
cmp
aaa
adc
lahf
pop
aaa
iret
ficoml
popa
add
jno
inc
loopne
out
mull
dec
inc
hlt
pop
test
into
out
test
pcmpeqd
ljmp
addr16
notl
cmp
addr16
shl
xchg
loop
notl
int3
cmp
jmp
cld
adc
loope
mov
daa
xor
in
dec
mov
or
add
cltd
ja
sbb
adcb
lcall
fisubs
jge
xor
pop
sbb
mov
jb
jl
loopne
xchg
cmp
popf
lods
repz
clc
bound
and
sbb
fdivrl
add
int
cmp
cmp
lds
cmp
add
dec
xlat
aad
inc
sub
mov
adcl
adc
movsl
daa
xchg
mov
jg
jne
std
xchg
xchg
push
mov
add
pop
pop
and
cmp
add
sbb
lods
pop
xchg
mov
cmp
xchg
fidivl
arpl
jbe
out
lods
dec
push
mov
scas
insb
push
xor
mov
ds
mov
mov
or
pop
xchg
rclb
add
cmp
push
mov
popf
sbb
icebp
fwait
xor
mov
loop
mov
adc
setno
das
cwtl
xor
sub
push
pop
sub
clc
mov
stos
jmp
sub
shll
ss
mov
aam
and
push
movsb
mov
xlat
mov
inc
mov
out
inc
pop
sub
addr16
xlat
add
xor
xchg
cwtl
push
loop
xlat
xchg
cmp
ds
mov
xor
jle
adc
sub
sti
hlt
mov
cltd
xlat
std
addb
and
pop
xchg
sub
movsl
in
testl
pop
imul
inc
sub
dec
inc
in
lret
dec
jmp
movsb
sbb
cmp
repz
popa
in
adc
clc
insl
push
sbb
inc
aas
shll
lret
fadds
cmp
rcrb
sbb
or
xchg
fwait
or
in
jb
jns
add
xor
lock
mov
mov
in
stos
inc
mov
jl
ret
outsl
mov
dec
mov
mov
lea
ss
popa
aam
aas
cmc
fcos
outsl
mov
lret
cmp
lock
adc
insl
loope
test
sahf
sub
cli
or
cwtl
push
adc
jg
adc
dec
fs
cmp
leave
push
mov
sbb
xor
or
or
cmp
rcrl
jno
xor
or
loopne
xlat
jp
mov
jae
mov
xchg
mov
or
into
mov
pop
mov
sub
ret
xchg
mov
inc
inc
out
out
das
mov
lea
popf
dec
movsl
xor
mov
sbb
lcall
stos
and
jnp
jnp
clc
pusha
insb
mov
out
test
aam
mov
xchg
mov
push
adc
lea
bound
stc
sub
and
sub
and
ret
pop
adc
push
adc
dec
inc
std
sbb
lds
push
and
data16
push
iret
cs
das
shl
add
fldenv
mov
xor
push
push
inc
add
pop
fmuls
popf
sbb
xlat
jle
dec
pushf
xor
cmpsl
cmc
cmp
add
inc
inc
nop
pop
imul
mov
jle
fildl
xchg
ja
int3
adc
mov
push
mov
loop
push
xchg
sbb
shll
nop
mov
es
mov
push
jl
addr16
sarl
movsb
xchg
adc
push
ret
inc
jbe
pushf
jnp
and
sub
or
loopne
test
and
insl
mul
dec
pop
call
mov
popf
stc
std
imul
mov
test
sbb
ficoml
insb
ja
enter
cmp
cmpsl
push
mov
dec
lahf
jp
push
jle
movb
std
fmuls
test
or
mov
dec
fdivp
call
mov
icebp
lret
pusha
cmpsb
stos
jns
mov
pop
add
sbb
jne
inc
fs
ds
fistps
loop
in
test
decl
cwtl
or
inc
aas
and
outsb
xor
cs
inc
pop
cmp
xor
mov
pop
popa
out
lahf
stc
icebp
enter
push
adc
pushl
jbe
jecxz
mov
aas
inc
xor
in
rcr
adc
pop
out
sbbl
repz
cmp
mov
pop
adc
int
bound
ffreep
daa
arpl
adc
xchg
mov
pop
jge
xor
jae
mov
icebp
dec
add
mov
cld
outsb
mov
idivl
or
pusha
jg
jecxz
enter
pop
jo
mov
sub
push
xor
ret
inc
rorl
fimull
movsl
inc
sub
popf
pop
scas
inc
insl
js
pop
lea
lcall
jae
push
xchg
mov
loopne
sub
inc
in
xor
mov
jmp
fs
mov
push
mov
stos
pop
xor
arpl
mov
xor
icebp
daa
bound
adc
rep
cmpsb
add
jne
hlt
iret
ljmp
imul
fists
rclb
or
popa
sbb
rorl
je
jbe
xor
jns
dec
ljmp
and
push
dec
sbb
jmp
mov
aam
aam
sbb
push
into
daa
add
ret
sahf
ja
scas
popf
cmp
aaa
jp
sbb
and
rcrb
jnp
or
loopne
cmp
movsb
jl
jge
jl
adc
or
lret
jae
push
test
and
mov
cmpl
push
mov
leave
mov
pop
das
popa
dec
sti
repnz
push
fbld
cs
fmuls
jmp
daa
subb
rorb
scas
jmp
loop
sub
fdivs
mov
popf
arpl
mov
decb
or
jb
dec
lea
push
add
cld
cli
cltd
dec
int3
out
jl
in
add
pop
xor
xchg
jne
adc
filds
push
xchg
adc
sbb
mov
ja
icebp
push
mov
sbb
or
inc
jne
adc
push
mov
mov
xor
cmc
nop
stos
in
mov
fs
dec
orl
lods
pop
dec
and
or
cmp
jge
add
stos
mov
fiadds
pop
jo
lock
jae
dec
inc
pop
in
test
lcall
in
lods
adc
mov
adc
test
mov
mov
cld
push
inc
sub
imul
std
push
dec
push
sbb
mov
je
push
sbb
fcomp
dec
outsl
mov
outsb
nop
leave
leave
in
push
lds
incb
push
cs
push
scas
lcall
test
add
push
ds
cmp
stc
popa
shlb
cmpsb
fs
mov
cmp
xor
xchg
cmpsl
sub
mov
push
or
sarl
into
xchg
pop
cmp
mov
clc
and
jmp
in
arpl
mov
pop
pop
pusha
mov
es
push
fdivrl
aas
fdivrs
sub
jge
cli
fisttps
mov
jne
adc
mov
mov
mov
pushf
push
and
push
inc
cmp
leave
cmp
clc
and
lods
jne
and
sbb
or
dec
sarb
fadd
iret
stos
lods
repnz
cmp
jo
sbb
aad
jecxz
mov
lds
mov
cltd
jle
testl
sbb
das
and
inc
fcmovnb
and
dec
push
idivl
push
push
jno
les
xchg
hlt
aas
push
jmp
mov
repnz
pop
aaa
jg
lea
shll
insl
lock
or
cltd
jo
aas
in
sub
cli
push
xchg
sbb
mov
lret
jnp
cmp
xlat
jbe
dec
insl
mov
pusha
cmpsl
in
jbe
les
or
mov
jbe
das
lds
add
out
addl
ss
int
in
loope
pop
jbe
and
add
sarb
xor
scas
je
out
movsb
bound
aaa
inc
pop
roll
jns
les
in
into
mov
jge
mov
jmp
jge
mov
in
fldl
mov
pop
lods
clc
xor
sbb
push
xchg
pop
push
dec
and
sub
add
pop
lds
sub
xchg
and
push
shl
adc
dec
xchg
iret
push
xchg
push
jmp
fisttpl
enter
xchg
lods
push
push
andl
adc
xchg
sub
cs
push
sarl
popa
loope
mov
or
dec
lahf
ljmp
dec
sub
arpl
js
or
mov
scas
sub
stc
in
lock
fiaddl
cmp
ja
shrl
lahf
outsb
mov
inc
es
popa
sbb
loopne
push
mov
dec
aaa
loop
fmuls
dec
cltd
in
jl
mov
stc
pop
jnp
sub
mov
xchg
jnp
inc
jg
xchg
cmp
aas
out
mov
add
sub
push
jnp
rcl
imul
jns
sarl
adc
scas
adc
jg
xchg
fadds
into
clc
imul
pop
mov
mov
sbb
pop
cmp
rorb
inc
js
leave
scas
scas
pop
in
mov
pushf
or
push
pop
pusha
stos
mov
push
cmp
mov
cld
in
mov
mov
jmp
jg
adc
aaa
sub
clc
daa
jl
lahf
pop
inc
shll
loop
add
data16
iret
pushf
jmp
jns
mov
sti
rorb
mov
sbb
jbe
xchg
jns
xor
aad
sbb
movsb
dec
inc
pusha
jg
mov
fadd
shr
dec
push
jnp
cltd
fucomp
fbstp
ljmp
jp
sbb
daa
subl
ds
push
pop
sbb
fmuls
pushf
push
sub
push
add
xor
cwtl
xchg
jl
ret
popf
sub
lret
and
lahf
repz
xchg
push
loope
push
clc
rorl
or
inc
adc
subb
dec
sbb
sbb
inc
jge
inc
pushf
pop
dec
imul
jbe
inc
add
fcmovbe
std
mov
push
insb
out
sub
push
pop
outsb
popf
outsl
push
mov
dec
and
jb
xchg
push
inc
sbb
sti
shlb
int
jnp
or
stc
push
jg
ds
stos
cmp
add
in
rorl
jne
jge
mov
loop
mov
and
imul
xchg
cmp
or
shll
add
dec
in
xlat
adc
jbe
fsub
xor
sub
sbb
and
js
imul
or
arpl
cmp
shrb
test
imul
mov
sub
rorl
jno
ret
cwtl
dec
xchg
in
mov
push
outsb
inc
cmp
inc
xchg
mov
sub
in
push
xchg
push
push
leave
inc
leave
xchg
mov
jg
out
decb
fnstenv
mov
xor
mov
add
test
es
movsl
ret
adc
lea
ret
jns
add
add
jns
mov
adc
mov
testl
jno
mov
outsl
negl
or
jns
int
and
push
mov
int3
shl
cltd
or
ljmp
ds
sub
cltd
push
imul
jns
adc
outsl
test
fdivrs
icebp
xchg
mov
insb
mov
add
mulb
daa
sub
iret
or
sti
and
push
icebp
push
or
lods
icebp
mov
pop
mov
adc
dec
mov
mov
lret
adc
jae
in
lock
mov
pop
cld
rol
les
loop
test
cli
flds
clc
xor
outsl
or
or
mov
inc
ja
jmp
add
lds
aam
rolb
sbb
pop
adc
lds
sub
sub
and
popf
or
sub
mov
test
in
test
ja
adc
mov
insl
pop
dec
inc
or
push
push
pop
xlat
je
repz
jno
cmp
jo
das
sub
loopne
inc
mov
fstpt
mov
or
add
sbb
lods
into
and
lds
adc
lods
xor
mov
fadd
sub
pop
cld
and
and
clc
outsb
rorl
ret
test
push
push
add
imul
sub
mov
in
add
fisubl
push
push
sbb
mov
jmp
push
mov
lret
mov
pop
jmp
jle
stc
mov
loope
lcall
dec
xor
xor
or
movsb
std
lret
pop
inc
add
xor
test
in
clts
lcall
inc
cmp
ficoml
in
xlat
or
jmp
cmpsl
es
and
insb
jp
mov
push
cmc
pop
ret
mov
mov
jno
sahf
imul
std
mov
sti
out
xchg
cmpsb
inc
repz
pop
jno
daa
movsl
cmp
or
loop
movsl
or
pop
sub
jl
test
and
decl
pop
jmp
inc
add
mov
call
sbb
sbb
push
aam
adc
mov
inc
mov
mov
add
dec
inc
mov
inc
xor
test
arpl
and
enter
pop
add
mov
test
xor
dec
push
loop
inc
pusha
lret
nop
in
xor
xlat
adc
jnp
shrb
fs
mov
inc
jle
pop
ljmp
mov
ss
add
ljmp
dec
pop
rcrb
popa
adc
xchg
xchg
rcll
jbe
rorl
add
sub
rolb
mov
sti
ficoml
add
rcrb
shll
repz
sarl
ss
lds
xchg
push
adc
sub
mov
adc
pop
mov
arpl
dec
and
in
xchg
bound
xchg
leave
pusha
inc
add
push
cmpsb
cmp
stos
stc
sahf
rcr
pop
iret
add
sar
push
xchg
and
ds
sbb
xchg
and
fistpll
clc
mov
les
int
iret
pop
xchg
cmp
dec
dec
mov
xchg
or
push
jle
popf
lret
test
lret
es
mov
std
dec
mov
movsb
mov
stos
sbb
sub
sub
inc
adc
sbb
data16
add
jae
clc
mov
mov
add
push
dec
or
push
negl
cmpsb
cmp
mov
pop
xchg
scas
aad
xsavec
out
imul
and
mov
push
stc
push
je
negl
pop
pop
out
out
or
mov
cwtl
in
fimuls
xor
fwait
or
ret
and
sub
or
fs
xor
sub
enter
fwait
enter
xlat
or
in
cwtl
cmp
lret
inc
inc
int3
fstps
inc
pop
test
add
mov
aam
aas
mov
mov
jae
adc
mov
mov
enter
jnp
fists
icebp
sarb
mov
jbe
inc
adc
cmp
nop
inc
jg
mov
sahf
xchg
xchg
stos
out
push
cwtl
imul
cli
or
xchg
jb
ret
in
or
mov
adc
iret
mov
sbb
adc
or
xor
enter
jmp
movsl
jo
cmp
in
adc
in
ss
jg
xor
in
loope
data16
sub
in
xchg
out
mov
sbb
mov
pusha
pushf
mov
mov
jecxz
push
sbb
movsl
inc
sbb
stos
xor
and
jp
mov
xor
fiaddl
ficompl
jp
add
add
je
mov
sub
insl
es
xchg
in
daa
mov
inc
scas
fstpl
mov
lret
push
neg
or
sahf
push
mov
mov
sub
test
mov
add
xor
loopne
mov
negl
pop
push
fcmovu
ret
adc
ret
mov
cmpsb
push
stc
or
lret
dec
xchg
push
pop
nop
enter
in
adc
jbe
mov
xchg
movsb
mov
add
enter
inc
fndisi(8087
loope
push
hlt
and
mov
xorl
add
pop
or
inc
in
mov
out
andl
cmp
adc
test
enter
std
out
mov
bound
mov
es
inc
sub
xorb
pop
or
jae
dec
push
test
jmp
out
inc
addr16
jnp
iret
loopne
fisttpl
lods
outsb
lahf
mov
aam
cmpsb
push
shll
dec
sbb
inc
sbb
jl
push
repz
mov
sub
out
jae
adc
jne
sub
add
add
imul
mov
pushf
inc
push
js
scas
mov
mov
fistl
mulb
cltd
sbb
pusha
mov
sbb
add
les
and
clc
mov
in
subl
add
sbb
pusha
dec
mov
jnp
pop
xor
popf
xchg
and
and
enter
fwait
scas
in
pop
push
ljmp
mov
push
xchg
jmp
jmp
mov
mov
cmp
or
mov
mov
test
xor
dec
mov
mov
shrl
mull
lret
mov
push
fs
add
inc
out
pop
push
aad
pop
xchg
or
sbb
jb
shr
pop
aas
mov
out
mov
jle
or
aaa
negb
cmpsb
adc
jns
rclb
mov
adc
lds
mov
or
xchg
or
out
aad
mov
icebp
stos
jmp
or
sbb
arpl
testb
addr16
xchg
popa
xchg
sub
xchg
pop
loopne
push
gs
lcall
push
xchg
and
inc
cli
add
xchg
addl
je
add
lods
das
dec
and
inc
push
inc
cmp
daa
dec
mov
pushf
das
jbe
mov
roll
push
mov
scas
sbb
adcb
mov
sbb
mov
je
sub
int
add
inc
in
scas
cmpsl
adc
sti
inc
sbb
outsl
rorb
push
repnz
int
stos
bound
push
cltd
sub
jne,pn
loope
ret
das
in
jbe
jb
xchg
jg
sub
xor
popa
sub
dec
into
pop
add
xchg
pusha
and
fldenv
sub
and
and
cli
loope
add
jne
push
or
or
adc
xor
lds
mov
mov
cmpsb
daa
push
mov
xor
sbb
jg
int3
cmpsl
adc
les
lods
xor
cld
dec
and
stos
sbbb
push
lock
js
out
pop
ret
icebp
pop
xchg
pop
push
add
pop
sub
aad
dec
into
mov
fsubl
cmc
adc
pop
xlat
repnz
xor
fildl
stos
cld
fldenv
jo
jecxz
shlb
lea
mov
je
sub
xchg
mov
movsl
call
leave
imul
jecxz
xor
cmp
cmp
ret
daa
xor
mov
jle
aam
les
call
push
mov
gs
sub
in
dec
or
cmpsl
jp
jecxz
push
jnp
sub
inc
aaa
adc
mov
fnstenv
push
ja
insl
mov
iret
mov
lods
mov
cmpsl
sbb
sbb
push
dec
pop
dec
int3
adc
jne
sahf
popf
shlb
sti
lds
dec
imul
rcrl
pop
lods
lret
sahf
iret
sbb
adc
aam
inc
insb
sbbb
sbbb
add
inc
in
repz
jbe
inc
mov
dec
test
adc
ljmp
mov
adc
or
adc
mov
jne
std
inc
xor
outsl
dec
lock
notl
sbb
movsl
daa
mov
out
ret
lret
push
int3
addl
xor
sub
xor
xlat
xor
ret
xchg
mov
cli
js
pop
repz
das
push
mov
pop
repz
pop
dec
lea
cmpsb
adc
lea
jge
inc
xchg
imul
cmp
ds
lods
jno
fidivl
mov
jle
jne
jo
enter
cli
add
mov
push
cs
xor
ljmp
into
fs
xchg
and
aam
and
jae
cmpsl
bound
xor
ss
das
stos
cli
mov
fnstcw
cmp
or
fwait
popa
into
sub
lcall
adc
inc
das
repz
cmp
sub
sbb
data16
lcall
shlb
add
xchg
xor
or
ljmp
sbb
and
xchg
insb
movsl
imul
addr16
aad
or
jno
inc
mov
xchg
jbe
pushw
dec
xor
in
inc
xchg
clc
mov
cmc
call
jle
stos
test
int
std
int
jmp
sbbb
pop
pop
push
xor
mov
hlt
cmpsl
pop
fs
pop
xor
sub
sbb
mov
pop
mov
mov
aas
stos
testl
out
dec
mov
cld
lods
std
xlat
fistpl
mov
pop
pushf
push
scas
jb
movsb
jbe
and
pop
and
jl
xchg
jns
hlt
cmp
and
jecxz
fldenv
pop
push
dec
psrad
movsb
mov
mov
mov
roll
mov
pusha
inc
dec
into
push
sub
adc
inc
addr16
pop
jns
sbb
add
les
inc
ds
pop
jge
int3
adc
push
push
push
xor
sarb
cld
lods
sti
xor
test
and
fisubrs
aad
jb
in
into
hlt
lret
jnp
lods
add
inc
lret
jns
add
xor
pop
inc
push
sub
push
pop
repz
ret
mov
fdivrs
roll
sbb
hlt
inc
jno,pt
bnd
push
xchg
loope
jg
jmp
add
incb
dec
or
dec
or
out
scas
pop
adc
jne
adc
das
mov
sarl
sub
pop
dec
popf
fcomps
fldenv
fbstp
push
add
scas
adc
pop
xor
cmpsb
cmc
shll
std
jmp
mov
jne
jne
inc
nop
gs
xor
cltd
leave
popa
ljmp
mov
ds
mov
sbb
or
jp
or
icebp
enter
inc
pop
call
mov
nop
nop
out
ret
mov
jno
mov
mov
pop
push
mov
out
adc
test
aas
mov
adc
lea
push
mov
popa
into
cmp
enter
xchg
movsl
fcomip
rcll
subl
jl
cltd
push
pusha
and
mov
test
pushf
nop
es
hlt
xor
sahf
jp
jbe
rol
sub
cmp
sbb
xor
es
xor
jbe
or
fucom
cmpsb
out
lcall
dec
push
popa
mov
dec
arpl
inc
pop
mov
push
in
sbb
pusha
sub
sub
cltd
shll
mov
fisttps
mov
sub
and
and
mov
dec
jg
lcall
ds
inc
cmpb
cmp
mov
and
cli
daa
push
dec
leave
fdivrs
push
test
jge
ret
ljmp
cltd
stos
pop
imul
hlt
call
jns
imul
mov
mov
jnp
out
rcll
sar
ucomiss
loop
outsb
or
mov
test
xor
mov
add
sbb
movsb
pop
jb
int
notl
push
xlat
cmp
sub
push
xchg
push
push
sbb
inc
xor
dec
jne
lds
adc
and
xchg
add
and
dec
icebp
and
xchg
sti
push
xor
gs
mov
repnz
lret
jb
mov
int3
mov
push
je
icebp
sub
pop
pop
js
test
in
lahf
loope
push
shr
repz
push
dec
test
cld
imul
and
js
push
rcr
and
ds
bound
rorl
pop
addr16
xor
jae
dec
pop
inc
push
fst
dec
mov
stc
or
bound
in
imul
sti
dec
mov
adc
adc
cld
mov
push
xchg
inc
divb
jl
out
int
pop
jb
lahf
in
mov
mov
sbb
ret
dec
push
push
inc
xchg
imul
xchg
mov
fisubrl
outsb
xchg
xchg
call
ror
and
push
xor
jg
mov
adc
inc
rcrl
sub
jb
mov
frstor
pop
ja
cmp
mov
cmc
jl
ret
fwait
mov
enter
push
dec
daa
cmp
stos
xorb
clc
dec
inc
dec
repz
pop
pop
ds
cmp
jo
or
jg
hlt
aad
cmpsl
ja
cwtl
cmp
imul
jb
add
dec
mov
dec
daa
mov
addr16
pop
test
rcl
and
cmp
int
inc
xchg
and
shl
ljmp
nop
cltd
ljmp
add
mov
adc
fnsave
jae
lea
xchg
sbb
add
fildl
add
xchg
es
xchg
in
pop
sub
mov
jp
jno
pop
pusha
aas
out
sbb
movsl
pop
popf
sbb
rcrb
iret
in
inc
or
pusha
dec
nop
popf
push
repz
mov
jbe
daa
push
clc
mov
out
or
jp
cmpsl
dec
xchg
outsl
xchg
movsl
xchg
sub
cmp
xchg
pop
out
cli
enter
mov
cs
shll
xlat
dec
add
and
popf
lcall
scas
fwait
or
adc
add
mov
lods
pusha
data16
or
repz
jae
out
mov
jmp
popa
xor
les
repnz
inc
push
mov
call
out
push
xchg
sbb
mov
ja
data16
rep
push
call
loop
rorb
and
sbb
cmp
jmp
aas
jb
mov
mov
iret
lret
mov
dec
idivb
call
inc
push
xor
and
mov
dec
ficoml
rolb
cltd
pop
clc
stc
les
movsb
inc
enter
mov
jge
dec
mov
scas
mov
addr16
das
hlt
in
and
imul
stos
mov
jle
pop
inc
xchg
std
movsb
push
jmp
imul
loope
jns
inc
das
mov
arpl
mov
push
inc
repz
push
in
adc
cltd
mov
mov
cmp
and
cld
into
in
cli
cwtl
mov
inc
dec
dec
in
mov
add
mov
dec
std
cmpsb
mov
sub
ror
cmp
and
call
or
inc
in
lock
xchg
mov
adc
inc
and
je
imul
xlat
in
push
out
bound
ret
mov
das
fcompp
inc
cs
scas
outsl
add
mov
roll
inc
insl
cmpsl
mov
lret
jae
xor
stos
into
pusha
fisubrl
aam
cmp
xchg
sub
push
in
mov
xor
lcall
and
test
mov
mov
mov
mulb
mov
clc
shll
loop
pop
push
pushf
jo
xchg
sbbb
sbb
cmp
push
jo
dec
and
test
test
and
push
cli
push
shll
and
xchg
test
and
unpckhps
stos
idivl
pop
fistps
xchg
adc
leave
jg
mov
mov
test
dec
inc
stos
ret
lods
popf
fcoml
iret
inc
scas
nop
int
mov
out
daa
fisubl
mov
repnz
inc
insl
shrl
add
loopne
outsb
and
ret
pop
sbb
xor
jno
jno
jge
fimuls
and
xchg
mov
iret
jae
lret
into
mov
or
divb
mov
outsb
push
daa
je
mov
aas
aam
rorb
popa
sbbb
add
imul
popf
or
jl
and
jns
mov
test
inc
xor
jae
push
fsubrp
negl
lods
nop
int3
enter
into
es
jne
mov
push
std
cli
aam
pop
mov
gs
sbb
mov
les
mov
cmp
add
data16
mov
dec
out
cmp
in
inc
cld
sub
push
fmuls
and
andl
mov
into
sbb
cwtl
into
nop
aad
adc
outsl
dec
fists
dec
aas
lret
xorb
cmc
xor
xchg
mov
int3
lds
stos
and
push
jmp
arpl
movsl
into
andl
xor
int3
imul
inc
lods
adc
mov
xchg
gs
cwtl
dec
popl
pop
push
outsb
in
outsl
cmp
sub
pop
adc
stos
rcll
mov
es
pop
cld
adc
mov
xor
in
xlat
add
sbb
xlat
outsb
mov
cmc
cld
imul
add
push
mov
sbb
cs
lahf
mov
mov
jecxz
rcll
push
dec
or
push
mov
dec
pop
fldcw
fnstsw
xor
test
inc
sti
jno
popa
xchg
push
sbb
jle
pop
jo
fwait
sarb
or
adc
mov
jno
inc
aam
push
xchg
push
lahf
pusha
icebp
adc
add
push
dec
inc
ficoms
adc
out
or
mov
je
loopne
xor
inc
adc
jo
dec
popa
mov
cmp
lock
inc
xor
xor
fadds
stc
cmp
adc
or
pusha
frstor
cmp
sbb
icebp
fidivrs
xor
shll
inc
jle
addr16
scas
mov
pop
jmp
push
jge
popf
sbb
movsl
hlt
dec
out
xor
mov
mov
cmpl
pop
addr16
shlb
aas
mov
loope
sbb
and
jl
addr16
xchg
out
lods
jl
sub
cltd
negb
imul
xchg
inc
loope
loopne
popf
pop
lds
cmpsl
lods
out
jb
jnp
das
cwtl
push
imul
iret
pop
jns
add
cmpsb
and
imul
imul
xchg
mov
dec
push
out
mov
fdiv
or
iret
gs
rolb
cmp
sub
xchg
mov
cli
mov
les
sbb
cmp
lods
pop
test
inc
xlat
lcall
push
gs
aaa
shufps
movsb
jnp
add
sbb
jo
frstor
repz
iret
pop
ret
addr16
mov
mov
leave
incl
or
xchg
loopne
sub
rcll
xor
push
aad
arpl
and
into
cmpsb
cmp
fisubrs
pop
scas
imul
scas
aas
stc
pusha
add
ljmp
insl
inc
push
inc
in
jns
sub
pop
sti
std
add
rcr
xchg
lret
dec
rclb
ficompl
xchg
mov
rorb
dec
insl
xchg
or
and
sub
lock
cmp
and
stc
add
cmp
and
test
sbb
stos
imul
jno
inc
mov
inc
and
sub
popa
cmp
and
clc
ljmp
call
or
out
xor
pop
jg
and
and
push
stos
mov
push
mov
out
or
icebp
test
add
inc
and
ret
adc
jg
pop
mov
data16
dec
push
jp
scas
mov
xchg
mov
out
jns
rolb
push
repz
xchg
mov
int
fincstp
pop
mov
xor
mov
pushf
cltd
add
jmp
fiadds
dec
mov
nop
inc
mov
test
sbb
mov
cwtl
push
scas
mov
xchg
ret
mov
test
pop
or
xchg
in
sub
pop
cmp
movsb
fidivrs
mov
mov
pop
movsb
in
sub
pop
jecxz
rorl
pop
and
sti
mov
inc
stos
xor
jne
jno
xor
sub
cltd
nop
push
imul
mov
jmp
mov
or
popf
dec
adc
test
or
xor
jbe
clc
jle
dec
rorl
loopne
push
jp
cli
sub
test
pop
hlt
jne
push
enter
or
add
and
mov
jmp
jb
test
ljmp
and
sahf
into
fdiv
sub
enter
data16
loop
subl
movsl
subb
and
lods
dec
inc
stos
mov
dec
rorl
test
sbb
std
notl
bound
adc
or
mov
jnp
gs
adcb
or
xchg
xchg
jge
sub
dec
dec
mov
sub
inc
jecxz
mov
mov
inc
test
jns
js
incb
jg
jnp
cmpsb
jmp
or
add
dec
outsb
dec
inc
lods
add
cmpsb
sub
gs
mov
sbb
stc
in
aam
mov
xchg
jns
stc
movsl
dec
mov
mov
mov
cmp
mov
push
lret
cld
sarl
or
sub
pop
lds
mov
or
pop
daa
cmp
inc
xor
repnz
xor
xor
shrl
pushl
xor
fldenv
popf
mov
cmpsl
inc
and
and
loopne
or
and
or
call
adc
lods
jns
hlt
sbb
mov
test
sbb
xchg
cmc
xorb
push
adcl
xlat
cmpsb
in
inc
in
sub
xor
sbb
jecxz
fcomps
jp
filds
jns
das
pop
mov
sbb
adc
add
mov
jns
adc
fnstenv
cmp
or
mov
das
ret
xor
outsb
pop
jnp
pop
cwtl
mov
cmc
lret
bnd
sbb
dec
pop
dec
sarb
inc
push
mov
mov
cld
cld
mov
test
xor
loop
cwtl
dec
imul
sbb
pop
pop
dec
stos
jnp
nop
push
jmp
or
xorb
rclb
imul
sub
out
mov
cmpl
fisubs
sub
aam
jl
cmp
mov
enter
add
insb
sti
es
and
test
repz
mov
push
adc
gs
mov
push
jmp
mov
push
in
jae
hlt
in
mov
push
mov
pusha
mov
cwtl
mov
js
or
or
orb
shll
pop
rcrl
add
in
bound
bswap
pop
and
or
xor
ljmp
mov
lds
lods
mov
pop
jle
sbb
push
pop
inc
inc
xchg
data16
rorl
mov
shlb
rolb
fs
insb
imul
imul
sbb
and
insb
mov
or
int
enter
leave
mov
enter
gs
push
std
negb
and
add
fwait
cmpsb
mov
imul
mov
mov
xchg
adc
out
adc
or
fsts
pop
cmp
inc
mov
fisubrs
sarb
or
orb
ret
pop
xchg
adc
sbb
or
loopne
scas
jle
aam
pop
fadds
cmp
mov
fcmovnu
push
lods
imul
ficoml
xchg
jno
add
and
xchg
xlat
jns
xchg
inc
sahf
jle
mov
fwait
pop
std
fdivrs
int3
fstl
xchg
mov
movsl
mov
push
inc
pop
loope
shrb
pop
mov
inc
scas
test
push
jo
cmpb
push
fyl2xp1
adc
xchg
adcl
test
and
movsb
mov
sti
loop
lds
inc
shlb
push
xchg
jbe
sub
pushf
or
les
xchg
out
sar
pushl
stc
dec
rcrb
test
sbb
addb
out
push
arpl
mov
add
xor
cmc
mov
movq
mov
dec
adc
jl
sbb
test
nop
jg
mov
dec
sbb
test
jle
and
mov
mov
inc
cmpsb
es
sbb
and
inc
sbb
push
cltd
fsub
xor
push
add
es
aas
pusha
xorl
fimuls
lock
imul
xchg
push
outsl
mov
mov
adc
jne
push
imul
ds
es
adc
rcll
xor
sahf
inc
sub
adc
pop
push
push
cmp
jns
cmp
xchg
andl
aam
inc
outsb
test
int3
xchg
and
adc
notb
push
mov
push
fisttpl
mulb
mov
sbb
pop
lret
inc
dec
xor
xor
adc
out
or
add
inc
ljmp
and
pop
out
push
jle
lcall
scas
int
or
vandnps
inc
aaa
test
test
lea
mov
clc
jo
addr16
inc
cmc
test
push
sbb
cld
and
mov
cmp
sbb
mov
int
data16
inc
mov
xchg
ja
cmpb
push
insb
mov
ljmp
inc
cld
mov
lods
or
in
mov
daa
int
lea
mov
mov
and
push
dec
xor
cld
cmp
data16
adc
pop
add
call
cmp
lock
popf
rcl
cmp
out
loop
inc
scas
mov
negb
js
jl
adc
and
pop
mov
xorb
xchg
pop
lods
xchg
shrb
lret
inc
fcmovbe
pop
inc
jae
pop
cld
cld
xor
std
xchg
adc
cli
inc
or
lods
pushf
jnp
in
insl
jmp
or
clc
cmp
addr16
cld
inc
mov
cltd
fldl
pop
push
mov
cld
insl
lahf
mov
mov
enter
cmp
push
sbb
inc
sbb
insl
and
mov
mov
or
sahf
push
and
xchg
adc
mov
mov
pop
pushl
push
adc
push
shlb
mov
mov
fsubp
inc
mulb
pminsw
mov
ja
lcall
pop
xchg
ret
lret
fisubrs
dec
or
inc
movsb
xor
jle
sbb
imull
and
add
xor
aad
and
outsb
push
ljmp
ret
sbb
jecxz
fcmovnbe
adc
call
jmp
or
mov
pop
sti
add
imul
lds
roll
cmp
sahf
in
mov
neg
jb
xchg
push
and
lea
and
add
inc
pop
popa
push
test
pop
xor
jmp
cmp
cmp
daa
lret
in
dec
cs
mov
pop
pop
and
inc
nop
fs
cmpsl
mov
xchg
and
adc
xchg
orps
lods
dec
or
je
std
jge
fsubrl
lcall
lods
rorb
and
and
jbe
pop
inc
call
sub
bound
mov
jle
pop
js
insl
inc
mov
ret
xchg
push
pushf
rolb
mov
jo
cltd
outsl
push
mov
fucomip
cld
stos
xor
gs
mov
mov
sub
jmp
mov
pop
rcrb
dec
negb
push
push
flds
add
mov
mov
mov
pushf
lahf
or
mov
pop
mov
scas
mov
ja
pop
xor
outsl
into
push
cltd
cmc
xchg
into
insl
push
popa
mov
inc
nop
sahf
jb
jecxz
xchg
lds
loopne
stc
sub
in
loope
xchg
cmovne
in
ljmp
mov
cmc
pushf
pop
push
push
cmp
sub
loope
or
inc
sbb
or
cwtl
aas
insl
and
pop
adc
or
cltd
adc
addr16
xchg
mov
enter
daa
in
cwtl
repz
jecxz
dec
popf
push
dec
loope
jo
and
loope
and
daa
lea
add
or
rorl
push
into
cltd
es
adc
pop
adc
andl
jmp
push
or
jmp
adc
in
in
sub
or
inc
jne
out
fisubl
mov
ja,pn
lret
cli
sarb
shll
arpl
iret
lahf
mov
mov
into
push
jecxz
fdivr
out
outsb
addr16
push
imul
adc
push
cmp
lret
cmpsl
hlt
mov
add
mov
in
push
lock
cmpl
aad
movsl
sub
xchg
rolb
jmp
lret
xchg
sub
and
jecxz
xchg
cmp
ljmp
inc
xchg
lahf
push
cmc
fiadds
push
imul
push
add
imul
inc
jle
inc
cmc
pop
jg
push
filds
jne
cwtl
ds
push
add
or
iret
jae
cmpsb
sbb
xor
and
mov
aaa
cwtl
out
cld
mov
mov
pop
mov
adc
aad
and
dec
dec
xor
mov
rcrb
loopne
negb
or
push
lea
adc
xchg
testb
add
cmp
nop
mov
pop
scas
ret
cs
aaa
cltd
sub
cmpsb
mull
idiv
les
mov
adc
adc
jp
jnp
int
data16
in
loop
stos
push
push
imul
dec
jo
faddl
sbb
ret
or
out
lock
movsb
scas
xchg
dec
ds
insb
cmpsb
out
out
jnp
loop
xor
or
addb
xor
aaa
inc
int3
inc
mov
mov
pop
sbb
imull
fs
or
mov
lret
and
add
inc
mov
out
mov
faddp
xchg
add
loop
jo
jmp
push
les
cmp
and
push
jo
aam
jmp
add
pusha
rcr
cmp
fildl
adc
cmp
mov
enter
pop
into
loopne
xchg
das
outsb
daa
push
pop
push
aam
ficoml
lret
neg
inc
ljmp
sub
loop
and
outsl
mov
test
inc
dec
and
push
fdivr
data16
dec
and
stos
sahf
insl
je
ja
lcall
sbbb
xchg
cltd
jp
jb
bound
pusha
bound
mov
lea
lods
mov
xorb
push
cmpsl
pop
ljmp
fiaddl
cmpsl
int3
inc
data16
in
pop
mov
nop
cmpsl
fwait
ds
push
jbe
test
fistl
out
xchg
dec
jno
lret
loope
jb
push
sti
jp
loope
push
sbb
stos
bound
cmovbe
jb
add
fldl
pop
cmp
jo
daa
popa
popl
outsl
mov
jecxz
int
inc
lret
lret
xchg
mov
outsb
es
das
push
test
pop
push
add
cmp
or
iret
jns
sahf
ret
hlt
xor
jne
push
push
mov
inc
aas
push
pop
xchg
iret
jb
mov
jecxz
and
in
roll
inc
das
fists
sti
jo
mov
movsl
cmp
cmp
rorl
ret
int
and
dec
stos
in
or
dec
push
lar
adc
xchg
lock
fs
scas
stos
jno
push
mov
je
mov
pusha
arpl
adc
adc
push
xor
insl
adc
jne
mov
mov
cmp
cmpsb
sub
bound
insl
pop
aas
push
push
inc
jnp
ja
push
dec
das
xchg
mov
stos
or
sti
inc
mov
add
mov
js
cs
test
aad
arpl
dec
xor
sub
push
int3
popf
xchg
in
cmp
mov
daa
lock
push
fadds
jno
pop
mov
pop
movsbl
push
pop
cmc
pop
push
sahf
xor
test
inc
push
outsl
xchg
dec
pop
cmovbe
add
cmpsl
outsl
sbb
neg
mov
xchg
cmp
sti
stos
cmp
lcall
mov
cld
shll
pop
xchg
sbb
mov
mov
loopne
data16
mov
jle
jne
sub
daa
cli
mov
mov
bswap
loop
cmc
sbb
add
test
sub
arpl
pushl
lcall
aas
pushf
rcrb
push
mov
cmp
nop
sub
inc
pop
cmp
shlb
or
mov
scas
and
imul
mov
and
lahf
lea
orb
xchg
cld
movsl
xor
cmp
pop
mov
sahf
mov
sbb
scas
rclb
inc
inc
cld
dec
mov
shrb
or
cmp
pop
pop
jg
sbb
les
and
mov
mov
stc
imul
lock
out
inc
ret
sub
push
mov
daa
sub
sub
aas
add
and
mov
jp
loope
repnz
inc
mov
fstps
testl
sub
mov
arpl
mov
inc
out
jbe
jge
push
shll
adc
sbb
pop
jno
stc
cmc
cltd
cmp
mov
fnstenv
or
rcrl
pop
xlat
xor
fs
push
test
mov
imul
ficoms
and
and
popa
mov
test
push
into
es
and
call
dec
das
pop
mull
jle
lret
sti
mov
mov
andb
scas
cwtl
pop
push
or
mov
jo
add
push
sahf
sarb
int
adc
push
sub
sbb
fimuls
ds
fcompl
lcall
dec
cmp
mov
add
xchg
and
pusha
jmp
es
lods
gs
jp
mov
pushf
fs
call
inc
push
cmp
sub
punpckldq
xchg
pop
mov
adc
cmc
data16
push
movsb
mov
out
stc
jae
aam
sub
jg
shlb
aad
inc
push
jno
jg
sahf
push
cmp
fldt
fbld
sub
push
out
icebp
mov
adc
movsl
push
add
xchg
not
das
lea
jg
in
loope
sbb
sub
xor
xor
mov
add
enter
inc
mov
xor
loope
fwait
adcb
cmp
in
mov
adc
mov
ret
loop
pop
les
jae
dec
das
jl
stos
ljmp
sahf
mov
lahf
cwtl
and
stos
mov
leave
aas
insl
inc
sub
xor
andl
enter
push
in
fstl
stos
add
stos
test
add
mov
outsl
xor
and
es
mov
adc
sbbl
rolb
xor
sbb
or
mov
repz
cmpsb
or
and
sub
cmp
fstl
sbb
cmp
mov
xor
das
mov
out
pop
xor
out
mov
jo
and
push
add
adc
push
xchg
jge
mov
or
mov
int
or
jno
push
inc
xchg
cmp
mov
call
mov
mov
dec
les
scas
stos
pushf
push
lret
dec
std
sti
out
nop
dec
sar
mov
in
cld
pop
nop
mov
inc
fcom
jb
nop
cmpsl
cmp
dec
xchg
sbb
pop
jne
cmp
add
mov
or
mov
adc
icebp
and
jbe
cld
mov
jnp
sarl
sbb
cmpsb
push
adcb
mov
vpslld
sub
inc
cmp
sbb
loopne
mov
mul
cmpsl
adc
cltd
add
stos
mov
dec
push
js
outsb
fdivrs
mov
add
xchg
lods
cmp
adc
xor
insb
into
mov
nop
xchg
inc
mov
pop
pop
xchg
loope
jle
aam
popf
push
sub
pop
outsb
cmpsl
cmp
movsb
out
mov
cli
out
adc
out
mov
lea
adc
hlt
xorl
push
rolb
lcall
mov
adc
adc
leave
daa
leave
cmp
shlb
or
mov
pop
pop
sbb
scas
inc
call
add
incl
mov
aaa
inc
sahf
jle
mov
incb
xor
xchg
das
inc
dec
mov
xor
mov
pusha
ljmp
shlb
sbb
adc
xor
subl
repz
xchg
fiaddl
movsl
lret
sbb
lcall
das
rol
pop
aaa
pushf
inc
add
jl
mov
call
push
ljmp
push
or
pop
dec
ds
imul
ss
pop
xchg
pop
cli
adc
pushf
jno
loopne
xor
cmc
bound
add
adc
in
out
std
jns
inc
scas
iret
inc
clc
cs
add
and
sbb
add
ds
scas
stos
fmuls
scas
mov
jge
add
jecxz
cmp
rol
dec
sub
xchg
insl
jo
mov
pop
cmp
into
aas
mov
push
roll
js
jl
push
test
fidivrs
int3
mov
jecxz
push
add
negl
jecxz
push
push
mov
jo
or
cmp
and
inc
sbb
adc
mov
rcrl
and
or
xchg
in
test
loope
addr16
mov
cmp
and
xchg
sbb
mov
adc
ficomps
aaa
int3
mov
or
xchg
lea
popa
push
mov
xor
int
movsl
adc
inc
in
add
cmc
push
fldl
dec
iret
push
subl
repnz
mov
out
pop
jmp
jae
int
xchg
cmpb
rcll
xchg
add
add
pop
nop
add
pop
cs
into
das
xor
in
mov
sub
out
xor
and
cmp
ret
push
dec
dec
mov
rolb
pushf
or
inc
fs
xor
lds
sub
mov
addb
stc
sti
mov
out
inc
mov
cld
rcrb
mov
push
pop
scas
inc
loop
sub
jp
aam
pop
sti
ficomps
subb
dec
mov
out
rclb
sbb
xchg
xor
mov
jecxz
jne
lock
pop
cs
mov
dec
flds
pushl
jp
push
orb
repz
dec
adc
and
call
ffreep
out
rcr
xchg
or
je
xor
shrl
xor
cmpsb
es
in
pop
cmc
adcl
mov
sti
rclb
mov
in
insl
xor
sub
imul
add
pop
sar
lea
jecxz
pop
mov
or
loopne
fnstcw
inc
into
inc
mov
xchg
fwait
sbb
adc
xchg
xchg
fisubrs
loopne
pushf
mov
and
mov
dec
mov
inc
or
aaa
jg
xor
pop
sbb
bound
popf
ds
fwait
sub
add
push
push
lret
cmp
jb
aas
pusha
aam
in
xor
sbb
clc
add
xor
cltd
test
out
test
push
insb
in
mov
xchg
aad
adc
into
pop
adc
je
mov
mov
sub
jmp
pop
mov
cmp
xchg
adc
adc
shl
rcrl
dec
sub
pusha
fnstcw
les
sub
ss
loopne
fucom
xor
syscall
imul
jnp
into
arpl
divb
aad
mov
pop
xchg
mov
test
repnz
and
push
jnp
mov
cwtl
fadds
lea
loop
lds
cmp
aas
and
pop
sub
les
lods
xchg
aas
or
or
sbb
xorb
dec
addb
lock
jl
test
mov
fcmovne
mov
idivb
cmpsl
aam
dec
loope
inc
std
rorl
pop
push
repz
add
jl
cmp
ret
lea
shr
push
sti
dec
add
adc
inc
icebp
repnz
jae
rcrl
push
nop
xchg
pop
xchg
sbb
xchg
outsb
adc
mov
ljmp
repnz
sahf
xor
adc
sbb
lods
mov
out
outsl
xchg
daa
jb
out
cmp
pusha
ss
xor
prefetchw
cli
mov
push
cmp
dec
sub
and
add
cltd
aaa
mov
jl
imul
rcr
pop
push
mov
arpl
shrb
pop
out
stos
jae
mov
insl
inc
xchg
cmp
int3
lods
xchg
push
mulb
ljmp
fists
lds
mov
and
or
and
mov
test
dec
dec
adc
xchg
ds
popf
pop
test
data16
ljmp
loop
dec
push
call
cwtl
lahf
fistpll
push
dec
push
sarl
rcr
mov
xchg
inc
testl
sub
shrl
xor
out
adc
in
js
decl
in
mov
loope
lret
adc
dec
lock
sahf
xor
pop
std
mov
sti
sti
jg
imul
mov
fwait
cmp
adc
cld
shl
test
das
int3
cmp
cli
mov
add
push
repz
cmp
xor
pushf
idivl
mov
lea
xchg
ret
and
into
mov
movsl
xchg
popa
add
pop
mov
inc
push
test
add
mulps
pushf
lea
xor
and
inc
push
sub
gs
loop
mov
out
mov
rclb
lock
mov
mov
mov
mov
rolb
fnstsw
sbb
and
clc
into
hlt
mov
mov
repz
inc
adc
inc
out
xchg
scas
xlat
insb
ljmp
add
lea
ret
int3
call
cltd
adc
dec
mov
and
xchg
scas
ljmp
lcall
sub
lods
cmp
std
imul
cld
dec
popf
ret
add
mov
push
mov
mov
adc
mov
pop
mov
cli
dec
pop
inc
mov
repz
push
push
fwait
cmpsb
rcrl
sub
xor
add
mov
xchg
je
pop
jl
xchg
lcall
and
data16
cmp
cs
add
inc
insb
bound
cmp
jmp
jp
cmc
adc
push
leave
ja
or
add
data16
pop
pop
jecxz,pn
adc
jle
sub
inc
divb
or
dec
popf
data16
mov
pop
fidivrs
orb
stc
in
jae
ljmp
jnp
icebp
mov
dec
push
xlat
sti
xchg
clc
int
rcll
int3
test
mov
roll
mov
inc
sahf
push
shr
mov
dec
iret
cmp
push
pop
in
adc
arpl
and
test
in
std
test
ja
xor
shlb
adcl
push
jb
mov
mov
mov
xor
xchg
and
outsb
mov
or
daa
aas
ljmp
jnp
jne
or
rolb
and
mov
divb
fldcw
dec
push
jle
xchg
out
or
adc
and
jmp
repz
dec
sub
fsubs
pop
int
pop
mov
fisubl
xchg
mov
and
jge
push
fcoml
loopne
insl
inc
and
jno
or
add
adc
or
ds
cmp
push
cli
push
mov
jmp
cmc
inc
ds
xor
mov
sub
sarl
dec
test
ljmp
fcmovnb
in
xchg
scas
push
in
sbb
call
xor
xchg
inc
xchg
out
fcmovb
fistpll
mov
aam
push
jo
scas
pop
dec
pop
mov
jbe
push
sbb
test
in
mov
inc
adc
pop
mov
or
fwait
cwtl
xchg
jge
sarl
jno
xor
or
test
push
mov
cs
jbe
mov
aam
inc
mov
ljmp
mov
ds
ljmp
push
sarb
shlb
lea
nop
dec
enter
mov
jbe
xor
sub
out
jl
fidivrs
dec
dec
cmp
sub
inc
push
ss
mov
sub
outsb
cmpsl
pusha
jl
sbb
inc
push
and
mov
fnsave
pop
loop
outsb
rol
test
push
push
xchg
xchg
pop
data16
or
pushf
xor
mov
xlat
jge
shlb
fstl
xlat
mov
adc
into
sbb
icebp
aam
stos
scas
xor
or
daa
or
mov
daa
pop
pushf
outsl
ljmp
fcmovnb
arpl
sbb
lds
into
mov
aad
sub
popa
cwtl
push
jg,pt
mov
cmc
je
inc
je
and
lahf
pop
outsb
adc
mov
adc
out
je
rcll
and
cmp
cmp
add
int
cmp
mov
aaa
sub
add
mov
mov
sti
daa
dec
pushf
pop
inc
les
test
xchg
mov
mov
and
cld
adc
ss
scas
ret
adc
popa
hlt
adc
outsb
lahf
je
inc
cmpsb
inc
sub
jmp
add
out
sub
or
iret
adc
rcrb
cmp
fimuls
rcl
aam
dec
dec
jbe
push
rcrb
pusha
xor
jns
mov
int3
les
sbb
push
and
mov
and
lods
pop
aaa
popw
movsl
xor
adc
iret
push
and
out
xchg
xor
xchg
psubsb
pop
imul
pop
add
outsl
stos
cmp
or
in
js
aam
mov
sub
dec
lods
iret
ret
xchg
mov
test
and
mov
sub
and
mov
push
inc
dec
mov
pop
mov
mov
mov
dec
ljmp
filds
and
adc
mov
loope
pop
bound
ret
mov
ret
popa
test
mov
lods
int
xor
in
cwtl
out
stos
les
cmp
sub
lock
jne
stc
pop
insl
xor
out
xchg
cmp
pop
mov
mov
push
aam
mov
inc
insb
sub
mov
xor
sub
inc
inc
aam
dec
gs
sbb
sti
stos
ss
sub
pop
inc
or
test
je
and
cwtl
mov
jnp
xchg
fwait
cs
sub
or
nop
cltd
dec
mov
jmp
fld
out
mov
fistpll
mov
push
aaa
or
out
cli
dec
in
pop
add
clc
aaa
aaa
and
sub
adc
data16
roll
leavew
xchg
or
stos
imul
jbe
push
out
js
push
fisttpl
cld
imul
inc
ficomps
loope
stc
inc
cmpsl
gs
js
lds
leave
stc
or
int3
cs
in
push
xchg
into
pop
sbb
adc
and
pushf
mov
or
repz
out
mov
or
loope
pop
and
stos
outsl
daa
xchg
ljmp
leave
mov
jl
test
faddl
dec
addr16
jg
movsb
mov
ja
push
addr16
shll
adc
insl
xor
sub
ret
outsb
push
test
dec
call
data16
movsb
add
jo
std
sti
sub
leave
push
sbb
ja
data16
lea
clc
sub
push
push
push
sub
test
mov
cs
pop
aaa
fwait
bound
es
iret
test
xorl
adc
rolb
sub
xor
pop
imul
popa
mov
add
sbb
push
adc
popf
aam
push
imul
sti
jo
jo
xor
mov
jge
pop
movsb
test
dec
xchg
rorb
mov
out
xchg
imul
jmp
sbb
scas
mov
mov
fcomip
dec
cltd
ret
cmc
pop
xchg
xchg
xchg
sub
cmp
ss
inc
jecxz
pop
xlat
lock
mov
fcompl
test
add
inc
stos
pabsb
xor
mov
pushw
xchg
nop
or
mov
mov
aam
mov
push
sbb
test
sbb
rcrl
xchg
cmp
call
add
xchg
movsl
cltd
rcrb
inc
push
ds
rolb
mov
pop
sbb
cmp
mov
jbe
in
jno
adc
xchg
sbb
outsb
or
addb
jb
lock
call
pop
fimull
and
clc
popf
lods
js
pop
push
int
sbb
stos
xchg
cli
hlt
mov
daa
mov
push
adc
into
dec
xor
add
and
cs
sti
fmuls
cmp
ficomps
sbb
mov
arpl
lahf
imul
sub
xor
shll
sbb
call
pop
pop
fdivr
pop
sbbb
int3
test
pop
in
pop
jae
nopl
mov
imul
inc
loopne
push
and
int
sbb
nop
lds
rolb
imul
repz
jp
jmp
add
sbb
movl
add
mov
mov
jns
pop
mov
sub
mov
push
addr16
mov
cwtl
outsb
ja
jmp
mov
push
xchg
sub
push
mov
xor
ret
xchg
mov
ficoml
cld
pusha
gs
push
xchg
jle
adc
adc
stos
dec
cwtl
ret
adc
pop
fprem
cmc
inc
jmp
movsl
daa
adc
mov
xor
enter
xlat
push
test
mov
jecxz
mov
mulb
inc
mov
cmp
xor
jmp
arpl
out
mov
lods
cld
add
and
in
sbb
aaa
cwtl
filds
imul
nop
jecxz
mov
clc
push
fwait
rcrl
push
popa
jle
jp
divb
xchg
outsl
pushf
or
mov
sbb
xchg
lcall
lcall
outsb
leave
pop
lcall
xorl
aaa
addb
cwtl
popf
pop
add
xchg
xchg
mov
dec
xor
xor
cmp
imul
push
ljmp
cmp
push
pushf
rcl
stos
sbb
push
into
aaa
adc
scas
cmp
outsl
out
sub
pop
dec
hlt
dec
sti
inc
or
sbbl
mov
movsb
adc
clc
fistpll
pop
adc
add
in
mov
mov
outsb
cmp
cmp
shll
inc
inc
or
scas
xchg
mulb
sti
ret
leave
sub
xchg
jle
lock
loope
push
in
xor
pusha
les
int
movsl
fisttpl
in
inc
mov
aas
fldenv
bound
mov
std
dec
push
pop
call
mov
movsb
mov
adc
jne
dec
jge
pop
push
inc
sbb
xor
dec
test
mov
push
les
sub
shlb
push
shrb
lock
les
mov
xchg
shl
mov
cwtl
lods
lods
mov
cld
imul
pop
nop
lahf
mov
aas
shll
loope
dec
or
cld
popa
push
or
insb
sub
movsl
mov
idivl
addr16
push
fisttps
xchg
pop
and
ret
mov
jo
and
dec
xchg
bound
dec
and
dec
add
add
jp
pop
call
push
inc
xor
mov
mov
xchg
cld
cltd
adc
push
daa
addb
dec
sbb
xor
xchg
fld
int
lahf
jl
es
xchg
cs
xor
in
xchg
cmc
mov
xor
clc
out
push
push
cwtl
mov
int
mov
lcall
stc
std
hlt
cmc
sub
add
fs
adcb
sahf
inc
enter
inc
adc
xchg
into
sbb
and
int
inc
fmull
negb
aas
out
dec
xchg
sahf
add
dec
data16
mov
or
mov
jecxz
in
test
xchg
push
mov
inc
rcll
jns
and
sub
jno
mov
inc
lods
jge
sbb
mov
or
xchg
pop
add
pop
out
xor
add
mov
xchg
inc
push
mov
or
shll
xchg
pop
jae
and
out
mov
mov
sbb
sbb
fmuls
lock
jae
nop
out
adc
loopne
sub
push
pop
pop
mov
lock
jnp
xchg
or
push
and
test
sahf
add
nop
cmp
das
mov
adc
ficompl
imull
ficomps
bound
push
xchg
push
mov
out
shlb
adcb
ja
aaa
jns
adc
mov
adc
std
insb
push
mov
sub
shll
sub
sar
or
daa
add
xorb
out
test
or
xor
mov
inc
lret
cmpsl
or
adc
stos
out
fbld
push
aam
sub
insl
mov
js
js
shll
icebp
push
mov
loope
xchg
repnz
adc
pop
lahf
cli
hlt
ficomps
adc
repnz
in
les
jg
test
jge
scas
fstps
decb
imul
add
push
mov
outsb
aas
adc
movsl
test
or
dec
adc
xchg
adc
rcll
orb
mov
arpl
xor
push
inc
lods
sbb
xchg
imul
or
out
mov
jp
into
sub
inc
lret
xor
ja
push
push
dec
push
add
xchg
enter
mov
jl
or
lcall
test
je
mov
fisttpll
mov
add
stos
mov
test
inc
pusha
add
add
rol
add
or
xor
pop
inc
mov
cmp
xchg
movsb
lea
add
jno
mov
mov
lods
sbb
cmp
shrb
mov
mov
and
jne
mov
push
jp
rcl
in
rclb
test
adc
lds
xchg
and
cld
and
insb
xor
out
int3
pop
or
leave
push
cmp
aaa
lods
dec
lret
out
pusha
pop
mov
xchg
sbb
into
dec
sbb
mov
adc
test
shl
cmpsb
in
inc
push
cwtl
jns
sub
dec
bound
or
orl
jae
pop
test
cmp
xor
mov
in
and
dec
fnstcw
push
push
pop
add
mov
xchg
test
je
stos
inc
orl
iret
or
mov
stos
int
les
sbb
ficompl
outsb
lret
xchg
pop
movsl
pop
call
cmpsb
mov
cmp
out
jae
pop
and
xor
mov
jmp
sub
out
adc
adc
pop
jle
ja
xor
and
dec
enter
movsb
out
jnp
fisttpll
das
mov
mov
adc
test
les
arpl
mov
sbb
nop
and
scas
gs
sbb
sub
jecxz
mov
popf
mov
inc
ss
pop
in
xor
jp
inc
push
insl
xchg
push
inc
pop
std
push
popa
sub
cmpsl
aaa
or
mov
and
adc
hlt
mov
lcall
notl
mov
es
adc
movsb
jb
insb
jl
jecxz
pop
jmp
insb
out
inc
stos
dec
call
push
sub
mov
leave
test
dec
mov
sarb
mov
nop
lods
addr16
ja
cmpb
push
dec
xor
push
add
xor
xor
sub
sbb
mov
je
pop
xor
mov
pushf
pop
lea
adcl
loope
cmp
dec
ja
mov
inc
push
pop
lahf
and
int
xchg
jno
and
mov
jecxz
in
ret
push
push
cmpsb
adc
inc
arpl
xchg
push
mov
pop
mov
push
outsb
fdivrl
lods
clc
cwtl
jae
lret
out
sub
insb
sbb
mov
insl
subl
pusha
arpl
shrb
imul
andl
dec
stos
pop
lret
lock
mov
sub
lods
jp
or
mov
cmp
int3
mov
cli
test
jbe
dec
or
in
test
and
pop
repz
ljmp
mov
into
test
jns
xchg
mov
test
gs
call
jecxz
leave
es
int3
scas
divb
ja
jl
push
adc
cmp
movsl
testb
fwait
pop
jno
and
out
adc
movsb
sbb
jle
pop
add
in
jg
xchg
xchg
ljmp
cmp
es
inc
dec
jle
jno
push
aaa
stc
jge
dec
or
xchg
pop
idivl
loopne
outsb
mov
xchg
inc
lret
mov
lds
xchg
in
testl
scas
cmpsb
pop
andb
lods
mov
dec
mov
xchg
jae
sbb
push
mov
loope
and
jb
loopne
sbb
jecxz
iret
push
insl
cmp
repz
adc
hlt
je
pushf
fdivr
mov
sbb
icebp
lret
adc
iret
dec
les
ja
ret
iret
jne
xchg
lcall
push
mov
jo
not
inc
push
jle
pop
mov
push
fucomp
leave
or
icebp
push
add
mov
and
mov
and
imul
das
mov
stos
push
cmp
push
xor
pop
and
gs
popf
mov
jmp
mov
xor
and
inc
inc
gs
push
jae
cwtl
pop
jmp
xor
mov
mulb
in
push
fstpt
lahf
imul
pushl
scas
aas
or
adc
sub
iret
and
adc
imul
cmp
cmp
je
shll
xchg
enter
or
inc
jno
inc
jle
out
mov
add
add
adc
inc
aad
movsl
xchg
subb
sbb
adc
xchg
dec
push
fiaddl
sub
mov
dec
or
shrl
nop
movsl
aaa
xchg
mov
rclb
repz
add
or
call
mull
xor
mov
pop
fisubrl
ss
fisttpl
cmp
dec
enter
add
movsl
push
repz
fsubrl
or
mov
push
repnz
sub
rorl
pop
xchg
notl
sub
inc
mov
lcall
fisubs
push
in
lret
jb,pt
xor
jg
in
sbb
fildll
jb
out
int3
orl
leave
adc
rorl
scas
pop
lret
jno
out
cmp
ds
mov
popf
or
pop
shr
cmp
nop
cltd
dec
test
dec
xor
lods
dec
out
fidivrl
push
rcll
xor
add
outsb
mov
mov
add
jo
mov
gs
pop
pop
pop
jno
mov
test
jl
das
sub
pop
fstps
inc
cld
lea
int
mov
ret
and
mov
jno
push
fwait
rclb
lret
mov
lahf
out
outsb
sub
mov
xor
popf
in
in
hlt
mov
push
sub
fadd
xchg
jle
in
mov
xchg
scas
sub
mov
mov
int3
mov
sub
cmc
dec
rcr
push
mov
negl
jecxz
mov
or
lahf
mov
negb
imul
int
stos
test
insl
lcall
mov
movsb
cmp
ja
jbe
cmpb
test
rolb
cmp
test
dec
clc
mov
std
mov
clc
sub
pusha
push
inc
mov
test
dec
mov
xchg
xor
in
pop
inc
mov
or
cmp
imul
xchg
sarb
xor
fwait
mov
mov
stc
dec
sub
xchg
jge
stos
aad
aam
jb
test
add
push
repz
jl
jmp
iret
and
negl
outsl
or
mov
add
sbb
lahf
popl
push
arpl
rcrb
ss
sti
out
test
shrb
loop
xor
orb
out
or
sti
mov
fs
int
add
sub
sub
jns
lods
cmc
push
push
out
mov
and
cmp
adc
xchg
fidivl
sub
cli
in
insb
loop
inc
fstpl
cmp
jg
roll
push
lcall
inc
enter
insb
push
fbld
add
adc
sahf
jge
int
cmp
out
pop
movsl
aad
leave
or
ret
inc
lods
xor
xchg
sub
xor
xor
outsb
push
out
dec
andl
ret
test
sarb
xor
adc
jbe
push
sub
jg
and
cmpl
mov
mov
push
cmp
sub
pop
jae
mov
push
cwtl
or
jb
call
dec
cmpsl
mov
aaa
cwtl
sarb
sbb
lahf
lds
jecxz
jbe
jmp
in
dec
dec
mov
pushf
mov
pushf
and
mov
adc
jg
mov
mov
mov
push
cvtpi2ps
fisubrl
pop
into
int
es
and
ret
stos
jle
les
mov
stc
repnz
xor
mov
mov
add
shll
scas
jmp
sar
iret
mov
out
pop
xor
hlt
out
add
mov
inc
jle
lret
nop
sbb
dec
xchg
loop
jmp
mov
adc
cmp
cmpb
into
sub
mov
jo
or
mov
push
xchg
int
adc
mov
add
test
and
in
dec
pop
add
xor
push
loope
mul
xor
xor
adc
lock
stc
mov
std
adc
adc
inc
in
cmp
mov
pusha
pop
fistl
adc
adc
fidivs
aam
movsb
movsb
and
xchg
mov
mov
sub
mov
dec
addl
cmp
dec
cltd
orl
jnp
dec
xchg
out
or
cmp
lock
iret
movsb
lcall
shl
popf
mov
pushf
les
call
xor
stc
xor
in
sub
test
pop
push
mov
loopne
popa
jbe
test
clc
fdivs
add
push
or
addb
addr16
iret
xlat
sbb
jno
inc
ret
call
cli
sti
mov
push
pop
xchg
daa
aas
ja
add
out
pop
sti
or
xchg
and
in
push
lret
xchg
aad
ss
sub
inc
in
fsubrl
aas
and
test
in
cmpsb
lcall
sub
mov
pop
je
pop
lret
test
sub
xchg
clc
xchg
dec
sbb
fwait
pop
push
mov
xchg
fwait
jo
call
sahf
push
sbb
push
sbb
data16
cmp
sbb
and
pop
fwait
pop
push
cltd
push
es
loop
or
daa
pop
jmp
ret
mov
xor
inc
push
jns
gs
outsl
dec
xchg
test
pop
imulb
sub
inc
mov
test
jmp
xor
push
flds
out
leave
dec
xchg
cmp
pop
test
inc
xchg
enter
pop
push
dec
mov
add
rorb
dec
mov
dec
mov
ret
jge
jne
jecxz
push
repz
xchg
mul
mov
sub
lret
scas
add
xor
xor
adc
xchg
sbb
imul
pop
dec
dec
push
mov
in
jge
pop
test
sub
adc
mov
insl
xor
pushf
in
adc
aam
cmp
out
popf
fadd
cmp
dec
popa
cwtl
pop
push
mov
add
sub
or
xlat
pop
jge
sbb
mov
adc
lods
mov
das
out
xor
arpl
push
add
hlt
xchg
cmp
in
test
mov
or
xor
inc
sub
pop
push
add
cmp
and
ja
lret
movsl
lcall
xor
mov
pop
add
sarb
xor
mov
mov
push
mov
push
push
enter
jno
stos
popa
fwait
inc
jns
jl
push
mov
dec
xchg
fmuls
mov
push
ficomps
adc
push
sub
mov
cmc
repz
xchg
jnp
nop
rorb
mov
or
inc
adc
popf
cld
es
mov
aas
sti
inc
scas
push
and
or
pop
push
sub
add
mov
lds
testb
push
fs
push
enter
adc
or
stos
lods
jle
sti
lahf
out
push
fiadds
cmp
out
imul
jle
andb
iret
xchg
out
add
aaa
dec
xor
movsl
cmp
je
loopne
xlat
sbb
mov
sub
daa
mov
in
sbb
idiv
inc
dec
pop
push
and
and
into
adc
mov
hlt
inc
je
sub
xor
or
std
fnstcw
sbb
scas
pop
popa
pop
insb
mov
fnstcw
mov
xor
push
fidivrl
sub
jle
mov
fists
sbb
rcl
pop
inc
bound
jae
add
pop
jp
cmp
push
jbe
cs
mov
push
bound
das
in
test
into
cmp
mov
sub
icebp
cmp
fwait
sbb
int3
inc
mov
icebp
sbb
roll
cltd
mov
negl
imul
dec
orb
jle
std
fldt
stc
mov
fnsave
jnp
arpl
lcall
push
cmp
std
sub
into
mov
mov
or
ss
call
movb
add
xchg
outsb
pop
int
shll
incl
lret
jecxz
mov
jl
test
rcr
jl
mov
addb
cmpsb
push
cmpsl
cmpsl
mov
dec
loopne
int3
gs
pop
imul
shr
mov
jecxz
ret
int
sbbl
outsb
adc
test
shrb
loope
lods
test
pop
add
xchg
pop
js
test
std
sbb
or
sbb
test
dec
inc
popf
jb
pushf
adc
movb
pop
xchg
inc
mov
aaa
fwait
rolb
js
js
lret
fs
jo
jns
inc
xchg
clc
cld
or
fwait
cmp
push
aas
daa
or
pop
enter
outsl
inc
push
out
popa
and
push
pop
adc
mov
push
mov
jl
in
pushf
hlt
jns
ret
int
mov
jns
pop
ds
nop
in
mov
cmp
lods
pusha
or
insl
mov
cmp
pop
call
pusha
add
inc
fs
add
lds
xor
not
cmp
pop
ret
shrl
inc
dec
pop
ret
mulb
sbb
and
xchg
nop
jno
sahf
cmp
dec
jp
xor
out
mov
test
cmp
das
cmc
cli
iret
addr16
inc
xchg
dec
daa
aad
stc
bound
add
cmp
xchg
push
jmp
dec
sbbl
aaa
mov
inc
test
ror
and
stc
push
pop
or
popa
mov
push
push
mov
adc
or
jg
les
sbb
cmpsl
cmc
movsb
lods
loopne
cmovle
fidivrl
or
and
inc
in
movsb
cmpb
loopne
clc
dec
xchg
rcr
pop
scas
in
cmpsl
enter
lods
push
lods
mov
leave
lock
insb
adc
lods
inc
xor
inc
ss
js
pop
fnstenv
mov
pop
out
xchg
dec
repnz
andb
pop
fmull
mov
dec
les
mul
je
jg
mov
in
iret
push
jmp
cmc
insb
add
cmp
lds
cmp
lcall
adc
cmc
adc
mov
and
push
in
jae
rorb
fnstenv
mov
xchg
mov
mov
jbe
cwtl
add
and
test
sub
faddl
in
jne
mov
mov
mov
push
push
les
push
loopne
push
dec
adc
pop
outsb
mov
xchg
mov
xchg
xor
rcrl
mov
shlb
push
mov
mov
or
sti
mov
xlat
movsb
outsl
rcrl
jnp
or
imul
ret
nop
fdivp
cld
push
fsubr
cmp
dec
sub
push
icebp
adc
or
pop
adc
nop
rclb
cmp
mov
popf
jbe
fmull
mov
bound
sub
mov
dec
outsl
or
mov
aad
not
sti
shlb
bound
push
push
mov
mov
sbbb
cmp
inc
les
push
and
mov
imul
mov
xchg
stos
or
hlt
dec
mov
andb
loope
fwait
std
imul
push
es
adc
push
imul
pop
push
mov
jnp
adc
sbb
inc
mov
mov
fiadds
iret
popa
jge
xor
fs
es
and
add
xchg
pop
leave
in
subl
mov
hlt
aam
or
stos
fwait
xchg
sbb
inc
insl
or
aam
fnstcw
sbb
push
fistl
in
sarl
add
fucomip
stos
pop
xor
mov
in
popf
xchg
cmp
push
out
and
add
adc
add
mov
or
fdecstp
add
jp
mov
jno
lret
sub
xchg
mov
gs
sbb
jae
cmp
pop
xchg
fidivl
xchg
pop
mov
sbb
jp
bound
popa
push
cltd
test
dec
push
jne
mov
pop
fwait
mov
xchg
daa
mov
xchg
iret
and
fs
adc
lret
negb
or
mov
dec
and
xor
loope
ret
mov
hlt
sbb
xchg
pushf
pop
adc
cltd
fwait
lds
push
mov
pop
dec
aas
movsb
jge
sbb
addr16
shl
pusha
dec
mov
dec
mov
cmp
lods
sub
pop
mov
dec
pop
mov
imul
add
sahf
out
and
dec
pop
fcmovb
pop
fistpll
stc
push
push
pop
pop
xchg
adcl
sbbl
cmp
dec
adc
in
push
mov
adc
xchg
pusha
xor
out
mov
xchg
iret
jg
or
lahf
test
shr
mov
sbbl
shld
mov
ficompl
jnp
mov
push
cld
bound
enter
and
scas
adc
aad
fldcw
cmpsb
rcrb
ficomps
ja
or
bound
popa
push
push
dec
mov
andl
arpl
jno
jge
ljmp
xchg
ja
mov
scas
daa
add
rol
sub
mov
jg
push
mov
add
mov
lahf
cli
or
push
push
pop
and
test
mov
jns
push
test
into
push
arpl
fidivrs
aas
fcoms
jp
or
and
adc
js
mov
lahf
sbb
sbb
cmpsb
push
dec
push
sti
bnd
leave
and
push
jg
clc
ficoms
xchg
fs
subl
js
sbb
cmpsl
fistpll
dec
scas
pushf
data16
sub
popl
dec
data16
mov
pop
mov
rcr
sub
inc
rcll
stos
sub
sub
mov
sbb
cmp
fsubrl
xchg
les
pop
mul
cmp
inc
in
mov
scas
in
sti
aas
jp
data16
adcl
jge
pusha
into
jmp
mov
shll
dec
cmpsb
and
nop
pop
push
iret
scas
decb
push
lcall
mov
lahf
lods
xlat
or
out
into
insb
inc
hlt
sub
rclb
push
xor
sub
mov
add
push
std
add
jns
mov
push
inc
xchg
pop
fstpt
popa
pushf
out
mov
dec
ss
enter
test
cmpl
loope
push
pop
xor
cmp
cmc
adc
inc
pop
jle
in
mov
sbb
adc
in
nop
mov
aam
xorb
das
ss
mov
je
loopne
nop
in
push
loopne
mov
stos
iret
test
mov
pop
movsb
pop
test
cltd
and
es
jl
sahf
jno
ret
xor
cmp
out
xor
movsl
mov
pop
mov
push
xchg
push
adc
push
fwait
lcall
lea
or
lods
add
stos
lds
out
stos
inc
repnz
pusha
xchg
adc
pop
fsubp
xchg
int3
push
sbb
les
dec
addr16
into
loop
cmp
imul
cs
inc
das
lds
pop
cwtl
jae
outsb
in
xor
decl
add
lea
hlt
outsl
push
mov
aas
aaa
rclb
lea
sub
and
pop
into
cmp
daa
inc
int3
xchg
les
out
icebp
mov
mov
jnp
adc
popf
ret
sbb
add
imul
push
sbb
aad
ret
outsb
push
dec
enter
into
xor
arpl
xor
pop
js
lds
gs
lds
aaa
adc
ljmp
aad
out
mov
xchg
sbb
daa
adc
cmp
daa
dec
mov
bound
mov
test
sub
and
dec
movsb
pop
mov
push
lahf
fistl
fcoms
inc
fs
pcmpgtd
fistl
sar
rcrl
sub
xchg
std
mov
cmpsl
leave
mov
add
fs
or
push
xchg
mov
sub
sbb
incb
and
xor
push
cli
out
loopne
adc
jns
mov
sbb
add
adc
ja
inc
sub
xchg
imul
inc
dec
inc
xlat
sub
imul
or
stc
and
mov
ds
push
ret
push
clc
jle
adc
xchg
out
mov
pop
data16
pop
add
adc
lds
jmp
scas
adc
add
test
mov
test
loopne
add
mov
sahf
sub
rclb
xchg
pop
addl
rol
jmp
push
test
mov
inc
out
fidivs
push
rorl
cli
mov
repz
push
scas
sbbl
sti
jno
loopne
cltd
add
push
stos
add
sbb
sti
scas
adc
push
cmp
fdivl
subl
cs
mov
push
mov
lods
pop
arpl
or
or
mov
dec
cld
push
adc
lahf
xchg
dec
xor
jmp
xlat
and
add
mov
push
push
mov
mov
jmp
aaa
mov
mov
cmp
lea
enter
outsb
xchg
pushf
push
loopne
fldenv
lcall
mov
aam
popa
fcoms
push
inc
cmp
ja
pop
and
aaa
mov
scas
rcpps
inc
jne
and
push
lahf
out
mov
and
or
insb
mov
inc
inc
or
cld
lds
jnp
mov
jbe
aaa
call
pop
pop
and
ss
and
jle
jle
hlt
gs
cmp
iret
mov
ljmp
lods
in
xor
rcrb
mov
es
and
xlat
cmp
jge
loop
pushf
and
gs
scas
cmc
es
lret
loop
stc
xchg
jns
pop
cmpsb
lret
push
push
nop
mov
sub
jno
imul
pop
aaa
test
inc
cmp
test
stc
adc
ret
pop
rcll
mov
mov
and
fsubrs
xchg
xchg
mov
arpl
in
push
inc
mov
cltd
add
push
imul
mov
dec
pop
push
mov
mov
inc
in
inc
lods
ljmp
or
or
sub
push
lock
mov
add
xchg
push
xchg
or
bound
add
and
out
cmpsb
repz
mov
mov
push
pop
leave
int
xchg
pop
push
imul
fdivr
sub
xchg
lods
in
insl
pop
mov
faddl
nop
and
aas
or
sbb
lea
call
and
xchg
in
in
dec
adc
inc
push
cmpsb
jg
xor
xlat
fstpl
jmp
or
sub
outsb
add
ljmp
negl
inc
aaa
xor
mov
pushf
xchg
jp
dec
cwtl
xchg
dec
out
idivb
dec
pusha
jp
jb
jle
adc
loope
repz
mov
bound
pop
cmpsl
cmp
xchg
xlat
addr16
push
mov
inc
mov
nop
push
clc
dec
mov
fs
dec
mov
mov
xchg
nop
shll
mov
je
push
jo
ljmp
mov
hlt
sbb
mov
mov
lcall
add
cmpsb
lods
xor
xchg
fbstp
xor
pushf
push
outsb
sbb
jae
out
sbb
push
mov
sbb
dec
mov
xchg
xor
add
lods
adcl
cmpsb
fnstenv
lahf
sub
lcall
ss
ret
sub
or
mov
jb
ljmp
cld
pop
cwtl
movsb
lods
sbbb
cmp
jg
and
cld
nop
rolb
xor
and
push
out
arpl
mov
scas
sbb
and
sbb
push
repnz
xchg
mov
mov
adc
cli
mov
in
popa
jae
sub
cli
daa
inc
outsb
fsubr
jle
arpl
mov
daa
push
jge
jmp
mov
bound
outsl
xor
pop
push
or
outsl
xchg
push
mov
cmp
xlat
popf
jmp
jo
stc
pop
sarl
ffreep
push
cli
cmp
push
mov
mov
xchg
pop
pusha
dec
mov
shl
jae
mov
outsb
ret
pop
je
jge
add
sub
pop
inc
add
rcrl
cmp
pop
adc
aam
pop
xor
dec
cld
sbb
pusha
push
dec
pushf
sub
inc
movsl
aas
std
mov
cld
push
sbb
pop
and
insb
jo
jecxz
mov
mov
stos
dec
push
and
aam
pop
ljmp
je
xor
fmulp
mov
out
fs
push
add
and
aad
pop
sahf
out
cmp
ss
mov
into
popf
mov
in
out
inc
xor
nop
xchg
inc
mov
je
inc
cmp
push
mov
test
lods
fbld
mov
mov
adc
ret
sub
pop
inc
sbb
push
jmp
daa
cli
outsb
pop
jge
jmp
xchg
or
repz
in
and
inc
mov
sub
xchg
pop
push
inc
aam
rcrl
jae
or
jne
lcall
lahf
mov
jg
xchg
mov
push
adc
adc
jp
push
aas
outsb
lret
lret
sub
scas
mov
lret
aad
loopne
js
int
inc
test
mov
push
movsb
movsl
mov
aam
mov
mov
movsb
cs
sarb
jbe
push
add
mov
cmp
inc
xor
cli
jae
hlt
add
sub
jb
movsb
iret
inc
and
xchg
mov
cli
lret
popf
pop
test
data16
mov
xor
loopne
test
inc
inc
cmp
div
jge
push
or
dec
ss
lea
outsb
mov
xor
leave
test
jb
icebp
adc
rcrb
push
aas
inc
cltd
mov
dec
inc
in
loope
sub
rorb
bound
push
xchg
mov
movsb
aaa
and
xchg
pop
jl
sahf
sub
enter
and
lds
push
or
xchg
inc
add
lret
or
push
xchg
dec
or
scas
mov
or
lock
daa
lea
cltd
shrl
mov
lock
ja
inc
enter
in
sbb
aaa
cmp
dec
mov
adc
lock
mov
jge
repz
sub
add
sti
dec
mov
scas
sbb
popf
jnp
insb
addr16
cld
fwait
xlat
adc
mov
sbb
mov
fwait
and
and
sbb
movsl
dec
or
mov
aad
pop
cmp
dec
dec
jmp
js
popa
int
cmpsl
adc
xchg
ret
fildl
sub
iret
outsb
dec
lahf
stos
orb
in
js
loop
repnz
sub
in
je
lock
dec
pop
shlb
mov
xchg
adc
test
test
mov
sbb
or
dec
add
shll
xchg
inc
or
aam
scas
add
ja
jl
incb
outsb
cli
add
lahf
cltd
shufps
mov
jns
sub
cmpsl
lahf
dec
mov
inc
bound
das
pushl
in
out
loopne
dec
jle
cmp
push
push
mov
popa
ja
ret
mov
stc
out
hlt
mov
mov
into
fwait
lret
je
mov
sub
mov
mov
and
cmp
mov
jl
rolb
mov
xor
dec
sbb
mov
fadds
call
je
xor
mov
ja
xor
das
inc
lods
or
test
push
and
mov
push
xchg
mov
push
mov
fsub
pop
xchg
xchg
lahf
cmp
adc
les
jl
sti
sti
add
mov
into
push
sbb
scas
ffree
imul
adcb
js
nop
outsl
pop
add
punpckhbw
imul
xchg
jg
jecxz
cmp
jb
push
bound
lahf
int
adc
bound
ret
jge
pop
inc
out
shll
aaa
push
mulb
jmp
xor
fdivrs
scas
sbb
and
repz
dec
scas
dec
inc
es
cltd
add
pushf
mov
call
xchg
or
int3
xor
adc
rcrl
shl
xchg
aas
dec
inc
stc
loope
or
bound
nop
sbb
sub
ret
fidivrl
or
nop
imul
push
pop
cli
inc
test
pop
flds
inc
imul
testl
xchg
sbb
ss
dec
call
adc
mov
cmp
and
jmp
xor
inc
xchg
sub
pop
xchg
test
aas
cmp
test
lahf
fldenv
mov
leave
push
jo
test
add
push
sbb
call
inc
mov
enter
rcl
sahf
arpl
push
adc
and
in
inc
mov
xchg
mov
scas
bswap
sti
mov
lahf
bound
inc
push
mov
in
sub
ss
sbbb
jbe
repz
or
dec
push
fs
mov
aam
leave
mov
cmp
scas
and
pop
loope
mov
xchg
adc
and
and
je
jp
cltd
cmp
cmpsb
mov
fs
add
jnp
dec
pop
ror
aam
addr16
sub
and
in
adc
stos
mov
pop
dec
addr16
xor
bound
int
adc
cmp
jmp
les
sub
push
call
jp
mov
pop
mov
lods
jle
lcall
xor
and
push
mov
lods
jno
dec
mov
push
jp
repnz
neg
add
and
addr16
ja
je
push
inc
add
push
sub
adc
nop
cli
bound
lret
lds
sahf
cmp
ds
out
and
push
xchg
icebp
adc
rorl
stos
dec
add
ret
std
rdpmc
bound
sbb
mov
in
fcmovnbe
add
mov
mov
rcr
add
pop
mov
pushf
inc
mov
fdivr
push
sar
mov
lock
xchg
daa
jl
fidivrl
sbb
sti
es
xchg
jne
ficompl
mov
adc
cmp
sbb
pop
testl
test
insl
dec
pop
lea
jg
stos
push
jle
and
jno
inc
pop
loope
mov
or
mov
sub
lret
popf
cmp
je
addl
fcoms
sub
mov
xor
lods
punpckldq
dec
fucomi
or
cmpsl
jo
mov
mov
or
in
in
sbb
add
push
in
shl
xchg
mov
lahf
mov
flds
sub
jle
xchg
xor
ss
lds
outsb
filds
arpl
cld
inc
lock
fistpl
push
fninit
mov
mov
add
cmp
fidivl
ss
mov
pop
jbe
mov
imul
mov
inc
sbb
mov
notl
xor
inc
mov
push
lods
loopne
bound
adc
mov
mov
dec
lahf
jl
mov
sbb
fbstp
mov
jmp
pop
jl
push
sbb
loop
popa
lods
je
or
mov
mov
int
mov
lds
pop
jecxz
pop
sbb
mov
jle
mov
inc
mov
clc
lds
and
or
xchg
out
sub
insl
cmc
ss
rcll
jge
cmp
fcmovb
push
shlb
push
cmp
fistl
je
mov
adc
push
js
cmp
loope
pop
jae
rcrb
and
and
add
mov
ds
sub
pusha
stos
jg
jl
and
pop
push
iret
lock
test
ljmp
or
ja
lret
scas
negl
rolb
int3
ret
sub
dec
adc
repz
xor
out
popf
cmp
ret
pusha
out
movsb
add
into
cs
or
and
pushf
popa
mov
jg
mov
shll
sbb
jae
cmp
imul
sub
inc
leave
cmp
mov
inc
cld
adc
adc
sbb
pushf
rcl
mov
sbb
movsl
xor
sbb
dec
add
xor
mov
push
and
xchg
xor
lods
pop
fisubl
pop
icebp
bound
sbb
movsl
ja
cs
lock
jmp
inc
adc
loopne
mov
ficomps
out
mov
jp
adc
shrb
jnp
adc
jg
dec
pusha
mov
and
jbe
cmc
mov
sbb
jge
jmp
fs
add
cmc
js
fcmovnbe
or
xchg
sbb
xchg
xchg
roll
vlddqu
cmpsl
int
iret
fcompl
xor
outsb
nop
clc
push
xor
icebp
and
cltd
mov
rorl
push
sub
jge
rorl
out
xchg
fsts
dec
push
cmpsl
jmp
jmp
cmp
imul
mov
arpl
and
jne
negb
scas
sub
jmp
add
rol
push
inc
add
sbb
dec
loope
mov
push
clc
jno
outsb
outsl
gs
enter
and
in
sub
inc
dec
stc
pusha
xchg
xchg
cs
daa
add
decb
inc
pop
cmpsl
sti
jno
xor
popf
xchg
fwait
cltd
jecxz
mov
popa
fwait
and
dec
adc
jae
adc
mov
mov
mov
bound
jmp
mov
xor
add
mov
cwtl
push
xor
mov
lea
cld
sub
shrb
cli
sub
jno
inc
jno
bnd
inc
cltd
fadd
pop
iret
sub
movsb
xchg
inc
jmp
fs
inc
call
shlb
pusha
mov
push
clc
fwait
gs
and
scas
push
jecxz
xchg
data16
inc
lock
in
insl
mov
mov
push
aad
and
cmp
adc
inc
xor
add
je
push
nop
lcall
cmc
mov
fiadds
push
ss
dec
mov
or
jge
xor
movsl
pop
adc
jg
vhsubpd
lock
add
shll
jns
mov
mov
xor
inc
and
lret
and
mov
lret
out
sahf
std
sbb
xor
leave
mov
lahf
add
sub
mov
sub
fisttpl
xchg
pushf
decb
movsl
aam
movsl
outsl
lock
xor
nop
test
mov
out
clc
xor
dec
add
fldl
nop
mov
xor
pop
cmp
cmp
cmp
and
xor
fsincos
sahf
stos
aas
and
aas
xchg
jl
outsb
push
jns
es
shrl
jno
inc
loop
pop
loope
xchg
addr16
jmp
into
adc
xchg
hlt
sbb
push
jns
adc
adc
movsb
outsb
adc
or
xor
sbbl
shrl
cmp
sub
call
sub
cmp
push
dec
sub
stc
jl
xchg
inc
pop
dec
push
push
xor
jmp
stos
inc
clc
pop
stos
lock
mov
hlt
or
mov
sbb
mov
pop
clc
add
push
rclb
cmpsb
mov
adcl
inc
push
mov
sbb
sbb
sbb
pop
sub
je
pop
mov
lock
jns
sub
xor
sub
ret
sub
orb
add
mov
mov
add
into
xchg
inc
mov
int3
ds
fstps
nop
pop
ds
pushl
hlt
test
sub
push
pop
dec
dec
in
scas
jb
cmp
inc
mov
inc
adc
fdivrp
xchg
jge
ret
jp
notb
int
dec
out
fs
mov
xor
adc
sub
lds
in
lret
out
lods
and
andl
repnz
adc
popa
cmp
sbb
lock
bound
test
rcl
lret
push
enter
jge
lock
fsubs
pop
adc
pop
push
call
loop
mov
mov
pop
popa
mov
cwtl
inc
xor
adc
testb
in
test
pushf
les
icebp
and
push
cmp
jo
pop
ja
les
out
push
mov
mov
pushf
mov
dec
add
dec
xchg
and
cwtl
push
into
lods
aaa
mov
mov
stos
adc
popa
push
inc
mov
call
jns
popf
cwtl
clc
pop
sub
mov
pop
sub
mov
mov
sbb
mov
es
fs
insl
ja
jle
movsl
fsts
cmc
pop
das
mov
mov
sbb
adc
insb
mov
cltd
shrl
gs
or
jo
mov
pop
jb
dec
sti
dec
sahf
aad
rol
ret
loopne
repz
pop
out
insb
loope
push
lods
adc
cmp
pusha
mov
scas
mov
dec
ds
mov
je
xor
and
mov
pop
mov
in
push
mov
adc
sub
or
sbb
xor
jo
cltd
daa
mov
nop
inc
sti
push
adc
gs
push
stos
mov
loop
xchg
movsl
pop
outsl
scas
push
stos
sbb
aam
lds
loope
and
cltd
push
push
pop
in
sbb
push
hlt
out
dec
mov
leave
fincstp
lret
add
pop
mov
out
mov
and
cmp
repnz
std
das
cmp
add
adc
adc
fistpl
xor
jp
lahf
pop
mov
fsts
and
adc
sub
test
dec
lods
pop
mov
mov
and
lahf
testl
or
pop
lret
ja
jmp
icebp
cwtl
sbb
test
pop
cmpb
adc
or
loopne
push
push
lock
aaa
push
lea
sarb
notl
inc
or
ret
in
inc
pushf
pop
lahf
lret
fiaddl
leave
std
adc
out
test
daa
int3
jbe
shl
add
jno
push
enter
cld
xor
dec
cmp
add
repz
test
sete
mov
dec
mov
iret
in
cmp
pop
push
add
jno
and
mov
loope
xchg
mov
or
repz
jnp
movsl
pop
jns
adc
and
push
cmp
pushf
xchg
push
lock
cwtl
jno
lea
fcompl
call
in
dec
imul
add
scas
pop
inc
clc
out
pop
cwtl
and
push
jle
sahf
and
xor
dec
mov
push
cli
insb
cmp
jl
std
dec
arpl
xchg
in
aad
add
mov
sbb
adc
mov
data16
xchg
mov
push
mov
fwait
stc
mov
cltd
push
hlt
out
pop
jbe
cmpsb
inc
pop
sarb
test
mov
adc
lds
mov
mov
jo,pn
test
cmp
mov
leave
js
or
lret
mov
mov
jo
pop
shrb
lods
repnz
int
sbb
sub
js
dec
mov
out
cmp
hlt
mov
cli
push
mov
add
push
scas
mov
out
lret
js
push
or
mov
decl
inc
lret
stos
push
ret
jle
testb
add
dec
sbb
xchg
adc
mov
push
stos
call
mov
lods
jbe
sub
mov
lock
rcrb
cmp
shll
testb
sub
cmp
sbb
jae
fldenv
dec
xchg
leave
sti
cltd
mov
push
and
mov
mov
push
loop
call
mov
and
jbe
and
add
mov
dec
sbb
in
push
iret
sub
mov
test
cld
lahf
subl
jle
add
and
jno
xlat
lret
out
mov
xor
sub
cmp
subl
cmp
mov
stos
push
mov
cmpsl
mov
sarl
dec
mov
jp
out
insb
xor
adcl
ret
scas
push
addl
push
cmpsl
or
out
movsb
cltd
jmp
movsb
ds
pop
test
rorb
xchg
es
cmp
jle
jmp
cmp
mov
dec
mov
lods
sbb
mov
ljmp
xchg
sub
outsb
xorb
mov
sbb
dec
adc
jmp
cmpsl
nop
insl
movsb
enter
rorl
cmp
sbb
or
xchg
mov
popf
pop
jnp
in
jbe
sbb
xorb
enter
je
scas
in
mov
bound
xor
push
xlat
mov
push
leave
orb
jno
fnstenv
inc
dec
adc
xchg
pushf
test
daa
call
push
or
push
push
lock
mov
mov
popf
outsl
add
inc
into
sub
and
adc
inc
ret
inc
mov
mov
adc
lock
add
jb
daa
or
xchg
das
sub
ret
leave
enter
inc
mov
jle
les
mov
mov
nop
sahf
inc
adc
in
xchg
or
pop
lahf
mov
xlat
dec
mov
adc
jno
push
je
aad
pushf
mov
aad
outsb
inc
ret
pop
add
mov
mov
and
fcoms
repnz
aam
pop
cmp
ret
ss
nop
mov
xor
addl
xchg
dec
rolb
sti
push
js
and
sub
push
inc
add
fisubs
ret
daa
jmp
xor
mov
mov
and
leave
dec
mov
lahf
xchg
sbb
adc
jne
sarb
mov
xchg
mov
loop
mov
jmp
or
in
jmp
dec
dec
add
jne
sbb
cmp
lcall
hlt
repnz
xor
int3
fadds
outsb
mov
or
hlt
cmp
mov
push
inc
fisubl
mov
mov
and
pop
lods
push
cmp
cmp
mov
jae
cld
fsts
lea
xchg
xchg
lea
out
pop
hlt
loopne
mov
gs
popf
aad
xchg
mov
sbb
push
aaa
shlb
xchg
sub
in
lret
mov
cltd
int3
xchg
fistl
roll
cli
stos
leave
data16
shlb
jecxz
add
dec
mov
jne
pop
cmp
negl
jne
pop
out
adc
popa
pop
sbb
sbb
stc
icebp
add
fisttpll
jae
ljmp
mov
push
xlat
pop
pop
leave
cmp
xchg
arpl
and
in
sbb
loope
out
out
and
and
xor
xchg
enter
cmpsb
jge
stos
lods
xchg
icebp
inc
in
pop
add
mov
in
mov
push
dec
rclb
stos
mov
or
sub
rclb
inc
frstor
mov
or
jp
out
sbb
pop
and
dec
stos
mov
movsb
xchg
je
mov
dec
push
ror
pop
mov
sub
fistpl
xchg
jl
add
clc
leave
mov
adc
je
gs
jmp
mov
sahf
fistl
sarw
jmp
jge
repnz
push
mov
insl
xor
mov
dec
cmp
xor
mov
push
lcall
shll
push
aad
push
fcmove
and
loopne
inc
jge
jo
add
cmpsl
sub
aad
adc
sbb
aam
or
fs
dec
push
mov
mov
push
dec
lret
dec
ljmp
ljmp
sbb
je
loope
jnp
cmp
mov
repz
inc
cs
test
inc
xchg
ljmp
xor
fmulp
cltd
stc
or
in
repnz
iret
xor
or
ds
adc
shll
pop
ds
mov
mov
cmp
lods
sti
sub
xchg
adcb
faddp
xorl
xchg
push
rorb
mov
adc
jg
fucom
stos
mov
cmp
loope
pop
push
gs
imul
outsl
push
dec
pop
mov
jne
mov
leave
sub
das
aaa
inc
pusha
clc
mov
addb
xor
ret
je
pusha
iret
pop
dec
pop
add
cmp
lret
mov
inc
pop
and
scas
scas
adc
pop
orb
or
fsqrt
stos
mov
xor
in
aas
pop
and
roll
mov
dec
push
mov
sbb
mov
test
lods
pop
pushf
pushf
mov
mov
int3
fwait
fwait
inc
divl
fwait
out
add
sub
push
push
cmp
fisubs
inc
mov
fdivs
jo
xchg
adc
sbb
out
js
lret
int
fidivrl
xor
imul
adc
inc
pop
adc
adc
stos
test
in
lret
test
daa
pushf
lcall
mov
mov
lret
jns
repz
fwait
pop
adc
push
pop
mov
dec
mov
push
es
jge
mov
lds
mov
add
lret
adc
std
or
jno
dec
jb
jnp
add
sbb
test
and
in
aam
pop
pop
mov
arpl
icebp
mov
js
adc
inc
aad
cmpsl
mov
out
push
ds
xchg
nop
imul
jg
mov
pop
test
sbb
fdivrs
hlt
push
xor
test
aas
mov
adc
les
mov
or
lahf
jp
mov
sub
pop
jae
xor
jo
mov
fyl2x
and
repz
mov
loope
jne
mov
ljmp
sbb
or
imul
jge
xor
in
les
xchg
push
rorl
add
jle
jo
rcll
jp
loop
call
inc
adc
ds
pop
sub
sub
es
jae
iret
sub
or
pop
pop
shll
inc
data16
enter
and
fistl
imul
pop
cmp
rcrl
lcall
fdivl
enter
mov
push
xchg
insl
jp
adc
and
xchg
rcll
fistpl
xor
adc
xchg
mov
leave
dec
lret
and
sbb
push
xor
sub
xchg
xlat
dec
stc
xchg
test
fmul
cs
adc
enter
pop
int
ss
xlat
mov
mov
cmpsl
jo
out
imul
jmp
cmp
imul
xor
pop
lods
or
xor
sbbl
mov
adc
in
iret
mov
mov
and
pop
add
mov
jl
add
pop
popf
cmp
jle
sub
into
je
sub
shlb
lods
aaa
push
or
rcrb
push
repz
arpl
push
or
leave
xchg
jge
imul
stos
in
sub
loope
inc
mov
icebp
push
add
pop
ffreep
outsb
push
es
pop
jae
cwtl
enter
mov
testl
jae
fs
dec
mov
mov
shr
loope
rorl
mov
adc
hlt
lods
loop
call
leave
popa
xlat
pop
mov
mov
adc
mov
loop
js
mov
iret
jbe
call
sbb
xchg
cs
mov
inc
incl
rcrb
pop
ja
std
cmp
sbb
adc
test
xchg
addr16
leave
aad
inc
int3
testl
popf
shrl
xor
cli
test
xor
adc
das
and
cmp
out
sub
mov
xchg
mov
jb
sbb
add
cmp
insb
cli
cmp
pusha
lock
push
aaa
cmc
mov
lret
out
subl
and
jl
inc
pusha
cmp
movb
xlat
mov
lret
sbb
divl
loope
inc
adc
xor
sar
and
mov
jge
xchg
dec
xchg
shlb
cmp
pop
mov
scas
mov
push
mov
int3
idivl
call
js
dec
gs
sub
inc
pop
fs
cli
mov
fisttpll
sbb
ret
scas
and
cld
cmpl
sarl
dec
sbb
rclb
test
mov
outsb
or
int3
sbb
xor
sub
pushf
rcrb
cmpsb
inc
imul
lcall
sbb
je
adc
stos
das
lods
pop
imul
xchg
jecxz
aam
loop
gs
jl
push
jae
repnz
test
xchg
out
push
push
push
pushf
icebp
mov
mov
sahf
cmp
push
or
mov
cmp
sub
adc
popa
sar
ret
rclb
inc
insl
xor
out
shrb
inc
push
cltd
inc
fcmovnb
aad
iret
or
dec
mov
mov
pop
xchg
sub
adc
mov
dec
and
iret
mov
cmp
or
cld
cmp
dec
adc
xor
lods
xor
mov
cmc
stos
pop
cld
orl
shll
in
or
fnstsw
data16
scas
push
jnp
insl
mov
test
loope
iret
lret
mov
inc
xchg
jl
cmc
popa
mov
push
xchg
mov
xchg
mov
jl
and
sub
ja
mov
mov
int
das
fs
sbb
ja
xor
xchg
sbb
sti
jb
xlat
sahf
xlat
sub
cli
test
lret
push
cmp
fstpl
cwtl
movsb
outsb
mov
ret
out
lret
pop
adc
in
andl
test
in
push
adc
cmp
loope
dec
aas
push
lods
loopne
pop
jecxz
or
lods
jge
dec
push
inc
enter
jns
outsb
out
pop
cmpsl
add
call
out
in
dec
push
fcoms
and
pop
lea
and
mov
sub
dec
sub
pop
aas
lret
aaa
subl
inc
xchg
outsl
aas
adc
nop
fsts
lods
push
mov
lds
cmp
sub
nop
pop
mov
repnz
push
xor
call
mov
jp
sbb
jg
and
sub
inc
arpl
in
jp
shll
or
std
insl
fcom
pop
pop
fld
mov
xlat
and
lods
or
sbb
cld
mov
stos
test
cld
mov
inc
orb
inc
aam
add
mov
jns
sbb
pop
aas
mov
fwait
sub
push
lret
testl
jg
je
jge
cmp
sbb
add
adc
push
or
xchg
fmuls
rolb
cwtl
cmp
push
aaa
aad
nop
andb
xor
ss
stos
sub
adc
mov
sub
test
dec
inc
xchg
lret
cmp
push
outsb
fsubr
or
fs
mov
clc
or
mov
mov
shll
mov
jg
jp
decb
pop
test
data16
fsubr
jmp
cmpsl
pushf
xchg
stos
out
fst
call
sarb
mov
fsubr
adc
idivb
and
stos
repz
dec
mov
data16
fcomi
lock
mov
enter
in
fildll
call
or
mov
push
dec
ss
xchg
ljmp
int3
out
imul
or
pushf
pop
int3
cmp
or
aad
ljmp
movsl
pop
push
test
imul
addl
mov
repz
pop
mov
insb
dec
sub
stc
stos
cmp
fisttpll
test
test
popf
test
mov
pop
ds
rcl
adcl
add
aam
call
jne
xchg
pop
call
lcall
shr
inc
sub
lea
les
mov
mov
mov
push
push
push
cs
xchg
xchg
sbb
into
aam
movb
and
mov
mov
rclb
adc
mov
cmpsl
push
sti
cli
outsl
mov
push
push
bound
fnsave
jp
cld
loopne
pop
mov
and
cmp
stos
imul
das
pop
cmpsl
jo
fwait
adc
in
sub
sti
mov
gs
xor
jns
iret
xor
jb
xchg
xchg
outsl
xchg
sub
and
xor
pop
dec
sub
xchg
push
aad
in
or
out
inc
jp
xlat
push
mov
daa
aad
jl
movsb
mov
mov
pusha
out
shr
loop
iret
ljmp
cmp
mov
pop
outsb
hlt
mov
addr16
cltd
xchg
or
data16
mov
inc
fldenv
daa
mov
sbb
pop
push
mov
mov
inc
out
setl
lods
jo
mov
data16
sub
aas
decb
arpl
xchg
out
cmp
or
fwait
inc
divl
cmpsl
push
xchg
mov
cld
cmp
addb
pushf
sub
mov
mov
movsl
xchg
add
mov
scas
mov
adc
sub
xlat
int3
sub
push
and
lret
cld
jl
mov
lea
popa
mov
jp
js
and
inc
fdivs
xchg
sbb
or
lods
js
push
sub
int
sub
loop
arpl
and
sbb
pop
and
mov
out
in
daa
pop
pop
mov
sbb
jecxz
into
aad
fistpl
js
pop
xchg
add
xor
test
xor
hlt
mov
mov
pop
cmp
mov
cwtl
pop
xchg
je
hlt
pushf
and
mov
xchg
and
push
repz
xchg
inc
xchg
sub
jo
push
adc
imul
not
das
ds
clc
jle
mov
imul
js
lods
out
xchg
outsl
xchg
inc
add
xchg
or
fwait
ljmp
inc
jl
les
pop
mov
jmp
sti
mov
ror
in
test
loop
das
gs
or
sub
notb
es
test
loop
pop
xor
rcl
adc
sahf
repnz
xchg
gs
popf
frstor
sahf
mov
push
add
out
mov
or
sbb
mov
cmc
xor
stos
xchg
dec
daa
cmp
mov
lret
xchg
pop
mov
sub
push
bound
icebp
lcall
cmp
pop
xor
pop
outsb
into
push
dec
inc
pop
or
into
jns
ljmp
into
adc
btcl
pop
dec
pop
scas
lret
paddw
fsubs
pop
mov
ret
not
aad
mov
mov
xor
addr16
roll
lods
dec
cmpsb
and
inc
sub
jae
shrl
dec
jmp
outsw
dec
aaa
loop
inc
test
sbb
inc
out
cmpsl
icebp
lea
imul
pop
mov
jae
stos
pop
fbld
xor
add
and
jnp
insb
imul
fsts
pop
sub
xchg
ds
xchg
ljmp
stos
popf
mov
or
sbb
xchg
mov
gs
adc
push
pop
fstpl
mov
xchg
stos
rorb
xchg
lods
pop
adc
xor
sbb
sbb
mov
cmp
jecxz
cmp
fstps
jae
lahf
cmp
ljmp
and
fdivrs
push
les
in
sti
adc
push
adc
imul
dec
mulb
loop
test
in
aad
jns,pt
loopne
in
test
mov
lret
ret
xor
mov
jmp
mov
jecxz
push
or
mov
push
cmp
adc
push
test
sub
shr
neg
leave
lods
dec
sbb
repz
xchg
lahf
inc
pop
mov
popf
sbb
aas
in
sbb
push
enter
mov
das
mov
sub
push
sub
idiv
lds
inc
data16
xchg
pop
stc
dec
cmc
fidivrs
xchg
xchg
in
sti
add
popa
dec
mov
xor
xchg
xor
adc
xchg
aaa
mov
pop
pop
cltd
push
out
mov
dec
sub
sbb
and
jb
jb
dec
jns
jbe
test
std
fcomi
xchg
mov
fisttpll
jnp
and
popa
xchg
imul
ds
in
mov
pop
mov
popa
unpckhps
sbb
std
in
push
cltd
incl
ds
les
cli
mov
jns
icebp
leave
ljmp
leave
js
in
movsl
jp
and
mov
sbb
idivb
mov
pop
jge
rol
push
or
mov
lea
xchg
add
fisttpll
scas
cmp
mov
inc
xchg
mov
sub
pushf
and
pop
movsl
dec
inc
ret
jecxz
pop
int3
movsl
cmp
shlb
mov
sbb
shll
push
movsl
cmpsb
push
adc
orl
or
in
xor
mov
xor
call
shl
insl
sub
jl
push
mov
addr16
xchg
movsl
scas
pop
adc
mov
addr16
xor
out
into
xchg
sbb
mov
pop
in
es
xchg
dec
inc
mov
sti
in
inc
xorl
mov
loopne
sbb
mov
dec
test
gs
add
daa
xchg
test
test
inc
mov
leavew
mov
lret
xchg
add
outsb
popf
loope
sti
mov
cli
cwtl
adc
xchg
insb
test
jnp
or
cld
aam
jg
mov
sub
repz
inc
mov
xlat
dec
call
adc
lahf
loopne
fidivl
movsb
mov
lock
leave
add
sbb
fnstsw
jg
ficompl
cmpsb
jge
inc
negl
sbbl
fisubs
mov
dec
inc
mov
outsb
sub
sbb
and
int3
inc
xchg
jo
xchg
rorb
mov
xchg
lret
repnz
lret
mov
ficomps
lea
adc
dec
mov
out
sahf
xor
lea
cs
lds
inc
movsb
cmp
sub
pop
push
test
daa
inc
js
mov
popa
iret
pop
adc
push
or
ja
add
and
cmc
xchg
fs
cmp
dec
push
and
push
jmp
popf
icebp
inc
xor
out
add
jae
scas
dec
xchg
pop
pop
out
fmull
test
cmpsl
std
xchg
arpl
push
dec
in
repnz
js
add
mov
sbb
fsubrl
mov
outsb
adc
movb
fildl
or
mov
mov
out
lds
rorb
icebp
push
and
dec
andb
xchg
adc
pushf
inc
fsubrs
lods
leave
push
jno
inc
jo
sbb
add
xlat
xor
repz
add
push
xchg
pop
fwait
daa
sbb
jnp
push
mov
popa
cmp
adc
out
mov
mov
jecxz
mov
xchg
lea
mov
cmp
mov
leave
clc
lea
mov
adc
leave
push
decl
push
fidivrl
mov
inc
outsl
dec
std
cmc
das
icebp
out
loope
cli
fsubrs
push
insl
pmulhw
das
jl
jae
ficomps
scas
push
jnp
lea
inc
mov
sbb
adc
xor
fisttps
fwait
lea
daa
and
fcmovnbe
sub
stos
pop
stos
sti
clc
pop
mov
lds
cs
jecxz
jmp
xchg
ret
push
mov
insb
inc
icebp
mov
push
push
sbb
xchg
incl
dec
es
add
sub
shrb
jecxz
push
lcall
ret
test
sbb
lods
cmc
mov
or
shlb
mov
lret
dec
cmp
cmp
adc
fnstsw
hlt
scas
mov
inc
das
mov
xchg
or
xchg
loop
xchg
mov
rcrb
lock
std
dec
inc
popa
push
rcl
or
cmpb
inc
imul
jnp
lods
out
imul
dec
cli
adc
xchg
pop
jecxz
sub
imul
in
mov
in
aad
push
in
xchg
dec
out
mov
push
roll
daa
mov
inc
inc
pop
inc
fwait
jno
cmp
cmp
addb
out
shlb
in
jne
push
mov
aaa
or
lock
dec
cltd
sbb
rcrb
and
push
mov
jle
pop
dec
hlt
insb
leave
and
shlb
xchg
fidivrl
ljmp
jmp
add
mov
pop
scas
push
cmpsl
test
addr16
cmp
out
xchg
sti
or
popl
mov
imul
pop
enter
pop
sbbb
mov
lret
mov
ss
loopne
sbb
mov
pop
scas
inc
inc
dec
repz
push
sbb
xor
mov
leave
fcoms
hlt
fisubrs
in
mov
inc
andl
xchg
mov
inc
push
lahf
shrb
ds
int
fbstp
pop
mov
leave
dec
xchg
and
mov
out
cmp
xchg
sub
mov
sbb
pop
sub
mov
loope
sub
cmp
jnp
clc
add
sbb
mov
xor
mov
xor
adc
lret
sub
hlt
cmpsl
frstor
mov
jo
dec
sbb
and
fcmovnu
aad
pop
or
push
mov
jns
mov
xchg
pop
into
or
rcrl
movsl
test
outsl
dec
rcr
lcall
stc
or
test
mov
je
jb
mov
or
pop
push
fstpl
fsubr
sub
cmp
jno
aad
int
rcl
xchg
loop
call
stos
test
jmp
push
insb
jl,pt
aam
lods
lret
mov
adc
das
lods
stos
xchg
aas
inc
cmp
sbb
and
ficompl
aas
loope
push
fiaddl
sub
lea
mov
fisubrl
aas
push
inc
fdivrp
ljmp
sub
dec
sbb
pushl
pushl
aad
cmp
sbb
cmp
push
sbb
inc
mov
dec
pop
push
inc
cmp
dec
stc
xlat
gs
adc
in
sub
test
pop
add
out
rcr
std
cmpl
dec
and
adc
ret
out
mov
insl
jge
cmp
mov
int3
jo
push
outsl
pop
jmp
push
push
mov
lahf
xor
aam
inc
add
fs
pop
push
bnd
scas
movsl
jnp
aam
and
adc
pop
inc
pusha
out
clts
repnz
adc
sarb
testb
adc
mov
xorb
cmp
push
mov
jmp
xchg
mov
stos
lcall
rolb
hlt
iret
scas
and
leave
fnstcw
add
push
orl
cwtl
jbe
dec
sub
inc
std
add
cmp
cmp
sbb
mov
mov
sarb
scas
sub
ret
push
mov
jl
cmp
fiaddl
xchg
adc
jo
fcmovne
scas
inc
in
inc
rolb
test
cwtl
add
test
push
push
jmp
nop
adc
adc
pop
in
loopne
fildll
mov
sahf
fisubs
ljmp
sbb
movsb
popa
repnz
jp
test
mov
data16
subb
cld
cmc
shr
dec
imul
jbe
jmp
stos
mov
add
imul
inc
lock
loope
fadd
adc
aam
repnz
mov
sub
sub
mov
aaa
fdivp
sbb
call
in
cmp
gs
push
aaa
cmp
in
mov
cmpsl
cmc
fstpl
push
inc
std
sbb
push
mov
xorb
call
sbb
and
testb
int
leave
das
jp
es
push
inc
ror
inc
inc
sbb
ret
or
mov
shlb
sbb
addr16
aad
cmp
sbb
js
mov
mov
cmp
xchg
mov
int3
pop
dec
dec
cmp
mov
sub
shll
mov
xor
dec
cmp
aad
fs
andl
popa
mov
cs
dec
push
lods
packsswb
adc
xchg
xchg
nop
in
cmp
inc
dec
pop
jmp
inc
xlat
test
aas
out
jae
leave
lds
sub
mov
pop
jge
repz
das
push
insb
fcoml
fcmove
repnz
add
repnz
decb
gs
mov
push
and
and
movsl
in
lods
sub
inc
add
in
outsl
xchg
jge
fidivrs
sub
inc
cmp
xchg
fnstcw
aas
pop
add
cltd
scas
or
xor
add
jne
pop
pop
mov
push
mov
lea
xchg
mov
mov
sahf
jmp
daa
or
push
ja
jle
xchg
lret
shrl
stc
or
popf
adc
repnz
and
lahf
add
jns
xorb
inc
xor
or
push
pop
scas
add
lock
push
popa
add
and
xor
push
cld
jb
pop
nop
pop
jle
add
cltd
pop
shlb
andb
and
mov
sub
lcall
pop
jp
movsl
add
cmpsl
mov
fbld
popa
hlt
adc
adc
int
dec
sub
ficompl
je
inc
stos
scas
adc
aaa
dec
fdivrl
or
test
pop
xchg
xchg
adc
jae
das
movsl
inc
es
xchg
jl
mov
lret
orl
loop
and
push
dec
ds
jg
jge
dec
push
and
mov
jno,pt
pop
and
mov
push
pop
xor
fstpt
push
push
fimull
jns
xchg
testl
divl
lods
cs
fisttpl
dec
adc
inc
sbb
inc
or
insl
add
mov
in
sbb
aaa
mov
jecxz
jg
add
inc
mov
sub
int3
dec
or
sbb
add
fldcw
mov
iret
daa
jbe
je
mov
jecxz
mov
cltd
add
xchg
popf
popf
scas
xor
inc
movsl
cmpb
loop,pn
dec
test
ljmp
mov
jb
lcall
and
mov
testb
jbe
add
mov
in
mov
inc
cwtl
repnz
add
xlat
js
add
cltd
les
into
mov
int3
arpl
dec
xorl
lods
test
in
cmpsb
jne
push
enter
pop
popf
jp
or
jo
loope
scas
das
hlt
fsubrp
mov
stos
jns
mov
dec
or
jg
jg
dec
cld
mov
and
xchg
push
out
int3
mov
jmp
inc
arpl
mov
jp
flds
scas
fwait
mov
nop
jp
iret
and
rolb
inc
mov
outsb
or
mov
sub
imulb
clc
and
xchg
mov
arpl
les
mov
jp
ss
mov
loop
aad
pop
aaa
leave
dec
push
lret
xchg
sti
fldenv
bound
sub
push
push
jae
add
cmc
ja
fwait
mov
in
out
xchg
mov
lods
insl
mov
mov
insb
pop
insb
and
test
loop
cmp
mov
test
cmc
sub
sbbl
mov
dec
fisubl
jno
dec
cltd
jl
imul
mov
jne
add
push
inc
stos
add
stos
xor
popf
sbb
push
adc
and
lret
push
sbbl
addr16
outsb
aam
rcr
roll
mov
loope
pushf
xor
lcall
or
decl
mov
outsb
mov
mov
and
iret
sahf
mov
xchg
fidivl
aad
ja
insb
jmp
sti
xchg
aas
mov
test
orb
push
mov
popf
xor
push
push
lcall
dec
mov
push
sbb
pop
sub
mov
adc
cs
icebp
bt
cmp
movsl
mov
mov
mov
adcl
clc
ret
inc
sub
aam
icebp
loop
into
scas
xchg
inc
push
out
pop
sahf
mov
shrb
popa
int
and
pop
cwtl
add
stos
xor
aaa
in
rcrl
stos
sahf
xchg
sub
jne
jne
in
pop
add
cmp
aaa
jp
jne
or
dec
sbbb
cwtl
push
push
add
cli
push
and
das
psubw
push
gs
dec
mov
sti
fmuls
mov
mov
aad
enter
push
mov
les
and
mov
push
xchg
or
add
ss
insb
mov
mov
loop
iret
xchg
loop
xchg
jg
sbb
stos
jp,pt
sahf
rorl
imul
pop
pop
pop
fwait
mov
inc
lcall
pop
ljmp
cmp
adc
pop
mov
sti
ljmp
push
jne
pusha
inc
in
arpl
sti
adc
jns
lret
pop
fsub
inc
lret
ljmp
dec
pushf
fldcw
out
aas
int3
test
divb
pop
out
or
mov
mov
in
sbb
pop
or
pop
daa
pop
inc
adc
mov
push
test
lcall
in
shrb
jo
adc
jge
lds
mov
mov
xor
mov
jle
loope
sbb
fildll
cmp
xchg
mov
inc
popa
jno
lret
and
in
cltd
imul
mov
adc
lcall
xchg
subl
movsb
and
push
push
stos
sub
fldt
jle
fwait
sub
xor
jl
xchg
mov
pusha
and
aad
notb
fisubs
dec
jae
ret
dec
je
inc
in
das
sbb
fiadds
pop
ds
arpl
mov
dec
push
xor
sub
or
lret
jbe
add
std
sub
jp
pop
scas
leave
mov
pop
add
lds
adc
dec
xchg
scas
xchg
enter
mov
adc
ret
incl
cmp
loopne
push
add
mov
jne
js
leave
inc
hlt
inc
cmc
mov
push
out
mov
out
jl
daa
jmp
mov
es
mov
dec
addr16
sbb
xchg
or
xchg
jb
fistpll
mov
pop
mov
jns
mov
sub
xlat
dec
das
push
movsl
pushf
mov
or
mov
jge
xchg
adc
dec
cmp
ret
cmp
test
das
sub
dec
pop
dec
daa
aaa
pop
mov
xchg
leave
pop
imul
add
xor
cld
lahf
mov
xor
outsb
xchg
orl
cs
mov
and
fcomp
je
and
pop
hlt
lock
sbb
jp
adc
ja
icebp
test
ret
ljmp
lods
insl
sbbl
repnz
adc
pop
iret
and
fiadds
js
test
cmp
fldt
inc
stos
mov
data16
add
pushf
push
out
adc
call
into
insl
inc
insl
rorl
mov
sti
push
cmp
mov
ficoml
mov
adcl
add
outsl
lds
mov
pop
repz
clc
repnz
lahf
outsl
sub
pop
in
fadds
sbb
mov
imul
les
mov
sub
out
and
dec
js
xchg
add
daa
xchg
inc
out
push
dec
into
je
lods
mov
sbb
enter
in
gs
inc
push
lds
cltd
inc
frstpm(287
fwait
or
dec
outsb
inc
in
xor
fimuls
fucom
xchg
push
aad
mov
pop
adc
out
flds
aas
sahf
ficomps
leave
cltd
xor
jmp
out
sbb
jge
or
sub
push
fsts
fcomp
mov
sbbb
lds
inc
sub
mul
and
subl
pop
adc
outsb
xor
add
fcoms
sub
pushf
outsb
lock
and
pop
mov
ljmp
pop
dec
test
movsl
stos
jnp
test
nop
jl
leave
xchg
push
inc
mov
add
sbbb
inc
mov
jge
pop
push
enter
cmp
add
dec
rorl
adc
jo
pop
fldt
stc
arpl
xlat
lret
popa
or
jne
xor
sub
add
xchg
test
rcl
or
stc
xor
push
mov
cmpsl
cmp
pop
loope
lods
jbe
mov
sbb
mov
aad
xor
xor
cmp
or
fsubrs
push
add
bound
movsb
repz
aad
mov
popa
mov
xchg
popa
js
arpl
xchg
test
fmuls
jmp
or
fdivrp
lret
sbb
adc
or
xor
lahf
arpl
pop
lods
mov
cmp
fucomip
adc
into
mov
mov
sbb
fmulp
xor
sbb
or
sbb
fs
xchg
pop
cmpsb
xor
daa
fxch
aad
or
jae
push
push
lahf
sarl
pop
push
mov
sub
inc
arpl
lcall
push
in
jmp
jmp
adc
and
mov
inc
imul
sbb
repz
jmp
orb
jne
popf
jge
add
push
sub
shlb
add
cltd
mov
int
dec
ss
push
sahf
into
xor
push
test
mov
cmp
xchg
std
inc
cmp
push
xchg
fs
or
cmpsl
mov
movsb
cmpl
lods
int3
and
call
scas
mov
jle
in
sbb
test
pop
push
mov
leave
in
stos
aas
xchg
xchg
cmp
lahf
xchg
dec
ss
add
push
fistpl
xlat
mov
loop
sub
fwait
sbb
ja
sub
mov
popf
xchg
out
shl
cmc
aam
or
jne
data16
inc
inc
outsb
push
repnz
test
repz
repz
and
outsl
cmp
jb
mov
aaa
inc
and
cmc
insl
jne
push
inc
push
movsl
negb
adc
fbld
cld
roll
pop
bound
cmp
mov
adc
jo
dec
imul
movsb
icebp
add
idivb
pop
mov
ljmp
cmp
jle
pushf
outsb
or
jbe
mov
sbb
add
pop
loope
rcrl
jnp
inc
out
or
cmp
or
fsubrp
popa
rcrl
mov
cltd
ret
or
rolb
shll
xchg
pop
push
shl
sub
inc
xlat
adc
mov
call
cs
in
xor
and
fnstcw
sbb
fimuls
jnp
fwait
loop
or
shl
cmp
aam
das
sub
outsl
jnp
arpl
xor
sub
add
push
dec
insl
xlat
or
inc
mov
cmp
adc
and
fmulp
test
fsubr
dec
push
ret
shrb
xchg
push
jbe
xor
mov
push
data16
shll
mov
jecxz
aad
xor
cmpsl
insl
push
cld
hlt
adc
or
cli
outsl
mov
mov
int
xor
sub
inc
pop
dec
mov
data16
mul
jb
cwtl
jae
sar
add
das
cmpsb
sbb
push
jg
ljmp
pop
jle
cmpsb
popa
xchg
addr16
outsb
ljmp
test
xchg
cs
mov
out
mov
mov
or
loop
lret
test
xchg
add
out
push
mov
dec
push
push
les
lods
and
fsubr
pop
pop
sub
popf
inc
sub
or
pop
lds
add
aad
xchg
sbb
adc
and
leave
and
push
aad
mov
add
std
dec
jg
test
pop
gs
sub
fdivs
xchg
fsts
lret
xchg
add
lds
xor
push
pusha
sbb
mov
jnp
sub
inc
enter
add
call
push
pop
mov
jp
push
push
enter
mov
dec
inc
dec
xor
fistl
loope
sbb
or
push
jae
mov
xchg
sbb
imul
out
lods
fidivs
push
aam
jbe
dec
xor
pop
or
xor
inc
sub
push
pop
test
push
push
or
xchg
ds
push
aas
mov
sbb
fs
stos
loope
dec
xor
loop
jp
loopne
lods
daa
pop
cld
in
popl
cmpsl
lret
xor
pushf
out
lods
fdivr
xchg
pop
mov
mov
bsr
dec
pop
movsb
arpl
sub
and
adc
outsl
dec
sub
cmp
xor
push
sti
inc
popf
addr16
shll
xor
or
hlt
dec
out
sbb
pop
sahf
insl
push
xor
pop
lahf
jg
cmp
insb
out
gs
lock
orl
jp
push
test
pop
sbb
pop
xor
insb
xor
testb
imul
mov
and
dec
adc
mov
cmpl
ljmp
or
mov
iret
xchg
mov
push
lcall
cltd
inc
sbb
cmpl
rorl
sbb
cmc
xchg
test
mov
outsb
mov
and
je
and
mov
lock
sahf
in
movsl
jno
fldl
mov
mov
adc
arpl
sub
jecxz
mov
out
outsb
inc
cmp
rcrb
mov
jmp
lods
lods
outsb
or
push
loop
or
rcll
and
sub
fcom
push
sbb
mov
les
or
dec
pop
cwtl
out
bound
mov
mov
popa
xchg
xchg
shrb
ror
mov
jge
jp
in
ljmp
xchg
cld
aad
bound
shlb
lcall
push
popf
std
cmp
push
ljmp
movsb
inc
les
jbe
fldl
in
in
pop
scas
pushf
mov
lods
jns
push
add
sub
mov
aaa
push
sbb
sub
mov
mov
xchg
pop
pop
sbb
jle
xor
ror
jb
je
and
outsl
stos
loopne
push
shr
ret
aam
sub
mov
jl
cmp
shll
cs
and
jmp
mov
das
in
cmpsl
mov
scas
in
jle
pusha
push
adc
mov
add
lret
cmp
and
pop
push
in
jp
jnp
fildll
or
or
dec
push
and
lret
pop
loopne
inc
adc
push
jecxz
andb
sti
cltd
inc
sub
jmp
jge
imul
xor
cwtl
inc
cmp
lods
lahf
cwtl
arpl
out
icebp
dec
xchg
xchg
stos
add
cmp
xchg
xor
orl
or
dec
fimull
addr16
add
xchg
jb
mov
out
movsb
mov
mov
pop
mov
xchg
pop
leave
cmp
push
imul
xor
jle
mov
into
sbb
sub
lcall
fwait
dec
inc
jbe
fs
insl
popf
out
sbbl
mov
sti
test
push
inc
clc
stos
inc
test
in
and
fdivl
movsb
lahf
push
cld
or
mov
aas
mov
jbe
xchg
jmp
xor
icebp
outsb
mov
mov
ds
pusha
pop
movsl
push
ds
xor
jl
mov
es
pushl
stos
pop
mov
sti
dec
jae
inc
xchg
jl
pop
jmp
aad
and
in
pop
mov
mov
push
push
cmc
or
sarb
cli
or
lcall
outsl
ja
in
arpl
inc
insl
add
sub
mov
jmp
cmpsb
fsubrp
pop
mov
out
cmp
inc
sub
lret
popa
fsubrl
inc
push
loopne
push
sub
or
cs
lahf
faddl
mov
push
and
insb
nop
jb
jo
popf
fdivrs
inc
stc
mov
sub
inc
test
mov
js
push
xchg
ret
dec
fists
mov
push
sub
lods
dec
xor
daa
inc
out
leave
ret
ja
xor
cmpsl
cmp
xchg
cld
out
lahf
lods
fs
add
or
cmpsl
out
cmp
testb
stos
mov
dec
dec
mov
xchg
movsl
pushf
and
and
mov
imul
jno
ret
inc
xor
sahf
or
shr
jle
js
xor
aad
aad
ljmp
push
aad
in
test
ss
adc
cmc
sbb
cmp
sbb
and
cmp
icebp
popa
into
sbb
push
push
sbb
fwait
sahf
test
add
or
xchg
pop
rcll
xlat
mov
adc
jae
and
cmc
stc
imul
dec
in
push
stc
imul
shlb
cmp
pop
and
mov
popa
mov
pop
cwtl
xchg
aad
push
stos
adc
push
stos
mov
fscale
in
sub
pop
dec
sub
fistpl
mov
icebp
add
iret
jne
adc
ds
pusha
xchg
in
daa
mov
and
notb
lods
xlat
out
add
ljmp
rcrb
cmpsl
daa
jo
inc
dec
setae
cwtl
mov
ror
push
xor
push
out
adc
std
cmp
clc
imul
cmp
insl
jns
jmp
fildl
push
cmc
dec
cld
stos
daa
enter
mov
ret
cmc
insb
out
test
out
js
xchg
mov
arpl
or
pushf
addr16
and
test
in
fndisi(8087
jmp
gs
xor
xchg
addr16
ficomps
mov
xor
out
aaa
int3
ret
call
addr16
sbb
sahf
sub
iret
rcrb
in
mov
pop
xchg
data16
enter
add
repz
inc
mov
mov
push
shlb
or
lea
mov
sbb
sbb
mov
jne
jne
les
pop
hlt
ud1
aam
sub
pop
int
adc
dec
mov
sub
out
insl
dec
jbe
pop
add
mov
divl
jecxz
mov
enter
dec
cmp
push
jns
adc
in
shlb
int3
jns
jne
dec
pop
push
and
adc
jge
cwtl
push
ljmp
mov
push
repz
mov
or
xchg
ljmp
cltd
stos
mov
mov
out
popf
fldenv
lods
lahf
icebp
scas
mov
aas
and
ljmp
lods
xchg
mov
pop
ljmp
outsl
pop
movsl
int3
or
out
jmp
aaa
xor
ret
fucom
dec
call
pop
leave
and
mov
ja
mov
lock
adc
aam
pushf
jae
lahf
aad
loope
sub
push
in
jp
fwait
pop
movsl
xor
out
mov
ds
into
cmc
pop
clc
cmp
mov
lds
popa
mov
scas
movb
mov
adc
cltd
movb
repnz
mov
mov
pop
inc
sahf
mov
mov
aaa
clc
and
out
jbe
dec
adc
cmp
call
push
fadd
sub
jmp
mov
int3
adc
sub
push
jp
lret
cmp
fwait
ss
xchg
daa
ret
cmp
lcall
shrl
sbb
idivb
call
lea
jbe
sbb
cltd
mov
push
loopw
popa
cwtl
das
and
and
add
fstp
dec
mov
add
pusha
repz
jl
and
das
cmpl
dec
int3
out
rclb
cmp
int
jp
fstp
xchg
fsave
fmul
mov
test
rcrb
lcall
fbld
pop
dec
sbbl
ss
mov
jnp
sub
in
testb
adc
and
add
pop
outsb
out
add
jg
addr16
in
sti
bsf
inc
mov
push
addr16
lcall
movsb
cld
add
and
mov
xchg
inc
and
inc
aam
je
mov
lahf
or
lock
mov
sbb
popf
fs
xor
mov
lea
cmpsb
xchg
leave
push
mov
push
out
dec
xor
jle
push
rol
mov
and
pop
mov
and
scas
loope
sbb
mov
mov
andb
movsl
aaa
add
cmp
out
out
lret
cmp
std
aaa
sbb
mov
cmp
sti
push
test
fwait
orl
xchg
lock
jmp
jge
sbb
ljmp
sbb
cwtl
test
push
sub
xlat
sti
cmp
and
jmp
mov
pop
bound
adc
loop
frstor
xchg
mov
loop
scas
roll
and
mov
adc
lds
or
clc
rolb
lret
repnz
call
pop
das
lods
push
out
add
sub
je
and
sbb
lock
stos
test
cmp
cwtl
bound
jle
sarb
mov
mov
je
push
out
mov
xor
sub
outsb
clc
lods
test
dec
fwait
aad
push
call
cmp
jns
jae
stc
cmc
inc
push
into
adc
int3
or
ljmp
push
push
mov
lods
enter
movsb
dec
inc
in
and
jae
test
clc
hlt
movsb
fisubrl
adc
sbb
mov
outsb
ret
mov
add
xchg
push
adc
mov
or
cmp
fucomp
cmp
cmc
mov
jmp
mov
dec
inc
sub
stos
pusha
jb
sub
filds
lret
inc
add
inc
mov
mov
sub
push
inc
add
out
lahf
js
inc
xor
enter
lea
push
and
pushf
lret
xor
and
fwait
or
cmp
and
sahf
adc
pop
pusha
lock
loop
lcall
or
addr16
cmc
repnz
or
xor
xchg
and
or
push
cmp
lods
push
adc
sub
insb
movsl
or
rcrl
mov
js
sub
dec
and
adc
mov
ljmp
cwtl
ret
test
mov
lea
call
push
xchg
inc
mov
xchg
js
push
mov
out
stos
mov
sarb
loope
enter
push
xchg
fs
sub
ret
testb
cld
add
test
stos
subb
int3
dec
push
dec
lock
mov
dec
les
sbb
jnp
sbb
popf
sbb
cvtdq2ps
sub
push
push
ficompl
or
sti
outsb
lods
inc
sub
or
push
mov
mov
mov
mov
sbb
add
sbb
cld
int
data16
dec
mov
in
or
div
jae
push
fisubl
sub
jb
xchg
wrmsr
cmp
push
push
pop
ja
sbb
mov
test
in
cmpl
cld
cltd
jl
mov
push
and
jg
mov
sub
test
sarl
ret
jnp
addr16
jnp
jge
stc
lcall
and
mov
sub
out
rolb
rcrb
xor
call
jecxz
fidivl
mov
push
adc
push
decb
xlat
out
xchg
dec
mov
lcall
int3
mov
sti
cli
xchg
add
jne
rorl
adc
xchg
cld
dec
xchg
mov
idivw
daa
insb
es
sub
mov
aad
jecxz
pushf
sbb
aaa
xor
push
push
inc
pop
pop
lcall
lods
leave
cwtl
mov
mov
mov
add
xor
repnz
mov
mov
or
test
and
pop
add
lods
std
out
icebp
clc
cmp
inc
ss
ret
cs
and
leave
mov
inc
mov
cmc
dec
dec
xor
lahf
mov
pop
fdivs
cwtl
xor
idiv
mov
sub
or
xchg
ret
sub
in
adc
sbb
gs
lret
dec
js
push
int
dec
mov
push
jno
sbb
push
mov
ds
and
cwtl
cmpsb
sub
cld
js
mov
sbb
sbb
movsl
sbb
lock
xchg
mov
cmp
loopne
faddp
insl
dec
add
in
mov
pop
lret
xor
les
lret
xchg
sub
scas
in
jo
pop
popf
test
inc
ret
xchg
jno
in
pop
fs
cmp
leave
push
lock
in
fldcw
jns
cld
xchg
mov
enter
jg
cmpsl
insb
test
mov
or
in
xlat
cwtl
cmp
mov
es
decl
mov
out
ja
xlat
cmp
adc
mov
cmp
aad
mov
sub
cmpsb
cmc
popa
mov
add
add
dec
fisttps
or
ret
inc
mov
or
mov
arpl
test
es
dec
xchg
sarb
test
adc
std
sbb
into
mov
dec
cld
add
pop
popa
popf
cli
push
sbb
mov
test
das
sub
pop
sbb
sub
or
push
inc
cmp
lcall
push
arpl
cs
lret
fs
adc
mov
cmp
jmp
addr16
shlb
inc
inc
aas
movsl
mov
in
jl
mov
add
and
in
add
cmpsb
cmpsl
adc
inc
movsb
sbb
push
iret
mov
push
sub
add
cmc
cmp
movsl
add
push
mov
mov
jae
pop
cmp
mov
jne
or
inc
repz
fdivrs
fcomps
movsl
adcl
repnz
dec
add
cmp
sbb
int3
mov
ret
xor
imul
push
jge
jae
fildl
cs
adc
dec
inc
pop
je
cmp
insl
xchg
mov
icebp
nop
pop
loop
sbb
fistl
inc
popa
add
mov
inc
mov
xor
inc
mov
andb
mov
sbb
inc
fucomi
dec
rcrb
shl
repnz
scas
mov
insl
and
sub
aad
jle
loop
and
xchg
dec
dec
push
lret
xor
pop
subb
std
pusha
inc
mov
test
mov
jecxz
popa
cmpsb
inc
xchg
jae
in
addr16
mov
sub
into
out
gs
in
inc
nop
pop
dec
add
adc
insb
ss
imulb
std
xchg
mov
dec
jle
or
mov
and
mov
mov
dec
int3
adc
sbb
fdivs
lahf
mov
ljmp
or
mov
out
inc
xchg
xchg
mov
push
add
and
movsl
push
xchg
movsb
and
aam
scas
add
pop
sub
mov
mov
iret
mov
mov
pusha
in
nop
jnp
push
movsb
std
test
shll
lahf
shlb
jecxz
mov
or
dec
mov
push
xchg
ja
adc
iret
lods
mov
imul
xchg
test
int3
nop
sub
push
jg
shlb
xor
mov
pop
lods
push
cmp
mov
popf
mull
xchg
xchg
std
outsl
push
int
pop
sub
sarb
clc
xchg
pop
lret
hlt
lods
cli
mov
ret
add
shll
inc
loop
shlb
rorb
inc
xor
scas
loope
mov
das
and
dec
je
hlt
sbb
sub
aaa
adc
xor
push
cmp
repnz
stos
push
vpslld
jbe
gs
mov
sbb
cmp
shl
popf
or
cmp
adc
pop
dec
cli
mov
je
rclb
jl
in
sub
xchg
cmp
sahf
pop
dec
hlt
shll
push
lods
cmpsl
push
jmp
mov
shlb
lods
int
jl
mov
mulb
cmp
or
jle
sbb
adc
mov
sub
ret
jns
push
mov
daa
mov
inc
jbe
int3
cmc
movsl
int
push
rcll
notl
movsl
in
pop
dec
push
test
leave
cltd
push
loopne
sti
into
fwait
xorb
xchg
jl
or
xlat
add
and
xchg
insb
and
lcall
mov
out
dec
iret
idiv
cmc
fstpl
add
cmpsb
into
push
pop
jb
stos
mov
insb
xor
push
inc
adc
pop
pop
imul
ficompl
in
rcl
sbbb
inc
pop
addl
dec
sti
clc
es
or
filds
xor
mov
mov
cs
pop
andb
add
xor
movsb
test
ds
mov
sub
xlat
outsl
js
xchg
xchg
sbb
lods
dec
out
cmpsb
fst
test
pop
push
or
sbb
in
or
pushf
fimuls
dec
xor
ss
es
mov
std
in
mov
outsl
dec
iret
cli
ja
pushf
shrb
movsl
insb
lock
sti
jns
sarl
stos
test
roll
outsb
jg
jo
subl
adcl
dec
fsubs
jo
js,pt
ja
push
xchg
xor
push
push
or
scas
movsl
adc
addr16
int
lret
mov
out
test
xor
ja
jp
mov
nop
cmc
fistl
xor
fisubrl
ffreep
das
xchg
or
pushf
inc
leave
inc
test
or
jb
loop
mov
repnz
pop
insl
imul
or
mov
jg
popf
out
sbb
xchg
add
jl
sbb
js
ljmp
call
insl
sbb
mov
and
scas
ja
cwtl
or
fisubrs
dec
aad
push
insb
pushf
popf
mov
push
out
fidivs
aaa
fbld
les
dec
aaa
enter
pop
cmp
mov
inc
popf
push
sub
pop
or
cs
frstor
das
jo
sub
pop
jb
aam
jge
pusha
dec
sahf
fwait
mov
jg
in
out
aaa
push
or
and
pop
call
std
enter
lcall
or
lock
bound
sub
pop
cmpsl
popf
mov
inc
lea
arpl
shlb
xchg
das
enter
test
push
addr16
fcmovb
xor
mov
push
aam
leave
cli
aaa
sbb
push
xlat
outsl
popf
jns
xchg
jnp
arpl
sub
push
jno
orl
pop
adc
in
je
iret
pop
mov
mov
cmp
mov
lcall
or
cltd
sbb
cmp
jp
lock
cmpsb
inc
lcall
push
xchg
mov
and
pop
test
out
scas
rorb
stos
movsb
cmp
call
xchg
sub
popf
out
imul
rcll
leave
nop
or
mov
fcomps
or
xor
xchg
push
sub
mov
adc
mov
loope
stos
imulb
fimuls
cs
fsubr
rol
jp
data16
sub
lock
lret
aas
ret
jg
dec
std
push
outsl
out
inc
dec
add
mov
ficompl
dec
adc
in
js
xchg
jbe
ret
cmpsb
out
sbb
loope
in
push
xlat
mov
movsb
adc
adc
in
inc
cltd
xor
into
mov
test
dec
pop
mov
lea
jnp
outsl
mov
js
cmp
and
adc
leave
jmp
cmp
test
pop
in
push
outsb
outsl
mov
add
enter
dec
add
xchg
lcall
je
hlt
daa
outsl
movsb
insl
jae
cld
pop
xchg
dec
mov
stos
dec
jp
cmp
ds
adc
xor
div
daa
adc
push
pop
out
sbb
inc
jp
in
int3
and
mov
sti
stc
jnp
imul
in
test
sarl
xchg
add
xchg
jns
imul
jg
sub
pusha
sub
pop
or
int
hlt
orl
roll
mov
lods
cmpsl
mov
push
int
shl
test
sti
mov
out
cmp
out
loope
loopne
adc
mov
pop
das
adc
xchg
fwait
pop
into
sahf
add
int3
or
mov
jns
testl
cwtl
fstp
push
mov
and
xchg
adc
and
jae
lds
sahf
sbb
mov
sbb
lods
negl
stc
hlt
push
xchg
pop
fadds
sbb
adcb
or
push
push
sar
ret
jbe
aaa
push
xchg
add
mov
pop
pusha
in
inc
popa
jnp
xor
insb
push
mov
jbe
mov
fiaddl
inc
dec
in
jbe
loope
xchg
mov
inc
dec
ss
sbb
gs
ds
jmp
xchg
lcall
inc
add
in
movsl
jg
popf
shrb
mov
and
xor
neg
in
jecxz
dec
pop
imul
inc
and
and
jmp
rolb
repz
int
sub
lea
js
xchg
fistps
jp
push
lret
ja
xor
scas
add
daa
fcmovne
addr16
pop
add
test
jns
sbbl
mov
push
sbb
mov
lock
out
sub
aam
mov
add
and
xchg
sbb
pop
pushf
or
pop
jmp
jo
xor
nop
push
adc
into
shrl
sbb
loop
sbb
in
jmp
lock
and
push
jns
xchg
fstl
gs
aaa
je
sub
or
aaa
imul
add
add
xchg
pop
and
cmpsb
pop
cmpsb
jnp
fnstenv
in
out
lret
outsb
mov
and
fstl
xor
gs
xchg
push
es
icebp
push
inc
push
mov
mov
fidivrl
jns
jnp
loopne
sti
lds
push
xchg
push
add
add
push
mov
mul
data16
inc
loop
add
loope
dec
psubusb
fwait
sub
enter
add
ret
roll
cmp
mov
in
ret
jae
xor
mov
stos
stc
imul
insl
aad
fsubr
fs
in
ds
push
xor
or
daa
push
aas
mov
les
jb
outsb
in
adc
mov
mov
pop
xorb
fcompl
push
add
out
add
orl
push
mov
jo
add
nop
adc
shlb
cmp
xchg
jnp
icebp
out
push
sub
aas
dec
int
and
push
std
adc
mov
enter
icebp
mov
into
inc
jle
fucom
adc
xlat
nop
mov
xor
push
cmp
push
cmp
xchg
sti
loopne
cmp
adc
cmp
popa
pop
cmp
mov
pop
testb
pusha
shlb
in
mov
and
cmpsl
sbb
jno
fnstsw
gs
fs
pop
bsr
jg
dec
mov
sub
loop
pop
mov
pop
pop
std
pop
mov
test
sbb
xor
cltd
xlat
adc
jmp
movsb
mov
pop
or
fs
pop
daa
push
or
mov
xchg
out
cmp
cmpsl
out
xchg
test
popf
xor
pop
adc
mov
movsb
push
pop
lcall
cmp
cmp
nop
and
sub
mov
xlat
mov
lea
fidivrs
add
je
lahf
jle
xchg
sti
scas
ja
mov
popf
into
inc
popa
lret
xor
pop
shl
pop
daa
in
ret
inc
lods
sub
shlb
lahf
int3
mov
mov
mov
dec
xor
add
cmp
int
inc
aam
add
loopne
pop
mul
outsb
xchg
test
push
add
outsl
js
pop
hlt
movsl
std
add
insb
shrl
imul
enter
ds
icebp
jl
clc
insb
out
mov
ss
dec
push
push
mov
mov
push
cmp
mov
pop
pop
pushf
mov
ret
fstps
adc
icebp
add
cmp
ljmp
xor
push
ret
jae
inc
insb
test
stc
push
pop
jnp
sbb
lea
lahf
lea
jle
mov
aas
pop
sub
xor
std
insb
rol
sahf
jns
xchg
dec
lds
mov
adc
movsl
rorl
in
pop
std
mov
sarl
imul
addps
jb
jne
out
add
sub
mov
mov
pop
lea
sub
andb
adc
sub
xor
push
push
push
xchg
movsl
insl
mov
mov
pop
ficoml
out
mov
inc
jge
push
sub
icebp
xorl
fs
jl
lods
nop
int3
jnp
fildll
aam
outsl
outsl
cwtl
xor
inc
imul
xchg
push
mov
inc
or
pop
or
cli
lock
rorb
cltd
int3
leave
lods
sub
cli
adc
pusha
adc
pop
or
and
jne
add
push
imul
je
out
dec
dec
dec
cmp
and
and
jne
add
leave
xchg
shr
imul
mov
cmp
mov
sub
or
dec
jae
mov
das
xchg
fs
je
cmpsl
jb
and
scas
inc
and
nop
jmp
push
sub
stc
popf
std
push
pop
out
lods
mov
arpl
inc
es
xchg
cmp
gs
fwait
inc
outsb
fcomps
arpl
pop
and
or
cmpsb
or
add
mov
jns
sub
or
and
les
xor
iret
inc
or
jg
stc
and
dec
lret
mov
into
mov
push
cmpsl
mov
lahf
fisubs
add
leave
lahf
add
push
push
std
sti
data16
cmp
in
jo
imulb
add
adc
dec
rcll
loope
pop
push
jnp
daa
mov
and
icebp
mov
sbb
cmp
xchg
int
das
lods
jns
lods
fucomi
push
ror
into
insl
test
arpl
xchg
jnp
cmc
inc
mov
and
shrl
movb
rcrl
cmp
mov
pop
in
ficompl
mov
aad
or
fucom
xor
jge
or
adc
addr16
popa
mov
or
xchg
shlb
or
ljmp
mov
ljmp
ret
mov
and
add
loopne
sti
ds
xor
ret
mov
mov
sbb
xchg
mov
es
dec
xor
outsb
xor
repnz
div
imul
dec
clc
sub
push
cmp
leave
cmc
push
fwait
outsl
fcomp
outsb
push
xchg
jge
and
daa
and
mov
and
clc
cwtl
les
mov
inc
add
adc
pop
cmc
insl
repnz
xchg
aad
leave
jle
fwait
scas
adc
mov
enter
sbb
mov
or
add
xor
popa
popa
adc
mov
pop
sarl
lock
test
and
pop
test
jecxz
jg
call
fnstsw
imul
adc
xor
scas
xchg
pop
sbb
pop
in
das
inc
insb
mov
adc
jp
mov
xchg
int
sbb
and
ljmp
push
daa
test
mov
pusha
arpl
or
icebp
and
cmp
inc
xchg
add
rcll
dec
mov
jmp
cmp
mov
xchg
aas
add
adc
push
test
jmp
pop
add
pop
xor
xchg
xchg
sub
fwait
test
or
push
jg
ss
das
dec
leave
lret
dec
sbb
subb
jns
cwtl
aam
sub
inc
pop
pop
pop
adc
loop
jne
and
jle
divb
or
ds
jae
icebp
cltd
cmp
inc
pop
in
or
jb
and
push
push
ja
jnp
decb
aam
mov
cltd
jmp
jle
out
and
and
fistpll
mov
leave
ss
roll
clc
xchg
push
scas
mov
imul
loop
rclb
movsl
cmc
movsl
mov
stos
js
test
hlt
inc
negb
aas
outsb
out
jb
out
inc
addr16
int3
mov
jge
and
popa
xchg
sub
mov
cmp
xchg
nop
cmp
xchg
and
cmp
cmp
sbbb
xor
or
fstpl
out
sub
sahf
movsl
xchg
clc
movsl
es
lods
or
push
mov
add
je
lock
aad
out
jno
daa
or
mov
mov
mov
fwait
lds
stos
stos
inc
fimull
popa
into
mov
dec
addr16
mov
and
arpl
xor
xlat
je
jbe
mov
push
jmp
mov
push
aaa
or
addb
inc
sbb
mov
lock
stos
jne
jmp
idivl
cmp
ret
int3
js
dec
cmp
mov
jp
popf
jne
mov
and
test
cmpsb
lret
add
push
outsl
roll
in
fdivl
and
jns
push
lret
dec
sahf
es
js
pop
orb
xchg
jb
pop
mov
jge
mov
mov
scas
cs
push
rcl
lods
jecxz
les
lods
push
mov
push
mov
in
or
adc
fistpl
mov
subl
lds
bt
inc
adc
fisubl
out
or
roll
inc
movsb
adc
fisttps
pop
jae
add
add
popa
outsb
les
sbbb
loop
jb
fs
pop
dec
mov
cmpsl
sahf
sbb
dec
cltd
das
es
push
test
xchg
jp
push
leave
scas
cmpsb
mov
pop
aad
fnstcw
popf
lds
xchg
inc
xchg
out
sub
and
lock
inc
lahf
mov
bound
sub
xchg
mov
int
test
fidivrs
push
and
pop
mov
xchg
pop
lahf
push
and
adc
leave
outsb
and
loop
mov
arpl
push
mov
mov
adc
enter
imul
sbb
lock
mov
push
inc
sbb
dec
rorb
sub
inc
daa
jno
gs
jo
loope
or
sub
lcall
xchg
arpl
xor
adc
test
int
loop
pop
and
repz
push
popf
pop
inc
push
cmp
movsb
addb
cli
loope
dec
jl
and
sub
das
mov
rorb
test
clc
and
push
rol
mov
add
out
pop
in
jns
pop
jnp
pop
stos
cld
fmuls
and
repnz
adc
scas
cs
notl
int
sbb
repz
loop
fdiv
es
aad
add
arpl
ss
adcb
testb
mov
pop
leave
mov
ficoms
mov
mov
dec
adc
lahf
mov
out
dec
xor
ja
stos
xor
sarl
push
adc
loopne
insl
adc
mov
clc
imul
stc
and
daa
scas
xchg
mov
add
push
sbb
jmp
shr
xchg
aas
dec
pcmpgtd
and
xorl
mov
cmovne
addr16
lods
cmc
adc
fs
xchg
jle
cmpsb
xchg
lret
test
or
mov
mov
add
popf
fcmovne
cmp
push
aad
xchg
inc
pop
std
lds
add
fstl
cli
push
das
xchg
jnp
dec
dec
movsl
inc
es
nop
hlt
mov
sbbb
out
lret
xlat
clc
pop
insl
xchg
pop
inc
dec
adc
stos
idivb
pop
aas
lods
xorl
mov
cmpsl
xchg
fists
test
sub
pop
xchg
jnp
test
ds
cs
or
mov
das
and
je
js
movsb
arpl
add
jl
and
sub
dec
leave
xchg
pushf
lds
imul
push
push
and
add
pop
mov
sbb
je
push
test
push
jbe
int
jmp
icebp
xchg
ret
mov
test
xchg
mov
test
adc
inc
outsb
xchg
imul
popa
push
clc
jbe
inc
adc
cmpsl
pushf
xor
pop
adcb
jp
ss
inc
out
jae
pushf
adc
cli
int
push
jno
into
push
movsl
jbe
push
div
roll
leave
and
adc
add
or
insb
mov
sahf
inc
xlat
sbb
jae
push
jecxz
sbb
sarl
push
mov
push
push
adc
ficoml
dec
jo
jne
cwtl
out
fbstp
bound
sbb
mov
and
shl
imul
push
stos
xchg
cmpl
ffreep
pop
mov
cmp
mov
pop
repz
sub
pop
lahf
inc
loop
dec
xor
in
inc
pop
inc
loopne
ret
sub
jg
jl
pushf
cs
inc
dec
orb
popf
aam
sbb
jecxz
or
popf
cmpb
push
imul
adc
adc
lret
stos
mov
sub
test
fldcw
fisubl
cmpxchg
hlt
out
jb
lcall
popf
loope
out
sub
pusha
jnp
fsubs
rclb
xorl
push
fs
enter
mov
outsl
or
shrb
addr16
sbb
push
int3
int3
loope
pop
outsb
inc
push
loop
aaa
adc
jo
jecxz
and
jne
sbb
mov
and
divb
loop
add
rcll
dec
lea
xor
out
shll
fdiv
sub
das
hlt
ret
stc
jns
sub
insl
mov
pop
sbb
imull
push
call
jae
loopne
sbb
jbe
jnp
dec
jmp
gs
addr16
mov
cmp
adc
add
jge
pop
or
xor
shl
cld
and
mov
cmp
push
cwtl
popw
sub
mov
cmpsb
cli
pop
shll
push
movsl
cli
aad
jg
xchg
xchg
adc
int
add
mov
mov
imul
rorl
imul
mov
sti
and
push
inc
cmp
xchg
pop
jb
imul
lods
pop
outsl
jp
dec
inc
jb
push
cmp
nop
daa
mov
cmp
aam
xor
imul
push
or
aad
shld
adc
shl
jg
inc
movsb
mov
pop
add
mov
adc
das
mov
and
xchg
mov
add
js
bound
sub
into
movsw
dec
rorl
pop
inc
cmp
mov
clc
inc
sub
pop
dec
cmc
insl
fs
pop
stos
cmp
push
jecxz
mov
pop
orl
adc
inc
cwtl
mov
cwtl
addb
sbb
inc
aam
and
mov
ret
fmul
xchg
mov
mov
data16
mov
fldcw
xor
mov
dec
imul
pop
fcmovnb
out
fistps
mov
inc
in
xor
sub
ret
mov
pop
jl
imul
xor
fwait
aad
icebp
sub
repz
pusha
cwtl
mov
inc
lret
lods
and
fdivl
sub
lea
es
js
jnp
test
jmp
dec
nop
dec
scas
scas
push
push
jl
cmp
pop
test
imul
dec
daa
les
std
outsb
and
push
pop
mov
loopne
sub
hlt
das
push
outsb
sbb
jle
scas
lds
inc
add
pop
pop
mov
test
ror
js
jb
mov
inc
dec
jge
jne
add
push
fldenv
and
push
xor
sub
pop
fnstsw
lods
in
mov
nop
frstor
out
adc
mov
sbb
fst
out
in
sbb
ret
stos
mov
stos
and
add
repz
or
sbb
popa
les
sti
fidivl
adc
push
arpl
xor
mov
sub
imul
aad
add
dec
insl
ljmp
jmp
mov
fbstp
adc
mov
daa
iret
dec
inc
pusha
das
lcall
mov
clc
fmuls
loop
in
cs
out
xor
jmp
pop
xor
cmc
enter
xbegin
ret
jl
ret
loope
fnstsw
imull
and
aam
in
fldcw
jbe
or
in
mov
rcrb
icebp
mov
stc
or
xor
push
in
cli
inc
out
cmc
and
clc
test
adc
dec
testb
loope
repnz
jmp
lea
adcl
sub
inc
adc
adc
jle
xor
loop
push
out
cmpsl
xrelease
cs
add
scas
mov
aaa
mov
add
inc
in
xchg
jns
shr
cli
add
jle
mov
jle
push
bsr
and
aaa
mov
in
inc
outsb
test
rcr
rolb
xchg
fidivrl
lcall
mov
sbb
cmpsb
repnz
jnp
mov
and
pop
push
test
loope
sbb
call
push
cld
inc
mov
mov
mov
rcll
dec
cs
push
ss
cld
pop
dec
push
lds
xor
lock
out
cli
dec
cmp
jae
and
out
mov
xor
call
xor
fadd
inc
mov
inc
gs
push
jns
or
aad
dec
or
loope
pop
jge
jne
xchg
adc
mov
and
mov
clc
test
add
pop
sub
ss
mov
and
aas
inc
jle
pop
adc
cli
or
outsl
outsb
out
push
adc
mov
jo
arpl
cmpsl
sbb
xchg
jno
adc
fs
mov
ficompl
sbb
test
aad
adc
idivb
test
aaa
pop
jbe
push
sarb
xchg
or
cmp
xchg
cli
lahf
push
or
pop
inc
ljmp
insb
or
xor
mov
mov
aad
inc
mov
ljmp
xchg
mov
lock
cmp
or
lret
in
xor
xor
sahf
sbb
xchg
bnd
out
fistps
xor
outsl
insb
mov
jbe
adc
xchg
es
xor
int
xchg
and
sbb
rorb
pop
add
inc
es
xor
lahf
clc
mov
dec
mov
cmpsl
iret
xor
ja
push
idiv
inc
mov
cli
mov
fwait
aam
mov
imul
inc
addr16
cmpl
bound
or
jb
aas
mov
jae
in
mov
lods
push
add
lea
rcll
sub
inc
push
mov
in
push
mov
push
sub
xchg
pusha
inc
or
std
sub
sub
cmp
mov
mov
add
test
in
mov
add
nop
xchg
push
in
adc
cwtl
test
stos
or
fnsave
adc
mov
cmc
and
pop
shrb
ja
and
xor
clc
xchg
sub
mov
jns
mov
jmp
or
mov
cmpsb
lds
add
gs
mov
clc
mov
gs
and
out
je
stos
xor
mov
jmp
test
pop
in
cltd
xchg
hlt
std
pop
popw
xchg
xchg
test
xor
icebp
or
imul
mov
rsm
cmpsl
test
push
jecxz
lods
je
add
mov
dec
inc
fistl
scas
push
into
stos
aas
mov
inc
lret
jo
xchg
and
lods
and
mov
add
int3
clc
test
xchg
pusha
or
insb
lock
std
or
popf
cmp
inc
lods
into
push
fdivrs
je
sub
call
test
inc
pop
pop
or
stos
xchg
popf
addl
push
aas
inc
mov
aam
popa
or
fcomps
hlt
sub
xor
jbe
out
or
sbb
mov
scas
pop
popa
xchg
mov
or
jb
mov
clc
xchg
inc
or
cwtl
adc
cli
add
jb
mov
pop
mov
sbbb
xor
pop
fwait
pop
xchg
xor
inc
xchg
lock
adc
movsl
sub
jae
gs
js
mov
stc
push
jo
cmpsl
jo
inc
xchg
les
repnz
pop
ljmp
lcall
lahf
cld
sub
push
inc
out
cmc
add
and
stc
xchg
mov
sbb
xor
jle
movsl
imul
sbb
int
xchg
insb
cmp
cmp
push
xchg
mov
pop
or
xchg
aad
mov
rcr
loop
dec
ja
push
int
inc
mov
arpl
and
cmpsl
movntps
aam
mov
popl
pop
xchg
inc
in
or
cwtl
dec
sbb
push
jno
dec
ret
inc
cmp
in
fwait
sahf
es
dec
test
adc
lods
insb
dec
test
mov
mov
push
testl
adc
loopne
rol
loop
cmp
into
mov
andb
pop
lahf
ljmp
iret
int
xor
push
xor
out
popa
adcb
mov
movsl
cmp
test
sub
nop
in
adc
stos
addr16
fldenv
call
ja
outsl
ljmp
or
mov
imul
add
shl
ret
movsb
data16
pop
and
add
sub
mov
icebp
pushf
dec
push
cwtl
jge
dec
or
pop
push
ret
push
mov
push
jmp
jbe
es
push
pusha
daa
shlb
sub
enter
cmp
das
jmp
fldt
jmp
jnp
or
scas
aas
les
jo
xor
nop
mov
add
mov
sbb
mov
adc
mov
mov
cmp
cmc
adc
test
adc
popf
test
popa
pop
cmp
push
testb
outsl
aam
xchg
pop
out
mov
mov
lret
mov
or
fsubl
push
insb
pop
mov
ljmp
outsl
addr16
dec
aad
cmp
ljmp
lahf
outsl
out
fisubs
in
aas
mov
aam
cmpsl
xor
sbb
das
mov
outsl
lods
shll
adc
and
inc
lock
inc
stc
dec
jle,pt
adcl
pop
mov
mov
data16
pop
sub
aad
add
mov
pushl
mov
lea
mov
out
inc
xor
adc
bound
or
fimull
rol
loope
sub
jl
cmp
mov
xor
xlat
or
and
test
into
or
out
push
xlat
jns
pop
repz
inc
fistl
pop
orl
cmp
les
xchg
scas
lfs
sbb
mov
test
ret
lahf
xchg
jnp
mov
adc
xchg
es
push
mov
shll
mov
adc
imul
shrl
mov
pop
jecxz
mov
sbb
adc
cmp
sbb
outsb
dec
popa
fsubp
out
dec
fisubrl
dec
in
movb
inc
and
pop
or
lds
shll
push
mov
ss
test
or
inc
and
jns
and
ljmp
dec
shl
sub
or
mov
cmpsb
add
push
sub
loop
push
movsb
emms
and
pop
je
inc
or
inc
test
mov
dec
fcomps
push
xor
imul
lods
nop
fildll
cli
pop
cli
repz
and
aad
sbb
add
sub
push
js
cmpl
xchg
add
sbb
repz
pop
lahf
lahf
je
into
test
xor
daa
in
cli
jo
outsb
cmpsl
and
push
mov
pop
insl
xor
das
lods
andl
fs
cmp
xor
inc
negb
clc
sbb
idivb
lods
lret
shll
cltd
lret
pop
jne
jp
xor
gs
faddl
imul
mov
adc
loopne
xchg
xchg
inc
repnz
das
cmp
and
adc
fisubl
cmp
cmp
mov
add
pf2iw
fwait
pop
inc
addr16
pop
lcall
js
and
xchg
mov
xchg
xchg
cmp
int3
lock
add
inc
inc
mov
adc
mov
stc
mov
mov
icebp
fcoms
test
dec
push
outsb
sub
out
repz
mov
mov
aam
sbb
insb
cmc
mov
pop
orl
pushf
scas
lea
mov
or
pop
and
or
cmp
cmp
fildll
and
or
xor
leave
test
mov
inc
cld
mov
inc
dec
das
mov
idiv
cmp
inc
mov
fsubs
imul
jmp
insb
test
ljmp
xchg
aam
pop
inc
icebp
fdivs
out
inc
mov
lcall
xchg
cmpl
lea
andb
pushf
jns
xlat
insl
add
into
adc
addl
lods
mov
daa
das
arpl
pushf
push
push
jle
movsl
xlat
xchg
push
test
call
mov
add
push
dec
fcomip
in
push
sbb
stc
sahf
gs
jns
cmp
ret
test
pop
push
sub
mov
push
fmul
sbb
lock
dec
add
scas
testl
push
out
popa
pop
push
mov
xchg
add
pop
sar
jo
add
sti
jp
scas
test
sarb
popf
push
jl
xchg
mov
out
int
jno
shll
ljmp
test
das
dec
jns
aas
and
out
adc
pop
out
fcmovnbe
jmp
or
es
adc
cmpsl
cmpsl
aas
insb
test
es
test
sub
lea
out
sbb
bnd
shrl
xor
hlt
stc
jge
arpl
xchg
jb
mov
fcmovb
lods
leave
je
popa
aam
lcall
xchg
mov
pop
fwait
clc
test
fst
imul
ss
lret
sub
xor
inc
test
push
or
pop
pusha
out
jns
xchg
out
inc
jbe
mov
nop
mov
mov
rclb
cmp
xchg
push
les
cmpsl
xlat
or
and
pop
push
or
adc
xchg
bound
pushf
and
mov
stos
push
add
ret
fists
ss
dec
mov
pop
push
out
mov
dec
mov
lahf
jg
sub
test
push
rcll
jmp
push
iret
out
cli
fadds
push
xor
sbb
dec
stos
add
sub
sbb
pop
or
inc
cmp
inc
mov
xor
mov
stos
rol
cltd
mov
lods
xchg
out
cmp
aam
fxch
sub
sti
xchg
sub
add
lods
pushf
mov
data16
stc
xor
inc
mov
jae
pushf
ljmp
mov
jecxz
sbb
push
xchg
xor
fdivl
pop
cmp
sbb
ret
nop
lahf
je
lods
lock
lods
jl
pop
mov
dec
stc
mov
mov
jmp
push
jno
push
push
aaa
jp
fwait
ret
loopne
and
fistl
inc
cmp
loop
add
jo
push
andl
ds
mov
test
sbb
xchg
inc
cmp
lods
mov
jmp
flds
int
icebp
add
mov
sub
test
xchg
cmpsb
shlb
cli
jg
xor
xor
jmp
addr16
dec
add
add
jle
jp
dec
jno
decb
aam
cmc
in
fisttps
icebp
cmp
cmp
in
je
callw
lock
cli
xor
mov
les
bound
test
mov
int3
cmp
lods
and
bound
jmp
cmpsb
enter
ret
cs
cmc
or
cmpsb
push
cmp
ja
out
mov
cs
cmp
imul
xor
jo
hlt
add
mov
mov
mov
lock
cli
mov
mov
int
loope
or
push
sub
xchg
cwtl
adc
mov
pop
cmp
adc
xor
test
call
mov
xchg
loopne
ret
loopne
orb
daa
in
shrl
test
out
test
xchg
test
xchg
adcb
jb
cs
shl
adc
sub
xchg
in
cmp
inc
in
sub
jge
lret
cld
sbb
imul
inc
inc
fxam
and
dec
xchg
cmp
movsb
sub
mov
pop
cltd
cmp
lret
or
pop
mov
pop
cmp
pop
or
cwtl
gs
out
push
leave
cmpsb
insb
fldcw
scas
mov
add
clc
shlb
mov
add
shrb
jbe
push
xor
sub
pop
sbb
ret
push
sahf
stos
xor
fldt
sub
icebp
dec
mov
push
shrb
cmc
pop
rcll
mov
inc
jbe
imul
mov
cli
adc
inc
xorb
mov
jle
out
jle
dec
pmaxub
pop
imul
and
bound
je
lds
mov
fstps
xor
out
adc
test
gs
lret
cmp
jae
lret
xchg
pop
sbb
adc
sub
push
in
or
adc
pop
add
mov
inc
es
jge
pop
dec
sub
cltd
and
clc
mov
int3
sbb
mov
inc
mov
sub
mov
rcll
adc
inc
pop
mov
addr16
inc
dec
fwait
add
xchg
mov
or
xchg
arpl
test
rol
jge
mov
jecxz
dec
sub
call
insl
bound
lods
rcrl
xor
cmc
mov
fsts
add
push
imul
lock
lret
mov
hlt
push
iret
jl
inc
push
imul
mov
scas
push
aaa
lods
jns
lcall
nop
fistps
mov
cli
lret
sbb
mov
sbb
divl
pop
sbb
jb
loop
add
jl
shlb
in
loopne
or
cs
mov
mov
bound
testl
jecxz
out
add
rolb
jne
scas
push
pop
mov
push
sub
push
sub
inc
sahf
cli
fmul
sahf
pusha
les
test
sbb
or
cld
lods
add
sub
daa
mov
inc
pop
fs
lods
sbb
add
cwtl
pushf
std
imul
mov
xchg
mov
imul
or
adc
xor
es
and
out
jecxz,pn
jne
into
test
imul
jns
xchg
lea
pop
sub
fadds
xchg
add
xorl
outsb
cmpsb
xchg
xchg
outsl
mov
aad
cmpsb
jo
add
enter
repz
shlb
iret
popf
inc
fsubl
lret
sarl
lret
mov
iret
inc
loopne
or
mov
jmp
mov
ljmp
sbbb
push
addr16
out
inc
mov
insb
mov
push
sub
and
push
fcomi
push
jle
mov
daa
fidivrl
or
jmp
addr16
lock
enter
mov
and
add
add
in
loope
sti
xchg
cmp
adc
jge
push
sub
aas
lods
cmp
fisubs
sbb
sahf
jno
push
je
insb
adc
or
aam
sbb
add
push
mov
sub
mov
iret
push
add
sbb
mov
dec
jno
mov
inc
xor
push
mov
in
outsb
gs
sbb
push
sbb
xor
mov
jl
loopne
jg
or
fcomps
cmpsb
mov
jb
pop
dec
sahf
push
xchg
icebp
jle
push
in
mov
cmp
or
lock
int
adc
sbb
imul
mov
ret
sbb
cltd
daa
dec
dec
popf
bound
dec
loopne
das
push
pop
adc
cld
or
popa
cltd
lahf
mov
fnstenv
dec
sarl
pop
inc
testl
fwait
add
arpl
pop
pop
sub
stc
shrb
loope
pop
sbb
mov
xchg
nop
movsl
add
iret
hlt
sbb
dec
xchg
mov
in
jb
xor
mov
fcmovnu
add
mov
ljmp
xor
sub
push
xor
pop
icebp
mov
mov
mov
in
mov
jae
jbe
inc
push
mov
aaa
imul
cwtl
cmpsl
daa
insb
xchg
adc
fdiv
adc
mov
fs
xchg
pop
push
push
and
cmp
cmp
bound
cs
adc
idiv
dec
aad
fisubrl
je
add
cwtl
lret
pop
xor
repz
fdivrp
xchg
cwtl
mov
dec
jp
pop
sub
insb
stos
jnp
call
mov
imul
xor
xchg
xchg
mov
xchg
or
mov
pop
gs
xor
lods
repnz
push
inc
push
stc
call
setl
aas
es
scas
push
push
mov
sbb
fmuls
fists
sbb
sbb
push
jg
mov
imull
jbe
inc
xor
out
negb
imul
xor
or
mov
mov
les
sbb
bound
ljmp
cmovge
ljmp
adc
in
jp
stc
or
loopne
xor
jmp
mov
out
mov
outsl
push
ror
mov
sub
push
mov
cmp
adc
outsl
jg
dec
or
movl
lret
std
test
bound
shlb
sub
xchg
xlat
and
push
xor
add
add
clc
mov
add
lods
fildll
hlt
push
cmpb
push
cli
aad
pop
xor
cwtl
lcall
insl
addr16
test
popa
imul
mov
andl
pop
rcll
mov
sbb
testl
add
jno
adc
inc
and
cmp
sub
or
or
jecxz
dec
inc
sti
aaa
enter
jae
das
into
data16
inc
lret
inc
pop
adc
dec
xchg
xchg
mov
push
lods
or
imulb
sbb
adc
aas
les
jne
fsts
mov
push
sahf
jge
inc
jbe
loop
xor
lods
or
inc
fmul
ret
shll
outsb
or
outsl
push
imul
mov
cmp
inc
sub
jl
jns
fnstsw
les
lcall
sub
iret
adc
mov
push
mov
movsb
push
loop
mov
push
jo
xor
insl
insl
cmpsl
imul
sbb
push
dec
out
add
loopne
push
aad
iret
out
inc
adc
jnp
jbe
dec
cmp
inc
sbb
lahf
sti
pushf
fwait
loopne
and
rclb
mov
push
cli
daa
jo
out
push
mov
nop
pop
cli
dec
in
mov
push
mov
movsb
inc
je
cmpsl
sar
movsl
loop
and
insb
div
jno
test
shl
mov
push
in
clc
adc
mov
jns
add
and
aad
jbe
imul
jle
cmpsl
fstpl
out
inc
jge
push
pop
mov
cmpsl
xor
sub
loopew
pop
enter
cmp
and
mov
jnp
mov
fdivrl
add
mov
pop
les
mov
jg
test
out
xor
xor
xchg
xchg
jp
and
xchg
adc
arpl
mov
push
pop
inc
fwait
and
adc
jb
mov
mov
add
dec
sbbl
in
cmpl
sub
test
xchg
outsb
inc
push
xor
mov
xchg
popf
out
push
hlt
cld
push
push
add
inc
push
mov
and
jmp
lea
sar
push
and
mov
xchg
insl
ljmp
cmp
mov
and
mov
dec
fisubrs
pop
inc
adc
xchg
mov
ja
dec
je
into
dec
fldenv
mov
dec
cli
cmp
jo
leave
jnp
xor
or
or
mov
or
mov
cmpsl
sbb
in
lcall
add
push
add
sbb
popf
insl
out
push
int
jae
xlat
cld
dec
fildl
push
pop
enter
std
lret
fistl
add
ljmp
push
mov
add
mov
dec
push
cli
or
scas
pop
mov
jb
xchg
sub
lds
push
testl
xchg
outsl
ja
mov
xchg
sbb
or
sub
rclb
adc
inc
push
lea
or
iret
leave
and
xor
addr16
imul
lcall
lret
into
mov
imul
ss
mov
mov
test
dec
lds
fwait
jo
shll
add
jmp
stc
inc
stos
sbb
add
ja
enter
push
gs
push
test
scas
jae
ficoml
mov
je
test
test
sbb
imul
in
add
xlat
fisttps
jp
sbb
call
faddl
and
gs
fadd
test
jg
dec
in
fdivl
and
push
push
ret
cmc
or
sti
cmp
mov
ds
loope
mov
inc
cs
rorl
pop
or
ljmp
movsb
xchg
mov
jns
aaa
imul
jp
repnz
mov
loope
ljmp
xchg
cmpsb
push
mov
and
push
imul
mov
stos
adcb
mov
push
mov
stc
in
clc
sub
imul
adc
mov
stos
add
cmpb
ss
or
fst
popf
and
adc
dec
scas
pop
and
inc
cmpsb
dec
stos
xchg
and
add
lods
jecxz
xchg
add
fnstsw
push
pop
mov
add
lahf
les
xlat
xchg
and
insl
ja
mov
push
add
sbbl
dec
sub
stos
cmp
bound
jecxz
sub
out
add
or
daa
lret
into
dec
ret
out
fs
clc
addr16
cmpsb
and
out
and
mov
mov
pop
cmp
lret
inc
dec
daa
lret
and
push
jp
mov
mov
dec
mov
test
jl
imul
add
xchg
movsb
sahf
imul
fdivs
pop
fisubl
xchg
int3
jp
jmp
xchg
dec
sbb
in
jno
add
cmp
inc
or
jbe
ljmp
out
jg
je
int3
ss
jl
adc
xchg
jp
push
fscale
pop
in
dec
xor
add
rcl
fistl
inc
adc
xchg
push
fwait
adc
wrmsr
movb
ret
push
stos
dec
fdivrp
sti
pop
sbb
xchg
jp
lods
xchg
hlt
pop
adc
adc
adc
adc
adc
and
mov
lret
dec
inc
fwait
rol
inc
out
push
or
iret
jb
jae
test
mov
pusha
push
pop
mov
iret
test
jmp
mov
or
repz
repnz
mov
sub
clc
cmc
push
mov
xor
sbb
repz
popf
scas
pop
xchg
rorb
addr16
xchg
pop
pushf
hlt
cmp
push
mov
mov
xchg
jge
leave
ja
outsb
jmpw
lea
inc
jo
jl
imul
pop
scas
cmp
sub
jl
fcmovnb
test
sbb
cld
inc
lods
insl
imul
js
mov
sub
int
ss
test
das
aad
leave
insl
cmp
mov
jns
icebp
mov
icebp
inc
jp
xor
push
mov
push
xlat
jge
sbb
in
sarl
test
enter
es
in
imul
and
mov
dec
repnz
mov
fmull
and
lods
mov
xor
js
lea
mov
test
icebp
xor
cmp
shll
notl
inc
rcrb
adc
psadbw
andl
dec
push
mov
cmp
iret
rolb
inc
scas
stos
jecxz
lcall
cmp
enter
cmp
mov
cmp
outsl
movsb
or
mov
subl
adc
mov
jns
sbb
and
or
mov
pop
and
inc
jle
cltd
cmp
sbb
stos
mov
imul
lods
xor
lods
mov
lret
xlat
mov
mov
ds
adc
lods
dec
xchg
ljmp
push
or
mov
adc
fsub
pop
cmpb
pop
ja
lods
add
jle
cld
cltd
aaa
mov
push
xchg
adc
push
jp
rol
xor
aam
pop
jo
or
dec
pop
mov
sbb
psubw
outsl
pusha
mov
jb
ja
sub
mov
push
xor
rol
mov
fs
xor
std
dec
ja
dec
dec
addr16
aaa
insl
mov
add
add
push
mov
les
cmp
jge
rcrl
and
dec
pop
je
aaa
data16
out
add
push
notb
cld
inc
loop
pcmpgtb
pmulhw
aam
popf
mov
or
les
int3
fcoml
mov
inc
fnstcw
sbb
cmp
and
pusha
cli
adc
les
or
cmp
xchg
movsl
add
fildl
cli
jne
dec
xchg
popa
inc
push
repz
pusha
pusha
xlat
mov
jb
cmp
ja
cmp
out
sbb
mov
pop
shll
bound
jecxz
imul
movsl
mov
mov
pusha
push
xor
mov
int
cmpsb
dec
push
jmp
enter
sbb
movsl
and
icebp
hlt
cmc
adc
adc
xor
imulb
jo,pt
push
mov
into
mov
sbb
fstp
sub
push
jne
inc
sbb
adc
mov
jo
jb
mov
pop
dec
jl
jb
jle
dec
lret
cs
testb
fidivrl
lcall
std
jb
mov
cmp
test
jae
xchg
mov
nop
fdivs
adc
jp
xchg
leave
movsb
cmp
cmp
rorb
daa
mov
pushf
clc
repnz
xchg
mov
clc
loope
shr
jne
test
or
sbb
push
push
or
leave
xchg
int
ss
insl
arpl
and
xorl
and
mov
sahf
fdivrl
pop
mov
mov
and
jns
cmpsl
sub
dec
imul
test
inc
mov
stos
lock
add
xchg
push
add
adcb
mov
dec
pop
test
jg
lcall
loope
imul
daa
ja
out
inc
push
adc
and
mov
sub
jge
sbb
fnstsw
mov
pop
jbe
mov
cmc
mov
and
arpl
int3
mov
jg
push
add
xchg
mov
push
mov
orb
mov
mov
add
push
leave
push
cmp
cmp
pusha
jp
xchg
fcmovbe
xor
dec
rcl
nop
or
imul
sbb
out
ror
popf
cltd
add
data16
push
int3
mulb
push
and
rcrb
inc
sahf
mov
sub
pop
push
push
in
sub
call
orb
insb
stos
mov
loopne
ret
jle
cwtl
mov
fcomi
shlb
mov
dec
mulb
inc
sub
xchg
and
push
push
push
xlat
cmp
mov
sbb
xchg
movsl
mov
ja
pop
adc
and
fimull
mov
nop
ss
stos
or
cmp
jmp
aad
rolb
pop
sar
sarl
add
jmp
jecxz
lret
mov
pop
rclb
scas
ror
pusha
and
addr16
movl
mov
push
sbb
pop
dec
adc
stos
aam
mov
pop
push
mov
rolb
xchg
je
mov
cmc
xchg
xchg
out
jg
imul
gs
gs
arpl
in
bound
inc
lret
aam
test
mov
xchg
push
add
push
out
mov
repnz
adc
mov
mov
mov
stos
sbb
jo
xor
test
lahf
addb
or
cwtl
aam
jg
and
jp
jno
in
lahf
sub
or
lods
and
lcall
dec
es
mov
flds
mov
and
sarb
scas
fadd
push
jmp
popf
popf
pop
dec
dec
xchg
inc
repnz
out
push
mov
and
inc
ja
or
jne
lret
sub
or
xchg
fcomip
mov
pop
push
cmc
jp
fisubrl
mov
sti
cwtl
test
out
loopne
fnstcw
dec
rorb
add
xchg
clc
add
mov
mov
push
les
xor
ds
push
shrb
test
mov
popf
push
aam
inc
xor
add
out
cmp
out
das
faddl
push
int3
and
sahf
xchg
roll
ljmp
or
inc
mov
or
pusha
mov
mov
test
data16
dec
push
push
inc
pop
cmp
ret
mov
mov
jg
das
aaa
inc
fldz
ds
push
in
add
sbb
movsl
mov
push
bound
insb
add
jg
ds
test
mov
sarl
push
cld
adcb
mov
iret
rorl
or
sub
mov
scas
inc
test
outsb
je
loopne
aad
push
sub
sub
daa
mov
or
mov
xor
or
sbb
mov
lods
stc
mov
inc
clc
inc
inc
enter
sbb
or
sbb
push
cmp
pop
pop
inc
and
fstps
frstor
mov
xchg
xlat
push
repz
stc
not
cmpsb
imul
fdivl
jo
sub
mov
add
sub
inc
cld
cmpsb
push
pop
sub
outsb
scas
lods
push
sbb
repnz
leave
imul
inc
addr16
sahf
xchg
sbb
sti
mov
pusha
xor
xorb
outsl
mov
pop
mov
push
dec
pushf
sub
jmp
das
subb
fisubs
xchg
mov
jg
push
sub
aas
sarb
jnp
test
push
inc
mov
add
xlat
jmp
je
fisttps
das
jne
das
and
stos
in
cmp
mov
adc
dec
addl
mov
movsb
rorb
test
hlt
pop
jnp
inc
daa
add
shl
fsts
xchg
xchg
add
sbb
mov
call
dec
add
shrl
xchg
jbe
pop
sub
sbb
sub
subb
add
jmp
cmp
scas
sbb
les
sbb
xor
negl
dec
mov
jmp
cmp
jmp
add
push
adc
cld
in
sbb
xchg
inc
xor
outsl
fdivrl
jo
loopne
cwtl
fmuls
xor
movl
pop
dec
xlat
ret
mov
sbbb
cmpsl
xor
fsub
fildll
cld
add
scas
push
xchg
dec
and
scas
lods
or
mov
loop
jmp
dec
scas
jnp
imul
mov
enter
cmpsl
mov
mov
mov
cmc
xchg
cmp
inc
cs
push
lahf
pop
repnz
sbbl
test
repz
add
and
insl
mov
inc
and
in
fistpl
test
push
sub
test
rclb
mov
push
sbb
mov
loop
sub
xchg
loop
sbb
push
pop
call
jo
mov
cs
mov
insl
mov
adc
pop
jmp
arpl
jmp
test
sub
test
and
xchg
addr16
push
leave
sub
cmc
jae
mov
mov
icebp
inc
inc
ret
adc
stos
mov
mov
cmc
hlt
push
outsb
mov
and
movsb
addr16
repnz
push
out
mov
pushf
hlt
sub
sub
mov
mov
lock
inc
cmc
push
xor
push
adc
icebp
test
orl
cli
popa
es
cmpsb
mov
fisubs
test
iret
sbb
in
inc
sar
jmp
mov
bound
sbb
or
xchg
mov
jnp
sbb
les
lods
clc
sbb
leave
lahf
daa
nop
xchg
stos
and
or
imul
loopne
or
mov
outsl
inc
movb
dec
mov
push
lahf
xlat
mov
and
xchg
jo
adc
push
imul
sub
pop
mov
or
and
add
jecxz
fistpl
cwtl
jne
cmc
mov
stos
sbb
push
adc
push
inc
arpl
pop
mov
shl
notl
sbb
mov
daa
mov
and
pop
cltd
jmp
outsb
aaa
outsl
mov
adc
inc
add
rcr
sbb
fisttpl
xchg
call
addr16
cwtl
jne
pop
adc
inc
mov
in
ret
je
cmp
xchg
das
ljmp
imulb
xchg
iret
ficompl
and
mov
adcl
mov
mov
psubsb
in
push
adc
xchg
vandps
js
push
xchg
inc
cmpl
scas
call
mov
inc
mov
xchg
or
adc
mov
dec
popa
jb
mov
xor
pop
in
fwait
push
add
push
sarb
sti
addb
sahf
cmp
mov
cmpsb
adc
push
flds
xor
ret
mov
pop
subb
push
pop
int3
out
inc
dec
lahf
jp
fs
loopne
pop
dec
pop
ret
add
das
addl
mov
in
mov
push
xchg
jbe
adc
pop
aaa
mov
out
and
cmpsl
adcb
and
in
aas
add
push
jb
push
xor
xchg
and
mov
or
or
shrl
clc
push
xchg
mov
les
jecxz
push
pop
mov
jo
push
test
inc
lret
test
leave
lahf
mov
icebp
mov
test
in
ds
cmp
pop
inc
or
sub
data16
lea
enter
push
ljmp
loop
add
inc
cmp
jecxz
call
mov
push
push
pop
insl
repz
leave
add
test
scas
mov
sbb
mov
xor
fidivrs
mov
nop
jp
mov
adc
jb
jns
mov
cmp
fcmove
and
outsb
shll
mulb
mov
inc
mov
inc
mov
push
stos
lret
jp
das
xor
mov
pop
inc
sahf
push
paddusw
sti
repnz
mov
ficoms
or
test
or
xchg
sbbb
pop
mov
sub
lcall
shlb
lods
popa
mov
mov
sbb
cmp
and
div
into
sbb
xor
cmp
out
flds
mov
ret
inc
add
sub
pop
cmpsl
sahf
jle
xor
or
insb
pandn
push
subl
loope
xor
scas
inc
inc
and
in
std
ja
mov
mov
push
sbb
mov
insl
stos
les
jo
lret
call
outsb
js
imul
cmpsb
mov
imul
jne
jmp
dec
int3
loope
pop
rcl
push
add
add
cwtl
jmp
insl
jo
and
les
mov
jge
mov
testl
push
nop
fwait
into
and
out
sbb
or
ret
sub
clc
mov
adc
sub
xlat
push
ljmp
dec
inc
adc
mov
mov
fwait
xor
loope
ja
and
sbb
stos
sbb
loopne
test
add
push
outsb
mov
jne
sbb
hlt
xchg
testb
push
jle
xor
mov
test
jno
sarl
inc
dec
jne
push
jmp
cmpsb
jae
xchg
ret
xor
lret
hlt
cmp
inc
pop
cli
jg
cs
sar
inc
push
in
in
std
aas
fisubrl
push
mov
test
lds
mov
dec
popf
fcmovnb
lahf
mov
lahf
in
ja
sub
fidivrl
aam
mov
stos
pop
in
push
lret
jno
sbb
mov
les
push
test
mov
jecxz
cmp
gs
mov
and
divb
adc
data16
in
jb
ljmp
sbbl
sbb
mov
int3
push
xor
in
mov
inc
aaa
or
test
dec
jecxz
push
mov
mov
leave
imul
idiv
sbb
inc
push
pop
mov
sub
cs
xchg
loopne
int3
pushf
pop
xor
or
in
jle
mov
out
mov
jbe
scas
pop
movsl
sbb
test
xor
int3
jbe
mov
mov
out
cmp
mov
sbb
xchg
fidivl
mov
sub
sub
cmp
ljmp
fmuls
mov
aam
xor
adc
cmp
movsl
daa
xchg
xchg
jb
inc
push
xchg
push
icebp
adcl
xor
fimuls
nop
and
imulb
sbb
cltd
push
sub
pmaxsw
cmp
stc
pop
rorb
xor
xchg
and
jmp
push
jecxz
xchg
iret
mov
jl
roll
mov
outsl
shll
fisubs
or
popf
mov
inc
jbe
mov
push
fisubl
dec
leave
ror
int
lock
in
mov
add
cmp
popa
ret
stos
jmp
in
sar
lods
inc
cmpsb
insl
stc
mov
mov
jno
jmp
int
sub
int
and
push
lds
lcall
jl
leave
dec
cld
cmp
jb
je
outsl
and
mov
or
cmp
xor
andb
and
jg
push
jns
pop
movsl
ss
fldenv
bnd
push
mov
imul
mov
rorl
xlat
xlat
lret
mov
enter
imul
fwait
loop
popa
mov
sbb
enter
xlat
sahf
cli
push
mov
push
dec
pop
jo
sbb
mov
leave
lahf
sub
lahf
inc
lods
je
lock
popa
xchg
stos
mov
subb
hlt
jmp
out
sbb
pop
loop
cmc
imul
cld
mov
ds
dec
addr16
shll
xlat
mov
pop
sbb
ret
dec
sub
lods
mov
mov
jg
add
cs
sub
movsl
xchg
mov
inc
mov
icebp
xchg
dec
push
and
xor
pop
add
xchg
jp
push
cmp
imul
outsl
pushf
xchg
mov
adc
xchg
leave
xor
pop
sub
call
sbb
lret
lods
push
cmpsl
enter
loopne
mov
or
cwtl
jg
cld
scas
bsf
and
negb
ss
dec
leave
data16
iret
pushf
fcomi
into
jge
jne
dec
out
cli
inc
iret
jmp
sbb
ja
xor
lea
dec
xor
xor
inc
mov
cli
inc
andb
ds
sbb
add
lret
xor
inc
push
xor
or
push
xor
mov
or
imul
out
call
xor
sbb
pop
popa
dec
sti
inc
xchg
fs
mov
push
mov
mov
push
mov
push
inc
aam
adc
out
push
jb
arpl
cmp
movsb
adc
adc
pop
outsl
mov
adc
in
into
pop
dec
xchg
dec
repz
jg
jmp
mov
aad
inc
inc
or
mov
add
pop
out
out
lods
mov
inc
lock
xor
cmc
dec
fs
or
psubb
mov
lods
lods
pushf
lret
in
jmp
adc
xor
cwtl
leave
ss
pop
xchg
xchg
mov
ds
je
std
cmp
mov
adc
ficoml
cmc
cmp
in
inc
sahf
fwait
lret
das
pop
cwtl
je
xor
mov
cmpsb
sbb
jg
inc
push
pop
mov
cmp
push
gs
mov
xor
xor
js
mov
iret
out
dec
mov
lea
outsl
iret
fistps
das
js
gs
mov
jle
shll
sbb
jg
repz
xor
sti
adc
fistl
dec
inc
xchg
xchg
dec
out
sbb
rcrl
std
xchg
imul
in
sbb
jo
pop
pop
stos
lods
sbb
dec
pop
cmp
jl
adc
arpl
or
lock
cmp
mov
repnz
mov
adc
imul
leave
mov
les
cmc
cs
sti
addr16
push
sub
adc
xchg
jns
sahf
cmpsl
hlt
nop
mov
cmc
mov
out
and
mov
sub
xchg
jge
ljmp
rclb
cmp
and
das
xchg
sub
inc
push
in
negb
push
fdivrp
push
aam
fstpt
add
xor
outsl
sub
mov
or
mov
or
pop
ss
and
stos
scas
sub
cmp
pop
jecxz
cli
nop
in
insl
xor
push
test
out
or
mov
push
shr
fsubr
out
add
xor
mov
xor
lea
lahf
mov
mov
notrack
stc
and
pop
sub
jo
subl
es
push
push
sbb
push
mov
lds
xor
xor
cmc
push
jns
mov
mov
adc
das
cmp
add
fisttpll
cs
js
dec
pop
negl
push
and
jo
push
sub
mov
jno
xor
pop
loope
sbb
stc
into
or
sub
mov
xchg
jb
xor
pop
push
xchg
xchg
lods
fistpll
pusha
aas
or
mov
ljmp
push
cmp
out
outsb
ds
and
jnp
or
jp
push
aad
bswap
ljmp
inc
dec
inc
dec
pop
pop
das
icebp
loopne
aam
xchg
inc
movl
les
popf
and
push
sti
xchg
xor
popa
outsb
movhps
mov
inc
adc
addr16
mov
adc
scas
lods
push
cli
add
insl
and
shll
sub
and
movsl
js
cli
mov
add
cmp
push
mov
push
stos
in
pop
sub
loope
lds
ret
mov
in
out
insl
xchg
int3
fnstcw
movl
sbb
in
movsb
subb
icebp
nop
dec
mov
into
jge
leave
xchg
xchg
sti
xchg
in
testb
lods
fcomp
aaa
rcrb
push
jo
pop
fdiv
sbb
gs
test
mov
push
adc
enter
or
or
loopne
fs
ja
loope
add
in
movsb
cwtl
or
push
sarl
ss
sbb
sbb
sbb
cvttps2pi
adc
in
nop
shlb
or
jae
push
xor
hlt
movsb
fnstsw
xchg
mov
aad
jmp
push
nop
xchg
pusha
xor
push
xchg
sub
cltd
and
movsb
pushw
mov
jno
adc
jecxz
in
push
dec
pop
ss
xor
or
lods
cmpl
or
outsb
or
pushf
loope
and
loope
push
push
push
repnz
cmpsl
daa
out
xchg
push
push
outsl
mov
fstp
cmp
cmpsb
decl
pause
sub
mov
pop
xorl
mov
aam
inc
daa
shlb
test
push
jb
hlt
cli
cmpl
jecxz
clc
fwait
dec
mov
aaa
imul
pop
lcall
dec
dec
push
push
fdivr
xchg
int
je
sub
adc
in
rcll
mov
push
std
lcall
cmp
jb
roll
inc
outsl
adc
dec
cmc
add
out
xlat
outsb
jge
xor
pop
je
test
mov
stc
insb
mov
jno
sbb
aad
push
dec
out
jmp
adc
pusha
pop
jmp
dec
in
les
adc
imul
invd
or
xor
lods
adc
fldt
call
mov
sbb
pop
shrb
adc
shlb
xor
sub
jmp
ret
jmp
fs
push
into
sub
push
into
cmpl
jbe
or
xor
pushf
out
ja
pop
pop
or
pop
pusha
mov
mov
dec
and
rcr
push
shrl
rclb
enter
xchg
pop
adc
adc
and
xchg
loopne
fists
inc
iret
mov
int
cmc
mov
js
sub
ljmp
mov
insl
mov
cld
ljmp
add
push
imul
inc
out
arpl
es
jle
leave
xor
sbb
out
or
lock
sbb
cmp
mov
push
push
mov
cwtl
mov
inc
inc
movsb
sbb
fistps
sahf
jbe
add
mov
movsl
xor
mov
dec
shl
in
adc
or
add
loope
xchg
pop
es
dec
fdivl
in
dec
je,pt
addr16
sbb
fildl
ja
mov
add
aaa
add
lss
orb
jns
dec
dec
roll
mov
jae
andl
ds
lret
fdivp
enter
push
dec
cli
cwtl
jbe
fldl
jb
cmp
out
add
shrb
jmp
sarb
fcmovnu
push
enter
out
xlat
bound
addr16
or
xor
arpl
popf
inc
sbb
in
pop
sub
mov
xchg
cmp
gs
add
or
xor
fsubl
and
push
jo
adc
mov
sub
jnp
out
mov
popa
repz
iret
jp
movsb
pop
movsb
mov
pop
dec
nop
test
xor
mov
fsubp
adc
jno
add
jb
adc
adc
inc
add
or
or
and
ds
inc
push
push
fdivrl
cmc
mov
fs
movsl
out
xor
xor
test
cltd
or
jp
je
in
into
dec
out
or
fcmovne
mov
outsl
pop
subb
inc
dec
lds
pusha
jo
arpl
loopne
hlt
movsb
mov
int3
jo
shlb
insl
insb
push
mov
pop
push
aad
push
popa
mov
pop
push
jae
notl
shl
fmull
adc
xchg
adcb
pop
mov
push
lods
push
add
sub
test
pop
sub
add
cmp
cmp
cmc
push
pop
adc
sbb
inc
movsb
shl
jg
mov
dec
dec
scas
cmp
push
outsl
jg
pop
fmul
das
adc
data16
stos
jmp
jg
and
cmp
mov
mov
mov
pop
int3
xor
mov
into
movsb
xor
inc
jne
push
sub
push
lcall
push
nop
inc
pop
lret
orl
imul
daa
mov
leave
dec
push
fwait
mov
inc
into
or
cmp
add
sbb
movsl
mov
loop
loope
sti
popa
loope
push
rcl
push
lret
sbb
cltd
insb
gs
jp
dec
pop
pusha
push
leave
leave
je
ljmp
add
cmpsb
cli
pop
outsl
mov
dec
orl
lds
cmc
cmp
sub
inc
or
inc
je
and
and
cmpsb
jle
push
cmp
mov
out
jo
adc
sbbl
and
sbbb
xor
jg
popa
repz
mov
push
andl
notb
jmp
jecxz
popf
jp
adc
push
in
mov
mov
dec
scas
sbb
and
daa
mov
mov
leave
xor
es
and
jge
lea
xchg
je
mov
data16
insb
insb
cld
sarl
inc
sub
jo
and
and
pushf
imul
scas
mov
dec
sbb
insl
mov
mov
mov
shrb
dec
jecxz
addr16
scas
out
loopne
dec
cmp
gs
sbb
adc
movsl
push
rorl
pushf
sub
popa
ds
lcall
out
adc
pop
loopne
in
xbegin
mov
or
mov
adc
std
stos
mull
sub
mov
inc
and
dec
lahf
xchg
sbb
setne
int3
xorb
sub
mov
or
or
mov
lds
add
fisttpll
out
les
out
mov
push
lea
cmpsb
rcrl
pusha
sbb
push
jae
xchg
lcall
xor
mov
pop
sahf
jb
inc
mov
leave
mov
mov
push
adc
cwtl
pop
pop
clc
jmp
icebp
loopne
cmpsb
pushf
repnz
push
or
mov
mov
nop
xor
mov
cmpsl
inc
test
inc
mov
ss
mov
nop
push
mov
inc
cmpsl
dec
jbe
cmp
or
cmp
mov
or
rcll
out
pop
adc
push
shr
in
or
cmc
int3
xchg
xchg
inc
pop
pop
cld
push
and
xchg
sub
incb
dec
inc
xchg
imul
gs
xchg
in
jmp
sub
out
add
sub
adc
ljmp
sub
daa
lahf
adc
mov
lock
push
mov
jle
rolb
icebp
iret
loop
mov
xor
pop
pop
xchg
dec
push
test
and
addl
cli
movsl
dec
mov
popl
das
cmpsl
xchg
jae
leave
dec
adc
mov
out
mov
cwtl
pop
outsl
fwait
aaa
add
or
adc
mov
inc
sub
rol
rcl
outsb
pop
mov
sub
add
decb
jb
cmp
into
and
mov
mov
mov
data16
dec
pop
stc
adc
movsl
mov
sbb
mov
cwtl
cli
rcr
pop
push
mov
xchg
mov
inc
jae
mov
roll
cmpb
repz
cmp
jl
sarl
cs
push
ja
sti
push
mov
xchg
xor
sub
adc
fwait
adc
arpl
ds
js
orl
sbb
sar
mov
mov
add
or
iret
mov
push
sub
fwait
push
stos
pminsw
out
in
mov
nop
mov
sbb
mov
popa
inc
rcr
lods
loop
add
test
scas
lret
dec
xor
lret
pusha
repnz
pop
loopne
stos
leave
outsb
mov
mulb
clc
sub
xchg
add
rorb
push
xchg
test
movsl
sahf
inc
or
fisttps
lock
xchg
mov
jo
xor
pop
mov
mov
test
scas
cmp
mov
and
xchg
les
jae
jbe
lds
dec
jp
bound
negl
pusha
dec
sub
sub
js
psrld
adc
jecxz
je
xchg
push
mov
rolb
dec
popf
repz
mov
int3
clc
mov
push
xchg
inc
pop
sub
test
push
sbb
jbe
popf
movsl
popa
push
aam
mov
leave
stos
xor
test
leave
lods
das
push
adc
bound
pop
sbb
mov
pop
dec
xchg
pop
cmpsl
jecxz
push
hlt
test
jmp
mov
dec
es
inc
ficoms
lret
pop
jae
leave
mull
mov
jmp
cmp
or
push
nop
cmp
mov
push
mov
ficomps
jecxz
dec
popf
pop
mov
ljmp
mov
push
popf
test
in
sub
stos
and
stos
call
jo
gs
or
lea
jp
mov
dec
xchg
xor
inc
pop
jmp
inc
jecxz
or
sbb
es
adc
adc
int
jl
mov
adc
imul
or
test
aad
scas
pop
test
insb
ret
jne
cmc
mov
subb
outsl
sbb
xchg
mov
push
mov
push
inc
adc
cmpsb
adc
outsl
aam
fnstcw
sub
dec
popf
andl
dec
cmp
push
jno
xchg
pop
ljmp
dec
xor
mov
aad
jae
aad
inc
jmp
cld
jne
inc
jg
xchg
mov
loope
addr16
mov
sub
leave
outsb
out
repz
cltd
gs
popf
scas
rcr
call
aas
lock
adcb
and
into
cltd
loope
das
add
fistpll
push
add
cld
pop
xchg
pop
inc
xchg
mov
mov
push
and
mov
test
popf
jle
bound
cld
aam
bound
jle
mov
sbb
pop
ss
aaa
jbe
sub
pop
shl
mov
loop
push
jbe
add
lea
test
lcall
movsb
jns
test
adc
xor
xchg
orl
icebp
js
mov
jg
incb
sub
xor
mov
pop
int3
adc
add
inc
and
push
or
icebp
imull
mov
adc
hlt
push
ds
sub
xchg
mov
fs
mov
add
loop
test
dec
cmp
arpl
adc
test
and
inc
push
outsl
das
pop
push
and
dec
mov
push
inc
adc
shll
push
adc
adc
push
jne
mov
xlat
jg
cmp
jns
test
and
adc
xor
iret
add
xchg
mov
xchg
insb
mov
sarb
in
pop
mov
inc
mov
jge
inc
push
nop
int
add
jecxz
mov
jg
jp
imulb
fldcw
sub
pop
dec
mov
lods
add
mov
sbb
cmp
jnp
add
pushf
int
xchg
adc
jno
add
in
inc
movb
cmpsb
xchg
out
fsubp
jnp
sbb
cs
stc
out
mov
fsts
mov
daa
test
mov
sub
movsl
fucomip
adcl
and
in
cmp
add
cli
adc
faddl
inc
aas
test
call
icebp
xor
loop
mov
sbb
in
pusha
out
add
xor
aad
shlb
jns
or
add
out
inc
fisttps
or
and
jns
push
dec
dec
ljmp
aas
imull
data16
in
mov
mov
movsl
mov
dec
data16
sbb
adc
jno
popa
mov
mov
push
pop
pop
stos
dec
scas
pop
cmp
mov
rcrb
adcl
mov
ja
jbe
sbb
sub
imul
jmp
lret
adcb
sbb
fstpt
push
es
xor
mov
pop
test
lcall
jp,pt
cmc
sub
mov
sub
mov
jne
pushf
and
in
or
in
insl
out
push
ret
es
jp
ja
dec
xchg
decb
mov
lahf
sbb
pop
je
cmp
add
lods
std
pusha
repz
fnstenv
dec
test
aam
jb
ljmp
shrb
mov
out
insb
nop
push
xchg
xor
inc
arpl
stos
push
clc
fld
jb
mov
not
ljmp
fcoml
mov
push
pusha
push
and
lret
cwtl
push
fcomps
mov
fstpt
inc
aad
imul
mov
nop
xor
pop
fisttpll
je
mov
jbe
xchg
ret
pop
lcall
inc
sub
sbb
xchg
sarb
aas
cmp
scas
sub
stos
xor
sub
xchg
mov
and
adc
mov
and
xchg
cmc
adcl
dec
xlat
loope
inc
nop
fidivrs
sub
dec
out
and
pop
and
and
ret
adc
mov
xchg
addr16
out
out
xchg
mov
fstpl
out
jl
jnp
out
jl
jo
aas
xchg
cltd
jae
pop
and
bnd
cmp
xchg
jnp
adc
arpl
pop
pop
jg
pop
dec
push
mov
mov
aas
inc
ret
adc
sub
add
into
sub
cmp
add
xchg
mov
pushf
inc
mov
inc
outsb
pop
fistl
push
aaa
push
cmpsb
mov
test
popf
es
dec
sub
imul
test
xchg
out
test
mov
bound
fs
add
call
shlb
or
andb
add
addl
outsl
pushf
xchg
pusha
push
jge
mov
adc
ficompl
or
icebp
lahf
lods
addl
in
sbb
or
cli
jno
push
pop
add
aad
jo
icebp
mov
lahf
clc
dec
fs
or
jnp
mov
inc
sub
jae
mov
push
sar
test
mov
iret
and
aas
mov
mov
xor
inc
popf
imul
clc
aaa
cmpsb
pop
cmpsl
test
imulb
adc
pop
mov
adc
sbb
rclb
cmp
les
mov
ja
mov
jo
mov
and
cli
and
push
mov
fcmovbe
repnz
lea
add
pop
add
stos
mov
add
fisubrs
lahf
push
enter
out
push
mov
mov
repz
and
stc
syscall
sbb
cmp
xchg
outsb
push
mov
push
mov
jecxz
scas
jbe
sub
mov
mov
mov
fdivrl
orb
ds
dec
nop
iret
xor
pop
es
js
les
mov
pop
movups
xchg
ja
jae
or
or
jle
hlt
fwait
sbb
cs
add
aam
popa
sub
js
out
pusha
test
mov
sbb
andl
push
or
cmpsl
lea
mov
dec
imul
mov
mov
jns
xor
out
push
sub
lock
dec
out
dec
dec
hlt
test
fists
mov
mov
mov
pop
mov
call
icebp
jae
push
inc
jne
push
and
fldl
das
dec
jmp
pop
das
ret
rcll
adc
xchg
xor
scas
stos
mov
jle
mov
cmp
sub
cli
jmp
mov
bound
pop
mov
fsubrs
ret
inc
dec
sahf
sbb
jle
xchg
adc
lods
insb
mov
xchg
add
pop
adcb
lret
add
ret
addl
mov
xorb
cmp
leave
sbb
das
pop
hlt
lahf
in
sbb
pop
mov
xor
arpl
mov
lea
mov
dec
mov
ljmp
lcall
xor
mov
mov
repz
inc
pop
cmp
icebp
push
xchg
push
jnp
pop
sbb
cmp
jnp
out
cmpsb
dec
in
in
ret
in
rol
mov
sbb
dec
loop
mov
sahf
xchg
xor
pop
mov
mov
xchg
mov
mov
ljmp
push
push
ds
pop
out
addr16
xchg
sbb
add
call
loopne
movsb
dec
aas
lahf
sbb
push
sub
xchg
in
inc
dec
mov
and
pop
dec
push
out
inc
cmp
push
cs
push
and
adc
jp
add
enter
jge
pop
shr
jo
jo
or
push
push
out
adc
leave
pop
sbb
lods
es
aad
pop
push
add
sub
shl
outsb
or
xchg
neg
mov
sub
xchg
movsl
xchg
ljmp
std
pushf
lods
jmp
and
or
ret
jns
clc
cmp
sbb
popf
add
out
mov
cmp
xchg
addr16
jns
cmc
sti
nop
rcll
stos
mov
lret
xlat
out
pop
sti
repnz
or
jb,pn
popa
repz
ja
jg
jbe
jbe
rcl
xchg
adc
sub
pop
or
mov
lcall
nop
hlt
test
lock
stos
mov
cmc
sub
jl
cs
in
jnp
in
sub
mov
fwait
outsb
mov
fs
dec
fwait
stos
daa
push
imul
pop
inc
test
dec
outsl
rclb
push
ja
leave
repnz
cmp
xor
in
out
movsb
mov
mov
jmp
cmc
imul
mov
push
movsb
mov
icebp
adc
add
cld
inc
cltd
mov
push
xlat
repz
int3
jl
ret
out
cli
adc
sub
dec
mov
data16
mov
push
xlat
pusha
outsl
test
ret
xor
xor
testb
sbb
jne
jge
mov
pop
loope
rclb
dec
adc
into
divps
stc
push
push
push
mov
movsb
mov
dec
lds
iret
test
cmc
in
sbb
push
ret
inc
out
pop
and
in
sub
add
cli
shll
dec
shll
mulb
aas
subps
test
xor
sbb
in
add
mov
sub
in
jnp
repz
sarb
sub
popa
and
scas
fistl
je
dec
mov
ret
in
jmp
sub
and
pushl
adc
or
cmp
aas
cltd
jecxz
push
jl
pop
push
fdivl
fisubl
sbb
mov
jge
push
xlat
mov
cltd
push
roll
cmc
jae
pop
repz
gs
fisttpll
loopne
aam
pop
sbb
cmp
in
arpl
addb
je
dec
cmp
push
cmp
push
mov
push
inc
jns
cs
popa
sbb
pop
sub
movl
push
ret
and
nop
in
mov
getsec
pop
mov
jmp
jne
in
push
mov
mov
jp
loop
pop
shlb
test
fwait
xchg
mov
andb
in
xchg
imulb
in
aad
sbb
pusha
jne
out
or
jae
clc
repnz
sbb
addl
mov
incb
jle
cmpsb
fnstcw
push
add
int
int3
and
aaa
cmp
add
xchg
test
dec
mov
stc
ret
xchg
mov
cmp
icebp
movsl
data16
mov
mov
mov
lcall
cmp
ret
jno
mov
outsl
mov
mov
out
ja
data16
popa
pop
push
cli
sub
cld
ds
mov
shr
ja
pop
xchg
push
lock
mov
movsb
push
shufps
out
jge
loopne
cmp
faddl
or
into
loope
and
test
hlt
mov
mov
cmpsb
jbe
jne
aam
test
add
test
jae
jg
in
mov
inc
outsl
sbb
cmp
push
dec
mov
add
cmpb
bound
jns
mov
cmp
lret
imul
inc
loopne
cli
cmp
xor
add
mov
cmpsl
in
test
add
dec
cmp
inc
push
inc
mov
sub
in
mov
and
nop
testl
pop
push
clc
popf
fbld
adc
xchg
sar
dec
cltd
sbb
ljmp
fucomi
jg
rorl
lods
mov
fs
fcmovnb
mov
push
jnp
sub
push
inc
sub
lret
testl
adc
and
lock
push
idivl
shll
mov
imul
orb
cmp
sbb
cld
xchg
push
xor
mov
out
stos
push
xlat
lods
stc
sbb
insl
push
ja
aas
and
pop
push
cmp
andb
mov
and
aam
fcmovnb
rorb
inc
leave
push
std
stos
outsl
mov
insl
ds
and
lock
adc
aas
cwtl
or
icebp
pop
mov
mov
xchg
sti
jae
fdivs
or
mov
fcompl
jns
add
mov
mov
dec
and
mov
arpl
in
pop
int3
jle
mov
test
lcall
pop
sbb
dec
stos
mov
cld
fsubp
insl
fwait
iret
aas
sub
dec
icebp
sub
loopne
int
mov
ror
loop
pushf
sbb
push
shl
bnd
push
aam
adc
add
mov
push
lcall
jp
pop
cmp
iret
out
mov
jnp
adc
fsubp
popa
or
pop
rclb
decl
or
rclb
nop
jge
and
lcall
or
test
jb
pop
mov
mov
repnz
insl
adc
sub
or
mov
sub
xlat
add
test
pop
xchg
in
adc
xor
jmp
push
jg
and
lods
pop
stc
and
js
jecxz
mov
rcrl
rclb
and
flds
inc
jbe
xor
sub
cmp
int3
jnp
push
out
jno
mov
or
shl
mov
jmp
mov
iret
pop
fdivs
ret
pop
cmpsl
daa
imul
and
out
repz
xor
add
loop
pop
sbb
push
sub
imul
pop
dec
adc
stos
loop
jno
push
pushf
and
pop
sahf
dec
scas
addl
push
push
mov
clc
inc
push
gs
aas
xchg
push
xlat
pop
jmp
pop
mov
mov
repnz
dec
int
sbb
lods
push
inc
ljmp
sarb
loope
scas
mov
cli
test
imul
inc
mov
mov
out
dec
dec
pop
jae
pop
adc
ret
test
stc
fisubrl
shr
cltd
lret
dec
add
fisubs
arpl
in
sub
dec
push
mov
incl
xchg
mov
ja
fst
rcl
popf
mov
pop
push
shlb
daa
gs
in
mov
cwtl
or
cmpsb
xor
pop
inc
xchg
push
xor
xchg
jmp
lret
dec
or
dec
inc
loope
mov
mov
mov
sahf
push
or
cmp
dec
mov
inc
sub
xor
ret
or
dec
or
shrb
pop
or
push
movsb
xor
pop
inc
daa
mov
jo
push
pusha
push
movsb
jg
fildl
dec
pop
popf
add
jmp
jge
mov
or
dec
lcall
cmpsl
idivl
filds
das
adc
outsb
cmp
and
dec
pushl
adc
push
inc
mov
aad
mov
leave
pop
jns
mov
inc
jl
cmpsb
std
cwtl
nop
int3
xchg
xor
push
mov
in
push
ja
imul
xchg
fcomip
cltd
xchg
jnp
or
adc
lret
jecxz
aad
cld
xlat
mov
cmp
ljmp
movsl
lea
sub
sarb
xchg
imul
addr16
sbb
dec
rcll
clc
imul
xchg
faddl
scas
inc
mov
lret
mov
mov
insb
hlt
jno
jno
jnp
enter
sub
or
dec
sbb
imul
out
or
mov
cs
cmp
or
mov
cli
cmpsb
fisttpll
inc
subl
push
inc
les
daa
pop
push
and
jb
out
lcall
adcb
xorb
mov
mov
add
fxch
xor
sbb
arpl
mov
and
mov
adc
pop
dec
les
cmc
imul
push
add
push
lret
sub
inc
push
mov
cmpsb
xchg
hlt
mov
hlt
xchg
dec
adc
push
xchg
and
rsqrtps
lods
inc
mov
pushf
je
mov
sub
repnz
inc
sbb
dec
inc
cmc
xchg
and
outsl
sbb
cwtl
xchg
ja
scas
xor
mov
and
pop
divb
xor
insl
in
test
mov
jae
data16
loop
mov
icebp
in
sub
pusha
xchg
add
dec
stc
repnz
lock
mov
cmp
xchg
mov
lock
inc
pop
jne
jg
sub
jno
push
cltd
and
nop
or
or
pop
repnz
jb
dec
cmpsl
sti
adc
mov
xchg
mov
sub
ljmp
pusha
jnp
cmp
es
sbb
jmp
mov
dec
push
fwait
xchg
pushf
lods
push
mov
and
bound
cmc
push
scas
aam
shrl
add
out
sbb
int
hlt
inc
jle
gs
je
or
jecxz
push
mov
aas
pop
sar
out
adc
mov
test
iret
shl
rcl
cld
and
mov
data16
cmp
push
es
into
and
mov
jae
dec
sahf
cmpsb
rcrb
sbb
cli
pop
cwtl
mov
sbb
mov
js
cmp
lret
imul
jmp
pop
data16
mov
fmull
leave
andb
and
push
lcall
call
xor
xchg
pop
nop
data16
mov
xchg
mov
pop
sbb
or
mov
cwtl
repnz
or
ret
cltd
test
pop
dec
or
shrl
int3
xor
fdivs
lahf
inc
test
or
mov
mov
out
mov
jle
das
xchg
pop
pusha
mov
sbb
movsb
mov
pop
xor
out
filds
inc
pop
pop
mov
push
jb
sub
mov
incl
data16
lret
pop
ja
aam
xchg
idivl
shrb
fs
scas
fstps
aaa
inc
xchg
push
js
push
lock
mov
push
loope
imul
or
hlt
cmpsb
push
and
loope
aad
and
daa
dec
inc
push
nop
inc
sbb
pushf
in
xchg
and
jecxz
enter
inc
lahf
mov
pop
inc
xchg
movsl
xchg
mov
std
call
xor
or
push
inc
jnp
arpl
xchg
scas
pop
rorl
mov
dec
test
movsb
jge
imul
pop
into
sub
xchg
mov
pop
shlb
fs
je
cmp
into
lret
mov
ret
lcall
fstpl
fsubrs
call
adc
iret
pop
or
mov
push
adc
and
in
inc
add
int3
and
movsl
adc
out
pushf
or
mov
frstor
xor
cld
mov
nop
xchg
stc
es
xchg
lds
push
das
hlt
mov
outsl
jp
fldl
add
ljmp
and
stos
add
inc
xor
mov
stc
or
xchg
jmp
xor
clc
cmp
xor
add
ljmp
push
push
sub
fisttps
sbb
mov
inc
xlat
mov
aaa
aas
jmp
adc
je
inc
push
dec
cmp
cmp
cwtl
addr16
jg
clc
mov
mov
pop
jecxz
aad
mov
das
cmp
popf
xor
xor
mov
mov
jle
outsb
enter
jg
ja
xlat
cmp
clc
and
xor
cmp
cmp
scas
xchg
jp
jg
in
test
not
pop
mov
out
sti
inc
sbb
nop
jle
repnz
push
dec
add
add
jp
insl
test
dec
std
adc
lahf
ss
lahf
push
mov
mov
stos
push
cmp
cmc
mov
dec
jl
inc
jo
pop
mov
xor
mov
sahf
and
fadds
negb
jae
nop
or
scas
fmuls
cmpl
daa
lcall
movsb
popa
xchg
arpl
pop
ja
inc
aam
ret
push
lcall
and
jno
sub
in
xchg
adc
imul
out
pushf
xchg
pop
jecxz
jl
mov
and
jmp
cltd
jnp
insl
sub
jae
cmp
xorb
outsb
mov
and
cmc
jmp
cmp
fldl
jo
sbbl
cmp
xchg
lret
push
add
cmp
leave
ret
xor
pusha
fidivs
cmp
or
mov
pop
lret
add
in
mov
mov
call
jb
lea
and
out
insb
jo
mov
outsl
jne
pop
dec
daa
sub
mov
push
aas
adc
enter
rcrb
pop
stos
or
ret
pop
int
fiadds
in
data16
or
cld
dec
xchg
sbb
dec
jne
pop
test
aaa
mov
jns
insl
xchg
jae
pop
jmp
gs
and
enter
test
jnp
add
xchg
sahf
push
jecxz
xchg
jnp
pop
in
ss
pop
sbbl
ljmp
dec
xor
inc
sub
jno
add
das
lods
lret
or
insb
pop
jecxz
xchg
and
ret
dec
or
mov
mov
addr16
cld
negb
in
popf
pop
pop
hlt
ret
in
and
adc
outsb
adc
mov
ret
push
dec
adc
movsb
or
push
mov
mov
inc
xor
adc
jbe
cmp
or
pusha
dec
push
cmp
push
das
xor
xor
popa
xchg
sbb
aad
outsl
arpl
mov
and
rcl
jecxz
add
outsl
cld
push
mov
mov
cmpsb
or
movsl
popa
addr16
inc
mov
xchg
movsl
push
cmp
pop
addb
cmp
cmp
pop
inc
rcrl
and
repnz
lock
in
std
push
pop
adc
add
cmc
push
sbbl
push
repnz
sbb
lahf
add
sub
int
out
mov
cs
test
std
xor
test
dec
inc
sbb
sbb
sub
insb
sarb
add
sbb
and
sarl
cmp
addr16
pop
xchg
fsubs
or
mov
mov
adc
push
adc
inc
mov
push
divl
cmpsb
test
add
xchg
mov
jp
dec
inc
mov
insl
test
mov
call
sub
cmpsb
sub
adc
mov
push
mov
mov
bound
xor
dec
mov
push
pop
pop
xor
dec
lds
mov
jg
icebp
negb
jg
adc
popa
adc
std
add
jne
cmp
lret
add
mov
push
jb
ss
bound
xchg
in
sarl
push
xor
shrb
and
xlat
mov
pushf
sahf
add
inc
push
adc
sbb
add
fs
test
cmp
aad
jecxz
imul
inc
fisubl
xor
and
lods
add
mov
lods
insl
scas
popa
adc
test
adc
repz
lods
cltd
mov
and
sbb
adc
es
xor
push
mov
rclb
jg
jp
jmp
lods
js
loop
pop
insl
adc
das
mov
dec
cmp
aas
lahf
jl
xor
movsb
mov
stc
sbb
repz
and
aam
cmpsb
pushf
cs
pop
fldcw
lcall
imul
popf
pop
std
daa
repz
ds
cli
out
fcomps
hlt
sub
and
lock
lods
sub
aaa
pop
sbb
jns
mov
dec
or
add
es
aas
jmp
daa
and
dec
mov
sbb
loopne
popf
jne
gs
in
pop
dec
dec
imul
add
jmp
mov
cltd
gs
inc
je
outsl
ret
or
dec
ret
jne
dec
and
mov
ss
loop
stos
cwtl
ja
push
ficoms
cmpsl
shlb
rorb
nop
orb
ficompl
dec
repz
cli
clc
clc
and
negb
cmc
scas
jp
dec
xchg
iret
inc
sub
or
aaa
mov
jne
xor
cmp
xchg
xor
sub
mov
out
ss
sub
jae
xor
cwtl
pop
popl
cmc
mov
movsl
mov
add
ja
shl
je
adc
xchg
shll
push
daa
es
lock
dec
test
mov
lret
inc
jno
out
daa
sub
mov
imul
loop
das
paddb
leave
test
out
stc
scas
out
stc
sub
xor
pop
mov
in
fs
or
loop
jns
aad
push
push
pop
pop
loope
dec
stos
stos
adc
mov
cmp
loopne
sbb
sub
jp
cmp
sub
push
out
push
fsub
arpl
aas
aad
into
dec
jo
jecxz
inc
xchg
dec
cmp
cmp
sbb
pop
cmp
lahf
cmpsb
sub
aad
imul
stos
pop
insl
je
daa
xor
icebp
aaa
cli
jae
fidivrs
mov
inc
sub
fistpll
jle
and
dec
push
pop
imul
jno
mov
nop
jb
xchg
mov
outsb
daa
adcl
mov
push
mov
sub
stos
cli
repnz
jl
fs
and
sbb
fnstcw
loopne
mov
jle
scas
dec
adc
mov
mov
pop
add
test
adc
sub
xchg
sub
cli
mov
ljmp
ficompl
daa
iret
jl
jmp
pop
ret
gs
xor
or
mov
aas
and
mov
test
lret
pusha
sub
xchg
insl
push
stos
inc
lods
and
add
sub
outsb
lock
push
scas
adc
int
push
repz
into
outsw
jne
mov
mov
and
or
jbe
cli
push
or
lock
testb
dec
mov
icebp
push
loope
fldl
or
mov
push
xor
lods
aas
into
xchg
jp
or
lret
test
adc
jle
adc
jecxz
mov
xchg
scas
les
lods
cmc
xor
bound
mov
insl
js
movsb
add
pop
in
mov
pop
dec
icebp
popf
ret
and
pusha
xor
pop
cmc
repz
and
fwait
sub
ret
sti
jae
or
add
inc
clc
cs
xchg
xchg
jle
cmp
push
cmp
scas
lds
imul
push
sub
decb
stos
fidivrl
lds
pop
out
jo
jmp
mov
xchg
mov
add
sbb
pop
mov
mov
test
dec
notb
ficompl
sbb
inc
lret
fldl
popa
xor
jno
in
pop
cmp
gs
cmp
sti
or
lret
mov
push
jmp
ret
xor
pop
inc
adc
push
subb
dec
cltd
sbb
ds
inc
push
xchg
dec
or
and
fnstenv
aas
leave
clc
loope
scas
pusha
mov
mov
xor
int
mov
mov
jmp
lret
sub
adc
and
std
jae
or
xchg
imul
pop
jnp
xor
or
pop
scas
test
ljmp
xchg
inc
cmp
fidivrs
add
and
arpl
lret
adc
fucomp
aam
jl
push
mov
dec
cwtl
leave
sub
cld
push
xchg
das
push
aad
dec
mov
shl
push
cmp
sbb
push
stos
adc
sarb
cmp
mov
test
mov
leave
imul
test
mov
test
into
aaa
cmp
test
push
push
clc
mov
rcll
inc
jbe
repnz
mov
ds
out
xchg
jmp
stc
ficoms
movsb
dec
jmp
pusha
inc
iret
gs
or
mov
or
inc
jbe
sbb
shl
adc
push
and
cli
xchg
dec
jns
out
adc
inc
stos
sahf
mov
hlt
xlat
sub
std
xchg
jb
shll
lods
pop
jle
repnz
mov
daa
jo
aas
test
jle
push
pop
mov
inc
mov
and
adc
shll
fwait
cmpsb
xlat
insl
mov
scas
push
adc
popa
or
and
pushf
sbb
imul
mov
fisttpl
out
mov
push
xor
cmp
mov
cltd
dec
lret
std
cmpxchg
cmpsb
mov
dec
outsl
lods
dec
adc
ficoml
inc
pop
jge
lods
je
add
sub
and
adc
movsl
iret
loopne
lods
imul
cmc
in
fistl
pusha
fisttpll
stc
mov
push
in
cmp
sbb
xchg
leave
mov
xchg
push
or
jge
int3
dec
jmp
jbe
inc
sub
in
mov
repnz
push
imul
test
inc
loopne
add
or
es
xor
cmpsb
arpl
dec
add
push
push
mov
inc
gs
jecxz
insb
test
inc
out
cld
es
cld
lahf
or
and
mov
sub
push
leave
add
push
push
xchg
int3
cmp
jbe
iret
mov
divb
xor
cmp
dec
out
outsl
inc
fsubrs
adc
imulb
mov
push
and
lret
rorl
xor
shl
das
imul
adcl
adcb
cli
aas
cmpl
in
dec
mov
repz
adc
les
je
test
cmp
push
cmp
in
mov
mov
inc
xchg
mov
xor
xchg
insl
loope
sbb
enter
je
out
or
inc
fs
arpl
insl
push
push
daa
sbb
sbb
in
push
lds
add
push
adc
dec
xchg
jbe
xchg
sbb
fstps
mov
cltd
stos
nop
sub
fwait
mov
fwait
js
or
xchg
sbbl
mov
in
test
adc
mov
loopne
pop
imul
sub
fxtract
cmp
fstps
jle
popa
inc
sbb
sbb
fwait
push
mov
outsl
push
rorl
sbb
or
fwait
jns
mov
pop
push
test
dec
mov
jbe
in
loopne
mov
push
js
adcl
hlt
fcompl
and
xchg
lods
insb
cmp
aam
cmovp
push
test
mov
cmp
iret
out
mov
arpl
mov
and
and
int3
out
int
cltd
loop
sub
ret
into
cld
cs
inc
in
mov
mov
xor
mov
cmpsl
pop
adc
imul
loopne
lret
sti
shrb
shrb
jmp
out
pop
push
dec
xor
clc
sar
inc
ret
add
jl
mov
loope
call
repz
sbb
xor
imull
ds
xchg
pop
jg
adc
jg
fcomps
push
fcomps
mov
pop
xchg
mov
jo
push
sbb
cmp
sub
sub
jg
imul
adc
cmp
enter
or
movsb
leave
jg
cmc
push
cmp
xchg
fdivl
xor
daa
or
cmp
gs
push
inc
push
test
jae
jnp
loop
xchg
mov
clc
xlat
clc
shlb
pop
je
pusha
mov
jmp
movsl
ret
xchg
iret
xchg
adc
test
call
adc
push
mov
ja
xlat
mov
lods
xchg
xchg
fldt
loop
pop
cmpsl
call
xor
pop
ret
insb
adc
adc
lahf
arpl
repz
adc
dec
in
pop
pop
pusha
ret
cmp
mov
xor
scas
leave
mov
scas
mov
inc
cs
lcall
bound
and
fwait
movsl
mov
xorl
pushf
mov
out
push
stos
jae
push
call
nop
lcall
rcll
or
lcall
and
aas
add
cmpsb
adc
arpl
xlat
xor
scas
jecxz
outsb
js
cmpsb
lods
xchg
insb
adc
cmp
adc
sahf
mov
cmpb
adc
iret
lret
in
inc
jbe
int
shll
push
pop
pop
xlat
fwait
push
pusha
jge
out
and
dec
mov
adc
in
adc
sahf
lahf
testl
and
push
mov
notb
mov
jb
fstl
push
outsb
aam
sbb
std
imul
outsb
popa
inc
pushf
lret
rol
imul
jl
shlb
sub
cld
adc
mov
cld
mov
and
mov
mov
rcll
flds
lea
jne
test
movsb
repz
sti
fmuls
jg
or
fisubrs
cmp
xor
fwait
adcb
xlat
xor
ret
sbb
pop
bound
mov
xchg
outsl
aaa
rolb
mov
out
rorl
imul
add
jno
add
adc
jge
sub
xchg
int3
addr16
push
insl
fdivr
cmc
add
cwtl
push
test
loop
popf
sbb
mov
mov
and
push
shl
outsl
pop
and
jmp
mov
adc
int3
gs
lret
stos
xchg
xchg
rorl
in
and
outsb
dec
inc
jb
fucomip
inc
xlat
popa
cmp
call
inc
addb
pop
or
enter
jnp
sub
mov
xchg
mov
push
fucom
inc
adc
pop
mov
pushf
dec
addr16
out
enter
fwait
inc
cltd
push
ds
jbe
pop
stos
repnz
fnstsw
subb
aam
shll
jmp
test
sbb
sbbb
shll
xchg
mov
in
loopne
inc
nop
mov
loop
mov
jmp
push
xlat
mov
clc
in
jb
pushf
jl
or
inc
fldl
icebp
repz
jmp
push
push
aaa
dec
divl
cltd
mov
xor
jno
jmp
mov
mov
dec
loope
lret
imulb
mov
test
orb
aas
fistpll
aam
or
cltd
push
xchg
inc
mov
dec
je
inc
orl
cli
add
into
xor
jle
cmp
inc
fnstenv
push
or
mov
ret
xor
jbe
adc
cmpl
sbb
xchg
or
xchg
dec
cmc
jmp
mov
and
mov
lock
mov
fstps
or
iret
jne
xchg
and
pop
mov
jl
mov
mov
pop
rorl
pop
dec
popf
shl
icebp
mull
xlat
scas
and
pushf
testb
jbe
ljmp
je
int
roll
inc
mov
inc
out
movsb
clc
inc
hlt
push
mov
js
mov
ret
jno
jns
icebp
pop
lret
or
enter
sti
sub
cmpsl
test
mov
cld
xor
mov
sub
mov
inc
pop
clc
pop
mov
and
push
lds
out
out
insl
pop
outsb
fstpt
and
and
add
jp
mov
fwait
cmp
ljmp
les
cmpsl
or
add
icebp
lcall
aas
shrl
fs
iret
cmp
xbegin
sub
cmp
das
cmp
and
leave
add
enter
and
mov
xchg
push
sub
pop
sub
imul
mov
stos
dec
test
lock
adc
and
pop
int3
add
fists
scas
sahf
xchg
test
shl
xchg
sub
test
pop
cmp
cmc
cmp
lcall
mov
sti
and
cmpsb
shll
cwtl
stos
fwait
aaa
nop
repz
loop
mov
iret
scas
imul
fs
or
aaa
lock
xor
mov
adc
add
pop
pop
cmp
ja
fsts
mov
out
out
test
jne
xchg
mov
and
cmc
es
je
inc
add
out
leave
fmull
mov
xchg
push
and
cmp
pop
lds
fists
sub
inc
add
inc
loope
cs
popf
mov
xor
lock
inc
jmp
push
cmc
in
outsb
sub
push
push
push
add
push
add
sbb
jge
sub
sub
xchg
cmp
sbb
std
sub
das
xchg
jp
and
cwtl
sbb
dec
sub
rcrl
cmp
add
push
jmp
ficomps
push
and
jo
dec
adc
insl
nop
mov
jb
dec
inc
pop
ja
test
mov
push
shl
mov
es
xor
cltd
inc
or
fwait
lods
repnz
fsubl
je
mov
jmp
jno
pop
test
lcall
in
jo
push
lcall
fadds
push
or
fadds
js
aaa
loopne
into
jns
adc
pop
rcl
out
jle
popf
xor
sub
arpl
pop
das
and
divb
orb
cmp
loope
add
aam
test
push
fcoms
mov
mov
jo
or
cmp
adc
sub
xor
cld
or
decl
sti
lods
dec
mov
in
retw
pop
rorb
push
dec
sbb
mov
outsb
jl
push
or
pop
xorb
lock
out
cmp
sbb
adc
bound
enter
xor
mov
fldenv
xlat
or
pusha
clc
iret
lock
jb
push
fdivs
dec
loop
or
sti
add
jle
fmuls
push
test
mov
cli
out
push
fisttpll
push
jo
mov
push
repnz
test
jmp
inc
adc
xor
cs
xlat
cli
dec
or
mov
xlat
push
sub
fldl
add
popa
imul
fdivr
cmp
pop
mov
jae
into
jle
xor
leave
add
mov
shll
daa
mov
mov
into
rorl
mov
fwait
mov
in
mov
idiv
daa
adc
enter
lea
jae
mov
sub
add
lds
add
sbb
mov
adcb
fcmovnb
xlat
fidivrs
int3
test
sub
std
jns
cwtl
inc
push
pop
outsb
adc
push
in
cmp
les
jecxz
cmpsb
mov
xchg
sbb
inc
mov
dec
test
pop
imul
mov
cmc
xchg
adc
fcoms
data16
mov
cmp
incb
xchg
jge
mov
cld
les
mov
aam
or
sub
jo
repnz
out
mov
mov
mov
jbe
jmp
loopne
jb
xchg
fcom
mov
dec
mov
pop
xor
cli
jae
cld
inc
aaa
pop
pop
inc
adc
icebp
dec
add
out
inc
imul
fildl
adc
test
and
orb
shll
aam
adc
int
pop
gs
adcl
sarl
cltd
add
cmp
outsl
push
mov
fs
cmpsb
or
jge
cwtl
mov
jl
aas
or
xchg
shll
aad
clc
push
pop
test
mov
lret
adc
arpl
fsubp
pop
hlt
mov
add
add
jo
mov
xchg
ret
and
sbb
mov
xchg
sub
cmp
pop
out
jecxz
sbbb
dec
and
sub
sub
aas
sti
out
addb
arpl
rcll
js
les
or
js
je
mov
mov
bound
psrad
int3
mov
outsb
lods
jb
fdivs
xchg
subl
insb
mov
hlt
lret
push
mov
mov
mov
or
adc
pop
fidivrl
or
dec
call
sub
jo
mov
pop
cmpsb
inc
mov
lock
jmp
repz
push
or
enter
jne
lods
add
lahf
dec
mov
or
movsb
in
push
lock
and
repnz
ds
mov
xor
icebp
mov
aaa
sub
js
loope
cs
jl
gs
scas
cld
jbe
lock
loopne
jecxz
and
sub
jae
and
int
aaa
pushf
sbb
sti
sahf
jb
mov
ja
lds
xchg
push
push
xor
mov
mov
pop
enter
sbb
pop
push
add
or
ficoms
add
shlb
out
test
dec
les
mov
out
mov
je
lea
ljmp
das
lret
aam
ja
mov
clc
mov
mov
mov
out
fmuls
push
jecxz
ljmp
push
adc
mov
dec
pop
daa
push
in
jb
xchg
pop
fildll
jbe
or
scas
sahf
cmp
dec
and
dec
int3
fidivrs
shl
scas
xchg
mov
mov
out
mov
sub
movsl
dec
sub
flds
adc
or
mov
lods
orb
repz
mov
sbb
inc
fwait
inc
and
mov
aaa
std
divl
jle
ret
mov
mov
pop
add
adc
jmp
push
fcomp
data16
pcmpgtb
xchg
pop
push
inc
fs
call
lock
sarl
fsubrp
insb
and
ljmp
aad
mov
mov
dec
push
emms
xchg
mov
data16
push
inc
push
jne
sub
dec
xchg
in
addr16
dec
mov
sahf
and
and
xor
sub
xor
xchg
sbb
dec
insl
repnz
data16
mov
ret
mov
and
or
dec
sub
pop
sbb
rcll
cmpsb
in
cld
pusha
pop
jae
dec
test
xchg
or
loopne
popa
dec
popf
cmc
adc
and
mov
lahf
mov
out
leave
lret
push
repz
ret
dec
mov
xchg
icebp
push
ror
lds
xchg
test
mov
mov
pop
jg
sbb
or
repnz
hlt
popf
fstps
mov
loope
adc
xchg
cwtl
adc
push
xchg
xchg
push
add
out
xor
jne
xchg
mov
pop
cld
lret
sbb
addr16
bound
pop
pusha
cs
jbe
lods
mov
lds
push
push
mov
ret
jb
mov
jbe
sub
lea
cli
in
lods
adcl
ret
dec
inc
mov
outsb
and
mov
add
jnp
jno
jmp
and
mov
jmp
fstpl
inc
mov
sbb
mov
jnp
sub
mov
pusha
sub
fs
inc
shr
movsl
lcall
pop
push
push
shlb
out
mov
adcb
and
test
inc
fbstp
push
in
ror
ret
insb
sahf
das
test
arpl
js
cmpsl
push
mov
orb
leave
imul
lock
cs
mov
xor
dec
lods
cmp
xlat
push
out
test
add
in
inc
les
mov
pop
mov
shl
xchg
lea
xor
fildll
fs
pop
adc
ljmp
jbe
push
daa
mov
push
or
inc
jae
lock
cwtl
fsubrs
leave
and
idivl
inc
cwtl
shlb
mov
popf
mov
and
jmp
icebp
jnp
rcll
out
ljmp
cltd
mov
add
test
mov
outsb
cmp
lods
mov
push
or
jecxz
mov
sub
scas
and
or
and
inc
xchg
xchg
xor
pop
fwait
leave
dec
bound
js
xor
inc
mov
sti
jne
fbstp
jmp
mov
std
rolb
lock
push
jb
add
xchg
aas
lods
inc
ret
mov
pusha
test
out
lret
ret
pusha
xchg
hlt
mov
in
fld
adc
add
mov
scas
out
inc
rcll
loope
mov
xchg
or
loope
or
xchg
push
std
ja
mov
add
pop
in
leave
ss
cmp
ret
mov
inc
sub
loopne
and
push
mov
insb
xor
add
sbb
inc
mov
cmpsb
pop
or
mov
mov
popa
or
mov
loope
mov
inc
xor
push
in
gs
push
fadds
push
mov
aad
sub
sub
ss
add
jns
xchg
jge
lahf
daa
out
dec
test
mov
sti
outsb
adc
adc
test
icebp
lock
and
fmulp
pop
fld
mov
pop
inc
out
lret
mov
adc
mov
fnstsw
mov
jg
or
cld
in
loope
stc
push
int3
movsl
loop
insl
pop
jne
push
dec
push
les
inc
fsubl
xchg
and
imul
bound
arpl
jl
and
add
imul
inc
pop
insb
setl
mov
pop
and
mov
jle
cld
pop
and
or
mov
sbb
mov
push
push
vpaddusb
fldenv
jp
lahf
aaa
pop
xchg
in
ja
sub
inc
jo
andl
xor
and
xor
and
shlb
out
loop
push
sub
inc
lret
or
inc
lods
roll
adc
cmp
cltd
lock
dec
ds
dec
jns
mov
mov
pop
fwait
pop
cs
sbb
pushf
outsl
mov
shl
xor
jl
jl
sahf
int
mov
int3
lds
out
data16
or
cmp
pusha
xchg
cmpl
mov
icebp
cmpsb
mov
test
pushf
shlb
fnsave
dec
sbbl
jg
fwait
pop
cmp
push
dec
leave
push
cmp
mov
test
dec
push
movsb
push
cmp
adc
or
inc
jecxz
add
psubw
nop
inc
mov
xchg
out
mov
rorb
std
pop
jno
sub
or
jp
fwait
xchg
pop
jmp
hlt
xchg
add
adc
lea
mov
incb
pop
repz
xchg
repz
or
pop
pushf
insb
lea
lea
cmp
arpl
inc
sub
mul
rolb
cmp
xor
xor
add
xor
sbb
out
call
jmp
mov
or
cmpsb
inc
insl
idiv
call
cmpl
or
adcb
jns
push
pusha
stos
mov
push
jno
sub
loope
lds
dec
shl
push
dec
dec
inc
shr
insb
mov
test
lret
jb
orl
repnz
inc
fnstsw
test
or
inc
outsl
mov
mov
add
jp
jle
mov
mov
sub
jge
cmp
repnz
test
int3
fidivrs
sbb
stc
and
dec
fcoms
and
das
sub
mov
sahf
scas
sbb
cmpsl
dec
negb
sbb
dec
mov
scas
jnp
add
jb
xor
int
fs
mov
xchg
lods
movsb
sbb
sbb
iret
rol
dec
stc
sbb
out
mov
push
pop
mov
sub
cltd
xchg
mov
push
mov
cmp
les
dec
sub
adc
and
jns
out
mov
mov
loopne
mov
pop
xor
push
fisubrs
jnp
cmpsb
fdivp
mov
xchg
fnsave
lods
xchg
xchg
ljmp
addl
lahf
add
add
in
xchg
ds
outsl
xchg
dec
shrl
lea
inc
cmpsb
es
xchg
sub
adc
xor
shll
shlb
roll
mov
push
leave
popf
add
mov
fistpl
xchg
ds
xchg
pusha
mov
imul
inc
and
pop
jge
stos
popf
pop
pop
clc
loop
arpl
cmpsl
cmp
popf
xchg
and
jb
push
dec
in
cmpsb
mov
sub
fistpll
scas
cmc
leave
js
lret
shr
jle
fstp
nop
fadds
stos
je
inc
sahf
xor
pop
sbb
stos
dec
js
dec
movsb
jg
data16
lea
rorb
push
sub
sbb
jns
bsr
cmc
rcrl
xchg
adc
push
sti
ret
sbb
adc
mov
mov
add
enter
or
ljmp
addr16
mov
nop
daa
push
xchg
call
mov
fsubr
aad
mov
xor
adc
popf
stos
call
lds
loopne
pushl
and
mov
cmp
add
jbe
daa
sahf
les
sub
xor
and
jmp
xchg
out
jp,pt
jmp
or
nop
cmc
outsb
cld
lcall
rdtsc
push
dec
sbb
mov
mov
shl
xchg
aam
pop
pop
pop
cli
sub
pop
lds
scas
sbb
sub
and
cmp
flds
add
jb
sti
daa
faddp
xchg
aaa
and
inc
mov
xor
xchg
je
lods
xor
pusha
rolb
out
aam
cmp
mov
xlat
xor
xchg
and
outsl
filds
loop
addl
lret
fimull
cmp
shll
imul
mov
dec
pop
addl
or
pop
sbb
out
mov
mov
ficoml
sub
cmp
test
push
jo
mov
pop
or
scas
loope
xchg
jno
mov
cmp
ja
sbb
cmp
fwait
sub
das
sbb
sarl
push
pop
pusha
cltd
sbb
je
test
xrelease
iret
mov
xor
pop
push
inc
xchg
fwait
mov
dec
into
addl
xor
popf
arpl
std
cmpsb
movl
shl
iret
push
sub
cmpsb
mov
dec
mov
cmp
jecxz
sbb
mov
adc
orb
adc
rcrl
lcall
addr16
push
in
mov
ds
cld
xchg
std
shll
jo
xchg
sbb
in
add
and
dec
rcrb
pop
mov
jp
xchg
fwait
icebp
inc
call
movsl
stos
fiaddl
cmp
cli
xor
fs
lods
fistpl
mov
sbb
leave
int3
pop
mov
mov
add
xchg
cmp
pop
mov
push
pop
out
sbb
les
fldl
xor
mov
shll
or
fbld
lds
mov
lods
mov
mov
push
sbb
lea
jmp
rclb
sarl
sti
gs
roll
lods
fcmovnbe
mov
nop
lods
neg
aaa
push
xor
stc
mov
mov
pop
lcall
stos
into
loope
shll
sbb
mov
or
mov
repnz
aaa
cmp
cmp
and
xor
jne
cmpsl
mov
lcall
xor
bound
and
jbe
aas
or
adc
outsl
popf
ss
inc
hlt
popf
sbb
or
lods
int
sbb
subl
jecxz
push
loop
mov
leave
inc
mov
in
mov
imul
and
inc
imul
cmp
jo
test
xchg
jmp
or
dec
ret
xchg
xchg
and
aaa
in
bound
popa
jmp
mul
mov
pop
int3
cmp
out
dec
xorb
hlt
cmp
xchg
adc
ljmp
sub
pop
out
pop
pop
popf
test
out
sub
popf
mov
sbb
shll
lahf
int
scas
shl
les
mov
divl
test
jl
pushf
addb
mov
mov
into
xor
repnz
and
lock
pop
sbb
in
out
loopne
push
sahf
aad
out
repz
sbb
jnp
inc
jae
das
ds
mov
dec
adc
sub
pop
stos
sbb
and
inc
mov
js
mov
push
stc
jne
and
popa
gs
imul
jo
js
addr16
mov
push
lret
call
push
push
sub
sbb
jl
cwtl
and
pop
jns
ret
add
xchg
xor
mov
pop
cmpsl
aad
jno
test
nop
lcall
and
or
imul
xor
push
inc
stos
dec
into
sti
mov
and
insl
outsb
sbbl
push
mov
into
js
xor
xchg
adc
dec
adc
inc
pop
mov
dec
pushf
imul
dec
sub
adc
push
mov
jmp
pop
xor
lret
sbb
or
mov
das
jo
jmp
adc
pop
stc
leave
test
jecxz
divl
test
repz
cmc
int3
sbb
sub
inc
adcl
and
int
mov
adc
lret
sub
inc
and
xchg
divb
lahf
push
sbb
cmp
mov
jns
and
test
aad
mov
rorl
add
leave
scas
test
xchg
scas
or
cwtl
cs
rolb
stos
popf
cwtl
jl
jnp
scas
push
bound
push
mov
dec
jge
adc
jmp
mov
mov
xchg
add
push
int3
mov
in
sub
fdivs
adc
jle
enter
lret
loope
in
xor
xor
and
xchg
mov
pop
pop
ret
adc
jmp
clc
shll
jecxz
mov
inc
lock
idivb
push
xchg
pop
xor
aas
addl
es
cmpsl
xchg
jns
aad
repz
sub
xchg
data16
jg
cli
repnz
cld
shrl
rcr
jmp
movsb
fucomi
mov
cmc
enter
sub
jae
cmpsb
loopne
pusha
loopne
sbb
push
dec
lahf
fdivs
cld
fdivrs
mov
sbb
dec
or
rclb
les
test
xlat
adc
mov
sbb
loop
ds
int
add
inc
xor
into
inc
and
dec
out
push
push
lock
xor
mov
mov
inc
subb
dec
negl
cli
lea
hlt
push
and
adc
dec
stc
sub
addr16
jns
movsl
in
mov
mov
and
xor
imul
xchg
add
add
dec
mov
mov
aas
mov
pop
pusha
mov
sub
and
xchg
imul
lret
add
xorl
call
inc
sub
in
es
pop
mov
lahf
jl
jo
xchg
lcall
loopne
mov
mov
rorb
push
push
scas
idiv
xchg
lock
les
adc
ja
stc
stc
shll
or
xor
repnz
add
mov
mov
adc
daa
sub
fwait
test
aaa
lds
mov
add
pop
in
scas
scas
push
in
loopne
daa
push
xchg
sub
leave
out
xor
mov
mov
ret
fnsave
mov
pop
cmp
into
rclb
and
pop
pushl
imul
inc
iret
inc
icebp
sub
inc
aad
adc
mov
hlt
ret
into
cltd
cmp
incb
xor
out
into
maxps
rcrb
or
or
inc
add
fcom
aas
lahf
jne
cmp
mov
aam
add
xchg
mov
add
stos
lods
push
ret
aas
jle
inc
add
into
testl
and
loop
sti
sub
enter
clc
in
loope
or
push
dec
flds
pop
in
or
call
sub
xor
loop
popf
pop
insb
pop
cltd
dec
lea
rorl
jae
psubb
repnz
cmp
orl
push
insb
jle
shrl
mov
jp
ret
inc
adc
test
mov
ret
in
pop
dec
es
mov
psubw
cs
xor
stos
jg
movsb
ljmp
imul
mov
scas
aam
icebp
mov
lret
int3
fnsave
in
and
outsl
xlat
or
std
adc
xor
nop
jne
jp
pop
outsb
test
inc
stos
push
jg
scas
mov
dec
or
mov
cltd
outsb
call
lock
stc
adc
and
inc
lret
and
mov
inc
jg
cmp
rcl
xor
dec
inc
inc
mov
arpl
clc
out
cwtl
inc
mov
and
fwait
int
lcall
push
iret
stos
push
dec
sbb
jge
adc
enter
pop
dec
mov
fmul
fwait
jle
jmp
mov
mov
pop
add
enter
pusha
jno
rolb
sub
je
lcall
cs
sbb
mov
fs
or
dec
sub
stos
add
ss
mov
mov
mov
ljmp
ret
cld
or
cmp
xchg
mov
bound
sti
pop
mov
push
cmp
int
sub
mov
mov
jg
add
pop
cs
cltd
out
dec
adc
mov
dec
xchg
mov
seto
fucomp
movsl
icebp
out
int
push
movsb
les
icebp
jge
jns
sbb
mov
cwtl
addl
out
aas
fidivl
adc
sarb
rol
jb
jno
clc
fwait
imul
pusha
sbb
pop
pushf
into
jecxz
or
mov
insl
pop
inc
mov
js
lea
mov
sbbb
xchg
outsl
sub
clc
not
mov
clc
fcomps
cmp
lcall
cmp
aas
pop
xchg
jb
je
int
dec
and
mov
cmc
test
xor
xlat
add
pushf
or
jnp
mov
inc
gs
iret
push
adc
test
pop
mov
dec
push
sti
fildll
sti
call
mov
leave
int
or
movsl
ja
xchg
lcall
sarl
or
mov
xchg
mov
add
mov
mov
jnp
fdivrs
pop
push
rol
xchg
inc
outsb
cmp
sahf
jl
insl
cmpsl
loop
fisubs
in
je
loop
stos
xchg
mov
or
sbb
movsl
lock
jb
lahf
mov
pop
sub
inc
dec
dec
cmp
push
test
test
in
in
in
call
loop
push
stos
mov
jno
mov
popa
pop
jle
mov
pop
cmp
mov
cmp
xchg
sbb
push
pop
ficompl
sub
repnz
adc
notl
outsb
in
rcrl
adc
pop
sbb
or
jns
sub
cltd
stos
shrb
addr16
lahf
or
push
push
test
dec
sub
in
inc
push
out
push
andl
out
rolb
jne
adcb
pop
push
inc
mov
inc
filds
test
cs
sub
cld
inc
add
cmp
jmp
movl
adc
rorb
mov
xlat
xlat
xor
adc
jge,pt
add
and
cmpsb
add
fdivr
and
xor
int
das
xchg
lret
popa
mov
int3
push
repz
mov
jbe
jbe
jmp
pop
mov
cld
enter
mov
xchg
bound
adc
sbb
mov
mov
in
fucomip
stos
jb
adcb
inc
push
arpl
jne
cld
mov
aam
por
mov
push
jl
sti
into
in
cmc
out
adc
mov
cltd
inc
mov
cmpsl
arpl
pop
loopne
out
pusha
dec
mov
stos
jo
push
loopne
add
mov
int
loope
jg
mov
mov
roll
cmp
dec
inc
lds
pop
std
imul
xchg
sub
push
daa
out
faddl
push
add
movsb
out
enter
test
pop
out
push
lea
or
dec
adc
ja
pop
mov
je
push
sub
mov
or
xchg
mov
pop
push
outsl
or
test
inc
scas
pop
icebp
or
push
add
xchg
mov
into
pop
adc
aad
and
aad
in
jbe
jp
fimull
out
xor
and
dec
cmp
push
jg
mov
mov
cld
sub
add
sbb
fimuls
mov
ljmp
lds
adc
shll
inc
add
inc
mov
cwtl
jbe
testb
fimull
aam
cwtl
adc
sub
mov
aas
jmp
call
mov
cmp
push
cmp
inc
push
shl
sbb
jg
stc
or
call
mov
les
out
fildll
ret
jns
inc
mov
cmpsl
mov
cmp
xor
jno
jo
inc
cltd
sahf
shl
aaa
mov
pop
mov
push
add
sub
xor
xor
incb
push
cld
mov
sahf
push
clc
xchg
jno
mov
push
insb
imul
cmp
jae
out
xchg
dec
mov
add
inc
ds
cmp
data16
mov
out
sub
push
cmp
fsubrs
lea
lret
aad
sti
or
cmpsb
lret
xchg
ret
mov
fs
loopne
data16
or
mov
jle
cwtl
jmp
xchg
inc
outsl
ds
and
je
arpl
inc
in
int
jbe
cmpl
mov
les
and
push
in
mov
adc
mov
push
xchg
jp
push
outsb
sbb
xchg
sti
mov
sub
jmp
add
mov
xchg
push
lds
icebp
inc
stc
adcl
push
xchg
ljmp
and
mov
sbb
fstpl
ret
or
sbbb
cs
adc
fs
xchg
aam
fsts
or
fistpll
and
sbb
push
push
orb
jbe
xchg
ss
popa
fs
sbb
mov
adc
jne
nop
sub
push
xchg
aas
popf
mov
ja
loopne
iret
aam
outsl
cmpsb
inc
std
or
test
mov
ja
scas
sub
push
jns
inc
and
jnp
sahf
adc
dec
xchg
lods
shr
cmp
bound
aas
add
sub
sbb
scas
mov
xchg
sbb
or
mov
test
lock
sub
mov
fnstcw
pop
std
sub
add
fcoms
stos
hlt
xchg
inc
aaa
mov
mov
jp
lods
leave
imul
push
clc
inc
imul
xchg
call
jne
sbb
or
add
mov
add
adc
cmc
vandnps
cwtl
les
mov
dec
inc
cli
inc
insb
and
test
sub
push
add
cs
adc
cli
cmovne
mov
sar
into
inc
loopne
jl
call
data16
bound
ret
jb
fs
inc
aam
pop
fsts
in
mov
jecxz
ja
sarb
out
pop
jmp
push
and
jge
sub
pop
hlt
pop
lea
adc
imul
cmpsl
xor
movsl
cmp
mov
dec
inc
ss
adc
fcmovu
inc
mov
es
bnd
mov
xlat
adc
adcl
jb
push
ds
mov
jl
icebp
jecxz
inc
push
gs
inc
cli
mov
dec
lret
cmpsl
sbb
mov
sti
mov
cmp
aad
mov
aas
xchg
test
cs
mov
mov
fnsave
nop
frstor
fs
gs
int3
jne
xchg
nop
push
xchg
test
shrb
repz
pop
mov
rcrl
mov
dec
mov
and
pop
and
lret
sub
cmpsl
cmp
add
push
cmpl
cmp
repz
mov
ficomps
push
into
gs
jg
mov
jne
repz
sarb
push
pop
push
test
push
stc
fstpl
adc
add
mov
pmaxub
mov
insl
fimull
cltd
mov
or
mov
add
stos
lcall
mov
in
cltd
sbb
xor
mov
popf
lock
aad
xchg
mov
sub
les
scas
test
js
es
jnp
xchg
add
shl
mov
push
cld
stos
leave
sbb
adc
and
jecxz
mov
xor
add
cli
sub
fwait
stc
add
push
mov
cwtl
and
por
aad
cmc
jle
jno
inc
jae
sbb
xor
cwtl
iret
xor
xchg
jnp
xor
mov
nopl
dec
scas
dec
into
xor
or
mov
repz
inc
inc
out
aas
xchg
jne
push
and
loop
mov
fcoml
stc
xor
sbb
or
into
movsb
fsubrl
sbb
iret
lods
addb
xchg
pop
sbb
xchg
pop
insl
adcb
leave
mov
je
cmp
mov
mov
les
popa
lds
xlat
call
lcall
test
push
rcrl
js
adc
inc
test
push
jne
sub
js
out
mov
ljmp
jns
hlt
adc
mov
outsb
mov
push
jb
mov
pop
lods
cmp
push
out
out
push
test
aaa
pop
cmovp
inc
lcall
jae
push
pop
mov
cmpsl
test
sub
mov
push
push
cmp
pop
outsb
mov
mov
jp
cmp
add
ss
movl
push
push
es
fisttpll
adc
xchg
mov
cmpl
ret
push
inc
sub
sbb
xchg
push
inc
pusha
add
lods
aaa
inc
stc
xor
sub
loope
mov
cmpsl
xor
mov
pop
sti
and
mov
and
nop
mov
dec
push
lret
sub
int3
xor
xorb
aam
pop
pop
dec
push
out
dec
sub
add
divl
es
pop
push
sahf
inc
leave
sbb
les
jno
in
aaa
adc
add
push
adc
bound
add
or
mov
pop
adc
mov
jno
mov
inc
push
lods
imul
enter
mov
mov
jno,pn
nop
push
cmp
sti
lds
sbb
dec
icebp
sub
mov
inc
mov
fldenv
push
insb
sbb
jp
shlb
mov
jecxz
pusha
add
dec
fs
cmc
ret
lcall
outsl
lret
mov
and
fmull
push
add
adc
jl
push
leave
jge
imul
cmp
lret
push
sarl
jl
jg
cmp
xchg
movsb
repnz
or
out
roll
insl
in
in
fiadds
pop
ret
test
pop
sub
xchg
fbld
repnz
sbb
lock
xchg
loope
inc
mov
sti
mov
and
int3
cmp
pop
movsl
push
loope
pop
push
adc
stos
pop
and
jnp
pop
andb
rcl
add
pop
mov
inc
out
jae
sti
or
movsb
and
cmovl
mov
popf
int3
pop
add
cmpb
lret
iret
xlat
xchg
sbb
jns
dec
inc
mov
out
cwtl
inc
or
inc
lods
outsl
or
daa
inc
jp
jb
xor
adc
push
xchg
int3
nop
push
movsb
aad
icebp
notb
adcb
jnp
push
test
mov
xor
or
aad
pop
push
out
adc
cmp
cmp
lahf
inc
sbb
imull
xlat
sub
cmc
pop
cmp
jne
loop
scas
jecxz
xor
mov
and
insl
lcall
clc
int3
sub
mov
mov
test
xchg
mov
mov
cmc
mov
sbb
leave
dec
and
jne
push
sub
fiaddl
mov
cmp
lret
in
cmpsb
push
notl
mov
icebp
stc
mov
ljmp
cmp
push
pop
sbb
fimull
xchg
add
jmp
inc
adc
or
pusha
invd
xchg
cltd
mov
push
stos
int3
mov
cmpxchg
lock
out
jns
xchg
inc
xchg
ret
je
mov
mov
imul
daa
adc
js
mov
cli
jns
in
and
mov
mov
sahf
ret
jge
test
rol
arpl
push
shl
icebp
mov
movsb
inc
mov
lock
adcl
cli
push
lret
mov
popa
sub
dec
bound
xchg
push
adc
sbb
ljmp
in
inc
xchg
dec
daa
add
les
mov
pop
call
cmp
or
sub
out
xchg
pop
mov
add
mov
add
push
xor
fdivrs
cmp
xchg
mov
shrb
shlb
ds
sahf
enter
jecxz
mov
or
mov
lret
and
add
cmp
mov
lods
cmpl
mov
lods
bound
push
lods
inc
mov
xlat
outsb
xor
or
mov
rcll
jne
dec
pop
mov
cmp
sub
lahf
add
pop
inc
je
mov
pop
mov
cmpsb
data16
push
int3
mov
pop
imul
pop
aad
dec
outsl
mov
rcr
fidivrs
fwait
sbb
icebp
int
lods
jne
scas
movsb
push
add
ret
cmp
lcall
in
or
mov
mov
pop
fdivrp
mov
lret
adc
xchg
pop
out
mov
pop
pop
shll
fsubrl
dec
movb
push
aaa
inc
mov
sbb
adc
push
dec
mov
lock
jne
xor
dec
xchg
lcall
idivl
xor
xchg
xchg
outsl
fistpl
push
cmp
fcomip
fdivs
imul
mov
mov
fs
fistl
pusha
push
sbb
shll
adc
fcomp
mov
shlb
sub
dec
push
dec
pusha
and
stc
loop
sub
test
lods
lods
cmp
jle
shr
add
hlt
movsl
ja
fistpl
filds
lcall
xchg
push
mov
sbb
cmp
aad
es
cs
jl
leave
mov
nop
add
loope
into
mov
push
aas
imul
cld
jl
faddl
xchg
cld
lock
je
pop
or
mov
mov
out
mov
mov
push
subl
enter
clc
js
push
fstpt
jno
mov
fs
ds
adc
lea
push
xor
push
cmp
dec
repnz
in
int
pop
loop
mov
out
rclb
mov
pop
mov
cmp
dec
dec
xor
push
inc
nopl
adc
cmpsl
stc
push
or
int3
mov
test
mov
pop
xchg
bound
movsb
outsb
loop
test
dec
test
add
pushf
xor
and
push
sbb
das
push
pop
xchg
mov
je
movsl
ret
jle
insl
push
pop
out
cmp
fdivrs
pop
leave
mov
and
xor
mov
cmc
mov
lods
cli
xlat
cmpsl
xor
cmp
push
out
arpl
fbstp
pop
mov
or
mov
xchg
test
sbb
jnp
or
stos
sub
pop
test
sbb
lds
cmc
xor
cld
rcr
adc
pop
xchg
js
jmp
pop
jp
stos
int
fcom
mov
push
pop
rcrl
push
cmp
mov
cmpb
xor
subl
xchg
mov
pop
sbb
stos
cltd
jno
test
lock
rclb
and
lods
popa
pop
or
in
mov
sbb
sub
add
sub
and
sbb
jmp
stos
push
cwtl
popl
cmp
cmpsb
movsb
add
pop
aam
xchg
cmp
adc
addr16
incl
fs
mov
call
jnp
push
add
mov
cmpsl
lret
mov
pop
leave
dec
stos
jae
sbb
addr16
cmc
push
push
mov
push
ret
cld
iret
aam
das
sub
mov
in
rorb
aad
lods
cmp
jb
sbb
icebp
jp
aad
rcrl
js
movsb
mov
jnp
test
inc
in
push
lea
lahf
inc
pop
aaa
xor
push
and
lret
cmp
pushl
xchg
mov
insl
xor
adcb
lea
lock
sbb
bound
sub
and
arpl
js
add
clc
inc
mov
cld
hlt
idivl
rclb
fcompl
mov
add
pop
cmp
loop
jecxz
dec
dec
add
insl
and
addr16
shll
mov
jge
mul
dec
cmpsb
loope
ror
lock
add
sub
mov
xor
mov
inc
inc
lahf
pop
stos
aas
pop
jae
int
mov
ljmp
push
dec
adc
lret
inc
add
mov
xor
inc
jle
lea
test
stos
popl
adc
pop
pop
inc
and
pop
lock
xor
mov
push
jnp
jl
push
andb
iret
bsf
pushf
cmpsl
sub
dec
enter
mov
add
mov
dec
sub
sub
jo
negl
aam
fldcw
xor
jg
ret
push
and
xor
div
out
jmp
pcmpgtw
cmp
or
sub
sub
fidivrs
push
call
pushf
dec
adc
push
add
xchg
out
jmp
ds
xchg
dec
enter
add
push
cmp
or
add
cltd
pop
jae
or
inc
lods
inc
nop
sub
mov
mov
ss
jo
jl
test
cmp
pop
inc
lahf
push
xor
sub
inc
xchg
and
adc
outsb
scas
or
test
lcall
push
jnp
mov
lods
xlat
hlt
jmp
pop
inc
es
cmp
xchg
sbb
cmpsl
ret
jg
push
popf
test
fs
fcompl
mov
sub
cmpsl
rclb
mov
dec
jo
pop
mov
push
ss
xchg
and
sahf
adc
clc
hlt
into
subl
sub
pop
dec
nop
sahf
movsb
loopne
loopne
scas
out
shl
xor
push
push
icebp
lcall
adc
aam
fisttpl
mov
out
xlat
xor
pop
fistpl
in
stos
jb
cmp
sub
fs
insb
cmp
outsl
xchg
adc
dec
dec
adc
pop
ret
mov
rol
js
push
mov
out
push
pop
inc
rorl
neg
pop
jbe
ret
or
mov
and
sub
add
adc
push
cmc
pop
xor
dec
jo
aam
ret
mov
lcall
lret
or
shl
jns
dec
lret
push
adc
sti
outsl
lret
pop
out
leave
enter
test
push
cmp
imul
xor
sub
aas
pop
je
ds
xchg
repnz
imul
outsb
lea
sub
dec
xlat
lahf
pop
cmp
xor
cltd
jecxz
call
mov
xchg
sbbb
xchg
inc
clc
adc
and
pushf
rorl
test
pop
insl
xor
int3
std
jb
repz
dec
in
jae
mov
lea
adcb
sbb
adc
jnp
js
dec
int3
inc
adc
cli
and
cmpsl
and
dec
sarl
aas
mov
int
gs
add
in
scas
hlt
and
mov
xchg
mov
inc
lcall
and
add
jb
xchg
test
ljmp
enter
les
xchg
add
sbb
loop
sbb
mov
es
fsubl
jg
decb
push
ljmp
jl
sub
xchg
mov
jle
or
inc
cmpsl
adc
mov
iret
fldt
xchg
sti
mov
sub
fstp
cltd
popa
mov
lock
test
lock
jp
arpl
cli
dec
cltd
xor
cmp
loope
lcall
xor
jmp
cltd
data16
pop
add
push
pop
pusha
jl
push
ret
inc
cmp
repnz
and
movsb
cmpsb
sbb
outsl
adc
aaa
adc
adc
pop
adc
mov
jecxz
xchg
in
int
push
les
test
xchg
sub
and
mov
int3
mov
sbb
rcr
and
mov
sub
mov
and
xchg
fwait
adc
mov
data16
jb
jle
adc
mov
xchg
iret
cmc
arpl
out
fs
push
popw
in
fldt
jl
jg
aam
sbb
lea
adc
adc
out
lcall
bound
pop
pop
lcall
jae
imul
loopne
out
xchg
pop
jae
fdiv
in
into
aam
cmp
add
sbb
subl
out
sbb
adc
xchg
aas
mov
fadds
shrb
sub
bound
mov
test
jge
lret
or
ds
lea
gs
fldenv
fistps
gs
gs
incl
xchg
stc
mov
mov
xchg
imul
enter
pop
aad
cmp
filds
fnstenv
out
pop
fistps
fs
jno
orl
or
lock
mov
cmp
clc
cmp
enter
out
dec
movsl
popf
jg
xchg
mov
xchg
push
sets
add
or
mov
mov
enter
cmpsl
pop
xor
adc
and
sbb
pusha
xchg
stos
mov
jb
jp,pn
pop
sbb
adc
fcompl
add
push
xchg
in
test
mov
out
pusha
in
sbb
aas
xchg
jns
mov
out
test
xchg
movsb
xchg
aaa
mov
push
dec
xchg
jmp
add
rclb
icebp
jae
lcall
popa
mov
add
icebp
xor
mov
mov
mov
add
cmp
jecxz
fadds
xchg
ror
mov
sub
xlat
mov
dec
test
jmp
in
in
or
stos
adc
jb
clc
sub
xchg
aam
loopne
nop
rcr
xchg
pop
cwtl
ja
lea
js
mov
ror
cmpsl
xlat
pop
jns
sbb
js
repnz
mov
inc
lret
mov
xchg
stos
jmp
mov
mov
xlat
pop
jb
fwait
or
roll
mov
jmp
loopne
add
pop
mov
lea
xchg
lods
mov
inc
loopne
sub
add
test
mov
dec
or
dec
fidivs
xor
shlb
push
in
mov
stos
xchg
jns
rorl
mov
jmp
rolb
nop
mov
xchg
push
sbb
sbb
lcall
inc
ja
leave
and
rcr
pop
sbb
dec
hlt
jb
lcall
mov
xchg
lea
rol
popa
push
sbb
cmpsl
push
je
xchg
pop
jge
stos
jo
push
mov
into
ret
mov
aad
pop
cs
push
mov
mov
popf
clc
inc
cltd
mov
lds
nop
daa
imul
mov
ret
cmp
jo
sarb
cmp
xor
sbb
push
cmp
lds
xor
cmp
inc
scas
cmp
inc
rcr
push
dec
and
jmp
jle
fs
nop
push
mov
jmp
dec
repz
notl
pop
shlb
sub
push
jp
sub
stc
cmp
push
test
cwtl
xor
cs
push
mov
enter
xchg
xor
js
bound
adc
and
jp
mov
jae
sub
lret
fwait
sub
inc
mov
add
mov
inc
jae
push
pushl
outsl
sbb
push
xor
xor
push
pop
int3
jb
mov
cmp
das
and
jle
fstl
sahf
cmpsl
dec
cmc
inc
xchg
or
cli
lds
loope
jle
push
lods
push
sarl
je
xor
lea
mov
inc
lods
jae
push
sub
push
lea
mov
and
dec
clc
add
out
sbb
sgdtl
lea
xor
adc
rolb
leave
fwait
imul
aad
ret
test
adcl
push
in
xor
pop
jns
data16
push
movb
enter
addr16
mov
cmp
jl
cmp
scas
mul
nop
pop
sbb
sbb
pop
adc
mov
leave
movsb
xchg
jo
pusha
out
push
jp
or
cmc
aam
lret
fistpll
push
push
xchg
rorw
mov
test
sbb
fidivrs
loopne
movsb
in
mov
ja
pop
sbb
push
fmull
out
nop
mov
loop
mov
sub
xchg
pop
sub
shrl
sbb
xor
lret
add
push
sbb
into
xchg
cld
fstpt
add
or
push
adc
movsl
push
adc
into
jle
test
rcrb
xor
push
mov
insb
mov
shll
repnz
outsb
jle
cmpl
mov
xchg
dec
js
out
jg
xchg
fmuls
push
push
cs
lret
popa
pop
imul
aaa
movsb
cs
es
add
cmpsb
cmp
ret
lcall
lret
push
cmp
pop
xchg
adc
add
xor
add
xchg
cltd
pop
mov
into
mov
aam
sbb
cwtl
mov
cltd
dec
dec
push
adcb
arpl
xor
push
fcoml
mov
pop
in
jmp
sbb
sbbb
lods
push
shlb
lea
or
adc
jae
push
icebp
sub
xchg
add
loope
pop
xchg
inc
std
adc
clc
jbe
push
inc
or
add
cmp
mov
mov
cli
push
out
int
div
or
lret
imul
aam
ficompl
inc
mov
loope
hlt
inc
mov
sbb
dec
jg
cmp
dec
sbb
mov
pop
cmp
dec
adc
inc
mov
lods
mov
sbb
aaa
pop
xchg
xchg
insl
dec
jg
mov
cwtl
mov
xor
stc
fmul
and
scas
into
push
mov
mov
fwait
cli
out
mov
push
sub
and
pop
lcall
imul
enter
pop
scas
xor
inc
rcll
xor
xchg
jae
test
loop
sub
pop
iret
mov
cmpsb
loope
daa
out
mov
addr16
and
inc
add
pop
stc
jmp
xchg
and
jbe
icebp
aam
scas
add
out
das
jmp
xor
aam
pop
pushf
mov
iret
cmpsl
aaa
mov
lahf
add
xchg
lods
and
mov
adc
scas
inc
mov
lock
les
ret
cmp
inc
mov
jle
stos
jge
popf
repz
roll
mov
rcll
mov
jo
mov
dec
xor
lods
or
int
jo
pop
das
mov
cmpsb
jmp
jecxz
mov
mov
adc
and
scas
xchg
push
xchg
push
cmpsl
push
fs
insl
push
jns
mov
dec
inc
cmpsb
ret
into
cmpsl
push
adc
xchg
mov
sub
bound
push
inc
out
mov
movsl
adc
cmp
xor
hlt
xchg
and
xor
cmpl
ret
add
out
test
lock
dec
icebp
ss
xchg
add
xchg
add
pushf
in
pusha
cmc
imul
test
fidivl
mov
fistpl
mov
aas
lahf
push
inc
jmp
outsb
lods
fidivrs
aas
and
sub
cld
inc
xchg
testl
addr16
jecxz
add
mov
fildl
pop
jo
imul
mov
mov
scas
cmp
lret
jmp
fwait
movsb
mov
fwait
push
ds
inc
mov
daa
pop
dec
cmp
cmp
jo
xchg
pop
aaa
popa
divl
push
mov
mov
cs
insl
arpl
ja
dec
push
pop
popl
sub
shll
push
add
mov
mov
mov
out
fcmove
pop
inc
scas
push
in
cmp
adc
test
imul
nop
jae
ljmp
cmp
cs
jecxz
sbb
sub
push
cltd
push
jl
pop
and
sahf
int
lahf
jecxz
divl
cli
adc
imul
xor
fisubs
jns
das
rcrl
enter
fsubrs
lcall
xchg
cmp
add
jb
lea
jbe
push
cmp
cmp
out
je
ljmp
ja
add
push
pusha
aaa
pop
push
test
cmp
xchg
xor
add
cmc
loope
mov
inc
in
into
loopne
stos
mov
popa
dec
repnz
mov
fadds
jmp
sahf
jg
insl
push
xor
in
outsl
mov
mov
push
dec
rorl
pop
mov
add
mov
cmp
ss
add
inc
inc
adc
mul
cli
out
aaa
xchg
enter
xlat
aaa
push
pushf
out
jle
mov
jmp
inc
pop
mov
add
notb
daa
pop
imul
sbb
divl
sbb
xchg
mov
inc
inc
mov
xchg
les
pop
mov
push
pop
jae
subl
sbb
shr
inc
shl
popf
mov
outsb
sarl
int
cs
inc
xchg
inc
jl
jmp
add
aad
enter
sti
mov
ss
int
add
js
scas
imul
pop
in
mov
ja
andb
add
flds
inc
scas
out
lahf
scas
sub
push
lea
mov
inc
or
jle
sub
dec
dec
xor
push
dec
ja
cmp
notl
dec
and
out
inc
dec
jmp
cmp
pop
cmp
adc
xlat
xor
ja
les
cmp
stos
dec
mov
shl
or
in
int
data16
cmp
shl
add
insl
mov
call
push
adc
jo
enter
cltd
cmp
mov
adc
iret
lret
inc
in
rcll
aaa
cmc
jmp
out
out
jl
insb
mov
push
in
push
gs
mov
into
daa
cli
dec
not
or
ja
mov
iret
adc
pop
pop
lea
jg
insb
jb
push
ja
nop
fcoml
add
push
jecxz
xchg
pop
pop
push
mov
push
pop
ds
test
sahf
lret
incl
jnp
jbe
push
pop
dec
stos
dec
nop
dec
pop
and
pop
mov
ds
into
inc
mov
adc
into
and
or
dec
add
cmp
or
mov
push
mov
xchg
or
mov
lcall
movsl
cmp
mov
xlat
mov
mov
cmp
mov
sub
lret
cmpb
mov
mov
add
xlat
pop
mov
adc
popf
sbb
loop
enter
enter
fistl
mov
adc
out
push
push
mov
scas
lods
mov
pop
add
jg
dec
lods
jns
lods
loope
and
ljmp
out
cmp
mov
test
mov
cmp
add
inc
pop
daa
add
xlat
xchg
add
cmp
cld
les
or
inc
adc
fstps
cmpsb
mov
sti
jns
outsl
fsubrs
sahf
xchg
lods
mov
popl
xchg
call
mov
push
or
outsb
pop
pop
jge
jne
mov
adc
or
lcall
subl
and
rep
sbb
iret
jmp
stos
and
cmp
hlt
in
sub
adc
jae
inc
lds
leave
pusha
jmp
call
add
pop
jb
insb
into
pop
repz
mov
sub
test
mov
cmpsl
hlt
xchg
mov
shrl
stos
out
and
dec
dec
idivb
inc
and
repnz
mull
push
jge
leave
push
les
xor
mov
ds
lods
push
pop
jecxz
ret
nop
lret
lea
dec
rcll
mov
sbb
jae
adc
add
and
test
loop
negl
ds
rolb
fimuls
call
test
inc
outsb
andb
sbb
push
sbb
pop
mov
mov
ret
dec
nop
scas
inc
sub
sbb
addl
and
arpl
cmpsl
test
mov
xchg
xchg
fwait
mov
fst
sahf
fidivl
scas
inc
jl
push
idiv
lock
lods
jns
dec
popa
push
stc
in
mov
jae
add
sub
cs
push
lock
cmp
jge
adc
push
jb
xor
adc
adc
jg
les
add
lock
jbe
inc
cwtl
jl
cmpsl
je
or
mov
scas
mov
pop
pop
cmp
ret
sbb
mov
adc
push
sarb
add
call
xchg
popl
cli
mov
sbb
incb
rcrb
and
leave
int3
pop
cld
mov
inc
pop
add
xchg
ret
pop
cwtl
push
test
jmp
sar
inc
mov
adc
jg
fstl
jecxz
idivl
cld
outsb
push
mov
lods
jno
into
mov
stos
lock
push
cmpsl
adc
aad
dec
push
sub
jo
inc
dec
inc
mov
adc
lcall
pushf
cmpsl
push
aas
xor
xorl
sub
xor
jmp
bnd
cli
xor
cli
adc
sbb
xchg
ja
mov
ret
xchg
out
pop
das
std
jl
add
sub
add
dec
xchg
adc
mov
sbb
cmp
mov
fnsave
outsb
dec
push
shlb
cmp
push
pop
jb
add
icebp
cmp
push
imul
add
mov
lcall
cmpsl
mov
xlat
adc
cmp
dec
sbb
icebp
mov
into
cmp
lock
mull
xrelease
int3
fadd
outsb
cmp
cwtl
mov
out
popa
fadds
adc
mov
mov
call
loope
and
add
ds
or
es
pop
repnz
popa
es
aam
or
push
sub
lds
dec
dec
dec
pop
cmp
pop
test
jbe
cmp
in
add
mov
jne
gs
cmpsb
int
push
mov
repnz
roll
das
aad
arpl
xlat
inc
fdivs
push
es
cld
insl
mov
outsb
or
gs
inc
jae
scas
lea
loop
lret
xchg
sarb
mov
jmp
int3
in
stos
sti
add
outsw
jno
outsl
mov
adc
mov
mov
frstor
inc
sub
les
fwait
mov
je
aad
dec
dec
sub
in
out
pop
insl
sbb
xlat
adc
xchg
adc
sbb
dec
push
lcall
mov
pop
mull
mov
pop
paddd
leave
es
xchg
cmpsb
mov
fiaddl
push
icebp
adc
push
pop
call
mov
gs
xchg
leave
cmp
dec
xchg
sbb
cltd
cmp
jle
fistl
adc
jno
ficompl
push
into
sub
sub
clc
icebp
aad
push
mov
ljmp
jecxz
and
fs
add
xor
movsl
adc
fwait
stos
jmp
aaa
test
cmpl
inc
aas
lods
ja
lcall
xlat
nop
fwait
or
pop
les
pushf
popa
fdivrs
fdivr
pop
cwtl
es
jp
xchg
inc
loope
jnp
cmp
hlt
adc
int
fsubl
arpl
push
mov
lods
jbe
push
iret
sbb
add
mov
sbb
and
push
rcr
cli
icebp
mov
sti
and
in
cltd
rorl
ljmp
repnz
cli
lea
pop
sub
lods
test
xchg
inc
sub
mov
pop
ds
repz
ljmp
hlt
or
push
jl
cmp
mov
push
or
dec
sarb
jae
or
mov
das
adcb
or
les
dec
mov
push
mov
stos
std
mov
mov
sbb
or
fs
cmp
daa
rcll
push
inc
jo
out
pop
xlat
lds
or
mov
cmp
notl
pusha
push
push
cmp
inc
out
or
push
mov
test
ja,pt
in
and
jmp
lcall
roll
aad
je
fildl
xchg
clc
jl
inc
sub
push
sub
mov
aaa
out
inc
aam
add
loopne
lret
data16
xor
pop
and
xlat
push
aaa
cmovnp
cltd
hlt
xor
or
gs
sub
nop
orl
or
jns
pop
mov
inc
xchg
cmp
ja
fwait
sbb
mov
and
inc
scas
cmp
lret
jp
arpl
call
inc
cmc
out
and
and
xchg
mov
in
clc
fistpll
stc
or
fldenv
xchg
clc
mov
push
int
xchg
inc
pop
fnsave
add
movsb
leave
mov
mov
jb
mull
push
call
jmp
or
mov
in
jae
adc
push
adcl
hlt
push
movsl
pushf
out
popf
cs
loope
out
test
push
sbb
aaa
mov
sub
rolb
sub
inc
stc
mov
adc
jne
sub
jno
push
mov
xchg
sub
and
sbb
je
lret
add
pop
pushf
and
loope
mov
fidivl
das
or
fidivs
mov
xchg
xchg
mov
aad
jmp
push
jae
xor
rolb
imul
loop
jnp
xor
shlb
jno
je
shlb
aad
xchg
pop
fsubrs
ds
popa
xor
out
xor
sub
sbb
pop
addb
adc
sub
lahf
icebp
fldl
js
sahf
inc
xchg
or
sub
jno
push
inc
sbb
lds
jbe
push
push
ljmp
ljmp
push
pop
scas
dec
lahf
and
lcall
loope
xchg
stc
adc
mov
jae
dec
mov
sub
jge
adc
sti
in
push
sub
or
adc
xor
pop
cmp
inc
cltd
jecxz
rcrb
stos
pavgw
lods
addl
leave
mov
sub
into
inc
daa
cli
mov
xchg
subl
dec
xchg
nop
pop
jg
jge
pop
pop
ret
jne
adc
xlat
pop
jno
dec
dec
add
mov
mov
mov
scas
mov
xor
and
test
add
pop
fld
dec
push
cmp
sub
aad
imul
jmp
std
jne
dec
int3
fldl
push
stc
mov
call
adc
movsb
xchg
enter
shl
ljmp
mov
cwtl
or
and
jl
cld
jns
add
mov
fwait
add
fistl
jmp
sbb
add
in
pop
sub
pop
cld
es
mov
cmp
in
or
fcmovbe
pop
subb
ss
aas
and
jne
inc
push
or
xchg
mov
jbe
jmp
cmp
jns
ficomps
and
jle
ljmp
lods
ja
push
lods
jecxz
jge
add
lea
sub
mov
dec
ret
lcall
mov
rclb
push
aaa
int
push
dec
push
cld
repz
mov
cmc
leave
dec
push
lds
mov
mov
and
out
jmp
outsb
cld
pop
add
xor
push
test
sub
adc
mov
int3
ja
lret
xchg
xchg
push
ret
imul
lret
xchg
fs
and
xchg
adc
test
ljmp
dec
mov
test
sbb
xor
ret
jnp
es
loope
cwtl
orl
fstpt
shlb
sbb
push
lods
and
sbb
dec
dec
jne
sub
jae
clc
scas
xchg
cmp
out
dec
gs
cld
cmp
test
adcb
xchg
xchg
add
imul
int
or
jne
pop
lock
cli
mov
scas
cmp
pusha
sub
stos
faddp
and
or
or
insl
add
jbe
mull
mov
or
mov
mov
sub
fistl
mov
jp
imul
into
lods
and
push
mov
dec
push
mov
push
jne
mov
adc
lret
mov
xor
dec
popa
push
mov
cmp
push
scas
shrl
mov
popf
xlat
movsb
pop
mov
xchg
shl
lret
movb
jp
inc
xchg
add
jnp
xchg
cmp
xchg
jns
xor
push
je
rcrl
imul
aaa
fadds
jge
xchg
jge,pn
cmp
iret
inc
xorb
jecxz
add
imul
fwait
jnp
add
ja
scas
or
or
aaa
sub
cmp
xor
outsb
movsb
inc
movsb
ss
mov
jle
imul
pop
push
push
inc
mov
movsl
ds
ja
xor
push
inc
cs
cmpsb
or
stc
bound
out
into
adc
test
mov
fcom
add
mov
cmpsl
shlb
jns
pop
xchg
mov
push
dec
jo
stos
cmp
jg
mov
aad
push
pop
xchg
orl
jmp
lea
xor
loopne
dec
mov
into
fidivs
push
push
inc
lods
ss
push
das
fcmovnb
shll
mov
loope
inc
inc
cmc
cli
fs
adc
push
jo
ficompl
pop
mov
mov
mov
es
jbe
and
pop
mov
pop
lret
incb
xchg
loope
cld
fs
neg
add
in
dec
lcall
pop
rclb
pop
jns
cmp
dec
adc
lds
out
jo
push
shrb
or
mov
call
imul
movsb
rclb
repnz
stos
and
pop
pop
sub
mov
mov
pop
lea
jbe
xchg
and
outsl
sub
popf
mov
xchg
sbb
fisttpll
lret
addl
inc
push
adc
pop
rolb
or
add
es
lods
out
dec
adc
cli
jb
and
lods
mov
ss
pushf
leave
push
call
into
mov
data16
and
fdivrl
push
scas
add
dec
add
xchg
aad
into
mov
sahf
fdivrs
fisubl
adc
mov
movsb
dec
outsl
mov
cwtl
out
inc
cmp
aam
mov
or
mov
mov
nop
hlt
push
mov
sti
and
scas
or
xor
sub
lret
nop
in
pop
pop
add
insb
xchg
push
mov
push
pop
sub
subl
mov
std
aaa
ficompl
push
call
rorl
mov
fwait
mov
and
add
subl
pop
adc
jp
push
jle
push
popf
call
pop
cltd
subb
and
ljmp
or
lea
mov
cmpsl
push
jmp
and
dec
cltd
cli
enter
jo
out
pop
lea
jbe
cmp
cld
cmc
js
daa
fldt
push
out
pop
pop
jns
icebp
xor
ds
push
fwait
cmp
cs
add
push
push
xorl
sub
in
clc
mov
fdiv
rorb
pop
pop
shll
js
add
loope
fs
and
add
testl
push
out
inc
push
popa
mov
jne
jae
jge
push
mov
repz
mov
push
pop
lea
fwait
jnp
push
mov
ret
inc
popf
jns
push
inc
and
test
adc
and
scas
dec
mov
sahf
xor
cmp
jl
test
rcrl
sub
and
xor
pop
inc
sub
mov
fmull
sbb
xchg
or
jmp
mov
imul
movsl
subl
mov
scas
rcll
ret
push
push
aaa
mov
xor
pop
sbb
testb
lcall
and
lahf
push
and
into
enter
mov
jecxz
cmc
xchg
mov
aam
xchg
jg
add
mov
push
mov
xchg
pop
mov
jb
dec
out
inc
mov
mov
js
mov
xchg
and
mov
mov
push
jmp
mov
arpl
jne
mov
add
or
fxch
lea
fsubrl
je
repz
add
sbb
jbe
mov
xor
pop
mov
jns
ss
push
add
adc
call
push
ret
arpl
xor
push
test
repz
sar
insb
push
rcrb
nop
xor
clc
test
ss
dec
std
out
popa
mov
dec
and
dec
mov
mov
stc
test
gs
sbbl
repnz
faddl
add
nop
inc
push
int
ret
lret
mov
pop
xlat
xor
dec
orb
sbb
iret
jne
push
aad
pushf
add
mov
movsl
clc
or
cwtl
dec
aas
test
mov
mov
stos
cmpl
sbb
lea
push
shrb
pop
negl
mov
imul
fists
jmp
cwtl
lret
push
push
sbb
into
xor
push
adc
loop
sti
sub
xchg
add
dec
call
add
repnz
dec
sbb
inc
enter
adc
stos
js
push
stc
adc
mov
iret
cmp
xor
mov
lret
popa
mov
mov
or
mov
pop
or
add
lea
xor
cmp
xchg
iretw
mov
adc
mov
cmpsl
enter
jecxz
xlat
ja
mov
nop
add
les
ss
jo
stos
inc
cmp
jecxz
push
xchg
loop
mov
cmpsl
xchg
xchg
pop
orl
mov
mov
push
lock
ds
sbbb
mov
out
cli
mov
adc
jg
jnp
jp
push
bound
out
push
and
sub
cmp
nop
std
jg
daa
iret
xor
jecxz
scas
jp
sub
push
add
outsl
cmp
loopne
aaa
add
sub
repnz
xchg
cli
repz
repz
dec
data16
xor
push
or
sub
fcmovnb
sub
jecxz
push
push
sar
mov
je
fisttpl
sti
ret
jmp
int
push
sti
arpl
push
pop
loop
cmc
pop
aad
and
inc
les
adc
sbb
jle
pop
hlt
xchg
pushf
adc
js
ret
jl
clc
notb
xor
cld
mov
or
lea
mov
dec
sbb
push
clc
jno
insl
gs
lret
popa
out
add
rcrl
dec
pusha
jp
and
push
aas
fstpl
les
fildl
into
rcrb
sbb
pop
gs
dec
outsb
test
dec
mov
addr16
cmp
mov
xor
inc
mov
pop
pop
fs
pop
fldcw
add
pushf
xchg
push
imul
fwait
outsl
icebp
sbb
stos
xchg
in
popl
addr16
pusha
jge
das
jns
lahf
fists
pop
loope
mov
push
out
clc
shrl
std
sbb
xor
cmp
std
pcmpeqb
dec
into
pop
aad
shll
inc
into
push
xor
out
clc
jbe
or
push
push
and
adc
mov
in
mov
shll
jg
pop
push
xchg
push
jbe
dec
leave
std
or
push
stc
negb
jnp
dec
shlb
ja
push
pop
insl
out
fwait
jl
cwtl
mov
inc
or
out
repnz
iret
pop
jnp
jno
or
cmp
add
into
push
cmpsl
jb
pop
addr16
movsb
arpl
lahf
stos
pop
pop
out
popf
inc
adc
push
jae
ret
ss
xchg
inc
popf
xchg
nop
lcall
xchg
jae
aam
test
xor
incl
pop
mov
clc
leave
cmp
ds
popf
out
cld
xor
and
mov
cltd
mov
mov
fisubl
leave
popa
jmp
xchg
sti
sub
insb
sbb
movsl
mov
lcall
add
popf
pushf
pop
cs
dec
bound
push
sbb
xchg
fcoml
or
aam
sbb
mov
pop
jnp
inc
nop
cwtl
push
scas
and
sbb
fdivr
shrb
popa
test
adc
cmpsb
pop
push
sub
test
nop
jg
out
fs
and
mov
mov
adc
ret
jg
xor
jmp
cmpsl
xchg
lcall
cmc
ss
aad
mov
imulb
pop
mov
rcr
adc
pusha
je
cmc
xchg
adc
std
jae
inc
or
or
in
movsb
xor
inc
cmpsb
xchg
or
mov
sbb
mov
xor
or
rcll
leave
mov
lock
loope
push
inc
xchg
pop
mov
repz
outsl
pop
push
xor
aad
int
repnz
out
mov
lret
mov
cwtl
mov
sub
xor
push
and
cs
jb
sbb
sub
fiaddl
push
or
stc
push
or
enter
gs
outsl
or
outsl
mov
adc
aas
dec
add
cmp
xor
push
lods
cmc
jecxz
iret
popa
cmp
xor
xchg
sub
push
sbb
push
stos
push
cld
jno,pn
mov
ds
jge
aam
sahf
and
insl
push
or
jne
movsb
xchg
ja
stc
fcomip
imul
ja
cmp
sbb
sbb
and
mov
test
mov
insb
inc
and
scas
xlat
pushf
mov
je
ret
mov
sbb
mov
fnstenv
adc
adc
dec
pushaw
sbb
inc
add
sbb
cmpsl
bnd
push
aad
mov
addr16
sub
shll
rorb
add
je
call
in
xchg
pop
pushf
loop
xchg
ret
pop
fisttpl
inc
push
call
and
push
iret
andl
dec
out
inc
or
mov
sbb
lcall
clc
xor
ret
outsl
and
nop
mov
mov
xor
pop
add
mov
mov
sub
mov
jo
stos
icebp
dec
sahf
xorb
xlat
icebp
push
push
mov
xchg
cmc
and
int
sahf
cmp
out
sbb
xchg
cmp
imul
imul
pop
push
gs
test
loope
dec
jo
jae
mov
cltd
xor
xchg
sti
and
xor
jl
xchg
dec
add
adc
sbbb
jle
pusha
mov
jmp
inc
test
dec
loopne
or
in
or
test
dec
mov
stos
mov
push
fcmovnu
bound
add
pop
cli
test
in
repnz
subb
sub
adc
subb
out
dec
aam
push
sub
ss
std
push
pop
mov
fcmovnb
pop
dec
jmp
sub
jno
aad
aad
inc
add
notb
adc
or
inc
jl
pop
cmpsb
inc
or
inc
ja
mov
push
dec
add
push
scas
xor
push
xchg
and
sbb
and
cmpsl
dec
jmp
shll
cltd
jno
dec
test
cwtl
clc
adc
mov
fimull
pushf
adc
add
add
inc
mov
mov
mov
int
push
in
aaa
jb
sbb
orb
stos
jl
xchg
adc
or
stos
mov
inc
out
adc
lods
push
xchg
loopne
sub
adc
frstor
scas
jg
loope
cmp
push
xor
enter
rcrb
data16
enter
add
jge
enter
pop
ret
cmp
sbb
lcall
adc
cld
insb
out
imul
cmpsb
push
sbb
adc
cmp
cmp
mov
js
mov
push
cld
jecxz
loop
sub
ss
loopne,pt
adc
test
or
call
jge
sub
int
adc
insl
and
icebp
add
dec
mov
fsts
dec
hlt
ret
add
popa
jae
inc
outsl
sbb
dec
decb
cmp
loope
inc
shl
sub
inc
lret
scas
ficoms
lock
push
lds
and
lds
dec
dec
sti
hlt
xor
fs
mov
hlt
fprem1
adc
dec
popf
out
iret
mov
in
test
cmp
add
repnz
insb
sub
mov
dec
shl
mov
sti
jnp
sub
jb
xor
push
adc
xlat
dec
xchg
inc
into
pop
mov
mov
or
js
add
sbb
jg
mov
lea
aas
es
mov
cli
and
cmp
jge
icebp
mov
les
xchg
push
mov
xchg
xchg
add
lods
pop
pop
xchg
cmpsb
sub
cs
adc
int
jmp
les
out
sbb
push
or
xchg
mov
and
sti
aam
mov
mov
inc
rorl
jb
je
sub
loop
and
jno
cmp
and
bound
mov
loop
loop
ss
mov
or
dec
sub
iret
clc
push
sbb
movsb
push
fwait
xchg
rorl
leave
daa
fmul
sbb
pop
jge
cmp
or
pop
aas
fadds
loopne
cmp
pop
xchg
jmp
ljmp
fs
syscall
rcrl
or
sub
enter
cli
push
outsb
adc
adc
nop
mov
sbb
movsl
fwait
stos
jbe
mov
or
push
iret
stos
lods
repz
adc
and
insl
jns
mov
push
mov
test
in
xchg
jae
out
push
jge
push
add
mov
bound
push
push
ljmp
movsb
mov
dec
sub
mov
aas
stos
push
xchg
sarl
push
addr16
test
fidivl
mov
es
mov
ljmp
test
inc
push
daa
xor
push
ljmp
xchg
and
mov
inc
mov
int3
jb
stos
repnz
shlb
xchg
fmul
sti
lock
in
xchg
imulb
mov
push
les
retw
int
daa
xor
mov
rorb
test
mov
xchg
in
xor
inc
mov
lods
mov
push
in
xchg
add
pop
loopne
push
in
pop
pop
mulb
lret
je
dec
ljmp
inc
addr16
xchg
inc
jle
inc
push
push
add
inc
jmp
cmc
lock
push
arpl
fbstp
jns
pushf
out
jnp
xor
mov
pop
lock
shll
icebp
jbe
xchg
adc
subb
lds
pusha
roll
out
or
aas
adc
das
jo
sub
mov
repnz
pop
pop
and
ret
pushl
xchg
add
fildll
je
jb
mov
cltd
push
es
fsubp
or
xchg
loopne
cmp
outsl
ret
lret
xchg
jnp
jge
inc
repz
imul
mov
mov
cli
movsb
lods
mov
pop
lods
arpl
ss
lahf
lret
pop
es
loop
mov
cltd
js
push
into
mov
sarl
int3
mov
xor
cmpsb
mov
gs
push
mov
mov
mov
scas
push
fyl2x
insl
sub
xchg
mov
repz
fildl
jns
aad
or
in
sbb
xorl
or
sbbl
adc
fcomps
std
scas
push
or
fisttps
mov
sub
add
pop
out
pushf
xchg
stos
add
jb
sbb
testb
arpl
sub
gs
sbb
mov
sub
and
test
pop
stos
stos
xchg
ret
repnz
rol
jmp
fsub
xchg
enter
adc
mov
cli
ret
and
fxch
test
add
scas
addr16
jmp
movsb
subl
jecxz
into
shl
and
js
sbb
sub
xchg
stos
insb
fsubr
sub
imul
pop
sub
stc
rolb
daa
inc
mov
jmp
lret
outsl
fcom
repz
imul
add
nop
repnz
rorl
jnp
sub
std
sahf
push
hlt
fisubrs
test
xchg
aad
popf
and
and
sar
pop
test
daa
xor
inc
jb
mov
int
push
lret
test
sbb
ljmp
leave
push
push
dec
mov
je
inc
jo
add
jo
mov
test
movsl
aas
sbb
ror
push
cwtl
stc
or
cmc
xor
test
pushf
lds
out
scas
or
loop
insb
dec
xchg
or
test
loope
add
xchg
dec
pop
enter
add
inc
sbb
mov
cmp
enter
lods
pop
stc
jnp
mov
ljmp
faddp
or
in
jmp
pop
ss
or
add
adc
lcall
test
cmpsl
cwtl
mov
scas
xlat
and
push
jp
jo
repz
mov
xchg
inc
xchg
out
gs
or
rolb
cmp
and
mov
pusha
cmpsb
js
add
xor
sub
push
jb
movsl
inc
dec
dec
insb
insl
cmp
fisttps
subl
lahf
outsl
jg
sarl
jne
cmp
repz
mov
xlat
adc
adc
jo
inc
inc
xor
call
and
lcall
imul
dec
pop
hlt
push
sbb
pushl
mov
test
xor
xor
out
es
mov
adc
notl
mov
jno
mov
push
leave
mov
xor
stc
inc
and
pushf
cld
add
jp
cli
stos
push
test
cmpsb
cmp
aas
sti
and
or
pushf
loopne
mov
or
lret
scas
popf
pop
icebp
and
pop
movsb
dec
push
stos
daa
add
xchg
aaa
sbb
out
cltd
aas
pop
dec
into
in
xor
rorb
or
scas
stos
inc
cwtl
mov
sub
loop
out
sbb
pop
int3
dec
mov
xor
int3
xchg
sti
in
arpl
popa
rcrl
jae
nop
inc
inc
jecxz
outsb
push
mov
xchg
sub
add
enterw
call
cmpsb
xchg
dec
stos
and
jl
mov
cli
in
lcall
jge
fs
jmp
add
xchg
mov
dec
sbb
pop
dec
cmpsl
ljmp
and
imulb
xor
jne
and
sub
loope
test
inc
jmp
jmp
xchg
adc
xor
add
add
in
hlt
xchg
test
mov
mov
int3
shl
leave
test
mov
sahf
ss
cli
dec
aaa
xchg
jno
stos
popf
jb
fnstenv
ds
pop
jmp
pop
test
jne
mov
loope
addr16
adc
pop
sbb
hlt
in
es
cmpsb
dec
int3
or
stos
cmp
cld
ds
or
cmp
and
cli
addr16
lcall
cli
push
mov
pop
cmp
stos
sbb
in
mov
ds
jnp
pop
lods
inc
adc
and
mov
or
orb
iret
pop
adc
aas
xchg
or
inc
push
loop
sbb
xchg
jae
fsubrl
mov
in
imul
dec
hlt
adc
jl
or
sar
repnz
jle
data16
sbb
jo
dec
es
jmp
cmp
movsb
lcall
mov
lds
fcoms
sub
daa
imul
xorl
push
gs
inc
in
xchg
xchg
imul
aas
cmp
dec
stos
add
inc
mov
roll
add
jae
lret
out
pop
cmpsl
mov
in
dec
jo
inc
adc
repz
iret
out
push
imul
fisubrl
movsb
jo
push
mov
sub
push
fbld
imul
xchg
fiaddl
push
stos
int3
xchg
ds
ret
sub
je
add
addr16
push
xlat
cmc
pop
inc
das
loop
jns
jbe
in
adc
cmp
push
gs
pusha
add
or
repz
sar
aam
mov
add
rorl
pop
shlb
add
sub
add
and
dec
in
dec
sbb
out
adc
popf
das
jg
test
test
and
fistpll
sub
test
mov
les
fisttps
jmp
pop
test
cmc
cs
fsts
push
pop
or
imul
xchg
add
rorl
ss
xchg
repz
mov
mov
fists
fldt
lods
gs
mov
pop
lahf
hlt
or
fs
pop
push
shrl
testb
pop
movzbl
pop
popf
jp
clc
lods
loopne
ja
cmp
xchg
xor
jo
pop
inc
pusha
cmp
mov
mov
jl
lret
jmp
pop
fcompl
add
imul
int
repnz
mov
pop
sti
jl
sti
rol
sub
aas
sub
iret
sti
inc
clc
stos
les
loopne
dec
mov
mov
add
imul
ret
mov
pop
xor
shll
ja
jb
mov
fst
push
sub
loope
dec
divl
cmp
jo
cs
test
xchg
or
jmp
xchg
sbb
jg
or
inc
out
rcr
dec
inc
sarl
int3
and
rorb
xchg
cmpsb
add
and
adc
imul
rcr
int3
or
scas
out
arpl
std
bound
or
in
andb
mov
outsb
mov
add
or
test
jmp
inc
add
lock
ss
adc
xor
movsb
mov
xor
pop
cmpsl
cli
adc
jae
adc
mov
push
xor
insb
sbb
add
sbb
in
mov
cmp
scas
in
dec
jl
jo
nop
jb
xchg
or
iret
pop
mov
or
btc
lahf
icebp
adc
imul
xchg
punpcklbw
push
sti
cli
mov
stos
js
cmpsb
test
jge
ja
addl
add
pop
test
xor
pushf
mov
fstl
jecxz
mov
push
stos
int
andb
insb
int
cmp
push
in
jmp
mov
mov
mov
lcall
mov
test
inc
ja
push
rcrl
mov
push
rcll
add
jno
xor
or
popf
out
addr16
dec
lods
pop
add
mov
mov
dec
mov
xor
jno
and
pop
push
and
hlt
jmp
aaa
xchg
in
fisubrl
xchg
pop
loope
mov
push
shrl
mov
jp
ficompl
adc
sbb
daa
js
arpl
xchg
cmpsb
addr16
pop
int3
cli
ss
mov
xchg
and
pop
jecxz
push
int
daa
es
ja
fcompl
add
add
ret
sub
ljmp
push
mov
sub
das
or
sub
icebp
stos
movsl
nop
mov
push
icebp
xlat
mov
lods
frstor
cmpsb
mov
iret
adc
enter
mov
adc
mov
bound
aam
adc
loope
loope
cwtl
pop
lods
dec
push
jl
dec
push
and
mov
in
mov
int
xchg
jo
adc
jl
mov
outsl
inc
out
ret
out
in
mov
mov
sbb
and
push
and
pop
or
mov
ret
jae
leave
pop
lret
ds
fcoml
add
dec
std
data16
call
lahf
outsb
hlt
dec
aad
lcall
loop
lcall
add
leave
pop
lods
adc
je
cmp
mov
loop
dec
and
jle
sbb
mov
ss
mov
jns
and
jmp
push
aam
mov
push
mov
push
test
cltd
sub
loope
inc
xchg
xor
push
lods
in
sbb
clc
sbb
ss
push
cltd
sbb
cmp
fcmovu
scas
jecxz
mov
xchg
sub
push
xor
out
and
or
dec
call
movl
ret
sahf
mov
adc
cmp
fidivrl
insb
push
and
push
int
lcall
pop
mov
cltd
xlat
shll
jb
icebp
fadds
cwtl
adc
out
stos
inc
stos
jge
and
pop
push
aam
je
int
mov
inc
pop
lods
and
popf
add
js
mov
sub
out
bound
je
dec
shlb
mov
gs
inc
int3
mov
push
cli
outsb
loop
mov
xor
gs
clc
push
out
pushf
mov
orl
ja
mov
mov
jle
mov
andb
xchg
jmp
jecxz
jg
xchg
adc
sbb
icebp
loope
jns
mov
cltd
je
stos
mov
sbb
xchg
add
jbe
push
out
sti
adc
outsb
aam
in
sub
dec
add
jge
jne
in
cmp
movsb
lds
cld
inc
add
mov
stc
xchg
push
or
insb
push
lods
stc
test
cmc
pusha
in
xor
dec
mov
inc
push
inc
push
test
shl
out
mov
adc
les
test
scas
jae
cltd
clc
out
adc
rorl
mov
sbb
sub
mov
jle
enter
xchg
into
or
stos
mov
push
add
mov
out
pop
test
mov
fldl
inc
orb
icebp
push
pop
pop
xorb
mov
adc
mov
mov
mov
mov
fcomip
adc
inc
inc
mov
addr16
cmp
rep
movsb
pop
jle
test
jmp
xchg
mov
push
cmpsb
inc
cltd
insb
pop
sub
in
pop
adc
mov
dec
sbb
std
mov
cmc
sub
rcll
pop
loop
mov
imul
pop
mov
rol
xchg
xchg
addl
icebp
pop
mov
pusha
jno
ds
xchg
ljmp
shll
scas
data16
enter
mov
mov
outsb
stos
stos
mov
pusha
or
add
inc
je
add
loop
jp
pushf
pusha
jbe
lret
bound
push
imull
push
ss
xchg
aam
mov
test
scas
aad
jb
outsb
scas
or
maskmovq
notl
sbb
xchg
fldt
and
aas
xchg
pushf
test
mov
pop
mov
ljmp
stos
inc
and
cmp
mov
cmp
jno
or
out
fxam
add
mov
push
inc
testl
movl
shrl
jl
idivb
xchg
jbe
add
jecxz
das
sti
ret
push
push
test
movsl
jnp
arpl
test
jg
scas
ja
mov
pop
nop
out
test
sub
cltd
shlb
push
jecxz
mov
mov
shlb
mov
adc
inc
test
push
jp
aam
scas
frstor
jnp
mov
scas
or
ds
clc
out
nop
jno
and
aad
pmullw
in
dec
push
aad
inc
sbb
mov
stc
mov
es
imull
or
mov
mov
mov
std
scas
inc
xchg
rcrb
cmp
adc
add
pop
rolb
or
and
aam
int
dec
and
mov
in
aad
xor
pop
cmp
sub
nop
scas
dec
loopne
add
add
and
add
pop
mov
inc
hlt
cmp
mov
outsl
insb
mov
xchg
rorl
mov
movsl
jecxz
lds
push
in
inc
aam
icebp
and
lds
adc
rcrb
and
cmp
dec
out
test
xor
rolb
add
lds
fists
popa
test
sahf
inc
xorb
testl
in
push
frstor
sti
xorl
in
sub
stos
rorl
cmpsb
and
in
xor
es
pop
xor
pop
stos
pusha
in
xor
out
pushf
jle
imul
pop
xlat
sbb
push
lret
sbb
ret
cwtl
push
xchg
dec
push
jecxz
pop
and
sbb
adc
es
or
ret
outsb
jmp
xchg
es
push
or
mov
sub
cmp
cmp
push
mov
in
and
cmp
test
fwait
mov
push
xor
xlat
ss
call
push
js
cmpsl
add
je
mov
jns
xlat
movsl
retw
mov
rcll
cli
mov
pop
fucomp
negb
in
in
stos
ja
ss
xchg
add
cmp
fsubl
mov
mov
dec
push
and
scas
lds
push
xchg
mov
stos
push
mov
pop
lock
lret
xor
mov
imul
sub
insl
mov
into
xchg
popf
or
test
adc
jle
sarb
int
cltd
movsb
xchg
fnstsw
cmpxchg
std
lahf
lahf
or
fldt
sub
pop
mov
aad
or
inc
and
pusha
aaa
fucomi
imul
push
push
inc
ljmp
jp
daa
adc
jb
dec
xchg
xor
mov
adc
gs
loope
pop
rcr
test
jb
call
movsl
mov
arpl
mov
test
mov
sbb
out
nop
dec
test
pop
mov
cmp
inc
add
jb
pop
lcall
in
sub
fs
shll
dec
fsubl
xchg
pop
jno
lcall
fcoml
jae
dec
mov
scas
aaa
cmp
and
sub
mov
jns
pushf
call
jns
pushf
dec
hlt
push
or
xlat
mov
cmp
or
pop
das
and
out
shl
out
es
xor
xor
or
pop
sti
jmp
cmp
pop
xchg
lods
clc
sub
mov
or
cmp
xor
sbb
add
adc
push
ja
arpl
imul
mov
mov
data16
add
jp
movl
mov
and
push
scas
push
mov
sub
pop
icebp
sub
cmpsl
cmc
int
movsb
or
or
imul
inc
jg
cwtl
loopne
push
popa
call
mov
in
fistl
cmp
mov
jle
into
lret
sub
mov
push
or
out
or
push
mov
pop
sub
inc
mov
jecxz
jb
sbbb
ret
sbb
dec
cmp
idiv
addr16
js
ja
fisubrl
sub
add
cltd
pop
mov
int3
or
mov
cmpsl
adc
scas
sbb
testl
pop
xchg
adc
aam
outsl
js
cwtl
stc
fsubl
sbb
stos
push
mov
dec
mov
out
push
addr16
jae
xor
jl
mov
in
cltd
inc
jne
mov
das
faddl
mov
fwait
popl
and
cmp
cmpl
in
mov
mov
dec
cmp
push
gs
sbb
sahf
in
and
xor
loope
sub
cmp
and
cmp
je
dec
mov
jbe
out
fstp
or
lods
mov
and
jno
pop
mov
lcall
fsubrs
addl
je
adc
mov
mov
pop
pop
outsl
stos
jecxz
mov
jae
into
push
sbb
adc
scas
sar
push
inc
dec
xchg
in
mov
test
xchg
shl
xchg
sbb
adc
mov
mov
shll
outsb
testb
in
sub
dec
jnp
dec
xor
pop
push
adc
adc
scas
fsubr
lret
xor
push
mov
inc
mov
fwait
arpl
and
inc
sub
dec
jo
sbb
cmpb
ds
js
pop
into
mov
mov
aad
pop
lret
fidivs
inc
leave
xchg
jg
imul
add
lret
cmpsl
lds
test
xlat
push
xor
aad
or
frstor
movsb
sbb
inc
lods
xor
aam
shl
and
cmp
movsb
dec
mov
gs
mov
and
cwtl
dec
loop
mov
add
pushf
or
int3
test
iret
push
pop
and
imulb
push
ja
pop
dec
xor
lret
cmp
aad
xor
inc
lret
in
xchg
js
leave
aaa
add
dec
xchg
ss
mov
insb
inc
mov
xlat
jmp
mov
adc
cltd
les
sti
ss
mov
int3
mov
push
xlat
mov
outsb
shrl
xchg
push
in
dec
adcl
inc
fcompl
js
pop
rcrb
dec
rcrb
push
and
sbb
and
sbbl
aad
ds
dec
add
pushf
or
push
mov
pop
js
out
mov
cmp
xchg
fsincos
fdivr
loope
adc
cltd
push
stos
jo
fs
pop
jne
and
push
jns
adc
cmp
pop
jmp
mov
in
push
push
cwtl
dec
mov
mov
mov
jp
je
mov
ret
dec
test
pop
in
pop
mov
pop
dec
int
xchg
xchg
adc
xchg
mov
insb
dec
push
das
test
xchg
mov
jle
dec
jle
enter
outsb
iret
xlat
lds
outsw
jae
inc
testb
popf
jecxz
or
lods
jge
add
ds
andl
daa
clc
jmp
adc
cmpsl
ljmp
ja
rcll
repz
cmpsw
or
sbb
or
jge
jmp
ljmp
cwtl
and
mov
sub
mov
cmp
xlat
mov
in
mov
cwtl
pop
xor
mov
push
mov
mov
mov
jge
cs
or
clc
sti
cmpsl
xor
jp
insl
das
lds
cmp
fdivp
push
fnstsw
push
sbb
or
push
and
inc
mov
setne
mov
lea
rcrl
push
and
pop
push
or
repnz
lea
sbb
scas
lea
es
mov
pop
mov
push
hlt
adc
lds
repnz
fistl
pop
lahf
add
pop
xchg
scas
mov
mov
movsl
sbb
sbb
fldt
mov
dec
pop
xor
or
add
mov
pop
icebp
pop
pop
mov
stos
jge
add
xchg
jl
lea
ds
movsl
fisttps
and
in
hlt
xor
cld
jno
or
shr
stos
push
xor
movsb
stos
lcall
dec
mov
push
mov
fdecstp
sub
lds
push
pop
insb
adc
repnz
jo
pushf
mov
dec
xchg
movsl
rcl
cli
dec
fstl
out
mov
mov
call
mov
sbb
sti
cli
test
and
push
scas
stos
xchg
popa
cltd
pop
in
stos
mov
setge
test
pushf
frstor
jb
call
lea
pmaxsw
hlt
pop
jmp
mov
sti
mov
sarb
fs
shlb
pop
je
pusha
aaa
sub
pop
das
pop
mov
ret
jno
repnz
pop
pop
ret
add
sub
fmul
aam
loope
mov
xchg
mov
mov
fldenv
add
les
leave
inc
fstl
push
adc
js
mov
inc
out
fisubl
movsw
std
js
inc
fcom
movsl
push
sbb
inc
push
pop
mov
lret
sbb
xchg
repnz
pop
lods
and
lods
and
aad
lods
add
loop
fnstsw
movsl
leave
ljmp
loopne
rcll
push
mov
jno
cmp
ret
ror
cmp
push
mov
sti
sub
sub
dec
pop
pop
sub
outsl
fs
aas
cmc
lcall
iret
fildl
into
cmp
fmuls
adc
int3
pop
test
push
lcall
dec
daa
mov
xchg
nop
lods
adc
aam
movsb
push
pop
sarl
cs
cmpsb
lret
sub
lods
sub
ja
sub
cmp
push
cwtl
push
loopne
jno
mov
jg
xchg
repz
mov
or
jae
jl
outsl
push
and
outsl
cld
xor
mov
ds
or
push
std
mov
ja
cmp
leave
mov
jecxz
xorb
push
shlb
loope
sbb
imul
xchg
lods
push
aad
cli
mov
mov
jp
xchg
mov
scas
scas
loope
or
mov
sbb
aas
add
xor
aaa
int3
loopne
cli
test
jp
sub
cmp
imul
nop
lahf
dec
inc
mov
cmp
popa
sub
lret
add
scas
pop
jmp
shl
cld
aas
ret
sub
negl
push
cmpsl
orb
ljmp
add
add
dec
push
inc
in
xor
popw
outsb
inc
sti
and
fwait
popa
mov
sbb
dec
aam
sti
jmp
xlat
fdiv
setns
rorl
fwait
int
xchg
add
cmp
mov
push
lods
ret
mov
call
popa
mov
mov
adc
push
or
std
jbe
push
fwait
aam
call
je
jl
lea
push
dec
jnp
arpl
daa
lcall
inc
stos
enter
leave
jmp
mov
inc
mov
js
nop
push
xlat
xchg
cmc
mov
std
cmpl
push
out
xchg
dec
pop
je
in
jb
gs
xchg
mov
cmp
mov
add
push
jb
lock
data16
cmpsb
add
cmp
pushf
xchg
adc
andb
push
insl
ds
push
xlat
sbb
lds
xor
test
icebp
out
idivb
jne
ret
jae
daa
popf
dec
outsb
rorb
gs
xchg
imul
aas
scas
dec
mov
loope
fdivrl
rol
fisubrs
imul
sub
fdivs
sub
loop
mov
les
sbb
fisubs
add
lods
lcall
ds
sub
mov
push
sbb
das
cli
xor
mov
dec
jo
loope
and
mov
jbe
jnp
sarb
cmc
mov
pop
cmp
cmp
add
out
insl
pop
test
insb
iret
in
push
dec
stos
push
test
xor
dec
jl
les
cmp
push
cmp
dec
jmp
mov
cmp
inc
aam
or
dec
aas
push
mov
aad
inc
jmp
scas
rclb
sub
sbb
pop
lret
dec
sub
jnp
or
mov
std
jnp
mov
push
mov
cs
fcmovu
adc
jae
scas
popa
jecxz
and
push
cld
insl
sbb
rolb
in
imul
cmp
ss
lds
sahf
cmpsl
call
scas
imul
jecxz
arpl
ljmp
adc
pushf
inc
sarb
int
std
xchg
mov
pop
adc
rcrl
movb
push
xor
cld
aas
popf
roll
repz
mov
ret
push
adc
pop
sbb
push
cmp
lea
popf
xor
mov
mov
and
mov
inc
push
divl
ds
add
imul
cmc
push
jge
pop
int3
pop
sbb
dec
xchg
in
outsb
mov
cld
and
ret
insb
ja
dec
fstpl
pop
push
int3
push
rol
pushf
shll
insl
mov
loopne
cmp
outsl
sub
sbb
repz
jmp
test
mov
dec
and
mov
sbb
addr16
aas
loopne
mov
mov
lods
jge
jno
sbb
fisttpll
loop
jbe
fs
rorl
push
jle
dec
test
das
inc
fucomip
loopne
adcl
mov
pusha
push
pop
jecxz,pn
in
inc
mov
xor
inc
pop
add
jne
push
shlb
add
negb
mov
lods
lcall
mov
cltd
mov
and
pop
bound
jae
cmc
xlat
mov
push
mov
test
scas
shrb
cmp
lock
xchg
jge
aad
rcrb
push
adc
cld
filds
inc
mov
fwait
mov
dec
cmpsl
outsl
xor
jmp
ss
inc
decl
stos
or
stos
shl
mov
mov
push
mov
xchg
ficoms
sub
mov
cwtl
cmc
stos
js
pop
std
pop
mov
and
and
xchg
cmpsl
cmp
scas
cs
mov
fcompl
iret
lea
fldcw
leave
mov
std
ret
outsb
xchg
scas
out
or
mov
repnz
add
sub
mov
clc
cltd
jecxz
inc
add
xlat
cmp
jp
sbb
sbb
cmc
cmp
pop
sbb
or
jmp
je
adcl
dec
xorb
xor
decb
sbb
jl
pop
call
inc
movsb
je
inc
push
pop
dec
inc
mov
lods
sbb
xchg
filds
cmp
pushf
scas
ljmp
sbb
aad
outsl
call
subb
xchg
aas
ljmp
adc
jbe
mov
or
jge
cs
add
sub
popf
jo
jmp
data16
sbb
adc
outsl
fstp
mov
das
dec
jb
sub
pop
sbb
pcmpgtw
jg
xor
andb
add
out
cmp
jne
xchg
jp
or
repnz
xchg
aas
out
cmc
or
sub
out
add
les
test
pushf
subl
sahf
jno
outsl
jl
dec
sub
mov
mov
cwtl
mov
inc
out
std
mov
jg
add
rcrl
add
and
lcall
inc
xlat
aas
jp
incl
mov
pusha
pop
push
in
jecxz
fs
dec
mov
mov
mov
aad
enter
jl
sbb
sahf
sub
sahf
fdivl
in
loope
inc
mov
pop
add
lret
lcall
lods
arpl
cld
rclb
push
mov
repnz
or
dec
dec
sbb
ss
cld
mov
pop
mov
out
call
outsb
or
mov
cmp
out
sarb
fidivrs
dec
cmpsb
fwait
lds
push
xchg
daa
aaa
and
mov
lds
jecxz
xor
push
cmc
lock
mov
sbb
pusha
call
mov
jp
pop
test
or
inc
push
sbb
xchg
icebp
scas
mov
movsl
shll
loope
xor
pop
pop
sub
add
orb
cld
dec
pop
mov
popa
mov
jbe
lcall
push
lock
in
mov
pop
pop
sbb
dec
xchg
pop
bound
cmp
dec
loop
dec
push
lds
xchg
iret
mov
jo
stos
jecxz
mov
pop
xor
es
and
xor
aaa
andb
add
push
aas
pusha
push
inc
push
fs
into
sbb
in
mov
mov
out
mov
xor
xchg
test
jns
sub
cmp
add
mov
hlt
mov
leave
mov
aaa
fsubrl
mov
or
jae
lahf
dec
pop
movsl
out
adc
adc
sbb
cmpsb
sbb
jb
in
out
shlb
cmp
std
je
push
shll
mov
lret
arpl
sub
fxch
lahf
sbb
loop
dec
outsl
pushf
dec
xchg
or
out
adc
pop
or
and
sbb
bound
daa
popw
test
push
cmp
lahf
add
out
clc
mov
cmp
dec
push
jb
out
rcll
pop
mov
push
enter
ljmp
int
sbb
add
pop
cli
or
push
std
jl
loope
inc
into
mov
pop
pop
dec
adc
jmp
inc
lds
test
inc
xchg
mull
leave
punpcklwd
insl
mov
cmp
test
lcall
adc
mov
repnz
clc
push
cmp
test
cmp
cmc
stc
mov
xchg
pop
jae
sub
mov
sbb
cmp
inc
push
push
decl
scas
fsts
cmp
hlt
mov
and
push
aam
fistps
inc
fwait
xor
push
sbb
mov
mov
dec
int
das
sub
cs
jp
cmpsl
xorb
fadds
xor
stc
mov
leave
cmp
sahf
jecxz
add
std
inc
pop
or
lcall
inc
ds
ja
jge
rorb
ret
in
mov
in
mov
insl
mov
outsl
scas
adc
sbb
cld
pop
dec
push
pop
push
jecxz
or
pop
xor
outsl
jnp
mov
dec
rcrb
loope
mov
fmull
jp
stc
xchg
aam
imul
sbb
iret
inc
mov
or
fcoms
inc
mov
jmp
add
mov
aam
dec
sub
stc
minps
neg
mov
test
and
fcomps
cmpsl
cli
pop
and
push
push
cmp
sbb
or
sub
xchg
mov
loopne
xchg
lcall
push
pop
popa
daa
lock
outsb
std
xor
cmp
inc
hlt
fsubrs
stos
fisttpll
out
adc
outsl
cmp
stc
xor
pusha
pop
xchg
test
or
das
test
push
cmp
or
push
pop
aaa
push
mov
dec
sub
xchg
fisttpl
inc
sbb
mov
push
test
mov
pusha
add
in
or
or
out
ds
jmp
dec
cmp
pop
stos
lods
cmp
rcl
jp
enter
hlt
push
insl
mov
and
test
mov
xlat
mov
ljmp
aas
xchg
jge
jno
loopne
cmp
or
ds
std
jge
sub
mov
lea
out
in
sarb
mull
pushf
dec
push
mov
sbb
out
les
dec
insb
dec
icebp
mov
into
das
mov
popf
jp
xlat
sti
mov
es
cmpsl
cmpsl
cs
push
mov
sbb
movsl
insb
aad
xchg
jl
roll
mov
or
call
dec
add
dec
enter
add
stos
cmp
int3
sahf
add
ret
cmp
xchg
pop
lahf
bound
fiaddl
jb
fst
xor
int
fstps
scas
xor
adc
add
pop
cmpsb
mov
outsl
rclb
push
pop
mov
jp
sbb
out
xor
mov
inc
pushf
ljmp
shll
popf
push
mov
int3
or
loop
cltd
xor
and
sub
sbb
mov
jae
mov
push
in
add
jbe
and
and
mov
ljmp
pop
loope
gs
add
sub
jl
cmpsl
cmpsb
cmp
stos
arpl
mov
stos
push
mov
iret
out
mov
data16
xor
dec
xchg
fsubr
leave
lahf
addl
fsubl
cmpsb
sahf
push
cmp
adc
push
bound
adc
or
mov
push
ja
and
push
ret
int
stos
sub
aam
xor
fiaddl
int3
adc
pusha
pop
add
mov
mov
insb
nop
ds
lcall
jnp
adc
xchg
iret
dec
xlat
popa
or
ja
addr16
loopne
cmp
test
cmc
or
lods
pop
stos
xchg
int3
dec
outsb
daa
lock
les
lcall
jmp
into
cs
lods
cmpb
mov
movsb
scas
mov
jae
pushf
xchg
call
scas
and
and
fwait
loopne
arpl
and
cld
mov
xor
jae
adc
and
xchg
cs
jg
insb
or
jne
aas
jle
ljmp
cmpsb
adc
sub
out
loope
mov
sti
mov
sbb
call
call
pop
mov
mov
test
jne
ja
push
addr16
mov
outsl
cmp
jecxz
les
out
jbe
adc
and
dec
pop
lock
movsb
mov
jns
ret
or
mov
scas
stos
repnz
shrb
rorb
mov
ror
inc
add
stc
mov
mov
or
aam
xor
sti
and
or
mov
aad
jl
xchg
push
push
jo
mov
add
jp
mov
icebp
mov
ret
mov
mov
inc
and
cmpsb
mov
enter
das
inc
or
fsubl
stos
cmp
test
arpl
sub
test
lahf
sbb
clc
cltd
mov
push
das
jo
sahf
xchg
les
sub
stos
jmp
mov
in
jge
xchg
loope
mov
in
push
pusha
mov
ret
xchg
pop
jmp
jns
push
push
mov
jno
lcall
enter
lret
and
mov
movsb
pop
sarl
pop
adc
adc
mov
mov
xor
lret
mov
pop
jo
data16
mov
daa
adc
scas
movl
mov
loop
inc
jp
push
sub
pusha
jae
iret
add
iret
sbb
xor
and
cmp
push
jne
jo
push
mov
lock
add
inc
clc
lea
daa
aas
ss
in
push
sarl
cltd
cmp
pop
outsb
adcl
inc
stos
xchg
daa
mov
clc
xor
jo
mov
int
jg
dec
pop
pop
repz
xchg
les
les
dec
shl
mov
adc
sbb
stc
xchg
xchg
das
in
aam
xchg
ror
inc
inc
jmp
pop
lahf
dec
imul
cmp
cmp
ret
testl
xchg
add
outsb
xchg
mov
sub
jg
dec
out
and
push
test
xchg
adc
outsb
pushl
mov
push
in
xchg
lret
add
mov
mov
pop
or
add
mov
mov
icebp
cmp
jns
scas
test
mov
push
mov
pop
dec
xchg
pop
cmp
pop
int3
jae
jle
push
lret
cmpsl
sub
fldt
xchg
fwait
xchg
enter
pop
jl
or
js
mov
xor
dec
sub
cmc
mov
pop
adc
inc
push
adc
or
imull
lret
adc
and
testb
clc
inc
or
sub
inc
or
in
ds
test
mov
shlb
dec
xchg
jb
es
push
mov
rolb
mov
xchg
mov
test
cmp
cmpsb
ret
or
inc
sub
iret
or
imul
bound
and
enter
dec
lds
push
sub
push
nop
daa
outsl
call
or
or
mov
test
leave
loopne
push
shl
sbb
push
mov
push
lods
sbb
push
roll
fisubs
or
ljmp
outsb
add
inc
mov
dec
popf
xchg
xor
out
inc
cmp
sub
fwait
rsm
adc
enter
das
rclb
sbb
mov
mov
ss
dec
inc
inc
shl
and
fs
pushf
xor
out
inc
ror
leave
mov
cmp
movsb
negb
in
addr16
or
stos
xchg
sahf
lcall
fldt
int
iret
pop
fmuls
lea
xor
daa
and
or
xlat
loop
pop
inc
and
mov
add
push
in
sub
iret
add
scas
adc
mov
adc
and
inc
movsb
jae
inc
xchg
mov
jno
inc
push
aam
jns
cmpsl
adc
pop
daa
lret
mov
mov
cmpsb
outsb
cmp
sub
ret
shlb
push
je,pt
inc
repnz
adc
cs
pop
xchg
mov
enter
xor
movsb
int3
adc
sbb
in
aam
pop
xchg
xchg
pop
test
ja
out
mov
cli
sub
cmp
jp
adc
cli
mov
rcr
pop
cld
mov
xchg
jns
or
gs
sub
test
add
nop
xlat
sub
pop
pushf
dec
mov
pop
add
sbb
jmp
and
ret
into
mov
into
daa
xor
clc
jle
sbb
dec
mov
in
inc
mov
test
in
fwait
mov
scas
adc
pop
in
adc
test
sahf
pop
xchg
mov
mov
aas
lret
dec
ss
push
daa
aas
shrl
bound
mov
sub
adc
and
shr
mov
mov
insb
mov
nop
popa
popf
loopne
repz
adc
jbe
mov
mov
enter
jo
cmp
inc
gs
mov
mov
mov
and
xor
mov
jg
push
clc
adc
adc
or
mov
push
push
or
xor
cmp
xchg
js
rcrl
sti
mov
addl
push
dec
pop
mov
stc
sbb
aaa
sub
xor
loopne
sub
adc
add
jl
aam
imull
cmp
and
push
stos
inc
xchg
add
roll
xor
daa
fldt
neg
xchg
rcll
mov
test
ficompl
cmc
push
mov
push
jo
stos
sbb
ja
push
cld
lret
out
pop
repz
mov
movsl
mov
mov
jg
jae
and
inc
dec
push
imul
jl
pop
and
scas
xchg
ljmp
in
lea
xor
push
inc
sbb
aad
push
sti
cmc
js
mov
sbb
cwtl
or
jbe
gs
lret
inc
mov
lods
aaa
jns
daa
into
cld
or
sub
mov
pop
pop
scas
pop
out
cwtl
icebp
add
fwait
mov
push
sbb
test
sbb
sbbl
add
inc
andl
mov
push
dec
fcomp
adc
cli
pop
sub
jb
jns
rcrl
mov
xchg
sub
xchg
js
int
nop
pop
jl
adc
call
mov
cs
or
jle
je
push
xchg
orb
add
jp
push
and
scas
pop
jbe
push
int
movsl
mov
popl
cltd
mov
aad
outsb
push
mov
pop
push
push
push
push
add
pop
push
cmpsl
cmp
sbb
out
mov
sbb
jecxz
or
mov
test
pop
and
xor
jns
inc
mov
iret
xlat
shlb
into
lcall
in
repz
or
jmp
inc
sbb
xor
outsl
imul
mov
pusha
insb
stos
jbe
cmpsl
cmpsl
es
jbe
js
lahf
lea
lds
jns
imul
inc
pop
xor
nop
cmp
mov
pop
push
rcrl
movsb
mov
jno
mov
push
fstpt
lret
sbb
pop
scas
stc
popf
pop
push
dec
fisttpll
add
pusha
push
mov
jl
dec
adc
cmc
stos
xlat
loope
insl
adc
mov
jo
mov
inc
xchg
aaa
jle
sahf
mov
or
es
dec
sbb
mov
inc
xchg
xor
bound
inc
imul
les
repnz
or
jge
mov
mov
pusha
sarb
test
adc
addr16
push
inc
pop
add
ss
pop
mov
lods
and
or
out
les
xor
sub
inc
pop
nop
pusha
insl
fmuls
or
in
or
and
jl
dec
jns
and
cmp
jmp
pop
add
outsb
fdivl
jmp
mov
out
dec
arpl
xchg
aam
inc
sub
sbb
outsl
outsl
and
int
mov
jno
cli
adc
popl
sbb
shll
fcompl
push
bnd
test
lret
pop
fistps
movsb
lret
je
mov
mov
adc
shl
jo
jns
pop
out
imul
enter
dec
sub
jge
xchg
push
insl
pop
cltd
imul
jae
out
rorl
lea
pop
std
mov
mov
mov
out
std
jmp
push
push
sarb
mov
orb
dec
into
les
insb
js
arpl
fsubrp
pop
sbb
mov
adc
test
enter
xor
dec
add
jg
cwtl
jnp
dec
sub
sbb
xor
js
cmp
add
cmp
jge
bound
scas
daa
xchg
and
ss
mov
fisttps
jecxz
sahf
add
jbe
push
and
pop
xor
jmp
mov
sub
ss
add
jle
add
call
test
outsl
and
clc
in
push
pop
paddusb
push
mov
dec
jae
add
pop
sti
rcl
push
mov
jnp
leave
cmp
jp
in
popf
pusha
in
scas
pop
sub
mov
pushf
mov
clc
ja
sub
ljmp
sub
in
out
mov
sbb
mov
lcall
loope
sub
adc
leave
mov
daa
mov
popa
cmpsl
inc
scas
mov
movsl
loop
pusha
rorb
out
nop
mov
dec
jns
xchg
scas
clc
bswap
daa
sub
and
test
jbe
jecxz
test
icebp
clc
xchg
push
mov
mov
aas
sub
pop
jnp
ror
sbb
mov
mov
and
gs
push
jne
pop
insb
sbb
cs
inc
cmp
outsl
cltd
shrl
jle
dec
in
enter
fldcw
inc
out
xorl
bound
pop
mov
xchg
xor
jns
fsts
sahf
pop
std
dec
sbb
rcr
xchg
xor
jbe
jg
call
adc
mov
rol
test
xchg
repz
pop
xchg
mov
push
jecxz
in
xchg
adc
lret
pop
stos
and
sub
cmp
xchg
jecxz
into
outsb
ret
cmp
in
adc
sbb
std
rcll
pop
insb
jae
mov
dec
push
xor
cwtl
adcb
cmp
fistpl
in
adc
sbb
cs
push
imul
shlb
adc
fidivs
inc
inc
jl
mov
sbb
call
mov
div
ret
mov
push
mov
inc
data16
mov
jge
ret
push
mov
inc
mov
xchg
scas
cs
pop
add
mov
xchg
lahf
pusha
cwtl
maxps
fdivs
pop
sub
push
xchg
lahf
add
mov
fisttpl
cmp
dec
decb
adc
jg
mov
pop
cmp
sub
test
xor
std
push
enter
pop
ds
xchg
cs
pushf
mov
sahf
or
out
mov
bound
fsubrp
xchg
in
arpl
mov
ja
ret
push
insl
mov
dec
push
es
dec
lahf
lret
paddb
xchg
aas
data16
jmp
inc
int
int
cmp
out
sbb
push
push
mov
iret
push
ljmp
xchg
jbe
shll
and
dec
pop
fnstcw
ss
jae
mov
inc
fisttps
sti
cmp
fcoml
arpl
imul
test
rcr
adc
inc
lods
cltd
fs
sub
cli
icebp
xorl
test
or
aas
add
xchg
daa
inc
out
cld
adc
enter
rcrb
testl
gs
xor
hlt
cmp
push
sbb
nop
dec
cmovge
pusha
lds
shrl
xor
pop
in
rcr
repz
loope
pop
jmp
inc
or
loop
out
imul
icebp
mov
push
test
jmp
aas
fldl
cmp
cli
mov
dec
mov
inc
mov
out
out
adc
out
pop
mov
fcmovnb
inc
add
xchg
pushl
jnp
lods
aad
dec
dec
jno
enter
icebp
arpl
out
icebp
xchg
or
ret
and
xchg
xor
fmuls
test
int
dec
mov
sub
outsb
push
and
sbb
and
mov
fiadds
stc
fs
cmp
outsl
and
inc
mov
in
push
daa
daa
in
js
pop
xor
pop
mov
adcl
mov
inc
mov
mov
nop
ds
pop
pop
ja
mov
outsl
push
lods
push
aas
push
mov
pop
dec
cmpsl
loopne
inc
lods
mov
mov
ljmp
xor
popa
push
cmc
sub
sbbb
adc
aad
or
stc
dec
data16
cs
mov
ds
pop
pushf
sti
mov
idivb
cwtl
inc
cmpsb
cmp
in
scas
and
out
inc
pop
je
fistl
scas
ljmp
scas
xchg
mov
shrb
lret
push
fbld
out
sti
mov
dec
push
in
inc
ljmp
xchg
mov
fists
and
cmp
in
imull
and
jge
imul
adc
add
mov
fldl
mov
lods
cmp
scas
pop
xchg
sub
in
lock
rcl
lds
mov
test
ljmp
inc
cmp
dec
mov
jle
out
mov
mov
sub
add
adc
push
test
mov
insb
lock
fcomps
inc
push
stos
fnstenv
or
iret
inc
add
adc
push
ss
and
inc
ss
push
mov
mov
dec
mov
cmp
imul
or
cmp
ljmp
dec
mov
out
pop
or
loop
push
enter
lea
movsl
mov
hlt
pop
sbb
mov
mov
andl
fists
loopne
stos
out
shll
lods
addr16
or
dec
xchg
cwtl
shll
mov
jb
adc
aas
jae
movsl
jp
and
push
sbb
shl
aad
or
sbb
test
pushl
fwait
mov
add
xor
xor
xor
aam
pop
push
int3
dec
in
out
dec
ss
in
push
ljmp
sub
ja
es
push
inc
rcrl
call
sti
cli
cmp
and
jg
out
xchg
mov
addr16
enter
lcall
pusha
add
sbb
je
insb
push
adcl
repz
int
hlt
mov
outsb
sahf
jb
cmp
test
repnz
xchg
sub
mov
jns
icebp
inc
push
or
jns
movsl
lahf
jecxz
inc
xchg
cmp
je
out
shrb
add
mov
adc
daa
adc
add
in
xor
test
mov
push
pop
adc
jmp
or
push
pop
negl
fidivrs
popa
scas
jnp
xchg
aad
xchg
inc
mov
in
cmpb
inc
int3
imul
jae
cmp
lea
xor
and
dec
mov
sub
push
shlb
mov
dec
data16
push
push
inc
cmp
adc
push
sti
pop
outsb
je
jbe
mov
test
xor
movsb
insb
jns
push
sbb
shll
popa
sahf
lock
jp
fmuls
lods
and
mov
adc
mov
xchg
mov
rep
insb
adc
stc
fs
mov
stc
ja
daa
loopne
jnp
popa
mov
lods
scas
and
pop
jp
fnstcw
mov
fcoml
insb
mov
xchg
movaps
jg
and
out
push
mov
push
cmpsb
xor
enter
fs
push
and
dec
mov
jae
lcall
pop
aaa
lahf
xor
add
icebp
stos
pop
cmc
mov
shll
lret
out
lods
cltd
dec
xchg
roll
inc
jmp
push
push
sbb
jl
stos
imull
push
mov
pushf
insl
add
in
push
jo
in
jne
push
push
jl
push
sub
mov
jb
pop
ljmp
push
and
xor
movsl
and
pop
cmc
inc
xchg
push
jecxz
stos
mov
and
test
or
cmp
leave
xchg
ret
lret
pop
dec
fldenv
rorb
jle
jg
dec
rol
jno
es
jmp
out
dec
inc
inc
out
jp
lcall
sbb
cmpsb
and
cmp
rcrl
dec
loopne
jecxz
push
lret
cs
jmp
jo
arpl
and
dec
stos
adc
xchg
loope
test
bound
adc
sbb
push
dec
flds
add
add
fstl
repnz
add
jmp
push
or
shrb
sub
jp
movsl
push
fdivs
es
or
es
jne
idivb
ja
mov
inc
sub
fs
mov
scas
sub
mov
or
sbbb
pop
xor
fwait
popa
cmc
roll
dec
jle
cmp
xor
jo
aam
das
sub
inc
dec
inc
and
ficoml
ja
sbb
pop
jo
mov
add
inc
iret
cmpsb
sub
cmc
push
testl
in
push
insl
mov
imul
jno
lods
mov
mov
mov
fisubrl
arpl
sub
mov
aas
pop
sub
scas
sub
out
and
ucomiss
fs
daa
or
xchg
xchg
movsl
add
fcmovbe
sub
mov
xchg
stos
repz
pop
inc
or
sub
in
jb
push
addr16
movsb
inc
add
lret
sti
xor
adc
repz
jmp
repz
push
repnz
and
or
ds
xchg
pop
adc
push
lock
mov
or
cltd
jae
aam
jecxz
mov
bound
mov
aas
mov
pop
push
sbb
or
ljmp
iret
push
mov
lock
lcall
call
jl
push
mov
stos
mov
rclb
js
aas
ret
outsl
shl
sub
mov
mulb
int3
ljmp
mov
mov
int3
dec
stos
inc
xchg
or
or
pop
cmp
inc
push
hlt
in
fnsave
movsb
lahf
mov
xchg
bound
pusha
xor
jecxz
push
ret
jb
popf
hlt
and
xor
push
andb
sub
add
jb
cs
pop
fs
or
add
cmpsb
fsubl
addb
jle
bound
xchg
fldl
orl
in
adc
stos
ja
ret
push
andb
inc
rclb
outsl
mov
sbb
inc
ret
enter
mov
adc
in
sub
or
iret
std
or
add
das
fstpl
jne
js
or
inc
xor
sbbb
mov
jnp
dec
ds
int3
sahf
dec
jge
fisubrs
add
hlt
negb
push
xchg
mov
and
fsubl
pop
adc
dec
cltd
mov
ret
push
dec
shrl
cmc
aam
popaw
or
lods
add
pop
xchg
mov
lret
movsb
cmpsl
bound
mov
mov
ret
test
incl
mov
lret
xorl
mov
gs
sub
pop
fisttps
pop
stos
ffreep
mov
dec
add
jle
add
ja
push
adc
and
mov
mov
add
leave
shr
mov
push
std
mov
into
and
loope
decl
stos
xchg
push
xor
ret
popf
outsl
mov
mov
cld
test
cmpsl
xor
outsb
lfs
jl
fwait
bnd
mov
gs
subl
jp
jp
push
jbe
jae
hlt
inc
or
sbb
dec
cld
jmp
sub
xor
mov
inc
jbe
sub
popa
xor
mov
movsl
inc
inc
xchg
pop
sbb
mov
dec
lods
jbe
sub
sbb
sbb
inc
bound
push
sub
call
push
out
je
and
shlb
and
sahf
js
icebp
adc
clc
cmpsb
mov
jnp
cmp
or
fildl
cmp
icebp
mov
jbe
mov
push
and
or
loop
xor
push
jl
xlat
adc
aaa
and
fisttps
adc
adc
das
mov
outsl
add
xchg
clc
sub
adc
pop
or
test
dec
loop
mov
pop
mov
mov
in
push
push
cli
jno
cmp
and
push
pop
imul
int
mov
xchg
push
out
xchg
xor
pop
jns
jno
mov
or
mov
arpl
and
xor
sub
xchg
mov
outsb
cmpsl
add
mov
or
sti
pop
xchg
in
and
mov
inc
fmull
jmp
jo
fwait
pop
test
fbstp
push
jbe
mov
jb
jb
adc
mov
inc
out
jnp
dec
mov
pop
fisubrs
lds
popf
mov
pop
cmp
xor
ret
xchg
and
jecxz
cmp
mov
xchg
xor
cmp
xlat
add
push
mov
xor
xorl
mov
jno
icebp
in
dec
orl
push
jle
fiaddl
aaa
mov
ljmp
add
inc
push
sub
xchg
mov
sub
loope
sub
or
xchg
sti
imul
push
xor
cmp
aam
push
inc
pusha
adc
arpl
js
and
mov
xchg
xchg
jnp
mov
arpl
mov
sub
jae
adc
cmp
jbe
es
jge
pop
loope
sbb
xorl
pop
jle
jnp
or
leave
mov
test
lock
jno
fmuls
fstpt
mov
aam
andl
jnp
adcb
xchg
dec
pop
or
fs
inc
pop
aam
inc
push
mov
dec
decl
push
int
mov
dec
fldt
or
xor
rolb
mov
ret
pop
cld
icebp
movsb
sub
fstps
add
dec
sti
idivb
repnz
xchg
out
jns
lahf
add
pop
fnstcw
xlat
mov
int
jo
cmp
sub
aam
inc
pop
aad
jb
xor
sbb
cld
push
inc
lods
add
dec
lods
mov
jmp
adc
fidivrs
repz
aaa
ljmp
test
outsb
loope
imul
xchg
pop
mov
aaa
imul
push
test
fstp
mov
stos
pop
decb
add
or
or
mov
xchg
cmp
adcb
sbb
dec
sbb
pop
cli
sub
jbe
jae
test
and
idivl
out
mov
nop
lahf
and
push
aaa
xchg
ffreep
pop
outsl
dec
mov
imul
shrb
mov
and
inc
mov
cmc
es
movsl
jbe
add
in
cmp
out
cmp
push
adc
sbb
inc
sbb
dec
mov
add
mov
insb
movsl
popa
push
and
dec
out
popl
stos
into
popa
inc
pop
lret
hlt
hlt
es
fs
and
enter
in
imul
and
xor
rcr
popf
push
clc
mov
jp
gs
fscale
pop
fldenv
hlt
inc
test
mov
out
push
in
mov
pop
fbstp
dec
cmp
pop
enter
xor
push
test
subb
jnp
cwtl
or
cs
ret
in
cmp
inc
lock
inc
cltd
pop
mov
jge
jl
incb
or
inc
xchg
cmpsl
cmc
outsl
gs
push
mov
jne
and
sub
add
cmp
push
mov
call
adc
sub
mov
roll
test
cmpsb
or
iret
popa
mov
repnz
stos
sbb
enter
call
neg
out
mov
jmp
daa
iret
aad
cmp
pop
sub
cs
jo
mov
mov
aad
lds
mov
addr16
fmull
pusha
mov
adc
ds
icebp
xchg
hlt
testl
or
or
out
pop
sub
sbb
pop
mov
sahf
xchg
inc
jmp
movsb
add
sub
pop
repnz
fstl
pop
jmp
inc
insl
int
pop
mov
push
fwait
push
sbb
jo
rcll
push
fisttpll
cmp
rcrb
lds
or
push
cmpl
dec
jb
mov
lock
mov
jmp
dec
fiadds
loopne
push
adc
ret
test
push
nop
cmp
mov
pop
aas
je
push
fimuls
fdivr
sbb
mov
loopne
adc
fidivrl
cwtl
insl
xchg
dec
iret
mov
inc
int
sbb
popf
les
pop
in
xor
add
inc
aad
sbb
cmp
jnp
repz
leave
test
sub
adc
push
data16
nop
mov
sub
loopne
and
icebp
lcall
sub
sbb
mov
es
or
ret
test
xor
out
or
or
and
xorb
stos
je
sbb
lea
ljmp
xchg
stos
aam
jl
push
inc
sti
mov
adc
sub
mov
mov
aas
jae
add
fndisi(8087
lods
sbb
xchg
sub
sarl
ja
test
dec
iret
fld1
mov
popf
dec
mov
adc
xchg
pushf
int3
jbe
ret
add
cmc
popf
push
mov
jmp
daa
repnz
pushf
loop
outsb
lods
test
mov
push
in
xchg
mov
jns
dec
iret
adc
ud2
call
in
xchg
out
inc
mov
cld
xchg
cwtl
repnz
int3
and
or
dec
push
fsubs
dec
lcall
cmpsl
out
pop
adc
mov
aaa
xchg
xor
sub
push
cmp
js
mov
mov
push
lret
xor
inc
sahf
adc
ja
subb
outsl
lcall
int3
fnstenv
mov
stos
pop
mov
mov
shrl
and
dec
push
mov
dec
pop
mov
adc
cmc
mov
jns
sub
dec
lcall
bound
fstps
and
inc
jo
jns
dec
xchg
daa
push
cmp
adc
push
fidivrl
and
cwtl
stos
mov
fcompl
cvtps2pi
pop
sub
mov
mov
shll
iret
ljmp
sbb
push
mov
stc
xor
arpl
dec
xchg
jle
xlat
in
outsl
ds
fiaddl
add
dec
inc
lret
stc
xchg
ret
je
fcmovnbe
cmpsl
mov
das
inc
in
sub
rol
mov
js
add
in
test
fwait
lock
or
or
and
xchg
clc
test
hlt
in
imul
xchg
lds
adc
iret
or
movsl
mov
daa
sub
pop
negb
cmp
in
cmp
adc
and
fstpt
fs
cltd
or
test
cltd
loop
inc
push
test
ss
cli
lahf
push
std
icebp
jle
int3
inc
or
fistpl
gs
xor
xor
addb
hlt
enter
pop
in
icebp
stos
pop
pop
sub
shll
dec
stc
rcrl
mov
jecxz
rcrl
mov
fstpl
sub
push
ret
lret
test
mov
out
gs
pusha
dec
jb
add
aas
inc
or
and
test
mov
mov
imul
mov
xorl
push
add
jo
mov
sbb
imul
test
pop
addr16
cmc
test
scas
icebp
mov
nop
dec
xor
mov
testb
test
cmpsl
ja
pusha
movsl
stos
iret
pop
orb
inc
out
ja
pop
sbb
xchg
cmp
pop
adc
fisubs
mov
add
dec
adc
or
movsb
aad
and
testb
jmp
mov
sub
xchg
pop
out
inc
rol
push
pop
gs
dec
adc
push
cmp
lods
sbb
pop
inc
push
shrb
je
mov
jp
in
bound
mov
movsl
clc
sbb
fwait
mov
dec
cmp
call
scas
sub
pop
cli
mov
adc
push
inc
lds
xor
cmc
hlt
cmpb
sub
mov
lods
rorb
pop
out
sub
stc
lds
movsl
fsubl
jo
xchg
fnstcw
hlt
aas
imul
pop
dec
push
add
cmp
dec
jno
push
es
out
pop
sbb
jl
shll
adc
fcoml
adc
cwtl
push
cmp
scas
inc
lods
rol
pushf
xchg
jno
jno
mov
arpl
jnp
mov
push
sbb
jno
mov
out
js,pt
bound
inc
inc
dec
dec
or
popa
xor
cmp
adc
sahf
xor
gs
insl
stos
movsb
xor
pushf
sti
push
shlb
sti
inc
push
xchg
fmull
daa
pushl
test
or
popa
sub
test
int
mov
jl
sub
stc
lea
inc
notb
orl
sub
mov
jnp
and
out
jns
xor
cltd
fisttps
aas
enter
sub
loopne
ja
stos
jg
xor
and
or
add
int
rol
or
add
sbb
push
jno
fwait
loop
lods
mov
shll
stos
pop
mov
and
int3
and
stos
xchg
dec
sub
pop
xchg
mov
inc
loopne
test
in
out
sbbb
icebp
mov
dec
nop
lea
and
sbb
sbb
xchg
shll
filds
mov
inc
clc
fwait
sahf
and
xchg
mov
and
bsf
leave
sbb
sbb
int3
clc
fdiv
or
adc
clc
mov
pop
push
sub
push
and
into
jns
mov
pop
ret
pop
out
add
aad
int
fs
cmp
xor
xchg
and
fistpl
cmc
mov
pop
sbb
sbb
sub
leave
fdivl
sub
jmp
push
mov
jp
push
stos
movsl
sbb
loop
iret
into
or
add
scas
and
cmp
scas
out
inc
outsl
xchg
pusha
push
scas
mov
fistpll
xor
xor
cmc
fimull
mov
xor
pop
clc
in
leave
mov
cmpsl
stos
fnstsw
mov
and
jecxz
les
jns
or
sub
pop
xor
imul
fisubl
clc
jb
push
xor
iret
or
push
shll
mov
loop
xchg
inc
add
inc
cmp
cmp
subl
cmp
cmp
in
ficompl
xchg
push
mov
or
xor
nop
cmc
mov
xor
pushf
sbb
cs
xchg
hlt
xchg
mov
lret
or
repz
add
lods
sahf
dec
jns
dec
int3
or
mov
mov
mov
aam
dec
testl
lods
cmp
inc
push
push
or
nop
inc
ja
pop
std
sub
jmp
dec
and
mov
cmp
or
shufps
inc
mov
mov
movsb
insl
mov
shll
out
mov
movsb
lret
sub
or
pop
jbe
idivl
fstl
push
sub
jmp
mov
lahf
stos
pop
cmp
rolb
or
cli
mov
sub
dec
mov
divb
lret
inc
cli
outsb
daa
nop
in
jmp
or
jo
xor
addr16
adc
ficompl
mov
dec
pop
pop
jb
fldcw
lcall
shll
sbb
outsb
pushf
andl
aas
push
sbb
mov
or
js
jp
add
xchg
mov
adc
jo
inc
sarl
cmp
add
lods
test
and
mov
jbe
mov
mov
into
mov
popf
xor
xor
inc
inc
mov
aad
fcoms
jle
sbb
sub
jl,pn
jp
movsb
ss
shlb
xor
or
xchg
mov
xor
test
push
mov
lock
les
pushf
nop
ret
aam
call
or
mov
je
icebp
sbb
jnp
dec
rolb
shlb
sarb
jmp
aas
xchg
gs
add
or
es
xchg
mov
and
imul
mov
mov
dec
ret
cmc
mov
add
mov
lods
xorb
icebp
hlt
push
dec
out
sbb
mov
test
shrb
addl
int3
add
sbb
add
out
lea
leave
insl
bound
push
add
pop
push
in
fs
push
aam
jae
or
adcb
or
outsb
dec
and
add
inc
pop
test
je
fisubrl
sub
inc
jno
adc
add
mov
jl
mov
outsl
cli
out
inc
lret
push
ret
rclb
out
or
sbb
stos
push
shll
sbb
and
lret
mov
out
outsb
fchs
inc
lcall
mov
pop
mov
leave
xchg
inc
repnz
rol
in
mov
fwait
pop
sahf
dec
andl
andb
loopne
mov
aad
loopne
ja
xchg
aas
pop
xchg
divb
orl
movsb
jp
aad
data16
iret
icebp
dec
push
mov
jmp
add
hlt
es
dec
sub
std
insl
cmpsb
cmp
in
add
inc
gs
xor
push
adcb
jge
xor
push
or
inc
cwtl
add
adc
mov
pop
adc
mov
or
jmp
lcall
ds
jle
pop
push
or
lock
and
cmp
xchg
je
mov
sub
sub
sbb
lds
mov
add
adc
adc
dec
sti
add
test
cmp
inc
sahf
popf
fisubrl
push
pop
dec
mov
push
mov
xlat
movl
ja
mov
dec
and
lds
cmp
movsb
pop
mov
xchg
mov
ja
fstps
xchg
mov
or
mov
in
into
stc
cmp
cmp
dec
mov
pushf
dec
ss
sbb
jmp
xchg
int
je
mov
jbe
jle
mov
sbb
inc
adc
dec
imul
add
ss
cmp
sar
aas
xor
jmp
jg
jbe
repz
and
sarb
push
jno
push
add
inc
insb
jno
out
lret
pop
orb
adcl
adc
mov
imull
add
mov
push
xor
sar
xchg
cltd
lods
int
add
push
or
xchg
lods
jl
ss
pushf
add
inc
aaa
dec
dec
mov
mov
hlt
pop
std
mov
xor
aam
adc
sub
pop
xchg
ds
pop
jb
out
mov
int3
arpl
scas
aas
paddusb
enter
lods
mov
pop
ja
mov
test
mov
leave
fimull
and
mov
mov
xlat
ds
pop
xor
mov
je
addr16
mov
pop
hlt
dec
mov
lock
ret
shlb
lahf
mov
inc
out
fidivrl
loope
out
add
adc
testl
xor
sti
lods
pop
xchg
out
int
mov
hlt
jbe
cmp
add
pop
shll
jns
cmp
add
dec
push
or
push
pop
out
out
ds
sbb
int
or
int
dec
push
mov
xor
or
out
jb
test
ret
push
or
js
cmp
fiadds
or
sub
pushf
add
clc
fs
fcmovnbe
out
jle
or
mov
dec
jne
daa
xor
inc
in
and
movsl
ss
mov
xchg
ja
mov
mov
cltd
in
mov
sbb
dec
inc
leave
fisubrl
inc
and
jmp
stc
jae
jle
or
mov
xchg
fistpl
mov
das
add
mov
push
test
fwait
outsl
jp
fwait
jl
inc
pop
sbb
mov
and
adc
nop
in
xor
out
mov
inc
sub
xchg
push
data16
leave
sti
mov
ret
xchg
es
fnstsw
adc
or
out
pop
sbb
imul
in
das
imul
push
mov
mov
out
test
out
inc
data16
es
inc
outsb
rol
in
out
loopne
lds
or
add
add
pop
xchg
fsubs
pop
or
adc
mov
ja
inc
adc
push
mov
bound
enter
mov
jge
xor
out
lds
jmp
xchg
out
cmpsb
test
adc
repnz
push
imul
pushf
or
mov
xchg
pop
in
dec
and
mov
aaa
shlb
cli
jae
jae
mov
loop
es
cld
cmpsl
sub
dec
add
inc
xchg
push
mov
btsl
out
jmp
push
test
popf
and
fsubrl
imul
sti
inc
out
lret
add
mov
inc
xchg
mov
mov
jp
lret
mov
lahf
inc
cmp
or
scas
cltd
fs
jl
mov
cwtl
inc
mov
cmpsl
inc
test
or
push
push
or
adc
jmp
and
and
sti
jns
push
aam
call
sub
cmp
and
cmp
sbb
pop
fbld
icebp
pop
cld
movsb
add
jbe
dec
repnz
imul
aad
test
loopne
ds
out
cmp
test
std
lds
mov
ds
pop
cmp
ss
in
ficoms
mov
loop
imul
adc
cld
jo
in
out
mov
jno
test
icebp
clc
add
sub
hlt
pop
sbb
out
ja
mov
sahf
xor
cmc
fsubr
mov
sbb
shl
shrb
xor
addr16
lahf
aas
adc
lds
mov
xor
dec
sub
repnz
jge
fsubl
inc
cmp
jnp
mov
jmp
push
sub
mov
push
pop
mov
gs
imul
std
aas
shrl
adc
or
sbb
icebp
cmp
xor
fistl
negl
sbb
jg
imul
mul
jle
fcmovnb
pop
in
sbbb
loop
pop
jmp
xor
in
test
xor
and
push
sbb
out
mov
arpl
sbb
mov
in
lods
and
push
xchg
in
lret
cmpsb
mov
mov
popa
lret
ljmp
sub
ficoms
pushf
pusha
dec
out
push
xor
inc
jmp
outsl
mov
and
ret
movsb
lods
xor
and
es
mul
loop
jg
pusha
pop
jnp
pop
fs
movsl
loope
pop
shr
mov
in
lret
fucom
in
dec
cmp
pusha
cmp
lds
les
imul
cltd
test
adc
xchg
fildll
daa
mov
fiadds
mov
orl
xchg
in
aam
aam
and
insl
mov
enter
add
popf
fwait
jecxz
xor
mov
js
add
adc
inc
imulb
jb
lret
es
jno
sub
sub
sti
dec
inc
cwtl
rclb
outsl
lods
in
pop
inc
add
int3
mov
xchg
pop
lret
sahf
aam
sub
inc
add
bswap
jbe
adcb
cli
and
mov
sub
sub
nop
lgs
ret
data16
jp
nop
popf
push
sbb
ficomps
xchg
dec
add
cmc
xor
sar
add
push
fcmovu
dec
clc
lods
lret
in
addr16
mov
cmp
push
movsb
std
pop
sbb
or
and
lods
jno
adc
fs
xchg
dec
cmp
adc
fbld
lahf
adc
out
sahf
popa
lods
lret
push
enter
inc
mov
xchg
xchg
jnp
cld
lcall
imul
in
adc
into
mov
movsl
pop
pushf
imul
mov
dec
leave
sub
cmp
push
or
enter
push
dec
adc
mov
cmp
push
push
and
les
out
dec
push
xor
add
xchg
xchg
out
lods
push
mov
pop
andl
mov
outsl
aad
mov
pushf
pop
cmpsb
rol
je
lds
xchg
pusha
roll
inc
jbe
jb
aas
mov
inc
and
outsl
adc
mov
add
test
inc
pop
fs
ljmp
and
imulb
and
xor
sub
jmp
lcall
and
mov
inc
fmul
push
sti
adc
lcall
test
lock
ja
dec
repnz
cmpsl
pusha
andb
lret
mov
xchg
push
jnp
mov
inc
fwait
lods
insb
adc
mov
out
fsubp
jg
rcll
dec
jle
xor
pop
sbb
lahf
dec
push
imul
gs
xor
mov
push
in
pop
mov
xchg
scas
pop
xchg
xchg
js
scas
xlat
add
arpl
je
xchg
sti
jbe
repnz
push
mov
cmp
nop
or
push
sbb
and
or
cmpb
sbb
mov
imull
mov
lret
push
enter
loop
cs
outsl
loopne
in
ds
paddsw
iret
jge
sub
inc
jg
mov
cmp
scas
lea
xor
cltd
ret
dec
sti
push
fsubl
ds
shll
adcl
xlat
and
call
lahf
jmp
aas
cmp
les
mov
aaa
jmp
fld1
push
adc
into
aam
sub
lret
mov
jp
jb
idivb
adc
push
push
scas
iret
mov
pop
and
daa
test
pop
cld
iret
outsb
jae
lods
js
ljmp
leave
out
inc
pop
out
addr16
icebp
cmp
ret
rol
mov
inc
in
das
lds
jecxz
mov
jnp
sbb
sbb
test
out
sar
adcb
pop
xchg
out
imul
sbb
imul
jae
popf
fxch
mov
loope
cmp
pop
xor
sarl
cmpsl
scas
enter
and
cmc
mov
divl
stos
cmp
insb
cmpsl
sbb
pop
testl
loopne
push
idiv
push
jg
push
test
sub
shll
test
cmp
pop
add
out
mov
adc
xchg
lods
mov
jnp
add
aas
xchg
pushf
mov
cmp
mov
inc
push
sub
sbb
mov
add
xchg
dec
mov
hlt
mov
icebp
loope
mov
cmp
ss
cs
movsl
test
fstpl
ret
out
dec
lds
outsl
sub
xchg
push
jge
cmp
sub
and
jmp
lods
fnstenv
jae
xchg
neg
and
jbe
and
int
shl
cmp
adc
jno
lret
or
lods
andb
xchg
out
and
popl
andb
repnz
jge
xor
jno
push
sub
test
push
cmp
lods
mov
mov
xchg
pop
jmp
mov
out
adc
adcb
lcall
xor
loopne
xorl
pop
rcll
or
add
scas
add
fbstp
adc
sahf
into
xor
jmp
insb
inc
ss
bound
lret
adc
test
mov
xchg
jle
pushf
mov
cmpsb
cmpsb
js
jmp
mov
sub
das
out
ret
fimuls
lcall
mov
jle
jmp
gs
push
scas
adcl
push
adc
inc
fidivrl
out
aaa
push
xor
ror
sbb
sub
xor
dec
outsl
inc
inc
lret
push
ds
cmp
bound
and
cmova
push
xor
mov
jmp
pop
xchg
lahf
jb
xchg
or
out
jnp
mov
lcall
push
mov
mul
pop
mov
popa
sub
xor
cmp
scas
in
and
ds
cmp
dec
push
pop
xlat
bound
ror
xor
test
add
sbbl
or
loopw
mov
mov
cwtl
mov
mov
je
jae
ja
jmp
divps
testl
and
das
addr16
mov
int3
push
je
sbb
cli
sub
or
push
mov
dec
xor
mov
test
inc
lea
test
xchg
jge
mov
xlat
or
sbb
adc
xchg
lods
cli
int3
dec
arpl
js
pop
jae
mov
sbbl
xchg
jl
lock
adc
movsb
gs
inc
out
cmp
dec
int3
jae
xchg
negl
sbb
iret
cli
adc
and
push
and
dec
subl
xchg
push
lret
adc
and
lret
outsl
and
shll
cmc
cmp
or
cmp
mov
sbb
in
shlb
mov
mov
and
sub
pop
pop
aam
sub
aam
add
cs
jg
aam
in
dec
mov
daa
xor
adc
dec
and
inc
inc
aaa
lret
sbb
fbld
data16
sub
pop
pushf
sbb
out
lret
ret
or
lds
inc
pop
xor
cs
and
movsl
add
out
in
imul
sbb
imul
xor
bound
mov
jge
or
dec
adc
sbb
out
push
imul
sbb
jo
fsubl
inc
hlt
jg
popf
push
pusha
ss
mov
clc
out
and
sbb
or
aad
push
or
sarb
fistl
xor
push
and
rcll
inc
push
enter
pop
pop
movsb
mov
lock
shl
mov
inc
outsb
push
sti
sbb
or
mov
inc
inc
jl
and
lea
aas
jge
repz
lea
cmp
aas
in
aam
sub
push
imul
stos
addr16
xchg
adc
fwait
test
pop
ficompl
pop
stos
adc
lret
cmc
xchg
xor
or
dec
lahf
cmpl
call
stos
rclb
sbb
sub
xchg
enter
rorb
dec
sahf
or
fidivl
or
push
and
scas
xchg
inc
add
cmp
sub
cwtl
inc
push
inc
fcoml
scas
sub
inc
add
add
adc
pop
lds
fwait
out
mov
inc
cli
add
scas
push
jp
mov
xor
aam
movsb
lods
sub
lock
cld
mov
fildll
add
xlat
pop
shl
mov
mov
ret
xchg
cmp
pop
loope
fsts
fs
icebp
adc
mov
arpl
and
cmp
ficompl
movsb
add
clc
jge
sbb
fs
jmp
lds
adc
loope
pop
pop
inc
aas
clc
inc
adc
cmp
mov
das
cmpsb
lds
push
xchg
inc
pop
mov
in
jne
jo
mov
outsb
inc
negb
jo
in
ret
shll
lods
sbb
and
lahf
call
cwtl
sti
hlt
xchg
cmp
fwait
pop
shl
sub
push
jecxz
frstor
sbb
aad
lods
lods
arpl
cli
dec
loope
adc
daa
pop
adcl
jne,pn
pushw
shlb
lea
dec
xchg
stos
cli
pop
push
add
pushf
add
or
xchg
rcr
and
push
imull
in
or
sbb
push
xchg
jle
out
mov
lock
push
lcall
mov
imul
sub
mov
je
dec
jno
out
add
mov
xor
adc
fsub
lods
push
sub
push
mov
jl
daa
sbb
ds
pop
data16
rorl
push
xor
mov
xchg
push
subl
outsl
mov
fbstp
mov
add
insb
and
jne
lret
sbb
and
int3
loope
lret
test
push
xlat
add
cltd
out
dec
outsb
dec
loope
das
xchg
mov
inc
mov
mov
out
xor
lock
dec
cli
cs
push
orl
shll
ror
xlat
push
test
repz
xchg
sbb
mov
cmp
inc
mov
mov
fisubs
repnz
mov
and
adc
sub
cmpb
movsl
push
icebp
std
xor
lret
xlat
stos
rcrb
xor
push
pop
inc
mov
das
or
sub
leave
push
inc
shrb
mov
leave
lret
xchg
pop
push
jle
jae
in
mov
popf
insb
cltd
xor
test
jb
out
mov
std
out
shll
cmp
dec
rep
mov
add
dec
fcmovb
pop
xchg
sbb
scas
jl
inc
repnz
add
lods
dec
pushf
or
enter
mov
adc
mov
lcall
rcrb
xor
xor
mov
fcmove
test
xchg
clc
fs
jle
inc
ljmp
ret
les
stc
or
jns
mov
jl
pop
stos
in
cmp
cmp
adc
arpl
inc
fiaddl
ret
dec
xchg
pop
cld
dec
dec
mov
jmp
push
jmp
sub
mov
and
lods
int3
and
test
inc
subl
dec
and
inc
push
or
inc
mov
in
mov
mov
fwait
decl
inc
int3
sub
lock
cmp
repnz
or
cmp
sub
mov
mov
stc
addb
pop
scas
pop
int
addr16
cmp
mov
dec
mov
jge
pop
loope
cmp
enter
push
jg
push
loope
jno
pushl
mov
test
push
dec
jp
xor
sub
and
js
sub
ss
pop
adc
xor
push
rolb
inc
hlt
cmpsl
jae
jns
and
lock
int
test
inc
xor
adc
inc
insb
test
add
dec
adc
pop
stc
push
popa
inc
fisubrl
addr16
adc
movl
movsl
fs
mov
jmp
sti
cmpb
inc
sbbl
or
mov
pop
mov
pushw
sub
out
push
and
sbb
pop
lret
pop
mov
sbbl
pop
mul
adc
in
dec
push
adc
out
popa
roll
cmp
into
jge
mov
outsb
repnz
dec
cmp
repz
hlt
add
add
out
jae
inc
jl
xor
lods
xchg
xor
mov
and
jno
jno
shll
sbb
jno
adc
call
inc
pusha
in
adc
push
enter
jl
xor
jg
xorb
jo
ss
jnp
enter
adc
enter
scas
lods
xor
mov
xchg
test
jae
and
adc
dec
cmp
pop
cmpsb
add
lock
imul
cmpsl
push
push
push
sub
sbb
sbb
cltd
cmpsl
stc
xor
mov
and
out
loop
jp
hlt
and
cmpsb
adcb
iret
test
mov
cmc
dec
lea
pop
dec
mov
leave
adc
insb
mov
xchg
adc
repz
shl
or
pop
mov
lods
fldenv
or
or
cmp
sub
xorb
dec
mov
cmp
push
mov
test
add
and
fmulp
lods
fwait
adc
sub
movsb
pushf
jne
leave
sub
hlt
sar
mov
xor
xchg
pushf
lods
pushw
ret
pop
mov
fs
jg
add
mov
and
enter
loope
adc
mov
rcrb
cltd
les
mov
scas
mov
je
xchg
inc
hlt
enter
insb
stc
fdivs
xchg
xchg
sarl
scas
add
loope
lret
inc
mov
lock
mov
xor
pop
fwait
mov
bound
into
outsb
inc
ja
push
outsb
dec
loop
dec
or
dec
cwtl
pop
cmp
cld
mov
jp
and
das
jge
loopne
fldcw
xor
xchg
mov
dec
lcall
mov
movsb
stos
xchg
or
push
shlb
xchg
andl
sub
cwtl
xor
sub
scas
out
push
pusha
mov
jge
push
sub
and
aad
add
adc
xchg
stos
add
cmpsb
jle
sub
pop
nop
cmp
xor
insb
mov
inc
sbb
dec
or
int3
jo
in
cwtl
or
ret
ss
mov
and
ret
dec
cmp
je
lods
es
mov
mov
shlb
xchg
and
xor
jns
mov
or
stc
cmc
cli
push
pop
dec
cwtl
fs
jns
cmp
sahf
in
add
mov
jg
mov
xor
jae
inc
ss
shll
fwait
int3
cmp
enter
fwait
in
stc
xchg
pop
jno
das
ljmp
xor
sbb
cmp
push
mov
mov
hlt
xor
jbe
iret
out
adc
loopne
leave
pop
sub
sbb
sahf
jecxz
jae
test
out
and
dec
fldt
insb
std
cmpl
push
dec
fbld
cmpl
mov
cli
subb
addl
xchg
and
loop
mov
movsb
lock
jp
lret
aam
lahf
lret
adc
sbb
daa
aad
xchg
cwtl
pop
popa
js
dec
and
add
mov
inc
out
lock
xchg
das
nop
lods
jb
and
push
inc
lahf
inc
out
push
xor
loop
push
jp
mov
cltd
add
mov
fisubrs
mov
roll
xor
adc
mov
pop
cmp
call
outsb
xchg
stos
stos
cmpsl
mov
rcr
adc
movsb
jbe
aam
sub
pop
mov
sti
xchg
bound
or
sarl
in
sahf
xchg
sbb
stc
jge
pop
inc
jmp
hlt
into
aam
mov
mov
out
xor
dec
pop
push
pop
inc
xor
sbb
mov
mov
fcoms
pop
lock
aas
jle
xchg
bound
jae
test
dec
packsswb
mov
mov
add
rcrl
jmp
jnp
rcrb
adc
loopne
sbb
cmp
scas
mov
xor
cmp
das
lea
sbb
mov
loope
clc
push
mov
call
or
push
je
sbb
xor
jl
imul
rcrl
jmp
cld
scas
sbb
lret
pop
pop
cmp
jne
ds
test
cld
stos
jl
testb
dec
jnp
cmp
add
xorb
mov
add
cltd
daa
jg
xchg
jne
cmp
fs
inc
xor
daa
adc
scas
ds
cwtl
test
aad
pop
push
push
and
dec
rorl
mov
mov
jbe
pop
call
pop
imul
in
icebp
iret
sbb
lds
xchg
int
inc
fwait
lock
sub
fsubs
xchg
dec
loope
jmp
sbbl
jge
inc
loopne
shll
mov
imul
shrl
xchg
and
cmpsb
in
cmp
jmp
push
mov
cmp
testb
mov
lods
sahf
arpl
arpl
xchg
adc
dec
imul
sbb
xor
jecxz
sub
pusha
mov
pushf
mov
push
mov
jbe
insl
cmc
mov
shlb
push
mov
stc
gs
bound
sbb
or
nop
pop
movsl
arpl
lds
cmpsb
sti
bound
lock
add
inc
mov
scas
mov
or
movsb
hlt
push
xor
xor
jmp
xchg
xor
js
inc
nop
out
repz
inc
xor
enter
pop
mov
cmpb
xor
popa
rolb
fbstp
dec
xchg
loope
imul
sbb
dec
inc
lock
lret
fwait
push
jae
add
ret
push
dec
mov
adc
into
inc
xchg
cmp
gs
jns
call
fsubl
pop
mov
dec
sub
call
jle
stc
iret
das
and
sahf
rcr
pop
mov
dec
lock
sbb
inc
out
es
xor
pusha
std
fsts
xor
dec
loope
movsl
bound
mov
bound
mov
inc
gs
in
xchg
insb
xor
adc
sub
mov
in
rcll
aas
imul
lret
int3
or
sbb
imul
mov
js
repnz
mov
cli
add
gs
mov
cs
mov
adcb
scas
sub
stc
sub
in
dec
jbe
pop
sbb
adcb
inc
ja
ja
cmp
movl
repz
cmp
vmread
pop
sbb
sbbb
mov
arpl
aam
lods
mov
add
clc
pop
dec
ret
sahf
xor
ljmp
or
jle
icebp
add
test
ret
jge
rorl
mov
mov
lahf
add
jmp
aas
pop
xor
sub
sub
insb
push
jp
jp
into
std
mov
cmpsb
imul
fldenv
stc
aad
xorl
push
and
add
push
ss
loop
call
xor
push
jno
mull
pop
int
jmp
fsts
jmp
jp
and
jno
jb
push
push
mov
scas
pusha
lea
sbb
jg
lret
aam
ja
xchg
out
ds
and
and
cmpsb
iret
fs
sub
inc
push
sbb
rolb
jg
adc
stos
sbb
and
mov
ljmp
rclb
ss
lcall
iret
jmp
test
out
jl
push
xor
mov
inc
sti
lret
je
jge
push
xchg
andb
call
or
js
or
push
ja
gs
sbb
or
test
jecxz
movsl
jo
inc
fisubl
imul
mov
mov
lcall
aas
lret
scas
inc
pop
cmp
lds
in
mov
xchg
jl
in
sbb
adc
and
xchg
leave
adc
aaa
ficoml
shlb
or
mov
cmpsb
xchg
cmpsb
dec
ss
inc
jg
je
adcl
mov
adc
mov
data16
enter
mov
bound
stos
push
or
nop
loope
aad
ficoml
je
ss
push
push
xor
inc
clc
add
dec
negb
add
movsb
or
push
test
pop
xor
jle
add
shrb
jge
pop
jecxz
push
bnd
scas
dec
mov
push
call
sbb
test
test
mov
push
icebp
sbb
mov
ja
mov
psubusb
and
inc
sbb
into
movsl
or
push
pop
mov
in
sbb
add
lcall
pop
inc
ja
pop
pop
ljmp
call
aaa
xchg
fidivs
in
jmp
pop
jl
outsb
das
push
hlt
fidivrs
sub
in
adc
and
insb
addr16
nop
inc
adc
leave
cmp
xchg
xor
adc
insl
ret
test
mov
outsl
cwtl
xor
out
popf
jne
fimull
dec
test
dec
xchg
mov
scas
fcompl
in
ss
loope
mov
push
stos
sbb
leave
dec
or
xchg
xchg
mov
or
xor
pop
outsb
or
in
in
sbb
data16
xor
fisubrl
mov
fadd
scas
sbb
xchg
in
jmp
scas
mov
cmc
jl
pop
xchg
ret
add
into
pop
mov
sbb
loopne
add
inc
pop
lret
bound
xchg
push
sub
xchg
mov
xlat
cmp
daa
cmp
sarb
int
imul
pop
sub
push
and
sarb
dec
sti
xchg
imul
shlb
lcall
cltd
shr
mull
xor
mov
adcl
scas
adc
aaa
cs
roll
int
push
and
push
std
add
enter
jle
jle
xor
sub
and
xor
sbb
pop
int3
test
pop
and
dec
xchg
xor
add
add
notb
mov
ljmp
imul
sahf
movsb
mov
mov
push
mov
rcll
xlat
sub
pop
out
aam
jecxz
pop
arpl
in
mov
push
push
mov
pop
sbb
lahf
icebp
lret
push
sti
mov
mov
jle
cmp
pop
jg
sbb
cwtl
ds
adc
decl
ffree
mov
mov
data16
sub
test
nop
inc
imul
adc
cltd
enter
lds
cmp
mov
movsb
and
jp
lds
cwtl
stos
cli
mov
mov
fabs
aam
jb
and
mov
adc
sahf
enter
xchg
jmp
cld
or
dec
cltd
push
adc
fstps
test
mov
aaa
cmp
loopne
cmc
gs
sub
movsl
sub
ss
pusha
movl
movsb
stos
and
jb
push
repnz
mov
jbe
mov
icebp
test
cltd
pop
dec
mov
ret
adc
cmp
lods
out
bound
ss
sub
movsl
push
push
sahf
rorb
sbb
loope
sub
movsl
std
aaa
sub
rcll
xor
mov
and
fsubrs
inc
into
clc
pop
aam
in
mov
push
xchg
aam
and
pop
leave
insb
or
pop
adcb
xchg
mov
fs
nop
dec
pusha
mov
cmp
mov
pop
mov
mov
iret
call
in
jo
cmpsl
adc
shrl
stos
jns
cli
fiadds
xchg
xchg
push
cwtl
lds
push
pusha
adc
int
push
dec
int
enter
or
push
xchg
pop
hlt
inc
je
test
jbe
sbb
xchg
hlt
add
sbb
faddl
or
cmp
dec
repz
imul
adc
mov
xor
mov
je
dec
inc
pushf
jno
jge
or
outsb
fldcw
jne
movsl
imul
add
xor
adc
or
pop
jl
pop
fwait
bsf
mov
test
loopnew
mov
fstpt
or
fists
inc
test
dec
pusha
push
sbb
lea
imul
cmp
lods
adc
adc
sub
cwtl
cmpsb
aad
mov
mov
test
pop
jne
outsl
sbb
cmpsb
and
rorl
movsl
ja,pt
leave
add
ss
mov
push
popf
arpl
mov
or
fbld
push
or
xchg
push
mov
add
psubusb
and
repnz
in
or
dec
into
lock
scas
xor
outsl
jg
shr
in
jbe
jp
mov
cs
movsl
adcb
jae
mov
pop
or
and
js
jmp
nop
stc
sub
test
ljmp
dec
cltd
sti
movl
mov
leave
fldl
push
pop
mov
jmp
mov
jb
jg
ret
push
pusha
push
div
sbb
xchg
out
adcl
out
cs
jb
scas
int
or
sti
mov
inc
mov
outsb
jb
hlt
push
stos
mov
ffree
push
cs
jbe
jge
insl
jbe
test
rclb
movsl
mov
mov
sbb
fiaddl
xchg
push
nop
mov
mov
sahf
mov
daa
inc
mov
pusha
enter
out
lods
push
adc
sti
push
pop
cltd
pop
ljmp
dec
test
ret
xor
in
pop
aaa
pop
cltd
lods
mov
mov
mov
pushf
xchg
stc
push
sub
mov
jnp
ljmp
pushf
in
icebp
fsubrs
add
pop
sbb
push
pop
adc
js
test
mov
mov
out
pop
dec
rcrb
in
insl
push
fmuls
lock
sbb
and
sahf
pop
cld
cltd
push
mov
rcrb
enter
pop
mov
xor
std
int3
and
movsl
jl
inc
sub
or
push
fstpt
test
jnp
sbb
shl
js
data16
pop
pop
imul
in
sti
mov
push
mul
fs
shrl
jne
rcr
inc
dec
inc
notb
or
pushl
cmp
cs
push
inc
test
in
fistpl
push
out
std
lret
daa
repnz
xor
fsubr
push
fmuls
cmc
arpl
cmpsb
ss
xchg
cmp
sbb
sbb
fisttpll
or
cmp
aas
jle
dec
popf
iret
mov
sbb
pushf
mov
mov
negb
sbb
clc
mov
cltd
in
and
jbe
xlat
lods
mov
inc
mov
xchg
or
stos
mov
js
xchg
adcl
clc
mov
cld
mov
cmpsb
dec
addr16
inc
das
pusha
fimuls
and
inc
dec
popf
mov
dec
movsb
cmp
push
sahf
and
add
mov
add
dec
stc
adc
jge
and
pop
enter
cs
in
or
fmull
inc
arpl
push
add
add
das
sub
mov
mov
or
mov
push
adc
dec
mov
repz
mov
mov
cmp
orb
sbb
clc
les
rorb
ficompl
es
into
cwtl
dec
popf
add
ret
cltd
dec
dec
mov
cltd
in
scas
adcl
cmc
rorl
pop
dec
sub
jmp
stos
ror
mov
mov
pop
push
es
inc
out
imull
jb
call
add
sarl
sbb
xlat
mov
xor
mov
mov
add
jno
sbb
dec
aam
push
cmc
hlt
icebp
decb
mov
aas
pop
mov
mov
xor
call
das
push
cwtl
rol
push
hlt
mov
lahf
xor
les
or
push
out
adc
js
sub
and
jle
cmpsl
aam
pop
fs
mov
sbb
enter
push
shll
mov
jle
cwtl
pop
mov
sbb
dec
movsb
imul
mov
stos
jge
xor
mov
data16
adcb
inc
popa
das
xchg
daa
dec
pop
xor
mov
sub
rorb
test
sbb
or
out
sbb
jg
call
test
add
and
imul
cmp
lock
sti
mov
mov
shl
cli
sbbl
or
pop
iret
and
push
adc
incb
js
stos
roll
add
addl
je
ret
ljmp
jl
xchg
mov
stc
and
mov
push
popf
dec
mov
dec
adc
inc
test
lds
dec
icebp
xchg
loopne
pop
mov
mov
pop
jle
mov
ja
xor
or
imul
jno
xlat
in
dec
pop
in
push
xchg
fwait
imul
shl
jno
shlb
add
push
jecxz
cld
rcll
mov
mov
pop
jl
mov
sub
outsb
shlb
push
gs
jge
push
adc
adc
xor
loope
dec
inc
adc
sbb
cmp
fildl
fildll
sarb
sub
and
jl
dec
inc
jae
les
leave
mov
xchg
xor
dec
mov
dec
jl
or
popf
pop
inc
btc
xchg
std
imul
fstpt
jo
inc
add
aam
push
xchg
or
fmuls
cltd
lahf
out
xchg
dec
pushf
xchg
mov
mov
shrl
movsb
push
adc
test
loope
in
vpmovmskb
jo
sbb
mov
pop
fwait
cmp
add
dec
sbb
lret
rorb
jle
lahf
add
aaa
jb
mov
push
mov
stos
jae
clc
jno
dec
fsubrl
popa
aad
jo
ja
jge
popl
sub
inc
dec
loop
inc
fisttpll
mov
xchg
lds
jbe
mov
mov
scas
iret
inc
ret
inc
push
popa
push
inc
dec
les
push
outsl
jne
decl
inc
dec
fcompl
sub
cmpb
sbb
cld
andb
cmp
gs
and
jb
lea
xor
cmp
jb
aad
push
mov
xor
xor
jmp
js
xor
or
clc
adc
or
lock
popf
push
call
adc
ret
push
or
and
jp
dec
test
cmpsl
repnz
mov
imul
or
fadd
lods
sub
cmp
in
das
jmp
cld
dec
jne
push
add
ds
or
das
sarl
cmpsb
dec
es
mov
jne
ja
push
mov
jmp
popf
movsb
sahf
ficoms
pop
cmp
rorl
shll
fiadds
stos
and
popf
jl
rcl
cmc
or
push
ss
push
mov
jnp
sbb
outsl
repz
lods
roll
std
add
repnz
scas
sub
les
sbb
adc
ss
add
pop
gs
call
shlb
outsb
push
lods
jp
push
imul
cmpsl
push
mov
mov
inc
lret
cmp
mulb
sub
push
jae
xchg
test
xchg
mov
jle
sub
and
add
mov
outsl
fcompl
push
mov
rorl
iret
test
xchg
and
push
jp
scas
and
xchg
dec
add
test
cmpl
das
ret
mov
push
out
iret
ret
test
ljmp
mov
cmc
scas
pop
mov
mov
les
cmp
mov
loopne
fs
adc
mulb
into
jbe
xrelease
xchg
push
outsl
xchg
xchg
mov
push
repz
dec
jae
addl
lahf
cmp
sahf
lahf
pop
sub
sub
sbb
inc
scas
pop
add
cmp
or
cmp
xor
sbb
adc
mov
loopne
push
cli
mov
test
jecxz
ss
sbb
pop
add
fisubrl
dec
jle
and
iret
insb
mov
push
mov
icebp
aas
pop
fwait
add
stos
xchg
adc
push
cmpsb
inc
inc
pop
cmp
mov
ljmp
in
addr16
mov
in
xor
xchg
pop
jmp
inc
jmp
cmp
mov
insl
sub
pop
cld
dec
sti
dec
add
out
and
cs
adc
js
in
std
xor
test
cwtl
xchg
inc
push
neg
cmp
pusha
xorb
stc
push
sbb
ljmp
xchg
jmp
in
mov
adc
dec
jbe
jge
or
loopne
or
je
xor
cmp
cmpsl
mov
jg
ret
cwtl
clc
loopne
mov
sbb
mov
xor
sub
outsl
mov
imul
cmp
aaa
mov
arpl
ret
in
stos
popa
mov
jo
into
sarb
test
and
inc
jb
pusha
push
inc
sub
inc
pop
punpckhdq
add
cmpsl
or
je
lods
ficoms
xchg
daa
lods
lret
in
and
ljmp
add
pop
or
xlat
ljmp
mov
icebp
cmp
mov
out
dec
xor
repz
out
mov
pop
push
leave
lods
fistpll
pop
es
push
cmpsl
cmp
fsubrs
call
sbb
xchg
jle
mov
ret
rorb
gs
testl
movsl
or
and
aad
mov
sub
jge
inc
int
cmc
mulb
in
sti
sbb
loop
adc
shlb
and
mov
in
sbb
adc
mov
clc
xor
daa
sbb
scas
mov
sahf
sahf
ss
dec
aaa
lcall
cmpsl
mov
mov
mov
fnstcw
cmp
arpl
xchg
mov
nop
push
or
out
in
jb
or
push
pop
adc
pop
pop
cltd
testb
fistl
out
sbb
pop
jae
lret
jmp
je
dec
adc
fists
lea
mov
add
pop
push
cmc
sbb
inc
inc
in
rcl
pop
scas
gs
icebp
mov
inc
int3
in
sti
cwtl
add
jo
xlat
add
test
int3
inc
pop
and
repz
aas
js
and
sbb
push
lock
jo
out
sbb
pop
dec
pop
cld
ds
pusha
push
lea
xchg
add
cmp
or
lret
xchg
dec
fcoml
lahf
push
adc
fadd
cwtl
fmull
test
jg
xchg
push
sub
addr16
and
insb
push
jbe
dec
cmp
sbb
lcall
in
daa
or
movsl
cmp
and
je
adc
mov
adc
movzbl
roll
scas
xorb
aas
add
or
fwait
jmp
pop
mov
pop
out
shl
or
leave
mov
xchg
xor
int
jge
stos
mov
jge
xchg
mov
inc
jns
call
adc
xor
fwait
fs
xchg
and
dec
and
fnstenv
xlat
sti
lcall
cmp
cmp
dec
test
das
sar
inc
shl
rorb
xor
xchg
arpl
clc
icebp
add
call
movl
mov
cwtl
jno
push
adc
mov
popa
mov
mull
outsl
cmc
sub
xchg
jp
in
insl
loop
xchg
fpatan
lock
cmc
pusha
imul
dec
add
nop
dec
lea
pop
pop
xchg
dec
loop
cwtl
push
les
int3
adc
sahf
cmp
jb
test
fstpl
fcmovnbe
cltd
pop
shll
addl
xor
lahf
aam
sbbb
push
mov
mov
fstps
pop
icebp
cli
sbb
push
mov
scas
cmc
fimull
mov
int
adc
bound
mov
ds
les
jnp
test
cmp
scas
adc
dec
jne
mov
xchg
in
cmp
push
inc
pop
js
xor
mull
mov
aam
push
and
jne
fst
push
int3
xchg
iret
push
mov
clc
sbb
jle
mov
shrl
xor
pop
xchg
add
sub
lods
mov
mov
xchg
sahf
test
inc
xor
in
rcll
and
xchg
mov
sub
orb
mov
data16
stc
data16
xchg
stos
xchg
ret
sub
test
out
mov
mov
mov
lret
pop
cld
mov
xlat
sub
aam
iret
mov
lods
adc
mov
repnz
or
xchg
push
ljmp
sbb
push
ret
in
mov
mov
outsb
mov
cwtl
pop
mov
scas
inc
dec
sar
pop
movsb
pop
test
inc
orb
sahf
int
outsb
sub
iret
mov
dec
lods
adc
and
push
push
outsl
stc
out
or
inc
and
xchg
cli
pop
mov
and
mov
xchg
inc
sar
clc
jg
xlat
xchg
mov
test
push
inc
jle
mov
jecxz
push
rcrb
test
jns
dec
xchg
inc
sub
and
jbe
and
lods
push
add
xchg
aam
pop
addr16
mov
inc
jno
sub
inc
fcom
inc
cmp
xchg
adc
fwait
adc
sub
sbb
lret
sbb
or
das
clc
lods
mov
in
add
cld
divb
ja
das
and
loope
leave
push
jl
mov
push
dec
adc
inc
or
arpl
dec
dec
loope
jg
sub
xor
outsl
popf
pop
xor
andb
push
in
jmp
jns
cltd
jp
rcl
xchg
pop
fiaddl
mov
sub
push
or
lds
mov
jmp
test
cwtl
pop
add
jo
repnz
pop
push
and
loope
pushf
xchg
cmp
scas
xchg
cmc
jae
cmc
outsb
out
jmp
imulb
std
aas
add
jmp
mov
lret
pop
scas
jle
out
leave
pop
std
test
out
pop
stos
arpl
das
mov
and
sarl
mov
std
pop
sti
pop
mov
jp
insb
test
leave
cs
dec
fildll
out
add
fstps
data16
push
addl
push
and
hlt
xchg
dec
push
jo
out
add
andb
aam
sbb
popf
add
loope
outsl
arpl
dec
rolb
push
xor
inc
adc
jae
dec
aaa
add
dec
mov
stc
add
hlt
xchg
inc
mov
pop
mov
xor
mov
std
xchg
jns
int3
data16
in
adc
mull
test
repnz
int3
call
xchg
lods
jg
out
inc
idivb
dec
mov
in
push
stc
xchg
sub
movsl
add
fstpl
roll
jg
cmp
iret
bound
adc
mov
mov
dec
pop
hlt
outsl
stc
dec
sbb
fdiv
push
sub
pop
dec
and
stc
call
and
lds
addr16
bound
icebp
fldt
sub
cs
jecxz
mov
sub
push
mov
and
jne
and
xchg
out
xchg
sahf
fisttps
dec
shufps
sbb
in
out
push
push
mov
ret
xor
icebp
pop
or
fidivs
jbe
xlat
push
pop
minps
mov
sbb
jne
inc
push
sub
in
cmpsl
sbb
pop
adc
idivl
repnz
mull
mov
std
sub
fcoml
mov
stc
arpl
out
cs
cmpsl
xchg
mov
xchg
adc
addr16
push
xchg
popa
xor
jo
test
shll
test
cmp
mov
sub
decl
stos
mov
in
or
xlat
sbb
adc
into
inc
mov
int
xor
aad
adc
xchg
cmp
fsubr
fwait
push
ficoml
loop
mov
mov
test
nop
daa
stc
mov
and
sahf
xchg
enter
lret
fstpl
sbb
scas
sub
add
pop
outsb
es
add
sti
sub
mov
sub
pop
inc
cltd
adc
dec
mov
ret
or
jns
ss
outsl
ljmp
mov
clc
pop
jae
inc
imul
push
mov
les
movsb
mov
or
aad
and
test
mov
loopne
cmp
or
xchg
daa
sbbl
push
imul
rolb
jae
pop
hlt
sub
xor
ja
in
gs
add
jb
pop
rcrl
inc
push
out
stc
inc
fists
mov
pop
lcall
jbe
sub
pop
mov
movsl
lret
jne
in
xor
push
mov
in
je
or
inc
pusha
jecxz
pusha
mov
mov
xor
ficoml
fisubs
pop
push
jecxz
imul
stos
mov
outsb
dec
xchg
mov
mov
cmp
pop
mov
js
daa
or
ret
sub
inc
jl
test
mov
in
adc
xor
adc
std
adc
jge
in
push
aaa
into
inc
dec
sbb
push
pop
negb
jne
outsb
not
shlb
out
mov
test
rorl
mov
sahf
movsl
xchg
pop
popa
add
xchg
cmpsb
std
xchg
xchg
lar
in
pop
or
mov
scas
sbb
sbb
cmp
clc
push
jbe
fldenv
scas
ret
jnp
add
scas
pushf
xchg
mov
dec
movsl
fildll
mov
in
loop
xchg
xchg
das
push
mov
cmp
ret
sbb
adc
fldcw
sbb
jnp
loop
pop
ret
pushf
test
cmp
jns
mov
popa
dec
cmc
dec
sub
in
insl
jb
mov
test
xor
lods
arpl
mov
xchg
scas
adc
ret
push
mov
add
jns
mov
addb
mov
pop
sub
inc
inc
add
adcl
xchg
fsubrl
in
test
mov
fisttps
xchg
mov
adc
push
into
push
scas
pusha
or
iret
lds
xchg
mov
mov
je
lcall
sbb
xchg
shl
xchg
lock
add
aad
mov
mov
jbe
mov
mov
push
mov
decb
outsl
aas
je
out
mov
orb
fs
fimull
arpl
mov
fnsave
and
or
mov
rep
add
rcll
repz
sbb
mov
icebp
lods
dec
insb
stc
ficoms
lahf
pop
fldenv
add
or
xchg
addb
xchg
pop
mov
lods
das
or
or
rcr
mov
imul
xor
aam
cwtl
fwait
sbb
orl
mov
imul
cmpsb
pushf
ds
fsubr
or
fcoms
xor
xorl
mov
adc
xor
xchg
push
arpl
cli
push
inc
adc
movsb
push
mov
cli
add
mov
dec
hlt
xchg
push
push
and
cs
adc
xorb
cmp
sbb
mov
addr16
xchg
dec
cmc
rcr
sub
sub
adc
ficoml
in
dec
aam
or
xor
xchg
aam
pop
mov
jg,pn
lahf
outsb
inc
arpl
aas
cmp
pop
push
orl
or
and
mov
and
int3
cmp
pop
xchg
xor
ljmp
cmp
mov
int
or
in
pop
xchg
cmpsl
mov
pop
rcrb
mov
popl
repz
cld
test
fsubrl
pop
dec
scas
pop
aas
inc
das
mov
adc
mov
loop
dec
mov
lods
scas
addb
mov
and
mov
pusha
mov
shrb
out
dec
xchg
add
out
movsb
fisttps
scas
xchg
les
jnp
lcall
cmc
push
fisttps
mov
lahf
orb
leave
pop
pop
or
lcall
inc
loopne
repz
jp
or
iret
inc
insl
imul
jmp
popa
cmc
rcrb
add
roll
mov
sbb
push
rol
pushf
inc
pop
fcomps
jb
pop
popf
mov
and
nop
jbe
dec
mov
icebp
popl
jle
or
sbb
mov
insl
es
and
jge
and
test
js
inc
test
mov
mov
leave
jp
jnp
ss
aad
jbe
int
rorb
js
test
or
daa
push
and
jo
or
xor
inc
testl
imul
ret
les
pop
pop
fsts
jne
fsts
xchg
jb
imull
bound
call
dec
jg
rcl
arpl
xor
ljmp
xor
ljmp
mov
xchg
movsl
in
inc
test
xchg
mov
imul
testb
mov
lods
adc
icebp
test
jp
add
mov
cmp
les
fsubl
and
jnp
cmp
leave
mov
mov
shr
lret
push
sub
cmpsb
bound
and
cld
inc
out
daa
push
imul
stc
sti
inc
adc
cmpsb
cmpsl
sub
adc
sti
mov
adc
imul
enter
testb
and
outsl
add
sbb
add
mov
cmp
fisubrs
inc
pop
das
inc
fwait
mov
inc
push
out
mov
and
xchg
int
int3
lahf
push
icebp
nop
fsubr
and
adc
cld
dec
outsb
sbb
inc
aad
stos
loopne
idivl
mov
cld
add
pop
hlt
into
lods
sbb
sti
cltd
pop
sbb
dec
fistpll
cmp
jae
mov
outsl
jno
gs
jno
adc
adc
leave
inc
sarl
sbb
pop
shr
and
test
pop
stc
adc
andb
cmpsl
imul
xchg
cmp
cmp
mov
sbb
jb
push
sahf
lock
popa
enter
lock
mov
rol
sbb
test
jge
lahf
cmp
aam
imul
loop
lea
mov
lea
xchg
mov
negb
xchg
shrb
loopne
add
out
cli
push
imul
xorl
lcall
outsb
aad
lods
pop
mov
mov
aad
add
test
mov
fwait
int3
mov
inc
lds
or
decb
je
mov
daa
xorb
jo
ja
test
add
jecxz
imul
outsb
jge
int
jge
icebp
pop
mov
out
push
aas
mov
mov
mov
outsb
add
sub
cmp
pusha
jg
sub
int
mov
jb
and
jns
nop
popa
mov
ljmp
lods
push
ljmp
fs
shrb
fistpll
jne
scas
dec
in
loopne
inc
js
lret
aam
test
mov
mov
in
or
iret
inc
pop
imull
jmp
cmp
es
rorb
pushf
ja
push
add
fsub
int
rol
in
insb
push
je
or
fwait
xchg
dec
out
icebp
lahf
cmp
and
xor
pop
int
xor
gs
loope
add
int3
test
loopne
pop
movsl
cld
xor
jmp
mov
mov
addb
fld
pop
fptan
mov
mov
mov
add
adc
shlb
xchg
mov
and
stos
pusha
fsubrl
mov
pop
push
pop
jns
bnd
addl
rcrb
mov
push
cld
iret
xor
je
ljmp
inc
ja
dec
xchg
inc
hlt
shr
arpl
ret
push
mov
sbb
sub
cwtl
movsl
lahf
insl
sub
push
add
je
shrb
pop
sub
jg
lret
filds
int3
les
fwait
mov
mov
ss
pop
aaa
ss
aaa
and
int3
mov
clc
add
push
je
jmp
xor
xchg
fcom
out
out
dec
stc
cmc
sub
sub
jecxz
jmp
jp
dec
adc
loope
outsl
fcmovnbe
fstps
popf
xchg
cli
mov
movsl
cs
inc
xchg
cld
filds
sub
and
mov
mov
add
ret
push
es
jecxz
xchg
data16
pop
std
loopne
xchg
scas
iret
in
mov
stos
or
jns
in
adc
mov
cld
mov
mov
popa
push
xchg
jae
dec
lea
daa
mull
sbb
push
ret
incl
fidivs
imul
shrl
xor
jmp
aaa
leave
test
mov
bound
jns
jl
inc
leave
cmp
les
cmp
push
and
push
push
ret
mov
ficomps
mov
inc
jo
jle
notl
xor
test
mov
xor
mov
mov
push
xor
add
sub
mov
cmp
rcrb
popa
in
sbb
mov
cmpb
sub
les
call
cmp
mov
xchg
lahf
mov
ds
aas
movsl
mov
ficoml
push
xor
push
mov
sti
daa
bnd
sar
sbb
movsb
outsb
jne
pop
cmp
in
insb
push
mov
add
sub
jmp
and
iret
loope
rorb
add
nop
addr16
dec
lock
mov
push
jp
xor
adc
fs
mov
mov
mov
jp
or
mov
ja
in
mov
sub
cwtl
aaa
xor
dec
aad
in
mov
lea
mov
and
inc
lods
or
fs
jl
in
xchg
and
mov
dec
and
cmpsl
pushf
push
xchg
xlat
inc
xchg
inc
xor
imul
dec
es
jae
jecxz
es
dec
and
mov
add
aaa
dec
mov
int3
arpl
aaa
icebp
pop
push
test
cmp
mov
or
xor
nop
mov
ja
int
sbb
lock
xchg
or
jecxz
pop
ret
popa
add
sub
repz
andl
jnp
imul
loopne
psubusb
mov
push
scas
push
push
sbb
adc
sbb
inc
sbb
mov
push
pop
inc
adc
mov
leave
jae
mov
ret
out
ss
jmp
inc
outsl
and
dec
scas
aaa
test
mov
test
xchg
insb
dec
lds
std
mov
rclb
fnstsw
aam
dec
scas
sub
lret
add
clc
inc
push
lods
add
mov
cwtl
mov
daa
sbb
dec
fdivrs
pop
mov
leave
movsl
nop
aaa
or
mov
imul
mov
and
dec
mov
xor
mov
push
or
call
sbb
dec
or
mov
mov
xor
jl
dec
xor
cmpl
and
aaa
sarl
sbbb
xchg
xor
pop
and
push
inc
fwait
ljmp
adc
hlt
jmp
xor
jo
cltd
cmp
test
aam
lcall
mov
mov
jge
movsl
idivl
push
sbb
ret
inc
mov
gs
js
xchg
loopne
add
inc
cmp
loopne
js
popa
jg
push
pop
sub
dec
inc
cmpsl
and
jno
lcall
cmp
movsb
xor
mov
sbb
pop
ljmp
in
push
sub
test
outsb
pop
jecxz
jg
mov
insb
dec
mov
dec
xchg
mov
xchg
sbb
cmpsb
push
pop
rep
test
jb
test
mov
jp
dec
punpcklwd
jnp
dec
push
movb
fs
pop
cmp
iret
shl
jae
push
dec
aaa
out
adc
outsl
test
in
orb
mov
in
mov
jmp
repz
add
aaa
pop
pop
add
adc
mov
push
aas
fstl
push
in
xchg
in
mov
jl
dec
push
aam
adc
jb
test
adc
adc
pop
cmpl
mov
sbb
mov
xchg
dec
decl
sbb
sbb
push
aas
jno
incl
pop
rorl
mov
and
push
adcl
aas
push
movsl
cmp
pop
std
std
andl
add
leave
cmpsl
ljmp
xor
xor
add
jae
sub
xchg
test
outsb
lods
xor
inc
pop
pop
jmp
imul
cli
ror
ja
mov
lea
cli
icebp
testl
fbstp
orl
xor
fxch
push
jle
js
in
jnp
and
jo
fmulp
mov
fwait
pusha
arpl
ja
movsb
bound
rorb
mov
pusha
shrl
dec
and
mov
add
imull
pushf
out
hlt
outsl
push
xchg
stc
cmp
xchg
cli
jge
repnz
sti
faddp
mov
in
sbb
insb
ret
std
xlat
daa
lcall
inc
inc
xchg
out
pusha
mov
movsl
aas
or
xchg
ljmp
mov
stc
cltd
mov
iret
xchg
jne
pop
repz
lea
sarl
cld
popf
loopne
jb
das
shrb
mov
scas
pop
rcrl
sti
and
dec
popf
mov
sbbb
pop
dec
rolb
inc
cltd
cvtdq2ps
push
mov
adc
inc
lcall
sub
in
mov
and
rorb
xor
jmp
ja
pop
fdivrs
pop
push
cmp
adc
cli
push
push
sarl
inc
sar
stos
or
push
out
cwtl
fdivrs
out
jmp
insl
mov
dec
dec
sahf
adc
or
loop
shrl
ret
add
fabs
inc
test
jnp
aaa
pop
in
fdivrs
cld
fiaddl
cltd
or
dec
cmp
push
jecxz
outsb
mov
iret
aad
push
or
test
pop
test
inc
push
xchg
inc
cmpsb
das
jno
add
add
repz
inc
inc
popa
call
mov
roll
xor
mov
jbe
pusha
sbb
xlat
cltd
dec
push
out
jb
filds
shl
dec
out
push
xor
and
add
xchg
test
push
in
jae
xchg
ret
push
pusha
gs
sarb
and
scas
ja
aas
sbb
sbb
sbb
pop
ficomps
mov
fmuls
cld
dec
push
mov
dec
loop
and
adc
test
push
ljmp
xchg
lods
push
or
push
sar
inc
mov
jg
in
daa
xchg
les
jnp
insl
orl
lods
fdivs
call
jmp
ror
nop
mov
mov
xor
out
jle
push
ja
push
pusha
ss
call
lret
jl
add
xchg
ljmp
movsl
adcl
pop
std
adc
adc
xchg
cmp
mov
xlat
ret
xor
dec
loopne
dec
inc
jnp
mov
pop
in
ficomps
aad
ficoms
mov
shrl
and
push
lds
mov
xchg
mov
jbe
push
aaa
stos
mov
mov
lock
inc
jo
imul
push
daa
cmp
inc
cltd
add
jp
out
test
mov
stc
out
daa
jg
jmp
pop
sbb
push
pop
mov
push
adc
mov
mov
scas
movsl
cld
dec
or
mov
inc
mov
mov
faddl
cmc
rorb
aad
dec
imul
adc
jb
jge
aad
xor
addb
daa
mov
and
call
or
in
jne
fwait
stos
les
pushf
data16
ss
adc
add
dec
jae
mov
fnop
sub
imul
outsb
add
test
push
in
stos
in
inc
imul
push
outsb
pusha
out
xchg
fsubr
lods
add
push
jmp
mov
mov
or
out
dec
sbb
or
lods
ja
pop
fldcw
lahf
dec
fistl
jbe
sar
push
addl
mov
popa
int3
subl
scas
cmp
sub
and
mov
rcrb
jno
dec
outsl
cmc
sahf
xchg
add
lcall
je
inc
xor
inc
in
loop
orl
addr16
adc
sub
fldenv
inc
dec
pop
hlt
popf
scas
pop
aas
dec
adc
cmp
jecxz
stc
lret
xor
test
lods
stos
or
ss
bound
push
mov
and
sub
mov
sbb
pop
cltd
cld
jae
out
mov
inc
loopne
cmp
inc
push
addr16
add
jne
shrb
adc
xchg
mov
fwait
xchg
xchg
jbe
rol
cltd
out
mov
push
idivb
adc
in
sub
decb
lods
sbb
mov
jl
jl
pop
mov
rorb
lcall
pop
lods
into
push
bound
push
mov
cltd
xchg
push
mov
outsb
fists
inc
xor
outsl
push
pop
lds
inc
jp
sub
outsl
push
dec
add
test
xchg
cmpsl
pusha
stc
les
dec
add
mov
iret
pop
push
sbb
add
and
daa
and
lods
dec
jbe
sbb
or
std
nop
mov
test
mov
repnz
ret
pop
sub
testb
fstpt
lods
iret
in
jl
sub
mov
pop
lea
mov
and
add
sbb
cmpsl
sbb
aas
xor
sub
fs
sub
lret
popf
test
fiadds
mov
fcom
jp
jle,pn
repnz
jp
xchg
xchg
mov
ss
insb
sahf
push
sarb
cmpsl
les
ret
mov
mov
ds
lret
dec
jo
lret
jecxz
adc
push
inc
adc
push
push
cmpsb
jb
and
js
adc
ja
cmpl
lret
sbb
rcll
jge
popa
aaa
dec
scas
mov
sbb
cwtl
adc
imul
inc
pushf
mov
cmpsl
cmpsb
pusha
dec
mov
je
cmc
mov
adc
loop
adc
lret
mov
push
pop
add
lods
add
cmp
imul
or
loop
or
cli
lea
je
les
jno
mov
cmc
and
xchg
andl
cmp
int
repz
push
jno
loop
fldcw
sub
scas
sbb
xor
push
mov
imul
adc
mov
movsb
xchg
aaa
xchg
dec
mov
rcl
clc
xchg
mov
scas
clc
repnz
push
lret
fisubrl
push
jo
xchg
incb
js
icebp
jmp
out
repz
test
push
sub
sbb
pop
sarb
lcall
cmc
gs
mov
fsubr
dec
lea
mov
repnz
out
mov
cmp
jmp
cmp
jbe
into
mov
ljmp
daa
inc
or
aad
fcoms
data16
hlt
xor
mov
mov
push
inc
cmc
push
add
xor
lods
hlt
xchg
popf
addr16
movsl
inc
inc
mov
mov
xor
test
les
jge
outsl
add
adc
loope
and
pusha
pop
cmp
cmp
les
ss
fwait
sub
sti
mov
cmp
xor
pop
pop
fwait
out
in
push
dec
and
mull
or
or
iret
mov
add
mov
ret
sub
mov
adc
loope
mov
xor
inc
int3
repz
push
iret
arpl
add
lock
adc
xchg
jns
mov
push
into
ret
pop
fisubrs
aaa
cmpb
repz
xchg
in
jno
push
call
jecxz
jb
loop
pushf
test
aas
imul
mov
jecxz
jge
loop
cli
mov
jmp
push
shr
jo
push
jns
mov
fnstenv
enter
out
addb
dec
sbbb
test
xor
inc
aad
lock
fldcw
bound
test
aam
in
mov
cwtl
mov
pop
lret
dec
jmp
add
or
stos
in
and
jno
fistps
lods
lods
sub
pushf
divl
jno
fwait
mov
and
xor
sarb
into
adc
inc
jle
push
pmaxub
cmp
add
loope
xchg
mov
xlat
cmc
insl
add
lds
mov
xchg
sbb
sub
fdivrl
add
and
lds
jge
and
mov
cmp
cmp
je
mov
cld
sub
inc
cmc
lock
jge
or
scas
and
sbb
ret
mov
xchg
icebp
mov
cmpsb
pcmpgtd
jne
daa
or
leave
mov
add
mov
xchg
push
mov
gs
xchg
sti
rcl
sbb
les
dec
pop
pop
ja
adc
mov
pusha
rcrb
stos
sbb
imul
add
dec
shlb
das
pop
jmp
xor
stos
push
sub
fdivr
dec
mov
stos
mov
sbb
push
ljmp
mov
cmp
inc
sub
or
leave
scas
push
xchg
push
scas
dec
mov
mov
jle
xchg
push
rorl
mov
test
inc
inc
jmp
mov
out
andl
lret
movaps
sbb
cmp
mov
mov
rcr
ret
xchg
mov
popa
lret
sti
fdiv
sbb
mov
shll
ret
push
mov
popa
pop
jp
mov
sub
jnp
add
mov
inc
ja
cltd
mov
jne
aas
fsubs
js
shlb
repz
into
mov
pusha
test
xor
ja
xor
push
imul
hlt
add
cmp
fwait
insb
mov
xchg
xor
xlat
shrb
jle
fwait
inc
and
es
mov
inc
dec
and
test
push
ficomps
mov
mov
pop
push
pop
addr16
cmpsb
in
mov
repz
stos
lret
push
in
imulb
mov
lahf
jbe
xchg
repz
aaa
push
pop
add
pop
mov
xchg
jecxz
stos
cs
mov
testl
cs
push
inc
out
and
lods
popf
lea
and
mov
push
fsubrs
je
adc
adc
xor
repz
push
adc
dec
scas
pop
adcb
lock
dec
xor
jge
sub
or
jl
xchg
addw
push
pushf
and
loopne
das
es
movl
xor
mov
roll
or
adc
sahf
frstor
adc
out
mov
int3
push
aas
movsb
cmp
mov
mov
loopne
stos
or
mov
xor
jge
jg
adc
add
mov
rol
stos
mov
adc
imull
repz
mov
mov
notl
mov
sbb
inc
add
mov
sub
pop
sbb
add
fcoml
enter
lds
jmp
stc
inc
push
pop
jmp
clc
cltd
hlt
pusha
mov
inc
xchg
insl
mov
push
nop
nop
fiaddl
or
les
cmc
icebp
jge
clc
jno
pop
jnp
movsb
and
fwait
movsb
mov
sub
xchg
fucomp
dec
les
aas
mov
sub
mov
jne
in
xor
or
lea
fstps
sar
jbe
add
orb
jne
xor
push
cmc
cmp
out
ljmp
popf
icebp
xor
mov
inc
ret
cltd
stc
daa
out
in
or
mov
jmp
pop
lock
fwait
jb
and
and
outsl
jbe
cmp
push
jmp
out
fidivs
jmp
es
nop
sub
dec
fdivr
les
jnp
cmp
xchg
pcmpgtb
ss
xchg
xor
push
mov
inc
sbb
xchg
and
push
push
stos
test
or
pop
jnp
sub
mov
aam
mov
jecxz
loope
add
mov
xor
mov
inc
ja
push
loop
fmuls
clc
stos
loope
sub
lods
dec
jae
pop
gs
sub
push
jl
les
xchg
call
sub
inc
push
js
pop
lods
push
and
pushf
dec
fcomi
popf
dec
push
rcrb
repz
sub
call
sbbb
xchg
xor
adc
inc
xchg
inc
inc
push
addb
xchg
decl
dec
inc
cli
popa
or
icebp
fwait
iret
xor
or
pop
gs
iret
or
arpl
mov
adc
addr16
pmuludq
xor
dec
test
push
and
jne
bound
and
in
ficomps
mov
cmpsl
popa
inc
int3
mov
mov
cmp
fcoms
xlat
xchg
add
movsb
loope
loop
lret
lds
repnz
add
push
dec
pop
xchg
cmc
cltd
jl
inc
mull
sub
mov
aam
jmp
arpl
fcompl
adc
out
in
xor
lret
dec
xchg
adc
out
test
xchg
shlb
xchg
push
imul
or
sahf
and
enter
ret
in
in
idivl
jno
sub
int
inc
test
pop
imul
sub
cmc
and
or
mov
fsubs
mov
loop
dec
jb
sbb
je
cmpb
xchg
and
xchg
xor
rcrb
aaa
test
clc
jg
or
push
fnstenv
rcrb
dec
sarb
mov
inc
ret
mov
mov
xor
xchg
add
gs
ret
icebp
cli
or
jecxz
test
dec
into
adc
and
xchg
pushf
arpl
mov
xor
pop
leave
outsb
shl
pop
mov
push
stos
subl
pop
stos
aam
out
out
dec
repz
out
adc
or
dec
adc
dec
pop
sbb
lret
xchg
pop
dec
int
push
sarb
add
fistpll
add
iret
mov
and
pop
jbe
and
mov
es
xor
shl
cmp
lock
mov
sbb
hlt
sahf
jecxz
and
repnz
xchg
es
movsl
lret
push
mov
stos
imul
or
into
cld
fidivrl
insb
xchg
push
xchg
xor
js
jae
cltd
mov
push
push
in
xorb
mov
bts
sbb
and
push
cld
cmp
fisubl
cmpsl
sahf
pop
lret
cmp
and
js
dec
jmp
mov
sub
mov
mov
std
test
lock
test
mov
cmp
push
sbb
rcl
pop
mov
jb
xor
sbb
rcrl
stos
aam
in
inc
icebp
mov
lea
sti
outsl
shr
gs
jne
lods
or
push
dec
call
sbbb
add
add
or
lods
and
jge
test
push
clc
sub
dec
push
cli
push
daa
outsb
cmpl
out
sar
ja
aaa
aad
clc
inc
jl
jbe
in
jge
lods
sub
mov
int3
cmp
mov
mov
fmul
mov
or
lods
test
xchg
hlt
mov
aam
and
cmp
fs
pop
mov
js
cmp
adc
cmp
mov
push
cmp
sbb
jo
jns
sub
push
jo
loopne
loop
pop
inc
push
or
mov
arpl
or
std
inc
push
insb
jae
out
xor
mov
das
lret
ror
fiaddl
into
mov
add
popa
in
into
pop
test
jb
movsl
pop
push
pop
cs
sbb
push
cltd
push
mov
das
sbb
push
outsl
mov
and
aad
outsb
sbb
dec
jp
pop
aam
ds
cwtl
mov
std
xor
mov
ljmp
jae
xor
movsl
insl
pop
add
das
and
lcall
fadds
mov
mov
jno
pop
fists
cmp
outsb
outsb
sbb
loop
fldl
mov
in
mov
inc
fidivrs
mov
lods
mov
aas
dec
rorb
aas
push
inc
sbb
out
dec
mov
mov
inc
adc
insl
stos
dec
js
lret
mov
xor
ss
or
pushf
pushf
js
lods
mov
test
jmp
sbb
pop
aad
xchg
stc
sub
push
js
popf
pop
mov
popl
outsl
push
push
out
into
inc
lret
stc
push
out
pop
pop
and
fst
out
cltd
cmpl
sub
fwait
test
shll
or
jg
mov
icebp
push
fsubrl
jl
add
lret
pop
loopne
dec
mov
test
loopne
dec
or
into
sbb
test
jp
mov
jp
in
or
or
test
mov
xor
scas
sarl
cltd
and
pop
and
arpl
faddl
add
int3
inc
rclb
rol
lods
cmp
push
add
push
inc
dec
into
mov
pop
xchg
outsl
adc
mov
leave
and
test
sub
sub
stos
fcmovne
stos
test
xor
lods
stos
mov
stc
lods
add
repz
int
jbe
adc
bound
in
loopne
mov
inc
inc
dec
arpl
sub
loope
popa
mov
xor
aam
jns
sbb
out
rclb
cld
pop
xchg
sbb
rcl
mov
xchg
inc
jnp
addr16
jo
mov
faddl
lahf
pop
push
mov
inc
jnp
pushf
loopne
sbb
divl
or
inc
jl
mov
inc
cmpsl
lret
cs
popf
push
adc
dec
add
fwait
in
jb
aam
in
cmp
mov
jmp
subl
cltd
sarl
pushf
cli
imul
mov
mov
jge
push
es
loop
rcrb
dec
jmp
hlt
mov
mov
adc
adc
sbb
jg
insl
lret
adc
mov
mov
movsl
je
mov
pushf
mov
out
jmp
int3
push
push
dec
popf
dec
ss
push
fwait
aaa
mov
fs
xchg
jnp
fmull
adc
pop
jmp
stc
jae
fisubrs
in
out
ret
std
jo
add
dec
push
aad
inc
ret
lea
scas
jp
inc
sbb
inc
jno
not
pop
and
xorl
cmp
sub
push
adc
mov
movsl
inc
xlat
arpl
jg
fstl
dec
enter
xor
out
scas
andb
adc
cmp
scas
and
cmpsl
or
int3
out
sbb
xchg
frstor
sub
mov
pop
fidivl
mov
cs
sub
and
adc
sbb
nop
aas
add
out
outsl
ds
mov
in
push
fdivrs
aad
add
jge
add
push
and
add
es
ficompl
stos
sbb
call
xchg
lret
mov
lret
push
mov
push
rorl
into
pusha
or
jg
xor
dec
pop
imul
js
pop
aam
cmp
pushf
inc
loopne
or
pop
jle
lea
xor
inc
pop
shrl
ja
cmpsl
cld
icebp
scas
jge
js
sahf
andl
inc
sub
fistpll
dec
pop
push
fisttpl
pop
dec
aaa
out
push
add
dec
loop
jp
pop
push
sbb
mov
mov
std
repnz
gs
jnp
addr16
jmp
cmp
sbb
adc
and
xchg
and
jnp
punpckldq
jge
push
xchg
mov
subl
cmp
outsb
jo
mov
dec
inc
sahf
gs
aam
sarb
fmuls
clc
loop
adc
xor
mov
jns
xchg
ret
mov
and
sbb
mov
xchg
sub
jno
add
insl
mov
cltd
out
lds
daa
aas
push
mov
aad
adc
loopne
mov
push
mov
mov
jno
repnz
dec
adc
adc
les
aaa
shll
inc
fcmovb
xchg
bound
xor
in
sub
cmp
pushf
lahf
fs
sbb
lret
sti
mov
sub
mov
and
test
xor
rorb
pop
stos
pop
mov
test
cmp
lock
mov
jb
xor
and
jmp
idivb
fsubrp
outsb
sbb
call
paddq
and
cs
neg
jb
xchg
or
imul
xchg
int
pop
in
pop
je
sbb
leave
mov
lds
sub
mov
imul
scas
fldenv
sti
mov
push
xchg
fidivl
test
insb
ja
ret
push
in
pop
mov
es
bound
mov
mov
movsb
and
mov
inc
push
rol
scas
loopne
loope
push
pop
jo
jns
pop
inc
cltd
fldenv
or
mov
pop
mov
fnsave
lods
lcall
lea
mov
dec
push
in
je
inc
pop
jg
jne
push
xchg
int3
sbb
and
dec
rcll
jnp
and
xchg
mov
and
js
mov
mov
cmpsb
lret
xchg
push
fadds
les
cmpl
mov
push
out
xchg
cwtl
cmc
mov
sahf
lret
cwtl
lret
push
mov
xor
jnp
cmp
push
jp
sarb
subl
aam
ret
insl
and
mov
aas
inc
push
str
sbb
adc
adc
outsl
fsubrl
adc
xchg
repnz
push
insb
push
lock
and
pop
inc
fs
outsl
jle
shl
mov
in
lods
ret
dec
lcall
mov
jb
mov
push
std
ficoms
out
cmpl
inc
in
sub
ret
push
in
inc
jp
adc
cli
xor
in
ja
jl
loopne
lods
mov
sub
out
data16
sarb
les
insb
popa
rorl
pop
mov
xchg
push
in
sub
es
jnp
test
loope
lods
je
mov
andb
loopne
cwtl
pop
js
lret
sbb
std
pop
aaa
lods
in
ja
stos
pop
je
cmp
lcall
mov
test
jns
jne
mov
ds
push
sbb
pusha
popf
jns
pushf
lret
out
mov
adc
mov
out
shlb
add
mov
lret
jle
cs
fs
adcl
pop
mov
pop
outsb
orl
jg
dec
in
add
jecxz
shll
aam
cmp
dec
mov
sub
mov
adcb
add
mov
data16
xchg
push
shl
js
jb
icebp
pop
adc
push
sbb
cli
xchg
jb
mov
addl
push
mov
aam
mov
add
stc
rorl
movsl
inc
popf
mov
arpl
dec
jg
fldcw
subl
ret
sarb
pop
fs
aas
insl
fcomps
mov
fisubl
rcr
sahf
out
fstpl
sahf
jbe
imul
pop
jge
dec
cmp
cmp
sub
cmp
xor
dec
ds
pop
jae
movsl
jns
adc
sbb
xchg
adc
ljmp
test
xor
arpl
xchg
xchg
frstor
adc
lret
aas
dec
push
ficoml
es
lods
and
mov
cmpsb
jmp
sub
jns
sub
mov
iret
xor
push
add
push
inc
enter
ret
sub
xor
mov
icebp
cld
sbb
into
je
js
pop
cmpsl
mov
sub
int3
bound
or
mov
mov
lea
sbbl
scas
int
add
push
or
jae
pop
and
or
rorl
ret
fs
outsl
gs
jp
dec
cmp
pop
mov
sub
imul
aaa
xor
push
icebp
ja
cmpsl
mov
adc
notb
pushf
push
int3
fsubl
fsubl
orb
mov
mov
leave
insl
shlb
adc
hlt
lods
rolb
xchg
sub
jbe
scas
insb
les
mov
fnsave
fcmovnbe
cld
lds
mov
clc
mov
jg
mov
fcomps
dec
lcall
lea
inc
push
imul
push
shr
mov
sbb
mov
xor
loop,pt
ljmp
adc
mov
or
and
out
mov
rcl
loope
jg
hlt
mov
cmpsb
stc
inc
int
adc
into
or
nop
fnstenv
outsl
sarl
inc
jge
aam
sub
jp
lcall
mov
cmp
sbb
in
xor
add
outsb
sti
jmp
xchg
push
clc
ja
imul
inc
xchg
insb
push
jbe
aas
ljmp
xchg
data16
jp
std
adc
jbe
cld
inc
adc
pop
push
pop
roll
mov
add
popf
xor
xchg
pop
mov
jmp
aaa
mov
popf
sti
out
imul
int3
sbb
pop
jle
mov
aaa
cli
mov
rcll
pusha
icebp
sbb
or
and
adc
xor
fsubrl
rcrl
pop
mov
mov
sub
mov
sbb
hlt
xchg
sub
cmp
mov
push
adc
icebp
roll
pop
notl
jmp
mov
xchg
cmp
mov
ret
sub
jo
sbb
shrd
and
pop
lods
sti
scas
lret
hlt
and
sarl
cmc
aaa
fwait
out
in
insb
push
push
call
scas
pop
fists
jl
lds
in
aam
inc
imul
push
negl
xchg
sahf
jo
std
sbb
mov
jnp
mov
sbb
sahf
mov
ds
mov
mov
jns
sti
cmpsl
mov
in
cmpsb
mov
sbb
dec
pop
fwait
and
scas
loopne
add
or
inc
mul
dec
cld
jmp
test
push
adc
xor
fistpll
mov
sahf
mov
jl
push
orb
ror
mov
ret
xchg
outsl
xlat
das
imul
std
pop
pop
imul
push
adc
or
gs
jno
repnz
stos
jle
dec
loop
mov
imul
xchg
cmp
loopne
fwait
pop
ja
ret
iret
in
std
sahf
dec
xor
cmp
inc
arpl
xor
js
sub
push
push
pop
xchg
xchg
xor
iret
mov
lock
xlat
call
mov
sbb
pushf
shlb
jecxz
out
out
imul
insl
mov
aas
add
lock
pusha
or
das
jnp
in
mov
dec
je
lret
xlat
addr16
jb
push
and
ljmp
mov
in
sub
jmp
mov
aas
pop
mulps
popf
aam
adc
mov
mov
mov
ljmp
or
je
gs
fwait
or
jbe
xlat
enter
dec
aam
xorb
pop
add
jne
jne
mov
sub
inc
in
js
inc
xor
enter
push
outsb
mov
mov
dec
push
xchg
add
out
pop
sub
jl
in
dec
sbb
push
jecxz
push
cmp
iret
imul
movsl
mov
push
je
out
mov
jl
fbld
jae
or
jge
mov
ja
stos
xchg
add
adc
cwtl
in
data16
jg
icebp
mov
dec
and
movsb
adc
xchg
movsb
cwtl
fstpt
ss
fs
out
popf
inc
dec
cmp
out
xchg
mov
leave
jmp
mov
in
fwait
or
popa
out
pop
or
mov
jb
and
icebp
dec
mulb
or
jns
inc
fwait
jmp
xchg
xchg
and
scas
inc
cmp
fisubs
push
xchg
mov
lods
mov
xchg
mov
aam
push
pop
data16
mov
mov
adc
adc
or
test
jecxz
inc
and
dec
inc
je
mov
sub
testb
aad
dec
lods
inc
xchg
mov
or
dec
and
xchg
cmp
outsb
jl
out
rcl
stos
out
pop
dec
lods
sub
ficompl
shll
lahf
sbb
pushl
push
in
or
int3
push
ficoml
mov
aad
pop
filds
in
xchg
jg
mov
out
test
pop
out
mov
lahf
xor
mov
mov
push
pop
orl
je
adc
outsl
push
pop
mov
pop
mov
les
inc
cwtl
jne
sahf
fwait
mov
enter
mov
daa
out
push
mov
inc
dec
test
xor
aaa
ficoml
cwtl
sahf
add
dec
dec
push
daa
cmp
mov
mov
mov
xor
cmp
test
adc
push
push
cmp
add
dec
iret
ljmp
into
je
imul
sub
add
xor
push
rol
and
mov
pop
jb
pop
adc
xchg
imul
lea
imul
inc
lea
aaa
and
push
int3
push
lret
lods
jp
imul
and
movsl
enter
mov
lahf
inc
adc
ja
xlat
stos
push
repnz
shll
popf
dec
daa
pop
xchg
je
inc
inc
jge
push
push
pop
nop
jns
leave
fisubl
pop
or
pusha
loopne
push
cltd
sub
cmp
call
jns
std
stos
and
pop
push
or
insl
xchg
inc
adc
cmc
and
cmp
cmc
mov
aas
int3
mov
cmpsl
xchg
cmpsl
inc
push
mov
mov
nop
inc
pop
mov
push
add
mov
in
jae
out
adc
sbb
addr16
outsl
push
stos
lods
and
adc
into
sbb
mov
cmp
dec
mov
mov
add
sar
aaa
movsl
jg
dec
mov
push
cltd
adc
jmp
dec
pop
bound
xchg
shl
aas
lock
pusha
ja
out
mov
pop
sbb
test
aad
pop
test
test
lea
jno
js
inc
sub
ret
mov
es
in
ds
sbb
hlt
xchg
pop
ffreep
imul
bound
push
fucomi
xor
popf
sub
lahf
lock
test
xchg
or
adc
out
leave
test
lret
iret
push
imul
push
dec
mov
jmp
and
dec
xor
inc
and
or
out
sub
sbb
scas
hlt
push
pushf
cmp
adc
pop
pusha
repnz
addr16
jecxz
xchg
mov
mov
and
test
fs
lea
cmpsl
pop
mov
mov
pushf
cmc
stc
leave
push
adc
movsb
sub
jmp
pop
mov
xchg
shlb
cmp
es
mov
fstl
in
fcoml
inc
bound
mov
das
nop
jl
cld
jne
movsl
lcall
pop
jne
dec
jle
sbb
mov
mov
xlat
out
test
mov
or
jge
pop
inc
ja
mov
xor
std
push
cmpsb
pop
xor
mul
idivb
jle
xor
or
and
pusha
pop
adc
pop
cli
mov
cmpsb
rorl
mov
jle
jbe
inc
ret
mov
icebp
out
and
sti
cmpsl
ss
into
push
xchg
xor
fs
lret
into
push
dec
and
sbb
mov
push
xchg
mov
pop
xor
fidivrs
rorl
or
aaa
jp
cmp
adc
pusha
pushf
add
hlt
dec
fldcw
adc
inc
push
adc
adc
nop
xchg
insb
or
or
xchg
mov
loopne
pop
xchg
pop
shlb
out
mov
mov
sbb
pop
xor
jp
dec
xchg
or
mov
jnp
xchg
addr16
imul
or
pop
movsb
pop
pop
shr
push
dec
sbb
add
push
mov
mov
push
jno
mov
es
out
push
ror
xchg
leave
cmp
push
leave
mull
sbb
push
bnd
rclb
ds
sub
cmp
lea
xchg
xor
cmp
sbb
and
jne
mov
icebp
dec
mov
in
imul
in
pop
lock
xchg
rclb
subl
pop
lea
es
mov
jno
push
cmp
std
cmp
lcall
jb
outsl
adc
sbb
pushf
sub
sbb
lret
jns
popa
xchg
push
dec
mov
outsl
dec
rclb
movsb
pop
add
pop
inc
ficomps
jno
je
jle
push
mov
xchg
cltd
adc
xor
insb
bound
inc
shll
mov
and
enter
jmp
mov
cmp
addl
sahf
cltd
and
sbbl
lods
aam
push
add
lcall
rorl
out
dec
sarb
cli
inc
lods
sarb
push
aas
shll
das
inc
sahf
jecxz
in
pop
mov
dec
mov
jb
adc
gs
or
dec
loop
clc
je
sub
outsb
xchg
addr16
jl
xor
mov
sub
mov
stos
es
dec
xor
pop
adc
stc
aaa
mov
pop
jmp
fwait
ret
roll
xlat
test
push
outsl
sarb
mov
jl
sbb
sahf
lods
or
pop
daa
je
lods
push
jp
movsl
pop
lods
dec
dec
mov
enter
sub
out
mov
clc
repnz
xlat
fs
and
mov
orl
mov
mov
mov
push
push
ds
adcl
sbb
push
add
lods
lods
jge
mov
lock
ss
mov
int3
sbb
in
sub
jge
pusha
mov
inc
std
popa
mov
clc
cmp
pop
lds
sbb
out
aam
xor
sbb
stc
stos
call
xor
js
and
imul
mov
adc
pop
sub
jbe
les
lock
push
lret
jp
test
push
mov
pop
mov
popf
aaa
outsl
push
cwtl
mov
pop
stos
ss
mov
loopne
int
pop
hlt
test
insb
dec
repnz
xchg
xchg
push
js
cmp
xchg
ret
popf
jae
bound
movsl
mov
cmpsl
mov
push
das
imul
jbe
inc
cmp
dec
xor
dec
cmp
js
push
push
movl
lcall
sub
xchg
jbe
xor
pushf
cmp
jg
adcl
cvttps2pi
xchg
aad
loopne
out
ljmp
mov
lahf
lcall
dec
mov
rorl
adc
aad
jbe
push
shr
cld
shlb
popf
repz
pop
xlat
clc
push
push
mov
xchg
cltd
inc
adc
int3
cmc
sbb
outsl
mov
bound
stos
das
enter
data16
outsb
adc
pop
hlt
ret
fidivl
stos
sti
jmp
fsubl
cmpsb
jg
das
mov
out
fdiv
mov
jbe
xor
xlat
mov
push
in
loop
sarb
idivl
push
sti
mov
or
dec
sarb
inc
mov
dec
repz
xchg
mov
push
sub
addl
cmp
dec
pop
xchg
add
sub
stos
or
imul
xchg
fmuls
stos
inc
test
push
push
pop
test
scas
es
clc
xchg
add
in
adc
sub
faddl
xor
mov
sub
out
test
jnp
dec
dec
mov
pop
dec
push
cmp
cmp
popa
inc
fisttpl
bound
pop
adc
je
dec
sub
xor
dec
ljmp
outsl
adc
int3
aad
push
lods
and
js
into
fstpl
mov
divl
mov
dec
sub
sub
icebp
sbb
je
mov
cld
sbb
out
in
mov
call
std
fs
in
in
stos
loopne
fstps
cld
int
clc
nop
sub
sub
push
cmc
adc
and
push
jg
xor
inc
in
inc
mov
mov
sahf
dec
mov
jbe
ficoms
sti
negl
sub
push
fwait
sahf
test
xchg
add
pop
cmc
xchg
jecxz
cmp
pop
sub
ret
xor
iret
cs
push
pop
jge
fidivrs
and
dec
add
sbb
lds
out
add
xchg
mov
call
je
cmp
push
daa
jecxz
ret
or
loope
jae
cld
lret
ljmp
dec
inc
push
or
mov
cli
adc
scas
sbb
cltd
call
loopne
xor
push
scas
movsl
shlb
inc
jecxz
subl
xor
es
outsl
pop
mov
push
push
imul
xchg
mov
xchg
je
xchg
xor
mov
loop
push
jno
fwait
mov
jo
cltd
push
xchg
inc
jae
sub
aam
idivl
inc
aaa
ljmp
and
mov
or
je
repz
cmp
or
jnp
dec
mov
mov
and
sahf
mov
loope
cwtl
out
cmp
hlt
add
push
cltd
push
add
push
xor
aad
inc
mov
adc
mov
int
push
push
xor
fsubr
lds
pusha
jae
shlb
dec
scas
xchg
loopne
lds
dec
imul
mov
aas
mov
fs
pop
adc
mov
in
and
or
fdivr
in
loop
add
fs
icebp
lret
xchg
inc
pop
cs
mov
fwait
movsb
jecxz
sub
mov
push
and
xchg
das
das
into
jo
cmp
and
and
repnz
outsl
lock
fsts
and
fistpll
mov
and
loop
sahf
int3
in
sbb
sbb
andb
fs
loopne
cwtl
jecxz
jl
mov
adc
mov
and
cs
lock
mov
push
dec
xchg
loope
scas
mov
sub
xor
push
add
loope
div
pop
jmp
jno
mov
and
cmpsl
pop
cmpsb
roll
jne
pop
sub
pop
xor
sub
ret
sub
outsl
js
shl
popf
add
out
ror
mov
sub
mov
in
mov
ret
jne
pop
sbb
xchg
jge
jno
and
mov
nop
int
scas
out
cmc
xchg
mov
inc
out
dec
lods
add
sbb
mov
icebp
loope
nop
lret
adc
movsb
sub
loope
push
push
test
xchg
or
scas
test
out
pop
mov
les
sbb
mov
test
mov
cmp
inc
les
xchg
in
lret
cmovb
outsb
inc
push
dec
sbb
xor
mov
fcoms
jno
test
xchg
add
out
insb
xor
bound
loopne
std
push
sub
sahf
xor
lock
jae
in
in
xchg
push
cli
in
and
jl
adc
in
sub
xchg
sbb
pop
gs
add
int
inc
adc
sti
addr16
sub
or
mov
jge
mov
ret
add
test
sbb
mov
push
lods
and
or
clc
cmp
jge
les
jp
lock
movsb
lcall
cmp
fistl
xchg
mov
ss
repz
mov
jle
vshufps
enter
in
sub
inc
sbb
and
push
pop
sub
into
in
jnp
out
ss
or
dec
sbbb
inc
add
ror
jnp
hlt
add
scas
dec
push
xlat
sub
pop
lret
pop
test
fsub
mov
imul
pop
and
mov
shrl
mov
jle
xor
and
mov
xor
pushf
sbb
xchg
xor
xchg
sub
pop
mov
cmp
pop
or
mov
repnz
xlat
sbb
mov
fsubr
mov
js
push
adc
cmc
adc
stos
push
xchg
pop
jne
mov
addr16
xor
xlat
pop
imul
movsl
orl
stc
cmpsb
fistps
adc
xor
add
sbb
or
mov
sub
adc
int
test
aad
or
push
andb
inc
inc
pop
pop
cli
cmp
dec
fcomi
cmp
cmpsl
jae
or
ds
js
jl
adc
dec
mov
shll
mov
inc
stc
loope
mov
inc
jle
dec
mov
cmpsb
xchg
roll
dec
fs
mov
pop
vpsadbw
cmc
out
inc
jmp
lods
sub
stos
lods
dec
dec
mov
sub
das
bound
imul
in
jg
cmpsb
pop
lea
jno
iret
scas
mov
rclb
in
rorb
lock
jno
push
adc
and
in
aaa
mov
push
add
xchg
and
xor
stc
xor
js
pop
movsl
mov
adc
fisttps
sarb
cmpsb
stos
adc
jno
fsubr
imul
test
sub
push
push
mov
or
jne
jg
mov
mov
js
push
movsl
or
xlat
cmp
cmpsb
adc
xchg
clc
fcoms
cltd
pop
cmpsb
cmp
out
or
pop
lds
ffreep
and
adc
or
mov
adc
movsl
inc
mov
movsb
lea
dec
std
adc
cmpsl
clc
movsb
and
fiadds
cmp
or
cs
xchg
sbb
loop
push
data16
xor
jb
shr
fs
outsl
enter
in
jle
mov
xchg
and
lahf
mov
mov
outsb
mov
cwtl
xchg
sub
mov
mov
and
insl
scas
and
insb
or
es
fimull
or
repz
inc
sbb
test
pop
inc
mov
push
sbb
xchg
dec
pop
sarb
pushf
rol
xchg
test
std
adc
cmpsb
cmp
mov
add
dec
nop
mov
pop
dec
scas
xor
adc
xchg
cltd
ficoml
dec
cmp
sub
sbb
inc
fcoml
adc
adc
fdivrp
cmp
outsl
or
add
xor
xchg
sub
std
pop
lahf
push
shlb
int
mov
loope
sub
faddl
in
pop
and
sub
test
mov
push
push
cmp
popa
push
int
repnz
dec
stos
push
les
sbb
xor
mov
mov
mov
loope
mov
mov
imul
adcb
cmpb
enter
cmp
dec
pop
and
int3
dec
sub
mov
inc
inc
lock
sub
dec
or
out
dec
int3
js
pop
push
movsb
cmp
gs
dec
dec
insb
fcomps
cmp
fists
in
scas
imul
imul
push
loopne
dec
cmpsb
mov
imul
or
or
imul
mov
jno
stos
xor
lret
sub
jbe
or
add
aaa
mov
cmp
bound
stc
or
ljmp
insb
mov
push
pop
cmp
cmp
fdiv
in
mov
imul
xlat
js
or
or
cmpsb
inc
enter
lock
adc
jge
pop
movl
add
ficompl
cmc
cmpsb
pop
dec
outsb
sbb
and
idivb
pop
clc
jb
int
lret
aam
fsubl
andl
in
add
sarb
jne
loopne
leave
mov
mov
cmc
lret
std
outsl
mov
mov
add
cltd
bswap
mov
pop
push
cmp
dec
jae
push
loopne
bound
push
fcmovu
dec
fwait
in
dec
adc
mov
pop
sub
in
insb
shr
push
test
push
mov
jnp
shrb
fsubr
cmp
cwtl
mov
pop
add
pop
int
xlat
mov
cld
mov
scas
ret
pop
shrb
xor
mov
sbbl
pop
das
insl
testl
sahf
add
inc
shl
mov
mov
fs
scas
xor
xchg
inc
ja
in
orl
push
orb
cwtl
xchg
cs
nop
dec
jle
mov
jg
dec
jle
sub
sbb
ret
jge
ror
in
mov
push
in
inc
sarb
lock
ffree
push
pop
sub
je
push
or
insb
push
add
fs
imul
inc
aam
shll
adc
push
sub
dec
fstpl
lret
xchg
pusha
push
push
into
into
inc
push
dec
pop
shr
inc
mov
and
arpl
pop
cmp
cmpsl
mov
icebp
xor
cwtl
sahf
mov
jnp
cs
cmp
clc
cmc
mov
in
mov
jmp
repz
xor
add
adc
and
sbb
lcall
pop
aaa
add
cmp
pop
shlb
sub
and
cmp
cltd
xor
or
popf
jge
lds
in
add
jno
mov
jp
cs
mov
fsubs
pop
outsb
arpl
inc
cmp
add
mov
cltd
and
pop
addr16
xlat
mov
push
mov
nop
mov
and
leave
pusha
out
mov
lcall
stos
sarl
dec
ds
js
pmaxub
dec
into
enter
xor
mov
jae
jl
dec
xchg
psllq
sbb
mov
xlat
jp
push
ud1
rcr
or
les
inc
dec
repz
mov
call
bswap
fsubl
sub
push
and
add
pop
ja
test
pop
ret
inc
jo
sub
popf
ds
imul
stc
xchg
popf
lds
popf
out
mov
arpl
jp
std
enter
aam
pop
mov
jp
xor
mov
call
jo
mov
movl
mov
lds
int3
lods
sbb
add
repnz
cmp
fnstcw
lahf
push
mov
or
shr
push
cmp
imul
repnz
add
imul
lret
sbb
loopne
outsl
lahf
movlps
push
sbb
lock
dec
daa
cli
aas
push
into
addb
inc
cld
cmpl
aas
je
ret
sbb
and
jae
ja
mov
out
pop
mov
shll
into
add
jle
adc
jno
xchg
lcall
fstps
mov
jnp
ja
inc
mov
or
jb
arpl
aam
cmp
sub
xchg
sbb
clc
lcall
fistl
popa
mov
sub
dec
jno
adc
mov
loope
movsb
scas
sub
loopne
cltd
push
jns
ss
sahf
xchg
jnp
sbb
fsts
dec
jmp
je
xchg
mov
das
pop
mov
xchg
adc
cmp
sub
sub
adc
test
fxam
dec
adcb
xchg
pop
aad
mov
add
inc
mov
xchg
pop
pop
and
or
iret
add
iret
stc
lret
inc
scas
push
mov
test
pusha
mov
test
xchg
xchg
xchg
pop
jmp
ret
mov
sahf
insl
data16
mov
dec
std
add
mov
gs
pop
or
sbb
pop
jo
pop
dec
mov
insb
mov
xor
fisubrs
in
loope
imull
push
xchg
loopne
movsb
jmp
mov
les
mov
inc
or
imul
nop
and
xor
dec
dec
test
pop
stos
mov
repz
jl
ret
fidivl
dec
pop
adc
xlat
inc
test
scas
in
subl
add
jle
lds
jne
xor
mov
sub
insb
dec
push
adc
fildl
sahf
push
adc
jae
jmp
mov
jle
xlat
jb
or
movsb
pushf
or
sub
inc
lret
dec
sahf
repz
mov
dec
cmp
cs
aam
cmp
dec
movsb
jmp
mov
repz
shll
push
repz
int3
idivb
and
xchg
mull
mov
in
imul
mov
and
and
cmp
cmp
push
inc
xor
inc
push
add
mov
xchg
fdivl
aad
mov
adc
outsb
or
fstpl
aaa
mul
bound
je
fldl
cld
and
test
out
cmc
push
dec
test
xchg
sbb
pop
arpl
mov
sbb
filds
inc
pop
xchg
out
mov
test
inc
in
fs
add
aaa
repnz
lods
inc
pop
and
dec
inc
data16
aam
popf
into
popf
push
sub
iret
in
sub
push
lcall
bound
sarl
out
dec
jo
mov
cmp
inc
loop
repz
stos
cmp
pop
ret
mov
shl
lret
aas
mov
in
cmpsl
sub
loop
stos
cld
cld
dec
lret
js
jmp
jne
inc
cli
cli
mov
sub
hlt
std
jmp
jnp
cmc
aas
ja
jns
loope
test
lret
jl
inc
call
lods
out
fsub
and
dec
mov
mov
lods
cmp
pusha
lock
cmp
xchg
in
ljmp
push
clc
mov
in
aaa
inc
inc
imul
pop
xor
dec
ja
jnp
decl
xlat
mov
ljmp
in
aas
bound
out
push
dec
and
fnsave
pop
dec
arpl
pop
cmp
jmp
aas
mov
movsl
jae
clc
int3
lods
jbe,pn
fs
sahf
inc
in
inc
leave
push
das
scas
or
iret
cli
cmp
xor
add
mov
sub
pop
cmp
insb
arpl
mov
in
cmp
pop
mov
add
repz
fwait
pusha
call
or
repz
pop
aas
and
mov
fidivrs
inc
pusha
add
call
fmuls
stos
cwtl
rcrb
fildll
daa
xor
mov
mov
pop
outsb
sbb
sbb
add
dec
inc
int3
push
add
enter
and
call
jo
aam
add
imul
adc
in
lahf
or
flds
dec
and
jg
cmp
mov
sbb
cwtl
ror
jl
dec
mov
jmp
xchg
inc
push
testb
int
mov
mov
leave
lahf
mov
sar
lods
cmp
push
scas
subl
in
pop
dec
fwait
pop
inc
mov
mov
scas
and
in
pop
mov
inc
test
mov
fldpi
pop
mov
int3
repnz
les
ficoms
xor
cmp
lret
or
pop
inc
cmp
imul
fs
mov
ljmp
adc
bound
adc
jg
fs
xor
mov
xlat
mov
pop
inc
xchg
pushf
rol
lret
mov
int3
inc
pop
push
add
lods
xlat
push
dec
xchg
or
lret
gs
ret
push
jbe
fwait
sbb
ficoms
je
cmp
ljmp
hlt
mov
mov
aad
push
sti
das
dec
div
xor
lret
lret
loop,pn
and
divb
sbb
sbb
jne
push
shll
jns
push
or
fsubrs
sbb
dec
pushf
xlat
add
jmp
or
daa
sbb
ret
inc
inc
pop
hlt
mov
jmp
incb
mov
sub
test
adc
jno
cmp
mov
adc
int3
int3
push
pop
sbb
or
dec
test
cmp
pop
insb
mov
out
flds
and
sub
addb
mov
out
pop
inc
inc
inc
aam
or
jbe
dec
sbb
sbb
test
gs
gs
sub
call
push
sti
xorb
push
sahf
ficoml
int3
popf
adc
pop
sar
cmpsb
nop
dec
mov
lret
xor
dec
rcrl
loop
std
in
pop
mov
adc
in
sub
cmpsl
int
mov
pop
dec
in
aaa
jmp
inc
adc
stos
fstl
fldenv
pop
out
inc
jecxz
jl
pop
jecxz
pop
cmp
mov
out
test
sahf
cmpb
scas
xorl
add
inc
das
mov
add
fistpl
add
std
jo
xchg
test
notl
call
enter
rclb
data16
mov
pop
sub
cmpsl
push
push
addl
fstpt
std
rcr
and
movsb
fxam
in
leave
push
flds
sahf
fcomp
out
mov
sbbb
loope
ret
rorl
cmp
outsb
dec
mov
cmp
inc
lock
fmulp
jg
das
jp
and
fucomi
inc
lock
mov
jnp
pop
sub
shl
mov
pop
cmpb
adc
pop
and
mov
jnp
mov
mov
sbb
fs
sub
mov
data16
xchg
mov
les
add
cwtl
nop
push
pop
in
insb
lret
sahf
mov
push
xchg
sbb
mov
pushf
loopne
pop
mov
push
insl
push
cld
leave
std
adc
sub
stos
cs
pop
int
ret
fldcw
cmc
ficoms
mov
fnstenv
adc
cmp
iret
or
mov
and
int
jg
test
mov
icebp
mov
jno
and
nop
and
cmc
cmp
or
push
loopne
mov
mov
and
cmp
lea
push
es
cmpsb
mov
xor
icebp
aaa
sub
popf
xor
add
mov
arpl
bound
stos
sbb
cld
pop
and
clc
push
imulb
or
mov
push
enter
push
pusha
sbb
pop
mov
stos
pusha
sbb
xor
fsubs
or
mov
push
cltd
sbb
nop
sbb
xchg
arpl
jne
scas
fmull
push
and
addl
movsl
js
sbb
out
add
mov
and
nop
adc
dec
lods
dec
cli
mov
and
xchg
nop
dec
sub
push
fldcw
lcall
aad
xor
pop
mov
int3
enter
dec
dec
dec
insl
fildl
roll
out
mov
mov
and
pop
xchg
loop
pop
lods
dec
cmpsb
ret
add
je
sti
call
push
push
mov
sbb
cmc
jge
pop
daa
testl
es
hlt
arpl
shll
ljmp
cmc
dec
pusha
add
mov
push
jge
push
lcall
call
cmp
shrb
pop
cld
test
test
inc
ja
out
cmp
and
dec
imul
popa
test
in
mov
bound
push
aad
outsb
scas
int3
xor
test
and
push
icebp
adc
jae
and
jl
dec
mov
popa
cmp
pop
ds
mov
add
inc
push
pop
outsl
call
push
mov
sub
dec
scas
add
adc
enter
fsubrs
push
xchg
enter
add
jno
ss
div
pop
imul
inc
mov
xchg
lret
arpl
cmpsb
popa
icebp
aas
and
addr16
std
mov
mov
and
in
xlat
aam
pop
ljmp
mov
test
aaa
repz
add
gs
fstl
pushf
sub
daa
xor
jp
cli
in
xchg
sub
pop
add
das
lods
sbb
pop
jecxz
jl
mov
fadd
xchg
push
int
movsl
mov
and
adc
jge
xlat
test
and
dec
push
insl
rol
loop
push
jo
decb
xor
loop
dec
pop
cmpsb
test
test
jle
in
jo
jg
xchg
es
pop
sub
scas
cltd
mov
or
std
mov
stos
sarb
mov
or
jne
jbe
jb
xchg
sbb
jp
movsb
lods
loope
faddl
mov
pop
icebp
sub
mov
push
test
push
int
mov
xchg
hlt
imul
fwait
push
cltd
scas
sbbl
stos
sub
or
add
ja
pop
cmp
repz
sbb
xor
mov
lds
imul
pop
mov
and
and
call
imul
das
stc
push
sahf
add
mov
leave
pop
xor
pop
mov
loop
mov
inc
jmp
fstpt
and
mov
and
repnz
xor
in
loopne
cli
push
outsl
iret
loopne
cmc
cs
jg
cmp
xchg
out
or
sbb
insl
fst
xor
push
pop
cmp
push
roll
lds
jae
arpl
dec
push
loopne
adc
xchg
push
pop
or
push
cltd
add
repz
add
iret
xor
inc
idivb
add
aaa
cmc
rcr
fldcw
mov
mov
sbb
mov
stc
xchg
jmp
xchg
dec
outsl
out
loopne
lods
das
lds
inc
lcall
sbb
cld
jle
arpl
jmp
dec
sub
cmpsl
mov
xor
push
icebp
data16
fdivrl
inc
push
jecxz
lea
popa
add
or
mov
inc
cmp
out
xchg
stos
mov
add
adc
push
in
lods
rolb
cmpsl
ret
int
movsb
mov
out
cmp
pushf
mov
jo
negb
push
cld
sbb
in
out
in
sahf
mov
dec
ficoml
ss
hlt
mov
int3
mov
lahf
jne
push
jns
or
fmuls
cmp
dec
or
nop
jb
inc
rclb
add
daa
cmpsb
adc
xchg
out
aas
xor
aas
and
push
and
addr16
fwait
mov
add
jb
adc
pop
ds
out
sbb
lods
mov
lea
leave
push
mov
icebp
inc
mov
cmc
mov
cmpb
xor
sub
mov
fnstcw
mov
mull
loop
loopne
jecxz
jl
daa
fnsave
mov
cli
mov
fiaddl
dec
or
mov
rolb
out
call
gs
jb
and
cwtl
out
xchg
lock
ret
imul
call
xchg
fidivs
int
xor
jle
shll
xchg
inc
arpl
decb
jmp
sub
xchg
cmc
fistpll
lret
sub
jle
sbb
inc
push
push
and
dec
jmp
in
lods
dec
add
bound
cmpsb
in
adc
cld
ficoml
xchg
stc
add
sub
sub
and
jl
push
jnp
cmp
xor
dec
xor
leave
pop
jg
sub
testb
or
and
mov
jge
jns
test
arpl
scas
ds
cmp
pop
lds
push
test
mov
sbb
test
leave
cmp
sbb
mov
and
repz
test
popf
inc
cmp
dec
xchg
shlb
sub
jge
lret
cmp
es
mov
sub
cltd
pop
fidivl
add
repz
ret
xlat
sahf
sub
cmp
push
sub
sub
cmpsb
shrb
mov
lds
dec
jo
or
xchg
mov
sbb
out
out
ljmp
adc
mov
dec
jge
fldenv
daa
dec
push
xchg
fwait
shl
in
jmp
mov
fidivl
mov
mov
mov
std
mov
lret
jbe
mov
push
jbe
lock
push
mov
sbb
push
dec
sub
mov
mov
jae
in
cmpl
push
loop
cmpsb
inc
mov
stos
xor
fstps
inc
mov
xchg
mov
push
jle
mov
pop
xchg
jns
ja
data16
ds
xchg
test
ss
popf
and
dec
in
fwait
or
imul
in
lods
xchg
mov
xchg
push
repz
push
sbb
mov
push
pop
fdivr
pushf
lods
cwtl
stos
call
pop
push
mov
into
adcb
pop
lock
sti
adc
xchg
sbb
data16
jb
and
rcll
fistpll
stos
rolb
dec
adc
sti
jecxz
inc
cmp
xchg
sbb
jb
cli
sub
popa
jno
ja
pop
negl
mov
adc
jb
imull
out
aad
outsb
push
push
or
out
fisubrs
and
sub
mov
cmc
loop
movsb
mov
push
mov
lea
inc
dec
xchg
ds
rorl
gs
scas
sub
mov
mov
mov
mov
push
stos
aad
push
cmp
loopne
daa
cmp
test
add
cmpsb
adc
sub
jp
jecxz
pop
scas
cmpb
xchg
int
repnz
shr
scas
mov
or
add
fsub
lahf
sbb
repz
jge
insb
movsl
pop
push
cmpl
stos
lahf
sbb
test
lods
mov
movlps
sbb
test
cmp
shrl
sbb
imul
fs
mov
adc
pusha
jns
pop
pminsw
xchg
imul
sub
call
cmp
cmp
and
popa
xor
shll
pop
cmp
lea
sbb
jnp
sahf
push
fistpll
aam
adc
xor
std
and
leave
xchg
sub
loope
out
xor
sahf
sub
add
xchg
jne
and
scas
jne
mov
lock
cmp
cli
enter
mov
ret
mov
mov
push
push
mov
add
sub
ret
std
mov
and
aam
repz
shrb
mov
arpl
inc
fisttpll
dec
mov
mov
sbb
cmp
lret
aam
pusha
push
xor
int3
dec
xchg
lahf
lods
imul
incb
sub
push
insb
iret
setg
in
aas
inc
inc
cmc
add
xchg
push
scas
fchs
push
add
mov
lds
mov
pusha
sahf
std
xor
movsb
popa
stos
in
out
fldt
jno,pn
mov
xor
aaa
xchg
sti
out
xchg
test
call
xchg
ja
add
jg
ror
pop
dec
pop
les
rcrl
mov
mov
test
js
aad
dec
shl
dec
call
lea
out
jbe
xorl
xor
cs
test
leave
lret
sbb
loope
jecxz
mov
fwait
xchg
enter
insb
inc
sarb
mov
das
negb
out
cltd
punpcklbw
ret
mov
cmp
lret
xor
test
cmp
inc
push
xchg
jno
call
dec
lret
fsubl
and
and
jo
xor
jg
pushf
xchg
or
and
adc
xchg
fidivrs
and
iret
js
lea
mov
dec
mov
movl
inc
pop
repnz
repz
pop
insb
pop
xchg
push
in
adc
cmp
int3
cmp
loop
or
and
rcl
add
pop
push
jmp
jg
bound
or
adc
and
mov
repz
arpl
mov
cli
xchg
push
jg
dec
outsl
push
subl
or
push
push
sbb
xchg
inc
xchg
sub
adc
jg
lret
sarl
ss
mov
push
xchg
outsb
sbbl
test
lret
icebp
cmp
repz
push
pop
and
mov
mov
pop
and
xchg
lahf
call
std
mov
bound
popa
into
in
sar
push
loope
shlb
in
test
cmp
in
pop
and
mov
push
shr
dec
gs
imul
std
stos
dec
adc
jae
pop
inc
mov
aad
shll
lea
cmp
xor
addb
test
outsl
push
pop
movb
aam
js
aad
xlat
push
mov
scas
cli
shll
stc
mov
mov
sub
into
and
xor
and
jmp
stc
xchg
add
test
icebp
js
cmc
rcrb
icebp
jg
mov
push
stc
stos
lahf
mov
stos
xchg
movl
pop
jno
sub
ja
fsts
dec
or
adc
or
mov
xor
shlb
and
sub
add
fs
jne
xchg
imul
out
mov
pop
fs
jmp
adc
insb
pop
enter
js
lcall
and
test
sbb
xor
sub
jne
cmpsb
mov
movsl
testb
push
push
pop
xor
ja
mov
adc
dec
loop
xchg
xor
and
js
dec
cli
cmp
mov
lock
hlt
push
out
adc
fwait
mov
outsl
into
or
xor
jae
mov
push
inc
push
out
pop
hlt
out
jns
cmpl
jle
stos
push
mov
test
cmp
or
or
xchg
sub
cmpsl
lods
push
or
enter
mov
dec
push
mov
mov
insl
out
sub
mov
dec
loope
lahf
std
rcrl
sahf
cmpsl
cmp
repz
sub
pop
andb
fsubrl
mov
addl
lds
inc
push
movsl
mov
fimuls
pushl
inc
push
les
or
push
add
add
fildll
mov
dec
jmp
pop
and
mov
and
cmpsl
cltd
sub
dec
pop
add
jne
out
adc
push
jo
xchg
sub
pop
inc
cld
nop
fildl
add
aaa
in
push
or
pop
and
mov
lea
push
inc
xchg
pop
cltd
test
and
repnz
call
outsl
pop
inc
inc
movl
push
repz
and
cmp
cmp
pop
imulb
or
adc
pushf
addr16
arpl
cltd
pop
dec
and
xchg
loop
fnsave
mov
mov
adc
pop
cmc
mov
in
inc
jns
stos
dec
pop
jp
xchg
xchg
outsb
lcall
mov
xchg
inc
loopne
test
jnp
xchg
mov
xor
inc
mov
scas
test
sbb
push
bound
pop
out
je
pop
lcall
repz
sub
stc
adc
or
sub
arpl
jo
scas
jbe
and
xchg
adc
push
jle
clc
jne
lcall
mov
cmp
and
out
imul
out
or
or
mov
pop
in
mov
inc
lret
or
ret
lret
sahf
xor
inc
addr16
leave
sub
mov
add
in
cld
ja
cwtl
imulb
mov
fldenv
dec
pop
jecxz
out
test
sbb
or
sub
test
lods
sub
dec
push
or
mov
lret
mov
pop
mov
mov
jno
push
push
jecxz
hlt
test
sbb
in
cld
imul
pushf
cs
ror
dec
push
push
add
iret
ret
nop
movsl
cli
inc
insb
fldenv
dec
pop
fdiv
movsb
ret
out
lods
jnp
sbb
repz
sub
mov
je
xchg
or
dec
fnstsw
adc
imul
test
lahf
push
ja
xor
imul
inc
stos
cmpsl
push
aam
and
mov
inc
fldenv
aad
jl
jle
fcoms
sub
cltd
pop
movl
jo
loop
bswap
scas
scas
add
rcrl
cld
shlb
mov
dec
cmpsl
mov
jb
and
pushf
adc
mov
bound
stos
fildl
mov
mov
lock
shr
mov
call
sub
shll
aam
mov
mul
jno
cmpb
mov
sub
adc
jb
and
out
adc
aaa
xchg
clc
xor
xchg
pusha
ljmp
test
test
adc
cmp
push
xchg
sahf
test
adc
pop
add
pop
mov
pop
xchg
jl
jno
or
loop
adc
fbld
decb
hlt
and
insb
test
xlat
mov
scas
dec
sub
test
lcall
aas
addr16
or
jmp
pop
fstps
cmp
repnz
push
cmp
xchg
cli
mov
out
push
inc
push
mov
in
pop
fistpll
arpl
add
dec
repz
jne
ljmp
bound
xchg
and
sub
add
push
mov
shrb
sub
fcoms
dec
data16
movsl
in
dec
andb
lds
dec
pop
cmpsb
xchg
mov
fnstsw
fmuls
add
ds
cmovp
inc
nop
or
loopne
adc
stc
addr16
and
jne
fcmovbe
cmp
addb
or
in
and
inc
shrl
outsb
insb
dec
in
mov
dec
push
jmp
dec
or
jle
shll
test
mov
movsl
insl
mov
clc
or
or
int
push
pusha
mov
les
cmp
pop
push
xor
jno
pop
shl
shrl
test
fwait
sub
adc
inc
mov
or
xchg
mov
fdivl
adc
cwtl
mov
negl
std
ljmp
xor
pop
push
ficomps
pop
cmp
xor
cmp
cli
movsb
cmp
or
data16
int3
popf
aad
pop
xor
outsb
out
icebp
ss
lods
fisttpll
lret
and
data16
in
cmp
xchg
fnstcw
mov
jge
rcrb
outsb
xor
lea
xor
adc
xor
cmp
add
test
mov
pop
dec
fistl
xchg
push
mov
scas
cvtps2pd
jl
and
inc
push
je
pop
dec
pop
les
jge
mov
add
sbb
push
stos
imul
adc
pop
or
mov
stos
pop
lcall
div
ficompl
lea
and
xor
fisttpl
cmp
cs
push
xor
sub
adc
xor
inc
adc
bound
pop
push
xchg
xlat
test
int3
mov
xchg
mov
out
bound
rolb
pop
out
fadds
dec
pop
or
sbb
dec
pop
data16
aad
push
jmp
clc
cmp
push
push
cwtl
stos
sahf
ds
fstp
xlat
mov
repnz
cmp
dec
les
jo
test
sub
repz
cmp
adc
stos
scas
cmp
int
dec
and
shr
mov
sbb
xor
into
imul
inc
mov
jg
adc
fs
and
insl
pop
stc
jns
lods
jle
jmp
sar
das
call
ret
int3
cmpsb
pop
or
and
mov
test
push
adc
out
lds
aam
inc
sbb
insb
mov
lods
popf
xchg
xchg
push
mov
mov
ficoml
clc
jae
test
imul
dec
aam
xor
test
and
aam
notb
dec
lahf
leave
shlb
push
fisttpl
lea
mov
sub
pusha
jno
orl
fwait
push
mov
mov
dec
clc
mov
jp
inc
add
or
lds
adc
dec
push
or
into
sub
negl
es
cmp
mov
and
pop
les
fstpt
jo
icebp
fdivrl
mov
int
outsl
or
xor
nop
testb
jge
pop
ss
lods
sub
add
lods
stos
push
iret
mov
test
out
sti
std
fistpl
adc
data16
pop
cltd
push
imul
popa
mov
sub
jge
divl
adc
cld
xor
xor
es
pop
nop
fstpl
inc
inc
pusha
in
scas
and
xchg
dec
sahf
mov
inc
dec
lods
out
pushf
movsb
sub
jne
push
pop
scas
das
mov
aaa
pop
pusha
pop
loope
or
pop
test
mov
mov
and
out
xchg
sbb
out
in
aaa
scas
aad
jns
sbb
xchg
cmp
jo
cmp
nop
jnp
inc
mov
ret
iret
stos
ss
int3
sub
shrb
sbb
cmpsb
xor
outsb
fldl
jb
std
arpl
lds
mov
imul
adc
imul
adc
es
cmp
mov
inc
hlt
jmp
sbb
mov
xchg
ss
daa
pop
ja
icebp
enter
adc
pusha
cmpsl
movsl
outsb
mov
arpl
adc
stc
jmp
mov
push
pop
daa
jl
lock
cmpsl
sti
lods
out
fimuls
adc
fadd
push
push
call
cli
shlb
push
nop
pop
sub
xor
cmp
pop
call
xor
sbb
daa
lret
lret
xlat
ljmp
aad
push
lds
mov
push
dec
imul
das
pop
sbb
cmp
xchg
jle
pusha
inc
clc
imul
movsl
sub
imul
aas
sub
xor
repz
pusha
in
or
xorb
xor
push
mov
in
cmp
sbb
cwtl
or
pop
aas
dec
into
ret
jb
aad
js
adc
repz
lea
stc
mov
jb
mov
or
inc
xlat
icebp
sar
test
or
jae
sub
mov
adc
insb
or
ja
arpl
sti
int
pop
dec
sahf
and
cmp
and
mov
fnstenv
mov
out
fsubl
mov
mov
xor
inc
pop
pushf
jne
xchg
lret
mov
in
imulb
jge
cmp
fisubrl
dec
xchg
je
outsb
mov
xor
ja
xchg
lahf
cmpsl
lds
fdivrl
pusha
data16
cmp
loopne
mov
xlat
add
test
cmp
jle
cs
dec
mov
mov
xor
cmpsb
fmull
jge
aas
jmp
pop
xchg
lea
adc
xorl
and
xor
out
mov
add
add
push
sub
lret
stos
mov
add
aad
xorl
mov
std
fdivl
je
pushf
lock
loopne
jmp
mov
adc
jo
add
dec
mov
push
arpl
test
pop
fimuls
jae
inc
adc
mov
aaa
dec
cmp
stos
fisubrs
sub
test
jg
in
lret
adc
mov
cmpl
pusha
jns
adc
add
int
lock
dec
jmp
loope
xor
jge
jbe
in
stos
push
mov
pop
and
enter
aas
xchg
int3
adc
jb
pop
or
jecxz
jns
lret
cmp
rcrb
in
fs
fsts
in
repnz
xchg
cs
pop
movsl
or
jge
xlat
push
es
out
ret
pop
jp
xor
xlat
call
aas
mov
or
pop
dec
xchg
mov
jmp
popf
cmp
cmp
loop
stos
rcll
mov
punpckhwd
rclb
fsubr
lods
xchg
lods
cwtl
cmp
cmpsl
cli
or
xchg
ljmp
xchg
pop
je
aam
pop
jnp
inc
stos
shll
mov
int
add
xchg
inc
insb
movsb
adc
out
mov
popa
pushf
cltd
pop
shr
arpl
pop
int
shl
int
mov
in
popf
add
push
int3
pop
in
outsl
sarb
dec
push
sbb
cmp
sti
mov
mov
imul
mov
pop
mov
adc
sub
mov
lahf
cmp
mov
aaa
xchg
mov
inc
xchg
or
data16
je
lea
loop
xlat
jg
mov
mov
ja
cmpl
jbe
sub
and
scas
ja
movsl
xchg
or
nop
repz
adc
adcl
out
add
xor
movsl
xchg
das
outsb
xor
popf
push
hlt
lds
xor
lea
mov
sub
fldt
sub
cld
sub
cmp
orl
xchg
xor
loop
cmp
std
pop
fs
and
lahf
add
add
inc
test
notl
cmp
xchg
stos
rcrl
mov
aam
insl
aam
ficoms
add
hlt
repz
aam
icebp
inc
and
fwait
cmp
pop
sub
or
ljmp
out
add
sbb
xor
je
das
mov
jl
sub
inc
aam
sbb
or
fdivl
push
lret
mov
pushf
bound
mov
jne
mov
ret
pusha
and
cmp
cmp
and
cs
and
jnp
and
dec
adc
pop
fdivrp
cmp
mov
into
or
sub
mov
ret
adcb
inc
mov
push
enter
xchg
mov
xlat
sbb
mov
mov
xor
iret
or
adc
rcrb
loopne
sbb
js
adc
daa
inc
sbb
sbb
nop
inc
hlt
and
sbb
lods
sbb
sbb
mov
push
sti
sahf
mov
or
jno
add
loop
sahf
jg
pop
jg
es
xor
cmp
sbb
add
mov
out
and
dec
pusha
mov
xchg
pop
data16
pop
nop
mov
push
mov
push
lea
in
cmovg
fwait
cmp
xchg
or
and
clc
mov
ficompl
mov
hlt
sarl
adc
stc
ja
push
mov
leave
adc
sbb
aam
lcall
test
sbb
lahf
jmp
push
std
lcall
ja
xchg
jl
dec
repnz
adcl
ds
insb
mov
mov
xchg
jg
lahf
nop
les
adcl
and
push
mov
xchg
add
in
movntq
pop
sub
daa
into
fldt
mov
lock
mov
add
mov
push
mov
adc
and
mov
dec
dec
jecxz
das
ficoms
add
ret
outsl
pushf
xchg
cmp
xor
cli
and
dec
rolb
sub
pusha
sub
jno
imul
dec
pop
out
pop
lods
sbb
lods
out
pop
out
movhps
mov
lods
mov
dec
test
ja
jmp
imul
mov
mov
fwait
int3
cld
sahf
jo
ljmp
jl
scas
adc
pop
es
mov
xchg
cmp
pushf
pop
mov
es
gs
sub
pop
mov
icebp
aaa
ja
or
gs
pusha
and
outsb
out
jbe
mov
sub
add
ficomps
push
xor
loop
push
mov
outsb
fwait
movsl
add
mov
mov
mov
inc
push
push
sbb
push
sbbb
mov
mov
outsb
testl
mov
arpl
pop
scas
dec
jno
jo
or
pop
sub
pusha
in
in
sub
lret
jge
insl
push
pop
add
icebp
and
xor
mov
add
stos
mov
mov
pop
mov
push
dec
add
idivb
loopne
adc
jmp
aas
sub
rcll
in
mov
push
fdivrl
lea
andb
mov
pusha
sbb
dec
outsl
gs
dec
stos
cmp
dec
pop
ss
xlat
movsl
bound
xchg
adc
dec
pop
xor
pusha
cmpb
push
mov
pop
cld
push
pusha
jp
xchg
mov
jb
add
jns
test
pop
movsb
test
xchg
int
inc
mov
mov
and
xor
jno
cmp
outsb
fstl
pop
loope
mov
xor
lds
mov
cwtl
push
dec
rcrb
xchg
push
lods
es
cs
scas
sub
out
ret
js
mov
jae
push
jp
test
jno
fs
mov
pusha
je
inc
into
add
pop
in
out
xor
rolb
inc
fstpl
loope
and
lds
sub
cs
bound
test
add
xor
inc
xor
jg
out
xlat
loopne
dec
test
fs
inc
lods
mov
xchg
xchg
aam
push
filds
aad
push
xorl
mov
jle
jno
xor
and
pop
add
jno
insb
vmwrite
lcall
push
fwait
nop
cli
sub
imul
int
movsl
and
filds
jmp
mov
push
jbe
test
orb
inc
daa
xor
jmp
popf
jp
gs
adc
into
xlat
shll
mov
cmp
les
adc
xor
testl
mov
pop
cmp
jo
xorl
mov
push
adc
xchg
push
jb
aas
mov
in
rol
imul
jge
adc
faddp
mov
mov
mov
lods
mov
xchg
sub
add
lds
push
cmc
adc
rcrb
pop
cwtl
pusha
sbb
dec
lahf
lcall
add
testl
jnp
pusha
test
xchg
sbb
fs
sub
out
out
pop
data16
jp
and
lret
repz
sub
shl
mov
je
stos
aaa
mov
bnd
mov
es
loope
push
inc
daa
insl
sbb
popa
dec
out
inc
mov
xor
mov
inc
push
arpl
add
rclb
out
inc
xor
inc
inc
inc
outsl
pop
js
jb
push
jne
add
negb
andnps
mov
adcb
int3
cmpsb
cltd
lahf
adc
lods
out
and
imul
push
sti
pop
push
cmp
cmp
cmc
inc
in
movsb
bound
dec
pop
or
xchg
add
repz
dec
fbld
mov
push
stos
iret
push
scas
mov
ret
aaa
push
jg
aad
inc
mov
mov
dec
or
mov
push
dec
cwtl
cli
jno
scas
scas
jl
ficomps
mov
adc
xor
inc
cwtl
and
mov
sub
inc
mov
cmpsl
lods
sbb
jl
in
and
cmp
sbb
movb
mov
scas
cltd
sub
or
inc
lcall
xchg
adc
lea
fstl
sahf
fmull
sahf
popa
inc
push
fwait
pop
shll
add
add
inc
inc
xchg
push
cmove
ret
test
rcrb
adc
les
jb
inc
icebp
sbb
test
adcl
dec
imul
mov
repz
mov
and
sbb
or
mov
in
mov
push
jle
cltd
stos
jle
incb
push
fisubrs
jae
mov
xchg
jp
xchg
and
mov
out
repz
cmpsb
addr16
in
push
add
test
sti
int3
nop
push
ror
daa
cmp
xor
lret
add
loop
jb
mov
ljmp
push
and
lds
pop
loop
sub
out
hlt
fdivrp
fs
fmuls
or
dec
jl,pn
mov
mov
andl
bound
lods
jle
pop
mov
repz
lcall
enter
scas
sub
adc
lods
xchg
inc
data16
jo
outsb
cmp
cmpsl
adc
je,pn
ljmp
and
mov
sub
cmp
mov
sahf
movsl
xchg
loopne
mov
xor
test
add
dec
int3
enter
jbe
in
cmp
mov
inc
jg
fcoms
mov
pushf
scas
ljmp
int
sub
test
out
shlb
dec
out
repnz
or
aam
lods
adcl
mov
sub
adcb
aaa
arpl
iret
icebp
jl
cld
inc
and
cltd
jmp
mov
cmc
cmp
xor
jae
cmp
outsb
imul
or
in
xor
dec
jecxz
adc
lcall
orl
shlb
loope
ja
mov
jmp
jmp
scas
movsb
sub
dec
jne
mov
roll
icebp
add
xor
dec
inc
cwtl
cld
dec
out
jl
roll
sub
js
xchg
lcall
ret
testb
loope
cmc
mov
loopne
pop
inc
nop
dec
shlb
jnp
cmc
xchg
hlt
movsl
xchg
arpl
jo
jl
dec
sbb
xchg
ja
mov
sbb
jp
mov
repz
lods
mov
pop
cmc
add
hlt
cmp
xchg
pop
pop
stc
cwtl
add
cmp
or
jnp
shrb
xor
push
and
mov
sub
data16
das
out
rolb
or
xor
push
push
and
xor
jp
push
xchg
out
mov
addr16
or
sahf
inc
sahf
fdivl
xchg
sub
repnz
sub
faddl
movsb
outsb
jge,pt
cmp
aam
cli
push
leave
test
and
xchg
or
and
into
cmp
cli
faddl
shrb
adc
dec
popf
or
insb
add
nop
xchg
repz
xor
mov
push
or
add
pop
pop
push
mov
test
lods
std
outsb
lret
test
or
pop
shrl
imul
mov
lret
jae
inc
cwtl
mov
loope
adc
adc
bound
push
add
mov
lret
xchg
sahf
and
aad
adc
xchg
dec
and
and
mov
cmp
dec
xchg
mov
sbb
push
sti
jmp
sbb
inc
adc
inc
sbb
dec
push
sub
inc
hlt
adc
xchg
loop
test
cld
mov
mov
xchg
or
cli
shr
pop
stos
push
dec
jb
imul
xchg
mov
mov
std
imul
sbb
aaa
pop
jge
in
pop
add
pop
icebp
xchg
sbb
pop
in
in
mov
jp
jmp
iret
cs
int3
pop
mov
ljmp
mov
mov
popf
outsl
jp
push
adcb
scas
in
movsl
lods
cmp
pushf
test
sub
in
adc
pop
push
fiaddl
cmp
or
or
sbb
add
in
cld
xor
lret
pop
ljmp
cld
dec
dec
mov
and
shr
jb
and
pop
imul
rcrl
push
aas
cmpl
push
in
mov
adc
fcmovu
xchg
xorb
data16
test
adc
insb
out
fdivp
jno
lods
aad
xchg
dec
sahf
addr16
or
movsl
andl
scas
and
dec
sbb
sub
jmp
test
sub
or
loop
ret
mov
and
cmp
push
mov
mov
jo
sub
mov
rcrl
push
pop
in
ficomps
mov
jo
or
mov
adc
divl
out
lret
shlb
out
push
jno
push
pop
inc
jp
adc
cmpsl
cli
sbb
cltd
inc
jp
das
jge
cmp
push
dec
mov
mov
int3
cmpl
mov
stos
sarb
sbb
jecxz
cld
push
mov
ret
in
mov
xor
imul
dec
out
or
mov
jecxz
xor
enter
push
sbb
push
and
repz
addl
and
xor
icebp
ret
outsl
and
xor
ja
shlb
sti
stos
cs
mov
pop
std
out
scas
add
adc
push
scas
jecxz
test
cmpsb
push
push
sti
test
xor
mov
cmpsl
xlat
paddsb
dec
testl
inc
hlt
push
sub
pop
push
mov
adc
loopne
dec
xchg
out
lcall
hlt
adc
jge
in
cwtl
cmp
aas
sbb
or
leave
push
sti
xchg
inc
fildll
das
incl
xor
inc
push
ret
cmp
movsbl
stc
cmp
or
xchg
mov
sbb
xchg
es
push
aas
insb
push
mov
cmp
mov
cmpsb
pusha
inc
lds
mov
cli
dec
mov
inc
or
loope
lods
int3
xchg
in
xchg
xchg
imul
call
push
pushf
test
nop
mov
out
pusha
mov
mov
das
or
push
dec
fiaddl
or
or
bswap
outsl
inc
jl
insl
lods
cwtl
inc
sbb
stc
pop
lods
sbb
xlat
out
mov
pop
push
pop
sbb
inc
popf
lock
sub
inc
xor
imul
jl
gs
or
push
dec
mov
loopne
lock
fucomi
mov
out
pop
ljmp
mov
adc
mov
enter
jmp
insb
add
inc
jp
sbb
cmp
shlb
cwtl
dec
jg
push
lock
je
pop
push
jb
dec
push
call
testl
or
cmp
cmpsl
push
mov
cmp
rol
jmp
test
adc
fisubl
mov
adc
jl
inc
jl
xor
mov
mov
ss
mov
inc
mov
aad
xlat
fmuls
adc
mov
and
dec
out
adc
add
js
fstpt
fistl
std
or
inc
or
dec
mov
insl
xchg
inc
stos
mov
pop
push
lret
inc
pop
cs
int3
pop
cs
scas
lcall
xchg
out
jle
les
stc
add
out
repnz
mov
or
rcl
cmp
add
imul
add
jge
into
bound
outsl
scas
cmp
movsb
dec
push
mov
andb
insl
cmpsb
dec
out
and
lea
sbb
dec
ja
xorb
std
xchg
stos
mov
test
inc
jb
test
mov
cmp
into
or
or
jb
pushf
ret
repz
xor
or
les
xchg
fnstenv
cmpsb
adc
sti
pop
das
xor
jno
and
test
addr16
cmp
sub
dec
in
test
jg
push
insl
in
add
inc
and
lea
add
clc
sahf
dec
dec
sub
mov
pop
cmp
jg
xchg
rolb
inc
jl
xor
xchg
movsb
or
dec
and
dec
xchg
dec
jl
jne
mov
and
subl
jge
add
imul
cmp
dec
sbb
cwtl
or
outsl
inc
rcr
loop
out
daa
sbb
xchg
shrl
gs
aaa
inc
stc
and
jo
push
dec
pop
mov
sbb
sti
push
xor
outsb
mov
xchg
in
adc
addr16
fcompl
dec
cmp
inc
inc
out
xchg
into
gs
mov
jbe
inc
add
inc
cmp
dec
sbb
fdivp
les
mov
jge
xor
mov
or
xchg
push
inc
xor
stos
loope
xor
mov
stc
adc
shr
jmp
repz
or
push
cmc
lret
inc
sub
cltd
cmp
test
rcr
lret
sub
inc
push
hlt
add
mov
loopne
mov
ret
push
stos
sti
pop
hlt
sub
dec
mov
or
stc
xchg
inc
dec
pushf
pusha
dec
jg
mov
fdivl
shrb
iret
test
cmc
xchg
dec
dec
mov
push
or
int
or
ljmp
xchg
sti
cld
scas
in
add
int3
das
mov
int3
push
loope
adc
adc
or
push
mov
rcll
xor
jo
sub
inc
mov
fstpl
xor
ret
mov
movsl
adc
and
adc
jge
mov
pop
xor
addr16
pop
mov
sub
xchg
loope
jge
in
es
test
jg
jno
mov
adc
fistl
inc
pop
leave
or
sbbb
push
xor
add
mov
inc
cmp
ret
xor
cmpsl
jmp
xor
and
or
fisttpl
scas
hlt
repz
jg
fiadds
fwait
adc
shll
subl
sub
mov
pop
loope
pop
mov
in
arpl
mov
fmul
pop
lahf
push
inc
mov
iret
ret
lret
jge
dec
ds
cmpsb
scas
push
pusha
insl
or
dec
cmp
and
mov
pop
out
mov
shrl
mov
cmp
int
icebp
test
cld
test
stc
inc
repnz
stos
cmp
and
adc
dec
xchg
cmp
loope
sbb
adc
js
push
repnz
dec
sub
pop
pop
das
and
loop
enter
loopne
xchg
rol
call
fldt
jbe
nop
push
fsubrs
out
ror
and
dec
cltd
and
addr16
dec
and
aas
mov
call
and
testb
fisubs
int
mov
test
lret
in
and
mov
adc
pop
cmp
cmp
xchg
add
xor
jb
loop
mov
xchg
jo
jge
or
sbb
dec
jae
xchg
stos
repz
and
fcmove
jle
sti
dec
lcall
jge
das
enter
movsb
add
rolb
ret
lret
insb
or
cmpb
std
or
popa
scas
je
pop
ficoms
or
mov
push
divl
adc
pop
jl
push
mov
loope
pop
pushf
out
pop
cmc
mov
dec
fcompl
outsb
lods
fdivrl
out
mov
insb
stos
std
rolb
lods
mov
sub
test
sbb
jnp
shll
xor
cltd
xchg
jle
pop
adcb
ljmp
rclb
push
mov
xchg
scas
adc
push
and
popf
out
mov
imul
fidivl
gs
mov
leave
xlat
testb
lock
imul
fbstp
mov
inc
in
insl
xchg
jmp
inc
cltd
aad
inc
pop
xchg
mov
inc
push
inc
popl
inc
or
out
fsubl
roll
inc
mov
or
mov
pop
inc
mov
dec
lret
sbb
xchg
pop
sub
fsubrs
je
idiv
push
sub
cltd
test
pop
gs
pop
enter
dec
rcr
movsb
fistpll
les
scas
ret
add
daa
test
jmp
mov
andl
sbb
clc
and
in
inc
xchg
test
inc
mov
cmp
dec
aam
pop
call
cltd
jle
dec
mov
mov
xorb
xchg
out
cmpsb
mov
xchg
cmp
insl
push
test
sbb
cmpsl
jecxz
xor
mov
lods
xorb
scas
sub
pop
mov
cmp
add
pushf
fisttpl
inc
les
jmp
xchg
in
jo
mov
inc
aaa
pop
or
push
sub
lods
mov
sub
xchg
dec
adc
int3
lds
insb
xchg
jl
sbb
mov
rcrl
js
dec
mov
mov
cmc
add
xchg
or
xor
pop
jecxz
movsb
cld
fwait
cmp
das
sub
insb
pop
xchg
push
dec
jmp
jne
jb
pop
xchg
xlat
cmc
movb
pop
push
sbb
pop
nop
jp
pop
mov
cli
int3
jno
mov
adc
inc
sub
xor
nop
xor
out
pop
jl
sbb
shlb
add
sbb
xor
or
and
jmp
jl
adc
out
test
stos
mov
ficoms
and
mov
out
mov
fsubrs
lret
aad
repz
mov
lods
insl
xor
inc
pop
add
js
loop
popf
mov
arpl
jne
adc
cltd
inc
mov
jb
mov
cmp
fildl
dec
adc
fwait
mov
adc
cli
lock
pop
push
pop
repnz
ret
xor
fstpl
xchg
nop
jns
pop
stc
cmp
pop
dec
sbb
pop
mov
out
test
cmp
or
cmpsl
faddp
mov
push
outsl
sti
out
in
out
cmp
pop
loope
mov
pop
in
mov
push
lods
lods
xchg
mov
jbe
push
jb
push
imul
fidivrl
pop
xor
pop
xor
push
add
cmp
lods
xor
pop
cld
and
xchg
aas
mov
and
ret
sub
and
dec
icebp
mov
std
out
xchg
sub
inc
test
scas
dec
mov
push
leave
into
push
and
dec
push
add
mov
lea
addl
ja
mov
jae
inc
xchg
clc
jb
clc
xor
fstl
gs
popf
push
sbb
gs
jg
xchg
adc
xchg
in
lods
aad
nop
xor
push
je
into
xor
roll
pushf
mov
mov
packssdw
sbb
jb
push
popa
hlt
push
jmp
cmpsb
test
push
push
nopl
fsts
xchg
loope
fcoml
adc
icebp
mov
outsb
pop
dec
pop
mov
or
xor
outsl
inc
pop
incl
mov
inc
orl
push
loope
add
je
or
jle
xor
pop
mov
repz
jbe
xor
dec
out
ret
sahf
jl
outsb
cmp
sahf
mov
mov
pop
subb
int3
mov
pop
jne
adc
ja
scas
sub
insb
orl
repz
push
mov
jo
inc
inc
scas
sti
xor
test
outsl
inc
dec
sub
mov
int
icebp
test
lods
gs
xchg
or
movl
xor
jns
popa
ja
aad
sub
stos
fs
and
dec
inc
jbe
or
inc
stos
aaa
jecxz
push
pop
cltd
sub
fnsave
cmp
and
std
imul
fmul
jge
jno
mov
add
icebp
lahf
sub
mov
mov
jg
testl
pcmpeqb
ja
jne
mov
adc
and
inc
push
adc
ret
add
icebp
pop
les
lds
gs
mov
sub
iret
dec
cmpsb
es
sbb
lods
and
cmp
in
push
aad
je
fmull
rclb
pop
jg
push
adc
jns
jmp
push
pop
or
pop
loope
cmpsb
cmp
scas
ret
xchg
mov
mov
cli
mov
adc
push
push
jecxz
mov
add
sub
mov
xlat
ljmp
ja
dec
loope
mov
mov
aad
dec
pop
mov
xchg
push
fs
gs
cli
xchg
orb
xchg
pop
push
sub
das
fldenv
clc
cmc
pop
jb
push
and
jae
push
mov
aaa
mov
mov
repnz
jae
pop
call
xchg
pop
xorb
mov
xor
and
dec
gs
dec
push
lcall
ljmp
push
imul
movsb
inc
outsb
or
mov
leave
cmp
and
push
shl
mov
addr16
in
push
push
mov
cwtl
shl
sbb
outsb
push
pop
sbb
orl
call
cmp
jmp
xor
addr16
lcall
sahf
sarl
and
mov
mov
insb
jbe
pop
sbbl
in
jmp
rol
ljmp
nop
mov
xorb
popa
adc
or
sbb
or
jp
pop
xchg
push
aam
loopne
enter
mov
jg
jo
pop
xchg
outsb
je
aad
in
icebp
pushf
jp
dec
or
js
in
xor
mov
adc
xor
add
xor
repnz
dec
dec
shl
xor
push
pop
fildll
push
add
add
roll
sbb
add
outsl
dec
pop
lds
add
adc
cmp
pop
mov
lahf
add
inc
mov
out
cmp
jbe
popa
ds
sti
mov
gs
fildll
add
lea
sbb
insl
loop
push
jnp
pop
hlt
imul
shlb
dec
sub
test
nop
ror
jle
fsubrl
push
scas
test
or
and
shlb
mov
outsl
fsubp
push
clc
xchg
xor
jno
sub
lods
adc
jmp
stos
pop
jbe
xchg
ret
cwtl
push
push
int
push
and
adc
jge
sbb
jne
mov
in
xchg
sub
imul
add
add
and
xor
mov
cmp
jnp
out
mov
ret
lret
arpl
adc
xor
cmp
lods
xor
jmp
sti
push
fsubr
cwtl
sbb
cmp
lahf
or
jge
cmp
lock
loope
fldl
inc
mov
call
xor
and
stos
xor
shlb
out
sahf
mov
cmp
scas
xchg
jge
and
repz
cli
ret
xor
lods
xchg
clc
imul
sbb
rcll
xchg
add
addl
ds
pop
dec
sub
inc
dec
cmp
pop
add
aaa
outsl
and
adcl
pushf
mov
push
push
in
xchg
add
cmp
adc
insl
ds
push
out
scas
aas
push
mov
aaa
mov
add
ficoms
test
mov
or
jl
xor
divb
bound
or
push
sub
and
out
cmpsl
gs
fcoms
ljmp
pop
repnz
in
sub
movsb
mov
stos
jg
and
sub
or
int
lcall
or
push
xchg
push
and
xchg
mov
hlt
dec
ret
loopne
and
or
stc
cmc
outsb
dec
mov
out
mov
leave
xor
xchg
pop
ljmp
test
imul
add
push
mov
data16
xor
pop
fstpt
add
xor
add
pop
push
outsb
mov
fistpll
stos
loop
int3
push
iret
mov
pop
scas
and
lea
jns
popa
cmp
mov
in
lret
cltd
add
stc
lahf
sub
jns
mov
js
test
mov
test
test
cmp
fs
aas
fcomip
and
es
jl
fnstsw
out
stos
in
mov
out
xchg
lret
test
stos
sub
outsb
xor
out
xchg
mov
jnp
adc
push
sub
add
jp
lret
sti
cmpsw
xor
jb
sub
fldt
clc
cmc
fwait
xchg
mov
xor
sub
xor
ret
push
fstpl
mov
pop
push
pushf
add
andb
or
mov
sub
out
and
outsl
gs
ljmp
or
cmp
cmp
shll
push
stos
das
lret
inc
or
fnsave
pusha
aam
test
repnz
adc
push
inc
sbb
jp
call
adc
xchg
adc
iret
push
dec
mov
gs
mov
sub
pushf
js
or
jo
dec
rorb
filds
jl
out
mov
dec
pusha
movsb
scas
pop
sub
scas
fnsetpm(287
mov
popf
cmp
in
sbb
xor
mov
cmp
lahf
inc
and
pop
cmp
xorb
loope
push
out
sbb
out
xchg
lcall
jg
mov
mov
bound
jbe
xor
push
adcb
cmp
lods
sbb
repz
div
test
cmp
out
mov
call
or
mov
jns
jmp
sbb
xor
fldt
pop
in
into
push
and
inc
test
cmpsl
ret
push
je
pop
in
xchg
loope
mov
push
test
mov
adc
sub
fsubr
add
jnp
scas
rclb
jbe
and
pop
or
push
adc
loop
jp
fistpll
imul
ret
test
mov
dec
jecxz
mov
pushf
ljmp
adc
in
iret
cmpb
jp
mov
pop
mov
stc
in
adc
ficoml
pop
out
add
xchg
mov
add
out
sbb
shlb
stc
dec
fnstsw
fyl2xp1
pop
inc
cmc
shr
and
test
subl
xor
jae
xchg
fldt
jnp
rcrb
or
mov
test
push
mov
and
inc
and
mov
pop
add
dec
or
push
iret
daa
inc
xchg
loopne
test
jge
jo
fiaddl
xor
dec
push
jmp
aas
or
xchg
add
std
fistpl
and
inc
andl
ds
mov
les
ja
xlat
ret
mov
cltd
addr16
testb
int
inc
mov
into
push
mov
fwait
mov
std
addr16
in
lahf
sbb
int3
dec
add
daa
mov
outsb
add
mov
cmpsl
fists
or
mov
cmc
mov
mov
mov
pop
xchg
and
adc
and
adc
or
ja
pop
or
adc
nop
stos
fstl
cmc
loopne
sbb
sbb
je
lods
jbe
push
das
pusha
pop
push
xchg
inc
call
xor
stos
lcall
faddl
mov
mov
sbb
mov
xor
cli
rcrb
shlb
and
cld
loopne
clc
xor
xchg
xchg
cmp
pop
hlt
pop
mov
loope
cli
daa
addr16
jle
push
add
ret
lret
sti
fbld
cmp
push
mov
mov
bound
jl
xlat
mov
xor
xchg
mov
lahf
inc
jns
mov
rorb
fiaddl
jp
sub
cmpb
mov
mov
lcall
ds
negb
xor
push
ja
out
pop
xchg
cs
or
or
mov
fisubs
xchg
fcomip
cmp
fistl
jp
lods
jbe
cwtl
pop
sub
dec
adc
xchg
out
stos
js
out
bt
or
pop
adc
sub
stos
jl
fisttpll
sbb
xchg
pop
cmpsb
sbb
sbb
test
adc
jmp
xor
insb
and
pop
ljmp
sahf
cmp
mov
movsl
mov
inc
mov
aad
lods
jns
lock
movsl
mov
cmp
aam
loopne
xchg
mov
or
xchg
andb
jl
adc
and
cli
cltd
or
pop
adc
jmp
mov
fs
jge
cmp
test
pop
or
test
into
test
cli
xor
and
shrb
sbb
jb
lock
int
into
mov
mov
pop
shll
push
popa
out
sub
cmp
sbb
adc
sub
fadds
daa
push
aad
pop
push
mov
sub
mov
dec
jo
dec
cmp
out
pop
inc
lea
pop
int
jl
aam
cmpsb
lret
or
dec
mov
sbb
js
dec
or
minps
in
out
jl
pop
mov
inc
and
int3
cmc
fistpl
adc
fstl
adc
xor
adc
xor
push
adc
out
insb
lea
lds
gs
inc
pop
fimuls
ljmp
and
jp
orl
lock
enter
sub
dec
aad
hlt
push
rclb
inc
mov
add
xorl
repz
inc
loope,pt
das
xchg
sbb
or
addr16
mov
mov
dec
jecxz
and
sub
add
add
lds
cmp
divb
xchg
arpl
outsb
andb
mov
shrl
fistpl
jmp
in
pop
test
add
xor
aas
out
mov
pusha
add
sbb
sub
pop
sbbb
push
jae
sub
out
dec
adc
pop
lds
push
mov
sub
fidivl
pop
fists
sub
inc
jns
lock
and
lcall
push
cld
mov
sbb
sti
imul
adc
es
sub
aad
movsb
ds
mov
mov
fs
rcl
loope
dec
cs
push
fists
push
dec
sub
sub
mov
stos
cs
xchg
jnp
movsl
dec
mov
dec
push
sar
scas
add
in
xor
add
aas
add
sahf
push
aaa
pop
ljmp
jbe
sub
jo
sub
cmc
sub
jno
jl
scas
pop
cmp
addr16
inc
btr
orl
bound
cmpsl
sbb
jle
and
ljmp
iret
xchg
sbb
mov
loopne
fidivs
test
mov
hlt
pop
fwait
das
add
mov
jne
jnp
or
test
cmp
pop
cmpb
bound
sbb
cmp
xor
pop
int
aas
jp
push
decb
imul
and
es
enter
sbb
stos
out
pushf
gs
pop
mov
inc
xor
lods
std
fwait
jge
push
iret
test
ja
scas
rolb
movsb
adcl
adc
xchg
popa
nop
cmp
xor
push
cmp
mov
cs
stc
scas
add
testb
inc
aaa
sub
filds
mov
push
stos
insl
jl
rclb
xchg
sbb
scas
pop
or
dec
std
inc
out
push
setae
test
jnp
jp
cli
sub
movsb
scas
add
push
mov
push
pop
sbb
xchg
imul
test
xchg
into
popf
push
pop
stos
mov
fisubs
shrl
inc
lock
or
int3
sbb
divb
loope
cmp
outsb
enter
cltd
cli
adc
in
xchg
cmp
jle
das
dec
pop
cmp
cmp
mov
shl
push
subb
lahf
cmc
aam
cmpsb
push
and
ss
outsb
adc
mov
xchg
jmp
ljmp
into
inc
and
sub
push
sub
jg
jl
xorl
sbb
int
jg
inc
int
xchg
popf
jns
adc
sbb
mov
mov
clc
jmp
adc
xor
cmp
test
jmp
sti
in
sub
xor
adc
xchg
cmpsl
xor
sub
imul
dec
das
imul
cwtl
cmp
lock
and
mov
insl
jbe
xchg
push
jns
arpl
mov
stos
aaa
test
xor
insb
push
push
bound
adc
loopne
lahf
mov
mov
shll
mov
pop
cltd
push
push
stc
and
sarl
jecxz
jg
mov
rorl
ret
fimuls
movd
inc
push
mov
sbb
sub
xor
cmp
leave
lea
movl
loope
lea
jne
hlt
pop
fnstenv
add
xor
jae
rorl
mov
sbb
jne
neg
popf
dec
fdiv
fdivrs
or
cs
mov
shlb
mull
and
sub
and
outsl
cmc
lods
mov
jp
movsl
aaa
lret
mov
push
cwtl
and
ss
jno
push
lret
adc
mov
out
inc
xchg
fcmovnu
int3
xchg
cwtl
popa
xor
inc
cmpsl
jge
loope
inc
fnclex
int3
lret
and
gs
aad
mov
fsubs
pushf
push
aad
fwait
xchg
mov
lock
inc
push
fdivrl
subl
inc
orl
pop
stc
xor
jg
imul
mov
push
minps
outsl
lret
mov
cmp
out
sti
loope
int3
dec
dec
leavew
rorl
pusha
push
incb
shll
cmpl
xor
subl
dec
dec
jmp
mov
or
inc
or
iret
iret
lods
movsl
stc
das
scas
cld
stos
cmpsl
aad
inc
add
mov
push
and
rorl
cmpsl
lret
loopne
into
sub
lods
jmp
jecxz
clc
das
jmp
add
pushf
dec
dec
popf
movsl
jno
andb
fadd
xchg
pop
lcall
push
jnp
mov
out
pop
lods
js
mov
popf
mov
cwtl
les
or
cld
popf
push
pop
mov
pop
aam
mov
ljmp
jnp
ss
inc
jo
push
xlat
jnp
mov
xlat
push
xchg
and
lods
sub
xchg
mov
rolb
sti
inc
imul
dec
lea
inc
lock
bound
aas
fcmovu
pop
mov
sub
and
add
or
and
add
mov
xor
imul
repnz
jmp
dec
into
mov
iret
xchg
dec
cli
in
or
pop
inc
cmc
pop
in
arpl
or
loope
lds
icebp
add
mov
xorb
mov
ret
dec
fistl
or
icebp
inc
cmp
cmp
sbb
xchg
fnstsw
push
call
into
negl
imul
mov
sub
cmpsl
jmp
jb
and
dec
daa
mov
cmpxchg
shl
movb
out
dec
push
cmc
outsl
mov
ljmp
ljmp
stos
dec
xor
cmp
jmp
mov
inc
mov
adc
sub
xor
movsb
cmp
or
mov
cld
rorb
sub
icebp
mov
jmp
cmp
adc
adc
scas
mov
cwtl
adc
ds
mov
cmp
enter
jl
jle
fsubrl
mov
adc
mov
pop
aas
xor
shll
inc
mov
dec
flds
jecxz,pn
push
js
and
adcl
dec
subl
pop
push
jae
js
mov
imul
xor
insl
cmp
sub
repz
enter
enter
sub
push
mov
in
mov
mov
int
sbb
pop
pusha
xchg
dec
adc
bound
lock
xchg
test
out
fwait
in
xlat
xlat
imul
or
aam
adc
daa
dec
push
and
cmc
sub
ljmp
in
mov
jnp
add
aad
inc
dec
sti
cwtl
rcrb
mov
cmp
lret
popa
mov
mov
cmc
sbb
sbb
cmp
add
ret
lods
sbb
or
cltd
or
cld
insl
jl
out
ffreep
cmp
jecxz
pop
imul
jl
jo
cmpsl
inc
pop
pop
mov
push
pop
or
add
push
adc
addr16
enter
inc
sub
out
xor
mov
call
inc
adc
fcompl
pop
addl
out
xor
jnp
sbb
jns
jne
xchg
inc
mov
and
ja
sub
pop
mov
lea
sbb
fs
pop
icebp
dec
mov
xchg
lret
xchg
push
cmp
and
lcall
addb
push
xlat
aaa
ja
lds
jnp
loopne
addb
xor
lahf
loope
mov
lea
addb
mov
mov
push
push
ret
adc
ja
rcll
jb
dec
sub
pop
push
std
xor
das
dec
cmpb
adc
dec
sub
mov
lcall
and
xor
add
aaa
push
pop
loopne
and
adc
lods
xchg
jb
aad
mov
addr16
nop
push
scas
or
lods
or
push
bnd
push
pop
mov
fcoml
shrb
mov
xchg
pop
fists
mov
sub
das
xor
gs
in
enter
push
push
into
pop
xchg
xor
xchg
push
sbb
xor
scas
push
jno
nop
out
shll
sub
outsl
lods
cmp
or
add
sbb
popf
xchg
jle
mov
enter
outsl
add
bound
push
or
add
int
mov
fcmovnbe
mov
add
nop
das
fwait
push
dec
push
testl
jle
dec
xor
cmpsl
into
ret
call
sbb
clc
or
call
add
jl
dec
cmp
negb
fcmovnu
pop
or
fdiv
mov
not
lret
subb
ret
shl
or
adc
and
sbb
inc
xchg
xor
nop
push
aad
cmp
push
mov
std
ss
gs
jg
cmp
ret
fcmovnb
pushf
adc
imul
aas
out
xchg
stos
pop
add
xor
add
jo
mov
mov
jno
iret
jns
inc
cs
es
xchg
push
in
add
mov
add
mov
fiadds
repnz
cli
mov
movsl
fstpl
mov
ficomps
and
imul
lret
and
cmpsb
sbb
push
mov
clc
test
mov
and
jnp
adc
xlat
leave
push
data16
in
jmp
push
xor
sub
data16
or
movb
mull
mov
add
je
cmp
pop
inc
jne
test
stos
jbe
mov
popf
jae
int3
adc
dec
sbb
in
jae
mov
xchg
adc
or
jne
mov
mov
clc
mov
in
sbb
mov
and
add
pop
stos
mov
negb
pop
call
sbb
iret
shlb
pop
inc
insb
aam
in
js
add
dec
int
mov
xor
mov
xlat
scas
fs
dec
xor
jp
sub
jb
repz
dec
mov
pop
cmp
add
jp
movsb
mov
push
adc
push
xchg
ja
inc
dec
test
xlat
inc
stos
jo
pop
jo
stos
hlt
xchg
push
loopne
fldcw
pop
sbb
push
gs
insl
mov
mov
push
std
sti
inc
faddl
cli
negb
pop
sub
jae
mov
jns
test
push
jl
test
aad
mov
outsl
sub
sbb
out
mov
or
enter
mov
ss
cmpsb
call
xchg
jo
jmp
dec
sub
push
jns
mov
addb
xchg
pop
fsubl
push
ret
test
jge
jno
outsb
add
adc
into
jmp
mov
jne
jno
mov
pop
and
fnsave
mov
nop
lods
cli
fwait
and
ja
push
nop
movl
mov
shr
shlb
loopne
cmp
mov
mov
fbld
repnz
dec
mov
out
cmp
add
fisubrl
jp
movl
out
aam
arpl
sbb
rcll
jg
push
mov
add
push
inc
and
push
mov
xchg
mov
dec
or
push
xchg
or
cmp
mov
dec
adc
fbstp
sub
in
adc
test
xchg
enter
inc
outsl
in
and
xchg
dec
add
mov
adc
into
ja
add
xorb
push
mov
inc
mov
jmp
inc
bound
add
push
sahf
pop
into
jbe
mov
xor
mov
test
inc
dec
mov
adc
addr16
loope
daa
xchg
out
add
pusha
out
add
xor
stc
pop
test
loop
or
dec
mov
fistl
idivl
jb
mov
xchg
int
aam
lods
xor
lahf
xor
shll
xchg
cld
dec
jae
or
or
adc
stos
in
mov
xchg
jmp
negl
mov
test
filds
and
cmp
popf
pop
xchg
in
je
cmp
movsl
sbb
outsl
sbb
roll
and
xchg
ss
sbb
push
jne
xchg
shrb
int3
xchg
test
mov
pop
ljmp
ret
movsb
cmp
inc
pop
pop
imul
stos
popa
pop
sub
sarb
aam
lea
add
in
fstps
xor
dec
sti
jl
jge
and
or
mov
insb
adc
xchg
lea
push
cmpsl
sbb
dec
mov
popa
add
sbb
pop
cmp
mov
mov
sub
mov
push
xchg
pushf
mov
mul
rclb
pop
xor
add
imul
cld
std
add
sub
pop
negb
jle
outsl
and
test
jns
lock
mov
in
test
fsubr
fs
dec
fmul
and
adcb
pcmpgtd
loopne
push
sbb
mov
sub
xor
xchg
andb
hlt
sub
push
subl
dec
std
mov
cmp
es
outsb
cmp
adc
mov
ficompl
jne
add
push
dec
mov
add
mov
pop
jmp
repz
xor
xchg
or
daa
cmpsb
mov
shlb
pop
ja
push
divl
dec
dec
mov
scas
mov
jb
and
ror
mov
inc
ret
sbb
fstl
notl
imul
stos
clc
addr16
insl
loop
sub
dec
jmp
repnz
dec
xor
adc
das
fwait
lods
cld
movsl
sar
jns
filds
in
jmp
bnd
xchg
movsb
push
adc
and
fidivl
adc
push
aam
cmp
pop
pop
loopne
and
adc
and
cmp
mov
pushf
js
inc
or
test
jae
cs
inc
in
or
rcrl
mov
cmc
rorb
repz
pop
scas
inc
hlt
ljmp
shl
inc
mov
mov
dec
jns
sarl
xchg
mov
dec
sub
subb
lahf
mov
insl
sbb
mov
push
pop
sbb
sub
xchg
ficompl
pushf
outsb
loope
pop
and
sub
sub
and
mov
jnp
or
cmp
mov
inc
mov
out
andb
add
cmp
aaa
ljmp
int3
lock
jge
and
sbbl
lea
daa
mov
rclb
inc
jg
enter
push
mov
jmp
mov
push
sub
adcb
out
cmp
dec
cmp
cltd
mov
jmp
cli
aas
add
or
sarl
or
cmpb
movsb
cld
andl
test
scas
xor
mov
sar
data16
addr16
cli
pop
leave
ret
pushf
ss
fwait
mov
fisubs
jno
stos
xor
mov
addb
jns
pushf
stos
clc
sub
movsb
push
ja
sub
push
sti
scas
aas
jg
sti
mov
jp
mov
lods
addb
xor
push
cmp
mov
sbb
push
or
adc
out
imul
mov
mov
lods
and
aam
and
sbb
jb
cmc
and
inc
pushf
mov
out
sub
ret
pushl
sub
daa
and
aaa
sbb
add
ret
adc
repnz
inc
mov
adc
xor
clc
push
insl
pop
xlat
pop
icebp
push
mov
mov
mov
jle
insl
xlat
mov
pop
out
in
sbb
mov
cmp
sahf
push
loop
mov
cli
gs
repnz
lahf
jnp
push
sbb
loope
sub
fstps
popa
mov
push
insb
mov
push
pop
das
dec
aas
stos
inc
lods
adc
loopne
popf
xchg
and
jns
cmp
shl
cmp
movsb
sub
mov
cmp
xchg
pop
pop
les
push
outsl
in
add
int3
or
inc
lcall
mov
sub
or
xchg
add
repz
movsb
in
rcl
sahf
push
push
push
arpl
shll
and
xchg
pop
iret
mov
outsb
hlt
inc
mov
aam
jp
mov
inc
lcall
cmp
dec
add
jnp
inc
fstps
push
int3
or
push
or
daa
je
leave
pop
pop
and
std
ljmp
lds
ds
and
mov
push
push
outsb
fsubrs
icebp
pop
cwtl
mov
outsb
aaa
scas
sub
aam
repz
imul
pop
sbb
or
into
out
sbb
adcl
mov
xor
and
iret
lahf
imul
mov
test
sub
jnp
in
repz
pop
arpl
pop
and
aas
sub
jl
sub
dec
insb
and
cmp
decb
sti
push
aaa
mov
mov
mov
test
fcmovb
fists
and
aaa
dec
hlt
sahf
sbb
gs
clc
pusha
out
dec
and
dec
xchg
popf
lods
aad
push
enter
lret
les
setne
mov
imul
push
dec
addb
lock
ret
jecxz
into
mov
xchg
cmp
addr16
sahf
adc
add
in
jb
incb
int
mov
icebp
inc
cmpsl
xor
aad
dec
adc
shll
sahf
xchg
sbb
jecxz
enter
push
dec
or
jb
mov
lret
idiv
ljmp
jne
jl
push
jb
push
dec
xchg
imul
or
mov
insb
int
cmp
jp
std
outsb
jl
push
fs
arpl
sub
xchg
adc
jecxz
call
lods
mov
lods
mov
shl
push
xchg
pop
xchg
and
mov
aaa
xor
maskmovq
sbb
fcomp
mov
test
push
popf
jmp
bound
push
push
in
sub
jb
mov
mov
xchg
inc
dec
movsb
mov
lods
jo
and
repnz
jg
sbb
cmp
sbb
xorl
xchg
push
cmp
cmp
push
push
test
and
pop
pop
icebp
sti
lcall
or
push
inc
in
lret
es
les
add
cmp
mov
mov
cs
btc
add
xor
inc
or
ret
jns
and
imul
and
out
adc
xchg
pop
push
ja
fnstsw
out
loop
sub
dec
std
pop
pusha
and
adc
cs
xchg
lret
and
mov
mov
adc
mov
mov
dec
sub
lcall
cs
mov
sahf
fnstsw
sarb
mov
popf
rorl
adc
add
test
xor
jl
mov
sbb
sbb
loopne
fldt
out
sahf
pop
pop
xchg
cmp
insb
mov
in
mov
xor
push
push
popf
xchg
aas
popa
loope
fidivrs
adc
mov
cs
sbb
xlat
pusha
addr16
es
aas
inc
push
pusha
sub
add
and
and
mov
push
jmp
or
insl
xor
aaa
mov
cmp
jae
in
sbb
mov
arpl
nop
and
lock
mull
sub
roll
and
jl
push
lret
aas
iret
xor
mov
and
inc
xchg
adc
outsl
inc
xor
xchg
out
test
jg
xchg
mov
repnz
and
or
push
subb
std
outsb
fisttps
push
adc
push
and
bound
nop
mov
sub
les
les
sbb
sub
jecxz
pop
sahf
cld
sbb
fsub
push
sbb
fisttpll
and
mov
or
das
fdivp
or
xor
stos
cmp
sub
mov
mov
mov
add
xlat
test
pop
jge
and
in
imul
inc
sbb
iret
sbb
stos
jg
push
mov
popf
pop
pop
out
inc
loop
sub
lahf
inc
pop
lds
mov
bound
outsl
roll
mov
inc
mov
sbb
lods
test
out
ss
mov
xchg
lea
aaa
xchg
mov
mov
add
mov
jnp
adcb
mov
dec
lret
jl
testb
pop
mov
shl
pushf
jno
dec
stos
push
pop
jecxz
and
mov
lock
fndisi(8087
adc
xor
mov
cmp
or
aaa
das
push
ja
cmp
xchg
std
xchg
add
fidivs
sti
fcomp
sbb
pusha
mov
push
inc
mov
popf
sbb
insb
push
xchg
push
push
imul
inc
and
js
pop
cmpsb
iretw
aam
imul
jmp
sbb
sub
rcll
popa
xorb
push
add
xorb
outsl
les
inc
shlb
lret
cmp
mov
out
xchg
dec
or
xchg
mov
pop
std
out
rolb
sub
jbe
rorl
sbb
sbb
push
shrl
adc
mov
loope
mov
pop
imul
pop
dec
xor
adc
push
fdivrp
popa
cmp
into
rorl
push
sub
xor
bound
rclb
push
scas
lret
mov
xchg
dec
xchg
xlat
jp
dec
mov
fsubr
shl
jbe
push
mov
pushl
mov
dec
movsb
call
aam
je
jmp
mov
push
push
sbb
add
pushf
mov
mov
popa
lret
push
enter
push
dec
mov
sbb
sti
sbb
shr
stc
int
mov
lock
add
lahf
out
fnstenv
jmp
inc
and
sti
bound
inc
xchg
xor
jp
loop
imul
cwtl
ljmp
and
xchg
jecxz
loopne
push
xor
mov
into
inc
fisttpll
subl
mov
mov
lock
mov
xor
dec
adc
pop
fmull
nop
dec
arpl
cmp
jae
in
push
adc
ret
lahf
js
push
dec
jno
lea
lock
daa
test
jnp
or
push
enter
aad
pop
sub
lds
std
xlat
lret
loopne
shlb
mov
ds
lods
or
aam
mov
mov
cmp
add
sarl
outsb
scas
add
cltd
into
lods
pop
lods
scas
fdivrl
scas
mov
test
mov
add
add
sub
pop
stc
mov
pop
out
adc
mov
adc
sbb
xor
push
call
fldenv
push
and
lock
jle,pt
mov
divl
scas
or
or
xor
std
int3
in
mov
out
xchg
f2xm1
and
fucomi
in
dec
add
test
ds
scas
stc
in
aaa
sbb
add
add
xchg
repz
add
push
sbb
ja
adc
sarb
cs
enter
jno
push
in
mov
icebp
inc
outsl
scas
ljmp
ljmp
jmp
into
shlb
mov
sbb
iret
mov
mov
mov
xchg
and
xor
call
popa
scas
fcoml
inc
repnz
addr16
push
dec
dec
shr
and
push
icebp
mov
jg
out
pop
pusha
jo
jo
in
xor
jo
or
xchg
daa
dec
mov
imul
fisubl
xor
fildll
sub
arpl
aas
punpckldq
aad
test
out
shll
add
loop
in
push
in
outsl
xchg
int
push
sbb
mov
fstpt
jp
dec
push
xor
inc
mov
cmc
stc
out
mov
sahf
jge
sbb
fidivs
pop
sbb
movsl
mov
mov
stos
or
setae
mov
movsl
fbld
sbb
call
test
insb
stc
pop
es
int3
scas
fwait
ljmp
or
mov
mov
rolb
xchg
mov
and
sahf
stc
rorb
sbb
cmp
sub
fdivrs
and
ret
and
xchg
fisttps
adc
push
sbb
mov
dec
xchg
push
mov
cmp
ja
jle
cmp
and
pop
jne
jae
movsl
dec
adc
adc
xor
xor
mov
sub
inc
xor
jmp
and
xor
sub
add
loop
popa
add
shrb
mov
pop
cmp
ficomps
ljmp
mov
lods
lock
es
pop
lret
pop
cmp
or
stos
adc
in
imulb
cld
cmc
call
jg
mov
adc
nop
cltd
or
out
in
inc
lea
pop
outsl
inc
and
xor
push
in
aam
fwait
pop
bnd
jl
test
cltd
mov
add
or
pusha
add
std
stos
dec
mov
xor
sbb
dec
mov
jnp
in
arpl
or
fucomp
rorl
lods
xchg
jle
and
mov
jne
inc
out
mov
push
imul
mov
xchg
mov
orl
pop
pop
fsin
xchg
xchg
ret
mov
mov
cmpsl
mov
inc
leave
fiadds
cmp
mov
cmpsl
fimull
xor
push
or
add
fisubrs
insl
ljmp
mov
movsb
or
xor
insl
stos
mov
mov
adc
mov
lahf
call
pop
jl
repz
cmpsb
xor
xchg
mov
ljmp
outsl
sbb
into
push
fwait
insb
cmp
sbb
cmp
push
in
cmc
rcl
cmc
ljmp
loop
aas
mov
xchg
repz
pop
jmp
and
push
test
and
xchg
fimuls
fucomip
and
scas
insb
shrb
pop
fidivl
adc
popa
orb
jnp
jmp
loopne
leave
or
out
ret
test
je
pop
data16
es
sti
or
aaa
mov
mov
xchg
call
mov
fbstp
push
mov
cmpxchg
push
jae
cli
push
mov
push
xchg
ret
pop
and
shlb
add
cmpsb
inc
or
adc
mov
cbtw
stos
out
mov
jns
or
jg
les
mov
dec
push
push
in
push
das
cmp
lods
or
push
imul
mov
dec
insb
and
js
lock
out
dec
push
into
xor
pop
lods
mov
mov
xchg
push
pop
adc
push
lock
dec
pop
mov
fidivrs
jecxz
adc
pop
jp
add
jecxz
cs
lret
push
int
fbld
sahf
adc
mov
dec
in
sub
in
jns
xor
bound
mov
push
out
push
enter
mov
xchg
jo
sub
and
inc
les
push
rorl
outsl
mov
pop
mov
adc
jae
dec
lret
loopne
lods
lahf
scas
loopne
out
iret
dec
sbb
or
push
xchg
and
mov
sub
xor
dec
pop
xchg
mov
fiadds
pop
ja
scas
sbb
outsl
push
sbb
insl
ljmp
push
out
clc
fldenv
jge
sub
or
iret
mov
push
pop
jg
test
pop
jbe
ret
xlat
jno
or
pushf
jecxz
aam
pop
shll
imul
jecxz
scas
xchg
aas
gs
cmpb
adc
pop
push
test
push
dec
ds
inc
insl
sbb
jecxz
xlat
add
mov
sbb
mov
mov
mov
and
dec
xor
lcall
jmp
jbe
cmc
gs
fs
pushw
push
das
adc
shrd
mov
and
hlt
mov
sbb
and
cwtl
jbe
push
mov
inc
mov
outsl
xor
imull
adc
dec
pop
aas
mov
data16
mov
das
cmp
xor
xlat
stos
mov
in
adc
xorl
sub
in
and
jno
mov
jg
inc
and
repz
icebp
cmp
fidivs
je
out
enter
adc
cmp
test
outsl
sbb
fiaddl
jmp
ret
jg
je,pt
call
mov
mov
dec
jne
mov
stos
or
mov
cmp
inc
jmp
inc
arpl
pop
inc
gs
aaa
sbb
or
mov
mov
jb
sbb
sti
mov
add
jo
pop
fwait
out
add
imul
cmp
push
cli
arpl
sarb
std
mov
push
dec
arpl
loopne
ja
cmp
mov
imul
int
rcll
fidivrl
pop
pop
mov
test
sbb
jle
cmp
xchg
shl
movsb
push
iret
adc
es
mov
inc
add
arpl
add
jecxz
andl
add
or
push
inc
inc
sahf
add
push
xchg
out
xchg
imull
sbb
and
cmp
push
sar
add
lahf
mov
loopne
call
lods
fwait
rclb
icebp
in
pop
or
xlat
inc
adc
repz
jbe
test
stc
es
int3
push
flds
test
fildll
jge
movsl
sahf
mov
loopne
adc
sbb
in
cmp
cmp
lock
test
and
bound
jbe
sub
sbb
dec
mov
enter
add
aam
jecxz
orl
xor
or
adc
or
mov
cli
pop
lods
rorb
add
mov
push
xchg
test
out
xor
arpl
dec
lds
add
xor
mov
dec
add
sahf
push
adc
pop
movsb
push
loopne
jns
mov
push
inc
or
mov
inc
cmp
shrl
lods
inc
mov
mov
pop
xor
notl
mov
pop
mov
movsl
xchg
stos
jmp
pop
arpl
adc
popf
jo
push
sbb
xor
or
mov
adc
adc
fsubrl
orb
mov
jge
mov
adc
xchg
fs
inc
or
aaa
cmp
xor
rcrl
add
in
inc
pop
adc
push
dec
in
ds
mov
jmp
imul
mov
mov
pop
dec
in
stc
cmpsl
aas
test
push
out
enter
or
rcll
andl
push
fldt
lock
shl
repnz
popf
mov
mov
pop
push
or
mov
and
outsb
mov
daa
imul
xchg
loopne
imul
and
call
adc
sti
dec
xchg
fs
mov
std
mov
dec
daa
cmp
mov
mov
out
mov
mov
enter
imul
mov
es
stos
andl
push
addr16
pop
sbb
mov
fcompl
ja
dec
xor
jmp
scas
iret
fwait
inc
orb
dec
mov
add
jnp
leave
out
pushf
or
test
push
sbb
in
mov
and
lret
dec
movsl
jg
mov
ds
and
mov
and
jns
cmp
fprem
push
cmpsb
test
add
cs
dec
mov
lcall
pop
push
lret
adc
mov
fbstp
sahf
aam
mov
orb
aas
inc
inc
xchg
dec
fs
sub
mov
cmpsb
pop
push
push
ds
fucomip
mov
sar
xchg
jae
dec
sbb
jo
adc
jl
adc
ret
lcall
push
mov
dec
sbb
xor
dec
mov
imul
xlat
ret
jo
mov
movsl
out
lcall
js
ret
push
adc
push
sub
dec
stos
repz
aas
scas
mov
push
andl
mov
dec
or
mov
xor
stos
or
adc
inc
jbe
cmpsl
mov
icebp
fwait
std
mov
rcrb
mov
imul
cwtl
cs
lea
rcrl
adc
mov
andl
inc
out
lock
push
sub
jo
jl
gs
jno
sub
dec
lea
add
and
movsl
iret
xchg
or
in
gs
mov
mov
shll
das
loopne
out
push
shrb
es
lcall
fptan
jp
xlat
or
sbb
and
cld
add
mov
inc
imul
xchg
lods
lret
xor
fwait
pop
cld
movsl
pop
fcoml
lods
xor
jno
testl
inc
or
inc
cs
cs
fsts
push
imul
clc
sbb
sbb
test
xchg
xchg
fcoml
mov
sti
and
les
cmpsb
leave
dec
aaa
fcoms
movsl
stc
fildl
scas
pushf
pop
movsb
jmp
ja
add
imul
and
sub
lcall
xor
mov
add
fwait
or
inc
inc
add
out
sbb
mov
lods
cmc
rcll
inc
cltd
or
out
pusha
pop
jmp
push
clc
push
add
jns
mov
outsb
push
xor
out
cmpsl
jb
lea
xchg
jo
sbb
or
sub
jo
orl
mov
cmp
inc
sub
and
adc
insb
dec
lahf
popa
sub
fdivr
ljmp
addb
pop
or
nop
outsl
xor
sti
sub
sbb
sub
test
pop
push
mov
mov
cmp
pop
popa
cmc
push
mov
lods
add
xor
add
sub
sbb
lods
and
jmp
inc
or
xchg
sbb
xchg
adc
sbb
cmp
jecxz
scas
inc
mov
pushl
pushf
add
push
fdivr
shrb
pusha
shr
lret
into
cmpsb
push
xor
subl
test
fisttpll
pop
mov
movsl
pop
mov
jp
pop
aam
jb
sahf
xor
cmp
mov
aaa
or
push
popl
inc
add
out
dec
or
addl
push
enter
mov
test
sbbl
out
inc
mov
jnp
dec
fadds
jle
decb
xchg
insb
in
mov
adc
cmp
add
lods
fwait
js
inc
and
fwait
mov
sti
mov
scas
sbb
mov
notb
xchg
rcl
push
repz
idiv
stc
mov
fwait
test
mov
cmp
icebp
in
xchg
inc
mov
test
push
icebp
sub
push
sub
leave
mov
sbb
stc
push
lds
fimuls
xchg
test
std
adc
ds
and
fidivl
add
dec
daa
push
loop
dec
jae
jnp
xchg
mov
sub
push
pop
sbb
cmpl
idivb
inc
jae
cwtl
ror
sub
dec
add
jle
add
xchg
repnz
pushf
insl
push
cmpsb
lods
xchg
nop
sarb
and
mov
loope
lret
push
push
ss
or
fs
xor
in
pop
push
stc
mov
xchg
in
jmp
repnz
subl
xchg
inc
arpl
xchg
aaa
in
mov
aaa
inc
xlat
je,pt
repnz
sahf
leave
enter
adc
mov
nop
push
jae
push
jo
shlb
adc
mov
inc
cmpsb
test
lds
mov
lret
bound
icebp
jo
in
push
cmp
das
test
es
test
push
adc
mov
inc
stc
in
mov
out
push
loope
push
cmpsb
in
dec
xor
and
fstl
sbb
mov
andl
enter
sbb
cld
pop
out
push
lea
xchg
nop
imul
xchg
popa
mov
xchg
mov
cwtl
dec
cltd
mov
je
lea
add
fisttpll
xchg
cmc
jae
jmp
adc
lds
js
inc
icebp
dec
mov
loopne
xchg
cmp
xchg
or
test
add
cltd
jg
ja
dec
dec
dec
hlt
and
sbb
rolb
addr16
sti
mov
push
call
faddl
loope
xor
xchg
add
bound
call
lock
pusha
mov
mov
mov
out
xor
cmpb
jae
mov
addr16
add
inc
sub
jp
mov
mov
mov
lahf
sub
dec
loop
movlhps
test
mov
cmp
inc
insb
cmp
adc
ror
movsb
ds
sbb
push
iret
xchg
test
xor
inc
xchg
into
fs
nop
xchg
jge
cld
div
add
sbb
mov
decl
fcomp
sbb
sbb
add
adcb
cmp
push
or
pop
jg
mov
pop
repnz
ret
imulb
test
cmpl
stos
daa
mov
ds
mov
dec
aas
rclb
leave
lock
loopne
or
or
pop
popa
test
mov
sbb
xor
add
bound
imul
in
mov
cld
out
jl,pt
aas
icebp
mov
pop
or
andb
add
xor
push
inc
hlt
mov
push
movsl
inc
out
sub
leave
insl
sbb
sub
dec
mov
aas
pop
push
sbb
pop
adc
sub
xchg
push
fldl
cmp
inc
mov
sub
fs
in
push
sub
aad
pop
sub
push
xchg
int
enter
rolb
xchg
cltd
inc
inc
add
shr
or
add
xor
inc
mov
sbb
int3
inc
pop
jne
repnz
mov
ret
push
xchg
mov
cwtl
xchg
mov
cs
cmc
int3
fldt
test
scas
mov
outsb
std
mov
or
call
jnp
cli
fsub
adc
xchg
cs
insl
adc
lock
mov
jbe
sarl
inc
repnz
insb
shll
cmpl
movsl
push
jecxz
lods
inc
aad
cmc
xchg
and
enter
adc
mov
or
cmpb
stc
popf
pushf
popa
jg
into
sbb
shl
sub
cmp
or
shl
add
push
stc
das
inc
pushf
js
mov
xor
and
cld
push
iret
js
mov
inc
ljmp
jg
fimuls
sub
dec
movsl
pop
sub
pop
jae
mov
pop
out
shl
push
adc
add
xchg
mov
shrb
jmp
and
adc
push
mov
mov
or
aam
inc
mov
add
lock
sbb
fsubrs
js
scas
mov
jmp
xlat
jns
mov
jns
mov
std
je
outsl
repz
or
popa
jbe
scas
out
out
stos
mov
xchg
adc
shll
mov
add
xchg
in
lods
mov
push
mov
fsub
mov
mov
cli
inc
ret
frstor
aam
dec
pop
stos
cmp
xchg
push
or
jns
dec
sub
push
mov
push
in
inc
cmp
scas
pop
adcl
sbb
and
jb
std
push
addr16
adc
mov
jns
cmp
lret
xor
inc
mov
jl
dec
clc
adc
adcl
push
testb
xor
call
insl
push
mov
in
jecxz
xchg
fwait
push
mov
outsb
and
mov
inc
loop
and
out
cs
and
or
ret
push
mov
add
add
xor
push
in
insl
fwait
add
cli
cwtl
andb
call
add
jne
mov
add
daa
pop
ret
int3
icebp
aad
enter
mov
xorb
leave
cmpsl
pop
sahf
add
into
loop
pusha
daa
sub
jbe
push
mov
jo
jl
mov
int
outsl
add
pop
mov
shrl
jo
fistpll
ficomps
ret
clc
xor
cmp
scas
sbb
pop
popa
xchg
inc
stc
arpl
dec
pop
or
push
pusha
sbb
imul
mov
mov
lret
dec
cmpsl
dec
jecxz
mov
sub
xchg
dec
mov
xchg
push
jle
sub
xchg
outsl
int3
dec
add
mov
fsubl
filds
pop
dec
ret
cmpsb
pop
dec
adc
ss
mov
enter
sbb
pop
jl
push
xchg
pop
push
inc
xlat
cmc
shlb
jp
or
sub
cli
mov
stos
sbb
mov
arpl
fs
add
sarl
dec
imull
in
call
fwait
int
add
popa
out
push
jl
iret
push
sbb
cwtl
mov
sbb
pushf
jne
out
mov
sub
adcl
test
mov
inc
movsl
sbb
cs
adc
xchg
push
mov
lcall
mov
rcll
xor
clc
loopne
mov
movsl
mov
inc
data16
sub
mov
ret
popa
mov
mov
hlt
mov
xor
ja
add
retw
cmp
jecxz
fmul
push
rclb
xchg
lret
mov
fcomps
in
xchg
mov
movsb
push
movsl
jge
ret
sbb
xchg
mov
enter
out
lret
and
roll
push
into
push
fsts
sub
test
ljmp
push
pop
pop
or
xchg
mov
mov
das
add
clc
cwtl
jg
or
pushf
cmp
repz
repz
testl
sarb
mov
andb
loop
push
cmp
inc
pop
call
cmp
cmp
incl
and
loop
xchg
nop
xor
add
inc
stc
lcall
fidivrl
into
icebp
dec
or
cmp
pop
popa
inc
mov
push
mov
mov
mov
adc
mov
test
dec
jle
mov
or
hlt
shll
dec
mov
orb
lret
add
enter
inc
hlt
les
sbb
cld
xchg
xchg
repnz
fistpl
outsl
popa
pop
lret
or
jb
fistpll
xor
sub
in
sub
jnp
es
sbb
xor
or
cli
mov
xchg
loopne
shl
data16
clc
inc
sub
cmpsl
add
leave
mov
inc
add
aaa
pop
test
jg
ja
imul
nop
or
in
lcall
dec
inc
iret
jbe
push
nop
jno
int
mov
lods
jno
lahf
jns
cwtl
fcomps
fwait
add
hlt
sbb
sub
cmp
sbb
jecxz
fs
jnp
lock
fwait
push
xchg
inc
adc
sbb
xor
pushf
xor
push
cmpsl
lahf
pop
nop
push
pushf
sbb
xor
dec
out
jbe
mov
jo
hlt
jl
int3
xchg
or
push
pop
mov
loope
dec
ljmp
repnz
imull
rcr
cwtl
pop
mov
cmp
cmp
cmpsl
jo
fcomps
aad
mov
or
gs
fld
stc
into
adcb
scas
shrb
sbb
fcoms
call
cmc
loope
addb
cs
cmc
pop
adc
dec
pusha
popf
mov
mov
sub
aas
push
rolb
lds
idivl
lahf
not
jp
data16
fmuls
jl
push
das
sti
movsb
jge
pop
mov
dec
jae
jns
push
and
jecxz
ljmp
cltd
sbb
push
cmp
mov
dec
adc
pop
stos
jb
out
cmp
cli
jl
je
das
jns
inc
dec
stos
pop
cmp
mov
iret
int
push
add
fistps
mov
gs
cmp
add
xchg
test
scas
xor
xchg
mov
into
aam
mov
lcall
sti
mov
add
loope
arpl
int
cmp
dec
push
aas
inc
jp
xorl
in
mov
jnp
pop
cmp
aam
or
call
mov
inc
stos
jg
sub
hlt
daa
sub
pop
lahf
gs
pusha
xchg
inc
sub
testb
out
inc
mov
orl
jmp
sbb
movsb
aas
orl
repnz
aas
dec
sahf
and
xor
shlb
jbe
inc
cmp
and
cmc
mov
push
cmpsb
lea
jnp
movsl
shrb
sbb
mov
xchg
cltd
inc
rorb
out
mov
dec
ret
arpl
mov
sub
jmp
call
stos
and
xor
xor
pop
push
push
js
fwait
adc
fisttps
lock
dec
pop
jge
ret
popf
repz
push
mov
sbb
pop
ret
test
fcomi
scas
dec
aaa
cmp
cmpsb
jb
call
dec
xor
gs
insl
push
pusha
out
sbbb
xor
or
sarl
jbe
lcall
aam
sbb
arpl
ret
and
jge
dec
cwtl
addr16
pushl
rorb
jns
adc
daa
pop
jno
in
inc
aad
mov
or
rcl
gs
inc
mov
and
ljmp
jle
xchg
rorl
jno
jg
cwtl
out
sbb
notl
test
pop
or
dec
jecxz
divb
es
outsb
sbb
xchg
es
mov
dec
sbb
lds
rorl
inc
shlb
subl
insl
shrb
dec
lret
arpl
push
xor
test
cli
inc
fsubr
pop
jl
inc
and
inc
mov
pop
mov
sbbb
lea
inc
push
stos
popf
lret
movsb
loop
std
cli
xlat
std
mov
cli
rclb
fxtract
mov
sahf
push
in
mov
push
cmc
mov
and
arpl
sub
jge
adc
ret
cmp
lret
dec
hlt
nop
mov
push
pop
stos
adc
ret
jae
mov
or
mov
pop
aaa
inc
bnd
imul
aad
mov
cld
cmp
push
mov
ret
jl
jne
or
aad
lahf
shll
into
cmc
push
and
adc
enter
jae
xlat
sub
lret
xor
pop
add
push
jnp
push
xor
sub
sub
mov
xchg
test
mov
rcrl
subb
lods
pushf
lods
push
test
xchg
adc
xor
inc
or
loopne
push
andl
cmp
mov
ss
pushf
cld
imul
movsl
mov
push
scas
sbb
jg
add
cwtl
jnp
sbb
inc
xor
lret
sub
push
sub
jge
sub
or
cmpsl
pop
pop
xchg
or
lret
lock
test
add
mov
cmp
jl
in
enter
jae
inc
mov
ret
addb
fs
xchg
aaa
bound
mov
jb
pop
addr16
push
xor
add
inc
inc
jmp
and
pcmpeqw
inc
jbe
or
int
adc
dec
dec
leave
push
jl
sbb
in
pushf
ja
idivl
stc
lret
lret
jmp
push
cwtl
sub
mov
sub
lock
aaa
aam
int3
xchg
mov
xchg
pop
mov
aas
adc
add
lret
gs
push
test
pop
xorb
fstl
call
pop
xchg
rolb
movsb
call
sub
dec
mov
push
mov
inc
in
out
ljmp
push
imul
cmpsb
scas
pop
xchg
test
pop
inc
pop
imull
cmp
mov
cltd
sub
cld
ja
outsl
xchg
inc
and
adc
xchg
or
push
sarl
cmpsb
test
popf
dec
scas
jb
mov
sbb
nop
mov
leave
inc
je
mov
leave
std
or
and
pop
ds
sti
push
mov
loope
dec
push
push
testb
popa
jge
outsl
adc
loope
sub
xchg
push
adc
jae
mov
xchg
and
inc
mov
jne
or
add
or
sbb
in
mov
xor
dec
cli
aam
popa
jmp
in
cmp
cmp
imulb
push
pop
setno
out
icebp
test
cmovns
pushf
fbstp
dec
mov
inc
mov
or
jbe
fwait
cmp
ret
jle
adc
cmp
or
add
cmp
dec
cmp
pop
sbb
mov
xchg
cwtl
xorl
rorb
sub
jb
and
call
gs
sbb
mov
les
aaa
sbb
mov
bound
stos
mov
and
mov
sub
stc
stc
mov
adc
or
popf
jge
ja
jnp
push
cwtl
sahf
lret
sbb
int3
dec
jbe
push
jb
out
push
hlt
sbb
or
int3
outsl
lcall
push
movsb
notb
inc
inc
dec
test
les
adc
aas
testl
jmp
jns
or
jmp
repz
push
stos
mov
jae
pop
lods
loop
pop
lret
mov
fs
sub
cwtl
jg
mov
cs
add
ret
int
lret
add
mov
icebp
out
mov
cli
fs
jbe
lcall
mov
mov
cmc
fisubrs
repnz
push
pop
adc
jge
mov
inc
enter
das
ss
lahf
addr16
shl
or
sbb
cmc
push
dec
add
leave
push
iret
andb
bound
jno
ss
fwait
cmp
mov
push
inc
icebp
push
mov
out
jae
out
loopne
cmp
clc
mov
aam
cmp
sbb
jo
stos
push
cmpsb
addl
rol
lahf
loop
xchg
and
fstpl
jecxz
jbe
mov
call
insb
enter
hlt
xor
nop
xor
mov
inc
lcall
int3
fwait
push
int
stos
cmpsb
inc
outsb
int
stos
lea
repz
cmpsb
adc
pop
scas
stc
loop
test
repz
imul
call
fcompl
out
pop
pop
or
cld
mov
sub
addl
imull
push
pop
fwait
push
ljmp
inc
loopne
jbe
fstps
mov
lods
ret
mov
in
inc
imul
jae
xor
lret
or
jmp
mov
fildl
pop
pop
push
cmp
out
nop
int3
mov
push
insb
imul
jno
sub
jbe
mov
adc
xor
jne
inc
pop
rorb
call
push
xcrypt-ofb
cmpsl
out
mov
iret
shrb
cmp
push
push
cmpsl
pop
jge
lods
mov
or
aaa
xchg
xor
in
mov
pusha
lds
sub
in
das
in
mov
push
in
pop
mov
adc
call
mov
mov
rorl
xchg
cltd
cmc
sahf
sbb
fcmovnbe
lcall
cmp
outsl
into
stos
nop
or
stos
lea
test
or
sbb
fs
jb
jbe
insl
and
fstl
adc
cli
add
xchg
cmp
jb
mov
movsb
sub
call
jp
push
push
jmp
in
jo
push
repz
imul
sbb
mov
les
into
shrl
int3
fs
aad
and
push
push
add
pop
sub
aam
icebp
mov
cmp
rorl
push
test
adc
pop
daa
nop
lea
inc
hlt
outsb
testl
sbb
jmp
xor
jg
mov
xchg
inc
loope
sub
push
xchg
mov
fistps
jo
mov
cmp
push
cmp
mov
dec
or
lcall
jmp
lea
lods
mov
dec
movsb
mov
clc
and
cmpsb
movsl
jmp
ret
dec
dec
imul
xor
sub
mov
rol
mov
fmul
mov
rolb
ss
test
pop
cmp
adc
sbb
dec
addr16
jecxz
addr16
repz
xor
inc
pop
jmp
mov
call
repnz
pop
inc
mov
imul
push
push
xchg
ficompl
stos
mov
outsb
mov
test
dec
push
pop
aam
cli
stos
jg
repz
leave
ja
mov
xor
sarb
je
mov
in
call
test
pop
cmp
adc
aas
cmp
push
push
out
cmp
pop
pop
and
dec
add
sub
data16
inc
jg
shl
ja
es
and
push
xchg
jp
cmp
pop
fst
test
data16
cmp
cmp
jnp
mov
mov
outsb
cli
xchg
jmp
stos
dec
and
imul
mov
fnstsw
adc
out
inc
mov
fimull
mov
insl
test
and
and
test
mov
jae
jnp
inc
and
fcmove
push
jne
xchg
pop
scas
push
mov
push
sbb
jno
xor
test
adc
xchg
sti
lock
adc
js
mov
add
daa
insl
xchg
cmp
aas
and
pop
fwait
andb
adc
add
mov
push
aam
imul
cs
adc
shr
adc
xchg
cmp
enter
mov
xchg
or
mov
push
pop
repnz
and
fwait
dec
and
and
push
std
inc
and
outsb
fadds
sbb
daa
lret
aam
xabort
push
xor
addr16
inc
out
jnp
dec
sbb
aad
or
popa
cmp
jg
dec
aad
mov
adc
test
sub
xor
filds
push
or
repz
lret
or
mov
sub
xchg
xlat
ret
mov
icebp
daa
ficompl
push
push
stos
mov
cmc
repnz
or
in
add
mov
cmp
cmpsl
jmp
and
dec
pop
repz
fidivl
mov
ficomps
jecxz
gs
xor
das
adc
pop
int3
xor
mov
in
into
xorl
mov
push
cmp
fisubrs
mov
adc
repnz
sbb
jp
dec
sub
sarl
stc
adc
rolb
sti
cmc
jns
mov
sbb
mov
iret
xchg
mov
arpl
mov
fldl
add
jnp
inc
xor
adc
test
cmp
push
testl
ret
cmp
dec
xchg
test
mov
sub
push
popa
jp
push
daa
movsb
bound
enter
sub
or
mov
push
mov
jg
pushf
sbb
fisubs
inc
std
sarb
adc
push
cmp
inc
mov
dec
jns
cmp
xor
push
sbb
insl
loopne
xor
inc
mov
jmp
mov
loopne
xchg
mov
testl
call
mov
shl
jo
outsl
movsl
scas
ret
repz
push
outsb
stos
dec
imul
add
call
cmpsl
lods
push
mov
call
xor
cwtl
and
lret
in
cmpsl
in
lea
pop
repnz
dec
mov
nop
shr
jle
fucom
popf
xor
loopne
pusha
add
mov
adc
cmp
movsb
mov
cmp
xchg
adc
loopne
stc
insb
mov
dec
outsb
out
lods
mov
push
shrb
ja
cmp
mov
fistpl
sbb
mov
in
outsl
push
push
fwait
sub
in
mov
gs
adc
out
gs
int
lods
inc
sub
jno
push
iret
lds
cmp
imul
add
jnp
stos
rorb
jl
cmpsl
push
mov
insl
test
fsubs
adc
sahf
xchg
out
xor
and
mov
or
sub
int
out
cmp
nop
nop
sbb
xchg
jnp
test
pop
out
or
fldln2
int
scas
dec
jle
mov
sub
push
addr16
scas
not
dec
jle
lock
stc
push
push
dec
mov
cmp
fstl
jge
lock
xlat
and
xor
and
into
lret
sub
pop
std
push
lret
clc
lock
outsb
outsl
or
jecxz
bnd
aad
push
jmp
mov
push
cld
cwtl
stos
outsl
jne
mov
cs
xchg
push
addr16
push
inc
bound
sub
ss
or
das
mov
ds
or
aaa
lret
pushf
int3
mov
clc
dec
stos
mov
inc
adc
and
fcoml
inc
idivl
lcall
adc
cmc
sbbb
adc
lods
fmull
dec
push
ljmp
insl
subl
mov
xorb
stc
stos
xchg
mov
pop
hlt
gs
out
xchg
sub
sub
cmp
fwait
jno
and
xchg
out
ljmp
fdivrl
loop
adc
sub
mov
fidivrl
mov
pushf
lcall
mov
jne
int
push
cmpsl
mov
xchg
and
subps
cmpsb
test
imul
xor
pop
dec
pusha
in
xchg
push
jo
imul
mov
cmp
fwait
or
and
lea
pinsrw
ja
xchg
outsl
out
mov
imul
loope
dec
fldl2t
sub
adc
ds
mov
lds
push
or
dec
cmp
shlb
push
cwtl
jnp
push
call
xchg
call
lock
pop
inc
push
and
jae
jae
outsb
or
push
call
pop
adc
jl
sub
jmp
ret
fnstenv
clc
repz
mov
xor
xor
push
sbb
jle
stc
sbb
fwait
add
push
add
or
cmp
mov
xor
ret
jle
stc
int
add
popf
sti
pop
repz
les
push
jle
jl
ljmp
cmpsb
xlat
test
aam
jge
shrl
cmp
or
fnsave
enter
imul
and
sarl
test
dec
cld
imul
test
shlb
out
push
test
sbb
cmp
aas
dec
cltd
test
pop
vpaddd
insb
mov
adc
imul
lods
in
negb
icebp
add
movsl
pop
or
movsl
outsb
mov
mov
pusha
adc
ja
mov
dec
inc
movsb
inc
std
icebp
push
or
mov
test
push
sahf
js
jmp
in
jns
sbb
mov
add
out
in
lock
adc
hlt
stos
push
inc
cli
lds
fnstenv
xchg
das
popa
push
dec
test
inc
dec
push
out
mov
clc
add
jae
mov
cmp
mov
mov
dec
inc
lcall
lds
popa
sarl
cmp
cmp
pop
inc
xor
fistpl
aam
pushf
fsubp
lods
add
stos
dec
insb
add
mov
movsb
xchg
repz
lock
or
sar
add
int
xchg
xchg
and
push
imull
mov
cltd
pop
iret
push
loope
and
xchg
push
or
outsb
arpl
cmp
jbe
ds
jbe
or
pop
loope
push
int3
jns
mov
sub
jnp
sub
cli
orl
and
push
lcall
mov
mov
mov
mov
and
add
push
rcrl
mov
cs
xor
add
hlt
dec
adc
je
add
sarl
push
pop
testb
sarl
shr
test
cmp
lret
icebp
icebp
bound
data16
testl
mov
jle
in
rol
add
int3
xchg
and
adcb
je
fcoms
nop
scas
sbb
pop
repz
sbb
sub
dec
xchg
leave
or
mov
inc
popf
push
pop
push
dec
repnz
jp
inc
pop
jne
fidivrs
stos
je
or
or
ret
imul
dec
jge
loopne
rcl
adc
out
push
mov
ret
repz
rcr
mov
pop
cmp
and
push
pushf
cmp
arpl
insl
sub
inc
loopne
repnz
xchg
jb
sub
add
rorb
fadds
mov
mov
ret
dec
sbb
pusha
dec
das
dec
cmp
pop
mov
out
lea
imul
cmpsb
mov
bnd
ja
lret
cmp
sub
mov
sub
scas
jle
pop
pop
fistpl
and
jl
movsl
lret
imul
push
mov
or
rclb
sahf
jmp
mov
or
xchg
mov
dec
push
or
or
ret
xchg
xchg
fldenv
cs
jp
loop
mov
xchg
rcl
cmpsl
adc
fcomps
cmp
shrl
lock
sarl
jbe
test
jo
jge
aaa
bound
jecxz
mov
in
jae
scas
cwtl
pop
aas
ds
xor
sub
xlat
imul
pop
add
jbe
fwait
jo
mov
add
or
mov
decl
mov
out
pop
push
cmp
add
xor
sbb
inc
cwtl
mov
or
sbb
or
loope
in
mull
out
lods
push
push
push
testb
es
imul
adc
enter
mov
jge
in
lock
out
push
inc
adc
or
lock
test
push
data16
jmp
cmp
daa
xor
push
or
fwait
jno
insl
es
pop
sbb
sub
fisubs
nop
xchg
mov
stos
les
lods
add
std
das
test
pop
dec
in
cltd
arpl
sbb
mov
sbb
ljmp
xlat
mov
fwait
orl
add
jo
inc
or
xchg
inc
jle
jno
adc
dec
je
sub
lret
in
pop
cmp
inc
jl
xchg
jle
mov
push
jle
imul
ds
add
sbb
cltd
xchg
loopne
mov
ficoml
or
xor
jl
xchg
add
loopne
adc
push
sti
xlat
ds
adc
sahf
pop
sbb
lea
and
les
push
dec
jae
mov
or
xchg
cmpb
test
fiadds
push
pop
aad
test
xor
xor
xchg
mov
sbb
loopne
rorb
mov
call
jecxz
mov
mov
outsl
cmp
sub
int3
out
mov
dec
lds
jg
pop
mov
lds
xchg
not
sbb
mov
sub
js
xor
bound
cmp
int
enter
mov
pop
aaa
in
test
inc
dec
testb
push
test
es
xor
pop
or
in
pop
mov
adc
inc
das
test
lea
mov
push
add
and
lods
cwtl
push
add
aas
sbb
xchg
mov
push
inc
xchg
lods
mov
xchg
mov
insb
push
pop
sub
pop
xchg
stos
pop
jecxz
pushf
in
sbb
mov
je
or
call
push
pop
or
mov
fsubrl
jnp
test
or
popa
popf
dec
sbb
xor
sbb
movsb
dec
imul
mov
out
mov
data16
stos
dec
iret
xchg
movsb
mov
add
test
push
sbb
aam
or
popl
aaa
or
dec
or
push
mov
sarb
sbb
cld
lahf
fdivs
lahf
push
adc
int3
ret
jns
cmpsl
ret
xlat
mov
dec
dec
out
push
out
xor
sub
mov
mov
xor
movsl
dec
sub
pusha
rolb
out
sub
mov
cmp
jnp
cwtl
xchg
out
pop
hlt
mov
movsb
pushw
stos
mov
std
call
incb
cmp
movsb
subl
push
addr16
inc
ret
int
sbb
test
mov
aam
fisubs
lret
psubsb
cmc
or
or
adc
cltd
fcmovnbe
mov
sub
out
rclb
sbb
in
inc
stos
or
int3
imul
pop
push
jp
outsl
mov
cltd
cmpsl
ficomps
dec
rolb
es
mov
aaa
int3
push
mov
and
mov
and
cld
out
pop
stos
jp
dec
mov
mov
pop
js
add
and
insb
fwait
and
add
out
out
jnp
out
jo
mov
mov
xor
pop
sbb
push
fs
out
xor
jnp
je
int3
lret
xchg
jmp
aas
pushf
push
add
push
fstpt
pop
nopl
cmp
lods
fbld
jae
aas
dec
inc
pop
push
cmp
pop
jo
jne
lahf
push
sub
pop
or
inc
dec
sub
repnz
pop
icebp
ret
add
leave
inc
adc
stos
iret
mov
and
add
fs
mov
addl
cmp
jo
sbb
lcall
add
out
dec
aaa
popa
pop
adc
jo
jns
es
bound
rcl
fdivl
int3
mov
outsb
cmpsb
mov
dec
cld
push
xchg
or
and
loope
out
xchg
or
sbb
mov
les
xlat
push
jl
jge
mov
in
loopne
hlt
adc
dec
jno
mov
shll
jecxz
sub
jge
sub
and
adc
sbb
loop
push
in
pushf
mov
lret
add
mov
leave
pop
cltd
jg
mov
data16
mov
jmp
lods
out
arpl
or
fldl
out
add
movsl
imul
push
inc
xor
es
push
rcrl
repz
xchg
jp
inc
jb
cmp
push
cmp
push
jmp
rclb
sti
mov
inc
in
filds
push
jle
cmpsl
insl
stc
les
push
pushl
outsb
jge
call
inc
jno
and
xchg
inc
pop
mov
mov
or
mov
sahf
jb
lea
mov
aaa
cmpsl
mov
xchg
mov
push
in
pop
leave
clc
add
cmpsb
cwtl
fstpl
lcall
call
fistpll
jge
fdivl
fsts
pop
scas
and
lds
jl
cmp
add
xor
pop
mov
movsl
int3
lds
scas
je
cltd
pusha
sub
clc
rorl
out
xchg
pop
xor
cmp
add
int3
adc
popa
mov
pop
adc
arpl
lea
out
sbb
adc
movsl
mov
mov
cmp
mov
add
testl
sbb
dec
mov
fistps
pop
mov
push
cmpsl
pop
pop
das
aam
push
ficoms
test
push
add
in
mov
lea
fstps
mov
xorb
popf
int
rcr
jp
inc
mov
je
jmp
inc
cmpsb
ret
movsb
outsl
and
neg
adc
ja
pop
adc
cmp
cmpsb
negl
movsb
adc
inc
xor
add
scas
or
loope
out
fwait
lahf
dec
lret
rcrl
mov
and
sub
cwtl
pop
imul
ds
mov
lcall
ret
lret
push
adc
loopne
outsb
pop
xchg
xchg
ja
push
fcmovnbe
sbb
outsl
test
xor
cmc
clc
push
pusha
or
push
push
sub
inc
mov
push
in
leave
dec
cli
or
addr16
hlt
xor
out
inc
sub
aas
lock
sbb
adc
xchg
pushf
pop
inc
add
imul
xor
and
xorb
orl
and
daa
mov
jl
xor
push
cmp
ret
pusha
rol
test
lahf
lret
sub
pop
loop
in
mov
out
loopne
mov
div
ds
or
mov
lret
xor
mov
jbe
push
mov
shrb
xchg
push
sub
cmp
inc
dec
cmp
xchg
cmp
push
pusha
and
shlb
test
dec
pop
std
repz
mov
cmp
test
inc
std
cld
dec
popa
cmpsb
jne
lahf
sub
test
mov
mov
cmpsl
fwait
sub
mov
mov
outsb
fisubrs
and
adc
fistpll
es
addb
in
test
into
push
jnp
xchg
pop
sbb
pop
bound
pop
mov
dec
mov
daa
jae
push
movsl
testb
test
push
push
cmp
fsubs
xor
inc
sub
lods
clc
mov
fwait
ljmp
jmp
fwait
adc
jno
jp
aaa
mov
adc
dec
or
out
out
xchg
inc
in
sub
loop
xor
adc
stos
adc
xor
mov
jo
cltd
imul
push
test
inc
push
test
adc
adc
pusha
push
mov
fldl
mov
mov
ficompl
jb
pop
cs
pusha
addr16
jns
dec
xchg
and
js
fistpl
jl
push
sub
daa
xor
push
mov
jne
scas
into
dec
or
lret
in
jo
stos
cmpb
mov
mull
test
push
lds
cmpl
sub
pop
mov
push
or
or
mov
daa
mov
push
ret
aaa
iret
daa
cli
xor
xor
mov
inc
adc
je
ret
push
call
lds
push
lret
out
mov
fistpl
les
cmpsb
int
mov
lcall
ret
mov
ja
and
add
out
or
sub
cmp
frstor
shll
sub
movsb
and
clc
push
stc
lods
dec
insb
and
out
pusha
lock
or
sub
outsl
sub
lds
push
adc
fistpll
or
jns
inc
das
lds
loopne
lods
aaa
in
std
bnd
lea
in
imul
xchg
sbb
lea
push
stc
sub
mov
cli
out
xchg
insb
sarb
cmp
call
fwait
sbb
bound
push
iret
sub
sub
out
repz
or
xlat
data16
mov
and
xor
insl
daa
sbb
pop
in
nop
in
in
xchg
xlat
test
insl
adc
hlt
pusha
lret
sbb
add
pusha
decb
jge
nop
cmp
cmp
adc
cltd
mov
ss
fimull
ss
mov
pop
fdivs
mov
jbe
lea
xor
mov
lahf
stos
adc
mov
testl
mov
mov
sbb
sar
sbb
insb
insb
leave
shlb
cmpsb
in
subl
sub
sbb
test
mov
xor
jnp
in
mov
xorl
add
aaa
test
push
cwtl
jbe
mov
inc
scas
imul
or
dec
mov
call
das
jl
or
push
push
lahf
sub
xor
jns
or
or
loopne
mov
xchg
gs
in
loope
xchg
scas
push
push
mov
jmp
add
dec
fidivrs
push
lea
fs
jno
je
jae
inc
push
sahf
mov
mov
pop
stos
dec
lret
inc
insb
mov
mov
push
xchg
test
mov
arpl
adc
bound
int
jmp
mov
inc
in
movsl
in
mov
mov
loop
and
and
xor
daa
dec
loope
rol
mov
adc
xor
popl
mov
imul
xor
cmc
pop
call
sub
sub
movsl
mov
lcall
jbe
fidivrl
pop
in
ss
and
pop
add
out
push
pop
and
mov
leave
fsubp
dec
sub
xchg
mov
jg
clc
inc
dec
stos
xchg
adc
cltd
fcompl
mov
es
add
xchg
mov
or
es
call
clc
xchg
mov
pop
lods
push
or
in
mov
testl
push
adc
xchg
idivl
add
leave
lods
mov
std
mov
push
mov
fldpi
sbb
data16
and
jge
xor
cwtl
neg
pop
push
or
fstp
inc
pop
mov
jb
xchg
test
ret
jg
leave
jo
or
fisttps
or
sbbb
xchg
notb
scas
jg
push
mov
cmp
shrb
xlat
stos
pop
mov
imulb
fisttpl
jne
cmpl
imul
lahf
adc
cmc
rcrl
sbb
movsb
add
inc
xchg
jl
shll
call
aam
xor
imul
sub
fwait
imul
add
lret
add
sub
xor
test
mov
iret
push
andl
add
push
maskmovq
pop
cmp
sbb
xor
outsb
or
lock
dec
add
jo
jecxz
sub
mov
push
cwtl
push
push
mov
add
psrad
clc
push
jo
lock
outsb
aam
and
out
stc
mov
pop
mov
inc
fnsave
inc
cli
push
or
xor
cwtl
mov
data16
inc
pop
cmp
xor
rep
and
jecxz
pop
mov
cmpsl
xchg
push
fwait
ljmp
mov
inc
push
cmp
or
rcrl
mov
icebp
js
dec
negl
cmp
iret
cmc
inc
ds
inc
push
aam
dec
inc
int
arpl
push
cmp
cmp
sub
mov
push
cmovno
pop
dec
inc
andb
lods
jge
dec
add
cmp
sbbb
jnp
outsl
mov
push
cld
cmp
push
cltd
mov
lods
adc
imul
je
popa
fyl2x
ljmp
cltd
mov
push
sbb
and
mov
inc
insl
int3
pop
xor
push
je
mov
push
pand
cmp
mov
orl
lods
push
push
fucomi
insb
std
mov
ds
push
and
scas
mov
dec
iret
jmp
fwait
jecxz
rorl
ljmp
andb
or
xchg
mov
or
pop
sub
fwait
rorb
dec
jno
insl
ja
out
imul
addl
clc
and
shl
sti
jmp
mov
lea
out
int
lcall
loop
xchg
push
fstl
jecxz
xor
js
loope
repnz
mov
xchg
sub
jns
jo
dec
fcompl
orl
aaa
xchg
out
add
sbb
lea
fistpl
dec
jne
push
mov
or
rcr
xor
cmc
or
arpl
out
lret
pop
negl
cmp
movsl
test
mov
xchg
xchg
jns
cltd
mov
mov
xor
push
push
lods
es
les
mov
outsl
not
xor
imul
xlat
repnz
mov
in
add
add
cltd
lods
pop
into
mov
jl
add
jne
data16
push
pop
mov
cmp
mov
jp
movups
pop
mov
or
lret
aas
push
mov
mov
idivb
ss
pop
fdivrl
mov
and
mov
pop
mov
jg
mov
add
cmp
insl
cmpsb
or
jnp
std
sub
lret
sbb
mov
icebp
stc
test
mov
lds
cmp
clc
addr16
xchg
leave
cmc
popf
add
and
sub
xchg
rcr
pushf
sar
mov
ja
inc
inc
ss
inc
xor
test
adc
stos
lahf
rcrb
cmp
pop
gs
push
mov
gs
rcll
adc
pushf
lea
mov
xor
scas
in
js
jmp
movq
popf
jp
xchg
jbe
inc
sub
popa
mov
repnz
push
cmp
push
push
subb
fisubrl
jge
xor
sbb
addr16
movsb
sub
adc
test
mov
arpl
xchg
das
inc
test
in
shlb
inc
hlt
cltd
push
and
pop
ret
xor
pop
add
or
adc
jo
je
mov
or
shll
mov
jecxz
fstps
insl
push
sarb
mov
cld
or
jae
iret
add
loop
jl
subb
int3
cld
sti
sub
push
fists
pop
dec
cwtl
stc
sti
inc
gs
fnstsw
xor
add
dec
int
icebp
dec
sar
sti
fistpl
mov
sbb
xchg
inc
scas
das
pop
jns
jmp
jecxz
das
neg
jne
mov
cmp
fcmovu
sub
ljmp
mov
fsts
ret
xchg
lea
aaa
cmp
popa
je
aam
sbb
rcrb
add
and
sub
leave
stos
enter
aaa
test
mov
leave
popf
sbb
pop
mov
insb
call
and
adc
sub
cli
or
popf
sahf
pop
add
mov
call
mov
mov
ja
push
sarl
mov
cmpsl
insl
fldenv
adc
jo
std
dec
push
sub
insb
cmovp
cli
mov
aaa
lods
inc
mov
adc
aaa
xchg
add
mov
in
or
inc
rcrb
movsb
pop
sbb
movb
and
daa
pushf
dec
fnstenv
mov
shll
fcmove
inc
outsl
mull
outsl
sbb
and
das
lods
fisubl
jge
les
push
sarb
int
sbb
xchg
dec
cmp
sbb
outsb
ljmp
mov
sarb
pushaw
or
xor
xchg
stos
mov
sbb
push
fucomip
push
pop
ror
add
inc
imul
ds
outsb
stos
inc
popa
jns
jo
push
sbb
mov
sub
jmp
arpl
sbb
insl
dec
mov
inc
jle
sahf
fbld
cmp
and
sub
mov
mov
sub
insl
inc
and
stos
aad
push
fwait
mov
shlb
hlt
fidivs
sub
repz
add
add
fs
mov
push
push
sbb
dec
mov
shrl
push
outsb
adc
mov
cmp
stc
push
sub
jge
dec
and
outsb
sbb
mov
and
jl
test
iret
shr
out
mov
sub
push
xor
repnz
xor
ljmp
xchg
adc
fisubl
mov
out
scas
mov
inc
sbbb
lea
cmp
loop
bound
sub
push
mov
scas
les
pop
mov
sbb
push
add
or
sub
xor
push
mov
insb
divb
and
xlat
in
sbb
andl
fistps
push
jle
fldt
enter
popf
mov
sub
push
mov
fld
fldcw
pop
push
ljmp
mov
test
stos
inc
dec
and
lock
cmpsl
adc
add
cmp
mov
xor
shll
dec
cmp
dec
push
mov
adc
ss
in
add
fdiv
dec
mov
cmp
add
scas
enter
inc
cmp
shrb
pop
movsl
sub
sub
addl
inc
sub
sbb
mov
or
adc
ss
nop
push
jo
cmp
dec
xchg
fcmovnb
cmp
ret
pop
and
lahf
xchg
imul
cmp
loope
js
mov
fwait
nop
dec
fnstenv
and
mov
lds
in
imul
stos
mov
sub
pop
push
sbb
stos
cmp
pusha
cwtl
imul
dec
mov
jno
push
sub
adc
push
das
testl
enter
adcl
jge
ss
push
push
adc
add
jb
loope
adc
jb
imul
adc
jmp
and
pop
sbb
mov
mov
dec
fcoms
cld
mov
and
loopne
or
pop
cmp
xlat
mov
fs
cli
mov
mov
and
in
inc
insl
or
cmp
cmc
scas
jle
data16
sub
in
repz
leave
icebp
add
mov
fwait
call
iret
sub
negb
iret
in
arpl
and
adc
pop
or
scas
test
dec
cmp
pop
shll
fcomps
scas
jb
or
dec
add
push
imul
sub
out
pop
adc
rolb
inc
and
xlat
adcb
loope
push
in
pop
dec
test
repz
movsl
popf
fcomps
mov
xchg
cli
sub
clc
dec
push
jmp
aaa
sbbb
scas
mov
cltd
and
push
data16
in
in
lret
das
shll
sbb
mov
add
cmp
mov
insl
sahf
jecxz
stos
push
pop
les
or
xor
mov
lahf
and
test
push
cli
xchg
pop
mov
cltd
std
mov
push
jmp
xchg
stc
adc
jmp
les
popa
shrl
xor
sub
push
push
dec
cwtl
xchg
cld
subps
std
sub
pushf
jbe
int3
pop
xchg
scas
out
push
xor
xchg
lret
rclb
int
daa
ja
mov
aaa
ss
in
dec
dec
out
add
enter
dec
test
push
nop
cwtl
jno
lds
aas
pusha
loopne
aas
pop
mov
movsb
xchg
mov
xor
jg
fucom
jmp
or
mov
adc
mov
cmp
sub
das
out
xchg
cmp
pop
imul
and
mov
pop
popf
jb
arpl
xor
pop
gs
stos
pop
cmp
or
sub
and
inc
and
stc
pop
jmp
cltd
loope
xchg
jns
add
xchg
jecxz
xchg
mov
js
cmp
sbb
lds
cmp
cmp
and
rcrl
rclb
rep
jo
inc
lcall
fiaddl
lcall
cwtl
daa
xchg
and
add
imul
je
xchg
pop
pop
ljmp
iret
sbb
pop
jle
cmpsb
call
lret
sbb
leave
mov
popf
movq
into
and
movsb
cmp
cmp
xor
sbb
jge
filds
xor
cmp
ret
cli
fwait
sti
fisttps
subb
jg
add
jb
repnz
inc
mov
push
fwait
movsb
fcomp
popf
clc
in
inc
cmp
inc
sbb
pushf
rol
sub
outsb
xor
std
popa
pop
fmuls
adc
adc
sbbb
sub
cmpsl
aaa
jmp
pop
sti
xchg
loopne
out
mov
orl
mov
in
sub
mov
mov
fmull
dec
mov
mov
lock
adc
dec
pop
pop
lock
call
ret
cmpsl
jg
pop
jge
iret
ds
mov
fcmovne
aad
jne
push
imul
outsb
rcl
inc
daa
popf
adc
mov
test
sbb
daa
icebp
lock
in
or
inc
jbe
data16
clc
lods
push
divl
push
fdiv
fs
adc
pop
jge
pop
mov
ret
xchg
nop
inc
push
stc
or
dec
add
fisubl
mov
ret
hlt
scas
mov
test
jmp
dec
dec
into
in
mov
addr16
push
sub
fsubrl
daa
jo
bound
mov
loope
jb
cs
inc
sar
jl
sub
ret
inc
insl
push
inc
push
or
inc
xchg
aam
and
push
cwtl
stos
pop
out
mov
in
imul
cmp
and
xor
dec
sub
pop
aas
adc
or
jecxz,pt
cmp
popa
jge
push
push
dec
dec
sub
int
push
sar
in
jp
into
mov
cmp
xor
inc
fcmovbe
lds
sub
add
xchg
pusha
inc
fistpl
popf
cmp
inc
test
pop
push
inc
pushl
outsb
push
stos
or
sti
push
mov
je
sub
shll
xlat
loope
add
and
xor
inc
pop
aam
xlat
xchg
jmp
mov
adc
into
rcrl
pop
mov
int3
add
jp
aas
or
mov
popf
mov
push
mov
lods
mov
lds
xchg
rcrb
sbb
les
rcrl
jne
pop
cmpsb
mov
in
mov
and
pop
fsubl
lahf
xor
psubusb
push
ret
push
es
lret
push
pop
mov
pop
int
cmc
adc
or
stos
icebp
xor
add
jae
xor
cltd
nop
sub
aas
test
pusha
decb
jl
arpl
xor
je
sti
adc
mov
test
es
mov
xor
lods
jle
inc
pop
ljmp
loope
test
out
sub
jmp
xchg
loope
repnz
xor
push
stos
adc
loopne
xchg
xchg
pop
pop
andb
imul
sub
leave
mov
dec
mov
mov
push
and
xorb
push
jnp
push
sub
pop
pop
outsb
cld
mov
pop
or
xchg
movsl
stc
jno
push
mov
es
dec
or
popa
sub
push
push
es
xchg
decb
mov
inc
outsb
sbb
mov
sbb
xor
jl
and
movsb
out
ljmp
mov
aaa
std
popf
idivb
mov
sarl
lock
mov
cmc
inc
dec
gs
lret
mov
mov
xor
inc
loope
mov
ror
into
imul
adc
sub
sub
sbb
add
adc
dec
pushf
nop
test
xchg
mov
mov
dec
and
faddl
leave
xor
clc
adc
dec
jl
shlb
mov
mov
cli
inc
add
das
hlt
push
adc
xor
bound
xchg
aad
int3
movsb
outsl
ljmp
sub
sti
pop
cmc
insl
add
inc
dec
inc
lahf
loopw,pt
xlat
outsl
ss
je
mov
cld
rol
xchg
xor
mov
fadd
and
pop
mov
shlb
adc
mov
sub
dec
cmp
sahf
or
and
push
pop
mov
jge
cmpsl
shlb
jmp
add
in
arpl
mov
mov
cmp
jno
mov
mov
mov
inc
mov
fst
aaa
add
add
js
testl
adc
mov
cmpsb
adc
dec
mov
fisubrs
ret
sub
mov
sub
dec
cmp
movl
stc
mov
hlt
or
fldl
dec
inc
in
lock
and
ljmp
or
fs
outsl
fwait
sub
iret
sub
nop
push
pop
sbb
xor
out
adc
xchg
sub
xchg
mov
adc
and
sub
fistpll
addr16
sbb
aad
arpl
loopne
inc
mov
cwtl
cli
dec
mov
ljmp
mov
stos
adc
ret
nop
es
add
popf
movsb
push
std
imul
outsb
sbb
jge
rcrb
pop
test
sbb
mov
cltd
outsl
dec
xchg
cmp
imul
jns
dec
cmp
jnp
dec
xor
daa
sub
mov
mov
inc
addr16
fstl
mov
int3
pop
shl
cmp
adc
push
mov
into
dec
cld
popf
mov
xchg
ss
mov
pop
jbe
cmpsb
dec
sahf
sub
jnp
pop
out
pop
test
nop
lcall
fsubs
fwait
andb
push
and
inc
out
jmp
ljmp
loope
cli
hlt
cmc
mov
inc
rorb
xchg
sbb
in
les
in
cmp
in
xlat
imul
xchg
xchg
cmp
shl
test
pop
adc
and
inc
jo
push
addr16
mov
push
add
jecxz
divl
push
mov
xchg
cmp
ljmp
adc
pusha
in
out
jno
js
dec
xor
test
lock
adc
outsl
out
mov
das
sahf
dec
insl
fsts
and
mov
add
inc
aad
test
hlt
mov
inc
invd
mov
xlat
and
daa
cmpsb
movsl
loop
xchg
dec
scas
sub
sub
loop
mov
test
imul
mov
repnz
scas
iret
xchg
xlat
add
in
iret
scas
cmp
into
scas
sbb
jmp
sub
sub
push
jle
dec
js
hlt
mull
dec
cwtl
arpl
xor
repz
ficomps
and
and
scas
and
rorl
sbb
xchg
mov
dec
data16
mov
cltd
out
or
jb
add
repnz
xchg
pusha
aaa
sub
stos
dec
push
lock
push
rcrl
pop
aam
sub
jp
xor
jb
mov
icebp
mov
out
xchg
aam
sbb
dec
add
mov
das
cmpsb
ret
mov
xor
mov
test
cmp
pop
ljmp
lods
test
andl
xchg
hlt
xor
cmpsb
push
insl
xchg
stc
xor
pop
sbb
data16
push
lret
call
stc
and
rol
mov
lcall
nop
pop
and
pop
lods
mov
cmpsb
sbb
das
aam
cmp
daa
mov
add
fstpl
call
add
pop
or
jns
in
lret
je
pop
add
jle
insb
jnp
cmp
sbb
pop
test
dec
les
push
fimull
push
test
scas
xor
dec
stos
and
ret
fwait
xchg
or
js
lret
ret
xor
pop
pushf
mov
orl
jge
out
out
dec
dec
stos
insb
push
addl
mov
in
popa
mov
nop
dec
out
sahf
cld
sbb
jge
mov
push
out
xchg
jmp
je
add
popa
mov
dec
mov
int3
lock
xchg
data16
push
outsb
loop
mov
cmpsb
sbb
outsb
ja
movsb
fmull
mov
add
push
inc
outsb
sahf
xlat
pop
mov
fdiv
jle
sub
sbb
repz
mov
cmp
rorl
xor
cmp
xchg
cwtl
jns
cwtl
jne
inc
es
xor
fstl
andl
inc
mov
hlt
cmpsl
lods
lahf
xchg
dec
jne
inc
adc
mov
mov
scas
pop
push
sub
and
movsl
add
movsb
in
mov
lret
xor
inc
jno
insb
daa
int3
movsl
inc
test
test
adc
or
jecxz
ljmp
mov
mov
adc
and
lcall
pop
nop
bound
into
fnsave
mov
inc
lcall
subl
add
push
jmp
repz
loop
and
loope
lods
pop
fwait
lcall
imul
out
push
sbb
sub
loop
pop
sahf
xchg
and
jo
sbb
loopne
call
xchg
and
jp
mov
loopne
imul
sub
loope
stos
or
test
lret
iret
sub
aaa
clc
mov
clc
pop
fmull
dec
arpl
push
jns
mov
lods
cmp
into
or
and
mov
lods
imul
test
fsubrs
cmp
in
cmp
mov
loope
dec
or
push
rolb
and
mov
test
popf
jno
jge
add
iret
xchg
sub
mov
out
cmp
mov
les
or
sub
adc
shlb
popa
stc
jge
insl
xchg
and
cld
push
dec
xor
addr16
and
and
aam
call
jmp
cld
or
outsl
call
hlt
pop
adc
mov
sbb
hlt
loop
fnsave
imul
pop
mov
xor
mov
fwait
pop
sbb
xchg
xchg
push
pop
sub
xor
mov
add
testb
and
sbb
lds
xor
pop
addb
jb
je
inc
jo
addb
push
loop
cs
loope
pop
adcb
and
add
cs
add
dec
bound
arpl
pop
data16
insl
or
lret
mov
mov
in
inc
test
inc
push
int3
test
mov
xchg
shrl
outsb
ss
jns
aas
jge
push
pop
push
jl
dec
stos
add
mov
or
fisttpl
add
or
rcl
test
adc
lcall
std
fcomps
fwait
test
sbb
push
pop
movsb
inc
sbb
jae
mov
aas
mov
divb
popf
ja
mov
lahf
or
jmp
outsb
mov
std
stos
shll
iret
cmpl
mov
pop
shl
jg
push
push
adcb
int3
jbe
jnp
sub
adc
fisttpll
ds
add
sbb
push
mov
adc
iret
bt
adc
add
repz
xchg
cs
testb
pop
sbb
pop
mov
nop
jge
lahf
sub
pop
stos
cltd
in
shll
mov
jmp
sub
push
pusha
xor
idivl
mov
adc
mov
daa
addr16
and
pop
shll
dec
mov
xor
into
mov
ss
adc
mov
data16
in
push
cwtl
cmc
cmpsb
mov
sbb
bound
movsl
dec
xlat
mov
adcb
data16
shll
sbb
inc
fs
inc
loope
xchg
dec
iret
in
jo
out
fldenv
inc
call
sarl
mov
jno
mov
test
cmpsl
iret
xchg
gs
jp
jmp
fsubs
push
jb
jb
pushf
fwait
and
shrl
and
imul
xchg
jne
loope
sub
pop
jl
pop
movsl
fs
adc
shr
push
mov
adc
fsubrs
xchg
jmp
into
jmp
and
lret
ss
mov
ljmp
outsl
dec
lds
cwtl
scas
xor
scas
outsl
or
loope
mov
cmp
sub
xorb
cmp
je
ret
lds
mov
push
insl
cmp
movsb
and
or
aam
push
add
fidivs
pop
mov
clc
hlt
and
lea
arpl
test
pusha
fidivs
wrmsr
and
dec
pop
inc
js
adcl
cmp
jne
ret
xchg
mov
andb
scas
rclb
lcall
pop
xchg
mov
jne
xor
sbbl
mov
jle
in
add
cmp
jmp
sbb
jp
inc
test
ljmp
sbb
jecxz
out
pop
push
scas
icebp
sbb
dec
cmp
dec
test
push
aad
xchg
adc
insb
xchg
insb
icebp
mov
jae
push
stc
in
mov
cmp
push
std
insb
inc
jns
and
mov
cli
cmp
dec
lds
xchg
or
rorb
sbb
call
push
sbb
xchg
outsb
jecxz
pushf
cmc
push
aam
subl
out
or
sbb
clc
ljmp
dec
xchg
pop
das
fisubl
jl
pop
xchg
push
pop
movl
cmpsb
loop
rol
lret
jl
arpl
push
mov
pusha
mov
jg
mov
push
cmpsl
sbb
insb
in
in
popa
jb
inc
clc
pushf
loop
jp
fs
ror
cmp
filds
mov
jp
rcll
push
sbb
mov
imul
or
loop
loope
mov
mov
mov
push
xchg
aam
cmp
xchg
pop
loop
add
mov
pop
cmpsb
pop
insb
jo
xchg
mov
fstpt
sub
in
ret
push
pop
sbbb
xor
dec
push
lea
pop
push
or
sub
jle
arpl
daa
mul
jl
ret
inc
push
lret
pop
or
popa
call
inc
movsb
popf
fcompl
mov
adc
imul
sbb
add
das
out
mov
jns
out
mov
cmp
jp
ja
xor
dec
mov
push
dec
pop
xchg
jnp
movsb
mov
aam
sti
js
inc
inc
sbb
sub
mov
fisubl
add
pop
xchg
divl
lock
or
jbe
cld
inc
mov
addb
inc
ja
inc
xchg
mov
movsb
push
lods
fisttpl
jnp
lock
fnstenv
mov
stos
in
xchg
mov
or
clc
mov
aas
clc
add
mov
sti
lock
dec
into
jecxz
inc
jbe
pop
inc
inc
mov
sub
and
mov
repnz
fcmove
mov
jp
sbb
and
jle
cmpb
subb
fwait
subb
inc
sbb
add
xor
push
jmp
das
daa
fbld
inc
and
pop
adc
and
xchg
xchg
test
das
ret
stc
pop
xor
xchg
inc
mov
or
xor
adc
mov
push
push
clc
adc
add
out
adc
mov
jbe
xlat
adcb
xchg
cli
xor
call
add
jb
xchg
or
xchg
aas
sbb
jmp
rcrb
inc
jae
gs
mov
mov
or
repnz
call
jne
mov
subb
popa
je
mov
or
pop
loopne
push
cltd
pop
cld
fdivs
lcall
ljmp
mov
test
scas
and
out
ja
divl
push
pushf
dec
xchg
push
jle
push
fmulp
mov
pop
pop
int
sbb
jg
dec
clc
cmp
mov
aaa
shl
mov
xor
leave
mul
movsb
lock
callw
push
sub
lock
in
ds
jae,pn
and
into
shrl
scas
scas
add
add
inc
movsb
sub
in
cmp
mov
or
inc
insl
mov
push
add
aas
xchg
cs
cmp
adc
xchg
ja
outsl
mov
arpl
stos
xor
popf
xchg
call
inc
xchg
sub
or
push
in
movsl
jo
in
mov
push
and
inc
out
jge
rclb
ds
imul
jb
pop
cmp
mov
hlt
xchg
roll
and
shrb
push
sbb
jecxz
call
movsl
push
jb
out
shlb
push
les
dec
jo
fdivrl
mov
test
mov
sub
ret
cmp
lcall
enter
dec
add
aas
loop
les
fs
loopne
jmp
xlat
sub
sti
sub
pop
or
nop
lock
adc
jno
mov
inc
mov
rcl
xor
fwait
mov
ds
lods
insb
insb
out
jecxz
insl
add
mov
mov
jo
mov
fwait
jl
sbb
sub
js
sub
lea
lea
and
inc
or
mov
push
push
mul
mov
dec
flds
in
mov
cmpsb
mov
clc
mov
test
dec
mov
xorb
jmpw
pcmpeqd
ss
xchg
push
aad
xchg
add
ret
jnp
push
addr16
mov
or
and
out
ds
push
jbe
cmp
jno
mov
cwtl
dec
popa
notb
in
mov
pushf
into
mov
nop
xchg
stos
jle
in
cmpsb
js
mov
insb
push
lahf
mov
iret
scas
icebp
dec
xor
testb
js
lret
adc
lret
mov
pop
cmpsl
call
addl
popf
inc
movsb
adc
xchg
divl
cs
stos
inc
jns
or
mov
mov
push
les
gs
outsb
outsb
in
sbb
rolb
inc
xchg
fistpll
mov
sub
xor
ljmp
sbb
and
sahf
daa
mov
scas
xchg
mov
mov
es
push
sbb
insb
imul
mov
cmpsb
and
adc
mov
mov
jb
cwtl
xchg
cmp
dec
sti
negl
mov
into
push
and
mov
inc
leave
stos
stos
scas
jp
ljmp
ret
test
mov
imul
fstp
aas
call
loope
fadds
dec
addr16
lcall
sbb
out
ret
lods
ret
add
push
clc
mov
add
je
les
lcall
jp
je
lcall
lahf
sub
lret
pushf
lods
mov
mov
out
fdivl
mull
xchg
cld
mov
pop
mov
or
lods
mov
push
shrl
adc
stc
lahf
xor
xor
clc
dec
and
dec
cmc
sbb
jecxz
add
jb
adc
dec
lods
popa
nop
addr16
or
mov
sub
movsl
adc
bnd
fs
mov
pop
in
push
imul
dec
sub
icebp
ja
jle
out
lret
or
lahf
cbtw
add
aad
mov
jg
inc
cmp
outsl
loope
rcrb
fistl
push
dec
nop
xchg
xor
icebp
mov
sbb
ret
pop
sti
cmc
dec
sti
jb
or
pop
sti
iret
adc
mov
popf
bound
in
pop
out
mov
pop
jnp
lock
or
mov
adc
cmp
sub
xor
inc
adc
and
mov
outsb
aas
or
dec
xchg
pop
lock
xlat
add
dec
rolb
push
push
jno
int3
arpl
xor
inc
loope
push
mov
fisubrs
nop
pusha
pushw
jle
pop
xchg
inc
xor
ja
pop
and
pop
jle
cmp
ljmp
mov
jno
push
imul
scas
inc
daa
cltd
xchg
xchg
rcll
imul
jecxz
repnz
push
push
xor
push
inc
sub
ret
ss
mov
fcmovbe
xchg
sub
fsts
xchg
dec
jno
sbb
pushf
inc
mov
mov
ss
es
cltd
adc
shrl
jg
sbb
cmp
enter
jno
mov
cwtl
rcrl
aam
ja
pop
addl
aad
addr16
test
pop
mov
inc
movsl
icebp
sahf
repnz
test
sub
sub
mov
fs
mov
enter
dec
jbe
aad
fwait
pop
test
mov
ja
psllq
sub
and
std
or
inc
testl
aas
jmp
into
add
adc
arpl
clc
cmp
cs
ret
subw
std
sbb
and
ret
push
popf
ret
add
xchg
xchg
int
lret
fdivrs
fbld
enter
inc
sti
mov
int
cmpsb
xchg
jo
and
bound
ja
in
dec
mov
xor
into
xor
cmp
xor
outsb
leave
sbb
jl
sbb
inc
xor
cmp
imul
cmc
icebp
push
sbb
and
das
dec
stos
pop
pop
sarl
add
rclb
arpl
cmp
cs
mov
add
push
mov
enter
das
lret
and
and
outsb
sbb
jg
and
sub
rcrb
mov
in
rcr
cmp
sbb
or
mov
xchg
aad
mov
insb
jne
popf
pop
and
call
push
mov
pop
cmp
adc
lret
mov
mov
jmp
popf
scas
lds
bnd
scas
fistpll
mov
int3
xor
std
fstpt
imul
pop
jg
aas
in
push
mov
pop
mov
mov
sbb
aad
addr16
or
mov
mov
xorl
lret
mov
sti
dec
cmp
cmpsb
loope
aad
daa
lret
lods
jle
loop
or
mov
bnd
dec
pop
imul
mov
and
mov
int
cmp
mov
xchg
pusha
xchg
mov
mov
dec
and
in
push
jp
movsb
outsl
pop
bound
push
aaa
xchg
mov
imul
inc
in
and
sbb
mov
or
or
fldl
sbb
xchg
pop
leave
fstps
mov
inc
test
jae
inc
cmp
pop
jg
cwtl
sti
jl
enter
imulb
jl
dec
sub
call
fxch
pop
data16
xlat
sbb
aaa
loopne
pusha
jmp
addr16
sub
iret
xchg
push
and
repnz
neg
in
sbb
cmp
popf
in
xor
mov
sbb
xchg
xor
jb
jae
incb
addr16
adc
mov
pop
pop
out
pop
xor
cmpl
ret
jne
pop
inc
enter
inc
push
shlb
sub
dec
rcrl
jmp
mov
cld
aad
mov
xchg
jl
xchg
lea
and
mov
cmp
daa
cmp
mov
push
jb
sub
ror
fs
pop
xchg
jne
lret
jl
jo
cmp
lret
adc
lret
orb
fistpll
jb
xor
repz
mov
jno
pop
fcmovnu
or
mov
movsl
mov
imul
push
inc
sarl
rcr
mov
hlt
pop
fsub
add
stos
adcb
pop
mov
and
div
pop
xchg
sub
dec
and
int
mov
arpl
jbe
loopne
mul
xchg
mov
jbe
jbe
sub
call
jnp
and
add
lret
cltd
push
out
dec
test
out
lods
stc
mov
xor
jmp
ljmp
push
mov
shll
sbb
lea
and
cmpsb
out
imul
in
xor
les
pusha
insl
sub
bound
xchg
dec
div
scas
jge
lock
mov
add
setne
fildll
jnp
scas
and
pop
mov
fisubrl
xorb
cltd
rolb
inc
mov
or
dec
jnp
leave
movsl
pop
cld
or
and
in
cmpsb
aad
jge
andb
aas
fbstp
push
mov
mov
dec
dec
inc
mov
inc
int
inc
sti
rorb
in
movb
adcl
scas
je
dec
push
jb,pt
inc
jo
push
rolb
xlat
out
inc
out
push
or
xor
ret
push
adc
adc
xchg
das
nop
inc
inc
imul
fidivs
pop
imulb
adc
sub
xor
jbe
clc
cld
sti
movsb
popa
pop
mov
sahf
cld
jnp
push
mov
and
xor
cmp
sbb
inc
stos
into
pop
jecxz
jno
adc
pop
sub
mov
stos
sbb
xchg
into
call
mov
js
scas
pushf
xchg
adc
movsb
xchg
mov
and
mov
jg
pop
and
sub
add
lock
mov
add
and
or
inc
sbb
fucomp
out
mov
int3
sbb
inc
dec
outsb
popf
sbb
loopne
pop
mov
xchg
lcall
jge,pn
or
test
mov
push
inc
sbb
sbb
add
sub
xor
out
jbe
sub
add
cmp
repz
inc
dec
push
or
test
pop
and
adc
clc
iret
pusha
jno
push
jle
out
arpl
popl
fstpt
mov
and
loope
jns
pop
pop
stos
or
stos
pop
sbb
and
mov
sub
mov
adc
sbbl
std
push
rorl
push
out
and
je
push
sub
imul
int3
or
jbe
xor
inc
inc
sub
pop
lret
sbb
xor
sbb
sub
call
in
xchg
pusha
or
xor
testl
test
pop
stc
stc
cmpsb
add
cmp
shl
xchg
test
cmpsb
test
adc
jl
int3
xor
loope
or
leave
in
push
sub
or
repnz
movsl
cmp
scas
mov
shlb
dec
lods
cmp
xor
adc
or
pop
fimuls
xchg
sbb
fisttpl
ds
sub
inc
inc
and
cwtl
repz
call
in
adc
sarb
dec
lea
push
push
cmpxchg
mov
dec
xchg
mov
repz
adc
mov
das
push
into
pushf
out
xor
push
and
push
jb
jg
mov
cltd
jae
shll
call
push
cli
cmp
inc
mov
mov
lcall
jl
lcall
and
inc
or
mov
mov
push
repnz
stc
mov
jbe
movsb
outsl
neg
pop
lock
in
insb
push
adc
mov
lret
mov
mov
cmp
movl
adc
in
jb
mov
lods
mov
das
mov
adc
adc
loopne
push
lret
std
divl
add
jo
shr
out
repnz
stos
jmp
push
xor
push
pop
sbb
add
hlt
jno
cli
imul
xor
inc
ja
pop
lcall
mov
repnz
ds
mov
sub
mov
aad
dec
dec
imul
in
jne
inc
lods
push
pop
jnp
xchg
mov
daa
xlat
fmull
xlat
xlat
cmp
cmp
jns
jg
mov
adc
arpl
es
aad
adc
ljmp
dec
xchg
je
dec
imul
push
jmp
xor
and
pop
mov
and
pop
lea
mov
aas
test
aaa
dec
jo
rolb
test
pop
dec
mov
and
inc
ja
lods
movl
fisubrl
and
scas
lods
rorb
xlat
mull
push
sahf
and
mov
xchg
add
aam
pop
lods
out
ror
pop
add
jecxz
int
jbe
das
xchg
lret
aaa
adc
pusha
inc
ja
xchg
in
rorl
inc
je
bndldx
jmp
mov
push
movsl
jg
lds
xchg
popf
mov
subb
cli
aas
dec
je
add
dec
cli
mov
cmpsl
les
push
xor
pop
cwtl
rcrl
cltd
movsb
ret
pop
out
scas
push
dec
push
dec
cmp
shll
pop
jns
negb
and
push
xchg
hlt
pop
sti
imul
in
pop
sub
dec
xlat
int
inc
jmp
dec
arpl
aas
xor
outsl
das
or
inc
pusha
push
rorl
cld
pop
mov
xor
and
in
mov
test
movsl
jbe
mov
adc
or
sub
stc
mov
loope
scas
call
test
sti
inc
sub
mov
cmpsb
rorb
mov
push
cltd
and
divb
cmp
mov
icebp
cmp
pop
adc
cli
or
sub
in
jp
xchg
test
into
roll
psraw
hlt
in
cs
dec
or
pop
in
fs
push
out
pop
jmp
mov
iret
xchg
das
push
rorb
movsb
add
test
xchg
push
xchg
jge
mov
mov
push
or
mov
cmpsb
or
mov
icebp
xchg
or
ret
push
out
cmp
or
out
cmp
das
sbb
and
sub
dec
inc
call
les
insb
cwtl
xor
and
sbb
packuswb
pop
fs
fstl
es
mov
in
insl
pop
or
jno
roll
pop
aam
mov
jno
daa
fnstsw
aaa
inc
out
or
mov
push
push
xor
dec
out
xor
add
push
mov
ret
inc
sbb
and
sbb
pop
jmp
pop
jl
mov
add
outsl
push
cmp
add
mov
fisubrl
add
push
fisubrl
rcrb
push
flds
icebp
das
enter
test
and
mov
add
das
pop
jbe
fwait
adc
push
shrl
testb
add
mov
pop
xchg
popf
ffreep
aaa
lods
je
into
rorb
loope
adc
js
adc
lds
pop
stos
push
cmc
in
cmp
sub
out
mov
call
and
hlt
in
pop
xchg
or
stos
and
adc
push
outsb
and
mov
fiadds
add
dec
cld
sub
jno
cmp
repnz
sbb
push
data16
inc
cli
pop
jle
mov
and
mov
dec
nop
xchg
push
pop
iret
fcomi
daa
add
dec
xor
stos
iret
das
fs
add
cmp
and
push
ds
inc
pop
pop
cmp
cwtl
aam
js
push
into
xchg
subb
sbb
sub
jp
test
cmp
test
lods
cmp
jge
cmpsl
push
inc
inc
xchg
mov
repnz
inc
add
cmp
or
nop
add
or
jmp
iret
insb
adc
fwait
mov
cli
sbb
mov
ficoml
sub
insl
mov
cmpsb
lock
mov
jbe
inc
stos
sub
stos
xor
inc
mov
fdivrp
pop
xchg
pop
cld
xor
xor
lret
jg
subl
mov
int
int3
nop
fsts
aad
ret
jnp
xchg
xchg
pop
sbb
in
into
insb
inc
out
cmp
xor
add
and
xor
popf
in
pop
lret
movsl
scas
cwtl
in
and
por
aad
adc
mov
pop
jo
in
dec
cmp
dec
xchg
cli
xchg
push
in
popf
or
dec
sbb
mov
dec
imul
inc
shll
clc
lcall
mov
mov
movsb
cmp
push
add
pop
mov
sub
xor
fdivrs
xor
scas
in
inc
shlb
jne
mov
pop
inc
cltd
sbb
push
iret
es
cmp
push
fimull
cmc
out
xor
mov
dec
mov
xchg
insl
fs
sbb
pop
xor
push
mov
or
out
mov
repz
jnp
cmpsb
sub
addr16
lahf
mov
and
fs
mov
enter
mov
inc
xor
test
addr16
ss
lret
push
mov
imul
arpl
insl
arpl
xchg
hlt
pushf
mov
cmp
es
pop
icebp
cmpsl
cmp
shl
adc
mov
dec
xchg
loope
outsl
dec
stc
jecxz
pop
loope
push
mov
jnp
test
inc
pop
in
sbb
jb
sub
sahf
clc
sbb
bnd
or
addl
fsub
adc
cmpsb
arpl
xlat
and
out
sahf
nop
push
or
push
add
mov
xor
dec
sbb
inc
xchg
sbb
daa
cmpsb
xor
pop
pop
pop
mull
and
aad
dec
jno
sbb
inc
and
adc
dec
fisubrl
jp
pop
or
pop
clc
aaa
or
push
pop
push
mov
push
sbb
pop
mov
xchg
inc
repnz
mov
mov
pop
cs
stc
sbb
xor
jnp
add
loope
or
add
rolb
adc
push
sbb
and
arpl
popf
adc
popa
hlt
fldt
or
insb
xchg
repz
addr16
popf
and
sbb
push
cmp
xor
sbb
scas
imul
testb
cmp
dec
stos
sub
out
lret
aas
cmp
mov
push
mov
mov
add
push
jno
lret
add
sbb
int3
xchg
sub
test
or
mov
or
cltd
sbb
cwtl
aam
pop
mov
xor
sbb
repz
xlat
jecxz
pop
mov
fxch
notl
push
xchg
jns
rclb
add
cli
add
aam
or
jns
cwtl
scas
sub
scas
sahf
jmp
jmp
pop
js
and
into
mov
out
and
cs
js
lods
pushf
jnp
popf
mov
cmp
lea
jl
xchg
int
sub
imul
xcrypt-ctr
cmpsl
fstps
jle
mov
fcompl
mov
icebp
je
dec
lret
bound
divb
jns
cmp
and
mov
out
dec
ret
daa
add
sub
xorl
mov
aad
cli
add
xchg
cli
lea
sbb
ds
inc
xor
xor
arpl
pop
rolb
ss
dec
adc
pop
cmpsl
push
adc
lock
loope
dec
mov
int
jp
xor
das
nop
sbb
mov
gs
aas
push
jns
adc
mov
lea
xchg
adc
or
pop
sahf
inc
dec
push
repnz
pop
xchg
sub
jb
inc
pop
sahf
mov
movsb
dec
stos
push
xchg
cmp
sub
xchg
dec
push
test
clc
mov
clc
and
lods
mov
scas
cmpsl
inc
int
data16
add
xchg
adc
fstl
xor
call
adc
rcl
fcomps
sahf
imul
addb
shl
pop
push
mov
es
pop
xchg
shlb
into
lds
aas
aaa
push
imul
je
stc
mov
lds
mov
xchg
add
and
lods
lahf
movsl
leave
push
cmp
and
push
sbb
xchg
jmp
cs
out
xchg
push
mov
pop
mov
mov
ret
shld
mov
js
and
inc
jmp
div
clc
mov
shr
xor
xchg
dec
mov
nopl
jl
mov
xchg
loop
pop
cli
das
dec
sbb
mov
out
bound
cli
dec
inc
jmp
inc
xlat
icebp
dec
cld
shlb
xchg
or
arpl
loopne
test
fldl
mov
push
dec
fimuls
and
out
fstl
in
out
cli
sub
jecxz
fs
cltd
dec
cmpsb
cld
decl
cld
mov
jo
jmp
cmp
int
and
cmpsb
into
pop
fistpl
clc
pop
dec
mov
fcom
sub
fildll
insl
or
add
dec
fisttps
cmp
jl
push
jp
or
pop
mov
add
adc
xchg
nop
pop
fcoms
or
sbb
push
es
sbb
hlt
pop
js
inc
aad
incl
repz
mov
lret
loop
loop
dec
mov
sbb
dec
lahf
mov
inc
cmpsb
ror
out
mov
repz
jg
out
andl
and
push
daa
adc
insl
lock
testl
pop
sub
fisubs
fs
daa
jl
cmp
test
or
orb
fs
cmpsl
in
lea
dec
mov
adc
dec
sahf
xchg
xor
testl
jg
js
pop
outsb
dec
mov
dec
push
push
mov
cmp
xchg
das
push
rolb
push
and
imul
mov
rclb
sbb
and
push
xchg
stos
fiadds
divl
mov
adc
ljmp
dec
int
pop
xchg
fs
or
ja
cltd
popa
out
movsb
lret
lods
push
movsl
inc
imul
insb
push
jnp
pop
push
lods
and
jge
dec
jno
aad
imul
pop
movaps
adc
dec
sti
sbb
adc
xchg
mov
jae
push
mov
lods
rolb
mov
mov
stos
fcmovnu
mov
icebp
and
add
mov
mov
insb
push
xchg
push
pop
bound
sarl
out
shlb
fildll
jl
cwtl
jge
mov
add
mov
pop
push
ret
pop
daa
int
js
xor
aad
mov
cs
shrl
insb
add
add
mov
mov
imulb
cmp
xchg
int3
les
mov
xchg
scas
and
aas
xor
sbb
fidivrl
jne
mov
sti
inc
add
sbbl
inc
pop
inc
pushf
rol
xchg
and
or
test
mov
and
inc
pop
xchg
jne
cli
xchg
das
test
inc
clc
lret
add
mov
push
mov
data16
add
test
inc
pop
adc
icebp
pop
fnstsw
sbb
test
cli
jmp
fwait
sub
and
xchg
ret
mov
dec
dec
rcll
xchg
fwait
inc
pop
sub
les
dec
jecxz
cmp
imul
mov
lret
aas
pop
test
lcall
jge
sbb
mov
xor
add
mov
dec
xor
push
scas
cld
out
mov
xor
test
dec
xor
cmp
leave
out
xchg
jne
xchg
ret
jmp
fs
jne
cli
js
mov
sbb
in
xchg
pop
push
loop
rcrl
sahf
gs
pop
incb
xchg
lahf
jno
jmp
roll
cmc
sar
adc
push
sbb
xor
in
pop
out
mov
aam
repz
sub
cmp
pop
outsb
nop
push
aam
scas
fcoml
xchg
sub
test
inc
sub
inc
push
xchg
aas
fcomp
or
xlat
insb
xchg
popf
jle
xchg
into
out
mov
mov
or
and
sub
or
mov
sbb
dec
sub
fwait
push
jnp
inc
push
testl
cmpsl
lea
jmp
loope
int
or
mov
and
xor
pusha
add
arpl
pop
aam
or
xchg
xor
sub
sub
xor
xchg
addb
dec
and
add
out
pop
in
cmp
adc
rorl
inc
ljmp
addr16
sub
lea
lds
mov
xor
xlat
xor
mov
jg
mov
and
sub
dec
sub
fstpt
xor
imul
mov
cltd
fnstsw
rcl
popf
enter
rorl
push
mov
ljmp
out
ss
inc
and
cmc
mov
add
mov
and
adc
nop
jle
mov
push
push
cmpsb
or
xchg
imul
mov
sbb
sub
mov
rcl
sub
adc
adc
or
call
sbb
das
popf
sbb
jnp
pop
negl
addl
cmpsb
enter
pop
dec
out
push
shl
and
stc
dec
nopl
das
out
xchg
sbb
ljmpw
and
mov
or
call
cmp
lds
mov
mov
test
adcb
iret
jae
ja
xor
aaa
sub
xchg
mov
adc
notl
test
pop
sub
push
and
ja
ret
mov
mov
jae
fdivrl
in
fadds
mov
xchg
cli
fs
fs
jle
test
inc
sub
and
sbb
pushf
mov
rorb
sbb
frstor
pusha
cmp
cmp
insl
sub
xchg
push
repz
mov
lahf
push
js
xchg
cmp
xchg
dec
sub
inc
fildl
test
mov
cltd
gs
sbb
jmp
jge
lods
dec
dec
pop
or
pop
mov
and
cwtl
push
inc
push
pop
mov
clc
in
adc
or
and
fsubrl
mov
pop
mov
imul
or
cwtl
or
adc
jo
cmp
add
jae
popa
xchg
push
pop
jns
mov
xor
leave
push
add
lea
xchg
aaa
int
adc
xor
inc
pop
cmp
xor
and
hlt
imul
jnp
mov
push
cmpsb
push
test
lret
dec
test
test
mov
jbe
sbb
ja
sub
fcom
roll
mov
push
sbb
repnz
ja
mov
into
dec
fistl
jae
jae
ficompl
int3
sbb
cmc
inc
and
idivb
notl
fiadds
loope
and
push
mov
add
mov
lret
pop
xchg
jnp
jle
xchg
imul
sub
cmp
ljmp
gs
jbe
mov
mov
call
ja
nop
cmp
loop
push
jg
mov
cmpsb
mov
mov
imul
pop
push
mov
xor
xchg
dec
push
mov
lahf
scas
cli
mov
pop
das
sbb
xlat
xchg
jb
arpl
or
and
sub
loop
int3
or
inc
mov
sarl
and
add
addr16
mov
fadds
cmp
ficoms
xchg
and
imul
cmc
xor
sbb
mov
pop
in
xchg
cmpsb
adc
ret
addb
out
notl
push
mov
add
fdiv
cmp
jb
loop
lods
push
scas
pop
mov
push
sbb
sbb
xchg
mov
fidivrs
mov
ljmp
lcall
xchg
sarl
mov
adc
jnp
shrb
sbb
mov
test
in
inc
sbb
cmp
push
lcall
subb
outsl
jp
je
xor
add
rcr
push
test
dec
pop
sbb
popa
je
dec
or
sti
gs
inc
sahf
cmp
cmc
sub
lds
cmp
cmpsb
enter
aas
repz
in
repnz
push
sub
pusha
loop
out
scas
out
jae
jl
ja
js
sub
incb
mov
lcall
jae
adc
std
aas
int
xchg
lds
je
mov
js
jne
pop
repz
jae
addr16
xor
addb
add
enter
testl
dec
mov
gs
sbb
orb
mov
sub
ret
ljmp
fnstsw
pop
outsb
xchg
cmp
jo
imul
inc
pop
movsl
mov
adc
movsl
sets
scas
fcompl
pop
std
mov
pop
jl
xchg
mov
push
repnz
inc
push
ljmp
js
jmp
pop
rorb
pop
aad
iret
jnp
push
sbb
mov
ret
dec
xchg
or
cmp
add
jnp
and
int3
adcb
icebp
mov
std
xlat
or
sbb
stos
sub
or
inc
lcall
jno
mov
cld
or
cld
xchg
cwtl
push
ficomps
arpl
insl
fcoms
and
shrb
data16
cmp
sub
out
insl
xor
mov
imul
or
ret
xchg
sti
jno
sub
dec
inc
test
inc
jge
pop
xlat
dec
jp
and
or
gs
push
arpl
dec
cld
push
jns
int
mov
repnz
sub
je
dec
push
jl
push
push
and
fs
out
adc
lahf
fisubrs
or
dec
loopne
lret
inc
cmp
pop
fiaddl
mov
or
cmpl
pop
add
shll
dec
and
mov
add
pop
shrl
pushf
adcb
aam
shrb
pop
jae
jmp
mov
cwtl
in
repnz
push
jmp
fmuls
and
inc
push
nop
jb
mov
jl
jle
pop
and
mov
insl
lahf
sub
and
pushf
jge
jne
pop
jl
repz
jp
jne
and
clc
popa
xor
or
xor
lcall
addb
inc
sub
add
xchg
fidivrs
push
imul
stos
mov
scas
mov
pop
push
push
imul
insb
out
and
in
and
fmull
gs
stc
mov
fisubl
sbb
fisttpll
xchg
or
xchg
rclb
mov
add
jo
js
fildll
gs
adc
lahf
dec
sub
jo
pop
lods
push
sti
cmp
mov
cs
test
shrl
lods
fdivr
jbe
bound
jecxz,pn
adc
ret
push
or
pop
cmp
punpckhdq
iret
cmp
fmul
and
xor
test
push
fbld
cmp
je
loope
xor
fisubs
lret
cmp
xor
fadds
add
das
and
cmpsl
jbe
insl
sub
mov
call
idivl
sub
push
shll
push
pushf
adc
insb
ljmp
adc
mov
sub
dec
shrl
inc
adc
cmpsl
test
loopne
mov
sub
in
lds
orb
mov
and
outsl
call
pop
xchg
jecxz
push
pop
jmp
sbb
stos
push
outsl
or
and
pusha
sub
sub
outsl
sbb
pop
inc
push
push
mov
fstpl
mov
mov
cld
ds
int
and
inc
adc
arpl
xor
and
mov
gs
pop
sub
inc
sbb
les
enter
popa
xchg
fisubrs
mov
or
xchg
jno
cld
mov
pushf
fsubp
cmc
outsb
call
stos
jle
idivb
or
lcall
cmp
stos
push
cmpsl
lret
add
test
std
xchg
mov
adc
xchg
movsb
mov
outsl
adc
mov
xchg
pop
cld
dec
jno
jnp
lock
call
ret
rolb
xchg
inc
adc
fisubs
or
popf
adc
sbb
mov
push
cmp
das
pop
push
mov
repnz
pop
scas
mov
push
insl
sub
aaa
out
cmpsb
aaa
lret
inc
xchg
in
push
arpl
and
pop
adc
mov
xchg
ljmp
jmp
sar
fnstenv
inc
jmp
cwtl
out
mov
test
mov
xchg
cmp
pop
push
mov
or
push
imul
pop
test
adc
lahf
xor
ss
movsl
das
ja
inc
fmuls
insb
test
mov
mov
jg
inc
jb
xchg
popa
push
rcr
imul
shr
add
clc
mov
xchg
mov
dec
into
adc
push
jp
jmp
dec
std
int3
xchg
fisubrl
jae
dec
in
daa
rclb
sti
xchg
cld
inc
and
shll
aaa
mov
popa
inc
leave
push
inc
insb
in
cmc
cld
mov
inc
ja
inc
or
ret
mov
loop
or
xchg
outsl
jmp
push
push
std
sub
inc
out
sub
cld
dec
outsb
pop
into
add
scas
add
lods
nop
mov
mov
push
imul
shlb
sub
adc
dec
jbe
std
dec
jmp
int
or
faddp
call
sti
dec
pop
add
test
es
je
dec
mov
or
imul
js
int
adc
shll
inc
pop
dec
repz
inc
and
iret
and
mov
bswap
jno
sar
js
sar
or
jno
nop
mov
push
jg
nop
mov
jno
xchg
in
dec
adc
sub
or
mov
lret
bound
aad
dec
jbe
push
mov
mov
push
inc
cltd
std
cmp
ljmp
jb
mov
mov
in
sub
ja
fwait
and
iret
fldl
adc
jge
push
lcall
movsl
std
std
inc
mov
fstl
das
or
jp
in
inc
scas
xor
adc
xchg
mov
mov
cmc
mov
negl
mov
or
repnz
mov
cmp
push
lea
mov
jno
or
fisubs
insl
pushl
pop
dec
decb
jb
rol
or
loopne
ljmp
sbb
cwtl
imul
pusha
loopne
aam
push
add
cmp
bound
push
and
push
inc
clc
aad
js
jb
push
jge
mov
test
or
pop
xchg
xchg
cmp
test
pusha
push
fcom
test
test
mov
fiaddl
pop
aad
xchg
fimuls
adc
push
and
movsb
or
or
lea
mov
sub
les
popf
call
ficoms
xor
mov
pop
push
mov
sbb
test
insb
and
or
pop
lods
and
repz
call
rcll
fwait
addb
iret
pop
push
pop
or
push
mov
lcall
lods
out
stos
sub
xchg
mov
test
addl
clc
push
scas
adc
shll
add
xchg
iret
add
sub
dec
ljmp
inc
add
js
stos
pop
or
add
cmp
add
loope
call
add
push
push
aaa
int
inc
andb
xor
mov
pop
mov
ja
mov
cmpsl
mov
mov
or
inc
out
inc
pop
cmp
out
mov
jb
sti
aad
add
and
dec
test
nop
add
cmc
sti
jne
int
les
jp
addr16
sarb
adc
jle
call
test
divl
mov
dec
inc
push
add
loope
pop
mov
cmp
shrb
mov
mov
mov
aad
lods
mov
mov
cmc
nop
pop
and
sarb
cmp
loope
xor
test
ss
pop
in
imul
jne
pop
into
inc
int
sbb
push
fimull
fisttps
and
adc
fisubrs
or
stc
mov
arpl
cmp
das
iret
or
clc
push
xchg
dec
mov
jns
rolb
addr16
sbb
xor
add
lret
jmp
mov
push
lcall
nop
ret
pushf
pop
and
inc
or
mov
addb
rcl
sub
into
aas
int
dec
pop
push
adc
fs
es
pop
mov
inc
out
mov
push
fs
xor
jbe
xlat
in
call
les
inc
add
aaa
in
aaa
push
cmp
lods
rorb
sbb
arpl
test
mov
push
les
add
mov
cmovp
imul
pop
pop
aas
mov
daa
test
inc
push
dec
scas
push
cli
lcall
jae
shlb
mov
xchg
movsb
lods
xchg
sbb
lods
mov
sbb
daa
aaa
decl
fwait
stc
jl
ja
cmp
test
jno
movsl
sub
sbb
adc
stos
add
out
mov
cwtd
fsubrl
mov
ret
pop
inc
icebp
mov
mov
dec
bound
mov
fcmovbe
mov
dec
lret
xorb
jp
push
dec
out
fisubl
out
mov
psraw
aas
push
xor
aam
imul
or
int
jo
cmpsb
and
mov
rol
cli
inc
lret
jge
dec
fsubrl
out
inc
stc
int3
fistl
test
cmpb
rcr
out
pushf
adc
xchg
cmp
jle
fwait
xor
push
mov
push
sbb
xchg
xchg
xchg
mov
sbb
lock
shlb
sbb
jl
lret
bound
xor
adc
js
dec
jb
xchg
mov
loop
mov
loope
sbb
push
mov
outsb
not
and
or
je
xchg
push
cld
cmp
daa
or
mov
sub
push
push
fcomps
das
arpl
imul
in
sbb
cs
out
mov
dec
repz
imul
adc
sbb
mov
sahf
push
push
pop
adc
pop
call
stos
xor
jl
mov
mov
lahf
mov
sti
int3
sub
das
pushf
sbb
insb
cltd
push
out
inc
mov
insl
ja
push
jae
das
daa
js
or
pop
xchg
add
fldenv
mov
int
inc
jmp
clc
scas
add
out
lods
jge
int3
call
loope
dec
dec
pop
mov
lahf
lcall
adc
popa
push
out
cmp
bound
les
insl
pushf
jne
stos
fdiv
std
fnsetpm(287
es
or
das
sbb
adc
jp
popf
movb
bound
fcmove
in
loope
leave
loope
jl
lret
lods
adc
mov
cltd
in
rorb
int
pushf
test
lea
pop
and
sub
ja
or
int
test
inc
inc
dec
xor
je
sti
adc
fneni(8087
inc
shlb
stc
bound
rcll
rcr
je
sub
xchg
dec
add
mov
cltd
pop
mov
cmc
andl
xor
sub
sbb
shll
xor
pop
jmp
sbb
mov
mov
add
in
push
jnp
loope
push
adc
rcrl
lods
inc
jecxz
pop
stos
cmp
push
pop
movsb
add
cwtl
stos
mov
enter
sbb
scas
popf
jae
outsb
xor
lret
loopne
mov
adc
shll
out
mov
xor
jecxz
inc
mov
movsb
xor
rcrl
mov
xor
icebp
jb
mov
mov
cmc
or
roll
mov
mov
or
mov
mov
inc
into
jmp
sbb
jo
je
fwait
mov
arpl
test
iret
push
sti
xchg
xchg
pop
and
fstl
sub
xor
inc
push
stc
fisubl
jp
andl
ret
fwait
insl
scas
enter
push
lods
sbb
mov
aas
sub
out
lahf
jnp
mov
cld
xchg
sti
inc
mov
shrl
xor
pop
cmp
sub
outsb
cs
idivb
dec
stc
fsubl
dec
pop
mov
xchg
into
into
inc
mov
sti
pop
pop
lcall
jl
in
xchg
jno
out
mov
inc
jmp
int
stos
out
out
mov
inc
movsl
cmpsl
clc
js
lcall
fdivl
iret
inc
enter
arpl
add
addr16
push
jnp
push
xor
xor
or
dec
sbb
mov
arpl
js
lret
clc
dec
push
incl
push
cltd
sub
adc
xchg
aam
add
mov
icebp
ljmp
add
push
sbb
mov
and
lret
out
inc
pop
test
dec
ljmp
imul
testl
cmpb
push
sbbb
test
je
ds
dec
pop
test
rclb
adc
or
xchg
ret
dec
aam
xor
loop
sbb
out
rcr
sti
xchg
dec
insb
sbb
inc
int3
pop
notb
mov
sbb
pop
push
jae
in
add
push
push
ljmp
mov
add
out
sbb
mov
les
xchg
das
push
mov
mov
mov
sbb
mov
xlat
jge
jmp
sbb
bnd
jecxz
scas
cs
lret
pop
xlat
cmp
cmp
xlat
pop
fbld
ljmp
mov
scas
out
jne
push
dec
sahf
decl
add
ss
mov
icebp
movsb
mov
inc
js
fimull
xorl
mov
push
test
mov
inc
lret
mov
loope
cld
std
cwtl
or
es
shlb
test
jno
mov
lahf
xor
push
sub
push
adc
or
in
jns
cld
lods
scas
pushf
xor
xlat
mov
out
lds
daa
mov
cmp
lret
inc
movsl
dec
adc
xor
push
xchg
addr16
cs
push
jmp
cld
dec
popa
iret
cmpsb
pop
or
and
mov
fisubrs
push
push
xchg
or
scas
repnz
cmpsl
adc
fbstp
addr16
outsb
out
test
cmp
test
xchg
sahf
in
add
lret
push
test
and
xor
or
xor
mov
and
jg
call
xor
jecxz
and
xor
jns
movsl
add
jle
xchg
xchg
pushf
push
sbb
sub
cmp
lods
iret
push
mov
pushf
cmp
les
ds
cmp
icebp
xor
jg
outsl
addr16
dec
pop
and
dec
cmpsb
aas
into
xchg
mov
xchg
xorb
ljmp
popa
ret
sti
push
push
and
inc
rcl
inc
cmp
xchg
imul
cs
out
rcll
mulb
pop
cli
pop
push
stos
mov
cs
sub
jg
arpl
mov
fldt
inc
lds
xchg
inc
in
push
popf
lds
add
test
popl
mov
jno,pn
sbb
sub
or
ljmp
cmp
jne
pop
aad
push
mov
mov
xor
xchg
xor
pop
adc
jecxz
pusha
xchg
movsb
cmp
jnp
stc
inc
pop
push
cmc
les
mov
sbb
sbb
fsubl
ljmp
and
pop
pop
xchg
cmpsb
test
lahf
or
pop
lods
addb
imul
xor
sbb
xchg
or
incl
pop
cmp
repnz
mov
inc
jge
mov
gs
scas
out
dec
or
or
sbb
sub
jns
xor
and
mov
inc
rcrl
fbstp
pop
jmp
bound
dec
jl
mov
xchg
or
int
call
das
pop
jl
and
add
push
add
jmp
out
pushf
aad
pop
push
mov
hlt
cltd
jmp
repnz
push
add
pop
lcall
mov
pop
jle
aaa
stc
je
jno
push
vpmadcsswd
mov
push
cmp
out
xchg
cltd
aaa
mov
or
fs
mov
xchg
aaa
lea
xchg
inc
mov
hlt
xlat
mov
testl
jne
jg
push
inc
pop
inc
gs
fnsave
out
inc
mov
xchg
out
lahf
loope
add
dec
addb
pop
pop
or
jp
int3
pop
lds
xchg
loope
dec
outsl
xor
call
adc
jns
mov
lods
xor
xchg
fisubrl
outsb
push
les
sbb
leave
mov
jp
jge
addr16
mov
mov
shll
jne
aaa
aam
bound
mov
mov
leave
fs
fmuls
sbb
push
popf
and
dec
push
add
push
leave
fcoml
mov
mov
andl
repz
das
xchg
scas
cmpsl
imull
mov
es
and
jne
mov
fimuls
or
pop
push
scas
or
xchg
push
lcall
fiadds
push
jnp
cmpsl
nop
ss
jne
cmp
repnz
pop
jo
xchg
dec
inc
fstpt
push
scas
xchg
in
out
add
add
lret
cmpsb
add
outsb
pop
out
xchg
outsb
push
orb
cmc
push
cmp
in
test
mov
jnp
mov
xchg
dec
mov
test
sbb
dec
aam
dec
in
idivb
push
adc
movl
lret
shrb
icebp
outsb
add
mov
jno
sahf
push
or
add
push
jecxz
cmc
lds
aam
xrelease
mov
mov
cli
cmp
adc
out
daa
out
mov
flds
sahf
pop
cld
lock
cwtl
gs
out
loop
sbb
inc
mov
pop
adc
and
xchg
cmpb
mov
xor
jae
lds
push
enter
xchg
adc
inc
daa
xchg
dec
scas
and
add
in
pop
lahf
jmp
add
outsb
insb
pop
repnz
enter
ret
rolb
pusha
les
rcrb
pop
inc
lret
adc
inc
jmp
test
xor
addb
inc
int3
testb
sbb
ret
mov
or
cmp
cltd
adc
pop
push
add
icebp
test
insl
cli
inc
push
bound
enter
sub
gs
jo
push
sbb
int
into
push
daa
jg
jmp
enter
popa
insb
jne
xor
or
popa
or
xchg
push
jae
lcall
and
subb
add
or
xor
das
jmp
mov
and
xchg
scas
add
fs
or
repnz
lahf
fs
adc
dec
adc
xchg
int
movsb
fs
adc
inc
cmp
inc
ss
mov
jge
repz
push
mov
dec
aad
mov
sbb
pop
pop
jg
lcall
mov
jg
pop
and
ljmp
or
repz
add
out
mov
push
push
mov
dec
adc
shl
outsl
sbb
pop
mov
les
dec
mov
lcall
mov
mov
pmaddwd
jg
sbb
dec
lds
jbe
movsl
adc
xor
ret
lods
sbb
out
unpcklps
sub
adc
cltd
jecxz
repnz
xorb
dec
jle
shrb
mov
fcmovnu
adc
adc
push
cli
lahf
add
xchg
jecxz
sub
mov
jge
out
push
lds
push
cmp
lods
int3
sub
pop
stos
sar
adc
mov
in
clc
xlat
jle
cmp
and
inc
push
adc
test
xchg
imul
jg
pop
xor
inc
dec
inc
xlat
adc
and
stc
jno
inc
hlt
test
or
sub
mov
loop
insl
frstor
or
imul
clc
or
inc
and
std
mov
cmp
mov
xchg
mov
jne
adc
ret
cmc
jo
push
sahf
xchg
dec
xchg
sbb
jb
loopne
stc
out
ljmp
mov
inc
jge
sub
arpl
mov
insl
aas
cmp
add
sbb
sbb
pop
movsl
out
cwtl
mov
stos
cwtl
inc
inc
adc
push
sbb
mov
inc
pop
lret
out
dec
sarb
lods
lods
fwait
adc
mov
adc
test
mov
lods
loope
lea
push
pushf
push
or
xchg
dec
movsb
push
cmp
xlat
add
repz
stc
clc
xor
je
jns
pushf
shll
inc
adc
repnz
in
mov
gs
imul
jne
sbb
jl
popf
adc
or
jmp
sbb
pop
sub
icebp
xlat
cs
out
ffree
xchg
out
ja
mov
insl
test
mov
stos
in
adc
andl
adc
push
xor
pop
mov
into
and
clc
das
orb
nop
adc
lods
loopne
xchg
and
out
and
inc
inc
mov
out
push
sub
out
ret
sbb
out
xchg
cld
pushf
cwtl
cmc
loope
and
jl
push
orb
adc
dec
push
adc
inc
loope
or
mov
addr16
lods
jg
or
adc
cmp
adc
cmpsb
out
ja
cmp
aas
insl
ja
xor
dec
add
aaa
popf
rcrb
sahf
fs
sub
sahf
push
jno
icebp
sbb
cmp
loopne
in
loopne
das
adc
int
pop
cld
sahf
push
mov
out
rclb
call
lret
xor
je
cmp
aaa
popl
inc
repz
mov
les
cmp
jne
outsb
add
jbe
xchg
into
adc
mov
arpl
xchg
js
jb
mov
imul
popa
xchg
cmp
inc
cs
xor
xchg
nop
into
repnz
pop
lcall
pop
repnz
xchg
mov
mov
or
xor
idivl
je
mov
or
xor
cld
cmpsl
inc
ja
fs
xchg
stos
shlb
addr16
xchg
testb
popf
and
dec
xor
adc
mull
adc
pusha
adc
sub
leave
movsl
cmp
arpl
cmp
xor
mov
loope
imull
out
dec
add
sbb
icebp
mov
inc
aad
xor
loope
rol
subb
mov
push
mov
lahf
add
or
mov
mov
pusha
mov
outsl
imul
shrb
mov
sbb
cmp
fdivrp
jnp
ficoml
pushf
mov
cltd
fcoms
push
adcl
ret
jno
jno
cmp
rolb
jb
push
mov
mov
lret
data16
loopne
mov
add
sub
and
je
or
inc
dec
fsubs
popf
leave
movsb
or
mov
mov
pop
push
mov
lds
cli
dec
in
fwait
aaa
push
clc
or
jb
aas
shlb
ja
push
shl
mov
loope
and
and
sub
fldt
or
push
sub
pop
call
fbstp
rorl
pop
jecxz
xchg
jg
mov
xlat
cltd
push
dec
mov
and
mov
dec
xor
mov
fucomi
inc
lcall
mov
xor
push
test
mov
or
inc
fs
mov
jb
mov
pop
idivb
adcb
mov
pop
sub
xchg
int
push
stc
pusha
lcall
push
dec
std
orb
or
xor
dec
repz
mov
pop
in
inc
xor
test
mov
xchg
jno
lods
test
orl
mov
out
cmc
xchg
mov
dec
push
fwait
jg
icebp
push
mov
mov
popa
test
sub
aaa
cmpsl
out
cmp
fldpi
dec
adc
call
cmpsb
outsl
andl
mov
mov
cmp
xlat
aam
jo
sub
sbb
int3
xor
xor
nop
out
dec
imul
jle
popa
stos
ds
fnstsw
push
fmull
pushf
dec
inc
xor
cmc
dec
cmpsb
mov
inc
adc
sbb
lock
mov
addr16
and
sbb
in
mov
lret
push
int
pop
mov
mov
adc
cmpsb
and
sbb
push
mov
loopne
inc
mov
and
lods
xor
mov
mov
mov
sbb
mov
push
lret
xchg
shrb
push
mov
pop
out
es
fdivr
jmp
gs
push
out
adc
pushf
pusha
sahf
bound
ja
xor
push
push
push
cmp
mov
mov
push
mov
adc
outsl
in
ret
add
mov
pop
xchg
sub
cltd
sti
cmpb
mov
mov
push
jne
jmp
test
mov
cmp
mov
sti
repnz
outsb
add
pop
push
lret
jl
in
fs
cwtl
ss
pop
loop
scas
inc
inc
lahf
mov
in
lea
push
adc
add
mov
push
mov
cmp
jg
push
push
std
jns
in
lods
jl
cs
sahf
mov
dec
imul
ds
adc
adc
sbb
fdivrs
stc
pop
cmp
cli
repnz
loop
cmpsl
ja
adc
or
add
sbb
fsub
cmp
ficoml
or
fsub
les
call
push
insl
jle
xchg
push
pusha
cmp
popa
les
push
push
into
xchg
inc
in
jns
jle
xor
cld
add
in
and
inc
inc
out
mov
lods
push
mov
mov
mov
adc
add
pop
out
mov
test
mul
imul
pop
int3
daa
out
mov
mov
ret
xor
in
sbb
pop
adc
push
int3
popa
pusha
adc
into
repz
test
jg
push
fwait
adc
mov
mov
push
jnp
adc
dec
mov
loop
cltd
test
je
fnstcw
and
cmp
out
fsubrl
ret
in
push
pop
pushl
lret
add
jmp
adc
imul
sbb
shll
movsb
mov
jmp
jae
sbb
push
mov
mov
sub
das
ret
jno
loope
std
sub
shll
dec
xorb
testb
pop
lcall
stos
mov
cmpl
push
jo
pop
adc
out
lds
imul
fidivl
test
pop
data16
cs
fs
dec
or
mov
int3
ficomps
insb
lret
add
out
dec
rcrb
sub
cmpsb
push
ja
pop
lock
insb
mov
cmpb
lcall
xor
fstl
add
dec
into
stc
fnstsw
sbb
das
lahf
mov
mov
adc
fsubp
rcrl
or
js
mov
jb
xchg
xchg
outsl
mov
ret
jne
dec
xor
fiaddl
jae
arpl
loope
cmp
pminsw
add
lods
aad
add
xchg
mov
and
pushf
out
push
sub
inc
mov
xor
scas
jge
sbb
sub
xchg
fidivrs
rorb
ljmp
mov
ss
push
and
push
rcl
out
mov
sbb
cmpsl
sti
leave
dec
hlt
mov
mov
pop
cld
cmc
clc
push
add
inc
out
fnstenv
sbb
jmp
lock
fimull
push
mov
sbb
jnp
xor
adc
mov
mov
mov
int3
sub
jns
pusha
iret
sahf
fimull
pop
mov
push
cmpsl
xor
aam
xchg
cmc
fwait
sub
or
in
or
add
lods
insl
cmp
jne
aaa
fcomip
mov
test
mov
and
iret
sahf
add
outsb
shlb
cmc
or
inc
mov
aas
xor
jnp
dec
adc
mov
inc
lds
xchg
lret
fs
push
fmul
xchg
addr16
sub
daa
stc
stos
fsubrs
fcmovne
cwtl
fnstcw
jb
push
xor
outsl
xor
testb
stos
mov
inc
pushf
mov
inc
cmp
adc
sub
adc
pushf
lds
mov
and
mov
es
xchg
jb
sub
sbb
imul
or
shlb
sbbl
or
and
mov
shl
enter
data16
xchg
pop
jae
lock
lea
in
loop
cmp
icebp
leave
dec
lcall
hlt
bound
rclb
in
lahf
dec
xchg
mov
add
cmc
inc
mov
icebp
gs
cmpsb
push
xor
inc
or
push
xchg
fidivs
push
in
enter
inc
pop
cmpsb
xor
mov
dec
arpl
jno
stos
andl
movsb
pop
sub
in
cmp
add
sbb
fstpt
or
mov
in
pop
xchg
push
fisttps
aaa
mov
shl
push
lahf
ljmp
sti
shl
leave
pop
sbb
cwtl
scas
mov
mov
xchg
inc
out
lods
xchg
shrl
add
lea
loope
sub
sub
cli
push
push
sbb
ljmp
mov
cmc
out
neg
xor
pop
add
xor
int3
fwait
sarb
int3
lods
rcrl
mov
mov
mov
cmp
stc
lock
orl
sub
fmuls
sub
cld
add
int
aas
inc
in
fadd
mov
xor
inc
rcll
pop
dec
xchg
add
idivb
pop
and
xor
cmc
cmp
jnp
mov
cmp
push
dec
inc
cmc
sahf
in
push
inc
loope
sahf
and
inc
js
out
cmc
cmpb
rcll
mov
or
jns
inc
push
dec
add
sub
xor
dec
out
adc
imul
inc
ss
cs
js
dec
testb
aaa
imul
test
sbb
and
cmpsb
or
fst
gs
push
and
inc
push
fsubs
push
dec
push
and
fmulp
jo
jne
cld
jne
and
cmp
popl
jns
sbb
dec
pop
xlat
pop
pusha
adc
adc
push
sbb
in
pop
mov
movsb
decb
jp
push
mov
jno
pop
into
xor
out
pop
jp
cmp
or
xchg
push
jae
or
jnp
sub
mov
lret
addr16
xchg
sbb
push
jno
das
sub
ret
inc
inc
std
out
sub
cs
pop
push
pop
mov
push
xchg
fs
icebp
cmc
mov
test
cli
hlt
filds
lods
vcvtpd2ps
add
mov
cltd
add
push
sub
adc
cmp
sub
fldt
jnp
mov
rolb
push
jg
adc
ret
sahf
fwait
test
xor
mov
inc
inc
jne
outsl
mov
sub
or
pop
cs
out
jl,pn
xchg
and
loope
in
jecxz
ffree
jno
pop
mov
pop
mov
lahf
pop
aad
mov
cli
aam
sub
jg
xchg
divl
pop
leave
icebp
iret
pop
or
fwait
jns
cmp
sub
outsb
mov
mov
stos
adc
test
mov
mov
insl
xor
xor
push
add
jle
int
jp
xchg
cmc
filds
and
aaa
jae
jo
xor
in
inc
jo
lcall
jo
fstps
sub
sbb
lret
mov
adc
sub
outsl
repz
stos
iret
clc
addl
in
and
je
fsincos
pop
stc
pushf
inc
mov
incl
cmp
jne
sbb
rcrb
mov
cmpsl
pop
xor
xchg
cmp
sub
lods
stos
cltd
pop
adc
sbb
test
and
mov
sub
call
movsb
dec
cmp
lcall
xchg
test
add
adc
js
jo
iret
popf
sub
popl
mov
repnz
sbb
repnz
movsl
add
mov
lock
lea
jl
push
decb
and
arpl
mov
gs
push
outsl
cmp
idiv
leave
fists
cltd
movb
sbb
xor
stc
adc
cmp
push
mov
pop
popf
mov
iret
xchg
jo
fwait
cmp
cld
mov
jno
jge
mov
push
mov
mov
je
dec
dec
je
or
test
cmc
mov
mov
and
jp
inc
xor
add
decl
mov
sub
sub
cmc
loope
push
loope
shlb
add
cmpxchg
push
loopw
mov
int
sbbb
inc
xchg
pop
stc
je
les
xor
insl
xlat
mov
hlt
dec
cmp
inc
test
add
cmpsl
add
jns
pushf
sbb
es
push
xchg
xchg
ja
cs
adc
pop
adc
je
xchg
mov
repz
pushf
or
jg
loopne
je
test
mov
int
mov
jb
pop
cmc
shll
sbb
movsb
into
bswap
cmp
mov
out
dec
fsubrs
or
sbb
and
scas
sahf
cmp
adc
gs
dec
adc
pop
dec
and
mov
add
repz
rclb
int3
iret
inc
rclb
loopne
or
inc
mov
jns
cwtl
cmp
xorl
and
mov
or
psllq
mov
and
inc
je
cmp
and
dec
mov
jno
inc
sub
adc
js
xor
jge
mov
xor
clc
xchg
imul
jle
movsl
jo
xchg
adc
mov
daa
fsubrl
das
imul
push
adc
sub
adc
mov
idivl
pop
sub
mov
mov
push
or
aaa
cltd
jns
scas
mov
mov
adc
orb
out
sbb
inc
mov
pop
rclb
cmpsl
xlat
call
adcl
push
xor
mov
out
addb
xor
jecxz
stos
fcmovbe
dec
cmp
push
in
int
push
push
ljmp
adc
scas
xlat
mov
cli
jle
out
xor
push
sbb
aam
sahf
lods
cmp
xchg
fcomi
cmp
adc
je
dec
xor
lock
xchg
jns
decb
mov
pop
or
lret
add
push
cli
and
xor
stos
call
dec
inc
in
aam
jecxz
or
cmp
out
mov
testb
cltd
sbb
mov
sub
int
push
push
push
in
mov
xchg
and
dec
inc
in
aam
push
inc
xor
inc
xor
jg
mov
inc
scas
addr16
adc
stos
les
lcall
and
jae
not
mov
ret
icebp
cwtl
sahf
push
and
xor
aaa
in
pop
sbb
mov
cmp
lods
scas
enter
jmp
pop
js
add
mov
nop
mov
push
imul
push
xorl
push
pop
push
pop
test
lock
jae
sbb
dec
dec
scas
icebp
js
ljmp
push
sub
adc
sub
stos
data16
push
je
mov
pop
dec
sub
icebp
add
pushf
xor
cmp
loopne
mov
loopne
and
mov
lret
jbe
pop
test
repnz
scas
pop
xor
sub
mov
adc
sbb
xlat
test
aam
xor
pop
jge
mov
pusha
adc
mov
pop
xor
and
dec
fisttpl
pop
les
sarb
mov
je
xor
je
xchg
unpckhps
adc
cld
lahf
or
jg
data16
daa
mov
cmpsl
mov
aad
rcrb
lahf
jmp
push
dec
mov
sbb
adc
js
mov
push
mov
jns
xchg
xchg
dec
xchg
dec
mov
mov
dec
adc
imul
jbe
lock
dec
xorl
shlb
and
movsl
push
adc
popf
add
idivl
mov
jge
mov
lods
pop
xchg
cli
cmp
inc
dec
and
xchg
add
pop
jmp
push
sub
mov
pop
mov
jmp
lret
xchg
mov
jmp
xor
fwait
arpl
xor
push
jns
addl
imul
mov
in
fsubs
xor
xchg
mov
ss
push
cwtl
dec
call
jno
cld
mov
loope
mov
movsl
lcall
add
push
or
ja
fwait
test
cmp
out
fcoml
mov
or
xlat
push
out
xchg
stos
xchg
shrb
xor
loop
jne
and
or
call
addr16
mov
or
xchg
xor
and
roll
das
sbb
push
cmc
ret
xchg
xchg
mov
testb
adc
cmpsb
jb
xchg
fwait
jp
insb
adc
mov
addr16
je
int
cmp
cmpsl
mov
int3
mov
inc
jno
pop
fstp
movsb
mov
xchg
add
mov
sub
insl
or
mov
xchg
xor
ja
dec
sub
mov
lret
pop
lret
ds
push
mov
into
cli
lods
addr16
inc
xor
and
mov
std
aas
fcomip
bound
push
push
add
push
adcl
aad
outsl
jmp
ja
lock
mov
cld
sbb
mov
insb
lahf
push
scas
lock
adc
nop
outsl
adc
and
adc
push
aas
jno
jnp
jecxz
adc
dec
xchg
xor
xorl
pushf
push
ss
in
lea
fildl
push
js
ljmp
out
in
inc
in
cmp
push
mov
add
xor
dec
xor
loopne
jnp
mov
call
or
and
ret
into
fistpl
mov
rcrl
pushf
push
adc
sbb
jb
out
xchg
arpl
and
das
cmc
movl
and
jp
dec
push
nop
flds
lret
jl
leave
jl
pop
inc
filds
sbb
fists
inc
push
sub
jno
iret
inc
push
lock
mov
dec
push
in
cmp
cmpsb
inc
stos
push
fisubrl
add
aad
pop
leave
sar
pop
mov
outsl
fcmovb
and
add
cmp
cmp
xchg
mov
jns
and
arpl
adc
loopne
xchg
adc
aaa
sub
xchg
jne
jecxz
das
dec
pop
sbb
ficoms
and
lret
fwait
insb
push
sub
shrl
cmp
cwtl
fucomip
pop
into
je
inc
ficomps
pop
cmp
inc
outsb
push
das
xchg
sub
xchg
scas
mov
pop
inc
bound
mov
xor
xchg
sub
sub
in
call
xor
adc
jb
iret
rcll
xlat
shl
jl
out
mov
cltd
or
or
mov
imul
insb
mov
decb
dec
pop
into
daa
mov
in
cmc
hlt
pusha
mov
pop
jge
in
fdivs
dec
mov
mov
add
ret
dec
lds
adc
and
lahf
aad
mov
sbb
sub
cmp
pusha
stos
into
repnz
cmp
aam
jo
mov
push
xchg
pop
scas
into
test
shrl
push
push
add
and
pusha
and
rcr
addr16
rorl
xchg
add
mov
jne
pop
stc
adc
xor
lock
push
fnsave
or
call
pushf
mov
sti
cwtl
jmp
sbb
mov
jmp
cltd
js
or
leave
xor
adc
and
mov
decl
push
sbb
mov
jg
push
test
xor
adc
outsb
dec
push
pop
hlt
pop
push
or
inc
sbb
add
and
sbbl
xchg
push
imul
mov
cs
xor
pusha
xchg
insl
lds
insb
cld
mov
loop
add
outsb
js
mov
ret
fcomps
pop
ljmpw
ss
negb
fisubrs
mov
xor
and
inc
mov
xor
rclb
divb
inc
test
mov
cmp
mov
adc
test
xorb
or
mov
pop
pop
push
push
insl
jecxz
in
dec
adc
push
xchg
inc
or
xchg
or
decl
mov
xchg
clc
pop
scas
sub
scas
cmp
mov
sub
ja
loope
cmp
mov
imul
mov
popf
cmpsl
mov
add
mov
fistpl
xor
or
xchg
mov
and
cmpsl
push
lcall
scas
jmp
add
pop
pop
test
addb
lcall
and
sbb
je
xchg
dec
arpl
dec
xchg
sbb
lock
ret
xchg
cld
dec
jae
xor
test
pop
ret
or
call
in
mov
ret
jecxz
xor
push
and
pop
jecxz
imul
and
mov
mov
mov
push
cmp
pop
dec
nop
or
rorl
insb
js
daa
lock
mov
jle
fstl
es
test
stos
ret
rorb
mov
adc
sbb
leave
cld
pop
sbb
cmp
in
xchg
add
leave
xchg
cmpsl
jmp
inc
inc
sub
push
lea
jbe
nop
cli
shrd
repz
lret
or
dec
cli
dec
into
mov
jnp
push
arpl
mov
or
adc
push
pop
pushw
in
adc
fadds
ret
mov
lods
ss
xchg
fsubrs
xlat
iret
jne
cmp
aas
add
fcomip
xor
pop
popa
popf
push
and
dec
fistps
sub
inc
pop
push
ficompl
adc
dec
add
cli
ror
sahf
sub
jge
jae
jmp
mov
xchg
jne
cmp
mov
jp
popa
jmp
mov
into
push
fs
int
or
outsb
or
mov
test
jmp
repz
add
xchg
jmp
jne
inc
jl
jno
stc
sbb
push
std
nop
lods
in
stos
sub
add
mov
xchg
bound
ret
cmpsl
outsl
ss
xor
xchg
int
daa
xor
inc
pop
pop
sub
movsl
xchg
pop
arpl
ljmp
js
test
ds
sbb
cwtl
push
add
pop
sub
inc
dec
sbb
out
sahf
rclb
push
adc
fists
fdivp
les
sub
sar
shl
js
aam
mov
and
rcrb
pop
test
or
pop
dec
jno
arpl
jp
or
mov
sbb
cld
jo
cmp
into
and
add
cld
cld
inc
or
rcr
out
outsb
and
cmp
stos
jnp,pn
in
popa
lret
fmuls
pop
mov
dec
push
inc
fs
lock
imul
xchg
out
out
outsb
push
inc
xor
jle
sbb
and
xchg
gs
dec
mov
sub
or
ficoms
mov
dec
repz
stos
xchg
cmp
icebp
or
xor
stos
mov
mov
push
cmp
and
sbb
xorb
gs
les
cwtl
int
aam
rorb
mov
sti
mov
jnp
loope
fwait
popf
jns
xor
addr16
dec
pop
rol
sub
jnp
jmp
inc
jle
push
jbe
and
pop
sub
jno
or
lods
adc
cmp
inc
cmpsb
cmp
mov
and
cmp
outsl
dec
iret
add
jge
gs
sub
loope
arpl
int
cli
mull
cmpsb
mov
mov
sub
lds
test
fs
lcall
loopne
and
xchg
and
inc
pop
js
inc
imul
cli
stos
or
cmp
add
sub
inc
mov
mov
lretw
xor
inc
push
mov
test
in
mov
pop
aad
cmp
sbb
nop
in
aas
jp
mov
ljmp
cmp
sarb
sahf
add
popf
mov
sub
add
cs
adc
arpl
inc
add
cmpsl
cmp
xor
and
fdivrs
iret
pusha
xchg
mov
mov
les
or
mov
adc
fucomp
iret
roll
add
lods
in
or
jmp
cmc
xchg
jno
mov
iret
pusha
cmp
cld
mov
scas
xchg
int
jb
or
and
dec
cld
pop
push
push
mov
pusha
fwait
xor
push
and
clc
sub
std
xor
push
ds
mov
das
xchg
lock
int3
fsubrl
mov
arpl
cmp
fmuls
pop
jg
movsl
daa
add
roll
xchg
jae
lcall
xchg
dec
dec
int3
inc
lcall
or
fildll
and
ret
xchg
push
xchg
mov
inc
lret
mov
jo
negb
adc
add
test
xchg
fwait
leave
leave
push
jnp
cmp
pop
jmp
or
jb
sahf
shrl
insb
jnp
push
stos
loopne
bnd
push
pop
in
pop
popa
xchg
insl
fwait
adc
add
pop
scas
std
push
outsb
mov
push
lods
push
push
push
sbb
inc
fisttps
jmp
test
mov
fstpl
pop
fdivs
add
xor
fbld
inc
mov
cmc
cmp
sahf
neg
das
pop
cs
jmp
repz
lret
jne
sub
hlt
pop
cmp
mov
sub
cmpsb
aas
or
iret
loop
mov
mov
push
test
jb
js
lods
std
je
bound
push
in
mov
inc
xorb
push
xlat
jno
pusha
mov
leave
movaps
sub
add
push
jmp
inc
add
push
xchg
dec
mov
stos
adc
xchg
xchg
mov
add
cmp
mov
out
inc
mov
out
pop
mov
cmp
adc
lods
scas
in
and
movsl
in
xchg
ret
add
pop
mov
cmp
and
mov
or
insb
pop
xchg
push
cwtl
xchg
inc
stos
sub
or
shrw
pop
cmp
mov
and
test
cmpsb
js
subl
mov
push
pmuludq
pop
sub
or
insb
das
fadds
sub
fs
test
xor
idivb
packssdw
xchg
inc
xchg
adc
adcl
xchg
sbb
popa
mov
sub
mov
pop
shll
mov
jmp
arpl
out
mov
movsb
push
fsubrs
inc
xchg
lret
push
jmp
sbb
xchg
dec
push
jp
adc
ljmp
mov
pop
push
insb
mov
fstpl
insl
scas
mov
pop
jne
test
scas
ror
repnz
js
outsb
lret
pop
and
test
add
xchg
mov
inc
filds
outsb
aam
push
bound
add
jg
pushf
dec
mov
ficoml
adc
mov
jp
pop
xchg
test
fxch
es
adc
xchg
test
aaa
or
in
and
repnz
cmc
incb
pop
dec
das
jb
shl
repz
xor
sbb
cmp
cs
xchg
subb
nop
mov
loopne
mov
pop
adc
ret
adc
aaa
jmp
movsb
loopne
mov
mov
xor
adc
add
fcmovnb
lcall
es
sub
jmp
mov
jae
mov
mov
imul
aaa
je
pop
and
fs
shlb
pop
call
add
addr16
mov
xor
pop
adc
ret
dec
pop
cmpsb
push
out
push
xchg
adc
and
and
dec
int
sbb
dec
clc
cmp
mov
push
lret
leave
pop
fwait
sbb
lret
cmc
inc
mov
dec
or
mov
fisubl
orb
jo
lret
lock
mov
popl
push
loopne
add
and
sahf
xchg
outsb
clc
push
lea
or
mov
add
outsl
push
xchg
jnp
arpl
mov
xor
lahf
fsubrl
jge
inc
dec
dec
icebp
hlt
xor
imul
inc
push
mov
mulb
xor
stos
adcb
mov
sub
push
xor
and
or
call
or
daa
lods
jecxz
dec
jne
add
pop
inc
sahf
ja
sub
xchg
hlt
out
lahf
inc
data16
daa
int3
mov
add
push
push
inc
mov
aaa
in
out
mov
sub
xchg
loopne
loopne
movsl
mov
and
gs
and
sahf
jecxz
pop
sub
aam
inc
lret
fiadds
sti
inc
outsb
sub
je
jno
repnz
cmp
fs
sbb
pop
or
mov
fwait
jmp
cmp
jmp
cmc
mov
xor
sbb
inc
sti
inc
iret
icebp
fiaddl
cmpsl
daa
adc
cmp
cmpsb
insb
imul
int
scas
jle
push
test
dec
xchg
test
cmp
nop
fdivs
fistps
xchg
xor
sahf
ss
jne
test
mov
jg
xor
inc
jo
jns
fidivl
dec
movsb
cmpsl
dec
dec
pusha
test
fidivl
pop
mov
inc
xchg
adc
es
imul
xor
sbb
ss
mov
xchg
rorl
and
shrl
popa
mov
ljmp
push
in
clc
les
fucomp
sbb
bound
jg
push
ds
xchg
insl
icebp
inc
jg
mov
mov
data16
mov
cmp
lahf
cs
inc
pop
popa
pop
push
and
pop
leave
add
bound
in
lret
fucompp
shlb
jg
add
or
inc
mov
push
stos
hlt
mov
pop
int
hlt
jecxz
dec
or
push
inc
sbb
adc
fisttps
jl
dec
inc
add
sbb
inc
or
pop
mov
scas
push
sub
test
ljmp
xchg
fcoms
jb
xchg
push
out
out
cmp
std
pushf
mov
arpl
jnp
aad
ss
les
and
sbb
shlb
inc
mov
sub
shrd
rol
mov
xchg
sub
imul
shlb
in
inc
push
lock
jae
jae
jmp
lods
je
fildl
cwtl
mov
aas
mov
test
fsub
xchg
loop
push
or
divb
xor
mov
mov
sbb
dec
jecxz
cmp
xor
jns
insb
sbb
mov
mov
in
outsb
imul
dec
scas
inc
push
aaa
inc
out
ret
mov
adc
cld
ficompl
out
movsl
inc
out
repnz
inc
rcrl
pop
or
cmp
mov
mov
mov
add
aaa
jmp
pop
pop
cmpsl
verr
sbb
pop
test
cmp
push
bound
lds
fldt
mov
mov
das
mov
push
aaa
add
push
shrl
sbb
pop
aas
lock
int3
aas
adc
popf
xor
xlat
or
sti
mov
jno
sbb
dec
outsl
jo
and
loopne
loop
jnp
test
mull
iret
jge
mov
xchg
test
mov
jns
data16
cmovg
inc
fimuls
push
xor
pop
pusha
add
adc
insl
cmc
or
fmuls
sbb
push
adc
aaa
push
jl
xchg
imul
inc
cmp
mov
lods
mov
outsl
cmp
and
or
mov
daa
push
cmpsb
dec
sbb
and
fdivrp
fsubrs
xor
dec
ret
daa
inc
mov
or
roll
xor
mov
or
jmp
sbb
push
jo
lds
add
mul
jmp
daa
jmp
sbb
daa
rol
inc
sub
aad
inc
subb
push
mov
out
cltd
xor
test
in
fmull
stos
mov
insl
insb
ss
dec
push
inc
ljmp
sbb
fwait
and
adc
leave
sbb
out
push
xchg
test
mov
add
xor
outsb
sbb
loopne
arpl
dec
dec
or
int3
dec
in
mov
push
mov
mov
arpl
inc
rcrb
cmp
lds
pop
ret
mov
aad
fnstenv
fwait
icebp
mov
lcall
leave
cmp
sub
icebp
jo
movsb
test
jg
sbb
daa
push
mov
mov
clc
dec
lahf
outsl
and
mov
ja
xor
dec
cmpsb
sub
sbb
mov
cmpsl
jmp
mov
jecxz
adc
jecxz
mov
pop
xchg
or
jmp
cli
call
jg
test
dec
dec
cwtl
dec
lods
addl
loop
xchg
adc
in
adc
loopne
and
ds
lock
fnsave
add
adcl
or
pop
into
andl
xchg
add
cmp
push
inc
fstl
and
and
sbb
mov
ja
popa
push
mov
out
je
push
xchg
ja
dec
adc
pop
stos
test
xchg
sbb
push
jnp
lock
js
mov
outsb
into
jno
jge
clc
jl
test
cmp
pop
cmp
clc
enter
mov
or
inc
add
hlt
mov
divb
sub
or
push
sbb
mov
push
aaa
aad
std
mov
xor
fmul
ror
ss
adc
xchg
test
push
fisubl
mov
dec
xchg
push
sub
sub
lcall
leave
mov
lds
fistpll
pop
mov
loopne
mov
lods
cltd
sbb
sub
xchg
or
stos
or
mov
jg
pop
lock
inc
xchg
mov
jb
cmp
sahf
jo
sub
imul
inc
lock
fs
iret
call
mov
or
sbbl
mov
dec
mov
ret
xchg
mov
xor
in
mov
mov
sbb
xchg
cli
adcb
lcall
cmpsb
insl
sbb
movsl
scas
jge
out
jmp
sub
xchg
adc
imul
pushf
inc
cmc
jbe
enter
subl
arpl
push
bound
sub
cmp
xor
push
jo
and
out
in
loop
xchg
scas
inc
in
cmp
dec
das
cmp
int3
pop
ss
por
adc
out
subl
pop
addr16
or
xorps
mov
inc
ss
and
into
movsl
mov
inc
xor
and
aam
loop
jo
mov
xchg
xchg
enter
inc
mov
imul
add
inc
add
ret
cmpsb
push
iret
enter
jecxz
data16
or
adc
iret
mov
jp
or
mov
adc
pop
push
jge
pop
xchg
pop
mov
or
dec
lock
mov
dec
xchg
xchg
call
fimuls
shrb
mov
lret
dec
notl
and
rcpps
adc
sub
arpl
mov
lcall
mov
adc
pop
and
jo
testl
jne
inc
fnsave
int3
lcall
arpl
aas
inc
or
pop
jmp
xchg
out
sbb
xor
pop
shl
push
aaa
mov
in
add
sbb
mov
divl
es
push
push
in
sbb
inc
sahf
data16
inc
loopne
sbb
enter
xchg
sbb
jle
pusha
pop
pop
aad
xor
inc
or
and
imul
jecxz
testl
sub
sub
repz
adc
sbb
mov
nop
cmp
xchg
incl
sti
loope
les
addr16
popf
pop
fsub
mov
mov
test
les
lret
test
jmp
ds
stc
push
and
add
int
pop
inc
int
aad
vminss
dec
mov
ss
hlt
loopne
iret
into
mov
sahf
pop
hlt
mov
xchg
imul
mov
lock
inc
mov
xor
cmp
ljmp
outsl
dec
xor
xchg
daa
mov
jae
dec
adc
add
and
push
cwtl
aad
xchg
lods
mov
jae
daa
outsb
mov
bound
and
inc
int3
jo
dec
jmp
ficomps
inc
jmp
fidivl
imul
jle
mov
and
outsb
add
popa
xchg
push
and
push
lods
inc
out
movsb
scas
aas
jne
test
inc
rcrl
dec
xchg
lods
mov
inc
dec
or
pop
pop
jno
cltd
arpl
in
fld
ret
jno
js
ss
fnstsw
push
rcll
inc
dec
pop
incb
scas
push
jecxz
cmpsl
jne
es
pop
cmc
or
and
ljmp
aas
insl
int
popf
insb
mov
cmpsb
fisubl
pop
jno
jne
dec
mov
xor
aad
dec
jmp
mov
cmpsl
cmp
mov
sahf
adc
sub
ja
outsb
fstp
mov
sub
cmpsb
ja
insl
jo
js
jne
lea
sarl
outsl
gs
sti
pop
cmp
fcoms
jle
lods
sahf
in
adc
in
mov
insb
xchg
dec
lods
mov
mov
add
jecxz
arpl
fmuls
jno
adcl
jl
xchg
jecxz
mov
and
dec
pusha
arpl
mov
push
test
pop
dec
stos
dec
or
inc
push
mov
mov
in
push
xor
jmp
jmp
xor
and
dec
sbb
pop
pop
shrl
xchg
sti
repnz
add
leave
mov
xor
lahf
roll
pop
test
xchg
lods
jge
je
movsl
inc
sbb
sti
lret
mov
into
test
adc
daa
lods
dec
add
ds
jb
jae
pop
jnp
cmpsb
mov
fisttps
mov
movsb
addr16
and
and
test
adc
mov
sbb
sub
adc
push
sbb
push
sbb
out
jns
jle
imul
xor
push
dec
fistps
jmp
sub
jae
mov
cs
inc
push
cmpsb
xchg
aaa
repnz
or
and
cwtl
fstps
adc
in
cmp
mov
mov
xor
cmpxchg
jo
add
xchg
popa
mov
mov
cltd
xchg
pop
hlt
in
adc
sahf
mov
insl
into
in
aaa
sbb
shll
pop
jmp
and
mov
cs
subb
test
pop
mov
ds
enter
add
imul
dec
xor
dec
pop
fmuls
mov
es
mov
dec
jno
fsubrl
lods
stos
mov
loopne
dec
enter
jp
sub
shlb
push
and
push
sbb
mov
sub
xchg
xchg
lds
pop
cmp
adc
add
push
mov
xchg
arpl
pop
inc
clc
mov
ss
popa
cmp
aaa
jo
test
push
rcrl
mov
mov
js
mov
lahf
pop
sub
test
outsb
cs
stc
bound
mov
out
or
jns
orb
cli
aas
jge
cld
imul
filds
adc
rolb
mov
popf
call
cmp
test
sub
scas
jns
sub
mov
aam
rclb
mov
xchg
icebp
scas
outsb
pop
shll
sahf
push
xor
stc
int
fcoms
cli
arpl
sub
addr16
cmpsb
xor
lods
ja
inc
adc
jmp
jno
inc
mov
pop
jp
mov
adc
shl
adc
adc
xchg
xchg
pushf
rorb
daa
jnp
sub
shrb
and
scas
sbb
je
fwait
call
xchg
push
sbb
in
pop
in
xchg
push
pop
ror
mov
ficoml
iret
push
add
jge
dec
into
cmp
ljmp
inc
xor
inc
iret
adc
xchg
lods
mov
std
gs
mov
mov
aas
xor
or
pop
jp
and
test
call
xchg
and
stc
push
xor
dec
add
jbe
scas
mov
leave
f2xm1
iret
push
jge
and
aad
or
ret
imul
fwait
and
lea
add
ljmp
mov
push
aad
sbb
push
int3
pop
fs
dec
gs
js
add
add
ds
mov
mov
call
loopne
dec
ret
sbb
inc
push
cmpsb
lahf
add
addr16
and
mov
mov
sbb
xchg
hlt
repnz
arpl
loope
outsl
xor
xor
les
mov
xorl
out
mov
adc
add
fimull
or
js
ss
add
cmp
fs
jo
addr16
sbb
gs
mov
inc
dec
frstor
and
mov
les
sbb
ja
mov
push
pushf
jb
movsb
out
int
sub
aad
add
dec
dec
fwait
pop
es
and
popa
sbb
jge
js
out
movsb
jge
out
inc
addb
dec
rolb
aaa
out
inc
xchg
or
inc
lahf
ficompl
and
jo
mov
roll
movsl
pop
into
fs
fs
add
xor
push
xchg
xchg
mov
or
adc
setbe
pushf
pop
push
jnp
xlat
pop
incb
push
call
out
dec
cmp
test
add
mov
xor
push
jge
fmulp
push
fmuls
pop
xchg
and
jae
or
mov
dec
int
xchg
mov
sub
sub
mov
fs
jp
aas
and
ret
fidivrs
ds
je
add
std
insl
popa
dec
add
fsubrl
adc
and
loopne
or
inc
div
and
push
xchg
icebp
xchg
jle
stc
lcall
push
mov
cmp
pusha
mov
int3
and
or
fdivrs
sbb
xchg
sub
xchg
xor
mov
repz
cmp
addr16
dec
push
in
ja
cs
adc
aad
cmpl
add
dec
aaa
xchg
imul
scas
dec
push
stos
repz
add
jnp
int
stos
loop
int
mov
hlt
bound
ret
jle
out
xor
push
sbb
xor
inc
sbb
dec
lods
jmp
rorl
test
int3
fwait
in
cmp
xchg
mov
andl
data16
push
push
sahf
pop
push
fsubl
test
jnp
and
mov
in
mov
pop
popa
adc
mov
nop
fcoml
cwtl
mov
fidivl
test
cmp
push
loopne
push
push
int
bound
jge
jmp
jecxz
sbbl
mov
sbb
cmp
mov
stc
sub
add
pop
out
fistpll
fsubrs
in
dec
push
mov
pop
or
cmc
je
rolb
inc
loope
jmp
data16
fs
fcmovnbe
arpl
mov
inc
outsl
xchg
mov
div
loopne
orl
cmp
push
jns
pop
loopne
mov
cmp
test
push
push
aam
and
add
xchg
or
in
sti
dec
sarl
or
xor
add
fidivrs
inc
push
cmpsb
in
mov
xchg
mov
subb
pop
sbb
mov
imul
or
in
in
xor
add
mov
add
testb
cli
inc
imul
pop
lods
sbb
aas
faddl
mov
cld
push
pop
mov
cmp
dec
loop
ret
daa
in
daa
out
cmp
test
and
pusha
scas
inc
sbb
mov
inc
mov
jnp
aas
add
sbb
xchg
mov
xchg
dec
arpl
popf
mov
mov
xchg
notb
shll
mov
stos
or
inc
dec
dec
xchg
das
out
adc
xor
inc
sbb
cltd
fnstcw
sbb
and
mov
sbb
test
jecxz
pushf
std
mov
loopne
paddw
xchg
popa
cmp
sbb
adc
test
cmpsb
mov
icebp
mov
cmpb
mov
cmp
jo
jg
pushl
sbb
mov
scas
and
and
int
cltd
add
sub
jecxz
fwait
mov
jne
cli
mov
mov
or
and
adc
es
push
add
inc
add
into
pop
call
jne
dec
ss
adc
aas
and
cmp
xor
addr16
out
jae
xrelease
xchg
push
and
or
jp
mov
sub
dec
add
push
mov
sub
into
push
xchg
stc
fbstp
jnp
sbb
or
outsl
xor
subb
test
call
es
std
stc
lods
inc
test
dec
leave
jmp
mov
movsl
fdiv
pop
sarl
adc
pop
ljmp
dec
mov
xor
mov
sub
ds
repz
xchg
aam
pop
sbb
mov
xor
out
jnp
out
ljmp
inc
ficompl
xor
inc
dec
lock
cmp
mov
cmc
cltd
push
xor
xor
outsb
push
out
and
fisttpll
popa
jo
xchg
mov
aaa
mov
pop
hlt
jp
fldt
repnz
imul
xor
inc
cmp
test
movsl
call
icebp
in
or
push
mov
mov
fnstcw
add
aas
push
cmpsb
push
into
xchg
pop
roll
sbb
cmpb
adc
popf
or
mov
shrb
imul
mov
popf
in
or
jp
adcl
pop
mov
stos
ja
cmpl
mov
call
rcrb
lods
addr16
insb
push
dec
je
enter
repnz
scas
xor
push
jbe
shl
inc
dec
out
cltd
mov
iret
push
mov
push
ret
arpl
adc
adc
data16
inc
addb
ja
sub
movsb
daa
push
xor
movsb
popa
sahf
push
or
cmp
psrad
add
lret
fidivs
leave
lods
xchg
cmp
adc
xchg
xchg
ficompl
jp
xchg
add
mov
xor
sti
xor
lods
push
xchg
shrl
loop
fistl
push
or
test
push
in
out
or
inc
sub
inc
rolb
fldpi
shrl
out
jno
in
push
fimull
pop
mov
es
arpl
mov
sbb
sub
cs
aaa
cmp
jo
mov
str
push
mov
xor
xchg
mov
xchg
dec
arpl
xor
cmp
in
subl
negb
sbb
xchg
pop
sbb
mov
mov
push
mov
int3
mov
and
push
pop
leave
pop
lahf
pop
pop
test
outsb
mov
mov
lret
ljmp
ss
cwtl
push
mov
mov
dec
les
and
push
imul
cmpsl
xchg
jo
ljmp
test
and
sarl
lock
pop
lret
insb
jbe
cmp
arpl
push
or
lahf
jmp
pop
cmp
xor
inc
inc
lcall
es
mov
or
scas
dec
jbe
call
mov
dec
rclb
lods
dec
add
in
nop
into
rcrl
xor
flds
repnz
and
jecxz
add
pop
mov
mov
aas
add
jae
pop
clc
ljmp
jmp
lds
add
gs
pop
mov
fmull
add
inc
insb
sub
mulb
xor
in
inc
dec
jle
ja
call
pop
mov
or
jno
adc
into
adc
loop
sbb
xor
gs
cwtl
mov
push
insl
pop
mov
and
or
sbb
sbb
xor
stc
cmpsl
stos
and
xchg
in
ficompl
pop
mov
xor
rorl
inc
into
sub
pop
fistpl
rcrb
lds
mov
bound
mov
pushf
hlt
mov
daa
fildl
into
adc
or
das
sarl
je
sbb
mov
orb
xchg
in
cmp
fisubrs
dec
lea
xchg
les
dec
gs
loope
mov
clc
test
pop
push
sbb
or
pop
mov
imul
xlat
mov
ret
lret
fwait
loopne
clc
test
in
mov
mov
je
push
dec
mov
aad
pop
int
cmpsl
hlt
daa
adc
repz
xchg
adc
test
sbb
iret
hlt
xchg
sbb
jg
sbb
out
aas
inc
or
push
shrl
jle
aas
add
cwtl
faddl
mov
inc
pushf
pop
ds
dec
cmp
xchg
xor
clc
es
inc
xlat
in
xorl
fsubl
rorb
jecxz
mov
imul
cmp
lock
movsb
hlt
and
pop
mov
call
xor
pop
add
push
data16
iret
cmp
pop
xchg
mov
and
xchg
lcall
or
xchg
cltd
es
fisttps
into
inc
das
sub
in
inc
rorl
int3
pop
mov
mov
pop
cmp
fidivl
push
sbb
fldenv
in
insb
sub
scas
sub
or
leave
sar
pop
mov
xchg
clc
adc
dec
in
or
gs
or
cmp
shrb
mov
cmp
cs
sti
mov
lods
aam
icebp
pop
ds
lds
out
pushf
pop
or
lods
cmp
fs
sbb
outsl
imul
pusha
pushf
mov
push
pop
pop
dec
mov
xor
sub
sub
and
insl
inc
xor
cmp
cwtl
or
adc
xlat
lods
je
mov
inc
cwtl
in
or
mov
nop
sbb
ja
orb
or
mov
inc
stos
loope
mov
addr16
pop
and
cmpb
outsl
cmpsl
inc
popf
stc
outsb
mov
inc
aam
or
mov
jno
mov
mov
call
pushf
lea
aaa
movsb
addr16
and
adc
aaa
leave
enter
dec
mov
push
xchg
fs
das
or
out
jmp
dec
es
inc
cwtl
and
cmp
sti
aam
xor
xor
mov
pop
xchg
or
faddl
xchg
jge
call
lods
push
aas
pop
lahf
xchg
gs
push
cmp
hlt
inc
mov
adc
mov
push
inc
mov
sbb
mov
xchg
sub
packsswb
xor
out
xchg
addb
add
or
fisubl
and
xchg
mov
xchg
cltd
add
add
lods
outsb
dec
rcl
pusha
lods
xor
xchg
pop
sbb
je
aas
ret
jns
xchg
lea
cmc
push
pop
sub
fisubl
inc
push
sti
push
clc
psllq
repz
cmp
pop
leave
mull
ret
std
and
imul
in
mov
add
xor
jle
xchg
ds
jl
into
sub
xchg
push
add
out
mov
into
addr16
mov
mov
xor
mov
or
and
cmp
lea
sbb
push
test
add
lret
push
xchg
iret
mov
rcrb
sbb
lret
add
bswap
push
xchg
xor
repnz
pop
call
mov
xchg
push
cmp
sbb
add
xchg
mov
daa
test
push
dec
sbb
sub
xchg
lahf
pop
scas
xor
inc
sub
test
int3
mov
xchg
cmp
jp
mov
sbb
xor
jmp
fsubrl
mov
xor
call
paddusb
cmp
ror
cli
mov
xor
dec
xchg
pusha
enter
aas
sbbl
lcall
enter
adc
sbb
or
loope
test
adcl
adc
cltd
cmp
and
push
out
add
cmp
mov
adc
into
pop
ret
and
dec
hlt
pop
sbb
inc
hlt
cmc
sbb
les
mov
jo
or
and
ja
fs
dec
push
mov
fwait
fwait
and
and
sbb
jecxz
jbe
movsl
fs
dec
jno
in
jl
add
mov
fbstp
ljmp
in
dec
mov
push
mov
pusha
and
lret
pop
ja
jp
fnstsw
dec
in
push
ljmp
inc
mov
sbb
or
adc
divl
cli
seto
das
pop
repnz
cmp
out
sbb
test
add
mov
cld
jmp
daa
or
or
or
aam
inc
cmp
shrl
lds
pop
or
fsubrs
sbb
int3
repz
add
adc
pop
lret
sbb
lcall
jle
mov
and
leave
dec
cmpsl
add
pusha
mov
fs
jmp
pop
mov
sub
es
rcll
add
pop
mov
pop
push
push
das
push
jecxz
ss
dec
xchg
mov
cmp
jge
mov
add
mov
inc
test
push
adc
jb
mov
xor
dec
jne
scas
cld
inc
adc
sbb
pushf
dec
outsb
sub
jo
cmpsb
sbb
and
int3
cmp
jae
xor
lods
xchg
sarb
stos
add
mov
pop
stc
jno
enter
ja
mov
inc
cmp
add
scas
mov
jge
fldenv
pop
ja
scas
insb
xlat
dec
mov
dec
xchg
mov
xor
loope
in
mov
add
pcmpeqb
rcrl
push
movsl
out
mov
mov
cmpb
aam
mov
fisttpl
cwtl
adc
inc
stc
inc
arpl
jns
adc
jno
mov
test
lcall
int
hlt
dec
push
fldenv
push
and
push
sti
push
data16
mov
jl
movsb
movsb
xchg
sub
sub
std
aam
punpckhbw
call
pop
fcompl
cmp
lret
sbb
add
inc
lea
inc
fadds
outsl
mov
lret
and
add
fstpl
testb
pop
ja
jecxz
in
mov
pop
push
idiv
fs
mov
jecxz
xor
cmc
mov
stc
imul
sbb
sub
lcall
add
inc
mov
ljmp
pop
scas
add
xchg
pushf
popa
cmp
enter
sbb
xchg
mov
xchg
pop
pushf
fcom
andl
mov
mov
push
and
mov
das
mov
aas
cmp
stos
lods
pop
push
in
sbb
jbe
xlat
lret
or
add
dec
es
pusha
sahf
popa
jmp
mov
mov
cmp
mov
cmpsl
faddl
dec
push
test
cwtl
sub
mov
movsb
pusha
ljmp
xchg
xchg
repz
rorl
cmp
pop
xor
sti
or
imul
cmp
lea
sub
out
ss
stos
sbb
js
cmp
fisubl
mov
in
inc
push
imul
mov
jle,pt
shr
sbb
sbb
inc
add
pop
mov
jbe
cli
sbb
jmp
sahf
test
mov
xor
xor
fs
cld
xlat
inc
je
and
clc
mov
push
dec
mov
enter
adc
fs
xor
jle
xchg
xchg
fsts
insl
xor
mov
xor
xor
adc
jo
pop
shl
adc
stos
sbb
in
insb
pop
and
lea
stos
push
or
and
jne
shrb
xor
movsb
icebp
les
mov
sub
dec
mov
in
adcl
pop
xchg
sub
mov
movsb
sbb
rol
ja
mov
xchg
iret
sahf
add
ds
push
mov
aad
jecxz
inc
sbb
into
rcll
mov
inc
xor
cmp
jb
sbbl
jns
mov
out
xor
aam
xchg
shlb
cmp
sar
or
dec
cmc
inc
arpl
mov
addr16
fwait
mov
xchg
add
rcl
push
inc
mov
sub
adc
ss
mov
movsl
fiaddl
mov
and
daa
mov
jbe
mov
mov
fbstp
stos
ds
lcall
push
dec
imul
push
jne
kmovw
fisubl
mov
das
mov
inc
jg
fs
pop
ret
xlat
arpl
jns
cwtl
sub
mov
adc
in
lret
rolb
or
loopne
rcr
push
clc
mov
xchg
push
hlt
sub
mov
inc
out
adc
sti
sub
jmp
sub
or
ljmp
jle
jbe
fimuls
dec
pushl
imull
out
repnz
stc
mov
test
adc
test
sbb
xchg
iret
pop
cmc
dec
dec
lea
cwtl
pop
and
stc
adc
push
push
push
mov
int3
or
insb
data16
pop
fcomps
mov
push
and
rclb
fs
adc
mov
mov
test
js
sub
int3
cmp
lahf
add
fs
cmp
jno
and
pop
mov
mov
push
xchg
add
sub
addr16
mov
push
mov
push
imul
ret
cmpsl
fidivrl
dec
push
sahf
gs
stos
out
inc
aam
xchg
call
push
adc
fstps
jmp
mov
mov
jge
lcall
sbb
int3
mov
pop
je
test
pushf
inc
pop
sti
mov
movsl
scas
sub
xchg
in
push
outsb
pop
shlb
xchg
insb
icebp
cli
insl
mov
sub
jnp
inc
and
scas
add
mov
jle
ja
shl
jecxz
jmp
and
inc
out
fistl
out
xchg
fsubs
pop
cmp
daa
sbb
cld
inc
xlat
xor
push
xlat
inc
lret
fsubrp
xor
xor
hlt
mov
fdivr
lret
cmp
pop
jno
mov
mov
popl
adc
mov
cmpl
pop
mov
loope
mov
cs
sub
push
test
into
inc
mov
cld
push
sub
cltd
xchg
lods
add
sbb
fcomps
mov
jnp
jne
sub
cld
fdivl
mov
mov
dec
jnp
into
addr16
out
or
cmp
lock
mov
loope
adc
mov
adc
push
enter
ret
push
mov
orps
adc
adc
cmpb
mov
stc
jl
imul
int3
daa
xor
or
insl
sti
inc
cmpb
lcall
in
fs
test
add
push
ja
xor
sub
dec
mov
ds
pop
test
imul
mov
popf
push
push
ds
dec
add
rcrb
into
add
icebp
jp
dec
and
inc
adcb
pushl
shrl
test
stos
cwtl
bound
or
push
ds
into
cmc
cmp
test
mov
jo
cmp
and
repnz
xor
jo
das
js
fdivr
mov
mov
and
stc
out
fnstenv
pop
jae
decl
cmpsl
outsb
dec
in
mov
daa
lcall
loop
dec
add
into
fiadds
sbb
in
add
nop
rcrb
stos
gs
adc
xor
test
in
fwait
mov
jae
dec
cmp
and
andl
xor
fmulp
cmp
test
outsb
add
push
sub
push
dec
shrb
xlat
clc
cli
push
insl
sub
xchg
inc
bound
ret
imul
mov
insb
xor
adc
ret
pop
mov
aaa
cmp
xchg
movl
imul
or
mov
lock
aaa
mov
sahf
sbb
cmpsl
mov
adc
fcoms
shlb
aam
dec
shlb
add
shrb
pop
rorb
mov
pop
lods
mov
mov
inc
cmp
lahf
out
and
das
dec
mov
fiaddl
inc
ss
push
sarl
out
sbb
cmp
sahf
inc
shll
das
cmp
test
mov
mov
cld
imul
in
jp
cltd
imul
lea
ss
pop
int3
fisttpl
xchg
jmp
inc
dec
add
mov
adc
fs
loope
cwtl
pop
sub
push
push
incl
fdivr
mov
xor
and
pop
mov
adc
sbb
adc
movsb
xor
adc
adcb
jb
ret
out
cmp
scas
adc
inc
addr16
out
movsb
jmp
adc
out
sub
mov
lods
cltd
mov
sbb
stos
fdivrs
lret
data16
inc
inc
mov
lds
cmc
aad
out
int
add
shl
add
xchg
mov
or
cli
outsl
ljmp
add
outsb
out
push
xchg
test
adc
inc
sub
dec
dec
push
cmp
int3
mov
jmp
rolb
push
inc
clc
shrl
add
call
arpl
in
in
or
jne
sub
jae
stos
cmp
in
subl
lea
imul
sbb
loopne
add
xor
mov
inc
or
out
test
and
mov
xchg
cmpsl
sub
mov
sti
pop
cmp
es
lcall
loopne
out
cmp
cmp
cld
loop
mov
das
xor
pushl
adc
xchg
imul
add
xor
jle
les
aaa
imul
fisttpll
cs
loopne
lcall
aad
cmp
out
mov
inc
sar
push
lret
mov
sub
in
and
out
push
addr16
add
dec
cmc
add
scas
cwtl
mov
shlb
mov
xchg
rorb
decl
jmp
adc
xor
add
nop
sub
dec
pop
or
mov
pop
sbb
xchg
jae
into
std
add
int
cmp
int3
sub
mov
jo
lahf
shlb
push
mov
mov
clc
cmp
data16
and
sahf
ja
pop
push
test
pop
call
and
xchg
in
sbb
mov
jno
push
mov
mov
mov
jbe
or
js
fcoml
mov
gs
cwtl
fldcw
xor
fmulp
ds
lret
jmp
inc
out
pop
dec
pop
fsubs
push
xlat
mov
jg
pop
loopne
mov
iret
gs
hlt
pushf
lahf
xorb
insl
pop
imul
push
popa
mov
or
sub
neg
and
lods
mov
sbb
push
xchg
insl
xor
sub
xor
out
sub
js
mov
mov
xor
int3
fisubs
stos
cs
fs
jp
dec
inc
int
movsl
imul
or
mov
mov
dec
mov
cli
cmp
adc
ret
test
add
mov
or
push
js
add
pop
into
sub
sbb
xchg
inc
push
ficoml
sahf
inc
cmp
mov
mov
pop
jb
data16
jecxz
lea
mov
jno
js
lds
lahf
outsb
cmp
ss
ret
jb
in
pop
adc
out
shrl
data16
mov
mov
sar
into
icebp
popa
enter
push
cld
ss
pop
mov
leave
sarb
add
bound
mov
aas
daa
cmp
cld
mov
or
fldt
les
xor
xchg
pop
pushf
addr16
xor
pop
lahf
imull
mov
idiv
insb
cmpsb
add
cld
rclb
push
insl
pop
imul
xor
ss
pop
loopne
les
push
or
xchg
or
fmull
sbb
mov
add
pop
outsl
addb
or
hlt
adcb
xchg
mov
xchg
xchg
mov
int3
cmp
jl
ss
or
rolb
lcall
xor
push
xor
mov
inc
lret
sub
lret
es
stos
adc
das
lds
aam
cmp
pop
inc
aam
into
enter
mov
shl
push
shl
add
repnz
cmc
cmp
pop
decl
imulb
das
outsl
sar
loope
dec
aas
inc
add
sahf
insl
jae
xor
pop
mov
adc
enter
dec
mov
cmc
ret
repnz
aaa
scas
xchg
out
mov
scas
lret
sub
mov
or
adcl
sub
mov
aad
xchg
into
popa
fidivl
cmp
stos
into
push
adc
test
sbb
mov
jno
and
xchg
cmpsl
daa
mov
stc
es
enter
push
imul
mov
stos
push
popl
loop
xlat
outsb
ja
loopne
loopne
xchg
cld
pop
addr16
movsb
lods
mov
outsl
cmpsb
dec
jmp
mov
cmp
lods
int3
enter
lods
clc
xchg
lea
out
add
mov
xchg
stos
imul
enter
pop
movl
cmp
or
cmp
or
or
aam
mov
movsb
sub
cmpsl
fistps
repz
adc
jbe
fnstsw
mov
mov
mov
shrl
test
pusha
jge
jecxz
fwait
sub
cmp
out
mov
fidivrs
xchg
xor
cmp
int3
out
jmp
jae
loope
mov
clc
push
or
sub
xchg
cmp
shrb
add
lret
or
lret
inc
or
mov
push
xchg
dec
out
mov
dec
adc
out
iret
mov
xchg
das
sub
mov
std
add
in
push
adc
jae
sbb
fs
mov
mov
xor
ret
sbb
ror
mov
lret
or
pusha
outsb
scas
jmp
sahf
adc
sub
aad
mov
rcr
repnz
xor
cltd
or
or
mov
cmpsb
fwait
sub
out
jbe
xor
popf
fnstsw
fwait
das
or
scas
push
sbbl
mov
push
test
cmp
dec
stc
push
stos
push
mov
sub
lods
imull
js
cwtl
leave
mov
or
out
sahf
xor
push
mov
add
mov
dec
cwtl
lcall
add
sub
bound
aam
push
fstpt
push
jbe
int
fists
mov
adc
ret
mov
cld
cli
xchg
add
sbb
bound
or
pop
icebp
ret
std
shlb
std
inc
pop
jae
jns
jle
imul
nopl
adc
jecxz
xor
std
cmp
xchg
push
mov
mov
and
mov
inc
adc
mov
sbbb
push
mov
in
cmp
mov
pop
pop
cmp
repz
jbe
dec
int3
andb
mov
jle
aam
lea
lds
add
sahf
pop
sbb
clc
neg
inc
ret
scas
lock
fidivrs
xor
jg
rorb
leave
lret
je
imul
test
je
inc
sub
stc
int3
lods
mov
aam
and
outsb
push
ss
mov
mov
mov
std
sub
xlat
xchg
jnp
sub
lret
mov
sarb
xorl
mov
incl
repz
mov
stc
adc
xor
flds
mov
or
das
dec
shll
xchg
ljmp
xchg
lahf
xor
cmc
movl
mov
sub
xor
cmpsb
mov
cmp
jmp
shl
mov
cmp
out
or
leave
pop
adc
cwtl
add
cmpsb
jg
icebp
aam
dec
lock
xchg
push
and
divl
orl
sub
call
push
int
xor
xor
bound
push
or
cmpl
adc
leave
mov
bound
jnp
lret
out
xor
sub
addr16
jmp
mov
jbe
or
cmp
out
push
lods
inc
leave
pop
inc
or
mov
xor
test
cmp
sti
dec
xor
mov
fcmovbe
cmp
cmp
jbe
cmpsl
xchg
add
pop
xor
imul
push
in
insl
pop
movsb
movb
xchg
outsb
xchg
add
pop
xchg
adc
jge
fnstsw
imul
mov
ljmp
dec
mov
loop
mov
add
sahf
pop
adc
inc
adc
test
inc
ds
popa
mov
xchg
test
jge
mov
fimuls
lcall
test
les
movsl
push
cmp
xchg
mov
sub
xchg
iret
in
jae
xor
iret
pop
clc
lcall
xor
adc
inc
mov
cmpsl
inc
xchg
test
xchg
push
cmp
ret
push
movsb
cmp
test
adc
fcoml
pop
xchg
movsb
stos
pusha
pop
nop
push
sub
push
cli
or
lods
mov
inc
dec
mov
psrlq
push
sub
sbb
movsb
ret
vcmpps
sarb
imul
shlb
xchg
cmp
mov
lretw
sub
iret
sub
jge,pt
dec
cmp
outsb
inc
fnsave
and
jle
xchg
mov
xlat
je
xchg
jmp
loope
xchg
pushf
add
lock
ret
and
arpl
add
sbb
imulb
mov
outsb
dec
push
push
sbb
dec
imul
jmp
mov
fstpl
test
push
jecxz
ss
and
xor
dec
and
lds
pop
mov
pop
mov
adcl
loopne
ljmp
cli
push
push
dec
xchg
add
jle
mov
inc
mov
jnp
push
mov
pop
cmpsb
out
and
call
dec
scas
adc
mov
aam
push
jne
movsb
enter
cmp
push
cli
add
add
popa
cwtl
shlb
inc
pop
jb
jl
loopne
mov
xlat
sbb
movsb
adc
add
insl
scas
shl
mov
ret
and
fnsave
or
enter
lea
jge
fsub
lods
mov
adc
adc
add
mov
aas
push
cmp
scas
adc
lods
push
in
scas
sub
fsqrt
mov
jecxz
je
dec
add
sub
fdivr
inc
fwait
sub
popa
mov
cmp
push
sahf
lahf
mov
xor
sbb
loopne
fstl
loop
sarl
outsb
popf
dec
push
push
mov
hlt
jl
xlat
sub
cmpsl
hlt
inc
jns
out
sub
addb
mov
enter
shll
lret
hlt
sahf
in
xor
sarb
sub
and
lods
lock
adc
push
pop
mov
push
stos
scas
insb
jmp
pop
jmp
xchg
gs
out
sti
inc
cwtl
mov
mov
aaa
inc
stos
repnz
cmc
aad
xchg
pop
mov
mov
in
repz
fldt
mov
sarl
pop
sub
push
call
cmc
pop
sbb
popa
repz
xchg
aam
mov
rcrb
call
sub
popa
or
mov
mov
loope
leave
xor
and
pop
imulb
icebp
pop
sub
sub
adc
mov
mov
sarb
pop
inc
push
inc
sub
fcompl
imul
xor
xchg
xor
cmp
shll
mov
sbb
lsl
xor
and
fucomp
lcall
bound
mov
fidivs
js
jo
fists
inc
bound
inc
push
and
xchg
and
sub
mov
pop
lds
xchg
and
nop
mov
xor
cli
stc
dec
mov
bound
fdivrl
inc
push
out
call
clc
jno
pop
adc
bound
mov
bound
arpl
or
out
push
stos
mov
jl
sti
jbe
sbb
or
sub
inc
mov
adc
das
lock
shl
cli
mov
jecxz
xchg
dec
gs
and
and
in
rdpmc
cmp
lock
or
out
sbb
aas
lret
inc
ja
shl
dec
imul
xchg
cmp
xor
ss
fdivr
scas
jge
push
fdivs
imul
lret
push
out
mov
xor
shlb
cmp
xchg
stos
xchg
pop
mov
loopne
pop
xchg
and
scas
mov
lds
out
cmp
cmp
fwait
sbb
cmpsb
popf
push
dec
cmp
adc
sub
sub
cld
addb
adc
push
add
fsubrs
push
ss
jecxz
sti
jl
scas
add
aam
insl
lock
es
add
mov
enter
out
cltd
jo
xor
in
loop
arpl
pop
adc
and
aaa
rorb
bound
jp
inc
adc
push
and
sub
ficompl
xchg
imul
or
cmp
in
cmpsl
scas
test
or
rorl
lahf
icebp
out
add
test
ret
repnz
cmpsl
mov
jecxz
cmp
xchg
mov
nop
pusha
das
pop
xchg
xlat
mov
cltd
filds
mov
pop
mov
sub
fcoml
repz
scas
movsb
lea
inc
cmc
jne
loop
test
stos
cs
jno
pop
aas
jb
sbb
sub
mulb
jnp
xchg
sub
shr
pop
adc
fwait
push
mov
test
push
mov
inc
aad
pop
out
pusha
imull
addr16
ja
outsl
xor
pop
sbb
jnp
and
loop
aad
outsl
enter
sub
insb
fbstp
and
add
mov
arpl
in
out
xlat
and
cmpsl
jns
loope
in
fwait
and
test
std
adc
cmp
data16
jae
aad
push
int
sbb
hlt
mov
push
gs
lds
aam
and
adc
add
rorb
or
push
out
addr16
pop
test
and
pushf
jecxz
sbb
sbb
shr
push
jmp
cmp
ror
dec
shr
xchg
dec
mov
fsubr
and
mov
mov
lds
inc
push
add
popf
push
scas
sahf
mov
mov
or
fcmovu
imul
scas
nop
in
xor
push
cmovl
std
shll
xchg
push
int3
cld
sbb
outsl
shrb
insl
sub
adc
add
push
jecxz
sahf
out
dec
mov
cmp
xchg
add
outsl
adc
pushf
movsb
push
mov
int
pusha
ret
push
xchg
jbe
das
mov
jo
imul
sbb
sub
dec
and
add
cmova
push
dec
fsubs
or
inc
sbb
movsl
hlt
xor
mov
lcall
jl
sub
dec
cmc
dec
jp
push
ss
xchg
out
sbb
adc
mov
dec
adcb
push
inc
addr16
ret
push
adc
lds
mov
xorl
gs
daa
jl
sub
dec
cmp
int
lcall
xorl
fsubrl
mov
incb
loope
int3
nopl
inc
cs
xor
inc
in
imul
add
jp
mov
test
add
mov
push
pusha
add
scas
mov
add
icebp
test
push
sub
jbe
les
add
and
push
or
into
bound
pop
cmp
add
sti
mov
pop
sub
mov
cmpb
adc
out
int3
mov
or
adc
sub
and
mov
pop
push
push
mov
pop
push
test
sar
popa
stos
xchg
scas
sarb
pop
loopne
inc
or
xchg
cmc
mov
and
les
icebp
mov
xchg
mov
out
sbbl
bound
push
enter
mov
repnz
mov
mov
xchg
mov
pop
mov
xor
push
insl
mov
and
dec
jp
dec
sbb
cmc
scas
fdivrs
fbstp
clc
idivl
mov
movsb
je
pop
mov
subl
pop
cmp
inc
pop
dec
clc
pop
sub
xor
dec
dec
cmp
xchg
xchg
add
cmc
mov
neg
je
arpl
pop
xchg
fs
cmp
arpl
mov
je
inc
pusha
mov
or
jmp
pop
jg
and
fsubr
jle
jne
pushf
fistl
or
stos
les
loop
push
inc
ds
jecxz
inc
inc
xchg
mov
sti
mov
sub
ss
push
mov
es
cmp
fisubrl
mov
pusha
jle
push
adc
cmp
outsb
mov
imul
bnd
inc
cmp
hlt
andb
pop
pushf
sti
gs
rclb
shl
into
aam
outsb
inc
mov
mov
sbb
push
xor
sub
push
adc
push
insb
hlt
aas
mov
pop
inc
cwtl
jmp
jne
jne
mov
sbb
nop
sbb
outsl
mov
out
dec
je
imul
fldcw
sub
pop
push
mov
repz
imul
in
xor
adc
xchg
jbe,pt
stc
sbb
dec
mov
mov
pop
lret
lahf
js
inc
rolb
xor
xor
xchg
sub
jo
pcmpeqd
sub
es
test
cli
cmp
idiv
pop
testb
pop
fcmove
adc
push
lahf
test
idivl
cmpsl
outsb
into
push
mov
xchg
add
or
andb
out
adc
cmpsl
repnz
inc
cvtps2pd
or
sahf
jmp
aas
xchg
push
iret
mov
ficoms
lds
and
and
shl
jnp
mov
in
inc
mov
adc
pop
insl
push
mov
or
adc
ds
test
in
in
shll
scas
dec
gs
pop
adc
cltd
adcb
mov
push
fs
nop
je
rol
push
lahf
enter
jge
insl
lcall
rcrb
sbb
add
or
cs
fsubrs
jno
es
or
out
test
mov
test
jmp
xor
cmp
insb
add
mov
mov
aaa
sub
mov
in
nop
repnz
ret
push
cmpb
xor
sbb
mov
insb
cwtl
xor
xchg
cmpsb
xchg
iret
push
sti
mov
adc
xor
jo
add
push
mov
jae
pusha
sub
push
cmp
roll
ljmp
adc
mov
push
push
mov
clc
cmp
cli
ds
pop
out
cmp
pop
loopne
popa
mov
mov
or
sbb
xor
add
fwait
std
daa
sub
sbb
add
pop
and
iret
stos
ss
dec
sbb
test
movsl
lods
pop
scas
mov
insl
push
push
lock
xchg
mov
popa
mov
in
sbb
lcall
jne
arpl
out
sub
movl
mov
and
incl
jae
and
mov
repz
mov
sub
inc
call
inc
pop
adc
ss
cmp
mov
push
sub
mov
sub
mov
mov
dec
pop
mov
repnz
cwtl
jns
out
push
or
sbb
lea
push
xor
popf
inc
imul
adc
pop
cmpsb
loop
adc
icebp
push
imul
aas
addl
leave
xchg
jne
dec
push
adc
xlat
xchg
pusha
jbe
or
dec
push
out
inc
in
push
pusha
scas
in
scas
add
dec
xlat
rolb
sub
fprem1
xor
aam
movsb
mov
inc
insb
dec
loopne
outsl
mov
cmp
pop
cwtl
dec
lods
stos
pop
fwait
fwait
jns
punpckldq
mov
rolb
sbb
mov
or
arpl
mov
push
sahf
push
sbb
inc
cmpb
dec
pusha
pop
sahf
push
sub
add
sub
mov
jne
mov
ljmp
loopne
pusha
adc
orb
outsl
fwait
jmp
stc
xorb
dec
pushw
jg
mov
cmc
xchg
pop
test
fadds
movsb
mov
fdivrs
push
add
inc
scas
pop
movsb
sbb
jl
stos
push
aaa
pop
inc
cmpsl
test
jne
mov
sbb
cmp
dec
pop
icebp
adc
pop
lcall
sahf
push
xor
sub
jns
aas
inc
scas
aas
movsb
adc
mov
sahf
mov
cmp
adc
cmp
mov
pop
jg
push
xchg
mov
push
clc
xchg
lods
aam
push
mov
pop
push
push
fmuls
pminub
adc
adc
mov
mov
add
push
sbbl
xchg
add
lock
es
jo
ja
js
scas
push
inc
scas
lea
mov
or
jl
aam
out
out
dec
imul
push
push
fsubr
repz
sub
out
xor
psubusw
add
sub
sbb
adc
loope
mov
push
ss
aad
mov
mov
sub
push
outsl
mov
les
add
dec
cmc
js
imul
mov
in
push
push
loop
test
fnstsw
add
in
call
icebp
xor
ss
inc
pop
inc
mov
xchg
xchg
ret
mov
mov
enter
popf
test
in
imul
out
test
pop
cmp
insl
out
ds
xchg
push
inc
or
adc
nop
and
out
not
stos
dec
cmpsb
inc
popf
stos
mov
ds
ss
cld
xchg
sahf
jae
sbb
jb
movsl
ja
cmp
repnz
repz
arpl
out
lods
push
jg
jne
jbe
inc
andl
leave
jle
int
cwtl
xchg
stos
xchg
scas
in
push
pop
shrl
dec
jne
rsm
cmp
out
cmc
sar
aam
inc
push
out
push
subl
shr
dec
or
cltd
out
sahf
xor
call
cmp
call
subl
lock
ret
mov
push
dec
mov
sub
les
fldcw
iret
sti
out
test
fbld
xor
sbb
push
out
add
mov
xor
sub
into
mov
sbb
adc
adc
hlt
pop
mov
daa
pusha
or
cmp
adc
xchg
roll
fnsave
add
insb
xor
and
es
sub
daa
fwait
pop
scas
loope
cmp
pop
push
fidivrl
adcl
movsb
call
movsb
loop
outsb
cmp
or
jb
or
movsb
jnp
pop
sub
mov
xchg
add
sbb
pop
ds
dec
int
push
sub
sub
jg
fstpt
cli
pop
add
mov
bound
push
pop
mov
push
mov
ret
xchg
insb
psraw
andb
int3
inc
xchg
sbb
das
ljmp
push
leave
push
mov
test
stos
sub
jo
mov
mov
mov
scas
cmp
ljmp
lcall
lods
outsb
mov
and
push
sarb
sbb
mov
or
dec
call
fdivrl
push
pop
ss
insb
xchg
aam
fiaddl
jnp
mov
mov
cmpsl
mov
fistpl
ds
or
mov
xchg
dec
jbe
fldenv
xor
clc
mov
insb
inc
testb
fwait
mov
cli
pop
loope
mov
pop
imul
xor
stc
rolb
fimuls
add
lea
jae
aam
dec
stos
push
fcoms
jae
cld
sbb
push
xlat
das
imul
aas
sti
loopne
xchg
lock
fstpl
push
xor
xor
gs
adc
ljmp
push
dec
lock
adc
push
movsl
out
sbb
inc
ljmp
ljmp
push
sub
cmc
sub
dec
dec
fstl
jge
mov
or
dec
mov
add
or
loop
xchg
jne
pop
subl
or
and
pop
pop
jbe
cmp
mov
dec
cmp
xchg
or
sub
iret
fdivrl
fcom
mov
push
or
jne
shlb
cmp
inc
outsl
push
lcall
pop
or
nop
nop
fnsave
lahf
jnp
sbb
or
stos
and
xchg
pop
imul
sti
mov
adc
sbb
xor
push
gs
movsl
ds
loopne
sub
enter
inc
mov
sahf
and
pop
inc
adc
push
mov
adc
sub
clc
pop
inc
cmp
sub
adc
fwait
jbe
sbb
mov
mov
adc
out
pop
push
inc
inc
pop
loope
imul
pop
mov
and
jle
scas
repnz
jno
out
and
fisttpll
xor
pop
dec
xchg
gs
jae
mov
adc
mov
movsl
bound
sbb
in
clc
push
cli
mov
fidivl
cld
es
mov
pop
mov
enter
mov
sbbl
enter
pusha
jmp
shl
mov
ja
jl
push
xlat
cmp
mov
repz
push
or
fistpll
or
jmp
rcll
jg
xchg
adc
insl
lret
push
shll
inc
push
inc
inc
mov
shlb
push
lock
ret
xchg
sub
das
divl
cmp
inc
pop
xchg
jnp
push
inc
pop
cmpsl
std
xchg
iret
dec
in
sbb
inc
adc
cmp
jge
mov
loopne
in
or
sti
loopne
sub
sbb
push
mov
or
out
dec
das
add
out
mov
movsl
fisttpl
and
mov
nop
or
push
std
sbb
sub
js
jnp
lods
es
mov
out
dec
jbe
sub
sbb
adc
outsb
call
xchg
dec
xor
xchg
mov
aas
push
fs
aad
xchg
jno
jae
mov
or
lahf
test
xchg
mov
sbb
loop
or
mov
or
mov
pop
or
adc
jp
sub
jl
sarl
ret
mov
test
in
pop
lret
jp
push
jp
adcl
mov
mov
lret
cmp
sub
xchg
pop
push
bound
sub
sahf
push
fisttpl
mov
sub
add
push
popa
inc
hlt
lods
xchg
cltd
cli
pop
mov
push
jmp
xchg
out
mov
push
jl
xor
nop
dec
xor
outsl
mov
fcomip
imul
and
arpl
dec
out
push
mov
arpl
scas
jmp
nop
jecxz
arpl
jnp,pn
lds
out
pop
cli
xchg
adc
incb
add
and
aaa
arpl
sbb
jb
cmc
jne
mov
pop
jg
mov
push
popf
dec
mov
jg
pushf
sbb
mov
shrl
fistps
nop
repnz
sbb
inc
sbb
dec
andb
cli
adc
xorl
sar
repz
cmc
mov
out
xor
and
adc
ret
loopne
mov
cmp
pop
jg
adc
outsl
push
in
js
ljmp
int3
sbb
lret
xor
cli
xchg
fimull
or
dec
mov
mov
out
repz
mov
or
xchg
inc
dec
js
roll
sarb
stc
cltd
insl
push
pop
lea
nop
sub
jp
push
into
pop
xchg
stc
sahf
or
je
test
mov
out
aam
add
movntps
movsb
or
or
xor
aas
popa
outsl
pushf
bound
xchg
or
inc
mov
pop
dec
int3
aas
and
pop
pop
flds
and
or
test
fs
xlat
push
sub
pop
pop
mov
push
mov
xchg
add
repnz
fcomps
jbe
mov
imul
in
popf
lock
imul
in
pop
nop
fimull
mov
enter
in
lret
mov
fisttpll
out
xor
in
enter
and
adc
loop
mov
mov
add
out
push
mov
dec
sub
push
add
mov
int
xor
mov
rclb
adc
ret
ficoml
mov
mov
std
pop
adc
mov
into
mov
bound
pop
inc
push
and
adc
sbb
insl
lds
pop
out
mov
loop
xchg
and
or
test
aaa
cmpsb
rcl
enter
sti
xorb
jne
pop
jne
cmp
cli
sub
add
cli
xchg
pop
fildl
push
add
jae
add
mov
pushf
jl,pn
idivb
out
pop
jp
in
xchg
xor
xorb
jne
jne
andl
xchg
dec
dec
enter
stos
dec
ret
cmp
sub
xchg
pop
and
mov
sub
and
cmp
ljmp
fisttps
pop
stos
jo
scas
sbb
test
stos
pminsw
clc
mov
mov
fst
push
adc
gs
xor
stos
sahf
push
andl
movsb
stos
out
sahf
popa
std
in
stc
in
jns
push
cli
in
mov
mov
mov
sbb
out
imul
leave
inc
in
cmp
lcall
gs
stc
imul
ja
insl
call
cmp
inc
lret
and
mov
frstor
inc
stc
test
nop
jecxz
dec
stc
aam
rolb
icebp
mov
hlt
add
in
mov
cmp
push
sub
jo
cltd
fldl
jl
sub
or
xchg
push
dec
cltd
push
movsl
xor
out
inc
call
cmc
mov
cmovl
divl
popa
dec
in
clc
fildll
push
hlt
inc
jmp
xchg
leave
stos
sub
dec
inc
and
mov
adc
push
ja
push
dec
mov
mov
stos
mov
int
jge
aad
mov
add
pop
push
pop
test
rcrb
mov
add
add
add
sbb
inc
enter
xor
add
and
daa
repz
cld
mov
jecxz
xor
dec
sti
mov
mov
shll
out
push
pop
enter
popa
or
jno
add
test
jp
add
std
in
push
or
ds
adc
adc
loope
lods
daa
push
out
nop
fsts
cmpsb
pop
lret
mov
jo
icebp
cs
lahf
in
add
cmpb
sar
outsb
push
test
mov
in
xor
scas
stos
adc
loope
dec
test
push
rcr
ds
add
adc
ljmp
dec
aam
pop
cld
imul
repnz
jge
int
mov
jp
in
mov
cmp
pop
dec
jg
pop
mov
cmpb
mov
and
xor
daa
movsl
dec
dec
jmp
push
shlb
lcall
pop
test
aas
mov
mov
xor
or
mov
mov
mov
lods
jb
repz
inc
jl
sahf
in
sub
outsb
cmp
xor
and
mov
mov
rolb
xchg
aad
insb
cs
xchg
jae
in
sbb
mov
xchg
push
es
and
lcall
not
adcl
sub
sub
rolb
xchg
mov
sbb
das
pop
cwtl
add
jb
mov
pop
xchg
dec
ja
arpl
xor
movsl
mov
popf
popa
add
in
add
in
sub
push
mov
scas
stos
repnz
and
push
inc
iret
sub
test
lret
xchg
push
xlat
daa
imul
mov
push
daa
outsb
jg
cwtl
and
push
lcall
ret
call
sub
mov
hlt
mov
xchg
lahf
push
or
cltd
fiaddl
fs
fsubrs
push
movsb
out
testl
jp
inc
fwait
cmp
mov
ja
stos
cmp
sub
es
mov
rcrl
jle
rol
movl
sub
dec
mov
fnstenv
or
mov
adc
out
out
call
insb
out
stos
jl
hlt
mov
jns
jecxz
push
mov
shlb
test
push
lcall
fists
fistpll
test
or
jae
or
mull
shll
pusha
cmp
jns
mov
inc
pop
add
test
lods
repnz
aaa
das
paddsw
mov
rclb
and
xchg
es
xchg
ret
mov
aam
mov
xor
xor
int3
or
mov
orb
sbb
jecxz
adc
pushf
negl
fldenv
xor
addr16
pop
into
aaa
pop
mov
stos
lret
movsb
cs
push
sub
std
mov
arpl
sbb
mov
cltd
notb
movsl
cltd
or
mov
add
lock
xlat
mov
jge
shrb
pop
sub
push
pop
jb
pop
sti
and
out
xchg
mov
and
sbb
mov
mov
je
stos
aad
cmp
xor
jl
and
cmp
out
mov
in
mov
pop
pop
into
xchg
mov
cmpsb
test
adc
fs
addr16
inc
lods
imul
dec
inc
pop
adc
in
iret
rclb
jmp
shlb
and
or
mov
xchg
data16
ss
sbb
mov
sbb
or
rep
sbb
test
sub
jno
in
xchg
gs
in
and
fsubl
sbb
lret
adc
mov
sub
adc
fldt
push
data16
ret
push
mov
xor
sub
adc
mov
inc
and
adc
xchg
mov
out
sbb
es
sub
adc
dec
sub
stos
adc
sub
sahf
xchg
rol
cmc
cmpsb
scas
adc
mov
pop
lret
xchg
movsl
icebp
pop
lret
inc
xchg
cmpb
mov
cli
and
dec
loop
adc
jp
daa
lea
movl
sbb
mov
das
stos
mov
jae
pop
test
dec
ja
pop
xchg
mov
mov
subl
repz
stc
mov
sub
pop
cmp
nop
jno,pn
test
pop
and
cmp
fimull
inc
mov
sub
mov
movsl
mov
push
cmc
hlt
jnp
outsb
mov
loope
pop
sbb
xor
jbe
xor
jnp
xor
enter
sub
mov
aam
mov
shrb
fcompl
sub
fstl
jno
sahf
lods
cmp
mov
aam
aaa
push
jne
jnp
jmp
test
and
jp
shlb
sub
arpl
sbb
cld
xchg
scas
stc
adc
loopne
sbb
sbb
pop
jp
cmp
jns
push
jo
int
into
pop
xor
pop
push
add
sbb
cmp
inc
cmpsb
pop
arpl
or
mov
push
ret
jecxz
stos
arpl
sti
adc
mov
pop
push
mov
addr16
les
push
pop
insl
js
inc
pop
ret
xor
addr16
cmpsb
mov
or
loope
jle
dec
add
out
push
stos
sub
sbb
mov
pusha
in
addr16
inc
into
incb
and
push
ss
sub
and
lock
rclb
ja
lret
out
sbb
xor
jae
arpl
or
fs
mov
jp
add
dec
mov
add
inc
jo
push
sub
stos
mov
negl
js
jb
repz
inc
stc
lret
scas
push
and
and
les
nop
cmp
jge
clc
add
cli
sbb
xor
loop
or
push
xchg
shlb
mov
jns
pop
clc
push
decl
mov
pop
cmp
pop
xchg
sub
hlt
pop
sub
push
or
repnz
jg
imul
leave
mov
jnp
scas
pop
aam
stos
in
nop
sahf
lahf
cmp
mov
mov
push
dec
push
sbb
mov
pusha
xchg
sahf
cmp
addr16
movsl
inc
jl
cli
in
je
add
icebp
push
int
dec
out
sbb
xor
aam
enter
insl
ffreep
jae
xchg
xchg
push
xchg
notb
cmpsl
nop
dec
xor
xor
and
push
push
divb
sbbb
adc
xchg
and
or
xchg
push
faddl
cmp
fwait
mov
ror
fdivs
repnz
pop
pop
pop
lret
pushf
mov
jno
xor
mov
enter
xchg
jg
mov
and
xchg
cmpsb
out
fnstenv
bound
dec
popf
aad
cltd
loope
pop
scas
lahf
or
loop
sahf
call
dec
add
out
and
ja
and
mov
or
and
sub
loope
stc
or
xchg
cmp
jb
mov
xchg
cmp
popf
sbb
xor
mov
jmp
adc
push
mov
cmc
pop
sbb
pushf
ret
adc
repz
xchg
lods
gs
or
aam
in
push
popf
jg
jmp
dec
ss
xchg
cmp
scas
and
lock
mov
inc
dec
xchg
mov
mov
enter
call
pop
popl
adc
jge
scas
fnsave
mov
push
cmp
clc
xchg
jecxz
lock
and
mov
push
into
popa
push
mov
dec
adc
sub
sbb
and
ja
cmp
push
dec
jl
dec
mov
mov
enter
mov
lea
sbb
sbb
iret
and
xchg
into
fs
xor
cmp
mulb
flds
mov
data16
fsubr
pop
cmp
and
imul
mov
add
and
sub
lret
out
mov
add
cld
fstps
jmp
mov
jmp
and
add
dec
aaa
jnp
push
and
sbb
scas
cld
out
ds
mov
sub
cmp
pop
ret
fstl
lahf
in
lds
xor
fdivs
push
adcb
jae
loope
lock
jl
push
pusha
mov
xchg
rclb
in
rorl
test
sarb
dec
jo
aas
xor
ret
add
ds
arpl
mov
mov
into
xor
xor
decl
or
imulb
sbb
sti
test
jmp
sub
loope
roll
lods
shrl
lcall
rcr
and
sahf
int
sbb
aaa
out
mov
pop
fs
add
jo
xchg
pop
or
add
jnp
sbb
fsqrt
mov
addr16
fnstenv
test
or
push
and
xor
jl
pop
sbb
stos
pop
jl
lods
stc
jbe
mov
sub
test
repz
cli
inc
aaa
jne
es
xchg
mov
jnp
adc
xchg
push
out
pop
out
xchg
xor
test
jbe
pop
pop
addr16
shl
push
fisttpll
imul
mov
int
xchg
imul
jge
fwait
cmc
fstpt
or
stc
sub
xchg
dec
mov
and
scas
sub
imul
ss
fsts
dec
repnz
pop
enter
sub
jbe
stos
lods
nop
aaa
jp
jg
mov
mov
mov
lret
iret
mov
dec
or
sbb
cmp
sub
movsl
rorl
adc
xchg
dec
mov
sarl
jecxz
stos
insb
movsl
push
mov
lret
loopne
out
dec
inc
cmp
mov
push
mov
jns
in
ljmp
test
mov
test
sub
sbb
scas
push
pop
or
sbb
dec
lcall
nop
xchg
out
and
pop
mov
repz
cmc
shl
les
pop
pop
dec
mov
mov
sarb
das
mov
shll
cmp
push
mov
rcrl
aam
daa
insl
rcrl
xchg
mov
pop
call
in
popf
and
nop
or
jbe
ret
pop
nop
or
popf
leave
dec
pop
push
jmp
loopne
mov
pop
or
cs
pusha
push
mov
push
and
push
aaa
mov
iret
sbb
ret
adc
mov
add
jp
aas
ljmp
sub
xchg
mov
sahf
mov
adc
loop
imul
js
xchg
vmovmskps
pop
xor
lods
sahf
xlat
mov
push
push
and
xchg
jmp
adc
idivb
ret
mov
mov
lcall
dec
ljmp
out
sarl
and
rorl
or
scas
iret
sub
mull
outsl
xor
xchg
sub
sbb
push
xlat
fimuls
dec
and
pop
leave
sahf
fisubrs
daa
adc
rorl
in
inc
inc
pop
faddl
ja
or
push
push
imul
aaa
ljmp
cwtl
jae
xchg
fiaddl
fs
rcrb
push
js
sub
cmp
orl
add
inc
not
mov
repnz
into
bound
pushf
adc
jp
aas
push
and
loop
xchg
lock
push
xor
sbb
insb
xchg
inc
mov
je
int
cmpsb
jns
pop
data16
mov
lods
imul
xchg
inc
mov
sti
call
inc
shlb
hlt
jns
popa
cwtl
hlt
pop
and
sbb
or
lcall
sbb
jbe
jae
enter
lods
les
lcall
arpl
js
sbb
pop
dec
and
add
push
sub
cmp
adc
inc
scas
mov
inc
mov
push
xchg
aam
dec
daa
jne
leave
push
in
loope
and
jb
add
xchg
jb
sbb
jnp
and
mov
in
sbb
gs
cwtl
push
cmc
loopne
ds
popa
adc
fsts
push
inc
in
repz
push
mov
outsb
adc
incb
stos
push
dec
cmpsl
cltd
mov
jle
insb
lds
imul
lcall
mov
cmp
int
jae
push
sbb
jge
xor
mov
ficoml
arpl
out
or
outsl
loopne
js
adc
int
pop
stos
push
add
les
or
mov
ror
test
mov
jle,pn
mov
push
cli
lahf
lcall
stos
inc
scas
imul
nop
mov
adc
mov
jnp
push
lods
push
sbb
mov
mov
jb
fs
and
clc
pushf
dec
imul
mov
js
pop
in
nop
mov
xor
mov
pushl
mov
add
cltd
dec
dec
pusha
inc
and
dec
mov
lods
xchg
inc
inc
add
inc
data16
jmp
mov
test
rolb
aas
dec
or
scas
gs
cmp
cmp
sbb
pop
lahf
ljmp
push
mov
fldcw
fdiv
popf
call
ret
cmp
mov
stos
mov
add
cltd
cli
mov
in
mov
iret
test
inc
repnz
sub
pop
fisttpl
es
icebp
fdiv
or
jmp
jmp
repnz
shr
das
shrl
cwtl
inc
jb
addl
or
in
loop
and
push
imul
loopne
fildl
call
xchg
scas
test
push
imul
xor
adc
dec
cli
imul
cltd
fbstp
inc
pop
enter
lcall
and
sbb
lret
nop
in
inc
in
es
outsl
jbe
add
or
ljmp
hlt
mov
negl
outsb
clc
mov
in
sbb
cmp
add
ret
cld
add
cmp
scas
ja
pushf
pop
dec
xor
xchg
sbb
push
sbb
lcall
and
cmp
insb
xor
enter
mov
aad
jns
test
cs
jle
cmc
scas
mov
mov
jmp
leave
pop
repnz
or
and
lret
lcall
call
negb
adc
push
mov
add
jne
mov
cmpl
outsl
xchg
or
mov
pusha
inc
lret
jge
jo
xchg
mov
in
pop
out
pop
pop
xlat
jge
xchg
adc
sub
test
mov
jmp
xchg
push
adc
push
dec
add
jo
xchg
test
loopne
sbb
cli
es
repnz
lods
xor
pop
std
xor
adc
pop
push
dec
jne
inc
loop
adc
pop
inc
or
mov
cld
xchg
test
bound
arpl
xchg
in
rcrb
cmc
xchg
xor
mov
mov
out
lods
mov
loope
cmp
fs
addb
inc
stos
inc
mov
sbb
ret
jecxz
dec
leave
xchg
leave
pop
pop
xchg
or
gs
mov
or
cmp
push
push
enter
add
jb
sbb
mov
in
sub
push
in
mov
ljmp
cltd
jle
fidivrl
xor
xchg
pop
adc
hlt
push
mov
fmul
mov
push
roll
les
push
les
insl
fldt
rolb
in
xor
shlb
push
cmp
es
or
aas
lret
aas
mov
fs
add
aam
sbb
mov
push
inc
pop
inc
pop
shr
cltd
inc
repnz
stos
pop
aaa
std
cwtl
xchg
push
push
fistps
js
and
mov
mov
arpl
std
ret
outsb
lret
cmp
inc
xor
out
call
or
pop
mov
mov
scas
testl
movsb
xchg
add
cs
cmpsb
mov
xor
dec
incb
push
iret
xor
xchg
add
inc
mov
sub
cmovp
jmp
pop
jbe
insb
ror
sub
sbb
pop
negb
dec
push
pop
jno
sbb
add
fildll
aad
push
mov
cmp
add
jl
push
cmc
sar
jae
rcr
fsts
enter
add
xor
andb
inc
mov
js
xor
mov
push
jg
xor
xchg
mov
outsl
insb
xchg
hlt
and
shrl
push
mov
and
test
adc
pop
add
fnsave
xor
jns
js
test
fidivrl
ljmp
mov
xchg
pop
pop
fsubr
cmpsl
mov
cmp
pop
jmp
ljmp
lods
in
and
gs
cmp
mov
push
clc
and
jp
adc
repnz
lds
lret
mov
sbb
cwtl
or
mov
fdivrs
mov
mov
mov
push
jb
xchg
mov
cmp
xchg
scas
sub
pop
ss
dec
jno
xor
jno
add
adc
xor
push
dec
mov
adc
xchg
lds
insl
outsb
and
mov
lret
std
push
mov
incb
gs
inc
xchg
cmp
cmp
test
cld
adc
cmp
or
sub
dec
cli
loope
push
push
mov
or
xchg
mov
outsb
push
pop
and
jl
out
jg
or
rorl
pop
in
xchg
mov
inc
inc
lods
xor
or
mov
insb
and
pop
mov
int
ja
rcrb
adc
jb
popf
sub
jp
dec
sub
push
icebp
xchg
cltd
mov
mov
cmc
jl
call
lds
test
and
push
jns
mov
mov
or
cmc
test
cmp
mov
stc
lods
xlat
inc
push
in
sbbl
jb
ja
push
pop
xlat
mov
dec
imul
addl
pushf
int
sub
outsb
hlt
mov
cs
mov
adc
pop
jmp
jb
ljmp
pushf
push
push
sub
mov
ja
lods
ss
scas
mov
nop
add
cmp
push
xor
cmp
fcoms
and
leave
jno
movsl
mov
inc
jnp
mov
and
jecxz
sub
loop
fs
lock
mov
dec
pop
popf
in
xchg
xor
mov
out
fdiv
xor
test
sbb
ds
scas
mov
mov
sbb
test
mov
xchg
int3
js
out
dec
fisttps
aad
icebp
cmp
adc
xchg
push
enter
sbbb
xor
loopne
push
inc
jg
inc
inc
cmpsb
ret
jns
fstps
negb
cmpsb
and
je
movsl
dec
das
std
xor
sbb
mov
sahf
add
mov
jmp
adc
lods
pop
push
ficomps
dec
adc
jno
jno
out
scas
pop
les
jno
fildl
cld
mov
add
inc
sahf
mov
xchg
in
popa
outsl
jo
pushl
mov
shlb
pop
xchg
mov
xor
add
dec
test
and
xchg
bound
and
jno
xor
jne
loope
jno
sub
xchg
mov
in
push
push
dec
clc
push
nop
mov
mov
cmp
pusha
fs
cmp
jp
mov
out
testb
add
out
ljmp
repnz
mov
stos
pusha
mov
ret
sbb
or
arpl
popf
mov
adc
pop
xchg
outsl
xor
enter
inc
dec
sahf
lods
inc
shr
jg
shll
adc
fsubrs
pop
dec
ret
xchg
in
sub
imul
dec
pop
addb
mov
fdivp
xor
mov
mov
insb
push
jmp
call
pop
adc
insb
sbb
cs
add
sbb
mov
pop
fstpt
or
in
out
movsl
adc
push
add
mov
adc
inc
pushf
testb
outsl
adc
mov
cmc
in
xchg
jns
fwait
jmp
sbb
aad
cltd
iret
sub
jge
insl
push
xorl
xchg
xor
inc
arpl
dec
adc
call
add
adc
sub
movsl
popa
loope
push
shrl
sbb
leave
xor
xchg
inc
nop
jecxz
int
push
int3
pop
icebp
or
mov
dec
and
loop
scas
addr16
add
movsl
cmp
mov
aad
dec
mov
mov
clc
cmpsb
repnz
xor
jo
add
cs
sahf
test
jmp
push
adc
inc
or
std
mov
fists
and
sub
xchg
dec
xlat
aad
xor
or
ret
push
push
or
push
popa
xor
sub
mov
cmp
xchg
ret
rorl
sarl
adc
fidivrl
sbbb
ss
cmp
mov
test
scas
mov
aad
aaa
mov
cltd
clc
xchg
adc
stc
enter
xlat
push
outsl
inc
gs
cltd
cmovbe
jb
inc
mov
push
mov
adc
nop
jb
inc
and
std
or
push
pop
and
fwait
push
stos
dec
xchg
pop
add
div
dec
mov
cwtl
adcb
es
fmull
mov
jae
pop
sub
loopne
in
dec
or
or
dec
mov
lock
mov
lret
in
jmp
dec
and
pop
inc
scas
adc
pop
test
mov
cltd
push
ss
or
pushf
inc
sub
xor
adc
adc
filds
insl
mov
mov
insl
hlt
in
adc
inc
iret
shrb
ret
mov
or
add
or
rcrl
xor
dec
cmc
into
pop
stos
jns
jbe
xor
leave
ss
mov
ds
dec
fimuls
gs
aas
inc
cmp
fwait
shrl
test
bound
nop
in
enter
rcrl
popf
mov
call
fs
je
sbb
fsubrs
fnstcw
mov
std
push
push
jno
js
test
icebp
out
loop
push
xchg
aad
into
mov
adc
cmp
jmp
test
das
popl
push
mov
xchg
enter
jp
fstpt
insl
mov
addr16
out
je
add
fstpl
decl
mov
adc
sub
push
jae
adc
faddp
ret
ficomps
insl
inc
in
testb
xchg
mov
push
ljmp
jle
push
lock
repz
mov
pop
fadd
fmull
sbb
jge
fiadds
cmp
cmp
hlt
pop
stos
inc
loopne
mov
test
cli
mov
subl
rcrl
push
stc
mov
inc
xchg
xlat
mov
xchg
into
rcr
inc
in
pop
fnstcw
cltd
test
pop
xor
mov
and
dec
mov
jo
iret
or
pop
jp
xrelease
jle
inc
jecxz
stc
lds
push
cmc
in
pop
add
ror
sub
loopne
fwait
pop
lds
jne
pushf
and
data16
stc
push
mov
xchg
push
insb
xor
cmc
pop
jne
mov
and
mov
cmp
sahf
push
and
ljmp
fdivrs
sub
out
jb
mov
negl
insb
aas
fcoml
mov
es
addb
mov
into
adc
jo
test
shrb
int3
jle
lret
pop
jmp
fsubr
repnz
js
js
rcr
shll
sahf
cwtl
sbb
loope
dec
out
mov
xchg
mov
test
lea
outsl
int3
in
addl
pop
outsl
aad
test
dec
cmpsb
popf
fwait
pop
dec
repz
mov
inc
or
mov
scas
adc
popf
cs
or
pop
jns
dec
mov
fninit
mov
push
cmp
shl
cmp
jl
lret
and
pop
pop
fdivl
in
jl
cmpsl
cmp
sbb
dec
aaa
mov
mov
addr16
jmp
xor
mov
xchg
sub
mov
cmp
lret
cmp
push
aas
repnz
mov
push
sub
mov
push
inc
adc
rcrl
aad
jns
jg
js
les
cmpsb
mov
mov
push
sub
dec
out
into
jns
loope
cs
imul
lods
frstor
push
mov
add
loope
xor
scas
or
lock
jle
ss
jae
addr16
pushf
or
push
scas
inc
repz
fnsave
cmp
dec
pushf
xchg
dec
dec
dec
pop
and
mov
mov
xchg
js
hlt
dec
sbb
dec
sti
mov
or
mov
xor
pusha
dec
unpckhps
std
daa
aad
mov
pop
leave
inc
lret
in
repnz
sbb
mov
fiaddl
jb
xlat
mov
js
imul
lods
hlt
and
xchg
inc
mov
cwtl
sbb
xchg
js
lods
sub
rorl
testb
jb
nop
aad
stos
mov
ja
pop
xchg
adc
push
inc
stc
sti
pop
sbb
cmp
mov
dec
out
popa
cmp
cwtl
insb
aad
xor
mov
and
pushf
mov
push
add
loop
decb
mov
cmp
push
add
mov
lret
fs
jae
ja
pop
mov
mov
mov
lret
xor
lock
dec
fwait
inc
iret
out
pop
data16
mov
fildl
lds
pop
mov
dec
std
popa
lods
fcompl
and
lods
ret
dec
iret
sar
sub
popl
shll
xor
jecxz
mov
and
clc
call
mov
mov
sub
bound
adc
dec
ds
subl
mov
lock
inc
scas
or
jle
sti
mov
and
leave
sbb
push
mov
loop
mov
out
les
pop
cmpsl
sbbl
cmp
mov
jmp
xchg
addr16
mov
sarb
and
daa
fstl
das
jl
mov
xor
mov
mov
fistps
push
pop
in
loop
lahf
mov
mov
mov
sbb
roll
mov
jg
fldt
popa
mov
pop
js
inc
sti
out
push
inc
arpl
inc
pop
daa
cmpsb
mov
jmp
or
mov
inc
xchg
xor
into
cmpsb
dec
leave
or
adc
xchg
inc
mov
aad
negb
xchg
cld
or
xor
mov
test
sub
hlt
gs
addr16
sub
jle
pop
mov
push
inc
mov
out
pop
mov
mov
or
lret
sub
call
andl
xor
fildl
iret
cmp
mov
iret
icebp
icebp
mov
inc
push
into
fdivl
adc
movsl
cmp
inc
rcll
add
push
ljmp
push
pop
out
in
sub
pop
pop
je
jl
push
jbe
aad
cmp
cwtl
sub
pop
pop
mov
daa
xlat
pop
imul
or
shlb
insb
pop
es
ret
lcall
leave
je
rcrb
and
xor
iret
iret
int
loope
test
out
xchg
cmpsb
mov
out
push
jne
pop
mov
ss
sbb
push
mov
pop
popf
add
sub
inc
fstps
push
insl
add
mov
mov
or
xchg
stc
addr16
sub
cs
mov
adc
subl
dec
sbb
mov
mov
cmpsl
lock
in
loopne
lock
ret
outsb
imull
mov
pop
data16
or
lods
out
daa
xor
cmpsb
imul
loope
enter
pushf
adc
aad
push
loop
into
and
aaa
fistpll
mov
fldl
xchg
dec
push
pop
or
dec
inc
js
pusha
cmp
pop
pop
inc
sub
mov
in
xchg
lahf
jecxz
call
jnp
mov
inc
ss
pop
xchg
dec
sti
adc
pop
iret
xor
xchg
aaa
sub
cs
sub
pop
lock
sbb
push
mov
lret
push
ds
mov
cmc
out
dec
cmc
je
mov
mov
jmp
cmp
stc
jnp
mov
mov
orl
and
das
or
sti
ss
mov
mov
jne
jo
cmp
xchg
into
or
inc
sahf
enter
test
cmp
xchg
add
out
pop
jne
inc
push
pop
mov
lret
mov
cmp
pop
mov
push
mov
dec
sbb
in
jne
lock
dec
dec
roll
jnp
mov
jno
push
pop
aas
mov
ljmp
les
adcl
lods
out
adc
icebp
in
adc
jne
lods
cmp
dec
stos
mov
cs
inc
stos
add
adc
cmp
loopne
cmp
push
mov
mov
cmc
mov
mov
xchg
lahf
mov
shll
fcmovbe
and
arpl
push
dec
adc
jno
out
fwait
mov
test
negl
repnz
clc
mov
mov
mov
sbb
or
cld
std
clc
mov
sar
lea
adc
lret
pop
xor
dec
dec
ror
mov
mov
mov
fildll
xor
adc
out
mov
fistpl
popf
mov
inc
iret
push
cmpsb
fstps
mov
xor
push
mov
out
mov
sbb
loopne
imul
fsubrp
das
leave
fnsave
mov
sti
aas
pop
test
div
xchg
mov
add
xchg
push
mov
mov
xchg
pop
xchg
jmp
pushf
sbb
inc
das
daa
fdivl
loopne
pop
jbe
lds
enter
xor
decb
iret
ds
cltd
loop
dec
sub
xor
shlb
cmpsl
not
and
cli
adc
mov
je
ja
push
mov
push
test
mov
jmp
dec
fsubrs
stos
push
pop
in
mov
dec
xor
cmc
jle
pop
push
xchg
outsb
in
sbb
mov
mov
push
adc
in
ret
lods
loop
mov
adc
pop
rcll
fisubs
shl
push
and
adc
xchg
fcmovu
movsb
adc
cmp
mov
xchg
insb
mov
push
fwait
cs
data16
jmp
test
clc
adc
pop
es
mov
jno
xchg
nop
popf
mov
enter
fcomps
xor
jle
stos
adc
and
jg
jb
lds
aas
aad
cld
repz
decb
or
pop
push
lret
mov
push
scas
cmp
shl
mov
push
ret
lcall
or
inc
mov
mov
clc
movsb
inc
ret
add
adc
inc
iret
icebp
xor
pop
mov
xchg
clc
rolb
rcrb
sbb
or
jecxz
dec
pop
fstl
pop
adc
jbe
lret
comiss
lds
push
pop
into
mov
pop
aam
cmp
out
adcb
pop
mov
aas
les
scas
and
andb
cmp
loop
aad
or
aad
xor
lcall
jge
xlat
out
sbb
or
fucomp
jb
shl
sub
mov
jno
add
xchg
xchg
in
jae
int
dec
pusha
enter
pushf
hlt
jge
je
inc
inc
lock
lds
pop
mov
mov
loop
testl
mov
add
mov
mov
sub
insl
js
xchg
jbe
in
mov
pop
inc
mov
std
nop
add
or
imul
fidivrl
dec
into
test
sarl
push
ret
mov
xorb
sub
jne
push
fwait
push
loop
fst
lret
mov
and
mov
mov
add
jbe
inc
cli
test
dec
fdivr
fidivl
push
dec
jnp
pop
shlb
mov
clc
sub
and
enter
sub
jne
out
mov
shrb
mov
adc
xor
clc
dec
or
enter
std
fadds
js
scas
mov
cwtl
scas
push
or
fwait
sub
les
jg
ss
insb
movsb
mov
cld
inc
mov
add
push
fldenv
xor
loop
imulb
es
lds
inc
cwtl
lock
std
push
in
and
mov
psraw
cmp
mov
data16
fldenv
test
int3
cwtl
jnp
adc
bound
rep
pushf
pop
lea
mov
pusha
shrb
pop
subb
push
xchg
push
jl
mov
aas
or
sbb
in
pushf
xchg
mov
aam
mov
movsb
lds
inc
jns
adc
push
and
stos
insb
adc
clc
stos
inc
cld
inc
jg
xchg
and
sub
pusha
das
sbb
sbb
jns
movsb
push
test
fsin
mov
in
mov
lock
das
repnz
pop
pop
mov
dec
jp
mov
xchg
or
xchg
cli
dec
sbb
imul
xor
repz
out
imul
ret
jp
adc
mov
push
call
repnz
push
clc
xchg
mov
xchg
imul
movsb
into
and
insb
adc
imul
test
lcall
dec
mov
xchg
jmp
xlat
arpl
mov
movsl
dec
cmp
enter
rclb
std
out
lods
mov
scas
ss
pop
ficomps
mov
rolb
repnz
adc
cwtl
inc
xchg
or
ds
daa
in
jbe
mov
ja
push
leave
sbb
mov
or
jnp
or
inc
bound
cltd
fisubl
fimuls
dec
dec
or
add
mov
xor
jmp
push
loope
inc
mov
scas
adc
js
clc
mov
idivb
data16
pop
inc
and
pop
loopne
sarl
les
loopne
imul
ret
fsubs
inc
pushf
sub
push
push
mov
popf
jbe
sub
fstpl
arpl
mov
mov
cmc
push
pop
loopne
push
test
popf
pop
dec
loopne
test
add
inc
jbe
cmp
ret
jmp
cld
insb
dec
push
hlt
mov
leave
lea
mov
scas
sbb
sbb
cmp
jl
cmpsb
outsb
push
scas
leave
push
es
sub
push
cmp
notb
cmp
adc
lcall
aaa
jo
push
js
sbb
sub
sahf
lods
in
sub
dec
divl
ret
xchg
push
loope
fldenv
repnz
xor
xchg
rorl
mov
mov
push
cwtl
inc
mov
sbb
pop
add
jns
clc
mov
rclb
pop
adc
sbb
test
shl
cwtl
pop
js
stos
pop
sti
dec
movsb
push
inc
xor
pop
testb
test
sbb
ror
adc
or
gs
mov
mov
gs
orl
imul
jle
mov
insl
mov
rolb
pop
iret
pop
push
les
inc
add
scas
mov
nop
mov
pushl
sbb
xor
dec
pop
cli
jg
mov
add
hlt
and
pushf
negb
adc
pop
movsb
insl
push
test
cmc
pushf
dec
loop
jg
mov
mov
ljmp
inc
addb
mov
imul
out
in
dec
xchg
and
mov
sub
mov
mov
into
mov
push
inc
nop
adc
mov
mov
mov
dec
ja
mov
imul
pop
adc
rcl
cmpsl
insb
fwait
leave
add
idivb
adc
loope
montmul
cmpsb
shll
ljmp
loop
imul
mov
jmp
lods
rcrb
push
or
int
jl
pop
jb
daa
pop
imul
leave
xchg
nop
xchg
push
into
in
jb
mov
pop
cmp
and
xor
jp
cmp
enter
jbe
jmp
xor
stos
cmp
push
xlat
inc
sub
mov
sub
jecxz
or
aas
aam
outsb
pop
xchg
push
pop
jecxz
cmp
cmp
addb
pop
test
mov
ds
mov
decl
and
rcrb
scas
push
mov
popa
shrb
cmp
or
dec
int3
jge
aad
cld
sbb
mov
divb
xchg
sbb
test
mov
in
pushf
add
push
in
fdivrl
mov
sahf
mov
lods
inc
pop
lods
adc
mov
jmp
scas
addr16
mov
xchg
in
adc
cmp
loope
cs
es
and
sub
add
add
add
push
out
out
testl
out
test
out
dec
inc
pop
adc
or
sarl
nop
sbbb
fwait
push
out
cmp
sub
dec
cmp
mov
mov
sbb
ljmp
inc
jmp
mov
sbb
lods
pop
pop
or
push
sbb
cmp
std
cmp
sbb
rclb
xor
sti
fisubrl
out
or
outsb
imul
dec
push
into
scas
xorl
add
adc
sbb
dec
ffree
fsubrl
mov
sahf
movsl
lock
sub
mov
add
scas
std
dec
lcall
or
lods
enter
inc
push
mov
xor
pop
rorl
xchg
push
lods
loope
mov
adc
mov
xchg
or
imull
loope
mov
jno
jnp
cmp
aam
xchg
in
pop
push
or
mov
in
pusha
out
cld
stos
dec
add
cltd
sub
add
jne
sbb
pop
jbe
aaa
push
push
adc
sbb
inc
push
mov
fcmovbe
sbb
pop
adc
lret
mov
sahf
add
nop
fcomps
sar
imulb
enter
insb
and
test
mov
xchg
jp
sbb
pop
je
jecxz
mov
sbb
subb
aam
jp
xlat
addr16
out
adc
dec
mov
incb
data16
and
rol
pop
mov
sahf
fldl
loope
cmp
jnp
and
or
popa
jno
dec
cmp
int
lods
mov
xchg
cmp
sbb
mov
lcall
pop
or
pop
mov
mov
imul
mov
nop
repnz
sbb
or
jecxz
jp
or
mov
pop
insl
mov
and
sub
cmp
jle
pusha
stos
sub
ljmp
adc
mov
push
mov
stos
jmp
sarb
xchg
and
or
add
cmp
or
mov
sub
nop
imul
push
add
dec
mov
arpl
aaa
dec
lock
inc
jnp
cmpsl
xor
pop
icebp
pop
and
shll
test
lock
test
es
das
push
pop
push
sbb
test
lds
mov
in
dec
pop
orl
pop
adcl
xchg
mov
repnz
mov
xor
mov
test
loop
scas
inc
mov
outsl
int
add
pop
adc
popa
das
sbb
jb
fdiv
jge,pt
lret
pop
movsb
imul
es
ret
mov
cs
jnp
jl
push
cmpl
mov
or
sbb
das
imul
popf
enter
jmp
push
dec
dec
enter
fwait
data16
rcll
xor
adc
in
inc
aad
adc
gs
cli
sbb
inc
std
push
repz
cmp
notb
lret
adc
loopne
in
popa
aas
mov
mov
repz
test
add
repnz
hlt
add
lret
jle
jbe
dec
andl
dec
movl
mov
shl
jp
sbb
mov
pop
mov
fisubs
int3
test
rcll
iret
stos
mov
clc
dec
sbb
cmpb
jns
shl
insl
xchg
mov
int3
std
std
in
cli
cmpsl
sub
lret
adc
imulb
daa
fs
cli
in
mov
sub
add
jmp
lret
das
vpunpckhwd
or
cs
cmp
cmp
ret
and
cmp
addl
movsb
cmpsb
mov
cmp
jge
cltd
or
in
sbb
stc
sub
dec
pop
pushf
xor
and
scas
xor
add
and
push
sbb
add
add
push
mov
es
ds
pop
loope
xchg
mov
out
push
movsb
mov
pop
jns
mov
adc
xchg
outsl
outsl
jo
fwait
test
mov
je
je
insb
pop
icebp
pop
jo
push
inc
mov
jecxz
cltd
popa
or
push
mov
fldt
xchg
dec
mov
std
xchg
xor
lods
ljmp
mov
cmp
fnstsw
mov
movsb
cli
sub
pop
and
cltd
data16
pop
mov
outsb
mov
jae
ja
xor
mov
lods
push
les
movsl
fsts
push
in
jmp
xchg
pop
lret
push
jmp
in
xchg
push
sti
mov
sub
xchg
pop
out
sub
xorl
xchg
lcall
in
mov
lret
jmp
mov
gs
jg
adc
scas
or
insb
and
loopne
mov
test
xchg
imul
out
mov
jns
cmpb
sbbb
popf
outsb
or
lahf
add
jae
shll
mov
rcr
lods
hlt
lret
mov
and
ljmp
loop
rolb
lock
out
jne
pop
pusha
sub
adc
add
add
cmp
push
fisttpll
xchg
les
shrl
xchg
mov
cmp
and
test
repz
nop
sub
jg
and
jge
mov
pop
lcall
fwait
pop
and
movsb
and
xchg
jl
ss
sahf
lcall
ja
sti
das
ja
repz
mov
ds
push
mov
dec
loopne
jmp
in
sarb
jne
jle
push
dec
xchg
mov
lret
repnz
aam
imul
in
jnp
mov
dec
vrcpps
jae
mov
shlb
xor
lods
jnp
xchg
ja
in
int3
push
pop
test
paddusw
dec
mov
mov
loop
add
xchg
pop
xor
jb
jno
xchg
mov
jno
in
andb
mov
out
orb
scas
pop
jmp
push
loopne
scas
loopne
hlt
pop
test
sbb
xor
imul
xor
inc
fcoml
xchg
cmc
mov
jo
sub
sbb
lods
mov
add
and
mov
inc
mov
ret
mov
icebp
pop
xor
les
mov
ljmp
jge
fisubrs
cmp
clc
arpl
loope
cwtl
and
and
pusha
cmpsl
dec
inc
test
xchg
dec
push
mov
movsl
sbb
or
repz
mov
xchg
mov
sbbb
add
xor
mov
mov
mov
jbe
push
pusha
dec
lea
dec
hlt
cmpsb
jb
cli
cld
cmpsl
sub
sub
iret
out
int3
and
paddq
mov
scas
push
push
cmp
ret
rorb
pop
pop
ja
pop
jg
fnstcw
into
icebp
mov
subl
sub
and
mov
filds
mov
mov
arpl
imul
mov
add
js
add
clc
inc
add
sar
adc
shr
imul
jae
cmp
cmpsb
and
arpl
loope
mov
add
fisttps
cmpsb
pop
lret
add
movsb
addr16
cli
dec
insb
dec
jp
js
cmp
mov
sbb
jl
out
dec
inc
pop
and
dec
jmp
inc
idivl
imul
mov
stos
mov
pop
and
sbb
pop
repnz
dec
insb
outsl
pop
dec
mov
test
in
in
ret
sbb
in
jo
fcmovb
mov
fldl
xchg
dec
and
adc
cmc
and
jp
mov
add
std
or
shrb
xchg
pop
jp
fstpl
jle
push
mov
cmpsl
fsin
mov
jp
stos
cmpb
inc
pop
sbb
jno
jp
es
push
imul
in
mov
cmpsb
notl
cmp
nop
inc
mov
cs
adcb
fstps
mov
push
sub
push
or
fistps
das
addb
jmp
out
pop
push
imul
mov
inc
sub
xchg
mov
cmp
ret
pop
stc
xor
mov
stc
cli
lret
hlt
fimuls
sahf
pop
xchg
fsubrs
jae
adc
sbb
lea
icebp
xchg
out
sbb
fwait
ja
dec
aas
ljmp
pop
jecxz
push
dec
jp
aad
dec
int3
jb
out
adc
sbb
scas
mov
iret
fildl
mov
jmp
pushf
hlt
subb
inc
push
ret
fstl
repz
inc
sbb
sub
stos
fidivl
insl
loope
add
mov
cmc
xchg
in
cmp
test
mov
js
inc
mov
mov
cwtl
aad
movsb
aas
pop
xchg
mov
mov
into
jns
xor
mov
mov
inc
daa
cmpsb
pusha
sarb
das
pop
xchg
mov
dec
or
and
jnp
in
fucomip
movsb
mov
mov
dec
mov
xchg
xchg
arpl
aad
sahf
mov
shr
pop
ss
pop
pop
insb
adc
add
inc
mov
stc
push
fistpll
lahf
jbe
sub
or
sbb
jle
int3
jg
or
jl
movsb
test
cltd
xchg
and
adc
shrb
lods
js
push
inc
sahf
and
pop
insb
or
les
and
jge
xchg
daa
rcrl
xor
mov
add
mov
lret
or
or
loopne
adc
mov
mov
shl
imul
jae
sar
adc
cwtl
cs
inc
test
cltd
pop
dec
jge
int
adc
int3
add
lods
in
adc
test
push
jecxz
cli
insl
cmc
fistpl
cmp
enter
lret
mov
lds
subl
jne
jp
jecxz
mov
mov
rorl
cmc
jbe
sbb
jmp
push
outsb
sub
jmp
lods
mov
bound
and
sbb
int3
shl
leave
adc
dec
addr16
inc
movups
imul
cmp
xor
xchg
xor
repz
or
jb
fcomps
xchg
xchg
sbb
out
jne
daa
add
sbb
xchg
neg
inc
aam
pushl
sbb
ljmp
loop
xor
dec
ljmp
lock
enter
add
dec
lret
push
shr
lret
test
out
ret
rcrl
int3
jl
cmpsl
stos
and
in
mov
jmp
or
push
jnp
andb
lret
or
sbb
int3
cmp
fisubl
or
dec
jnp
xor
aaa
in
mov
or
fcmovb
inc
clc
inc
gs
lock
xor
js
add
pop
xor
xchg
mov
lods
xor
dec
mov
pop
mov
nop
ljmp
out
mov
ljmp
test
sub
add
out
pop
push
adc
jmp
mov
or
adc
subl
jb
mov
jns
nop
sub
lock
lods
mov
pop
dec
lcall
outsl
sti
stos
xchg
stos
pop
sub
xor
sub
jne
fmul
je
xchg
sbbl
or
roll
sbb
jb
cmp
sti
fwait
mov
push
jno
ss
push
cmp
jns
fs
mov
mov
mov
xchg
add
add
or
and
or
es
jl
push
iret
cwtl
lods
fwait
cmp
pop
dec
xor
imul
flds
or
and
aas
fs
insb
mov
jecxz
imul
or
sub
xor
xor
or
xor
out
lods
jnp
movsb
push
lret
or
stos
xchg
inc
add
mov
or
inc
and
inc
jnp
mov
lret
rcrl
jbe
or
and
shrl
xor
shll
fsubrs
push
mov
outsl
je
fistpl
aas
mov
filds
gs
or
inc
adc
add
ds
ss
aam
leave
xor
ja
cmpsb
add
scas
nop
jl
movsl
mov
cmp
outsl
push
outsl
out
inc
fwait
mov
xchg
shlb
ljmp
jg
mov
shrl
sbb
negl
shl
int3
sbb
mov
sub
jl
xor
mov
push
push
sbb
into
ret
jns
jmp
popf
test
sbb
adc
lahf
pop
outsl
and
mov
enter
lds
js
mov
in
test
out
add
js
lcall
fidivl
sbb
sub
mov
and
dec
dec
and
fcmovnb
popa
fwait
std
sbb
add
push
pop
push
hlt
xchg
sarb
and
das
repnz
je
adc
mov
push
and
nop
sub
in
imul
and
or
ret
and
mov
xchg
das
inc
gs
sub
lea
push
or
add
sub
mov
fwait
sbb
push
xchg
arpl
popa
pop
and
inc
pop
add
dec
adc
imul
jp
fdivs
cmp
mov
add
jle
out
pop
jbe
or
lods
jae
lahf
mov
xlat
das
fildll
cs
push
out
nop
ja
aas
stos
outsl
xor
sub
push
js
pop
mov
insb
mov
push
push
cmovl
subb
mov
push
add
aam
add
lods
push
sbb
inc
iret
and
cmp
outsl
movsl
pop
xor
push
sarl
push
and
mov
sbb
push
adc
fistpl
outsb
or
and
mov
push
push
mov
int3
ret
popf
lret
pop
int3
inc
xchg
mov
mov
std
loopne
outsl
mov
mov
pushf
gs
mov
in
ret
sub
mov
std
xlat
cltd
xlat
inc
mov
aaa
pop
cmpsl
lock
addr16
push
pop
or
cmp
arpl
ja
aaa
movsb
dec
out
icebp
repz
stos
and
rol
movsl
int3
mov
xorb
lret
mov
inc
jmp
dec
and
cmp
push
loope
xor
ja
ret
orl
cmp
test
popf
inc
in
dec
push
mov
out
xchg
adc
lea
leave
add
mov
xlat
lds
gs
jno
in
lds
inc
imul
or
sub
xchg
jge
sub
insb
popf
cmp
mov
data16
js
or
and
xchg
push
pop
inc
sahf
jae
cmp
fwait
jnp
ss
mov
xchg
jmp
notl
out
leave
andb
jnp
mov
sub
ret
mov
in
mov
push
jmp
adc
and
scas
jae
push
dec
movsb
fisubrs
push
adc
cmp
xor
ljmp
xchg
dec
not
jl
lret
mov
mov
sub
xchg
popf
cmp
pop
test
xchg
call
jl
hlt
sahf
iret
repnz
scas
cmpsl
movsl
xor
ror
jl
pop
xor
cmpsl
inc
lods
cmp
mov
in
fdivr
call
sub
pop
lcall
add
pop
fmul
dec
mov
lock
jne
mov
mov
and
mov
sub
sbb
fistl
xchg
and
jns
ficomps
xchg
dec
mov
jl
pop
cld
xchg
fcomp
pop
call
or
or
popf
and
rorl
test
mov
shlb
out
out
inc
movsl
jge
and
jl
inc
ds
and
dec
bound
sub
push
jb
jp
nop
adc
daa
mov
adc
mov
mov
xchg
incl
jo
test
cmpsb
and
pop
lods
inc
jb
sbb
pop
mov
fstl
or
bound
bound
scas
mov
adc
mov
in
and
clc
fstpt
push
into
stos
xchg
inc
popf
fldt
xor
sbbb
inc
mov
sub
cmc
data16
lret
shlb
mov
test
jmp
xor
inc
or
stos
jg
fs
andb
mov
xchg
sbb
mov
jle
or
sbb
cld
mov
push
adc
mov
adc
data16
cmpsl
inc
dec
xor
int
into
sbb
lcall
shlb
andl
es
jecxz
movsb
mov
aam
push
test
inc
or
jl
mov
idivl
sbb
inc
and
lret
std
jne
data16
dec
or
dec
hlt
ljmp
rcll
ds
lock
or
jno
out
bound
or
pop
push
pushf
push
loop
dec
aaa
mov
push
adc
in
rcrb
xchg
mov
xchg
mov
mov
outsl
jge
rorl
jmp
lock
cli
mov
push
xor
mov
aaa
add
fildl
inc
divb
fimull
xchg
xor
jle
xchg
pop
data16
insb
jmp
insb
sub
sub
pop
dec
repnz
pop
dec
mov
push
repz
stos
mov
les
pop
cmc
xchg
cmp
sbb
inc
push
sbb
or
repnz
pop
sub
add
fs
mov
or
mov
dec
dec
mov
icebp
dec
pop
jl
adc
sbb
rcrb
lds
fcomi
icebp
push
les
pop
loope
bound
pop
sub
shll
sub
sub
mov
icebp
xchg
xor
mov
stos
adc
mov
sub
pop
mov
rolb
rcl
lahf
scas
xchg
add
dec
adc
mov
inc
jp
mov
jno
adc
daa
jnp
mov
stc
or
lret
or
push
mov
or
mov
ja
xlat
mov
mov
or
test
inc
dec
out
or
sarb
cmc
cmpsb
sbbb
fmul
pushf
clc
mov
into
xchg
iret
xchg
leave
jp
and
ds
jns
mov
nop
inc
int
xchg
xchg
es
dec
jae
notl
decb
mov
test
daa
sbb
jmp
sbb
ret
push
loop
int3
inc
jns
mov
pop
pop
adc
inc
mov
daa
dec
loop
sub
out
jmp
out
add
call
aaa
sbb
adc
push
and
or
pop
jbe
pop
pusha
push
lods
mov
push
cmp
arpl
push
push
es
fstpt
adcl
ja
bound
or
mov
enter
pop
mov
and
adc
jmp
sub
add
in
nop
pop
push
arpl
je
fistps
mov
adc
mov
mov
fimuls
push
mov
out
addr16
push
cmp
xor
ja
inc
iret
mov
shrb
mov
xchg
stos
pop
daa
mov
rclb
sub
test
loop
jle
pop
push
xor
inc
add
les
jge
leave
mov
jbe
mov
fimull
fiadds
and
movsl
popa
out
and
or
or
cmp
inc
lea
hlt
mov
sti
jge
ss
mov
testl
gs
mov
hlt
push
sarl
inc
mov
and
scas
lock
mov
fisubs
in
and
ljmp
xchg
lods
sbb
jle
xchg
dec
inc
mov
roll
pop
in
xlat
sub
rorb
lds
jle
pop
aaa
mov
pop
shll
imul
pop
int
scas
int
sub
add
xchg
cmpsl
add
fstpl
fdiv
lds
adc
lahf
fdivs
ss
in
into
inc
adc
ret
cltd
das
ja
enter
idivl
cmp
dec
dec
mov
stc
mov
cmpsl
jg
mov
xchg
or
imull
cmp
jbe
push
in
popa
stos
inc
and
inc
fadd
push
mov
xchg
inc
rcrl
rolb
test
sarb
push
xor
lock
lods
adc
cltd
das
lods
je
push
dec
jl
add
dec
dec
rcrl
adc
cwtl
xchg
inc
mov
sub
and
ret
cmc
adc
pusha
out
leave
js
lret
int
loop
fldl
call
mov
mov
outsb
outsl
outsl
mov
xor
pusha
adc
dec
into
das
scas
ss
sbb
ficoms
add
mov
rolb
leave
adc
dec
lds
dec
cmp
addb
jo
scas
jp
rol
push
test
dec
aad
out
jb
push
mov
je
dec
mov
rol
dec
mov
inc
adc
subb
sbbl
out
test
add
jl
idivl
xor
icebp
loop
pop
pop
xor
ljmp
cmp
insb
test
fistps
jge
movsl
or
sub
pop
test
aam
pop
mov
daa
inc
loop
ret
pop
adcl
add
push
movsl
lods
pop
jnp
sbb
push
aaa
sbbb
mov
cwtl
outsb
addl
xor
aaa
push
pop
in
add
pop
lock
rcl
jp
addb
jmp
and
mov
ret
mov
or
mov
jno
mov
xchg
inc
aam
mull
add
rolb
dec
repnz
jg
insl
mov
cli
inc
and
in
mov
sbb
jnp
les
stos
ficompl
lcall
jge
jp
fcoml
xchg
into
fsubr
stos
lret
add
dec
mov
xorb
sub
shl
mov
repz
or
dec
push
lods
mov
mov
outsb
or
xchg
mov
mov
cmp
pop
sbb
addr16
aad
jge
add
stos
mov
inc
pop
or
add
xchg
jo
pop
sbb
cld
fiaddl
cwtl
imul
fldenv
jb
call
repz
cmc
push
sahf
push
mov
dec
jnp
jp
aad
call
mov
lret
pop
mov
and
fiaddl
mov
pop
xor
sbb
jge
cs
sbb
dec
xchg
loopne
negl
dec
push
lea
out
push
cmp
cmp
imul
sub
jae
insb
xchg
mov
push
in
rcll
pop
jae
repnz
inc
enter
cltd
es
ss
int
int
push
sahf
sub
repz
lods
inc
cmp
ret
les
xor
inc
mov
mov
aam
cmp
mov
inc
pop
outsl
sub
ss
mov
mov
mov
and
lahf
xchg
pusha
int3
mov
mov
es
hlt
ljmp
mov
test
inc
pop
sahf
lock
jmp
jo
mov
xchg
xor
call
sub
clc
sbbb
out
iret
out
test
outsl
ss
push
inc
push
lods
fsts
mov
gs
shlb
stos
jecxz
aas
jbe
aam
mov
imul
js
pop
in
mov
cmp
pop
cmp
sub
test
add
mov
aas
cmp
or
cmpsl
mov
pop
shll
mov
adc
dec
movsl
insl
xchg
mov
fwait
sub
loope
test
mov
jnp
xchg
and
adc
cmpsb
call
pop
clc
and
dec
leave
aad
iret
mov
push
ja
push
nop
pushf
jae
sbb
push
je
out
and
pop
xlat
xor
imul
aam
inc
aam
repz
ret
subl
pop
push
nop
fs
out
insl
jae
mov
cmp
jge
xchg
subb
fcoms
outsl
pop
add
jg
ret
sbb
adc
xlat
lods
or
inc
mov
pop
push
fisubrl
xchg
inc
mov
fdivrs
jnp
and
or
sbb
fwait
xchg
ret
gs
je
mov
nop
gs
imul
pushf
lds
xor
nop
es
mov
sbb
in
mov
xchg
xchg
pop
mov
aaa
arpl
or
hlt
add
mov
lret
mov
lret
push
dec
sbb
paddsw
pop
mov
inc
xor
xlat
stos
aas
nop
push
mov
xchg
inc
out
shll
cmpsl
dec
stos
and
mov
js
stc
shll
hlt
inc
testb
add
outsb
mov
inc
push
fistpl
es
jb
mov
roll
xchg
cmpsb
stc
out
mov
xchg
data16
mov
add
loopne
ljmp
or
std
js
popf
stc
pop
push
mov
jae
stc
bound
mov
mov
iret
movsb
jnp
pop
jnp
xor
cs
arpl
repnz
xchg
pop
and
mov
mov
dec
mov
jno
das
sahf
lahf
add
pop
cmp
jnp
outsb
inc
sti
out
repnz
and
and
js
or
repz
xchg
xor
out
cld
int3
push
pop
sbb
pop
ret
pop
xchg
add
pop
cmc
cmpsb
stos
stos
jbe
popf
jno
sub
add
push
pop
mov
cwtl
ret
dec
mov
addr16
fsubl
dec
das
adc
inc
jnp
pop
xor
hlt
rdtsc
or
mov
push
xchg
aam
jle
cmpsb
aam
insl
sbb
sbb
lret
xor
in
pop
ljmp
popf
jp,pt
jge
cmc
mov
notl
push
mov
out
in
pop
out
scas
rorl
pop
sbb
mov
sbb
fiaddl
inc
xor
jmp
js
add
cs
jb
out
adc
push
outsl
mov
xor
push
dec
push
into
shlb
loop
and
jo
xchg
pushl
lret
testl
popa
mov
test
test
or
lret
loop
test
stos
pop
cmp
in
gs
mov
lea
in
outsl
subl
pushf
outsl
outsl
jge
or
bound
testl
sbb
mov
xchg
cmp
stos
into
addb
cmpl
cmp
add
test
xor
ret
push
adc
call
xor
bound
roll
pop
leave
mov
cmp
repnz
jge
jmpw
inc
push
outsl
enter
mov
mov
mov
cwtl
in
mov
mov
cmp
mov
shll
mov
mov
fbld
xor
push
loop
add
push
sub
jbe
js
cmc
int
xchg
cltd
or
cmc
sahf
shrl
and
ja
movsb
clc
mov
das
rolb
add
xchg
sbb
pop
shrb
xchg
mov
mov
cltd
adc
cmp
lods
dec
jp
or
js
insb
mov
or
xor
cmp
outsb
loope
inc
inc
xor
call
popf
sarb
fcomp
ljmp
cmp
aam
sub
mov
mov
gs
js
sub
pop
loope
adc
hlt
insb
mov
adc
pop
dec
add
jp
popa
sarb
and
lea
pop
loopne
sub
inc
dec
leave
lahf
adc
outsb
xlat
mov
jle
lret
push
test
aam
and
out
jns
cwtl
inc
ljmp
leave
lcall
aas
and
push
inc
xor
mov
jne
dec
or
andb
in
push
cmp
call
cmp
loope
add
outsb
xor
or
int3
loope
push
fs
ljmp
push
out
cmpsb
add
jns
cmp
les
movsl
lods
sahf
loop
mov
jbe
movb
dec
arpl
mov
jbe
lds
lods
mov
ja
pop
ret
mov
mov
dec
outsb
sahf
rol
ret
cmp
add
sbbb
js
cmc
mov
in
jae
push
mov
in
loope
adc
fidivs
sbb
in
pop
inc
movsl
sbb
iret
and
repnz
or
jns
jle
mov
xchg
clc
jne
in
cld
pop
es
stc
xor
push
inc
inc
xchg
mov
xchg
fwait
jg
shrl
inc
das
mov
mov
mov
in
push
and
pop
es
cmp
dec
mov
xor
stos
mov
sti
mov
add
add
and
xor
dec
pop
push
dec
mov
cwtl
rclb
or
and
shll
ss
in
mov
xorl
cmp
add
cmp
cmpsl
lock
mov
jbe
jle
sub
fwait
in
jecxz
test
jne
dec
adc
fisttpl
js
xor
adc
ret
push
outsl
push
loope
dec
icebp
cmpsb
xchg
adc
push
mov
int
fcmovnbe
xor
int3
es
fs
mov
pop
int
std
cld
int
pop
push
or
push
dec
pusha
aam
dec
push
mov
arpl
mov
cmp
add
dec
adc
dec
mov
cs
sete
test
adc
fdivrl
inc
dec
push
mov
xchg
adc
shl
and
lcall
loope
push
or
pop
add
cmp
or
push
and
inc
sbbb
out
mov
jg
movsl
out
jmp
cltd
sub
mov
adc
pop
adc
mov
in
xchg
sarb
std
int3
sub
hlt
xor
cmp
repz
pusha
cmp
sub
sbb
jl
and
popf
test
dec
out
pop
stc
mov
dec
push
pop
imul
pop
mov
addr16
xor
push
jns
mov
cmp
mov
cmpsl
push
test
pop
fwait
mov
sub
movb
xor
dec
mull
inc
pop
xor
jp
lods
dec
cld
mov
sbb
notl
mov
mov
jl
jae
cmpsb
xchg
add
mov
loopne
fucomi
out
test
and
dec
and
push
sbb
fistpl
sbb
add
popa
cmpsb
jno
pop
sub
lcall
push
xchg
jbe
cmpsb
mov
xor
and
rcl
and
pop
divb
mov
xor
shrl
je
cmc
aam
pop
xlat
cwtl
fidivl
aas
pop
cld
cmp
rolb
aaa
mov
inc
pop
test
jge
mov
es
dec
mov
inc
call
stos
pushf
cmp
orl
ret
in
lret
or
es
stc
ja
lret
cmp
inc
inc
std
frstor
icebp
mov
dec
ja
add
or
pusha
sbb
js
push
movsb
std
call
rol
inc
scas
mov
loope
lret
into
decb
into
scas
lret
aam
ja
and
repnz
clc
jo
inc
and
push
adc
sbb
fidivl
inc
outsb
enter
pop
xchg
sub
into
inc
jnp
stc
mov
mov
out
int
stos
out
cmpsb
stc
fisubs
mov
out
pop
js
popf
sbb
or
mov
rorl
test
mov
jbe
dec
stc
fnstcw
cwtl
mov
lahf
mov
inc
mov
jecxz
pop
paddusw
ret
aad
lret
lcall
jae
mov
ds
mov
icebp
jnp
mov
jnp
lret
cmp
stos
sarb
sbb
xchg
mov
adc
jns
insl
js
incb
test
ret
inc
mov
mov
enter
cmp
xor
add
lock
jle
lea
cmp
jno
fs
mov
sbb
sbb
cmc
xchg
out
mov
mov
hlt
sbb
sti
xor
xor
scas
mov
cli
push
arpl
mov
addr16
bound
cmovb
sti
popa
mov
push
jp
jno
loop
jl
add
jns
rorl
jle
jns
cmp
jns
cmc
add
arpl
mov
or
out
mov
xchg
push
loopne
xlat
mov
push
xchg
mov
loope
shr
or
xchg
cmp
fildl
mov
xchg
pop
xor
add
ret
and
gs
adc
dec
stos
in
sahf
in
jle
xor
push
pop
inc
push
push
cwtl
jns
leave
push
in
pusha
pop
xchg
in
mov
xchg
enter
sbb
pop
lds
push
jb
pop
lock
ficompl
je
mov
sbb
push
fstpl
daa
fldenv
cmp
jp
sahf
call
jnp
ret
hlt
outsl
xchg
inc
mov
jge
sarl
test
call
push
dec
push
mov
mov
fidivl
pop
stos
inc
xor
inc
or
aas
mov
je
add
into
adc
aam
sbb
test
faddl
lret
inc
cld
push
jmp
pop
pop
stos
outsl
aad
mov
mov
push
xor
leave
stc
mov
fldl
je
xchg
sbb
popa
pushf
and
mov
mov
xchg
add
fbld
mov
fstpl
in
jnp
sbb
mov
and
pop
jg
xor
in
dec
insl
out
cmc
inc
inc
add
test
push
shll
mov
bound
lcall
push
and
add
sbb
cwtl
pushf
fwait
test
cmp
xchg
das
in
int3
xor
pop
inc
jg
add
dec
movd
outsb
add
and
sub
aas
sbbl
inc
jp
sub
push
lret
mov
and
push
repz
add
je
popa
std
scas
insl
lods
xchg
or
xor
data16
sti
add
jbe
mov
jp
mov
mov
call
mov
mov
inc
dec
adc
insl
jp
lret
test
push
pusha
add
nop
sbb
mov
pop
xor
aad
or
daa
mov
sbb
ret
std
cld
fildll
mov
lods
insb
push
lods
fstpl
mov
daa
adc
les
jnp
sahf
loope
test
sub
test
sbbl
cs
iret
es
iret
data16
push
sbb
loope
inc
loope
orb
sub
pop
addb
outsb
mov
ficompl
cmc
mov
popf
push
fidivl
mov
and
out
insb
mul
pop
xchg
xor
movsb
ret
or
mov
xor
aad
inc
in
scas
repnz
inc
rcrl
and
xor
pusha
cmp
cmc
pusha
not
mov
sub
jp
incl
pop
inc
xor
adc
std
dec
rcl
pop
testl
mov
xchg
pushf
mov
cld
pop
or
std
add
in
inc
jmp
jb
mov
inc
or
lock
imul
adc
sbb
insb
cmp
mov
call
pop
or
xchg
cmp
mov
jle
push
mov
xchg
push
dec
aas
pop
mov
cltd
mov
addr16
pop
sbb
lret
sbb
push
push
iret
loope
sub
fcomi
pushf
fistpll
mov
dec
mov
xchg
push
std
stc
icebp
inc
add
lods
divb
sarl
dec
pop
lret
mov
sarl
ds
mov
lods
das
imul
mov
imul
sbb
pop
and
inc
insl
leave
adc
xchg
mov
bound
sbb
push
and
lods
imul
lds
ja
xchg
mov
mov
in
jp
out
fimull
pushf
push
in
lods
push
ja
out
lods
inc
out
and
mov
ds
jg
js
xor
jns
test
and
jns
inc
rclb
sbb
scas
dec
inc
inc
xchg
mov
std
test
sahf
fwait
lds
into
hlt
js
addr16
push
mov
jo
popa
dec
pushl
das
sub
outsb
test
dec
sub
mov
dec
xor
adc
sbb
jnp
xor
cmc
mov
fidivl
pop
loop
xchg
pop
mov
in
and
orb
test
pop
sub
lods
out
or
cs
pop
or
add
mov
and
mov
adc
lods
cmp
cmp
fadds
std
js
mov
sbb
andb
cmp
jg
cli
loopne
add
imul
adc
push
lret
push
mov
lahf
cmp
xor
lea
dec
cld
mov
mov
xchg
aaa
out
fwait
inc
fstps
add
popf
int3
insb
jl
pop
or
iret
inc
lahf
insl
insb
push
mov
xor
sub
xchg
pop
mov
ss
adc
xchg
sbb
sahf
mov
push
mov
adc
sti
add
and
jno
out
push
push
dec
imulb
sbb
mov
bound
sbb
popf
pop
lahf
fidivs
inc
push
pop
push
cmpsl
pop
mov
xchg
sti
aas
sub
shll
into
mov
lcall
ds
pop
das
fnstenv
xor
dec
mov
ret
cmp
and
jmp
fs
movsb
in
je
add
cmp
mov
cmpxchg
and
add
mov
xor
xchg
cmc
imul
ja
or
push
jl
aas
dec
pop
jle
repnz
mov
adc
mov
mov
fdivs
dec
pop
mov
sbb
sar
out
rcrl
push
nop
mov
or
jmp
or
lods
jge
sub
mov
mov
enter
and
jecxz
shl
cmpsb
aam
jns
lock
loope
shrb
in
push
cmp
sbb
lea
inc
sti
lret
jo
cmp
push
push
or
add
mov
pop
jne
inc
dec
sub
ficoml
mov
out
rcll
shrl
xchg
outsl
clc
out
mov
fisubrs
mov
hlt
xchg
push
add
loopne
jmp
gs
in
xor
pop
or
outsb
vmwrite
dec
jle
sub
xchg
dec
pop
dec
cmp
loope
mov
mov
jmp
sbb
push
push
sub
push
lods
jns
bound
mov
insl
in
xor
push
push
push
shl
stc
test
mov
fdivl
mov
push
imul
ljmp
cmp
and
clc
xlat
mov
or
xlat
jle
xchg
ret
or
mov
jge
call
es
adc
rcr
js
mov
repz
mov
xchg
insl
mov
lahf
dec
stos
nop
and
mov
cmp
cld
addr16
xchg
dec
mov
and
cmp
sti
int3
cmp
cltd
fidivs
ss
lahf
scas
out
scas
xchg
movsl
pop
mov
scas
add
fldcw
xchg
fcomip
dec
nop
lds
push
mov
xor
stc
ja
push
in
sub
xchg
xorl
cmp
sub
out
sub
lds
pop
mov
popf
int
mov
scas
mov
or
adc
sti
mov
aad
ret
mov
out
xchg
daa
jecxz
fsubr
std
mov
mov
jecxz
inc
popf
mov
xchg
testl
outsb
shll
xor
pop
sbb
imull
xorl
lret
ret
xchg
mov
into
sbb
mov
mov
inc
test
fimuls
insl
sub
mov
lods
pop
repz
xlat
scas
packuswb
xchg
pop
movsl
mov
stos
cmc
hlt
and
push
mov
jae
stc
xchg
js
shrl
push
xchg
scas
inc
loopne
sbb
mov
dec
inc
jmp
pop
test
in
push
jns
ja
mov
xlat
jp
pop
pop
mov
inc
jg
ljmp
pop
pop
push
push
fcomp
adc
fwait
je
and
or
or
out
dec
mov
jecxz
cmp
mov
imul
xor
jbe
fiadds
sbb
pop
sti
fnstenv
mov
adc
andb
and
int
xor
in
ja
inc
rol
mov
iret
mov
aad
sbb
rcrb
sbb
aam
ret
sbb
mov
xlat
lret
push
fcomps
adc
add
pop
lock
or
mov
clc
outsb
loopne
repnz
xchg
aas
pop
jge
mov
adc
daa
inc
xor
testb
sbb
push
pop
xor
sbb
pop
cmp
mov
dec
sti
fidivs
clc
sbb
daa
cmp
dec
addr16
lock
in
mov
fldcw
add
arpl
popa
repnz
add
sub
push
bound
fcoml
mov
push
dec
mov
sbb
push
sub
mov
sbb
add
pop
xchg
inc
lea
repz
or
les
roll
pop
stos
mov
movsl
outsb
xor
xor
mov
cmp
mov
aam
aaa
pop
push
mov
mov
sbb
bound
jno
sbb
push
inc
aad
orb
xchg
repnz
xchg
add
dec
nop
inc
dec
or
or
push
iret
push
cmp
mov
pusha
mov
xchg
mov
add
sub
mov
fidivl
sti
sbb
push
mov
mov
jb
imul
lret
add
psraw
push
push
aam
inc
stc
imul
sub
pop
mov
inc
inc
fs
xchg
nop
mov
xchg
jb
xchg
adc
sub
add
data16
movsb
pushf
sbb
rcl
iret
add
and
xor
fnsave
out
ret
lock
mov
pop
push
xor
je
outsb
pushf
call
mov
iret
scas
lret
mov
psrad
clc
jae
outsb
add
and
jbe
mov
xchg
out
cmp
pop
sbb
fdivrp
jno
xor
jne
negb
xchg
mov
cld
cmp
cwtl
lret
fbld
ss
sbb
xor
nop
add
push
jp
das
cmc
add
es
in
mov
mov
mov
ds
rorb
pusha
xor
xchg
in
aam
scas
loop
and
sub
cli
cltd
loop
push
and
cwtl
push
or
cwtl
imul
mov
and
mov
mov
jbe
inc
sbb
idivl
mov
jae
and
mov
pusha
nop
aas
add
dec
cmp
adc
adcl
xor
mov
in
fidivl
js
add
out
xor
lods
pop
jno
popl
xchg
and
into
and
add
push
lahf
adc
xor
mov
pop
les
jle
das
xchg
jp,pn
pop
push
outsb
gs
sbb
xor
mov
ret
sub
je
push
adc
push
xlat
and
stos
fwait
ja
xchg
aaa
push
mov
in
outsl
inc
sarb
mov
ja
sarb
jp
dec
js
cltd
cwtl
arpl
cmp
repnz
push
test
int3
inc
pop
sub
cmp
fs
mov
ja
adc
jae
add
aas
jb
lea
pop
js
adc
mov
mov
xor
lods
ret
inc
cwtl
pop
sbb
lahf
dec
adc
pop
jl
pop
test
cmp
in
add
ja
imul
xor
repnz
adc
popf
nop
hlt
mov
ds
cltd
std
pop
fnstsw
loopne
int
popa
jp
pop
cmp
fcoml
int3
xor
stc
mov
out
sbb
xchg
push
cmpsl
sub
insb
outsb
sbb
repnz
cld
dec
dec
adc
mov
xchg
xchg
xchg
add
iret
scas
mov
in
test
mov
mov
addr16
movsl
push
test
push
sub
mov
stos
and
out
or
xchg
add
es
jecxz
dec
mov
in
cltd
mov
stc
cs
aaa
adc
push
outsb
push
sbb
int
jl
pop
pop
xor
push
mov
icebp
push
jae
out
int3
es
in
fs
das
sahf
mov
cmp
ljmp
xchg
mov
insb
xor
addr16
mov
test
push
push
arpl
and
xor
sub
xor
int
repnz
mov
arpl
ja
mov
call
jmp
or
jp
repz
cmp
mov
dec
inc
push
pop
add
loopew
mov
xor
in
hlt
xchg
cmp
mov
add
sub
shr
js
addr16
data16
inc
xor
push
cmp
fimuls
dec
fldt
cmp
test
sbb
and
pop
cmc
lret
arpl
sub
pop
cmp
leave
out
loop
xchg
sbb
aaa
pop
in
shl
and
dec
and
mov
cmp
xor
cmp
shrl
dec
test
ja
out
and
mov
mov
xchg
adc
outsb
jge
xlat
xchg
mov
dec
outsl
xchg
mov
imul
jno
jbe
xchg
roll
inc
outsb
jne
and
aas
shll
push
cwtl
jle
jge
and
nop
ss
pop
and
fwait
cs
adc
mov
stos
insl
out
adc
mov
push
stos
je
scas
and
pop
mov
push
stos
lahf
mov
push
sub
sub
push
movsb
mov
std
sbb
push
xchg
icebp
mov
jbe
add
aad
shlb
aas
das
push
ret
sub
movsl
out
inc
insw
repnz
leave
jne
in
daa
cmp
leave
in
inc
push
insl
out
imul
add
push
ljmp
push
sbb
ljmp
xchg
cwtl
call
sbb
jl
andl
push
lahf
and
pop
pmaxsw
push
push
push
inc
sbb
or
cmpsb
pushf
loopne
es
aad
mov
push
xchg
out
add
sub
adc
js
xor
cmpsl
loop
out
xor
mov
pop
lds
pop
push
push
lret
imul
call
jmp
or
jg
sbb
fidivrl
xchg
ss
adc
jmp
in
push
pop
cwtl
bound
aad
outsl
jp
inc
jae
xor
subl
inc
sbb
ret
rcl
or
mov
psubusb
pop
fimuls
sub
nop
in
add
sar
mov
test
faddl
lret
mov
fmull
adc
jbe
jb
insb
sub
sbb
dec
iret
pusha
jmp
cmp
jns
fmull
add
xchg
andl
stc
inc
push
es
mov
adc
adc
out
lret
sbb
iret
scas
loope
out
movb
inc
pushf
lock
ficompl
mov
adc
popf
lret
inc
iret
xor
cs
fistpll
ret
ret
rcll
cmpsl
sti
mov
stc
cmp
scas
or
ljmp
sub
stc
pop
clc
jl
stc
cmc
leave
ja
cmp
xor
adc
push
fsubrs
pusha
inc
pop
stos
hlt
and
ret
pop
imul
jae
pop
jnp
pop
lret
lea
cmpsb
jmp
lret
dec
in
not
add
lcall
lret
in
ljmp
xor
mov
pop
push
insb
or
sbb
or
cmc
fwait
jg
or
aam
adc
adc
popa
cwtl
push
lahf
mov
bound
jle
test
pop
xchg
bound
les
mov
rcll
pop
mov
test
cs
mov
outsb
xchg
outsb
inc
mov
inc
inc
fmulp
adc
lods
test
mov
lods
and
lret
ret
lds
ja
retw
adc
cmp
xor
sub
leave
push
lock
xchg
mov
and
inc
and
add
adc
dec
or
sbb
jns
xchg
sub
xchg
push
adc
inc
push
fcomps
push
iret
dec
jp
mov
je
pop
scas
fdivrl
jno
sub
xchg
or
rcrl
inc
jle
pushl
xor
xchg
paddd
mov
xor
sahf
pusha
cmp
sarb
pop
pop
adcl
push
shrl
stc
lahf
inc
xchg
jecxz
mov
sub
push
movsl
push
add
adc
in
scas
insb
mov
xchg
mov
or
jl
inc
mov
pop
dec
cmpsl
add
dec
pop
loope
dec
arpl
aad
movsb
shrl
cld
mov
cmp
in
adc
stos
js
mov
inc
add
xchg
lahf
and
and
pop
mov
stos
insb
cmp
mov
leave
mov
das
dec
les
loope
out
pop
dec
jne
cmpsb
mov
rorl
xchg
call
cmp
into
movsl
and
inc
mov
incl
push
mov
xchg
into
mov
arpl
jecxz
push
jo
cmp
mov
push
mov
icebp
out
mov
outsb
push
jnp
imul
pop
testl
and
jb
aam
ret
ss
and
push
mov
cli
js
and
push
dec
in
clc
cwtl
inc
insl
insl
mov
jbe
mov
in
add
movsl
outsl
popa
clc
fsub
cmp
les
fstl
insl
aaa
dec
orb
dec
insl
dec
mov
fldcw
push
jnp
test
adc
xor
arpl
addb
mov
jle
in
stos
push
pop
mov
add
icebp
mov
clc
fsubrl
push
js
pop
lds
sbb
adc
cmpsb
push
int
out
push
or
xchg
adc
nop
or
addr16
clc
xchg
sub
shlb
addl
pop
and
aad
mov
push
scas
out
push
or
dec
inc
hlt
enter
or
pop
or
fs
stos
push
aad
mov
pop
nop
xchg
flds
inc
shlb
movsl
jae
pop
mov
loop
ficompl
xor
popa
ret
out
mov
dec
pusha
xchg
in
imul
fstl
decb
and
lods
push
adc
jae
and
or
inc
lds
sbb
sbbl
sub
mov
mov
lods
jp
xchg
mov
pop
and
in
repz
add
outsl
aaa
xor
jns
outsl
add
or
lea
dec
aaa
fldt
roll
pop
jbe
outsl
sub
scas
and
push
push
push
fisttps
cmp
idivb
jl
and
test
sub
rclb
jp
pusha
lods
sbb
mov
add
adc
mov
sti
push
aad
pop
mov
jne,pt
arpl
and
loop
data16
xchg
repnz
pop
leave
pop
pop
mov
push
sbb
sub
push
into
and
xchg
fcmovnbe
data16
int3
and
push
rclb
push
pop
nop
js
sbb
sbbb
sahf
fildl
gs
sub
inc
imul
rcr
imul
pop
popl
fdivl
dec
pop
cmp
gs
jno
and
add
int3
sti
push
dec
sub
push
stos
pop
insl
push
insb
sti
adc
and
sbb
xor
rcpps
adc
jae
inc
stos
mov
xor
cmp
push
out
jp
jb
or
mov
fs
add
jl
push
xor
push
cli
inc
jo
divl
adcl
pusha
repz
mov
pop
ret
xor
mov
rorl
jecxz
add
addb
mov
mov
js
mov
dec
dec
shrl
push
mov
mov
mov
test
rol
mov
xchg
inc
loopne
lret
push
cmp
jmp
lods
fadds
rol
xchg
pop
pop
into
jge
clc
call
lret
cmpsb
fcoml
mov
fadds
cmp
ud2
cwtl
loopne
xchg
inc
call
mov
test
inc
mov
pop
aad
and
hlt
mov
fwait
addr16
mov
mov
test
cli
sub
ret
ret
cmp
mov
stos
fcomi
mov
ret
dec
adc
pop
inc
add
loope
imul
arpl
sarl
sbb
loop
pop
mov
pop
jecxz
ds
test
inc
ficomps
dec
ds
mov
dec
push
cmp
cwtl
les
cmp
in
adc
mov
ret
mov
jnp
aam
fldcw
es
mov
fadds
cmp
mov
es
in
jno
adc
mov
add
lock
mov
movsl
stc
in
inc
jp
jo
pop
lods
xchg
push
push
or
jne
xor
les
daa
scas
cmp
inc
dec
mov
pop
xor
pusha
repnz
add
ljmp
int3
out
sbb
ror
and
xor
xchg
xor
xchg
arpl
fdivs
leave
ret
clc
adcb
push
inc
pop
ss
imul
xor
imul
dec
leave
pop
das
xchg
cwtl
pop
mov
jo
mov
xor
dec
cmc
mov
sbb
sti
jmp
ljmp
mov
jl
loop
imul
test
leave
jne
xchg
push
test
imul
mov
cs
or
les
mov
scas
int3
sbb
lret
xchg
push
push
mov
xor
xor
stos
adc
xchg
or
into
cmp
and
mov
jb
movsl
mov
push
pop
sbbb
fadds
ljmp
xchg
shrb
insl
inc
dec
mov
dec
ljmp
sar
sbb
mov
in
in
xchg
in
mov
and
imul
mov
inc
xorl
sub
adc
in
dec
pop
into
jae
xlat
pop
insb
mov
xchg
dec
jl
out
xor
dec
pusha
push
mov
pop
call
inc
ja
pusha
test
aas
xor
mov
shl
mov
sbb
dec
andb
jno
in
imul
dec
roll
mov
loope
gs
jns
add
adc
orl
push
mov
add
mov
mov
cli
mov
mov
incb
and
xor
add
dec
xor
rorl
out
mov
pop
hlt
lds
and
incl
mov
jmp
mov
add
lret
mov
test
and
std
cwtl
mov
in
mov
aam
cmp
dec
je
jo
test
rcll
add
sub
xor
fdivp
jmp
push
xchg
decl
push
insl
aaa
mov
mov
call
add
decb
adc
pop
shrb
add
push
xlat
sbb
add
pop
or
test
adc
popa
mov
nop
setb
pop
push
popl
bound
sahf
pop
dec
adc
in
mov
xchg
mov
xor
scas
xchg
sti
pop
xor
mov
cmp
mov
dec
fildll
push
xchg
adc
cmpsl
mov
jnp
call
sbb
sbb
aaa
das
lret
cmpsl
fildl
cld
mov
dec
popa
sti
lcall
imul
adc
gs
cmp
dec
insb
iret
or
sbb
addr16
mul
mov
xchg
jp
and
das
orl
push
or
dec
insl
xchg
loopne
push
or
imul
imul
paddw
sbb
and
fidivl
and
out
outsb
adc
mov
cli
mov
loopne
scas
aaa
push
add
mov
int
mov
clc
daa
cmp
xor
sahf
cmc
lock
sbb
cmp
pop
insb
in
push
lods
in
mov
xor
push
pop
cmp
push
cwtl
jne
mov
addl
lahf
mov
cmp
and
out
imul
xchg
js
sub
push
sbb
cmp
pop
mov
cmpsb
loopne
inc
sub
inc
jge
xlat
mov
in
add
fiadds
dec
inc
inc
out
shlb
lret
cmp
xor
xor
das
movsb
xlat
mov
bound
push
mov
jmp
shll
sbb
cmpsb
movsl
mov
test
stos
dec
arpl
stc
jae
mov
cmp
adc
sti
adc
pushf
sbb
mov
sbb
imul
cmp
push
fmuls
outsb
stos
sbb
sub
sbb
mov
jne
stos
mov
jp
in
xchg
jb
adc
xchg
xchg
mov
into
sbb
iret
cli
lahf
ret
push
pop
adc
push
sub
fs
mov
mov
or
lcallw
mov
inc
dec
aam
call
xor
push
and
sbb
cmp
lods
leave
arpl
push
cmp
inc
jns
pushf
sbb
outsb
fucompp
repnz
add
jns
cmp
push
pusha
lcall
pop
dec
jecxz
js
add
je
pop
pop
mov
xchg
adc
nop
mov
cmpsb
xor
popf
fcmovb
or
sbb
sti
mov
lahf
mov
pop
je
cld
xlat
ss
daa
loop
iret
mov
clc
mov
lret
je
nop
inc
stos
pop
in
and
testb
ss
adc
push
movsb
cmpsl
ja
fmull
jp
xchg
sarb
xor
fisttpl
inc
cmp
xor
xor
mov
push
popf
inc
adc
cmc
lret
sti
dec
mov
mov
inc
jo
rorl
pop
clc
lock
lea
mov
jecxz
fnstcw
loop
adc
and
inc
push
push
xchg
or
sbb
mov
ds
push
into
jge
sbb
jmp
aam
sbbb
test
jae
stc
push
clc
lods
cltd
push
fs
inc
xchg
pop
add
in
jg
sbb
xlat
popa
cwtl
mov
stos
daa
call
adc
cmp
and
movsl
cmpsb
loopne
cmp
jne
jbe
sub
jae
jge
jnp
pop
mov
push
mov
shrl
add
aas
mov
in
mov
mov
and
pop
pop
inc
mov
add
xlat
cmpsb
jg
adc
jmp
fwait
mov
and
pop
cmp
lcall
sahf
sbb
mov
outsb
push
xor
sbb
cmp
mov
in
push
inc
add
jecxz
stos
or
add
push
pand
pop
mov
mov
sti
insb
push
jp
jno
xor
incb
adcl
cmp
mov
aaa
xchg
daa
shrb
jmp
test
push
ja
sbb
cmp
push
scas
push
nop
ss
mov
icebp
pop
cmc
jmp
mov
xchg
pop
cmpb
out
flds
sub
fdivrl
js
pop
inc
jecxz
enter
mov
cmp
and
xchg
sbb
les
gs
insb
stos
insl
push
lds
mov
sti
pop
mov
push
dec
fsubp
fnstsw
and
sub
ljmp
data16
out
les
push
xor
fnstcw
dec
mov
pop
cmpsb
push
icebp
jmp
push
cmp
pop
movsl
enter
push
dec
fsub
ljmp
fbld
andb
jo
xchg
or
inc
leave
mov
fisubrl
loope
mov
xor
out
push
mov
mov
shrl
in
mov
and
aad
insb
std
repnz
and
push
adc
imul
push
loop
outsb
addr16
mov
adc
jecxz
aas
adc
fdiv
mov
lcall
shr
sub
push
mov
in
dec
aaa
add
pop
and
mov
rcl
add
filds
inc
jno
mov
scas
fldln2
xor
mov
rcrl
sahf
sub
mov
jle
xor
clc
mov
inc
inc
xor
pop
mov
pop
mov
push
mov
pop
gs
fidivl
push
pop
or
pop
push
cmpl
fmull
loopne
sbb
inc
mov
pop
pop
movsb
sub
dec
mov
fimull
pop
lea
gs
insl
js
xchg
test
and
mov
inc
ds
mov
xchg
mov
or
jbe
and
nop
or
mov
xchg
push
cmp
pusha
js
loopne
push
push
lock
xchg
mulb
xchg
sub
sbb
mov
jns
cmpsl
or
cmp
sub
loope
scas
out
jle
pop
xchg
aam
sbb
lcall
insl
sbb
and
dec
xor
cli
ss
xchg
push
push
push
in
inc
ret
daa
mov
push
cmp
ljmp
orl
mov
in
xor
or
mov
icebp
bound
sbb
jle
in
push
mov
ret
dec
mov
jp
mov
inc
pop
pop
xor
cs
imul
cwtl
jmp
adc
pop
shlb
xchg
push
mov
aas
dec
or
mov
inc
xchg
xor
pop
dec
clc
cltd
daa
test
orb
pop
add
xor
add
cmp
pop
loopne
loop
xor
int
pop
sub
testl
xchg
lock
and
add
lahf
cmp
addr16
lahf
push
in
fdivs
cmc
gs
int3
cmp
mov
dec
sub
sub
ds
jg
and
push
aam
in
enter
mov
in
adc
das
lods
fstps
xorb
stos
pop
repz
aad
adc
mov
nop
in
out
pop
push
cltd
lock
sub
sbb
dec
jp
mov
and
outsb
or
sub
popf
mov
inc
mov
pop
out
xchg
iret
mov
das
movsl
out
shrl
imul
cld
repz
adc
gs
jle
sub
test
or
and
dec
inc
push
mov
fs
inc
sbb
xchg
fcomip
shlb
out
data16
pop
in
inc
movsl
add
enter
pop
popf
adc
out
cltd
cmp
ds
jno
jno
inc
jne
mov
les
push
movhps
cmpb
cmpsb
dec
ss
jge
notb
and
dec
jns
cs
fnstcw
mov
mov
mov
jle
mov
mov
mov
or
mov
popf
insb
int
xor
mov
int3
lret
or
out
cli
nop
sub
mov
cmpl
fisubrl
sub
xchg
inc
popa
stos
pop
popa
flds
jp
jge
xlat
cs
ss
gs
add
cmp
cmp
fcompl
xor
inc
xchg
icebp
inc
in
movsl
dec
repz
in
es
cmpsl
dec
loop
pop
cmpsl
xchg
add
cmp
mov
cmp
adc
rcll
jg
movsb
dec
or
inc
rolb
adc
outsb
jb
xchg
pop
outsl
cmp
int
int3
fucomip
dec
movsl
and
data16
imull
adc
mov
or
lret
cld
aam
dec
push
mov
push
dec
add
out
fwait
mov
loopne
cli
outsl
mov
enter
lods
xlat
mov
enter
cli
int3
sbb
jl
dec
inc
mov
lahf
in
mov
inc
xchg
and
fists
push
sbbb
pop
ffreep
inc
dec
xchg
push
pop
loopne
mov
add
push
movsl
xchg
fdivrl
outsb
lret
inc
push
daa
outsl
inc
lds
pop
cs
add
stc
cmpl
sbb
movsl
xchg
jns
ficompl
out
lretw
je
xchg
or
add
cli
xorb
sbb
in
fldt
mov
jmp
mov
ds
rorb
jl
pop
shrl
dec
stc
sub
int3
std
push
jp
lret
test
mov
aas
out
xor
pop
add
dec
add
loop
aaa
and
mov
in
in
cmp
jnp
scas
mov
jecxz
sbb
push
ja
xor
mov
je
jno
lcall
test
loope
nop
je
jno
lods
daa
push
mov
add
cmpl
js
lea
pop
lret
xchg
popf
inc
jecxz
xchg
push
sbb
inc
mov
inc
mull
test
testb
xor
jmp
mov
stos
aad
adc
mov
cli
and
jl
fwait
mov
ret
subl
inc
pop
sub
sub
cmp
cmp
or
xchg
es
fnsave
mov
push
add
les
pop
test
lods
clc
je
testb
push
negb
adc
ret
jbe
in
inc
je
lods
push
mov
inc
sbb
add
mov
pop
insb
mov
cmp
xchg
adc
mov
inc
int3
cld
ficoml
cli
sbb
jae
lods
aas
in
cmp
jmp
mov
xchg
adc
out
cmp
fs
and
hlt
mov
aaa
insl
xchg
cmp
and
cli
jp
in
andl
push
into
dec
rcr
pop
inc
pop
cwtl
dec
jb
fistl
mov
mov
pop
xchg
xor
in
ret
les
icebp
nop
jne
sub
add
and
cltd
adc
stc
mov
stos
stos
mov
fsubrl
jb
cli
sub
jg
cwtl
and
dec
mov
jne
xchg
int
push
dec
cmp
pop
sti
lret
or
jo
js
fsubs
ljmp
ja
add
pop
pop
pushf
cmp
fs
loope
sub
cltd
repnz
or
or
rcl
mov
push
cmpsb
loop
call
push
and
ret
cmpsb
mov
fldt
inc
fwait
insl
loope
call
mov
mov
adc
bound
mov
cmp
xor
inc
inc
orb
push
scas
sub
into
nop
xchg
dec
lock
sbb
inc
mov
mov
sbb
mov
push
rolb
mov
test
loopne
xchg
in
lods
subb
das
mov
mov
sub
and
pop
or
sub
imul
adcb
sbb
push
enter
lret
enter
and
jl
and
pop
in
ja
jbe
mov
adcl
addr16
lods
pop
inc
dec
xor
mov
call
xchg
add
jg
pop
sub
push
push
test
and
idivb
ljmp
div
fmull
pusha
lahf
fcoml
xchg
dec
aaa
arpl
pop
push
dec
les
mov
test
dec
scas
mov
lcall
pop
into
mov
xchg
jmp
andnps
test
and
push
xor
dec
fcompl
sbb
lahf
lods
fsubl
ljmp
xor
pop
pop
stos
lahf
sbb
or
mov
jns
lods
add
dec
lods
mov
insb
imul
cmp
sbb
lods
pop
fdivs
cmp
jl
xor
testl
mov
test
push
or
enter
int3
aaa
jb
mov
mov
lcall
sbb
test
ret
mov
data16
cmc
outsl
push
cmpsl
and
pop
fmul
scas
push
mov
ja
lock
subl
and
orl
shl
inc
add
dec
or
cmp
movsb
sbb
and
jnp
aam
sahf
push
dec
popf
inc
dec
xchg
and
and
inc
jae
jo
leave
mov
sbb
xchg
adc
cmpsb
mov
test
and
je
sbb
pop
mov
es
addr16
adc
sbb
out
cmp
sahf
mov
movsl
loop
test
dec
push
movsb
jns
jl
mov
sbb
mov
jp
dec
adc
inc
cmp
mov
cmp
popf
pop
std
fidivrl
mov
jno
mov
addr16
shlb
inc
insl
pop
jo
cmp
addr16
cmp
jmp
ss
pushl
pop
pop
or
shl
push
cmp
cmp
sbbb
mov
lods
pop
mov
jg
insb
js
fsubl
sahf
pop
push
pop
and
movl
jmp
inc
sub
pop
je
fwait
xchg
sub
lods
mov
rorb
pop
in
ss
xchg
imul
cs
sbb
cmpsl
xorb
enter
cmc
jnp
jo
sub
in
notb
cmp
inc
jne
repnz
xchg
outsl
gs
enter
mov
outsb
lea
adc
xchg
fmull
xlat
mov
sbb
rolb
push
xchg
lret
ret
pop
dec
out
outsb
mov
mov
lds
std
divl
nop
ficoms
js
mov
loop
jmp
aaa
cmpsl
mov
dec
pop
cmp
loope
mov
addr16
aas
aad
jnp
shll
and
jo
fsubr
iret
cmp
fisubrs
cmpsb
shr
or
cmpsb
add
jno
mov
daa
repz
adc
adc
inc
dec
mov
cli
loopne
mov
jnp
push
xchg
test
pop
push
cmp
scas
or
mov
inc
test
mov
sub
pop
pushf
arpl
cmp
xchg
and
jmp
shlb
stc
imul
sub
orl
xor
cmp
aad
rcl
gs
in
xor
cmp
add
add
mov
cwtl
bound
push
xor
mov
pop
ret
daa
sub
lods
roll
xor
cld
sbb
inc
mov
push
xor
pusha
mov
xor
sbb
jae
or
testl
pusha
mov
scas
dec
out
jg
mov
push
jg
sub
int
xor
add
std
adc
xor
fnsave
ret
popf
lea
push
cltd
mov
jle
push
jle
andb
cmpb
cli
push
adc
or
pop
mov
and
stos
in
rorl
test
outsl
push
sahf
ret
lock
jno
sbb
lods
movsl
mov
and
adc
stos
mov
cmpsb
push
pusha
xchg
dec
inc
push
pusha
lods
jg
gs
mov
filds
inc
add
shll
and
outsl
cltd
xchg
pop
mulb
or
movsb
dec
push
sbb
in
cs
jmp
mov
and
rol
popf
mov
imul
mov
and
adc
rorb
adc
scas
fdivrs
aaa
mov
aas
sahf
int3
es
loope
popa
stc
mov
pop
dec
vmwrite
adc
sbb
sbbl
inc
dec
push
lods
fidivrs
lods
add
in
push
pop
mov
jecxz
cli
out
push
lea
mov
outsb
cltd
cwtl
js
add
cltd
in
pop
jg
jnp
lret
sbb
mov
lcall
push
lods
stos
sub
enter
jo
rorl
arpl
jge
jmp
insl
popf
mov
mov
aaa
lods
mov
rclb
push
jl
mov
fsub
repz
jns
or
pop
stos
ret
pusha
arpl
ret
add
insb
bound
cmp
cld
add
pop
cli
je
in
or
jbe
pop
sub
adc
jo
adc
loope
push
xlat
sub
jp
push
sub
mov
arpl
les
sub
idivb
cmp
pop
insb
addr16
dec
and
roll
std
lret
movsl
cltd
and
lock
sbb
jg
insl
mov
adc
cld
mov
mov
mov
fucomi
push
cmp
icebp
movsb
aam
cwtl
sbb
push
xchg
mov
mov
pop
lahf
pop
sub
sarl
or
sub
iret
insl
lret
sti
ds
stc
push
flds
test
fsub
pop
fildl
cmpsl
mov
subb
xor
jno
outsb
shlb
pop
inc
push
mov
mov
or
mov
fwait
roll
xchg
push
push
push
sbbl
pop
xor
mov
cmp
lock
fcmove
pop
sahf
orl
lret
and
xchg
pop
flds
jg
je
jbe
insl
and
clc
sub
sbb
and
sub
test
dec
pop
jno
dec
cmp
sti
cmp
push
sbb
movb
adc
xor
inc
jg
call
xor
or
lods
push
jbe
jae
ds
xchg
xor
ret
rorb
popa
fcomps
jns
mov
mov
call
jb
mov
and
push
rclb
sub
mov
js
and
iret
cmpsb
popf
xor
push
mov
aam
inc
adc
loopne
pop
xchg
pop
imul
jnp
jo
pop
mov
int3
dec
bsf
outsl
inc
sbb
pop
add
dec
int
mov
push
inc
push
lods
pop
dec
xchg
push
jnp
dec
mov
out
shll
cld
cmp
push
xchg
sub
jg
outsb
push
int
inc
add
or
jno
sub
loopne
sbb
xchg
and
jmp
and
inc
push
ror
push
test
fcompl
push
jmp
shl
cmp
lahf
adc
ret
push
xchg
jg
lcall
rcl
dec
sbb
add
push
aam
inc
out
cmp
mov
mov
or
xor
push
pop
mov
fneni(8087
repz
push
pop
cmp
xchg
inc
jne
or
imul
jnp
cwtl
fwait
lcall
add
cmp
lods
cli
cld
mov
xor
testb
push
and
cmp
leave
scas
loope
or
ret
shrl
push
sub
xchg
xor
mov
in
cmpsb
adc
or
ds
fcompl
ret
pop
cltd
ja
xor
mov
cmpl
icebp
mov
xor
incl
dec
push
popa
and
adc
jbe
or
in
adc
sahf
inc
jle
test
fcomps
mov
test
lock
mov
sub
dec
push
cmp
sub
mov
loop
and
mov
repnz
cmp
adc
mov
push
subb
aad
jge
xchg
inc
jns
and
movb
mov
arpl
popa
fisttpl
sar
shlb
sub
cmp
xchg
loopne
adcl
dec
loop
sbb
je
pop
insl
cld
pusha
stos
mov
jnp
xor
push
clc
mov
fstps
mov
inc
imul
movsb
adc
loop
mov
and
xchg
pop
mov
jmp
pop
test
cli
mov
sti
pop
mov
js
lock
sub
mov
mov
cld
in
sbb
outsl
hlt
mov
nop
les
arpl
cmp
push
aam
scas
je
jg
or
fisubs
test
dec
xchg
or
adc
mov
push
cmp
xor
arpl
xchg
push
testb
inc
data16
pop
mov
inc
adc
cs
scas
mov
dec
cli
cli
xchg
sbb
imul
call
leave
inc
into
add
push
sbb
mov
mov
sub
xchg
pop
out
stos
cmp
fldt
loope
and
mov
js
mov
addr16
scas
pop
out
pop
imul
mov
hlt
das
pop
jl
mov
cltd
pop
jp
iret
mov
jno
xchg
jo
add
mov
xor
xlat
cmp
or
sbb
inc
aaa
mov
pop
rol
insb
nop
push
aam
inc
stos
xor
inc
add
mov
pop
les
add
loope
aam
divb
pop
mov
std
add
add
imul
jo
repnz
dec
cmp
cmp
push
sub
push
in
inc
dec
test
cmp
insb
std
push
ljmp
aad
push
jge
push
push
in
mov
or
and
data16
mov
or
lea
int
outsb
jne
lods
xor
test
enter
pushf
dec
push
pushf
mov
mov
jl
or
mov
ret
dec
push
ss
xchg
xchg
out
or
fistl
cmp
insl
sub
xchg
mov
mov
divb
stos
fisubl
add
bnd
call
sbb
sub
je
pop
sub
pop
dec
xchg
cwtl
and
call
nop
mov
pushf
inc
jno
ficoml
push
sbb
lahf
jge
std
pushf
mov
lret
out
dec
pop
arpl
mov
sub
scas
lds
out
notl
mov
push
lods
dec
fldt
in
aaa
data16
xor
out
inc
aaa
sub
mov
dec
cmp
mov
sar
cld
inc
cmp
popf
das
pusha
cmp
and
daa
lock
les
jge
dec
push
outsb
dec
in
and
mov
ret
xchg
xchg
dec
mov
push
jnp
sarb
push
int3
mov
pop
lret
loope
popa
popf
shlb
push
sub
rorl
repnz
add
je
mov
nop
dec
rorb
inc
ret
mov
push
and
pop
add
ret
leave
or
std
es
lds
sbb
xchg
add
add
pusha
lahf
jle
cmp
add
daa
or
mov
movsl
push
or
lahf
test
decb
xchg
cmpxchg
pushf
add
sub
mov
sbbl
mov
pop
sub
shrl
sub
push
jnp
popa
xchg
lret
mov
sbbl
mov
test
jb
pop
mov
idivl
imul
ret
cmp
and
call
fs
sti
enter
push
fistpl
dec
outsb
or
xor
andl
pop
iret
inc
and
add
push
jb
int3
incb
test
push
sub
push
push
test
adc
sub
jno
add
test
outsl
hlt
das
jmp
mov
iret
xorl
push
icebp
push
lock
adc
hlt
lret
enter
stos
sub
mov
testl
pushf
movsb
test
lds
shlb
in
sbb
add
sarb
xor
pop
mov
pop
mov
add
push
repz
dec
pop
cmc
movsl
inc
adc
push
dec
sarb
push
sbb
in
std
mov
sbb
stos
cs
add
mov
cmp
xor
cmp
loope
subl
and
ss
insl
leave
out
cmp
push
mov
add
cmp
mov
scas
inc
mov
loop
push
lahf
faddp
sub
push
jg
xchg
sarb
jge
push
cmp
xor
dec
es
jg
mov
mov
inc
pop
dec
push
sub
cmc
nop
push
push
lock
pop
xchg
sahf
dec
gs
sbb
icebp
sbb
or
sbb
rolb
loope
test
adc
lock
into
xchg
pushf
shlb
mov
mov
xchg
xor
dec
jns
jnp
jmp
ljmp
mov
es
jg
sub
dec
lret
outsl
pop
outsl
shlb
lahf
adc
fcompl
push
push
test
jae
hlt
dec
cmp
movsl
mov
adc
push
loope
data16
aad
push
mov
push
jno
push
mov
in
notl
pusha
push
or
jmp
stos
pop
xchg
jle
xor
ss
lock
das
add
push
pop
push
stos
push
mov
out
jg
sar
hlt
adc
cmp
mov
ret
outsb
stc
lock
xchg
test
lahf
sarb
push
movsb
shl
repnz
lret
sub
and
jecxz
mov
clc
incl
sbb
xchg
xchg
xchg
dec
std
test
into
lcall
mov
xor
pop
les
stos
lret
sarb
xlat
mov
loopne
jg
aam
sbb
add
adc
pop
movsb
movsb
std
aam
mov
mov
cmp
mov
jb
imul
hlt
mov
inc
je
pop
ret
loope
aam
aam
rcll
and
dec
mov
add
stos
xchg
cmp
xor
in
jle
dec
push
faddl
ds
sbb
push
data16
pop
jno
xchg
outsl
pop
push
jno
xlat
stos
gs
mov
ja
test
pusha
or
cmp
push
jl
mov
clc
push
mov
mov
ret
jnp
clc
xchg
push
test
and
subb
pop
adc
shll
ja
cltd
xor
jbe
movb
mov
pushf
mov
mov
in
jne
mov
pop
in
insl
test
push
lret
cmp
fbld
js
fsubrs
cmc
xor
cmc
stc
fisubs
push
mov
mov
add
jo
cmp
add
pop
lcall
dec
je
inc
and
into
xor
test
jbe
push
js
add
xchg
stos
xchg
push
push
pop
lods
mov
roll
mov
dec
cld
fsubrs
out
imul
push
mov
cmp
xlat
and
daa
or
xor
xor
insl
ljmp
out
pop
mov
dec
ret
xchg
or
dec
mov
push
adc
out
or
lds
iret
sarl
test
shl
stos
shrb
adc
sub
cmc
inc
mov
jb
and
test
mul
pop
lahf
sub
fs
dec
aad
pop
or
dec
push
ret
jbe
cwtd
gs
movsl
push
stc
sahf
push
cmp
xor
sub
repnz
inc
mov
nop
sub
test
xor
push
or
cmpb
xchg
jb
out
das
lods
scas
stc
scas
out
xchg
js
sbb
dec
sub
xor
jmp
sar
dec
dec
jbe
jmp
jbe
mov
jg
fcmovne
rcrl
mov
jb
mov
and
int
push
jbe
cli
and
jmp
fstps
cmpsb
out
out
js
stc
lea
fldenv
sub
jne
mov
nop
out
int3
mov
repz
or
and
icebp
jmp
arpl
xlat
stc
push
push
cmp
push
hlt
add
sub
inc
mull
adc
dec
add
mov
fdivrs
mov
nop
mov
push
aam
push
lahf
andl
and
lret
sub
add
hlt
aam
jbe
mov
pop
nop
inc
add
xor
jno
cmc
sbb
cmp
and
sti
cmpsl
jmp
fdivrl
lock
sahf
mov
push
and
cwtl
stos
mov
subl
mov
push
push
vphaddbw
outsb
inc
inc
push
fsubrl
test
stos
dec
dec
jae
pop
cmp
dec
xor
jb
ret
test
jl
lods
dec
call
xchg
inc
shlb
add
xchg
xor
pop
and
ret
out
testb
inc
test
jp
xor
xchg
rcll
rcrb
cmpsl
xchg
stc
mov
call
xchg
and
xorl
sub
lock
sub
ja
mov
icebp
inc
js
addr16
dec
adc
jnp
idiv
les
ret
pop
pop
adc
xor
mov
xlat
fdiv
data16
or
dec
xchg
cld
sbb
sti
mov
dec
dec
jbe
lahf
mov
sub
or
inc
cmc
mov
push
pop
nop
adc
rol
ret
jo
movsl
movsl
fiaddl
push
xor
jb
add
pop
add
xlat
sbb
movsb
imul
sub
das
fs
mov
mov
mov
cmc
mov
or
imul
fbstp
popa
arpl
sti
and
add
arpl
jnp
ja
add
shrl
insb
jbe
cmp
leave
movsb
xorb
push
cli
jmp
mov
insl
xor
jns
jbe
sub
mov
in
or
js
mov
popf
jle
or
dec
pop
dec
push
sub
xor
andb
icebp
cmp
or
movsb
sub
fdivl
sbb
mov
icebp
inc
push
and
in
mov
cli
lods
adc
sub
xchg
mov
and
add
pop
fisubrl
add
dec
dec
loopne
ds
mov
sub
ljmp
jmp
inc
jl
and
push
imul
int3
cmpsb
dec
or
xlat
or
lcall
sub
cmpsb
ds
and
xchg
and
cmp
pop
xor
rorl
fstpl
pop
jle
insl
lcall
mov
nop
mov
pop
pushw
xor
and
mov
pop
and
in
mov
dec
scas
ljmp
pop
outsb
pop
aaa
or
dec
hlt
loope
pop
jns
arpl
leave
int
or
inc
bound
nop
std
mov
ljmp
mov
dec
add
lods
push
imul
xchg
pushf
out
loope
std
and
bound
daa
ja
xor
pop
xchg
lret
es
pop
int3
adc
testb
fbld
sti
mov
push
rcl
les
adc
adc
lock
sub
pop
push
or
cmpsb
fbstp
rcrl
popf
dec
sbb
xchg
mov
out
dec
enter
out
adc
repnz
das
gs
mov
push
mov
mov
lahf
arpl
pop
push
dec
mov
xchg
cltd
out
xlat
fimull
jmp
gs
pop
jg
jge
stos
inc
int
ds
mov
or
jne
outsb
mov
ret
sub
inc
mov
xchg
cmpsl
jb
sbb
loope
ret
stos
pop
add
stos
xchg
mov
inc
push
mov
sti
cmp
hlt
jo
call
ja
mov
dec
dec
or
dec
das
jb
and
sub
mov
ja
mov
dec
in
sbb
push
mov
mov
mov
stos
rcll
dec
mov
xlat
insb
popf
out
lock
dec
lock
rcl
std
repz
mov
dec
pop
mov
xor
jp
imul
ret
out
ja
lock
pushf
movl
icebp
adc
out
or
icebp
scas
and
cmp
scas
mov
ret
adc
push
mov
rcll
rcll
testl
pop
scas
mov
xchg
mov
dec
lea
jmp
mov
sbb
jns
cld
or
clc
xchg
push
sahf
es
in
fidivrs
xor
outsl
push
pushf
popf
xchg
xchg
iret
xchg
mov
rorl
sbb
addr16
dec
scas
into
aad
lahf
pop
scas
fsts
int
mov
jbe
call
sub
or
xlat
xor
pop
fwait
push
enter
ret
jge
fwait
int
or
adc
add
mov
dec
lds
jecxz
or
ss
pop
lret
push
je
fiaddl
pushf
inc
inc
dec
pushf
jno
sub
lcall
fcoms
jl
ficomps
jns
add
jmp
out
jne
fisttpll
out
mov
loope
adc
pop
xlat
push
xchg
imul
mov
cwtl
adc
cld
lods
insb
cmp
mov
mov
dec
add
mov
and
jecxz
stos
cld
lods
jge
cmp
xchg
nop
and
sbb
mov
add
adc
andl
jmp
jg
arpl
mov
mov
leave
xor
sbb
jecxz
mov
jo
push
xor
pop
pop
leave
cld
dec
or
jnp
jne
cltd
movsl
jb
jbe
popa
popa
test
fmull
shl
hlt
mov
scas
sbb
sahf
sbb
loop
sbb
push
or
inc
cmpsb
add
mov
mov
adc
mov
xchg
sub
lahf
pop
lods
test
jnp
int3
jns
mov
jae
or
push
cmp
in
leave
xchg
daa
or
das
shll
shlb
hlt
xor
mov
and
pop
ds
pusha
mov
add
lods
add
add
pushf
or
xchg
sbb
jnp
pop
mov
fmull
mov
dec
ja
loop
lods
jl
mov
lret
out
or
xchg
sarb
cwtl
adc
mov
pop
cmp
pop
popa
out
jg
mov
and
cmp
enter
mov
cli
iret
faddl
fisttpl
mov
inc
lret
push
cmp
add
sar
push
adc
sbb
cmpsb
ret
mov
outsl
test
ror
mov
push
dec
lods
mov
adc
and
dec
pop
sbb
xchg
pop
pop
and
insb
mov
ja
rclb
or
cltd
fidivrs
mov
mov
dec
inc
cmp
cmp
mov
cld
daa
and
mov
cmp
gs
filds
mov
mov
mov
fildl
out
andl
jne
nop
jmp
xchg
or
inc
test
pop
push
mov
or
mov
or
sub
pop
push
mov
jbe
cltd
mov
mov
pusha
mov
add
and
in
cmpl
ljmp
sahf
cmpsb
xor
cli
sbb
lret
insb
ds
je
in
sub
lods
loopne
and
push
rorl
mov
outsb
outsl
enter
enter
fistpll
ds
aam
adc
xor
jg
ds
pop
cmp
addr16
push
cld
fadd
outsb
cmp
andl
int
bound
push
sti
loopne
adcb
testb
mov
or
lcall
mov
dec
adc
xor
mov
dec
cltd
push
and
out
adc
inc
jge
xor
mov
fwait
cmp
or
add
int
shr
push
aam
lock
xchg
mov
movl
adc
repnz
sahf
jl
mov
loope
push
mov
push
fcompl
lret
jp
aad
jecxz
mov
cpuid
xchg
fistps
orb
ljmp
test
scas
adc
in
fs
jg
push
out
sbbb
ror
in
mov
loope
bound
arpl
xor
mov
loopne
lods
test
movsl
pop
outsl
test
lcall
gs
addr16
mov
repnz
js
das
push
movsl
mov
xorb
mov
stos
mov
out
push
add
pop
mov
fstl
cmc
adc
sub
jl
inc
fwait
jbe
xchg
push
jbe
inc
sub
lret
out
and
xor
xchg
hlt
cld
xchg
mov
add
add
inc
jg
and
xchg
mov
inc
movsb
ret
shlb
cmovne
push
xchg
cltd
adc
repz
and
icebp
and
jge
aad
cmp
mov
in
jge
and
ja
dec
out
dec
hlt
mov
out
push
fbstp
les
stos
fdivr
shll
lock
push
insb
aas
xchg
inc
out
sub
lods
and
push
jns
push
sub
cmp
jbe
adc
lret
jl
mov
xchg
das
sbb
jns
ret
mov
mov
sbb
xor
mov
out
hlt
ja
aas
rorl
mov
cwtl
dec
adc
icebp
scas
inc
mov
xchg
std
jle
mov
mov
into
inc
xor
fisubrs
mov
cmp
sbb
cwtl
inc
repnz
fsts
adc
sub
icebp
cmp
or
incw
fldt
mov
inc
or
cmpsb
shrl
jns
or
out
sbb
sbb
insl
xor
movsl
loopne
cmp
scas
cmpb
cld
mov
test
push
push
dec
data16
scas
test
mov
jg
or
inc
and
test
sub
mov
pop
gs
jg
ds
setae
shrb
js
scas
div
pop
not
fmuls
rclb
lcall
jae
js
mov
push
pusha
adc
cltd
jle
dec
jmp
pop
out
fdivl
inc
xor
mov
adc
add
inc
pop
pop
lods
xor
scas
cmp
orb
or
push
ja
out
cmc
test
cmc
push
frstor
neg
scas
sahf
jle
sub
je
dec
outsb
aaa
adc
mov
cmc
mov
sar
into
cmpsl
sub
data16
popa
cmp
or
adc
push
aad
sarb
ss
push
push
scas
lret
arpl
insb
xor
mov
ja
mov
loop
jl
push
push
in
imul
dec
fsub
xchg
fildll
or
inc
mov
in
les
jecxz
add
out
pop
xor
jmp
out
pushf
add
fdivl
jno
mov
xchg
out
and
mov
enter
adc
lahf
es
sbb
mov
sbbl
stc
xor
incl
insb
dec
mov
adc
mov
and
and
add
not
stos
cmp
cmp
jo
clc
fimull
mov
pushf
aas
push
inc
call
sbb
pop
call
mov
cmc
cmp
jbe
loop
sub
xchg
loop,pn
push
test
repz
dec
mov
cli
xchg
stc
pop
push
negb
mov
sub
call
xor
jo
push
sub
mov
mov
mov
jmp
dec
push
lcall
dec
pop
int
stos
jae
jl
cmp
imul
popa
ret
roll
jle
cmp
fidivrs
outsb
jecxz
mov
in
jge
mov
mov
es
hlt
pcmpgtd
xchg
dec
push
lock
mov
xchg
mov
loop
out
xchg
popf
jp
int3
sahf
inc
mov
xchg
les
out
in
test
cltd
adc
ret
jae
mov
xlat
push
loopne
jne
mov
adc
out
push
xchg
shlb
inc
loop
lea
inc
mov
xchg
call
jg
fidivl
addl
or
xchg
rorl
and
adc
add
ljmp
dec
js
enter
frstor
push
push
mov
dec
insb
inc
or
mov
cmp
gs
add
arpl
leave
inc
lahf
popf
push
not
mov
loopne
insb
cmp
cld
push
nop
pop
push
lods
xor
adc
cmp
mov
xchg
jbe
inc
in
lea
ljmp
xchg
sub
fdivrs
dec
arpl
andb
adc
loopne
arpl
into
stos
inc
enter
mov
adc
mov
in
pop
ljmp
and
xchg
pop
push
sbb
out
jno
icebp
aaa
and
movsl
insl
stc
add
sahf
mov
xchg
sbb
lea
insb
push
adc
pop
fprem
ja
ret
cs
int3
lds
divl
pushf
inc
xchg
pop
sbb
outsl
adc
loopne
and
sahf
repz
or
xor
jge
imull
or
adc
outsl
les
add
jb
or
aam
int3
adc
sub
ret
adc
and
inc
jbe
sahf
jle
es
jnp
fstpt
jb
testl
fwait
and
mov
inc
lods
or
in
sti
add
pop
mov
mov
adc
jecxz
mov
jns
add
cmpsl
xor
cmpsb
pop
sti
cltd
les
fisubl
loope
xor
mov
add
jo
rcrb
sub
xchg
ret
jl
add
pop
or
mov
sub
shll
and
push
lods
sub
insl
int3
sbb
xchg
mov
lea
add
mov
enter
imul
lcall
call
je
push
mov
push
repz
es
mov
xor
add
jae
imul
inc
scas
push
aas
pop
push
das
mov
push
push
data16
mov
mov
sub
je
or
rclb
cmpsl
and
ds
test
ds
push
pusha
pop
shr
mov
nop
test
mov
inc
rcr
out
jo
cmp
les
mov
jb
int3
jno
int
scas
xchg
loopne
outsb
lcall
mov
test
js
jbe
dec
cs
cld
inc
in
push
dec
mov
cmpsb
sub
mov
xchg
mov
repz
cltd
lds
jle
mov
jmp
cmc
shll
prefetcht1
frstor
std
sahf
insl
mov
cli
dec
xchg
and
jp
push
jp
aas
mov
cmpsb
sub
xchg
xchg
push
in
xchg
jl
mov
dec
iret
arpl
sti
fildl
jp
std
adc
cmpsl
fs
sbb
push
mov
imul
mov
scas
pushf
mov
push
out
xor
aaa
faddl
rcrb
dec
fcompl
vmulpd
and
pop
xorl
lods
lods
mov
int3
fildl
jo
aaa
xchg
imul
movsb
fucom
testl
insl
jle
xchg
ficompl
insb
pusha
cmpsb
clc
stos
jmp
in
out
mov
or
filds
adc
mov
ss
pusha
mov
push
xchg
mov
mov
xchg
add
inc
pop
mov
and
pop
push
pop
mov
andb
into
pushf
ljmp
insb
jnp
gs
ds
and
mov
aam
imul
mov
jge
push
push
leave
insl
xchg
mov
dec
pmaxub
shl
or
es
test
and
inc
movsb
inc
clc
dec
fwait
and
sub
cmp
int3
out
xchg
std
xor
inc
sbb
cwtl
push
xchg
push
jp
stos
and
jo
cmpsb
sbb
mov
lret
in
cmp
sub
jp
adc
in
push
sub
sub
and
outsb
hlt
mov
clc
lret
das
ss
adc
js
mov
pmaxub
ret
icebp
enter
and
test
test
jo
lods
xchg
sub
js
fnstsw
add
pop
nop
loopne
icebp
mov
inc
sbb
cmp
dec
in
test
cwtl
bound
mov
fsubs
adc
lods
imul
sub
fwait
dec
or
jo
fwait
out
cmc
in
test
xor
dec
lcall
popa
pushf
push
add
cltd
or
imul
stos
in
subl
pop
push
mov
or
test
jbe
popf
and
movsl
mov
xchg
mov
sar
push
ror
cmpsb
and
xchg
mov
in
jne
push
or
pop
mov
rcr
cmp
adc
imul
jnp
mov
int3
pop
push
aam
inc
addl
jg
push
inc
jbe
sbb
inc
lahf
jb
insb
dec
aaa
pop
mov
cwtl
sub
fidivrs
pop
push
je
std
pop
add
jae
jmp
or
dec
jns
lods
scas
pusha
inc
test
cld
pop
mov
iret
clc
ret
inc
ljmp
mov
mov
pop
add
outsb
adc
jge
icebp
jne
mov
pop
or
or
jno
ds
jecxz
out
test
jo
cmc
cltd
pop
lods
out
mov
or
push
dec
aas
dec
sbb
dec
mov
add
leave
pop
shlb
sbb
aam
inc
jl
pop
rorl
popf
das
mov
imul
jecxz
or
cmc
cmc
lds
jecxz
add
jmp
jecxz
xchg
popf
and
outsl
cltd
mov
aam
jnp
jmp
iret
lods
add
push
mov
push
test
lcall
xor
in
lea
push
sbb
jae
xlat
sub
add
mov
stos
pop
cmp
lock
cmpsl
add
and
daa
push
loopne
jb
jne
aas
ficompl
pop
inc
ljmp
xchg
cltd
push
es
pop
or
mov
and
addb
fstpl
fs
cltd
xor
push
nop
cmp
or
xor
mov
pop
shl
jne
std
dec
dec
fsubrl
sarb
mov
fimull
dec
pop
xlat
les
das
bound
aas
xorl
mov
cmpb
shll
loopne
fs
mov
ret
xchg
leave
pop
insl
mov
subl
lods
pop
nop
pop
lds
mov
mov
push
mov
inc
aam
push
jecxz
aaa
mov
rorb
shlb
xchg
dec
mov
pop
sbb
dec
sub
jmp
sbb
sti
cmp
push
pop
add
pop
pop
imul
sti
rolb
sub
in
sti
dec
add
jecxz
xchg
push
mov
cltd
push
stos
xor
cmp
test
add
xor
pop
push
pop
dec
popa
jl
in
sbb
sbb
sahf
test
mov
popf
push
push
sub
mov
out
fisubrl
adc
js
rorb
ret
dec
sbb
out
add
cmp
shlb
pop
mov
dec
pop
jbe
out
sbb
cld
mov
cltd
adc
test
imull
xchg
test
mov
mov
dec
xor
aam
inc
pop
xor
outsl
pop
fsubl
in
js
mov
shlb
arpl
push
out
cld
mov
pop
cmpsb
mov
cmc
lcall
dec
xchg
aas
jmp
sar
fiaddl
adc
cltd
push
pop
inc
adc
push
sub
push
xchg
sbb
add
mov
jg
addl
or
or
nop
nop
and
jp
fsubrs
ret
sbbl
cltd
dec
cltd
add
clc
data16
xchg
imul
jnp
mov
sbb
test
xor
stc
inc
jge
mov
cwtl
or
outsb
addb
dec
ljmp
adc
stos
test
imul
aas
sub
mov
cmpsl
rorl
mov
push
fisttpl
iret
or
ljmp
and
cmp
jnp
mov
ret
insl
ljmp
or
add
jo
nop
fildll
rcl
jg
lea
mov
inc
cmp
mov
jmp
es
xchg
aad
dec
call
scas
rcrb
shll
cmp
pop
lret
sbb
out
jne
popa
cmp
add
imul
jge
imul
push
loopne
or
mov
sahf
mov
movsl
xor
gs
ds
fcomps
in
cmp
push
repnz
sub
test
shl
mov
mov
xorl
push
xchg
sbbb
cltd
das
dec
push
inc
pop
repnz
test
sti
es
repz
mov
std
movl
and
dec
mov
adc
and
loopne
in
and
mov
inc
dec
fdivrs
pop
pop
mov
jg
pop
sbb
mov
adc
cmp
jno
dec
xor
int
or
or
xchg
lock
test
jne
xor
rorl
stos
xchg
mov
sbb
and
push
mov
std
cmpsb
daa
fimuls
jns
pop
stc
xchg
ss
clc
jnp
testl
adc
decl
jae
pusha
mov
xchg
aaa
imul
or
test
gs
jne
in
cmp
cmp
cld
jns
in
sub
xlat
mov
pop
into
nop
push
in
in
rorb
jmp
daa
mov
sub
imul
jns
push
push
push
pop
movsl
lds
push
pop
icebp
mov
out
inc
icebp
popa
xchg
aad
push
add
pop
movsl
lods
mov
in
data16
mov
push
lret
orb
xor
xor
push
das
dec
xlat
cld
rcrb
pop
or
mov
pop
imul
das
sti
cs
push
jb
dec
int3
es
mov
sbb
and
mov
jno
mov
cltd
add
out
je
loopne
shlb
mov
xchg
movsb
adc
cwtl
les
push
mov
adc
push
rcrl
arpl
sub
clc
fucomi
dec
dec
lods
decb
rcr
xor
xor
es
inc
dec
loope
mov
pop
lret
add
fs
xor
ret
icebp
lods
adc
jecxz
inc
adc
lock
sbb
imul
add
cmp
leave
jno
or
jmp
subl
sbb
push
add
and
sub
in
les
cmp
imulb
mov
popa
dec
dec
aam
lea
jge
out
loope
push
mov
xchg
adc
daa
add
xor
stos
loopne
xchg
pop
push
cmp
fistpl
pop
rcrb
imul
loopne
out
aaa
lret
out
shll
clc
nop
jo
jl
and
or
inc
sub
lods
pop
sub
sti
xchg
push
jbe
xchg
cmc
xor
add
gs
or
scas
mov
jl
inc
sbb
es
insl
lahf
dec
shl
sbb
push
sub
das
iret
leave
xchg
inc
pop
push
cmp
push
data16
decl
rolb
popa
sti
mov
xchg
and
int3
xchg
enter
dec
ffreep
and
mov
xchg
xor
jne
ret
push
adc
mov
lahf
and
adc
mov
or
hlt
fistpl
or
insb
sub
pushf
clc
cmp
test
sti
mov
jae
int
imul
inc
rcr
inc
arpl
adc
mov
insb
push
dec
and
outsl
lahf
mov
pop
push
add
loopne
cmp
inc
sbb
movsl
in
into
ss
js
cmpb
xchg
bnd
sbb
mov
xor
int3
sub
mov
stc
xor
sarb
pop
xor
and
xor
fwait
jg
jbe
push
lods
mov
iret
pushf
loopne
jp
lods
bound
xchg
addb
lcall
jns
or
fs
rorb
mov
insb
jne
shl
xor
fisttpll
test
or
cli
pusha
movsb
call
in
sarb
aaa
mov
addr16
mov
sbb
pop
pop
sti
lea
je
push
adc
lahf
xchg
dec
mov
adc
cltd
arpl
aas
scas
cld
insb
js
jae
inc
lods
andl
test
lcall
cmpsb
fxch
inc
jp
add
jecxz
icebp
cli
jne
pop
sub
sar
lcall
or
sbb
jecxz
ret
and
sub
adc
add
or
xchg
xchg
dec
mov
stc
jge
pusha
push
adc
out
xchg
pop
sbb
dec
pop
lret
dec
shlb
ss
stos
sti
ljmp
cli
fstl
lods
std
push
sub
mov
xchg
sub
paddusb
sbb
lods
sub
out
into
inc
cs
and
or
push
sub
inc
daa
cmc
mov
cmpl
sti
daa
jecxz
push
xchg
push
lret
stos
in
adc
sbb
enter
ds
popa
and
inc
jle,pn
xchg
lret
xchg
push
fdivs
xchg
inc
xchg
adc
add
pushf
ret
push
adc
sbb
int3
je
movsl
dec
or
scas
adcl
and
and
sub
push
ds
rclb
inc
dec
adc
adc
sub
cmpb
sbb
jl
lcall
jns
clc
dec
cwtl
es
mov
push
sub
out
sbb
pop
fwait
pusha
enter
or
adc
jns
pusha
sub
fs
sbbb
pop
push
dec
out
icebp
mov
lods
pop
aas
add
shr
fwait
aam
loope
mov
pop
sub
test
xlat
arpl
mov
push
mov
jo
sbb
jb
jge
cltd
add
ljmp
xchg
lods
mov
cmp
ljmp
les
mov
ss
imulb
ljmp
push
int
rcll
out
dec
in
adc
je
arpl
inc
mov
mov
stos
inc
jp
ja
and
ret
push
sub
dec
push
xor
add
mov
dec
es
int
pop
out
lock
imul
rclb
push
xor
outsl
movsb
fwait
loope
aad
jl
ret
ds
push
fldt
insb
arpl
std
stc
mov
into
mov
and
xor
mov
adc
repz
aad
xchg
jno
cmovbe
or
mov
loop
enter
test
inc
test
and
adc
or
pop
into
pop
stc
lds
mov
test
or
movsb
xchg
lcall
pop
mov
cmpsb
dec
jns
pop
sbbb
divl
jmp
xchg
mov
dec
add
mov
xor
cli
rcll
cmp
push
test
in
hlt
sti
dec
jbe
cmp
inc
pusha
pop
push
stos
lret
imul
sub
in
jb
mov
scas
xor
xchg
je
push
jg
or
lods
jmp
or
int
ret
je
cmpsb
xchg
lcall
push
sbb
mov
sbb
inc
outsl
cld
lret
in
int
jne
pop
jb
in
xor
jb
pushf
repnz
xor
xor
loopne
leave
fwait
shr
clc
mov
mov
jae
dec
mov
stc
pop
imul
mov
push
adc
jmp
lcall
out
sbb
push
xor
pop
les
testl
fimull
fsubs
pop
cmpsl
sarb
inc
aad
es
in
stos
in
xchg
mov
and
sub
and
mov
les
lahf
push
jle
cmp
mov
int
add
pop
ja
mov
mov
cmp
xchg
and
insb
jb
sbb
insb
mov
aam
mov
out
adc
cltd
sub
inc
lock
sbb
mov
lds
dec
test
inc
mov
mov
add
hlt
enter
inc
jbe
inc
mov
pop
cmp
imul
or
test
imull
pop
add
and
add
pop
pop
jmp
inc
ret
push
int3
enter
adc
push
inc
xchg
jb
and
jecxz
mov
push
fadd
pop
mov
into
add
mov
ret
cmp
adc
and
faddl
and
xchg
das
in
ret
mov
test
mov
xor
jns
jnp
aaa
inc
cmp
repz
add
jne
pop
pop
dec
xor
shlb
mov
or
imull
xor
add
xchg
ret
dec
hlt
add
cmp
pop
outsb
imul
mov
pop
loop
idivl
lock
cld
xchg
frstor
or
das
and
jmp
mov
out
jl
pusha
repz
es
outsl
pop
out
jne
add
int3
into
jo
addr16
mov
jns
xchg
dec
repz
aad
xchg
jmp
aad
test
dec
mov
pop
dec
add
call
ljmp
mov
movsb
xlat
adc
mov
push
movsl
dec
fmuls
stos
enter
xlat
cmp
aas
mov
cmp
dec
pop
stos
mov
push
jge,pn
test
insb
ja
test
adc
or
pop
outsb
xchg
mov
lods
push
dec
sbb
adc
loopne
or
mov
mov
jbe
push
dec
cmpsl
stos
flds
inc
fstl
adc
mov
outsb
add
xor
and
imul
xchg
ds
jns
dec
out
cmpb
daa
add
sub
sbb
pop
lods
pop
cmpsl
and
sub
cmc
mov
testb
add
adc
pop
mov
fldt
imul
mov
int
repnz
xchg
das
jp
mov
jmp
mov
dec
stc
cmp
cmpsl
jb
mov
pop
fsubs
mov
dec
inc
arpl
out
pop
cmp
jl
scas
pushf
push
push
iret
fmull
or
dec
sub
aaa
mov
mov
lods
xor
enter
data16
sbb
lret
movsl
movsl
shll
lret
mov
or
adc
mov
cs
pop
inc
ss
mov
cmpsl
xor
and
aad
jae
lret
xchg
std
fcomi
xchg
cs
pop
inc
sar
mov
push
int
push
out
dec
inc
xchg
fiadds
sar
aaa
pop
stos
fidivl
ljmp
fwait
jmp
popa
jno
rcll
mov
jl
mov
xchg
jno
push
fsts
fs
xchg
sub
or
inc
mov
add
sbb
inc
mov
sbb
push
loop
xchg
inc
rcrl
or
bound
and
push
mov
cmpsb
and
lds
or
outsb
pop
lods
out
out
iret
jl
jne
sahf
push
es
mov
jmp
test
ret
pop
lds
adc
gs
mov
popf
js
dec
aas
sbb
loopne
mulb
xor
adc
fsts
cmp
repnz
clc
ja
adc
insl
push
adc
sub
cmp
or
out
les
lds
lahf
mov
repnz
dec
jg
call
inc
fwait
leave
dec
xchg
test
add
mov
aaa
and
cltd
ret
je
cmp
ja
pop
xor
mov
adc
sbb
leave
loope
inc
and
sbb
sub
or
inc
mov
ficompl
cmp
test
andb
inc
jns
stos
addr16
push
mov
aad
test
jns
adc
jo
sub
das
sti
sub
je
clc
jo
dec
ja
mov
stos
js
mov
cmpl
jae
std
imul
dec
fiaddl
dec
sbb
ficoml
lods
inc
addr16
sub
clc
or
into
push
data16
push
add
push
push
insl
cmpsl
pop
dec
xchg
pop
sbb
lock
add
xchg
xchg
xchg
fwait
shrb
xchg
adc
int3
push
xor
lret
push
sahf
roll
dec
int3
shl
fs
mov
roll
push
adc
or
xor
arpl
add
aad
mov
andb
sbb
mov
mov
cmpl
out
dec
sub
repz
lahf
mov
xchg
jl
mov
jl
sub
mov
dec
stos
fwait
lret
bound
jae
std
pop
cmp
sarl
loop
xlat
testb
faddl
fwait
jae
popf
mov
aaa
and
jmp
sbb
out
jo
xorb
in
movsl
stos
xor
stc
push
imul
cmpsb
popf
cld
ret
adc
leave
mov
mov
repnz
fidivrs
add
mov
cmp
test
mov
add
jg
aam
inc
jbe
xchg
leave
dec
ja
out
adc
dec
fildl
jp
aas
sbb
jg
inc
repnz
enter
aaa
cmp
xor
dec
in
or
push
mov
push
lahf
pop
in
or
iret
push
lods
mov
jg
cmp
in
hlt
pusha
shll
mov
repnz
pushl
fnstcw
dec
dec
scas
sbb
test
out
mov
jno
call
or
xor
mov
and
mov
imul
or
ljmp
es
jmp
sbb
sbb
or
jnp
or
lret
mov
cmpsb
push
sbb
xchg
pusha
dec
pop
andb
jo
bound
decl
bnd
cmc
and
ja
cmpsb
xlat
dec
fimull
pusha
fimull
mov
scas
out
pop
fmull
out
xor
loope
sbb
sub
dec
or
xor
pop
addr16
ja
adc
clc
cmp
jae
pusha
hlt
stc
repz
enter
inc
mov
repnz
cmp
into
xor
pusha
mov
add
pushf
mov
sbb
mov
std
loop
sbb
inc
or
ret
ret
mov
pop
test
je
into
inc
adc
pop
loope
push
sarl
loope
push
inc
sbb
pop
test
hlt
loope
addr16
icebp
mov
push
fadds
out
insl
out
add
sbb
aas
mov
add
test
ds
mov
in
add
dec
push
in
mov
xchg
dec
ja
mov
pop
adc
movsb
out
test
imul
ret
lods
sbb
sahf
mov
push
dec
push
rcll
je
repnz
cmp
inc
mov
push
or
test
js
mov
sti
mov
cmp
leave
push
in
xchg
xchg
test
jle
mov
mov
xchg
jae
lret
call
in
test
movsl
outsl
out
and
cmpsb
sub
nop
ss
push
arpl
mov
add
mov
sub
mov
jae
inc
ret
ljmp
add
jl
jecxz
xlat
lods
mov
xorb
pop
jle
popa
xor
nop
push
sub
adc
in
fmull
and
adc
outsb
pop
lods
out
or
cltd
xchg
sbb
pop
sbb
arpl
adc
gs
add
or
sti
mov
pminsw
xchg
sub
mov
inc
dec
dec
add
inc
stos
adc
mov
jmp
out
imul
push
push
and
ror
mov
je
or
fldenv
aas
or
inc
push
addr16
push
push
aad
inc
xadd
push
push
test
cmp
jo
shl
adc
cmpsb
sub
add
imul
inc
xor
mov
aad
cmp
dec
xchg
mov
jge
loope
xchg
ret
shll
repz
cli
js
repz
jb
pcmpgtd
jl
mov
xchg
jno
pop
popf
addb
movsl
aad
xor
lods
add
sarl
stos
or
or
aaa
arpl
jmp
stos
bound
inc
out
push
xchg
and
pop
jge
mov
in
in
cld
test
in
mov
add
add
scas
imul
enter
sub
pop
es
mov
int
sti
ror
pop
mov
and
arpl
xchg
fsub
pop
pusha
int
sub
cmp
pop
jp
xchg
mov
fstpl
mov
add
rorb
pop
mov
lret
pop
and
mov
or
mov
pop
sbb
insb
ret
or
les
mov
loope
out
pop
dec
mov
mov
push
aam
and
cld
stos
mov
out
sub
push
pop
or
mov
std
jne
cltd
add
dec
repz
outsl
and
es
in
dec
xchg
fildl
movsb
out
or
or
outsl
cmp
stos
ds
jmp
inc
nop
gs
dec
pop
insb
jae
lods
pop
sbb
out
jp
dec
leave
test
into
add
fisubrs
jg
jg
push
mov
or
jnp
jnp
xor
xor
arpl
mov
sarb
dec
test
ficomps
arpl
popa
enter
cs
add
jecxz,pn
push
or
mov
mov
sbb
jno
pop
jbe
sarl
je
xor
cli
repz
insb
mov
fcmovu
inc
mov
aas
mov
add
aas
inc
out
jmp
cwtl
ja
pop
ja
xchg
and
movsl
mov
addr16
add
sub
dec
sarb
bound
jg,pt
sub
mov
push
inc
int3
dec
adc
add
rclb
imulb
pop
mov
mov
ret
sahf
cld
inc
sbb
pop
sub
sarb
cmp
in
out
daa
rcrl
popf
fidivs
popf
fs
lods
test
mov
adc
and
stos
je
in
inc
pop
xchg
lods
addr16
cli
jp
sbb
js
or
movsb
cwtl
add
js
inc
outsb
lahf
in
mov
aaa
jg
add
setne
in
pop
scas
cltd
insl
pop
cmp
cmpsl
outsl
inc
aaa
add
mov
mov
xchg
andb
shr
ja
mov
sar
test
mov
inc
push
movsl
pop
and
dec
fnstcw
or
push
nop
xchg
stos
ret
aam
sbb
sbb
jo
jne
fistpll
adc
arpl
aaa
xor
lret
stc
dec
cmp
fwait
and
out
add
andl
mov
lcall
xor
jb
jo
ja
shl
cs
dec
addl
in
call
test
or
cltd
fistpl
mov
das
jno
and
gs
mov
and
pushl
pop
jl
loop
loop
hlt
xlat
outsl
pop
adc
in
fistl
push
loopne
xlat
mov
pop
sub
push
mov
jg
xchg
sahf
add
lock
xor
push
clc
movsl
sub
xchg
cli
mov
cld
xor
jg
hlt
in
imul
xchg
dec
rcrb
paddusw
fldcw
ss
addr16
xchg
je
in
sub
icebp
iret
and
sbb
xor
shlb
dec
push
aaa
mov
dec
mov
pop
ljmp
repnz
sbb
lahf
xor
sub
xor
lahf
xchg
xchg
sbb
inc
out
adc
xor
std
aas
aas
lcall
push
jne
outsb
push
in
stos
jg
dec
ss
xchg
xchg
or
in
push
push
or
mov
or
imul
movsb
xor
out
fdivs
sub
loop
sahf
repz
fcmovnbe
push
sbb
setb
pop
sbb
mov
jnp
xchg
sub
popa
shrb
push
lods
push
filds
sub
jge
addr16
mov
dec
or
inc
repnz
gs
test
push
pop
lods
fnstenv
fs
lea
mov
ret
or
out
mov
gs
data16
push
fs
aaa
jb
test
mov
neg
fmuls
movsl
aaa
divb
clc
int3
adc
push
in
popf
int
lods
lods
arpl
push
push
aam
insl
mov
dec
push
mov
aam
cmp
dec
sub
testb
lods
lret
xor
mov
lods
or
shlb
lods
and
adc
cmc
jns
jl
ror
popf
jo
push
jb
imul
lods
addr16
cmp
lea
jp
cmp
push
mov
jg
mov
out
imul
sbb
jb
push
inc
sbb
int3
xchg
pop
fidivrs
adc
xchg
out
and
add
inc
xchg
jmp
push
lods
jne
adc
scas
xchg
lea
xchg
int3
jae
mov
cwtl
xchg
push
add
mov
rcr
test
sub
and
jp
cs
xor
xchg
sbb
call
out
movsb
dec
inc
test
mov
addr16
sub
jecxz
pop
arpl
rorl
test
dec
or
cltd
xchg
pop
scas
lea
scas
xchg
push
add
mov
push
fnsave
pop
push
pusha
adc
push
mov
jb
jbe
fidivl
pop
test
cs
mov
or
pushaw
push
jnp
and
cltd
dec
inc
mov
xchg
cld
stos
ds
out
scas
mov
stos
arpl
js
dec
std
mov
daa
jmp
andb
inc
popa
xor
popa
cmc
pop
nop
js
outsb
push
mov
adc
sub
scas
pusha
add
mov
nop
mov
inc
add
xchg
sbb
movb
push
sbbb
xchg
mov
jae
fsubrs
sub
jae
inc
or
pop
xor
movsb
jge
cmp
aaa
cmp
push
out
sbb
jo
outsb
mov
mov
insb
cld
xchg
xchg
jecxz
lock
inc
popf
mov
pop
adc
xor
cmp
dec
or
ds
dec
lods
fld
cmp
add
jl
sarb
adc
mov
fcomps
pop
xchg
popa
in
adc
aad
jmp
out
add
ds
sub
and
lods
dec
inc
test
out
imul
cli
outsl
inc
icebp
mov
mov
mov
mov
addr16
das
test
adc
scas
les
xor
jno
push
dec
dec
test
popa
adc
ja
mov
aaa
iret
sbb
push
inc
sub
es
pop
mov
add
sbb
sbb
lods
int3
es
push
sbb
mov
in
sbb
pop
rol
mov
adc
popa
jo
daa
iret
sub
mov
mov
inc
pushf
push
inc
jnp
xchg
shrl
test
scas
popa
iret
outsl
pop
cltd
pop
lock
out
ja
cmp
out
enter
sti
mov
testb
jmp
push
dec
sbb
adc
insl
cmp
iret
push
xor
test
adc
int
adc
imul
mov
xchg
push
les
or
fcmovnb
adc
mov
cmp
into
add
ljmp
fdivrl
and
mov
std
and
pop
pop
in
mov
fidivs
and
nop
jl
fidivrl
sub
ss
imul
cmpsb
mov
loop
fisttps
into
cltd
les
and
nop
cmp
adc
mov
addl
dec
add
jge
dec
mov
xchg
inc
xor
xor
gs
daa
and
das
xchg
das
pop
xor
lds
das
jne
push
fildl
lea
cmp
sbb
cmpb
sbb
cmp
pop
add
jno
jmp
outsb
cmp
stc
sahf
sub
add
mov
push
mov
mov
pop
ficompl
mov
push
dec
lock
sarl
xchg
stos
and
add
daa
int3
adc
cwtl
pop
cs
cli
jge
inc
pushl
cmpsl
push
nop
push
lcall
jecxz
xchg
frstor
xchg
gs
mov
shrb
ds
ljmp
movsb
lret
cmp
std
imul
mov
lahf
fsubrl
xor
mov
gs
dec
xor
mov
inc
adc
dec
ds
das
xor
adc
outsb
add
outsl
int
cmpsl
sahf
stc
ljmp
lret
push
cmp
xor
mov
and
in
pop
stos
sub
mov
mov
stc
cli
xchg
xchg
jle
pop
icebp
xchg
punpckhwd
and
push
inc
ret
jge
cli
call
sub
pop
adc
adc
fdivrs
push
imul
out
rcrl
add
xor
imul
mov
call
adc
or
jbe
add
clc
dec
dec
sbb
leave
repnz
xchg
cmc
add
push
add
popf
int
out
dec
or
popf
xchg
ret
flds
xchg
cmp
jp
jno
repz
pop
jp
add
repnz
dec
sbb
xchg
ficompl
subb
scas
fnsave
mov
pop
push
rcrl
popa
lea
push
out
cltd
rcr
scas
movsb
mov
cmp
sub
xorb
imul
mov
ret
sahf
push
ret
nop
repnz
add
mov
stc
lahf
out
xor
icebp
in
lds
push
fistpll
mov
cmp
lods
shlb
mov
imul
lret
ss
and
pushf
out
daa
inc
test
aaa
inc
jae
jne
pop
push
jno
rorb
jge
pushf
ret
insb
jp
iret
push
pop
pop
cmpsl
imul
jecxz
stc
mov
call
cmc
stos
nop
mov
adc
lods
scas
inc
repnz
test
outsl
repnz
ss
lds
lret
mov
pop
mov
loop
idiv
std
jb
fs
lock
aad
stos
int
ret
xorb
fbstp
out
lea
mov
in
aam
or
decb
push
sub
test
adc
lret
les
mov
or
adc
xor
mov
fmul
lret
and
cmpsb
addr16
xchg
jl
xchg
cltd
pop
out
out
sti
mov
in
es
fwait
push
inc
xor
cs
lock
fmuls
jae
movsl
in
add
ret
ss
test
out
fldt
and
jmp
sbb
and
mov
vmovlpd
and
jle
test
sbb
xchg
js
mov
repnz
sti
cmp
add
jmp
leave
ret
fwait
lea
fidivrs
jae
out
and
jo
pusha
mov
push
ljmp
movsb
iret
outsl
mov
mov
pop
mov
dec
cmpsl
subb
pop
arpl
cwtl
popf
adc
fistl
add
shll
mov
je
out
cmp
jns
jne
and
push
mov
das
pop
icebp
movsb
adc
lds
push
pop
mov
out
cltd
push
cmp
and
lds
imul
hlt
das
pop
mov
mov
pop
fisubrs
repz
adc
xchg
pop
insl
ss
sub
notb
idivb
cmp
inc
stos
and
or
into
sbb
or
arpl
jo
xor
fimuls
faddp
add
or
mov
jg
lods
push
js
sub
mov
pusha
pop
jo
lds
daa
adc
cwtl
popa
dec
and
xor
adc
in
imul
add
cmpsb
and
rcr
add
sub
sarb
xchg
repnz
lea
inc
xchg
xchg
lret
pop
mov
mov
xor
xor
in
mov
jbe
test
testb
mov
jnp
cmp
lds
mov
fs
push
aam
repnz
add
fadds
je
pop
and
mov
stos
js
loopne
jmp
std
fmulp
out
and
jns
dec
xchg
sarl
ffree
divl
ficoml
call
xor
jg
incb
dec
jae
cmp
jnp
push
stc
or
mov
lea
insb
mov
lods
xchg
xor
push
cmp
daa
pop
mov
sub
cmp
ret
in
sub
jno
cmp
daa
aad
fs
sbb
insb
out
enter
push
jbe
test
test
mov
mov
into
imul
jmp
ffreep
cmp
mov
and
cmp
ret
iret
out
xchg
or
repnz
sbb
jp
scas
inc
fisubrs
insb
mov
outsl
neg
popf
adc
sbb
sub
std
movsl
cs
fsub
lret
mov
notb
bswap
xchg
push
jecxz
fsts
and
jge
adc
leave
mov
push
mov
bound
add
mov
outsl
in
movsb
xchg
je
pop
ds
out
lret
xor
pushf
pop
inc
xchg
xor
test
xchg
in
xor
shll
insl
and
pop
popf
mov
cmp
repz
jl
or
inc
pop
cmp
mov
mov
jns
nop
pop
lods
mov
sub
xor
repnz
test
or
out
cmpsl
movsl
aam
pop
clc
adc
into
mov
aas
je
aad
mov
popf
sbb
adc
adc
cmp
mov
mov
jp
lret
push
push
jmp
xlat
cld
movsb
arpl
repz
push
jmp
in
int
push
je
mov
jb
cmc
rcll
cld
mov
sahf
pop
adc
aas
in
mov
xchg
shl
leave
iret
push
int
out
mov
dec
in
jl
test
andl
sbb
adc
call
inc
into
icebp
push
pop
leave
lds
xor
mov
and
jge
out
dec
jmp
sub
or
push
clc
dec
imul
cmp
xchg
mov
movsl
add
sub
pop
into
inc
xchg
push
fcoms
pop
je
inc
xchg
clc
dec
fisubl
mov
inc
dec
shll
add
push
dec
aam
sbb
arpl
setno
xorl
jo
inc
fstl
adc
pop
inc
mov
pop
pop
ret
sbb
xorl
daa
jp
sub
jne
mov
jmp
arpl
test
cmp
in
in
fwait
mov
ljmp
dec
ds
stc
mov
jne
or
out
jnp
stc
popf
jl
xor
dec
xlat
inc
or
adc
xchg
aam
pushf
add
add
mov
inc
and
dec
icebp
mov
ret
in
mov
test
xorb
cmp
lcall
adcl
mov
add
push
lret
mov
outsb
hlt
cs
mov
nop
std
movsl
int
and
ret
cwtl
es
cmp
fbstp
xor
leave
dec
mov
out
js
fsubrs
mov
out
add
push
push
add
repnz
lcall
fidivrl
inc
jle
lcall
mov
push
hlt
imul
lds
add
aam
mov
add
ret
or
dec
sbb
dec
jmp
pop
jl
fs
push
loope
shll
or
pop
inc
call
push
add
xor
arpl
outsl
nop
aad
ret
mov
sbb
adcb
xchg
arpl
imul
imul
mov
xchg
mov
and
cmp
mov
int
cmp
mov
xchg
cmp
movsl
push
fwait
mov
pop
inc
inc
daa
dec
adc
jp
xorb
incb
add
xor
push
adc
jbe
sbb
push
idivl
mov
sub
adc
dec
fwait
lcall
add
inc
movsl
xchg
dec
sbb
mov
stc
fcoms
mov
lret
test
das
lds
in
pop
pop
or
ljmp
adc
aas
je
or
clc
je
adc
sarb
mov
jle
mov
sti
push
pause
lcall
pop
outsl
das
in
insb
ret
sub
fwait
sbb
lret
nop
mov
sbb
dec
xchg
push
jb
or
pop
movsl
scas
ja
mov
lods
stos
jns
ljmp
mov
or
xor
xor
imul
ficomps
lods
and
insl
lret
aas
mov
pop
adc
mov
scas
ret
int
mov
insb
fwait
enter
int3
sub
imul
aaa
repz
sbb
dec
or
mov
js
sub
in
scas
adc
adc
adc
cmp
pusha
fidivs
rclb
jg
and
mov
jle
inc
ss
lods
xor
add
mov
daa
sub
lods
mov
and
scas
push
or
or
jl
cmp
sbb
fmulp
sti
in
dec
cmpsb
xor
and
fstp
push
pop
add
pop
dec
cmpsb
mov
sbb
inc
js
hlt
clc
jp
je
cs
and
subb
pushf
in
rorb
mov
ljmp
popa
push
loopne
enter
lods
out
test
rcr
mov
sub
or
mov
dec
push
pop
xor
mov
mov
sti
mov
inc
mov
lods
lods
xchg
loopne
cwtl
scas
aad
sbb
iret
je
mov
sub
xor
cmp
dec
fdivrs
arpl
cmpsb
das
cmp
aas
orps
neg
out
mul
std
add
int3
test
stos
sbb
add
sbb
fisttpll
and
xor
jmp
repnz
addr16
andl
idivb
mov
add
dec
nop
pusha
int
bound
xchg
xor
movd
and
mov
mov
dec
loope
sti
sub
xchg
pusha
imul
cmc
dec
mov
cli
dec
fwait
sub
mov
lea
mov
cmp
imulb
inc
sbb
mov
lcall
test
and
sbb
jl
sarl
hlt
mov
or
div
inc
mov
jl
push
adc
inc
imul
sub
jne
and
popa
or
and
and
lods
mov
xor
cwtl
add
sbb
push
aaa
pop
fistpll
ficompl
mov
jg
xchg
scas
fistl
push
push
mov
jl
and
push
stc
fdivrl
push
shr
clc
popa
in
push
scas
xchg
push
fwait
call
jmp
cwtl
cld
ret
mov
out
fwait
lcall
loopne
insl
or
and
jae
repz
shl
and
sub
pop
rcrb
cmpsb
nop
cwtl
test
jno
mov
jo
cwtl
icebp
scas
xor
mull
xchg
pop
ljmp
cs
and
add
fsubs
push
cmp
jmp
push
mov
jae
dec
das
mov
imul
push
jmp
pop
push
dec
push
pop
stc
insb
pop
test
out
push
xor
sqrtps
mov
popl
dec
ljmp
xor
push
in
stc
cmpsl
aad
popa
stc
and
rorl
lea
jmp
imul
or
dec
pop
loopne
push
test
in
aas
fistps
push
sbb
loop
xchg
xor
jge
pop
call
jl
lret
and
out
dec
repz
inc
mov
xchg
xor
ret
ds
insb
cmpsl
mov
jmp
mov
lret
pop
xchg
mov
xor
movb
mov
les
into
pop
push
sub
push
pop
adc
icebp
pushf
call
sahf
add
inc
es
ret
xchg
repnz
test
cld
incl
stos
icebp
aaa
sub
aam
fidivs
pop
add
test
daa
push
cs
pop
cmp
fldl
cmpsb
adc
fldl
nop
aas
cwtl
fs
or
iret
push
std
ljmp
inc
mov
lea
add
testb
and
shr
pop
xor
inc
sub
sub
dec
jp
ror
shll
dec
adc
xchg
arpl
jp
stos
ret
xor
stos
and
lahf
cmpsb
sub
nop
ret
stos
je
xorb
mov
sbb
mov
imul
sbb
call
fimuls
ja
mov
mov
adc
xchg
loope
pop
cmc
mov
xchg
jle
std
insb
and
fs
jl
xor
adc
or
mov
out
int
mov
cmpb
idivb
adc
leave
lret
sbb
popa
popf
rclb
jl
std
andb
jns
ja
inc
in
adc
insl
movsl
inc
mov
les
push
xchg
ljmp
jle
aad
jnp
int3
aam
mov
dec
push
cmp
scas
mul
and
mov
fnstsw
mov
ret
pop
mov
test
fildll
pop
xchg
sub
sarl
jne
push
fiaddl
xchg
push
clc
mov
push
adc
mov
das
seta
dec
add
sub
js
pushf
push
inc
pop
outsb
cmpsl
pop
mov
adc
pop
in
sbb
pop
mov
jae
sbb
push
mov
and
dec
pop
data16
outsl
jecxz
loope
xor
inc
and
mov
xor
sbb
push
jae
adc
dec
cld
insl
xor
sbb
gs
sub
loopew
in
push
pop
lcall
aam
pop
stos
fisttps
ja
add
jle
cs
les
dec
pushf
aad
std
push
bsf
xor
daa
sarb
sub
push
movhps
dec
in
subb
xchg
repnz
sub
cmc
fcomps
add
push
mov
cltd
mov
mov
test
fstps
out
data16
mov
jo
ljmp
lahf
sbb
mov
lds
lods
inc
inc
mov
and
lahf
das
fdivrs
inc
aaa
sarl
ja
js
into
in
sbb
pop
jecxz
cmpsl
in
mov
jle
lret
lods
repz
sbb
mov
mov
jae
and
pop
rorl
test
pop
arpl
outsl
push
loopne
sub
into
mov
repnz
pop
xlat
jl
lea
hlt
or
movsb
mov
ret
xchg
jecxz
inc
xchg
xcrypt-ecb
cmpsl
into
sbb
push
mov
mov
jnp
outsb
lcall
pop
cmpsl
jne
scas
push
loop
push
popa
mov
push
hlt
and
jbe
iret
push
mov
enter
cmp
inc
cmovnp
imul
add
inc
mov
ja
enter
and
push
jle
idivl
cmp
add
sbb
cmpsl
pushl
xchg
mov
enter
mov
aas
pop
and
loop
mov
cmp
fwait
in
inc
sbb
add
scas
jo,pn
inc
or
jecxz
das
add
dec
push
push
cmp
xor
pop
sbb
subl
xor
push
inc
push
int
dec
inc
int3
xchg
imul
pop
lcall
ljmp
mov
mov
mov
fs
sub
fcoml
xchg
test
push
push
popf
ficoms
jmp
aad
cwtl
mov
idivl
inc
sbb
pop
int3
daa
pop
pop
adc
pop
push
lock
jl
sbb
or
pushf
lcall
jp
and
dec
test
jbe
hlt
lahf
jg
scas
sbb
mov
mov
mov
inc
lret
lret
sub
push
jnp
inc
adc
aaa
arpl
es
and
loopne
insl
mov
test
cmp
mov
pop
or
sub
pop
mov
sub
es
test
imul
loope
cli
pop
sahf
das
jo
and
sarb
jne
adc
push
pop
in
push
push
into
scas
dec
aad
lret
jno
stc
shlb
aam
add
loop
jecxz
sub
outsb
and
insl
or
lods
adc
xchg
in
mov
sarl
lret
out
sbb
cmp
jae
lea
out
adcb
call
inc
outsl
mov
es
push
inc
sti
nop
js
mov
scas
xor
pushf
divb
push
mov
fwait
sbb
sti
pop
mov
xchg
pusha
in
sti
jecxz
adc
push
pusha
cmc
sbb
leave
fbstp
sahf
ss
push
cli
mov
testl
pop
jb
xchg
fwait
sarb
ds
js
fs
adc
dec
loopne
mov
and
pop
out
adc
bound
jbe
sub
movsb
or
xor
pusha
mov
loope
scas
adcl
jne
push
mov
gs
lods
or
int
inc
test
add
adc
dec
and
inc
jp
aas
sub
std
and
push
mov
nop
xor
fstpl
sub
pop
inc
jae
enter
mov
xchg
xorl
aad
aad
xchg
outsb
fnstsw
pop
ja
arpl
jae
and
repnz
sub
sub
cmp
inc
dec
lahf
inc
movsl
mov
jbe
lret
push
aas
scas
mov
add
out
cwtl
xor
shlb
into
or
push
lds
mov
scas
inc
test
cmpsl
imull
and
iret
ss
movsl
pop
mov
aaa
ss
ds
jmp
mov
shll
jecxz
sbb
sarl
insl
xchg
js
mov
pop
leave
pop
mov
mov
iret
jecxz
pop
push
enter
sti
push
cmp
outsl
imul
and
mov
push
iret
mov
fisttps
ljmp
inc
lods
jl
jno
xchg
and
movsl
ret
aaa
jne
mov
outsl
rcrl
push
xchg
mov
and
cmp
mov
inc
sub
push
cwtl
inc
xor
adc
mov
clc
cwtl
pop
inc
mov
movb
in
je
mov
stos
and
xlat
mov
sub
es
ret
in
hlt
ds
sti
movb
add
mov
mov
stos
cmp
inc
lock
dec
pusha
shrl
outsl
jne
lods
xor
in
loop
jnp
lods
jecxz
rcll
mov
addr16
les
jae
sbb
ds
jle
xor
fsubrs
fidivrs
fstpt
iret
aad
inc
or
mov
outsb
pop
mov
jmp
shld
sub
inc
mov
fstpt
jg
mov
cmc
mov
sti
cs
sbb
jg
es
jnp
test
mov
repnz
insb
push
xchg
ja
in
jmp
sarb
inc
cmp
je
das
add
jb
mov
sub
sub
push
xchg
mov
push
in
mov
xchg
xor
icebp
sbb
lar
inc
sub
push
in
mov
loopne
icebp
insl
pop
loopne
mov
mov
add
inc
xchg
mov
adc
mov
rclb
jp
test
adc
push
out
dec
loop
and
out
cmp
mov
ror
imul
cmp
leave
ret
aad
inc
inc
push
add
imul
pop
cwtl
xchg
push
out
lcall
fistpl
ljmp
add
sbb
mov
aas
sub
nop
mov
fstpl
cli
iret
das
sub
cmp
jo
pop
lock
mov
jl
cs
dec
pop
cmp
xor
lahf
lods
inc
test
xchg
sub
popf
daa
push
cmp
jg
or
out
fcmovnbe
repnz
iret
stos
aaa
mov
xchg
sub
xchg
push
mov
pop
pop
test
sub
and
and
aam
sub
xlat
ljmp
add
shlb
xchg
and
adc
mov
das
xor
loop
pop
sbb
inc
and
into
push
push
mov
clc
add
push
dec
and
out
inc
lods
repnz
xor
cli
in
inc
ja
lcall
das
lea
sbb
xor
cmp
das
cmp
sub
xchg
into
repz
cmp
call
pusha
dec
sahf
xchg
insb
dec
rcrb
or
clc
push
bound
fstpt
movsb
repz
or
ret
rcrb
aaa
sbb
lods
fst
mov
scas
sbb
adc
adc
push
addr16
iret
inc
mov
call
pop
into
nop
cmp
jnp
outsl
sbbb
stos
aas
inc
lock
sub
cmp
in
jmp
jmp
lea
das
es
push
and
incl
shl
pop
movsl
repnz
icebp
dec
dec
jp
outsl
push
pop
leave
adc
loop
in
nop
adc
dec
cli
aad
rorl
jns
pop
cmp
out
cltd
xchg
dec
testb
adc
push
xor
lahf
push
das
pop
aas
sbb
imul
addl
lahf
mov
shrl
mov
mov
stc
fs
notb
mov
jb
inc
xchg
mov
jecxz
test
lea
test
ret
cmpl
dec
mov
push
xchg
loopne
jecxz
leave
je
adc
jg
xorl
mov
loopne
frstor
lcall
test
fisubs
push
pxor
das
loopne
lods
stos
sub
push
loop
dec
xor
jmp
cmp
enter
add
test
mov
xor
cmp
xor
dec
mov
in
jle
xchg
pop
add
sub
fmull
inc
xchg
fs
pop
sub
call
fsubrl
push
gs
daa
add
dec
push
push
adcl
pop
sbb
dec
lods
mov
rep
inc
cmp
cli
adc
cmp
imul
ret
and
mov
in
cmp
repnz
fldl
js
pop
mov
aam
nop
aam
mov
pop
insb
and
push
movsl
into
xor
push
jns
mov
inc
pop
mov
out
stos
call
cmp
mov
xorb
xchg
push
sbb
cmp
jle
jmp
sbb
adc
dec
cmc
pop
dec
mov
ds
adc
dec
test
push
fwait
decb
xor
pop
push
stos
add
pop
out
jae
push
or
pop
mov
incl
lret
arpl
rol
fisttpl
mov
roll
cmp
adc
ss
enter
lods
cmpl
dec
pop
jecxz
inc
stc
movsb
enter
push
ret
push
dec
icebp
aam
push
dec
je
pop
stos
sbb
lods
loopne
dec
mov
mov
scas
lods
adc
pusha
out
cmp
loopne
dec
ljmp
push
iret
out
cmp
enter
pop
frstor
xchg
test
ror
sbb
sbb
icebp
movsl
adc
mov
iret
mov
cltd
dec
push
test
shrb
adc
mov
xorl
hlt
xchg
es
fistl
dec
clc
add
push
push
sarb
inc
xor
addr16
nop
mov
mov
push
test
enter
and
mov
cld
dec
mov
jle
loope
and
movsl
adc
sarl
shl
sbb
lret
out
jbe
xchg
fucomp
adc
sbb
sti
sub
inc
jno
movsb
and
and
cmc
les
outsb
es
stc
inc
out
add
fwait
dec
push
fwait
shll
jl
jmp
jae
xchg
xor
dec
push
push
mov
in
adc
sahf
xchg
jle
lret
push
fucomi
lret
push
push
lds
xchg
ret
xchg
sbb
adc
popf
hlt
clc
sbb
test
ficoml
push
and
pop
pop
jb
sbb
movsb
dec
push
cmp
movsl
hlt
mov
and
push
add
push
test
cmp
enter
pop
test
test
xchg
fwait
or
scas
xchg
mov
jnp
decl
fcoml
aas
jle
lods
xchg
loope
mov
adc
daa
lahf
push
push
test
aam
pop
push
and
pusha
fdivrl
mov
xchg
xlat
js
imul
andb
sbbl
fimuls
xor
jle
jbe
push
mov
shlb
mov
sub
es
sbb
xor
pop
pop
and
sbb
mov
inc
or
pop
inc
lahf
xor
pop
jne
cltd
push
mov
jp
in
mov
fists
scas
push
mov
xor
mov
negl
adc
js
popa
mulb
mov
test
insl
jge
movsl
inc
addr16
add
inc
xchg
test
sti
mov
cmp
pop
sub
push
mov
fbld
adc
pop
roll
stos
adc
pop
xchg
cwtl
lock
imulb
mov
pop
mov
push
pop
xor
pop
push
dec
mov
mov
xchg
arpl
mov
jb
cld
mov
xchg
mov
jle
outsl
sbb
rcrl
dec
pop
push
pop
aas
fcoml
sbb
pop
addr16
insb
jmp
ljmp
and
ljmp
cmp
mov
push
push
mov
nop
clc
xchg
xchg
pop
and
cwtl
or
xadd
es
bound
dec
xchg
mov
add
repz
sub
inc
mov
xlat
sahf
sub
out
xor
test
icebp
insb
dec
dec
add
test
mov
mov
ret
sub
sub
fldcw
ret
xlat
adc
mov
je
mov
xor
pop
mov
icebp
and
into
stos
ss
addr16
fisubrs
fbld
cmp
mov
pop
lea
bndldx
sarl
push
mulb
mov
inc
or
xchg
lods
mov
lahf
lods
pop
inc
jns
aas
sbb
cmpsl
push
repz
cmp
fs
cmp
mov
pushf
mov
data16
test
cmc
jno
inc
hlt
scas
or
aaa
call
lahf
jnp
mov
pushf
sub
mov
test
xchg
stc
push
pop
hlt
dec
sti
out
mov
sub
xchg
fwait
jns
enter
es
adc
sub
fwait
adc
sbb
inc
adc
mov
lods
cwtl
mov
inc
insb
ss
les
xchg
lods
jle
push
test
lahf
bound
add
out
push
xchg
out
nop
or
sub
sub
test
icebp
mov
cmp
outsb
inc
nop
xchg
into
leave
dec
cmp
nop
sbb
jbe
pop
loope
das
pop
into
ja
ja
cmp
cltd
inc
jmp
cwtl
pop
and
jno
pop
lret
push
out
cmp
mov
inc
push
fisttpll
sbb
lods
mov
lea
dec
jnp
int
cmc
lea
jno
stos
mov
push
aam
sub
sti
insb
dec
sub
pop
inc
xlat
andl
fldenv
mov
xor
shrl
sbbb
add
scas
clc
sbbb
sub
jo
ror
test
popf
add
das
cmp
mov
xchg
int
xchg
fcomps
xchg
vpmaxsw
aas
sbb
inc
loop
js
in
dec
inc
int
dec
fdivs
out
ret
push
ljmp
cmp
ret
ret
adcb
pusha
ss
loope
add
inc
scas
stos
jp
xchg
in
add
ret
dec
cmp
sbb
add
popfw
leave
in
mov
int3
cld
fwait
xchg
je
in
or
in
xchg
adc
icebp
in
push
xor
lret
movsl
enter
dec
out
jmp
mov
cmp
inc
in
adc
and
cld
and
sub
jns
push
pop
shrb
and
xchg
mov
xor
sbb
dec
out
push
adcb
mov
mov
int
mov
fwait
imul
lcall
inc
lods
inc
aaa
out
stc
xchg
loopne
lahf
mov
mov
sub
and
lret
sbb
jg
push
divl
icebp
mov
div
sbb
icebp
and
pop
add
sub
das
cmp
addr16
mov
test
jg
gs
je
dec
xchg
popf
push
repz
sub
cmpsb
pop
add
jne
push
movsl
test
lcall
push
lret
pop
notb
mov
mov
adc
xlat
imul
pop
popf
inc
je
cs
dec
xlat
fisttpll
inc
or
stc
cs
sbb
mov
mov
adc
pop
and
scas
inc
mov
push
xor
xor
bound
in
mov
lock
ds
daa
rcr
sub
psllw
ljmp
jp
xchg
sbb
jnp
mov
cli
adc
cltd
aas
pop
jge
sub
adc
mov
rorl
loope
js
repnz
ret
mov
mov
aaa
adc
hlt
int3
inc
repnz
mov
ljmp
imul
enter
das
mov
xor
add
cmp
jnp
mov
sbb
scas
dec
lcall
inc
sub
adc
cmp
xchg
and
add
repnz
xchg
adc
cmpsl
test
rclb
cmp
cmp
push
fs
and
dec
bswap
fisttps
stos
inc
ficoml
lcall
push
dec
xchg
sti
sbb
mov
or
enter
loopne
push
sub
mov
cmpsb
mov
and
sbb
mov
xchg
jae
fisttpl
inc
inc
push
je
bound
outsl
sbb
xchg
loop
cmp
stos
dec
cld
popa
dec
in
stos
or
loop
push
sub
jns
nop
cmp
lods
inc
add
cmp
cs
xchg
jne
mov
push
inc
pop
dec
fsubs
sbb
out
mov
sti
addr16
imul
addr16
cmp
jle
pusha
pop
cli
mov
test
pop
leave
cmp
loopne
cltd
xchg
cmp
adc
data16
sbb
fcmovbe
sbb
adc
shlb
cmp
imulb
xchg
sub
jl
inc
js
mov
in
outsl
repz
and
aam
jg
cmp
fs
test
xor
ret
jp
ret
cld
movsb
leave
inc
fadds
lret
shll
repz
xchg
xchg
mov
dec
push
sub
lock
inc
dec
fwait
push
pop
sub
sti
sbb
stos
xlat
pop
leave
sub
mov
push
ljmp
inc
xor
lods
pop
div
stos
push
aaa
jb
cmp
adc
mov
imul
sbb
shl
repz
push
cmp
push
add
mov
lods
adc
fmull
aas
insl
mov
adc
les
add
pop
xchg
out
mov
das
loopne,pt
mov
cmpsb
repnz
dec
cld
inc
push
cmp
xor
iret
adc
fiaddl
cmp
mov
and
mov
inc
mov
mov
sub
test
or
jmp
pusha
pusha
test
jbe
ja,pn
mov
cwtl
popa
jp
fcoml
xchg
cwtl
sarl
shl
jbe
jmp
test
pop
inc
add
or
aaa
xchg
in
or
adc
jbe
das
sahf
fisubs
popa
imul
lahf
and
out
xchg
xor
and
fmull
add
inc
das
sub
into
or
loop
outsb
fisttps
and
xlat
sub
jb
cmp
push
jp
inc
ds
mov
pop
mov
jns
pop
jle
test
push
cmpsl
out
push
cs
dec
mov
adc
pop
mov
and
lock
dec
mov
enter
stos
xor
push
pop
cltd
adc
mov
cwtl
lods
or
aam
decb
daa
dec
mov
out
lds
bswap
dec
add
lea
sti
pop
cmp
xor
cmp
push
and
fdiv
sahf
sub
add
mov
shll
cmp
icebp
mov
lods
xchg
gs
and
out
inc
cwtl
test
cwtl
lds
cli
fisttps
out
ret
jo
fadds
pop
jno
loope
xchg
cwtl
dec
pop
idivl
sub
sub
add
icebp
scas
leave
pushf
icebp
add
ret
inc
fcmovu
sbb
stos
xchg
out
mov
je
mov
push
mov
inc
mov
push
rorl
out
pop
fbld
ffree
fwait
call
xchg
scas
outsb
dec
cmc
pop
push
js
je
add
push
fsubs
fiadds
xor
icebp
jl
mov
mov
jns
add
hlt
mov
bound
out
leave
xchg
mov
arpl
daa
stos
adc
shll
or
ret
dec
cli
or
and
jne
sub
mov
sti
or
push
cmp
cwtl
jl
push
add
mov
arpl
std
in
sarl
dec
stos
cmp
aas
push
jo
xchg
loope
adc
addr16
pop
push
dec
fildll
push
jmp
shll
cmp
push
repnz
and
jle
jae
arpl
xchg
flds
icebp
push
dec
filds
pop
xchg
mov
or
add
mov
mulb
iret
pop
jbe
cli
bound
out
adc
mov
cmp
lods
push
and
lret
loopne
pop
out
xchg
cli
imul
leave
or
sbb
xorl
push
jb
roll
lahf
xchg
dec
inc
std
and
aam
hlt
or
mov
add
jae
notb
adc
mov
or
je
pop
fstps
xor
lret
push
adc
cmpsb
or
cs
inc
lock
sub
push
fstpl
ja
mov
inc
int
test
lret
in
insl
or
mov
mov
das
jmp
and
jns
pop
sub
jg
or
cmp
inc
cli
push
cmpsl
xor
les
pop
fwait
jmp
mov
mov
cwtl
movsb
lret
sti
pop
push
mov
xchg
daa
dec
or
pop
or
mov
imulb
aam
stc
sbb
cli
inc
push
pop
or
xchg
add
inc
sbb
pop
mov
daa
push
cltd
lods
jns
push
xor
push
fst
mull
scas
xchg
shrb
adc
scas
rol
xchg
add
in
out
sub
push
pop
dec
and
fs
add
imul
cmp
decl
lret
sti
mov
pop
xor
test
stos
fisubl
insb
xchg
aam
aas
push
push
aaa
ss
clc
hlt
cmp
in
clc
jno
mov
shl
jb
cmc
notl
push
mov
in
push
imul
xor
xchg
pop
and
pusha
jb
stc
out
mov
dec
fstl
xor
imul
pop
test
in
or
mov
adc
arpl
mov
fsubrs
cmp
sbb
mov
in
xchg
and
add
adc
sbb
xchg
inc
mov
xor
movsl
and
pop
fsubs
sub
cmpsl
mov
cmc
es
sbb
dec
ljmp
jp
aaa
sbbb
lea
test
loop
cmpsl
popa
or
adcl
loope
fildll
loop
or
jae
decb
inc
incb
outsl
xor
test
push
pusha
jecxz
fwait
mov
mov
mov
repnz
lahf
insl
addr16
inc
pop
std
or
scas
sbb
ficoms
imul
les
sbb
mov
aad
or
mov
je
and
insb
rorb
sbb
jnp
jne
mov
xlat
stos
jge
ret
aaa
mov
aaa
mov
jb
pusha
jmp
jnp
sbb
leave
jb
push
mov
inc
jne
mov
jp
addr16
mov
mov
or
fcomps
lds
leave
pop
testb
xchg
mov
xchg
cld
lods
inc
mov
ss
push
movsl
popf
mov
dec
mov
into
mov
and
cmc
pop
pop
add
outsb
jmp
les
cld
jbe
aas
jge
or
ljmp
clc
aas
orl
cmp
fdivp
adc
aad
and
sbb
push
add
add
repz
stos
cmp
xor
mov
mov
pop
xchg
xchg
ljmp
int
mov
sub
dec
pop
jecxz
cmc
pop
cwtl
mov
das
sub
aas
jmp
inc
jle
pop
pushf
and
leave
push
rorl
movb
xchg
repz
lods
add
cmovne
test
sarb
xchg
mov
in
daa
inc
mov
push
fcoms
pop
adc
xor
loop
mov
inc
scas
adcb
inc
xchg
out
mov
or
mov
pop
loope
push
xchg
stos
cmp
popa
loope
insb
sbb
test
xlat
imul
in
lret
cmp
pop
or
orl
push
out
mov
ret
fistpl
mov
mov
cmp
inc
or
insl
arpl
add
fsubp
push
stos
mov
daa
add
push
repz
icebp
push
add
push
pop
je
mov
imul
push
jbe
xor
add
movq
adcb
fs
test
jb
clc
push
mov
idivl
insl
and
icebp
pop
jnp
mov
aaa
or
push
iret
add
insb
pop
jb
ja
adc
mov
pop
repnz
pop
in
test
or
push
fisubrs
push
or
or
negb
gs
push
imul
jle
push
xchg
mov
pop
push
subb
jg
sub
pop
jg
mov
adc
cmpsl
mov
mov
popa
and
fs
xchg
in
cmp
aaa
lock
jmp
scas
mov
dec
pop
scas
and
idivb
sbb
cmpsb
fstpt
jno
mov
push
test
sbb
inc
inc
push
sbb
pusha
sub
test
cmp
jp
movsb
aas
rorb
adc
inc
leave
xlat
jo
and
sti
sbb
addr16
or
pusha
ss
shr
loope
imul
cmpsl
xor
jo
fdivp
xorb
imulb
out
mov
pop
mov
cmpsb
popf
scas
dec
dec
mov
adc
mov
add
mov
add
add
cwtl
bound
adc
and
scas
push
ret
dec
fiaddl
fs
mov
movsb
test
push
test
jno
lcall
push
sar
lcall
gs
std
add
and
inc
pop
adc
jle
lods
jle
add
cmp
add
icebp
or
xor
arpl
js
mov
cmpsb
sub
addr16
pop
pushf
arpl
push
xlat
jnp
inc
jmp
cs
iret
adc
repz
mov
push
push
popa
dec
xchg
in
addr16
pop
fwait
test
inc
pushf
mov
je
cmc
jnp
push
lahf
pop
cmp
mov
push
jp
mov
in
movsb
mov
leave
out
push
push
das
outsb
mov
sbb
add
fistpll
mov
rorb
pop
sub
jb
mov
mov
cltd
push
inc
or
xchg
cmp
pop
xchg
sbb
cmpl
cmp
ss
and
mov
daa
hlt
dec
jmp
or
pop
push
call
adc
addl
hlt
mov
xor
xchg
in
rclb
ljmp
orl
xchg
jg
xchg
in
sub
xchg
decl
outsl
dec
sti
push
mov
sbb
data16
mov
int
in
shl
push
shl
std
sub
sbb
hlt
xor
cli
push
pushf
xor
dec
ljmp
inc
xor
push
jp
roll
jmp
mov
dec
cwtl
jbe
sub
cli
hlt
fwait
lahf
cli
daa
aad
push
cmc
lret
cltd
add
iret
imul
pop
add
mov
movsb
mov
mov
jo
mov
lods
sbb
jnp
push
outsl
xor
jns
enter
clc
ret
lret
xchg
or
cmc
sub
pop
jecxz
sbb
fs
xchg
scas
mov
mov
or
imull
out
lret
cs
les
outsb
sub
movsl
lret
imul
xchg
ljmp
rcr
movsl
mov
jb
lret
test
mov
jmp
xor
gs
lods
push
fsubr
lahf
dec
test
xchg
aas
jb
loopne
nop
aam
pop
dec
in
ljmp
pop
sub
enter
sbb
push
mov
popf
lods
sahf
fbstp
outsl
arpl
jmp
cwtl
stos
jb
in
mov
sbb
xchg
inc
xchg
repnz
rorb
adc
xchg
or
pop
push
lods
and
mov
sbb
mov
iret
sti
pop
inc
data16
scas
xchg
dec
icebp
std
stc
pop
lods
ja
std
dec
insb
out
push
ljmp
repz
fcoms
sbb
lds
cli
inc
xchg
or
dec
daa
ljmp
cmc
cwtl
mov
and
rolb
mov
popa
std
xor
lahf
mov
sbb
mov
outsl
mov
inc
roll
inc
jmp
mov
pop
mov
dec
ljmp
xchg
enter
cwtl
and
add
dec
into
cmpsl
mov
jecxz
and
clc
add
lret
rclb
mov
or
daa
and
add
xchg
push
icebp
push
jmp
add
ss
lods
rol
cmp
sbb
pusha
test
dec
lret
aad
incb
aas
aam
hlt
push
sub
fldl
out
and
mov
jbe
or
mov
adc
iret
xor
mov
jno
enter
mov
xor
loop
out
jge
fdivr
dec
pop
inc
jl
dec
or
dec
xor
mov
testl
mov
pusha
icebp
adc
xor
mov
sbb
push
js
xchg
push
out
aaa
movb
stos
inc
movsl
addr16
xor
inc
pop
xchg
sbb
sub
test
cmc
popf
rcrl
sub
cmp
stos
and
lods
roll
xor
cwtl
mov
add
in
bound
sub
jo,pn
call
je
or
rcrl
mov
jmp
xchg
or
out
imul
adc
xor
pop
shr
mov
jnp
push
ljmp
call
cli
js
sbb
jp
stos
or
fstl
addr16
enter
pop
ljmp
fisubrs
push
sub
and
or
sbb
xor
xchg
jnp
dec
or
bnd
lock
jb
and
or
jle
adc
rolb
lods
divb
aad
and
jmp
mov
aad
test
pop
arpl
sbb
mull
sbb
call
inc
or
iret
gs
jecxz
shll
lret
xchg
adc
adc
in
je
gs
dec
ret
push
xchg
push
cmp
ja
sub
pop
rcrl
arpl
or
xchg
cs
ds
dec
sub
sbb
jle
std
sarb
mov
adc
sbb
push
std
aad
in
aas
ja
scas
mov
notl
sahf
stos
adc
movsb
xchg
ds
outsb
popa
push
insl
aas
adc
jmp
pop
mov
mov
notb
loop
mov
in
cmpsl
mov
mov
cld
mov
movsl
clc
jbe
cmp
jp
mov
cmp
jbe,pt
xchg
outsb
loope
or
iret
xchg
push
xchg
addr16
cmp
mov
jo
mov
mov
mov
push
insb
cmp
mov
inc
sub
adc
adcb
sub
mov
pop
or
xchg
pusha
push
ret
mov
cmpsl
pop
call
bound
es
inc
outsl
push
fs
gs
cltd
ss
inc
xorl
adc
xchg
stc
pop
decl
or
gs
push
dec
fcmovu
lret
les
dec
mov
sbb
mov
cs
mov
movsl
or
push
xchg
negl
test
sbbb
repz
fsubrl
adc
mov
jmp
jns
pop
outsb
rorb
push
sub
jle
fcompl
add
jle
fstpt
cmpsb
rcrl
cli
add
xchg
xchg
test
jge
aas
or
cmp
adc
push
lret
push
inc
push
inc
sbb
mov
addr16
into
push
ret
xchg
clc
dec
mov
fisubrs
and
fsubr
roll
idivl
sti
fnstenv
xchg
pop
sub
adc
bnd
mov
and
out
mov
or
addb
fnstenv
jne
push
in
push
xchg
mov
movsb
push
push
dec
in
pop
scas
leave
and
or
xchg
fiadds
pushf
adc
stos
test
rorb
push
repz
xlat
sbb
iret
mov
pop
sub
insb
jle
add
test
fwait
sbb
sub
or
mov
pushf
add
out
test
push
mov
jb
insl
lods
sti
cmp
jne
mov
lods
data16
cmp
mov
cmp
sbbl
cli
add
clc
push
cs
dec
mov
cmp
inc
and
mov
in
sahf
cmp
inc
sbb
cwtl
jns
pop
push
mov
or
push
dec
sahf
sarb
sub
stos
dec
in
hlt
mov
push
daa
cs
xlat
test
call
shlb
dec
jne
push
ret
inc
xor
cmp
fwait
sahf
cmc
jl
scas
adc
addr16
es
inc
sahf
and
ss
dec
int3
jp
gs
ret
inc
and
clc
sub
insb
and
repz
inc
test
es
dec
pop
mov
loop
fucomi
add
jl
js
sbb
lods
lcall
hlt
jno
xor
cli
les
jge
ficomps
fnstcw
scas
fimuls
pop
push
pop
pusha
scas
jp
mov
imul
push
pop
xor
mov
cmpsb
mov
fwait
lock
outsl
rol
dec
arpl
xchg
sahf
push
cmp
subl
add
xchg
fcompl
or
iret
dec
jl
ret
gs
outsl
ficomps
cmp
adc
inc
in
aaa
push
pop
mov
notb
mov
mov
or
cmp
xor
and
dec
fnstenv
add
shll
or
adc
enter
sar
stos
mov
add
xor
int3
jecxz
sub
loopw
or
mov
inc
iret
cmp
sub
decl
jge,pt
jne
es
mov
mov
add
inc
mov
or
fisubl
jbe
dec
fistpl
dec
mov
jb
fdivl
test
sbb
xchg
test
adc
cli
popf
andb
test
xor
dec
or
fistpll
xchg
fmuls
out
jmp
jnp
idivl
cmpsb
dec
imul
loope
repz
sbb
outsb
test
dec
or
flds
mov
jp
insb
arpl
sub
adc
add
arpl
les
cmc
or
int3
stc
push
ja
and
mov
pop
pop
lahf
shll
xchg
push
inc
rcll
jb
add
sahf
out
xlat
sbb
ja
mov
mov
enter
movsb
ret
lcall
pop
cli
add
xor
into
push
mov
insb
les
mov
js
orb
iret
adc
arpl
out
cmpsb
push
test
adc
jecxz
loope
je
or
or
movsl
xchg
pop
es
addr16
loope
std
inc
pop
repnz
leave
out
cwtl
sub
sub
lcall
cmpb
jmp
movb
call
dec
cmp
push
add
insb
xchg
mov
movsl
pop
stc
add
aas
daa
xchg
outsb
mov
mov
int
mov
cmp
and
push
test
loope
jbe
and
in
fnstenv
inc
inc
int3
fwait
fs
mov
or
ja
imul
filds
mov
enter
scas
js
or
test
lea
dec
add
xor
push
mov
dec
push
push
pusha
rcrl
jo
adc
pop
addl
mov
fidivrs
push
cmp
jne
lret
lcall
icebp
mov
cwtl
lret
inc
mov
pop
mov
mov
sub
pop
inc
push
push
adc
popa
pop
sub
push
dec
test
inc
out
hlt
mov
xchg
add
jl
and
xlat
mov
xor
mulb
aaa
dec
leave
divb
jle
cmp
cmp
iret
and
int3
cmc
icebp
repz
lret
leave
in
outsl
shrb
ss
mov
dec
sbb
pusha
cmp
lea
andl
leave
cmc
mov
adc
push
dec
loope
mov
pop
inc
mov
adc
stos
xor
cmpb
stc
iret
cs
push
popf
xchg
sbb
arpl
roll
loope
cmpsl
mov
mov
into
sbb
dec
or
inc
xchg
sub
cmpsb
ret
sti
jne
fs
fsubs
in
jl
mov
stos
sbb
and
out
sahf
xchg
lock
lds
and
mov
clc
int3
cmpsb
sti
push
in
loope
and
test
push
test
sbbl
xor
xor
sbb
and
repnz
sub
cmpb
push
push
xor
mov
aad
mov
fsubr
xor
pusha
inc
ljmp
cwtl
jae
push
cwtl
xor
mov
jmp
and
repz
mov
int
dec
loopne
push
xor
mov
xchg
icebp
mov
add
inc
out
dec
mov
pop
dec
test
inc
dec
in
mov
repnz
imul
push
or
jecxz
adc
jns
jg
sub
add
or
int
iret
loope
jbe
adc
jo
idivb
mov
push
mov
push
lret
jl
push
test
adc
push
cli
mov
std
inc
ljmp
cwtl
cltd
mov
push
mov
add
test
xorb
pop
lods
or
lea
and
clc
jne
jo
dec
test
inc
and
or
int
jmp
sbb
out
and
imul
inc
movsl
xor
test
cmp
in
ds
mov
jo
dec
adc
cli
pop
jp
pop
aad
std
jb
mov
gs
test
sbb
xchg
divl
fs
fdivr
or
push
push
addr16
inc
push
andb
ficoms
lret
in
add
cwtl
je
sub
xor
out
push
in
adcl
inc
mov
push
rcll
leave
xchg
and
push
pop
sahf
or
data16
iret
cli
push
int3
movsl
aam
shrb
jo
mov
lret
out
adcb
or
outsl
scas
and
lea
add
out
cmc
jecxz
leave
fadd
jecxz
clc
jp
in
lsl
aam
mov
sbb
push
push
jne
dec
jno
xchg
inc
jecxz
in
lahf
std
jo
cmpsb
xchg
push
mov
ret
xchg
xchg
es
inc
fmuls
imul
and
or
push
push
mov
mov
lock
mov
aad
lds
push
mov
xchg
mov
stc
iret
inc
inc
inc
out
js
push
mov
leave
cld
icebp
sbb
add
or
scas
sub
lock
pushf
out
and
sbb
gs
lahf
loop
imul
sti
aam
sub
shlb
fsubrl
xorps
mov
mov
test
xchg
nop
enter
call
sarl
pop
int
jbe
aaa
fidivrs
xchg
sbb
push
mov
pushf
icebp
lods
shll
push
inc
sub
jne
mov
bound
push
adc
movsl
or
js
and
sbb
mov
mov
jae
inc
pusha
cmp
jbe
pop
or
adc
add
sub
imul
jmp
pusha
mov
or
pop
and
ds
cmp
and
inc
pop
or
push
mov
in
xchg
in
ret
les
shl
hlt
inc
add
int
push
dec
or
sub
out
inc
out
ja
ficomps
pusha
push
pop
adc
dec
jo
ficomps
out
pop
or
and
dec
mov
aas
jecxz
adc
xor
loopne
das
stos
repz
and
sbb
cs
ret
pop
shll
xchg
and
xor
jge
adc
dec
out
lock
push
pusha
daa
lret
sub
jle
jnp
xchg
inc
mov
mov
mov
cmc
sbb
or
jge
test
mov
jno
or
shr
stc
lcall
call
and
cwtl
in
pushf
push
iret
outsb
in
lock
dec
pop
sbbl
je
pop
push
cltd
push
pop
fistpll
and
repz
sbb
add
mov
jae
xor
ljmp
or
mov
mov
shrb
int3
xchg
jnp
icebp
leave
xor
xor
jno
inc
sbb
adc
xor
push
and
cmp
scas
mov
dec
ljmp
sbb
pop
lret
sahf
lahf
bswap
xlat
or
push
mov
jb
daa
std
sbb
mov
out
push
jae
cmpb
pop
mov
pop
loope,pn
in
iret
test
jno
daa
outsl
jnp
or
aas
jg
loope
lea
push
dec
fwait
pop
add
mov
cwtl
arpl
sub
lcall
orb
decl
add
sub
jae
and
and
shl
jp
xlat
xor
scas
mov
inc
gs
mov
int3
dec
sbb
xchg
pop
ds
cmp
pop
out
loope
pushf
xchg
mov
dec
je
iret
inc
std
ljmp
jecxz
in
or
cmc
loop
cli
dec
pushw
aad
pop
cmp
adc
out
mov
pop
inc
jg
jmp
mov
xchg
mov
fdivl
test
test
xchg
sbb
or
nopl
rcrb
lods
pop
pop
imul
gs
arpl
movsb
aaa
sbb
into
rcl
dec
cs
ljmp
dec
add
push
mov
xor
sbb
ret
movsl
cmp
test
mov
xor
sub
and
or
mov
shl
xor
fcoml
icebp
sub
inc
rol
mov
popf
cmp
jae
scas
test
pop
push
adc
repnz
ja
imulb
cmc
mov
sbb
push
cmp
mov
and
jmp
adc
lock
loopne
fimull
sub
jns
pop
cwtl
fsubrl
mov
adc
sti
ret
mov
fcomp
pop
push
jg
inc
fwait
call
push
jmp
ret
and
jle
bound
add
out
lds
or
or
push
inc
dec
jnp
add
jl
and
lea
fbld
mov
mov
jmp
push
shrb
cmp
cmc
loopne
rcrb
movsl
or
jmp
cmp
aad
cmp
mov
gs
in
lret
jo
jmp
test
add
xchg
test
pop
loopne
mov
sub
xor
ret
jo
rcr
mov
mov
cmpsl
js
mov
scas
sbb
mov
inc
xchg
or
out
stc
inc
lret
fistps
cwtl
mov
loope
fwait
push
sbb
lods
iret
in
mov
inc
nop
add
mov
ficompl
sub
int
das
sub
icebp
ljmp
into
xor
xorl
jle
mov
ret
int3
mov
je
jge
xor
in
xchg
dec
sub
adc
movsl
aad
jb
lods
dec
sub
push
je
leave
jmp
inc
sbb
jl
mov
imul
pop
enter
movsb
jecxz
pop
dec
test
ds
data16
sahf
xor
ja
test
mov
inc
add
mov
fisttpll
lahf
dec
adc
jno
push
xor
dec
ljmp
sub
lods
push
jb
xor
iret
mov
das
stos
lcall
fsubr
popa
rol
fcoml
call
mov
loop
pusha
test
dec
or
lea
iret
rcll
ja
sbb
hlt
aad
js
movsb
dec
mov
imul
jb
insb
addl
repnz
jnp
mov
lret
ficompl
orb
xor
mov
jo
jmp
cmp
cmp
mov
dec
lret
push
cmpsb
cld
mov
lahf
shrb
call
or
sti
adc
push
loopne
stc
jl
mov
ss
stc
adc
mov
cmc
add
xor
xor
jae
negb
mov
out
mov
inc
pop
inc
push
or
roll
mov
adc
xchg
clc
xchg
mov
data16
loop
xchg
rcrb
outsb
cli
mov
push
fldl
sub
out
inc
mov
xchg
test
mov
sub
js
jb
mov
mull
mov
sbb
testb
add
decl
cmpsb
pop
scas
out
into
sub
pusha
int3
add
aas
mov
jge
xchg
mov
shl
ljmp
and
negb
test
and
dec
sub
mov
movsb
pop
inc
nop
lcall
xor
in
xlat
xor
out
dec
cld
cmp
subl
cmc
lret
jg
sbb
lock
sahf
jns
cmp
scas
loopne
xor
int3
push
xor
ret
jno
ja
stc
push
lret
inc
cmpsb
jmp
in
or
xchg
insl
popf
mov
pop
fnsave
rclb
pop
jp
cmpsb
js
pop
cmp
add
cmp
ds
lods
sahf
je
adc
jmp
ficompl
and
inc
dec
dec
sub
xchg
mov
and
clc
icebp
lock
sub
cmp
lahf
jne
cmp
cli
shll
adc
mov
mov
inc
std
into
loopne
cld
in
mov
dec
xchg
ret
fwait
mov
fldenv
jmp
push
jb
pusha
mov
push
imul
insb
add
pop
scas
lcall
xor
icebp
fisubs
test
fidivrl
sub
in
push
imul
xchg
movsb
mov
pop
insb
mov
sbb
and
cmp
xchg
pop
dec
std
outsb
jns
loope
js
arpl
aas
in
jge
das
insl
mov
mov
inc
jecxz
test
pop
fisttps
mov
jmp
test
add
push
cmp
sarb
mov
dec
xchg
xor
xchg
adc
xchg
imul
push
or
sub
inc
mov
lret
je
mov
mov
dec
mov
inc
cmpsb
fimuls
cmp
enter
dec
dec
sbb
movsb
clc
or
pop
mov
dec
sbb
cmp
int
rdtsc
aas
orb
repnz
fistpl
ret
inc
push
sbb
mov
sbb
ret
pop
push
stos
xchg
fst
inc
jae
std
movsb
jns
in
popa
xor
ds
test
cmp
jno
cmp
shr
jne
xchg
ds
dec
dec
push
mov
imul
mov
test
movsl
jne
addr16
xchg
rcl
ds
cmp
and
mov
push
mov
loop
pop
cld
pop
lea
xchg
mov
jmp
rol
mov
stos
cmp
fisubl
nop
add
movl
push
popa
sarl
sub
pushf
pop
mulb
fildll
fnstsw
popa
dec
mov
cld
sti
mov
ds
out
cld
pushf
mov
in
daa
lahf
jge
aaa
out
xor
pusha
mov
pop
pop
jge
pop
inc
stc
into
push
push
std
cmc
or
inc
push
push
pushf
push
mov
push
std
dec
sbb
dec
fcmovnbe
cmpsl
aaa
and
out
mov
and
dec
fcoml
icebp
jp
mov
movsb
aas
test
scas
out
mov
lds
in
adc
in
outsl
xor
outsl
popf
roll
dec
sbb
fwait
pop
cmpsb
mov
loope
jmp
imul
int
cmpsb
repnz
push
in
mov
idiv
leave
pop
xchg
add
mov
adc
xchg
ret
jnp
data16
out
cs
fcomip
cmp
scas
or
cmp
scas
sbb
mov
xor
adc
mov
sbb
mov
lods
xor
push
loope
fisubs
jno
faddl
or
sbbb
int
roll
add
in
das
orb
ja
cmp
pop
testb
int
lret
aas
scas
push
addb
dec
pushf
push
jl
jbe
fnstcw
dec
inc
or
lret
call
inc
addr16
aas
out
movsl
cmp
stos
dec
mov
dec
scas
mov
test
or
fimull
pop
rcrl
dec
mov
jg
bound
clc
dec
les
mov
sub
cmp
mov
xchg
cmp
fldl
pop
mov
aad
lods
lahf
int
dec
iret
mov
cs
xor
es
push
push
jecxz
loop
push
jle
pop
fiadds
adc
enter
jmp
in
xor
arpl
push
insb
add
cs
mov
imul
mov
add
and
out
rorl
popf
cli
jae
imull
cli
lods
stc
cli
adc
mov
je
fbstp
in
inc
push
mov
out
mov
outsl
cmp
fprem1
dec
inc
shlb
fcomip
and
in
loopne
and
jecxz
xor
aam
aas
xchg
push
popf
or
sbb
movsb
fcmovb
testb
test
loop
xchg
add
add
xchg
int3
and
aas
into
les
jecxz
sbb
out
outsb
les
repz
and
mov
divl
cmpsl
jne
mov
sub
cmp
imul
fisttps
cmpsl
jne
stos
and
test
jl
sbb
push
pop
mov
jae
in
rcr
add
out
or
xchg
clc
sahf
pop
or
mov
xor
cmc
sub
fwait
push
inc
out
dec
inc
fs
in
push
cmp
xchg
push
sub
adc
xchg
das
dec
rcr
push
inc
xchg
mov
cmp
pusha
xor
mov
adc
inc
cmp
in
pop
repz
dec
mov
xor
xor
das
repnz
jb
shl
iret
push
and
iret
nop
pop
popa
ljmp
jno
mov
nop
dec
push
ljmp
add
pushf
push
sub
cltd
sub
clc
in
sbbb
lods
and
je
jg
das
adc
or
shll
cmp
jo
jno
xor
fisubrs
lods
dec
mov
orb
or
shr
or
sbb
pushf
jl
fs
test
push
dec
xchg
and
out
adc
movsb
fistpll
mov
mov
les
add
out
dec
mov
ret
call
fbstp
ficoml
xor
pop
adc
lods
flds
icebp
ret
enter
xor
ljmp
and
mov
xchg
push
pop
xor
jmp
aaa
inc
call
mov
insb
data16
or
into
push
mov
fnsave
jl
jmp
xlat
push
shll
mov
inc
test
stos
stos
into
add
adc
mov
in
mov
fwait
das
lret
xor
mov
loop
icebp
pop
fstl
adc
cmpsb
scas
xchg
test
nop
xchg
sbb
and
dec
mov
jbe
in
adc
aaa
mov
cmp
lods
inc
xchg
lds
mov
inc
cmp
out
push
adcb
popl
add
pusha
or
cli
dec
andb
cmp
repnz
in
mov
stos
push
jne
test
pop
decl
cmc
add
adc
popa
sarb
roll
movsb
cmp
xlat
iret
and
cmp
dec
jge
mov
jb
fidivrs
icebp
cld
mov
into
ret
dec
add
sub
inc
shlb
iret
int3
enter
xor
inc
shr
fisttps
hlt
nop
xor
cmp
outsl
mov
mov
bound
adc
fdivp
fisttpl
mov
add
lret
shlb
xor
aas
mov
sbb
movsb
js
sbb
lahf
cmp
xchg
mov
pop
sub
fbld
dec
add
jle
or
mov
xor
pusha
xchg
sub
adc
lods
in
and
pop
imul
cmp
sbb
adc
cltd
push
pop
idivl
pop
stc
in
hlt
adc
mov
imul
jg
cmpsb
movsl
or
ret
fldcw
add
mov
pop
mov
push
je
xchg
inc
dec
inc
pop
lcall
call
jb
adc
jmp
andb
xor
pop
xchg
push
repz
lds
mov
cmc
stos
mov
out
les
push
inc
cmpsl
repnz
popf
mov
pop
fldcw
outsb
mov
ljmp
mov
xchg
adc
dec
xor
pop
cmc
dec
push
mov
sbb
pop
inc
push
mov
jnp
add
lahf
sbb
mov
outsb
int3
icebp
add
push
sbb
sarl
cmp
jbe
sbb
movsl
std
or
std
inc
inc
aad
pop
rclb
iret
insb
repz
in
out
loopne
std
aas
ljmp
xor
push
jl
adc
mov
sub
test
mov
mov
ds
sahf
or
pusha
add
and
mov
in
push
bound
fwait
mov
or
and
add
lea
dec
push
rcrb
outsl
fdivs
mov
or
mov
ss
mov
cmc
addr16
js
rolb
xor
or
lods
cmpsl
sbb
push
decl
xchg
test
orb
mov
jnp
dec
or
inc
aad
nop
xor
cltd
and
mov
outsb
insb
jae
jne
insb
xchg
mov
push
jno
cmpsb
mov
sub
sbb
addl
mov
mov
jge
jmp
or
mov
push
in
js
out
clc
mov
mov
sbb
lods
cmp
pop
xchg
jno
jno
jno
push
out
jne
mov
cwtl
fmul
cli
sub
in
call
xor
cmp
stc
test
sahf
add
and
lret
outsb
push
push
pop
dec
std
sbb
dec
dec
popa
xchg
mov
out
mov
sub
mov
int3
repz
jnp
aaa
es
jae
fcomip
dec
xchg
and
xor
movsb
and
sub
loopne
daa
cmp
rclb
pop
mov
pop
xchg
dec
xchg
add
fidivl
jns
lahf
stos
mov
jnp
xor
lcall
das
shrl
icebp
or
fwait
rol
lcall
or
add
push
xor
stos
in
lret
jns
test
loopne
iret
out
addr16
ljmp
ficomps
test
loope
sub
mov
dec
dec
cmp
hlt
xor
add
cs
inc
xor
xor
std
loope
inc
inc
sbb
gs
pop
jp
into
inc
dec
inc
insb
cwtl
outsl
ss
outsl
lds
sahf
mov
sbb
sub
js
xor
lahf
add
int3
scas
dec
call
inc
mov
lock
ret
xchg
in
adcl
jle
fistpll
fnstcw
xor
sbb
dec
push
push
jge
mov
aaa
pop
mov
lods
sbb
lods
cmp
jmp
sbb
pop
in
scas
outsl
xor
loopne
sbb
or
sbb
sahf
cmp
lods
mov
xchg
cmp
dec
cmp
daa
cmp
and
mov
mov
mov
ret
sarl
outsb
jg
push
out
inc
rolb
sbb
jl
xchg
fiadds
test
dec
fstpl
mov
aad
mov
sahf
stos
and
je
es
int3
push
mov
mov
add
in
inc
inc
pushl
cmpsl
in
mov
sub
mov
adc
icebp
add
adc
dec
fst
push
jle
fmulp
dec
loope
outsb
sbb
add
cmp
sub
sbbl
icebp
and
scas
add
sbb
mov
mov
in
pop
enter
push
sahf
pop
push
cmpsl
pop
insb
adc
frstor
bnd
bound
cmc
push
shll
sbbl
sbb
or
mov
fiadds
scas
xor
pop
loop
xchg
dec
xor
mov
pop
or
mov
clc
jo
aam
aam
push
into
adc
lret
mov
fwait
mov
push
addr16
aas
ss
sub
mov
ds
lods
pusha
mov
add
stos
push
cmpsb
or
pop
mov
pop
mov
jnp
push
xor
push
mov
shlb
or
cmp
adc
add
stc
in
fwait
jmp
fsubr
jp
dec
stos
mov
aad
mov
push
jle
fcoms
es
sbb
xchg
cltd
fwait
jae
inc
lods
xchg
and
insl
or
dec
iret
je
stos
jecxz
cmp
popf
sbb
inc
and
cmp
pop
inc
pop
jne
adc
lcall
xchg
in
dec
push
sbb
jl
and
aaa
inc
sti
push
sbb
nop
fists
jne
xchg
jl
int3
mov
mov
mov
fadds
pop
sub
data16
dec
mov
jle
ljmp
test
call
xchg
fiaddl
cmp
imul
mov
imul
loopne
and
fwait
mov
repnz
aas
aas
push
insl
mov
stos
fdivr
es
dec
jne
packsswb
sbb
out
pop
and
pop
jae
mov
fiaddl
jne
cs
add
and
lret
dec
mov
sbb
sbb
push
sub
pop
fsubrp
push
popa
call
incl
xchg
dec
mov
xor
lea
in
insl
sub
loopne
shll
pusha
aam
push
or
addr16
lods
fdivrl
pop
mov
das
adc
aad
and
jecxz
lds
inc
inc
xchg
bound
mov
sbb
or
sbb
fnstenv
jb
adcb
repz
stc
sahf
bound
mov
sub
arpl
add
or
jge,pt
add
stos
lods
int3
mov
jge
movsb
ss
test
inc
jns
mov
data16
mov
add
cmp
shrb
paddsb
push
or
int3
and
aad
mov
jge
push
dec
pop
bound
pop
lahf
out
inc
aaa
aam
loopne
cmc
insb
nop
scas
imul
mov
adc
lock
and
in
stos
push
and
sbb
imul
aam
fiaddl
rcll
callw
sbb
add
testb
sub
dec
pop
notl
shr
movsb
aad
push
cmc
es
adcl
push
xlat
or
popa
xor
mov
cwtl
repnz
inc
sbb
repnz
sti
cli
jl
xlat
add
icebp
hlt
fwait
mov
ljmp
jno
das
xchg
lods
jp
or
jo
xor
cmp
aam
mov
jp
mul
dec
sbbl
mov
into
sbb
iret
ss
xchg
xor
xor
pop
mov
pop
sbb
mov
fistpll
sbb
dec
push
data16
ret
jle
add
imul
and
dec
dec
sub
popa
xchg
inc
out
and
lods
add
inc
inc
out
xchg
sbb
push
pop
fwait
mov
icebp
cld
adc
sub
adc
mov
mov
push
pop
dec
lock
jg
adc
aas
test
xchg
adc
ret
mov
xchg
nop
lods
popl
and
aas
lds
xor
stos
adc
lea
out
lret
out
xchg
cld
inc
loopne
mov
jbe
ficompl
or
mov
add
cltd
mov
pop
ljmp
into
fists
jmp
shrb
lret
adc
jecxz
mov
outsl
mov
mov
pop
xchg
cmp
or
addb
inc
imul
negb
jl
mov
push
pushf
int3
cmp
mov
push
sub
mov
ljmp
mov
mov
clc
lods
sbb
popa
push
in
movl
push
sub
jnp
lock
jo
lock
jns
vminps
xchg
xchg
cli
insl
rsqrtps
dec
jae
jge
cmc
adc
das
xchg
pop
xchg
mov
push
add
push
add
sub
mov
shrl
mov
stos
mov
test
sbb
lods
push
scas
outsl
adcl
push
or
test
jle
in
or
mov
or
mov
lahf
push
mov
jmp
pop
inc
int
add
sbb
dec
adc
pop
or
std
dec
jae
jecxz
xor
pop
dec
iret
int
mov
cwtl
lret
sbb
scas
pop
pop
mov
cmp
add
xor
call
add
test
in
iret
inc
cmp
in
cmp
movsb
in
mov
bnd
insl
inc
daa
es
in
fildll
or
icebp
push
adc
stos
lcall
mov
aam
mov
insl
pop
mov
in
cmp
mov
ljmp
mov
pop
push
sub
bnd
arpl
jbe
dec
out
shlb
mov
jl
jmp
leave
xor
xor
xorl
cmpsb
scas
mov
dec
mov
mov
outsb
push
iret
inc
inc
iret
dec
inc
cmp
mov
and
lods
mov
jl
repz
inc
pop
lcall
lods
hlt
pop
xchg
lcall
mov
dec
mull
and
jnp
arpl
ret
and
and
iret
stos
sti
mov
pop
testb
mov
insb
mov
popa
shlb
lods
negb
inc
mov
test
dec
jnp
nop
sbb
or
push
add
or
mov
xor
jg
cwtl
arpl
out
loope
mov
push
push
mov
xlat
inc
test
movsl
sub
aam
test
addb
imul
cltd
hlt
xorl
dec
or
jmp
cs
adc
push
or
testl
mov
inc
aaa
xchg
shlb
test
push
and
push
ds
icebp
jae
inc
inc
dec
cmp
stos
out
hlt
sub
nop
call
sub
addl
mov
jns
into
mov
adc
scas
pusha
and
cmp
nop
push
sub
cmp
pushf
jle
cmpsb
fstps
mov
mul
sub
ret
push
pop
sub
pop
jb
testb
and
scas
push
mov
out
jl
test
sub
inc
adc
xor
or
xchg
push
in
dec
cmp
shll
sub
repnz
mov
insl
rcrb
and
cmp
outsl
dec
and
mov
xchg
jecxz
xor
sti
cmpsl
and
mov
test
addr16
cltd
sub
xchg
clc
xlat
adc
insb
sbb
movsl
dec
mov
dec
sub
inc
xchg
xchg
repz
or
xor
fldt
adc
rolb
rcrb
decb
add
popa
addb
notl
mov
lea
mov
jmp
loop
pop
push
mov
or
pop
xchg
loop
insb
push
pop
ret
std
pop
lret
adc
jbe
push
test
push
xor
fucomi
push
incl
mov
les
subl
and
das
int
xor
lahf
sahf
jo
jbe
sbb
and
dec
daa
jb
push
mov
scas
push
cs
or
jbe
es
movsb
and
add
ss
stos
add
fs
push
mov
shr
mov
pop
sbb
and
test
ljmp
pop
lcall
outsl
imul
loope
call
cs
and
addr16
hlt
cmp
sti
cmc
xchg
xchg
pop
in
int
fbstp
dec
jl
or
in
sbb
mov
daa
cpuid
les
or
sbb
adc
sbb
mov
stos
lahf
cmpsl
lods
jnp
into
call
outsb
imul
into
andb
inc
xor
rcrb
adc
movsl
int
jne
mov
leave
pop
add
cmc
xor
jl
ret
sub
xchg
xchg
dec
push
dec
stc
lods
repz
rcll
cmpsb
leave
pop
iret
in
jmp
jp
repz
fs
es
or
insb
push
clc
cmp
inc
adc
stos
popa
push
insb
cmp
dec
adc
jb
inc
jmp
out
mov
pop
jno
sub
xor
add
dec
sub
and
pop
fists
out
aad
adc
pop
or
repnz
call
fstpt
add
inc
f2xm1
xchg
sub
fwait
add
xchg
inc
imul
lock
xchg
sub
das
aam
out
push
xchg
leave
daa
add
pop
je
mov
js
aaa
stos
jno
movsb
aas
inc
jl
cmp
cli
xchg
xchg
ss
lahf
or
cltd
inc
das
add
adcb
cltd
or
cmpsl
and
movsl
js
dec
adc
fnstcw
xchg
and
push
adc
mov
roll
sub
sbb
and
add
popa
inc
xchg
dec
mov
aaa
fwait
lret
ror
push
and
sub
pop
mov
pop
push
pop
dec
add
sub
shrb
mov
rorb
lcall
or
mov
inc
or
xchg
mov
mov
test
xchg
pop
stos
call
jge
xor
jge
scas
lcall
repz
mov
fs
aas
mov
push
xor
out
mov
les
cli
push
jbe
cmp
clc
mov
pusha
mov
imull
jp
mov
loopne
or
dec
dec
pop
in
in
adc
shrl
int3
jne
das
adc
out
push
insl
in
ficoms
push
jns
push
loopne
mov
mov
call
pop
enter
mov
jb
xor
call
cmp
aaa
in
lods
dec
mov
lods
dec
mov
jno
daa
clc
out
sbb
fbld
dec
popf
pop
sub
cmp
mov
push
mov
and
enter
push
lock
ror
enter
push
int
cmp
repz
add
outsl
dec
lret
js
jp
inc
insl
sti
nop
repnz
ds
gs
subl
pop
dec
xchg
xor
adc
jge
xchg
sbb
js
stc
cmp
mov
daa
out
mov
inc
out
loopne
rcrl
xor
and
movsb
orl
int
pop
mov
pop
jb
mov
aaa
cli
hlt
neg
jns
insl
negb
inc
mov
dec
dec
mov
test
dec
push
lret
lods
push
mov
insb
pusha
and
cs
mov
xchg
movsl
push
aas
pop
popf
jno
add
xchg
mov
decl
movsl
xor
xor
dec
js
in
lds
cs
addl
loopne
lods
add
cmc
imul
or
cmpsl
xchg
jnp
insl
fisttpll
cs
leave
ret
jns
imul
aam
sbb
mov
dec
call
filds
es
imul
rorb
fnstenv
xchg
ljmp
mov
popf
shll
add
xchg
push
pop
and
lods
xchg
lock
sahf
shr
xchg
pop
cwtl
scas
lcall
adc
fwait
or
popf
push
cwtl
aas
arpl
mov
lcall
jmp
adc
sub
mov
inc
cwtl
cmp
cld
cmpsl
pop
inc
adc
pushf
dec
cwtl
xorl
mov
inc
jg
sahf
mov
call
aaa
movsb
dec
rep
jne
aam
or
xlat
cwtl
push
shll
jno
inc
lds
cmc
jl
inc
mov
jmp
inc
imul
lret
fimuls
inc
pop
xchg
cli
push
push
ljmp
or
fdivr
pop
jp
sahf
dec
sub
lea
shrb
inc
jl
adc
push
inc
loop
adc
xor
repz
addl
xor
leave
mov
push
xchg
pop
call
mov
stos
jae
rcl
adc
pop
inc
cmp
dec
adc
jbe
fnsave
xor
pop
fsubrp
pop
push
stc
sub
jns
push
mov
lret
mov
push
ficoml
jne
mov
xor
jnp
loop
ffreep
iret
lods
data16
sub
mov
inc
movsb
fcmovbe
scas
stos
inc
mov
gs
jo
test
xor
popf
imull
pop
cwtl
mov
jnp
xchg
cli
out
arpl
enter
ret
jp
aad
arpl
dec
iret
dec
mov
inc
gs
cmp
ret
jnp
incl
jo
add
push
in
or
sub
es
in
adc
jae
lahf
add
loopne
test
lret
into
scas
pop
mov
ss
in
pop
orl
dec
mov
into
icebp
sub
and
sbb
pusha
add
mov
mov
outsl
out
dec
fidivs
and
or
xchg
lea
insl
nop
lahf
mov
mov
iret
jg
rcrl
repnz
data16
jmp
lahf
lds
mov
movb
cmpsl
jb
adc
je
inc
out
or
sbb
dec
dec
pop
and
adc
mov
pop
cmp
xor
jl
lods
dec
ljmp
pop
adc
shrl
and
push
xor
dec
mov
daa
sub
jno
movsl
shrb
add
je
lods
movsl
shll
mov
movsl
lock
imul
push
xor
jl
les
inc
or
dec
out
dec
mov
adc
rolb
out
pop
push
sbb
popf
and
sahf
push
jle
inc
stc
outsb
cmpsb
push
push
push
xchg
dec
call
mov
dec
mov
lahf
jp
xlat
sub
jbe
rcll
cmc
mov
mov
mov
rol
test
mov
div
nop
stos
insb
mov
mov
add
bound
mov
sbb
xchg
clc
imul
sbb
inc
jg
sbb
dec
cld
and
sub
add
test
imul
sbb
and
xchg
inc
mov
ret
in
push
mov
cmpsb
sub
loopne
dec
push
pop
ret
jo
jmp
jae
fsubr
sub
inc
mov
xor
xchg
cmp
push
dec
mov
stos
cmp
mov
cli
push
imul
mov
add
add
jo
mov
adc
in
insb
mov
lcall
aad
adc
mov
pop
dec
fidivrl
sti
out
mov
or
cmp
and
cwtl
sti
cltd
call
out
ficompl
rcl
movsb
or
dec
jnp
insl
sub
insl
jge
cmpb
loopne
or
loopne
adc
dec
int
adc
enter
jp
inc
inc
test
daa
jb
enter
dec
negb
jbe
sub
adc
pop
outsb
pop
add
pop
mov
adc
push
adc
mov
mov
xchg
out
fwait
xchg
or
hlt
sub
pop
rcrb
aaa
push
shl
mul
and
xchg
jnp
jmp
cmpsb
push
aam
cmp
xor
mov
inc
out
rorb
std
lcall
out
cmp
les
test
ljmp
fwait
inc
stos
movsb
push
ljmp
pusha
dec
movq
mov
icebp
cmc
iret
imul
loop
jb
outsl
sti
inc
test
mov
xor
dec
inc
cmp
mov
pop
shlb
idivl
xor
sbb
es
sti
aam
pop
in
cmp
cmpsb
push
push
fsubs
es
xor
hlt
sbb
nop
xor
and
jo
or
out
test
mov
sub
rcll
pusha
jecxz
es
clc
add
dec
cmp
mov
xchg
in
push
cli
pop
leave
xchg
pop
movsb
ficoml
dec
ret
mov
lret
add
loop
xor
inc
mov
inc
mov
pop
fstpt
addr16
adc
ret
push
fucom
sarl
mov
pop
ficomps
jns
add
or
inc
stc
xchg
sub
test
repz
test
cmpsb
add
popa
cmp
test
popf
sub
push
popf
xor
mov
sbb
adc
and
inc
push
pop
lcall
inc
roll
rolb
jge
pusha
jnp
lds
imul
sbb
sar
or
pop
dec
adc
mov
xor
add
stos
add
sub
cmc
adc
adc
repz
adc
jno
xchg
add
orb
movsl
loop
sti
cmpb
fwait
xchg
jns
ret
testb
leave
mov
out
lret
pop
mov
into
and
std
lds
test
imul
insb
jns
cmp
inc
jmp
nop
adc
mov
push
in
sub
pop
dec
ret
mov
out
xchg
xor
int3
add
mov
cmp
rcrl
repz
pop
ljmp
sub
jae
test
out
or
addr16
push
bound
nop
inc
pop
sub
cmpsb
and
mov
inc
mov
and
pop
fstps
das
stos
cwtl
sub
pop
out
aam
mov
mov
and
test
jne
or
push
xchg
rorb
or
rcl
inc
push
std
fs
inc
rcll
pop
and
mov
imulb
mov
and
mov
mov
cmpsb
cmp
movb
dec
jl
sub
scas
mov
or
repz
loop
roll
imul
aaa
xchg
sbb
mov
inc
lcall
mov
or
inc
lds
adc
or
sbb
or
cmpsl
inc
popa
sub
stos
in
push
dec
cltd
in
test
subb
rcr
mov
jne
dec
cmp
adc
outsb
mov
imull
mov
push
stos
adc
jo
and
pop
pop
sbb
das
mov
add
hlt
dec
xor
adc
jp
dec
je
xchg
fisttpl
jmp
dec
inc
dec
ljmp
sub
dec
call
jne
mov
xor
addr16
sbb
adc
test
out
loope
adc
push
pop
ss
decl
mov
nop
mov
xchg
dec
iret
loopne
in
mov
jo
test
imulb
push
fucom
or
stos
adc
mov
xor
cmp
imul
jp
xor
and
fs
and
int3
mov
mov
push
jbe
lret
sbb
rcr
stos
stc
cmpsb
insl
adc
sti
sar
xchg
pop
outsl
xor
jge
insl
ds
ljmp
mov
in
cmp
aad
sbb
jmp
add
adc
sub
dec
js
cmp
aad
pop
test
jg
int
sarb
or
idivl
test
call
shll
repnz
push
loopne
hlt
fiaddl
adc
aas
adc
push
call
xor
or
add
pop
aaa
mov
push
xchg
mov
push
mov
cmp
sbb
pop
sub
mov
jg
jno
fisubl
mov
adc
rcrl
addr16
sub
andl
pop
mov
cwtl
adc
lcall
add
push
fdiv
addb
xchg
test
je
bound
xorb
int
sbb
fcomps
ljmp
sbb
push
test
stos
mov
inc
push
lret
mov
popl
sbbb
push
outsl
fmull
jmp
call
pop
jae
sub
outsb
mov
mov
lcall
iret
popf
pop
nop
fxch
mov
negb
enter
in
int
cltd
or
pop
push
lret
test
jb
test
imul
daa
mov
mov
aam
jo
rolb
mov
repnz
bound
movsb
std
popa
push
jne
push
fists
mov
loopne
xchg
ret
mov
fimull
push
rcrl
scas
adc
mov
jno
inc
dec
dec
cmp
movsl
lods
sarl
hlt
aas
movsb
hlt
and
cmp
mov
mov
ret
stos
insl
add
xor
fs
pushf
inc
or
adc
out
mov
and
adc
dec
pop
in
fldl
push
addl
hlt
rcr
pop
jne
jbe
fsubs
mov
jg
arpl
shl
loopne
adc
or
nop
sbb
pop
push
push
stos
jne
inc
or
xor
add
jo
repz
pop
shl
pusha
sbb
mov
xchg
cld
pop
mov
or
cld
clc
lea
clc
adc
sbb
xlat
pop
mov
or
bound
shl
push
imul
xchg
aas
das
call
cmp
add
add
and
leave
xchg
fidivrs
insb
sbb
cld
mov
rcr
mov
pop
inc
jmp
cmp
retw
mov
xor
sbb
push
mov
push
inc
mov
dec
or
mov
sub
imul
insl
mov
cmp
testb
adc
test
mov
mov
and
aad
rcll
fisubs
rcll
push
jb
inc
loop
pop
inc
fnstenv
movaps
inc
push
cmp
push
scas
mov
mov
enter
outsl
movsl
push
ret
movsl
arpl
add
lods
out
jle
insl
repnz
or
inc
cmp
xor
push
mov
idivl
cwtl
cmpb
ret
rclb
mov
je
data16
xor
popa
test
dec
cmpsb
mov
xchg
sbb
loope
mov
rcl
jmp
mov
rep
adc
repz
scas
bound
es
and
xchg
sub
xchg
or
ss
jae
sub
cld
in
pop
andl
fidivl
aam
vorps
inc
out
enter
jl
xchg
cmpb
imul
lcall
insl
mov
inc
dec
adc
or
mov
sub
cwtl
jge
fistpll
rorb
lcall
mov
jecxz
dec
js
jle
sbb
or
dec
movsl
scas
push
sti
and
fmuls
stos
pop
sub
mov
out
movsl
movsl
sbb
inc
inc
nop
jge
popf
jmp
popa
mov
pop
ds
push
and
add
aas
bound
push
xor
push
pop
xor
and
inc
xchg
push
mov
push
call
adc
xchg
mov
xchg
cld
or
popa
movsl
inc
jle
or
cmp
sysenter
into
sub
cmp
mov
dec
cmp
lods
jb,pt
xchg
or
pusha
push
adc
int3
cld
dec
cmp
stos
sbb
scas
cmc
test
test
repnz
js
pusha
jnp
loop
data16
and
jo
addr16
push
or
add
jmp
adc
ja
mov
xchg
inc
mov
lds
dec
push
call
stc
ffreep
mov
fs
pop
or
push
jns
cmp
movsl
add
pop
sub
leave
or
jns
mov
dec
push
lahf
sub
add
jmp
icebp
xor
xorl
in
adc
je
push
xor
xchg
add
pop
and
push
cmp
rcrb
popa
jge
dec
sbb
xchg
les
push
sub
jne
addl
add
les
faddl
cmp
subl
retw
and
xlat
aas
dec
xchg
push
mov
jns
inc
stc
jp
sub
xor
mov
inc
push
and
in
fwait
adc
pusha
dec
push
sbb
jae
and
mov
std
mov
aad
adc
cmp
cs
mov
pause
pusha
aad
cmp
inc
scas
inc
or
inc
jg
mov
cmp
pop
sub
mov
aad
lock
ds
call
clc
movsl
movsb
lcall
xor
push
sub
stc
xor
dec
sbb
sub
loope
out
sub
or
push
inc
cwtl
mov
inc
hlt
movsb
out
dec
shl
and
add
sbb
stc
push
jmp
push
scas
test
and
js
pop
scas
les
lret
jne
xchg
or
pop
xor
popa
out
add
aam
dec
sbb
adc
pop
adc
add
xor
stc
aaa
push
pop
sbb
mov
out
and
xor
testl
mov
xor
xor
ret
bound
inc
cmpsb
jno
push
rolb
lds
sub
sub
test
cmp
xchg
imul
pop
stos
push
mov
into
hlt
test
sbb
ficomps
jge
test
xor
cmp
push
push
das
pushw
mov
and
fsubs
shll
sbb
xlat
insl
es
pop
sete
in
push
cmp
cmpsb
fucomi
shlb
sub
je
fnstsw
push
cltd
cmc
sbb
jo
or
xchg
pop
arpl
test
shll
int
mov
or
sbb
pop
xchg
sbb
daa
bound
nop
pop
mov
sub
lds
dec
gs
dec
xchg
loopne
bound
add
and
cli
push
pextrw
push
cmp
repz
cld
fidivs
imul
insb
adc
xor
push
and
mov
xor
jecxz
flds
fistpll
push
test
inc
orl
out
fldenv
cwtl
fsin
repnz
shll
loopne
jecxz
mov
or
lret
loopne
insb
push
mov
les
xor
dec
mov
out
in
pop
shlb
out
scas
rorb
add
pop
inc
loop
push
mov
movsl
xchg
es
cltd
mov
outsb
cmp
inc
xor
int3
jle
cmp
aad
es
inc
xor
dec
cld
sbb
cmpsl
dec
js
push
outsb
lcall
lret
dec
jno
xchg
scas
in
adc
sbb
mov
inc
and
or
popl
push
or
push
fadds
cld
out
sub
dec
mov
cwtl
movb
imul
jmp
hlt
and
loope
mov
push
js
roll
cmp
jbe
daa
lock
mov
adc
push
push
loopne
push
mov
roll
xchg
in
add
outsl
arpl
sbb
popf
sarl
stos
fs
sub
jge
push
push
sub
xor
aad
pop
and
lcall
jle
xor
js
and
std
mov
and
jbe
cmc
or
enter
pop
cmpsl
fs
mov
dec
test
test
cltd
inc
pop
mov
mov
aam
pop
arpl
sbb
cld
sbb
lods
in
test
les
test
xchg
mov
jmp
popa
imul
inc
jg
pop
inc
es
ret
int
push
or
inc
dec
pop
negl
sub
popf
dec
add
jae
shlb
fcoms
add
imul
add
ficoms
jbe
cmp
and
fstpt
jbe
pop
lock
mov
pop
leave
lods
pop
push
scas
adc
push
pushf
outsl
pop
sub
xor
xchg
sub
jbe
dec
pusha
cmp
pop
inc
rcll
mov
pop
mov
add
fstp
cmp
je
aad
pop
and
mov
lret
cmp
or
push
add
jge
cltd
dec
pusha
xchg
inc
pop
add
add
inc
movsl
and
jo
mov
frstor
xchg
xor
stos
jp
in
enter
test
repz
test
add
outsl
fldcw
push
jg
jns
mov
mov
movsb
fidivrs
js
mov
add
loop
push
xor
fdiv
lahf
je
cltd
fldl
or
mov
mov
mov
add
addb
out
lahf
aad
mov
mov
mov
xor
fcomi
hlt
jnp
fcomp
test
movl
sbb
mov
pop
call
push
sub
sub
mov
inc
xor
xchg
icebp
push
hlt
out
repnz
movsl
mov
xchg
sub
jl
in
mov
or
ss
scas
lea
push
adc
clc
fsub
push
sbb
insl
and
nop
sub
adc
lret
repz
dec
lcall
mov
jno
jns
inc
ud2
jmp
lods
call
aam
aad
out
test
or
adc
out
shrl
repnz
sahf
or
das
dec
fcompl
mov
cmc
xor
mov
mov
leave
xor
cmpsb
enter
jmp
test
xor
sub
sub
jp
cmc
mov
clc
and
push
mov
and
aad
aas
test
lahf
inc
inc
sub
movsb
test
push
fnsave
popa
add
sbb
cmp
in
and
imul
test
repz
xchg
fnstcw
in
loope
mov
xor
cmpl
xor
outsl
add
fcoms
jbe
cmp
push
sbb
jl
lcall
dec
sub
xchg
pop
mov
cmp
shl
fsubrs
ret
push
inc
sbb
popa
xor
inc
mov
push
add
cmpsb
ljmp
jo
repz
ss
fnstcw
pop
mov
mov
pop
or
and
or
pop
sub
test
into
add
insb
sub
mov
push
or
sbb
dec
lahf
xchg
push
adc
jnp
test
out
test
add
xor
test
pop
out
andb
xor
pushf
mov
inc
sbb
jecxz
adc
lahf
adc
cwtl
movsl
les
or
fimull
std
test
push
mov
and
aaa
cli
mov
pop
pop
sahf
sti
xor
pop
ret
cs
test
or
std
fadd
movl
dec
gs
stos
loope
test
push
xchg
inc
dec
sbb
sbb
nop
pop
es
aad
jmp
jmp
inc
push
mov
sahf
xchg
jo
xchg
mov
cmpl
mov
push
dec
pop
push
shl
insb
rorb
mov
call
fidivrs
bound
inc
xor
sub
enter
or
pop
inc
mov
shrl
lahf
shr
repz
cs
dec
icebp
lds
je
out
mov
mov
cs
xchg
ret
mov
mov
dec
push
xlat
dec
jmp
or
lret
into
jmp
sarl
and
ja
insl
sbb
jmp
sbb
push
loopne
jnp
cmp
mov
and
repz
jno
mov
mov
push
loope
jnp
and
xchg
gs
loope
mov
gs
icebp
cmp
daa
fidivrl
inc
js
shlb
pushf
and
popa
fst
arpl
lea
stos
insl
xor
xor
data16
cltd
in
inc
lods
adc
mov
dec
call
fdivs
leave
rorb
fsub
gs
ret
xor
into
aad
divl
pop
addr16
in
iret
test
imul
stos
ss
add
push
aaa
pop
std
nop
pop
enter
cltd
inc
push
pop
and
gs
stos
add
aaa
adc
scas
dec
lahf
rcrb
movsl
mov
push
aaa
cmp
sub
push
notb
fdivs
aaa
iret
and
jae
cwtl
mov
and
frndint
fdivrl
inc
pushf
out
push
loope
mov
and
pop
sarl
push
in
push
cli
xor
dec
int3
or
jle
addr16
jo
sub
mov
rorl
mov
add
jne
xchg
dec
push
call
xchg
sti
neg
call
xchg
fiadds
hlt
cld
enter
fistpll
jle
sti
sub
sub
push
push
cmpsb
sbb
jge
jl
mov
add
mov
push
shll
xchg
hlt
mov
loop
in
arpl
stos
mov
jb
testb
out
or
repnz
pop
scas
sarl
movsb
xlat
inc
repnz
mov
and
sti
cwtl
push
test
mov
ss
lods
xlat
xor
mov
or
rcrl
and
mov
pop
test
ds
iret
mov
xor
repz
shlb
es
dec
xor
repz
shl
mov
add
cli
push
xor
ret
popa
inc
fidivl
mov
pop
fisttpll
dec
and
scas
mov
mov
insb
jbe
adc
int3
inc
enter
adc
pop
mov
pusha
popa
lods
add
ss
mov
test
repz
xor
xlat
push
inc
mov
mov
sbb
into
adc
in
xchg
movsl
movsl
add
mov
xor
jbe
icebp
jg
or
dec
loopne
push
movsb
push
dec
adc
ja
or
in
pop
xlat
inc
add
call
add
in
push
pop
bound
test
push
call
mov
scas
push
cmp
mov
clc
lds
ja
inc
ret
pop
pop
into
nop
dec
push
xchg
cmp
xlat
sbb
lock
pop
jle
aam
movsl
je
jb
cmp
outsl
arpl
jae
jg
sub
sbb
push
jmp
int3
mov
mov
idivb
cmp
push
outsl
xlat
xlat
lret
movsl
test
jmp
loop
fs
sbb
cs
mov
aad
fidivs
shlb
jge
mov
out
pop
pop
push
adc
int3
xchg
stos
loop
fstps
push
mov
cmp
xchg
std
sub
mov
ud0
push
scas
dec
pop
aaa
xchg
pushf
fisttpll
push
xlat
mov
scas
enter
add
adc
and
test
xchg
enter
jnp
jnp
into
sti
push
fisttps
xchg
stos
dec
add
adc
cld
jg
lods
mov
sub
xlat
shll
cli
pop
cltd
out
push
mov
adc
mov
mov
popa
mov
aaa
sub
pop
lds
dec
idivb
mov
fs
xchg
test
out
shr
xchg
jnp
pop
jg
das
sub
mov
pop
mov
jmp
repz
jae
lahf
out
jo
mov
pop
jns
fisubrl
xchg
daa
mov
data16
mov
aas
nop
pop
or
sub
addb
add
xchg
pop
popf
scas
nop
daa
mov
in
fisttps
mov
sti
mov
mov
sbb
push
fwait
nop
cltd
mov
je
sbb
lock
add
add
das
jge
add
imul
inc
dec
call
loop
out
cmpsl
les
shlb
ds
fnstenv
scas
movb
or
rclb
in
pop
xor
out
test
jmp
ret
jb
loope
fs
mov
andb
lods
arpl
daa
aaa
inc
repnz
jge
adc
std
xor
push
mov
out
cmp
rcrb
mov
add
js
add
mov
lea
fistps
adc
insb
mov
imul
sbb
fcmovne
data16
dec
bound
lret
and
sbb
repz
jno
cmpsl
jge
and
mov
lcall
ror
mov
out
clc
arpl
add
data16
cmp
mov
pop
sbb
cmp
ret
xlat
inc
aas
scas
mov
out
xchg
add
out
pop
aad
jl
jnp
cli
cmp
nop
call
cmc
hlt
out
dec
aaa
push
inc
xchg
sbb
mov
mov
and
cmp
xchg
sub
push
jecxz
or
sbb
pop
dec
add
test
dec
inc
cwtl
push
sub
cmp
push
pop
stc
mov
xchg
cmpsl
cld
sbb
cmc
push
add
push
add
push
sub
cld
cmp
inc
mov
jb
ljmp
pop
testb
pop
inc
or
jo
dec
mov
negb
int3
cmp
js
fnstsw
ret
pop
xchg
ja
lods
push
scas
outsb
jecxz
lods
mov
sbb
jle
pop
or
lods
jno
ret
inc
xchg
xor
cmpsb
pop
jmp
out
pop
test
push
loop
iret
push
adc
leave
cwtl
push
mov
and
lret
mov
xchg
xor
dec
sbb
jmp
hlt
jle
pop
out
inc
sbb
cmpsl
xor
inc
mov
cli
lock
clc
arpl
int
jb
jmp
xchg
and
mov
outsb
lahf
int
sbb
dec
outsb
ret
movsb
cltd
push
mov
pop
mov
inc
jbe
push
xor
xchg
push
ss
mov
cmpb
neg
das
andl
mov
mov
xchg
stc
negl
test
sbb
inc
test
daa
xchg
jp
nop
out
aas
mov
adc
push
cltd
movsb
out
rcll
call
lods
stc
sbb
test
shll
mov
hlt
xor
pop
test
icebp
movsl
sub
pop
jb
mov
test
clc
xchg
add
cmpb
inc
push
in
imul
mov
inc
mov
lock
js
gs
sbb
daa
vmread
rorb
adc
add
lea
ret
mov
call
pop
or
adc
adc
dec
pop
push
push
faddl
push
cltd
addr16
icebp
scas
ficomps
dec
or
xor
test
imul
jmp
or
pop
je
stos
adc
ljmp
cmpsl
das
inc
xor
push
push
repnz
xchg
ret
insb
ds
mov
lea
sahf
pop
add
fistps
popa
sbb
jbe
xchg
popf
pushf
mov
fst
and
scas
jnp
stc
jg
aam
dec
push
mov
pop
xor
js
aam
dec
cld
push
push
cmpsb
xor
in
xchg
mov
sbb
pop
pushf
mov
imul
cld
outsb
loopne
es
mov
fnsave
mov
cmp
sbb
stos
in
push
sub
add
add
xchg
call
fistpll
or
cvtdq2ps
cld
mov
xor
dec
jecxz
lahf
stos
pop
pop
inc
in
inc
cmp
push
mov
xor
shr
sti
xchg
pop
cmpl
out
lret
cmc
mov
int3
jp
or
and
popa
dec
insl
or
inc
into
pop
mov
push
bound
out
ret
imul
addl
stos
mov
mov
out
int3
mov
into
ljmp
inc
movb
into
cltd
cli
imul
mov
push
and
sub
adc
orl
or
push
pop
pop
ret
pop
cmpsl
neg
sub
dec
movsb
pop
rep
inc
xchg
mov
cmp
jmp
outsb
xchg
inc
daa
sub
movsb
mov
cmp
inc
cwtl
mov
mov
push
and
sti
imul
pop
loope
add
inc
outsb
enter
cld
mov
lods
inc
int3
lahf
xchg
mov
aaa
cmp
add
dec
repnz
gs
insb
adc
push
lds
js
ja
push
loopne
inc
leave
shll
cmp
sahf
push
jg
lock
adc
pop
cwtl
loop
jmpw
mov
out
mov
jo
or
push
bound
ljmp
aaa
mov
es
pop
lret
adc
and
cmp
jb
sub
test
jae
insb
loop
sbb
pop
push
imul
push
data16
imulb
fsubrs
pop
call
xor
popa
pop
lods
stc
movsb
loopne
cmpsl
sub
jno
jno
dec
xchg
cmp
add
popf
sbb
insl
add
xor
mov
or
out
fadds
ljmp
mov
ja
pop
sbb
clc
ret
std
push
push
insl
dec
addl
stos
outsl
mov
imul
aas
mov
aam
dec
cld
daa
cmpsl
mov
mov
out
in
add
adc
mov
repnz
lods
mov
pop
or
insl
push
cmc
rclb
mov
aam
pusha
rorb
jne
push
inc
fs
popa
js
and
loopne
pop
and
test
or
xor
enter
mov
sbb
jmp
xlat
inc
loope
jmp
adc
xchg
jg
cmp
jp
jne
mov
sbb
rcr
std
mov
call
push
jle
popf
mov
cwtd
xor
lcall
sbb
push
inc
lea
je
xchg
pop
xchg
xor
xlat
mov
lret
xchg
ffree
enter
test
mov
and
adc
lcall
dec
inc
xor
push
sub
stos
mov
cmp
jae
jmp
out
test
mov
sub
jp
and
sub
mov
mov
ss
cs
scas
or
ja
xor
lods
loop
jge
pop
pop
xchg
stos
and
push
rol
popf
or
loope
jp
daa
pop
mov
pop
mov
sbb
sbb
xor
sub
jg
cwtl
daa
clc
outsl
in
xor
or
adc
mov
les
fs
arpl
mul
and
push
enter
outsl
sub
cmp
cmp
sub
insl
push
jecxz
lds
and
xchg
mov
pop
jb
or
xlat
sbb
gs
inc
push
pop
pop
mov
inc
mov
test
mov
adc
mov
push
pop
popf
gs
push
mov
adc
jne
pop
mov
mov
or
lods
outsl
sub
adc
andl
pop
in
pop
pop
das
fcoms
std
sbb
pushf
or
xchg
andb
fldenv
in
inc
xor
lret
pop
js
dec
in
jns
xor
mov
lret
loop
xchg
mov
repnz
mov
notrack
add
xor
pop
lock
jl
adc
out
imul
test
xchg
imulb
xor
add
les
pop
cmpb
xor
into
clc
call
iret
mov
outsb
lods
sub
xchg
nop
fistps
in
movsb
sbb
inc
xor
mov
in
stos
call
xchg
out
bound
mov
and
cmpsb
sbb
and
scas
and
pop
shl
lret
pushf
ja
jno
outsb
imull
jae
push
pop
jmp
test
sub
mov
or
and
imul
push
les
ret
daa
arpl
adc
int3
sbb
xchg
mov
movsl
loop
rorb
pusha
push
jge
mov
add
mov
or
add
sbb
mov
loope
push
ljmp
add
pop
mov
inc
inc
xchg
jo
addr16
xlat
hlt
or
inc
fcomp
bound
ret
inc
mov
inc
xchg
call
pop
cld
lcall
idivl
sahf
inc
aam
sbb
inc
movsb
loopne
sbb
and
pop
xchg
dec
dec
lahf
lds
mov
out
xor
jp
push
add
adc
ljmp
inc
xlat
ja
xlat
dec
mov
or
das
xlat
cld
int
imull
lea
and
movsl
sahf
and
adc
lods
testl
xor
sbb
dec
jo
mov
cwtl
das
add
mov
icebp
test
stc
or
dec
arpl
mov
lret
outsb
fwait
pop
and
test
adc
jmp
inc
or
jb
add
cwtl
jne
adc
inc
mov
cmpsl
movsl
xchg
add
in
imul
movsb
aaa
jg
cli
sub
mov
ror
or
out
cltd
ja
xchg
mov
inc
xchg
cmp
lods
pop
jnp
mov
push
xchg
shlb
dec
mov
and
loope
test
xor
outsb
jecxz
pop
mov
inc
out
icebp
and
loop
or
fdivrl
adc
pop
xchg
jp
xchg
mov
test
outsb
mov
xlat
iret
cmpsb
loop
mov
xlat
or
aad
imul
arpl
jb
iret
adc
js
fdivs
iret
sbb
int3
andb
lods
out
test
inc
ret
jmp
fildll
jmp
cld
and
add
mov
sbb
lea
int
xor
es
arpl
xchg
decl
push
sub
out
push
popf
or
lahf
and
dec
mov
ret
push
mov
mov
or
jge
and
inc
or
in
mov
or
xchg
jle
cmp
dec
push
std
cmpsl
cmp
rolb
add
lock
sub
sub
inc
sbb
add
mov
leave
dec
call
daa
gs
adc
scas
icebp
add
jno
shlb
fiaddl
test
sub
ret
inc
jge
cmp
dec
movb
xchg
jmp
xor
push
cli
orb
aam
leave
aas
adc
xlat
xchg
es
and
ficoml
test
or
inc
ja
jae
cmp
pushl
cmp
into
into
lods
pusha
int
cltd
outsl
dec
jl
notb
into
xchg
jg
push
push
in
loop
lods
push
jns
pop
sub
lods
mov
adc
or
mov
lods
fnstenv
hlt
jg
push
jnp
mov
in
hlt
dec
test
call
adc
mov
aam
xor
and
fs
stc
les
insb
adc
push
xlat
sbb
inc
mov
adc
pop
pop
mov
popa
dec
push
add
outsl
lock
jmp
das
push
push
lea
std
addb
mov
push
loopne
mov
cmpsb
adc
cmp
test
repz
test
aad
inc
mov
sub
add
jno
insl
pusha
cmpl
bound
jecxz,pt
pop
push
lret
shlb
out
out
lock
ret
sbb
rcrb
inc
jb
mov
movsb
xchg
jns
arpl
sarb
xor
mov
mov
inc
in
fidivrs
jmp
addr16
push
and
mov
sbbl
adc
leave
or
jbe
decb
jno
dec
je
pop
inc
xchg
and
dec
jno
adc
loopne
xor
push
loopne
loop
push
ja
shlb
enter
dec
sbb
mov
movsb
pop
fdiv
mov
jecxz
xchg
mov
jnp
addl
gs
add
rorb
dec
sti
stc
mov
inc
sti
in
cmp
adc
cmp
lods
mov
leave
cmpsb
pop
xor
dec
add
xchg
out
in
jl
dec
fisttps
xchg
cmp
push
push
push
jne
dec
inc
rcrb
add
sub
pop
cwtl
pop
test
iret
xchg
cs
repz
mov
pop
mov
sahf
jb
out
sub
repnz
pop
cmc
mov
sub
jno
inc
je
mov
mov
stc
fcmovb
loop
movb
imul
shll
fists
jae
and
mov
subl
lock
xor
das
lcall
fisttps
inc
arpl
and
mov
push
rolb
enter
shlb
lahf
xchg
mov
xchg
fcmovne
lahf
cmp
xor
cs
mov
or
add
xchg
jns
adc
cwtl
mov
sbb
mov
dec
xchg
lods
dec
mov
insb
movsl
popf
gs
jp
cwtl
push
cmp
inc
inc
fistps
jae
icebp
iret
test
xchg
das
and
cltd
push
scas
leave
sub
pop
ljmp
stos
cld
fldcw
pushl
dec
mov
lcall
cmp
or
inc
and
cmpsb
mov
push
inc
lods
lahf
inc
add
jbe
adc
test
ret
inc
insb
push
insb
mov
gs
and
outsb
out
hlt
testl
cmp
pop
fcmovnbe
xor
gs
sbb
in
add
dec
scas
xor
pop
repz
jg
pop
ljmp
leave
fwait
sarl
ret
jb
cwtl
outsl
cmp
jo
imull
jne
in
mov
in
mov
add
adc
scas
add
push
imull
xlat
or
gs
popa
jb
ret
dec
fwait
sbb
pop
sbb
stos
fucomip
lock
push
mov
cmp
xchg
in
mov
xor
lock
or
scas
or
or
mov
dec
movsb
cmp
pop
xlat
xor
add
cmp
movsb
cmp
push
stos
inc
xchg
pop
or
adc
popf
xchg
ljmp
pop
adc
jae
mov
inc
push
mov
cmp
and
sub
cmp
loope
dec
sbb
notl
pop
and
mov
jge
mov
icebp
aad
daa
aad
std
mov
fmulp
push
adc
or
imul
xchg
int3
sbb
inc
xchg
enter
dec
mov
jle
aam
mov
cmc
gs
cmp
jae
lds
pop
cli
dec
jo
jnp
fiaddl
lret
inc
pop
cmc
pushf
cmpsl
pop
inc
fwait
inc
mov
xlat
roll
das
adc
inc
push
mov
sub
jmp
adc
push
imul
negl
xchg
xchg
int3
movsl
mov
int3
sbb
push
aas
mov
xor
negl
sbbb
ja,pn
dec
std
fcmovne
cmpb
pop
in
pop
in
adc
outsl
jno
je
pop
std
sti
or
orb
xchg
jg
out
movsb
test
lahf
cmp
lock
lcall
mov
int
es
cmc
sbb
roll
pop
loop
xchg
push
pop
and
cmp
aad
into
and
xchg
mov
ds
xchg
outsb
test
add
pop
sub
divl
adc
ss
inc
mov
pushf
shrb
mov
xlat
clc
mov
jno
fwait
xor
sbb
xlat
adc
sbb
push
popa
mov
push
dec
outsl
cmp
lock
loopne
call
mov
adc
loop
popa
pop
cmp
sbb
dec
out
fcoms
aam
mov
inc
dec
dec
adc
and
sub
out
incb
xchg
jnp
out
rorl
sbb
xor
movl
dec
sbb
dec
jb
sarb
clc
xchg
pop
movsl
jbe
xor
adc
clc
xchg
sub
stos
push
insl
daa
pop
cmove
pushf
xchg
je
cltd
mov
aam
mov
mov
add
nop
xchg
cmpsb
sub
jnp
jbe
mov
out
pop
test
xchg
aas
addr16
iret
shll
loopne
adc
sub
loopne
insl
xchg
lcall
hlt
cltd
out
ljmp
add
pop
jb
sbb
mov
xchg
pusha
icebp
mov
pop
mov
cs
sbb
cmp
ret
int3
xchg
repz
mov
add
jl
or
jnp
bound
daa
push
mov
ss
in
aam
lds
movl
cmp
imul
sub
push
popa
or
xchg
aad
pop
ret
out
sbb
pop
adc
mov
dec
out
in
sbb
pop
popf
aaa
xchg
cli
ds
jb
subb
cli
enter
scas
dec
mov
test
in
hlt
pop
pop
inc
lods
xor
dec
cmp
test
mov
dec
mov
fadds
dec
gs
cmpsl
lahf
shl
jbe
mov
adcb
into
mov
add
lret
adc
dec
add
sub
adc
jg
test
dec
add
and
mov
dec
insb
inc
lds
rcll
test
pop
ja
inc
lods
out
loope
mov
into
inc
aam
or
xor
repz
addr16
outsb
or
jmp
mov
fmuls
and
xor
mov
or
gs
adc
lahf
jmp
loope
test
into
insl
lea
jbe
or
daa
out
bound
cmp
outsl
and
sub
decb
lret
adc
test
or
jo
inc
and
mov
xor
xor
stos
ror
fucomip
jl
mov
adc
xor
inc
add
sbb
out
out
dec
mov
fwait
lahf
outsb
sub
mov
inc
int
jl
push
enter
jge
or
sub
insl
cmp
and
jg
or
pushf
dec
dec
adc
inc
sbb
nop
repnz
cwtl
cmovle
loop
xor
fcmovbe
mov
cmpsl
cld
and
lods
add
push
dec
push
fs
jbe
insb
test
imul
xchg
andb
addr16
cmpl
incb
jl
or
imul
xchg
decl
xchg
cmp
mov
mov
imul
and
lea
je
add
xor
cmp
cs
sbb
cmpsl
mov
in
dec
mov
cmc
lds
ret
in
cmpsb
adc
inc
jno
popf
dec
add
mov
add
jns,pt
in
es
sub
jp
shr
fcom
xor
jno
jecxz
adc
daa
aad
pop
stos
inc
sbb
in
push
cltd
cmpsl
jno
or
add
mov
jg
dec
inc
mov
das
jb
aaa
pusha
xchg
int3
subl
pop
or
lret
mov
loop
xor
xor
fwait
shr
lahf
or
shlb
sub
mov
insb
jge
in
pusha
dec
sahf
inc
and
fwait
in
std
jnp
scas
sub
mov
xor
leave
data16
imull
inc
pop
cmp
mov
fwait
mov
mov
pop
je
icebp
push
cmp
in
loop
cltd
je,pt
les
ret
push
mov
imul
icebp
xor
or
jb
push
xchg
lcall
les
cmp
add
mov
pop
sbb
sbb
ficoms
push
jecxz
fisttpl
leave
adc
std
ljmp
pushf
pushf
out
mov
push
or
std
sub
push
mov
and
xchg
add
cwtl
cltd
mov
dec
mov
out
and
push
aam
ljmp
or
sub
mov
dec
ret
cwtl
mov
mov
insl
cld
xchg
or
inc
add
add
jmp
std
hlt
mov
push
mov
xor
push
orb
adc
push
xrelease
subps
pop
test
mull
xor
je
pop
lcall
push
jne
fistl
or
ss
lret
pop
xor
xor
dec
push
pop
or
das
daa
sbb
adc
mov
mov
lods
pop
cwtl
xchg
xor
jecxz
ds
cmpsl
xchg
rorb
clc
push
stos
bound
shll
mov
jmp
int
clc
pop
sub
xchg
out
push
mov
adc
sbb
pop
or
adc
or
icebp
cmp
in
inc
mov
pop
xlat
mov
bound
loop
adc
pusha
ljmp
cli
loop
popl
xchg
jp
lret
sub
scas
mov
je
mov
shr
mov
aaa
xchg
or
fs
imul
jle
jno
cmovp
push
bound
jmp
xchg
ja
sub
and
enter
add
addl
mov
cmp
mov
loop
dec
mov
fstpt
jbe
shl
pop
jl
sbb
xchg
pop
mov
inc
inc
rorl
aaa
mov
cmpb
and
fildll
enter
hlt
pusha
imul
cmpsb
sar
dec
inc
push
adc
jno
or
pop
ror
jbe
sti
mov
fisttpll
inc
xor
or
cltd
stos
and
pushf
xor
sahf
jmp
push
fistpll
es
test
push
test
and
les
lret
lret
aas
add
add
push
leave
loope,pt
cmc
adc
test
clc
out
and
add
pop
xchg
add
sbb
or
jg
sarl
pop
sbb
js
or
rep
jno
mov
cmpb
test
mov
scas
xor
pop
sbb
add
sbb
adcl
mov
push
push
jb
pop
and
xchg
lods
inc
xchg
cld
out
sti
jne
fisttpl
mov
test
insb
jne
andb
xor
jno
outsl
push
adc
xor
inc
dec
mov
daa
repnz
test
in
lock
stos
adc
pop
movsb
or
pop
dec
outsl
lea
xor
xchg
gs
sub
shlb
popa
inc
dec
stos
sarl
jnp
rorl
pop
cltd
sub
repz
fwait
xor
dec
test
in
sub
cmp
aaa
add
or
data16
scas
or
loop
jne
cmpl
loope
adc
pushf
sub
lcall
jp
mov
sub
jb
jmp
mov
aad
push
into
cs
inc
jl
mov
xchg
ds
jmp
adc
divb
insl
xchg
into
inc
into
out
mov
mov
cs
popf
mov
std
js
inc
add
push
sub
icebp
and
addr16
cli
push
inc
decb
adc
mov
mov
and
pop
pushl
shlb
sahf
add
imulb
lcall
sbb
adc
arpl
ret
in
pusha
lret
mov
ss
xchg
daa
pop
fsubrs
or
cmp
push
xchg
or
test
dec
aam
sbb
in
leave
shrl
ret
loop
or
outsb
sub
dec
mov
mov
les
fwait
mov
leave
stos
out
out
push
cmp
adc
aas
ja
imul
inc
cwtl
aam
repnz
and
out
test
inc
add
mov
cli
iret
movsb
sbb
xchg
and
test
sub
pop
leave
xchg
loopne
push
insl
ds
addr16
ret
insl
orb
fldenv
xor
aaa
dec
sahf
pop
sbb
push
add
jbe
testl
jg
inc
sarl
lods
iret
fcos
movsb
xor
pop
jmp
orb
sub
cmp
inc
int3
pop
cmp
out
incb
xchg
add
add
test
cli
adc
add
lods
inc
negb
pop
insb
inc
push
andl
xor
xchg
mov
inc
insb
rclb
es
mov
cmp
mov
sbb
or
push
les
xchg
cmp
cmove
testb
dec
and
nop
or
aaa
sub
movsl
stos
adcl
mov
icebp
sbb
xchg
and
pop
mov
shll
adc
movsl
cli
test
cmc
es
fcmovnb
mov
xchg
adc
dec
or
add
das
mov
jl
fwait
cmp
and
mov
xchg
mov
push
mov
aaa
aad
out
jecxz
sub
and
mov
in
pop
repz
mov
int
negb
cmp
jae
sub
push
adc
mov
ret
or
push
xchg
pop
mov
bound
lret
push
idiv
mov
test
scas
int
arpl
xchg
xchg
scas
xchg
pushf
and
pop
mov
and
lock
xlat
pshufw
ja
inc
lock
mov
pop
lods
cmp
xchg
loope
push
int
loopne
stc
ficomps
cmc
push
jp
xchg
xor
lds
cmp
adc
lods
jns
addb
in
xorl
cmpsb
pusha
outsl
cmp
out
or
repnz
sbb
mov
push
dec
int
xchg
shl
aaa
leave
jns
adc
mov
ljmp
dec
push
pusha
stos
je
fbstp
push
cmp
mov
es
sahf
add
leave
xor
insl
out
cmc
decl
xlat
cli
add
or
lea
sbb
in
and
inc
xchg
test
xor
les
pop
aad
and
mov
mov
sbb
jecxz
sbbb
dec
push
aam
xchg
shl
test
inc
push
sbb
jg
js
into
mov
mov
sub
cmpsb
stc
xchg
lock
pop
sub
jl
pop
inc
mov
jmp
mov
jb
jns
setnp
push
inc
dec
xchg
sbb
call
add
add
jecxz
xchg
add
call
cmp
dec
sbb
cmc
in
mov
mov
and
lock
or
repnz
lret
mov
into
add
ds
mov
test
repz
sub
mov
inc
mov
bound
mov
aam
pop
jns
out
pushf
mov
gs
adc
pop
cmpsl
out
pusha
rcll
pop
lret
cmp
adc
xchg
mov
cmpsl
jecxz
sbb
xchg
sbb
enter
or
mov
int3
or
out
mov
and
mov
stc
rolb
cltd
ljmp
sub
cltd
stos
pop
fs
add
push
loope
outsl
pop
addb
arpl
rcll
pop
fldt
rcrb
out
and
fldcw
mov
fistpl
pop
int3
sub
push
pop
pop
daa
enter
mov
outsl
lret
sub
xor
sti
insl
hlt
rclb
je
mov
fisttpll
fildll
sbbb
inc
mov
lcall
push
adc
popa
iret
jge
repz
out
inc
jns
imul
lds
pop
jg
mov
int3
fstps
pop
sbb
sub
jnp
setno
addr16
sti
mov
or
icebp
mov
fidivl
mov
lods
sub
repnz
lahf
pop
je
testb
adc
and
clc
mov
bound
jle
test
decb
in
dec
mov
lret
sub
sahf
out
and
jns
divb
fsub
push
sbb
icebp
adc
mov
inc
aaa
pop
xchg
cmp
ret
push
pop
push
jno
fstpt
stos
add
cmp
int3
in
push
test
cs
sbb
rep
ljmp
cmp
adc
pop
movb
pop
or
dec
ss
xchg
call
xchg
fdivr
sub
dec
xor
insl
or
les
inc
inc
mov
mov
dec
gs
mov
gs
ror
xor
cmp
out
in
out
cltd
mov
pop
adc
pop
ja
flds
pop
push
sub
mov
cmp
mov
jnp
lret
fdivl
in
mov
or
jbe
cmp
dec
adc
loopne
push
xor
sbb
push
xchg
nop
jge
call
dec
sub
hlt
shl
mov
lahf
or
jl
std
inc
cmp
or
lcall
dec
pop
adc
xorl
xor
push
push
or
mov
lea
and
adcb
add
cli
cmpsb
push
std
mov
filds
arpl
pop
and
xchg
std
or
mov
int
adc
cmpsb
in
pop
mov
mov
cs
ljmp
inc
scas
notl
xchg
xchg
fdiv
fldl
lret
scas
jno
xorb
and
xchg
pop
test
loopne
adc
and
cmpsb
push
mov
sti
dec
cmpsl
test
inc
outsl
mov
aas
cmp
jnp
cli
inc
rorl
mov
das
push
xor
push
push
aas
jmp
and
lret
and
roll
cmp
cmp
jne
shll
xchg
pop
add
or
push
adc
aam
les
and
push
jmp
std
jmp
pop
jp
push
adc
imul
cli
aas
mov
jo
sub
enter
fisubrs
stos
test
jp
cwtl
push
mov
ja
sbb
dec
mov
xorb
int
cmp
sub
mov
decb
stos
inc
enter
push
loopne
shl
mov
sbb
push
sbb
lret
adc
mov
sbb
adc
loop
jg
add
addl
fcmovbe
clc
lea
xor
pop
and
stos
ss
ret
out
fisubrl
sub
add
pop
adc
push
sbb
lahf
andb
bound
stos
lahf
and
iret
negl
and
test
andl
jl
test
or
fs
push
ja
fildll
add
outsb
shll
inc
lcall
adc
out
xor
xlat
clc
inc
outsb
outsl
mov
aad
iret
sub
out
adc
outsl
jle
sbb
push
and
push
lret
inc
shlb
cmp
fistpl
pop
roll
mov
adc
mov
mov
mov
enter
pusha
jl
jge
frstor
lods
mov
or
mov
mov
pop
stos
add
in
add
xchg
cmc
mov
stos
add
aaa
loope
leave
jmp
shlb
inc
xchg
push
fiaddl
push
aam
xor
out
pop
jo
stc
das
push
mov
sub
xlat
and
mov
cmp
flds
in
pop
cmp
inc
mov
cli
xchg
push
pop
xor
lods
mov
leave
jns
enter
pop
sbbb
sbb
push
mov
xchg
mov
mov
mov
pop
mov
inc
scas
jmp
mov
rcll
js
hlt
test
push
jnp
loopne
fsubr
jmp
mov
sti
call
insb
inc
sbb
dec
inc
ret
adc
mov
jge
mov
sub
xor
sub
jmp
push
xorb
dec
mov
stc
lcall
mov
xchg
mov
out
rclb
cs
mov
decl
stos
xchg
scas
mov
mov
mov
push
and
push
add
xor
imul
mov
lods
push
aas
sub
mov
push
ficoms
push
jno
cmp
loop
andb
sbb
and
hlt
or
push
add
mov
mov
lods
movsl
jg
add
add
dec
dec
mov
mov
xchg
fcomps
test
test
cld
mov
and
movsb
xlat
test
xchg
or
cmpsl
push
adc
leave
and
aaa
insb
or
sub
or
sub
sbb
ret
lahf
stc
add
les
xchg
outsl
jmp
push
sbb
or
rcl
mov
repnz
outsl
push
push
fisubrs
mov
ljmp
pop
jmp
xchg
out
dec
adc
mov
mov
sbb
test
std
in
loop
hlt
movzwl
mov
jl
fldt
push
cmpsb
aaa
xchg
cmc
faddl
movsb
jns
lea
dec
std
or
bound
pop
xor
js
pop
push
scas
fistps
insb
aad
adc
jnp,pn
mov
xlat
or
movsl
xor
jns
add
or
out
mov
lods
push
xchg
inc
push
insb
or
push
cmpsl
sbbl
in
insl
loopne
xor
popf
sub
mov
stos
dec
xchg
xlat
in
outsb
into
push
int3
stc
xchg
push
add
jge
add
xchg
loopne
push
out
adc
push
ficompl
and
hlt
repnz
dec
lods
rcl
dec
movsb
sub
test
lock
pop
into
push
mov
jg
push
fmulp
popf
in
bound
push
ja
or
addl
add
orb
mov
das
movsl
push
lcall
xlat
pop
clc
push
test
in
loopne
test
pop
popw
aam
test
or
adcl
loop
or
lahf
rolb
shll
repnz
adc
data16
fildl
scas
add
lcall
adc
adc
repnz
mov
in
out
jne
cmp
rorb
push
mov
push
int3
icebp
pusha
aam
sbb
adc
dec
cmpl
or
nop
dec
out
in
jnp
out
xor
push
fildl
test
popf
jne
push
lahf
ret
rcrl
add
subl
push
test
mov
adc
or
or
scas
js
and
mov
dec
xor
mov
push
dec
fs
je
lahf
testb
into
pop
lea
into
out
dec
mov
jmp
movl
fwait
bound
ljmp
dec
call
and
rcr
and
pusha
mov
leave
jmp
ret
iret
jo
aam
adc
lock
and
decb
cmpsl
xor
inc
xchg
inc
stos
icebp
xchg
fiadds
cld
push
fdivrl
js
push
mov
and
mov
pushf
outsl
add
mov
dec
pushf
push
pop
test
mov
sbb
movsl
push
xor
mov
imull
lcall
xchg
and
mov
pcmpeqw
inc
sahf
test
pop
daa
sbb
in
xor
bswap
pusha
jmp
ss
aas
insl
lods
out
mov
mov
sub
xlat
adc
aaa
jb
pusha
jg
cmc
mov
cmp
mov
pop
add
sub
adc
imul
jns
inc
cmpsb
pop
fistpl
sbb
in
mov
adc
test
jne
insl
fst
aad
push
ret
adc
inc
sub
mov
jg
sbb
mov
xor
repz
ds
movsb
inc
lcall
fisttps
inc
sahf
shrl
sbb
icebp
mov
ret
fildll
jl
clc
jmp
or
sbb
fldcw
ja
add
lods
xchg
mov
aaa
test
xor
xor
mov
loope
outsl
enter
push
fistpl
xchg
sbb
xchg
inc
mov
pop
or
adc
test
scas
jae
call
cmp
or
mov
and
pop
neg
xchg
in
adc
adc
clc
lock
cmp
push
fbld
xor
enter
push
test
adc
mov
imul
iret
out
int
repnz
and
inc
jmp
enter
jbe
dec
sti
pop
mov
sbb
xchg
cli
mov
or
je
insb
cmp
and
sbb
mov
sahf
out
sub
push
xor
adc
jmp
push
adc
pop
std
cmpsb
in
gs
and
jmp
fcompl
inc
cmc
adc
dec
lea
mov
jns
sbb
jns
lahf
imul
xor
xor
cmp
and
add
sbb
sub
rcr
mov
int
and
sub
push
push
popa
jp
mov
and
xchg
sbb
mov
jno
test
dec
push
jmp
clc
inc
cli
mov
rorb
stos
sbb
les
dec
popa
pop
mov
hlt
packssdw
pushf
adc
push
jge
scas
outsb
hlt
cvttps2pi
xchg
xchg
xchg
xor
cmp
mov
sub
cmp
push
inc
in
xlat
cmp
add
loopne
cmpb
cld
data16
adc
or
jne
nop
outsb
dec
lods
sub
jne
filds
and
gs
cmp
pusha
add
xchg
jne
push
into
in
nop
popf
aas
add
and
mov
cmp
mov
sbb
mov
in
sub
lahf
and
test
fsubs
jl
movsl
jnp
push
lea
shll
push
int
iret
sub
sub
sub
mov
fnsave
dec
mov
mov
lcall
shll
adc
mov
fstps
push
lods
dec
xchg
test
sub
mov
imul
sub
outsl
lds
xor
pop
rcl
movsl
push
imul
add
hlt
cmp
cmpsb
or
inc
lret
xor
bound
push
cld
xchg
into
mov
mov
push
inc
sbbb
rcrl
inc
mov
fwait
pop
cltd
or
gs
das
xchg
or
je
mov
je
out
test
xchg
or
push
push
pop
loope
xchg
or
pushf
loopne
aad
push
test
xor
sub
movsb
pop
fisubrl
dec
xchg
sti
xchg
inc
jae
mov
jnp
icebp
xor
pushf
fidivl
lods
dec
inc
xorb
cmp
pop
pop
dec
or
pop
imul
out
repz
loop
push
sti
fwait
pushl
jns
xor
add
add
lock
test
rcrb
xor
mov
jmp
jb
mov
cmpsb
push
loopne
lret
nop
xor
insb
mov
cmp
cmp
inc
shll
mov
loopne
cmp
mov
mov
adc
loopne
pushf
xchg
imul
inc
rorb
mov
iret
lret
pop
push
push
push
nop
push
cmp
lret
data16
jg
int
or
dec
dec
test
add
jp
cmpsb
cli
ret
and
xor
xor
lods
test
stos
cltd
shr
mov
adc
pop
jmp
in
jl
fcmove
jge
loope
jbe
stos
mov
scas
mov
imulb
andl
es
add
and
push
scas
test
or
push
xlat
fcmovnu
pushf
adc
xchg
shlb
or
or
xchg
mov
or
add
add
sets
and
dec
mov
scas
mov
out
cmp
rolb
pop
jb
xchg
stc
aas
sub
fnsetpm(287
mov
adc
dec
in
inc
cld
sahf
or
cmp
scas
filds
or
stos
sti
mov
sbb
out
or
hlt
jbe
push
js
sub
cmc
cmp
daa
rorb
xor
aaa
arpl
inc
mov
xchg
adc
out
fistpl
lods
fdivs
mov
gs
pop
movsl
mov
sbb
xlat
aaa
and
arpl
dec
test
imull
aas
loop
xor
push
jp
fiaddl
xchg
sti
jge
mov
jp
cltd
shr
dec
aaa
unpckhps
inc
pop
rorb
int
push
cmp
insb
sub
js
in
adc
popf
insl
ja
mov
lret
sub
rcr
mov
xrelease
mov
adc
fistpll
sbb
or
loop
adc
push
xor
dec
xor
xor
mov
shll
stc
cld
pop
call
popl
scas
xlat
add
or
enter
andl
or
xchg
mov
push
cmp
mov
std
ds
dec
testl
rorb
inc
xor
cs
inc
scas
sub
mov
loopne
aad
and
call
and
loopne
shrl
lret
dec
cltd
mov
sahf
cmp
les
jge
lret
les
xor
jg
mov
fsubrs
aam
and
jo
mov
push
aam
je
fisubrl
int
stc
fucomip
adc
lods
test
pusha
mulb
fbstp
push
dec
push
lret
lods
push
mov
mov
rolb
sub
fadds
jae
sbb
add
sbb
decb
pop
cmp
mov
xor
xlat
jnp
push
shll
incb
pop
push
add
sub
cld
and
xorl
push
push
mov
inc
pop
xchg
lods
sub
outsb
and
or
jge
xchg
fisubl
jno
fsts
iret
clc
push
scas
mov
iret
xchg
xchg
ja
push
jmp
push
dec
std
xor
adc
mov
and
cmp
imul
jo
xorl
ljmp
out
push
popa
adc
pop
inc
dec
shl
mov
leave
scas
iret
rclb
or
repnz
xchg
push
dec
loope
dec
andb
xor
ret
adc
fwait
adc
cmpsl
jl
sub
mov
icebp
pop
in
aaa
test
or
jb
jp
push
movsl
rcl
dec
jecxz
jne
cli
mov
push
aam
adc
pop
aad
pop
je
push
mov
mov
mov
mov
cwtl
ljmp
xchg
push
add
mov
cld
push
push
insl
bound
lea
mov
dec
addr16
pop
xchg
push
out
jo
ficompl
cmpsb
xchg
popa
inc
sub
enter
jmp
nop
in
jl
push
jns
sub
mov
popa
aam
out
je
test
test
lods
and
mov
iret
leave
mov
add
mov
aam
inc
pop
pushf
cwtl
sub
cmp
xor
or
xchg
mov
es
dec
dec
imul
loop
cmp
aam
cmp
ret
gs
jns
or
sahf
movsb
add
nop
xor
jns
fldcw
and
mov
scas
inc
dec
popa
pop
jnp
aaa
stos
insl
add
fnsave
leave
test
rcl
inc
out
push
add
mov
jnp
dec
jl
push
mov
mov
js
test
pop
icebp
out
mov
lret
dec
lea
sub
sbbb
xchg
lahf
dec
bound
jp
shlb
or
shlb
xor
cmp
inc
mov
push
out
jecxz
jae
movsb
rcrb
int3
scas
mov
aad
adc
xchg
sbb
fiadds
cmp
stc
or
xchg
rcrl
cmp
loop
fsubl
and
jns
lods
sbb
dec
inc
or
movsb
or
pusha
dec
adc
cmp
pop
ja
out
das
clc
jo
hlt
jg
sub
and
sti
xchg
mov
and
in
ret
xor
and
dec
jb
xchg
loop
test
repz
ja
xchg
jbe
js
fsub
ss
outsl
dec
rorb
ljmp
nop
add
inc
jns
and
xorb
adc
aam
movsb
rcr
test
jo
inc
ss
shrb
sub
out
out
notl
push
push
out
repz
fcmove
ret
mov
or
push
lods
pop
in
hlt
hlt
repz
mov
mov
fwait
nop
pop
pushw
mov
popa
enter
cmp
inc
jb
and
pop
mov
mov
xchg
jno
orl
inc
cmpsb
jp
add
daa
dec
mov
rcrb
addr16
out
xchg
mov
fs
jo
dec
insl
movsl
jmp
adc
mov
enter
paddsb
in
dec
lret
fstps
mov
insl
xor
adc
shl
leave
aas
inc
sbb
adc
out
pop
movsl
xchg
unpcklps
scas
in
cld
cli
pop
dec
xchg
sar
jp
xor
sahf
repnz
jne
es
sub
fcompl
ja
xchg
pop
mov
addr16
ja
pop
mov
push
pusha
pop
popa
or
into
sbb
cld
or
and
shll
loope
in
stos
push
rcll
push
mov
mov
idivb
in
sub
enter
sbb
subl
outsl
mov
and
xor
sub
sbb
add
pop
mov
insb
repz
mov
ret
dec
mov
cli
lcall
dec
fdivrl
sbb
adc
loopne
into
mov
xchg
sbb
test
roll
dec
jmp
sub
push
mov
leave
mov
cmp
jg
inc
mov
or
pushf
mov
push
es
mov
pusha
ljmpw
mov
mov
cli
rcl
jno
xor
data16
jae
pop
imul
mov
jnp
ret
and
pop
insl
xchg
imul
inc
xchg
mov
cmp
dec
sbb
pop
sti
cmp
dec
lea
cltd
movsb
das
sahf
inc
sbb
int3
sti
or
sbb
movsl
mov
stc
push
mov
imul
jle
icebp
fimuls
test
loopne
cli
jne
popa
pop
jno
mov
sub
cmc
sti
lret
sbb
mov
push
sbb
test
loope
int
ret
mov
or
in
cmp
dec
mov
jmp
xor
pop
xor
in
push
sbb
inc
inc
sub
shlb
shr
mov
adc
mov
rolb
popa
ficoms
push
mov
mov
pop
fstpl
sub
loope
push
out
add
mov
mov
fs
cmp
pop
adc
xchg
or
iret
into
cmp
cmc
pop
inc
push
sbbb
mov
pop
cmpsb
push
imull
mov
nop
add
dec
xorb
js
cmp
lret
mov
adcl
jmp
ds
jae
cmc
push
dec
pop
sbb
loope
mov
enter
inc
pop
sahf
in
lock
and
xchg
ret
dec
pop
int3
not
xor
inc
aad
aad
mov
lret
or
push
loop
add
outsl
test
mov
jb
nop
dec
sbb
push
clc
push
movsb
bound
mov
adc
pop
sbb
xor
xchg
mov
in
mov
js
pop
mov
xor
je
or
dec
enter
lcall
jns
aas
test
lcall
xor
incl
mov
out
ror
fwait
repz
mov
xchg
outsl
pop
or
fnstsw
ret
lret
sbbl
add
movsl
adc
fistpl
jmp
jnp
inc
pop
data16
mov
push
or
movsb
and
jl
cmp
mov
daa
cmc
ret
pop
adc
mov
cltd
test
lcall
jecxz
inc
mov
je
or
mov
mov
mov
jp
repnz
jne
add
mov
pop
push
pop
insl
xchg
pop
lcall
adc
push
adcl
test
or
pop
sbb
rcrb
cbtw
scas
mov
adc
pusha
xchg
mov
fldenv
loope
pop
repz
fisttpl
test
fwait
adc
nop
jge
out
jg
jae
mov
add
mov
inc
push
xchg
mov
push
cmc
or
jge
test
or
inc
sbb
adc
sahf
cmpsb
sbb
popa
lea
jns
in
nop
and
add
fidivl
mov
xor
adc
lahf
pop
xlat
xchg
dec
inc
out
xchg
outsb
pop
das
and
mov
je
movsb
fucomip
sub
into
xchg
or
mov
jecxz
push
mov
je
xorb
xor
push
stc
in
cmpsb
sub
sbb
xchg
mov
daa
cmp
mov
cmp
mov
stos
movsl
iret
pop
iret
mov
incb
jp
add
lahf
sahf
inc
jnp
mov
loopne
add
xor
xor
pop
add
pop
sbb
into
or
cwtl
lret
lret
es
movl
xor
or
xchg
test
nop
sub
rcr
cmpsl
jmp
inc
cmp
lods
insb
fwait
xchg
adc
push
push
xor
mov
mov
pop
and
lea
and
fildll
mov
repnz
leave
inc
scas
lods
dec
and
xor
lods
xor
movsl
sbb
fwait
std
add
lea
out
into
daa
mov
adc
sbb
cltd
xchg
pushf
jno
dec
mov
aad
xlat
inc
lahf
jl
aad
push
je
js
popf
mov
lret
jecxz
cwtl
cmpsb
leave
std
addr16
cmp
sbb
out
bnd
inc
jbe
add
jae
data16
add
push
inc
sub
fdivrl
addr16
xor
lods
icebp
in
scas
cld
inc
dec
stc
mov
and
dec
cmp
jge
dec
xor
jle
xlat
adc
cmpsl
cmp
pop
repnz
divl
shl
mov
pop
sbb
mov
aas
adc
jae
mov
cmp
jns
xchg
pushf
in
fimull
test
leave
adc
mov
rclb
nop
lds
mov
in
cmp
mov
lret
outsl
ret
sub
jae
shr
adc
sbb
int3
jge
pop
sbb
out
xor
or
fwait
mov
mov
push
mov
sbbb
xorb
xor
dec
cmp
mov
ret
xchg
cwtl
aas
testb
and
jo
stos
inc
cltd
aaa
xchg
ds
mov
lahf
cs
sbb
mov
stos
sbbb
fcomps
jmp
in
lock
xchg
bound
orl
dec
iret
cltd
jg
gs
sub
pop
daa
pushw
loop
cltd
mov
ds
add
mov
dec
dec
inc
cmpsl
loopne
test
mov
xchg
setb
cmc
aam
dec
mov
pop
pop
cmp
mov
fidivrs
popa
jle
pop
lret
ja
stos
iret
or
pushf
out
mov
mov
cli
lods
test
aam
sbb
or
adc
adc
clc
je
cmpsb
mov
test
or
and
mov
je,pt
cmpsb
inc
mov
xor
and
mov
inc
repnz
jb
iret
xor
jmp
jne
repnz
push
in
test
andb
iret
test
mov
les
pop
repz
mov
lds
dec
jl
mov
push
dec
jg
mov
sbb
and
les
sub
sti
jne
sub
pop
pop
inc
leave
adc
adc
int3
xchg
add
dec
jns
es
arpl
imul
push
and
cmpsb
and
imul
in
dec
sbb
push
add
bound
popf
daa
divb
inc
mov
push
xor
xchg
sahf
mov
xor
das
inc
imul
pusha
test
fisttpll
mov
stos
sub
push
xchg
xor
jns
or
rcrb
mov
outsl
fwait
lds
adc
je
jecxz
or
fdivp
mov
lea
js
fstps
int3
xchg
jl
sbb
jp
xor
shr
inc
lret
dec
dec
pop
or
cmp
mov
and
dec
fs
or
lea
jge
mov
and
fiaddl
into
add
out
or
std
mov
xchg
scas
sbbb
subb
pop
dec
push
cmp
xchg
inc
or
mov
ret
jl
cwtl
push
lds
shl
adc
pop
adc
sahf
xchg
push
push
adc
loope
push
dec
fwait
add
adc
cmp
sbb
jp
test
mov
and
push
lret
aaa
mov
ljmp
or
rcrb
lcall
movsl
fwait
loop
sbb
xchg
stc
ja
sahf
test
cmc
pop
mov
pop
mov
jle
add
rolb
or
in
jns
mov
fimuls
pushl
inc
lret
or
adc
add
push
jno
sub
jl
xor
sub
mov
sbb
sbb
into
rcl
dec
cmovns
mov
ljmp
mov
icebp
test
imul
sub
gs
inc
jns
cmp
mov
dec
pop
push
ja
mulb
xchg
and
inc
ss
mov
sub
daa
sub
mov
or
stc
pop
pop
lcall
arpl
add
jge
and
mov
sub
mov
push
enter
jo
outsb
testb
icebp
cmp
mov
and
sahf
test
xor
sub
lret
fs
enter
adc
inc
pop
mov
inc
xor
ss
jne
xchg
add
scas
sub
movsb
stc
loopne
sbb
mov
cmpsl
inc
punpckldq
addr16
popa
adc
cli
outsb
cmpsb
out
mov
sbb
sub
jmp
cmp
push
sti
loope
sti
icebp
xor
jecxz
pop
imul
sub
insb
mov
lahf
dec
or
pop
fsubrs
jbe
pop
sbb
ss
out
push
xor
cmp
mov
pop
mov
aaa
lds
inc
cs
sbb
inc
mov
lcall
fs
adc
stos
xor
inc
stc
ljmp
popf
sub
inc
popaw
jb
movsl
ljmp
stc
mov
jb
inc
mov
pop
pop
xor
dec
sbb
push
movsb
inc
mov
shlb
icebp
sub
or
imul
rorb
in
cmp
pop
lret
ds
and
out
or
loopne
mov
push
dec
sahf
icebp
enter
adc
hlt
das
shlb
mov
out
push
arpl
push
or
out
xlat
outsl
cltd
jbe
sbb
cltd
arpl
ja
mov
fldcw
test
push
or
sbb
jne
aas
cmp
addl
repnz
call
push
sahf
sub
int
adc
push
xlat
movsb
cmp
loopne
ret
dec
out
xchg
cld
cmp
push
fdivrs
mov
pushf
movsb
test
add
xor
sbb
in
mov
int
mov
aas
jle
das
in
scas
loop
mov
shlb
aad
pushf
aad
jno
inc
cwtl
xchg
cltd
dec
push
int3
pop
pop
addr16
add
dec
scas
stos
sbb
stos
pop
rcl
sbb
adcb
push
notl
sbb
xchg
push
repnz
mov
lret
lret
cmp
sbb
fwait
push
in
pushf
arpl
sub
jbe
xor
mov
loope
arpl
dec
rorb
cmpsb
cmpsl
pop
test
inc
dec
push
ja
mov
add
pop
movsb
mov
aas
gs
fs
in
int
iret
mov
test
int3
dec
xchg
stc
and
aas
repz
arpl
pop
inc
cld
cmp
ljmp
sti
stc
dec
and
mov
jmp
jl
orb
or
push
gs
lds
add
test
sub
inc
jge
lock
rorl
or
insl
sub
cmc
in
dec
xchg
loop
and
inc
sub
dec
sbb
lods
cs
xchg
clc
cmc
imul
xchg
in
pop
out
jp
push
cmp
jp
rorb
cwtl
xchg
adc
test
mov
dec
das
gs
cmp
push
adc
lret
into
negl
sbb
mov
push
mov
xor
aas
aad
pmaddwd
pop
das
cmpsl
imul
lret
lret
dec
push
inc
jp
test
leave
lcall
fs
pop
mov
lds
xor
mov
fsubrs
cmp
lcall
loop
xchg
inc
jo
mov
sbb
xor
xchg
sub
inc
divb
cmc
adc
add
push
in
mov
push
in
inc
push
imul
ljmp
cli
in
dec
cmpsb
fldenv
push
adc
add
testl
cmp
cmp
fistl
xchg
lcall
push
std
jmp
mov
scas
cwtl
je
adc
add
fucomi
pop
out
cli
sbb
lock
mov
arpl
loop
inc
sub
mov
sub
test
mov
mov
mov
aad
mov
sub
add
scas
push
mov
or
ja
cmp
jl
fadds
sub
outsb
in
out
lock
xor
int
fnstsw
adc
test
leave
sahf
int3
add
mov
mov
and
call
add
jmp
rclb
fldenv
das
xchg
sbb
jne
sub
int3
pop
sarb
iret
push
imull
push
les
shlb
pop
mov
lock
xchg
jecxz
push
jle
pusha
outsl
ret
jmp
into
test
xchg
ss
cli
dec
xchg
mov
sbb
adc
jnp
jbe
rorl
cmp
push
scas
pop
pop
push
lds
repnz
dec
and
enter
jbe
leave
adc
xchg
mov
xchg
das
cmpsl
xor
pop
adc
or
or
jl
aam
arpl
iret
decl
lods
inc
mov
data16
sub
xchg
mov
loope
test
adc
stc
enter
sbb
fsubrs
lock
rorb
stc
inc
xchg
icebp
repnz
shll
mov
mov
cmp
stc
lret
jae
sbb
mov
scas
pop
or
mov
add
dec
xchg
jp
call
jb,pt
and
cmp
adc
jmp
push
cli
xchg
mov
repnz
into
cmp
sbb
jns
mov
fwait
adc
fstpt
mov
add
cmp
inc
movsl
popf
inc
push
xchg
and
mov
mov
shlb
loop
push
xchg
lret
sbb
es
add
imul
push
out
jge
js
lea
add
cmp
jg
mov
or
xor
dec
cmp
stos
popa
sub
sbb
push
pop
push
push
mov
sbb
data16
and
mov
popa
jg
push
mov
repz
jle
dec
lret
sub
inc
jmp
leave
mov
mov
gs
lret
insl
out
xor
aam
push
sbb
jmp
add
sub
mov
sub
mov
mov
pop
ret
das
dec
sbb
mulb
add
int3
pop
pusha
pop
test
xlat
xchg
xor
jmp
popa
pusha
cwtl
scas
cmp
lods
into
mov
push
rcr
clc
cs
inc
rorl
push
jno
xor
cmp
dec
xchg
pop
mov
stos
push
add
leave
scas
mov
enter
mov
bound
movsl
or
adc
pop
inc
lock
mov
fwait
das
pop
jno
mov
mov
mov
call
sub
fs
inc
or
jge
xchg
lea
mov
push
arpl
fldl
fcom
pusha
dec
ja
mov
popa
jns
std
rorb
or
sti
jge
lahf
xor
jne
jl
cmp
sub
loop
mov
sbb
mov
mov
and
mov
pushf
jecxz
lret
inc
xlat
jo
mov
pusha
cwtl
repnz
mov
sbb
jecxz
sub
subl
add
outsb
sub
inc
xchg
cmp
sub
mov
add
mov
jb
fcmovbe
lods
sub
sarl
cmpl
and
sbb
test
iret
cmpsl
imulb
aaa
jb
cmp
sti
add
pop
sbb
aad
test
stc
cmp
xor
stos
mov
push
ss
incb
fwait
and
mov
mov
adc
rcrl
repnz
xchg
movsb
aaa
mov
loopw
jle
jbe
mov
sbb
adc
lock
das
call
pop
or
push
ja
jbe
xchg
mov
in
adc
idiv
jnp
jmp
add
mov
popf
mov
cmp
enter
mov
cmp
cmp
mov
arpl
push
repz
cmp
mov
adc
and
stos
sbb
ss
ret
mov
add
push
sub
sbb
shl
std
push
xchg
arpl
sub
data16
testb
scas
mov
popf
test
push
mov
cmc
dec
or
insl
pop
jl
mov
arpl
inc
in
add
mov
or
cmp
sbb
mov
lods
mov
notl
mov
int
int
scas
movsb
cmp
fdivrp
leave
or
push
ss
jno
mov
sbb
xchg
push
mov
push
addr16
inc
jle
mov
pop
cmp
sarb
cmp
mov
leave
cmp
test
pop
adc
div
leave
inc
shrb
inc
mov
sub
jmp
fistpl
ds
mov
adc
dec
lcall
sbb
or
int3
pusha
mov
sbb
jg
cmp
lock
pusha
mov
fstpl
jl
adc
sbb
pop
or
ja
aad
lahf
imul
pop
lds
mov
fisubrl
test
or
sbb
mov
add
sbb
xchg
jp
and
jg
adc
out
repnz
fcomp
xor
shrb
out
add
or
dec
push
mov
cmc
cld
rep
adc
out
push
addr16
in
pop
push
xor
dec
cwtl
lea
ret
pop
gs
add
cmp
mov
icebp
and
rcll
mov
outsb
call
lock
xlat
adc
cmp
sbb
push
daa
jp
pop
pop
ret
icebp
mov
pusha
icebp
cld
mov
insb
mov
push
adc
js
cs
pop
pop
or
idivl
adc
xchg
push
pop
inc
jl
push
xorb
or
mov
sbb
sarb
bound
fidivs
push
lret
or
adcb
clc
mov
les
cld
pop
leave
shll
in
imul
ja
std
lret
xchg
mov
sub
stos
cmp
and
pop
adc
jmp
sub
xor
push
fbstp
lahf
sbb
sbb
or
cmp
xor
test
push
cmp
stos
std
push
ret
xchg
xor
xchg
inc
push
jnp
add
out
fs
dec
mov
push
push
mov
std
dec
jbe
jbe
lcall
int
inc
cltd
fstp
jmp
ret
mov
cmc
shrb
dec
cs
dec
fistl
mov
dec
pop
mov
arpl
sub
pop
mov
xor
fsubrl
into
xlat
stos
lret
pusha
jl
dec
cwtl
js
xchg
sub
xor
push
or
mov
lods
out
jnp
jge
pop
ja
scas
shll
jae
int
cs
push
stos
ret
lcall
mov
push
mov
leave
add
add
insl
outsl
popa
out
dec
add
pop
jl
cld
test
inc
inc
bound
lds
loopne
and
mov
adc
pop
pushf
popa
mov
or
mov
les
dec
sbb
stos
push
and
orl
sbb
cmp
pop
bound
cs
xor
mov
shlb
movsl
cmp
mov
adc
je
mov
pusha
sbb
dec
or
pop
fsub
mov
cmp
mov
test
fsubrs
mov
jmp
push
sub
add
push
cmpsb
push
and
xchg
ja
rcrl
xchg
out
add
or
xlat
lea
xchg
jnp
cmpsl
test
fcoml
sbb
test
fldcw
inc
pushf
jge
test
filds
int
scas
icebp
lods
daa
pop
scas
lret
ss
add
insb
test
mov
and
dec
mov
loopne
jnp
aam
inc
fs
mov
xor
inc
jb
scas
inc
sub
out
cmp
jle
xlat
push
or
sbb
je
push
cmpsb
mov
mov
and
inc
loopne
cmp
jb
das
sub
lret
ret
fld
mov
dec
xor
fmul
push
xchg
ret
es
inc
add
mov
repz
xor
lods
pop
dec
rclb
dec
aas
movsl
bound
push
addr16
mov
mov
in
xor
adc
xchg
add
and
and
adc
pop
movsb
cld
cmp
jae
mov
ds
mov
out
sahf
int
mov
jbe
cltd
add
mov
jge
inc
ljmp
pop
insl
repz
sub
push
addr16
jne
iret
dec
in
jns
mov
jbe
sub
out
aaa
and
and
cmpl
clc
ljmp
roll
sub
fsubl
dec
push
sbb
test
out
leave
inc
pop
mov
stc
jmp
xchg
imul
sub
insl
lds
fistpll
add
jge
out
or
icebp
gs
sbb
dec
and
push
inc
push
or
call
pop
cld
lret
pop
out
ret
fstpl
pop
xor
int
mov
pop
adc
pop
sti
sbb
lret
jo
out
xchg
cmc
sub
fiadds
mov
push
push
addr16
scas
and
shll
gs
xchg
jl,pt
daa
ret
loope
fnstcw
xor
cmpsb
aaa
aas
or
inc
jns
mov
cmp
incl
pop
sbb
inc
sbb
sbb
cli
test
pop
outsl
popa
sahf
xor
shr
dec
leave
xchg
cmp
mov
xchg
les
fld
add
mov
icebp
cld
insl
dec
outsb
xchg
mov
cmp
das
mov
es
inc
push
mov
aam
cmp
lcall
std
mov
add
inc
icebp
jno
sub
in
fs
lret
and
lds
cmp
cltd
add
inc
mov
add
dec
xor
push
icebp
or
enter
fldl
mov
rol
and
add
mov
or
xor
push
or
xor
inc
or
fisttpl
xchg
data16
or
stc
or
and
sub
cmp
adc
mov
add
mov
cmc
mov
out
or
out
stos
fistpll
cld
imul
mul
movsb
xchg
sub
das
push
mov
fcmovne
adc
mov
xchg
sbb
mov
cld
shrb
dec
lods
mov
test
sub
push
lods
mov
sbb
cmpsl
add
push
sbb
insl
das
mov
imul
lods
test
adc
lods
sbbl
jnp
fs
out
xchg
xor
cmp
add
adc
lret
xchg
out
rcrb
ds
jbe
imul
rclb
pop
push
cmp
js
enter
les
rcl
data16
imulb
adc
shrl
lret
addl
cmpsl
ret
xor
sub
lahf
adc
pushf
push
sbb
pop
xor
imul
mov
imul
sub
sbbb
sbb
sub
sahf
or
idivl
pushf
xchg
adc
mov
push
add
loope
popf
imul
loopne
mov
xchg
cmpsl
sub
daa
mov
mov
xchg
and
dec
jle
clc
lret
sbb
jp
inc
mov
sub
lods
dec
pop
les
ret
sti
mov
jle
cmp
std
sbb
jl
fidivrs
adc
mov
or
stc
dec
xchg
mov
pop
out
adc
shl
dec
int3
jns
in
subb
jl
adc
hlt
jge
into
leave
cmpsl
or
stos
lds
lahf
mov
mov
out
cwtl
js
mov
dec
imul
cmpsl
cmp
xor
mov
out
cmpsb
pop
jmp
pop
mov
mov
add
jbe
fsubrl
fwait
inc
hlt
mov
dec
xchg
in
call
or
mov
insl
ret
jle
jg
mov
into
stos
jg
add
mov
stc
inc
mov
outsb
cwtl
or
repnz
inc
es
imul
add
xor
xchg
inc
dec
ds
sbb
pop
test
aam
adc
sti
mov
jge
jbe
dec
inc
push
and
adc
pop
sub
popa
add
adc
loopne
jae
int3
or
pusha
je
sarb
sbb
sarl
aaa
adc
int3
push
mov
mov
bound
jns
push
mov
fs
leave
loope
mov
push
int
inc
pop
enter
pop
aas
retw
ficoml
sub
xor
push
lods
sbb
in
mov
pop
and
imull
push
mov
push
mov
mov
xchg
push
dec
negb
dec
shll
mov
push
jmp
sbb
push
cmc
adc
adcl
daa
jmp
dec
and
out
cmp
mov
out
cwtl
sub
lret
pop
sbb
add
pop
xor
jp
outsl
add
fidivrl
or
sbb
fists
dec
fucomip
pop
pop
stc
inc
xlat
push
mov
enter
ljmp
xchg
jbe
mov
push
cwtl
mov
or
xchg
call
and
and
pop
cld
fadds
rcll
pop
inc
movsb
outsb
pop
push
cmp
movsb
dec
xchg
jge
les
repz
push
loop
or
add
aaa
add
pop
lret
pusha
sbb
push
jp
xor
fdiv
dec
scas
loop
cs
cmp
lret
mov
data16
or
arpl
push
xchg
nop
sub
xchg
call
mov
imul
dec
fldenv
mov
xor
cmc
mov
ja
push
sub
push
cwtl
insl
pop
xchg
dec
inc
inc
adc
sahf
add
inc
mov
xchg
jne
adc
add
and
jp
or
decl
sbb
mov
mov
lock
xchg
mov
pop
dec
iret
dec
les
gs
cmp
lock
out
jecxz
pop
xor
lret
mov
pop
imul
or
push
pop
stc
inc
mov
sar
dec
fisttps
aaa
inc
sbb
add
fildll
adc
in
fildl
adc
popa
outsl
xchg
adcb
lret
sub
std
daa
neg
mov
xchg
fwait
jb
inc
add
fldenv
push
fwait
lds
lds
cmc
fs
fidivrs
mov
xchg
mov
stos
jnp
or
mov
mov
scas
cmp
mov
scas
or
or
mov
jecxz
insb
adc
cs
loope
scas
jmp
pop
cwtl
jle
mov
pop
int3
jne
in
adc
fisubl
mov
and
jge
sub
dec
scas
sub
mov
mov
lret
jmp
jbe
fs
dec
add
in
push
fwait
add
add
add
fildll
or
pop
bound
ss
sbb
push
scas
xchg
clc
dec
cmp
js
sbb
pop
cmp
adc
aas
outsb
push
push
pop
inc
shl
pop
fdivs
popa
les
inc
mul
in
mov
clc
add
mov
xchg
int
repnz
sahf
into
cmp
gs
inc
mov
jb
lds
push
fs
jp
mov
pop
je
xor
mov
mov
xor
cld
out
dec
out
dec
pop
adc
sbb
out
loopne
test
sarb
jb
jmp
sub
add
pushf
dec
ds
loop
movsb
pop
jnp
dec
mov
imul
dec
push
mov
fwait
adc
mov
jg
js
adc
xor
adc
psllw
jecxz
lds
inc
adc
in
mov
fildll
int3
push
pop
dec
cmp
jl
lcall
sti
sub
test
or
cli
inc
mov
and
sub
repz
movsl
mov
sbb
jmp
int3
adc
inc
lock
fmuls
sti
fiaddl
repz
jae
dec
dec
pop
mov
pop
int
out
clc
push
das
jl
push
inc
out
adc
mov
orb
sub
insl
jp
dec
pop
ja
andl
ds
dec
test
in
icebp
in
push
cmp
stc
shl
pop
push
push
test
sub
push
insl
mov
cmp
push
jne
inc
jge
dec
fwait
adcl
cmp
pushf
inc
daa
sub
mov
cwtd
jae
cmpsl
in
inc
and
scas
or
sub
inc
sub
out
repz
sti
mov
inc
mov
xor
adc
fimull
shll
jne
cwtl
xor
mov
filds
std
std
add
lds
in
cmpsb
gs
popf
rcr
inc
aad
pop
jbe
jnp
lcall
lcall
pop
jp
cmpsl
xor
mov
es
mov
rcr
cmp
std
rol
xor
mov
sbb
mov
cmp
dec
inc
cli
fsubs
sbb
fidivl
jb
movsl
pop
popf
or
out
stos
pusha
popa
xchg
je
add
cs
push
movsb
dec
lock
int3
xchg
int3
mov
mov
sbb
cli
jmp
icebp
dec
fmuls
cmpsl
ret
jne
clc
out
cmp
subb
cwtl
mov
push
push
add
cmp
xchg
outsl
pushf
mov
adc
mov
into
in
add
sub
sub
js
push
scas
lds
cmp
lret
mov
pop
pop
push
push
ja
xchg
add
bound
xchg
andl
dec
repnz
adc
lcall
jle
lret
push
add
xchg
aad
aam
pop
push
xor
sbb
inc
mov
and
xchg
adc
jno
fldl
adc
push
shl
mov
mov
in
sub
mov
ja
adc
jle
lret
int3
jge
cmc
mov
add
hlt
icebp
mov
sarb
xchg
jnp
insb
push
or
xchg
mov
cltd
stos
add
lcall
mov
lea
lea
or
inc
pop
xor
xor
lcall
xchg
pop
jp
add
push
push
mov
insb
xor
popf
push
stc
shlb
sub
testl
mull
adc
clc
mov
inc
pop
roll
jmp
adc
jno
adcl
jae
push
add
mulb
jg
call
outsl
in
jmp
std
jmp
sub
or
fidivl
sub
ljmp
xchg
cs
rcl
mov
movsb
movsl
jmp
enter
pusha
stc
push
jmp
and
push
rorl
jge
les
dec
xchg
inc
mov
fwait
test
mov
gs
clc
dec
lods
or
fnstenv
cmp
data16
sub
sub
mov
mov
push
xor
or
push
sub
sti
xchg
or
and
stos
adc
push
shlb
fsubrp
xchg
mov
and
dec
add
and
and
adc
xchg
movsl
ret
scas
jnp
ds
test
xchg
dec
pushf
nop
pop
cs
cmpsb
pop
pop
lods
jmp
mov
xor
add
popa
jae
and
xor
jmp
sub
cmc
jecxz
mov
ja
push
mov
gs
movsl
adc
js
mov
xchg
stos
jbe
ror
cmc
out
addr16
jns
mov
sti
mov
sbb
mov
bound
push
mov
das
mov
shll
out
and
rcrb
std
cs
rcll
ja
jbe
nop
adcl
add
mov
cmp
xor
adc
xor
push
repnz
cmp
add
sbb
aad
ds
test
pop
setge
mov
hlt
clc
push
in
stos
push
and
lahf
test
adc
bound
adc
jp
jg
dec
jo
outsb
arpl
add
cmc
enter
sti
test
pop
push
sahf
mov
mov
push
cmpsl
out
mov
aas
and
xchg
jl
and
popf
sti
push
dec
scas
rcr
scas
popf
ja
sub
in
mov
jmp
add
pop
enter
sub
aam
clc
int3
push
int
push
xor
add
xchg
mov
pop
int3
pushf
pop
aaa
jns
xor
fwait
sbb
fistps
stos
jg
jo
enter
pop
dec
mov
das
movsb
ljmp
lcall
popf
cmp
or
scas
lret
dec
push
fstpl
mov
xor
loopne
scas
bound
aas
lcall
sub
pop
repnz
pushf
aam
mov
xor
imul
pop
add
jmp
inc
shll
push
stos
cmc
movsl
cmc
test
sub
mov
fsubl
cmpsl
iret
in
shl
fldcw
push
lock
cmpb
xchg
scas
lret
jle
or
or
dec
jnp
out
xchg
mov
fsts
lret
inc
mov
sarl
mov
ja
mov
or
xor
leave
adc
dec
shrb
in
fcoms
xor
mov
in
jnp
add
sub
adc
adc
imul
xor
addl
movsl
jecxz
scas
out
xchg
gs
addb
nop
out
cmc
lods
jp
and
sbb
mov
icebp
xor
push
jo
lods
sar
fadd
pop
adc
addr16
mov
lahf
xchg
lret
ljmp
push
adc
xchg
cwtl
mov
jmp
les
nop
xchg
lahf
jae
sbbb
mov
xchg
adc
push
sbb
clc
ret
adc
jno
popa
testl
divl
xchg
jle
sub
ds
dec
lret
std
outsl
leave
les
mov
sarl
jecxz
adc
mov
bound
jle
jnp
dec
imul
rcrb
cwtd
mov
add
jmp
adc
pop
lret
jl
lret
mov
sahf
sbb
movsl
xchg
cmpsl
push
mov
lret
cwtl
dec
adc
popa
inc
aaa
dec
push
mov
push
fnstcw
aam
outsl
in
xor
or
ret
mov
inc
es
mov
and
or
iret
pop
stos
mov
cmp
or
adc
pop
out
add
and
adc
adc
das
mov
fists
js
adc
pop
xchg
std
add
test
xchg
jecxz
loop
jno
outsb
insb
lret
popf
test
and
leave
andl
ss
cmc
jle
add
inc
jb
ja
add
pop
ds
out
or
and
xor
adc
jmp
aaa
repnz
out
xchg
out
pop
subl
mov
mov
cmc
divl
dec
cmp
sub
push
call
jmp
jno
outsb
movsb
jl
lea
xchg
jae
add
pop
adc
notl
adc
hlt
outsl
sub
jle
int
addr16
mov
adc
in
or
out
ret
and
fs
and
push
imul
cmpb
rorb
pop
mov
mov
adc
or
xor
dec
dec
dec
xchg
mov
jne
rorl
pop
scas
jno
pop
mov
and
mov
testl
int
iret
cmp
cli
fs
push
ficoml
insb
hlt
xchg
repz
xchg
out
movsl
and
repnz
fndisi(8087
pop
shll
push
outsl
fmul
pop
mov
scas
cmp
mov
pop
insl
push
mov
jb
repz
sub
lods
push
and
cmp
inc
cmp
push
cmpsl
cmovb
jae
negb
mov
outsb
add
add
jecxz
repz
xor
roll
fwait
mov
pop
push
xor
lds
fistpl
inc
sbb
lcall
in
in
pushl
pop
leave
adc
fmull
lods
mov
jne
call
mov
cli
je
in
dec
mov
int
sub
outsl
adc
aam
mov
push
in
add
popf
mov
and
sbbb
xchg
hlt
push
xchg
push
cmp
inc
push
adc
push
mov
shlb
imul
pop
fwait
loopne
push
es
xor
out
cmc
mov
out
pop
pop
jns
pop
xor
add
add
nop
add
adcl
bound
pushf
jb
mov
mov
ss
sbb
cltd
pop
xchg
icebp
fdivrl
mov
dec
ljmp
dec
ds
decl
insl
fwait
and
das
imul
cwtl
xchg
jg
mov
scas
mov
leave
je
ljmp
pop
rcrb
lods
pusha
lea
out
gs
repz
out
std
lret
pop
jg,pn
or
sbb
imul
push
or
push
test
cltd
stos
fnstsw
nop
ficompl
dec
and
test
sbb
mov
pop
pushf
and
sbb
movsb
or
push
jbe
adc
inc
into
push
adcl
pusha
icebp
dec
fisubl
pop
and
cmpsb
mov
mov
test
cltd
adc
dec
inc
xchg
sub
sarl
pop
out
pop
mov
push
xchg
test
inc
stos
int3
ror
xor
dec
pop
pusha
repz
fldt
scas
cmp
dec
pushf
cmp
fcompl
push
push
mov
loop
inc
sbb
adc
mov
add
in
add
cmp
xchg
popf
cmp
xor
cmp
popa
mov
xchg
lret
int
xchg
dec
xchg
xchg
inc
test
rorb
xchg
mov
xor
sub
cmp
cmpsl
movsl
push
scas
and
inc
daa
cmpsl
xlat
mov
xchg
dec
mov
mov
sbb
das
or
mov
cmp
mov
jbe
mov
xchg
add
movw
fwait
ljmp
jo
mov
jbe
out
mov
gs
gs
push
push
or
adc
js
xchg
sbb
loop
xor
and
mov
pop
mulb
popf
jnp
mov
aam
test
xor
test
popa
mov
xchg
or
int
dec
dec
inc
or
xadd
gs
jmp
je
iret
fcomp
test
stc
xchg
out
incb
in
jle
jne
add
lret
mov
sahf
sbb
rcrl
insb
outsb
lds
cmp
mov
inc
jecxz
adc
stos
push
mov
int
and
jno
sbb
mov
sub
mov
out
push
fcoml
dec
inc
sbb
jecxz
sti
pop
popf
inc
push
jbe
test
add
adc
sbb
scas
fcmove
xor
divb
inc
in
adc
je
inc
iret
je
dec
adc
dec
pop
push
je
and
xchg
orb
decl
pop
in
sub
mov
dec
inc
das
pop
inc
adc
pop
push
sub
call
pop
mov
pop
jae
int3
and
cmp
lret
insb
and
stos
aam
lods
mov
cltd
ficoms
mov
dec
inc
push
xor
out
shll
lahf
or
rclb
or
cmp
in
cltd
das
add
js
adc
xor
movsb
push
pop
test
mov
ret
and
lcall
and
fiadds
ret
xlat
or
aad
cmp
mov
lea
fldenv
inc
or
push
cs
push
lret
mov
pop
shl
and
fwait
push
mov
mov
fbstp
repz
xchg
mov
sahf
and
xor
dec
jl
ret
subl
jmp
adc
in
pop
pop
mov
ljmp
cmp
notw
xor
inc
sub
ds
imul
xchg
mov
das
or
pop
pop
sbb
iret
mov
sbb
mov
aaa
mov
test
dec
insb
cli
ss
subl
push
sub
out
pcmpeqd
repz
cmpl
add
out
jne
fcompl
mov
mov
and
mov
adc
loope
mov
dec
das
cwtl
mov
cld
and
xchg
jle
pop
push
pop
xchg
mov
shll
nop
sub
mov
negb
popa
loopne
sbb
mov
jp
xor
fdivrs
sahf
push
pop
jnp
mov
lret
or
xor
and
inc
mov
stos
sbb
fisubs
jb
stc
js
aad
and
cmc
pop
int3
push
lock
stos
out
das
pop
push
cmp
stc
cmpsb
icebp
xchg
add
or
sbb
mov
mov
call
mov
and
sub
pop
or
lcall
lds
das
ja
data16
fwait
or
lods
cltd
jne
push
pop
loopne
lods
or
popa
inc
jae
shlb
jbe
lcall
pop
popf
sbb
and
lahf
inc
int3
sahf
out
or
les
push
cli
rcrb
or
test
xchg
adc
enter
out
pop
sbb
cmc
leave
fucomp
adc
movhlps
rcll
sub
rclb
sub
shll
xor
jae
das
mov
mov
dec
push
dec
ret
cld
int3
imul
jb
and
rcrl
push
addr16
leave
dec
lret
sti
mov
clc
jnp
jg
jecxz
into
ljmp
or
push
in
and
xchg
lcall
sti
ret
stos
out
adc
popf
aam
push
push
xor
pop
dec
arpl
mov
pusha
in
cwtl
fimuls
push
add
pop
leave
daa
movsb
fistl
jl
adc
dec
dec
sbb
loopne
mov
jge
leave
add
push
test
push
cmp
lock
ss
jecxz
je
dec
sbb
cmp
leave
add
pmaxub
jae
pop
inc
and
adc
add
cmp
fs
push
es
mov
repnz
mov
push
outsl
sub
leave
insb
sub
lcall
adc
pop
mov
add
in
cwtl
loopne
outsl
rol
mov
mov
fsub
daa
cmp
inc
inc
je
xchg
mov
ret
ss
mov
es
loope
xchg
mov
mov
stos
and
mov
lahf
push
pop
adc
flds
in
nop
cmc
push
hlt
push
jb
punpckhwd
cmpsl
fsubp
jne
inc
sbb
add
mov
lds
adc
mov
sti
add
fs
jl
inc
enter
pcmpeqb
test
test
mov
jnp
pop
pop
sbb
mov
push
sub
cmp
xchg
push
or
adc
orl
leave
popa
dec
fistps
pop
sub
or
sub
mov
in
xchg
push
cs
jbe
je
ret
mov
mov
mov
out
cmp
imul
adcl
mov
mov
daa
lock
add
enter
ds
loopne
or
in
clc
mov
xchg
cwtl
cmpsb
inc
push
ss
jne
xor
mov
rcll
pop
insb
mov
ret
or
fmull
jae
rcr
and
inc
arpl
imul
cmp
push
pop
dec
cltd
jns
push
push
sub
pop
das
mov
cld
dec
inc
icebp
mov
xchg
mov
or
fsubr
cmp
push
js
lods
cwtl
sahf
add
xor
mov
mov
and
push
sbb
stc
jb
cmpsb
gs
jb
xor
cli
push
gs
xchg
adc
cs
xor
push
sbb
repnz
call
inc
cmp
rcrb
repnz
jo
sbb
ret
mov
hlt
cwtl
pop
daa
jb
xchg
sub
sbb
iret
movb
inc
shl
pusha
stc
popf
inc
mov
ljmp
bound
inc
imul
push
sub
mov
lds
sti
popf
lcall
jg
xor
lret
cmp
sbb
inc
rclb
lds
adc
rorb
ret
push
mov
cs
gs
sub
adc
dec
pushf
xor
and
add
sbb
jb
in
inc
cmpsl
incl
and
jne
mov
jne
fbstp
lret
dec
jae
lret
into
test
mov
fimuls
in
mov
and
mov
aam
sub
out
or
mov
mov
or
imul
test
fdivrp
outsb
dec
sub
push
outsl
arpl
jg
fcomps
test
xchg
sbb
pushf
xchg
inc
or
scas
mov
fidivs
adc
jo
xor
pop
in
inc
insl
arpl
jbe
roll
sbb
pushf
cmpb
mov
sub
outsb
xchg
es
scas
cld
xor
mov
xorl
pop
enter
sbb
rclb
add
xchg
inc
outsl
adc
push
in
pop
pop
ret
dec
paddsw
fdivrp
cmp
xor
testb
addr16
mov
rcrl
sti
jmp
icebp
mov
xor
pop
cmp
leave
mov
cmp
pop
mov
in
jo
inc
cltd
ja
xchg
outsb
insl
orb
dec
mov
sub
shrl
sub
call
enter
cmpsb
iret
and
jo
sbb
jno
stos
out
and
out
sbb
stos
test
push
xchg
adc
pop
lea
dec
add
or
mov
pop
jmp
pusha
nop
dec
mov
pop
test
sarb
jg
or
sbb
adc
mov
repz
or
or
or
push
inc
into
cs
sbb
lods
lahf
add
negl
and
loope
xor
sub
add
inc
xchg
cwtl
ja
sbbl
pop
js
js,pt
das
inc
mov
lret
lods
sub
hlt
xchg
movsl
pop
or
repnz
sti
insb
or
aam
mov
or
sub
lods
jecxz
adc
sbb
ficompl
in
mov
push
in
and
cmp
dec
int3
jnp
add
sbb
xchg
jne
es
int3
sti
hlt
hlt
inc
sahf
sar
test
add
ret
push
cmp
push
xor
addr16
das
out
inc
dec
into
cld
test
dec
inc
outsb
cmpl
cmp
pop
sbb
cmp
cmp
les
pop
cmp
into
out
pop
sbb
fcomi
push
out
aaa
lds
jnp
fwait
test
out
xor
ss
push
pop
popa
cwtl
repz
jl
pop
mov
push
push
jne
shrl
sti
adc
inc
icebp
in
pusha
rclb
call
jne
arpl
jmp
roll
dec
roll
or
cmpsb
lret
dec
pop
or
cmp
outsb
pop
xchg
hlt
fmulp
inc
sub
sub
in
mov
jg
out
pop
insl
push
or
loopne
jne
bndldx
jmp
fwait
add
cmp
pop
sub
test
jg
push
repnz
sbb
sbb
stos
rcr
push
push
dec
jl
xchg
dec
mov
fsubrl
inc
test
daa
ss
push
fisubrs
cltd
push
xchg
add
aaa
ss
fistpl
cld
rcrb
add
pop
ftst
pop
inc
cmp
or
and
adc
shlb
mov
push
out
mov
iret
mov
ljmp
loop
push
out
xchg
xchg
sub
in
xlat
xor
test
push
pop
mov
jnp
inc
dec
cld
lods
stos
dec
adc
lea
or
or
push
mov
aaa
les
imulb
sarl
cmpsl
dec
lret
data16
inc
repnz
mov
in
outsb
lahf
cmp
mov
sahf
mov
pop
addl
add
nop
leave
cwtl
cwtl
mul
inc
js
push
rcll
scas
xchg
push
insb
dec
ss
das
xor
inc
mov
adc
out
ficompl
mov
movsl
jne
mov
jl
outsl
fimuls
arpl
mov
pop
and
and
pop
pushf
xlat
mov
pusha
pop
ss
add
sub
aad
push
sbb
mov
mov
adc
xor
and
fdivr
hlt
out
and
jnp
mov
or
icebp
sub
pop
incl
cmp
stos
fstpl
ss
idiv
aad
out
push
mov
or
daa
in
aam
pop
test
aad
out
movsl
in
fsubrs
push
aam
pop
mov
or
lcall
bswap
sahf
data16
mov
mov
pop
mov
rcrw
add
imul
int3
hlt
or
std
test
andl
dec
jle
xor
cmpsl
or
movsb
jecxz
push
push
enter
and
cmp
cli
pusha
dec
mov
jmp
add
lret
stc
setp
ret
repnz
movnti
fcoms
leave
add
sbb
mov
mul
pusha
loopne
jge
mov
xlat
sub
push
cmp
es
push
adc
mov
jmp
mov
cmp
cli
jbe
movsb
dec
sub
rolb
stc
leave
fcmovnu
cmp
arpl
cmp
adc
sub
subl
jg
xchg
or
dec
call
jp
cmp
pop
dec
xchg
je
jno
jp
push
sbb
xor
das
fstl
jo
sub
jbe
and
test
fiadds
cli
mov
imul
fucom
dec
popf
push
add
je
xor
xor
fstl
cmpsb
adc
jno
lods
movsl
adc
stos
adc
lret
movsb
or
sbbb
xchg
ljmp
daa
mov
inc
mov
mull
or
push
ret
xor
xchg
lret
dec
or
stc
xchg
call
rcrl
sbb
sbb
add
jp
fildl
mov
push
mov
mov
mul
sub
cmp
dec
gs
mov
sahf
ja
inc
cmp
xlat
xchg
psubw
loop
insl
mov
aad
add
mov
ret
pop
jns
and
adc
mov
mov
mov
ljmp
scas
je
cld
lret
lods
mov
fadd
pop
frstor
test
mov
fsts
sar
nop
pop
scas
popa
lea
jge
into
and
push
test
fcompl
push
cmp
testl
push
fisubl
notb
movsl
mov
or
xchg
mov
sbb
loop,pn
std
jb
test
xchg
cmp
jl
cmp
mov
dec
ret
mov
mov
test
imul
fistps
jle
pop
inc
sub
inc
loopne
loopne
mov
int
shlb
ja
sbb
inc
popf
mov
jno
leave
mov
pop
sub
lea
shlb
adc
pop
inc
xor
sbbb
sahf
sti
mov
mov
lds
jne
in
push
popf
loopne
xchg
sbb
mov
xchg
shll
fnstsw
bound
cwtl
es
into
into
cmpsb
add
pop
sahf
ret
mov
fwait
sti
push
or
loopne
mov
lahf
shlb
mov
push
add
cs
shrl
insb
pusha
dec
fndisi(8087
les
nop
movsl
std
mov
fdivl
or
push
inc
lods
or
mov
mov
stos
mov
lds
and
daa
int3
rcrb
mov
add
dec
jnp
out
xchg
popf
jb
je
lds
push
mull
xchg
jp
cmp
ja
fisttps
adc
dec
or
imull
adc
dec
lods
xchg
shll
aas
mov
in
scas
popf
ja
fcoms
std
shrl
dec
pop
or
mov
dec
mov
mov
adc
dec
xor
or
mov
subb
or
mov
pop
fcompl
divb
mov
mov
outsb
jb
subl
adc
mov
popa
mov
lods
or
dec
divl
outsb
push
push
adc
sub
pop
idivl
or
pop
lret
addl
lret
sbb
jle
add
test
sub
mov
mov
dec
mov
dec
push
jp
fsubrs
dec
xor
push
jmp
lret
scas
dec
int
ret
adc
pushf
fimuls
div
ret
xchg
xor
sti
adc
xlat
jge
mov
cwtl
xor
dec
nop
and
icebp
xor
push
push
mov
clc
leave
adc
sahf
lock
in
loopne
mov
dec
into
push
jge
sbb
rorl
xchg
fsts
test
jno
bound
or
mov
insl
or
sbb
pop
lret
xchg
fs
loopne
jle
sbb
ficoml
inc
pop
dec
xchg
xlat
mov
data16
scas
sti
push
mov
inc
pop
in
xchg
mov
dec
sbb
or
or
push
ljmp
xchg
pop
pushf
or
sahf
mov
lods
sbb
xchg
mov
inc
fstl
rcl
and
jnp
popf
push
and
addr16
out
lcall
movsb
aas
dec
dec
stc
pop
out
xor
rorb
xchg
mov
aad
cltd
out
mov
add
push
bound
sbb
aaa
mov
mov
sub
xor
and
pop
sub
aaa
dec
mov
push
xchg
addr16
or
inc
and
pop
sbb
cltd
cmpsl
cld
push
loopne
inc
xor
add
popa
mov
divb
mov
sarl
fdivrs
iret
jge
and
mov
rclb
mov
cmp
push
inc
add
mov
scas
nop
daa
push
inc
aam
inc
jo
rorl
repz
imul
test
sub
xchg
pop
mov
out
je
mov
test
mov
cwtl
lods
add
inc
xor
and
repz
xchg
and
call
and
cmp
mov
pop
xor
jae
ror
ja
and
dec
mov
insb
les
movsl
ja
xchg
bswap
stos
stc
pop
dec
cmpsl
fmulp
lret
pop
pop
xor
jmp
cmp
ss
or
mov
sahf
sub
cmp
push
jbe
dec
add
xor
iret
imul
aas
sahf
pop
scas
inc
xor
jo
cmp
pop
jl
push
lret
dec
cmp
lar
fwait
addl
cmpsl
cmp
jmp
or
and
hlt
mov
testl
and
lcall
add
mov
add
fs
test
sbb
ds
adc
xor
fs
mov
pop
adc
lcall
addb
add
and
mov
dec
or
shl
jg
popa
xlat
aas
mov
imul
inc
dec
xor
inc
fbstp
jbe
lret
nop
mov
pop
or
and
int3
in
ja
mov
sahf
inc
lea
in
sub
cmp
jo
aas
pop
push
gs
push
mov
pop
test
lcall
cli
xchg
mov
inc
sbb
aaa
jno
push
hlt
xor
xor
sbb
xchg
mov
and
xchg
cltd
jmp
outsb
movsl
inc
inc
mov
popa
hlt
xor
or
mov
leave
movsl
jnp
xchg
std
sbb
ss
imul
mov
lret
lcall
cmp
sub
pop
jecxz
je
out
xor
dec
in
pop
loope
scas
rorb
call
int
sbb
idivl
mov
push
pop
insl
sub
popf
arpl
jns
mov
dec
xlat
push
dec
xlat
scas
test
xor
aam
mov
dec
add
cmc
jmp
mov
cmp
xor
pushf
cmp
jle
xchg
daa
out
int
xchg
das
addr16
or
negb
mov
add
push
out
push
lods
cmp
jbe
imul
ljmp
jecxz
fiadds
lds
adc
jge
inc
dec
sbb
jno
sub
cwtl
push
xchg
repnz
and
jnp
cmp
dec
inc
sahf
fnstsw
and
mov
adc
push
xchg
fucomip
xchg
cld
pop
pop
cs
pop
and
mov
jl
pop
pop
rcll
push
add
imul
mov
das
mov
xchg
arpl
mov
imul
cmp
jle
out
int3
loop
andl
adc
je
push
leave
push
xchg
push
pop
nop
lret
das
and
mov
js
insb
sbb
into
ficomps
sub
add
mov
addb
loopne
int
push
fwait
pusha
lret
fiadds
xor
pop
imul
adc
push
cmpl
mov
xchg
dec
dec
idivl
adc
add
pusha
sub
mov
mov
cmpsl
clc
pop
cli
fldt
cmp
mov
jle
xor
xlat
pop
inc
and
sbb
push
push
inc
fdivrl
jl
sti
daa
xlat
add
inc
and
inc
xor
gs
pushf
out
xor
loope
pop
mov
dec
xchg
int
jnp
mov
sti
adc
mov
jne
nop
add
inc
sbb
inc
stc
push
and
inc
lods
das
out
jle
insb
pop
pusha
frstor
or
adc
insl
jl
ss
sbb
xlat
adc
push
jo
pop
fcmovb
stos
inc
pushf
ret
and
jle
lods
mov
stc
dec
jp
lahf
xchg
negl
dec
dec
ret
dec
mov
test
cli
aad
cmp
hlt
ss
sbb
nop
repz
shrl
sbb
mov
mov
std
cs
shl
add
push
lods
imul
mov
inc
xchg
bound
jge
lock
adc
xchg
subl
negb
or
pop
les
push
popf
pop
mov
ret
pop
mov
cmpsb
arpl
mov
sub
repnz
push
push
or
xchg
push
dec
shl
jle
and
outsl
shrl
sbb
push
push
and
lods
xchg
cmpsb
mov
or
popl
scas
sbb
cmp
inc
mov
jmp
cmp
pop
je
xor
clc
into
je
jns
mov
jno
jmp
mov
or
sbbb
pop
sub
mov
out
fwait
xchg
sbb
stos
adc
data16
jb
mov
nop
jp
fs
mov
shll
cmpsb
and
cmpsb
push
iret
aam
sbb
negl
scas
jg
pop
push
loope
xlat
cmpsl
and
add
or
push
bound
xor
mov
cltd
push
sub
inc
push
call
pop
cmp
in
xchg
pop
test
or
inc
rcr
cmpsb
into
sub
sbb
jl
pshufw
inc
pushf
data16
pop
inc
or
push
add
add
mov
dec
cmp
inc
xor
rcll
testb
xchg
icebp
xchg
push
push
xlat
dec
test
jmp
xor
mov
add
mov
pop
nop
push
adc
pop
shll
iret
xchg
xchg
and
push
shl
test
rolb
enter
mov
jge
xchg
lods
pop
mov
add
jno
push
dec
hlt
dec
mov
xchg
mov
pop
push
add
cltd
push
in
mov
popf
cmp
mov
jmp
in
xchg
cmp
repnz
mov
ljmp
xchg
movsb
mov
and
adc
hlt
mov
lock
inc
cmc
stc
dec
lock
shll
testb
repz
addr16
mov
call
adc
ljmp
and
push
or
mov
push
popf
pop
push
xor
loop
fucomi
repz
pop
rcl
and
pop
pop
lea
sub
push
bound
mov
or
inc
push
adc
bound
push
push
je
fldl
sahf
add
sub
or
mov
add
and
inc
outsb
daa
and
test
orps
adc
mov
fwait
lahf
rcl
repnz
ret
outsb
jnp
adc
adc
sub
gs
clc
lret
add
sbb
mov
dec
xlat
adc
mov
mov
push
xadd
sbb
xor
fwait
pop
inc
out
add
notl
mov
cmp
lret
inc
out
fsubrs
push
mov
imul
xor
arpl
add
lahf
jbe
inc
arpl
ret
mov
dec
push
and
inc
mov
sub
imul
int3
les
push
rorb
popa
orb
out
pop
xor
jnp
push
jae
data16
mov
adc
shl
ss
loopne
sahf
add
in
hlt
or
or
imul
fbstp
dec
out
lahf
sahf
inc
xor
add
in
jo
cmpsb
iret
or
loope
add
push
adc
mov
inc
pop
mov
cmpsl
mov
add
in
cmpsl
fwait
push
pop
jl
movsb
data16
xor
pop
mov
xchg
iret
cwtl
cmpl
mov
pop
fldcw
mov
xchg
xchg
sub
sbb
mov
fcoml
lret
jno
rclb
add
pusha
or
outsb
cmp
xor
push
sahf
fldenv
ljmp
int3
xchg
movsb
ja
pop
adc
pop
clc
mov
rsm
mov
and
aas
sahf
mov
cwtl
cmpsb
jae
addb
rolb
cwtl
add
mov
lcall
push
repz
sub
out
iret
sbb
test
es
mov
mov
cltd
push
push
mov
sbb
xor
stos
rclb
lahf
push
insl
aas
testb
mov
sub
lock
fstl
sbb
hlt
lods
shll
jae
jo
push
push
mov
adc
pop
inc
lods
cmp
pusha
sbb
mov
pusha
mov
cmpsb
lret
sti
pop
mov
xor
inc
mov
dec
or
pushf
mov
ret
add
insb
testb
clc
or
mov
push
xor
or
mov
into
out
jecxz
out
fbstp
add
pop
xchg
xchg
cmp
add
sbb
in
inc
repnz
jmp
and
inc
and
aaa
mov
fwait
pop
test
mov
xchg
std
andl
cmpsl
rorb
jecxz
mov
and
in
bound
or
cli
xchg
pop
mov
lds
idivl
xchg
xor
or
and
jno
dec
push
and
mov
and
cltd
arpl
xchg
xor
jg
fs
and
lods
or
push
daa
or
push
cmp
fisttpll
call
jb
dec
sbb
dec
push
test
leave
sub
and
lea
leave
pop
mov
sahf
xor
sub
rolb
icebp
outsb
lods
repz
in
sarb
pop
jl,pn
sbb
inc
loop
jle
mov
mov
dec
push
les
lret
jp
dec
scas
push
pusha
pop
mov
jle
adc
pop
sahf
or
inc
inc
cmp
pop
outsb
fdivs
mov
jnp
sbb
into
cld
lcall
call
mov
or
xlat
sbb
stos
xchg
xchg
xchg
fmull
icebp
mov
addr16
mov
testb
or
incb
mov
fs
ja
pop
adc
sahf
pop
popf
push
data16
les
nop
mov
push
push
xor
mov
loop
xor
test
aad
cmpsl
mov
cli
push
or
mov
test
rcrl
mov
xchg
pop
ret
add
cmp
cld
adc
jo
dec
fsubp
push
cli
adc
les
pop
stos
adc
jbe
pop
or
cmp
sub
xchg
mov
into
xor
cmp
and
jb
imul
imul
leave
aam
outsl
jbe
jb
shl
adc
fcomps
cmc
mov
incb
jge
gs
fsub
call
mov
adc
sbb
fisttps
jmp
xchg
jmp
or
fdivrl
aam
aaa
test
cwtl
je
cmp
je
pop
cmc
cmp
outsl
daa
mov
push
and
dec
sub
push
dec
sub
movb
jns
or
arpl
imul
dec
in
dec
mov
ss
imul
inc
int
mov
jbe
rcll
add
jecxz
mov
movsl
ret
insb
pop
pop
and
in
sbb
dec
sbbb
inc
fxch
das
pop
cmc
dec
dec
adc
sbb
repz
xchg
cmp
fiadds
imul
xchg
scas
push
insb
sti
in
imul
rol
daa
xchg
out
fdivs
adc
icebp
sti
xchg
adc
cmpsl
loop
xor
popa
inc
inc
movsb
dec
dec
sbb
ljmp
rcrb
or
dec
rcl
pop
mov
mov
jne
dec
subl
push
xchg
sbb
mov
jl
aaa
adc
das
xor
push
xor
xor
pop
cltd
incl
not
shrl
inc
testl
mov
aad
loop
out
jl
rcrl
jg
jbe
jmp
push
je
or
dec
ficompl
cmpsb
jbe
add
clc
push
jmp
inc
fwait
inc
jmp
fildll
ret
mov
jl
cs
pusha
xor
add
xchg
jge
push
addr16
mov
xor
int
popf
push
mov
jne
scas
inc
imul
lret
es
mov
lret
xor
dec
xor
call
insb
outsb
in
je
jbe
pop
clc
xor
sub
mov
nop
add
mov
pop
push
push
mov
hlt
out
int
dec
stos
in
scas
mov
sbb
jnp
jge
add
adc
inc
add
and
jbe
fs
inc
jle
aad
ret
les
mov
lcall
loopne
insb
mov
pushf
sub
xor
push
dec
xchg
stos
repz
pop
or
xchg
jecxz
popf
ret
dec
inc
or
adc
fldl
or
in
sbb
mov
dec
lcall
jmp
notl
add
inc
mov
ret
in
int3
mov
aaa
test
pop
leave
mov
mov
cs
sbb
or
sub
lcall
add
addr16
push
push
icebp
push
xor
mov
sub
pop
dec
xlat
stos
decb
sti
xchg
xchg
pop
push
mov
cmp
pop
xlat
pop
fidivrl
in
out
in
pop
fimuls
in
and
fisttpl
lea
dec
call
xor
push
movsb
mov
jo
jg
insl
xor
inc
insl
and
call
addb
and
inc
mov
pusha
dec
inc
popf
into
mov
jo
jae
pushf
xchg
mov
ja
jno
cmpsb
xchg
or
fisttps
inc
pop
pop
jge
out
call
insl
lret
sbb
enter
mov
lahf
adcb
mov
test
jg
dec
into
jl
ret
xchg
ret
gs
mov
xchg
xchg
sbb
lock
mov
fisubs
rcll
shrb
fiaddl
and
in
cmp
shll
mov
cld
cmp
jns
xlat
lcall
in
adc
inc
out
and
call
fs
push
mov
ret
inc
rcrb
push
int
outsb
jl
sti
jle
stc
xchg
call
fildll
add
ljmp
test
sbb
daa
fdivs
pushf
or
popa
inc
inc
inc
push
mov
dec
mov
cs
ljmp
mov
outsb
inc
and
pop
jb
pop
xchg
sti
rcl
xlat
bound
lods
push
sub
jb
mov
mov
lock
insb
mov
ret
aas
outsb
push
movsl
cmp
add
push
mov
sbbb
sub
pop
mov
in
das
stos
jae
push
cmp
lock
pop
fsubs
out
dec
add
jb
sbb
sbb
xchg
sar
divl
push
sbb
pop
and
ja
push
add
mov
fistpll
push
push
adc
pop
adc
faddl
cmp
adc
imul
push
mov
dec
mov
gs
mov
sbb
mov
xchg
stc
out
stos
in
xchg
or
loope
xor
dec
xor
mov
dec
xchg
jl
and
es
jnp
xor
mov
test
add
stc
dec
stos
lods
pop
sub
ljmp
and
push
in
loop
push
push
adc
shlb
insl
sbb
and
push
jl
adc
shll
mov
rdmsr
add
jnp
xchg
paddw
outsl
push
jl
mov
leave
leave
xor
xchg
sub
xchg
leave
lods
call
adc
leave
mov
orb
xchg
int
pop
xchg
xchg
fstps
test
std
adc
test
sbb
fcoml
push
test
xor
mov
inc
call
xor
pop
push
mov
movsl
cmpsb
xchg
inc
mov
sbbb
int
push
test
push
pop
mov
mov
push
nop
jae
mov
in
inc
jnp
sti
js
nop
subb
mov
cmpsb
mov
gs
sub
adc
mov
cmp
dec
cmpsl
dec
xor
jb
iret
mov
inc
ljmp
ret
sbb
or
popl
sub
lret
leave
sub
enter
jmp
js
sbb
iret
pop
jbe
insl
lahf
and
xchg
aam
push
idivl
ja
ja
mov
xor
mov
xchg
adc
jb
dec
fsubs
andl
xchg
fadds
inc
popf
scas
subb
push
pop
in
in
hlt
jmp
ret
lock
mov
sarb
and
cltd
and
adc
pop
push
mulb
arpl
loopne
mov
inc
adc
lret
enter
outsl
add
ror
pop
bound
cmpsl
fildl
mov
icebp
cwtl
shll
fstl
scas
sahf
sbb
aas
adc
dec
or
mov
shll
inc
cmp
mov
outsb
xor
popa
out
push
ds
mov
lea
inc
push
mov
call
cmc
mov
insb
jle
mov
add
pop
mov
jp
dec
push
addl
aas
mov
test
stos
shll
push
dec
xchg
aad
push
cld
inc
in
mov
test
mov
in
sbb
mov
aaa
fbstp
inc
stc
lods
sahf
inc
sub
adc
in
pushf
divl
mov
adc
mov
lds
mov
jnp
cwtl
mov
aam
arpl
bound
lds
in
mov
cmpl
push
dec
dec
mov
adc
dec
testl
or
fisttpl
pushl
popa
xor
loopne
dec
rcr
xchg
mov
push
scas
mov
mov
xchg
faddl
int3
inc
add
add
mov
push
fidivs
rolb
roll
jle
fwait
shl
or
outsl
dec
addb
aaa
arpl
in
mov
pop
leave
dec
mov
ret
push
sub
rcll
pop
and
sub
adc
aad
lock
inc
xchg
sub
aam
dec
mov
inc
jl
clc
push
or
dec
ret
sub
xchg
pop
rcrl
scas
jmp
dec
mov
xor
ljmp
cmovge
pop
cmp
pop
dec
outsl
xchg
sub
aas
xchg
ljmp
push
aas
cmp
iret
jl
jbe
xchg
lods
xchg
jbe
cmpb
lret
sub
mov
out
mov
repnz
jg
mov
sbb
out
xchg
sbb
sbb
or
cmp
test
cwtl
imul
test
add
imul
lock
sub
jae
xlat
xor
fimull
xchg
xchg
pushf
dec
xchg
mov
cwtl
jae
push
push
xlat
dec
cltd
lcall
lea
leave
cmpsl
xorl
inc
jmp
out
sub
or
inc
jmp
adc
lds
mov
and
lods
xchg
outsb
inc
jge
dec
bound
lahf
xor
sti
pop
cmpsb
cs
dec
mov
sahf
lcall
push
and
mov
push
fs
jns
dec
arpl
mov
pop
dec
add
aam
pop
mov
adc
les
je
ret
pop
inc
lock
out
test
lret
pop
jae
mov
aaa
mov
jno
sub
rorb
mov
subb
mov
pop
lcall
lods
inc
push
cmp
fimuls
xor
in
unpckhps
fldcw
cmp
shll
and
int
inc
adc
mov
out
stos
mov
into
sub
push
sti
fs
cmpsb
xor
inc
rcrb
xchg
iret
rorb
jno
add
cld
cmpl
push
sbb
dec
test
mov
movsb
fs
insl
arpl
or
imul
out
jnp
pop
rcll
fisubrs
pop
fs
sbb
lcall
repz
aaa
cs
xchg
das
pop
push
das
outsb
stos
dec
shrb
jp
stos
sahf
mov
pushl
mov
cwtl
xchg
iret
xlat
dec
gs
xchg
mov
sahf
pusha
popa
sbb
imul
add
pushl
cmp
aas
jle
mov
lcall
stos
repnz
insl
add
cld
in
enter
clc
xorl
xchg
push
test
xchg
dec
outsl
add
movsb
icebp
sub
adc
xchg
xor
fsubs
cltd
jb
cmp
pop
mov
cmp
add
jmp
push
cs
cmp
mulb
rorb
xchg
arpl
out
pop
popa
popa
mov
cmp
adc
cmpsl
in
push
test
imull
ss
xorb
add
xchg
cli
add
inc
hlt
stos
iret
pop
cmpsl
mov
pushf
enter
test
orb
mov
xchg
fwait
in
cmp
lea
jo
sbb
jne
rolb
add
sbb
icebp
cmp
sub
push
ljmp
outsl
pop
ss
fwait
xchg
insb
sbb
leave
rcrl
push
outsl
setg
or
lahf
dec
cs
dec
out
fcmove
sbb
ret
icebp
cmp
or
test
pop
pushf
lcall
mov
cld
sbb
shl
jo
adc
mov
adc
ja
xchg
dec
or
testb
add
aad
mov
flds
inc
fwait
test
sbb
sti
adc
popl
sbbb
xchg
in
sbb
pop
into
fmull
pop
cmpsl
dec
cmp
repz
aas
js
jle
adc
lds
xorl
mov
inc
cwtl
test
dec
inc
test
lret
add
cmc
xchg
inc
stos
dec
ret
scas
lock
cmp
aaa
jns
das
outsl
dec
outsb
mov
adc
mov
jae
sbb
dec
cmpsl
fwait
push
inc
mov
test
sti
std
lds
fidivrs
movsb
add
add
je
out
mov
mov
inc
test
ljmp
mov
sub
call
stos
fs
aam
lods
fistps
das
push
xor
push
push
movsb
xor
add
mov
test
sub
inc
in
xlat
add
adc
sub
xchg
int
incl
xchg
mov
sub
mov
sub
sbbl
push
pop
aaa
insl
or
pop
in
xchg
inc
movlhps
jmp
and
mov
imul
icebp
sub
mov
enter
adc
or
clc
dec
add
ds
rcrb
push
mov
les
mov
addb
sub
jmp
jl
loope
in
add
xor
push
inc
ljmp
sub
push
mov
mov
adc
cwtl
cmp
or
int
or
fwait
push
ja
sbb
popf
pop
pop
or
or
xor
test
jmp
rclb
mov
addr16
gs
add
cmp
cmpsl
jnp
pop
and
into
mov
cmp
xor
out
mov
outsb
jne
xchg
add
mov
mov
cmp
sbb
jmp
xchg
out
in
notb
sub
and
jle
stos
fcomps
loope
imul
dec
mov
jnp
in
cmp
mov
pop
mov
mov
arpl
mov
sub
or
jae
adc
or
mov
stos
xchg
xchg
xor
aaa
or
iret
inc
cmp
jb
addr16
mov
imul
lahf
mov
das
test
or
sub
rorl
or
and
mov
xchg
push
pushf
sbb
movlhps
dec
pop
or
popa
cmpsl
mov
push
stc
aas
popa
hlt
fdivrl
dec
data16
cmp
out
lock
mov
lock
movsl
out
push
xor
ret
jecxz
mov
cmp
mov
movsb
pop
ja
jne
popa
cmc
std
shr
inc
or
push
into
push
xchg
add
je
in
dec
mov
push
dec
sahf
sbb
or
jno
cmp
pop
or
lock
xchg
cmp
mov
lret
or
aam
cmp
jnp
xchg
push
jno
and
sbb
imul
push
push
arpl
mov
fs
iret
out
dec
ret
fmuls
inc
mov
call
in
int3
repz
mov
pop
jg
inc
imul
or
mov
enter
clts
mov
cmp
lds
lahf
dec
jnp
or
dec
mov
insb
pop
loopne
mov
imul
push
dec
push
push
repz
or
push
dec
xor
inc
ja
mov
adc
sub
adc
call
pop
popf
jae
rcr
pusha
mov
enter
mov
pushf
test
popa
inc
sbb
sbb
mov
testb
push
pop
xchg
loop
cmpxchg8b
push
push
xchg
jb
insl
sub
ret
jnp
cli
out
stos
push
mov
cltd
rcr
mov
fisubl
arpl
cmp
test
aam
cli
test
out
rep
imul
push
and
pop
jle
fldenv
add
pushf
stos
xlat
arpl
xchg
ss
arpl
mov
dec
cmp
dec
pop
xchg
les
and
jbe
dec
sbb
mov
xchg
adc
dec
lret
xchg
jg
xchg
inc
lcallw
lods
xor
sbb
and
sub
ljmp
int3
je
notl
inc
lcall
dec
insl
sbb
sub
ja
xchg
adc
xchg
lods
xchg
loopne
jae
sub
xlat
pop
xchg
sahf
sub
ret
dec
int3
mov
movsl
jb
fisttps
rorl
cmp
inc
lds
sbb
xlat
addr16
inc
mov
fcomip
mov
movsl
xchg
js
dec
adc
je
pop
push
arpl
or
fldl
mov
loopne
mov
in
test
clc
or
jp
dec
dec
pop
insl
pop
test
mov
mov
lcall
mov
in
cmp
hlt
dec
jl
push
mov
fmul
jb
mov
sahf
xor
inc
sbb
pop
je
adcb
dec
sbb
mov
mov
es
stos
xchg
inc
cmp
inc
pop
or
inc
mov
pop
xor
sahf
fsts
test
xchg
mov
leave
adc
xor
jae
lret
jge
into
sahf
pushf
pop
jp
je
data16
insl
je
xor
in
xor
das
insl
xor
push
jnp
lahf
scas
xchg
ss
push
mov
fidivl
iret
ljmp
dec
movsl
cmc
pop
adc
icebp
mov
dec
cwtl
adc
cli
jecxz
pop
lds
sbb
cmp
and
adc
mov
adc
scas
mov
clc
xor
xorl
stos
jo
sub
xchg
inc
sub
test
test
stos
mov
jg
stos
outsl
sbb
mov
cmp
fdivrp
pop
hlt
sub
mov
stos
pop
arpl
xor
pop
pop
pushl
adc
pop
subl
push
ds
or
fisttps
dec
ja
jae
push
push
mov
sub
hlt
gs
mov
inc
pop
adc
xchg
insl
adc
jb
or
insl
mov
xchg
ljmp
test
mov
popa
and
push
or
sbb
out
mov
fiaddl
repz
push
pop
xchg
fwait
jecxz
and
xchg
add
and
push
sub
push
insl
or
jle
xchg
in
mov
sbb
std
jns
ret
adc
addb
add
push
jg
or
aas
idiv
popa
mov
repnz
inc
inc
xor
lds
cmp
push
pop
call
imul
mov
mov
outsb
scas
pop
inc
or
lahf
xchg
loope
fucom
pop
mov
nop
inc
repnz
sub
lcall
add
insl
sbb
push
jbe
or
arpl
push
push
or
mov
ljmp
inc
aad
adc
shlb
fisubl
fisubrs
pminub
or
enter
std
in
jb
cmp
cmpsb
lret
or
push
or
out
gs
mov
cwtl
sbb
xchg
fisttpl
testb
js
cmp
rcr
jnp
fiaddl
cmpsl
mov
add
push
loop
or
mov
mov
or
push
ja
push
ret
jg
adc
add
fistps
insb
test
xor
repz
pop
cwtl
mov
fwait
int3
ret
insl
out
jg
ljmp
cli
out
test
xchg
mov
push
idivl
aam
dec
in
and
sub
adc
dec
or
add
mov
sub
imul
mov
xchg
jle
mov
clc
mov
pop
mov
cmp
jge
add
pop
mov
sbb
das
aam
icebp
cltd
inc
jg
data16
inc
data16
mov
dec
push
lds
and
pushf
sarl
in
enter
inc
jae
and
jns
dec
orl
pusha
adc
les
rcrl
aad
iret
add
fnstcw
aaa
mov
pop
enter
mov
outsl
out
or
inc
flds
pop
rcl
mov
sub
adc
lret
xchg
or
push
data16
dec
xchg
jp
add
std
push
xor
push
or
mov
adc
scas
push
jns
mov
jno
bndldx
mov
notb
xlat
mulb
cwtl
mov
cmp
ss
dec
imul
in
sbb
inc
xor
add
enter
imul
icebp
mov
sbb
adc
mov
jmp
scas
push
dec
pop
arpl
lret
jge
xchg
push
add
out
push
call
mov
sbb
mov
test
adc
sub
pushf
add
mov
inc
push
movsl
sbbl
xor
mov
xchg
xchg
push
loopne
mov
je
sub
push
test
sbb
dec
mov
mov
lods
dec
sbb
cltd
push
xor
subl
mov
lcall
inc
rep
int
mov
fisubrl
into
mov
pusha
jmp
push
data16
or
ljmp
rcrb
and
stos
pop
stc
lods
xchg
loope
lea
xor
xchg
test
imul
ds
pop
cmp
insl
lock
xchg
mov
idivl
sbb
clc
ja
pushf
add
stos
xchg
jmp
out
pop
in
ja
mov
insb
lcall
test
inc
adc
ret
cmp
cmp
test
xlat
jb
or
mov
mov
and
bound
sbb
scas
inc
repnz
js
sbb
mov
pushf
orb
jne
cmpsb
sub
je
cmp
and
or
inc
loop
dec
cwtl
and
nop
mov
cli
rolb
sbb
jge
pop
mov
outsb
stc
mov
inc
mov
jge
or
cwtl
prefetch
push
sub
push
inc
cmp
inc
mov
adc
pop
fmuls
mov
je
and
xlat
adc
fbld
mov
sahf
out
lret
out
adc
mov
jmp
mov
ret
push
mov
test
jno
or
jae
dec
jae
fcmove
pop
mov
dec
lods
mov
cmc
fidivrs
jnp
lcall
fisubl
dec
jmp
add
aas
notl
scas
testl
fs
push
or
xorl
push
mov
cmpsl
push
out
pop
mov
rcll
paddw
cli
mov
jp
sbb
mov
mov
mov
cltd
cmpsb
sbb
das
lods
adc
into
sbb
js
sbb
push
adc
xchg
mov
ljmp
pop
inc
adc
imul
fiaddl
xchg
icebp
frstpm(287
xor
and
jl
jnp
add
std
xchg
ret
es
rcl
pop
sub
cmp
jbe
lret
ret
xorb
mov
imul
movsb
lods
or
lock
mov
mov
xchg
mov
xchg
out
fcmovne
fiaddl
sbb
jmp
push
cmc
sti
sub
int3
push
adc
aad
push
or
imul
or
cltd
mov
scas
ljmp
push
inc
and
sbb
mov
push
mov
inc
rol
ljmp
out
adc
and
stos
addr16
popf
lods
hlt
mov
test
xor
scas
aas
call
jmp
mov
cmp
in
loop
fstl
iret
fnstcw
adc
mov
aaa
mov
cmp
add
xchg
pushf
test
push
or
mov
inc
addr16
sub
mov
mov
or
loop
out
inc
mov
fidivrl
icebp
js
mov
jns
inc
lods
xchg
mov
jg
and
pop
mov
xlat
je
addr16
insl
loopne
aam
and
nop
dec
push
sahf
outsl
jno
mov
fimull
call
loopne
mov
jle
mov
push
xor
and
adc
jae
scas
movb
out
aam
nopl
jo
xchg
cmc
xor
test
and
pop
dec
mov
hlt
sub
xchg
push
mov
imul
sub
push
inc
int3
aad
xor
mov
xchg
adc
sbb
cmpl
cmpsl
jmp
repnz
orl
negb
imul
lahf
mov
into
mov
mov
mov
and
faddp
fisubl
mov
pop
xorl
sbb
fwait
add
lcall
mov
mov
insb
xchg
scas
sbb
clc
outsb
push
nop
push
jae
test
aad
out
adc
pop
mov
std
jg
rorl
cld
mov
pushf
daa
movl
stos
lds
loopne
sbb
dec
sbb
fwait
out
xor
dec
cmpsb
pop
sbb
lcall
test
cmp
daa
sarl
arpl
cld
sti
stc
mov
mov
inc
cmp
aas
sub
out
cmp
cld
add
call
or
and
pop
pop
pop
call
push
aas
jno
xor
fisubs
mov
leave
add
cmpsb
cltd
std
hlt
push
inc
dec
outsb
dec
ds
mov
ljmp
sarl
mov
aad
dec
mov
rolb
or
sahf
sbb
jmp
pop
jp
and
into
sbb
xor
enter
fdivp
and
imull
cmp
fwait
jns
call
sbb
int
js
inc
mov
push
add
mov
mov
dec
mov
xchg
stos
xchg
out
mov
out
xor
cld
daa
cmp
mov
mov
mov
xor
dec
pop
ja
cltd
fsubrl
rcll
xchg
dec
cmp
test
sub
mov
and
rcll
xor
shrb
imul
ficomps
daa
insb
cmp
pop
pop
out
test
xor
in
ret
cltd
pop
movsb
or
movsl
jno
inc
add
fildll
dec
mov
pop
xchg
out
shrb
xlat
out
sahf
xchg
push
decb
sbb
into
ret
sarl
xorl
dec
xorb
mov
xor
iret
push
int
adc
sub
test
cmp
mov
mov
push
or
inc
inc
push
mov
cmpsb
xchg
mov
or
repnz
lret
aas
mov
insl
xchg
imul
test
cmp
xor
popa
dec
xchg
and
mov
in
rorl
mov
sbb
mov
or
xchg
cltd
push
pop
imul
and
sub
sub
xor
test
fildl
adc
test
add
adc
xchg
or
fidivs
scas
sub
and
call
jp
pop
bswap
inc
mov
cmp
stos
jb
push
rolb
sbb
sub
rcrl
mov
ret
push
cmp
add
xchg
xchg
arpl
mov
neg
in
mov
out
xchg
loope
rolb
push
lret
sbb
pop
xlat
punpckhwd
sbbl
adc
jl
cld
and
cmpsl
push
insl
pop
pop
add
xor
jle
leave
adc
jge
xor
sub
imul
mov
dec
dec
ljmp
sahf
sbb
sahf
add
mov
adc
sub
or
add
adc
mov
leave
jbe
fsubrs
pop
cmpsb
fwait
in
fmul
pushl
fnstcw
xchg
or
aas
in
subb
divl
mov
daa
jbe
mov
mov
jge
sub
pop
lea
mov
test
xor
insb
jns
jg
xchg
mov
jp
nop
pop
imul
shlb
fcoml
outsb
mov
mov
ss
fldcw
insb
data16
jns
xchg
push
jne
add
jae
movsl
sbbb
inc
or
push
lods
scas
mov
outsb
mov
pop
adc
aaa
aas
loopne
jmp
jnp
sahf
popa
mov
or
movsl
les
cld
pushl
sub
mov
mov
iret
push
or
jbe
aaa
mov
push
sub
mov
int
sub
cmpsb
jno
cmp
push
push
mov
push
ljmp
addl
or
std
push
pop
mov
cmp
cltd
xor
iret
push
ja
cmp
mov
scas
pop
lret
cmp
lea
push
push
pop
in
das
xchg
movsl
call
mov
ror
gs
add
pop
imul
xchg
pop
fisttps
fcompl
cmp
ds
scas
andl
mov
push
pop
jle
out
fsubrl
fwait
mov
cli
sub
mov
dec
add
es
inc
in
jbe
test
cs
adcl
and
ficoms
xchg
test
test
pop
cld
mov
in
sbb
mull
popf
and
inc
xchg
arpl
jae
outsb
cwtl
fsubrs
xor
lcall
out
xor
add
mov
ret
cmpsl
cmp
sub
or
mov
and
adc
ret
cmpsb
shr
out
pusha
jp
mov
jl
xchg
out
and
popa
mov
sub
add
mov
inc
out
enter
dec
jl
dec
outsl
inc
xchg
insl
scas
mov
dec
sub
imul
aam
push
outsl
jg
cld
sub
xor
inc
loopne
pop
mov
pop
inc
das
cmp
fisubrs
fstpt
out
jb
rolb
scas
js
push
mov
jnp
lock
loope
aaa
or
push
inc
xorl
mov
fwait
adc
sub
data16
pushl
pop
lock
lods
pop
cmc
jae
add
sbb
nop
movsl
jp
js
sbb
loopne
cmp
lea
test
incl
test
addr16
sbb
push
lock
insl
andb
fldl
stos
pop
sbb
dec
ret
fst
icebp
dec
ljmp
xchg
xchg
mov
lahf
push
jmp
icebp
repnz
inc
negl
mov
push
cmp
inc
inc
dec
movsl
insl
insl
add
incb
in
es
fstpt
les
mov
and
push
mov
adc
popf
jle
inc
push
xor
or
loopne
je
popa
roll
and
scas
add
push
pop
inc
push
or
push
daa
dec
lar
sbb
cmp
mov
shrl
sti
sbb
ret
test
mov
scas
jbe
call
sbb
pop
pop
popa
xchg
pop
xlat
adc
int3
xchg
test
push
xor
mov
ds
xor
or
fidivl
xor
repz
cmp
and
adc
xor
lods
mov
mov
and
aas
js
xchg
dec
aaa
mov
int
jg
inc
bound
scas
pop
mov
and
in
sub
adc
repnz
sub
push
push
and
shll
push
daa
int3
aaa
pop
mov
movsb
pinsrw
rcl
push
les
dec
aad
cwtl
es
push
cltd
cmc
dec
or
mov
out
scas
cld
aaa
loopne
xor
jmp
repz
and
out
sbb
xor
push
cli
enter
in
xor
pop
xchg
adc
add
and
pop
xor
push
pop
xchg
cmp
repnz
ja
jo
cmp
inc
ret
cmp
dec
scas
out
inc
inc
cmp
loope
add
or
xchg
aad
mov
out
std
sub
pop
push
iret
cli
and
orb
imul
xchg
cmp
test
bound
out
inc
ret
je
shl
andb
loop
inc
repnz
je
test
mov
jo
mov
adc
xor
add
mov
lea
test
push
pop
lret
and
lods
cmp
in
lods
and
cwtl
loope,pn
add
jl
fsubrl
jo
hlt
or
in
dec
mov
or
cmc
ds
sahf
movsb
rclb
rolb
mov
ret
and
add
icebp
roll
mov
cmp
jge
mov
lret
cli
sahf
or
in
xchg
imul
xchg
cs
and
xchg
xchg
pop
scas
mov
inc
dec
mov
iret
inc
jle
movsb
xlat
rcr
pop
gs
cwtl
or
jmp
mov
sarb
inc
lcall
stc
repnz
mov
insb
add
cwtl
xchg
or
mov
fldcw
rolw
int3
imul
ret
mov
cli
pop
push
or
xchg
xlat
stos
mov
sub
mov
sarl
and
clc
fildll
cmp
jl
call
pop
jge
inc
mov
cmp
inc
pusha
jge
movsl
and
sbb
movsb
fcmovbe
inc
xchg
mov
sahf
lcall
into
dec
repz
jmp
or
inc
jmp
mov
jp
shrb
rcll
mov
jp
or
test
lret
xor
sub
xchg
ljmp
mov
aaa
fwait
outsl
xchg
mov
adc
inc
adc
lret
mov
jle
pop
scas
sub
xchg
ds
and
cmp
inc
ret
jp
call
call
les
ss
cmpsb
adc
jge
sbb
and
dec
icebp
loope
push
lock
dec
push
add
mov
mov
jne
enter
lahf
scas
aam
aam
cmp
loopne
movsl
rorl
fstpt
mov
orl
jmp
xchg
loope
xlat
add
lods
adc
and
mov
in
ss
into
jmp
inc
jb
push
pop
cmc
loope
adc
dec
popf
loopne
sahf
movl
jae
jl
clc
pop
jge
imul
xor
fdivrs
and
insl
cmp
adc
mov
add
leave
dec
pusha
xchg
aaa
push
dec
bound
notb
add
cwtl
test
xchg
fsub
adc
repnz
sbb
add
jl
inc
sub
lock
push
jp
cmp
and
aam
push
and
cld
in
cmpsl
js
addl
mov
cmp
and
mov
in
add
adc
std
repnz
orl
fwait
iret
sbb
dec
sub
shll
int
aad
xor
dec
neg
push
incl
adc
pop
mov
pop
and
xor
inc
dec
popf
pminsw
mov
std
ds
mov
daa
cmpsb
xor
lock
mov
ret
add
divl
jle
mov
lcall
xchg
inc
sub
mov
push
jg
sub
aad
xor
dec
es
aam
negl
and
imul
idivl
sar
jg
nop
xor
and
adc
sbb
je
test
xor
test
lds
push
xchg
pop
cwtl
pop
rcl
rcrb
mov
push
push
and
mov
xchg
dec
ret
lea
loop
push
xchg
sub
sbb
sbb
cmp
cmp
mov
dec
sbb
jnp
push
inc
pop
imulb
xchg
dec
xor
push
movsb
iret
aas
adc
mov
sub
out
sub
jl
xchg
shl
inc
inc
and
scas
add
push
cwtl
stc
sub
dec
pop
add
dec
test
fwait
hlt
sub
jge
stos
and
xchg
and
sbb
addb
xchg
jne
loopne
xor
mov
dec
or
push
loopne
daa
ret
stos
pop
mov
sbb
mov
into
gs
mov
dec
add
cmp
call
mov
inc
movb
lock
inc
cmp
sarb
sbb
leave
adc
mov
mov
xchg
cmc
idiv
pusha
mov
adc
push
mov
mov
dec
cmp
or
movsl
nop
xchg
push
int
int3
test
push
sarl
fcomps
or
movsl
bnd
lcall
stos
mov
xlat
fcmovu
adc
add
add
ja
pop
mov
mov
in
mov
lret
xchg
add
mov
xchg
arpl
push
cmp
jmp
sub
pop
pusha
xchg
das
scas
rcrb
out
filds
inc
pop
js
xor
jge
jnp
mov
out
and
and
out
sahf
mov
or
mov
mov
mov
and
dec
cmp
mov
scas
mov
adc
push
aas
xor
mov
loop
adc
ficompl
add
icebp
mov
xor
test
and
or
or
call
test
pop
stos
ja
jbe
loope
jp
neg
in
mov
xchg
or
test
dec
cwtl
loope
and
push
icebp
add
cmpsb
test
ja
cltd
pushf
xchg
add
cltd
xchg
cmpsl
out
ret
sahf
jb
dec
orb
push
or
pop
xchg
ret
jl
jmp
sbb
rcrl
xchg
call
imul
filds
scas
mov
mov
mov
jnp
repz
inc
xchg
inc
pop
lret
repz
lock
push
sti
stc
dec
stos
mov
adcl
cmp
cmp
ficompl
cli
inc
dec
push
xchg
jb
mov
mov
mov
inc
scas
inc
ret
mov
jmp
push
sbb
icebp
mov
or
mov
push
mov
xchg
jge
cmp
add
mov
and
cmpsb
lcall
mov
push
fdivrs
cmpsl
xor
xor
inc
or
sti
add
xchg
push
fistpl
inc
mov
test
cmpsl
jg
mov
xchg
mov
test
sub
ret
mov
xchg
dec
pop
jbe
js
lods
out
mov
push
xor
xchg
push
xor
jno
pusha
inc
jbe
daa
mov
push
iret
shl
loopne
add
mov
aad
stc
ret
cmp
pop
mov
je
push
xor
ret
or
xlat
cmp
sbb
and
test
pop
mov
jnp
sub
fwait
mov
mov
subb
xor
jecxz
call
cmp
es
enter
jne
enter
or
loop
mov
sub
push
inc
jg
bound
loopne
mov
gs
lret
xor
pop
push
inc
loop
sahf
xchg
or
xor
iret
cli
gs
xor
push
test
sbb
test
xor
andb
cmp
pop
and
fwait
sub
into
stos
clc
push
xchg
mov
fwait
push
inc
subl
imul
xchg
sbb
dec
mov
and
xchg
sub
je
lods
cli
and
or
movl
xchg
dec
lcall
push
jbe
lcall
mov
jnp
lcall
stos
add
flds
mov
inc
mov
mov
mov
in
in
push
stc
int3
xor
mov
or
jl
mov
aad
sbb
fs
mov
jno
lret
sub
ds
inc
mov
lds
cwtl
sub
mov
jge
jl
imul
andb
mov
dec
mov
aam
adc
pushf
int3
lock
mov
fiaddl
outsb
jne
adc
and
popf
mov
xor
aaa
xor
push
incb
testb
xchg
adc
or
test
cmp
movsl
out
test
popa
push
loopne
fcmovu
les
lods
adc
fistps
out
inc
subl
xor
inc
push
fwait
aas
adc
popf
in
sub
or
dec
lcall
jnp
push
mov
bound
xchg
xor
aam
lahf
pop
shlb
insb
mov
mov
shrb
adc
out
or
inc
cmp
gs
cmp
pop
jae
clc
push
mov
mov
push
add
pop
fwait
xchg
cmp
leave
xchg
aad
cltd
stc
inc
scas
push
mov
in
sbb
cmp
outsl
cmp
mov
jbe
outsl
int
inc
jb
mov
scas
and
sbb
in
fbstp
loope
imul
cmc
sbb
gs
in
imul
jbe
inc
cmpsb
out
fnstsw
mov
pop
dec
sub
sub
or
lock
call
aam
mov
mov
das
sbb
push
pusha
pushf
and
test
mov
mov
mov
mov
popa
add
enter
dec
or
ret
pushf
jns
xor
push
xchg
rcrl
cvtdq2ps
xchg
movsb
test
js
jo
xor
cmp
or
jle
push
inc
xchg
in
popa
lret
cmpsb
stos
outsb
and
leave
lods
ja
in
lds
or
add
push
xchg
xchg
pop
sub
icebp
cld
cmpsb
cmp
push
jecxz
fildll
mov
rcl
dec
roll
fwait
aaa
cmpsb
daa
nop
adc
pop
andb
mov
push
scas
jae
mov
jle
int3
xor
aas
and
outsb
push
leave
jns
mov
loope
sbb
dec
shlb
stc
ret
and
js
loop
repnz
mov
popf
cli
push
lds
loop
jnp
jns
dec
cmp
scas
movsb
out
or
data16
icebp
out
push
sub
lret
mov
sub
sub
ss
std
xchg
scas
stos
daa
xorb
stos
sub
dec
jnp
and
rcr
in
or
jl
or
mov
rcll
push
dec
adc
jns
test
sahf
mov
testb
fadds
pop
pop
inc
push
stc
jb
and
cli
mov
loope
out
ja
jbe
lock
mov
add
das
cld
mov
jge
xchg
mov
cmovl
inc
mov
les
stos
pop
inc
das
dec
pop
jg
hlt
jg
sub
xchg
sub
pop
sti
mov
pop
xor
call
mov
inc
mov
mov
enter
sub
and
shrb
sbb
test
mov
and
inc
xor
jns
aaa
loopne
xor
xchg
lea
push
int3
clc
scas
and
push
hlt
cmpsl
sub
rcrb
rorl
fdivs
dec
cmpsl
add
shl
test
inc
xchg
lret
movsb
mov
iret
rcrl
cltd
test
das
scas
inc
inc
daa
sub
std
xor
adc
sbb
cld
mov
pop
mov
lock
js
test
mov
leave
ljmp
sbb
cli
xor
mov
or
xor
mov
adc
fcomps
push
sahf
cmc
push
les
push
leave
popf
push
mov
cli
imul
push
jge
leave
pop
gs
add
scas
pop
sbb
sbb
test
js
mov
jae
daa
test
jle
imul
out
mov
cmpl
dec
mov
dec
push
loopne
sub
pusha
hlt
jo
in
aam
call
adc
insb
xchg
outsl
mov
dec
cmp
push
int
mov
les
pop
pop
push
hlt
sti
jmp
lret
icebp
icebp
fimuls
cwtl
into
push
inc
or
mov
adc
xchg
push
jns
sub
xchg
pushf
das
pop
sub
lcall
push
sbb
test
mov
popw
cmp
jbe
jmp
inc
push
mov
cltd
nop
cmc
cmp
adc
xchg
scas
lea
rclb
adc
mov
sub
push
je
stos
pop
cmc
sub
jecxz
stos
pop
xchg
cmp
jne
xchg
popf
push
dec
cmp
in
mov
idivb
in
adc
jmp
shrl
adc
leave
sbb
fsubr
pop
rcrl
dec
xchg
or
fistpll
icebp
xchg
inc
lods
insl
subb
das
xchg
repz
out
mov
inc
xchg
loopne
inc
or
leave
push
ljmp
sub
pop
push
aaa
outsl
mov
aad
inc
or
and
inc
iret
out
fsubl
mov
jl
syscall
pusha
loopne
loopne
inc
push
mov
add
mov
xchg
scas
repz
push
mov
sub
shll
hlt
cmc
testl
js
mov
fcompl
mov
xchg
cmp
lea
sbbl
mov
and
insb
scas
imul
sub
jg
sbb
bound
mov
dec
mov
dec
popf
pop
pop
shll
scas
pop
sahf
push
lods
ja
xor
sbb
arpl
std
mov
sbb
scas
jno
mov
pop
xchg
movsb
dec
rcrb
sbb
xor
fdiv
xor
iret
in
flds
shll
bound
adc
pop
dec
or
frstor
mov
dec
inc
jge
adc
sbb
dec
mov
push
dec
xchg
mov
jne
pop
stos
bound
in
xor
cmp
sbb
jecxz
mov
lock
cltd
repz
pop
jp
pop
pop
ds
aaa
scas
fwait
loopne
jbe
add
lcall
dec
hlt
inc
sti
jbe
orb
xchg
xchg
xor
jbe
es
rcrl
les
std
push
out
inc
adc
in
pop
or
push
dec
sbb
fdiv
std
hlt
jne
cmp
xor
push
stos
jg
xor
adc
sbb
or
jp
cmp
lds
cli
sub
outsl
mov
sbb
fcmovnbe
jmp
gs
call
or
cmp
mov
cmp
mov
imul
mov
dec
clc
push
and
sbbl
jns
mov
xor
add
push
les
lods
subl
das
inc
adc
push
adc
mov
mov
or
ja,pt
jne
add
clc
jo
cmp
ret
sub
cmp
jmp
icebp
out
and
xlat
inc
and
icebp
bound
dec
lret
call
in
test
fidivrs
sub
adc
xchg
mov
jno
dec
mov
xor
mov
inc
clc
add
add
mov
je
in
mov
sub
test
adc
sbb
and
call
fidivl
inc
mov
pop
fwait
cmc
pop
frstor
sbbb
mov
push
mov
fwait
sbb
popf
or
dec
je
cmp
les
pop
shlb
mov
popf
test
insb
stos
mov
jnp
jnp
cwtl
mov
and
mov
adc
dec
sbb
pop
jl
js
and
push
or
fstl
stos
push
leave
push
loop
sub
sub
mov
jg
lret
cmp
imul
jne
xchg
xor
jl
push
cwtl
xor
fwait
sbb
or
push
iret
jl
data16
cwtl
sub
mov
stos
cmp
adc
push
roll
loopne
lcall
addr16
leave
push
out
pop
movsb
test
add
ret
sub
insl
mov
movsl
lret
movsb
jmp
cmp
jle
movb
adc
ja
sbb
pop
sarb
test
mov
mov
mov
std
out
test
scas
cltd
push
xor
xchg
ret
jne
stos
add
sbb
mov
repnz
loopne
pop
sbb
push
aaa
neg
or
or
loopne
hlt
in
pop
arpl
loop
out
push
sbb
inc
lock
mov
push
or
sbb
adc
sub
add
cmp
push
pop
dec
repnz
mov
movb
sti
lea
jge
push
mov
cmp
jb
xchg
xor
jp
sti
lret
sbb
arpl
xor
fistl
lea
sub
inc
movsl
call
orl
je
jne
xchg
cmpsl
add
adc
idivb
cs
ret
xor
leave
out
mov
test
add
cmp
adc
mov
xchg
stc
sub
and
sahf
sbb
dec
mov
in
out
inc
push
rclb
cmp
in
push
or
pusha
jnp
loopne
dec
lret
mov
loop
xchg
mov
imull
enter
push
mov
mov
movsb
shll
xchg
push
push
pop
jp
into
dec
sbb
mov
sub
pop
outsl
inc
adc
xlat
pop
rclb
cwtl
pop
movb
outsb
or
cmp
bound
or
push
adc
repz
pop
movsb
sti
sbb
cmp
sahf
std
cmp
jo
cmc
jl
and
decl
sub
scas
sub
or
jo
and
rolb
sbb
leave
shr
or
fdivs
add
mov
sbb
out
lea
int
popf
stos
out
cwtl
fcomps
in
test
add
jne
mov
fldcw
xor
jmp
loop
test
jg
add
mov
insl
aam
icebp
sbb
cmp
in
movsl
mov
scas
add
inc
popf
sbb
adc
pop
inc
ss
inc
inc
incb
mov
jo
and
jno
pop
lahf
loop
xor
out
xor
in
mov
enter
mov
fidivrs
fisttpll
mov
pop
ret
ljmp
fsubr
mov
mov
jecxz
xchg
inc
and
cld
pop
and
in
inc
mov
lret
sub
adc
dec
xchg
outsb
add
xchg
adc
inc
xchg
xchg
push
roll
aam
leave
jg
sbb
jbe
out
or
lds
pusha
insb
dec
xchg
lahf
inc
movsb
mov
dec
inc
xchg
jo
hlt
xor
fwait
clc
rolb
adc
adc
fistl
adc
pop
jbe
jnp
jle
ss
data16
xor
adc
imul
insb
es
sbb
xor
push
dec
jno
xchg
dec
pop
fwait
xchg
stos
into
stos
pop
add
aam
imul
addl
ret
cld
insl
rep
mov
and
repnz
imul
jg
sbbb
andl
sbb
push
pop
sarl
aad
frstor
pop
out
jnp
shll
mov
mov
jmp
testl
mov
dec
stc
add
mov
fidivs
sbb
stc
mov
xchg
ret
adc
outsb
push
sbb
fistps
addr16
enter
mov
mov
cmp
loopne
inc
into
sbb
sbb
imul
cltd
fisttpl
inc
fcoml
out
in
out
mov
movb
in
mov
fcom
scas
dec
mov
add
cmp
xor
inc
in
pop
mov
lds
scas
adc
sub
xor
jns
lret
cmp
pop
push
outsb
xor
and
mov
popf
mov
pop
icebp
js
fdivr
loopne
mov
sub
add
dec
out
sbb
int3
xor
lret
lock
inc
jle
pop
sbb
mov
sbb
ljmp
cmp
xor
pop
cwtl
into
and
call
sub
dec
lret
scas
faddl
add
callw
mul
into
inc
push
jae
pop
and
mov
imul
and
cmc
cmc
mov
insb
icebp
dec
cs
cmpsl
add
adc
out
insb
loope
xchg
cmp
insb
inc
add
sahf
daa
push
loope
jg
jg
inc
fldenv
pop
sbb
push
fmul
les
jb
lahf
ljmp
bound
jp
jmp
xlat
inc
js
sbb
xor
and
push
add
stos
mov
sbb
insb
es
push
fsub
mov
movups
cmc
pop
fdivrs
xchg
mov
ss
ds
int3
add
mov
cmp
adc
iret
cs
xchg
bound
xchg
jne
or
xchg
jp
andps
sbb
lcall
mov
test
in
ljmp
xor
jno
lods
cmpsl
cmpsb
cmp
ds
add
adcb
nop
lahf
push
xchg
fstpl
aad
mov
cwtl
push
fucomi
dec
loop
cmp
push
std
call
iret
ret
jbe
cmp
sbb
call
inc
repnz
inc
out
testb
fldenv
addr16
cmp
repz
scas
mov
hlt
sub
dec
sub
dec
out
adc
adc
ljmp
dec
sbb
pop
bound
pop
movsl
das
pushf
outsb
lret
jecxz
and
cmp
push
jl
adc
insl
or
popf
bound
xchg
in
sbb
popa
jo
or
pop
sub
lds
xchg
lds
mov
jns
dec
add
fldt
nop
aam
jnp
mov
into
lods
test
sbb
aam
mov
std
adc
xor
ret
shll
sub
or
push
inc
jbe
sbb
xchg
je
lods
cli
outsl
fwait
stc
xorb
outsl
test
ret
mov
in
stos
rcrb
aad
sub
push
add
roll
pop
aad
aas
add
fwait
repnz
push
mov
add
in
add
addr16
and
mov
imul
outsl
jno
cmpsb
stc
scas
sbb
sub
fucomp
cwtl
push
jns
xlat
shrl
orl
out
add
daa
mov
mov
inc
test
sarl
frstor
cmp
inc
iret
or
daa
int
inc
jne
push
negb
mov
and
mov
jmp
sub
mov
pushf
lahf
pop
test
popa
inc
stos
int
mov
cmp
imul
jg
fnstenv
roll
movl
rol
int3
lret
ret
lahf
in
jp
andl
jnp
daa
pop
cmp
mov
mov
jecxz
je
dec
out
into
xchg
lahf
sub
imul
and
pushf
cmc
adcl
jp
pop
pop
ret
fidivs
cmp
not
mov
scas
mov
xchg
push
cmp
fdiv
pop
or
int3
popf
shlb
repnz
loope
cld
loop
push
sarb
push
xchg
jno
in
jae
push
cmp
xchg
add
inc
add
sub
pop
lcall
sub
loopne
std
mov
int
fnstenv
mov
sub
inc
push
adc
outsl
rcrb
jno
out
arpl
mov
into
out
jb
arpl
xchg
cltd
outsb
add
lock
xchg
xor
push
inc
or
mov
mov
in
adc
jge
add
or
and
jmp
push
xor
mov
hlt
sbb
sbbl
movsb
adc
lods
hlt
and
push
inc
inc
movl
lock
imul
arpl
in
pop
inc
cltd
add
cmc
sub
xchg
and
jl
jmp
adc
jp
js
inc
fsub
and
jne
mov
fistpll
mov
ja
add
scas
mov
out
pop
call
mov
xchg
aad
icebp
mov
adc
cltd
jo
jnp
ljmp
test
add
push
andl
pushf
dec
push
loope
ret
nop
inc
mov
mov
push
pop
stos
and
leave
push
arpl
mov
mov
xorl
ljmp
rorl
cli
test
inc
cmp
xchg
outsl
dec
inc
inc
jo
lock
inc
or
sbb
mov
and
xor
cltd
xor
and
pop
iret
jne
pop
inc
add
ss
push
xlat
dec
lea
ficoml
add
inc
daa
pop
xor
pop
mov
mov
and
bound
fsts
stc
fwait
xchg
cmp
or
pop
inc
mov
mov
hlt
ja
push
xor
xorb
inc
fimuls
or
lods
mov
push
xor
mov
out
aam
imul
pushf
movsb
enter
cmc
sub
in
and
lods
std
push
jl
imul
dec
pop
test
mov
pop
aad
mov
jo
xor
cmp
add
scas
xor
xor
adc
dec
in
int3
dec
inc
lahf
ljmp
and
out
sub
inc
pop
pop
mov
aad
or
push
gs
pop
jge
push
dec
mov
cmpl
sub
jmp
adcb
lahf
sub
int
fmull
mov
and
aaa
out
xor
mov
lret
dec
sub
jns
std
xchg
btr
lds
jmp
mov
inc
in
subb
and
sub
fwait
cmc
sub
cmp
int
lcall
rcrb
in
mov
mov
mov
loop
in
stos
rorl
jecxz
dec
shl
sbbl
xchg
cmp
xchg
xor
jge
das
adcl
enter
imul
fidivl
ror
push
bound
mov
mov
cmp
cmp
cmpb
push
cmpsl
ja
xor
mov
or
or
add
cmpsl
popf
xchg
imul
push
insb
add
adc
xchg
mov
jae
xchg
in
sbb
sbb
les
cmp
gs
jp
scas
negl
push
cwtl
ja
or
lods
ljmp
cmpsb
pop
test
lcall
pushf
jmp
lret
cmp
test
mov
out
push
fld
push
ss
repz
insb
and
and
mov
stc
push
decb
in
jns
cmp
repnz
leave
pusha
fcmovnbe
aas
jmp
out
and
sub
lods
lds
jns
mov
lods
jnp
cltd
add
std
out
cmp
outsb
cli
lcall
and
aad
sub
jg
mov
inc
sub
icebp
pop
push
loop
fmul
leave
cltd
sbb
push
ficoms
cmp
popf
movsb
insb
andl
loope
mov
pop
push
ss
test
mull
mov
in
cmp
adc
adc
jge
jb
mov
out
dec
inc
mov
cmpsl
cmpsl
xorl
add
dec
mov
push
xor
pushf
jae
test
lret
mov
xchg
or
mov
movsb
icebp
fwait
push
jge
pushf
lret
sbb
pusha
loop
xchg
std
cmp
xchg
pop
call
pop
clc
pop
jbe
lods
es
in
stc
push
jl
xor
test
mov
arpl
jl
push
dec
je
nop
pop
test
cmp
xchg
mov
idivl
lahf
jbe
in
mov
repz
or
push
addr16
jno
rorl
dec
stos
fisttpll
mov
in
jmp
sbb
iret
mov
jecxz
jo
sub
insb
inc
das
sbb
xor
lret
push
shrl
adc
jns
mov
mov
jns
aas
das
out
ds
arpl
mov
jl
repz
rolb
adc
addr16
aas
fs
aas
fs
push
adc
leave
notl
cld
and
jo
xchg
xchg
push
ret
dec
sbb
mov
sbb
and
sub
push
fwait
jno
jbe
xor
les
sti
fldcw
enter
gs
dec
dec
leave
push
fbstp
cmp
sub
cmp
and
sub
xchg
je
lock
dec
fcmovne
and
mov
sub
mov
jno
mov
arpl
scas
mov
jecxz
stc
movsl
adc
scas
and
iret
and
pop
daa
das
sti
mov
into
and
xrelease
enter
jne
jecxz
sbb
pop
clc
jg
jo,pn
sub
cmc
push
adc
sbb
mov
insl
mov
test
lds
enter
xor
test
ja
or
into
lahf
repnz
imul
mov
in
mov
je
gs
nop
testb
add
mov
cmp
adcl
repz
out
out
lcall
ljmp
popa
push
add
fwait
mov
jl
inc
sti
mov
data16
das
mov
imulb
pop
fidivrs
jb
ficompl
outsb
call
or
sbb
inc
mov
and
push
or
mov
pop
sbb
mov
or
ljmp
popa
lcall
mov
add
rcrb
out
aas
lahf
push
lahf
add
sub
aad
inc
jge
and
out
add
mov
cli
cmpsb
sub
jbe
in
bound
jle
gs
loope
stc
or
test
mov
jno
outsb
ja
faddl
mov
add
lods
test
das
clc
in
movl
fcom
leavew
mov
mov
or
aas
aad
dec
je
gs
shrb
rclb
push
or
leave
outsb
cmp
push
and
out
inc
aam
aas
xchg
push
cmc
lock
push
inc
inc
add
ret
das
or
push
mov
add
in
xor
inc
cmp
xor
pop
jle
inc
inc
test
aad
xor
sahf
rorb
mov
xor
xor
add
adc
mov
cltd
push
mov
popf
popa
jns
cmp
sub
inc
push
imul
sti
and
in
push
in
xor
adc
imul
cmp
popf
lret
loop
mov
lahf
lods
lret
adc
push
jg
stc
mov
loop
cmpsb
dec
cmpb
or
cmp
ss
mov
hlt
sub
push
addl
pop
dec
fldcw
ds
mov
push
aas
jecxz
fists
movsb
xchg
pusha
repnz
pop
dec
jo
aam
aad
ss
xchg
inc
push
or
dec
mov
cmp
stc
cli
mov
push
xor
push
add
adc
and
push
pop
out
imul
dec
leave
mov
jns
or
les
lock
adc
mov
ds
sbb
repnz
retw
cmp
mov
pop
inc
dec
mov
mov
std
scas
cmp
and
mov
sti
mov
sti
cmp
lret
cmp
xchg
sbb
xor
pop
dec
push
lods
int
insl
jp
std
inc
cmpl
mov
gs
mov
mov
push
mov
push
mov
dec
lds
stos
mov
adc
inc
cld
mov
out
jae
add
rcrb
jle
mov
sbb
subl
loope
push
push
adc
jb
push
subl
xor
stc
outsb
cmpsb
in
mov
aaa
inc
inc
pop
ret
lods
mov
push
mov
sub
jns
aam
sub
push
inc
jp
fdivs
ljmp
xor
imul
dec
jo
mov
fsubl
pop
lds
sti
or
inc
jne
lock
cmpsl
in
mov
loop
push
jmp
fldl
movsb
imul
lods
mov
fcomi
movsl
xor
aad
in
enter
fstpt
aad
add
push
push
xchg
icebp
push
in
test
ret
push
icebp
xchg
icebp
xlat
jo
lret
aas
mov
test
sbb
xor
int3
lea
or
les
insb
test
out
xchg
add
insb
pop
shrl
icebp
push
das
pop
icebp
push
mov
jno
mov
sahf
loopne
xor
adc
sub
mov
shll
lahf
stc
adc
jmp
cli
int3
cmpsb
fcom
test
xchg
cmp
mov
mov
jnp
xlat
jle
and
inc
xor
inc
out
pop
inc
cwtl
lock
mov
jg
fs
or
frstor
sbb
jo
imul
leave
xor
pop
xor
sti
fildl
int
dec
int
leave
cmp
cli
jns
testl
cltd
xchg
or
sub
fidivrl
daa
insl
xchg
and
pushf
insl
repnz
adc
jle
jno
mov
cwtl
aad
fnstsw
xorb
cmp
in
pop
sub
notl
inc
fwait
jg
lahf
addr16
lods
es
test
add
loope
hlt
mov
ljmp
and
gs
or
outsb
xchg
aas
cmpsb
test
aam
jg
mov
cmp
scas
push
imul
int
es
andl
mov
in
mov
scas
xchg
mov
lahf
xor
and
mov
pop
and
or
stos
stos
sbb
divb
pop
or
jl
mov
and
jg
jle
sarl
push
test
xchg
lret
bound
sbb
xlat
cmc
fmull
pop
mov
lods
or
out
adc
imul
ss
das
movsb
ja
jae
xor
out
movsb
or
in
insl
out
lret
jmp
xor
repnz
call
pop
cli
pusha
dec
fdivrs
sbb
adc
and
push
inc
cmc
xor
dec
loop
ret
sbbb
icebp
ret
jecxz
sbb
int3
popa
cwtl
out
stos
jecxz
xchg
insl
stc
push
test
jg
push
xchg
inc
pop
jmp
mov
mov
xchg
fisttpll
fbld
and
mov
jle
mulb
sub
mov
in
or
sarb
xchg
jae
xchg
and
mov
fs
fs
cmp
lahf
icebp
les
adc
sub
rolb
inc
jbe
xor
fsubr
stos
pop
arpl
test
ljmp
mov
cmpsb
adc
jge
das
repnz
fidivrs
loopne
mov
out
jns
shl
bound
fabs
loopne
xlat
adc
out
pop
stos
xchg
mov
jbe
iret
lahf
divb
or
test
mov
lret
pop
push
lods
mov
cmpl
jl
push
hlt
fsubp
in
mov
loopne
icebp
imul
adc
jnp
bound
sub
inc
dec
call
pop
aad
add
mov
push
sahf
cmp
addr16
and
dec
push
sti
xchg
mov
and
mov
fucomip
sub
or
lcall
mov
fwait
jae
leave
orb
jg
inc
sbb
pusha
xor
repnz
dec
fnstenv
ljmp
add
outsb
and
adc
lods
xchg
adc
mov
xor
mov
dec
push
mov
xlat
xor
adc
stos
or
lea
jp
out
out
in
pushf
fstpt
outsl
or
jno
adcb
sub
and
sbb
lds
mov
loope
mov
lcall
mov
xor
adc
aad
xchg
sbbb
xchg
movsb
js
imul
filds
xor
or
mov
call
cmpsl
iret
test
pop
adcb
jns
sub
and
sbb
rol
dec
loope
notb
fimuls
test
decl
rorb
lahf
sub
stc
in
pop
cmp
movsb
cli
out
xor
push
jnp
test
sub
cmpl
and
xchg
mov
push
xchg
dec
inc
mov
cmp
test
arpl
and
mov
mov
inc
inc
mov
dec
filds
je
outsb
mov
cmp
mov
and
repnz
aam
add
cmp
or
jb
shll
in
aaa
or
int
pushf
jae
jo
add
and
dec
fwait
popf
cmpsb
mov
or
cmp
rorb
pop
jmp
pop
gs
enter
hlt
cli
push
or
pop
jp
or
shlb
push
out
cli
setb
sub
inc
add
movsb
int3
jae
fisubl
pop
sbb
popf
pop
rcrb
scas
sub
fnstcw
cmp
lcall
pop
out
push
sub
jle
jl
pop
cmpsb
sarb
ja
or
gs
out
loop
ljmp
sahf
cmp
jle
xor
gs
inc
and
inc
fs
mov
rcll
out
fstpl
popf
outsl
daa
les
xchg
aas
xchg
stos
sbb
sti
fbld
push
subb
mov
jae
xchg
movsl
mov
pushf
stos
nop
mov
pushf
mov
sbb
cmp
fnstsw
fnstcw
adc
push
add
dec
xor
xchg
and
fmul
ss
push
cmc
inc
sub
jmp
repz
adc
mov
add
adc
fmuls
in
pop
sarb
repz
std
add
aad
dec
call
inc
mov
mov
cmpsl
cmpb
sub
sub
subl
stos
push
jg
sahf
es
aaa
inc
sub
rolb
xor
mov
loopne
jnp
ret
xor
inc
movsb
icebp
test
add
xor
stc
push
daa
lods
pusha
imul
mov
xor
mov
icebp
js
pop
add
mov
xchg
lret
iret
sub
enter
addb
movb
pop
or
fildl
inc
scas
in
jmp
mov
add
inc
neg
lret
and
push
push
and
pop
outsb
lret
iret
mov
cmpsl
in
fnstsw
jecxz
fldl
jle
jb
pop
inc
mov
lcall
mov
notb
arpl
cmp
jns
mov
imul
xor
shll
pop
inc
mov
mov
mov
dec
aam
sahf
adc
and
dec
dec
inc
cltd
loopne
decb
insl
adc
leave
aad
add
inc
sti
out
mov
dec
stos
aad
fmul
movsl
popf
insb
or
clc
lock
sub
push
fs
loope
add
push
jg
pop
mov
fnstcw
adc
not
test
js
jecxz
clc
cmp
jnp
xchg
mov
mov
scas
mov
jg
dec
outsb
push
mov
add
enter
and
mov
pop
xchg
xor
paddsb
add
ja
lret
xorl
stc
popf
dec
push
pop
sarb
movsb
mov
cmp
inc
dec
pushf
sub
aam
pop
imul
lea
stos
sbb
xchg
and
cs
cmp
jno
pop
stc
icebp
inc
insl
cmp
or
rcrl
sarl
cmp
mov
fld1
add
push
mov
push
fiadds
mov
adc
imul
dec
cmp
dec
sbb
cmp
push
je
pop
mov
mov
mov
push
adc
testb
test
insl
dec
jl
and
pop
mov
movsb
das
pop
and
mov
mov
mov
sti
or
in
mov
jbe
lret
inc
push
pop
repz
ficoms
push
movsl
push
test
xor
jmp
lret
xorl
jne
lods
fcomp
test
out
es
jecxz
shll
pop
mov
leave
lcall
sahf
cli
lods
inc
dec
imul
mov
inc
cmpl
out
sbbb
ret
adc
ret
cmp
pop
daa
daa
in
mov
mov
scas
inc
popf
sub
out
addr16
int3
xlat
gs
into
adc
sub
call
mov
jb
push
sbb
inc
fidivs
mov
mov
fcmovb
mov
and
orps
pop
push
mov
popa
aad
fcmovbe
xor
push
push
sub
mov
dec
call
lods
jno
insb
pop
enter
fildll
dec
mov
dec
scas
adc
mov
sub
icebp
lret
xor
ljmp
lds
jg
push
int3
test
xchg
pop
push
cli
push
xlat
fsubr
or
sub
and
sbb
sbb
xchg
adc
pop
scas
push
dec
push
inc
clc
scas
add
add
in
jae
add
shlb
jbe
in
xchg
test
mov
pop
in
rolb
push
aad
mov
in
pushf
xchg
push
inc
mov
mov
pushf
iret
nop
lock
mov
mov
mov
sub
adc
xor
shll
es
in
push
jmp
lret
adc
or
in
jae
icebp
lcall
jge
ss
into
inc
mov
out
cmp
sub
xlat
addr16
ss
dec
stc
cmp
jl
mov
or
mov
mov
jne
in
inc
mov
fidivrl
outsb
cmp
sub
fbld
pop
jno
loop
aaa
fdiv
in
cmp
jg
mov
mov
out
in
pop
cmovs
mov
mov
loope
ret
fcmovne
xchg
aaa
outsl
andb
push
jns
out
push
push
mov
pushf
dec
mov
popf
ror
inc
and
pusha
or
lods
cmp
enter
and
out
in
and
and
jp
cs
adc
mov
mov
stos
cld
xchg
push
outsl
gs
cwtl
pop
ljmp
add
mov
mov
xchg
rorb
and
lcall
leave
inc
jne
push
xor
mul
outsb
jno
lahf
loop
test
push
mov
jg
iret
lods
and
xor
mov
mov
int3
and
hlt
in
xchg
pop
jne
dec
xor
aam
inc
cmp
add
out
cmp
or
fmuls
aaa
mov
test
sub
sbb
mov
and
das
clc
in
lea
mov
push
aam
lods
push
adc
pusha
cmp
and
mov
sbb
jg
aaa
adc
pop
dec
mov
adc
js
fcoml
cwtl
pop
cmp
xlat
mov
pop
mov
es
pop
pop
cld
ss
xchg
push
mov
lock
ficompl
cwtl
pop
xor
imul
sti
dec
push
pop
mov
shlb
cmc
div
xchg
xchg
insl
ret
out
or
and
inc
mov
cmpl
imul
repnz
jns
inc
roll
nop
xlat
mov
aaa
test
dec
inc
fs
bound
std
inc
xor
daa
adc
sbb
in
sub
outsl
lock
cmp
xchg
add
notl
fidivrs
xor
fs
fbld
test
add
test
cs
jo
out
adc
and
call
inc
mov
adcl
pop
pop
mov
pop
add
mov
fidivrs
push
mov
xchg
loope
jbe
imul
lea
adc
shll
popa
in
mov
and
mov
pop
or
xchg
pusha
ret
cmp
cwtl
mov
cmp
shlb
ficompl
stos
xchg
push
movsl
mov
arpl
rolb
adcl
cmp
sbb
rcl
jo
and
dec
out
imul
arpl
arpl
sub
icebp
inc
iret
cmp
jno
pop
nop
int3
pop
cmp
dec
fincstp
roll
out
jmp
jle
loopne
and
popf
cmpsl
fnstsw
cmpsb
cmp
mov
xchg
push
mov
xor
jo
ret
jbe
jecxz
lcall
mov
xor
push
push
dec
push
mov
sbb
sbb
xor
jg
ljmp
and
xchg
and
mov
stos
aam
sub
jmp
sbbl
dec
mov
dec
ss
xchg
pop
push
test
jp
adc
or
mov
cltd
mov
cmpsb
out
repz
mov
mov
aam
fdivr
xchg
xchg
xor
fldt
or
adc
jp
cmp
xor
sbb
shll
mov
dec
jmp
jne
sbb
fucomip
push
lret
loope
mov
sbb
adc
push
push
icebp
pop
mov
adc
stos
adc
push
xor
sbb
das
xchg
leave
ds
fdivp
add
lcall
dec
pushf
sub
in
mov
cmp
loope
rcl
popl
pop
sub
jno
outsb
inc
push
push
xor
mov
jb
fsub
and
inc
mov
push
cmc
xlat
mov
dec
mov
stc
push
adc
and
sub
sbb
testl
jg,pt
cwtl
sahf
popa
add
fistpll
jg
sti
pop
push
out
jb
mov
je
inc
push
stos
sub
loopne
popa
jno
cmp
popa
cmp
push
push
test
mov
sbb
shr
and
sbb
sub
das
mov
std
or
mov
adc
ret
or
inc
cmpsl
sbb
addr16
push
dec
fwait
push
push
insl
xorb
dec
sbb
iret
out
or
add
cwtl
xlat
ljmp
fisubs
mov
adc
mov
dec
fcomps
dec
shl
iret
sahf
cmc
sub
inc
fstp
pop
push
inc
push
inc
test
pop
scas
lods
imul
addr16
xor
in
in
ret
cs
cmp
cmc
adc
sbb
imul
loop
or
inc
cli
and
fimull
xor
jae
mov
jle
cmp
push
xor
sbb
cli
fcmovne
mov
pop
lods
and
push
das
mov
pop
dec
adc
pop
test
xchg
sbb
call
stos
jo
jae
adc
in
cmp
repz
cli
adc
ja
popa
jl
pop
sbb
addl
push
xchg
in
popf
mov
aas
jp
xor
pusha
xchg
subb
pop
adc
add
dec
jecxz
imul
outsb
aam
sbbb
jne
dec
ja
cs
sub
push
ret
scas
pop
inc
out
out
jmp
push
gs
mov
adc
ret
dec
mov
dec
xchg
out
adc
lret
xchg
lea
out
and
push
sbb
divb
pop
imul
and
xchg
sub
or
push
call
pop
stos
pop
or
jp
mov
mov
and
push
outsb
aas
aam
pop
sbb
xchg
gs
inc
sub
in
or
push
mov
sbb
out
out
xor
popf
xor
xchg
sbb
aad
test
push
sub
and
loop
in
jmp
push
xor
inc
flds
imul
inc
mov
cwtl
dec
lock
add
cwtl
fistpll
icebp
sarl
push
enter
adc
mov
pop
or
adcb
push
jo
ja
sub
push
aad
popl
bts
xor
shlb
push
lods
fdivrs
push
mov
mov
dec
dec
sub
jne
add
add
xor
jbe
iret
dec
pop
insb
enter
jecxz
xchg
ds
nop
mov
sti
pusha
cmc
inc
jl
inc
and
xor
jge
div
push
clc
pop
inc
lods
jno
lock
cmp
aad
jno
stc
jbe
idivb
es
fdivl
nop
mov
testl
aad
icebp
adc
sti
xchg
mov
inc
mov
push
jns
mov
or
adc
dec
or
ds
sbb
nop
sahf
lods
icebp
movsl
push
in
iret
push
lea
adc
mov
repnz
xor
popa
inc
mov
int
xchg
jnp
and
fisttps
icebp
int
push
sbb
cmp
cltd
lods
sti
nop
xor
test
ss
bound
cmp
mov
mov
jle
popa
mov
xchg
xchg
mov
push
fcoms
or
gs
xchg
adc
popa
mov
fnstsw
jmp
pop
xchg
jno
inc
push
out
popf
rcr
bound
clc
mov
push
test
out
arpl
cmp
xorl
ljmp
insl
xor
sbb
into
add
mov
cmp
push
or
push
mov
ljmp
mov
int
and
mov
add
rcll
cmp
sub
mov
push
dec
clc
pop
jmp
rorl
scas
stos
adc
mov
roll
xor
ret
sti
mov
xchg
lcall
ja
popf
dec
fadds
dec
add
mov
cwtl
dec
int3
push
mov
sub
cmpsl
xor
xchg
loope
nop
mov
push
loope
dec
cwtl
ror
mov
mov
sbb
mov
pop
dec
jns
hlt
xchg
sbb
dec
adc
pop
nop
pop
fimull
mov
aas
cmp
fldl
pop
iret
mov
daa
mov
fimull
push
andb
or
dec
lds
dec
jne
sarb
arpl
xor
je
xchg
enter
mov
mov
sbb
inc
and
ja
ror
ds
pop
pop
adc
rcrl
xor
xchg
pop
lahf
aas
jae
mov
add
sbb
into
cmc
rorl
mov
mov
jns
es
cmp
insb
rorl
incl
out
pop
add
sub
loope
ficomps
fisttpl
xor
push
jne
sbb
inc
ret
cmovns
mov
movsb
fisubs
lods
scas
in
inc
inc
or
dec
nop
aas
add
aas
ficoms
cmpsl
jmp
loopne
out
sarb
and
es
mov
sub
cmp
mov
int
js
scas
das
adc
imul
mov
sub
xor
cmpsl
push
mov
sbb
cmp
jae
inc
xchg
and
inc
mov
mov
lods
fbstp
inc
lods
imul
lds
xchg
jp
inc
push
adc
test
shlb
sub
in
mov
jmp
xor
fcompl
shll
mov
out
insb
or
popf
call
sbb
outsb
dec
cmc
fdivr
aam
test
xchg
es
jg
aam
sti
out
repnz
jg
les
cs
mov
int
push
fucomip
call
nop
pop
imul
cli
je
cwtl
pop
addr16
push
imul
pop
lcall
push
lahf
orl
and
sbb
xor
pop
mov
out
adc
andb
loope
mov
call
das
push
dec
ret
inc
imul
sub
out
mov
lahf
addr16
adc
jae
pop
scas
inc
dec
ret
pop
loop
push
cltd
and
pusha
and
imul
or
mov
out
sub
sti
push
adc
into
xor
cwtd
mov
idivb
pop
mov
popa
sbb
outsb
and
inc
dec
mov
jne
dec
pop
lret
xlat
fsts
push
mov
test
dec
sbb
xchg
ret
subl
dec
imul
stc
xlat
enter
cmp
je
mov
push
adc
ljmp
not
loope
shrl
repnz
dec
cmpl
loope
mov
pop
shll
push
mov
xchg
mov
popa
push
das
pop
mov
fisubrl
adc
mov
mov
inc
or
enter
gs
mov
jnp
out
jo
adc
repnz
lret
mov
inc
notl
psrlw
rclb
push
push
addb
leave
xor
xor
test
movsl
jns
imul
sub
mov
push
imul
into
cmpsl
jo
sahf
or
mov
mov
pcmpgtd
arpl
das
sbb
sar
fistpll
and
jl
bound
jp
cmp
cld
jecxz
out
or
outsb
mov
les
icebp
test
insl
out
cmpsb
lcall
mov
or
sub
mov
lret
loope
mov
mov
pop
mov
pop
sub
push
pusha
inc
pop
adc
or
mov
push
inc
mov
pop
mov
xchg
cmpsl
ret
adc
push
dec
jo
add
out
or
mov
insl
fidivs
mov
cpuid
and
or
mov
ljmp
jb,pn
push
les
clc
or
jb
lret
add
imul
push
mov
adc
sbbb
lods
in
ja
idivb
pop
popf
mov
push
pusha
push
lea
f2xm1
add
or
dec
out
scas
fidivs
jnp
aad
movsb
movsl
stos
rcrl
push
add
mov
cltd
sarb
stos
jo
in
sbb
xor
rclb
out
push
mov
shll
ja
jecxz
repnz
ja
cmp
sub
push
lock
insl
mov
push
test
ror
mov
jb
add
xchg
mov
cli
ret
xchg
std
xchg
es
les
inc
dec
lea
popa
cli
repz
xchg
les
cmp
cmpsb
xor
xor
adc
lds
cmp
fbstp
cmp
jo
sti
add
out
mov
inc
cmp
xor
ljmp
jne
sub
shr
dec
sbbb
cmc
mov
cmpsl
les
btc
add
dec
fsub
or
mov
xor
inc
mov
das
ret
movhps
dec
aam
out
in
loop
stc
out
mul
cltd
js
popa
cmc
fldl
jmp
lock
outsl
rcrl
pop
inc
iret
mov
lea
test
mov
aas
or
js
inc
or
mov
das
lds
add
inc
js
pop
ret
cltd
push
mov
inc
inc
pop
mov
leave
ret
dec
push
shr
add
icebp
sub
mov
loop
mov
adc
mov
xor
xchg
orb
xchg
mov
push
pop
fstpl
inc
scas
sbb
xchg
push
imul
movsl
push
mov
dec
mov
xchg
push
xor
repnz
jmp
sub
dec
fdivrp
lret
push
cmc
dec
and
xor
fidivrl
bound
adc
gs
mov
add
cmp
push
push
push
rcrl
das
and
cmpsl
xchg
ja
xor
xchg
adc
cmp
rol
dec
push
fiaddl
and
pop
insb
or
cmp
add
stc
sub
repnz
push
sbb
or
jge
mov
pop
lcall
or
add
push
lds
jg
pop
lea
jmp
int
pushw
lds
adc
adc
dec
jo
test
inc
sbb
inc
sub
jmp
into
into
lcall
push
xor
fcompl
cmp
test
xor
fs
jnp
cmpl
out
fdivp
data16
adcl
fdivs
add
add
out
gs
add
mov
push
aas
jmp
sbb
cmp
xorl
sub
sbb
lock
ljmp
xchg
inc
aas
dec
pop
mov
jmp
sti
fsubl
pop
in
xor
fisubl
nop
xor
cli
inc
dec
pop
sub
andl
or
lock
aaa
lret
push
sbb
insl
pop
popa
inc
loope
imul
cwtl
lods
jnp
outsl
push
jle
cld
jo
dec
std
mov
xor
mov
xchg
nop
fs
jo
lcall
call
ret
idivb
mov
pop
and
adc
add
add
stc
push
mov
jmp
pop
imul
xlat
ljmp
int3
sbb
mov
mov
xchg
pop
insb
in
mov
and
push
shlb
rcrb
xchg
xchg
pop
mov
shll
scas
outsl
push
rorb
sbb
add
rcr
inc
adc
sahf
push
pushf
jg
icebp
sub
call
ljmp
mov
xchg
insl
repz
mov
jae
mov
cld
mov
addr16
lret
xlat
imul
push
mov
dec
and
push
sbb
mov
data16
pop
dec
mov
pop
jns
in
sbb
leave
mov
ja
cltd
cmc
sub
pop
aam
or
sbb
lock
shll
nop
mov
mov
clc
xchg
inc
cltd
call
and
ss
mov
jmp
cld
pushf
icebp
cmp
cmc
lods
dec
enter
ljmp
loopne
mov
and
dec
int3
jae
fildl
inc
pop
mov
pushf
daa
dec
mov
xchg
or
or
add
fsubs
adc
in
daa
xlat
rcrb
pop
add
push
xchg
lcall
in
xor
testb
add
and
fildll
push
in
and
rcl
test
mov
mov
xrelease
shrl
pop
jmp
shlb
test
xor
enter
sub
lock
xchg
adc
push
cmp
or
sub
std
lods
ljmp
inc
neg
mov
push
add
pusha
test
pushf
xchg
mov
pop
push
jle
sbb
push
and
adc
inc
imul
ss
push
orl
dec
outsb
test
mov
push
hlt
addr16
fnsave
cmp
ja
push
mov
popf
pop
jb
adc
js
or
cmpsl
imull
inc
data16
orl
in
dec
scas
dec
jecxz
call
loopne
mov
mov
xorl
nop
add
pop
lods
mov
dec
ficompl
sub
push
icebp
dec
lret
movsb
ss
jnp
push
ss
shlb
hlt
sarb
lods
pusha
insl
sub
loop
push
cmp
inc
jae
pop
paddsw
jb
arpl
mov
mov
inc
ss
inc
lea
cli
ds
jmp
cmp
mov
psraw
sub
xchg
jmp
xchg
stos
call
fsubs
ror
fstl
js
pusha
xor
pop
scas
js
xchg
jecxz
dec
int3
jl
testl
insb
lret
stos
jne
push
gs
lret
mov
inc
mov
cmp
mov
push
and
mov
push
pop
mov
mov
clc
pop
sbbb
mull
pop
sbb
fsubrs
cld
mov
add
push
push
jle
leave
sahf
cmpsl
pop
repz
xor
xchg
mov
loope
aas
arpl
mov
shrl
out
cmp
daa
int3
rcrb
sub
and
and
jge
adc
cmpl
rcll
sub
add
xchg
dec
nop
test
insl
es
add
loopne
stc
jno
ds
pop
std
mov
mov
cmp
das
les
mov
pop
add
movsb
dec
jge
jle
push
xor
sub
jp
push
sub
js
xchg
add
jns
in
dec
enter
mov
push
in
scas
inc
movsl
and
ljmp
out
and
arpl
dec
ja
loop
jl
cmp
and
mov
sti
adc
aaa
dec
aas
xchg
insl
pop
cmp
js
jl
sub
cmp
mov
adc
inc
mov
mov
mov
mov
add
pop
push
cltd
push
nop
scas
jnp
mov
inc
rclb
jge
ficompl
popf
int
mov
pop
lods
xlat
inc
in
mov
faddl
jmp
cmp
and
push
aam
jge
push
adc
adc
push
cmpsl
movsb
pop
push
sbb
mov
inc
movsb
pop
aad
dec
cwtl
or
test
popa
mov
xor
push
jecxz
push
arpl
add
cmpsb
sar
popf
stos
xchg
mov
jno
hlt
movsl
xchg
aam
scas
mov
push
in
int3
xchg
adc
in
xchg
jb
jmp
cmp
dec
pusha
outsl
loope
add
push
adc
dec
sbb
sbb
push
dec
fwait
sbb
fs
addl
pop
test
addl
pop
out
frstor
jbe
in
adc
jnp
in
or
mov
mov
loope
jns
mov
push
ret
imul
mov
sub
shll
push
or
loopne
imul
jp
movsl
lea
hlt
outsl
gs
out
insl
xchg
stos
ds
jle
rolb
mov
data16
sub
or
and
cmp
fisttpl
inc
ss
mov
ficomps
je
out
hlt
cmp
push
jp
add
popa
mov
add
pop
and
inc
sub
clc
xchg
aam
push
push
imul
out
add
mov
mov
pop
mov
push
jmp
jge
cmpsl
stos
stos
jge
and
or
fiadds
cli
iret
out
lret
jl
add
fnstcw
pushf
stos
xchg
loope
lods
mov
pop
adc
movsl
scas
push
mov
mov
loopne
jle
mov
pushl
add
idivl
pop
push
or
pop
xchg
cltd
inc
mov
and
cs
mov
loope
hlt
pop
call
scas
or
addr16
movsl
xor
pop
mov
aas
pop
ss
dec
fs
mov
jle
jmp
xor
jecxz
add
jne
cmp
dec
dec
cmpsb
pop
ja
push
js
jmp
and
test
jns
add
push
out
insb
jno
into
aas
rolb
lcall
or
int
sti
aas
mov
xor
and
lcall
pop
sbb
lods
fistpll
xor
es
mov
out
lret
sub
jbe
in
push
lcall
pop
xchg
inc
movsl
nop
push
add
shlb
mov
xorb
push
out
add
jnp
jmp
mov
sub
sub
add
pop
jmp
cmpsl
fdivr
xchg
call
sub
andl
enter
jmp
pop
test
and
inc
or
rcrl
dec
cmc
test
nop
inc
shlb
popa
jbe
mov
test
sti
cwtl
lock
lret
pop
mov
mov
jmp
mov
xchg
sar
cmp
lret
fmuls
pop
mov
les
pop
int
addr16
and
mov
movsl
add
scas
outsb
push
es
clc
and
jo
sbb
mov
xchg
lods
cmp
sub
adc
mov
dec
jp
cs
inc
mov
sti
pop
jg
icebp
and
outsl
int
inc
xchg
cmpsl
mov
add
loope
out
jl
add
imulb
mov
cli
test
aaa
mov
inc
loope
dec
inc
idivb
jl
rolw
lds
pop
add
cmc
mov
pop
negl
js
add
xchg
pop
add
pop
xchg
push
icebp
and
jge
loop
leave
mov
rcll
cltd
shrb
push
data16
aas
in
rcll
into
add
test
out
ret
mov
add
insb
lahf
xchg
cmp
pop
jge
jg
adcl
xor
stos
inc
ja
xchg
cmp
inc
and
ds
add
push
push
hlt
xchg
jne
xor
cli
enter
incl
roll
jmp
int3
and
lcall
mov
sub
rclb
movsb
fstpt
mov
xchg
hlt
mov
add
iret
fisttps
pushf
cmc
outsb
test
ja
loopne
call
or
addr16
call
pop
mov
cmc
inc
jle
fs
mov
jno
cmpl
jo
pop
jle
rolb
or
shl
pusha
pop
inc
cmpsb
mov
nop
sbb
mov
int
fisubrl
mov
mov
mov
jle
pop
lods
mov
fidivl
mov
je
scas
mov
sub
jae
pop
and
push
in
imul
cli
jecxz
push
outsb
popa
bnd
mov
dec
jne
adc
movsl
pop
or
add
mov
inc
testb
lret
test
jo
stos
push
and
lods
inc
or
sub
pavgw
outsl
pushl
push
jmp
scas
jne
push
push
cmpsb
add
inc
ss
sarl
pop
int3
cwtl
cmp
mov
rolb
xlat
sub
pop
negl
test
push
mov
aaa
jl
cltd
jl
jbe
test
lahf
mov
mov
pushl
and
mov
pop
lea
in
inc
push
push
push
push
xor
jne
pusha
mov
inc
cmpsl
dec
xor
lock
add
or
mov
mov
out
jno
pop
psllq
pop
jb
jecxz
or
clc
xor
shlb
test
lods
mov
add
cmp
inc
insl
add
add
inc
and
fldenv
push
dec
ficomps
mov
ss
stc
daa
pusha
gs
out
lock
jne
iret
das
jb
mov
cltd
jmp
mov
pushf
out
jecxz
jno
lock
jmp
aaa
pop
shr
sub
xchg
test
ret
rolb
mov
aam
scas
sub
or
test
xor
sub
test
psubq
adc
imulb
add
fwait
dec
adc
fwait
pop
fdiv
or
dec
lahf
dec
and
lcall
mov
push
imul
in
cli
movsl
into
sub
xor
lcall
cmp
pop
movsb
movsb
mov
scas
push
pop
mov
cmpsl
je
lret
lods
mov
dec
dec
in
add
aam
and
aam
sub
fwait
dec
xchg
stos
sbb
sub
dec
and
sub
push
mov
lds
addl
jnp
sub
jne
xchg
fdivrs
and
pop
or
test
outsb
mov
out
stc
xor
sub
movsb
nop
pop
call
push
mov
push
shl
and
mov
in
ss
xchg
inc
adc
xchg
in
inc
stos
xor
aam
xchg
xchg
mov
cmp
sti
leave
adc
add
and
mov
fs
scas
clc
rclb
call
push
inc
push
mov
ret
xchg
sti
dec
ljmp
fistpl
jle
xchg
pop
inc
insb
push
mov
push
push
and
icebp
xchg
cmp
push
movsl
mov
pop
icebp
out
and
xlat
pushf
or
orb
out
or
filds
les
pop
shll
sub
mov
ret
sub
cmp
cltd
jge
inc
lret
lods
popa
rcl
repnz
xchg
stos
jg
dec
pop
adc
cli
pop
cli
das
push
scas
rol
lods
loopne
push
mov
sarb
daa
out
push
repnz
mov
cmp
sub
jmp
or
and
pop
and
daa
int3
lea
int
sub
mov
imul
js
ja
xor
mov
repz
xor
hlt
sarb
pop
cmp
mov
adc
mov
lret
pop
hlt
jns
inc
rcrb
ret
push
pusha
mov
add
mov
jae
sti
sbb
clc
orl
fmull
mov
pop
add
mov
scas
pop
pop
inc
gs
xchg
adc
mov
andl
test
add
mov
jecxz
jmp
movsb
mov
into
push
sub
repz
or
imul
dec
or
pushf
sahf
frstpm(287
cmp
cmp
jl
aad
dec
dec
mov
and
into
cmp
pop
arpl
enter
push
jae
xchg
shl
sbb
mov
xor
adc
clc
rolb
test
mov
sti
cmc
or
clc
in
addr16
lret
das
lock
in
cmpsb
ret
pop
fistpl
dec
ret
push
mov
mov
push
ds
lds
sarb
mov
test
dec
jmp
mov
nop
popf
addr16
mov
test
dec
push
jle
push
adc
sbb
xchg
or
dec
imul
and
ja
cs
lret
ss
inc
push
lds
pop
and
pop
cli
pop
dec
out
push
in
push
push
dec
ret
and
fwait
mov
scas
add
cmc
pushf
cmp
or
sti
dec
jle
scas
jo
loopne
dec
fimull
test
fsub
cmp
es
pusha
pushf
stos
outsb
add
add
mov
outsl
jnp
push
mov
shlb
nop
push
dec
mov
bound
mov
and
mov
dec
jmp
out
in
jg
mov
push
jmp
call
in
inc
std
rclb
testb
fstps
jle
dec
clc
pop
inc
mov
pop
sub
addr16
in
jno
mov
outsb
mov
in
cmp
xchg
stos
push
xor
push
dec
inc
out
xor
cli
add
xchg
stc
jns
push
or
xchg
out
je
popf
jg
lods
add
sub
push
jb
lods
sbb
out
adc
jb
mov
jbe
xchg
fs
lea
lods
int3
mov
jl
gs
stos
in
lcall
inc
ljmp
and
loopne
fsubl
roll
xor
sti
lock
sbb
dec
in
aaa
inc
testb
test
dec
pop
adc
mov
xchg
movsl
in
xchg
push
aam
movsb
sub
jl
mov
mov
mov
xlat
adcl
jns
cmpsl
cmpsl
mov
out
hlt
jnp
sub
inc
insl
out
xchg
jnp
lret
dec
mov
cmpsl
fidivrs
adc
jae
dec
and
repz
sahf
repnz
imul
negb
jecxz
adc
xchg
rcrb
dec
mov
adc
ret
in
xor
testl
xchg
sarb
inc
out
cmpsl
adc
in
movsb
pop
xor
repnz
bound
ret
mov
mov
mov
mov
add
negl
xchg
loope
sub
out
lods
mov
sub
xchg
orl
ret
cmp
gs
popf
insl
imul
adc
or
or
jne
in
dec
shl
dec
dec
mov
out
fcompl
bts
shl
xchg
xor
cmp
xchg
mov
dec
xchg
mov
pushf
push
cmp
add
test
xor
jg
xor
insb
fcomi
outsb
or
lods
or
sbb
pop
jg
popa
mov
pop
xchg
mov
cmp
cmc
adc
cmp
lahf
movsl
fisttps
fmul
cmp
and
xor
sub
lret
pop
mov
inc
daa
fbstp
push
xor
cmp
mov
dec
sbbl
xchg
pusha
pusha
mov
push
mov
xor
adc
mov
aam
jno
mov
or
mov
mov
push
daa
outsl
movsb
sbb
jns
andb
push
enter
orl
das
inc
sub
push
roll
test
inc
nop
cld
shl
test
pop
daa
out
cmp
rcrb
je
mov
or
psubusb
sub
jmp
scas
mov
push
xor
inc
dec
mov
movsl
cmp
test
push
cmp
lods
stos
cmpsl
fidivs
pop
xor
or
inc
movsl
in
mov
xchg
shll
icebp
outsl
pop
mov
xor
push
ja
push
mov
mov
fstpl
jae
leave
xor
test
je
insl
add
lahf
loope
fwait
hlt
movsl
xor
mov
xor
xchg
push
call
pop
repz
jbe
data16
or
loop
jne
hlt
dec
cmp
sbb
jmp
add
and
cmpsb
pop
adc
les
xchg
push
push
insl
cs
jbe
in
and
movsl
push
icebp
scas
sub
sbb
sbb
es
sub
pop
rcrb
pop
sub
daa
fcoml
push
ror
sbb
inc
cmpsl
jle
call
or
dec
dec
lret
div
loop
sarl
sti
xchg
pushf
fstp
rclb
stos
outsl
movsb
add
dec
shr
lods
sbb
and
jle
add
in
mov
dec
push
hlt
jg
and
push
mov
push
sbb
lods
lds
sbb
inc
test
xchg
pop
add
testl
stos
in
cmp
adc
fcomp
lods
ja
imul
rcl
into
jae
jl
push
push
xchg
or
mov
mov
pop
in
mov
cmp
adc
xchg
ret
push
out
inc
mov
in
jbe
adc
jae
or
or
xchg
repz
ss
dec
in
loopne
outsl
test
push
iret
mov
data16
pop
jmp
dec
mov
int3
in
mov
cmpsb
lds
pop
gs
fiaddl
insl
push
push
push
leave
sbb
dec
pop
pop
or
enter
push
pop
inc
insl
jle
movsl
or
or
cmpsl
push
ret
xchg
or
flds
mov
xor
loop
imul
ds
inc
mov
xchg
xchg
pop
mov
in
inc
scas
addb
cli
mov
pop
bound
sbb
sbb
pop
jl
fcoml
mov
fwait
pop
enter
cld
cmp
popf
xor
je
cld
popa
test
into
insb
dec
dec
adc
adc
loope
jle
pop
mov
cmp
sub
sahf
fcomip
je
cltd
mov
sahf
pop
out
mov
cs
in
ljmp
or
ljmp
lcall
push
leave
leave
push
stos
leave
push
cmpsb
lahf
lcall
stc
adc
sahf
gs
mov
dec
or
adc
add
jbe
pop
mov
int3
adc
lahf
mov
mov
in
jecxz
test
and
sbb
pop
jne
mov
std
or
inc
fdivl
popa
sub
xchg
les
xchg
loopne
and
repz
movsl
pop
loop,pn
scas
sub
xchg
mov
pop
push
jnp
jbe
filds
mov
sarb
mov
mov
sbb
xor
test
xchg
shlb
out
xchg
xor
outsl
aad
arpl
in
insl
imulb
test
addl
dec
inc
push
mov
outsl
mov
add
sbb
jb
xchg
rcrl
js
add
cwtl
aas
das
or
jns
scas
mov
std
jmp
add
fisubrl
in
test
mov
mov
test
mov
pop
adc
lret
mov
and
mov
and
push
sub
scas
je
mov
sbb
adc
xchg
test
xor
push
call
jecxz
pop
testb
nop
repz
mov
fstpl
jo
push
subl
mov
jne
jno
cmpsb
sbb
pop
inc
repnz
or
mov
fwait
enter
sub
ret
xchg
rolb
stos
pop
mov
xchg
ljmp
pop
fcmovb
punpckhbw
stc
movsl
add
pop
xchg
xchg
loop
jmp
out
pop
push
xlat
leave
push
jle
inc
pop
mov
pop
jne
cwtl
xchg
ljmp
pop
test
cmp
es
mov
out
adc
jl
mov
xor
fistpll
and
roll
xchg
pop
adc
jge
and
mov
mov
push
jae
and
ja
jae
loopne
cwtl
lahf
dec
mov
insw
or
test
xlat
es
xlat
mov
jns
ljmp
sub
mov
cmpsb
and
sub
xlat
mov
out
xorl
adc
inc
mov
stos
push
lahf
xrelease
jmp
push
sbb
xchg
mov
sub
fildll
in
les
sbb
xlat
addr16
cmp
mov
fbld
xor
xlat
push
adc
inc
or
mov
push
fwait
mov
rcll
mov
push
cmp
js
or
mov
hlt
push
enter
testb
xchg
or
add
pop
into
aaa
loopne
dec
push
sub
pop
dec
repz
nop
andl
js
ror
aaa
cmp
es
inc
cmp
mov
cmpsb
scas
xor
daa
popa
and
or
in
leave
xchg
mov
stos
ljmp
out
gs
and
dec
inc
pushf
jmp
xor
bound
repz
inc
and
or
pop
jo
push
popfw
jecxz
cmp
addb
inc
xchg
cli
mov
pop
adc
adc
data16
sarb
inc
nop
xor
test
and
incb
adc
push
jmp
inc
in
repz
inc
ss
cmpsl
rclb
cmp
repnz
push
pop
pop
xchg
mov
inc
insb
ret
call
ret
cwtl
mov
cmc
mov
mov
xchg
ds
jbe
add
es
pop
dec
dec
push
and
test
sbb
sbb
adc
lret
addr16
add
mov
gs
xor
dec
sub
cmpb
jge
cld
out
mov
cld
xchg
adc
shlb
test
repnz
push
sbb
mov
movsl
add
fs
push
mov
fidivrs
imul
out
adc
push
fildl
sti
out
dec
lret
pop
push
sbb
pop
sub
or
outsb
mov
adc
xchg
pop
rcrb
movsb
push
jne
ljmp
insl
lea
pop
cmp
iret
loope
mov
sbb
cli
fistps
orb
xchg
jns
pop
jle
pop
gs
fildl
out
std
dec
add
xor
inc
sub
jae
and
push
and
insb
pop
adc
ret
ss
cli
gs
mov
and
popf
jmp
movsl
ja
out
stos
xchg
insb
stc
ja
cmc
call
or
pop
stc
xlat
aad
fwait
out
push
into
aaa
loop
add
loopne
jno
ja
loop
arpl
add
je
subb
jmp
add
not
mov
jle
js
inc
fildl
dec
dec
sub
mov
movsb
ja
lods
fmuls
das
aas
mov
mov
lret
inc
in
shrl
rorb
inc
pushf
leave
sarl
js
clc
sti
pop
mov
iret
scas
test
adc
loope
xchg
lahf
fiaddl
jmp
aad
pop
jmp
scas
daa
dec
pop
enter
lcall
lds
lret
jnp
imul
sub
jle
dec
lock
ss
jge
outsb
call
gs
push
xor
adc
mov
mov
popf
xchg
gs
je
out
addr16
les
rcrb
xchg
and
mov
xor
inc
xchg
pop
aad
sbb
fwait
es
int
mov
lcall
nop
js
jbe
mov
into
mov
arpl
sar
mov
in
mov
xor
leave
push
lret
mov
mov
push
jae
fistl
xlat
mov
mov
dec
mov
xor
lahf
imul
or
lcall
imul
shr
jbe
pop
or
cli
fwait
pop
iret
out
pusha
arpl
jae
mov
adc
cs
jae
inc
clc
adc
or
or
out
rcrb
dec
scas
mov
test
fs
adcl
push
les
and
pop
lods
xor
scas
int
insb
or
lret
jmp
jecxz
xor
cld
outsb
mov
pop
cmp
clc
insl
fstpt
push
adc
sarl
cmp
inc
dec
cmpsb
adc
xor
adc
sbb
sbb
push
clc
mov
loopne
pushl
lods
mov
es
movzbl
adc
mov
push
xchg
hlt
js
and
push
nop
stc
add
push
out
cmp
pop
outsl
xchg
cmp
aad
lds
mov
es
arpl
push
addr16
rcll
lock
leave
sub
fmull
add
xchg
movsl
sub
rcrl
popw
mov
int3
mov
js
dec
mov
mulb
sub
mov
fwait
add
sub
pop
fwait
xlat
cltd
inc
divl
push
dec
lods
adc
pop
mov
jge
out
mov
insl
mov
sub
rcl
test
mov
les
xor
fisubrl
adc
adc
aaa
call
jne
and
xchg
pop
orl
dec
test
repnz
mov
cmp
fcomps
pop
xchg
shlb
pop
les
std
dec
jge
jmp
mov
sub
cmp
and
xchg
popf
jno
scas
push
adc
mov
loope
cltd
jg
mov
mov
sub
test
pushf
fwait
out
push
inc
shlb
mov
lahf
scas
outsb
jp
jl
adc
test
lea
xor
test
aam
sub
pop
aas
out
in
adc
or
mov
ljmp
lret
cmp
cmp
inc
int
dec
aad
pop
mov
sarl
loopne
push
int
pop
cmp
sbb
fistpl
aad
fidivl
xchg
xchg
add
pop
jae
or
add
mov
faddl
pop
repz
test
je
sub
xor
fwait
pop
and
pop
fisubrl
movsl
iret
sub
mov
cmp
stc
in
xchg
les
cmpl
xchg
cmpsl
push
push
pop
jb
in
in
out
pop
iret
push
adc
fldl
out
hlt
stc
pop
jle
sub
fimull
insl
push
dec
xor
jle
leave
mov
mov
jecxz
pop
sub
jne,pn
out
inc
cmpsl
dec
and
fsubrl
cwtl
pop
pop
call
sahf
add
es
xor
sub
pop
test
pop
pushf
xchg
cmp
dec
in
fisubrs
nop
xor
cmp
cmp
lahf
loop
add
arpl
outsb
popf
dec
aad
jns
sub
add
jbe
aaa
sbb
jl
add
int3
inc
xor
sbb
push
shrl
enter
lea
orb
inc
sbb
repnz
pop
jg
fcompl
leave
mov
xchg
mov
in
push
sub
call
push
sub
es
pop
call
mov
jle
nop
icebp
cmp
decb
xchg
dec
lea
pop
imulb
adc
mov
sub
mov
mov
and
push
adc
stos
les
lods
lea
ljmp
fiaddl
int
repz
push
xchg
xchg
xchg
ret
jns
js
add
dec
data16
lahf
call
inc
xchg
and
push
dec
divl
push
or
jno
cmp
jmp
lods
test
sarl
xchg
mov
shr
ret
dec
outsl
and
mov
mov
inc
daa
mov
jbe
sub
and
std
fistps
adc
clc
js
and
xor
inc
inc
xchg
mov
cmpsb
and
mov
sbb
jge
mov
inc
add
mov
sbb
mov
notb
ds
loope
imul
mov
xor
in
pop
add
inc
daa
fisubs
aam
push
test
inc
sbb
lods
pushf
sbb
arpl
mov
add
jmpw
les
xchg
dec
mov
mov
lret
sub
mov
cmpsb
nop
add
mov
jle
cmc
insb
in
and
dec
add
mov
mov
mov
and
pop
cwtl
dec
ret
push
mov
lds
push
lods
sbb
push
jae
mov
ss
mov
add
jae
lods
pop
imul
jne
sub
aaa
xor
fisubrl
mov
or
mov
pop
xchg
jp
mov
cld
hlt
push
outsb
mov
int
push
ljmp
rcrl
gs
stos
or
jl
jbe
movsb
cld
sti
fists
lea
cmpsl
sbb
mov
dec
fisttpl
xor
std
jecxz
paddb
lret
mov
lock
jno
pop
mov
pop
sub
add
cmp
or
cld
outsb
test
xchg
aas
enter
mov
lret
mov
int3
aaa
pop
loopne
inc
sub
loop
jb
ret
cmp
in
in
pushf
jno
les
cmp
mov
mov
ljmp
mov
mov
xchg
xor
cmp
jns
or
mov
sbb
mov
mov
inc
inc
mov
orb
sbb
dec
ja
ret
pop
loope
mov
in
and
sbb
lods
hlt
xor
jb
jg
loopne
cmpsl
rol
cmp
repz
shrl
dec
pop
pop
dec
mov
cli
gs
fdivr
imul
xor
outsl
push
pop
lret
jp
test
dec
mov
dec
fdivrs
xor
jbe
push
bound
lods
repz
pop
scas
cwtl
xor
or
adc
in
das
mov
out
and
push
or
xchg
sub
pop
mov
mov
aam
xlat
cs
add
pop
lahf
lahf
ljmp
jns
xor
xlat
xor
mov
add
test
xor
cmpsb
push
and
ljmp
mov
sub
jg
ds
dec
push
cmpsl
fimuls
mov
or
ficomps
cmp
jb
das
cli
fnstsw
cli
repnz
inc
iret
stos
stos
inc
in
lcall
roll
jecxz
and
sbbl
insl
push
jmp
sbb
rorb
pop
or
cmp
inc
mov
pop
loope
cmp
aaa
lock
gs
cltd
rolb
pop
nop
mov
loopne
cwtl
add
subb
fisubl
ljmp
mov
push
mov
jns
dec
xchg
sub
inc
pop
dec
pop
jne
sbb
das
push
ljmp
test
je
jp
iret
push
sar
into
pop
inc
push
cmp
negb
je
add
pinsrw
jecxz
int
lcall
out
sub
add
pop
jp
mov
das
or
cmc
mov
push
or
push
mov
shrl
std
adc
pop
sbb
pop
dec
sub
mov
adc
pop
cmp
into
and
xchg
mov
jnp
jp
xchg
testb
lock
mov
and
xchg
or
enter
pop
out
in
ret
das
iret
mov
xchg
mov
or
and
jecxz
addr16
hlt
mov
xchg
iret
imul
fdivs
mov
and
sbb
xor
pushf
xchg
pop
nop
test
sbb
or
cmp
data16
adc
mov
push
dec
mov
loope
mov
push
mov
scas
sahf
add
sbb
mov
jmp
insl
adc
cltd
push
cmc
cwtl
adc
xchg
sbb
scas
push
mov
mov
pop
xchg
cld
insl
je
adc
les
cmpsb
fnstsw
mov
lds
hlt
in
add
sub
outsb
fidivs
lret
test
xchg
daa
cvttps2pi
cld
mov
rcl
adc
lret
ja
pop
test
inc
sub
movsl
jg
or
lcall
cmp
mov
push
in
or
cmc
mov
imul
scas
pop
push
add
std
fcomps
test
mov
xchg
mov
dec
jne
pop
out
pop
pop
out
xlat
push
in
ja
stos
cmp
xchg
or
push
xor
adc
data16
sub
call
cmp
xor
test
jbe
js
lods
cmpsl
test
pop
mov
std
nop
sbb
jnp
out
out
jbe
and
lret
mov
or
test
movsl
les
adc
or
adc
cmpsl
or
int
xlat
aad
in
adc
rolb
addb
ja
sti
je
fsubs
mov
pop
mov
xor
jbe
fdivs
sub
ret
lret
cmpsl
mov
sbb
xchg
xchg
out
or
push
mov
dec
dec
fwait
lds
inc
fcomps
lahf
outsl
xchg
out
dec
js
jmp
scas
mov
lahf
mov
xor
xor
lods
sbb
lret
enter
cmp
pop
mov
pop
add
dec
jbe
inc
jne
dec
mov
fwait
push
popf
and
out
es
or
scas
and
or
faddl
inc
shll
dec
adc
xorb
in
jo
xchg
movsb
cld
jg
repz
mov
inc
orl
jmp
fnsave
adc
in
mov
jmp
aad
sbb
fnstenv
std
adc
mov
xchg
add
pushf
pusha
cmp
test
stc
ret
dec
adcl
arpl
stos
push
dec
mov
mov
jecxz
dec
das
scas
gs
cmp
pushf
js
xchg
or
pop
test
insb
mov
jnp
popf
out
test
inc
adc
sarl
cltd
xchg
in
aas
dec
pop
jp
inc
xor
and
mov
cmp
inc
or
mov
xchg
lods
xchg
mov
pop
test
adc
insl
mov
adc
ljmp
inc
lret
mov
addr16
pop
out
add
mov
mov
sub
sarl
outsb
push
jl
in
cli
pop
js
jge
fcoms
push
cmpsl
jp
clc
hlt
lea
int3
ljmp
jmp
fs
stc
out
lcall
xor
test
bnd
bound
mov
sub
mov
xchg
or
pop
sbb
xlat
push
xchg
repz
mov
xchg
add
faddl
int
ss
dec
pop
push
jns
xchg
pop
inc
bound
xor
inc
cmc
add
repz
loopne
mov
call
mov
addr16
mov
pop
sub
jo
dec
in
adc
pushf
movsl
sbb
daa
mov
data16
enter
dec
sub
xchg
and
mov
adc
sub
pop
add
fcompl
push
push
mov
xchg
shlb
mov
nop
loopne
orl
xlat
dec
push
mov
pop
cmc
loope
jno
and
add
sbb
and
dec
xorb
xchg
repnz
js
sub
xor
lods
jnp
push
cwtd
inc
mov
push
pop
mov
arpl
pop
imul
fnop
into
push
in
jae
or
xor
test
sahf
push
push
insl
hlt
aad
lock
outsl
inc
outsl
jnp
xor
mov
adc
or
jnp
aam
sbb
ret
cmc
cmp
sysret
in
add
push
das
mov
adc
adc
leave
mov
xchg
push
lds
push
xor
mov
jns
xor
adc
xor
or
insl
push
sbb
push
loope
mov
cmc
inc
inc
movsl
mov
stc
gs
push
lods
mov
fists
outsb
data16
adc
mov
xorl
mov
leave
frstor
xor
inc
inc
jle
jmp
inc
lret
addr16
push
adcb
or
and
mov
lods
or
mov
sti
outsb
xchg
dec
test
ds
xchg
xchg
in
in
xchg
roll
adcb
xlat
pop
cmp
dec
or
jecxz
mov
xchg
or
sahf
cmc
push
clc
xchg
xchg
or
subb
cmp
jmp
lods
sbb
mov
xchg
add
leave
cmp
test
dec
loop
sbbl
inc
pop
test
loopne
sbb
jl
push
std
adc
mov
xor
sbb
push
bound
mov
adc
outsb
xchg
imul
inc
xor
adc
pop
lret
es
cmp
pop
mov
sub
xor
scas
add
sub
imul
cld
xchg
andl
pop
push
mov
out
jg
push
pusha
pop
test
repz
cld
fucomip
fstpt
jge
xor
fucomp
jnp
sbb
cltd
es
pushf
fnstsw
fwait
dec
or
mov
out
jnp
fwait
aaa
mov
adc
daa
push
sub
jge
cmp
pop
dec
mov
mov
mov
sub
xchg
mov
jnp
pusha
cmp
push
pop
inc
mov
fwait
jnp
jbe
cltd
icebp
leave
sahf
mov
xor
insl
pop
push
mov
jo
mov
test
fldl
jnp
push
pop
fwait
inc
out
lahf
shll
push
loopne
mov
xor
pop
sub
outsl
enter
dec
into
jae
dec
int
fcomip
in
int3
sarl
lcall
ss
inc
mov
ja
mov
pusha
mov
orl
popf
or
sub
lds
scas
cmp
lock
insb
outsb
pop
lock
jge
dec
sub
jnp
stos
inc
fsubrs
jo
repnz
inc
insl
out
mov
mov
stos
imul
clc
push
inc
dec
cmpsl
push
xchg
pusha
pop
or
ds
test
jmp
and
fidivrl
test
mov
or
stc
adc
test
pop
lret
clc
pop
cmp
in
dec
or
push
pop
lock
jp
xor
and
lock
cmp
movsb
je
bound
fadds
test
dec
jb
inc
ljmp
cmp
mov
xor
icebp
mov
fbstp
lods
mov
int
jecxz
pusha
sub
lock
mov
dec
and
aaa
enter
aad
push
mov
jno
or
jg
mov
int3
shlb
mov
outsb
mov
sbb
push
in
sbb
xchg
es
lret
push
mov
xlat
and
push
cmp
cmp
inc
aam
mov
add
cmpsb
push
and
mov
push
jbe
or
mov
mov
negl
jmp
enter
add
jmp
add
xor
insb
push
inc
jg
mov
and
adc
xor
leave
jbe
xor
leave
adc
arpl
mov
push
mov
mov
pusha
int
adc
xor
bound
dec
dec
mov
or
mov
mov
inc
movsl
or
mov
daa
sbb
inc
push
outsl
inc
outsb
inc
and
fisttpl
jge
arpl
mov
fsubrl
icebp
or
mov
stos
pop
lcall
jp
lea
in
ds
js
and
pop
jne
jnp
dec
cmpsb
mov
lods
adc
scas
imul
cmpb
lods
mov
lods
loope
fidivrs
inc
sub
out
clc
icebp
jl
cmc
xlat
stos
pop
in
lods
mov
inc
sbb
hlt
pop
rol
in
pop
call
jbe
in
incb
loopne
ds
push
inc
xor
mov
mov
les
test
jb
adc
test
sti
insb
inc
clc
and
add
adc
adc
fistpll
pop
mov
cltd
inc
pop
lea
xor
pop
cmp
and
daa
cmc
or
mov
cmc
jae
cmpsb
mov
push
es
outsb
push
mov
pop
jl
in
dec
testb
icebp
inc
add
test
add
xchg
push
mov
fcos
fcomp
outsb
push
iret
push
int
cmp
mov
lods
sbb
push
movsl
mov
pop
xor
xchg
fcmovbe
les
sti
data16
pop
and
repnz
cmp
inc
jl
mov
outsb
cmc
sub
dec
hlt
mov
cltd
iret
cmp
sbb
jecxz
push
pop
loopne
ret
cmp
pop
ss
jecxz
fisubl
cmpsl
pop
inc
lret
pop
call
mov
hlt
push
or
dec
aad
jo
iret
cmp
lret
xor
lea
ljmp
bound
jo
loope
mov
mov
sbb
inc
in
dec
cmp
push
lds
mov
xchg
xchg
and
fdiv
dec
inc
pop
cmpsl
in
mov
rcrb
adc
and
xchg
jbe
push
sub
std
rorb
lods
fbld
cmp
mov
mov
cmpsl
pop
xor
iret
pop
jge
xlat
sbb
shlb
mov
xchg
lods
cmp
mov
pop
xchg
sbb
xor
xor
sbb
xchg
adc
xchg
into
push
xchg
lret
xor
sub
fdivrs
test
pop
xor
in
enter
call
xchg
clc
xchg
pop
sub
pop
and
xchg
jo
cli
or
loopne
repnz
cmpsb
mov
xchg
pop
scas
and
jmp
sub
sbb
out
add
or
pusha
fxam
inc
in
lahf
shll
mov
cli
sbb
mov
fs
jo
jae
mov
fstps
out
push
ss
ret
mov
stos
inc
jmp
out
xchg
jo
addr16
xchg
inc
sub
shrl
pop
add
cmpsb
aaa
pop
dec
mov
movsl
mov
out
mov
ja
lea
cmpsl
adc
mov
ret
dec
and
sbb
pop
lret
mov
add
jg
xchg
mov
dec
mov
outsb
shrl
jns
push
inc
int
xor
data16
mov
sub
cmpsl
jnp
ficomps
jecxz,pn
sarb
shrb
scas
sti
insl
cmc
mov
in
ss
orl
call
repnz
jmp
jbe
push
dec
xchg
pushf
test
shll
xchg
ret
xor
lahf
fsubr
pop
sbb
pop
xchg
xor
loop
add
mov
mov
imul
decb
xlat
orl
fnstsw
lea
jecxz
fcoml
inc
mov
pop
add
paddq
cwtl
je
in
adc
mov
mov
xchg
mov
ret
cmp
dec
sub
sar
addb
incb
and
cmp
xlat
cmp
lock
mov
xchg
es
mov
jmp
mov
rclb
pop
xor
arpl
or
xchg
jecxz
sti
fwait
sbb
inc
mov
jmp
loop
or
sub
int
lcall
and
cs
xor
sbbl
inc
es
inc
lret
adc
or
cmpl
loopne
mov
cmp
add
outsl
ret
xchg
jle
add
and
add
lea
div
pop
repz
jnp
jns
cmp
loopne
loop
push
mov
testb
jno
lret
lahf
xor
insb
in
cmc
into
cmp
push
jle
fstps
fcmovb
add
inc
mov
aam
pushf
loope
loop
roll
add
adc
into
or
in
sbb
in
push
out
cli
fs
pop
xchg
sub
push
mov
mov
cs
mov
mov
sbb
shrb
lahf
dec
mov
ja
xchg
pop
outsb
mov
leave
lods
cmpsl
idiv
jge
subb
cmp
loope
mov
bound
ja
repz
int
test
popa
lods
and
fdivs
dec
scas
adc
or
pop
cmp
inc
xor
cwtl
lods
pop
mov
call
mov
sub
pop
insb
lock
popa
sbb
loope
sub
push
mov
inc
sub
ds
cmp
mov
adc
ljmp
add
gs
sub
inc
lcall
lods
add
shrl
out
xor
mov
cwtl
inc
in
mov
sbb
cmc
cld
repz
dec
insl
scas
and
lds
out
sbb
xor
gs
fists
xor
inc
pop
jbe
rcr
test
lret
cmpsl
and
xchg
xor
mov
inc
aas
movsb
mov
gs
xor
add
push
adc
mov
out
repz
inc
fnstenv
or
jecxz
pavgb
add
xchg
cmp
pop
mov
mov
out
jl
push
fldenv
xchg
inc
jb
pop
pop
faddl
adc
loopne
ret
jecxz
test
pop
jnp
adc
out
out
insl
adc
adc
stc
repz
lea
or
or
jg
inc
mov
cmp
aam
nop
mov
pop
lcall
dec
imul
testl
js
adc
dec
mov
stos
popa
andl
ret
sbb
fldenv
and
inc
sbb
pop
addr16
push
sub
push
cs
stc
push
dec
mov
fimuls
out
cmp
mov
scas
stos
sbb
sbb
adc
jne
xchg
or
or
mov
jb
popf
pop
bnd
pop
xor
and
xchg
push
insb
xlat
es
les
xchg
xor
out
mov
leave
or
pop
cld
inc
rcr
loopne
xlat
lds
in
mov
nop
push
cmpsl
mulb
mov
mov
fisttpl
and
or
xor
jecxz
fistpll
andb
dec
add
repz
fs
mov
mov
jmp
movsb
jne
test
and
mov
rorb
mov
fildl
mov
push
pop
push
sub
mov
sub
and
mov
test
mov
lcall
mov
pop
bnd
je
sbb
dec
push
mov
cltd
sbbb
inc
in
rorb
xchg
cmpsb
inc
ret
xchg
aad
xor
movsb
cmpsb
das
adc
mov
aaa
xor
cmp
std
dec
sub
mulb
pop
movsl
int
les
pop
jg
or
sbb
lret
lods
leave
aaa
jns
aad
dec
leave
adc
xlat
push
ficoms
out
pusha
in
addr16
jnp
mov
mov
add
icebp
jns
xorb
fwait
and
lods
mov
dec
or
jns
mov
pop
jecxz
xchg
or
mov
pop
enter
imul
jae
sbb
cmpsl
jle
cmpb
sarb
xchg
inc
sbbb
scas
inc
out
aas
das
jbe
hlt
adc
out
mov
scas
insb
call
jns
xor
and
cmpsb
mov
mov
in
pop
pop
psrld
push
mov
jl
mov
and
scas
lret
xor
adc
rcll
inc
mov
shrb
and
mov
inc
syscall
loopne
add
adc
es
fsubrl
jo
dec
pop
mov
daa
pop
incb
rcl
repnz
mov
jo
mov
jne
int3
mov
repnz
into
hlt
lahf
int3
out
sub
in
mov
cmp
inc
call
lahf
imul
in
mov
popa
subb
dec
loop
adc
xchg
inc
jne
mov
jnp
sub
adc
outsb
mov
rclb
fdivs
dec
cwtl
nop
cmpsl
cmpsl
cmp
push
push
insb
jge
fnsave
lahf
mov
out
cmpl
pop
xchg
xor
jns
mov
loope
outsb
test
jp
lret
daa
aam
imul
and
pushf
or
aam
pop
test
jecxz
mov
nop
mov
les
out
cmp
dec
mov
dec
jne
inc
lods
inc
add
sbb
cmp
cmpl
movsb
out
imul
cmpl
into
repz
pushf
mov
inc
or
mov
jns
aaa
pop
add
and
cmp
mov
xchg
in
mov
popf
inc
clc
pop
mov
sbbb
jne
imul
adc
dec
xor
jg
pinsrw
push
hlt
fstps
jo
aad
test
sbb
cmp
dec
lret
es
mov
in
mov
adc
mov
sub
mov
and
dec
lods
xor
and
xchg
xor
mov
jmp
mov
dec
mov
outsb
push
popa
mov
sbb
jmp
in
arpl
sub
cmc
mov
in
jp
dec
jno
sbb
mov
and
mov
add
jb
mov
push
leave
jae
aaa
mov
add
mov
arpl
inc
push
sbb
fsubs
fisubl
cwtl
nop
pop
loop
push
aas
out
sbb
xchg
ret
sub
xchg
lret
scas
sahf
cwtl
movsl
push
sub
and
and
and
add
shrb
movsl
adc
popa
aas
xor
cmp
push
sub
jns
adcb
repnz
pop
xlat
loop
int
xchg
xlat
mov
cwtl
in
pop
mov
mov
jbe
enter
jle
ss
stos
js
dec
dec
out
mov
cmp
mov
adc
es
out
adc
pop
jp
loope
jg
mov
std
daa
inc
dec
jnp
stos
fimuls
mov
sbb
sahf
mov
pop
outsb
mov
or
pop
push
das
add
add
loop
xchg
inc
mov
cltd
clc
adc
xchg
dec
je
test
jmp
loopne
jg
cmp
lds
pop
sub
ret
js
fildll
lcall
test
cmp
ljmp
scas
mov
inc
mov
pop
add
or
leave
or
cmp
pop
push
jge
out
sahf
mov
push
movsb
nop
call
jne
inc
ja
shll
mov
stos
inc
adc
jo
hlt
les
mov
xchg
sbb
cmc
xor
in
jno
mov
cmc
sbb
push
sub
sahf
sub
jnp
inc
xor
push
pop
cmp
shrb
loopne
xchg
add
stc
pop
sti
pop
shrl
jnp
cmc
in
adc
jo
bound
movsl
out
aaa
mov
dec
sub
and
aaa
repz
cmpsb
mov
aaa
repnz
test
mov
inc
inc
test
add
and
repz
and
rcrl
and
es
pop
in
insb
adc
mov
int
sti
cld
lock
hlt
int3
push
stc
push
and
sub
jl
stc
aam
fxch
cmp
pop
dec
sbb
xchg
leave
popa
jmp
push
faddl
jp
inc
pop
lret
jmp
jnp
jge
xor
std
xchg
cmpsl
call
sub
sbb
fisubl
lret
arpl
push
mov
sbb
stos
dec
or
push
lock
mov
aad
in
bnd
xor
cmp
pop
dec
rcrb
mov
scas
addr16
mov
and
jne
ljmp
and
jns
dec
lods
inc
ss
xorb
roll
stos
lock
push
mov
pop
dec
out
push
jo
call
lods
imul
lcall
mov
das
mov
fsubl
ds
fdivrp
aas
incl
cmp
subl
fstl
mov
cmp
sbb
mov
push
cmc
or
push
data16
mov
out
mov
cmpsb
inc
xor
std
lcall
repz
cmp
fadds
fistpl
lret
sub
push
inc
mulb
add
out
mov
mov
adc
lcall
rclb
ljmp
pop
cld
mov
test
test
sahf
xor
rorl
cli
es
jne
adc
mov
push
gs
sbb
xlat
sub
lock
xor
roll
add
xchg
hlt
push
cmpsl
jmp
daa
or
mov
les
and
pop
rcll
ss
mov
or
add
xchg
mov
lock
std
sti
mov
inc
mov
in
adc
or
adc
push
cld
sti
adc
xchg
out
neg
pslld
in
xor
mov
adc
ror
scas
mov
arpl
push
testl
lcall
test
push
fsubr
lock
add
mov
notl
cmp
aas
mov
mov
pusha
bound
sti
xor
xchg
inc
mov
negb
leave
sbb
xlat
jp
or
jnp
sar
cmpsl
push
add
nop
adc
jg
push
scas
fdiv
clc
imul
shr
fldl
cmc
aas
mov
mov
aam
sbb
add
push
cmp
mov
test
mov
cmp
loopne
or
sub
mov
repz
xchg
jl
add
popf
dec
inc
inc
clc
inc
ss
lods
pop
std
lret
int3
out
pop
ror
pop
cmpsb
addl
es
into
pop
push
ficomps
jmp
mov
cmpsb
fcmovu
push
jne
ds
fs
aad
fcoml
push
lcall
das
xchg
push
lret
in
and
push
xchg
dec
xchg
pop
sbb
mov
add
testl
vmovhpd
jl
shr
das
mov
icebp
add
mov
arpl
push
rorb
xor
mov
and
fabs
mov
fistl
aaa
adcb
pop
or
sti
imul
roll
jge
test
dec
rcr
xor
rcll
sahf
mov
mov
sbb
adc
jbe
jle
lcall
dec
inc
mov
cmp
lahf
mov
aaa
sbb
xor
nop
dec
cmp
inc
enter
adc
mov
out
xor
or
loop
or
or
outsb
cmp
shl
bound
clc
or
aam
fsubrl
ljmp
dec
adc
aam
scas
mov
lret
outsb
xchg
test
mov
sbb
lock
xchg
test
stos
cmpsl
daa
xchg
inc
xor
adc
out
push
shrb
pop
sub
jp
rcrl
pushf
out
pop
lret
mov
pop
sbb
cmp
mov
in
cltd
xor
push
cmp
cmp
xor
outsb
dec
cli
pop
insl
arpl
cmpsb
ret
mov
repnz
out
shll
adc
or
into
cmp
and
out
jno
mov
fbstp
add
ss
test
and
sbb
int3
adc
xchg
subl
inc
int3
jne
xchg
cmp
insb
fadds
test
imull
sbb
adc
imul
xor
data16
xchg
nop
jge
mov
sbb
into
jge
jge
jg
test
or
imul
rcrb
cmp
pushf
bound
dec
adc
push
imul
add
push
and
adc
movsl
stos
mull
repz
addr16
rorb
cli
jns
ds
inc
fdivl
pop
test
mov
cmc
and
in
or
cmp
cwtl
bound
xchg
add
insl
mov
sbb
push
mov
cwtl
mov
std
mov
cwtl
nop
lds
lahf
mov
jno
popf
je
rclb
mov
enter
in
and
or
pop
fdivrs
pop
fwait
inc
stos
mov
adc
test
dec
scas
ficomps
fwait
ds
xchg
jbe
stos
push
xor
bound
not
push
sbb
jle
xchg
scas
out
cwtl
fwait
sub
in
cwtl
mov
pusha
dec
push
mov
add
push
mov
lahf
shrb
xor
xchg
popl
xor
dec
xor
test
loopne
xchg
xor
insl
in
inc
int
mov
cmp
adc
jbe
fdivr
out
sti
adc
add
mov
int3
pop
mov
jnp
fsub
xchg
imul
pop
push
xchg
lea
inc
stc
loopne
and
cs
lret
repnz
mov
dec
aas
es
mov
inc
jge
adc
push
mov
es
rcr
pop
fdivs
cli
dec
mov
fcmovne
mov
std
pop
jne
clc
push
clc
pop
cld
xchg
sub
jecxz
push
or
mov
stc
inc
fstpl
jne
push
sahf
clc
sbb
push
pop
outsl
subb
in
push
dec
ss
aaa
ss
lea
sbb
lret
push
test
loopne
rcll
push
int
and
mov
fisubrs
gs
rclb
faddl
pop
adc
jae
loop
orl
not
sbb
int3
cmp
xchg
lock
cmpsl
movsb
jnp
dec
sub
dec
addr16
out
inc
mov
loopne
bswap
mulb
iret
fcmovnb
jp
stos
test
notl
mov
mov
arpl
mov
test
push
lods
call
push
sub
cwtl
js
xchg
sti
jmp
mov
push
fmuls
inc
popf
sub
push
pop
mov
adc
test
pop
mov
mov
pop
push
pop
mov
js
lcall
ljmp
jmp
mov
sub
ret
mov
stos
push
push
outsl
push
and
push
and
inc
or
fisubrl
pop
es
mov
ss
fcompl
mov
adc
xchg
and
push
test
out
fidivl
mov
les
daa
push
cmp
sbb
add
jp
mov
inc
cmpsl
mov
pop
cmpb
or
dec
hlt
fisubs
add
ds
xor
lea
add
cmp
jecxz
dec
nop
xchg
insl
jbe
jge
ficoms
adc
cmp
pop
fcompl
sbbb
cld
sbbl
mov
scas
addr16
cs
cmc
insl
aaa
shrl
pop
movsb
mov
inc
and
push
mov
jno
outsb
cs
push
push
xchg
ret
cmp
aad
pop
sbb
scas
mov
fs
loope
pop
sub
movb
jo
or
inc
jne
out
test
inc
aas
cmp
inc
mov
cmpsl
sbb
rol
xchg
and
mov
pop
out
dec
sub
sub
addr16
mov
add
filds
rorb
adc
mov
out
mov
dec
xor
mov
rol
arpl
jne
cwtl
fucom
addr16
pop
inc
or
scas
stos
in
int3
aaa
cmp
lcall
mov
or
mov
push
sub
jb
push
push
and
and
das
aaa
subl
aam
call
mov
leave
add
fistpl
xlat
jae
movsb
xorb
or
and
mov
outsb
mov
int3
cwtl
push
ror
test
or
neg
jle
rcl
dec
movsl
addb
pop
aad
push
pop
jbe
enter
push
fcomp
push
repz
pop
inc
cmp
ds
jmp
lcall
adc
cmp
jae
add
mov
dec
aas
mov
pop
sub
sub
ret
addr16
in
fidivrs
sub
sub
xor
fldt
ss
fbld
fildl
lods
shl
sarb
cmp
push
idivl
cmpb
or
pusha
add
mov
inc
mov
cmc
mov
sbb
mov
out
adc
outsl
je
hlt
inc
inc
or
push
fwait
repz
add
mov
adc
xchg
add
and
add
imul
mov
jl
and
rcrl
mov
fneni(8087
mov
jo
inc
out
jg
sbb
xor
ret
jo
mov
testl
push
xor
into
xor
push
lea
mov
fcoml
and
negl
xchg
mov
je
add
pop
imul
lods
lock
or
popa
xor
push
pop
push
movsl
jns
hlt
dec
sbb
adc
cmp
gs
lea
push
adc
inc
xchg
pop
std
mov
mov
jp
push
lock
xchg
inc
adc
mov
sub
mov
test
add
addr16
jns
roll
push
push
and
fsubr
mov
and
and
ljmp
inc
or
pop
fsubl
cwtl
in
mov
cmp
or
gs
sti
mov
jno
and
and
adc
roll
mov
call
cmpsb
add
icebp
push
jmp
clc
scas
nop
jl
sti
loop
jl
add
jnp
cmp
fiaddl
arpl
jbe
adc
cli
stc
mov
jmp
adc
adc
mov
bound
mov
dec
scas
jp
nop
addb
xor
sbb
mov
mov
sbb
mov
jmp
mov
and
push
or
or
addl
jmp
cmpb
mov
stc
inc
sbb
inc
imul
pop
mov
mov
inc
jnp
push
insl
cli
jp
jp
inc
xor
es
sbb
xor
jnp
xchg
pop
push
push
es
mov
jbe
adc
out
imul
adc
sbb
arpl
outsl
into
cmp
inc
rol
and
movsl
mov
je
jg
fisubs
jp
jecxz
bound
incl
cmp
sub
and
mov
or
and
jae
xchg
mov
pop
dec
mov
out
xorl
fmull
loope
mov
mov
iret
cmp
xchg
pop
sub
pop
js
xchg
mov
jle
fs
test
jp
mov
testb
sbb
inc
inc
insb
je
inc
mov
push
xchg
add
iret
addr16
shll
movsl
les
inc
xor
push
or
js
xor
js
test
ljmp
lcall
nop
ret
add
dec
xchg
or
mov
sti
not
push
xchg
pop
fstl
xor
jb
and
and
cmpsl
fdivr
sarb
mov
jmp
arpl
mov
mov
xchg
aad
pop
jne
add
leave
dec
mov
adc
cltd
sarl
dec
mov
push
iret
mov
stos
xchg
fldt
jp
push
es
xchg
jl
int3
inc
mov
adc
inc
cmp
fmul
mov
and
and
sbb
inc
mov
inc
and
insb
aas
xchg
pushf
sub
loopne
mov
xchg
mov
fcompl
pop
lods
jnp
add
and
out
add
roll
xlat
fstpt
mov
in
sub
je
push
scas
scas
lcall
adc
push
xlat
xchg
push
sti
jb
cmc
pop
or
or
mov
mov
mov
mov
sbb
lahf
jne
sbb
sarb
mov
jno
push
cmc
inc
aas
call
mov
add
repz
outsb
fs
cmp
mov
push
addr16
test
push
mov
mov
sub
adc
fsubs
mov
xchg
or
arpl
jle
jb
dec
mov
mov
or
aas
repz
push
cmp
test
sarl
add
xchg
jg
test
sbb
inc
lods
add
inc
fsts
and
scas
jo
pop
or
fisubrs
lahf
dec
lock
pop
rolb
mov
jl
and
pop
pop
jnp
pop
fstps
psubq
dec
shrl
out
jl
and
push
push
adc
adc
and
and
push
xor
push
in
mov
cmpsb
or
add
dec
ret
adc
xlat
cmpsb
mov
mov
andb
push
jl
es
loopne
aas
xchg
xchg
jmp
xchg
fdivrl
mov
and
js
dec
cmc
lret
inc
jle
aam
mov
jl
dec
push
cs
loopne
xchg
inc
pop
inc
jmp
jg
cmp
aad
pop
add
nop
xchg
push
adc
sbb
adc
loop
and
xchg
addb
cs
insb
rcrb
push
jbe
add
lods
xor
inc
fs
sbb
mov
bound
and
pop
movsl
sbb
pop
xchg
mov
mov
rcrb
xchg
ret
inc
mov
mov
push
xor
cmpsl
pop
xor
inc
mov
mulb
lret
mov
ss
test
push
cwtl
sub
icebp
divb
leave
pop
cmp
push
test
fsub
fisubrl
dec
fisubrl
push
fisttps
hlt
fisttpll
mov
sbb
mov
jns
adc
add
inc
stc
mov
jns
js
test
faddp
imul
pop
xchg
fsubrs
push
sbb
jnp
add
lock
push
ljmp
xlat
addb
js
data16
test
mov
mov
xlat
cli
pop
insb
mov
pushf
gs
jne
stos
test
and
aaa
aas
addr16
andl
int
loopne
pop
mov
into
lock
xchg
cmp
in
sbb
repnz
and
imull
out
aam
cltd
add
addr16
mov
mov
pop
ja
mov
andb
cmc
xor
sarb
sarb
cmp
xor
and
or
adc
hlt
lcall
mov
cmpsb
mov
cmpsb
mov
je
repz
int
xlat
adc
lahf
adc
mov
jne
loope
xchg
mov
subb
sbb
bound
out
add
cmp
xchg
sahf
xchg
dec
sbb
cmp
cmp
adc
idivl
cld
mov
ret
adc
lea
fwait
jne
inc
sub
nop
iret
movsl
push
push
inc
add
rcrl
sbbl
lret
fld
dec
pop
jle
mov
cli
int
fistps
dec
ja
outsb
add
or
mov
or
sub
insb
outsb
sbb
dec
mov
cld
ficoml
and
mov
mov
rcrb
jmp
rorb
dec
mov
mov
cld
les
add
sbb
mov
pop
xor
mov
adc
icebp
add
test
divl
mov
shlb
insb
ja
fiadds
add
adc
fidivrs
mov
ja
fwait
mov
mov
mov
mov
mov
push
in
iret
test
scas
mov
fildll
les
or
xor
fmull
push
loopne
xor
sbb
xchg
lea
lods
sti
pop
insl
loopne
mov
xchg
daa
and
sarb
or
stc
and
mov
sub
inc
fidivl
inc
sub
push
ret
mov
ljmp
mov
add
jp
int3
xchg
pop
cmp
mov
pop
cmp
jnp
flds
sub
or
ret
sub
fdiv
out
sbb
xchg
notb
mov
mov
cmp
sbb
pop
pusha
dec
mov
icebp
mov
cmp
adc
imul
repnz
xlat
xchg
xchg
popa
stos
stos
in
xor
jno
leave
jmp
lahf
ret
and
lds
add
inc
lea
xchg
pop
les
push
and
hlt
sahf
dec
and
inc
add
push
aaa
dec
xchg
sbb
and
leave
add
push
mov
inc
aam
mov
and
inc
mull
xor
and
cmp
jl
mov
and
mov
xchg
loop
cmpsb
shrl
je
mov
adc
std
out
or
out
mov
xor
and
aas
sub
xchg
loopne
pop
inc
in
ljmp
push
lret
adc
lods
xor
or
adc
dec
sub
mov
adc
inc
push
xchg
les
jno
cmp
gs
pop
pop
fildl
fsts
mov
dec
mov
ss
pop
in
xchg
cmp
xchg
push
xchg
adc
pop
xor
add
inc
sub
xchg
fistps
mov
mov
imul
xlat
push
xchg
aaa
pop
dec
popf
push
andl
mov
ror
sub
xchg
xchg
sub
jnp
sbb
sbb
dec
dec
jns
sub
add
int3
adc
dec
aaa
mov
push
adc
sub
rclb
jecxz
jmp
iret
mov
pusha
push
sbb
add
and
mov
mov
jg
jb
aam
jle
and
subl
sub
out
xchg
insl
or
hlt
lds
push
aas
cld
rclb
mov
mov
arpl
xor
mov
adc
xchg
push
sbb
mov
lcall
sbb
stos
stc
lret
push
rcrb
dec
xchg
out
pop
dec
push
mov
pop
nop
rorl
les
faddl
inc
adc
pop
jb
or
push
sti
push
push
cmp
xchg
jmp
stos
popf
outsl
push
lea
pop
dec
shr
mov
sbb
add
mov
les
lret
xor
imulb
stos
xor
jmp
mov
cmp
adc
sbb
mov
xchg
leave
movsb
xor
aas
add
in
add
aas
pop
and
cmpl
mov
push
xchg
push
cmp
or
dec
shr
loope
movsb
xchg
fidivl
sbb
ja
pop
dec
test
dec
out
repnz
enter
fsts
in
fwait
addr16
test
fndisi(8087
sbb
push
test
fistpl
out
orl
or
inc
jbe
add
push
adc
out
jp
fimuls
fisttps
into
hlt
enter
xchg
sbb
adc
test
insl
cmp
push
mov
shlb
xchg
cmp
aaa
loop
shll
das
cmp
in
into
call
daa
cmpsb
jge
or
adc
inc
and
lock
ret
ja
adc
test
cmp
mov
xchg
gs
std
pop
insl
inc
negl
insl
sub
shr
jg
adc
pusha
mov
xchg
xchg
in
fs
push
mov
insl
mov
repnz
push
xor
pushf
xlat
incb
and
loopne
sbb
imull
sbb
in
aam
mov
lahf
inc
xchg
dec
pop
and
push
add
lock
loope
rcrl
push
or
jae
or
testl
aad
repz
ret
sbb
sbb
les
dec
aad
fxam
mov
xor
jno
mov
sub
incb
pushf
mov
jnp
ret
mov
ljmp
mov
fucomp
mov
lcall
mov
or
jecxz
adc
ret
subl
stos
mov
add
dec
pushf
fisubrs
popl
aad
push
insb
add
and
mov
pop
mov
sahf
dec
aam
rcrb
iret
sbb
mov
dec
add
test
cwtl
js
mov
pop
sbb
xchg
test
es
in
in
cmp
lcall
xchg
jae
cmp
jno
and
xor
rolb
aad
add
adc
dec
aaa
sahf
and
lret
cld
bound
inc
inc
imul
and
mov
cmp
add
iret
inc
xor
pop
out
pop
push
sub
pop
mov
and
sub
test
mov
jns
mov
push
pusha
sarb
cltd
insl
out
mov
mov
mov
inc
ljmp
jmp
shll
hlt
sub
orl
out
adc
out
adc
es
shll
xchg
aas
mov
pop
sub
jmp
pusha
sub
stc
inc
clc
lock
test
xor
dec
mov
jl
cmpsb
test
cld
cmc
cmp
jge
push
icebp
out
dec
and
popf
jp
pusha
mov
pop
sub
xchg
sbb
clc
pop
inc
leave
mov
jg
loope
shr
or
pop
adc
dec
ret
sbb
pop
push
jmp
fwait
mov
insb
cvttps2pi
mov
xor
xchg
sub
imul
cmp
pop
pop
sbb
dec
cmp
fwait
adc
sub
in
pop
xlat
add
jp
add
cli
xchg
push
jmp
and
or
adc
jg
pop
or
xchg
mov
and
cltd
inc
jns
or
das
inc
nop
push
inc
repz
mov
adc
repnz
pop
inc
imul
push
add
jle
pop
inc
xlat
dec
je
inc
jge
add
icebp
popf
lods
int
mov
mov
sub
scas
mov
and
addr16
xchg
ds
fildl
push
in
into
inc
cmp
adc
dec
scas
or
popa
push
stos
lods
cmp
jnp
sbbl
pop
push
cmp
fildll
lahf
and
cmpsb
xchg
jo
repz
in
aaa
sub
cld
incb
dec
push
lret
data16
cltd
mov
std
inc
test
push
sbb
loop
cli
cmpsl
loop
add
sti
lds
cmp
sbb
je
mov
ficompl
cli
sbb
int
mov
mov
imul
das
fdiv
mov
sbb
das
xchg
cmpsl
fidivrs
dec
test
jl
mov
gs
mov
cs
out
adc
mov
test
in
push
push
jge
fldcw
mov
adc
cmp
mov
daa
hlt
and
xchg
cmpsb
push
lahf
lahf
aaa
test
jae
push
inc
sub
repz
out
push
fsubrs
dec
jle
jne
test
jp
or
lods
lcall
push
mov
mov
mov
jnp
sbb
sbbl
sbb
dec
push
dec
arpl
push
xchg
dec
push
ret
cli
dec
popa
ret
inc
mov
adc
cmpsl
push
fimuls
or
push
push
jecxz
cld
lcall
cmpsb
fcoms
test
scas
cs
xor
xor
xchg
pop
and
ficomps
inc
add
packssdw
sbb
xchg
xlat
fadds
fidivrs
push
std
mov
aas
test
push
push
lds
mov
cmp
aad
fld
cmp
call
shlb
ja
sub
rolb
cmp
es
sahf
rolb
dec
sub
arpl
push
daa
dec
lods
xor
outsb
mov
les
mov
lea
cmp
mov
and
fnsave
paddusw
std
dec
dec
and
out
push
dec
mov
sahf
push
jl
mov
sub
sub
inc
inc
inc
andb
fsubs
pop
mov
xor
inc
push
stos
test
icebp
out
jae
nop
cmp
cmpsl
orb
sbb
inc
shl
jno
out
jns
test
jne
sub
lret
cwtl
clc
add
dec
ret
inc
adc
pop
mov
cmpsl
dec
xor
cmpsb
imul
test
sahf
jge
addr16
jle
mov
xor
inc
mov
xor
inc
orb
addr16
leave
push
sbb
dec
dec
addr16
dec
xchg
ret
icebp
push
out
push
cmc
mov
fdivrp
sub
push
sbb
jns
and
push
ret
push
jne
mov
insb
test
stos
pop
xor
sbb
adc
xchg
xor
pop
rolb
nop
outsl
icebp
cs
inc
inc
sti
rolb
dec
imul
mov
cwtl
or
sbb
xor
out
sbb
rep
cmp
sub
sbb
jo
jbe
jns
stos
mov
fcompl
out
xor
push
int3
push
dec
aas
mov
xchg
enter
mov
ret
pop
icebp
out
in
xchg
in
mov
jp
aaa
enter
cmp
hlt
ljmp
inc
cmpsl
xorl
lds
mov
lahf
xchg
or
jo
icebp
push
pop
mov
xchg
js
cs
shrl
xchg
inc
lret
das
mov
hlt
pop
sbb
fidivs
jmp
inc
enter
inc
fs
shlb
add
mov
dec
pushf
xlat
outsl
xor
addr16
in
fnstsw
rcrb
aas
aad
nop
push
mov
aas
dec
cltd
add
cs
cmp
loopne
les
or
orb
xchg
bound
jecxz
push
push
add
cmpsl
mov
xchg
jno
cmp
and
or
or
jge
push
xor
inc
test
cmc
cwtl
jle
fmull
or
shll
mov
inc
lea
xor
xchg
sbb
jae
gs
imul
in
neg
rclb
add
add
pop
inc
mov
cmp
adc
in
js
jp
push
aam
sbb
in
aaa
jp
push
xor
xlat
dec
ret
rcrb
daa
cmp
sbb
ja
idivb
cmp
push
jp
negb
pushf
mov
and
loopne
ficomps
fs
dec
cld
mov
js
xlat
dec
cmp
ss
mov
sbb
inc
mov
fisubl
add
mov
sbb
je
or
jecxz
inc
jb
pushf
dec
add
fidivl
es
cwtl
mov
sbb
push
jnp
pop
xchg
icebp
xchg
leave
and
xlat
xchg
fnstcw
sbb
pop
mov
mov
xchg
push
sbb
loope
and
iret
add
fildll
fs
sbb
shrl
xchg
subb
out
xor
mov
push
das
fnstcw
inc
push
call
jnp
add
fbld
notl
ret
lds
jecxz
lret
aad
push
ret
int
scas
pop
imul
add
arpl
mov
and
mov
comiss
xchg
insl
stc
or
mov
fmulp
dec
inc
cwtl
jmp
mov
out
sbb
mov
enter
shlb
cltd
mov
jl
rcrl
adc
mov
sub
enter
icebp
cld
hlt
fcmovnb
daa
ret
fldenv
packuswb
in
or
aad
adc
ss
loopne
inc
mov
mov
into
inc
mov
lock
add
outsl
js
dec
cmp
cwtl
repz
cmpsb
ja
xor
inc
and
shll
lcall
pop
int3
inc
cmp
fwait
mov
in
jp
repz
btc
sub
mov
out
jmp
pop
mov
sub
outsl
out
push
bound
clc
jne
int3
push
mov
mov
xor
stc
push
add
mov
hlt
inc
jge
fists
sbb
mov
push
adc
stos
negb
mov
pop
decl
mov
jns
push
xor
mov
imul
xchg
pop
call
mov
jbe
jbe
aad
scas
ss
xchg
mov
int
jge
outsb
je
push
push
scas
sub
in
movb
push
js
adc
data16
inc
xchg
aaa
push
shrb
mov
addr16
fmull
int
dec
mov
ret
dec
mov
jle
dec
jecxz
xor
dec
and
aaa
data16
sub
inc
xchg
int3
in
fdivr
sub
dec
mov
or
scas
xor
cmp
and
shll
inc
lods
data16
dec
pop
jo
sti
dec
movsl
add
imul
mov
pop
jge
push
pushf
mov
shl
jmp
addb
sarb
adc
push
add
lea
cmp
or
jmp
aas
incb
jnp
mov
aam
sbb
mov
dec
sub
gs
adc
push
repnz
add
in
imul
in
fucom
and
outsl
adc
imulb
mov
outsb
push
jne
add
fcoms
clc
sbb
inc
scas
jne
cmc
lret
push
dec
clc
cwtl
jb
testb
add
rorl
fldt
cmc
cmp
mov
push
cmovo
sbb
fisttpll
push
jnp
mov
fldcw
aam
jge
inc
stos
scas
sar
lcall
push
push
out
shrl
cmp
movsb
shll
sti
loop
add
test
jg
sub
nop
pop
ss
imul
xchg
jnp
mov
stc
mov
iret
loopne
add
dec
inc
or
shll
das
add
stos
lods
adc
pop
mov
add
cwtl
xor
outsl
dec
mov
cmc
pusha
inc
add
out
xor
mov
shrb
mov
dec
sbb
fucomi
mov
push
lods
xlat
push
pop
push
mov
icebp
or
mov
out
pop
lahf
es
icebp
push
sahf
mov
sub
insl
mov
xor
cmp
stc
push
aam
cld
push
enter
imul
or
in
aaa
int3
cmp
adc
or
fwait
jge
adc
rcl
sub
pop
leave
mov
shlb
in
pmullw
mov
mov
aaa
lods
cltd
in
push
sub
lods
mov
ficoml
inc
mov
scas
loope
dec
pop
cmp
ds
mov
hlt
mov
int
lcall
adcb
push
testb
xchg
inc
fidivrs
sub
in
mov
or
out
mov
adc
jne
lock
or
js
xor
je
sbb
xchg
in
adc
mov
dec
xchg
xchg
call
or
rolb
movsl
cmc
fsts
nop
std
fsts
cmp
lods
adc
pop
pop
cmp
cmp
xor
sarl
pop
xchg
es
call
dec
out
fdivrs
clc
and
in
ds
dec
mov
mov
mov
fstpt
inc
test
xor
cmpsl
cli
mov
jae
mov
repnz
addb
shll
out
sti
cs
add
and
lock
and
pop
push
sbb
outsb
xchg
insb
fnstenv
mov
movsb
test
cmc
mov
clc
fxam
iret
xorl
stos
inc
std
push
int
outsl
fistpl
add
std
sbb
in
fistpl
jle
movsb
mov
push
pop
pop
nop
in
dec
scas
daa
xor
push
push
fiadds
jmp
lea
ficoms
pop
xchg
test
hlt
sti
and
nop
push
inc
jle
mov
shrb
inc
pusha
les
test
inc
out
lds
jbe
mov
xchg
pop
or
sub
mov
out
ret
mov
pop
xlat
mov
nop
xlat
cli
pop
mov
in
jo
pop
daa
ja
fistpl
xchg
fdivrl
lahf
cmpl
jp
loopne
mov
mov
jle
cmp
in
cmp
jae
push
int
adc
mov
test
ficoms
sbb
lcall
outsb
dec
gs
cli
js
loop
fidivrl
es
in
mov
xlat
pop
iret
sbb
repz
dec
xchg
popf
mov
xchg
xchg
cmp
pop
call
inc
fwait
es
xor
xor
inc
mov
push
inc
movhps
inc
repz
adc
inc
pop
push
push
and
das
loopne
lods
push
outsl
add
push
ds
fistpll
js
jg
sbb
dec
jp
in
movzbl
out
or
lock
mov
adc
mov
ficomps
xor
je
mov
mov
pop
mull
cmp
mov
xchg
aam
jp
xor
fldcw
test
xor
neg
add
xchg
roll
and
test
idivb
push
push
rolb
ret
mov
xchg
sti
mov
mov
push
xchg
sub
or
jnp
loop
inc
mov
cltd
jns
xchg
jae
sub
push
clc
js
inc
fnsave
in
push
mov
aas
jp
xchg
jecxz
xchg
jae
repnz
adc
pop
les
flds
je
jae
stos
aas
loope
ret
xchg
cld
sbb
jle
and
scas
outsb
into
and
dec
xor
int3
push
mov
xchg
test
ss
pushl
mov
insl
mov
icebp
outsl
int3
jns
fldt
pusha
out
add
test
lds
faddl
ljmp
ja
xorb
jmp
imul
jbe
out
gs
adc
loope
sbb
jo
mov
jmp
outsl
push
aad
andb
data16
mov
scas
rclb
adc
out
jnp
dec
sbb
mov
mov
dec
pop
pop
out
pop
popf
aas
dec
movsb
xchg
push
dec
mov
push
mov
dec
jge
ljmp
js
mov
rep
jo
cmp
jp
mov
mov
xchg
and
sahf
roll
add
mov
addr16
xor
xor
adcl
nop
enter
mov
repnz
add
mov
jae
mov
add
sub
repnz
pop
jns
out
dec
in
add
enter
mov
mov
and
nop
xchg
cltd
int
mov
adc
out
lahf
in
sbb
or
fidivs
cmp
or
push
ljmp
xchg
leave
lcall
jecxz
arpl
mov
cmpsl
xchg
jnp
dec
cmp
dec
cwtl
sbb
pop
sbb
test
xchg
std
loop
mov
loop
cld
icebp
dec
push
xor
xlat
decl
rcrb
push
mov
dec
or
lea
mov
sbbl
push
xchg
cmp
repnz
enter
mov
xchg
popa
add
pop
mov
call
sub
pop
push
jl
and
aad
sbb
mov
call
outsl
test
aam
ja
dec
sub
push
sub
stos
scas
jmp
ja
cmpsl
addr16
sti
mov
adc
cs
jne
aam
pop
aaa
adc
lods
mov
lret
mov
jecxz
inc
mov
icebp
mov
icebp
testb
mov
adc
pop
or
pop
int
and
ret
push
xchg
xor
xor
push
cmpsb
fisubs
adc
and
push
inc
mov
pop
fisubs
pop
test
stos
test
xchg
cltd
xor
repz
dec
and
pop
pop
pop
jge
fdivs
xor
sbb
pop
or
test
xor
les
cli
stos
jp
or
lods
pop
and
aaa
clc
mov
mov
add
jge
sbb
add
mov
popa
push
fldcw
inc
arpl
and
dec
or
push
sub
pop
adc
pop
into
sarl
pop
scas
ret
cmp
int3
pop
mov
add
bound
ss
mov
and
data16
sbb
adc
test
xchg
sbb
pop
fstpt
xchg
cmpsb
xchg
cmp
sub
fldcw
inc
xor
or
xchg
ret
push
dec
xchg
dec
fsubl
push
mov
pop
add
sar
push
push
sub
add
cli
out
out
xlat
test
push
je
and
call
xchg
inc
rcll
aas
dec
imul
mul
mov
mov
push
std
ljmp
sahf
movl
jbe
mov
out
arpl
and
es
or
aas
popa
jns
cmp
enter
pop
push
addr16
iret
xchg
xor
lret
pusha
ljmp
mov
mov
pushf
cmp
mov
and
sbb
mov
lret
sbb
lahf
scas
pusha
jno
jnp
les
pop
hlt
inc
or
divl
sahf
and
push
cmp
xchg
mov
sub
gs
loopne
push
or
xor
shrl
sbb
and
test
clc
cmpsl
scas
cmpb
popa
fs
movsb
mov
fiaddl
xor
dec
dec
sahf
fcompl
push
xor
mov
xlat
mov
sbb
cwtl
testl
rorl
scas
test
push
inc
dec
adc
int
push
imul
rclb
dec
mov
push
pop
and
test
cmp
pop
and
and
mov
add
int
movsb
push
xlat
in
xchg
push
xchg
jbe
pop
mov
pop
movsb
inc
rorb
dec
out
cli
add
ja
jno
nop
stc
cmp
stc
jp
pop
fnsave
add
push
imul
mov
rolb
pop
push
and
fdivrp
dec
iret
sub
fisttpll
je
aas
subl
jg
push
mov
jl
movsb
sub
dec
push
inc
adc
sub
popa
clc
sbb
jns
lds
aas
stos
shlb
cmp
mov
lock
in
in
xor
pop
mov
ja
scas
sub
das
fisttpll
adc
dec
int
stos
fiadds
add
lahf
sub
xor
repnz
mov
scas
stos
cmp
or
je
cmp
adc
test
jnp
xchg
push
into
or
fcomi
mov
je
cmp
cmp
int3
out
mov
repz
cmp
mov
push
lods
jmp
pop
mov
dec
cmp
push
sub
mov
xchg
add
in
jns
in
fcoms
push
cmpb
les
xlat
cs
pusha
inc
add
lret
insb
mov
outsb
and
inc
aam
cmp
xor
adc
inc
roll
add
xchg
arpl
mov
lock
mov
pop
mov
and
mov
dec
fmull
cs
or
out
xchg
mov
inc
fs
clc
or
mov
jle
mov
dec
loopne
fisttpl
and
adcl
xchg
sub
test
cmc
sbb
mov
in
push
inc
sbb
xorb
push
mov
or
jne
or
or
pop
incb
mov
out
shlb
push
sti
stos
in
ficoml
xor
mov
add
out
std
mov
add
or
insb
jp
cmc
dec
scas
push
pop
adc
cwtl
cmpsb
icebp
rcrl
pop
je
or
jle
mov
add
mov
xor
dec
mov
out
movsb
outsl
int
lods
jno
jo
jle
andl
add
adc
jp
sbb
xchg
sub
mov
jo
jnp
dec
movsb
addl
rcrl
fcmovbe
movsl
sbb
mov
lods
jnp
rcrb
in
fimuls
dec
push
mov
aaa
enter
and
pop
pop
sbb
in
enter
push
aam
xor
adc
in
add
adcl
jae
push
jns
aas
and
add
sub
and
adc
push
jnp
mov
subl
nop
clc
ret
stc
adc
popa
out
fdivrs
sub
sti
ret
mov
adcl
dec
xor
mov
adc
inc
mov
movsl
mov
push
pop
adc
inc
push
mov
ljmp
ret
dec
xlat
jp
ror
adc
pop
cmp
aaa
pop
insb
sbb
aad
sub
xchg
jge
xchg
mov
ficoms
roll
test
out
mov
testl
jae
std
iret
xchg
outsb
lahf
pop
scas
add
mov
frstor
movsb
jbe
rclb
lds
adc
xchg
aad
or
inc
dec
lret
and
sub
cld
adc
pop
mov
mov
out
add
fisubrl
xor
push
scas
ret
aas
mov
arpl
add
roll
add
add
adc
jecxz
add
xchg
mov
movsb
push
adc
sub
sub
dec
lea
int3
movsb
jne
das
xchg
pusha
mov
shll
or
lahf
or
cmp
pushf
xor
push
loope
data16
and
inc
mov
sarb
inc
lcall
mov
xor
daa
test
jecxz
jb
adc
dec
cmp
xchg
icebp
je
jnp
loopnew
jne
lods
out
mov
sbb
dec
sub
and
xchg
enter
popf
bound
add
mov
popf
pop
push
dec
movsl
jb
mov
pushl
inc
stos
stc
mov
daa
imul
arpl
mov
test
ret
add
push
lahf
pop
sbb
in
pop
sub
ljmp
cwtl
jg
push
jg
adc
test
inc
divb
or
lret
sub
or
add
add
pop
test
cmpsl
adc
and
in
pusha
adc
mov
jge
lock
xchg
add
mov
cltd
xchg
cs
push
imul
mov
push
aaa
add
rorl
popa
scas
insl
cmp
fs
lods
loop
call
push
pop
test
mov
out
in
lds
add
stc
es
rcrl
frstor
ret
int3
adc
push
cmc
dec
test
push
fsub
jno
movsl
das
mov
js
cmp
xchg
inc
adc
cld
jnp
mov
sbb
jp
mov
cmp
jmp
pushf
shll
sub
sub
adc
inc
shll
sub
push
dec
mov
out
xlat
adc
and
and
stos
es
adc
frstor
in
mov
in
mov
jecxz
das
outsl
pop
sti
mov
popa
mov
pop
stc
mov
dec
divb
fnstcw
aaa
xchg
lahf
pop
add
or
cmp
xor
inc
sahf
fcmovne
inc
mov
sti
int3
or
sbb
scas
and
cmp
lret
cmp
cld
jne
push
icebp
enter
push
fsts
cmpsl
popa
lock
pop
sub
jle
cltd
xlat
test
arpl
xchg
daa
xchg
repnz
fldl
sub
or
xor
adc
mov
cmp
cld
pop
ret
repnz
adc
sub
pusha
cmc
jbe
repz
mov
add
daa
and
jbe
stc
test
adc
add
enter
lea
inc
cmpsl
fwait
repz
imul
aam
mov
fbld
stos
or
push
pop
sub
std
fcoms
das
in
aas
cwtl
int3
or
sbb
jb
adcb
or
mov
xlat
sub
xchg
xchg
rorb
push
xchg
subl
jo
xor
icebp
cmpsl
xlat
pop
fadds
imul
mov
push
ret
push
mov
push
cs
mov
adc
lcall
fstl
and
fsts
pop
push
int
mov
cmp
lods
xchg
cld
inc
or
mov
jne
pop
lret
inc
outsb
cmp
mov
inc
into
pop
sub
inc
test
and
sti
pop
pushf
dec
pop
setnp
mov
imul
fisttps
push
sub
inc
loop
mov
stos
mov
loopne
js
cmovp
mov
inc
xor
repnz
cmc
jg
pop
icebp
sbb
inc
mov
mov
cmp
push
outsb
xchg
sub
xlat
push
push
sahf
dec
dec
push
or
loopne
int
sbb
push
scas
xchg
ficoms
fcoml
sub
adc
cmc
aas
shrb
lret
push
cmpsb
out
sbb
pop
cli
repz
fdiv
cmpsb
mov
enter
std
test
xor
cmpsl
mov
loopne
cmp
or
jmp
add
inc
adc
dec
or
mov
lods
test
lods
cli
cmc
xor
push
push
das
and
shl
into
sbb
cmp
cmp
mov
lahf
adc
xor
dec
push
rsqrtps
dec
pop
cmc
lds
andb
addr16
xchg
dec
hlt
out
jle
inc
cs
cmpsb
js
inc
inc
push
cmpb
adc
rcr
push
xchg
inc
mov
or
pop
imul
pop
xlat
jns
in
mov
sub
shlb
jns
les
inc
sub
mov
mov
sub
in
cld
shlb
test
popf
mov
mov
fsubrs
push
mov
add
push
mov
inc
dec
sub
pop
and
lahf
jl
gs
pushf
sahf
sub
mov
mov
or
shlb
scas
sahf
adc
dec
ds
imul
and
sbb
shlb
insb
mov
js
ret
arpl
mov
sub
sub
test
idivl
add
out
jne
adcl
scas
jg
sbb
xor
aad
popa
fsubp
pop
sub
test
ret
imul
std
in
mov
mov
sbb
sbb
lcall
cmpsl
inc
and
das
and
fs
sub
push
sahf
ja
jae
cmp
or
lahf
mov
mov
aaa
inc
dec
mov
jp
lods
jo
mov
inc
and
add
jne
leave
xor
ja
fstpt
test
mov
add
adc
les
add
push
andl
pop
cmpsl
xor
ljmp
adc
pop
test
roll
ja
mov
adc
imul
int
aas
lahf
push
mov
jmp
pop
stos
sbb
popa
xlat
stos
mov
shrl
aad
inc
xchg
jae
xor
sti
dec
hlt
sbb
or
movsb
jecxz
pusha
pop
jnp
mov
jo
pop
or
and
lea
or
push
mov
mov
das
push
xchg
inc
mulb
cmp
sub
in
xor
ss
lret
scas
lods
ljmp
hlt
ja
inc
sbb
ffreep
call
add
and
push
inc
inc
mov
cmovp
mov
out
js
xlat
adc
daa
add
cmp
pop
inc
cld
jge
push
mov
int3
mov
jg
adc
daa
sti
pop
or
or
sahf
dec
jecxz
or
xchg
and
pop
dec
cmpsb
jne
cmp
stos
xlat
daa
fs
jmp
mov
popa
in
das
mov
hlt
aas
mov
and
mov
in
lods
mov
insb
jge
sub
cld
xlat
scas
adc
in
sub
je
fs
mov
mov
inc
int
inc
dec
mov
test
repz
movsb
cltd
mov
mov
mov
rcrb
lods
fimuls
shr
shl
adc
jb
mov
lret
mov
xor
es
xchg
add
mov
cmove
add
xchg
imul
mov
lret
jmp
ja
ret
stc
adc
fbstp
and
cmp
xlat
out
addl
pop
xchg
dec
xlat
loope
mov
test
jl
sub
or
mov
and
xor
repz
out
inc
call
scas
fldl
and
xchg
jge
and
in
sbb
insl
xor
push
shll
les
movsl
adc
pop
jl
xchg
iret
adc
pop
lcall
jecxz
js
inc
or
inc
push
insl
or
inc
sbb
jno
roll
add
mov
push
mov
stos
cli
bound
jo
and
xchg
and
scas
cmc
std
pop
in
adc
xor
faddl
out
push
insb
push
enter
cmp
dec
jb
adcl
lcall
push
std
fnstcw
add
inc
jecxz
scas
call
or
dec
icebp
mov
push
test
int3
cmp
mov
jae
xor
adc
decl
fwait
bound
icebp
cmc
test
cmpsb
adc
in
gs
lahf
and
xor
repnz
fimull
inc
sub
movsl
jmp
cltd
rcrb
lods
int
sbb
jecxz
mov
lods
lahf
sub
jbe
daa
fsubr
mov
gs
jge
xor
push
popf
jae
jne
mov
adc
dec
sti
andb
xchg
push
inc
cltd
add
movsl
out
not
inc
insb
and
nop
mov
ss
addl
jmp
cwtl
stos
es
add
jmp
xchg
arpl
rol
xchg
lcall
shl
popf
and
sti
lds
rcll
and
cli
jecxz
mov
push
ret
xchg
das
data16
jp
mov
test
in
dec
fstl
sub
hlt
pop
dec
cld
sti
out
xabort
ja
jmp
jnp
into
jb
or
push
cmp
dec
pop
das
xor
andl
xchg
or
pop
sub
imul
cltd
mov
add
int
pop
loop
enter
push
pop
push
aaa
sbb
mov
adc
rorl
mov
mov
jp
mov
jl
fcmove
fbld
mov
ror
adc
rcl
addr16
fidivrl
pop
xor
sub
or
mov
int
cltd
cmp
adc
imul
push
dec
and
mov
mov
mov
sub
mov
in
rol
pop
es
mov
fisubrs
pushf
inc
mov
and
mov
iret
hlt
leave
xor
dec
es
stos
cltd
in
idiv
in
es
and
cmpsb
repz
stos
mov
xchg
pop
icebp
add
repz
repz
pushf
rolb
sbb
pop
pop
jnp
add
mov
xor
loop
repz
fists
cmp
lahf
cmp
and
mov
xor
pop
push
out
cwtl
cmp
push
fadd
sbb
push
mov
call
jns
adc
or
dec
jae
scas
jae
iret
push
scas
sub
push
std
inc
lds
push
xchg
cmpsl
scas
call
xlat
push
jo
mov
mov
mov
pop
icebp
rorb
inc
adc
jno
enter
insl
out
sub
rcll
mov
test
push
lods
jge
mov
jae
and
jle
jg
cmp
lds
cmpsl
xor
pop
fidivrl
scas
xor
dec
movsl
icebp
push
inc
nop
arpl
scas
out
lods
adc
cmpsl
insb
dec
and
inc
fnstcw
cwtl
pop
out
mov
xchg
out
push
and
data16
push
enter
pop
inc
xlat
dec
mov
int
mov
bound
or
aad
pop
fs
cmpsb
rcl
dec
pop
jp
mov
test
push
pop
mov
frstor
cmc
cmp
les
adc
outsb
or
int
mov
jg
fs
sbb
addl
call
inc
scas
inc
mov
xor
test
lcall
mov
adc
xor
pop
fsubrs
aam
xchg
xchg
in
and
les
jb
add
lcall
dec
sbb
pushf
push
call
in
cmc
in
xchg
out
pop
mov
xchg
outsl
or
cld
in
ja
xor
repnz
fwait
sbb
daa
mov
push
fcmovnb
inc
es
mov
jae
sub
jl
je
dec
mov
cs
sbb
xchg
inc
sbb
jno
data16
aas
cmp
jns
push
jg
test
push
add
stc
xorb
out
adc
aad
pop
rcrb
sbb
inc
fsubrs
adc
mov
iret
movsl
lahf
into
or
scas
inc
imul
jb
fstpt
lret
stos
movsb
pop
imul
inc
sub
fwait
or
insb
int
adc
scas
mov
cmp
shrb
lods
xchg
sbb
mov
xchg
mov
xor
jns
addr16
or
js
push
das
sahf
mov
push
mov
mov
cmpsl
mov
mov
in
mov
mov
icebp
ss
mov
add
adc
fidivrl
inc
xor
mov
push
push
test
clc
mov
push
int
and
adc
xor
push
scas
mov
mov
ss
push
xor
sub
je
cmp
cmp
in
sub
fidivs
and
rclb
shrb
xchg
test
movsl
or
jmp
faddl
imul
adc
jae
orl
push
stos
mov
cmp
inc
lret
jns
push
add
fisttps
mov
xchg
sub
loop
out
ret
loopne
adc
pop
popf
int
or
cmp
or
icebp
mov
decl
dec
add
dec
popf
sub
loopne
pop
pusha
sbb
mov
jmp
and
jmp
adc
jne
std
or
push
jl
sbb
or
outsb
iret
jae
arpl
inc
lods
mov
mov
stos
subl
out
popa
adc
push
pop
iret
xor
inc
jbe
movsl
push
push
adc
and
loopne
ficompl
xchg
push
dec
pop
mov
lcall
insb
daa
mov
or
mov
xlat
repnz
mov
adc
inc
mulb
dec
mov
stos
mov
addr16
add
cmp
pop
jne
mov
das
js
loope
xchg
mov
jne
mov
sbb
jo
orb
mov
int
add
pop
test
lods
mov
push
dec
adc
sbb
and
cli
add
leave
mov
test
mov
lods
fdivrp
popa
das
jb
cmp
notl
icebp
xchg
push
push
lcall
xor
pop
addr16
mov
add
and
bound
idiv
je
xchg
mov
jns
pop
lcall
and
jl
jno
cltd
push
pop
pop
cltd
sub
pop
cmc
dec
divl
jecxz
push
xchg
notl
push
xlat
repnz
jmp
jo
je
pop
and
mov
xchg
and
jb
popf
sbb
jno
mov
push
in
sbb
shrb
mov
push
pop
add
mov
in
and
sarb
std
into
sbb
inc
adc
xlat
nop
push
lret
mov
push
outsl
mov
stos
test
inc
jmp
lods
cwtl
sub
imulb
scas
mov
adc
add
repz
xor
jp
jecxz
sub
test
fiaddl
jg
out
popf
push
lea
fdivr
fildl
stc
testl
test
lret
leave
mov
loop
push
or
scas
jp
vmovaps
popa
loop
mul
xchg
add
sbb
outsl
pushf
adc
loop
imul
in
lret
xchg
int3
push
dec
loop
pop
loopne
scas
cmp
sahf
mov
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
aam
ja
fs
or
fs
mov
mov
lret
out
hlt
and
push
jecxz,pn
mov
mov
pusha
pop
test
jae
stos
pushf
cmp
sub
xor
insl
adc
je
cmp
inc
daa
leave
cwtl
adc
xchg
push
sub
test
movsb
jne
sbb
lret
leave
test
add
fldt
jne
stc
popa
lods
cmp
add
clc
scas
pop
cwtl
test
daa
dec
jmp
pandn
fcmovnu
mov
cmpl
dec
nop
movsb
scas
jge
jo
pop
inc
gs
cmpb
out
push
cmpsb
subl
dec
subb
pop
shl
cltd
inc
mov
lgs
xchg
pop
or
dec
scas
and
add
or
push
push
sbb
data16
test
adc
fs
mov
cmc
adc
dec
push
cli
pop
roll
mov
je
mov
scas
bound
subb
scas
sbb
mov
jecxz
sub
andl
cmpsl
test
xor
mov
jns
test
movsl
adc
mov
mov
xor
cmp
xchg
push
shrb
into
xchg
xor
xor
iret
std
mov
int
jae
int3
outsl
and
idivl
in
mov
lods
inc
sub
mov
jae
pop
in
pop
jg
inc
movsl
pop
data16
popa
add
mul
push
sarl
out
dec
frstor
push
scas
stos
pop
popf
divl
jae
out
and
aam
lcall
and
aas
repz
imul
aaa
lock
nop
adc
ds
int3
outsl
in
push
inc
int3
idiv
pushf
add
xorb
jae
push
pop
cmp
call
int
adcl
pusha
inc
inc
rolb
pushf
push
shlb
mov
repnz
push
xor
pushf
push
cmp
xor
and
scas
sbb
loope
or
inc
mov
push
faddl
out
lcall
outsb
push
mov
aaa
and
push
fnstenv
fs
popa
pop
push
mov
fstpt
cmp
mov
and
shr
scas
ja
and
ret
inc
mov
or
xchg
dec
mov
jo
aas
and
std
sub
xchg
out
in
push
pop
sahf
inc
xchg
shrb
add
ss
jnp
insl
push
add
add
int
into
lds
test
lock
movups
fsubrl
mov
and
out
aaa
in
sub
mov
aad
sti
jns
subb
hlt
pop
xchg
lea
out
mov
sahf
test
sub
aaa
cmp
in
cmp
push
pop
sahf
sub
pop
std
mov
push
xchg
mov
or
outsb
pop
test
out
sti
and
adc
xchg
jmp
jnp
je
mov
shll
dec
sbb
push
mov
daa
ret
fisubs
fwait
pop
sbb
mull
mov
mov
sub
push
xor
mov
mov
push
mov
insl
push
hlt
mov
loope
ljmp
inc
stc
pusha
xchg
mov
pop
adc
pop
ficoml
je
add
push
inc
loope
out
mov
push
jecxz
frstor
mov
or
enter
push
push
outsl
xor
fnsave
loopne
pop
jl
sub
add
pop
subb
jmp
iret
and
add
pusha
sub
mov
mov
movsb
xchg
bound
lea
sti
stos
push
pop
mov
xchg
call
jnp
mov
sub
sarl
jbe
lret
js
push
negb
push
xor
and
enter
ret
sbb
adc
aas
add
fildl
popa
jmp
out
push
mov
jo
int
dec
pushf
cmp
jl
add
add
dec
xchg
je
add
lret
addr16
dec
jno
xchg
iret
in
je
add
je
mov
cli
js
rclb
imul
dec
pop
frstor
imul
and
inc
dec
clc
mov
daa
xchg
loopne
in
xchg
sub
jno
or
push
mov
sbb
jmp
movsb
repnz
shll
out
inc
jae
bound
pop
push
fistpll
ficoml
cmp
or
pushf
fnstsw
xchg
push
mov
scas
add
pop
ds
test
and
add
decl
mov
insl
add
mov
cmp
pop
aas
pop
dec
mov
sbb
xlat
cltd
aad
add
cwtl
push
jns
js
lret
cli
cmc
int
scas
shll
pop
cmc
lea
daa
fcmovb
js
cs
inc
pop
mov
out
mov
aad
hlt
fbld
ficoms
fs
icebp
cmc
icebp
jp
mov
movsb
daa
leave
or
ficoml
and
stc
xor
sub
dec
dec
movsb
inc
clc
fldl
inc
xchg
jo
jb
mov
inc
ss
cmp
fldcw
dec
and
xchg
xor
movsb
pop
mov
adc
leave
inc
xchg
adc
loop
mov
mov
adc
clc
xchg
lea
cmpsb
repnz
adc
mov
cmc
cmpsl
rcrb
sbb
out
cmpsl
dec
sbb
scas
ret
test
sub
and
jae
add
mov
loope
lret
cld
sarl
xor
icebp
cmp
call
mov
jge
out
inc
sbb
or
fwait
call
push
pusha
pop
jne
push
mov
pushf
push
xchg
xor
loopne
push
lock
xchg
outsl
enter
mov
mov
lds
push
psubusb
xor
cltd
bound
fsubs
js
and
lret
xchg
repz
fistpl
cmp
popa
and
dec
xor
lea
jp
mov
cwtl
in
out
or
mov
add
push
xor
inc
push
in
clc
aas
or
clc
dec
xorl
pop
mov
sbbb
xorb
dec
mov
jne
shrb
lock
xor
add
mov
push
xor
mov
mov
xorb
fwait
mov
dec
sub
loop
cmp
sbb
add
push
jge
pop
dec
sbb
pop
into
cmp
es
add
adc
push
xor
adc
leave
mov
loopne
dec
cmpsl
test
mov
int
pop
dec
das
add
sub
repz
sub
scas
push
icebp
xchg
and
adc
test
dec
ret
dec
daa
loop
pop
fldpi
clc
dec
insb
lret
mov
scas
ficomps
outsb
mov
xlat
mov
jbe
stos
stos
push
inc
xchg
inc
mov
out
int
popa
adc
xor
sub
je
mov
mov
lret
fsubrs
cmp
repnz
jmp
xchg
jae
js
mov
mov
mov
js
adc
xchg
add
gs
dec
inc
out
sub
outsb
inc
mov
mov
lods
push
cmp
mov
jno
push
aad
les
addb
addb
dec
sbb
sub
lret
dec
cmc
mov
cmpsb
xorb
mov
mov
cmp
outsb
lret
les
pop
inc
push
dec
dec
test
push
je
lahf
jo
imul
xor
adc
data16
push
outsl
xorb
insb
push
jns
cmp
mov
mov
pop
clc
sbb
loopne
fcomps
cltd
sub
jo
leave
outsl
add
xchg
lds
sub
sbbl
fmuls
push
jnp
lea
sahf
inc
sbb
pop
push
or
loop
jbe
idivb
fs
sub
add
es
repnz
int3
pop
leave
shll
cmpsb
inc
push
xlat
ss
or
dec
clc
or
jle
out
push
subl
dec
mov
xchg
jno
jno
lcall
mov
test
lods
adc
sahf
sbb
ret
lds
push
and
sbb
xor
icebp
jnp
mov
insl
iret
inc
mov
loope
adc
or
dec
stc
fistpl
xor
stos
pop
insl
iret
mov
inc
dec
pusha
in
xchg
jbe
cmp
loop
mov
sbb
dec
test
pop
cmp
dec
add
sbb
mov
push
xchg
jnp
cmpsb
push
fcoms
lds
push
jp
push
inc
imul
pop
jge
cmp
fs
aaa
sub
push
sub
es
jge
stos
adc
repnz
mov
xchg
inc
js
negb
dec
cmp
push
sub
jbe
or
ret
outsb
nop
movsl
push
mov
mov
ficoms
test
xor
test
daa
push
movsl
sbb
adc
cs
or
dec
adc
pop
cmp
loope
add
test
mov
imul
into
outsl
cmp
scas
arpl
adc
ret
daa
push
fists
xor
xor
dec
das
orl
rcrl
stc
ss
fs
jle
push
sti
push
adc
aas
pop
add
xchg
xor
out
inc
out
or
ja,pt
jle
dec
in
mov
and
leave
ss
mov
cli
xor
mov
push
insb
pop
mov
fst
icebp
xchg
fildl
sbb
cwtl
daa
jns
pushf
sub
das
sti
out
adc
test
jbe
add
mov
mov
dec
sti
ficoml
sete
icebp
fiaddl
adc
stc
adcl
pop
sbb
pop
xchg
dec
pushf
xlat
divl
cld
dec
mov
or
inc
aas
ret
loop
lods
jmp
clc
test
fwait
mov
insl
or
test
fsts
loopne
sarl
js
xchg
insb
pop
xchg
push
loopne
mov
sbb
lock
push
leave
fmulp
mov
jbe
jae
jmp
push
lock
xchg
int
dec
data16
or
dec
add
xor
pop
stos
and
mov
aaa
sbb
mov
addr16
mov
mov
jge
mov
lods
movsl
xchg
sbb
cli
sub
inc
cli
lahf
mov
xor
loop
inc
addr16
mov
xor
dec
xchg
stc
mov
lahf
and
push
into
mov
mov
negl
stc
cli
syscall
pop
or
imull
pop
jne
rcl
incb
jle
add
testb
mov
ljmp
or
push
scas
inc
cmp
xchg
cmp
rcr
push
pop
aaa
jb
push
jp
inc
mulb
enter
ljmp
mov
in
adc
je
add
stos
mov
lcall
mov
cmpsb
bound
test
lahf
dec
inc
and
mov
jb
daa
pop
jl
mov
push
and
sti
pop
pop
jle
mov
sarl
in
mov
shrb
jns
add
mov
outsb
mov
sub
sub
test
sbb
xchg
pop
xchg
in
mov
ss
pop
mov
loopne
xorb
js
das
das
jge
adc
jle
mov
xor
xchg
int
cmp
cmpsb
dec
xor
dec
ret
xor
cmpb
jns
adc
test
xchg
loope
pop
mov
xlat
inc
test
aaa
shrb
std
push
jmp
andl
mov
xor
push
rorl
mov
sub
inc
aas
ss
sbbb
sbb
adc
and
xor
xchg
cmp
xlat
data16
call
std
je
fdiv
adc
mov
iret
sbbl
shrl
sbb
mov
out
push
push
pop
movsb
mov
into
adc
dec
and
xor
inc
outsl
push
and
mov
mov
mov
in
sbb
shlb
jne
imul
lea
ret
je
pop
inc
mov
mov
cld
aam
xorl
loope
hlt
je
xor
roll
lods
decb
push
adc
loopne
out
out
xor
pop
fwait
into
popf
sbb
adc
mov
add
add
mov
in
or
stc
and
xchg
jb
test
xchg
mov
and
xor
repz
imul
iret
mov
jl
in
shlb
pop
sub
xchg
ss
mov
sub
insl
fidivrl
jecxz
pop
dec
loopne
ja
hlt
bound
icebp
or
or
or
xchg
push
jns
xchg
dec
pop
add
and
cmpsb
fcoml
push
outsb
inc
aam
xor
test
push
pushf
into
push
hlt
jp
repnz
mov
inc
cmp
cltd
js
inc
sbb
pop
pushf
out
cmp
mov
es
andl
xchg
inc
adcl
lcall
dec
xchg
out
sub
rorl
or
cmp
hlt
mov
mov
xlat
lret
xlat
pop
cmp
ds
test
sahf
es
outsl
cltd
and
movsl
sbb
insl
enter
and
and
scas
or
cvtps2pi
out
nop
jne
shlb
or
and
jmp
aam
fcoms
es
add
cmp
inc
adc
das
into
shlb
fldcw
sbb
mov
shr
dec
pop
jp
jo
loopne
scas
int3
jg
cmp
jb
test
and
xor
mov
lret
sbb
jb
xchg
cs
in
xchg
mov
mov
rcrl
cmpsl
adcb
xchg
inc
pop
mov
mov
popa
sub
je
out
test
lret
xlat
cmpsb
imul
out
xchg
inc
stos
lods
mov
lret
daa
popf
dec
fwait
jle
lret
loope
jecxz
insl
inc
mov
lock
xor
mov
cmp
sahf
mov
ror
push
xchg
repnz
add
lock
orl
pop
in
popf
scas
sbb
dec
notl
orb
and
lcall
mov
xchg
inc
test
out
xor
das
inc
mov
repz
addr16
cltd
mov
cs
or
inc
jle
mov
neg
xchg
orb
lea
jae
cli
outsl
cmp
cmp
repnz
pop
fidivrl
and
stc
pop
cmpsb
push
mov
jbe
or
int3
enter
shl
jecxz
fwait
ja
mov
imul
enter
in
dec
mov
inc
cmpb
mov
lret
mov
mov
xchg
lahf
repz
fsts
xor
sub
adc
insb
call
sbb
mov
xor
repz
sbb
fs
sub
mov
cmpsb
test
lods
xchg
xchg
sbb
popl
mov
jle
shrl
xchg
lds
ljmp
shll
insb
test
pop
cli
jo
or
or
fidivrl
aad
cmpsl
mov
xchg
inc
fstpl
outsb
imul
cld
and
sub
mov
cwtl
sbb
dec
inc
test
inc
cmpsb
or
xchg
mov
fcompl
or
cmpsl
test
xchg
xchg
sub
jb
xchg
jmp
mulb
scas
mov
mov
loopne
fiadds
xor
nop
out
jl
sub
popa
insb
inc
adc
lods
inc
imul
inc
jb
or
jb
lret
mov
xorb
repnz
mov
test
mov
das
push
sub
lcall
xor
nop
jb
mov
inc
and
xchg
sbb
lcall
cmp
loopne
orb
imul
xchg
das
mov
ss
mov
pop
xor
fucom
lds
pop
orps
cmpsb
lea
in
mov
aam
add
push
pop
mov
ret
dec
iret
outsl
or
xchg
mov
and
dec
and
add
adc
in
mov
sub
push
or
mov
mov
aaa
cmp
loope
faddp
js
sti
jns
push
jnp
push
enter
dec
mov
xchg
mov
push
test
repz
test
sbb
inc
in
addb
loop
xor
dec
sub
loope
dec
stc
out
xor
js
xchg
and
mov
repnz
mov
push
add
add
shl
rcrb
xor
inc
adc
pop
pop
pop
sbb
fnstenv
adc
pop
out
cmp
dec
daa
fs
mov
jno
lahf
icebp
jmp
out
fldl
imul
sub
gs
jge
sbb
stos
push
imul
sub
call
cmpsl
mov
mov
adc
std
inc
jmp
add
into
mov
jg
gs
es
lahf
out
mov
fiaddl
pop
mov
movsb
ja
jmp
or
cmc
out
sbb
sub
popa
jl
cs
dec
in
pop
jb
sbb
pop
out
ret
and
pop
mov
jge
mov
cmp
or
movsl
adc
in
pop
arpl
and
cmp
jbe
xor
xchg
xor
dec
xlat
test
pop
sub
das
cli
sbb
lret
insl
jle
pop
shrl
outsl
lods
jne
cvtpi2ps
js
fs
aas
xchg
mov
add
lret
jg
cld
hlt
mov
mov
stc
dec
mov
pop
xchg
mov
jb
filds
cld
pop
adc
xchg
inc
jo
and
pop
jns
and
popa
dec
push
xchg
enter
push
sahf
imul
jmp
mov
xlat
sub
dec
adc
or
pop
mov
mull
stos
mov
cmc
fsubs
rolb
data16
pusha
mov
add
add
je
jb
cmp
or
testl
enter
enter
lahf
subb
das
leave
mov
imul
lods
jg
push
add
stos
mov
mov
loop
mov
outsb
and
imul
xlat
test
adc
icebp
inc
adc
mov
or
insl
arpl
pop
jnp
fdivs
sub
dec
into
mov
inc
xchg
movsl
ljmp
rolb
xor
test
ds
jb
dec
mov
lods
sbb
inc
stos
iret
lret
push
dec
inc
and
fs
stc
fstps
push
les
xor
rclb
addr16
sub
out
dec
lods
xchg
pop
shlb
mov
rclb
xor
lea
push
pop
icebp
adc
cmpsl
xchg
cs
and
sub
ret
push
sbbb
add
insl
sti
lcall
jge
out
outsb
and
adc
sbb
mov
popf
mov
addr16
inc
lods
dec
add
or
sbb
dec
jmp
add
std
iret
enter
dec
cwtl
out
icebp
dec
rcr
iret
mov
scas
in
fsubs
and
sarb
add
xor
pop
pop
or
and
in
gs
subb
imul
outsb
mov
pop
fidivs
jmp
loop
aam
scas
sub
pop
sbb
or
sub
inc
aad
loop
out
jp
dec
pop
outsb
in
stos
notb
push
test
add
shlb
insl
gs
test
pop
outsl
jnp
xchg
jge
hlt
mov
das
mov
adc
mov
cmpsb
pop
and
dec
sbb
test
fdivrs
mov
notl
xor
dec
incb
sub
mov
xchg
data16
jecxz
fsubrl
addl
jno
outsb
negl
mov
cmp
cmp
shlb
fistps
fadd
mov
jge
out
call
inc
cmp
nop
and
cwtl
ljmp
les
adc
adc
mov
adcb
pop
lods
mov
call
mov
push
sbb
les
into
dec
lds
dec
test
push
rcl
xchg
loop
lds
in
lcall
inc
adc
and
dec
push
out
dec
aad
out
mov
xchg
testl
cmp
ret
mov
sbb
push
inc
aam
pop
data16
repz
lock
out
imul
xchg
test
pop
popf
xlat
adc
ljmp
int
out
insl
rcrb
sub
mov
and
xchg
cwtl
sub
jmp
int3
mov
ljmp
push
insb
insb
in
cmpsl
not
dec
pop
jbe
cmp
sbb
jg
ret
in
add
xchg
mov
and
hlt
jmp
xor
mov
xchg
add
js
out
xor
loopne
dec
sbb
repz
xchg
jno
push
mov
push
shl
sbb
sbb
imul
inc
unpcklps
subl
inc
cli
mov
sbbl
jle
xor
pop
jp
pop
xchg
and
pop
fwait
mov
repz
sahf
pop
mov
enter
mov
insl
movsl
pop
sbbb
xlat
mov
sub
test
leave
imul
dec
cmp
cli
jg
push
out
scas
icebp
shr
xchg
test
mov
push
xchg
mov
jne
ret
mov
mov
xchg
repz
jae
jmp
jp
and
or
daa
mov
daa
push
out
pop
inc
add
or
into
sbb
mov
xor
jb
rclb
nop
in
aaa
fsub
insl
test
cmovnp
mov
xchg
je
push
mov
lret
lea
cs
xor
out
adc
das
cmpsl
rcrb
inc
fs
fists
cmp
das
and
mov
movsl
fsubs
push
mov
aas
or
outsb
hlt
and
les
or
inc
xchg
fdiv
out
jge
or
test
decb
stc
jecxz
jnp
scas
out
cmp
jno
jbe
jnp
jb
stos
jp
mov
sbb
xorb
cmc
loopne
or
and
jnp
in
fimuls
mov
mov
ja
hlt
psubsb
fnstenv
sahf
xor
shll
mov
scas
pop
mov
xchg
out
sbb
icebp
mov
mov
stc
out
lret
fstl
push
pop
mov
popa
inc
mov
outsl
sub
fwait
dec
divl
rolb
shll
in
push
mov
push
shl
and
jge
mov
in
mov
mov
gs
push
jae
ret
lods
and
mov
rcll
mov
ret
shlb
insb
xor
fwait
push
movsl
jge
dec
add
movsl
jge
adc
repnz
dec
repnz
sbb
mov
scas
fistpll
das
and
dec
sbb
cmp
inc
outsb
push
icebp
mov
aas
scas
iret
stos
mov
or
inc
mov
push
push
cmp
push
stos
push
aaa
inc
xchg
lea
push
or
in
shll
test
notb
scas
sub
inc
ret
adc
in
add
jns
xchg
xor
jne
cmp
jmp
shll
out
jmp
out
js
jg
daa
push
ror
ret
rcll
lret
sub
or
in
shlb
jno
jb
pop
add
lods
popa
ljmp
and
mov
les
jp
cmp
sbb
and
add
sub
scas
movsl
inc
pop
shrb
dec
lret
mov
leave
test
icebp
test
loopne
shrl
cmp
aam
das
xor
lea
cld
mov
mov
stos
mov
fs
std
jnp
sti
push
fsubrs
sbb
dec
dec
and
pop
mov
imul
inc
mov
mov
fnstenv
xchg
sub
inc
add
icebp
cmp
pop
aad
pop
std
in
xchg
out
lds
adc
and
mov
nop
push
sub
hlt
pop
nop
jno
dec
mov
jns
repnz
push
and
lret
nop
inc
add
mov
mov
test
mov
es
push
outsb
jb
leave
sub
pop
pop
mov
push
dec
pop
xchg
sbb
movsb
sub
mov
dec
lods
pop
sub
jg
xor
shl
pop
and
movsb
sub
mov
adc
cs
loope
or
aam
cmp
sub
add
mov
movsl
lret
dec
pop
ja
mov
lds
dec
or
lahf
repnz
inc
aas
mov
gs
dec
mov
loop
sub
xchg
mov
xchg
mov
aaa
inc
or
test
dec
fsts
and
sbb
inc
jo
sarl
xchg
lods
mov
imul
inc
mov
fcoml
add
add
add
add
add
add
inc
xchg
xchg
mov
or
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
push
dec
repnz
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
lods
pusha
mov
add
xchg
mov
