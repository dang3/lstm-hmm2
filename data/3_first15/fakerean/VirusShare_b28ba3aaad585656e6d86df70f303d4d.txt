add
add
jne
cmpl
jne
mov
lea
mov
call
mov
andl
mov
mov
mov
push
call
test
pop
je
push
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
movl
mov
push
mov
call
push
call
incl
pop
pop
pop
leave
ret
push
mov
push
lea
push
mov
call
test
je
pop
pop
ret
andl
mov
call
push
call
pop
xor
jmp
mov
test
je
push
call
pop
mov
test
je
mov
push
call
andl
mov
test
je
mov
push
call
andl
mov
test
je
cmpl
jge
call
add
jmp
push
lea
sub
mov
xor
mov
mov
test
push
mov
je
mov
mov
push
push
lea
push
xor
lea
push
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
je
push
lea
push
mov
call
mov
imul
testb
je
mov
add
push
call
test
pop
je
pop
pop
mov
mov
xor
pop
call
add
leave
ret
push
mov
and
sub
push
push
push
mov
testb
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
mov
mov
xor
inc
lea
call
lea
push
lea
push
push
mov
call
mov
pushl
neg
call
mov
pushl
mov
add
neg
call
mov
add
cmpl
jne
pushl
mov
mov
push
call
test
jne
xor
push
push
mov
mov
push
call
jmp
push
mov
and
sub
push
push
lea
mov
call
mov
cmp
jl
mov
add
cmp
mov
jg
mov
mov
cmp
jl
mov
lea
cmp
jg
mov
xor
cmp
mov
mov
jne
mov
cmp
jne
mov
push
push
mov
mov
mov
mov
mov
call
pop
pop
mov
pop
ret
push
mov
push
mov
andl
push
mov
lea
call
mov
mov
push
call
push
lea
call
pop
leave
ret
push
mov
sub
add
enter
mov
mov
push
push
push
mov
mov
mov
call
test
je
mov
xor
push
mov
lea
mov
call
mov
mov
push
call
mov
mov
push
mov
call
cmp
je
mov
cmp
lea
mov
mov
movl
movl
mov
mov
jne
mov
mov
push
lea
push
push
call
cmp
jne
cmp
jne
cmp
je
mov
call
test
jne
pushl
mov
pushl
mov
pushl
call
testb
mov
jne
testb
jne
lea
call
mov
mov
pop
pop
xor
pop
call
leave
ret
mov
add
push
call
test
pop
jne
push
call
pop
jmp
mov
mov
mov
mov
push
lea
mov
call
lea
push
mov
call
test
pop
js
pushl
mov
pushl
call
mov
lea
mov
call
cmp
jne
jmp
xor
jmp
cmp
jne
mov
lea
mov
mov
call
pushl
mov
mov
xor
cmp
sete
push
push
call
mov
inc
add
decl
decl
test
mov
adc
lahf
cmp
jne
mov
push
push
push
mov
call
pushl
pushl
call
pop
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
push
mov
mov
test
mov
je
jmp
lea
mov
cmp
je
test
push
jne
mov
mov
call
test
je
mov
push
push
call
mov
mov
test
je
test
mov
je
cmp
je
cmp
je
test
jne
mov
cmpl
mov
lea
mov
je
lea
push
mov
mov
push
push
push
lea
push
add
push
call
add
mov
xor
mov
mov
mov
mov
mov
lea
push
push
push
push
lea
push
lea
push
lea
movl
call
add
test
jne
add
cmpl
je
mov
mov
lea
push
push
push
push
lea
call
add
test
jne
mov
cmp
je
cmp
je
xor
mov
mov
mov
jmp
addl
mov
mov
mov
mov
add
movzbl
add
movzbl
lea
push
lea
call
add
add
mov
movzbl
lea
push
lea
call
mov
mov
xor
mov
mov
mov
mov
lea
push
mov
push
push
push
push
lea
push
lea
push
lea
push
mov
call
add
test
jne
mov
add
cmp
jl
mov
mov
cmp
je
cmp
je
cmp
je
mov
mov
mov
push
call
cmpl
je
mov
cmpl
je
cmp
mov
mov
jne
mov
pop
pop
pop
pop
add
ret
mov
lea
mov
test
jne
or
mov
mov
cmp
jne
pop
mov
pop
pop
pop
add
ret
push
mov
sub
andl
push
mov
push
lea
push
lea
push
mov
push
call
mov
cmp
je
cmp
je
cmp
je
cmp
je
pop
pop
leave
ret
mov
cmpl
mov
jge
push
mov
call
mov
lea
push
lea
push
lea
push
lea
push
add
push
lea
movl
call
add
jmp
lea
push
pushl
lea
call
test
pop
pop
je
mov
cmpb
jne
mov
mov
mov
mov
jmp
push
mov
mov
call
pop
jmp
mov
cmpl
jge
testb
je
pushl
pushl
call
ret
push
pushl
mov
call
mov
orl
cmpb
pop
jne
jmp
mov
test
je
mov
mov
mov
xor
ret
mov
mov
mov
add
test
mov
je
test
je
xor
ret
test
je
mov
push
push
call
jmp
push
mov
mov
call
mov
mov
add
cmp
ja
jmp
flds
fstps
mov
pop
ret
mov
mov
jmp
nop
iret
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmpsb
add
adc
cmp
xchg
mov
cmp
lods
mov
cmp
mov
mov
in
sub
andl
push
mov
push
lea
add
push
movl
movl
call
mov
push
call
test
je
andl
lea
push
push
call
testb
pop
pop
je
mov
add
push
call
test
pop
je
pop
xor
pop
leave
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
add
mov
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
push
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
add
adc
jne
mov
test
je
lea
jmp
mov
cmp
jne
mov
cmp
add
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
mov
call
mov
mov
test
je
add
mov
cmpl
jne
push
mov
mov
mov
mov
mov
pop
mov
mov
mov
xor
inc
pop
ret
int3
mov
lea
mov
lock
inc
ret
mov
ret
mov
orl
mov
ret
push
mov
push
test
push
jne
mov
mov
push
push
push
call
test
mov
mov
mov
js
mov
test
je
mov
mov
mov
pop
leave
ret
mov
test
je
mov
mov
cmp
je
addl
mov
mov
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
sub
add
mov
mov
test
je
mov
mov
mov
mov
andl
xor
jmp
push
mov
push
push
push
mov
test
je
mov
test
je
mov
mov
mov
cmpl
je
push
mov
mov
lea
push
lea
push
push
movl
movl
call
add
mov
pop
xor
inc
pop
leave
ret
push
mov
push
xor
cmp
mov
jne
push
push
call
cmp
pop
je
movl
movl
movl
movl
movl
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
mov
push
call
mov
push
pushl
push
call
mov
mov
push
call
mov
pop
pop
pop
ret
xor
jmp
push
mov
test
je
mov
push
call
mov
test
mov
jne
cmpl
jbe
xor
mov
mov
push
call
inc
cmp
jb
cmpl
ja
pop
ret
xor
mov
mov
incl
call
inc
cmp
jae
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
xor
test
push
je
mov
mov
mov
mov
mov
test
jne
add
lea
xor
test
je
mov
test
jle
mov
test
jle
mov
add
mov
imul
cltd
idiv
mov
sub
mov
mov
mov
test
jg
test
je
orb
add
add
push
mov
mov
call
mov
test
jne
pop
pop
mov
pop
pop
pop
ret
mov
test
je
mov
push
push
call
mov
jmp
push
mov
mov
cmp
push
push
je
mov
cmp
je
mov
pushl
pushl
pushl
pushl
pushl
pushl
call
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
call
add
mov
pop
pop
pop
ret
push
mov
sub
push
mov
cmpb
jne
push
push
call
xor
inc
test
pop
jne
mov
test
je
mov
lea
push
push
push
call
test
js
cmpb
je
xor
pop
pop
leave
ret
mov
call
test
je
pushl
mov
push
call
jmp
push
mov
push
lea
push
call
andl
push
lea
call
lea
push
push
call
mov
test
je
andl
test
movl
mov
je
mov
mov
mov
mov
mov
pushl
mov
push
push
call
testb
jne
testb
jne
lea
call
pop
jmp
push
mov
push
mov
mov
lea
push
pushl
push
call
test
js
cmpl
je
xor
inc
leave
ret
mov
mov
push
lea
push
push
push
mov
call
and
neg
sbb
not
and
pop
leave
ret
xor
leave
ret
push
mov
movl
movl
cmpl
je
lea
push
call
pop
testb
je
push
call
pop
mov
pop
ret
push
push
mov
movzbl
flds
movzwl
fldl
fmul
fxch
shr
push
movzbl
and
lea
mov
shr
lea
shl
call
sub
fmull
call
sub
mov
and
add
pop
sar
pop
xor
pop
ret
push
mov
mov
call
add
pop
ret
push
mov
sub
push
push
pushl
xor
mov
lea
mov
call
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
jne
pushl
lea
call
mov
cmp
je
mov
push
push
pushl
lea
push
call
mov
cmp
mov
je
mov
cmp
je
lea
add
mov
push
pushl
push
push
pushl
pushl
pushl
push
push
call
test
jne
test
je
add
add
mov
push
push
call
xor
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
xor
jmp
mov
jmp
xor
jmp
push
mov
push
test
je
mov
andl
lea
push
push
push
call
mov
test
je
mov
mov
mov
test
jle
push
push
push
push
pop
mov
mov
mov
mov
test
je
incl
mov
test
jne
andl
decl
je
dec
mov
jne
pop
pop
pop
mov
push
call
leave
ret
add
jmp
push
call
push
call
pop
pop
jmp
push
cmpl
je
test
je
mov
test
lea
jne
mov
test
jns
push
mov
call
cmpl
jne
xor
test
jne
mov
mov
call
call
lea
push
push
call
call
lea
fwait
and
xorps
and
add
add
pop
ret
mov
jmp
push
mov
push
push
xor
cmp
je
cmp
jle
push
push
push
mov
lea
push
push
push
call
mov
mov
mov
add
and
jne
test
jne
pushl
lea
call
test
jne
mov
test
mov
je
mov
mov
lea
push
call
mov
lea
push
pushl
push
call
test
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
lea
push
mov
call
pushl
push
call
test
pop
pop
jne
mov
lea
call
mov
mov
xor
lea
call
pop
mov
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
cmpb
je
push
push
mov
movsbl
cmp
jle
mov
cmp
lea
jne
mov
test
jne
test
je
mov
cmp
jbe
mov
and
mov
movb
mov
mov
mov
add
cmpb
jne
and
sub
cmp
ja
movzbl
jmp
mov
push
push
push
or
mov
call
jmp
mov
sub
cmpl
jg
mov
sub
jmp
push
push
push
push
call
test
jne
cli
and
add
add
or
mov
call
jmp
mov
sahf
into
cmp
mov
cmp
mov
mov
adc
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
add
push
mov
push
push
mov
pushl
lea
mov
mov
call
cmpl
je
mov
lea
testl
mov
je
push
call
test
pop
mov
je
mov
cmp
je
cmp
je
movb
mov
mov
cmp
je
cmp
je
movl
mov
mov
push
add
push
lea
push
call
mov
test
mov
je
mov
add
call
test
je
mov
add
jns
inc
add
or
push
mov
add
call
mov
test
pop
je
mov
test
jne
mov
call
mov
test
mov
jne
mov
test
jne
mov
call
test
jne
mov
test
jne
lea
call
mov
movl
mov
movl
movl
mov
movl
mov
movl
mov
movl
movb
mov
movl
mov
mov
mov
movl
mov
movl
movl
mov
mov
xor
inc
cmp
je
cmp
je
mov
mov
movl
movl
mov
lea
push
mov
mov
call
cmpl
jne
mov
mov
cmp
mov
jne
mov
mov
mov
orw
cmpb
jne
mov
lea
call
mov
pop
pop
pop
ret
cmpb
je
mov
jmp
mov
push
call
mov
test
je
cmpb
jne
mov
mov
mov
mov
jmp
mov
orl
mov
mov
mov
mov
mov
jmp
mov
movl
movl
mov
movl
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
add
push
or
adc
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
add
mov
mov
xor
pop
ret
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
mov
call
add
jne
xor
mov
mov
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
mov
push
je
mov
cmp
je
mov
add
test
jne
mov
movl
mov
test
jns
push
push
push
call
pop
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
movl
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
add
push
call
mov
mov
xor
jmp
push
mov
push
mov
push
pushl
pushl
call
add
test
push
push
pushl
jl
call
add
test
jg
push
push
pushl
call
add
test
mov
jge
pop
pop
ret
call
add
test
jl
push
push
pushl
call
add
test
jl
mov
jmp
mov
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
mov
jne
test
jne
xor
cmp
setne
cmp
mov
jb
mov
shr
imul
add
cmp
movl
jbe
lea
imul
add
cmp
mov
ja
mov
mov
mov
mov
mov
push
push
push
call
mov
mov
mov
add
test
je
cmp
jg
add
shr
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
add
imul
add
lea
mov
mov
mov
cmp
ja
mov
cmpl
jne
mov
test
mov
jne
test
jne
test
jg
jne
cmpl
mov
movl
jne
mov
mov
mov
mov
mov
add
mov
add
cmp
jbe
jmp
imul
lea
add
cmp
jae
mov
sub
mov
mov
mov
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
push
push
push
call
mov
add
jmp
cmp
ja
mov
lea
cmpl
jne
mov
test
mov
jne
test
jne
test
jl
jne
test
movl
jne
mov
mov
mov
mov
sub
mov
sub
cmp
ja
mov
jmp
mov
push
push
push
call
mov
add
jmp
test
je
push
push
call
mov
add
jmp
cmp
ja
test
je
cmp
mov
mov
jg
mov
shr
jmp
lea
mov
mov
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
add
movl
sub
jmp
test
je
push
push
call
mov
add
jmp
mov
mov
imul
add
cmpl
je
mov
mov
mov
sub
sub
cmp
mov
jge
test
jle
mov
sub
cmpl
jg
shr
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
sub
test
jg
mov
mov
sub
sub
sub
cmp
jl
test
jg
cmp
jle
mov
mov
push
push
mov
xor
div
push
push
push
call
add
cmp
jle
mov
sub
mov
mov
xor
div
mov
jmp
mov
mov
mov
mov
jmp
mov
mov
mov
mov
mov
add
movl
sub
jmp
mov
jmp
mov
mov
jmp
mov
jmp
mov
jmp
lea
cmp
jae
mov
mov
sub
mov
mov
lea
cmp
jbe
mov
mov
mov
mov
mov
push
push
push
call
add
test
jle
mov
test
je
cmp
mov
mov
jg
mov
shr
mov
mov
mov
mov
sub
add
add
test
jg
mov
mov
sub
sub
cmp
mov
ja
mov
add
add
cmp
mov
jb
pop
pop
pop
pop
add
ret
mov
mov
mov
mov
jmp
mov
shr
imul
lea
mov
add
mov
push
add
push
mov
push
call
mov
mov
lea
push
push
sub
push
call
mov
mov
mov
sub
push
sub
push
push
call
add
mov
jmp
mov
mov
mov
mov
jmp
mov
jmp
mov
mov
push
sub
push
call
mov
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
mov
mov
test
mov
mov
jne
test
jne
ret
test
je
push
push
call
add
ret
mov
ret
or
ret
push
mov
sub
mov
xor
mov
push
push
mov
push
mov
xor
push
call
test
je
mov
push
lea
mov
call
push
lea
push
mov
call
mov
mov
cmp
je
lea
lea
push
mov
mov
movl
movl
mov
jge
inc
add
push
call
mov
test
js
lea
push
push
call
pop
pop
testb
je
mov
add
push
call
test
pop
je
mov
cmp
je
mov
push
call
mov
pop
mov
pop
xor
pop
call
leave
ret
testb
je
jmp
push
mov
push
push
mov
mov
call
test
js
mov
xor
cmp
je
cmp
je
mov
cmp
mov
lea
and
add
ret
mov
cmp
mov
lea
ja
lea
jmp
push
mov
sub
push
mov
test
je
mov
mov
andl
andl
push
lea
lea
movl
mov
call
mov
test
je
mov
push
pushl
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
xor
push
lea
mov
call
lea
push
push
call
test
pop
pop
js
push
push
lea
lea
mov
movl
movl
mov
mov
mov
call
mov
cmp
mov
je
mov
lea
push
push
push
call
test
pop
jne
pushl
lea
call
mov
pushl
mov
push
call
mov
mov
mov
mov
mov
mov
lea
mov
mov
call
lea
call
lea
call
add
pop
leave
ret
push
mov
sub
mov
xor
mov
mov
mov
mov
mov
mov
push
mov
lea
xor
push
lea
mov
mov
movl
movl
mov
sub
add
test
js
mov
cmpl
push
mov
jge
push
lea
mov
mov
call
push
lea
call
lea
push
lea
push
call
test
pop
pop
jne
pushl
mov
pushl
call
pop
pop
mov
mov
mov
push
call
test
jne
mov
push
mov
call
lea
push
lea
push
pushl
call
add
test
jne
pushl
mov
pushl
pushl
call
pushl
mov
call
pop
lea
call
lea
call
testb
jne
testb
jne
mov
pop
mov
pop
xor
pop
call
leave
ret
mov
add
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
mov
mov
mov
and
dec
je
dec
dec
je
movzbl
and
cmp
je
mov
call
test
je
push
push
call
test
pop
je
movl
mov
test
je
mov
call
mov
movl
xor
inc
pop
pop
ret
xor
pop
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
movl
movl
xor
mov
mov
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cli
das
inc
add
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
ret
push
mov
lea
mov
push
call
test
je
cmpl
je
pushl
lea
mov
push
call
testb
jne
push
lea
push
mov
call
pop
pop
ret
mov
test
je
mov
mov
mov
mov
push
call
xor
ret
push
mov
and
push
mov
push
xor
movl
mov
call
pushl
mov
pushl
mov
pushl
mov
pushl
xor
push
pushl
cmp
pushl
sete
mov
mov
mov
mov
mov
push
push
call
pop
mov
pop
mov
pop
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
push
mov
call
testb
je
push
call
pop
mov
pop
ret
push
push
mov
mov
test
movl
movl
movl
movl
movl
jne
lea
call
lea
call
lea
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
mov
cmpl
je
andl
xor
ret
push
mov
push
mov
cmpl
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
mov
je
add
push
call
xor
mov
mov
mov
pop
pop
ret
push
push
push
mov
call
test
pop
je
mov
movl
andl
andl
add
test
je
mov
mov
test
je
pushl
mov
push
push
call
mov
test
js
mov
pop
pop
ret
xor
jmp
push
mov
push
push
push
xor
cmp
mov
mov
jne
push
mov
push
lea
call
pushl
lea
push
push
call
add
cmp
pop
je
pushl
pushl
call
cmp
pop
pop
jne
mov
mov
mov
lea
mov
lea
call
lea
call
pop
leave
ret
push
call
pop
push
lea
call
jmp
push
lea
sub
mov
xor
mov
push
push
mov
mov
xor
mov
cmp
push
jne
mov
add
je
cmp
movl
jne
mov
mov
lea
push
pushl
lea
mov
mov
movl
movl
mov
mov
mov
push
call
cmp
mov
je
mov
lea
push
call
mov
lea
call
mov
cmp
jne
testb
je
mov
add
push
call
test
pop
je
xor
inc
lea
call
mov
mov
pop
pop
xor
pop
call
add
leave
ret
mov
call
mov
mov
mov
mov
mov
mov
add
call
push
pushl
call
pushl
mov
push
pushl
mov
call
mov
mov
mov
push
push
call
mov
test
jne
xor
cmp
jne
mov
testb
je
mov
mov
mov
mov
cmp
jne
add
mov
push
push
call
test
jne
testb
movl
je
mov
add
push
call
test
pop
jne
jmp
call
cmp
je
mov
pushl
mov
push
call
test
pop
pop
js
mov
lea
mov
call
jmp
add
or
test
jmp
push
mov
push
push
push
xor
push
lea
mov
call
lea
push
push
push
call
add
test
js
pushl
mov
lea
push
push
call
mov
mov
add
lea
push
push
call
mov
cmp
jne
push
pushl
mov
call
pop
pop
mov
lea
call
add
pop
leave
ret
push
mov
mov
sub
push
push
push
mov
xor
mov
cmp
je
cmp
je
mov
orb
lea
mov
mov
call
push
mov
call
mov
andl
pop
lea
push
mov
lea
call
andl
push
lea
call
mov
lea
push
pushl
pushl
pushl
push
call
test
js
pushl
pushl
call
andl
test
pop
pop
je
push
lea
mov
call
mov
lea
push
pushl
pushl
push
call
test
js
push
call
test
pop
je
pushl
mov
pushl
mov
mov
push
push
call
test
mov
je
mov
push
call
cmpl
je
mov
mov
lea
push
push
call
pushl
pushl
pushl
call
add
test
je
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
pushl
call
pop
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
cmpl
jne
push
push
mov
push
lea
lea
mov
push
push
call
test
je
cmp
jae
push
lea
lea
call
pop
pop
mov
xor
pop
call
leave
ret
push
add
push
call
jmp
push
mov
mov
call
add
push
pushl
call
xor
pop
ret
push
mov
push
push
push
mov
push
mov
mov
push
mov
imul
lea
push
add
pushl
push
call
mov
lea
push
pushl
push
call
cmpl
jl
cmpl
jg
mov
lea
push
pushl
push
call
test
mov
jne
mov
flds
mov
fstps
mov
mov
test
pop
pop
mov
pop
je
cmp
je
fldz
fcomps
fnstsw
test
jp
xor
inc
leave
ret
mov
jmp
xor
leave
ret
push
mov
push
push
mov
push
push
xor
cmp
mov
je
inc
add
push
push
push
add
push
call
and
jne
inc
add
test
cld
lea
call
mov
cmp
je
inc
add
push
push
call
mov
mov
push
call
mov
pop
pop
leave
ret
mov
mov
push
push
push
call
mov
xor
cmp
je
push
push
mov
call
mov
orl
mov
movl
mov
pop
ret
sub
push
push
push
push
mov
mov
mov
mov
mov
sub
lea
mov
mov
mov
mov
sub
sub
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
shl
mov
mov
mov
movl
mov
shl
sub
mov
mov
sub
mov
nop
cmp
jae
movzbl
add
mov
shl
add
add
mov
add
movzbl
shl
mov
add
add
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
lea
test
je
shr
and
mov
jne
cmp
jb
mov
mov
and
mov
mov
shr
movzbl
movzbl
shr
sub
test
je
shr
and
cmp
mov
jb
mov
mov
mov
shl
sub
sub
and
mov
mov
add
mov
mov
sub
shr
cmp
ja
mov
sub
movzbl
add
add
mov
mov
add
add
mov
movzbl
add
add
sub
cmp
mov
ja
test
je
mov
add
add
cmp
mov
ja
mov
jmp
test
jne
mov
mov
mov
mov
shl
shr
sub
and
add
mov
mov
mov
shr
movzbl
movzbl
shr
sub
test
jne
add
shr
mov
cmp
jae
cmp
jae
mov
jmp
mov
movzbl
add
add
mov
mov
movzbl
shl
add
mov
shl
add
add
add
jmp
cmp
jb
mov
mov
shl
sub
and
add
shr
sub
jmp
mov
mov
add
jmp
mov
sub
cmp
mov
ja
mov
add
mov
mov
mov
test
jne
mov
sub
mov
add
mov
cmp
jb
cmp
jbe
lea
mov
mul
shr
add
jmp
lea
movzbl
add
add
mov
movzbl
add
add
mov
movzbl
add
add
sub
sub
mov
jne
test
je
mov
add
add
cmp
mov
jbe
mov
mov
add
mov
jmp
mov
lea
test
jne
mov
movzwl
mov
shl
mov
sub
and
add
mov
mov
shr
movzbl
movzbl
shr
sub
test
mov
jne
jmp
mov
movzbl
add
mov
mov
shl
add
add
cmp
jae
jmp
cmp
jb
sub
mov
add
mov
cmp
jae
sub
mov
add
add
subl
mov
jne
mov
sub
jmp
test
je
mov
movl
mov
mov
shr
sub
add
add
add
sub
mov
mov
shl
lea
sub
sub
and
mov
mov
lea
mov
mov
sub
add
add
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
sub
add
mov
sub
add
cmp
jb
mov
jmp
mov
add
mov
movzbl
mov
shl
add
add
jmp
sub
jmp
lea
mov
add
add
subl
mov
jne
mov
sub
jmp
push
mov
sub
andl
push
mov
push
mov
push
push
lea
push
lea
push
pushl
call
add
test
je
mov
andl
lea
push
movl
movl
mov
push
call
test
js
mov
mov
lea
call
testb
mov
jne
testb
jne
mov
test
jne
mov
pop
pop
leave
ret
push
mov
push
push
mov
lea
lea
mov
push
call
test
je
mov
test
je
push
pushl
call
xor
pop
pop
pop
ret
cmpb
je
pushl
mov
pushl
mov
push
call
test
jne
jmp
push
mov
push
push
mov
mov
test
je
cmpb
push
mov
je
mov
push
mov
call
test
je
andl
push
lea
call
mov
lea
push
push
call
pushl
andl
mov
lea
call
push
pushl
pushl
call
lea
call
lea
call
xor
pop
pop
leave
ret
push
mov
mov
cmpl
push
push
push
mov
jge
testb
mov
jne
test
jne
testb
jne
mov
xor
cmp
je
testb
jne
mov
cmp
mov
jne
mov
andl
test
je
mov
push
call
mov
andl
test
je
mov
push
call
cmpl
jne
testb
jne
testb
jne
test
jne
andl
cmpl
mov
mov
je
testb
je
testw
je
lea
call
lea
cmpl
je
mov
cmpl
jge
lea
test
je
lea
pushl
mov
mov
lea
add
push
push
call
xor
mov
call
push
mov
call
cmpl
je
push
lea
call
cmpl
jne
mov
test
je
lea
test
je
lea
pushl
mov
push
push
push
call
lea
xor
call
lea
xor
call
xor
pop
pop
pop
pop
ret
mov
mov
jmp
xor
jmp
push
mov
push
push
mov
push
mov
test
je
mov
push
mov
push
lea
lea
cmp
je
mov
mov
test
je
decl
jne
mov
movl
call
pushl
call
pop
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
push
call
pop
pop
pop
mov
add
call
pop
leave
ret
push
mov
sub
mov
xor
mov
push
mov
movzwl
cmp
push
mov
jle
sub
je
dec
je
dec
je
dec
jne
pushl
push
call
xor
mov
pop
xor
pop
call
leave
ret
pushl
mov
call
jmp
mov
test
jle
mov
test
jle
mov
mov
ret
andl
andl
ret
mov
cmp
je
cmp
je
cmp
je
xor
ret
xor
inc
ret
push
mov
push
push
push
xor
push
lea
mov
call
mov
lea
push
push
call
pushl
mov
add
mov
call
mov
cmp
je
push
mov
cmp
je
pushl
mov
push
push
push
push
call
add
lea
call
lea
call
mov
pop
pop
leave
ret
push
push
mov
mov
test
je
mov
push
call
mov
andl
test
je
mov
push
call
push
push
call
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
push
mov
push
call
xor
add
cmp
mov
je
mov
mov
movl
movl
mov
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
push
call
add
cmp
je
mov
mov
movl
mov
cmp
mov
je
add
pop
pop
pop
xor
pop
ret
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
mov
test
je
mov
mov
incl
xor
ret
mov
sub
je
dec
jne
mov
ret
xor
jmp
mov
jmp
mov
mov
mov
mov
ret
push
mov
push
mov
push
push
lea
call
mov
lea
call
mov
lea
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
call
test
mov
je
pushl
lea
mov
call
pushl
lea
mov
and
or
mov
push
call
pop
mov
call
inc
add
call
pop
mov
pop
pop
pop
pop
ret
push
mov
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
push
mov
mov
push
lea
lea
jmp
mov
mov
call
test
jne
add
cmp
jne
or
pop
pop
pop
ret
mov
sub
sub
sar
jmp
pushl
mov
call
add
pushl
xor
jmp
push
pushl
xor
inc
call
xor
inc
ret
push
lea
sub
mov
xor
mov
mov
test
je
push
mov
call
test
mov
je
mov
push
call
mov
test
je
andl
test
jne
push
xor
xor
inc
cmp
jne
cmp
jne
mov
mov
call
mov
mov
cmp
mov
je
test
je
andl
cmp
je
call
mov
lea
call
mov
test
jne
lea
call
inc
add
add
jne
mov
pushl
call
pop
pop
mov
mov
mov
lea
call
inc
add
pop
mov
xor
call
add
leave
ret
cmp
jne
and
je
andl
adc
push
xor
mov
mov
mov
test
mov
mov
je
mov
lea
push
push
call
test
js
mov
call
cmp
jne
testb
jne
testb
jne
testb
jne
testb
je
jmp
mov
push
call
jmp
push
mov
push
mov
test
je
push
mov
test
je
andl
push
lea
call
mov
lea
push
push
call
test
js
mov
lea
call
mov
pop
leave
ret
xor
leave
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
push
mov
xor
cmp
je
cmp
je
mov
mov
push
lea
push
push
call
mov
mov
lea
push
call
mov
lea
cmp
je
call
mov
push
call
lea
mov
mov
dec
jns
mov
mov
push
push
push
push
call
lea
mov
lea
push
lea
push
push
movl
call
add
lea
xor
call
lea
xor
call
lea
xor
call
andl
pop
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
xor
lea
movzbl
push
lea
call
cmpl
jne
add
add
cmp
jle
xor
mov
lea
lea
movzbl
lea
push
lea
call
mov
call
cmp
je
cmp
jne
mov
call
test
mov
jg
lea
mov
mov
add
add
cmp
jle
movb
pop
pop
pop
pop
add
ret
lea
jmp
xor
jmp
push
mov
sub
push
mov
push
push
mov
mov
mov
xor
cmp
mov
mov
je
cmp
je
cmp
jne
mov
cmp
je
mov
mov
mov
cmpl
jne
cmp
je
cmp
je
mov
mov
andl
push
call
test
je
test
je
push
push
call
mov
test
je
test
je
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
push
mov
push
pushl
pushl
lea
push
push
mov
call
fld1
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
lea
mov
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
lea
mov
cmp
je
cmp
je
cmp
je
cmp
je
movzbl
push
push
push
lea
push
lea
push
lea
call
mov
add
lea
push
push
pushl
lea
pushl
lea
push
lea
push
call
mov
add
test
jne
lea
push
mov
pushl
lea
pushl
lea
push
push
lea
push
call
movzbl
push
push
push
lea
push
lea
push
lea
add
mov
dec
add
push
push
push
lea
push
lea
push
lea
call
add
flds
push
push
push
lea
fstps
flds
lea
fstps
push
lea
call
fld1
mov
add
push
push
push
fstps
lea
flds
lea
fstps
push
lea
call
mov
lea
add
cmpl
je
lea
push
mov
pushl
lea
pushl
push
push
lea
push
call
add
movzbl
push
push
push
lea
push
lea
push
lea
call
movzbl
add
push
push
push
lea
push
lea
push
lea
call
add
add
cmp
jne
mov
mov
mov
pop
pop
pop
leave
ret
push
push
pushl
call
jmp
test
je
call
jmp
mov
mov
jmp
push
mov
push
mov
sub
jne
leave
ret
dec
dec
je
dec
je
dec
je
add
push
jne
call
fstps
testb
flds
fstps
fldz
jne
testb
jne
fstp
leave
ret
mov
cmp
jg
je
sub
jne
ret
sub
je
dec
je
sub
jne
mov
mov
ret
dec
je
dec
jne
mov
andl
mov
jmp
push
mov
sub
mov
xor
mov
push
push
push
mov
push
mov
call
test
je
xor
cmp
je
orb
lea
mov
mov
movl
movl
mov
mov
lea
push
mov
call
test
je
push
call
test
je
cmpl
jne
cmpw
jne
mov
push
push
push
lea
call
test
je
mov
movw
jmp
orb
cmpl
je
lea
push
push
pop
mov
call
testb
jne
testb
jne
xor
inc
mov
pop
pop
xor
pop
call
leave
ret
mov
cmp
je
push
mov
call
add
add
add
clc
ss
cmp
jne
jmp
cmp
jne
movl
jmp
mov
add
call
jmp
push
mov
and
mov
sub
push
push
mov
xor
push
mov
mov
mov
xor
mov
mov
inc
test
jne
push
lea
push
call
test
je
andb
cmpl
je
cmpl
mov
je
or
mov
mov
push
mov
call
test
pop
je
movb
movb
movb
movb
andl
movl
mov
mov
test
mov
je
push
mov
mov
call
test
jne
and
and
test
je
andb
cmpl
je
cmpl
jne
mov
call
push
call
pop
push
lea
call
cmpl
mov
jne
mov
cmp
je
cmp
je
mov
add
call
lea
call
mov
test
jne
push
lea
push
call
test
je
andb
cmpl
mov
je
mov
cmp
jne
mov
cmp
jne
or
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
pop
ret
test
jne
push
push
pop
mov
call
test
je
pushl
push
call
test
jne
jmp
cmpw
mov
je
jmp
push
lea
push
call
test
jne
jmp
cmp
jne
cmpw
je
jmp
cmp
mov
mov
jne
mov
jmp
push
mov
push
andl
push
push
mov
push
mov
lea
call
mov
pushl
add
call
mov
test
js
mov
mov
mov
push
call
lea
call
pop
mov
pop
leave
ret
cmpl
je
mov
push
mov
call
test
jne
pushl
mov
mov
call
cmp
je
mov
push
push
push
mov
call
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
jne
testb
je
jmp
int3
int3
int3
int3
int3
push
push
mov
test
mov
je
push
mov
push
xor
lea
cmpl
jne
cmp
je
mov
mov
test
jne
pop
pop
pop
mov
pop
ret
mov
mov
push
push
call
add
test
jne
cmp
jne
test
mov
je
mov
mov
push
call
push
call
add
mov
xor
jmp
mov
jmp
mov
test
je
mov
push
push
call
test
js
pushl
mov
pushl
mov
push
call
test
js
mov
mov
push
pushl
mov
pushl
push
call
mov
and
neg
sbb
and
pop
ret
push
mov
test
je
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
test
je
lea
mov
push
push
push
call
movb
xor
pop
ret
xor
jmp
xor
jmp
xor
jmp
xor
jmp
xor
jmp
mov
test
push
push
je
lea
leave
adc
push
push
pushl
call
mov
cmp
jne
mov
pop
pop
ret
mov
call
test
jne
pushl
mov
push
call
mov
call
test
jne
pushl
mov
push
call
xor
jmp
xor
jmp
mov
mov
push
inc
push
push
call
test
je
mov
mov
incl
lea
ret
xor
ret
push
mov
push
mov
push
mov
test
jbe
push
add
andl
lea
push
mov
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
push
push
pushl
xor
push
inc
call
pop
pop
pop
leave
ret
incl
add
cmp
jb
jmp
push
mov
push
push
push
push
mov
push
mov
xor
cmp
je
cmp
je
inc
add
mov
call
mov
lea
push
push
call
push
lea
mov
call
mov
lea
add
mov
push
push
call
pushl
mov
lea
mov
call
mov
cmp
mov
je
inc
add
call
lea
call
lea
call
cmp
jne
inc
add
pop
leave
ret
push
mov
push
push
push
mov
xor
push
lea
mov
mov
call
lea
push
mov
mov
call
mov
mov
and
pop
jne
mov
mov
mov
push
pushl
pushl
call
cmp
jne
mov
mov
push
push
push
call
mov
lea
call
pop
mov
pop
pop
pop
ret
push
mov
sub
push
push
mov
mov
sub
je
andl
andl
lea
push
lea
lea
movl
movl
mov
call
testl
jne
mov
mov
push
push
lea
push
push
call
mov
mov
mov
push
pushl
pushl
push
pushl
push
call
add
mov
movl
mov
mov
pop
lea
call
mov
pop
pop
leave
ret
push
mov
test
je
push
push
mov
test
jl
mov
cmpb
jne
andl
mov
pop
mov
movb
xor
pop
pop
ret
lea
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
xor
test
je
mov
test
je
add
movzbl
rol
xor
mov
test
jne
ret
mov
push
push
mov
movl
ds
add
inc
add
or
add
or
add
lea
xor
add
test
inc
js
shlb
adc
pop
mov
mov
push
call
lea
add
movl
sbb
str
add
and
mov
str
add
sbb
mov
add
call
lea
call
lea
call
lea
call
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
test
pop
jne
push
call
pop
pop
pop
ret
push
mov
sub
push
mov
mov
mov
push
mov
mov
mov
shr
push
mov
and
mov
mov
mov
jne
mov
mov
cmpl
je
mov
push
push
call
test
je
mov
call
movl
lea
movl
movl
movb
movb
call
mov
orb
mov
mov
mov
mov
mov
mov
cmpl
jne
movl
movl
cmpl
je
mov
andl
push
mov
lea
call
mov
test
je
mov
call
test
jne
lea
call
xor
cmp
jne
mov
push
mov
push
xor
lea
call
cmpl
mov
mov
mov
mov
je
mov
cmp
mov
jne
pushl
andl
pushl
mov
lea
push
call
lea
push
call
mov
andl
lea
push
push
pushl
lea
pushl
pushl
push
lea
push
push
call
lea
push
call
mov
lea
mov
mov
call
add
mov
cmp
je
test
je
mov
call
mov
test
mov
je
mov
cmp
je
inc
mov
mov
push
pushl
pushl
push
call
cmpl
je
mov
mov
lea
push
push
push
mov
mov
call
cmpl
jne
mov
mov
mov
mov
lea
xor
push
and
push
or
mov
push
je
call
lea
push
call
lea
call
pop
pop
xor
pop
leave
ret
push
call
pop
mov
jmp
andl
push
call
test
je
andl
jmp
pushl
lea
pushl
push
call
lea
push
call
mov
jmp
push
mov
sub
call
test
je
push
push
push
xor
push
lea
mov
mov
call
lea
mov
call
pushl
lea
call
mov
cmp
mov
je
mov
lea
push
push
push
lea
push
push
call
lea
call
cmp
jne
mov
cmp
je
cmp
je
push
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
lea
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
pushl
call
call
lea
call
add
call
pop
pop
pop
xor
leave
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
and
push
xor
or
cmp
lea
mov
mov
mov
jne
mov
mov
lea
lea
lea
cmp
jne
test
jne
mov
mov
imul
lea
lea
cmp
jne
test
jne
cmp
je
testl
je
lea
cmp
jne
pop
pop
pop
mov
pop
ret
test
push
je
mov
lea
movsbw
cmp
jne
sub
add
add
test
jne
xor
pop
ret
movsbw
movzwl
movzwl
sub
pop
ret
push
mov
push
push
mov
push
mov
cmp
je
push
pop
cmp
je
andl
test
je
push
call
pop
push
lea
call
cmpl
je
mov
pushl
mov
pushl
mov
push
call
test
jne
mov
test
je
and
mov
test
jne
mov
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
pop
pushl
mov
call
test
pop
jne
jmp
xor
jmp
mov
cmp
jne
ret
push
mov
cmpl
push
mov
jne
test
je
incl
mov
test
mov
pop
pop
je
jmp
push
mov
sub
push
mov
push
xor
cmp
mov
je
push
pushl
lea
call
mov
cmp
pop
mov
je
mov
lea
push
push
push
call
test
js
cmp
mov
je
mov
test
mov
mov
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
mov
test
je
mov
lea
push
push
pushl
push
call
cmpl
jne
mov
test
mov
jne
mov
test
je
lea
push
push
push
add
push
call
and
jne
test
jne
pushl
lea
call
cmpl
je
mov
mov
push
push
pushl
call
test
je
andl
lea
call
inc
add
pop
mov
lea
call
mov
pop
pop
pop
leave
ret
push
mov
and
sub
push
mov
mov
cmp
push
push
je
cmp
je
pop
pop
pop
mov
pop
ret
mov
mov
mov
xor
inc
ret
push
mov
cmpl
jne
xor
inc
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
mov
call
add
test
jne
push
push
push
push
push
call
add
cmpl
mov
mov
mov
jne
push
mov
call
add
cmp
jne
pop
pop
pop
ret
push
push
call
add
pop
pop
pop
ret
pop
pop
movl
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
fldl
push
fstl
push
fldl
push
fstl
lea
fldl
mov
faddl
fldl
faddl
lea
fxch
push
mov
fstpl
fxch
push
fstl
push
fstpl
fxch
fstl
fstpl
fstpl
call
fldl
add
fstpl
xor
fldl
fstpl
jmp
fstp
fstp
fstp
fstp
mov
mov
lea
push
lea
push
push
call
fldl
fldl
add
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
fldl
fldl
fcom
fnstsw
fstp
test
jp
fldl
fldl
fcom
fnstsw
fstp
test
je
fstp
fldl
fstl
add
cmp
jl
mov
fxch
fstl
pop
fxch
pop
fstl
pop
fxch
fsubp
fstpl
fsubrp
fstpl
mov
pop
ret
fstp
fldl
fstl
jmp
fstp
fldl
fstl
jmp
cmpl
jne
mov
test
je
incl
mov
test
mov
jne
ret
pushl
mov
movb
call
ret
push
mov
push
mov
test
jne
leave
ret
push
mov
mov
push
xor
cmp
movl
jne
mov
cmp
jne
push
push
add
mov
mov
push
push
call
mov
cmp
je
testl
je
add
cmp
jne
pop
pop
ret
push
mov
cmpl
je
cmpl
jne
xor
pop
ret
testb
je
mov
call
testb
je
push
call
jmp
mov
call
mov
call
ret
pushl
call
mov
ret
push
mov
and
sub
mov
xor
mov
push
push
push
call
test
jne
mov
xor
mov
push
lea
mov
call
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
js
mov
mov
push
push
push
call
test
js
mov
mov
mov
add
call
push
push
push
push
call
push
push
push
pushl
call
test
js
mov
mov
lea
push
push
call
test
lea
js
mov
call
mov
mov
push
lea
mov
mov
call
mov
lea
push
lea
push
movl
movl
movl
mov
push
call
lea
mov
call
test
jne
lea
call
lea
call
mov
mov
lea
push
push
call
test
jne
cmp
je
mov
mov
lea
push
push
push
mov
mov
call
add
cmp
jl
jg
mov
cmp
jbe
mov
mov
mov
mov
mov
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
mov
call
add
je
sub
inc
and
pushl
pushl
pushl
pushl
pushl
push
lea
push
push
call
test
je
jmp
lea
call
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
mov
push
mov
mov
lea
push
pushl
pusha
push
call
mov
add
pop
test
add
add
jne
cmpsb
fstps
jp
pop
jecxz
add
outsl
add
add
add
stos
test
nop
pop
add
lods
add
mov
fwait
add
rolb
push
pop
mov
add
aad
add
add
mulb
cmpsl
cmpsl
pushf
add
jp
mov
add
push
push
push
push
lea
push
push
push
push
push
call
jbe
push
fwait
rcl
leave
add
mov
ljmp
test
add
stos
add
push
movl
jae
push
fisttpl
mov
pop
sti
out
add
mov
add
add
icebp
stc
sar
out
loope
icebp
xchg
mov
fwait
sar
cltd
mov
mov
in
ljmp
fmull
inc
in
push
call
rol
add
push
add
mov
int
rol
push
mov
push
jbe
cli
add
in
push
jmp
out
add
js
add
inc
scas
add
popl
xchg
add
rolb
lea
add
iret
fldl
add
add
xchg
test
fmull
lea
aam
add
mov
jo
out
xorl
or
push
lea
push
push
push
lea
push
call
iret
bound
out
std
add
popa
mov
add
lcall
ljmp
add
mov
jae
lahf
negl
lahf
add
lea
add
lods
xchg
xchg
lods
cmpsb
iret
mov
xchg
lock
imull
xchg
add
add
add
int3
add
add
mov
lea
pop
push
push
push
push
lea
push
push
lea
push
lea
push
call
in
clc
addb
add
add
bound
xchg
xchg
add
mov
fwait
mov
add
test
roll
mov
popa
add
add
jae
add
fmull
push
push
push
push
lea
push
push
push
push
push
push
call
add
push
shlb
xchg
add
jp
movsb
mov
push
cmpsb
mov
lods
add
mov
loope
mull
into
add
cmc
cltd
add
add
lock
mov
int3
lea
pop
call
call
push
push
push
lea
push
lea
push
push
call
add
add
pop
add
mov
js
bound
mov
xchg
mov
out
sti
jno
add
roll
nop
mov
in
add
add
add
add
xorl
aam
add
ror
call
sti
add
jecxz
add
add
add
mov
mov
lea
pop
push
call
push
push
lea
push
push
push
push
push
push
push
call
add
pop
add
jb
insb
add
lea
imul
stos
test
xorl
jb
mov
add
jp
cltd
stos
add
jmp
enter
scas
xchg
out
enter
arpl
jmp
push
push
push
push
lea
push
push
push
call
add
cmpsb
add
jl
scas
add
mov
lahf
push
add
pop
add
pop
add
pop
mov
addr16
in
out
lret
out
pusha
pop
cltd
arpl
mov
lea
pop
ret
push
push
push
push
lea
push
push
push
call
leavew
cmpsb
bound
imul
add
lea
cwtl
faddl
movsl
repnz
cld
lods
add
ret
add
leave
add
mov
jb
addr16
ret
xchg
add
add
mov
add
push
add
add
push
in
testl
stos
pushf
mov
or
sahf
fldcw
add
in
add
add
pop
mov
mov
push
push
push
lea
push
push
push
call
push
xchg
pusha
add
mov
add
jnp
js
jno
fistl
arpl
lret
mov
mov
add
leave
roll
add
mov
ja
add
cld
rcrl
add
cli
xchg
mov
mov
lea
pop
add
push
push
push
push
push
call
add
out
fwait
ljmp
add
mov
add
mov
push
lods
mov
add
ror
add
outsl
add
lock
movl
add
lock
addl
add
out
add
mov
lea
pop
add
push
push
push
push
push
push
push
push
push
push
call
mov
mov
add
out
add
jbe
add
add
lock
add
add
in
enter
add
add
jmp
movsb
sti
add
ja
add
jnp
icebp
popa
jno
add
add
mov
jo
add
faddl
mov
lea
pop
add
push
lea
push
push
push
push
push
lea
push
call
add
nop
add
add
add
add
add
mov
add
xchg
fcmove
add
push
xchg
add
jp
add
mov
add
add
jl
jle
pop
icebp
in
aam
roll
roll
in
loopne
xchg
add
data16
cmc
add
cmpsl
cltd
add
add
lea
pop
mov
xor
push
push
lea
dec
sub
push
or
inc
add
sub
sub
inc
ror
pop
shl
pop
push
push
push
push
push
push
push
push
call
mov
mov
aam
mov
lea
rolb
add
lock
lret
xchg
add
mov
cmpsl
stc
xlat
stc
add
jnp
fwait
lock
add
mov
fadds
aad
jne
jae
hlt
ret
leave
outsl
les
add
xchg
fwait
mov
xchg
add
mov
lea
pop
pushl
call
push
push
push
push
push
call
add
adc
imul
sahf
jno
add
xchg
add
add
jp
fisubrs
jp
add
mov
push
mov
add
add
mov
mov
stos
pop
cld
in
les
inc
call
push
lea
push
push
push
push
call
add
mov
add
add
add
cwtl
add
jecxz
add
jbe
sti
imul
jb
add
imul
sarl
push
push
add
add
orl
lods
add
js
add
add
push
loope
mov
ja
lock
sbb
movl
push
push
lea
push
push
push
call
mov
loopne
data16
mov
je
mov
jp
add
add
jno
add
popf
add
mov
addb
add
add
in
mov
mov
jle
add
add
add
pop
lea
push
push
push
push
call
data16
icebp
fadds
divb
mov
add
mov
pop
ffreep
leave
outsl
add
jb
into
xchg
mov
xchg
lea
movsl
jl
repnz
mov
jmp
test
add
mov
add
insb
add
push
add
loopne
push
add
add
mov
lea
pop
push
push
push
push
call
add
add
lock
mov
add
cld
add
ret
add
add
mov
mov
push
icebp
mov
jp
add
bound
add
add
in
ja
pusha
mov
cli
push
lcall
stc
add
test
add
int
aam
cltd
fmull
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
call
add
ret
mov
add
add
add
stos
jecxz
xchg
repnz
push
mov
movsb
jl
arpl
add
add
add
add
add
out
test
add
fnstcw
pop
in
push
mov
lea
pop
pushl
push
push
push
lea
push
push
push
lea
push
push
push
push
call
pop
icebp
add
shlb
rorl
pop
add
into
add
aam
mov
scas
pop
push
add
add
jmp
sbbl
jge
add
jne
in
add
add
xchg
mov
hlt
add
add
pop
call
push
push
push
lea
push
push
lea
push
call
add
push
add
jb
fcoms
cwtl
mov
push
add
add
jle
push
add
add
ficompl
add
cli
jle
fldl
fiaddl
add
ret
popf
push
cmc
ja
jnp
add
mov
repnz
std
jecxz
add
test
add
add
fiadds
add
jecxz
hlt
lea
pop
pushl
push
push
push
push
push
push
call
add
add
mov
push
mov
add
push
ret
test
fildl
loop
insb
push
add
in
fildl
fucomip
add
add
add
lcall
jne
addl
mov
jge
pushf
add
add
lea
pop
pushl
push
push
push
push
push
push
call
ret
lods
call
mov
frstor
pop
jbe
jbe
and
add
pop
mov
jno
loopew
mov
add
lahf
into
ljmp
jmp
add
stos
cwtl
add
pop
xchg
in
add
xchg
pop
add
jge
imul
jb
xchg
fadds
add
add
jmp
icebp
add
add
iret
mov
sbb
adc
add
sub
add
rol
sub
lea
pop
sub
pop
push
push
call
add
add
pusha
scas
add
imul
mov
add
bound
add
jmp
add
iret
add
xchg
ljmp
gs
lock
add
je
enter
lea
pop
pushl
push
push
push
lea
push
lea
push
lea
push
push
push
lea
push
push
call
mov
pop
xchg
scas
movl
mov
addr16
jb
jmp
ror
icebp
scas
mov
add
ljmp
out
cld
incb
add
xchg
test
mov
popl
mov
js
mov
mov
out
mov
rclb
add
call
fwait
test
pop
mov
lea
pop
call
push
push
lea
push
push
call
scas
cwtl
std
sub
mov
push
add
xchg
add
loope
lock
add
add
cli
imul
xchg
add
add
mov
jp
add
out
lds
test
popa
add
lock
lea
pop
push
push
push
add
rol
shl
shl
push
sub
add
ror
sub
sub
sub
sub
inc
rol
not
pop
lea
shr
pop
push
push
push
push
lea
push
push
lea
push
call
mov
mov
jecxz
push
xchg
add
add
add
push
pop
jmp
add
add
add
add
add
add
into
lods
js
add
addr16
mov
lea
pop
push
push
lea
push
push
push
push
call
imul
data16
add
mov
add
into
cltd
int3
fistpll
popa
mov
fbstp
add
je
push
mov
lds
jno
in
andl
bound
push
call
push
push
push
push
push
lea
push
call
mov
pop
add
jecxz
push
add
jge
add
add
add
push
jmp
add
add
xchg
add
cltd
and
test
add
cltd
cmpsl
pop
fnsave
xchg
mov
add
popa
add
loope
add
xlat
stos
insb
add
ror
add
pop
mov
push
push
push
push
push
push
lea
push
lea
push
call
fildl
cli
add
add
pop
add
add
hlt
add
js
add
rcrb
jo
mov
loop
push
pop
add
add
je
add
add
add
aad
hlt
mov
add
in
mov
push
xorl
lea
pop
push
mov
push
push
lea
push
push
push
push
lea
push
push
call
mov
lock
add
roll
test
add
xchg
int3
mov
imul
bnd
add
fidivl
add
lock
add
test
jl
jae
push
test
filds
mov
lret
fisttpll
jnp
add
mov
add
mov
lea
pop
add
push
push
call
add
aam
lahf
add
nop
add
mov
add
jno
scas
ja
add
add
add
insb
clc
mov
enter
jae
add
clc
insb
cmpsb
out
add
aam
push
subl
add
add
or
ret
add
add
push
lea
push
push
lea
push
push
push
push
call
jl
add
mov
add
add
mov
jle
mulb
add
jnp
pushf
xchg
add
add
insb
pop
lds
mov
add
mov
in
pop
mov
scas
add
add
stos
add
pop
add
mov
add
mov
add
insb
mov
lret
jecxz
cmc
mov
insb
add
push
pop
ja
add
pop
add
mov
lea
pop
add
push
push
call
jle
hlt
mov
js
push
test
std
jns
add
push
lock
add
lahf
lock
imul
add
jbe
add
aad
sahf
add
stos
jb
pusha
push
cwtl
test
mov
xchg
mov
mov
mov
pusha
add
add
lret
mov
lea
pop
mov
push
push
push
call
pop
mov
jo
add
add
jle
add
add
mov
add
bound
pushf
bound
add
mov
mov
xchg
ja
imul
mov
insb
add
add
add
mov
or
xor
push
push
call
add
add
les
iret
mov
add
push
clc
add
add
ja
add
mov
stos
test
add
pop
scas
add
mov
ja
add
jle
xorb
mov
push
lahf
add
lds
out
lds
fdivr
add
push
add
repnz
add
add
add
add
jp
jbe
add
rorb
pop
add
push
push
push
lea
push
push
push
lea
push
push
call
in
scas
pop
mov
add
add
insb
test
add
add
add
int
jne
fisubrl
add
aam
mov
add
mov
rolb
ja
add
test
add
add
jle
loopne
add
pop
add
push
lea
push
call
add
jbe
add
jno
xchg
add
add
add
add
xchg
add
jno
add
add
fiadds
rolb
jmp
loop
add
add
add
add
pop
push
push
push
push
push
call
rcrl
mov
imul
mov
sahf
pop
add
jecxz
mov
stos
add
xchg
add
add
je
mov
in
add
jns
mov
lods
test
bound
test
add
add
add
jno
add
test
push
jl
mov
add
in
fwait
add
lods
add
add
add
add
ljmp
pop
mov
xor
push
push
push
push
call
mov
add
add
jnp
fdivp
lock
in
movsl
pusha
enter
sti
popa
pusha
popf
add
test
loopne
movsb
test
mov
pop
add
mov
jns
mov
add
stc
pop
jo
add
add
cli
scas
mov
add
mov
mov
shr
pop
add
add
insb
add
adc
lock
push
push
lea
push
call
mov
jle
lods
add
test
out
les
shll
add
add
add
pop
test
cmpsb
mov
test
jmp
xchg
lcall
aad
pop
add
pushaw
ljmp
fcoml
add
cltd
fmul
jno
mov
mov
add
fstpl
cmpl
add
pop
pop
push
push
push
push
lea
push
call
fcoms
xchg
xchg
mov
add
call
add
mov
mov
insb
lret
outsl
xchg
mov
clc
jb
add
add
jae
add
popa
add
data16
add
add
add
lcall
popf
add
testb
mov
nop
lret
add
xchg
hlt
lods
int3
push
cmpsl
add
mov
lea
pop
mov
xor
push
push
lea
push
push
push
call
mov
popf
add
add
test
in
jge
add
xchg
arpl
flds
add
add
add
push
cmc
add
add
in
pop
out
add
movsl
add
cmpsb
push
ljmp
add
roll
add
add
add
pop
push
push
push
push
push
push
call
xchg
xchg
repnz
pop
jle
rcr
lods
add
add
add
add
lahf
clc
in
add
add
addr16
add
out
hlt
add
cld
lea
pop
mov
xor
push
push
lea
push
push
push
lea
push
call
out
add
ret
add
xchg
fbstp
fldt
jecxz
add
add
add
add
pop
ljmp
add
add
mov
mov
add
add
stos
push
pop
mov
lea
pop
sub
pop
push
push
call
add
add
imul
add
push
mov
add
add
aam
les
out
mov
add
jnp
add
add
add
add
pop
add
lea
pop
rep
push
push
push
lea
push
push
push
lea
push
call
add
add
add
xchg
mov
arpl
hlt
add
add
repnz
push
popf
les
push
mov
add
add
add
add
push
mov
lea
pop
pop
push
push
call
add
add
imulb
imul
in
add
add
imul
fwait
lahf
ret
add
mov
imul
bound
pop
add
fcmovb
xchg
mov
mov
fmull
pop
in
add
push
push
push
push
push
push
push
push
lea
push
push
call
lods
shlb
pop
insb
js
push
push
jge
bound
ja
fdivs
fsubrl
imul
add
cmpsb
mov
cltd
add
add
add
xchg
add
add
add
add
cmpsl
addr16
fisttpll
pop
add
push
push
push
push
lea
push
push
push
push
push
call
add
pop
add
loop
iret
mov
add
je
add
stos
jbe
stos
mov
pushf
movsl
cwtl
add
in
gs
out
jno
movsl
add
cltd
mov
lock
ja
add
mov
sti
xchg
add
add
add
sti
lea
add
push
aad
addl
mov
lea
pop
add
push
push
lea
push
push
push
call
ljmp
add
add
leave
faddl
iret
xchg
loopne
add
pop
icebp
mov
push
subl
pusha
add
mov
mov
add
add
loop
in
xchg
add
add
clc
xchg
add
add
mov
lea
pop
mov
xor
push
push
lea
push
push
push
push
lea
push
push
push
call
in
add
scas
flds
cmc
mov
add
add
mov
jmp
jns
add
add
addr16
lret
add
push
mov
push
stos
out
add
add
shl
stos
mov
lea
pop
mov
xor
push
push
push
push
push
call
lock
fwait
lock
stos
addb
add
add
add
leave
cmpl
xchg
jnp
push
add
add
add
lret
mov
loop
repnz
add
push
add
add
imul
out
mov
lea
pop
mov
push
push
lea
push
push
push
lea
push
lea
push
call
bound
add
jae
jp
add
out
fucom
mov
add
add
add
add
xchg
mov
add
test
add
add
add
mov
lea
pop
xor
push
push
call
jne
xchg
arpl
add
stos
add
jno
idivb
push
imul
add
stos
loop
fldl
push
add
mov
mov
jle
add
add
add
add
jecxz
add
add
repnz
push
hlt
loop
add
xchg
imul
add
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
call
add
add
xchg
roll
add
add
lods
cltd
in
pusha
addb
mov
mov
add
add
jb
mov
add
xchg
add
add
std
add
out
jns
add
pushf
add
xchg
add
push
ljmp
loopne
add
call
in
add
add
testl
push
push
push
push
push
lea
push
lea
push
lea
push
call
fldl
mov
mov
add
add
add
add
add
into
popa
add
add
add
add
add
add
push
negl
xchg
js
mov
lea
pop
add
push
push
lea
push
call
add
in
test
lret
scas
cmpsl
add
sub
xchg
xchg
add
add
and
add
add
rolb
lods
mov
int
add
mov
test
fadds
add
mov
add
add
add
add
mov
jp
add
pop
mov
push
push
ror
push
sub
add
shr
shr
add
sub
not
pop
add
pop
push
push
push
push
push
push
push
call
add
outsl
lods
add
mov
add
mov
out
clc
add
add
jno
add
jl
add
push
add
fiaddl
cltd
add
pop
mov
aam
add
add
popf
mov
mov
lea
pop
pushl
push
inc
pop
call
push
add
sub
xor
pop
push
push
push
xor
dec
push
xor
add
shr
sub
sub
shr
shl
inc
pop
ror
sub
sub
pop
push
dec
shl
pop
push
push
shl
pop
push
call
push
pop
mov
push
lea
push
push
push
lea
push
push
call
push
stos
push
add
add
leave
in
add
add
push
std
popf
add
add
pop
add
aad
jne
add
add
pop
push
in
add
mov
fwait
std
add
add
add
jno
add
pop
mov
mov
lea
pop
push
push
push
dec
pop
mov
push
push
push
push
lea
push
push
lea
push
call
mov
roll
xchg
pop
jp
lods
add
mov
add
add
add
iret
lods
data16
lret
add
mov
stos
add
ja
roll
int3
add
add
lea
pop
add
push
push
call
mov
add
mov
add
xchg
add
pop
jno
add
mov
fwait
add
xlat
cmpl
fsubrs
add
mov
lea
pop
add
push
dec
pop
add
push
lea
push
push
lea
push
push
call
jb
fiaddl
add
popf
lahf
loope
popa
add
shlb
sahf
pop
jns
add
add
add
add
xchg
jno
add
add
sbbl
fiadds
add
adcb
add
add
add
in
add
pop
data16
add
mov
add
pusha
ja
fisttps
adc
mov
xor
push
sub
pop
add
push
push
xor
lea
inc
pop
mov
xor
push
dec
inc
add
pop
add
pop
push
push
push
lea
push
call
flds
add
iret
add
xchg
popf
mov
jnp
add
call
rolb
mov
mov
mov
cli
add
mov
xchg
add
addr16
faddl
add
popf
add
fld
fstpt
mov
lea
pop
mov
push
push
lea
push
push
call
xchg
sahf
add
fnsave
add
mov
add
push
add
add
add
add
ljmp
add
xchg
stc
add
add
add
fiadds
je
negl
int
push
mov
add
fmull
or
push
lea
push
call
lret
test
jle
lock
clc
cmpl
mov
add
add
add
add
mov
xchg
add
add
xchg
jge
add
add
add
addb
scas
add
add
mov
add
pusha
or
les
add
push
add
pop
rep
mov
xor
push
push
lea
push
push
call
add
add
add
push
add
add
mov
add
in
add
jmp
jmp
add
add
add
lock
add
mov
cld
jecxz
add
add
add
mov
xlat
add
int
movl
mov
ret
mov
push
out
int3
lea
pop
or
je
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
lea
push
lea
push
push
call
into
leave
add
mov
add
shlb
scas
add
add
add
push
add
add
aad
add
imulb
std
arpl
mov
add
mov
add
add
lock
lea
pop
mov
xor
push
rol
dec
not
shr
pop
mov
xor
push
push
lea
push
call
jne
add
in
jo
add
xchg
add
mov
add
mov
lcall
enter
jno
mov
sti
imul
xchg
mov
jo
add
lcall
add
xchg
jo
int3
mov
lea
pop
add
push
shl
dec
pop
add
push
push
push
push
push
push
lea
push
push
call
add
lret
lret
ret
test
add
in
imul
jl
add
divl
jle
mov
add
jno
add
mov
mov
add
lea
add
pop
push
mov
xor
push
lea
push
lea
push
lea
push
call
int3
xchg
add
mov
add
add
add
add
add
icebp
pusha
pop
xchg
add
scas
add
sahf
xchg
push
mov
add
push
flds
add
jbe
pop
push
add
addr16
icebp
je
add
test
add
mov
mov
mov
lds
pop
add
pop
push
push
push
push
push
push
push
call
aad
sti
add
loope
add
cmpsb
addb
int
add
add
xchg
in
add
add
cmpsb
add
fisubl
outsl
jmp
add
fistl
add
add
sarb
jge
in
testl
add
add
fcomip
push
push
ret
add
mov
add
mov
add
add
sbb
rep
push
sub
not
ror
sub
pop
mov
xor
push
sub
xor
pop
or
je
mov
push
push
push
push
push
push
push
push
push
lea
push
call
lds
enter
je
lcall
add
add
push
xchg
pop
add
jb
movsl
rcrl
add
loop
add
add
pop
hlt
subb
mov
movsl
std
sahf
add
add
add
add
add
fnstsw
pop
pusha
add
jl
ret
test
push
test
add
xchg
mov
lea
pop
add
add
push
push
push
push
push
lea
push
push
push
call
push
jne
add
pop
add
mov
pop
mov
roll
jge
fidivs
add
sub
jmp
lahf
ficoml
push
add
xchg
push
repnz
mov
fcmove
add
add
les
je
xchg
cli
push
stos
fisubrl
insb
lock
bound
orl
add
pop
add
int
mov
lea
pop
rep
push
push
lea
push
push
call
test
add
je
imul
add
add
std
movsb
add
add
loop
add
cltd
test
cmc
data16
pop
movsl
jp
clc
xchg
imul
icebp
add
add
int3
out
je
loope
lcall
pop
pop
push
push
shl
push
xor
add
ror
inc
inc
sub
add
lea
pop
lea
ror
inc
pop
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
movsl
out
add
add
roll
mov
add
in
push
cli
pop
popf
add
add
add
add
jl
add
idivl
faddl
add
rolb
add
jns
iret
outsl
fildl
lcall
lret
fnsave
mov
movsb
add
out
js
jae
add
add
fmull
push
push
push
push
push
lea
push
push
lea
push
call
mov
add
add
roll
mov
nop
push
xchg
add
add
pusha
xchg
mov
rcrl
add
xchg
add
pop
jmp
add
add
add
lods
add
add
test
lcall
lods
ja
arpl
lcall
mov
push
push
push
push
push
push
lea
push
call
push
in
scas
add
add
ficompl
jb
add
push
lret
add
lock
add
loopne
icebp
roll
mov
je
jo
add
jnp
add
mov
add
mov
sbbb
add
add
add
add
ja
add
vpcmpeqw
add
lcall
mov
push
rol
pop
mov
push
add
not
ror
pop
jmp
push
shr
sub
pop
push
push
ror
ror
pop
mov
push
lea
push
push
push
push
push
lea
push
lea
push
push
push
call
sti
fmul
lds
add
push
mov
add
ret
add
add
mov
add
fwait
jns
repnz
add
mov
add
add
mov
add
add
add
lcall
mov
popf
add
add
pop
mov
add
sahf
imul
cltd
push
pop
mov
lea
pop
add
push
push
push
push
push
call
add
add
push
mov
xchg
add
cmpl
jp
jp
add
mov
jmp
rcrl
add
in
add
arpl
pop
add
data16
ja
test
incb
add
add
add
rcl
popf
lcall
jb
add
arpl
push
push
push
xor
rol
pop
push
push
push
push
push
push
push
push
push
call
add
mov
xchg
fadds
add
mov
xchg
sti
xchg
add
outsl
in
mov
mov
divl
ja
add
lea
pop
push
push
ror
dec
pop
mov
push
push
call
jl
jno
add
faddl
add
stc
fucomip
add
ficoml
icebp
add
insb
lret
std
cwtl
add
pushf
add
jbe
scas
ja
clc
add
add
test
push
xchg
in
clc
arpl
mov
mov
mov
test
or
pop
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
mov
sahf
imul
mov
add
je
xchg
add
fisubl
add
out
stos
imul
add
stos
mov
add
lret
mov
add
add
nop
cmpsb
add
add
add
leavew
mov
push
add
jmp
cmpsl
fimull
data16
push
not
shl
rol
pop
pop
push
xor
pop
leave
push
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
in
xchg
add
add
jecxz
out
add
aad
out
add
add
loope
lods
mov
js
add
add
add
scas
mov
mov
subb
jcxz
pop
cltd
outsl
ja
add
jnp
icebp
jecxz
xchg
add
jne
scas
xchg
lahf
add
jns
add
add
add
mov
lea
pop
ret
push
push
push
push
push
push
push
push
call
roll
mov
popa
andl
mov
push
rolb
push
add
push
add
data16
pop
clc
jp
add
rcr
out
add
sti
add
add
mov
add
mov
cwtl
repnz
jns
add
add
subl
pusha
and
push
push
push
push
push
lea
push
push
push
push
push
call
add
js
call
cltd
add
lods
add
push
pop
mov
add
add
int
xchg
mov
push
out
out
add
add
pop
fildl
add
aam
bound
pop
mov
add
push
shl
not
pop
push
push
ror
inc
pop
push
push
push
push
call
mov
outsl
add
add
out
mov
add
jl
add
std
add
push
ror
loope
pusha
jno
jecxz
add
lret
mov
lret
leave
mov
add
testl
stc
jae
out
push
lea
push
push
lea
push
push
lea
push
call
add
add
add
xorl
in
xchg
mov
xlat
in
movl
add
push
lret
mov
add
stos
incb
add
mov
shr
call
leave
pop
add
jp
add
jb
xlat
pop
mov
mov
mov
lea
pop
push
movl
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
jge
stos
ljmp
jge
ljmp
add
lock
in
out
add
test
cltd
ficompl
add
imul
test
add
add
repnz
add
in
popa
roll
xchg
jge
xlat
negl
add
add
ficompl
add
add
add
mov
lea
pop
addl
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
jo
cwtl
push
test
lahf
mov
mov
sub
add
add
add
push
add
add
loop
testb
out
mov
xchg
push
add
mov
jns
mov
add
shlb
pop
mov
mov
lea
pop
test
je
push
push
push
push
push
push
push
call
add
scas
shrl
popf
add
add
pop
add
pop
mov
add
ljmp
xchg
xchg
bound
xchg
xlat
add
add
mov
xchg
bound
mov
shl
mov
pushf
aam
push
popf
mov
add
in
les
add
int
add
out
add
add
pop
mov
push
add
inc
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
call
xchg
push
add
add
insb
pop
add
add
add
scas
add
add
hlt
add
add
add
add
add
pop
ja
add
fs
add
subl
cwtl
add
add
ja
movsl
mov
add
add
fcmovnu
push
and
pop
push
add
dec
add
not
pop
pop
push
add
shr
pop
leave
ret
push
xor
shr
pop
push
push
add
inc
pop
mov
push
lea
push
call
push
iretw
add
mov
add
roll
idivl
scas
pop
add
add
mov
add
test
jae
in
add
add
pop
mov
add
push
test
add
mov
les
cld
push
xor
pop
push
push
lea
push
push
push
push
push
call
add
jbe
loope
test
arpl
add
jb
add
scas
add
mov
add
out
imul
add
add
add
xchg
add
mov
add
in
add
js
add
add
loopne
mov
cltd
add
add
add
mov
add
in
xchg
cli
mov
lea
pop
push
push
lea
push
lea
push
call
movl
imul
mov
sarl
add
jbe
jecxz
add
mov
out
nop
mov
movsl
add
xchg
mov
test
js
add
pushf
jo
add
in
jae
add
scas
mov
lea
pop
push
push
push
xor
pop
testl
push
push
push
lea
push
push
push
push
push
push
call
jecxz
cli
jecxz
xchg
add
add
jno
push
xchg
add
ljmp
add
movsl
add
iret
xchg
lds
mov
add
sti
mov
clc
popf
add
enterw
add
stos
add
add
add
fcmovb
push
pop
xchg
add
pop
add
add
add
add
add
pop
addl
push
push
xor
pop
call
push
push
push
push
call
push
mov
add
mov
cmc
add
ja
add
add
lea
leave
push
xlat
add
loop
push
scas
pop
shll
leave
add
loop
add
rorl
icebp
in
out
add
popa
mov
push
jbe
ret
jp
add
add
add
push
mov
lea
pop
mov
pushl
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
ja
ljmp
out
mov
jp
add
cmc
push
insb
in
into
lds
push
xchg
lea
movsl
add
jo
add
lods
lret
add
add
add
imull
into
mov
add
push
aad
mov
loope
cld
icebp
out
add
mov
lea
pop
push
push
lea
push
push
push
push
push
push
push
call
mov
test
add
popa
mov
push
call
add
cld
outsl
jno
jnp
add
add
push
sti
rolb
out
rcrb
add
pop
stc
add
fcoms
roll
lcall
add
arpl
cwtl
add
pop
mov
pop
add
mov
add
add
cli
mov
lea
pop
push
push
ror
sub
pop
call
cmpl
jne
push
ror
add
dec
pop
pop
pop
push
add
pop
pop
push
not
sub
pop
pop
push
push
call
add
cli
add
add
mov
cmpsl
mov
add
fwait
std
out
add
add
add
orl
mov
out
imul
add
push
xchg
mov
push
and
in
imul
add
add
out
mov
mov
fcompl
xchg
add
add
add
pop
lods
mov
lea
pop
leave
push
lea
push
lea
push
lea
push
call
int
add
js
out
iret
add
push
add
shll
cltd
ljmp
test
sarb
add
add
add
add
pusha
repnz
push
add
ljmp
add
lcall
ret
push
lea
push
call
ja
mov
add
arpl
push
add
add
add
xchg
mov
add
add
push
add
js
add
je
jl
andl
add
add
mov
mov
add
add
test
arpl
pop
push
push
lea
push
push
push
lea
push
push
push
call
add
add
mov
mov
mov
mov
mov
mov
icebp
add
jle
add
add
mov
jns
mov
pop
push
push
clc
jb
add
sbb
mov
push
shr
add
pop
add
push
add
shl
rol
pop
push
push
not
shr
shr
rol
pop
push
push
pop
push
push
push
call
pop
jnp
add
add
stos
aam
add
enter
push
cwtl
cld
cwtl
out
push
add
add
xchg
hlt
add
add
add
xchg
mov
add
add
add
test
rolb
iret
data16
mov
scas
mov
lea
pop
push
push
shr
sub
add
pop
movl
push
push
push
push
push
push
push
push
lea
push
push
call
xchg
stos
add
cwtl
add
jno
icebp
mov
push
add
rolb
mov
add
test
lock
mov
add
add
pushf
lods
stos
add
nop
jb
mov
add
cmpsb
add
add
add
fmull
push
icebp
leave
test
pop
in
push
loopne
aad
sahf
imul
sahf
add
sahf
scas
add
movsl
push
add
push
mov
lea
pop
push
push
push
push
push
lea
push
call
cmc
add
add
add
int3
add
fadds
add
mov
add
add
js
leave
int3
shll
xchg
add
add
add
add
push
nop
add
enter
add
mov
loope
mov
add
add
iret
jb
add
jl
add
fstpl
imul
lods
add
pop
call
push
push
sub
pop
call
push
push
lea
push
push
call
add
test
flds
xlat
pop
jae
add
mov
fildl
add
popa
loop
pop
hlt
jns
mov
add
add
loope
add
leave
pop
add
ret
mov
add
cld
ret
clc
jno
in
push
stos
add
test
lea
pop
subl
push
push
push
push
push
push
push
lea
push
lea
push
call
push
loope
add
in
add
leave
lcall
xlat
loop
movb
js
outsl
add
add
add
add
mov
cmpsl
fwait
add
addr16
ja
roll
add
add
add
add
stos
pop
lahf
add
add
add
pop
add
in
add
push
sahf
mov
mov
lea
pop
cmpl
jne
push
lea
pop
pop
push
push
call
jp
xchg
orl
lret
mov
mov
scas
add
ja
jl
mov
mov
test
add
add
push
add
add
add
mov
pop
pop
push
push
push
call
mov
lret
push
cwtl
add
add
mov
add
add
add
mov
add
push
mov
in
xchg
in
add
loope
add
int3
lret
aad
add
popf
cld
add
lods
add
add
add
add
cltd
fwait
js
add
mov
mov
lea
pop
pop
pop
push
push
call
int
push
loopne
mov
add
xchg
out
lea
xchg
add
ficomps
out
add
jecxz
mov
test
rolb
enter
test
jecxz
fwait
add
aam
fsubrs
scas
fiadds
add
loopne
cmpsb
cld
out
ja
jb
in
push
scas
add
or
ret
push
push
push
push
call
std
popf
fildl
add
data16
ljmp
aam
add
xchg
imul
jle
add
in
mov
aam
lret
lods
push
mov
add
lds
add
movl
add
pusha
popf
xchg
std
test
cmpl
lea
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
push
call
arpl
fcoml
add
push
out
out
mov
add
add
stc
in
cmp
add
jbe
add
add
add
insb
add
add
add
add
fucom
add
add
add
add
fstps
lea
into
add
stc
cmpsb
mov
in
movsb
add
add
add
add
add
mov
lea
pop
mov
push
add
pop
add
push
push
push
lea
push
call
test
add
mov
loopne
jp
mov
cld
add
repnz
add
mov
add
lret
sarb
add
add
addb
ret
mov
add
jno
mov
std
add
imul
out
mov
fmull
sbbl
add
xchg
js
add
pop
push
push
lea
push
push
call
add
pop
push
pusha
sarl
add
stos
add
add
stos
imul
add
jp
iret
xchg
add
push
mov
lea
pop
push
push
push
push
push
push
push
push
push
push
push
call
mov
add
arpl
lods
mov
add
add
add
xchg
jne
jns
cwtl
jnp
clc
imul
add
add
add
jle
mov
cmpsl
mov
add
or
lea
pop
push
mov
push
not
add
pop
lea
push
lea
push
push
lea
push
push
push
push
push
push
call
fistl
xchg
roll
add
add
cmc
outsl
aad
loope
loop
add
in
jno
int3
add
add
mov
add
add
test
jecxz
mov
add
mov
enter
in
popf
jbe
in
mov
lea
pop
sub
push
lea
push
push
push
push
push
push
push
push
push
call
add
add
test
mov
add
add
jle
push
add
add
out
mov
mov
add
mov
in
add
add
mov
add
add
push
test
addl
test
into
add
leave
jb
stos
mov
pusha
sub
add
movsb
push
sub
push
push
push
push
lea
push
push
push
call
xchg
add
add
mov
add
pushf
add
push
mov
add
data16
mov
test
add
cwtl
mov
lcall
fnstenv
add
add
add
mov
lea
pop
shr
add
push
push
call
xchg
add
pop
pusha
stos
xchg
add
add
xchg
repnz
add
add
mov
fcomps
add
add
cmc
hlt
push
add
jge
pop
lds
imull
jno
int3
add
add
mov
add
add
mov
lea
pop
mov
push
xor
pop
mov
add
push
lea
push
call
add
pop
mov
add
roll
add
add
test
push
jb
clc
mov
out
rcrb
int3
fwait
addr16
roll
int3
cmc
mov
stc
add
fiadds
add
mov
lea
pop
add
push
add
pop
mov
push
push
push
push
push
push
push
push
push
call
movsb
pop
mov
clc
pushf
add
add
add
mov
fwait
mov
jbe
add
mov
fcomi
add
mov
mov
faddl
fwait
add
sahf
lods
add
bound
mov
push
push
push
push
lea
push
push
push
push
call
roll
rcrb
lahf
cmpsl
fcomip
loope
jl
in
stc
movsl
int3
add
add
add
popf
add
add
xchg
xlat
add
pop
imul
test
pop
add
mov
sarl
cmpsl
xchg
ret
add
test
scas
xchg
add
add
imul
stc
mov
aam
fadds
pop
add
mov
lea
pop
cmp
jne
push
push
push
push
lea
push
call
stos
fistl
add
push
push
add
jne
add
pusha
jae
add
add
add
add
out
imul
test
in
add
add
add
add
add
hlt
add
add
add
add
lea
pop
cmp
jne
mov
push
push
call
mov
add
add
mov
in
add
int
xlat
add
jno
mov
out
fsts
into
add
add
clc
add
mov
test
push
fistpl
add
ljmp
add
stos
pop
out
push
sti
stc
add
mov
loop
mov
fbld
arpl
call
mov
mov
lea
pop
movl
push
inc
pop
jmp
push
push
lea
push
call
aad
mov
jb
jnp
pop
vpsrlq
cli
add
xchg
add
testl
add
add
add
add
cltd
mov
fiaddl
jno
stos
xchg
mov
loope
pop
pop
pop
loopne
stc
add
add
fildll
mov
lea
pop
mov
push
push
lea
push
push
push
push
push
push
push
call
test
jo
cmc
jnp
mov
add
add
add
add
add
add
add
scas
add
mov
mov
shll
add
add
jnp
add
mov
jnp
add
pop
mov
push
lea
push
push
call
add
add
add
mov
push
add
stos
addr16
add
pop
addr16
add
lahf
add
mov
mov
add
addl
add
cmc
add
mov
add
movsb
adcl
xor
out
add
mov
add
pop
xchg
mov
lea
pop
sub
jne
push
sub
lea
pop
mov
push
lea
push
push
push
lea
push
push
push
push
push
call
loope
add
add
jae
les
mov
mov
scas
add
into
ja
add
add
add
jbe
mov
mov
jo
rolb
xchg
les
pop
rcrl
test
faddl
lock
pop
movl
push
push
push
push
lea
push
push
push
call
add
sarl
bound
jp
les
stos
jl
add
int
iret
jbe
add
xchg
mov
mov
add
cmp
fldl
lahf
add
mov
add
sbb
jmp
push
push
lea
push
push
push
call
insb
add
aad
loop
sahf
pushf
add
add
rcrl
mov
push
xchg
pushf
mov
add
xchg
add
ficoms
stos
add
test
pop
incb
data16
mov
lahf
idiv
cmc
loopne
add
add
mov
fistpl
cmc
pop
lods
mov
pushf
mov
in
add
add
and
add
lea
pop
mov
push
inc
add
add
pop
mov
push
push
lea
push
push
push
push
push
call
add
mov
sbb
lret
in
add
scas
add
mov
add
add
add
rorb
lcall
add
testb
mov
add
rorb
pop
cmp
jne
push
lea
push
push
push
push
call
leave
add
push
pop
bound
push
mov
xchg
add
add
lods
ljmp
add
leave
add
add
lcall
cld
lea
pop
mov
push
not
pop
movl
push
push
call
add
add
sahf
jp
pop
xchg
ljmp
xchg
outsl
jmp
add
leave
add
add
iret
add
add
add
shlb
add
jmp
mov
ja
stos
xchg
jmp
lcall
add
testl
arpl
pop
jmp
mov
push
add
shl
pop
cmpw
jne
push
shl
shr
pop
mov
movl
push
push
push
push
push
push
call
int3
add
add
jecxz
xor
loope
mov
add
scas
out
add
fistl
jo
xchg
out
add
in
add
rolb
out
jbe
add
mov
add
lods
add
push
add
hlt
xorl
mov
jne
add
xchg
add
push
cmpsb
mov
lea
pop
jmp
push
pop
pushl
pop
push
push
call
add
push
add
mov
cmpsb
jl
add
add
add
add
mov
fildl
add
pop
add
repnz
add
add
xchg
add
jmp
popa
xchg
jmp
fadds
sahf
pop
add
hlt
mov
lea
pop
mov
mov
push
ror
inc
add
add
pop
mov
push
push
shr
push
sub
add
add
sub
sub
add
pop
not
pop
push
push
lea
push
push
push
push
lea
push
push
push
push
call
add
lret
fmuls
add
arpl
add
mov
lods
in
std
add
add
cmc
add
add
iret
imul
aad
aam
mov
mov
flds
add
add
add
repnz
add
mov
lret
add
addr16
cltd
in
mov
scas
mov
enter
mov
mov
lea
pop
push
push
sub
add
pop
call
push
shl
pop
cmpl
je
push
push
sub
push
push
pop
add
sub
add
dec
shl
lea
pop
inc
rol
add
pop
push
add
ror
pop
push
call
push
pop
cmpl
je
push
push
not
ror
xor
shr
push
xor
add
dec
sub
sub
shr
shl
add
pop
sub
pop
push
add
lea
pop
push
call
push
push
push
push
push
push
push
push
push
call
shlb
in
add
add
pop
xchg
js
out
add
lods
add
add
add
cmpsl
loope
mov
mov
add
add
and
cmpl
je
push
push
sub
shl
push
sub
add
add
not
sub
dec
xor
pop
inc
shr
not
pop
push
lea
push
call
bound
add
push
cld
rorb
ret
imul
add
repnz
arpl
add
xchg
std
add
push
test
add
int3
mov
add
andb
mov
add
loopne
add
mov
pop
cwtl
mov
lea
pop
push
call
push
push
push
push
push
push
lea
push
push
push
call
pop
add
iret
stc
add
test
push
lds
add
js
add
add
fs
jp
add
add
imul
add
jb
add
add
lret
add
cmpsl
imul
movb
popf
rcrb
xchg
mov
sti
mov
fistps
insb
lods
jl
data16
pop
jb
add
add
cmc
imul
and
cmpl
je
push
push
rol
dec
push
and
add
dec
sub
pop
add
rol
xor
pop
push
push
push
push
call
push
jb
rcrl
rcrl
add
push
add
add
jl
popa
test
loopne
jo
nop
add
push
pop
aad
out
add
add
add
cmpsl
sbbb
add
out
add
shlb
jle
jae
jns
add
mov
ficomps
ret
lea
pop
push
push
push
push
push
push
call
add
lea
xchg
jne
add
xchg
cwtl
in
add
jo
push
shlb
lahf
mov
loopne
addl
ror
pop
int
stos
sahf
add
add
mov
lods
mov
shrb
add
add
add
pop
call
push
ror
pop
cmpl
je
push
push
ror
add
add
rol
push
xor
add
not
sub
ror
pop
xor
pop
push
not
dec
pop
push
call
push
dec
pop
cmpl
je
push
push
rol
xor
push
or
inc
add
not
add
inc
sub
shl
shl
pop
xor
ror
pop
push
lea
pop
push
push
push
call
add
out
add
add
add
in
pop
add
mov
mov
xchg
mov
add
add
stos
lcall
add
icebp
mov
pusha
loopne
xlat
lahf
les
add
add
add
aam
add
add
lea
pop
call
cmpl
je
push
push
lea
push
or
inc
add
not
shl
not
add
sub
shr
inc
shr
pop
lea
sub
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
add
pushf
pop
add
add
popf
add
cmpsb
xchg
les
pop
pop
push
jge
lret
jb
je
add
add
add
fiadds
lds
add
lods
xchg
add
fmull
push
push
lea
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
add
std
mov
repnz
add
add
add
rcll
mov
push
xchg
les
mov
add
push
test
loope
add
scas
mulb
mov
popl
add
cmpl
mov
int
pop
popf
testb
call
push
push
push
lea
push
push
push
call
add
jb
push
sahf
pushf
push
xchg
cld
add
add
test
test
add
add
add
andb
add
push
in
mov
add
roll
aad
pop
add
push
stc
mov
xchg
flds
in
loope
scas
divb
add
add
add
jmp
mov
add
in
in
mov
lea
pop
cmpl
je
push
push
push
or
not
add
ror
sub
shl
sub
rol
pop
xor
sub
add
xor
pop
push
push
push
push
push
lea
push
lea
push
push
call
test
add
mov
je
xchg
loop
add
add
movl
mov
pop
jmp
hlt
imul
add
add
add
add
xchg
add
jne
aad
mov
add
lret
pushf
mov
mov
lea
pop
push
push
push
push
call
add
pop
hlt
mov
mov
js
jmp
out
aad
lea
clc
mov
cmpsb
data16
arpl
ljmp
push
pop
mov
fcompl
jno
loop
add
add
mov
fwait
lea
pop
call
push
push
push
push
call
add
clc
gs
cld
add
xchg
ja
jecxz
add
cltd
push
mov
stos
js
pop
shl
lea
mov
jae
jge
movsl
mov
xchg
out
mov
cwtl
outsl
mov
mov
out
sahf
xchg
ret
lea
pop
cmpl
je
push
push
shr
lea
shl
lea
push
push
pop
add
rol
lea
sub
add
shl
rol
pop
not
add
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
flds
into
add
add
add
je
jo
add
add
loop
add
add
add
add
add
jmp
add
add
add
push
hlt
lea
pop
push
push
push
call
in
push
loop
add
add
out
push
add
add
add
ja
out
jno
rcl
cmpsl
add
lret
add
popf
add
add
addr16
add
jp
fmuls
xchg
enter
popf
popl
add
cmpsb
lahf
add
test
add
mov
in
popa
fwait
mov
lea
pop
call
push
xor
dec
pop
cmpl
je
push
push
rol
shr
xor
push
and
add
not
sub
not
pop
add
xor
sub
pop
push
sub
shr
pop
push
push
shr
pop
call
push
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
loop
out
add
imul
jns
pop
add
add
mov
jge
add
mov
add
out
add
mov
mov
jne
mov
pop
add
xlat
jecxz
add
mov
stos
add
lret
aam
add
mov
add
andb
mov
out
push
nop
cld
add
pop
bound
mov
lea
pop
cmpl
je
push
push
rol
lea
push
and
add
add
not
not
sub
xor
pop
xor
add
rol
ror
pop
push
rol
not
dec
shl
pop
push
push
push
call
jae
lods
lret
pop
lcall
add
add
add
add
ret
push
mov
jne
scas
add
add
mov
rcrb
add
lea
pop
call
push
push
push
lea
push
push
push
lea
push
lea
push
call
add
sti
ret
add
in
add
adcl
data16
test
test
testb
lret
add
mov
test
cli
add
add
lret
cld
add
loop
out
std
sarl
lock
mov
lea
pop
cmpl
je
push
push
dec
shr
push
push
pop
add
sub
sub
sub
sub
pop
add
pop
push
sub
pop
push
push
push
push
call
lret
jae
add
add
add
add
mov
add
add
add
add
jbe
pushf
add
jbe
fistpl
add
push
add
pop
add
stos
fs
test
mov
cltd
jns
add
add
cltd
test
pop
call
push
inc
shr
inc
sub
pop
cmpl
jne
push
dec
add
ror
dec
pop
mov
push
lea
push
push
call
add
xchg
scas
lcall
pushf
add
addb
in
add
rcll
add
lcall
add
add
jbe
lock
add
add
sti
scas
add
jge
out
test
add
ljmp
add
pop
aam
in
movb
int
stos
add
fmull
add
add
add
cld
dec
pop
jmp
xor
push
push
lea
push
push
call
add
push
int3
add
loop
cmc
add
push
lods
xchg
mov
loopne
cmc
add
mov
out
fcomi
test
add
add
cmpsb
sahf
add
mov
lea
pop
pop
push
lea
push
call
data16
add
xchg
mov
xchg
add
cld
test
jecxz
out
js
add
into
add
add
add
std
pop
add
add
test
add
xchg
out
ret
fwait
jp
mov
jne
add
add
jbe
add
int
fiaddl
add
lea
pop
pop
push
xor
xor
sub
pop
pop
push
push
lea
push
call
add
stos
add
clc
gs
push
mov
idivb
add
cmc
popa
addb
add
pop
repnz
test
add
cmpsb
hlt
mov
arpl
mov
add
add
push
fwait
lds
add
add
in
jo
add
add
add
lahf
cmc
add
arpl
add
add
or
pop
leave
push
push
push
lea
push
push
push
push
push
push
call
push
add
cli
loope
mov
test
mov
lcall
scas
mov
cwtl
iret
add
in
arpl
testl
add
add
add
enter
iretw
fistps
cli
add
fwait
add
incb
leave
push
add
add
add
addr16
ret
push
push
push
push
push
push
push
push
push
call
cmp
add
add
rolb
add
add
roll
int
add
les
xchg
jp
add
lods
scas
mov
add
add
aad
scas
add
add
add
xchg
push
lods
ret
data16
add
add
add
cmpsb
add
add
add
add
add
shlb
add
add
scas
add
popa
and
in
add
push
push
push
call
icebp
mov
add
scas
mov
pop
hlt
loope
pop
flds
xchg
mov
flds
add
add
add
arpl
mov
xchg
mov
addb
add
add
add
scas
mov
mov
iret
sahf
mov
jo
mov
mov
rcr
jmp
fadds
repnz
push
xchg
jae
mov
scas
mov
lea
pop
cmpl
jne
push
push
lea
push
or
not
add
not
sub
rol
sub
not
xor
pop
pop
push
shr
sub
pop
pushl
call
push
add
add
pop
push
push
lea
pop
call
push
push
lea
push
push
push
call
add
mov
add
popfw
loopne
add
jle
in
testb
add
lods
add
pop
add
jmp
ljmp
add
cwtl
in
add
add
add
into
loope
call
fadds
add
popl
cltd
add
fwait
add
mov
out
add
add
lea
pop
jmp
push
push
lea
push
push
call
jmp
subb
test
add
add
in
add
lret
je
mov
mov
add
shll
lods
add
mov
add
repnz
mov
nop
test
pushf
loopne
mov
add
add
add
mov
lea
pop
cmpl
je
push
push
call
jnp
add
rolb
shl
in
xchg
mov
add
add
add
add
lods
add
add
pushf
je
movsl
jnp
add
jecxz
sti
fs
mov
hlt
lea
pop
cmpl
jne
push
inc
pop
leave
push
add
xor
pop
add
push
add
pop
pop
push
sub
pop
pop
push
ror
pop
pop
pop
push
add
pop
leave
push
push
lea
push
push
push
lea
push
call
mov
push
jns
add
mov
testb
add
fldenv
scas
add
add
mov
les
insb
test
add
mov
add
add
mov
lea
pop
add
push
push
push
lea
push
lea
push
push
lea
push
push
call
add
mov
pop
cmpsl
add
in
movsl
adcl
mov
add
rol
roll
fs
add
add
mov
jecxz
iret
movsb
mov
add
jnp
call
aam
add
add
mov
jno
clc
mov
push
notb
int3
add
arpl
pop
ret
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
ljmp
lret
push
add
out
add
add
fmuls
add
add
add
pop
add
add
add
ljmp
add
add
add
mov
lea
pop
jmp
push
sub
sub
shl
pop
cmpl
jne
push
push
lea
lea
push
or
not
add
sub
not
sub
shr
pop
add
pop
push
lea
push
push
push
push
push
call
clc
add
cltd
add
mov
pop
xchg
ja
jbe
xchg
in
add
mov
push
mov
lea
ljmp
xor
add
xchg
mov
or
lret
jnp
add
negb
cld
add
add
add
push
add
sbb
jne
push
push
lea
push
push
push
push
push
push
push
call
test
add
add
add
imul
mul
loop
add
leave
fimull
mov
mov
out
into
add
lock
add
js
add
jge
rolb
add
movsb
push
xchg
add
mov
lea
pop
call
push
xor
not
pop
push
push
ror
rol
pop
call
push
dec
pop
jmp
push
push
push
push
call
mov
jnp
mov
add
stos
add
add
add
add
jge
jle
in
loope
add
loope
xchg
insb
lret
add
jne
add
add
add
pop
add
movsb
mov
in
clc
mov
lea
pop
cmpl
jne
push
ror
not
pop
mov
push
pop
mov
call
push
push
lea
push
push
call
xlat
add
add
lods
aam
add
rcrb
lret
pop
movsb
mov
add
jmp
add
xchg
flds
rcrb
add
stos
add
add
mov
push
pop
call
pop
add
add
pop
mov
bound
pop
push
push
push
sub
rol
shl
push
and
add
ror
sub
sub
add
sub
pop
add
pop
push
push
push
push
lea
push
lea
push
call
fdivr
mov
add
push
cwtl
add
add
bound
add
mov
add
add
out
pusha
mov
push
add
aam
mov
lahf
mov
out
pop
hlt
mov
add
xchg
jl
add
add
mov
pop
stc
push
fs
push
push
add
add
mov
add
push
add
add
mov
hlt
lea
pop
pushl
call
push
ror
pop
call
push
push
xor
ror
add
not
push
sub
add
sub
dec
pop
shr
pop
push
push
push
push
push
push
push
lea
push
lea
push
call
je
xchg
mov
popf
push
xorl
insb
ljmp
add
add
mov
add
pop
popa
mov
add
shlb
loope
pop
je
add
push
mov
movsl
aad
add
mov
mov
xchg
add
test
jae
add
pop
pushl
call
push
shl
pop
call
push
push
shl
push
and
add
sub
lea
sub
rol
add
add
pop
shr
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
scas
add
nop
int
xchg
add
mov
add
out
add
add
add
stos
test
xchg
gs
loopne
into
mov
scas
mov
loop
cld
add
lods
js
mov
add
loop
add
pop
mov
pop
sahf
add
push
add
xorl
mov
lea
pop
pushl
push
sub
shl
pop
call
call
push
push
shl
shr
shr
shl
push
or
not
add
sub
xor
pop
inc
pop
push
push
call
add
add
imul
pusha
movl
add
xchg
mov
ficoms
fwait
add
add
sti
cwtl
lds
fidivl
mov
add
mov
lea
pop
pushl
call
push
add
shr
lea
ror
pop
call
push
push
shr
add
rol
push
or
inc
add
sub
add
rol
shr
sub
xor
sub
sub
pop
shl
ror
shl
pop
push
shr
pop
pushl
call
push
sub
sub
pop
call
push
push
not
push
and
add
add
inc
sub
sub
xor
sub
pop
add
pop
push
push
lea
push
push
lea
push
push
push
push
push
push
call
add
enter
in
call
jmp
cld
add
ror
xchg
movsl
jnp
add
pusha
add
add
ret
cltd
xchg
repnz
ljmp
ljmp
add
arpl
out
add
add
add
jb
add
add
add
fcomi
scas
shlb
add
cli
cmc
insb
jge
faddl
cmpsb
add
pop
pushl
call
push
push
push
push
push
lea
push
push
call
add
cld
negl
add
add
into
mov
add
mov
mov
iret
pop
mov
nop
jl
out
bnd
lret
mov
mov
add
les
arpl
call
push
push
sub
xor
sub
push
and
add
sub
shr
add
sub
sub
pop
dec
pop
push
add
sub
add
not
pop
pushl
push
push
push
push
push
push
lea
push
lea
push
push
push
call
push
add
push
jecxz
add
sar
nop
ja
rcrb
stc
sarb
scas
add
in
add
add
pop
jae
int3
pop
je
mov
jne
add
xchg
add
push
test
push
clc
mov
add
xchg
popf
mov
add
add
add
mov
mov
sub
test
add
push
push
lea
push
call
jge
rclb
add
pop
add
add
push
je
aad
jnp
xchg
add
int3
add
stos
xchg
mov
push
add
jmp
lods
add
mov
jle
sarb
mov
add
add
add
mov
iret
mov
lea
pop
call
push
push
dec
xor
not
push
sub
add
shr
add
sub
add
pop
dec
pop
push
push
push
push
push
call
ret
jns
add
add
mov
scas
leave
test
pusha
mov
xor
jnp
add
add
add
add
scas
lods
enter
add
xlat
bound
imul
jne
call
push
lea
push
lea
push
push
call
xchg
pop
add
add
add
arpl
push
add
add
add
rcrb
push
ljmp
faddl
add
pop
movsb
pushf
mov
bound
pop
call
push
push
not
push
and
add
sub
sub
ror
shr
pop
add
pop
push
shl
pop
pushl
push
lea
push
push
push
push
push
lea
push
push
push
call
outsl
in
stos
add
roll
rolb
add
cli
add
loop
add
ja
out
add
add
jae
add
xorl
lock
jno
add
add
mov
rorl
arpl
xchg
mov
add
xchg
clc
ja
out
jl
lods
add
testb
pushf
roll
xchg
fmull
subb
add
push
push
push
push
push
push
lea
push
call
loop
in
jnp
aam
cmpsl
in
lods
mov
cli
lcall
aam
add
add
mov
xchg
in
test
mov
fwait
jnp
mov
add
add
add
fcmovbe
fdivs
add
lret
ret
pusha
jle
add
add
cli
add
add
add
in
add
add
add
xchg
int
jb
xchg
add
mov
xchg
cmpsl
xchg
add
add
cld
lea
pop
call
push
push
ror
add
not
push
and
add
add
sub
ror
lea
rol
pop
add
ror
rol
pop
push
push
call
lcall
add
add
fcomi
mov
rcl
ret
add
popl
jb
lods
add
add
lret
lahf
xchg
add
pushf
add
adcb
add
call
faddl
xlat
add
cld
fsubs
out
mov
call
pop
push
or
jne
push
push
push
push
lea
push
push
call
fs
mov
add
addl
add
add
sar
filds
add
out
stos
mov
test
add
lret
add
mov
add
add
add
stos
stos
add
jne
into
add
jmp
add
mov
lea
pop
call
push
not
pop
lea
push
push
push
lea
push
lea
push
push
call
pop
xchg
add
add
mov
imul
add
add
mov
ja
aad
andl
mov
out
add
loopne
mov
nop
fistpl
pop
add
mov
push
jo
roll
frstor
add
add
pop
add
xchg
subb
mov
lea
pop
push
push
ror
not
pop
call
push
push
add
sub
add
ror
push
push
pop
add
xor
sub
shr
inc
sub
xor
not
add
xor
pop
inc
pop
push
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
xchg
add
iret
add
add
add
in
out
add
imull
mov
mov
fnclex
test
jae
add
xchg
add
add
fadds
test
stos
fdivrl
cmpsl
add
pop
pushl
push
push
lea
push
push
push
push
push
call
add
add
add
sti
mov
add
lock
add
add
ljmp
add
mov
push
aam
add
nop
lret
jge
add
add
ror
add
add
add
pop
add
cmc
popa
add
data16
sub
mov
add
cld
add
pop
add
pusha
add
jae
cmpsb
rolb
add
jo
mov
add
fdivl
mov
lea
pop
call
push
lea
push
push
push
lea
push
call
jo
add
add
add
scas
add
add
add
out
add
icebp
add
mov
stos
mov
pushf
mov
lea
pop
call
push
push
shr
push
sub
add
inc
sub
sub
sub
inc
shl
shl
sub
pop
rol
shr
pop
push
shr
pop
pushl
call
push
not
pop
call
push
push
rol
add
dec
sub
push
xor
add
sub
lea
lea
sub
shr
shl
add
pop
add
xor
xor
pop
push
inc
shl
pop
pushl
push
lea
push
push
lea
push
push
push
push
call
mov
add
mov
mov
xlat
xchg
mov
push
lock
xchg
add
push
shlb
add
mov
xor
pop
add
clc
mov
add
add
mov
add
add
push
lcall
add
fmull
mov
lea
push
push
lea
push
push
push
push
call
add
jle
nop
jmp
out
add
add
xchg
arpl
add
add
je
lds
cmc
add
add
in
pushf
lds
add
mov
std
vcvttps2udq
jp
iret
cmpsb
sti
mov
nop
add
add
add
mov
mov
imul
int3
jo
mov
lea
pop
call
push
sub
pop
lea
push
push
inc
shl
rol
push
or
inc
add
lea
sub
not
sub
sub
sub
pop
sub
pop
push
push
push
push
push
call
push
add
pop
push
add
rol
fisubrs
fiadds
add
add
xchg
push
xchg
add
into
fbld
ljmp
jl
addr16
push
add
cwtl
add
pop
add
mov
lea
pop
pushl
push
push
push
push
push
push
push
call
xchg
sti
jo
add
mov
push
add
jae
add
rolb
les
xchg
add
test
add
out
ret
add
add
jle
jne
add
push
add
mov
add
pop
xchg
add
mov
lea
pop
call
push
push
push
push
push
lea
push
lea
push
push
call
repnz
mov
add
lds
add
add
add
add
push
push
add
addl
add
pushf
add
popa
add
mov
jle
add
add
fiaddl
arpl
jmp
test
add
xchg
jmp
mov
mov
not
loope
test
xchg
ret
lea
pop
push
push
lea
rol
shr
pop
call
push
push
add
ror
push
push
pop
add
not
lea
sub
sub
dec
ror
add
pop
add
rol
pop
push
add
shl
ror
add
pop
pushl
call
push
push
push
push
call
add
push
mov
cmc
pop
mov
add
mov
add
jno
jecxz
lahf
add
mov
add
xchg
add
mov
mov
lea
pop
call
mov
push
push
rol
shl
sub
push
or
not
add
not
inc
sub
shl
sub
xor
pop
inc
sub
shl
pop
push
ror
pop
pushl
push
add
pop
call
push
xor
not
shr
shr
pop
push
push
xor
pop
pushl
call
push
push
rol
shr
sub
push
and
add
lea
add
sub
sub
dec
pop
xor
dec
pop
push
push
push
call
ficoml
add
add
add
add
add
add
add
arpl
nop
hlt
mov
add
add
xchg
add
add
testb
repnz
pusha
xchg
aad
push
add
add
loope
sarl
add
test
out
mov
lea
pop
pushl
push
rol
pop
call
push
push
sub
shr
add
push
xor
add
sub
add
sub
add
pop
dec
pop
push
push
dec
add
push
xor
add
dec
add
sub
inc
pop
add
pop
push
push
push
lea
push
push
lea
push
push
call
jge
popa
xchg
add
mov
cmc
arpl
out
add
incb
mov
int
out
mov
shlb
add
call
add
pop
jecxz
add
mov
add
mov
jbe
add
cwtl
into
out
shl
cmpsb
mov
lea
pop
call
push
push
dec
not
inc
push
or
not
add
shr
sub
rol
shr
sub
ror
add
pop
add
not
not
pop
push
not
pop
pushl
push
add
sub
pop
call
mov
push
add
pop
lea
push
sub
ror
pop
lea
push
xor
pop
push
push
push
lea
pop
push
push
push
lea
push
push
push
push
lea
push
call
add
add
pop
pop
add
scas
sti
add
mov
add
js
add
xchg
add
add
aam
add
mov
add
add
out
add
mov
outsl
xchg
std
nop
fdivrp
pushf
add
repnz
clc
push
roll
iret
cmc
push
add
lcall
mov
sbb
push
push
push
not
dec
pop
push
push
push
push
push
push
call
cmc
aad
loop
aam
add
add
mov
mov
pop
addb
scas
scas
cmpsl
push
mov
add
add
cltd
add
jmp
mov
lock
mov
add
jbe
add
in
mov
fidivrs
ffree
add
jle
test
aam
bound
pop
push
push
sub
shl
pop
pushl
push
push
sub
pop
call
push
push
shr
shl
add
add
push
push
pop
add
not
sub
sub
pop
xor
shr
pop
push
add
sub
pop
pushl
push
sub
sub
pop
call
push
push
push
push
call
movsl
fiaddl
add
add
mov
in
lea
scas
add
mov
out
add
ljmp
in
add
push
jb
add
fmul
test
add
rcrb
lea
pop
call
push
lea
push
push
lea
push
push
push
lea
push
push
push
call
shrb
add
pop
clc
mov
mov
mov
pop
jp
sahf
loope
add
add
add
add
repnz
sti
add
fdivrp
xchg
ljmp
lahf
add
add
repnz
fnsave
mov
lea
pop
mov
push
sub
xor
ror
pop
pop
dec
jne
push
push
push
push
lea
push
call
add
add
add
add
arpl
filds
add
bnd
add
test
add
add
andb
mov
cwtl
add
add
add
add
add
stc
pusha
add
mov
in
loopne
xchg
push
add
add
pop
jae
mov
lea
pop
jmp
push
rol
sub
pop
call
push
push
shr
inc
ror
push
push
pop
add
shl
add
shl
sub
lea
pop
inc
shl
inc
xor
pop
push
push
push
push
push
lea
push
push
push
push
push
call
outsl
cltd
lahf
sahf
add
add
xchg
fisubrs
shrb
add
add
add
add
add
in
mov
add
mov
adcb
push
pop
cld
add
in
add
mov
in
push
pop
add
add
in
popa
add
add
int3
lea
pop
pushl
call
push
ror
pop
push
call
push
add
xor
pop
mov
lea
push
push
shl
sub
lea
push
push
pop
add
xor
sub
dec
pop
not
inc
pop
push
xor
sub
pop
pushl
push
lea
push
push
lea
push
push
push
call
cltd
loopne
add
jns
jo
add
enter
cwtl
faddl
outsl
add
xchg
add
add
insb
mov
add
add
loopne
out
add
pop
call
push
push
push
push
lea
push
push
call
loopne
add
add
in
add
jl
add
ficomps
cmpsl
add
in
add
push
int3
add
add
mov
add
add
mov
lret
stos
shrb
add
mov
mov
pop
data16
test
arpl
mov
pop
add
sahf
add
add
decb
pop
call
push
push
dec
push
or
not
add
sub
xor
shr
xor
dec
pop
pop
push
shr
inc
pop
pushl
push
push
push
lea
push
push
push
push
push
call
jns
rcrb
add
add
pop
add
add
pop
lock
mov
lods
add
mov
in
add
stos
xlat
add
xchg
add
add
push
add
add
jge
lahf
scas
cli
add
mov
out
add
jns
testb
scas
mov
mov
add
add
mov
arpl
pop
call
call
push
ror
pop
mov
lea
push
push
sub
shr
push
and
add
add
shr
sub
add
not
inc
pop
shr
inc
pop
push
push
push
call
mov
push
add
in
add
pop
xchg
add
in
add
scas
cltd
lret
add
jo
add
pop
add
mov
add
mov
jl
int3
incb
add
push
jge
pop
add
pop
pushl
call
push
lea
push
push
push
push
call
pushf
popa
mov
add
xlat
cld
add
jle
int
add
rolb
add
iret
fstpt
add
fistpll
add
add
xchg
je
loop
aad
clc
add
cmpb
loop
int3
lea
pop
lea
push
not
ror
pop
push
push
not
pop
push
push
dec
shl
pop
push
pushl
push
push
inc
add
inc
sub
push
xor
add
rol
sub
ror
pop
xor
lea
sub
pop
push
push
push
call
cltd
xchg
jecxz
add
lods
jmp
add
mov
mov
jcxz
fs
add
mov
nop
lahf
add
mov
mov
mov
mov
aad
jmp
or
push
call
push
push
rol
xor
shr
ror
push
push
pop
add
dec
lea
rol
add
sub
sub
pop
rol
pop
push
push
push
lea
push
push
push
lea
push
call
fcomi
mov
out
scas
arpl
fldl
add
add
add
pop
rclb
pop
add
sbbb
add
clc
jmp
fwait
add
lret
add
mov
jbe
mov
mov
mov
add
add
pop
pushl
push
push
push
push
push
lea
push
lea
push
push
push
call
test
in
faddl
mov
push
push
vpor
xchg
add
stos
rorb
outsl
jecxz
mov
add
add
aad
add
add
mov
xchg
jecxz
pusha
icebp
add
cmpsb
add
shll
les
mov
pop
call
push
inc
shl
xor
inc
pop
push
push
push
push
call
mov
add
add
push
mov
scas
add
mov
add
shrl
jmp
add
mov
jl
je
add
imul
jnp
add
test
mov
cli
pop
add
add
into
add
or
call
push
push
add
rol
add
push
sub
add
sub
xor
pop
shl
pop
push
inc
pop
pushl
call
push
push
push
push
push
call
test
jne
add
scas
add
outsl
loope
mov
add
loop
add
add
fiadds
add
pushf
int
sahf
add
add
push
lret
xchg
add
mov
loopne
pop
add
add
fmull
rclb
lea
lea
pop
jmp
push
push
push
push
push
push
push
lea
push
push
push
call
fnstsw
add
hlt
add
add
add
mov
xchg
jmp
rclb
test
les
push
sahf
mov
pop
cld
add
add
mov
pop
arpl
add
ror
add
add
xchg
add
mov
add
push
add
arpl
xchg
pop
pushl
push
shr
inc
add
pop
mov
push
dec
rol
pop
jmp
push
push
rol
inc
sub
push
push
pop
add
rol
xor
sub
add
dec
ror
lea
pop
rol
inc
pop
push
push
push
lea
push
push
push
push
lea
push
push
push
call
add
add
xchg
mov
add
nop
shlb
add
add
fadds
add
std
add
add
pop
add
in
add
add
icebp
scas
ror
xchg
add
add
jns
push
test
jnp
add
add
les
jne
push
push
lea
push
push
push
push
call
jns
mov
add
add
push
int
stos
stos
add
add
mov
addb
push
push
mov
add
mov
fcomi
pop
call
add
jge
add
leave
xorw
int3
add
add
lahf
mov
mov
cld
jle
cld
cwtl
add
push
mov
add
xchg
add
add
lea
pop
call
push
push
push
call
fidivrl
movsb
mov
mov
add
cmpsl
xchg
rcr
aam
roll
lds
addr16
iret
jo
xchg
xchg
aam
add
add
add
add
add
mov
mov
out
jecxz
nop
add
pusha
mov
add
mov
lea
pop
push
push
push
lea
push
push
lea
push
call
rcr
aam
add
cmpsb
push
add
in
mov
jp
sti
popa
js
add
xlat
add
sti
cli
jl
in
add
mov
add
stc
fcoms
shl
pop
fdivr
pop
mov
mov
add
pusha
lods
push
add
test
test
movsb
mov
push
movsl
add
test
test
fsub
add
push
fldl
jnp
mov
lea
pop
call
push
push
push
sub
add
add
sub
shr
pop
not
not
pop
push
not
pop
pushl
push
shl
not
rol
pop
call
push
push
lea
push
call
mov
lcall
popa
add
std
lds
pop
loop
fildl
add
add
add
add
add
add
test
mov
add
mov
add
nop
add
mov
jo
add
mov
lcall
add
add
pop
push
push
push
lea
push
push
call
std
aam
jb
push
add
jnp
fcompl
lahf
add
rcrb
add
add
mov
add
in
pushf
push
leave
nop
add
test
mov
jns
pop
lods
add
add
xchg
fldl
lds
add
insb
add
lret
jno
lret
lret
rcll
lahf
xchg
push
adc
rclb
ret
sub
shr
pop
leave
push
xor
pop
add
push
add
ror
pop
pop
pop
push
pop
pop
pop
push
lea
push
push
push
push
call
add
add
add
lods
pop
pop
fisttpl
add
jnp
jno
xlat
add
lcall
add
ljmp
push
je
cmc
xchg
in
add
add
add
sahf
add
add
adc
leave
push
ror
ror
pop
add
ret
push
add
pop
leave
push
add
pop
ret
push
pop
push
push
lea
pop
mov
cmpl
jne
push
rol
lea
ror
pop
mov
push
inc
pop
jmp
push
ror
xor
pop
mov
push
push
push
push
push
lea
push
push
push
push
call
shr
addb
mov
test
add
icebp
mov
xchg
add
add
stos
add
add
lretw
loopne
lret
aam
bound
and
xor
push
dec
xor
pop
xor
push
push
lea
push
lea
push
call
add
add
add
jle
jp
push
roll
add
push
add
jne
mov
loope
mov
add
add
jae
cmpsl
mov
add
lods
mov
jb
aam
bound
pop
add
xor
push
inc
sub
shl
pop
dec
push
lea
xor
lea
dec
pop
sub
jmp
push
push
push
push
push
call
lea
jge
add
add
add
nop
mov
enter
test
pusha
out
loope
jne
jmp
add
add
add
jecxz
add
jecxz
fadd
pop
jle
push
add
jae
lahf
cwtl
mov
mov
add
add
add
add
add
mov
leave
add
add
add
fwait
mov
pop
sub
pushl
push
push
push
lea
push
push
push
call
jle
add
mov
fisubrl
clc
mov
popl
add
add
add
int3
add
add
out
add
lret
pop
mov
rcll
add
jne
jnp
fcmove
mov
cltd
add
cwtl
jnp
vpaddd
xchg
add
fadd
clc
loop
test
call
addb
add
in
add
mov
lea
pop
pop
push
lea
push
push
push
push
call
add
imul
jno
enter
orl
add
test
aam
add
xchg
xchg
les
lock
jp
jecxz
add
in
arpl
in
add
lret
push
imul
mov
add
add
sti
fwait
add
add
hlt
mov
lea
pop
sub
cmp
jne
push
not
pop
mov
push
lea
shr
shl
xor
pop
lea
push
lea
pop
sub
push
sub
dec
pop
mov
push
push
push
lea
push
push
call
add
add
test
mov
out
push
test
add
data16
mov
jnp
mov
mov
add
jle
add
insb
jnp
add
roll
jnp
add
add
pop
add
movsl
shr
add
sahf
add
add
add
cld
fisubrl
int3
je
mov
lea
pop
shr
add
push
lea
push
call
add
jbe
int3
imul
data16
add
push
mov
add
add
mov
jmp
mov
xchg
test
fiadds
add
int3
add
in
mov
lea
add
add
xchg
add
jmp
xchg
ja
test
add
lret
mov
push
test
js
jbe
movsl
mov
lea
pop
sub
push
xor
shr
pop
pushl
pop
push
push
push
lea
push
push
push
push
push
push
call
movsl
pop
add
out
add
cld
mov
test
out
fadds
add
jbe
add
mov
imul
aad
add
jns
jae
fcoms
add
icebp
add
out
add
movsb
gs
in
add
test
stc
mov
lea
pop
shr
push
push
push
push
push
lea
push
push
push
call
scas
add
add
lds
add
lcall
lods
rcr
add
out
aam
add
add
sti
xchg
add
jo
rolb
mov
pop
and
push
sub
lea
add
pop
sub
cmp
jne
push
push
push
push
push
lea
push
push
push
call
aam
xchg
nop
add
push
jbe
add
pop
gs
add
icebp
add
lahf
xchg
cmpsl
add
xchg
or
jecxz
add
into
in
out
jnp
test
pop
lret
ljmp
add
mov
lea
pop
leave
push
shr
sub
rol
pop
ret
push
not
lea
pop
push
mov
push
sub
pop
add
push
push
xor
add
shr
pop
push
push
add
not
rol
ror
pop
push
push
push
call
leave
add
add
jmp
lea
add
ljmp
add
add
add
outsl
mov
add
add
call
add
fldl
add
add
into
mov
jae
fiadds
add
mov
lds
out
add
add
add
add
pop
push
push
pop
push
push
not
pop
mov
lea
push
sub
pop
sub
push
push
lea
push
lea
push
push
push
push
call
jecxz
out
mov
add
add
add
add
add
lds
movsb
aad
in
xchg
cmpsb
push
movsb
add
incb
mov
xchg
pop
add
std
out
add
lods
add
add
imul
jmp
aad
ret
add
add
insb
add
add
lea
pop
mov
push
shl
inc
lea
pop
shr
add
push
push
push
push
lea
push
push
push
lea
push
push
call
jmp
add
test
jb
fldl
add
add
add
add
mov
cmp
rolb
ret
add
cld
nop
mov
xchg
jbe
rolb
push
add
add
add
cmpsl
leave
stos
add
add
pop
mov
add
push
dec
pop
mov
push
lea
push
lea
push
lea
push
push
call
cmpsb
mov
shrl
add
test
pop
fmul
xchg
stos
xchg
add
mov
lods
cmpsb
add
fwait
add
movb
lcall
add
in
nop
add
xchg
mov
movsb
in
jns
add
mov
push
cmpsb
add
add
addr16
add
push
lea
push
lea
push
call
add
out
inc
add
pushf
add
add
add
add
jl
mov
loope
mov
enter
pop
fs
add
add
jae
add
pop
add
imul
pop
cwtl
add
lret
add
cltd
leave
add
je
ficoml
add
lret
outsl
jne
loop
add
test
je
add
mov
add
add
mov
lea
pop
xor
push
push
push
lea
push
push
call
add
cld
push
jne
pop
mov
add
scas
bound
add
mov
jb
jne
xchg
add
cmpsl
xlat
sahf
jnp
add
cli
add
mov
mov
scas
scas
add
call
arpl
mov
push
push
push
lea
push
push
push
push
push
push
push
call
shrl
xchg
jns
jecxz
mov
add
int
add
lcall
mov
mov
xchg
add
pop
mov
add
ja
jp
add
add
shrl
add
push
add
mov
lea
pop
and
push
push
call
add
sti
mov
xchg
movl
xchg
add
add
add
add
les
add
cmp
gs
jne
popa
add
mov
lea
or
rolb
push
push
push
push
call
add
pop
pop
add
pop
jp
add
call
int3
in
popf
add
cli
arpl
in
gs
add
testb
stos
in
stc
movsl
in
add
lret
int
add
add
xchg
mov
add
sti
test
add
movsb
add
mov
lea
pop
xor
push
push
lea
push
push
lea
push
push
push
lea
push
push
call
add
add
ja
test
mov
mov
add
je
call
popa
add
cmpsl
clc
pusha
jae
rcr
popl
mov
aad
lea
mov
leave
add
add
add
test
movsl
add
popa
add
cmpsb
cmc
add
filds
mov
mov
mov
js
add
pop
inc
cmpb
jne
push
rol
add
pop
add
push
push
lea
push
push
push
push
call
jbe
aam
ret
cmpsb
add
add
out
flds
add
add
add
scas
imul
add
mov
jb
out
lock
scas
add
add
xchg
fiadds
mov
out
add
add
add
push
test
repnz
add
add
add
add
add
scas
add
xchg
fildll
lea
pop
cmp
je
push
add
pop
add
push
lea
push
lea
push
push
push
push
push
call
in
aam
popl
mov
push
mov
add
nop
add
clc
add
add
jno
loope
add
mov
adcb
into
mov
out
add
pop
cmpl
jne
xor
push
push
push
push
lea
push
push
push
push
call
add
in
lcall
mov
movl
faddl
add
add
pop
add
mov
jo
fadds
flds
add
jae
nop
add
add
add
std
into
add
add
mov
jle
js
xchg
add
out
addr16
add
out
xchg
fisttpll
pop
pop
push
inc
add
sub
pop
pop
push
push
call
pushf
pop
fstl
add
movsl
add
popa
nop
rclb
add
add
mov
sahf
mov
incb
mov
popl
add
xchg
add
add
sarb
xchg
pop
imul
cmpsb
push
lahf
test
mov
add
add
rolb
jae
stos
lods
or
imulb
pop
scas
nop
enter
add
out
lods
push
add
mov
lea
pop
pop
push
push
call
out
pop
jecxz
test
mov
lods
lock
mov
pop
call
add
stc
jmp
push
add
ljmp
sbbl
mov
ja
add
jp
mov
scas
ljmp
pusha
or
push
push
call
test
add
jecxz
xlat
pop
popl
jo
fiadds
add
add
add
clc
pop
les
je
lea
stc
sti
add
ret
add
mov
mov
lea
pop
pop
leave
push
shr
pop
ret
mov
push
push
call
add
mov
js
fwait
add
push
mov
ljmp
add
add
ficoml
nop
add
pushf
xchg
add
add
cmpsl
shl
add
fstl
mulb
push
add
test
popf
push
add
scas
add
jp
add
add
fucomip
add
out
mov
mov
lea
pop
add
push
push
lea
inc
pop
push
push
add
shr
shl
sub
pop
add
mov
push
lea
push
call
jno
jp
lret
pushf
movsl
add
push
add
ljmp
lock
add
add
mov
jns
add
xlat
push
jno
add
mov
movsl
pop
scas
pop
add
add
insb
arpl
cld
test
add
mov
roll
jmp
mov
aam
bound
pop
cmpw
push
push
push
push
push
push
call
add
add
lock
add
add
arpl
cmpsb
pop
add
lret
xchg
xchg
add
lret
add
add
add
int
xchg
lret
add
orl
scas
arpl
pop
mov
lea
pop
pop
push
lea
push
push
push
push
lea
push
push
push
lea
push
push
call
mov
imul
lahf
push
add
mov
add
mov
nop
add
add
add
add
pushf
pop
add
add
aam
mulb
cld
add
add
imul
test
add
ja
add
add
add
lods
flds
add
and
addl
pop
add
in
add
pop
pop
push
add
pop
mov
push
push
push
call
add
mov
test
add
popf
rcrb
add
rolb
pushf
mov
lret
jno
mov
add
cwtl
add
jae
popa
mov
bound
push
add
mov
loopne
test
add
add
add
ljmp
testl
or
push
push
add
not
pop
call
push
shr
rol
pop
xor
pop
push
xor
lea
pop
pop
push
add
xor
shr
shr
pop
pop
push
push
push
push
call
nop
jle
movsb
pop
mov
in
add
leave
fs
stc
add
add
add
push
add
clc
rolb
add
add
aad
jb
in
add
push
pop
repnz
roll
sbbl
add
add
push
jmp
int3
or
enter
xchg
jecxz
add
add
mov
adc
push
push
lea
push
push
push
call
add
xchg
add
pop
out
ljmp
les
scas
mov
movb
out
lcall
add
mov
lahf
fwait
add
adcl
mov
add
add
pusha
add
arpl
rclb
xlat
add
mov
add
shll
ror
add
lea
pop
pop
leave
push
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
add
iret
pop
add
rcrl
in
bound
popf
add
cmpsb
lock
push
add
fs
add
add
mull
add
add
mov
cmpsl
pop
rolb
add
lcall
add
add
push
roll
fildl
fistps
add
fiadds
xchg
mov
filds
mov
fmull
or
push
push
push
lea
push
push
lea
push
push
call
out
lock
int3
jb
fbld
pusha
xchg
mov
pop
mov
mov
add
scas
add
fnsave
add
icebp
add
rclb
push
fstl
add
add
sahf
mov
xchg
les
add
add
testb
pop
ret
add
enter
addb
add
add
push
add
mov
add
int3
lea
pop
push
push
push
push
call
xchg
add
lods
add
pop
movl
scas
jmp
std
add
stos
jecxz
insb
jns
add
popl
add
add
rcrl
lods
add
add
decb
pop
mov
push
push
push
push
push
push
push
lea
push
push
push
call
leave
add
add
add
add
add
into
add
fists
push
add
add
mov
add
popa
int3
add
add
push
in
std
add
add
filds
lea
add
mov
mov
lea
pop
add
push
push
lea
push
call
add
add
jge
pop
jmp
add
mov
cld
add
add
pop
mov
add
out
ret
add
pop
cli
push
in
add
mov
lea
pop
push
push
push
shr
pop
push
mov
push
push
push
push
push
call
mov
xlat
xchg
add
add
lea
cmpsb
add
movsl
add
jecxz
shlb
cli
add
arpl
add
movsl
popa
divl
test
push
add
cli
rcl
pushf
add
mov
add
add
imul
add
push
add
jns
sti
mov
arpl
addr16
push
pop
push
lea
pop
lea
push
push
lea
push
lea
push
lea
push
lea
push
lea
push
push
call
cltd
into
jge
les
add
sahf
add
add
add
ret
add
imulb
add
les
loopne
stc
stos
shl
mov
mov
int3
add
xchg
cmpsl
scas
and
add
xchg
add
add
add
xchg
mov
enter
add
aad
mov
and
ljmp
mov
mov
push
push
push
push
push
lea
push
push
push
lea
push
call
add
in
add
in
into
stc
ja
lret
ret
in
lods
add
popa
add
add
add
add
sarb
mov
pop
mov
sti
xchg
add
mov
lea
pop
shr
add
push
push
call
pop
lock
add
addl
jecxz
flds
in
popf
test
in
loopne
pop
rolb
testl
jo
mov
scas
push
cltd
in
loopne
movsl
aam
sahf
fdivl
add
add
pop
out
cmpsl
clc
mov
add
lret
cwtl
add
pop
mov
push
shl
dec
ror
rol
pop
add
push
sub
ror
add
pop
pushl
push
inc
pop
popl
push
add
pop
mov
add
push
inc
rol
shr
pop
xor
push
sub
pop
lea
push
add
inc
sub
pop
mov
add
push
push
lea
push
call
addb
loop
add
add
add
repnz
add
leave
add
add
cmpsl
add
mov
out
add
add
fs
add
cld
lea
pop
xor
rol
push
push
lea
push
call
in
pop
mov
testb
add
jb
add
mov
pop
add
ja
jnp
pop
add
fucomp
add
mov
add
test
mov
add
jo
pop
add
add
push
fadds
stc
push
add
xchg
test
lods
lahf
rolb
arpl
add
add
cltd
push
cli
in
hlt
lea
pop
nop
nop
push
push
push
lea
push
lea
push
push
lea
push
lea
push
push
push
call
imul
add
cmpsb
scas
push
in
subb
mov
add
lock
pushaw
pusha
mov
add
push
add
mov
add
sti
fwait
add
out
aad
les
add
push
add
in
jno
call
clc
add
mov
int3
add
mov
mov
incb
add
add
add
add
add
bound
shll
mov
jle
bound
jno
movsb
add
pop
xor
nop
push
push
push
push
push
lea
push
lea
push
push
call
push
movsb
cmc
add
push
into
add
iret
movsb
pop
add
filds
sarb
jmp
add
add
add
popl
add
popf
pop
enter
pop
leave
xchg
outsl
out
add
hlt
pop
cmpsl
fmul
mov
add
outsl
add
mov
mov
add
add
jecxz
push
push
add
xchg
add
incb
add
cld
lea
pop
nop
push
push
push
push
push
call
add
ljmp
scas
cli
je
std
in
hlt
add
ja
je
mov
add
add
cmc
jae
add
cli
mov
add
mov
cmc
add
add
lret
fs
lea
pop
inc
push
lea
push
push
push
push
push
push
push
lea
push
push
call
arpl
push
jb
mov
mov
ficoms
mov
jbe
inc
hlt
add
add
adcl
add
add
add
imul
add
add
int3
aad
jae
ret
push
add
testl
nop
nop
push
push
push
push
push
push
push
push
lea
push
lea
push
call
add
add
ret
push
test
add
movsb
add
add
add
cld
add
imul
xchg
mov
xlat
out
add
add
pop
add
enter
les
mov
stc
add
pop
cmpb
jne
push
push
lea
push
push
call
mov
lds
popf
flds
nop
test
add
push
popl
test
xchg
mov
add
add
fstl
push
mov
mov
sarb
mov
lea
pop
add
push
push
lea
push
lea
push
lea
push
call
add
add
jecxz
add
mov
add
add
movb
pop
push
imulb
movsb
mov
add
jne
icebp
add
enter
add
jno
add
stc
add
sahf
jbe
aad
movsb
add
xchg
add
add
test
enterw
xchg
xchg
add
fmull
push
lea
push
push
push
call
add
add
lcall
xchg
in
pushf
add
add
add
jne
add
add
mov
clc
push
aam
jecxz
add
add
std
sahf
add
stc
add
jo
jne
pushf
add
xchg
bound
fwait
add
repnz
push
add
add
add
lea
pop
nop
cmp
je
push
push
push
push
push
push
push
lea
push
call
add
jmp
xchg
add
mov
call
mov
xchg
xchg
out
mov
test
add
mov
jno
add
push
add
add
jnp
add
fwait
pop
add
in
jae
add
testb
add
xchg
stos
xchg
add
xchg
add
add
roll
add
xchg
loopne
test
lea
pop
nop
push
shr
sub
pop
nop
push
not
pop
inc
push
dec
pop
nop
nop
push
lea
push
call
data16
in
push
cld
in
add
pushf
test
mov
pop
add
jae
stc
xchg
push
mov
add
roll
add
add
add
add
js
add
cmc
aad
fdivrl
jns
cwtl
popf
js
mov
aam
bound
pop
cmp
jb
push
shr
pop
xor
push
inc
pop
jmp
mov
push
xor
pop
add
movzwl
push
ror
shr
add
xor
pop
mov
push
rol
inc
rol
pop
add
push
lea
push
push
lea
push
push
push
push
call
cmc
add
mov
add
mov
add
repnz
aam
add
add
add
add
add
stc
jmp
test
loop
xchg
pop
add
fadds
into
mov
movsl
add
add
push
mulb
subb
add
add
fiaddl
test
add
add
add
pop
mov
xor
push
push
call
add
add
add
add
nop
add
add
add
add
add
add
add
mov
cmpsl
add
add
push
nop
mov
out
mov
mov
lea
pop
xor
push
dec
pop
shl
push
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
add
xchg
loop
imul
popa
add
iret
push
out
outsl
add
push
push
add
add
add
ja
add
pop
pop
ror
shll
add
cld
loopne
mov
mov
xchg
add
in
add
lret
add
jo
add
sbb
add
cmc
add
add
fmull
dec
nop
add
loope
push
lea
push
lea
push
push
push
push
lea
push
push
call
test
add
rcr
push
lcall
testb
fwait
add
lcall
imul
mov
add
roll
scas
scas
out
add
add
aam
mov
fildl
add
int3
mov
jne
mov
xchg
sti
push
mov
lea
pop
xor
shl
push
sub
pop
xor
mov
push
lea
push
call
jne
add
jno
add
ror
push
stos
cmpsb
mov
popf
flds
pushf
ja
push
ja
mov
xchg
add
add
add
rolb
cltd
mov
popf
add
add
add
add
mov
add
add
add
lock
add
add
pop
add
push
xor
pop
pop
push
push
push
push
push
call
je
lds
lods
pop
lods
xchg
add
cmpsb
add
fcompl
add
xchg
aad
add
mov
out
mov
into
add
out
add
mov
add
rcl
ret
add
lods
scas
add
cltd
add
add
testb
fiaddl
xor
mov
in
in
add
fmull
pop
push
lea
push
push
lea
push
call
add
add
add
push
pop
ja
cld
mov
add
add
icebp
jo
jno
xchg
add
xchg
test
fildl
xchg
add
jbe
add
add
addb
add
add
cld
lea
pop
pop
push
lea
pop
leave
ret
push
dec
sub
shl
pop
push
mov
push
shr
not
ror
pop
push
push
push
push
push
lea
push
push
push
call
movsb
add
add
add
cld
add
scas
mov
add
stos
popf
out
mov
incb
add
loop
insb
loope
je
insb
sahf
add
mov
lret
popl
add
mov
lea
pop
push
push
push
rol
pop
mov
push
push
push
push
push
push
call
add
popa
enter
add
aam
jge
add
call
add
in
pop
add
pop
and
in
add
lret
add
add
xlat
repnz
add
add
add
test
add
add
cmc
mov
jnp
std
ror
add
add
lret
hlt
lea
pop
mov
push
sub
shl
pop
mov
test
je
push
inc
pop
mov
push
push
lea
push
push
call
movl
in
mov
movsb
add
mov
int3
lcall
js
pop
add
mov
add
out
add
mov
lea
pop
test
je
push
add
lea
dec
pop
mov
push
lea
push
lea
push
call
push
add
cmc
mov
movsb
stc
shll
cltd
pop
add
aam
movsb
jmp
out
stos
sbb
xchg
push
add
pop
add
add
add
add
pop
ret
add
add
xchg
push
add
add
fiadds
mov
xchg
imul
jecxz
add
lea
pop
mov
mov
push
sub
shr
xor
pop
inc
push
lea
push
push
lea
push
lea
push
push
lea
push
push
push
push
call
add
add
pop
mov
add
add
add
jle
add
add
add
mov
mov
popa
nop
cld
push
mov
add
pop
fsubrs
jl
addb
add
add
bound
add
add
add
ret
add
add
push
test
push
or
mov
push
pop
inc
add
les
rorb
test
add
add
add
push
push
push
push
push
push
call
add
add
add
xchg
clc
add
loope
xchg
push
add
add
add
xchg
jl
add
xchg
cmpsb
lock
cmpb
mov
enter
rolb
int
rolb
popf
mov
add
mov
pop
call
cli
pop
push
mov
loopne
enter
cmpsb
aad
loop
flds
pushf
add
push
mov
js
add
mov
cld
lea
pop
mov
push
shr
pop
inc
cmp
je
push
lea
push
lea
push
push
push
call
add
pop
insb
lcall
add
xlat
outsl
jp
mov
jb
addb
leave
add
add
add
add
add
jnp
mov
add
jle
add
push
test
testl
addl
add
lcall
fwait
shrb
mov
lea
pop
test
jne
xor
push
push
lea
push
push
push
lea
push
call
add
xchg
add
outsl
add
push
test
push
add
mov
xchg
add
jns
add
push
cmpsb
mov
int3
add
add
add
mov
jge
icebp
add
sarb
add
mov
imul
out
add
sub
mov
mov
sbb
pop
mov
lea
pop
pop
pop
push
push
push
push
push
push
push
lea
push
push
call
cld
add
xchg
xchg
push
lahf
add
mov
mov
popl
jle
enter
add
add
lock
call
cltd
into
add
add
add
add
add
add
cli
aam
mov
add
rcrb
add
movsb
mov
fs
pusha
int3
add
stos
add
jge
movsl
loope
add
add
add
pop
mov
lea
pop
pop
pop
push
xor
rol
sub
shr
pop
leave
ret
push
push
push
call
outsl
push
add
fadds
jge
test
arpl
data16
xchg
add
mov
add
add
fucom
add
add
add
jmp
add
adcl
add
fildl
pusha
add
add
xchg
push
add
pop
add
test
add
add
push
pop
xlat
cli
jp
xchg
add
xchg
fiadds
cli
add
add
mov
lea
pop
mov
push
add
pop
inc
push
lea
push
push
push
push
lea
push
call
add
cli
add
mov
add
in
loope
ja
jge
insb
iretw
add
add
imul
rol
jp
fsubl
enter
test
fiaddl
lods
add
add
lea
add
add
lods
leave
add
mov
xchg
movl
add
out
add
loope
xchg
add
add
idivl
fs
mov
lea
pop
cmp
jne
push
push
push
push
push
push
push
push
call
mov
add
ljmp
pushf
test
je
cmpsb
jmp
jnp
je
add
loope
xchg
mov
cld
arpl
jno
test
mov
add
fsub
fcmovu
mov
add
out
nop
pop
addl
mov
add
testb
lea
push
xor
pop
mov
push
push
push
push
push
push
push
push
push
call
xchg
add
out
pop
add
add
sti
add
add
cltd
xchg
add
popa
aad
add
add
js
add
cltd
mov
test
cwtl
add
add
stc
cli
lds
add
jecxz
movsl
addl
add
ljmp
add
add
add
add
add
gs
mov
add
lea
pop
test
je
mov
push
sub
shl
pop
add
push
push
lea
push
push
push
push
push
push
push
call
std
jns
fadds
add
add
mov
insb
shl
add
add
stc
xlat
add
add
add
pop
mov
add
lock
cld
fstl
add
stos
fiaddl
add
pop
out
add
add
in
push
fs
lahf
incb
mov
add
add
jecxz
add
push
push
add
fistpl
test
mov
lea
pop
cmp
jne
mov
push
ror
pop
test
je
mov
push
add
dec
pop
add
push
push
push
push
lea
push
push
lea
push
push
call
add
pop
add
out
cmpsl
add
add
jnp
int3
out
movb
clc
xchg
push
add
jo
add
out
push
gs
stos
mov
jo
les
js
loop
mov
add
add
mov
in
vpaddsb
test
add
jno
mov
add
outsl
stos
imul
and
loopne
test
call
sahf
call
add
add
add
mov
clc
mov
out
add
roll
jmp
mov
lods
scas
add
fnsave
popf
push
ror
add
pop
rolb
mov
add
add
int
lds
mov
xchg
add
in
mov
add
add
stos
loop
add
mov
roll
xlat
insb
mov
mov
lea
pop
jmp
xor
push
push
call
add
mov
cltd
jl
mov
mov
add
sahf
add
jl
pop
imul
add
add
test
add
add
add
leave
add
stc
insb
rcl
xchg
ret
stc
mov
nop
add
cmc
fdiv
cmpsl
jb
add
mov
add
filds
push
hlt
lea
pop
pop
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
jp
add
lods
mov
test
in
xchg
add
fistl
push
jo
add
add
push
je
stc
movsl
add
cmc
repnz
fs
rolb
cli
add
mov
idivl
imulb
cmpsl
iret
add
jns
add
movb
push
xchg
out
pop
insb
pop
jno
pusha
add
and
push
lea
pop
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
scas
add
mov
out
sarl
les
add
add
stos
add
lods
xchg
mov
add
add
pop
add
add
mov
lea
pop
pop
push
push
push
call
insb
mov
add
cld
iret
add
fistpll
fwait
mov
int3
push
rcr
jb
add
pop
out
loop
out
add
add
mov
popf
add
pop
leave
push
push
push
push
push
push
lea
push
push
push
call
add
add
add
movsb
push
add
add
xchg
imul
pop
add
add
add
add
add
scas
add
add
add
cmpsb
add
lret
pop
mov
or
scas
add
push
add
add
mov
int
xchg
push
jnp
mov
loop
test
jle
outsl
mov
add
fwait
add
ret
add
pop
ret
push
lea
push
call
lret
ret
jge
add
imul
jns
add
js
add
loope
fcmovnbe
faddl
jle
jbe
jns
add
popl
frstor
aam
push
bound
int3
add
pop
lea
push
push
lea
push
push
push
push
push
call
xlat
pop
add
add
pop
mov
jle
add
stos
hlt
fsubrl
add
lcall
xchg
cmpsl
add
mov
xchg
add
lods
add
lea
pop
pop
pop
push
pop
pop
push
add
sub
pop
pop
leave
push
push
push
push
lea
push
push
lea
push
push
push
call
sti
out
push
imul
add
mov
clc
add
mov
pop
xchg
pop
les
jecxz
add
faddl
jl
fiaddl
cld
scas
add
jns
push
add
lods
add
shll
addb
popf
xchg
add
add
add
add
add
jl
fiaddl
add
pop
ret
mov
push
sub
pop
pop
push
push
push
push
push
lea
push
push
call
fbstp
shll
xchg
ljmp
popa
popa
mov
add
out
pop
rolb
add
cld
cltd
cmpsl
flds
add
add
add
add
add
rcl
in
mov
lea
pop
pop
push
push
lea
push
call
rolb
aam
add
add
lock
aad
add
add
bound
add
add
ret
mov
insb
add
testb
mov
add
add
faddl
add
add
add
push
lods
add
loope
int
dec
into
add
ja
push
mov
lea
pop
pop
pop
push
inc
add
inc
inc
pop
leave
push
push
push
push
lea
push
push
call
ja
mov
jl
add
shrb
add
add
jp
cmp
add
xchg
mov
test
add
add
cld
add
xchg
aam
add
mov
lods
xchg
add
push
lahf
add
loope
test
fsubrp
push
add
imul
into
stos
addb
fcmove
add
add
add
add
ret
int3
lea
pop
ret
test
push
test
jae
test
jb
aam
jae
lea
jae
test
jae
movsb
mov
add
loope
aad
mov
daa
ds
lock
js
lds
fdivr
lods
pop
mov
orl
dec
je
ljmp
enter
imul
repz
mov
mov
pop
out
mov
adcl
mov
movsl
popf
not
loope
cmp
mov
cmp
das
xchg
int3
jp
imul
fs
cmp
inc
xor
cmp
push
dec
ljmp
and
cld
mov
data16
imul
adc
insb
lods
aad
adc
outsl
pop
xor
cltd
popa
cwtl
std
inc
in
jge
pop
clc
inc
fs
or
lods
lods
jbe
and
push
add
mov
sub
inc
mov
js
outsl
aam
dec
repz
cli
adc
fnsave
or
sbb
xchg
mov
repz
mov
dec
or
cmp
scas
les
xor
insl
jb
std
ret
std
sub
lods
in
push
cmpsl
test
mov
mov
xor
stc
jmp
inc
lds
pop
push
mov
popa
dec
mov
fisttps
jo
xchg
and
insl
and
mov
jg
jno
inc
mov
or
add
lret
or
or
add
and
int3
jno
xchg
or
jmp
mov
test
js
add
sub
sbb
mov
cmpsb
mov
adc
or
mov
jbe
cmc
sub
push
js
jb
xor
mov
scas
lret
out
adc
xor
push
cmp
dec
insb
mov
dec
clc
rdtsc
aaa
mov
fs
xor
xor
pop
or
pop
mov
bound
pop
cmp
hlt
sahf
sbb
mov
popf
dec
fcoml
pop
ret
sbb
fisubs
adc
fs
adc
iret
out
aas
mull
jb
addr16
push
loop
jp
xchg
adc
mov
pop
arpl
push
mov
or
inc
sbb
jae
cmp
punpcklwd
mov
js,pt
xchg
lds
sahf
out
rcl
xchg
pushf
lea
sbb
in
sti
out
ret
repnz
inc
ds
xor
pop
test
xchg
shl
outsb
pop
push
mov
in
and
mov
push
outsb
out
adc
and
sti
popa
jge
loope
imull
std
jmp
pop
xchg
inc
xchg
lods
jae
push
cmp
std
stos
iret
sub
inc
test
outsl
rcrb
aam
std
xor
adc
add
pop
mov
ljmp
aam
repnz
xor
mov
iret
shrb
sub
and
jmp
fucomp
inc
popf
cmp
mov
adc
sub
inc
lods
cmp
inc
mov
std
repnz
fdivrs
clc
mov
fdivr
xchg
add
divb
cmp
clc
add
or
subl
jno
das
mov
insl
jl
repnz
test
or
loope
shlb
lods
shll
sbb
push
xor
mov
dec
sbb
pop
adc
fnstsw
mov
addr16
cmp
stos
add
inc
aad
mov
add
gs
adc
xchg
ja
jg
sub
sti
adc
inc
mov
adc
cmp
icebp
aaa
cmc
es
out
xor
dec
pop
xchg
ret
stos
xor
jo
stos
popa
inc
std
rclb
lods
ret
add
cmp
mov
arpl
nop
push
add
lods
and
fmul
icebp
pop
stos
cmc
aam
xor
dec
push
cwtl
adc
mov
test
cmp
adc
cld
rolb
loopne
fdivrs
lret
jnp
xchg
inc
cmp
arpl
aas
in
fmuls
call
mov
movsl
clc
hlt
neg
cwtl
lret
cwtl
push
mov
mov
cmp
addb
mov
xchg
mov
fwait
cwtl
jg
cli
jb
cmpsl
out
sub
pop
test
and
dec
jmp
jne
out
fldl
stos
sahf
rorb
cmpsl
scas
mov
repnz
mov
imul
or
fwait
add
pop
xchg
pop
lahf
js
jns
int
pop
pop
fs
push
fbstp
ret
and
inc
inc
xchg
movsb
repz
xchg
pop
out
mov
cmp
add
jg
das
jle
mov
loopne
in
jmp
hlt
outsb
aaa
movsl
xor
push
add
aad
pushf
filds
aam
xchg
xchg
add
adc
xchg
inc
cs
pop
sub
cli
lods
icebp
dec
imul
sbb
xchg
dec
inc
mov
das
data16
iret
xor
mov
lock
inc
xor
andb
pushf
les
popa
mov
push
addr16
test
dec
sub
xchg
insl
int3
push
inc
aas
push
xchg
cmp
cmp
mov
add
aaa
movsb
sarl
imul
push
rcrl
std
mov
add
bound
xchg
in
int3
pop
fs
pop
push
bnd
fistpl
push
sub
rcll
adc
scas
pop
sbb
dec
mov
sar
lods
das
leave
pop
nop
hlt
sbb
aas
rcll
dec
cmp
push
sbb
pop
push
xchg
pop
jnp
leave
or
xor
divl
lds
shlb
and
divb
pop
inc
xchg
cli
sbb
jecxz
or
inc
xchg
push
inc
add
cld
cmpl
cs
pop
pop
and
in
inc
inc
adc
clc
and
sbb
gs
in
mov
int
sub
scas
stos
rorl
and
push
and
push
mov
stos
out
xchg
test
shlb
stos
aad
mov
lcall
fdivl
sarl
gs
xchg
repnz
lret
loopne
dec
sbb
and
dec
or
ret
or
xchg
pop
inc
subb
add
sbb
inc
mov
stos
pop
and
xor
adc
pop
jp
pusha
pop
test
add
das
das
mov
daa
loop
fldenv
shrl
add
fisttps
out
mov
idivl
cmp
inc
or
lock
xchg
dec
add
xlat
arpl
and
sub
aam
and
sbb
enter
cld
push
adc
xchg
ret
movsb
std
fnsave
and
imul
cs
int3
jo
pop
dec
mov
orb
fcompl
mov
jge
push
and
push
lret
cmp
adc
pop
lahf
ljmp
fildll
int3
aaa
push
out
mov
or
push
arpl
jo
pop
push
mov
stos
ficompl
lods
jmp
shlb
ja
jge
add
jmp
mov
xor
ret
mov
mov
addr16
js
sub
and
adcb
sub
adc
cmp
adcl
mov
push
and
jnp
mov
mov
dec
lret
mov
mov
ljmp
outsl
pop
adc
and
lret
lea
mov
daa
int3
rcr
mov
hlt
inc
adcl
out
popa
scas
inc
repnz
pop
cmp
jg
mov
fwait
es
cli
imul
rcrl
sbb
jnp
out
xor
gs
addr16
inc
into
rol
cmp
xchg
out
sub
sahf
repnz
jo
ffreep
dec
icebp
dec
test
ljmp
mov
dec
sbb
es
mov
test
aas
scas
dec
fists
mov
fcomi
push
sbb
mov
xchg
call
add
or
cmpb
mov
pop
mov
lds
mov
xor
fildl
mov
aaa
cmp
popf
mov
ds
neg
adc
mov
pop
mov
dec
xor
push
jecxz
jecxz
pusha
mov
sahf
movsl
dec
dec
push
xchg
dec
sbb
adc
push
rcll
stos
jecxz
sbb
xchg
outsl
inc
imul
fstpl
adc
hlt
xchg
push
jp
sub
sbb
inc
lret
lods
inc
sbb
lret
frndint
push
xor
shrb
outsb
or
sahf
fistps
cs
cli
add
pushf
insl
mov
jo
pop
sub
clc
test
sbb
out
push
dec
dec
lods
sahf
pop
mov
and
call
shrl
sbb
jecxz
xlat
jb
jmp
testl
or
je
xor
push
arpl
mov
jl
push
fsts
dec
sub
pop
enter
push
mov
sub
add
xchg
not
shlb
push
imul
in
es
test
call
dec
cli
lret
inc
dec
and
fs
mov
dec
or
cmc
in
jno
pop
lahf
xor
mov
movsl
dec
xchg
adc
xlat
add
mov
popf
push
loope
push
popf
and
and
xor
inc
cmp
cli
scas
inc
outsb
sbb
mov
add
mov
and
mov
add
xchg
mov
cld
dec
scas
jl
sub
push
test
inc
scas
sub
push
inc
scas
out
leave
fildll
xchg
jp
jb
aaa
ja
sbb
mov
mov
cltd
add
adc
sub
or
mov
loop
aam
bound
cmp
pop
cwtl
repnz
hlt
pop
sub
fs
test
scas
dec
mov
xor
xchg
ja
int
popf
sub
push
push
mov
push
xor
adc
mov
jbe
mov
es
push
jl
sar
inc
or
mov
dec
test
jnp
jge
call
mov
movsl
je
xchg
cltd
scas
inc
jecxz
jl,pn
outsb
out
xchg
into
cmp
iret
fs
ret
add
in
ret
dec
mov
xchg
stos
fisttps
add
xlat
mov
cmp
or
pop
adc
hlt
in
sub
arpl
stc
or
jmp
mov
mov
or
scas
sub
popl
imul
iret
jbe
pop
inc
ds
mov
xor
pop
or
add
test
fwait
pop
jbe
mov
pop
sub
and
jmp
and
popa
fistpll
rcl
enter
mov
movsb
int3
jecxz
xor
out
sub
scas
cmp
lods
cltd
cwtl
cmpsb
sub
xor
push
fimull
popa
inc
and
jg
dec
xchg
sub
push
nop
mov
and
xchg
mov
xor
add
cli
cmpsb
pop
mov
pop
xor
and
sub
popf
cmpsb
sub
vcmpsd
pop
cwtl
jae
inc
mov
clc
mov
subb
insb
fstpl
sub
stc
fcmovb
xchg
hlt
xchg
or
lods
lea
inc
call
mov
andb
jmp
mov
es
adc
or
dec
testb
ss
jbe
pop
cmc
fcomi
fwait
jl
out
movsb
xorl
je
mov
and
adc
hlt
push
stc
pop
cli
push
dec
inc
out
aas
add
cwtl
pop
pop
dec
mov
push
fistpl
sub
out
mov
ja
ss
dec
es
inc
lods
push
int3
test
clc
xchg
jnp
add
sub
cmp
dec
cmp
in
cmpsl
ljmp
test
push
sbb
outsb
xor
add
cmp
fsub
insb
pop
dec
fwait
jb
outsb
pop
or
mov
pop
mov
xchg
or
pop
mov
jb
inc
jns
mov
das
adc
icebp
stos
jmp
or
mov
mov
imul
cwtl
fwait
sbb
pop
and
mov
shlb
add
js
movsl
ret
xorb
xchg
dec
and
sub
int3
xor
or
jl
stos
pop
inc
sbb
mov
int3
add
push
sub
adc
jbe
fs
xchg
js
xor
mov
jbe
in
fwait
js
jnp
sbb
mov
int3
adc
aam
add
add
inc
mov
repz
mov
push
jne
jne
sub
mulb
in
in
mov
ja
in
dec
jmp
outsl
mov
mov
push
sbb
xor
mov
mov
push
mov
and
pop
xchg
loopne
xchg
push
pop
inc
pusha
cmp
pop
mov
mov
outsb
scas
and
jmp
mov
push
xor
ficoml
mov
imul
dec
out
jmp
pop
outsb
cmp
mov
iret
push
fs
adc
or
adc
jne
test
popa
test
jbe
lods
nop
aaa
push
inc
mov
inc
ds
lds
mov
repnz
jle
fdivs
sbb
ret
mov
mov
pop
in
out
mov
hlt
test
out
jl
mov
cmc
mov
sub
pop
mov
mov
ffreep
int
ficoml
sti
sub
test
inc
xchg
insl
int3
pop
mov
negl
imul
mov
xchg
push
jl
test
xor
mov
sti
sti
jmp
add
add
push
cmp
jg
or
adc
sahf
inc
mov
in
sbb
das
sbb
es
adc
ret
pop
push
sbb
inc
jmp
adc
cmp
mov
aad
repz
dec
adc
fists
mov
scas
xor
xor
out
adc
or
pop
mov
pop
sub
lock
push
test
int
sbb
xchg
sub
cli
mov
cmc
lods
sti
adc
cwtl
and
push
inc
mov
repz
pop
pop
cmp
xlat
cmc
xchg
out
or
or
push
jp
xor
adc
rolb
rcrl
decl
sbb
aam
sub
cmp
rcl
roll
sarb
out
xchg
insl
push
aad
adc
pop
mov
pop
stc
mov
cmp
negb
lea
jno
aas
or
mov
leave
shll
add
sub
inc
jo
int3
adc
mov
inc
cwtl
fcomps
shll
repnz
repnz
mov
cmpsb
xchg
pop
lds
mov
sub
pop
jmp
xor
int3
fistpl
cmp
aam
cld
add
leave
jnp
es
fisttpll
xor
add
and
aam
add
insl
xor
stc
push
inc
fcom
mov
add
clc
mov
out
cs
cltd
daa
aas
icebp
lret
rclb
bound
iret
cli
or
inc
cmpl
div
in
scas
and
jmp
call
mov
pop
or
stos
lock
or
cmpb
fldln2
dec
sbb
mov
imul
icebp
iret
mov
xchg
inc
inc
pop
push
and
fdivs
scas
iret
jge
imul
js
loopne
mov
mov
sub
mov
dec
aam
mov
hlt
cmp
mov
push
cmpb
in
jmp
inc
das
rcrl
cmp
jmp
mov
cmp
out
lahf
lock
fcoml
nop
pop
lahf
mov
lea
and
dec
jle
ja
js
add
std
mov
adc
cmp
lods
xchg
dec
dec
mov
pusha
mov
sub
call
aam
nop
ror
mov
enter
mov
lods
and
out
gs
mov
imul
sub
popf
or
adc
push
push
pop
inc
enter
xchg
sub
push
fistpll
mov
sbb
insl
imul
int
sub
gs
int3
sti
imul
pop
inc
xlat
cmp
jge
jne
loopne
xlat
rep
push
sub
mov
xchg
mov
add
cmp
add
add
scas
or
mov
sub
filds
in
mov
jle
jecxz
jp
je
jl
test
jp
inc
pushf
and
dec
pushf
inc
xor
es
fwait
in
and
les
fidivs
mov
sub
addb
adc
xchg
push
mov
lret
rorl
lds
sbb
push
and
xor
jp
enter
mov
jmp
xchg
hlt
insl
aaa
jle
mov
call
pop
lret
sbb
mov
stc
mov
jb
mov
sahf
mov
mov
int
xchg
push
sti
mov
fiadds
sahf
mov
lea
mov
xor
adc
cmp
push
movsb
ljmp
lock
cmpxchg
xor
insb
push
jae
xor
daa
or
mov
in
daa
xor
iret
out
mov
lock
movsb
sbb
sub
or
dec
sub
adc
adcl
lret
lret
inc
data16
jb
xor
jne
inc
mov
cmp
fadds
imul
jbe
jle
dec
movsb
repz
sahf
adc
mov
test
mov
add
and
lret
lret
sbb
pop
call
xchg
xchg
mov
jo
xlat
push
popf
and
push
in
enter
cmp
or
dec
push
sub
sub
hlt
dec
inc
add
pop
js
cmpsb
out
js
aas
mov
jge
das
jp
es
inc
addb
mov
sub
mov
fdivrs
mov
inc
sub
cld
xlat
cwtl
ret
mov
adc
xor
jecxz
add
pop
sbb
add
inc
pop
lods
aaa
les
vmread
mov
ljmp
dec
fcomps
cmp
lahf
cmp
dec
xor
mov
movsl
cmp
inc
pop
and
push
inc
mov
inc
pop
aaa
iret
push
push
mov
inc
mov
ret
pop
mov
and
xor
cli
outsb
pop
lock
mov
or
ds
and
push
cltd
pop
in
cmpsl
enter
jae
xlat
repz
push
lcall
std
cltd
fbld
pushf
push
jns
mov
fs
fiaddl
lock
push
or
or
jae
push
icebp
rcrl
mov
les
mov
adc
push
sub
mov
lret
push
roll
or
lock
add
jnp
add
pop
xchg
xor
leave
dec
loop
pop
push
in
mov
stos
bound
aam
loope
mov
mov
inc
ja
nop
in
cmc
or
adc
mov
inc
and
lods
fldenv
push
push
fstpt
xor
mov
sbb
and
ljmp
fidivrl
in
int
out
inc
push
lock
fcmovnbe
sbb
cmc
xor
das
dec
adc
cmp
cmp
jecxz
pop
insl
fisubrl
and
lods
pop
outsb
jnp
dec
xor
outsl
xchg
loopne
arpl
xchg
mov
dec
jge
test
cltd
inc
stc
mov
mov
push
fiadds
sub
push
loopne
movsl
jbe
add
sbb
inc
adc
in
testl
jecxz
xchg
in
push
ret
push
sbb
clc
fisttpll
in
sarl
push
sub
leave
push
and
inc
pop
jbe
cmp
test
push
in
push
popa
insb
sbb
xor
fimuls
xor
int
xchg
repnz
andl
loop
mov
mov
push
movsb
subl
adc
xchg
jns
ds
roll
xor
jecxz
sbb
inc
add
insl
inc
cmc
sti
outsb
and
mov
sub
std
test
dec
xchg
sub
xor
sbb
sbb
fadds
add
inc
push
dec
pop
push
add
sbb
mov
mov
adc
sbb
dec
sub
pop
and
dec
push
fdivrl
mov
xor
pop
jae
and
mov
jae
notl
push
leave
sbb
adc
imul
mov
dec
sbb
lods
imul
pop
neg
dec
frstor
sub
cmp
jg
cmc
in
dec
mov
jmp
repz
movsb
pop
xchg
add
sub
into
in
push
aam
and
pop
lock
mov
outsb
push
pusha
in
rolb
adc
das
cmpsb
gs
fs
fld
sub
cmp
add
scas
inc
sub
jbe
sbb
popa
mov
xor
inc
jg
out
and
idivb
pop
sarb
leave
sarb
call
fidivrs
or
mov
pop
sarl
rorb
cmp
jmp
pop
mov
fwait
bound
test
add
shlb
das
jno
push
repnz
mov
push
js
or
push
scas
ret
shrb
lahf
hlt
sub
call
rorb
lock
cli
sub
test
push
lahf
jp
es
inc
push
xor
jmp
in
xorl
adc
scas
lcall
mov
mov
sarb
push
outsb
xor
jg
sub
mov
js
xchg
das
js
addl
pusha
call
push
out
jecxz
pop
push
ja
inc
movsl
js
inc
in
mov
je
in
out
cs
pushf
push
sbb
mov
les
ljmp
pop
call
or
mov
add
ret
sbbl
jmp
push
and
mov
fildll
mov
push
pop
out
jne
xchg
lods
loope
xchg
fldl
and
adc
jns
loop
adc
mov
sub
add
bound
push
fmuls
jnp
into
test
or
sbb
mov
xchg
out
fs
push
fistpl
sbb
rcrb
idivb
sub
lahf
cli
out
orl
cmp
mov
push
clc
xchg
lcall
xchg
xchg
cmp
or
fistpll
outsl
xchg
imul
cld
rorb
inc
jne
in
or
mov
add
pop
cmp
cmp
fbstp
ljmp
mov
lret
add
loope
inc
adc
xor
std
cmp
iret
jl
inc
je
lods
insl
mov
lods
xchg
mov
mov
push
or
xchg
addr16
mov
xor
lahf
repnz
jg
mov
sahf
rclb
cld
out
pop
rorb
cmpsb
xchg
cmp
pop
push
iret
cmc
mov
mov
cmp
imul
cmp
call
mov
nop
test
leave
inc
dec
add
pop
cmp
mov
das
packuswb
in
or
rcrb
dec
mov
mov
inc
jnp
xor
js
push
and
push
inc
outsl
lret
sub
clc
insl
scas
inc
xor
lods
jb
mov
push
fcmovne
xchg
ficoml
xchg
adc
jno
repz
cmp
mov
push
adc
ljmp
jb
jno
fwait
jnp
or
movsb
outsb
pop
sbb
adc
mov
int3
sahf
and
repz
mov
inc
test
mov
adc
stc
pusha
pop
ss
sbb
incl
push
jo
out
test
jl
or
dec
jge
pusha
mov
iret
mov
stc
push
pop
push
shlb
stc
pop
dec
roll
sub
cli
dec
int
mov
vpand
sti
fcoml
pop
mov
xor
jae
sbb
mov
dec
cmp
adc
push
jnp
cmpsl
push
jae
push
sbb
xor
data16
add
in
pop
clc
iret
pushf
loopne
dec
add
sub
in
adc
popf
leave
out
push
jne
push
rcll
xlat
movsl
push
es
sti
arpl
xchg
mov
ss
pop
hlt
sub
pusha
cmp
shl
imul
orl
in
push
mov
or
mov
xchg
sti
jb
inc
test
or
pushf
out
xor
sahf
sarl
jmp
xor
xchg
add
fbstp
jo
stos
mov
mov
pop
shrl
xor
or
mov
and
inc
cmp
cmp
aad
and
cwtl
ret
into
pop
push
adc
sarl
mov
sbb
outsb
jbe
inc
fcoml
incb
jo
add
pop
mov
cli
insb
mov
lds
add
push
ficomps
dec
mov
cmp
sub
and
lret
ljmp
int
pop
push
fcmovu
cmp
outsb
mov
sub
das
not
mov
mov
je
xor
in
mov
inc
dec
inc
movsb
push
sbb
ja
test
xor
add
dec
jae
lcall
and
push
xchg
sti
and
flds
xorb
jno
iret
add
loop
shrb
aad
inc
jmp
iret
xor
stos
out
add
out
jo
adcl
or
rorl
imul
and
ja
cmp
adc
add
add
jns
push
fists
inc
int
or
fstpl
xchg
pop
and
dec
mov
movsb
cmpsb
pop
test
popa
adc
dec
add
in
xchg
ss
icebp
and
sub
js
nop
pop
ljmp
js
xchg
add
repz
notb
sub
mov
mov
xor
out
lahf
xchg
dec
sbb
inc
adc
dec
add
out
mov
pop
negb
mov
dec
mov
xchg
adc
add
push
mov
popa
outsb
out
push
jns
das
jo
shll
jmp
mov
stos
xorl
xchg
xchg
in
andnps
jb
ds
in
pushf
aaa
js
lretw
mov
ds
push
pop
push
shrb
in
cld
lods
or
pop
mov
outsl
ret
push
push
xor
mov
sbb
fdivrl
pop
or
mov
nop
mov
xchg
sti
lret
adc
sbb
scas
push
pop
mov
rorl
jg
fimull
scas
xor
imul
inc
mov
into
cmp
and
clc
mov
push
cmp
mov
mov
or
sub
iret
xchg
push
pusha
xor
inc
sbb
stc
push
push
dec
je
rcrl
mov
and
test
jnp
stc
mov
pop
xchg
adc
lock
test
jne
push
cltd
mov
loope
dec
dec
cmpsb
xchg
cmc
stc
adc
cmp
lret
aaa
cmp
and
je
jae
mov
cmc
lret
bound
clc
jmp
jne
imul
jbe
sub
jmp
lods
daa
pcmpeqw
fdivrl
or
mov
pop
jno
xchg
xchg
aas
sahf
sbb
mov
dec
lret
mov
push
pop
fildl
fwait
mov
dec
test
addl
ror
dec
inc
jmp
mov
mov
push
xorb
cmpsl
jbe
xchg
sbb
in
inc
lods
xchg
rcl
xchg
or
fcmovne
jb
int3
xchg
dec
cli
cmp
fdiv
lods
sahf
add
cwtl
lods
xor
inc
inc
aam
daa
daa
xchg
add
pop
or
and
push
pop
jge
add
std
xor
dec
mov
pop
out
push
scas
ss
and
movsb
sbb
insl
xor
decb
ret
sbb
xchg
es
sbb
jo
fistpl
xchg
inc
fs
jne
mov
fcoml
ja
push
inc
sbb
adc
sub
adc
std
rorb
repz
es
mov
sahf
cmpl
out
ja
adc
std
pop
cmc
or
fimull
mov
lods
add
fisubs
pop
push
adc
xchg
jbe
jns
inc
push
sbb
jnp
outsb
cmp
movsb
pusha
sahf
hlt
mov
fwait
xchg
testl
jle
sbb
dec
push
out
push
adc
test
loop
shlb
adc
clc
lret
sbb
cmpl
push
loopne
arpl
jbe
fldl
pop
mov
test
mov
inc
push
pop
mov
xor
aam
rolb
adc
iret
cmp
outsl
outsb
mov
and
cwtl
leave
xchg
jnp
push
cmp
xchg
sti
ficoms
ret
aaa
push
adcb
cmp
repnz
cmc
leave
mull
rclb
test
pop
pop
xor
imul
rcrl
add
add
adc
mov
ret
jo
pop
add
sub
test
jmp
pop
mov
repz
into
inc
dec
in
les
stos
mov
out
xchg
fnstcw
ljmp
ror
mov
in
jbe
fdiv
or
les
es
insb
xlat
and
or
mov
adc
shr
mov
push
pop
stos
fcmovnu
loop
pushf
xlat
jecxz
test
adcl
outsl
cmp
stos
nop
jmp
push
scas
and
insb
xor
fs
cwtl
push
ret
js
and
das
sahf
cwtl
or
clc
xor
rol
scas
mov
ljmp
sub
add
mov
shlb
addb
cmpl
sbb
push
jae
and
dec
or
into
enter
insb
pop
pop
ss
pop
mov
jg
add
sahf
mov
test
test
lea
into
xchg
popf
cmpsb
dec
or
cmpsb
in
and
mov
pop
add
imul
fcoml
pop
adc
push
jo
test
cltd
lds
or
decb
loopne
dec
mov
or
pop
jbe
push
mov
jmp
push
push
xchg
and
pop
and
adc
test
pop
adc
xchg
pop
je
xor
sbb
out
xor
inc
and
pop
pop
fwait
mov
xchg
dec
fdivr
pop
cmp
mov
lcall
icebp
data16
pop
insb
add
mov
mov
or
jp
lcall
pop
xchg
adc
popa
sub
aad
xchg
jg
jecxz
push
das
daa
ss
dec
out
xchg
push
out
iret
outsl
pop
sahf
aam
cmp
dec
dec
and
sbb
cmpsb
fcompp
push
push
cmpsl
xchg
stc
std
pop
loope
xor
or
push
dec
mov
mov
jns
pop
dec
mov
ljmp
inc
testb
cwtl
ficoml
or
cmp
test
jno
jg
cli
inc
cmpsl
jb
mov
mov
pop
cmpsb
push
mov
sub
cmp
cmp
ljmp
pushf
lret
out
cmp
fucom
push
push
adc
scas
jb
cli
ja
push
std
inc
ljmp
dec
inc
out
dec
jp
hlt
mov
jb
cmp
mov
lods
inc
stos
dec
test
or
sbb
enter
add
iret
adc
adc
mov
imul
std
dec
ja
jns
push
sbb
xor
test
jne
fisubl
pop
scas
mov
mov
loop
pop
fld
or
sub
inc
in
in
ds
fisttps
sbb
aam
cltd
dec
add
in
jl
and
test
jg
pop
mov
jne
xor
std
outsl
mov
xchg
dec
cwtl
push
fstpt
fildl
sub
pop
sub
or
shll
ja,pt
adc
mov
mov
aaa
mov
cli
xchg
inc
jns
adc
daa
push
arpl
jns
cltd
jecxz
pop
inc
icebp
fld
mov
add
or
enter
jb
fs
mov
sbb
cld
mov
test
ljmp
mov
repz
sti
je
cs
cmp
push
jnp
add
dec
popa
xor
dec
adc
push
or
int
sub
jb
or
dec
mov
mov
lcall
sbb
xchg
pop
xchg
mov
sbb
loopne
imulb
and
ret
mov
fwait
push
xchg
sbb
add
lea
lret
push
fcmovnu
fbstp
cs
add
sub
add
push
jns
out
adc
and
mov
mov
sbbb
pop
pop
fxch
ja
pop
aam
mov
outsl
push
repz
xchg
negb
iret
clc
enter
scas
into
dec
je
pushf
pop
adc
pop
dec
and
xor
sbb
push
imul
jge
inc
xchg
jge
test
cwtl
lock
sub
in
dec
movsl
xchg
mov
sub
out
mov
fiaddl
cmp
scas
outsb
xorb
push
dec
scas
sub
mov
jno
cmp
fcmovbe
aad
push
cmpsb
cmp
jl
scas
fdivs
ret
js
leave
jmp
push
fwait
xor
lock
shrb
cmpl
inc
pop
push
push
jmp
insb
popf
xlat
mov
pop
iret
mov
std
out
dec
paddb
lds
movsl
push
pop
inc
and
lods
leave
xor
and
shrl
adc
iret
out
sub
and
nop
lcall
cmp
cmpsb
sbb
xchg
lods
roll
xchg
xor
xchg
cli
jl
push
and
push
fbstp
mov
sub
mov
mov
ja
jl
outsb
leave
popa
jnp
add
and
in
jmp
adc
mov
into
push
lret
popa
mov
fimuls
scas
mov
lcall
repz
sub
test
push
in
test
in
mov
orb
out
mov
ja
cmp
mov
iret
pop
pop
dec
hlt
xor
sti
mov
jmp
mov
cmpb
data16
enter
inc
ja
and
in
cmp
rcrl
pop
lcall
xchg
arpl
sbb
enter
int3
xor
fsubp
jge
adc
shr
cmpsl
adc
pop
int3
mov
xchg
out
mov
jmp
test
jp
push
add
ss
lcall
mov
xor
sub
push
jno
xor
adc
test
mov
cmc
roll
dec
in
sahf
out
pop
cmp
sbb
das
push
add
and
pop
shrl
pop
adc
pop
mov
lret
out
xchg
jno
or
xor
mov
and
sahf
xchg
lods
push
les
int
adc
test
xor
cmpsb
insl
pusha
adc
jecxz
filds
jno
loop
ljmp
jp
jp
pop
fxch
push
cwtl
xor
sbb
xor
movsb
mov
xlat
in
and
ds
stos
inc
lret
pop
leave
mull
mov
mov
xchg
push
in
jp
rcrb
adc
sub
icebp
xlat
inc
rcrb
repz
addr16
pushl
movsl
mov
mov
paddq
push
imul
ss
insb
lods
adc
xchg
add
lea
js
shr
mov
pop
lcall
insl
test
aad
dec
jb
push
dec
sarb
xor
in
roll
mov
inc
daa
out
dec
xor
push
lret
minps
clc
jno
out
adc
inc
shll
call
inc
xchg
andl
lahf
shll
call
and
jbe
dec
mov
sbb
scas
ret
arpl
rolb
cmp
or
xor
mov
jne
mov
enter
xchg
nop
fistpl
sub
or
outsb
sbb
pop
cmp
jg
lcall
cmc
pop
lea
je
repz
sti
adc
pop
adc
add
test
jge
jge
addr16
cmp
sub
in
pop
jle
jle
sbb
sbb
pop
ljmp
lock
mov
lahf
dec
cmp
popf
push
imul
call
neg
addb
mov
aad
dec
xor
cmpsb
push
mov
mov
mov
xchg
jmp
mov
hlt
test
ds
scas
clc
inc
nop
stc
in
push
mov
or
dec
fldt
iret
cmpsb
scas
sahf
or
xchg
repz
nop
fdivrs
cmpsb
pop
sti
dec
pop
leave
cwtl
mov
adc
scas
in
sbb
push
and
std
adc
roll
addb
js
call
xchg
sbb
in
push
push
das
push
jmp
sub
lret
cmp
sbb
pop
xor
pushf
push
sub
pushf
mov
loop
fildl
inc
pop
add
push
out
subl
mov
ret
popf
adc
lret
push
addr16
in
xlat
xchg
mov
jmp
inc
mov
xor
sahf
pop
mul
js
fcmovnb
stos
stos
jae
repnz
addr16
sub
shrl
mov
out
sub
imul
pusha
jle
es
dec
mov
push
sub
xchg
fadd
and
out
outsl
insl
jo
fldcw
add
mov
lds
xor
mull
addr16
xchg
add
daa
fsubr
mov
fptan
cs
xor
adc
enter
ds
and
pop
rcr
jg
jae
push
mov
push
xor
lret
inc
shlb
add
test
sub
out
xor
lods
pop
mov
xor
and
cli
sub
jnp
sti
add
cli
mov
xlat
adc
or
sbb
cmp
cmp
popa
mov
pop
pusha
pop
inc
rcll
sbb
aaa
inc
pop
pop
xchg
call
mov
stos
lods
lcall
jnp,pt
jl
adc
out
lahf
insb
or
sbbl
outsl
mov
les
xchg
lret
sbb
xchg
jg
test
dec
in
fs
cltd
mov
mov
lahf
mov
pop
idiv
sbb
dec
mov
mov
add
loopne
or
hlt
adc
mov
lds
push
rorb
dec
stos
dec
pop
jo
and
dec
ror
iret
and
dec
std
cmp
aad
jle
pop
test
sbb
mov
mov
repnz
xchg
mov
mov
pop
cmp
push
lds
stos
sub
sbb
stos
cmp
inc
dec
fs
in
aad
jnp
mov
jns,pt
or
cmc
fisubrl
mov
stos
cmp
pusha
xor
mov
xchg
push
rcrl
jmp
or
adc
int
sub
mov
scas
testl
test
test
movsb
aaa
test
cmp
mov
jp
arpl
xchg
shlb
push
mov
mov
gs
or
shlb
and
mov
sub
sbb
ja
stc
dec
cmpl
adc
add
or
in
mov
cmpsb
xchg
sbb
xchg
rorl
mov
fnstenv
adc
xchg
es
xor
or
gs
test
push
sub
loopne
test
movsl
mov
add
pusha
mull
leave
inc
sbb
jb
insl
mov
push
lds
jg
mov
and
sahf
sub
cmovae
xchg
lret
xchg
lock
xchg
inc
ret
int3
cltd
dec
cmc
arpl
mov
cmpsl
lret
jge
sub
push
out
jbe
jmp
xchg
shlb
lods
push
dec
pop
inc
subl
push
sbbb
mov
push
push
sbb
jg
ror
xchg
mov
test
ret
iret
icebp
in
in
mov
and
mov
xor
push
dec
mov
mov
mov
stos
out
pop
mov
add
sbb
add
sbb
test
inc
mov
loopne
sti
les
loope
cmpsl
out
movsb
ror
loope
ds
in
es
mov
cmp
outsl
popf
add
cmp
jp
dec
lahf
mov
int3
ret
cmp
push
scas
imul
mov
xchg
outsl
xchg
hlt
or
cmp
cmpsb
in
lods
icebp
xchg
cmp
fildll
shlb
push
scas
cmp
mov
inc
mov
in
jo
add
outsl
repnz
jae
cltd
stc
mov
loopne
xor
dec
call
xchg
pusha
or
xchg
cwtl
push
fisttps
lods
inc
cmp
mov
stc
test
mov
adc
in
jp
xor
mov
mov
test
and
push
pop
sarl
inc
outsl
sahf
mov
xor
add
add
push
push
dec
sbb
lret
cltd
repnz
imul
rclb
test
pop
unpckhps
jns
mov
test
insl
mov
mov
add
mov
orb
sar
adc
gs
sahf
rorb
xor
rcr
push
or
push
and
add
or
inc
hlt
and
or
jo
sub
test
scas
jb
sbb
nop
pop
jno
js
xchg
add
jecxz
data16
loop
inc
or
sbb
sub
nop
add
aad
stc
push
push
and
push
jecxz
insl
fnsave
enter
test
testl
loopne
jp
in
push
xor
in
popa
std
xchg
push
movsb
fs
outsb
int
mov
xchg
divb
stos
pop
rolb
dec
ss
aad
test
fstp
xor
xchg
jbe
ljmp
out
frstor
sbbb
dec
sbb
fldl
mov
pop
pop
loop
push
xchg
mov
loope
adc
outsl
adc
hlt
int3
mov
pop
sbb
outsb
adc
jl
in
fidivl
sub
test
inc
decl
std
ds
lahf
cmp
lods
ljmp
jg
add
add
adc
ds
xchg
lahf
test
pop
cmp
mov
cli
stc
hlt
repz
mov
cli
xor
inc
ficompl
dec
aad
inc
in
sar
or
arpl
and
popa
pop
dec
xor
dec
inc
pop
cltd
stos
or
pop
ljmp
sub
cmp
int
add
add
mov
shrl
xor
loope
jmp
add
mov
pop
adc
mov
xchg
or
scas
dec
dec
or
mov
mov
pop
pop
std
leave
jl
adc
cld
jecxz
movsl
push
cmc
loopne
jle
jl
stos
xorb
fsubrl
lret
stos
push
bound
mov
hlt
rclb
inc
scas
mov
sbb
pop
enter
xchg
inc
rcll
jns
neg
fnstsw
push
adc
repz
dec
es
aaa
fs
pop
jle
mov
lods
inc
orl
pop
adc
pusha
not
add
or
adc
test
iret
ja
inc
js
and
fldenv
push
cmc
pop
notb
imul
pop
daa
lock
jae
mov
ret
imul
dec
mov
inc
sbbl
jnp
pusha
sbbl
and
cltd
aas
mov
sbb
stc
jg
mov
dec
add
adc
inc
aas
push
mov
in
fistpl
cmc
in
jmp
in
dec
jne
or
leave
aaa
hlt
ret
push
stc
in
lcall
sbb
jecxz
iret
dec
cld
int
xchg
lock
iret
and
mov
mov
xchg
insl
cmpsl
fidivrl
dec
nop
mov
scas
lret
repnz
pop
pusha
aad
and
out
mov
jne
mov
dec
push
rorl
jmp
pushf
add
xor
enter
adc
sbb
push
fldcw
mov
push
jne
mov
pushf
clc
and
jecxz
mov
and
jo
fnstenv
gs
jmp
movsl
or
mov
scas
pop
jns
cmp
dec
dec
pop
inc
sbb
mov
sbb
xchg
ret
inc
add
push
cmp
fisubs
ds
jg
pop
in
hlt
cs
je
cmp
shlb
pusha
mov
mov
cs
bound
pusha
rcll
test
or
push
shll
loope
das
and
imulb
add
adc
lahf
jl
xchg
fists
dec
cmp
sahf
xor
jnp
pop
orb
lds
mov
pop
popf
ds
mov
lods
hlt
cwtl
shl
test
addl
call
test
in
out
xor
jbe
mov
cmpsl
cs
jp
scas
dec
cmp
cmp
subb
leave
xlat
in
jg
push
ja
dec
pop
jne
jmp
dec
stc
mov
movsb
mov
scas
pand
xchg
les
fnstsw
out
movsb
or
inc
push
jle
enter
sub
mov
es
push
xor
xor
adcl
and
sbb
or
clc
xchg
push
fsub
out
bound
ret
lcall
cmpsb
cmpsl
je
enter
add
cwtl
pop
inc
gs
shrl
mov
dec
add
ss
mov
or
mov
cmpsb
lahf
dec
xor
push
out
sub
xchg
xor
mov
or
out
es
sahf
pop
pop
inc
das
sarb
jne
lret
push
and
add
inc
outsl
daa
scas
push
cmc
popf
add
leave
pop
iret
mov
jecxz
xchg
insb
lret
and
mov
mov
cmp
stos
testl
push
and
aaa
lock
mov
movsl
push
mov
mov
test
dec
cmp
cltd
push
xchg
out
je
push
xor
inc
insl
std
jmp
adc
sbb
frstor
add
mov
jo
fisttpll
push
pop
sbb
test
repz
shlb
mov
pop
imul
inc
out
icebp
jae
pusha
popa
imul
lods
sarl
pop
aam
cmp
inc
xchg
xorl
stc
das
and
inc
popf
or
jne
inc
dec
icebp
push
lock
sbb
jmp
and
test
sti
pop
not
shl
cmp
in
and
xchg
xchg
cmpsb
or
push
pop
xor
mov
ljmp
mov
pop
xchg
imul
and
xchg
fs
lea
out
mov
outsl
inc
mov
icebp
divl
das
adc
in
jle
aas
sub
add
cld
jns
push
or
nop
add
and
inc
mov
and
xchg
jp
inc
dec
xchg
int3
nop
gs
pop
aam
fistps
data16
push
aas
mov
mov
rclb
sbbl
sub
je
std
jbe
mov
insb
test
xchg
dec
push
out
mov
dec
ret
insl
adc
or
mov
xor
xor
sub
add
jbe
cltd
push
gs
add
imul
push
xchg
mov
loopne
adcb
dec
jne
outsb
inc
mov
imul
lods
inc
jmp
lahf
lret
inc
cmpsb
dec
in
andl
in
dec
sar
scas
loopne
inc
lret
sub
sbb
jmp
mov
repz
cs
jns
xchg
xchg
popf
fwait
pop
adc
adc
in
inc
jmp
enter
mov
andnps
stc
sub
or
push
adc
aas
insb
sub
dec
and
dec
push
call
les
ficoml
xor
pop
pop
in
into
sbb
mov
xchg
loop
add
fcomi
sub
into
jge
divb
xor
add
cs
pop
insl
addr16
enter
mov
adc
mov
add
jge
insb
inc
fstpt
push
inc
add
aad
lock
sub
std
mov
push
gs
or
cld
aad
adc
pop
push
mov
cmpsb
cmpsl
push
sub
lea
mov
mov
pop
or
mov
lahf
or
adc
xchg
lret
inc
inc
xchg
or
or
cmp
or
jns
xchg
lret
fldl
dec
lds
dec
xchg
gs
sub
popa
cmpl
sbb
ja
sub
adc
jbe
mov
xor
movsl
dec
jno
icebp
xchg
sbb
xchg
pop
mov
call
cmpsb
cmp
inc
sub
mov
mov
lahf
ss
mov
lock
push
inc
les
rolb
jle
sbb
cld
nop
cli
outsl
jo
push
dec
pop
lock
test
imul
scas
jb
fidivl
bound
lock
imul
int
stc
sub
lock
stos
push
mov
or
jne
lea
aad
out
mov
add
in
pop
stc
inc
adc
mov
inc
adcb
jmp
push
xchg
jecxz
mov
push
sbb
pop
jg
jl
lret
ror
xorl
xor
loope
enter
pop
push
adc
adcl
jno
cli
push
pop
pop
hlt
arpl
and
je
and
sub
and
sarl
loope
mov
cli
lcall
fs
rcrl
mov
out
scas
and
jp
mov
mov
out
hlt
movsl
cmpsb
rcrl
divb
jo
cmpsl
iret
jg
repz
pop
mov
lcall
xchg
push
add
lcall
ret
xorl
sub
aam
js
mov
lock
dec
out
add
test
shll
or
sahf
sti
imul
cmpb
mov
sub
fmuls
hlt
clc
inc
pop
sub
es
add
cmp
sbb
mov
rcll
push
imul
ret
sbb
cmp
xchg
outsb
in
sub
aas
inc
inc
dec
dec
push
mov
mov
add
hlt
push
mov
repz
pop
ret
inc
gs
inc
int3
leave
loopne
pop
add
and
xor
dec
lods
fistl
pop
adc
inc
data16
notb
stc
add
pop
jecxz
cs
int3
mov
in
sbb
jns
add
test
fidivl
push
lock
repnz
lahf
test
push
movsb
popa
mov
repz
mov
jae
push
mov
out
sbb
or
and
out
mov
outsb
loop
shrl
xor
cli
sbbb
ss
xchg
stc
pmuludq
cwtl
ret
push
push
in
sbb
add
out
scas
in
scas
aaa
daa
dec
jae
push
jbe
jl
lcall
jmp
rcr
ljmp
push
xchg
repz
xchg
in
inc
mov
add
mov
iret
ja
mov
stos
lods
das
push
pop
push
or
fstpt
xchg
cmp
sub
xchg
pop
les
jne
lcall
fdivl
fiaddl
mov
push
lea
lcall
ja
mov
int
clc
mov
pop
cmp
sbb
mov
je
jl
pop
add
ljmp
test
sahf
cld
addr16
mov
jno
sti
mov
inc
movsl
sarl
push
orb
add
scas
insb
in
sbb
sbb
arpl
dec
inc
push
lret
add
stos
xchg
push
loope
ljmp
fadd
mov
push
std
adc
cwtl
sarb
bound
mov
lret
pop
leave
es
test
aam
mov
icebp
and
adc
xchg
shrl
gs
test
cmp
mov
adc
push
lock
fnstsw
cmp
inc
cmpsb
mov
cs
jb
das
mov
pop
pop
and
clc
mov
cmp
lock
pop
pop
mov
lret
mov
dec
push
cltd
clc
cmp
pusha
sbb
daa
xor
sbb
xor
push
jno
or
xchg
shr
jl
xor
sub
pop
adc
push
leave
push
ret
das
cmp
jmp
cmp
mov
xchg
push
adcb
fistpl
flds
movsl
pop
sahf
inc
sub
iret
fs
hlt
xor
out
mov
cmp
lds
sbb
sbb
lds
fadd
rorl
loopne
jle
inc
ret
enter
bound
adc
pop
mov
iret
add
push
mov
mov
fsubs
lcall
adcb
mov
leave
pop
jbe
cmpsb
inc
inc
mov
cmpsb
nop
cmp
dec
cmp
mov
xchg
aad
movups
stc
mov
sti
adc
mov
xorb
imul
pop
xchg
dec
push
test
xchg
sbb
cmpb
outsb
test
xchg
mov
sub
inc
cmp
xor
repnz
iret
cltd
jno
add
xchg
and
and
das
testb
add
lock
sub
push
mov
push
aam
rcrb
roll
out
rorb
push
lret
adc
mov
ds
push
pop
dec
cmp
lods
test
cmp
cmpsb
push
mov
sti
jecxz
lret
ret
adc
inc
inc
lret
inc
add
mov
shrl
mov
pop
dec
jl
repz
insb
and
sub
mov
adcl
decb
out
test
sti
jnp
icebp
scas
rcl
fdivs
aam
lcall
jno
repnz
xchg
or
jg
xor
sbb
xchg
push
push
jns
xchg
pop
dec
addr16
test
lods
fwait
sbb
mov
pop
jns
jo
jbe
fcompl
mov
sarb
cmpsb
sbb
fiadds
scas
mov
sarb
push
loop
icebp
mov
mov
fcmovbe
pop
je
cmpsl
sub
pop
incb
clc
cmp
xchg
ds
in
pop
ja
leave
jb
sub
es
sbb
jno
scas
loope
xor
fwait
bound
add
jbe
jle
or
xchg
das
dec
hlt
jp
movsb
aas
popf
addr16
pop
fs
ja
pop
faddl
sti
adc
out
xchg
sti
daa
mov
or
sbb
lock
sub
ror
inc
cwtl
out
or
popf
test
in
inc
in
xchg
std
xor
mov
ret
fnstenv
mov
adc
inc
sub
adc
std
add
push
sar
cwtl
cmp
jbe
into
cmp
inc
sub
add
mov
cmp
or
xlat
cmc
push
pop
xor
and
inc
jo
insl
filds
mov
xor
xorl
mov
lret
adc
std
mov
xchg
xchg
int
popf
mov
out
stos
out
cmpsb
pop
push
add
pop
xor
imul
jae
lret
mov
sarl
xor
fisubs
or
sbb
xchg
mov
xor
shll
cmp
xchg
cmp
mov
in
shrl
push
out
adc
and
int3
and
jo
gs
scas
shrl
mov
push
dec
out
mov
aam
pop
frstor
mov
pop
adcl
ret
sub
arpl
aas
lret
cwtl
mov
cli
xlat
mov
sub
addr16
sub
in
sbb
jbe
add
mov
icebp
adc
repz
jno
out
dec
iret
movsl
sbb
lcall
jl
cs
inc
and
cmc
cld
mov
sbb
pop
push
pop
fcompl
mov
jns
in
sub
icebp
mov
lds
sub
xchg
movsl
ret
movsb
lock
or
je
mov
imul
incb
mov
mov
outsb
jno
inc
push
shrl
sbb
jae
and
out
push
clc
mov
inc
aam
fst
fwait
adc
stc
adc
dec
loop
add
inc
xchg
and
stos
push
imull
xchg
sar
and
gs
push
push
cmp
push
dec
test
jns
and
repz
mov
inc
or
add
scas
xor
push
int
inc
stc
add
movsl
loop
mov
out
lahf
sbb
add
xor
fsts
push
cmc
and
and
xchg
mov
call
int
ss
fptan
jge
pusha
push
mov
ret
fisubl
cmpsl
xlat
push
ret
fstpt
das
into
imul
add
or
dec
test
lcall
jmp
mov
pop
adc
loop
xchg
push
inc
std
jge
xchg
sub
cltd
dec
ljmp
pop
push
dec
mov
pusha
add
aad
jg
in
jecxz
sahf
or
imull
movsb
push
stc
loope
into
call
in
jbe
sarl
pop
cmp
xlat
shll
lods
xchg
outsl
xchg
jb
or
ret
xchg
aam
mov
mov
fisubrs
in
fbld
test
pop
inc
sbb
scas
ja
jle
add
test
sub
pop
jne,pt
das
rep
mov
and
mov
mov
test
push
pop
ficoml
xor
mov
repnz
mov
mov
lcall
enter
push
cmpsb
xchg
icebp
xchg
loope
loopne
dec
lods
jge
xlat
jecxz
gs
lea
sub
adc
jnp
data16
iret
sub
cmc
or
add
cld
ret
mov
outsl
imul
xchg
nop
sbb
js
mov
daa
lods
sbb
lods
mov
orb
jl
jp
fnstenv
pop
push
and
test
and
lahf
and
adc
rcll
push
mov
ljmp
push
inc
sub
pop
xor
int3
mov
sbb
lret
test
fdivrl
xchg
adc
mov
rcrl
xchg
mov
xchg
mov
dec
mov
adc
sahf
or
push
movsb
lods
out
pop
push
aad
rcll
outsl
stos
push
mov
lock
out
cmp
jns
cmp
dec
dec
add
cltd
xor
insl
fcomps
push
add
fs
fildl
fld
inc
cwtl
cli
and
int3
fs
ja
sub
adc
outsl
mov
cmpl
clc
push
scas
test
pop
stc
out
xchg
repz
cmp
inc
fs
call
cmpsl
sti
rcll
fs
cmc
loop
push
push
cmc
out
fs
and
rcrl
shrl
mov
pop
enter
std
mov
cmp
cmpl
adc
xlat
and
out
movsb
enter
leave
sub
shrl
mov
sub
inc
mov
lds
stc
inc
jle
repnz
loope
mov
lret
insl
xor
lods
xchg
mov
sbb
pushf
jb
dec
aam
add
add
std
gs
rcr
jnp
int3
std
push
icebp
lock
xchg
push
loope
xor
cmp
enter
pop
pop
xor
lea
or
xchg
sbb
fs
inc
fwait
jns
or
dec
outsb
nop
cmp
ficoms
sub
mov
ret
pop
rcrb
jg
xchg
adc
xchg
push
cmp
fiadds
scas
mov
loop
decb
les
and
fistpll
out
sub
sub
inc
adc
in
inc
cmp
xor
push
jg
push
pop
sbb
dec
int3
sub
or
gs
sbb
sbb
out
xchg
ret
lahf
xor
mov
mov
stos
addr16
cmp
sahf
lds
popa
jne
cmp
andb
je
sti
push
pop
lock
in
sbb
hlt
out
mov
mov
sub
ficompl
sbb
add
mov
add
adc
jae
scas
mov
jnp
fst
aad
div
pusha
sarl
push
mov
push
cmp
mov
adc
or
pushf
dec
mov
and
add
pop
mov
sub
aam
je
mov
push
mov
jle
fs
imul
dec
inc
insl
out
sbb
inc
lea
add
mov
sbb
sub
ds
mov
lds
imul
cmp
stc
testb
scas
xchg
cmp
dec
lods
or
lds
shlb
repz
out
push
lret
fistl
mov
addr16
sub
jbe
fs
aam
mov
roll
loope
fidivs
dec
sub
enter
faddl
add
mov
push
dec
xor
adc
sbb
lret
imul
shl
aam
pop
add
cmp
push
das
addb
imul
adc
push
sub
cmp
dec
mov
add
jge
jmp
imul
subl
inc
mov
and
pop
xchg
push
xlat
subb
mov
jo
stc
sbb
inc
add
out
or
mov
daa
ds
mov
test
and
push
mov
ss
mov
pop
add
stos
adcl
fsts
sarl
jg
out
mov
sub
inc
mov
ret
sub
out
adc
gs
mov
outsb
das
cs
push
lds
adc
xchg
jne
loop
cmpsl
imul
mov
pop
or
push
lret
or
ror
test
aam
stos
scas
mov
push
mov
jbe
mov
jmpw
adc
insb
mov
insl
pop
mov
int
add
add
inc
cmpsl
xor
pop
jno
mov
lock
fstpl
rol
xor
xor
dec
mov
adc
xchg
push
push
add
js
jmp
dec
pop
dec
or
mov
jle
ret
push
mov
jecxz
les
or
push
cwtl
mov
mov
cmp
adc
push
iret
clc
insb
shlb
xchg
xor
dec
or
out
push
mov
dec
outsl
movsb
inc
dec
sbb
test
mov
cmpsl
or
cmpsb
mov
lods
push
int
orb
sub
push
xchg
mov
adc
outsl
mov
in
mov
pop
andb
leave
std
movsl
xor
sbb
jl
sarl
or
pop
les
sbb
mov
popf
scas
dec
lods
push
jo
daa
sbb
inc
fiadds
mov
sbbb
movsb
push
scas
mov
mov
push
orb
dec
repz
adc
pop
aad
cmc
pop
mov
mov
mov
mov
jle
nop
or
fwait
pushw
enter
xchg
xchg
pop
sbb
scas
fisttps
pop
xchg
mov
in
bound
mov
jne
xchg
ret
dec
testl
sbb
enter
fstps
iret
ja
movsb
xchg
or
sbb
scas
adc
loopne
sub
jg
shll
mov
sbb
xorl
xor
stc
adc
inc
insl
sbb
popf
stc
out
jbe
adc
sbb
cwtl
sbb
std
loop
decl
and
loopne
xchg
jecxz
lods
hlt
fldt
int
lahf
add
repz
fcomp
mov
sbb
scas
loop
xchg
sahf
aas
lahf
nop
movsb
mov
pop
andb
mov
inc
ret
and
stos
rolb
out
cmp
cwtl
cld
je
cmp
das
sub
cmc
out
cmp
dec
jo
mov
mov
lret
jecxz
cmp
mov
neg
sub
pop
dec
cmp
add
jnp
push
lahf
fldl
in
int
mov
push
aaa
adc
or
sbb
adc
or
push
xchg
cmpsl
test
mov
cmp
out
adc
sub
imul
stos
sarb
daa
adc
pop
adc
dec
or
push
div
mov
adc
mov
pop
sbb
jne
outsl
rcll
aas
popa
pop
test
mov
sbb
lock
xchg
xchg
insl
das
rcll
push
sbb
xor
loope
leave
ljmp
adcb
cmp
insl
cmp
adc
cltd
into
jmp
rcrl
inc
push
mov
les
enter
ja
jecxz
pusha
mov
hlt
sbb
xchg
xchg
sub
das
cmpsl
xchg
pop
or
or
loope
ljmp
push
push
dec
dec
lods
orb
mov
mov
inc
out
das
ret
or
dec
es
pop
add
jno
enter
xor
test
lods
mov
lahf
xchg
push
fdivs
xor
in
adc
insb
sbb
or
rorb
or
lods
rorb
aam
lods
pop
add
xchg
pop
stc
xor
and
add
add
xor
and
or
shll
xchg
fsubs
cs
mov
sbb
mov
out
cmc
ret
push
pop
push
mov
inc
or
repnz
inc
fidivl
xchg
shrb
ss
test
daa
hlt
pop
pop
cmp
sub
ss
or
popa
sub
mov
cmc
out
and
mov
out
push
shr
push
fucomp
lds
aas
out
sbb
out
dec
adcb
fdivp
cmp
lds
sbb
aad
cmp
mov
bound
or
ds
push
ss
sbb
pop
in
arpl
out
gs
xchg
hlt
hlt
je
push
cmp
lret
jne
push
bound
push
les
sub
cmp
xchg
xor
or
xor
cmp
sbb
cmp
arpl
insb
jno
inc
push
jae
in
jno
mov
lods
jno
xor
std
push
push
inc
push
idiv
mov
orl
xor
pop
les
jnp
push
in
push
adc
pop
and
xor
hlt
rcrb
adc
sti
fnstsw
mov
cwtl
mov
mov
pushf
enter
rorl
pop
adc
insb
rcrl
inc
dec
dec
pop
out
in
sbb
aam
push
inc
addr16
pop
xchg
cmp
push
jecxz
dec
push
pushl
test
ret
mov
and
pop
pop
dec
lret
mov
cli
mov
in
cld
and
cmp
fldcw
xchg
ljmp
mov
add
les
stos
sub
shll
iret
and
lock
sub
lahf
int3
lret
cmp
mov
mov
sub
ret
or
cmp
dec
mov
cmp
in
mov
xchg
cmpsl
int3
inc
enter
push
jbe
push
dec
xchg
mov
push
fidivl
mov
xor
in
dec
inc
lret
stos
mov
push
cmp
mov
sub
dec
dec
sub
out
fildll
cmc
dec
xor
jns
mov
pop
jge
pop
cmpb
and
push
cltd
mov
rolb
fs
xchg
dec
arpl
add
mov
insb
shl
loopne
je
pop
addr16
and
adc
clc
mov
inc
jb
iret
popf
jmp
xor
insb
leave
xchg
mov
dec
xchg
mov
scas
ficoml
call
pop
lds
andl
dec
dec
xchg
sbb
aaa
jl
adcl
andl
sbb
sub
stos
mov
nop
stos
mov
mov
pop
or
adc
and
jmp
mov
dec
mov
push
jbe
lret
sbb
stc
sub
mov
jp
rcl
outsl
inc
jmp
fldl2t
adc
in
pop
arpl
cmc
push
fxam
cmpsl
xchg
pop
dec
roll
fsub
xchg
js
or
jnp
popf
jecxz
jmp
inc
adc
dec
jl
jl
fs
xchg
dec
jnp
fmulp
aad
fstps
sub
xchg
ljmp
pop
and
in
cmp
inc
or
arpl
divl
inc
ss
int3
xchg
cmpsb
les
jecxz
addr16
and
or
out
and
roll
test
mov
ficompl
add
test
and
mov
out
xor
jnp
mov
dec
in
jns
outsl
or
testb
fsubrs
xchg
ret
xchg
xchg
aas
scas
lret
xor
push
scas
inc
pop
imul
in
popf
dec
jmp
aad
std
pop
mov
outsb
ds
inc
shrl
fstpl
lret
mov
jo
outsb
pop
xchg
cwtl
and
sub
test
out
jbe
sub
loope
pop
mov
dec
lds
daa
or
push
adc
mov
rclb
push
lcall
mov
ret
ficompl
mov
in
sub
mov
icebp
cmpsb
mov
mov
fildl
fmuls
push
les
cli
pop
mov
pop
in
inc
sahf
jl
in
loop
mov
es
scas
xlat
pushf
sub
mov
and
xchg
jge
stos
or
mov
scas
mov
mov
out
xchg
sbb
int3
fcompl
and
xor
sbb
cmp
or
adc
lods
inc
xorl
movsb
icebp
inc
std
dec
sbb
movsl
cltd
inc
lods
je
sub
dec
xchg
addr16
pop
mov
sub
fnsave
mov
rclb
xchg
cmpsb
adc
cmp
mov
clc
in
pop
inc
rcrl
mov
mov
rcrl
repz
mov
les
sarb
sbb
cmp
mov
data16
adc
fwait
and
push
inc
push
je
cs
out
in
pop
cmp
mov
addr16
inc
sti
aas
mov
stos
xchg
cmp
or
mov
push
int3
es
mov
mov
stos
dec
add
sahf
push
pop
dec
sahf
jecxz
cld
sbb
sarl
stos
test
mov
das
test
xor
add
push
sub
loope
test
sbb
xor
gs
out
bound
inc
mov
xchg
mov
inc
dec
inc
cld
jmp
cmpsb
mov
sbb
loop
dec
jg
fdivl
sbb
inc
lahf
fabs
sbbb
xchg
dec
imulb
mov
movsb
fwait
es
call
fmull
fisttpll
sarl
jge
out
mov
sbb
pavgb
dec
jno
enter
xlat
mov
repz
dec
add
pop
outsl
cmc
cmp
mov
cld
mov
push
or
testl
adc
sub
mov
lods
popf
push
inc
mov
mov
push
popa
add
xor
xchg
xchg
mov
aad
or
fld
sbb
ret
mov
jge
sti
cs
jg
mov
es
xor
nop
xor
mov
and
shld
mov
inc
push
in
dec
and
dec
in
jbe
cmp
sub
cmp
adcl
mov
icebp
mov
imul
aam
test
cmpl
pop
mov
test
adc
sub
leave
out
dec
cmp
mov
sub
xchg
in
adc
imul
stc
mov
xchg
or
xor
sbb
cltd
cmp
insb
out
adc
push
mov
outsl
in
add
test
pop
xchg
pop
jecxz
loop
dec
push
shrb
adc
inc
les
scas
fmulp
sbb
lret
roll
xor
mov
xlat
and
insl
mov
jg,pn
arpl
push
sbb
sub
xchg
dec
ljmp
aam
ret
fwait
in
ret
clc
insl
fcomip
push
cltd
sub
ficomps
enter
push
cmp
popa
dec
fsub
roll
bound
mov
xchg
mov
mov
mov
jmp
cld
add
test
gs
mov
cld
cli
mov
insb
test
push
dec
scas
cmp
mov
fwait
mov
mov
xor
lods
ret
or
shll
cmp
fidivl
repnz
push
pop
sub
push
out
cmpl
cmp
sub
ss
movlps
xor
mov
js
sub
sbb
sahf
out
sub
and
push
xor
mov
icebp
jg
jae
sub
pop
in
in
adc
out
pop
mov
add
add
cmp
mov
iret
mov
mov
xor
and
push
mov
push
rcl
or
mov
xor
testb
mov
inc
fisttpl
cwtl
sbb
jmp
mov
insl
mov
mov
dec
js
lock
sub
daa
dec
adc
mov
fsubl
jne
sub
ss
mov
je
cmp
dec
mov
loop
call
jne
fwait
adc
mov
mov
es
pushf
lcall
cli
xchg
adc
arpl
fdivr
fsubr
lock
mov
mov
inc
pop
stos
jno
mov
or
xor
loope
rcrb
mov
mov
pop
sub
cmp
lds
inc
xor
or
scas
lds
adc
enter
movsl
mov
pop
or
xchg
aaa
dec
test
idivl
in
rorl
xor
pop
repz
ds
sbb
out
push
mov
add
shlb
test
jno
subb
and
je
pop
pop
test
xor
mov
pushf
cmpsb
sub
into
cs
sub
roll
call
xchg
jne
stos
in
pop
leave
fisubrs
pop
int3
and
shl
adc
cwtl
mov
sub
int
or
aaa
pop
inc
ds
mov
test
xor
adc
fs
fdivl
addr16
xchg
inc
aad
or
mov
mov
call
sbb
scas
cs
pusha
pop
stos
rcrb
xchg
icebp
sub
sbb
jg
mov
stos
ja
push
cld
stos
xchg
and
aaa
sbb
cmp
pop
cmp
pop
stos
add
mov
pop
cmp
cmp
adc
pop
jge
dec
mov
or
idivl
inc
jne
stos
adc
lcall
adc
sub
out
xor
jmp
lods
dec
xlat
iret
xchg
and
xchg
cwtl
jae
lock
xor
faddl
cmp
ja
in
stos
pop
xchg
iret
lock
int3
stc
lret
xchg
stos
and
or
xchg
aaa
pop
jbe,pt
adc
mov
add
and
nop
push
or
bound
rolb
sar
sbb
adc
pop
out
sbb
cs
sbb
push
movsl
lea
in
push
lds
push
outsl
inc
fdivr
fcmovnbe
idivl
bound
push
pushf
daa
orl
ficoml
in
int3
or
in
push
dec
mov
jecxz
andb
test
enter
inc
jne
jb
in
sub
pop
cld
in
mov
push
aas
std
pop
push
pop
lahf
adc
ret
jl
sub
clc
mov
mov
lret
movl
cmc
movsb
inc
add
push
xor
fwait
mov
mov
jmp
js
cmc
xchg
mov
add
sti
push
out
sahf
out
jne
jmp
mov
push
js
imul
clc
dec
xor
sub
filds
gs
mov
sbb
leave
mov
mov
aas
out
and
sar
iret
inc
jmp
call
divb
pushf
adc
lds
mov
pushf
lods
jnp
xor
add
mov
jecxz
mov
gs
cmp
mov
hlt
adc
mov
fdiv
push
sub
xchg
lcall
inc
pop
push
mov
mov
add
dec
or
sub
jb
jns
pop
or
in
je
mov
repnz
and
daa
les
xor
adc
gs
cmp
add
lcall
inc
out
cltd
and
scas
sarb
popa
cwtl
pushf
dec
pop
mov
mov
fldenv
test
and
lret
decb
std
and
clc
gs
shl
push
arpl
adc
push
pop
pop
inc
neg
jne
xor
bnd
mov
adc
lds
nop
pop
adc
pop
xor
arpl
inc
fnstenv
push
pop
cwtl
sub
shlb
jg
loope
icebp
sub
fwait
sub
jnp
pop
ret
cld
inc
sub
mov
pop
jo
fdivrs
sub
loopne
adc
repz
aad
ds
mov
jg
push
aaa
push
push
ss
jo
sbb
mov
leave
out
push
imul
adc
dec
shl
cmpb
in
out
sub
mov
loopne
leave
mov
dec
xchg
addr16
jnp
ljmp
adc
lahf
xchg
add
dec
pop
movl
addr16
pushf
mov
cmp
scas
dec
sub
xchg
outsl
xchg
int
pop
mov
pop
fcmovu
ficompl
xor
jl
add
cmpsl
cmp
mov
mov
gs
and
sub
dec
push
sbb
shll
jge
xlat
pop
ss
cmc
xor
cmp
pop
dec
mov
das
xchg
mov
jg
and
fst
dec
sbb
ja
add
imul
cmp
in
cmp
mov
push
outsl
pushf
fucomi
mov
xchg
dec
cmc
daa
into
loop
adc
stos
add
pop
or
or
or
cli
xchg
rcl
jecxz
hlt
testl
jb
repz
shll
jo
lds
lahf
repnz
push
xchg
mov
adc
and
mov
mov
pop
rcl
cmp
xchg
sub
xor
ja
das
push
adc
shll
pop
cmp
insb
addl
rolb
push
pushl
jmp
adc
and
mov
mov
out
sub
jae
repz
xchg
mov
lcall
pop
ljmp
lcall
xor
in
pushf
xchg
and
mov
push
and
jae
push
mov
cmp
loopne
cmc
mov
sbb
cs
fxtract
mov
sub
lods
repz
repz
imul
loop
loop
cli
ljmp
jl
push
mov
pop
imul
into
sub
sbb
sahf
cltd
inc
out
push
pop
jecxz
jns
sub
popa
dec
or
or
loop
jl
or
adcl
in
aam
jge
ficompl
cs
sbb
subb
xchg
mov
dec
push
pop
adc
stc
stos
dec
js
lds
or
cmpsb
adc
setge
bound
fwait
lret
jbe
ljmp
int3
push
subl
clc
sahf
into
fcoml
push
in
sysenter
or
addr16
jecxz
orb
xor
xor
repz
jp
adc
inc
fidivrl
shr
push
mov
dec
inc
stos
call
adc
jne
popf
push
int3
or
pop
inc
mov
lcall
dec
mov
outsb
jnp,pt
in
dec
jecxz
mov
popa
enter
cmpb
cmpb
push
lahf
jecxz
scas
sub
mov
loopne
jno
and
fwait
pop
jmp
and
mov
push
push
and
sbb
rolb
addl
in
hlt
xchg
sarl
and
popf
xlat
hlt
fwait
cli
xchg
add
pop
clc
jp
cs
sub
std
mov
pop
stos
dec
fisubl
mov
sahf
out
mov
push
aad
or
addr16
movsb
xor
xor
imul
xor
adc
faddp
xlat
hlt
inc
mov
push
mov
pop
shll
push
nop
pop
sub
jo
pop
push
mov
push
data16
mov
inc
dec
into
in
lcall
sbb
jo
xor
adc
fcoml
ljmp
in
je
nop
or
arpl
push
lods
cmovns
fs
or
jb
negb
dec
cmp
and
xor
shl
mov
push
or
xor
lahf
das
jp
int3
cwtl
stos
pop
daa
out
orb
loop
scas
inc
daa
sahf
adc
xor
cmc
dec
mov
add
fldcw
jno
xlat
fsubrl
mov
into
cmp
mov
sbb
cmp
in
pop
mov
je
lcall
cmp
mov
mov
xchg
mov
outsl
pop
hlt
push
ja
test
addl
xchg
jno
add
js
scas
movsl
cmp
mov
ds
imul
mov
xor
sub
imul
sbb
loopne
cmp
mov
je
cwtl
test
adc
hlt
test
xorl
push
mov
jno
sub
dec
cmpsb
cmp
cmp
in
lock
xchg
add
jnp
or
bound
pop
cld
add
and
pop
dec
gs
shrb
clc
movsb
jb
dec
mov
aam
cmp
stos
cmc
mov
jns
pop
rcrb
add
clc
or
xchg
jle
leave
lret
std
lds
insb
xlat
pop
lods
jle
inc
mov
in
pop
adc
out
lock
jge
aaa
xchg
scas
loopne
mov
les
lods
or
daa
fisttps
cmpl
cmp
test
and
and
sub
sub
push
fldcw
shrl
test
hlt
push
mov
dec
mov
mov
mov
dec
fstps
lcall
inc
jmp
test
mov
jge
and
repnz
ret
sarl
sub
dec
das
and
dec
push
rcll
out
fildll
arpl
mov
xchg
repnz
call
pop
mov
enter
stos
ja
jl
inc
xor
in
pushf
insl
sub
adc
enter
pop
xor
stc
and
jmp
in
cmp
sub
lea
adc
sbb
dec
in
push
lar
cmpsb
and
pop
nop
mov
rcrl
sbbl
lcall
mov
lahf
loope
cwtl
sub
loope
jo
fs
or
and
or
dec
pop
mov
xor
ret
ret
hlt
sahf
ds
shll
scas
jbe
loope
sbb
int
ljmp
sbb
sub
xor
ja
popa
fnstenv
jecxz
and
fbstp
jg
adc
movsb
xor
in
movb
nop
push
push
pop
icebp
lret
xchg
lahf
mov
loope
jne
in
lret
push
movsb
inc
dec
pop
data16
ds
push
push
idivb
fadds
scas
adc
dec
dec
mull
daa
das
adc
bound
or
imul
arpl
add
dec
mov
mov
dec
sub
lods
sbb
or
loop
out
push
push
in
out
push
push
sbb
pop
mov
lods
jle
fdecstp
and
in
aad
xchg
pop
cmp
sbb
lods
inc
cmc
fidivl
hlt
xchg
leave
shlb
pop
jne
xchg
cmp
sarl
iret
push
aas
insb
add
in
or
sti
hlt
mov
adc
pop
cmp
dec
lods
jns
sbb
cmp
cld
mov
dec
or
ljmp
adc
gs
xor
push
notl
jl
data16
es
ret
lcall
inc
fsubl
jmp
inc
sub
sbb
mov
inc
xchg
gs
lret
lahf
add
call
rcpps
and
mov
dec
scas
es
lock
cltd
mov
xor
dec
rcrl
adc
cmpsb
arpl
fdivrs
push
jmp
icebp
and
idivb
lds
xor
ret
fsubrs
xlat
inc
jmp
mov
dec
adc
js
scas
fucom
mov
push
add
mov
negb
mov
mov
pop
pop
adc
cmpsl
sub
cs
inc
xlat
stos
pop
outsb
pop
mov
arpl
push
das
aas
into
or
or
sub
xchg
test
pop
pop
inc
fists
fmulp
cmpsl
fdivrs
sbb
pop
pop
stc
ljmp
test
mov
popa
cmpsl
sub
cmp
and
mov
sbb
data16
loopne
repnz
or
dec
sbb
lret
insl
arpl
clc
call
popa
push
and
dec
out
in
mul
jl
out
inc
popa
mov
stc
adc
mov
and
hlt
pop
jne
cwtl
jb
jns
ljmp
push
js
xchg
jae
mov
mov
lods
and
ljmp
loop
lahf
mov
jo
std
xchg
jmp
fists
mov
pop
fisttpll
mov
sub
pushf
rorb
sub
mov
ret
jae
push
mov
rcrl
pop
jnp
ret
mov
gs
mov
lahf
sub
pop
fdivrl
xchg
sub
cmp
mov
cmp
mov
jne
add
add
mov
lcall
xlat
jb
aad
xchg
push
and
push
dec
ss
int
pushf
lods
aam
notl
add
je
enter
out
xor
sbb
stos
je
mov
xor
inc
cmp
sbb
xchg
mov
xchg
hlt
in
lcall
lock
jo
or
shrb
xor
xor
arpl
lahf
clc
mov
and
imul
xchg
or
xchg
je
pop
xchg
lods
inc
scas
ja
xchg
imul
ljmp
std
adc
xorb
jle
and
shrl
or
js
push
imul
mov
cs
add
dec
fwait
cmc
movsb
add
rcrb
sub
jp
add
mov
push
xor
pop
cs
cltd
in
sbb
outsb
js
adc
mov
adc
and
jb
jae
test
xchg
repz
xor
leave
lea
inc
pop
mov
fs
ja
cli
cmpsb
mov
insb
jp
int
out
sub
push
je
scas
adc
inc
adc
xchg
pop
or
lods
push
push
jmp
pop
jns
aaa
cltd
ljmp
add
int3
leave
sub
sbb
push
cmp
jl
lcall
push
cmp
daa
lret
ds
push
je
pop
dec
add
xlat
cmp
push
cmc
xchg
jne
and
add
dec
pop
push
cmpsb
loope
sbb
sub
data16
addr16
cmpsl
pop
mov
dec
aam
xor
dec
gs
insl
in
xchg
push
push
xchg
mov
jle
scas
dec
and
sub
and
sbb
sbb
rol
xchg
stc
dec
mov
int
imul
or
cmc
xchg
lock
ret
mov
insb
jns
jne
sti
ret
inc
scas
loope
je
andl
out
mov
je
lret
xchg
sarl
xor
sbb
shrl
stc
xchg
rorl
in
xor
cmp
es
ss
js
mov
stc
xchg
pop
scas
unpcklps
test
in
stos
xchg
das
sbb
push
repz
ficomps
or
movsl
fwait
mov
testb
sub
arpl
jmp
push
int3
test
out
scas
ficomps
jb
andb
test
add
sbb
inc
adc
out
dec
dec
jg
mov
cmpsl
dec
pop
ja
icebp
inc
push
push
jle
sub
iret
sub
xor
pop
clc
and
sbbb
fildll
out
je
xchg
hlt
jbe
sti
js
xor
mov
sub
loopne
mov
mov
shrb
shr
jp
xchg
and
adc
push
sbb
xchg
andb
shlb
ficoml
add
xor
xor
orl
gs
in
inc
xor
xor
fcoms
rolb
int3
push
adc
repz
das
cmp
inc
jae
imul
daa
jae
ljmp
xchg
pushf
in
adc
arpl
or
aas
cmp
mov
repnz
and
mov
xchg
out
imulb
loop
xchg
sub
jnp
mov
int
and
sbb
imull
lods
lret
xchg
and
repnz
mov
and
loope
gs
int
and
push
popa
xor
ja
into
cmc
lock
psllw
orb
out
sbb
mov
push
adc
adc
cltd
pop
std
xor
sbb
and
loop
mov
cmp
xchg
sub
add
jmp
rclb
mov
fstpl
and
cltd
jmp
test
mov
nop
mov
pop
ss
pop
add
cltd
pop
or
and
int3
push
es
arpl
cmpsb
sti
dec
or
jae
dec
lret
movsl
int
dec
out
mov
lods
mov
stos
inc
sbb
push
adc
mov
jg
out
movsl
mov
mov
add
aas
lcall
int
push
mov
sbb
push
int3
imul
inc
ficoms
xchg
imul
mov
lret
sbb
mov
scas
push
lea
idivb
xor
les
pop
daa
or
xor
imul
inc
les
loop
jae
fninit
jmp
mov
mov
call
int
stos
mov
movsl
mov
xchg
push
xchg
mov
in
adc
mov
push
push
hlt
mov
subb
stos
mov
cmpsl
add
call
nop
inc
adc
cwtl
and
sbb
imul
sbb
xor
dec
sbb
cmpsl
sub
fs
xor
xor
sbb
inc
shrb
repz
ja
mov
adc
sahf
xchg
je
pop
push
mov
push
sbb
jle
ret
js
into
mov
mov
inc
dec
js
in
xlat
lods
fwait
jg
cmp
pop
dec
daa
popf
jmp
mov
icebp
js
into
xchg
mov
mov
xor
repnz
outsb
push
imul
mov
js
ret
jge
je
shl
pop
mov
or
dec
and
cmp
std
pusha
lock
stos
sbb
pop
scas
sbb
les
mov
stc
test
addr16
lock
movsb
mulps
add
sti
cli
clc
ds
pop
or
mov
aaa
sbb
xchg
fnstcw
les
mov
mov
push
inc
adc
sbb
mov
push
or
push
xchg
and
lods
ret
mov
push
adc
out
sysenter
dec
sbb
roll
mov
pop
cmpsb
es
sub
add
addr16
pop
dec
jecxz
or
leave
dec
fstpl
cmc
and
jae
imul
lock
mov
int3
inc
and
cmp
adc
jl
out
scas
andl
mov
inc
dec
adc
mov
mov
pop
ljmp
negl
pop
pop
sar
ffree
mov
xor
xchg
mov
out
lods
xchg
jl
aad
ja
mov
je
shr
push
in
and
jg
dec
dec
xor
loop
xchg
data16
ret
outsb
insb
lods
inc
xlat
xor
mov
and
or
and
ja
jp
ret
jbe
jnp
sti
sbb
push
sti
push
loopne
dec
outsb
cmp
ret
adc
sub
sbb
int
arpl
push
aam
mov
jp
clc
push
js
inc
mov
push
mov
mov
loop
mov
dec
cmp
push
in
cltd
and
dec
push
int
add
popa
jp
sub
idivb
pop
cmp
mov
ja
jg
push
inc
std
imul
fldl
push
add
adcl
xor
xchg
and
ror
cld
add
das
enter
ret
mov
mov
fwait
aam
repnz
dec
loopne
lea
fs
stc
popf
test
push
xchg
push
out
fldt
mov
push
out
adc
movsl
lods
or
movsl
mov
xor
test
pop
fildll
push
cltd
pop
int
test
pop
xor
cmp
push
pop
jmp
jne
jo
stos
add
push
je
cld
mov
fwait
xor
pop
sbb
jns
xchg
or
dec
xor
lcall
add
out
arpl
adc
xchg
dec
andl
and
out
loope
out
data16
inc
pop
cmpsl
sbb
xorl
pop
icebp
add
mov
enter
mov
pop
aam
rolb
lea
fwait
int3
arpl
into
mov
cwtl
add
sub
sbbb
sbbl
fsubrl
mov
imul
jecxz
xchg
jo
arpl
push
push
scas
xor
dec
clc
mov
ret
cmp
mov
jmp
aad
jno
mov
iret
jns
daa
sub
fcoml
pop
push
mov
movsb
adcl
mov
mov
pushf
lods
push
gs
sub
inc
and
sahf
into
movb
enter
nop
xchg
cmp
or
push
ds
mov
or
es
xor
pop
aam
lock
inc
xchg
jbe
lcall
adc
xchg
and
pop
or
add
lret
movsb
icebp
nop
hlt
outsl
adc
mov
inc
dec
jg
test
out
pusha
jno
sbb
nop
xlat
push
push
jnp
ds
movsb
test
push
sbb
sbb
lods
fwait
adc
out
and
add
test
stos
cmpsl
fmuls
in
mov
mov
imul
mov
mov
inc
dec
sub
je
adc
mov
dec
rolb
and
fisttpll
or
xchg
mov
add
lds
call
push
sti
testl
push
sahf
inc
call
in
push
xchg
mov
mov
dec
add
xchg
push
fidivrs
sub
fidivl
pop
fcoml
mov
sub
test
sub
fs
mov
lret
sbb
gs
repnz
data16
repz
mov
aaa
in
or
or
shrb
cwtl
lds
pop
mov
xchg
andl
sbb
add
sbb
cmc
xor
lret
adc
pop
out
pop
lods
dec
es
scas
push
or
adc
mov
das
test
icebp
hlt
push
xchg
shrl
cmc
daa
das
lock
lcall
movsl
shr
or
adc
mov
dec
cmp
out
dec
inc
shl
lret
in
roll
je
mov
lods
into
adc
fcoml
push
je
dec
lods
mov
ss
cmp
jmp
push
and
lock
aam
insb
cmp
or
or
mov
imul
jmp
test
and
mov
adcl
mov
lea
or
repnz
out
adc
or
cs
adc
scas
lret
loope
jno
sbb
add
jg
int3
push
out
sub
cmp
in
add
dec
sahf
jbe
xchg
jno
inc
lcall
jle
add
mov
mov
into
jo
cmp
or
outsb
jmp
add
and
or
push
fsubrl
lods
ret
pop
repnz
fwait
pop
cld
insw
stos
mov
mov
and
sbb
ret
es
jle
mov
and
lds
movl
mov
adc
arpl
and
leave
pop
enter
lahf
or
into
ret
push
pop
sub
mov
fsubl
sti
pop
lret
rorl
lock
pop
inc
pop
mov
loope
inc
fistpll
cmpsb
inc
test
divb
stos
outsl
sbb
enter
push
adc
sbb
sbbb
loopne
fistpl
jp
jbe
mov
cwtl
push
or
xchg
sar
pusha
imul
and
cmp
pushf
out
jo
push
xchg
lods
pusha
and
mov
sub
hlt
int3
pop
mov
push
out
inc
fsubs
or
add
stc
test
mov
test
dec
push
pop
mov
xor
movsl
inc
pop
mov
inc
or
lods
addr16
jb
pop
cmp
mov
lods
add
xchg
jno
pop
mov
push
loop
repz
xchg
ja
dec
clc
mov
mov
sbb
mov
aas
fcomp
xlat
cmp
into
xchg
or
test
mov
test
cld
call
pop
cltd
stos
adc
lock
cmpsl
lea
sbb
add
sub
or
xor
pop
jae
imul
mov
lret
cs
outsb
cmpsl
dec
or
mov
mov
bnd
add
mov
mov
enter
pop
cmp
xor
cmpsb
cli
sub
dec
mov
pop
inc
push
mov
sti
pop
mov
jo
adc
sub
inc
jnp
mov
movl
addl
pop
pcmpeqw
mov
dec
fisubl
fidivrs
jle
jecxz
pop
cmp
cmp
cmp
scas
mov
ss
loope
jbe
es
or
mov
mov
mov
and
test
into
sbb
jle
scas
in
and
shrl
fcmove
addl
mov
push
leave
dec
shlb
imul
dec
arpl
cmpsl
mov
adc
popf
sbb
and
fucom
dec
dec
xchg
or
mov
and
insl
das
xchg
sub
loop
cmpsl
lcall
push
sbb
movsl
inc
js
call
add
xchg
cmpsb
xchg
ret
fucom
stos
lods
pop
shl
inc
mov
jae
in
jb
jo
out
mov
cmpl
jmp
xchg
sub
pop
pop
xchg
mov
je
das
pop
stos
xchg
mov
xor
je
adc
xchg
cmp
fisttpll
sbb
insl
insl
adc
push
divb
mov
loopne
jle
pop
pusha
insl
adc
xchg
cmp
add
sbbb
xchg
call
jae
mov
movsb
cmp
flds
imul
add
sti
inc
filds
icebp
or
daa
insb
jp
iret
into
addr16
and
mov
mov
ja
repnz
outsb
lea
in
adc
sbb
adc
xor
nop
fmull
inc
jo
andb
or
jae
mov
xchg
xchg
jmp
repz
add
out
jnp
sub
in
pop
mov
fwait
xor
into
sub
sub
inc
add
inc
cmp
rcrb
int3
jnp
mov
sub
shrl
les
and
xorl
stc
jne
and
sub
jl
and
mov
mov
lret
icebp
add
mov
push
imul
push
hlt
addr16
or
test
roll
sahf
or
jl
cli
lret
adc
xor
and
out
sub
inc
push
ljmp
mov
mov
and
jge
inc
xor
cmc
test
sbb
and
popf
cmp
out
shrb
shrb
mov
jnp
or
cmp
lcall
test
jl
or
mov
negb
xchg
add
pop
inc
mov
popa
push
cmp
push
mov
mov
aam
sub
into
in
dec
xor
cs
adc
jnp
mov
jle
mov
adc
aas
out
data16
ret
add
shll
mov
sub
rorl
ror
sahf
adc
mov
xor
out
imul
lcall
scas
lods
dec
rol
idivl
shr
xchg
loop
xor
inc
sub
add
shrb
mov
insl
bound
daa
lret
scas
jne
inc
or
xchg
xchg
sub
inc
incl
sbb
arpl
lahf
orb
mov
push
mov
and
ret
jg
mov
push
ror
arpl
outsl
imul
cli
faddl
repz
pop
push
test
iret
sahf
sub
pop
lods
xchg
or
lods
insw
es
jo
lods
cmp
es
mov
mov
adc
mov
aam
fsubrs
es
sbb
fldl
cmp
movsb
js
jg
dec
mov
mov
mov
scas
call
or
dec
loop
cli
aam
pop
or
popl
es
bound
add
aad
repz
pop
add
dec
sub
or
xchg
popf
fidivrs
pusha
iret
pop
ficoml
cmp
jbe
je
mov
pop
popf
pop
loopne
test
adc
fwait
cmp
pushf
add
pop
leave
cmp
or
jae
inc
mov
push
xlat
sub
xchg
cmp
fwait
lret
xor
js
pop
test
das
shrl
or
int
call
adc
out
or
cmp
or
sub
popa
cmp
push
popa
sub
shlb
jno
aam
fnstcw
push
divb
adc
shl
cmpsb
ret
sbb
call
mov
bound
xchg
pop
cmpsl
out
or
sub
adc
push
fdivr
inc
pop
arpl
mov
mov
fwait
loop
jo
or
push
cld
sbb
mov
fsubl
arpl
aam
cmp
mov
sub
aad
shl
push
sub
xchg
outsb
jno
subb
es
in
lea
fnsave
in
popa
sub
add
dec
cs
xor
pushf
pop
cmpsb
mov
mov
ret
xchg
stc
push
jg
sbb
roll
inc
push
push
push
in
xor
outsl
sbb
jbe
add
test
mov
inc
fsubl
jg
and
inc
push
gs
test
iret
mov
cs
addr16
aad
lods
or
sarl
ftst
xchg
shl
add
pop
stos
pop
mov
pop
mov
or
mov
idivl
iret
shll
xchg
andb
push
jne
adc
loop
sbb
xor
xchg
push
push
jae
push
pop
mov
adc
filds
es
data16
add
jns
aaa
push
stc
mov
add
leave
mov
aaa
fdivrl
rcrl
adc
mov
pop
sub
sub
xor
aam
pop
jmp
pop
add
filds
and
fwait
xor
cmp
fisubrl
cmpsl
sub
jno
cmpsb
das
mov
inc
pop
push
gs
movzbl
jp
pop
sbb
xchg
out
pop
xchg
push
inc
xor
or
xchg
subb
dec
cmp
ficoms
stos
stos
or
push
mov
movsl
pop
sbb
xchg
inc
cs
lret
ret
scas
xchg
sub
dec
or
mov
inc
jae
out
mov
loopne
or
mov
es
jecxz
xor
sub
popf
je
xchg
sbbb
push
mov
pushf
add
lods
mov
out
sbb
jae
leave
icebp
mov
icebp
imul
dec
out
pop
jo
out
xchg
in
push
jl
or
and
adc
xchg
fnstsw
out
mov
mov
cltd
or
into
sub
std
enter
fcomps
xchg
repnz
std
pop
cwtl
rolb
lods
rorb
scas
mov
xor
in
loopne
ret
popa
cwtl
nop
jae
out
jae
stos
inc
mov
call
stc
or
or
jmp
mov
mov
sbb
mov
in
add
pop
mov
sahf
aas
adc
jb
sti
lahf
sbb
pop
mov
pop
ror
imull
je
xchg
cmp
bound
jge
add
mov
icebp
stos
jg,pt
xchg
inc
xorb
je
int3
mov
in
xlat
inc
add
push
adc
add
out
cld
adc
pop
dec
clc
push
aas
repnz
jg
in
shll
xchg
sahf
loop
daa
fisubrl
dec
shll
loop
in
lods
lahf
mov
loopne
pop
shl
jp
and
popf
movsb
inc
imul
xchg
add
out
adc
sti
ja
jge
jge
inc
iret
addr16
push
add
addb
and
call
test
xorb
or
in
sub
pop
ds
jne
inc
add
cltd
inc
xor
idivl
sub
push
mov
fidivrl
xchg
mov
cmpsb
mov
cmp
shlb
push
aaa
nop
pop
fnstenv
xor
jnp
test
ret
aas
xchg
or
sahf
repz
dec
mov
jecxz,pt
sub
pop
adc
mov
cmpb
data16
inc
or
push
fidivl
es
cmp
hlt
insb
push
mov
rcl
mov
sub
js
mov
frstor
mov
sbb
gs
dec
push
ret
add
mov
jp
mov
pop
dec
and
aam
or
pop
and
mov
ret
mov
xchg
lods
cli
sub
adc
and
mov
popl
fmulp
mov
scas
pop
and
mov
sub
ss
stos
adc
cmc
ficoms
hlt
mov
add
ret
in
addb
and
aad
mov
jno
test
jmp
mov
dec
iret
repnz
pop
lock
cmpsb
jp
mov
adc
mov
adc
ds
fwait
test
fstpt
sub
das
cs
lret
std
dec
cmp
xchg
ljmp
xchg
pop
fwait
mov
xchg
sbb
add
push
fstl
enter
jge
jmp
fs
or
stos
and
mov
std
or
mov
add
cmp
add
lahf
mov
or
cmpsw
stos
imul
mov
pop
pop
cmp
cmp
pop
sub
sbb
pop
dec
daa
in
repz
mov
gs
cmpl
cmp
ja
push
loope
sub
mov
cli
loopne
subl
mov
xchg
push
xor
int
fwait
push
roll
andl
out
scas
xchg
js
xchg
test
push
mov
ds
push
repz
inc
pop
outsl
jl
rol
jle
clc
cmpsl
push
scas
fisubrl
mov
fnstenv
jo
add
in
test
lcall
cmpsb
xorb
push
clc
sub
push
push
fwait
fs
jp
dec
push
push
add
mov
clc
xlat
jg
push
adc
lahf
lods
lret
and
adc
cltd
iret
or
outsl
out
push
jp
cmp
jmp
add
mov
mov
ror
adc
and
mov
loope
pop
jnp
subl
lret
add
sbb
sbb
xchg
mov
xchg
and
out
or
inc
arpl
imul
jo
fwait
mov
addr16
and
out
cltd
jno
clc
or
insb
push
or
mov
test
cld
out
jb
or
in
lds
push
ja
pushf
or
mov
cli
out
arpl
jge
push
lcall
ljmp
jns
xor
xor
xorl
and
das
cs
push
sbb
and
aam
insb
std
lahf
xor
sbb
movsl
add
inc
dec
rorl
jno
pop
gs
sub
fidivl
stc
mov
push
test
das
imul
add
dec
sbb
mov
mov
jo
adc
lea
add
sub
lea
mov
add
fmuls
std
jge
test
mov
mov
lods
cmpsb
out
out
divl
mov
push
fwait
out
fmul
jecxz
add
fs
jp
daa
pusha
lock
data16
push
pop
sub
cmpsl
addb
les
outsl
outsl
mov
xor
dec
add
or
fdivrl
adc
inc
les
pop
adc
out
push
fcompl
jns
and
inc
loopne
and
add
adc
pushf
dec
lock
call
pusha
push
jo
pop
popa
call
cli
mov
loopne
lret
mov
jmp
dec
cwtl
or
cltd
pop
jne
dec
inc
mov
mov
test
mov
inc
mov
mov
mov
cmp
ljmp
mov
das
mov
addr16
dec
pop
mov
adc
mov
aad
ret
scas
push
cld
mov
pop
je
rorl
or
addr16
imul
fiaddl
lcall
shlb
sarb
jno
test
loopne
jbe
clc
add
sub
or
ja
fistpl
push
pop
and
sar
sub
cli
inc
jl
jbe
iret
push
out
test
and
ret
push
pop
push
cs
mov
lahf
inc
adc
leave
mov
push
mov
inc
rcll
andb
ja
pop
ret
push
or
sub
mov
cltd
mov
push
sahf
test
int3
sti
out
cmp
and
pop
out
push
fidivrs
adc
xor
cmp
or
xor
cmp
sub
rol
mov
lea
adc
or
sbb
xor
xor
out
addr16
mov
shll
mov
aas
or
jle
cmp
sbb
inc
cmp
or
fucomip
pop
outsl
pop
loopne
out
cmp
clc
and
cmc
aad
sub
outsl
mov
clc
lret
push
jge
cmp
dec
mov
popa
or
jg
xchg
call
in
lret
inc
inc
add
andb
pop
loope
cmp
xor
sub
jg
scas
sbb
lcall
cwtl
xchg
inc
sub
jl
cwtl
hlt
sbb
pop
ljmp
stos
jp
test
push
lods
and
or
add
popa
sub
fldcw
and
cmpsl
xchg
pop
sahf
mov
push
into
lock
addr16
ljmp
mov
pop
or
test
lahf
lea
je
jbe
lahf
lds
dec
lret
clc
lods
shll
stc
cmp
out
mov
rorb
cmp
jne
cmp
pop
sbb
clc
cmp
inc
es
call
xor
aam
mov
orb
and
xorl
aaa
dec
lahf
jne
sub
pop
popa
in
js
xor
add
mov
add
mov
mov
aas
test
push
or
test
pop
cmp
das
fstps
xchg
out
mov
sbb
loop
popa
jmp
and
xorl
pop
mov
cmp
aas
dec
dec
mov
xchg
movsl
push
inc
pop
js
mov
int
in
mov
imul
hlt
jg
pop
mov
push
inc
push
inc
cltd
xor
ss
decb
imul
and
pop
adc
aam
push
stos
mov
mov
mov
data16
inc
mov
xor
aam
stos
movsl
aam
rcr
fistpll
push
les
or
lea
mov
xor
shl
idivl
adc
cmp
add
push
movsb
sub
aad
jnp
filds
stc
jle
jl
add
shll
sahf
xchg
xlat
sahf
xchg
leave
lret
xchg
mov
fdivl
outsl
ret
out
cwtl
xchg
lea
cmp
dec
jecxz
and
inc
cmp
jb
push
xor
leave
xor
cmpsl
lcall
and
xchg
and
lret
inc
stos
mov
xchg
fistpll
mov
adc
lock
fwait
insl
xor
int
jnp
push
lods
mov
inc
scas
sbb
hlt
adc
popf
ds
mov
lahf
mov
aam
xor
les
pop
xor
daa
dec
test
mov
and
mov
or
cltd
cld
mov
lea
movsb
inc
xchg
scas
in
jp
adc
mov
aam
js
insl
xlat
in
dec
dec
push
pop
cld
dec
pop
js
adc
push
mov
sub
fdivrs
lcall
ffreep
popf
movsl
sti
pop
sti
je
pop
outsl
fwait
rcl
sarb
push
out
add
lods
cmp
popa
mov
test
std
repz
mov
pop
sahf
push
call
mov
test
insl
inc
dec
xlat
jbe
lret
push
iret
and
arpl
call
mov
mov
cmpsl
pop
test
sbb
jns
sarb
cmp
push
shlb
out
test
outsl
dec
mov
add
test
ret
dec
inc
mov
dec
jge
xchg
test
push
cmp
dec
xor
cmpsl
add
adc
push
xchg
scas
int
push
daa
dec
lock
sub
fisubs
rcrl
stos
or
or
mov
push
adc
inc
sbb
mov
pop
cmp
es
adc
sub
jne
shrl
in
movsl
sbb
adc
sahf
xchg
out
mov
sbb
loopne
push
push
cmpsl
xor
fs
push
xor
lahf
push
icebp
and
sub
push
stos
fwait
lods
lret
or
dec
jne
sub
fnstcw
and
movsb
stc
ss
cwtl
mov
mov
pop
popa
pop
mov
out
xchg
ss
fstps
mov
mov
ret
inc
outsl
sbb
mov
sbb
frstor
or
nop
mov
jno
xchg
cmpsl
test
or
cmc
ja
fldcw
xor
mov
sub
mov
inc
in
xor
dec
dec
mov
cmpsb
mov
jmp
adc
imul
mov
or
repnz
jae
jae
sbb
fdivrl
jns
movsb
leave
mov
pop
shr
mov
pop
sub
gs
inc
inc
cmpsl
jnp
inc
cs
movd
mov
and
dec
and
nop
jae
fiaddl
jae
fcmovnu
and
in
lcall
sub
int
xor
pop
ficoms
xor
mov
out
mov
stc
mov
adc
lods
int3
mov
xchg
es
xchg
dec
sahf
mov
add
lock
mov
ret
ljmp
lret
imul
icebp
dec
inc
andl
adc
lods
fstps
jge
xchg
xchg
mov
jmp
icebp
fisubrl
xor
pop
fsubrs
in
add
push
cmp
cmp
jge
xor
data16
inc
mov
mov
idivb
dec
in
pushf
and
fidivl
xchg
xor
inc
imul
push
xchg
imul
out
cmp
dec
cmc
aas
sbb
mov
rorb
mov
or
jns
and
mov
ffree
aad
paddsw
loopne
mov
adc
ret
aaa
xchg
adc
inc
cmp
cmp
mov
add
pop
jbe
pop
xor
xchg
adc
ljmp
jbe
mov
rol
and
sbb
stos
dec
stos
push
dec
mov
xor
repnz
push
or
or
add
in
push
call
sub
repnz
adc
and
inc
inc
push
push
push
dec
sub
mov
outsl
mov
in
xchg
push
jmp
add
fmul
into
cli
test
adc
imul
dec
outsb
push
je
xor
leave
add
inc
sub
les
lcall
jo
fimull
out
dec
into
es
pop
xor
std
jnp
fcoml
mov
rcl
les
jb
mov
cmp
test
sti
or
sbb
int
addr16
pushf
daa
sbb
adc
sub
xchg
sub
mov
or
cmp
outsl
mov
cltd
shrb
or
xchg
clc
or
into
push
and
dec
clc
sarb
aam
cmpsb
push
cmp
sbb
mov
cs
in
cmp
dec
xchg
push
sbb
cmpsl
adc
test
push
pop
std
push
xor
pop
shrb
js
inc
adc
cmp
add
daa
push
enter
mov
jp
sub
adc
inc
jns
pop
push
pop
add
scas
aad
jge
push
fists
mov
sahf
mov
or
call
and
jno
insb
cmpsl
nop
dec
adc
dec
mov
xlat
and
add
enter
mov
cwtl
scas
xchg
xchg
out
out
lods
sbb
jnp
in
mov
mov
push
mov
ret
shll
das
inc
push
ret
insl
rcrb
inc
inc
push
int3
xchg
inc
fidivrs
sbb
inc
int3
int3
movsb
mov
andl
in
pop
stos
pop
adc
aad
cmp
les
rcr
mov
add
cmpsb
mov
or
stos
stc
out
inc
jmp
repnz
and
cmpsb
jae
scas
push
test
out
std
sbb
aas
push
aad
cmp
cmpl
outsb
popa
adc
sub
xor
mov
out
dec
ljmp
and
and
pop
mov
ja
ret
cmp
repz
std
mov
mov
inc
aas
inc
aaa
popa
in
mov
ljmp
sbb
mov
stos
mov
push
icebp
mov
fmull
sbb
fwait
push
shrl
imul
lahf
outsl
ljmp
add
push
jecxz
cli
jmp
aam
add
xor
js
xchg
sub
fwait
jo
push
dec
add
fwait
popa
push
jmp
cmpsb
mov
jbe
shrb
pop
jmp
pop
and
and
cmovae
test
or
loopne
cmp
push
dec
and
leave
dec
or
cli
in
adc
repnz
add
out
push
dec
sub
xor
stc
jno
mov
ljmp
jecxz
outsl
gs
adc
cmp
scas
ss
dec
ja
cwtl
cmc
adc
insb
stc
mov
pop
xor
les
or
aam
or
enter
mov
pop
rcl
push
movsb
inc
testb
adc
add
movsl
cmp
loopne
test
sarl
xor
rcrb
dec
aas
cmp
std
jbe
dec
lret
inc
inc
pop
jno
jmp
fs
fcom
into
outsb
fldt
les
or
movsb
sbb
dec
dec
adc
or
int3
fsub
push
insl
leave
mov
lods
push
add
ret
int3
lods
jae
in
or
and
push
mov
lea
push
xchg
dec
sub
repz
mov
ds
idivl
ret
adc
jmp
insb
testb
mov
jle
or
push
mov
inc
movsl
sub
jg
pop
push
or
dec
jo
outsl
xor
pop
cmp
jae
ret
cltd
outsl
push
push
mov
sub
and
lcall
add
mov
mov
insl
jb
sub
repnz
scas
in
imul
dec
stc
jecxz
fildl
pop
cs
jne
loopne
xlat
push
push
mov
mov
dec
movsl
add
add
shrb
pop
pop
adc
inc
fstpl
mov
cmp
lods
and
add
inc
repz
imul
stos
gs
or
lods
ljmp
idiv
pushf
shl
rorl
gs
xlat
dec
imul
xor
mov
jmp
pop
adc
mov
jl
lock
xor
xchg
push
in
ret
mov
es
push
dec
jge
repz
or
pop
movsl
clc
stos
shll
jp
sbb
lods
clc
sub
daa
test
loope
cmp
sarl
push
mov
scas
jle
imul
mov
cmpsl
cmp
mov
pop
movsl
loopne
xchg
ds
insl
sahf
sub
and
pop
xor
fnsave
xchg
ja
fisubl
je
shlb
in
mov
fisttpll
fbstp
mov
pop
inc
push
cwtl
test
out
ret
mov
into
decb
xchg
dec
cmc
fucomi
mov
loope
orb
shrb
lcall
enter
mov
jbe
mov
test
test
add
insb
out
fdivrs
dec
jle
xlat
adc
add
mov
jbe
jl
in
dec
cs
xchg
das
mov
xchg
rcl
int
mov
and
inc
xchg
add
jne
or
mov
push
cmp
mov
rcl
out
bound
dec
pop
test
xchg
inc
xchg
adc
cmp
xor
fldl
jb
loop
dec
mov
mov
mov
jge
xchg
cmpsb
dec
adc
adc
push
fneni(8087
adc
or
or
mov
mov
and
and
mov
iret
ficoml
icebp
mov
adc
push
int
jb
sarb
inc
addr16
shr
cmpsb
push
dec
xor
inc
jae
pop
lods
test
iret
push
cmp
mov
lahf
je
mov
xchg
dec
add
xchg
sbb
jge
lods
cmp
pop
jle
pusha
jmp
div
clc
pop
lcall
test
in
imul
lock
xlat
xchg
xor
mov
inc
mov
mov
add
test
cmp
sbb
jecxz
or
jle
inc
sbb
adc
pop
mov
inc
xchg
idiv
arpl
popa
adc
sbb
nop
jbe
dec
adc
cmp
pop
addl
jae
sbb
push
rcr
std
inc
ja
mulb
inc
or
mov
bound
dec
das
mov
lahf
and
iret
jge
inc
popa
pop
fcomps
fildl
xchg
push
dec
push
jmp
aad
jno
and
lcall
inc
imul
sub
arpl
or
jnp
pop
jns
loopne
mov
lods
add
rclb
dec
movsb
xchg
jl
ss
jl
repnz
roll
cli
inc
pop
jb
jbe
daa
test
push
mov
pop
lea
pop
fs
outsb
jnp
cmp
xchg
xor
pop
lds
rcll
int
mov
mov
xchg
mov
mov
adc
ljmp
std
xor
mov
jle
push
push
inc
sbb
inc
pusha
sbb
mov
inc
cmpsb
sarl
sbb
loop
stc
out
stos
mov
dec
stos
dec
mov
xchg
mov
mov
jno
in
stc
outsb
xor
scas
ljmp
rorl
ds
call
sub
pop
xor
mov
in
mov
add
mov
loopne
cmpsb
xchg
int
adc
arpl
mov
imul
xor
in
push
xchg
mov
jb
push
aad
mov
add
cmp
clc
or
jne
or
inc
or
sbb
leave
icebp
ljmp
lret
inc
mov
push
mov
icebp
outsl
adc
in
sub
in
ret
pop
jnp
cmp
ljmp
sbb
xorb
xor
mov
hlt
sub
mov
adc
adc
mov
mov
sbb
loopne
jb
or
insl
stos
out
mov
les
mov
adc
xchg
cmp
andb
sub
sbbb
jae
ret
xchg
or
leave
sub
push
jmp
xor
cld
mov
mov
and
loop
add
sub
lds
jno
pop
andl
int
adc
add
jmp
jmp
add
iret
mov
fstpl
scas
sub
in
fwait
adc
push
xchg
jnp
cmpsl
cmc
pop
lods
jl
xchg
adc
dec
xchg
mov
sub
cmp
std
aas
fidivs
outsl
dec
scas
sti
sbb
mov
ret
and
enter
shlb
adc
shll
push
dec
lcall
adc
rol
sbb
popa
xor
cmpsl
xlat
dec
add
lods
cmp
out
xchg
sub
xor
in
mov
cmpsb
into
jbe
mov
rcrb
clc
out
xchg
mov
add
fistpl
fwait
inc
push
shl
into
lret
lods
pop
rclb
mov
mov
add
xchg
or
mov
movsl
inc
sub
or
pop
mov
into
jne
dec
popf
and
sbb
dec
push
sub
adc
xor
xor
pop
adc
push
fcmovu
cld
xor
sbb
pop
or
aaa
push
adc
ds
mov
or
add
fucomp
sub
dec
cmpsb
gs
or
add
in
enter
sub
push
xchg
jb
shlb
subb
sbb
cmpsb
or
jmp
xchg
pusha
inc
sti
lods
adc
pop
das
repz
sbb
xchg
sub
out
arpl
rcll
mov
jmp
hlt
popf
mov
fcompl
pop
xchg
testl
inc
movsl
dec
push
mov
ljmp
sub
outsl
adc
imul
jns
dec
and
aaa
nop
add
pop
rclb
aas
add
pop
mov
icebp
sahf
insb
dec
lret
notb
in
jmp
or
ret
repnz
lds
mov
mov
mov
push
andb
add
jne
or
outsb
adc
insb
scas
sbb
mov
out
cmp
ret
das
push
jnp
adc
test
push
outsl
pop
push
xchg
jle
out
and
inc
jbe
adc
add
test
leave
cs
push
loope
aad
xor
jbe
mov
xchg
rcrb
mov
lea
movsb
mov
push
push
push
jnp
adc
daa
cmpsb
xor
jle
sub
insl
out
cmc
mov
xchg
scas
pop
mov
adc
loope
sub
das
fists
test
lock
scas
mov
shl
sbb
jns
fdivl
ljmp
insb
push
les
and
ds
push
ret
lret
or
cmpsb
loope
cmp
jb
mov
mov
dec
mov
mov
pop
jp
adc
das
inc
and
inc
cmpsb
mov
add
imul
movsl
and
insb
rcll
sub
pushf
addb
enter
imul
push
sti
mov
pop
cmp
xchg
shlb
sub
push
call
inc
ret
jl
outsb
lret
es
adc
jb
xchg
xchg
in
inc
jp
push
pushl
fsubrs
adc
add
cmp
push
sub
imul
popf
mov
nop
cs
jae
push
lahf
gs
jb
imul
lcall
cmp
sub
pop
pop
popf
jp
outsl
mov
xor
inc
cmpsb
cli
pop
gs
cmc
mov
mov
jmp
mov
inc
out
jle
test
pop
pop
mov
in
mov
dec
mov
outsb
mov
loop
loope
jb
add
lahf
mov
sbb
lock
mov
mov
lret
stos
xchg
ficoml
jg
dec
push
pop
fcmovne
clc
ret
aas
xchg
mov
hlt
je
addl
popa
inc
or
push
mov
and
pop
pop
jne
xchg
call
clc
and
aaa
int3
mov
cli
xor
mov
mov
scas
sub
mov
xchg
dec
mov
jae
les
and
push
cmp
fstl
dec
dec
dec
fstl
fcompl
sahf
jnp
dec
dec
gs
mov
shlb
inc
into
or
adc
jg
ja
ficoms
jbe
jnp
lea
insb
mov
mov
mov
cmp
enter
mov
out
into
dec
dec
xchg
jnp
inc
mov
dec
rcll
jmp
dec
test
or
loope
jnp
movsb
mov
out
mov
sar
mov
jmp
lahf
arpl
jo
mov
stos
bound
out
jbe
mov
xor
adcb
test
mov
push
sbb
test
call
leave
lods
hlt
mov
mov
in
cmp
jmp
adc
arpl
fmul
inc
ror
scas
mov
clc
cmpsl
and
inc
cmpsb
mov
jnp
pop
push
scas
mov
mov
lds
aam
lret
addb
in
mov
out
xor
filds
sbbl
jle
mov
dec
ret
fists
bound
fs
lret
dec
lds
fistps
mov
inc
iret
xchg
cld
cmpl
and
lcall
ret
jnp
loopne
repz
mov
jnp
inc
xor
arpl
jecxz
jbe
imul
or
ja
mov
mov
dec
andl
nop
sarl
mov
push
daa
jb
xchg
enter
mov
mov
fistl
push
xchg
dec
inc
je
inc
sub
mov
and
mov
es
sbb
dec
inc
or
cmp
sbb
ja
and
cmp
adc
rcl
mov
pop
sbb
mov
pop
ja
aas
sub
add
rcl
mov
jmp
and
test
jge
mov
mov
and
pop
sbb
dec
out
sub
or
ja
push
jbe
popf
jbe
xor
mov
xchg
cmp
xchg
sahf
mov
and
lock
fisubrs
dec
xchg
pop
ds
add
adc
movsl
xchg
shlb
xchg
push
mov
fsubrl
xor
addl
xchg
mov
or
hlt
xchg
mov
out
testb
mov
pop
stc
xor
ljmp
push
sbb
sbb
scas
xchg
outsb
lock
pushf
mov
mov
xchg
lahf
test
into
cmp
arpl
ja
sbb
adc
sub
imul
hlt
test
insb
incl
loopne
loope
clc
adc
dec
shl
das
pop
ret
popf
push
scas
mov
fistps
inc
pushf
in
outsl
in
pop
pop
loope
aad
cmp
test
scas
push
out
inc
jnp
outsl
or
dec
lea
pop
ret
xchg
shrb
lahf
adc
fcoms
shrl
into
loope
or
add
loop
pop
adc
inc
or
subb
sbb
sbb
test
jnp
push
xchg
mov
xor
add
cld
xlat
adcb
and
dec
push
out
jge
add
sbb
sub
les
cs
pop
pop
sti
iret
scas
adc
mov
mov
cmpsl
je
mov
lods
xchg
in
addr16
mov
call
mov
pop
push
scas
mov
xor
push
add
lods
dec
inc
mov
imull
gs
jmp
xorb
mov
popf
mov
pop
scas
lods
sub
test
aaa
xor
cltd
subl
xchg
and
lock
out
gs
lds
cmp
mov
lcall
gs
jle
xlat
adc
insb
push
adc
test
fsincos
insb
xchg
sub
sbb
add
scas
call
and
mov
dec
mov
pop
mov
xchg
movb
pop
clc
push
adc
mov
call
stos
ja
aad
add
lods
add
int3
cmpsl
sbb
aad
lds
loopne
in
mov
cmp
mov
popa
jae
les
jecxz
pop
mov
inc
les
jb
jp
inc
xor
pop
test
xor
adc
out
inc
sub
les
sub
cmp
ret
dec
add
test
es
xchg
xor
xchg
popa
xchg
scas
mov
sub
cmp
inc
enter
aad
jno
fst
test
inc
dec
mov
lods
cmp
push
std
aaa
mov
daa
push
xchg
int
int
mov
rolb
ljmp
adc
test
pop
xor
adc
cmp
mov
repnz
iret
stos
cmp
mov
aad
xor
add
ret
dec
inc
rcrb
pop
mov
inc
xchg
cli
arpl
xlat
push
bound
adc
ja
rcr
sbb
jnp
xorl
pop
add
or
mov
rcll
adc
add
in
hlt
rorb
add
jmp
int3
fadds
adc
mov
ret
mov
pop
inc
or
xchg
mov
push
push
pop
adc
dec
push
xchg
or
or
ret
loope
jp
xchg
arpl
add
in
loope
or
xlat
cmc
push
mov
sbb
js
ds
sub
xor
sub
mov
push
jbe
aam
mov
sub
mov
cmp
mov
scas
inc
dec
jb
xor
add
insb
adc
in
mov
xorb
push
mov
add
cmp
loop
cmp
push
pop
add
pop
dec
test
dec
pop
repz
int
shlb
xchg
sub
jnp
add
sbb
inc
int
and
mov
fisubrs
sbb
enter
stos
out
ret
adc
pop
adc
cli
fldl
hlt
aaa
testl
adc
sub
repnz
insl
jl
mov
out
xchg
ror
imul
adc
sbb
sysenter
push
jg
pop
push
popa
cmp
ret
clc
xor
shrb
inc
mov
xor
dec
pop
jg
jge
je
call
push
popa
cltd
mov
rcrb
add
push
push
lret
and
fs
xchg
outsb
test
lds
push
dec
std
add
test
in
es
adc
mov
sti
and
hlt
test
lahf
fldenv
pop
pop
call
jge
inc
push
inc
cmp
scas
sbb
ja
dec
jmp
jp
in
jmp
aaa
popa
fbld
lds
add
enter
into
xlat
fucomp
inc
mov
jl
cmc
inc
jle
xor
sahf
push
insb
push
or
inc
out
and
idivb
dec
and
mov
xchg
dec
inc
dec
cmc
pop
sub
cmpsl
pushf
jb
popf
or
push
loop,pt
jns
mov
ret
or
ja
pushf
lea
daa
lds
mov
push
enter
push
sub
pop
pop
stos
in
sub
in
fdivl
mov
in
in
imul
lock
mov
out
cld
ja
add
fnstcw
call
inc
push
or
sarl
cwtl
data16
mov
mov
test
mov
xchg
addr16
fwait
jno
add
orb
cmp
xor
roll
xchg
xor
lods
push
push
fisubs
test
sub
dec
daa
jp
iret
lds
lods
insb
mov
repz
xchg
xchg
jl
mov
jnp
fimuls
add
mov
inc
gs
inc
mov
sbb
or
dec
lret
adc
push
fistps
add
sahf
es
inc
clc
jg
add
lret
sub
push
push
pushf
jae
sbb
cltd
sbb
push
sub
fsubr
mov
or
lea
mov
lock
js
std
and
mov
out
adc
mov
popa
icebp
mov
push
andb
or
stos
pusha
push
scas
pop
push
stc
cltd
addb
cld
insb
sbb
loop
test
adc
jge
inc
test
sti
lcall
es
loopne
faddl
and
lods
mov
jmp
testl
mov
push
enter
lcall
sbb
lods
ljmp
test
mov
jae
pop
es
sbb
pusha
inc
ret
push
into
xor
testb
repnz
dec
adc
push
js
int3
arpl
jmp
adc
call
or
jnp
stos
loope
xchg
jge
out
sbb
aad
inc
xchg
loopne
outsl
loope
aam
popf
pop
xor
sub
rclb
out
jae
mov
dec
xor
add
pushl
xlat
fs
mov
sbb
mov
lods
xchg
pop
dec
jae
dec
clc
mov
sbb
addr16
xchg
int
pop
push
ficomps
mov
cwtl
xchg
adc
push
in
mov
pop
orb
pop
bound
cmpsl
fs
dec
ss
js
pop
mov
enter
in
and
lea
xorl
or
and
rol
jecxz
das
sub
data16
arpl
mov
mov
sbb
or
sbb
aad
xchg
sub
leave
jbe
in
imulb
inc
popf
arpl
ret
push
push
dec
lret
call
loopne
iret
push
aas
loop
fcmovne
js
inc
ds
mov
push
adc
loopne,pn
mov
out
mov
add
jo
push
out
test
mov
test
pusha
mov
out
je
js
push
pop
in
popf
mov
call
xor
pop
sub
fwait
and
cmc
fcmovbe
pushl
mov
sub
roll
sub
in
scas
lcall
cmp
lret
lret
jg
inc
xchg
addr16
hlt
fiaddl
out
cmp
cmp
xor
sub
push
cmp
or
mov
and
dec
sbb
rolb
call
aaa
sub
and
mov
daa
push
shlb
mov
lcall
mov
mov
mov
dec
cmpsb
jl
push
pop
pusha
sahf
xchg
dec
pop
test
shlb
mov
xor
clc
fdivrl
or
and
pushf
xor
jae
dec
inc
popa
sub
and
sbb
pop
daa
insb
mov
sub
arpl
jg
xor
sahf
or
mov
dec
cmc
lock
mov
hlt
loop
lea
inc
mov
decb
out
test
mov
inc
mov
and
push
ljmp
aad
mov
test
add
mov
sub
and
jae
xchg
cmc
shr
cld
std
call
mov
and
inc
subb
xchg
repnz
in
cwtl
inc
xor
shll
or
pop
push
int3
inc
push
mov
dec
cld
sbb
call
popf
sub
dec
int
out
aas
mov
and
daa
push
inc
in
pushf
adc
sub
subps
mov
mov
mov
cmp
inc
xor
xchg
push
jb
pop
xchg
out
mov
or
ss
mov
out
adc
sub
inc
sub
or
cmpl
leave
mov
xor
sbb
and
mov
adc
mov
fldenv
mov
mov
daa
sarl
sahf
outsl
jbe
lahf
sub
jge
cld
insl
pop
mov
or
push
mov
push
inc
sbb
stos
mov
loopne
xchg
je
lret
xor
jb
and
fidivrs
jp
xor
adc
cli
cmpsb
ss
std
mov
inc
pop
gs
movsb
sub
and
int
pop
push
ret
hlt
adc
repnz
mov
mov
cmp
cwtl
shrl
mov
pop
mov
add
jecxz
sub
push
cmc
or
push
into
pop
cmpsb
mov
cmp
in
push
push
test
icebp
test
lock
nop
pusha
leave
and
sub
or
divl
fwait
outsb
adc
movsb
movsb
jmp
cmp
and
sti
and
jnp
add
cmpsb
jmp
sub
jl
sahf
cmp
cli
fiaddl
out
sbb
dec
test
lret
leave
jno
lods
xor
sbb
pushf
icebp
jbe
xchg
je
or
mov
sub
in
lods
xor
test
push
out
inc
xchg
cmp
mov
mov
inc
and
in
jle
insl
sub
bound
insl
xchg
sbb
inc
mov
test
adc
fistpl
xchg
xchg
mov
jecxz
jecxz
int
call
mov
mov
inc
test
lcall
xchg
imul
adc
in
por
mov
push
loopne
lret
add
lret
fcoms
out
sub
mov
adc
stos
lock
push
mov
shrb
test
stos
das
mov
sbbb
rcrb
aaa
fwait
cs
nop
fnstsw
mov
lock
mov
mov
ds
fsts
outsb
mov
loope
pop
ret
scas
dec
mov
rorb
mov
shrb
pusha
out
pop
xchg
or
lahf
xchg
fisubrl
sti
cmp
test
xor
hlt
sub
inc
aaa
ja
js
mov
and
lods
insb
xor
lods
adcl
icebp
adc
push
aas
cs
loope
mov
ret
test
out
dec
mov
enter
or
dec
cmp
adc
arpl
pop
sub
gs
adc
cld
jg,pt
mov
pop
sub
mov
pop
int3
shrb
jo
int
jo
or
lahf
popl
popa
inc
nop
lea
jnp
cmp
add
or
popf
mov
cmpl
data16
push
scas
add
adc
and
pop
adc
iret
push
icebp
je
and
pop
outsl
fs
adc
add
arpl
fbstp
xchg
lock
xchg
inc
shl
aas
sub
xchg
les
fcoml
mov
pop
xor
or
push
mov
loope
das
cmpsb
fnstcw
and
arpl
ss
rorb
push
shl
cwtl
in
pop
ljmp
test
push
vpaddusw
fsts
and
sub
mov
mull
insb
push
dec
jae
dec
test
jo
lcall
les
mov
pop
hlt
pop
sahf
testb
ss
es
add
push
and
pop
jmp
mov
cmp
pop
inc
movsb
popf
daa
sahf
clc
bound
aad
push
mov
mov
popf
je
cmpl
push
mov
sub
mov
mov
and
add
pusha
mov
cs
sbb
aaa
mov
jmp
fsubl
test
fstpl
pop
pop
in
scas
stos
ficompl
cmp
jno
cmp
jnp
mov
outsb
sbb
add
pop
dec
sub
pop
pop
push
pop
cwtl
cli
out
sub
xor
jno
leave
and
mov
add
lcall
pushf
and
mov
lock
out
adc
dec
insl
es
aad
cmp
push
sub
cld
add
mov
pop
out
int3
orl
pushf
lret
cmpsl
dec
add
imul
sbb
data16
lret
outsb
sub
adc
fisttps
insb
lret
ljmp
sarl
mov
push
lds
rsm
mov
leave
sub
mov
pop
jle
push
movsl
sbb
add
jge
and
neg
push
rcll
ret
xlat
test
hlt
xchg
into
or
andl
or
out
stc
ret
mov
or
fwait
push
mov
notl
and
insb
dec
lea
ret
pop
arpl
aas
lea
cmp
pop
cmp
add
arpl
imul
inc
addr16
insb
xor
push
dec
push
mov
std
mov
cmp
mov
repnz
jmp
pop
or
outsb
call
sbb
pop
in
mov
dec
mov
add
pushf
push
enter
test
push
cld
pop
inc
pushl
loope
mov
sub
in
cli
popa
sahf
jl
aaa
pop
xchg
cmp
mov
aam
clc
aas
mov
xor
xchg
push
sahf
xchg
add
adc
test
jmp
xor
outsb
in
mov
in
mov
cltd
in
fldcw
push
push
cltd
adc
imul
push
pop
aaa
lods
out
iret
ret
ss
xor
jno
xor
jbe
fwait
push
insb
jns
jle
push
mov
lahf
jmp
jns
xchg
pop
push
hlt
sub
jg
addl
jne
bound
mov
adc
lea
aad
shl
je
adc
xor
in
jns
xor
or
rcr
cmp
test
lds
xchg
ret
mov
cmc
hlt
repnz
loop
fldt
and
mov
loopne
dec
and
stos
lret
js
bound
cld
jne
or
add
sbb
cwtl
js
mov
into
add
insb
xchg
push
cmpsb
jnp
sub
sub
aad
es
pop
ja
dec
or
stc
pcmpeqd
xor
push
imul
ret
sahf
imul
lret
roll
jmp
sub
jo
arpl
scas
sub
or
movsl
jnp
xchg
sub
std
ds
jns
addr16
lret
ds
out
or
ss
int
into
inc
cmpsl
rcll
sbb
push
dec
add
push
ret
mov
ss
and
fiadds
dec
or
mov
testb
jl
adc
mull
sub
add
dec
sub
loopne
pop
lods
loope
clc
das
gs
dec
mov
int3
outsl
pop
cwtl
icebp
cltd
scas
loope
je
arpl
xchg
insl
adc
mov
ljmp
cli
fldt
cs
int3
or
mov
stos
add
inc
xadd
jmp
xchg
jne
fucomip
mov
mov
jae
xchg
pop
loop
sub
cmpl
adc
popf
jecxz
test
lods
std
mov
addr16
mov
divb
shlb
xchg
cmp
mov
or
imul
jle
loope
jns
sub
pop
pop
pop
lea
pop
mov
insb
add
mov
clc
gs
imul
cmp
adcb
mov
push
add
fimull
cwtl
mov
psrad
mov
arpl
mov
fwait
cli
add
or
pop
addr16
es
lcall
movsl
cmc
jp
mov
cmpsl
rcrb
cmp
lret
xor
add
jl
push
mov
sub
mov
gs
lcall
push
mov
popf
pop
inc
int3
out
mov
cltd
ds
lcall
jecxz
pop
pop
and
mov
mov
aaa
fidivrs
push
add
lahf
in
aaa
lret
aad
loop
mov
loope
dec
mov
xchg
cmp
fwait
mov
test
leave
adc
push
out
in
cmp
inc
test
iret
mov
and
or
hlt
push
shll
sbb
andps
dec
stos
rcl
sub
dec
add
mov
insb
es
es
xchg
mov
cld
fmuls
sbbb
cmpsl
inc
add
cmp
cld
dec
xor
and
stc
jg
jp
adc
aam
es
mov
jp
sub
add
add
ss
stc
cmpsl
or
add
cld
adcl
xor
sbb
and
scas
pop
test
fisubs
jp
test
pop
cld
push
in
pop
cltd
test
mov
data16
xchg
push
push
iret
jl
jecxz
nop
cmp
and
in
sbb
mov
xor
inc
and
xchg
and
pop
add
push
pop
adc
jno
subl
test
dec
lods
aas
jl
add
mov
test
jecxz
test
out
pop
add
popf
mov
dec
jecxz
pop
aaa
jne
jmp
mov
push
cs
ss
cmpsl
in
jecxz
mov
fwait
mov
mov
fsubs
or
lods
push
mov
mov
lcall
xchg
cmp
inc
pop
sub
mov
pop
cmc
out
xor
mov
sti
xchg
sti
xchg
hlt
adc
add
pop
repnz
cmp
mov
mov
xchg
mov
adc
in
pop
lret
adc
notl
dec
xor
into
jl
xchg
sub
pop
scas
gs
jns
mov
push
aad
jno
pop
cmc
ja
out
lods
sahf
aam
insb
lret
jns
and
popa
nop
shrl
cwtl
xchg
xchg
aam
pop
push
mov
cwtl
mov
sub
pop
movsb
and
stc
inc
iret
stos
out
jnp
inc
pop
out
dec
adc
or
sbb
xor
imul
or
jg
pop
jae
inc
decl
xor
cmp
dec
add
div
mov
inc
or
in
add
mov
or
inc
outsl
outsl
outsl
sub
mov
out
pop
mov
dec
stc
jbe
insl
inc
iret
sti
rcll
push
fnstcw
mov
stos
fstps
ss
or
pusha
scas
adc
inc
lret
xchg
dec
mov
out
les
int3
push
add
icebp
cmp
xchg
dec
loope
loope
cmp
or
pop
cmp
jmp
adc
mov
unpckhps
cmpl
cltd
or
sbb
inc
sub
ds
push
xchg
lea
stos
fisubl
and
dec
xor
mov
sub
mov
cmp
xchg
xchg
cltd
les
mov
cmpsl
mov
aam
adc
adc
mov
cmp
movsl
mov
mov
cmc
adc
imul
inc
insl
pop
xor
cmc
mov
ret
xchg
std
cmp
mov
sbb
movsb
xchg
pop
in
insb
ffreep
dec
lret
jecxz
cmpsb
dec
popf
call
dec
jns
dec
cmpsb
dec
lds
fcmovb
cltd
rcll
xor
nop
hlt
jae
inc
ret
jmp
xchg
push
xchg
jl
pop
sbb
adc
inc
inc
sarb
lds
jnp
sub
pop
test
vmovd
push
fwait
cmc
xchg
call
shll
adc
xlat
test
popf
test
int3
push
inc
or
inc
test
insb
jo
mov
rorb
gs
push
xor
sbb
mov
mov
inc
jae
fcomip
shrl
inc
and
out
adcl
and
xor
cmp
lds
popf
fsubl
mov
jmp
idiv
push
icebp
ljmp
aaa
mov
push
mov
push
leave
and
ret
jmp
dec
pop
int3
sub
inc
jmp
int
loop
int
test
cli
mov
fwait
into
mov
imul
push
lods
xor
and
push
loop
sub
inc
insl
out
sub
div
xchg
aaa
or
push
ret
adc
out
nop
sbbl
dec
daa
cmp
adc
aas
cwtl
movsl
out
pop
stc
leave
add
lock
aaa
push
insb
leave
push
inc
jbe
and
mov
and
aaa
pushf
jae
inc
fwait
cmpsb
mov
pop
pop
das
mov
orb
inc
mov
xchg
push
pop
mov
ljmp
inc
cmp
or
negl
test
inc
xchg
cmp
mov
jb
test
jbe
cwtl
aad
and
out
testb
fwait
jnp
sub
jle
adc
decl
test
loope
fiaddl
mov
in
jae
and
cli
pusha
test
jle,pn
ja
jmp
mov
pop
push
sahf
mov
sub
repnz
cwtl
add
or
hlt
mov
push
call
pop
adcb
xchg
andl
dec
popf
xchg
push
or
add
cmp
push
lahf
lods
mov
stc
mov
cltd
jno
jmp
rol
stos
aas
xor
cltd
cmp
call
or
xlat
or
pop
lret
push
jae
sub
push
mov
aaa
int
inc
mov
daa
mov
cltd
out
sbb
fimuls
repz
sarl
inc
ja
movsb
nop
sbb
lds
test
daa
sbb
orb
xchg
dec
sbb
aaa
jle
and
cli
sahf
or
pop
fstpl
jge
lds
or
das
jo
fs
jno
sbb
dec
ret
imul
lcall
inc
sti
mov
jge
inc
shlb
filds
jno
dec
fmull
mov
fwait
inc
pop
mov
rcr
fsubl
push
test
inc
dec
fdivl
test
enterw
pop
push
daa
in
cld
pop
enter
mov
es
jb
into
jo
jbe
or
mov
dec
leave
pop
push
scas
scas
cwtl
std
lods
mov
mov
orl
loopne
add
pushf
jns
loopne
xor
inc
pop
imul
sub
mov
push
scas
insl
xor
pop
data16
cmp
add
inc
gs
dec
mov
jl
xchg
adc
or
mov
xor
fldl
sldt
rolb
out
xor
dec
fistpll
decb
push
inc
sbb
push
lods
inc
push
sub
clc
sarl
ss
cmpsl
sti
or
lea
fs
mov
inc
test
sbb
jb
in
push
imul
jnp
rcrl
xor
rorb
xchg
rcrl
imul
jl
or
mov
or
adc
dec
xchg
xor
popa
fmul
adc
mov
fisttpl
mov
push
lods
xor
adc
cwtl
jmp
mov
into
sub
xor
lret
pop
mov
cmpsw
and
adc
pop
stc
sbb
sub
dec
scas
pop
inc
mov
inc
lret
lods
xchg
popf
scas
dec
jno
out
cmp
sub
imul
push
xor
mov
mov
xorb
mov
pop
xchg
pushf
fdivs
cs
pop
cmp
sbb
mov
cld
cmp
roll
jbe
xor
stos
daa
push
loope
gs
fnstenv
test
stc
pusha
xchg
dec
sub
mov
push
sub
sub
popa
fs
das
push
and
mov
jns
cwtl
jg
popf
mov
mov
inc
daa
xchg
test
push
xor
inc
inc
rcll
xchg
shlb
ljmp
outsb
cmp
mov
addr16
repnz
mov
push
xor
lds
mov
in
notl
gs
or
and
jnp
mov
bound
in
divl
sbb
jmp
dec
pop
xchg
sbb
imul
dec
mov
or
and
dec
adc
sbb
jae
test
mov
jo
sub
inc
test
mov
or
or
mov
and
pop
jmp
mov
mov
xor
aas
cltd
jmp
inc
xlat
and
sbb
sarb
cmp
push
lods
sbb
inc
mov
cmp
push
add
in
xchg
xor
jns
enter
push
mulb
lea
xor
dec
repnz
mov
push
loop
rorl
inc
mov
out
xor
movsb
xlat
movsl
dec
pop
scas
sub
add
outsl
xchg
nop
nop
mov
or
jecxz
sbb
in
adc
imul
je
pop
in
movsl
push
jae
sub
cmp
xor
pop
sbb
rorl
xor
pop
jge
xor
mov
push
mov
sbb
mov
or
mov
mov
mov
sub
into
mov
ret
aaa
sub
jmp
mov
hlt
jnp
sub
sbb
fildll
pop
js
mov
push
mov
dec
jbe
nop
test
outsl
xchg
comiss
dec
mov
hlt
inc
jp
ret
mov
lods
adcl
mov
sub
daa
repnz
sbbb
xor
inc
push
lret
jl
inc
loopne
ss
daa
clc
not
dec
leave
sub
scas
jecxz
mov
pop
nop
and
sahf
iret
lret
pop
loop
pop
test
mov
xor
inc
aaa
dec
lahf
dec
pop
mov
xchg
rcrb
loop
xchg
xorb
fadds
mov
leave
loopne
test
add
mov
idivl
inc
adc
fsubp
mov
jp
leave
cmpsb
nop
inc
gs
sub
push
dec
sub
arpl
sarb
mov
pop
sar
or
jmp
lock
dec
cld
sub
wrmsr
or
jne
or
cmp
ds
xchg
int
jge
leave
jb
inc
es
fwait
and
lea
cmpsl
adc
pushf
movb
mov
cli
loopne
lcall
test
dec
fnstcw
mov
mov
push
cld
mov
lock
out
aad
cmp
gs
lock
call
sub
adc
mov
mov
jbe,pn
test
bound
outsb
push
sbb
aad
cmp
mov
push
and
push
fstl
and
sbb
mov
cmp
or
mov
sti
aad
gs
shl
dec
or
push
popa
mov
mov
cmpsl
inc
xor
push
jge
fmulp
add
xor
popf
adc
pop
ret
aas
push
scas
sub
into
push
push
xor
pop
sub
sti
and
lcall
inc
test
sti
orl
lods
aaa
adc
xchg
jo
idivb
cmp
inc
lahf
test
mov
ds
stos
fcmovne
repz
push
sbb
hlt
cmp
adc
xchg
pushf
jmp
mov
adc
out
xchg
dec
mov
lea
loop
je
adc
cmp
sub
sti
jnp
iret
push
dec
jae
mov
push
mov
xlat
leave
add
icebp
adc
fdivrl
ret
dec
push
out
push
mov
inc
arpl
das
cltd
lcall
fs
dec
fs
cmp
sbb
ljmp
push
pop
mov
fsubrs
push
dec
xor
add
push
push
and
andb
pop
mov
test
ss
sbb
sbb
cld
leave
jmp
arpl
cmp
sbb
outsl
pop
mov
movsl
and
mov
test
in
in
inc
ficomps
loop
dec
push
sbb
jo
or
inc
paddb
xchg
aaa
pop
sub
xor
jmp
enter
jmp
sbb
nop
inc
jnp
fstpl
sbb
cmpsb
add
arpl
jg
rcll
push
jmp
jbe
aad
call
mov
and
cmp
imul
mov
push
movsb
mov
and
xchg
add
xor
pop
mov
jmp
jae
sahf
xchg
mov
and
xchg
xchg
jno
push
cmp
jle
sbb
mov
test
xor
subb
ja
stc
jne
mov
rcll
add
jb
data16
jne
lock
cmp
xor
cmp
enter
fistps
das
push
js
cltd
loop
rol
jp
sbb
xor
int3
dec
sbb
out
push
push
lahf
sbb
arpl
enter
mov
test
mov
sub
add
lahf
fadds
fwait
lret
add
xchg
pop
js
lcall
sub
push
add
mov
and
subb
adc
push
mov
addr16
push
and
inc
shll
pop
xchg
add
addb
shrb
scas
dec
jg
outsl
loop
dec
test
call
xchg
je
dec
dec
xor
divl
dec
out
xchg
popa
aas
inc
test
loope
in
push
lret
in
fs
lock
mov
in
shll
andb
or
sub
add
fcmovne
repz
daa
cmp
movsb
and
loopw
cmpsb
pusha
jnp
inc
fidivrl
inc
pop
jl
dec
lods
vshufps
mov
mov
sub
mov
fnstcw
and
mov
dec
cmp
add
push
in
icebp
jae
xor
test
mov
push
sbb
dec
icebp
or
push
sbb
mov
cmp
pop
stos
mov
ret
lods
push
enter
lock
test
ja
inc
gs
stc
mov
mov
nop
adc
addr16
fisubrs
jns
ret
push
cmp
movb
cld
inc
jb
lods
or
arpl
adc
or
ficoms
sti
stos
fs
lods
pushf
flds
popf
sbb
fildll
push
push
adc
inc
cld
adc
ljmp
sub
in
in
and
add
mov
stos
jo
inc
jno
out
xchg
mov
add
mov
rcll
cwtl
and
in
hlt
lods
dec
and
movsl
adc
or
shl
or
xchg
mov
test
fistpl
mov
mov
mov
add
in
sub
shrb
and
mov
fcomip
out
popa
insb
fcoml
dec
js
mov
pop
inc
mov
pop
js
addr16
mov
pop
pop
mov
xor
push
lock
lret
dec
adc
je
mov
aam
sbb
mov
pusha
dec
pusha
loope
mov
fistpl
push
bound
pop
stos
xor
cmc
mov
nop
adc
cltd
repz
pop
cmpsl
setle
jl
xor
loope
push
insl
mov
sub
rorb
jb
xchg
call
adc
push
aad
nop
mov
xlat
mov
call
int3
jb
icebp
lods
inc
fcoms
ss
dec
xchg
sbb
ret
pusha
les
jge
or
loope
inc
add
iret
stos
push
push
andl
aad
out
addr16
jle
call
stos
xchg
rcrb
mov
jmp
adc
stc
test
gs
xor
adc
dec
add
push
or
or
push
add
imul
fcomps
cbtw
mov
lret
ds
xorb
je
lahf
push
out
pop
push
mov
sub
push
pushf
out
inc
push
arpl
cmpl
incl
mov
xor
out
negb
xor
mov
nop
lahf
insl
or
cmpl
xor
imul
lods
add
dec
mov
push
cmpsb
fs
mov
sub
add
test
loop
aaa
pop
adc
push
movsb
loopne
jns
and
scas
push
cmp
sbb
add
std
cmp
xchg
filds
je
inc
mov
dec
adc
sub
mov
and
inc
sbb
enter
dec
xchg
push
out
add
mov
jns
xor
in
pop
js
dec
mov
sbb
and
outsb
xlat
xor
sbb
fs
lds
xchg
xchg
test
lcall
xchg
dec
push
lds
jecxz
sbb
ja
jae
inc
ljmp
mov
arpl
jns
inc
sub
lods
and
insl
jae
mov
mov
inc
mov
sbb
repz
outsl
jno
decl
std
xchg
dec
dec
add
add
enter
dec
test
loop
cmpsl
pop
push
aaa
sub
pop
les
inc
mov
test
adc
inc
shll
sbb
scas
mov
lock
mov
rcll
mov
jl
sub
adc
mov
xor
in
int
add
popf
mov
stos
pop
icebp
mov
es
popf
leave
addb
xchg
sarb
push
mov
xchg
pop
inc
and
loop
inc
pop
dec
cmpsl
mov
int
xchg
jnp
hlt
adc
ret
icebp
pop
xor
inc
cwtl
push
xchg
cmc
ljmp
inc
mov
cmpl
or
icebp
sbb
or
fdivs
pusha
pop
shlb
fidivl
push
ret
jne
pushf
add
jb
adc
push
mov
push
xor
call
inc
test
out
push
fbld
jnp
inc
mov
mov
pusha
cmp
lods
dec
mov
push
sub
push
xchg
int
into
dec
lret
cmpsb
cwtl
or
pop
fists
repnz
js
jb
mov
mov
aas
js
inc
std
cmpsb
cmpsb
add
pop
mov
and
cmp
xor
stos
mov
test
jns
sbb
dec
sarl
lret
pop
push
jl
shr
push
push
push
idivl
insl
mov
subl
fildll
jo
sub
in
or
lret
ret
into
shll
shrl
cmp
add
jne
mov
movsb
mov
push
in
cltd
ljmp
jnp
in
cli
mov
xchg
lods
push
push
add
out
jcxz
arpl
mov
addb
jo
mov
add
ret
mov
mov
je,pt
cmp
xor
mov
fsubs
aaa
rcll
scas
inc
fdivrs
out
inc
mov
cmc
in
inc
les
mov
push
addb
mov
fcmovb
or
jae
push
jb
ret
andb
mov
mov
mov
in
add
loop
mov
shrl
test
add
hlt
loop
cwtl
lea
out
mov
push
lods
sbb
add
dec
cmc
xchg
pop
sbb
and
mov
or
mov
sbb
mov
xchg
mov
add
sbb
rol
xchg
iret
aam
adc
mov
dec
adc
rcll
and
ret
cmpsl
and
adc
jbe
pop
push
cmp
add
outsl
popa
test
jne
xchg
enter
add
push
aas
jnp
mov
sbbb
add
cmp
mov
cmp
mov
inc
ret
push
sub
sbb
insb
inc
outsl
and
jne
push
int3
outsl
fsubrl
mov
sub
push
sti
fcoml
movsl
mov
and
push
cwtl
dec
mov
mov
imul
mov
stc
sbb
lahf
ret
mov
xchg
aad
popf
repnz
decb
les
addl
popa
xchg
test
add
lea
pushf
filds
stos
xor
insb
pushf
out
jge
jbe
inc
push
mov
scas
std
pop
outsl
xor
adc
mov
sbb
lods
cld
les
adc
inc
mov
push
dec
fdivl
and
fnop
add
xor
sbb
rcr
das
icebp
mov
aam
int3
pop
jmp
aad
cmp
mov
enter
das
ds
cwtl
dec
cwtl
xlat
xor
jnp
int3
sti
outsb
sub
lcall
sub
mov
clc
add
ret
cmpl
pop
pop
xchg
mov
pop
cwtl
leave
imul
push
pop
or
loope
cmp
shrl
push
lret
lret
sub
pop
sbb
push
push
ret
js
faddl
orl
iret
xchg
mulb
iret
mov
pop
jg
or
jne
cmovbe
sub
mov
cmpl
inc
in
rcll
dec
push
bound
push
int
dec
dec
push
pop
sarl
test
and
cmp
mov
sub
or
hlt
xchg
mov
lds
cmp
or
clc
int3
mov
mov
test
lahf
push
stc
cmpsb
pushf
aad
jp
scas
pop
push
jno
fcompl
std
out
roll
dec
repnz
bnd
push
xchg
inc
hlt
mov
imul
in
cmc
and
pop
adcb
outsb
cwtl
pop
cmp
inc
or
pop
mov
outsl
int3
roll
cmp
arpl
scas
sbb
lahf
mov
mov
cmp
sub
stc
test
xor
push
jl
loope
popa
inc
jg
push
js
aam
pusha
cmc
insb
inc
add
add
mov
ret
jp
jo
sarb
sub
shlb
jnp
push
push
outsb
mov
jle
xchg
sbb
push
enter
cmp
popa
mov
inc
int3
lret
int
inc
aad
dec
fiadds
movsl
xchg
stos
or
pop
mov
lret
mov
pop
lea
mov
icebp
sub
xor
gs
ss
cmpsl
dec
jnp
and
imul
add
dec
lahf
adc
cli
cs
cmpsl
add
sbb
lret
outsl
mov
mov
cld
stc
adc
movsb
add
ss
mov
jnp
leave
fisubl
pop
dec
sbb
jmp
shrl
push
scas
shl
mov
das
inc
fsts
stc
mov
xchg
sub
imul
xchg
gs
ss
decl
arpl
push
add
ret
or
sahf
mov
xor
mov
mov
jae
mov
sbb
add
sbb
sub
adc
xchg
aaa
jne
call
out
xchg
adc
iret
hlt
and
sub
pop
fdivp
xlat
or
cmpsl
imul
ret
call
add
test
sbb
xorl
pop
mov
dec
and
cmpsb
mov
sbbb
mov
incb
andl
jge
inc
jno
push
add
lea
cli
loope
jmp
mov
xchg
mov
mov
and
cmp
add
mov
xchg
fcmovne
fs
xchg
insl
and
cmp
stc
sarb
xchg
xchg
in
out
xlat
repz
adc
xchg
adc
popf
xchg
loope
roll
sbb
mov
dec
popa
jl
sbb
aad
mov
movsb
cmp
aas
dec
mov
lea
std
loope
repnz
add
cmp
mov
jns
ja
push
push
xor
test
mov
mov
stc
mov
adc
dec
clc
popa
and
mov
lock
mov
pop
icebp
insl
mov
sbb
jo
mull
outsl
pushl
mov
jne
loope
jg
popa
mov
ljmp
jge
shlb
mov
stos
sub
add
xor
sarb
dec
fistps
mov
mov
es
jne
out
mov
mov
imul
popf
pop
shll
jl
clc
lahf
ret
sbb
faddl
movsb
in
add
jb
popf
push
xchg
sub
cmpsl
mov
lods
lods
enter
mov
mov
sub
pop
dec
cmp
mov
adc
cmp
sub
and
ljmp
pushf
cli
enter
inc
cmp
unpcklps
arpl
cmp
jb
jmp
xor
add
cli
enter
jg
jae
sbb
mov
dec
leave
ret
js
cmp
jbe
popf
jbe
insl
xchg
inc
jb
popa
dec
mov
push
aaa
daa
in
jle
push
in
and
pop
xor
aad
decb
inc
sbb
mov
mov
in
sub
sahf
imul
gs
repnz
fs
js
lods
sbb
jge
lods
arpl
dec
incb
daa
js
fidivrs
rorl
adc
sub
in
pop
push
gs
popl
adc
mov
movsb
sub
jmp
call
jle
inc
mov
repz
mov
loopne
mov
xbegin
and
hlt
pop
les
les
sbb
ret
sarb
addr16
pop
sbb
mov
mov
xor
ds
es
push
jmp
lods
and
and
jecxz
imul
mov
mov
push
cmp
pop
fldpi
cmpsl
mov
mov
movsl
sub
cmpsb
adc
pop
xchg
adc
icebp
ret
mov
sub
idiv
ret
push
dec
xlat
or
popf
jg
jecxz
aad
clc
jae
adc
movsb
imul
dec
icebp
stc
lahf
int3
push
adc
lds
mov
jecxz
lock
sub
mov
xlat
jne
mov
ret
xor
xor
ja
icebp
rcrb
out
sbb
lds
add
pop
pop
push
fistps
inc
cmp
stos
test
add
les
daa
adc
jne
sbb
fadds
pop
jne
dec
sub
movsl
mov
xorl
sbb
pop
xor
ret
or
fisubrs
sti
icebp
or
jbe
imul
mov
test
xor
movsb
sti
add
mov
mov
or
ds
adc
inc
cmc
rolb
push
push
push
fcmovu
mov
in
pop
ds
sub
outsl
scas
int3
ljmp
xchg
aas
jae
or
mov
inc
sub
adc
mov
xchg
popa
add
rcrb
xlat
jbe
int3
int
das
xlat
movsb
and
or
mov
test
sbb
or
stos
out
sbb
pushf
movsl
fidivrs
pop
sbb
arpl
cmp
mov
jns
push
lcall
mov
mov
shl
mov
or
test
xchg
ds
insl
or
jmp
and
loope
out
pop
mov
sub
xchg
jle
xchg
jge
mov
xchg
sub
push
int3
cwtl
and
out
jno
or
fdivs
imul
and
insb
jecxz
mov
mov
push
adc
out
pushf
mov
mov
or
cmp
ret
and
idivl
mov
push
mov
sbb
js
hlt
cmpsb
sahf
cmp
in
mov
repz
out
cmpsb
dec
lahf
lret
out
hlt
sub
addr16
inc
cmp
pop
add
xor
jnp
cmp
cwtl
or
sbb
adc
mov
inc
dec
fwait
sub
orl
mov
lea
enter
aad
adc
test
shl
xorb
fwait
in
cltd
push
mov
hlt
sbb
add
and
push
out
lods
out
xchg
sub
ds
out
mov
testl
push
pop
fistpl
fs
and
fldcw
and
movsb
call
das
shrb
jle
rcll
je
cmp
and
leave
push
jmp
sbb
in
adc
gs
gs
in
jge
enter
mov
in
xchg
inc
push
lcall
dec
jl
inc
push
or
popf
mov
iret
inc
daa
mov
add
mov
andl
test
push
orb
dec
jle
das
dec
lock
insl
jne
ljmp
cmp
lods
adc
repnz
adc
or
add
rcl
incl
adc
jge
mov
cmp
pop
fistl
loope
in
fs
or
testb
shl
in
pop
jp
push
sub
movsl
push
and
stos
xor
adc
cli
jns
add
inc
cld
stos
add
mov
push
inc
sub
daa
sub
jp
pop
pop
shlb
xchg
call
hlt
jno
mov
cmp
xor
rcr
mov
leave
ret
jp
lea
xchg
arpl
rorb
out
mov
repnz
push
gs
xor
lods
sub
hlt
pop
movsl
push
pop
jo
inc
shrb
xor
pop
push
or
push
inc
cs
mov
into
dec
gs
fcomps
ds
cld
push
js
mov
cmp
aas
cmp
popa
int
dec
mov
daa
es
loopne
imul
dec
add
push
jb
push
jecxz
mov
jmp
mov
jge
loope
stos
jp
xchg
push
mov
imul
lret
cmp
mov
fmull
bound
iret
loopne
adc
fsubs
mov
in
and
pop
stos
loope
ds
popa
pushf
les
icebp
add
imul
push
es
mov
cltd
lods
lock
jp
pusha
sbb
cltd
ds
xchg
hlt
cmp
xor
jne
xor
push
push
imul
mov
mov
ror
sbb
aas
stos
ja
inc
mov
jmp
mov
js
xor
xchg
xchg
fwait
das
fists
fistl
pop
push
aam
jmp
cmp
xchg
push
sti
mov
loop
add
ss
nop
pop
fs
inc
shr
lret
cs
push
mov
or
in
in
and
xchg
sbb
sti
ljmp
outsl
pop
sahf
aam
in
lcall
dec
stos
xchg
nop
sub
sbb
je
adc
dec
lea
add
inc
mov
dec
mov
in
xchg
jne
stc
or
lods
pusha
sub
xchg
cmpsl
cmp
aad
fadds
popa
xchg
arpl
jmp
ljmp
stos
fs
dec
sub
sbbb
ret
rcl
pop
cmp
mov
das
xchg
inc
or
outsl
movsl
push
jg
jge
xchg
add
jbe
jo
adc
out
mov
xor
and
push
push
cli
adc
out
cwtl
pop
into
mul
test
stos
sahf
lret
scas
movsl
outsl
mov
icebp
nop
shlb
xor
mov
add
mov
cmp
xlat
mov
insl
rclb
jae
jbe
push
inc
lods
adc
pop
dec
add
aad
xchg
mov
repz
fildll
mov
fs
mov
push
cmp
jne
xor
fidivrs
or
pop
push
push
out
jl
les
jecxz
xor
jb
in
lods
pop
imul
or
and
mov
rorb
ror
dec
or
sbb
or
add
inc
hlt
out
popf
mov
sub
pop
in
cltd
aad
fimull
mov
sbbb
pop
pop
inc
pop
add
dec
sub
xor
add
pop
out
ret
les
aas
fisttpl
fwait
out
dec
or
add
into
mov
out
ficoml
loopne
cwtl
or
sbb
repz
push
dec
mov
cmpsb
shll
mov
cmp
insb
and
adc
inc
push
lahf
xchg
repnz
mov
adc
xchg
xchg
lret
scas
roll
aam
mov
inc
cld
or
mov
orl
pop
or
sbb
scas
xchg
andl
repnz
pop
repz
je
movl
loope
sarl
jg
movsb
in
mov
pusha
cmp
pop
mov
mov
mov
push
mov
aas
or
or
in
jmp
jno
es
push
fwait
test
push
cwtl
rol
and
add
inc
mov
inc
dec
lret
and
xchg
je
mov
ret
stc
cld
bound
dec
shlb
push
sbb
sub
cmpsb
cmc
or
sub
mov
in
xchg
hlt
mov
aas
mov
pop
in
inc
clc
enter
pop
push
dec
adc
das
mov
mov
sub
cwtl
push
pop
rcrb
dec
mov
int
sbbl
loop
sbb
dec
mov
xor
mov
lds
outsb
push
xor
jne
mov
loopne
xchg
daa
mov
sub
inc
jnp
stos
adcb
add
test
mov
mov
dec
sti
imul
out
out
pop
and
pop
loope
push
pop
jecxz
mov
ja
clc
das
lock
call
in
mov
mov
jmp
adcl
push
into
mov
lcall
int
je
incl
fdivs
and
or
sub
movsb
loope
jg
mov
lods
push
jns
int3
xchg
push
adc
mov
xor
in
push
jge
out
push
jecxz
ds
inc
sub
jo
mov
testl
mov
pop
lods
add
cmpb
push
push
mov
je
inc
pop
xor
sub
mov
inc
or
jo
sti
dec
dec
imul
sub
fisubs
xchg
sbb
jge
in
sbb
jecxz
dec
jp
sub
mov
sbb
adc
inc
sbb
ror
push
nop
rcll
aad
mov
add
and
jl
loopne
scas
jge
cmp
and
pop
sbb
mov
fildll
pop
push
mov
sbb
cs
lock
jg
pop
jecxz
xor
sarl
andl
pusha
int
mov
cld
inc
sarb
std
ds
push
loope
jae
sbb
clc
push
cmp
jg
push
jbe
cmc
sti
les
jmp
in
push
inc
fmuls
and
in
mov
xchg
xchg
and
loopne
cmp
mov
aam
jl
imul
mov
loop
cmpsl
inc
pop
cltd
cmpsl
dec
sbb
add
push
leave
popf
mov
cmpsb
imul
mov
stc
shlb
mov
push
mov
cli
aam
adc
mov
dec
lretw
aaa
xchg
add
xchg
inc
and
sbb
fists
dec
cmp
sbb
loop
mov
cmpsl
addr16
mov
sti
mov
andl
xor
sbb
cmpl
dec
mov
sbbb
or
xchg
test
mov
jmp
shr
lahf
out
jl
push
sub
das
pop
pop
mov
shrb
in
sahf
out
jnp
adc
fsubr
cmpsl
ret
sbb
mov
dec
scas
inc
ja
clc
rol
dec
cmp
dec
xlat
push
cmp
lret
and
mov
fcomps
adc
mov
in
int
dec
xchg
mov
pop
xchg
rep
iret
subl
data16
mov
add
ret
into
mov
ds
mov
jb
inc
loope
mov
sahf
add
aaa
js
xchg
daa
push
pop
sub
fcmove
in
fucomi
imul
pop
outsb
aas
mov
pop
rorl
out
add
cmp
test
pop
jnp
push
loopne
cmp
out
or
outsl
or
push
stos
cmpsb
jo
pop
cmpsb
bnd
fs
xchg
cmp
les
xlat
push
cmpl
mov
sbb
mov
dec
mov
or
mov
pop
pusha
jnp
push
xchg
mov
outsb
pop
out
test
into
push
pop
mov
mov
movsb
adc
cmpsb
and
mov
fisubs
iret
and
cmp
aam
sbb
sti
imul
jae
fdivrs
aad
jle
es
mov
or
or
dec
dec
and
xor
gs
neg
pop
xchg
adc
add
cmp
push
movsb
aam
loop
push
inc
and
push
adc
xor
jo
adc
and
jp
push
jbe
idivl
dec
fs
xor
fdivl
cmp
mov
mov
pop
fwait
mov
mov
jns
dec
imull
popf
adc
inc
lret
fwait
leave
fdivrl
ret
sub
lret
or
sti
sbb
outsb
xchg
mov
scas
pop
fistpll
xchg
insb
xor
xor
repz
sar
aaa
mov
jne
test
xchg
pop
push
jno
pop
mov
xchg
lcall
push
mov
adc
les
pop
dec
cld
repnz
sub
dec
sub
cmp
pop
loopne
ret
mov
mov
cli
mov
or
into
mov
mov
dec
jle
ret
dec
or
mov
jns
jmp
mov
flds
xchg
bound
loop
aaa
and
int
xchg
mov
repz
fwait
jmp
out
add
or
ret
fs
hlt
je
call
push
mov
into
xchg
mulb
out
mov
ja
shrl
mov
ret
inc
cmc
divl
sahf
nop
aam
cs
cs
jb
cld
sbb
jmp
mov
repz
popf
cmpsl
mov
out
cmp
xor
lcall
mov
ljmp
mov
movsb
decb
pop
jns
subl
lret
cmpsb
fiaddl
push
xchg
jle
rolb
mov
and
cmp
out
loop
les
xlat
arpl
jb
lea
inc
cli
pusha
test
imul
je
mov
repz
test
jne
mov
sbb
add
aas
mov
pop
mov
jbe
adcb
test
movsl
jle
fucomp
add
outsb
mov
cmp
mov
dec
cmp
sub
into
fisubrs
std
pushl
or
loope
inc
ficoml
ficoml
daa
cmp
jnp
ds
lea
add
add
call
out
and
scas
sbb
mov
push
test
and
in
test
push
icebp
insl
pusha
mov
xchg
out
pusha
fimuls
adc
rcll
dec
dec
iret
sbb
jl
inc
sbb
adc
pop
cmp
add
lea
imul
dec
scas
shl
sub
mov
push
stc
daa
pop
mov
shlb
push
cmc
cwtl
push
pop
orl
mov
mov
push
xor
stos
and
shrb
mov
aad
test
dec
aaa
movsb
jp
mov
fiadds
lods
cld
cmc
dec
or
mov
cli
jmp
sbb
inc
gs
inc
pop
lcall
movsl
inc
sub
adc
jbe
lods
pop
push
and
movsb
dec
pop
addr16
addr16
lock
push
sub
mov
je
cmpsl
or
or
lds
sub
jne
inc
fcmovb
or
add
das
cmpsl
push
subb
movsb
rcrl
fdivl
xor
pop
add
stos
popa
loop
mul
loopne
daa
jns
test
jno
imul
int
xchg
jge
jo
sbb
mov
andb
test
lds
es
shll
call
test
cmc
ja
ss
mulb
sbb
scas
push
sub
xor
inc
cld
xor
xchg
out
popa
jle
sarl
and
out
test
insl
shl
fidivl
imul
sub
mov
pushw
jecxz
mov
outsb
dec
aas
mov
inc
jmp
pop
decb
xchg
call
jb
inc
inc
test
dec
mov
xchg
test
sub
sub
in
setae
inc
call
dec
xchg
stos
xchg
test
sbb
cmp
mov
inc
mov
adc
outsb
pop
hlt
insb
jae
iret
pop
push
mov
xlat
jle
pop
imul
cmc
adc
mov
sub
xchg
mov
or
loop
leave
sub
pop
jne
daa
pop
pop
ljmp
push
xchg
xorl
mov
gs
clc
sub
rcll
aam
rcrl
adc
push
sub
lcall
jg
or
aad
cmp
aas
inc
push
lods
xchg
gs
push
jmp
jo
mov
sub
dec
bound
push
mov
sub
cmpsb
sbb
das
xchg
loope
pop
sbb
pop
scas
fs
aam
inc
mov
xorl
xor
popf
imul
cwtl
cmp
cmp
mov
loopne
lea
add
sahf
shlb
icebp
lret
jnp
stos
dec
rcr
and
out
imul
xchg
aas
mov
and
xchg
mov
scas
mov
xchg
sub
cmp
cmpsl
adc
outsb
push
sub
cltd
inc
push
cmp
cltd
orb
adc
jge
clc
xor
adc
insl
stos
xor
loope
sbb
cmp
fcoms
cmp
xchg
add
sbb
ljmp
xor
dec
dec
push
lods
cmp
or
lods
int3
sarl
lods
sahf
aad
dec
jmp
incl
mov
adc
addr16
aaa
sub
jecxz
imul
mov
jbe
or
sbb
lods
push
rcrb
xchg
adc
pop
xchg
addr16
xchg
imul
xlat
and
or
into
push
sbb
push
sbb
sub
js
sbb
or
sub
hlt
jecxz
xor
mov
jle
jmp
cmp
mov
nop
jns
pop
mov
or
stc
mov
movsl
cmp
ret
orb
mov
push
sub
inc
insb
push
stc
cli
dec
jae
ret
stos
imul
mov
out
jl
push
adc
stc
cwtl
cwtl
jbe
lret
cwtl
bound
lcall
pop
jp
int
in
inc
jecxz
inc
lea
cmp
scas
cltd
mov
cmp
imul
pop
jns
jno
dec
pusha
jle
push
adc
jmp
daa
cmpb
jne
sub
inc
fdivrp
cmp
fldcw
addr16
out
loopne
pop
popf
icebp
push
push
mov
out
push
out
out
sbb
xor
sti
xchg
push
loop
sub
sub
or
push
mov
ss
xor
mov
lods
dec
cmp
outsb
out
stc
mov
test
jbe
dec
push
bound
mov
inc
pop
scas
push
es
sub
ret
fnstsw
fdiv
cmp
xchg
lock
in
mov
xor
lea
mov
pusha
inc
lods
mov
cmc
cli
lds
and
and
ret
test
and
jb
je
pop
jb
mov
stos
lods
adc
mov
sub
out
or
add
in
addr16
xchg
jmp
sahf
or
xchg
in
pop
rorl
popf
push
std
jl
outsb
cmp
ror
repz
aas
xorl
or
fwait
push
or
inc
sbb
jbe
cli
add
jo,pn
xchg
mov
repnz
sub
cmp
dec
xlat
lods
mov
std
dec
jne
ljmp
jmp
xor
jmp
add
outsb
idivb
leave
push
loopne
leave
aas
and
mov
mov
mov
les
int
popf
add
in
gs
push
dec
cmp
sub
push
sarl
fdivr
fnstsw
jbe
cmpsb
mov
mov
call
cmp
push
div
hlt
dec
mov
mov
fnsave
orb
inc
xchg
and
mov
jg
push
jne
les
outsl
mov
int
mov
ss
pop
leave
roll
inc
mov
in
sbb
xor
xchg
popf
testl
xor
push
movsb
outsl
jp
push
fsubl
or
js
lcall
dec
movsl
mov
mov
sarl
fidivrl
xor
sub
cwtl
ja
inc
mov
xlat
push
mov
push
out
push
pushf
aaa
sub
rdmsr
xlat
repnz
mov
pop
add
pusha
out
dec
push
sbb
jae
pop
dec
mov
inc
mov
push
xchg
pop
repnz
or
jmp
xor
mov
cmpsb
adc
mov
pusha
hlt
insl
movsl
loopne
repnz
dec
push
and
in
stc
xchg
movsb
out
adc
loop
mov
scas
ja
ss
dec
mov
dec
leave
cmc
outsb
stos
push
pop
cmp
dec
dec
xchg
in
ret
inc
es
sbb
mov
enter
lock
add
cld
xchg
xchg
mov
mov
cmpsb
mov
and
in
sub
mov
jmp
and
lahf
ss
sub
std
test
into
fcmovu
out
cmp
inc
xchg
loope
adc
xchg
andl
out
inc
xchg
xchg
push
or
stc
lret
pusha
fidivs
sbb
push
lods
cmp
cmpsb
jne
xchg
data16
test
pop
dec
mov
mov
mov
mov
xor
jecxz
dec
mov
cmp
jecxz
popa
or
pop
jo
lock
mov
jecxz
in
fld
jle
xlat
sub
mov
fldl
sarb
cwtl
push
mov
adc
mov
cmp
jbe
inc
lahf
test
xchg
push
enter
insl
jge
add
sbbb
or
cli
sub
mov
cmp
insl
xor
rorb
sub
dec
mov
jge
adc
cld
out
pop
xchg
sub
scas
imul
out
test
std
xor
xor
rclb
adc
push
scas
pop
je
insb
ficoms
mov
adc
sbbl
push
test
js
in
aad
out
xchg
imul
loop
stos
loopne
push
movsb
and
jno
mov
das
inc
addr16
cmp
sti
xor
test
mov
imul
cmp
inc
rcrb
push
mov
adc
pop
sbb
ret
sbb
in
mov
xor
cld
xor
mov
repz
mov
pop
adc
pop
xchg
and
and
filds
inc
push
add
in
aad
push
push
mov
mov
pop
hlt
mov
push
addr16
push
cmp
les
lahf
popa
test
or
jb,pt
mov
outsb
in
dec
lea
dec
out
pop
iret
dec
sub
adc
scas
out
andl
rorb
shrl
sub
xchg
xchg
jae
pop
cmp
push
or
nop
push
out
dec
push
addr16
push
xor
fcomp
jbe
shl
lods
pusha
or
rolb
and
and
push
popa
test
cmp
or
add
adc
sbb
pop
dec
fiadds
push
lds
xchg
xor
fidivrs
sahf
xor
inc
sbb
xor
fisttpll
cld
mov
stos
out
pop
stos
mov
lods
mov
mov
fmull
mov
mov
movsl
ljmp
mov
mov
nop
cmp
adc
add
fildl
nop
mov
push
std
sbb
insl
xchg
and
jge
loop
cmpsb
daa
sub
mov
mov
outsl
addl
in
mov
mov
lea
push
repnz
and
fidivl
or
jnp
stc
mov
lret
popl
mov
outsb
aas
nop
cmp
push
pop
push
sbb
mov
mov
scas
lret
fiadds
dec
xor
mov
sub
jno
in
iret
loope
lods
mov
jp
inc
iret
xchg
pop
add
lret
out
or
xor
jmp
movl
add
ret
fwait
sbb
lahf
mov
mov
testb
xor
pop
xchg
mov
mov
enter
stos
lds
sbb
push
cmpb
ret
inc
test
clc
add
xor
xchg
std
into
into
mov
loope
call
jg
mov
or
fmul
fnstenv
ss
dec
in
mov
lret
pop
leave
fsubp
add
add
jne
xor
fwait
xlat
js
add
jnp
imul
test
jmp
out
lods
movsl
or
or
and
cmp
mov
sub
mov
sbb
mov
mov
fiadds
push
mov
ds
jb
inc
jmp
mov
lret
jbe
js
daa
aaa
push
jo
mov
in
lods
lahf
cltd
rorb
aaa
dec
stc
and
mov
inc
adc
jne
sbb
clc
adc
fimull
dec
outsb
adc
xchg
cmpb
or
jns
or
cld
jmp
inc
les
xor
aaa
jne
bnd
inc
mov
mov
xchg
jbe
mov
aas
popf
div
xchg
es
sbb
dec
xchg
xor
loopne
fs
dec
inc
loopne
repnz
fisttpll
mov
pusha
ret
cli
mov
jl
xchg
pop
push
xchg
dec
fcoml
dec
mov
mov
mov
rolb
gs
cs
jg
inc
sub
mov
int3
jp
popf
cmc
or
mov
imul
dec
fisubl
push
inc
fwait
jbe
out
fstpl
lds
addr16
fistl
and
fldl
mov
popf
xchg
stos
test
in
out
sti
out
or
dec
testb
scas
mov
mov
ss
cmpsl
outsl
dec
repz
insb
adc
data16
xor
loop
cmp
mov
xorb
imul
sbb
or
dec
adc
mov
nop
lret
arpl
sbb
aas
jnp
cmc
xchg
cmovg
jae
mov
popf
mov
jmp
scas
xchg
sarb
mov
imul
dec
in
push
imul
push
xor
out
arpl
aam
xor
sub
cld
lods
les
movsb
mov
loop
push
mov
aas
ret
push
and
inc
test
in
xchg
lea
jmp
dec
and
mov
in
xchg
sub
pop
push
imul
shl
add
mov
test
movsb
pop
repz
adc
jne
js
enter
push
call
imul
jno
dec
filds
mov
arpl
dec
push
inc
lods
xor
push
mov
mov
inc
sub
ljmp
jnp
mov
and
test
jmp
in
rclb
mov
mov
xchg
mov
or
mov
jb
xor
aas
aas
cmp
stos
sar
cmp
fadd
out
adc
mov
add
and
incb
fisubrs
dec
mov
cmp
test
add
mov
xor
inc
push
or
imul
jecxz
je
push
push
cwtl
lods
sbb
and
push
leave
rcrl
xor
dec
dec
or
and
fxch
out
jl
int
test
push
lret
scas
ret
outsl
lret
sub
push
jno
pop
lcall
not
andl
and
mov
inc
ret
insb
or
lret
add
mov
mull
push
sbb
and
push
mov
std
sbb
adc
test
jne
stos
cmp
sub
daa
or
fcmovne
cmpsl
adc
mov
adc
in
rorl
pop
or
imul
aam
daa
cltd
or
fstpt
outsb
lahf
in
negb
inc
cmpsl
bound
cmpsb
push
std
jb
lret
mov
popa
pop
dec
lock
test
ljmp
mov
mov
push
cwtl
or
orb
pop
mov
in
pop
enter
insb
mov
fsubrp
stos
fmulp
cwtl
jp
jp
popl
cmp
rclb
jbe
or
test
add
aaa
shlb
adc
mov
les
sbb
int
es
fstpl
pop
nop
mov
les
out
inc
lea
test
scas
xchg
jg,pn
add
daa
dec
dec
cmp
jmp
pop
sti
pop
cltd
jmp
inc
push
xchg
mov
notl
mov
inc
fistps
int
jecxz
xor
testl
mov
loop
push
ss
es
mov
jns
inc
jbe
sub
mov
and
sub
outsb
mov
mov
sahf
xor
hlt
into
inc
xor
fisubrs
xchg
in
cmc
js
addb
ret
xchg
mov
push
mov
aam
fsub
int3
fs
or
or
out
jge
push
mov
xor
mov
or
lock
xlat
sub
jecxz
stos
call
cmpsl
sub
lret
fisubs
adc
inc
jnp
sti
mov
adc
add
sbb
outsl
mov
jbe
jp
mov
xor
mov
rcll
cltd
xor
out
mov
mov
jnp
pop
mov
dec
sub
dec
inc
out
fdivl
jns
mov
mov
loope
lods
and
push
xor
add
add
fwait
cmpsb
mov
and
pop
mov
outsb
and
cli
mov
add
out
in
jle
xor
jp
push
pop
push
push
call
int3
fdivs
out
std
ds
outsb
leave
test
outsl
outsb
in
lods
in
and
repz
sub
adc
push
sti
pop
cmp
mov
cld
sbb
inc
mov
mov
mov
pushf
jae
mov
in
or
mov
xor
push
imul
aaa
repnz
jae
mov
jns
sbb
enter
ss
fs
and
cmpsb
inc
test
sub
jl
out
add
jmp
inc
cs
fmull
pop
or
cmp
test
pop
dec
xchg
imul
adcb
ds
sub
negl
xor
daa
std
shrl
dec
cmp
dec
dec
mov
ss
push
push
push
sbb
cmp
xor
inc
aas
xchg
xchg
or
rcrb
scas
push
cmp
adcl
pop
mov
fldenv
cmpsl
sub
js
cmp
ljmp
dec
mov
pop
inc
xorl
out
mov
jns
ret
mov
xchg
imul
inc
mov
mov
divb
scas
ret
jbe
sub
insb
adc
fbld
cmp
jle
ds
adc
add
rcrl
add
pop
lods
fidivl
ret
loope
cmp
xchg
enter
mov
popa
and
jbe
jo
daa
inc
dec
pop
mov
and
push
dec
scas
jg
or
cmp
mov
popa
mov
or
inc
hlt
insl
imul
xor
fstpt
xchg
push
ret
jo
xor
jae
daa
cs
push
inc
sbb
mov
push
push
shll
imul
les
sarl
popa
ret
ret
or
fwait
nop
inc
in
pushf
sbb
or
out
iret
cltd
push
jg
add
int3
or
mov
or
xchg
dec
push
xchg
shll
lock
xchg
ds
hlt
jmp
mov
jns
in
or
mov
pop
add
ja
repnz
mov
enter
mov
inc
mov
sbb
cmp
dec
pop
fcmovnb
mov
cmp
push
nop
add
xor
and
es
sbb
mov
mov
ficoms
push
inc
imull
rclb
push
rorl
rol
dec
mov
inc
cwtl
clc
or
imul
repz
pop
ss
inc
push
cmc
push
push
mov
ss
inc
aas
pop
cmp
subl
xchg
and
mov
add
in
xor
lods
movl
jl
jns
sbb
mull
sbb
outsb
hlt
jmp
lea
dec
ja
loope
jne
sbb
out
out
ds
lcall
daa
lahf
ret
push
lods
mov
inc
sub
mov
daa
je
shlb
insb
mov
mov
clc
repz
fs
xchg
xchg
mov
mov
mov
insb
mov
push
add
outsl
sub
mov
inc
ja
test
push
sub
jecxz
iret
jl
jae
outsb
cmp
lock
jecxz
xor
nop
sub
push
decl
dec
dec
jbe
ja
popf
andb
mov
dec
jmp
pop
pop
push
movsb
mov
pop
out
sub
sahf
ficomps
rcll
mov
hlt
or
mov
jnp
pop
pop
pop
inc
repz
cltd
clc
ljmp
xor
int
and
sbbb
rorl
mov
ret
insb
jne
mulb
push
addl
out
or
hlt
fnstcw
sbbb
test
lcall
mov
cmpsl
test
pop
fdivrl
inc
popf
mov
mov
ret
pop
cli
jns
or
or
cltd
xor
mov
pop
push
pop
gs
xlat
movsl
out
stos
mov
out
xchg
into
jle
arpl
mov
xchg
dec
inc
ljmp
jnp
into
lods
add
jl
pop
repnz
adc
fwait
rolb
xchg
inc
ja
mov
dec
mov
repz
fwait
popl
push
sbb
les
test
dec
push
arpl
repz
xchg
mov
mov
popf
mov
inc
push
test
loop
pop
or
mov
test
mov
adcb
jne
or
xchg
les
loopne
les
push
dec
loopne
leave
inc
shrl
mov
and
mov
add
out
cmpsb
xorb
imul
sbb
in
sbb
loopne
jle
cli
scas
stc
or
xchg
mov
lcall
mov
jp
mov
dec
pop
btr
aaa
cmc
xchg
stos
inc
shlb
dec
test
mov
out
xchg
cmp
ljmp
in
add
sub
fs
lds
and
or
test
jne
jmp
shll
shll
dec
out
push
mov
stc
add
jg
mov
lahf
popl
dec
push
dec
mov
cmp
dec
xor
pop
mov
xor
xchg
dec
pop
fyl2xp1
in
jae
bound
push
call
pop
ror
jg
sbb
dec
mov
cmp
js
mov
shrb
test
sub
cld
shl
cmp
push
xchg
and
fsubrl
push
jno
push
add
and
cwtl
xor
jne
es
mov
dec
jno
out
out
bound
push
pop
adc
mov
push
adcl
add
mov
dec
out
mov
arpl
incb
mov
pusha
add
push
repz
pop
push
sarb
fistpll
imul
mov
ja
in
or
mov
cmp
enter
leave
push
jns
cmp
loopne
lds
movsl
sbb
fldcw
mov
cmpl
jne
xor
xor
inc
fidivrs
aad
pop
mov
cltd
mov
mov
push
pop
insb
add
ret
popa
imul
sub
and
inc
pop
mov
rorl
sbb
iret
dec
lret
repnz
lods
push
dec
stos
mov
sbb
enter
mov
lret
xchg
rorl
jne
loop
mov
mov
or
shll
addr16
push
cmp
inc
sub
in
shll
or
mov
mov
mov
xor
leave
dec
rorl
pop
sbb
jae
pop
push
cmp
sub
rorb
orb
adc
add
sub
inc
adc
dec
sbb
jge
filds
outsl
mov
std
inc
mov
daa
xor
into
inc
dec
pop
mov
rol
pushw
outsb
pusha
cmpsb
aas
push
aad
inc
ja
dec
xchg
popa
mov
mov
mov
mov
inc
inc
jg
sahf
cmp
out
enter
repnz
push
or
shrl
int
cmp
into
sub
es
test
stos
xor
xchg
dec
mov
and
test
cmp
hlt
ljmp
jae
aaa
cld
xor
sbb
aam
out
aam
cmc
xor
jmp
out
adc
sahf
test
outsb
ss
int3
cmc
out
mov
inc
jae
push
fcompp
lahf
and
pop
and
cmp
in
sbb
les
jo
aad
mov
imul
stos
dec
int
dec
cmpsb
jb
adc
or
pop
scas
int
test
dec
jg
push
aad
fs
mov
dec
mov
scas
mull
add
inc
xlat
pop
std
mov
fistpl
or
mov
insb
dec
jecxz
push
jbe
enter
and
mov
sbb
xchg
add
xor
jmp
insl
mov
lea
sbb
iret
inc
push
scas
push
jne
and
in
mov
loop
mull
cs
xchg
add
xor
hlt
ja
stc
shr
ljmp
icebp
lret
movsl
hlt
inc
rcrl
stos
shrb
dec
xor
sti
fs
data16
push
or
stos
popf
addl
adc
adc
push
or
fists
out
mov
clc
fisubl
or
sub
dec
jnp
dec
push
nop
ret
scas
mov
ss
loop
and
push
es
mov
sub
pop
movsl
dec
arpl
pop
in
testb
popa
adc
sbb
and
and
inc
fcompl
and
fsubrs
adc
jne
lea
cmp
sbb
cmpsb
sub
inc
rcl
sub
pop
jo
stc
test
inc
xor
cli
sahf
push
mov
imul
std
jle
and
lods
shr
lods
mov
imul
or
and
out
and
lret
sub
in
lret
sbb
dec
push
shl
in
loopnew
fmull
dec
push
sbb
movl
in
add
dec
popf
cmp
add
cwtl
push
sbb
pop
mov
lcall
push
or
in
fsubrl
pop
jae
push
push
test
imul
mov
in
icebp
lahf
xor
cmp
pop
sbb
push
dec
jnp
adc
jnp
call
cmc
or
stos
std
mov
pop
and
rolb
xor
cmp
or
mov
pushf
xchg
and
shl
js
adc
std
inc
addr16
xchg
out
inc
decl
idivl
js
fmuls
fwait
xorl
cmp
mov
adc
xor
push
clc
mov
mov
cs
inc
inc
push
jbe
loop
ljmp
jne
jns
jno
cld
inc
xchg
pop
outsl
inc
clc
insl
imul
or
mov
jo
dec
lret
xlat
insb
js
xor
sti
add
jns
pop
cmpsl
xor
mov
movsb
sub
in
push
pop
mov
pop
or
shll
stos
mov
mov
jo
adc
jecxz
add
cmc
mov
lock
mov
shlb
lds
jl
fdivp
push
popa
leave
fldl
adc
mov
xchg
in
push
jl
pop
mov
pop
lods
rcr
jmp
pop
shll
into
mov
dec
push
mov
adc
aaa
cli
subl
sbb
mov
xchg
negb
adcb
in
test
iret
stos
cmp
fwait
mov
in
test
jle
jns
mov
cli
imul
sahf
push
sbb
and
dec
sub
repz
stc
xor
fdivrs
int3
rep
inc
test
imul
outsl
adc
push
cmp
fisubs
cs
in
fwait
cmpsb
xchg
and
arpl
mov
data16
cmp
leave
mov
insl
mov
xchg
aad
roll
lret
cs
push
push
inc
jne
test
cmpsb
loope
sub
push
call
shll
lea
jns
jnp
jmp
fs
dec
add
cmpsl
push
jns
ret
lahf
mov
cli
dec
cmc
mov
data16
shll
inc
mov
cltd
or
cmp
jo
inc
dec
and
test
pop
shl
add
dec
mov
pop
pop
mov
scas
loopne
mov
mov
ljmp
mov
loope
fists
lea
call
xor
sbb
jg
jmp
mov
pushf
push
notl
rcrl
into
aaa
sub
add
cli
lret
clc
add
es
fsubl
test
pusha
cmpsl
pop
icebp
jp
movsl
sbb
add
int
push
das
xchg
sbb
jl
mov
bound
mov
test
inc
cli
jge
in
or
mov
test
gs
add
in
dec
and
inc
outsb
cmpl
cmpsl
adc
adc
jnp
lods
push
inc
sti
and
dec
rcrb
cmp
sahf
mov
loop
cmpsb
push
add
dec
cmpsb
mov
or
push
and
xchg
sbb
sbb
jae
loopne
test
sbb
dec
inc
mov
pop
adc
in
mov
ja
jne
sbb
aaa
int3
jae
fdivrs
lahf
and
push
cltd
cmp
pop
aaa
sbb
mov
jmp
lahf
imul
in
sub
sub
pop
push
jmp
rcll
xchg
ss
pushf
into
shlb
gs
or
mov
cmp
mov
sub
lret
jb
jo
loop
cmp
jns
push
movsl
adc
cs
popa
fnsave
aaa
out
sbb
mov
aam
jno
mov
push
mov
mov
dec
movsl
xchg
out
arpl
mov
cmc
popf
dec
or
shlb
cli
cmp
in
xor
aas
mov
jg
inc
addb
ja
pop
xchg
push
cltd
sbb
orl
shrl
int
push
add
jno
and
add
pusha
lret
xchg
fs
inc
cli
push
jecxz
cmp
ret
insl
in
aad
pusha
test
das
jno
mov
and
xchg
sbb
dec
sti
int
icebp
repnz
push
cld
idivb
inc
fmuls
fdivs
and
and
cwtl
popf
les
mov
mov
dec
fsts
cmp
test
xor
je
test
scas
iret
popa
inc
out
fmuls
cmp
push
sub
cld
adc
leave
bound
out
cmp
jnp
xor
adc
test
jmp
xchg
movsbl
scas
imul
in
inc
mov
add
sub
cmpsl
adc
movsb
cmp
jmp
shrl
push
mov
adc
push
test
and
pop
ficompl
mov
adc
clc
aam
mov
mov
and
nop
mov
add
pop
inc
mov
jge
inc
fstps
addb
sub
bnd
dec
mov
xor
sub
out
cmp
pop
call
xchg
push
aaa
or
pop
xchg
seta
insb
inc
jg
jge
or
rorb
popa
sahf
push
sbb
jmp
in
in
sbb
pop
fidivrs
mov
push
pop
flds
test
pop
repnz
add
cli
test
ljmp
jmp
push
mov
out
fwait
mov
lahf
push
cmp
inc
dec
out
repz
imul
cmp
sbb
fwait
out
jo,pt
pop
scas
mov
sbb
mov
std
aaa
cli
mov
mov
bound
hlt
cmpsl
cmp
push
mov
sbb
and
mov
aas
repz
std
lcall
or
loop
sahf
push
jb
ret
aad
fidivl
movsl
das
push
adc
pushf
xchg
add
mov
sahf
push
out
stos
mov
jo
push
pop
and
push
adc
dec
pop
mov
lods
jl
jns
sbb
pop
sbb
in
rorb
imul
add
mov
scas
mov
lock
fldt
popa
fwait
cld
shll
and
sbbl
in
icebp
mov
jp
xchg
xchg
ret
jae
adc
or
lahf
daa
mov
cli
fnstenv
daa
dec
mov
pop
push
cld
mov
lret
dec
arpl
mov
int3
stos
adc
push
xlat
popa
jns
inc
mov
lock
lods
dec
gs
leave
inc
push
cmp
rclb
sub
jb
lea
mov
pop
cmpsb
nop
loope
mov
fsubrs
add
or
cwtl
nop
push
pop
push
stos
sbb
out
int
pop
mov
fnstsw
leave
sbb
int3
nop
inc
inc
push
into
sahf
cltd
iret
cmp
cmpsb
add
movsl
insb
mov
ds
ds
fisttps
lea
shr
jo
lods
and
jb
or
out
pop
dec
out
add
in
call
or
mov
mov
repz
mov
xor
mov
push
xor
negl
roll
in
out
dec
jge
aam
pop
adc
clc
lea
pop
adc
mov
mov
lret
aas
mov
add
lods
or
and
loop
lock
insl
mov
mov
sub
push
mov
std
iret
dec
cmp
cs
or
cmp
and
adc
sub
push
cmp
sti
lret
sub
ret
push
cmp
sub
sub
movsl
lods
pop
and
push
addr16
je
cmp
outsl
pop
cmp
sub
add
testb
mov
mov
dec
sub
test
and
out
pop
jno
popa
lock
dec
pop
cmp
test
sub
mov
out
sahf
dec
stos
dec
movsb
std
xchg
cmp
cmp
lahf
cmp
call
cmpl
frstor
sbb
pop
ljmp
fisttpl
push
insl
ss
xlat
iret
dec
adc
ret
or
add
les
int
dec
test
ljmp
cmp
mov
sbb
mov
dec
sub
or
xchg
idiv
mov
jmp
loope
xchg
popf
xchg
adc
fnsave
pop
xor
dec
test
shlb
mov
rcrl
pop
mov
mov
jmp
popf
nop
lea
xchg
inc
pop
inc
jecxz
in
inc
xor
outsl
cs
cmp
dec
xchg
int3
and
repz
cmp
nop
jae
dec
imul
pop
jmp
leave
mov
or
adc
mov
icebp
shrl
push
cmp
jno
gs
rcl
fisubrl
jo
icebp
jns
addl
mov
loop
rolb
cmpsl
xchg
sbb
std
aas
pop
push
jnp
arpl
cs
int3
jbe
stos
sub
inc
add
sarb
insb
stos
lret
sub
sbb
or
loope
in
mov
scas
aas
leave
inc
dec
pop
xchg
fbstp
icebp
sbbb
call
cmc
sarb
and
mov
mov
call
lock
in
jns
and
fists
xchg
and
test
fsubr
sbb
sbb
in
call
mov
pop
xchg
cmpsb
sub
outsl
movlps
test
dec
ja
push
aam
insb
cmpsl
mov
push
gs
pop
into
add
xchg
mov
mov
push
xchg
push
or
les
lock
jno
fisttpll
icebp
jg
scas
fucomp
je
mov
and
or
loope
xchg
cmc
fs
xor
int
lahf
cli
dec
andl
jo
sbb
test
les
push
test
in
xchg
jno
fadd
push
push
dec
jno
cwtl
testl
cwtl
jns
jle
std
inc
pop
into
stos
add
xlat
sub
pop
pop
adc
outsl
dec
xchg
out
xor
stos
mov
jmp
test
pop
lods
std
ret
sub
nop
dec
adc
push
mov
call
mov
sbb
xlat
daa
dec
cld
mov
into
cmp
mov
dec
outsb
xor
rcll
lods
mov
daa
pop
sti
out
cmp
imul
mov
cmp
push
jae
adc
fistpll
push
and
and
in
sbb
hlt
xor
inc
enter
mov
mov
out
pushf
sbb
lret
sub
jmp
or
and
and
insl
out
lock
push
pop
xor
sub
mov
cmp
js
mov
inc
add
or
push
mov
pop
push
cmp
or
mov
je
sbb
js
vaddss
js
mov
cwtl
test
iret
ss
loopne
leave
push
push
mov
xchg
pop
add
sbb
or
rcl
sub
adc
xchg
xor
testl
int
imul
adc
arpl
dec
popf
jp
jbe
xor
push
pop
adc
dec
push
cmp
xor
jmp
push
inc
pop
mov
dec
test
out
inc
out
cmp
mov
pop
out
push
cltd
mov
jle
pop
insl
lret
in
xchg
inc
sub
and
xor
int
pop
push
in
into
pop
cwtl
fdivr
cltd
mov
out
sub
imul
mov
pop
sar
mov
pop
into
xchg
lea
xor
xchg
jb
inc
imul
sahf
ljmp
popf
xchg
add
cmp
out
lret
in
lea
cmp
inc
imulb
push
fisttpl
mov
rolb
mov
lods
jge
and
hlt
mov
cli
push
idivb
int
sub
outsb
mov
and
pop
mov
xor
les
call
lods
cs
xchg
adc
loopne
notb
rol
movl
loope
push
xor
jo
out
aad
in
mov
inc
jo
push
jne
ret
jae
stos
inc
sub
cli
push
outsb
js
das
pop
dec
nop
mov
add
popa
mov
lea
icebp
inc
movsb
test
xor
xchg
xor
sub
push
or
or
daa
mov
xor
rorl
adc
test
cmc
mov
stc
push
cmp
test
cmp
rcr
cmpl
test
push
ds
push
outsb
push
or
and
adc
sbb
cli
int
inc
mov
fdivl
arpl
daa
mov
cmp
fistpll
pop
dec
xchg
xchg
adc
ds
scas
int3
mov
cmp
jle
xchg
xchg
arpl
clc
dec
popf
ja
or
movsl
xchg
pop
or
dec
mov
lea
faddl
inc
andb
enter
repnz
jge
inc
xlat
inc
adc
daa
jns
fwait
mov
mov
adc
mov
sarb
iret
call
and
mov
lock
iret
or
mov
mov
xor
xchg
jmp
mov
sbb
imull
add
addr16
sbb
inc
jne
shr
mul
icebp
mov
fisttps
push
sub
mov
pop
sbb
jno
mov
push
add
outsl
sbb
js
imul
ja
sub
imull
aas
add
dec
lds
sub
push
inc
mov
fstp
ja
and
inc
sarl
ja
cltd
call
jmp
fimull
loop
push
mov
das
cltd
adc
int
mov
into
pop
cmpsb
cmc
jmp
jl
mov
xchg
and
push
je
push
dec
push
adcl
insb
icebp
cmc
and
fadds
cmpsb
dec
imul
jb
fiaddl
mov
outsl
lea
adc
mov
xlat
mov
jl
out
sub
cld
das
lahf
mov
jge
push
pusha
dec
add
inc
jle
out
pop
addr16
in
shll
or
fs
scas
add
shll
and
iret
cmp
adc
xchg
call
mov
imul
movsl
xor
push
daa
std
insl
xor
in
mov
in
das
cmp
pop
clc
mov
xchg
aaa
xchg
xor
movsb
dec
dec
loopne
pop
in
jb
jns
scas
into
dec
testb
loop
cs
loop
filds
mov
add
add
addr16
dec
aas
inc
mov
adc
mov
and
clc
inc
les
ja
sub
adc
lret
jne
adc
add
mov
and
aam
ret
decl
std
ss
aam
sbb
rol
fs
aas
inc
aas
leave
xchg
jmp
xchg
sbb
mov
icebp
dec
adc
cltd
lea
lahf
insb
sbb
jne
cmp
dec
push
outsl
jp
and
inc
pop
xor
ds
out
sbb
jl
sbb
arpl
inc
out
pop
dec
fnstenv
mov
mov
andb
push
jecxz
jmp
fcmove
mov
andb
stc
push
imul
cmp
mov
mov
ret
scas
bound
mov
mov
mov
fst
add
lods
push
dec
inc
dec
mov
mov
out
xchg
pushf
mov
es
dec
cli
lods
mov
and
pop
mov
es
xchg
or
inc
das
dec
cltd
rcrb
mov
jmp
or
out
insl
pop
dec
jne
test
lods
add
pop
icebp
dec
test
and
imul
stos
mov
stos
repnz
bound
mov
fisttpll
cmp
lcall
pop
das
mov
icebp
xor
xchg
loopne
and
xorl
cmp
nop
repnz
aaa
out
test
imul
adc
adc
addr16
jb
pop
lahf
gs
or
cmpb
shrl
in
push
adc
rcrb
inc
xor
jo
mov
aas
mov
lds
xchg
cmpsl
and
cmp
loopne
and
sbb
popf
inc
cmpsb
mov
loopne
jae
int
mov
iret
incl
mov
and
cltd
or
call
pop
mov
cmp
inc
xlat
sti
negb
sub
dec
setl
jne
push
xlat
movups
dec
cmc
vaddsubps
push
or
xor
orb
test
data16
js
mov
dec
or
and
xor
mov
rorl
mov
sub
fstpt
jecxz
shl
adc
test
arpl
shll
inc
fwait
adc
pop
outsb
pop
adc
dec
addl
sarb
xchg
addl
aas
popa
das
cmc
mov
pop
shlb
xchg
fistl
mov
jmp
int
mov
mov
movsl
xchg
jnp
and
sbb
mov
or
mov
aas
and
mov
dec
lock
dec
lret
sbb
aas
cwtl
pop
popf
adc
lret
xchg
and
jb
jno
cltd
push
std
scas
mov
xor
push
pushf
push
addr16
ret
or
inc
repnz
sahf
pop
fs
imul
fnstcw
pop
or
insb
xor
xchg
outsl
sbb
mov
dec
frstor
pop
inc
sbb
gs
and
fimuls
dec
xchg
mov
adc
js
xchg
add
lret
int3
das
add
popf
dec
into
dec
outsb
enter
mov
pop
mov
push
pop
or
jb
pop
iret
mov
jns
data16
jmp
xorl
xchg
in
jo
xchg
hlt
xchg
dec
enter
in
cmp
cmpsb
cmpps
in
xor
jl
sti
push
inc
jae
adc
inc
popa
adc
sub
int3
mov
lahf
movsb
push
dec
out
shll
pop
sbb
and
ljmp
push
xchg
test
test
jne
aad
imul
jp
ljmp
and
and
and
push
stos
ret
ljmp
enter
mov
cltd
adc
stos
pop
mov
mov
cmp
jmp
pop
cmp
lds
mov
add
cmp
les
mov
push
jmp
mov
mov
push
vmovntps
lret
xchg
jb
mov
jg
sbb
pop
xchg
sub
test
fisubs
ja
cs
out
push
dec
push
fisttpl
out
gs
es
xor
dec
jb
pop
push
out
arpl
bound
mov
pop
sub
in
test
jb
dec
inc
out
out
lds
add
xor
dec
sahf
xor
jae
jle
add
xchg
arpl
popa
mov
test
add
sbb
hlt
xchg
xchg
stos
push
sub
test
loop
int3
mov
pop
push
push
sbb
add
mov
std
pop
jmp
ljmp
mov
adc
push
stc
cmp
add
lock
addr16
cmp
sbb
push
lahf
add
xor
cmp
enter
inc
xlat
dec
aad
lds
xlat
test
pop
repz
push
stos
cmp
cmc
dec
in
pop
cld
lcall
mov
pop
sbb
lods
icebp
insb
popa
dec
fxch
sbbl
bound
jno
jmp
or
movsl
pop
aaa
in
test
mov
pop
mov
andb
jl
dec
push
or
cltd
xchg
or
mov
jae
or
xor
repz
sti
lret
rorb
out
fbld
pop
and
jecxz
cmc
dec
enter
jge
pushf
ret
mov
or
pminsw
pusha
push
std
cmp
mov
cmp
xor
stos
mov
iret
and
add
les
push
or
mul
cmpsb
or
dec
out
xor
frstor
mov
test
enter
negb
mov
lea
data16
and
mov
addr16
mov
xchg
add
xor
mov
sub
andb
xor
cmp
mov
iret
mov
js
inc
adc
xchg
mov
fdiv
out
jbe
jo
pushf
mov
mov
in
in
cmp
inc
dec
mov
rorl
dec
aad
and
sub
shrl
inc
cmp
cld
bnd
inc
daa
sbb
pop
push
pop
jmp
mov
mov
mov
lods
dec
lcall
adc
loopne
pusha
mov
jne
cs
bound
int
push
shl
imul
and
xorb
pop
push
add
mov
jle
or
fcomps
inc
cmp
fnstenv
xlat
dec
lods
jg
int3
or
sub
and
pop
cld
ret
jo
adc
xor
mov
fcmovu
jg
cmp
jne
or
fs
xor
pop
add
cwtl
lret
xchg
push
outsl
fs
arpl
in
xchg
lea
inc
sub
imul
push
sar
dec
jno
push
mov
jns
push
and
push
jmp
xor
test
in
dec
mov
sbb
add
cmp
rorb
mov
fidivrl
dec
iret
leave
push
xchg
rcll
add
subb
push
xchg
mov
and
dec
and
add
out
adc
mov
fmulp
rcrl
sbb
repnz
int3
add
in
mov
mov
pop
ss
mov
dec
mov
mov
in
pop
xchg
push
not
dec
addr16
jbe
int
push
xchg
stos
fldenv
sahf
mov
add
adc
repnz
adc
pop
adc
mov
add
lods
lahf
cld
xor
push
sahf
aam
or
mov
iret
mov
jns
les
lods
daa
fcomp
mov
shll
xchg
mov
fdiv
add
clc
rorl
or
imul
xchg
ret
pop
xchg
iret
sub
cmpsl
sbb
xlat
ds
jbe
mov
lcall
xor
mov
rcrb
xor
call
dec
mov
aas
icebp
in
out
adc
test
mov
xchg
inc
add
jb
dec
mov
orb
in
sub
jge
loop
ljmp
xor
sbb
andl
dec
sub
out
mov
xchg
jmp
xor
cmp
pop
sti
sahf
daa
popl
lcall
in
mov
xor
aam
and
xchg
adc
mov
mov
adcl
imul
mov
jae
fs
pop
cmpsb
repnz
mov
cld
fsubrp
mov
add
stc
cmp
pop
push
cmp
ds
sub
push
es
cmp
xchg
cmp
out
jo
mov
adc
mov
insb
dec
xor
inc
mov
dec
push
iret
lahf
xchg
imul
leave
daa
cwtl
sub
dec
xchg
ss
mov
cmpsl
dec
cmpb
jp
jae
out
popa
out
inc
bound
daa
cmp
inc
fisubrl
idivb
jae
rcl
scas
in
sbbb
cwtl
jmp
pop
xor
push
mov
push
sbb
mov
push
leave
pop
mov
jmp
push
enter
pop
sbb
in
fistps
adc
xchg
daa
push
mov
enter
popl
lret
cld
pop
inc
xorl
sub
negb
cmp
popa
xchg
sub
outsl
jb
and
movb
std
stos
adc
cltd
ljmp
dec
push
pop
scas
dec
mov
in
pop
sub
pop
mov
pop
cs
and
adc
pop
sbb
adc
das
push
jae
sub
xchg
shrl
out
cltd
push
dec
icebp
scas
fistpl
lock
and
aad
pushf
fcomi
es
sub
xchg
fldl
sbb
imul
xchg
das
out
js
pop
xor
popa
push
bound
lock
sbb
inc
mov
rorb
stc
pop
add
das
dec
mov
push
and
mov
fidivl
cwtl
leave
out
add
fimull
push
dec
jmp
xchg
add
inc
cmp
std
add
jbe
jecxz
push
sbb
subl
sbb
push
dec
nop
xor
aaa
lahf
les
jbe
adc
out
shl
nop
dec
mov
cmpsb
repz
loope
scas
faddp
mov
addr16
rolb
aas
cli
insb
pop
inc
stos
xor
sub
dec
lcall
pop
js
lret
lret
es
idivl
xchg
pushf
aam
scas
xor
repz
cs
xchg
fmuls
xor
xor
aad
rcrl
ss
out
ljmp
mov
pop
lcall
mov
dec
filds
dec
jg
es
fildl
inc
push
pop
xor
sub
loop
es
rclb
ret
jp
lret
mov
aas
dec
ss
add
jns
in
es
cmp
mov
sarl
insl
addr16
rcll
adc
mov
push
cmc
sub
enter
sahf
popa
popa
sbb
popf
mov
lret
arpl
cmp
jnp
mov
sub
sub
push
andl
lahf
or
or
xor
ds
hlt
in
test
jle
test
xorl
xchg
jg
cwtl
fsubrl
daa
in
dec
and
cltd
push
jbe
mov
scas
mov
and
movsl
out
loop
out
jno
xor
lods
add
dec
fldl
mov
cmc
mov
jecxz
addr16
sti
int
aaa
addr16
ret
push
mov
jne
sbb
push
scas
dec
mov
outsb
mov
push
mov
stos
mov
int
mov
test
mov
movsl
aad
push
xchg
xorb
dec
xchg
lcall
sub
xchg
push
adc
int3
xor
popa
jns
dec
lcall
cmp
mov
loopne
dec
adc
mov
cld
cltd
pop
ja
fiadds
les
jg
clc
clc
into
scas
ja
daa
xchg
mov
test
pop
xlat
lret
pop
dec
inc
mov
inc
daa
aas
dec
jns
push
jmp
and
incl
jnp
xchg
testl
popa
mov
mov
jge
inc
push
lcall
andl
nop
push
cmp
rcll
jle
mov
das
jb
lock
sub
pop
mov
push
sub
pop
adc
stos
out
inc
jbe
sbb
faddl
scas
lods
iret
push
sub
into
dec
pop
sbb
cmp
addr16
fimull
pop
cmpsl
arpl
xor
jp
pop
decb
xchg
and
std
and
loopne
inc
hlt
ds
xchg
imul
sub
pop
addl
push
xor
leave
gs
repz
sbb
inc
pop
and
mov
stos
mov
mov
out
movsl
mov
xchg
mov
ror
pop
push
sbb
mov
negl
lock
outsl
xchg
jle
imul
scas
lret
into
mov
test
mov
xor
bound
shll
out
lahf
fnstsw
push
pop
bound
fimuls
in
and
iret
movsb
insl
imul
ret
shrb
cli
xchg
xchg
les
mov
add
mov
outsb
cwtl
lods
xchg
and
dec
pop
xchg
aam
loopne
mov
cmpsl
shlb
shrb
add
xor
mov
enter
or
xor
into
imul
test
fchs
call
xor
sbb
or
rcl
push
sub
scas
cmp
stos
pop
cmc
dec
fildl
cltd
lods
and
mov
push
push
mov
cmp
loopnew
cmpsb
ljmp
sbb
sahf
insb
sub
imul
pop
data16
out
or
xchg
ds
mov
jae
movsb
push
lods
pop
icebp
mov
std
iret
shlb
xor
xchg
push
pop
mov
js
dec
or
outsl
push
lahf
xor
sub
das
or
jnp
cmc
adc
inc
adc
stos
ret
pop
push
adcl
call
fsubs
adc
stos
popf
out
es
repz
fidivl
sbb
jge
in
js
xor
inc
jns
cmpsb
mov
push
fwait
inc
xchg
int
out
xor
inc
push
sbb
cwtl
inc
adc
xor
aam
push
stos
dec
push
in
lods
xchg
push
mov
sbb
mov
aas
icebp
lds
pop
popf
jp
scas
push
mov
inc
fstpl
xchg
add
nop
or
aas
les
pop
inc
leave
jae
out
jns
lods
call
and
lret
xlat
adc
stos
lods
inc
mov
xor
dec
jle
sahf
pop
mov
push
pop
js
arpl
pop
inc
inc
pop
jg
xor
mov
in
jae
jae
idivb
mov
outsb
adc
mov
inc
cmp
jg
xor
inc
and
shrb
sahf
cmp
icebp
cmpsb
repnz
mov
xor
and
xchg
dec
lods
push
ds
data16
mov
pushf
adc
xor
outsl
push
mov
out
dec
popf
dec
inc
dec
dec
mov
lcall
mov
scas
push
jo
mov
jle
jno
cwtl
stos
loopne
sarl
test
out
jo
jecxz
inc
call
pop
cli
das
inc
mov
lret
jo
cmpl
mov
dec
xchg
xchg
push
xor
adc
xchg
dec
sbb
cmpsl
loop
fisttpll
sti
in
jecxz
adc
push
xor
out
and
pop
or
hlt
out
xchg
pusha
cld
cmp
stc
es
inc
pop
sub
or
test
push
push
mov
das
fisttpl
cmp
movsb
lods
and
mov
pusha
or
add
push
jnp
xchg
xchg
ja
data16
lret
mov
neg
clc
pop
cmp
cmp
cmc
mov
pop
sbb
xchg
cwtl
xchg
dec
pop
push
pop
lods
push
je
mov
cli
shrl
pop
imul
daa
cltd
lret
pop
adc
outsl
in
mov
cld
outsl
repz
jbe
scas
scas
push
inc
and
test
aaa
push
fists
fdivp
dec
mul
movsb
test
lret
clc
push
call
popa
pop
xor
mov
jg
sbb
push
outsb
sbb
xabort
push
dec
leave
push
pop
pop
xor
lods
dec
das
dec
leave
out
pop
inc
push
ds
pop
mov
mov
ret
pop
inc
rol
jg
pushf
pop
sbb
mov
cmpsl
pop
inc
push
scas
jmp
dec
xchg
push
sarl
mov
test
inc
jle
push
in
fdivrs
les
push
xor
xor
imull
lock
or
adc
pop
ret
loopne
loopne
xchg
ret
and
sub
jmp
sub
adc
data16
cs
mov
inc
daa
lahf
cmp
sahf
and
or
push
inc
adc
push
xor
jae
enter
adc
sbb
sub
inc
and
pop
or
test
adc
daa
iret
dec
insl
popa
adc
or
xor
jecxz
mov
fwait
scas
inc
shr
pop
xchg
dec
or
fwait
mov
fwait
push
ret
sub
ret
cmp
and
xchg
cmp
insl
pop
adc
insb
std
push
es
push
xchg
jbe
out
inc
xlat
outsb
fnsave
gs
mov
out
repnz
insb
fstpt
sarb
sbb
push
mov
out
mov
xchg
and
leave
rcll
push
cmp
testl
clc
jns
inc
mov
mov
movsl
aas
loopne
sub
into
mov
cmp
lock
leave
sbb
pop
out
les
push
or
xchg
adc
nop
mov
insb
mov
mov
cmp
sub
dec
lods
or
scas
insl
cltd
cmpsl
mov
shrl
sub
out
int3
ds
loop
dec
out
or
aaa
ret
pusha
aam
cli
lods
jb
adc
rcr
fidivl
pop
sub
xor
dec
push
dec
or
rcrl
cs
clc
inc
sub
push
es
out
push
gs
cli
stos
cmpl
lcall
mov
imul
lahf
sub
sub
cwtl
mov
add
out
and
push
and
outsb
jmp
or
lret
jne
mov
or
daa
ljmp
ror
pop
add
pushf
xchg
jbe
pop
rcrb
repz
ss
sub
sbb
mov
and
in
loope
out
cli
mov
sbb
shll
mov
cli
dec
mov
dec
fisttpll
mov
and
lods
inc
inc
insb
shrl
scas
aas
push
mov
push
loope
movsl
mul
xchg
and
xchg
inc
movsw
and
stc
cmpb
mov
in
inc
into
popf
sar
sub
cs
mov
add
xchg
das
notb
mov
lret
mov
inc
xchg
inc
and
sub
dec
inc
jg
dec
jnp
mov
sarl
icebp
bound
adc
push
lahf
pop
subl
add
and
cmp
scas
stc
ds
xchg
jnp
xchg
lret
pop
xlat
rcll
stos
mov
repz
pop
in
inc
in
add
push
inc
addl
loopne
inc
push
popa
add
mov
lods
sahf
pop
push
or
xchg
cmp
xor
inc
inc
jne
jmp
shl
xchg
sbb
cmp
mov
push
cmpsl
dec
or
mov
xlat
add
outsb
dec
sub
push
sbb
je
pop
push
sahf
mov
bound
mov
pop
mov
jg
pop
lret
adc
mov
add
test
pop
add
mov
ljmp
push
rorb
xchg
imul
mov
imul
push
sahf
jmp
push
jl
mov
inc
das
jne
sbb
lds
cmp
outsl
push
js
adc
ja
mov
lock
mov
mov
cwtl
jmp
mov
jmp
addr16
jns
xor
pop
adc
rclb
dec
into
pop
adc
mov
jg
xor
push
bound
imul
popf
sahf
fldt
adcl
pop
test
jmp
enter
mov
stc
mov
lret
xchg
stos
aaa
mov
and
mov
add
pop
sbb
dec
fwait
mov
sbb
jg
lods
or
aas
pop
out
add
xorl
aas
rcrb
repnz
adc
add
loop
inc
pushf
xchg
lods
mov
cs
cmp
pushl
ret
addr16
out
stos
cs
mov
repnz
addr16
jae
adc
jmp
das
scas
in
inc
mov
add
mov
push
cmpsl
rorb
add
pushf
inc
xorl
lods
mov
jl
popfw
fmull
xchg
orb
xchg
leave
mov
jbe
jne
std
insb
sub
hlt
or
lods
test
lahf
mov
or
filds
lret
es
add
xor
out
repz
adcl
push
adc
mov
and
xchg
xchg
insb
inc
inc
dec
xor
cmp
xchg
sub
mov
pop
dec
mov
movl
mov
push
mov
repz
fldl
mov
push
loope
cmp
xlat
mov
repz
add
mov
xor
ljmp
push
cmp
jb
and
push
push
shl
popf
hlt
movsb
push
xchg
movsl
lret
mov
jno
dec
ja
or
dec
pop
repz
pop
sbb
jecxz
ljmp
add
sbb
mov
jne
clc
je
push
sub
ret
cwtl
add
push
mov
cmp
ret
jmp
or
popa
movsb
or
fmull
shrl
xchg
addl
xchg
sub
adc
icebp
test
mov
out
out
addb
cmc
push
xchg
mov
pop
add
push
hlt
jge
jne
mov
cld
fnstcw
lds
pop
imul
dec
cld
fbld
into
push
dec
cmpsl
xchg
das
mov
or
pushf
xchg
pop
mov
mov
add
sbb
aad
shlb
mov
mov
lcall
adc
lods
adc
fmulp
cmp
in
add
aas
inc
jg
mov
testl
pusha
rcr
xchg
mov
nop
push
loop
push
sahf
push
and
ljmp
and
mov
mov
ljmp
xor
jmp
int
test
jno
in
or
sbb
int
dec
aas
xor
jae
add
inc
sahf
loope
xchg
sub
in
cmp
mov
cmp
shrl
pop
push
scas
or
std
daa
mov
xor
addb
push
in
jne
int
stos
sahf
imul
cmp
jecxz
adc
js
divl
test
mov
jge
cmp
stos
mov
mov
cmc
push
cld
ss
mov
push
arpl
pop
incb
cwtl
mov
stc
mov
jp
adc
outsb
das
cmpsl
push
dec
add
and
dec
stc
dec
jo
add
test
out
and
sub
shlb
call
in
push
mov
imul
loop
xchg
xor
insl
mov
adc
xchg
test
inc
repnz
mov
inc
xchg
jnp
or
cld
out
xchg
std
cmp
mov
orl
repnz
or
mov
leave
mov
bound
mov
mov
mov
inc
movsb
clc
iret
imul
jle
in
test
sti
xchg
jb
lods
lahf
repnz
test
jne
jnp
inc
femms
arpl
xchg
mov
cs
add
or
aas
std
test
je
mov
sti
push
or
mov
pop
aaa
sub
stos
xchg
inc
scas
test
cmpl
pop
arpl
cmpb
addr16
fs
sub
mov
rcrb
jns
fsubp
mov
roll
push
cs
xchg
mov
ljmp
xor
cmp
call
into
aas
jb
sub
cmp
pop
mov
aam
and
jge
loop
cmc
jecxz
xor
and
into
leave
mull
sbb
negl
imul
in
cltd
cwtl
dec
jne
or
int
loop
mov
pop
inc
call
ja
test
js
stos
pop
pop
ret
movsb
hlt
jp
inc
or
mov
pop
dec
cmpsb
jp
loope
arpl
aaa
add
clc
shrb
xor
sarl
inc
jnp
ja
aaa
rclb
cmp
ret
push
jl
xor
sub
push
pusha
mov
or
in
fucompp
loopne
rcr
call
mov
ds
sbb
xchg
jns
test
pop
or
outsl
lret
aam
xor
sbb
push
in
pop
hlt
adc
mov
lcall
in
mov
xorb
scas
iret
mov
icebp
ljmp
cmpsb
jg
in
stos
test
jge
pop
push
movsb
adc
push
push
inc
in
adc
dec
cmp
ljmp
cli
daa
jecxz
mov
xchg
lahf
adc
mov
js
adc
xchg
xchg
mov
outsl
xchg
loop
cmpb
jb
test
mov
bound
ret
cmpsl
jmp
or
gs
ss
mov
clc
xor
mov
dec
push
add
aaa
addr16
popf
nop
inc
out
gs
ss
lds
pop
adc
mov
sub
stc
push
sub
adc
mov
jns
stc
adc
sub
jbe
adc
or
cmpb
adc
mov
loopne
inc
sbb
lar
arpl
int3
loop
sub
fwait
adc
shlb
aam
push
outsb
jno
stc
test
fdiv
mov
out
fadd
dec
cmp
cwtl
loop
mov
mov
xor
rcr
mov
out
test
mov
mov
dec
subb
ret
or
adc
cwtl
pop
mov
int
dec
fistpll
divb
das
sub
insb
out
mov
rolb
leave
fcmovb
es
xchg
adc
add
push
je
sub
in
arpl
outsb
and
xlat
test
mov
lret
lcall
cli
scas
lret
jmp
cmpsl
pop
xchg
pop
pop
loope
jne
cmpsb
xor
in
sub
cmp
sbb
test
sahf
faddl
and
aam
ret
lret
cli
cmpsl
xchg
insb
add
pop
nop
adc
cmp
or
pushf
dec
imul
movsb
xchg
and
mov
add
sbb
jno
mov
cmc
out
push
pop
repz
adc
mov
jle
mov
mov
movsl
dec
inc
repz
cld
dec
scas
sub
je
imul
les
pop
outsl
sbb
push
imul
mov
aas
xchg
inc
cmc
shll
test
cmp
mov
stos
sbb
cltd
imul
ss
jae
fwait
or
cwtl
lock
fwait
imul
stos
in
rolb
adc
push
cltd
cmp
or
std
mov
movsl
js
jbe
dec
adc
cltd
mov
fs
xchg
dec
push
lods
cli
dec
mov
push
inc
fistpll
add
push
or
push
jecxz
inc
notl
test
out
sbb
repz
jae
stos
addr16
arpl
push
push
or
add
lods
andb
add
xchg
xchg
outsl
js
sbb
leave
push
pushf
mov
inc
and
repnz
jbe
sbb
cwtl
xlat
je
aam
jmp
add
rcrl
and
jne
sbb
ljmp
xchg
fcoml
adc
fnstenv
jp
insl
out
ljmp
cli
and
jle
cmpsl
sbb
xor
add
jns
movl
cs
lret
adc
push
aam
mov
addr16
lcall
inc
mov
add
sub
mov
push
inc
push
lahf
mov
push
fs
xor
inc
xor
aas
xchg
testl
pop
lds
push
call
mov
mov
jge
adc
repz
pextrw
push
sbb
adc
jg
sub
loopne
pushf
mov
or
mov
jno
jne
out
xchg
jle
lret
push
lcall
cs
mov
jno
shrb
push
dec
xor
nop
aad
sbb
jecxz
insb
ret
xchg
in
lret
sahf
fdivs
lahf
repnz
xor
fiaddl
inc
scas
mov
and
push
fcoms
jae
and
mov
pusha
daa
push
shrl
dec
stos
mov
cmp
pop
cmp
std
sbb
icebp
cli
xor
lods
xchg
icebp
gs
rcr
shlb
out
loopne
fcompl
sub
mov
cmp
adc
pop
push
fs
mov
and
int
add
iret
add
ljmp
ss
xor
mov
lock
sbbb
in
ljmp
mov
aaa
call
mov
pushf
jp
mov
xchg
cld
and
inc
out
out
xorb
into
inc
fstpl
xchg
pop
fs
lods
dec
push
paddq
cmp
clc
jmp
ror
and
pop
xchg
or
sub
aas
popa
stc
sysenter
jg
std
inc
dec
cmp
lret
or
inc
pop
clc
push
and
or
mov
xchg
ljmp
insb
stos
outsb
push
fnsave
outsb
psubsb
and
out
cmc
pop
mov
ret
lret
push
inc
insl
jns
icebp
pusha
push
stos
jbe
xchg
or
push
pop
push
mov
xor
inc
mov
push
int
icebp
or
mov
lds
push
in
ljmp
daa
or
lret
cmpsl
inc
sti
out
mov
push
xor
rcrb
push
push
pop
mov
nop
dec
addr16
mov
out
cmp
push
dec
mov
mov
mov
adc
pop
and
xchg
fistps
test
int3
pop
movsl
xor
dec
fstpt
push
loope
jno
sub
cmpb
and
jl
mov
xchg
enter
fisubrs
lcall
pop
cmp
xor
leave
fnstenv
xchg
lods
ss
jp
movsl
xchg
or
scas
imul
inc
and
lods
push
mov
in
addr16
xchg
mov
inc
mov
aas
pop
and
lods
or
jnp
rolb
push
loop
movsb
mov
sti
add
sub
inc
nop
mov
sbb
test
aaa
jnp
mov
arpl
ja
mov
jno
arpl
push
mov
push
faddl
mov
add
in
cmp
xor
bound
pushf
rcll
cltd
push
sbb
dec
pop
mov
stos
stos
add
add
popa
and
bound
sbb
jle
mov
mov
dec
stc
cmpsb
in
gs
dec
dec
push
xchg
aad
in
ss
rol
jg
cmp
es
mov
je
std
fisttpll
jne
ja
pop
push
add
fsubl
fisttpll
ss
addb
pop
das
fldl
cmp
int3
outsb
out
jmp
jo
inc
sarl
sbb
cmp
stc
cmpsl
sub
dec
xchg
lods
mov
in
testb
push
push
dec
cltd
push
insb
out
sbb
std
xchg
push
sub
lcall
daa
and
pop
cmp
jmp
sub
inc
mov
adc
fistpll
jns
mov
sub
das
rclb
out
push
cmp
sub
xchg
sub
sbb
call
cmp
jg
lret
or
into
mov
mov
inc
inc
and
cltd
jo
mov
test
jno
jp
loope
mov
push
pop
aaa
imul
mov
xor
xor
mov
push
or
gs
frstor
inc
andb
daa
sub
aam
nop
jp
lret
xor
outsb
nop
scas
cwtl
cld
inc
stos
adc
push
movsl
inc
adc
pop
pextrw
or
dec
test
movsb
je
in
or
cmp
ljmp
xlat
popf
movsb
add
cmc
test
jbe
loop
mov
jmp
cmp
or
ds
cmp
dec
das
lea
loop
lds
and
fisubrl
adc
aam
orl
pop
and
mov
adc
jae
adc
dec
xor
loope
adc
push
lea
mov
pop
cs
and
mov
js
iret
cs
ja
int
jne
jp
nop
dec
imul
ret
push
push
fidivrs
jg
sti
push
test
push
mov
xchg
aam
cli
sbb
outsl
iret
insl
lods
cmp
jae
cmp
mov
fcom
into
test
sbb
sub
rcl
mov
fucomp
dec
adc
dec
push
push
daa
sub
in
test
adc
stos
sbb
xor
int3
popl
andl
adc
stos
aaa
xchg
sub
fucom
sub
les
insb
out
lods
sarl
daa
ficompl
xor
dec
enter
push
xchg
in
jmp
jge
aad
lcall
rorw
ja
pop
inc
sahf
insb
pop
cmp
aam
in
mov
test
jno
pop
xorb
stos
and
push
or
scas
inc
sub
cmp
xchg
aaa
dec
lea
add
popa
push
sbb
out
and
adc
pop
sbb
xor
imul
fstpl
lds
cmc
lods
adc
xchg
pop
dec
dec
push
mov
add
inc
fsub
adc
mov
les
or
jbe
jge
stc
bound
jne
jo
sbb
mov
ljmp
xor
and
std
dec
ret
mov
mov
adc
mov
sbb
adcl
jge
cmp
xor
fisubrl
jnp
push
sub
das
cltd
cmc
mov
sbb
jle
les
pop
addr16
pop
xor
xchg
mov
or
pop
or
jle
mov
mov
push
mov
ds
clc
sbb
push
mov
scas
sbb
jns
pop
and
xlat
lea
sub
enter
and
push
sahf
rorb
inc
stc
dec
movsb
shrl
mov
cmp
sub
or
cmp
xchg
int
fcompl
movsb
mov
out
in
mov
mov
orl
repnz
sub
rclb
pop
test
fwait
pop
adc
jmp
add
jno
gs
adc
jmp
cmp
jnp
ja
and
sub
inc
xlat
pop
or
movsb
dec
and
inc
sbb
sub
mov
daa
dec
pop
push
ss
inc
pop
addr16
sbb
mov
push
mov
mov
mov
inc
scas
pusha
decl
lea
leave
cmp
push
mov
cmp
fisubl
stos
sub
pop
pop
call
cmpsl
xchg
push
or
cmp
test
stos
loop
mov
cmpsb
decl
mov
mov
ds
out
out
adc
stos
mov
cmp
push
mov
mov
mov
sub
mov
or
pop
mov
addr16
mov
scas
fmuls
push
leave
daa
mov
and
lods
call
pop
imul
mov
pusha
jae
into
aas
mov
ja
sti
mov
dec
clc
es
push
xchg
xchg
leave
in
aaa
addl
das
out
jle
popf
sbb
push
and
out
dec
out
xor
or
or
pop
dec
cmp
int
pop
in
and
addr16
mov
dec
sti
xor
xchg
out
lret
mov
inc
mov
pusha
cmpsl
cmp
or
jo
or
pop
sbb
out
inc
xchg
cmp
das
add
cmp
pop
inc
mov
mov
shld
mov
jge
jmp
test
or
cmp
ds
test
rcrb
lahf
repz
int
dec
sbb
insl
xchg
mov
es
mov
cmp
mov
cmp
jnp
ja,pt
enter
dec
or
int
enter
aas
not
and
pop
lock
cld
pop
dec
fs
bound
push
fs
es
pop
sbb
cmp
mov
fsubs
push
rcrl
fwait
dec
mov
adc
bound
xchg
jae
mov
decb
fldcw
into
addr16
inc
cmpsl
adc
std
push
test
popa
pusha
popa
iret
push
xor
jg
bound
das
aad
mov
dec
mov
aam
mov
lods
mov
les
in
jnp
jbe
in
data16
stos
aam
ss
scas
leave
mulb
js
inc
or
mov
in
sti
or
addl
add
mov
lds
icebp
rcll
nop
or
ret
fs
out
mov
xorl
push
and
jecxz
mov
xchg
lea
lret
fwait
shll
inc
dec
cltd
or
inc
mov
fmull
es
stc
out
adc
push
and
pop
iret
dec
shrb
sbb
out
mov
movsb
xor
dec
mov
loop
lret
lcall
insl
dec
cmpsl
mov
or
push
jae
push
popf
lea
push
nop
pop
cmpsb
cmpsb
call
lahf
fimuls
stc
les
ljmp
cmp
orl
out
xchg
add
xchg
in
mov
xchg
imul
je
fnstsw
inc
mov
xchg
sub
bswap
imul
and
xchg
jp
pushf
fimuls
jns
fcomi
cltd
sub
lods
xchg
outsl
mov
pop
cwtl
das
mov
test
push
dec
into
stos
addl
mov
jne
stos
popf
lds
and
scas
shlb
nop
daa
fwait
mov
shr
and
lods
ret
xor
xor
adc
aam
xchg
icebp
or
inc
inc
mov
pop
ss
stos
mov
xchg
xor
addb
shr
jbe
xchg
fs
or
pushf
lock
xchg
imul
lods
mov
and
mov
and
lret
jae
inc
cmc
gs
cmp
pop
cmpb
push
mov
notl
cwtl
sbb
imul
and
les
fadds
dec
add
push
mov
outsb
jmp
in
xor
imul
out
std
ds
das
arpl
andb
movsl
je
mov
aas
test
es
sbb
pop
fwait
mov
mov
pop
jns
cmp
xor
push
adc
jae
mov
jecxz
add
push
fdivs
dec
mov
push
inc
rcrl
sub
inc
test
rcll
shll
cmc
in
daa
enter
in
std
inc
xor
mov
mov
loope
lret
loop
mov
bound
and
mov
cltd
mov
xchg
dec
add
shl
jno
mov
xchg
push
iret
jno
cltd
jmp
dec
and
insb
out
call
jl
sbb
jns
and
das
mov
inc
idivb
repz
sub
push
sub
cli
cwtl
repnz
scas
sub
aaa
jae
adc
mov
dec
and
push
inc
push
into
jp
xchg
fmulp
mov
fistl
fisubs
test
std
jno
fsubs
jecxz
es
ja
push
mov
push
cli
ljmp
shll
pop
push
pop
in
shll
xor
cmp
rolb
shlb
call
es
xchg
jne
mov
insl
je
imul
daa
shr
mov
dec
push
cmc
cmp
inc
push
inc
lods
cmpsl
sub
xchg
mov
push
dec
jecxz
leave
lea
xchg
push
mov
rclb
leave
orb
into
test
push
fildl
popa
xchg
adc
cltd
loopne
sub
and
jge
into
xchg
jg
add
lea
out
xchg
lods
jl
testb
aaa
dec
cmp
inc
sub
outsb
pop
and
push
in
arpl
or
and
inc
jecxz
jnp
push
xchg
icebp
mov
sbb
cmpb
sub
mov
sub
mov
pop
mov
xchg
in
repnz
into
xchg
pop
sbb
arpl
mov
add
shr
addr16
push
lret
push
inc
pushf
xchg
adc
xchg
adc
test
rcrl
jmp
inc
jae
out
std
andb
addl
addr16
xor
push
mov
sbb
mov
xor
or
adc
and
lods
xchg
mov
ret
ss
insl
xor
std
sbb
lahf
xor
jb
outsl
inc
pop
xor
pop
adc
int
xor
add
mov
popl
loope
shlb
inc
sarb
shrb
or
inc
xor
shl
xchg
lcall
neg
out
test
emms
sub
in
adc
inc
push
sbb
mov
movsb
pusha
shll
fs
mov
push
out
cmp
pop
or
dec
je
cltd
jae
or
pop
es
ss
sbb
shlb
jmp
sub
or
xchg
addb
mov
xchg
in
js
xchg
icebp
ss
add
out
push
push
xchg
pop
out
mov
imul
dec
sbb
sub
aaa
std
dec
ss
mov
or
cmpsl
pushf
cs
or
mov
pop
cmpsb
mull
out
rorb
mov
sbb
test
dec
ss
and
bound
nop
dec
pop
or
stos
in
pop
jae
mov
pop
lds
jne
mov
add
repnz
add
and
jl
cmp
fpatan
loop
or
cmp
jnp
push
ljmp
sub
out
sahf
pop
subb
int
rolb
mov
dec
cld
repz
mov
xor
mov
orl
xlat
jle
xlat
in
mov
rcrb
cltd
adc
pop
aaa
push
dec
mov
xor
dec
iret
cmp
lock
and
mov
fdivl
pop
loop
test
sbb
or
pop
paddsw
in
push
mov
outsl
sub
add
fwait
sbbb
std
mov
rcll
sahf
inc
push
mov
pop
adc
cmpsb
in
jl
call
and
dec
je
mov
icebp
ret
push
add
add
lret
sub
pop
and
push
daa
pop
push
rorb
inc
push
js
dec
dec
fldenv
lcall
pop
pop
mov
inc
jnp
and
sti
xchg
out
inc
fwait
sub
push
sub
jmp
sar
imul
and
movsl
dec
mov
out
aas
fdivs
sahf
stos
roll
shll
push
jbe
int
push
mov
jae
add
sarb
inc
push
movsb
inc
mov
hlt
cmpsl
mov
es
testl
outsl
xor
rclb
fucomp
xchg
jg
lds
sahf
shr
jns
ljmp
xlat
shlb
add
push
inc
test
shrl
jg
add
in
pop
notb
les
jle
lret
mov
shrl
dec
jle
sub
movsb
lret
dec
adcl
add
xchg
mov
xor
and
fs
ret
cmp
daa
mov
aam
jae
ja
inc
adc
push
adc
xchg
pop
inc
mov
and
test
jle
mov
sbb
pop
loope
repz
cs
mov
push
lea
push
pop
cmp
int3
int3
adc
data16
inc
loopne
xchg
les
and
in
aas
adc
js
in
mov
mov
mov
mov
mov
in
rolb
daa
dec
aaa
jle
cmp
dec
loop
xchg
repz
inc
in
mov
adcl
push
popf
hlt
push
xor
popf
mov
and
push
dec
add
xchg
es
adc
aaa
mov
aad
mov
fstl
orl
lods
ja
icebp
sbb
xchg
jl
test
push
pop
jg
and
push
xor
ret
je
xchg
pop
mov
mov
inc
popa
stos
pop
mov
lcall
test
imull
jp
lahf
dec
sub
jns
rcrb
in
or
mov
aaa
test
mov
sbb
fidivrl
cmp
add
dec
pusha
and
add
xor
dec
std
sbb
dec
cmpb
adc
stos
dec
or
inc
icebp
scas
fmull
add
repnz
mov
cmc
rolb
sbb
fnstsw
xchg
mov
inc
addr16
scas
stc
jp
js
sub
mov
iret
out
cmp
jle
mov
fidivrl
cmpsb
mov
enter
cmp
xchg
mov
mov
lods
mov
mov
xchg
pop
inc
das
pop
xor
imul
push
outsb
or
sbb
ret
out
rclb
cli
scas
mov
int3
xlat
sbb
xchg
enter
jne
insl
sar
popa
and
jno
mov
lds
pop
ret
nop
mov
ret
jae
fidivs
scas
jmp
aaa
xchg
ds
cld
sahf
sbb
into
pushf
adc
les
push
mov
fstps
dec
and
xchg
dec
mov
mov
xchg
or
daa
dec
je
push
cli
lret
jg
xor
aad
mov
ret
pop
bound
in
and
xchg
adc
mov
xchg
test
data16
in
jl
dec
arpl
fiadds
or
add
pop
popf
add
add
lods
fisubs
push
mov
pop
pop
je
pushf
lret
xchg
push
adc
pop
popf
stos
cmp
divl
jmp
rorb
xchg
sbb
cmp
xor
insb
add
sub
xor
sbb
add
mov
out
mov
das
fiadds
dec
pusha
int3
cmp
mov
xor
je
cmp
neg
sbb
inc
xchg
and
jg
push
adc
or
scas
stc
lods
sar
stos
mov
push
dec
inc
push
rorb
aam
int
push
jne
xor
lret
popa
loop
cwtl
pop
jns
lret
arpl
mov
and
aaa
int3
psubd
push
xor
mov
mov
clc
imul
in
cwtl
mov
fisttpll
lds
sbb
and
lret
out
outsb
mov
sub
faddl
testl
dec
mov
xchg
int3
xchg
add
adc
inc
sar
cmpsb
dec
js
in
push
stos
shr
jne
sub
popa
xchg
scas
repz
and
jno
js
push
into
rol
xor
jbe
and
testl
push
or
in
mov
mov
lea
gs
cwtl
dec
movsl
sub
int3
ret
scas
mov
loopne
pop
mov
add
xchg
sub
mov
mov
xor
test
inc
push
fdivs
das
stos
inc
outsb
stos
out
pop
mov
ja
in
icebp
push
xchg
push
test
call
jo
cmp
aaa
adc
sub
rorl
dec
xor
into
test
mull
push
push
ljmp
out
add
lock
dec
push
or
subl
cwtl
dec
xchg
mov
mov
pop
cmp
sbb
andb
sti
xor
lret
js
push
shrl
sub
pop
xor
jp
add
mov
fcoml
mov
jp
push
lods
fmul
adc
lds
and
fstps
insl
daa
push
sbb
ds
dec
cwtl
scas
mov
push
mov
dec
mov
out
mov
and
popf
or
ja
sub
sbb
outsb
add
std
xor
imul
sbb
andb
orb
hlt
pmullw
push
in
jecxz
ret
or
cmp
jne
ljmp
or
shrl
sbb
xor
std
adcb
ljmp
or
mov
add
sbb
pop
dec
rcrl
ret
jnp
add
lcall
in
push
icebp
jge
sbb
cmp
pushf
rol
pop
stc
lcall
dec
es
xchg
shrl
idiv
push
lods
inc
repnz
and
pop
mov
outsl
fstl
mov
fmuls
call
pop
les
mov
shll
mov
mov
cmpsb
dec
inc
hlt
cmpb
cld
and
in
ja
jnp
nop
arpl
fstl
pop
fcmovnb
mov
mov
push
add
mov
shlb
dec
push
xor
jae
lods
in
pop
test
push
lret
mov
and
aam
sub
push
fidivrl
and
push
adc
mov
dec
into
jp
pop
clc
cs
ds
push
sub
push
mov
jl
fadds
pop
jnp
pop
je
dec
pop
push
dec
iret
sahf
cmpsb
jge
add
pusha
dec
push
cmpsb
fstl
xchg
out
mov
push
out
roll
clc
nop
jb
dec
cmp
in
xor
or
ret
mov
xbegin
fsincos
jge
movsl
pusha
mov
cmp
or
xlat
dec
cli
xlat
icebp
inc
xlat
jns
jmp
adc
or
mov
and
pop
sbb
in
xor
mov
mov
sti
nop
adc
sub
mov
mov
inc
mov
lock
inc
jns
lock
mov
psrlw
es
xchg
cwtl
push
push
lods
lret
xchg
xor
cmpsb
mov
jp
add
jno
incl
int3
loope
subb
mov
popf
lods
adcb
cmp
call
push
jno
add
dec
mov
push
test
sbb
cmp
mov
loop
fisubl
sub
push
cli
fldlg2
test
ds
adc
int
movsl
mov
mov
rol
rol
cli
pop
cmpsb
xor
out
dec
shlb
popa
ja
mov
xchg
outsl
xchg
lret
hlt
int
adc
lcall
jg
outsl
sarl
cmp
push
add
stos
jp
xchg
movsb
rcll
jle
inc
push
cmp
std
mov
mov
add
dec
loopne
push
push
cmc
popa
pop
daa
mov
and
xchg
xor
lock
pop
fsubrs
jmp
jg
adc
adc
cmp
sub
repnz
cmpsb
push
repnz
mov
adc
sbb
jbe
xchg
stc
or
pop
jns
xchg
jbe
dec
ljmp
out
jle
sbb
inc
jecxz
mov
out
seta
scas
mov
sbb
lret
mov
add
push
aas
mov
lds
daa
out
int
cmp
sbb
inc
stc
xlat
pop
shlb
jo
xchg
pop
fdivl
mov
into
or
loopne
rcll
loop
mov
push
pop
sub
and
scas
jns
xchg
movsb
outsb
out
lds
xchg
jp
into
adc
mov
incl
pushl
inc
push
mov
fcomip
ret
aad
push
mov
and
imul
xor
jno
inc
scas
test
adc
repz
ss
mov
int3
test
mov
sub
add
mov
xor
inc
mov
push
adc
or
outsb
pop
push
loop
imul
sub
cmp
jecxz
adc
out
iret
test
dec
sbb
adc
pop
test
fmull
mov
sbbl
movsl
push
stos
inc
ja
sbb
sub
xlat
movsb
adc
adc
and
pop
iret
scas
inc
sbb
aaa
mov
push
iret
sbb
insb
add
cmp
daa
xor
sbb
inc
xchg
out
lods
xchg
cmp
and
movsb
dec
sub
stos
scas
mov
adc
xor
inc
out
aam
xor
cltd
and
ss
outsl
cmp
mov
adc
inc
cmp
push
xchg
orl
sub
aad
xor
xor
clc
ja
xchg
xchg
nop
push
mov
push
mov
out
sub
xchg
cmp
icebp
push
das
xor
imul
testl
les
mov
add
pop
outsb
mov
jg
xor
mov
push
movsl
mov
daa
mov
inc
cmp
jp
jb
mov
cmp
pop
fstl
mov
xchg
sub
push
mov
mov
dec
and
adc
xchg
in
add
lock
clc
xchg
xchg
fisttpll
add
push
in
cmp
ds
jne
add
xor
jne
shlb
pop
sbb
and
sbb
adc
dec
sbb
jge
bound
int
jle,pt
lahf
cmp
pop
dec
adc
xlat
popa
mov
shl
dec
stos
xlat
xchg
mov
clc
add
dec
xchg
lea
outsl
cli
loop
jle
mov
mov
jmp
push
xchg
mov
aaa
cmp
jb
enter
xor
adc
roll
sbb
dec
in
cmp
pop
xchg
xor
lret
push
push
enter
cmp
and
out
in
ss
jp
aad
aam
sbb
mov
jmp
cmp
and
cmc
dec
cs
jmp
mov
lahf
aam
sbb
xchg
xchg
jb
lds
leave
out
pop
ret
je
xor
mov
adc
fidivrl
popf
xorl
lcall
dec
int3
add
lods
adcl
or
xchg
inc
adc
jl
sahf
sub
lahf
push
stos
out
shr
mov
mov
cmp
adc
shr
and
add
pop
fmull
dec
sti
cmpsl
mov
mov
jle
xor
mov
arpl
gs
pop
pop
dec
push
add
icebp
mov
or
pushl
or
outsl
fiadds
pandn
les
adc
cmp
mov
call
hlt
xchg
pop
sub
jle
xchg
fnstcw
lret
dec
mov
leave
and
push
enter
xlat
jmp
inc
push
jl
adc
jp
dec
mov
ror
std
fistpll
mov
sub
lock
mov
jns
dec
stos
in
xchg
mov
mov
les
lret
repz
pop
lahf
scas
add
das
stos
popa
fwait
test
push
test
or
subl
and
movsb
lret
stos
movsb
and
rorb
or
mov
fstpl
push
dec
and
mov
roll
pop
pop
sbb
jo
xlat
daa
mov
jb
sub
ds
sbb
xlat
cs
insb
outsl
ds
dec
addr16
aas
imul
ds
jg
and
aad
xor
fwait
mov
jmp
inc
pop
rcrl
and
outsl
ss
pop
dec
rclb
sbb
mov
inc
inc
pop
pop
cmp
es
das
sub
cmp
shll
ljmp
push
xor
je
jmp
jmp
lcall
xchg
push
test
hlt
loope
addr16
pop
js
cmpsl
jbe
add
ds
inc
mov
in
mov
test
xchg
dec
pop
sub
mov
inc
lahf
mov
push
test
cmp
xlat
add
xchg
adc
jae
iret
jno
daa
dec
out
aas
dec
xor
mov
aad
cmp
in
lods
sarl
out
or
imul
stc
add
inc
cmpsb
aas
lock
jmp
or
xchg
push
xchg
sub
jle
fs
mov
sbb
cld
lea
frstor
mov
into
cmp
lret
jmp
shlb
xchg
mov
rol
cmpsb
mov
cmp
pushf
jle
add
mov
mov
mov
xor
xor
orl
in
or
orb
sbb
push
jns
push
dec
push
and
push
xchg
xchg
nop
jmp
jl,pn
lea
add
push
div
add
sub
inc
cmpl
sbb
and
xchg
int
insb
cwtd
xchg
in
and
push
dec
xchg
push
flds
xor
icebp
adc
stos
mov
mov
jecxz
cwtl
inc
imul
xchg
or
ret
mov
pop
pop
inc
pop
in
xlat
js
adc
mov
sbb
push
or
ja
cmp
mov
imul
aas
imul
xchg
cmp
jnp
add
into
into
xor
aam
fldenv
mov
iret
and
mov
xchg
xor
loopne
addr16
jbe
lcall
loopne
ljmp
sbbb
mov
dec
add
in
js
xor
rolb
repnz
mov
pop
push
call
nop
push
mov
leave
add
loopne
adc
mov
mov
xor
adc
inc
mov
sub
in
sbbl
cmp
shl
mov
test
test
adc
lahf
mov
lock
stos
add
in
sbb
add
stos
in
and
sbb
inc
xchg
in
fwait
inc
mov
jne
xor
outsb
cmp
dec
push
dec
stc
stc
add
ficomps
negl
ds
pop
xor
add
or
insb
xchg
outsb
repnz
jmp
xor
shl
sub
pop
lock
lahf
test
fnstsw
fcompl
lods
or
pop
das
test
inc
in
gs
push
push
cwtl
and
cli
push
cs
pop
jno
ds
xor
ret
add
xor
addr16
mov
jbe
hlt
ss
notl
push
scas
mov
aad
ret
pop
rcll
movsl
aam
stc
rdpmc
or
mov
cmp
push
rcrb
fnstsw
in
fildll
cmp
sub
adc
lcall
add
fs
lock
sbb
push
dec
xor
stc
or
andb
fstpl
sbbb
inc
and
xlat
movsb
mov
je
outsb
in
pop
cmp
cmp
jg
int3
out
sub
rorl
pop
fistps
sbb
pop
mov
int3
mov
outsb
rcll
sbb
inc
push
pop
add
lret
push
fisubs
mov
loope
xchg
xchg
mov
daa
xchg
ret
jp
cmp
fcmove
jg
inc
int
pop
sub
icebp
sti
mov
jecxz
adc
in
push
das
flds
inc
jg
jecxz
sub
cmp
ljmp
add
dec
cmp
fsubl
mov
shlb
sbb
cld
stos
cmp
xchg
pop
out
dec
pop
das
mov
cmc
jp
outsb
aas
add
das
xlat
int3
out
aaa
pop
sbb
call
jbe
daa
add
xchg
xchg
jns
iret
js
or
clc
pop
out
inc
movsl
mov
out
jg
add
in
ljmp
push
test
sub
dec
mov
push
pushf
xchg
xor
mov
mov
xchg
xchg
and
push
push
jb
cmp
test
jle
fistl
aas
repz
in
je
push
ds
cmp
cmp
es
and
stc
scas
inc
jecxz
mov
aas
ss
dec
xlat
mov
mov
jmp
xlat
or
fidivrl
pop
insl
mov
flds
out
and
in
leave
mov
xchg
push
rol
in
xor
scas
xor
loopne
ja
rcl
hlt
jno
and
in
jo
jle
mov
xor
jbe
xchg
mov
repnz
push
negl
jge
pop
popa
mov
cmpb
cmp
sti
outsl
xor
inc
ja
mov
push
push
in
inc
mov
jl
sahf
mov
jge
pusha
jne
stos
push
addr16
cltd
dec
es
xchg
fmul
or
xor
inc
pushf
xor
add
jb
and
outsl
fwait
cmp
aaa
cwtl
xchg
dec
pop
cmc
cwtl
andb
popa
sbb
inc
es
inc
loopne
mov
orb
sbb
out
xor
data16
clc
inc
mov
pop
jbe
pop
or
ss
jo
call
addr16
in
cmp
push
cmpsb
xchg
and
push
repnz
push
lcall
decb
or
push
in
sub
sbb
rcrb
adc
loop
dec
mov
call
movq
fiadds
add
ret
loop
jo
dec
dec
dec
jo
stos
mov
pop
mov
iret
mov
sub
leave
aad
aam
adc
mov
imul
mov
cmp
cli
sbb
adcl
push
jno
por
lock
fisubs
clc
pop
jnp
pop
dec
sbb
inc
stc
mov
scas
jbe
sub
push
mov
pushf
adc
xchg
mov
jbe
mov
aam
movsl
sub
je
xchg
xchg
pop
mov
or
and
xor
lret
sbb
add
cs
xchg
aad
cld
fidivs
jge
sti
cmp
cmp
xchg
gs
sbb
hlt
add
imul
lahf
inc
lret
incl
pop
push
inc
xchg
cli
fwait
or
rorb
ror
test
xchg
out
adc
in
int
lcall
das
int3
clc
gs
dec
or
adc
xor
pop
mov
insb
jecxz
push
addl
mov
push
or
in
push
pop
or
sub
les
shlb
std
push
or
arpl
xchg
lds
mov
adc
mov
pop
ja
lock
push
into
xchg
sbb
fcompl
add
cmp
rcrl
jnp
pop
dec
and
xchg
xor
pushf
xchg
jmp
and
adc
pushf
bound
loopne
sub
jg
and
insb
adc
push
testb
sbb
mov
ret
mov
or
mov
push
ljmp
cli
test
mov
movsb
pop
testl
or
pop
or
psubw
adc
adc
xor
test
add
out
out
out
jg
sbb
or
sbb
push
sub
inc
cmpl
pop
mov
jmp
je
mov
gs
xor
dec
sti
in
sbb
loop
fwait
addr16
jb
jne
mov
push
push
push
and
ror
mov
adc
aam
xchg
imul
push
inc
mov
jb
fdivrl
clc
xchg
ljmp
and
aam
cmp
mov
rcll
in
je
movsb
xchg
sub
mov
sbb
lds
fnsave
mov
cmp
mov
adc
cltd
orl
xchg
adc
add
or
ss
incl
mov
cld
add
addr16
bound
mov
push
int
in
xchg
shl
ds
testl
scas
in
jo
out
pop
stos
sbb
dec
out
jg
insl
scas
shlb
cmpl
movsl
idivb
sbb
ret
icebp
add
xor
stc
mov
add
jle
cmp
jno
and
or
add
push
push
pop
into
outsl
insb
cmp
adc
orb
and
repz
mov
sbb
push
decl
or
fists
xlat
cmc
mov
ja
dec
fmull
cmp
jg
jecxz
cmp
pop
jmp
leave
outsb
inc
scas
icebp
mov
inc
push
mov
sbb
xchg
mov
mov
je
mov
es
out
rorl
mov
lea
fsub
mov
push
adc
cmp
loop
pusha
add
das
and
pop
mov
mov
mov
cld
mov
into
jl
sub
sub
mov
lcall
popf
mov
adc
cmp
sub
inc
jp
ret
or
cwtl
xor
dec
mov
sahf
shl
pusha
mov
stc
test
icebp
xchg
cmpsl
test
outsl
add
aam
pop
pop
jmp
sub
or
icebp
adc
and
inc
adc
xchg
lret
push
iret
outsb
stos
loopne
jno
adc
dec
add
into
fxch
je
mov
lock
mov
insl
popf
sbb
rclb
shrl
dec
out
ljmp
cmp
das
pop
dec
add
add
and
mov
cmpsb
outsl
dec
mov
dec
jbe
xchg
shrl
mov
sbb
xchg
cmp
ss
aaa
inc
mov
pop
and
subl
cs
scas
jae
inc
mov
mov
or
in
dec
push
mov
out
cmp
adc
mov
xor
xchg
xchg
mov
xchg
out
dec
jne
sar
mov
xchg
dec
pop
pop
imul
mov
sbb
inc
shlb
repz
sbb
adc
lods
push
stos
xorl
dec
bnd
add
jle
xchg
rol
ss
test
dec
sti
adc
lds
mov
pop
pusha
adc
cmpsl
stos
and
sub
mov
mov
sti
mov
mov
shl
pop
imul
dec
mov
or
pop
rcrb
pop
loop
dec
mov
js
stos
pop
stos
addr16
ja
add
xchg
and
pop
xchg
loop
jg
inc
pop
cmpsb
fsts
fnstcw
in
lea
push
jo
xchg
test
test
mov
adc
fidivrs
outsl
mov
jae
clc
or
cmpsl
xor
bound
lcall
dec
daa
in
inc
mov
jp
lods
divb
add
lea
mov
fdiv
mov
stc
cmp
loopne
loope
mov
icebp
and
pop
cmp
adc
xchg
lcall
lock
pop
mov
adc
test
adc
stos
in
jle
mov
adc
mov
jecxz
gs
pop
mov
sub
or
inc
lock
scas
jp
pop
xchg
or
inc
ja
mov
inc
dec
mov
or
sbb
sarb
or
clc
clc
sbb
cmp
faddl
shrb
jp
jnp
out
xchg
repnz
fiadds
jg
dec
sbb
lahf
push
cmp
and
in
ffreep
imul
fsubrs
or
lcall
insb
xchg
aaa
jmp
js
imul
mov
hlt
mov
cmpsb
lahf
xchg
cmp
xchg
int3
movb
aad
mov
mov
int3
lret
mov
icebp
dec
rcl
fcom
stos
and
jns
aam
adc
fisttpll
adc
adc
test
cmpsb
cmpb
add
imul
cs
fs
insb
movsb
add
xchg
repz
dec
and
repz
rorl
xchg
insl
push
mov
sub
shll
in
imul
fs
pushl
lock
inc
popf
push
data16
loop
imul
sub
popf
idiv
aad
sub
lock
mov
cli
sbb
fsts
add
mov
out
stos
add
push
pushf
mov
xor
adc
stos
cltd
in
cmpsl
outsb
and
mov
and
mov
mov
ss
imull
movsb
mov
fwait
std
cmp
rclb
xor
push
cmp
xor
adc
adc
xchg
stos
inc
ljmp
dec
clc
fisttpll
pop
into
insb
js
dec
movsl
aad
inc
out
adc
jb
clc
jle
cwtl
es
fadd
movsb
push
aad
inc
data16
mov
add
mov
ds
testl
aad
mov
pop
fldl
mov
jns
jecxz
xor
inc
lods
call
xor
lods
add
xchg
mov
loopne
mov
insl
fmulp
sahf
fdivr
aas
xchg
repnz
int3
add
pop
pop
bound
sarb
add
hlt
mov
pushf
xchg
fistl
mul
xchg
fisubrl
ror
data16
cmpsl
sub
xor
popf
lret
aad
xchg
pop
in
int3
mov
mov
lahf
add
and
lahf
fucomip
push
ljmp
idiv
iret
or
cwtl
mov
pop
lds
adc
fsubs
in
aam
xchg
inc
push
ret
jae
and
add
pop
outsb
cltd
daa
and
ja
cmp
gs
jno
sbbl
or
ljmp
stos
mov
outsb
add
mov
roll
fmuls
aad
mov
negl
mov
jl
leave
mov
cltd
pop
out
dec
add
and
movsl
push
jecxz
insl
ret
aad
and
sub
xor
sub
mov
bound
lea
shll
lret
jnp
adc
pop
imul
inc
fwait
shll
and
sahf
sbb
in
lahf
lret
mov
int3
mov
fcoml
lret
int3
test
cmp
mov
lea
je
mov
xlat
repnz
push
ss
xchg
sbb
push
mov
adc
jnp
fmul
lahf
sahf
loope
mov
out
push
int
push
popl
dec
out
cmpsl
pop
fiadds
and
loop
sbb
add
or
push
dec
lds
push
xor
sbb
jnp
xchg
repnz
gs
imul
xchg
push
fsts
movsb
outsb
xor
dec
pop
push
ret
or
adc
or
andl
jbe
jp
xchg
mov
movl
mov
ret
push
adc
les
xchg
aam
out
imul
cltd
push
cmp
cmc
mov
mov
inc
jle
fsubrl
fisttps
pop
subl
gs
cmp
retw
or
mov
outsb
seta
in
dec
add
pop
xor
cmp
pop
push
cld
add
sbb
lods
xchg
popa
cmp
inc
movsl
add
mov
pop
js
cmp
loope
ffree
jmp
cwtl
xchg
xchg
inc
jge
push
adcb
dec
adc
lahf
dec
and
scas
jne
sub
ret
xchg
adc
sarb
cmp
icebp
jbe
cmp
mov
aad
mov
in
leave
cmp
adc
pop
outsb
das
mov
stos
and
jecxz
aaa
sub
and
cs
xchg
inc
ret
pop
icebp
inc
mov
insb
andb
sahf
lds
inc
and
dec
je
shll
sbb
mov
or
clc
pop
out
add
fwait
mov
ror
or
cmp
mov
push
dec
out
je
jbe
out
loopne
mov
pop
jle
cmp
leave
gs
dec
into
xchg
xor
jge
leave
dec
mov
stos
ljmp
pop
outsb
lock
mov
adc
pop
pop
xchg
addb
icebp
mov
cmp
inc
sub
xchg
nop
mov
cmp
push
sti
fs
pop
pop
pop
sub
jge
stc
mov
cs
push
cmp
inc
outsb
pop
sbb
pop
fdiv
add
das
rcrl
in
lret
jge
cmp
arpl
dec
subb
loope
sti
rolb
dec
in
jg
mov
out
jo
pop
stos
mov
loop
leave
dec
jle
neg
stos
or
ljmp
pop
shlb
sbb
jnp
sti
dec
mov
ficoms
ss
sarl
sub
test
orb
mov
push
or
fiaddl
jg
int3
adc
dec
add
scas
sbb
inc
pop
push
and
loopne
loope
adc
mov
cli
jle
or
xchg
icebp
ror
leave
dec
sbb
xchg
jne
push
lods
cltd
add
imul
notl
leave
xchg
sbb
popa
loope
sbb
pop
pop
adc
push
push
aad
aam
lahf
or
mov
pop
sbb
mov
fidivrl
inc
add
jp
inc
and
insl
sub
test
mov
and
cmpsl
ja
pop
push
dec
pop
lea
pop
pop
or
cmp
mov
mov
aaa
out
jne
and
mov
daa
cmp
sbb
jne
inc
icebp
sub
mov
mov
dec
movsl
mov
and
repnz
das
jge
dec
shl
in
test
pusha
movsb
push
lock
loop
add
add
pop
xchg
movb
sti
push
les
mov
push
or
shl
pop
mov
lods
pop
rcr
out
pop
mov
fistpl
fmull
or
cld
dec
and
push
adcb
stos
and
jns
inc
jns
leave
jge
pop
out
push
pusha
mov
mov
lods
lods
jg
loopne
pushf
jo
xor
call
jbe
jno
loopne
bound
test
movsl
adc
and
pushf
stos
aad
and
scas
outsl
sbb
pop
subb
xchg
lret
cmp
fstpl
xchg
dec
scas
ss
xchg
and
sub
mov
xor
sbb
mov
xchg
fs
test
mov
pop
sti
jns
insl
cld
push
gs
leave
pushl
ds
stc
mov
repnz
sbb
out
mov
repz
pop
add
fwait
push
jb
cwtl
sbb
andl
add
jns
mov
lret
inc
test
std
inc
loopne
ret
adc
add
imul
or
or
movsl
aad
sbb
mov
mulb
xchg
ljmp
lock
subb
rol
outsb
sahf
mov
adc
ss
xchg
xor
dec
dec
sbbb
pusha
mov
mov
loop
lret
cmp
add
dec
adc
stos
fiadds
push
xchg
insl
pop
fcomps
xchg
repz
fcoms
mov
pop
pop
pop
xor
jmp
xor
sbb
add
cmp
or
adc
jp
xchg
mov
jbe
and
lods
sub
and
cmp
pop
adc
mov
rcl
in
fmulp
mov
std
inc
ja
int3
fdivr
popa
jno
push
subb
and
mov
push
test
pop
jmp
jmp
mov
adc
pusha
fs
and
jno
loop
mov
dec
dec
fistpl
mov
daa
stos
shlb
xchg
pushl
mov
xchg
pop
jecxz
out
shl
adc
mov
out
mov
in
push
xor
push
add
adc
sub
pop
mov
inc
mov
mov
xchg
pop
xchg
mov
ret
dec
fdivr
xchg
sub
aad
fadds
ljmp
jle
and
sbb
or
fsubrl
test
aaa
insl
sub
or
movsb
loopne
inc
add
repz
popf
std
ret
sub
mov
pop
inc
cmp
pusha
push
or
mov
rclb
movsb
rcll
xor
fs
rcrb
xchg
add
loopne
daa
lea
xchg
cmp
jecxz
dec
mov
mov
in
sarb
jnp
gs
and
xchg
lock
xor
cwtl
xchg
fsubrs
cwtl
iret
mov
dec
pop
dec
ret
pop
mov
cmp
adc
int
rcll
loope
arpl
push
mov
or
sahf
cmpsb
pusha
sbb
outsb
xor
add
sub
jl
adc
push
xchg
xchg
stc
lcall
orl
dec
push
sub
icebp
into
and
outsl
xor
sub
sub
or
cmp
xchg
into
decb
xor
lock
scas
push
call
jmp
jle
xchg
xchg
jecxz
mov
add
std
or
stos
dec
repnz
js
sub
jg
mov
jb
push
mov
push
test
mov
and
ja
stos
mov
dec
arpl
int3
movsb
cmpsb
inc
pop
xor
cmp
mov
sti
lea
jb
dec
pop
mov
jmp
data16
or
adc
stc
popa
pusha
mov
pop
pop
push
shrl
std
gs
mov
repnz
das
decl
scas
adc
add
cmp
ret
insl
sub
or
push
jl
xchg
cmpsb
es
inc
mov
jne
sbb
loopne
hlt
jns
mov
push
jg
sub
and
je
and
jge
mov
and
in
test
push
outsb
ljmp
sahf
inc
pop
push
test
jecxz
cwtl
jle
sbb
js
lods
adcl
push
cltd
mov
insb
pop
insb
sub
mov
lret
mov
cmp
mov
cmp
sti
insb
loopne
test
es
mov
fsubr
push
movsl
mov
sbb
ds
mov
scas
mov
cs
xor
push
mov
dec
int3
daa
adc
movsl
mov
gs
sbb
cmp
and
and
das
setns
jp
ds
addr16
lcall
mov
out
sbb
repnz
loope
dec
pop
cmpsl
adc
pop
fsts
sahf
dec
mov
es
lods
data16
sub
movsb
sahf
inc
push
push
cmpsl
sti
or
sahf
inc
mov
imul
dec
add
repz
jo
ja
and
movsl
jge
outsl
xor
jmp
adc
adc
iret
inc
adc
jno
push
and
imul
xchg
lds
das
or
mov
adc
test
or
popa
mov
push
cmpsl
pop
xor
arpl
inc
icebp
out
and
leave
insl
jae
daa
in
aam
scas
mov
divl
in
rorb
sarl
or
adc
push
jno
pushf
sub
ds
fcmove
inc
or
in
pop
scas
mov
add
and
call
stos
data16
shl
jns
pop
push
daa
mov
clc
cltd
pop
mov
out
sub
xor
add
popa
lahf
rcrb
xor
mov
notb
sbb
inc
jp
mov
xchg
cmp
push
inc
push
mov
ret
or
out
mov
jo
lret
sbbl
cmp
nop
scas
xchg
jle
fcoml
rclb
mov
pop
or
insl
xchg
adcl
mov
and
es
divl
dec
loope
int3
push
ljmp
mov
lock
xchg
cli
lret
mov
stc
pop
dec
fucom
or
icebp
pop
test
in
xchg
mov
mov
mov
xchg
stc
std
mov
sub
push
xchg
jns
stos
loopne
lds
cmpsl
or
fists
xor
call
sbb
xor
aaa
popa
lods
inc
std
into
sbb
lret
xor
xor
xor
gs
popa
sub
fbstp
inc
insl
aam
lock
mov
mov
fwait
xchg
cmpsb
or
mov
scas
push
add
sbb
fs
das
fstpt
inc
lods
sbb
cmc
adc
fwait
mov
out
mov
mov
sbb
mov
jb
sbb
add
and
lea
call
xchg
push
stos
stc
aam
cmp
sbb
loopne
or
inc
add
stos
inc
sub
test
or
and
sbb
stc
sub
sub
ja
roll
mov
fsub
dec
lds
and
icebp
jge
push
sbb
clc
or
adcl
filds
insb
xlat
dec
outsl
mov
push
stc
adc
and
sbb
jae
pop
mov
adc
test
xchg
insb
lods
mov
ja
and
jp
cs
mov
jne
mov
inc
jle
fiadds
dec
mov
adc
mov
inc
lock
and
in
jl
sbb
test
orl
outsb
add
cli
out
mov
lock
xchg
xor
out
test
dec
inc
roll
jle
xchg
dec
sub
push
cmp
xchg
in
pusha
test
sbb
xchg
test
cmp
xor
mov
cmp
push
cmp
jecxz
fbld
sar
pop
lds
push
inc
fwait
xchg
or
push
cmp
mov
imul
es
test
in
jecxz
mov
inc
sbb
popa
pop
xchg
enter
push
xor
cmp
aad
inc
cmp
add
pop
aas
ja
and
inc
mov
loop
imull
movsb
hlt
or
enter
loope
movsl
inc
mov
push
fsubrs
sahf
pop
js
push
and
mov
inc
cmp
mov
scas
xchg
insl
sahf
fwait
adc
xchg
pop
push
or
call
lcall
mov
cmpsl
mov
or
clc
mull
xor
mov
add
inc
popf
insl
jle
cmp
pushf
jecxz
fbstp
dec
sub
sub
js
xchg
xchg
push
cmp
push
ret
dec
xchg
mov
leave
jmp
std
push
push
fstpt
jg
jb
or
sahf
dec
mov
loop
scas
lahf
mov
push
fs
jecxz
dec
sbb
es
or
test
mov
test
rclb
xchg
inc
imul
push
jns
cs
ss
out
imul
mov
out
bound
pop
mov
cmpsl
enter
cmp
mov
mov
adc
pop
ret
stos
fdivrl
xor
cwtl
inc
pusha
in
cmp
int
loopne
mov
hlt
lret
shlb
and
push
sbb
push
sbb
dec
mov
or
leave
clc
dec
cmp
jecxz
cmp
and
ljmp
shll
insb
mov
push
aam
addr16
mov
xor
cmpsl
push
adc
pop
jno
ficoms
imul
out
push
adc
adc
dec
test
lods
gs
and
add
lods
popa
jecxz
mov
sbb
inc
pop
mov
hlt
in
jg
jno
xor
sbb
jbe
mov
dec
in
mov
std
dec
sub
subl
cmp
xchg
dec
push
std
int3
loopne
sub
arpl
into
sub
pop
mov
jo
mov
jp
mov
scas
ljmp
mov
xor
mov
shlb
push
ficomps
in
lcall
mov
loop
jle
lcall
xlat
pop
hlt
popa
testl
mov
scas
sti
jle
jne
loope
mov
ljmp
sub
lock
fistl
aas
jmp
mov
data16
leave
cmp
pusha
push
outsb
xchg
jg
cmp
inc
movl
loop
leave
add
pop
or
call
dec
cmp
inc
jge
add
mov
js
iret
adc
cwtl
cmpsb
xchg
push
loop
bound
inc
inc
jge
push
sahf
leave
push
aam
ret
push
pop
pop
mov
dec
es
xor
mov
nop
clc
out
adc
dec
inc
cmc
in
push
mov
int3
mov
stos
arpl
dec
call
mov
sub
iret
xchg
cmp
xchg
adc
cmc
jo
jbe
inc
cltd
icebp
push
adc
inc
mov
mov
int3
jb
test
jg
jo
push
sahf
jmp
je
or
pop
push
addr16
jge
jno
lods
push
and
jmp
les
jmp
cli
lds
loope
sub
divb
jle
test
mov
mov
jbe
add
cmc
fcompl
rcrl
push
dec
rorl
cld
mov
push
mov
xchg
fstpl
loope
pusha
movsl
into
enter
sub
nop
movsb
das
sub
push
repnz
js
or
clc
jo
inc
insl
mov
add
add
nop
adc
jmp
iret
movsb
cmovbe
test
xchg
mov
push
sub
xor
inc
pop
jle
movsb
cs
fists
bound
sub
mov
xor
stc
fisubrl
sbb
das
push
loopne
imul
cltd
sbb
pop
shrb
aas
push
js
sub
lahf
xchg
jg
clc
xchg
sub
lret
sub
paddb
pop
rcr
ret
xchg
aaa
dec
jno
int3
and
add
in
or
lea
xor
movsl
pusha
popa
nopl
cmp
sbb
cli
sub
sub
fcomps
ljmp
add
and
pop
enter
jns
out
mov
sbb
xor
pop
loope
arpl
add
js
xchg
sbb
jle
push
aam
mov
mov
sti
adc
inc
mov
pop
cmp
push
dec
es
inc
shlb
adc
jg
popa
inc
leave
dec
sub
movb
xchg
xlat
in
or
push
arpl
xor
fildll
add
les
mov
es
mov
psubusw
sub
ret
push
adc
jno
xchg
sub
xchg
in
mov
adc
mov
movsl
in
mov
int3
int3
popa
in
daa
add
in
or
pop
xchg
daa
or
sbb
sub
cmp
xor
pusha
dec
outsl
and
psubd
adc
mov
gs
xchg
xchg
mov
pusha
jp
push
xor
add
or
xchg
mov
push
xor
out
icebp
addr16
test
int3
imul
inc
mov
add
adc
mov
sarl
push
push
imul
xor
mov
or
jecxz
nop
inc
fimuls
jb
hlt
in
sub
movsb
push
rcrl
jbe
stos
dec
jae
cltd
or
jns
xor
xor
adcl
push
mov
mov
jno
repz
mov
cmp
scas
push
and
inc
ds
in
movsl
mov
fistpl
nop
dec
insb
call
push
jae
cltd
or
movsl
jle
cmpsl
adcl
fsub
dec
insl
and
fmulp
shrb
sub
pushf
sbb
test
pop
add
inc
js
out
stc
sbb
push
xor
in
and
je
jne
cmpsl
rorl
cmpsl
xor
push
aas
int3
subl
in
push
sbb
sbb
xchg
arpl
sbb
pop
test
test
sub
lods
and
loopne
or
xor
shll
cmc
insl
and
add
or
jnp
test
jmp
ja
cmp
xchg
jle
mov
lods
push
jge
stc
cmp
ds
dec
fistpll
data16
scas
rcrb
xchg
sub
stos
sbb
imul
fisttpl
add
outsb
stos
jne
jmp
adc
pushf
leave
jb
ds
inc
shrb
mov
loop
jecxz
push
sbb
mov
cli
aad
es
sbb
sbb
aas
inc
add
mov
mov
fstpt
sub
dec
outsl
push
add
sbb
cmp
mov
subl
sub
in
push
jae
inc
xchg
or
cmp
mov
or
insl
scas
in
in
lods
ror
adc
pop
push
pop
xchg
jmp
popf
sbb
aaa
std
jmp
rcrb
bound
leave
mov
cmp
mov
mov
hlt
outsb
sbb
mov
jl
dec
loope
call
in
cmpb
imul
adc
icebp
xchg
xor
fs
fistps
xor
cmp
jp
add
sahf
test
push
cld
push
pop
xchg
mov
cmp
out
xlat
lock
xchg
imul
andl
push
loopne
jge
aaa
mov
and
sahf
insl
cmp
lret
and
mov
data16
orb
sbb
fwait
sub
in
push
into
test
cmp
test
sbb
and
cmp
iret
cmpb
aam
sub
cmp
jns
or
jp
jle
dec
test
pop
mov
mov
xchg
repz
push
mov
or
mov
jmp
adcb
pop
in
jns
mov
cli
jecxz
or
sbb
sti
xchg
lods
mov
sbb
push
mov
and
std
jp
sub
push
add
mov
repz
loop
dec
test
and
and
jp
pop
sub
xlat
js
push
mov
sub
adc
or
mov
sbb
lock
loopne
cmp
adc
insb
sahf
push
add
inc
imul
xlat
mov
and
cmpsb
stos
test
shl
sti
loopne
cld
adc
outsl
pop
push
push
push
pop
subb
loope
iret
addl
hlt
loope
jae
jnp
lock
insb
fs
fcmovne
movsl
sub
adc
js
dec
sub
rorl
iret
mov
cmp
icebp
and
mov
inc
sub
mov
or
movb
nop
sbb
and
shlb
xchg
inc
cld
in
mov
mov
mov
mov
das
lcall
stos
insb
adc
enter
xchg
daa
inc
clc
mov
stos
roll
int
jg
cmpsb
jns
imulb
cmp
sub
das
enter
inc
sub
call
call
inc
sub
or
push
or
mov
jae
pop
cmp
es
xchg
clc
mov
inc
in
push
out
push
inc
xchg
pop
std
scas
mov
pop
inc
jg
push
fdivrs
iret
out
and
cmp
jae
lret
ds
add
aad
cmp
mov
xor
divl
inc
push
xor
pushf
fsubrl
mov
fxch
or
mov
loope
mov
aam
pop
sti
lds
lret
in
fidivrs
adc
in
xchg
push
jb
jmp
ret
repnz
jp
sub
cwtl
mov
lock
mov
mov
mov
cld
jb
sub
adc
insl
movsb
dec
jne
les
fildl
pusha
and
aas
test
adcb
push
popf
jae
lock
cltd
or
lcall
pop
push
jae
jecxz
xchg
cs
rcrl
mov
mov
adc
shll
imull
lret
lds
clc
xor
mov
dec
lret
divl
push
push
inc
dec
xor
aad
xchg
das
repnz
pop
cmpsl
or
jg
cli
psllq
gs
repnz
mov
inc
xchg
in
filds
fxch
xchg
dec
jbe
mov
dec
std
or
lods
aad
sbb
adc
sahf
jne
cmp
fwait
push
xchg
aaa
stos
inc
inc
js
or
xchg
cltd
test
mov
xchg
imul
jae
adc
mov
inc
inc
add
add
mov
mov
out
pushf
in
jmp
push
fnsave
js
int3
jae
and
mov
pop
fsts
push
dec
xor
xor
pop
mov
js
inc
or
cmp
pop
hlt
inc
jae
push
inc
sbb
aaa
or
inc
dec
rcrb
lret
mov
push
sub
sbb
xchg
cld
shrl
loopne
ds
setge
jle
pop
mov
lret
das
sbb
adc
xor
xor
cmp
repz
sub
std
inc
loope
or
and
and
loopne
ret
outsl
sbb
mov
outsb
dec
push
daa
mov
ja
iret
add
dec
das
test
out
mov
xchg
jl
or
adc
sub
mov
sub
mov
loop
or
push
xchg
pop
out
out
mov
daa
arpl
cmpsb
and
pop
xchg
mov
insl
sbb
into
repz
add
cwtl
daa
sbb
or
pop
xchg
push
pop
push
stos
popf
adc
sbb
xchg
xchg
cld
divl
add
add
pusha
mov
push
push
outsl
movw
sub
cmc
xchg
insl
mov
fimuls
ret
mov
cmp
cli
jg
outsl
incb
mov
bound
ss
sbb
lret
std
sub
inc
xchg
mov
xchg
xchg
mov
jmp
pop
push
adc
mov
pop
mov
jo
mov
lods
jecxz
imul
sbb
sub
push
xlat
arpl
jnp
add
test
sub
dec
pop
int3
push
cltd
mov
pushf
add
xchg
arpl
push
shlb
xor
sbb
arpl
push
jmp
fs
pushf
mov
inc
int
and
sub
aas
outsb
out
repnz
xor
sub
and
jbe
jnp
sarb
push
movsb
mov
out
pop
stos
flds
ds
out
jbe
mulb
or
add
fisubl
bt
fiaddl
shl
das
mov
sub
inc
add
push
mov
jge
or
cmp
decb
adc
ljmp
jmp
dec
and
jmp
roll
push
pop
in
jne
bnd
sahf
mov
or
push
jg
data16
lea
add
inc
fnstenv
insl
and
cmp
sub
push
push
out
fstps
mov
lea
jecxz
push
in
out
ret
inc
int
lret
mov
lods
or
mov
rcrl
or
ds
jmp
push
paddq
jne
ja
ja
std
push
lea
sbb
out
adc
mov
fnstcw
mov
jecxz
fildl
add
sbb
xorb
jecxz
in
inc
sbb
cmp
rolb
sbb
fwait
ss
jae
mov
jbe
gs
and
xor
add
repnz
cmp
aas
ljmp
movsl
add
imul
cwtl
mov
int3
rcrb
sub
fs
add
adc
inc
loope
pop
in
add
sbb
mov
and
push
mov
xchg
ljmp
mov
lcall
repnz
aam
icebp
mov
sahf
call
daa
aaa
gs
in
mov
sub
out
enter
aaa
icebp
imul
push
push
mov
jle
xor
mov
cltd
and
lcall
mov
mov
bnd
push
dec
xchg
jne
fsts
test
ret
xchg
push
dec
jnp
push
daa
in
shrl
mov
addr16
sbb
imulb
test
xchg
dec
inc
and
in
loopne
lahf
cmc
xorb
rcrl
inc
and
push
stos
in
nop
repz
outsl
xchg
jge
out
mov
jmp
data16
rorb
inc
push
mov
and
mov
scas
inc
lock
xor
push
xlat
pop
dec
scas
sub
sti
stc
insb
dec
movsl
leave
xchg
pop
sub
outsb
mov
pop
mov
mov
pushf
push
push
mov
dec
jle
scas
out
xor
testb
and
insb
jne
loope
test
inc
movsb
sub
mov
jp
mov
dec
addb
lret
sub
lcall
xchg
pop
lods
xor
cmpsb
dec
cli
pop
cmpsl
and
add
mov
aas
in
inc
insb
dec
push
jp
pop
push
mov
adc
fiaddl
inc
lret
jl
cltd
push
bound
jo
mov
ror
mov
ljmp
inc
jne
pop
sahf
push
and
jl
cmp
and
std
pop
outsl
out
lahf
add
jb
stos
sbb
in
xchg
xchg
popa
rorb
inc
pop
cli
xchg
fsubr
adc
cmp
cmp
push
into
es
rclb
fs
xor
popf
sub
lods
push
test
inc
and
jbe
fisttpl
xor
mov
jnp
dec
and
daa
cmpsl
and
bswap
in
mov
mov
icebp
cwtl
mov
lods
lods
shlb
dec
mov
pop
cmpsb
ret
in
pop
cli
ss
in
test
test
xchg
pop
cmpsl
mov
pop
push
add
cltd
insb
mov
cmp
adc
xor
push
mov
cmpsl
bound
mov
jge
xchg
lcall
xchg
jnp
notb
ljmp
mov
sti
scas
push
xor
cmp
or
rclb
dec
jo
push
outsb
xchg
or
inc
add
outsb
in
shl
mov
and
and
fcmove
add
gs
mov
shll
mov
std
mov
insb
push
ffree
ret
pop
outsl
pop
inc
pop
cmp
push
add
test
and
pusha
fists
mov
int3
fmull
sub
cmc
aaa
lahf
dec
push
adc
pusha
nop
arpl
push
jb
push
mov
xor
pop
pop
lret
xchg
mov
movsb
stos
mov
repz
jo
ficomps
outsl
push
adc
pop
pop
jle
rorb
sbb
sub
std
ss
pop
notl
mov
mov
pop
aaa
scas
aam
mov
adc
ja
mov
stos
in
xor
mov
inc
add
dec
cmp
ret
lods
inc
push
adc
dec
out
xchg
mov
shlb
mov
push
xor
mov
pop
nop
mov
xchg
mov
lcall
jbe
mov
popf
lods
movsb
push
filds
push
sbb
ja
or
xor
sbb
and
mov
iret
xor
mov
fistps
lea
sbb
pop
jecxz
lods
jb
adc
mov
cmpsb
rcr
lcall
cmp
xchg
adc
iret
jnp
xor
pop
xchg
mov
gs
out
lods
cmpsl
out
fstps
mov
xchg
sarb
push
xor
add
and
ficompl
aas
std
mov
data16
sub
xor
push
outsb
testl
cmp
mov
andl
ss
sub
xor
sarl
out
out
add
adc
in
lret
push
insb
lea
mov
cmp
jecxz
mov
in
mov
sub
and
jo
lock
adc
ret
call
cmp
mov
insl
push
jno
aaa
add
cmp
sar
test
std
xchg
ljmp
sahf
popf
jg
pop
mov
adc
xor
mov
mov
dec
scas
adc
sub
jecxz
add
jmp
jecxz
stc
jge
dec
arpl
icebp
cld
dec
pop
das
mov
sbb
sbbb
icebp
adc
adc
aad
xchg
out
jb
daa
push
pop
sbb
add
enter
push
addl
mov
into
movsb
pop
insl
add
mov
in
pop
push
fildll
mov
popa
pushf
push
jno
mov
mov
push
mov
xchg
push
cwtl
cmp
jbe
mov
or
shrb
out
push
fldt
shll
push
sti
pop
jae
xchg
out
repnz
inc
inc
pushf
imul
leave
popf
jle
fcomps
and
jns
cmp
mov
and
lods
or
add
test
dec
imul
es
mov
jp
fsubrl
fsubr
sbb
in
dec
mov
in
insl
iret
aad
mov
adc
xchg
int
push
adc
clc
jno
sbb
xor
sti
or
or
ret
push
inc
lods
dec
sub
adc
push
aaa
pop
push
popf
sbb
pop
push
flds
shrb
xlat
mov
outsl
inc
sarb
movsb
xor
push
push
test
lods
mov
pop
dec
adc
ror
js
pop
lods
sbb
out
pop
insb
dec
cltd
add
aad
testl
cmp
pop
stc
loope
adc
add
inc
jg
mov
xchg
lcall
lock
movsb
dec
cmp
dec
cs
mov
push
push
adc
sbb
or
imul
dec
fldl
dec
xchg
test
aas
int3
cld
cwtl
mov
test
jns
and
je
popa
js
push
lahf
xor
ror
mov
push
iret
faddl
xor
incb
mov
movsl
sbb
loop
stos
sbb
jle
pop
xlat
lea
repnz
mov
loop
mov
mov
rcrb
mov
cld
adc
movsb
std
pop
cld
add
loopne
std
nop
xor
rcll
mov
cwtl
cmp
lds
cmpsl
jno
xchg
fsubrs
sti
out
xor
mov
rorl
ja
mov
jg
sub
ja
clc
filds
sbb
push
adc
inc
mov
push
lds
push
mov
cmpsb
je
loope
repnz
mov
xchg
inc
rorb
into
mov
rcl
cld
pop
push
scas
or
xchg
movsb
sqrtps
mov
clc
scas
clc
dec
and
jle
std
test
or
aas
test
movsb
icebp
xchg
xchg
xor
cmpsb
sbb
xor
sub
push
jmp
dec
push
lock
add
mov
jne
pusha
sbb
jbe
stos
ss
mov
je
push
xchg
cmp
inc
sbb
sahf
fistpll
ss
xchg
push
jle
cmp
and
in
push
mov
xor
xchg
or
addr16
cwtl
jg
dec
sbb
or
lret
adcl
outsb
xor
jle
out
cmp
jo
and
sub
dec
xor
test
dec
iret
hlt
arpl
repnz
sti
js
inc
sub
lds
cmpsl
and
out
stos
xchg
push
mov
es
push
shrl
imul
pop
sbb
adc
and
sahf
inc
mov
pop
push
and
jo
sbbl
xchg
jns
mov
dec
xchg
inc
inc
adc
jge
fistpl
fdivrl
aam
ret
data16
sti
mov
insb
shlb
cld
xor
mov
test
jl
gs
push
push
outsb
rcrl
jle
insb
and
daa
mov
cmpsl
or
mov
dec
outsb
xchg
push
mov
mov
adc
and
lahf
lea
call
jno
mov
push
xchg
pop
hlt
push
pop
inc
push
aad
adc
pop
inc
out
jge
addb
mov
and
insb
outsl
dec
sub
mov
pop
ljmp
leave
aad
call
int3
cmp
pusha
sub
out
xchg
ja
daa
mov
push
cmp
xor
fwait
pop
xchg
js
in
mov
adcb
std
pop
or
lea
popf
int3
jle
lret
push
mov
in
dec
insl
stc
add
mov
pop
mov
xchg
imul
adc
movsl
fsubl
and
fidivs
dec
jp
rcll
mov
mov
fildl
sub
into
cmp
jp
adc
insl
insb
xor
fsubrl
dec
testl
or
insl
pop
mov
sub
out
andb
push
imul
in
cmc
sarb
pop
imul
sub
push
mov
pop
or
inc
test
sbb
aas
popa
inc
dec
stc
shll
jnp
jbe,pt
shr
test
stc
arpl
dec
mov
jmp
add
sbb
std
inc
mov
cmc
xchg
or
sti
lret
fsubr
rorl
fs
mov
sahf
sti
test
adc
popl
test
mov
lods
pop
xor
sub
push
xchg
je
and
mov
loope
or
test
fildl
adc
in
cmpsl
imul
adc
jg
pop
mov
lahf
push
pop
mov
repz
pop
dec
push
mov
into
int3
xchg
xchg
jbe
jbe
or
mov
inc
fnstcw
push
pop
imul
mov
fucomi
mov
add
xchg
jp
mov
out
or
or
aaa
jae
mov
adc
ret
mov
mov
clc
popa
pushf
addr16
xchg
inc
push
cmp
out
leave
out
push
test
sbb
popa
xchg
repnz
ficoml
pusha
inc
shrl
jb
xchg
jo
xchg
inc
pop
push
push
fwait
pop
xchg
dec
mov
or
ja
outsb
sub
mov
out
lret
adc
mov
jnp
inc
jmp
or
sbb
dec
repz
fisubl
pop
jns
in
cld
xchg
daa
lods
rcr
adc
push
ret
shlb
xor
dec
sbb
cld
cmpsl
sub
mov
pop
add
inc
push
mov
mov
cmp
fwait
jbe
outsb
enter
jb
pop
into
jb
ljmp
cmp
int
pushf
imul
rcll
daa
or
adc
decb
fmuls
pop
pop
dec
mov
mov
sti
iret
fcomp
data16
dec
arpl
mov
cwtl
pop
xor
xchg
xchg
js
dec
cmp
nop
enter
ja
into
es
mov
xchg
cmp
lahf
movsl
cmpsb
mov
fsubs
inc
jmp
pop
sub
xchg
dec
dec
shll
pop
sub
arpl
dec
cld
push
adc
xchg
scas
repz
fadd
jecxz
ficoml
shrl
call
test
loopne
das
and
xor
mov
out
stc
repnz
and
lea
push
xchg
imul
aad
mov
shlb
pop
stos
adc
fmulp
dec
cwtl
stc
mov
call
push
dec
xor
fisttpl
adc
jecxz
adc
pop
jle
mov
inc
push
mov
mov
cmpsl
sub
mov
insb
adcl
push
movsl
loop
shlb
inc
fwait
mov
in
adc
push
repz
push
sbb
sti
imul
loop
mov
jnp
loopne
add
mov
imul
jo
mov
sub
push
cltd
dec
mov
scas
add
subl
addb
adc
or
jp
xchg
bound
cmp
cld
adc
fimull
jle
push
es
sti
dec
fcos
loope
cmp
push
mov
addr16
mov
mov
ja
lea
sbb
sbb
inc
and
mov
sbb
in
push
scas
xchg
mov
clc
mov
jae
adcb
sbb
dec
cld
subl
add
loop
aad
adc
mov
xchg
push
sub
mov
sti
dec
in
xchg
jle
mov
lcall
cmp
and
add
xchg
mov
push
pop
xchg
push
xor
cmp
je
mov
outsl
jmp
push
mov
and
xchg
sub
pop
lods
cli
les
ret
sti
in
and
hlt
faddl
mov
test
inc
lret
sti
sbb
ljmp
mov
dec
cwtl
cmp
pop
mov
in
pop
sti
xor
call
inc
aas
push
cmc
std
lods
in
mov
addr16
adc
imul
imul
jns
dec
push
xchg
test
mov
push
mov
stc
push
xchg
pop
mov
cmpsl
add
clc
inc
jne
adc
popa
orb
mov
fdivs
pop
movsb
dec
mov
push
sbb
push
rolb
lea
adc
xor
xor
imul
push
addb
sub
sbb
adc
push
mov
mov
sahf
push
sbb
and
mov
orl
int3
inc
sub
cld
mov
cmc
add
aaa
repnz
and
mov
cli
rorb
push
fstpl
sbb
sub
mov
imul
sahf
cs
stos
test
cmp
outsb
inc
sbb
jns
mov
cwtl
push
data16
push
cmc
jns
dec
mov
push
sarb
adc
enter
push
emms
rcrb
call
inc
xchg
shll
cltd
sbb
ja
cltd
ficoml
sbb
scas
push
and
xchg
adc
dec
jae
icebp
mov
call
aaa
jo
lahf
sbb
push
mov
jg
inc
addr16
pop
push
inc
cmpsb
fs
inc
sub
mov
cmpsb
ja
clc
push
dec
add
std
push
lock
or
jl
mov
pushf
sub
ret
cld
sub
scas
subl
ds
lahf
out
mov
das
adc
rorb
or
into
imul
cmp
adc
pushf
adc
jg
inc
leave
sbb
jnp
iret
lock
leave
sub
cmp
sbb
aas
adc
fsts
mov
data16
enter
imul
push
push
adc
fwait
gs
push
ja
push
jmp
loopne
jmp
hlt
pop
jecxz
clc
movsb
sti
not
jne
mov
lods
and
imul
cli
pop
adc
into
add
and
daa
in
pop
sti
jno
cmc
andb
jl
rorl
mov
ficomps
sbb
aaa
pop
fistl
outsl
pop
fisttpl
lcall
into
dec
or
sbb
xor
cli
or
sub
mov
lahf
dec
pushf
jmp
stos
and
mov
adc
sbb
pop
lret
and
xchg
push
insl
cmp
add
push
xor
push
std
xchg
es
cmpsb
inc
stc
adc
outsl
jne
hlt
ret
add
pushf
push
sbb
push
sbb
or
shl
mov
push
das
pushf
jbe
mov
mov
jae
cwtl
mov
ret
cld
mov
outsb
mov
dec
mov
out
mov
dec
or
out
pop
or
das
cmp
addr16
push
mov
jge
mov
xor
fnstenv
outsb
aas
mov
sar
xlat
roll
mov
xchg
dec
mov
subb
pop
cmpsb
cli
cmp
loope
lods
jns
or
cs
xor
sbb
ficoms
aad
inc
lock
popf
in
cmp
jo
jge
out
pop
jl
psrld
xchg
scas
pop
push
jle
jmp
shrl
sbb
inc
sbb
aaa
fisubrs
add
nop
xchg
cli
movsb
movsb
cmp
and
push
mov
sub
pop
xor
lret
cmp
out
cmp
cmp
jg
sbb
pop
xchg
es
add
sub
scas
mov
push
out
cltd
adc
jbe
outsb
xor
mov
inc
xchg
sub
mov
adcl
jns
jae
mov
and
dec
lret
les
repnz
mov
bound
jl
jne
imul
dec
jl
repz
mov
cmp
sbb
mov
and
mov
fs
lret
gs
pop
dec
repnz
and
das
arpl
mov
mov
push
mov
fwait
jl
and
or
adc
xor
stos
lret
mov
mov
insb
cmp
std
mov
sbb
xor
adc
cmp
pop
mov
xchg
loope
stc
rolb
and
enter
mov
sub
int3
gs
pop
lock
testb
cmp
lahf
movl
sub
xchg
dec
movsb
sub
clc
jecxz
sbb
adc
std
stos
xchg
cmpsl
ss
and
push
cld
test
sub
fdivl
jle
int
clc
cmp
loope
pop
js
sub
mov
ret
add
mov
jb
imulb
loop
movsl
push
mov
js
sub
jmp
out
mov
rolb
sbb
or
and
xor
fsubrl
fmull
fwait
and
jecxz
jae
jecxz
cmp
sbb
jno
rorb
repnz
or
cmp
insl
aad
clc
leave
mov
push
fldl
xchg
aas
push
push
lds
xchg
mov
jae
pop
in
xorb
add
jl
xchg
cs
out
movsl
lret
sbb
les
mov
mov
in
adc
lahf
shl
aaa
pop
repnz
push
enter
xchg
inc
addr16
outsb
outsb
or
sub
cmp
xchg
pushf
dec
and
xchg
imul
or
cli
sarl
add
dec
mov
in
push
and
and
int
mov
pusha
ret
fldt
loop
mov
add
mov
js
xchg
jl
movsbl
loop
cmp
test
scas
and
gs
mov
jle
idivb
insb
cmp
mov
imul
aam
addr16
fnstenv
xor
push
cmp
mov
inc
jp
ret
add
jb
fcmovu
inc
imul
cmp
clc
and
mov
test
imull
push
pop
jo
sub
arpl
pop
repnz
jns
fistl
bound
mov
push
fistl
lods
daa
inc
arpl
push
push
in
sahf
push
cmp
stc
popf
push
shll
in
mov
imul
cmp
lahf
cmp
mov
data16
mov
sbb
sub
add
mov
sarb
or
push
inc
jle
or
int3
cmp
mov
ljmp
into
mov
mov
xchg
add
mov
out
xor
inc
popa
push
aad
popa
mov
inc
mov
stos
imull
add
mov
icebp
lock
in
mov
loopne
push
mov
push
movl
push
mov
mov
inc
pop
lcall
aam
xchg
dec
daa
insb
notb
cmp
into
cmpl
test
mov
dec
sbb
aaa
xor
test
loope
mov
mov
dec
in
xorl
mov
dec
xor
clc
xor
insb
int3
cs
rorl
mov
cmc
in
pop
inc
aam
sbb
dec
dec
xor
daa
pop
or
icebp
inc
adc
jo
push
popa
ret
fcompl
xchg
xor
pop
adc
mov
jnp
dec
pop
movsl
add
hlt
dec
fsubrs
into
shl
mov
out
jbe
pop
movsb
add
mov
cmpsb
aas
lods
cmpl
sbb
cld
cld
pop
test
inc
sahf
jo
push
ljmp
cmp
and
inc
inc
loop
das
mov
xchg
sub
shl
add
sbb
adc
push
mov
xor
arpl
aad
mov
das
push
and
xchg
xchg
cmp
jl
pushf
dec
out
setge
xchg
mov
in
add
lret
cli
aas
fnstenv
pop
adc
push
or
lret
xchg
mov
mov
push
pop
push
pop
or
mov
mov
inc
dec
jno
cld
inc
add
repz
or
xchg
in
sbb
xor
sub
out
inc
push
or
decb
aaa
aad
stc
fiaddl
push
jl
mov
pop
push
mov
inc
es
aad
sbb
out
mov
and
sbb
loop
xchg
repz
xor
imulb
jl
sbb
ds
sbb
out
mov
call
sti
stos
fsubrp
and
jmp
mov
fsubrl
insl
scas
mov
mov
fildl
out
sbb
pop
aaa
out
and
and
pop
and
inc
lahf
add
call
loope
jns
jbe
adc
int
ds
push
cs
cltd
scas
xchg
in
xor
cs
ss
sub
jp
sub
sar
inc
scas
mov
mov
push
sub
or
pop
cmovnp
aam
fdivr
push
fiadds
fstl
mov
or
fildll
xor
stos
sbb
inc
mov
or
mov
xchg
add
lods
imul
test
cmp
cmp
insl
jecxz
stos
pop
jnp
stos
jg
mov
aas
enter
lock
jge
out
mov
out
sub
pop
push
test
stc
loope
push
pop
stc
pop
or
fs
or
out
jp
in
in
aaa
jb
fwait
insb
fcmovbe
adc
mov
xor
fisttpl
xchg
mov
mov
xor
shrb
lret
inc
cld
inc
sub
int3
pop
mov
or
pop
imul
sub
mov
les
and
jmp
and
stos
inc
and
push
dec
cmpb
sarb
mov
mov
push
scas
mov
mov
jge
int
inc
imul
sub
cs
jnp
ljmp
mov
pop
repz
popf
dec
pop
repnz
iret
inc
imul
add
sub
xlat
and
or
push
movsb
in
or
mov
xlat
ficoms
cmp
mov
lods
mov
pop
scas
inc
popa
into
popf
sub
pop
insb
inc
xchg
mov
call
shrb
or
xchg
adc
iret
imul
movsl
mov
popf
inc
ja
or
mov
aad
test
aad
or
inc
jae
sub
mov
shll
jbe
ss
out
mov
cmp
adc
fistpl
sub
mov
lock
loope
imul
js
std
aas
inc
adc
cli
xor
lods
test
inc
cwtl
sbb
xor
cmp
clc
fmull
pop
lea
xor
mov
add
outsl
sbb
xchg
pop
or
arpl
movsb
sarb
mov
xchg
pop
outsb
insl
push
mov
sub
mov
insb
fdivs
inc
push
mov
add
es
mov
mov
out
shlb
mov
cmp
mov
sbb
cmp
xchg
cmp
pushf
mov
push
sti
mov
lret
push
or
popf
adc
mov
push
mov
jo
inc
dec
adc
out
mov
into
jnp
jne
mov
xchg
aas
clc
jae
sbb
pop
mov
xchg
pop
andl
lcall
js
ret
gs
adc
push
mov
ja
jle
jp
stc
push
xchg
out
lods
xchg
mov
das
xor
pop
stos
ljmp
adc
mov
jecxz
inc
and
cmpsb
mov
fwait
adc
pop
hlt
aaa
mov
or
and
test
xor
and
sbb
sub
pop
mov
or
jmp
dec
test
rclb
das
add
and
cmp
ret
cmp
mov
add
or
rcrb
add
xchg
and
cwtl
dec
pop
leave
fisttps
xchg
xchg
dec
adc
sbb
mov
mov
and
pop
add
jmp
inc
lods
stos
aad
xchg
clc
pop
and
mov
movsl
test
out
out
xchg
in
adc
inc
xchg
icebp
push
rcll
js
and
test
push
rcr
outsl
push
jae
adc
adc
jecxz
inc
and
mov
xor
sbb
sahf
mov
add
xchg
pop
cltd
mov
shlb
stc
pop
es
mov
cmp
test
and
repz
es
sbb
test
jnp
jg
arpl
sub
popa
out
dec
mov
je
sub
inc
mov
xor
pop
icebp
pop
sub
jae
outsb
test
cmpsl
pop
xor
outsb
into
mov
aad
sub
adcl
lret
xchg
and
mov
cmp
xchg
imul
push
shl
out
in
stc
mov
add
fldt
and
pop
push
loope
sti
sbb
push
lret
and
cmpsb
std
pop
jbe
stc
movsb
repz
sub
mov
js
mov
into
in
pop
shl
int
xor
xchg
cmp
inc
repz
push
push
pop
cmp
jb
add
movsb
pop
imul
lahf
sbb
fwait
out
nop
mov
mov
xchg
pop
jns
push
faddl
sbb
sti
jmp
shlb
insl
clc
adc
mov
outsb
lods
jne
outsb
test
dec
adc
movsl
insl
xchg
mov
mov
sahf
adc
pop
in
and
out
cwtl
xlat
fistps
stc
lcall
ret
sbb
jl
call
aas
sub
out
cmp
insb
inc
push
or
sub
xchg
adc
cli
call
setge
add
ret
call
idivl
sbb
mov
mov
fstpl
push
ficoml
std
sbb
enter
xor
aad
negb
sub
dec
add
sbb
test
mov
jle
fsubrs
pop
inc
inc
jnp
mov
imul
popf
xor
test
mov
hlt
sti
std
rcrb
or
movsb
fcompl
mov
insb
push
nop
rcl
dec
mov
ud1
fildll
roll
leave
int
fcompl
rol
xchg
dec
dec
xor
gs
xchg
in
cmpsl
adc
mov
sbb
sub
dec
test
lds
lods
pusha
adc
cmc
jbe
rolb
xchg
or
movsb
xchg
arpl
lds
test
pop
cmp
shrl
xlat
jp
rorl
mov
xchg
lcall
inc
movsb
clc
jle
scas
clc
std
iret
jne
mov
xchg
aas
xchg
jnp
sti
mov
fs
pop
dec
dec
in
aad
jmp
cmpsl
lods
mov
dec
pop
out
mov
popf
xor
or
mov
cmp
rcrl
push
lods
cmp
xchg
insl
add
mov
sub
xor
dec
test
hlt
icebp
lock
cmc
js
mov
mov
cmp
dec
gs
jne
pop
daa
xor
repz
out
pop
dec
in
jne
addb
cltd
cmp
leave
popf
adc
lret
imul
xchg
xor
inc
sub
jne
inc
cmp
fdivs
test
push
stos
inc
cmpl
test
push
in
lock
pop
mov
add
or
or
cwtl
jl
pop
adc
cli
pop
sahf
sbb
mov
xchg
in
mov
and
insb
faddl
mov
lods
dec
in
aas
inc
cmp
jno
loop
or
pop
jae
into
imul
int
and
insb
dec
lret
sub
cmpsl
push
jae
pop
in
xor
push
imul
dec
xchg
pushf
fs
mov
iret
sub
mov
pop
mov
push
dec
xor
pop
dec
sub
clc
mov
out
in
mov
lock
mov
adc
push
pop
popa
jae
ds
jno
sub
cmc
jg
pop
int3
jge
fildl
icebp
mov
iret
icebp
lret
pusha
aaa
mov
xor
aas
iret
cbtw
or
xor
nop
jmp
pusha
inc
in
mov
cmp
mov
testl
pop
dec
xor
push
nop
xor
cli
imul
jns
stos
pop
scas
jge
shll
in
insl
lock
sub
add
lea
pop
xor
fwait
xchg
xchg
mov
cmp
mov
mov
scas
fcmovne
sub
jge
stc
lea
imul
jne
clc
and
xchg
cmpsb
mov
mov
stc
enter
cmp
mov
fwait
shrl
call
pop
ret
iret
inc
mov
or
xchg
push
repnz
sbb
dec
and
or
cmpsl
dec
ficomps
pop
addr16
push
int3
leave
cmp
ss
gs
xchg
cmpsb
repz
push
or
or
sbb
scas
lods
std
imul
clc
jae
in
ja
cltd
sbb
stc
es
js
shlb
les
loope
mov
test
add
pop
mov
and
dec
test
pop
adc
and
push
sahf
push
mov
stos
ds
mov
xor
fsubl
xlat
and
jle
ficomps
pop
mov
into
sbbb
aas
push
rcrb
out
mov
sbb
test
jo
aad
call
dec
adc
ficomps
ret
or
notl
xchg
in
sbbb
push
fsubrs
subl
fisttpl
dec
mov
pusha
divl
cmp
rolb
pop
xchg
and
dec
or
in
cli
mov
jb
inc
inc
add
cmp
inc
lds
push
nop
std
jnp
inc
in
mov
dec
adc
lods
mov
movsb
scas
mov
inc
xor
xor
sar
push
fadd
adc
sahf
sbbb
sub
xor
pop
jle
aaa
mov
aad
jge
pop
push
jle
js
lret
xchg
inc
insl
sti
lret
xor
dec
fs
lods
out
xor
mov
fmulp
idivl
add
test
xchg
test
inc
ret
das
lret
shl
dec
push
jae
shrl
pop
mov
adc
adc
push
lds
movsl
push
jp
and
mov
inc
push
dec
pop
inc
sub
or
mov
leave
es
adc
ss
int
pop
sbb
jmp
lock
push
leave
addb
inc
jecxz
daa
pop
lret
stos
out
ss
fidivs
ret
mov
mov
mov
movsb
repnz
repz
mov
dec
ret
loope
inc
into
decb
fbstp
xlat
cmp
lahf
out
test
xor
insb
fxch
scas
test
sbb
mov
fcmovb
rorb
int3
or
test
cmp
sbb
fsubs
mov
add
and
subb
lea
add
dec
inc
int
and
inc
mull
mov
jge
pop
mov
mov
xor
jg
xorl
dec
adc
in
mov
out
in
cmp
imul
mov
pop
pop
stos
sub
add
testl
pusha
cmp
out
jge
pop
dec
add
xor
sbb
adc
jns
sbb
rclb
xchg
out
jp
xchg
mov
cwtl
popf
clc
push
call
dec
pushf
stos
in
jmp
sub
dec
das
jns
aam
sbb
sahf
stos
jb
arpl
addl
enter
cmp
in
jge
mov
fidivrl
push
sub
inc
cmp
add
jecxz
cmpsb
ss
and
sub
gs
cmp
scas
gs
jp
jno
lea
add
sar
pop
pop
jecxz
ret
test
pop
iret
lret
xchg
cmp
es
pop
aad
inc
loop
flds
adc
adcb
je
mov
cwtl
outsl
fimull
push
popa
inc
cmp
mov
fs
ret
pop
cmp
cmp
push
add
lods
jo
pop
js
sub
addr16
js
add
jne
into
cli
and
int3
push
addr16
push
and
xor
loopne
xchg
dec
adc
add
jbe
mov
adc
add
mov
push
or
pop
and
loope
mov
repnz
fistpll
fnsave
das
lahf
das
dec
nop
dec
push
insl
jecxz
mov
adc
lods
daa
cmpsb
pop
cmp
add
inc
loope
test
sti
aaa
cmp
and
aad
sub
push
push
xor
add
int3
pop
aas
or
cmp
ret
sub
jb
xchg
xchg
pop
cmp
les
or
push
mov
dec
mov
dec
in
pop
in
mov
movsb
mov
inc
sbb
rol
push
push
sbb
testl
int
ret
ljmp
and
aaa
fs
cmp
test
insl
jns,pn
push
xcrypt-ofb
cmpsl
in
ror
repnz
mov
push
movsb
cmpsl
adc
sbb
lea
sub
pop
sbb
adc
je
xor
cs
imul
enter
push
and
das
add
mov
adc
adc
icebp
mov
pop
or
xor
lahf
sbb
loop
sti
test
movb
push
add
jb
lret
push
cmp
loopne
idivb
ja
clc
loop
push
lods
shlb
cmp
fstpl
add
or
mov
inc
insb
ret
lcall
fidivrs
jmp
cmp
cmp
inc
mov
add
add
imul
sub
scas
ret
dec
push
sahf
sahf
jo
lret
mov
addr16
jle
sti
les
fidivl
inc
cmpsb
rcr
aas
mov
and
dec
mov
jmp
xor
add
inc
daa
test
push
and
aad
das
sbb
test
sarl
cmp
das
in
lods
shlb
inc
lret
adc
add
sub
into
movsl
xor
das
loope
movsl
pop
ljmp
add
push
movsb
test
push
pop
addr16
mov
jb
sbb
mov
xchg
outsl
ficoml
je
stc
roll
mov
mov
je
jl
out
pop
sub
insb
js
into
xorl
fwait
pop
incb
pop
add
and
inc
add
sub
mov
inc
pop
or
adc
sbb
icebp
jmp
out
xchg
repnz
out
movsb
cwtl
mov
add
push
dec
pop
lods
decb
cld
loope
or
mov
test
push
in
adc
pusha
cs
rcrb
in
xor
ret
jae
addr16
dec
imul
stos
inc
mov
or
dec
mov
inc
jbe
xor
out
fistps
bswap
sbb
cmpsl
pop
test
cmp
cmp
pop
or
and
adc
xchg
sbb
sub
inc
xchg
dec
dec
jb
xor
lods
sub
cmp
out
out
push
hlt
ret
inc
mov
xchg
std
jmp
popa
or
mov
fimull
gs
call
adc
std
mov
insl
mov
cld
lcall
enter
ficompl
scas
cmp
push
iret
sbb
lea
pop
movsb
into
adc
jne
inc
ja
in
cmpsl
stos
pop
add
cld
push
push
mov
imul
add
sbb
cmp
mov
cmp
mov
ss
inc
and
popf
stos
mov
repz
mov
adc
push
test
test
pop
dec
icebp
push
cmp
mov
fimull
jae
lods
sbb
lcall
dec
sub
mov
sarl
adc
inc
ljmp
gs
push
js
icebp
out
xchg
mov
lret
adc
iret
jae
mov
mov
add
imul
add
outsl
out
jno
or
or
pop
data16
enter
pop
cmp
or
test
mov
out
out
pop
cmpsb
mov
ret
jp
in
jo
cmp
in
cmp
lods
loop
inc
and
sub
mov
mov
ror
lea
xchg
pushf
xchg
or
xchg
and
mov
push
push
add
sub
and
mov
jecxz
mov
loop
mov
jae
pop
push
lock
inc
push
ds
mov
inc
ss
outsb
push
pop
repz
icebp
cmp
test
inc
daa
jb
xchg
cmp
sbb
rcr
fmuls
inc
add
jno
sbbl
mov
cmc
stc
or
lcall
dec
data16
push
pop
mov
ficoms
fdivrl
cmpsb
mov
outsb
fwait
loopne
inc
test
mov
test
das
add
push
xor
dec
cmp
push
cwtl
nop
insl
cld
mov
rorb
inc
imul
sub
ja
insl
cmp
lcall
push
pop
mov
rorl
jbe
dec
mov
bound
pop
sub
mov
and
out
cmpl
and
ljmp
xchg
incl
mov
and
in
xchg
dec
in
dec
sarl
sub
sub
cld
cmc
jg
repnz
sbb
and
or
lret
mov
cmp
push
jo
je
aad
jnp
cmp
and
out
ret
jle
sbb
push
pop
inc
lcall
or
adc
enter
and
fisubrs
je
adc
push
arpl
pop
add
ljmp
pop
jno
xor
enter
insl
jecxz
pop
or
and
adc
cmp
jmp
mov
pop
push
iret
push
int
sbb
pop
pop
push
inc
or
jbe
fisttpll
lds
outsl
cmpb
jge
rclb
xlat
leave
mov
ret
rorb
lcall
adc
lret
cmp
mov
movsb
hlt
jp
jns
cmp
stos
lcall
and
lahf
push
xlat
add
push
mov
lds
dec
cmp
fs
adc
lahf
cmp
add
mov
int
push
notb
push
mov
sub
stc
je
xchg
lahf
cltd
div
push
sbb
pop
sub
jl
gs
ss
sub
imul
sbb
aaa
int
mov
mov
dec
mov
jb
mov
popf
adc
popf
mov
sti
xchg
mov
xor
push
aaa
mov
les
mov
push
in
orb
ds
ljmp
push
js
std
mov
mov
cmp
out
mov
stos
test
test
add
inc
inc
scas
xchg
insb
inc
insb
out
bound
fsub
dec
and
sub
fcomps
cmc
jne
pop
mov
test
das
add
shlb
inc
inc
loope
popf
scas
popf
ds
popf
rcrb
repz
push
and
addl
gs
jae
or
adc
in
outsl
mov
sub
sub
add
jns
xchg
pop
sub
imul
divb
sbbl
xor
movsb
nop
out
cmp
xor
adc
dec
jne
loop
int
imul
jns
inc
inc
xchg
mov
pop
sbb
cld
pop
pop
sub
push
pop
sub
dec
xchg
daa
sarb
movsb
cmp
stos
pop
lods
pop
adc
push
push
into
and
ja
mov
or
pop
ja
cmp
pop
stc
mov
and
arpl
loop
mov
in
push
mov
shl
mov
test
insb
and
aaa
cld
shr
and
insl
ljmp
mov
push
inc
insb
inc
cmpsl
lods
sbb
mov
sbb
mov
shr
jnp
shll
test
jg
movsb
add
jle
sub
sbb
int3
arpl
sahf
gs
pop
xor
dec
mov
xlat
nop
cwtl
mov
out
add
sbb
mov
scas
fisubrl
cli
jb
ljmp
jmp
or
lcall
mov
ret
xor
call
rcrl
aad
in
sub
sbb
bound
adc
ret
push
xchg
jp
gs
cltd
push
mov
popf
jge
adcb
pop
stos
cmp
aad
fstl
call
adc
adc
inc
or
mov
out
mull
add
push
xchg
adc
cli
fcomps
mov
in
shll
sbb
cmp
js
adc
jmp
ret
mov
xor
andl
clc
int
or
lcall
pop
ljmp
cltd
push
ficoms
and
xchg
mov
xchg
mov
outsl
aas
xor
xor
inc
movsb
iret
mov
mov
push
ret
and
mov
mov
xchg
pop
push
cmc
out
shrb
ss
insb
jo
dec
lcall
push
push
imul
test
sbb
divl
mov
push
push
or
sub
daa
xor
mov
jmp
fistpl
pop
mov
cmpb
cmp
lret
mov
mulb
adc
ffreep
fwait
adcb
push
sti
or
lock
daa
and
addb
std
inc
mov
pavgb
int
adc
mov
dec
dec
mov
xor
orb
jmp
xor
lahf
aaa
cmp
pop
fcomi
sahf
inc
into
push
jno
mov
dec
and
xor
xchg
sbb
cmc
cltd
mov
sub
into
add
inc
jp
fsubrs
xor
insb
sbb
adc
mov
mov
rcr
cmp
rolb
cs
inc
es
sar
inc
jmp
push
rolb
jge
jno
das
adc
cmp
add
or
repnz
dec
push
jle
mov
mov
std
mov
sbb
mov
inc
mov
es
sbb
hlt
repnz
jmp
push
jno
sar
lret
add
mov
inc
sbbb
call
cltd
add
inc
push
add
jp
rcrb
cli
mov
loope
cmpl
and
pop
clc
dec
ficoms
lock
pop
leave
adc
clc
pop
or
stos
test
loope
scas
mov
clc
in
adc
cltd
xor
mov
je
movsl
and
sbb
jp
or
sbb
push
call
sub
aad
jle
mov
and
stos
jb
je
nop
push
mov
adc
xor
loopne
or
xchg
mov
outsl
incl
jl
ficomps
cmpsl
in
shlb
adc
dec
lods
iret
imul
ret
add
add
mov
or
movsl
or
movsb
mov
xor
dec
dec
sbb
dec
dec
xor
mov
sbb
stos
inc
mov
pop
testb
and
jecxz
add
jns
push
enter
mov
sbb
push
ja
cmp
into
out
adc
xlat
or
test
mov
mov
insb
in
aaa
add
jne
out
dec
divb
dec
jo
pop
data16
mov
sti
mov
jnp
inc
rcrl
mov
mov
xor
push
out
shll
mov
mov
lock
les
or
inc
mov
fisttps
xchg
lahf
and
push
loope
aas
and
xchg
inc
mov
inc
mov
cmpsl
in
jecxz
out
test
lds
mov
jp
pop
sbb
movsl
dec
pop
icebp
loopne
adc
sub
repz
push
cwtl
fs
mov
or
mov
pusha
mov
mov
ja
sbb
daa
jp
jne
out
test
data16
sbb
adc
ror
inc
int
stos
lret
ljmp
lcall
pop
jl
popa
dec
je
cltd
cmp
dec
sarl
sbb
out
or
lock
and
cmpsb
push
mov
mov
inc
xor
stos
jae
mov
pop
outsl
gs
ret
call
ss
xchg
inc
xchg
xchg
xchg
les
sahf
or
adcb
push
jnp
cmp
lds
sti
leave
mov
inc
dec
mov
leave
jge
mov
dec
xchg
dec
push
mov
cmp
push
sahf
push
adc
inc
xchg
xchg
mov
pop
outsl
pop
nop
sbb
repnz
popf
out
std
adc
sub
sbb
adc
ds
xchg
test
cltd
fs
cmp
nop
xor
xchg
mov
mov
sub
pop
mov
mov
in
inc
sub
add
mov
lahf
jmp
sbb
ja
ja
sbb
inc
and
and
sbbl
xor
in
dec
iret
add
lret
dec
es
mov
scas
ljmp
inc
mov
jge
adc
fwait
sbbl
pop
mov
dec
fnsave
out
aad
jge
in
add
xchg
shlb
mov
insb
bound
movsl
sbb
fildl
xor
mov
adc
out
pop
jno
mov
test
mov
fldenv
jl
jl
lret
inc
cli
xchg
lret
sbb
cmp
data16
aam
xchg
das
cmp
cmp
scas
sbb
sbb
jae
outsb
rcll
mov
xchg
aam
fstl
and
in
into
jg
and
xchg
mov
in
inc
test
mov
inc
adc
jnp
adc
stos
inc
dec
jmp
lods
mov
adc
adc
cmpsl
pop
mov
and
cltd
mov
mov
mov
cmp
mov
mov
and
add
rcrl
jmp
mov
pop
imul
into
dec
ret
popf
int
push
scas
push
aaa
sbb
xchg
or
nop
adcl
rclb
and
mov
sub
or
les
pop
je
cmp
std
mov
jo
mov
push
lret
adc
inc
inc
and
fisttps
xchg
test
cmp
push
out
adc
jo
xchg
lds
test
xorl
mov
test
imul
jle
imulb
sub
nop
mov
cmp
ljmp
sub
into
dec
pop
xchg
dec
je
xchg
xlat
and
lcall
loope
jg
pop
jae
xchg
out
push
test
adc
pop
mov
xchg
inc
push
and
iret
xor
inc
push
cmp
mov
into
cltd
push
and
cltd
fnstcw
adc
mov
dec
sbb
jge
inc
xchg
sub
mov
add
in
sub
fimull
sub
sbb
cld
dec
outsb
sbb
dec
or
mov
stos
int
fwait
cld
mov
and
cltd
push
in
and
inc
push
test
int3
lock
int
in
andb
dec
popf
jb
mulb
jle
xchg
pop
and
orl
mov
addl
inc
ja
lcall
mov
hlt
int3
inc
psadbw
shll
hlt
jge
pop
pop
fldt
ss
xor
mov
lods
cmp
xor
cmp
loope
mov
push
inc
or
adc
popf
cwtl
and
in
js
add
lret
dec
rclb
push
pop
mov
jnp
and
testb
rcrl
pusha
lea
inc
push
int
nop
push
xor
inc
stos
cmp
aas
jle
fildll
cmp
xor
add
testl
paddq
push
mov
imul
xor
dec
push
xchg
adc
dec
jmp
pop
sub
jmp
pop
dec
push
mov
inc
fbstp
int3
lock
jmp
sbb
push
push
fwait
mov
push
aad
je
push
pop
sub
daa
aas
or
fdivp
mov
mov
or
cmp
pop
dec
push
testl
ret
dec
insb
push
dec
xchg
test
ret
push
iret
pop
mov
pop
and
cmp
sub
mov
adc
shlb
adc
xchg
add
jae
sbb
xchg
dec
xlat
pop
sbb
in
push
imul
and
cld
or
mov
out
inc
aas
lahf
xor
je
push
jl
push
addr16
sahf
int
ja
mov
in
rolb
aam
or
xlat
in
hlt
enter
push
paddd
ljmp
leave
out
sti
js
push
add
mov
popf
pusha
xor
add
mov
cwtl
sub
fidivs
ret
insl
jae
xchg
imull
insl
leave
rolb
push
xorl
and
pop
push
shll
mov
mov
xorl
xchg
stos
adc
ja
adc
shl
ja
mov
xchg
jg
mov
and
mov
lret
adc
jp
in
insl
stc
fnstcw
xchg
jnp
ret
testb
xchg
cmp
dec
xchg
mul
sbb
lds
addr16
out
pop
adc
scas
aas
push
lock
dec
test
jns
adcb
dec
inc
dec
adc
jle
insl
add
pushf
ret
cmpb
xchg
push
xchg
imul
out
jg
dec
jae
cltd
sarb
rcrb
or
lods
mov
pop
orl
fwait
or
pop
gs
sub
into
jo
jne
jp
sbb
std
insb
sub
mov
jo
inc
xor
cmpsb
and
add
and
jns
push
daa
stos
xchg
loopne
adc
jmp
jp
in
outsb
aam
adcl
out
push
inc
cmp
data16
int3
push
add
popa
and
sub
mov
iret
rcrb
jnp
add
lret
mov
cmp
jne
lcall
lock
xchg
out
cs
dec
mov
mov
dec
xchg
jecxz
add
dec
outsl
or
push
push
pop
sub
cltd
stos
dec
ja
cmc
loopne
cmp
and
js
push
push
pop
cltd
aas
push
fs
sub
pop
mov
jns
hlt
cmpsl
dec
ret
jg
out
xor
xor
aaa
cmova
and
es
add
data16
sbb
movsb
add
dec
mov
aas
sub
and
xchg
cld
dec
shlb
cwtl
jne
fwait
jns
outsb
frstor
mov
mov
ret
cmp
mov
js
xchg
in
outsb
pop
push
mov
clc
dec
test
leave
gs
jnp
mov
or
fndisi(8087
or
fdivs
loop
test
scas
sub
dec
pop
dec
or
mov
jmp
push
in
push
es
out
and
xchg
hlt
cwtl
stos
int3
fisubl
mov
add
stc
in
hlt
mov
jp
mov
lea
dec
shll
add
xchg
aaa
dec
stos
or
lock
in
test
inc
sbb
fwait
sbb
cmp
sbb
mov
add
std
xchg
call
pop
xor
outsb
dec
leave
das
jecxz
pop
cmp
sahf
and
dec
addr16
popf
or
in
xchg
fbstp
cmp
pop
mov
mov
sti
int
aam
mov
call
jbe
push
xor
insl
in
adc
pop
add
push
and
enter
notb
mov
cmpsl
jge
mov
sbb
cmp
call
add
or
sub
add
das
sub
xchg
in
mov
adc
cmpsl
and
call
ret
aad
or
lahf
insb
adc
sbbb
jbe
pop
subb
cmc
rcrb
jo
cld
xor
sub
test
or
pop
mov
ss
aam
cmp
bound
test
stos
adc
inc
cmc
std
mov
mov
lock
mov
jnp
dec
das
dec
mov
push
push
ret
push
dec
repz
mov
add
add
push
and
xor
loope
flds
push
push
mov
jbe
xchg
jae
arpl
sarb
jl
mov
sbb
inc
jmp
push
xchg
and
sbb
inc
dec
cmpsl
subb
push
fs
imul
and
sbb
push
das
aam
dec
aad
dec
pop
dec
lahf
lret
in
in
pop
hlt
fstps
jae
ret
repz
push
test
pop
sbb
adc
int
nop
xchg
fwait
dec
outsb
shrl
mov
xchg
or
addr16
mov
pop
adc
stos
fwait
cmp
xor
test
mov
mov
mov
dec
xor
mov
sbb
add
movsb
push
fs
jmp
mov
cmp
xlat
scas
aaa
inc
sbb
push
into
mov
add
mov
rolb
ror
fdivs
cmpb
xor
xor
scas
lcall
sub
xchg
cmpsl
rorb
mov
push
add
pop
and
nop
ljmp
mov
rcrl
inc
out
pop
in
popa
ret
lcall
add
sahf
fwait
imul
push
or
xor
and
pop
out
sub
jge
cltd
dec
mov
mov
sub
lret
or
or
pop
sub
inc
xchg
cmp
cmp
nop
stos
jb
in
inc
fsub
out
adc
mov
push
adc
das
es
and
mov
adc
inc
cmpsb
push
sub
pop
rcrb
je
or
add
mov
stos
cmp
out
std
shrl
xchg
cmpsl
push
add
rorb
enter
jo
pop
pop
xchg
in
icebp
dec
mov
pop
data16
dec
movsb
cmp
mov
mull
int3
adc
sbb
xchg
cmpsb
push
punpckldq
cld
jno
cmp
dec
ret
mov
sub
inc
leave
mov
adc
ljmp
push
dec
gs
fdivs
int3
bound
xor
add
das
and
ljmp
out
imul
scas
and
push
mov
mov
idivb
inc
pop
xchg
mov
xchg
in
sbb
sbb
pop
sbb
xor
repnz
adcb
push
sbb
or
insl
ja
or
mov
sti
aas
stos
adc
mov
fdivl
jno
xorl
mov
and
out
mov
push
pop
aas
sbb
xchg
mov
hlt
add
stc
adc
mov
iret
cltd
call
mov
sbb
jnp
cmp
repz
and
sarb
sbb
je
gs
sub
pop
je
out
mov
mov
cs
push
aam
jbe
sub
add
rcll
add
pop
movsl
icebp
jb
sahf
and
push
sarb
or
mov
fstpl
call
fisttpl
ljmp
gs
lcall
mov
in
xchg
xchg
inc
imul
in
popf
xchg
inc
in
xchg
rorb
sbb
dec
mov
xchg
sub
imul
adc
rdpmc
fisubrl
pusha
or
pop
push
nop
ja
xchg
inc
sbb
fldt
and
sahf
add
jg
sbb
lods
pusha
into
mov
lret
pop
and
dec
push
xchg
out
int3
mov
add
insl
imul
test
cli
pop
icebp
pop
gs
push
inc
test
fldt
ljmp
mov
pop
xlat
inc
adc
outsb
movsb
cwtl
das
mov
or
rcrl
imul
aad
cs
dec
push
pop
or
push
repz
mov
fstpl
cmp
xchg
adc
pop
das
lret
in
cmp
cmp
pop
pop
xlat
pop
mov
into
push
mov
mov
stc
addr16
js
call
cmpsl
notb
mov
mov
loopne
roll
pop
jne
xor
insb
ficomps
lds
cmp
mov
inc
sahf
xchg
dec
xchg
xor
fcompl
push
sbb
cmp
fsubrs
out
adc
aaa
pop
sbbb
movsb
and
dec
and
ss
stc
insl
or
inc
aas
inc
out
inc
mov
add
mov
rcr
lods
dec
test
repnz
cmp
incl
adc
gs
jecxz
addr16
adcb
and
imul
arpl
push
cltd
ja
call
add
sbb
daa
cmp
daa
mov
jge
adc
jle
repz
xchg
scas
fs
lods
dec
or
inc
jae,pt
dec
and
add
push
arpl
aam
or
sbb
xor
jne
pop
mov
aam
ffree
repz
lods
xchg
cmp
mov
inc
lahf
hlt
subb
adcl
push
jg
xchg
mov
incb
adc
or
lea
inc
stc
out
mov
pop
cwtl
push
js
int3
nop
nop
je
in
xchg
add
addl
cmp
add
js
test
mov
xor
stc
jbe
ret
and
xor
in
cmc
lods
push
imul
add
jo
or
cmp
xchg
push
roll
sbb
mov
aas
push
nop
jae
or
leave
and
cmp
ja
repnz
cmpsl
dec
push
sti
lret
dec
ss
push
jecxz
sbb
mov
sbb
jecxz
jne
movsl
pop
push
adc
inc
aad
or
popa
adc
xor
arpl
lahf
or
int
lahf
std
nop
fprem
in
dec
pusha
cld
imul
xor
mov
push
mov
sbb
imulb
xor
and
hlt
add
fscale
or
repnz
fildll
add
xorb
dec
je
adcl
jle
imull
inc
lds
mov
pop
mov
mov
in
and
mov
loopne
pop
or
mov
stos
sbb
jo
subl
mov
cmp
pop
sbb
fwait
gs
mov
shll
and
in
pop
pop
inc
jecxz
stos
jbe
leave
imul
jne
mov
adc
pop
mov
iret
sbb
icebp
pushf
xor
cmp
dec
stos
mov
dec
jbe
sbb
and
xorb
and
test
or
inc
add
lods
add
lret
mov
push
outsl
stos
inc
push
int3
pop
pop
sbb
dec
cmp
jbe
jbe
andb
fwait
dec
cmpsb
in
icebp
iret
fistps
data16
pop
pop
and
sbb
jp
sub
mov
add
xchg
cmp
lods
enter
mov
add
outsl
add
inc
subb
push
inc
or
ret
outsl
cwtl
push
push
movsb
mov
inc
jne
ja
incl
fisttpl
sbb
shr
fdivs
in
scas
cmp
push
add
call
jge
sub
mov
ds
mov
sub
or
pop
cmp
addb
mov
int3
add
pop
sbb
sti
fwait
das
int
aam
pop
adc
pushf
stos
pop
xor
in
sbb
mov
xchg
add
fsubs
mov
scas
in
sub
inc
loopne
inc
lock
divb
cli
repnz
cmp
dec
pop
das
cwtl
xchg
aad
leave
pushf
xchg
adc
sub
mov
mov
lret
mov
test
repnz
lds
pop
cmp
rcrl
clc
into
pushf
cwtl
sbb
jne
scas
xchg
or
inc
les
pop
xchg
mov
sbb
pop
iret
outsl
out
ja
jbe
mov
aam
test
mov
dec
mov
jnp
jp
mov
imul
dec
inc
fsub
cmp
lret
sub
pop
dec
gs
push
in
mov
pushf
imul
fldenv
das
lret
aad
push
pop
daa
cwtl
xchg
enter
xor
push
jg
pop
cltd
fsubrs
shlb
mov
and
lds
cli
cmp
pop
inc
out
dec
jae
push
in
dec
fsub
push
ss
add
dec
stos
add
sub
sahf
add
clc
push
sub
sahf
adc
cltd
cwtl
mov
dec
aas
imul
jg
ds
dec
and
xchg
inc
lods
repz
mull
push
mov
addr16
std
das
rorb
or
fs
add
adc
scas
xchg
sbb
insl
pop
mov
jg
test
fldcw
cmp
dec
outsb
cmpsl
stos
mov
mov
sub
sub
sub
mov
mov
mov
jo
cmp
or
ss
and
popa
mul
aad
jl
cmpb
push
and
jle
and
aam
jmp
addr16
jnp
subl
ret
dec
rcrl
cmp
xchg
std
mov
mov
loope
rcr
add
push
inc
cli
cli
cmc
sti
adc
mov
push
out
mov
fdiv
int
mov
cmpsb
movsb
pop
in
mov
cmpsb
pop
jg
mov
sahf
jo
adc
push
adc
sbb
mov
out
in
inc
add
gs
cld
jbe
xor
lods
pop
jge
xor
sub
sub
cmp
or
adc
mov
mov
mov
sub
sub
cmp
xchg
and
clc
rsqrtps
ss
pusha
idiv
dec
fidivs
out
cmp
xchg
imul
push
jle
lods
stos
imul
push
in
mov
and
je
ret
sub
inc
pop
imul
pushf
mov
push
jle
in
je
fisubrs
dec
aam
mov
cmc
cmp
rcll
pop
mov
scas
push
dec
in
out
adc
call
push
pop
mov
dec
insl
movsl
adc
out
cmpsb
aad
jle
mov
xor
or
shr
mov
pop
cmp
test
mov
stc
popf
xchg
adc
add
xchg
daa
push
push
insb
cmp
xor
push
test
inc
mov
mov
inc
clc
fldcw
pop
jne
mov
jno
sub
jmp
mov
lret
xchg
mov
lahf
int
and
mov
sbb
cmp
pop
mov
testb
mov
test
cmpsb
inc
ret
inc
pusha
aaa
sbb
mov
je
cs
mov
lcall
add
js
mov
jbe
aas
ja
inc
lcall
je
cli
lcall
pop
inc
int3
mov
int
jecxz
inc
icebp
mov
dec
in
cltd
ljmp
pop
lret
mov
lds
mov
scas
outsb
jno
mov
inc
push
ljmp
lock
or
mov
ljmp
jb
and
popf
pop
add
adc
xchg
mov
push
in
pop
xchg
sub
mov
lahf
sbb
cli
mov
mov
mov
das
add
inc
add
or
fwait
shlb
cmp
and
arpl
mov
sti
std
je
adc
movsb
xbegin
adc
push
push
fwait
cwtl
xor
std
push
repz
mov
loop
xchg
xor
movsb
fwait
testb
iret
inc
push
ja
or
mov
outsb
cmc
mov
mov
mov
dec
dec
lahf
std
das
addr16
rol
or
stos
int
mov
sub
push
lds
fstpt
xchg
mov
sbb
imul
es
rolb
sbb
pop
jmp
cmpb
and
aam
jns
rorl
inc
test
mov
hlt
popf
jge
inc
fcoms
das
and
or
cmp
lock
dec
test
orl
push
push
stc
or
sub
xchg
popf
out
addr16
inc
stos
test
data16
add
dec
lcall
lahf
outsl
or
mov
repz
cmpsl
or
inc
in
insb
mov
mov
mov
repnz
push
out
in
into
jbe
popf
push
push
or
pushf
pop
fidivl
mov
pop
sahf
imul
jl
jae
sub
pop
mov
je
lcall
mov
pop
jg
cmp
jne
ficoms
incl
addr16
sahf
sbb
add
loope
in
xchg
shl
stos
xor
fnstcw
mov
clc
mov
mov
adc
ja
arpl
mov
movsb
test
shrb
insb
xor
fisttps
cli
jne
outsl
into
int
lcall
pushf
mov
cmp
xor
pushf
cmp
popa
dec
test
cltd
sub
test
pop
in
push
cmp
shlb
in
mov
cwtl
nop
pop
fnstsw
cmp
sub
mov
leave
popf
sti
inc
xchg
dec
roll
mov
scas
test
pushf
add
pop
ret
adc
sub
inc
cs
xor
fdivl
jp
push
data16
sub
js
in
mov
in
or
rclb
xor
cmp
stos
cwtl
pop
pusha
adc
jae
jmp
out
arpl
leave
mov
cli
cli
imul
push
popa
sbb
mov
movntps
insb
or
dec
out
aad
push
cmp
and
outsl
ja
xchg
out
jecxz
mov
xchg
insb
loopne
fsubrs
mov
fisubs
dec
xchg
xor
sbb
addr16
syscall
aad
push
or
cli
mov
mov
loopne
stc
pop
add
hlt
jae
jmp
mov
push
fucom
inc
mov
sbb
adc
adc
pop
add
stos
fists
inc
or
add
in
and
xchg
pop
daa
xorb
loope
jl
movsb
mov
jp
mov
pop
out
dec
pop
stos
mov
daa
and
pop
sbb
cs
push
mov
jbe
cmc
mov
dec
subb
inc
ret
xor
push
leave
and
jmp
push
dec
add
rcl
cwtl
add
mov
dec
jecxz
pop
pop
jns
out
mov
fidivrl
mov
push
and
aad
lods
mov
fwait
adc
mov
mov
cmp
jne
pop
pop
movsb
cmpsl
mov
repz
imul
dec
sbb
mov
add
in
sbb
mov
out
loope
stos
jbe
push
mov
mov
lea
dec
ds
xchg
inc
push
divb
bswap
inc
pop
pop
lea
in
jmp
add
rclb
bound
sahf
lock
psrad
movsb
mov
lahf
or
aam
pop
push
add
faddl
xchg
sub
sub
inc
imul
aas
push
mov
add
xlat
int3
fidivl
mov
mov
xchg
fldcw
cmp
adc
xor
dec
ret
aam
aas
or
push
dec
and
daa
ss
inc
out
and
sub
loop
xor
push
jecxz
and
xchg
pop
lret
ss
mov
or
or
leave
push
xchg
fnstsw
test
mov
pop
xchg
xor
pop
leave
jnp
mov
lock
movsb
stc
fs
push
sbb
dec
sbb
lret
or
leave
and
cmpsb
xchg
movsl
fldl
outsb
and
mov
xchg
lret
push
enter
fstps
mov
inc
push
mov
leave
in
mov
push
push
cmpb
pop
mov
mov
dec
ret
insl
sahf
scas
cmpsl
aas
xor
sti
cwtl
sbb
subb
call
outsb
mov
and
scas
and
sbb
int3
adc
loopne
lock
and
adc
lock
jbe
insl
lds
jg
jg
dec
clc
sub
mov
out
sub
xor
ljmp
ffreep
pop
mulb
loop
popf
jge
fcoms
xor
mov
scas
or
cmp
out
pop
and
les
jns
dec
neg
movsl
popf
shll
mov
push
cmp
cmp
cmp
cmpsl
jp
jmp
aas
movsb
inc
outsb
aaa
scas
out
jp
dec
mov
movsl
mov
inc
cmpsb
in
jge
testl
ret
inc
or
dec
jmp
pop
testl
mov
aaa
stos
imul
inc
sbb
imul
dec
sti
mov
push
xor
loope
aaa
pop
clc
cwtl
aam
std
xor
insl
pop
lods
stos
pop
pop
cli
mov
pushw
data16
xchg
xlat
xor
xor
orl
popf
shlb
lret
cltd
fcompl
inc
imul
inc
test
in
in
dec
sbb
jecxz
inc
and
mov
or
mov
cmp
dec
mov
notl
xchg
push
adc
mov
add
outsl
movsl
es
mov
mov
push
pop
ja
rcrl
cmp
in
jp
outsb
mov
mov
or
cmp
push
enter
xchg
stos
mov
inc
jecxz
mov
scas
scas
xor
vpsadbw
sub
insb
mov
nop
insl
adc
out
iret
loop
pop
push
jmp
addr16
mov
mov
scas
cmp
ret
xchg
sbb
cmp
aaa
js
dec
or
mov
not
sti
or
xor
push
sbb
inc
insb
cmp
imul
sbb
fldl
lahf
add
test
xchg
ret
inc
call
mov
adc
mov
sbb
pop
lret
dec
jb
mov
and
call
ljmp
inc
in
pop
jmp
test
decl
mov
jmp
mov
paddusb
push
imul
xor
push
les
adc
stos
mov
pop
sti
push
inc
cwtl
pop
inc
dec
jle
jno
out
sub
mov
daa
ds
sahf
fcoml
jmp
inc
pop
sbb
lock
xchg
mov
dec
lahf
mov
cltd
hlt
mov
push
aam
das
in
jmp
and
js
xor
sub
loop
push
addb
xor
lock
enter
stos
adc
jmp
dec
and
push
add
mov
xorl
jp
das
scas
xor
dec
push
xor
fwait
or
testl
lock
pop
or
push
aas
jg
das
mov
dec
mov
inc
push
jne
out
movsb
inc
jae
pop
jb
xchg
sahf
xchg
and
andb
cmp
scas
xchg
push
into
jne
xchg
bound
int3
mov
stc
testb
sub
cmp
popf
out
xorb
inc
js
out
or
je
mov
inc
mov
mov
mov
out
push
pop
push
fildl
test
cmp
shlb
daa
dec
shl
in
xor
jl
jns
and
fnstsw
in
arpl
fnstenv
sub
imul
xchg
xchg
mov
lret
sbb
or
push
adc
movsb
fadd
mov
mov
mov
inc
repnz
aaa
sti
push
aad
inc
sub
jge
pop
push
sbb
pop
das
shl
and
fld
mov
push
ficomps
and
data16
or
pushf
lds
dec
js
or
adc
jl
pmulhuw
mov
and
jmp
xlat
mov
sbb
add
setb
lahf
mov
mov
cmc
mov
int3
loopne
cld
fs
xchg
adc
cmp
icebp
jae
jno
aas
push
xor
xchg
and
outsl
jge
pusha
push
sbb
push
cmp
dec
fstps
or
aas
fcompl
mov
call
test
mov
jp
mov
in
pop
sub
fldl
sti
je,pt
ljmp
mulb
call
xor
leave
imul
outsl
leave
push
mov
jbe
into
mov
mov
icebp
flds
imul
repz
push
leave
lea
mov
scas
mov
jne
ss
or
mov
lret
fistl
or
or
jns
lahf
xchg
lods
mov
outsb
ret
aad
ror
mov
enter
jmp
push
cmp
mov
sbb
cmp
mov
test
fwait
lret
push
add
fidivs
sarb
cli
mov
lods
jl
push
enter
mov
lods
pop
sbb
xor
lds
sub
popa
pmullw
mov
lods
movsb
mov
mov
adc
or
aad
mov
jecxz
insl
cmp
cmpsb
repnz
std
jecxz
int3
dec
sub
mov
jb
xor
imul
sub
pop
pop
sbb
frstor
xchg
add
inc
dec
stos
aad
sub
ret
psrlq
sbb
mov
jp
sub
out
cli
imul
outsb
xchg
mov
stc
cli
push
xor
push
inc
xorl
insl
mov
lret
push
push
inc
out
dec
mov
mov
lods
jmp
sbb
cmp
push
stc
jg
ss
mov
inc
mov
adc
mov
imul
sub
lds
dec
xchg
insb
enter
imul
stos
jb
js
orb
cmp
icebp
aad
cld
jle
es
shll
cld
jns
out
lahf
mov
flds
lods
mov
clc
insb
xor
imul
mov
push
fiaddl
hlt
lock
pop
pop
mov
bound
int3
jge
inc
mov
jp
test
push
add
mov
pop
mov
jno
adc
mov
rcll
test
mov
fs
insb
pop
stos
dec
dec
fwait
testl
loop
xlat
pop
dec
inc
mov
mov
mov
cmp
les
xor
inc
mov
outsl
sti
mov
mov
js
push
inc
cwtl
mov
pop
imul
sahf
inc
rclb
shrl
stos
inc
addr16
fiadds
imul
jbe
jp
arpl
push
aam
cmpsl
mov
xor
cwtl
in
sti
cmp
cmp
das
movsb
test
adc
insl
fsubl
loop
adc
stos
test
call
add
fwait
mov
mov
clc
lret
mov
add
sub
movsl
jo
pop
call
and
push
cmpsb
jg
ret
lock
push
or
es
adc
xchg
repnz
repz
sub
push
fdivrp
mov
fs
faddp
inc
repnz
adc
imul
jb
sub
dec
or
pop
or
or
fstp
jecxz
rcl
dec
push
and
ss
movsb
pop
outsb
les
push
mov
sub
push
jl
jo
sbb
aad
sub
into
and
popf
ss
push
xchg
imul
cmp
jmp
or
sub
inc
xchg
push
lcall
or
mov
mov
mov
or
add
sub
sub
jb
in
lods
dec
sarl
imul
adc
adc
icebp
cmpsl
sbb
movsl
outsl
lret
rcr
fdivr
insb
adc
push
mov
hlt
cmc
andb
ret
mov
cli
ret
aaa
fldcw
dec
sbb
cld
sarl
call
pop
mov
inc
push
test
aad
lret
sbbl
jmp
sahf
xor
aaa
imulb
cmpsl
ss
shlb
fsubs
xor
and
popa
sbb
cmp
xor
cmp
test
mov
mov
lcall
fs
and
cmp
enter
jae
mov
pop
push
loopne
jmp
mov
jbe
mov
ja
xchg
or
mov
jg
mov
sbb
gs
xor
lods
mov
scas
fdivrs
cltd
mov
mov
ror
xchg
popl
jno
sbbl
lret
std
scas
mov
mov
mov
dec
les
mov
movsl
cmpsb
inc
iret
add
and
sahf
jno
push
push
ud1
adc
into
in
out
fnsave
pop
mov
and
push
insl
and
cmc
cmpl
xchg
test
sbb
test
in
int3
sub
lcall
and
ret
imul
lods
jg
mov
lds
xchg
jl
xchg
cmp
add
jae
jbe
mov
in
xchg
int
int3
loopne
and
pop
jmp
push
addr16
out
pop
arpl
or
enter
cmp
pushf
into
icebp
aad
outsb
mov
jns
stos
adcl
xchg
stos
int
mov
pop
pop
inc
repz
fwait
test
or
add
dec
add
or
in
clc
fisubl
in
ss
in
mov
and
inc
clc
les
sub
mov
xchg
adc
jns
out
xchg
xchg
nop
jge
shrb
mov
push
mov
popa
hlt
mov
mov
jl
xchg
jns
sub
shr
out
aam
out
gs
dec
add
xchg
subb
test
roll
sbb
xchg
mov
xor
in
scas
mov
push
jmp
cld
or
mov
dec
jbe
in
sahf
jecxz
mov
mov
aaa
add
insb
in
pop
mov
pusha
daa
mov
mov
xor
nop
dec
xor
mov
not
stc
xor
enter
test
mov
rclb
imul
xchg
fs
fnsave
xchg
push
shll
mov
xchg
std
adc
or
aas
mov
movsl
jno
push
xor
jno
lret
and
icebp
stc
pop
jbe
xchg
pushf
test
adc
push
enter
or
mov
decb
push
jb
daa
adc
adc
lsl
xchg
push
jbe
sub
js
test
outsb
xor
iret
mov
loop
push
pop
jne
mov
mov
mov
inc
fs
jge
jnp
dec
das
or
mov
add
cmpsb
movsl
ss
outsb
lret
mov
sub
xor
dec
scas
push
xorl
inc
decl
or
fnsave
in
lds
in
dec
scas
add
leave
mov
popa
jns
daa
lds
cltd
dec
pop
js
shl
xor
jg
dec
push
orl
stos
rep
jle
fmuls
imul
adc
aad
pop
aad
fsubs
or
arpl
mov
jl
outsb
aad
mov
adc
mov
hlt
shlb
dec
dec
jle
enter
cwtl
dec
gs
ljmp
fs
clc
add
adc
xchg
cli
pop
loope
cmpsl
mov
les
shl
jbe
jne
popf
shl
push
arpl
mov
mov
and
mov
test
inc
cli
inc
jmp
shr
pop
mov
inc
push
adc
sbb
sub
pushf
cmp
adc
sub
fisttpll
jge
fldl
xchg
or
inc
dec
stc
lds
pop
mov
out
out
popa
lahf
subb
popf
sahf
mov
mov
xchg
aad
pop
mov
mov
repnz
mov
fs
sbb
js
rol
add
fisubrs
test
ss
repnz
lret
mov
jge
ds
insl
mull
sahf
pop
inc
jae
push
mov
mov
test
add
icebp
in
test
sahf
aad
dec
xchg
stos
jmp
jo
xor
gs
ja
push
jg
sbb
popa
dec
cmp
jecxz
test
movsb
es
mov
out
gs
fldcw
fcoms
adc
push
inc
dec
fmul
into
pop
add
mov
popf
sub
shlb
imul
sbb
sbb
mov
inc
sti
ret
push
jbe
jmp
call
stos
cmp
ss
sub
out
mov
cmp
jno
pop
sbb
popa
sbb
ds
jae
addr16
inc
dec
dec
and
push
inc
das
push
cmp
lds
jle
test
or
daa
je
and
mov
test
mov
jbe
mov
into
movl
xchg
bound
inc
lret
jns
jo
or
lcall
incb
inc
aad
add
dec
xchg
adc
call
jnp
xor
and
lret
scas
mov
mov
andb
popf
add
imul
xchg
push
andl
sub
inc
fldt
xchg
cmpsl
loope
lods
pushl
cmp
lcall
sarb
call
or
mov
mov
add
testb
push
pop
sub
sarb
and
push
outsb
sub
jb
and
clc
mov
scas
mov
mov
mov
insl
xlat
xor
out
pop
cmp
sub
outsl
sarb
jmp
jo
sbb
add
or
mov
push
fsts
mov
aas
jl
ja
addb
stos
xchg
rclb
ret
daa
xchg
ss
push
or
cmp
or
lea
cld
movsl
addr16
inc
pop
popa
test
jb
js
jge
push
dec
out
xchg
sbb
inc
adc
add
lret
mov
xor
test
loope
cmpb
inc
mov
dec
inc
dec
mov
dec
push
into
xchg
test
mov
ret
ja
push
pop
pop
leave
cmpsb
nop
xor
dec
in
hlt
loop
cmp
das
leave
orl
pop
xchg
lret
ljmp
inc
pop
dec
repz
ljmp
iret
jg
pop
add
pop
out
mov
sub
push
adc
lods
xor
cmp
enter
out
xchg
pop
in
mov
xor
cmp
push
rorb
bound
shrl
or
mov
xor
xchg
jge
imul
clc
dec
clc
dec
add
cld
and
cmc
jmp
jl
push
cmpb
repz
daa
pop
dec
push
and
add
es
clc
add
repnz
mulb
in
stc
mov
mov
push
lds
pop
dec
aaa
xchg
aaa
scas
jge
sub
cs
cmp
cli
and
push
lcall
or
inc
mov
xchg
jp
ja
pop
repnz
repz
pop
out
ret
pop
pop
scas
loope
hlt
adc
inc
sbb
es
enter
add
and
fnstcw
xor
inc
fisttpl
jnp
lods
push
rcr
ds
out
nop
xor
mov
jl
dec
mov
movntps
xchg
cltd
mov
gs
xor
imul
fwait
dec
fldl
loope
or
testb
fmuls
iret
mov
cli
repz
sub
pop
sub
add
jge
add
lods
pusha
sbb
test
adc
adc
imul
fmuls
mov
insl
js
dec
jge
push
mov
das
ljmp
dec
ljmp
and
test
in
xchg
dec
jno
incl
sbb
cmp
xchg
insl
repnz
mov
daa
cmpsl
push
mov
lods
sbb
add
or
push
inc
loopne
nop
cmp
fldl
push
cmp
push
sbb
dec
cwtl
xchg
or
inc
clc
sbb
fildll
sbb
int3
inc
xchg
lock
shlb
xor
pop
cmp
rolb
cmc
add
dec
push
orb
flds
clc
xchg
mov
lock
xchg
rolb
fcoms
pop
xlat
sub
adc
or
popf
xor
xchg
xchg
cmc
das
xor
data16
fcoml
decl
mov
std
sbb
sarb
xor
push
pop
jno
jnp
mov
shlb
xor
dec
aad
dec
inc
mov
bound
pop
stos
insl
cwtl
mov
fs
xchg
or
cmpsb
pop
mov
into
in
jbe
push
mov
mov
and
pop
imul
and
dec
mov
js
gs
call
in
sar
sbb
push
jb
sbb
jle
dec
mov
xchg
jp
int
ja
test
call
inc
repnz
lret
push
imul
aas
mov
dec
pop
out
dec
cmpsl
pop
or
leave
movsl
mov
or
fidivrs
jl
fldenv
imul
inc
sub
stos
movsl
jns
mov
mov
bound
lahf
sub
mov
jns
pop
or
dec
jno
or
mov
pop
sahf
mov
pop
mov
and
push
frstor
shrl
and
jmp
mov
pop
cli
rcrb
sub
mov
or
xor
push
sub
les
subb
div
into
jge
lcall
in
xor
clc
aaa
cmp
sbb
gs
test
jb
inc
loop
mov
add
imul
mov
adc
xor
sbb
jecxz
leave
or
cmp
lods
je
call
fwait
bound
add
fdivrl
invlpg
pusha
imul
dec
test
cmp
pop
dec
mov
and
loopne
push
xor
push
pop
rol
sbb
dec
mov
add
in
std
inc
popf
pop
push
test
fs
cmc
mov
or
sub
leave
add
mov
sahf
or
add
jle
mov
adc
insb
ret
ret
xchg
add
push
mov
ss
adc
cs
jne
insl
or
mov
sbb
xchg
push
lea
test
hlt
dec
in
pop
decb
clc
sbb
or
mov
ds
clc
dec
and
pushf
pop
lods
fucomip
ljmp
sub
pop
jp
test
xor
add
add
or
mov
xchg
adc
inc
push
daa
jg
pop
icebp
or
sarl
dec
mov
sub
inc
testl
fucomip
nop
xchg
aas
inc
mov
popa
mov
mov
mov
in
jmp
maxps
add
test
lret
mov
sbb
mov
jmp
adc
ljmp
test
mov
push
lcall
aam
ja
stc
rolb
rcll
mov
test
fs
lds
pop
push
inc
fimull
jne
push
lret
arpl
test
inc
sbb
and
xor
xchg
sub
mov
mov
add
fwait
xchg
lret
mov
rorl
lds
sahf
mov
nop
dec
cld
es
loop
mov
fsubs
es
ja
or
pop
dec
int3
adc
or
jge
dec
jbe
aaa
xchg
out
push
inc
adc
fs
push
inc
mov
lcall
xchg
sbb
aaa
cmp
pop
das
in
mov
gs
leave
cld
pop
xchg
je
inc
repz
adc
sub
add
mov
or
push
push
mov
and
xlat
daa
pop
push
inc
adc
ret
out
xchg
dec
stc
xchg
sbb
pop
sbb
cmp
xchg
in
add
pushf
xchg
or
aas
call
sub
jl
jge
int3
add
pop
dec
ljmp
mov
outsb
or
ds
mov
pop
out
cltd
and
mov
inc
test
sbb
pop
cmp
push
sbb
adc
ja
xor
testl
mov
mov
adc
mov
mov
hlt
fdivrs
pushf
stc
pop
rorl
movsl
pop
xor
cmp
adc
gs
and
clc
push
mov
scas
call
xor
adc
daa
sti
imul
add
fadd
mov
cmc
cmpsl
out
mov
xchg
out
ror
mov
clc
call
jbe
popw
jmp
mov
push
inc
mov
push
les
xchg
adc
sub
mov
scas
nop
sub
push
pop
dec
es
mov
xor
sub
or
dec
lahf
dec
mov
leave
js
lcall
call
aad
divb
pop
xchg
ffreep
push
lods
or
cmp
sahf
ljmp
outsl
dec
ficomps
std
jmp
inc
arpl
int
sti
jmp
lret
pop
pop
adcl
sar
sub
cmp
decb
es
movsl
packuswb
cltd
jp
ljmp
lods
addr16
aaa
mul
lea
cmp
mov
mov
xor
in
inc
push
aas
mov
aas
and
pop
mov
iret
xor
popf
adc
icebp
add
sbb
sub
jo
lods
cmp
movsl
sbb
xchg
mov
jbe
jecxz
xor
pushf
xchg
hlt
or
ror
xor
lcall
pop
cli
stos
addl
inc
mov
adc
jnp
xchg
adc
push
and
push
ftst
lods
pusha
movsl
adc
pop
repz
sub
push
cmp
out
aam
mov
das
sub
lcall
mov
lcall
mov
or
push
inc
mov
aad
or
mov
mov
mov
jne
mov
jae
mov
insb
mov
shll
jp
adc
pop
jno
xchg
ja
loope
into
aam
dec
popf
shl
jne
repz
pop
das
jl
rclb
xor
imul
cmpsb
ds
cmpsl
leave
mov
push
inc
jp
add
lahf
lods
loope
push
mov
lret
in
dec
fcoml
popa
xor
or
cmovbe
mov
pop
cmpsl
gs
fimull
xchg
filds
or
daa
mov
jg
push
fs
rorl
int3
xchg
loop
loop
adc
shrb
sbb
je
cli
push
add
sub
sbb
pushf
andb
cs
jge,pn
dec
in
sti
add
xchg
add
dec
addb
cmp
xor
aaa
movl
jecxz
lods
mov
xor
out
les
sbbl
push
pushf
das
or
iret
cli
stos
repz
cmp
jbe
push
int
negb
push
and
xchg
and
fwait
shlb
xor
dec
lods
push
push
divl
jg
arpl
pusha
and
fs
jae
les
jl
push
out
dec
pop
sbb
sub
into
and
sbb
fs
adc
ja
mov
mov
ret
sub
cli
pop
pop
mov
pusha
das
cmp
aas
mov
int
scas
xlat
add
ficoms
test
mov
lods
cmp
jl
js
pushf
dec
add
dec
jae
ljmp
jmp
cmp
jnp
popa
push
mov
int3
sub
sbb
adc
xchg
cwtl
test
test
cld
add
arpl
adc
repnz
fdivl
imul
sbb
js
pop
in
out
outsl
and
xor
inc
arpl
ss
popf
jmp
rcll
sub
popa
and
xor
xor
cmp
jbe
jl
cmp
fsubrs
push
scas
leave
fcoml
mov
sub
clc
ja
js
repz
jle
jae
aam
scas
stc
and
enter
test
xchg
jle
lret
test
adc
fsin
pop
lds
cmp
jge
lahf
addr16
cmp
jp
loope
repnz
pop
bound
lret
mov
clc
pop
fwait
inc
push
fbld
xchg
adc
fstpl
cmpsb
lahf
jge
lock
mov
mov
adc
cld
cwtl
test
aaa
sbb
xchg
sbb
and
jne
in
pop
mov
add
sbb
mov
int3
mov
loopne
pop
adc
dec
inc
lret
push
popa
add
leave
adc
in
xchg
stos
xor
xchg
or
cmp
roll
xchg
xchg
sbb
jg
jmp
ret
ss
mov
mov
mov
dec
dec
dec
pushf
cli
jmp
xor
bound
movsb
pop
sub
push
sti
xchg
leave
das
jae
dec
mov
cwtl
fsubrs
pop
push
lret
in
sub
xor
fildl
cmp
add
je
push
in
ss
jbe,pt
xchg
xlat
push
jb
add
fmuls
pop
xorl
insb
mov
xchg
inc
mov
clc
sbb
je
cmpsb
aam
getsec
mov
ret
sub
cmp
aam
or
xchg
leave
push
pop
in
hlt
testb
jg
mov
dec
dec
mov
mov
rcrb
mov
fimuls
popa
repnz
jbe
mov
cwtl
mov
cli
ret
xor
sub
in
loopne
mov
in
cld
sti
sahf
or
outsb
push
rcrl
icebp
mov
lea
jne
push
es
and
pop
adc
cmc
push
jl
mov
push
ljmp
ret
cltd
push
sbb
push
sti
pop
inc
add
mov
jp
aaa
repz
adc
sub
lret
std
mov
xchg
cli
or
jge
pusha
enter
insb
mov
stos
call
or
outsl
mov
pop
sbb
pusha
fcmovb
dec
push
jge
bnd
sbb
mov
xor
ja
or
sbb
daa
cmp
pop
cmp
cmpsl
pop
jae
scas
jg
sbb
aam
pop
cli
xchg
mov
popa
cmp
dec
jno
fisttpl
test
imul
xchg
push
xor
push
out
or
loope
xchg
xor
pop
das
and
nop
popf
dec
jg
cli
sub
in
out
inc
adc
test
movsl
cli
inc
mov
xor
mov
and
sar
in
push
test
add
mov
jno
ja
scas
jge
pop
rol
push
pop
js
dec
fcoms
xor
push
xor
pop
pop
imul
xchg
lds
aas
ljmp
scas
fwait
and
xlat
or
cmp
and
out
in
or
mov
aam
mov
or
out
adc
push
dec
and
cwtl
cmp
les
loopne
out
dec
push
mov
mov
add
je
inc
jbe
cld
pop
or
testl
jmp
xor
imul
fwait
cmp
addr16
mov
fidivl
rclb
lods
adcl
or
fstl
clc
rcpps
cltd
outsb
add
test
ss
push
cmp
lods
lea
clc
sbb
and
jb
xchg
add
loop
bound
xorl
mov
out
cmpl
dec
adc
or
fsubrp
jnp
fistps
jb
flds
push
xchg
xor
xor
jecxz
jno
test
icebp
fildl
test
cmp
add
pop
mov
repnz
push
mov
dec
push
push
mov
out
mov
outsl
adc
into
jl
insb
mov
inc
repnz
pop
xchg
jg
or
dec
scas
inc
int
ficoml
inc
pop
int3
mov
push
xchg
aam
hlt
and
mov
dec
scas
call
mov
or
test
dec
shr
sub
fnstenv
push
jecxz
sbb
nop
pop
and
sbb
fs
mov
xor
dec
mov
or
loope
pop
lods
cmp
xchg
ficomps
push
outsb
mov
sub
adc
add
xor
aaa
xor
pop
sti
call
pop
or
add
and
call
icebp
jne
sub
xchg
mov
sub
jg
jge
xchg
nop
mov
sub
cmp
sbb
pop
sti
xchg
jno
xor
mov
dec
sbb
loopne
pusha
dec
inc
sbbl
xor
add
inc
dec
push
bnd
mov
js
mov
je
jle
cmp
test
or
pop
inc
mov
fwait
test
pop
into
cwtl
xchg
push
pop
and
das
add
push
cmpsl
in
ret
lods
in
sbb
loope
out
bound
andnps
mov
add
bound
data16
mov
mov
iret
xor
repz
negl
sbb
push
sub
insl
xor
aaa
fimull
pop
lcall
in
cmp
jo
mov
inc
outsl
sub
mov
into
iret
pop
jle
pop
xor
pusha
cmp
insl
xchg
jae
rolb
cmpl
lea
andb
out
jno
jo
adc
inc
dec
add
mov
jl
mov
push
js
test
lock
inc
rorl
les
pop
sub
push
outsl
jns
leave
pop
mov
push
sub
xlat
xchg
dec
out
int
mov
lcall
daa
pop
call
daa
loopne
mov
les
dec
add
jbe
test
adc
mov
lods
pop
and
lret
aad
jae
or
cltd
sbb
sub
sub
lret
mov
ret
jb
test
push
dec
pop
rcl
pop
movsb
mov
lahf
test
cmp
ljmp
cmpl
add
add
outsb
es
dec
sbb
jno
dec
jg
sub
into
loop
in
mov
mov
mov
scas
test
jge
in
mov
sbb
add
outsb
xchg
mov
rorb
inc
xchg
cli
stc
mov
icebp
test
and
xor
arpl
scas
add
cmpsl
shll
scas
outsl
adc
sbb
push
outsb
jno
xchg
leave
lds
stos
mov
rcr
inc
push
in
outsl
inc
jnp
mov
mov
jl
cmp
gs
imul
cmp
insb
mov
insb
or
mov
xor
mov
pop
mov
adc
divps
insl
in
push
dec
sarl
stc
lea
fstpt
imull
cmp
movb
inc
cmp
fwait
inc
loop
jmp
sub
dec
rclb
loop
lea
add
shlb
sub
sbb
outsb
lret
mov
ss
in
mov
inc
and
inc
mov
and
pushf
popa
shlb
fwait
mov
xchg
inc
xchg
out
int3
sub
insl
hlt
xchg
add
rol
and
call
ja
or
mov
xchg
mov
shlb
and
sbb
push
push
inc
add
and
or
xchg
sbb
mov
outsb
mov
inc
pop
or
mov
push
mov
jg
mov
imul
int
push
data16
xchg
jno
dec
popf
out
les
dec
insb
cltd
add
cld
xchg
mov
out
dec
enter
mov
mov
lret
cmp
fwait
repz
lock
ds
imul
sahf
jl
sbb
iret
adc
sbb
out
jge
inc
pushf
outsb
data16
cwtl
mov
inc
inc
js
mov
dec
and
negl
addr16
xor
xchg
aam
sub
out
xor
das
jp,pt
and
movsl
aad
mov
xor
inc
jl
adc
into
out
add
dec
lret
jmp
fwait
ret
fs
fisubrs
mov
out
dec
jmp
mov
dec
bound
add
out
scas
add
jnp
fsubrs
pop
iret
mov
xlat
lods
aaa
mov
cmp
mov
jae
inc
jns
std
adc
testb
shll
and
jnp
xorl
mov
xchg
pop
adc
mov
adc
je
push
jnp
mov
icebp
insb
xchg
push
ret
insb
sub
xchg
cli
mov
xchg
out
mov
cwtl
cmpsb
test
xchg
out
inc
bndldx
lock
xchg
out
cmp
pop
cmc
dec
pop
subpd
inc
push
clc
shlb
xchg
std
pop
hlt
or
sbb
inc
mov
sub
xchg
rorl
iret
xchg
jo
enter
pop
adc
arpl
xchg
mov
ljmp
mov
pop
arpl
bound
iret
jg
aam
jne
ja
xchg
mov
lret
in
push
lcall
sub
popa
loopne
add
jb
and
outsb
inc
mov
imul
lcall
sub
dec
push
int3
and
or
inc
inc
test
cmc
scas
push
sbb
sub
lcall
jg
inc
andl
sbb
jb
sbb
fwait
test
test
jmp
mov
fwait
adc
and
cltd
loope
jmp
pop
aaa
jg
fst
or
aam
dec
nop
out
sti
scas
lret
ret
notb
push
pusha
inc
hlt
mov
pop
inc
cmp
clc
inc
push
rcr
jmp
inc
push
cwtl
pop
cmp
xor
mov
sub
insl
out
push
out
les
dec
lcall
je
shlb
lcall
lods
add
mov
or
pop
addl
push
dec
xchg
sub
decb
rclb
mov
xchg
fsubrl
or
test
movsl
push
push
adc
jge
xchg
stc
xor
push
std
scas
jmp
call
sub
lea
pop
jp
insb
inc
adc
dec
pop
movsl
daa
push
mov
ret
xchg
decl
push
dec
xchg
inc
dec
push
into
sbb
push
int3
scas
insb
in
cmpsl
cmp
dec
jmp
ljmp
call
xlat
adc
dec
sbb
out
mov
subb
jae
mov
lods
gs
int
and
adc
xor
sub
aaa
or
adc
pop
and
dec
int
pop
jns
and
and
rorb
into
dec
push
ljmp
pop
cmp
test
push
jg
mov
in
mov
arpl
xchg
les
dec
inc
loopne
push
xorb
std
cmp
mov
jns
cmp
lret
ret
jecxz
in
or
movsb
jg
pusha
adc
lds
stos
flds
cld
push
sar
lea
lock
and
out
shr
pusha
mov
nop
mov
fwait
xor
fwait
xchg
or
pop
xchg
into
fistps
sub
push
jle
mov
cli
dec
stos
push
lds
dec
mov
mov
and
add
push
mov
stos
dec
pop
xor
jecxz
cltd
jmp
dec
cs
mov
or
sub
mov
jmp
enter
and
pushf
sub
movsb
push
dec
xlat
and
mov
fmul
mov
jle
lcall
sbb
pop
mov
xchg
sarb
int
lret
jb
add
stc
sbb
inc
jmp
mov
mov
add
mov
sti
cmp
adc
or
loope
inc
dec
rorb
push
pop
outsl
add
ja
push
insl
test
xor
sub
push
pop
cli
pop
in
in
repz
xchg
cli
xor
sub
xchg
ss
xor
out
subb
mov
push
outsl
mov
xchg
popf
les
inc
addr16
addr16
push
xchg
cwtl
xor
xchg
lahf
jns
in
scas
cmp
das
mov
mov
xor
imul
push
in
pop
cmp
shll
mov
fldcw
jns
nop
inc
mov
push
repz
call
sub
cmp
movsb
or
data16
jecxz
icebp
iret
jl
xor
jo
inc
and
xchg
dec
test
bound
cmovp
stos
arpl
sub
cmpsb
xchg
and
out
mov
xlat
xor
scas
call
in
jne
insl
or
mov
cltd
js
lcall
mov
bound
pop
or
or
inc
and
lds
inc
dec
sbb
clc
xor
subl
fsubrl
xor
or
je
mov
je
dec
bound
or
pop
movsb
inc
movl
addr16
push
cltd
jg
enter
stc
prefetch
bound
mov
push
xlat
inc
cmpsb
push
xor
jns
adc
out
and
fs
xchg
adcl
xchg
pop
cmp
stc
dec
mov
gs
pop
icebp
cmp
pop
leave
fldcw
js
sbb
loopne
jge
lock
sbb
outsl
inc
inc
mov
mov
movsl
insl
xchg
shlb
sub
cmp
fucomp
mov
add
shlb
jnp
and
cmp
enter
jo
inc
or
or
testb
cli
pop
lahf
std
jno
in
out
js
xchg
pop
push
inc
mov
neg
es
jae
inc
dec
stos
jb
cmp
mov
add
sbb
mov
inc
xchg
push
jmp
mov
push
inc
jmp
jne
xchg
xchg
push
pop
xchg
testl
test
loop
and
or
aas
int
popf
jmp
mov
xor
aaa
and
loopne
mov
xor
adc
fdivl
xor
cmpsl
adc
mov
and
lahf
adc
dec
pop
je
in
mov
sti
mov
inc
lcall
dec
nop
add
push
mov
ret
dec
scas
push
shll
jge
movsb
pushf
dec
ret
push
mov
das
dec
sbb
repz
imul
ret
iret
jmp
adc
inc
jp
ds
clc
xchg
hlt
sbb
into
in
dec
test
cli
les
pop
mov
xor
shl
xchg
loope
rorl
iret
jg
dec
lock
mov
call
repnz
lds
mov
mov
inc
sbb
xchg
out
mov
and
movsb
or
sub
cmpsl
test
sbb
mov
inc
and
fsts
es
repz
ljmp
in
or
push
xchg
pushf
lods
sarb
es
cvtpi2ps
outsb
and
add
xor
lret
insb
frstor
scas
jnp
fbstp
fists
dec
in
test
xor
out
push
pop
mov
mov
jle
js
rcl
shll
sbb
shrb
mov
lret
in
pushf
mov
ja
xchg
std
shll
mov
movsb
jp
out
xor
or
lret
xchg
inc
add
lcall
pop
popf
iret
xlat
inc
mov
inc
push
inc
ret
xchg
into
pop
bnd
test
sahf
stc
inc
pop
pop
jb
adc
lahf
fwait
lods
repnz
mov
mov
loopne
cmp
aas
jecxz
mov
sub
inc
shlb
mov
fadds
mov
sti
pop
xchg
cmpsb
in
in
push
fdivl
pushf
mov
arpl
dec
lods
ud2
sub
test
cmp
mov
sub
push
std
mov
jbe
ret
jecxz
in
jp
mov
push
jecxz
nop
inc
jne
xchg
pop
out
xorl
test
fidivrs
inc
pop
xor
arpl
cmpsl
test
add
cli
test
and
jo
adc
ret
or
rorb
jge
ds
pop
cmp
repnz
jl
adc
fcmovnbe
sub
sbb
rorl
out
stos
cmp
jp
pop
cld
and
push
push
mov
cltd
inc
sbb
mov
jns
decl
cli
mov
xchg
imul
pop
sahf
and
cli
nop
test
inc
jecxz
xchg
into
jmp
xor
sbb
push
int3
sbb
inc
fstpl
movsl
and
sbb
out
sbb
sbb
ss
test
cmp
faddl
mov
push
ljmp
int
test
loope
rolb
shlb
fisubs
lret
cmc
and
orb
cwtl
lcall
and
leave
xor
dec
jo
pusha
push
cmpsb
xor
clc
mov
in
gs
hlt
stc
jo
cs
mov
popa
mov
push
leave
popf
or
loop
hlt
sbb
and
call
mov
mov
dec
je
cmc
sbb
pop
and
cmp
repz
shlb
dec
push
xor
imul
arpl
pand
mov
add
jmp
sahf
sbb
aas
sti
pop
dec
int3
iret
pusha
mov
inc
test
xor
incl
lock
pop
outsb
adc
xor
and
sbb
xor
out
push
dec
xlat
xchg
fwait
mov
fs
sub
jl
pusha
jbe
bound
jno
inc
es
push
mul
dec
lahf
mov
and
ret
or
pop
pop
xchg
orl
xor
xor
inc
jge
xchg
sti
es
mov
repnz
ret
lds
fwait
lds
loopne
dec
dec
xor
rol
inc
cmc
jp
notb
imul
sar
jbe
lock
mov
mov
out
push
xor
xor
cmpsl
mov
std
int
test
out
pushf
jge
pop
js
inc
sti
add
cs
daa
in
mov
fwait
jb
outsl
mov
fldcw
subb
jae
leave
mov
sub
mov
cmp
adc
rcrl
lret
inc
pushf
or
jbe
pop
movsb
insl
enter
xor
test
rcrl
push
or
rclb
js
daa
iret
cmp
add
sti
mov
in
cmp
xchg
pusha
popf
pushf
fstl
mov
bound
xor
arpl
aas
pop
jno
sti
adc
add
push
test
add
iret
pop
mov
imul
push
outsl
jg
jmp
lret
loope
sub
shll
out
xchg
xchg
sub
jb
test
movsl
std
scas
dec
xor
adc
popf
cmp
mov
std
fildll
mov
jmp
sub
sub
or
xchg
jae
es
xor
cs
in
stos
pop
je
push
cmc
push
jns
xor
pop
pop
call
fdivrs
arpl
imul
mov
dec
lock
movsb
lods
adc
inc
gs
mov
dec
push
ss
sbbl
cli
dec
xchg
imul
int
pop
test
inc
out
mov
fcompl
adc
add
adc
test
cmp
cltd
scas
imul
and
test
inc
divb
dec
jmp
imul
mov
mov
or
sub
add
cmp
movsl
mov
sbb
fsubrl
mov
add
cmpsl
js
sbb
mov
xor
cwtl
inc
mov
rorl
push
in
fisubrs
je
scas
addr16
pop
mov
cmp
lods
push
sar
xchg
dec
or
jge
mov
cmp
fdivl
pop
mov
and
mov
xlat
push
into
int3
mov
cli
shrb
mov
mov
loop
inc
das
rolb
ret
jbe
in
gs
leave
xchg
icebp
test
xor
shlb
sbb
mov
cmp
add
stos
mov
loopne
je
ror
sub
cwtl
es
xor
push
stos
leave
